
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004025d0 <.init>:
  4025d0:	stp	x29, x30, [sp, #-16]!
  4025d4:	mov	x29, sp
  4025d8:	bl	4031e4 <ferror@plt+0x4b4>
  4025dc:	ldp	x29, x30, [sp], #16
  4025e0:	ret

Disassembly of section .plt:

00000000004025f0 <_ZGTtnam@plt-0x20>:
  4025f0:	stp	x16, x30, [sp, #-16]!
  4025f4:	adrp	x16, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4025f8:	ldr	x17, [x16, #4088]
  4025fc:	add	x16, x16, #0xff8
  402600:	br	x17
  402604:	nop
  402608:	nop
  40260c:	nop

0000000000402610 <_ZGTtnam@plt>:
  402610:	adrp	x16, 4a8000 <_ZGTtnam>
  402614:	ldr	x17, [x16]
  402618:	add	x16, x16, #0x0
  40261c:	br	x17

0000000000402620 <memcpy@plt>:
  402620:	adrp	x16, 4a8000 <_ZGTtnam>
  402624:	ldr	x17, [x16, #8]
  402628:	add	x16, x16, #0x8
  40262c:	br	x17

0000000000402630 <memmove@plt>:
  402630:	adrp	x16, 4a8000 <_ZGTtnam>
  402634:	ldr	x17, [x16, #16]
  402638:	add	x16, x16, #0x10
  40263c:	br	x17

0000000000402640 <ngettext@plt>:
  402640:	adrp	x16, 4a8000 <_ZGTtnam>
  402644:	ldr	x17, [x16, #24]
  402648:	add	x16, x16, #0x18
  40264c:	br	x17

0000000000402650 <gzclose@plt>:
  402650:	adrp	x16, 4a8000 <_ZGTtnam>
  402654:	ldr	x17, [x16, #32]
  402658:	add	x16, x16, #0x20
  40265c:	br	x17

0000000000402660 <fwrite_unlocked@plt>:
  402660:	adrp	x16, 4a8000 <_ZGTtnam>
  402664:	ldr	x17, [x16, #40]
  402668:	add	x16, x16, #0x28
  40266c:	br	x17

0000000000402670 <strtoul@plt>:
  402670:	adrp	x16, 4a8000 <_ZGTtnam>
  402674:	ldr	x17, [x16, #48]
  402678:	add	x16, x16, #0x30
  40267c:	br	x17

0000000000402680 <strlen@plt>:
  402680:	adrp	x16, 4a8000 <_ZGTtnam>
  402684:	ldr	x17, [x16, #56]
  402688:	add	x16, x16, #0x38
  40268c:	br	x17

0000000000402690 <fputs@plt>:
  402690:	adrp	x16, 4a8000 <_ZGTtnam>
  402694:	ldr	x17, [x16, #64]
  402698:	add	x16, x16, #0x40
  40269c:	br	x17

00000000004026a0 <mbstowcs@plt>:
  4026a0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026a4:	ldr	x17, [x16, #72]
  4026a8:	add	x16, x16, #0x48
  4026ac:	br	x17

00000000004026b0 <exit@plt>:
  4026b0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026b4:	ldr	x17, [x16, #80]
  4026b8:	add	x16, x16, #0x50
  4026bc:	br	x17

00000000004026c0 <sbrk@plt>:
  4026c0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026c4:	ldr	x17, [x16, #88]
  4026c8:	add	x16, x16, #0x58
  4026cc:	br	x17

00000000004026d0 <strnlen@plt>:
  4026d0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026d4:	ldr	x17, [x16, #96]
  4026d8:	add	x16, x16, #0x60
  4026dc:	br	x17

00000000004026e0 <iconv_close@plt>:
  4026e0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026e4:	ldr	x17, [x16, #104]
  4026e8:	add	x16, x16, #0x68
  4026ec:	br	x17

00000000004026f0 <setbuf@plt>:
  4026f0:	adrp	x16, 4a8000 <_ZGTtnam>
  4026f4:	ldr	x17, [x16, #112]
  4026f8:	add	x16, x16, #0x70
  4026fc:	br	x17

0000000000402700 <readlink@plt>:
  402700:	adrp	x16, 4a8000 <_ZGTtnam>
  402704:	ldr	x17, [x16, #120]
  402708:	add	x16, x16, #0x78
  40270c:	br	x17

0000000000402710 <ftell@plt>:
  402710:	adrp	x16, 4a8000 <_ZGTtnam>
  402714:	ldr	x17, [x16, #128]
  402718:	add	x16, x16, #0x80
  40271c:	br	x17

0000000000402720 <sprintf@plt>:
  402720:	adrp	x16, 4a8000 <_ZGTtnam>
  402724:	ldr	x17, [x16, #136]
  402728:	add	x16, x16, #0x88
  40272c:	br	x17

0000000000402730 <opendir@plt>:
  402730:	adrp	x16, 4a8000 <_ZGTtnam>
  402734:	ldr	x17, [x16, #144]
  402738:	add	x16, x16, #0x90
  40273c:	br	x17

0000000000402740 <__cxa_atexit@plt>:
  402740:	adrp	x16, 4a8000 <_ZGTtnam>
  402744:	ldr	x17, [x16, #152]
  402748:	add	x16, x16, #0x98
  40274c:	br	x17

0000000000402750 <fputc@plt>:
  402750:	adrp	x16, 4a8000 <_ZGTtnam>
  402754:	ldr	x17, [x16, #160]
  402758:	add	x16, x16, #0xa0
  40275c:	br	x17

0000000000402760 <qsort@plt>:
  402760:	adrp	x16, 4a8000 <_ZGTtnam>
  402764:	ldr	x17, [x16, #168]
  402768:	add	x16, x16, #0xa8
  40276c:	br	x17

0000000000402770 <_ITM_RU1@plt>:
  402770:	adrp	x16, 4a8000 <_ZGTtnam>
  402774:	ldr	x17, [x16, #176]
  402778:	add	x16, x16, #0xb0
  40277c:	br	x17

0000000000402780 <snprintf@plt>:
  402780:	adrp	x16, 4a8000 <_ZGTtnam>
  402784:	ldr	x17, [x16, #184]
  402788:	add	x16, x16, #0xb8
  40278c:	br	x17

0000000000402790 <localtime@plt>:
  402790:	adrp	x16, 4a8000 <_ZGTtnam>
  402794:	ldr	x17, [x16, #192]
  402798:	add	x16, x16, #0xc0
  40279c:	br	x17

00000000004027a0 <fclose@plt>:
  4027a0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027a4:	ldr	x17, [x16, #200]
  4027a8:	add	x16, x16, #0xc8
  4027ac:	br	x17

00000000004027b0 <getpid@plt>:
  4027b0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027b4:	ldr	x17, [x16, #208]
  4027b8:	add	x16, x16, #0xd0
  4027bc:	br	x17

00000000004027c0 <nl_langinfo@plt>:
  4027c0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027c4:	ldr	x17, [x16, #216]
  4027c8:	add	x16, x16, #0xd8
  4027cc:	br	x17

00000000004027d0 <fopen@plt>:
  4027d0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027d4:	ldr	x17, [x16, #224]
  4027d8:	add	x16, x16, #0xe0
  4027dc:	br	x17

00000000004027e0 <time@plt>:
  4027e0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027e4:	ldr	x17, [x16, #232]
  4027e8:	add	x16, x16, #0xe8
  4027ec:	br	x17

00000000004027f0 <malloc@plt>:
  4027f0:	adrp	x16, 4a8000 <_ZGTtnam>
  4027f4:	ldr	x17, [x16, #240]
  4027f8:	add	x16, x16, #0xf0
  4027fc:	br	x17

0000000000402800 <open@plt>:
  402800:	adrp	x16, 4a8000 <_ZGTtnam>
  402804:	ldr	x17, [x16, #248]
  402808:	add	x16, x16, #0xf8
  40280c:	br	x17

0000000000402810 <_ITM_addUserCommitAction@plt>:
  402810:	adrp	x16, 4a8000 <_ZGTtnam>
  402814:	ldr	x17, [x16, #256]
  402818:	add	x16, x16, #0x100
  40281c:	br	x17

0000000000402820 <wcswidth@plt>:
  402820:	adrp	x16, 4a8000 <_ZGTtnam>
  402824:	ldr	x17, [x16, #264]
  402828:	add	x16, x16, #0x108
  40282c:	br	x17

0000000000402830 <strncmp@plt>:
  402830:	adrp	x16, 4a8000 <_ZGTtnam>
  402834:	ldr	x17, [x16, #272]
  402838:	add	x16, x16, #0x110
  40283c:	br	x17

0000000000402840 <bindtextdomain@plt>:
  402840:	adrp	x16, 4a8000 <_ZGTtnam>
  402844:	ldr	x17, [x16, #280]
  402848:	add	x16, x16, #0x118
  40284c:	br	x17

0000000000402850 <fileno_unlocked@plt>:
  402850:	adrp	x16, 4a8000 <_ZGTtnam>
  402854:	ldr	x17, [x16, #288]
  402858:	add	x16, x16, #0x120
  40285c:	br	x17

0000000000402860 <_ITM_memcpyRtWn@plt>:
  402860:	adrp	x16, 4a8000 <_ZGTtnam>
  402864:	ldr	x17, [x16, #296]
  402868:	add	x16, x16, #0x128
  40286c:	br	x17

0000000000402870 <__libc_start_main@plt>:
  402870:	adrp	x16, 4a8000 <_ZGTtnam>
  402874:	ldr	x17, [x16, #304]
  402878:	add	x16, x16, #0x130
  40287c:	br	x17

0000000000402880 <strcat@plt>:
  402880:	adrp	x16, 4a8000 <_ZGTtnam>
  402884:	ldr	x17, [x16, #312]
  402888:	add	x16, x16, #0x138
  40288c:	br	x17

0000000000402890 <memset@plt>:
  402890:	adrp	x16, 4a8000 <_ZGTtnam>
  402894:	ldr	x17, [x16, #320]
  402898:	add	x16, x16, #0x140
  40289c:	br	x17

00000000004028a0 <fdopen@plt>:
  4028a0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028a4:	ldr	x17, [x16, #328]
  4028a8:	add	x16, x16, #0x148
  4028ac:	br	x17

00000000004028b0 <calloc@plt>:
  4028b0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028b4:	ldr	x17, [x16, #336]
  4028b8:	add	x16, x16, #0x150
  4028bc:	br	x17

00000000004028c0 <strcasecmp@plt>:
  4028c0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028c4:	ldr	x17, [x16, #344]
  4028c8:	add	x16, x16, #0x158
  4028cc:	br	x17

00000000004028d0 <gmtime@plt>:
  4028d0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028d4:	ldr	x17, [x16, #352]
  4028d8:	add	x16, x16, #0x160
  4028dc:	br	x17

00000000004028e0 <readdir@plt>:
  4028e0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028e4:	ldr	x17, [x16, #360]
  4028e8:	add	x16, x16, #0x168
  4028ec:	br	x17

00000000004028f0 <realloc@plt>:
  4028f0:	adrp	x16, 4a8000 <_ZGTtnam>
  4028f4:	ldr	x17, [x16, #368]
  4028f8:	add	x16, x16, #0x170
  4028fc:	br	x17

0000000000402900 <getpagesize@plt>:
  402900:	adrp	x16, 4a8000 <_ZGTtnam>
  402904:	ldr	x17, [x16, #376]
  402908:	add	x16, x16, #0x178
  40290c:	br	x17

0000000000402910 <strdup@plt>:
  402910:	adrp	x16, 4a8000 <_ZGTtnam>
  402914:	ldr	x17, [x16, #384]
  402918:	add	x16, x16, #0x180
  40291c:	br	x17

0000000000402920 <closedir@plt>:
  402920:	adrp	x16, 4a8000 <_ZGTtnam>
  402924:	ldr	x17, [x16, #392]
  402928:	add	x16, x16, #0x188
  40292c:	br	x17

0000000000402930 <strerror@plt>:
  402930:	adrp	x16, 4a8000 <_ZGTtnam>
  402934:	ldr	x17, [x16, #400]
  402938:	add	x16, x16, #0x190
  40293c:	br	x17

0000000000402940 <close@plt>:
  402940:	adrp	x16, 4a8000 <_ZGTtnam>
  402944:	ldr	x17, [x16, #408]
  402948:	add	x16, x16, #0x198
  40294c:	br	x17

0000000000402950 <strrchr@plt>:
  402950:	adrp	x16, 4a8000 <_ZGTtnam>
  402954:	ldr	x17, [x16, #416]
  402958:	add	x16, x16, #0x1a0
  40295c:	br	x17

0000000000402960 <__gmon_start__@plt>:
  402960:	adrp	x16, 4a8000 <_ZGTtnam>
  402964:	ldr	x17, [x16, #424]
  402968:	add	x16, x16, #0x1a8
  40296c:	br	x17

0000000000402970 <write@plt>:
  402970:	adrp	x16, 4a8000 <_ZGTtnam>
  402974:	ldr	x17, [x16, #432]
  402978:	add	x16, x16, #0x1b0
  40297c:	br	x17

0000000000402980 <fseek@plt>:
  402980:	adrp	x16, 4a8000 <_ZGTtnam>
  402984:	ldr	x17, [x16, #440]
  402988:	add	x16, x16, #0x1b8
  40298c:	br	x17

0000000000402990 <abort@plt>:
  402990:	adrp	x16, 4a8000 <_ZGTtnam>
  402994:	ldr	x17, [x16, #448]
  402998:	add	x16, x16, #0x1c0
  40299c:	br	x17

00000000004029a0 <__overflow@plt>:
  4029a0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029a4:	ldr	x17, [x16, #456]
  4029a8:	add	x16, x16, #0x1c8
  4029ac:	br	x17

00000000004029b0 <gzputs@plt>:
  4029b0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029b4:	ldr	x17, [x16, #464]
  4029b8:	add	x16, x16, #0x1d0
  4029bc:	br	x17

00000000004029c0 <feof@plt>:
  4029c0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029c4:	ldr	x17, [x16, #472]
  4029c8:	add	x16, x16, #0x1d8
  4029cc:	br	x17

00000000004029d0 <fread_unlocked@plt>:
  4029d0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029d4:	ldr	x17, [x16, #480]
  4029d8:	add	x16, x16, #0x1e0
  4029dc:	br	x17

00000000004029e0 <memcmp@plt>:
  4029e0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029e4:	ldr	x17, [x16, #488]
  4029e8:	add	x16, x16, #0x1e8
  4029ec:	br	x17

00000000004029f0 <pthread_once@plt>:
  4029f0:	adrp	x16, 4a8000 <_ZGTtnam>
  4029f4:	ldr	x17, [x16, #496]
  4029f8:	add	x16, x16, #0x1f0
  4029fc:	br	x17

0000000000402a00 <textdomain@plt>:
  402a00:	adrp	x16, 4a8000 <_ZGTtnam>
  402a04:	ldr	x17, [x16, #504]
  402a08:	add	x16, x16, #0x1f8
  402a0c:	br	x17

0000000000402a10 <getopt_long@plt>:
  402a10:	adrp	x16, 4a8000 <_ZGTtnam>
  402a14:	ldr	x17, [x16, #512]
  402a18:	add	x16, x16, #0x200
  402a1c:	br	x17

0000000000402a20 <strcmp@plt>:
  402a20:	adrp	x16, 4a8000 <_ZGTtnam>
  402a24:	ldr	x17, [x16, #520]
  402a28:	add	x16, x16, #0x208
  402a2c:	br	x17

0000000000402a30 <iconv@plt>:
  402a30:	adrp	x16, 4a8000 <_ZGTtnam>
  402a34:	ldr	x17, [x16, #528]
  402a38:	add	x16, x16, #0x210
  402a3c:	br	x17

0000000000402a40 <mmap@plt>:
  402a40:	adrp	x16, 4a8000 <_ZGTtnam>
  402a44:	ldr	x17, [x16, #536]
  402a48:	add	x16, x16, #0x218
  402a4c:	br	x17

0000000000402a50 <strtol@plt>:
  402a50:	adrp	x16, 4a8000 <_ZGTtnam>
  402a54:	ldr	x17, [x16, #544]
  402a58:	add	x16, x16, #0x220
  402a5c:	br	x17

0000000000402a60 <fread@plt>:
  402a60:	adrp	x16, 4a8000 <_ZGTtnam>
  402a64:	ldr	x17, [x16, #552]
  402a68:	add	x16, x16, #0x228
  402a6c:	br	x17

0000000000402a70 <dl_iterate_phdr@plt>:
  402a70:	adrp	x16, 4a8000 <_ZGTtnam>
  402a74:	ldr	x17, [x16, #560]
  402a78:	add	x16, x16, #0x230
  402a7c:	br	x17

0000000000402a80 <dgettext@plt>:
  402a80:	adrp	x16, 4a8000 <_ZGTtnam>
  402a84:	ldr	x17, [x16, #568]
  402a88:	add	x16, x16, #0x238
  402a8c:	br	x17

0000000000402a90 <free@plt>:
  402a90:	adrp	x16, 4a8000 <_ZGTtnam>
  402a94:	ldr	x17, [x16, #576]
  402a98:	add	x16, x16, #0x240
  402a9c:	br	x17

0000000000402aa0 <ungetc@plt>:
  402aa0:	adrp	x16, 4a8000 <_ZGTtnam>
  402aa4:	ldr	x17, [x16, #584]
  402aa8:	add	x16, x16, #0x248
  402aac:	br	x17

0000000000402ab0 <freopen@plt>:
  402ab0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ab4:	ldr	x17, [x16, #592]
  402ab8:	add	x16, x16, #0x250
  402abc:	br	x17

0000000000402ac0 <strchr@plt>:
  402ac0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ac4:	ldr	x17, [x16, #600]
  402ac8:	add	x16, x16, #0x258
  402acc:	br	x17

0000000000402ad0 <_ITM_RU8@plt>:
  402ad0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ad4:	ldr	x17, [x16, #608]
  402ad8:	add	x16, x16, #0x260
  402adc:	br	x17

0000000000402ae0 <fwrite@plt>:
  402ae0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ae4:	ldr	x17, [x16, #616]
  402ae8:	add	x16, x16, #0x268
  402aec:	br	x17

0000000000402af0 <fcntl@plt>:
  402af0:	adrp	x16, 4a8000 <_ZGTtnam>
  402af4:	ldr	x17, [x16, #624]
  402af8:	add	x16, x16, #0x270
  402afc:	br	x17

0000000000402b00 <munmap@plt>:
  402b00:	adrp	x16, 4a8000 <_ZGTtnam>
  402b04:	ldr	x17, [x16, #632]
  402b08:	add	x16, x16, #0x278
  402b0c:	br	x17

0000000000402b10 <fflush@plt>:
  402b10:	adrp	x16, 4a8000 <_ZGTtnam>
  402b14:	ldr	x17, [x16, #640]
  402b18:	add	x16, x16, #0x280
  402b1c:	br	x17

0000000000402b20 <gzopen@plt>:
  402b20:	adrp	x16, 4a8000 <_ZGTtnam>
  402b24:	ldr	x17, [x16, #648]
  402b28:	add	x16, x16, #0x288
  402b2c:	br	x17

0000000000402b30 <strcpy@plt>:
  402b30:	adrp	x16, 4a8000 <_ZGTtnam>
  402b34:	ldr	x17, [x16, #656]
  402b38:	add	x16, x16, #0x290
  402b3c:	br	x17

0000000000402b40 <iconv_open@plt>:
  402b40:	adrp	x16, 4a8000 <_ZGTtnam>
  402b44:	ldr	x17, [x16, #664]
  402b48:	add	x16, x16, #0x298
  402b4c:	br	x17

0000000000402b50 <vsprintf@plt>:
  402b50:	adrp	x16, 4a8000 <_ZGTtnam>
  402b54:	ldr	x17, [x16, #672]
  402b58:	add	x16, x16, #0x2a0
  402b5c:	br	x17

0000000000402b60 <__lxstat@plt>:
  402b60:	adrp	x16, 4a8000 <_ZGTtnam>
  402b64:	ldr	x17, [x16, #680]
  402b68:	add	x16, x16, #0x2a8
  402b6c:	br	x17

0000000000402b70 <read@plt>:
  402b70:	adrp	x16, 4a8000 <_ZGTtnam>
  402b74:	ldr	x17, [x16, #688]
  402b78:	add	x16, x16, #0x2b0
  402b7c:	br	x17

0000000000402b80 <memchr@plt>:
  402b80:	adrp	x16, 4a8000 <_ZGTtnam>
  402b84:	ldr	x17, [x16, #696]
  402b88:	add	x16, x16, #0x2b8
  402b8c:	br	x17

0000000000402b90 <isatty@plt>:
  402b90:	adrp	x16, 4a8000 <_ZGTtnam>
  402b94:	ldr	x17, [x16, #704]
  402b98:	add	x16, x16, #0x2c0
  402b9c:	br	x17

0000000000402ba0 <_ITM_memcpyRnWt@plt>:
  402ba0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ba4:	ldr	x17, [x16, #712]
  402ba8:	add	x16, x16, #0x2c8
  402bac:	br	x17

0000000000402bb0 <asctime@plt>:
  402bb0:	adrp	x16, 4a8000 <_ZGTtnam>
  402bb4:	ldr	x17, [x16, #720]
  402bb8:	add	x16, x16, #0x2d0
  402bbc:	br	x17

0000000000402bc0 <__fxstat@plt>:
  402bc0:	adrp	x16, 4a8000 <_ZGTtnam>
  402bc4:	ldr	x17, [x16, #728]
  402bc8:	add	x16, x16, #0x2d8
  402bcc:	br	x17

0000000000402bd0 <strstr@plt>:
  402bd0:	adrp	x16, 4a8000 <_ZGTtnam>
  402bd4:	ldr	x17, [x16, #736]
  402bd8:	add	x16, x16, #0x2e0
  402bdc:	br	x17

0000000000402be0 <realpath@plt>:
  402be0:	adrp	x16, 4a8000 <_ZGTtnam>
  402be4:	ldr	x17, [x16, #744]
  402be8:	add	x16, x16, #0x2e8
  402bec:	br	x17

0000000000402bf0 <fputs_unlocked@plt>:
  402bf0:	adrp	x16, 4a8000 <_ZGTtnam>
  402bf4:	ldr	x17, [x16, #752]
  402bf8:	add	x16, x16, #0x2f0
  402bfc:	br	x17

0000000000402c00 <__fsetlocking@plt>:
  402c00:	adrp	x16, 4a8000 <_ZGTtnam>
  402c04:	ldr	x17, [x16, #760]
  402c08:	add	x16, x16, #0x2f8
  402c0c:	br	x17

0000000000402c10 <strcspn@plt>:
  402c10:	adrp	x16, 4a8000 <_ZGTtnam>
  402c14:	ldr	x17, [x16, #768]
  402c18:	add	x16, x16, #0x300
  402c1c:	br	x17

0000000000402c20 <vfprintf@plt>:
  402c20:	adrp	x16, 4a8000 <_ZGTtnam>
  402c24:	ldr	x17, [x16, #776]
  402c28:	add	x16, x16, #0x308
  402c2c:	br	x17

0000000000402c30 <printf@plt>:
  402c30:	adrp	x16, 4a8000 <_ZGTtnam>
  402c34:	ldr	x17, [x16, #784]
  402c38:	add	x16, x16, #0x310
  402c3c:	br	x17

0000000000402c40 <__errno_location@plt>:
  402c40:	adrp	x16, 4a8000 <_ZGTtnam>
  402c44:	ldr	x17, [x16, #792]
  402c48:	add	x16, x16, #0x318
  402c4c:	br	x17

0000000000402c50 <getenv@plt>:
  402c50:	adrp	x16, 4a8000 <_ZGTtnam>
  402c54:	ldr	x17, [x16, #800]
  402c58:	add	x16, x16, #0x320
  402c5c:	br	x17

0000000000402c60 <putchar@plt>:
  402c60:	adrp	x16, 4a8000 <_ZGTtnam>
  402c64:	ldr	x17, [x16, #808]
  402c68:	add	x16, x16, #0x328
  402c6c:	br	x17

0000000000402c70 <__xstat@plt>:
  402c70:	adrp	x16, 4a8000 <_ZGTtnam>
  402c74:	ldr	x17, [x16, #816]
  402c78:	add	x16, x16, #0x330
  402c7c:	br	x17

0000000000402c80 <_ZGTtdlPv@plt>:
  402c80:	adrp	x16, 4a8000 <_ZGTtnam>
  402c84:	ldr	x17, [x16, #824]
  402c88:	add	x16, x16, #0x338
  402c8c:	br	x17

0000000000402c90 <pthread_mutex_lock@plt>:
  402c90:	adrp	x16, 4a8000 <_ZGTtnam>
  402c94:	ldr	x17, [x16, #832]
  402c98:	add	x16, x16, #0x340
  402c9c:	br	x17

0000000000402ca0 <syscall@plt>:
  402ca0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ca4:	ldr	x17, [x16, #840]
  402ca8:	add	x16, x16, #0x348
  402cac:	br	x17

0000000000402cb0 <pthread_mutex_unlock@plt>:
  402cb0:	adrp	x16, 4a8000 <_ZGTtnam>
  402cb4:	ldr	x17, [x16, #848]
  402cb8:	add	x16, x16, #0x350
  402cbc:	br	x17

0000000000402cc0 <unlink@plt>:
  402cc0:	adrp	x16, 4a8000 <_ZGTtnam>
  402cc4:	ldr	x17, [x16, #856]
  402cc8:	add	x16, x16, #0x358
  402ccc:	br	x17

0000000000402cd0 <gettext@plt>:
  402cd0:	adrp	x16, 4a8000 <_ZGTtnam>
  402cd4:	ldr	x17, [x16, #864]
  402cd8:	add	x16, x16, #0x360
  402cdc:	br	x17

0000000000402ce0 <fprintf@plt>:
  402ce0:	adrp	x16, 4a8000 <_ZGTtnam>
  402ce4:	ldr	x17, [x16, #872]
  402ce8:	add	x16, x16, #0x368
  402cec:	br	x17

0000000000402cf0 <fgets@plt>:
  402cf0:	adrp	x16, 4a8000 <_ZGTtnam>
  402cf4:	ldr	x17, [x16, #880]
  402cf8:	add	x16, x16, #0x370
  402cfc:	br	x17

0000000000402d00 <__uflow@plt>:
  402d00:	adrp	x16, 4a8000 <_ZGTtnam>
  402d04:	ldr	x17, [x16, #888]
  402d08:	add	x16, x16, #0x378
  402d0c:	br	x17

0000000000402d10 <ioctl@plt>:
  402d10:	adrp	x16, 4a8000 <_ZGTtnam>
  402d14:	ldr	x17, [x16, #896]
  402d18:	add	x16, x16, #0x380
  402d1c:	br	x17

0000000000402d20 <setlocale@plt>:
  402d20:	adrp	x16, 4a8000 <_ZGTtnam>
  402d24:	ldr	x17, [x16, #904]
  402d28:	add	x16, x16, #0x388
  402d2c:	br	x17

0000000000402d30 <ferror@plt>:
  402d30:	adrp	x16, 4a8000 <_ZGTtnam>
  402d34:	ldr	x17, [x16, #912]
  402d38:	add	x16, x16, #0x390
  402d3c:	br	x17

Disassembly of section .text:

0000000000402d40 <_obstack_begin@@Base-0x51434>:
  402d40:	stp	x29, x30, [sp, #-16]!
  402d44:	mov	x0, #0x8                   	// #8
  402d48:	mov	x29, sp
  402d4c:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402d50:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d54:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d58:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d5c:	ldr	x3, [x3, #3744]
  402d60:	ldr	x2, [x2, #3704]
  402d64:	add	x3, x3, #0x10
  402d68:	ldr	x1, [x1, #3976]
  402d6c:	str	x3, [x0]
  402d70:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402d74:	stp	x29, x30, [sp, #-16]!
  402d78:	mov	x0, #0x8                   	// #8
  402d7c:	mov	x29, sp
  402d80:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402d84:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d88:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d8c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402d90:	ldr	x3, [x3, #3912]
  402d94:	ldr	x2, [x2, #3688]
  402d98:	add	x3, x3, #0x10
  402d9c:	ldr	x1, [x1, #3656]
  402da0:	str	x3, [x0]
  402da4:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402da8:	stp	x29, x30, [sp, #-16]!
  402dac:	mov	x0, #0x8                   	// #8
  402db0:	mov	x29, sp
  402db4:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402db8:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402dbc:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402dc0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402dc4:	ldr	x3, [x3, #3616]
  402dc8:	ldr	x2, [x2, #3752]
  402dcc:	add	x3, x3, #0x10
  402dd0:	ldr	x1, [x1, #3896]
  402dd4:	str	x3, [x0]
  402dd8:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402ddc:	stp	x29, x30, [sp, #-16]!
  402de0:	mov	x0, #0x8                   	// #8
  402de4:	mov	x29, sp
  402de8:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402dec:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402df0:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402df4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402df8:	ldr	x3, [x3, #3728]
  402dfc:	ldr	x2, [x2, #3736]
  402e00:	add	x3, x3, #0x10
  402e04:	ldr	x1, [x1, #3808]
  402e08:	str	x3, [x0]
  402e0c:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402e10:	stp	x29, x30, [sp, #-32]!
  402e14:	mov	x29, sp
  402e18:	str	x19, [sp, #16]
  402e1c:	mov	x19, x0
  402e20:	mov	x0, #0x10                  	// #16
  402e24:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402e28:	mov	x1, x19
  402e2c:	mov	x19, x0
  402e30:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  402e34:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402e38:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402e3c:	mov	x0, x19
  402e40:	ldr	x2, [x2, #4000]
  402e44:	ldr	x1, [x1, #3768]
  402e48:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402e4c:	mov	x1, x0
  402e50:	mov	x0, x19
  402e54:	mov	x19, x1
  402e58:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  402e5c:	mov	x0, x19
  402e60:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  402e64:	stp	x29, x30, [sp, #-32]!
  402e68:	mov	x29, sp
  402e6c:	str	x19, [sp, #16]
  402e70:	mov	x19, x0
  402e74:	mov	x0, #0x10                  	// #16
  402e78:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402e7c:	mov	x1, x19
  402e80:	mov	x19, x0
  402e84:	bl	45b5a0 <_obstack_memory_used@@Base+0x7200>
  402e88:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402e8c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402e90:	mov	x0, x19
  402e94:	ldr	x2, [x2, #3904]
  402e98:	ldr	x1, [x1, #4024]
  402e9c:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402ea0:	mov	x1, x0
  402ea4:	mov	x0, x19
  402ea8:	mov	x19, x1
  402eac:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  402eb0:	mov	x0, x19
  402eb4:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  402eb8:	stp	x29, x30, [sp, #-32]!
  402ebc:	mov	x29, sp
  402ec0:	str	x19, [sp, #16]
  402ec4:	mov	x19, x0
  402ec8:	mov	x0, #0x10                  	// #16
  402ecc:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402ed0:	mov	x1, x19
  402ed4:	mov	x19, x0
  402ed8:	bl	45b5d0 <_obstack_memory_used@@Base+0x7230>
  402edc:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402ee0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402ee4:	mov	x0, x19
  402ee8:	ldr	x2, [x2, #3648]
  402eec:	ldr	x1, [x1, #4056]
  402ef0:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402ef4:	mov	x1, x0
  402ef8:	mov	x0, x19
  402efc:	mov	x19, x1
  402f00:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  402f04:	mov	x0, x19
  402f08:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  402f0c:	stp	x29, x30, [sp, #-32]!
  402f10:	mov	x29, sp
  402f14:	str	x19, [sp, #16]
  402f18:	mov	x19, x0
  402f1c:	mov	x0, #0x10                  	// #16
  402f20:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402f24:	mov	x1, x19
  402f28:	mov	x19, x0
  402f2c:	bl	45b600 <_obstack_memory_used@@Base+0x7260>
  402f30:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402f34:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402f38:	mov	x0, x19
  402f3c:	ldr	x2, [x2, #3720]
  402f40:	ldr	x1, [x1, #3816]
  402f44:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402f48:	mov	x1, x0
  402f4c:	mov	x0, x19
  402f50:	mov	x19, x1
  402f54:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  402f58:	mov	x0, x19
  402f5c:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  402f60:	stp	x29, x30, [sp, #-32]!
  402f64:	mov	x29, sp
  402f68:	str	x19, [sp, #16]
  402f6c:	mov	x19, x0
  402f70:	mov	x0, #0x10                  	// #16
  402f74:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402f78:	mov	x1, x19
  402f7c:	mov	x19, x0
  402f80:	bl	45b630 <_obstack_memory_used@@Base+0x7290>
  402f84:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402f88:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402f8c:	mov	x0, x19
  402f90:	ldr	x2, [x2, #3632]
  402f94:	ldr	x1, [x1, #3664]
  402f98:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402f9c:	mov	x1, x0
  402fa0:	mov	x0, x19
  402fa4:	mov	x19, x1
  402fa8:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  402fac:	mov	x0, x19
  402fb0:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  402fb4:	stp	x29, x30, [sp, #-32]!
  402fb8:	mov	x29, sp
  402fbc:	str	x19, [sp, #16]
  402fc0:	mov	x19, x0
  402fc4:	mov	x0, #0x10                  	// #16
  402fc8:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  402fcc:	mov	x1, x19
  402fd0:	mov	x19, x0
  402fd4:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  402fd8:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402fdc:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  402fe0:	mov	x0, x19
  402fe4:	ldr	x2, [x2, #3888]
  402fe8:	ldr	x1, [x1, #3776]
  402fec:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  402ff0:	mov	x1, x0
  402ff4:	mov	x0, x19
  402ff8:	mov	x19, x1
  402ffc:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  403000:	mov	x0, x19
  403004:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  403008:	stp	x29, x30, [sp, #-32]!
  40300c:	mov	x29, sp
  403010:	str	x19, [sp, #16]
  403014:	mov	x19, x0
  403018:	mov	x0, #0x10                  	// #16
  40301c:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  403020:	mov	x1, x19
  403024:	mov	x19, x0
  403028:	bl	45b6b0 <_obstack_memory_used@@Base+0x7310>
  40302c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403030:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403034:	mov	x0, x19
  403038:	ldr	x2, [x2, #3960]
  40303c:	ldr	x1, [x1, #3624]
  403040:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  403044:	mov	x1, x0
  403048:	mov	x0, x19
  40304c:	mov	x19, x1
  403050:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  403054:	mov	x0, x19
  403058:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  40305c:	stp	x29, x30, [sp, #-32]!
  403060:	mov	x29, sp
  403064:	str	x19, [sp, #16]
  403068:	mov	x19, x0
  40306c:	mov	x0, #0x10                  	// #16
  403070:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  403074:	mov	x1, x19
  403078:	mov	x19, x0
  40307c:	bl	45b6e0 <_obstack_memory_used@@Base+0x7340>
  403080:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403084:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403088:	mov	x0, x19
  40308c:	ldr	x2, [x2, #3968]
  403090:	ldr	x1, [x1, #3672]
  403094:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  403098:	mov	x1, x0
  40309c:	mov	x0, x19
  4030a0:	mov	x19, x1
  4030a4:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  4030a8:	mov	x0, x19
  4030ac:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  4030b0:	stp	x29, x30, [sp, #-32]!
  4030b4:	mov	x29, sp
  4030b8:	str	x19, [sp, #16]
  4030bc:	mov	x19, x0
  4030c0:	mov	x0, #0x10                  	// #16
  4030c4:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  4030c8:	mov	x1, x19
  4030cc:	mov	x19, x0
  4030d0:	bl	45b710 <_obstack_memory_used@@Base+0x7370>
  4030d4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4030d8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4030dc:	mov	x0, x19
  4030e0:	ldr	x2, [x2, #3840]
  4030e4:	ldr	x1, [x1, #3712]
  4030e8:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  4030ec:	mov	x1, x0
  4030f0:	mov	x0, x19
  4030f4:	mov	x19, x1
  4030f8:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  4030fc:	mov	x0, x19
  403100:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  403104:	stp	x29, x30, [sp, #-16]!
  403108:	mov	x0, #0x8                   	// #8
  40310c:	mov	x29, sp
  403110:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  403114:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403118:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  40311c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  403120:	ldr	x3, [x3, #3936]
  403124:	ldr	x2, [x2, #4008]
  403128:	add	x3, x3, #0x10
  40312c:	ldr	x1, [x1, #3696]
  403130:	str	x3, [x0]
  403134:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  403138:	stp	x29, x30, [sp, #-32]!
  40313c:	mov	x29, sp
  403140:	stp	x19, x20, [sp, #16]
  403144:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403148:	add	x19, x19, #0xae8
  40314c:	mov	x20, #0x1c00                	// #7168
  403150:	movk	x20, #0x1, lsl #16
  403154:	mov	x0, x20
  403158:	stp	xzr, xzr, [x19]
  40315c:	stp	xzr, xzr, [x19, #16]
  403160:	stp	xzr, xzr, [x19, #32]
  403164:	str	x20, [x19, #64]
  403168:	bl	4027f0 <malloc@plt>
  40316c:	str	x0, [x19, #56]
  403170:	cbz	x0, 403188 <ferror@plt+0x458>
  403174:	stp	x20, xzr, [x0]
  403178:	str	x0, [x19, #48]
  40317c:	ldp	x19, x20, [sp, #16]
  403180:	ldp	x29, x30, [sp], #32
  403184:	ret
  403188:	str	xzr, [x19, #48]
  40318c:	str	xzr, [x19, #64]
  403190:	b	40317c <ferror@plt+0x44c>
  403194:	mov	x29, #0x0                   	// #0
  403198:	mov	x30, #0x0                   	// #0
  40319c:	mov	x5, x0
  4031a0:	ldr	x1, [sp]
  4031a4:	add	x2, sp, #0x8
  4031a8:	mov	x6, sp
  4031ac:	movz	x0, #0x0, lsl #48
  4031b0:	movk	x0, #0x0, lsl #32
  4031b4:	movk	x0, #0x40, lsl #16
  4031b8:	movk	x0, #0x6c18
  4031bc:	movz	x3, #0x0, lsl #48
  4031c0:	movk	x3, #0x0, lsl #32
  4031c4:	movk	x3, #0x46, lsl #16
  4031c8:	movk	x3, #0xe490
  4031cc:	movz	x4, #0x0, lsl #48
  4031d0:	movk	x4, #0x0, lsl #32
  4031d4:	movk	x4, #0x46, lsl #16
  4031d8:	movk	x4, #0xe510
  4031dc:	bl	402870 <__libc_start_main@plt>
  4031e0:	bl	402990 <abort@plt>
  4031e4:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4031e8:	ldr	x0, [x0, #3800]
  4031ec:	cbz	x0, 4031f4 <ferror@plt+0x4c4>
  4031f0:	b	402960 <__gmon_start__@plt>
  4031f4:	ret
  4031f8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4031fc:	add	x0, x0, #0x590
  403200:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403204:	add	x1, x1, #0x590
  403208:	cmp	x1, x0
  40320c:	b.eq	403224 <ferror@plt+0x4f4>  // b.none
  403210:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403214:	ldr	x1, [x1, #1336]
  403218:	cbz	x1, 403224 <ferror@plt+0x4f4>
  40321c:	mov	x16, x1
  403220:	br	x16
  403224:	ret
  403228:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40322c:	add	x0, x0, #0x590
  403230:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403234:	add	x1, x1, #0x590
  403238:	sub	x1, x1, x0
  40323c:	lsr	x2, x1, #63
  403240:	add	x1, x2, x1, asr #3
  403244:	cmp	xzr, x1, asr #1
  403248:	asr	x1, x1, #1
  40324c:	b.eq	403264 <ferror@plt+0x534>  // b.none
  403250:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403254:	ldr	x2, [x2, #1344]
  403258:	cbz	x2, 403264 <ferror@plt+0x534>
  40325c:	mov	x16, x2
  403260:	br	x16
  403264:	ret
  403268:	stp	x29, x30, [sp, #-32]!
  40326c:	mov	x29, sp
  403270:	str	x19, [sp, #16]
  403274:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403278:	ldrb	w0, [x19, #1472]
  40327c:	cbnz	w0, 40328c <ferror@plt+0x55c>
  403280:	bl	4031f8 <ferror@plt+0x4c8>
  403284:	mov	w0, #0x1                   	// #1
  403288:	strb	w0, [x19, #1472]
  40328c:	ldr	x19, [sp, #16]
  403290:	ldp	x29, x30, [sp], #32
  403294:	ret
  403298:	b	403228 <ferror@plt+0x4f8>
  40329c:	cmp	w0, w1
  4032a0:	b.eq	4032e0 <ferror@plt+0x5b0>  // b.none
  4032a4:	ror	w0, w0, #16
  4032a8:	lsl	w2, w0, #8
  4032ac:	and	w2, w2, #0xff00ff00
  4032b0:	lsr	w0, w0, #8
  4032b4:	and	w0, w0, #0xff00ff
  4032b8:	orr	w2, w2, w0
  4032bc:	mov	w0, #0x0                   	// #0
  4032c0:	cmp	w1, w2
  4032c4:	b.eq	4032cc <ferror@plt+0x59c>  // b.none
  4032c8:	ret
  4032cc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4032d0:	mov	w1, #0x1                   	// #1
  4032d4:	str	w1, [x0, #1512]
  4032d8:	mov	w0, #0xffffffff            	// #-1
  4032dc:	b	4032c8 <ferror@plt+0x598>
  4032e0:	mov	w0, #0x1                   	// #1
  4032e4:	b	4032c8 <ferror@plt+0x598>
  4032e8:	stp	x29, x30, [sp, #-32]!
  4032ec:	mov	x29, sp
  4032f0:	stp	x19, x20, [sp, #16]
  4032f4:	cbz	w0, 4034a4 <ferror@plt+0x774>
  4032f8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4032fc:	ldr	x19, [x0, #1424]
  403300:	mov	w20, #0x1                   	// #1
  403304:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403308:	add	x1, x1, #0x548
  40330c:	mov	x0, x19
  403310:	bl	40eeec <ferror@plt+0xc1bc>
  403314:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403318:	add	x1, x1, #0x570
  40331c:	mov	x0, x19
  403320:	bl	40eeec <ferror@plt+0xc1bc>
  403324:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403328:	add	x1, x1, #0x598
  40332c:	mov	x0, x19
  403330:	bl	40eeec <ferror@plt+0xc1bc>
  403334:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403338:	add	x1, x1, #0x5e8
  40333c:	mov	x0, x19
  403340:	bl	40eeec <ferror@plt+0xc1bc>
  403344:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403348:	add	x1, x1, #0x638
  40334c:	mov	x0, x19
  403350:	bl	40eeec <ferror@plt+0xc1bc>
  403354:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403358:	add	x1, x1, #0x6b8
  40335c:	mov	x0, x19
  403360:	bl	40eeec <ferror@plt+0xc1bc>
  403364:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403368:	add	x1, x1, #0x6f8
  40336c:	mov	x0, x19
  403370:	bl	40eeec <ferror@plt+0xc1bc>
  403374:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403378:	add	x1, x1, #0x740
  40337c:	mov	x0, x19
  403380:	bl	40eeec <ferror@plt+0xc1bc>
  403384:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403388:	add	x1, x1, #0x780
  40338c:	mov	x0, x19
  403390:	bl	40eeec <ferror@plt+0xc1bc>
  403394:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403398:	add	x1, x1, #0x7e0
  40339c:	mov	x0, x19
  4033a0:	bl	40eeec <ferror@plt+0xc1bc>
  4033a4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033a8:	add	x1, x1, #0x828
  4033ac:	mov	x0, x19
  4033b0:	bl	40eeec <ferror@plt+0xc1bc>
  4033b4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033b8:	add	x1, x1, #0x860
  4033bc:	mov	x0, x19
  4033c0:	bl	40eeec <ferror@plt+0xc1bc>
  4033c4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033c8:	add	x1, x1, #0x8e0
  4033cc:	mov	x0, x19
  4033d0:	bl	40eeec <ferror@plt+0xc1bc>
  4033d4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033d8:	add	x1, x1, #0x928
  4033dc:	mov	x0, x19
  4033e0:	bl	40eeec <ferror@plt+0xc1bc>
  4033e4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033e8:	add	x1, x1, #0x968
  4033ec:	mov	x0, x19
  4033f0:	bl	40eeec <ferror@plt+0xc1bc>
  4033f4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4033f8:	add	x1, x1, #0x9c0
  4033fc:	mov	x0, x19
  403400:	bl	40eeec <ferror@plt+0xc1bc>
  403404:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403408:	add	x1, x1, #0xa08
  40340c:	mov	x0, x19
  403410:	bl	40eeec <ferror@plt+0xc1bc>
  403414:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403418:	add	x1, x1, #0xa58
  40341c:	mov	x0, x19
  403420:	bl	40eeec <ferror@plt+0xc1bc>
  403424:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403428:	add	x1, x1, #0xaa0
  40342c:	mov	x0, x19
  403430:	bl	40eeec <ferror@plt+0xc1bc>
  403434:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403438:	add	x1, x1, #0xae0
  40343c:	mov	x0, x19
  403440:	bl	40eeec <ferror@plt+0xc1bc>
  403444:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403448:	add	x1, x1, #0xb28
  40344c:	mov	x0, x19
  403450:	bl	40eeec <ferror@plt+0xc1bc>
  403454:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403458:	add	x1, x1, #0xb70
  40345c:	mov	x0, x19
  403460:	bl	40eeec <ferror@plt+0xc1bc>
  403464:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403468:	add	x1, x1, #0xbb8
  40346c:	mov	x0, x19
  403470:	bl	40eeec <ferror@plt+0xc1bc>
  403474:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403478:	add	x1, x1, #0xbf8
  40347c:	mov	x0, x19
  403480:	bl	40eeec <ferror@plt+0xc1bc>
  403484:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  403488:	add	x2, x2, #0x958
  40348c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403490:	add	x1, x1, #0xc30
  403494:	mov	x0, x19
  403498:	bl	40eeec <ferror@plt+0xc1bc>
  40349c:	mov	w0, w20
  4034a0:	bl	4026b0 <exit@plt>
  4034a4:	mov	w20, w0
  4034a8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4034ac:	ldr	x19, [x0, #1448]
  4034b0:	b	403304 <ferror@plt+0x5d4>
  4034b4:	stp	x29, x30, [sp, #-80]!
  4034b8:	mov	x29, sp
  4034bc:	stp	x19, x20, [sp, #16]
  4034c0:	stp	x21, x22, [sp, #32]
  4034c4:	stp	x23, x24, [sp, #48]
  4034c8:	str	x25, [sp, #64]
  4034cc:	mov	w23, w0
  4034d0:	mov	x22, x1
  4034d4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4034d8:	add	x21, x21, #0xa48
  4034dc:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4034e0:	add	x20, x20, #0xc68
  4034e4:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4034e8:	add	x19, x19, #0xa30
  4034ec:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4034f0:	b	403500 <ferror@plt+0x7d0>
  4034f4:	add	x0, x24, #0x5c8
  4034f8:	mov	w1, #0x1                   	// #1
  4034fc:	str	w1, [x0, #56]
  403500:	mov	x4, #0x0                   	// #0
  403504:	mov	x3, x21
  403508:	mov	x2, x20
  40350c:	mov	x1, x22
  403510:	mov	w0, w23
  403514:	bl	402a10 <getopt_long@plt>
  403518:	cmn	w0, #0x1
  40351c:	b.eq	4036fc <ferror@plt+0x9cc>  // b.none
  403520:	sub	w0, w0, #0x61
  403524:	cmp	w0, #0x17
  403528:	b.hi	4036f4 <ferror@plt+0x9c4>  // b.pmore
  40352c:	ldrb	w0, [x19, w0, uxtw]
  403530:	adr	x1, 40353c <ferror@plt+0x80c>
  403534:	add	x0, x1, w0, sxtb #2
  403538:	br	x0
  40353c:	add	x0, x24, #0x5c8
  403540:	mov	w1, #0x1                   	// #1
  403544:	str	w1, [x0, #60]
  403548:	b	403500 <ferror@plt+0x7d0>
  40354c:	add	x0, x24, #0x5c8
  403550:	mov	w1, #0x1                   	// #1
  403554:	str	w1, [x0, #64]
  403558:	b	403500 <ferror@plt+0x7d0>
  40355c:	add	x0, x24, #0x5c8
  403560:	mov	w1, #0x1                   	// #1
  403564:	str	w1, [x0, #68]
  403568:	b	403500 <ferror@plt+0x7d0>
  40356c:	mov	w0, #0x0                   	// #0
  403570:	bl	4032e8 <ferror@plt+0x5b8>
  403574:	add	x0, x24, #0x5c8
  403578:	mov	w1, #0x1                   	// #1
  40357c:	str	w1, [x0, #72]
  403580:	b	403500 <ferror@plt+0x7d0>
  403584:	add	x0, x24, #0x5c8
  403588:	mov	w1, #0x1                   	// #1
  40358c:	str	w1, [x0, #76]
  403590:	b	403500 <ferror@plt+0x7d0>
  403594:	add	x0, x24, #0x5c8
  403598:	mov	w1, #0x1                   	// #1
  40359c:	str	w1, [x0, #80]
  4035a0:	b	403500 <ferror@plt+0x7d0>
  4035a4:	add	x0, x24, #0x5c8
  4035a8:	mov	w1, #0x1                   	// #1
  4035ac:	str	w1, [x0, #84]
  4035b0:	b	403500 <ferror@plt+0x7d0>
  4035b4:	add	x0, x24, #0x5c8
  4035b8:	mov	w1, #0x1                   	// #1
  4035bc:	str	w1, [x0, #88]
  4035c0:	b	403500 <ferror@plt+0x7d0>
  4035c4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4035c8:	str	wzr, [x0, #936]
  4035cc:	b	403500 <ferror@plt+0x7d0>
  4035d0:	add	x0, x24, #0x5c8
  4035d4:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4035d8:	ldr	x1, [x1, #1432]
  4035dc:	str	x1, [x0, #96]
  4035e0:	b	403500 <ferror@plt+0x7d0>
  4035e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4035e8:	ldr	x0, [x0, #1432]
  4035ec:	add	x25, x24, #0x5c8
  4035f0:	str	x0, [x25, #104]
  4035f4:	bl	402680 <strlen@plt>
  4035f8:	str	x0, [x25, #112]
  4035fc:	b	403500 <ferror@plt+0x7d0>
  403600:	add	x0, x24, #0x5c8
  403604:	mov	w1, #0x1                   	// #1
  403608:	str	w1, [x0, #120]
  40360c:	b	403500 <ferror@plt+0x7d0>
  403610:	add	x0, x24, #0x5c8
  403614:	mov	w1, #0x1                   	// #1
  403618:	str	w1, [x0, #124]
  40361c:	b	403500 <ferror@plt+0x7d0>
  403620:	add	x0, x24, #0x5c8
  403624:	mov	w1, #0x1                   	// #1
  403628:	str	w1, [x0, #128]
  40362c:	b	403500 <ferror@plt+0x7d0>
  403630:	add	x1, x24, #0x5c8
  403634:	mov	w0, #0x1                   	// #1
  403638:	str	w0, [x1, #132]
  40363c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403640:	str	w0, [x1, #936]
  403644:	b	403500 <ferror@plt+0x7d0>
  403648:	add	x0, x24, #0x5c8
  40364c:	mov	w1, #0x1                   	// #1
  403650:	str	w1, [x0, #136]
  403654:	b	403500 <ferror@plt+0x7d0>
  403658:	add	x0, x24, #0x5c8
  40365c:	mov	w1, #0x1                   	// #1
  403660:	str	w1, [x0, #140]
  403664:	b	403500 <ferror@plt+0x7d0>
  403668:	add	x0, x24, #0x5c8
  40366c:	mov	w1, #0x1                   	// #1
  403670:	str	w1, [x0, #144]
  403674:	b	403500 <ferror@plt+0x7d0>
  403678:	add	x0, x24, #0x5c8
  40367c:	mov	w1, #0x1                   	// #1
  403680:	str	w1, [x0, #148]
  403684:	b	403500 <ferror@plt+0x7d0>
  403688:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40368c:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  403690:	add	x3, x3, #0x950
  403694:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  403698:	add	x2, x2, #0x948
  40369c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4036a0:	add	x1, x1, #0xc88
  4036a4:	ldr	x0, [x19, #1448]
  4036a8:	bl	40eeec <ferror@plt+0xc1bc>
  4036ac:	ldr	x20, [x19, #1448]
  4036b0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4036b4:	add	x0, x0, #0xc98
  4036b8:	bl	402cd0 <gettext@plt>
  4036bc:	mov	x2, x0
  4036c0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4036c4:	add	x1, x1, #0xca0
  4036c8:	mov	x0, x20
  4036cc:	bl	402ce0 <fprintf@plt>
  4036d0:	ldr	x19, [x19, #1448]
  4036d4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4036d8:	add	x0, x0, #0xcd8
  4036dc:	bl	402cd0 <gettext@plt>
  4036e0:	mov	x1, x0
  4036e4:	mov	x0, x19
  4036e8:	bl	40eeec <ferror@plt+0xc1bc>
  4036ec:	mov	w0, #0x0                   	// #0
  4036f0:	bl	4026b0 <exit@plt>
  4036f4:	mov	w0, #0x1                   	// #1
  4036f8:	bl	4032e8 <ferror@plt+0x5b8>
  4036fc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403700:	ldr	w0, [x0, #1440]
  403704:	ldp	x19, x20, [sp, #16]
  403708:	ldp	x21, x22, [sp, #32]
  40370c:	ldp	x23, x24, [sp, #48]
  403710:	ldr	x25, [sp, #64]
  403714:	ldp	x29, x30, [sp], #80
  403718:	ret
  40371c:	stp	x29, x30, [sp, #-224]!
  403720:	mov	x29, sp
  403724:	stp	x19, x20, [sp, #16]
  403728:	stp	x21, x22, [sp, #32]
  40372c:	stp	x23, x24, [sp, #48]
  403730:	mov	x20, x0
  403734:	bl	402680 <strlen@plt>
  403738:	add	x0, x0, #0x1
  40373c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  403740:	mov	x24, x0
  403744:	ldrb	w0, [x20]
  403748:	cbz	w0, 4038b4 <ferror@plt+0xb84>
  40374c:	stp	x25, x26, [sp, #64]
  403750:	stp	x27, x28, [sp, #80]
  403754:	mov	x26, x24
  403758:	mov	x21, x24
  40375c:	mov	w22, #0x0                   	// #0
  403760:	mov	w23, #0x1                   	// #1
  403764:	mov	w25, #0x2f                  	// #47
  403768:	mov	x27, #0x0                   	// #0
  40376c:	b	40382c <ferror@plt+0xafc>
  403770:	ldrb	w0, [x20, #1]
  403774:	cmp	w0, #0x2e
  403778:	b.ne	403874 <ferror@plt+0xb44>  // b.any
  40377c:	strb	wzr, [x21]
  403780:	cmp	x21, x26
  403784:	b.eq	4037d8 <ferror@plt+0xaa8>  // b.none
  403788:	add	x2, sp, #0x60
  40378c:	mov	x1, x24
  403790:	mov	w0, #0x0                   	// #0
  403794:	bl	402c70 <__xstat@plt>
  403798:	cbnz	w0, 4037d8 <ferror@plt+0xaa8>
  40379c:	ldr	w0, [sp, #112]
  4037a0:	and	w0, w0, #0xf000
  4037a4:	cmp	w0, #0xa, lsl #12
  4037a8:	b.eq	4037d8 <ferror@plt+0xaa8>  // b.none
  4037ac:	ldrb	w0, [x21]
  4037b0:	cmp	w0, #0x2f
  4037b4:	b.eq	4037c8 <ferror@plt+0xa98>  // b.none
  4037b8:	sub	x21, x21, #0x1
  4037bc:	cmp	x21, x26
  4037c0:	b.ne	4037ac <ferror@plt+0xa7c>  // b.any
  4037c4:	mov	x21, x26
  4037c8:	cmp	x24, x21
  4037cc:	cset	w22, ne  // ne = any
  4037d0:	mov	x20, x19
  4037d4:	b	403818 <ferror@plt+0xae8>
  4037d8:	sxtw	x26, w22
  4037dc:	add	x26, x26, #0x2
  4037e0:	add	x26, x21, x26
  4037e4:	b	403874 <ferror@plt+0xb44>
  4037e8:	mov	x20, x19
  4037ec:	b	403818 <ferror@plt+0xae8>
  4037f0:	mov	x19, x20
  4037f4:	mov	x28, x27
  4037f8:	b	403874 <ferror@plt+0xb44>
  4037fc:	mov	x2, x28
  403800:	mov	x1, x20
  403804:	mov	x0, x21
  403808:	bl	402620 <memcpy@plt>
  40380c:	add	x21, x21, x28
  403810:	mov	x20, x19
  403814:	mov	w22, w23
  403818:	ldrb	w0, [x20]
  40381c:	cmp	w0, #0x2f
  403820:	b.eq	4038a4 <ferror@plt+0xb74>  // b.none
  403824:	ldrb	w0, [x20]
  403828:	cbz	w0, 403880 <ferror@plt+0xb50>
  40382c:	ldrb	w1, [x20]
  403830:	cmp	w1, #0x2f
  403834:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  403838:	b.eq	4037f0 <ferror@plt+0xac0>  // b.none
  40383c:	mov	x19, x20
  403840:	ldrb	w1, [x19, #1]!
  403844:	cmp	w1, #0x2f
  403848:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40384c:	b.ne	403840 <ferror@plt+0xb10>  // b.any
  403850:	sub	x28, x19, x20
  403854:	cmp	w0, #0x2e
  403858:	cset	w0, eq  // eq = none
  40385c:	cmp	w0, #0x0
  403860:	ccmp	x28, #0x1, #0x0, ne  // ne = any
  403864:	b.eq	4037e8 <ferror@plt+0xab8>  // b.none
  403868:	cmp	w0, #0x0
  40386c:	ccmp	x28, #0x2, #0x0, ne  // ne = any
  403870:	b.eq	403770 <ferror@plt+0xa40>  // b.none
  403874:	cbz	w22, 4037fc <ferror@plt+0xacc>
  403878:	strb	w25, [x21], #1
  40387c:	b	4037fc <ferror@plt+0xacc>
  403880:	ldp	x25, x26, [sp, #64]
  403884:	ldp	x27, x28, [sp, #80]
  403888:	strb	wzr, [x21]
  40388c:	mov	x0, x24
  403890:	ldp	x19, x20, [sp, #16]
  403894:	ldp	x21, x22, [sp, #32]
  403898:	ldp	x23, x24, [sp, #48]
  40389c:	ldp	x29, x30, [sp], #224
  4038a0:	ret
  4038a4:	ldrb	w0, [x20, #1]!
  4038a8:	cmp	w0, #0x2f
  4038ac:	b.ne	403824 <ferror@plt+0xaf4>  // b.any
  4038b0:	b	4038a4 <ferror@plt+0xb74>
  4038b4:	mov	x21, x24
  4038b8:	b	403888 <ferror@plt+0xb58>
  4038bc:	stp	x29, x30, [sp, #-16]!
  4038c0:	mov	x29, sp
  4038c4:	cbz	w2, 4038fc <ferror@plt+0xbcc>
  4038c8:	ldr	x3, [x1]
  4038cc:	ldr	x1, [x1, #8]
  4038d0:	sub	x1, x1, x3
  4038d4:	asr	x1, x1, #3
  4038d8:	cmp	x1, w2, uxtw
  4038dc:	b.cc	403914 <ferror@plt+0xbe4>  // b.lo, b.ul, b.last
  4038e0:	sub	w2, w2, #0x1
  4038e4:	ldr	x2, [x3, x2, lsl #3]
  4038e8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4038ec:	add	x1, x1, #0xda8
  4038f0:	bl	402ce0 <fprintf@plt>
  4038f4:	ldp	x29, x30, [sp], #16
  4038f8:	ret
  4038fc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403900:	add	x2, x2, #0xd78
  403904:	mov	w1, #0xb85                 	// #2949
  403908:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40390c:	add	x0, x0, #0xd90
  403910:	bl	4102b4 <ferror@plt+0xd584>
  403914:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403918:	add	x2, x2, #0xd78
  40391c:	mov	w1, #0xb86                 	// #2950
  403920:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403924:	add	x0, x0, #0xd90
  403928:	bl	4102b4 <ferror@plt+0xd584>
  40392c:	stp	x29, x30, [sp, #-80]!
  403930:	mov	x29, sp
  403934:	stp	x19, x20, [sp, #16]
  403938:	mov	x20, x0
  40393c:	mov	w19, w1
  403940:	strh	wzr, [sp, #50]
  403944:	str	xzr, [sp, #56]
  403948:	str	xzr, [sp, #64]
  40394c:	bl	4027b0 <getpid@plt>
  403950:	str	w0, [sp, #72]
  403954:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403958:	ldr	x0, [x0, #1480]
  40395c:	cbnz	x0, 403a10 <ferror@plt+0xce0>
  403960:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403964:	add	x2, x2, #0x5c8
  403968:	str	wzr, [x2, #8]
  40396c:	str	wzr, [x2, #16]
  403970:	str	wzr, [x2, #12]
  403974:	mov	w0, #0xffffffff            	// #-1
  403978:	str	w0, [x2, #20]
  40397c:	str	wzr, [x2, #24]
  403980:	str	wzr, [x2, #32]
  403984:	cmp	w19, #0x0
  403988:	b.le	403a2c <ferror@plt+0xcfc>
  40398c:	strh	wzr, [sp, #48]
  403990:	mov	w2, #0x180                 	// #384
  403994:	mov	w1, #0x0                   	// #0
  403998:	mov	x0, x20
  40399c:	bl	402800 <open@plt>
  4039a0:	mov	w20, w0
  4039a4:	mov	w0, #0x0                   	// #0
  4039a8:	tbnz	w20, #31, 403a94 <ferror@plt+0xd64>
  4039ac:	str	x21, [sp, #32]
  4039b0:	mov	w21, #0x7                   	// #7
  4039b4:	add	x2, sp, #0x30
  4039b8:	mov	w1, w21
  4039bc:	mov	w0, w20
  4039c0:	bl	402af0 <fcntl@plt>
  4039c4:	cbz	w0, 4039d8 <ferror@plt+0xca8>
  4039c8:	bl	402c40 <__errno_location@plt>
  4039cc:	ldr	w0, [x0]
  4039d0:	cmp	w0, #0x4
  4039d4:	b.eq	4039b4 <ferror@plt+0xc84>  // b.none
  4039d8:	cmp	w19, #0x0
  4039dc:	b.le	403a58 <ferror@plt+0xd28>
  4039e0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4039e4:	add	x1, x1, #0xde0
  4039e8:	mov	w0, w20
  4039ec:	bl	452f00 <ferror@plt+0x501d0>
  4039f0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4039f4:	str	x0, [x1, #1480]
  4039f8:	cbnz	x0, 403a7c <ferror@plt+0xd4c>
  4039fc:	mov	w0, w20
  403a00:	bl	402940 <close@plt>
  403a04:	mov	w0, #0x0                   	// #0
  403a08:	ldr	x21, [sp, #32]
  403a0c:	b	403a94 <ferror@plt+0xd64>
  403a10:	str	x21, [sp, #32]
  403a14:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403a18:	add	x2, x2, #0xdb0
  403a1c:	mov	w1, #0x8e                  	// #142
  403a20:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403a24:	add	x0, x0, #0xdc0
  403a28:	bl	4102b4 <ferror@plt+0xd584>
  403a2c:	mov	w0, #0x1                   	// #1
  403a30:	strh	w0, [sp, #48]
  403a34:	asr	w0, w19, #22
  403a38:	and	w0, w0, #0x200
  403a3c:	mov	w2, #0x1b6                 	// #438
  403a40:	mov	w1, #0x42                  	// #66
  403a44:	orr	w1, w0, w1
  403a48:	mov	x0, x20
  403a4c:	bl	402800 <open@plt>
  403a50:	mov	w20, w0
  403a54:	b	4039a4 <ferror@plt+0xc74>
  403a58:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403a5c:	add	x1, x1, #0xdd8
  403a60:	mov	w0, w20
  403a64:	bl	452f00 <ferror@plt+0x501d0>
  403a68:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403a6c:	str	x0, [x1, #1480]
  403a70:	cbz	x0, 4039fc <ferror@plt+0xccc>
  403a74:	cmp	w19, #0x0
  403a78:	csinc	w19, w19, wzr, ne  // ne = any
  403a7c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403a80:	str	w19, [x1, #1508]
  403a84:	mov	x1, #0x0                   	// #0
  403a88:	bl	4026f0 <setbuf@plt>
  403a8c:	mov	w0, #0x1                   	// #1
  403a90:	ldr	x21, [sp, #32]
  403a94:	ldp	x19, x20, [sp, #16]
  403a98:	ldp	x29, x30, [sp], #80
  403a9c:	ret
  403aa0:	stp	x29, x30, [sp, #-48]!
  403aa4:	mov	x29, sp
  403aa8:	stp	x19, x20, [sp, #16]
  403aac:	mov	w20, w0
  403ab0:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403ab4:	add	x2, x2, #0x5c8
  403ab8:	ldr	w1, [x2, #12]
  403abc:	ldr	w19, [x2, #16]
  403ac0:	sub	w19, w19, w1
  403ac4:	ldr	w0, [x2, #28]
  403ac8:	cmp	w0, #0x0
  403acc:	b.le	403be8 <ferror@plt+0xeb8>
  403ad0:	cmp	w19, w20
  403ad4:	b.cs	403b50 <ferror@plt+0xe20>  // b.hs, b.nlast
  403ad8:	mov	x0, x2
  403adc:	ldr	w2, [x2, #8]
  403ae0:	add	w2, w2, w1
  403ae4:	str	w2, [x0, #8]
  403ae8:	cbnz	w19, 403b78 <ferror@plt+0xe48>
  403aec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403af0:	add	x0, x0, #0x5c8
  403af4:	str	wzr, [x0, #12]
  403af8:	str	w19, [x0, #16]
  403afc:	add	w19, w19, w20
  403b00:	ldr	x1, [x0, #40]
  403b04:	cmp	x19, x1
  403b08:	b.hi	403b90 <ferror@plt+0xe60>  // b.pmore
  403b0c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403b10:	add	x19, x1, #0x5c8
  403b14:	ldr	w0, [x19, #16]
  403b18:	ldr	x2, [x19, #40]
  403b1c:	sub	w2, w2, w0
  403b20:	ldr	x4, [x19, #48]
  403b24:	ldr	x3, [x1, #1480]
  403b28:	lsl	w2, w2, #2
  403b2c:	mov	x1, #0x1                   	// #1
  403b30:	add	x0, x4, w0, uxtw #2
  403b34:	bl	402a60 <fread@plt>
  403b38:	lsr	x1, x0, #2
  403b3c:	ldr	w0, [x19, #16]
  403b40:	add	w0, w0, w1
  403b44:	str	w0, [x19, #16]
  403b48:	cmp	w0, w20
  403b4c:	b.cc	403bcc <ferror@plt+0xe9c>  // b.lo, b.ul, b.last
  403b50:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403b54:	add	x1, x1, #0x5c8
  403b58:	ldr	w2, [x1, #12]
  403b5c:	ldr	x0, [x1, #48]
  403b60:	add	x0, x0, w2, uxtw #2
  403b64:	add	w20, w2, w20
  403b68:	str	w20, [x1, #12]
  403b6c:	ldp	x19, x20, [sp, #16]
  403b70:	ldp	x29, x30, [sp], #48
  403b74:	ret
  403b78:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403b7c:	ldr	x0, [x0, #1528]
  403b80:	lsl	w2, w19, #2
  403b84:	add	x1, x0, w1, uxtw #2
  403b88:	bl	402630 <memmove@plt>
  403b8c:	b	403aec <ferror@plt+0xdbc>
  403b90:	str	x21, [sp, #32]
  403b94:	cmp	x1, #0x0
  403b98:	mov	x0, #0x400                 	// #1024
  403b9c:	csel	x1, x1, x0, ne  // ne = any
  403ba0:	add	x1, x19, x1
  403ba4:	lsl	x0, x1, #1
  403ba8:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403bac:	add	x21, x21, #0x5c8
  403bb0:	str	x0, [x21, #40]
  403bb4:	lsl	x1, x1, #3
  403bb8:	ldr	x0, [x21, #48]
  403bbc:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  403bc0:	str	x0, [x21, #48]
  403bc4:	ldr	x21, [sp, #32]
  403bc8:	b	403b0c <ferror@plt+0xddc>
  403bcc:	ldr	w2, [x19, #20]
  403bd0:	add	w20, w20, w2
  403bd4:	sub	w0, w20, w0
  403bd8:	str	w0, [x19, #20]
  403bdc:	str	wzr, [x19, #16]
  403be0:	mov	x0, #0x0                   	// #0
  403be4:	b	403b6c <ferror@plt+0xe3c>
  403be8:	mov	x0, #0x0                   	// #0
  403bec:	b	403b6c <ferror@plt+0xe3c>
  403bf0:	stp	x29, x30, [sp, #-16]!
  403bf4:	mov	x29, sp
  403bf8:	mov	w0, #0x1                   	// #1
  403bfc:	bl	403aa0 <ferror@plt+0xd70>
  403c00:	cbz	x0, 403c38 <ferror@plt+0xf08>
  403c04:	ldr	w0, [x0]
  403c08:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403c0c:	ldr	w3, [x1, #1512]
  403c10:	ror	w1, w0, #16
  403c14:	lsl	w2, w1, #8
  403c18:	and	w2, w2, #0xff00ff00
  403c1c:	lsr	w1, w1, #8
  403c20:	and	w1, w1, #0xff00ff
  403c24:	orr	w1, w2, w1
  403c28:	cmp	w3, #0x0
  403c2c:	csel	w0, w1, w0, ne  // ne = any
  403c30:	ldp	x29, x30, [sp], #16
  403c34:	ret
  403c38:	mov	w0, #0x0                   	// #0
  403c3c:	b	403c30 <ferror@plt+0xf00>
  403c40:	stp	x29, x30, [sp, #-16]!
  403c44:	mov	x29, sp
  403c48:	bl	403bf0 <ferror@plt+0xec0>
  403c4c:	mov	w1, w0
  403c50:	mov	x0, #0x0                   	// #0
  403c54:	cbz	w1, 403c60 <ferror@plt+0xf30>
  403c58:	mov	w0, w1
  403c5c:	bl	403aa0 <ferror@plt+0xd70>
  403c60:	ldp	x29, x30, [sp], #16
  403c64:	ret
  403c68:	stp	x29, x30, [sp, #-16]!
  403c6c:	mov	x29, sp
  403c70:	mov	w0, #0x2                   	// #2
  403c74:	bl	403aa0 <ferror@plt+0xd70>
  403c78:	cbz	x0, 403cc4 <ferror@plt+0xf94>
  403c7c:	ldr	w1, [x0]
  403c80:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403c84:	ldr	w2, [x2, #1512]
  403c88:	cbz	w2, 403ccc <ferror@plt+0xf9c>
  403c8c:	ror	w1, w1, #16
  403c90:	lsl	w2, w1, #8
  403c94:	and	w2, w2, #0xff00ff00
  403c98:	lsr	w1, w1, #8
  403c9c:	and	w1, w1, #0xff00ff
  403ca0:	orr	w1, w2, w1
  403ca4:	ldr	w2, [x0, #4]
  403ca8:	ror	w2, w2, #16
  403cac:	lsl	w0, w2, #8
  403cb0:	and	w0, w0, #0xff00ff00
  403cb4:	lsr	w2, w2, #8
  403cb8:	and	w2, w2, #0xff00ff
  403cbc:	orr	w0, w0, w2
  403cc0:	b	403cd4 <ferror@plt+0xfa4>
  403cc4:	mov	x0, #0x0                   	// #0
  403cc8:	b	403cd8 <ferror@plt+0xfa8>
  403ccc:	mov	w1, w1
  403cd0:	ldr	w0, [x0, #4]
  403cd4:	orr	x0, x1, x0, lsl #32
  403cd8:	ldp	x29, x30, [sp], #16
  403cdc:	ret
  403ce0:	stp	x29, x30, [sp, #-32]!
  403ce4:	mov	x29, sp
  403ce8:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403cec:	ldr	w2, [x2, #1508]
  403cf0:	cmp	w2, #0x0
  403cf4:	b.le	403d28 <ferror@plt+0xff8>
  403cf8:	add	w1, w0, w1
  403cfc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403d00:	add	x0, x0, #0x5c8
  403d04:	ldr	w2, [x0, #8]
  403d08:	sub	w2, w1, w2
  403d0c:	ldr	w0, [x0, #16]
  403d10:	cmp	w2, w0
  403d14:	b.hi	403d44 <ferror@plt+0x1014>  // b.pmore
  403d18:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403d1c:	str	w2, [x0, #1492]
  403d20:	ldp	x29, x30, [sp], #32
  403d24:	ret
  403d28:	stp	x19, x20, [sp, #16]
  403d2c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403d30:	add	x2, x2, #0xde8
  403d34:	mov	w1, #0x271                 	// #625
  403d38:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403d3c:	add	x0, x0, #0xdc0
  403d40:	bl	4102b4 <ferror@plt+0xd584>
  403d44:	stp	x19, x20, [sp, #16]
  403d48:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403d4c:	add	x19, x20, #0x5c8
  403d50:	str	wzr, [x19, #16]
  403d54:	str	wzr, [x19, #12]
  403d58:	mov	w2, #0x0                   	// #0
  403d5c:	lsl	w1, w1, #2
  403d60:	ldr	x0, [x20, #1480]
  403d64:	bl	402980 <fseek@plt>
  403d68:	ldr	x0, [x20, #1480]
  403d6c:	bl	402710 <ftell@plt>
  403d70:	asr	x0, x0, #2
  403d74:	str	w0, [x19, #8]
  403d78:	ldp	x19, x20, [sp, #16]
  403d7c:	b	403d20 <ferror@plt+0xff0>
  403d80:	stp	x29, x30, [sp, #-32]!
  403d84:	mov	x29, sp
  403d88:	str	x19, [sp, #16]
  403d8c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403d90:	ldr	x0, [x0, #1480]
  403d94:	cbz	x0, 403dac <ferror@plt+0x107c>
  403d98:	bl	4027a0 <fclose@plt>
  403d9c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403da0:	add	x1, x0, #0x5c8
  403da4:	str	xzr, [x0, #1480]
  403da8:	str	wzr, [x1, #16]
  403dac:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403db0:	add	x19, x19, #0x5c8
  403db4:	ldr	x0, [x19, #48]
  403db8:	bl	402a90 <free@plt>
  403dbc:	str	xzr, [x19, #40]
  403dc0:	str	xzr, [x19, #48]
  403dc4:	str	wzr, [x19, #28]
  403dc8:	ldr	w0, [x19, #24]
  403dcc:	ldr	x19, [sp, #16]
  403dd0:	ldp	x29, x30, [sp], #32
  403dd4:	ret
  403dd8:	stp	x29, x30, [sp, #-16]!
  403ddc:	mov	x29, sp
  403de0:	ldr	x2, [x0, #40]
  403de4:	ldr	x1, [x0, #32]
  403de8:	sub	x2, x2, x1
  403dec:	asr	x2, x2, #3
  403df0:	mov	x1, #0x4ec5                	// #20165
  403df4:	movk	x1, #0xc4ec, lsl #16
  403df8:	movk	x1, #0xec4e, lsl #32
  403dfc:	movk	x1, #0x4ec4, lsl #48
  403e00:	mul	x2, x2, x1
  403e04:	lsl	x1, x2, #3
  403e08:	add	x1, x1, #0xf
  403e0c:	and	x1, x1, #0xfffffffffffffff0
  403e10:	sub	sp, sp, x1
  403e14:	mov	x5, sp
  403e18:	cbz	w2, 403e50 <ferror@plt+0x1120>
  403e1c:	sub	w1, w2, #0x1
  403e20:	mov	w3, w1
  403e24:	add	x2, x3, w1, uxtw #1
  403e28:	add	x2, x3, x2, lsl #2
  403e2c:	lsl	x2, x2, #3
  403e30:	ldr	x1, [x0, #32]
  403e34:	add	x1, x1, x2
  403e38:	ldrb	w3, [x1, #48]
  403e3c:	orr	w3, w3, #0x8
  403e40:	strb	w3, [x1, #48]
  403e44:	sub	x2, x2, #0x68
  403e48:	cmn	x2, #0x68
  403e4c:	b.ne	403e30 <ferror@plt+0x1100>  // b.any
  403e50:	ldr	x0, [x0, #32]
  403e54:	str	x0, [x5]
  403e58:	ldrb	w1, [x0, #48]
  403e5c:	and	w1, w1, #0xfffffff7
  403e60:	strb	w1, [x0, #48]
  403e64:	mov	w2, #0x1                   	// #1
  403e68:	mov	w3, #0x14                  	// #20
  403e6c:	b	403e74 <ferror@plt+0x1144>
  403e70:	cbz	w2, 403ec4 <ferror@plt+0x1194>
  403e74:	sub	w2, w2, #0x1
  403e78:	ldr	x0, [x5, w2, uxtw #3]
  403e7c:	ldr	x0, [x0]
  403e80:	cbnz	x0, 403e90 <ferror@plt+0x1160>
  403e84:	b	403e70 <ferror@plt+0x1140>
  403e88:	ldr	x0, [x0, #40]
  403e8c:	cbz	x0, 403e70 <ferror@plt+0x1140>
  403e90:	ldrb	w1, [x0, #32]
  403e94:	tst	w3, w1
  403e98:	b.ne	403e88 <ferror@plt+0x1158>  // b.any
  403e9c:	ldr	x1, [x0, #8]
  403ea0:	ldrb	w4, [x1, #48]
  403ea4:	tbz	w4, #3, 403e88 <ferror@plt+0x1158>
  403ea8:	ldrb	w4, [x1, #48]
  403eac:	and	w4, w4, #0xfffffff7
  403eb0:	strb	w4, [x1, #48]
  403eb4:	ldr	x1, [x0, #8]
  403eb8:	str	x1, [x5, w2, uxtw #3]
  403ebc:	add	w2, w2, #0x1
  403ec0:	b	403e88 <ferror@plt+0x1158>
  403ec4:	mov	sp, x29
  403ec8:	ldp	x29, x30, [sp], #16
  403ecc:	ret
  403ed0:	stp	x29, x30, [sp, #-32]!
  403ed4:	mov	x29, sp
  403ed8:	str	x19, [sp, #16]
  403edc:	tbnz	w2, #31, 403f4c <ferror@plt+0x121c>
  403ee0:	movi	v0.2s, #0x0
  403ee4:	cbz	x1, 403f1c <ferror@plt+0x11ec>
  403ee8:	scvtf	s0, x0
  403eec:	mov	w0, #0x42c80000            	// #1120403456
  403ef0:	fmov	s1, w0
  403ef4:	fmul	s0, s0, s1
  403ef8:	scvtf	s1, x1
  403efc:	fdiv	s0, s0, s1
  403f00:	fcmpe	s0, #0.0
  403f04:	b.le	403f1c <ferror@plt+0x11ec>
  403f08:	cmp	w2, #0x0
  403f0c:	fmov	s1, #5.000000000000000000e-01
  403f10:	fccmpe	s0, s1, #0x0, eq  // eq = none
  403f14:	fmov	s1, #1.000000000000000000e+00
  403f18:	fcsel	s0, s0, s1, pl  // pl = nfrst
  403f1c:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403f20:	add	x19, x19, #0x5c8
  403f24:	add	x19, x19, #0xd8
  403f28:	fcvt	d0, s0
  403f2c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403f30:	add	x1, x1, #0xdf8
  403f34:	mov	x0, x19
  403f38:	bl	402720 <sprintf@plt>
  403f3c:	mov	x0, x19
  403f40:	ldr	x19, [sp, #16]
  403f44:	ldp	x29, x30, [sp], #32
  403f48:	ret
  403f4c:	cmp	x0, #0x3e7
  403f50:	b.le	403fb0 <ferror@plt+0x1280>
  403f54:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403f58:	ldr	w1, [x1, #1556]
  403f5c:	mov	x2, #0x1                   	// #1
  403f60:	mov	w4, w2
  403f64:	adrp	x5, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403f68:	add	x5, x5, #0xe08
  403f6c:	cbz	w1, 403fb0 <ferror@plt+0x1280>
  403f70:	sub	w6, w4, #0x1
  403f74:	add	x3, x2, x2, lsr #63
  403f78:	add	x3, x0, x3, asr #1
  403f7c:	mov	x7, x2
  403f80:	lsl	x1, x2, #5
  403f84:	sub	x1, x1, x2
  403f88:	add	x1, x2, x1, lsl #2
  403f8c:	lsl	x1, x1, #3
  403f90:	mov	x2, x1
  403f94:	cmp	x3, x1
  403f98:	b.lt	403fd8 <ferror@plt+0x12a8>  // b.tstop
  403f9c:	add	w1, w4, #0x1
  403fa0:	ldrb	w3, [x5, w1, uxtw]
  403fa4:	cbz	w3, 403fe0 <ferror@plt+0x12b0>
  403fa8:	mov	w4, w1
  403fac:	b	403f70 <ferror@plt+0x1240>
  403fb0:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403fb4:	add	x19, x19, #0x5c8
  403fb8:	add	x19, x19, #0x98
  403fbc:	mov	x2, x0
  403fc0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403fc4:	add	x1, x1, #0xe00
  403fc8:	mov	x0, x19
  403fcc:	bl	402720 <sprintf@plt>
  403fd0:	mov	x0, x19
  403fd4:	b	403f40 <ferror@plt+0x1210>
  403fd8:	mov	x2, x7
  403fdc:	mov	w4, w6
  403fe0:	scvtf	s1, x0
  403fe4:	scvtf	s0, x2
  403fe8:	fdiv	s0, s1, s0
  403fec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  403ff0:	add	x0, x0, #0x5c8
  403ff4:	add	x19, x0, #0x98
  403ff8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  403ffc:	add	x0, x0, #0xe08
  404000:	ldrb	w2, [x0, w4, uxtw]
  404004:	fcvt	d0, s0
  404008:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40400c:	add	x1, x1, #0xe18
  404010:	mov	x0, x19
  404014:	bl	402720 <sprintf@plt>
  404018:	mov	x0, x19
  40401c:	b	403f40 <ferror@plt+0x1210>
  404020:	stp	x29, x30, [sp, #-48]!
  404024:	mov	x29, sp
  404028:	stp	x19, x20, [sp, #16]
  40402c:	str	x21, [sp, #32]
  404030:	mov	x20, x0
  404034:	mov	w21, w1
  404038:	mov	x19, x2
  40403c:	ldrb	w2, [x2, #32]
  404040:	tbz	w2, #5, 4040a4 <ferror@plt+0x1374>
  404044:	ldr	x0, [x19]
  404048:	ldr	x1, [x0, #40]
  40404c:	cbz	x1, 404088 <ferror@plt+0x1358>
  404050:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404054:	ldr	w2, [x0, #1544]
  404058:	ldr	x0, [x19, #16]
  40405c:	neg	w2, w2
  404060:	sub	x0, x1, x0
  404064:	bl	403ed0 <ferror@plt+0x11a0>
  404068:	mov	x3, x0
  40406c:	mov	w2, w21
  404070:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404074:	add	x1, x1, #0xe40
  404078:	mov	x0, x20
  40407c:	bl	40eeec <ferror@plt+0xc1bc>
  404080:	mov	w0, #0x1                   	// #1
  404084:	b	404120 <ferror@plt+0x13f0>
  404088:	mov	w2, w21
  40408c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404090:	add	x1, x1, #0xe58
  404094:	mov	x0, x20
  404098:	bl	40eeec <ferror@plt+0xc1bc>
  40409c:	mov	w0, #0x1                   	// #1
  4040a0:	b	404120 <ferror@plt+0x13f0>
  4040a4:	tbnz	w2, #7, 404170 <ferror@plt+0x1440>
  4040a8:	ldr	x0, [x19]
  4040ac:	ldr	x1, [x0, #40]
  4040b0:	cbz	x1, 40413c <ferror@plt+0x140c>
  4040b4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4040b8:	ldr	w2, [x0, #1544]
  4040bc:	neg	w2, w2
  4040c0:	ldr	x0, [x19, #16]
  4040c4:	bl	403ed0 <ferror@plt+0x11a0>
  4040c8:	mov	x3, x0
  4040cc:	ldrb	w0, [x19, #32]
  4040d0:	tbnz	w0, #3, 404130 <ferror@plt+0x1400>
  4040d4:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4040d8:	add	x1, x4, #0xd70
  4040dc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4040e0:	add	x4, x4, #0xe30
  4040e4:	tst	x0, #0x10
  4040e8:	csel	x4, x4, x1, ne  // ne = any
  4040ec:	mov	w2, w21
  4040f0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4040f4:	add	x1, x1, #0xe78
  4040f8:	mov	x0, x20
  4040fc:	bl	40eeec <ferror@plt+0xc1bc>
  404100:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404104:	ldr	w0, [x0, #1624]
  404108:	cbnz	w0, 404154 <ferror@plt+0x1424>
  40410c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404110:	add	x1, x1, #0x5b8
  404114:	mov	x0, x20
  404118:	bl	40eeec <ferror@plt+0xc1bc>
  40411c:	mov	w0, #0x1                   	// #1
  404120:	ldp	x19, x20, [sp, #16]
  404124:	ldr	x21, [sp, #32]
  404128:	ldp	x29, x30, [sp], #48
  40412c:	ret
  404130:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404134:	add	x4, x4, #0xe20
  404138:	b	4040ec <ferror@plt+0x13bc>
  40413c:	mov	w2, w21
  404140:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404144:	add	x1, x1, #0xe90
  404148:	mov	x0, x20
  40414c:	bl	40eeec <ferror@plt+0xc1bc>
  404150:	b	404100 <ferror@plt+0x13d0>
  404154:	ldr	x0, [x19, #8]
  404158:	ldr	w2, [x0, #32]
  40415c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404160:	add	x1, x1, #0xeb0
  404164:	mov	x0, x20
  404168:	bl	40eeec <ferror@plt+0xc1bc>
  40416c:	b	40410c <ferror@plt+0x13dc>
  404170:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404174:	ldr	w0, [x0, #1608]
  404178:	cbz	w0, 404120 <ferror@plt+0x13f0>
  40417c:	ldr	x0, [x19, #8]
  404180:	ldrb	w1, [x0, #48]
  404184:	mov	w0, #0x0                   	// #0
  404188:	tbnz	w1, #5, 404120 <ferror@plt+0x13f0>
  40418c:	ldr	x0, [x19]
  404190:	ldr	x1, [x0, #40]
  404194:	cbz	x1, 4041cc <ferror@plt+0x149c>
  404198:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40419c:	ldr	w2, [x0, #1544]
  4041a0:	neg	w2, w2
  4041a4:	ldr	x0, [x19, #16]
  4041a8:	bl	403ed0 <ferror@plt+0x11a0>
  4041ac:	mov	x3, x0
  4041b0:	mov	w2, w21
  4041b4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4041b8:	add	x1, x1, #0xec0
  4041bc:	mov	x0, x20
  4041c0:	bl	40eeec <ferror@plt+0xc1bc>
  4041c4:	mov	w0, #0x1                   	// #1
  4041c8:	b	404120 <ferror@plt+0x13f0>
  4041cc:	mov	w2, w21
  4041d0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4041d4:	add	x1, x1, #0xee0
  4041d8:	mov	x0, x20
  4041dc:	bl	40eeec <ferror@plt+0xc1bc>
  4041e0:	mov	w0, #0x1                   	// #1
  4041e4:	b	404120 <ferror@plt+0x13f0>
  4041e8:	stp	x29, x30, [sp, #-32]!
  4041ec:	mov	x29, sp
  4041f0:	stp	x19, x20, [sp, #16]
  4041f4:	mov	w19, w0
  4041f8:	cbz	w0, 40423c <ferror@plt+0x150c>
  4041fc:	mov	w0, w1
  404200:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404204:	ldr	x20, [x1, #1448]
  404208:	mov	w2, #0x2                   	// #2
  40420c:	mov	w1, w19
  404210:	mov	w0, w0
  404214:	bl	403ed0 <ferror@plt+0x11a0>
  404218:	mov	w3, w19
  40421c:	mov	x2, x0
  404220:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404224:	add	x1, x1, #0xf08
  404228:	mov	x0, x20
  40422c:	bl	40eeec <ferror@plt+0xc1bc>
  404230:	ldp	x19, x20, [sp, #16]
  404234:	ldp	x29, x30, [sp], #32
  404238:	ret
  40423c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404240:	add	x1, x1, #0xf28
  404244:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404248:	ldr	x0, [x0, #1448]
  40424c:	bl	40eeec <ferror@plt+0xc1bc>
  404250:	b	404230 <ferror@plt+0x1500>
  404254:	ldr	x1, [x0, #8]
  404258:	cmp	x1, #0x8
  40425c:	b.ls	404264 <ferror@plt+0x1534>  // b.plast
  404260:	ret
  404264:	stp	x29, x30, [sp, #-16]!
  404268:	mov	x29, sp
  40426c:	mov	w4, #0x20                  	// #32
  404270:	mov	x3, #0x9                   	// #9
  404274:	sub	x3, x3, x1
  404278:	mov	x2, #0x0                   	// #0
  40427c:	mov	x1, #0x0                   	// #0
  404280:	bl	4574b8 <_obstack_memory_used@@Base+0x3118>
  404284:	ldp	x29, x30, [sp], #16
  404288:	ret
  40428c:	stp	x29, x30, [sp, #-48]!
  404290:	mov	x29, sp
  404294:	stp	x21, x22, [sp, #32]
  404298:	mov	x21, x0
  40429c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4042a0:	ldr	w0, [x0, #1540]
  4042a4:	cbz	w0, 404384 <ferror@plt+0x1654>
  4042a8:	stp	x19, x20, [sp, #16]
  4042ac:	mov	x20, x1
  4042b0:	ldr	x0, [x1, #32]
  4042b4:	ldr	x2, [x0, #112]
  4042b8:	ldr	x19, [x0, #144]
  4042bc:	ldr	x22, [x0, #40]
  4042c0:	cbnz	x2, 404398 <ferror@plt+0x1668>
  4042c4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4042c8:	ldr	w0, [x0, #1568]
  4042cc:	cbnz	w0, 4043ac <ferror@plt+0x167c>
  4042d0:	ldr	x2, [x20]
  4042d4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4042d8:	add	x1, x1, #0xf40
  4042dc:	mov	x0, x21
  4042e0:	bl	402ce0 <fprintf@plt>
  4042e4:	mov	w2, #0xffffffff            	// #-1
  4042e8:	mov	x1, #0x0                   	// #0
  4042ec:	mov	x0, x22
  4042f0:	bl	403ed0 <ferror@plt+0x11a0>
  4042f4:	mov	x2, x0
  4042f8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4042fc:	add	x1, x1, #0xf50
  404300:	mov	x0, x21
  404304:	bl	402ce0 <fprintf@plt>
  404308:	mov	w2, #0x0                   	// #0
  40430c:	mov	x1, x22
  404310:	mov	x0, x19
  404314:	bl	403ed0 <ferror@plt+0x11a0>
  404318:	mov	x2, x0
  40431c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404320:	add	x1, x1, #0xf60
  404324:	mov	x0, x21
  404328:	bl	402ce0 <fprintf@plt>
  40432c:	ldr	x1, [x20, #40]
  404330:	ldr	x0, [x20, #32]
  404334:	sub	x1, x1, x0
  404338:	asr	x1, x1, #3
  40433c:	mov	x0, #0x4ec5                	// #20165
  404340:	movk	x0, #0xc4ec, lsl #16
  404344:	movk	x0, #0xec4e, lsl #32
  404348:	movk	x0, #0x4ec4, lsl #48
  40434c:	mul	x1, x1, x0
  404350:	mov	w2, #0x0                   	// #0
  404354:	sub	w1, w1, #0x2
  404358:	ldr	w0, [x20, #56]
  40435c:	bl	403ed0 <ferror@plt+0x11a0>
  404360:	mov	x2, x0
  404364:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404368:	add	x1, x1, #0xf70
  40436c:	mov	x0, x21
  404370:	bl	402ce0 <fprintf@plt>
  404374:	mov	x1, x21
  404378:	mov	w0, #0xa                   	// #10
  40437c:	bl	402750 <fputc@plt>
  404380:	ldp	x19, x20, [sp, #16]
  404384:	ldp	x21, x22, [sp, #32]
  404388:	ldp	x29, x30, [sp], #48
  40438c:	ret
  404390:	ldr	x2, [x2, #48]
  404394:	cbz	x2, 4042c4 <ferror@plt+0x1594>
  404398:	ldrb	w3, [x2, #32]
  40439c:	tbz	w3, #2, 404390 <ferror@plt+0x1660>
  4043a0:	ldr	x0, [x2, #16]
  4043a4:	sub	x19, x19, x0
  4043a8:	b	404390 <ferror@plt+0x1660>
  4043ac:	ldr	x0, [x20, #8]
  4043b0:	cbz	x0, 4043bc <ferror@plt+0x168c>
  4043b4:	ldr	x2, [x20, #8]
  4043b8:	b	4042d4 <ferror@plt+0x15a4>
  4043bc:	mov	w1, #0x1                   	// #1
  4043c0:	ldr	x0, [x20]
  4043c4:	bl	4448e8 <ferror@plt+0x41bb8>
  4043c8:	str	x0, [x20, #8]
  4043cc:	cbnz	x0, 4043b4 <ferror@plt+0x1684>
  4043d0:	ldr	x0, [x20]
  4043d4:	str	x0, [x20, #8]
  4043d8:	b	4043b4 <ferror@plt+0x1684>
  4043dc:	stp	x29, x30, [sp, #-64]!
  4043e0:	mov	x29, sp
  4043e4:	stp	x19, x20, [sp, #16]
  4043e8:	stp	x21, x22, [sp, #32]
  4043ec:	mov	x3, x0
  4043f0:	mov	x21, x1
  4043f4:	mov	x20, x2
  4043f8:	ldr	x4, [x1]
  4043fc:	ldr	x2, [x1, #8]
  404400:	sub	x0, x2, x4
  404404:	cmp	xzr, x0, asr #5
  404408:	b.ge	4045bc <ferror@plt+0x188c>  // b.tcont
  40440c:	asr	x5, x0, #5
  404410:	add	x5, x4, x5, lsl #5
  404414:	mov	x0, x4
  404418:	ldr	x1, [x0]
  40441c:	cmp	x3, x1
  404420:	b.eq	404484 <ferror@plt+0x1754>  // b.none
  404424:	ldr	x1, [x0, #8]
  404428:	cmp	x3, x1
  40442c:	b.eq	404480 <ferror@plt+0x1750>  // b.none
  404430:	ldr	x1, [x0, #16]
  404434:	cmp	x3, x1
  404438:	b.eq	4045ac <ferror@plt+0x187c>  // b.none
  40443c:	ldr	x1, [x0, #24]
  404440:	cmp	x3, x1
  404444:	b.eq	4045b4 <ferror@plt+0x1884>  // b.none
  404448:	add	x0, x0, #0x20
  40444c:	cmp	x5, x0
  404450:	b.ne	404418 <ferror@plt+0x16e8>  // b.any
  404454:	sub	x1, x2, x0
  404458:	cmp	x1, #0x10
  40445c:	b.eq	4045d4 <ferror@plt+0x18a4>  // b.none
  404460:	cmp	x1, #0x18
  404464:	b.eq	4045c4 <ferror@plt+0x1894>  // b.none
  404468:	cmp	x1, #0x8
  40446c:	b.ne	40459c <ferror@plt+0x186c>  // b.any
  404470:	ldr	x1, [x0]
  404474:	cmp	x3, x1
  404478:	b.ne	40459c <ferror@plt+0x186c>  // b.any
  40447c:	b	404484 <ferror@plt+0x1754>
  404480:	add	x0, x0, #0x8
  404484:	cmp	x0, x2
  404488:	b.eq	40459c <ferror@plt+0x186c>  // b.none
  40448c:	stp	x23, x24, [sp, #48]
  404490:	sub	x19, x0, x4
  404494:	asr	x19, x19, #3
  404498:	add	x1, x0, #0x8
  40449c:	cmp	x2, x1
  4044a0:	b.eq	4044ac <ferror@plt+0x177c>  // b.none
  4044a4:	sub	x2, x2, x1
  4044a8:	bl	402630 <memmove@plt>
  4044ac:	ldr	x0, [x21, #8]
  4044b0:	sub	x0, x0, #0x8
  4044b4:	str	x0, [x21, #8]
  4044b8:	ubfiz	x4, x19, #1, #32
  4044bc:	add	x19, x4, w19, uxtw
  4044c0:	lsl	x19, x19, #3
  4044c4:	ldr	x22, [x20]
  4044c8:	add	x23, x22, x19
  4044cc:	ldr	x0, [x23, #8]
  4044d0:	ldr	x1, [x22, x19]
  4044d4:	sub	x0, x0, x1
  4044d8:	asr	x1, x0, #3
  4044dc:	cmp	xzr, x0, asr #3
  4044e0:	b.eq	4045ec <ferror@plt+0x18bc>  // b.none
  4044e4:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  4044e8:	cmp	x1, x2
  4044ec:	b.hi	4045e8 <ferror@plt+0x18b8>  // b.pmore
  4044f0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4044f4:	mov	x24, x0
  4044f8:	ldr	x1, [x22, x19]
  4044fc:	ldr	x0, [x23, #8]
  404500:	sub	x23, x0, x1
  404504:	cmp	x1, x0
  404508:	b.eq	404518 <ferror@plt+0x17e8>  // b.none
  40450c:	mov	x2, x23
  404510:	mov	x0, x24
  404514:	bl	402630 <memmove@plt>
  404518:	add	x23, x24, x23
  40451c:	ldr	x0, [x20]
  404520:	add	x19, x0, x19
  404524:	add	x1, x19, #0x18
  404528:	ldr	x0, [x20, #8]
  40452c:	cmp	x1, x0
  404530:	b.eq	404550 <ferror@plt+0x1820>  // b.none
  404534:	sub	x0, x0, x1
  404538:	asr	x22, x0, #3
  40453c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  404540:	movk	x1, #0xaaab
  404544:	mul	x22, x22, x1
  404548:	cmp	x0, #0x0
  40454c:	b.gt	404608 <ferror@plt+0x18d8>
  404550:	ldr	x0, [x20, #8]
  404554:	sub	x1, x0, #0x18
  404558:	str	x1, [x20, #8]
  40455c:	ldur	x0, [x0, #-24]
  404560:	cbz	x0, 404568 <ferror@plt+0x1838>
  404564:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404568:	cmp	x23, x24
  40456c:	b.eq	40458c <ferror@plt+0x185c>  // b.none
  404570:	mov	x19, x24
  404574:	mov	x2, x20
  404578:	mov	x1, x21
  40457c:	ldr	x0, [x19], #8
  404580:	bl	4043dc <ferror@plt+0x16ac>
  404584:	cmp	x23, x19
  404588:	b.ne	404574 <ferror@plt+0x1844>  // b.any
  40458c:	cbz	x24, 404638 <ferror@plt+0x1908>
  404590:	mov	x0, x24
  404594:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404598:	ldp	x23, x24, [sp, #48]
  40459c:	ldp	x19, x20, [sp, #16]
  4045a0:	ldp	x21, x22, [sp, #32]
  4045a4:	ldp	x29, x30, [sp], #64
  4045a8:	ret
  4045ac:	add	x0, x0, #0x10
  4045b0:	b	404484 <ferror@plt+0x1754>
  4045b4:	add	x0, x0, #0x18
  4045b8:	b	404484 <ferror@plt+0x1754>
  4045bc:	mov	x0, x4
  4045c0:	b	404454 <ferror@plt+0x1724>
  4045c4:	ldr	x1, [x0]
  4045c8:	cmp	x3, x1
  4045cc:	b.eq	404484 <ferror@plt+0x1754>  // b.none
  4045d0:	add	x0, x0, #0x8
  4045d4:	ldr	x1, [x0]
  4045d8:	cmp	x3, x1
  4045dc:	b.eq	404484 <ferror@plt+0x1754>  // b.none
  4045e0:	add	x0, x0, #0x8
  4045e4:	b	404470 <ferror@plt+0x1740>
  4045e8:	bl	402d74 <ferror@plt+0x44>
  4045ec:	mov	x24, #0x0                   	// #0
  4045f0:	b	4044f8 <ferror@plt+0x17c8>
  4045f4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4045f8:	add	x19, x19, #0x18
  4045fc:	sub	x22, x22, #0x1
  404600:	cmp	x22, #0x0
  404604:	b.le	404550 <ferror@plt+0x1820>
  404608:	ldr	x0, [x19]
  40460c:	ldr	x1, [x19, #24]
  404610:	str	x1, [x19]
  404614:	ldr	x1, [x19, #32]
  404618:	str	x1, [x19, #8]
  40461c:	ldr	x1, [x19, #40]
  404620:	str	x1, [x19, #16]
  404624:	str	xzr, [x19, #24]
  404628:	str	xzr, [x19, #32]
  40462c:	str	xzr, [x19, #40]
  404630:	cbnz	x0, 4045f4 <ferror@plt+0x18c4>
  404634:	b	4045f8 <ferror@plt+0x18c8>
  404638:	ldp	x23, x24, [sp, #48]
  40463c:	b	40459c <ferror@plt+0x186c>
  404640:	stp	x29, x30, [sp, #-96]!
  404644:	mov	x29, sp
  404648:	stp	x19, x20, [sp, #16]
  40464c:	stp	x21, x22, [sp, #32]
  404650:	stp	x23, x24, [sp, #48]
  404654:	stp	x25, x26, [sp, #64]
  404658:	stp	x27, x28, [sp, #80]
  40465c:	mov	x21, x0
  404660:	bl	402680 <strlen@plt>
  404664:	add	x0, x0, #0x1
  404668:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  40466c:	mov	x24, x0
  404670:	mov	x23, x0
  404674:	mov	w27, #0x5e                  	// #94
  404678:	mov	x26, #0x0                   	// #0
  40467c:	mov	x25, #0x2                   	// #2
  404680:	mov	w28, #0x23                  	// #35
  404684:	b	4046b0 <ferror@plt+0x1980>
  404688:	mov	x20, x21
  40468c:	mov	w19, w0
  404690:	mov	x22, x26
  404694:	mov	x2, x22
  404698:	mov	x1, x21
  40469c:	mov	x0, x23
  4046a0:	bl	402620 <memcpy@plt>
  4046a4:	add	x23, x23, x22
  4046a8:	mov	x21, x20
  4046ac:	cbnz	w19, 404700 <ferror@plt+0x19d0>
  4046b0:	ldrb	w0, [x21]
  4046b4:	cbz	w0, 40470c <ferror@plt+0x19dc>
  4046b8:	cmp	w0, #0x2f
  4046bc:	b.eq	404688 <ferror@plt+0x1958>  // b.none
  4046c0:	mov	x20, x21
  4046c4:	ldrb	w19, [x20, #1]!
  4046c8:	cmp	w19, #0x2f
  4046cc:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4046d0:	b.ne	4046c4 <ferror@plt+0x1994>  // b.any
  4046d4:	sub	x22, x20, x21
  4046d8:	cmp	w0, #0x2e
  4046dc:	ccmp	x22, #0x2, #0x0, eq  // eq = none
  4046e0:	b.ne	404694 <ferror@plt+0x1964>  // b.any
  4046e4:	ldrb	w0, [x21, #1]
  4046e8:	mov	x22, x25
  4046ec:	cmp	w0, #0x2e
  4046f0:	b.ne	404694 <ferror@plt+0x1964>  // b.any
  4046f4:	strb	w27, [x23], #1
  4046f8:	mov	x21, x20
  4046fc:	b	4046ac <ferror@plt+0x197c>
  404700:	strb	w28, [x23], #1
  404704:	add	x21, x21, #0x1
  404708:	b	4046b0 <ferror@plt+0x1980>
  40470c:	strb	wzr, [x23]
  404710:	mov	x0, x24
  404714:	ldp	x19, x20, [sp, #16]
  404718:	ldp	x21, x22, [sp, #32]
  40471c:	ldp	x23, x24, [sp, #48]
  404720:	ldp	x25, x26, [sp, #64]
  404724:	ldp	x27, x28, [sp, #80]
  404728:	ldp	x29, x30, [sp], #96
  40472c:	ret
  404730:	stp	x29, x30, [sp, #-48]!
  404734:	mov	x29, sp
  404738:	stp	x19, x20, [sp, #16]
  40473c:	str	x21, [sp, #32]
  404740:	mov	x20, x1
  404744:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404748:	ldr	w1, [x1, #1604]
  40474c:	cbnz	w1, 404788 <ferror@plt+0x1a58>
  404750:	bl	453fdc <ferror@plt+0x512ac>
  404754:	mov	x21, x0
  404758:	mov	x0, x21
  40475c:	bl	402680 <strlen@plt>
  404760:	mov	x19, x0
  404764:	mov	x2, x0
  404768:	mov	x1, x21
  40476c:	mov	x0, x20
  404770:	bl	402620 <memcpy@plt>
  404774:	add	x0, x20, x19
  404778:	ldp	x19, x20, [sp, #16]
  40477c:	ldr	x21, [sp, #32]
  404780:	ldp	x29, x30, [sp], #48
  404784:	ret
  404788:	bl	404640 <ferror@plt+0x1910>
  40478c:	mov	x21, x0
  404790:	b	404758 <ferror@plt+0x1a28>
  404794:	str	xzr, [x0]
  404798:	str	xzr, [x0, #8]
  40479c:	str	xzr, [x0, #16]
  4047a0:	str	xzr, [x0, #24]
  4047a4:	str	wzr, [x0, #32]
  4047a8:	str	xzr, [x0, #40]
  4047ac:	ldrb	w1, [x0, #48]
  4047b0:	and	w1, w1, #0xffffff80
  4047b4:	strb	w1, [x0, #48]
  4047b8:	str	xzr, [x0, #56]
  4047bc:	str	xzr, [x0, #64]
  4047c0:	str	xzr, [x0, #72]
  4047c4:	str	xzr, [x0, #96]
  4047c8:	str	xzr, [x0, #80]
  4047cc:	ret
  4047d0:	mov	x1, x0
  4047d4:	str	xzr, [x1], #8
  4047d8:	str	xzr, [x0, #8]
  4047dc:	str	xzr, [x1, #8]
  4047e0:	str	xzr, [x1, #16]
  4047e4:	str	xzr, [x0, #32]
  4047e8:	str	xzr, [x0, #40]
  4047ec:	str	xzr, [x0, #48]
  4047f0:	ldrb	w1, [x0, #56]
  4047f4:	and	w1, w1, #0xfffffff8
  4047f8:	strb	w1, [x0, #56]
  4047fc:	ret
  404800:	ldr	x2, [x0, #32]
  404804:	ldr	x3, [x0, #40]
  404808:	sub	x4, x3, x2
  40480c:	asr	x0, x4, #5
  404810:	cmp	xzr, x4, asr #5
  404814:	b.ge	404858 <ferror@plt+0x1b28>  // b.tcont
  404818:	add	x0, x2, x0, lsl #5
  40481c:	ldr	x4, [x2]
  404820:	cmp	x1, x4
  404824:	b.eq	404880 <ferror@plt+0x1b50>  // b.none
  404828:	ldr	x4, [x2, #8]
  40482c:	cmp	x1, x4
  404830:	b.eq	40487c <ferror@plt+0x1b4c>  // b.none
  404834:	ldr	x4, [x2, #16]
  404838:	cmp	x1, x4
  40483c:	b.eq	40488c <ferror@plt+0x1b5c>  // b.none
  404840:	ldr	x4, [x2, #24]
  404844:	cmp	x1, x4
  404848:	b.eq	404894 <ferror@plt+0x1b64>  // b.none
  40484c:	add	x2, x2, #0x20
  404850:	cmp	x2, x0
  404854:	b.ne	40481c <ferror@plt+0x1aec>  // b.any
  404858:	sub	x0, x3, x2
  40485c:	cmp	x0, #0x10
  404860:	b.eq	4048ac <ferror@plt+0x1b7c>  // b.none
  404864:	cmp	x0, #0x18
  404868:	b.eq	40489c <ferror@plt+0x1b6c>  // b.none
  40486c:	cmp	x0, #0x8
  404870:	b.eq	4048bc <ferror@plt+0x1b8c>  // b.none
  404874:	mov	x2, x3
  404878:	b	404880 <ferror@plt+0x1b50>
  40487c:	add	x2, x2, #0x8
  404880:	cmp	x3, x2
  404884:	cset	w0, ne  // ne = any
  404888:	ret
  40488c:	add	x2, x2, #0x10
  404890:	b	404880 <ferror@plt+0x1b50>
  404894:	add	x2, x2, #0x18
  404898:	b	404880 <ferror@plt+0x1b50>
  40489c:	ldr	x0, [x2]
  4048a0:	cmp	x1, x0
  4048a4:	b.eq	404880 <ferror@plt+0x1b50>  // b.none
  4048a8:	add	x2, x2, #0x8
  4048ac:	ldr	x0, [x2]
  4048b0:	cmp	x1, x0
  4048b4:	b.eq	404880 <ferror@plt+0x1b50>  // b.none
  4048b8:	add	x2, x2, #0x8
  4048bc:	ldr	x0, [x2]
  4048c0:	cmp	x1, x0
  4048c4:	csel	x2, x2, x3, eq  // eq = none
  4048c8:	b	404880 <ferror@plt+0x1b50>
  4048cc:	str	wzr, [x0]
  4048d0:	str	xzr, [x0, #8]
  4048d4:	str	xzr, [x0, #16]
  4048d8:	str	xzr, [x0, #24]
  4048dc:	str	xzr, [x0, #32]
  4048e0:	str	xzr, [x0, #40]
  4048e4:	str	wzr, [x0, #48]
  4048e8:	str	wzr, [x0, #52]
  4048ec:	str	wzr, [x0, #56]
  4048f0:	str	wzr, [x0, #60]
  4048f4:	str	wzr, [x0, #64]
  4048f8:	str	wzr, [x0, #68]
  4048fc:	str	wzr, [x0, #72]
  404900:	str	xzr, [x0, #80]
  404904:	str	wzr, [x0, #88]
  404908:	str	xzr, [x0, #96]
  40490c:	str	xzr, [x0, #104]
  404910:	str	xzr, [x0, #112]
  404914:	str	xzr, [x0, #120]
  404918:	str	xzr, [x0, #128]
  40491c:	str	xzr, [x0, #136]
  404920:	ret
  404924:	str	xzr, [x0]
  404928:	str	xzr, [x0, #8]
  40492c:	str	wzr, [x0, #16]
  404930:	str	wzr, [x0, #20]
  404934:	str	wzr, [x0, #24]
  404938:	ldrb	w1, [x0, #28]
  40493c:	and	w1, w1, #0xfffffff8
  404940:	strb	w1, [x0, #28]
  404944:	str	xzr, [x0, #32]
  404948:	str	xzr, [x0, #40]
  40494c:	str	xzr, [x0, #48]
  404950:	str	wzr, [x0, #56]
  404954:	str	xzr, [x0, #64]
  404958:	str	xzr, [x0, #72]
  40495c:	str	xzr, [x0, #80]
  404960:	str	wzr, [x0, #88]
  404964:	str	wzr, [x0, #92]
  404968:	str	wzr, [x0, #96]
  40496c:	str	wzr, [x0, #100]
  404970:	str	wzr, [x0, #104]
  404974:	str	xzr, [x0, #112]
  404978:	str	xzr, [x0, #120]
  40497c:	str	xzr, [x0, #128]
  404980:	str	xzr, [x0, #136]
  404984:	ret
  404988:	stp	x29, x30, [sp, #-64]!
  40498c:	mov	x29, sp
  404990:	stp	x19, x20, [sp, #16]
  404994:	stp	x21, x22, [sp, #32]
  404998:	str	x23, [sp, #48]
  40499c:	mov	x22, x0
  4049a0:	ldr	x20, [x0, #40]
  4049a4:	ldr	x0, [x0, #32]
  4049a8:	sub	x20, x20, x0
  4049ac:	asr	x20, x20, #3
  4049b0:	mov	x0, #0x4ec5                	// #20165
  4049b4:	movk	x0, #0xc4ec, lsl #16
  4049b8:	movk	x0, #0xec4e, lsl #32
  4049bc:	movk	x0, #0x4ec4, lsl #48
  4049c0:	mul	x20, x20, x0
  4049c4:	subs	w20, w20, #0x1
  4049c8:	b.mi	404a0c <ferror@plt+0x1cdc>  // b.first
  4049cc:	sxtw	x0, w20
  4049d0:	add	x21, x0, w20, sxtw #1
  4049d4:	add	x21, x0, x21, lsl #2
  4049d8:	lsl	x21, x21, #3
  4049dc:	b	4049ec <ferror@plt+0x1cbc>
  4049e0:	sub	x21, x21, #0x68
  4049e4:	subs	w20, w20, #0x1
  4049e8:	b.mi	404a0c <ferror@plt+0x1cdc>  // b.first
  4049ec:	ldr	x0, [x22, #32]
  4049f0:	ldr	x19, [x0, x21]
  4049f4:	cbz	x19, 4049e0 <ferror@plt+0x1cb0>
  4049f8:	mov	x0, x19
  4049fc:	ldr	x19, [x19, #40]
  404a00:	bl	402a90 <free@plt>
  404a04:	cbnz	x19, 4049f8 <ferror@plt+0x1cc8>
  404a08:	b	4049e0 <ferror@plt+0x1cb0>
  404a0c:	ldr	x0, [x22, #8]
  404a10:	ldr	x1, [x22]
  404a14:	cmp	x0, x1
  404a18:	b.eq	404a20 <ferror@plt+0x1cf0>  // b.none
  404a1c:	bl	402a90 <free@plt>
  404a20:	mov	x20, x22
  404a24:	ldr	x0, [x20], #112
  404a28:	bl	402a90 <free@plt>
  404a2c:	ldr	x19, [x22, #112]
  404a30:	ldr	x20, [x20, #8]
  404a34:	cmp	x19, x20
  404a38:	b.ne	404a90 <ferror@plt+0x1d60>  // b.any
  404a3c:	ldr	x0, [x22, #112]
  404a40:	cbz	x0, 404a48 <ferror@plt+0x1d18>
  404a44:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404a48:	ldr	x0, [x22, #64]
  404a4c:	cbz	x0, 404a54 <ferror@plt+0x1d24>
  404a50:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404a54:	ldr	x21, [x22, #32]
  404a58:	ldr	x23, [x22, #40]
  404a5c:	cmp	x21, x23
  404a60:	b.ne	404ae0 <ferror@plt+0x1db0>  // b.any
  404a64:	ldr	x0, [x22, #32]
  404a68:	cbz	x0, 404a70 <ferror@plt+0x1d40>
  404a6c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404a70:	ldp	x19, x20, [sp, #16]
  404a74:	ldp	x21, x22, [sp, #32]
  404a78:	ldr	x23, [sp, #48]
  404a7c:	ldp	x29, x30, [sp], #64
  404a80:	ret
  404a84:	add	x19, x19, #0x40
  404a88:	cmp	x20, x19
  404a8c:	b.eq	404a3c <ferror@plt+0x1d0c>  // b.none
  404a90:	ldr	x0, [x19, #32]
  404a94:	cbz	x0, 404a9c <ferror@plt+0x1d6c>
  404a98:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404a9c:	ldr	x0, [x19, #8]
  404aa0:	cbz	x0, 404a84 <ferror@plt+0x1d54>
  404aa4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404aa8:	b	404a84 <ferror@plt+0x1d54>
  404aac:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404ab0:	add	x19, x19, #0x20
  404ab4:	cmp	x20, x19
  404ab8:	b.eq	404ac8 <ferror@plt+0x1d98>  // b.none
  404abc:	ldr	x0, [x19, #8]
  404ac0:	cbnz	x0, 404aac <ferror@plt+0x1d7c>
  404ac4:	b	404ab0 <ferror@plt+0x1d80>
  404ac8:	ldr	x0, [x21, #56]
  404acc:	cbz	x0, 404ad4 <ferror@plt+0x1da4>
  404ad0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  404ad4:	add	x21, x21, #0x68
  404ad8:	cmp	x23, x21
  404adc:	b.eq	404a64 <ferror@plt+0x1d34>  // b.none
  404ae0:	ldr	x19, [x21, #56]
  404ae4:	ldr	x20, [x21, #64]
  404ae8:	cmp	x19, x20
  404aec:	b.ne	404abc <ferror@plt+0x1d8c>  // b.any
  404af0:	b	404ac8 <ferror@plt+0x1d98>
  404af4:	mov	x3, x0
  404af8:	ldrb	w0, [x0, #28]
  404afc:	tbz	w0, #2, 404b2c <ferror@plt+0x1dfc>
  404b00:	ldr	w4, [x3, #104]
  404b04:	mov	w0, #0x0                   	// #0
  404b08:	cmp	w4, w2
  404b0c:	b.ne	404b30 <ferror@plt+0x1e00>  // b.any
  404b10:	ldr	w2, [x3, #88]
  404b14:	cmp	w2, w1
  404b18:	b.hi	404b30 <ferror@plt+0x1e00>  // b.pmore
  404b1c:	ldr	w0, [x3, #96]
  404b20:	cmp	w0, w1
  404b24:	cset	w0, cs  // cs = hs, nlast
  404b28:	b	404b30 <ferror@plt+0x1e00>
  404b2c:	mov	w0, #0x0                   	// #0
  404b30:	ret
  404b34:	stp	x29, x30, [sp, #-48]!
  404b38:	mov	x29, sp
  404b3c:	stp	x19, x20, [sp, #16]
  404b40:	mov	x19, x0
  404b44:	str	x1, [sp, #40]
  404b48:	ldr	x1, [x0, #104]
  404b4c:	ldr	x0, [x0, #112]
  404b50:	cmp	x1, x0
  404b54:	b.eq	404bd8 <ferror@plt+0x1ea8>  // b.none
  404b58:	ldr	x0, [sp, #40]
  404b5c:	str	x0, [x1]
  404b60:	ldr	x0, [x19, #104]
  404b64:	add	x0, x0, #0x8
  404b68:	str	x0, [x19, #104]
  404b6c:	ldr	x0, [sp, #40]
  404b70:	ldr	w0, [x0, #88]
  404b74:	ldr	x3, [x19, #128]
  404b78:	ldr	x4, [x19, #120]
  404b7c:	sub	x2, x3, x4
  404b80:	asr	x1, x2, #3
  404b84:	mov	w5, w0
  404b88:	cmp	x5, x2, asr #3
  404b8c:	b.cs	404be8 <ferror@plt+0x1eb8>  // b.hs, b.nlast
  404b90:	ldr	x0, [sp, #40]
  404b94:	ldr	w20, [x0, #88]
  404b98:	ldr	x19, [x19, #120]
  404b9c:	ldr	x0, [x19, x20, lsl #3]
  404ba0:	cbz	x0, 404c1c <ferror@plt+0x1eec>
  404ba4:	ldr	x0, [x19, x20, lsl #3]
  404ba8:	ldr	x1, [x0, #8]
  404bac:	ldr	x2, [x0, #16]
  404bb0:	cmp	x1, x2
  404bb4:	b.eq	404c38 <ferror@plt+0x1f08>  // b.none
  404bb8:	ldr	x2, [sp, #40]
  404bbc:	str	x2, [x1]
  404bc0:	ldr	x1, [x0, #8]
  404bc4:	add	x1, x1, #0x8
  404bc8:	str	x1, [x0, #8]
  404bcc:	ldp	x19, x20, [sp, #16]
  404bd0:	ldp	x29, x30, [sp], #48
  404bd4:	ret
  404bd8:	add	x2, sp, #0x28
  404bdc:	add	x0, x19, #0x60
  404be0:	bl	4098ac <ferror@plt+0x6b7c>
  404be4:	b	404b6c <ferror@plt+0x1e3c>
  404be8:	add	w0, w0, #0x1
  404bec:	cmp	x0, x1
  404bf0:	b.hi	404c0c <ferror@plt+0x1edc>  // b.pmore
  404bf4:	b.cs	404b90 <ferror@plt+0x1e60>  // b.hs, b.nlast
  404bf8:	add	x0, x4, x0, lsl #3
  404bfc:	cmp	x3, x0
  404c00:	b.eq	404b90 <ferror@plt+0x1e60>  // b.none
  404c04:	str	x0, [x19, #128]
  404c08:	b	404b90 <ferror@plt+0x1e60>
  404c0c:	sub	x1, x0, x1
  404c10:	add	x0, x19, #0x78
  404c14:	bl	4099d0 <ferror@plt+0x6ca0>
  404c18:	b	404b90 <ferror@plt+0x1e60>
  404c1c:	mov	x0, #0x18                  	// #24
  404c20:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404c24:	str	xzr, [x0]
  404c28:	str	xzr, [x0, #8]
  404c2c:	str	xzr, [x0, #16]
  404c30:	str	x0, [x19, x20, lsl #3]
  404c34:	b	404ba4 <ferror@plt+0x1e74>
  404c38:	add	x2, sp, #0x28
  404c3c:	bl	4098ac <ferror@plt+0x6b7c>
  404c40:	b	404bcc <ferror@plt+0x1e9c>
  404c44:	stp	x29, x30, [sp, #-112]!
  404c48:	mov	x29, sp
  404c4c:	stp	x21, x22, [sp, #32]
  404c50:	mov	x22, x0
  404c54:	ldrb	w0, [x1, #56]
  404c58:	tbnz	w0, #0, 404c68 <ferror@plt+0x1f38>
  404c5c:	ldp	x21, x22, [sp, #32]
  404c60:	ldp	x29, x30, [sp], #112
  404c64:	ret
  404c68:	stp	x19, x20, [sp, #16]
  404c6c:	stp	x23, x24, [sp, #48]
  404c70:	mov	x20, x1
  404c74:	mov	w23, w2
  404c78:	mov	x19, x3
  404c7c:	mov	x0, #0x38                  	// #56
  404c80:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404c84:	mov	x21, x0
  404c88:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404c8c:	add	x1, x1, #0xe80
  404c90:	str	x1, [x0], #8
  404c94:	mov	w4, #0x1                   	// #1
  404c98:	mov	w3, #0x0                   	// #0
  404c9c:	mov	w2, #0x0                   	// #0
  404ca0:	mov	x1, #0xd                   	// #13
  404ca4:	bl	409c6c <ferror@plt+0x6f3c>
  404ca8:	mov	x0, #0x10                  	// #16
  404cac:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404cb0:	mov	x2, x0
  404cb4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404cb8:	add	x0, x0, #0xee0
  404cbc:	str	x0, [x2]
  404cc0:	ucvtf	d0, w23
  404cc4:	str	d0, [x2, #8]
  404cc8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404ccc:	add	x1, x1, #0xf88
  404cd0:	mov	x0, x21
  404cd4:	bl	40d5ec <ferror@plt+0xa8bc>
  404cd8:	cbz	x19, 404d04 <ferror@plt+0x1fd4>
  404cdc:	mov	x0, #0x10                  	// #16
  404ce0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404ce4:	mov	x23, x0
  404ce8:	mov	x1, x19
  404cec:	bl	40d388 <ferror@plt+0xa658>
  404cf0:	mov	x2, x23
  404cf4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404cf8:	add	x1, x1, #0xf98
  404cfc:	mov	x0, x21
  404d00:	bl	40d5ec <ferror@plt+0xa8bc>
  404d04:	mov	x0, #0x10                  	// #16
  404d08:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404d0c:	mov	x2, x0
  404d10:	ldr	d0, [x20]
  404d14:	scvtf	d0, d0
  404d18:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404d1c:	add	x0, x0, #0xee0
  404d20:	str	x0, [x2]
  404d24:	str	d0, [x2, #8]
  404d28:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404d2c:	add	x1, x1, #0xfa8
  404d30:	mov	x0, x21
  404d34:	bl	40d5ec <ferror@plt+0xa8bc>
  404d38:	mov	x0, #0x10                  	// #16
  404d3c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404d40:	mov	x2, x0
  404d44:	ldrb	w1, [x20, #56]
  404d48:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404d4c:	add	x0, x0, #0xf40
  404d50:	str	x0, [x2]
  404d54:	tst	x1, #0x4
  404d58:	cset	w0, eq  // eq = none
  404d5c:	add	w0, w0, #0x4
  404d60:	str	w0, [x2, #8]
  404d64:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404d68:	add	x1, x1, #0xfb0
  404d6c:	mov	x0, x21
  404d70:	bl	40d5ec <ferror@plt+0xa8bc>
  404d74:	mov	x0, #0x10                  	// #16
  404d78:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404d7c:	mov	x23, x0
  404d80:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404d84:	add	x0, x0, #0xeb0
  404d88:	str	x0, [x23]
  404d8c:	str	xzr, [x23, #8]
  404d90:	mov	x2, x23
  404d94:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404d98:	add	x1, x1, #0xfc8
  404d9c:	mov	x0, x21
  404da0:	bl	40d5ec <ferror@plt+0xa8bc>
  404da4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  404da8:	ldr	w0, [x0, #1540]
  404dac:	cbz	w0, 404ef8 <ferror@plt+0x21c8>
  404db0:	ldr	x19, [x20, #8]
  404db4:	ldr	x0, [x20, #16]
  404db8:	cmp	x19, x0
  404dbc:	b.eq	404ef8 <ferror@plt+0x21c8>  // b.none
  404dc0:	stp	x25, x26, [sp, #64]
  404dc4:	stp	x27, x28, [sp, #80]
  404dc8:	str	d8, [sp, #96]
  404dcc:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404dd0:	add	x28, x28, #0xe80
  404dd4:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404dd8:	add	x27, x27, #0xee0
  404ddc:	b	404df0 <ferror@plt+0x20c0>
  404de0:	add	x19, x19, #0x8
  404de4:	ldr	x0, [x20, #16]
  404de8:	cmp	x0, x19
  404dec:	b.eq	404eec <ferror@plt+0x21bc>  // b.none
  404df0:	ldr	x0, [x19]
  404df4:	ldrb	w0, [x0, #32]
  404df8:	tbnz	w0, #7, 404de0 <ferror@plt+0x20b0>
  404dfc:	tbnz	w0, #5, 404de0 <ferror@plt+0x20b0>
  404e00:	mov	x0, #0x38                  	// #56
  404e04:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404e08:	mov	x25, x0
  404e0c:	str	x28, [x0], #8
  404e10:	mov	w4, #0x1                   	// #1
  404e14:	mov	w3, #0x0                   	// #0
  404e18:	mov	w2, #0x0                   	// #0
  404e1c:	mov	x1, #0xd                   	// #13
  404e20:	bl	409c6c <ferror@plt+0x6f3c>
  404e24:	ldr	x0, [x19]
  404e28:	ldr	d8, [x0, #16]
  404e2c:	scvtf	d8, d8
  404e30:	mov	x0, #0x10                  	// #16
  404e34:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404e38:	mov	x2, x0
  404e3c:	str	x27, [x0]
  404e40:	str	d8, [x0, #8]
  404e44:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404e48:	add	x1, x1, #0xfa8
  404e4c:	mov	x0, x25
  404e50:	bl	40d5ec <ferror@plt+0xa8bc>
  404e54:	ldr	x0, [x19]
  404e58:	ldrb	w26, [x0, #32]
  404e5c:	and	w26, w26, #0x10
  404e60:	mov	x0, #0x10                  	// #16
  404e64:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404e68:	mov	x2, x0
  404e6c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404e70:	add	x0, x0, #0xf40
  404e74:	str	x0, [x2]
  404e78:	cmp	w26, #0x0
  404e7c:	cset	w0, eq  // eq = none
  404e80:	add	w0, w0, #0x4
  404e84:	str	w0, [x2, #8]
  404e88:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404e8c:	add	x1, x1, #0xfd8
  404e90:	mov	x0, x25
  404e94:	bl	40d5ec <ferror@plt+0xa8bc>
  404e98:	ldr	x0, [x19]
  404e9c:	ldrb	w24, [x0, #32]
  404ea0:	and	w24, w24, #0x8
  404ea4:	mov	x0, #0x10                  	// #16
  404ea8:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  404eac:	mov	x2, x0
  404eb0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  404eb4:	add	x0, x0, #0xf40
  404eb8:	str	x0, [x2]
  404ebc:	cmp	w24, #0x0
  404ec0:	cset	w0, eq  // eq = none
  404ec4:	add	w0, w0, #0x4
  404ec8:	str	w0, [x2, #8]
  404ecc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404ed0:	add	x1, x1, #0xfe0
  404ed4:	mov	x0, x25
  404ed8:	bl	40d5ec <ferror@plt+0xa8bc>
  404edc:	mov	x1, x25
  404ee0:	mov	x0, x23
  404ee4:	bl	40d1f8 <ferror@plt+0xa4c8>
  404ee8:	b	404de0 <ferror@plt+0x20b0>
  404eec:	ldp	x25, x26, [sp, #64]
  404ef0:	ldp	x27, x28, [sp, #80]
  404ef4:	ldr	d8, [sp, #96]
  404ef8:	mov	x1, x21
  404efc:	mov	x0, x22
  404f00:	bl	40d1f8 <ferror@plt+0xa4c8>
  404f04:	ldp	x19, x20, [sp, #16]
  404f08:	ldp	x23, x24, [sp, #48]
  404f0c:	b	404c5c <ferror@plt+0x1f2c>
  404f10:	stp	x29, x30, [sp, #-176]!
  404f14:	mov	x29, sp
  404f18:	stp	x19, x20, [sp, #16]
  404f1c:	stp	x21, x22, [sp, #32]
  404f20:	stp	x23, x24, [sp, #48]
  404f24:	stp	x25, x26, [sp, #64]
  404f28:	str	x0, [sp, #104]
  404f2c:	mov	x22, x1
  404f30:	mov	x20, x2
  404f34:	mov	x21, x3
  404f38:	mov	x23, x4
  404f3c:	mov	x24, x5
  404f40:	mov	x26, x6
  404f44:	mov	w3, #0x0                   	// #0
  404f48:	add	x2, sp, #0x68
  404f4c:	ldr	x1, [x21, #8]
  404f50:	ldr	x0, [x21]
  404f54:	bl	40a99c <ferror@plt+0x7c6c>
  404f58:	ldr	x1, [x21, #8]
  404f5c:	cmp	x1, x0
  404f60:	b.ne	404fd8 <ferror@plt+0x22a8>  // b.any
  404f64:	ldr	x0, [sp, #104]
  404f68:	str	x0, [sp, #136]
  404f6c:	add	x1, sp, #0x88
  404f70:	mov	x0, x21
  404f74:	bl	40abac <ferror@plt+0x7e7c>
  404f78:	str	xzr, [sp, #144]
  404f7c:	str	xzr, [sp, #152]
  404f80:	str	xzr, [sp, #160]
  404f84:	ldr	x1, [x23, #8]
  404f88:	ldr	x0, [x23, #16]
  404f8c:	cmp	x1, x0
  404f90:	b.eq	404ff4 <ferror@plt+0x22c4>  // b.none
  404f94:	mov	x0, #0x0                   	// #0
  404f98:	str	x0, [x1]
  404f9c:	ldr	x0, [sp, #152]
  404fa0:	str	x0, [x1, #8]
  404fa4:	ldr	x0, [sp, #160]
  404fa8:	str	x0, [x1, #16]
  404fac:	ldr	x0, [x23, #8]
  404fb0:	add	x0, x0, #0x18
  404fb4:	str	x0, [x23, #8]
  404fb8:	ldr	x0, [sp, #104]
  404fbc:	ldr	x19, [x0]
  404fc0:	cbz	x19, 4052e8 <ferror@plt+0x25b8>
  404fc4:	stp	x27, x28, [sp, #80]
  404fc8:	str	x19, [sp, #120]
  404fcc:	mov	w25, #0x0                   	// #0
  404fd0:	mov	x27, #0x0                   	// #0
  404fd4:	b	4050e0 <ferror@plt+0x23b0>
  404fd8:	stp	x27, x28, [sp, #80]
  404fdc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404fe0:	add	x2, x2, #0xff0
  404fe4:	mov	w1, #0x2ed                 	// #749
  404fe8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  404fec:	add	x0, x0, #0xd90
  404ff0:	bl	4102b4 <ferror@plt+0xd584>
  404ff4:	add	x2, sp, #0x90
  404ff8:	mov	x0, x23
  404ffc:	bl	40abf0 <ferror@plt+0x7ec0>
  405000:	ldr	x0, [sp, #144]
  405004:	cbz	x0, 404fb8 <ferror@plt+0x2288>
  405008:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40500c:	b	404fb8 <ferror@plt+0x2288>
  405010:	add	x2, sp, #0x78
  405014:	mov	x0, x22
  405018:	bl	409b48 <ferror@plt+0x6e18>
  40501c:	b	405128 <ferror@plt+0x23f8>
  405020:	ldr	x3, [x22]
  405024:	ldr	x0, [x22, #8]
  405028:	sub	x0, x0, x3
  40502c:	asr	x4, x0, #3
  405030:	cmp	xzr, x0, asr #3
  405034:	b.eq	4051bc <ferror@plt+0x248c>  // b.none
  405038:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  40503c:	mov	x2, x27
  405040:	mov	w0, #0x0                   	// #0
  405044:	ldr	x2, [x3, x2, lsl #3]
  405048:	ldr	x2, [x2, #24]
  40504c:	cmp	x1, x2
  405050:	csel	x1, x1, x2, le
  405054:	add	w0, w0, #0x1
  405058:	mov	w2, w0
  40505c:	cmp	x4, w0, uxtw
  405060:	b.hi	405044 <ferror@plt+0x2314>  // b.pmore
  405064:	ldr	x0, [x26]
  405068:	add	x0, x0, x1
  40506c:	str	x0, [x26]
  405070:	ldr	x3, [x22]
  405074:	ldr	x0, [x22, #8]
  405078:	cmp	x3, x0
  40507c:	b.eq	4050b8 <ferror@plt+0x2388>  // b.none
  405080:	mov	x4, x27
  405084:	mov	w2, #0x0                   	// #0
  405088:	ldr	x3, [x3, x4, lsl #3]
  40508c:	ldr	x0, [x3, #24]
  405090:	sub	x0, x0, x1
  405094:	str	x0, [x3, #24]
  405098:	add	w2, w2, #0x1
  40509c:	mov	w4, w2
  4050a0:	ldr	x3, [x22]
  4050a4:	ldr	x0, [x22, #8]
  4050a8:	sub	x0, x0, x3
  4050ac:	asr	x0, x0, #3
  4050b0:	cmp	x0, w2, uxtw
  4050b4:	b.hi	405088 <ferror@plt+0x2358>  // b.pmore
  4050b8:	cmp	x1, #0x0
  4050bc:	b.le	4051c4 <ferror@plt+0x2494>
  4050c0:	mov	w25, w28
  4050c4:	ldr	x0, [x22, #8]
  4050c8:	sub	x0, x0, #0x8
  4050cc:	str	x0, [x22, #8]
  4050d0:	ldr	x0, [sp, #120]
  4050d4:	ldr	x19, [x0, #40]
  4050d8:	str	x19, [sp, #120]
  4050dc:	cbz	x19, 4051dc <ferror@plt+0x24ac>
  4050e0:	ldr	x1, [x19, #8]
  4050e4:	str	x1, [sp, #128]
  4050e8:	cmp	x1, x20
  4050ec:	b.cc	4050d0 <ferror@plt+0x23a0>  // b.lo, b.ul, b.last
  4050f0:	ldr	x0, [x19, #24]
  4050f4:	cbz	x0, 4050d0 <ferror@plt+0x23a0>
  4050f8:	mov	x0, x24
  4050fc:	bl	404800 <ferror@plt+0x1ad0>
  405100:	ands	w28, w0, #0xff
  405104:	b.eq	4050d0 <ferror@plt+0x23a0>  // b.none
  405108:	ldr	x1, [x22, #8]
  40510c:	ldr	x0, [x22, #16]
  405110:	cmp	x1, x0
  405114:	b.eq	405010 <ferror@plt+0x22e0>  // b.none
  405118:	str	x19, [x1]
  40511c:	ldr	x0, [x22, #8]
  405120:	add	x0, x0, #0x8
  405124:	str	x0, [x22, #8]
  405128:	ldr	x0, [sp, #128]
  40512c:	cmp	x0, x20
  405130:	b.eq	405020 <ferror@plt+0x22f0>  // b.none
  405134:	ldr	x2, [x22]
  405138:	ldr	x0, [x22, #8]
  40513c:	sub	x0, x0, x2
  405140:	asr	x3, x0, #3
  405144:	cmp	xzr, x0, asr #3
  405148:	b.eq	405170 <ferror@plt+0x2440>  // b.none
  40514c:	mov	x1, x27
  405150:	mov	w0, #0x0                   	// #0
  405154:	ldr	x1, [x2, x1, lsl #3]
  405158:	ldr	x1, [x1, #24]
  40515c:	cbz	x1, 4050c4 <ferror@plt+0x2394>
  405160:	add	w0, w0, #0x1
  405164:	mov	w1, w0
  405168:	cmp	x3, w0, uxtw
  40516c:	b.hi	405154 <ferror@plt+0x2424>  // b.pmore
  405170:	mov	w3, #0x0                   	// #0
  405174:	add	x2, sp, #0x80
  405178:	ldr	x1, [x21, #8]
  40517c:	ldr	x0, [x21]
  405180:	bl	40a99c <ferror@plt+0x7c6c>
  405184:	ldr	x1, [x21, #8]
  405188:	cmp	x1, x0
  40518c:	b.ne	4050c4 <ferror@plt+0x2394>  // b.any
  405190:	mov	x6, x26
  405194:	mov	x5, x24
  405198:	mov	x4, x23
  40519c:	mov	x3, x21
  4051a0:	mov	x2, x20
  4051a4:	mov	x1, x22
  4051a8:	ldr	x0, [sp, #128]
  4051ac:	bl	404f10 <ferror@plt+0x21e0>
  4051b0:	and	w0, w0, #0xff
  4051b4:	orr	w25, w0, w25
  4051b8:	b	4050c4 <ferror@plt+0x2394>
  4051bc:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4051c0:	b	405064 <ferror@plt+0x2334>
  4051c4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4051c8:	add	x2, x2, #0xff8
  4051cc:	mov	w1, #0x2bb                 	// #699
  4051d0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4051d4:	add	x0, x0, #0xd90
  4051d8:	bl	4102b4 <ferror@plt+0xd584>
  4051dc:	cbnz	w25, 4051f4 <ferror@plt+0x24c4>
  4051e0:	ldp	x27, x28, [sp, #80]
  4051e4:	ldr	x0, [sp, #104]
  4051e8:	ldr	x19, [x0]
  4051ec:	cbnz	x19, 405248 <ferror@plt+0x2518>
  4051f0:	b	405208 <ferror@plt+0x24d8>
  4051f4:	mov	x2, x23
  4051f8:	mov	x1, x21
  4051fc:	ldr	x0, [sp, #104]
  405200:	bl	4043dc <ferror@plt+0x16ac>
  405204:	ldp	x27, x28, [sp, #80]
  405208:	mov	w0, w25
  40520c:	ldp	x19, x20, [sp, #16]
  405210:	ldp	x21, x22, [sp, #32]
  405214:	ldp	x23, x24, [sp, #48]
  405218:	ldp	x25, x26, [sp, #64]
  40521c:	ldp	x29, x30, [sp], #176
  405220:	ret
  405224:	stp	x27, x28, [sp, #80]
  405228:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40522c:	add	x2, x2, #0xff0
  405230:	mov	w1, #0x315                 	// #789
  405234:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  405238:	add	x0, x0, #0xd90
  40523c:	bl	4102b4 <ferror@plt+0xd584>
  405240:	ldr	x19, [x19, #40]
  405244:	cbz	x19, 405208 <ferror@plt+0x24d8>
  405248:	ldr	x1, [x19, #8]
  40524c:	str	x1, [sp, #128]
  405250:	cmp	x1, x20
  405254:	b.cc	405240 <ferror@plt+0x2510>  // b.lo, b.ul, b.last
  405258:	ldr	x0, [x19, #24]
  40525c:	cbz	x0, 405240 <ferror@plt+0x2510>
  405260:	mov	x0, x24
  405264:	bl	404800 <ferror@plt+0x1ad0>
  405268:	and	w0, w0, #0xff
  40526c:	cbz	w0, 405240 <ferror@plt+0x2510>
  405270:	mov	w3, #0x0                   	// #0
  405274:	add	x2, sp, #0x80
  405278:	ldr	x1, [x21, #8]
  40527c:	ldr	x0, [x21]
  405280:	bl	40a99c <ferror@plt+0x7c6c>
  405284:	ldr	x3, [x21]
  405288:	sub	x2, x0, x3
  40528c:	asr	x0, x2, #3
  405290:	ldr	x1, [x21, #8]
  405294:	sub	x1, x1, x3
  405298:	asr	x1, x1, #3
  40529c:	cmp	x1, x2, asr #3
  4052a0:	b.ls	405224 <ferror@plt+0x24f4>  // b.plast
  4052a4:	add	x0, x0, x0, lsl #1
  4052a8:	ldr	x4, [x23]
  4052ac:	add	x22, x4, x0, lsl #3
  4052b0:	mov	w3, #0x0                   	// #0
  4052b4:	add	x2, sp, #0x68
  4052b8:	ldr	x1, [x22, #8]
  4052bc:	ldr	x0, [x4, x0, lsl #3]
  4052c0:	bl	40a99c <ferror@plt+0x7c6c>
  4052c4:	ldr	x1, [x22, #8]
  4052c8:	cmp	x1, x0
  4052cc:	b.ne	405240 <ferror@plt+0x2510>  // b.any
  4052d0:	ldr	x0, [sp, #104]
  4052d4:	str	x0, [sp, #168]
  4052d8:	add	x1, sp, #0xa8
  4052dc:	mov	x0, x22
  4052e0:	bl	40abac <ferror@plt+0x7e7c>
  4052e4:	b	405240 <ferror@plt+0x2510>
  4052e8:	mov	w25, #0x0                   	// #0
  4052ec:	b	4051e4 <ferror@plt+0x24b4>
  4052f0:	stp	x29, x30, [sp, #-160]!
  4052f4:	mov	x29, sp
  4052f8:	stp	x19, x20, [sp, #16]
  4052fc:	stp	x21, x22, [sp, #32]
  405300:	stp	x23, x24, [sp, #48]
  405304:	mov	x20, x0
  405308:	mov	x22, x1
  40530c:	ands	w23, w2, #0xff
  405310:	b.eq	405564 <ferror@plt+0x2834>  // b.none
  405314:	ldr	x0, [x0, #8]
  405318:	ldr	x1, [x20, #16]
  40531c:	cmp	x0, x1
  405320:	b.ne	40539c <ferror@plt+0x266c>  // b.any
  405324:	ldr	x24, [x20, #32]
  405328:	ldr	x0, [x20, #40]
  40532c:	cmp	x24, x0
  405330:	b.eq	40551c <ferror@plt+0x27ec>  // b.none
  405334:	str	x25, [sp, #64]
  405338:	ldr	x0, [x20, #40]
  40533c:	cmp	x24, x0
  405340:	b.eq	405434 <ferror@plt+0x2704>  // b.none
  405344:	mov	x21, #0x0                   	// #0
  405348:	b	405424 <ferror@plt+0x26f4>
  40534c:	tbnz	w2, #7, 40538c <ferror@plt+0x265c>
  405350:	add	x3, x22, #0x30
  405354:	ldr	w2, [x22, #56]
  405358:	add	w2, w2, #0x1
  40535c:	str	w2, [x22, #56]
  405360:	ldr	x2, [x1]
  405364:	ldr	x2, [x2, #40]
  405368:	cbz	x2, 405378 <ferror@plt+0x2648>
  40536c:	ldr	w2, [x3, #12]
  405370:	add	w2, w2, #0x1
  405374:	str	w2, [x3, #12]
  405378:	ldr	x1, [x1, #16]
  40537c:	cbz	x1, 40538c <ferror@plt+0x265c>
  405380:	ldr	w1, [x22, #64]
  405384:	add	w1, w1, #0x1
  405388:	str	w1, [x22, #64]
  40538c:	add	x0, x0, #0x8
  405390:	ldr	x1, [x20, #16]
  405394:	cmp	x1, x0
  405398:	b.eq	405324 <ferror@plt+0x25f4>  // b.none
  40539c:	ldr	x1, [x0]
  4053a0:	ldrb	w2, [x1, #32]
  4053a4:	tbz	w2, #5, 40534c <ferror@plt+0x261c>
  4053a8:	add	x3, x22, #0x30
  4053ac:	ldr	w2, [x22, #68]
  4053b0:	add	w2, w2, #0x1
  4053b4:	str	w2, [x22, #68]
  4053b8:	ldr	x1, [x1]
  4053bc:	ldr	x1, [x1, #40]
  4053c0:	cbz	x1, 40538c <ferror@plt+0x265c>
  4053c4:	ldr	w1, [x3, #24]
  4053c8:	add	w1, w1, #0x1
  4053cc:	str	w1, [x3, #24]
  4053d0:	b	40538c <ferror@plt+0x265c>
  4053d4:	ldr	x19, [x19, #48]
  4053d8:	cbz	x19, 4053fc <ferror@plt+0x26cc>
  4053dc:	ldr	x1, [x19]
  4053e0:	mov	x0, x20
  4053e4:	bl	404800 <ferror@plt+0x1ad0>
  4053e8:	and	w0, w0, #0xff
  4053ec:	cbnz	w0, 4053d4 <ferror@plt+0x26a4>
  4053f0:	ldr	x0, [x19, #16]
  4053f4:	add	x21, x21, x0
  4053f8:	b	4053d4 <ferror@plt+0x26a4>
  4053fc:	ldr	x2, [x25]
  405400:	cbz	x2, 405414 <ferror@plt+0x26e4>
  405404:	ldr	x0, [x2, #16]
  405408:	str	x0, [x2, #24]
  40540c:	ldr	x2, [x2, #40]
  405410:	cbnz	x2, 405404 <ferror@plt+0x26d4>
  405414:	add	x24, x24, #0x8
  405418:	ldr	x0, [x20, #40]
  40541c:	cmp	x0, x24
  405420:	b.eq	405438 <ferror@plt+0x2708>  // b.none
  405424:	ldr	x25, [x24]
  405428:	ldr	x19, [x25, #8]
  40542c:	cbnz	x19, 4053dc <ferror@plt+0x26ac>
  405430:	b	4053fc <ferror@plt+0x26cc>
  405434:	mov	x21, #0x0                   	// #0
  405438:	str	xzr, [sp, #80]
  40543c:	ldr	x25, [x20, #32]
  405440:	ldr	x0, [x20, #40]
  405444:	cmp	x0, x25
  405448:	b.ne	4054c0 <ferror@plt+0x2790>  // b.any
  40544c:	ldr	x0, [sp, #80]
  405450:	add	x21, x0, x21
  405454:	str	x21, [x20]
  405458:	ldr	w0, [x22, #88]
  40545c:	cmp	x0, x21
  405460:	b.ge	405518 <ferror@plt+0x27e8>  // b.tcont
  405464:	str	w21, [x22, #88]
  405468:	ldr	x25, [sp, #64]
  40546c:	b	40551c <ferror@plt+0x27ec>
  405470:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  405474:	add	x19, x19, #0x18
  405478:	cmp	x24, x19
  40547c:	b.eq	40548c <ferror@plt+0x275c>  // b.none
  405480:	ldr	x0, [x19]
  405484:	cbnz	x0, 405470 <ferror@plt+0x2740>
  405488:	b	405474 <ferror@plt+0x2744>
  40548c:	ldr	x0, [sp, #136]
  405490:	cbz	x0, 405498 <ferror@plt+0x2768>
  405494:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  405498:	ldr	x0, [sp, #112]
  40549c:	cbz	x0, 4054a4 <ferror@plt+0x2774>
  4054a0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4054a4:	ldr	x0, [sp, #88]
  4054a8:	cbz	x0, 4054b0 <ferror@plt+0x2780>
  4054ac:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4054b0:	add	x25, x25, #0x8
  4054b4:	ldr	x0, [x20, #40]
  4054b8:	cmp	x0, x25
  4054bc:	b.eq	40544c <ferror@plt+0x271c>  // b.none
  4054c0:	str	xzr, [sp, #88]
  4054c4:	str	xzr, [sp, #96]
  4054c8:	str	xzr, [sp, #104]
  4054cc:	str	xzr, [sp, #112]
  4054d0:	str	xzr, [sp, #120]
  4054d4:	str	xzr, [sp, #128]
  4054d8:	str	xzr, [sp, #136]
  4054dc:	str	xzr, [sp, #144]
  4054e0:	str	xzr, [sp, #152]
  4054e4:	ldr	x0, [x25]
  4054e8:	add	x6, sp, #0x50
  4054ec:	mov	x5, x20
  4054f0:	add	x4, sp, #0x88
  4054f4:	add	x3, sp, #0x70
  4054f8:	mov	x2, x0
  4054fc:	add	x1, sp, #0x58
  405500:	bl	404f10 <ferror@plt+0x21e0>
  405504:	ldr	x19, [sp, #136]
  405508:	ldr	x24, [sp, #144]
  40550c:	cmp	x19, x24
  405510:	b.ne	405480 <ferror@plt+0x2750>  // b.any
  405514:	b	40548c <ferror@plt+0x275c>
  405518:	ldr	x25, [sp, #64]
  40551c:	ldrb	w0, [x20, #56]
  405520:	tst	x0, #0x1
  405524:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  405528:	b.ne	405540 <ferror@plt+0x2810>  // b.any
  40552c:	ldp	x19, x20, [sp, #16]
  405530:	ldp	x21, x22, [sp, #32]
  405534:	ldp	x23, x24, [sp, #48]
  405538:	ldp	x29, x30, [sp], #160
  40553c:	ret
  405540:	ldr	w0, [x22, #48]
  405544:	add	w0, w0, #0x1
  405548:	str	w0, [x22, #48]
  40554c:	ldr	x0, [x20]
  405550:	cbz	x0, 40552c <ferror@plt+0x27fc>
  405554:	ldr	w0, [x22, #52]
  405558:	add	w0, w0, #0x1
  40555c:	str	w0, [x22, #52]
  405560:	b	40552c <ferror@plt+0x27fc>
  405564:	ldr	x24, [x0, #32]
  405568:	ldr	x0, [x0, #40]
  40556c:	cmp	x24, x0
  405570:	b.ne	405334 <ferror@plt+0x2604>  // b.any
  405574:	b	40552c <ferror@plt+0x27fc>
  405578:	stp	x29, x30, [sp, #-160]!
  40557c:	mov	x29, sp
  405580:	stp	x19, x20, [sp, #16]
  405584:	stp	x21, x22, [sp, #32]
  405588:	stp	x23, x24, [sp, #48]
  40558c:	str	x25, [sp, #64]
  405590:	mov	x21, x0
  405594:	and	w23, w2, #0xff
  405598:	mov	x19, x4
  40559c:	mov	w22, w5
  4055a0:	ldr	w25, [sp, #160]
  4055a4:	add	x2, sp, #0x90
  4055a8:	str	x2, [sp, #128]
  4055ac:	str	xzr, [sp, #136]
  4055b0:	strb	wzr, [sp, #144]
  4055b4:	tst	w1, #0xff
  4055b8:	b.eq	405800 <ferror@plt+0x2ad0>  // b.none
  4055bc:	and	w24, w3, #0xff
  4055c0:	cmp	x4, #0x0
  4055c4:	b.gt	405680 <ferror@plt+0x2950>
  4055c8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4055cc:	ldr	w0, [x0, #1560]
  4055d0:	cbnz	w0, 405764 <ferror@plt+0x2a34>
  4055d4:	cmp	w23, #0x0
  4055d8:	csel	x20, x7, x6, ne  // ne = any
  4055dc:	mov	x0, x20
  4055e0:	bl	402680 <strlen@plt>
  4055e4:	mov	x4, x0
  4055e8:	mov	x3, x20
  4055ec:	mov	x2, #0x0                   	// #0
  4055f0:	mov	x1, #0x0                   	// #0
  4055f4:	add	x0, sp, #0x80
  4055f8:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4055fc:	add	x0, sp, #0x80
  405600:	bl	404254 <ferror@plt+0x1524>
  405604:	mov	w2, w22
  405608:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40560c:	add	x1, x1, #0x68
  405610:	add	x0, sp, #0x70
  405614:	bl	402720 <sprintf@plt>
  405618:	add	x0, sp, #0x60
  40561c:	str	x0, [sp, #80]
  405620:	add	x0, sp, #0x70
  405624:	bl	402680 <strlen@plt>
  405628:	mov	w3, #0x0                   	// #0
  40562c:	add	x1, sp, #0x70
  405630:	add	x2, x1, x0
  405634:	add	x0, sp, #0x50
  405638:	bl	40bc30 <ferror@plt+0x8f00>
  40563c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405640:	ldr	w0, [x0, #1564]
  405644:	cmp	w0, #0x0
  405648:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  40564c:	b.eq	405870 <ferror@plt+0x2b40>  // b.none
  405650:	mov	w0, w25
  405654:	add	x19, x19, x19, lsl #2
  405658:	cmp	x0, x19, lsl #1
  40565c:	b.ge	4058f4 <ferror@plt+0x2bc4>  // b.tcont
  405660:	mov	x4, #0x8                   	// #8
  405664:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405668:	add	x3, x3, #0x90
  40566c:	mov	x2, #0x0                   	// #0
  405670:	mov	x1, #0x0                   	// #0
  405674:	add	x0, sp, #0x50
  405678:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  40567c:	b	4058f4 <ferror@plt+0x2bc4>
  405680:	mov	w2, #0xffffffff            	// #-1
  405684:	mov	x1, #0x0                   	// #0
  405688:	mov	x0, x4
  40568c:	bl	403ed0 <ferror@plt+0x11a0>
  405690:	mov	x20, x0
  405694:	bl	402680 <strlen@plt>
  405698:	mov	x4, x0
  40569c:	mov	x3, x20
  4056a0:	ldr	x2, [sp, #136]
  4056a4:	mov	x1, #0x0                   	// #0
  4056a8:	add	x0, sp, #0x80
  4056ac:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4056b0:	cbz	w24, 405718 <ferror@plt+0x29e8>
  4056b4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4056b8:	ldr	w0, [x0, #1716]
  4056bc:	cbz	w0, 405718 <ferror@plt+0x29e8>
  4056c0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4056c4:	ldr	w0, [x0, #1560]
  4056c8:	cbz	w0, 405730 <ferror@plt+0x2a00>
  4056cc:	add	x0, sp, #0x80
  4056d0:	bl	404254 <ferror@plt+0x1524>
  4056d4:	mov	x4, #0xb                   	// #11
  4056d8:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4056dc:	add	x3, x3, #0x8
  4056e0:	mov	x2, #0x0                   	// #0
  4056e4:	mov	x1, #0x0                   	// #0
  4056e8:	add	x0, sp, #0x80
  4056ec:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4056f0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4056f4:	ldr	x1, [sp, #136]
  4056f8:	sub	x0, x0, x1
  4056fc:	cmp	x0, #0x5
  405700:	b.ls	405724 <ferror@plt+0x29f4>  // b.plast
  405704:	mov	x2, #0x6                   	// #6
  405708:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40570c:	add	x1, x1, #0x30
  405710:	add	x0, sp, #0x80
  405714:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  405718:	add	x0, sp, #0x80
  40571c:	bl	404254 <ferror@plt+0x1524>
  405720:	b	405824 <ferror@plt+0x2af4>
  405724:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405728:	add	x0, x0, #0x18
  40572c:	bl	402f0c <ferror@plt+0x1dc>
  405730:	ldr	x1, [sp, #136]
  405734:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  405738:	cmp	x1, x0
  40573c:	b.eq	405758 <ferror@plt+0x2a28>  // b.none
  405740:	mov	x2, #0x1                   	// #1
  405744:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405748:	add	x1, x1, #0x38
  40574c:	add	x0, sp, #0x80
  405750:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  405754:	b	405718 <ferror@plt+0x29e8>
  405758:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40575c:	add	x0, x0, #0x18
  405760:	bl	402f0c <ferror@plt+0x1dc>
  405764:	mov	x4, #0x1                   	// #1
  405768:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x26c60>
  40576c:	add	x3, x3, #0x5b0
  405770:	mov	x2, #0x0                   	// #0
  405774:	mov	x1, #0x0                   	// #0
  405778:	add	x0, sp, #0x80
  40577c:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  405780:	add	x0, sp, #0x80
  405784:	bl	404254 <ferror@plt+0x1524>
  405788:	cbz	w23, 4057d4 <ferror@plt+0x2aa4>
  40578c:	mov	x4, #0xb                   	// #11
  405790:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405794:	add	x3, x3, #0x40
  405798:	mov	x2, #0x0                   	// #0
  40579c:	mov	x1, #0x0                   	// #0
  4057a0:	add	x0, sp, #0x80
  4057a4:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4057a8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4057ac:	ldr	x1, [sp, #136]
  4057b0:	sub	x0, x0, x1
  4057b4:	cmp	x0, #0x5
  4057b8:	b.ls	4057f4 <ferror@plt+0x2ac4>  // b.plast
  4057bc:	mov	x2, #0x6                   	// #6
  4057c0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4057c4:	add	x1, x1, #0x30
  4057c8:	add	x0, sp, #0x80
  4057cc:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  4057d0:	b	405604 <ferror@plt+0x28d4>
  4057d4:	mov	x4, #0xb                   	// #11
  4057d8:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4057dc:	add	x3, x3, #0x50
  4057e0:	mov	x2, #0x0                   	// #0
  4057e4:	mov	x1, #0x0                   	// #0
  4057e8:	add	x0, sp, #0x80
  4057ec:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4057f0:	b	4057a8 <ferror@plt+0x2a78>
  4057f4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4057f8:	add	x0, x0, #0x18
  4057fc:	bl	402f0c <ferror@plt+0x1dc>
  405800:	mov	x4, #0x1                   	// #1
  405804:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405808:	add	x3, x3, #0x60
  40580c:	mov	x2, #0x0                   	// #0
  405810:	mov	x1, #0x0                   	// #0
  405814:	add	x0, sp, #0x80
  405818:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  40581c:	add	x0, sp, #0x80
  405820:	bl	404254 <ferror@plt+0x1524>
  405824:	mov	w2, w22
  405828:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40582c:	add	x1, x1, #0x68
  405830:	add	x0, sp, #0x70
  405834:	bl	402720 <sprintf@plt>
  405838:	add	x0, sp, #0x60
  40583c:	str	x0, [sp, #80]
  405840:	add	x0, sp, #0x70
  405844:	bl	402680 <strlen@plt>
  405848:	mov	w3, #0x0                   	// #0
  40584c:	add	x1, sp, #0x70
  405850:	add	x2, x1, x0
  405854:	add	x0, sp, #0x50
  405858:	bl	40bc30 <ferror@plt+0x8f00>
  40585c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405860:	ldr	w0, [x0, #1564]
  405864:	cmp	w0, #0x0
  405868:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  40586c:	b.ne	4058c8 <ferror@plt+0x2b98>  // b.any
  405870:	ldr	x3, [sp, #80]
  405874:	ldr	x2, [sp, #128]
  405878:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40587c:	add	x1, x1, #0xa0
  405880:	mov	x0, x21
  405884:	bl	402ce0 <fprintf@plt>
  405888:	ldr	x0, [sp, #80]
  40588c:	add	x1, sp, #0x60
  405890:	cmp	x0, x1
  405894:	b.eq	40589c <ferror@plt+0x2b6c>  // b.none
  405898:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40589c:	ldr	x0, [sp, #128]
  4058a0:	add	x1, sp, #0x90
  4058a4:	cmp	x0, x1
  4058a8:	b.eq	4058b0 <ferror@plt+0x2b80>  // b.none
  4058ac:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4058b0:	ldp	x19, x20, [sp, #16]
  4058b4:	ldp	x21, x22, [sp, #32]
  4058b8:	ldp	x23, x24, [sp, #48]
  4058bc:	ldr	x25, [sp, #64]
  4058c0:	ldp	x29, x30, [sp], #160
  4058c4:	ret
  4058c8:	mov	w0, w25
  4058cc:	lsl	x1, x19, #1
  4058d0:	cmp	x1, w25, uxtw
  4058d4:	b.le	405920 <ferror@plt+0x2bf0>
  4058d8:	mov	x4, #0x8                   	// #8
  4058dc:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4058e0:	add	x3, x3, #0x70
  4058e4:	mov	x2, #0x0                   	// #0
  4058e8:	mov	x1, #0x0                   	// #0
  4058ec:	add	x0, sp, #0x50
  4058f0:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  4058f4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4058f8:	ldr	x1, [sp, #88]
  4058fc:	sub	x0, x0, x1
  405900:	cmp	x0, #0x5
  405904:	b.ls	40594c <ferror@plt+0x2c1c>  // b.plast
  405908:	mov	x2, #0x6                   	// #6
  40590c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405910:	add	x1, x1, #0x30
  405914:	add	x0, sp, #0x50
  405918:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  40591c:	b	405870 <ferror@plt+0x2b40>
  405920:	add	x1, x19, x19, lsl #2
  405924:	cmp	x0, x1
  405928:	b.ge	405654 <ferror@plt+0x2924>  // b.tcont
  40592c:	mov	x4, #0x8                   	// #8
  405930:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405934:	add	x3, x3, #0x80
  405938:	mov	x2, #0x0                   	// #0
  40593c:	mov	x1, #0x0                   	// #0
  405940:	add	x0, sp, #0x50
  405944:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  405948:	b	4058f4 <ferror@plt+0x2bc4>
  40594c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405950:	add	x0, x0, #0x18
  405954:	bl	402f0c <ferror@plt+0x1dc>
  405958:	sub	sp, sp, #0x80
  40595c:	stp	x29, x30, [sp, #16]
  405960:	add	x29, sp, #0x10
  405964:	stp	x19, x20, [sp, #32]
  405968:	stp	x21, x22, [sp, #48]
  40596c:	mov	x21, x0
  405970:	mov	x22, x1
  405974:	str	w2, [sp, #124]
  405978:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40597c:	ldr	w19, [x0, #1536]
  405980:	cbz	w19, 405aac <ferror@plt+0x2d7c>
  405984:	ldr	x20, [x1, #32]
  405988:	ldr	x0, [x1, #40]
  40598c:	cmp	x20, x0
  405990:	b.eq	405a98 <ferror@plt+0x2d68>  // b.none
  405994:	stp	x23, x24, [sp, #64]
  405998:	stp	x25, x26, [sp, #80]
  40599c:	stp	x27, x28, [sp, #96]
  4059a0:	mov	w19, #0x0                   	// #0
  4059a4:	mov	w25, #0x0                   	// #0
  4059a8:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4059ac:	add	x27, x27, #0xa8
  4059b0:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4059b4:	adrp	x23, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4059b8:	add	x23, x23, #0x5c8
  4059bc:	b	4059e8 <ferror@plt+0x2cb8>
  4059c0:	mov	x1, x21
  4059c4:	mov	w0, #0xa                   	// #10
  4059c8:	bl	402750 <fputc@plt>
  4059cc:	mov	w25, w26
  4059d0:	ldr	w0, [x23, #60]
  4059d4:	cbnz	w0, 405a60 <ferror@plt+0x2d30>
  4059d8:	add	x20, x20, #0x8
  4059dc:	ldr	x0, [x22, #40]
  4059e0:	cmp	x0, x20
  4059e4:	b.eq	405a8c <ferror@plt+0x2d5c>  // b.none
  4059e8:	mov	x24, x20
  4059ec:	ldr	x0, [x20]
  4059f0:	ldrb	w2, [x0, #48]
  4059f4:	tbnz	w2, #5, 4059d0 <ferror@plt+0x2ca0>
  4059f8:	ldr	x4, [x0, #40]
  4059fc:	ldrb	w1, [x22, #56]
  405a00:	str	wzr, [sp]
  405a04:	mov	x7, x27
  405a08:	add	x6, x28, #0xb0
  405a0c:	ldr	w5, [sp, #124]
  405a10:	mov	w3, #0x0                   	// #0
  405a14:	ubfx	x2, x2, #3, #1
  405a18:	and	w1, w1, #0x1
  405a1c:	mov	x0, x21
  405a20:	bl	405578 <ferror@plt+0x2848>
  405a24:	add	w26, w25, #0x1
  405a28:	mov	w2, w25
  405a2c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405a30:	add	x1, x1, #0xb8
  405a34:	mov	x0, x21
  405a38:	bl	402ce0 <fprintf@plt>
  405a3c:	ldr	w0, [x23, #144]
  405a40:	cbz	w0, 4059c0 <ferror@plt+0x2c90>
  405a44:	ldr	x0, [x20]
  405a48:	ldr	w2, [x0, #32]
  405a4c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405a50:	add	x1, x1, #0xc8
  405a54:	mov	x0, x21
  405a58:	bl	402ce0 <fprintf@plt>
  405a5c:	b	4059c0 <ferror@plt+0x2c90>
  405a60:	ldr	x0, [x24]
  405a64:	ldr	x24, [x0]
  405a68:	cbz	x24, 4059d8 <ferror@plt+0x2ca8>
  405a6c:	mov	x2, x24
  405a70:	mov	w1, w19
  405a74:	mov	x0, x21
  405a78:	bl	404020 <ferror@plt+0x12f0>
  405a7c:	add	w19, w19, w0
  405a80:	ldr	x24, [x24, #40]
  405a84:	cbnz	x24, 405a6c <ferror@plt+0x2d3c>
  405a88:	b	4059d8 <ferror@plt+0x2ca8>
  405a8c:	ldp	x23, x24, [sp, #64]
  405a90:	ldp	x25, x26, [sp, #80]
  405a94:	ldp	x27, x28, [sp, #96]
  405a98:	ldp	x19, x20, [sp, #32]
  405a9c:	ldp	x21, x22, [sp, #48]
  405aa0:	ldp	x29, x30, [sp, #16]
  405aa4:	add	sp, sp, #0x80
  405aa8:	ret
  405aac:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405ab0:	ldr	w0, [x0, #1540]
  405ab4:	cbz	w0, 405a98 <ferror@plt+0x2d68>
  405ab8:	ldr	x20, [x1, #8]
  405abc:	ldr	x0, [x1, #16]
  405ac0:	cmp	x20, x0
  405ac4:	b.eq	405a98 <ferror@plt+0x2d68>  // b.none
  405ac8:	ldr	x2, [x20], #8
  405acc:	mov	w1, w19
  405ad0:	mov	x0, x21
  405ad4:	bl	404020 <ferror@plt+0x12f0>
  405ad8:	add	w19, w19, w0
  405adc:	ldr	x0, [x22, #16]
  405ae0:	cmp	x0, x20
  405ae4:	b.ne	405ac8 <ferror@plt+0x2d98>  // b.any
  405ae8:	b	405a98 <ferror@plt+0x2d68>
  405aec:	stp	x29, x30, [sp, #-48]!
  405af0:	mov	x29, sp
  405af4:	stp	x19, x20, [sp, #16]
  405af8:	ldr	x2, [x0, #120]
  405afc:	ldr	x0, [x0, #128]
  405b00:	sub	x0, x0, x2
  405b04:	asr	x0, x0, #3
  405b08:	cmp	x0, w1, uxtw
  405b0c:	b.ls	405b80 <ferror@plt+0x2e50>  // b.plast
  405b10:	mov	w3, w1
  405b14:	ldr	x19, [x2, x3, lsl #3]
  405b18:	cbz	x19, 405b70 <ferror@plt+0x2e40>
  405b1c:	stp	x21, x22, [sp, #32]
  405b20:	ldr	x20, [x19]
  405b24:	ldr	x21, [x19, #8]
  405b28:	cmp	x21, x20
  405b2c:	b.eq	405b88 <ferror@plt+0x2e58>  // b.none
  405b30:	sub	x2, x21, x20
  405b34:	asr	x2, x2, #3
  405b38:	clz	x2, x2
  405b3c:	mov	w0, #0x3f                  	// #63
  405b40:	sub	w2, w0, w2
  405b44:	mov	w22, #0x0                   	// #0
  405b48:	mov	w3, w22
  405b4c:	sbfiz	x2, x2, #1, #32
  405b50:	mov	x1, x21
  405b54:	mov	x0, x20
  405b58:	bl	40c448 <ferror@plt+0x9718>
  405b5c:	mov	w2, w22
  405b60:	mov	x1, x21
  405b64:	mov	x0, x20
  405b68:	bl	40c18c <ferror@plt+0x945c>
  405b6c:	ldp	x21, x22, [sp, #32]
  405b70:	mov	x0, x19
  405b74:	ldp	x19, x20, [sp, #16]
  405b78:	ldp	x29, x30, [sp], #48
  405b7c:	ret
  405b80:	mov	x19, #0x0                   	// #0
  405b84:	b	405b70 <ferror@plt+0x2e40>
  405b88:	ldp	x21, x22, [sp, #32]
  405b8c:	b	405b70 <ferror@plt+0x2e40>
  405b90:	sub	sp, sp, #0xe0
  405b94:	stp	x29, x30, [sp, #16]
  405b98:	add	x29, sp, #0x10
  405b9c:	stp	x19, x20, [sp, #32]
  405ba0:	stp	x21, x22, [sp, #48]
  405ba4:	stp	x23, x24, [sp, #64]
  405ba8:	stp	x27, x28, [sp, #96]
  405bac:	mov	x21, x0
  405bb0:	mov	x24, x1
  405bb4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405bb8:	ldr	w0, [x0, #1560]
  405bbc:	cbnz	w0, 405c2c <ferror@plt+0x2efc>
  405bc0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405bc4:	ldr	w0, [x0, #1564]
  405bc8:	cbnz	w0, 405c48 <ferror@plt+0x2f18>
  405bcc:	ldr	x2, [x24, #80]
  405bd0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405bd4:	add	x1, x1, #0x1f8
  405bd8:	mov	x0, x21
  405bdc:	bl	402ce0 <fprintf@plt>
  405be0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405be4:	ldr	w0, [x0, #1720]
  405be8:	cbz	w0, 405c64 <ferror@plt+0x2f34>
  405bec:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  405bf0:	add	x1, x1, #0xa48
  405bf4:	ldr	x0, [x24, #8]
  405bf8:	bl	4027d0 <fopen@plt>
  405bfc:	mov	x27, x0
  405c00:	cbz	x0, 405cc8 <ferror@plt+0x2f98>
  405c04:	stp	x25, x26, [sp, #80]
  405c08:	ldr	x0, [x24, #16]
  405c0c:	cbz	x0, 405cf0 <ferror@plt+0x2fc0>
  405c10:	str	xzr, [sp, #192]
  405c14:	str	xzr, [sp, #200]
  405c18:	str	xzr, [sp, #208]
  405c1c:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405c20:	add	x20, x20, #0x5c8
  405c24:	mov	x23, #0xc8                  	// #200
  405c28:	b	405dcc <ferror@plt+0x309c>
  405c2c:	mov	x3, x21
  405c30:	mov	x2, #0xa2                  	// #162
  405c34:	mov	x1, #0x1                   	// #1
  405c38:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405c3c:	add	x0, x0, #0xd8
  405c40:	bl	402ae0 <fwrite@plt>
  405c44:	b	405bc0 <ferror@plt+0x2e90>
  405c48:	mov	x3, x21
  405c4c:	mov	x2, #0x71                  	// #113
  405c50:	mov	x1, #0x1                   	// #1
  405c54:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405c58:	add	x0, x0, #0x180
  405c5c:	bl	402ae0 <fwrite@plt>
  405c60:	b	405bcc <ferror@plt+0x2e9c>
  405c64:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405c68:	add	x19, x19, #0x5c8
  405c6c:	ldr	x2, [x19, #248]
  405c70:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405c74:	add	x1, x1, #0x218
  405c78:	mov	x0, x21
  405c7c:	bl	402ce0 <fprintf@plt>
  405c80:	ldr	w0, [x19, #256]
  405c84:	cbnz	w0, 405cbc <ferror@plt+0x2f8c>
  405c88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405c8c:	ldr	x2, [x0, #1744]
  405c90:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405c94:	add	x1, x1, #0x238
  405c98:	mov	x0, x21
  405c9c:	bl	402ce0 <fprintf@plt>
  405ca0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405ca4:	ldr	w2, [x0, #1752]
  405ca8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405cac:	add	x1, x1, #0x258
  405cb0:	mov	x0, x21
  405cb4:	bl	402ce0 <fprintf@plt>
  405cb8:	b	405bec <ferror@plt+0x2ebc>
  405cbc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405cc0:	add	x2, x2, #0x60
  405cc4:	b	405c90 <ferror@plt+0x2f60>
  405cc8:	ldr	x2, [x24, #8]
  405ccc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405cd0:	add	x1, x1, #0x278
  405cd4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405cd8:	ldr	x0, [x0, #1424]
  405cdc:	bl	40eeec <ferror@plt+0xc1bc>
  405ce0:	str	xzr, [sp, #192]
  405ce4:	str	xzr, [sp, #200]
  405ce8:	str	xzr, [sp, #208]
  405cec:	b	40619c <ferror@plt+0x346c>
  405cf0:	mov	x3, x21
  405cf4:	mov	x2, #0x2b                  	// #43
  405cf8:	mov	x1, #0x1                   	// #1
  405cfc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405d00:	add	x0, x0, #0x298
  405d04:	bl	402ae0 <fwrite@plt>
  405d08:	b	405c10 <ferror@plt+0x2ee0>
  405d0c:	str	x23, [x20, #280]
  405d10:	mov	x0, x23
  405d14:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  405d18:	str	x0, [x20, #288]
  405d1c:	b	405dd4 <ferror@plt+0x30a4>
  405d20:	add	x19, x19, x0
  405d24:	ldr	x1, [x20, #280]
  405d28:	cmp	x19, x1, lsr #1
  405d2c:	b.hi	405d7c <ferror@plt+0x304c>  // b.pmore
  405d30:	ldr	x1, [x20, #280]
  405d34:	ldr	x0, [x20, #288]
  405d38:	mov	x2, x27
  405d3c:	sub	w1, w1, w19
  405d40:	add	x0, x0, x19
  405d44:	bl	402cf0 <fgets@plt>
  405d48:	cbz	x0, 405d94 <ferror@plt+0x3064>
  405d4c:	ldr	x22, [x20, #288]
  405d50:	add	x0, x22, x19
  405d54:	bl	402680 <strlen@plt>
  405d58:	cbz	x0, 405d20 <ferror@plt+0x2ff0>
  405d5c:	sub	x1, x19, #0x1
  405d60:	add	x1, x1, x0
  405d64:	add	x2, x22, x1
  405d68:	ldrb	w1, [x22, x1]
  405d6c:	cmp	w1, #0xa
  405d70:	b.ne	405d20 <ferror@plt+0x2ff0>  // b.any
  405d74:	strb	wzr, [x2]
  405d78:	b	405d9c <ferror@plt+0x306c>
  405d7c:	lsl	x1, x1, #1
  405d80:	str	x1, [x20, #280]
  405d84:	mov	x0, x22
  405d88:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  405d8c:	str	x0, [x20, #288]
  405d90:	b	405d30 <ferror@plt+0x3000>
  405d94:	cbz	x19, 405ddc <ferror@plt+0x30ac>
  405d98:	ldr	x22, [x20, #288]
  405d9c:	cbz	x22, 405ddc <ferror@plt+0x30ac>
  405da0:	mov	x0, x22
  405da4:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  405da8:	str	x0, [sp, #216]
  405dac:	ldr	x1, [sp, #200]
  405db0:	ldr	x2, [sp, #208]
  405db4:	cmp	x1, x2
  405db8:	b.eq	405e10 <ferror@plt+0x30e0>  // b.none
  405dbc:	str	x0, [x1]
  405dc0:	ldr	x0, [sp, #200]
  405dc4:	add	x0, x0, #0x8
  405dc8:	str	x0, [sp, #200]
  405dcc:	ldr	x0, [x20, #280]
  405dd0:	cbz	x0, 405d0c <ferror@plt+0x2fdc>
  405dd4:	mov	x19, #0x0                   	// #0
  405dd8:	b	405d30 <ferror@plt+0x3000>
  405ddc:	ldr	x1, [sp, #200]
  405de0:	ldr	x0, [sp, #192]
  405de4:	cmp	x1, x0
  405de8:	b.eq	406190 <ferror@plt+0x3460>  // b.none
  405dec:	mov	w28, #0x1                   	// #1
  405df0:	mov	w22, #0x0                   	// #0
  405df4:	mov	x19, #0x1                   	// #1
  405df8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  405dfc:	add	x0, x0, #0x5c8
  405e00:	str	x0, [sp, #120]
  405e04:	add	x0, sp, #0xb0
  405e08:	str	x0, [sp, #128]
  405e0c:	b	405ef8 <ferror@plt+0x31c8>
  405e10:	add	x2, sp, #0xd8
  405e14:	add	x0, sp, #0xc0
  405e18:	bl	40bb0c <ferror@plt+0x8ddc>
  405e1c:	b	405dcc <ferror@plt+0x309c>
  405e20:	mov	w3, w28
  405e24:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405e28:	add	x2, x2, #0x60
  405e2c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405e30:	add	x1, x1, #0x2c8
  405e34:	mov	x0, x21
  405e38:	bl	402ce0 <fprintf@plt>
  405e3c:	mov	w2, w28
  405e40:	add	x1, sp, #0xc0
  405e44:	mov	x0, x21
  405e48:	bl	4038bc <ferror@plt+0xb8c>
  405e4c:	b	405ed8 <ferror@plt+0x31a8>
  405e50:	mov	w0, w22
  405e54:	mov	x1, #0x0                   	// #0
  405e58:	ldr	x1, [x2, x1, lsl #3]
  405e5c:	ldr	w1, [x1, #96]
  405e60:	cmp	w22, w1
  405e64:	csel	w22, w22, w1, cs  // cs = hs, nlast
  405e68:	add	w0, w0, #0x1
  405e6c:	mov	w1, w0
  405e70:	cmp	x3, w0, uxtw
  405e74:	b.hi	405e58 <ferror@plt+0x3128>  // b.pmore
  405e78:	ldrb	w1, [x23, #56]
  405e7c:	ldr	x4, [x20, x19]
  405e80:	ldr	w0, [x24, #88]
  405e84:	str	w0, [sp]
  405e88:	adrp	x7, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405e8c:	add	x7, x7, #0x2d0
  405e90:	adrp	x6, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405e94:	add	x6, x6, #0x2d8
  405e98:	mov	w5, w28
  405e9c:	ubfx	x3, x1, #2, #1
  405ea0:	ubfx	x2, x1, #1, #1
  405ea4:	and	w1, w1, #0x1
  405ea8:	mov	x0, x21
  405eac:	bl	405578 <ferror@plt+0x2848>
  405eb0:	mov	w2, w28
  405eb4:	add	x1, sp, #0xc0
  405eb8:	mov	x0, x21
  405ebc:	bl	4038bc <ferror@plt+0xb8c>
  405ec0:	mov	w2, w28
  405ec4:	mov	x1, x23
  405ec8:	mov	x0, x21
  405ecc:	bl	405958 <ferror@plt+0x2c28>
  405ed0:	cmp	w22, w28
  405ed4:	b.eq	405f5c <ferror@plt+0x322c>  // b.none
  405ed8:	add	w28, w28, #0x1
  405edc:	mov	w19, w28
  405ee0:	ldr	x0, [sp, #200]
  405ee4:	ldr	x1, [sp, #192]
  405ee8:	sub	x0, x0, x1
  405eec:	asr	x0, x0, #3
  405ef0:	cmp	x0, w28, uxtw
  405ef4:	b.cc	406190 <ferror@plt+0x3460>  // b.lo, b.ul, b.last
  405ef8:	ldr	x20, [x24, #24]
  405efc:	ldr	x0, [x24, #32]
  405f00:	sub	x0, x0, x20
  405f04:	cmp	x19, x0, asr #6
  405f08:	b.cs	405e20 <ferror@plt+0x30f0>  // b.hs, b.nlast
  405f0c:	lsl	x19, x19, #6
  405f10:	add	x23, x20, x19
  405f14:	cbnz	w22, 405e78 <ferror@plt+0x3148>
  405f18:	mov	w1, w28
  405f1c:	mov	x0, x24
  405f20:	bl	405aec <ferror@plt+0x2dbc>
  405f24:	str	x0, [sp, #136]
  405f28:	cbz	x0, 405e78 <ferror@plt+0x3148>
  405f2c:	ldr	x2, [x0]
  405f30:	ldr	x0, [x0, #8]
  405f34:	sub	x0, x0, x2
  405f38:	asr	x3, x0, #3
  405f3c:	cmp	x0, #0xf
  405f40:	b.hi	405e50 <ferror@plt+0x3120>  // b.pmore
  405f44:	cmp	x0, #0x8
  405f48:	b.ne	405e78 <ferror@plt+0x3148>  // b.any
  405f4c:	ldr	x1, [x2]
  405f50:	mov	x0, x21
  405f54:	bl	40428c <ferror@plt+0x155c>
  405f58:	b	405e78 <ferror@plt+0x3148>
  405f5c:	ldr	x1, [sp, #136]
  405f60:	ldr	x0, [x1]
  405f64:	ldr	x1, [x1, #8]
  405f68:	cmp	x0, x1
  405f6c:	b.eq	406170 <ferror@plt+0x3440>  // b.none
  405f70:	str	x0, [sp, #112]
  405f74:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405f78:	add	x0, x0, #0x2e0
  405f7c:	str	x0, [sp, #144]
  405f80:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405f84:	add	x0, x0, #0x2f8
  405f88:	str	x0, [sp, #152]
  405f8c:	b	406030 <ferror@plt+0x3300>
  405f90:	ldr	x0, [x22, #8]
  405f94:	cbz	x0, 405fa0 <ferror@plt+0x3270>
  405f98:	ldr	x19, [x22, #8]
  405f9c:	b	40605c <ferror@plt+0x332c>
  405fa0:	mov	w1, #0x1                   	// #1
  405fa4:	ldr	x0, [x22]
  405fa8:	bl	4448e8 <ferror@plt+0x41bb8>
  405fac:	str	x0, [x22, #8]
  405fb0:	cbnz	x0, 405f98 <ferror@plt+0x3268>
  405fb4:	ldr	x0, [x22]
  405fb8:	str	x0, [x22, #8]
  405fbc:	b	405f98 <ferror@plt+0x3268>
  405fc0:	mov	x4, #0x8                   	// #8
  405fc4:	ldr	x3, [sp, #152]
  405fc8:	mov	x2, #0x0                   	// #0
  405fcc:	mov	x1, #0x0                   	// #0
  405fd0:	add	x0, sp, #0xa0
  405fd4:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  405fd8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  405fdc:	ldr	x1, [sp, #168]
  405fe0:	sub	x0, x0, x1
  405fe4:	cmp	x0, #0x5
  405fe8:	b.ls	406004 <ferror@plt+0x32d4>  // b.plast
  405fec:	mov	x2, #0x6                   	// #6
  405ff0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  405ff4:	add	x1, x1, #0x30
  405ff8:	add	x0, sp, #0xa0
  405ffc:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  406000:	b	406094 <ferror@plt+0x3364>
  406004:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406008:	add	x0, x0, #0x18
  40600c:	bl	402f0c <ferror@plt+0x1dc>
  406010:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406014:	ldr	x0, [sp, #112]
  406018:	add	x1, x0, #0x8
  40601c:	str	x1, [sp, #112]
  406020:	ldr	x0, [sp, #136]
  406024:	ldr	x0, [x0, #8]
  406028:	cmp	x0, x1
  40602c:	b.eq	406170 <ferror@plt+0x3440>  // b.none
  406030:	ldr	x0, [sp, #112]
  406034:	ldr	x22, [x0]
  406038:	mov	x3, x21
  40603c:	mov	x2, #0x13                  	// #19
  406040:	mov	x1, #0x1                   	// #1
  406044:	ldr	x0, [sp, #144]
  406048:	bl	402ae0 <fwrite@plt>
  40604c:	ldr	x0, [sp, #120]
  406050:	ldr	w0, [x0, #88]
  406054:	cbnz	w0, 405f90 <ferror@plt+0x3260>
  406058:	ldr	x19, [x22]
  40605c:	ldr	x0, [sp, #128]
  406060:	str	x0, [sp, #160]
  406064:	mov	x2, #0xffffffffffffffff    	// #-1
  406068:	cbz	x19, 406078 <ferror@plt+0x3348>
  40606c:	mov	x0, x19
  406070:	bl	402680 <strlen@plt>
  406074:	add	x2, x19, x0
  406078:	mov	w3, #0x0                   	// #0
  40607c:	mov	x1, x19
  406080:	add	x0, sp, #0xa0
  406084:	bl	40bc30 <ferror@plt+0x8f00>
  406088:	ldr	x0, [sp, #120]
  40608c:	ldr	w0, [x0, #80]
  406090:	cbnz	w0, 405fc0 <ferror@plt+0x3290>
  406094:	ldr	x2, [sp, #160]
  406098:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40609c:	add	x1, x1, #0x308
  4060a0:	mov	x0, x21
  4060a4:	bl	402ce0 <fprintf@plt>
  4060a8:	mov	x1, x22
  4060ac:	mov	x0, x21
  4060b0:	bl	40428c <ferror@plt+0x155c>
  4060b4:	ldr	x2, [x22, #112]
  4060b8:	ldr	x0, [x22, #120]
  4060bc:	cmp	x2, x0
  4060c0:	b.eq	40615c <ferror@plt+0x342c>  // b.none
  4060c4:	mov	w20, #0x0                   	// #0
  4060c8:	mov	x1, #0x0                   	// #0
  4060cc:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4060d0:	add	x26, x26, #0x2d0
  4060d4:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4060d8:	add	x25, x25, #0x2d8
  4060dc:	lsl	x0, x1, #6
  4060e0:	add	x23, x2, x0
  4060e4:	ldr	w19, [x22, #88]
  4060e8:	add	w19, w20, w19
  4060ec:	ldrb	w1, [x23, #56]
  4060f0:	ldr	x4, [x2, x0]
  4060f4:	ldr	w0, [x24, #88]
  4060f8:	str	w0, [sp]
  4060fc:	mov	x7, x26
  406100:	mov	x6, x25
  406104:	mov	w5, w19
  406108:	ubfx	x3, x1, #2, #1
  40610c:	ubfx	x2, x1, #1, #1
  406110:	and	w1, w1, #0x1
  406114:	mov	x0, x21
  406118:	bl	405578 <ferror@plt+0x2848>
  40611c:	mov	w2, w19
  406120:	add	x1, sp, #0xc0
  406124:	mov	x0, x21
  406128:	bl	4038bc <ferror@plt+0xb8c>
  40612c:	mov	w2, w19
  406130:	mov	x1, x23
  406134:	mov	x0, x21
  406138:	bl	405958 <ferror@plt+0x2c28>
  40613c:	add	w20, w20, #0x1
  406140:	mov	w1, w20
  406144:	ldr	x2, [x22, #112]
  406148:	ldr	x0, [x22, #120]
  40614c:	sub	x0, x0, x2
  406150:	asr	x0, x0, #6
  406154:	cmp	x0, w20, uxtw
  406158:	b.hi	4060dc <ferror@plt+0x33ac>  // b.pmore
  40615c:	ldr	x0, [sp, #160]
  406160:	ldr	x1, [sp, #128]
  406164:	cmp	x0, x1
  406168:	b.ne	406010 <ferror@plt+0x32e0>  // b.any
  40616c:	b	406014 <ferror@plt+0x32e4>
  406170:	mov	x3, x21
  406174:	mov	x2, #0x13                  	// #19
  406178:	mov	x1, #0x1                   	// #1
  40617c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406180:	add	x0, x0, #0x2e0
  406184:	bl	402ae0 <fwrite@plt>
  406188:	mov	w22, #0x0                   	// #0
  40618c:	b	405ed8 <ferror@plt+0x31a8>
  406190:	mov	x0, x27
  406194:	bl	4027a0 <fclose@plt>
  406198:	ldp	x25, x26, [sp, #80]
  40619c:	ldr	x0, [sp, #192]
  4061a0:	cbz	x0, 4061a8 <ferror@plt+0x3478>
  4061a4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4061a8:	ldp	x19, x20, [sp, #32]
  4061ac:	ldp	x21, x22, [sp, #48]
  4061b0:	ldp	x23, x24, [sp, #64]
  4061b4:	ldp	x27, x28, [sp, #96]
  4061b8:	ldp	x29, x30, [sp, #16]
  4061bc:	add	sp, sp, #0xe0
  4061c0:	ret
  4061c4:	stp	x29, x30, [sp, #-144]!
  4061c8:	mov	x29, sp
  4061cc:	stp	x19, x20, [sp, #16]
  4061d0:	stp	x21, x22, [sp, #32]
  4061d4:	stp	x23, x24, [sp, #48]
  4061d8:	stp	x25, x26, [sp, #64]
  4061dc:	stp	x27, x28, [sp, #80]
  4061e0:	mov	x19, x0
  4061e4:	mov	x27, x1
  4061e8:	mov	x0, #0x38                  	// #56
  4061ec:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4061f0:	mov	x20, x0
  4061f4:	str	x0, [sp, #136]
  4061f8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4061fc:	add	x1, x1, #0xe80
  406200:	str	x1, [x0], #8
  406204:	mov	w4, #0x1                   	// #1
  406208:	mov	w3, #0x0                   	// #0
  40620c:	mov	w2, #0x0                   	// #0
  406210:	mov	x1, #0xd                   	// #13
  406214:	bl	409c6c <ferror@plt+0x6f3c>
  406218:	mov	x1, x20
  40621c:	mov	x0, x19
  406220:	bl	40d1f8 <ferror@plt+0xa4c8>
  406224:	mov	x0, #0x10                  	// #16
  406228:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40622c:	mov	x19, x0
  406230:	ldr	x1, [x27, #8]
  406234:	bl	40d388 <ferror@plt+0xa658>
  406238:	mov	x2, x19
  40623c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x22c60>
  406240:	add	x1, x1, #0xef8
  406244:	mov	x0, x20
  406248:	bl	40d5ec <ferror@plt+0xa8bc>
  40624c:	mov	x0, #0x10                  	// #16
  406250:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406254:	mov	x24, x0
  406258:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40625c:	add	x0, x0, #0xeb0
  406260:	str	x0, [x24]
  406264:	str	xzr, [x24, #8]
  406268:	mov	x2, x24
  40626c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406270:	add	x1, x1, #0x310
  406274:	mov	x0, x20
  406278:	bl	40d5ec <ferror@plt+0xa8bc>
  40627c:	ldr	x19, [x27, #96]
  406280:	ldr	x20, [x27, #104]
  406284:	cmp	x19, x20
  406288:	b.eq	4062c8 <ferror@plt+0x3598>  // b.none
  40628c:	sub	x0, x20, x19
  406290:	asr	x0, x0, #3
  406294:	clz	x0, x0
  406298:	mov	w1, #0x3f                  	// #63
  40629c:	sub	w0, w1, w0
  4062a0:	mov	w21, #0x0                   	// #0
  4062a4:	mov	w3, w21
  4062a8:	sbfiz	x2, x0, #1, #32
  4062ac:	mov	x1, x20
  4062b0:	mov	x0, x19
  4062b4:	bl	40c448 <ferror@plt+0x9718>
  4062b8:	mov	w2, w21
  4062bc:	mov	x1, x20
  4062c0:	mov	x0, x19
  4062c4:	bl	40c18c <ferror@plt+0x945c>
  4062c8:	ldr	x22, [x27, #96]
  4062cc:	ldr	x0, [x27, #104]
  4062d0:	cmp	x22, x0
  4062d4:	b.eq	40654c <ferror@plt+0x381c>  // b.none
  4062d8:	str	d8, [sp, #96]
  4062dc:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4062e0:	add	x25, x25, #0xe80
  4062e4:	mov	x20, #0x10                  	// #16
  4062e8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4062ec:	add	x0, x0, #0x320
  4062f0:	str	x0, [sp, #120]
  4062f4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4062f8:	add	x0, x0, #0x320
  4062fc:	str	x0, [sp, #128]
  406300:	mov	x26, #0x4ec5                	// #20165
  406304:	movk	x26, #0xc4ec, lsl #16
  406308:	movk	x26, #0xec4e, lsl #32
  40630c:	movk	x26, #0x4ec4, lsl #48
  406310:	b	4064c8 <ferror@plt+0x3798>
  406314:	ldr	x28, [x23, #8]
  406318:	mov	x0, x20
  40631c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406320:	mov	x23, x0
  406324:	mov	x1, x28
  406328:	bl	40d388 <ferror@plt+0xa658>
  40632c:	mov	x2, x23
  406330:	ldr	x1, [sp, #128]
  406334:	mov	x0, x19
  406338:	bl	40d5ec <ferror@plt+0xa8bc>
  40633c:	ldr	x0, [x21]
  406340:	ldr	w0, [x0, #88]
  406344:	ucvtf	d8, w0
  406348:	mov	x0, x20
  40634c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406350:	mov	x2, x0
  406354:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406358:	add	x23, x23, #0xee0
  40635c:	str	x23, [x0]
  406360:	str	d8, [x0, #8]
  406364:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406368:	add	x1, x1, #0x330
  40636c:	mov	x0, x19
  406370:	bl	40d5ec <ferror@plt+0xa8bc>
  406374:	ldr	x0, [x21]
  406378:	ldr	w0, [x0, #92]
  40637c:	ucvtf	d8, w0
  406380:	mov	x0, x20
  406384:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406388:	mov	x2, x0
  40638c:	str	x23, [x0]
  406390:	str	d8, [x0, #8]
  406394:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406398:	add	x1, x1, #0x340
  40639c:	mov	x0, x19
  4063a0:	bl	40d5ec <ferror@plt+0xa8bc>
  4063a4:	ldr	x0, [x21]
  4063a8:	ldr	w0, [x0, #96]
  4063ac:	ucvtf	d8, w0
  4063b0:	mov	x0, x20
  4063b4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4063b8:	mov	x2, x0
  4063bc:	str	x23, [x0]
  4063c0:	str	d8, [x0, #8]
  4063c4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4063c8:	add	x1, x1, #0x350
  4063cc:	mov	x0, x19
  4063d0:	bl	40d5ec <ferror@plt+0xa8bc>
  4063d4:	ldr	x0, [x21]
  4063d8:	ldr	w0, [x0, #100]
  4063dc:	ucvtf	d8, w0
  4063e0:	mov	x0, x20
  4063e4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4063e8:	mov	x2, x0
  4063ec:	str	x23, [x0]
  4063f0:	str	d8, [x0, #8]
  4063f4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4063f8:	add	x1, x1, #0x360
  4063fc:	mov	x0, x19
  406400:	bl	40d5ec <ferror@plt+0xa8bc>
  406404:	ldr	x1, [x21]
  406408:	ldr	x0, [x1, #40]
  40640c:	ldr	x1, [x1, #32]
  406410:	sub	x0, x0, x1
  406414:	asr	x0, x0, #3
  406418:	mul	x0, x0, x26
  40641c:	sub	w0, w0, #0x2
  406420:	ucvtf	d8, w0
  406424:	mov	x0, x20
  406428:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40642c:	mov	x2, x0
  406430:	str	x23, [x0]
  406434:	str	d8, [x0, #8]
  406438:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40643c:	add	x1, x1, #0x370
  406440:	mov	x0, x19
  406444:	bl	40d5ec <ferror@plt+0xa8bc>
  406448:	ldr	x0, [x21]
  40644c:	ldr	w0, [x0, #56]
  406450:	ucvtf	d8, w0
  406454:	mov	x0, x20
  406458:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40645c:	mov	x2, x0
  406460:	str	x23, [x0]
  406464:	str	d8, [x0, #8]
  406468:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40646c:	add	x1, x1, #0x378
  406470:	mov	x0, x19
  406474:	bl	40d5ec <ferror@plt+0xa8bc>
  406478:	ldr	x0, [x21]
  40647c:	ldr	x0, [x0, #32]
  406480:	ldr	d8, [x0, #40]
  406484:	scvtf	d8, d8
  406488:	mov	x0, x20
  40648c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406490:	mov	x2, x0
  406494:	str	x23, [x0]
  406498:	str	d8, [x0, #8]
  40649c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4064a0:	add	x1, x1, #0x388
  4064a4:	mov	x0, x19
  4064a8:	bl	40d5ec <ferror@plt+0xa8bc>
  4064ac:	mov	x1, x19
  4064b0:	mov	x0, x24
  4064b4:	bl	40d1f8 <ferror@plt+0xa4c8>
  4064b8:	add	x22, x22, #0x8
  4064bc:	ldr	x0, [x27, #104]
  4064c0:	cmp	x0, x22
  4064c4:	b.eq	406548 <ferror@plt+0x3818>  // b.none
  4064c8:	mov	x0, #0x38                  	// #56
  4064cc:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4064d0:	mov	x19, x0
  4064d4:	str	x25, [x0], #8
  4064d8:	mov	w4, #0x1                   	// #1
  4064dc:	mov	w3, #0x0                   	// #0
  4064e0:	mov	w2, #0x0                   	// #0
  4064e4:	mov	x1, #0xd                   	// #13
  4064e8:	bl	409c6c <ferror@plt+0x6f3c>
  4064ec:	mov	x21, x22
  4064f0:	ldr	x0, [x22]
  4064f4:	ldr	x28, [x0]
  4064f8:	mov	x0, x20
  4064fc:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406500:	mov	x23, x0
  406504:	mov	x1, x28
  406508:	bl	40d388 <ferror@plt+0xa658>
  40650c:	mov	x2, x23
  406510:	ldr	x1, [sp, #120]
  406514:	mov	x0, x19
  406518:	bl	40d5ec <ferror@plt+0xa8bc>
  40651c:	ldr	x23, [x22]
  406520:	ldr	x0, [x23, #8]
  406524:	cbnz	x0, 406314 <ferror@plt+0x35e4>
  406528:	mov	w1, #0x1                   	// #1
  40652c:	ldr	x0, [x23]
  406530:	bl	4448e8 <ferror@plt+0x41bb8>
  406534:	str	x0, [x23, #8]
  406538:	cbnz	x0, 406314 <ferror@plt+0x35e4>
  40653c:	ldr	x0, [x23]
  406540:	str	x0, [x23, #8]
  406544:	b	406314 <ferror@plt+0x35e4>
  406548:	ldr	d8, [sp, #96]
  40654c:	mov	x0, #0x10                  	// #16
  406550:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406554:	mov	x23, x0
  406558:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40655c:	add	x0, x0, #0xeb0
  406560:	str	x0, [x23]
  406564:	str	xzr, [x23, #8]
  406568:	mov	x2, x23
  40656c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  406570:	add	x1, x1, #0xba8
  406574:	ldr	x0, [sp, #136]
  406578:	bl	40d5ec <ferror@plt+0xa8bc>
  40657c:	ldr	x1, [x27, #32]
  406580:	ldr	x0, [x27, #24]
  406584:	cmp	x1, x0
  406588:	b.eq	406690 <ferror@plt+0x3960>  // b.none
  40658c:	mov	w21, #0x1                   	// #1
  406590:	mov	x25, #0x0                   	// #0
  406594:	mov	x28, #0x1                   	// #1
  406598:	b	406654 <ferror@plt+0x3924>
  40659c:	ldr	x24, [x0]
  4065a0:	ldr	x0, [x0, #8]
  4065a4:	cmp	x24, x0
  4065a8:	b.ne	4065c0 <ferror@plt+0x3890>  // b.any
  4065ac:	b	406668 <ferror@plt+0x3938>
  4065b0:	add	x24, x24, #0x8
  4065b4:	ldr	x0, [x26, #8]
  4065b8:	cmp	x0, x24
  4065bc:	b.eq	406668 <ferror@plt+0x3938>  // b.none
  4065c0:	mov	x22, x24
  4065c4:	ldr	x20, [x24]
  4065c8:	ldrb	w0, [x20, #28]
  4065cc:	tst	x0, #0x4
  4065d0:	csel	x25, x25, x20, ne  // ne = any
  4065d4:	ldr	x1, [x20, #112]
  4065d8:	ldr	x0, [x20, #120]
  4065dc:	cmp	x0, x1
  4065e0:	b.eq	4065b0 <ferror@plt+0x3880>  // b.none
  4065e4:	mov	w19, #0x0                   	// #0
  4065e8:	mov	x4, #0x0                   	// #0
  4065ec:	ldr	x0, [x22]
  4065f0:	ldr	x3, [x0]
  4065f4:	add	w2, w21, w19
  4065f8:	add	x1, x1, x4, lsl #6
  4065fc:	mov	x0, x23
  406600:	bl	404c44 <ferror@plt+0x1f14>
  406604:	add	w19, w19, #0x1
  406608:	mov	w4, w19
  40660c:	ldr	x1, [x20, #112]
  406610:	ldr	x0, [x20, #120]
  406614:	sub	x0, x0, x1
  406618:	asr	x0, x0, #6
  40661c:	cmp	x0, w19, uxtw
  406620:	b.hi	4065ec <ferror@plt+0x38bc>  // b.pmore
  406624:	b	4065b0 <ferror@plt+0x3880>
  406628:	mov	w2, w21
  40662c:	mov	x0, x23
  406630:	bl	404c44 <ferror@plt+0x1f14>
  406634:	add	w21, w21, #0x1
  406638:	mov	w28, w21
  40663c:	ldr	x0, [x27, #32]
  406640:	ldr	x1, [x27, #24]
  406644:	sub	x0, x0, x1
  406648:	asr	x0, x0, #6
  40664c:	cmp	x0, w21, uxtw
  406650:	b.cc	406690 <ferror@plt+0x3960>  // b.lo, b.ul, b.last
  406654:	mov	w1, w21
  406658:	mov	x0, x27
  40665c:	bl	405aec <ferror@plt+0x2dbc>
  406660:	mov	x26, x0
  406664:	cbnz	x0, 40659c <ferror@plt+0x386c>
  406668:	ldr	x1, [x27, #24]
  40666c:	ldr	x0, [x27, #32]
  406670:	sub	x0, x0, x1
  406674:	cmp	x28, x0, asr #6
  406678:	b.cs	406634 <ferror@plt+0x3904>  // b.hs, b.nlast
  40667c:	add	x1, x1, x28, lsl #6
  406680:	mov	x3, x25
  406684:	cbz	x25, 406628 <ferror@plt+0x38f8>
  406688:	ldr	x3, [x25]
  40668c:	b	406628 <ferror@plt+0x38f8>
  406690:	ldp	x19, x20, [sp, #16]
  406694:	ldp	x21, x22, [sp, #32]
  406698:	ldp	x23, x24, [sp, #48]
  40669c:	ldp	x25, x26, [sp, #64]
  4066a0:	ldp	x27, x28, [sp, #80]
  4066a4:	ldp	x29, x30, [sp], #144
  4066a8:	ret
  4066ac:	stp	x29, x30, [sp, #-368]!
  4066b0:	mov	x29, sp
  4066b4:	stp	x19, x20, [sp, #16]
  4066b8:	stp	x21, x22, [sp, #32]
  4066bc:	mov	x19, x0
  4066c0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4066c4:	add	x0, x0, #0x398
  4066c8:	cmp	x19, #0x0
  4066cc:	csel	x19, x0, x19, eq  // eq = none
  4066d0:	str	x19, [sp, #208]
  4066d4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4066d8:	add	x0, x0, #0x5c8
  4066dc:	add	x20, x0, #0x128
  4066e0:	mov	w3, #0x0                   	// #0
  4066e4:	add	x2, sp, #0xd0
  4066e8:	ldr	x1, [x0, #304]
  4066ec:	ldr	x0, [x0, #296]
  4066f0:	bl	40b1e4 <ferror@plt+0x84b4>
  4066f4:	ldr	x1, [x20, #8]
  4066f8:	cmp	x1, x0
  4066fc:	b.eq	406744 <ferror@plt+0x3a14>  // b.none
  406700:	ldr	w21, [x0, #8]
  406704:	ubfiz	x20, x21, #3, #32
  406708:	add	x20, x20, w21, uxtw
  40670c:	lsl	x20, x20, #4
  406710:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406714:	add	x0, x0, #0x5c8
  406718:	ldr	x1, [x0, #320]
  40671c:	add	x1, x1, x20
  406720:	ldr	x1, [x1, #16]
  406724:	ldr	x0, [x0, #344]
  406728:	cmp	x1, x0
  40672c:	b.gt	406ae0 <ferror@plt+0x3db0>
  406730:	mov	w0, w21
  406734:	ldp	x19, x20, [sp, #16]
  406738:	ldp	x21, x22, [sp, #32]
  40673c:	ldp	x29, x30, [sp], #368
  406740:	ret
  406744:	stp	x23, x24, [sp, #48]
  406748:	mov	x0, x19
  40674c:	bl	40371c <ferror@plt+0x9ec>
  406750:	mov	x22, x0
  406754:	str	x0, [sp, #208]
  406758:	adrp	x4, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40675c:	add	x4, x4, #0x5c8
  406760:	add	x20, x4, #0x128
  406764:	mov	w3, #0x0                   	// #0
  406768:	add	x2, sp, #0xd0
  40676c:	ldr	x1, [x4, #304]
  406770:	ldr	x0, [x4, #296]
  406774:	bl	40b1e4 <ferror@plt+0x84b4>
  406778:	ldr	x1, [x20, #8]
  40677c:	cmp	x1, x0
  406780:	b.eq	40683c <ferror@plt+0x3b0c>  // b.none
  406784:	ldr	w21, [x0, #8]
  406788:	str	x19, [sp, #208]
  40678c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406790:	add	x0, x0, #0x5c8
  406794:	add	x20, x0, #0x128
  406798:	mov	w3, #0x0                   	// #0
  40679c:	add	x2, sp, #0xd0
  4067a0:	ldr	x1, [x0, #304]
  4067a4:	ldr	x0, [x0, #296]
  4067a8:	bl	40b1e4 <ferror@plt+0x84b4>
  4067ac:	ldr	x1, [x20, #8]
  4067b0:	cmp	x1, x0
  4067b4:	b.eq	406a68 <ferror@plt+0x3d38>  // b.none
  4067b8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4067bc:	add	x0, x0, #0x5c8
  4067c0:	ldr	x23, [x0, #296]
  4067c4:	ldr	x22, [x0, #304]
  4067c8:	cmp	x22, x23
  4067cc:	b.eq	406ad0 <ferror@plt+0x3da0>  // b.none
  4067d0:	sub	x20, x22, x23
  4067d4:	asr	x2, x20, #4
  4067d8:	clz	x0, x2
  4067dc:	mov	w2, #0x3f                  	// #63
  4067e0:	sub	w2, w2, w0
  4067e4:	mov	w3, #0x0                   	// #0
  4067e8:	sbfiz	x2, x2, #1, #32
  4067ec:	mov	x1, x22
  4067f0:	mov	x0, x23
  4067f4:	bl	40cb7c <ferror@plt+0x9e4c>
  4067f8:	cmp	x20, #0x100
  4067fc:	b.le	406ab8 <ferror@plt+0x3d88>
  406800:	add	x20, x23, #0x100
  406804:	mov	w2, #0x0                   	// #0
  406808:	mov	x1, x20
  40680c:	mov	x0, x23
  406810:	bl	40c274 <ferror@plt+0x9544>
  406814:	cmp	x22, x20
  406818:	b.eq	406ad8 <ferror@plt+0x3da8>  // b.none
  40681c:	mov	w1, #0x0                   	// #0
  406820:	mov	x0, x20
  406824:	bl	40c1f8 <ferror@plt+0x94c8>
  406828:	add	x20, x20, #0x10
  40682c:	cmp	x22, x20
  406830:	b.ne	40681c <ferror@plt+0x3aec>  // b.any
  406834:	ldp	x23, x24, [sp, #48]
  406838:	b	406704 <ferror@plt+0x39d4>
  40683c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406840:	add	x0, x0, #0x5c8
  406844:	ldr	x24, [x0, #328]
  406848:	ldr	x2, [x0, #320]
  40684c:	sub	x24, x24, x2
  406850:	asr	x24, x24, #4
  406854:	mov	x2, #0x8e39                	// #36409
  406858:	movk	x2, #0x38e3, lsl #16
  40685c:	movk	x2, #0xe38e, lsl #32
  406860:	movk	x2, #0x8e38, lsl #48
  406864:	mul	x24, x24, x2
  406868:	mov	w21, w24
  40686c:	str	x22, [sp, #208]
  406870:	str	w24, [sp, #216]
  406874:	ldr	x0, [x0, #312]
  406878:	cmp	x1, x0
  40687c:	b.eq	4069f4 <ferror@plt+0x3cc4>  // b.none
  406880:	ldp	x2, x3, [sp, #208]
  406884:	stp	x2, x3, [x1]
  406888:	ldr	x1, [x20, #8]
  40688c:	add	x1, x1, #0x10
  406890:	str	x1, [x20, #8]
  406894:	add	x0, sp, #0x40
  406898:	bl	4048cc <ferror@plt+0x1b9c>
  40689c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4068a0:	add	x0, x0, #0x5c8
  4068a4:	ldr	x1, [x0, #328]
  4068a8:	add	x0, x0, #0x140
  4068ac:	ldr	x0, [x0, #16]
  4068b0:	cmp	x1, x0
  4068b4:	b.eq	406a0c <ferror@plt+0x3cdc>  // b.none
  4068b8:	ldr	w0, [sp, #64]
  4068bc:	str	w0, [x1]
  4068c0:	ldr	x0, [sp, #72]
  4068c4:	str	x0, [x1, #8]
  4068c8:	ldr	x0, [sp, #80]
  4068cc:	str	x0, [x1, #16]
  4068d0:	ldr	x2, [sp, #88]
  4068d4:	str	x2, [x1, #24]
  4068d8:	ldr	x2, [sp, #96]
  4068dc:	str	x2, [x1, #32]
  4068e0:	ldr	x2, [sp, #104]
  4068e4:	str	x2, [x1, #40]
  4068e8:	str	xzr, [sp, #104]
  4068ec:	str	xzr, [sp, #96]
  4068f0:	str	xzr, [sp, #88]
  4068f4:	ldp	x2, x3, [sp, #112]
  4068f8:	stp	x2, x3, [x1, #48]
  4068fc:	ldp	x2, x3, [sp, #128]
  406900:	stp	x2, x3, [x1, #64]
  406904:	ldr	x2, [sp, #144]
  406908:	str	x2, [x1, #80]
  40690c:	ldr	w0, [sp, #152]
  406910:	str	w0, [x1, #88]
  406914:	ldr	x2, [sp, #160]
  406918:	str	x2, [x1, #96]
  40691c:	ldr	x2, [sp, #168]
  406920:	str	x2, [x1, #104]
  406924:	ldr	x2, [sp, #176]
  406928:	str	x2, [x1, #112]
  40692c:	str	xzr, [sp, #176]
  406930:	str	xzr, [sp, #168]
  406934:	str	xzr, [sp, #160]
  406938:	add	x0, x1, #0x78
  40693c:	ldr	x2, [sp, #184]
  406940:	str	x2, [x1, #120]
  406944:	ldr	x1, [sp, #192]
  406948:	str	x1, [x0, #8]
  40694c:	ldr	x1, [sp, #200]
  406950:	str	x1, [x0, #16]
  406954:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406958:	add	x0, x0, #0x5c8
  40695c:	ldr	x1, [x0, #328]
  406960:	add	x1, x1, #0x90
  406964:	str	x1, [x0, #328]
  406968:	ldr	x0, [sp, #160]
  40696c:	cbz	x0, 406974 <ferror@plt+0x3c44>
  406970:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406974:	ldr	x20, [sp, #88]
  406978:	ldr	x23, [sp, #96]
  40697c:	cmp	x20, x23
  406980:	b.ne	406a3c <ferror@plt+0x3d0c>  // b.any
  406984:	ldr	x0, [sp, #88]
  406988:	cbz	x0, 406990 <ferror@plt+0x3c60>
  40698c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406990:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406994:	add	x0, x0, #0x5c8
  406998:	ldr	x20, [x0, #328]
  40699c:	stur	x22, [x20, #-136]
  4069a0:	stur	x22, [x20, #-64]
  4069a4:	stur	w24, [x20, #-144]
  4069a8:	ldr	x23, [x0, #112]
  4069ac:	cbz	x23, 4069d4 <ferror@plt+0x3ca4>
  4069b0:	mov	x2, x23
  4069b4:	mov	x1, x22
  4069b8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4069bc:	ldr	x0, [x0, #1584]
  4069c0:	bl	402830 <strncmp@plt>
  4069c4:	cbnz	w0, 4069d4 <ferror@plt+0x3ca4>
  4069c8:	ldrb	w0, [x22, x23]
  4069cc:	cmp	w0, #0x2f
  4069d0:	b.eq	406a58 <ferror@plt+0x3d28>  // b.none
  4069d4:	add	x2, sp, #0xe0
  4069d8:	mov	x1, x22
  4069dc:	mov	w0, #0x0                   	// #0
  4069e0:	bl	402c70 <__xstat@plt>
  4069e4:	cbnz	w0, 406788 <ferror@plt+0x3a58>
  4069e8:	ldr	x0, [sp, #312]
  4069ec:	stur	x0, [x20, #-128]
  4069f0:	b	406788 <ferror@plt+0x3a58>
  4069f4:	add	x2, sp, #0xd0
  4069f8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4069fc:	add	x0, x0, #0x5c8
  406a00:	add	x0, x0, #0x128
  406a04:	bl	40a398 <ferror@plt+0x7668>
  406a08:	b	406894 <ferror@plt+0x3b64>
  406a0c:	add	x2, sp, #0x40
  406a10:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406a14:	add	x0, x0, #0x5c8
  406a18:	add	x0, x0, #0x140
  406a1c:	bl	40b310 <ferror@plt+0x85e0>
  406a20:	ldr	x0, [sp, #184]
  406a24:	cbz	x0, 406968 <ferror@plt+0x3c38>
  406a28:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406a2c:	b	406968 <ferror@plt+0x3c38>
  406a30:	add	x20, x20, #0x40
  406a34:	cmp	x23, x20
  406a38:	b.eq	406984 <ferror@plt+0x3c54>  // b.none
  406a3c:	ldr	x0, [x20, #32]
  406a40:	cbz	x0, 406a48 <ferror@plt+0x3d18>
  406a44:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406a48:	ldr	x0, [x20, #8]
  406a4c:	cbz	x0, 406a30 <ferror@plt+0x3d00>
  406a50:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  406a54:	b	406a30 <ferror@plt+0x3d00>
  406a58:	add	x0, x23, #0x1
  406a5c:	add	x0, x22, x0
  406a60:	stur	x0, [x20, #-64]
  406a64:	b	4069d4 <ferror@plt+0x3ca4>
  406a68:	mov	x0, x19
  406a6c:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  406a70:	str	x0, [sp, #352]
  406a74:	str	w21, [sp, #360]
  406a78:	ldr	x1, [x20, #8]
  406a7c:	ldr	x0, [x20, #16]
  406a80:	cmp	x1, x0
  406a84:	b.eq	406aa0 <ferror@plt+0x3d70>  // b.none
  406a88:	ldp	x2, x3, [sp, #352]
  406a8c:	stp	x2, x3, [x1]
  406a90:	ldr	x1, [x20, #8]
  406a94:	add	x1, x1, #0x10
  406a98:	str	x1, [x20, #8]
  406a9c:	b	4067b8 <ferror@plt+0x3a88>
  406aa0:	add	x2, sp, #0x160
  406aa4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406aa8:	add	x0, x0, #0x5c8
  406aac:	add	x0, x0, #0x128
  406ab0:	bl	40b714 <ferror@plt+0x89e4>
  406ab4:	b	4067b8 <ferror@plt+0x3a88>
  406ab8:	mov	w2, #0x0                   	// #0
  406abc:	mov	x1, x22
  406ac0:	mov	x0, x23
  406ac4:	bl	40c274 <ferror@plt+0x9544>
  406ac8:	ldp	x23, x24, [sp, #48]
  406acc:	b	406704 <ferror@plt+0x39d4>
  406ad0:	ldp	x23, x24, [sp, #48]
  406ad4:	b	406704 <ferror@plt+0x39d4>
  406ad8:	ldp	x23, x24, [sp, #48]
  406adc:	b	406704 <ferror@plt+0x39d4>
  406ae0:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406ae4:	add	x22, x22, #0x5c8
  406ae8:	ldr	x3, [x22, #248]
  406aec:	mov	x2, x19
  406af0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406af4:	add	x1, x1, #0x3a8
  406af8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406afc:	ldr	x0, [x0, #1424]
  406b00:	bl	40eeec <ferror@plt+0xc1bc>
  406b04:	ldr	w0, [x22, #352]
  406b08:	cbz	w0, 406b20 <ferror@plt+0x3df0>
  406b0c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406b10:	ldr	x0, [x0, #1800]
  406b14:	add	x20, x0, x20
  406b18:	str	xzr, [x20, #16]
  406b1c:	b	406730 <ferror@plt+0x3a00>
  406b20:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406b24:	add	x1, x1, #0x3d8
  406b28:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406b2c:	ldr	x0, [x0, #1424]
  406b30:	bl	40eeec <ferror@plt+0xc1bc>
  406b34:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406b38:	mov	w1, #0x1                   	// #1
  406b3c:	str	w1, [x0, #1832]
  406b40:	b	406b0c <ferror@plt+0x3ddc>
  406b44:	stp	x29, x30, [sp, #-32]!
  406b48:	mov	x29, sp
  406b4c:	stp	x19, x20, [sp, #16]
  406b50:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406b54:	add	x19, x19, #0x5c8
  406b58:	add	x1, x19, #0x168
  406b5c:	str	xzr, [x19, #360]
  406b60:	str	xzr, [x1, #8]
  406b64:	str	xzr, [x1, #16]
  406b68:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406b6c:	add	x20, x20, #0x3a0
  406b70:	mov	x2, x20
  406b74:	adrp	x0, 409000 <ferror@plt+0x62d0>
  406b78:	add	x0, x0, #0x798
  406b7c:	bl	402740 <__cxa_atexit@plt>
  406b80:	add	x1, x19, #0x180
  406b84:	str	wzr, [x1, #8]
  406b88:	str	xzr, [x1, #16]
  406b8c:	add	x0, x19, #0x188
  406b90:	str	x0, [x1, #24]
  406b94:	str	x0, [x1, #32]
  406b98:	str	xzr, [x1, #40]
  406b9c:	mov	x2, x20
  406ba0:	adrp	x0, 409000 <ferror@plt+0x62d0>
  406ba4:	add	x0, x0, #0xb30
  406ba8:	bl	402740 <__cxa_atexit@plt>
  406bac:	add	x1, x19, #0x140
  406bb0:	str	xzr, [x19, #320]
  406bb4:	str	xzr, [x1, #8]
  406bb8:	str	xzr, [x1, #16]
  406bbc:	mov	x2, x20
  406bc0:	adrp	x0, 409000 <ferror@plt+0x62d0>
  406bc4:	add	x0, x0, #0x7f8
  406bc8:	bl	402740 <__cxa_atexit@plt>
  406bcc:	add	x1, x19, #0x128
  406bd0:	str	xzr, [x19, #296]
  406bd4:	str	xzr, [x1, #8]
  406bd8:	str	xzr, [x1, #16]
  406bdc:	mov	x2, x20
  406be0:	adrp	x0, 409000 <ferror@plt+0x62d0>
  406be4:	add	x0, x0, #0x7b8
  406be8:	bl	402740 <__cxa_atexit@plt>
  406bec:	add	x1, x19, #0x1b0
  406bf0:	str	xzr, [x19, #432]
  406bf4:	str	xzr, [x1, #8]
  406bf8:	str	xzr, [x1, #16]
  406bfc:	mov	x2, x20
  406c00:	adrp	x0, 409000 <ferror@plt+0x62d0>
  406c04:	add	x0, x0, #0x7d8
  406c08:	bl	402740 <__cxa_atexit@plt>
  406c0c:	ldp	x19, x20, [sp, #16]
  406c10:	ldp	x29, x30, [sp], #32
  406c14:	ret
  406c18:	stp	x29, x30, [sp, #-432]!
  406c1c:	mov	x29, sp
  406c20:	stp	x19, x20, [sp, #16]
  406c24:	str	w0, [sp, #172]
  406c28:	str	x1, [sp, #160]
  406c2c:	ldr	x19, [x1]
  406c30:	mov	x0, x19
  406c34:	bl	402680 <strlen@plt>
  406c38:	add	x0, x19, x0
  406c3c:	cmp	x19, x0
  406c40:	b.eq	406c5c <ferror@plt+0x3f2c>  // b.none
  406c44:	ldurb	w1, [x0, #-1]
  406c48:	cmp	w1, #0x2f
  406c4c:	b.eq	406c5c <ferror@plt+0x3f2c>  // b.none
  406c50:	sub	x0, x0, #0x1
  406c54:	cmp	x19, x0
  406c58:	b.ne	406c44 <ferror@plt+0x3f14>  // b.any
  406c5c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406c60:	str	x0, [x1, #2024]
  406c64:	bl	454c80 <_obstack_memory_used@@Base+0x8e0>
  406c68:	bl	452e84 <ferror@plt+0x50154>
  406c6c:	bl	4193ec <ferror@plt+0x166bc>
  406c70:	mov	w1, #0x0                   	// #0
  406c74:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406c78:	ldr	x0, [x0, #944]
  406c7c:	bl	40e794 <ferror@plt+0xba64>
  406c80:	add	x1, sp, #0xa0
  406c84:	add	x0, sp, #0xac
  406c88:	bl	45056c <ferror@plt+0x4d83c>
  406c8c:	ldr	x1, [sp, #160]
  406c90:	ldr	w0, [sp, #172]
  406c94:	bl	4034b4 <ferror@plt+0x784>
  406c98:	str	w0, [sp, #148]
  406c9c:	ldr	w2, [sp, #172]
  406ca0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406ca4:	ldr	w0, [x0, #1440]
  406ca8:	cmp	w0, w2
  406cac:	b.eq	406d10 <ferror@plt+0x3fe0>  // b.none
  406cb0:	ldr	w0, [sp, #148]
  406cb4:	sub	w0, w2, w0
  406cb8:	cmp	w0, #0x1
  406cbc:	b.le	406ccc <ferror@plt+0x3f9c>
  406cc0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406cc4:	mov	w1, #0x1                   	// #1
  406cc8:	str	w1, [x0, #1720]
  406ccc:	ldr	w0, [sp, #148]
  406cd0:	cmp	w2, w0
  406cd4:	b.eq	409448 <ferror@plt+0x6718>  // b.none
  406cd8:	stp	x21, x22, [sp, #32]
  406cdc:	stp	x23, x24, [sp, #48]
  406ce0:	stp	x25, x26, [sp, #64]
  406ce4:	stp	x27, x28, [sp, #80]
  406ce8:	sbfiz	x1, x0, #3, #32
  406cec:	str	x1, [sp, #96]
  406cf0:	str	w0, [sp, #144]
  406cf4:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406cf8:	add	x19, x19, #0x5c8
  406cfc:	mov	x23, #0x4ec5                	// #20165
  406d00:	movk	x23, #0xc4ec, lsl #16
  406d04:	movk	x23, #0xec4e, lsl #32
  406d08:	movk	x23, #0x4ec4, lsl #48
  406d0c:	b	409244 <ferror@plt+0x6514>
  406d10:	stp	x21, x22, [sp, #32]
  406d14:	stp	x23, x24, [sp, #48]
  406d18:	stp	x25, x26, [sp, #64]
  406d1c:	stp	x27, x28, [sp, #80]
  406d20:	mov	w0, #0x1                   	// #1
  406d24:	bl	4032e8 <ferror@plt+0x5b8>
  406d28:	ldr	w1, [sp, #144]
  406d2c:	ldr	w0, [sp, #148]
  406d30:	sub	w1, w1, w0
  406d34:	sub	w2, w2, w0
  406d38:	add	w1, w1, #0x1
  406d3c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406d40:	add	x0, x0, #0x430
  406d44:	bl	402c30 <printf@plt>
  406d48:	b	40924c <ferror@plt+0x651c>
  406d4c:	bl	402680 <strlen@plt>
  406d50:	add	w20, w20, #0x2
  406d54:	add	w0, w20, w0
  406d58:	sxtw	x0, w0
  406d5c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  406d60:	mov	x20, x0
  406d64:	strb	wzr, [x0]
  406d68:	add	x2, sp, #0xf8
  406d6c:	ldr	x1, [x19, #96]
  406d70:	mov	w0, #0x0                   	// #0
  406d74:	bl	402c70 <__xstat@plt>
  406d78:	cbnz	w0, 406d8c <ferror@plt+0x405c>
  406d7c:	ldr	w0, [sp, #264]
  406d80:	and	w0, w0, #0xf000
  406d84:	cmp	w0, #0x4, lsl #12
  406d88:	b.eq	409750 <ferror@plt+0x6a20>  // b.none
  406d8c:	ldr	x1, [x19, #96]
  406d90:	mov	x0, x20
  406d94:	bl	402880 <strcat@plt>
  406d98:	b	4092ac <ferror@plt+0x657c>
  406d9c:	mov	w1, #0x2f                  	// #47
  406da0:	strh	w1, [x20, x0]
  406da4:	b	409774 <ferror@plt+0x6a44>
  406da8:	mov	x2, x24
  406dac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406db0:	add	x1, x1, #0x460
  406db4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406db8:	ldr	x0, [x0, #1424]
  406dbc:	bl	40eeec <ferror@plt+0xc1bc>
  406dc0:	ldr	w0, [x19, #132]
  406dc4:	cbnz	w0, 406ddc <ferror@plt+0x40ac>
  406dc8:	ldr	w0, [sp, #172]
  406dcc:	sub	w0, w0, #0x1
  406dd0:	ldr	w1, [sp, #144]
  406dd4:	cmp	w0, w1
  406dd8:	b.ne	409220 <ferror@plt+0x64f0>  // b.any
  406ddc:	str	xzr, [sp, #264]
  406de0:	str	xzr, [sp, #272]
  406de4:	str	wzr, [sp, #280]
  406de8:	str	wzr, [sp, #284]
  406dec:	strb	wzr, [sp, #292]
  406df0:	mov	x0, #0xd                   	// #13
  406df4:	bl	40dcb0 <ferror@plt+0xaf80>
  406df8:	mov	w20, w0
  406dfc:	ubfiz	x1, x20, #4, #32
  406e00:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406e04:	add	x0, x0, #0xf98
  406e08:	ldr	w21, [x0, x1]
  406e0c:	mov	x1, #0x10                  	// #16
  406e10:	mov	x0, x21
  406e14:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  406e18:	cbz	x21, 406e34 <ferror@plt+0x4104>
  406e1c:	add	x1, x0, #0x4
  406e20:	add	x3, x1, x21, lsl #4
  406e24:	mov	w2, #0xfffffffd            	// #-3
  406e28:	str	w2, [x1], #16
  406e2c:	cmp	x1, x3
  406e30:	b.ne	406e28 <ferror@plt+0x40f8>  // b.any
  406e34:	str	x0, [sp, #248]
  406e38:	str	x21, [sp, #256]
  406e3c:	str	w20, [sp, #288]
  406e40:	ldr	x21, [x19, #360]
  406e44:	ldr	x0, [x19, #368]
  406e48:	cmp	x0, x21
  406e4c:	b.eq	407a24 <ferror@plt+0x4cf4>  // b.none
  406e50:	mov	w27, #0x79b9                	// #31161
  406e54:	movk	w27, #0x9e37, lsl #16
  406e58:	mov	w28, #0x8647                	// #34375
  406e5c:	movk	w28, #0x61c8, lsl #16
  406e60:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406e64:	add	x25, x25, #0xf98
  406e68:	b	409554 <ferror@plt+0x6824>
  406e6c:	add	x2, sp, #0x198
  406e70:	add	x0, x19, #0x1b0
  406e74:	bl	40ade0 <ferror@plt+0x80b0>
  406e78:	b	4093b0 <ferror@plt+0x6680>
  406e7c:	ldr	x2, [x19, #248]
  406e80:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406e84:	add	x1, x1, #0x480
  406e88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406e8c:	ldr	x0, [x0, #1424]
  406e90:	bl	40eeec <ferror@plt+0xc1bc>
  406e94:	b	4074b0 <ferror@plt+0x4780>
  406e98:	ldr	x2, [x19, #248]
  406e9c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406ea0:	add	x1, x1, #0x4a0
  406ea4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406ea8:	ldr	x0, [x0, #1424]
  406eac:	bl	40eeec <ferror@plt+0xc1bc>
  406eb0:	bl	403d80 <ferror@plt+0x1050>
  406eb4:	b	4074b0 <ferror@plt+0x4780>
  406eb8:	lsr	w1, w0, #24
  406ebc:	strb	w1, [sp, #208]
  406ec0:	lsr	w1, w0, #16
  406ec4:	strb	w1, [sp, #209]
  406ec8:	lsr	w1, w0, #8
  406ecc:	strb	w1, [sp, #210]
  406ed0:	strb	w0, [sp, #211]
  406ed4:	mov	w0, #0x41                  	// #65
  406ed8:	strb	w0, [sp, #248]
  406edc:	mov	w0, #0x39                  	// #57
  406ee0:	strb	w0, [sp, #249]
  406ee4:	mov	w0, #0x32                  	// #50
  406ee8:	strb	w0, [sp, #250]
  406eec:	mov	w0, #0x2a                  	// #42
  406ef0:	strb	w0, [sp, #251]
  406ef4:	add	x4, sp, #0xf8
  406ef8:	add	x3, sp, #0xd0
  406efc:	ldr	x2, [x19, #248]
  406f00:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406f04:	add	x1, x1, #0x4c0
  406f08:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  406f0c:	ldr	x0, [x0, #1424]
  406f10:	bl	40eeec <ferror@plt+0xc1bc>
  406f14:	b	409410 <ferror@plt+0x66e0>
  406f18:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  406f1c:	add	x2, x2, #0x4e8
  406f20:	mov	w1, #0x4a                  	// #74
  406f24:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  406f28:	add	x0, x0, #0xdc0
  406f2c:	bl	4102b4 <ferror@plt+0xd584>
  406f30:	bl	403bf0 <ferror@plt+0xec0>
  406f34:	mov	w21, w0
  406f38:	str	w0, [sp, #248]
  406f3c:	bl	403bf0 <ferror@plt+0xec0>
  406f40:	str	w0, [sp, #104]
  406f44:	bl	403bf0 <ferror@plt+0xec0>
  406f48:	str	w0, [sp, #112]
  406f4c:	bl	403c40 <ferror@plt+0xf10>
  406f50:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  406f54:	str	x0, [sp, #120]
  406f58:	bl	403bf0 <ferror@plt+0xec0>
  406f5c:	str	w0, [sp, #128]
  406f60:	bl	403c40 <ferror@plt+0xf10>
  406f64:	bl	4066ac <ferror@plt+0x397c>
  406f68:	str	w0, [sp, #136]
  406f6c:	bl	403bf0 <ferror@plt+0xec0>
  406f70:	str	w0, [sp, #152]
  406f74:	bl	403bf0 <ferror@plt+0xec0>
  406f78:	str	w0, [sp, #168]
  406f7c:	bl	403bf0 <ferror@plt+0xec0>
  406f80:	mov	w28, w0
  406f84:	bl	403bf0 <ferror@plt+0xec0>
  406f88:	mov	w27, w0
  406f8c:	mov	x0, #0x90                  	// #144
  406f90:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  406f94:	mov	x24, x0
  406f98:	bl	404924 <ferror@plt+0x1bf4>
  406f9c:	str	x24, [sp, #208]
  406fa0:	ldr	x1, [x19, #368]
  406fa4:	ldr	x0, [x19, #376]
  406fa8:	cmp	x1, x0
  406fac:	b.eq	406fd0 <ferror@plt+0x42a0>  // b.none
  406fb0:	str	x24, [x1]
  406fb4:	ldr	x0, [x19, #368]
  406fb8:	add	x0, x0, #0x8
  406fbc:	str	x0, [x19, #368]
  406fc0:	ldr	x0, [x19, #400]
  406fc4:	cbz	x0, 409748 <ferror@plt+0x6a18>
  406fc8:	add	x24, x19, #0x188
  406fcc:	b	406fe8 <ferror@plt+0x42b8>
  406fd0:	add	x2, sp, #0xd0
  406fd4:	add	x0, x19, #0x168
  406fd8:	bl	4098ac <ferror@plt+0x6b7c>
  406fdc:	b	406fc0 <ferror@plt+0x4290>
  406fe0:	ldr	x0, [x0, #24]
  406fe4:	cbz	x0, 407000 <ferror@plt+0x42d0>
  406fe8:	ldr	w1, [x0, #32]
  406fec:	cmp	w21, w1
  406ff0:	b.hi	406fe0 <ferror@plt+0x42b0>  // b.pmore
  406ff4:	mov	x24, x0
  406ff8:	ldr	x0, [x0, #16]
  406ffc:	b	406fe4 <ferror@plt+0x42b4>
  407000:	add	x0, x19, #0x188
  407004:	cmp	x24, x0
  407008:	b.eq	407018 <ferror@plt+0x42e8>  // b.none
  40700c:	ldr	w0, [x24, #32]
  407010:	cmp	w21, w0
  407014:	b.cs	407084 <ferror@plt+0x4354>  // b.hs, b.nlast
  407018:	add	x0, sp, #0xf8
  40701c:	str	x0, [sp, #424]
  407020:	mov	x25, x24
  407024:	mov	x0, #0x30                  	// #48
  407028:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40702c:	mov	x24, x0
  407030:	str	w21, [x0, #32]
  407034:	str	xzr, [x0, #40]
  407038:	add	x2, x0, #0x20
  40703c:	mov	x1, x25
  407040:	add	x0, x19, #0x180
  407044:	bl	40bf58 <ferror@plt+0x9228>
  407048:	mov	x25, x0
  40704c:	mov	x2, x1
  407050:	cbz	x1, 4070f8 <ferror@plt+0x43c8>
  407054:	add	x0, x19, #0x188
  407058:	cmp	x1, x0
  40705c:	cset	w0, eq  // eq = none
  407060:	cmp	x25, #0x0
  407064:	csinc	w0, w0, wzr, eq  // eq = none
  407068:	cbz	w0, 4070e4 <ferror@plt+0x43b4>
  40706c:	add	x3, x19, #0x188
  407070:	mov	x1, x24
  407074:	bl	455a40 <_obstack_memory_used@@Base+0x16a0>
  407078:	ldr	x0, [x19, #424]
  40707c:	add	x0, x0, #0x1
  407080:	str	x0, [x19, #424]
  407084:	ldr	x0, [sp, #208]
  407088:	str	x0, [x24, #40]
  40708c:	ldr	x1, [sp, #120]
  407090:	str	x1, [x0]
  407094:	ldr	x0, [sp, #208]
  407098:	str	w21, [x0, #16]
  40709c:	ldr	w1, [sp, #104]
  4070a0:	str	w1, [x0, #20]
  4070a4:	ldr	w1, [sp, #112]
  4070a8:	str	w1, [x0, #24]
  4070ac:	ldr	w1, [sp, #136]
  4070b0:	str	w1, [x0, #104]
  4070b4:	ldr	w1, [sp, #152]
  4070b8:	str	w1, [x0, #88]
  4070bc:	ldr	w1, [sp, #168]
  4070c0:	str	w1, [x0, #92]
  4070c4:	str	w28, [x0, #96]
  4070c8:	str	w27, [x0, #100]
  4070cc:	ldrb	w1, [x0, #28]
  4070d0:	ldr	w2, [sp, #128]
  4070d4:	bfi	w1, w2, #1, #1
  4070d8:	strb	w1, [x0, #28]
  4070dc:	mov	w24, w22
  4070e0:	b	4075d0 <ferror@plt+0x48a0>
  4070e4:	ldr	w1, [x24, #32]
  4070e8:	ldr	w0, [x2, #32]
  4070ec:	cmp	w1, w0
  4070f0:	cset	w0, cc  // cc = lo, ul, last
  4070f4:	b	40706c <ferror@plt+0x433c>
  4070f8:	mov	x0, x24
  4070fc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  407100:	mov	x24, x25
  407104:	b	407084 <ferror@plt+0x4354>
  407108:	ldr	x1, [x21, #32]
  40710c:	ldr	x0, [x21, #40]
  407110:	cmp	x1, x0
  407114:	b.eq	407178 <ferror@plt+0x4448>  // b.none
  407118:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40711c:	ldr	x22, [x0, #1424]
  407120:	ldr	x25, [x19, #248]
  407124:	ldr	w0, [x19, #88]
  407128:	cbnz	w0, 407148 <ferror@plt+0x4418>
  40712c:	ldr	x3, [x21]
  407130:	mov	x2, x25
  407134:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407138:	add	x1, x1, #0x4f8
  40713c:	mov	x0, x22
  407140:	bl	40eeec <ferror@plt+0xc1bc>
  407144:	b	4075d0 <ferror@plt+0x48a0>
  407148:	ldr	x0, [x21, #8]
  40714c:	cbz	x0, 407158 <ferror@plt+0x4428>
  407150:	ldr	x3, [x21, #8]
  407154:	b	407130 <ferror@plt+0x4400>
  407158:	mov	w1, #0x1                   	// #1
  40715c:	ldr	x0, [x21]
  407160:	bl	4448e8 <ferror@plt+0x41bb8>
  407164:	str	x0, [x21, #8]
  407168:	cbnz	x0, 407150 <ferror@plt+0x4420>
  40716c:	ldr	x0, [x21]
  407170:	str	x0, [x21, #8]
  407174:	b	407150 <ferror@plt+0x4420>
  407178:	bl	403bf0 <ferror@plt+0xec0>
  40717c:	mov	w3, w0
  407180:	ldr	x28, [x21, #40]
  407184:	ldr	x2, [x21, #32]
  407188:	sub	x1, x28, x2
  40718c:	asr	x1, x1, #3
  407190:	mul	x1, x1, x23
  407194:	cmp	x1, w0, uxtw
  407198:	b.cc	4071bc <ferror@plt+0x448c>  // b.lo, b.ul, b.last
  40719c:	cmp	x3, x1
  4071a0:	b.cs	4075d0 <ferror@plt+0x48a0>  // b.hs, b.nlast
  4071a4:	mov	x0, #0x68                  	// #104
  4071a8:	madd	x27, x3, x0, x2
  4071ac:	str	x27, [sp, #104]
  4071b0:	cmp	x28, x27
  4071b4:	b.ne	407200 <ferror@plt+0x44d0>  // b.any
  4071b8:	b	4075d0 <ferror@plt+0x48a0>
  4071bc:	sub	x1, x3, x1
  4071c0:	add	x0, x21, #0x20
  4071c4:	bl	40a4cc <ferror@plt+0x779c>
  4071c8:	b	4075d0 <ferror@plt+0x48a0>
  4071cc:	add	x22, x22, #0x20
  4071d0:	cmp	x25, x22
  4071d4:	b.eq	4071e8 <ferror@plt+0x44b8>  // b.none
  4071d8:	ldr	x0, [x22, #8]
  4071dc:	cbz	x0, 4071cc <ferror@plt+0x449c>
  4071e0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4071e4:	b	4071cc <ferror@plt+0x449c>
  4071e8:	ldr	x0, [x27, #56]
  4071ec:	cbz	x0, 4071f4 <ferror@plt+0x44c4>
  4071f0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4071f4:	add	x27, x27, #0x68
  4071f8:	cmp	x28, x27
  4071fc:	b.eq	407214 <ferror@plt+0x44e4>  // b.none
  407200:	ldr	x22, [x27, #56]
  407204:	ldr	x25, [x27, #64]
  407208:	cmp	x22, x25
  40720c:	b.ne	4071d8 <ferror@plt+0x44a8>  // b.any
  407210:	b	4071e8 <ferror@plt+0x44b8>
  407214:	ldr	x0, [sp, #104]
  407218:	str	x0, [x21, #40]
  40721c:	b	4075d0 <ferror@plt+0x48a0>
  407220:	bl	403bf0 <ferror@plt+0xec0>
  407224:	mov	w4, w0
  407228:	str	w0, [sp, #104]
  40722c:	ldr	x0, [sp, #208]
  407230:	mov	w2, w4
  407234:	mov	x1, #0x68                  	// #104
  407238:	mul	x3, x2, x1
  40723c:	str	x3, [sp, #120]
  407240:	ldr	x1, [x0, #32]
  407244:	add	x1, x1, x3
  407248:	str	w4, [x1, #32]
  40724c:	sub	w1, w26, #0x1
  407250:	lsr	w27, w1, #1
  407254:	ldr	x4, [x0, #32]
  407258:	str	x4, [sp, #128]
  40725c:	add	x21, x4, x3
  407260:	ldr	x0, [x0, #40]
  407264:	sub	x0, x0, x4
  407268:	asr	x0, x0, #3
  40726c:	mul	x0, x0, x23
  407270:	cmp	x2, x0
  407274:	b.cs	407484 <ferror@plt+0x4754>  // b.hs, b.nlast
  407278:	ldr	x0, [x4, x3]
  40727c:	cbnz	x0, 407484 <ferror@plt+0x4754>
  407280:	str	wzr, [sp, #112]
  407284:	cmp	w1, #0x1
  407288:	b.hi	4072c0 <ferror@plt+0x4590>  // b.pmore
  40728c:	b	4075d0 <ferror@plt+0x48a0>
  407290:	ldrb	w1, [x0, #32]
  407294:	orr	w1, w1, #0x40
  407298:	strb	w1, [x0, #32]
  40729c:	ldr	x1, [x3, #32]
  4072a0:	add	x22, x1, x22
  4072a4:	ldrb	w1, [x22, #48]
  4072a8:	orr	w1, w1, #0x40
  4072ac:	strb	w1, [x22, #48]
  4072b0:	ldrb	w0, [x0, #32]
  4072b4:	tbz	w0, #1, 4073d0 <ferror@plt+0x46a0>
  4072b8:	subs	w27, w27, #0x1
  4072bc:	b.eq	407408 <ferror@plt+0x46d8>  // b.none
  4072c0:	bl	403bf0 <ferror@plt+0xec0>
  4072c4:	mov	w28, w0
  4072c8:	bl	403bf0 <ferror@plt+0xec0>
  4072cc:	mov	w25, w0
  4072d0:	mov	w22, w28
  4072d4:	ldr	x1, [sp, #208]
  4072d8:	ldr	x0, [x1, #40]
  4072dc:	ldr	x1, [x1, #32]
  4072e0:	sub	x0, x0, x1
  4072e4:	asr	x0, x0, #3
  4072e8:	mul	x0, x0, x23
  4072ec:	cmp	x0, w28, uxtw
  4072f0:	b.ls	407484 <ferror@plt+0x4754>  // b.plast
  4072f4:	mov	x1, #0x38                  	// #56
  4072f8:	mov	x0, #0x1                   	// #1
  4072fc:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  407300:	add	x1, x22, x22, lsl #1
  407304:	add	x22, x22, x1, lsl #2
  407308:	lsl	x22, x22, #3
  40730c:	ldr	x1, [sp, #208]
  407310:	ldr	x1, [x1, #32]
  407314:	add	x1, x1, x22
  407318:	str	x1, [x0, #8]
  40731c:	str	x21, [x0]
  407320:	str	xzr, [x0, #16]
  407324:	ldrb	w1, [x0, #32]
  407328:	and	w1, w1, #0xfe
  40732c:	bfi	w1, w25, #1, #1
  407330:	ubfx	x2, x25, #1, #1
  407334:	bfi	w1, w2, #2, #1
  407338:	ubfx	x25, x25, #2, #1
  40733c:	bfi	w1, w25, #3, #1
  407340:	strb	w1, [x0, #32]
  407344:	ldr	x1, [x21]
  407348:	str	x1, [x0, #40]
  40734c:	str	x0, [x21]
  407350:	ldr	x1, [x21, #16]
  407354:	add	x1, x1, #0x1
  407358:	str	x1, [x21, #16]
  40735c:	ldr	x3, [sp, #208]
  407360:	ldr	x1, [x3, #32]
  407364:	add	x1, x1, x22
  407368:	ldr	x1, [x1, #8]
  40736c:	str	x1, [x0, #48]
  407370:	ldr	x1, [x3, #32]
  407374:	add	x1, x1, x22
  407378:	str	x0, [x1, #8]
  40737c:	ldr	x1, [x3, #32]
  407380:	add	x1, x1, x22
  407384:	ldr	x2, [x1, #24]
  407388:	add	x2, x2, #0x1
  40738c:	str	x2, [x1, #24]
  407390:	ldrb	w1, [x0, #32]
  407394:	tbz	w1, #2, 4072b0 <ferror@plt+0x4580>
  407398:	ldr	w1, [sp, #104]
  40739c:	cbz	w1, 407290 <ferror@plt+0x4560>
  4073a0:	ldr	x1, [x3, #32]
  4073a4:	ldr	x2, [sp, #120]
  4073a8:	add	x1, x1, x2
  4073ac:	ldrb	w2, [x1, #48]
  4073b0:	orr	w2, w2, #0x10
  4073b4:	strb	w2, [x1, #48]
  4073b8:	ldrb	w1, [x0, #32]
  4073bc:	orr	w1, w1, #0x20
  4073c0:	strb	w1, [x0, #32]
  4073c4:	mov	w1, #0x1                   	// #1
  4073c8:	str	w1, [sp, #112]
  4073cc:	b	4072b0 <ferror@plt+0x4580>
  4073d0:	str	xzr, [sp, #416]
  4073d4:	ldr	x1, [x3, #72]
  4073d8:	ldr	x0, [x3, #80]
  4073dc:	cmp	x1, x0
  4073e0:	b.eq	4073f8 <ferror@plt+0x46c8>  // b.none
  4073e4:	str	xzr, [x1]
  4073e8:	ldr	x0, [x3, #72]
  4073ec:	add	x0, x0, #0x8
  4073f0:	str	x0, [x3, #72]
  4073f4:	b	4072b8 <ferror@plt+0x4588>
  4073f8:	add	x2, sp, #0x1a0
  4073fc:	add	x0, x3, #0x40
  407400:	bl	40b848 <ferror@plt+0x8b18>
  407404:	b	4072b8 <ferror@plt+0x4588>
  407408:	ldr	w0, [sp, #112]
  40740c:	cbz	w0, 4075d0 <ferror@plt+0x48a0>
  407410:	ldr	x0, [sp, #128]
  407414:	ldr	x1, [sp, #120]
  407418:	ldr	x0, [x0, x1]
  40741c:	ldr	x2, [sp, #208]
  407420:	b	407428 <ferror@plt+0x46f8>
  407424:	ldr	x0, [x0, #40]
  407428:	cbz	x0, 4075d0 <ferror@plt+0x48a0>
  40742c:	ldrb	w1, [x0, #32]
  407430:	tst	w1, #0xc
  407434:	b.ne	407424 <ferror@plt+0x46f4>  // b.any
  407438:	ldrb	w1, [x0, #32]
  40743c:	orr	w1, w1, #0x10
  407440:	strb	w1, [x0, #32]
  407444:	ldrb	w1, [x2, #28]
  407448:	orr	w1, w1, #0x1
  40744c:	strb	w1, [x2, #28]
  407450:	b	407424 <ferror@plt+0x46f4>
  407454:	bl	403bf0 <ferror@plt+0xec0>
  407458:	ldr	x3, [sp, #208]
  40745c:	mov	w1, w0
  407460:	ldr	x2, [x3, #32]
  407464:	mov	x21, #0x68                  	// #104
  407468:	madd	x21, x1, x21, x2
  40746c:	ldr	x0, [x3, #40]
  407470:	sub	x0, x0, x2
  407474:	asr	x0, x0, #3
  407478:	mul	x0, x0, x23
  40747c:	cmp	x1, x0
  407480:	b.cc	40755c <ferror@plt+0x482c>  // b.lo, b.ul, b.last
  407484:	ldr	x2, [x19, #248]
  407488:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40748c:	add	x1, x1, #0x410
  407490:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407494:	ldr	x0, [x0, #1424]
  407498:	bl	40eeec <ferror@plt+0xc1bc>
  40749c:	bl	403d80 <ferror@plt+0x1050>
  4074a0:	ldr	x1, [x19, #360]
  4074a4:	ldr	x0, [x19, #368]
  4074a8:	cmp	x1, x0
  4074ac:	b.eq	407694 <ferror@plt+0x4964>  // b.none
  4074b0:	mov	w1, #0x1                   	// #1
  4074b4:	ldr	x0, [x19, #264]
  4074b8:	bl	40392c <ferror@plt+0xbfc>
  4074bc:	cbz	w0, 4076b0 <ferror@plt+0x4980>
  4074c0:	bl	403bf0 <ferror@plt+0xec0>
  4074c4:	mov	w1, #0x6461                	// #25697
  4074c8:	movk	w1, #0x6763, lsl #16
  4074cc:	bl	40329c <ferror@plt+0x56c>
  4074d0:	cbz	w0, 4076d4 <ferror@plt+0x49a4>
  4074d4:	bl	403bf0 <ferror@plt+0xec0>
  4074d8:	mov	w1, #0x322a                	// #12842
  4074dc:	movk	w1, #0x4139, lsl #16
  4074e0:	cmp	w0, w1
  4074e4:	b.ne	4076f0 <ferror@plt+0x49c0>  // b.any
  4074e8:	bl	403bf0 <ferror@plt+0xec0>
  4074ec:	ldr	w1, [x19, #456]
  4074f0:	mov	x22, #0x0                   	// #0
  4074f4:	cmp	w0, w1
  4074f8:	b.ne	407750 <ferror@plt+0x4a20>  // b.any
  4074fc:	mov	w26, #0xa1000000            	// #-1593835520
  407500:	mov	w27, #0x1000000             	// #16777216
  407504:	add	x28, x19, #0x188
  407508:	b	4077b0 <ferror@plt+0x4a80>
  40750c:	ldr	x3, [x21, #64]
  407510:	ldur	x1, [x3, #-16]
  407514:	ldur	x2, [x3, #-8]
  407518:	cmp	x1, x2
  40751c:	b.eq	407534 <ferror@plt+0x4804>  // b.none
  407520:	str	w0, [x1]
  407524:	ldur	x0, [x3, #-16]
  407528:	add	x0, x0, #0x4
  40752c:	stur	x0, [x3, #-16]
  407530:	b	40755c <ferror@plt+0x482c>
  407534:	add	x2, sp, #0xc0
  407538:	sub	x0, x3, #0x18
  40753c:	bl	40a754 <ferror@plt+0x7a24>
  407540:	b	40755c <ferror@plt+0x482c>
  407544:	add	x2, sp, #0xf8
  407548:	add	x0, x21, #0x38
  40754c:	bl	40b96c <ferror@plt+0x8c3c>
  407550:	ldr	x0, [sp, #256]
  407554:	cbz	x0, 40755c <ferror@plt+0x482c>
  407558:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40755c:	bl	403bf0 <ferror@plt+0xec0>
  407560:	str	w0, [sp, #192]
  407564:	cbnz	w0, 40750c <ferror@plt+0x47dc>
  407568:	bl	403c40 <ferror@plt+0xf10>
  40756c:	cbz	x0, 4075d0 <ferror@plt+0x48a0>
  407570:	bl	4066ac <ferror@plt+0x397c>
  407574:	str	w0, [sp, #248]
  407578:	str	xzr, [sp, #256]
  40757c:	str	xzr, [sp, #264]
  407580:	str	xzr, [sp, #272]
  407584:	ldr	x1, [x21, #64]
  407588:	ldr	x0, [x21, #72]
  40758c:	cmp	x1, x0
  407590:	b.eq	407544 <ferror@plt+0x4814>  // b.none
  407594:	mov	x0, x1
  407598:	ldr	w2, [sp, #248]
  40759c:	str	w2, [x0], #8
  4075a0:	ldr	x2, [sp, #256]
  4075a4:	str	x2, [x1, #8]
  4075a8:	ldr	x1, [sp, #264]
  4075ac:	str	x1, [x0, #8]
  4075b0:	ldr	x1, [sp, #272]
  4075b4:	str	x1, [x0, #16]
  4075b8:	ldr	x0, [x21, #64]
  4075bc:	add	x0, x0, #0x20
  4075c0:	str	x0, [x21, #64]
  4075c4:	b	40755c <ferror@plt+0x482c>
  4075c8:	str	xzr, [sp, #208]
  4075cc:	mov	w24, #0x0                   	// #0
  4075d0:	mov	w1, w26
  4075d4:	mov	w0, w20
  4075d8:	bl	403ce0 <ferror@plt+0xfb0>
  4075dc:	ldr	x0, [x19]
  4075e0:	cbz	x0, 407484 <ferror@plt+0x4754>
  4075e4:	ldr	w0, [x19, #24]
  4075e8:	cbnz	w0, 407484 <ferror@plt+0x4754>
  4075ec:	bl	403bf0 <ferror@plt+0xec0>
  4075f0:	mov	w22, w0
  4075f4:	cbz	w0, 40749c <ferror@plt+0x476c>
  4075f8:	bl	403bf0 <ferror@plt+0xec0>
  4075fc:	mov	w26, w0
  407600:	ldr	w0, [x19, #28]
  407604:	cmp	w0, #0x0
  407608:	b.le	406f18 <ferror@plt+0x41e8>
  40760c:	ldr	w20, [x19, #8]
  407610:	ldr	w0, [x19, #12]
  407614:	add	w20, w20, w0
  407618:	mov	w0, #0x1000000             	// #16777216
  40761c:	cmp	w22, w0
  407620:	b.eq	406f30 <ferror@plt+0x4200>  // b.none
  407624:	ldr	x21, [sp, #208]
  407628:	cmp	x21, #0x0
  40762c:	cset	w0, ne  // ne = any
  407630:	cmp	w0, #0x0
  407634:	mov	w1, #0x1410000             	// #21037056
  407638:	ccmp	w22, w1, #0x0, ne  // ne = any
  40763c:	b.eq	407108 <ferror@plt+0x43d8>  // b.none
  407640:	cmp	w0, #0x0
  407644:	mov	w1, #0x1430000             	// #21168128
  407648:	ccmp	w22, w1, #0x0, ne  // ne = any
  40764c:	b.eq	407220 <ferror@plt+0x44f0>  // b.none
  407650:	cmp	w0, #0x0
  407654:	mov	w0, #0x1450000             	// #21299200
  407658:	ccmp	w22, w0, #0x0, ne  // ne = any
  40765c:	b.eq	407454 <ferror@plt+0x4724>  // b.none
  407660:	cbz	w24, 4075d0 <ferror@plt+0x48a0>
  407664:	sub	w1, w24, #0x1
  407668:	eor	w1, w1, w24
  40766c:	sub	w0, w22, #0x1
  407670:	eor	w0, w0, w22
  407674:	cmp	w0, w1, lsr #8
  407678:	b.ne	4075c8 <ferror@plt+0x4898>  // b.any
  40767c:	neg	w1, w24
  407680:	eor	w1, w1, w24
  407684:	eor	w22, w22, w24
  407688:	tst	w1, w22
  40768c:	b.eq	4075d0 <ferror@plt+0x48a0>  // b.none
  407690:	b	4075c8 <ferror@plt+0x4898>
  407694:	ldr	x2, [x19, #248]
  407698:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40769c:	add	x1, x1, #0x520
  4076a0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4076a4:	ldr	x0, [x0, #1424]
  4076a8:	bl	40eeec <ferror@plt+0xc1bc>
  4076ac:	b	4074b0 <ferror@plt+0x4780>
  4076b0:	ldr	x2, [x19, #264]
  4076b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4076b8:	add	x1, x1, #0x538
  4076bc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4076c0:	ldr	x0, [x0, #1424]
  4076c4:	bl	40eeec <ferror@plt+0xc1bc>
  4076c8:	mov	w0, #0x1                   	// #1
  4076cc:	str	w0, [x19, #256]
  4076d0:	b	406dc0 <ferror@plt+0x4090>
  4076d4:	ldr	x2, [x19, #264]
  4076d8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4076dc:	add	x1, x1, #0x570
  4076e0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4076e4:	ldr	x0, [x0, #1424]
  4076e8:	bl	40eeec <ferror@plt+0xc1bc>
  4076ec:	b	409738 <ferror@plt+0x6a08>
  4076f0:	lsr	w1, w0, #24
  4076f4:	strb	w1, [sp, #208]
  4076f8:	lsr	w1, w0, #16
  4076fc:	strb	w1, [sp, #209]
  407700:	lsr	w1, w0, #8
  407704:	strb	w1, [sp, #210]
  407708:	strb	w0, [sp, #211]
  40770c:	mov	w0, #0x41                  	// #65
  407710:	strb	w0, [sp, #248]
  407714:	mov	w0, #0x39                  	// #57
  407718:	strb	w0, [sp, #249]
  40771c:	mov	w0, #0x32                  	// #50
  407720:	strb	w0, [sp, #250]
  407724:	mov	w0, #0x2a                  	// #42
  407728:	strb	w0, [sp, #251]
  40772c:	add	x4, sp, #0xf8
  407730:	add	x3, sp, #0xd0
  407734:	ldr	x2, [x19, #264]
  407738:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40773c:	add	x1, x1, #0x590
  407740:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407744:	ldr	x0, [x0, #1424]
  407748:	bl	40eeec <ferror@plt+0xc1bc>
  40774c:	b	4074e8 <ferror@plt+0x47b8>
  407750:	ldr	x2, [x19, #264]
  407754:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407758:	add	x1, x1, #0x5c0
  40775c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407760:	ldr	x0, [x0, #1424]
  407764:	bl	40eeec <ferror@plt+0xc1bc>
  407768:	b	409738 <ferror@plt+0x6a08>
  40776c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407770:	add	x2, x2, #0x4e8
  407774:	mov	w1, #0x4a                  	// #74
  407778:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40777c:	add	x0, x0, #0xdc0
  407780:	bl	4102b4 <ferror@plt+0xd584>
  407784:	bl	403bf0 <ferror@plt+0xec0>
  407788:	mov	w24, w0
  40778c:	bl	403bf0 <ferror@plt+0xec0>
  407790:	str	w24, [x19, #272]
  407794:	mov	w1, w20
  407798:	mov	w0, w21
  40779c:	bl	403ce0 <ferror@plt+0xfb0>
  4077a0:	ldr	x0, [x19]
  4077a4:	cbz	x0, 409720 <ferror@plt+0x69f0>
  4077a8:	ldr	w2, [x19, #24]
  4077ac:	cbnz	w2, 407944 <ferror@plt+0x4c14>
  4077b0:	bl	403bf0 <ferror@plt+0xec0>
  4077b4:	mov	w24, w0
  4077b8:	cbz	w0, 407968 <ferror@plt+0x4c38>
  4077bc:	bl	403bf0 <ferror@plt+0xec0>
  4077c0:	mov	w20, w0
  4077c4:	ldr	w0, [x19, #28]
  4077c8:	cmp	w0, #0x0
  4077cc:	b.le	40776c <ferror@plt+0x4a3c>
  4077d0:	ldr	w21, [x19, #8]
  4077d4:	ldr	w0, [x19, #12]
  4077d8:	add	w21, w21, w0
  4077dc:	cmp	w24, w26
  4077e0:	b.eq	407784 <ferror@plt+0x4a54>  // b.none
  4077e4:	cmp	w24, w27
  4077e8:	cset	w0, eq  // eq = none
  4077ec:	cmp	w20, #0x0
  4077f0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4077f4:	b.ne	407794 <ferror@plt+0x4a64>  // b.any
  4077f8:	cmp	w0, #0x0
  4077fc:	ccmp	w20, #0x3, #0x0, ne  // ne = any
  407800:	b.eq	407874 <ferror@plt+0x4b44>  // b.none
  407804:	cmp	x22, #0x0
  407808:	mov	w0, #0x1a10000             	// #27328512
  40780c:	ccmp	w24, w0, #0x0, ne  // ne = any
  407810:	b.ne	407794 <ferror@plt+0x4a64>  // b.any
  407814:	ldr	x0, [x22, #72]
  407818:	ldr	x1, [x22, #64]
  40781c:	sub	x0, x0, x1
  407820:	asr	x0, x0, #3
  407824:	lsl	x1, x0, #1
  407828:	cmp	x1, w20, uxtw
  40782c:	b.ne	4078e4 <ferror@plt+0x4bb4>  // b.any
  407830:	cbz	x0, 407794 <ferror@plt+0x4a64>
  407834:	mov	x25, #0x0                   	// #0
  407838:	mov	w24, #0x0                   	// #0
  40783c:	bl	403c68 <ferror@plt+0xf38>
  407840:	ldr	x2, [x22, #64]
  407844:	ldr	x1, [x2, x25, lsl #3]
  407848:	add	x1, x1, x0
  40784c:	str	x1, [x2, x25, lsl #3]
  407850:	add	w24, w24, #0x1
  407854:	mov	w25, w24
  407858:	ldr	x0, [x22, #72]
  40785c:	ldr	x1, [x22, #64]
  407860:	sub	x0, x0, x1
  407864:	asr	x0, x0, #3
  407868:	cmp	x0, w24, uxtw
  40786c:	b.ne	40783c <ferror@plt+0x4b0c>  // b.any
  407870:	b	407794 <ferror@plt+0x4a64>
  407874:	bl	403bf0 <ferror@plt+0xec0>
  407878:	ldr	x1, [x19, #400]
  40787c:	cbz	x1, 409740 <ferror@plt+0x6a10>
  407880:	mov	x3, x28
  407884:	b	407890 <ferror@plt+0x4b60>
  407888:	ldr	x1, [x1, #24]
  40788c:	cbz	x1, 4078a8 <ferror@plt+0x4b78>
  407890:	ldr	w2, [x1, #32]
  407894:	cmp	w0, w2
  407898:	b.hi	407888 <ferror@plt+0x4b58>  // b.pmore
  40789c:	mov	x3, x1
  4078a0:	ldr	x1, [x1, #16]
  4078a4:	b	40788c <ferror@plt+0x4b5c>
  4078a8:	cmp	x3, x28
  4078ac:	b.eq	409740 <ferror@plt+0x6a10>  // b.none
  4078b0:	ldr	w1, [x3, #32]
  4078b4:	cmp	w0, w1
  4078b8:	b.cc	409740 <ferror@plt+0x6a10>  // b.lo, b.ul, b.last
  4078bc:	ldr	x22, [x3, #40]
  4078c0:	cbz	x22, 407794 <ferror@plt+0x4a64>
  4078c4:	bl	403bf0 <ferror@plt+0xec0>
  4078c8:	ldr	w1, [x22, #20]
  4078cc:	cmp	w0, w1
  4078d0:	b.ne	4078e4 <ferror@plt+0x4bb4>  // b.any
  4078d4:	bl	403bf0 <ferror@plt+0xec0>
  4078d8:	ldr	w1, [x22, #24]
  4078dc:	cmp	w0, w1
  4078e0:	b.eq	407794 <ferror@plt+0x4a64>  // b.none
  4078e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4078e8:	ldr	x20, [x0, #1424]
  4078ec:	ldr	x21, [x19, #264]
  4078f0:	ldr	w0, [x19, #88]
  4078f4:	cbnz	w0, 407914 <ferror@plt+0x4be4>
  4078f8:	ldr	x3, [x22]
  4078fc:	mov	x2, x21
  407900:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407904:	add	x1, x1, #0x5e8
  407908:	mov	x0, x20
  40790c:	bl	40eeec <ferror@plt+0xc1bc>
  407910:	b	409738 <ferror@plt+0x6a08>
  407914:	ldr	x0, [x22, #8]
  407918:	cbz	x0, 407924 <ferror@plt+0x4bf4>
  40791c:	ldr	x3, [x22, #8]
  407920:	b	4078fc <ferror@plt+0x4bcc>
  407924:	mov	w1, #0x1                   	// #1
  407928:	ldr	x0, [x22]
  40792c:	bl	4448e8 <ferror@plt+0x41bb8>
  407930:	str	x0, [x22, #8]
  407934:	cbnz	x0, 40791c <ferror@plt+0x4bec>
  407938:	ldr	x0, [x22]
  40793c:	str	x0, [x22, #8]
  407940:	b	40791c <ferror@plt+0x4bec>
  407944:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407948:	ldr	x0, [x0, #1424]
  40794c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407950:	add	x3, x1, #0x410
  407954:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407958:	add	x1, x1, #0x420
  40795c:	cmp	w2, #0x0
  407960:	csel	x1, x1, x3, lt  // lt = tstop
  407964:	b	409730 <ferror@plt+0x6a00>
  407968:	bl	403d80 <ferror@plt+0x1050>
  40796c:	b	406dc0 <ferror@plt+0x4090>
  407970:	add	x0, sp, #0xf8
  407974:	bl	40af04 <ferror@plt+0x81d4>
  407978:	b	409480 <ferror@plt+0x6750>
  40797c:	cmp	x6, #0x0
  407980:	csel	x6, x6, x2, ne  // ne = any
  407984:	ldr	w1, [sp, #284]
  407988:	add	w1, w1, #0x1
  40798c:	str	w1, [sp, #284]
  407990:	add	w0, w0, w5
  407994:	sub	w1, w0, w4
  407998:	cmp	x4, w0, uxtw
  40799c:	csel	w0, w1, w0, ls  // ls = plast
  4079a0:	ubfiz	x3, x0, #4, #32
  4079a4:	add	x2, x7, x3
  4079a8:	ldr	w1, [x2, #4]
  4079ac:	cmn	w1, #0x3
  4079b0:	b.eq	4079d8 <ferror@plt+0x4ca8>  // b.none
  4079b4:	cmn	w1, #0x2
  4079b8:	b.eq	40797c <ferror@plt+0x4c4c>  // b.none
  4079bc:	ldr	w3, [x7, x3]
  4079c0:	cmp	w3, w22
  4079c4:	ccmp	w24, w1, #0x0, eq  // eq = none
  4079c8:	b.ne	407984 <ferror@plt+0x4c54>  // b.any
  4079cc:	ldr	x0, [x21]
  4079d0:	str	x0, [x2, #8]
  4079d4:	b	409544 <ferror@plt+0x6814>
  4079d8:	cbz	x6, 407a00 <ferror@plt+0x4cd0>
  4079dc:	ldr	x0, [sp, #272]
  4079e0:	sub	x0, x0, #0x1
  4079e4:	str	x0, [sp, #272]
  4079e8:	mov	w0, #0xfffffffd            	// #-3
  4079ec:	str	w0, [x6, #4]
  4079f0:	mov	x2, x6
  4079f4:	str	w22, [x2]
  4079f8:	str	w24, [x2, #4]
  4079fc:	b	4079cc <ferror@plt+0x4c9c>
  407a00:	ldr	x1, [sp, #264]
  407a04:	add	x1, x1, #0x1
  407a08:	str	x1, [sp, #264]
  407a0c:	ubfiz	x0, x0, #4, #32
  407a10:	add	x2, x7, x0
  407a14:	ldr	w0, [x2, #4]
  407a18:	cmn	w0, #0x3
  407a1c:	b.ne	4079cc <ferror@plt+0x4c9c>  // b.any
  407a20:	b	4079f4 <ferror@plt+0x4cc4>
  407a24:	mov	w3, #0x0                   	// #0
  407a28:	adrp	x2, 409000 <ferror@plt+0x62d0>
  407a2c:	add	x2, x2, #0x78c
  407a30:	mov	x1, x21
  407a34:	ldr	x0, [x19, #360]
  407a38:	bl	40bcd4 <ferror@plt+0x8fa4>
  407a3c:	mov	x22, x0
  407a40:	cmp	x21, x0
  407a44:	b.eq	407a54 <ferror@plt+0x4d24>  // b.none
  407a48:	add	x20, x0, #0x8
  407a4c:	cmp	x21, x20
  407a50:	b.ne	407a8c <ferror@plt+0x4d5c>  // b.any
  407a54:	ldr	x0, [x19, #368]
  407a58:	cmp	x0, x22
  407a5c:	b.eq	407a64 <ferror@plt+0x4d34>  // b.none
  407a60:	str	x22, [x19, #368]
  407a64:	ldr	x27, [x19, #360]
  407a68:	ldr	x0, [x19, #368]
  407a6c:	cmp	x27, x0
  407a70:	b.eq	408400 <ferror@plt+0x56d0>  // b.none
  407a74:	mov	w0, #0x1                   	// #1
  407a78:	str	w0, [sp, #112]
  407a7c:	b	4083a4 <ferror@plt+0x5674>
  407a80:	add	x20, x20, #0x8
  407a84:	cmp	x21, x20
  407a88:	b.eq	407a54 <ferror@plt+0x4d24>  // b.none
  407a8c:	ldr	x24, [x20]
  407a90:	mov	x0, x24
  407a94:	bl	40978c <ferror@plt+0x6a5c>
  407a98:	and	w0, w0, #0xff
  407a9c:	cbnz	w0, 407a80 <ferror@plt+0x4d50>
  407aa0:	str	x24, [x22], #8
  407aa4:	b	407a80 <ferror@plt+0x4d50>
  407aa8:	str	w2, [x3]
  407aac:	add	x22, x22, #0x4
  407ab0:	cmp	x26, x22
  407ab4:	b.eq	407af8 <ferror@plt+0x4dc8>  // b.none
  407ab8:	mov	x3, x22
  407abc:	mov	x0, x22
  407ac0:	ldr	w2, [x0], #-4
  407ac4:	ldur	w1, [x22, #-4]
  407ac8:	cmp	w1, w2
  407acc:	b.ls	407aa8 <ferror@plt+0x4d78>  // b.plast
  407ad0:	str	w1, [x0, #4]
  407ad4:	mov	x3, x0
  407ad8:	ldr	w1, [x0, #-4]!
  407adc:	cmp	w2, w1
  407ae0:	b.cc	407ad0 <ferror@plt+0x4da0>  // b.lo, b.ul, b.last
  407ae4:	b	407aa8 <ferror@plt+0x4d78>
  407ae8:	mov	w2, #0x0                   	// #0
  407aec:	mov	x1, x26
  407af0:	mov	x0, x25
  407af4:	bl	40bdf4 <ferror@plt+0x90c4>
  407af8:	ldr	x1, [x21, #56]
  407afc:	add	x2, x1, x24
  407b00:	ldr	x0, [x2, #16]
  407b04:	ldr	x2, [x2, #8]
  407b08:	cmp	x2, x0
  407b0c:	b.eq	407b40 <ferror@plt+0x4e10>  // b.none
  407b10:	ldr	w22, [x1, x24]
  407b14:	add	x22, x22, x22, lsl #3
  407b18:	ldr	x1, [x19, #320]
  407b1c:	add	x22, x1, x22, lsl #4
  407b20:	ldur	w26, [x0, #-4]
  407b24:	ldr	x25, [x22, #32]
  407b28:	ldr	x0, [x22, #24]
  407b2c:	sub	x2, x25, x0
  407b30:	asr	x1, x2, #6
  407b34:	mov	w3, w26
  407b38:	cmp	x3, x2, asr #6
  407b3c:	b.cs	407bc8 <ferror@plt+0x4e98>  // b.hs, b.nlast
  407b40:	add	w28, w28, #0x1
  407b44:	mov	w24, w28
  407b48:	ldr	x0, [x21, #56]
  407b4c:	ldr	x1, [x21, #64]
  407b50:	sub	x1, x1, x0
  407b54:	asr	x1, x1, #5
  407b58:	cmp	x1, w28, uxtw
  407b5c:	b.ls	407c2c <ferror@plt+0x4efc>  // b.plast
  407b60:	lsl	x24, x24, #5
  407b64:	add	x0, x0, x24
  407b68:	ldr	x25, [x0, #8]
  407b6c:	ldr	x26, [x0, #16]
  407b70:	cmp	x25, x26
  407b74:	b.eq	407af8 <ferror@plt+0x4dc8>  // b.none
  407b78:	sub	x22, x26, x25
  407b7c:	asr	x2, x22, #2
  407b80:	clz	x2, x2
  407b84:	mov	w0, #0x3f                  	// #63
  407b88:	sub	w2, w0, w2
  407b8c:	mov	w3, #0x0                   	// #0
  407b90:	sbfiz	x2, x2, #1, #32
  407b94:	mov	x1, x26
  407b98:	mov	x0, x25
  407b9c:	bl	40c7ec <ferror@plt+0x9abc>
  407ba0:	cmp	x22, #0x40
  407ba4:	b.le	407ae8 <ferror@plt+0x4db8>
  407ba8:	add	x22, x25, #0x40
  407bac:	mov	w2, #0x0                   	// #0
  407bb0:	mov	x1, x22
  407bb4:	mov	x0, x25
  407bb8:	bl	40bdf4 <ferror@plt+0x90c4>
  407bbc:	cmp	x26, x22
  407bc0:	b.ne	407ab8 <ferror@plt+0x4d88>  // b.any
  407bc4:	b	407af8 <ferror@plt+0x4dc8>
  407bc8:	add	w26, w26, #0x1
  407bcc:	cmp	x1, x26
  407bd0:	b.cc	407bec <ferror@plt+0x4ebc>  // b.lo, b.ul, b.last
  407bd4:	b.ls	407b40 <ferror@plt+0x4e10>  // b.plast
  407bd8:	add	x26, x0, x26, lsl #6
  407bdc:	cmp	x25, x26
  407be0:	b.eq	407b40 <ferror@plt+0x4e10>  // b.none
  407be4:	mov	x24, x26
  407be8:	b	407c08 <ferror@plt+0x4ed8>
  407bec:	sub	x1, x26, x1
  407bf0:	add	x0, x22, #0x18
  407bf4:	bl	409d28 <ferror@plt+0x6ff8>
  407bf8:	b	407b40 <ferror@plt+0x4e10>
  407bfc:	add	x24, x24, #0x40
  407c00:	cmp	x25, x24
  407c04:	b.eq	407c24 <ferror@plt+0x4ef4>  // b.none
  407c08:	ldr	x0, [x24, #32]
  407c0c:	cbz	x0, 407c14 <ferror@plt+0x4ee4>
  407c10:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  407c14:	ldr	x0, [x24, #8]
  407c18:	cbz	x0, 407bfc <ferror@plt+0x4ecc>
  407c1c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  407c20:	b	407bfc <ferror@plt+0x4ecc>
  407c24:	str	x26, [x22, #32]
  407c28:	b	407b40 <ferror@plt+0x4e10>
  407c2c:	ldr	w0, [sp, #104]
  407c30:	add	w2, w0, #0x1
  407c34:	str	w2, [sp, #104]
  407c38:	mov	w1, w2
  407c3c:	ldr	x21, [x20, #32]
  407c40:	ldr	x0, [x20, #40]
  407c44:	sub	x0, x0, x21
  407c48:	asr	x0, x0, #3
  407c4c:	mul	x0, x0, x23
  407c50:	cmp	x0, w2, uxtw
  407c54:	b.eq	407c80 <ferror@plt+0x4f50>  // b.none
  407c58:	add	x0, x1, x1, lsl #1
  407c5c:	add	x1, x1, x0, lsl #2
  407c60:	add	x21, x21, x1, lsl #3
  407c64:	ldr	x0, [x21, #56]
  407c68:	ldr	x1, [x21, #64]
  407c6c:	cmp	x0, x1
  407c70:	b.eq	407c2c <ferror@plt+0x4efc>  // b.none
  407c74:	mov	x24, #0x0                   	// #0
  407c78:	mov	w28, #0x0                   	// #0
  407c7c:	b	407b60 <ferror@plt+0x4e30>
  407c80:	ldrb	w0, [x20, #28]
  407c84:	tbnz	w0, #2, 407cc0 <ferror@plt+0x4f90>
  407c88:	ldr	x22, [x20, #64]
  407c8c:	ldr	x0, [x20, #40]
  407c90:	ldr	x1, [x20, #32]
  407c94:	sub	x0, x0, x1
  407c98:	asr	x0, x0, #3
  407c9c:	mul	x0, x0, x23
  407ca0:	sub	w21, w0, #0x1
  407ca4:	cbz	w0, 407dbc <ferror@plt+0x508c>
  407ca8:	mov	w0, w21
  407cac:	add	x21, x0, w21, uxtw #1
  407cb0:	add	x21, x0, x21, lsl #2
  407cb4:	lsl	x21, x21, #3
  407cb8:	mov	x2, #0x0                   	// #0
  407cbc:	b	407da4 <ferror@plt+0x5074>
  407cc0:	ldr	w24, [x20, #96]
  407cc4:	add	w24, w24, #0x1
  407cc8:	ldr	w1, [x20, #88]
  407ccc:	sub	w24, w24, w1
  407cd0:	ldr	x22, [x20, #120]
  407cd4:	ldr	x2, [x20, #112]
  407cd8:	sub	x0, x22, x2
  407cdc:	asr	x1, x0, #6
  407ce0:	cmp	x24, x0, asr #6
  407ce4:	b.hi	407d04 <ferror@plt+0x4fd4>  // b.pmore
  407ce8:	cmp	x24, x1
  407cec:	b.cs	407c88 <ferror@plt+0x4f58>  // b.hs, b.nlast
  407cf0:	add	x24, x2, x24, lsl #6
  407cf4:	cmp	x22, x24
  407cf8:	b.eq	407c88 <ferror@plt+0x4f58>  // b.none
  407cfc:	mov	x21, x24
  407d00:	b	407d24 <ferror@plt+0x4ff4>
  407d04:	sub	x1, x24, x1
  407d08:	add	x0, x20, #0x70
  407d0c:	bl	409d28 <ferror@plt+0x6ff8>
  407d10:	b	407c88 <ferror@plt+0x4f58>
  407d14:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  407d18:	add	x21, x21, #0x40
  407d1c:	cmp	x22, x21
  407d20:	b.eq	407d3c <ferror@plt+0x500c>  // b.none
  407d24:	ldr	x0, [x21, #32]
  407d28:	cbz	x0, 407d30 <ferror@plt+0x5000>
  407d2c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  407d30:	ldr	x0, [x21, #8]
  407d34:	cbnz	x0, 407d14 <ferror@plt+0x4fe4>
  407d38:	b	407d18 <ferror@plt+0x4fe8>
  407d3c:	str	x24, [x20, #120]
  407d40:	b	407c88 <ferror@plt+0x4f58>
  407d44:	mov	x0, x3
  407d48:	ldr	x3, [x0, #40]
  407d4c:	str	x1, [x0, #40]
  407d50:	mov	x1, x0
  407d54:	cbnz	x3, 407d44 <ferror@plt+0x5014>
  407d58:	ldr	x1, [x20, #32]
  407d5c:	str	x0, [x1, x21]
  407d60:	ldr	x0, [x20, #32]
  407d64:	add	x0, x0, x21
  407d68:	ldr	x0, [x0, #8]
  407d6c:	cbz	x0, 407d8c <ferror@plt+0x505c>
  407d70:	mov	x1, x2
  407d74:	b	407d7c <ferror@plt+0x504c>
  407d78:	mov	x0, x3
  407d7c:	ldr	x3, [x0, #48]
  407d80:	str	x1, [x0, #48]
  407d84:	mov	x1, x0
  407d88:	cbnz	x3, 407d78 <ferror@plt+0x5048>
  407d8c:	ldr	x1, [x20, #32]
  407d90:	add	x1, x1, x21
  407d94:	str	x0, [x1, #8]
  407d98:	sub	x21, x21, #0x68
  407d9c:	cmn	x21, #0x68
  407da0:	b.eq	407db8 <ferror@plt+0x5088>  // b.none
  407da4:	ldr	x0, [x20, #32]
  407da8:	ldr	x0, [x0, x21]
  407dac:	cbz	x0, 407d58 <ferror@plt+0x5028>
  407db0:	mov	x1, x2
  407db4:	b	407d48 <ferror@plt+0x5018>
  407db8:	mov	w21, #0xffffffff            	// #-1
  407dbc:	ldr	x1, [x20, #32]
  407dc0:	ldr	x0, [x20, #40]
  407dc4:	sub	x0, x0, x1
  407dc8:	asr	x0, x0, #3
  407dcc:	mul	x0, x0, x23
  407dd0:	cmp	x0, #0x1
  407dd4:	b.ls	407e48 <ferror@plt+0x5118>  // b.plast
  407dd8:	ldr	x0, [x1, #24]
  407ddc:	cbz	x0, 407efc <ferror@plt+0x51cc>
  407de0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407de4:	ldr	x24, [x0, #1424]
  407de8:	ldr	x25, [x19, #248]
  407dec:	ldr	w0, [x19, #88]
  407df0:	cbnz	w0, 407ecc <ferror@plt+0x519c>
  407df4:	ldr	x3, [x20]
  407df8:	mov	x2, x25
  407dfc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407e00:	add	x1, x1, #0x630
  407e04:	mov	x0, x24
  407e08:	bl	40eeec <ferror@plt+0xc1bc>
  407e0c:	ldr	x0, [x20, #32]
  407e10:	ldr	x1, [x0, #120]
  407e14:	cbz	x1, 407f38 <ferror@plt+0x5208>
  407e18:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407e1c:	ldr	x24, [x0, #1424]
  407e20:	ldr	x25, [x19, #248]
  407e24:	ldr	w0, [x19, #88]
  407e28:	cbnz	w0, 407f08 <ferror@plt+0x51d8>
  407e2c:	ldr	x3, [x20]
  407e30:	mov	x2, x25
  407e34:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407e38:	add	x1, x1, #0x658
  407e3c:	mov	x0, x24
  407e40:	bl	40eeec <ferror@plt+0xc1bc>
  407e44:	b	407e74 <ferror@plt+0x5144>
  407e48:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  407e4c:	ldr	x24, [x0, #1424]
  407e50:	ldr	x25, [x19, #248]
  407e54:	ldr	w0, [x19, #88]
  407e58:	cbnz	w0, 407e9c <ferror@plt+0x516c>
  407e5c:	ldr	x3, [x20]
  407e60:	mov	x2, x25
  407e64:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  407e68:	add	x1, x1, #0x608
  407e6c:	mov	x0, x24
  407e70:	bl	40eeec <ferror@plt+0xc1bc>
  407e74:	ldr	x2, [x20, #32]
  407e78:	ldr	x0, [x20, #40]
  407e7c:	cmp	x0, x2
  407e80:	b.eq	408160 <ferror@plt+0x5430>  // b.none
  407e84:	mov	x0, #0x0                   	// #0
  407e88:	mov	x3, #0x0                   	// #0
  407e8c:	mov	w4, #0x0                   	// #0
  407e90:	mov	x7, #0x0                   	// #0
  407e94:	mov	w6, #0x0                   	// #0
  407e98:	b	407fe8 <ferror@plt+0x52b8>
  407e9c:	ldr	x0, [x20, #8]
  407ea0:	cbz	x0, 407eac <ferror@plt+0x517c>
  407ea4:	ldr	x3, [x20, #8]
  407ea8:	b	407e60 <ferror@plt+0x5130>
  407eac:	mov	w1, #0x1                   	// #1
  407eb0:	ldr	x0, [x20]
  407eb4:	bl	4448e8 <ferror@plt+0x41bb8>
  407eb8:	str	x0, [x20, #8]
  407ebc:	cbnz	x0, 407ea4 <ferror@plt+0x5174>
  407ec0:	ldr	x0, [x20]
  407ec4:	str	x0, [x20, #8]
  407ec8:	b	407ea4 <ferror@plt+0x5174>
  407ecc:	ldr	x0, [x20, #8]
  407ed0:	cbz	x0, 407edc <ferror@plt+0x51ac>
  407ed4:	ldr	x3, [x20, #8]
  407ed8:	b	407df8 <ferror@plt+0x50c8>
  407edc:	mov	w1, #0x1                   	// #1
  407ee0:	ldr	x0, [x20]
  407ee4:	bl	4448e8 <ferror@plt+0x41bb8>
  407ee8:	str	x0, [x20, #8]
  407eec:	cbnz	x0, 407ed4 <ferror@plt+0x51a4>
  407ef0:	ldr	x0, [x20]
  407ef4:	str	x0, [x20, #8]
  407ef8:	b	407ed4 <ferror@plt+0x51a4>
  407efc:	mov	x0, #0xffffffff            	// #4294967295
  407f00:	str	x0, [x1, #24]
  407f04:	b	407e0c <ferror@plt+0x50dc>
  407f08:	ldr	x0, [x20, #8]
  407f0c:	cbz	x0, 407f18 <ferror@plt+0x51e8>
  407f10:	ldr	x3, [x20, #8]
  407f14:	b	407e30 <ferror@plt+0x5100>
  407f18:	mov	w1, #0x1                   	// #1
  407f1c:	ldr	x0, [x20]
  407f20:	bl	4448e8 <ferror@plt+0x41bb8>
  407f24:	str	x0, [x20, #8]
  407f28:	cbnz	x0, 407f10 <ferror@plt+0x51e0>
  407f2c:	ldr	x0, [x20]
  407f30:	str	x0, [x20, #8]
  407f34:	b	407f10 <ferror@plt+0x51e0>
  407f38:	mov	x1, #0xffffffff            	// #4294967295
  407f3c:	str	x1, [x0, #120]
  407f40:	b	407e74 <ferror@plt+0x5144>
  407f44:	ldr	x9, [x22], #8
  407f48:	str	x9, [x1, #16]
  407f4c:	ldrb	w9, [x1, #32]
  407f50:	orr	w9, w9, #0x1
  407f54:	strb	w9, [x1, #32]
  407f58:	ldr	x9, [x0, #16]
  407f5c:	sub	x9, x9, #0x1
  407f60:	str	x9, [x0, #16]
  407f64:	ldr	x10, [x1, #8]
  407f68:	ldr	x9, [x10, #24]
  407f6c:	sub	x9, x9, #0x1
  407f70:	str	x9, [x10, #24]
  407f74:	cbz	x5, 407f84 <ferror@plt+0x5254>
  407f78:	ldr	x9, [x1, #8]
  407f7c:	cmp	x9, x5
  407f80:	csinc	w3, w3, wzr, cs  // cs = hs, nlast
  407f84:	ldr	x5, [x1, #8]
  407f88:	ldr	x1, [x1, #40]
  407f8c:	cbz	x1, 407fa8 <ferror@plt+0x5278>
  407f90:	ldrb	w9, [x1, #32]
  407f94:	tst	x9, #0x4
  407f98:	cinc	w2, w2, eq  // eq = none
  407f9c:	tbnz	w9, #1, 407f74 <ferror@plt+0x5244>
  407fa0:	cbnz	x22, 407f44 <ferror@plt+0x5214>
  407fa4:	b	407f4c <ferror@plt+0x521c>
  407fa8:	cmp	w2, #0x1
  407fac:	b.eq	408010 <ferror@plt+0x52e0>  // b.none
  407fb0:	cbnz	w3, 408070 <ferror@plt+0x5340>
  407fb4:	ldrb	w1, [x0, #48]
  407fb8:	orr	w1, w1, #0x4
  407fbc:	strb	w1, [x0, #48]
  407fc0:	str	x8, [x0, #96]
  407fc4:	add	w4, w4, #0x1
  407fc8:	mov	w3, w4
  407fcc:	ldr	x2, [x20, #32]
  407fd0:	ldr	x1, [x20, #40]
  407fd4:	sub	x1, x1, x2
  407fd8:	asr	x1, x1, #3
  407fdc:	mul	x1, x1, x23
  407fe0:	cmp	x1, w4, uxtw
  407fe4:	b.ls	4080dc <ferror@plt+0x53ac>  // b.plast
  407fe8:	mov	x8, x0
  407fec:	add	x0, x3, x3, lsl #1
  407ff0:	add	x3, x3, x0, lsl #2
  407ff4:	add	x0, x2, x3, lsl #3
  407ff8:	ldr	x1, [x2, x3, lsl #3]
  407ffc:	cbz	x1, 407fb4 <ferror@plt+0x5284>
  408000:	mov	w3, #0x0                   	// #0
  408004:	mov	x5, x7
  408008:	mov	w2, #0x0                   	// #0
  40800c:	b	407f90 <ferror@plt+0x5260>
  408010:	ldr	x2, [x0]
  408014:	cbnz	x2, 408024 <ferror@plt+0x52f4>
  408018:	b	407fb0 <ferror@plt+0x5280>
  40801c:	ldr	x2, [x2, #40]
  408020:	cbz	x2, 407fb0 <ferror@plt+0x5280>
  408024:	ldrb	w5, [x2, #32]
  408028:	tbnz	w5, #2, 40801c <ferror@plt+0x52ec>
  40802c:	ldrb	w5, [x2, #32]
  408030:	orr	w5, w5, #0xffffff80
  408034:	strb	w5, [x2, #32]
  408038:	ldrb	w5, [x0, #48]
  40803c:	tbz	w5, #4, 40801c <ferror@plt+0x52ec>
  408040:	ldrb	w5, [x2, #32]
  408044:	tbz	w5, #3, 40801c <ferror@plt+0x52ec>
  408048:	ldr	x5, [x2, #8]
  40804c:	ldr	x9, [x5, #8]
  408050:	cmp	x9, x2
  408054:	b.ne	40801c <ferror@plt+0x52ec>  // b.any
  408058:	ldr	x9, [x2, #48]
  40805c:	cbnz	x9, 40801c <ferror@plt+0x52ec>
  408060:	ldrb	w9, [x5, #48]
  408064:	orr	w9, w9, #0x20
  408068:	strb	w9, [x5, #48]
  40806c:	b	40801c <ferror@plt+0x52ec>
  408070:	ldr	x5, [x0]
  408074:	b	40807c <ferror@plt+0x534c>
  408078:	cbz	w10, 4080d4 <ferror@plt+0x53a4>
  40807c:	mov	x2, x1
  408080:	mov	x3, x5
  408084:	mov	w10, w6
  408088:	mov	x9, x2
  40808c:	b	408098 <ferror@plt+0x5368>
  408090:	mov	x9, x3
  408094:	mov	x3, x2
  408098:	ldr	x2, [x3, #40]
  40809c:	cbz	x2, 408078 <ferror@plt+0x5348>
  4080a0:	ldr	x12, [x3, #8]
  4080a4:	ldr	x11, [x2, #8]
  4080a8:	cmp	x12, x11
  4080ac:	b.ls	408090 <ferror@plt+0x5360>  // b.plast
  4080b0:	cbz	x9, 4080cc <ferror@plt+0x539c>
  4080b4:	str	x2, [x9, #40]
  4080b8:	ldr	x9, [x2, #40]
  4080bc:	str	x9, [x3, #40]
  4080c0:	str	x3, [x2, #40]
  4080c4:	ldr	w10, [sp, #112]
  4080c8:	b	408088 <ferror@plt+0x5358>
  4080cc:	mov	x5, x2
  4080d0:	b	4080b8 <ferror@plt+0x5388>
  4080d4:	str	x5, [x0]
  4080d8:	b	407fb4 <ferror@plt+0x5284>
  4080dc:	mov	x4, #0x0                   	// #0
  4080e0:	b	40811c <ferror@plt+0x53ec>
  4080e4:	ldr	x2, [x0]
  4080e8:	cbz	x2, 4080fc <ferror@plt+0x53cc>
  4080ec:	ldr	x3, [x2, #16]
  4080f0:	add	x1, x1, x3
  4080f4:	ldr	x2, [x2, #40]
  4080f8:	cbnz	x2, 4080ec <ferror@plt+0x53bc>
  4080fc:	str	x1, [x0, #40]
  408100:	ldrb	w1, [x0, #48]
  408104:	str	x4, [x0, #96]
  408108:	orr	w1, w1, #0x3
  40810c:	strb	w1, [x0, #48]
  408110:	mov	x4, x0
  408114:	cbz	x5, 409458 <ferror@plt+0x6728>
  408118:	mov	x0, x5
  40811c:	ldr	x5, [x0, #96]
  408120:	ldrb	w1, [x0, #48]
  408124:	and	w1, w1, #0xfffffffb
  408128:	strb	w1, [x0, #48]
  40812c:	ldr	x1, [x0, #16]
  408130:	cbz	x1, 4080e4 <ferror@plt+0x53b4>
  408134:	ldr	x1, [x0, #24]
  408138:	cbnz	x1, 408114 <ferror@plt+0x53e4>
  40813c:	ldr	x2, [x0, #8]
  408140:	cbz	x2, 4080fc <ferror@plt+0x53cc>
  408144:	ldr	x3, [x2, #16]
  408148:	add	x1, x1, x3
  40814c:	ldr	x2, [x2, #48]
  408150:	cbnz	x2, 408144 <ferror@plt+0x5414>
  408154:	b	4080fc <ferror@plt+0x53cc>
  408158:	cbz	x0, 408160 <ferror@plt+0x5430>
  40815c:	cbnz	x0, 40811c <ferror@plt+0x53ec>
  408160:	ldr	x2, [x20, #32]
  408164:	ldr	x0, [x20, #40]
  408168:	sub	x0, x0, x2
  40816c:	asr	x0, x0, #3
  408170:	mul	x0, x0, x23
  408174:	mov	w1, #0x0                   	// #0
  408178:	cmp	x0, w21, uxtw
  40817c:	b.hi	408348 <ferror@plt+0x5618>  // b.pmore
  408180:	b	40838c <ferror@plt+0x565c>
  408184:	ldr	x6, [x1, #40]
  408188:	ldr	x2, [x1]
  40818c:	cbz	x2, 4081b4 <ferror@plt+0x5484>
  408190:	mov	x3, x5
  408194:	ldr	x7, [x2, #16]
  408198:	sub	x6, x6, x7
  40819c:	ldrb	w7, [x2, #32]
  4081a0:	tst	x7, #0x1
  4081a4:	csel	x3, x3, x2, ne  // ne = any
  4081a8:	ldr	x2, [x2, #40]
  4081ac:	cbnz	x2, 408194 <ferror@plt+0x5464>
  4081b0:	mov	x2, x3
  4081b4:	ldr	x3, [x2, #8]
  4081b8:	ldrb	w7, [x2, #32]
  4081bc:	orr	w7, w7, #0x1
  4081c0:	strb	w7, [x2, #32]
  4081c4:	str	x6, [x2, #16]
  4081c8:	ldr	x2, [x1, #16]
  4081cc:	sub	x2, x2, #0x1
  4081d0:	str	x2, [x1, #16]
  4081d4:	ldr	x2, [x3, #24]
  4081d8:	sub	x2, x2, #0x1
  4081dc:	str	x2, [x3, #24]
  4081e0:	ldrb	w6, [x3, #48]
  4081e4:	tbz	w6, #0, 408218 <ferror@plt+0x54e8>
  4081e8:	cmp	x2, #0x1
  4081ec:	b.ne	408280 <ferror@plt+0x5550>  // b.any
  4081f0:	tbnz	w6, #1, 408280 <ferror@plt+0x5550>
  4081f4:	str	x4, [x3, #96]
  4081f8:	ldrb	w2, [x3, #48]
  4081fc:	orr	w2, w2, #0x2
  408200:	strb	w2, [x3, #48]
  408204:	ldr	x2, [x1, #24]
  408208:	cmp	x2, #0x1
  40820c:	b.eq	408238 <ferror@plt+0x5508>  // b.none
  408210:	mov	x4, x3
  408214:	b	408260 <ferror@plt+0x5530>
  408218:	cbnz	x2, 408280 <ferror@plt+0x5550>
  40821c:	tbnz	w6, #2, 408280 <ferror@plt+0x5550>
  408220:	str	x0, [x3, #96]
  408224:	ldrb	w0, [x3, #48]
  408228:	orr	w0, w0, #0x4
  40822c:	strb	w0, [x3, #48]
  408230:	mov	x0, x3
  408234:	b	408280 <ferror@plt+0x5550>
  408238:	mov	x4, x3
  40823c:	b	40828c <ferror@plt+0x555c>
  408240:	cbnz	x1, 40825c <ferror@plt+0x552c>
  408244:	tbnz	w2, #2, 40825c <ferror@plt+0x552c>
  408248:	str	x0, [x3, #96]
  40824c:	ldrb	w0, [x3, #48]
  408250:	orr	w0, w0, #0x4
  408254:	strb	w0, [x3, #48]
  408258:	mov	x0, x3
  40825c:	cbz	x4, 408158 <ferror@plt+0x5428>
  408260:	mov	x1, x4
  408264:	ldr	x4, [x1, #96]
  408268:	ldrb	w2, [x1, #48]
  40826c:	and	w2, w2, #0xfffffffd
  408270:	strb	w2, [x1, #48]
  408274:	ldr	x2, [x1, #16]
  408278:	cmp	x2, #0x1
  40827c:	b.eq	408184 <ferror@plt+0x5454>  // b.none
  408280:	ldr	x2, [x1, #24]
  408284:	cmp	x2, #0x1
  408288:	b.ne	40825c <ferror@plt+0x552c>  // b.any
  40828c:	ldr	x6, [x1, #40]
  408290:	ldr	x2, [x1, #8]
  408294:	cbz	x2, 4082bc <ferror@plt+0x558c>
  408298:	mov	x3, x5
  40829c:	ldr	x7, [x2, #16]
  4082a0:	sub	x6, x6, x7
  4082a4:	ldrb	w7, [x2, #32]
  4082a8:	tst	x7, #0x1
  4082ac:	csel	x3, x3, x2, ne  // ne = any
  4082b0:	ldr	x2, [x2, #48]
  4082b4:	cbnz	x2, 40829c <ferror@plt+0x556c>
  4082b8:	mov	x2, x3
  4082bc:	ldr	x3, [x2]
  4082c0:	ldrb	w7, [x2, #32]
  4082c4:	orr	w7, w7, #0x1
  4082c8:	strb	w7, [x2, #32]
  4082cc:	str	x6, [x2, #16]
  4082d0:	ldr	x2, [x1, #24]
  4082d4:	sub	x2, x2, #0x1
  4082d8:	str	x2, [x1, #24]
  4082dc:	ldr	x1, [x3, #16]
  4082e0:	sub	x1, x1, #0x1
  4082e4:	str	x1, [x3, #16]
  4082e8:	ldrb	w2, [x3, #48]
  4082ec:	tbz	w2, #0, 408240 <ferror@plt+0x5510>
  4082f0:	cmp	x1, #0x1
  4082f4:	b.ne	40825c <ferror@plt+0x552c>  // b.any
  4082f8:	tbnz	w2, #1, 40825c <ferror@plt+0x552c>
  4082fc:	str	x4, [x3, #96]
  408300:	ldrb	w1, [x3, #48]
  408304:	orr	w1, w1, #0x2
  408308:	strb	w1, [x3, #48]
  40830c:	mov	x4, x3
  408310:	b	408260 <ferror@plt+0x5530>
  408314:	ldr	x0, [x20, #8]
  408318:	cbz	x0, 408324 <ferror@plt+0x55f4>
  40831c:	ldr	x3, [x20, #8]
  408320:	b	408378 <ferror@plt+0x5648>
  408324:	mov	w1, #0x1                   	// #1
  408328:	ldr	x0, [x20]
  40832c:	bl	4448e8 <ferror@plt+0x41bb8>
  408330:	str	x0, [x20, #8]
  408334:	cbnz	x0, 40831c <ferror@plt+0x55ec>
  408338:	ldr	x0, [x20]
  40833c:	str	x0, [x20, #8]
  408340:	b	40831c <ferror@plt+0x55ec>
  408344:	add	w1, w1, #0x1
  408348:	mov	w3, w1
  40834c:	add	x0, x3, w1, uxtw #1
  408350:	add	x0, x3, x0, lsl #2
  408354:	add	x0, x2, x0, lsl #3
  408358:	ldrb	w0, [x0, #48]
  40835c:	tbnz	w0, #0, 408344 <ferror@plt+0x5614>
  408360:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408364:	ldr	x21, [x0, #1424]
  408368:	ldr	x22, [x19, #248]
  40836c:	ldr	w0, [x19, #88]
  408370:	cbnz	w0, 408314 <ferror@plt+0x55e4>
  408374:	ldr	x3, [x20]
  408378:	mov	x2, x22
  40837c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408380:	add	x1, x1, #0x680
  408384:	mov	x0, x21
  408388:	bl	40eeec <ferror@plt+0xc1bc>
  40838c:	ldrb	w0, [x20, #28]
  408390:	tbnz	w0, #0, 4083f4 <ferror@plt+0x56c4>
  408394:	add	x27, x27, #0x8
  408398:	ldr	x0, [x19, #368]
  40839c:	cmp	x0, x27
  4083a0:	b.eq	408400 <ferror@plt+0x56d0>  // b.none
  4083a4:	ldr	x20, [x27]
  4083a8:	ldr	x1, [x20, #64]
  4083ac:	ldr	x0, [x20, #72]
  4083b0:	cmp	x1, x0
  4083b4:	b.ne	4083c0 <ferror@plt+0x5690>  // b.any
  4083b8:	ldr	w0, [x19, #256]
  4083bc:	cbz	w0, 408394 <ferror@plt+0x5664>
  4083c0:	ldr	w0, [x20, #104]
  4083c4:	add	x0, x0, x0, lsl #3
  4083c8:	ldr	x2, [x19, #320]
  4083cc:	mov	x1, x20
  4083d0:	add	x0, x2, x0, lsl #4
  4083d4:	bl	404b34 <ferror@plt+0x1e04>
  4083d8:	ldr	x21, [x20, #32]
  4083dc:	ldr	x0, [x20, #40]
  4083e0:	cmp	x0, x21
  4083e4:	b.eq	407c80 <ferror@plt+0x4f50>  // b.none
  4083e8:	mov	x1, #0x0                   	// #0
  4083ec:	str	wzr, [sp, #104]
  4083f0:	b	407c58 <ferror@plt+0x4f28>
  4083f4:	mov	x0, x20
  4083f8:	bl	403dd8 <ferror@plt+0x10a8>
  4083fc:	b	408394 <ferror@plt+0x5664>
  408400:	ldr	x1, [sp, #256]
  408404:	sub	x0, x1, #0x1
  408408:	cbz	x1, 408418 <ferror@plt+0x56e8>
  40840c:	sub	x0, x0, #0x1
  408410:	cmp	x1, x0
  408414:	b.hi	40840c <ferror@plt+0x56dc>  // b.pmore
  408418:	ldrb	w0, [sp, #292]
  40841c:	cbnz	w0, 4085f4 <ferror@plt+0x58c4>
  408420:	ldr	x0, [sp, #248]
  408424:	bl	402a90 <free@plt>
  408428:	ldr	x0, [sp, #160]
  40842c:	ldr	x1, [sp, #96]
  408430:	ldr	x0, [x0, x1]
  408434:	str	x0, [sp, #112]
  408438:	ldr	x25, [x19, #360]
  40843c:	ldr	x0, [x19, #368]
  408440:	cmp	x25, x0
  408444:	b.ne	40898c <ferror@plt+0x5c5c>  // b.any
  408448:	ldr	x0, [sp, #112]
  40844c:	cbz	x0, 40848c <ferror@plt+0x575c>
  408450:	str	x0, [sp, #176]
  408454:	mov	w3, #0x0                   	// #0
  408458:	add	x2, sp, #0xb0
  40845c:	ldr	x1, [x19, #304]
  408460:	ldr	x0, [x19, #296]
  408464:	bl	40b1e4 <ferror@plt+0x84b4>
  408468:	ldr	x1, [x19, #304]
  40846c:	cmp	x1, x0
  408470:	b.eq	408a80 <ferror@plt+0x5d50>  // b.none
  408474:	ldr	w0, [x0, #8]
  408478:	ldr	x1, [x19, #320]
  40847c:	add	x0, x0, x0, lsl #3
  408480:	add	x0, x1, x0, lsl #4
  408484:	ldr	x0, [x0, #80]
  408488:	str	x0, [sp, #112]
  40848c:	ldr	x0, [sp, #112]
  408490:	bl	453fdc <ferror@plt+0x512ac>
  408494:	mov	x20, x0
  408498:	bl	402680 <strlen@plt>
  40849c:	add	x0, x0, #0xe
  4084a0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4084a4:	str	x0, [sp, #152]
  4084a8:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4084ac:	add	x3, x3, #0x6f0
  4084b0:	mov	x2, x20
  4084b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4084b8:	add	x1, x1, #0x700
  4084bc:	bl	402720 <sprintf@plt>
  4084c0:	mov	x0, #0x38                  	// #56
  4084c4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4084c8:	mov	x26, x0
  4084cc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4084d0:	add	x1, x1, #0xe80
  4084d4:	str	x1, [x0], #8
  4084d8:	mov	w4, #0x1                   	// #1
  4084dc:	mov	w3, #0x0                   	// #0
  4084e0:	mov	w2, #0x0                   	// #0
  4084e4:	mov	x1, #0xd                   	// #13
  4084e8:	bl	409c6c <ferror@plt+0x6f3c>
  4084ec:	mov	x0, #0x10                  	// #16
  4084f0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4084f4:	mov	x20, x0
  4084f8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4084fc:	add	x1, x1, #0x580
  408500:	bl	40d388 <ferror@plt+0xa658>
  408504:	mov	x2, x20
  408508:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40850c:	add	x1, x1, #0x708
  408510:	mov	x0, x26
  408514:	bl	40d5ec <ferror@plt+0xa8bc>
  408518:	mov	x0, #0x10                  	// #16
  40851c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  408520:	mov	x20, x0
  408524:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  408528:	add	x1, x1, #0x950
  40852c:	bl	40d388 <ferror@plt+0xa658>
  408530:	mov	x2, x20
  408534:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408538:	add	x1, x1, #0x718
  40853c:	mov	x0, x26
  408540:	bl	40d5ec <ferror@plt+0xa8bc>
  408544:	ldr	x0, [x19, #464]
  408548:	cbz	x0, 408574 <ferror@plt+0x5844>
  40854c:	mov	x0, #0x10                  	// #16
  408550:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  408554:	mov	x20, x0
  408558:	ldr	x1, [x19, #464]
  40855c:	bl	40d388 <ferror@plt+0xa658>
  408560:	mov	x2, x20
  408564:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408568:	add	x1, x1, #0x728
  40856c:	mov	x0, x26
  408570:	bl	40d5ec <ferror@plt+0xa8bc>
  408574:	mov	x0, #0x10                  	// #16
  408578:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40857c:	mov	x20, x0
  408580:	ldr	x1, [sp, #112]
  408584:	bl	40d388 <ferror@plt+0xa658>
  408588:	mov	x2, x20
  40858c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408590:	add	x1, x1, #0x748
  408594:	mov	x0, x26
  408598:	bl	40d5ec <ferror@plt+0xa8bc>
  40859c:	mov	x0, #0x10                  	// #16
  4085a0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4085a4:	mov	x1, x0
  4085a8:	str	x0, [sp, #136]
  4085ac:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4085b0:	add	x0, x0, #0xeb0
  4085b4:	str	x0, [x1]
  4085b8:	str	xzr, [x1, #8]
  4085bc:	mov	x2, x1
  4085c0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4085c4:	add	x1, x1, #0x758
  4085c8:	mov	x0, x26
  4085cc:	bl	40d5ec <ferror@plt+0xa8bc>
  4085d0:	ldr	x24, [x19, #320]
  4085d4:	ldr	x0, [x19, #328]
  4085d8:	cmp	x24, x0
  4085dc:	b.eq	409024 <ferror@plt+0x62f4>  // b.none
  4085e0:	adrp	x27, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4085e4:	add	x27, x27, #0x3a8
  4085e8:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4085ec:	add	x28, x28, #0x7e8
  4085f0:	b	408d68 <ferror@plt+0x6038>
  4085f4:	ldr	x0, [sp, #248]
  4085f8:	bl	40e140 <ferror@plt+0xb410>
  4085fc:	b	408428 <ferror@plt+0x56f8>
  408600:	ldr	x0, [x21, #8]
  408604:	cbz	x0, 408610 <ferror@plt+0x58e0>
  408608:	ldr	x0, [x21, #8]
  40860c:	b	4089ac <ferror@plt+0x5c7c>
  408610:	mov	w1, #0x1                   	// #1
  408614:	ldr	x0, [x21]
  408618:	bl	4448e8 <ferror@plt+0x41bb8>
  40861c:	str	x0, [x21, #8]
  408620:	cbnz	x0, 408608 <ferror@plt+0x58d8>
  408624:	ldr	x0, [x21]
  408628:	str	x0, [x21, #8]
  40862c:	b	408608 <ferror@plt+0x58d8>
  408630:	add	w22, w22, #0x2
  408634:	cmp	x1, x22
  408638:	b.eq	40894c <ferror@plt+0x5c1c>  // b.none
  40863c:	ldr	w1, [x21, #56]
  408640:	add	w1, w1, #0x1
  408644:	str	w1, [x21, #56]
  408648:	b	40894c <ferror@plt+0x5c1c>
  40864c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408650:	add	x2, x2, #0x6a8
  408654:	mov	w1, #0xa2c                 	// #2604
  408658:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40865c:	add	x0, x0, #0xd90
  408660:	bl	4102b4 <ferror@plt+0xd584>
  408664:	ldr	x2, [x1, x0]
  408668:	ldr	x3, [x3, #40]
  40866c:	add	x2, x2, x3
  408670:	str	x2, [x1, x0]
  408674:	add	w26, w26, #0x1
  408678:	mov	w2, w26
  40867c:	ldr	x1, [x27, #8]
  408680:	ldr	x0, [x27, #16]
  408684:	sub	x0, x0, x1
  408688:	asr	x0, x0, #2
  40868c:	cmp	x0, w26, uxtw
  408690:	b.ls	4087dc <ferror@plt+0x5aac>  // b.plast
  408694:	ldr	w20, [x1, x2, lsl #2]
  408698:	mov	w2, w28
  40869c:	mov	w1, w20
  4086a0:	mov	x0, x21
  4086a4:	bl	404af4 <ferror@plt+0x1dc4>
  4086a8:	and	w0, w0, #0xff
  4086ac:	cbz	w0, 408710 <ferror@plt+0x59e0>
  4086b0:	ldr	w0, [x21, #88]
  4086b4:	sub	w20, w20, w0
  4086b8:	ldr	x1, [x21, #112]
  4086bc:	ldr	x0, [x21, #120]
  4086c0:	sub	x0, x0, x1
  4086c4:	cmp	x20, x0, asr #6
  4086c8:	b.cs	40864c <ferror@plt+0x591c>  // b.hs, b.nlast
  4086cc:	lsl	x0, x20, #6
  4086d0:	add	x20, x1, x0
  4086d4:	ldrb	w2, [x20, #56]
  4086d8:	orr	w2, w2, #0x1
  4086dc:	strb	w2, [x20, #56]
  4086e0:	ldr	x3, [sp, #192]
  4086e4:	ldrb	w2, [x3, #48]
  4086e8:	tbnz	w2, #3, 408664 <ferror@plt+0x5934>
  4086ec:	ldrb	w2, [x20, #56]
  4086f0:	orr	w2, w2, #0x2
  4086f4:	strb	w2, [x20, #56]
  4086f8:	ldr	x2, [x3, #40]
  4086fc:	cbnz	x2, 408664 <ferror@plt+0x5934>
  408700:	ldrb	w2, [x20, #56]
  408704:	orr	w2, w2, #0x4
  408708:	strb	w2, [x20, #56]
  40870c:	b	408664 <ferror@plt+0x5934>
  408710:	mov	w0, w20
  408714:	ldr	x2, [x19, #320]
  408718:	ldr	x1, [sp, #120]
  40871c:	add	x2, x2, x1
  408720:	ldr	x1, [x2, #24]
  408724:	ldr	x2, [x2, #32]
  408728:	sub	x2, x2, x1
  40872c:	asr	x2, x2, #6
  408730:	cmp	x2, w20, uxtw
  408734:	b.ls	4087c4 <ferror@plt+0x5a94>  // b.plast
  408738:	lsl	x0, x0, #6
  40873c:	add	x20, x1, x0
  408740:	cbz	x24, 408778 <ferror@plt+0x5a48>
  408744:	ldrb	w2, [x20, #56]
  408748:	tbnz	w2, #0, 408758 <ferror@plt+0x5a28>
  40874c:	ldr	w2, [x24]
  408750:	add	w2, w2, #0x1
  408754:	str	w2, [x24]
  408758:	ldr	x2, [x1, x0]
  40875c:	cbnz	x2, 408778 <ferror@plt+0x5a48>
  408760:	ldr	x2, [sp, #192]
  408764:	ldr	x2, [x2, #40]
  408768:	cbz	x2, 408778 <ferror@plt+0x5a48>
  40876c:	ldr	w2, [x24, #4]
  408770:	add	w2, w2, #0x1
  408774:	str	w2, [x24, #4]
  408778:	ldrb	w2, [x20, #56]
  40877c:	orr	w2, w2, #0x1
  408780:	strb	w2, [x20, #56]
  408784:	ldr	x3, [sp, #192]
  408788:	ldrb	w2, [x3, #48]
  40878c:	tbnz	w2, #3, 4087b0 <ferror@plt+0x5a80>
  408790:	ldrb	w2, [x20, #56]
  408794:	orr	w2, w2, #0x2
  408798:	strb	w2, [x20, #56]
  40879c:	ldr	x2, [x3, #40]
  4087a0:	cbnz	x2, 4087b0 <ferror@plt+0x5a80>
  4087a4:	ldrb	w2, [x20, #56]
  4087a8:	orr	w2, w2, #0x4
  4087ac:	strb	w2, [x20, #56]
  4087b0:	ldr	x2, [x1, x0]
  4087b4:	ldr	x3, [x3, #40]
  4087b8:	add	x2, x2, x3
  4087bc:	str	x2, [x1, x0]
  4087c0:	b	408674 <ferror@plt+0x5944>
  4087c4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4087c8:	add	x2, x2, #0x6a8
  4087cc:	mov	w1, #0xa39                 	// #2617
  4087d0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4087d4:	add	x0, x0, #0xd90
  4087d8:	bl	4102b4 <ferror@plt+0xd584>
  4087dc:	cbz	w22, 408804 <ferror@plt+0x5ad4>
  4087e0:	ldr	x0, [x21, #40]
  4087e4:	ldr	x1, [x21, #32]
  4087e8:	sub	x0, x0, x1
  4087ec:	asr	x0, x0, #3
  4087f0:	mul	x0, x0, x23
  4087f4:	add	w1, w22, #0x1
  4087f8:	cmp	x0, x1
  4087fc:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  408800:	b.ne	408874 <ferror@plt+0x5b44>  // b.any
  408804:	ldr	w0, [sp, #104]
  408808:	add	w4, w0, #0x1
  40880c:	str	w4, [sp, #104]
  408810:	mov	w1, w4
  408814:	ldr	x0, [sp, #192]
  408818:	ldr	x2, [x0, #56]
  40881c:	ldr	x3, [x0, #64]
  408820:	sub	x3, x3, x2
  408824:	asr	x3, x3, #5
  408828:	cmp	x3, w4, uxtw
  40882c:	b.ls	408904 <ferror@plt+0x5bd4>  // b.plast
  408830:	lsl	x1, x1, #5
  408834:	add	x27, x2, x1
  408838:	ldr	w28, [x2, x1]
  40883c:	str	xzr, [x0, #80]
  408840:	mov	w1, #0xffffffff            	// #-1
  408844:	str	w1, [x0, #88]
  408848:	ldr	x1, [x27, #8]
  40884c:	ldr	x0, [x27, #16]
  408850:	cmp	x0, x1
  408854:	b.eq	4087dc <ferror@plt+0x5aac>  // b.none
  408858:	ubfiz	x0, x28, #3, #32
  40885c:	add	x0, x0, w28, uxtw
  408860:	lsl	x0, x0, #4
  408864:	str	x0, [sp, #120]
  408868:	mov	x2, #0x0                   	// #0
  40886c:	mov	w26, #0x0                   	// #0
  408870:	b	408694 <ferror@plt+0x5964>
  408874:	ldr	x1, [x20, #40]
  408878:	ldr	x0, [x20, #48]
  40887c:	cmp	x1, x0
  408880:	b.eq	4088b4 <ferror@plt+0x5b84>  // b.none
  408884:	ldr	x0, [sp, #192]
  408888:	str	x0, [x1]
  40888c:	ldr	x0, [x20, #40]
  408890:	add	x0, x0, #0x8
  408894:	str	x0, [x20, #40]
  408898:	ldr	w0, [x19, #60]
  40889c:	cbz	w0, 408804 <ferror@plt+0x5ad4>
  4088a0:	ldr	x0, [sp, #192]
  4088a4:	ldr	x0, [x0]
  4088a8:	str	x0, [sp, #208]
  4088ac:	cbnz	x0, 4088e0 <ferror@plt+0x5bb0>
  4088b0:	b	408804 <ferror@plt+0x5ad4>
  4088b4:	add	x2, sp, #0xc0
  4088b8:	add	x0, x20, #0x20
  4088bc:	bl	40a878 <ferror@plt+0x7b48>
  4088c0:	b	408898 <ferror@plt+0x5b68>
  4088c4:	add	x2, sp, #0xd0
  4088c8:	add	x0, x20, #0x8
  4088cc:	bl	409b48 <ferror@plt+0x6e18>
  4088d0:	ldr	x0, [sp, #208]
  4088d4:	ldr	x0, [x0, #40]
  4088d8:	str	x0, [sp, #208]
  4088dc:	cbz	x0, 408804 <ferror@plt+0x5ad4>
  4088e0:	ldr	x1, [x20, #16]
  4088e4:	ldr	x2, [x20, #24]
  4088e8:	cmp	x1, x2
  4088ec:	b.eq	4088c4 <ferror@plt+0x5b94>  // b.none
  4088f0:	str	x0, [x1]
  4088f4:	ldr	x0, [x20, #16]
  4088f8:	add	x0, x0, #0x8
  4088fc:	str	x0, [x20, #16]
  408900:	b	4088d0 <ferror@plt+0x5ba0>
  408904:	mov	w3, #0x1                   	// #1
  408908:	add	w5, w22, #0x1
  40890c:	add	w2, w22, #0x1
  408910:	ldr	x4, [x21, #32]
  408914:	ldr	x1, [x21, #40]
  408918:	sub	x1, x1, x4
  40891c:	asr	x1, x1, #3
  408920:	mul	x1, x1, x23
  408924:	cmp	x2, x1
  408928:	b.eq	408970 <ferror@plt+0x5c40>  // b.none
  40892c:	add	x0, x2, x2, lsl #1
  408930:	add	x0, x2, x0, lsl #2
  408934:	add	x0, x4, x0, lsl #3
  408938:	str	x0, [sp, #192]
  40893c:	ldr	x2, [x0, #40]
  408940:	cmp	x2, #0x0
  408944:	ccmp	w5, #0x0, #0x4, ne  // ne = any
  408948:	b.ne	408630 <ferror@plt+0x5900>  // b.any
  40894c:	mov	w22, w5
  408950:	ldr	x2, [x0, #56]
  408954:	ldr	x1, [x0, #64]
  408958:	cmp	x1, x2
  40895c:	b.eq	408908 <ferror@plt+0x5bd8>  // b.none
  408960:	mov	x20, #0x0                   	// #0
  408964:	mov	x1, #0x0                   	// #0
  408968:	str	wzr, [sp, #104]
  40896c:	b	408830 <ferror@plt+0x5b00>
  408970:	cbz	w3, 4089e0 <ferror@plt+0x5cb0>
  408974:	ldr	w0, [x19, #68]
  408978:	cbnz	w0, 408a40 <ferror@plt+0x5d10>
  40897c:	add	x25, x25, #0x8
  408980:	ldr	x0, [x19, #368]
  408984:	cmp	x0, x25
  408988:	b.eq	408448 <ferror@plt+0x5718>  // b.none
  40898c:	ldr	x21, [x25]
  408990:	stp	xzr, xzr, [sp, #248]
  408994:	add	x0, sp, #0x200
  408998:	stp	xzr, xzr, [x0, #-248]
  40899c:	str	xzr, [sp, #280]
  4089a0:	ldr	w0, [x19, #88]
  4089a4:	cbnz	w0, 408600 <ferror@plt+0x58d0>
  4089a8:	ldr	x0, [x21]
  4089ac:	str	x0, [sp, #280]
  4089b0:	ldr	w0, [x19, #68]
  4089b4:	cmp	w0, #0x0
  4089b8:	add	x24, sp, #0xf8
  4089bc:	csel	x24, x24, xzr, ne  // ne = any
  4089c0:	ldr	x0, [x21, #32]
  4089c4:	ldr	x1, [x21, #40]
  4089c8:	cmp	x1, x0
  4089cc:	b.eq	4089e0 <ferror@plt+0x5cb0>  // b.none
  4089d0:	str	x0, [sp, #192]
  4089d4:	mov	w3, #0x0                   	// #0
  4089d8:	mov	w22, #0x0                   	// #0
  4089dc:	b	408950 <ferror@plt+0x5c20>
  4089e0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4089e4:	ldr	x20, [x0, #1424]
  4089e8:	ldr	x22, [x19, #248]
  4089ec:	ldr	w0, [x19, #88]
  4089f0:	cbnz	w0, 408a10 <ferror@plt+0x5ce0>
  4089f4:	ldr	x3, [x21]
  4089f8:	mov	x2, x22
  4089fc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408a00:	add	x1, x1, #0x6b8
  408a04:	mov	x0, x20
  408a08:	bl	40eeec <ferror@plt+0xc1bc>
  408a0c:	b	408974 <ferror@plt+0x5c44>
  408a10:	ldr	x0, [x21, #8]
  408a14:	cbz	x0, 408a20 <ferror@plt+0x5cf0>
  408a18:	ldr	x3, [x21, #8]
  408a1c:	b	4089f8 <ferror@plt+0x5cc8>
  408a20:	mov	w1, #0x1                   	// #1
  408a24:	ldr	x0, [x21]
  408a28:	bl	4448e8 <ferror@plt+0x41bb8>
  408a2c:	str	x0, [x21, #8]
  408a30:	cbnz	x0, 408a18 <ferror@plt+0x5ce8>
  408a34:	ldr	x0, [x21]
  408a38:	str	x0, [x21, #8]
  408a3c:	b	408a18 <ferror@plt+0x5ce8>
  408a40:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408a44:	ldr	x3, [sp, #280]
  408a48:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408a4c:	add	x2, x2, #0x6d0
  408a50:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408a54:	add	x1, x1, #0x6e0
  408a58:	ldr	x0, [x20, #1448]
  408a5c:	bl	40eeec <ferror@plt+0xc1bc>
  408a60:	ldr	w1, [sp, #252]
  408a64:	ldr	w0, [sp, #248]
  408a68:	bl	4041e8 <ferror@plt+0x14b8>
  408a6c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408a70:	add	x1, x1, #0x5b8
  408a74:	ldr	x0, [x20, #1448]
  408a78:	bl	40eeec <ferror@plt+0xc1bc>
  408a7c:	b	40897c <ferror@plt+0x5c4c>
  408a80:	ldr	x0, [sp, #112]
  408a84:	bl	40371c <ferror@plt+0x9ec>
  408a88:	str	x0, [sp, #112]
  408a8c:	b	40848c <ferror@plt+0x575c>
  408a90:	add	x21, x21, #0x8
  408a94:	ldr	x0, [x20, #104]
  408a98:	cmp	x0, x21
  408a9c:	b.eq	408d94 <ferror@plt+0x6064>  // b.none
  408aa0:	ldr	x25, [x21]
  408aa4:	ldr	w1, [x25, #104]
  408aa8:	ldr	w0, [x20]
  408aac:	cmp	w1, w0
  408ab0:	b.ne	408a90 <ferror@plt+0x5d60>  // b.any
  408ab4:	ldrb	w0, [x25, #28]
  408ab8:	tbz	w0, #2, 408a90 <ferror@plt+0x5d60>
  408abc:	ldr	x22, [x25, #112]
  408ac0:	ldr	x0, [x25, #120]
  408ac4:	cmp	x22, x0
  408ac8:	b.eq	408a90 <ferror@plt+0x5d60>  // b.none
  408acc:	mov	w2, #0x0                   	// #0
  408ad0:	mov	x1, x20
  408ad4:	mov	x0, x22
  408ad8:	bl	4052f0 <ferror@plt+0x25c0>
  408adc:	add	x22, x22, #0x40
  408ae0:	ldr	x0, [x25, #120]
  408ae4:	cmp	x0, x22
  408ae8:	b.ne	408acc <ferror@plt+0x5d9c>  // b.any
  408aec:	b	408a90 <ferror@plt+0x5d60>
  408af0:	ldr	x8, [x6, x1]
  408af4:	ldr	x9, [x0]
  408af8:	add	x8, x8, x9
  408afc:	str	x8, [x6, x1]
  408b00:	ldrb	w1, [x2, #56]
  408b04:	orr	w1, w1, #0x1
  408b08:	strb	w1, [x2, #56]
  408b0c:	ldrb	w1, [x0, #56]
  408b10:	tbz	w1, #2, 408b20 <ferror@plt+0x5df0>
  408b14:	ldrb	w1, [x2, #56]
  408b18:	orr	w1, w1, #0x4
  408b1c:	strb	w1, [x2, #56]
  408b20:	ldrb	w0, [x0, #56]
  408b24:	tbz	w0, #1, 408b34 <ferror@plt+0x5e04>
  408b28:	ldrb	w0, [x2, #56]
  408b2c:	orr	w0, w0, #0x2
  408b30:	strb	w0, [x2, #56]
  408b34:	add	w5, w5, #0x1
  408b38:	mov	w0, w5
  408b3c:	ldr	x2, [x4, #112]
  408b40:	ldr	x1, [x4, #120]
  408b44:	sub	x1, x1, x2
  408b48:	asr	x1, x1, #6
  408b4c:	cmp	x1, w5, uxtw
  408b50:	b.ls	408ba8 <ferror@plt+0x5e78>  // b.plast
  408b54:	add	x0, x2, x0, lsl #6
  408b58:	ldrb	w1, [x0, #56]
  408b5c:	tbz	w1, #0, 408b34 <ferror@plt+0x5e04>
  408b60:	ldr	w1, [x4, #88]
  408b64:	add	w1, w5, w1
  408b68:	lsl	x1, x1, #6
  408b6c:	ldr	x6, [x20, #24]
  408b70:	add	x2, x6, x1
  408b74:	ldrb	w8, [x2, #56]
  408b78:	tbnz	w8, #0, 408b88 <ferror@plt+0x5e58>
  408b7c:	ldr	w8, [x20, #48]
  408b80:	add	w8, w8, #0x1
  408b84:	str	w8, [x20, #48]
  408b88:	ldr	x8, [x6, x1]
  408b8c:	cbnz	x8, 408af0 <ferror@plt+0x5dc0>
  408b90:	ldr	x8, [x0]
  408b94:	cbz	x8, 408af0 <ferror@plt+0x5dc0>
  408b98:	ldr	w8, [x20, #52]
  408b9c:	add	w8, w8, #0x1
  408ba0:	str	w8, [x20, #52]
  408ba4:	b	408af0 <ferror@plt+0x5dc0>
  408ba8:	add	x3, x3, #0x8
  408bac:	ldr	x0, [x20, #104]
  408bb0:	cmp	x0, x3
  408bb4:	b.eq	408bf0 <ferror@plt+0x5ec0>  // b.none
  408bb8:	ldr	x4, [x3]
  408bbc:	ldr	w1, [x4, #104]
  408bc0:	ldr	w0, [x20]
  408bc4:	cmp	w1, w0
  408bc8:	b.ne	408ba8 <ferror@plt+0x5e78>  // b.any
  408bcc:	ldrb	w0, [x4, #28]
  408bd0:	tbz	w0, #2, 408ba8 <ferror@plt+0x5e78>
  408bd4:	ldr	x2, [x4, #112]
  408bd8:	ldr	x0, [x4, #120]
  408bdc:	cmp	x2, x0
  408be0:	b.eq	408ba8 <ferror@plt+0x5e78>  // b.none
  408be4:	mov	x0, x7
  408be8:	mov	w5, #0x0                   	// #0
  408bec:	b	408b54 <ferror@plt+0x5e24>
  408bf0:	ldr	w0, [x19, #148]
  408bf4:	cbz	w0, 408c48 <ferror@plt+0x5f18>
  408bf8:	ldr	w1, [x20, #48]
  408bfc:	ldr	w0, [x19, #472]
  408c00:	add	w0, w0, w1
  408c04:	str	w0, [x19, #472]
  408c08:	ldr	w0, [x20, #52]
  408c0c:	ldr	w2, [x19, #476]
  408c10:	add	w0, w0, w2
  408c14:	str	w0, [x19, #476]
  408c18:	ldr	w0, [x27]
  408c1c:	cbz	w0, 408d58 <ferror@plt+0x6028>
  408c20:	ldr	w0, [x19, #132]
  408c24:	cbnz	w0, 408d4c <ferror@plt+0x601c>
  408c28:	ldr	w0, [x19, #148]
  408c2c:	cbz	w0, 408de8 <ferror@plt+0x60b8>
  408c30:	cbz	w1, 408d58 <ferror@plt+0x6028>
  408c34:	mov	x1, x20
  408c38:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408c3c:	ldr	x0, [x0, #1448]
  408c40:	bl	405b90 <ferror@plt+0x2e60>
  408c44:	b	408d58 <ferror@plt+0x6028>
  408c48:	ldr	x3, [x20, #80]
  408c4c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408c50:	add	x2, x2, #0x760
  408c54:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408c58:	add	x1, x1, #0x6e0
  408c5c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408c60:	ldr	x0, [x0, #1448]
  408c64:	bl	40eeec <ferror@plt+0xc1bc>
  408c68:	ldr	w1, [x20, #52]
  408c6c:	ldr	w0, [x20, #48]
  408c70:	bl	4041e8 <ferror@plt+0x14b8>
  408c74:	ldr	w0, [x19, #60]
  408c78:	cbz	w0, 408bf8 <ferror@plt+0x5ec8>
  408c7c:	ldr	w1, [x20, #56]
  408c80:	cbz	w1, 408d1c <ferror@plt+0x5fec>
  408c84:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408c88:	ldr	x22, [x21, #1448]
  408c8c:	mov	w2, #0x2                   	// #2
  408c90:	sxtw	x1, w1
  408c94:	ldrsw	x0, [x20, #60]
  408c98:	bl	403ed0 <ferror@plt+0x11a0>
  408c9c:	ldr	w3, [x20, #56]
  408ca0:	mov	x2, x0
  408ca4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408ca8:	add	x1, x1, #0x768
  408cac:	mov	x0, x22
  408cb0:	bl	40eeec <ferror@plt+0xc1bc>
  408cb4:	ldr	x21, [x21, #1448]
  408cb8:	mov	w2, #0x2                   	// #2
  408cbc:	ldrsw	x1, [x20, #56]
  408cc0:	ldrsw	x0, [x20, #64]
  408cc4:	bl	403ed0 <ferror@plt+0x11a0>
  408cc8:	ldr	w3, [x20, #56]
  408ccc:	mov	x2, x0
  408cd0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408cd4:	add	x1, x1, #0x788
  408cd8:	mov	x0, x21
  408cdc:	bl	40eeec <ferror@plt+0xc1bc>
  408ce0:	ldr	w1, [x20, #68]
  408ce4:	cbz	w1, 408d34 <ferror@plt+0x6004>
  408ce8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408cec:	ldr	x21, [x0, #1448]
  408cf0:	mov	w2, #0x2                   	// #2
  408cf4:	sxtw	x1, w1
  408cf8:	ldrsw	x0, [x20, #72]
  408cfc:	bl	403ed0 <ferror@plt+0x11a0>
  408d00:	ldr	w3, [x20, #68]
  408d04:	mov	x2, x0
  408d08:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408d0c:	add	x1, x1, #0x7b8
  408d10:	mov	x0, x21
  408d14:	bl	40eeec <ferror@plt+0xc1bc>
  408d18:	b	408bf8 <ferror@plt+0x5ec8>
  408d1c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408d20:	add	x1, x1, #0x7a8
  408d24:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408d28:	ldr	x0, [x0, #1448]
  408d2c:	bl	40eeec <ferror@plt+0xc1bc>
  408d30:	b	408ce0 <ferror@plt+0x5fb0>
  408d34:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408d38:	add	x1, x1, #0x7d8
  408d3c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408d40:	ldr	x0, [x0, #1448]
  408d44:	bl	40eeec <ferror@plt+0xc1bc>
  408d48:	b	408bf8 <ferror@plt+0x5ec8>
  408d4c:	mov	x1, x20
  408d50:	ldr	x0, [sp, #136]
  408d54:	bl	4061c4 <ferror@plt+0x3494>
  408d58:	add	x24, x24, #0x90
  408d5c:	ldr	x0, [x19, #328]
  408d60:	cmp	x0, x24
  408d64:	b.eq	409024 <ferror@plt+0x62f4>  // b.none
  408d68:	mov	x20, x24
  408d6c:	ldr	w0, [x19, #120]
  408d70:	cbz	w0, 408d84 <ferror@plt+0x6054>
  408d74:	ldr	x0, [x24, #80]
  408d78:	ldrb	w0, [x0]
  408d7c:	cmp	w0, #0x2f
  408d80:	b.eq	408d58 <ferror@plt+0x6028>  // b.none
  408d84:	ldr	x21, [x20, #96]
  408d88:	ldr	x0, [x20, #104]
  408d8c:	cmp	x0, x21
  408d90:	b.ne	408aa0 <ferror@plt+0x5d70>  // b.any
  408d94:	ldr	x21, [x20, #24]
  408d98:	ldr	x0, [x20, #32]
  408d9c:	cmp	x0, x21
  408da0:	b.eq	408dc8 <ferror@plt+0x6098>  // b.none
  408da4:	mov	w22, #0x1                   	// #1
  408da8:	mov	w2, w22
  408dac:	mov	x1, x20
  408db0:	mov	x0, x21
  408db4:	bl	4052f0 <ferror@plt+0x25c0>
  408db8:	add	x21, x21, #0x40
  408dbc:	ldr	x0, [x20, #32]
  408dc0:	cmp	x0, x21
  408dc4:	b.ne	408da8 <ferror@plt+0x6078>  // b.any
  408dc8:	ldr	w0, [x19, #132]
  408dcc:	cbnz	w0, 408bf0 <ferror@plt+0x5ec0>
  408dd0:	ldr	x3, [x20, #96]
  408dd4:	ldr	x0, [x20, #104]
  408dd8:	cmp	x0, x3
  408ddc:	b.eq	408bf0 <ferror@plt+0x5ec0>  // b.none
  408de0:	mov	x7, #0x0                   	// #0
  408de4:	b	408bb8 <ferror@plt+0x5e88>
  408de8:	ldr	x22, [x20, #80]
  408dec:	ldr	w0, [x19, #72]
  408df0:	cbnz	w0, 408e8c <ferror@plt+0x615c>
  408df4:	mov	x0, x22
  408df8:	bl	402680 <strlen@plt>
  408dfc:	add	x0, x0, #0xa
  408e00:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  408e04:	mov	x1, x0
  408e08:	str	x0, [sp, #104]
  408e0c:	mov	x0, x22
  408e10:	bl	404730 <ferror@plt+0x1a00>
  408e14:	ldr	w1, [x28]
  408e18:	str	w1, [x0]
  408e1c:	ldrh	w1, [x28, #4]
  408e20:	strh	w1, [x0, #4]
  408e24:	ldr	w0, [x19, #140]
  408e28:	cbnz	w0, 408ee4 <ferror@plt+0x61b4>
  408e2c:	ldr	w0, [x20, #48]
  408e30:	cbz	w0, 408fe0 <ferror@plt+0x62b0>
  408e34:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408e38:	add	x1, x1, #0x7f8
  408e3c:	ldr	x22, [sp, #104]
  408e40:	mov	x0, x22
  408e44:	bl	4027d0 <fopen@plt>
  408e48:	mov	x21, x0
  408e4c:	cbz	x0, 408fc4 <ferror@plt+0x6294>
  408e50:	mov	x2, x22
  408e54:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408e58:	add	x1, x1, #0x800
  408e5c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408e60:	ldr	x0, [x0, #1448]
  408e64:	bl	40eeec <ferror@plt+0xc1bc>
  408e68:	mov	x1, x20
  408e6c:	mov	x0, x21
  408e70:	bl	405b90 <ferror@plt+0x2e60>
  408e74:	mov	x0, x21
  408e78:	bl	402d30 <ferror@plt>
  408e7c:	cbnz	w0, 408fa8 <ferror@plt+0x6278>
  408e80:	mov	x0, x21
  408e84:	bl	4027a0 <fclose@plt>
  408e88:	b	409004 <ferror@plt+0x62d4>
  408e8c:	ldr	x1, [sp, #112]
  408e90:	mov	x0, x22
  408e94:	bl	402a20 <strcmp@plt>
  408e98:	cbz	w0, 408df4 <ferror@plt+0x60c4>
  408e9c:	ldr	x25, [sp, #112]
  408ea0:	mov	x0, x25
  408ea4:	bl	402680 <strlen@plt>
  408ea8:	mov	x21, x0
  408eac:	mov	x0, x22
  408eb0:	bl	402680 <strlen@plt>
  408eb4:	add	x0, x21, x0
  408eb8:	add	x0, x0, #0xa
  408ebc:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  408ec0:	mov	x1, x0
  408ec4:	str	x0, [sp, #104]
  408ec8:	mov	x0, x25
  408ecc:	bl	404730 <ferror@plt+0x1a00>
  408ed0:	mov	x1, x0
  408ed4:	mov	w0, #0x23                  	// #35
  408ed8:	strb	w0, [x1, #1]
  408edc:	strb	w0, [x1], #2
  408ee0:	b	408e0c <ferror@plt+0x60dc>
  408ee4:	add	x0, sp, #0xf8
  408ee8:	bl	44f344 <ferror@plt+0x4c614>
  408eec:	mov	x0, x22
  408ef0:	bl	402680 <strlen@plt>
  408ef4:	add	x2, sp, #0xf8
  408ef8:	mov	x1, x0
  408efc:	mov	x0, x22
  408f00:	bl	44fed4 <ferror@plt+0x4d1a4>
  408f04:	add	x1, sp, #0xc0
  408f08:	add	x0, sp, #0xf8
  408f0c:	bl	44fe18 <ferror@plt+0x4d0e8>
  408f10:	add	x25, sp, #0xc0
  408f14:	add	x21, sp, #0xd0
  408f18:	add	x0, sp, #0xf0
  408f1c:	str	x0, [sp, #120]
  408f20:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408f24:	add	x0, x0, #0x7f0
  408f28:	str	x0, [sp, #128]
  408f2c:	ldrb	w2, [x25], #1
  408f30:	ldr	x1, [sp, #128]
  408f34:	mov	x0, x21
  408f38:	bl	402720 <sprintf@plt>
  408f3c:	add	x21, x21, #0x2
  408f40:	ldr	x0, [sp, #120]
  408f44:	cmp	x21, x0
  408f48:	b.ne	408f2c <ferror@plt+0x61fc>  // b.any
  408f4c:	ldr	x0, [sp, #104]
  408f50:	bl	402a90 <free@plt>
  408f54:	mov	x0, x22
  408f58:	bl	402680 <strlen@plt>
  408f5c:	add	x0, x0, #0x32
  408f60:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  408f64:	str	x0, [sp, #104]
  408f68:	mov	x1, x0
  408f6c:	mov	x0, x22
  408f70:	bl	404730 <ferror@plt+0x1a00>
  408f74:	mov	w2, #0x23                  	// #35
  408f78:	strb	w2, [x0, #1]
  408f7c:	mov	x1, x0
  408f80:	strb	w2, [x1], #2
  408f84:	ldp	x2, x3, [sp, #208]
  408f88:	stp	x2, x3, [x1]
  408f8c:	ldp	x2, x3, [sp, #224]
  408f90:	stp	x2, x3, [x1, #16]
  408f94:	ldr	w1, [x28]
  408f98:	stur	w1, [x0, #34]
  408f9c:	ldrh	w1, [x28, #4]
  408fa0:	strh	w1, [x0, #38]
  408fa4:	b	408e2c <ferror@plt+0x60fc>
  408fa8:	ldr	x2, [sp, #104]
  408fac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408fb0:	add	x1, x1, #0x810
  408fb4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408fb8:	ldr	x0, [x0, #1424]
  408fbc:	bl	40eeec <ferror@plt+0xc1bc>
  408fc0:	b	408e80 <ferror@plt+0x6150>
  408fc4:	ldr	x2, [sp, #104]
  408fc8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408fcc:	add	x1, x1, #0x830
  408fd0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408fd4:	ldr	x0, [x0, #1424]
  408fd8:	bl	40eeec <ferror@plt+0xc1bc>
  408fdc:	b	409004 <ferror@plt+0x62d4>
  408fe0:	ldr	x20, [sp, #104]
  408fe4:	mov	x0, x20
  408fe8:	bl	402cc0 <unlink@plt>
  408fec:	mov	x2, x20
  408ff0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  408ff4:	add	x1, x1, #0x858
  408ff8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  408ffc:	ldr	x0, [x0, #1448]
  409000:	bl	40eeec <ferror@plt+0xc1bc>
  409004:	ldr	x0, [sp, #104]
  409008:	bl	402a90 <free@plt>
  40900c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409010:	add	x1, x1, #0x5b8
  409014:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  409018:	ldr	x0, [x0, #1448]
  40901c:	bl	40eeec <ferror@plt+0xc1bc>
  409020:	b	408d58 <ferror@plt+0x6028>
  409024:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  409028:	ldr	w0, [x0, #936]
  40902c:	cbz	w0, 409058 <ferror@plt+0x6328>
  409030:	ldr	w0, [x19, #132]
  409034:	cbz	w0, 409058 <ferror@plt+0x6328>
  409038:	ldr	w0, [x19, #148]
  40903c:	cbz	w0, 409070 <ferror@plt+0x6340>
  409040:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  409044:	ldr	x1, [x0, #1448]
  409048:	mov	x0, x26
  40904c:	bl	40d850 <ferror@plt+0xab20>
  409050:	mov	w0, #0xa                   	// #10
  409054:	bl	402c60 <putchar@plt>
  409058:	ldr	x20, [x19, #360]
  40905c:	ldr	x0, [x19, #368]
  409060:	cmp	x20, x0
  409064:	b.eq	40914c <ferror@plt+0x641c>  // b.none
  409068:	mov	x22, #0x90                  	// #144
  40906c:	b	409140 <ferror@plt+0x6410>
  409070:	mov	w1, #0x0                   	// #0
  409074:	add	x0, sp, #0xf8
  409078:	bl	4165e0 <ferror@plt+0x138b0>
  40907c:	add	x1, sp, #0xf8
  409080:	mov	x0, x26
  409084:	bl	40d3d8 <ferror@plt+0xa6a8>
  409088:	add	x0, sp, #0xf8
  40908c:	bl	41666c <ferror@plt+0x1393c>
  409090:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409094:	add	x1, x1, #0x7f8
  409098:	ldr	x0, [sp, #152]
  40909c:	bl	402b20 <gzopen@plt>
  4090a0:	mov	x20, x0
  4090a4:	cbz	x0, 4090f4 <ferror@plt+0x63c4>
  4090a8:	add	x0, sp, #0xf8
  4090ac:	bl	41666c <ferror@plt+0x1393c>
  4090b0:	mov	x1, x0
  4090b4:	mov	x0, x20
  4090b8:	bl	4029b0 <gzputs@plt>
  4090bc:	cmn	w0, #0x1
  4090c0:	b.eq	4090d0 <ferror@plt+0x63a0>  // b.none
  4090c4:	mov	x0, x20
  4090c8:	bl	402650 <gzclose@plt>
  4090cc:	cbz	w0, 409110 <ferror@plt+0x63e0>
  4090d0:	ldr	x2, [sp, #152]
  4090d4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4090d8:	add	x1, x1, #0x890
  4090dc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4090e0:	ldr	x0, [x0, #1424]
  4090e4:	bl	40eeec <ferror@plt+0xc1bc>
  4090e8:	add	x0, sp, #0xf8
  4090ec:	bl	41647c <ferror@plt+0x1374c>
  4090f0:	b	409058 <ferror@plt+0x6328>
  4090f4:	ldr	x2, [sp, #152]
  4090f8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4090fc:	add	x1, x1, #0x868
  409100:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  409104:	ldr	x0, [x0, #1424]
  409108:	bl	40eeec <ferror@plt+0xc1bc>
  40910c:	b	4090e8 <ferror@plt+0x63b8>
  409110:	add	x0, sp, #0xf8
  409114:	bl	41647c <ferror@plt+0x1374c>
  409118:	b	409058 <ferror@plt+0x6328>
  40911c:	mov	x0, x21
  409120:	bl	404988 <ferror@plt+0x1c58>
  409124:	mov	x1, x22
  409128:	mov	x0, x21
  40912c:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  409130:	add	x20, x20, #0x8
  409134:	ldr	x0, [x19, #368]
  409138:	cmp	x0, x20
  40913c:	b.eq	40914c <ferror@plt+0x641c>  // b.none
  409140:	ldr	x21, [x20]
  409144:	cbnz	x21, 40911c <ferror@plt+0x63ec>
  409148:	b	409130 <ferror@plt+0x6400>
  40914c:	ldr	x24, [x19, #328]
  409150:	ldr	x25, [x19, #320]
  409154:	cmp	x24, x25
  409158:	b.eq	4091d4 <ferror@plt+0x64a4>  // b.none
  40915c:	mov	x20, x25
  409160:	b	4091a4 <ferror@plt+0x6474>
  409164:	add	x21, x21, #0x40
  409168:	cmp	x22, x21
  40916c:	b.eq	40918c <ferror@plt+0x645c>  // b.none
  409170:	ldr	x0, [x21, #32]
  409174:	cbz	x0, 40917c <ferror@plt+0x644c>
  409178:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40917c:	ldr	x0, [x21, #8]
  409180:	cbz	x0, 409164 <ferror@plt+0x6434>
  409184:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409188:	b	409164 <ferror@plt+0x6434>
  40918c:	ldr	x0, [x20, #24]
  409190:	cbz	x0, 409198 <ferror@plt+0x6468>
  409194:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409198:	add	x20, x20, #0x90
  40919c:	cmp	x24, x20
  4091a0:	b.eq	4091d0 <ferror@plt+0x64a0>  // b.none
  4091a4:	ldr	x0, [x20, #120]
  4091a8:	cbz	x0, 4091b0 <ferror@plt+0x6480>
  4091ac:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4091b0:	ldr	x0, [x20, #96]
  4091b4:	cbz	x0, 4091bc <ferror@plt+0x648c>
  4091b8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4091bc:	ldr	x21, [x20, #24]
  4091c0:	ldr	x22, [x20, #32]
  4091c4:	cmp	x21, x22
  4091c8:	b.ne	409170 <ferror@plt+0x6440>  // b.any
  4091cc:	b	40918c <ferror@plt+0x645c>
  4091d0:	str	x25, [x19, #328]
  4091d4:	ldr	x0, [x19, #296]
  4091d8:	ldr	x1, [x19, #304]
  4091dc:	cmp	x1, x0
  4091e0:	b.eq	4091e8 <ferror@plt+0x64b8>  // b.none
  4091e4:	str	x0, [x19, #304]
  4091e8:	ldr	x0, [x19, #360]
  4091ec:	ldr	x1, [x19, #368]
  4091f0:	cmp	x1, x0
  4091f4:	b.eq	4091fc <ferror@plt+0x64cc>  // b.none
  4091f8:	str	x0, [x19, #368]
  4091fc:	add	x20, x19, #0x180
  409200:	ldr	x1, [x19, #400]
  409204:	mov	x0, x20
  409208:	bl	409af0 <ferror@plt+0x6dc0>
  40920c:	str	xzr, [x19, #400]
  409210:	add	x0, x19, #0x188
  409214:	str	x0, [x19, #408]
  409218:	str	x0, [x19, #416]
  40921c:	str	xzr, [x19, #424]
  409220:	ldr	w0, [sp, #144]
  409224:	add	w0, w0, #0x1
  409228:	str	w0, [sp, #144]
  40922c:	ldr	w2, [sp, #172]
  409230:	ldr	x1, [sp, #96]
  409234:	add	x1, x1, #0x8
  409238:	str	x1, [sp, #96]
  40923c:	cmp	w2, w0
  409240:	b.eq	409438 <ferror@plt+0x6708>  // b.none
  409244:	ldr	w0, [x19, #136]
  409248:	cbnz	w0, 406d28 <ferror@plt+0x3ff8>
  40924c:	ldr	x0, [sp, #160]
  409250:	ldr	x1, [sp, #96]
  409254:	ldr	x24, [x0, x1]
  409258:	mov	x0, x24
  40925c:	bl	402680 <strlen@plt>
  409260:	mov	x20, x0
  409264:	ldr	x0, [x19, #248]
  409268:	bl	402a90 <free@plt>
  40926c:	ldr	x0, [x19, #264]
  409270:	bl	402a90 <free@plt>
  409274:	str	xzr, [x19, #248]
  409278:	str	xzr, [x19, #264]
  40927c:	str	xzr, [x19, #344]
  409280:	str	wzr, [x19, #456]
  409284:	ldr	x0, [x19, #96]
  409288:	cbz	x0, 409294 <ferror@plt+0x6564>
  40928c:	ldrb	w1, [x0]
  409290:	cbnz	w1, 406d4c <ferror@plt+0x401c>
  409294:	add	w0, w20, #0x1
  409298:	sxtw	x0, w0
  40929c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4092a0:	mov	x20, x0
  4092a4:	mov	x1, x24
  4092a8:	bl	402b30 <strcpy@plt>
  4092ac:	mov	x0, x20
  4092b0:	bl	453fdc <ferror@plt+0x512ac>
  4092b4:	mov	w1, #0x2e                  	// #46
  4092b8:	bl	402950 <strrchr@plt>
  4092bc:	cbz	x0, 4092c4 <ferror@plt+0x6594>
  4092c0:	strb	wzr, [x0]
  4092c4:	mov	x0, x20
  4092c8:	bl	402680 <strlen@plt>
  4092cc:	sxtw	x21, w0
  4092d0:	add	x25, x21, #0x6
  4092d4:	mov	x0, x25
  4092d8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4092dc:	mov	x22, x0
  4092e0:	str	x0, [x19, #248]
  4092e4:	mov	x1, x20
  4092e8:	bl	402b30 <strcpy@plt>
  4092ec:	add	x1, x22, x21
  4092f0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4092f4:	add	x0, x0, #0x450
  4092f8:	ldr	w2, [x0]
  4092fc:	str	w2, [x22, x21]
  409300:	ldrh	w0, [x0, #4]
  409304:	strh	w0, [x1, #4]
  409308:	mov	x0, x25
  40930c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  409310:	mov	x22, x0
  409314:	str	x0, [x19, #264]
  409318:	mov	x1, x20
  40931c:	bl	402b30 <strcpy@plt>
  409320:	add	x1, x22, x21
  409324:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409328:	add	x0, x0, #0x458
  40932c:	ldr	w2, [x0]
  409330:	str	w2, [x22, x21]
  409334:	ldrh	w0, [x0, #4]
  409338:	strh	w0, [x1, #4]
  40933c:	mov	x0, x20
  409340:	bl	402a90 <free@plt>
  409344:	ldr	x21, [x19, #432]
  409348:	ldr	x0, [x19, #440]
  40934c:	sub	x0, x0, x21
  409350:	asr	x25, x0, #3
  409354:	cmp	xzr, x0, asr #3
  409358:	b.eq	409384 <ferror@plt+0x6654>  // b.none
  40935c:	mov	x0, #0x0                   	// #0
  409360:	mov	w20, #0x0                   	// #0
  409364:	ldr	x1, [x21, x0, lsl #3]
  409368:	mov	x0, x22
  40936c:	bl	402a20 <strcmp@plt>
  409370:	cbz	w0, 406da8 <ferror@plt+0x4078>
  409374:	add	w20, w20, #0x1
  409378:	mov	w0, w20
  40937c:	cmp	x25, w20, uxtw
  409380:	b.hi	409364 <ferror@plt+0x6634>  // b.pmore
  409384:	mov	x0, x22
  409388:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  40938c:	str	x0, [sp, #408]
  409390:	ldr	x1, [x19, #440]
  409394:	ldr	x2, [x19, #448]
  409398:	cmp	x1, x2
  40939c:	b.eq	406e6c <ferror@plt+0x413c>  // b.none
  4093a0:	str	x0, [x1]
  4093a4:	ldr	x0, [x19, #440]
  4093a8:	add	x0, x0, #0x8
  4093ac:	str	x0, [x19, #440]
  4093b0:	mov	w1, #0x1                   	// #1
  4093b4:	ldr	x0, [x19, #248]
  4093b8:	bl	40392c <ferror@plt+0xbfc>
  4093bc:	cbz	w0, 406e7c <ferror@plt+0x414c>
  4093c0:	ldr	x0, [x19]
  4093c4:	bl	402850 <fileno_unlocked@plt>
  4093c8:	add	x2, sp, #0xf8
  4093cc:	mov	w1, w0
  4093d0:	mov	w0, #0x0                   	// #0
  4093d4:	bl	402bc0 <__fxstat@plt>
  4093d8:	cmp	w0, #0x0
  4093dc:	ldr	x0, [sp, #336]
  4093e0:	csel	x0, x0, xzr, eq  // eq = none
  4093e4:	str	x0, [x19, #344]
  4093e8:	bl	403bf0 <ferror@plt+0xec0>
  4093ec:	mov	w1, #0x6e6f                	// #28271
  4093f0:	movk	w1, #0x6763, lsl #16
  4093f4:	bl	40329c <ferror@plt+0x56c>
  4093f8:	cbz	w0, 406e98 <ferror@plt+0x4168>
  4093fc:	bl	403bf0 <ferror@plt+0xec0>
  409400:	mov	w1, #0x322a                	// #12842
  409404:	movk	w1, #0x4139, lsl #16
  409408:	cmp	w0, w1
  40940c:	b.ne	406eb8 <ferror@plt+0x4188>  // b.any
  409410:	bl	403bf0 <ferror@plt+0xec0>
  409414:	str	w0, [x19, #456]
  409418:	bl	403c40 <ferror@plt+0xf10>
  40941c:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  409420:	str	x0, [x19, #464]
  409424:	bl	403bf0 <ferror@plt+0xec0>
  409428:	str	w0, [x19, #236]
  40942c:	str	xzr, [sp, #208]
  409430:	mov	w24, #0x0                   	// #0
  409434:	b	4075ec <ferror@plt+0x48bc>
  409438:	ldp	x21, x22, [sp, #32]
  40943c:	ldp	x23, x24, [sp, #48]
  409440:	ldp	x25, x26, [sp, #64]
  409444:	ldp	x27, x28, [sp, #80]
  409448:	mov	w0, #0x0                   	// #0
  40944c:	ldp	x19, x20, [sp, #16]
  409450:	ldp	x29, x30, [sp], #432
  409454:	ret
  409458:	cbz	x4, 408160 <ferror@plt+0x5430>
  40945c:	mov	x0, x5
  409460:	mov	x1, x4
  409464:	b	408264 <ferror@plt+0x5534>
  409468:	mov	x2, x6
  40946c:	b	4079cc <ferror@plt+0x4c9c>
  409470:	add	x6, x6, x6, lsl #1
  409474:	ldr	x0, [sp, #264]
  409478:	cmp	x6, x0, lsl #2
  40947c:	b.ls	407970 <ferror@plt+0x4c40>  // b.plast
  409480:	ldr	w0, [sp, #280]
  409484:	add	w0, w0, #0x1
  409488:	str	w0, [sp, #280]
  40948c:	ldr	w2, [sp, #288]
  409490:	ubfiz	x1, x2, #4, #32
  409494:	add	x0, x25, x1
  409498:	ldr	w3, [x25, x1]
  40949c:	ldr	w8, [x0, #12]
  4094a0:	ldr	w0, [x0, #4]
  4094a4:	mul	x0, x0, x26
  4094a8:	lsr	x0, x0, #32
  4094ac:	sub	w1, w20, w0
  4094b0:	add	w0, w0, w1, lsr #1
  4094b4:	lsr	w0, w0, w8
  4094b8:	msub	w0, w0, w3, w20
  4094bc:	ldr	x7, [sp, #248]
  4094c0:	ubfiz	x4, x0, #4, #32
  4094c4:	add	x6, x7, x4
  4094c8:	ldr	w1, [x6, #4]
  4094cc:	cmn	w1, #0x3
  4094d0:	b.eq	407a00 <ferror@plt+0x4cd0>  // b.none
  4094d4:	cmn	w1, #0x2
  4094d8:	b.eq	4094f0 <ferror@plt+0x67c0>  // b.none
  4094dc:	ldr	w4, [x7, x4]
  4094e0:	cmp	w4, w22
  4094e4:	ccmp	w24, w1, #0x0, eq  // eq = none
  4094e8:	b.eq	409468 <ferror@plt+0x6738>  // b.none
  4094ec:	mov	x6, #0x0                   	// #0
  4094f0:	ubfiz	x2, x2, #4, #32
  4094f4:	add	x2, x25, x2
  4094f8:	ldr	w5, [x2, #8]
  4094fc:	mul	x5, x5, x26
  409500:	lsr	x5, x5, #32
  409504:	ldr	x4, [sp, #256]
  409508:	add	w1, w20, #0x1
  40950c:	sub	w20, w20, w5
  409510:	add	w5, w5, w20, lsr #1
  409514:	lsr	w5, w5, w8
  409518:	sub	w3, w3, #0x2
  40951c:	msub	w5, w5, w3, w1
  409520:	b	407984 <ferror@plt+0x4c54>
  409524:	ldr	x1, [x4, #8]
  409528:	ldrb	w0, [x1, #28]
  40952c:	orr	w0, w0, #0x4
  409530:	strb	w0, [x1, #28]
  409534:	ldr	x1, [x21]
  409538:	ldrb	w0, [x1, #28]
  40953c:	orr	w0, w0, #0x4
  409540:	strb	w0, [x1, #28]
  409544:	add	x21, x21, #0x8
  409548:	ldr	x0, [x19, #368]
  40954c:	cmp	x0, x21
  409550:	b.eq	407a24 <ferror@plt+0x4cf4>  // b.none
  409554:	ldr	x0, [x21]
  409558:	ldrb	w1, [x0, #28]
  40955c:	tbnz	w1, #1, 409544 <ferror@plt+0x6814>
  409560:	ldr	w22, [x0, #104]
  409564:	ldr	w24, [x0, #88]
  409568:	sub	w0, w27, w22
  40956c:	add	w2, w22, w28
  409570:	add	w1, w2, w22
  409574:	eor	w1, w1, w0, lsl #8
  409578:	sub	w2, w2, w1
  40957c:	eor	w2, w2, w1, lsr #13
  409580:	sub	w0, w0, w1
  409584:	sub	w0, w0, w2
  409588:	eor	w0, w0, w2, lsr #12
  40958c:	sub	w1, w1, w2
  409590:	sub	w1, w1, w0
  409594:	eor	w1, w1, w0, lsl #16
  409598:	sub	w2, w2, w0
  40959c:	sub	w2, w2, w1
  4095a0:	eor	w2, w2, w1, lsr #5
  4095a4:	sub	w3, w0, w1
  4095a8:	sub	w3, w3, w2
  4095ac:	eor	w3, w3, w2, lsr #3
  4095b0:	sub	w0, w1, w2
  4095b4:	sub	w0, w0, w3
  4095b8:	eor	w0, w0, w3, lsl #10
  4095bc:	sub	w2, w2, w3
  4095c0:	sub	w2, w2, w0
  4095c4:	eor	w0, w2, w0, lsr #15
  4095c8:	sub	w1, w27, w24
  4095cc:	sub	w1, w1, w0
  4095d0:	eor	w1, w1, w0, lsr #13
  4095d4:	sub	w20, w24, w0
  4095d8:	sub	w20, w20, w1
  4095dc:	eor	w20, w20, w1, lsl #8
  4095e0:	sub	w0, w0, w1
  4095e4:	sub	w0, w0, w20
  4095e8:	eor	w0, w0, w20, lsr #13
  4095ec:	sub	w1, w1, w20
  4095f0:	sub	w1, w1, w0
  4095f4:	eor	w1, w1, w0, lsr #12
  4095f8:	sub	w20, w20, w0
  4095fc:	sub	w20, w20, w1
  409600:	eor	w20, w20, w1, lsl #16
  409604:	sub	w0, w0, w1
  409608:	sub	w0, w0, w20
  40960c:	eor	w0, w0, w20, lsr #5
  409610:	sub	w1, w1, w20
  409614:	sub	w1, w1, w0
  409618:	eor	w1, w1, w0, lsr #3
  40961c:	sub	w20, w20, w0
  409620:	sub	w20, w20, w1
  409624:	eor	w20, w20, w1, lsl #10
  409628:	sub	w0, w0, w1
  40962c:	sub	w0, w0, w20
  409630:	eor	w20, w0, w20, lsr #15
  409634:	ldr	w0, [sp, #280]
  409638:	add	w0, w0, #0x1
  40963c:	str	w0, [sp, #280]
  409640:	ldr	x6, [sp, #256]
  409644:	ldr	w3, [sp, #288]
  409648:	ubfiz	x1, x3, #4, #32
  40964c:	add	x0, x25, x1
  409650:	ldr	w7, [x25, x1]
  409654:	ldr	w8, [x0, #12]
  409658:	mov	w26, w20
  40965c:	ldr	w0, [x0, #4]
  409660:	mul	x0, x0, x26
  409664:	lsr	x0, x0, #32
  409668:	sub	w4, w20, w0
  40966c:	add	w0, w0, w4, lsr #1
  409670:	lsr	w0, w0, w8
  409674:	msub	w0, w0, w7, w20
  409678:	ldr	x5, [sp, #248]
  40967c:	ubfiz	x2, x0, #4, #32
  409680:	add	x4, x5, x2
  409684:	ldr	w1, [x4, #4]
  409688:	cmn	w1, #0x3
  40968c:	b.eq	409470 <ferror@plt+0x6740>  // b.none
  409690:	cmn	w1, #0x2
  409694:	b.eq	4096a8 <ferror@plt+0x6978>  // b.none
  409698:	ldr	w2, [x5, x2]
  40969c:	cmp	w2, w22
  4096a0:	ccmp	w24, w1, #0x0, eq  // eq = none
  4096a4:	b.eq	409524 <ferror@plt+0x67f4>  // b.none
  4096a8:	ubfiz	x3, x3, #4, #32
  4096ac:	add	x3, x25, x3
  4096b0:	ldr	w2, [x3, #8]
  4096b4:	mul	x2, x2, x26
  4096b8:	lsr	x3, x2, #32
  4096bc:	add	w1, w20, #0x1
  4096c0:	sub	w2, w20, w3
  4096c4:	add	w2, w3, w2, lsr #1
  4096c8:	lsr	w2, w2, w8
  4096cc:	sub	w7, w7, #0x2
  4096d0:	msub	w1, w2, w7, w1
  4096d4:	ldr	w2, [sp, #284]
  4096d8:	add	w2, w2, #0x1
  4096dc:	str	w2, [sp, #284]
  4096e0:	add	w0, w0, w1
  4096e4:	sub	w2, w0, w6
  4096e8:	cmp	x6, w0, uxtw
  4096ec:	csel	w0, w2, w0, ls  // ls = plast
  4096f0:	ubfiz	x3, x0, #4, #32
  4096f4:	add	x4, x5, x3
  4096f8:	ldr	w2, [x4, #4]
  4096fc:	cmn	w2, #0x3
  409700:	b.eq	409470 <ferror@plt+0x6740>  // b.none
  409704:	cmn	w2, #0x2
  409708:	b.eq	4096d4 <ferror@plt+0x69a4>  // b.none
  40970c:	ldr	w3, [x5, x3]
  409710:	cmp	w3, w22
  409714:	ccmp	w24, w2, #0x0, eq  // eq = none
  409718:	b.ne	4096d4 <ferror@plt+0x69a4>  // b.any
  40971c:	b	409524 <ferror@plt+0x67f4>
  409720:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  409724:	ldr	x0, [x0, #1424]
  409728:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40972c:	add	x1, x1, #0x410
  409730:	ldr	x2, [x19, #264]
  409734:	bl	40eeec <ferror@plt+0xc1bc>
  409738:	bl	403d80 <ferror@plt+0x1050>
  40973c:	b	406dc0 <ferror@plt+0x4090>
  409740:	mov	x22, #0x0                   	// #0
  409744:	b	407794 <ferror@plt+0x4a64>
  409748:	add	x24, x19, #0x188
  40974c:	b	407018 <ferror@plt+0x42e8>
  409750:	ldr	x1, [x19, #96]
  409754:	mov	x0, x20
  409758:	bl	402880 <strcat@plt>
  40975c:	mov	x0, x20
  409760:	bl	402680 <strlen@plt>
  409764:	add	x1, x20, x0
  409768:	ldurb	w1, [x1, #-1]
  40976c:	cmp	w1, #0x2f
  409770:	b.ne	406d9c <ferror@plt+0x406c>  // b.any
  409774:	mov	x0, x24
  409778:	bl	453fdc <ferror@plt+0x512ac>
  40977c:	mov	x1, x0
  409780:	mov	x0, x20
  409784:	bl	402880 <strcat@plt>
  409788:	b	4092ac <ferror@plt+0x657c>
  40978c:	ldrb	w0, [x0, #28]
  409790:	ubfx	x0, x0, #1, #1
  409794:	ret
  409798:	ldr	x0, [x0]
  40979c:	cbz	x0, 4097b4 <ferror@plt+0x6a84>
  4097a0:	stp	x29, x30, [sp, #-16]!
  4097a4:	mov	x29, sp
  4097a8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4097ac:	ldp	x29, x30, [sp], #16
  4097b0:	ret
  4097b4:	ret
  4097b8:	ldr	x0, [x0]
  4097bc:	cbz	x0, 4097d4 <ferror@plt+0x6aa4>
  4097c0:	stp	x29, x30, [sp, #-16]!
  4097c4:	mov	x29, sp
  4097c8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4097cc:	ldp	x29, x30, [sp], #16
  4097d0:	ret
  4097d4:	ret
  4097d8:	ldr	x0, [x0]
  4097dc:	cbz	x0, 4097f4 <ferror@plt+0x6ac4>
  4097e0:	stp	x29, x30, [sp, #-16]!
  4097e4:	mov	x29, sp
  4097e8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4097ec:	ldp	x29, x30, [sp], #16
  4097f0:	ret
  4097f4:	ret
  4097f8:	stp	x29, x30, [sp, #-64]!
  4097fc:	mov	x29, sp
  409800:	stp	x19, x20, [sp, #16]
  409804:	stp	x21, x22, [sp, #32]
  409808:	str	x23, [sp, #48]
  40980c:	mov	x23, x0
  409810:	ldr	x19, [x0]
  409814:	ldr	x22, [x0, #8]
  409818:	cmp	x19, x22
  40981c:	b.ne	409880 <ferror@plt+0x6b50>  // b.any
  409820:	ldr	x0, [x23]
  409824:	cbz	x0, 40982c <ferror@plt+0x6afc>
  409828:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40982c:	ldp	x19, x20, [sp, #16]
  409830:	ldp	x21, x22, [sp, #32]
  409834:	ldr	x23, [sp, #48]
  409838:	ldp	x29, x30, [sp], #64
  40983c:	ret
  409840:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409844:	add	x20, x20, #0x40
  409848:	cmp	x21, x20
  40984c:	b.eq	409868 <ferror@plt+0x6b38>  // b.none
  409850:	ldr	x0, [x20, #32]
  409854:	cbz	x0, 40985c <ferror@plt+0x6b2c>
  409858:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40985c:	ldr	x0, [x20, #8]
  409860:	cbnz	x0, 409840 <ferror@plt+0x6b10>
  409864:	b	409844 <ferror@plt+0x6b14>
  409868:	ldr	x0, [x19, #24]
  40986c:	cbz	x0, 409874 <ferror@plt+0x6b44>
  409870:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409874:	add	x19, x19, #0x90
  409878:	cmp	x22, x19
  40987c:	b.eq	409820 <ferror@plt+0x6af0>  // b.none
  409880:	ldr	x0, [x19, #120]
  409884:	cbz	x0, 40988c <ferror@plt+0x6b5c>
  409888:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40988c:	ldr	x0, [x19, #96]
  409890:	cbz	x0, 409898 <ferror@plt+0x6b68>
  409894:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409898:	ldr	x20, [x19, #24]
  40989c:	ldr	x21, [x19, #32]
  4098a0:	cmp	x20, x21
  4098a4:	b.ne	409850 <ferror@plt+0x6b20>  // b.any
  4098a8:	b	409868 <ferror@plt+0x6b38>
  4098ac:	stp	x29, x30, [sp, #-80]!
  4098b0:	mov	x29, sp
  4098b4:	stp	x19, x20, [sp, #16]
  4098b8:	stp	x21, x22, [sp, #32]
  4098bc:	stp	x23, x24, [sp, #48]
  4098c0:	stp	x25, x26, [sp, #64]
  4098c4:	mov	x25, x1
  4098c8:	mov	x26, x2
  4098cc:	ldr	x23, [x0, #8]
  4098d0:	ldr	x24, [x0]
  4098d4:	sub	x1, x23, x24
  4098d8:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  4098dc:	cmp	x2, x1, asr #3
  4098e0:	b.eq	40998c <ferror@plt+0x6c5c>  // b.none
  4098e4:	mov	x20, x0
  4098e8:	asr	x0, x1, #3
  4098ec:	cmp	x0, #0x0
  4098f0:	csinc	x3, x0, xzr, ne  // ne = any
  4098f4:	adds	x3, x3, x0
  4098f8:	b.cs	4099c4 <ferror@plt+0x6c94>  // b.hs, b.nlast
  4098fc:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  409900:	cmp	x3, x22
  409904:	csel	x22, x3, x22, ls  // ls = plast
  409908:	sub	x19, x25, x24
  40990c:	mov	x21, #0x0                   	// #0
  409910:	cbz	x3, 409920 <ferror@plt+0x6bf0>
  409914:	lsl	x0, x22, #3
  409918:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40991c:	mov	x21, x0
  409920:	ldr	x0, [x26]
  409924:	str	x0, [x21, x19]
  409928:	cmp	x19, #0x0
  40992c:	b.gt	409998 <ferror@plt+0x6c68>
  409930:	add	x19, x19, #0x8
  409934:	add	x19, x21, x19
  409938:	sub	x23, x23, x25
  40993c:	cmp	x23, #0x0
  409940:	b.le	409954 <ferror@plt+0x6c24>
  409944:	mov	x2, x23
  409948:	mov	x1, x25
  40994c:	mov	x0, x19
  409950:	bl	402620 <memcpy@plt>
  409954:	add	x19, x19, x23
  409958:	cbz	x24, 409964 <ferror@plt+0x6c34>
  40995c:	mov	x0, x24
  409960:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409964:	str	x21, [x20]
  409968:	str	x19, [x20, #8]
  40996c:	add	x21, x21, x22, lsl #3
  409970:	str	x21, [x20, #16]
  409974:	ldp	x19, x20, [sp, #16]
  409978:	ldp	x21, x22, [sp, #32]
  40997c:	ldp	x23, x24, [sp, #48]
  409980:	ldp	x25, x26, [sp, #64]
  409984:	ldp	x29, x30, [sp], #80
  409988:	ret
  40998c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409990:	add	x0, x0, #0xd48
  409994:	bl	402f0c <ferror@plt+0x1dc>
  409998:	mov	x2, x19
  40999c:	mov	x1, x24
  4099a0:	mov	x0, x21
  4099a4:	bl	402630 <memmove@plt>
  4099a8:	add	x19, x19, #0x8
  4099ac:	add	x19, x21, x19
  4099b0:	sub	x23, x23, x25
  4099b4:	cmp	x23, #0x0
  4099b8:	b.gt	409944 <ferror@plt+0x6c14>
  4099bc:	add	x19, x19, x23
  4099c0:	b	40995c <ferror@plt+0x6c2c>
  4099c4:	sub	x19, x25, x24
  4099c8:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  4099cc:	b	409914 <ferror@plt+0x6be4>
  4099d0:	cbz	x1, 409aec <ferror@plt+0x6dbc>
  4099d4:	stp	x29, x30, [sp, #-64]!
  4099d8:	mov	x29, sp
  4099dc:	stp	x19, x20, [sp, #16]
  4099e0:	stp	x21, x22, [sp, #32]
  4099e4:	mov	x21, x0
  4099e8:	mov	x19, x1
  4099ec:	ldr	x0, [x0, #8]
  4099f0:	ldr	x1, [x21]
  4099f4:	sub	x20, x0, x1
  4099f8:	asr	x22, x20, #3
  4099fc:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
  409a00:	sub	x2, x1, x22
  409a04:	ldr	x1, [x21, #16]
  409a08:	sub	x1, x1, x0
  409a0c:	cmp	x19, x1, asr #3
  409a10:	b.hi	409a40 <ferror@plt+0x6d10>  // b.pmore
  409a14:	mov	x2, #0x0                   	// #0
  409a18:	str	xzr, [x0, x2, lsl #3]
  409a1c:	add	x2, x2, #0x1
  409a20:	cmp	x19, x2
  409a24:	b.ne	409a18 <ferror@plt+0x6ce8>  // b.any
  409a28:	add	x2, x0, x2, lsl #3
  409a2c:	str	x2, [x21, #8]
  409a30:	ldp	x19, x20, [sp, #16]
  409a34:	ldp	x21, x22, [sp, #32]
  409a38:	ldp	x29, x30, [sp], #64
  409a3c:	ret
  409a40:	stp	x23, x24, [sp, #48]
  409a44:	cmp	x2, x19
  409a48:	b.cc	409aac <ferror@plt+0x6d7c>  // b.lo, b.ul, b.last
  409a4c:	cmp	x22, x19
  409a50:	csel	x0, x22, x19, cs  // cs = hs, nlast
  409a54:	mov	x24, #0xfffffffffffffff     	// #1152921504606846975
  409a58:	adds	x0, x0, x22
  409a5c:	b.cs	409a68 <ferror@plt+0x6d38>  // b.hs, b.nlast
  409a60:	cmp	x0, x24
  409a64:	csel	x24, x0, x24, ls  // ls = plast
  409a68:	lsl	x24, x24, #3
  409a6c:	mov	x0, x24
  409a70:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  409a74:	mov	x23, x0
  409a78:	add	x1, x0, x20
  409a7c:	mov	x20, #0x0                   	// #0
  409a80:	str	xzr, [x1, x20, lsl #3]
  409a84:	add	x20, x20, #0x1
  409a88:	cmp	x19, x20
  409a8c:	b.ne	409a80 <ferror@plt+0x6d50>  // b.any
  409a90:	ldr	x19, [x21]
  409a94:	ldr	x2, [x21, #8]
  409a98:	sub	x2, x2, x19
  409a9c:	cmp	x2, #0x0
  409aa0:	b.gt	409ab8 <ferror@plt+0x6d88>
  409aa4:	cbz	x19, 409acc <ferror@plt+0x6d9c>
  409aa8:	b	409ac4 <ferror@plt+0x6d94>
  409aac:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409ab0:	add	x0, x0, #0xd68
  409ab4:	bl	402f0c <ferror@plt+0x1dc>
  409ab8:	mov	x1, x19
  409abc:	mov	x0, x23
  409ac0:	bl	402630 <memmove@plt>
  409ac4:	mov	x0, x19
  409ac8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409acc:	str	x23, [x21]
  409ad0:	add	x20, x22, x20
  409ad4:	add	x20, x23, x20, lsl #3
  409ad8:	str	x20, [x21, #8]
  409adc:	add	x23, x23, x24
  409ae0:	str	x23, [x21, #16]
  409ae4:	ldp	x23, x24, [sp, #48]
  409ae8:	b	409a30 <ferror@plt+0x6d00>
  409aec:	ret
  409af0:	stp	x29, x30, [sp, #-32]!
  409af4:	mov	x29, sp
  409af8:	stp	x19, x20, [sp, #16]
  409afc:	mov	x20, x0
  409b00:	mov	x19, x1
  409b04:	cbz	x1, 409b24 <ferror@plt+0x6df4>
  409b08:	ldr	x1, [x19, #24]
  409b0c:	mov	x0, x20
  409b10:	bl	409af0 <ferror@plt+0x6dc0>
  409b14:	mov	x0, x19
  409b18:	ldr	x19, [x19, #16]
  409b1c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409b20:	cbnz	x19, 409b08 <ferror@plt+0x6dd8>
  409b24:	ldp	x19, x20, [sp, #16]
  409b28:	ldp	x29, x30, [sp], #32
  409b2c:	ret
  409b30:	stp	x29, x30, [sp, #-16]!
  409b34:	mov	x29, sp
  409b38:	ldr	x1, [x0, #16]
  409b3c:	bl	409af0 <ferror@plt+0x6dc0>
  409b40:	ldp	x29, x30, [sp], #16
  409b44:	ret
  409b48:	stp	x29, x30, [sp, #-80]!
  409b4c:	mov	x29, sp
  409b50:	stp	x19, x20, [sp, #16]
  409b54:	stp	x21, x22, [sp, #32]
  409b58:	stp	x23, x24, [sp, #48]
  409b5c:	stp	x25, x26, [sp, #64]
  409b60:	mov	x25, x1
  409b64:	mov	x26, x2
  409b68:	ldr	x23, [x0, #8]
  409b6c:	ldr	x24, [x0]
  409b70:	sub	x1, x23, x24
  409b74:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  409b78:	cmp	x2, x1, asr #3
  409b7c:	b.eq	409c28 <ferror@plt+0x6ef8>  // b.none
  409b80:	mov	x20, x0
  409b84:	asr	x0, x1, #3
  409b88:	cmp	x0, #0x0
  409b8c:	csinc	x3, x0, xzr, ne  // ne = any
  409b90:	adds	x3, x3, x0
  409b94:	b.cs	409c60 <ferror@plt+0x6f30>  // b.hs, b.nlast
  409b98:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  409b9c:	cmp	x3, x22
  409ba0:	csel	x22, x3, x22, ls  // ls = plast
  409ba4:	sub	x19, x25, x24
  409ba8:	mov	x21, #0x0                   	// #0
  409bac:	cbz	x3, 409bbc <ferror@plt+0x6e8c>
  409bb0:	lsl	x0, x22, #3
  409bb4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  409bb8:	mov	x21, x0
  409bbc:	ldr	x0, [x26]
  409bc0:	str	x0, [x21, x19]
  409bc4:	cmp	x19, #0x0
  409bc8:	b.gt	409c34 <ferror@plt+0x6f04>
  409bcc:	add	x19, x19, #0x8
  409bd0:	add	x19, x21, x19
  409bd4:	sub	x23, x23, x25
  409bd8:	cmp	x23, #0x0
  409bdc:	b.le	409bf0 <ferror@plt+0x6ec0>
  409be0:	mov	x2, x23
  409be4:	mov	x1, x25
  409be8:	mov	x0, x19
  409bec:	bl	402620 <memcpy@plt>
  409bf0:	add	x19, x19, x23
  409bf4:	cbz	x24, 409c00 <ferror@plt+0x6ed0>
  409bf8:	mov	x0, x24
  409bfc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409c00:	str	x21, [x20]
  409c04:	str	x19, [x20, #8]
  409c08:	add	x21, x21, x22, lsl #3
  409c0c:	str	x21, [x20, #16]
  409c10:	ldp	x19, x20, [sp, #16]
  409c14:	ldp	x21, x22, [sp, #32]
  409c18:	ldp	x23, x24, [sp, #48]
  409c1c:	ldp	x25, x26, [sp, #64]
  409c20:	ldp	x29, x30, [sp], #80
  409c24:	ret
  409c28:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409c2c:	add	x0, x0, #0xd48
  409c30:	bl	402f0c <ferror@plt+0x1dc>
  409c34:	mov	x2, x19
  409c38:	mov	x1, x24
  409c3c:	mov	x0, x21
  409c40:	bl	402630 <memmove@plt>
  409c44:	add	x19, x19, #0x8
  409c48:	add	x19, x21, x19
  409c4c:	sub	x23, x23, x25
  409c50:	cmp	x23, #0x0
  409c54:	b.gt	409be0 <ferror@plt+0x6eb0>
  409c58:	add	x19, x19, x23
  409c5c:	b	409bf8 <ferror@plt+0x6ec8>
  409c60:	sub	x19, x25, x24
  409c64:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  409c68:	b	409bb0 <ferror@plt+0x6e80>
  409c6c:	stp	x29, x30, [sp, #-48]!
  409c70:	mov	x29, sp
  409c74:	stp	x19, x20, [sp, #16]
  409c78:	stp	x21, x22, [sp, #32]
  409c7c:	mov	x19, x0
  409c80:	mov	x0, x1
  409c84:	and	w22, w2, #0xff
  409c88:	str	xzr, [x19, #16]
  409c8c:	str	xzr, [x19, #24]
  409c90:	str	wzr, [x19, #32]
  409c94:	str	wzr, [x19, #36]
  409c98:	strb	w22, [x19, #44]
  409c9c:	bl	40dcb0 <ferror@plt+0xaf80>
  409ca0:	mov	w20, w0
  409ca4:	ubfiz	x1, x20, #4, #32
  409ca8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409cac:	add	x0, x0, #0xf98
  409cb0:	ldr	w21, [x0, x1]
  409cb4:	cbnz	w22, 409cf8 <ferror@plt+0x6fc8>
  409cb8:	mov	x1, #0x10                  	// #16
  409cbc:	mov	x0, x21
  409cc0:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  409cc4:	cbz	x21, 409cdc <ferror@plt+0x6fac>
  409cc8:	mov	x1, x0
  409ccc:	add	x2, x0, x21, lsl #4
  409cd0:	str	xzr, [x1], #16
  409cd4:	cmp	x1, x2
  409cd8:	b.ne	409cd0 <ferror@plt+0x6fa0>  // b.any
  409cdc:	str	x0, [x19]
  409ce0:	str	x21, [x19, #8]
  409ce4:	str	w20, [x19, #40]
  409ce8:	ldp	x19, x20, [sp, #16]
  409cec:	ldp	x21, x22, [sp, #32]
  409cf0:	ldp	x29, x30, [sp], #48
  409cf4:	ret
  409cf8:	mov	x3, #0x0                   	// #0
  409cfc:	mov	x2, #0x0                   	// #0
  409d00:	mov	x1, #0x0                   	// #0
  409d04:	lsl	x0, x21, #4
  409d08:	bl	40e0f8 <ferror@plt+0xb3c8>
  409d0c:	cbnz	x0, 409cc4 <ferror@plt+0x6f94>
  409d10:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409d14:	add	x2, x2, #0xd88
  409d18:	mov	w1, #0x2b5                 	// #693
  409d1c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409d20:	add	x0, x0, #0xd98
  409d24:	bl	4102b4 <ferror@plt+0xd584>
  409d28:	cbz	x1, 409ee8 <ferror@plt+0x71b8>
  409d2c:	stp	x29, x30, [sp, #-80]!
  409d30:	mov	x29, sp
  409d34:	stp	x19, x20, [sp, #16]
  409d38:	stp	x21, x22, [sp, #32]
  409d3c:	stp	x23, x24, [sp, #48]
  409d40:	mov	x22, x0
  409d44:	mov	x21, x1
  409d48:	ldr	x24, [x0, #8]
  409d4c:	ldr	x19, [x0]
  409d50:	sub	x19, x24, x19
  409d54:	asr	x23, x19, #6
  409d58:	mov	x0, #0x1ffffffffffffff     	// #144115188075855871
  409d5c:	sub	x1, x0, x23
  409d60:	ldr	x0, [x22, #16]
  409d64:	sub	x0, x0, x24
  409d68:	cmp	x21, x0, asr #6
  409d6c:	b.hi	409da8 <ferror@plt+0x7078>  // b.pmore
  409d70:	mov	x20, x24
  409d74:	mov	x19, x21
  409d78:	mov	x0, x20
  409d7c:	bl	4047d0 <ferror@plt+0x1aa0>
  409d80:	add	x20, x20, #0x40
  409d84:	subs	x19, x19, #0x1
  409d88:	b.ne	409d78 <ferror@plt+0x7048>  // b.any
  409d8c:	add	x21, x24, x21, lsl #6
  409d90:	str	x21, [x22, #8]
  409d94:	ldp	x19, x20, [sp, #16]
  409d98:	ldp	x21, x22, [sp, #32]
  409d9c:	ldp	x23, x24, [sp, #48]
  409da0:	ldp	x29, x30, [sp], #80
  409da4:	ret
  409da8:	stp	x25, x26, [sp, #64]
  409dac:	cmp	x1, x21
  409db0:	b.cc	409e14 <ferror@plt+0x70e4>  // b.lo, b.ul, b.last
  409db4:	cmp	x23, x21
  409db8:	csel	x0, x23, x21, cs  // cs = hs, nlast
  409dbc:	mov	x26, #0x1ffffffffffffff     	// #144115188075855871
  409dc0:	adds	x0, x0, x23
  409dc4:	b.cs	409dd0 <ferror@plt+0x70a0>  // b.hs, b.nlast
  409dc8:	cmp	x0, x26
  409dcc:	csel	x26, x0, x26, ls  // ls = plast
  409dd0:	lsl	x26, x26, #6
  409dd4:	mov	x0, x26
  409dd8:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  409ddc:	mov	x25, x0
  409de0:	add	x19, x0, x19
  409de4:	mov	x20, x21
  409de8:	mov	x0, x19
  409dec:	bl	4047d0 <ferror@plt+0x1aa0>
  409df0:	add	x19, x19, #0x40
  409df4:	subs	x20, x20, #0x1
  409df8:	b.ne	409de8 <ferror@plt+0x70b8>  // b.any
  409dfc:	ldr	x19, [x22]
  409e00:	ldr	x24, [x22, #8]
  409e04:	cmp	x19, x24
  409e08:	b.eq	409ebc <ferror@plt+0x718c>  // b.none
  409e0c:	mov	x20, x25
  409e10:	b	409e34 <ferror@plt+0x7104>
  409e14:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  409e18:	add	x0, x0, #0xd68
  409e1c:	bl	402f0c <ferror@plt+0x1dc>
  409e20:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409e24:	add	x19, x19, #0x40
  409e28:	add	x20, x20, #0x40
  409e2c:	cmp	x24, x19
  409e30:	b.eq	409ebc <ferror@plt+0x718c>  // b.none
  409e34:	ldr	x0, [x19]
  409e38:	str	x0, [x20]
  409e3c:	ldr	x0, [x19, #8]
  409e40:	str	x0, [x20, #8]
  409e44:	ldr	x0, [x19, #16]
  409e48:	str	x0, [x20, #16]
  409e4c:	ldr	x0, [x19, #24]
  409e50:	str	x0, [x20, #24]
  409e54:	str	xzr, [x19, #24]
  409e58:	str	xzr, [x19, #16]
  409e5c:	str	xzr, [x19, #8]
  409e60:	ldr	x0, [x19, #32]
  409e64:	str	x0, [x20, #32]
  409e68:	ldr	x0, [x19, #40]
  409e6c:	str	x0, [x20, #40]
  409e70:	ldr	x0, [x19, #48]
  409e74:	str	x0, [x20, #48]
  409e78:	str	xzr, [x19, #48]
  409e7c:	str	xzr, [x19, #40]
  409e80:	str	xzr, [x19, #32]
  409e84:	ldrb	w0, [x19, #56]
  409e88:	ldrb	w2, [x20, #56]
  409e8c:	bfxil	w2, w0, #0, #1
  409e90:	ubfx	x1, x0, #1, #1
  409e94:	bfi	w2, w1, #1, #1
  409e98:	ubfx	x0, x0, #2, #1
  409e9c:	bfi	w2, w0, #2, #1
  409ea0:	strb	w2, [x20, #56]
  409ea4:	ldr	x0, [x19, #32]
  409ea8:	cbz	x0, 409eb0 <ferror@plt+0x7180>
  409eac:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409eb0:	ldr	x0, [x19, #8]
  409eb4:	cbnz	x0, 409e20 <ferror@plt+0x70f0>
  409eb8:	b	409e24 <ferror@plt+0x70f4>
  409ebc:	ldr	x0, [x22]
  409ec0:	cbz	x0, 409ec8 <ferror@plt+0x7198>
  409ec4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  409ec8:	str	x25, [x22]
  409ecc:	add	x21, x23, x21
  409ed0:	add	x21, x25, x21, lsl #6
  409ed4:	str	x21, [x22, #8]
  409ed8:	add	x25, x25, x26
  409edc:	str	x25, [x22, #16]
  409ee0:	ldp	x25, x26, [sp, #64]
  409ee4:	b	409d94 <ferror@plt+0x7064>
  409ee8:	ret
  409eec:	cbz	x1, 40a168 <ferror@plt+0x7438>
  409ef0:	stp	x29, x30, [sp, #-96]!
  409ef4:	mov	x29, sp
  409ef8:	stp	x19, x20, [sp, #16]
  409efc:	stp	x21, x22, [sp, #32]
  409f00:	stp	x23, x24, [sp, #48]
  409f04:	stp	x25, x26, [sp, #64]
  409f08:	mov	x23, x0
  409f0c:	mov	x22, x1
  409f10:	ldr	x21, [x0, #8]
  409f14:	ldr	x19, [x0]
  409f18:	sub	x19, x21, x19
  409f1c:	asr	x25, x19, #4
  409f20:	mov	x2, #0x8e39                	// #36409
  409f24:	movk	x2, #0x38e3, lsl #16
  409f28:	movk	x2, #0xe38e, lsl #32
  409f2c:	movk	x2, #0x8e38, lsl #48
  409f30:	mul	x25, x25, x2
  409f34:	mov	x1, #0x38e3                	// #14563
  409f38:	movk	x1, #0xe38e, lsl #16
  409f3c:	movk	x1, #0x8e38, lsl #32
  409f40:	movk	x1, #0xe3, lsl #48
  409f44:	sub	x1, x1, x25
  409f48:	ldr	x0, [x0, #16]
  409f4c:	sub	x0, x0, x21
  409f50:	asr	x0, x0, #4
  409f54:	mul	x0, x0, x2
  409f58:	cmp	x0, x22
  409f5c:	b.cc	409fa0 <ferror@plt+0x7270>  // b.lo, b.ul, b.last
  409f60:	mov	x20, x21
  409f64:	mov	x19, x22
  409f68:	mov	x0, x20
  409f6c:	bl	4048cc <ferror@plt+0x1b9c>
  409f70:	add	x20, x20, #0x90
  409f74:	subs	x19, x19, #0x1
  409f78:	b.ne	409f68 <ferror@plt+0x7238>  // b.any
  409f7c:	add	x22, x22, x22, lsl #3
  409f80:	add	x21, x21, x22, lsl #4
  409f84:	str	x21, [x23, #8]
  409f88:	ldp	x19, x20, [sp, #16]
  409f8c:	ldp	x21, x22, [sp, #32]
  409f90:	ldp	x23, x24, [sp, #48]
  409f94:	ldp	x25, x26, [sp, #64]
  409f98:	ldp	x29, x30, [sp], #96
  409f9c:	ret
  409fa0:	stp	x27, x28, [sp, #80]
  409fa4:	cmp	x1, x22
  409fa8:	b.cc	40a01c <ferror@plt+0x72ec>  // b.lo, b.ul, b.last
  409fac:	cmp	x25, x22
  409fb0:	csel	x0, x25, x22, cs  // cs = hs, nlast
  409fb4:	adds	x0, x0, x25
  409fb8:	b.cs	40a028 <ferror@plt+0x72f8>  // b.hs, b.nlast
  409fbc:	mov	x26, #0x38e3                	// #14563
  409fc0:	movk	x26, #0xe38e, lsl #16
  409fc4:	movk	x26, #0x8e38, lsl #32
  409fc8:	movk	x26, #0xe3, lsl #48
  409fcc:	cmp	x0, x26
  409fd0:	csel	x26, x0, x26, ls  // ls = plast
  409fd4:	add	x26, x26, x26, lsl #3
  409fd8:	lsl	x26, x26, #4
  409fdc:	mov	x0, x26
  409fe0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  409fe4:	mov	x28, x0
  409fe8:	add	x19, x0, x19
  409fec:	mov	x20, x22
  409ff0:	mov	x0, x19
  409ff4:	bl	4048cc <ferror@plt+0x1b9c>
  409ff8:	add	x19, x19, #0x90
  409ffc:	subs	x20, x20, #0x1
  40a000:	b.ne	409ff0 <ferror@plt+0x72c0>  // b.any
  40a004:	ldr	x19, [x23]
  40a008:	ldr	x27, [x23, #8]
  40a00c:	cmp	x19, x27
  40a010:	b.eq	40a138 <ferror@plt+0x7408>  // b.none
  40a014:	mov	x20, x28
  40a018:	b	40a080 <ferror@plt+0x7350>
  40a01c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a020:	add	x0, x0, #0xd68
  40a024:	bl	402f0c <ferror@plt+0x1dc>
  40a028:	mov	x26, #0x38e3                	// #14563
  40a02c:	movk	x26, #0xe38e, lsl #16
  40a030:	movk	x26, #0x8e38, lsl #32
  40a034:	movk	x26, #0xe3, lsl #48
  40a038:	b	409fd4 <ferror@plt+0x72a4>
  40a03c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a040:	add	x21, x21, #0x40
  40a044:	cmp	x24, x21
  40a048:	b.eq	40a064 <ferror@plt+0x7334>  // b.none
  40a04c:	ldr	x0, [x21, #32]
  40a050:	cbz	x0, 40a058 <ferror@plt+0x7328>
  40a054:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a058:	ldr	x0, [x21, #8]
  40a05c:	cbnz	x0, 40a03c <ferror@plt+0x730c>
  40a060:	b	40a040 <ferror@plt+0x7310>
  40a064:	ldr	x0, [x19, #24]
  40a068:	cbz	x0, 40a070 <ferror@plt+0x7340>
  40a06c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a070:	add	x19, x19, #0x90
  40a074:	add	x20, x20, #0x90
  40a078:	cmp	x27, x19
  40a07c:	b.eq	40a138 <ferror@plt+0x7408>  // b.none
  40a080:	ldr	w0, [x19]
  40a084:	str	w0, [x20]
  40a088:	ldr	x0, [x19, #8]
  40a08c:	str	x0, [x20, #8]
  40a090:	ldr	x0, [x19, #16]
  40a094:	str	x0, [x20, #16]
  40a098:	ldr	x0, [x19, #24]
  40a09c:	str	x0, [x20, #24]
  40a0a0:	ldr	x0, [x19, #32]
  40a0a4:	str	x0, [x20, #32]
  40a0a8:	ldr	x0, [x19, #40]
  40a0ac:	str	x0, [x20, #40]
  40a0b0:	str	xzr, [x19, #40]
  40a0b4:	str	xzr, [x19, #32]
  40a0b8:	str	xzr, [x19, #24]
  40a0bc:	ldp	x2, x3, [x19, #48]
  40a0c0:	stp	x2, x3, [x20, #48]
  40a0c4:	ldp	x2, x3, [x19, #64]
  40a0c8:	stp	x2, x3, [x20, #64]
  40a0cc:	ldr	x1, [x19, #80]
  40a0d0:	str	x1, [x20, #80]
  40a0d4:	ldr	w0, [x19, #88]
  40a0d8:	str	w0, [x20, #88]
  40a0dc:	ldr	x0, [x19, #96]
  40a0e0:	str	x0, [x20, #96]
  40a0e4:	ldr	x0, [x19, #104]
  40a0e8:	str	x0, [x20, #104]
  40a0ec:	ldr	x0, [x19, #112]
  40a0f0:	str	x0, [x20, #112]
  40a0f4:	str	xzr, [x19, #112]
  40a0f8:	str	xzr, [x19, #104]
  40a0fc:	str	xzr, [x19, #96]
  40a100:	ldr	x0, [x19, #120]
  40a104:	str	x0, [x20, #120]
  40a108:	ldr	x0, [x19, #128]
  40a10c:	str	x0, [x20, #128]
  40a110:	ldr	x0, [x19, #136]
  40a114:	str	x0, [x20, #136]
  40a118:	ldr	x0, [x19, #96]
  40a11c:	cbz	x0, 40a124 <ferror@plt+0x73f4>
  40a120:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a124:	ldr	x21, [x19, #24]
  40a128:	ldr	x24, [x19, #32]
  40a12c:	cmp	x21, x24
  40a130:	b.ne	40a04c <ferror@plt+0x731c>  // b.any
  40a134:	b	40a064 <ferror@plt+0x7334>
  40a138:	ldr	x0, [x23]
  40a13c:	cbz	x0, 40a144 <ferror@plt+0x7414>
  40a140:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a144:	str	x28, [x23]
  40a148:	add	x22, x25, x22
  40a14c:	add	x22, x22, x22, lsl #3
  40a150:	add	x22, x28, x22, lsl #4
  40a154:	str	x22, [x23, #8]
  40a158:	add	x26, x28, x26
  40a15c:	str	x26, [x23, #16]
  40a160:	ldp	x27, x28, [sp, #80]
  40a164:	b	409f88 <ferror@plt+0x7258>
  40a168:	ret
  40a16c:	cbz	x1, 40a274 <ferror@plt+0x7544>
  40a170:	stp	x29, x30, [sp, #-64]!
  40a174:	mov	x29, sp
  40a178:	stp	x19, x20, [sp, #16]
  40a17c:	stp	x21, x22, [sp, #32]
  40a180:	mov	x20, x0
  40a184:	mov	x19, x1
  40a188:	ldr	x0, [x0, #8]
  40a18c:	ldr	x21, [x20]
  40a190:	sub	x21, x0, x21
  40a194:	asr	x21, x21, #4
  40a198:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  40a19c:	sub	x2, x1, x21
  40a1a0:	ldr	x1, [x20, #16]
  40a1a4:	sub	x1, x1, x0
  40a1a8:	cmp	x19, x1, asr #4
  40a1ac:	b.hi	40a1d4 <ferror@plt+0x74a4>  // b.pmore
  40a1b0:	mov	x2, x19
  40a1b4:	subs	x2, x2, #0x1
  40a1b8:	b.ne	40a1b4 <ferror@plt+0x7484>  // b.any
  40a1bc:	add	x19, x0, x19, lsl #4
  40a1c0:	str	x19, [x20, #8]
  40a1c4:	ldp	x19, x20, [sp, #16]
  40a1c8:	ldp	x21, x22, [sp, #32]
  40a1cc:	ldp	x29, x30, [sp], #64
  40a1d0:	ret
  40a1d4:	str	x23, [sp, #48]
  40a1d8:	cmp	x2, x19
  40a1dc:	b.cc	40a268 <ferror@plt+0x7538>  // b.lo, b.ul, b.last
  40a1e0:	cmp	x21, x19
  40a1e4:	csel	x0, x21, x19, cs  // cs = hs, nlast
  40a1e8:	mov	x23, #0x7ffffffffffffff     	// #576460752303423487
  40a1ec:	adds	x0, x0, x21
  40a1f0:	b.cs	40a1fc <ferror@plt+0x74cc>  // b.hs, b.nlast
  40a1f4:	cmp	x0, x23
  40a1f8:	csel	x23, x0, x23, ls  // ls = plast
  40a1fc:	lsl	x23, x23, #4
  40a200:	mov	x0, x23
  40a204:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a208:	mov	x22, x0
  40a20c:	mov	x1, x19
  40a210:	subs	x1, x1, #0x1
  40a214:	b.ne	40a210 <ferror@plt+0x74e0>  // b.any
  40a218:	ldr	x1, [x20]
  40a21c:	ldr	x0, [x20, #8]
  40a220:	cmp	x1, x0
  40a224:	b.eq	40a23c <ferror@plt+0x750c>  // b.none
  40a228:	mov	x2, x22
  40a22c:	ldp	x4, x5, [x1], #16
  40a230:	stp	x4, x5, [x2], #16
  40a234:	cmp	x0, x1
  40a238:	b.ne	40a22c <ferror@plt+0x74fc>  // b.any
  40a23c:	ldr	x0, [x20]
  40a240:	cbz	x0, 40a248 <ferror@plt+0x7518>
  40a244:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a248:	str	x22, [x20]
  40a24c:	add	x19, x21, x19
  40a250:	add	x19, x22, x19, lsl #4
  40a254:	str	x19, [x20, #8]
  40a258:	add	x22, x22, x23
  40a25c:	str	x22, [x20, #16]
  40a260:	ldr	x23, [sp, #48]
  40a264:	b	40a1c4 <ferror@plt+0x7494>
  40a268:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a26c:	add	x0, x0, #0xd68
  40a270:	bl	402f0c <ferror@plt+0x1dc>
  40a274:	ret
  40a278:	cbz	x1, 40a394 <ferror@plt+0x7664>
  40a27c:	stp	x29, x30, [sp, #-64]!
  40a280:	mov	x29, sp
  40a284:	stp	x19, x20, [sp, #16]
  40a288:	stp	x21, x22, [sp, #32]
  40a28c:	mov	x21, x0
  40a290:	mov	x19, x1
  40a294:	ldr	x0, [x0, #8]
  40a298:	ldr	x1, [x21]
  40a29c:	sub	x20, x0, x1
  40a2a0:	asr	x22, x20, #3
  40a2a4:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
  40a2a8:	sub	x2, x1, x22
  40a2ac:	ldr	x1, [x21, #16]
  40a2b0:	sub	x1, x1, x0
  40a2b4:	cmp	x19, x1, asr #3
  40a2b8:	b.hi	40a2e8 <ferror@plt+0x75b8>  // b.pmore
  40a2bc:	mov	x2, #0x0                   	// #0
  40a2c0:	str	xzr, [x0, x2, lsl #3]
  40a2c4:	add	x2, x2, #0x1
  40a2c8:	cmp	x19, x2
  40a2cc:	b.ne	40a2c0 <ferror@plt+0x7590>  // b.any
  40a2d0:	add	x2, x0, x2, lsl #3
  40a2d4:	str	x2, [x21, #8]
  40a2d8:	ldp	x19, x20, [sp, #16]
  40a2dc:	ldp	x21, x22, [sp, #32]
  40a2e0:	ldp	x29, x30, [sp], #64
  40a2e4:	ret
  40a2e8:	stp	x23, x24, [sp, #48]
  40a2ec:	cmp	x2, x19
  40a2f0:	b.cc	40a354 <ferror@plt+0x7624>  // b.lo, b.ul, b.last
  40a2f4:	cmp	x22, x19
  40a2f8:	csel	x0, x22, x19, cs  // cs = hs, nlast
  40a2fc:	mov	x24, #0xfffffffffffffff     	// #1152921504606846975
  40a300:	adds	x0, x0, x22
  40a304:	b.cs	40a310 <ferror@plt+0x75e0>  // b.hs, b.nlast
  40a308:	cmp	x0, x24
  40a30c:	csel	x24, x0, x24, ls  // ls = plast
  40a310:	lsl	x24, x24, #3
  40a314:	mov	x0, x24
  40a318:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a31c:	mov	x23, x0
  40a320:	add	x1, x0, x20
  40a324:	mov	x20, #0x0                   	// #0
  40a328:	str	xzr, [x1, x20, lsl #3]
  40a32c:	add	x20, x20, #0x1
  40a330:	cmp	x19, x20
  40a334:	b.ne	40a328 <ferror@plt+0x75f8>  // b.any
  40a338:	ldr	x19, [x21]
  40a33c:	ldr	x2, [x21, #8]
  40a340:	sub	x2, x2, x19
  40a344:	cmp	x2, #0x0
  40a348:	b.gt	40a360 <ferror@plt+0x7630>
  40a34c:	cbz	x19, 40a374 <ferror@plt+0x7644>
  40a350:	b	40a36c <ferror@plt+0x763c>
  40a354:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a358:	add	x0, x0, #0xd68
  40a35c:	bl	402f0c <ferror@plt+0x1dc>
  40a360:	mov	x1, x19
  40a364:	mov	x0, x23
  40a368:	bl	402630 <memmove@plt>
  40a36c:	mov	x0, x19
  40a370:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a374:	str	x23, [x21]
  40a378:	add	x20, x22, x20
  40a37c:	add	x20, x23, x20, lsl #3
  40a380:	str	x20, [x21, #8]
  40a384:	add	x23, x23, x24
  40a388:	str	x23, [x21, #16]
  40a38c:	ldp	x23, x24, [sp, #48]
  40a390:	b	40a2d8 <ferror@plt+0x75a8>
  40a394:	ret
  40a398:	stp	x29, x30, [sp, #-96]!
  40a39c:	mov	x29, sp
  40a3a0:	stp	x19, x20, [sp, #16]
  40a3a4:	stp	x21, x22, [sp, #32]
  40a3a8:	stp	x23, x24, [sp, #48]
  40a3ac:	stp	x25, x26, [sp, #64]
  40a3b0:	str	x27, [sp, #80]
  40a3b4:	mov	x22, x0
  40a3b8:	mov	x26, x2
  40a3bc:	ldr	x19, [x0, #8]
  40a3c0:	ldr	x23, [x0]
  40a3c4:	sub	x0, x19, x23
  40a3c8:	mov	x2, #0x7ffffffffffffff     	// #576460752303423487
  40a3cc:	cmp	x2, x0, asr #4
  40a3d0:	b.eq	40a4ac <ferror@plt+0x777c>  // b.none
  40a3d4:	mov	x20, x1
  40a3d8:	mov	x25, x1
  40a3dc:	asr	x1, x0, #4
  40a3e0:	cmp	x1, #0x0
  40a3e4:	csinc	x0, x1, xzr, ne  // ne = any
  40a3e8:	adds	x0, x0, x1
  40a3ec:	b.cs	40a4c0 <ferror@plt+0x7790>  // b.hs, b.nlast
  40a3f0:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  40a3f4:	cmp	x0, x24
  40a3f8:	csel	x24, x0, x24, ls  // ls = plast
  40a3fc:	sub	x27, x20, x23
  40a400:	mov	x21, #0x0                   	// #0
  40a404:	cbz	x0, 40a414 <ferror@plt+0x76e4>
  40a408:	lsl	x0, x24, #4
  40a40c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a410:	mov	x21, x0
  40a414:	add	x27, x21, x27
  40a418:	ldp	x0, x1, [x26]
  40a41c:	stp	x0, x1, [x27]
  40a420:	cmp	x20, x23
  40a424:	b.eq	40a4b8 <ferror@plt+0x7788>  // b.none
  40a428:	mov	x3, x21
  40a42c:	mov	x2, x23
  40a430:	ldp	x0, x1, [x2], #16
  40a434:	stp	x0, x1, [x3], #16
  40a438:	cmp	x25, x2
  40a43c:	b.ne	40a430 <ferror@plt+0x7700>  // b.any
  40a440:	sub	x25, x20, x23
  40a444:	add	x25, x21, x25
  40a448:	add	x25, x25, #0x10
  40a44c:	cmp	x20, x19
  40a450:	b.eq	40a474 <ferror@plt+0x7744>  // b.none
  40a454:	mov	x2, x20
  40a458:	mov	x3, x25
  40a45c:	ldp	x0, x1, [x2], #16
  40a460:	stp	x0, x1, [x3], #16
  40a464:	cmp	x2, x19
  40a468:	b.ne	40a45c <ferror@plt+0x772c>  // b.any
  40a46c:	sub	x19, x19, x20
  40a470:	add	x25, x25, x19
  40a474:	cbz	x23, 40a480 <ferror@plt+0x7750>
  40a478:	mov	x0, x23
  40a47c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a480:	str	x21, [x22]
  40a484:	str	x25, [x22, #8]
  40a488:	add	x21, x21, x24, lsl #4
  40a48c:	str	x21, [x22, #16]
  40a490:	ldp	x19, x20, [sp, #16]
  40a494:	ldp	x21, x22, [sp, #32]
  40a498:	ldp	x23, x24, [sp, #48]
  40a49c:	ldp	x25, x26, [sp, #64]
  40a4a0:	ldr	x27, [sp, #80]
  40a4a4:	ldp	x29, x30, [sp], #96
  40a4a8:	ret
  40a4ac:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a4b0:	add	x0, x0, #0xd48
  40a4b4:	bl	402f0c <ferror@plt+0x1dc>
  40a4b8:	mov	x25, x21
  40a4bc:	b	40a448 <ferror@plt+0x7718>
  40a4c0:	sub	x27, x20, x23
  40a4c4:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  40a4c8:	b	40a408 <ferror@plt+0x76d8>
  40a4cc:	cbz	x1, 40a750 <ferror@plt+0x7a20>
  40a4d0:	stp	x29, x30, [sp, #-96]!
  40a4d4:	mov	x29, sp
  40a4d8:	stp	x19, x20, [sp, #16]
  40a4dc:	stp	x21, x22, [sp, #32]
  40a4e0:	stp	x23, x24, [sp, #48]
  40a4e4:	mov	x22, x0
  40a4e8:	mov	x21, x1
  40a4ec:	ldr	x24, [x0, #8]
  40a4f0:	ldr	x19, [x0]
  40a4f4:	sub	x19, x24, x19
  40a4f8:	asr	x23, x19, #3
  40a4fc:	mov	x2, #0x4ec5                	// #20165
  40a500:	movk	x2, #0xc4ec, lsl #16
  40a504:	movk	x2, #0xec4e, lsl #32
  40a508:	movk	x2, #0x4ec4, lsl #48
  40a50c:	mul	x23, x23, x2
  40a510:	mov	x1, #0xb13b                	// #45371
  40a514:	movk	x1, #0x3b13, lsl #16
  40a518:	movk	x1, #0x13b1, lsl #32
  40a51c:	movk	x1, #0x13b, lsl #48
  40a520:	sub	x1, x1, x23
  40a524:	ldr	x0, [x0, #16]
  40a528:	sub	x0, x0, x24
  40a52c:	asr	x0, x0, #3
  40a530:	mul	x0, x0, x2
  40a534:	cmp	x0, x21
  40a538:	b.cc	40a57c <ferror@plt+0x784c>  // b.lo, b.ul, b.last
  40a53c:	mov	x20, x24
  40a540:	mov	x19, x21
  40a544:	mov	x0, x20
  40a548:	bl	404794 <ferror@plt+0x1a64>
  40a54c:	add	x20, x20, #0x68
  40a550:	subs	x19, x19, #0x1
  40a554:	b.ne	40a544 <ferror@plt+0x7814>  // b.any
  40a558:	add	x0, x21, x21, lsl #1
  40a55c:	add	x21, x21, x0, lsl #2
  40a560:	add	x24, x24, x21, lsl #3
  40a564:	str	x24, [x22, #8]
  40a568:	ldp	x19, x20, [sp, #16]
  40a56c:	ldp	x21, x22, [sp, #32]
  40a570:	ldp	x23, x24, [sp, #48]
  40a574:	ldp	x29, x30, [sp], #96
  40a578:	ret
  40a57c:	cmp	x1, x21
  40a580:	b.cc	40a600 <ferror@plt+0x78d0>  // b.lo, b.ul, b.last
  40a584:	stp	x25, x26, [sp, #64]
  40a588:	cmp	x23, x21
  40a58c:	csel	x0, x23, x21, cs  // cs = hs, nlast
  40a590:	adds	x0, x0, x23
  40a594:	b.cs	40a614 <ferror@plt+0x78e4>  // b.hs, b.nlast
  40a598:	mov	x26, #0xb13b                	// #45371
  40a59c:	movk	x26, #0x3b13, lsl #16
  40a5a0:	movk	x26, #0x13b1, lsl #32
  40a5a4:	movk	x26, #0x13b, lsl #48
  40a5a8:	cmp	x0, x26
  40a5ac:	csel	x0, x0, x26, ls  // ls = plast
  40a5b0:	add	x26, x0, x0, lsl #1
  40a5b4:	add	x26, x0, x26, lsl #2
  40a5b8:	lsl	x26, x26, #3
  40a5bc:	mov	x0, x26
  40a5c0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a5c4:	mov	x25, x0
  40a5c8:	add	x19, x0, x19
  40a5cc:	mov	x20, x21
  40a5d0:	mov	x0, x19
  40a5d4:	bl	404794 <ferror@plt+0x1a64>
  40a5d8:	add	x19, x19, #0x68
  40a5dc:	subs	x20, x20, #0x1
  40a5e0:	b.ne	40a5d0 <ferror@plt+0x78a0>  // b.any
  40a5e4:	ldr	x19, [x22]
  40a5e8:	ldr	x24, [x22, #8]
  40a5ec:	cmp	x19, x24
  40a5f0:	b.eq	40a71c <ferror@plt+0x79ec>  // b.none
  40a5f4:	stp	x27, x28, [sp, #80]
  40a5f8:	mov	x20, x25
  40a5fc:	b	40a660 <ferror@plt+0x7930>
  40a600:	stp	x25, x26, [sp, #64]
  40a604:	stp	x27, x28, [sp, #80]
  40a608:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a60c:	add	x0, x0, #0xd68
  40a610:	bl	402f0c <ferror@plt+0x1dc>
  40a614:	mov	x0, #0xb13b                	// #45371
  40a618:	movk	x0, #0x3b13, lsl #16
  40a61c:	movk	x0, #0x13b1, lsl #32
  40a620:	movk	x0, #0x13b, lsl #48
  40a624:	b	40a5b0 <ferror@plt+0x7880>
  40a628:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a62c:	add	x27, x27, #0x20
  40a630:	cmp	x28, x27
  40a634:	b.eq	40a644 <ferror@plt+0x7914>  // b.none
  40a638:	ldr	x0, [x27, #8]
  40a63c:	cbnz	x0, 40a628 <ferror@plt+0x78f8>
  40a640:	b	40a62c <ferror@plt+0x78fc>
  40a644:	ldr	x0, [x19, #56]
  40a648:	cbz	x0, 40a650 <ferror@plt+0x7920>
  40a64c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a650:	add	x19, x19, #0x68
  40a654:	add	x20, x20, #0x68
  40a658:	cmp	x24, x19
  40a65c:	b.eq	40a718 <ferror@plt+0x79e8>  // b.none
  40a660:	ldr	x0, [x19]
  40a664:	str	x0, [x20]
  40a668:	ldr	x0, [x19, #8]
  40a66c:	str	x0, [x20, #8]
  40a670:	ldr	x0, [x19, #16]
  40a674:	str	x0, [x20, #16]
  40a678:	ldr	x0, [x19, #24]
  40a67c:	str	x0, [x20, #24]
  40a680:	ldr	w0, [x19, #32]
  40a684:	str	w0, [x20, #32]
  40a688:	ldr	x0, [x19, #40]
  40a68c:	str	x0, [x20, #40]
  40a690:	ldrb	w0, [x19, #48]
  40a694:	ldrb	w2, [x20, #48]
  40a698:	bfxil	w2, w0, #0, #1
  40a69c:	ubfx	x1, x0, #1, #1
  40a6a0:	bfi	w2, w1, #1, #1
  40a6a4:	ubfx	x1, x0, #2, #1
  40a6a8:	bfi	w2, w1, #2, #1
  40a6ac:	ubfx	x1, x0, #3, #1
  40a6b0:	bfi	w2, w1, #3, #1
  40a6b4:	ubfx	x1, x0, #4, #1
  40a6b8:	bfi	w2, w1, #4, #1
  40a6bc:	ubfx	x1, x0, #5, #1
  40a6c0:	bfi	w2, w1, #5, #1
  40a6c4:	ubfx	x0, x0, #6, #1
  40a6c8:	bfi	w2, w0, #6, #1
  40a6cc:	strb	w2, [x20, #48]
  40a6d0:	ldr	x0, [x19, #56]
  40a6d4:	str	x0, [x20, #56]
  40a6d8:	ldr	x0, [x19, #64]
  40a6dc:	str	x0, [x20, #64]
  40a6e0:	ldr	x0, [x19, #72]
  40a6e4:	str	x0, [x20, #72]
  40a6e8:	str	xzr, [x19, #72]
  40a6ec:	str	xzr, [x19, #64]
  40a6f0:	str	xzr, [x19, #56]
  40a6f4:	ldp	x0, x1, [x19, #80]
  40a6f8:	stp	x0, x1, [x20, #80]
  40a6fc:	ldr	x0, [x19, #96]
  40a700:	str	x0, [x20, #96]
  40a704:	ldr	x27, [x19, #56]
  40a708:	ldr	x28, [x19, #64]
  40a70c:	cmp	x27, x28
  40a710:	b.ne	40a638 <ferror@plt+0x7908>  // b.any
  40a714:	b	40a644 <ferror@plt+0x7914>
  40a718:	ldp	x27, x28, [sp, #80]
  40a71c:	ldr	x0, [x22]
  40a720:	cbz	x0, 40a728 <ferror@plt+0x79f8>
  40a724:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a728:	str	x25, [x22]
  40a72c:	add	x21, x23, x21
  40a730:	add	x23, x21, x21, lsl #1
  40a734:	add	x21, x21, x23, lsl #2
  40a738:	add	x21, x25, x21, lsl #3
  40a73c:	str	x21, [x22, #8]
  40a740:	add	x25, x25, x26
  40a744:	str	x25, [x22, #16]
  40a748:	ldp	x25, x26, [sp, #64]
  40a74c:	b	40a568 <ferror@plt+0x7838>
  40a750:	ret
  40a754:	stp	x29, x30, [sp, #-80]!
  40a758:	mov	x29, sp
  40a75c:	stp	x19, x20, [sp, #16]
  40a760:	stp	x21, x22, [sp, #32]
  40a764:	stp	x23, x24, [sp, #48]
  40a768:	stp	x25, x26, [sp, #64]
  40a76c:	mov	x25, x1
  40a770:	mov	x26, x2
  40a774:	ldr	x23, [x0, #8]
  40a778:	ldr	x24, [x0]
  40a77c:	sub	x1, x23, x24
  40a780:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  40a784:	cmp	x2, x1, asr #2
  40a788:	b.eq	40a834 <ferror@plt+0x7b04>  // b.none
  40a78c:	mov	x20, x0
  40a790:	asr	x0, x1, #2
  40a794:	cmp	x0, #0x0
  40a798:	csinc	x3, x0, xzr, ne  // ne = any
  40a79c:	adds	x3, x3, x0
  40a7a0:	b.cs	40a86c <ferror@plt+0x7b3c>  // b.hs, b.nlast
  40a7a4:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  40a7a8:	cmp	x3, x22
  40a7ac:	csel	x22, x3, x22, ls  // ls = plast
  40a7b0:	sub	x19, x25, x24
  40a7b4:	mov	x21, #0x0                   	// #0
  40a7b8:	cbz	x3, 40a7c8 <ferror@plt+0x7a98>
  40a7bc:	lsl	x0, x22, #2
  40a7c0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a7c4:	mov	x21, x0
  40a7c8:	ldr	w0, [x26]
  40a7cc:	str	w0, [x21, x19]
  40a7d0:	cmp	x19, #0x0
  40a7d4:	b.gt	40a840 <ferror@plt+0x7b10>
  40a7d8:	add	x19, x19, #0x4
  40a7dc:	add	x19, x21, x19
  40a7e0:	sub	x23, x23, x25
  40a7e4:	cmp	x23, #0x0
  40a7e8:	b.le	40a7fc <ferror@plt+0x7acc>
  40a7ec:	mov	x2, x23
  40a7f0:	mov	x1, x25
  40a7f4:	mov	x0, x19
  40a7f8:	bl	402620 <memcpy@plt>
  40a7fc:	add	x19, x19, x23
  40a800:	cbz	x24, 40a80c <ferror@plt+0x7adc>
  40a804:	mov	x0, x24
  40a808:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a80c:	str	x21, [x20]
  40a810:	str	x19, [x20, #8]
  40a814:	add	x21, x21, x22, lsl #2
  40a818:	str	x21, [x20, #16]
  40a81c:	ldp	x19, x20, [sp, #16]
  40a820:	ldp	x21, x22, [sp, #32]
  40a824:	ldp	x23, x24, [sp, #48]
  40a828:	ldp	x25, x26, [sp, #64]
  40a82c:	ldp	x29, x30, [sp], #80
  40a830:	ret
  40a834:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a838:	add	x0, x0, #0xd48
  40a83c:	bl	402f0c <ferror@plt+0x1dc>
  40a840:	mov	x2, x19
  40a844:	mov	x1, x24
  40a848:	mov	x0, x21
  40a84c:	bl	402630 <memmove@plt>
  40a850:	add	x19, x19, #0x4
  40a854:	add	x19, x21, x19
  40a858:	sub	x23, x23, x25
  40a85c:	cmp	x23, #0x0
  40a860:	b.gt	40a7ec <ferror@plt+0x7abc>
  40a864:	add	x19, x19, x23
  40a868:	b	40a804 <ferror@plt+0x7ad4>
  40a86c:	sub	x19, x25, x24
  40a870:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  40a874:	b	40a7bc <ferror@plt+0x7a8c>
  40a878:	stp	x29, x30, [sp, #-80]!
  40a87c:	mov	x29, sp
  40a880:	stp	x19, x20, [sp, #16]
  40a884:	stp	x21, x22, [sp, #32]
  40a888:	stp	x23, x24, [sp, #48]
  40a88c:	stp	x25, x26, [sp, #64]
  40a890:	mov	x25, x1
  40a894:	mov	x26, x2
  40a898:	ldr	x23, [x0, #8]
  40a89c:	ldr	x24, [x0]
  40a8a0:	sub	x1, x23, x24
  40a8a4:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  40a8a8:	cmp	x2, x1, asr #3
  40a8ac:	b.eq	40a958 <ferror@plt+0x7c28>  // b.none
  40a8b0:	mov	x20, x0
  40a8b4:	asr	x0, x1, #3
  40a8b8:	cmp	x0, #0x0
  40a8bc:	csinc	x3, x0, xzr, ne  // ne = any
  40a8c0:	adds	x3, x3, x0
  40a8c4:	b.cs	40a990 <ferror@plt+0x7c60>  // b.hs, b.nlast
  40a8c8:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40a8cc:	cmp	x3, x22
  40a8d0:	csel	x22, x3, x22, ls  // ls = plast
  40a8d4:	sub	x19, x25, x24
  40a8d8:	mov	x21, #0x0                   	// #0
  40a8dc:	cbz	x3, 40a8ec <ferror@plt+0x7bbc>
  40a8e0:	lsl	x0, x22, #3
  40a8e4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40a8e8:	mov	x21, x0
  40a8ec:	ldr	x0, [x26]
  40a8f0:	str	x0, [x21, x19]
  40a8f4:	cmp	x19, #0x0
  40a8f8:	b.gt	40a964 <ferror@plt+0x7c34>
  40a8fc:	add	x19, x19, #0x8
  40a900:	add	x19, x21, x19
  40a904:	sub	x23, x23, x25
  40a908:	cmp	x23, #0x0
  40a90c:	b.le	40a920 <ferror@plt+0x7bf0>
  40a910:	mov	x2, x23
  40a914:	mov	x1, x25
  40a918:	mov	x0, x19
  40a91c:	bl	402620 <memcpy@plt>
  40a920:	add	x19, x19, x23
  40a924:	cbz	x24, 40a930 <ferror@plt+0x7c00>
  40a928:	mov	x0, x24
  40a92c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40a930:	str	x21, [x20]
  40a934:	str	x19, [x20, #8]
  40a938:	add	x21, x21, x22, lsl #3
  40a93c:	str	x21, [x20, #16]
  40a940:	ldp	x19, x20, [sp, #16]
  40a944:	ldp	x21, x22, [sp, #32]
  40a948:	ldp	x23, x24, [sp, #48]
  40a94c:	ldp	x25, x26, [sp, #64]
  40a950:	ldp	x29, x30, [sp], #80
  40a954:	ret
  40a958:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40a95c:	add	x0, x0, #0xd48
  40a960:	bl	402f0c <ferror@plt+0x1dc>
  40a964:	mov	x2, x19
  40a968:	mov	x1, x24
  40a96c:	mov	x0, x21
  40a970:	bl	402630 <memmove@plt>
  40a974:	add	x19, x19, #0x8
  40a978:	add	x19, x21, x19
  40a97c:	sub	x23, x23, x25
  40a980:	cmp	x23, #0x0
  40a984:	b.gt	40a910 <ferror@plt+0x7be0>
  40a988:	add	x19, x19, x23
  40a98c:	b	40a928 <ferror@plt+0x7bf8>
  40a990:	sub	x19, x25, x24
  40a994:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40a998:	b	40a8e0 <ferror@plt+0x7bb0>
  40a99c:	mov	x3, x0
  40a9a0:	sub	x4, x1, x0
  40a9a4:	asr	x6, x4, #5
  40a9a8:	cmp	xzr, x4, asr #5
  40a9ac:	b.ge	40a9f4 <ferror@plt+0x7cc4>  // b.tcont
  40a9b0:	ldr	x4, [x2]
  40a9b4:	add	x6, x0, x6, lsl #5
  40a9b8:	ldr	x5, [x3]
  40a9bc:	cmp	x4, x5
  40a9c0:	b.eq	40aa18 <ferror@plt+0x7ce8>  // b.none
  40a9c4:	ldr	x5, [x3, #8]
  40a9c8:	cmp	x4, x5
  40a9cc:	b.eq	40aa20 <ferror@plt+0x7cf0>  // b.none
  40a9d0:	ldr	x5, [x3, #16]
  40a9d4:	cmp	x4, x5
  40a9d8:	b.eq	40aa28 <ferror@plt+0x7cf8>  // b.none
  40a9dc:	ldr	x5, [x3, #24]
  40a9e0:	cmp	x4, x5
  40a9e4:	b.eq	40aa30 <ferror@plt+0x7d00>  // b.none
  40a9e8:	add	x3, x3, #0x20
  40a9ec:	cmp	x3, x6
  40a9f0:	b.ne	40a9b8 <ferror@plt+0x7c88>  // b.any
  40a9f4:	sub	x0, x1, x3
  40a9f8:	cmp	x0, #0x10
  40a9fc:	b.eq	40aa4c <ferror@plt+0x7d1c>  // b.none
  40aa00:	cmp	x0, #0x18
  40aa04:	b.eq	40aa38 <ferror@plt+0x7d08>  // b.none
  40aa08:	cmp	x0, #0x8
  40aa0c:	b.eq	40aa60 <ferror@plt+0x7d30>  // b.none
  40aa10:	mov	x0, x1
  40aa14:	b	40aa1c <ferror@plt+0x7cec>
  40aa18:	mov	x0, x3
  40aa1c:	ret
  40aa20:	add	x0, x3, #0x8
  40aa24:	b	40aa1c <ferror@plt+0x7cec>
  40aa28:	add	x0, x3, #0x10
  40aa2c:	b	40aa1c <ferror@plt+0x7cec>
  40aa30:	add	x0, x3, #0x18
  40aa34:	b	40aa1c <ferror@plt+0x7cec>
  40aa38:	ldr	x4, [x3]
  40aa3c:	ldr	x0, [x2]
  40aa40:	cmp	x4, x0
  40aa44:	b.eq	40aa78 <ferror@plt+0x7d48>  // b.none
  40aa48:	add	x3, x3, #0x8
  40aa4c:	ldr	x4, [x3]
  40aa50:	ldr	x0, [x2]
  40aa54:	cmp	x4, x0
  40aa58:	b.eq	40aa80 <ferror@plt+0x7d50>  // b.none
  40aa5c:	add	x3, x3, #0x8
  40aa60:	ldr	x4, [x3]
  40aa64:	ldr	x0, [x2]
  40aa68:	cmp	x4, x0
  40aa6c:	b.ne	40aa10 <ferror@plt+0x7ce0>  // b.any
  40aa70:	mov	x0, x3
  40aa74:	b	40aa1c <ferror@plt+0x7cec>
  40aa78:	mov	x0, x3
  40aa7c:	b	40aa1c <ferror@plt+0x7cec>
  40aa80:	mov	x0, x3
  40aa84:	b	40aa1c <ferror@plt+0x7cec>
  40aa88:	stp	x29, x30, [sp, #-80]!
  40aa8c:	mov	x29, sp
  40aa90:	stp	x19, x20, [sp, #16]
  40aa94:	stp	x21, x22, [sp, #32]
  40aa98:	stp	x23, x24, [sp, #48]
  40aa9c:	stp	x25, x26, [sp, #64]
  40aaa0:	mov	x25, x1
  40aaa4:	mov	x26, x2
  40aaa8:	ldr	x23, [x0, #8]
  40aaac:	ldr	x24, [x0]
  40aab0:	sub	x1, x23, x24
  40aab4:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  40aab8:	cmp	x2, x1, asr #3
  40aabc:	b.eq	40ab68 <ferror@plt+0x7e38>  // b.none
  40aac0:	mov	x20, x0
  40aac4:	asr	x0, x1, #3
  40aac8:	cmp	x0, #0x0
  40aacc:	csinc	x3, x0, xzr, ne  // ne = any
  40aad0:	adds	x3, x3, x0
  40aad4:	b.cs	40aba0 <ferror@plt+0x7e70>  // b.hs, b.nlast
  40aad8:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40aadc:	cmp	x3, x22
  40aae0:	csel	x22, x3, x22, ls  // ls = plast
  40aae4:	sub	x19, x25, x24
  40aae8:	mov	x21, #0x0                   	// #0
  40aaec:	cbz	x3, 40aafc <ferror@plt+0x7dcc>
  40aaf0:	lsl	x0, x22, #3
  40aaf4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40aaf8:	mov	x21, x0
  40aafc:	ldr	x0, [x26]
  40ab00:	str	x0, [x21, x19]
  40ab04:	cmp	x19, #0x0
  40ab08:	b.gt	40ab74 <ferror@plt+0x7e44>
  40ab0c:	add	x19, x19, #0x8
  40ab10:	add	x19, x21, x19
  40ab14:	sub	x23, x23, x25
  40ab18:	cmp	x23, #0x0
  40ab1c:	b.le	40ab30 <ferror@plt+0x7e00>
  40ab20:	mov	x2, x23
  40ab24:	mov	x1, x25
  40ab28:	mov	x0, x19
  40ab2c:	bl	402620 <memcpy@plt>
  40ab30:	add	x19, x19, x23
  40ab34:	cbz	x24, 40ab40 <ferror@plt+0x7e10>
  40ab38:	mov	x0, x24
  40ab3c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40ab40:	str	x21, [x20]
  40ab44:	str	x19, [x20, #8]
  40ab48:	add	x21, x21, x22, lsl #3
  40ab4c:	str	x21, [x20, #16]
  40ab50:	ldp	x19, x20, [sp, #16]
  40ab54:	ldp	x21, x22, [sp, #32]
  40ab58:	ldp	x23, x24, [sp, #48]
  40ab5c:	ldp	x25, x26, [sp, #64]
  40ab60:	ldp	x29, x30, [sp], #80
  40ab64:	ret
  40ab68:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40ab6c:	add	x0, x0, #0xd48
  40ab70:	bl	402f0c <ferror@plt+0x1dc>
  40ab74:	mov	x2, x19
  40ab78:	mov	x1, x24
  40ab7c:	mov	x0, x21
  40ab80:	bl	402630 <memmove@plt>
  40ab84:	add	x19, x19, #0x8
  40ab88:	add	x19, x21, x19
  40ab8c:	sub	x23, x23, x25
  40ab90:	cmp	x23, #0x0
  40ab94:	b.gt	40ab20 <ferror@plt+0x7df0>
  40ab98:	add	x19, x19, x23
  40ab9c:	b	40ab38 <ferror@plt+0x7e08>
  40aba0:	sub	x19, x25, x24
  40aba4:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40aba8:	b	40aaf0 <ferror@plt+0x7dc0>
  40abac:	ldr	x3, [x0, #8]
  40abb0:	ldr	x2, [x0, #16]
  40abb4:	cmp	x3, x2
  40abb8:	b.eq	40abd4 <ferror@plt+0x7ea4>  // b.none
  40abbc:	ldr	x1, [x1]
  40abc0:	str	x1, [x3]
  40abc4:	ldr	x1, [x0, #8]
  40abc8:	add	x1, x1, #0x8
  40abcc:	str	x1, [x0, #8]
  40abd0:	ret
  40abd4:	stp	x29, x30, [sp, #-16]!
  40abd8:	mov	x29, sp
  40abdc:	mov	x2, x1
  40abe0:	mov	x1, x3
  40abe4:	bl	40aa88 <ferror@plt+0x7d58>
  40abe8:	ldp	x29, x30, [sp], #16
  40abec:	ret
  40abf0:	stp	x29, x30, [sp, #-96]!
  40abf4:	mov	x29, sp
  40abf8:	stp	x19, x20, [sp, #16]
  40abfc:	stp	x21, x22, [sp, #32]
  40ac00:	stp	x23, x24, [sp, #48]
  40ac04:	stp	x25, x26, [sp, #64]
  40ac08:	str	x27, [sp, #80]
  40ac0c:	mov	x23, x0
  40ac10:	mov	x19, x1
  40ac14:	mov	x25, x1
  40ac18:	ldr	x20, [x0, #8]
  40ac1c:	ldr	x24, [x0]
  40ac20:	sub	x0, x20, x24
  40ac24:	asr	x0, x0, #3
  40ac28:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40ac2c:	movk	x1, #0xaaab
  40ac30:	mul	x0, x0, x1
  40ac34:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  40ac38:	movk	x1, #0x555, lsl #48
  40ac3c:	cmp	x0, x1
  40ac40:	b.eq	40adbc <ferror@plt+0x808c>  // b.none
  40ac44:	mov	x26, x2
  40ac48:	cmp	x0, #0x0
  40ac4c:	csinc	x1, x0, xzr, ne  // ne = any
  40ac50:	adds	x0, x1, x0
  40ac54:	b.cs	40add0 <ferror@plt+0x80a0>  // b.hs, b.nlast
  40ac58:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  40ac5c:	movk	x21, #0x555, lsl #48
  40ac60:	cmp	x0, x21
  40ac64:	csel	x21, x0, x21, ls  // ls = plast
  40ac68:	sub	x27, x19, x24
  40ac6c:	mov	x22, #0x0                   	// #0
  40ac70:	cbz	x0, 40ac84 <ferror@plt+0x7f54>
  40ac74:	add	x0, x21, x21, lsl #1
  40ac78:	lsl	x0, x0, #3
  40ac7c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40ac80:	mov	x22, x0
  40ac84:	add	x0, x22, x27
  40ac88:	ldr	x1, [x26]
  40ac8c:	str	x1, [x22, x27]
  40ac90:	ldr	x1, [x26, #8]
  40ac94:	str	x1, [x0, #8]
  40ac98:	ldr	x1, [x26, #16]
  40ac9c:	str	x1, [x0, #16]
  40aca0:	str	xzr, [x26, #16]
  40aca4:	str	xzr, [x26, #8]
  40aca8:	str	xzr, [x26]
  40acac:	cmp	x19, x24
  40acb0:	b.eq	40adc8 <ferror@plt+0x8098>  // b.none
  40acb4:	mov	x3, x22
  40acb8:	mov	x2, x24
  40acbc:	ldr	x0, [x2]
  40acc0:	str	x0, [x3]
  40acc4:	ldr	x0, [x2, #8]
  40acc8:	str	x0, [x3, #8]
  40accc:	ldr	x0, [x2, #16]
  40acd0:	str	x0, [x3, #16]
  40acd4:	add	x2, x2, #0x18
  40acd8:	add	x3, x3, #0x18
  40acdc:	cmp	x25, x2
  40ace0:	b.ne	40acbc <ferror@plt+0x7f8c>  // b.any
  40ace4:	sub	x25, x19, #0x18
  40ace8:	sub	x25, x25, x24
  40acec:	lsr	x25, x25, #3
  40acf0:	mov	x0, #0xaaab                	// #43691
  40acf4:	movk	x0, #0xaaaa, lsl #16
  40acf8:	movk	x0, #0xaaaa, lsl #32
  40acfc:	movk	x0, #0xaaa, lsl #48
  40ad00:	mul	x25, x25, x0
  40ad04:	and	x25, x25, #0x1fffffffffffffff
  40ad08:	add	x25, x25, #0x1
  40ad0c:	add	x25, x25, x25, lsl #1
  40ad10:	add	x25, x22, x25, lsl #3
  40ad14:	add	x25, x25, #0x18
  40ad18:	cmp	x19, x20
  40ad1c:	b.eq	40ad80 <ferror@plt+0x8050>  // b.none
  40ad20:	mov	x2, x19
  40ad24:	mov	x3, x25
  40ad28:	ldr	x0, [x2]
  40ad2c:	str	x0, [x3]
  40ad30:	ldr	x0, [x2, #8]
  40ad34:	str	x0, [x3, #8]
  40ad38:	ldr	x0, [x2, #16]
  40ad3c:	str	x0, [x3, #16]
  40ad40:	add	x2, x2, #0x18
  40ad44:	add	x3, x3, #0x18
  40ad48:	cmp	x2, x20
  40ad4c:	b.ne	40ad28 <ferror@plt+0x7ff8>  // b.any
  40ad50:	sub	x0, x20, x19
  40ad54:	sub	x0, x0, #0x18
  40ad58:	lsr	x0, x0, #3
  40ad5c:	mov	x1, #0xaaab                	// #43691
  40ad60:	movk	x1, #0xaaaa, lsl #16
  40ad64:	movk	x1, #0xaaaa, lsl #32
  40ad68:	movk	x1, #0xaaa, lsl #48
  40ad6c:	mul	x0, x0, x1
  40ad70:	and	x0, x0, #0x1fffffffffffffff
  40ad74:	add	x0, x0, #0x1
  40ad78:	add	x0, x0, x0, lsl #1
  40ad7c:	add	x25, x25, x0, lsl #3
  40ad80:	cbz	x24, 40ad8c <ferror@plt+0x805c>
  40ad84:	mov	x0, x24
  40ad88:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40ad8c:	str	x22, [x23]
  40ad90:	str	x25, [x23, #8]
  40ad94:	add	x21, x21, x21, lsl #1
  40ad98:	add	x22, x22, x21, lsl #3
  40ad9c:	str	x22, [x23, #16]
  40ada0:	ldp	x19, x20, [sp, #16]
  40ada4:	ldp	x21, x22, [sp, #32]
  40ada8:	ldp	x23, x24, [sp, #48]
  40adac:	ldp	x25, x26, [sp, #64]
  40adb0:	ldr	x27, [sp, #80]
  40adb4:	ldp	x29, x30, [sp], #96
  40adb8:	ret
  40adbc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40adc0:	add	x0, x0, #0xd48
  40adc4:	bl	402f0c <ferror@plt+0x1dc>
  40adc8:	mov	x25, x22
  40adcc:	b	40ad14 <ferror@plt+0x7fe4>
  40add0:	sub	x27, x19, x24
  40add4:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  40add8:	movk	x21, #0x555, lsl #48
  40addc:	b	40ac74 <ferror@plt+0x7f44>
  40ade0:	stp	x29, x30, [sp, #-80]!
  40ade4:	mov	x29, sp
  40ade8:	stp	x19, x20, [sp, #16]
  40adec:	stp	x21, x22, [sp, #32]
  40adf0:	stp	x23, x24, [sp, #48]
  40adf4:	stp	x25, x26, [sp, #64]
  40adf8:	mov	x25, x1
  40adfc:	mov	x26, x2
  40ae00:	ldr	x23, [x0, #8]
  40ae04:	ldr	x24, [x0]
  40ae08:	sub	x1, x23, x24
  40ae0c:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  40ae10:	cmp	x2, x1, asr #3
  40ae14:	b.eq	40aec0 <ferror@plt+0x8190>  // b.none
  40ae18:	mov	x20, x0
  40ae1c:	asr	x0, x1, #3
  40ae20:	cmp	x0, #0x0
  40ae24:	csinc	x3, x0, xzr, ne  // ne = any
  40ae28:	adds	x3, x3, x0
  40ae2c:	b.cs	40aef8 <ferror@plt+0x81c8>  // b.hs, b.nlast
  40ae30:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40ae34:	cmp	x3, x22
  40ae38:	csel	x22, x3, x22, ls  // ls = plast
  40ae3c:	sub	x19, x25, x24
  40ae40:	mov	x21, #0x0                   	// #0
  40ae44:	cbz	x3, 40ae54 <ferror@plt+0x8124>
  40ae48:	lsl	x0, x22, #3
  40ae4c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40ae50:	mov	x21, x0
  40ae54:	ldr	x0, [x26]
  40ae58:	str	x0, [x21, x19]
  40ae5c:	cmp	x19, #0x0
  40ae60:	b.gt	40aecc <ferror@plt+0x819c>
  40ae64:	add	x19, x19, #0x8
  40ae68:	add	x19, x21, x19
  40ae6c:	sub	x23, x23, x25
  40ae70:	cmp	x23, #0x0
  40ae74:	b.le	40ae88 <ferror@plt+0x8158>
  40ae78:	mov	x2, x23
  40ae7c:	mov	x1, x25
  40ae80:	mov	x0, x19
  40ae84:	bl	402620 <memcpy@plt>
  40ae88:	add	x19, x19, x23
  40ae8c:	cbz	x24, 40ae98 <ferror@plt+0x8168>
  40ae90:	mov	x0, x24
  40ae94:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40ae98:	str	x21, [x20]
  40ae9c:	str	x19, [x20, #8]
  40aea0:	add	x21, x21, x22, lsl #3
  40aea4:	str	x21, [x20, #16]
  40aea8:	ldp	x19, x20, [sp, #16]
  40aeac:	ldp	x21, x22, [sp, #32]
  40aeb0:	ldp	x23, x24, [sp, #48]
  40aeb4:	ldp	x25, x26, [sp, #64]
  40aeb8:	ldp	x29, x30, [sp], #80
  40aebc:	ret
  40aec0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40aec4:	add	x0, x0, #0xd48
  40aec8:	bl	402f0c <ferror@plt+0x1dc>
  40aecc:	mov	x2, x19
  40aed0:	mov	x1, x24
  40aed4:	mov	x0, x21
  40aed8:	bl	402630 <memmove@plt>
  40aedc:	add	x19, x19, #0x8
  40aee0:	add	x19, x21, x19
  40aee4:	sub	x23, x23, x25
  40aee8:	cmp	x23, #0x0
  40aeec:	b.gt	40ae78 <ferror@plt+0x8148>
  40aef0:	add	x19, x19, x23
  40aef4:	b	40ae90 <ferror@plt+0x8160>
  40aef8:	sub	x19, x25, x24
  40aefc:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40af00:	b	40ae48 <ferror@plt+0x8118>
  40af04:	stp	x29, x30, [sp, #-64]!
  40af08:	mov	x29, sp
  40af0c:	stp	x19, x20, [sp, #16]
  40af10:	stp	x21, x22, [sp, #32]
  40af14:	str	x23, [sp, #48]
  40af18:	mov	x19, x0
  40af1c:	ldr	x21, [x0]
  40af20:	ldr	w23, [x0, #40]
  40af24:	ldr	x22, [x0, #8]
  40af28:	add	x20, x21, x22, lsl #4
  40af2c:	ldr	x1, [x0, #16]
  40af30:	ldr	x0, [x0, #24]
  40af34:	sub	x1, x1, x0
  40af38:	lsl	x0, x1, #1
  40af3c:	cmp	x22, x1, lsl #1
  40af40:	b.cc	40af5c <ferror@plt+0x822c>  // b.lo, b.ul, b.last
  40af44:	lsl	w1, w1, #3
  40af48:	cmp	x1, #0x20
  40af4c:	mov	x2, #0x20                  	// #32
  40af50:	csel	x1, x1, x2, cs  // cs = hs, nlast
  40af54:	cmp	x22, x1
  40af58:	b.ls	40af74 <ferror@plt+0x8244>  // b.plast
  40af5c:	bl	40dcb0 <ferror@plt+0xaf80>
  40af60:	mov	w23, w0
  40af64:	ubfiz	x1, x23, #4, #32
  40af68:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40af6c:	add	x0, x0, #0xf98
  40af70:	ldr	w22, [x0, x1]
  40af74:	ldrb	w0, [x19, #44]
  40af78:	cbnz	w0, 40af8c <ferror@plt+0x825c>
  40af7c:	mov	x1, #0x10                  	// #16
  40af80:	mov	x0, x22
  40af84:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40af88:	b	40afa4 <ferror@plt+0x8274>
  40af8c:	mov	x3, #0x0                   	// #0
  40af90:	mov	x2, #0x0                   	// #0
  40af94:	mov	x1, #0x0                   	// #0
  40af98:	lsl	x0, x22, #4
  40af9c:	bl	40e0f8 <ferror@plt+0xb3c8>
  40afa0:	cbz	x0, 40b004 <ferror@plt+0x82d4>
  40afa4:	cbz	x22, 40afc4 <ferror@plt+0x8294>
  40afa8:	mov	x1, x0
  40afac:	add	x3, x0, x22, lsl #4
  40afb0:	mov	w2, #0xfffffffd            	// #-3
  40afb4:	str	w2, [x1, #4]
  40afb8:	add	x1, x1, #0x10
  40afbc:	cmp	x1, x3
  40afc0:	b.ne	40afb4 <ferror@plt+0x8284>  // b.any
  40afc4:	str	x0, [x19]
  40afc8:	str	x22, [x19, #8]
  40afcc:	str	w23, [x19, #40]
  40afd0:	ldr	x0, [x19, #16]
  40afd4:	ldr	x1, [x19, #24]
  40afd8:	sub	x0, x0, x1
  40afdc:	str	x0, [x19, #16]
  40afe0:	str	xzr, [x19, #24]
  40afe4:	mov	x3, x21
  40afe8:	mov	w5, #0x79b9                	// #31161
  40afec:	movk	w5, #0x9e37, lsl #16
  40aff0:	mov	w6, #0x8647                	// #34375
  40aff4:	movk	w6, #0x61c8, lsl #16
  40aff8:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40affc:	add	x4, x4, #0xf98
  40b000:	b	40b084 <ferror@plt+0x8354>
  40b004:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40b008:	add	x2, x2, #0xd88
  40b00c:	mov	w1, #0x2b5                 	// #693
  40b010:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40b014:	add	x0, x0, #0xd98
  40b018:	bl	4102b4 <ferror@plt+0xd584>
  40b01c:	ldr	x7, [x19, #8]
  40b020:	ubfiz	x8, x8, #4, #32
  40b024:	add	x8, x4, x8
  40b028:	ldr	w2, [x8, #8]
  40b02c:	mul	x2, x2, x12
  40b030:	lsr	x2, x2, #32
  40b034:	add	w8, w1, #0x1
  40b038:	sub	w1, w1, w2
  40b03c:	add	w1, w2, w1, lsr #1
  40b040:	lsr	w1, w1, w11
  40b044:	sub	w10, w10, #0x2
  40b048:	msub	w1, w1, w10, w8
  40b04c:	add	w0, w0, w1
  40b050:	sub	w2, w0, w7
  40b054:	cmp	x7, w0, uxtw
  40b058:	csel	w0, w2, w0, ls  // ls = plast
  40b05c:	ubfiz	x2, x0, #4, #32
  40b060:	add	x2, x9, x2
  40b064:	ldr	w8, [x2, #4]
  40b068:	cmn	w8, #0x3
  40b06c:	b.ne	40b04c <ferror@plt+0x831c>  // b.any
  40b070:	ldp	x0, x1, [x3]
  40b074:	stp	x0, x1, [x2]
  40b078:	add	x3, x3, #0x10
  40b07c:	cmp	x20, x3
  40b080:	b.ls	40b1b4 <ferror@plt+0x8484>  // b.plast
  40b084:	ldr	w0, [x3, #4]
  40b088:	add	w1, w0, #0x3
  40b08c:	cmp	w1, #0x1
  40b090:	b.ls	40b078 <ferror@plt+0x8348>  // b.plast
  40b094:	ldr	w2, [x3]
  40b098:	sub	w1, w5, w2
  40b09c:	add	w7, w2, w6
  40b0a0:	add	w2, w2, w7
  40b0a4:	eor	w2, w2, w1, lsl #8
  40b0a8:	sub	w7, w7, w2
  40b0ac:	eor	w7, w7, w2, lsr #13
  40b0b0:	sub	w1, w1, w2
  40b0b4:	sub	w1, w1, w7
  40b0b8:	eor	w1, w1, w7, lsr #12
  40b0bc:	sub	w2, w2, w7
  40b0c0:	sub	w2, w2, w1
  40b0c4:	eor	w2, w2, w1, lsl #16
  40b0c8:	sub	w7, w7, w1
  40b0cc:	sub	w7, w7, w2
  40b0d0:	eor	w7, w7, w2, lsr #5
  40b0d4:	sub	w8, w1, w2
  40b0d8:	sub	w8, w8, w7
  40b0dc:	eor	w8, w8, w7, lsr #3
  40b0e0:	sub	w1, w2, w7
  40b0e4:	sub	w1, w1, w8
  40b0e8:	eor	w1, w1, w8, lsl #10
  40b0ec:	sub	w7, w7, w8
  40b0f0:	sub	w7, w7, w1
  40b0f4:	eor	w1, w7, w1, lsr #15
  40b0f8:	sub	w2, w5, w0
  40b0fc:	sub	w2, w2, w1
  40b100:	eor	w2, w2, w1, lsr #13
  40b104:	sub	w0, w0, w1
  40b108:	sub	w0, w0, w2
  40b10c:	eor	w0, w0, w2, lsl #8
  40b110:	sub	w1, w1, w2
  40b114:	sub	w1, w1, w0
  40b118:	eor	w1, w1, w0, lsr #13
  40b11c:	sub	w2, w2, w0
  40b120:	sub	w2, w2, w1
  40b124:	eor	w2, w2, w1, lsr #12
  40b128:	sub	w0, w0, w1
  40b12c:	sub	w0, w0, w2
  40b130:	eor	w0, w0, w2, lsl #16
  40b134:	sub	w1, w1, w2
  40b138:	sub	w1, w1, w0
  40b13c:	eor	w1, w1, w0, lsr #5
  40b140:	sub	w2, w2, w0
  40b144:	sub	w2, w2, w1
  40b148:	eor	w2, w2, w1, lsr #3
  40b14c:	sub	w0, w0, w1
  40b150:	sub	w0, w0, w2
  40b154:	eor	w0, w0, w2, lsl #10
  40b158:	sub	w1, w1, w2
  40b15c:	sub	w1, w1, w0
  40b160:	eor	w1, w1, w0, lsr #15
  40b164:	ldr	w8, [x19, #40]
  40b168:	ubfiz	x2, x8, #4, #32
  40b16c:	add	x0, x4, x2
  40b170:	ldr	w10, [x4, x2]
  40b174:	ldr	w11, [x0, #12]
  40b178:	mov	w12, w1
  40b17c:	ldr	w0, [x0, #4]
  40b180:	mul	x0, x0, x12
  40b184:	lsr	x0, x0, #32
  40b188:	sub	w2, w1, w0
  40b18c:	add	w0, w0, w2, lsr #1
  40b190:	lsr	w0, w0, w11
  40b194:	msub	w0, w0, w10, w1
  40b198:	ldr	x9, [x19]
  40b19c:	ubfiz	x2, x0, #4, #32
  40b1a0:	add	x2, x9, x2
  40b1a4:	ldr	w7, [x2, #4]
  40b1a8:	cmn	w7, #0x3
  40b1ac:	b.ne	40b01c <ferror@plt+0x82ec>  // b.any
  40b1b0:	b	40b070 <ferror@plt+0x8340>
  40b1b4:	ldrb	w0, [x19, #44]
  40b1b8:	cbnz	w0, 40b1d8 <ferror@plt+0x84a8>
  40b1bc:	mov	x0, x21
  40b1c0:	bl	402a90 <free@plt>
  40b1c4:	ldp	x19, x20, [sp, #16]
  40b1c8:	ldp	x21, x22, [sp, #32]
  40b1cc:	ldr	x23, [sp, #48]
  40b1d0:	ldp	x29, x30, [sp], #64
  40b1d4:	ret
  40b1d8:	mov	x0, x21
  40b1dc:	bl	40e140 <ferror@plt+0xb410>
  40b1e0:	b	40b1c4 <ferror@plt+0x8494>
  40b1e4:	stp	x29, x30, [sp, #-64]!
  40b1e8:	mov	x29, sp
  40b1ec:	stp	x19, x20, [sp, #16]
  40b1f0:	stp	x21, x22, [sp, #32]
  40b1f4:	str	x23, [sp, #48]
  40b1f8:	mov	x3, x0
  40b1fc:	mov	x22, x1
  40b200:	mov	x23, x2
  40b204:	mov	x19, x0
  40b208:	sub	x0, x1, x0
  40b20c:	cmp	xzr, x0, asr #6
  40b210:	b.ge	40b26c <ferror@plt+0x853c>  // b.tcont
  40b214:	asr	x21, x0, #6
  40b218:	ldr	x20, [x2]
  40b21c:	add	x21, x3, x21, lsl #6
  40b220:	mov	x1, x20
  40b224:	ldr	x0, [x19]
  40b228:	bl	402a20 <strcmp@plt>
  40b22c:	cbz	w0, 40b290 <ferror@plt+0x8560>
  40b230:	mov	x1, x20
  40b234:	ldr	x0, [x19, #16]
  40b238:	bl	402a20 <strcmp@plt>
  40b23c:	cbz	w0, 40b2a8 <ferror@plt+0x8578>
  40b240:	mov	x1, x20
  40b244:	ldr	x0, [x19, #32]
  40b248:	bl	402a20 <strcmp@plt>
  40b24c:	cbz	w0, 40b2b0 <ferror@plt+0x8580>
  40b250:	mov	x1, x20
  40b254:	ldr	x0, [x19, #48]
  40b258:	bl	402a20 <strcmp@plt>
  40b25c:	cbz	w0, 40b2b8 <ferror@plt+0x8588>
  40b260:	add	x19, x19, #0x40
  40b264:	cmp	x19, x21
  40b268:	b.ne	40b220 <ferror@plt+0x84f0>  // b.any
  40b26c:	sub	x0, x22, x19
  40b270:	cmp	x0, #0x20
  40b274:	b.eq	40b2dc <ferror@plt+0x85ac>  // b.none
  40b278:	cmp	x0, #0x30
  40b27c:	b.eq	40b2c0 <ferror@plt+0x8590>  // b.none
  40b280:	cmp	x0, #0x10
  40b284:	b.eq	40b2f8 <ferror@plt+0x85c8>  // b.none
  40b288:	mov	x0, x22
  40b28c:	b	40b294 <ferror@plt+0x8564>
  40b290:	mov	x0, x19
  40b294:	ldp	x19, x20, [sp, #16]
  40b298:	ldp	x21, x22, [sp, #32]
  40b29c:	ldr	x23, [sp, #48]
  40b2a0:	ldp	x29, x30, [sp], #64
  40b2a4:	ret
  40b2a8:	add	x0, x19, #0x10
  40b2ac:	b	40b294 <ferror@plt+0x8564>
  40b2b0:	add	x0, x19, #0x20
  40b2b4:	b	40b294 <ferror@plt+0x8564>
  40b2b8:	add	x0, x19, #0x30
  40b2bc:	b	40b294 <ferror@plt+0x8564>
  40b2c0:	ldr	x1, [x23]
  40b2c4:	ldr	x0, [x19]
  40b2c8:	bl	402a20 <strcmp@plt>
  40b2cc:	cbnz	w0, 40b2d8 <ferror@plt+0x85a8>
  40b2d0:	mov	x0, x19
  40b2d4:	b	40b294 <ferror@plt+0x8564>
  40b2d8:	add	x19, x19, #0x10
  40b2dc:	ldr	x1, [x23]
  40b2e0:	ldr	x0, [x19]
  40b2e4:	bl	402a20 <strcmp@plt>
  40b2e8:	cbnz	w0, 40b2f4 <ferror@plt+0x85c4>
  40b2ec:	mov	x0, x19
  40b2f0:	b	40b294 <ferror@plt+0x8564>
  40b2f4:	add	x19, x19, #0x10
  40b2f8:	ldr	x1, [x23]
  40b2fc:	ldr	x0, [x19]
  40b300:	bl	402a20 <strcmp@plt>
  40b304:	cbnz	w0, 40b288 <ferror@plt+0x8558>
  40b308:	mov	x0, x19
  40b30c:	b	40b294 <ferror@plt+0x8564>
  40b310:	stp	x29, x30, [sp, #-112]!
  40b314:	mov	x29, sp
  40b318:	stp	x23, x24, [sp, #48]
  40b31c:	stp	x25, x26, [sp, #64]
  40b320:	stp	x27, x28, [sp, #80]
  40b324:	mov	x27, x0
  40b328:	mov	x23, x1
  40b32c:	mov	x25, x1
  40b330:	ldr	x24, [x0, #8]
  40b334:	ldr	x28, [x0]
  40b338:	sub	x0, x24, x28
  40b33c:	asr	x0, x0, #4
  40b340:	mov	x1, #0x8e39                	// #36409
  40b344:	movk	x1, #0x38e3, lsl #16
  40b348:	movk	x1, #0xe38e, lsl #32
  40b34c:	movk	x1, #0x8e38, lsl #48
  40b350:	mul	x0, x0, x1
  40b354:	mov	x1, #0x38e3                	// #14563
  40b358:	movk	x1, #0xe38e, lsl #16
  40b35c:	movk	x1, #0x8e38, lsl #32
  40b360:	movk	x1, #0xe3, lsl #48
  40b364:	cmp	x0, x1
  40b368:	b.eq	40b484 <ferror@plt+0x8754>  // b.none
  40b36c:	stp	x19, x20, [sp, #16]
  40b370:	mov	x19, x2
  40b374:	cmp	x0, #0x0
  40b378:	csinc	x1, x0, xzr, ne  // ne = any
  40b37c:	adds	x0, x1, x0
  40b380:	b.cs	40b6f8 <ferror@plt+0x89c8>  // b.hs, b.nlast
  40b384:	mov	x1, #0x38e3                	// #14563
  40b388:	movk	x1, #0xe38e, lsl #16
  40b38c:	movk	x1, #0x8e38, lsl #32
  40b390:	movk	x1, #0xe3, lsl #48
  40b394:	cmp	x0, x1
  40b398:	csel	x1, x0, x1, ls  // ls = plast
  40b39c:	str	x1, [sp, #104]
  40b3a0:	sub	x20, x23, x28
  40b3a4:	mov	x26, #0x0                   	// #0
  40b3a8:	cbz	x0, 40b3c0 <ferror@plt+0x8690>
  40b3ac:	ldr	x0, [sp, #104]
  40b3b0:	add	x0, x0, x0, lsl #3
  40b3b4:	lsl	x0, x0, #4
  40b3b8:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40b3bc:	mov	x26, x0
  40b3c0:	add	x0, x26, x20
  40b3c4:	ldr	w1, [x19]
  40b3c8:	str	w1, [x26, x20]
  40b3cc:	ldr	x1, [x19, #8]
  40b3d0:	str	x1, [x0, #8]
  40b3d4:	ldr	x1, [x19, #16]
  40b3d8:	str	x1, [x0, #16]
  40b3dc:	ldr	x3, [x19, #24]
  40b3e0:	str	x3, [x0, #24]
  40b3e4:	ldr	x3, [x19, #32]
  40b3e8:	str	x3, [x0, #32]
  40b3ec:	ldr	x3, [x19, #40]
  40b3f0:	str	x3, [x0, #40]
  40b3f4:	str	xzr, [x19, #40]
  40b3f8:	str	xzr, [x19, #32]
  40b3fc:	str	xzr, [x19, #24]
  40b400:	ldp	x4, x5, [x19, #48]
  40b404:	stp	x4, x5, [x0, #48]
  40b408:	ldp	x4, x5, [x19, #64]
  40b40c:	stp	x4, x5, [x0, #64]
  40b410:	ldr	x2, [x19, #80]
  40b414:	str	x2, [x0, #80]
  40b418:	ldr	w1, [x19, #88]
  40b41c:	str	w1, [x0, #88]
  40b420:	ldr	x3, [x19, #96]
  40b424:	str	x3, [x0, #96]
  40b428:	ldr	x3, [x19, #104]
  40b42c:	str	x3, [x0, #104]
  40b430:	ldr	x3, [x19, #112]
  40b434:	str	x3, [x0, #112]
  40b438:	str	xzr, [x19, #112]
  40b43c:	str	xzr, [x19, #104]
  40b440:	str	xzr, [x19, #96]
  40b444:	add	x2, x0, #0x78
  40b448:	ldr	x3, [x19, #120]
  40b44c:	str	x3, [x0, #120]
  40b450:	ldr	x0, [x19, #128]
  40b454:	str	x0, [x2, #8]
  40b458:	ldr	x0, [x19, #136]
  40b45c:	str	x0, [x2, #16]
  40b460:	str	xzr, [x19, #136]
  40b464:	str	xzr, [x19, #128]
  40b468:	str	xzr, [x19, #120]
  40b46c:	cmp	x23, x28
  40b470:	b.eq	40b6f0 <ferror@plt+0x89c0>  // b.none
  40b474:	stp	x21, x22, [sp, #32]
  40b478:	mov	x20, x26
  40b47c:	mov	x19, x28
  40b480:	b	40b4dc <ferror@plt+0x87ac>
  40b484:	stp	x19, x20, [sp, #16]
  40b488:	stp	x21, x22, [sp, #32]
  40b48c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40b490:	add	x0, x0, #0xd48
  40b494:	bl	402f0c <ferror@plt+0x1dc>
  40b498:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b49c:	add	x21, x21, #0x40
  40b4a0:	cmp	x22, x21
  40b4a4:	b.eq	40b4c0 <ferror@plt+0x8790>  // b.none
  40b4a8:	ldr	x0, [x21, #32]
  40b4ac:	cbz	x0, 40b4b4 <ferror@plt+0x8784>
  40b4b0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b4b4:	ldr	x0, [x21, #8]
  40b4b8:	cbnz	x0, 40b498 <ferror@plt+0x8768>
  40b4bc:	b	40b49c <ferror@plt+0x876c>
  40b4c0:	ldr	x0, [x19, #24]
  40b4c4:	cbz	x0, 40b4cc <ferror@plt+0x879c>
  40b4c8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b4cc:	add	x19, x19, #0x90
  40b4d0:	add	x20, x20, #0x90
  40b4d4:	cmp	x25, x19
  40b4d8:	b.eq	40b594 <ferror@plt+0x8864>  // b.none
  40b4dc:	ldr	w0, [x19]
  40b4e0:	str	w0, [x20]
  40b4e4:	ldr	x0, [x19, #8]
  40b4e8:	str	x0, [x20, #8]
  40b4ec:	ldr	x0, [x19, #16]
  40b4f0:	str	x0, [x20, #16]
  40b4f4:	ldr	x0, [x19, #24]
  40b4f8:	str	x0, [x20, #24]
  40b4fc:	ldr	x0, [x19, #32]
  40b500:	str	x0, [x20, #32]
  40b504:	ldr	x0, [x19, #40]
  40b508:	str	x0, [x20, #40]
  40b50c:	str	xzr, [x19, #40]
  40b510:	str	xzr, [x19, #32]
  40b514:	str	xzr, [x19, #24]
  40b518:	ldp	x2, x3, [x19, #48]
  40b51c:	stp	x2, x3, [x20, #48]
  40b520:	ldp	x2, x3, [x19, #64]
  40b524:	stp	x2, x3, [x20, #64]
  40b528:	ldr	x1, [x19, #80]
  40b52c:	str	x1, [x20, #80]
  40b530:	ldr	w0, [x19, #88]
  40b534:	str	w0, [x20, #88]
  40b538:	ldr	x0, [x19, #96]
  40b53c:	str	x0, [x20, #96]
  40b540:	ldr	x0, [x19, #104]
  40b544:	str	x0, [x20, #104]
  40b548:	ldr	x0, [x19, #112]
  40b54c:	str	x0, [x20, #112]
  40b550:	str	xzr, [x19, #112]
  40b554:	str	xzr, [x19, #104]
  40b558:	str	xzr, [x19, #96]
  40b55c:	ldr	x0, [x19, #120]
  40b560:	str	x0, [x20, #120]
  40b564:	ldr	x0, [x19, #128]
  40b568:	str	x0, [x20, #128]
  40b56c:	ldr	x0, [x19, #136]
  40b570:	str	x0, [x20, #136]
  40b574:	ldr	x0, [x19, #96]
  40b578:	cbz	x0, 40b580 <ferror@plt+0x8850>
  40b57c:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b580:	ldr	x21, [x19, #24]
  40b584:	ldr	x22, [x19, #32]
  40b588:	cmp	x21, x22
  40b58c:	b.ne	40b4a8 <ferror@plt+0x8778>  // b.any
  40b590:	b	40b4c0 <ferror@plt+0x8790>
  40b594:	sub	x19, x23, #0x90
  40b598:	sub	x19, x19, x28
  40b59c:	lsr	x19, x19, #4
  40b5a0:	mov	x0, #0x8e39                	// #36409
  40b5a4:	movk	x0, #0x38e3, lsl #16
  40b5a8:	movk	x0, #0xe38e, lsl #32
  40b5ac:	movk	x0, #0xe38, lsl #48
  40b5b0:	mul	x19, x19, x0
  40b5b4:	and	x19, x19, #0xfffffffffffffff
  40b5b8:	add	x19, x19, #0x1
  40b5bc:	add	x19, x19, x19, lsl #3
  40b5c0:	add	x19, x26, x19, lsl #4
  40b5c4:	ldp	x21, x22, [sp, #32]
  40b5c8:	add	x19, x19, #0x90
  40b5cc:	cmp	x23, x24
  40b5d0:	b.eq	40b6b4 <ferror@plt+0x8984>  // b.none
  40b5d4:	mov	x0, x23
  40b5d8:	mov	x1, x19
  40b5dc:	ldr	w2, [x0]
  40b5e0:	str	w2, [x1]
  40b5e4:	ldr	x2, [x0, #8]
  40b5e8:	str	x2, [x1, #8]
  40b5ec:	ldr	x2, [x0, #16]
  40b5f0:	str	x2, [x1, #16]
  40b5f4:	ldr	x2, [x0, #24]
  40b5f8:	str	x2, [x1, #24]
  40b5fc:	ldr	x2, [x0, #32]
  40b600:	str	x2, [x1, #32]
  40b604:	ldr	x2, [x0, #40]
  40b608:	str	x2, [x1, #40]
  40b60c:	str	xzr, [x0, #40]
  40b610:	str	xzr, [x0, #32]
  40b614:	str	xzr, [x0, #24]
  40b618:	ldp	x4, x5, [x0, #48]
  40b61c:	stp	x4, x5, [x1, #48]
  40b620:	ldp	x4, x5, [x0, #64]
  40b624:	stp	x4, x5, [x1, #64]
  40b628:	ldr	x3, [x0, #80]
  40b62c:	str	x3, [x1, #80]
  40b630:	ldr	w2, [x0, #88]
  40b634:	str	w2, [x1, #88]
  40b638:	ldr	x2, [x0, #96]
  40b63c:	str	x2, [x1, #96]
  40b640:	ldr	x2, [x0, #104]
  40b644:	str	x2, [x1, #104]
  40b648:	ldr	x2, [x0, #112]
  40b64c:	str	x2, [x1, #112]
  40b650:	str	xzr, [x0, #112]
  40b654:	str	xzr, [x0, #104]
  40b658:	str	xzr, [x0, #96]
  40b65c:	ldr	x2, [x0, #120]
  40b660:	str	x2, [x1, #120]
  40b664:	ldr	x2, [x0, #128]
  40b668:	str	x2, [x1, #128]
  40b66c:	ldr	x2, [x0, #136]
  40b670:	str	x2, [x1, #136]
  40b674:	add	x0, x0, #0x90
  40b678:	add	x1, x1, #0x90
  40b67c:	cmp	x0, x24
  40b680:	b.ne	40b5dc <ferror@plt+0x88ac>  // b.any
  40b684:	sub	x0, x24, x23
  40b688:	sub	x0, x0, #0x90
  40b68c:	lsr	x0, x0, #4
  40b690:	mov	x1, #0x8e39                	// #36409
  40b694:	movk	x1, #0x38e3, lsl #16
  40b698:	movk	x1, #0xe38e, lsl #32
  40b69c:	movk	x1, #0xe38, lsl #48
  40b6a0:	mul	x0, x0, x1
  40b6a4:	and	x0, x0, #0xfffffffffffffff
  40b6a8:	add	x0, x0, #0x1
  40b6ac:	add	x0, x0, x0, lsl #3
  40b6b0:	add	x19, x19, x0, lsl #4
  40b6b4:	cbz	x28, 40b6c0 <ferror@plt+0x8990>
  40b6b8:	mov	x0, x28
  40b6bc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b6c0:	str	x26, [x27]
  40b6c4:	str	x19, [x27, #8]
  40b6c8:	ldr	x0, [sp, #104]
  40b6cc:	add	x0, x0, x0, lsl #3
  40b6d0:	add	x26, x26, x0, lsl #4
  40b6d4:	str	x26, [x27, #16]
  40b6d8:	ldp	x19, x20, [sp, #16]
  40b6dc:	ldp	x23, x24, [sp, #48]
  40b6e0:	ldp	x25, x26, [sp, #64]
  40b6e4:	ldp	x27, x28, [sp, #80]
  40b6e8:	ldp	x29, x30, [sp], #112
  40b6ec:	ret
  40b6f0:	mov	x19, x26
  40b6f4:	b	40b5c8 <ferror@plt+0x8898>
  40b6f8:	sub	x20, x23, x28
  40b6fc:	mov	x0, #0x38e3                	// #14563
  40b700:	movk	x0, #0xe38e, lsl #16
  40b704:	movk	x0, #0x8e38, lsl #32
  40b708:	movk	x0, #0xe3, lsl #48
  40b70c:	str	x0, [sp, #104]
  40b710:	b	40b3ac <ferror@plt+0x867c>
  40b714:	stp	x29, x30, [sp, #-96]!
  40b718:	mov	x29, sp
  40b71c:	stp	x19, x20, [sp, #16]
  40b720:	stp	x21, x22, [sp, #32]
  40b724:	stp	x23, x24, [sp, #48]
  40b728:	stp	x25, x26, [sp, #64]
  40b72c:	str	x27, [sp, #80]
  40b730:	mov	x22, x0
  40b734:	mov	x26, x2
  40b738:	ldr	x19, [x0, #8]
  40b73c:	ldr	x23, [x0]
  40b740:	sub	x0, x19, x23
  40b744:	mov	x2, #0x7ffffffffffffff     	// #576460752303423487
  40b748:	cmp	x2, x0, asr #4
  40b74c:	b.eq	40b828 <ferror@plt+0x8af8>  // b.none
  40b750:	mov	x20, x1
  40b754:	mov	x25, x1
  40b758:	asr	x1, x0, #4
  40b75c:	cmp	x1, #0x0
  40b760:	csinc	x0, x1, xzr, ne  // ne = any
  40b764:	adds	x0, x0, x1
  40b768:	b.cs	40b83c <ferror@plt+0x8b0c>  // b.hs, b.nlast
  40b76c:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  40b770:	cmp	x0, x24
  40b774:	csel	x24, x0, x24, ls  // ls = plast
  40b778:	sub	x27, x20, x23
  40b77c:	mov	x21, #0x0                   	// #0
  40b780:	cbz	x0, 40b790 <ferror@plt+0x8a60>
  40b784:	lsl	x0, x24, #4
  40b788:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40b78c:	mov	x21, x0
  40b790:	add	x27, x21, x27
  40b794:	ldp	x0, x1, [x26]
  40b798:	stp	x0, x1, [x27]
  40b79c:	cmp	x20, x23
  40b7a0:	b.eq	40b834 <ferror@plt+0x8b04>  // b.none
  40b7a4:	mov	x3, x21
  40b7a8:	mov	x2, x23
  40b7ac:	ldp	x0, x1, [x2], #16
  40b7b0:	stp	x0, x1, [x3], #16
  40b7b4:	cmp	x25, x2
  40b7b8:	b.ne	40b7ac <ferror@plt+0x8a7c>  // b.any
  40b7bc:	sub	x25, x20, x23
  40b7c0:	add	x25, x21, x25
  40b7c4:	add	x25, x25, #0x10
  40b7c8:	cmp	x20, x19
  40b7cc:	b.eq	40b7f0 <ferror@plt+0x8ac0>  // b.none
  40b7d0:	mov	x2, x20
  40b7d4:	mov	x3, x25
  40b7d8:	ldp	x0, x1, [x2], #16
  40b7dc:	stp	x0, x1, [x3], #16
  40b7e0:	cmp	x2, x19
  40b7e4:	b.ne	40b7d8 <ferror@plt+0x8aa8>  // b.any
  40b7e8:	sub	x19, x19, x20
  40b7ec:	add	x25, x25, x19
  40b7f0:	cbz	x23, 40b7fc <ferror@plt+0x8acc>
  40b7f4:	mov	x0, x23
  40b7f8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b7fc:	str	x21, [x22]
  40b800:	str	x25, [x22, #8]
  40b804:	add	x21, x21, x24, lsl #4
  40b808:	str	x21, [x22, #16]
  40b80c:	ldp	x19, x20, [sp, #16]
  40b810:	ldp	x21, x22, [sp, #32]
  40b814:	ldp	x23, x24, [sp, #48]
  40b818:	ldp	x25, x26, [sp, #64]
  40b81c:	ldr	x27, [sp, #80]
  40b820:	ldp	x29, x30, [sp], #96
  40b824:	ret
  40b828:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40b82c:	add	x0, x0, #0xd48
  40b830:	bl	402f0c <ferror@plt+0x1dc>
  40b834:	mov	x25, x21
  40b838:	b	40b7c4 <ferror@plt+0x8a94>
  40b83c:	sub	x27, x20, x23
  40b840:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  40b844:	b	40b784 <ferror@plt+0x8a54>
  40b848:	stp	x29, x30, [sp, #-80]!
  40b84c:	mov	x29, sp
  40b850:	stp	x19, x20, [sp, #16]
  40b854:	stp	x21, x22, [sp, #32]
  40b858:	stp	x23, x24, [sp, #48]
  40b85c:	stp	x25, x26, [sp, #64]
  40b860:	mov	x25, x1
  40b864:	mov	x26, x2
  40b868:	ldr	x23, [x0, #8]
  40b86c:	ldr	x24, [x0]
  40b870:	sub	x1, x23, x24
  40b874:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  40b878:	cmp	x2, x1, asr #3
  40b87c:	b.eq	40b928 <ferror@plt+0x8bf8>  // b.none
  40b880:	mov	x20, x0
  40b884:	asr	x0, x1, #3
  40b888:	cmp	x0, #0x0
  40b88c:	csinc	x3, x0, xzr, ne  // ne = any
  40b890:	adds	x3, x3, x0
  40b894:	b.cs	40b960 <ferror@plt+0x8c30>  // b.hs, b.nlast
  40b898:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40b89c:	cmp	x3, x22
  40b8a0:	csel	x22, x3, x22, ls  // ls = plast
  40b8a4:	sub	x19, x25, x24
  40b8a8:	mov	x21, #0x0                   	// #0
  40b8ac:	cbz	x3, 40b8bc <ferror@plt+0x8b8c>
  40b8b0:	lsl	x0, x22, #3
  40b8b4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40b8b8:	mov	x21, x0
  40b8bc:	ldr	x0, [x26]
  40b8c0:	str	x0, [x21, x19]
  40b8c4:	cmp	x19, #0x0
  40b8c8:	b.gt	40b934 <ferror@plt+0x8c04>
  40b8cc:	add	x19, x19, #0x8
  40b8d0:	add	x19, x21, x19
  40b8d4:	sub	x23, x23, x25
  40b8d8:	cmp	x23, #0x0
  40b8dc:	b.le	40b8f0 <ferror@plt+0x8bc0>
  40b8e0:	mov	x2, x23
  40b8e4:	mov	x1, x25
  40b8e8:	mov	x0, x19
  40b8ec:	bl	402620 <memcpy@plt>
  40b8f0:	add	x19, x19, x23
  40b8f4:	cbz	x24, 40b900 <ferror@plt+0x8bd0>
  40b8f8:	mov	x0, x24
  40b8fc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40b900:	str	x21, [x20]
  40b904:	str	x19, [x20, #8]
  40b908:	add	x21, x21, x22, lsl #3
  40b90c:	str	x21, [x20, #16]
  40b910:	ldp	x19, x20, [sp, #16]
  40b914:	ldp	x21, x22, [sp, #32]
  40b918:	ldp	x23, x24, [sp, #48]
  40b91c:	ldp	x25, x26, [sp, #64]
  40b920:	ldp	x29, x30, [sp], #80
  40b924:	ret
  40b928:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40b92c:	add	x0, x0, #0xd48
  40b930:	bl	402f0c <ferror@plt+0x1dc>
  40b934:	mov	x2, x19
  40b938:	mov	x1, x24
  40b93c:	mov	x0, x21
  40b940:	bl	402630 <memmove@plt>
  40b944:	add	x19, x19, #0x8
  40b948:	add	x19, x21, x19
  40b94c:	sub	x23, x23, x25
  40b950:	cmp	x23, #0x0
  40b954:	b.gt	40b8e0 <ferror@plt+0x8bb0>
  40b958:	add	x19, x19, x23
  40b95c:	b	40b8f8 <ferror@plt+0x8bc8>
  40b960:	sub	x19, x25, x24
  40b964:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40b968:	b	40b8b0 <ferror@plt+0x8b80>
  40b96c:	stp	x29, x30, [sp, #-96]!
  40b970:	mov	x29, sp
  40b974:	stp	x19, x20, [sp, #16]
  40b978:	stp	x21, x22, [sp, #32]
  40b97c:	stp	x23, x24, [sp, #48]
  40b980:	stp	x25, x26, [sp, #64]
  40b984:	str	x27, [sp, #80]
  40b988:	mov	x22, x0
  40b98c:	mov	x26, x2
  40b990:	ldr	x19, [x0, #8]
  40b994:	ldr	x23, [x0]
  40b998:	sub	x0, x19, x23
  40b99c:	mov	x2, #0x3ffffffffffffff     	// #288230376151711743
  40b9a0:	cmp	x2, x0, asr #5
  40b9a4:	b.eq	40baec <ferror@plt+0x8dbc>  // b.none
  40b9a8:	mov	x20, x1
  40b9ac:	mov	x25, x1
  40b9b0:	asr	x1, x0, #5
  40b9b4:	cmp	x1, #0x0
  40b9b8:	csinc	x0, x1, xzr, ne  // ne = any
  40b9bc:	adds	x0, x0, x1
  40b9c0:	b.cs	40bb00 <ferror@plt+0x8dd0>  // b.hs, b.nlast
  40b9c4:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
  40b9c8:	cmp	x0, x24
  40b9cc:	csel	x24, x0, x24, ls  // ls = plast
  40b9d0:	sub	x27, x20, x23
  40b9d4:	mov	x21, #0x0                   	// #0
  40b9d8:	cbz	x0, 40b9e8 <ferror@plt+0x8cb8>
  40b9dc:	lsl	x0, x24, #5
  40b9e0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40b9e4:	mov	x21, x0
  40b9e8:	add	x2, x21, x27
  40b9ec:	mov	x0, x26
  40b9f0:	ldr	w1, [x0], #8
  40b9f4:	str	w1, [x21, x27]
  40b9f8:	add	x1, x2, #0x8
  40b9fc:	ldr	x3, [x26, #8]
  40ba00:	str	x3, [x2, #8]
  40ba04:	ldr	x2, [x0, #8]
  40ba08:	str	x2, [x1, #8]
  40ba0c:	ldr	x2, [x0, #16]
  40ba10:	str	x2, [x1, #16]
  40ba14:	str	xzr, [x0, #16]
  40ba18:	str	xzr, [x0, #8]
  40ba1c:	str	xzr, [x26, #8]
  40ba20:	cmp	x20, x23
  40ba24:	b.eq	40baf8 <ferror@plt+0x8dc8>  // b.none
  40ba28:	mov	x3, x21
  40ba2c:	mov	x2, x23
  40ba30:	ldr	w0, [x2]
  40ba34:	str	w0, [x3]
  40ba38:	ldr	x0, [x2, #8]
  40ba3c:	str	x0, [x3, #8]
  40ba40:	ldr	x0, [x2, #16]
  40ba44:	str	x0, [x3, #16]
  40ba48:	ldr	x0, [x2, #24]
  40ba4c:	str	x0, [x3, #24]
  40ba50:	add	x2, x2, #0x20
  40ba54:	add	x3, x3, #0x20
  40ba58:	cmp	x25, x2
  40ba5c:	b.ne	40ba30 <ferror@plt+0x8d00>  // b.any
  40ba60:	sub	x25, x20, x23
  40ba64:	add	x25, x21, x25
  40ba68:	add	x25, x25, #0x20
  40ba6c:	cmp	x20, x19
  40ba70:	b.eq	40bab4 <ferror@plt+0x8d84>  // b.none
  40ba74:	mov	x2, x20
  40ba78:	mov	x3, x25
  40ba7c:	ldr	w0, [x2]
  40ba80:	str	w0, [x3]
  40ba84:	ldr	x0, [x2, #8]
  40ba88:	str	x0, [x3, #8]
  40ba8c:	ldr	x0, [x2, #16]
  40ba90:	str	x0, [x3, #16]
  40ba94:	ldr	x0, [x2, #24]
  40ba98:	str	x0, [x3, #24]
  40ba9c:	add	x2, x2, #0x20
  40baa0:	add	x3, x3, #0x20
  40baa4:	cmp	x2, x19
  40baa8:	b.ne	40ba7c <ferror@plt+0x8d4c>  // b.any
  40baac:	sub	x19, x19, x20
  40bab0:	add	x25, x25, x19
  40bab4:	cbz	x23, 40bac0 <ferror@plt+0x8d90>
  40bab8:	mov	x0, x23
  40babc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40bac0:	str	x21, [x22]
  40bac4:	str	x25, [x22, #8]
  40bac8:	add	x21, x21, x24, lsl #5
  40bacc:	str	x21, [x22, #16]
  40bad0:	ldp	x19, x20, [sp, #16]
  40bad4:	ldp	x21, x22, [sp, #32]
  40bad8:	ldp	x23, x24, [sp, #48]
  40badc:	ldp	x25, x26, [sp, #64]
  40bae0:	ldr	x27, [sp, #80]
  40bae4:	ldp	x29, x30, [sp], #96
  40bae8:	ret
  40baec:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40baf0:	add	x0, x0, #0xd48
  40baf4:	bl	402f0c <ferror@plt+0x1dc>
  40baf8:	mov	x25, x21
  40bafc:	b	40ba68 <ferror@plt+0x8d38>
  40bb00:	sub	x27, x20, x23
  40bb04:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
  40bb08:	b	40b9dc <ferror@plt+0x8cac>
  40bb0c:	stp	x29, x30, [sp, #-80]!
  40bb10:	mov	x29, sp
  40bb14:	stp	x19, x20, [sp, #16]
  40bb18:	stp	x21, x22, [sp, #32]
  40bb1c:	stp	x23, x24, [sp, #48]
  40bb20:	stp	x25, x26, [sp, #64]
  40bb24:	mov	x25, x1
  40bb28:	mov	x26, x2
  40bb2c:	ldr	x23, [x0, #8]
  40bb30:	ldr	x24, [x0]
  40bb34:	sub	x1, x23, x24
  40bb38:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  40bb3c:	cmp	x2, x1, asr #3
  40bb40:	b.eq	40bbec <ferror@plt+0x8ebc>  // b.none
  40bb44:	mov	x20, x0
  40bb48:	asr	x0, x1, #3
  40bb4c:	cmp	x0, #0x0
  40bb50:	csinc	x3, x0, xzr, ne  // ne = any
  40bb54:	adds	x3, x3, x0
  40bb58:	b.cs	40bc24 <ferror@plt+0x8ef4>  // b.hs, b.nlast
  40bb5c:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40bb60:	cmp	x3, x22
  40bb64:	csel	x22, x3, x22, ls  // ls = plast
  40bb68:	sub	x19, x25, x24
  40bb6c:	mov	x21, #0x0                   	// #0
  40bb70:	cbz	x3, 40bb80 <ferror@plt+0x8e50>
  40bb74:	lsl	x0, x22, #3
  40bb78:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40bb7c:	mov	x21, x0
  40bb80:	ldr	x0, [x26]
  40bb84:	str	x0, [x21, x19]
  40bb88:	cmp	x19, #0x0
  40bb8c:	b.gt	40bbf8 <ferror@plt+0x8ec8>
  40bb90:	add	x19, x19, #0x8
  40bb94:	add	x19, x21, x19
  40bb98:	sub	x23, x23, x25
  40bb9c:	cmp	x23, #0x0
  40bba0:	b.le	40bbb4 <ferror@plt+0x8e84>
  40bba4:	mov	x2, x23
  40bba8:	mov	x1, x25
  40bbac:	mov	x0, x19
  40bbb0:	bl	402620 <memcpy@plt>
  40bbb4:	add	x19, x19, x23
  40bbb8:	cbz	x24, 40bbc4 <ferror@plt+0x8e94>
  40bbbc:	mov	x0, x24
  40bbc0:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  40bbc4:	str	x21, [x20]
  40bbc8:	str	x19, [x20, #8]
  40bbcc:	add	x21, x21, x22, lsl #3
  40bbd0:	str	x21, [x20, #16]
  40bbd4:	ldp	x19, x20, [sp, #16]
  40bbd8:	ldp	x21, x22, [sp, #32]
  40bbdc:	ldp	x23, x24, [sp, #48]
  40bbe0:	ldp	x25, x26, [sp, #64]
  40bbe4:	ldp	x29, x30, [sp], #80
  40bbe8:	ret
  40bbec:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40bbf0:	add	x0, x0, #0xd48
  40bbf4:	bl	402f0c <ferror@plt+0x1dc>
  40bbf8:	mov	x2, x19
  40bbfc:	mov	x1, x24
  40bc00:	mov	x0, x21
  40bc04:	bl	402630 <memmove@plt>
  40bc08:	add	x19, x19, #0x8
  40bc0c:	add	x19, x21, x19
  40bc10:	sub	x23, x23, x25
  40bc14:	cmp	x23, #0x0
  40bc18:	b.gt	40bba4 <ferror@plt+0x8e74>
  40bc1c:	add	x19, x19, x23
  40bc20:	b	40bbbc <ferror@plt+0x8e8c>
  40bc24:	sub	x19, x25, x24
  40bc28:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  40bc2c:	b	40bb74 <ferror@plt+0x8e44>
  40bc30:	stp	x29, x30, [sp, #-64]!
  40bc34:	mov	x29, sp
  40bc38:	stp	x19, x20, [sp, #16]
  40bc3c:	str	x21, [sp, #32]
  40bc40:	cmp	x1, #0x0
  40bc44:	ccmp	x1, x2, #0x4, eq  // eq = none
  40bc48:	b.ne	40bc98 <ferror@plt+0x8f68>  // b.any
  40bc4c:	mov	x20, x0
  40bc50:	mov	x21, x1
  40bc54:	sub	x19, x2, x1
  40bc58:	str	x19, [sp, #56]
  40bc5c:	cmp	x19, #0xf
  40bc60:	b.hi	40bca4 <ferror@plt+0x8f74>  // b.pmore
  40bc64:	ldr	x0, [x0]
  40bc68:	cmp	x19, #0x1
  40bc6c:	b.ne	40bccc <ferror@plt+0x8f9c>  // b.any
  40bc70:	ldrb	w1, [x1]
  40bc74:	strb	w1, [x0]
  40bc78:	ldr	x0, [sp, #56]
  40bc7c:	str	x0, [x20, #8]
  40bc80:	ldr	x1, [x20]
  40bc84:	strb	wzr, [x1, x0]
  40bc88:	ldp	x19, x20, [sp, #16]
  40bc8c:	ldr	x21, [sp, #32]
  40bc90:	ldp	x29, x30, [sp], #64
  40bc94:	ret
  40bc98:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40bc9c:	add	x0, x0, #0xdb0
  40bca0:	bl	402e10 <ferror@plt+0xe0>
  40bca4:	mov	x2, #0x0                   	// #0
  40bca8:	add	x1, sp, #0x38
  40bcac:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  40bcb0:	str	x0, [x20]
  40bcb4:	ldr	x1, [sp, #56]
  40bcb8:	str	x1, [x20, #16]
  40bcbc:	mov	x2, x19
  40bcc0:	mov	x1, x21
  40bcc4:	bl	402620 <memcpy@plt>
  40bcc8:	b	40bc78 <ferror@plt+0x8f48>
  40bccc:	cbz	x19, 40bc78 <ferror@plt+0x8f48>
  40bcd0:	b	40bcbc <ferror@plt+0x8f8c>
  40bcd4:	stp	x29, x30, [sp, #-48]!
  40bcd8:	mov	x29, sp
  40bcdc:	stp	x19, x20, [sp, #16]
  40bce0:	stp	x21, x22, [sp, #32]
  40bce4:	mov	x21, x0
  40bce8:	mov	x22, x1
  40bcec:	mov	x19, x0
  40bcf0:	mov	x20, x2
  40bcf4:	sub	x0, x1, x0
  40bcf8:	cmp	xzr, x0, asr #5
  40bcfc:	b.ge	40bd54 <ferror@plt+0x9024>  // b.tcont
  40bd00:	asr	x1, x0, #5
  40bd04:	add	x21, x21, x1, lsl #5
  40bd08:	ldr	x0, [x19]
  40bd0c:	blr	x20
  40bd10:	and	w0, w0, #0xff
  40bd14:	cbnz	w0, 40bd78 <ferror@plt+0x9048>
  40bd18:	ldr	x0, [x19, #8]
  40bd1c:	blr	x20
  40bd20:	and	w0, w0, #0xff
  40bd24:	cbnz	w0, 40bd8c <ferror@plt+0x905c>
  40bd28:	ldr	x0, [x19, #16]
  40bd2c:	blr	x20
  40bd30:	and	w0, w0, #0xff
  40bd34:	cbnz	w0, 40bd94 <ferror@plt+0x9064>
  40bd38:	ldr	x0, [x19, #24]
  40bd3c:	blr	x20
  40bd40:	and	w0, w0, #0xff
  40bd44:	cbnz	w0, 40bd9c <ferror@plt+0x906c>
  40bd48:	add	x19, x19, #0x20
  40bd4c:	cmp	x19, x21
  40bd50:	b.ne	40bd08 <ferror@plt+0x8fd8>  // b.any
  40bd54:	sub	x0, x22, x19
  40bd58:	cmp	x0, #0x10
  40bd5c:	b.eq	40bdc0 <ferror@plt+0x9090>  // b.none
  40bd60:	cmp	x0, #0x18
  40bd64:	b.eq	40bda4 <ferror@plt+0x9074>  // b.none
  40bd68:	cmp	x0, #0x8
  40bd6c:	b.eq	40bddc <ferror@plt+0x90ac>  // b.none
  40bd70:	mov	x0, x22
  40bd74:	b	40bd7c <ferror@plt+0x904c>
  40bd78:	mov	x0, x19
  40bd7c:	ldp	x19, x20, [sp, #16]
  40bd80:	ldp	x21, x22, [sp, #32]
  40bd84:	ldp	x29, x30, [sp], #48
  40bd88:	ret
  40bd8c:	add	x0, x19, #0x8
  40bd90:	b	40bd7c <ferror@plt+0x904c>
  40bd94:	add	x0, x19, #0x10
  40bd98:	b	40bd7c <ferror@plt+0x904c>
  40bd9c:	add	x0, x19, #0x18
  40bda0:	b	40bd7c <ferror@plt+0x904c>
  40bda4:	ldr	x0, [x19]
  40bda8:	blr	x20
  40bdac:	and	w0, w0, #0xff
  40bdb0:	cbz	w0, 40bdbc <ferror@plt+0x908c>
  40bdb4:	mov	x0, x19
  40bdb8:	b	40bd7c <ferror@plt+0x904c>
  40bdbc:	add	x19, x19, #0x8
  40bdc0:	ldr	x0, [x19]
  40bdc4:	blr	x20
  40bdc8:	and	w0, w0, #0xff
  40bdcc:	cbz	w0, 40bdd8 <ferror@plt+0x90a8>
  40bdd0:	mov	x0, x19
  40bdd4:	b	40bd7c <ferror@plt+0x904c>
  40bdd8:	add	x19, x19, #0x8
  40bddc:	ldr	x0, [x19]
  40bde0:	blr	x20
  40bde4:	and	w0, w0, #0xff
  40bde8:	cbz	w0, 40bd70 <ferror@plt+0x9040>
  40bdec:	mov	x0, x19
  40bdf0:	b	40bd7c <ferror@plt+0x904c>
  40bdf4:	cmp	x1, x0
  40bdf8:	b.eq	40beac <ferror@plt+0x917c>  // b.none
  40bdfc:	stp	x29, x30, [sp, #-64]!
  40be00:	mov	x29, sp
  40be04:	stp	x19, x20, [sp, #16]
  40be08:	stp	x21, x22, [sp, #32]
  40be0c:	mov	x21, x0
  40be10:	mov	x22, x1
  40be14:	add	x19, x0, #0x4
  40be18:	cmp	x19, x1
  40be1c:	b.eq	40be9c <ferror@plt+0x916c>  // b.none
  40be20:	str	x23, [sp, #48]
  40be24:	mov	x23, #0x4                   	// #4
  40be28:	b	40be60 <ferror@plt+0x9130>
  40be2c:	sub	x0, x19, #0x4
  40be30:	ldur	w1, [x19, #-4]
  40be34:	cmp	w20, w1
  40be38:	b.cs	40be90 <ferror@plt+0x9160>  // b.hs, b.nlast
  40be3c:	str	w1, [x0, #4]
  40be40:	mov	x2, x0
  40be44:	ldr	w1, [x0, #-4]!
  40be48:	cmp	w20, w1
  40be4c:	b.cc	40be3c <ferror@plt+0x910c>  // b.lo, b.ul, b.last
  40be50:	str	w20, [x2]
  40be54:	add	x19, x19, #0x4
  40be58:	cmp	x22, x19
  40be5c:	b.eq	40be98 <ferror@plt+0x9168>  // b.none
  40be60:	ldr	w20, [x19]
  40be64:	ldr	w0, [x21]
  40be68:	cmp	w20, w0
  40be6c:	b.cs	40be2c <ferror@plt+0x90fc>  // b.hs, b.nlast
  40be70:	cmp	x21, x19
  40be74:	b.eq	40be88 <ferror@plt+0x9158>  // b.none
  40be78:	sub	x2, x19, x21
  40be7c:	mov	x1, x21
  40be80:	add	x0, x21, x23
  40be84:	bl	402630 <memmove@plt>
  40be88:	str	w20, [x21]
  40be8c:	b	40be54 <ferror@plt+0x9124>
  40be90:	mov	x2, x19
  40be94:	b	40be50 <ferror@plt+0x9120>
  40be98:	ldr	x23, [sp, #48]
  40be9c:	ldp	x19, x20, [sp, #16]
  40bea0:	ldp	x21, x22, [sp, #32]
  40bea4:	ldp	x29, x30, [sp], #64
  40bea8:	ret
  40beac:	ret
  40beb0:	stp	x29, x30, [sp, #-32]!
  40beb4:	mov	x29, sp
  40beb8:	stp	x19, x20, [sp, #16]
  40bebc:	mov	x20, x1
  40bec0:	ldr	x19, [x0, #16]
  40bec4:	cbz	x19, 40bed8 <ferror@plt+0x91a8>
  40bec8:	ldr	w4, [x1]
  40becc:	mov	w6, #0x0                   	// #0
  40bed0:	mov	w5, #0x1                   	// #1
  40bed4:	b	40bf0c <ferror@plt+0x91dc>
  40bed8:	add	x19, x0, #0x8
  40bedc:	ldr	x0, [x0, #24]
  40bee0:	cmp	x0, x19
  40bee4:	b.eq	40bf4c <ferror@plt+0x921c>  // b.none
  40bee8:	mov	x0, x19
  40beec:	bl	455960 <_obstack_memory_used@@Base+0x15c0>
  40bef0:	mov	x1, x19
  40bef4:	mov	x19, x0
  40bef8:	b	40bf2c <ferror@plt+0x91fc>
  40befc:	ldr	x2, [x19, #24]
  40bf00:	mov	w3, w6
  40bf04:	cbz	x2, 40bf24 <ferror@plt+0x91f4>
  40bf08:	mov	x19, x2
  40bf0c:	ldr	w2, [x19, #32]
  40bf10:	cmp	w2, w4
  40bf14:	b.ls	40befc <ferror@plt+0x91cc>  // b.plast
  40bf18:	ldr	x2, [x19, #16]
  40bf1c:	mov	w3, w5
  40bf20:	b	40bf04 <ferror@plt+0x91d4>
  40bf24:	mov	x1, x19
  40bf28:	cbnz	w3, 40bedc <ferror@plt+0x91ac>
  40bf2c:	ldr	w3, [x19, #32]
  40bf30:	ldr	w2, [x20]
  40bf34:	cmp	w3, w2
  40bf38:	csel	x0, x19, xzr, cs  // cs = hs, nlast
  40bf3c:	csel	x1, x1, xzr, cc  // cc = lo, ul, last
  40bf40:	ldp	x19, x20, [sp, #16]
  40bf44:	ldp	x29, x30, [sp], #32
  40bf48:	ret
  40bf4c:	mov	x0, #0x0                   	// #0
  40bf50:	mov	x1, x19
  40bf54:	b	40bf40 <ferror@plt+0x9210>
  40bf58:	stp	x29, x30, [sp, #-48]!
  40bf5c:	mov	x29, sp
  40bf60:	stp	x19, x20, [sp, #16]
  40bf64:	stp	x21, x22, [sp, #32]
  40bf68:	mov	x20, x0
  40bf6c:	mov	x21, x2
  40bf70:	add	x0, x0, #0x8
  40bf74:	cmp	x1, x0
  40bf78:	b.eq	40bfd0 <ferror@plt+0x92a0>  // b.none
  40bf7c:	mov	x19, x1
  40bf80:	ldr	w22, [x2]
  40bf84:	ldr	w0, [x1, #32]
  40bf88:	cmp	w0, w22
  40bf8c:	b.ls	40c020 <ferror@plt+0x92f0>  // b.plast
  40bf90:	ldr	x3, [x20, #24]
  40bf94:	mov	x0, x3
  40bf98:	mov	x1, x3
  40bf9c:	cmp	x3, x19
  40bfa0:	b.eq	40c000 <ferror@plt+0x92d0>  // b.none
  40bfa4:	mov	x0, x19
  40bfa8:	bl	455960 <_obstack_memory_used@@Base+0x15c0>
  40bfac:	mov	x3, x0
  40bfb0:	ldr	w0, [x0, #32]
  40bfb4:	cmp	w0, w22
  40bfb8:	b.cs	40c010 <ferror@plt+0x92e0>  // b.hs, b.nlast
  40bfbc:	ldr	x1, [x3, #24]
  40bfc0:	cmp	x1, #0x0
  40bfc4:	csel	x0, x19, xzr, ne  // ne = any
  40bfc8:	csel	x1, x3, x19, eq  // eq = none
  40bfcc:	b	40c000 <ferror@plt+0x92d0>
  40bfd0:	ldr	x0, [x20, #40]
  40bfd4:	cbz	x0, 40bff4 <ferror@plt+0x92c4>
  40bfd8:	ldr	x1, [x20, #32]
  40bfdc:	ldr	w2, [x2]
  40bfe0:	ldr	w0, [x1, #32]
  40bfe4:	cmp	w2, w0
  40bfe8:	b.ls	40bff4 <ferror@plt+0x92c4>  // b.plast
  40bfec:	mov	x0, #0x0                   	// #0
  40bff0:	b	40c000 <ferror@plt+0x92d0>
  40bff4:	mov	x1, x21
  40bff8:	mov	x0, x20
  40bffc:	bl	40beb0 <ferror@plt+0x9180>
  40c000:	ldp	x19, x20, [sp, #16]
  40c004:	ldp	x21, x22, [sp, #32]
  40c008:	ldp	x29, x30, [sp], #48
  40c00c:	ret
  40c010:	mov	x1, x21
  40c014:	mov	x0, x20
  40c018:	bl	40beb0 <ferror@plt+0x9180>
  40c01c:	b	40c000 <ferror@plt+0x92d0>
  40c020:	b.cs	40c074 <ferror@plt+0x9344>  // b.hs, b.nlast
  40c024:	ldr	x3, [x20, #32]
  40c028:	mov	x0, #0x0                   	// #0
  40c02c:	mov	x1, x3
  40c030:	cmp	x3, x19
  40c034:	b.eq	40c000 <ferror@plt+0x92d0>  // b.none
  40c038:	mov	x0, x19
  40c03c:	bl	455900 <_obstack_memory_used@@Base+0x1560>
  40c040:	mov	x3, x0
  40c044:	ldr	w0, [x0, #32]
  40c048:	cmp	w22, w0
  40c04c:	b.cs	40c064 <ferror@plt+0x9334>  // b.hs, b.nlast
  40c050:	ldr	x1, [x19, #24]
  40c054:	cmp	x1, #0x0
  40c058:	csel	x0, x3, xzr, ne  // ne = any
  40c05c:	csel	x1, x3, x19, ne  // ne = any
  40c060:	b	40c000 <ferror@plt+0x92d0>
  40c064:	mov	x1, x21
  40c068:	mov	x0, x20
  40c06c:	bl	40beb0 <ferror@plt+0x9180>
  40c070:	b	40c000 <ferror@plt+0x92d0>
  40c074:	mov	x0, x1
  40c078:	mov	x1, #0x0                   	// #0
  40c07c:	b	40c000 <ferror@plt+0x92d0>
  40c080:	ldr	x6, [x0]
  40c084:	b	40c094 <ferror@plt+0x9364>
  40c088:	cbz	w4, 40c0c4 <ferror@plt+0x9394>
  40c08c:	str	x1, [x5]
  40c090:	sub	x0, x0, #0x8
  40c094:	mov	x5, x0
  40c098:	ldur	x1, [x0, #-8]
  40c09c:	ldr	w2, [x6, #88]
  40c0a0:	ldr	w3, [x1, #88]
  40c0a4:	cmp	w3, w2
  40c0a8:	cset	w4, hi  // hi = pmore
  40c0ac:	b.ne	40c088 <ferror@plt+0x9358>  // b.any
  40c0b0:	ldr	w3, [x6, #92]
  40c0b4:	ldr	w2, [x1, #92]
  40c0b8:	cmp	w3, w2
  40c0bc:	cset	w4, cc  // cc = lo, ul, last
  40c0c0:	b	40c088 <ferror@plt+0x9358>
  40c0c4:	str	x6, [x5]
  40c0c8:	ret
  40c0cc:	cmp	x0, x1
  40c0d0:	b.eq	40c188 <ferror@plt+0x9458>  // b.none
  40c0d4:	stp	x29, x30, [sp, #-64]!
  40c0d8:	mov	x29, sp
  40c0dc:	stp	x19, x20, [sp, #16]
  40c0e0:	stp	x21, x22, [sp, #32]
  40c0e4:	mov	x20, x0
  40c0e8:	mov	x21, x1
  40c0ec:	add	x19, x0, #0x8
  40c0f0:	cmp	x19, x1
  40c0f4:	b.eq	40c178 <ferror@plt+0x9448>  // b.none
  40c0f8:	str	x23, [sp, #48]
  40c0fc:	mov	x23, #0x8                   	// #8
  40c100:	b	40c138 <ferror@plt+0x9408>
  40c104:	ldr	w2, [x22, #92]
  40c108:	ldr	w1, [x5, #92]
  40c10c:	cmp	w2, w1
  40c110:	cset	w4, cc  // cc = lo, ul, last
  40c114:	b	40c158 <ferror@plt+0x9428>
  40c118:	sub	x2, x0, x20
  40c11c:	mov	x1, x20
  40c120:	add	x0, x20, x23
  40c124:	bl	402630 <memmove@plt>
  40c128:	str	x22, [x20]
  40c12c:	add	x19, x19, #0x8
  40c130:	cmp	x21, x19
  40c134:	b.eq	40c174 <ferror@plt+0x9444>  // b.none
  40c138:	mov	x0, x19
  40c13c:	ldr	x22, [x19]
  40c140:	ldr	x5, [x20]
  40c144:	ldr	w3, [x22, #88]
  40c148:	ldr	w1, [x5, #88]
  40c14c:	cmp	w3, w1
  40c150:	cset	w4, cc  // cc = lo, ul, last
  40c154:	b.eq	40c104 <ferror@plt+0x93d4>  // b.none
  40c158:	cbz	w4, 40c168 <ferror@plt+0x9438>
  40c15c:	cmp	x20, x0
  40c160:	b.ne	40c118 <ferror@plt+0x93e8>  // b.any
  40c164:	b	40c128 <ferror@plt+0x93f8>
  40c168:	mov	w1, #0x0                   	// #0
  40c16c:	bl	40c080 <ferror@plt+0x9350>
  40c170:	b	40c12c <ferror@plt+0x93fc>
  40c174:	ldr	x23, [sp, #48]
  40c178:	ldp	x19, x20, [sp, #16]
  40c17c:	ldp	x21, x22, [sp, #32]
  40c180:	ldp	x29, x30, [sp], #64
  40c184:	ret
  40c188:	ret
  40c18c:	stp	x29, x30, [sp, #-48]!
  40c190:	mov	x29, sp
  40c194:	stp	x19, x20, [sp, #16]
  40c198:	str	x21, [sp, #32]
  40c19c:	mov	x20, x1
  40c1a0:	mov	x21, x1
  40c1a4:	sub	x1, x1, x0
  40c1a8:	cmp	x1, #0x80
  40c1ac:	b.le	40c1e0 <ferror@plt+0x94b0>
  40c1b0:	add	x19, x0, #0x80
  40c1b4:	mov	x1, x19
  40c1b8:	bl	40c0cc <ferror@plt+0x939c>
  40c1bc:	cmp	x20, x19
  40c1c0:	b.eq	40c1e8 <ferror@plt+0x94b8>  // b.none
  40c1c4:	mov	w1, #0x0                   	// #0
  40c1c8:	mov	x0, x19
  40c1cc:	bl	40c080 <ferror@plt+0x9350>
  40c1d0:	add	x19, x19, #0x8
  40c1d4:	cmp	x21, x19
  40c1d8:	b.ne	40c1c4 <ferror@plt+0x9494>  // b.any
  40c1dc:	b	40c1e8 <ferror@plt+0x94b8>
  40c1e0:	mov	x1, x20
  40c1e4:	bl	40c0cc <ferror@plt+0x939c>
  40c1e8:	ldp	x19, x20, [sp, #16]
  40c1ec:	ldr	x21, [sp, #32]
  40c1f0:	ldp	x29, x30, [sp], #48
  40c1f4:	ret
  40c1f8:	stp	x29, x30, [sp, #-80]!
  40c1fc:	mov	x29, sp
  40c200:	stp	x19, x20, [sp, #16]
  40c204:	stp	x21, x22, [sp, #32]
  40c208:	stp	x23, x24, [sp, #48]
  40c20c:	mov	x19, x0
  40c210:	ldr	x23, [x0]
  40c214:	ldr	x24, [x0, #8]
  40c218:	mov	x20, x0
  40c21c:	ldr	x22, [x20], #-16
  40c220:	ldr	x1, [x20]
  40c224:	mov	x0, x22
  40c228:	bl	402a20 <strcmp@plt>
  40c22c:	tbz	w0, #31, 40c24c <ferror@plt+0x951c>
  40c230:	ldr	x0, [x20]
  40c234:	str	x0, [x19]
  40c238:	ldr	w0, [x20, #8]
  40c23c:	str	w0, [x19, #8]
  40c240:	sub	x20, x20, #0x10
  40c244:	sub	x19, x19, #0x10
  40c248:	b	40c220 <ferror@plt+0x94f0>
  40c24c:	str	x23, [sp, #64]
  40c250:	str	x24, [sp, #72]
  40c254:	str	x23, [x19]
  40c258:	ldr	w0, [sp, #72]
  40c25c:	str	w0, [x19, #8]
  40c260:	ldp	x19, x20, [sp, #16]
  40c264:	ldp	x21, x22, [sp, #32]
  40c268:	ldp	x23, x24, [sp, #48]
  40c26c:	ldp	x29, x30, [sp], #80
  40c270:	ret
  40c274:	cmp	x1, x0
  40c278:	b.eq	40c328 <ferror@plt+0x95f8>  // b.none
  40c27c:	stp	x29, x30, [sp, #-96]!
  40c280:	mov	x29, sp
  40c284:	stp	x19, x20, [sp, #16]
  40c288:	stp	x23, x24, [sp, #48]
  40c28c:	mov	x20, x0
  40c290:	mov	x23, x1
  40c294:	add	x19, x0, #0x10
  40c298:	cmp	x19, x1
  40c29c:	b.eq	40c318 <ferror@plt+0x95e8>  // b.none
  40c2a0:	stp	x21, x22, [sp, #32]
  40c2a4:	str	x25, [sp, #64]
  40c2a8:	mov	x25, #0x10                  	// #16
  40c2ac:	b	40c2f0 <ferror@plt+0x95c0>
  40c2b0:	ldr	x21, [x19]
  40c2b4:	ldr	x24, [x19, #8]
  40c2b8:	cmp	x20, x19
  40c2bc:	b.eq	40c2d0 <ferror@plt+0x95a0>  // b.none
  40c2c0:	sub	x2, x19, x20
  40c2c4:	mov	x1, x20
  40c2c8:	add	x0, x20, x25
  40c2cc:	bl	402630 <memmove@plt>
  40c2d0:	str	x21, [sp, #80]
  40c2d4:	str	x24, [sp, #88]
  40c2d8:	str	x21, [x20]
  40c2dc:	ldr	w0, [sp, #88]
  40c2e0:	str	w0, [x20, #8]
  40c2e4:	add	x19, x19, #0x10
  40c2e8:	cmp	x23, x19
  40c2ec:	b.eq	40c310 <ferror@plt+0x95e0>  // b.none
  40c2f0:	ldr	x1, [x20]
  40c2f4:	ldr	x0, [x19]
  40c2f8:	bl	402a20 <strcmp@plt>
  40c2fc:	tbnz	w0, #31, 40c2b0 <ferror@plt+0x9580>
  40c300:	mov	w1, #0x0                   	// #0
  40c304:	mov	x0, x19
  40c308:	bl	40c1f8 <ferror@plt+0x94c8>
  40c30c:	b	40c2e4 <ferror@plt+0x95b4>
  40c310:	ldp	x21, x22, [sp, #32]
  40c314:	ldr	x25, [sp, #64]
  40c318:	ldp	x19, x20, [sp, #16]
  40c31c:	ldp	x23, x24, [sp, #48]
  40c320:	ldp	x29, x30, [sp], #96
  40c324:	ret
  40c328:	ret
  40c32c:	mov	x12, x0
  40c330:	sub	x4, x2, #0x1
  40c334:	add	x4, x4, x4, lsr #63
  40c338:	asr	x13, x4, #1
  40c33c:	cmp	x1, x4, asr #1
  40c340:	b.ge	40c414 <ferror@plt+0x96e4>  // b.tcont
  40c344:	mov	x8, x1
  40c348:	b	40c368 <ferror@plt+0x9638>
  40c34c:	cmp	w9, #0x0
  40c350:	csel	x4, x4, x5, eq  // eq = none
  40c354:	ldr	x5, [x12, x4, lsl #3]
  40c358:	str	x5, [x12, x8, lsl #3]
  40c35c:	cmp	x4, x13
  40c360:	b.ge	40c3a4 <ferror@plt+0x9674>  // b.tcont
  40c364:	mov	x8, x4
  40c368:	add	x4, x8, #0x1
  40c36c:	lsl	x4, x4, #1
  40c370:	sub	x5, x4, #0x1
  40c374:	ldr	x10, [x12, x4, lsl #3]
  40c378:	ldr	x11, [x12, x5, lsl #3]
  40c37c:	ldr	w6, [x10, #88]
  40c380:	ldr	w7, [x11, #88]
  40c384:	cmp	w7, w6
  40c388:	cset	w9, hi  // hi = pmore
  40c38c:	b.ne	40c34c <ferror@plt+0x961c>  // b.any
  40c390:	ldr	w7, [x11, #92]
  40c394:	ldr	w6, [x10, #92]
  40c398:	cmp	w7, w6
  40c39c:	cset	w9, hi  // hi = pmore
  40c3a0:	b	40c34c <ferror@plt+0x961c>
  40c3a4:	tbz	w2, #0, 40c420 <ferror@plt+0x96f0>
  40c3a8:	sub	x5, x4, #0x1
  40c3ac:	add	x5, x5, x5, lsr #63
  40c3b0:	asr	x5, x5, #1
  40c3b4:	cmp	x4, x1
  40c3b8:	b.gt	40c3e8 <ferror@plt+0x96b8>
  40c3bc:	str	x3, [x0, x4, lsl #3]
  40c3c0:	ret
  40c3c4:	cbz	w8, 40c3bc <ferror@plt+0x968c>
  40c3c8:	str	x2, [x12, x4, lsl #3]
  40c3cc:	sub	x2, x5, #0x1
  40c3d0:	add	x2, x2, x2, lsr #63
  40c3d4:	asr	x2, x2, #1
  40c3d8:	mov	x4, x5
  40c3dc:	cmp	x1, x5
  40c3e0:	b.ge	40c3bc <ferror@plt+0x968c>  // b.tcont
  40c3e4:	mov	x5, x2
  40c3e8:	ldr	x2, [x12, x5, lsl #3]
  40c3ec:	ldr	w7, [x2, #88]
  40c3f0:	ldr	w6, [x3, #88]
  40c3f4:	cmp	w7, w6
  40c3f8:	cset	w8, cc  // cc = lo, ul, last
  40c3fc:	b.ne	40c3c4 <ferror@plt+0x9694>  // b.any
  40c400:	ldr	w7, [x2, #92]
  40c404:	ldr	w6, [x3, #92]
  40c408:	cmp	w7, w6
  40c40c:	cset	w8, cc  // cc = lo, ul, last
  40c410:	b	40c3c4 <ferror@plt+0x9694>
  40c414:	mov	x4, x1
  40c418:	tbnz	w2, #0, 40c3bc <ferror@plt+0x968c>
  40c41c:	mov	x4, x1
  40c420:	sub	x2, x2, #0x2
  40c424:	add	x2, x2, x2, lsr #63
  40c428:	cmp	x4, x2, asr #1
  40c42c:	b.ne	40c3a8 <ferror@plt+0x9678>  // b.any
  40c430:	lsl	x2, x4, #1
  40c434:	add	x2, x2, #0x1
  40c438:	ldr	x5, [x0, x2, lsl #3]
  40c43c:	str	x5, [x0, x4, lsl #3]
  40c440:	mov	x4, x2
  40c444:	b	40c3a8 <ferror@plt+0x9678>
  40c448:	stp	x29, x30, [sp, #-64]!
  40c44c:	mov	x29, sp
  40c450:	stp	x23, x24, [sp, #48]
  40c454:	mov	x23, x0
  40c458:	sub	x0, x1, x0
  40c45c:	cmp	x0, #0x80
  40c460:	b.le	40c6e8 <ferror@plt+0x99b8>
  40c464:	stp	x19, x20, [sp, #16]
  40c468:	stp	x21, x22, [sp, #32]
  40c46c:	mov	x21, x2
  40c470:	mov	w22, w3
  40c474:	mov	x19, x23
  40c478:	cbz	x2, 40c6f4 <ferror@plt+0x99c4>
  40c47c:	add	x24, x23, #0x8
  40c480:	b	40c67c <ferror@plt+0x994c>
  40c484:	sub	x21, x21, #0x1
  40c488:	mov	w4, w22
  40c48c:	ldr	x3, [x19, x21, lsl #3]
  40c490:	mov	x2, x23
  40c494:	mov	x1, x21
  40c498:	mov	x0, x19
  40c49c:	bl	40c32c <ferror@plt+0x95fc>
  40c4a0:	cbnz	x21, 40c484 <ferror@plt+0x9754>
  40c4a4:	sub	x20, x20, #0x8
  40c4a8:	ldr	x3, [x20]
  40c4ac:	ldr	x0, [x19]
  40c4b0:	str	x0, [x20]
  40c4b4:	sub	x21, x20, x19
  40c4b8:	mov	w4, w24
  40c4bc:	asr	x2, x21, #3
  40c4c0:	mov	x1, #0x0                   	// #0
  40c4c4:	mov	x0, x19
  40c4c8:	bl	40c32c <ferror@plt+0x95fc>
  40c4cc:	sub	x20, x20, #0x8
  40c4d0:	cmp	x21, #0x8
  40c4d4:	b.gt	40c4a8 <ferror@plt+0x9778>
  40c4d8:	ldp	x19, x20, [sp, #16]
  40c4dc:	ldp	x21, x22, [sp, #32]
  40c4e0:	b	40c6e8 <ferror@plt+0x99b8>
  40c4e4:	ldr	w7, [x4, #92]
  40c4e8:	ldr	w6, [x3, #92]
  40c4ec:	cmp	w7, w6
  40c4f0:	cset	w6, cc  // cc = lo, ul, last
  40c4f4:	b	40c6ac <ferror@plt+0x997c>
  40c4f8:	ldr	w8, [x3, #92]
  40c4fc:	ldr	w0, [x7, #92]
  40c500:	cmp	w8, w0
  40c504:	cset	w8, cc  // cc = lo, ul, last
  40c508:	b	40c6c4 <ferror@plt+0x9994>
  40c50c:	cmp	w2, w6
  40c510:	cset	w0, cc  // cc = lo, ul, last
  40c514:	b.eq	40c52c <ferror@plt+0x97fc>  // b.none
  40c518:	cbz	w0, 40c540 <ferror@plt+0x9810>
  40c51c:	ldr	x0, [x19]
  40c520:	str	x7, [x19]
  40c524:	stur	x0, [x1, #-8]
  40c528:	b	40c6d4 <ferror@plt+0x99a4>
  40c52c:	ldr	w2, [x4, #92]
  40c530:	ldr	w0, [x7, #92]
  40c534:	cmp	w2, w0
  40c538:	cset	w0, cc  // cc = lo, ul, last
  40c53c:	b	40c518 <ferror@plt+0x97e8>
  40c540:	ldr	x0, [x19]
  40c544:	str	x4, [x19]
  40c548:	str	x0, [x19, #8]
  40c54c:	b	40c6d4 <ferror@plt+0x99a4>
  40c550:	ldur	x7, [x1, #-8]
  40c554:	ldr	w6, [x7, #88]
  40c558:	cmp	w2, w6
  40c55c:	cset	w8, cc  // cc = lo, ul, last
  40c560:	b.eq	40c578 <ferror@plt+0x9848>  // b.none
  40c564:	cbz	w8, 40c58c <ferror@plt+0x985c>
  40c568:	ldr	x0, [x19]
  40c56c:	str	x4, [x19]
  40c570:	str	x0, [x19, #8]
  40c574:	b	40c6d4 <ferror@plt+0x99a4>
  40c578:	ldr	w8, [x4, #92]
  40c57c:	ldr	w2, [x7, #92]
  40c580:	cmp	w8, w2
  40c584:	cset	w8, cc  // cc = lo, ul, last
  40c588:	b	40c564 <ferror@plt+0x9834>
  40c58c:	cmp	w0, w6
  40c590:	cset	w2, cc  // cc = lo, ul, last
  40c594:	b.eq	40c5ac <ferror@plt+0x987c>  // b.none
  40c598:	cbz	w2, 40c5c0 <ferror@plt+0x9890>
  40c59c:	ldr	x0, [x19]
  40c5a0:	str	x7, [x19]
  40c5a4:	stur	x0, [x1, #-8]
  40c5a8:	b	40c6d4 <ferror@plt+0x99a4>
  40c5ac:	ldr	w2, [x3, #92]
  40c5b0:	ldr	w0, [x7, #92]
  40c5b4:	cmp	w2, w0
  40c5b8:	cset	w2, cc  // cc = lo, ul, last
  40c5bc:	b	40c598 <ferror@plt+0x9868>
  40c5c0:	ldr	x0, [x19]
  40c5c4:	str	x3, [x19]
  40c5c8:	str	x0, [x19, x5, lsl #3]
  40c5cc:	b	40c6d4 <ferror@plt+0x99a4>
  40c5d0:	ldr	w6, [x4, #92]
  40c5d4:	ldr	w5, [x7, #92]
  40c5d8:	cmp	w6, w5
  40c5dc:	cset	w5, cc  // cc = lo, ul, last
  40c5e0:	b	40c64c <ferror@plt+0x991c>
  40c5e4:	sub	x5, x5, #0x8
  40c5e8:	cbz	w8, 40c618 <ferror@plt+0x98e8>
  40c5ec:	mov	x2, x5
  40c5f0:	ldr	x6, [x5]
  40c5f4:	ldr	w9, [x6, #88]
  40c5f8:	cmp	w0, w9
  40c5fc:	cset	w8, cc  // cc = lo, ul, last
  40c600:	b.ne	40c5e4 <ferror@plt+0x98b4>  // b.any
  40c604:	ldr	w9, [x7, #92]
  40c608:	ldr	w8, [x6, #92]
  40c60c:	cmp	w9, w8
  40c610:	cset	w8, cc  // cc = lo, ul, last
  40c614:	b	40c5e4 <ferror@plt+0x98b4>
  40c618:	cmp	x20, x2
  40c61c:	b.cs	40c658 <ferror@plt+0x9928>  // b.hs, b.nlast
  40c620:	str	x6, [x20]
  40c624:	str	x4, [x2]
  40c628:	add	x3, x3, #0x8
  40c62c:	mov	x20, x3
  40c630:	ldr	x4, [x3]
  40c634:	ldr	x7, [x19]
  40c638:	ldr	w6, [x4, #88]
  40c63c:	ldr	w0, [x7, #88]
  40c640:	cmp	w6, w0
  40c644:	cset	w5, cc  // cc = lo, ul, last
  40c648:	b.eq	40c5d0 <ferror@plt+0x98a0>  // b.none
  40c64c:	cbnz	w5, 40c628 <ferror@plt+0x98f8>
  40c650:	sub	x5, x2, #0x8
  40c654:	b	40c5ec <ferror@plt+0x98bc>
  40c658:	mov	w3, w22
  40c65c:	mov	x2, x21
  40c660:	mov	x0, x20
  40c664:	bl	40c448 <ferror@plt+0x9718>
  40c668:	sub	x0, x20, x19
  40c66c:	cmp	x0, #0x80
  40c670:	b.le	40c6e0 <ferror@plt+0x99b0>
  40c674:	cbz	x21, 40c6f8 <ferror@plt+0x99c8>
  40c678:	mov	x1, x20
  40c67c:	sub	x21, x21, #0x1
  40c680:	sub	x5, x1, x19
  40c684:	lsr	x0, x5, #63
  40c688:	add	x5, x0, x5, asr #3
  40c68c:	asr	x5, x5, #1
  40c690:	ldr	x4, [x19, #8]
  40c694:	ldr	x3, [x19, x5, lsl #3]
  40c698:	ldr	w2, [x4, #88]
  40c69c:	ldr	w0, [x3, #88]
  40c6a0:	cmp	w2, w0
  40c6a4:	cset	w6, cc  // cc = lo, ul, last
  40c6a8:	b.eq	40c4e4 <ferror@plt+0x97b4>  // b.none
  40c6ac:	cbz	w6, 40c550 <ferror@plt+0x9820>
  40c6b0:	ldur	x7, [x1, #-8]
  40c6b4:	ldr	w6, [x7, #88]
  40c6b8:	cmp	w0, w6
  40c6bc:	cset	w8, cc  // cc = lo, ul, last
  40c6c0:	b.eq	40c4f8 <ferror@plt+0x97c8>  // b.none
  40c6c4:	cbz	w8, 40c50c <ferror@plt+0x97dc>
  40c6c8:	ldr	x0, [x19]
  40c6cc:	str	x3, [x19]
  40c6d0:	str	x0, [x19, x5, lsl #3]
  40c6d4:	mov	x3, x24
  40c6d8:	mov	x2, x1
  40c6dc:	b	40c62c <ferror@plt+0x98fc>
  40c6e0:	ldp	x19, x20, [sp, #16]
  40c6e4:	ldp	x21, x22, [sp, #32]
  40c6e8:	ldp	x23, x24, [sp, #48]
  40c6ec:	ldp	x29, x30, [sp], #64
  40c6f0:	ret
  40c6f4:	mov	x20, x1
  40c6f8:	mov	w24, w22
  40c6fc:	sub	x23, x20, x23
  40c700:	asr	x23, x23, #3
  40c704:	sub	x21, x23, #0x2
  40c708:	add	x21, x21, x21, lsr #63
  40c70c:	asr	x21, x21, #1
  40c710:	b	40c488 <ferror@plt+0x9758>
  40c714:	mov	x5, x0
  40c718:	sub	x4, x2, #0x1
  40c71c:	add	x4, x4, x4, lsr #63
  40c720:	asr	x11, x4, #1
  40c724:	cmp	x1, x4, asr #1
  40c728:	b.ge	40c7dc <ferror@plt+0x9aac>  // b.tcont
  40c72c:	mov	x8, x1
  40c730:	b	40c738 <ferror@plt+0x9a08>
  40c734:	mov	x8, x4
  40c738:	add	x6, x8, #0x1
  40c73c:	lsl	x4, x6, #1
  40c740:	sub	x7, x4, #0x1
  40c744:	ldr	w10, [x5, x7, lsl #2]
  40c748:	ldr	w9, [x5, x4, lsl #2]
  40c74c:	cmp	w10, w9
  40c750:	csel	x4, x4, x7, ls  // ls = plast
  40c754:	ldr	w6, [x5, x4, lsl #2]
  40c758:	str	w6, [x5, x8, lsl #2]
  40c75c:	cmp	x4, x11
  40c760:	b.lt	40c734 <ferror@plt+0x9a04>  // b.tstop
  40c764:	tbnz	w2, #0, 40c778 <ferror@plt+0x9a48>
  40c768:	sub	x2, x2, #0x2
  40c76c:	add	x2, x2, x2, lsr #63
  40c770:	cmp	x4, x2, asr #1
  40c774:	b.eq	40c790 <ferror@plt+0x9a60>  // b.none
  40c778:	sub	x6, x4, #0x1
  40c77c:	add	x6, x6, x6, lsr #63
  40c780:	asr	x6, x6, #1
  40c784:	cmp	x4, x1
  40c788:	b.gt	40c7ac <ferror@plt+0x9a7c>
  40c78c:	b	40c7d4 <ferror@plt+0x9aa4>
  40c790:	lsl	x2, x4, #1
  40c794:	add	x2, x2, #0x1
  40c798:	ldr	w6, [x0, x2, lsl #2]
  40c79c:	str	w6, [x0, x4, lsl #2]
  40c7a0:	mov	x4, x2
  40c7a4:	b	40c778 <ferror@plt+0x9a48>
  40c7a8:	mov	x6, x2
  40c7ac:	ldr	w2, [x5, x6, lsl #2]
  40c7b0:	cmp	w3, w2
  40c7b4:	b.ls	40c7d4 <ferror@plt+0x9aa4>  // b.plast
  40c7b8:	str	w2, [x5, x4, lsl #2]
  40c7bc:	sub	x2, x6, #0x1
  40c7c0:	add	x2, x2, x2, lsr #63
  40c7c4:	asr	x2, x2, #1
  40c7c8:	mov	x4, x6
  40c7cc:	cmp	x1, x6
  40c7d0:	b.lt	40c7a8 <ferror@plt+0x9a78>  // b.tstop
  40c7d4:	str	w3, [x0, x4, lsl #2]
  40c7d8:	ret
  40c7dc:	mov	x4, x1
  40c7e0:	tbnz	w2, #0, 40c7d4 <ferror@plt+0x9aa4>
  40c7e4:	mov	x4, x1
  40c7e8:	b	40c768 <ferror@plt+0x9a38>
  40c7ec:	stp	x29, x30, [sp, #-64]!
  40c7f0:	mov	x29, sp
  40c7f4:	stp	x21, x22, [sp, #32]
  40c7f8:	mov	x22, x0
  40c7fc:	sub	x0, x1, x0
  40c800:	cmp	x0, #0x40
  40c804:	b.le	40c9b4 <ferror@plt+0x9c84>
  40c808:	stp	x19, x20, [sp, #16]
  40c80c:	mov	x21, x2
  40c810:	mov	x19, x22
  40c814:	cbz	x2, 40c9c0 <ferror@plt+0x9c90>
  40c818:	str	x23, [sp, #48]
  40c81c:	add	x23, x22, #0x4
  40c820:	b	40c964 <ferror@plt+0x9c34>
  40c824:	sub	x21, x21, #0x1
  40c828:	mov	w4, #0x0                   	// #0
  40c82c:	ldr	w3, [x19, x21, lsl #2]
  40c830:	mov	x2, x22
  40c834:	mov	x1, x21
  40c838:	mov	x0, x19
  40c83c:	bl	40c714 <ferror@plt+0x99e4>
  40c840:	cbnz	x21, 40c824 <ferror@plt+0x9af4>
  40c844:	sub	x20, x20, #0x4
  40c848:	ldr	w3, [x20]
  40c84c:	ldr	w0, [x19]
  40c850:	str	w0, [x20]
  40c854:	sub	x21, x20, x19
  40c858:	mov	w4, #0x0                   	// #0
  40c85c:	asr	x2, x21, #2
  40c860:	mov	x1, #0x0                   	// #0
  40c864:	mov	x0, x19
  40c868:	bl	40c714 <ferror@plt+0x99e4>
  40c86c:	sub	x20, x20, #0x4
  40c870:	cmp	x21, #0x4
  40c874:	b.gt	40c848 <ferror@plt+0x9b18>
  40c878:	ldp	x19, x20, [sp, #16]
  40c87c:	b	40c9b4 <ferror@plt+0x9c84>
  40c880:	cmp	w2, w4
  40c884:	b.cs	40c898 <ferror@plt+0x9b68>  // b.hs, b.nlast
  40c888:	ldr	w0, [x19]
  40c88c:	str	w4, [x19]
  40c890:	stur	w0, [x1, #-4]
  40c894:	b	40c9a0 <ferror@plt+0x9c70>
  40c898:	ldr	w0, [x19]
  40c89c:	str	w2, [x19]
  40c8a0:	str	w0, [x19, #4]
  40c8a4:	b	40c9a0 <ferror@plt+0x9c70>
  40c8a8:	ldur	w4, [x1, #-4]
  40c8ac:	cmp	w2, w4
  40c8b0:	b.cs	40c8c4 <ferror@plt+0x9b94>  // b.hs, b.nlast
  40c8b4:	ldr	w0, [x19]
  40c8b8:	str	w2, [x19]
  40c8bc:	str	w0, [x19, #4]
  40c8c0:	b	40c9a0 <ferror@plt+0x9c70>
  40c8c4:	cmp	w0, w4
  40c8c8:	b.cs	40c8dc <ferror@plt+0x9bac>  // b.hs, b.nlast
  40c8cc:	ldr	w0, [x19]
  40c8d0:	str	w4, [x19]
  40c8d4:	stur	w0, [x1, #-4]
  40c8d8:	b	40c9a0 <ferror@plt+0x9c70>
  40c8dc:	ldr	w2, [x19]
  40c8e0:	str	w0, [x19]
  40c8e4:	str	w2, [x19, x3, lsl #2]
  40c8e8:	b	40c9a0 <ferror@plt+0x9c70>
  40c8ec:	mov	x0, x3
  40c8f0:	ldr	w2, [x3], #-4
  40c8f4:	cmp	w5, w2
  40c8f8:	b.cc	40c8ec <ferror@plt+0x9bbc>  // b.lo, b.ul, b.last
  40c8fc:	cmp	x0, x20
  40c900:	b.ls	40c940 <ferror@plt+0x9c10>  // b.plast
  40c904:	str	w2, [x20]
  40c908:	str	w6, [x0]
  40c90c:	mov	x3, x0
  40c910:	add	x4, x4, #0x4
  40c914:	mov	x20, x4
  40c918:	ldr	w6, [x4]
  40c91c:	ldr	w5, [x19]
  40c920:	cmp	w6, w5
  40c924:	b.cc	40c910 <ferror@plt+0x9be0>  // b.lo, b.ul, b.last
  40c928:	sub	x0, x3, #0x4
  40c92c:	ldur	w2, [x3, #-4]
  40c930:	cmp	w2, w5
  40c934:	b.ls	40c8fc <ferror@plt+0x9bcc>  // b.plast
  40c938:	sub	x3, x3, #0x8
  40c93c:	b	40c8ec <ferror@plt+0x9bbc>
  40c940:	mov	w3, #0x0                   	// #0
  40c944:	mov	x2, x21
  40c948:	mov	x0, x20
  40c94c:	bl	40c7ec <ferror@plt+0x9abc>
  40c950:	sub	x0, x20, x19
  40c954:	cmp	x0, #0x40
  40c958:	b.le	40c9ac <ferror@plt+0x9c7c>
  40c95c:	cbz	x21, 40c9c8 <ferror@plt+0x9c98>
  40c960:	mov	x1, x20
  40c964:	sub	x21, x21, #0x1
  40c968:	sub	x3, x1, x19
  40c96c:	lsr	x0, x3, #63
  40c970:	add	x3, x0, x3, asr #2
  40c974:	asr	x3, x3, #1
  40c978:	ldr	w2, [x19, #4]
  40c97c:	ldr	w0, [x19, x3, lsl #2]
  40c980:	cmp	w2, w0
  40c984:	b.cs	40c8a8 <ferror@plt+0x9b78>  // b.hs, b.nlast
  40c988:	ldur	w4, [x1, #-4]
  40c98c:	cmp	w0, w4
  40c990:	b.cs	40c880 <ferror@plt+0x9b50>  // b.hs, b.nlast
  40c994:	ldr	w2, [x19]
  40c998:	str	w0, [x19]
  40c99c:	str	w2, [x19, x3, lsl #2]
  40c9a0:	mov	x4, x23
  40c9a4:	mov	x3, x1
  40c9a8:	b	40c914 <ferror@plt+0x9be4>
  40c9ac:	ldp	x19, x20, [sp, #16]
  40c9b0:	ldr	x23, [sp, #48]
  40c9b4:	ldp	x21, x22, [sp, #32]
  40c9b8:	ldp	x29, x30, [sp], #64
  40c9bc:	ret
  40c9c0:	mov	x20, x1
  40c9c4:	b	40c9cc <ferror@plt+0x9c9c>
  40c9c8:	ldr	x23, [sp, #48]
  40c9cc:	sub	x22, x20, x22
  40c9d0:	asr	x22, x22, #2
  40c9d4:	sub	x21, x22, #0x2
  40c9d8:	add	x21, x21, x21, lsr #63
  40c9dc:	asr	x21, x21, #1
  40c9e0:	b	40c828 <ferror@plt+0x9af8>
  40c9e4:	stp	x29, x30, [sp, #-112]!
  40c9e8:	mov	x29, sp
  40c9ec:	stp	x19, x20, [sp, #16]
  40c9f0:	stp	x21, x22, [sp, #32]
  40c9f4:	stp	x23, x24, [sp, #48]
  40c9f8:	stp	x25, x26, [sp, #64]
  40c9fc:	stp	x27, x28, [sp, #80]
  40ca00:	mov	x25, x0
  40ca04:	mov	x24, x1
  40ca08:	mov	x27, x2
  40ca0c:	mov	x23, x3
  40ca10:	mov	x28, x4
  40ca14:	mov	x20, x0
  40ca18:	sub	x0, x2, #0x1
  40ca1c:	add	x0, x0, x0, lsr #63
  40ca20:	cmp	x1, x0, asr #1
  40ca24:	b.ge	40cb70 <ferror@plt+0x9e40>  // b.tcont
  40ca28:	asr	x26, x0, #1
  40ca2c:	mov	x22, x1
  40ca30:	b	40ca38 <ferror@plt+0x9d08>
  40ca34:	mov	x22, x19
  40ca38:	add	x21, x22, #0x1
  40ca3c:	lsl	x19, x21, #1
  40ca40:	sub	x19, x19, #0x1
  40ca44:	lsl	x1, x19, #4
  40ca48:	lsl	x0, x21, #5
  40ca4c:	ldr	x1, [x20, x1]
  40ca50:	ldr	x0, [x20, x0]
  40ca54:	bl	402a20 <strcmp@plt>
  40ca58:	lsl	x21, x21, #1
  40ca5c:	cmp	w0, #0x0
  40ca60:	csel	x19, x21, x19, ge  // ge = tcont
  40ca64:	lsl	x22, x22, #4
  40ca68:	add	x1, x20, x22
  40ca6c:	lsl	x0, x19, #4
  40ca70:	add	x2, x20, x0
  40ca74:	ldr	x0, [x20, x0]
  40ca78:	str	x0, [x20, x22]
  40ca7c:	ldr	w0, [x2, #8]
  40ca80:	str	w0, [x1, #8]
  40ca84:	cmp	x19, x26
  40ca88:	b.lt	40ca34 <ferror@plt+0x9d04>  // b.tstop
  40ca8c:	tbnz	w27, #0, 40caa0 <ferror@plt+0x9d70>
  40ca90:	sub	x27, x27, #0x2
  40ca94:	add	x27, x27, x27, lsr #63
  40ca98:	cmp	x19, x27, asr #1
  40ca9c:	b.eq	40cac0 <ferror@plt+0x9d90>  // b.none
  40caa0:	sub	x21, x19, #0x1
  40caa4:	add	x21, x21, x21, lsr #63
  40caa8:	asr	x21, x21, #1
  40caac:	cmp	x19, x24
  40cab0:	b.gt	40caf4 <ferror@plt+0x9dc4>
  40cab4:	b	40cb3c <ferror@plt+0x9e0c>
  40cab8:	mov	x19, x24
  40cabc:	b	40ca90 <ferror@plt+0x9d60>
  40cac0:	lsl	x0, x19, #1
  40cac4:	add	x0, x0, #0x1
  40cac8:	lsl	x19, x19, #4
  40cacc:	add	x2, x25, x19
  40cad0:	lsl	x1, x0, #4
  40cad4:	add	x3, x25, x1
  40cad8:	ldr	x1, [x25, x1]
  40cadc:	str	x1, [x25, x19]
  40cae0:	ldr	w1, [x3, #8]
  40cae4:	str	w1, [x2, #8]
  40cae8:	mov	x19, x0
  40caec:	b	40caa0 <ferror@plt+0x9d70>
  40caf0:	mov	x21, x2
  40caf4:	lsl	x22, x21, #4
  40caf8:	add	x26, x20, x22
  40cafc:	mov	x1, x23
  40cb00:	ldr	x0, [x20, x22]
  40cb04:	bl	402a20 <strcmp@plt>
  40cb08:	tbz	w0, #31, 40cb3c <ferror@plt+0x9e0c>
  40cb0c:	lsl	x19, x19, #4
  40cb10:	add	x0, x20, x19
  40cb14:	ldr	x1, [x20, x22]
  40cb18:	str	x1, [x20, x19]
  40cb1c:	ldr	w1, [x26, #8]
  40cb20:	str	w1, [x0, #8]
  40cb24:	sub	x2, x21, #0x1
  40cb28:	add	x2, x2, x2, lsr #63
  40cb2c:	asr	x2, x2, #1
  40cb30:	mov	x19, x21
  40cb34:	cmp	x24, x21
  40cb38:	b.lt	40caf0 <ferror@plt+0x9dc0>  // b.tstop
  40cb3c:	lsl	x19, x19, #4
  40cb40:	add	x0, x25, x19
  40cb44:	str	x28, [sp, #104]
  40cb48:	str	x23, [x25, x19]
  40cb4c:	ldr	w1, [sp, #104]
  40cb50:	str	w1, [x0, #8]
  40cb54:	ldp	x19, x20, [sp, #16]
  40cb58:	ldp	x21, x22, [sp, #32]
  40cb5c:	ldp	x23, x24, [sp, #48]
  40cb60:	ldp	x25, x26, [sp, #64]
  40cb64:	ldp	x27, x28, [sp, #80]
  40cb68:	ldp	x29, x30, [sp], #112
  40cb6c:	ret
  40cb70:	tbz	w2, #0, 40cab8 <ferror@plt+0x9d88>
  40cb74:	mov	x19, x24
  40cb78:	b	40cb3c <ferror@plt+0x9e0c>
  40cb7c:	stp	x29, x30, [sp, #-208]!
  40cb80:	mov	x29, sp
  40cb84:	stp	x21, x22, [sp, #32]
  40cb88:	mov	x21, x1
  40cb8c:	sub	x1, x1, x0
  40cb90:	cmp	x1, #0x100
  40cb94:	b.le	40cc34 <ferror@plt+0x9f04>
  40cb98:	stp	x19, x20, [sp, #16]
  40cb9c:	stp	x23, x24, [sp, #48]
  40cba0:	mov	x24, x0
  40cba4:	mov	x22, x2
  40cba8:	mov	x20, x0
  40cbac:	cbz	x2, 40ce84 <ferror@plt+0xa154>
  40cbb0:	stp	x25, x26, [sp, #64]
  40cbb4:	stp	x27, x28, [sp, #80]
  40cbb8:	add	x23, x0, #0x10
  40cbbc:	b	40cdfc <ferror@plt+0xa0cc>
  40cbc0:	sub	x21, x21, #0x1
  40cbc4:	ldp	x0, x1, [x24], #-16
  40cbc8:	mov	w5, #0x0                   	// #0
  40cbcc:	mov	x3, x0
  40cbd0:	mov	x4, x1
  40cbd4:	mov	x2, x22
  40cbd8:	mov	x1, x21
  40cbdc:	mov	x0, x20
  40cbe0:	bl	40c9e4 <ferror@plt+0x9cb4>
  40cbe4:	cbnz	x21, 40cbc0 <ferror@plt+0x9e90>
  40cbe8:	sub	x19, x19, #0x10
  40cbec:	ldp	x0, x1, [x19]
  40cbf0:	ldr	x2, [x20]
  40cbf4:	str	x2, [x19]
  40cbf8:	ldr	w2, [x20, #8]
  40cbfc:	str	w2, [x19, #8]
  40cc00:	sub	x21, x19, x20
  40cc04:	mov	w5, #0x0                   	// #0
  40cc08:	mov	x3, x0
  40cc0c:	mov	x4, x1
  40cc10:	asr	x2, x21, #4
  40cc14:	mov	x1, #0x0                   	// #0
  40cc18:	mov	x0, x20
  40cc1c:	bl	40c9e4 <ferror@plt+0x9cb4>
  40cc20:	sub	x19, x19, #0x10
  40cc24:	cmp	x21, #0x10
  40cc28:	b.gt	40cbec <ferror@plt+0x9ebc>
  40cc2c:	ldp	x19, x20, [sp, #16]
  40cc30:	ldp	x23, x24, [sp, #48]
  40cc34:	ldp	x21, x22, [sp, #32]
  40cc38:	ldp	x29, x30, [sp], #208
  40cc3c:	ret
  40cc40:	ldur	x28, [x21, #-16]
  40cc44:	mov	x1, x28
  40cc48:	mov	x0, x26
  40cc4c:	bl	402a20 <strcmp@plt>
  40cc50:	tbnz	w0, #31, 40cc94 <ferror@plt+0x9f64>
  40cc54:	mov	x1, x28
  40cc58:	mov	x0, x25
  40cc5c:	bl	402a20 <strcmp@plt>
  40cc60:	tbnz	w0, #31, 40ccc0 <ferror@plt+0x9f90>
  40cc64:	ldr	x0, [x20]
  40cc68:	ldr	x1, [x20, #8]
  40cc6c:	ldr	x2, [x23]
  40cc70:	str	x2, [x20]
  40cc74:	ldr	w2, [x23, #8]
  40cc78:	str	w2, [x20, #8]
  40cc7c:	str	x0, [sp, #160]
  40cc80:	str	x1, [sp, #168]
  40cc84:	str	x0, [x23]
  40cc88:	ldr	w0, [sp, #168]
  40cc8c:	str	w0, [x23, #8]
  40cc90:	b	40cd1c <ferror@plt+0x9fec>
  40cc94:	ldr	x0, [x20]
  40cc98:	ldr	x1, [x20, #8]
  40cc9c:	str	x26, [x20]
  40cca0:	ldr	w2, [x27, #8]
  40cca4:	str	w2, [x20, #8]
  40cca8:	str	x0, [sp, #192]
  40ccac:	str	x1, [sp, #200]
  40ccb0:	str	x0, [x20, x19]
  40ccb4:	ldr	w0, [sp, #200]
  40ccb8:	str	w0, [x27, #8]
  40ccbc:	b	40cd1c <ferror@plt+0x9fec>
  40ccc0:	ldr	x0, [x20]
  40ccc4:	ldr	x1, [x20, #8]
  40ccc8:	ldur	x2, [x21, #-16]
  40cccc:	str	x2, [x20]
  40ccd0:	ldur	w2, [x21, #-8]
  40ccd4:	str	w2, [x20, #8]
  40ccd8:	str	x0, [sp, #176]
  40ccdc:	str	x1, [sp, #184]
  40cce0:	stur	x0, [x21, #-16]
  40cce4:	ldr	w0, [sp, #184]
  40cce8:	stur	w0, [x21, #-8]
  40ccec:	b	40cd1c <ferror@plt+0x9fec>
  40ccf0:	ldr	x0, [x20]
  40ccf4:	ldr	x1, [x20, #8]
  40ccf8:	ldr	x2, [x23]
  40ccfc:	str	x2, [x20]
  40cd00:	ldr	w2, [x23, #8]
  40cd04:	str	w2, [x20, #8]
  40cd08:	str	x0, [sp, #144]
  40cd0c:	str	x1, [sp, #152]
  40cd10:	str	x0, [x23]
  40cd14:	ldr	w0, [sp, #152]
  40cd18:	str	w0, [x23, #8]
  40cd1c:	mov	x26, x23
  40cd20:	mov	x25, x21
  40cd24:	b	40cd9c <ferror@plt+0xa06c>
  40cd28:	ldr	x0, [x20]
  40cd2c:	ldr	x1, [x20, #8]
  40cd30:	ldur	x2, [x21, #-16]
  40cd34:	str	x2, [x20]
  40cd38:	ldur	w2, [x21, #-8]
  40cd3c:	str	w2, [x20, #8]
  40cd40:	str	x0, [sp, #128]
  40cd44:	str	x1, [sp, #136]
  40cd48:	stur	x0, [x21, #-16]
  40cd4c:	ldr	w0, [sp, #136]
  40cd50:	stur	w0, [x21, #-8]
  40cd54:	b	40cd1c <ferror@plt+0x9fec>
  40cd58:	ldp	x19, x20, [sp, #16]
  40cd5c:	ldp	x23, x24, [sp, #48]
  40cd60:	ldp	x25, x26, [sp, #64]
  40cd64:	ldp	x27, x28, [sp, #80]
  40cd68:	b	40cc34 <ferror@plt+0x9f04>
  40cd6c:	ldr	x0, [x19]
  40cd70:	ldr	x1, [x19, #8]
  40cd74:	ldr	x2, [x25]
  40cd78:	str	x2, [x19]
  40cd7c:	ldr	w2, [x25, #8]
  40cd80:	str	w2, [x19, #8]
  40cd84:	str	x0, [sp, #96]
  40cd88:	str	x1, [sp, #104]
  40cd8c:	str	x0, [x25]
  40cd90:	ldr	w0, [sp, #104]
  40cd94:	str	w0, [x25, #8]
  40cd98:	add	x26, x26, #0x10
  40cd9c:	mov	x19, x26
  40cda0:	ldr	x28, [x20]
  40cda4:	mov	x1, x28
  40cda8:	ldr	x0, [x26]
  40cdac:	bl	402a20 <strcmp@plt>
  40cdb0:	tbnz	w0, #31, 40cd98 <ferror@plt+0xa068>
  40cdb4:	sub	x27, x25, #0x10
  40cdb8:	mov	x25, x27
  40cdbc:	ldr	x1, [x27], #-16
  40cdc0:	mov	x0, x28
  40cdc4:	bl	402a20 <strcmp@plt>
  40cdc8:	tbnz	w0, #31, 40cdb8 <ferror@plt+0xa088>
  40cdcc:	cmp	x19, x25
  40cdd0:	b.cc	40cd6c <ferror@plt+0xa03c>  // b.lo, b.ul, b.last
  40cdd4:	mov	w3, #0x0                   	// #0
  40cdd8:	mov	x2, x22
  40cddc:	mov	x1, x21
  40cde0:	mov	x0, x19
  40cde4:	bl	40cb7c <ferror@plt+0x9e4c>
  40cde8:	sub	x0, x19, x20
  40cdec:	cmp	x0, #0x100
  40cdf0:	b.le	40cd58 <ferror@plt+0xa028>
  40cdf4:	cbz	x22, 40ce8c <ferror@plt+0xa15c>
  40cdf8:	mov	x21, x19
  40cdfc:	sub	x22, x22, #0x1
  40ce00:	sub	x19, x21, x20
  40ce04:	lsr	x0, x19, #63
  40ce08:	add	x19, x0, x19, asr #4
  40ce0c:	asr	x19, x19, #1
  40ce10:	lsl	x19, x19, #4
  40ce14:	add	x27, x20, x19
  40ce18:	ldr	x25, [x20, #16]
  40ce1c:	ldr	x26, [x20, x19]
  40ce20:	mov	x1, x26
  40ce24:	mov	x0, x25
  40ce28:	bl	402a20 <strcmp@plt>
  40ce2c:	tbnz	w0, #31, 40cc40 <ferror@plt+0x9f10>
  40ce30:	ldur	x28, [x21, #-16]
  40ce34:	mov	x1, x28
  40ce38:	mov	x0, x25
  40ce3c:	bl	402a20 <strcmp@plt>
  40ce40:	tbnz	w0, #31, 40ccf0 <ferror@plt+0x9fc0>
  40ce44:	mov	x1, x28
  40ce48:	mov	x0, x26
  40ce4c:	bl	402a20 <strcmp@plt>
  40ce50:	tbnz	w0, #31, 40cd28 <ferror@plt+0x9ff8>
  40ce54:	ldr	x0, [x20]
  40ce58:	ldr	x1, [x20, #8]
  40ce5c:	ldr	x2, [x20, x19]
  40ce60:	str	x2, [x20]
  40ce64:	ldr	w2, [x27, #8]
  40ce68:	str	w2, [x20, #8]
  40ce6c:	str	x0, [sp, #112]
  40ce70:	str	x1, [sp, #120]
  40ce74:	str	x0, [x20, x19]
  40ce78:	ldr	w0, [sp, #120]
  40ce7c:	str	w0, [x27, #8]
  40ce80:	b	40cd1c <ferror@plt+0x9fec>
  40ce84:	mov	x19, x21
  40ce88:	b	40ce94 <ferror@plt+0xa164>
  40ce8c:	ldp	x25, x26, [sp, #64]
  40ce90:	ldp	x27, x28, [sp, #80]
  40ce94:	sub	x22, x19, x24
  40ce98:	asr	x22, x22, #4
  40ce9c:	sub	x21, x22, #0x2
  40cea0:	add	x21, x21, x21, lsr #63
  40cea4:	asr	x21, x21, #1
  40cea8:	add	x24, x24, x21, lsl #4
  40ceac:	b	40cbc4 <ferror@plt+0x9e94>
  40ceb0:	stp	x29, x30, [sp, #-32]!
  40ceb4:	mov	x29, sp
  40ceb8:	stp	x19, x20, [sp, #16]
  40cebc:	mov	x19, x0
  40cec0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cec4:	add	x0, x0, #0xeb0
  40cec8:	str	x0, [x19]
  40cecc:	ldr	x0, [x19, #8]
  40ced0:	cbz	x0, 40cf20 <ferror@plt+0xa1f0>
  40ced4:	mov	w20, #0x0                   	// #0
  40ced8:	ldr	w1, [x0, #4]
  40cedc:	cmp	w1, w20
  40cee0:	b.ls	40cf14 <ferror@plt+0xa1e4>  // b.plast
  40cee4:	add	x1, x0, w20, uxtw #3
  40cee8:	ldr	x0, [x1, #8]
  40ceec:	cbz	x0, 40cefc <ferror@plt+0xa1cc>
  40cef0:	ldr	x1, [x0]
  40cef4:	ldr	x1, [x1, #8]
  40cef8:	blr	x1
  40cefc:	add	w20, w20, #0x1
  40cf00:	ldr	x0, [x19, #8]
  40cf04:	cbnz	x0, 40ced8 <ferror@plt+0xa1a8>
  40cf08:	b	40cf20 <ferror@plt+0xa1f0>
  40cf0c:	str	wzr, [x0, #4]
  40cf10:	b	40cf20 <ferror@plt+0xa1f0>
  40cf14:	ldrsb	w1, [x0, #3]
  40cf18:	tbnz	w1, #31, 40cf0c <ferror@plt+0xa1dc>
  40cf1c:	bl	402a90 <free@plt>
  40cf20:	ldp	x19, x20, [sp, #16]
  40cf24:	ldp	x29, x30, [sp], #32
  40cf28:	ret
  40cf2c:	stp	x29, x30, [sp, #-32]!
  40cf30:	mov	x29, sp
  40cf34:	str	x19, [sp, #16]
  40cf38:	mov	x19, x0
  40cf3c:	bl	40ceb0 <ferror@plt+0xa180>
  40cf40:	mov	x1, #0x10                  	// #16
  40cf44:	mov	x0, x19
  40cf48:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40cf4c:	ldr	x19, [sp, #16]
  40cf50:	ldp	x29, x30, [sp], #32
  40cf54:	ret
  40cf58:	stp	x29, x30, [sp, #-64]!
  40cf5c:	mov	x29, sp
  40cf60:	stp	x19, x20, [sp, #16]
  40cf64:	mov	x19, x0
  40cf68:	mov	x20, x1
  40cf6c:	mov	w1, #0x22                  	// #34
  40cf70:	mov	x0, x20
  40cf74:	bl	416928 <ferror@plt+0x13bf8>
  40cf78:	ldr	x19, [x19, #8]
  40cf7c:	ldrb	w1, [x19]
  40cf80:	cbz	w1, 40d074 <ferror@plt+0xa344>
  40cf84:	stp	x21, x22, [sp, #32]
  40cf88:	str	x23, [sp, #48]
  40cf8c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cf90:	add	x22, x22, #0xdf8
  40cf94:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cf98:	add	x21, x21, #0xde0
  40cf9c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cfa0:	b	40d010 <ferror@plt+0xa2e0>
  40cfa4:	cmp	w1, #0x8
  40cfa8:	b.ne	40d060 <ferror@plt+0xa330>  // b.any
  40cfac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cfb0:	add	x1, x1, #0xdf0
  40cfb4:	mov	x0, x20
  40cfb8:	bl	416f20 <ferror@plt+0x141f0>
  40cfbc:	b	40d008 <ferror@plt+0xa2d8>
  40cfc0:	cmp	w1, #0x22
  40cfc4:	b.eq	40cffc <ferror@plt+0xa2cc>  // b.none
  40cfc8:	cmp	w1, #0x5c
  40cfcc:	b.ne	40cfe0 <ferror@plt+0xa2b0>  // b.any
  40cfd0:	add	x1, x23, #0xde8
  40cfd4:	mov	x0, x20
  40cfd8:	bl	416f20 <ferror@plt+0x141f0>
  40cfdc:	b	40d008 <ferror@plt+0xa2d8>
  40cfe0:	cmp	w1, #0xd
  40cfe4:	b.ne	40d060 <ferror@plt+0xa330>  // b.any
  40cfe8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40cfec:	add	x1, x1, #0xe00
  40cff0:	mov	x0, x20
  40cff4:	bl	416f20 <ferror@plt+0x141f0>
  40cff8:	b	40d008 <ferror@plt+0xa2d8>
  40cffc:	mov	x1, x21
  40d000:	mov	x0, x20
  40d004:	bl	416f20 <ferror@plt+0x141f0>
  40d008:	ldrb	w1, [x19, #1]!
  40d00c:	cbz	w1, 40d06c <ferror@plt+0xa33c>
  40d010:	cmp	w1, #0xc
  40d014:	b.eq	40d03c <ferror@plt+0xa30c>  // b.none
  40d018:	b.hi	40cfc0 <ferror@plt+0xa290>  // b.pmore
  40d01c:	cmp	w1, #0x9
  40d020:	b.eq	40d04c <ferror@plt+0xa31c>  // b.none
  40d024:	cmp	w1, #0xa
  40d028:	b.ne	40cfa4 <ferror@plt+0xa274>  // b.any
  40d02c:	add	x1, x23, #0xde8
  40d030:	mov	x0, x20
  40d034:	bl	416f20 <ferror@plt+0x141f0>
  40d038:	b	40d008 <ferror@plt+0xa2d8>
  40d03c:	mov	x1, x22
  40d040:	mov	x0, x20
  40d044:	bl	416f20 <ferror@plt+0x141f0>
  40d048:	b	40d008 <ferror@plt+0xa2d8>
  40d04c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d050:	add	x1, x1, #0xe08
  40d054:	mov	x0, x20
  40d058:	bl	416f20 <ferror@plt+0x141f0>
  40d05c:	b	40d008 <ferror@plt+0xa2d8>
  40d060:	mov	x0, x20
  40d064:	bl	416928 <ferror@plt+0x13bf8>
  40d068:	b	40d008 <ferror@plt+0xa2d8>
  40d06c:	ldp	x21, x22, [sp, #32]
  40d070:	ldr	x23, [sp, #48]
  40d074:	mov	w1, #0x22                  	// #34
  40d078:	mov	x0, x20
  40d07c:	bl	416928 <ferror@plt+0x13bf8>
  40d080:	ldp	x19, x20, [sp, #16]
  40d084:	ldp	x29, x30, [sp], #64
  40d088:	ret
  40d08c:	stp	x29, x30, [sp, #-64]!
  40d090:	mov	x29, sp
  40d094:	stp	x19, x20, [sp, #16]
  40d098:	str	x23, [sp, #48]
  40d09c:	mov	x23, x0
  40d0a0:	mov	x19, x1
  40d0a4:	mov	w1, #0x5b                  	// #91
  40d0a8:	mov	x0, x19
  40d0ac:	bl	416928 <ferror@plt+0x13bf8>
  40d0b0:	ldr	x2, [x23, #8]
  40d0b4:	cbz	x2, 40d11c <ferror@plt+0xa3ec>
  40d0b8:	stp	x21, x22, [sp, #32]
  40d0bc:	mov	w22, #0x0                   	// #0
  40d0c0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d0c4:	add	x20, x1, #0xe10
  40d0c8:	ldr	w1, [x2, #4]
  40d0cc:	cmp	w1, w22
  40d0d0:	b.ls	40d118 <ferror@plt+0xa3e8>  // b.plast
  40d0d4:	add	x2, x2, w22, uxtw #3
  40d0d8:	ldr	x21, [x2, #8]
  40d0dc:	cbnz	w22, 40d108 <ferror@plt+0xa3d8>
  40d0e0:	ldr	x0, [x21]
  40d0e4:	ldr	x2, [x0, #24]
  40d0e8:	mov	x1, x19
  40d0ec:	mov	x0, x21
  40d0f0:	blr	x2
  40d0f4:	add	w22, w22, #0x1
  40d0f8:	ldr	x2, [x23, #8]
  40d0fc:	cbnz	x2, 40d0c8 <ferror@plt+0xa398>
  40d100:	ldp	x21, x22, [sp, #32]
  40d104:	b	40d11c <ferror@plt+0xa3ec>
  40d108:	mov	x1, x20
  40d10c:	mov	x0, x19
  40d110:	bl	416f20 <ferror@plt+0x141f0>
  40d114:	b	40d0e0 <ferror@plt+0xa3b0>
  40d118:	ldp	x21, x22, [sp, #32]
  40d11c:	mov	w1, #0x5d                  	// #93
  40d120:	mov	x0, x19
  40d124:	bl	416928 <ferror@plt+0x13bf8>
  40d128:	ldp	x19, x20, [sp, #16]
  40d12c:	ldr	x23, [sp, #48]
  40d130:	ldp	x29, x30, [sp], #64
  40d134:	ret
  40d138:	stp	x29, x30, [sp, #-16]!
  40d13c:	mov	x29, sp
  40d140:	mov	x2, x0
  40d144:	mov	x0, x1
  40d148:	ldr	w2, [x2, #8]
  40d14c:	cmp	w2, #0x5
  40d150:	b.eq	40d188 <ferror@plt+0xa458>  // b.none
  40d154:	cmp	w2, #0x6
  40d158:	b.ne	40d16c <ferror@plt+0xa43c>  // b.any
  40d15c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d160:	add	x1, x1, #0xe28
  40d164:	bl	416f20 <ferror@plt+0x141f0>
  40d168:	b	40d180 <ferror@plt+0xa450>
  40d16c:	cmp	w2, #0x4
  40d170:	b.ne	40d198 <ferror@plt+0xa468>  // b.any
  40d174:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d178:	add	x1, x1, #0xe18
  40d17c:	bl	416f20 <ferror@plt+0x141f0>
  40d180:	ldp	x29, x30, [sp], #16
  40d184:	ret
  40d188:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d18c:	add	x1, x1, #0xe20
  40d190:	bl	416f20 <ferror@plt+0x141f0>
  40d194:	b	40d180 <ferror@plt+0xa450>
  40d198:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d19c:	add	x2, x2, #0xe30
  40d1a0:	mov	w1, #0xde                  	// #222
  40d1a4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d1a8:	add	x0, x0, #0xe38
  40d1ac:	bl	4102b4 <ferror@plt+0xd584>
  40d1b0:	sub	sp, sp, #0x420
  40d1b4:	stp	x29, x30, [sp]
  40d1b8:	mov	x29, sp
  40d1bc:	str	x19, [sp, #16]
  40d1c0:	mov	x19, x1
  40d1c4:	ldr	d0, [x0, #8]
  40d1c8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d1cc:	add	x2, x2, #0xe50
  40d1d0:	mov	x1, #0x400                 	// #1024
  40d1d4:	add	x0, sp, #0x20
  40d1d8:	bl	402780 <snprintf@plt>
  40d1dc:	add	x1, sp, #0x20
  40d1e0:	mov	x0, x19
  40d1e4:	bl	416f20 <ferror@plt+0x141f0>
  40d1e8:	ldr	x19, [sp, #16]
  40d1ec:	ldp	x29, x30, [sp]
  40d1f0:	add	sp, sp, #0x420
  40d1f4:	ret
  40d1f8:	stp	x29, x30, [sp, #-80]!
  40d1fc:	mov	x29, sp
  40d200:	cbz	x1, 40d250 <ferror@plt+0xa520>
  40d204:	stp	x19, x20, [sp, #16]
  40d208:	stp	x21, x22, [sp, #32]
  40d20c:	stp	x23, x24, [sp, #48]
  40d210:	mov	x19, x0
  40d214:	mov	x21, x1
  40d218:	ldr	x20, [x0, #8]
  40d21c:	cbz	x20, 40d28c <ferror@plt+0xa55c>
  40d220:	ldr	w0, [x20]
  40d224:	ubfx	x0, x0, #0, #31
  40d228:	ldr	w1, [x20, #4]
  40d22c:	cmp	w0, w1
  40d230:	b.ne	40d32c <ferror@plt+0xa5fc>  // b.any
  40d234:	str	x25, [sp, #64]
  40d238:	ldrsb	w0, [x20, #3]
  40d23c:	tbnz	w0, #31, 40d278 <ferror@plt+0xa548>
  40d240:	mov	w24, #0x0                   	// #0
  40d244:	mov	w23, #0x0                   	// #0
  40d248:	mov	w1, #0x1                   	// #1
  40d24c:	b	40d29c <ferror@plt+0xa56c>
  40d250:	stp	x19, x20, [sp, #16]
  40d254:	stp	x21, x22, [sp, #32]
  40d258:	stp	x23, x24, [sp, #48]
  40d25c:	str	x25, [sp, #64]
  40d260:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d264:	add	x2, x2, #0xe58
  40d268:	mov	w1, #0x89                  	// #137
  40d26c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d270:	add	x0, x0, #0xe38
  40d274:	bl	4102b4 <ferror@plt+0xd584>
  40d278:	str	xzr, [x19, #8]
  40d27c:	ldr	w23, [x20, #4]
  40d280:	add	w1, w23, #0x1
  40d284:	mov	w24, #0x1                   	// #1
  40d288:	b	40d29c <ferror@plt+0xa56c>
  40d28c:	str	x25, [sp, #64]
  40d290:	mov	w24, #0x0                   	// #0
  40d294:	mov	w23, #0x0                   	// #0
  40d298:	mov	w1, #0x1                   	// #1
  40d29c:	ldr	x0, [x19, #8]
  40d2a0:	cbz	x0, 40d358 <ferror@plt+0xa628>
  40d2a4:	ldr	w2, [x0, #4]
  40d2a8:	ldr	w0, [x0]
  40d2ac:	add	w1, w1, w2
  40d2b0:	and	w0, w0, #0x7fffffff
  40d2b4:	bl	4195d0 <ferror@plt+0x168a0>
  40d2b8:	mov	w22, w0
  40d2bc:	ubfiz	x1, x22, #3, #32
  40d2c0:	add	x1, x1, #0x8
  40d2c4:	ldr	x0, [x19, #8]
  40d2c8:	cbz	x0, 40d378 <ferror@plt+0xa648>
  40d2cc:	ldr	w25, [x0, #4]
  40d2d0:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  40d2d4:	str	x0, [x19, #8]
  40d2d8:	ldr	w1, [x0]
  40d2dc:	bfxil	w1, w22, #0, #31
  40d2e0:	str	w1, [x0]
  40d2e4:	ubfx	x1, x1, #24, #7
  40d2e8:	strb	w1, [x0, #3]
  40d2ec:	str	w25, [x0, #4]
  40d2f0:	cbz	w24, 40d380 <ferror@plt+0xa650>
  40d2f4:	ldr	x3, [x19, #8]
  40d2f8:	cbz	w23, 40d320 <ferror@plt+0xa5f0>
  40d2fc:	sub	w1, w23, #0x1
  40d300:	add	x1, x1, #0x2
  40d304:	lsl	x1, x1, #3
  40d308:	mov	x0, #0x8                   	// #8
  40d30c:	ldr	x2, [x20, x0]
  40d310:	str	x2, [x3, x0]
  40d314:	add	x0, x0, #0x8
  40d318:	cmp	x0, x1
  40d31c:	b.ne	40d30c <ferror@plt+0xa5dc>  // b.any
  40d320:	ldr	x0, [x19, #8]
  40d324:	str	w23, [x0, #4]
  40d328:	ldr	x25, [sp, #64]
  40d32c:	ldr	x1, [x19, #8]
  40d330:	ldr	w0, [x1, #4]
  40d334:	add	w2, w0, #0x1
  40d338:	str	w2, [x1, #4]
  40d33c:	add	x0, x1, w0, uxtw #3
  40d340:	str	x21, [x0, #8]
  40d344:	ldp	x19, x20, [sp, #16]
  40d348:	ldp	x21, x22, [sp, #32]
  40d34c:	ldp	x23, x24, [sp, #48]
  40d350:	ldp	x29, x30, [sp], #80
  40d354:	ret
  40d358:	mov	w2, #0x4                   	// #4
  40d35c:	cmp	w1, w2
  40d360:	csel	w22, w1, w2, cs  // cs = hs, nlast
  40d364:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40d368:	add	x1, x1, #0x1
  40d36c:	lsl	x1, x1, #3
  40d370:	mov	w25, #0x0                   	// #0
  40d374:	b	40d2d0 <ferror@plt+0xa5a0>
  40d378:	mov	w25, #0x0                   	// #0
  40d37c:	b	40d2d0 <ferror@plt+0xa5a0>
  40d380:	ldr	x25, [sp, #64]
  40d384:	b	40d32c <ferror@plt+0xa5fc>
  40d388:	stp	x29, x30, [sp, #-32]!
  40d38c:	mov	x29, sp
  40d390:	str	x19, [sp, #16]
  40d394:	mov	x19, x0
  40d398:	mov	x0, x1
  40d39c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d3a0:	add	x1, x1, #0xf10
  40d3a4:	str	x1, [x19]
  40d3a8:	cbz	x0, 40d3c0 <ferror@plt+0xa690>
  40d3ac:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  40d3b0:	str	x0, [x19, #8]
  40d3b4:	ldr	x19, [sp, #16]
  40d3b8:	ldp	x29, x30, [sp], #32
  40d3bc:	ret
  40d3c0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  40d3c4:	add	x2, x2, #0x508
  40d3c8:	mov	w1, #0x9f                  	// #159
  40d3cc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d3d0:	add	x0, x0, #0xe38
  40d3d4:	bl	4102b4 <ferror@plt+0xd584>
  40d3d8:	stp	x29, x30, [sp, #-96]!
  40d3dc:	mov	x29, sp
  40d3e0:	stp	x19, x20, [sp, #16]
  40d3e4:	stp	x21, x22, [sp, #32]
  40d3e8:	str	x23, [sp, #48]
  40d3ec:	mov	x21, x0
  40d3f0:	mov	x19, x1
  40d3f4:	mov	w1, #0x7b                  	// #123
  40d3f8:	mov	x0, x19
  40d3fc:	bl	416928 <ferror@plt+0x13bf8>
  40d400:	ldr	x1, [x21, #8]
  40d404:	ldr	x0, [x21, #16]
  40d408:	add	x0, x1, x0, lsl #4
  40d40c:	str	x1, [sp, #80]
  40d410:	str	x0, [sp, #88]
  40d414:	add	x0, sp, #0x50
  40d418:	bl	40da88 <ferror@plt+0xad58>
  40d41c:	ldr	x0, [sp, #80]
  40d420:	str	x0, [sp, #64]
  40d424:	ldr	x0, [sp, #88]
  40d428:	str	x0, [sp, #72]
  40d42c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d430:	add	x23, x23, #0xe10
  40d434:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d438:	add	x22, x22, #0xe60
  40d43c:	b	40d4b4 <ferror@plt+0xa784>
  40d440:	ldr	x0, [sp, #72]
  40d444:	cbnz	x0, 40d4bc <ferror@plt+0xa78c>
  40d448:	mov	w1, #0x7d                  	// #125
  40d44c:	mov	x0, x19
  40d450:	bl	416928 <ferror@plt+0x13bf8>
  40d454:	ldp	x19, x20, [sp, #16]
  40d458:	ldp	x21, x22, [sp, #32]
  40d45c:	ldr	x23, [sp, #48]
  40d460:	ldp	x29, x30, [sp], #96
  40d464:	ret
  40d468:	mov	x1, x23
  40d46c:	mov	x0, x19
  40d470:	bl	416f20 <ferror@plt+0x141f0>
  40d474:	ldr	x1, [sp, #64]
  40d478:	ldr	x20, [x1, #8]
  40d47c:	ldr	x2, [x1]
  40d480:	mov	x1, x22
  40d484:	mov	x0, x19
  40d488:	bl	418d58 <ferror@plt+0x16028>
  40d48c:	ldr	x0, [x20]
  40d490:	ldr	x2, [x0, #24]
  40d494:	mov	x1, x19
  40d498:	mov	x0, x20
  40d49c:	blr	x2
  40d4a0:	ldr	x2, [sp, #64]
  40d4a4:	add	x2, x2, #0x10
  40d4a8:	str	x2, [sp, #64]
  40d4ac:	add	x0, sp, #0x40
  40d4b0:	bl	40da88 <ferror@plt+0xad58>
  40d4b4:	ldr	x0, [sp, #64]
  40d4b8:	cbz	x0, 40d440 <ferror@plt+0xa710>
  40d4bc:	ldr	x0, [x21, #8]
  40d4c0:	ldr	x2, [x21, #16]
  40d4c4:	add	x2, x0, x2, lsl #4
  40d4c8:	str	x0, [sp, #80]
  40d4cc:	str	x2, [sp, #88]
  40d4d0:	add	x0, sp, #0x50
  40d4d4:	bl	40da88 <ferror@plt+0xad58>
  40d4d8:	ldr	x2, [sp, #88]
  40d4dc:	ldr	x0, [sp, #80]
  40d4e0:	ldr	x1, [sp, #64]
  40d4e4:	cmp	x1, x0
  40d4e8:	b.ne	40d468 <ferror@plt+0xa738>  // b.any
  40d4ec:	ldr	x0, [sp, #72]
  40d4f0:	cmp	x0, x2
  40d4f4:	b.ne	40d468 <ferror@plt+0xa738>  // b.any
  40d4f8:	b	40d474 <ferror@plt+0xa744>
  40d4fc:	stp	x29, x30, [sp, #-48]!
  40d500:	mov	x29, sp
  40d504:	str	x19, [sp, #16]
  40d508:	mov	x19, x0
  40d50c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d510:	add	x1, x1, #0xe80
  40d514:	str	x1, [x0], #8
  40d518:	ldr	x1, [x19, #8]
  40d51c:	ldr	x0, [x0, #8]
  40d520:	add	x0, x1, x0, lsl #4
  40d524:	str	x1, [sp, #32]
  40d528:	str	x0, [sp, #40]
  40d52c:	add	x0, sp, #0x20
  40d530:	bl	40da88 <ferror@plt+0xad58>
  40d534:	b	40d594 <ferror@plt+0xa864>
  40d538:	ldr	x0, [sp, #40]
  40d53c:	cbnz	x0, 40d59c <ferror@plt+0xa86c>
  40d540:	ldr	x2, [x19, #16]
  40d544:	sub	x1, x2, #0x1
  40d548:	cbz	x2, 40d558 <ferror@plt+0xa828>
  40d54c:	sub	x1, x1, #0x1
  40d550:	cmp	x2, x1
  40d554:	b.hi	40d54c <ferror@plt+0xa81c>  // b.pmore
  40d558:	ldrb	w0, [x19, #52]
  40d55c:	cbnz	w0, 40d574 <ferror@plt+0xa844>
  40d560:	ldr	x0, [x19, #8]
  40d564:	bl	402a90 <free@plt>
  40d568:	ldr	x19, [sp, #16]
  40d56c:	ldp	x29, x30, [sp], #48
  40d570:	ret
  40d574:	ldr	x0, [x19, #8]
  40d578:	bl	40e140 <ferror@plt+0xb410>
  40d57c:	b	40d568 <ferror@plt+0xa838>
  40d580:	ldr	x1, [sp, #32]
  40d584:	add	x1, x1, #0x10
  40d588:	str	x1, [sp, #32]
  40d58c:	add	x0, sp, #0x20
  40d590:	bl	40da88 <ferror@plt+0xad58>
  40d594:	ldr	x1, [sp, #32]
  40d598:	cbz	x1, 40d538 <ferror@plt+0xa808>
  40d59c:	ldr	x0, [x1]
  40d5a0:	bl	402a90 <free@plt>
  40d5a4:	ldr	x1, [sp, #32]
  40d5a8:	ldr	x0, [x1, #8]
  40d5ac:	cbz	x0, 40d580 <ferror@plt+0xa850>
  40d5b0:	ldr	x1, [x0]
  40d5b4:	ldr	x1, [x1, #8]
  40d5b8:	blr	x1
  40d5bc:	b	40d580 <ferror@plt+0xa850>
  40d5c0:	stp	x29, x30, [sp, #-32]!
  40d5c4:	mov	x29, sp
  40d5c8:	str	x19, [sp, #16]
  40d5cc:	mov	x19, x0
  40d5d0:	bl	40d4fc <ferror@plt+0xa7cc>
  40d5d4:	mov	x1, #0x38                  	// #56
  40d5d8:	mov	x0, x19
  40d5dc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40d5e0:	ldr	x19, [sp, #16]
  40d5e4:	ldp	x29, x30, [sp], #32
  40d5e8:	ret
  40d5ec:	stp	x29, x30, [sp, #-112]!
  40d5f0:	mov	x29, sp
  40d5f4:	str	x1, [sp, #104]
  40d5f8:	cbz	x1, 40d668 <ferror@plt+0xa938>
  40d5fc:	stp	x19, x20, [sp, #16]
  40d600:	stp	x21, x22, [sp, #32]
  40d604:	mov	x20, x0
  40d608:	mov	x21, x2
  40d60c:	mov	x0, x1
  40d610:	cbz	x2, 40d694 <ferror@plt+0xa964>
  40d614:	stp	x23, x24, [sp, #48]
  40d618:	add	x24, x20, #0x8
  40d61c:	bl	453c24 <ferror@plt+0x50ef4>
  40d620:	mov	w2, w0
  40d624:	add	x1, sp, #0x68
  40d628:	mov	x0, x24
  40d62c:	bl	40d950 <ferror@plt+0xac20>
  40d630:	mov	x19, x0
  40d634:	ldr	x22, [x0]
  40d638:	cbz	x22, 40d764 <ferror@plt+0xaa34>
  40d63c:	ldr	x0, [x0, #8]
  40d640:	cbz	x0, 40d650 <ferror@plt+0xa920>
  40d644:	ldr	x1, [x0]
  40d648:	ldr	x1, [x1, #8]
  40d64c:	blr	x1
  40d650:	str	x21, [x19, #8]
  40d654:	ldp	x19, x20, [sp, #16]
  40d658:	ldp	x21, x22, [sp, #32]
  40d65c:	ldp	x23, x24, [sp, #48]
  40d660:	ldp	x29, x30, [sp], #112
  40d664:	ret
  40d668:	stp	x19, x20, [sp, #16]
  40d66c:	stp	x21, x22, [sp, #32]
  40d670:	stp	x23, x24, [sp, #48]
  40d674:	stp	x25, x26, [sp, #64]
  40d678:	stp	x27, x28, [sp, #80]
  40d67c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d680:	add	x2, x2, #0xe68
  40d684:	mov	w1, #0x55                  	// #85
  40d688:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d68c:	add	x0, x0, #0xe38
  40d690:	bl	4102b4 <ferror@plt+0xd584>
  40d694:	stp	x23, x24, [sp, #48]
  40d698:	stp	x25, x26, [sp, #64]
  40d69c:	stp	x27, x28, [sp, #80]
  40d6a0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d6a4:	add	x2, x2, #0xe68
  40d6a8:	mov	w1, #0x56                  	// #86
  40d6ac:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d6b0:	add	x0, x0, #0xe38
  40d6b4:	bl	4102b4 <ferror@plt+0xd584>
  40d6b8:	mov	x0, x24
  40d6bc:	bl	40dac0 <ferror@plt+0xad90>
  40d6c0:	b	40d794 <ferror@plt+0xaa64>
  40d6c4:	mov	x22, x25
  40d6c8:	b	40d80c <ferror@plt+0xaadc>
  40d6cc:	cmp	x22, #0x0
  40d6d0:	csel	x22, x22, x25, ne  // ne = any
  40d6d4:	ldr	w0, [x20, #44]
  40d6d8:	add	w0, w0, #0x1
  40d6dc:	str	w0, [x20, #44]
  40d6e0:	add	w19, w19, w23
  40d6e4:	sub	w0, w19, w27
  40d6e8:	cmp	x27, w19, uxtw
  40d6ec:	csel	w19, w0, w19, ls  // ls = plast
  40d6f0:	ubfiz	x0, x19, #4, #32
  40d6f4:	add	x25, x24, x0
  40d6f8:	ldr	x0, [x24, x0]
  40d6fc:	cbz	x0, 40d718 <ferror@plt+0xa9e8>
  40d700:	cmp	x0, #0x1
  40d704:	b.eq	40d6cc <ferror@plt+0xa99c>  // b.none
  40d708:	mov	x1, x26
  40d70c:	bl	402a20 <strcmp@plt>
  40d710:	cbnz	w0, 40d6d4 <ferror@plt+0xa9a4>
  40d714:	b	40d73c <ferror@plt+0xaa0c>
  40d718:	cbz	x22, 40d74c <ferror@plt+0xaa1c>
  40d71c:	ldr	x1, [x20, #32]
  40d720:	sub	x1, x1, #0x1
  40d724:	str	x1, [x20, #32]
  40d728:	str	xzr, [x22]
  40d72c:	mov	x25, x22
  40d730:	ldr	x0, [x25]
  40d734:	cbnz	x0, 40d73c <ferror@plt+0xaa0c>
  40d738:	str	x26, [x25]
  40d73c:	str	x21, [x25, #8]
  40d740:	ldp	x25, x26, [sp, #64]
  40d744:	ldp	x27, x28, [sp, #80]
  40d748:	b	40d654 <ferror@plt+0xa924>
  40d74c:	ldr	x1, [x20, #24]
  40d750:	add	x1, x1, #0x1
  40d754:	str	x1, [x20, #24]
  40d758:	ubfiz	x19, x19, #4, #32
  40d75c:	add	x25, x24, x19
  40d760:	b	40d730 <ferror@plt+0xaa00>
  40d764:	stp	x25, x26, [sp, #64]
  40d768:	stp	x27, x28, [sp, #80]
  40d76c:	ldr	x0, [sp, #104]
  40d770:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  40d774:	mov	x26, x0
  40d778:	bl	453c24 <ferror@plt+0x50ef4>
  40d77c:	mov	w23, w0
  40d780:	ldr	x0, [x20, #16]
  40d784:	add	x0, x0, x0, lsl #1
  40d788:	ldr	x1, [x20, #24]
  40d78c:	cmp	x0, x1, lsl #2
  40d790:	b.ls	40d6b8 <ferror@plt+0xa988>  // b.plast
  40d794:	ldr	w1, [x20, #40]
  40d798:	add	w1, w1, #0x1
  40d79c:	str	w1, [x20, #40]
  40d7a0:	ldr	w27, [x20, #48]
  40d7a4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d7a8:	add	x0, x0, #0xf98
  40d7ac:	ubfiz	x2, x27, #4, #32
  40d7b0:	add	x1, x0, x2
  40d7b4:	ldr	w2, [x0, x2]
  40d7b8:	str	w2, [sp, #96]
  40d7bc:	ldr	w3, [x1, #12]
  40d7c0:	str	w3, [sp, #100]
  40d7c4:	mov	w28, w23
  40d7c8:	ldr	w0, [x1, #4]
  40d7cc:	mul	x0, x0, x28
  40d7d0:	lsr	x0, x0, #32
  40d7d4:	sub	w19, w23, w0
  40d7d8:	add	w19, w0, w19, lsr #1
  40d7dc:	lsr	w19, w19, w3
  40d7e0:	msub	w19, w19, w2, w23
  40d7e4:	ldr	x24, [x20, #8]
  40d7e8:	ubfiz	x0, x19, #4, #32
  40d7ec:	add	x25, x24, x0
  40d7f0:	ldr	x0, [x24, x0]
  40d7f4:	cbz	x0, 40d74c <ferror@plt+0xaa1c>
  40d7f8:	cmp	x0, #0x1
  40d7fc:	b.eq	40d6c4 <ferror@plt+0xa994>  // b.none
  40d800:	mov	x1, x26
  40d804:	bl	402a20 <strcmp@plt>
  40d808:	cbz	w0, 40d73c <ferror@plt+0xaa0c>
  40d80c:	ubfiz	x27, x27, #4, #32
  40d810:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d814:	add	x0, x0, #0xf98
  40d818:	add	x27, x0, x27
  40d81c:	ldr	w0, [x27, #8]
  40d820:	mul	x28, x0, x28
  40d824:	lsr	x28, x28, #32
  40d828:	ldr	x27, [x20, #16]
  40d82c:	add	w1, w23, #0x1
  40d830:	sub	w23, w23, w28
  40d834:	add	w23, w28, w23, lsr #1
  40d838:	ldrb	w0, [sp, #100]
  40d83c:	lsr	w23, w23, w0
  40d840:	ldr	w0, [sp, #96]
  40d844:	sub	w0, w0, #0x2
  40d848:	msub	w23, w23, w0, w1
  40d84c:	b	40d6d4 <ferror@plt+0xa9a4>
  40d850:	stp	x29, x30, [sp, #-112]!
  40d854:	mov	x29, sp
  40d858:	stp	x19, x20, [sp, #16]
  40d85c:	mov	x19, x0
  40d860:	mov	x20, x1
  40d864:	mov	w1, #0x0                   	// #0
  40d868:	add	x0, sp, #0x28
  40d86c:	bl	4165e0 <ferror@plt+0x138b0>
  40d870:	ldr	x0, [sp, #48]
  40d874:	str	x20, [x0, #192]
  40d878:	ldr	x0, [x19]
  40d87c:	ldr	x2, [x0, #24]
  40d880:	add	x1, sp, #0x28
  40d884:	mov	x0, x19
  40d888:	blr	x2
  40d88c:	add	x0, sp, #0x28
  40d890:	bl	4166f8 <ferror@plt+0x139c8>
  40d894:	add	x0, sp, #0x28
  40d898:	bl	41647c <ferror@plt+0x1374c>
  40d89c:	ldp	x19, x20, [sp, #16]
  40d8a0:	ldp	x29, x30, [sp], #112
  40d8a4:	ret
  40d8a8:	mov	w0, #0x0                   	// #0
  40d8ac:	ret
  40d8b0:	mov	w0, #0x1                   	// #1
  40d8b4:	ret
  40d8b8:	mov	w0, #0x2                   	// #2
  40d8bc:	ret
  40d8c0:	mov	w0, #0x3                   	// #3
  40d8c4:	ret
  40d8c8:	ldr	w0, [x0, #8]
  40d8cc:	ret
  40d8d0:	ret
  40d8d4:	ret
  40d8d8:	stp	x29, x30, [sp, #-16]!
  40d8dc:	mov	x29, sp
  40d8e0:	ldr	x0, [x0, #8]
  40d8e4:	bl	402a90 <free@plt>
  40d8e8:	ldp	x29, x30, [sp], #16
  40d8ec:	ret
  40d8f0:	stp	x29, x30, [sp, #-16]!
  40d8f4:	mov	x29, sp
  40d8f8:	mov	x1, #0x10                  	// #16
  40d8fc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40d900:	ldp	x29, x30, [sp], #16
  40d904:	ret
  40d908:	stp	x29, x30, [sp, #-32]!
  40d90c:	mov	x29, sp
  40d910:	str	x19, [sp, #16]
  40d914:	mov	x19, x0
  40d918:	ldr	x0, [x0, #8]
  40d91c:	bl	402a90 <free@plt>
  40d920:	mov	x1, #0x10                  	// #16
  40d924:	mov	x0, x19
  40d928:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40d92c:	ldr	x19, [sp, #16]
  40d930:	ldp	x29, x30, [sp], #32
  40d934:	ret
  40d938:	stp	x29, x30, [sp, #-16]!
  40d93c:	mov	x29, sp
  40d940:	mov	x1, #0x10                  	// #16
  40d944:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40d948:	ldp	x29, x30, [sp], #16
  40d94c:	ret
  40d950:	stp	x29, x30, [sp, #-112]!
  40d954:	mov	x29, sp
  40d958:	stp	x19, x20, [sp, #16]
  40d95c:	stp	x21, x22, [sp, #32]
  40d960:	stp	x23, x24, [sp, #48]
  40d964:	stp	x25, x26, [sp, #64]
  40d968:	stp	x27, x28, [sp, #80]
  40d96c:	mov	x20, x0
  40d970:	mov	x25, x1
  40d974:	mov	w21, w2
  40d978:	ldr	w0, [x0, #32]
  40d97c:	add	w0, w0, #0x1
  40d980:	str	w0, [x20, #32]
  40d984:	ldr	w26, [x20, #40]
  40d988:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d98c:	add	x0, x0, #0xf98
  40d990:	ubfiz	x2, x26, #4, #32
  40d994:	add	x1, x0, x2
  40d998:	ldr	w2, [x0, x2]
  40d99c:	str	w2, [sp, #108]
  40d9a0:	ldr	w27, [x1, #12]
  40d9a4:	mov	w28, w21
  40d9a8:	ldr	w0, [x1, #4]
  40d9ac:	mul	x0, x0, x28
  40d9b0:	lsr	x0, x0, #32
  40d9b4:	sub	w19, w21, w0
  40d9b8:	add	w19, w0, w19, lsr #1
  40d9bc:	lsr	w19, w19, w27
  40d9c0:	msub	w19, w19, w2, w21
  40d9c4:	ldr	x22, [x20]
  40d9c8:	ubfiz	x0, x19, #4, #32
  40d9cc:	add	x24, x22, x0
  40d9d0:	ldr	x0, [x22, x0]
  40d9d4:	cbz	x0, 40da68 <ferror@plt+0xad38>
  40d9d8:	cmp	x0, #0x1
  40d9dc:	b.eq	40d9ec <ferror@plt+0xacbc>  // b.none
  40d9e0:	ldr	x1, [x25]
  40d9e4:	bl	402a20 <strcmp@plt>
  40d9e8:	cbz	w0, 40da68 <ferror@plt+0xad38>
  40d9ec:	ldr	x23, [x20, #8]
  40d9f0:	ubfiz	x26, x26, #4, #32
  40d9f4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40d9f8:	add	x0, x0, #0xf98
  40d9fc:	add	x26, x0, x26
  40da00:	ldr	w0, [x26, #8]
  40da04:	mul	x28, x0, x28
  40da08:	lsr	x28, x28, #32
  40da0c:	add	w1, w21, #0x1
  40da10:	sub	w21, w21, w28
  40da14:	add	w21, w28, w21, lsr #1
  40da18:	lsr	w27, w21, w27
  40da1c:	ldr	w0, [sp, #108]
  40da20:	sub	w0, w0, #0x2
  40da24:	msub	w27, w27, w0, w1
  40da28:	ldr	w0, [x20, #36]
  40da2c:	add	w0, w0, #0x1
  40da30:	str	w0, [x20, #36]
  40da34:	add	w19, w19, w27
  40da38:	sub	w0, w19, w23
  40da3c:	cmp	x23, w19, uxtw
  40da40:	csel	w19, w0, w19, ls  // ls = plast
  40da44:	ubfiz	x0, x19, #4, #32
  40da48:	add	x24, x22, x0
  40da4c:	ldr	x0, [x22, x0]
  40da50:	cbz	x0, 40da68 <ferror@plt+0xad38>
  40da54:	cmp	x0, #0x1
  40da58:	b.eq	40da28 <ferror@plt+0xacf8>  // b.none
  40da5c:	ldr	x1, [x25]
  40da60:	bl	402a20 <strcmp@plt>
  40da64:	cbnz	w0, 40da28 <ferror@plt+0xacf8>
  40da68:	mov	x0, x24
  40da6c:	ldp	x19, x20, [sp, #16]
  40da70:	ldp	x21, x22, [sp, #32]
  40da74:	ldp	x23, x24, [sp, #48]
  40da78:	ldp	x25, x26, [sp, #64]
  40da7c:	ldp	x27, x28, [sp, #80]
  40da80:	ldp	x29, x30, [sp], #112
  40da84:	ret
  40da88:	ldr	x1, [x0]
  40da8c:	ldr	x3, [x0, #8]
  40da90:	cmp	x1, x3
  40da94:	b.cs	40dab4 <ferror@plt+0xad84>  // b.hs, b.nlast
  40da98:	ldr	x2, [x1]
  40da9c:	cmp	x2, #0x1
  40daa0:	b.hi	40dabc <ferror@plt+0xad8c>  // b.pmore
  40daa4:	add	x1, x1, #0x10
  40daa8:	str	x1, [x0]
  40daac:	cmp	x1, x3
  40dab0:	b.cc	40da98 <ferror@plt+0xad68>  // b.lo, b.ul, b.last
  40dab4:	str	xzr, [x0]
  40dab8:	str	xzr, [x0, #8]
  40dabc:	ret
  40dac0:	stp	x29, x30, [sp, #-64]!
  40dac4:	mov	x29, sp
  40dac8:	stp	x19, x20, [sp, #16]
  40dacc:	stp	x21, x22, [sp, #32]
  40dad0:	str	x23, [sp, #48]
  40dad4:	mov	x20, x0
  40dad8:	ldr	x23, [x0]
  40dadc:	ldr	w21, [x0, #40]
  40dae0:	ldr	x19, [x0, #8]
  40dae4:	add	x22, x23, x19, lsl #4
  40dae8:	ldr	x1, [x0, #16]
  40daec:	ldr	x0, [x0, #24]
  40daf0:	sub	x1, x1, x0
  40daf4:	lsl	x0, x1, #1
  40daf8:	cmp	x19, x1, lsl #1
  40dafc:	b.cc	40db18 <ferror@plt+0xade8>  // b.lo, b.ul, b.last
  40db00:	lsl	w1, w1, #3
  40db04:	cmp	x1, #0x20
  40db08:	mov	x2, #0x20                  	// #32
  40db0c:	csel	x1, x1, x2, cs  // cs = hs, nlast
  40db10:	cmp	x19, x1
  40db14:	b.ls	40db30 <ferror@plt+0xae00>  // b.plast
  40db18:	bl	40dcb0 <ferror@plt+0xaf80>
  40db1c:	mov	w21, w0
  40db20:	ubfiz	x1, x21, #4, #32
  40db24:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40db28:	add	x0, x0, #0xf98
  40db2c:	ldr	w19, [x0, x1]
  40db30:	ldrb	w0, [x20, #44]
  40db34:	cbnz	w0, 40db48 <ferror@plt+0xae18>
  40db38:	mov	x1, #0x10                  	// #16
  40db3c:	mov	x0, x19
  40db40:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40db44:	b	40db60 <ferror@plt+0xae30>
  40db48:	mov	x3, #0x0                   	// #0
  40db4c:	mov	x2, #0x0                   	// #0
  40db50:	mov	x1, #0x0                   	// #0
  40db54:	lsl	x0, x19, #4
  40db58:	bl	40e0f8 <ferror@plt+0xb3c8>
  40db5c:	cbz	x0, 40dba8 <ferror@plt+0xae78>
  40db60:	cbz	x19, 40db78 <ferror@plt+0xae48>
  40db64:	mov	x1, x0
  40db68:	add	x2, x0, x19, lsl #4
  40db6c:	str	xzr, [x1], #16
  40db70:	cmp	x1, x2
  40db74:	b.ne	40db6c <ferror@plt+0xae3c>  // b.any
  40db78:	str	x0, [x20]
  40db7c:	str	x19, [x20, #8]
  40db80:	str	w21, [x20, #40]
  40db84:	ldr	x0, [x20, #16]
  40db88:	ldr	x1, [x20, #24]
  40db8c:	sub	x0, x0, x1
  40db90:	str	x0, [x20, #16]
  40db94:	str	xzr, [x20, #24]
  40db98:	mov	x19, x23
  40db9c:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dba0:	add	x21, x21, #0xf98
  40dba4:	b	40dbd4 <ferror@plt+0xaea4>
  40dba8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dbac:	add	x2, x2, #0xd88
  40dbb0:	mov	w1, #0x2b5                 	// #693
  40dbb4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dbb8:	add	x0, x0, #0xd98
  40dbbc:	bl	4102b4 <ferror@plt+0xd584>
  40dbc0:	ldp	x0, x1, [x19]
  40dbc4:	stp	x0, x1, [x5]
  40dbc8:	add	x19, x19, #0x10
  40dbcc:	cmp	x22, x19
  40dbd0:	b.ls	40dc80 <ferror@plt+0xaf50>  // b.plast
  40dbd4:	ldr	x0, [x19]
  40dbd8:	cmp	x0, #0x1
  40dbdc:	b.ls	40dbc8 <ferror@plt+0xae98>  // b.plast
  40dbe0:	bl	453c24 <ferror@plt+0x50ef4>
  40dbe4:	ldr	w3, [x20, #40]
  40dbe8:	ubfiz	x2, x3, #4, #32
  40dbec:	add	x1, x21, x2
  40dbf0:	ldr	w6, [x21, x2]
  40dbf4:	ldr	w7, [x1, #12]
  40dbf8:	mov	w8, w0
  40dbfc:	ldr	w1, [x1, #4]
  40dc00:	mul	x1, x1, x8
  40dc04:	lsr	x2, x1, #32
  40dc08:	sub	w1, w0, w2
  40dc0c:	add	w1, w2, w1, lsr #1
  40dc10:	lsr	w1, w1, w7
  40dc14:	msub	w1, w1, w6, w0
  40dc18:	ldr	x2, [x20]
  40dc1c:	ubfiz	x4, x1, #4, #32
  40dc20:	add	x5, x2, x4
  40dc24:	ldr	x4, [x2, x4]
  40dc28:	cbz	x4, 40dbc0 <ferror@plt+0xae90>
  40dc2c:	ldr	x4, [x20, #8]
  40dc30:	ubfiz	x3, x3, #4, #32
  40dc34:	add	x3, x21, x3
  40dc38:	ldr	w3, [x3, #8]
  40dc3c:	mul	x3, x3, x8
  40dc40:	lsr	x3, x3, #32
  40dc44:	add	w5, w0, #0x1
  40dc48:	sub	w0, w0, w3
  40dc4c:	add	w0, w3, w0, lsr #1
  40dc50:	lsr	w0, w0, w7
  40dc54:	sub	w6, w6, #0x2
  40dc58:	msub	w0, w0, w6, w5
  40dc5c:	add	w1, w1, w0
  40dc60:	sub	w3, w1, w4
  40dc64:	cmp	x4, w1, uxtw
  40dc68:	csel	w1, w3, w1, ls  // ls = plast
  40dc6c:	ubfiz	x3, x1, #4, #32
  40dc70:	add	x5, x2, x3
  40dc74:	ldr	x3, [x2, x3]
  40dc78:	cbnz	x3, 40dc5c <ferror@plt+0xaf2c>
  40dc7c:	b	40dbc0 <ferror@plt+0xae90>
  40dc80:	ldrb	w0, [x20, #44]
  40dc84:	cbnz	w0, 40dca4 <ferror@plt+0xaf74>
  40dc88:	mov	x0, x23
  40dc8c:	bl	402a90 <free@plt>
  40dc90:	ldp	x19, x20, [sp, #16]
  40dc94:	ldp	x21, x22, [sp, #32]
  40dc98:	ldr	x23, [sp, #48]
  40dc9c:	ldp	x29, x30, [sp], #64
  40dca0:	ret
  40dca4:	mov	x0, x23
  40dca8:	bl	40e140 <ferror@plt+0xb410>
  40dcac:	b	40dc90 <ferror@plt+0xaf60>
  40dcb0:	mov	x4, x0
  40dcb4:	mov	w2, #0x1e                  	// #30
  40dcb8:	mov	w0, #0x0                   	// #0
  40dcbc:	adrp	x5, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dcc0:	add	x5, x5, #0xf98
  40dcc4:	b	40dccc <ferror@plt+0xaf9c>
  40dcc8:	mov	w2, w1
  40dccc:	cmp	w2, w0
  40dcd0:	b.eq	40dcf4 <ferror@plt+0xafc4>  // b.none
  40dcd4:	sub	w1, w2, w0
  40dcd8:	add	w1, w0, w1, lsr #1
  40dcdc:	ubfiz	x3, x1, #4, #32
  40dce0:	ldr	w3, [x5, x3]
  40dce4:	cmp	x3, x4
  40dce8:	b.cs	40dcc8 <ferror@plt+0xaf98>  // b.hs, b.nlast
  40dcec:	add	w0, w1, #0x1
  40dcf0:	b	40dccc <ferror@plt+0xaf9c>
  40dcf4:	ubfiz	x1, x0, #4, #32
  40dcf8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dcfc:	add	x2, x2, #0xf98
  40dd00:	ldr	w1, [x2, x1]
  40dd04:	cmp	x1, x4
  40dd08:	b.cc	40dd10 <ferror@plt+0xafe0>  // b.lo, b.ul, b.last
  40dd0c:	ret
  40dd10:	stp	x29, x30, [sp, #-16]!
  40dd14:	mov	x29, sp
  40dd18:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dd1c:	add	x2, x2, #0xf60
  40dd20:	mov	w1, #0x60                  	// #96
  40dd24:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dd28:	add	x0, x0, #0xf80
  40dd2c:	bl	4102b4 <ferror@plt+0xd584>
  40dd30:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40dd34:	add	x0, x0, #0x7a8
  40dd38:	ldarb	w0, [x0]
  40dd3c:	tbz	w0, #0, 40dd50 <ferror@plt+0xb020>
  40dd40:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40dd44:	add	x0, x0, #0x7a8
  40dd48:	add	x0, x0, #0x8
  40dd4c:	ret
  40dd50:	stp	x29, x30, [sp, #-48]!
  40dd54:	mov	x29, sp
  40dd58:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40dd5c:	add	x0, x0, #0x7a8
  40dd60:	bl	455300 <_obstack_memory_used@@Base+0xf60>
  40dd64:	cbnz	w0, 40dd7c <ferror@plt+0xb04c>
  40dd68:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40dd6c:	add	x0, x0, #0x7a8
  40dd70:	add	x0, x0, #0x8
  40dd74:	ldp	x29, x30, [sp], #48
  40dd78:	ret
  40dd7c:	stp	x19, x20, [sp, #16]
  40dd80:	str	x21, [sp, #32]
  40dd84:	mov	x0, #0x30                  	// #48
  40dd88:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40dd8c:	mov	x19, x0
  40dd90:	str	xzr, [x0, #16]
  40dd94:	str	xzr, [x0, #24]
  40dd98:	str	wzr, [x0, #32]
  40dd9c:	str	wzr, [x0, #36]
  40dda0:	strb	wzr, [x0, #44]
  40dda4:	mov	x0, #0xd                   	// #13
  40dda8:	bl	40dcb0 <ferror@plt+0xaf80>
  40ddac:	mov	w20, w0
  40ddb0:	ubfiz	x1, x20, #4, #32
  40ddb4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40ddb8:	add	x0, x0, #0xf98
  40ddbc:	ldr	w21, [x0, x1]
  40ddc0:	mov	x1, #0x10                  	// #16
  40ddc4:	mov	x0, x21
  40ddc8:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40ddcc:	cbz	x21, 40dde4 <ferror@plt+0xb0b4>
  40ddd0:	mov	x1, x0
  40ddd4:	add	x2, x0, x21, lsl #4
  40ddd8:	str	xzr, [x1], #16
  40dddc:	cmp	x1, x2
  40dde0:	b.ne	40ddd8 <ferror@plt+0xb0a8>  // b.any
  40dde4:	str	x0, [x19]
  40dde8:	str	x21, [x19, #8]
  40ddec:	str	w20, [x19, #40]
  40ddf0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40ddf4:	str	x19, [x0, #2008]
  40ddf8:	mov	x0, #0x30                  	// #48
  40ddfc:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40de00:	mov	x19, x0
  40de04:	str	xzr, [x0, #16]
  40de08:	str	xzr, [x0, #24]
  40de0c:	str	wzr, [x0, #32]
  40de10:	str	wzr, [x0, #36]
  40de14:	strb	wzr, [x0, #44]
  40de18:	mov	x0, #0xd                   	// #13
  40de1c:	bl	40dcb0 <ferror@plt+0xaf80>
  40de20:	mov	w21, w0
  40de24:	ubfiz	x1, x21, #4, #32
  40de28:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40de2c:	add	x0, x0, #0xf98
  40de30:	ldr	w20, [x0, x1]
  40de34:	mov	x1, #0x18                  	// #24
  40de38:	mov	x0, x20
  40de3c:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40de40:	cbz	x20, 40de5c <ferror@plt+0xb12c>
  40de44:	mov	x1, x0
  40de48:	add	x2, x20, x20, lsl #1
  40de4c:	add	x2, x0, x2, lsl #3
  40de50:	str	xzr, [x1], #24
  40de54:	cmp	x2, x1
  40de58:	b.ne	40de50 <ferror@plt+0xb120>  // b.any
  40de5c:	str	x0, [x19]
  40de60:	str	x20, [x19, #8]
  40de64:	str	w21, [x19, #40]
  40de68:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40de6c:	str	x19, [x0, #2016]
  40de70:	mov	x0, #0x30                  	// #48
  40de74:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  40de78:	mov	x19, x0
  40de7c:	str	xzr, [x0, #16]
  40de80:	str	xzr, [x0, #24]
  40de84:	str	wzr, [x0, #32]
  40de88:	str	wzr, [x0, #36]
  40de8c:	strb	wzr, [x0, #44]
  40de90:	mov	x0, #0xd                   	// #13
  40de94:	bl	40dcb0 <ferror@plt+0xaf80>
  40de98:	mov	w21, w0
  40de9c:	ubfiz	x1, x21, #4, #32
  40dea0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  40dea4:	add	x0, x0, #0xf98
  40dea8:	ldr	w20, [x0, x1]
  40deac:	mov	x1, #0x18                  	// #24
  40deb0:	mov	x0, x20
  40deb4:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40deb8:	cbz	x20, 40ded4 <ferror@plt+0xb1a4>
  40debc:	mov	x1, x0
  40dec0:	add	x2, x20, x20, lsl #1
  40dec4:	add	x2, x0, x2, lsl #3
  40dec8:	str	xzr, [x1], #24
  40decc:	cmp	x2, x1
  40ded0:	b.ne	40dec8 <ferror@plt+0xb198>  // b.any
  40ded4:	str	x0, [x19]
  40ded8:	str	x20, [x19, #8]
  40dedc:	str	w21, [x19, #40]
  40dee0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40dee4:	add	x0, x0, #0x7a8
  40dee8:	add	x20, x0, #0x8
  40deec:	str	x19, [x0, #8]
  40def0:	bl	455490 <_obstack_memory_used@@Base+0x10f0>
  40def4:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40def8:	add	x2, x2, #0x3a0
  40defc:	mov	x1, x20
  40df00:	adrp	x0, 40d000 <ferror@plt+0xa2d0>
  40df04:	add	x0, x0, #0xf54
  40df08:	bl	402740 <__cxa_atexit@plt>
  40df0c:	ldp	x19, x20, [sp, #16]
  40df10:	ldr	x21, [sp, #32]
  40df14:	b	40dd68 <ferror@plt+0xb038>
  40df18:	ret
  40df1c:	ldr	x1, [x0]
  40df20:	ldr	x3, [x0, #8]
  40df24:	cmp	x1, x3
  40df28:	b.cs	40df48 <ferror@plt+0xb218>  // b.hs, b.nlast
  40df2c:	ldr	x2, [x1]
  40df30:	cmp	x2, #0x1
  40df34:	b.hi	40df50 <ferror@plt+0xb220>  // b.pmore
  40df38:	add	x1, x1, #0x10
  40df3c:	str	x1, [x0]
  40df40:	cmp	x1, x3
  40df44:	b.cc	40df2c <ferror@plt+0xb1fc>  // b.lo, b.ul, b.last
  40df48:	str	xzr, [x0]
  40df4c:	str	xzr, [x0, #8]
  40df50:	ret
  40df54:	stp	x29, x30, [sp, #-48]!
  40df58:	mov	x29, sp
  40df5c:	stp	x19, x20, [sp, #16]
  40df60:	mov	x20, x0
  40df64:	ldr	x0, [x0, #40]
  40df68:	ldr	x1, [x0]
  40df6c:	ldr	x0, [x0, #8]
  40df70:	add	x0, x1, x0, lsl #4
  40df74:	str	x1, [sp, #32]
  40df78:	str	x0, [sp, #40]
  40df7c:	add	x0, sp, #0x20
  40df80:	bl	40df1c <ferror@plt+0xb1ec>
  40df84:	mov	x19, #0x20                  	// #32
  40df88:	b	40e08c <ferror@plt+0xb35c>
  40df8c:	ldr	x0, [sp, #40]
  40df90:	cbnz	x0, 40e094 <ferror@plt+0xb364>
  40df94:	ldr	x19, [x20, #40]
  40df98:	cbz	x19, 40dfd0 <ferror@plt+0xb2a0>
  40df9c:	ldr	x0, [x19, #8]
  40dfa0:	sub	x1, x0, #0x1
  40dfa4:	cbz	x0, 40dfb4 <ferror@plt+0xb284>
  40dfa8:	sub	x1, x1, #0x1
  40dfac:	cmp	x0, x1
  40dfb0:	b.hi	40dfa8 <ferror@plt+0xb278>  // b.pmore
  40dfb4:	ldrb	w0, [x19, #44]
  40dfb8:	cbnz	w0, 40e0a0 <ferror@plt+0xb370>
  40dfbc:	ldr	x0, [x19]
  40dfc0:	bl	402a90 <free@plt>
  40dfc4:	mov	x1, #0x30                  	// #48
  40dfc8:	mov	x0, x19
  40dfcc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40dfd0:	ldr	x19, [x20, #48]
  40dfd4:	cbz	x19, 40e010 <ferror@plt+0xb2e0>
  40dfd8:	ldr	x0, [x19, #8]
  40dfdc:	sub	x1, x0, #0x1
  40dfe0:	cbz	x0, 40dff4 <ferror@plt+0xb2c4>
  40dfe4:	sub	x1, x1, #0x1
  40dfe8:	ldr	x0, [x19, #8]
  40dfec:	cmp	x0, x1
  40dff0:	b.hi	40dfe4 <ferror@plt+0xb2b4>  // b.pmore
  40dff4:	ldrb	w0, [x19, #44]
  40dff8:	cbnz	w0, 40e0ac <ferror@plt+0xb37c>
  40dffc:	ldr	x0, [x19]
  40e000:	bl	402a90 <free@plt>
  40e004:	mov	x1, #0x30                  	// #48
  40e008:	mov	x0, x19
  40e00c:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40e010:	ldr	x19, [x20]
  40e014:	cbz	x19, 40e050 <ferror@plt+0xb320>
  40e018:	ldr	x1, [x19, #8]
  40e01c:	sub	x0, x1, #0x1
  40e020:	cbz	x1, 40e034 <ferror@plt+0xb304>
  40e024:	sub	x0, x0, #0x1
  40e028:	ldr	x1, [x19, #8]
  40e02c:	cmp	x1, x0
  40e030:	b.hi	40e024 <ferror@plt+0xb2f4>  // b.pmore
  40e034:	ldrb	w0, [x19, #44]
  40e038:	cbnz	w0, 40e0b8 <ferror@plt+0xb388>
  40e03c:	ldr	x0, [x19]
  40e040:	bl	402a90 <free@plt>
  40e044:	mov	x1, #0x30                  	// #48
  40e048:	mov	x0, x19
  40e04c:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40e050:	ldp	x19, x20, [sp, #16]
  40e054:	ldp	x29, x30, [sp], #48
  40e058:	ret
  40e05c:	mov	x1, x19
  40e060:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40e064:	ldr	x1, [sp, #32]
  40e068:	ldr	x0, [x1, #8]
  40e06c:	cbz	x0, 40e078 <ferror@plt+0xb348>
  40e070:	mov	x1, x19
  40e074:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40e078:	ldr	x1, [sp, #32]
  40e07c:	add	x1, x1, #0x10
  40e080:	str	x1, [sp, #32]
  40e084:	add	x0, sp, #0x20
  40e088:	bl	40df1c <ferror@plt+0xb1ec>
  40e08c:	ldr	x1, [sp, #32]
  40e090:	cbz	x1, 40df8c <ferror@plt+0xb25c>
  40e094:	ldr	x0, [x1]
  40e098:	cbnz	x0, 40e05c <ferror@plt+0xb32c>
  40e09c:	b	40e064 <ferror@plt+0xb334>
  40e0a0:	ldr	x0, [x19]
  40e0a4:	bl	40e140 <ferror@plt+0xb410>
  40e0a8:	b	40dfc4 <ferror@plt+0xb294>
  40e0ac:	ldr	x0, [x19]
  40e0b0:	bl	40e140 <ferror@plt+0xb410>
  40e0b4:	b	40e004 <ferror@plt+0xb2d4>
  40e0b8:	ldr	x0, [x19]
  40e0bc:	bl	40e140 <ferror@plt+0xb410>
  40e0c0:	b	40e044 <ferror@plt+0xb314>
  40e0c4:	ret
  40e0c8:	stp	x29, x30, [sp, #-16]!
  40e0cc:	mov	x29, sp
  40e0d0:	cbnz	x1, 40e0e0 <ferror@plt+0xb3b0>
  40e0d4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  40e0d8:	ldp	x29, x30, [sp], #16
  40e0dc:	ret
  40e0e0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e0e4:	add	x2, x2, #0x178
  40e0e8:	mov	w1, #0x2f                  	// #47
  40e0ec:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e0f0:	add	x0, x0, #0x190
  40e0f4:	bl	4102b4 <ferror@plt+0xd584>
  40e0f8:	stp	x29, x30, [sp, #-16]!
  40e0fc:	mov	x29, sp
  40e100:	cbnz	x1, 40e114 <ferror@plt+0xb3e4>
  40e104:	mov	x1, #0x1                   	// #1
  40e108:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  40e10c:	ldp	x29, x30, [sp], #16
  40e110:	ret
  40e114:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e118:	add	x2, x2, #0x1a8
  40e11c:	mov	w1, #0x37                  	// #55
  40e120:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e124:	add	x0, x0, #0x190
  40e128:	bl	4102b4 <ferror@plt+0xd584>
  40e12c:	stp	x29, x30, [sp, #-16]!
  40e130:	mov	x29, sp
  40e134:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  40e138:	ldp	x29, x30, [sp], #16
  40e13c:	ret
  40e140:	stp	x29, x30, [sp, #-16]!
  40e144:	mov	x29, sp
  40e148:	bl	402a90 <free@plt>
  40e14c:	ldp	x29, x30, [sp], #16
  40e150:	ret
  40e154:	ret
  40e158:	stp	x29, x30, [sp, #-32]!
  40e15c:	mov	x29, sp
  40e160:	stp	x19, x20, [sp, #16]
  40e164:	mov	x19, x0
  40e168:	ldr	w0, [x0, #56]
  40e16c:	cbz	w0, 40e1a4 <ferror@plt+0xb474>
  40e170:	ldrb	w0, [x19, #64]
  40e174:	cbz	w0, 40e1b0 <ferror@plt+0xb480>
  40e178:	ldr	x20, [x19]
  40e17c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e180:	add	x0, x0, #0x1c8
  40e184:	bl	402cd0 <gettext@plt>
  40e188:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e18c:	ldr	x2, [x1, #2024]
  40e190:	mov	x1, x0
  40e194:	mov	x0, x20
  40e198:	bl	418cb8 <ferror@plt+0x15f88>
  40e19c:	ldr	x0, [x19]
  40e1a0:	bl	417080 <ferror@plt+0x14350>
  40e1a4:	ldp	x19, x20, [sp, #16]
  40e1a8:	ldp	x29, x30, [sp], #32
  40e1ac:	ret
  40e1b0:	ldr	x20, [x19]
  40e1b4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e1b8:	add	x0, x0, #0x1f8
  40e1bc:	bl	402cd0 <gettext@plt>
  40e1c0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e1c4:	ldr	x2, [x1, #2024]
  40e1c8:	mov	x1, x0
  40e1cc:	mov	x0, x20
  40e1d0:	bl	418cb8 <ferror@plt+0x15f88>
  40e1d4:	b	40e19c <ferror@plt+0xb46c>
  40e1d8:	stp	x29, x30, [sp, #-96]!
  40e1dc:	mov	x29, sp
  40e1e0:	stp	x21, x22, [sp, #32]
  40e1e4:	mov	x21, x0
  40e1e8:	orr	x0, x2, x4
  40e1ec:	cbz	x0, 40e2f0 <ferror@plt+0xb5c0>
  40e1f0:	stp	x19, x20, [sp, #16]
  40e1f4:	stp	x23, x24, [sp, #48]
  40e1f8:	mov	x22, x1
  40e1fc:	mov	x20, x2
  40e200:	mov	w23, w3
  40e204:	mov	x19, x4
  40e208:	ldr	w0, [x21]
  40e20c:	cmp	w0, #0x0
  40e210:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  40e214:	b.ne	40e264 <ferror@plt+0xb534>  // b.any
  40e218:	ldr	w1, [x21]
  40e21c:	mov	w0, #0x1                   	// #1
  40e220:	cmp	w1, #0x13
  40e224:	b.gt	40e3b0 <ferror@plt+0xb680>
  40e228:	stp	x25, x26, [sp, #64]
  40e22c:	add	w1, w1, w0
  40e230:	str	w1, [x21]
  40e234:	cbz	x19, 40e300 <ferror@plt+0xb5d0>
  40e238:	str	x27, [sp, #80]
  40e23c:	mov	w1, #0x400b                	// #16395
  40e240:	mov	x0, x19
  40e244:	bl	44f28c <ferror@plt+0x4c55c>
  40e248:	mov	x26, x0
  40e24c:	cmp	x0, #0x0
  40e250:	csel	x19, x19, x0, eq  // eq = none
  40e254:	mov	x24, #0x0                   	// #0
  40e258:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e25c:	add	x27, x27, #0x748
  40e260:	b	40e294 <ferror@plt+0xb564>
  40e264:	mov	x0, x2
  40e268:	bl	453fdc <ferror@plt+0x512ac>
  40e26c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e270:	add	x1, x1, #0x230
  40e274:	bl	402a20 <strcmp@plt>
  40e278:	cbnz	w0, 40e218 <ferror@plt+0xb4e8>
  40e27c:	ldp	x19, x20, [sp, #16]
  40e280:	ldp	x23, x24, [sp, #48]
  40e284:	b	40e2f4 <ferror@plt+0xb5c4>
  40e288:	add	x24, x24, #0x1
  40e28c:	cmp	x24, #0x4
  40e290:	b.eq	40e354 <ferror@plt+0xb624>  // b.none
  40e294:	ldr	x25, [x27, x24, lsl #3]
  40e298:	mov	x0, x25
  40e29c:	bl	402680 <strlen@plt>
  40e2a0:	mov	x21, x0
  40e2a4:	mov	x2, x0
  40e2a8:	mov	x1, x25
  40e2ac:	mov	x0, x19
  40e2b0:	bl	402830 <strncmp@plt>
  40e2b4:	cbnz	w0, 40e288 <ferror@plt+0xb558>
  40e2b8:	ldrb	w0, [x19, x21]
  40e2bc:	cmp	w0, #0x28
  40e2c0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40e2c4:	b.ne	40e288 <ferror@plt+0xb558>  // b.any
  40e2c8:	mov	w0, #0x1                   	// #1
  40e2cc:	cbz	x26, 40e3bc <ferror@plt+0xb68c>
  40e2d0:	mov	x0, x26
  40e2d4:	bl	402a90 <free@plt>
  40e2d8:	mov	w0, #0x1                   	// #1
  40e2dc:	ldp	x19, x20, [sp, #16]
  40e2e0:	ldp	x23, x24, [sp, #48]
  40e2e4:	ldp	x25, x26, [sp, #64]
  40e2e8:	ldr	x27, [sp, #80]
  40e2ec:	b	40e2f4 <ferror@plt+0xb5c4>
  40e2f0:	mov	w0, #0x0                   	// #0
  40e2f4:	ldp	x21, x22, [sp, #32]
  40e2f8:	ldp	x29, x30, [sp], #96
  40e2fc:	ret
  40e300:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e304:	ldr	x0, [x0, #1424]
  40e308:	cbz	x20, 40e340 <ferror@plt+0xb610>
  40e30c:	mov	w5, w23
  40e310:	mov	x4, x20
  40e314:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e318:	add	x3, x3, #0x228
  40e31c:	mov	x2, x22
  40e320:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e324:	add	x1, x1, #0x240
  40e328:	bl	402ce0 <fprintf@plt>
  40e32c:	mov	w0, #0x0                   	// #0
  40e330:	ldp	x19, x20, [sp, #16]
  40e334:	ldp	x23, x24, [sp, #48]
  40e338:	ldp	x25, x26, [sp, #64]
  40e33c:	b	40e2f4 <ferror@plt+0xb5c4>
  40e340:	mov	x26, x20
  40e344:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e348:	add	x19, x19, #0x228
  40e34c:	mov	x20, x19
  40e350:	b	40e370 <ferror@plt+0xb640>
  40e354:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e358:	ldr	x0, [x0, #1424]
  40e35c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e360:	add	x1, x1, #0x228
  40e364:	cmp	x20, #0x0
  40e368:	csel	x20, x1, x20, eq  // eq = none
  40e36c:	ldr	x27, [sp, #80]
  40e370:	mov	w5, w23
  40e374:	mov	x4, x20
  40e378:	mov	x3, x19
  40e37c:	mov	x2, x22
  40e380:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e384:	add	x1, x1, #0x240
  40e388:	bl	402ce0 <fprintf@plt>
  40e38c:	mov	w0, #0x0                   	// #0
  40e390:	cbz	x26, 40e3d0 <ferror@plt+0xb6a0>
  40e394:	mov	x0, x26
  40e398:	bl	402a90 <free@plt>
  40e39c:	mov	w0, #0x0                   	// #0
  40e3a0:	ldp	x19, x20, [sp, #16]
  40e3a4:	ldp	x23, x24, [sp, #48]
  40e3a8:	ldp	x25, x26, [sp, #64]
  40e3ac:	b	40e2f4 <ferror@plt+0xb5c4>
  40e3b0:	ldp	x19, x20, [sp, #16]
  40e3b4:	ldp	x23, x24, [sp, #48]
  40e3b8:	b	40e2f4 <ferror@plt+0xb5c4>
  40e3bc:	ldp	x19, x20, [sp, #16]
  40e3c0:	ldp	x23, x24, [sp, #48]
  40e3c4:	ldp	x25, x26, [sp, #64]
  40e3c8:	ldr	x27, [sp, #80]
  40e3cc:	b	40e2f4 <ferror@plt+0xb5c4>
  40e3d0:	ldp	x19, x20, [sp, #16]
  40e3d4:	ldp	x23, x24, [sp, #48]
  40e3d8:	ldp	x25, x26, [sp, #64]
  40e3dc:	b	40e2f4 <ferror@plt+0xb5c4>
  40e3e0:	tbnz	w2, #31, 40e444 <ferror@plt+0xb714>
  40e3e4:	stp	x29, x30, [sp, #-32]!
  40e3e8:	mov	x29, sp
  40e3ec:	stp	x19, x20, [sp, #16]
  40e3f0:	mov	x19, x1
  40e3f4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e3f8:	ldr	x20, [x0, #1424]
  40e3fc:	cbnz	w2, 40e42c <ferror@plt+0xb6fc>
  40e400:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40e404:	add	x3, x3, #0xd70
  40e408:	mov	x4, x3
  40e40c:	mov	x2, x19
  40e410:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e414:	add	x1, x1, #0x260
  40e418:	mov	x0, x20
  40e41c:	bl	402ce0 <fprintf@plt>
  40e420:	ldp	x19, x20, [sp, #16]
  40e424:	ldp	x29, x30, [sp], #32
  40e428:	ret
  40e42c:	mov	w0, w2
  40e430:	bl	454e98 <_obstack_memory_used@@Base+0xaf8>
  40e434:	mov	x4, x0
  40e438:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e43c:	add	x3, x3, #0x258
  40e440:	b	40e40c <ferror@plt+0xb6dc>
  40e444:	ret
  40e448:	stp	x29, x30, [sp, #-32]!
  40e44c:	mov	x29, sp
  40e450:	str	x19, [sp, #16]
  40e454:	mov	x19, x0
  40e458:	ldr	w2, [x1, #56]
  40e45c:	ldr	x1, [x1, #40]
  40e460:	bl	413170 <ferror@plt+0x10440>
  40e464:	ldr	x0, [x19]
  40e468:	bl	4165b4 <ferror@plt+0x13884>
  40e46c:	ldr	x0, [x19]
  40e470:	bl	4166f8 <ferror@plt+0x139c8>
  40e474:	ldr	x19, [sp, #16]
  40e478:	ldp	x29, x30, [sp], #32
  40e47c:	ret
  40e480:	stp	x29, x30, [sp, #-272]!
  40e484:	mov	x29, sp
  40e488:	str	x1, [sp, #216]
  40e48c:	str	x2, [sp, #224]
  40e490:	str	x3, [sp, #232]
  40e494:	str	x4, [sp, #240]
  40e498:	str	x5, [sp, #248]
  40e49c:	str	x6, [sp, #256]
  40e4a0:	str	x7, [sp, #264]
  40e4a4:	str	q0, [sp, #80]
  40e4a8:	str	q1, [sp, #96]
  40e4ac:	str	q2, [sp, #112]
  40e4b0:	str	q3, [sp, #128]
  40e4b4:	str	q4, [sp, #144]
  40e4b8:	str	q5, [sp, #160]
  40e4bc:	str	q6, [sp, #176]
  40e4c0:	str	q7, [sp, #192]
  40e4c4:	add	x1, sp, #0x110
  40e4c8:	str	x1, [sp, #48]
  40e4cc:	str	x1, [sp, #56]
  40e4d0:	add	x1, sp, #0xd0
  40e4d4:	str	x1, [sp, #64]
  40e4d8:	mov	w1, #0xffffffc8            	// #-56
  40e4dc:	str	w1, [sp, #72]
  40e4e0:	mov	w1, #0xffffff80            	// #-128
  40e4e4:	str	w1, [sp, #76]
  40e4e8:	ldp	x2, x3, [sp, #48]
  40e4ec:	stp	x2, x3, [sp, #16]
  40e4f0:	ldp	x2, x3, [sp, #64]
  40e4f4:	stp	x2, x3, [sp, #32]
  40e4f8:	add	x1, sp, #0x10
  40e4fc:	bl	454f1c <_obstack_memory_used@@Base+0xb7c>
  40e500:	ldp	x29, x30, [sp], #272
  40e504:	ret
  40e508:	stp	x29, x30, [sp, #-64]!
  40e50c:	mov	x29, sp
  40e510:	stp	x19, x20, [sp, #16]
  40e514:	stp	x21, x22, [sp, #32]
  40e518:	str	x23, [sp, #48]
  40e51c:	mov	x20, x0
  40e520:	mov	x21, x1
  40e524:	ldr	x19, [x1]
  40e528:	ldr	x22, [x0]
  40e52c:	mov	x2, #0x5                   	// #5
  40e530:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e534:	add	x1, x1, #0x278
  40e538:	ldrb	w0, [x22, #67]
  40e53c:	bl	411460 <ferror@plt+0xe730>
  40e540:	mov	x23, x0
  40e544:	ldrb	w0, [x22, #67]
  40e548:	bl	4114f4 <ferror@plt+0xe7c4>
  40e54c:	mov	x22, x0
  40e550:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e554:	ldr	x0, [x0, #2024]
  40e558:	cmp	x19, #0x0
  40e55c:	csel	x19, x0, x19, eq  // eq = none
  40e560:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e564:	add	x1, x1, #0x280
  40e568:	mov	x0, x19
  40e56c:	bl	402a20 <strcmp@plt>
  40e570:	cbz	w0, 40e5fc <ferror@plt+0xb8cc>
  40e574:	ldr	w3, [x21, #8]
  40e578:	ldrb	w0, [x20, #121]
  40e57c:	cbz	w0, 40e608 <ferror@plt+0xb8d8>
  40e580:	ldr	w4, [x21, #12]
  40e584:	cbz	w3, 40e60c <ferror@plt+0xb8dc>
  40e588:	cbz	w4, 40e5e0 <ferror@plt+0xb8b0>
  40e58c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e590:	add	x2, x2, #0x268
  40e594:	mov	x1, #0x20                  	// #32
  40e598:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e59c:	add	x0, x0, #0x7e8
  40e5a0:	add	x0, x0, #0x8
  40e5a4:	bl	402780 <snprintf@plt>
  40e5a8:	mov	x4, x22
  40e5ac:	adrp	x3, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e5b0:	add	x3, x3, #0x7e8
  40e5b4:	add	x3, x3, #0x8
  40e5b8:	mov	x2, x19
  40e5bc:	mov	x1, x23
  40e5c0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e5c4:	add	x0, x0, #0x290
  40e5c8:	bl	40e480 <ferror@plt+0xb750>
  40e5cc:	ldp	x19, x20, [sp, #16]
  40e5d0:	ldp	x21, x22, [sp, #32]
  40e5d4:	ldr	x23, [sp, #48]
  40e5d8:	ldp	x29, x30, [sp], #64
  40e5dc:	ret
  40e5e0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e5e4:	add	x2, x2, #0x270
  40e5e8:	b	40e594 <ferror@plt+0xb864>
  40e5ec:	mov	w4, #0x0                   	// #0
  40e5f0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e5f4:	add	x2, x2, #0x270
  40e5f8:	b	40e594 <ferror@plt+0xb864>
  40e5fc:	mov	w3, w0
  40e600:	ldrb	w0, [x20, #121]
  40e604:	cbnz	w0, 40e60c <ferror@plt+0xb8dc>
  40e608:	cbnz	w3, 40e5ec <ferror@plt+0xb8bc>
  40e60c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e610:	strb	wzr, [x0, #2032]
  40e614:	b	40e5a8 <ferror@plt+0xb878>
  40e618:	stp	x29, x30, [sp, #-64]!
  40e61c:	mov	x29, sp
  40e620:	stp	x19, x20, [sp, #16]
  40e624:	mov	x19, x0
  40e628:	ldp	x2, x3, [x1]
  40e62c:	stp	x2, x3, [sp, #32]
  40e630:	ldp	x2, x3, [x1, #16]
  40e634:	stp	x2, x3, [sp, #48]
  40e638:	add	x1, sp, #0x20
  40e63c:	bl	40e508 <ferror@plt+0xb7d8>
  40e640:	mov	x20, x0
  40e644:	mov	x1, x0
  40e648:	ldr	x0, [x19]
  40e64c:	bl	416f20 <ferror@plt+0x141f0>
  40e650:	mov	x0, x20
  40e654:	bl	402a90 <free@plt>
  40e658:	ldr	x0, [x19]
  40e65c:	bl	4168c4 <ferror@plt+0x13b94>
  40e660:	ldp	x19, x20, [sp, #16]
  40e664:	ldp	x29, x30, [sp], #64
  40e668:	ret
  40e66c:	stp	x29, x30, [sp, #-48]!
  40e670:	mov	x29, sp
  40e674:	stp	x19, x20, [sp, #16]
  40e678:	str	x21, [sp, #32]
  40e67c:	mov	x19, x0
  40e680:	mov	x21, x1
  40e684:	ldr	x0, [x0]
  40e688:	mov	x2, #0x5                   	// #5
  40e68c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e690:	add	x1, x1, #0x278
  40e694:	ldrb	w0, [x0, #67]
  40e698:	bl	411460 <ferror@plt+0xe730>
  40e69c:	mov	x20, x0
  40e6a0:	ldr	x0, [x19]
  40e6a4:	ldrb	w0, [x0, #67]
  40e6a8:	bl	4114f4 <ferror@plt+0xe7c4>
  40e6ac:	mov	x3, x0
  40e6b0:	mov	x2, x21
  40e6b4:	mov	x1, x20
  40e6b8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e6bc:	add	x0, x0, #0x2a0
  40e6c0:	bl	40e480 <ferror@plt+0xb750>
  40e6c4:	ldp	x19, x20, [sp, #16]
  40e6c8:	ldr	x21, [sp, #32]
  40e6cc:	ldp	x29, x30, [sp], #48
  40e6d0:	ret
  40e6d4:	stp	x29, x30, [sp, #-32]!
  40e6d8:	mov	x29, sp
  40e6dc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e6e0:	add	x0, x0, #0x2b0
  40e6e4:	bl	402c50 <getenv@plt>
  40e6e8:	cbz	x0, 40e700 <ferror@plt+0xb9d0>
  40e6ec:	mov	w2, #0xa                   	// #10
  40e6f0:	mov	x1, #0x0                   	// #0
  40e6f4:	bl	402a50 <strtol@plt>
  40e6f8:	cmp	w0, #0x0
  40e6fc:	b.gt	40e730 <ferror@plt+0xba00>
  40e700:	strh	wzr, [sp, #26]
  40e704:	add	x2, sp, #0x18
  40e708:	mov	x1, #0x5413                	// #21523
  40e70c:	mov	w0, #0x0                   	// #0
  40e710:	bl	402d10 <ioctl@plt>
  40e714:	mov	w1, w0
  40e718:	mov	w0, #0x7fffffff            	// #2147483647
  40e71c:	cbnz	w1, 40e730 <ferror@plt+0xba00>
  40e720:	ldrh	w0, [sp, #26]
  40e724:	cmp	w0, #0x0
  40e728:	mov	w1, #0x7fffffff            	// #2147483647
  40e72c:	csel	w0, w0, w1, ne  // ne = any
  40e730:	ldp	x29, x30, [sp], #32
  40e734:	ret
  40e738:	stp	x29, x30, [sp, #-32]!
  40e73c:	mov	x29, sp
  40e740:	str	x19, [sp, #16]
  40e744:	mov	x19, x0
  40e748:	cbz	w1, 40e76c <ferror@plt+0xba3c>
  40e74c:	sub	w1, w1, #0x1
  40e750:	cmp	w1, #0x0
  40e754:	mov	w0, #0x7fffffff            	// #2147483647
  40e758:	csel	w1, w1, w0, gt
  40e75c:	str	w1, [x19, #112]
  40e760:	ldr	x19, [sp, #16]
  40e764:	ldp	x29, x30, [sp], #32
  40e768:	ret
  40e76c:	ldr	x0, [x0]
  40e770:	ldr	x0, [x0, #8]
  40e774:	ldr	x0, [x0, #192]
  40e778:	bl	402850 <fileno_unlocked@plt>
  40e77c:	bl	402b90 <isatty@plt>
  40e780:	mov	w1, #0x7fffffff            	// #2147483647
  40e784:	cbz	w0, 40e75c <ferror@plt+0xba2c>
  40e788:	bl	40e6d4 <ferror@plt+0xb9a4>
  40e78c:	sub	w1, w0, #0x1
  40e790:	b	40e750 <ferror@plt+0xba20>
  40e794:	stp	x29, x30, [sp, #-48]!
  40e798:	mov	x29, sp
  40e79c:	stp	x19, x20, [sp, #16]
  40e7a0:	str	x21, [sp, #32]
  40e7a4:	mov	x19, x0
  40e7a8:	mov	w20, w1
  40e7ac:	mov	x0, #0x48                  	// #72
  40e7b0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  40e7b4:	mov	x21, x19
  40e7b8:	str	x0, [x21], #8
  40e7bc:	mov	w1, #0x0                   	// #0
  40e7c0:	bl	4165e0 <ferror@plt+0x138b0>
  40e7c4:	stp	xzr, xzr, [x19, #8]
  40e7c8:	stp	xzr, xzr, [x21, #16]
  40e7cc:	stp	xzr, xzr, [x21, #32]
  40e7d0:	str	xzr, [x21, #48]
  40e7d4:	strb	wzr, [x19, #64]
  40e7d8:	str	w20, [x19, #68]
  40e7dc:	sbfiz	x0, x20, #2, #32
  40e7e0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  40e7e4:	str	x0, [x19, #72]
  40e7e8:	cmp	w20, #0x0
  40e7ec:	b.le	40e814 <ferror@plt+0xbae4>
  40e7f0:	sub	w1, w20, #0x1
  40e7f4:	add	x1, x1, #0x1
  40e7f8:	lsl	x1, x1, #2
  40e7fc:	mov	x0, #0x0                   	// #0
  40e800:	ldr	x2, [x19, #72]
  40e804:	str	wzr, [x2, x0]
  40e808:	add	x0, x0, #0x4
  40e80c:	cmp	x1, x0
  40e810:	b.ne	40e800 <ferror@plt+0xbad0>  // b.any
  40e814:	strb	wzr, [x19, #108]
  40e818:	ldr	x0, [x19]
  40e81c:	ldr	w1, [x0, #40]
  40e820:	mov	x0, x19
  40e824:	bl	40e738 <ferror@plt+0xba08>
  40e828:	mov	w0, #0x5e                  	// #94
  40e82c:	strb	w0, [x19, #116]
  40e830:	strb	w0, [x19, #117]
  40e834:	strb	w0, [x19, #118]
  40e838:	strb	wzr, [x19, #119]
  40e83c:	strb	wzr, [x19, #120]
  40e840:	strb	wzr, [x19, #121]
  40e844:	strb	wzr, [x19, #122]
  40e848:	strb	wzr, [x19, #123]
  40e84c:	str	wzr, [x19, #124]
  40e850:	strb	wzr, [x19, #128]
  40e854:	strb	wzr, [x19, #129]
  40e858:	strb	wzr, [x19, #130]
  40e85c:	str	wzr, [x19, #132]
  40e860:	str	xzr, [x19, #160]
  40e864:	adrp	x0, 410000 <ferror@plt+0xd2d0>
  40e868:	add	x0, x0, #0x4e0
  40e86c:	str	x0, [x19, #136]
  40e870:	adrp	x0, 40e000 <ferror@plt+0xb2d0>
  40e874:	add	x0, x0, #0x618
  40e878:	str	x0, [x19, #144]
  40e87c:	adrp	x0, 40e000 <ferror@plt+0xb2d0>
  40e880:	add	x0, x0, #0x448
  40e884:	str	x0, [x19, #152]
  40e888:	str	xzr, [x19, #168]
  40e88c:	str	xzr, [x19, #176]
  40e890:	str	xzr, [x19, #184]
  40e894:	str	wzr, [x19, #200]
  40e898:	str	xzr, [x19, #208]
  40e89c:	str	xzr, [x19, #192]
  40e8a0:	str	wzr, [x19, #216]
  40e8a4:	strb	wzr, [x19, #220]
  40e8a8:	strb	wzr, [x19, #221]
  40e8ac:	strb	wzr, [x19, #222]
  40e8b0:	strb	wzr, [x19, #223]
  40e8b4:	str	wzr, [x19, #224]
  40e8b8:	strb	wzr, [x19, #228]
  40e8bc:	strb	wzr, [x19, #229]
  40e8c0:	str	xzr, [x19, #232]
  40e8c4:	str	wzr, [x19, #240]
  40e8c8:	str	wzr, [x19, #244]
  40e8cc:	str	xzr, [x19, #248]
  40e8d0:	str	xzr, [x19, #256]
  40e8d4:	adrp	x0, 40e000 <ferror@plt+0xb2d0>
  40e8d8:	add	x0, x0, #0x158
  40e8dc:	str	x0, [x19, #264]
  40e8e0:	ldp	x19, x20, [sp, #16]
  40e8e4:	ldr	x21, [sp, #32]
  40e8e8:	ldp	x29, x30, [sp], #48
  40e8ec:	ret
  40e8f0:	stp	x29, x30, [sp, #-32]!
  40e8f4:	mov	x29, sp
  40e8f8:	str	x19, [sp, #16]
  40e8fc:	cmp	w1, #0x0
  40e900:	ldr	x19, [x0]
  40e904:	mov	w0, #0x2                   	// #2
  40e908:	csel	w0, w1, w0, ge  // ge = tcont
  40e90c:	bl	411510 <ferror@plt+0xe7e0>
  40e910:	strb	w0, [x19, #67]
  40e914:	ldr	x19, [sp, #16]
  40e918:	ldp	x29, x30, [sp], #32
  40e91c:	ret
  40e920:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e924:	add	x1, x1, #0x748
  40e928:	add	x1, x1, #0x20
  40e92c:	ldr	x0, [x1, w0, sxtw #3]
  40e930:	ret
  40e934:	stp	x29, x30, [sp, #-96]!
  40e938:	mov	x29, sp
  40e93c:	stp	x19, x20, [sp, #16]
  40e940:	mov	x19, x0
  40e944:	mov	w20, w1
  40e948:	str	xzr, [sp, #88]
  40e94c:	ldr	x0, [x0]
  40e950:	ldrb	w1, [x0, #65]
  40e954:	cbnz	w1, 40e998 <ferror@plt+0xbc68>
  40e958:	cmp	w20, #0x1
  40e95c:	b.ls	40e98c <ferror@plt+0xbc5c>  // b.plast
  40e960:	add	x3, sp, #0x58
  40e964:	mov	w2, #0x2                   	// #2
  40e968:	mov	w1, w20
  40e96c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e970:	ldr	x0, [x0, #2416]
  40e974:	bl	4332f0 <ferror@plt+0x305c0>
  40e978:	ldr	x0, [sp, #88]
  40e97c:	cbz	x0, 40e98c <ferror@plt+0xbc5c>
  40e980:	ldr	x1, [x19, #208]
  40e984:	cmp	x0, x1
  40e988:	b.ne	40e9a8 <ferror@plt+0xbc78>  // b.any
  40e98c:	ldp	x19, x20, [sp, #16]
  40e990:	ldp	x29, x30, [sp], #96
  40e994:	ret
  40e998:	bl	4168c4 <ferror@plt+0x13b94>
  40e99c:	ldr	x0, [x19]
  40e9a0:	strb	wzr, [x0, #65]
  40e9a4:	b	40e958 <ferror@plt+0xbc28>
  40e9a8:	str	x0, [x19, #208]
  40e9ac:	ldr	w0, [x0, #20]
  40e9b0:	cbz	w0, 40e98c <ferror@plt+0xbc5c>
  40e9b4:	stp	x21, x22, [sp, #32]
  40e9b8:	stp	x23, x24, [sp, #48]
  40e9bc:	str	x25, [sp, #64]
  40e9c0:	mov	w24, #0x1                   	// #1
  40e9c4:	mov	w22, #0x0                   	// #0
  40e9c8:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e9cc:	add	x23, x23, #0x270
  40e9d0:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40e9d4:	add	x21, x21, #0x7e8
  40e9d8:	b	40ea64 <ferror@plt+0xbd34>
  40e9dc:	mov	w4, w22
  40e9e0:	mov	x2, x23
  40e9e4:	mov	x1, #0x20                  	// #32
  40e9e8:	add	x0, x21, #0x8
  40e9ec:	bl	402780 <snprintf@plt>
  40e9f0:	eor	w0, w24, #0x1
  40e9f4:	ldr	x25, [x19]
  40e9f8:	adrp	x20, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40e9fc:	add	x1, x20, #0x2b8
  40ea00:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x19c60>
  40ea04:	add	x20, x20, #0xd70
  40ea08:	cmp	w24, #0x0
  40ea0c:	csel	x20, x20, x1, ne  // ne = any
  40ea10:	mov	w0, w0
  40ea14:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40ea18:	add	x1, x1, #0x748
  40ea1c:	add	x0, x1, x0, lsl #3
  40ea20:	ldr	x0, [x0, #152]
  40ea24:	bl	402cd0 <gettext@plt>
  40ea28:	add	x6, x21, #0x8
  40ea2c:	ldr	x1, [sp, #88]
  40ea30:	ldr	x5, [x1, #8]
  40ea34:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40ea38:	add	x4, x4, #0x278
  40ea3c:	mov	x3, x0
  40ea40:	mov	x2, x20
  40ea44:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40ea48:	add	x1, x1, #0x2c0
  40ea4c:	mov	x0, x25
  40ea50:	bl	418cb8 <ferror@plt+0x15f88>
  40ea54:	mov	w24, w22
  40ea58:	ldr	x0, [sp, #88]
  40ea5c:	ldr	w0, [x0, #20]
  40ea60:	cbz	w0, 40ead0 <ferror@plt+0xbda0>
  40ea64:	ldr	x1, [sp, #88]
  40ea68:	ldr	w20, [x1, #20]
  40ea6c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40ea70:	ldr	x0, [x0, #2416]
  40ea74:	bl	4323ec <ferror@plt+0x2f6bc>
  40ea78:	str	x0, [sp, #88]
  40ea7c:	ldr	w4, [x0]
  40ea80:	sub	w4, w20, w4
  40ea84:	ldrb	w2, [x0, #6]
  40ea88:	lsr	w3, w4, w2
  40ea8c:	ldr	w1, [x0, #16]
  40ea90:	add	w3, w3, w1
  40ea94:	cbz	w24, 40eaf8 <ferror@plt+0xbdc8>
  40ea98:	ldrb	w1, [x19, #121]
  40ea9c:	cbz	w1, 40eaf8 <ferror@plt+0xbdc8>
  40eaa0:	mov	w1, #0x1                   	// #1
  40eaa4:	lsl	w1, w1, w2
  40eaa8:	sub	w1, w1, #0x1
  40eaac:	and	w4, w1, w4
  40eab0:	ldrb	w0, [x0, #7]
  40eab4:	lsr	w4, w4, w0
  40eab8:	cbz	w3, 40eafc <ferror@plt+0xbdcc>
  40eabc:	mov	x2, x23
  40eac0:	cbz	w4, 40e9e4 <ferror@plt+0xbcb4>
  40eac4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40eac8:	add	x2, x2, #0x268
  40eacc:	b	40e9e4 <ferror@plt+0xbcb4>
  40ead0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40ead4:	add	x1, x1, #0x2d0
  40ead8:	ldr	x0, [x19]
  40eadc:	bl	418cb8 <ferror@plt+0x15f88>
  40eae0:	ldr	x0, [x19]
  40eae4:	bl	4168c4 <ferror@plt+0x13b94>
  40eae8:	ldp	x21, x22, [sp, #32]
  40eaec:	ldp	x23, x24, [sp, #48]
  40eaf0:	ldr	x25, [sp, #64]
  40eaf4:	b	40e98c <ferror@plt+0xbc5c>
  40eaf8:	cbnz	w3, 40e9dc <ferror@plt+0xbcac>
  40eafc:	strb	wzr, [x21, #8]
  40eb00:	b	40e9f0 <ferror@plt+0xbcc0>
  40eb04:	stp	x29, x30, [sp, #-64]!
  40eb08:	mov	x29, sp
  40eb0c:	stp	x23, x24, [sp, #48]
  40eb10:	mov	w23, #0x0                   	// #0
  40eb14:	tbnz	w1, #31, 40ec58 <ferror@plt+0xbf28>
  40eb18:	stp	x19, x20, [sp, #16]
  40eb1c:	stp	x21, x22, [sp, #32]
  40eb20:	mov	x20, x0
  40eb24:	mov	w19, w1
  40eb28:	mov	w21, w2
  40eb2c:	mov	w22, w3
  40eb30:	ldr	w0, [x0, #68]
  40eb34:	mov	w23, #0x0                   	// #0
  40eb38:	cmp	w0, w1
  40eb3c:	b.le	40ec50 <ferror@plt+0xbf20>
  40eb40:	cmp	w2, #0xd
  40eb44:	b.gt	40ec68 <ferror@plt+0xbf38>
  40eb48:	sxtw	x24, w1
  40eb4c:	ldr	x0, [x20, #72]
  40eb50:	ldr	w23, [x0, x24, lsl #2]
  40eb54:	cbz	w3, 40ec40 <ferror@plt+0xbf10>
  40eb58:	cbnz	w23, 40eb90 <ferror@plt+0xbe60>
  40eb5c:	ldr	x2, [x20, #168]
  40eb60:	ldr	x1, [x20, #176]
  40eb64:	mov	w0, w19
  40eb68:	blr	x2
  40eb6c:	mov	w23, #0x1                   	// #1
  40eb70:	cbz	w0, 40eb88 <ferror@plt+0xbe58>
  40eb74:	ldrb	w0, [x20, #64]
  40eb78:	cmp	w0, #0x0
  40eb7c:	mov	w23, #0x4                   	// #4
  40eb80:	mov	w0, #0x6                   	// #6
  40eb84:	csel	w23, w23, w0, ne  // ne = any
  40eb88:	ldr	x0, [x20, #72]
  40eb8c:	str	w23, [x0, x24, lsl #2]
  40eb90:	ldr	w1, [x20, #88]
  40eb94:	subs	w0, w1, #0x1
  40eb98:	b.mi	40ebe8 <ferror@plt+0xbeb8>  // b.first
  40eb9c:	ldr	x3, [x20, #80]
  40eba0:	sbfiz	x2, x0, #1, #32
  40eba4:	add	x0, x2, w0, sxtw
  40eba8:	lsl	x0, x0, #2
  40ebac:	add	x4, x3, x0
  40ebb0:	add	x2, x0, #0xc
  40ebb4:	sub	w0, w1, #0x1
  40ebb8:	add	x0, x0, x0, lsl #1
  40ebbc:	sub	x2, x2, x0, lsl #2
  40ebc0:	sub	x3, x3, #0x18
  40ebc4:	add	x2, x2, x3
  40ebc8:	ldr	w0, [x4, #4]
  40ebcc:	cmp	w0, w19
  40ebd0:	b.eq	40ebe4 <ferror@plt+0xbeb4>  // b.none
  40ebd4:	sub	x4, x4, #0xc
  40ebd8:	cmp	x4, x2
  40ebdc:	b.ne	40ebc8 <ferror@plt+0xbe98>  // b.any
  40ebe0:	b	40ebe8 <ferror@plt+0xbeb8>
  40ebe4:	ldr	w23, [x4, #8]
  40ebe8:	add	w1, w1, #0x1
  40ebec:	sbfiz	x24, x1, #1, #32
  40ebf0:	add	x1, x24, w1, sxtw
  40ebf4:	lsl	x24, x1, #2
  40ebf8:	mov	x1, x24
  40ebfc:	ldr	x0, [x20, #80]
  40ec00:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  40ec04:	str	x0, [x20, #80]
  40ec08:	sub	x1, x24, #0xc
  40ec0c:	str	w22, [x0, x1]
  40ec10:	ldr	x0, [x20, #80]
  40ec14:	add	x0, x0, x1
  40ec18:	str	w19, [x0, #4]
  40ec1c:	ldr	x0, [x20, #80]
  40ec20:	add	x1, x0, x1
  40ec24:	str	w21, [x1, #8]
  40ec28:	ldr	w0, [x20, #88]
  40ec2c:	add	w0, w0, #0x1
  40ec30:	str	w0, [x20, #88]
  40ec34:	ldp	x19, x20, [sp, #16]
  40ec38:	ldp	x21, x22, [sp, #32]
  40ec3c:	b	40ec58 <ferror@plt+0xbf28>
  40ec40:	str	w2, [x0, x24, lsl #2]
  40ec44:	ldp	x19, x20, [sp, #16]
  40ec48:	ldp	x21, x22, [sp, #32]
  40ec4c:	b	40ec58 <ferror@plt+0xbf28>
  40ec50:	ldp	x19, x20, [sp, #16]
  40ec54:	ldp	x21, x22, [sp, #32]
  40ec58:	mov	w0, w23
  40ec5c:	ldp	x23, x24, [sp, #48]
  40ec60:	ldp	x29, x30, [sp], #64
  40ec64:	ret
  40ec68:	ldp	x19, x20, [sp, #16]
  40ec6c:	ldp	x21, x22, [sp, #32]
  40ec70:	b	40ec58 <ferror@plt+0xbf28>
  40ec74:	stp	x29, x30, [sp, #-32]!
  40ec78:	mov	x29, sp
  40ec7c:	str	x19, [sp, #16]
  40ec80:	mov	x19, x0
  40ec84:	ldr	w1, [x0, #104]
  40ec88:	add	w1, w1, #0x1
  40ec8c:	sbfiz	x1, x1, #2, #32
  40ec90:	ldr	x0, [x0, #96]
  40ec94:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  40ec98:	str	x0, [x19, #96]
  40ec9c:	ldr	w1, [x19, #104]
  40eca0:	add	w2, w1, #0x1
  40eca4:	str	w2, [x19, #104]
  40eca8:	ldr	w2, [x19, #88]
  40ecac:	str	w2, [x0, w1, sxtw #2]
  40ecb0:	ldr	x19, [sp, #16]
  40ecb4:	ldp	x29, x30, [sp], #32
  40ecb8:	ret
  40ecbc:	stp	x29, x30, [sp, #-48]!
  40ecc0:	mov	x29, sp
  40ecc4:	stp	x19, x20, [sp, #16]
  40ecc8:	stp	x21, x22, [sp, #32]
  40eccc:	mov	x20, x0
  40ecd0:	mov	w22, w1
  40ecd4:	ldr	w21, [x0, #104]
  40ecd8:	cbz	w21, 40ecec <ferror@plt+0xbfbc>
  40ecdc:	ldr	x0, [x0, #96]
  40ece0:	sub	w21, w21, #0x1
  40ece4:	str	w21, [x20, #104]
  40ece8:	ldr	w21, [x0, w21, sxtw #2]
  40ecec:	ldr	w2, [x20, #88]
  40ecf0:	add	w2, w2, #0x1
  40ecf4:	sbfiz	x19, x2, #1, #32
  40ecf8:	add	x2, x19, w2, sxtw
  40ecfc:	lsl	x19, x2, #2
  40ed00:	mov	x1, x19
  40ed04:	ldr	x0, [x20, #80]
  40ed08:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  40ed0c:	str	x0, [x20, #80]
  40ed10:	sub	x2, x19, #0xc
  40ed14:	str	w22, [x0, x2]
  40ed18:	ldr	x0, [x20, #80]
  40ed1c:	add	x0, x0, x2
  40ed20:	str	w21, [x0, #4]
  40ed24:	ldr	x0, [x20, #80]
  40ed28:	add	x2, x0, x2
  40ed2c:	mov	w0, #0xf                   	// #15
  40ed30:	str	w0, [x2, #8]
  40ed34:	ldr	w0, [x20, #88]
  40ed38:	add	w0, w0, #0x1
  40ed3c:	str	w0, [x20, #88]
  40ed40:	ldp	x19, x20, [sp, #16]
  40ed44:	ldp	x21, x22, [sp, #32]
  40ed48:	ldp	x29, x30, [sp], #48
  40ed4c:	ret
  40ed50:	mov	x4, x0
  40ed54:	ldrb	w0, [x0]
  40ed58:	cmp	w0, #0x2e
  40ed5c:	b.ne	40ee0c <ferror@plt+0xc0dc>  // b.any
  40ed60:	mov	x0, x4
  40ed64:	ldrb	w1, [x0, #1]
  40ed68:	cmp	w1, #0x2e
  40ed6c:	b.ne	40ed88 <ferror@plt+0xc058>  // b.any
  40ed70:	ldrb	w1, [x0, #2]
  40ed74:	cmp	w1, #0x2f
  40ed78:	b.ne	40ed88 <ferror@plt+0xc058>  // b.any
  40ed7c:	ldrb	w1, [x0, #3]!
  40ed80:	cmp	w1, #0x2e
  40ed84:	b.eq	40ed64 <ferror@plt+0xc034>  // b.none
  40ed88:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40ed8c:	add	x1, x1, #0x748
  40ed90:	add	x1, x1, #0xa8
  40ed94:	ldrb	w2, [x1, #2]
  40ed98:	cmp	w2, #0x2f
  40ed9c:	b.ne	40edb8 <ferror@plt+0xc088>  // b.any
  40eda0:	ldrb	w2, [x1, #3]!
  40eda4:	cmp	w2, #0x2e
  40eda8:	b.ne	40edb8 <ferror@plt+0xc088>  // b.any
  40edac:	ldrb	w2, [x1, #1]
  40edb0:	cmp	w2, #0x2e
  40edb4:	b.eq	40ed94 <ferror@plt+0xc064>  // b.none
  40edb8:	ldrb	w2, [x0]
  40edbc:	ldrb	w3, [x1]
  40edc0:	cmp	w3, #0x0
  40edc4:	ccmp	w2, w3, #0x0, ne  // ne = any
  40edc8:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  40edcc:	b.eq	40ede8 <ferror@plt+0xc0b8>  // b.none
  40edd0:	ldrb	w3, [x0, #1]!
  40edd4:	ldrb	w2, [x1, #1]!
  40edd8:	cmp	w3, #0x0
  40eddc:	ccmp	w3, w2, #0x0, ne  // ne = any
  40ede0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  40ede4:	b.ne	40edd0 <ferror@plt+0xc0a0>  // b.any
  40ede8:	cmp	x4, x0
  40edec:	b.cs	40ee08 <ferror@plt+0xc0d8>  // b.hs, b.nlast
  40edf0:	ldurb	w1, [x0, #-1]
  40edf4:	cmp	w1, #0x2f
  40edf8:	b.eq	40ee08 <ferror@plt+0xc0d8>  // b.none
  40edfc:	sub	x0, x0, #0x1
  40ee00:	cmp	x4, x0
  40ee04:	b.ne	40edf0 <ferror@plt+0xc0c0>  // b.any
  40ee08:	ret
  40ee0c:	mov	x0, x4
  40ee10:	b	40ed88 <ferror@plt+0xc058>
  40ee14:	stp	x29, x30, [sp, #-304]!
  40ee18:	mov	x29, sp
  40ee1c:	str	x19, [sp, #16]
  40ee20:	mov	x19, x0
  40ee24:	str	x1, [sp, #248]
  40ee28:	str	x2, [sp, #256]
  40ee2c:	str	x3, [sp, #264]
  40ee30:	str	x4, [sp, #272]
  40ee34:	str	x5, [sp, #280]
  40ee38:	str	x6, [sp, #288]
  40ee3c:	str	x7, [sp, #296]
  40ee40:	str	q0, [sp, #112]
  40ee44:	str	q1, [sp, #128]
  40ee48:	str	q2, [sp, #144]
  40ee4c:	str	q3, [sp, #160]
  40ee50:	str	q4, [sp, #176]
  40ee54:	str	q5, [sp, #192]
  40ee58:	str	q6, [sp, #208]
  40ee5c:	str	q7, [sp, #224]
  40ee60:	add	x0, sp, #0x130
  40ee64:	str	x0, [sp, #40]
  40ee68:	str	x0, [sp, #48]
  40ee6c:	add	x0, sp, #0xf0
  40ee70:	str	x0, [sp, #56]
  40ee74:	mov	w0, #0xffffffc8            	// #-56
  40ee78:	str	w0, [sp, #64]
  40ee7c:	mov	w0, #0xffffff80            	// #-128
  40ee80:	str	w0, [sp, #68]
  40ee84:	bl	402c40 <__errno_location@plt>
  40ee88:	ldr	w0, [x0]
  40ee8c:	str	w0, [sp, #88]
  40ee90:	add	x0, sp, #0x28
  40ee94:	str	x0, [sp, #80]
  40ee98:	mov	x0, x19
  40ee9c:	bl	402cd0 <gettext@plt>
  40eea0:	str	x0, [sp, #72]
  40eea4:	str	xzr, [sp, #96]
  40eea8:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40eeac:	ldr	x0, [x19, #944]
  40eeb0:	add	x1, sp, #0x48
  40eeb4:	ldr	x0, [x0]
  40eeb8:	bl	418c6c <ferror@plt+0x15f3c>
  40eebc:	ldr	x0, [x19, #944]
  40eec0:	ldr	x0, [x0]
  40eec4:	bl	417080 <ferror@plt+0x14350>
  40eec8:	ldr	x19, [sp, #16]
  40eecc:	ldp	x29, x30, [sp], #304
  40eed0:	ret
  40eed4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40eed8:	ldr	x0, [x0, #944]
  40eedc:	ldr	x0, [x0, #24]
  40eee0:	cmp	x0, #0x0
  40eee4:	cset	w0, ne  // ne = any
  40eee8:	ret
  40eeec:	stp	x29, x30, [sp, #-272]!
  40eef0:	mov	x29, sp
  40eef4:	str	x19, [sp, #16]
  40eef8:	mov	x19, x0
  40eefc:	mov	x0, x1
  40ef00:	str	x2, [sp, #224]
  40ef04:	str	x3, [sp, #232]
  40ef08:	str	x4, [sp, #240]
  40ef0c:	str	x5, [sp, #248]
  40ef10:	str	x6, [sp, #256]
  40ef14:	str	x7, [sp, #264]
  40ef18:	str	q0, [sp, #96]
  40ef1c:	str	q1, [sp, #112]
  40ef20:	str	q2, [sp, #128]
  40ef24:	str	q3, [sp, #144]
  40ef28:	str	q4, [sp, #160]
  40ef2c:	str	q5, [sp, #176]
  40ef30:	str	q6, [sp, #192]
  40ef34:	str	q7, [sp, #208]
  40ef38:	add	x1, sp, #0x110
  40ef3c:	str	x1, [sp, #64]
  40ef40:	str	x1, [sp, #72]
  40ef44:	add	x1, sp, #0xe0
  40ef48:	str	x1, [sp, #80]
  40ef4c:	mov	w1, #0xffffffd0            	// #-48
  40ef50:	str	w1, [sp, #88]
  40ef54:	mov	w1, #0xffffff80            	// #-128
  40ef58:	str	w1, [sp, #92]
  40ef5c:	bl	402cd0 <gettext@plt>
  40ef60:	ldp	x2, x3, [sp, #64]
  40ef64:	stp	x2, x3, [sp, #32]
  40ef68:	ldp	x2, x3, [sp, #80]
  40ef6c:	stp	x2, x3, [sp, #48]
  40ef70:	add	x2, sp, #0x20
  40ef74:	mov	x1, x0
  40ef78:	mov	x0, x19
  40ef7c:	bl	402c20 <vfprintf@plt>
  40ef80:	ldr	x19, [sp, #16]
  40ef84:	ldp	x29, x30, [sp], #272
  40ef88:	ret
  40ef8c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40ef90:	ldr	x1, [x0, #944]
  40ef94:	ldr	w0, [x1, #240]
  40ef98:	add	w0, w0, #0x1
  40ef9c:	str	w0, [x1, #240]
  40efa0:	ret
  40efa4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40efa8:	ldr	x0, [x0, #944]
  40efac:	ldr	w1, [x0, #240]
  40efb0:	sub	w1, w1, #0x1
  40efb4:	str	w1, [x0, #240]
  40efb8:	cbnz	w1, 40f000 <ferror@plt+0xc2d0>
  40efbc:	ldr	w1, [x0, #244]
  40efc0:	cmp	w1, #0x0
  40efc4:	b.le	40eff0 <ferror@plt+0xc2c0>
  40efc8:	ldr	x1, [x0, #256]
  40efcc:	cbz	x1, 40eff0 <ferror@plt+0xc2c0>
  40efd0:	stp	x29, x30, [sp, #-16]!
  40efd4:	mov	x29, sp
  40efd8:	blr	x1
  40efdc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40efe0:	ldr	x0, [x0, #944]
  40efe4:	str	wzr, [x0, #244]
  40efe8:	ldp	x29, x30, [sp], #16
  40efec:	ret
  40eff0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40eff4:	ldr	x0, [x0, #944]
  40eff8:	str	wzr, [x0, #244]
  40effc:	ret
  40f000:	ret
  40f004:	stp	x29, x30, [sp, #-32]!
  40f008:	mov	x29, sp
  40f00c:	stp	x19, x20, [sp, #16]
  40f010:	mov	x19, x0
  40f014:	ldr	x1, [x0, #264]
  40f018:	cbz	x1, 40f020 <ferror@plt+0xc2f0>
  40f01c:	blr	x1
  40f020:	bl	41bc88 <ferror@plt+0x18f58>
  40f024:	ldr	x0, [x19, #72]
  40f028:	bl	402a90 <free@plt>
  40f02c:	str	xzr, [x19, #72]
  40f030:	ldr	x0, [x19]
  40f034:	ldr	x1, [x0]
  40f038:	ldr	x1, [x1]
  40f03c:	blr	x1
  40f040:	ldr	x0, [x19]
  40f044:	bl	402a90 <free@plt>
  40f048:	str	xzr, [x19]
  40f04c:	ldr	x20, [x19, #232]
  40f050:	cbz	x20, 40f070 <ferror@plt+0xc340>
  40f054:	ldr	x1, [x20, #8]
  40f058:	add	x0, x20, #0x8
  40f05c:	bl	411164 <ferror@plt+0xe434>
  40f060:	mov	x1, #0x28                  	// #40
  40f064:	mov	x0, x20
  40f068:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  40f06c:	str	xzr, [x19, #232]
  40f070:	ldp	x19, x20, [sp, #16]
  40f074:	ldp	x29, x30, [sp], #32
  40f078:	ret
  40f07c:	ldr	w2, [x0, #132]
  40f080:	cbz	w2, 40f0ec <ferror@plt+0xc3bc>
  40f084:	stp	x29, x30, [sp, #-32]!
  40f088:	mov	x29, sp
  40f08c:	stp	x19, x20, [sp, #16]
  40f090:	mov	x19, x0
  40f094:	and	w20, w1, #0xff
  40f098:	ldr	w0, [x0, #24]
  40f09c:	ldr	w1, [x19, #28]
  40f0a0:	add	w0, w0, w1
  40f0a4:	ldr	w1, [x19, #56]
  40f0a8:	add	w0, w0, w1
  40f0ac:	cmp	w2, w0
  40f0b0:	b.le	40f0c0 <ferror@plt+0xc390>
  40f0b4:	ldp	x19, x20, [sp, #16]
  40f0b8:	ldp	x29, x30, [sp], #32
  40f0bc:	ret
  40f0c0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f0c4:	add	x1, x1, #0x2d8
  40f0c8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f0cc:	ldr	x0, [x0, #1424]
  40f0d0:	bl	40eeec <ferror@plt+0xc1bc>
  40f0d4:	cbnz	w20, 40f0e0 <ferror@plt+0xc3b0>
  40f0d8:	mov	w0, #0x1                   	// #1
  40f0dc:	bl	4026b0 <exit@plt>
  40f0e0:	mov	x0, x19
  40f0e4:	bl	40f004 <ferror@plt+0xc2d4>
  40f0e8:	b	40f0d8 <ferror@plt+0xc3a8>
  40f0ec:	ret
  40f0f0:	stp	x29, x30, [sp, #-48]!
  40f0f4:	mov	x29, sp
  40f0f8:	str	x19, [sp, #16]
  40f0fc:	mov	x19, x0
  40f100:	cmp	w1, #0x5
  40f104:	b.hi	40f18c <ferror@plt+0xc45c>  // b.pmore
  40f108:	cmp	w1, #0x3
  40f10c:	b.hi	40f1f8 <ferror@plt+0xc4c8>  // b.pmore
  40f110:	cmp	w1, #0x2
  40f114:	b.ne	40f144 <ferror@plt+0xc414>  // b.any
  40f118:	ldrb	w0, [x0, #120]
  40f11c:	cbnz	w0, 40f24c <ferror@plt+0xc51c>
  40f120:	mov	x0, x19
  40f124:	bl	40f004 <ferror@plt+0xc2d4>
  40f128:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f12c:	add	x1, x1, #0x3e8
  40f130:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f134:	ldr	x0, [x0, #1424]
  40f138:	bl	40eeec <ferror@plt+0xc1bc>
  40f13c:	mov	w0, #0x1                   	// #1
  40f140:	bl	4026b0 <exit@plt>
  40f144:	cmp	w1, #0x3
  40f148:	b.ne	40f250 <ferror@plt+0xc520>  // b.any
  40f14c:	mov	x3, #0x0                   	// #0
  40f150:	adrp	x2, 40e000 <ferror@plt+0xb2d0>
  40f154:	add	x2, x2, #0x3e0
  40f158:	mov	w1, #0x0                   	// #0
  40f15c:	mov	x0, #0x0                   	// #0
  40f160:	bl	43c720 <ferror@plt+0x399f0>
  40f164:	str	wzr, [sp, #44]
  40f168:	cbz	x0, 40f1ac <ferror@plt+0xc47c>
  40f16c:	add	x4, sp, #0x2c
  40f170:	adrp	x3, 40e000 <ferror@plt+0xb2d0>
  40f174:	add	x3, x3, #0x3e0
  40f178:	adrp	x2, 40e000 <ferror@plt+0xb2d0>
  40f17c:	add	x2, x2, #0x1d8
  40f180:	mov	w1, #0x2                   	// #2
  40f184:	bl	43c82c <ferror@plt+0x39afc>
  40f188:	b	40f1ac <ferror@plt+0xc47c>
  40f18c:	cmp	w1, #0x9
  40f190:	b.hi	40f1a0 <ferror@plt+0xc470>  // b.pmore
  40f194:	ldr	x19, [sp, #16]
  40f198:	ldp	x29, x30, [sp], #48
  40f19c:	ret
  40f1a0:	cmp	w1, #0xd
  40f1a4:	b.ne	40f250 <ferror@plt+0xc520>  // b.any
  40f1a8:	str	wzr, [sp, #44]
  40f1ac:	ldrb	w0, [x19, #120]
  40f1b0:	cbnz	w0, 40f230 <ferror@plt+0xc500>
  40f1b4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f1b8:	add	x1, x1, #0x338
  40f1bc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f1c0:	ldr	x0, [x0, #1424]
  40f1c4:	bl	40eeec <ferror@plt+0xc1bc>
  40f1c8:	ldr	w0, [sp, #44]
  40f1cc:	cmp	w0, #0x0
  40f1d0:	b.gt	40f234 <ferror@plt+0xc504>
  40f1d4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  40f1d8:	add	x2, x2, #0x958
  40f1dc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f1e0:	add	x1, x1, #0x3c8
  40f1e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f1e8:	ldr	x0, [x0, #1424]
  40f1ec:	bl	40eeec <ferror@plt+0xc1bc>
  40f1f0:	mov	w0, #0x4                   	// #4
  40f1f4:	bl	4026b0 <exit@plt>
  40f1f8:	ldrb	w0, [x0, #120]
  40f1fc:	cbnz	w0, 40f22c <ferror@plt+0xc4fc>
  40f200:	ldrb	w0, [x19, #128]
  40f204:	cbz	w0, 40f194 <ferror@plt+0xc464>
  40f208:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f20c:	add	x1, x1, #0x308
  40f210:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f214:	ldr	x0, [x0, #1424]
  40f218:	bl	40eeec <ferror@plt+0xc1bc>
  40f21c:	mov	x0, x19
  40f220:	bl	40f004 <ferror@plt+0xc2d4>
  40f224:	mov	w0, #0x1                   	// #1
  40f228:	bl	4026b0 <exit@plt>
  40f22c:	bl	402990 <abort@plt>
  40f230:	bl	402990 <abort@plt>
  40f234:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f238:	add	x1, x1, #0x388
  40f23c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f240:	ldr	x0, [x0, #1424]
  40f244:	bl	40eeec <ferror@plt+0xc1bc>
  40f248:	b	40f1d4 <ferror@plt+0xc4a4>
  40f24c:	bl	402990 <abort@plt>
  40f250:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f254:	add	x2, x2, #0x408
  40f258:	mov	w1, #0x231                 	// #561
  40f25c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f260:	add	x0, x0, #0x428
  40f264:	bl	4102b4 <ferror@plt+0xd584>
  40f268:	stp	x29, x30, [sp, #-144]!
  40f26c:	mov	x29, sp
  40f270:	stp	x19, x20, [sp, #16]
  40f274:	stp	x21, x22, [sp, #32]
  40f278:	mov	x19, x0
  40f27c:	mov	x20, x1
  40f280:	mov	w1, #0x0                   	// #0
  40f284:	mov	x0, x20
  40f288:	bl	416324 <ferror@plt+0x135f4>
  40f28c:	mov	w1, w0
  40f290:	ldr	w21, [x20, #56]
  40f294:	sub	w0, w21, #0x6
  40f298:	tst	w0, #0xfffffffb
  40f29c:	b.ne	40f330 <ferror@plt+0xc600>  // b.any
  40f2a0:	ldrb	w2, [x19, #129]
  40f2a4:	mov	w0, #0x0                   	// #0
  40f2a8:	cbnz	w2, 40f4c4 <ferror@plt+0xc794>
  40f2ac:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f2b0:	ldr	x0, [x0, #2416]
  40f2b4:	bl	433248 <ferror@plt+0x30518>
  40f2b8:	cbz	w0, 40f2c4 <ferror@plt+0xc594>
  40f2bc:	ldrb	w0, [x19, #130]
  40f2c0:	cbz	w0, 40f4c4 <ferror@plt+0xc794>
  40f2c4:	ldr	w0, [x20, #56]
  40f2c8:	cmp	w0, #0xa
  40f2cc:	b.ne	40f330 <ferror@plt+0xc600>  // b.any
  40f2d0:	ldrb	w0, [x19, #122]
  40f2d4:	cmp	w0, #0x0
  40f2d8:	mov	w21, #0x4                   	// #4
  40f2dc:	mov	w0, #0x6                   	// #6
  40f2e0:	csel	w21, w21, w0, ne  // ne = any
  40f2e4:	str	w21, [x20, #56]
  40f2e8:	ldr	w1, [x19, #216]
  40f2ec:	cmp	w1, #0x0
  40f2f0:	b.le	40f4fc <ferror@plt+0xc7cc>
  40f2f4:	stp	x23, x24, [sp, #48]
  40f2f8:	stp	x25, x26, [sp, #64]
  40f2fc:	cmp	w1, #0x2
  40f300:	b.gt	40f30c <ferror@plt+0xc5dc>
  40f304:	ldr	x0, [x19]
  40f308:	bl	417080 <ferror@plt+0x14350>
  40f30c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f310:	add	x1, x1, #0x440
  40f314:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f318:	ldr	x0, [x0, #1424]
  40f31c:	bl	40eeec <ferror@plt+0xc1bc>
  40f320:	mov	w1, #0x3                   	// #3
  40f324:	mov	x0, x19
  40f328:	bl	40f0f0 <ferror@plt+0xc3c0>
  40f32c:	bl	402990 <abort@plt>
  40f330:	ldr	w0, [x20, #56]
  40f334:	cmp	w0, #0x8
  40f338:	b.ne	40f4d4 <ferror@plt+0xc7a4>  // b.any
  40f33c:	ldrb	w0, [x19, #220]
  40f340:	cbnz	w0, 40f80c <ferror@plt+0xcadc>
  40f344:	ldr	w1, [x19, #216]
  40f348:	cmp	w1, #0x0
  40f34c:	b.gt	40f2f4 <ferror@plt+0xc5c4>
  40f350:	ldr	w0, [x20, #60]
  40f354:	cbz	w0, 40f3a4 <ferror@plt+0xc674>
  40f358:	ldr	w1, [x19, #124]
  40f35c:	cmp	w0, w1
  40f360:	b.eq	40f3a4 <ferror@plt+0xc674>  // b.none
  40f364:	ldr	x2, [x19, #168]
  40f368:	ldr	x1, [x19, #176]
  40f36c:	blr	x2
  40f370:	mov	w1, w0
  40f374:	mov	w0, #0x0                   	// #0
  40f378:	cbz	w1, 40f4c4 <ferror@plt+0xc794>
  40f37c:	ldr	w0, [x19, #88]
  40f380:	cmp	w0, #0x0
  40f384:	b.gt	40f530 <ferror@plt+0xc800>
  40f388:	ldrsw	x1, [x20, #60]
  40f38c:	ldr	x0, [x19, #72]
  40f390:	ldr	w0, [x0, x1, lsl #2]
  40f394:	cbnz	w0, 40f5d4 <ferror@plt+0xc8a4>
  40f398:	ldr	w0, [x20, #56]
  40f39c:	cmp	w0, #0x1
  40f3a0:	b.eq	40f814 <ferror@plt+0xcae4>  // b.none
  40f3a4:	ldr	w0, [x20, #56]
  40f3a8:	cmp	w0, #0x8
  40f3ac:	b.ne	40f520 <ferror@plt+0xc7f0>  // b.any
  40f3b0:	ldr	w0, [x19, #216]
  40f3b4:	add	w0, w0, #0x1
  40f3b8:	str	w0, [x19, #216]
  40f3bc:	ldr	w0, [x20, #56]
  40f3c0:	cmp	w0, #0xd
  40f3c4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  40f3c8:	b.ne	40f3f8 <ferror@plt+0xc6c8>  // b.any
  40f3cc:	ldr	w0, [x19, #24]
  40f3d0:	cmp	w0, #0x0
  40f3d4:	b.le	40f5dc <ferror@plt+0xc8ac>
  40f3d8:	ldrb	w0, [x19, #120]
  40f3dc:	cbz	w0, 40f5ec <ferror@plt+0xc8bc>
  40f3e0:	ldr	x3, [x19, #160]
  40f3e4:	cbz	x3, 40f3f8 <ferror@plt+0xc6c8>
  40f3e8:	ldr	x2, [x20, #8]
  40f3ec:	ldr	x1, [x20]
  40f3f0:	mov	x0, x19
  40f3f4:	blr	x3
  40f3f8:	ldr	w0, [x20, #56]
  40f3fc:	cmp	w0, #0x4
  40f400:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  40f404:	b.eq	40f62c <ferror@plt+0xc8fc>  // b.none
  40f408:	add	x0, x19, w0, sxtw #2
  40f40c:	ldr	w1, [x0, #8]
  40f410:	add	w1, w1, #0x1
  40f414:	str	w1, [x0, #8]
  40f418:	ldr	w0, [x19, #244]
  40f41c:	cbnz	w0, 40f430 <ferror@plt+0xc700>
  40f420:	ldr	x1, [x19, #248]
  40f424:	cbz	x1, 40f430 <ferror@plt+0xc700>
  40f428:	mov	x0, x19
  40f42c:	blr	x1
  40f430:	ldr	w0, [x19, #244]
  40f434:	add	w0, w0, #0x1
  40f438:	str	w0, [x19, #244]
  40f43c:	add	x0, x20, #0x30
  40f440:	str	x0, [x20, #24]
  40f444:	str	xzr, [x20, #48]
  40f448:	mov	x1, x20
  40f44c:	ldr	x0, [x19]
  40f450:	bl	4171a0 <ferror@plt+0x14470>
  40f454:	ldr	x2, [x19, #136]
  40f458:	mov	x1, x20
  40f45c:	mov	x0, x19
  40f460:	blr	x2
  40f464:	ldr	x0, [x19]
  40f468:	bl	416f74 <ferror@plt+0x14244>
  40f46c:	ldrb	w0, [x19, #119]
  40f470:	cbnz	w0, 40f63c <ferror@plt+0xc90c>
  40f474:	ldr	x3, [x19, #152]
  40f478:	mov	w2, w21
  40f47c:	mov	x1, x20
  40f480:	mov	x0, x19
  40f484:	blr	x3
  40f488:	ldrb	w0, [x19, #229]
  40f48c:	cbnz	w0, 40f6e8 <ferror@plt+0xc9b8>
  40f490:	ldr	w1, [x20, #56]
  40f494:	mov	x0, x19
  40f498:	bl	40f0f0 <ferror@plt+0xc3c0>
  40f49c:	str	xzr, [x20, #48]
  40f4a0:	ldr	x0, [x19, #232]
  40f4a4:	cbz	x0, 40f4b4 <ferror@plt+0xc784>
  40f4a8:	ldr	x1, [x20, #40]
  40f4ac:	ldrb	w2, [x1, #161]
  40f4b0:	cbz	w2, 40f804 <ferror@plt+0xcad4>
  40f4b4:	ldr	w0, [x19, #216]
  40f4b8:	sub	w0, w0, #0x1
  40f4bc:	str	w0, [x19, #216]
  40f4c0:	mov	w0, #0x1                   	// #1
  40f4c4:	ldp	x19, x20, [sp, #16]
  40f4c8:	ldp	x21, x22, [sp, #32]
  40f4cc:	ldp	x29, x30, [sp], #144
  40f4d0:	ret
  40f4d4:	ldr	w1, [x19, #216]
  40f4d8:	cmp	w1, #0x0
  40f4dc:	b.le	40f4fc <ferror@plt+0xc7cc>
  40f4e0:	cmp	w0, #0xd
  40f4e4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  40f4e8:	b.ne	40f2f4 <ferror@plt+0xc5c4>  // b.any
  40f4ec:	cmp	w1, #0x1
  40f4f0:	b.ne	40f2f4 <ferror@plt+0xc5c4>  // b.any
  40f4f4:	ldr	x0, [x19]
  40f4f8:	bl	417080 <ferror@plt+0x14350>
  40f4fc:	ldrb	w0, [x19, #64]
  40f500:	cbz	w0, 40f350 <ferror@plt+0xc620>
  40f504:	ldr	w0, [x20, #56]
  40f508:	cmp	w0, #0x6
  40f50c:	b.ne	40f350 <ferror@plt+0xc620>  // b.any
  40f510:	mov	w0, #0x4                   	// #4
  40f514:	str	w0, [x20, #56]
  40f518:	ldr	w0, [x20, #60]
  40f51c:	cbnz	w0, 40f830 <ferror@plt+0xcb00>
  40f520:	mov	w1, #0x0                   	// #0
  40f524:	mov	x0, x19
  40f528:	bl	40f07c <ferror@plt+0xc34c>
  40f52c:	b	40f3b0 <ferror@plt+0xc680>
  40f530:	stp	x23, x24, [sp, #48]
  40f534:	mov	w1, #0x0                   	// #0
  40f538:	mov	x0, x20
  40f53c:	bl	416324 <ferror@plt+0x135f4>
  40f540:	mov	w23, w0
  40f544:	ldr	w22, [x19, #88]
  40f548:	subs	w22, w22, #0x1
  40f54c:	b.mi	40f81c <ferror@plt+0xcaec>  // b.first
  40f550:	stp	x25, x26, [sp, #64]
  40f554:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f558:	b	40f568 <ferror@plt+0xc838>
  40f55c:	ldr	w22, [x1, #4]
  40f560:	subs	w22, w22, #0x1
  40f564:	b.mi	40f5c8 <ferror@plt+0xc898>  // b.first
  40f568:	sbfiz	x1, x22, #1, #32
  40f56c:	add	x1, x1, w22, sxtw
  40f570:	lsl	x25, x1, #2
  40f574:	ldr	x0, [x19, #80]
  40f578:	mov	w2, w23
  40f57c:	ldr	w1, [x0, x1, lsl #2]
  40f580:	ldr	x0, [x24, #2416]
  40f584:	bl	4335d0 <ferror@plt+0x308a0>
  40f588:	tbnz	w0, #31, 40f560 <ferror@plt+0xc830>
  40f58c:	ldr	x1, [x19, #80]
  40f590:	add	x1, x1, x25
  40f594:	ldr	w2, [x1, #8]
  40f598:	cmp	w2, #0xf
  40f59c:	b.eq	40f55c <ferror@plt+0xc82c>  // b.none
  40f5a0:	ldr	w0, [x1, #4]
  40f5a4:	cbz	w0, 40f5b4 <ferror@plt+0xc884>
  40f5a8:	ldr	w1, [x20, #60]
  40f5ac:	cmp	w0, w1
  40f5b0:	b.ne	40f560 <ferror@plt+0xc830>  // b.any
  40f5b4:	cbz	w2, 40f824 <ferror@plt+0xcaf4>
  40f5b8:	str	w2, [x20, #56]
  40f5bc:	ldp	x23, x24, [sp, #48]
  40f5c0:	ldp	x25, x26, [sp, #64]
  40f5c4:	b	40f398 <ferror@plt+0xc668>
  40f5c8:	ldp	x23, x24, [sp, #48]
  40f5cc:	ldp	x25, x26, [sp, #64]
  40f5d0:	b	40f388 <ferror@plt+0xc658>
  40f5d4:	str	w0, [x20, #56]
  40f5d8:	b	40f398 <ferror@plt+0xc668>
  40f5dc:	ldr	w0, [x19, #28]
  40f5e0:	cmp	w0, #0x0
  40f5e4:	b.gt	40f3d8 <ferror@plt+0xc6a8>
  40f5e8:	b	40f3e0 <ferror@plt+0xc6b0>
  40f5ec:	stp	x23, x24, [sp, #48]
  40f5f0:	stp	x25, x26, [sp, #64]
  40f5f4:	mov	w1, #0x0                   	// #0
  40f5f8:	mov	x0, x20
  40f5fc:	bl	416324 <ferror@plt+0x135f4>
  40f600:	add	x8, sp, #0x70
  40f604:	bl	41bd48 <ferror@plt+0x19018>
  40f608:	ldr	w3, [sp, #120]
  40f60c:	ldr	x2, [sp, #112]
  40f610:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f614:	add	x1, x1, #0x480
  40f618:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f61c:	ldr	x0, [x0, #1424]
  40f620:	bl	40eeec <ferror@plt+0xc1bc>
  40f624:	mov	w0, #0x4                   	// #4
  40f628:	bl	4026b0 <exit@plt>
  40f62c:	ldr	w0, [x19, #56]
  40f630:	add	w0, w0, #0x1
  40f634:	str	w0, [x19, #56]
  40f638:	b	40f418 <ferror@plt+0xc6e8>
  40f63c:	ldr	x4, [x19, #184]
  40f640:	ldr	w3, [x20, #56]
  40f644:	mov	w2, w21
  40f648:	ldr	w1, [x20, #60]
  40f64c:	mov	x0, x19
  40f650:	blr	x4
  40f654:	mov	x22, x0
  40f658:	cbz	x0, 40f474 <ferror@plt+0xc744>
  40f65c:	stp	x23, x24, [sp, #48]
  40f660:	ldr	x23, [x19]
  40f664:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f668:	add	x1, x1, #0x4b0
  40f66c:	mov	x0, x23
  40f670:	bl	416f20 <ferror@plt+0x141f0>
  40f674:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f678:	add	x0, x0, #0x748
  40f67c:	ldrsw	x1, [x20, #56]
  40f680:	add	x0, x0, #0x20
  40f684:	ldr	x24, [x0, x1, lsl #3]
  40f688:	mov	x0, x24
  40f68c:	bl	402680 <strlen@plt>
  40f690:	mov	x2, x0
  40f694:	mov	x1, x24
  40f698:	ldrb	w0, [x23, #67]
  40f69c:	bl	411460 <ferror@plt+0xe730>
  40f6a0:	mov	x1, x0
  40f6a4:	mov	x0, x23
  40f6a8:	bl	416f20 <ferror@plt+0x141f0>
  40f6ac:	mov	x1, x22
  40f6b0:	mov	x0, x23
  40f6b4:	bl	416f20 <ferror@plt+0x141f0>
  40f6b8:	ldrb	w0, [x23, #67]
  40f6bc:	bl	4114f4 <ferror@plt+0xe7c4>
  40f6c0:	mov	x1, x0
  40f6c4:	mov	x0, x23
  40f6c8:	bl	416f20 <ferror@plt+0x141f0>
  40f6cc:	mov	w1, #0x5d                  	// #93
  40f6d0:	mov	x0, x23
  40f6d4:	bl	416928 <ferror@plt+0x13bf8>
  40f6d8:	mov	x0, x22
  40f6dc:	bl	402a90 <free@plt>
  40f6e0:	ldp	x23, x24, [sp, #48]
  40f6e4:	b	40f474 <ferror@plt+0xc744>
  40f6e8:	stp	x23, x24, [sp, #48]
  40f6ec:	ldr	x22, [x19]
  40f6f0:	ldr	x23, [x20, #40]
  40f6f4:	cbz	x22, 40f720 <ferror@plt+0xc9f0>
  40f6f8:	cbz	x23, 40f73c <ferror@plt+0xca0c>
  40f6fc:	ldr	w0, [x23, #120]
  40f700:	cbz	w0, 40f7f4 <ferror@plt+0xcac4>
  40f704:	stp	x25, x26, [sp, #64]
  40f708:	mov	w21, #0x0                   	// #0
  40f70c:	adrp	x25, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f710:	add	x25, x25, #0x4d0
  40f714:	adrp	x24, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f718:	add	x24, x24, #0x4d8
  40f71c:	b	40f7d4 <ferror@plt+0xcaa4>
  40f720:	stp	x25, x26, [sp, #64]
  40f724:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f728:	add	x2, x2, #0x4b8
  40f72c:	mov	w1, #0x322                 	// #802
  40f730:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f734:	add	x0, x0, #0x428
  40f738:	bl	4102b4 <ferror@plt+0xd584>
  40f73c:	stp	x25, x26, [sp, #64]
  40f740:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f744:	add	x2, x2, #0x4b8
  40f748:	mov	w1, #0x323                 	// #803
  40f74c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  40f750:	add	x0, x0, #0x428
  40f754:	bl	4102b4 <ferror@plt+0xd584>
  40f758:	add	x0, x23, w21, sxtw #3
  40f75c:	add	x0, x0, #0x80
  40f760:	ldr	x26, [x0]
  40f764:	add	x8, sp, #0x50
  40f768:	ldr	w0, [x26]
  40f76c:	bl	41bd48 <ferror@plt+0x19018>
  40f770:	mov	x1, x25
  40f774:	mov	x0, x22
  40f778:	bl	416f20 <ferror@plt+0x141f0>
  40f77c:	ldr	x1, [sp, #80]
  40f780:	mov	x0, x22
  40f784:	bl	410668 <ferror@plt+0xd938>
  40f788:	add	x8, sp, #0x70
  40f78c:	ldr	w0, [x26, #4]
  40f790:	bl	41bd48 <ferror@plt+0x19018>
  40f794:	ldr	w5, [sp, #124]
  40f798:	ldr	w4, [sp, #120]
  40f79c:	ldr	w3, [sp, #92]
  40f7a0:	ldr	w2, [sp, #88]
  40f7a4:	mov	x1, x24
  40f7a8:	mov	x0, x22
  40f7ac:	bl	418d58 <ferror@plt+0x16028>
  40f7b0:	ldr	x1, [x26, #8]
  40f7b4:	mov	x0, x22
  40f7b8:	bl	410668 <ferror@plt+0xd938>
  40f7bc:	mov	x0, x22
  40f7c0:	bl	4168c4 <ferror@plt+0x13b94>
  40f7c4:	add	w21, w21, #0x1
  40f7c8:	ldr	w0, [x23, #120]
  40f7cc:	cmp	w0, w21
  40f7d0:	b.ls	40f7f0 <ferror@plt+0xcac0>  // b.plast
  40f7d4:	cmp	w21, #0x1
  40f7d8:	b.le	40f758 <ferror@plt+0xca28>
  40f7dc:	sbfiz	x0, x21, #3, #32
  40f7e0:	sub	x1, x0, #0x10
  40f7e4:	ldr	x0, [x23, #152]
  40f7e8:	add	x0, x0, x1
  40f7ec:	b	40f760 <ferror@plt+0xca30>
  40f7f0:	ldp	x25, x26, [sp, #64]
  40f7f4:	ldr	x0, [x19]
  40f7f8:	bl	4166f8 <ferror@plt+0x139c8>
  40f7fc:	ldp	x23, x24, [sp, #48]
  40f800:	b	40f490 <ferror@plt+0xc760>
  40f804:	bl	415af0 <ferror@plt+0x12dc0>
  40f808:	b	40f4b4 <ferror@plt+0xc784>
  40f80c:	mov	w0, #0x0                   	// #0
  40f810:	b	40f4c4 <ferror@plt+0xc794>
  40f814:	mov	w0, #0x0                   	// #0
  40f818:	b	40f4c4 <ferror@plt+0xc794>
  40f81c:	ldp	x23, x24, [sp, #48]
  40f820:	b	40f388 <ferror@plt+0xc658>
  40f824:	ldp	x23, x24, [sp, #48]
  40f828:	ldp	x25, x26, [sp, #64]
  40f82c:	b	40f388 <ferror@plt+0xc658>
  40f830:	ldr	w1, [x19, #124]
  40f834:	cmp	w1, w0
  40f838:	b.ne	40f364 <ferror@plt+0xc634>  // b.any
  40f83c:	b	40f520 <ferror@plt+0xc7f0>
  40f840:	stp	x29, x30, [sp, #-96]!
  40f844:	mov	x29, sp
  40f848:	stp	x19, x20, [sp, #16]
  40f84c:	mov	w20, w1
  40f850:	mov	x1, x2
  40f854:	mov	x2, x3
  40f858:	cmp	w4, #0xb
  40f85c:	b.ne	40f8b4 <ferror@plt+0xcb84>  // b.any
  40f860:	adrp	x3, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f864:	ldr	x3, [x3, #944]
  40f868:	ldrb	w3, [x3, #123]
  40f86c:	cmp	w3, #0x0
  40f870:	mov	w4, #0x6                   	// #6
  40f874:	mov	w3, #0x4                   	// #4
  40f878:	csel	w4, w4, w3, ne  // ne = any
  40f87c:	mov	x3, x0
  40f880:	add	x0, sp, #0x20
  40f884:	bl	410360 <ferror@plt+0xd630>
  40f888:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f88c:	ldr	x0, [x0, #944]
  40f890:	ldr	w0, [x0, #124]
  40f894:	str	w0, [sp, #92]
  40f898:	add	x1, sp, #0x20
  40f89c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f8a0:	ldr	x0, [x0, #944]
  40f8a4:	bl	40f268 <ferror@plt+0xc538>
  40f8a8:	ldp	x19, x20, [sp, #16]
  40f8ac:	ldp	x29, x30, [sp], #96
  40f8b0:	ret
  40f8b4:	mov	w19, w4
  40f8b8:	mov	x3, x0
  40f8bc:	add	x0, sp, #0x20
  40f8c0:	bl	410360 <ferror@plt+0xd630>
  40f8c4:	sub	w19, w19, #0x6
  40f8c8:	tst	w19, #0xfffffffb
  40f8cc:	b.ne	40f898 <ferror@plt+0xcb68>  // b.any
  40f8d0:	str	w20, [sp, #92]
  40f8d4:	b	40f898 <ferror@plt+0xcb68>
  40f8d8:	stp	x29, x30, [sp, #-416]!
  40f8dc:	mov	x29, sp
  40f8e0:	stp	x19, x20, [sp, #16]
  40f8e4:	stp	x21, x22, [sp, #32]
  40f8e8:	mov	w21, w0
  40f8ec:	mov	w22, w1
  40f8f0:	mov	w19, w2
  40f8f4:	mov	x20, x3
  40f8f8:	str	x4, [sp, #384]
  40f8fc:	str	x5, [sp, #392]
  40f900:	str	x6, [sp, #400]
  40f904:	str	x7, [sp, #408]
  40f908:	str	q0, [sp, #256]
  40f90c:	str	q1, [sp, #272]
  40f910:	str	q2, [sp, #288]
  40f914:	str	q3, [sp, #304]
  40f918:	str	q4, [sp, #320]
  40f91c:	str	q5, [sp, #336]
  40f920:	str	q6, [sp, #352]
  40f924:	str	q7, [sp, #368]
  40f928:	add	x0, sp, #0xf8
  40f92c:	bl	40ef8c <ferror@plt+0xc25c>
  40f930:	add	x0, sp, #0x1a0
  40f934:	str	x0, [sp, #216]
  40f938:	str	x0, [sp, #224]
  40f93c:	add	x0, sp, #0x180
  40f940:	str	x0, [sp, #232]
  40f944:	mov	w0, #0xffffffe0            	// #-32
  40f948:	str	w0, [sp, #240]
  40f94c:	mov	w0, #0xffffff80            	// #-128
  40f950:	str	w0, [sp, #244]
  40f954:	mov	x3, #0x0                   	// #0
  40f958:	mov	w2, w22
  40f95c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40f960:	ldr	x1, [x0, #2416]
  40f964:	add	x0, sp, #0x30
  40f968:	bl	434390 <ferror@plt+0x31660>
  40f96c:	mov	w4, w21
  40f970:	add	x3, sp, #0xd8
  40f974:	mov	x2, x20
  40f978:	mov	w1, w19
  40f97c:	add	x0, sp, #0x30
  40f980:	bl	40f840 <ferror@plt+0xcb10>
  40f984:	mov	w19, w0
  40f988:	add	x0, sp, #0x30
  40f98c:	bl	434120 <ferror@plt+0x313f0>
  40f990:	add	x0, sp, #0xf8
  40f994:	bl	40efa4 <ferror@plt+0xc274>
  40f998:	mov	w0, w19
  40f99c:	ldp	x19, x20, [sp, #16]
  40f9a0:	ldp	x21, x22, [sp, #32]
  40f9a4:	ldp	x29, x30, [sp], #416
  40f9a8:	ret
  40f9ac:	stp	x29, x30, [sp, #-256]!
  40f9b0:	mov	x29, sp
  40f9b4:	stp	x19, x20, [sp, #16]
  40f9b8:	stp	x21, x22, [sp, #32]
  40f9bc:	mov	w22, w0
  40f9c0:	mov	x19, x1
  40f9c4:	mov	w20, w2
  40f9c8:	mov	x21, x3
  40f9cc:	str	x4, [sp, #224]
  40f9d0:	str	x5, [sp, #232]
  40f9d4:	str	x6, [sp, #240]
  40f9d8:	str	x7, [sp, #248]
  40f9dc:	str	q0, [sp, #96]
  40f9e0:	str	q1, [sp, #112]
  40f9e4:	str	q2, [sp, #128]
  40f9e8:	str	q3, [sp, #144]
  40f9ec:	str	q4, [sp, #160]
  40f9f0:	str	q5, [sp, #176]
  40f9f4:	str	q6, [sp, #192]
  40f9f8:	str	q7, [sp, #208]
  40f9fc:	add	x0, sp, #0x58
  40fa00:	bl	40ef8c <ferror@plt+0xc25c>
  40fa04:	add	x0, sp, #0x100
  40fa08:	str	x0, [sp, #56]
  40fa0c:	str	x0, [sp, #64]
  40fa10:	add	x0, sp, #0xe0
  40fa14:	str	x0, [sp, #72]
  40fa18:	mov	w0, #0xffffffe0            	// #-32
  40fa1c:	str	w0, [sp, #80]
  40fa20:	mov	w0, #0xffffff80            	// #-128
  40fa24:	str	w0, [sp, #84]
  40fa28:	mov	w4, w22
  40fa2c:	add	x3, sp, #0x38
  40fa30:	mov	x2, x21
  40fa34:	mov	w1, w20
  40fa38:	mov	x0, x19
  40fa3c:	bl	40f840 <ferror@plt+0xcb10>
  40fa40:	mov	w19, w0
  40fa44:	add	x0, sp, #0x58
  40fa48:	bl	40efa4 <ferror@plt+0xc274>
  40fa4c:	mov	w0, w19
  40fa50:	ldp	x19, x20, [sp, #16]
  40fa54:	ldp	x21, x22, [sp, #32]
  40fa58:	ldp	x29, x30, [sp], #256
  40fa5c:	ret
  40fa60:	stp	x29, x30, [sp, #-224]!
  40fa64:	mov	x29, sp
  40fa68:	stp	x19, x20, [sp, #16]
  40fa6c:	stp	x21, x22, [sp, #32]
  40fa70:	mov	w22, w0
  40fa74:	mov	w19, w2
  40fa78:	mov	x20, x3
  40fa7c:	mov	x21, x4
  40fa80:	mov	x3, #0x0                   	// #0
  40fa84:	mov	w2, w1
  40fa88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fa8c:	ldr	x1, [x0, #2416]
  40fa90:	add	x0, sp, #0x38
  40fa94:	bl	434390 <ferror@plt+0x31660>
  40fa98:	mov	w4, w22
  40fa9c:	mov	x3, x21
  40faa0:	mov	x2, x20
  40faa4:	mov	w1, w19
  40faa8:	add	x0, sp, #0x38
  40faac:	bl	40f840 <ferror@plt+0xcb10>
  40fab0:	mov	w19, w0
  40fab4:	add	x0, sp, #0x38
  40fab8:	bl	434120 <ferror@plt+0x313f0>
  40fabc:	mov	w0, w19
  40fac0:	ldp	x19, x20, [sp, #16]
  40fac4:	ldp	x21, x22, [sp, #32]
  40fac8:	ldp	x29, x30, [sp], #224
  40facc:	ret
  40fad0:	stp	x29, x30, [sp, #-416]!
  40fad4:	mov	x29, sp
  40fad8:	stp	x19, x20, [sp, #16]
  40fadc:	mov	w20, w0
  40fae0:	mov	x19, x1
  40fae4:	str	x2, [sp, #368]
  40fae8:	str	x3, [sp, #376]
  40faec:	str	x4, [sp, #384]
  40faf0:	str	x5, [sp, #392]
  40faf4:	str	x6, [sp, #400]
  40faf8:	str	x7, [sp, #408]
  40fafc:	str	q0, [sp, #240]
  40fb00:	str	q1, [sp, #256]
  40fb04:	str	q2, [sp, #272]
  40fb08:	str	q3, [sp, #288]
  40fb0c:	str	q4, [sp, #304]
  40fb10:	str	q5, [sp, #320]
  40fb14:	str	q6, [sp, #336]
  40fb18:	str	q7, [sp, #352]
  40fb1c:	add	x0, sp, #0xe8
  40fb20:	bl	40ef8c <ferror@plt+0xc25c>
  40fb24:	add	x0, sp, #0x1a0
  40fb28:	str	x0, [sp, #200]
  40fb2c:	str	x0, [sp, #208]
  40fb30:	add	x0, sp, #0x170
  40fb34:	str	x0, [sp, #216]
  40fb38:	mov	w0, #0xffffffd0            	// #-48
  40fb3c:	str	w0, [sp, #224]
  40fb40:	mov	w0, #0xffffff80            	// #-128
  40fb44:	str	w0, [sp, #228]
  40fb48:	mov	x3, #0x0                   	// #0
  40fb4c:	mov	w2, w20
  40fb50:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fb54:	ldr	x1, [x0, #2416]
  40fb58:	add	x0, sp, #0x20
  40fb5c:	bl	434390 <ferror@plt+0x31660>
  40fb60:	mov	w4, #0x8                   	// #8
  40fb64:	add	x3, sp, #0xc8
  40fb68:	mov	x2, x19
  40fb6c:	mov	w1, #0xffffffff            	// #-1
  40fb70:	add	x0, sp, #0x20
  40fb74:	bl	40f840 <ferror@plt+0xcb10>
  40fb78:	add	x0, sp, #0x20
  40fb7c:	bl	434120 <ferror@plt+0x313f0>
  40fb80:	add	x0, sp, #0xe8
  40fb84:	bl	40efa4 <ferror@plt+0xc274>
  40fb88:	ldp	x19, x20, [sp, #16]
  40fb8c:	ldp	x29, x30, [sp], #416
  40fb90:	ret
  40fb94:	stp	x29, x30, [sp, #-416]!
  40fb98:	mov	x29, sp
  40fb9c:	stp	x19, x20, [sp, #16]
  40fba0:	mov	w19, w0
  40fba4:	mov	x20, x1
  40fba8:	str	x2, [sp, #368]
  40fbac:	str	x3, [sp, #376]
  40fbb0:	str	x4, [sp, #384]
  40fbb4:	str	x5, [sp, #392]
  40fbb8:	str	x6, [sp, #400]
  40fbbc:	str	x7, [sp, #408]
  40fbc0:	str	q0, [sp, #240]
  40fbc4:	str	q1, [sp, #256]
  40fbc8:	str	q2, [sp, #272]
  40fbcc:	str	q3, [sp, #288]
  40fbd0:	str	q4, [sp, #304]
  40fbd4:	str	q5, [sp, #320]
  40fbd8:	str	q6, [sp, #336]
  40fbdc:	str	q7, [sp, #352]
  40fbe0:	add	x0, sp, #0xe8
  40fbe4:	bl	40ef8c <ferror@plt+0xc25c>
  40fbe8:	add	x0, sp, #0x1a0
  40fbec:	str	x0, [sp, #200]
  40fbf0:	str	x0, [sp, #208]
  40fbf4:	add	x0, sp, #0x170
  40fbf8:	str	x0, [sp, #216]
  40fbfc:	mov	w0, #0xffffffd0            	// #-48
  40fc00:	str	w0, [sp, #224]
  40fc04:	mov	w0, #0xffffff80            	// #-128
  40fc08:	str	w0, [sp, #228]
  40fc0c:	mov	x3, #0x0                   	// #0
  40fc10:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fc14:	ldr	w2, [x0, #2440]
  40fc18:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fc1c:	ldr	x1, [x0, #2416]
  40fc20:	add	x0, sp, #0x20
  40fc24:	bl	434390 <ferror@plt+0x31660>
  40fc28:	mov	w4, #0x6                   	// #6
  40fc2c:	add	x3, sp, #0xc8
  40fc30:	mov	x2, x20
  40fc34:	mov	w1, w19
  40fc38:	add	x0, sp, #0x20
  40fc3c:	bl	40f840 <ferror@plt+0xcb10>
  40fc40:	mov	w19, w0
  40fc44:	add	x0, sp, #0x20
  40fc48:	bl	434120 <ferror@plt+0x313f0>
  40fc4c:	add	x0, sp, #0xe8
  40fc50:	bl	40efa4 <ferror@plt+0xc274>
  40fc54:	mov	w0, w19
  40fc58:	ldp	x19, x20, [sp, #16]
  40fc5c:	ldp	x29, x30, [sp], #416
  40fc60:	ret
  40fc64:	stp	x29, x30, [sp, #-432]!
  40fc68:	mov	x29, sp
  40fc6c:	stp	x19, x20, [sp, #16]
  40fc70:	str	x21, [sp, #32]
  40fc74:	mov	w21, w0
  40fc78:	mov	w19, w1
  40fc7c:	mov	x20, x2
  40fc80:	str	x3, [sp, #392]
  40fc84:	str	x4, [sp, #400]
  40fc88:	str	x5, [sp, #408]
  40fc8c:	str	x6, [sp, #416]
  40fc90:	str	x7, [sp, #424]
  40fc94:	str	q0, [sp, #256]
  40fc98:	str	q1, [sp, #272]
  40fc9c:	str	q2, [sp, #288]
  40fca0:	str	q3, [sp, #304]
  40fca4:	str	q4, [sp, #320]
  40fca8:	str	q5, [sp, #336]
  40fcac:	str	q6, [sp, #352]
  40fcb0:	str	q7, [sp, #368]
  40fcb4:	add	x0, sp, #0xf8
  40fcb8:	bl	40ef8c <ferror@plt+0xc25c>
  40fcbc:	add	x0, sp, #0x1b0
  40fcc0:	str	x0, [sp, #216]
  40fcc4:	str	x0, [sp, #224]
  40fcc8:	add	x0, sp, #0x180
  40fccc:	str	x0, [sp, #232]
  40fcd0:	mov	w0, #0xffffffd8            	// #-40
  40fcd4:	str	w0, [sp, #240]
  40fcd8:	mov	w0, #0xffffff80            	// #-128
  40fcdc:	str	w0, [sp, #244]
  40fce0:	mov	x3, #0x0                   	// #0
  40fce4:	mov	w2, w21
  40fce8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fcec:	ldr	x1, [x0, #2416]
  40fcf0:	add	x0, sp, #0x30
  40fcf4:	bl	434390 <ferror@plt+0x31660>
  40fcf8:	mov	w4, #0x6                   	// #6
  40fcfc:	add	x3, sp, #0xd8
  40fd00:	mov	x2, x20
  40fd04:	mov	w1, w19
  40fd08:	add	x0, sp, #0x30
  40fd0c:	bl	40f840 <ferror@plt+0xcb10>
  40fd10:	mov	w19, w0
  40fd14:	add	x0, sp, #0x30
  40fd18:	bl	434120 <ferror@plt+0x313f0>
  40fd1c:	add	x0, sp, #0xf8
  40fd20:	bl	40efa4 <ferror@plt+0xc274>
  40fd24:	mov	w0, w19
  40fd28:	ldp	x19, x20, [sp, #16]
  40fd2c:	ldr	x21, [sp, #32]
  40fd30:	ldp	x29, x30, [sp], #432
  40fd34:	ret
  40fd38:	stp	x29, x30, [sp, #-432]!
  40fd3c:	mov	x29, sp
  40fd40:	stp	x19, x20, [sp, #16]
  40fd44:	str	x21, [sp, #32]
  40fd48:	mov	w21, w0
  40fd4c:	mov	w19, w1
  40fd50:	mov	x20, x2
  40fd54:	str	x3, [sp, #392]
  40fd58:	str	x4, [sp, #400]
  40fd5c:	str	x5, [sp, #408]
  40fd60:	str	x6, [sp, #416]
  40fd64:	str	x7, [sp, #424]
  40fd68:	str	q0, [sp, #256]
  40fd6c:	str	q1, [sp, #272]
  40fd70:	str	q2, [sp, #288]
  40fd74:	str	q3, [sp, #304]
  40fd78:	str	q4, [sp, #320]
  40fd7c:	str	q5, [sp, #336]
  40fd80:	str	q6, [sp, #352]
  40fd84:	str	q7, [sp, #368]
  40fd88:	add	x0, sp, #0xf8
  40fd8c:	bl	40ef8c <ferror@plt+0xc25c>
  40fd90:	add	x0, sp, #0x1b0
  40fd94:	str	x0, [sp, #216]
  40fd98:	str	x0, [sp, #224]
  40fd9c:	add	x0, sp, #0x180
  40fda0:	str	x0, [sp, #232]
  40fda4:	mov	w0, #0xffffffd8            	// #-40
  40fda8:	str	w0, [sp, #240]
  40fdac:	mov	w0, #0xffffff80            	// #-128
  40fdb0:	str	w0, [sp, #244]
  40fdb4:	mov	x3, #0x0                   	// #0
  40fdb8:	mov	w2, w21
  40fdbc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fdc0:	ldr	x1, [x0, #2416]
  40fdc4:	add	x0, sp, #0x30
  40fdc8:	bl	434390 <ferror@plt+0x31660>
  40fdcc:	mov	w4, #0xa                   	// #10
  40fdd0:	add	x3, sp, #0xd8
  40fdd4:	mov	x2, x20
  40fdd8:	mov	w1, w19
  40fddc:	add	x0, sp, #0x30
  40fde0:	bl	40f840 <ferror@plt+0xcb10>
  40fde4:	mov	w19, w0
  40fde8:	add	x0, sp, #0x30
  40fdec:	bl	434120 <ferror@plt+0x313f0>
  40fdf0:	add	x0, sp, #0xf8
  40fdf4:	bl	40efa4 <ferror@plt+0xc274>
  40fdf8:	mov	w0, w19
  40fdfc:	ldp	x19, x20, [sp, #16]
  40fe00:	ldr	x21, [sp, #32]
  40fe04:	ldp	x29, x30, [sp], #432
  40fe08:	ret
  40fe0c:	stp	x29, x30, [sp, #-416]!
  40fe10:	mov	x29, sp
  40fe14:	stp	x19, x20, [sp, #16]
  40fe18:	mov	w20, w0
  40fe1c:	mov	x19, x1
  40fe20:	str	x2, [sp, #368]
  40fe24:	str	x3, [sp, #376]
  40fe28:	str	x4, [sp, #384]
  40fe2c:	str	x5, [sp, #392]
  40fe30:	str	x6, [sp, #400]
  40fe34:	str	x7, [sp, #408]
  40fe38:	str	q0, [sp, #240]
  40fe3c:	str	q1, [sp, #256]
  40fe40:	str	q2, [sp, #272]
  40fe44:	str	q3, [sp, #288]
  40fe48:	str	q4, [sp, #304]
  40fe4c:	str	q5, [sp, #320]
  40fe50:	str	q6, [sp, #336]
  40fe54:	str	q7, [sp, #352]
  40fe58:	add	x0, sp, #0xe8
  40fe5c:	bl	40ef8c <ferror@plt+0xc25c>
  40fe60:	add	x0, sp, #0x1a0
  40fe64:	str	x0, [sp, #200]
  40fe68:	str	x0, [sp, #208]
  40fe6c:	add	x0, sp, #0x170
  40fe70:	str	x0, [sp, #216]
  40fe74:	mov	w0, #0xffffffd0            	// #-48
  40fe78:	str	w0, [sp, #224]
  40fe7c:	mov	w0, #0xffffff80            	// #-128
  40fe80:	str	w0, [sp, #228]
  40fe84:	mov	x3, #0x0                   	// #0
  40fe88:	mov	w2, w20
  40fe8c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40fe90:	ldr	x1, [x0, #2416]
  40fe94:	add	x0, sp, #0x20
  40fe98:	bl	434390 <ferror@plt+0x31660>
  40fe9c:	mov	w4, #0xb                   	// #11
  40fea0:	add	x3, sp, #0xc8
  40fea4:	mov	x2, x19
  40fea8:	mov	w1, #0xffffffff            	// #-1
  40feac:	add	x0, sp, #0x20
  40feb0:	bl	40f840 <ferror@plt+0xcb10>
  40feb4:	mov	w19, w0
  40feb8:	add	x0, sp, #0x20
  40febc:	bl	434120 <ferror@plt+0x313f0>
  40fec0:	add	x0, sp, #0xe8
  40fec4:	bl	40efa4 <ferror@plt+0xc274>
  40fec8:	mov	w0, w19
  40fecc:	ldp	x19, x20, [sp, #16]
  40fed0:	ldp	x29, x30, [sp], #416
  40fed4:	ret
  40fed8:	stp	x29, x30, [sp, #-432]!
  40fedc:	mov	x29, sp
  40fee0:	str	x19, [sp, #16]
  40fee4:	mov	x19, x0
  40fee8:	str	x1, [sp, #376]
  40feec:	str	x2, [sp, #384]
  40fef0:	str	x3, [sp, #392]
  40fef4:	str	x4, [sp, #400]
  40fef8:	str	x5, [sp, #408]
  40fefc:	str	x6, [sp, #416]
  40ff00:	str	x7, [sp, #424]
  40ff04:	str	q0, [sp, #240]
  40ff08:	str	q1, [sp, #256]
  40ff0c:	str	q2, [sp, #272]
  40ff10:	str	q3, [sp, #288]
  40ff14:	str	q4, [sp, #304]
  40ff18:	str	q5, [sp, #320]
  40ff1c:	str	q6, [sp, #336]
  40ff20:	str	q7, [sp, #352]
  40ff24:	add	x0, sp, #0xe8
  40ff28:	bl	40ef8c <ferror@plt+0xc25c>
  40ff2c:	add	x0, sp, #0x1b0
  40ff30:	str	x0, [sp, #200]
  40ff34:	str	x0, [sp, #208]
  40ff38:	add	x0, sp, #0x170
  40ff3c:	str	x0, [sp, #216]
  40ff40:	mov	w0, #0xffffffc8            	// #-56
  40ff44:	str	w0, [sp, #224]
  40ff48:	mov	w0, #0xffffff80            	// #-128
  40ff4c:	str	w0, [sp, #228]
  40ff50:	mov	x3, #0x0                   	// #0
  40ff54:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40ff58:	ldr	w2, [x0, #2440]
  40ff5c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  40ff60:	ldr	x1, [x0, #2416]
  40ff64:	add	x0, sp, #0x20
  40ff68:	bl	434390 <ferror@plt+0x31660>
  40ff6c:	mov	w4, #0x4                   	// #4
  40ff70:	add	x3, sp, #0xc8
  40ff74:	mov	x2, x19
  40ff78:	mov	w1, #0xffffffff            	// #-1
  40ff7c:	add	x0, sp, #0x20
  40ff80:	bl	40f840 <ferror@plt+0xcb10>
  40ff84:	add	x0, sp, #0x20
  40ff88:	bl	434120 <ferror@plt+0x313f0>
  40ff8c:	add	x0, sp, #0xe8
  40ff90:	bl	40efa4 <ferror@plt+0xc274>
  40ff94:	ldr	x19, [sp, #16]
  40ff98:	ldp	x29, x30, [sp], #432
  40ff9c:	ret
  40ffa0:	stp	x29, x30, [sp, #-416]!
  40ffa4:	mov	x29, sp
  40ffa8:	stp	x19, x20, [sp, #16]
  40ffac:	mov	w20, w0
  40ffb0:	mov	x19, x1
  40ffb4:	str	x2, [sp, #368]
  40ffb8:	str	x3, [sp, #376]
  40ffbc:	str	x4, [sp, #384]
  40ffc0:	str	x5, [sp, #392]
  40ffc4:	str	x6, [sp, #400]
  40ffc8:	str	x7, [sp, #408]
  40ffcc:	str	q0, [sp, #240]
  40ffd0:	str	q1, [sp, #256]
  40ffd4:	str	q2, [sp, #272]
  40ffd8:	str	q3, [sp, #288]
  40ffdc:	str	q4, [sp, #304]
  40ffe0:	str	q5, [sp, #320]
  40ffe4:	str	q6, [sp, #336]
  40ffe8:	str	q7, [sp, #352]
  40ffec:	add	x0, sp, #0xe8
  40fff0:	bl	40ef8c <ferror@plt+0xc25c>
  40fff4:	add	x0, sp, #0x1a0
  40fff8:	str	x0, [sp, #200]
  40fffc:	str	x0, [sp, #208]
  410000:	add	x0, sp, #0x170
  410004:	str	x0, [sp, #216]
  410008:	mov	w0, #0xffffffd0            	// #-48
  41000c:	str	w0, [sp, #224]
  410010:	mov	w0, #0xffffff80            	// #-128
  410014:	str	w0, [sp, #228]
  410018:	mov	x3, #0x0                   	// #0
  41001c:	mov	w2, w20
  410020:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410024:	ldr	x1, [x0, #2416]
  410028:	add	x0, sp, #0x20
  41002c:	bl	434390 <ferror@plt+0x31660>
  410030:	mov	w4, #0x4                   	// #4
  410034:	add	x3, sp, #0xc8
  410038:	mov	x2, x19
  41003c:	mov	w1, #0xffffffff            	// #-1
  410040:	add	x0, sp, #0x20
  410044:	bl	40f840 <ferror@plt+0xcb10>
  410048:	add	x0, sp, #0x20
  41004c:	bl	434120 <ferror@plt+0x313f0>
  410050:	add	x0, sp, #0xe8
  410054:	bl	40efa4 <ferror@plt+0xc274>
  410058:	ldp	x19, x20, [sp, #16]
  41005c:	ldp	x29, x30, [sp], #416
  410060:	ret
  410064:	stp	x29, x30, [sp, #-432]!
  410068:	mov	x29, sp
  41006c:	str	x19, [sp, #16]
  410070:	mov	x19, x0
  410074:	str	x1, [sp, #376]
  410078:	str	x2, [sp, #384]
  41007c:	str	x3, [sp, #392]
  410080:	str	x4, [sp, #400]
  410084:	str	x5, [sp, #408]
  410088:	str	x6, [sp, #416]
  41008c:	str	x7, [sp, #424]
  410090:	str	q0, [sp, #240]
  410094:	str	q1, [sp, #256]
  410098:	str	q2, [sp, #272]
  41009c:	str	q3, [sp, #288]
  4100a0:	str	q4, [sp, #304]
  4100a4:	str	q5, [sp, #320]
  4100a8:	str	q6, [sp, #336]
  4100ac:	str	q7, [sp, #352]
  4100b0:	add	x0, sp, #0xe8
  4100b4:	bl	40ef8c <ferror@plt+0xc25c>
  4100b8:	add	x0, sp, #0x1b0
  4100bc:	str	x0, [sp, #200]
  4100c0:	str	x0, [sp, #208]
  4100c4:	add	x0, sp, #0x170
  4100c8:	str	x0, [sp, #216]
  4100cc:	mov	w0, #0xffffffc8            	// #-56
  4100d0:	str	w0, [sp, #224]
  4100d4:	mov	w0, #0xffffff80            	// #-128
  4100d8:	str	w0, [sp, #228]
  4100dc:	mov	x3, #0x0                   	// #0
  4100e0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4100e4:	ldr	w2, [x0, #2440]
  4100e8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4100ec:	ldr	x1, [x0, #2416]
  4100f0:	add	x0, sp, #0x20
  4100f4:	bl	434390 <ferror@plt+0x31660>
  4100f8:	mov	w4, #0x5                   	// #5
  4100fc:	add	x3, sp, #0xc8
  410100:	mov	x2, x19
  410104:	mov	w1, #0xffffffff            	// #-1
  410108:	add	x0, sp, #0x20
  41010c:	bl	40f840 <ferror@plt+0xcb10>
  410110:	add	x0, sp, #0x20
  410114:	bl	434120 <ferror@plt+0x313f0>
  410118:	add	x0, sp, #0xe8
  41011c:	bl	40efa4 <ferror@plt+0xc274>
  410120:	ldr	x19, [sp, #16]
  410124:	ldp	x29, x30, [sp], #432
  410128:	ret
  41012c:	stp	x29, x30, [sp, #-416]!
  410130:	mov	x29, sp
  410134:	stp	x19, x20, [sp, #16]
  410138:	mov	w20, w0
  41013c:	mov	x19, x1
  410140:	str	x2, [sp, #368]
  410144:	str	x3, [sp, #376]
  410148:	str	x4, [sp, #384]
  41014c:	str	x5, [sp, #392]
  410150:	str	x6, [sp, #400]
  410154:	str	x7, [sp, #408]
  410158:	str	q0, [sp, #240]
  41015c:	str	q1, [sp, #256]
  410160:	str	q2, [sp, #272]
  410164:	str	q3, [sp, #288]
  410168:	str	q4, [sp, #304]
  41016c:	str	q5, [sp, #320]
  410170:	str	q6, [sp, #336]
  410174:	str	q7, [sp, #352]
  410178:	add	x0, sp, #0xe8
  41017c:	bl	40ef8c <ferror@plt+0xc25c>
  410180:	add	x0, sp, #0x1a0
  410184:	str	x0, [sp, #200]
  410188:	str	x0, [sp, #208]
  41018c:	add	x0, sp, #0x170
  410190:	str	x0, [sp, #216]
  410194:	mov	w0, #0xffffffd0            	// #-48
  410198:	str	w0, [sp, #224]
  41019c:	mov	w0, #0xffffff80            	// #-128
  4101a0:	str	w0, [sp, #228]
  4101a4:	mov	x3, #0x0                   	// #0
  4101a8:	mov	w2, w20
  4101ac:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4101b0:	ldr	x1, [x0, #2416]
  4101b4:	add	x0, sp, #0x20
  4101b8:	bl	434390 <ferror@plt+0x31660>
  4101bc:	mov	w4, #0x5                   	// #5
  4101c0:	add	x3, sp, #0xc8
  4101c4:	mov	x2, x19
  4101c8:	mov	w1, #0xffffffff            	// #-1
  4101cc:	add	x0, sp, #0x20
  4101d0:	bl	40f840 <ferror@plt+0xcb10>
  4101d4:	add	x0, sp, #0x20
  4101d8:	bl	434120 <ferror@plt+0x313f0>
  4101dc:	add	x0, sp, #0xe8
  4101e0:	bl	40efa4 <ferror@plt+0xc274>
  4101e4:	ldp	x19, x20, [sp, #16]
  4101e8:	ldp	x29, x30, [sp], #416
  4101ec:	ret
  4101f0:	stp	x29, x30, [sp, #-432]!
  4101f4:	mov	x29, sp
  4101f8:	str	x19, [sp, #16]
  4101fc:	mov	x19, x0
  410200:	str	x1, [sp, #376]
  410204:	str	x2, [sp, #384]
  410208:	str	x3, [sp, #392]
  41020c:	str	x4, [sp, #400]
  410210:	str	x5, [sp, #408]
  410214:	str	x6, [sp, #416]
  410218:	str	x7, [sp, #424]
  41021c:	str	q0, [sp, #240]
  410220:	str	q1, [sp, #256]
  410224:	str	q2, [sp, #272]
  410228:	str	q3, [sp, #288]
  41022c:	str	q4, [sp, #304]
  410230:	str	q5, [sp, #320]
  410234:	str	q6, [sp, #336]
  410238:	str	q7, [sp, #352]
  41023c:	add	x0, sp, #0xe8
  410240:	bl	40ef8c <ferror@plt+0xc25c>
  410244:	add	x0, sp, #0x1b0
  410248:	str	x0, [sp, #200]
  41024c:	str	x0, [sp, #208]
  410250:	add	x0, sp, #0x170
  410254:	str	x0, [sp, #216]
  410258:	mov	w0, #0xffffffc8            	// #-56
  41025c:	str	w0, [sp, #224]
  410260:	mov	w0, #0xffffff80            	// #-128
  410264:	str	w0, [sp, #228]
  410268:	mov	x3, #0x0                   	// #0
  41026c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410270:	ldr	w2, [x0, #2440]
  410274:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410278:	ldr	x1, [x0, #2416]
  41027c:	add	x0, sp, #0x20
  410280:	bl	434390 <ferror@plt+0x31660>
  410284:	mov	w4, #0x3                   	// #3
  410288:	add	x3, sp, #0xc8
  41028c:	mov	x2, x19
  410290:	mov	w1, #0xffffffff            	// #-1
  410294:	add	x0, sp, #0x20
  410298:	bl	40f840 <ferror@plt+0xcb10>
  41029c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4102a0:	add	x2, x2, #0x4e8
  4102a4:	mov	w1, #0x607                 	// #1543
  4102a8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4102ac:	add	x0, x0, #0x428
  4102b0:	bl	4102b4 <ferror@plt+0xd584>
  4102b4:	stp	x29, x30, [sp, #-32]!
  4102b8:	mov	x29, sp
  4102bc:	stp	x19, x20, [sp, #16]
  4102c0:	mov	w20, w1
  4102c4:	mov	x19, x2
  4102c8:	bl	40ed50 <ferror@plt+0xc020>
  4102cc:	mov	w3, w20
  4102d0:	mov	x2, x0
  4102d4:	mov	x1, x19
  4102d8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4102dc:	add	x0, x0, #0x4f8
  4102e0:	bl	4101f0 <ferror@plt+0xd4c0>
  4102e4:	stp	x29, x30, [sp, #-64]!
  4102e8:	mov	x29, sp
  4102ec:	stp	x19, x20, [sp, #16]
  4102f0:	stp	x21, x22, [sp, #32]
  4102f4:	str	x23, [sp, #48]
  4102f8:	cbz	x3, 410348 <ferror@plt+0xd618>
  4102fc:	mov	x19, x0
  410300:	mov	x22, x1
  410304:	mov	x23, x2
  410308:	mov	x20, x3
  41030c:	mov	w21, w4
  410310:	bl	402c40 <__errno_location@plt>
  410314:	ldr	w0, [x0]
  410318:	str	w0, [x19, #16]
  41031c:	str	x23, [x19, #8]
  410320:	str	x22, [x19]
  410324:	str	x20, [x19, #32]
  410328:	str	x20, [x19, #40]
  41032c:	str	w21, [x19, #56]
  410330:	str	wzr, [x19, #60]
  410334:	ldp	x19, x20, [sp, #16]
  410338:	ldp	x21, x22, [sp, #32]
  41033c:	ldr	x23, [sp, #48]
  410340:	ldp	x29, x30, [sp], #64
  410344:	ret
  410348:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41034c:	add	x2, x2, #0x508
  410350:	mov	w1, #0x112                 	// #274
  410354:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410358:	add	x0, x0, #0x428
  41035c:	bl	4102b4 <ferror@plt+0xd584>
  410360:	stp	x29, x30, [sp, #-48]!
  410364:	mov	x29, sp
  410368:	stp	x19, x20, [sp, #16]
  41036c:	stp	x21, x22, [sp, #32]
  410370:	cbz	x3, 4103b4 <ferror@plt+0xd684>
  410374:	mov	x20, x0
  410378:	mov	x0, x1
  41037c:	mov	x21, x2
  410380:	mov	x19, x3
  410384:	mov	w22, w4
  410388:	bl	402cd0 <gettext@plt>
  41038c:	mov	w4, w22
  410390:	mov	x3, x19
  410394:	mov	x2, x21
  410398:	mov	x1, x0
  41039c:	mov	x0, x20
  4103a0:	bl	4102e4 <ferror@plt+0xd5b4>
  4103a4:	ldp	x19, x20, [sp, #16]
  4103a8:	ldp	x21, x22, [sp, #32]
  4103ac:	ldp	x29, x30, [sp], #48
  4103b0:	ret
  4103b4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4103b8:	add	x2, x2, #0x528
  4103bc:	mov	w1, #0x123                 	// #291
  4103c0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4103c4:	add	x0, x0, #0x428
  4103c8:	bl	4102b4 <ferror@plt+0xd584>
  4103cc:	stp	x29, x30, [sp, #-128]!
  4103d0:	mov	x29, sp
  4103d4:	stp	x19, x20, [sp, #16]
  4103d8:	stp	x21, x22, [sp, #32]
  4103dc:	stp	x23, x24, [sp, #48]
  4103e0:	mov	x21, x0
  4103e4:	ldr	w0, [x1, #56]
  4103e8:	cmp	w0, #0xd
  4103ec:	b.gt	4104b8 <ferror@plt+0xd788>
  4103f0:	mov	x20, x1
  4103f4:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4103f8:	add	x19, x19, #0x748
  4103fc:	add	x1, x19, #0xc0
  410400:	ldr	x0, [x1, w0, sxtw #3]
  410404:	bl	402cd0 <gettext@plt>
  410408:	mov	x23, x0
  41040c:	add	x19, x19, #0x20
  410410:	ldrsw	x0, [x20, #56]
  410414:	ldr	x19, [x19, x0, lsl #3]
  410418:	cbz	x19, 4104d0 <ferror@plt+0xd7a0>
  41041c:	ldr	x22, [x21]
  410420:	mov	x0, x19
  410424:	bl	402680 <strlen@plt>
  410428:	mov	x2, x0
  41042c:	mov	x1, x19
  410430:	ldrb	w0, [x22, #67]
  410434:	bl	411460 <ferror@plt+0xe730>
  410438:	mov	x24, x0
  41043c:	ldrb	w0, [x22, #67]
  410440:	bl	4114f4 <ferror@plt+0xe7c4>
  410444:	mov	x22, x0
  410448:	add	x8, sp, #0x60
  41044c:	mov	w1, #0x0                   	// #0
  410450:	ldr	x0, [x20, #40]
  410454:	bl	434224 <ferror@plt+0x314f4>
  410458:	ldp	x0, x1, [sp, #96]
  41045c:	stp	x0, x1, [sp, #64]
  410460:	ldp	x0, x1, [sp, #112]
  410464:	stp	x0, x1, [sp, #80]
  410468:	add	x1, sp, #0x40
  41046c:	mov	x0, x21
  410470:	bl	40e508 <ferror@plt+0xb7d8>
  410474:	mov	x19, x0
  410478:	mov	x4, x22
  41047c:	mov	x3, x23
  410480:	mov	x2, x24
  410484:	mov	x1, x0
  410488:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41048c:	add	x0, x0, #0x558
  410490:	bl	40e480 <ferror@plt+0xb750>
  410494:	mov	x20, x0
  410498:	mov	x0, x19
  41049c:	bl	402a90 <free@plt>
  4104a0:	mov	x0, x20
  4104a4:	ldp	x19, x20, [sp, #16]
  4104a8:	ldp	x21, x22, [sp, #32]
  4104ac:	ldp	x23, x24, [sp, #48]
  4104b0:	ldp	x29, x30, [sp], #128
  4104b4:	ret
  4104b8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4104bc:	add	x2, x2, #0x540
  4104c0:	mov	w1, #0x16a                 	// #362
  4104c4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4104c8:	add	x0, x0, #0x428
  4104cc:	bl	4102b4 <ferror@plt+0xd584>
  4104d0:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4104d4:	add	x22, x22, #0xd70
  4104d8:	mov	x24, x22
  4104dc:	b	410448 <ferror@plt+0xd718>
  4104e0:	stp	x29, x30, [sp, #-48]!
  4104e4:	mov	x29, sp
  4104e8:	stp	x19, x20, [sp, #16]
  4104ec:	str	x21, [sp, #32]
  4104f0:	mov	x19, x0
  4104f4:	mov	x20, x1
  4104f8:	mov	w1, #0x0                   	// #0
  4104fc:	mov	x0, x20
  410500:	bl	416324 <ferror@plt+0x135f4>
  410504:	mov	w1, w0
  410508:	mov	x0, x19
  41050c:	bl	40e934 <ferror@plt+0xbc04>
  410510:	ldr	x21, [x19]
  410514:	mov	x1, x20
  410518:	mov	x0, x19
  41051c:	bl	4103cc <ferror@plt+0xd69c>
  410520:	mov	x1, x0
  410524:	mov	x0, x21
  410528:	bl	416568 <ferror@plt+0x13838>
  41052c:	ldp	x19, x20, [sp, #16]
  410530:	ldr	x21, [sp, #32]
  410534:	ldp	x29, x30, [sp], #48
  410538:	ret
  41053c:	stp	x29, x30, [sp, #-496]!
  410540:	mov	x29, sp
  410544:	stp	x19, x20, [sp, #16]
  410548:	mov	x19, x0
  41054c:	mov	x20, x2
  410550:	str	x3, [sp, #456]
  410554:	str	x4, [sp, #464]
  410558:	str	x5, [sp, #472]
  41055c:	str	x6, [sp, #480]
  410560:	str	x7, [sp, #488]
  410564:	str	q0, [sp, #320]
  410568:	str	q1, [sp, #336]
  41056c:	str	q2, [sp, #352]
  410570:	str	q3, [sp, #368]
  410574:	str	q4, [sp, #384]
  410578:	str	q5, [sp, #400]
  41057c:	str	q6, [sp, #416]
  410580:	str	q7, [sp, #432]
  410584:	mov	x3, #0x0                   	// #0
  410588:	mov	w2, w1
  41058c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410590:	ldr	x1, [x0, #2416]
  410594:	add	x0, sp, #0x38
  410598:	bl	434390 <ferror@plt+0x31660>
  41059c:	add	x0, sp, #0x1f0
  4105a0:	str	x0, [sp, #224]
  4105a4:	str	x0, [sp, #232]
  4105a8:	add	x0, sp, #0x1c0
  4105ac:	str	x0, [sp, #240]
  4105b0:	mov	w0, #0xffffffd8            	// #-40
  4105b4:	str	w0, [sp, #248]
  4105b8:	mov	w0, #0xffffff80            	// #-128
  4105bc:	str	w0, [sp, #252]
  4105c0:	mov	w4, #0x8                   	// #8
  4105c4:	add	x3, sp, #0x38
  4105c8:	add	x2, sp, #0xe0
  4105cc:	mov	x1, x20
  4105d0:	add	x0, sp, #0x100
  4105d4:	bl	410360 <ferror@plt+0xd630>
  4105d8:	ldrb	w0, [x19, #220]
  4105dc:	cbnz	w0, 41065c <ferror@plt+0xd92c>
  4105e0:	str	x21, [sp, #32]
  4105e4:	ldr	x0, [x19]
  4105e8:	bl	4165a4 <ferror@plt+0x13874>
  4105ec:	mov	x20, x0
  4105f0:	ldr	x21, [x19]
  4105f4:	add	x1, sp, #0x100
  4105f8:	mov	x0, x19
  4105fc:	bl	4103cc <ferror@plt+0xd69c>
  410600:	mov	x1, x0
  410604:	mov	x0, x21
  410608:	bl	416568 <ferror@plt+0x13838>
  41060c:	add	x1, sp, #0x100
  410610:	ldr	x0, [x19]
  410614:	bl	4171a0 <ferror@plt+0x14470>
  410618:	ldr	x0, [x19]
  41061c:	bl	416f74 <ferror@plt+0x14244>
  410620:	ldr	x0, [x19]
  410624:	bl	4165b4 <ferror@plt+0x13884>
  410628:	mov	x1, x20
  41062c:	ldr	x0, [x19]
  410630:	bl	416568 <ferror@plt+0x13838>
  410634:	mov	w2, #0x8                   	// #8
  410638:	add	x1, sp, #0x38
  41063c:	mov	x0, x19
  410640:	bl	413170 <ferror@plt+0x10440>
  410644:	add	x0, sp, #0x38
  410648:	bl	434120 <ferror@plt+0x313f0>
  41064c:	ldr	x21, [sp, #32]
  410650:	ldp	x19, x20, [sp, #16]
  410654:	ldp	x29, x30, [sp], #496
  410658:	ret
  41065c:	add	x0, sp, #0x38
  410660:	bl	434120 <ferror@plt+0x313f0>
  410664:	b	410650 <ferror@plt+0xd920>
  410668:	stp	x29, x30, [sp, #-64]!
  41066c:	mov	x29, sp
  410670:	cbz	x0, 4106b4 <ferror@plt+0xd984>
  410674:	stp	x19, x20, [sp, #16]
  410678:	mov	x20, x0
  41067c:	mov	x19, x1
  410680:	cbz	x1, 4106d8 <ferror@plt+0xd9a8>
  410684:	mov	w1, #0x22                  	// #34
  410688:	bl	416928 <ferror@plt+0x13bf8>
  41068c:	ldrb	w1, [x19]
  410690:	cbz	w1, 4107a4 <ferror@plt+0xda74>
  410694:	stp	x21, x22, [sp, #32]
  410698:	str	x23, [sp, #48]
  41069c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4106a0:	add	x22, x22, #0xde0
  4106a4:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4106a8:	add	x21, x21, #0x28
  4106ac:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4106b0:	b	410718 <ferror@plt+0xd9e8>
  4106b4:	stp	x19, x20, [sp, #16]
  4106b8:	stp	x21, x22, [sp, #32]
  4106bc:	str	x23, [sp, #48]
  4106c0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4106c4:	add	x2, x2, #0x568
  4106c8:	mov	w1, #0x2f5                 	// #757
  4106cc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4106d0:	add	x0, x0, #0x428
  4106d4:	bl	4102b4 <ferror@plt+0xd584>
  4106d8:	stp	x21, x22, [sp, #32]
  4106dc:	str	x23, [sp, #48]
  4106e0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4106e4:	add	x2, x2, #0x568
  4106e8:	mov	w1, #0x2f6                 	// #758
  4106ec:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4106f0:	add	x0, x0, #0x428
  4106f4:	bl	4102b4 <ferror@plt+0xd584>
  4106f8:	cmp	w1, #0x5c
  4106fc:	b.ne	41076c <ferror@plt+0xda3c>  // b.any
  410700:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410704:	add	x1, x1, #0x580
  410708:	mov	x0, x20
  41070c:	bl	416f20 <ferror@plt+0x141f0>
  410710:	ldrb	w1, [x19, #1]!
  410714:	cbz	w1, 41079c <ferror@plt+0xda6c>
  410718:	cmp	w1, #0x22
  41071c:	b.eq	41075c <ferror@plt+0xda2c>  // b.none
  410720:	b.hi	4106f8 <ferror@plt+0xd9c8>  // b.pmore
  410724:	cmp	w1, #0x9
  410728:	b.eq	410748 <ferror@plt+0xda18>  // b.none
  41072c:	cmp	w1, #0xa
  410730:	b.ne	41076c <ferror@plt+0xda3c>  // b.any
  410734:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  410738:	add	x1, x1, #0xde8
  41073c:	mov	x0, x20
  410740:	bl	416f20 <ferror@plt+0x141f0>
  410744:	b	410710 <ferror@plt+0xd9e0>
  410748:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41074c:	add	x1, x1, #0xe08
  410750:	mov	x0, x20
  410754:	bl	416f20 <ferror@plt+0x141f0>
  410758:	b	410710 <ferror@plt+0xd9e0>
  41075c:	mov	x1, x22
  410760:	mov	x0, x20
  410764:	bl	416f20 <ferror@plt+0x141f0>
  410768:	b	410710 <ferror@plt+0xd9e0>
  41076c:	ldrh	w0, [x21, w1, sxtw #1]
  410770:	tbz	w0, #4, 410780 <ferror@plt+0xda50>
  410774:	mov	x0, x20
  410778:	bl	416928 <ferror@plt+0x13bf8>
  41077c:	b	410710 <ferror@plt+0xd9e0>
  410780:	and	w4, w1, #0x7
  410784:	ubfx	x3, x1, #3, #3
  410788:	lsr	w2, w1, #6
  41078c:	add	x1, x23, #0x588
  410790:	mov	x0, x20
  410794:	bl	418d58 <ferror@plt+0x16028>
  410798:	b	410710 <ferror@plt+0xd9e0>
  41079c:	ldp	x21, x22, [sp, #32]
  4107a0:	ldr	x23, [sp, #48]
  4107a4:	mov	w1, #0x22                  	// #34
  4107a8:	mov	x0, x20
  4107ac:	bl	416928 <ferror@plt+0x13bf8>
  4107b0:	ldp	x19, x20, [sp, #16]
  4107b4:	ldp	x29, x30, [sp], #64
  4107b8:	ret
  4107bc:	tbnz	w0, #31, 4107f8 <ferror@plt+0xdac8>
  4107c0:	mov	w1, w0
  4107c4:	mov	w0, #0x1                   	// #1
  4107c8:	cbz	w1, 4107f4 <ferror@plt+0xdac4>
  4107cc:	mov	w0, #0x0                   	// #0
  4107d0:	mov	w4, #0x6667                	// #26215
  4107d4:	movk	w4, #0x6666, lsl #16
  4107d8:	add	w0, w0, #0x1
  4107dc:	mov	w3, w1
  4107e0:	smull	x2, w1, w4
  4107e4:	asr	x2, x2, #34
  4107e8:	sub	w1, w2, w1, asr #31
  4107ec:	cmp	w3, #0x9
  4107f0:	b.gt	4107d8 <ferror@plt+0xdaa8>
  4107f4:	ret
  4107f8:	stp	x29, x30, [sp, #-16]!
  4107fc:	mov	x29, sp
  410800:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410804:	add	x2, x2, #0x590
  410808:	mov	w1, #0x415                 	// #1045
  41080c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410810:	add	x0, x0, #0x428
  410814:	bl	4102b4 <ferror@plt+0xd584>
  410818:	stp	x29, x30, [sp, #-256]!
  41081c:	mov	x29, sp
  410820:	stp	x19, x20, [sp, #16]
  410824:	str	x2, [sp, #208]
  410828:	str	x3, [sp, #216]
  41082c:	str	x4, [sp, #224]
  410830:	str	x5, [sp, #232]
  410834:	str	x6, [sp, #240]
  410838:	str	x7, [sp, #248]
  41083c:	str	q0, [sp, #80]
  410840:	str	q1, [sp, #96]
  410844:	str	q2, [sp, #112]
  410848:	str	q3, [sp, #128]
  41084c:	str	q4, [sp, #144]
  410850:	str	q5, [sp, #160]
  410854:	str	q6, [sp, #176]
  410858:	str	q7, [sp, #192]
  41085c:	cbz	x0, 4108c0 <ferror@plt+0xdb90>
  410860:	mov	x19, x0
  410864:	mov	x20, x1
  410868:	add	x0, sp, #0x48
  41086c:	bl	40ef8c <ferror@plt+0xc25c>
  410870:	add	x0, sp, #0x100
  410874:	str	x0, [sp, #40]
  410878:	str	x0, [sp, #48]
  41087c:	add	x0, sp, #0xd0
  410880:	str	x0, [sp, #56]
  410884:	mov	w0, #0xffffffd0            	// #-48
  410888:	str	w0, [sp, #64]
  41088c:	mov	w0, #0xffffff80            	// #-128
  410890:	str	w0, [sp, #68]
  410894:	mov	w4, #0x8                   	// #8
  410898:	add	x3, sp, #0x28
  41089c:	mov	x2, x20
  4108a0:	mov	w1, #0xffffffff            	// #-1
  4108a4:	mov	x0, x19
  4108a8:	bl	40f840 <ferror@plt+0xcb10>
  4108ac:	add	x0, sp, #0x48
  4108b0:	bl	40efa4 <ferror@plt+0xc274>
  4108b4:	ldp	x19, x20, [sp, #16]
  4108b8:	ldp	x29, x30, [sp], #256
  4108bc:	ret
  4108c0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4108c4:	add	x2, x2, #0x5a0
  4108c8:	mov	w1, #0x4dc                 	// #1244
  4108cc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4108d0:	add	x0, x0, #0x428
  4108d4:	bl	4102b4 <ferror@plt+0xd584>
  4108d8:	stp	x29, x30, [sp, #-272]!
  4108dc:	mov	x29, sp
  4108e0:	stp	x19, x20, [sp, #16]
  4108e4:	str	x21, [sp, #32]
  4108e8:	str	x3, [sp, #232]
  4108ec:	str	x4, [sp, #240]
  4108f0:	str	x5, [sp, #248]
  4108f4:	str	x6, [sp, #256]
  4108f8:	str	x7, [sp, #264]
  4108fc:	str	q0, [sp, #96]
  410900:	str	q1, [sp, #112]
  410904:	str	q2, [sp, #128]
  410908:	str	q3, [sp, #144]
  41090c:	str	q4, [sp, #160]
  410910:	str	q5, [sp, #176]
  410914:	str	q6, [sp, #192]
  410918:	str	q7, [sp, #208]
  41091c:	cbz	x0, 410990 <ferror@plt+0xdc60>
  410920:	mov	x19, x0
  410924:	mov	w20, w1
  410928:	mov	x21, x2
  41092c:	add	x0, sp, #0x58
  410930:	bl	40ef8c <ferror@plt+0xc25c>
  410934:	add	x0, sp, #0x110
  410938:	str	x0, [sp, #56]
  41093c:	str	x0, [sp, #64]
  410940:	add	x0, sp, #0xe0
  410944:	str	x0, [sp, #72]
  410948:	mov	w0, #0xffffffd8            	// #-40
  41094c:	str	w0, [sp, #80]
  410950:	mov	w0, #0xffffff80            	// #-128
  410954:	str	w0, [sp, #84]
  410958:	mov	w4, #0x6                   	// #6
  41095c:	add	x3, sp, #0x38
  410960:	mov	x2, x21
  410964:	mov	w1, w20
  410968:	mov	x0, x19
  41096c:	bl	40f840 <ferror@plt+0xcb10>
  410970:	mov	w19, w0
  410974:	add	x0, sp, #0x58
  410978:	bl	40efa4 <ferror@plt+0xc274>
  41097c:	mov	w0, w19
  410980:	ldp	x19, x20, [sp, #16]
  410984:	ldr	x21, [sp, #32]
  410988:	ldp	x29, x30, [sp], #272
  41098c:	ret
  410990:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410994:	add	x2, x2, #0x5a8
  410998:	mov	w1, #0x518                 	// #1304
  41099c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4109a0:	add	x0, x0, #0x428
  4109a4:	bl	4102b4 <ferror@plt+0xd584>
  4109a8:	stp	x29, x30, [sp, #-272]!
  4109ac:	mov	x29, sp
  4109b0:	stp	x19, x20, [sp, #16]
  4109b4:	str	x21, [sp, #32]
  4109b8:	str	x3, [sp, #232]
  4109bc:	str	x4, [sp, #240]
  4109c0:	str	x5, [sp, #248]
  4109c4:	str	x6, [sp, #256]
  4109c8:	str	x7, [sp, #264]
  4109cc:	str	q0, [sp, #96]
  4109d0:	str	q1, [sp, #112]
  4109d4:	str	q2, [sp, #128]
  4109d8:	str	q3, [sp, #144]
  4109dc:	str	q4, [sp, #160]
  4109e0:	str	q5, [sp, #176]
  4109e4:	str	q6, [sp, #192]
  4109e8:	str	q7, [sp, #208]
  4109ec:	cbz	x0, 410a60 <ferror@plt+0xdd30>
  4109f0:	mov	x19, x0
  4109f4:	mov	w20, w1
  4109f8:	mov	x21, x2
  4109fc:	add	x0, sp, #0x58
  410a00:	bl	40ef8c <ferror@plt+0xc25c>
  410a04:	add	x0, sp, #0x110
  410a08:	str	x0, [sp, #56]
  410a0c:	str	x0, [sp, #64]
  410a10:	add	x0, sp, #0xe0
  410a14:	str	x0, [sp, #72]
  410a18:	mov	w0, #0xffffffd8            	// #-40
  410a1c:	str	w0, [sp, #80]
  410a20:	mov	w0, #0xffffff80            	// #-128
  410a24:	str	w0, [sp, #84]
  410a28:	mov	w4, #0xa                   	// #10
  410a2c:	add	x3, sp, #0x38
  410a30:	mov	x2, x21
  410a34:	mov	w1, w20
  410a38:	mov	x0, x19
  410a3c:	bl	40f840 <ferror@plt+0xcb10>
  410a40:	mov	w19, w0
  410a44:	add	x0, sp, #0x58
  410a48:	bl	40efa4 <ferror@plt+0xc274>
  410a4c:	mov	w0, w19
  410a50:	ldp	x19, x20, [sp, #16]
  410a54:	ldr	x21, [sp, #32]
  410a58:	ldp	x29, x30, [sp], #272
  410a5c:	ret
  410a60:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410a64:	add	x2, x2, #0x5b8
  410a68:	mov	w1, #0x565                 	// #1381
  410a6c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410a70:	add	x0, x0, #0x428
  410a74:	bl	4102b4 <ferror@plt+0xd584>
  410a78:	stp	x29, x30, [sp, #-256]!
  410a7c:	mov	x29, sp
  410a80:	stp	x19, x20, [sp, #16]
  410a84:	str	x2, [sp, #208]
  410a88:	str	x3, [sp, #216]
  410a8c:	str	x4, [sp, #224]
  410a90:	str	x5, [sp, #232]
  410a94:	str	x6, [sp, #240]
  410a98:	str	x7, [sp, #248]
  410a9c:	str	q0, [sp, #80]
  410aa0:	str	q1, [sp, #96]
  410aa4:	str	q2, [sp, #112]
  410aa8:	str	q3, [sp, #128]
  410aac:	str	q4, [sp, #144]
  410ab0:	str	q5, [sp, #160]
  410ab4:	str	q6, [sp, #176]
  410ab8:	str	q7, [sp, #192]
  410abc:	cbz	x0, 410b28 <ferror@plt+0xddf8>
  410ac0:	mov	x19, x0
  410ac4:	mov	x20, x1
  410ac8:	add	x0, sp, #0x48
  410acc:	bl	40ef8c <ferror@plt+0xc25c>
  410ad0:	add	x0, sp, #0x100
  410ad4:	str	x0, [sp, #40]
  410ad8:	str	x0, [sp, #48]
  410adc:	add	x0, sp, #0xd0
  410ae0:	str	x0, [sp, #56]
  410ae4:	mov	w0, #0xffffffd0            	// #-48
  410ae8:	str	w0, [sp, #64]
  410aec:	mov	w0, #0xffffff80            	// #-128
  410af0:	str	w0, [sp, #68]
  410af4:	mov	w4, #0xb                   	// #11
  410af8:	add	x3, sp, #0x28
  410afc:	mov	x2, x20
  410b00:	mov	w1, #0xffffffff            	// #-1
  410b04:	mov	x0, x19
  410b08:	bl	40f840 <ferror@plt+0xcb10>
  410b0c:	mov	w19, w0
  410b10:	add	x0, sp, #0x48
  410b14:	bl	40efa4 <ferror@plt+0xc274>
  410b18:	mov	w0, w19
  410b1c:	ldp	x19, x20, [sp, #16]
  410b20:	ldp	x29, x30, [sp], #256
  410b24:	ret
  410b28:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410b2c:	add	x2, x2, #0x5c0
  410b30:	mov	w1, #0x587                 	// #1415
  410b34:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410b38:	add	x0, x0, #0x428
  410b3c:	bl	4102b4 <ferror@plt+0xd584>
  410b40:	stp	x29, x30, [sp, #-256]!
  410b44:	mov	x29, sp
  410b48:	stp	x19, x20, [sp, #16]
  410b4c:	str	x2, [sp, #208]
  410b50:	str	x3, [sp, #216]
  410b54:	str	x4, [sp, #224]
  410b58:	str	x5, [sp, #232]
  410b5c:	str	x6, [sp, #240]
  410b60:	str	x7, [sp, #248]
  410b64:	str	q0, [sp, #80]
  410b68:	str	q1, [sp, #96]
  410b6c:	str	q2, [sp, #112]
  410b70:	str	q3, [sp, #128]
  410b74:	str	q4, [sp, #144]
  410b78:	str	q5, [sp, #160]
  410b7c:	str	q6, [sp, #176]
  410b80:	str	q7, [sp, #192]
  410b84:	cbz	x0, 410be8 <ferror@plt+0xdeb8>
  410b88:	mov	x19, x0
  410b8c:	mov	x20, x1
  410b90:	add	x0, sp, #0x48
  410b94:	bl	40ef8c <ferror@plt+0xc25c>
  410b98:	add	x0, sp, #0x100
  410b9c:	str	x0, [sp, #40]
  410ba0:	str	x0, [sp, #48]
  410ba4:	add	x0, sp, #0xd0
  410ba8:	str	x0, [sp, #56]
  410bac:	mov	w0, #0xffffffd0            	// #-48
  410bb0:	str	w0, [sp, #64]
  410bb4:	mov	w0, #0xffffff80            	// #-128
  410bb8:	str	w0, [sp, #68]
  410bbc:	mov	w4, #0x4                   	// #4
  410bc0:	add	x3, sp, #0x28
  410bc4:	mov	x2, x20
  410bc8:	mov	w1, #0xffffffff            	// #-1
  410bcc:	mov	x0, x19
  410bd0:	bl	40f840 <ferror@plt+0xcb10>
  410bd4:	add	x0, sp, #0x48
  410bd8:	bl	40efa4 <ferror@plt+0xc274>
  410bdc:	ldp	x19, x20, [sp, #16]
  410be0:	ldp	x29, x30, [sp], #256
  410be4:	ret
  410be8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410bec:	add	x2, x2, #0x5d0
  410bf0:	mov	w1, #0x5be                 	// #1470
  410bf4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410bf8:	add	x0, x0, #0x428
  410bfc:	bl	4102b4 <ferror@plt+0xd584>
  410c00:	stp	x29, x30, [sp, #-416]!
  410c04:	mov	x29, sp
  410c08:	stp	x19, x20, [sp, #16]
  410c0c:	mov	w20, w0
  410c10:	mov	x19, x1
  410c14:	str	x2, [sp, #368]
  410c18:	str	x3, [sp, #376]
  410c1c:	str	x4, [sp, #384]
  410c20:	str	x5, [sp, #392]
  410c24:	str	x6, [sp, #400]
  410c28:	str	x7, [sp, #408]
  410c2c:	str	q0, [sp, #240]
  410c30:	str	q1, [sp, #256]
  410c34:	str	q2, [sp, #272]
  410c38:	str	q3, [sp, #288]
  410c3c:	str	q4, [sp, #304]
  410c40:	str	q5, [sp, #320]
  410c44:	str	q6, [sp, #336]
  410c48:	str	q7, [sp, #352]
  410c4c:	add	x0, sp, #0xe8
  410c50:	bl	40ef8c <ferror@plt+0xc25c>
  410c54:	add	x0, sp, #0x1a0
  410c58:	str	x0, [sp, #200]
  410c5c:	str	x0, [sp, #208]
  410c60:	add	x0, sp, #0x170
  410c64:	str	x0, [sp, #216]
  410c68:	mov	w0, #0xffffffd0            	// #-48
  410c6c:	str	w0, [sp, #224]
  410c70:	mov	w0, #0xffffff80            	// #-128
  410c74:	str	w0, [sp, #228]
  410c78:	mov	x3, #0x0                   	// #0
  410c7c:	mov	w2, w20
  410c80:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410c84:	ldr	x1, [x0, #2416]
  410c88:	add	x0, sp, #0x20
  410c8c:	bl	434390 <ferror@plt+0x31660>
  410c90:	mov	w4, #0x2                   	// #2
  410c94:	add	x3, sp, #0xc8
  410c98:	mov	x2, x19
  410c9c:	mov	w1, #0xffffffff            	// #-1
  410ca0:	add	x0, sp, #0x20
  410ca4:	bl	40f840 <ferror@plt+0xcb10>
  410ca8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410cac:	add	x2, x2, #0x5e0
  410cb0:	mov	w1, #0x5f6                 	// #1526
  410cb4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410cb8:	add	x0, x0, #0x428
  410cbc:	bl	4102b4 <ferror@plt+0xd584>
  410cc0:	stp	x29, x30, [sp, #-432]!
  410cc4:	mov	x29, sp
  410cc8:	str	x19, [sp, #16]
  410ccc:	mov	x19, x0
  410cd0:	str	x1, [sp, #376]
  410cd4:	str	x2, [sp, #384]
  410cd8:	str	x3, [sp, #392]
  410cdc:	str	x4, [sp, #400]
  410ce0:	str	x5, [sp, #408]
  410ce4:	str	x6, [sp, #416]
  410ce8:	str	x7, [sp, #424]
  410cec:	str	q0, [sp, #240]
  410cf0:	str	q1, [sp, #256]
  410cf4:	str	q2, [sp, #272]
  410cf8:	str	q3, [sp, #288]
  410cfc:	str	q4, [sp, #304]
  410d00:	str	q5, [sp, #320]
  410d04:	str	q6, [sp, #336]
  410d08:	str	q7, [sp, #352]
  410d0c:	add	x0, sp, #0xe8
  410d10:	bl	40ef8c <ferror@plt+0xc25c>
  410d14:	add	x0, sp, #0x1b0
  410d18:	str	x0, [sp, #200]
  410d1c:	str	x0, [sp, #208]
  410d20:	add	x0, sp, #0x170
  410d24:	str	x0, [sp, #216]
  410d28:	mov	w0, #0xffffffc8            	// #-56
  410d2c:	str	w0, [sp, #224]
  410d30:	mov	w0, #0xffffff80            	// #-128
  410d34:	str	w0, [sp, #228]
  410d38:	mov	x3, #0x0                   	// #0
  410d3c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410d40:	ldr	w2, [x0, #2440]
  410d44:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410d48:	ldr	x1, [x0, #2416]
  410d4c:	add	x0, sp, #0x20
  410d50:	bl	434390 <ferror@plt+0x31660>
  410d54:	mov	w4, #0xd                   	// #13
  410d58:	add	x3, sp, #0xc8
  410d5c:	mov	x2, x19
  410d60:	mov	w1, #0xffffffff            	// #-1
  410d64:	add	x0, sp, #0x20
  410d68:	bl	40f840 <ferror@plt+0xcb10>
  410d6c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410d70:	add	x2, x2, #0x5f0
  410d74:	mov	w1, #0x617                 	// #1559
  410d78:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410d7c:	add	x0, x0, #0x428
  410d80:	bl	4102b4 <ferror@plt+0xd584>
  410d84:	stp	x29, x30, [sp, #-112]!
  410d88:	mov	x29, sp
  410d8c:	stp	x19, x20, [sp, #16]
  410d90:	stp	x21, x22, [sp, #32]
  410d94:	mov	x21, x0
  410d98:	mov	w22, w1
  410d9c:	mov	x0, x3
  410da0:	mov	x1, x4
  410da4:	mov	x20, x5
  410da8:	mov	w19, w6
  410dac:	bl	402640 <ngettext@plt>
  410db0:	mov	w4, w19
  410db4:	mov	x3, x21
  410db8:	mov	x2, x20
  410dbc:	mov	x1, x0
  410dc0:	add	x0, sp, #0x30
  410dc4:	bl	4102e4 <ferror@plt+0xd5b4>
  410dc8:	cmp	w19, #0x6
  410dcc:	b.eq	410df0 <ferror@plt+0xe0c0>  // b.none
  410dd0:	add	x1, sp, #0x30
  410dd4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410dd8:	ldr	x0, [x0, #944]
  410ddc:	bl	40f268 <ferror@plt+0xc538>
  410de0:	ldp	x19, x20, [sp, #16]
  410de4:	ldp	x21, x22, [sp, #32]
  410de8:	ldp	x29, x30, [sp], #112
  410dec:	ret
  410df0:	str	w22, [sp, #108]
  410df4:	b	410dd0 <ferror@plt+0xe0a0>
  410df8:	stp	x29, x30, [sp, #-416]!
  410dfc:	mov	x29, sp
  410e00:	stp	x19, x20, [sp, #16]
  410e04:	stp	x21, x22, [sp, #32]
  410e08:	mov	w22, w0
  410e0c:	mov	x19, x1
  410e10:	mov	x20, x2
  410e14:	mov	x21, x3
  410e18:	str	x4, [sp, #384]
  410e1c:	str	x5, [sp, #392]
  410e20:	str	x6, [sp, #400]
  410e24:	str	x7, [sp, #408]
  410e28:	str	q0, [sp, #256]
  410e2c:	str	q1, [sp, #272]
  410e30:	str	q2, [sp, #288]
  410e34:	str	q3, [sp, #304]
  410e38:	str	q4, [sp, #320]
  410e3c:	str	q5, [sp, #336]
  410e40:	str	q6, [sp, #352]
  410e44:	str	q7, [sp, #368]
  410e48:	add	x0, sp, #0x1a0
  410e4c:	str	x0, [sp, #224]
  410e50:	str	x0, [sp, #232]
  410e54:	add	x0, sp, #0x180
  410e58:	str	x0, [sp, #240]
  410e5c:	mov	w0, #0xffffffe0            	// #-32
  410e60:	str	w0, [sp, #248]
  410e64:	mov	w0, #0xffffff80            	// #-128
  410e68:	str	w0, [sp, #252]
  410e6c:	add	x0, sp, #0xd8
  410e70:	bl	40ef8c <ferror@plt+0xc25c>
  410e74:	mov	x3, #0x0                   	// #0
  410e78:	mov	w2, w22
  410e7c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  410e80:	ldr	x1, [x0, #2416]
  410e84:	add	x0, sp, #0x30
  410e88:	bl	434390 <ferror@plt+0x31660>
  410e8c:	mov	w6, #0x8                   	// #8
  410e90:	add	x5, sp, #0xe0
  410e94:	mov	x4, x21
  410e98:	mov	x3, x20
  410e9c:	mov	x2, x19
  410ea0:	mov	w1, #0xffffffff            	// #-1
  410ea4:	add	x0, sp, #0x30
  410ea8:	bl	410d84 <ferror@plt+0xe054>
  410eac:	add	x0, sp, #0x30
  410eb0:	bl	434120 <ferror@plt+0x313f0>
  410eb4:	add	x0, sp, #0xd8
  410eb8:	bl	40efa4 <ferror@plt+0xc274>
  410ebc:	ldp	x19, x20, [sp, #16]
  410ec0:	ldp	x21, x22, [sp, #32]
  410ec4:	ldp	x29, x30, [sp], #416
  410ec8:	ret
  410ecc:	stp	x29, x30, [sp, #-272]!
  410ed0:	mov	x29, sp
  410ed4:	stp	x19, x20, [sp, #16]
  410ed8:	stp	x21, x22, [sp, #32]
  410edc:	str	x23, [sp, #48]
  410ee0:	str	x5, [sp, #248]
  410ee4:	str	x6, [sp, #256]
  410ee8:	str	x7, [sp, #264]
  410eec:	str	q0, [sp, #112]
  410ef0:	str	q1, [sp, #128]
  410ef4:	str	q2, [sp, #144]
  410ef8:	str	q3, [sp, #160]
  410efc:	str	q4, [sp, #176]
  410f00:	str	q5, [sp, #192]
  410f04:	str	q6, [sp, #208]
  410f08:	str	q7, [sp, #224]
  410f0c:	cbz	x0, 410f94 <ferror@plt+0xe264>
  410f10:	mov	x19, x0
  410f14:	mov	w20, w1
  410f18:	mov	x21, x2
  410f1c:	mov	x22, x3
  410f20:	mov	x23, x4
  410f24:	add	x0, sp, #0x68
  410f28:	bl	40ef8c <ferror@plt+0xc25c>
  410f2c:	add	x0, sp, #0x110
  410f30:	str	x0, [sp, #72]
  410f34:	str	x0, [sp, #80]
  410f38:	add	x0, sp, #0xf0
  410f3c:	str	x0, [sp, #88]
  410f40:	mov	w0, #0xffffffe8            	// #-24
  410f44:	str	w0, [sp, #96]
  410f48:	mov	w0, #0xffffff80            	// #-128
  410f4c:	str	w0, [sp, #100]
  410f50:	mov	w6, #0x6                   	// #6
  410f54:	add	x5, sp, #0x48
  410f58:	mov	x4, x23
  410f5c:	mov	x3, x22
  410f60:	mov	x2, x21
  410f64:	mov	w1, w20
  410f68:	mov	x0, x19
  410f6c:	bl	410d84 <ferror@plt+0xe054>
  410f70:	mov	w19, w0
  410f74:	add	x0, sp, #0x68
  410f78:	bl	40efa4 <ferror@plt+0xc274>
  410f7c:	mov	w0, w19
  410f80:	ldp	x19, x20, [sp, #16]
  410f84:	ldp	x21, x22, [sp, #32]
  410f88:	ldr	x23, [sp, #48]
  410f8c:	ldp	x29, x30, [sp], #272
  410f90:	ret
  410f94:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410f98:	add	x2, x2, #0x610
  410f9c:	mov	w1, #0x528                 	// #1320
  410fa0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  410fa4:	add	x0, x0, #0x428
  410fa8:	bl	4102b4 <ferror@plt+0xd584>
  410fac:	stp	x29, x30, [sp, #-432]!
  410fb0:	mov	x29, sp
  410fb4:	stp	x19, x20, [sp, #16]
  410fb8:	stp	x21, x22, [sp, #32]
  410fbc:	str	x23, [sp, #48]
  410fc0:	mov	w23, w0
  410fc4:	mov	w19, w1
  410fc8:	mov	x20, x2
  410fcc:	mov	x21, x3
  410fd0:	mov	x22, x4
  410fd4:	str	x5, [sp, #408]
  410fd8:	str	x6, [sp, #416]
  410fdc:	str	x7, [sp, #424]
  410fe0:	str	q0, [sp, #272]
  410fe4:	str	q1, [sp, #288]
  410fe8:	str	q2, [sp, #304]
  410fec:	str	q3, [sp, #320]
  410ff0:	str	q4, [sp, #336]
  410ff4:	str	q5, [sp, #352]
  410ff8:	str	q6, [sp, #368]
  410ffc:	str	q7, [sp, #384]
  411000:	add	x0, sp, #0x108
  411004:	bl	40ef8c <ferror@plt+0xc25c>
  411008:	add	x0, sp, #0x1b0
  41100c:	str	x0, [sp, #232]
  411010:	str	x0, [sp, #240]
  411014:	add	x0, sp, #0x190
  411018:	str	x0, [sp, #248]
  41101c:	mov	w0, #0xffffffe8            	// #-24
  411020:	str	w0, [sp, #256]
  411024:	mov	w0, #0xffffff80            	// #-128
  411028:	str	w0, [sp, #260]
  41102c:	mov	x3, #0x0                   	// #0
  411030:	mov	w2, w23
  411034:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411038:	ldr	x1, [x0, #2416]
  41103c:	add	x0, sp, #0x40
  411040:	bl	434390 <ferror@plt+0x31660>
  411044:	mov	w6, #0x6                   	// #6
  411048:	add	x5, sp, #0xe8
  41104c:	mov	x4, x22
  411050:	mov	x3, x21
  411054:	mov	x2, x20
  411058:	mov	w1, w19
  41105c:	add	x0, sp, #0x40
  411060:	bl	410d84 <ferror@plt+0xe054>
  411064:	mov	w19, w0
  411068:	add	x0, sp, #0x40
  41106c:	bl	434120 <ferror@plt+0x313f0>
  411070:	add	x0, sp, #0x108
  411074:	bl	40efa4 <ferror@plt+0xc274>
  411078:	mov	w0, w19
  41107c:	ldp	x19, x20, [sp, #16]
  411080:	ldp	x21, x22, [sp, #32]
  411084:	ldr	x23, [sp, #48]
  411088:	ldp	x29, x30, [sp], #432
  41108c:	ret
  411090:	stp	x29, x30, [sp, #-416]!
  411094:	mov	x29, sp
  411098:	stp	x19, x20, [sp, #16]
  41109c:	stp	x21, x22, [sp, #32]
  4110a0:	mov	w22, w0
  4110a4:	mov	x19, x1
  4110a8:	mov	x20, x2
  4110ac:	mov	x21, x3
  4110b0:	str	x4, [sp, #384]
  4110b4:	str	x5, [sp, #392]
  4110b8:	str	x6, [sp, #400]
  4110bc:	str	x7, [sp, #408]
  4110c0:	str	q0, [sp, #256]
  4110c4:	str	q1, [sp, #272]
  4110c8:	str	q2, [sp, #288]
  4110cc:	str	q3, [sp, #304]
  4110d0:	str	q4, [sp, #320]
  4110d4:	str	q5, [sp, #336]
  4110d8:	str	q6, [sp, #352]
  4110dc:	str	q7, [sp, #368]
  4110e0:	add	x0, sp, #0xf8
  4110e4:	bl	40ef8c <ferror@plt+0xc25c>
  4110e8:	add	x0, sp, #0x1a0
  4110ec:	str	x0, [sp, #216]
  4110f0:	str	x0, [sp, #224]
  4110f4:	add	x0, sp, #0x180
  4110f8:	str	x0, [sp, #232]
  4110fc:	mov	w0, #0xffffffe0            	// #-32
  411100:	str	w0, [sp, #240]
  411104:	mov	w0, #0xffffff80            	// #-128
  411108:	str	w0, [sp, #244]
  41110c:	mov	x3, #0x0                   	// #0
  411110:	mov	w2, w22
  411114:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411118:	ldr	x1, [x0, #2416]
  41111c:	add	x0, sp, #0x30
  411120:	bl	434390 <ferror@plt+0x31660>
  411124:	mov	w6, #0x4                   	// #4
  411128:	add	x5, sp, #0xd8
  41112c:	mov	x4, x21
  411130:	mov	x3, x20
  411134:	mov	x2, x19
  411138:	mov	w1, #0xffffffff            	// #-1
  41113c:	add	x0, sp, #0x30
  411140:	bl	410d84 <ferror@plt+0xe054>
  411144:	add	x0, sp, #0x30
  411148:	bl	434120 <ferror@plt+0x313f0>
  41114c:	add	x0, sp, #0xf8
  411150:	bl	40efa4 <ferror@plt+0xc274>
  411154:	ldp	x19, x20, [sp, #16]
  411158:	ldp	x21, x22, [sp, #32]
  41115c:	ldp	x29, x30, [sp], #416
  411160:	ret
  411164:	cbz	x1, 411268 <ferror@plt+0xe538>
  411168:	stp	x29, x30, [sp, #-64]!
  41116c:	mov	x29, sp
  411170:	stp	x19, x20, [sp, #16]
  411174:	stp	x21, x22, [sp, #32]
  411178:	str	x23, [sp, #48]
  41117c:	mov	x22, x0
  411180:	mov	x19, x1
  411184:	ldr	x1, [x0, #16]
  411188:	cbz	x1, 411194 <ferror@plt+0xe464>
  41118c:	ldr	x0, [x19]
  411190:	blr	x1
  411194:	ldr	x1, [x22, #24]
  411198:	cbz	x1, 4111a4 <ferror@plt+0xe474>
  41119c:	ldr	x0, [x19, #8]
  4111a0:	blr	x1
  4111a4:	str	xzr, [x19, #32]
  4111a8:	mov	x21, #0x0                   	// #0
  4111ac:	mov	x23, #0x28                  	// #40
  4111b0:	b	4111ec <ferror@plt+0xe4bc>
  4111b4:	cbz	x21, 411254 <ferror@plt+0xe524>
  4111b8:	mov	x0, x21
  4111bc:	mov	x21, x20
  4111c0:	mov	x20, x0
  4111c4:	b	4111e8 <ferror@plt+0xe4b8>
  4111c8:	ldr	x0, [x19, #24]
  4111cc:	str	x21, [x0, #32]
  4111d0:	ldr	x21, [x19, #24]
  4111d4:	ldr	x20, [x19, #32]
  4111d8:	mov	x1, x23
  4111dc:	mov	x0, x19
  4111e0:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  4111e4:	cbz	x20, 4111b4 <ferror@plt+0xe484>
  4111e8:	mov	x19, x20
  4111ec:	ldr	x0, [x19, #16]
  4111f0:	cbz	x0, 411224 <ferror@plt+0xe4f4>
  4111f4:	ldr	x1, [x22, #16]
  4111f8:	cbz	x1, 411204 <ferror@plt+0xe4d4>
  4111fc:	ldr	x0, [x0]
  411200:	blr	x1
  411204:	ldr	x1, [x22, #24]
  411208:	cbz	x1, 411218 <ferror@plt+0xe4e8>
  41120c:	ldr	x0, [x19, #16]
  411210:	ldr	x0, [x0, #8]
  411214:	blr	x1
  411218:	ldr	x0, [x19, #16]
  41121c:	str	x21, [x0, #32]
  411220:	ldr	x21, [x19, #16]
  411224:	ldr	x0, [x19, #24]
  411228:	cbz	x0, 4111d4 <ferror@plt+0xe4a4>
  41122c:	ldr	x1, [x22, #16]
  411230:	cbz	x1, 41123c <ferror@plt+0xe50c>
  411234:	ldr	x0, [x0]
  411238:	blr	x1
  41123c:	ldr	x1, [x22, #24]
  411240:	cbz	x1, 4111c8 <ferror@plt+0xe498>
  411244:	ldr	x0, [x19, #24]
  411248:	ldr	x0, [x0, #8]
  41124c:	blr	x1
  411250:	b	4111c8 <ferror@plt+0xe498>
  411254:	ldp	x19, x20, [sp, #16]
  411258:	ldp	x21, x22, [sp, #32]
  41125c:	ldr	x23, [sp, #48]
  411260:	ldp	x29, x30, [sp], #64
  411264:	ret
  411268:	ret
  41126c:	stp	x29, x30, [sp, #-96]!
  411270:	mov	x29, sp
  411274:	stp	x21, x22, [sp, #32]
  411278:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41127c:	add	x0, x0, #0x880
  411280:	bl	402c50 <getenv@plt>
  411284:	cbz	x0, 41141c <ferror@plt+0xe6ec>
  411288:	stp	x23, x24, [sp, #48]
  41128c:	mov	x23, x0
  411290:	ldrb	w0, [x0]
  411294:	mov	w21, #0x0                   	// #0
  411298:	cbz	w0, 411424 <ferror@plt+0xe6f4>
  41129c:	stp	x19, x20, [sp, #16]
  4112a0:	stp	x25, x26, [sp, #64]
  4112a4:	stp	x27, x28, [sp, #80]
  4112a8:	mov	x22, x23
  4112ac:	mov	x26, #0x0                   	// #0
  4112b0:	mov	x20, #0x0                   	// #0
  4112b4:	mov	x24, #0x0                   	// #0
  4112b8:	mov	w28, #0x5b1b                	// #23323
  4112bc:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4112c0:	add	x27, x27, #0x890
  4112c4:	b	411344 <ferror@plt+0xe614>
  4112c8:	cbz	x24, 4112e8 <ferror@plt+0xe5b8>
  4112cc:	sub	x26, x22, x24
  4112d0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4112d4:	ldr	x0, [x0, #952]
  4112d8:	cbz	x0, 41139c <ferror@plt+0xe66c>
  4112dc:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4112e0:	add	x19, x19, #0x3b8
  4112e4:	b	411304 <ferror@plt+0xe5d4>
  4112e8:	sub	x20, x22, x23
  4112ec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4112f0:	ldr	x0, [x0, #952]
  4112f4:	cbnz	x0, 4112dc <ferror@plt+0xe5ac>
  4112f8:	b	411330 <ferror@plt+0xe600>
  4112fc:	ldr	x0, [x19, #24]!
  411300:	cbz	x0, 411320 <ferror@plt+0xe5f0>
  411304:	ldrb	w1, [x19, #16]
  411308:	cmp	x1, x20
  41130c:	b.ne	4112fc <ferror@plt+0xe5cc>  // b.any
  411310:	mov	x2, x20
  411314:	mov	x1, x23
  411318:	bl	4029e0 <memcmp@plt>
  41131c:	cbnz	w0, 4112fc <ferror@plt+0xe5cc>
  411320:	ldr	x0, [x19, #8]
  411324:	cmp	x24, #0x0
  411328:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41132c:	b.ne	4113a8 <ferror@plt+0xe678>  // b.any
  411330:	ldrb	w0, [x25]
  411334:	cbz	w0, 411438 <ferror@plt+0xe708>
  411338:	add	x23, x22, #0x1
  41133c:	mov	x24, #0x0                   	// #0
  411340:	add	x22, x22, #0x1
  411344:	mov	x25, x22
  411348:	ldrb	w0, [x22]
  41134c:	cmp	w0, #0x0
  411350:	cset	w21, eq  // eq = none
  411354:	cmp	w0, #0x3a
  411358:	csinc	w21, w21, wzr, ne  // ne = any
  41135c:	cbnz	w21, 4112c8 <ferror@plt+0xe598>
  411360:	cmp	w0, #0x3d
  411364:	b.eq	4113fc <ferror@plt+0xe6cc>  // b.none
  411368:	cbz	x24, 411340 <ferror@plt+0xe610>
  41136c:	cmp	w0, #0x3b
  411370:	b.eq	411340 <ferror@plt+0xe610>  // b.none
  411374:	sub	w0, w0, #0x30
  411378:	and	w0, w0, #0xff
  41137c:	cmp	w0, #0x9
  411380:	b.ls	411340 <ferror@plt+0xe610>  // b.plast
  411384:	mov	w21, #0x1                   	// #1
  411388:	ldp	x19, x20, [sp, #16]
  41138c:	ldp	x23, x24, [sp, #48]
  411390:	ldp	x25, x26, [sp, #64]
  411394:	ldp	x27, x28, [sp, #80]
  411398:	b	411428 <ferror@plt+0xe6f8>
  41139c:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4113a0:	add	x19, x19, #0x3b8
  4113a4:	b	411320 <ferror@plt+0xe5f0>
  4113a8:	ldrb	w1, [x19, #17]
  4113ac:	cbnz	w1, 4113f4 <ferror@plt+0xe6c4>
  4113b0:	add	x0, x26, #0x7
  4113b4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4113b8:	mov	x23, x0
  4113bc:	strh	w28, [x0], #2
  4113c0:	mov	x2, x26
  4113c4:	mov	x1, x24
  4113c8:	bl	402620 <memcpy@plt>
  4113cc:	add	x0, x26, #0x2
  4113d0:	add	x1, x23, x0
  4113d4:	ldr	w2, [x27]
  4113d8:	str	w2, [x23, x0]
  4113dc:	ldrb	w0, [x27, #4]
  4113e0:	strb	w0, [x1, #4]
  4113e4:	str	x23, [x19, #8]
  4113e8:	mov	w0, #0x1                   	// #1
  4113ec:	strb	w0, [x19, #17]
  4113f0:	b	411330 <ferror@plt+0xe600>
  4113f4:	bl	402a90 <free@plt>
  4113f8:	b	4113b0 <ferror@plt+0xe680>
  4113fc:	cmp	x22, x23
  411400:	cset	w21, eq  // eq = none
  411404:	cmp	x24, #0x0
  411408:	csinc	w21, w21, wzr, eq  // eq = none
  41140c:	cbnz	w21, 41144c <ferror@plt+0xe71c>
  411410:	sub	x20, x22, x23
  411414:	add	x24, x22, #0x1
  411418:	b	411340 <ferror@plt+0xe610>
  41141c:	mov	w21, #0x1                   	// #1
  411420:	b	411428 <ferror@plt+0xe6f8>
  411424:	ldp	x23, x24, [sp, #48]
  411428:	mov	w0, w21
  41142c:	ldp	x21, x22, [sp, #32]
  411430:	ldp	x29, x30, [sp], #96
  411434:	ret
  411438:	ldp	x19, x20, [sp, #16]
  41143c:	ldp	x23, x24, [sp, #48]
  411440:	ldp	x25, x26, [sp, #64]
  411444:	ldp	x27, x28, [sp, #80]
  411448:	b	411428 <ferror@plt+0xe6f8>
  41144c:	ldp	x19, x20, [sp, #16]
  411450:	ldp	x23, x24, [sp, #48]
  411454:	ldp	x25, x26, [sp, #64]
  411458:	ldp	x27, x28, [sp, #80]
  41145c:	b	411428 <ferror@plt+0xe6f8>
  411460:	tst	w0, #0xff
  411464:	b.eq	4114dc <ferror@plt+0xe7ac>  // b.none
  411468:	stp	x29, x30, [sp, #-48]!
  41146c:	mov	x29, sp
  411470:	stp	x19, x20, [sp, #16]
  411474:	str	x21, [sp, #32]
  411478:	mov	x21, x1
  41147c:	mov	x20, x2
  411480:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411484:	ldr	x0, [x0, #952]
  411488:	cbz	x0, 4114e8 <ferror@plt+0xe7b8>
  41148c:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411490:	add	x19, x19, #0x3b8
  411494:	b	4114a0 <ferror@plt+0xe770>
  411498:	ldr	x0, [x19, #24]!
  41149c:	cbz	x0, 4114d0 <ferror@plt+0xe7a0>
  4114a0:	ldrb	w3, [x19, #16]
  4114a4:	cmp	x3, x20
  4114a8:	b.ne	411498 <ferror@plt+0xe768>  // b.any
  4114ac:	mov	x2, x20
  4114b0:	mov	x1, x21
  4114b4:	bl	4029e0 <memcmp@plt>
  4114b8:	cbnz	w0, 411498 <ferror@plt+0xe768>
  4114bc:	ldr	x0, [x19, #8]
  4114c0:	ldp	x19, x20, [sp, #16]
  4114c4:	ldr	x21, [sp, #32]
  4114c8:	ldp	x29, x30, [sp], #48
  4114cc:	ret
  4114d0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4114d4:	add	x0, x0, #0xd70
  4114d8:	b	4114c0 <ferror@plt+0xe790>
  4114dc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4114e0:	add	x0, x0, #0xd70
  4114e4:	ret
  4114e8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4114ec:	add	x0, x0, #0xd70
  4114f0:	b	4114c0 <ferror@plt+0xe790>
  4114f4:	ands	w2, w0, #0xff
  4114f8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4114fc:	add	x1, x1, #0xd70
  411500:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  411504:	add	x0, x0, #0x30
  411508:	csel	x0, x0, x1, ne  // ne = any
  41150c:	ret
  411510:	stp	x29, x30, [sp, #-16]!
  411514:	mov	x29, sp
  411518:	cmp	w0, #0x1
  41151c:	b.eq	41157c <ferror@plt+0xe84c>  // b.none
  411520:	cmp	w0, #0x2
  411524:	b.ne	411568 <ferror@plt+0xe838>  // b.any
  411528:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41152c:	add	x0, x0, #0x898
  411530:	bl	402c50 <getenv@plt>
  411534:	mov	w2, #0x0                   	// #0
  411538:	cbz	x0, 411570 <ferror@plt+0xe840>
  41153c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411540:	add	x1, x1, #0x8a0
  411544:	bl	402a20 <strcmp@plt>
  411548:	mov	w2, #0x0                   	// #0
  41154c:	cbz	w0, 411570 <ferror@plt+0xe840>
  411550:	mov	w0, #0x2                   	// #2
  411554:	bl	402b90 <isatty@plt>
  411558:	cbz	w0, 4115a0 <ferror@plt+0xe870>
  41155c:	bl	41126c <ferror@plt+0xe53c>
  411560:	and	w2, w0, #0xff
  411564:	b	411570 <ferror@plt+0xe840>
  411568:	mov	w2, #0x0                   	// #0
  41156c:	cbnz	w0, 411588 <ferror@plt+0xe858>
  411570:	mov	w0, w2
  411574:	ldp	x29, x30, [sp], #16
  411578:	ret
  41157c:	bl	41126c <ferror@plt+0xe53c>
  411580:	and	w2, w0, #0xff
  411584:	b	411570 <ferror@plt+0xe840>
  411588:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41158c:	add	x2, x2, #0x8a8
  411590:	mov	w1, #0xec                  	// #236
  411594:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411598:	add	x0, x0, #0x8b8
  41159c:	bl	4102b4 <ferror@plt+0xd584>
  4115a0:	mov	w2, #0x0                   	// #0
  4115a4:	b	411570 <ferror@plt+0xe840>
  4115a8:	ldr	w2, [x0]
  4115ac:	ldr	w3, [x1]
  4115b0:	subs	x2, x2, x3
  4115b4:	b.ne	4115d0 <ferror@plt+0xe8a0>  // b.any
  4115b8:	ldr	w0, [x0, #4]
  4115bc:	ldr	w1, [x1, #4]
  4115c0:	subs	x1, x0, x1
  4115c4:	mov	w0, #0x0                   	// #0
  4115c8:	b.ne	4115e0 <ferror@plt+0xe8b0>  // b.any
  4115cc:	ret
  4115d0:	mov	w0, #0x1                   	// #1
  4115d4:	cmp	x2, #0x1
  4115d8:	cneg	w0, w0, lt  // lt = tstop
  4115dc:	b	4115cc <ferror@plt+0xe89c>
  4115e0:	mov	w0, #0xffffffff            	// #-1
  4115e4:	cmp	x1, #0x0
  4115e8:	cneg	w0, w0, gt
  4115ec:	b	4115cc <ferror@plt+0xe89c>
  4115f0:	ldr	x2, [x0]
  4115f4:	ldr	x0, [x1]
  4115f8:	ldr	w1, [x2]
  4115fc:	ldr	w0, [x0]
  411600:	sub	w0, w1, w0
  411604:	ret
  411608:	ldr	x4, [x0, #136]
  41160c:	add	x0, x4, #0x8
  411610:	mov	w2, #0x0                   	// #0
  411614:	mov	w5, #0x0                   	// #0
  411618:	b	411624 <ferror@plt+0xe8f4>
  41161c:	add	w2, w2, #0x1
  411620:	add	x0, x0, #0x8
  411624:	mov	w3, w5
  411628:	cbz	x4, 411630 <ferror@plt+0xe900>
  41162c:	ldr	w3, [x4, #4]
  411630:	cmp	w2, w3
  411634:	b.ge	411658 <ferror@plt+0xe928>  // b.tcont
  411638:	ldr	w3, [x0]
  41163c:	cmp	w1, w3
  411640:	b.cc	41161c <ferror@plt+0xe8ec>  // b.lo, b.ul, b.last
  411644:	ldr	w3, [x0, #4]
  411648:	cmp	w1, w3
  41164c:	b.hi	41161c <ferror@plt+0xe8ec>  // b.pmore
  411650:	mov	w0, #0x1                   	// #1
  411654:	ret
  411658:	mov	w0, #0x0                   	// #0
  41165c:	b	411654 <ferror@plt+0xe924>
  411660:	ldr	w2, [x0, #4]
  411664:	ldr	w3, [x1, #4]
  411668:	subs	x2, x2, x3
  41166c:	b.ne	411688 <ferror@plt+0xe958>  // b.any
  411670:	ldr	w0, [x0]
  411674:	ldr	w1, [x1]
  411678:	subs	x1, x0, x1
  41167c:	mov	w0, #0x0                   	// #0
  411680:	b.ne	411698 <ferror@plt+0xe968>  // b.any
  411684:	ret
  411688:	mov	w0, #0x1                   	// #1
  41168c:	cmp	x2, #0x1
  411690:	cneg	w0, w0, lt  // lt = tstop
  411694:	b	411684 <ferror@plt+0xe954>
  411698:	mov	w0, #0xffffffff            	// #-1
  41169c:	cmp	x1, #0x0
  4116a0:	cneg	w0, w0, gt
  4116a4:	b	411684 <ferror@plt+0xe954>
  4116a8:	ldr	x7, [x0, #120]
  4116ac:	cbz	x7, 411840 <ferror@plt+0xeb10>
  4116b0:	add	x6, x7, #0x8
  4116b4:	ldr	w8, [x7, #4]
  4116b8:	mov	w0, #0x0                   	// #0
  4116bc:	mov	w11, w0
  4116c0:	cmp	w0, w8
  4116c4:	b.eq	411860 <ferror@plt+0xeb30>  // b.none
  4116c8:	mov	x12, x6
  4116cc:	ldr	w9, [x6, #16]
  4116d0:	cmp	w9, #0x2
  4116d4:	b.eq	411854 <ferror@plt+0xeb24>  // b.none
  4116d8:	stp	x29, x30, [sp, #-16]!
  4116dc:	mov	x29, sp
  4116e0:	b	411748 <ferror@plt+0xea18>
  4116e4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4116e8:	add	x2, x2, #0x9e0
  4116ec:	mov	w1, #0x1d8                 	// #472
  4116f0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4116f4:	add	x0, x0, #0x9f0
  4116f8:	bl	4102b4 <ferror@plt+0xd584>
  4116fc:	ldr	w13, [x12, #4]
  411700:	cmp	w2, w13
  411704:	b.lt	411724 <ferror@plt+0xe9f4>  // b.tstop
  411708:	cmp	w9, w10
  41170c:	b.cc	4117a4 <ferror@plt+0xea74>  // b.lo, b.ul, b.last
  411710:	b.ne	411784 <ferror@plt+0xea54>  // b.any
  411714:	ldr	w9, [x12, #12]
  411718:	cmp	w2, w9
  41171c:	cset	w9, le
  411720:	cbnz	w9, 4117a4 <ferror@plt+0xea74>
  411724:	add	w0, w0, #0x1
  411728:	add	x6, x6, #0x28
  41172c:	mov	w11, w0
  411730:	cmp	w0, w8
  411734:	b.eq	411848 <ferror@plt+0xeb18>  // b.none
  411738:	mov	x12, x6
  41173c:	ldr	w9, [x6, #16]
  411740:	cmp	w9, #0x2
  411744:	b.eq	411724 <ferror@plt+0xe9f4>  // b.none
  411748:	ldr	w9, [x6]
  41174c:	ldr	w10, [x6, #8]
  411750:	cmp	w9, w10
  411754:	b.hi	4116e4 <ferror@plt+0xe9b4>  // b.pmore
  411758:	cmp	w1, w9
  41175c:	b.cc	411724 <ferror@plt+0xe9f4>  // b.lo, b.ul, b.last
  411760:	b.eq	4116fc <ferror@plt+0xe9cc>  // b.none
  411764:	cmp	w1, w10
  411768:	b.hi	411724 <ferror@plt+0xe9f4>  // b.pmore
  41176c:	b.cc	41179c <ferror@plt+0xea6c>  // b.lo, b.ul, b.last
  411770:	b.ne	411800 <ferror@plt+0xead0>  // b.any
  411774:	ldr	w9, [x12, #12]
  411778:	cmp	w2, w9
  41177c:	cset	w9, le
  411780:	b	411720 <ferror@plt+0xe9f0>
  411784:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411788:	add	x2, x2, #0x9e0
  41178c:	mov	w1, #0x1f3                 	// #499
  411790:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411794:	add	x0, x0, #0x9f0
  411798:	bl	4102b4 <ferror@plt+0xd584>
  41179c:	cmp	w9, w10
  4117a0:	b.eq	4117e8 <ferror@plt+0xeab8>  // b.none
  4117a4:	str	w0, [x5]
  4117a8:	strb	wzr, [x5, #4]
  4117ac:	ubfiz	x0, x11, #2, #32
  4117b0:	add	x0, x0, w11, uxtw
  4117b4:	add	x0, x7, x0, lsl #3
  4117b8:	ldr	w0, [x0, #24]
  4117bc:	cbnz	w0, 4117d8 <ferror@plt+0xeaa8>
  4117c0:	ubfiz	x0, x11, #2, #32
  4117c4:	add	x0, x0, w11, uxtw
  4117c8:	add	x0, x7, x0, lsl #3
  4117cc:	ldr	w0, [x0, #28]
  4117d0:	cmp	w0, w1
  4117d4:	b.eq	411818 <ferror@plt+0xeae8>  // b.none
  4117d8:	cmp	w2, w3
  4117dc:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  4117e0:	cset	w0, le
  4117e4:	b	41184c <ferror@plt+0xeb1c>
  4117e8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4117ec:	add	x2, x2, #0x9e0
  4117f0:	mov	w1, #0x207                 	// #519
  4117f4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4117f8:	add	x0, x0, #0x9f0
  4117fc:	bl	4102b4 <ferror@plt+0xd584>
  411800:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411804:	add	x2, x2, #0x9e0
  411808:	mov	w1, #0x20b                 	// #523
  41180c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411810:	add	x0, x0, #0x9f0
  411814:	bl	4102b4 <ferror@plt+0xd584>
  411818:	ubfiz	x0, x11, #2, #32
  41181c:	add	x11, x0, w11, uxtw
  411820:	add	x7, x7, x11, lsl #3
  411824:	ldr	w0, [x7, #32]
  411828:	cmp	w0, w2
  41182c:	b.ne	4117d8 <ferror@plt+0xeaa8>  // b.any
  411830:	mov	w0, #0x1                   	// #1
  411834:	strb	w0, [x5, #4]
  411838:	mov	w0, #0x1                   	// #1
  41183c:	b	41184c <ferror@plt+0xeb1c>
  411840:	mov	w0, #0x0                   	// #0
  411844:	ret
  411848:	mov	w0, #0x0                   	// #0
  41184c:	ldp	x29, x30, [sp], #16
  411850:	ret
  411854:	add	w0, w0, #0x1
  411858:	add	x6, x6, #0x28
  41185c:	b	4116bc <ferror@plt+0xe98c>
  411860:	mov	w0, #0x0                   	// #0
  411864:	ret
  411868:	stp	x29, x30, [sp, #-32]!
  41186c:	mov	x29, sp
  411870:	stp	x19, x20, [sp, #16]
  411874:	mov	x20, x0
  411878:	mov	x19, x1
  41187c:	mov	x0, x1
  411880:	bl	402680 <strlen@plt>
  411884:	ldr	x1, [x20]
  411888:	ldr	x3, [x1]
  41188c:	mov	x2, x0
  411890:	mov	x1, x19
  411894:	ldrb	w0, [x3, #67]
  411898:	bl	411460 <ferror@plt+0xe730>
  41189c:	ldp	x19, x20, [sp, #16]
  4118a0:	ldp	x29, x30, [sp], #32
  4118a4:	ret
  4118a8:	stp	x29, x30, [sp, #-48]!
  4118ac:	mov	x29, sp
  4118b0:	stp	x19, x20, [sp, #16]
  4118b4:	mov	x20, x0
  4118b8:	ldrb	w0, [x0, #114]
  4118bc:	cbz	w0, 411938 <ferror@plt+0xec08>
  4118c0:	stp	x21, x22, [sp, #32]
  4118c4:	and	w21, w1, #0xff
  4118c8:	ldr	w0, [x20, #144]
  4118cc:	mov	w19, #0x0                   	// #0
  4118d0:	mov	w22, #0x20                  	// #32
  4118d4:	cmp	w0, #0x3
  4118d8:	b.le	4118fc <ferror@plt+0xebcc>
  4118dc:	mov	w1, w22
  4118e0:	ldr	x0, [x20, #8]
  4118e4:	bl	416928 <ferror@plt+0x13bf8>
  4118e8:	add	w19, w19, #0x1
  4118ec:	ldr	w0, [x20, #144]
  4118f0:	sub	w0, w0, #0x3
  4118f4:	cmp	w0, w19
  4118f8:	b.gt	4118dc <ferror@plt+0xebac>
  4118fc:	ldr	w0, [x20, #144]
  411900:	cmp	w0, w19
  411904:	b.le	411924 <ferror@plt+0xebf4>
  411908:	mov	w1, w21
  41190c:	ldr	x0, [x20, #8]
  411910:	bl	416928 <ferror@plt+0x13bf8>
  411914:	add	w19, w19, #0x1
  411918:	ldr	w0, [x20, #144]
  41191c:	cmp	w0, w19
  411920:	b.gt	411908 <ferror@plt+0xebd8>
  411924:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411928:	add	x1, x1, #0xa18
  41192c:	ldr	x0, [x20, #8]
  411930:	bl	416f20 <ferror@plt+0x141f0>
  411934:	ldp	x21, x22, [sp, #32]
  411938:	ldp	x19, x20, [sp, #16]
  41193c:	ldp	x29, x30, [sp], #48
  411940:	ret
  411944:	ldr	w1, [x0, #12]
  411948:	cmn	w1, #0x1
  41194c:	b.ne	411954 <ferror@plt+0xec24>  // b.any
  411950:	ret
  411954:	stp	x29, x30, [sp, #-16]!
  411958:	mov	x29, sp
  41195c:	ldr	x2, [x0]
  411960:	ldr	x1, [x0, #48]
  411964:	ldr	x0, [x2]
  411968:	bl	416f20 <ferror@plt+0x141f0>
  41196c:	ldp	x29, x30, [sp], #16
  411970:	ret
  411974:	stp	x29, x30, [sp, #-64]!
  411978:	mov	x29, sp
  41197c:	stp	x19, x20, [sp, #16]
  411980:	stp	x21, x22, [sp, #32]
  411984:	mov	w21, w0
  411988:	mov	w19, w1
  41198c:	tbnz	w0, #31, 4119c8 <ferror@plt+0xec98>
  411990:	tbnz	w19, #31, 4119e0 <ferror@plt+0xecb0>
  411994:	cmp	w21, #0x1
  411998:	cset	w2, ls  // ls = plast
  41199c:	cmp	w19, #0x1
  4119a0:	cset	w1, ls  // ls = plast
  4119a4:	orr	w22, w2, w1
  4119a8:	cbz	w22, 4119f8 <ferror@plt+0xecc8>
  4119ac:	cmp	w21, w19
  4119b0:	cset	w22, eq  // eq = none
  4119b4:	mov	w0, w22
  4119b8:	ldp	x19, x20, [sp, #16]
  4119bc:	ldp	x21, x22, [sp, #32]
  4119c0:	ldp	x29, x30, [sp], #64
  4119c4:	ret
  4119c8:	mov	w1, w0
  4119cc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4119d0:	ldr	x0, [x0, #2416]
  4119d4:	bl	432350 <ferror@plt+0x2f620>
  4119d8:	mov	w21, w0
  4119dc:	b	411990 <ferror@plt+0xec60>
  4119e0:	mov	w1, w19
  4119e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4119e8:	ldr	x0, [x0, #2416]
  4119ec:	bl	432350 <ferror@plt+0x2f620>
  4119f0:	mov	w19, w0
  4119f4:	b	411994 <ferror@plt+0xec64>
  4119f8:	str	x23, [sp, #48]
  4119fc:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411a00:	mov	w1, w21
  411a04:	ldr	x0, [x20, #2416]
  411a08:	bl	432bf0 <ferror@plt+0x2fec0>
  411a0c:	mov	x23, x0
  411a10:	mov	w1, w19
  411a14:	ldr	x0, [x20, #2416]
  411a18:	bl	432bf0 <ferror@plt+0x2fec0>
  411a1c:	mov	x20, x0
  411a20:	cmp	x23, x0
  411a24:	b.eq	411a40 <ferror@plt+0xed10>  // b.none
  411a28:	mov	x0, x23
  411a2c:	bl	432b48 <ferror@plt+0x2fe18>
  411a30:	ands	w19, w0, #0xff
  411a34:	b.eq	411a9c <ferror@plt+0xed6c>  // b.none
  411a38:	ldr	x23, [sp, #48]
  411a3c:	b	4119b4 <ferror@plt+0xec84>
  411a40:	mov	x0, x23
  411a44:	bl	432b48 <ferror@plt+0x2fe18>
  411a48:	and	w0, w0, #0xff
  411a4c:	mov	w22, #0x1                   	// #1
  411a50:	cbnz	w0, 411a5c <ferror@plt+0xed2c>
  411a54:	ldr	x23, [sp, #48]
  411a58:	b	4119b4 <ferror@plt+0xec84>
  411a5c:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411a60:	mov	w2, w21
  411a64:	mov	x1, x23
  411a68:	ldr	x0, [x22, #2416]
  411a6c:	bl	432b68 <ferror@plt+0x2fe38>
  411a70:	mov	w20, w0
  411a74:	mov	w2, w19
  411a78:	mov	x1, x23
  411a7c:	ldr	x0, [x22, #2416]
  411a80:	bl	432b68 <ferror@plt+0x2fe38>
  411a84:	mov	w1, w0
  411a88:	mov	w0, w20
  411a8c:	bl	411974 <ferror@plt+0xec44>
  411a90:	and	w22, w0, #0xff
  411a94:	ldr	x23, [sp, #48]
  411a98:	b	4119b4 <ferror@plt+0xec84>
  411a9c:	mov	x0, x20
  411aa0:	bl	432b48 <ferror@plt+0x2fe18>
  411aa4:	and	w0, w0, #0xff
  411aa8:	mov	w22, w19
  411aac:	cbnz	w0, 411ac8 <ferror@plt+0xed98>
  411ab0:	ldr	x1, [x23, #8]
  411ab4:	ldr	x0, [x20, #8]
  411ab8:	cmp	x1, x0
  411abc:	cset	w22, eq  // eq = none
  411ac0:	ldr	x23, [sp, #48]
  411ac4:	b	4119b4 <ferror@plt+0xec84>
  411ac8:	ldr	x23, [sp, #48]
  411acc:	b	4119b4 <ferror@plt+0xec84>
  411ad0:	stp	x29, x30, [sp, #-224]!
  411ad4:	mov	x29, sp
  411ad8:	cbz	x1, 411b64 <ferror@plt+0xee34>
  411adc:	stp	x19, x20, [sp, #16]
  411ae0:	stp	x21, x22, [sp, #32]
  411ae4:	stp	x23, x24, [sp, #48]
  411ae8:	mov	x21, x0
  411aec:	mov	x19, x1
  411af0:	mov	w22, w2
  411af4:	and	w24, w3, #0xff
  411af8:	ldr	w1, [x1]
  411afc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  411b00:	ldr	x0, [x0, #2416]
  411b04:	bl	432f78 <ferror@plt+0x30248>
  411b08:	mov	x20, x0
  411b0c:	lsr	x23, x0, #32
  411b10:	add	x8, sp, #0xc0
  411b14:	mov	w1, #0x1                   	// #1
  411b18:	bl	41c118 <ferror@plt+0x193e8>
  411b1c:	add	x8, sp, #0xa0
  411b20:	mov	w1, #0x2                   	// #2
  411b24:	mov	w0, w23
  411b28:	bl	41c118 <ferror@plt+0x193e8>
  411b2c:	add	x8, sp, #0x80
  411b30:	mov	w1, #0x0                   	// #0
  411b34:	ldr	w0, [x19]
  411b38:	bl	41c118 <ferror@plt+0x193e8>
  411b3c:	ldr	x1, [x21, #24]
  411b40:	mov	w0, #0x0                   	// #0
  411b44:	ldr	x2, [sp, #192]
  411b48:	cmp	x2, x1
  411b4c:	b.eq	411b90 <ferror@plt+0xee60>  // b.none
  411b50:	ldp	x19, x20, [sp, #16]
  411b54:	ldp	x21, x22, [sp, #32]
  411b58:	ldp	x23, x24, [sp, #48]
  411b5c:	ldp	x29, x30, [sp], #224
  411b60:	ret
  411b64:	stp	x19, x20, [sp, #16]
  411b68:	stp	x21, x22, [sp, #32]
  411b6c:	stp	x23, x24, [sp, #48]
  411b70:	stp	x25, x26, [sp, #64]
  411b74:	stp	x27, x28, [sp, #80]
  411b78:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411b7c:	add	x2, x2, #0xa20
  411b80:	mov	w1, #0x39f                 	// #927
  411b84:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411b88:	add	x0, x0, #0x9f0
  411b8c:	bl	4102b4 <ferror@plt+0xd584>
  411b90:	ldr	x2, [sp, #160]
  411b94:	cmp	x1, x2
  411b98:	b.ne	411b50 <ferror@plt+0xee20>  // b.any
  411b9c:	stp	x25, x26, [sp, #64]
  411ba0:	stp	x27, x28, [sp, #80]
  411ba4:	ldr	w0, [x19, #4]
  411ba8:	cbnz	w0, 411be8 <ferror@plt+0xeeb8>
  411bac:	ldr	x2, [sp, #128]
  411bb0:	cmp	x1, x2
  411bb4:	b.eq	411bc4 <ferror@plt+0xee94>  // b.none
  411bb8:	ldp	x25, x26, [sp, #64]
  411bbc:	ldp	x27, x28, [sp, #80]
  411bc0:	b	411b50 <ferror@plt+0xee20>
  411bc4:	ldr	x0, [x21, #120]
  411bc8:	cbz	x0, 411be8 <ferror@plt+0xeeb8>
  411bcc:	ldr	w0, [x0, #4]
  411bd0:	cbz	w0, 411edc <ferror@plt+0xf1ac>
  411bd4:	ldr	w1, [x21, #16]
  411bd8:	ldr	w0, [x19]
  411bdc:	bl	411974 <ferror@plt+0xec44>
  411be0:	ands	w0, w0, #0xff
  411be4:	b.eq	411f0c <ferror@plt+0xf1dc>  // b.none
  411be8:	ldr	w0, [x19, #4]
  411bec:	str	w0, [sp, #120]
  411bf0:	ldr	x0, [x19, #8]
  411bf4:	str	x0, [sp, #112]
  411bf8:	ldr	w27, [sp, #200]
  411bfc:	ldr	w28, [sp, #168]
  411c00:	ldr	w25, [sp, #136]
  411c04:	ldr	w26, [sp, #140]
  411c08:	cmp	w27, w28
  411c0c:	b.le	411dc4 <ferror@plt+0xf094>
  411c10:	ldr	x0, [x21, #120]
  411c14:	cbz	x0, 411ec4 <ferror@plt+0xf194>
  411c18:	ldr	w0, [x0, #4]
  411c1c:	cbnz	w0, 411e10 <ferror@plt+0xf0e0>
  411c20:	cbz	w24, 411e8c <ferror@plt+0xf15c>
  411c24:	str	w26, [sp, #108]
  411c28:	str	w26, [sp, #104]
  411c2c:	str	w25, [sp, #124]
  411c30:	mov	w23, w25
  411c34:	mov	w1, w27
  411c38:	mov	x0, x21
  411c3c:	bl	411608 <ferror@plt+0xe8d8>
  411c40:	ands	w0, w0, #0xff
  411c44:	b.eq	411f18 <ferror@plt+0xf1e8>  // b.none
  411c48:	mov	w1, w28
  411c4c:	mov	x0, x21
  411c50:	bl	411608 <ferror@plt+0xe8d8>
  411c54:	ands	w0, w0, #0xff
  411c58:	b.eq	411f24 <ferror@plt+0xf1f4>  // b.none
  411c5c:	ldr	w0, [x19, #4]
  411c60:	cbnz	w0, 411c78 <ferror@plt+0xef48>
  411c64:	mov	w1, w23
  411c68:	mov	x0, x21
  411c6c:	bl	411608 <ferror@plt+0xe8d8>
  411c70:	ands	w0, w0, #0xff
  411c74:	b.eq	411e20 <ferror@plt+0xf0f0>  // b.none
  411c78:	ldr	x19, [x21, #120]
  411c7c:	cbz	x19, 411e50 <ferror@plt+0xf120>
  411c80:	ldr	w0, [x19]
  411c84:	ubfx	x0, x0, #0, #31
  411c88:	ldr	w1, [x19, #4]
  411c8c:	cmp	w0, w1
  411c90:	b.ne	411d58 <ferror@plt+0xf028>  // b.any
  411c94:	ldrsb	w0, [x19, #3]
  411c98:	tbnz	w0, #31, 411e3c <ferror@plt+0xf10c>
  411c9c:	mov	w24, #0x0                   	// #0
  411ca0:	mov	w27, #0x0                   	// #0
  411ca4:	mov	w1, #0x1                   	// #1
  411ca8:	ldr	x0, [x21, #120]
  411cac:	cbz	x0, 411e60 <ferror@plt+0xf130>
  411cb0:	ldr	w2, [x0, #4]
  411cb4:	ldr	w0, [x0]
  411cb8:	add	w1, w1, w2
  411cbc:	and	w0, w0, #0x7fffffff
  411cc0:	bl	4195d0 <ferror@plt+0x168a0>
  411cc4:	mov	w20, w0
  411cc8:	ubfiz	x1, x20, #2, #32
  411ccc:	add	x1, x1, w0, uxtw
  411cd0:	lsl	x1, x1, #3
  411cd4:	add	x1, x1, #0x8
  411cd8:	ldr	x0, [x21, #120]
  411cdc:	cbz	x0, 411e84 <ferror@plt+0xf154>
  411ce0:	ldr	w28, [x0, #4]
  411ce4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  411ce8:	str	x0, [x21, #120]
  411cec:	ldr	w1, [x0]
  411cf0:	bfxil	w1, w20, #0, #31
  411cf4:	str	w1, [x0]
  411cf8:	ubfx	x1, x1, #24, #7
  411cfc:	strb	w1, [x0, #3]
  411d00:	str	w28, [x0, #4]
  411d04:	cbz	w24, 411d58 <ferror@plt+0xf028>
  411d08:	ldr	x6, [x21, #120]
  411d0c:	cbz	w27, 411d50 <ferror@plt+0xf020>
  411d10:	sub	w0, w27, #0x1
  411d14:	add	x0, x0, x0, lsl #2
  411d18:	lsl	x3, x0, #3
  411d1c:	add	x3, x3, #0x30
  411d20:	mov	x0, #0x8                   	// #8
  411d24:	add	x1, x6, x0
  411d28:	add	x2, x19, x0
  411d2c:	ldp	x4, x5, [x2]
  411d30:	stp	x4, x5, [x1]
  411d34:	ldp	x4, x5, [x2, #16]
  411d38:	stp	x4, x5, [x1, #16]
  411d3c:	ldr	x2, [x2, #32]
  411d40:	str	x2, [x1, #32]
  411d44:	add	x0, x0, #0x28
  411d48:	cmp	x0, x3
  411d4c:	b.ne	411d24 <ferror@plt+0xeff4>  // b.any
  411d50:	ldr	x0, [x21, #120]
  411d54:	str	w27, [x0, #4]
  411d58:	ldr	x2, [x21, #120]
  411d5c:	ldr	w0, [x2, #4]
  411d60:	add	w1, w0, #0x1
  411d64:	str	w1, [x2, #4]
  411d68:	ubfiz	x1, x0, #2, #32
  411d6c:	add	x0, x1, w0, uxtw
  411d70:	lsl	x0, x0, #3
  411d74:	add	x0, x0, #0x8
  411d78:	add	x1, x2, x0
  411d7c:	str	w25, [x2, x0]
  411d80:	ldr	w0, [sp, #104]
  411d84:	str	w0, [x1, #4]
  411d88:	ldr	w0, [sp, #124]
  411d8c:	str	w0, [x1, #8]
  411d90:	ldr	w0, [sp, #108]
  411d94:	str	w0, [x1, #12]
  411d98:	ldr	w0, [sp, #120]
  411d9c:	str	w0, [x1, #16]
  411da0:	str	w23, [x1, #20]
  411da4:	str	w26, [x1, #24]
  411da8:	str	w22, [x1, #28]
  411dac:	ldr	x0, [sp, #112]
  411db0:	str	x0, [x1, #32]
  411db4:	mov	w0, #0x1                   	// #1
  411db8:	ldp	x25, x26, [sp, #64]
  411dbc:	ldp	x27, x28, [sp, #80]
  411dc0:	b	411b50 <ferror@plt+0xee20>
  411dc4:	ldr	w0, [sp, #204]
  411dc8:	str	w0, [sp, #104]
  411dcc:	ldr	w0, [sp, #172]
  411dd0:	str	w0, [sp, #108]
  411dd4:	ldr	w1, [x21, #16]
  411dd8:	mov	w0, w20
  411ddc:	bl	411974 <ferror@plt+0xec44>
  411de0:	and	w0, w0, #0xff
  411de4:	cbz	w0, 411c10 <ferror@plt+0xeee0>
  411de8:	ldr	w1, [x21, #16]
  411dec:	mov	w0, w23
  411df0:	bl	411974 <ferror@plt+0xec44>
  411df4:	and	w0, w0, #0xff
  411df8:	cbz	w0, 411c10 <ferror@plt+0xeee0>
  411dfc:	cbz	w24, 411e2c <ferror@plt+0xf0fc>
  411e00:	str	w28, [sp, #124]
  411e04:	mov	w23, w25
  411e08:	mov	w25, w27
  411e0c:	b	411c34 <ferror@plt+0xef04>
  411e10:	mov	w0, #0x0                   	// #0
  411e14:	ldp	x25, x26, [sp, #64]
  411e18:	ldp	x27, x28, [sp, #80]
  411e1c:	b	411b50 <ferror@plt+0xee20>
  411e20:	ldp	x25, x26, [sp, #64]
  411e24:	ldp	x27, x28, [sp, #80]
  411e28:	b	411b50 <ferror@plt+0xee20>
  411e2c:	str	w28, [sp, #124]
  411e30:	mov	w23, w25
  411e34:	mov	w25, w27
  411e38:	b	411c78 <ferror@plt+0xef48>
  411e3c:	str	xzr, [x21, #120]
  411e40:	ldr	w27, [x19, #4]
  411e44:	add	w1, w27, #0x1
  411e48:	mov	w24, #0x1                   	// #1
  411e4c:	b	411ca8 <ferror@plt+0xef78>
  411e50:	mov	w24, #0x0                   	// #0
  411e54:	mov	w27, #0x0                   	// #0
  411e58:	mov	w1, #0x1                   	// #1
  411e5c:	b	411ca8 <ferror@plt+0xef78>
  411e60:	mov	w2, #0x4                   	// #4
  411e64:	cmp	w1, w2
  411e68:	csel	w20, w1, w2, cs  // cs = hs, nlast
  411e6c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  411e70:	add	x1, x1, x1, lsl #2
  411e74:	lsl	x1, x1, #3
  411e78:	add	x1, x1, #0x8
  411e7c:	mov	w28, #0x0                   	// #0
  411e80:	b	411ce4 <ferror@plt+0xefb4>
  411e84:	mov	w28, #0x0                   	// #0
  411e88:	b	411ce4 <ferror@plt+0xefb4>
  411e8c:	ldr	x19, [x21, #120]
  411e90:	str	w26, [sp, #108]
  411e94:	str	w26, [sp, #104]
  411e98:	str	w25, [sp, #124]
  411e9c:	mov	w23, w25
  411ea0:	b	411c80 <ferror@plt+0xef50>
  411ea4:	ldr	x19, [x21, #120]
  411ea8:	str	w26, [sp, #108]
  411eac:	str	w26, [sp, #104]
  411eb0:	str	w25, [sp, #124]
  411eb4:	mov	w23, w25
  411eb8:	mov	w27, #0x0                   	// #0
  411ebc:	mov	w1, #0x1                   	// #1
  411ec0:	b	411ca8 <ferror@plt+0xef78>
  411ec4:	cbz	w24, 411ea4 <ferror@plt+0xf174>
  411ec8:	str	w26, [sp, #108]
  411ecc:	str	w26, [sp, #104]
  411ed0:	str	w25, [sp, #124]
  411ed4:	mov	w23, w25
  411ed8:	b	411c34 <ferror@plt+0xef04>
  411edc:	ldr	w0, [x19, #4]
  411ee0:	str	w0, [sp, #120]
  411ee4:	ldr	x0, [x19, #8]
  411ee8:	str	x0, [sp, #112]
  411eec:	ldr	w27, [sp, #200]
  411ef0:	ldr	w28, [sp, #168]
  411ef4:	ldr	w25, [sp, #136]
  411ef8:	ldr	w26, [sp, #140]
  411efc:	cmp	w27, w28
  411f00:	b.le	411dc4 <ferror@plt+0xf094>
  411f04:	ldr	x0, [x21, #120]
  411f08:	b	411c18 <ferror@plt+0xeee8>
  411f0c:	ldp	x25, x26, [sp, #64]
  411f10:	ldp	x27, x28, [sp, #80]
  411f14:	b	411b50 <ferror@plt+0xee20>
  411f18:	ldp	x25, x26, [sp, #64]
  411f1c:	ldp	x27, x28, [sp, #80]
  411f20:	b	411b50 <ferror@plt+0xee20>
  411f24:	ldp	x25, x26, [sp, #64]
  411f28:	ldp	x27, x28, [sp, #80]
  411f2c:	b	411b50 <ferror@plt+0xee20>
  411f30:	stp	x29, x30, [sp, #-144]!
  411f34:	mov	x29, sp
  411f38:	stp	x19, x20, [sp, #16]
  411f3c:	stp	x21, x22, [sp, #32]
  411f40:	stp	x23, x24, [sp, #48]
  411f44:	stp	x25, x26, [sp, #64]
  411f48:	stp	x27, x28, [sp, #80]
  411f4c:	mov	x20, x0
  411f50:	mov	x25, x1
  411f54:	mov	x19, x2
  411f58:	mov	w22, w3
  411f5c:	str	x1, [x0]
  411f60:	ldr	x0, [x1]
  411f64:	str	x0, [x20, #8]
  411f68:	mov	w1, #0x0                   	// #0
  411f6c:	mov	x0, x2
  411f70:	bl	4341fc <ferror@plt+0x314cc>
  411f74:	ldr	w0, [x0]
  411f78:	str	w0, [x20, #16]
  411f7c:	add	x8, x20, #0x18
  411f80:	mov	w1, #0x0                   	// #0
  411f84:	mov	x0, x19
  411f88:	bl	434224 <ferror@plt+0x314f4>
  411f8c:	add	x21, x20, #0x38
  411f90:	str	x25, [x20, #56]
  411f94:	str	w22, [x20, #64]
  411f98:	mov	w0, #0xffffffff            	// #-1
  411f9c:	str	w0, [x20, #68]
  411fa0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411fa4:	add	x1, x1, #0x908
  411fa8:	mov	x0, x21
  411fac:	bl	411868 <ferror@plt+0xeb38>
  411fb0:	str	x0, [x20, #72]
  411fb4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411fb8:	add	x1, x1, #0x920
  411fbc:	mov	x0, x21
  411fc0:	bl	411868 <ferror@plt+0xeb38>
  411fc4:	str	x0, [x20, #80]
  411fc8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411fcc:	add	x1, x1, #0x950
  411fd0:	mov	x0, x21
  411fd4:	bl	411868 <ferror@plt+0xeb38>
  411fd8:	str	x0, [x20, #88]
  411fdc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  411fe0:	add	x1, x1, #0x960
  411fe4:	mov	x0, x21
  411fe8:	bl	411868 <ferror@plt+0xeb38>
  411fec:	str	x0, [x20, #96]
  411ff0:	ldr	x0, [x25]
  411ff4:	ldrb	w0, [x0, #67]
  411ff8:	bl	4114f4 <ferror@plt+0xe7c4>
  411ffc:	str	x0, [x20, #104]
  412000:	ldrb	w0, [x25, #221]
  412004:	strb	w0, [x20, #112]
  412008:	ldrb	w0, [x25, #222]
  41200c:	strb	w0, [x20, #113]
  412010:	ldrb	w0, [x25, #223]
  412014:	strb	w0, [x20, #114]
  412018:	ldr	w21, [x19, #8]
  41201c:	str	xzr, [x20, #120]
  412020:	cbnz	w21, 4120fc <ferror@plt+0xf3cc>
  412024:	ldr	w21, [x19, #120]
  412028:	str	xzr, [x20, #128]
  41202c:	cbnz	w21, 412134 <ferror@plt+0xf404>
  412030:	ldr	w0, [x19, #8]
  412034:	str	xzr, [x20, #136]
  412038:	adds	w21, w0, #0x1
  41203c:	b.ne	412164 <ferror@plt+0xf434>  // b.any
  412040:	str	wzr, [x20, #144]
  412044:	str	wzr, [x20, #148]
  412048:	ldr	w0, [x19, #8]
  41204c:	mov	w21, #0x0                   	// #0
  412050:	cbz	w0, 412084 <ferror@plt+0xf354>
  412054:	mov	w1, w21
  412058:	mov	x0, x19
  41205c:	bl	4341fc <ferror@plt+0x314cc>
  412060:	mov	w3, #0x0                   	// #0
  412064:	mov	w2, w21
  412068:	mov	x1, x0
  41206c:	mov	x0, x20
  412070:	bl	411ad0 <ferror@plt+0xeda0>
  412074:	add	w21, w21, #0x1
  412078:	ldr	w0, [x19, #8]
  41207c:	cmp	w0, w21
  412080:	b.hi	412054 <ferror@plt+0xf324>  // b.pmore
  412084:	ldr	w0, [x19, #120]
  412088:	mov	w21, #0x0                   	// #0
  41208c:	cbnz	w0, 4121cc <ferror@plt+0xf49c>
  412090:	ldr	x0, [x20, #128]
  412094:	cbz	x0, 4120a4 <ferror@plt+0xf374>
  412098:	ldr	w1, [x0, #4]
  41209c:	cmp	w1, #0x1
  4120a0:	b.hi	412328 <ferror@plt+0xf5f8>  // b.pmore
  4120a4:	ldr	x0, [x20, #136]
  4120a8:	cbz	x0, 4120b4 <ferror@plt+0xf384>
  4120ac:	ldr	w0, [x0, #4]
  4120b0:	cbnz	w0, 412344 <ferror@plt+0xf614>
  4120b4:	ldr	x0, [x20, #120]
  4120b8:	cbz	x0, 412e44 <ferror@plt+0x10114>
  4120bc:	ldr	w0, [x0, #4]
  4120c0:	adds	w21, w0, #0x1
  4120c4:	b.ne	41235c <ferror@plt+0xf62c>  // b.any
  4120c8:	ldr	w22, [x20, #32]
  4120cc:	mov	x1, #0x28                  	// #40
  4120d0:	mov	x0, #0x0                   	// #0
  4120d4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4120d8:	mov	x19, x0
  4120dc:	ldr	w0, [x0]
  4120e0:	mov	w1, #0x4                   	// #4
  4120e4:	bfxil	w0, w1, #0, #31
  4120e8:	str	w0, [x19]
  4120ec:	ubfx	x0, x0, #24, #7
  4120f0:	strb	w0, [x19, #3]
  4120f4:	str	wzr, [x19, #4]
  4120f8:	b	4123e4 <ferror@plt+0xf6b4>
  4120fc:	ubfiz	x1, x21, #2, #32
  412100:	add	x1, x1, w21, uxtw
  412104:	lsl	x1, x1, #3
  412108:	add	x1, x1, #0x8
  41210c:	mov	x0, #0x0                   	// #0
  412110:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412114:	str	x0, [x20, #120]
  412118:	ldr	w1, [x0]
  41211c:	bfxil	w1, w21, #0, #31
  412120:	str	w1, [x0]
  412124:	ubfx	x1, x1, #24, #7
  412128:	strb	w1, [x0, #3]
  41212c:	str	wzr, [x0, #4]
  412130:	b	412024 <ferror@plt+0xf2f4>
  412134:	ubfiz	x1, x21, #3, #32
  412138:	add	x1, x1, #0x8
  41213c:	mov	x0, #0x0                   	// #0
  412140:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412144:	str	x0, [x20, #128]
  412148:	ldr	w1, [x0]
  41214c:	bfxil	w1, w21, #0, #31
  412150:	str	w1, [x0]
  412154:	ubfx	x1, x1, #24, #7
  412158:	strb	w1, [x0, #3]
  41215c:	str	wzr, [x0, #4]
  412160:	b	412030 <ferror@plt+0xf300>
  412164:	ubfiz	x1, x21, #3, #32
  412168:	add	x1, x1, #0x8
  41216c:	mov	x0, #0x0                   	// #0
  412170:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412174:	str	x0, [x20, #136]
  412178:	ldr	w1, [x0]
  41217c:	bfxil	w1, w21, #0, #31
  412180:	str	w1, [x0]
  412184:	ubfx	x1, x1, #24, #7
  412188:	strb	w1, [x0, #3]
  41218c:	str	wzr, [x0, #4]
  412190:	b	412040 <ferror@plt+0xf310>
  412194:	add	x0, x19, w21, sxtw #3
  412198:	add	x0, x0, #0x80
  41219c:	ldr	x22, [x0]
  4121a0:	add	x8, sp, #0x70
  4121a4:	ldr	w0, [x22]
  4121a8:	bl	41bd48 <ferror@plt+0x19018>
  4121ac:	ldr	x0, [x20, #24]
  4121b0:	ldr	x1, [sp, #112]
  4121b4:	cmp	x1, x0
  4121b8:	b.eq	4121e8 <ferror@plt+0xf4b8>  // b.none
  4121bc:	add	w21, w21, #0x1
  4121c0:	ldr	w0, [x19, #120]
  4121c4:	cmp	w21, w0
  4121c8:	b.cs	412090 <ferror@plt+0xf360>  // b.hs, b.nlast
  4121cc:	cmp	w21, #0x1
  4121d0:	b.le	412194 <ferror@plt+0xf464>
  4121d4:	sbfiz	x0, x21, #3, #32
  4121d8:	sub	x1, x0, #0x10
  4121dc:	ldr	x0, [x19, #152]
  4121e0:	add	x0, x0, x1
  4121e4:	b	41219c <ferror@plt+0xf46c>
  4121e8:	add	x8, sp, #0x70
  4121ec:	ldr	w0, [x22, #4]
  4121f0:	bl	41bd48 <ferror@plt+0x19018>
  4121f4:	ldr	x0, [x20, #24]
  4121f8:	ldr	x1, [sp, #112]
  4121fc:	cmp	x1, x0
  412200:	b.ne	4121bc <ferror@plt+0xf48c>  // b.any
  412204:	ldr	x23, [x20, #128]
  412208:	cbz	x23, 41224c <ferror@plt+0xf51c>
  41220c:	ldr	w0, [x23]
  412210:	ubfx	x0, x0, #0, #31
  412214:	ldr	w1, [x23, #4]
  412218:	cmp	w0, w1
  41221c:	b.ne	4122e4 <ferror@plt+0xf5b4>  // b.any
  412220:	ldrsb	w0, [x23, #3]
  412224:	tbnz	w0, #31, 412238 <ferror@plt+0xf508>
  412228:	mov	w27, #0x0                   	// #0
  41222c:	mov	w26, #0x0                   	// #0
  412230:	mov	w1, #0x1                   	// #1
  412234:	b	412258 <ferror@plt+0xf528>
  412238:	str	xzr, [x20, #128]
  41223c:	ldr	w26, [x23, #4]
  412240:	add	w1, w26, #0x1
  412244:	mov	w27, #0x1                   	// #1
  412248:	b	412258 <ferror@plt+0xf528>
  41224c:	mov	w27, #0x0                   	// #0
  412250:	mov	w26, #0x0                   	// #0
  412254:	mov	w1, #0x1                   	// #1
  412258:	ldr	x0, [x20, #128]
  41225c:	cbz	x0, 412300 <ferror@plt+0xf5d0>
  412260:	ldr	w2, [x0, #4]
  412264:	ldr	w0, [x0]
  412268:	add	w1, w1, w2
  41226c:	and	w0, w0, #0x7fffffff
  412270:	bl	4195d0 <ferror@plt+0x168a0>
  412274:	mov	w24, w0
  412278:	ubfiz	x1, x24, #3, #32
  41227c:	add	x1, x1, #0x8
  412280:	ldr	x0, [x20, #128]
  412284:	cbz	x0, 412320 <ferror@plt+0xf5f0>
  412288:	ldr	w28, [x0, #4]
  41228c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412290:	str	x0, [x20, #128]
  412294:	ldr	w1, [x0]
  412298:	bfxil	w1, w24, #0, #31
  41229c:	str	w1, [x0]
  4122a0:	ubfx	x1, x1, #24, #7
  4122a4:	strb	w1, [x0, #3]
  4122a8:	str	w28, [x0, #4]
  4122ac:	cbz	w27, 4122e4 <ferror@plt+0xf5b4>
  4122b0:	ldr	x3, [x20, #128]
  4122b4:	cbz	w26, 4122dc <ferror@plt+0xf5ac>
  4122b8:	sub	w2, w26, #0x1
  4122bc:	add	x2, x2, #0x2
  4122c0:	lsl	x2, x2, #3
  4122c4:	mov	x0, #0x8                   	// #8
  4122c8:	ldr	x1, [x23, x0]
  4122cc:	str	x1, [x3, x0]
  4122d0:	add	x0, x0, #0x8
  4122d4:	cmp	x0, x2
  4122d8:	b.ne	4122c8 <ferror@plt+0xf598>  // b.any
  4122dc:	ldr	x0, [x20, #128]
  4122e0:	str	w26, [x0, #4]
  4122e4:	ldr	x1, [x20, #128]
  4122e8:	ldr	w0, [x1, #4]
  4122ec:	add	w2, w0, #0x1
  4122f0:	str	w2, [x1, #4]
  4122f4:	add	x0, x1, w0, uxtw #3
  4122f8:	str	x22, [x0, #8]
  4122fc:	b	4121bc <ferror@plt+0xf48c>
  412300:	cmp	w1, #0x4
  412304:	mov	w2, #0x4                   	// #4
  412308:	csel	w24, w1, w2, cs  // cs = hs, nlast
  41230c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  412310:	add	x1, x1, #0x1
  412314:	lsl	x1, x1, #3
  412318:	mov	w28, #0x0                   	// #0
  41231c:	b	41228c <ferror@plt+0xf55c>
  412320:	mov	w28, #0x0                   	// #0
  412324:	b	41228c <ferror@plt+0xf55c>
  412328:	adrp	x3, 411000 <ferror@plt+0xe2d0>
  41232c:	add	x3, x3, #0x5f0
  412330:	mov	x2, #0x8                   	// #8
  412334:	mov	w1, w1
  412338:	add	x0, x0, x2
  41233c:	bl	41e554 <ferror@plt+0x1b824>
  412340:	b	4120a4 <ferror@plt+0xf374>
  412344:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412348:	add	x2, x2, #0xa40
  41234c:	mov	w1, #0x49b                 	// #1179
  412350:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412354:	add	x0, x0, #0x9f0
  412358:	bl	4102b4 <ferror@plt+0xd584>
  41235c:	ubfiz	x1, x21, #3, #32
  412360:	add	x1, x1, #0x8
  412364:	mov	x0, #0x0                   	// #0
  412368:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41236c:	mov	x19, x0
  412370:	ldr	w0, [x0]
  412374:	bfxil	w0, w21, #0, #31
  412378:	str	w0, [x19]
  41237c:	ubfx	x0, x0, #24, #7
  412380:	strb	w0, [x19, #3]
  412384:	str	wzr, [x19, #4]
  412388:	ldr	w22, [x20, #32]
  41238c:	tst	x21, #0x7fffffff
  412390:	b.ne	4123e4 <ferror@plt+0xf6b4>  // b.any
  412394:	sxtb	w0, w0
  412398:	tbnz	w0, #31, 4120cc <ferror@plt+0xf39c>
  41239c:	ldr	w1, [x19, #4]
  4123a0:	ldr	w0, [x19]
  4123a4:	add	w1, w1, #0x1
  4123a8:	and	w0, w0, #0x7fffffff
  4123ac:	bl	4195d0 <ferror@plt+0x168a0>
  4123b0:	mov	w21, w0
  4123b4:	ldr	w23, [x19, #4]
  4123b8:	ubfiz	x1, x21, #3, #32
  4123bc:	add	x1, x1, #0x8
  4123c0:	mov	x0, x19
  4123c4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4123c8:	mov	x19, x0
  4123cc:	ldr	w1, [x0]
  4123d0:	bfxil	w1, w21, #0, #31
  4123d4:	str	w1, [x0]
  4123d8:	ubfx	x1, x1, #24, #7
  4123dc:	strb	w1, [x0, #3]
  4123e0:	str	w23, [x0, #4]
  4123e4:	ldr	w0, [x19, #4]
  4123e8:	add	w1, w0, #0x1
  4123ec:	str	w1, [x19, #4]
  4123f0:	ubfiz	x0, x0, #3, #32
  4123f4:	add	x0, x0, #0x8
  4123f8:	add	x1, x19, x0
  4123fc:	str	w22, [x19, x0]
  412400:	str	w22, [x1, #4]
  412404:	mov	w21, #0x0                   	// #0
  412408:	mov	w27, #0x4                   	// #4
  41240c:	b	412c68 <ferror@plt+0xff38>
  412410:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412414:	add	x2, x2, #0xa40
  412418:	mov	w1, #0x4a4                 	// #1188
  41241c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412420:	add	x0, x0, #0x9f0
  412424:	bl	4102b4 <ferror@plt+0xd584>
  412428:	mov	w21, #0x0                   	// #0
  41242c:	mov	w26, #0x4                   	// #4
  412430:	mov	w27, #0x1                   	// #1
  412434:	b	412d30 <ferror@plt+0x10000>
  412438:	mov	w21, #0x0                   	// #0
  41243c:	b	41242c <ferror@plt+0xf6fc>
  412440:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412444:	add	x2, x2, #0xa40
  412448:	mov	w1, #0x4ad                 	// #1197
  41244c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412450:	add	x0, x0, #0x9f0
  412454:	bl	4102b4 <ferror@plt+0xd584>
  412458:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41245c:	add	x2, x2, #0xa58
  412460:	mov	w1, #0xa5                  	// #165
  412464:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412468:	add	x0, x0, #0x9f0
  41246c:	bl	4102b4 <ferror@plt+0xd584>
  412470:	cbz	x19, 4124d8 <ferror@plt+0xf7a8>
  412474:	ldr	w1, [x19, #4]
  412478:	cmp	w1, #0x1
  41247c:	b.hi	4124bc <ferror@plt+0xf78c>  // b.pmore
  412480:	ldr	w0, [x19, #4]
  412484:	cbz	w0, 4124d8 <ferror@plt+0xf7a8>
  412488:	ldr	x21, [x20, #136]
  41248c:	cbz	x21, 412504 <ferror@plt+0xf7d4>
  412490:	ldr	w0, [x21]
  412494:	ubfx	x0, x0, #0, #31
  412498:	ldr	w1, [x21, #4]
  41249c:	cmp	w0, w1
  4124a0:	b.ne	41259c <ferror@plt+0xf86c>  // b.any
  4124a4:	ldrsb	w0, [x21, #3]
  4124a8:	tbnz	w0, #31, 4124f0 <ferror@plt+0xf7c0>
  4124ac:	mov	w24, #0x0                   	// #0
  4124b0:	mov	w22, #0x0                   	// #0
  4124b4:	mov	w1, #0x1                   	// #1
  4124b8:	b	412510 <ferror@plt+0xf7e0>
  4124bc:	adrp	x3, 411000 <ferror@plt+0xe2d0>
  4124c0:	add	x3, x3, #0x5a8
  4124c4:	mov	x2, #0x8                   	// #8
  4124c8:	mov	w1, w1
  4124cc:	add	x0, x19, x2
  4124d0:	bl	41e554 <ferror@plt+0x1b824>
  4124d4:	b	412480 <ferror@plt+0xf750>
  4124d8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4124dc:	add	x2, x2, #0xa40
  4124e0:	mov	w1, #0x4b6                 	// #1206
  4124e4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4124e8:	add	x0, x0, #0x9f0
  4124ec:	bl	4102b4 <ferror@plt+0xd584>
  4124f0:	str	xzr, [x20, #136]
  4124f4:	ldr	w22, [x21, #4]
  4124f8:	add	w1, w22, #0x1
  4124fc:	mov	w24, #0x1                   	// #1
  412500:	b	412510 <ferror@plt+0xf7e0>
  412504:	mov	w24, #0x0                   	// #0
  412508:	mov	w22, #0x0                   	// #0
  41250c:	mov	w1, #0x1                   	// #1
  412510:	ldr	x0, [x20, #136]
  412514:	cbz	x0, 4125d0 <ferror@plt+0xf8a0>
  412518:	ldr	w2, [x0, #4]
  41251c:	ldr	w0, [x0]
  412520:	add	w1, w1, w2
  412524:	and	w0, w0, #0x7fffffff
  412528:	bl	4195d0 <ferror@plt+0x168a0>
  41252c:	mov	w23, w0
  412530:	ubfiz	x1, x23, #3, #32
  412534:	add	x1, x1, #0x8
  412538:	ldr	x0, [x20, #136]
  41253c:	cbz	x0, 4125f0 <ferror@plt+0xf8c0>
  412540:	ldr	w26, [x0, #4]
  412544:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412548:	str	x0, [x20, #136]
  41254c:	ldr	w1, [x0]
  412550:	bfxil	w1, w23, #0, #31
  412554:	str	w1, [x0]
  412558:	ubfx	x1, x1, #24, #7
  41255c:	strb	w1, [x0, #3]
  412560:	str	w26, [x0, #4]
  412564:	cbz	w24, 41259c <ferror@plt+0xf86c>
  412568:	ldr	x3, [x20, #136]
  41256c:	cbz	w22, 412594 <ferror@plt+0xf864>
  412570:	sub	w2, w22, #0x1
  412574:	add	x2, x2, #0x2
  412578:	lsl	x2, x2, #3
  41257c:	mov	x0, #0x8                   	// #8
  412580:	ldr	x1, [x21, x0]
  412584:	str	x1, [x3, x0]
  412588:	add	x0, x0, #0x8
  41258c:	cmp	x2, x0
  412590:	b.ne	412580 <ferror@plt+0xf850>  // b.any
  412594:	ldr	x0, [x20, #136]
  412598:	str	w22, [x0, #4]
  41259c:	ldr	x1, [x20, #136]
  4125a0:	ldr	w0, [x1, #4]
  4125a4:	add	w2, w0, #0x1
  4125a8:	str	w2, [x1, #4]
  4125ac:	add	x0, x1, w0, uxtw #3
  4125b0:	ldr	x1, [x19, #8]
  4125b4:	str	x1, [x0, #8]
  4125b8:	ldr	w0, [x19, #4]
  4125bc:	cmp	w0, #0x1
  4125c0:	b.ls	41278c <ferror@plt+0xfa5c>  // b.plast
  4125c4:	mov	w22, #0x1                   	// #1
  4125c8:	mov	w23, #0x0                   	// #0
  4125cc:	b	4126f4 <ferror@plt+0xf9c4>
  4125d0:	mov	w2, #0x4                   	// #4
  4125d4:	cmp	w1, w2
  4125d8:	csel	w23, w1, w2, cs  // cs = hs, nlast
  4125dc:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4125e0:	add	x1, x1, #0x1
  4125e4:	lsl	x1, x1, #3
  4125e8:	mov	w26, #0x0                   	// #0
  4125ec:	b	412544 <ferror@plt+0xf814>
  4125f0:	mov	w26, #0x0                   	// #0
  4125f4:	b	412544 <ferror@plt+0xf814>
  4125f8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4125fc:	add	x2, x2, #0xa40
  412600:	mov	w1, #0x4bc                 	// #1212
  412604:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412608:	add	x0, x0, #0x9f0
  41260c:	bl	4102b4 <ferror@plt+0xd584>
  412610:	ldr	w0, [x21]
  412614:	ubfx	x0, x0, #0, #31
  412618:	ldr	w1, [x21, #4]
  41261c:	cmp	w0, w1
  412620:	b.ne	4126c4 <ferror@plt+0xf994>  // b.any
  412624:	ldrsb	w0, [x21, #3]
  412628:	tbnz	w0, #31, 412750 <ferror@plt+0xfa20>
  41262c:	mov	w28, w23
  412630:	mov	w26, w23
  412634:	mov	w1, #0x1                   	// #1
  412638:	ldr	x0, [x20, #136]
  41263c:	cbz	x0, 412764 <ferror@plt+0xfa34>
  412640:	ldr	w2, [x0, #4]
  412644:	ldr	w0, [x0]
  412648:	add	w1, w1, w2
  41264c:	and	w0, w0, #0x7fffffff
  412650:	bl	4195d0 <ferror@plt+0x168a0>
  412654:	mov	w24, w0
  412658:	ubfiz	x1, x24, #3, #32
  41265c:	add	x1, x1, #0x8
  412660:	ldr	x0, [x20, #136]
  412664:	cbz	x0, 412784 <ferror@plt+0xfa54>
  412668:	ldr	w27, [x0, #4]
  41266c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412670:	str	x0, [x20, #136]
  412674:	ldr	w1, [x0]
  412678:	bfxil	w1, w24, #0, #31
  41267c:	str	w1, [x0]
  412680:	ubfx	x1, x1, #24, #7
  412684:	strb	w1, [x0, #3]
  412688:	str	w27, [x0, #4]
  41268c:	cbz	w28, 4126c4 <ferror@plt+0xf994>
  412690:	ldr	x3, [x20, #136]
  412694:	cbz	w26, 4126bc <ferror@plt+0xf98c>
  412698:	sub	w2, w26, #0x1
  41269c:	add	x2, x2, #0x2
  4126a0:	lsl	x2, x2, #3
  4126a4:	mov	x0, #0x8                   	// #8
  4126a8:	ldr	x1, [x21, x0]
  4126ac:	str	x1, [x3, x0]
  4126b0:	add	x0, x0, #0x8
  4126b4:	cmp	x0, x2
  4126b8:	b.ne	4126a8 <ferror@plt+0xf978>  // b.any
  4126bc:	ldr	x0, [x20, #136]
  4126c0:	str	w26, [x0, #4]
  4126c4:	ldr	x1, [x20, #136]
  4126c8:	ldr	w0, [x1, #4]
  4126cc:	add	w2, w0, #0x1
  4126d0:	str	w2, [x1, #4]
  4126d4:	add	x0, x1, w0, uxtw #3
  4126d8:	add	x1, x19, w22, uxtw #3
  4126dc:	ldr	x1, [x1, #8]
  4126e0:	str	x1, [x0, #8]
  4126e4:	add	w22, w22, #0x1
  4126e8:	ldr	w0, [x19, #4]
  4126ec:	cmp	w0, w22
  4126f0:	b.ls	41278c <ferror@plt+0xfa5c>  // b.plast
  4126f4:	ldr	x21, [x20, #136]
  4126f8:	mov	w0, w23
  4126fc:	cbz	x21, 412704 <ferror@plt+0xf9d4>
  412700:	ldr	w0, [x21, #4]
  412704:	add	x4, x19, w22, uxtw #3
  412708:	ldr	w2, [x4, #8]
  41270c:	sub	w0, w0, #0x1
  412710:	add	x0, x21, x0, lsl #3
  412714:	ldr	w1, [x0, #8]
  412718:	cmp	w2, w1
  41271c:	b.cc	4125f8 <ferror@plt+0xf8c8>  // b.lo, b.ul, b.last
  412720:	ldr	w3, [x0, #12]
  412724:	mov	w1, w3
  412728:	add	x1, x1, #0x1
  41272c:	ldrb	w5, [x20, #114]
  412730:	add	x1, x1, x5
  412734:	cmp	x1, w2, uxtw
  412738:	b.lt	412610 <ferror@plt+0xf8e0>  // b.tstop
  41273c:	ldr	w1, [x4, #12]
  412740:	cmp	w3, w1
  412744:	b.cs	4126e4 <ferror@plt+0xf9b4>  // b.hs, b.nlast
  412748:	str	w1, [x0, #12]
  41274c:	b	4126e4 <ferror@plt+0xf9b4>
  412750:	str	xzr, [x20, #136]
  412754:	ldr	w26, [x21, #4]
  412758:	add	w1, w26, #0x1
  41275c:	mov	w28, #0x1                   	// #1
  412760:	b	412638 <ferror@plt+0xf908>
  412764:	cmp	w1, #0x4
  412768:	mov	w2, #0x4                   	// #4
  41276c:	csel	w24, w1, w2, cs  // cs = hs, nlast
  412770:	csel	w1, w1, w2, cs  // cs = hs, nlast
  412774:	add	x1, x1, #0x1
  412778:	lsl	x1, x1, #3
  41277c:	mov	w27, w23
  412780:	b	41266c <ferror@plt+0xf93c>
  412784:	mov	w27, w23
  412788:	b	41266c <ferror@plt+0xf93c>
  41278c:	ldr	x5, [x20, #136]
  412790:	cbz	x5, 4128f0 <ferror@plt+0xfbc0>
  412794:	ldr	w1, [x5, #4]
  412798:	cbz	w1, 4128f0 <ferror@plt+0xfbc0>
  41279c:	cmp	w1, #0x1
  4127a0:	b.ls	4127f4 <ferror@plt+0xfac4>  // b.plast
  4127a4:	add	x0, x5, #0x8
  4127a8:	sub	w1, w1, #0x2
  4127ac:	add	x5, x5, #0x10
  4127b0:	add	x5, x5, x1, lsl #3
  4127b4:	ldr	w3, [x0]
  4127b8:	ldr	w1, [x0, #4]
  4127bc:	cmp	w3, w1
  4127c0:	b.hi	412908 <ferror@plt+0xfbd8>  // b.pmore
  4127c4:	ldr	w2, [x0, #8]
  4127c8:	ldr	w4, [x0, #12]
  4127cc:	cmp	w2, w4
  4127d0:	b.hi	412920 <ferror@plt+0xfbf0>  // b.pmore
  4127d4:	cmp	w3, w2
  4127d8:	b.cs	412938 <ferror@plt+0xfc08>  // b.hs, b.nlast
  4127dc:	add	w1, w1, #0x1
  4127e0:	cmp	w2, w1
  4127e4:	b.ls	412950 <ferror@plt+0xfc20>  // b.plast
  4127e8:	add	x0, x0, #0x8
  4127ec:	cmp	x0, x5
  4127f0:	b.ne	4127b4 <ferror@plt+0xfa84>  // b.any
  4127f4:	ldrsb	w0, [x19, #3]
  4127f8:	tbnz	w0, #31, 412968 <ferror@plt+0xfc38>
  4127fc:	mov	x0, x19
  412800:	bl	402a90 <free@plt>
  412804:	ldr	x1, [x20, #136]
  412808:	cbz	x1, 412970 <ferror@plt+0xfc40>
  41280c:	ldr	w0, [x1, #4]
  412810:	cbz	w0, 412970 <ferror@plt+0xfc40>
  412814:	sub	w0, w0, #0x1
  412818:	add	x0, x1, x0, lsl #3
  41281c:	ldr	w0, [x0, #12]
  412820:	cmp	w0, #0x0
  412824:	csel	w0, w0, wzr, ge  // ge = tcont
  412828:	bl	4107bc <ferror@plt+0xda8c>
  41282c:	str	w0, [x20, #144]
  412830:	ldr	x1, [x20, #136]
  412834:	cbz	x1, 412854 <ferror@plt+0xfb24>
  412838:	ldr	w1, [x1, #4]
  41283c:	cmp	w1, #0x1
  412840:	b.ls	412854 <ferror@plt+0xfb24>  // b.plast
  412844:	cmp	w0, #0x3
  412848:	mov	w1, #0x3                   	// #3
  41284c:	csel	w0, w0, w1, ge  // ge = tcont
  412850:	str	w0, [x20, #144]
  412854:	ldr	w1, [x25, #224]
  412858:	ldr	w0, [x20, #144]
  41285c:	sub	w2, w1, #0x1
  412860:	cmp	w1, w0
  412864:	csel	w0, w2, w0, gt
  412868:	str	w0, [x20, #144]
  41286c:	ldr	x0, [x20]
  412870:	ldrsw	x19, [x0, #112]
  412874:	ldr	w1, [x20, #32]
  412878:	ldr	x0, [x20, #24]
  41287c:	bl	41bef8 <ferror@plt+0x191c8>
  412880:	cbz	x0, 4128cc <ferror@plt+0xfb9c>
  412884:	ldrsw	x0, [x20, #36]
  412888:	cmp	x1, x0
  41288c:	b.cc	4128cc <ferror@plt+0xfb9c>  // b.lo, b.ul, b.last
  412890:	ldrb	w2, [x20, #114]
  412894:	cbz	w2, 4128a4 <ferror@plt+0xfb74>
  412898:	ldr	w2, [x20, #144]
  41289c:	add	w2, w2, #0x2
  4128a0:	add	x0, x0, w2, sxtw
  4128a4:	sub	x2, x1, x0
  4128a8:	cmp	x2, #0xa
  4128ac:	mov	x3, #0xa                   	// #10
  4128b0:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  4128b4:	sub	x2, x19, x2
  4128b8:	cmp	x0, x2
  4128bc:	ccmp	x1, x19, #0x0, hi  // hi = pmore
  4128c0:	b.cs	412988 <ferror@plt+0xfc58>  // b.hs, b.nlast
  4128c4:	ldr	w0, [x20, #148]
  4128c8:	tbnz	w0, #31, 412994 <ferror@plt+0xfc64>
  4128cc:	ldrb	w0, [x25, #228]
  4128d0:	cbnz	w0, 4129ac <ferror@plt+0xfc7c>
  4128d4:	ldp	x19, x20, [sp, #16]
  4128d8:	ldp	x21, x22, [sp, #32]
  4128dc:	ldp	x23, x24, [sp, #48]
  4128e0:	ldp	x25, x26, [sp, #64]
  4128e4:	ldp	x27, x28, [sp, #80]
  4128e8:	ldp	x29, x30, [sp], #144
  4128ec:	ret
  4128f0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4128f4:	add	x2, x2, #0xa40
  4128f8:	mov	w1, #0x4cd                 	// #1229
  4128fc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412900:	add	x0, x0, #0x9f0
  412904:	bl	4102b4 <ferror@plt+0xd584>
  412908:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41290c:	add	x2, x2, #0xa40
  412910:	mov	w1, #0x4d3                 	// #1235
  412914:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412918:	add	x0, x0, #0x9f0
  41291c:	bl	4102b4 <ferror@plt+0xd584>
  412920:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412924:	add	x2, x2, #0xa40
  412928:	mov	w1, #0x4d4                 	// #1236
  41292c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412930:	add	x0, x0, #0x9f0
  412934:	bl	4102b4 <ferror@plt+0xd584>
  412938:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41293c:	add	x2, x2, #0xa40
  412940:	mov	w1, #0x4d6                 	// #1238
  412944:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412948:	add	x0, x0, #0x9f0
  41294c:	bl	4102b4 <ferror@plt+0xd584>
  412950:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412954:	add	x2, x2, #0xa40
  412958:	mov	w1, #0x4d8                 	// #1240
  41295c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412960:	add	x0, x0, #0x9f0
  412964:	bl	4102b4 <ferror@plt+0xd584>
  412968:	str	wzr, [x19, #4]
  41296c:	b	412804 <ferror@plt+0xfad4>
  412970:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412974:	add	x2, x2, #0xa68
  412978:	mov	w1, #0x36a                 	// #874
  41297c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412980:	add	x0, x0, #0x9f0
  412984:	bl	4102b4 <ferror@plt+0xd584>
  412988:	sub	w0, w0, w2
  41298c:	str	w0, [x20, #148]
  412990:	b	4128c4 <ferror@plt+0xfb94>
  412994:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412998:	add	x2, x2, #0xa68
  41299c:	mov	w1, #0x386                 	// #902
  4129a0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4129a4:	add	x0, x0, #0x9f0
  4129a8:	bl	4102b4 <ferror@plt+0xd584>
  4129ac:	ldr	w21, [x20, #148]
  4129b0:	add	w21, w21, w19
  4129b4:	cmp	w21, #0x63
  4129b8:	b.gt	4129f8 <ferror@plt+0xfcc8>
  4129bc:	mov	w1, #0x20                  	// #32
  4129c0:	mov	x0, x20
  4129c4:	bl	4118a8 <ferror@plt+0xeb78>
  4129c8:	mov	w1, #0x20                  	// #32
  4129cc:	ldr	x0, [x20, #8]
  4129d0:	bl	416928 <ferror@plt+0x13bf8>
  4129d4:	ldr	w19, [x20, #148]
  4129d8:	add	w19, w19, #0x1
  4129dc:	cmp	w21, w19
  4129e0:	b.lt	412b08 <ferror@plt+0xfdd8>  // b.tstop
  4129e4:	add	w23, w21, #0x1
  4129e8:	mov	w22, #0x6667                	// #26215
  4129ec:	movk	w22, #0x6666, lsl #16
  4129f0:	mov	w24, #0x20                  	// #32
  4129f4:	b	412ae0 <ferror@plt+0xfdb0>
  4129f8:	mov	w1, #0x20                  	// #32
  4129fc:	mov	x0, x20
  412a00:	bl	4118a8 <ferror@plt+0xeb78>
  412a04:	mov	w1, #0x20                  	// #32
  412a08:	ldr	x0, [x20, #8]
  412a0c:	bl	416928 <ferror@plt+0x13bf8>
  412a10:	ldr	w19, [x20, #148]
  412a14:	add	w19, w19, #0x1
  412a18:	cmp	w21, w19
  412a1c:	b.lt	412a9c <ferror@plt+0xfd6c>  // b.tstop
  412a20:	add	w23, w21, #0x1
  412a24:	mov	w22, #0x6667                	// #26215
  412a28:	movk	w22, #0x6666, lsl #16
  412a2c:	mov	w25, #0x20                  	// #32
  412a30:	mov	w24, #0x851f                	// #34079
  412a34:	movk	w24, #0x51eb, lsl #16
  412a38:	b	412a54 <ferror@plt+0xfd24>
  412a3c:	mov	w1, w25
  412a40:	ldr	x0, [x20, #8]
  412a44:	bl	416928 <ferror@plt+0x13bf8>
  412a48:	add	w19, w19, #0x1
  412a4c:	cmp	w23, w19
  412a50:	b.eq	412a9c <ferror@plt+0xfd6c>  // b.none
  412a54:	smull	x0, w19, w22
  412a58:	asr	x0, x0, #34
  412a5c:	sub	w0, w0, w19, asr #31
  412a60:	add	w0, w0, w0, lsl #2
  412a64:	cmp	w19, w0, lsl #1
  412a68:	b.ne	412a3c <ferror@plt+0xfd0c>  // b.any
  412a6c:	smull	x1, w19, w24
  412a70:	asr	x1, x1, #37
  412a74:	sub	w1, w1, w19, asr #31
  412a78:	smull	x0, w1, w22
  412a7c:	asr	x0, x0, #34
  412a80:	sub	w0, w0, w1, asr #31
  412a84:	add	w0, w0, w0, lsl #2
  412a88:	sub	w1, w1, w0, lsl #1
  412a8c:	add	w1, w1, #0x30
  412a90:	ldr	x0, [x20, #8]
  412a94:	bl	416928 <ferror@plt+0x13bf8>
  412a98:	b	412a48 <ferror@plt+0xfd18>
  412a9c:	ldr	x0, [x20, #8]
  412aa0:	bl	4168c4 <ferror@plt+0x13b94>
  412aa4:	b	4129bc <ferror@plt+0xfc8c>
  412aa8:	smull	x1, w19, w22
  412aac:	asr	x1, x1, #34
  412ab0:	sub	w0, w1, w19, asr #31
  412ab4:	smull	x1, w0, w22
  412ab8:	asr	x1, x1, #34
  412abc:	sub	w1, w1, w0, asr #31
  412ac0:	add	w1, w1, w1, lsl #2
  412ac4:	sub	w1, w0, w1, lsl #1
  412ac8:	add	w1, w1, #0x30
  412acc:	ldr	x0, [x20, #8]
  412ad0:	bl	416928 <ferror@plt+0x13bf8>
  412ad4:	add	w19, w19, #0x1
  412ad8:	cmp	w19, w23
  412adc:	b.eq	412b08 <ferror@plt+0xfdd8>  // b.none
  412ae0:	smull	x0, w19, w22
  412ae4:	asr	x0, x0, #34
  412ae8:	sub	w0, w0, w19, asr #31
  412aec:	add	w0, w0, w0, lsl #2
  412af0:	cmp	w19, w0, lsl #1
  412af4:	b.eq	412aa8 <ferror@plt+0xfd78>  // b.none
  412af8:	mov	w1, w24
  412afc:	ldr	x0, [x20, #8]
  412b00:	bl	416928 <ferror@plt+0x13bf8>
  412b04:	b	412ad4 <ferror@plt+0xfda4>
  412b08:	ldr	x0, [x20, #8]
  412b0c:	bl	4168c4 <ferror@plt+0x13b94>
  412b10:	mov	w1, #0x20                  	// #32
  412b14:	mov	x0, x20
  412b18:	bl	4118a8 <ferror@plt+0xeb78>
  412b1c:	mov	w1, #0x20                  	// #32
  412b20:	ldr	x0, [x20, #8]
  412b24:	bl	416928 <ferror@plt+0x13bf8>
  412b28:	ldr	w19, [x20, #148]
  412b2c:	add	w19, w19, #0x1
  412b30:	cmp	w21, w19
  412b34:	b.lt	412b70 <ferror@plt+0xfe40>  // b.tstop
  412b38:	add	w21, w21, #0x1
  412b3c:	mov	w22, #0x6667                	// #26215
  412b40:	movk	w22, #0x6666, lsl #16
  412b44:	smull	x1, w19, w22
  412b48:	asr	x1, x1, #34
  412b4c:	sub	w1, w1, w19, asr #31
  412b50:	add	w1, w1, w1, lsl #2
  412b54:	sub	w1, w19, w1, lsl #1
  412b58:	add	w1, w1, #0x30
  412b5c:	ldr	x0, [x20, #8]
  412b60:	bl	416928 <ferror@plt+0x13bf8>
  412b64:	add	w19, w19, #0x1
  412b68:	cmp	w21, w19
  412b6c:	b.ne	412b44 <ferror@plt+0xfe14>  // b.any
  412b70:	ldr	x0, [x20, #8]
  412b74:	bl	4168c4 <ferror@plt+0x13b94>
  412b78:	b	4128d4 <ferror@plt+0xfba4>
  412b7c:	mov	w26, #0x0                   	// #0
  412b80:	mov	w24, #0x0                   	// #0
  412b84:	mov	w1, #0x1                   	// #1
  412b88:	cmp	w1, #0x4
  412b8c:	csel	w28, w1, w27, cs  // cs = hs, nlast
  412b90:	csel	w1, w1, w27, cs  // cs = hs, nlast
  412b94:	add	x1, x1, #0x1
  412b98:	lsl	x1, x1, #3
  412b9c:	mov	x0, #0x0                   	// #0
  412ba0:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412ba4:	ldr	w1, [x0]
  412ba8:	bfxil	w1, w28, #0, #31
  412bac:	str	w1, [x0]
  412bb0:	ubfx	x1, x1, #24, #7
  412bb4:	strb	w1, [x0, #3]
  412bb8:	str	wzr, [x0, #4]
  412bbc:	cbz	w26, 412bf4 <ferror@plt+0xfec4>
  412bc0:	cbz	w24, 412be8 <ferror@plt+0xfeb8>
  412bc4:	sub	w2, w24, #0x1
  412bc8:	add	x2, x2, #0x2
  412bcc:	lsl	x2, x2, #3
  412bd0:	mov	x1, #0x8                   	// #8
  412bd4:	ldr	x3, [x19, x1]
  412bd8:	str	x3, [x0, x1]
  412bdc:	add	x1, x1, #0x8
  412be0:	cmp	x1, x2
  412be4:	b.ne	412bd4 <ferror@plt+0xfea4>  // b.any
  412be8:	str	w24, [x0, #4]
  412bec:	mov	x19, x0
  412bf0:	b	412c44 <ferror@plt+0xff14>
  412bf4:	mov	x19, x0
  412bf8:	b	412c44 <ferror@plt+0xff14>
  412bfc:	ldr	w1, [x19, #4]
  412c00:	ldr	w0, [x19]
  412c04:	add	w1, w1, #0x1
  412c08:	and	w0, w0, #0x7fffffff
  412c0c:	bl	4195d0 <ferror@plt+0x168a0>
  412c10:	mov	w24, w0
  412c14:	ldr	w26, [x19, #4]
  412c18:	ubfiz	x1, x24, #3, #32
  412c1c:	add	x1, x1, #0x8
  412c20:	mov	x0, x19
  412c24:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412c28:	mov	x19, x0
  412c2c:	ldr	w0, [x0]
  412c30:	bfxil	w0, w24, #0, #31
  412c34:	str	w0, [x19]
  412c38:	ubfx	x0, x0, #24, #7
  412c3c:	strb	w0, [x19, #3]
  412c40:	str	w26, [x19, #4]
  412c44:	ldr	w0, [x19, #4]
  412c48:	add	w1, w0, #0x1
  412c4c:	str	w1, [x19, #4]
  412c50:	ubfiz	x0, x0, #3, #32
  412c54:	add	x0, x0, #0x8
  412c58:	add	x1, x19, x0
  412c5c:	str	w22, [x19, x0]
  412c60:	str	w23, [x1, #4]
  412c64:	add	w21, w21, #0x1
  412c68:	ldr	x1, [x20, #120]
  412c6c:	cbz	x1, 412428 <ferror@plt+0xf6f8>
  412c70:	ldr	w0, [x1, #4]
  412c74:	cmp	w0, w21
  412c78:	b.ls	412438 <ferror@plt+0xf708>  // b.plast
  412c7c:	ubfiz	x0, x21, #2, #32
  412c80:	add	x0, x0, w21, uxtw
  412c84:	add	x0, x1, x0, lsl #3
  412c88:	ldr	w22, [x0, #8]
  412c8c:	ldr	w23, [x0, #16]
  412c90:	cmp	w22, w23
  412c94:	b.hi	412410 <ferror@plt+0xf6e0>  // b.pmore
  412c98:	cbz	x19, 412b7c <ferror@plt+0xfe4c>
  412c9c:	ldr	w24, [x19, #4]
  412ca0:	ldr	w0, [x19]
  412ca4:	ubfx	x0, x0, #0, #31
  412ca8:	cmp	w0, w24
  412cac:	b.ne	412c44 <ferror@plt+0xff14>  // b.any
  412cb0:	ldrsb	w0, [x19, #3]
  412cb4:	add	w1, w24, #0x1
  412cb8:	mov	w26, #0x1                   	// #1
  412cbc:	tbz	w0, #31, 412bfc <ferror@plt+0xfecc>
  412cc0:	b	412b88 <ferror@plt+0xfe58>
  412cc4:	ldr	w1, [x19, #4]
  412cc8:	ldr	w0, [x19]
  412ccc:	add	w1, w1, #0x1
  412cd0:	and	w0, w0, #0x7fffffff
  412cd4:	bl	4195d0 <ferror@plt+0x168a0>
  412cd8:	mov	w23, w0
  412cdc:	ldr	w28, [x19, #4]
  412ce0:	ubfiz	x1, x23, #3, #32
  412ce4:	add	x1, x1, #0x8
  412ce8:	mov	x0, x19
  412cec:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412cf0:	mov	x19, x0
  412cf4:	ldr	w0, [x0]
  412cf8:	bfxil	w0, w23, #0, #31
  412cfc:	str	w0, [x19]
  412d00:	ubfx	x0, x0, #24, #7
  412d04:	strb	w0, [x19, #3]
  412d08:	str	w28, [x19, #4]
  412d0c:	ldr	w0, [x19, #4]
  412d10:	add	w1, w0, #0x1
  412d14:	str	w1, [x19, #4]
  412d18:	ubfiz	x0, x0, #3, #32
  412d1c:	add	x0, x0, #0x8
  412d20:	add	x1, x19, x0
  412d24:	str	w24, [x19, x0]
  412d28:	str	w22, [x1, #4]
  412d2c:	add	w21, w21, #0x1
  412d30:	ldr	x0, [x20, #128]
  412d34:	cbz	x0, 412470 <ferror@plt+0xf740>
  412d38:	ldr	w1, [x0, #4]
  412d3c:	cmp	w1, w21
  412d40:	b.ls	412470 <ferror@plt+0xf740>  // b.plast
  412d44:	add	x0, x0, w21, uxtw #3
  412d48:	ldr	x22, [x0, #8]
  412d4c:	cbz	x22, 412440 <ferror@plt+0xf710>
  412d50:	add	x8, sp, #0x70
  412d54:	ldr	w0, [x22]
  412d58:	bl	41bd48 <ferror@plt+0x19018>
  412d5c:	ldr	w23, [sp, #120]
  412d60:	mov	x0, x22
  412d64:	bl	4346b8 <ferror@plt+0x31988>
  412d68:	ands	w0, w0, #0xff
  412d6c:	ccmp	w23, #0x1, #0x4, ne  // ne = any
  412d70:	cset	w0, gt
  412d74:	sub	w23, w23, w0
  412d78:	mov	w24, w23
  412d7c:	add	x8, sp, #0x70
  412d80:	ldr	w0, [x22, #4]
  412d84:	bl	41bd48 <ferror@plt+0x19018>
  412d88:	ldr	w22, [sp, #120]
  412d8c:	cmp	w23, w22
  412d90:	b.hi	412458 <ferror@plt+0xf728>  // b.pmore
  412d94:	cbz	x19, 412dc0 <ferror@plt+0x10090>
  412d98:	ldr	w23, [x19, #4]
  412d9c:	ldr	w0, [x19]
  412da0:	ubfx	x0, x0, #0, #31
  412da4:	cmp	w0, w23
  412da8:	b.ne	412d0c <ferror@plt+0xffdc>  // b.any
  412dac:	ldrsb	w0, [x19, #3]
  412db0:	tbz	w0, #31, 412cc4 <ferror@plt+0xff94>
  412db4:	add	w1, w23, #0x1
  412db8:	str	w27, [sp, #108]
  412dbc:	b	412dcc <ferror@plt+0x1009c>
  412dc0:	str	wzr, [sp, #108]
  412dc4:	mov	w23, #0x0                   	// #0
  412dc8:	mov	w1, w27
  412dcc:	cmp	w1, #0x4
  412dd0:	csel	w28, w1, w26, cs  // cs = hs, nlast
  412dd4:	csel	w1, w1, w26, cs  // cs = hs, nlast
  412dd8:	add	x1, x1, #0x1
  412ddc:	lsl	x1, x1, #3
  412de0:	mov	x0, #0x0                   	// #0
  412de4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412de8:	ldr	w1, [x0]
  412dec:	bfxil	w1, w28, #0, #31
  412df0:	str	w1, [x0]
  412df4:	ubfx	x1, x1, #24, #7
  412df8:	strb	w1, [x0, #3]
  412dfc:	str	wzr, [x0, #4]
  412e00:	ldr	w1, [sp, #108]
  412e04:	cbz	w1, 412e3c <ferror@plt+0x1010c>
  412e08:	cbz	w23, 412e30 <ferror@plt+0x10100>
  412e0c:	sub	w2, w23, #0x1
  412e10:	add	x2, x2, #0x2
  412e14:	lsl	x2, x2, #3
  412e18:	mov	x1, #0x8                   	// #8
  412e1c:	ldr	x3, [x19, x1]
  412e20:	str	x3, [x0, x1]
  412e24:	add	x1, x1, #0x8
  412e28:	cmp	x2, x1
  412e2c:	b.ne	412e1c <ferror@plt+0x100ec>  // b.any
  412e30:	str	w23, [x0, #4]
  412e34:	mov	x19, x0
  412e38:	b	412d0c <ferror@plt+0xffdc>
  412e3c:	mov	x19, x0
  412e40:	b	412d0c <ferror@plt+0xffdc>
  412e44:	mov	x1, #0x10                  	// #16
  412e48:	mov	x0, #0x0                   	// #0
  412e4c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  412e50:	mov	x19, x0
  412e54:	ldr	w0, [x0]
  412e58:	mov	w1, #0x1                   	// #1
  412e5c:	bfxil	w0, w1, #0, #31
  412e60:	str	w0, [x19]
  412e64:	ubfx	x0, x0, #24, #7
  412e68:	strb	w0, [x19, #3]
  412e6c:	str	wzr, [x19, #4]
  412e70:	ldr	w22, [x20, #32]
  412e74:	b	4123e4 <ferror@plt+0xf6b4>
  412e78:	stp	x29, x30, [sp, #-48]!
  412e7c:	mov	x29, sp
  412e80:	stp	x19, x20, [sp, #16]
  412e84:	mov	x20, x0
  412e88:	ldr	w0, [x0, #12]
  412e8c:	cmp	w0, w1
  412e90:	b.ne	412ea0 <ferror@plt+0x10170>  // b.any
  412e94:	ldp	x19, x20, [sp, #16]
  412e98:	ldp	x29, x30, [sp], #48
  412e9c:	ret
  412ea0:	mov	w19, w1
  412ea4:	cmn	w0, #0x1
  412ea8:	b.ne	412ee8 <ferror@plt+0x101b8>  // b.any
  412eac:	str	w19, [x20, #12]
  412eb0:	cbz	w19, 412f34 <ferror@plt+0x10204>
  412eb4:	cmp	w19, #0x0
  412eb8:	b.gt	412efc <ferror@plt+0x101cc>
  412ebc:	cmn	w19, #0x2
  412ec0:	b.eq	412f20 <ferror@plt+0x101f0>  // b.none
  412ec4:	cmn	w19, #0x1
  412ec8:	b.eq	412e94 <ferror@plt+0x10164>  // b.none
  412ecc:	cmn	w19, #0x3
  412ed0:	b.ne	412f8c <ferror@plt+0x1025c>  // b.any
  412ed4:	ldr	x0, [x20]
  412ed8:	ldr	x1, [x20, #40]
  412edc:	ldr	x0, [x0]
  412ee0:	bl	416f20 <ferror@plt+0x141f0>
  412ee4:	b	412e94 <ferror@plt+0x10164>
  412ee8:	ldr	x0, [x20]
  412eec:	ldr	x1, [x20, #48]
  412ef0:	ldr	x0, [x0]
  412ef4:	bl	416f20 <ferror@plt+0x141f0>
  412ef8:	b	412eac <ferror@plt+0x1017c>
  412efc:	cmp	w19, #0x1
  412f00:	b.eq	412f78 <ferror@plt+0x10248>  // b.none
  412f04:	cmp	w19, #0x2
  412f08:	b.ne	412f8c <ferror@plt+0x1025c>  // b.any
  412f0c:	ldr	x0, [x20]
  412f10:	ldr	x1, [x20, #24]
  412f14:	ldr	x0, [x0]
  412f18:	bl	416f20 <ferror@plt+0x141f0>
  412f1c:	b	412e94 <ferror@plt+0x10164>
  412f20:	ldr	x0, [x20]
  412f24:	ldr	x1, [x20, #32]
  412f28:	ldr	x0, [x0]
  412f2c:	bl	416f20 <ferror@plt+0x141f0>
  412f30:	b	412e94 <ferror@plt+0x10164>
  412f34:	stp	x21, x22, [sp, #32]
  412f38:	ldr	x0, [x20]
  412f3c:	ldr	x21, [x0]
  412f40:	ldrb	w22, [x21, #67]
  412f44:	ldr	w0, [x20, #8]
  412f48:	bl	40e920 <ferror@plt+0xbbf0>
  412f4c:	mov	x19, x0
  412f50:	bl	402680 <strlen@plt>
  412f54:	mov	x2, x0
  412f58:	mov	x1, x19
  412f5c:	mov	w0, w22
  412f60:	bl	411460 <ferror@plt+0xe730>
  412f64:	mov	x1, x0
  412f68:	mov	x0, x21
  412f6c:	bl	416f20 <ferror@plt+0x141f0>
  412f70:	ldp	x21, x22, [sp, #32]
  412f74:	b	412e94 <ferror@plt+0x10164>
  412f78:	ldr	x0, [x20]
  412f7c:	ldr	x1, [x20, #16]
  412f80:	ldr	x0, [x0]
  412f84:	bl	416f20 <ferror@plt+0x141f0>
  412f88:	b	412e94 <ferror@plt+0x10164>
  412f8c:	cmp	w19, #0x2
  412f90:	b.le	412fac <ferror@plt+0x1027c>
  412f94:	ldr	x0, [x20]
  412f98:	ldr	x0, [x0]
  412f9c:	tbz	w19, #0, 412fc8 <ferror@plt+0x10298>
  412fa0:	ldr	x1, [x20, #16]
  412fa4:	bl	416f20 <ferror@plt+0x141f0>
  412fa8:	b	412e94 <ferror@plt+0x10164>
  412fac:	stp	x21, x22, [sp, #32]
  412fb0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412fb4:	add	x2, x2, #0xa70
  412fb8:	mov	w1, #0x17f                 	// #383
  412fbc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  412fc0:	add	x0, x0, #0x9f0
  412fc4:	bl	4102b4 <ferror@plt+0xd584>
  412fc8:	ldr	x1, [x20, #24]
  412fcc:	b	412fa4 <ferror@plt+0x10274>
  412fd0:	stp	x29, x30, [sp, #-32]!
  412fd4:	mov	x29, sp
  412fd8:	str	x19, [sp, #16]
  412fdc:	mov	x19, x0
  412fe0:	mov	w1, #0xffffffff            	// #-1
  412fe4:	add	x0, x0, #0x38
  412fe8:	bl	412e78 <ferror@plt+0x10148>
  412fec:	ldr	x0, [x19, #8]
  412ff0:	bl	4168c4 <ferror@plt+0x13b94>
  412ff4:	ldr	x19, [sp, #16]
  412ff8:	ldp	x29, x30, [sp], #32
  412ffc:	ret
  413000:	stp	x29, x30, [sp, #-48]!
  413004:	mov	x29, sp
  413008:	stp	x19, x20, [sp, #16]
  41300c:	stp	x21, x22, [sp, #32]
  413010:	mov	x22, x0
  413014:	mov	x19, x1
  413018:	mov	w20, w2
  41301c:	ldr	w1, [x1]
  413020:	cmp	w1, w2
  413024:	b.gt	413068 <ferror@plt+0x10338>
  413028:	ldr	w1, [x19]
  41302c:	cmp	w20, w1
  413030:	b.le	413058 <ferror@plt+0x10328>
  413034:	mov	w21, #0x20                  	// #32
  413038:	mov	w1, w21
  41303c:	ldr	x0, [x22, #8]
  413040:	bl	416928 <ferror@plt+0x13bf8>
  413044:	ldr	w3, [x19]
  413048:	add	w3, w3, #0x1
  41304c:	str	w3, [x19]
  413050:	cmp	w3, w20
  413054:	b.lt	413038 <ferror@plt+0x10308>  // b.tstop
  413058:	ldp	x19, x20, [sp, #16]
  41305c:	ldp	x21, x22, [sp, #32]
  413060:	ldp	x29, x30, [sp], #48
  413064:	ret
  413068:	and	w21, w3, #0xff
  41306c:	bl	412fd0 <ferror@plt+0x102a0>
  413070:	cbnz	w21, 413080 <ferror@plt+0x10350>
  413074:	ldr	w0, [x22, #148]
  413078:	str	w0, [x19]
  41307c:	b	413028 <ferror@plt+0x102f8>
  413080:	mov	w1, #0x20                  	// #32
  413084:	mov	x0, x22
  413088:	bl	4118a8 <ferror@plt+0xeb78>
  41308c:	b	413074 <ferror@plt+0x10344>
  413090:	stp	x29, x30, [sp, #-224]!
  413094:	mov	x29, sp
  413098:	stp	x19, x20, [sp, #16]
  41309c:	str	x21, [sp, #32]
  4130a0:	mov	x19, x0
  4130a4:	mov	w20, w1
  4130a8:	mov	w3, #0x4                   	// #4
  4130ac:	mov	x2, x0
  4130b0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4130b4:	ldr	x1, [x0, #944]
  4130b8:	add	x0, sp, #0x48
  4130bc:	bl	411f30 <ferror@plt+0xf200>
  4130c0:	str	w20, [sp, #56]
  4130c4:	mov	w3, #0x1                   	// #1
  4130c8:	str	w3, [sp, #60]
  4130cc:	mov	w2, #0x0                   	// #0
  4130d0:	add	x1, sp, #0x38
  4130d4:	add	x0, sp, #0x48
  4130d8:	bl	411ad0 <ferror@plt+0xeda0>
  4130dc:	mov	w21, w0
  4130e0:	tst	w0, #0xff
  4130e4:	b.ne	413140 <ferror@plt+0x10410>  // b.any
  4130e8:	ldr	x0, [sp, #208]
  4130ec:	cbz	x0, 4130fc <ferror@plt+0x103cc>
  4130f0:	ldrsb	w1, [x0, #3]
  4130f4:	tbnz	w1, #31, 413158 <ferror@plt+0x10428>
  4130f8:	bl	402a90 <free@plt>
  4130fc:	ldr	x0, [sp, #200]
  413100:	cbz	x0, 413110 <ferror@plt+0x103e0>
  413104:	ldrsb	w1, [x0, #3]
  413108:	tbnz	w1, #31, 413160 <ferror@plt+0x10430>
  41310c:	bl	402a90 <free@plt>
  413110:	ldr	x0, [sp, #192]
  413114:	cbz	x0, 413124 <ferror@plt+0x103f4>
  413118:	ldrsb	w1, [x0, #3]
  41311c:	tbnz	w1, #31, 413168 <ferror@plt+0x10438>
  413120:	bl	402a90 <free@plt>
  413124:	add	x0, sp, #0x80
  413128:	bl	411944 <ferror@plt+0xec14>
  41312c:	mov	w0, w21
  413130:	ldp	x19, x20, [sp, #16]
  413134:	ldr	x21, [sp, #32]
  413138:	ldp	x29, x30, [sp], #224
  41313c:	ret
  413140:	mov	x3, #0x0                   	// #0
  413144:	mov	w2, #0x1                   	// #1
  413148:	mov	w1, w20
  41314c:	mov	x0, x19
  413150:	bl	4342c4 <ferror@plt+0x31594>
  413154:	b	4130e8 <ferror@plt+0x103b8>
  413158:	str	wzr, [x0, #4]
  41315c:	b	4130fc <ferror@plt+0x103cc>
  413160:	str	wzr, [x0, #4]
  413164:	b	413110 <ferror@plt+0x103e0>
  413168:	str	wzr, [x0, #4]
  41316c:	b	413124 <ferror@plt+0x103f4>
  413170:	stp	x29, x30, [sp, #-448]!
  413174:	mov	x29, sp
  413178:	stp	x19, x20, [sp, #16]
  41317c:	stp	x21, x22, [sp, #32]
  413180:	mov	x21, x0
  413184:	str	x0, [sp, #152]
  413188:	mov	x19, x1
  41318c:	mov	w20, w2
  413190:	ldr	x0, [x0]
  413194:	bl	4168c4 <ferror@plt+0x13b94>
  413198:	mov	w1, #0x0                   	// #0
  41319c:	mov	x0, x19
  4131a0:	bl	4341e4 <ferror@plt+0x314b4>
  4131a4:	ldrb	w3, [x21, #108]
  4131a8:	eor	w1, w3, #0x1
  4131ac:	cmp	w0, #0x1
  4131b0:	cset	w3, ls  // ls = plast
  4131b4:	orr	w3, w3, w1
  4131b8:	ands	w1, w3, #0xff
  4131bc:	str	w1, [sp, #160]
  4131c0:	b.eq	4131d4 <ferror@plt+0x104a4>  // b.none
  4131c4:	ldp	x19, x20, [sp, #16]
  4131c8:	ldp	x21, x22, [sp, #32]
  4131cc:	ldp	x29, x30, [sp], #448
  4131d0:	ret
  4131d4:	ldr	w1, [x21, #200]
  4131d8:	cmp	w1, w0
  4131dc:	b.ne	4131e8 <ferror@plt+0x104b8>  // b.any
  4131e0:	ldr	w1, [x19, #120]
  4131e4:	cbz	w1, 4131c4 <ferror@plt+0x10494>
  4131e8:	stp	x23, x24, [sp, #48]
  4131ec:	stp	x25, x26, [sp, #64]
  4131f0:	stp	x27, x28, [sp, #80]
  4131f4:	ldr	x21, [sp, #152]
  4131f8:	str	w0, [x21, #200]
  4131fc:	ldr	x0, [x21]
  413200:	bl	4165a4 <ferror@plt+0x13874>
  413204:	str	x0, [sp, #184]
  413208:	mov	x1, #0x0                   	// #0
  41320c:	ldr	x0, [x21]
  413210:	bl	416568 <ferror@plt+0x13838>
  413214:	mov	w3, w20
  413218:	mov	x2, x19
  41321c:	mov	x1, x21
  413220:	add	x0, sp, #0x128
  413224:	bl	411f30 <ferror@plt+0xf200>
  413228:	str	wzr, [sp, #136]
  41322c:	add	x21, sp, #0x160
  413230:	str	x21, [sp, #176]
  413234:	mov	x26, x21
  413238:	b	413298 <ferror@plt+0x10568>
  41323c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413240:	add	x2, x2, #0xa80
  413244:	mov	w1, #0x408                 	// #1032
  413248:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41324c:	add	x0, x0, #0x9f0
  413250:	bl	4102b4 <ferror@plt+0xd584>
  413254:	ldr	w0, [sp, #136]
  413258:	cmp	w0, #0x0
  41325c:	b.gt	41330c <ferror@plt+0x105dc>
  413260:	ldr	w0, [x21, #12]
  413264:	ldr	w1, [sp, #328]
  413268:	cmp	w1, w0
  41326c:	b.gt	41330c <ferror@plt+0x105dc>
  413270:	add	x0, x21, w20, uxtw #3
  413274:	ldr	w1, [x0, #12]
  413278:	str	x1, [sp, #120]
  41327c:	ldr	w0, [x0, #8]
  413280:	str	x0, [sp, #104]
  413284:	cmp	x1, x0
  413288:	b.ge	414324 <ferror@plt+0x115f4>  // b.tcont
  41328c:	ldr	w0, [sp, #136]
  413290:	add	w0, w0, #0x1
  413294:	str	w0, [sp, #136]
  413298:	ldr	x21, [sp, #432]
  41329c:	mov	w0, #0x0                   	// #0
  4132a0:	cbz	x21, 4132a8 <ferror@plt+0x10578>
  4132a4:	ldr	w0, [x21, #4]
  4132a8:	ldr	w1, [sp, #136]
  4132ac:	cmp	w1, w0
  4132b0:	b.ge	4141c4 <ferror@plt+0x11494>  // b.tcont
  4132b4:	mov	w20, w1
  4132b8:	ldr	x0, [sp, #152]
  4132bc:	ldrb	w0, [x0, #223]
  4132c0:	cbz	w0, 413254 <ferror@plt+0x10524>
  4132c4:	cmp	w1, #0x0
  4132c8:	b.le	413270 <ferror@plt+0x10540>
  4132cc:	ldrb	w0, [sp, #410]
  4132d0:	cbz	w0, 41323c <ferror@plt+0x1050c>
  4132d4:	ldr	w0, [sp, #440]
  4132d8:	tbnz	w0, #31, 413300 <ferror@plt+0x105d0>
  4132dc:	mov	w19, #0x0                   	// #0
  4132e0:	mov	w22, #0x2e                  	// #46
  4132e4:	mov	w1, w22
  4132e8:	ldr	x0, [sp, #304]
  4132ec:	bl	416928 <ferror@plt+0x13bf8>
  4132f0:	add	w19, w19, #0x1
  4132f4:	ldr	w0, [sp, #440]
  4132f8:	cmp	w0, w19
  4132fc:	b.ge	4132e4 <ferror@plt+0x105b4>  // b.tcont
  413300:	ldr	x0, [sp, #304]
  413304:	bl	4168c4 <ferror@plt+0x13b94>
  413308:	b	413270 <ferror@plt+0x10540>
  41330c:	ldr	w0, [sp, #328]
  413310:	add	x19, x21, w20, uxtw #3
  413314:	ldr	w3, [x19, #8]
  413318:	cmp	w0, w3
  41331c:	b.cc	413340 <ferror@plt+0x10610>  // b.lo, b.ul, b.last
  413320:	ldr	w1, [x19, #12]
  413324:	cmp	w0, w1
  413328:	b.hi	413340 <ferror@plt+0x10610>  // b.pmore
  41332c:	ldp	x0, x1, [sp, #320]
  413330:	stp	x0, x1, [sp, #232]
  413334:	ldp	x0, x1, [sp, #336]
  413338:	stp	x0, x1, [sp, #248]
  41333c:	b	4133c8 <ferror@plt+0x10698>
  413340:	ldr	x2, [sp, #416]
  413344:	mov	w0, #0x0                   	// #0
  413348:	mov	w4, #0x0                   	// #0
  41334c:	b	413354 <ferror@plt+0x10624>
  413350:	add	w0, w0, #0x1
  413354:	mov	w1, w4
  413358:	cbz	x2, 413360 <ferror@plt+0x10630>
  41335c:	ldr	w1, [x2, #4]
  413360:	cmp	w0, w1
  413364:	b.cs	4133ec <ferror@plt+0x106bc>  // b.hs, b.nlast
  413368:	ubfiz	x1, x0, #2, #32
  41336c:	add	x1, x1, w0, uxtw
  413370:	add	x1, x2, x1, lsl #3
  413374:	ldr	w1, [x1, #8]
  413378:	cmp	w3, w1
  41337c:	b.hi	413350 <ferror@plt+0x10620>  // b.pmore
  413380:	ldr	w5, [x19, #12]
  413384:	cmp	w1, w5
  413388:	b.hi	413350 <ferror@plt+0x10620>  // b.pmore
  41338c:	ldp	x4, x5, [sp, #320]
  413390:	add	x3, sp, #0x200
  413394:	stp	x4, x5, [x3, #-248]
  413398:	ldp	x4, x5, [sp, #336]
  41339c:	stp	x4, x5, [x3, #-232]
  4133a0:	ubfiz	x3, x0, #2, #32
  4133a4:	add	x0, x3, w0, uxtw
  4133a8:	add	x0, x2, x0, lsl #3
  4133ac:	ldr	w0, [x0, #12]
  4133b0:	str	w1, [sp, #272]
  4133b4:	str	w0, [sp, #276]
  4133b8:	add	x0, sp, #0x200
  4133bc:	ldp	x0, x1, [x0, #-248]
  4133c0:	stp	x0, x1, [sp, #232]
  4133c4:	stp	x4, x5, [sp, #248]
  4133c8:	ldp	x0, x1, [sp, #232]
  4133cc:	stp	x0, x1, [sp, #192]
  4133d0:	ldp	x0, x1, [sp, #248]
  4133d4:	stp	x0, x1, [sp, #208]
  4133d8:	ldr	x0, [sp, #152]
  4133dc:	ldr	x2, [x0, #144]
  4133e0:	add	x1, sp, #0xc0
  4133e4:	blr	x2
  4133e8:	b	413270 <ferror@plt+0x10540>
  4133ec:	mov	w22, #0x0                   	// #0
  4133f0:	b	4133f8 <ferror@plt+0x106c8>
  4133f4:	add	w22, w22, #0x1
  4133f8:	ldr	x0, [sp, #424]
  4133fc:	cbz	x0, 413458 <ferror@plt+0x10728>
  413400:	ldr	w1, [x0, #4]
  413404:	cmp	w1, w22
  413408:	b.ls	413458 <ferror@plt+0x10728>  // b.plast
  41340c:	add	x0, x0, w22, uxtw #3
  413410:	ldr	x0, [x0, #8]
  413414:	add	x8, sp, #0x108
  413418:	ldr	w0, [x0]
  41341c:	bl	41bd48 <ferror@plt+0x19018>
  413420:	ldr	w0, [sp, #272]
  413424:	ldr	w1, [x19, #8]
  413428:	cmp	w0, w1
  41342c:	b.cc	4133f4 <ferror@plt+0x106c4>  // b.lo, b.ul, b.last
  413430:	ldr	w1, [x19, #12]
  413434:	cmp	w0, w1
  413438:	b.hi	4133f4 <ferror@plt+0x106c4>  // b.pmore
  41343c:	add	x0, sp, #0x200
  413440:	ldp	x0, x1, [x0, #-248]
  413444:	stp	x0, x1, [sp, #232]
  413448:	add	x0, sp, #0x200
  41344c:	ldp	x0, x1, [x0, #-232]
  413450:	stp	x0, x1, [sp, #248]
  413454:	b	4133c8 <ferror@plt+0x10698>
  413458:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41345c:	add	x2, x2, #0xaa0
  413460:	mov	w1, #0x449                 	// #1097
  413464:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413468:	add	x0, x0, #0x9f0
  41346c:	bl	4102b4 <ferror@plt+0xd584>
  413470:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413474:	add	x2, x2, #0xab8
  413478:	mov	w1, #0x638                 	// #1592
  41347c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413480:	add	x0, x0, #0x9f0
  413484:	bl	4102b4 <ferror@plt+0xd584>
  413488:	ldr	x0, [x19, #8]
  41348c:	ldrb	w1, [x0, x23]
  413490:	ldr	x0, [sp, #304]
  413494:	bl	416928 <ferror@plt+0x13bf8>
  413498:	add	x23, x23, #0x1
  41349c:	ldr	x0, [x19, #16]
  4134a0:	sub	x0, x0, #0x1
  4134a4:	cmp	x0, x23
  4134a8:	b.hi	413488 <ferror@plt+0x10758>  // b.pmore
  4134ac:	mov	w1, w24
  4134b0:	mov	x0, x26
  4134b4:	bl	412e78 <ferror@plt+0x10148>
  4134b8:	ldr	x0, [sp, #304]
  4134bc:	bl	4168c4 <ferror@plt+0x13b94>
  4134c0:	add	w21, w21, #0x1
  4134c4:	ldr	x0, [sp, #424]
  4134c8:	cbz	x0, 41355c <ferror@plt+0x1082c>
  4134cc:	ldr	w1, [x0, #4]
  4134d0:	cmp	w1, w21
  4134d4:	b.ls	41355c <ferror@plt+0x1082c>  // b.plast
  4134d8:	add	x0, x0, w21, uxtw #3
  4134dc:	ldr	x19, [x0, #8]
  4134e0:	mov	x0, x19
  4134e4:	bl	4346b8 <ferror@plt+0x31988>
  4134e8:	and	w0, w0, #0xff
  4134ec:	cbz	w0, 4134c0 <ferror@plt+0x10790>
  4134f0:	ldr	w1, [x19]
  4134f4:	ldr	w0, [x19, #4]
  4134f8:	cmp	w1, w0
  4134fc:	b.ne	413470 <ferror@plt+0x10740>  // b.any
  413500:	ldr	w2, [sp, #96]
  413504:	ldr	x1, [sp, #320]
  413508:	mov	x0, x19
  41350c:	bl	43459c <ferror@plt+0x3186c>
  413510:	and	w0, w0, #0xff
  413514:	cbz	w0, 4134c0 <ferror@plt+0x10790>
  413518:	mov	w1, w24
  41351c:	mov	x0, x26
  413520:	bl	412e78 <ferror@plt+0x10148>
  413524:	mov	w1, w27
  413528:	add	x0, sp, #0x128
  41352c:	bl	4118a8 <ferror@plt+0xeb78>
  413530:	mov	w1, w25
  413534:	ldr	x0, [sp, #304]
  413538:	bl	416928 <ferror@plt+0x13bf8>
  41353c:	mov	w1, #0xfffffffe            	// #-2
  413540:	mov	x0, x26
  413544:	bl	412e78 <ferror@plt+0x10148>
  413548:	ldr	x0, [x19, #16]
  41354c:	cmp	x0, #0x1
  413550:	b.eq	4134ac <ferror@plt+0x1077c>  // b.none
  413554:	mov	x23, #0x0                   	// #0
  413558:	b	413488 <ferror@plt+0x10758>
  41355c:	mov	w1, #0xffffffff            	// #-1
  413560:	mov	x0, x26
  413564:	bl	412e78 <ferror@plt+0x10148>
  413568:	cmp	w22, #0x0
  41356c:	b.le	41449c <ferror@plt+0x1176c>
  413570:	add	x1, x20, w22, sxtw
  413574:	mov	w21, w22
  413578:	ldurb	w2, [x1, #-1]
  41357c:	and	w0, w2, #0xfffffffb
  413580:	and	w0, w0, #0xff
  413584:	cmp	w2, #0x20
  413588:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  41358c:	b.ne	41364c <ferror@plt+0x1091c>  // b.any
  413590:	sub	x1, x1, #0x1
  413594:	subs	w21, w21, #0x1
  413598:	b.ne	413578 <ferror@plt+0x10848>  // b.any
  41359c:	cbz	w21, 4135bc <ferror@plt+0x1088c>
  4135a0:	add	x0, x20, w21, sxtw
  4135a4:	ldurb	w1, [x0, #-1]
  4135a8:	and	w0, w1, #0xfffffffb
  4135ac:	and	w0, w0, #0xff
  4135b0:	cmp	w1, #0x20
  4135b4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4135b8:	b.eq	413688 <ferror@plt+0x10958>  // b.none
  4135bc:	ldrsw	x0, [sp, #444]
  4135c0:	add	x20, x20, x0
  4135c4:	ldrb	w0, [sp, #410]
  4135c8:	cbz	w0, 4136a0 <ferror@plt+0x10970>
  4135cc:	ldr	w0, [sp, #96]
  4135d0:	bl	4107bc <ferror@plt+0xda8c>
  4135d4:	mov	w22, w0
  4135d8:	ldr	w0, [sp, #440]
  4135dc:	sub	w0, w0, w22
  4135e0:	cmp	w0, #0x0
  4135e4:	b.le	413610 <ferror@plt+0x108e0>
  4135e8:	mov	w19, #0x0                   	// #0
  4135ec:	mov	w23, #0x20                  	// #32
  4135f0:	mov	w1, w23
  4135f4:	ldr	x0, [sp, #304]
  4135f8:	bl	416928 <ferror@plt+0x13bf8>
  4135fc:	add	w19, w19, #0x1
  413600:	ldr	w0, [sp, #440]
  413604:	sub	w0, w0, w22
  413608:	cmp	w0, w19
  41360c:	b.gt	4135f0 <ferror@plt+0x108c0>
  413610:	ldr	w2, [sp, #100]
  413614:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413618:	add	x1, x1, #0xb00
  41361c:	ldr	x0, [sp, #304]
  413620:	bl	418d58 <ferror@plt+0x16028>
  413624:	ldr	w19, [sp, #444]
  413628:	add	w19, w19, #0x1
  41362c:	cmp	w19, w21
  413630:	b.gt	413744 <ferror@plt+0x10a14>
  413634:	add	w21, w21, #0x1
  413638:	mov	w23, #0x0                   	// #0
  41363c:	mov	w22, #0x7fffffff            	// #2147483647
  413640:	mov	w24, w22
  413644:	mov	w25, #0xffffffff            	// #-1
  413648:	b	413718 <ferror@plt+0x109e8>
  41364c:	tbnz	w21, #31, 413670 <ferror@plt+0x10940>
  413650:	cmp	w22, w21
  413654:	b.ge	41359c <ferror@plt+0x1086c>  // b.tcont
  413658:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41365c:	add	x2, x2, #0xad0
  413660:	mov	w1, #0x2ba                 	// #698
  413664:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413668:	add	x0, x0, #0x9f0
  41366c:	bl	4102b4 <ferror@plt+0xd584>
  413670:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413674:	add	x2, x2, #0xad0
  413678:	mov	w1, #0x2b9                 	// #697
  41367c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413680:	add	x0, x0, #0x9f0
  413684:	bl	4102b4 <ferror@plt+0xd584>
  413688:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41368c:	add	x2, x2, #0xad0
  413690:	mov	w1, #0x2bb                 	// #699
  413694:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413698:	add	x0, x0, #0x9f0
  41369c:	bl	4102b4 <ferror@plt+0xd584>
  4136a0:	mov	w1, #0x20                  	// #32
  4136a4:	ldr	x0, [sp, #304]
  4136a8:	bl	416928 <ferror@plt+0x13bf8>
  4136ac:	b	413624 <ferror@plt+0x108f4>
  4136b0:	add	x5, sp, #0x108
  4136b4:	mov	w4, w24
  4136b8:	mov	w3, #0x0                   	// #0
  4136bc:	mov	w2, w19
  4136c0:	ldr	w1, [sp, #100]
  4136c4:	add	x0, sp, #0x128
  4136c8:	bl	4116a8 <ferror@plt+0xe978>
  4136cc:	and	w0, w0, #0xff
  4136d0:	cbz	w0, 4136e4 <ferror@plt+0x109b4>
  4136d4:	ldr	w1, [sp, #264]
  4136d8:	mov	x0, x26
  4136dc:	bl	412e78 <ferror@plt+0x10148>
  4136e0:	b	413720 <ferror@plt+0x109f0>
  4136e4:	mov	w1, w25
  4136e8:	mov	x0, x26
  4136ec:	bl	412e78 <ferror@plt+0x10148>
  4136f0:	b	413720 <ferror@plt+0x109f0>
  4136f4:	cmp	w22, w24
  4136f8:	mov	w23, w19
  4136fc:	csel	w22, w22, w19, ne  // ne = any
  413700:	ldr	x0, [sp, #304]
  413704:	bl	416928 <ferror@plt+0x13bf8>
  413708:	add	x20, x20, #0x1
  41370c:	add	w19, w19, #0x1
  413710:	cmp	w19, w21
  413714:	b.eq	41374c <ferror@plt+0x10a1c>  // b.none
  413718:	ldrb	w0, [sp, #408]
  41371c:	cbnz	w0, 4136b0 <ferror@plt+0x10980>
  413720:	ldrb	w1, [x20]
  413724:	and	w2, w1, #0xffffffdf
  413728:	and	w0, w1, #0xfffffffb
  41372c:	and	w0, w0, #0xff
  413730:	tst	w2, #0xff
  413734:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  413738:	b.ne	4136f4 <ferror@plt+0x109c4>  // b.any
  41373c:	mov	w1, #0x20                  	// #32
  413740:	b	413700 <ferror@plt+0x109d0>
  413744:	mov	w23, #0x0                   	// #0
  413748:	mov	w22, #0x7fffffff            	// #2147483647
  41374c:	add	x0, sp, #0x128
  413750:	bl	412fd0 <ferror@plt+0x102a0>
  413754:	ldr	x0, [sp, #416]
  413758:	cbz	x0, 414648 <ferror@plt+0x11918>
  41375c:	add	x2, x0, #0x8
  413760:	ldr	w0, [x0, #4]
  413764:	add	x0, x0, x0, lsl #2
  413768:	add	x0, x2, x0, lsl #3
  41376c:	mov	x1, x2
  413770:	cmp	x1, x0
  413774:	b.eq	414640 <ferror@plt+0x11910>  // b.none
  413778:	ldr	w3, [x1, #16]
  41377c:	cmp	w3, #0x2
  413780:	b.eq	414640 <ferror@plt+0x11910>  // b.none
  413784:	ldr	w3, [x1]
  413788:	ldr	w4, [x1, #8]
  41378c:	cmp	w3, w4
  413790:	b.hi	4137f0 <ferror@plt+0x10ac0>  // b.pmore
  413794:	add	x1, x1, #0x28
  413798:	ldr	w5, [sp, #100]
  41379c:	cmp	w4, w5
  4137a0:	ccmp	w3, w5, #0x2, cs  // cs = hs, nlast
  4137a4:	b.hi	413770 <ferror@plt+0x10a40>  // b.pmore
  4137a8:	ldr	w20, [sp, #332]
  4137ac:	add	w20, w20, #0x1
  4137b0:	add	w3, w23, #0x1
  4137b4:	cmp	x0, x2
  4137b8:	b.eq	413818 <ferror@plt+0x10ae8>  // b.none
  4137bc:	ldr	w1, [x2]
  4137c0:	ldr	w5, [sp, #100]
  4137c4:	cmp	w1, w5
  4137c8:	b.hi	4137e8 <ferror@plt+0x10ab8>  // b.pmore
  4137cc:	ldr	w1, [x2, #8]
  4137d0:	cmp	w1, w5
  4137d4:	b.eq	413808 <ferror@plt+0x10ad8>  // b.none
  4137d8:	cmp	w23, w20
  4137dc:	ldr	w4, [sp, #100]
  4137e0:	ccmp	w1, w4, #0x0, ge  // ge = tcont
  4137e4:	csel	w20, w3, w20, hi  // hi = pmore
  4137e8:	add	x2, x2, #0x28
  4137ec:	b	4137b4 <ferror@plt+0x10a84>
  4137f0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4137f4:	add	x2, x2, #0xb08
  4137f8:	mov	w1, #0x215                 	// #533
  4137fc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413800:	add	x0, x0, #0x9f0
  413804:	bl	4102b4 <ferror@plt+0xd584>
  413808:	ldr	w1, [x2, #12]
  41380c:	cmp	w1, w20
  413810:	csinc	w20, w20, w1, lt  // lt = tstop
  413814:	b	4137e8 <ferror@plt+0x10ab8>
  413818:	mov	w1, #0x20                  	// #32
  41381c:	add	x0, sp, #0x128
  413820:	bl	4118a8 <ferror@plt+0xeb78>
  413824:	mov	w1, #0x20                  	// #32
  413828:	ldr	x0, [sp, #304]
  41382c:	bl	416928 <ferror@plt+0x13bf8>
  413830:	ldr	w19, [sp, #444]
  413834:	add	w19, w19, #0x1
  413838:	cmp	w19, w20
  41383c:	b.ge	4138e4 <ferror@plt+0x10bb4>  // b.tcont
  413840:	mov	w24, #0xffffffff            	// #-1
  413844:	mov	w21, #0x20                  	// #32
  413848:	ldr	w25, [sp, #100]
  41384c:	b	413884 <ferror@plt+0x10b54>
  413850:	mov	w1, #0x7e                  	// #126
  413854:	ldr	x0, [sp, #304]
  413858:	bl	416928 <ferror@plt+0x13bf8>
  41385c:	b	413878 <ferror@plt+0x10b48>
  413860:	mov	w1, w24
  413864:	mov	x0, x26
  413868:	bl	412e78 <ferror@plt+0x10148>
  41386c:	mov	w1, w21
  413870:	ldr	x0, [sp, #304]
  413874:	bl	416928 <ferror@plt+0x13bf8>
  413878:	add	w19, w19, #0x1
  41387c:	cmp	w19, w20
  413880:	b.eq	4138e4 <ferror@plt+0x10bb4>  // b.none
  413884:	add	x5, sp, #0x108
  413888:	mov	w4, w23
  41388c:	mov	w3, w22
  413890:	mov	w2, w19
  413894:	mov	w1, w25
  413898:	add	x0, sp, #0x128
  41389c:	bl	4116a8 <ferror@plt+0xe978>
  4138a0:	and	w0, w0, #0xff
  4138a4:	cbz	w0, 413860 <ferror@plt+0x10b30>
  4138a8:	ldr	w1, [sp, #264]
  4138ac:	mov	x0, x26
  4138b0:	bl	412e78 <ferror@plt+0x10148>
  4138b4:	ldrb	w0, [sp, #268]
  4138b8:	cbz	w0, 413850 <ferror@plt+0x10b20>
  4138bc:	ldr	w0, [sp, #264]
  4138c0:	mov	w1, #0x5e                  	// #94
  4138c4:	cmp	w0, #0x2
  4138c8:	b.gt	4138d8 <ferror@plt+0x10ba8>
  4138cc:	ldr	x1, [sp, #296]
  4138d0:	add	x0, x1, w0, sxtw
  4138d4:	ldrb	w1, [x0, #116]
  4138d8:	ldr	x0, [sp, #304]
  4138dc:	bl	416928 <ferror@plt+0x13bf8>
  4138e0:	b	413878 <ferror@plt+0x10b48>
  4138e4:	add	x0, sp, #0x128
  4138e8:	bl	412fd0 <ferror@plt+0x102a0>
  4138ec:	ldrb	w0, [sp, #409]
  4138f0:	cbz	w0, 414648 <ferror@plt+0x11918>
  4138f4:	ldr	x20, [sp, #416]
  4138f8:	cbnz	x20, 4144ac <ferror@plt+0x1177c>
  4138fc:	b	414648 <ferror@plt+0x11918>
  413900:	add	w0, w20, #0x1
  413904:	str	w24, [sp, #128]
  413908:	b	4143fc <ferror@plt+0x116cc>
  41390c:	cmp	w1, #0x1
  413910:	b.hi	413964 <ferror@plt+0x10c34>  // b.pmore
  413914:	ldr	w2, [x19, #4]
  413918:	sub	w0, w2, #0x1
  41391c:	cbz	w2, 4139a0 <ferror@plt+0x10c70>
  413920:	mov	w24, #0x1                   	// #1
  413924:	mov	w6, #0x7fffffff            	// #2147483647
  413928:	mov	w5, w0
  41392c:	ubfiz	x1, x0, #2, #32
  413930:	add	x3, x1, x5
  413934:	add	x3, x19, x3, lsl #3
  413938:	ldrsw	x4, [x3, #12]
  41393c:	ldr	x1, [x3, #32]
  413940:	add	x1, x4, x1
  413944:	cmp	x1, w6, sxtw
  413948:	cinc	w24, w24, cs  // cs = hs, nlast
  41394c:	str	w24, [x3, #40]
  413950:	sub	w0, w0, #0x1
  413954:	cmp	w2, w0
  413958:	b.ls	4143c4 <ferror@plt+0x11694>  // b.plast
  41395c:	ldr	w6, [x3, #12]
  413960:	b	413928 <ferror@plt+0x10bf8>
  413964:	adrp	x3, 411000 <ferror@plt+0xe2d0>
  413968:	add	x3, x3, #0x660
  41396c:	mov	x2, #0x28                  	// #40
  413970:	mov	w1, w1
  413974:	add	x0, x19, #0x8
  413978:	bl	41e554 <ferror@plt+0x1b824>
  41397c:	b	413914 <ferror@plt+0x10be4>
  413980:	ldr	x26, [sp, #128]
  413984:	ldr	w0, [x19, #4]
  413988:	cbnz	w0, 4143c8 <ferror@plt+0x11698>
  41398c:	ldrsb	w0, [x19, #3]
  413990:	tbnz	w0, #31, 413b20 <ferror@plt+0x10df0>
  413994:	mov	x0, x19
  413998:	bl	402a90 <free@plt>
  41399c:	b	414648 <ferror@plt+0x11918>
  4139a0:	mov	w24, #0x1                   	// #1
  4139a4:	mov	w25, #0x0                   	// #0
  4139a8:	mov	w20, #0x0                   	// #0
  4139ac:	add	x0, sp, #0x108
  4139b0:	str	x0, [sp, #112]
  4139b4:	str	x26, [sp, #128]
  4139b8:	ldr	x26, [sp, #176]
  4139bc:	b	413a3c <ferror@plt+0x10d0c>
  4139c0:	ldr	w2, [x21, #4]
  4139c4:	ldr	w0, [sp, #264]
  4139c8:	cmp	w2, w0
  4139cc:	b.lt	413ae4 <ferror@plt+0x10db4>  // b.tstop
  4139d0:	mov	w3, w27
  4139d4:	ldr	x1, [sp, #112]
  4139d8:	add	x0, sp, #0x128
  4139dc:	bl	413000 <ferror@plt+0x102d0>
  4139e0:	ldr	w1, [x21]
  4139e4:	mov	x0, x26
  4139e8:	bl	412e78 <ferror@plt+0x10148>
  4139ec:	ldr	x1, [x21, #8]
  4139f0:	ldr	x0, [sp, #304]
  4139f4:	bl	416f20 <ferror@plt+0x141f0>
  4139f8:	mov	w1, #0xffffffff            	// #-1
  4139fc:	mov	x0, x26
  413a00:	bl	412e78 <ferror@plt+0x10148>
  413a04:	ldr	x1, [x21, #24]
  413a08:	ldr	w0, [sp, #264]
  413a0c:	add	w0, w0, w1
  413a10:	str	w0, [sp, #264]
  413a14:	add	w22, w22, #0x1
  413a18:	add	x21, x21, #0x28
  413a1c:	ldr	w0, [x19, #4]
  413a20:	cmp	w0, w22
  413a24:	b.hi	413a78 <ferror@plt+0x10d48>  // b.pmore
  413a28:	add	x0, sp, #0x128
  413a2c:	bl	412fd0 <ferror@plt+0x102a0>
  413a30:	add	w20, w20, #0x1
  413a34:	cmp	w20, w24
  413a38:	b.gt	413980 <ferror@plt+0x10c50>
  413a3c:	mov	w1, #0x20                  	// #32
  413a40:	add	x0, sp, #0x128
  413a44:	bl	4118a8 <ferror@plt+0xeb78>
  413a48:	mov	w1, #0x20                  	// #32
  413a4c:	ldr	x0, [sp, #304]
  413a50:	bl	416928 <ferror@plt+0x13bf8>
  413a54:	ldr	w0, [sp, #444]
  413a58:	add	w0, w0, #0x1
  413a5c:	str	w0, [sp, #264]
  413a60:	ldr	w0, [x19, #4]
  413a64:	cbz	w0, 413a28 <ferror@plt+0x10cf8>
  413a68:	add	x21, x19, #0x8
  413a6c:	mov	w22, #0x0                   	// #0
  413a70:	mov	w27, #0x1                   	// #1
  413a74:	mov	w28, #0x7c                  	// #124
  413a78:	ldr	w0, [x21, #32]
  413a7c:	cmp	w0, w20
  413a80:	b.lt	413a28 <ferror@plt+0x10cf8>  // b.tstop
  413a84:	b.eq	4139c0 <ferror@plt+0x10c90>  // b.none
  413a88:	ldr	w2, [x21, #4]
  413a8c:	cmp	w2, w25
  413a90:	b.eq	413a14 <ferror@plt+0x10ce4>  // b.none
  413a94:	ldr	w0, [sp, #264]
  413a98:	cmp	w2, w0
  413a9c:	b.lt	413afc <ferror@plt+0x10dcc>  // b.tstop
  413aa0:	mov	w3, w27
  413aa4:	ldr	x1, [sp, #112]
  413aa8:	add	x0, sp, #0x128
  413aac:	bl	413000 <ferror@plt+0x102d0>
  413ab0:	ldr	w1, [x21]
  413ab4:	mov	x0, x26
  413ab8:	bl	412e78 <ferror@plt+0x10148>
  413abc:	mov	w1, w28
  413ac0:	ldr	x0, [sp, #304]
  413ac4:	bl	416928 <ferror@plt+0x13bf8>
  413ac8:	mov	w1, #0xffffffff            	// #-1
  413acc:	mov	x0, x26
  413ad0:	bl	412e78 <ferror@plt+0x10148>
  413ad4:	ldr	w25, [sp, #264]
  413ad8:	add	w0, w25, #0x1
  413adc:	str	w0, [sp, #264]
  413ae0:	b	413a14 <ferror@plt+0x10ce4>
  413ae4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413ae8:	add	x2, x2, #0xb20
  413aec:	mov	w1, #0x609                 	// #1545
  413af0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413af4:	add	x0, x0, #0x9f0
  413af8:	bl	4102b4 <ferror@plt+0xd584>
  413afc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b00:	add	x2, x2, #0xb20
  413b04:	mov	w1, #0x612                 	// #1554
  413b08:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b0c:	add	x0, x0, #0x9f0
  413b10:	bl	4102b4 <ferror@plt+0xd584>
  413b14:	ldr	x0, [x20]
  413b18:	bl	402a90 <free@plt>
  413b1c:	b	4143d8 <ferror@plt+0x116a8>
  413b20:	str	wzr, [x19, #4]
  413b24:	b	414648 <ferror@plt+0x11918>
  413b28:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b2c:	add	x2, x2, #0xb38
  413b30:	mov	w1, #0x6bc                 	// #1724
  413b34:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b38:	add	x0, x0, #0x9f0
  413b3c:	bl	4102b4 <ferror@plt+0xd584>
  413b40:	add	x8, sp, #0x108
  413b44:	bl	41bd48 <ferror@plt+0x19018>
  413b48:	ldr	w22, [sp, #276]
  413b4c:	sub	w22, w22, #0x1
  413b50:	cmp	w27, w22
  413b54:	csel	w22, w27, w22, ge  // ge = tcont
  413b58:	cmp	w21, w22
  413b5c:	b.le	413b90 <ferror@plt+0x10e60>
  413b60:	sub	w0, w21, #0x1
  413b64:	cmp	w22, w0
  413b68:	b.ne	413b74 <ferror@plt+0x10e44>  // b.any
  413b6c:	mov	w22, w0
  413b70:	b	413b90 <ferror@plt+0x10e60>
  413b74:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b78:	add	x2, x2, #0xb38
  413b7c:	mov	w1, #0x6bc                 	// #1724
  413b80:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413b84:	add	x0, x0, #0x9f0
  413b88:	bl	4102b4 <ferror@plt+0xd584>
  413b8c:	mov	w22, w27
  413b90:	cbz	x19, 414248 <ferror@plt+0x11518>
  413b94:	ldr	w0, [x19, #4]
  413b98:	cbz	w0, 413c0c <ferror@plt+0x10edc>
  413b9c:	sub	w0, w0, #0x1
  413ba0:	add	x0, x19, x0, lsl #3
  413ba4:	ldr	x24, [x0, #8]
  413ba8:	ldr	w0, [x24]
  413bac:	cmp	w0, w25
  413bb0:	b.gt	413da4 <ferror@plt+0x11074>
  413bb4:	ldr	w0, [x24, #8]
  413bb8:	cmp	w0, w21
  413bbc:	b.gt	413dbc <ferror@plt+0x1108c>
  413bc0:	ldr	w0, [x24, #12]
  413bc4:	cmp	w0, w21
  413bc8:	b.lt	413c0c <ferror@plt+0x10edc>  // b.tstop
  413bcc:	ldr	w0, [x24, #4]
  413bd0:	str	w0, [sp, #140]
  413bd4:	add	w1, w0, #0x1
  413bd8:	str	w1, [sp, #164]
  413bdc:	sub	w27, w21, #0x1
  413be0:	cmp	w0, w27
  413be4:	ccmp	w1, w27, #0x4, ne  // ne = any
  413be8:	b.gt	413dd4 <ferror@plt+0x110a4>
  413bec:	ldr	w1, [sp, #96]
  413bf0:	ldr	x0, [sp, #128]
  413bf4:	bl	41bef8 <ferror@plt+0x191c8>
  413bf8:	str	x0, [sp, #168]
  413bfc:	str	x1, [sp, #144]
  413c00:	cmp	x0, #0x0
  413c04:	ccmp	w27, w1, #0x0, ne  // ne = any
  413c08:	b.lt	413dec <ferror@plt+0x110bc>  // b.tstop
  413c0c:	ldr	x24, [x20, #8]
  413c10:	ldr	x27, [x20, #16]
  413c14:	mov	x0, #0x28                  	// #40
  413c18:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  413c1c:	mov	x20, x0
  413c20:	str	w25, [x0]
  413c24:	str	w26, [x0, #4]
  413c28:	str	w21, [x0, #8]
  413c2c:	str	w22, [x0, #12]
  413c30:	mov	x0, x24
  413c34:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  413c38:	str	x0, [x20, #16]
  413c3c:	str	x27, [x20, #24]
  413c40:	add	x27, x27, #0x1
  413c44:	str	x27, [x20, #32]
  413c48:	ldr	w21, [x19, #4]
  413c4c:	ldr	w0, [x19]
  413c50:	ubfx	x0, x0, #0, #31
  413c54:	cmp	w0, w21
  413c58:	b.ne	413cb4 <ferror@plt+0x10f84>  // b.any
  413c5c:	ldrsb	w0, [x19, #3]
  413c60:	add	w1, w21, #0x1
  413c64:	mov	w24, w28
  413c68:	tbnz	w0, #31, 41428c <ferror@plt+0x1155c>
  413c6c:	ldr	w1, [x19, #4]
  413c70:	ldr	w0, [x19]
  413c74:	add	w1, w1, #0x1
  413c78:	and	w0, w0, #0x7fffffff
  413c7c:	bl	4195d0 <ferror@plt+0x168a0>
  413c80:	mov	w21, w0
  413c84:	ldr	w22, [x19, #4]
  413c88:	ubfiz	x1, x21, #3, #32
  413c8c:	add	x1, x1, #0x8
  413c90:	mov	x0, x19
  413c94:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  413c98:	mov	x19, x0
  413c9c:	ldr	w1, [x0]
  413ca0:	bfxil	w1, w21, #0, #31
  413ca4:	str	w1, [x0]
  413ca8:	ubfx	x1, x1, #24, #7
  413cac:	strb	w1, [x0, #3]
  413cb0:	str	w22, [x0, #4]
  413cb4:	ldr	w0, [x19, #4]
  413cb8:	add	w1, w0, #0x1
  413cbc:	str	w1, [x19, #4]
  413cc0:	add	x0, x19, w0, uxtw #3
  413cc4:	str	x20, [x0, #8]
  413cc8:	add	w23, w23, #0x1
  413ccc:	ldr	x0, [sp, #424]
  413cd0:	cbz	x0, 413ff8 <ferror@plt+0x112c8>
  413cd4:	ldr	w1, [x0, #4]
  413cd8:	cmp	w1, w23
  413cdc:	b.ls	413ff8 <ferror@plt+0x112c8>  // b.plast
  413ce0:	add	x0, x0, w23, uxtw #3
  413ce4:	ldr	x20, [x0, #8]
  413ce8:	mov	x0, x20
  413cec:	bl	4346b8 <ferror@plt+0x31988>
  413cf0:	and	w0, w0, #0xff
  413cf4:	cbnz	w0, 413cc8 <ferror@plt+0x10f98>
  413cf8:	ldr	w2, [sp, #96]
  413cfc:	ldr	x1, [sp, #320]
  413d00:	mov	x0, x20
  413d04:	bl	43459c <ferror@plt+0x3186c>
  413d08:	ands	w28, w0, #0xff
  413d0c:	b.eq	413cc8 <ferror@plt+0x10f98>  // b.none
  413d10:	add	x8, sp, #0x108
  413d14:	ldr	w0, [x20]
  413d18:	bl	41bd48 <ferror@plt+0x19018>
  413d1c:	ldr	w25, [sp, #276]
  413d20:	add	x8, sp, #0x108
  413d24:	ldr	w0, [x20, #4]
  413d28:	bl	41bd48 <ferror@plt+0x19018>
  413d2c:	ldr	w0, [sp, #276]
  413d30:	sub	w26, w0, #0x1
  413d34:	cmp	w25, w0
  413d38:	cset	w24, ne  // ne = any
  413d3c:	cmp	w25, w26
  413d40:	cset	w0, gt
  413d44:	ands	w24, w24, w0
  413d48:	b.ne	413b28 <ferror@plt+0x10df8>  // b.any
  413d4c:	add	x8, sp, #0x108
  413d50:	ldr	w0, [x20]
  413d54:	bl	41bd48 <ferror@plt+0x19018>
  413d58:	ldr	w21, [sp, #276]
  413d5c:	ldr	x0, [x20, #16]
  413d60:	sub	w27, w21, #0x1
  413d64:	add	w27, w27, w0
  413d68:	ldr	w0, [x20, #4]
  413d6c:	ldr	w1, [x20]
  413d70:	cmp	w1, w0
  413d74:	b.ne	413b40 <ferror@plt+0x10e10>  // b.any
  413d78:	cmp	w21, w27
  413d7c:	b.le	413b8c <ferror@plt+0x10e5c>
  413d80:	sub	w22, w21, #0x1
  413d84:	cmp	w27, w22
  413d88:	b.eq	413b90 <ferror@plt+0x10e60>  // b.none
  413d8c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413d90:	add	x2, x2, #0xb38
  413d94:	mov	w1, #0x6bc                 	// #1724
  413d98:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413d9c:	add	x0, x0, #0x9f0
  413da0:	bl	4102b4 <ferror@plt+0xd584>
  413da4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413da8:	add	x2, x2, #0xb48
  413dac:	mov	w1, #0x77a                 	// #1914
  413db0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413db4:	add	x0, x0, #0x9f0
  413db8:	bl	4102b4 <ferror@plt+0xd584>
  413dbc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413dc0:	add	x2, x2, #0xb48
  413dc4:	mov	w1, #0x77c                 	// #1916
  413dc8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413dcc:	add	x0, x0, #0x9f0
  413dd0:	bl	4102b4 <ferror@plt+0xd584>
  413dd4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413dd8:	add	x2, x2, #0xb38
  413ddc:	mov	w1, #0x6bc                 	// #1724
  413de0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413de4:	add	x0, x0, #0x9f0
  413de8:	bl	4102b4 <ferror@plt+0xd584>
  413dec:	ldr	x22, [x24, #24]
  413df0:	tbnz	w22, #31, 413eec <ferror@plt+0x111bc>
  413df4:	ldr	w0, [sp, #164]
  413df8:	subs	w27, w21, w0
  413dfc:	b.mi	413f04 <ferror@plt+0x111d4>  // b.first
  413e00:	add	w28, w27, w22
  413e04:	ldr	x0, [x20, #16]
  413e08:	adds	w0, w28, w0
  413e0c:	str	w0, [sp, #164]
  413e10:	b.mi	413f1c <ferror@plt+0x111ec>  // b.first
  413e14:	ldrsw	x25, [sp, #164]
  413e18:	add	x21, x25, #0x1
  413e1c:	ldr	x0, [x24, #32]
  413e20:	cmp	x0, x21
  413e24:	b.cc	413f34 <ferror@plt+0x11204>  // b.lo, b.ul, b.last
  413e28:	ldr	w0, [sp, #140]
  413e2c:	tbnz	w0, #31, 413f50 <ferror@plt+0x11220>
  413e30:	ldr	w0, [sp, #140]
  413e34:	ldr	w1, [sp, #144]
  413e38:	cmp	w0, w1
  413e3c:	b.ge	413f68 <ferror@plt+0x11238>  // b.tcont
  413e40:	ldr	w0, [sp, #140]
  413e44:	add	w0, w0, w27
  413e48:	ldr	w1, [sp, #144]
  413e4c:	cmp	w1, w0
  413e50:	b.lt	413f80 <ferror@plt+0x11250>  // b.tstop
  413e54:	ldr	w0, [sp, #140]
  413e58:	ldr	x1, [sp, #168]
  413e5c:	add	x1, x1, w0, sxtw
  413e60:	sxtw	x21, w27
  413e64:	sxtw	x0, w22
  413e68:	add	x22, x21, w22, sxtw
  413e6c:	ldr	x2, [x24, #32]
  413e70:	cmp	x22, x2
  413e74:	b.cs	413f98 <ferror@plt+0x11268>  // b.hs, b.nlast
  413e78:	ldr	x3, [x24, #16]
  413e7c:	mov	x2, x21
  413e80:	add	x0, x3, x0
  413e84:	bl	402620 <memcpy@plt>
  413e88:	ldr	x1, [x20, #8]
  413e8c:	ldr	x2, [x20, #16]
  413e90:	tbnz	w28, #31, 413fb0 <ferror@plt+0x11280>
  413e94:	sxtw	x28, w28
  413e98:	add	x3, x2, x28
  413e9c:	ldr	x0, [x24, #32]
  413ea0:	cmp	x3, x0
  413ea4:	b.cs	413fc8 <ferror@plt+0x11298>  // b.hs, b.nlast
  413ea8:	ldr	x0, [x24, #16]
  413eac:	add	x0, x0, x28
  413eb0:	bl	402620 <memcpy@plt>
  413eb4:	str	x25, [x24, #24]
  413eb8:	ldr	x0, [x24, #32]
  413ebc:	cmp	x25, x0
  413ec0:	b.cs	413fe0 <ferror@plt+0x112b0>  // b.hs, b.nlast
  413ec4:	ldr	x0, [x24, #16]
  413ec8:	ldr	w1, [sp, #164]
  413ecc:	strb	wzr, [x0, w1, sxtw]
  413ed0:	str	w26, [x24, #4]
  413ed4:	ldr	x27, [x20, #16]
  413ed8:	add	x21, x21, x27
  413edc:	ldr	w0, [x24, #12]
  413ee0:	add	w21, w0, w21
  413ee4:	str	w21, [x24, #12]
  413ee8:	b	413cc8 <ferror@plt+0x10f98>
  413eec:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413ef0:	add	x2, x2, #0xb48
  413ef4:	mov	w1, #0x792                 	// #1938
  413ef8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413efc:	add	x0, x0, #0x9f0
  413f00:	bl	4102b4 <ferror@plt+0xd584>
  413f04:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f08:	add	x2, x2, #0xb48
  413f0c:	mov	w1, #0x794                 	// #1940
  413f10:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f14:	add	x0, x0, #0x9f0
  413f18:	bl	4102b4 <ferror@plt+0xd584>
  413f1c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f20:	add	x2, x2, #0xb48
  413f24:	mov	w1, #0x796                 	// #1942
  413f28:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f2c:	add	x0, x0, #0x9f0
  413f30:	bl	4102b4 <ferror@plt+0xd584>
  413f34:	lsl	x21, x21, #1
  413f38:	mov	x1, x21
  413f3c:	ldr	x0, [x24, #16]
  413f40:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  413f44:	str	x0, [x24, #16]
  413f48:	str	x21, [x24, #32]
  413f4c:	b	413e28 <ferror@plt+0x110f8>
  413f50:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f54:	add	x2, x2, #0xb58
  413f58:	mov	w1, #0x44                  	// #68
  413f5c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f60:	add	x0, x0, #0xb60
  413f64:	bl	4102b4 <ferror@plt+0xd584>
  413f68:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f6c:	add	x2, x2, #0xb58
  413f70:	mov	w1, #0x45                  	// #69
  413f74:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f78:	add	x0, x0, #0xb60
  413f7c:	bl	4102b4 <ferror@plt+0xd584>
  413f80:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f84:	add	x2, x2, #0xb58
  413f88:	mov	w1, #0x47                  	// #71
  413f8c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f90:	add	x0, x0, #0xb60
  413f94:	bl	4102b4 <ferror@plt+0xd584>
  413f98:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413f9c:	add	x2, x2, #0xb78
  413fa0:	mov	w1, #0x706                 	// #1798
  413fa4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fa8:	add	x0, x0, #0x9f0
  413fac:	bl	4102b4 <ferror@plt+0xd584>
  413fb0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fb4:	add	x2, x2, #0xb78
  413fb8:	mov	w1, #0x705                 	// #1797
  413fbc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fc0:	add	x0, x0, #0x9f0
  413fc4:	bl	4102b4 <ferror@plt+0xd584>
  413fc8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fcc:	add	x2, x2, #0xb78
  413fd0:	mov	w1, #0x706                 	// #1798
  413fd4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fd8:	add	x0, x0, #0x9f0
  413fdc:	bl	4102b4 <ferror@plt+0xd584>
  413fe0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413fe4:	add	x2, x2, #0xb88
  413fe8:	mov	w1, #0x732                 	// #1842
  413fec:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  413ff0:	add	x0, x0, #0x9f0
  413ff4:	bl	4102b4 <ferror@plt+0xd584>
  413ff8:	ldr	x26, [sp, #112]
  413ffc:	ldr	w0, [sp, #444]
  414000:	str	w0, [sp, #264]
  414004:	cbz	x19, 4143ac <ferror@plt+0x1167c>
  414008:	ldr	w0, [x19, #4]
  41400c:	cbz	w0, 41435c <ferror@plt+0x1162c>
  414010:	mov	w1, #0x20                  	// #32
  414014:	add	x0, sp, #0x128
  414018:	bl	4118a8 <ferror@plt+0xeb78>
  41401c:	mov	w21, #0x0                   	// #0
  414020:	mov	w25, #0x1                   	// #1
  414024:	mov	w27, #0xfffffffe            	// #-2
  414028:	b	41415c <ferror@plt+0x1142c>
  41402c:	mov	w3, w25
  414030:	ldr	w2, [x20, #8]
  414034:	add	x1, sp, #0x108
  414038:	add	x0, sp, #0x128
  41403c:	bl	413000 <ferror@plt+0x102d0>
  414040:	mov	w1, w27
  414044:	mov	x0, x26
  414048:	bl	412e78 <ferror@plt+0x10148>
  41404c:	ldr	x1, [x20, #16]
  414050:	ldr	x0, [sp, #304]
  414054:	bl	416f20 <ferror@plt+0x141f0>
  414058:	mov	w1, #0xffffffff            	// #-1
  41405c:	mov	x0, x26
  414060:	bl	412e78 <ferror@plt+0x10148>
  414064:	ldr	x1, [x20, #24]
  414068:	ldr	w0, [sp, #264]
  41406c:	add	w0, w0, w1
  414070:	str	w0, [sp, #264]
  414074:	b	414158 <ferror@plt+0x11428>
  414078:	ldr	w2, [x1, #4]
  41407c:	cmp	w23, w2
  414080:	b.ne	4141b4 <ferror@plt+0x11484>  // b.any
  414084:	ldr	w2, [x1, #8]
  414088:	ldr	w4, [sp, #100]
  41408c:	cmp	w4, w2
  414090:	b.ne	4141b4 <ferror@plt+0x11484>  // b.any
  414094:	ldr	w2, [x1, #12]
  414098:	cmp	w22, w2
  41409c:	b.ne	4141b4 <ferror@plt+0x11484>  // b.any
  4140a0:	ldr	x0, [x20, #24]
  4140a4:	cbz	x0, 4140f4 <ferror@plt+0x113c4>
  4140a8:	mov	w3, w25
  4140ac:	mov	w2, w23
  4140b0:	add	x1, sp, #0x108
  4140b4:	add	x0, sp, #0x128
  4140b8:	bl	413000 <ferror@plt+0x102d0>
  4140bc:	mov	w1, w27
  4140c0:	mov	x0, x26
  4140c4:	bl	412e78 <ferror@plt+0x10148>
  4140c8:	ldr	x1, [x20, #16]
  4140cc:	ldr	x0, [sp, #304]
  4140d0:	bl	416f20 <ferror@plt+0x141f0>
  4140d4:	mov	w1, #0xffffffff            	// #-1
  4140d8:	mov	x0, x26
  4140dc:	bl	412e78 <ferror@plt+0x10148>
  4140e0:	ldr	x1, [x20, #24]
  4140e4:	ldr	w0, [sp, #264]
  4140e8:	add	w0, w0, w1
  4140ec:	str	w0, [sp, #264]
  4140f0:	b	414158 <ferror@plt+0x11428>
  4140f4:	mov	w3, w25
  4140f8:	mov	w2, w23
  4140fc:	add	x1, sp, #0x108
  414100:	add	x0, sp, #0x128
  414104:	bl	413000 <ferror@plt+0x102d0>
  414108:	mov	w1, #0xfffffffd            	// #-3
  41410c:	mov	x0, x26
  414110:	bl	412e78 <ferror@plt+0x10148>
  414114:	ldr	w0, [sp, #264]
  414118:	cmp	w22, w0
  41411c:	b.lt	414144 <ferror@plt+0x11414>  // b.tstop
  414120:	mov	w24, #0x2d                  	// #45
  414124:	mov	w1, w24
  414128:	ldr	x0, [sp, #304]
  41412c:	bl	416928 <ferror@plt+0x13bf8>
  414130:	ldr	w0, [sp, #264]
  414134:	add	w0, w0, #0x1
  414138:	str	w0, [sp, #264]
  41413c:	cmp	w22, w0
  414140:	b.ge	414124 <ferror@plt+0x113f4>  // b.tcont
  414144:	mov	w1, #0xffffffff            	// #-1
  414148:	mov	x0, x26
  41414c:	bl	412e78 <ferror@plt+0x10148>
  414150:	ldr	x0, [x20, #24]
  414154:	cbnz	x0, 4140a8 <ferror@plt+0x11378>
  414158:	add	w21, w21, #0x1
  41415c:	ldr	w0, [x19, #4]
  414160:	cmp	w0, w21
  414164:	b.ls	41435c <ferror@plt+0x1162c>  // b.plast
  414168:	add	x0, x19, w21, uxtw #3
  41416c:	ldr	x20, [x0, #8]
  414170:	ldr	w23, [x20]
  414174:	ldr	w22, [x20, #4]
  414178:	add	w0, w22, #0x1
  41417c:	cmp	w23, w0
  414180:	b.eq	41402c <ferror@plt+0x112fc>  // b.none
  414184:	ldr	x0, [sp, #416]
  414188:	cbz	x0, 4140f4 <ferror@plt+0x113c4>
  41418c:	add	x1, x0, #0x8
  414190:	ldr	w0, [x0, #4]
  414194:	add	x0, x0, x0, lsl #2
  414198:	add	x0, x1, x0, lsl #3
  41419c:	cmp	x0, x1
  4141a0:	b.eq	4140f4 <ferror@plt+0x113c4>  // b.none
  4141a4:	ldr	w2, [x1]
  4141a8:	ldr	w4, [sp, #100]
  4141ac:	cmp	w4, w2
  4141b0:	b.eq	414078 <ferror@plt+0x11348>  // b.none
  4141b4:	add	x1, x1, #0x28
  4141b8:	b	41419c <ferror@plt+0x1146c>
  4141bc:	str	wzr, [x19, #4]
  4141c0:	b	41430c <ferror@plt+0x115dc>
  4141c4:	ldr	x1, [sp, #184]
  4141c8:	ldr	x0, [sp, #152]
  4141cc:	ldr	x0, [x0]
  4141d0:	bl	416568 <ferror@plt+0x13838>
  4141d4:	ldr	x0, [sp, #432]
  4141d8:	cbz	x0, 4141e8 <ferror@plt+0x114b8>
  4141dc:	ldrsb	w1, [x0, #3]
  4141e0:	tbnz	w1, #31, 414228 <ferror@plt+0x114f8>
  4141e4:	bl	402a90 <free@plt>
  4141e8:	ldr	x0, [sp, #424]
  4141ec:	cbz	x0, 4141fc <ferror@plt+0x114cc>
  4141f0:	ldrsb	w1, [x0, #3]
  4141f4:	tbnz	w1, #31, 414230 <ferror@plt+0x11500>
  4141f8:	bl	402a90 <free@plt>
  4141fc:	ldr	x0, [sp, #416]
  414200:	cbz	x0, 414210 <ferror@plt+0x114e0>
  414204:	ldrsb	w1, [x0, #3]
  414208:	tbnz	w1, #31, 414238 <ferror@plt+0x11508>
  41420c:	bl	402a90 <free@plt>
  414210:	add	x0, sp, #0x160
  414214:	bl	411944 <ferror@plt+0xec14>
  414218:	ldp	x23, x24, [sp, #48]
  41421c:	ldp	x25, x26, [sp, #64]
  414220:	ldp	x27, x28, [sp, #80]
  414224:	b	4131c4 <ferror@plt+0x10494>
  414228:	str	wzr, [x0, #4]
  41422c:	b	4141e8 <ferror@plt+0x114b8>
  414230:	str	wzr, [x0, #4]
  414234:	b	4141fc <ferror@plt+0x114cc>
  414238:	str	wzr, [x0, #4]
  41423c:	b	414210 <ferror@plt+0x114e0>
  414240:	mov	x19, x0
  414244:	b	413cb4 <ferror@plt+0x10f84>
  414248:	ldr	x28, [x20, #8]
  41424c:	ldr	x27, [x20, #16]
  414250:	mov	x0, #0x28                  	// #40
  414254:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  414258:	mov	x20, x0
  41425c:	str	w25, [x0]
  414260:	str	w26, [x0, #4]
  414264:	str	w21, [x0, #8]
  414268:	str	w22, [x0, #12]
  41426c:	mov	x0, x28
  414270:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  414274:	str	x0, [x20, #16]
  414278:	str	x27, [x20, #24]
  41427c:	add	x27, x27, #0x1
  414280:	str	x27, [x20, #32]
  414284:	mov	w21, #0x0                   	// #0
  414288:	mov	w1, #0x1                   	// #1
  41428c:	cmp	w1, #0x4
  414290:	mov	w0, #0x4                   	// #4
  414294:	csel	w22, w1, w0, cs  // cs = hs, nlast
  414298:	csel	w1, w1, w0, cs  // cs = hs, nlast
  41429c:	add	x1, x1, #0x1
  4142a0:	lsl	x1, x1, #3
  4142a4:	mov	x0, #0x0                   	// #0
  4142a8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4142ac:	ldr	w1, [x0]
  4142b0:	bfxil	w1, w22, #0, #31
  4142b4:	str	w1, [x0]
  4142b8:	ubfx	x1, x1, #24, #7
  4142bc:	strb	w1, [x0, #3]
  4142c0:	str	wzr, [x0, #4]
  4142c4:	cbz	w24, 414240 <ferror@plt+0x11510>
  4142c8:	cbz	w21, 4142f0 <ferror@plt+0x115c0>
  4142cc:	sub	w2, w21, #0x1
  4142d0:	add	x2, x2, #0x2
  4142d4:	lsl	x2, x2, #3
  4142d8:	mov	x1, #0x8                   	// #8
  4142dc:	ldr	x3, [x19, x1]
  4142e0:	str	x3, [x0, x1]
  4142e4:	add	x1, x1, #0x8
  4142e8:	cmp	x2, x1
  4142ec:	b.ne	4142dc <ferror@plt+0x115ac>  // b.any
  4142f0:	str	w21, [x0, #4]
  4142f4:	mov	x19, x0
  4142f8:	b	413cb4 <ferror@plt+0x10f84>
  4142fc:	ldrsb	w0, [x19, #3]
  414300:	tbnz	w0, #31, 4141bc <ferror@plt+0x1148c>
  414304:	mov	x0, x19
  414308:	bl	402a90 <free@plt>
  41430c:	ldr	x0, [sp, #104]
  414310:	add	x0, x0, #0x1
  414314:	str	x0, [sp, #104]
  414318:	ldr	x1, [sp, #120]
  41431c:	cmp	x1, x0
  414320:	b.lt	41328c <ferror@plt+0x1055c>  // b.tstop
  414324:	ldr	x0, [sp, #104]
  414328:	mov	w1, w0
  41432c:	str	w0, [sp, #100]
  414330:	str	w0, [sp, #96]
  414334:	ldr	x0, [sp, #320]
  414338:	bl	41bef8 <ferror@plt+0x191c8>
  41433c:	mov	x20, x0
  414340:	mov	x22, x1
  414344:	mov	w21, #0x0                   	// #0
  414348:	cbz	x0, 41430c <ferror@plt+0x115dc>
  41434c:	mov	w24, #0xffffffff            	// #-1
  414350:	mov	w27, #0x2b                  	// #43
  414354:	mov	w25, #0x2b                  	// #43
  414358:	b	4134c4 <ferror@plt+0x10794>
  41435c:	mov	w3, #0x0                   	// #0
  414360:	mov	w2, #0x0                   	// #0
  414364:	add	x1, sp, #0x108
  414368:	add	x0, sp, #0x128
  41436c:	bl	413000 <ferror@plt+0x102d0>
  414370:	mov	w20, #0x0                   	// #0
  414374:	mov	x22, #0x28                  	// #40
  414378:	ldr	w0, [x19, #4]
  41437c:	cmp	w20, w0
  414380:	b.cs	4142fc <ferror@plt+0x115cc>  // b.hs, b.nlast
  414384:	add	x0, x19, w20, uxtw #3
  414388:	ldr	x21, [x0, #8]
  41438c:	cbz	x21, 4143a4 <ferror@plt+0x11674>
  414390:	ldr	x0, [x21, #16]
  414394:	bl	402a90 <free@plt>
  414398:	mov	x1, x22
  41439c:	mov	x0, x21
  4143a0:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  4143a4:	add	w20, w20, #0x1
  4143a8:	b	414378 <ferror@plt+0x11648>
  4143ac:	mov	w3, #0x0                   	// #0
  4143b0:	mov	w2, #0x0                   	// #0
  4143b4:	add	x1, sp, #0x108
  4143b8:	add	x0, sp, #0x128
  4143bc:	bl	413000 <ferror@plt+0x102d0>
  4143c0:	b	41430c <ferror@plt+0x115dc>
  4143c4:	tbz	w24, #31, 4139a4 <ferror@plt+0x10c74>
  4143c8:	add	x20, x19, #0x10
  4143cc:	mov	w21, #0x0                   	// #0
  4143d0:	ldrb	w0, [x20, #8]
  4143d4:	cbnz	w0, 413b14 <ferror@plt+0x10de4>
  4143d8:	add	w21, w21, #0x1
  4143dc:	add	x20, x20, #0x28
  4143e0:	ldr	w0, [x19, #4]
  4143e4:	cmp	w0, w21
  4143e8:	b.hi	4143d0 <ferror@plt+0x116a0>  // b.pmore
  4143ec:	b	41398c <ferror@plt+0x10c5c>
  4143f0:	str	w28, [sp, #128]
  4143f4:	mov	w20, #0x0                   	// #0
  4143f8:	mov	w0, w24
  4143fc:	cmp	w0, #0x4
  414400:	csel	w1, w0, w23, cs  // cs = hs, nlast
  414404:	str	w1, [sp, #140]
  414408:	csel	w0, w0, w23, cs  // cs = hs, nlast
  41440c:	add	x0, x0, x0, lsl #2
  414410:	lsl	x1, x0, #3
  414414:	add	x1, x1, #0x8
  414418:	mov	x0, #0x0                   	// #0
  41441c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  414420:	ldr	w1, [x0]
  414424:	ldr	w2, [sp, #140]
  414428:	bfxil	w1, w2, #0, #31
  41442c:	str	w1, [x0]
  414430:	ubfx	x1, x1, #24, #7
  414434:	strb	w1, [x0, #3]
  414438:	str	wzr, [x0, #4]
  41443c:	ldr	w1, [sp, #128]
  414440:	cbz	w1, 414494 <ferror@plt+0x11764>
  414444:	cbz	w20, 414488 <ferror@plt+0x11758>
  414448:	sub	w1, w20, #0x1
  41444c:	add	x1, x1, x1, lsl #2
  414450:	lsl	x6, x1, #3
  414454:	add	x6, x6, #0x30
  414458:	mov	x1, #0x8                   	// #8
  41445c:	add	x2, x0, x1
  414460:	add	x3, x19, x1
  414464:	ldp	x4, x5, [x3]
  414468:	stp	x4, x5, [x2]
  41446c:	ldp	x4, x5, [x3, #16]
  414470:	stp	x4, x5, [x2, #16]
  414474:	ldr	x3, [x3, #32]
  414478:	str	x3, [x2, #32]
  41447c:	add	x1, x1, #0x28
  414480:	cmp	x1, x6
  414484:	b.ne	41445c <ferror@plt+0x1172c>  // b.any
  414488:	str	w20, [x0, #4]
  41448c:	mov	x19, x0
  414490:	b	4145d8 <ferror@plt+0x118a8>
  414494:	mov	x19, x0
  414498:	b	4145d8 <ferror@plt+0x118a8>
  41449c:	tbnz	w22, #31, 413670 <ferror@plt+0x10940>
  4144a0:	mov	w21, w22
  4144a4:	b	41359c <ferror@plt+0x1086c>
  4144a8:	ldr	x20, [sp, #416]
  4144ac:	mov	x19, #0x0                   	// #0
  4144b0:	mov	w22, #0x0                   	// #0
  4144b4:	mov	w23, #0x4                   	// #4
  4144b8:	ldr	w28, [sp, #160]
  4144bc:	mov	w24, #0x1                   	// #1
  4144c0:	mov	w27, w22
  4144c4:	ldr	w0, [x20, #4]
  4144c8:	cmp	w0, w22
  4144cc:	b.ls	414620 <ferror@plt+0x118f0>  // b.plast
  4144d0:	ubfiz	x0, x22, #2, #32
  4144d4:	add	x0, x0, w22, uxtw
  4144d8:	add	x0, x20, x0, lsl #3
  4144dc:	ldr	x0, [x0, #40]
  4144e0:	cbz	x0, 414614 <ferror@plt+0x118e4>
  4144e4:	ubfiz	x1, x27, #2, #32
  4144e8:	add	x1, x1, w22, uxtw
  4144ec:	add	x1, x20, x1, lsl #3
  4144f0:	ldr	w1, [x1, #28]
  4144f4:	ldr	w2, [sp, #100]
  4144f8:	cmp	w1, w2
  4144fc:	b.ne	414614 <ferror@plt+0x118e4>  // b.any
  414500:	ubfiz	x1, x27, #2, #32
  414504:	add	x1, x1, w22, uxtw
  414508:	add	x1, x20, x1, lsl #3
  41450c:	ldr	w2, [x1, #32]
  414510:	ldr	w1, [sp, #444]
  414514:	cmp	w2, w1
  414518:	b.le	414614 <ferror@plt+0x118e4>
  41451c:	ubfiz	x1, x27, #2, #32
  414520:	add	x1, x1, w22, uxtw
  414524:	add	x1, x20, x1, lsl #3
  414528:	ldr	x2, [x0]
  41452c:	ldr	x2, [x2, #16]
  414530:	ldr	w1, [x1, #36]
  414534:	blr	x2
  414538:	mov	x21, x0
  41453c:	and	w25, w1, #0xff
  414540:	cbz	x0, 414614 <ferror@plt+0x118e4>
  414544:	ubfiz	x0, x27, #2, #32
  414548:	add	x27, x0, w22, uxtw
  41454c:	add	x20, x20, x27, lsl #3
  414550:	ldr	w27, [x20, #32]
  414554:	mov	x0, x21
  414558:	bl	402680 <strlen@plt>
  41455c:	str	x0, [sp, #112]
  414560:	cbz	x19, 4143f0 <ferror@plt+0x116c0>
  414564:	ldr	w20, [x19, #4]
  414568:	ldr	w0, [x19]
  41456c:	ubfx	x0, x0, #0, #31
  414570:	cmp	w0, w20
  414574:	b.ne	4145d8 <ferror@plt+0x118a8>  // b.any
  414578:	ldrsb	w0, [x19, #3]
  41457c:	tbnz	w0, #31, 413900 <ferror@plt+0x10bd0>
  414580:	ldr	w1, [x19, #4]
  414584:	ldr	w0, [x19]
  414588:	add	w1, w1, #0x1
  41458c:	and	w0, w0, #0x7fffffff
  414590:	bl	4195d0 <ferror@plt+0x168a0>
  414594:	mov	w20, w0
  414598:	ldr	w0, [x19, #4]
  41459c:	str	w0, [sp, #128]
  4145a0:	ubfiz	x1, x20, #2, #32
  4145a4:	add	x1, x1, w20, uxtw
  4145a8:	lsl	x1, x1, #3
  4145ac:	add	x1, x1, #0x8
  4145b0:	mov	x0, x19
  4145b4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4145b8:	mov	x19, x0
  4145bc:	ldr	w0, [x0]
  4145c0:	bfxil	w0, w20, #0, #31
  4145c4:	str	w0, [x19]
  4145c8:	ubfx	x0, x0, #24, #7
  4145cc:	strb	w0, [x19, #3]
  4145d0:	ldr	w0, [sp, #128]
  4145d4:	str	w0, [x19, #4]
  4145d8:	ldr	w0, [x19, #4]
  4145dc:	add	w1, w0, #0x1
  4145e0:	str	w1, [x19, #4]
  4145e4:	ubfiz	x1, x0, #2, #32
  4145e8:	add	x0, x1, w0, uxtw
  4145ec:	lsl	x0, x0, #3
  4145f0:	add	x0, x0, #0x8
  4145f4:	add	x1, x19, x0
  4145f8:	str	w22, [x19, x0]
  4145fc:	str	w27, [x1, #4]
  414600:	str	x21, [x1, #8]
  414604:	strb	w25, [x1, #16]
  414608:	ldr	x0, [sp, #112]
  41460c:	str	x0, [x1, #24]
  414610:	str	wzr, [x1, #32]
  414614:	add	w22, w22, #0x1
  414618:	ldr	x20, [sp, #416]
  41461c:	cbnz	x20, 4144c0 <ferror@plt+0x11790>
  414620:	cbz	x19, 414648 <ferror@plt+0x11918>
  414624:	ldr	w1, [x19, #4]
  414628:	cbnz	w1, 41390c <ferror@plt+0x10bdc>
  41462c:	ldrsb	w0, [x19, #3]
  414630:	tbnz	w0, #31, 414648 <ferror@plt+0x11918>
  414634:	mov	x0, x19
  414638:	bl	402a90 <free@plt>
  41463c:	b	414648 <ferror@plt+0x11918>
  414640:	ldrb	w0, [sp, #409]
  414644:	cbnz	w0, 4144a8 <ferror@plt+0x11778>
  414648:	ldr	x0, [sp, #320]
  41464c:	str	x0, [sp, #128]
  414650:	mov	x19, #0x0                   	// #0
  414654:	mov	w23, #0x0                   	// #0
  414658:	str	x26, [sp, #112]
  41465c:	b	413ccc <ferror@plt+0x10f9c>
  414660:	sub	w0, w0, w1
  414664:	ret
  414668:	stp	x29, x30, [sp, #-48]!
  41466c:	mov	x29, sp
  414670:	stp	x19, x20, [sp, #16]
  414674:	stp	x21, x22, [sp, #32]
  414678:	mov	x21, x0
  41467c:	mov	x20, x2
  414680:	mov	w22, w3
  414684:	and	w1, w1, #0xff
  414688:	bl	416928 <ferror@plt+0x13bf8>
  41468c:	cmp	w22, #0x0
  414690:	b.le	4146b8 <ferror@plt+0x11988>
  414694:	mov	x19, x20
  414698:	add	x20, x20, #0x1
  41469c:	sub	w22, w22, #0x1
  4146a0:	add	x20, x20, x22
  4146a4:	ldrb	w1, [x19], #1
  4146a8:	mov	x0, x21
  4146ac:	bl	416928 <ferror@plt+0x13bf8>
  4146b0:	cmp	x19, x20
  4146b4:	b.ne	4146a4 <ferror@plt+0x11974>  // b.any
  4146b8:	mov	w1, #0xa                   	// #10
  4146bc:	mov	x0, x21
  4146c0:	bl	416928 <ferror@plt+0x13bf8>
  4146c4:	ldp	x19, x20, [sp, #16]
  4146c8:	ldp	x21, x22, [sp, #32]
  4146cc:	ldp	x29, x30, [sp], #48
  4146d0:	ret
  4146d4:	mov	x1, x0
  4146d8:	mov	w2, #0x1                   	// #1
  4146dc:	strb	w2, [x1], #8
  4146e0:	str	xzr, [x0, #8]
  4146e4:	adrp	x0, 402000 <_ZGTtnam@plt-0x610>
  4146e8:	add	x0, x0, #0xa20
  4146ec:	str	x0, [x1, #8]
  4146f0:	str	xzr, [x1, #16]
  4146f4:	adrp	x0, 414000 <ferror@plt+0x112d0>
  4146f8:	add	x0, x0, #0xf9c
  4146fc:	str	x0, [x1, #24]
  414700:	ret
  414704:	ldrb	w3, [x0]
  414708:	cbnz	w3, 414710 <ferror@plt+0x119e0>
  41470c:	ret
  414710:	stp	x29, x30, [sp, #-48]!
  414714:	mov	x29, sp
  414718:	stp	x19, x20, [sp, #16]
  41471c:	and	w2, w2, #0xff
  414720:	str	x1, [sp, #32]
  414724:	strb	w2, [sp, #40]
  414728:	ldr	x20, [x0, #8]
  41472c:	mov	x19, #0x0                   	// #0
  414730:	b	41475c <ferror@plt+0x11a2c>
  414734:	cbz	x19, 41476c <ferror@plt+0x11a3c>
  414738:	ldr	x20, [x19, #32]
  41473c:	add	x2, sp, #0x20
  414740:	ldr	x1, [x19, #8]
  414744:	ldr	x0, [x19]
  414748:	bl	416150 <ferror@plt+0x13420>
  41474c:	cbnz	w0, 41476c <ferror@plt+0x11a3c>
  414750:	ldr	x0, [x19, #24]
  414754:	mov	x19, x20
  414758:	mov	x20, x0
  41475c:	cbz	x20, 414734 <ferror@plt+0x11a04>
  414760:	str	x19, [x20, #32]
  414764:	ldr	x0, [x20, #16]
  414768:	b	414754 <ferror@plt+0x11a24>
  41476c:	ldp	x19, x20, [sp, #16]
  414770:	ldp	x29, x30, [sp], #48
  414774:	ret
  414778:	mov	x2, x0
  41477c:	str	x1, [x2], #8
  414780:	str	xzr, [x0, #8]
  414784:	adrp	x1, 414000 <ferror@plt+0x112d0>
  414788:	add	x1, x1, #0x660
  41478c:	str	x1, [x2, #8]
  414790:	str	xzr, [x2, #16]
  414794:	adrp	x1, 414000 <ferror@plt+0x112d0>
  414798:	add	x1, x1, #0x8dc
  41479c:	str	x1, [x2, #24]
  4147a0:	mov	w1, #0xffffffff            	// #-1
  4147a4:	str	w1, [x0, #40]
  4147a8:	ret
  4147ac:	stp	x29, x30, [sp, #-32]!
  4147b0:	mov	x29, sp
  4147b4:	stp	x19, x20, [sp, #16]
  4147b8:	cbz	x1, 4147ec <ferror@plt+0x11abc>
  4147bc:	mov	x19, x0
  4147c0:	mov	x20, x1
  4147c4:	ldr	w0, [x0, #40]
  4147c8:	cmn	w0, #0x1
  4147cc:	b.eq	414804 <ferror@plt+0x11ad4>  // b.none
  4147d0:	ldr	x0, [x19]
  4147d4:	bl	41beb4 <ferror@plt+0x19184>
  4147d8:	strb	w0, [x20]
  4147dc:	ldr	w0, [x19, #40]
  4147e0:	ldp	x19, x20, [sp, #16]
  4147e4:	ldp	x29, x30, [sp], #32
  4147e8:	ret
  4147ec:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4147f0:	add	x2, x2, #0xba0
  4147f4:	mov	w1, #0x296                 	// #662
  4147f8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4147fc:	add	x0, x0, #0xbb0
  414800:	bl	4102b4 <ferror@plt+0xd584>
  414804:	str	wzr, [x19, #40]
  414808:	ldr	w1, [x19, #40]
  41480c:	add	w1, w1, #0x1
  414810:	ldr	x0, [x19]
  414814:	bl	41bef8 <ferror@plt+0x191c8>
  414818:	cbz	x0, 4147d0 <ferror@plt+0x11aa0>
  41481c:	ldr	w0, [x19, #40]
  414820:	add	w0, w0, #0x1
  414824:	str	w0, [x19, #40]
  414828:	b	414808 <ferror@plt+0x11ad8>
  41482c:	stp	x29, x30, [sp, #-48]!
  414830:	mov	x29, sp
  414834:	stp	x19, x20, [sp, #16]
  414838:	mov	x19, x0
  41483c:	ldr	x0, [x0, #8]
  414840:	bl	402a90 <free@plt>
  414844:	ldr	x0, [x19, #32]
  414848:	cbz	x0, 4148bc <ferror@plt+0x11b8c>
  41484c:	stp	x21, x22, [sp, #32]
  414850:	mov	w20, #0x0                   	// #0
  414854:	mov	x22, #0x10                  	// #16
  414858:	ldr	w1, [x0, #4]
  41485c:	cmp	w1, w20
  414860:	b.ls	4148ac <ferror@plt+0x11b7c>  // b.plast
  414864:	add	x1, x0, w20, uxtw #3
  414868:	ldr	x21, [x1, #8]
  41486c:	cbz	x21, 414884 <ferror@plt+0x11b54>
  414870:	ldr	x0, [x21]
  414874:	bl	402a90 <free@plt>
  414878:	mov	x1, x22
  41487c:	mov	x0, x21
  414880:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  414884:	add	w20, w20, #0x1
  414888:	ldr	x0, [x19, #32]
  41488c:	cbnz	x0, 414858 <ferror@plt+0x11b28>
  414890:	ldp	x21, x22, [sp, #32]
  414894:	b	4148bc <ferror@plt+0x11b8c>
  414898:	str	wzr, [x0, #4]
  41489c:	ldp	x21, x22, [sp, #32]
  4148a0:	b	4148bc <ferror@plt+0x11b8c>
  4148a4:	str	wzr, [x0, #4]
  4148a8:	b	4148d0 <ferror@plt+0x11ba0>
  4148ac:	ldrsb	w1, [x0, #3]
  4148b0:	tbnz	w1, #31, 414898 <ferror@plt+0x11b68>
  4148b4:	bl	402a90 <free@plt>
  4148b8:	ldp	x21, x22, [sp, #32]
  4148bc:	ldr	x0, [x19, #24]
  4148c0:	cbz	x0, 4148d0 <ferror@plt+0x11ba0>
  4148c4:	ldrsb	w1, [x0, #3]
  4148c8:	tbnz	w1, #31, 4148a4 <ferror@plt+0x11b74>
  4148cc:	bl	402a90 <free@plt>
  4148d0:	ldp	x19, x20, [sp, #16]
  4148d4:	ldp	x29, x30, [sp], #48
  4148d8:	ret
  4148dc:	cbz	x0, 41490c <ferror@plt+0x11bdc>
  4148e0:	stp	x29, x30, [sp, #-32]!
  4148e4:	mov	x29, sp
  4148e8:	str	x19, [sp, #16]
  4148ec:	mov	x19, x0
  4148f0:	bl	41482c <ferror@plt+0x11afc>
  4148f4:	mov	x1, #0x28                  	// #40
  4148f8:	mov	x0, x19
  4148fc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  414900:	ldr	x19, [sp, #16]
  414904:	ldp	x29, x30, [sp], #32
  414908:	ret
  41490c:	ret
  414910:	ldr	x0, [x0, #24]
  414914:	cbz	x0, 41494c <ferror@plt+0x11c1c>
  414918:	add	x2, x0, #0x8
  41491c:	ldr	w3, [x0, #4]
  414920:	add	x3, x2, x3, lsl #3
  414924:	mov	w0, w1
  414928:	cmp	x2, x3
  41492c:	b.eq	414950 <ferror@plt+0x11c20>  // b.none
  414930:	ldr	w1, [x2]
  414934:	cmp	w1, w0
  414938:	b.gt	414944 <ferror@plt+0x11c14>
  41493c:	ldr	w1, [x2, #4]
  414940:	add	w0, w0, w1
  414944:	add	x2, x2, #0x8
  414948:	b	414928 <ferror@plt+0x11bf8>
  41494c:	mov	w0, w1
  414950:	ret
  414954:	ldr	x0, [x0, #32]
  414958:	cbz	x0, 414968 <ferror@plt+0x11c38>
  41495c:	ldr	w0, [x0, #4]
  414960:	add	w0, w0, #0x1
  414964:	ret
  414968:	mov	w0, #0x0                   	// #0
  41496c:	b	414960 <ferror@plt+0x11c30>
  414970:	stp	x29, x30, [sp, #-48]!
  414974:	mov	x29, sp
  414978:	stp	x19, x20, [sp, #16]
  41497c:	mov	x19, x0
  414980:	mov	x20, x1
  414984:	ldr	x2, [x0, #32]
  414988:	cbz	x2, 4149d4 <ferror@plt+0x11ca4>
  41498c:	str	x21, [sp, #32]
  414990:	mov	w21, #0x0                   	// #0
  414994:	ldr	w0, [x2, #4]
  414998:	cmp	w0, w21
  41499c:	b.ls	4149d0 <ferror@plt+0x11ca0>  // b.plast
  4149a0:	add	x2, x2, w21, uxtw #3
  4149a4:	ldr	x0, [x2, #8]
  4149a8:	ldr	x1, [x0]
  4149ac:	mov	x0, x20
  4149b0:	bl	416f20 <ferror@plt+0x141f0>
  4149b4:	mov	x0, x20
  4149b8:	bl	4168c4 <ferror@plt+0x13b94>
  4149bc:	add	w21, w21, #0x1
  4149c0:	ldr	x2, [x19, #32]
  4149c4:	cbnz	x2, 414994 <ferror@plt+0x11c64>
  4149c8:	ldr	x21, [sp, #32]
  4149cc:	b	4149d4 <ferror@plt+0x11ca4>
  4149d0:	ldr	x21, [sp, #32]
  4149d4:	ldr	x1, [x19, #8]
  4149d8:	mov	x0, x20
  4149dc:	bl	416f20 <ferror@plt+0x141f0>
  4149e0:	ldp	x19, x20, [sp, #16]
  4149e4:	ldp	x29, x30, [sp], #48
  4149e8:	ret
  4149ec:	stp	x29, x30, [sp, #-48]!
  4149f0:	mov	x29, sp
  4149f4:	stp	x19, x20, [sp, #16]
  4149f8:	mov	x19, x0
  4149fc:	mov	x20, x1
  414a00:	ldr	x0, [x0, #32]
  414a04:	cbz	x0, 414a54 <ferror@plt+0x11d24>
  414a08:	stp	x21, x22, [sp, #32]
  414a0c:	mov	w21, #0x0                   	// #0
  414a10:	mov	w22, #0x2b                  	// #43
  414a14:	ldr	w1, [x0, #4]
  414a18:	cmp	w1, w21
  414a1c:	b.ls	414a50 <ferror@plt+0x11d20>  // b.plast
  414a20:	add	x0, x0, w21, uxtw #3
  414a24:	ldr	x0, [x0, #8]
  414a28:	ldr	w3, [x0, #8]
  414a2c:	ldr	x2, [x0]
  414a30:	mov	w1, w22
  414a34:	mov	x0, x20
  414a38:	bl	414668 <ferror@plt+0x11938>
  414a3c:	add	w21, w21, #0x1
  414a40:	ldr	x0, [x19, #32]
  414a44:	cbnz	x0, 414a14 <ferror@plt+0x11ce4>
  414a48:	ldp	x21, x22, [sp, #32]
  414a4c:	b	414a54 <ferror@plt+0x11d24>
  414a50:	ldp	x21, x22, [sp, #32]
  414a54:	ldr	x0, [x19, #24]
  414a58:	cbz	x0, 414a64 <ferror@plt+0x11d34>
  414a5c:	ldr	w0, [x0, #4]
  414a60:	cbnz	w0, 414a84 <ferror@plt+0x11d54>
  414a64:	ldr	w3, [x19, #16]
  414a68:	ldr	x2, [x19, #8]
  414a6c:	mov	w1, #0x20                  	// #32
  414a70:	mov	x0, x20
  414a74:	bl	414668 <ferror@plt+0x11938>
  414a78:	ldp	x19, x20, [sp, #16]
  414a7c:	ldp	x29, x30, [sp], #48
  414a80:	ret
  414a84:	ldr	w3, [x19, #16]
  414a88:	ldr	x2, [x19, #8]
  414a8c:	mov	w1, #0x2b                  	// #43
  414a90:	mov	x0, x20
  414a94:	bl	414668 <ferror@plt+0x11938>
  414a98:	b	414a78 <ferror@plt+0x11d48>
  414a9c:	stp	x29, x30, [sp, #-32]!
  414aa0:	mov	x29, sp
  414aa4:	stp	x19, x20, [sp, #16]
  414aa8:	mov	x20, x0
  414aac:	ldr	w0, [x0, #20]
  414ab0:	cmp	w0, w1
  414ab4:	b.le	414ac4 <ferror@plt+0x11d94>
  414ab8:	ldp	x19, x20, [sp, #16]
  414abc:	ldp	x29, x30, [sp], #32
  414ac0:	ret
  414ac4:	add	w1, w1, #0x1
  414ac8:	lsl	w19, w1, #1
  414acc:	sxtw	x1, w19
  414ad0:	ldr	x0, [x20, #8]
  414ad4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  414ad8:	str	x0, [x20, #8]
  414adc:	str	w19, [x20, #20]
  414ae0:	b	414ab8 <ferror@plt+0x11d88>
  414ae4:	ldr	w1, [x0, #16]
  414ae8:	ldr	w2, [x0, #20]
  414aec:	cmp	w1, w2
  414af0:	b.ge	414b00 <ferror@plt+0x11dd0>  // b.tcont
  414af4:	ldr	x0, [x0, #8]
  414af8:	strb	wzr, [x0, w1, sxtw]
  414afc:	ret
  414b00:	stp	x29, x30, [sp, #-16]!
  414b04:	mov	x29, sp
  414b08:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414b0c:	add	x2, x2, #0xb88
  414b10:	mov	w1, #0x36b                 	// #875
  414b14:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414b18:	add	x0, x0, #0xbb0
  414b1c:	bl	4102b4 <ferror@plt+0xd584>
  414b20:	stp	x29, x30, [sp, #-32]!
  414b24:	mov	x29, sp
  414b28:	stp	x19, x20, [sp, #16]
  414b2c:	mov	x19, x0
  414b30:	mov	x0, x1
  414b34:	mov	w1, w2
  414b38:	str	w2, [x19]
  414b3c:	str	xzr, [x19, #8]
  414b40:	str	wzr, [x19, #16]
  414b44:	str	wzr, [x19, #20]
  414b48:	str	xzr, [x19, #24]
  414b4c:	str	xzr, [x19, #32]
  414b50:	bl	41bef8 <ferror@plt+0x191c8>
  414b54:	cbz	x0, 414b80 <ferror@plt+0x11e50>
  414b58:	mov	x20, x0
  414b5c:	str	w1, [x19, #16]
  414b60:	mov	x0, x19
  414b64:	bl	414a9c <ferror@plt+0x11d6c>
  414b68:	ldrsw	x2, [x19, #16]
  414b6c:	mov	x1, x20
  414b70:	ldr	x0, [x19, #8]
  414b74:	bl	402620 <memcpy@plt>
  414b78:	mov	x0, x19
  414b7c:	bl	414ae4 <ferror@plt+0x11db4>
  414b80:	ldp	x19, x20, [sp, #16]
  414b84:	ldp	x29, x30, [sp], #32
  414b88:	ret
  414b8c:	stp	x29, x30, [sp, #-96]!
  414b90:	mov	x29, sp
  414b94:	stp	x19, x20, [sp, #16]
  414b98:	stp	x21, x22, [sp, #32]
  414b9c:	stp	x23, x24, [sp, #48]
  414ba0:	mov	x19, x0
  414ba4:	mov	w21, w2
  414ba8:	mov	x23, x3
  414bac:	mov	w22, w4
  414bb0:	cmp	w4, #0x1
  414bb4:	b.le	414bc8 <ferror@plt+0x11e98>
  414bb8:	add	x0, x3, w4, sxtw
  414bbc:	ldurb	w0, [x0, #-1]
  414bc0:	cmp	w0, #0xa
  414bc4:	b.eq	414c30 <ferror@plt+0x11f00>  // b.none
  414bc8:	stp	x25, x26, [sp, #64]
  414bcc:	mov	x0, x19
  414bd0:	bl	414910 <ferror@plt+0x11be0>
  414bd4:	mov	w20, w0
  414bd8:	mov	w1, w21
  414bdc:	mov	x0, x19
  414be0:	bl	414910 <ferror@plt+0x11be0>
  414be4:	mov	w1, w0
  414be8:	sub	w24, w0, #0x1
  414bec:	subs	w25, w20, #0x1
  414bf0:	b.mi	414d90 <ferror@plt+0x12060>  // b.first
  414bf4:	tbnz	w24, #31, 414dac <ferror@plt+0x1207c>
  414bf8:	cmp	w20, w0
  414bfc:	b.gt	414f90 <ferror@plt+0x12260>
  414c00:	ldr	w2, [x19, #16]
  414c04:	cmp	w25, w24
  414c08:	csel	w3, w25, w24, ge  // ge = tcont
  414c0c:	mov	w0, #0x0                   	// #0
  414c10:	cmp	w2, w3
  414c14:	b.ge	414dc8 <ferror@plt+0x12098>  // b.tcont
  414c18:	ldp	x25, x26, [sp, #64]
  414c1c:	ldp	x19, x20, [sp, #16]
  414c20:	ldp	x21, x22, [sp, #32]
  414c24:	ldp	x23, x24, [sp, #48]
  414c28:	ldp	x29, x30, [sp], #96
  414c2c:	ret
  414c30:	mov	x0, #0x10                  	// #16
  414c34:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  414c38:	mov	x24, x0
  414c3c:	sub	w22, w22, #0x1
  414c40:	sxtw	x1, w22
  414c44:	mov	x0, x23
  414c48:	bl	454ee0 <_obstack_memory_used@@Base+0xb40>
  414c4c:	str	x0, [x24]
  414c50:	str	w22, [x24, #8]
  414c54:	ldr	x20, [x19, #32]
  414c58:	cbz	x20, 414ca0 <ferror@plt+0x11f70>
  414c5c:	ldr	w0, [x20]
  414c60:	ubfx	x0, x0, #0, #31
  414c64:	ldr	w1, [x20, #4]
  414c68:	cmp	w0, w1
  414c6c:	b.ne	414d40 <ferror@plt+0x12010>  // b.any
  414c70:	stp	x25, x26, [sp, #64]
  414c74:	ldrsb	w0, [x20, #3]
  414c78:	tbnz	w0, #31, 414c8c <ferror@plt+0x11f5c>
  414c7c:	mov	w23, #0x0                   	// #0
  414c80:	mov	w21, #0x0                   	// #0
  414c84:	mov	w1, #0x1                   	// #1
  414c88:	b	414cb0 <ferror@plt+0x11f80>
  414c8c:	str	xzr, [x19, #32]
  414c90:	ldr	w21, [x20, #4]
  414c94:	add	w1, w21, #0x1
  414c98:	mov	w23, #0x1                   	// #1
  414c9c:	b	414cb0 <ferror@plt+0x11f80>
  414ca0:	stp	x25, x26, [sp, #64]
  414ca4:	mov	w23, #0x0                   	// #0
  414ca8:	mov	w21, #0x0                   	// #0
  414cac:	mov	w1, #0x1                   	// #1
  414cb0:	ldr	x0, [x19, #32]
  414cb4:	cbz	x0, 414d60 <ferror@plt+0x12030>
  414cb8:	ldr	w2, [x0, #4]
  414cbc:	ldr	w0, [x0]
  414cc0:	add	w1, w1, w2
  414cc4:	and	w0, w0, #0x7fffffff
  414cc8:	bl	4195d0 <ferror@plt+0x168a0>
  414ccc:	mov	w22, w0
  414cd0:	ubfiz	x1, x22, #3, #32
  414cd4:	add	x1, x1, #0x8
  414cd8:	ldr	x0, [x19, #32]
  414cdc:	cbz	x0, 414d80 <ferror@plt+0x12050>
  414ce0:	ldr	w25, [x0, #4]
  414ce4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  414ce8:	str	x0, [x19, #32]
  414cec:	ldr	w1, [x0]
  414cf0:	bfxil	w1, w22, #0, #31
  414cf4:	str	w1, [x0]
  414cf8:	ubfx	x1, x1, #24, #7
  414cfc:	strb	w1, [x0, #3]
  414d00:	str	w25, [x0, #4]
  414d04:	cbz	w23, 414d88 <ferror@plt+0x12058>
  414d08:	ldr	x3, [x19, #32]
  414d0c:	cbz	w21, 414d34 <ferror@plt+0x12004>
  414d10:	sub	w2, w21, #0x1
  414d14:	add	x2, x2, #0x2
  414d18:	lsl	x2, x2, #3
  414d1c:	mov	x1, #0x8                   	// #8
  414d20:	ldr	x0, [x20, x1]
  414d24:	str	x0, [x3, x1]
  414d28:	add	x1, x1, #0x8
  414d2c:	cmp	x1, x2
  414d30:	b.ne	414d20 <ferror@plt+0x11ff0>  // b.any
  414d34:	ldr	x0, [x19, #32]
  414d38:	str	w21, [x0, #4]
  414d3c:	ldp	x25, x26, [sp, #64]
  414d40:	ldr	x1, [x19, #32]
  414d44:	ldr	w0, [x1, #4]
  414d48:	add	w2, w0, #0x1
  414d4c:	str	w2, [x1, #4]
  414d50:	add	x0, x1, w0, uxtw #3
  414d54:	str	x24, [x0, #8]
  414d58:	mov	w0, #0x1                   	// #1
  414d5c:	b	414c1c <ferror@plt+0x11eec>
  414d60:	mov	w2, #0x4                   	// #4
  414d64:	cmp	w1, w2
  414d68:	csel	w22, w1, w2, cs  // cs = hs, nlast
  414d6c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  414d70:	add	x1, x1, #0x1
  414d74:	lsl	x1, x1, #3
  414d78:	mov	w25, #0x0                   	// #0
  414d7c:	b	414ce4 <ferror@plt+0x11fb4>
  414d80:	mov	w25, #0x0                   	// #0
  414d84:	b	414ce4 <ferror@plt+0x11fb4>
  414d88:	ldp	x25, x26, [sp, #64]
  414d8c:	b	414d40 <ferror@plt+0x12010>
  414d90:	str	x27, [sp, #80]
  414d94:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414d98:	add	x2, x2, #0xbd0
  414d9c:	mov	w1, #0x2fa                 	// #762
  414da0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414da4:	add	x0, x0, #0xbb0
  414da8:	bl	4102b4 <ferror@plt+0xd584>
  414dac:	str	x27, [sp, #80]
  414db0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414db4:	add	x2, x2, #0xbd0
  414db8:	mov	w1, #0x2fb                 	// #763
  414dbc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414dc0:	add	x0, x0, #0xbb0
  414dc4:	bl	4102b4 <ferror@plt+0xd584>
  414dc8:	str	x27, [sp, #80]
  414dcc:	sub	w21, w1, w20
  414dd0:	add	w2, w2, w22
  414dd4:	sub	w26, w2, w21
  414dd8:	mov	w1, w26
  414ddc:	mov	x0, x19
  414de0:	bl	414a9c <ferror@plt+0x11d6c>
  414de4:	ldr	x0, [x19, #8]
  414de8:	add	x1, x0, w24, sxtw
  414dec:	ldr	w2, [x19, #16]
  414df0:	add	x3, x0, w2, sxtw
  414df4:	cmp	x1, x3
  414df8:	b.hi	414e70 <ferror@plt+0x12140>  // b.pmore
  414dfc:	sxtw	x25, w25
  414e00:	sxtw	x27, w22
  414e04:	sxtw	x2, w2
  414e08:	add	x3, x25, x27
  414e0c:	sub	x2, x2, w24, sxtw
  414e10:	add	x0, x0, x3
  414e14:	bl	402630 <memmove@plt>
  414e18:	ldr	x0, [x19, #8]
  414e1c:	mov	x2, x27
  414e20:	mov	x1, x23
  414e24:	add	x0, x0, x25
  414e28:	bl	402620 <memcpy@plt>
  414e2c:	str	w26, [x19, #16]
  414e30:	mov	x0, x19
  414e34:	bl	414ae4 <ferror@plt+0x11db4>
  414e38:	sub	w21, w22, w21
  414e3c:	ldr	x22, [x19, #24]
  414e40:	cbz	x22, 414e9c <ferror@plt+0x1216c>
  414e44:	ldr	w0, [x22]
  414e48:	ubfx	x0, x0, #0, #31
  414e4c:	ldr	w1, [x22, #4]
  414e50:	cmp	w0, w1
  414e54:	b.ne	414f34 <ferror@plt+0x12204>  // b.any
  414e58:	ldrsb	w0, [x22, #3]
  414e5c:	tbnz	w0, #31, 414e88 <ferror@plt+0x12158>
  414e60:	mov	w25, #0x0                   	// #0
  414e64:	mov	w23, #0x0                   	// #0
  414e68:	mov	w1, #0x1                   	// #1
  414e6c:	b	414ea8 <ferror@plt+0x12178>
  414e70:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414e74:	add	x2, x2, #0xbd0
  414e78:	mov	w1, #0x30b                 	// #779
  414e7c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  414e80:	add	x0, x0, #0xbb0
  414e84:	bl	4102b4 <ferror@plt+0xd584>
  414e88:	str	xzr, [x19, #24]
  414e8c:	ldr	w23, [x22, #4]
  414e90:	add	w1, w23, #0x1
  414e94:	mov	w25, #0x1                   	// #1
  414e98:	b	414ea8 <ferror@plt+0x12178>
  414e9c:	mov	w25, #0x0                   	// #0
  414ea0:	mov	w23, #0x0                   	// #0
  414ea4:	mov	w1, #0x1                   	// #1
  414ea8:	ldr	x0, [x19, #24]
  414eac:	cbz	x0, 414f68 <ferror@plt+0x12238>
  414eb0:	ldr	w2, [x0, #4]
  414eb4:	ldr	w0, [x0]
  414eb8:	add	w1, w1, w2
  414ebc:	and	w0, w0, #0x7fffffff
  414ec0:	bl	4195d0 <ferror@plt+0x168a0>
  414ec4:	mov	w24, w0
  414ec8:	ubfiz	x1, x24, #3, #32
  414ecc:	add	x1, x1, #0x8
  414ed0:	ldr	x0, [x19, #24]
  414ed4:	cbz	x0, 414f88 <ferror@plt+0x12258>
  414ed8:	ldr	w26, [x0, #4]
  414edc:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  414ee0:	str	x0, [x19, #24]
  414ee4:	ldr	w1, [x0]
  414ee8:	bfxil	w1, w24, #0, #31
  414eec:	str	w1, [x0]
  414ef0:	ubfx	x1, x1, #24, #7
  414ef4:	strb	w1, [x0, #3]
  414ef8:	str	w26, [x0, #4]
  414efc:	cbz	w25, 414f34 <ferror@plt+0x12204>
  414f00:	ldr	x3, [x19, #24]
  414f04:	cbz	w23, 414f2c <ferror@plt+0x121fc>
  414f08:	sub	w2, w23, #0x1
  414f0c:	add	x2, x2, #0x2
  414f10:	lsl	x2, x2, #3
  414f14:	mov	x0, #0x8                   	// #8
  414f18:	ldr	x1, [x22, x0]
  414f1c:	str	x1, [x3, x0]
  414f20:	add	x0, x0, #0x8
  414f24:	cmp	x0, x2
  414f28:	b.ne	414f18 <ferror@plt+0x121e8>  // b.any
  414f2c:	ldr	x0, [x19, #24]
  414f30:	str	w23, [x0, #4]
  414f34:	ldr	x1, [x19, #24]
  414f38:	ldr	w0, [x1, #4]
  414f3c:	add	w2, w0, #0x1
  414f40:	str	w2, [x1, #4]
  414f44:	ubfiz	x0, x0, #3, #32
  414f48:	add	x0, x0, #0x8
  414f4c:	add	x2, x1, x0
  414f50:	str	w20, [x1, x0]
  414f54:	str	w21, [x2, #4]
  414f58:	mov	w0, #0x1                   	// #1
  414f5c:	ldp	x25, x26, [sp, #64]
  414f60:	ldr	x27, [sp, #80]
  414f64:	b	414c1c <ferror@plt+0x11eec>
  414f68:	mov	w2, #0x4                   	// #4
  414f6c:	cmp	w1, w2
  414f70:	csel	w24, w1, w2, cs  // cs = hs, nlast
  414f74:	csel	w1, w1, w2, cs  // cs = hs, nlast
  414f78:	add	x1, x1, #0x1
  414f7c:	lsl	x1, x1, #3
  414f80:	mov	w26, #0x0                   	// #0
  414f84:	b	414edc <ferror@plt+0x121ac>
  414f88:	mov	w26, #0x0                   	// #0
  414f8c:	b	414edc <ferror@plt+0x121ac>
  414f90:	mov	w0, #0x0                   	// #0
  414f94:	ldp	x25, x26, [sp, #64]
  414f98:	b	414c1c <ferror@plt+0x11eec>
  414f9c:	cbz	x0, 414fd4 <ferror@plt+0x122a4>
  414fa0:	stp	x29, x30, [sp, #-32]!
  414fa4:	mov	x29, sp
  414fa8:	str	x19, [sp, #16]
  414fac:	mov	x19, x0
  414fb0:	ldr	x1, [x0, #8]
  414fb4:	add	x0, x0, #0x8
  414fb8:	bl	415c88 <ferror@plt+0x12f58>
  414fbc:	mov	x1, #0x30                  	// #48
  414fc0:	mov	x0, x19
  414fc4:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  414fc8:	ldr	x19, [sp, #16]
  414fcc:	ldp	x29, x30, [sp], #32
  414fd0:	ret
  414fd4:	ret
  414fd8:	stp	x29, x30, [sp, #-32]!
  414fdc:	mov	x29, sp
  414fe0:	stp	x19, x20, [sp, #16]
  414fe4:	cbz	x1, 41502c <ferror@plt+0x122fc>
  414fe8:	mov	x19, x0
  414fec:	mov	x20, x1
  414ff0:	add	x0, x0, #0x8
  414ff4:	bl	415d90 <ferror@plt+0x13060>
  414ff8:	ldr	x0, [x19, #8]
  414ffc:	cbz	x0, 415044 <ferror@plt+0x12314>
  415000:	ldr	x2, [x19, #16]
  415004:	mov	x1, x20
  415008:	ldr	x0, [x0]
  41500c:	blr	x2
  415010:	cbnz	w0, 415044 <ferror@plt+0x12314>
  415014:	ldr	x0, [x19, #8]
  415018:	cbz	x0, 415020 <ferror@plt+0x122f0>
  41501c:	ldr	x0, [x0, #8]
  415020:	ldp	x19, x20, [sp, #16]
  415024:	ldp	x29, x30, [sp], #32
  415028:	ret
  41502c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415030:	add	x2, x2, #0xbe0
  415034:	mov	w1, #0x140                 	// #320
  415038:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41503c:	add	x0, x0, #0xbb0
  415040:	bl	4102b4 <ferror@plt+0xd584>
  415044:	mov	x0, #0x0                   	// #0
  415048:	b	415020 <ferror@plt+0x122f0>
  41504c:	stp	x29, x30, [sp, #-48]!
  415050:	mov	x29, sp
  415054:	stp	x19, x20, [sp, #16]
  415058:	stp	x21, x22, [sp, #32]
  41505c:	cbz	x1, 415088 <ferror@plt+0x12358>
  415060:	mov	x21, x0
  415064:	mov	x20, x1
  415068:	bl	414fd8 <ferror@plt+0x122a8>
  41506c:	mov	x19, x0
  415070:	cbz	x0, 4150a0 <ferror@plt+0x12370>
  415074:	mov	x0, x19
  415078:	ldp	x19, x20, [sp, #16]
  41507c:	ldp	x21, x22, [sp, #32]
  415080:	ldp	x29, x30, [sp], #48
  415084:	ret
  415088:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41508c:	add	x2, x2, #0xbf0
  415090:	mov	w1, #0x149                 	// #329
  415094:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415098:	add	x0, x0, #0xbb0
  41509c:	bl	4102b4 <ferror@plt+0xd584>
  4150a0:	mov	x0, #0x30                  	// #48
  4150a4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4150a8:	mov	x19, x0
  4150ac:	str	x20, [x0], #8
  4150b0:	str	xzr, [x19, #8]
  4150b4:	adrp	x1, 414000 <ferror@plt+0x112d0>
  4150b8:	add	x1, x1, #0x660
  4150bc:	str	x1, [x0, #8]
  4150c0:	str	xzr, [x0, #16]
  4150c4:	adrp	x1, 414000 <ferror@plt+0x112d0>
  4150c8:	add	x1, x1, #0x8dc
  4150cc:	str	x1, [x0, #24]
  4150d0:	mov	w0, #0xffffffff            	// #-1
  4150d4:	str	w0, [x19, #40]
  4150d8:	mov	x1, x20
  4150dc:	add	x0, x21, #0x8
  4150e0:	bl	415d90 <ferror@plt+0x13060>
  4150e4:	ldr	x0, [x21, #8]
  4150e8:	cbz	x0, 415168 <ferror@plt+0x12438>
  4150ec:	ldr	x2, [x21, #16]
  4150f0:	mov	x1, x20
  4150f4:	ldr	x0, [x0]
  4150f8:	blr	x2
  4150fc:	mov	w22, w0
  415100:	ldr	x0, [x21, #8]
  415104:	cmp	w22, #0x0
  415108:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41510c:	b.eq	41512c <ferror@plt+0x123fc>  // b.none
  415110:	ldr	x1, [x21, #32]
  415114:	cbz	x1, 415120 <ferror@plt+0x123f0>
  415118:	ldr	x0, [x0, #8]
  41511c:	blr	x1
  415120:	ldr	x0, [x21, #8]
  415124:	str	x19, [x0, #8]
  415128:	b	415074 <ferror@plt+0x12344>
  41512c:	mov	x0, #0x28                  	// #40
  415130:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  415134:	str	x20, [x0]
  415138:	str	x19, [x0, #8]
  41513c:	ldr	x1, [x21, #8]
  415140:	cbz	x1, 41515c <ferror@plt+0x1242c>
  415144:	tbz	w22, #31, 415180 <ferror@plt+0x12450>
  415148:	str	x1, [x0, #16]
  41514c:	ldr	x2, [x1, #24]
  415150:	str	x2, [x0, #24]
  415154:	str	xzr, [x1, #24]
  415158:	b	415190 <ferror@plt+0x12460>
  41515c:	str	xzr, [x0, #24]
  415160:	str	xzr, [x0, #16]
  415164:	b	415190 <ferror@plt+0x12460>
  415168:	mov	x0, #0x28                  	// #40
  41516c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  415170:	str	x20, [x0]
  415174:	str	x19, [x0, #8]
  415178:	ldr	x1, [x21, #8]
  41517c:	cbz	x1, 41515c <ferror@plt+0x1242c>
  415180:	str	x1, [x0, #24]
  415184:	ldr	x2, [x1, #16]
  415188:	str	x2, [x0, #16]
  41518c:	str	xzr, [x1, #16]
  415190:	str	x0, [x21, #8]
  415194:	b	415074 <ferror@plt+0x12344>
  415198:	stp	x29, x30, [sp, #-32]!
  41519c:	mov	x29, sp
  4151a0:	stp	x19, x20, [sp, #16]
  4151a4:	mov	x19, x0
  4151a8:	mov	w20, w1
  4151ac:	add	x0, x0, #0x8
  4151b0:	bl	415f38 <ferror@plt+0x13208>
  4151b4:	ldr	x0, [x19, #8]
  4151b8:	cbz	x0, 4151e8 <ferror@plt+0x124b8>
  4151bc:	ldr	x2, [x19, #16]
  4151c0:	mov	w1, w20
  4151c4:	ldr	w0, [x0]
  4151c8:	blr	x2
  4151cc:	cbnz	w0, 4151e8 <ferror@plt+0x124b8>
  4151d0:	ldr	x0, [x19, #8]
  4151d4:	cbz	x0, 4151dc <ferror@plt+0x124ac>
  4151d8:	ldr	x0, [x0, #8]
  4151dc:	ldp	x19, x20, [sp, #16]
  4151e0:	ldp	x29, x30, [sp], #32
  4151e4:	ret
  4151e8:	mov	x0, #0x0                   	// #0
  4151ec:	b	4151dc <ferror@plt+0x124ac>
  4151f0:	stp	x29, x30, [sp, #-32]!
  4151f4:	mov	x29, sp
  4151f8:	str	x19, [sp, #16]
  4151fc:	mov	w19, w2
  415200:	bl	415198 <ferror@plt+0x12468>
  415204:	cbz	x0, 41521c <ferror@plt+0x124ec>
  415208:	mov	w1, w19
  41520c:	bl	414910 <ferror@plt+0x11be0>
  415210:	ldr	x19, [sp, #16]
  415214:	ldp	x29, x30, [sp], #32
  415218:	ret
  41521c:	mov	w0, w19
  415220:	b	415210 <ferror@plt+0x124e0>
  415224:	stp	x29, x30, [sp, #-32]!
  415228:	mov	x29, sp
  41522c:	stp	x19, x20, [sp, #16]
  415230:	mov	w20, w2
  415234:	mov	w19, w3
  415238:	bl	414fd8 <ferror@plt+0x122a8>
  41523c:	cbz	x0, 415258 <ferror@plt+0x12528>
  415240:	mov	w2, w19
  415244:	mov	w1, w20
  415248:	bl	4151f0 <ferror@plt+0x124c0>
  41524c:	ldp	x19, x20, [sp, #16]
  415250:	ldp	x29, x30, [sp], #32
  415254:	ret
  415258:	mov	w0, w19
  41525c:	b	41524c <ferror@plt+0x1251c>
  415260:	stp	x29, x30, [sp, #-112]!
  415264:	mov	x29, sp
  415268:	stp	x21, x22, [sp, #32]
  41526c:	stp	x23, x24, [sp, #48]
  415270:	mov	x23, x0
  415274:	mov	x21, x1
  415278:	add	x1, sp, #0x6f
  41527c:	bl	4147ac <ferror@plt+0x11a7c>
  415280:	cmp	w0, #0x0
  415284:	b.le	41538c <ferror@plt+0x1265c>
  415288:	stp	x19, x20, [sp, #16]
  41528c:	stp	x25, x26, [sp, #64]
  415290:	stp	x27, x28, [sp, #80]
  415294:	mov	w22, w0
  415298:	mov	w19, #0x1                   	// #1
  41529c:	mov	w26, #0x0                   	// #0
  4152a0:	mov	x24, #0x80000000            	// #2147483648
  4152a4:	mov	w25, #0xa                   	// #10
  4152a8:	b	41535c <ferror@plt+0x1262c>
  4152ac:	mov	w1, w19
  4152b0:	ldr	x0, [x23]
  4152b4:	bl	41bef8 <ferror@plt+0x191c8>
  4152b8:	mov	x27, x1
  4152bc:	mov	x28, x0
  4152c0:	cbz	x0, 4152d4 <ferror@plt+0x125a4>
  4152c4:	mov	x20, #0x0                   	// #0
  4152c8:	mov	w0, w26
  4152cc:	cbnz	x1, 4152f0 <ferror@plt+0x125c0>
  4152d0:	b	415374 <ferror@plt+0x12644>
  4152d4:	ldp	x19, x20, [sp, #16]
  4152d8:	ldp	x25, x26, [sp, #64]
  4152dc:	ldp	x27, x28, [sp, #80]
  4152e0:	b	415394 <ferror@plt+0x12664>
  4152e4:	mov	w0, w20
  4152e8:	cmp	x20, x24
  4152ec:	b.eq	415314 <ferror@plt+0x125e4>  // b.none
  4152f0:	cmp	x27, w0, sxtw
  4152f4:	b.ls	41532c <ferror@plt+0x125fc>  // b.plast
  4152f8:	ldrb	w1, [x28, w0, sxtw]
  4152fc:	mov	x0, x21
  415300:	bl	416928 <ferror@plt+0x13bf8>
  415304:	add	x20, x20, #0x1
  415308:	cmp	x27, x20
  41530c:	b.ne	4152e4 <ferror@plt+0x125b4>  // b.any
  415310:	b	415374 <ferror@plt+0x12644>
  415314:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415318:	add	x2, x2, #0xc08
  41531c:	mov	w1, #0x3d                  	// #61
  415320:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415324:	add	x0, x0, #0xb60
  415328:	bl	4102b4 <ferror@plt+0xd584>
  41532c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415330:	add	x2, x2, #0xc08
  415334:	mov	w1, #0x3e                  	// #62
  415338:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41533c:	add	x0, x0, #0xb60
  415340:	bl	4102b4 <ferror@plt+0xd584>
  415344:	mov	w1, w25
  415348:	mov	x0, x21
  41534c:	bl	416928 <ferror@plt+0x13bf8>
  415350:	add	w19, w19, #0x1
  415354:	cmp	w22, w19
  415358:	b.lt	415380 <ferror@plt+0x12650>  // b.tstop
  41535c:	mov	w1, w19
  415360:	mov	x0, x23
  415364:	bl	415198 <ferror@plt+0x12468>
  415368:	cbz	x0, 4152ac <ferror@plt+0x1257c>
  41536c:	mov	x1, x21
  415370:	bl	414970 <ferror@plt+0x11c40>
  415374:	cmp	w22, w19
  415378:	b.le	415350 <ferror@plt+0x12620>
  41537c:	b	415344 <ferror@plt+0x12614>
  415380:	ldp	x19, x20, [sp, #16]
  415384:	ldp	x25, x26, [sp, #64]
  415388:	ldp	x27, x28, [sp, #80]
  41538c:	ldrb	w0, [sp, #111]
  415390:	cbz	w0, 4153a4 <ferror@plt+0x12674>
  415394:	ldp	x21, x22, [sp, #32]
  415398:	ldp	x23, x24, [sp, #48]
  41539c:	ldp	x29, x30, [sp], #112
  4153a0:	ret
  4153a4:	mov	w1, #0xa                   	// #10
  4153a8:	mov	x0, x21
  4153ac:	bl	416928 <ferror@plt+0x13bf8>
  4153b0:	mov	w0, #0x1                   	// #1
  4153b4:	b	415394 <ferror@plt+0x12664>
  4153b8:	stp	x29, x30, [sp, #-64]!
  4153bc:	mov	x29, sp
  4153c0:	stp	x19, x20, [sp, #16]
  4153c4:	stp	x21, x22, [sp, #32]
  4153c8:	stp	x23, x24, [sp, #48]
  4153cc:	mov	x21, x0
  4153d0:	mov	x22, x1
  4153d4:	mov	w19, w2
  4153d8:	mov	w23, w3
  4153dc:	mov	x2, #0xb                   	// #11
  4153e0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4153e4:	add	x1, x1, #0x9a0
  4153e8:	ldrb	w0, [x22, #67]
  4153ec:	bl	411460 <ferror@plt+0xe730>
  4153f0:	mov	x1, x0
  4153f4:	mov	x0, x22
  4153f8:	bl	416f20 <ferror@plt+0x141f0>
  4153fc:	cmp	w19, w23
  415400:	b.gt	415510 <ferror@plt+0x127e0>
  415404:	mov	w20, w19
  415408:	mov	w24, #0x2d                  	// #45
  41540c:	b	415454 <ferror@plt+0x12724>
  415410:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415414:	add	x2, x2, #0xc18
  415418:	mov	w1, #0x239                 	// #569
  41541c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415420:	add	x0, x0, #0xbb0
  415424:	bl	4102b4 <ferror@plt+0xd584>
  415428:	mov	w1, w20
  41542c:	ldr	x0, [x21]
  415430:	bl	41bef8 <ferror@plt+0x191c8>
  415434:	mov	w3, w1
  415438:	mov	x2, x0
  41543c:	mov	w1, w24
  415440:	mov	x0, x22
  415444:	bl	414668 <ferror@plt+0x11938>
  415448:	add	w20, w20, #0x1
  41544c:	cmp	w23, w20
  415450:	b.lt	415490 <ferror@plt+0x12760>  // b.tstop
  415454:	mov	w1, w20
  415458:	mov	x0, x21
  41545c:	bl	415198 <ferror@plt+0x12468>
  415460:	cbz	x0, 415410 <ferror@plt+0x126e0>
  415464:	ldr	x2, [x0, #24]
  415468:	cbz	x2, 415448 <ferror@plt+0x12718>
  41546c:	ldr	w0, [x2, #4]
  415470:	cbz	w0, 415448 <ferror@plt+0x12718>
  415474:	b	415428 <ferror@plt+0x126f8>
  415478:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41547c:	add	x2, x2, #0xc18
  415480:	mov	w1, #0x24b                 	// #587
  415484:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415488:	add	x0, x0, #0xbb0
  41548c:	bl	4102b4 <ferror@plt+0xd584>
  415490:	ldrb	w0, [x22, #67]
  415494:	bl	4114f4 <ferror@plt+0xe7c4>
  415498:	mov	x1, x0
  41549c:	mov	x0, x22
  4154a0:	bl	416f20 <ferror@plt+0x141f0>
  4154a4:	mov	x2, #0xb                   	// #11
  4154a8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4154ac:	add	x1, x1, #0x9b0
  4154b0:	ldrb	w0, [x22, #67]
  4154b4:	bl	411460 <ferror@plt+0xe730>
  4154b8:	mov	x1, x0
  4154bc:	mov	x0, x22
  4154c0:	bl	416f20 <ferror@plt+0x141f0>
  4154c4:	mov	w1, w19
  4154c8:	mov	x0, x21
  4154cc:	bl	415198 <ferror@plt+0x12468>
  4154d0:	cbz	x0, 415478 <ferror@plt+0x12748>
  4154d4:	mov	x1, x22
  4154d8:	bl	4149ec <ferror@plt+0x11cbc>
  4154dc:	add	w19, w19, #0x1
  4154e0:	cmp	w23, w19
  4154e4:	b.ge	4154c4 <ferror@plt+0x12794>  // b.tcont
  4154e8:	ldrb	w0, [x22, #67]
  4154ec:	bl	4114f4 <ferror@plt+0xe7c4>
  4154f0:	mov	x1, x0
  4154f4:	mov	x0, x22
  4154f8:	bl	416f20 <ferror@plt+0x141f0>
  4154fc:	ldp	x19, x20, [sp, #16]
  415500:	ldp	x21, x22, [sp, #32]
  415504:	ldp	x23, x24, [sp, #48]
  415508:	ldp	x29, x30, [sp], #64
  41550c:	ret
  415510:	ldrb	w0, [x22, #67]
  415514:	bl	4114f4 <ferror@plt+0xe7c4>
  415518:	mov	x1, x0
  41551c:	mov	x0, x22
  415520:	bl	416f20 <ferror@plt+0x141f0>
  415524:	mov	x2, #0xb                   	// #11
  415528:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41552c:	add	x1, x1, #0x9b0
  415530:	ldrb	w0, [x22, #67]
  415534:	bl	411460 <ferror@plt+0xe730>
  415538:	mov	x1, x0
  41553c:	mov	x0, x22
  415540:	bl	416f20 <ferror@plt+0x141f0>
  415544:	b	4154e8 <ferror@plt+0x127b8>
  415548:	stp	x29, x30, [sp, #-48]!
  41554c:	mov	x29, sp
  415550:	stp	x19, x20, [sp, #16]
  415554:	cmp	w1, w2
  415558:	b.gt	4155b4 <ferror@plt+0x12884>
  41555c:	stp	x21, x22, [sp, #32]
  415560:	mov	x22, x0
  415564:	mov	w19, w1
  415568:	add	w21, w2, #0x1
  41556c:	mov	w20, #0x0                   	// #0
  415570:	b	415584 <ferror@plt+0x12854>
  415574:	add	w20, w20, #0x1
  415578:	add	w19, w19, #0x1
  41557c:	cmp	w19, w21
  415580:	b.eq	4155a0 <ferror@plt+0x12870>  // b.none
  415584:	mov	w1, w19
  415588:	mov	x0, x22
  41558c:	bl	415198 <ferror@plt+0x12468>
  415590:	cbz	x0, 415574 <ferror@plt+0x12844>
  415594:	bl	414954 <ferror@plt+0x11c24>
  415598:	add	w20, w20, w0
  41559c:	b	415578 <ferror@plt+0x12848>
  4155a0:	ldp	x21, x22, [sp, #32]
  4155a4:	mov	w0, w20
  4155a8:	ldp	x19, x20, [sp, #16]
  4155ac:	ldp	x29, x30, [sp], #48
  4155b0:	ret
  4155b4:	mov	w20, #0x0                   	// #0
  4155b8:	b	4155a4 <ferror@plt+0x12874>
  4155bc:	stp	x29, x30, [sp, #-80]!
  4155c0:	mov	x29, sp
  4155c4:	stp	x19, x20, [sp, #16]
  4155c8:	stp	x21, x22, [sp, #32]
  4155cc:	stp	x23, x24, [sp, #48]
  4155d0:	stp	x25, x26, [sp, #64]
  4155d4:	mov	x20, x0
  4155d8:	mov	x22, x1
  4155dc:	mov	w21, w2
  4155e0:	mov	w23, w3
  4155e4:	mov	w19, w4
  4155e8:	sub	w24, w3, w2
  4155ec:	add	w24, w24, #0x1
  4155f0:	mov	w2, w3
  4155f4:	mov	w1, w21
  4155f8:	bl	415548 <ferror@plt+0x12818>
  4155fc:	mov	w25, w0
  415600:	mov	x2, #0x9                   	// #9
  415604:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415608:	add	x1, x1, #0x990
  41560c:	ldrb	w0, [x22, #67]
  415610:	bl	411460 <ferror@plt+0xe730>
  415614:	mov	x1, x0
  415618:	mov	x0, x22
  41561c:	bl	416f20 <ferror@plt+0x141f0>
  415620:	mov	w5, w25
  415624:	mov	w4, w19
  415628:	mov	w3, w24
  41562c:	mov	w2, w21
  415630:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415634:	add	x1, x1, #0xc38
  415638:	mov	x0, x22
  41563c:	bl	418d58 <ferror@plt+0x16028>
  415640:	ldrb	w0, [x22, #67]
  415644:	bl	4114f4 <ferror@plt+0xe7c4>
  415648:	mov	x1, x0
  41564c:	mov	x0, x22
  415650:	bl	416f20 <ferror@plt+0x141f0>
  415654:	cmp	w23, w21
  415658:	b.lt	4156d8 <ferror@plt+0x129a8>  // b.tstop
  41565c:	mov	w26, #0x20                  	// #32
  415660:	b	415684 <ferror@plt+0x12954>
  415664:	sub	w3, w19, #0x1
  415668:	mov	w2, w21
  41566c:	mov	x1, x22
  415670:	mov	x0, x20
  415674:	bl	4153b8 <ferror@plt+0x12688>
  415678:	mov	w21, w19
  41567c:	cmp	w23, w21
  415680:	b.lt	4156d8 <ferror@plt+0x129a8>  // b.tstop
  415684:	mov	w1, w21
  415688:	mov	x0, x20
  41568c:	bl	415198 <ferror@plt+0x12468>
  415690:	cbz	x0, 4156b0 <ferror@plt+0x12980>
  415694:	mov	w19, w21
  415698:	mov	w1, w19
  41569c:	mov	x0, x20
  4156a0:	bl	415198 <ferror@plt+0x12468>
  4156a4:	cbz	x0, 415664 <ferror@plt+0x12934>
  4156a8:	add	w19, w19, #0x1
  4156ac:	b	415698 <ferror@plt+0x12968>
  4156b0:	mov	w1, w21
  4156b4:	ldr	x0, [x20]
  4156b8:	bl	41bef8 <ferror@plt+0x191c8>
  4156bc:	mov	w3, w1
  4156c0:	mov	x2, x0
  4156c4:	mov	w1, w26
  4156c8:	mov	x0, x22
  4156cc:	bl	414668 <ferror@plt+0x11938>
  4156d0:	add	w21, w21, #0x1
  4156d4:	b	41567c <ferror@plt+0x1294c>
  4156d8:	sub	w0, w25, w24
  4156dc:	ldp	x19, x20, [sp, #16]
  4156e0:	ldp	x21, x22, [sp, #32]
  4156e4:	ldp	x23, x24, [sp, #48]
  4156e8:	ldp	x25, x26, [sp, #64]
  4156ec:	ldp	x29, x30, [sp], #80
  4156f0:	ret
  4156f4:	stp	x29, x30, [sp, #-96]!
  4156f8:	mov	x29, sp
  4156fc:	stp	x21, x22, [sp, #32]
  415700:	stp	x23, x24, [sp, #48]
  415704:	stp	x25, x26, [sp, #64]
  415708:	mov	x24, x0
  41570c:	mov	x25, x1
  415710:	tst	w2, #0xff
  415714:	b.ne	415758 <ferror@plt+0x12a28>  // b.any
  415718:	add	x21, x24, #0x8
  41571c:	ldr	x0, [x24, #8]
  415720:	cbz	x0, 415878 <ferror@plt+0x12b48>
  415724:	stp	x19, x20, [sp, #16]
  415728:	mov	x1, x0
  41572c:	ldr	x0, [x0, #16]
  415730:	cbnz	x0, 415728 <ferror@plt+0x129f8>
  415734:	ldr	x19, [x1, #8]
  415738:	add	x1, sp, #0x5f
  41573c:	mov	x0, x24
  415740:	bl	4147ac <ferror@plt+0x11a7c>
  415744:	mov	w23, w0
  415748:	cbz	x19, 4158a0 <ferror@plt+0x12b70>
  41574c:	mov	w22, #0x0                   	// #0
  415750:	mov	w26, #0x1                   	// #1
  415754:	b	41585c <ferror@plt+0x12b2c>
  415758:	mov	x2, #0xd                   	// #13
  41575c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415760:	add	x1, x1, #0x980
  415764:	ldrb	w0, [x25, #67]
  415768:	bl	411460 <ferror@plt+0xe730>
  41576c:	mov	x1, x0
  415770:	mov	x0, x25
  415774:	bl	416f20 <ferror@plt+0x141f0>
  415778:	ldr	x2, [x24]
  41577c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415780:	add	x1, x1, #0xc50
  415784:	mov	x0, x25
  415788:	bl	418d58 <ferror@plt+0x16028>
  41578c:	ldr	x2, [x24]
  415790:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  415794:	add	x1, x1, #0xc58
  415798:	mov	x0, x25
  41579c:	bl	418d58 <ferror@plt+0x16028>
  4157a0:	ldrb	w0, [x25, #67]
  4157a4:	bl	4114f4 <ferror@plt+0xe7c4>
  4157a8:	mov	x1, x0
  4157ac:	mov	x0, x25
  4157b0:	bl	416f20 <ferror@plt+0x141f0>
  4157b4:	b	415718 <ferror@plt+0x129e8>
  4157b8:	add	w2, w2, #0x2
  4157bc:	ldr	w1, [x0]
  4157c0:	sub	w1, w1, #0x3
  4157c4:	cmp	w1, w2
  4157c8:	b.gt	415804 <ferror@plt+0x12ad4>
  4157cc:	mov	x19, x0
  4157d0:	ldr	w1, [x19]
  4157d4:	mov	x0, x21
  4157d8:	bl	4160e0 <ferror@plt+0x133b0>
  4157dc:	cbz	x0, 415804 <ferror@plt+0x12ad4>
  4157e0:	ldr	x0, [x0, #8]
  4157e4:	cbz	x0, 415804 <ferror@plt+0x12ad4>
  4157e8:	ldr	w2, [x19]
  4157ec:	ldr	x1, [x19, #24]
  4157f0:	cbz	x1, 4157b8 <ferror@plt+0x12a88>
  4157f4:	ldr	w1, [x1, #4]
  4157f8:	cbz	w1, 4157b8 <ferror@plt+0x12a88>
  4157fc:	add	w2, w2, #0x3
  415800:	b	4157bc <ferror@plt+0x12a8c>
  415804:	ldr	w3, [x19]
  415808:	ldr	x0, [x19, #24]
  41580c:	cbz	x0, 415820 <ferror@plt+0x12af0>
  415810:	ldr	w0, [x0, #4]
  415814:	cbz	w0, 415820 <ferror@plt+0x12af0>
  415818:	add	w3, w3, #0x3
  41581c:	b	415824 <ferror@plt+0x12af4>
  415820:	add	w3, w3, #0x2
  415824:	cmp	w3, w23
  415828:	add	w4, w20, w22
  41582c:	csel	w3, w3, w23, le
  415830:	mov	w2, w20
  415834:	mov	x1, x25
  415838:	mov	x0, x24
  41583c:	bl	4155bc <ferror@plt+0x1288c>
  415840:	add	w22, w22, w0
  415844:	ldr	w1, [x19]
  415848:	mov	x0, x21
  41584c:	bl	4160e0 <ferror@plt+0x133b0>
  415850:	cbz	x0, 415888 <ferror@plt+0x12b58>
  415854:	ldr	x19, [x0, #8]
  415858:	cbz	x19, 415870 <ferror@plt+0x12b40>
  41585c:	ldr	w20, [x19]
  415860:	sub	w20, w20, #0x3
  415864:	cmp	w20, #0x0
  415868:	csel	w20, w20, w26, gt
  41586c:	b	4157d0 <ferror@plt+0x12aa0>
  415870:	ldp	x19, x20, [sp, #16]
  415874:	b	41588c <ferror@plt+0x12b5c>
  415878:	add	x1, sp, #0x5f
  41587c:	mov	x0, x24
  415880:	bl	4147ac <ferror@plt+0x11a7c>
  415884:	b	41588c <ferror@plt+0x12b5c>
  415888:	ldp	x19, x20, [sp, #16]
  41588c:	ldp	x21, x22, [sp, #32]
  415890:	ldp	x23, x24, [sp, #48]
  415894:	ldp	x25, x26, [sp, #64]
  415898:	ldp	x29, x30, [sp], #96
  41589c:	ret
  4158a0:	ldp	x19, x20, [sp, #16]
  4158a4:	b	41588c <ferror@plt+0x12b5c>
  4158a8:	stp	x29, x30, [sp, #-48]!
  4158ac:	mov	x29, sp
  4158b0:	stp	x19, x20, [sp, #16]
  4158b4:	stp	x21, x22, [sp, #32]
  4158b8:	mov	x20, x0
  4158bc:	mov	w21, w1
  4158c0:	bl	415198 <ferror@plt+0x12468>
  4158c4:	mov	x19, x0
  4158c8:	cbz	x0, 4158e0 <ferror@plt+0x12bb0>
  4158cc:	mov	x0, x19
  4158d0:	ldp	x19, x20, [sp, #16]
  4158d4:	ldp	x21, x22, [sp, #32]
  4158d8:	ldp	x29, x30, [sp], #48
  4158dc:	ret
  4158e0:	mov	x0, #0x28                  	// #40
  4158e4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4158e8:	mov	x19, x0
  4158ec:	mov	w2, w21
  4158f0:	ldr	x1, [x20]
  4158f4:	bl	414b20 <ferror@plt+0x11df0>
  4158f8:	ldr	x22, [x19, #8]
  4158fc:	cbz	x22, 415954 <ferror@plt+0x12c24>
  415900:	mov	w1, w21
  415904:	add	x0, x20, #0x8
  415908:	bl	415f38 <ferror@plt+0x13208>
  41590c:	ldr	x0, [x20, #8]
  415910:	cbz	x0, 4159ac <ferror@plt+0x12c7c>
  415914:	ldr	x2, [x20, #16]
  415918:	mov	w1, w21
  41591c:	ldr	w0, [x0]
  415920:	blr	x2
  415924:	mov	w22, w0
  415928:	ldr	x0, [x20, #8]
  41592c:	cmp	x0, #0x0
  415930:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  415934:	b.ne	415970 <ferror@plt+0x12c40>  // b.any
  415938:	ldr	x1, [x20, #32]
  41593c:	cbz	x1, 415948 <ferror@plt+0x12c18>
  415940:	ldr	x0, [x0, #8]
  415944:	blr	x1
  415948:	ldr	x0, [x20, #8]
  41594c:	str	x19, [x0, #8]
  415950:	b	4158cc <ferror@plt+0x12b9c>
  415954:	mov	x0, x19
  415958:	bl	41482c <ferror@plt+0x11afc>
  41595c:	mov	x1, #0x28                  	// #40
  415960:	mov	x0, x19
  415964:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  415968:	mov	x19, x22
  41596c:	b	4158cc <ferror@plt+0x12b9c>
  415970:	mov	x0, #0x28                  	// #40
  415974:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  415978:	str	w21, [x0]
  41597c:	str	x19, [x0, #8]
  415980:	ldr	x1, [x20, #8]
  415984:	cbz	x1, 4159a0 <ferror@plt+0x12c70>
  415988:	tbz	w22, #31, 4159c4 <ferror@plt+0x12c94>
  41598c:	str	x1, [x0, #16]
  415990:	ldr	x2, [x1, #24]
  415994:	str	x2, [x0, #24]
  415998:	str	xzr, [x1, #24]
  41599c:	b	4159d4 <ferror@plt+0x12ca4>
  4159a0:	str	xzr, [x0, #24]
  4159a4:	str	xzr, [x0, #16]
  4159a8:	b	4159d4 <ferror@plt+0x12ca4>
  4159ac:	mov	x0, #0x28                  	// #40
  4159b0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4159b4:	str	w21, [x0]
  4159b8:	str	x19, [x0, #8]
  4159bc:	ldr	x1, [x20, #8]
  4159c0:	cbz	x1, 4159a0 <ferror@plt+0x12c70>
  4159c4:	str	x1, [x0, #24]
  4159c8:	ldr	x2, [x1, #16]
  4159cc:	str	x2, [x0, #16]
  4159d0:	str	xzr, [x1, #16]
  4159d4:	str	x0, [x20, #8]
  4159d8:	b	4158cc <ferror@plt+0x12b9c>
  4159dc:	stp	x29, x30, [sp, #-48]!
  4159e0:	mov	x29, sp
  4159e4:	stp	x19, x20, [sp, #16]
  4159e8:	stp	x21, x22, [sp, #32]
  4159ec:	mov	w19, w2
  4159f0:	mov	w20, w3
  4159f4:	mov	x21, x4
  4159f8:	mov	w22, w5
  4159fc:	bl	4158a8 <ferror@plt+0x12b78>
  415a00:	cbz	x0, 415a2c <ferror@plt+0x12cfc>
  415a04:	mov	w4, w22
  415a08:	mov	x3, x21
  415a0c:	mov	w2, w20
  415a10:	mov	w1, w19
  415a14:	bl	414b8c <ferror@plt+0x11e5c>
  415a18:	and	w0, w0, #0xff
  415a1c:	ldp	x19, x20, [sp, #16]
  415a20:	ldp	x21, x22, [sp, #32]
  415a24:	ldp	x29, x30, [sp], #48
  415a28:	ret
  415a2c:	mov	w0, #0x0                   	// #0
  415a30:	b	415a1c <ferror@plt+0x12cec>
  415a34:	stp	x29, x30, [sp, #-128]!
  415a38:	mov	x29, sp
  415a3c:	stp	x19, x20, [sp, #16]
  415a40:	stp	x21, x22, [sp, #32]
  415a44:	stp	x23, x24, [sp, #48]
  415a48:	mov	x21, x0
  415a4c:	mov	x19, x1
  415a50:	add	x8, sp, #0x60
  415a54:	ldr	w0, [x1]
  415a58:	bl	41bd48 <ferror@plt+0x19018>
  415a5c:	ldr	x20, [sp, #96]
  415a60:	ldr	w22, [sp, #104]
  415a64:	ldr	w23, [sp, #108]
  415a68:	add	x8, sp, #0x40
  415a6c:	ldr	w0, [x19, #4]
  415a70:	bl	41bd48 <ferror@plt+0x19018>
  415a74:	ldr	x1, [sp, #64]
  415a78:	mov	w0, #0x0                   	// #0
  415a7c:	cmp	x1, x20
  415a80:	b.eq	415a98 <ferror@plt+0x12d68>  // b.none
  415a84:	ldp	x19, x20, [sp, #16]
  415a88:	ldp	x21, x22, [sp, #32]
  415a8c:	ldp	x23, x24, [sp, #48]
  415a90:	ldp	x29, x30, [sp], #128
  415a94:	ret
  415a98:	ldr	w24, [sp, #76]
  415a9c:	cmp	w23, #0x0
  415aa0:	ldr	w0, [sp, #72]
  415aa4:	ccmp	w0, w22, #0x0, ne  // ne = any
  415aa8:	mov	w0, #0x0                   	// #0
  415aac:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  415ab0:	b.eq	415a84 <ferror@plt+0x12d54>  // b.none
  415ab4:	mov	x1, x20
  415ab8:	mov	x0, x21
  415abc:	bl	41504c <ferror@plt+0x1231c>
  415ac0:	mov	x6, x0
  415ac4:	ldrb	w0, [x21]
  415ac8:	cbz	w0, 415a84 <ferror@plt+0x12d54>
  415acc:	ldr	w5, [x19, #16]
  415ad0:	ldr	x4, [x19, #8]
  415ad4:	mov	w3, w24
  415ad8:	mov	w2, w23
  415adc:	mov	w1, w22
  415ae0:	mov	x0, x6
  415ae4:	bl	4159dc <ferror@plt+0x12cac>
  415ae8:	and	w0, w0, #0xff
  415aec:	b	415a84 <ferror@plt+0x12d54>
  415af0:	stp	x29, x30, [sp, #-48]!
  415af4:	mov	x29, sp
  415af8:	str	x21, [sp, #32]
  415afc:	mov	x21, x0
  415b00:	ldrb	w0, [x0]
  415b04:	cbz	w0, 415b88 <ferror@plt+0x12e58>
  415b08:	stp	x19, x20, [sp, #16]
  415b0c:	mov	x20, x1
  415b10:	ldrb	w0, [x1, #160]
  415b14:	cbnz	w0, 415b28 <ferror@plt+0x12df8>
  415b18:	ldr	w0, [x1, #120]
  415b1c:	cbz	w0, 415b94 <ferror@plt+0x12e64>
  415b20:	mov	w19, #0x0                   	// #0
  415b24:	b	415b50 <ferror@plt+0x12e20>
  415b28:	strb	wzr, [x21]
  415b2c:	ldp	x19, x20, [sp, #16]
  415b30:	b	415b88 <ferror@plt+0x12e58>
  415b34:	add	x2, x20, w19, sxtw #3
  415b38:	add	x2, x2, #0x80
  415b3c:	b	415b68 <ferror@plt+0x12e38>
  415b40:	add	w19, w19, #0x1
  415b44:	ldr	w0, [x20, #120]
  415b48:	cmp	w0, w19
  415b4c:	b.ls	415b84 <ferror@plt+0x12e54>  // b.plast
  415b50:	cmp	w19, #0x1
  415b54:	b.le	415b34 <ferror@plt+0x12e04>
  415b58:	sbfiz	x2, x19, #3, #32
  415b5c:	sub	x0, x2, #0x10
  415b60:	ldr	x2, [x20, #152]
  415b64:	add	x2, x2, x0
  415b68:	ldr	x1, [x2]
  415b6c:	mov	x0, x21
  415b70:	bl	415a34 <ferror@plt+0x12d04>
  415b74:	and	w2, w0, #0xff
  415b78:	cbnz	w2, 415b40 <ferror@plt+0x12e10>
  415b7c:	strb	wzr, [x21]
  415b80:	b	415b40 <ferror@plt+0x12e10>
  415b84:	ldp	x19, x20, [sp, #16]
  415b88:	ldr	x21, [sp, #32]
  415b8c:	ldp	x29, x30, [sp], #48
  415b90:	ret
  415b94:	ldp	x19, x20, [sp, #16]
  415b98:	b	415b88 <ferror@plt+0x12e58>
  415b9c:	stp	x29, x30, [sp, #-112]!
  415ba0:	mov	x29, sp
  415ba4:	stp	x19, x20, [sp, #16]
  415ba8:	mov	x19, x0
  415bac:	ldrb	w0, [x0]
  415bb0:	cbz	w0, 415bfc <ferror@plt+0x12ecc>
  415bb4:	and	w20, w1, #0xff
  415bb8:	mov	w1, #0x0                   	// #0
  415bbc:	add	x0, sp, #0x28
  415bc0:	bl	4165e0 <ferror@plt+0x138b0>
  415bc4:	mov	w2, w20
  415bc8:	add	x1, sp, #0x28
  415bcc:	mov	x0, x19
  415bd0:	bl	414704 <ferror@plt+0x119d4>
  415bd4:	add	x0, sp, #0x28
  415bd8:	bl	41666c <ferror@plt+0x1393c>
  415bdc:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  415be0:	mov	x19, x0
  415be4:	add	x0, sp, #0x28
  415be8:	bl	41647c <ferror@plt+0x1374c>
  415bec:	mov	x0, x19
  415bf0:	ldp	x19, x20, [sp, #16]
  415bf4:	ldp	x29, x30, [sp], #112
  415bf8:	ret
  415bfc:	mov	x19, #0x0                   	// #0
  415c00:	b	415bec <ferror@plt+0x12ebc>
  415c04:	stp	x29, x30, [sp, #-112]!
  415c08:	mov	x29, sp
  415c0c:	str	x19, [sp, #16]
  415c10:	mov	x19, x0
  415c14:	mov	w1, #0x0                   	// #0
  415c18:	add	x0, sp, #0x28
  415c1c:	bl	4165e0 <ferror@plt+0x138b0>
  415c20:	add	x1, sp, #0x28
  415c24:	mov	x0, x19
  415c28:	bl	415260 <ferror@plt+0x12530>
  415c2c:	and	w0, w0, #0xff
  415c30:	mov	x19, #0x0                   	// #0
  415c34:	cbz	w0, 415c48 <ferror@plt+0x12f18>
  415c38:	add	x0, sp, #0x28
  415c3c:	bl	41666c <ferror@plt+0x1393c>
  415c40:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  415c44:	mov	x19, x0
  415c48:	add	x0, sp, #0x28
  415c4c:	bl	41647c <ferror@plt+0x1374c>
  415c50:	mov	x0, x19
  415c54:	ldr	x19, [sp, #16]
  415c58:	ldp	x29, x30, [sp], #112
  415c5c:	ret
  415c60:	ldrb	w2, [x0]
  415c64:	cbz	w2, 415c80 <ferror@plt+0x12f50>
  415c68:	stp	x29, x30, [sp, #-16]!
  415c6c:	mov	x29, sp
  415c70:	bl	41504c <ferror@plt+0x1231c>
  415c74:	bl	415c04 <ferror@plt+0x12ed4>
  415c78:	ldp	x29, x30, [sp], #16
  415c7c:	ret
  415c80:	mov	x0, #0x0                   	// #0
  415c84:	ret
  415c88:	cbz	x1, 415d8c <ferror@plt+0x1305c>
  415c8c:	stp	x29, x30, [sp, #-64]!
  415c90:	mov	x29, sp
  415c94:	stp	x19, x20, [sp, #16]
  415c98:	stp	x21, x22, [sp, #32]
  415c9c:	str	x23, [sp, #48]
  415ca0:	mov	x22, x0
  415ca4:	mov	x19, x1
  415ca8:	ldr	x1, [x0, #16]
  415cac:	cbz	x1, 415cb8 <ferror@plt+0x12f88>
  415cb0:	ldr	w0, [x19]
  415cb4:	blr	x1
  415cb8:	ldr	x1, [x22, #24]
  415cbc:	cbz	x1, 415cc8 <ferror@plt+0x12f98>
  415cc0:	ldr	x0, [x19, #8]
  415cc4:	blr	x1
  415cc8:	str	xzr, [x19, #32]
  415ccc:	mov	x21, #0x0                   	// #0
  415cd0:	mov	x23, #0x28                  	// #40
  415cd4:	b	415d10 <ferror@plt+0x12fe0>
  415cd8:	cbz	x21, 415d78 <ferror@plt+0x13048>
  415cdc:	mov	x0, x21
  415ce0:	mov	x21, x20
  415ce4:	mov	x20, x0
  415ce8:	b	415d0c <ferror@plt+0x12fdc>
  415cec:	ldr	x0, [x19, #24]
  415cf0:	str	x21, [x0, #32]
  415cf4:	ldr	x21, [x19, #24]
  415cf8:	ldr	x20, [x19, #32]
  415cfc:	mov	x1, x23
  415d00:	mov	x0, x19
  415d04:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  415d08:	cbz	x20, 415cd8 <ferror@plt+0x12fa8>
  415d0c:	mov	x19, x20
  415d10:	ldr	x0, [x19, #16]
  415d14:	cbz	x0, 415d48 <ferror@plt+0x13018>
  415d18:	ldr	x1, [x22, #16]
  415d1c:	cbz	x1, 415d28 <ferror@plt+0x12ff8>
  415d20:	ldr	w0, [x0]
  415d24:	blr	x1
  415d28:	ldr	x1, [x22, #24]
  415d2c:	cbz	x1, 415d3c <ferror@plt+0x1300c>
  415d30:	ldr	x0, [x19, #16]
  415d34:	ldr	x0, [x0, #8]
  415d38:	blr	x1
  415d3c:	ldr	x0, [x19, #16]
  415d40:	str	x21, [x0, #32]
  415d44:	ldr	x21, [x19, #16]
  415d48:	ldr	x0, [x19, #24]
  415d4c:	cbz	x0, 415cf8 <ferror@plt+0x12fc8>
  415d50:	ldr	x1, [x22, #16]
  415d54:	cbz	x1, 415d60 <ferror@plt+0x13030>
  415d58:	ldr	w0, [x0]
  415d5c:	blr	x1
  415d60:	ldr	x1, [x22, #24]
  415d64:	cbz	x1, 415cec <ferror@plt+0x12fbc>
  415d68:	ldr	x0, [x19, #24]
  415d6c:	ldr	x0, [x0, #8]
  415d70:	blr	x1
  415d74:	b	415cec <ferror@plt+0x12fbc>
  415d78:	ldp	x19, x20, [sp, #16]
  415d7c:	ldp	x21, x22, [sp, #32]
  415d80:	ldr	x23, [sp, #48]
  415d84:	ldp	x29, x30, [sp], #64
  415d88:	ret
  415d8c:	ret
  415d90:	stp	x29, x30, [sp, #-64]!
  415d94:	mov	x29, sp
  415d98:	stp	x21, x22, [sp, #32]
  415d9c:	str	x23, [sp, #48]
  415da0:	mov	x22, x0
  415da4:	mov	x23, x1
  415da8:	ldr	x0, [x0]
  415dac:	cbz	x0, 415e94 <ferror@plt+0x13164>
  415db0:	stp	x19, x20, [sp, #16]
  415db4:	b	415e00 <ferror@plt+0x130d0>
  415db8:	ldr	x19, [x21, #16]
  415dbc:	b	415e24 <ferror@plt+0x130f4>
  415dc0:	ldr	x1, [x19, #16]
  415dc4:	cbz	x1, 415e7c <ferror@plt+0x1314c>
  415dc8:	lsr	w2, w20, #31
  415dcc:	lsr	w1, w0, #31
  415dd0:	cmp	w2, #0x0
  415dd4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  415dd8:	b.eq	415ee0 <ferror@plt+0x131b0>  // b.none
  415ddc:	ldr	x2, [x19, #16]
  415de0:	ldr	x0, [x2, #24]
  415de4:	str	x19, [x2, #24]
  415de8:	str	x0, [x19, #16]
  415dec:	str	x2, [x21, #16]
  415df0:	ldr	x0, [x2, #24]
  415df4:	str	x21, [x2, #24]
  415df8:	str	x0, [x21, #16]
  415dfc:	str	x2, [x22]
  415e00:	ldr	x21, [x22]
  415e04:	ldr	x2, [x22, #8]
  415e08:	ldr	x1, [x21]
  415e0c:	mov	x0, x23
  415e10:	blr	x2
  415e14:	mov	w20, w0
  415e18:	cbz	w0, 415f28 <ferror@plt+0x131f8>
  415e1c:	tbnz	w0, #31, 415db8 <ferror@plt+0x13088>
  415e20:	ldr	x19, [x21, #24]
  415e24:	cbz	x19, 415f30 <ferror@plt+0x13200>
  415e28:	ldr	x2, [x22, #8]
  415e2c:	ldr	x1, [x19]
  415e30:	mov	x0, x23
  415e34:	blr	x2
  415e38:	cbz	w0, 415e7c <ferror@plt+0x1314c>
  415e3c:	tbnz	w0, #31, 415dc0 <ferror@plt+0x13090>
  415e40:	ldr	x2, [x19, #24]
  415e44:	cbz	x2, 415e7c <ferror@plt+0x1314c>
  415e48:	cmp	w20, #0x0
  415e4c:	b.gt	415ebc <ferror@plt+0x1318c>
  415e50:	tbz	w20, #31, 415e00 <ferror@plt+0x130d0>
  415e54:	ldr	x0, [x19, #24]
  415e58:	ldr	x1, [x0, #16]
  415e5c:	str	x19, [x0, #16]
  415e60:	str	x1, [x19, #24]
  415e64:	str	x0, [x21, #16]
  415e68:	ldr	x1, [x0, #24]
  415e6c:	str	x21, [x0, #24]
  415e70:	str	x1, [x21, #16]
  415e74:	str	x0, [x22]
  415e78:	b	415e00 <ferror@plt+0x130d0>
  415e7c:	tbnz	w20, #31, 415ea4 <ferror@plt+0x13174>
  415e80:	ldr	x0, [x19, #16]
  415e84:	str	x21, [x19, #16]
  415e88:	str	x0, [x21, #24]
  415e8c:	str	x19, [x22]
  415e90:	ldp	x19, x20, [sp, #16]
  415e94:	ldp	x21, x22, [sp, #32]
  415e98:	ldr	x23, [sp, #48]
  415e9c:	ldp	x29, x30, [sp], #64
  415ea0:	ret
  415ea4:	ldr	x0, [x19, #24]
  415ea8:	str	x21, [x19, #24]
  415eac:	str	x0, [x21, #16]
  415eb0:	str	x19, [x22]
  415eb4:	ldp	x19, x20, [sp, #16]
  415eb8:	b	415e94 <ferror@plt+0x13164>
  415ebc:	ldr	x0, [x2, #16]
  415ec0:	str	x19, [x2, #16]
  415ec4:	str	x0, [x19, #24]
  415ec8:	str	x2, [x21, #24]
  415ecc:	ldr	x0, [x2, #16]
  415ed0:	str	x21, [x2, #16]
  415ed4:	str	x0, [x21, #24]
  415ed8:	str	x2, [x22]
  415edc:	b	415e00 <ferror@plt+0x130d0>
  415ee0:	cmp	w20, #0x0
  415ee4:	cset	w3, gt
  415ee8:	cmp	w0, #0x0
  415eec:	ccmp	w2, #0x0, #0x4, gt
  415ef0:	b.ne	415e54 <ferror@plt+0x13124>  // b.any
  415ef4:	cmp	w3, #0x0
  415ef8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  415efc:	b.eq	415e00 <ferror@plt+0x130d0>  // b.none
  415f00:	ldr	x0, [x19, #16]
  415f04:	ldr	x1, [x0, #24]
  415f08:	str	x19, [x0, #24]
  415f0c:	str	x1, [x19, #16]
  415f10:	str	x0, [x21, #24]
  415f14:	ldr	x1, [x0, #16]
  415f18:	str	x21, [x0, #16]
  415f1c:	str	x1, [x21, #24]
  415f20:	str	x0, [x22]
  415f24:	b	415e00 <ferror@plt+0x130d0>
  415f28:	ldp	x19, x20, [sp, #16]
  415f2c:	b	415e94 <ferror@plt+0x13164>
  415f30:	ldp	x19, x20, [sp, #16]
  415f34:	b	415e94 <ferror@plt+0x13164>
  415f38:	stp	x29, x30, [sp, #-64]!
  415f3c:	mov	x29, sp
  415f40:	stp	x21, x22, [sp, #32]
  415f44:	str	x23, [sp, #48]
  415f48:	mov	x22, x0
  415f4c:	mov	w23, w1
  415f50:	ldr	x0, [x0]
  415f54:	cbz	x0, 41603c <ferror@plt+0x1330c>
  415f58:	stp	x19, x20, [sp, #16]
  415f5c:	b	415fa8 <ferror@plt+0x13278>
  415f60:	ldr	x19, [x21, #16]
  415f64:	b	415fcc <ferror@plt+0x1329c>
  415f68:	ldr	x1, [x19, #16]
  415f6c:	cbz	x1, 416024 <ferror@plt+0x132f4>
  415f70:	lsr	w2, w20, #31
  415f74:	lsr	w1, w0, #31
  415f78:	cmp	w2, #0x0
  415f7c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  415f80:	b.eq	416088 <ferror@plt+0x13358>  // b.none
  415f84:	ldr	x2, [x19, #16]
  415f88:	ldr	x0, [x2, #24]
  415f8c:	str	x19, [x2, #24]
  415f90:	str	x0, [x19, #16]
  415f94:	str	x2, [x21, #16]
  415f98:	ldr	x0, [x2, #24]
  415f9c:	str	x21, [x2, #24]
  415fa0:	str	x0, [x21, #16]
  415fa4:	str	x2, [x22]
  415fa8:	ldr	x21, [x22]
  415fac:	ldr	x2, [x22, #8]
  415fb0:	ldr	w1, [x21]
  415fb4:	mov	w0, w23
  415fb8:	blr	x2
  415fbc:	mov	w20, w0
  415fc0:	cbz	w0, 4160d0 <ferror@plt+0x133a0>
  415fc4:	tbnz	w0, #31, 415f60 <ferror@plt+0x13230>
  415fc8:	ldr	x19, [x21, #24]
  415fcc:	cbz	x19, 4160d8 <ferror@plt+0x133a8>
  415fd0:	ldr	x2, [x22, #8]
  415fd4:	ldr	w1, [x19]
  415fd8:	mov	w0, w23
  415fdc:	blr	x2
  415fe0:	cbz	w0, 416024 <ferror@plt+0x132f4>
  415fe4:	tbnz	w0, #31, 415f68 <ferror@plt+0x13238>
  415fe8:	ldr	x2, [x19, #24]
  415fec:	cbz	x2, 416024 <ferror@plt+0x132f4>
  415ff0:	cmp	w20, #0x0
  415ff4:	b.gt	416064 <ferror@plt+0x13334>
  415ff8:	tbz	w20, #31, 415fa8 <ferror@plt+0x13278>
  415ffc:	ldr	x0, [x19, #24]
  416000:	ldr	x1, [x0, #16]
  416004:	str	x19, [x0, #16]
  416008:	str	x1, [x19, #24]
  41600c:	str	x0, [x21, #16]
  416010:	ldr	x1, [x0, #24]
  416014:	str	x21, [x0, #24]
  416018:	str	x1, [x21, #16]
  41601c:	str	x0, [x22]
  416020:	b	415fa8 <ferror@plt+0x13278>
  416024:	tbnz	w20, #31, 41604c <ferror@plt+0x1331c>
  416028:	ldr	x0, [x19, #16]
  41602c:	str	x21, [x19, #16]
  416030:	str	x0, [x21, #24]
  416034:	str	x19, [x22]
  416038:	ldp	x19, x20, [sp, #16]
  41603c:	ldp	x21, x22, [sp, #32]
  416040:	ldr	x23, [sp, #48]
  416044:	ldp	x29, x30, [sp], #64
  416048:	ret
  41604c:	ldr	x0, [x19, #24]
  416050:	str	x21, [x19, #24]
  416054:	str	x0, [x21, #16]
  416058:	str	x19, [x22]
  41605c:	ldp	x19, x20, [sp, #16]
  416060:	b	41603c <ferror@plt+0x1330c>
  416064:	ldr	x0, [x2, #16]
  416068:	str	x19, [x2, #16]
  41606c:	str	x0, [x19, #24]
  416070:	str	x2, [x21, #24]
  416074:	ldr	x0, [x2, #16]
  416078:	str	x21, [x2, #16]
  41607c:	str	x0, [x21, #24]
  416080:	str	x2, [x22]
  416084:	b	415fa8 <ferror@plt+0x13278>
  416088:	cmp	w20, #0x0
  41608c:	cset	w3, gt
  416090:	cmp	w0, #0x0
  416094:	ccmp	w2, #0x0, #0x4, gt
  416098:	b.ne	415ffc <ferror@plt+0x132cc>  // b.any
  41609c:	cmp	w3, #0x0
  4160a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4160a4:	b.eq	415fa8 <ferror@plt+0x13278>  // b.none
  4160a8:	ldr	x0, [x19, #16]
  4160ac:	ldr	x1, [x0, #24]
  4160b0:	str	x19, [x0, #24]
  4160b4:	str	x1, [x19, #16]
  4160b8:	str	x0, [x21, #24]
  4160bc:	ldr	x1, [x0, #16]
  4160c0:	str	x21, [x0, #16]
  4160c4:	str	x1, [x21, #24]
  4160c8:	str	x0, [x22]
  4160cc:	b	415fa8 <ferror@plt+0x13278>
  4160d0:	ldp	x19, x20, [sp, #16]
  4160d4:	b	41603c <ferror@plt+0x1330c>
  4160d8:	ldp	x19, x20, [sp, #16]
  4160dc:	b	41603c <ferror@plt+0x1330c>
  4160e0:	stp	x29, x30, [sp, #-32]!
  4160e4:	mov	x29, sp
  4160e8:	stp	x19, x20, [sp, #16]
  4160ec:	mov	x19, x0
  4160f0:	ldr	x0, [x0]
  4160f4:	cbz	x0, 416144 <ferror@plt+0x13414>
  4160f8:	mov	w20, w1
  4160fc:	mov	x0, x19
  416100:	bl	415f38 <ferror@plt+0x13208>
  416104:	ldr	x0, [x19]
  416108:	ldr	x2, [x19, #8]
  41610c:	mov	w1, w20
  416110:	ldr	w0, [x0]
  416114:	blr	x2
  416118:	cmp	w0, #0x0
  41611c:	b.gt	416140 <ferror@plt+0x13410>
  416120:	ldr	x0, [x19]
  416124:	ldr	x1, [x0, #24]
  416128:	mov	x0, x1
  41612c:	cbz	x1, 416144 <ferror@plt+0x13414>
  416130:	mov	x0, x1
  416134:	ldr	x1, [x1, #16]
  416138:	cbnz	x1, 416130 <ferror@plt+0x13400>
  41613c:	b	416144 <ferror@plt+0x13414>
  416140:	ldr	x0, [x19]
  416144:	ldp	x19, x20, [sp, #16]
  416148:	ldp	x29, x30, [sp], #32
  41614c:	ret
  416150:	stp	x29, x30, [sp, #-16]!
  416154:	mov	x29, sp
  416158:	mov	x0, x1
  41615c:	mov	x1, x2
  416160:	ldrb	w2, [x2, #8]
  416164:	ldr	x1, [x1]
  416168:	bl	4156f4 <ferror@plt+0x129c4>
  41616c:	mov	w0, #0x0                   	// #0
  416170:	ldp	x29, x30, [sp], #16
  416174:	ret
  416178:	ldrb	w7, [x0]
  41617c:	cbz	x1, 4161bc <ferror@plt+0x1348c>
  416180:	mov	w4, w7
  416184:	tbz	w7, #7, 41629c <ferror@plt+0x1356c>
  416188:	mov	x3, #0x0                   	// #0
  41618c:	mov	x6, x3
  416190:	add	x3, x3, #0x1
  416194:	lsl	w4, w4, #1
  416198:	tbnz	w4, #7, 41618c <ferror@plt+0x1345c>
  41619c:	sub	x6, x6, #0x1
  4161a0:	cmp	x6, #0x4
  4161a4:	ccmp	x1, x3, #0x0, ls  // ls = plast
  4161a8:	b.cs	4161dc <ferror@plt+0x134ac>  // b.hs, b.nlast
  4161ac:	mov	w0, #0xffffffff            	// #-1
  4161b0:	str	w0, [x2]
  4161b4:	mov	w0, #0x0                   	// #0
  4161b8:	ret
  4161bc:	stp	x29, x30, [sp, #-16]!
  4161c0:	mov	x29, sp
  4161c4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4161c8:	add	x2, x2, #0xc60
  4161cc:	mov	w1, #0x71b                 	// #1819
  4161d0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4161d4:	add	x0, x0, #0xc78
  4161d8:	bl	4102b4 <ferror@plt+0xd584>
  4161dc:	mov	w5, #0x7                   	// #7
  4161e0:	sub	w1, w5, w3
  4161e4:	mov	w5, #0x1                   	// #1
  4161e8:	lsl	w5, w5, w1
  4161ec:	sub	w5, w5, #0x1
  4161f0:	and	w5, w5, w7
  4161f4:	mov	x1, #0x1                   	// #1
  4161f8:	ldrb	w4, [x0, x1]
  4161fc:	and	w6, w4, #0xc0
  416200:	cmp	w6, #0x80
  416204:	b.ne	416280 <ferror@plt+0x13550>  // b.any
  416208:	bfi	w4, w5, #6, #26
  41620c:	mov	w5, w4
  416210:	add	x1, x1, #0x1
  416214:	cmp	x3, x1
  416218:	b.hi	4161f8 <ferror@plt+0x134c8>  // b.pmore
  41621c:	cmp	w4, #0x7f
  416220:	b.ls	416270 <ferror@plt+0x13540>  // b.plast
  416224:	cmp	w4, #0x7ff
  416228:	ccmp	x3, #0x2, #0x0, ls  // ls = plast
  41622c:	b.hi	416270 <ferror@plt+0x13540>  // b.pmore
  416230:	mov	w0, #0xffff                	// #65535
  416234:	cmp	w4, w0
  416238:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  41623c:	b.hi	416270 <ferror@plt+0x13540>  // b.pmore
  416240:	mov	w0, #0x1fffff              	// #2097151
  416244:	cmp	w4, w0
  416248:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  41624c:	b.hi	416270 <ferror@plt+0x13540>  // b.pmore
  416250:	mov	w0, #0x3ffffff             	// #67108863
  416254:	cmp	w4, w0
  416258:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  41625c:	b.eq	416270 <ferror@plt+0x13540>  // b.none
  416260:	sub	w0, w4, #0xd, lsl #12
  416264:	sub	w0, w0, #0x800
  416268:	cmp	w0, #0x7ff
  41626c:	b.hi	416290 <ferror@plt+0x13560>  // b.pmore
  416270:	mov	w0, #0xffffffff            	// #-1
  416274:	str	w0, [x2]
  416278:	mov	w0, #0x0                   	// #0
  41627c:	ret
  416280:	mov	w0, #0xffffffff            	// #-1
  416284:	str	w0, [x2]
  416288:	mov	w0, #0x0                   	// #0
  41628c:	ret
  416290:	str	w4, [x2]
  416294:	mov	w0, w3
  416298:	ret
  41629c:	str	w7, [x2]
  4162a0:	mov	w0, #0x1                   	// #1
  4162a4:	ret
  4162a8:	stp	x29, x30, [sp, #-32]!
  4162ac:	mov	x29, sp
  4162b0:	stp	x19, x20, [sp, #16]
  4162b4:	mov	x19, x0
  4162b8:	ldr	w20, [x0, #40]
  4162bc:	cmp	w20, #0x0
  4162c0:	b.le	4162d0 <ferror@plt+0x135a0>
  4162c4:	ldr	w0, [x0, #36]
  4162c8:	cmp	w0, #0x1
  4162cc:	b.hi	4162e0 <ferror@plt+0x135b0>  // b.pmore
  4162d0:	str	w20, [x19, #28]
  4162d4:	ldp	x19, x20, [sp, #16]
  4162d8:	ldp	x29, x30, [sp], #32
  4162dc:	ret
  4162e0:	ldr	x0, [x19, #16]
  4162e4:	mov	w1, #0x0                   	// #0
  4162e8:	cbz	x0, 4162f4 <ferror@plt+0x135c4>
  4162ec:	bl	402680 <strlen@plt>
  4162f0:	mov	w1, w0
  4162f4:	sub	w1, w20, w1
  4162f8:	add	w0, w20, #0x20
  4162fc:	cmp	w1, #0x20
  416300:	csel	w20, w0, w20, lt  // lt = tstop
  416304:	str	w20, [x19, #28]
  416308:	b	4162d4 <ferror@plt+0x135a4>
  41630c:	stp	x29, x30, [sp, #-16]!
  416310:	mov	x29, sp
  416314:	ldr	x0, [x0, #32]
  416318:	bl	4343e0 <ferror@plt+0x316b0>
  41631c:	ldp	x29, x30, [sp], #16
  416320:	ret
  416324:	cbz	w1, 416330 <ferror@plt+0x13600>
  416328:	mov	w0, #0x0                   	// #0
  41632c:	ret
  416330:	stp	x29, x30, [sp, #-16]!
  416334:	mov	x29, sp
  416338:	ldr	x0, [x0, #32]
  41633c:	bl	4341e4 <ferror@plt+0x314b4>
  416340:	ldp	x29, x30, [sp], #16
  416344:	ret
  416348:	stp	x29, x30, [sp, #-48]!
  41634c:	mov	x29, sp
  416350:	stp	x19, x20, [sp, #16]
  416354:	str	x21, [sp, #32]
  416358:	mov	x19, x0
  41635c:	str	xzr, [x0]
  416360:	str	xzr, [x0, #8]
  416364:	str	xzr, [x0, #16]
  416368:	str	xzr, [x0, #24]
  41636c:	str	xzr, [x0, #32]
  416370:	str	xzr, [x0, #40]
  416374:	str	xzr, [x0, #48]
  416378:	str	xzr, [x0, #56]
  41637c:	str	xzr, [x0, #64]
  416380:	str	xzr, [x0, #72]
  416384:	ldrb	w0, [x0, #80]
  416388:	and	w0, w0, #0xfffffff8
  41638c:	strb	w0, [x19, #80]
  416390:	str	xzr, [x19, #88]
  416394:	str	xzr, [x19, #96]
  416398:	str	xzr, [x19, #104]
  41639c:	str	xzr, [x19, #112]
  4163a0:	str	xzr, [x19, #120]
  4163a4:	str	xzr, [x19, #128]
  4163a8:	str	xzr, [x19, #136]
  4163ac:	str	xzr, [x19, #144]
  4163b0:	str	xzr, [x19, #152]
  4163b4:	str	xzr, [x19, #160]
  4163b8:	ldrb	w0, [x19, #168]
  4163bc:	and	w0, w0, #0xfffffff8
  4163c0:	strb	w0, [x19, #168]
  4163c4:	str	x19, [x19, #176]
  4163c8:	str	xzr, [x19, #184]
  4163cc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4163d0:	ldr	x0, [x0, #1424]
  4163d4:	str	x0, [x19, #192]
  4163d8:	str	wzr, [x19, #200]
  4163dc:	add	x1, x19, #0xcc
  4163e0:	add	x2, x19, #0x14c
  4163e4:	strb	wzr, [x1], #1
  4163e8:	cmp	x1, x2
  4163ec:	b.ne	4163e4 <ferror@plt+0x136b4>  // b.any
  4163f0:	mov	w0, #0x1                   	// #1
  4163f4:	strb	w0, [x19, #332]
  4163f8:	adrp	x21, 41d000 <ferror@plt+0x1a2d0>
  4163fc:	add	x21, x21, #0xed4
  416400:	adrp	x20, 41d000 <ferror@plt+0x1a2d0>
  416404:	add	x20, x20, #0xe90
  416408:	mov	x4, x21
  41640c:	mov	x3, x20
  416410:	mov	x2, #0x0                   	// #0
  416414:	mov	x1, #0x0                   	// #0
  416418:	mov	x0, x19
  41641c:	bl	454174 <_obstack_begin@@Base>
  416420:	mov	x4, x21
  416424:	mov	x3, x20
  416428:	mov	x2, #0x0                   	// #0
  41642c:	mov	x1, #0x0                   	// #0
  416430:	add	x0, x19, #0x58
  416434:	bl	454174 <_obstack_begin@@Base>
  416438:	ldp	x19, x20, [sp, #16]
  41643c:	ldr	x21, [sp, #32]
  416440:	ldp	x29, x30, [sp], #48
  416444:	ret
  416448:	stp	x29, x30, [sp, #-32]!
  41644c:	mov	x29, sp
  416450:	str	x19, [sp, #16]
  416454:	mov	x19, x0
  416458:	mov	x1, #0x0                   	// #0
  41645c:	add	x0, x0, #0x58
  416460:	bl	454320 <_obstack_free@@Base>
  416464:	mov	x1, #0x0                   	// #0
  416468:	mov	x0, x19
  41646c:	bl	454320 <_obstack_free@@Base>
  416470:	ldr	x19, [sp, #16]
  416474:	ldp	x29, x30, [sp], #32
  416478:	ret
  41647c:	stp	x29, x30, [sp, #-32]!
  416480:	mov	x29, sp
  416484:	str	x19, [sp, #16]
  416488:	mov	x19, x0
  41648c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  416490:	add	x0, x0, #0xda8
  416494:	str	x0, [x19]
  416498:	ldr	x0, [x19, #56]
  41649c:	cbz	x0, 4164ac <ferror@plt+0x1377c>
  4164a0:	ldr	x1, [x0]
  4164a4:	ldr	x1, [x1, #8]
  4164a8:	blr	x1
  4164ac:	ldr	x0, [x19, #8]
  4164b0:	bl	416448 <ferror@plt+0x13718>
  4164b4:	ldr	x0, [x19, #8]
  4164b8:	bl	402a90 <free@plt>
  4164bc:	ldr	x0, [x19, #16]
  4164c0:	bl	402a90 <free@plt>
  4164c4:	ldr	x19, [sp, #16]
  4164c8:	ldp	x29, x30, [sp], #32
  4164cc:	ret
  4164d0:	stp	x29, x30, [sp, #-32]!
  4164d4:	mov	x29, sp
  4164d8:	str	x19, [sp, #16]
  4164dc:	mov	x19, x0
  4164e0:	bl	41647c <ferror@plt+0x1374c>
  4164e4:	mov	x1, #0x48                  	// #72
  4164e8:	mov	x0, x19
  4164ec:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  4164f0:	ldr	x19, [sp, #16]
  4164f4:	ldp	x29, x30, [sp], #32
  4164f8:	ret
  4164fc:	stp	x29, x30, [sp, #-16]!
  416500:	mov	x29, sp
  416504:	str	w1, [x0, #40]
  416508:	bl	4162a8 <ferror@plt+0x13578>
  41650c:	ldp	x29, x30, [sp], #16
  416510:	ret
  416514:	stp	x29, x30, [sp, #-32]!
  416518:	mov	x29, sp
  41651c:	str	x19, [sp, #16]
  416520:	mov	x19, x0
  416524:	ldr	x0, [x0, #8]
  416528:	ldr	x0, [x0, #176]
  41652c:	ldr	x1, [x0, #16]
  416530:	ldr	x2, [x0, #8]
  416534:	cmp	x2, x1
  416538:	b.cs	416550 <ferror@plt+0x13820>  // b.hs, b.nlast
  41653c:	ldr	x2, [x0, #32]
  416540:	cmp	x2, x1
  416544:	b.ls	416550 <ferror@plt+0x13820>  // b.plast
  416548:	str	x1, [x0, #24]
  41654c:	b	416554 <ferror@plt+0x13824>
  416550:	bl	454320 <_obstack_free@@Base>
  416554:	ldr	x0, [x19, #8]
  416558:	str	wzr, [x0, #200]
  41655c:	ldr	x19, [sp, #16]
  416560:	ldp	x29, x30, [sp], #32
  416564:	ret
  416568:	stp	x29, x30, [sp, #-32]!
  41656c:	mov	x29, sp
  416570:	stp	x19, x20, [sp, #16]
  416574:	mov	x19, x0
  416578:	mov	x20, x1
  41657c:	ldr	x0, [x0, #16]
  416580:	bl	402a90 <free@plt>
  416584:	str	x20, [x19, #16]
  416588:	mov	x0, x19
  41658c:	bl	4162a8 <ferror@plt+0x13578>
  416590:	strb	wzr, [x19, #64]
  416594:	str	wzr, [x19, #32]
  416598:	ldp	x19, x20, [sp, #16]
  41659c:	ldp	x29, x30, [sp], #32
  4165a0:	ret
  4165a4:	mov	x1, x0
  4165a8:	ldr	x0, [x0, #16]
  4165ac:	str	xzr, [x1, #16]
  4165b0:	ret
  4165b4:	stp	x29, x30, [sp, #-32]!
  4165b8:	mov	x29, sp
  4165bc:	str	x19, [sp, #16]
  4165c0:	mov	x19, x0
  4165c4:	ldr	x0, [x0, #16]
  4165c8:	cbz	x0, 4165d4 <ferror@plt+0x138a4>
  4165cc:	bl	402a90 <free@plt>
  4165d0:	str	xzr, [x19, #16]
  4165d4:	ldr	x19, [sp, #16]
  4165d8:	ldp	x29, x30, [sp], #32
  4165dc:	ret
  4165e0:	stp	x29, x30, [sp, #-48]!
  4165e4:	mov	x29, sp
  4165e8:	stp	x19, x20, [sp, #16]
  4165ec:	str	x21, [sp, #32]
  4165f0:	mov	x19, x0
  4165f4:	mov	w20, w1
  4165f8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4165fc:	add	x0, x0, #0xda8
  416600:	str	x0, [x19]
  416604:	mov	x1, #0x150                 	// #336
  416608:	mov	x0, #0x1                   	// #1
  41660c:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  416610:	mov	x21, x0
  416614:	bl	416348 <ferror@plt+0x13618>
  416618:	str	x21, [x19, #8]
  41661c:	str	xzr, [x19, #16]
  416620:	str	wzr, [x19, #24]
  416624:	str	wzr, [x19, #28]
  416628:	str	wzr, [x19, #32]
  41662c:	str	wzr, [x19, #36]
  416630:	str	xzr, [x19, #48]
  416634:	str	xzr, [x19, #56]
  416638:	strb	wzr, [x19, #64]
  41663c:	strb	wzr, [x19, #65]
  416640:	mov	w0, #0x1                   	// #1
  416644:	strb	w0, [x19, #66]
  416648:	strb	wzr, [x19, #67]
  41664c:	str	w20, [x19, #40]
  416650:	mov	x1, #0x0                   	// #0
  416654:	mov	x0, x19
  416658:	bl	416568 <ferror@plt+0x13838>
  41665c:	ldp	x19, x20, [sp, #16]
  416660:	ldr	x21, [sp, #32]
  416664:	ldp	x29, x30, [sp], #48
  416668:	ret
  41666c:	stp	x29, x30, [sp, #-32]!
  416670:	mov	x29, sp
  416674:	stp	x19, x20, [sp, #16]
  416678:	ldr	x20, [x0, #8]
  41667c:	ldr	x19, [x20, #176]
  416680:	ldr	x1, [x19, #32]
  416684:	ldr	x0, [x19, #24]
  416688:	cmp	x1, x0
  41668c:	b.eq	4166b4 <ferror@plt+0x13984>  // b.none
  416690:	ldr	x0, [x19, #24]
  416694:	add	x1, x0, #0x1
  416698:	str	x1, [x19, #24]
  41669c:	strb	wzr, [x0]
  4166a0:	ldr	x0, [x20, #176]
  4166a4:	ldr	x0, [x0, #16]
  4166a8:	ldp	x19, x20, [sp, #16]
  4166ac:	ldp	x29, x30, [sp], #32
  4166b0:	ret
  4166b4:	mov	x1, #0x1                   	// #1
  4166b8:	mov	x0, x19
  4166bc:	bl	4541c8 <_obstack_newchunk@@Base>
  4166c0:	b	416690 <ferror@plt+0x13960>
  4166c4:	stp	x29, x30, [sp, #-32]!
  4166c8:	mov	x29, sp
  4166cc:	str	x19, [sp, #16]
  4166d0:	mov	x19, x0
  4166d4:	bl	41666c <ferror@plt+0x1393c>
  4166d8:	ldr	x1, [x19, #8]
  4166dc:	ldr	x1, [x1, #192]
  4166e0:	bl	402690 <fputs@plt>
  4166e4:	mov	x0, x19
  4166e8:	bl	416514 <ferror@plt+0x137e4>
  4166ec:	ldr	x19, [sp, #16]
  4166f0:	ldp	x29, x30, [sp], #32
  4166f4:	ret
  4166f8:	stp	x29, x30, [sp, #-32]!
  4166fc:	mov	x29, sp
  416700:	str	x19, [sp, #16]
  416704:	mov	x19, x0
  416708:	strb	wzr, [x0, #64]
  41670c:	str	wzr, [x0, #32]
  416710:	ldr	x0, [x0, #8]
  416714:	ldrb	w0, [x0, #332]
  416718:	cbnz	w0, 416728 <ferror@plt+0x139f8>
  41671c:	ldr	x19, [sp, #16]
  416720:	ldp	x29, x30, [sp], #32
  416724:	ret
  416728:	mov	x0, x19
  41672c:	bl	4166c4 <ferror@plt+0x13994>
  416730:	ldr	x0, [x19, #8]
  416734:	ldr	x0, [x0, #192]
  416738:	bl	402b10 <fflush@plt>
  41673c:	b	41671c <ferror@plt+0x139ec>
  416740:	stp	x29, x30, [sp, #-32]!
  416744:	mov	x29, sp
  416748:	str	x19, [sp, #16]
  41674c:	mov	x19, x0
  416750:	strb	wzr, [x0, #64]
  416754:	str	wzr, [x0, #32]
  416758:	bl	4166c4 <ferror@plt+0x13994>
  41675c:	ldr	x0, [x19, #8]
  416760:	ldr	x0, [x0, #192]
  416764:	bl	402b10 <fflush@plt>
  416768:	ldr	x19, [sp, #16]
  41676c:	ldp	x29, x30, [sp], #32
  416770:	ret
  416774:	stp	x29, x30, [sp, #-80]!
  416778:	mov	x29, sp
  41677c:	stp	x19, x20, [sp, #16]
  416780:	stp	x21, x22, [sp, #32]
  416784:	stp	x23, x24, [sp, #48]
  416788:	mov	x22, x0
  41678c:	and	w24, w1, #0xff
  416790:	bl	41666c <ferror@plt+0x1393c>
  416794:	mov	x19, x0
  416798:	ldr	x0, [x22, #8]
  41679c:	ldr	x20, [x0, #192]
  4167a0:	ldrb	w1, [x19]
  4167a4:	cbz	w1, 416874 <ferror@plt+0x13b44>
  4167a8:	stp	x25, x26, [sp, #64]
  4167ac:	mov	w21, #0x5c                  	// #92
  4167b0:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4167b4:	add	x23, x23, #0xc98
  4167b8:	mov	x26, #0x2                   	// #2
  4167bc:	mov	x25, #0x1                   	// #1
  4167c0:	b	416800 <ferror@plt+0x13ad0>
  4167c4:	cmp	w1, #0xa
  4167c8:	b.ne	41682c <ferror@plt+0x13afc>  // b.any
  4167cc:	mov	x3, x20
  4167d0:	mov	x2, x26
  4167d4:	mov	x1, x25
  4167d8:	mov	x0, x23
  4167dc:	bl	402ae0 <fwrite@plt>
  4167e0:	mov	x1, x20
  4167e4:	mov	w0, w21
  4167e8:	bl	402750 <fputc@plt>
  4167ec:	mov	x1, x20
  4167f0:	ldrb	w0, [x19]
  4167f4:	bl	402750 <fputc@plt>
  4167f8:	ldrb	w1, [x19, #1]!
  4167fc:	cbz	w1, 416870 <ferror@plt+0x13b40>
  416800:	cmp	w1, #0x22
  416804:	b.eq	4167e0 <ferror@plt+0x13ab0>  // b.none
  416808:	b.ls	4167c4 <ferror@plt+0x13a94>  // b.plast
  41680c:	cmp	w1, #0x5c
  416810:	b.eq	416850 <ferror@plt+0x13b20>  // b.none
  416814:	b.ls	41683c <ferror@plt+0x13b0c>  // b.plast
  416818:	sub	w1, w1, #0x7b
  41681c:	and	w1, w1, #0xff
  416820:	cmp	w1, #0x2
  416824:	b.hi	4167ec <ferror@plt+0x13abc>  // b.pmore
  416828:	b	416834 <ferror@plt+0x13b04>
  41682c:	cmp	w1, #0x20
  416830:	b.ne	4167ec <ferror@plt+0x13abc>  // b.any
  416834:	cbz	w24, 4167ec <ferror@plt+0x13abc>
  416838:	b	4167e0 <ferror@plt+0x13ab0>
  41683c:	and	w1, w1, #0xfffffffd
  416840:	and	w1, w1, #0xff
  416844:	cmp	w1, #0x3c
  416848:	b.ne	4167ec <ferror@plt+0x13abc>  // b.any
  41684c:	b	416834 <ferror@plt+0x13b04>
  416850:	ldrb	w0, [x19, #1]
  416854:	cbnz	w0, 4167e0 <ferror@plt+0x13ab0>
  416858:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41685c:	add	x2, x2, #0xca0
  416860:	mov	w1, #0x378                 	// #888
  416864:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  416868:	add	x0, x0, #0xc78
  41686c:	bl	4102b4 <ferror@plt+0xd584>
  416870:	ldp	x25, x26, [sp, #64]
  416874:	mov	x0, x22
  416878:	bl	416514 <ferror@plt+0x137e4>
  41687c:	ldp	x19, x20, [sp, #16]
  416880:	ldp	x21, x22, [sp, #32]
  416884:	ldp	x23, x24, [sp, #48]
  416888:	ldp	x29, x30, [sp], #80
  41688c:	ret
  416890:	ldr	x0, [x0, #8]
  416894:	ldr	x0, [x0, #176]
  416898:	ldr	x1, [x0, #24]
  41689c:	ldr	x2, [x0, #16]
  4168a0:	sub	x0, x1, #0x1
  4168a4:	cmp	x2, x1
  4168a8:	csel	x0, x0, xzr, ne  // ne = any
  4168ac:	ret
  4168b0:	ldr	x2, [x0, #8]
  4168b4:	ldr	w1, [x0, #28]
  4168b8:	ldr	w0, [x2, #200]
  4168bc:	sub	w0, w1, w0
  4168c0:	ret
  4168c4:	stp	x29, x30, [sp, #-32]!
  4168c8:	mov	x29, sp
  4168cc:	stp	x19, x20, [sp, #16]
  4168d0:	mov	x19, x0
  4168d4:	ldr	x0, [x0, #8]
  4168d8:	ldr	x20, [x0, #176]
  4168dc:	ldr	x1, [x20, #32]
  4168e0:	ldr	x0, [x20, #24]
  4168e4:	cmp	x1, x0
  4168e8:	b.eq	416918 <ferror@plt+0x13be8>  // b.none
  4168ec:	ldr	x0, [x20, #24]
  4168f0:	add	x1, x0, #0x1
  4168f4:	str	x1, [x20, #24]
  4168f8:	mov	w1, #0xa                   	// #10
  4168fc:	strb	w1, [x0]
  416900:	strb	wzr, [x19, #65]
  416904:	ldr	x0, [x19, #8]
  416908:	str	wzr, [x0, #200]
  41690c:	ldp	x19, x20, [sp, #16]
  416910:	ldp	x29, x30, [sp], #32
  416914:	ret
  416918:	mov	x1, #0x1                   	// #1
  41691c:	mov	x0, x20
  416920:	bl	4541c8 <_obstack_newchunk@@Base>
  416924:	b	4168ec <ferror@plt+0x13bbc>
  416928:	stp	x29, x30, [sp, #-48]!
  41692c:	mov	x29, sp
  416930:	stp	x19, x20, [sp, #16]
  416934:	str	x21, [sp, #32]
  416938:	mov	x19, x0
  41693c:	mov	w21, w1
  416940:	ldr	w0, [x0, #40]
  416944:	cmp	w0, #0x0
  416948:	b.le	416964 <ferror@plt+0x13c34>
  41694c:	ldr	x1, [x19, #8]
  416950:	ldr	w0, [x19, #28]
  416954:	ldr	w1, [x1, #200]
  416958:	sub	w0, w0, w1
  41695c:	cmp	w0, #0x0
  416960:	b.le	4169ac <ferror@plt+0x13c7c>
  416964:	ldr	x0, [x19, #8]
  416968:	ldr	x20, [x0, #176]
  41696c:	ldr	x1, [x20, #32]
  416970:	ldr	x0, [x20, #24]
  416974:	cmp	x1, x0
  416978:	b.eq	4169cc <ferror@plt+0x13c9c>  // b.none
  41697c:	ldr	x0, [x20, #24]
  416980:	add	x1, x0, #0x1
  416984:	str	x1, [x20, #24]
  416988:	strb	w21, [x0]
  41698c:	ldr	x1, [x19, #8]
  416990:	ldr	w0, [x1, #200]
  416994:	add	w0, w0, #0x1
  416998:	str	w0, [x1, #200]
  41699c:	ldp	x19, x20, [sp, #16]
  4169a0:	ldr	x21, [sp, #32]
  4169a4:	ldp	x29, x30, [sp], #48
  4169a8:	ret
  4169ac:	mov	x0, x19
  4169b0:	bl	4168c4 <ferror@plt+0x13b94>
  4169b4:	and	x1, x21, #0xff
  4169b8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4169bc:	add	x0, x0, #0x28
  4169c0:	ldrh	w0, [x0, x1, lsl #1]
  4169c4:	tbz	w0, #6, 416964 <ferror@plt+0x13c34>
  4169c8:	b	41699c <ferror@plt+0x13c6c>
  4169cc:	mov	x1, #0x1                   	// #1
  4169d0:	mov	x0, x20
  4169d4:	bl	4541c8 <_obstack_newchunk@@Base>
  4169d8:	b	41697c <ferror@plt+0x13c4c>
  4169dc:	stp	x29, x30, [sp, #-48]!
  4169e0:	mov	x29, sp
  4169e4:	stp	x21, x22, [sp, #32]
  4169e8:	ldr	w21, [x0, #32]
  4169ec:	cmp	w21, #0x0
  4169f0:	b.le	416a20 <ferror@plt+0x13cf0>
  4169f4:	stp	x19, x20, [sp, #16]
  4169f8:	mov	x20, x0
  4169fc:	mov	w19, #0x0                   	// #0
  416a00:	mov	w22, #0x20                  	// #32
  416a04:	mov	w1, w22
  416a08:	mov	x0, x20
  416a0c:	bl	416928 <ferror@plt+0x13bf8>
  416a10:	add	w19, w19, #0x1
  416a14:	cmp	w21, w19
  416a18:	b.ne	416a04 <ferror@plt+0x13cd4>  // b.any
  416a1c:	ldp	x19, x20, [sp, #16]
  416a20:	ldp	x21, x22, [sp, #32]
  416a24:	ldp	x29, x30, [sp], #48
  416a28:	ret
  416a2c:	stp	x29, x30, [sp, #-64]!
  416a30:	mov	x29, sp
  416a34:	stp	x19, x20, [sp, #16]
  416a38:	ldr	x20, [x0, #16]
  416a3c:	cbz	x20, 416b3c <ferror@plt+0x13e0c>
  416a40:	mov	x19, x0
  416a44:	ldr	w0, [x0, #36]
  416a48:	cbz	w0, 416ac4 <ferror@plt+0x13d94>
  416a4c:	cmp	w0, #0x2
  416a50:	b.ne	416b3c <ferror@plt+0x13e0c>  // b.any
  416a54:	stp	x21, x22, [sp, #32]
  416a58:	stp	x23, x24, [sp, #48]
  416a5c:	mov	x0, x20
  416a60:	bl	402680 <strlen@plt>
  416a64:	mov	x21, x0
  416a68:	ldr	x22, [x19, #8]
  416a6c:	ldr	x23, [x22, #176]
  416a70:	sxtw	x24, w0
  416a74:	ldr	x0, [x23, #32]
  416a78:	ldr	x1, [x23, #24]
  416a7c:	sub	x0, x0, x1
  416a80:	cmp	x0, w21, sxtw
  416a84:	b.cc	416af0 <ferror@plt+0x13dc0>  // b.lo, b.ul, b.last
  416a88:	mov	x2, x24
  416a8c:	mov	x1, x20
  416a90:	ldr	x0, [x23, #24]
  416a94:	bl	402620 <memcpy@plt>
  416a98:	ldr	x2, [x23, #24]
  416a9c:	add	x2, x2, x24
  416aa0:	str	x2, [x23, #24]
  416aa4:	cmp	w21, #0x0
  416aa8:	b.le	416b2c <ferror@plt+0x13dfc>
  416aac:	mov	x1, x20
  416ab0:	add	x20, x20, #0x1
  416ab4:	sub	w21, w21, #0x1
  416ab8:	add	x20, x20, x21
  416abc:	mov	w3, #0x0                   	// #0
  416ac0:	b	416b18 <ferror@plt+0x13de8>
  416ac4:	ldrb	w0, [x19, #64]
  416ac8:	cbnz	w0, 416ae4 <ferror@plt+0x13db4>
  416acc:	stp	x21, x22, [sp, #32]
  416ad0:	stp	x23, x24, [sp, #48]
  416ad4:	ldr	w0, [x19, #32]
  416ad8:	add	w0, w0, #0x3
  416adc:	str	w0, [x19, #32]
  416ae0:	b	416a5c <ferror@plt+0x13d2c>
  416ae4:	mov	x0, x19
  416ae8:	bl	4169dc <ferror@plt+0x13cac>
  416aec:	b	416b3c <ferror@plt+0x13e0c>
  416af0:	mov	x1, x24
  416af4:	mov	x0, x23
  416af8:	bl	4541c8 <_obstack_newchunk@@Base>
  416afc:	b	416a88 <ferror@plt+0x13d58>
  416b00:	ldr	w0, [x22, #200]
  416b04:	add	w0, w0, #0x1
  416b08:	str	w0, [x22, #200]
  416b0c:	add	x1, x1, #0x1
  416b10:	cmp	x1, x20
  416b14:	b.eq	416b2c <ferror@plt+0x13dfc>  // b.none
  416b18:	ldrb	w2, [x1]
  416b1c:	mov	w0, w3
  416b20:	cmp	w2, #0xa
  416b24:	b.ne	416b00 <ferror@plt+0x13dd0>  // b.any
  416b28:	b	416b08 <ferror@plt+0x13dd8>
  416b2c:	mov	w0, #0x1                   	// #1
  416b30:	strb	w0, [x19, #64]
  416b34:	ldp	x21, x22, [sp, #32]
  416b38:	ldp	x23, x24, [sp, #48]
  416b3c:	ldp	x19, x20, [sp, #16]
  416b40:	ldp	x29, x30, [sp], #64
  416b44:	ret
  416b48:	stp	x29, x30, [sp, #-64]!
  416b4c:	mov	x29, sp
  416b50:	stp	x19, x20, [sp, #16]
  416b54:	stp	x21, x22, [sp, #32]
  416b58:	stp	x23, x24, [sp, #48]
  416b5c:	mov	x21, x0
  416b60:	mov	x19, x1
  416b64:	mov	x20, x2
  416b68:	ldr	x0, [x0, #8]
  416b6c:	ldr	w0, [x0, #200]
  416b70:	cbz	w0, 416bd8 <ferror@plt+0x13ea8>
  416b74:	sub	x20, x20, x19
  416b78:	mov	w22, w20
  416b7c:	ldr	x23, [x21, #8]
  416b80:	ldr	x21, [x23, #176]
  416b84:	sxtw	x24, w20
  416b88:	ldr	x0, [x21, #32]
  416b8c:	ldr	x1, [x21, #24]
  416b90:	sub	x0, x0, x1
  416b94:	cmp	x0, w20, sxtw
  416b98:	b.cc	416c24 <ferror@plt+0x13ef4>  // b.lo, b.ul, b.last
  416b9c:	mov	x2, x24
  416ba0:	mov	x1, x19
  416ba4:	ldr	x0, [x21, #24]
  416ba8:	bl	402620 <memcpy@plt>
  416bac:	ldr	x20, [x21, #24]
  416bb0:	add	x20, x20, x24
  416bb4:	str	x20, [x21, #24]
  416bb8:	cmp	w22, #0x0
  416bbc:	b.le	416c68 <ferror@plt+0x13f38>
  416bc0:	mov	x2, x19
  416bc4:	add	x19, x19, #0x1
  416bc8:	sub	w22, w22, #0x1
  416bcc:	add	x19, x19, x22
  416bd0:	mov	w3, #0x0                   	// #0
  416bd4:	b	416c4c <ferror@plt+0x13f1c>
  416bd8:	mov	x0, x21
  416bdc:	bl	416a2c <ferror@plt+0x13cfc>
  416be0:	ldr	w0, [x21, #40]
  416be4:	cmp	w0, #0x0
  416be8:	b.le	416b74 <ferror@plt+0x13e44>
  416bec:	cmp	x19, x20
  416bf0:	b.eq	416c60 <ferror@plt+0x13f30>  // b.none
  416bf4:	ldrb	w0, [x19]
  416bf8:	cmp	w0, #0x20
  416bfc:	b.ne	416b74 <ferror@plt+0x13e44>  // b.any
  416c00:	add	x19, x19, #0x1
  416c04:	cmp	x20, x19
  416c08:	b.ne	416bf4 <ferror@plt+0x13ec4>  // b.any
  416c0c:	sub	x20, x20, x19
  416c10:	mov	w22, w20
  416c14:	ldr	x23, [x21, #8]
  416c18:	ldr	x21, [x23, #176]
  416c1c:	sxtw	x24, w20
  416c20:	b	416b9c <ferror@plt+0x13e6c>
  416c24:	mov	x1, x24
  416c28:	mov	x0, x21
  416c2c:	bl	4541c8 <_obstack_newchunk@@Base>
  416c30:	b	416b9c <ferror@plt+0x13e6c>
  416c34:	ldr	w0, [x23, #200]
  416c38:	add	w0, w0, #0x1
  416c3c:	str	w0, [x23, #200]
  416c40:	add	x2, x2, #0x1
  416c44:	cmp	x2, x19
  416c48:	b.eq	416c68 <ferror@plt+0x13f38>  // b.none
  416c4c:	ldrb	w1, [x2]
  416c50:	mov	w0, w3
  416c54:	cmp	w1, #0xa
  416c58:	b.ne	416c34 <ferror@plt+0x13f04>  // b.any
  416c5c:	b	416c3c <ferror@plt+0x13f0c>
  416c60:	mov	x19, x20
  416c64:	b	416c0c <ferror@plt+0x13edc>
  416c68:	ldp	x19, x20, [sp, #16]
  416c6c:	ldp	x21, x22, [sp, #32]
  416c70:	ldp	x23, x24, [sp, #48]
  416c74:	ldp	x29, x30, [sp], #64
  416c78:	ret
  416c7c:	stp	x29, x30, [sp, #-80]!
  416c80:	mov	x29, sp
  416c84:	stp	x23, x24, [sp, #48]
  416c88:	ldr	w24, [x0, #40]
  416c8c:	cmp	x1, x2
  416c90:	b.eq	416dd4 <ferror@plt+0x140a4>  // b.none
  416c94:	stp	x19, x20, [sp, #16]
  416c98:	stp	x21, x22, [sp, #32]
  416c9c:	str	x25, [sp, #64]
  416ca0:	mov	x23, x0
  416ca4:	mov	x22, x1
  416ca8:	mov	x20, x2
  416cac:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  416cb0:	add	x21, x21, #0x28
  416cb4:	mov	w25, #0x20                  	// #32
  416cb8:	b	416d14 <ferror@plt+0x13fe4>
  416cbc:	cmp	w24, #0x0
  416cc0:	b.le	416ce0 <ferror@plt+0x13fb0>
  416cc4:	sub	x0, x19, x22
  416cc8:	ldr	x2, [x23, #8]
  416ccc:	ldr	w1, [x23, #28]
  416cd0:	ldr	w2, [x2, #200]
  416cd4:	sub	w1, w1, w2
  416cd8:	cmp	x0, w1, sxtw
  416cdc:	b.ge	416d68 <ferror@plt+0x14038>  // b.tcont
  416ce0:	mov	x2, x19
  416ce4:	mov	x1, x22
  416ce8:	mov	x0, x23
  416cec:	bl	416b48 <ferror@plt+0x13e18>
  416cf0:	cmp	x20, x19
  416cf4:	b.eq	416dc8 <ferror@plt+0x14098>  // b.none
  416cf8:	ldrb	w0, [x19]
  416cfc:	ldrh	w0, [x21, x0, lsl #1]
  416d00:	tbnz	w0, #0, 416d74 <ferror@plt+0x14044>
  416d04:	ldrb	w0, [x19]
  416d08:	cmp	w0, #0xa
  416d0c:	b.eq	416d9c <ferror@plt+0x1406c>  // b.none
  416d10:	mov	x22, x19
  416d14:	cmp	x20, x22
  416d18:	b.eq	416dc0 <ferror@plt+0x14090>  // b.none
  416d1c:	mov	x19, x22
  416d20:	ldrb	w3, [x19]
  416d24:	ldrh	w4, [x21, w3, sxtw #1]
  416d28:	tst	x4, #0x1
  416d2c:	ccmp	w3, #0xa, #0x4, eq  // eq = none
  416d30:	b.eq	416cbc <ferror@plt+0x13f8c>  // b.none
  416d34:	add	x19, x19, #0x1
  416d38:	cmp	x20, x19
  416d3c:	b.ne	416d20 <ferror@plt+0x13ff0>  // b.any
  416d40:	cmp	w24, #0x0
  416d44:	b.gt	416cc4 <ferror@plt+0x13f94>
  416d48:	mov	x2, x19
  416d4c:	mov	x1, x22
  416d50:	mov	x0, x23
  416d54:	bl	416b48 <ferror@plt+0x13e18>
  416d58:	ldp	x19, x20, [sp, #16]
  416d5c:	ldp	x21, x22, [sp, #32]
  416d60:	ldr	x25, [sp, #64]
  416d64:	b	416dd4 <ferror@plt+0x140a4>
  416d68:	mov	x0, x23
  416d6c:	bl	4168c4 <ferror@plt+0x13b94>
  416d70:	b	416ce0 <ferror@plt+0x13fb0>
  416d74:	mov	w1, w25
  416d78:	mov	x0, x23
  416d7c:	bl	416928 <ferror@plt+0x13bf8>
  416d80:	add	x19, x19, #0x1
  416d84:	cmp	x20, x19
  416d88:	b.ne	416d04 <ferror@plt+0x13fd4>  // b.any
  416d8c:	ldp	x19, x20, [sp, #16]
  416d90:	ldp	x21, x22, [sp, #32]
  416d94:	ldr	x25, [sp, #64]
  416d98:	b	416dd4 <ferror@plt+0x140a4>
  416d9c:	mov	x0, x23
  416da0:	bl	4168c4 <ferror@plt+0x13b94>
  416da4:	add	x19, x19, #0x1
  416da8:	cmp	x20, x19
  416dac:	b.ne	416d10 <ferror@plt+0x13fe0>  // b.any
  416db0:	ldp	x19, x20, [sp, #16]
  416db4:	ldp	x21, x22, [sp, #32]
  416db8:	ldr	x25, [sp, #64]
  416dbc:	b	416dd4 <ferror@plt+0x140a4>
  416dc0:	mov	x19, x22
  416dc4:	b	416d40 <ferror@plt+0x14010>
  416dc8:	ldp	x19, x20, [sp, #16]
  416dcc:	ldp	x21, x22, [sp, #32]
  416dd0:	ldr	x25, [sp, #64]
  416dd4:	ldp	x23, x24, [sp, #48]
  416dd8:	ldp	x29, x30, [sp], #80
  416ddc:	ret
  416de0:	stp	x29, x30, [sp, #-96]!
  416de4:	mov	x29, sp
  416de8:	stp	x19, x20, [sp, #16]
  416dec:	stp	x21, x22, [sp, #32]
  416df0:	mov	x20, x0
  416df4:	mov	x21, x1
  416df8:	cmn	x2, #0x1
  416dfc:	b.eq	416e2c <ferror@plt+0x140fc>  // b.none
  416e00:	cbz	x2, 416f04 <ferror@plt+0x141d4>
  416e04:	stp	x23, x24, [sp, #48]
  416e08:	str	x25, [sp, #64]
  416e0c:	add	x22, x21, x2
  416e10:	mov	x19, x21
  416e14:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  416e18:	add	x23, x23, #0x28
  416e1c:	adrp	x24, 470000 <_obstack_memory_used@@Base+0x1bc60>
  416e20:	add	x24, x24, #0xcc8
  416e24:	add	x25, sp, #0x54
  416e28:	b	416e8c <ferror@plt+0x1415c>
  416e2c:	mov	x0, x1
  416e30:	bl	402680 <strlen@plt>
  416e34:	mov	x2, x0
  416e38:	b	416e00 <ferror@plt+0x140d0>
  416e3c:	sub	x2, x19, #0x1
  416e40:	ldr	w0, [x20, #40]
  416e44:	cmp	w0, #0x0
  416e48:	b.le	416e5c <ferror@plt+0x1412c>
  416e4c:	mov	x1, x21
  416e50:	mov	x0, x20
  416e54:	bl	416c7c <ferror@plt+0x13f4c>
  416e58:	b	416ea0 <ferror@plt+0x14170>
  416e5c:	mov	x1, x21
  416e60:	mov	x0, x20
  416e64:	bl	416b48 <ferror@plt+0x13e18>
  416e68:	b	416ea0 <ferror@plt+0x14170>
  416e6c:	mov	x2, x25
  416e70:	add	x1, sp, #0x50
  416e74:	mov	x0, x20
  416e78:	bl	416b48 <ferror@plt+0x13e18>
  416e7c:	add	x21, x19, #0x1
  416e80:	add	x19, x19, #0x1
  416e84:	cmp	x22, x19
  416e88:	b.eq	416ed0 <ferror@plt+0x141a0>  // b.none
  416e8c:	ldrb	w0, [x19]
  416e90:	ldrh	w0, [x23, x0, lsl #1]
  416e94:	tbnz	w0, #4, 416e80 <ferror@plt+0x14150>
  416e98:	cmp	x21, x19
  416e9c:	b.cc	416e3c <ferror@plt+0x1410c>  // b.lo, b.ul, b.last
  416ea0:	ldrb	w2, [x19]
  416ea4:	mov	x1, x24
  416ea8:	add	x0, sp, #0x50
  416eac:	bl	402720 <sprintf@plt>
  416eb0:	ldr	w0, [x20, #40]
  416eb4:	cmp	w0, #0x0
  416eb8:	b.le	416e6c <ferror@plt+0x1413c>
  416ebc:	mov	x2, x25
  416ec0:	add	x1, sp, #0x50
  416ec4:	mov	x0, x20
  416ec8:	bl	416c7c <ferror@plt+0x13f4c>
  416ecc:	b	416e7c <ferror@plt+0x1414c>
  416ed0:	ldp	x23, x24, [sp, #48]
  416ed4:	ldr	x25, [sp, #64]
  416ed8:	ldr	w0, [x20, #40]
  416edc:	cmp	w0, #0x0
  416ee0:	b.le	416f0c <ferror@plt+0x141dc>
  416ee4:	mov	x2, x22
  416ee8:	mov	x1, x21
  416eec:	mov	x0, x20
  416ef0:	bl	416c7c <ferror@plt+0x13f4c>
  416ef4:	ldp	x19, x20, [sp, #16]
  416ef8:	ldp	x21, x22, [sp, #32]
  416efc:	ldp	x29, x30, [sp], #96
  416f00:	ret
  416f04:	mov	x22, x21
  416f08:	b	416ed8 <ferror@plt+0x141a8>
  416f0c:	mov	x2, x22
  416f10:	mov	x1, x21
  416f14:	mov	x0, x20
  416f18:	bl	416b48 <ferror@plt+0x13e18>
  416f1c:	b	416ef4 <ferror@plt+0x141c4>
  416f20:	stp	x29, x30, [sp, #-32]!
  416f24:	mov	x29, sp
  416f28:	stp	x19, x20, [sp, #16]
  416f2c:	mov	x20, x0
  416f30:	mov	x19, x1
  416f34:	mov	x0, x1
  416f38:	bl	402680 <strlen@plt>
  416f3c:	add	x2, x19, x0
  416f40:	ldr	w0, [x20, #40]
  416f44:	cmp	w0, #0x0
  416f48:	b.le	416f64 <ferror@plt+0x14234>
  416f4c:	mov	x1, x19
  416f50:	mov	x0, x20
  416f54:	bl	416c7c <ferror@plt+0x13f4c>
  416f58:	ldp	x19, x20, [sp, #16]
  416f5c:	ldp	x29, x30, [sp], #32
  416f60:	ret
  416f64:	mov	x1, x19
  416f68:	mov	x0, x20
  416f6c:	bl	416b48 <ferror@plt+0x13e18>
  416f70:	b	416f58 <ferror@plt+0x14228>
  416f74:	stp	x29, x30, [sp, #-64]!
  416f78:	mov	x29, sp
  416f7c:	stp	x19, x20, [sp, #16]
  416f80:	stp	x21, x22, [sp, #32]
  416f84:	str	x23, [sp, #48]
  416f88:	mov	x20, x0
  416f8c:	ldr	x21, [x0, #8]
  416f90:	ldr	x23, [x21, #184]
  416f94:	ldr	x0, [x21, #176]
  416f98:	cmp	x0, x21
  416f9c:	b.ne	416ff8 <ferror@plt+0x142c8>  // b.any
  416fa0:	add	x22, x23, #0x8
  416fa4:	ldr	w0, [x21, #200]
  416fa8:	cbnz	w0, 417010 <ferror@plt+0x142e0>
  416fac:	ldr	x1, [x23, #8]
  416fb0:	cbz	x1, 416fcc <ferror@plt+0x1429c>
  416fb4:	mov	w19, #0x0                   	// #0
  416fb8:	mov	x0, x20
  416fbc:	bl	416f20 <ferror@plt+0x141f0>
  416fc0:	add	w19, w19, #0x1
  416fc4:	ldr	x1, [x22, w19, uxtw #3]
  416fc8:	cbnz	x1, 416fb8 <ferror@plt+0x14288>
  416fcc:	ldr	x0, [x23]
  416fd0:	str	x0, [x21, #184]
  416fd4:	ldr	x0, [x21, #96]
  416fd8:	cmp	x0, x23
  416fdc:	b.cs	417028 <ferror@plt+0x142f8>  // b.hs, b.nlast
  416fe0:	ldr	x0, [x21, #120]
  416fe4:	cmp	x0, x23
  416fe8:	b.ls	417028 <ferror@plt+0x142f8>  // b.plast
  416fec:	str	x23, [x21, #104]
  416ff0:	str	x23, [x21, #112]
  416ff4:	b	417034 <ferror@plt+0x14304>
  416ff8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  416ffc:	add	x2, x2, #0xcd0
  417000:	mov	w1, #0x595                 	// #1429
  417004:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417008:	add	x0, x0, #0xc78
  41700c:	bl	4102b4 <ferror@plt+0xd584>
  417010:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417014:	add	x2, x2, #0xcd0
  417018:	mov	w1, #0x596                 	// #1430
  41701c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417020:	add	x0, x0, #0xc78
  417024:	bl	4102b4 <ferror@plt+0xd584>
  417028:	mov	x1, x23
  41702c:	add	x0, x21, #0x58
  417030:	bl	454320 <_obstack_free@@Base>
  417034:	ldp	x19, x20, [sp, #16]
  417038:	ldp	x21, x22, [sp, #32]
  41703c:	ldr	x23, [sp, #48]
  417040:	ldp	x29, x30, [sp], #64
  417044:	ret
  417048:	stp	x29, x30, [sp, #-32]!
  41704c:	mov	x29, sp
  417050:	str	x19, [sp, #16]
  417054:	mov	x19, x0
  417058:	ldr	w0, [x0, #24]
  41705c:	cbnz	w0, 41706c <ferror@plt+0x1433c>
  417060:	ldr	x19, [sp, #16]
  417064:	ldp	x29, x30, [sp], #32
  417068:	ret
  41706c:	mov	w1, #0x20                  	// #32
  417070:	mov	x0, x19
  417074:	bl	416928 <ferror@plt+0x13bf8>
  417078:	str	wzr, [x19, #24]
  41707c:	b	417060 <ferror@plt+0x14330>
  417080:	stp	x29, x30, [sp, #-32]!
  417084:	mov	x29, sp
  417088:	str	x19, [sp, #16]
  41708c:	mov	x19, x0
  417090:	bl	4168c4 <ferror@plt+0x13b94>
  417094:	mov	x0, x19
  417098:	bl	4166f8 <ferror@plt+0x139c8>
  41709c:	strb	wzr, [x19, #65]
  4170a0:	ldr	x19, [sp, #16]
  4170a4:	ldp	x29, x30, [sp], #32
  4170a8:	ret
  4170ac:	stp	x29, x30, [sp, #-32]!
  4170b0:	mov	x29, sp
  4170b4:	str	x19, [sp, #16]
  4170b8:	mov	x19, x0
  4170bc:	ldr	w2, [x0, #32]
  4170c0:	add	w2, w2, w1
  4170c4:	str	w2, [x0, #32]
  4170c8:	bl	4168c4 <ferror@plt+0x13b94>
  4170cc:	mov	x0, x19
  4170d0:	bl	4169dc <ferror@plt+0x13cac>
  4170d4:	strb	wzr, [x19, #65]
  4170d8:	ldr	x19, [sp, #16]
  4170dc:	ldp	x29, x30, [sp], #32
  4170e0:	ret
  4170e4:	stp	x29, x30, [sp, #-32]!
  4170e8:	mov	x29, sp
  4170ec:	str	x19, [sp, #16]
  4170f0:	mov	x19, x0
  4170f4:	and	w1, w1, #0xff
  4170f8:	bl	416928 <ferror@plt+0x13bf8>
  4170fc:	mov	w1, #0x20                  	// #32
  417100:	mov	x0, x19
  417104:	bl	416928 <ferror@plt+0x13bf8>
  417108:	ldr	x19, [sp, #16]
  41710c:	ldp	x29, x30, [sp], #32
  417110:	ret
  417114:	stp	x29, x30, [sp, #-32]!
  417118:	mov	x29, sp
  41711c:	stp	x19, x20, [sp, #16]
  417120:	mov	x19, x0
  417124:	and	w20, w1, #0xff
  417128:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41712c:	ldr	x1, [x1, #1328]
  417130:	bl	416f20 <ferror@plt+0x141f0>
  417134:	mov	x2, #0x5                   	// #5
  417138:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41713c:	add	x1, x1, #0x948
  417140:	mov	w0, w20
  417144:	bl	411460 <ferror@plt+0xe730>
  417148:	mov	x1, x0
  41714c:	mov	x0, x19
  417150:	bl	416f20 <ferror@plt+0x141f0>
  417154:	ldp	x19, x20, [sp, #16]
  417158:	ldp	x29, x30, [sp], #32
  41715c:	ret
  417160:	stp	x29, x30, [sp, #-32]!
  417164:	mov	x29, sp
  417168:	str	x19, [sp, #16]
  41716c:	mov	x19, x0
  417170:	mov	w0, w1
  417174:	bl	4114f4 <ferror@plt+0xe7c4>
  417178:	mov	x1, x0
  41717c:	mov	x0, x19
  417180:	bl	416f20 <ferror@plt+0x141f0>
  417184:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  417188:	ldr	x1, [x0, #1336]
  41718c:	mov	x0, x19
  417190:	bl	416f20 <ferror@plt+0x141f0>
  417194:	ldr	x19, [sp, #16]
  417198:	ldp	x29, x30, [sp], #32
  41719c:	ret
  4171a0:	sub	sp, sp, #0x1b0
  4171a4:	stp	x29, x30, [sp, #16]
  4171a8:	add	x29, sp, #0x10
  4171ac:	stp	x19, x20, [sp, #32]
  4171b0:	stp	x21, x22, [sp, #48]
  4171b4:	stp	x23, x24, [sp, #64]
  4171b8:	stp	x25, x26, [sp, #80]
  4171bc:	stp	x27, x28, [sp, #96]
  4171c0:	mov	x21, x0
  4171c4:	str	x1, [sp, #120]
  4171c8:	ldr	x19, [x0, #8]
  4171cc:	add	x25, x19, #0x58
  4171d0:	ldr	x0, [x25, #32]
  4171d4:	ldr	x1, [x25, #24]
  4171d8:	sub	x0, x0, x1
  4171dc:	cmp	x0, #0x1e7
  4171e0:	b.ls	417288 <ferror@plt+0x14558>  // b.plast
  4171e4:	add	x0, x19, #0x58
  4171e8:	ldr	x1, [x19, #112]
  4171ec:	add	x1, x1, #0x1e8
  4171f0:	ldr	x28, [x19, #104]
  4171f4:	cmp	x1, x28
  4171f8:	b.eq	417298 <ferror@plt+0x14568>  // b.none
  4171fc:	ldr	x0, [x19, #136]
  417200:	add	x1, x1, x0
  417204:	bic	x0, x1, x0
  417208:	str	x0, [x19, #112]
  41720c:	ldr	x1, [x19, #96]
  417210:	ldr	x2, [x19, #120]
  417214:	sub	x0, x0, x1
  417218:	sub	x1, x2, x1
  41721c:	cmp	x0, x1
  417220:	b.ls	417228 <ferror@plt+0x144f8>  // b.plast
  417224:	str	x2, [x19, #112]
  417228:	ldr	x1, [x19, #112]
  41722c:	str	x1, [x19, #104]
  417230:	ldr	x0, [x19, #184]
  417234:	str	x0, [x28]
  417238:	str	x28, [x19, #184]
  41723c:	add	x28, x28, #0x8
  417240:	mov	x2, #0xf0                  	// #240
  417244:	mov	w1, #0x0                   	// #0
  417248:	add	x0, sp, #0xc0
  41724c:	bl	402890 <memset@plt>
  417250:	ldr	x0, [sp, #120]
  417254:	ldr	x20, [x0]
  417258:	ldrb	w0, [x20]
  41725c:	cbz	w0, 418c48 <ferror@plt+0x15f18>
  417260:	str	wzr, [sp, #160]
  417264:	str	wzr, [sp, #164]
  417268:	mov	w26, #0x0                   	// #0
  41726c:	mov	w27, #0x0                   	// #0
  417270:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  417274:	add	x0, x0, #0x28
  417278:	str	x0, [sp, #136]
  41727c:	adrp	x24, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417280:	add	x24, x24, #0xd00
  417284:	b	417528 <ferror@plt+0x147f8>
  417288:	mov	x1, #0x1e8                 	// #488
  41728c:	mov	x0, x25
  417290:	bl	4541c8 <_obstack_newchunk@@Base>
  417294:	b	4171e4 <ferror@plt+0x144b4>
  417298:	mov	x2, x0
  41729c:	ldrb	w0, [x0, #80]
  4172a0:	orr	w0, w0, #0x2
  4172a4:	strb	w0, [x2, #80]
  4172a8:	b	4171fc <ferror@plt+0x144cc>
  4172ac:	ldr	x0, [x19, #112]
  4172b0:	add	x2, x0, #0x1
  4172b4:	str	x2, [x19, #112]
  4172b8:	ldrb	w1, [x20]
  4172bc:	strb	w1, [x0]
  4172c0:	ldrb	w0, [x20, #1]!
  4172c4:	cmp	w0, #0x25
  4172c8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4172cc:	b.eq	4172f0 <ferror@plt+0x145c0>  // b.none
  4172d0:	ldr	x1, [x19, #120]
  4172d4:	ldr	x0, [x19, #112]
  4172d8:	cmp	x1, x0
  4172dc:	b.ne	4172ac <ferror@plt+0x1457c>  // b.any
  4172e0:	mov	x1, x22
  4172e4:	mov	x0, x25
  4172e8:	bl	4541c8 <_obstack_newchunk@@Base>
  4172ec:	b	4172ac <ferror@plt+0x1457c>
  4172f0:	cbz	w0, 417adc <ferror@plt+0x14dac>
  4172f4:	ldrb	w0, [x20, #1]
  4172f8:	cmp	w0, #0x3e
  4172fc:	b.eq	417494 <ferror@plt+0x14764>  // b.none
  417300:	b.hi	4173ec <ferror@plt+0x146bc>  // b.pmore
  417304:	cmp	w0, #0x27
  417308:	b.eq	4174d8 <ferror@plt+0x147a8>  // b.none
  41730c:	b.ls	4173b4 <ferror@plt+0x14684>  // b.plast
  417310:	cmp	w0, #0x3c
  417314:	b.ne	4175cc <ferror@plt+0x1489c>  // b.any
  417318:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41731c:	ldr	x0, [x0, #1328]
  417320:	bl	402680 <strlen@plt>
  417324:	mov	x23, x0
  417328:	ldr	x0, [x19, #120]
  41732c:	ldr	x1, [x19, #112]
  417330:	sub	x0, x0, x1
  417334:	cmp	x23, x0
  417338:	b.hi	417474 <ferror@plt+0x14744>  // b.pmore
  41733c:	mov	x2, x23
  417340:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  417344:	ldr	x1, [x0, #1328]
  417348:	ldr	x0, [x19, #112]
  41734c:	bl	402620 <memcpy@plt>
  417350:	ldr	x0, [x19, #112]
  417354:	add	x23, x0, x23
  417358:	str	x23, [x19, #112]
  41735c:	mov	x2, #0x5                   	// #5
  417360:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417364:	add	x1, x1, #0x948
  417368:	ldrb	w0, [x21, #67]
  41736c:	bl	411460 <ferror@plt+0xe730>
  417370:	str	x0, [sp, #128]
  417374:	bl	402680 <strlen@plt>
  417378:	mov	x23, x0
  41737c:	ldr	x0, [x19, #120]
  417380:	ldr	x1, [x19, #112]
  417384:	sub	x0, x0, x1
  417388:	cmp	x23, x0
  41738c:	b.hi	417484 <ferror@plt+0x14754>  // b.pmore
  417390:	mov	x2, x23
  417394:	ldr	x1, [sp, #128]
  417398:	ldr	x0, [x19, #112]
  41739c:	bl	402620 <memcpy@plt>
  4173a0:	ldr	x0, [x19, #112]
  4173a4:	add	x23, x0, x23
  4173a8:	str	x23, [x19, #112]
  4173ac:	add	x20, x20, #0x2
  4173b0:	b	417520 <ferror@plt+0x147f0>
  4173b4:	cbz	w0, 41744c <ferror@plt+0x1471c>
  4173b8:	cmp	w0, #0x25
  4173bc:	b.ne	4175cc <ferror@plt+0x1489c>  // b.any
  4173c0:	ldr	x1, [x19, #120]
  4173c4:	ldr	x0, [x19, #112]
  4173c8:	cmp	x1, x0
  4173cc:	b.eq	417464 <ferror@plt+0x14734>  // b.none
  4173d0:	ldr	x0, [x19, #112]
  4173d4:	add	x2, x0, #0x1
  4173d8:	str	x2, [x19, #112]
  4173dc:	mov	w1, #0x25                  	// #37
  4173e0:	strb	w1, [x0]
  4173e4:	add	x20, x20, #0x2
  4173e8:	b	417520 <ferror@plt+0x147f0>
  4173ec:	cmp	w0, #0x52
  4173f0:	b.eq	417560 <ferror@plt+0x14830>  // b.none
  4173f4:	cmp	w0, #0x6d
  4173f8:	b.ne	4175cc <ferror@plt+0x1489c>  // b.any
  4173fc:	ldr	x0, [sp, #120]
  417400:	ldr	w0, [x0, #16]
  417404:	bl	454e98 <_obstack_memory_used@@Base+0xaf8>
  417408:	str	x0, [sp, #128]
  41740c:	bl	402680 <strlen@plt>
  417410:	mov	x23, x0
  417414:	ldr	x0, [x19, #120]
  417418:	ldr	x1, [x19, #112]
  41741c:	sub	x0, x0, x1
  417420:	cmp	x23, x0
  417424:	b.hi	4175bc <ferror@plt+0x1488c>  // b.pmore
  417428:	mov	x2, x23
  41742c:	ldr	x1, [sp, #128]
  417430:	ldr	x0, [x19, #112]
  417434:	bl	402620 <memcpy@plt>
  417438:	ldr	x0, [x19, #112]
  41743c:	add	x23, x0, x23
  417440:	str	x23, [x19, #112]
  417444:	add	x20, x20, #0x2
  417448:	b	417520 <ferror@plt+0x147f0>
  41744c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417450:	add	x2, x2, #0xcf0
  417454:	mov	w1, #0x41e                 	// #1054
  417458:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41745c:	add	x0, x0, #0xc78
  417460:	bl	4102b4 <ferror@plt+0xd584>
  417464:	mov	x1, #0x1                   	// #1
  417468:	mov	x0, x25
  41746c:	bl	4541c8 <_obstack_newchunk@@Base>
  417470:	b	4173d0 <ferror@plt+0x146a0>
  417474:	mov	x1, x23
  417478:	mov	x0, x25
  41747c:	bl	4541c8 <_obstack_newchunk@@Base>
  417480:	b	41733c <ferror@plt+0x1460c>
  417484:	mov	x1, x23
  417488:	mov	x0, x25
  41748c:	bl	4541c8 <_obstack_newchunk@@Base>
  417490:	b	417390 <ferror@plt+0x14660>
  417494:	ldrb	w0, [x21, #67]
  417498:	bl	4114f4 <ferror@plt+0xe7c4>
  41749c:	str	x0, [sp, #128]
  4174a0:	bl	402680 <strlen@plt>
  4174a4:	mov	x23, x0
  4174a8:	ldr	x0, [x19, #120]
  4174ac:	ldr	x1, [x19, #112]
  4174b0:	sub	x0, x0, x1
  4174b4:	cmp	x23, x0
  4174b8:	b.hi	417540 <ferror@plt+0x14810>  // b.pmore
  4174bc:	mov	x2, x23
  4174c0:	ldr	x1, [sp, #128]
  4174c4:	ldr	x0, [x19, #112]
  4174c8:	bl	402620 <memcpy@plt>
  4174cc:	ldr	x0, [x19, #112]
  4174d0:	add	x23, x0, x23
  4174d4:	str	x23, [x19, #112]
  4174d8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4174dc:	ldr	x0, [x0, #1336]
  4174e0:	bl	402680 <strlen@plt>
  4174e4:	mov	x22, x0
  4174e8:	ldr	x0, [x19, #120]
  4174ec:	ldr	x1, [x19, #112]
  4174f0:	sub	x0, x0, x1
  4174f4:	cmp	x22, x0
  4174f8:	b.hi	417550 <ferror@plt+0x14820>  // b.pmore
  4174fc:	mov	x2, x22
  417500:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  417504:	ldr	x1, [x0, #1336]
  417508:	ldr	x0, [x19, #112]
  41750c:	bl	402620 <memcpy@plt>
  417510:	ldr	x0, [x19, #112]
  417514:	add	x22, x0, x22
  417518:	str	x22, [x19, #112]
  41751c:	add	x20, x20, #0x2
  417520:	ldrb	w0, [x20]
  417524:	cbz	w0, 417adc <ferror@plt+0x14dac>
  417528:	ldrb	w0, [x20]
  41752c:	cmp	w0, #0x25
  417530:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  417534:	b.eq	4172f0 <ferror@plt+0x145c0>  // b.none
  417538:	mov	x22, #0x1                   	// #1
  41753c:	b	4172d0 <ferror@plt+0x145a0>
  417540:	mov	x1, x23
  417544:	mov	x0, x25
  417548:	bl	4541c8 <_obstack_newchunk@@Base>
  41754c:	b	4174bc <ferror@plt+0x1478c>
  417550:	mov	x1, x22
  417554:	mov	x0, x25
  417558:	bl	4541c8 <_obstack_newchunk@@Base>
  41755c:	b	4174fc <ferror@plt+0x147cc>
  417560:	ldrb	w0, [x21, #67]
  417564:	bl	4114f4 <ferror@plt+0xe7c4>
  417568:	str	x0, [sp, #128]
  41756c:	bl	402680 <strlen@plt>
  417570:	mov	x23, x0
  417574:	ldr	x0, [x19, #120]
  417578:	ldr	x1, [x19, #112]
  41757c:	sub	x0, x0, x1
  417580:	cmp	x23, x0
  417584:	b.hi	4175ac <ferror@plt+0x1487c>  // b.pmore
  417588:	mov	x2, x23
  41758c:	ldr	x1, [sp, #128]
  417590:	ldr	x0, [x19, #112]
  417594:	bl	402620 <memcpy@plt>
  417598:	ldr	x0, [x19, #112]
  41759c:	add	x23, x0, x23
  4175a0:	str	x23, [x19, #112]
  4175a4:	add	x20, x20, #0x2
  4175a8:	b	417520 <ferror@plt+0x147f0>
  4175ac:	mov	x1, x23
  4175b0:	mov	x0, x25
  4175b4:	bl	4541c8 <_obstack_newchunk@@Base>
  4175b8:	b	417588 <ferror@plt+0x14858>
  4175bc:	mov	x1, x23
  4175c0:	mov	x0, x25
  4175c4:	bl	4541c8 <_obstack_newchunk@@Base>
  4175c8:	b	417428 <ferror@plt+0x146f8>
  4175cc:	ldr	x1, [x19, #120]
  4175d0:	ldr	x0, [x19, #112]
  4175d4:	cmp	x1, x0
  4175d8:	b.eq	4176ac <ferror@plt+0x1497c>  // b.none
  4175dc:	ldr	x0, [x19, #112]
  4175e0:	add	x2, x0, #0x1
  4175e4:	str	x2, [x19, #112]
  4175e8:	strb	wzr, [x0]
  4175ec:	cmp	w26, #0x3b
  4175f0:	b.hi	4176bc <ferror@plt+0x1498c>  // b.pmore
  4175f4:	add	w0, w26, #0x1
  4175f8:	str	w0, [sp, #128]
  4175fc:	mov	w4, w26
  417600:	add	x0, x19, #0x58
  417604:	ldr	x3, [x19, #104]
  417608:	ldr	x1, [x19, #112]
  41760c:	cmp	x1, x3
  417610:	b.eq	4176d4 <ferror@plt+0x149a4>  // b.none
  417614:	ldr	x0, [x19, #136]
  417618:	add	x1, x1, x0
  41761c:	bic	x0, x1, x0
  417620:	str	x0, [x19, #112]
  417624:	ldr	x1, [x19, #96]
  417628:	ldr	x2, [x19, #120]
  41762c:	sub	x0, x0, x1
  417630:	sub	x1, x2, x1
  417634:	cmp	x0, x1
  417638:	b.ls	417640 <ferror@plt+0x14910>  // b.plast
  41763c:	str	x2, [x19, #112]
  417640:	add	x22, x20, #0x1
  417644:	ldr	x1, [x19, #112]
  417648:	str	x1, [x19, #104]
  41764c:	str	x3, [x28, x4, lsl #3]
  417650:	ldrb	w0, [x20, #1]
  417654:	ldr	x1, [sp, #136]
  417658:	ldrh	w0, [x1, x0, lsl #1]
  41765c:	tbnz	w0, #2, 4176e8 <ferror@plt+0x149b8>
  417660:	add	w0, w27, #0x1
  417664:	str	w0, [sp, #148]
  417668:	ldr	w0, [sp, #160]
  41766c:	cbnz	w0, 41775c <ferror@plt+0x14a2c>
  417670:	mov	w0, #0x1                   	// #1
  417674:	str	w0, [sp, #164]
  417678:	cmp	w27, #0x1d
  41767c:	b.hi	417774 <ferror@plt+0x14a44>  // b.pmore
  417680:	add	x0, sp, #0xc0
  417684:	ldr	x0, [x0, w27, uxtw #3]
  417688:	cbnz	x0, 41778c <ferror@plt+0x14a5c>
  41768c:	ldr	w0, [sp, #128]
  417690:	mov	w1, w0
  417694:	str	x1, [sp, #152]
  417698:	add	x0, x28, w0, uxtw #3
  41769c:	str	x0, [sp, #168]
  4176a0:	add	x1, sp, #0xc0
  4176a4:	str	x0, [x1, w27, uxtw #3]
  4176a8:	b	4177d4 <ferror@plt+0x14aa4>
  4176ac:	mov	x1, #0x1                   	// #1
  4176b0:	mov	x0, x25
  4176b4:	bl	4541c8 <_obstack_newchunk@@Base>
  4176b8:	b	4175dc <ferror@plt+0x148ac>
  4176bc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4176c0:	add	x2, x2, #0xcf0
  4176c4:	mov	w1, #0x450                 	// #1104
  4176c8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4176cc:	add	x0, x0, #0xc78
  4176d0:	bl	4102b4 <ferror@plt+0xd584>
  4176d4:	mov	x2, x0
  4176d8:	ldrb	w0, [x0, #80]
  4176dc:	orr	w0, w0, #0x2
  4176e0:	strb	w0, [x2, #80]
  4176e4:	b	417614 <ferror@plt+0x148e4>
  4176e8:	mov	w2, #0xa                   	// #10
  4176ec:	add	x1, sp, #0xb8
  4176f0:	mov	x0, x22
  4176f4:	bl	402670 <strtoul@plt>
  4176f8:	sub	w0, w0, #0x1
  4176fc:	ldr	x22, [sp, #184]
  417700:	ldrb	w1, [x22]
  417704:	cmp	w1, #0x24
  417708:	b.ne	41772c <ferror@plt+0x149fc>  // b.any
  41770c:	add	x22, x22, #0x1
  417710:	ldr	w1, [sp, #164]
  417714:	cbnz	w1, 417744 <ferror@plt+0x14a14>
  417718:	str	w27, [sp, #148]
  41771c:	mov	w27, w0
  417720:	mov	w0, #0x1                   	// #1
  417724:	str	w0, [sp, #160]
  417728:	b	417678 <ferror@plt+0x14948>
  41772c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417730:	add	x2, x2, #0xcf0
  417734:	mov	w1, #0x45a                 	// #1114
  417738:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41773c:	add	x0, x0, #0xc78
  417740:	bl	4102b4 <ferror@plt+0xd584>
  417744:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417748:	add	x2, x2, #0xcf0
  41774c:	mov	w1, #0x45e                 	// #1118
  417750:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417754:	add	x0, x0, #0xc78
  417758:	bl	4102b4 <ferror@plt+0xd584>
  41775c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417760:	add	x2, x2, #0xcf0
  417764:	mov	w1, #0x464                 	// #1124
  417768:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41776c:	add	x0, x0, #0xc78
  417770:	bl	4102b4 <ferror@plt+0xd584>
  417774:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417778:	add	x2, x2, #0xcf0
  41777c:	mov	w1, #0x466                 	// #1126
  417780:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417784:	add	x0, x0, #0xc78
  417788:	bl	4102b4 <ferror@plt+0xd584>
  41778c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417790:	add	x2, x2, #0xcf0
  417794:	mov	w1, #0x467                 	// #1127
  417798:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41779c:	add	x0, x0, #0xc78
  4177a0:	bl	4102b4 <ferror@plt+0xd584>
  4177a4:	ldr	x0, [x19, #112]
  4177a8:	add	x2, x0, #0x1
  4177ac:	str	x2, [x19, #112]
  4177b0:	ldrb	w1, [x22]
  4177b4:	strb	w1, [x0]
  4177b8:	mov	x20, x22
  4177bc:	ldrb	w23, [x20], #1
  4177c0:	mov	w1, w23
  4177c4:	mov	x0, x24
  4177c8:	bl	402ac0 <strchr@plt>
  4177cc:	cbz	x0, 4177f4 <ferror@plt+0x14ac4>
  4177d0:	mov	x22, x20
  4177d4:	ldr	x1, [x19, #120]
  4177d8:	ldr	x0, [x19, #112]
  4177dc:	cmp	x1, x0
  4177e0:	b.ne	4177a4 <ferror@plt+0x14a74>  // b.any
  4177e4:	mov	x1, #0x1                   	// #1
  4177e8:	mov	x0, x25
  4177ec:	bl	4541c8 <_obstack_newchunk@@Base>
  4177f0:	b	4177a4 <ferror@plt+0x14a74>
  4177f4:	cmp	w23, #0x2e
  4177f8:	b.eq	41788c <ferror@plt+0x14b5c>  // b.none
  4177fc:	ldrb	w0, [x20]
  417800:	cbz	w0, 417ad8 <ferror@plt+0x14da8>
  417804:	ldr	x1, [x19, #120]
  417808:	ldr	x0, [x19, #112]
  41780c:	cmp	x1, x0
  417810:	b.eq	417a9c <ferror@plt+0x14d6c>  // b.none
  417814:	ldr	x0, [x19, #112]
  417818:	add	x2, x0, #0x1
  41781c:	str	x2, [x19, #112]
  417820:	strb	wzr, [x0]
  417824:	ldr	w0, [sp, #128]
  417828:	cmp	w0, #0x3b
  41782c:	b.hi	417aac <ferror@plt+0x14d7c>  // b.pmore
  417830:	add	w26, w26, #0x2
  417834:	add	x0, x19, #0x58
  417838:	ldr	x3, [x19, #104]
  41783c:	ldr	x1, [x19, #112]
  417840:	cmp	x1, x3
  417844:	b.eq	417ac4 <ferror@plt+0x14d94>  // b.none
  417848:	ldr	x0, [x19, #136]
  41784c:	add	x1, x1, x0
  417850:	bic	x0, x1, x0
  417854:	str	x0, [x19, #112]
  417858:	ldr	x1, [x19, #96]
  41785c:	ldr	x2, [x19, #120]
  417860:	sub	x0, x0, x1
  417864:	sub	x1, x2, x1
  417868:	cmp	x0, x1
  41786c:	b.ls	417874 <ferror@plt+0x14b44>  // b.plast
  417870:	str	x2, [x19, #112]
  417874:	ldr	x1, [x19, #112]
  417878:	str	x1, [x19, #104]
  41787c:	ldr	x0, [sp, #152]
  417880:	str	x3, [x28, x0, lsl #3]
  417884:	ldr	w27, [sp, #148]
  417888:	b	417520 <ferror@plt+0x147f0>
  41788c:	ldrb	w0, [x20]
  417890:	ldr	x1, [sp, #136]
  417894:	ldrh	w1, [x1, w0, sxtw #1]
  417898:	tbnz	w1, #2, 417938 <ferror@plt+0x14c08>
  41789c:	cmp	w0, #0x2a
  4178a0:	b.ne	4179a4 <ferror@plt+0x14c74>  // b.any
  4178a4:	ldr	x1, [x19, #120]
  4178a8:	ldr	x0, [x19, #112]
  4178ac:	cmp	x1, x0
  4178b0:	b.eq	4179bc <ferror@plt+0x14c8c>  // b.none
  4178b4:	ldr	x0, [x19, #112]
  4178b8:	add	x2, x0, #0x1
  4178bc:	str	x2, [x19, #112]
  4178c0:	mov	w1, #0x2a                  	// #42
  4178c4:	strb	w1, [x0]
  4178c8:	add	x22, x22, #0x2
  4178cc:	ldrb	w0, [x20, #1]
  4178d0:	ldr	x1, [sp, #136]
  4178d4:	ldrh	w0, [x1, x0, lsl #1]
  4178d8:	tbnz	w0, #2, 4179cc <ferror@plt+0x14c9c>
  4178dc:	ldr	w0, [sp, #160]
  4178e0:	cbnz	w0, 417a5c <ferror@plt+0x14d2c>
  4178e4:	add	w27, w27, #0x1
  4178e8:	add	x0, sp, #0xc0
  4178ec:	ldr	x1, [sp, #168]
  4178f0:	str	x1, [x0, x27, lsl #3]
  4178f4:	ldr	w0, [sp, #148]
  4178f8:	add	w0, w0, #0x1
  4178fc:	str	w0, [sp, #148]
  417900:	ldrb	w0, [x22]
  417904:	cmp	w0, #0x73
  417908:	b.ne	417a74 <ferror@plt+0x14d44>  // b.any
  41790c:	ldr	x1, [x19, #120]
  417910:	ldr	x0, [x19, #112]
  417914:	cmp	x1, x0
  417918:	b.eq	417a8c <ferror@plt+0x14d5c>  // b.none
  41791c:	ldr	x0, [x19, #112]
  417920:	add	x2, x0, #0x1
  417924:	str	x2, [x19, #112]
  417928:	mov	w1, #0x73                  	// #115
  41792c:	strb	w1, [x0]
  417930:	add	x20, x22, #0x1
  417934:	b	4177fc <ferror@plt+0x14acc>
  417938:	mov	x22, #0x1                   	// #1
  41793c:	b	417964 <ferror@plt+0x14c34>
  417940:	ldr	x0, [x19, #112]
  417944:	add	x2, x0, #0x1
  417948:	str	x2, [x19, #112]
  41794c:	ldrb	w1, [x20]
  417950:	strb	w1, [x0]
  417954:	ldrb	w0, [x20], #1
  417958:	ldr	x1, [sp, #136]
  41795c:	ldrh	w1, [x1, w0, sxtw #1]
  417960:	tbz	w1, #2, 417984 <ferror@plt+0x14c54>
  417964:	ldr	x1, [x19, #120]
  417968:	ldr	x0, [x19, #112]
  41796c:	cmp	x1, x0
  417970:	b.ne	417940 <ferror@plt+0x14c10>  // b.any
  417974:	mov	x1, x22
  417978:	mov	x0, x25
  41797c:	bl	4541c8 <_obstack_newchunk@@Base>
  417980:	b	417940 <ferror@plt+0x14c10>
  417984:	cmp	w0, #0x73
  417988:	b.eq	4177fc <ferror@plt+0x14acc>  // b.none
  41798c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417990:	add	x2, x2, #0xcf0
  417994:	mov	w1, #0x47c                 	// #1148
  417998:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41799c:	add	x0, x0, #0xc78
  4179a0:	bl	4102b4 <ferror@plt+0xd584>
  4179a4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4179a8:	add	x2, x2, #0xcf0
  4179ac:	mov	w1, #0x480                 	// #1152
  4179b0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4179b4:	add	x0, x0, #0xc78
  4179b8:	bl	4102b4 <ferror@plt+0xd584>
  4179bc:	mov	x1, #0x1                   	// #1
  4179c0:	mov	x0, x25
  4179c4:	bl	4541c8 <_obstack_newchunk@@Base>
  4179c8:	b	4178b4 <ferror@plt+0x14b84>
  4179cc:	mov	w2, #0xa                   	// #10
  4179d0:	add	x1, sp, #0xb8
  4179d4:	mov	x0, x22
  4179d8:	bl	402670 <strtoul@plt>
  4179dc:	sub	w1, w0, #0x1
  4179e0:	ldr	x22, [sp, #184]
  4179e4:	cmp	w0, w27
  4179e8:	b.ne	417a14 <ferror@plt+0x14ce4>  // b.any
  4179ec:	ldr	w0, [sp, #164]
  4179f0:	cbnz	w0, 417a2c <ferror@plt+0x14cfc>
  4179f4:	ldrb	w0, [x22]
  4179f8:	cmp	w0, #0x24
  4179fc:	b.ne	417a44 <ferror@plt+0x14d14>  // b.any
  417a00:	add	x22, x22, #0x1
  417a04:	add	x0, sp, #0xc0
  417a08:	ldr	x2, [sp, #168]
  417a0c:	str	x2, [x0, w1, uxtw #3]
  417a10:	b	417900 <ferror@plt+0x14bd0>
  417a14:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a18:	add	x2, x2, #0xcf0
  417a1c:	mov	w1, #0x489                 	// #1161
  417a20:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a24:	add	x0, x0, #0xc78
  417a28:	bl	4102b4 <ferror@plt+0xd584>
  417a2c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a30:	add	x2, x2, #0xcf0
  417a34:	mov	w1, #0x48a                 	// #1162
  417a38:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a3c:	add	x0, x0, #0xc78
  417a40:	bl	4102b4 <ferror@plt+0xd584>
  417a44:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a48:	add	x2, x2, #0xcf0
  417a4c:	mov	w1, #0x48b                 	// #1163
  417a50:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a54:	add	x0, x0, #0xc78
  417a58:	bl	4102b4 <ferror@plt+0xd584>
  417a5c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a60:	add	x2, x2, #0xcf0
  417a64:	mov	w1, #0x492                 	// #1170
  417a68:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a6c:	add	x0, x0, #0xc78
  417a70:	bl	4102b4 <ferror@plt+0xd584>
  417a74:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a78:	add	x2, x2, #0xcf0
  417a7c:	mov	w1, #0x496                 	// #1174
  417a80:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417a84:	add	x0, x0, #0xc78
  417a88:	bl	4102b4 <ferror@plt+0xd584>
  417a8c:	mov	x1, #0x1                   	// #1
  417a90:	mov	x0, x25
  417a94:	bl	4541c8 <_obstack_newchunk@@Base>
  417a98:	b	41791c <ferror@plt+0x14bec>
  417a9c:	mov	x1, #0x1                   	// #1
  417aa0:	mov	x0, x25
  417aa4:	bl	4541c8 <_obstack_newchunk@@Base>
  417aa8:	b	417814 <ferror@plt+0x14ae4>
  417aac:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417ab0:	add	x2, x2, #0xcf0
  417ab4:	mov	w1, #0x49f                 	// #1183
  417ab8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417abc:	add	x0, x0, #0xc78
  417ac0:	bl	4102b4 <ferror@plt+0xd584>
  417ac4:	mov	x2, x0
  417ac8:	ldrb	w0, [x0, #80]
  417acc:	orr	w0, w0, #0x2
  417ad0:	strb	w0, [x2, #80]
  417ad4:	b	417848 <ferror@plt+0x14b18>
  417ad8:	ldr	w26, [sp, #128]
  417adc:	ldr	x1, [x19, #120]
  417ae0:	ldr	x0, [x19, #112]
  417ae4:	cmp	x1, x0
  417ae8:	b.eq	417b90 <ferror@plt+0x14e60>  // b.none
  417aec:	ldr	x0, [x19, #112]
  417af0:	add	x2, x0, #0x1
  417af4:	str	x2, [x19, #112]
  417af8:	strb	wzr, [x0]
  417afc:	cmp	w26, #0x3b
  417b00:	b.hi	417ba0 <ferror@plt+0x14e70>  // b.pmore
  417b04:	add	w4, w26, #0x1
  417b08:	mov	w26, w26
  417b0c:	add	x0, x19, #0x58
  417b10:	ldr	x3, [x19, #104]
  417b14:	ldr	x1, [x19, #112]
  417b18:	cmp	x1, x3
  417b1c:	b.eq	417bb8 <ferror@plt+0x14e88>  // b.none
  417b20:	ldr	x0, [x19, #136]
  417b24:	add	x1, x1, x0
  417b28:	bic	x0, x1, x0
  417b2c:	str	x0, [x19, #112]
  417b30:	ldr	x1, [x19, #96]
  417b34:	ldr	x2, [x19, #120]
  417b38:	sub	x0, x0, x1
  417b3c:	sub	x1, x2, x1
  417b40:	cmp	x0, x1
  417b44:	b.ls	417b4c <ferror@plt+0x14e1c>  // b.plast
  417b48:	str	x2, [x19, #112]
  417b4c:	ldr	x1, [x19, #112]
  417b50:	str	x1, [x19, #104]
  417b54:	str	x3, [x28, x26, lsl #3]
  417b58:	str	xzr, [x28, w4, uxtw #3]
  417b5c:	str	x25, [x19, #176]
  417b60:	ldr	w0, [x21, #36]
  417b64:	str	w0, [sp, #128]
  417b68:	ldr	w0, [x21, #40]
  417b6c:	str	w0, [sp, #136]
  417b70:	str	wzr, [x21, #40]
  417b74:	mov	w0, #0x1                   	// #1
  417b78:	str	w0, [x21, #36]
  417b7c:	ldr	x26, [sp, #192]
  417b80:	cbz	x26, 418bf0 <ferror@plt+0x15ec0>
  417b84:	mov	w24, #0x0                   	// #0
  417b88:	b	417fc0 <ferror@plt+0x15290>
  417b8c:	mov	w26, #0x0                   	// #0
  417b90:	mov	x1, #0x1                   	// #1
  417b94:	mov	x0, x25
  417b98:	bl	4541c8 <_obstack_newchunk@@Base>
  417b9c:	b	417aec <ferror@plt+0x14dbc>
  417ba0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417ba4:	add	x2, x2, #0xcf0
  417ba8:	mov	w1, #0x4a4                 	// #1188
  417bac:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417bb0:	add	x0, x0, #0xc78
  417bb4:	bl	4102b4 <ferror@plt+0xd584>
  417bb8:	mov	x2, x0
  417bbc:	ldrb	w0, [x0, #80]
  417bc0:	orr	w0, w0, #0x2
  417bc4:	strb	w0, [x2, #80]
  417bc8:	b	417b20 <ferror@plt+0x14df0>
  417bcc:	cmp	w0, #0x23
  417bd0:	b.eq	417c58 <ferror@plt+0x14f28>  // b.none
  417bd4:	cmp	w0, #0x2b
  417bd8:	b.ne	417cbc <ferror@plt+0x14f8c>  // b.any
  417bdc:	cbnz	w27, 417c40 <ferror@plt+0x14f10>
  417be0:	mov	w27, #0x1                   	// #1
  417be4:	b	417bf8 <ferror@plt+0x14ec8>
  417be8:	ldrb	w0, [sp, #183]
  417bec:	cbnz	w0, 417c28 <ferror@plt+0x14ef8>
  417bf0:	mov	w0, #0x1                   	// #1
  417bf4:	strb	w0, [sp, #183]
  417bf8:	add	x20, x20, #0x1
  417bfc:	ldrb	w0, [x20]
  417c00:	cmp	w0, #0x6c
  417c04:	b.eq	417c94 <ferror@plt+0x14f64>  // b.none
  417c08:	b.ls	417bcc <ferror@plt+0x14e9c>  // b.plast
  417c0c:	cmp	w0, #0x71
  417c10:	b.eq	417be8 <ferror@plt+0x14eb8>  // b.none
  417c14:	cmp	w0, #0x77
  417c18:	b.ne	417cbc <ferror@plt+0x14f8c>  // b.any
  417c1c:	cbnz	w23, 417c7c <ferror@plt+0x14f4c>
  417c20:	mov	w23, #0x1                   	// #1
  417c24:	b	417bf8 <ferror@plt+0x14ec8>
  417c28:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c2c:	add	x2, x2, #0xcf0
  417c30:	mov	w1, #0x4c0                 	// #1216
  417c34:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c38:	add	x0, x0, #0xc78
  417c3c:	bl	4102b4 <ferror@plt+0xd584>
  417c40:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c44:	add	x2, x2, #0xcf0
  417c48:	mov	w1, #0x4c5                 	// #1221
  417c4c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c50:	add	x0, x0, #0xc78
  417c54:	bl	4102b4 <ferror@plt+0xd584>
  417c58:	cbnz	w28, 417c64 <ferror@plt+0x14f34>
  417c5c:	mov	w28, #0x1                   	// #1
  417c60:	b	417bf8 <ferror@plt+0x14ec8>
  417c64:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c68:	add	x2, x2, #0xcf0
  417c6c:	mov	w1, #0x4ca                 	// #1226
  417c70:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c74:	add	x0, x0, #0xc78
  417c78:	bl	4102b4 <ferror@plt+0xd584>
  417c7c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c80:	add	x2, x2, #0xcf0
  417c84:	mov	w1, #0x4cf                 	// #1231
  417c88:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417c8c:	add	x0, x0, #0xc78
  417c90:	bl	4102b4 <ferror@plt+0xd584>
  417c94:	cmp	w22, #0x1
  417c98:	b.gt	417ca4 <ferror@plt+0x14f74>
  417c9c:	add	w22, w22, #0x1
  417ca0:	b	417bf8 <ferror@plt+0x14ec8>
  417ca4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417ca8:	add	x2, x2, #0xcf0
  417cac:	mov	w1, #0x4d5                 	// #1237
  417cb0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417cb4:	add	x0, x0, #0xc78
  417cb8:	bl	4102b4 <ferror@plt+0xd584>
  417cbc:	cmp	w22, #0x0
  417cc0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  417cc4:	b.ne	417d60 <ferror@plt+0x15030>  // b.any
  417cc8:	ldrb	w0, [sp, #183]
  417ccc:	cbnz	w0, 417d78 <ferror@plt+0x15048>
  417cd0:	ldrb	w0, [x20]
  417cd4:	cmp	w0, #0x6f
  417cd8:	b.eq	418230 <ferror@plt+0x15500>  // b.none
  417cdc:	b.hi	417e54 <ferror@plt+0x15124>  // b.pmore
  417ce0:	cmp	w0, #0x63
  417ce4:	b.eq	418008 <ferror@plt+0x152d8>  // b.none
  417ce8:	b.ls	417d88 <ferror@plt+0x15058>  // b.plast
  417cec:	cmp	w0, #0x66
  417cf0:	b.eq	41875c <ferror@plt+0x15a2c>  // b.none
  417cf4:	cmp	w0, #0x69
  417cf8:	b.ne	417dfc <ferror@plt+0x150cc>  // b.any
  417cfc:	cbnz	w23, 41809c <ferror@plt+0x1536c>
  417d00:	cmp	w22, #0x1
  417d04:	b.eq	418140 <ferror@plt+0x15410>  // b.none
  417d08:	cmp	w22, #0x2
  417d0c:	b.eq	4181b8 <ferror@plt+0x15488>  // b.none
  417d10:	cbnz	w22, 417f34 <ferror@plt+0x15204>
  417d14:	ldr	x0, [x21, #8]
  417d18:	add	x0, x0, #0xcc
  417d1c:	ldr	x1, [sp, #120]
  417d20:	ldr	x2, [x1, #8]
  417d24:	ldr	w3, [x2, #24]
  417d28:	ldr	x1, [x2]
  417d2c:	tbnz	w3, #31, 418114 <ferror@plt+0x153e4>
  417d30:	add	x3, x1, #0xb
  417d34:	and	x3, x3, #0xfffffffffffffff8
  417d38:	str	x3, [x2]
  417d3c:	ldr	w2, [x1]
  417d40:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417d44:	add	x1, x1, #0xd08
  417d48:	bl	402720 <sprintf@plt>
  417d4c:	ldr	x1, [x21, #8]
  417d50:	add	x1, x1, #0xcc
  417d54:	mov	x0, x21
  417d58:	bl	416f20 <ferror@plt+0x141f0>
  417d5c:	b	417f34 <ferror@plt+0x15204>
  417d60:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417d64:	add	x2, x2, #0xcf0
  417d68:	mov	w1, #0x4dc                 	// #1244
  417d6c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417d70:	add	x0, x0, #0xc78
  417d74:	bl	4102b4 <ferror@plt+0xd584>
  417d78:	ldrb	w1, [x21, #67]
  417d7c:	mov	x0, x21
  417d80:	bl	417114 <ferror@plt+0x143e4>
  417d84:	b	417cd0 <ferror@plt+0x14fa0>
  417d88:	cmp	w0, #0x2e
  417d8c:	b.eq	418a14 <ferror@plt+0x15ce4>  // b.none
  417d90:	cmp	w0, #0x5a
  417d94:	b.ne	417e04 <ferror@plt+0x150d4>  // b.any
  417d98:	ldr	x0, [sp, #120]
  417d9c:	ldr	x0, [x0, #8]
  417da0:	ldr	w2, [x0, #24]
  417da4:	ldr	x1, [x0]
  417da8:	tbnz	w2, #31, 4187d4 <ferror@plt+0x15aa4>
  417dac:	add	x2, x1, #0xf
  417db0:	and	x2, x2, #0xfffffffffffffff8
  417db4:	str	x2, [x0]
  417db8:	ldr	x23, [x1]
  417dbc:	ldr	x0, [sp, #120]
  417dc0:	ldr	x0, [x0, #8]
  417dc4:	ldr	w2, [x0, #24]
  417dc8:	ldr	x1, [x0]
  417dcc:	tbnz	w2, #31, 418800 <ferror@plt+0x15ad0>
  417dd0:	add	x2, x1, #0xb
  417dd4:	and	x2, x2, #0xfffffffffffffff8
  417dd8:	str	x2, [x0]
  417ddc:	ldr	w22, [x1]
  417de0:	cbz	w22, 417f34 <ferror@plt+0x15204>
  417de4:	mov	x20, #0x0                   	// #0
  417de8:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417dec:	add	x27, x27, #0xd58
  417df0:	sub	w26, w22, #0x1
  417df4:	mov	w28, #0x2c                  	// #44
  417df8:	b	418838 <ferror@plt+0x15b08>
  417dfc:	cmp	w0, #0x64
  417e00:	b.eq	417cfc <ferror@plt+0x14fcc>  // b.none
  417e04:	ldr	x8, [x21, #48]
  417e08:	cbz	x8, 418ba4 <ferror@plt+0x15e74>
  417e0c:	str	x26, [sp]
  417e10:	add	x7, sp, #0xb7
  417e14:	mov	w6, w28
  417e18:	mov	w5, w27
  417e1c:	mov	w4, w23
  417e20:	mov	w3, w22
  417e24:	mov	x2, x20
  417e28:	ldr	x1, [sp, #120]
  417e2c:	mov	x0, x21
  417e30:	blr	x8
  417e34:	and	w0, w0, #0xff
  417e38:	cbnz	w0, 417f34 <ferror@plt+0x15204>
  417e3c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417e40:	add	x2, x2, #0xcf0
  417e44:	mov	w1, #0x571                 	// #1393
  417e48:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417e4c:	add	x0, x0, #0xc78
  417e50:	bl	4102b4 <ferror@plt+0xd584>
  417e54:	cmp	w0, #0x73
  417e58:	b.eq	418428 <ferror@plt+0x156f8>  // b.none
  417e5c:	cmp	w0, #0x73
  417e60:	b.ls	417ed8 <ferror@plt+0x151a8>  // b.plast
  417e64:	cmp	w0, #0x75
  417e68:	b.eq	418564 <ferror@plt+0x15834>  // b.none
  417e6c:	cmp	w0, #0x78
  417e70:	b.ne	417e04 <ferror@plt+0x150d4>  // b.any
  417e74:	cbnz	w23, 418880 <ferror@plt+0x15b50>
  417e78:	cmp	w22, #0x1
  417e7c:	b.eq	418924 <ferror@plt+0x15bf4>  // b.none
  417e80:	cmp	w22, #0x2
  417e84:	b.eq	41899c <ferror@plt+0x15c6c>  // b.none
  417e88:	cbnz	w22, 417f34 <ferror@plt+0x15204>
  417e8c:	ldr	x0, [x21, #8]
  417e90:	add	x0, x0, #0xcc
  417e94:	ldr	x1, [sp, #120]
  417e98:	ldr	x2, [x1, #8]
  417e9c:	ldr	w3, [x2, #24]
  417ea0:	ldr	x1, [x2]
  417ea4:	tbnz	w3, #31, 4188f8 <ferror@plt+0x15bc8>
  417ea8:	add	x3, x1, #0xb
  417eac:	and	x3, x3, #0xfffffffffffffff8
  417eb0:	str	x3, [x2]
  417eb4:	ldr	w2, [x1]
  417eb8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  417ebc:	add	x1, x1, #0xd68
  417ec0:	bl	402720 <sprintf@plt>
  417ec4:	ldr	x1, [x21, #8]
  417ec8:	add	x1, x1, #0xcc
  417ecc:	mov	x0, x21
  417ed0:	bl	416f20 <ferror@plt+0x141f0>
  417ed4:	b	417f34 <ferror@plt+0x15204>
  417ed8:	cmp	w0, #0x70
  417edc:	b.eq	4184ec <ferror@plt+0x157bc>  // b.none
  417ee0:	cmp	w0, #0x72
  417ee4:	b.ne	417e04 <ferror@plt+0x150d4>  // b.any
  417ee8:	ldrb	w22, [x21, #67]
  417eec:	ldr	x0, [sp, #120]
  417ef0:	ldr	x0, [x0, #8]
  417ef4:	ldr	w2, [x0, #24]
  417ef8:	ldr	x1, [x0]
  417efc:	tbnz	w2, #31, 417fdc <ferror@plt+0x152ac>
  417f00:	add	x2, x1, #0xf
  417f04:	and	x2, x2, #0xfffffffffffffff8
  417f08:	str	x2, [x0]
  417f0c:	ldr	x20, [x1]
  417f10:	mov	x0, x20
  417f14:	bl	402680 <strlen@plt>
  417f18:	mov	x2, x0
  417f1c:	mov	x1, x20
  417f20:	mov	w0, w22
  417f24:	bl	411460 <ferror@plt+0xe730>
  417f28:	mov	x1, x0
  417f2c:	mov	x0, x21
  417f30:	bl	416f20 <ferror@plt+0x141f0>
  417f34:	ldrb	w0, [sp, #183]
  417f38:	cbnz	w0, 418bbc <ferror@plt+0x15e8c>
  417f3c:	ldr	x1, [x19, #120]
  417f40:	ldr	x0, [x19, #112]
  417f44:	cmp	x1, x0
  417f48:	b.eq	418bcc <ferror@plt+0x15e9c>  // b.none
  417f4c:	add	x0, x19, #0x58
  417f50:	ldr	x1, [x19, #112]
  417f54:	add	x2, x1, #0x1
  417f58:	str	x2, [x19, #112]
  417f5c:	strb	wzr, [x1]
  417f60:	add	x1, sp, #0xc0
  417f64:	ldr	x4, [x1, w24, uxtw #3]
  417f68:	ldr	x3, [x19, #104]
  417f6c:	ldr	x1, [x19, #112]
  417f70:	cmp	x1, x3
  417f74:	b.eq	418bdc <ferror@plt+0x15eac>  // b.none
  417f78:	ldr	x0, [x19, #136]
  417f7c:	add	x1, x1, x0
  417f80:	bic	x0, x1, x0
  417f84:	str	x0, [x19, #112]
  417f88:	ldr	x1, [x19, #96]
  417f8c:	ldr	x2, [x19, #120]
  417f90:	sub	x0, x0, x1
  417f94:	sub	x1, x2, x1
  417f98:	cmp	x0, x1
  417f9c:	b.ls	417fa4 <ferror@plt+0x15274>  // b.plast
  417fa0:	str	x2, [x19, #112]
  417fa4:	ldr	x1, [x19, #112]
  417fa8:	str	x1, [x19, #104]
  417fac:	str	x3, [x4]
  417fb0:	add	w24, w24, #0x1
  417fb4:	add	x0, sp, #0xc0
  417fb8:	ldr	x26, [x0, w24, uxtw #3]
  417fbc:	cbz	x26, 418bf0 <ferror@plt+0x15ec0>
  417fc0:	strb	wzr, [sp, #183]
  417fc4:	ldr	x20, [x26]
  417fc8:	mov	w28, #0x0                   	// #0
  417fcc:	mov	w27, #0x0                   	// #0
  417fd0:	mov	w23, #0x0                   	// #0
  417fd4:	mov	w22, #0x0                   	// #0
  417fd8:	b	417bfc <ferror@plt+0x14ecc>
  417fdc:	add	w3, w2, #0x8
  417fe0:	str	w3, [x0, #24]
  417fe4:	cmp	w3, #0x0
  417fe8:	b.le	417ffc <ferror@plt+0x152cc>
  417fec:	add	x2, x1, #0xf
  417ff0:	and	x2, x2, #0xfffffffffffffff8
  417ff4:	str	x2, [x0]
  417ff8:	b	417f0c <ferror@plt+0x151dc>
  417ffc:	ldr	x1, [x0, #8]
  418000:	add	x1, x1, w2, sxtw
  418004:	b	417f0c <ferror@plt+0x151dc>
  418008:	ldr	x0, [sp, #120]
  41800c:	ldr	x0, [x0, #8]
  418010:	ldr	w2, [x0, #24]
  418014:	ldr	x1, [x0]
  418018:	tbnz	w2, #31, 418054 <ferror@plt+0x15324>
  41801c:	add	x2, x1, #0xb
  418020:	and	x2, x2, #0xfffffffffffffff8
  418024:	str	x2, [x0]
  418028:	ldr	w1, [x1]
  41802c:	and	x2, x1, #0xff
  418030:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  418034:	add	x0, x0, #0x28
  418038:	ldrh	w0, [x0, x2, lsl #1]
  41803c:	tbnz	w0, #4, 418048 <ferror@plt+0x15318>
  418040:	ldrb	w0, [sp, #183]
  418044:	cbnz	w0, 418080 <ferror@plt+0x15350>
  418048:	mov	x0, x21
  41804c:	bl	416928 <ferror@plt+0x13bf8>
  418050:	b	417f34 <ferror@plt+0x15204>
  418054:	add	w3, w2, #0x8
  418058:	str	w3, [x0, #24]
  41805c:	cmp	w3, #0x0
  418060:	b.le	418074 <ferror@plt+0x15344>
  418064:	add	x2, x1, #0xb
  418068:	and	x2, x2, #0xfffffffffffffff8
  41806c:	str	x2, [x0]
  418070:	b	418028 <ferror@plt+0x152f8>
  418074:	ldr	x1, [x0, #8]
  418078:	add	x1, x1, w2, sxtw
  41807c:	b	418028 <ferror@plt+0x152f8>
  418080:	strb	wzr, [sp, #185]
  418084:	strb	w1, [sp, #184]
  418088:	mov	x2, #0x1                   	// #1
  41808c:	add	x1, sp, #0xb8
  418090:	mov	x0, x21
  418094:	bl	416de0 <ferror@plt+0x140b0>
  418098:	b	417f34 <ferror@plt+0x15204>
  41809c:	ldr	x0, [sp, #120]
  4180a0:	ldr	x0, [x0, #8]
  4180a4:	ldr	w2, [x0, #24]
  4180a8:	ldr	x1, [x0]
  4180ac:	tbnz	w2, #31, 4180e8 <ferror@plt+0x153b8>
  4180b0:	add	x2, x1, #0xf
  4180b4:	and	x2, x2, #0xfffffffffffffff8
  4180b8:	str	x2, [x0]
  4180bc:	ldr	x0, [x21, #8]
  4180c0:	ldr	x2, [x1]
  4180c4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4180c8:	add	x1, x1, #0xe00
  4180cc:	add	x0, x0, #0xcc
  4180d0:	bl	402720 <sprintf@plt>
  4180d4:	ldr	x1, [x21, #8]
  4180d8:	add	x1, x1, #0xcc
  4180dc:	mov	x0, x21
  4180e0:	bl	416f20 <ferror@plt+0x141f0>
  4180e4:	b	417f34 <ferror@plt+0x15204>
  4180e8:	add	w3, w2, #0x8
  4180ec:	str	w3, [x0, #24]
  4180f0:	cmp	w3, #0x0
  4180f4:	b.le	418108 <ferror@plt+0x153d8>
  4180f8:	add	x2, x1, #0xf
  4180fc:	and	x2, x2, #0xfffffffffffffff8
  418100:	str	x2, [x0]
  418104:	b	4180bc <ferror@plt+0x1538c>
  418108:	ldr	x1, [x0, #8]
  41810c:	add	x1, x1, w2, sxtw
  418110:	b	4180bc <ferror@plt+0x1538c>
  418114:	add	w4, w3, #0x8
  418118:	str	w4, [x2, #24]
  41811c:	cmp	w4, #0x0
  418120:	b.le	418134 <ferror@plt+0x15404>
  418124:	add	x3, x1, #0xb
  418128:	and	x3, x3, #0xfffffffffffffff8
  41812c:	str	x3, [x2]
  418130:	b	417d3c <ferror@plt+0x1500c>
  418134:	ldr	x1, [x2, #8]
  418138:	add	x1, x1, w3, sxtw
  41813c:	b	417d3c <ferror@plt+0x1500c>
  418140:	ldr	x0, [x21, #8]
  418144:	add	x0, x0, #0xcc
  418148:	ldr	x1, [sp, #120]
  41814c:	ldr	x2, [x1, #8]
  418150:	ldr	w3, [x2, #24]
  418154:	ldr	x1, [x2]
  418158:	tbnz	w3, #31, 41818c <ferror@plt+0x1545c>
  41815c:	add	x3, x1, #0xf
  418160:	and	x3, x3, #0xfffffffffffffff8
  418164:	str	x3, [x2]
  418168:	ldr	x2, [x1]
  41816c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  418170:	add	x1, x1, #0xe00
  418174:	bl	402720 <sprintf@plt>
  418178:	ldr	x1, [x21, #8]
  41817c:	add	x1, x1, #0xcc
  418180:	mov	x0, x21
  418184:	bl	416f20 <ferror@plt+0x141f0>
  418188:	b	417f34 <ferror@plt+0x15204>
  41818c:	add	w4, w3, #0x8
  418190:	str	w4, [x2, #24]
  418194:	cmp	w4, #0x0
  418198:	b.le	4181ac <ferror@plt+0x1547c>
  41819c:	add	x3, x1, #0xf
  4181a0:	and	x3, x3, #0xfffffffffffffff8
  4181a4:	str	x3, [x2]
  4181a8:	b	418168 <ferror@plt+0x15438>
  4181ac:	ldr	x1, [x2, #8]
  4181b0:	add	x1, x1, w3, sxtw
  4181b4:	b	418168 <ferror@plt+0x15438>
  4181b8:	ldr	x0, [x21, #8]
  4181bc:	add	x0, x0, #0xcc
  4181c0:	ldr	x1, [sp, #120]
  4181c4:	ldr	x2, [x1, #8]
  4181c8:	ldr	w3, [x2, #24]
  4181cc:	ldr	x1, [x2]
  4181d0:	tbnz	w3, #31, 418204 <ferror@plt+0x154d4>
  4181d4:	add	x3, x1, #0xf
  4181d8:	and	x3, x3, #0xfffffffffffffff8
  4181dc:	str	x3, [x2]
  4181e0:	ldr	x2, [x1]
  4181e4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4181e8:	add	x1, x1, #0xd10
  4181ec:	bl	402720 <sprintf@plt>
  4181f0:	ldr	x1, [x21, #8]
  4181f4:	add	x1, x1, #0xcc
  4181f8:	mov	x0, x21
  4181fc:	bl	416f20 <ferror@plt+0x141f0>
  418200:	b	417f34 <ferror@plt+0x15204>
  418204:	add	w4, w3, #0x8
  418208:	str	w4, [x2, #24]
  41820c:	cmp	w4, #0x0
  418210:	b.le	418224 <ferror@plt+0x154f4>
  418214:	add	x3, x1, #0xf
  418218:	and	x3, x3, #0xfffffffffffffff8
  41821c:	str	x3, [x2]
  418220:	b	4181e0 <ferror@plt+0x154b0>
  418224:	ldr	x1, [x2, #8]
  418228:	add	x1, x1, w3, sxtw
  41822c:	b	4181e0 <ferror@plt+0x154b0>
  418230:	cbnz	w23, 418294 <ferror@plt+0x15564>
  418234:	cmp	w22, #0x1
  418238:	b.eq	418338 <ferror@plt+0x15608>  // b.none
  41823c:	cmp	w22, #0x2
  418240:	b.eq	4183b0 <ferror@plt+0x15680>  // b.none
  418244:	cbnz	w22, 417f34 <ferror@plt+0x15204>
  418248:	ldr	x0, [x21, #8]
  41824c:	add	x0, x0, #0xcc
  418250:	ldr	x1, [sp, #120]
  418254:	ldr	x2, [x1, #8]
  418258:	ldr	w3, [x2, #24]
  41825c:	ldr	x1, [x2]
  418260:	tbnz	w3, #31, 41830c <ferror@plt+0x155dc>
  418264:	add	x3, x1, #0xb
  418268:	and	x3, x3, #0xfffffffffffffff8
  41826c:	str	x3, [x2]
  418270:	ldr	w2, [x1]
  418274:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418278:	add	x1, x1, #0xd20
  41827c:	bl	402720 <sprintf@plt>
  418280:	ldr	x1, [x21, #8]
  418284:	add	x1, x1, #0xcc
  418288:	mov	x0, x21
  41828c:	bl	416f20 <ferror@plt+0x141f0>
  418290:	b	417f34 <ferror@plt+0x15204>
  418294:	ldr	x0, [x21, #8]
  418298:	add	x0, x0, #0xcc
  41829c:	ldr	x1, [sp, #120]
  4182a0:	ldr	x2, [x1, #8]
  4182a4:	ldr	w3, [x2, #24]
  4182a8:	ldr	x1, [x2]
  4182ac:	tbnz	w3, #31, 4182e0 <ferror@plt+0x155b0>
  4182b0:	add	x3, x1, #0xf
  4182b4:	and	x3, x3, #0xfffffffffffffff8
  4182b8:	str	x3, [x2]
  4182bc:	ldr	x2, [x1]
  4182c0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4182c4:	add	x1, x1, #0xd18
  4182c8:	bl	402720 <sprintf@plt>
  4182cc:	ldr	x1, [x21, #8]
  4182d0:	add	x1, x1, #0xcc
  4182d4:	mov	x0, x21
  4182d8:	bl	416f20 <ferror@plt+0x141f0>
  4182dc:	b	417f34 <ferror@plt+0x15204>
  4182e0:	add	w4, w3, #0x8
  4182e4:	str	w4, [x2, #24]
  4182e8:	cmp	w4, #0x0
  4182ec:	b.le	418300 <ferror@plt+0x155d0>
  4182f0:	add	x3, x1, #0xf
  4182f4:	and	x3, x3, #0xfffffffffffffff8
  4182f8:	str	x3, [x2]
  4182fc:	b	4182bc <ferror@plt+0x1558c>
  418300:	ldr	x1, [x2, #8]
  418304:	add	x1, x1, w3, sxtw
  418308:	b	4182bc <ferror@plt+0x1558c>
  41830c:	add	w4, w3, #0x8
  418310:	str	w4, [x2, #24]
  418314:	cmp	w4, #0x0
  418318:	b.le	41832c <ferror@plt+0x155fc>
  41831c:	add	x3, x1, #0xb
  418320:	and	x3, x3, #0xfffffffffffffff8
  418324:	str	x3, [x2]
  418328:	b	418270 <ferror@plt+0x15540>
  41832c:	ldr	x1, [x2, #8]
  418330:	add	x1, x1, w3, sxtw
  418334:	b	418270 <ferror@plt+0x15540>
  418338:	ldr	x0, [x21, #8]
  41833c:	add	x0, x0, #0xcc
  418340:	ldr	x1, [sp, #120]
  418344:	ldr	x2, [x1, #8]
  418348:	ldr	w3, [x2, #24]
  41834c:	ldr	x1, [x2]
  418350:	tbnz	w3, #31, 418384 <ferror@plt+0x15654>
  418354:	add	x3, x1, #0xf
  418358:	and	x3, x3, #0xfffffffffffffff8
  41835c:	str	x3, [x2]
  418360:	ldr	x2, [x1]
  418364:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418368:	add	x1, x1, #0xd18
  41836c:	bl	402720 <sprintf@plt>
  418370:	ldr	x1, [x21, #8]
  418374:	add	x1, x1, #0xcc
  418378:	mov	x0, x21
  41837c:	bl	416f20 <ferror@plt+0x141f0>
  418380:	b	417f34 <ferror@plt+0x15204>
  418384:	add	w4, w3, #0x8
  418388:	str	w4, [x2, #24]
  41838c:	cmp	w4, #0x0
  418390:	b.le	4183a4 <ferror@plt+0x15674>
  418394:	add	x3, x1, #0xf
  418398:	and	x3, x3, #0xfffffffffffffff8
  41839c:	str	x3, [x2]
  4183a0:	b	418360 <ferror@plt+0x15630>
  4183a4:	ldr	x1, [x2, #8]
  4183a8:	add	x1, x1, w3, sxtw
  4183ac:	b	418360 <ferror@plt+0x15630>
  4183b0:	ldr	x0, [x21, #8]
  4183b4:	add	x0, x0, #0xcc
  4183b8:	ldr	x1, [sp, #120]
  4183bc:	ldr	x2, [x1, #8]
  4183c0:	ldr	w3, [x2, #24]
  4183c4:	ldr	x1, [x2]
  4183c8:	tbnz	w3, #31, 4183fc <ferror@plt+0x156cc>
  4183cc:	add	x3, x1, #0xf
  4183d0:	and	x3, x3, #0xfffffffffffffff8
  4183d4:	str	x3, [x2]
  4183d8:	ldr	x2, [x1]
  4183dc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4183e0:	add	x1, x1, #0xd28
  4183e4:	bl	402720 <sprintf@plt>
  4183e8:	ldr	x1, [x21, #8]
  4183ec:	add	x1, x1, #0xcc
  4183f0:	mov	x0, x21
  4183f4:	bl	416f20 <ferror@plt+0x141f0>
  4183f8:	b	417f34 <ferror@plt+0x15204>
  4183fc:	add	w4, w3, #0x8
  418400:	str	w4, [x2, #24]
  418404:	cmp	w4, #0x0
  418408:	b.le	41841c <ferror@plt+0x156ec>
  41840c:	add	x3, x1, #0xf
  418410:	and	x3, x3, #0xfffffffffffffff8
  418414:	str	x3, [x2]
  418418:	b	4183d8 <ferror@plt+0x156a8>
  41841c:	ldr	x1, [x2, #8]
  418420:	add	x1, x1, w3, sxtw
  418424:	b	4183d8 <ferror@plt+0x156a8>
  418428:	ldrb	w0, [sp, #183]
  41842c:	cbz	w0, 418490 <ferror@plt+0x15760>
  418430:	ldr	x0, [sp, #120]
  418434:	ldr	x0, [x0, #8]
  418438:	ldr	w2, [x0, #24]
  41843c:	ldr	x1, [x0]
  418440:	tbnz	w2, #31, 418464 <ferror@plt+0x15734>
  418444:	add	x2, x1, #0xf
  418448:	and	x2, x2, #0xfffffffffffffff8
  41844c:	str	x2, [x0]
  418450:	mov	x2, #0xffffffffffffffff    	// #-1
  418454:	ldr	x1, [x1]
  418458:	mov	x0, x21
  41845c:	bl	416de0 <ferror@plt+0x140b0>
  418460:	b	417f34 <ferror@plt+0x15204>
  418464:	add	w3, w2, #0x8
  418468:	str	w3, [x0, #24]
  41846c:	cmp	w3, #0x0
  418470:	b.le	418484 <ferror@plt+0x15754>
  418474:	add	x2, x1, #0xf
  418478:	and	x2, x2, #0xfffffffffffffff8
  41847c:	str	x2, [x0]
  418480:	b	418450 <ferror@plt+0x15720>
  418484:	ldr	x1, [x0, #8]
  418488:	add	x1, x1, w2, sxtw
  41848c:	b	418450 <ferror@plt+0x15720>
  418490:	ldr	x0, [sp, #120]
  418494:	ldr	x0, [x0, #8]
  418498:	ldr	w2, [x0, #24]
  41849c:	ldr	x1, [x0]
  4184a0:	tbnz	w2, #31, 4184c0 <ferror@plt+0x15790>
  4184a4:	add	x2, x1, #0xf
  4184a8:	and	x2, x2, #0xfffffffffffffff8
  4184ac:	str	x2, [x0]
  4184b0:	ldr	x1, [x1]
  4184b4:	mov	x0, x21
  4184b8:	bl	416f20 <ferror@plt+0x141f0>
  4184bc:	b	417f34 <ferror@plt+0x15204>
  4184c0:	add	w3, w2, #0x8
  4184c4:	str	w3, [x0, #24]
  4184c8:	cmp	w3, #0x0
  4184cc:	b.le	4184e0 <ferror@plt+0x157b0>
  4184d0:	add	x2, x1, #0xf
  4184d4:	and	x2, x2, #0xfffffffffffffff8
  4184d8:	str	x2, [x0]
  4184dc:	b	4184b0 <ferror@plt+0x15780>
  4184e0:	ldr	x1, [x0, #8]
  4184e4:	add	x1, x1, w2, sxtw
  4184e8:	b	4184b0 <ferror@plt+0x15780>
  4184ec:	ldr	x0, [x21, #8]
  4184f0:	add	x0, x0, #0xcc
  4184f4:	ldr	x1, [sp, #120]
  4184f8:	ldr	x1, [x1, #8]
  4184fc:	ldr	w3, [x1, #24]
  418500:	ldr	x2, [x1]
  418504:	tbnz	w3, #31, 418538 <ferror@plt+0x15808>
  418508:	add	x3, x2, #0xf
  41850c:	and	x3, x3, #0xfffffffffffffff8
  418510:	str	x3, [x1]
  418514:	ldr	x2, [x2]
  418518:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41851c:	add	x1, x1, #0xd30
  418520:	bl	402720 <sprintf@plt>
  418524:	ldr	x1, [x21, #8]
  418528:	add	x1, x1, #0xcc
  41852c:	mov	x0, x21
  418530:	bl	416f20 <ferror@plt+0x141f0>
  418534:	b	417f34 <ferror@plt+0x15204>
  418538:	add	w4, w3, #0x8
  41853c:	str	w4, [x1, #24]
  418540:	cmp	w4, #0x0
  418544:	b.le	418558 <ferror@plt+0x15828>
  418548:	add	x3, x2, #0xf
  41854c:	and	x3, x3, #0xfffffffffffffff8
  418550:	str	x3, [x1]
  418554:	b	418514 <ferror@plt+0x157e4>
  418558:	ldr	x2, [x1, #8]
  41855c:	add	x2, x2, w3, sxtw
  418560:	b	418514 <ferror@plt+0x157e4>
  418564:	cbnz	w23, 4185c8 <ferror@plt+0x15898>
  418568:	cmp	w22, #0x1
  41856c:	b.eq	41866c <ferror@plt+0x1593c>  // b.none
  418570:	cmp	w22, #0x2
  418574:	b.eq	4186e4 <ferror@plt+0x159b4>  // b.none
  418578:	cbnz	w22, 417f34 <ferror@plt+0x15204>
  41857c:	ldr	x0, [x21, #8]
  418580:	add	x0, x0, #0xcc
  418584:	ldr	x1, [sp, #120]
  418588:	ldr	x2, [x1, #8]
  41858c:	ldr	w3, [x2, #24]
  418590:	ldr	x1, [x2]
  418594:	tbnz	w3, #31, 418640 <ferror@plt+0x15910>
  418598:	add	x3, x1, #0xb
  41859c:	and	x3, x3, #0xfffffffffffffff8
  4185a0:	str	x3, [x2]
  4185a4:	ldr	w2, [x1]
  4185a8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4185ac:	add	x1, x1, #0xd40
  4185b0:	bl	402720 <sprintf@plt>
  4185b4:	ldr	x1, [x21, #8]
  4185b8:	add	x1, x1, #0xcc
  4185bc:	mov	x0, x21
  4185c0:	bl	416f20 <ferror@plt+0x141f0>
  4185c4:	b	417f34 <ferror@plt+0x15204>
  4185c8:	ldr	x0, [x21, #8]
  4185cc:	add	x0, x0, #0xcc
  4185d0:	ldr	x1, [sp, #120]
  4185d4:	ldr	x2, [x1, #8]
  4185d8:	ldr	w3, [x2, #24]
  4185dc:	ldr	x1, [x2]
  4185e0:	tbnz	w3, #31, 418614 <ferror@plt+0x158e4>
  4185e4:	add	x3, x1, #0xf
  4185e8:	and	x3, x3, #0xfffffffffffffff8
  4185ec:	str	x3, [x2]
  4185f0:	ldr	x2, [x1]
  4185f4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4185f8:	add	x1, x1, #0xd38
  4185fc:	bl	402720 <sprintf@plt>
  418600:	ldr	x1, [x21, #8]
  418604:	add	x1, x1, #0xcc
  418608:	mov	x0, x21
  41860c:	bl	416f20 <ferror@plt+0x141f0>
  418610:	b	417f34 <ferror@plt+0x15204>
  418614:	add	w4, w3, #0x8
  418618:	str	w4, [x2, #24]
  41861c:	cmp	w4, #0x0
  418620:	b.le	418634 <ferror@plt+0x15904>
  418624:	add	x3, x1, #0xf
  418628:	and	x3, x3, #0xfffffffffffffff8
  41862c:	str	x3, [x2]
  418630:	b	4185f0 <ferror@plt+0x158c0>
  418634:	ldr	x1, [x2, #8]
  418638:	add	x1, x1, w3, sxtw
  41863c:	b	4185f0 <ferror@plt+0x158c0>
  418640:	add	w4, w3, #0x8
  418644:	str	w4, [x2, #24]
  418648:	cmp	w4, #0x0
  41864c:	b.le	418660 <ferror@plt+0x15930>
  418650:	add	x3, x1, #0xb
  418654:	and	x3, x3, #0xfffffffffffffff8
  418658:	str	x3, [x2]
  41865c:	b	4185a4 <ferror@plt+0x15874>
  418660:	ldr	x1, [x2, #8]
  418664:	add	x1, x1, w3, sxtw
  418668:	b	4185a4 <ferror@plt+0x15874>
  41866c:	ldr	x0, [x21, #8]
  418670:	add	x0, x0, #0xcc
  418674:	ldr	x1, [sp, #120]
  418678:	ldr	x2, [x1, #8]
  41867c:	ldr	w3, [x2, #24]
  418680:	ldr	x1, [x2]
  418684:	tbnz	w3, #31, 4186b8 <ferror@plt+0x15988>
  418688:	add	x3, x1, #0xf
  41868c:	and	x3, x3, #0xfffffffffffffff8
  418690:	str	x3, [x2]
  418694:	ldr	x2, [x1]
  418698:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41869c:	add	x1, x1, #0xd38
  4186a0:	bl	402720 <sprintf@plt>
  4186a4:	ldr	x1, [x21, #8]
  4186a8:	add	x1, x1, #0xcc
  4186ac:	mov	x0, x21
  4186b0:	bl	416f20 <ferror@plt+0x141f0>
  4186b4:	b	417f34 <ferror@plt+0x15204>
  4186b8:	add	w4, w3, #0x8
  4186bc:	str	w4, [x2, #24]
  4186c0:	cmp	w4, #0x0
  4186c4:	b.le	4186d8 <ferror@plt+0x159a8>
  4186c8:	add	x3, x1, #0xf
  4186cc:	and	x3, x3, #0xfffffffffffffff8
  4186d0:	str	x3, [x2]
  4186d4:	b	418694 <ferror@plt+0x15964>
  4186d8:	ldr	x1, [x2, #8]
  4186dc:	add	x1, x1, w3, sxtw
  4186e0:	b	418694 <ferror@plt+0x15964>
  4186e4:	ldr	x0, [x21, #8]
  4186e8:	add	x0, x0, #0xcc
  4186ec:	ldr	x1, [sp, #120]
  4186f0:	ldr	x2, [x1, #8]
  4186f4:	ldr	w3, [x2, #24]
  4186f8:	ldr	x1, [x2]
  4186fc:	tbnz	w3, #31, 418730 <ferror@plt+0x15a00>
  418700:	add	x3, x1, #0xf
  418704:	and	x3, x3, #0xfffffffffffffff8
  418708:	str	x3, [x2]
  41870c:	ldr	x2, [x1]
  418710:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418714:	add	x1, x1, #0xd48
  418718:	bl	402720 <sprintf@plt>
  41871c:	ldr	x1, [x21, #8]
  418720:	add	x1, x1, #0xcc
  418724:	mov	x0, x21
  418728:	bl	416f20 <ferror@plt+0x141f0>
  41872c:	b	417f34 <ferror@plt+0x15204>
  418730:	add	w4, w3, #0x8
  418734:	str	w4, [x2, #24]
  418738:	cmp	w4, #0x0
  41873c:	b.le	418750 <ferror@plt+0x15a20>
  418740:	add	x3, x1, #0xf
  418744:	and	x3, x3, #0xfffffffffffffff8
  418748:	str	x3, [x2]
  41874c:	b	41870c <ferror@plt+0x159dc>
  418750:	ldr	x1, [x2, #8]
  418754:	add	x1, x1, w3, sxtw
  418758:	b	41870c <ferror@plt+0x159dc>
  41875c:	ldr	x0, [x21, #8]
  418760:	add	x0, x0, #0xcc
  418764:	ldr	x1, [sp, #120]
  418768:	ldr	x1, [x1, #8]
  41876c:	ldr	w3, [x1, #28]
  418770:	ldr	x2, [x1]
  418774:	tbnz	w3, #31, 4187a8 <ferror@plt+0x15a78>
  418778:	add	x3, x2, #0xf
  41877c:	and	x3, x3, #0xfffffffffffffff8
  418780:	str	x3, [x1]
  418784:	ldr	d0, [x2]
  418788:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41878c:	add	x1, x1, #0xd50
  418790:	bl	402720 <sprintf@plt>
  418794:	ldr	x1, [x21, #8]
  418798:	add	x1, x1, #0xcc
  41879c:	mov	x0, x21
  4187a0:	bl	416f20 <ferror@plt+0x141f0>
  4187a4:	b	417f34 <ferror@plt+0x15204>
  4187a8:	add	w4, w3, #0x10
  4187ac:	str	w4, [x1, #28]
  4187b0:	cmp	w4, #0x0
  4187b4:	b.le	4187c8 <ferror@plt+0x15a98>
  4187b8:	add	x3, x2, #0xf
  4187bc:	and	x3, x3, #0xfffffffffffffff8
  4187c0:	str	x3, [x1]
  4187c4:	b	418784 <ferror@plt+0x15a54>
  4187c8:	ldr	x2, [x1, #16]
  4187cc:	add	x2, x2, w3, sxtw
  4187d0:	b	418784 <ferror@plt+0x15a54>
  4187d4:	add	w3, w2, #0x8
  4187d8:	str	w3, [x0, #24]
  4187dc:	cmp	w3, #0x0
  4187e0:	b.le	4187f4 <ferror@plt+0x15ac4>
  4187e4:	add	x2, x1, #0xf
  4187e8:	and	x2, x2, #0xfffffffffffffff8
  4187ec:	str	x2, [x0]
  4187f0:	b	417db8 <ferror@plt+0x15088>
  4187f4:	ldr	x1, [x0, #8]
  4187f8:	add	x1, x1, w2, sxtw
  4187fc:	b	417db8 <ferror@plt+0x15088>
  418800:	add	w3, w2, #0x8
  418804:	str	w3, [x0, #24]
  418808:	cmp	w3, #0x0
  41880c:	b.le	418820 <ferror@plt+0x15af0>
  418810:	add	x2, x1, #0xb
  418814:	and	x2, x2, #0xfffffffffffffff8
  418818:	str	x2, [x0]
  41881c:	b	417ddc <ferror@plt+0x150ac>
  418820:	ldr	x1, [x0, #8]
  418824:	add	x1, x1, w2, sxtw
  418828:	b	417ddc <ferror@plt+0x150ac>
  41882c:	add	x20, x20, #0x1
  418830:	cmp	w22, w20
  418834:	b.ls	417f34 <ferror@plt+0x15204>  // b.plast
  418838:	ldr	x0, [x21, #8]
  41883c:	ldr	w2, [x23, x20, lsl #2]
  418840:	mov	x1, x27
  418844:	add	x0, x0, #0xcc
  418848:	bl	402720 <sprintf@plt>
  41884c:	ldr	x1, [x21, #8]
  418850:	add	x1, x1, #0xcc
  418854:	mov	x0, x21
  418858:	bl	416f20 <ferror@plt+0x141f0>
  41885c:	cmp	w26, w20
  418860:	b.ls	41882c <ferror@plt+0x15afc>  // b.plast
  418864:	mov	w1, w28
  418868:	mov	x0, x21
  41886c:	bl	416928 <ferror@plt+0x13bf8>
  418870:	mov	w1, #0x20                  	// #32
  418874:	mov	x0, x21
  418878:	bl	416928 <ferror@plt+0x13bf8>
  41887c:	b	41882c <ferror@plt+0x15afc>
  418880:	ldr	x0, [x21, #8]
  418884:	add	x0, x0, #0xcc
  418888:	ldr	x1, [sp, #120]
  41888c:	ldr	x2, [x1, #8]
  418890:	ldr	w3, [x2, #24]
  418894:	ldr	x1, [x2]
  418898:	tbnz	w3, #31, 4188cc <ferror@plt+0x15b9c>
  41889c:	add	x3, x1, #0xf
  4188a0:	and	x3, x3, #0xfffffffffffffff8
  4188a4:	str	x3, [x2]
  4188a8:	ldr	x2, [x1]
  4188ac:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4188b0:	add	x1, x1, #0xd60
  4188b4:	bl	402720 <sprintf@plt>
  4188b8:	ldr	x1, [x21, #8]
  4188bc:	add	x1, x1, #0xcc
  4188c0:	mov	x0, x21
  4188c4:	bl	416f20 <ferror@plt+0x141f0>
  4188c8:	b	417f34 <ferror@plt+0x15204>
  4188cc:	add	w4, w3, #0x8
  4188d0:	str	w4, [x2, #24]
  4188d4:	cmp	w4, #0x0
  4188d8:	b.le	4188ec <ferror@plt+0x15bbc>
  4188dc:	add	x3, x1, #0xf
  4188e0:	and	x3, x3, #0xfffffffffffffff8
  4188e4:	str	x3, [x2]
  4188e8:	b	4188a8 <ferror@plt+0x15b78>
  4188ec:	ldr	x1, [x2, #8]
  4188f0:	add	x1, x1, w3, sxtw
  4188f4:	b	4188a8 <ferror@plt+0x15b78>
  4188f8:	add	w4, w3, #0x8
  4188fc:	str	w4, [x2, #24]
  418900:	cmp	w4, #0x0
  418904:	b.le	418918 <ferror@plt+0x15be8>
  418908:	add	x3, x1, #0xb
  41890c:	and	x3, x3, #0xfffffffffffffff8
  418910:	str	x3, [x2]
  418914:	b	417eb4 <ferror@plt+0x15184>
  418918:	ldr	x1, [x2, #8]
  41891c:	add	x1, x1, w3, sxtw
  418920:	b	417eb4 <ferror@plt+0x15184>
  418924:	ldr	x0, [x21, #8]
  418928:	add	x0, x0, #0xcc
  41892c:	ldr	x1, [sp, #120]
  418930:	ldr	x2, [x1, #8]
  418934:	ldr	w3, [x2, #24]
  418938:	ldr	x1, [x2]
  41893c:	tbnz	w3, #31, 418970 <ferror@plt+0x15c40>
  418940:	add	x3, x1, #0xf
  418944:	and	x3, x3, #0xfffffffffffffff8
  418948:	str	x3, [x2]
  41894c:	ldr	x2, [x1]
  418950:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418954:	add	x1, x1, #0xd70
  418958:	bl	402720 <sprintf@plt>
  41895c:	ldr	x1, [x21, #8]
  418960:	add	x1, x1, #0xcc
  418964:	mov	x0, x21
  418968:	bl	416f20 <ferror@plt+0x141f0>
  41896c:	b	417f34 <ferror@plt+0x15204>
  418970:	add	w4, w3, #0x8
  418974:	str	w4, [x2, #24]
  418978:	cmp	w4, #0x0
  41897c:	b.le	418990 <ferror@plt+0x15c60>
  418980:	add	x3, x1, #0xf
  418984:	and	x3, x3, #0xfffffffffffffff8
  418988:	str	x3, [x2]
  41898c:	b	41894c <ferror@plt+0x15c1c>
  418990:	ldr	x1, [x2, #8]
  418994:	add	x1, x1, w3, sxtw
  418998:	b	41894c <ferror@plt+0x15c1c>
  41899c:	ldr	x0, [x21, #8]
  4189a0:	add	x0, x0, #0xcc
  4189a4:	ldr	x1, [sp, #120]
  4189a8:	ldr	x2, [x1, #8]
  4189ac:	ldr	w3, [x2, #24]
  4189b0:	ldr	x1, [x2]
  4189b4:	tbnz	w3, #31, 4189e8 <ferror@plt+0x15cb8>
  4189b8:	add	x3, x1, #0xf
  4189bc:	and	x3, x3, #0xfffffffffffffff8
  4189c0:	str	x3, [x2]
  4189c4:	ldr	x2, [x1]
  4189c8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4189cc:	add	x1, x1, #0xd78
  4189d0:	bl	402720 <sprintf@plt>
  4189d4:	ldr	x1, [x21, #8]
  4189d8:	add	x1, x1, #0xcc
  4189dc:	mov	x0, x21
  4189e0:	bl	416f20 <ferror@plt+0x141f0>
  4189e4:	b	417f34 <ferror@plt+0x15204>
  4189e8:	add	w4, w3, #0x8
  4189ec:	str	w4, [x2, #24]
  4189f0:	cmp	w4, #0x0
  4189f4:	b.le	418a08 <ferror@plt+0x15cd8>
  4189f8:	add	x3, x1, #0xf
  4189fc:	and	x3, x3, #0xfffffffffffffff8
  418a00:	str	x3, [x2]
  418a04:	b	4189c4 <ferror@plt+0x15c94>
  418a08:	ldr	x1, [x2, #8]
  418a0c:	add	x1, x1, w3, sxtw
  418a10:	b	4189c4 <ferror@plt+0x15c94>
  418a14:	ldrb	w1, [x20, #1]
  418a18:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  418a1c:	add	x0, x0, #0x28
  418a20:	ldrh	w0, [x0, w1, sxtw #1]
  418a24:	tbnz	w0, #2, 418abc <ferror@plt+0x15d8c>
  418a28:	cmp	w1, #0x2a
  418a2c:	b.ne	418af8 <ferror@plt+0x15dc8>  // b.any
  418a30:	ldrb	w0, [x20, #2]
  418a34:	cmp	w0, #0x73
  418a38:	b.ne	418b10 <ferror@plt+0x15de0>  // b.any
  418a3c:	ldr	x0, [sp, #120]
  418a40:	ldr	x0, [x0, #8]
  418a44:	ldr	w2, [x0, #24]
  418a48:	ldr	x1, [x0]
  418a4c:	tbnz	w2, #31, 418b28 <ferror@plt+0x15df8>
  418a50:	add	x2, x1, #0xb
  418a54:	and	x2, x2, #0xfffffffffffffff8
  418a58:	str	x2, [x0]
  418a5c:	ldr	w1, [x1]
  418a60:	add	w24, w24, #0x1
  418a64:	add	x0, sp, #0xc0
  418a68:	ldr	x0, [x0, w24, uxtw #3]
  418a6c:	cmp	x0, x26
  418a70:	b.ne	418b54 <ferror@plt+0x15e24>  // b.any
  418a74:	ldr	x0, [sp, #120]
  418a78:	ldr	x0, [x0, #8]
  418a7c:	ldr	w3, [x0, #24]
  418a80:	ldr	x2, [x0]
  418a84:	tbnz	w3, #31, 418b6c <ferror@plt+0x15e3c>
  418a88:	add	x3, x2, #0xf
  418a8c:	and	x3, x3, #0xfffffffffffffff8
  418a90:	str	x3, [x0]
  418a94:	ldr	x20, [x2]
  418a98:	tbnz	w1, #31, 418b98 <ferror@plt+0x15e68>
  418a9c:	sxtw	x1, w1
  418aa0:	mov	x0, x20
  418aa4:	bl	4026d0 <strnlen@plt>
  418aa8:	add	x2, x20, x0
  418aac:	mov	x1, x20
  418ab0:	mov	x0, x21
  418ab4:	bl	416b48 <ferror@plt+0x13e18>
  418ab8:	b	417f34 <ferror@plt+0x15204>
  418abc:	mov	w2, #0xa                   	// #10
  418ac0:	add	x1, sp, #0xb8
  418ac4:	add	x0, x20, #0x1
  418ac8:	bl	402670 <strtoul@plt>
  418acc:	mov	w1, w0
  418ad0:	ldr	x0, [sp, #184]
  418ad4:	ldrb	w0, [x0]
  418ad8:	cmp	w0, #0x73
  418adc:	b.eq	418a74 <ferror@plt+0x15d44>  // b.none
  418ae0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418ae4:	add	x2, x2, #0xcf0
  418ae8:	mov	w1, #0x54b                 	// #1355
  418aec:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418af0:	add	x0, x0, #0xc78
  418af4:	bl	4102b4 <ferror@plt+0xd584>
  418af8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418afc:	add	x2, x2, #0xcf0
  418b00:	mov	w1, #0x54f                 	// #1359
  418b04:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418b08:	add	x0, x0, #0xc78
  418b0c:	bl	4102b4 <ferror@plt+0xd584>
  418b10:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418b14:	add	x2, x2, #0xcf0
  418b18:	mov	w1, #0x551                 	// #1361
  418b1c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418b20:	add	x0, x0, #0xc78
  418b24:	bl	4102b4 <ferror@plt+0xd584>
  418b28:	add	w3, w2, #0x8
  418b2c:	str	w3, [x0, #24]
  418b30:	cmp	w3, #0x0
  418b34:	b.le	418b48 <ferror@plt+0x15e18>
  418b38:	add	x2, x1, #0xb
  418b3c:	and	x2, x2, #0xfffffffffffffff8
  418b40:	str	x2, [x0]
  418b44:	b	418a5c <ferror@plt+0x15d2c>
  418b48:	ldr	x1, [x0, #8]
  418b4c:	add	x1, x1, w2, sxtw
  418b50:	b	418a5c <ferror@plt+0x15d2c>
  418b54:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418b58:	add	x2, x2, #0xcf0
  418b5c:	mov	w1, #0x555                 	// #1365
  418b60:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418b64:	add	x0, x0, #0xc78
  418b68:	bl	4102b4 <ferror@plt+0xd584>
  418b6c:	add	w4, w3, #0x8
  418b70:	str	w4, [x0, #24]
  418b74:	cmp	w4, #0x0
  418b78:	b.le	418b8c <ferror@plt+0x15e5c>
  418b7c:	add	x3, x2, #0xf
  418b80:	and	x3, x3, #0xfffffffffffffff8
  418b84:	str	x3, [x0]
  418b88:	b	418a94 <ferror@plt+0x15d64>
  418b8c:	ldr	x2, [x0, #8]
  418b90:	add	x2, x2, w3, sxtw
  418b94:	b	418a94 <ferror@plt+0x15d64>
  418b98:	mov	x0, x20
  418b9c:	bl	402680 <strlen@plt>
  418ba0:	b	418aa8 <ferror@plt+0x15d78>
  418ba4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418ba8:	add	x2, x2, #0xcf0
  418bac:	mov	w1, #0x56d                 	// #1389
  418bb0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418bb4:	add	x0, x0, #0xc78
  418bb8:	bl	4102b4 <ferror@plt+0xd584>
  418bbc:	ldrb	w1, [x21, #67]
  418bc0:	mov	x0, x21
  418bc4:	bl	417160 <ferror@plt+0x14430>
  418bc8:	b	417f3c <ferror@plt+0x1520c>
  418bcc:	mov	x1, #0x1                   	// #1
  418bd0:	mov	x0, x25
  418bd4:	bl	4541c8 <_obstack_newchunk@@Base>
  418bd8:	b	417f4c <ferror@plt+0x1521c>
  418bdc:	mov	x2, x0
  418be0:	ldrb	w0, [x0, #80]
  418be4:	orr	w0, w0, #0x2
  418be8:	strb	w0, [x2, #80]
  418bec:	b	417f78 <ferror@plt+0x15248>
  418bf0:	ldr	x0, [x21, #56]
  418bf4:	cbz	x0, 418c08 <ferror@plt+0x15ed8>
  418bf8:	ldr	x1, [x0]
  418bfc:	ldr	x2, [x1, #16]
  418c00:	mov	x1, x21
  418c04:	blr	x2
  418c08:	str	x19, [x19, #176]
  418c0c:	str	wzr, [x19, #200]
  418c10:	ldr	w0, [sp, #128]
  418c14:	str	w0, [x21, #36]
  418c18:	ldr	w0, [sp, #136]
  418c1c:	str	w0, [x21, #40]
  418c20:	strb	wzr, [x21, #64]
  418c24:	str	wzr, [x21, #32]
  418c28:	ldp	x19, x20, [sp, #32]
  418c2c:	ldp	x21, x22, [sp, #48]
  418c30:	ldp	x23, x24, [sp, #64]
  418c34:	ldp	x25, x26, [sp, #80]
  418c38:	ldp	x27, x28, [sp, #96]
  418c3c:	ldp	x29, x30, [sp, #16]
  418c40:	add	sp, sp, #0x1b0
  418c44:	ret
  418c48:	ldr	x0, [x19, #112]
  418c4c:	ldr	x1, [x19, #120]
  418c50:	cmp	x1, x0
  418c54:	b.eq	417b8c <ferror@plt+0x14e5c>  // b.none
  418c58:	add	x1, x0, #0x1
  418c5c:	str	x1, [x19, #112]
  418c60:	strb	wzr, [x0]
  418c64:	mov	w26, #0x0                   	// #0
  418c68:	b	417b04 <ferror@plt+0x14dd4>
  418c6c:	stp	x29, x30, [sp, #-48]!
  418c70:	mov	x29, sp
  418c74:	stp	x19, x20, [sp, #16]
  418c78:	str	x21, [sp, #32]
  418c7c:	mov	x19, x0
  418c80:	ldr	w21, [x0, #36]
  418c84:	ldr	w20, [x0, #40]
  418c88:	str	wzr, [x0, #40]
  418c8c:	mov	w2, #0x1                   	// #1
  418c90:	str	w2, [x0, #36]
  418c94:	bl	4171a0 <ferror@plt+0x14470>
  418c98:	mov	x0, x19
  418c9c:	bl	416f74 <ferror@plt+0x14244>
  418ca0:	str	w21, [x19, #36]
  418ca4:	str	w20, [x19, #40]
  418ca8:	ldp	x19, x20, [sp, #16]
  418cac:	ldr	x21, [sp, #32]
  418cb0:	ldp	x29, x30, [sp], #48
  418cb4:	ret
  418cb8:	stp	x29, x30, [sp, #-288]!
  418cbc:	mov	x29, sp
  418cc0:	stp	x19, x20, [sp, #16]
  418cc4:	mov	x19, x0
  418cc8:	mov	x20, x1
  418ccc:	str	x2, [sp, #240]
  418cd0:	str	x3, [sp, #248]
  418cd4:	str	x4, [sp, #256]
  418cd8:	str	x5, [sp, #264]
  418cdc:	str	x6, [sp, #272]
  418ce0:	str	x7, [sp, #280]
  418ce4:	str	q0, [sp, #112]
  418ce8:	str	q1, [sp, #128]
  418cec:	str	q2, [sp, #144]
  418cf0:	str	q3, [sp, #160]
  418cf4:	str	q4, [sp, #176]
  418cf8:	str	q5, [sp, #192]
  418cfc:	str	q6, [sp, #208]
  418d00:	str	q7, [sp, #224]
  418d04:	add	x0, sp, #0x120
  418d08:	str	x0, [sp, #40]
  418d0c:	str	x0, [sp, #48]
  418d10:	add	x0, sp, #0xf0
  418d14:	str	x0, [sp, #56]
  418d18:	mov	w0, #0xffffffd0            	// #-48
  418d1c:	str	w0, [sp, #64]
  418d20:	mov	w0, #0xffffff80            	// #-128
  418d24:	str	w0, [sp, #68]
  418d28:	bl	402c40 <__errno_location@plt>
  418d2c:	ldr	w0, [x0]
  418d30:	str	w0, [sp, #88]
  418d34:	add	x0, sp, #0x28
  418d38:	str	x0, [sp, #80]
  418d3c:	str	x20, [sp, #72]
  418d40:	add	x1, sp, #0x48
  418d44:	mov	x0, x19
  418d48:	bl	418c6c <ferror@plt+0x15f3c>
  418d4c:	ldp	x19, x20, [sp, #16]
  418d50:	ldp	x29, x30, [sp], #288
  418d54:	ret
  418d58:	stp	x29, x30, [sp, #-288]!
  418d5c:	mov	x29, sp
  418d60:	stp	x19, x20, [sp, #16]
  418d64:	mov	x19, x0
  418d68:	mov	x20, x1
  418d6c:	str	x2, [sp, #240]
  418d70:	str	x3, [sp, #248]
  418d74:	str	x4, [sp, #256]
  418d78:	str	x5, [sp, #264]
  418d7c:	str	x6, [sp, #272]
  418d80:	str	x7, [sp, #280]
  418d84:	str	q0, [sp, #112]
  418d88:	str	q1, [sp, #128]
  418d8c:	str	q2, [sp, #144]
  418d90:	str	q3, [sp, #160]
  418d94:	str	q4, [sp, #176]
  418d98:	str	q5, [sp, #192]
  418d9c:	str	q6, [sp, #208]
  418da0:	str	q7, [sp, #224]
  418da4:	add	x0, sp, #0x120
  418da8:	str	x0, [sp, #40]
  418dac:	str	x0, [sp, #48]
  418db0:	add	x0, sp, #0xf0
  418db4:	str	x0, [sp, #56]
  418db8:	mov	w0, #0xffffffd0            	// #-48
  418dbc:	str	w0, [sp, #64]
  418dc0:	mov	w0, #0xffffff80            	// #-128
  418dc4:	str	w0, [sp, #68]
  418dc8:	bl	402c40 <__errno_location@plt>
  418dcc:	ldr	w0, [x0]
  418dd0:	str	w0, [sp, #88]
  418dd4:	add	x0, sp, #0x28
  418dd8:	str	x0, [sp, #80]
  418ddc:	str	x20, [sp, #72]
  418de0:	add	x1, sp, #0x48
  418de4:	mov	x0, x19
  418de8:	bl	4171a0 <ferror@plt+0x14470>
  418dec:	mov	x0, x19
  418df0:	bl	416f74 <ferror@plt+0x14244>
  418df4:	ldp	x19, x20, [sp, #16]
  418df8:	ldp	x29, x30, [sp], #288
  418dfc:	ret
  418e00:	stp	x29, x30, [sp, #-112]!
  418e04:	mov	x29, sp
  418e08:	stp	x21, x22, [sp, #32]
  418e0c:	stp	x23, x24, [sp, #48]
  418e10:	mov	x22, x0
  418e14:	bl	402680 <strlen@plt>
  418e18:	cbz	x0, 4190e8 <ferror@plt+0x163b8>
  418e1c:	stp	x19, x20, [sp, #16]
  418e20:	mov	x20, x0
  418e24:	mov	x19, #0x0                   	// #0
  418e28:	mov	w21, #0x1                   	// #1
  418e2c:	mov	w23, #0x0                   	// #0
  418e30:	add	x2, sp, #0x68
  418e34:	sub	x1, x20, x19
  418e38:	add	x0, x22, x19
  418e3c:	bl	416178 <ferror@plt+0x13448>
  418e40:	sxtw	x2, w0
  418e44:	cbz	w0, 418f44 <ferror@plt+0x16214>
  418e48:	ldr	w1, [sp, #104]
  418e4c:	cmp	w1, #0x1f
  418e50:	b.ls	418f44 <ferror@plt+0x16214>  // b.plast
  418e54:	sub	w1, w1, #0x7f
  418e58:	cmp	w1, #0x20
  418e5c:	b.ls	418f44 <ferror@plt+0x16214>  // b.plast
  418e60:	cmp	x2, #0x2
  418e64:	csel	w21, w21, w23, cc  // cc = lo, ul, last
  418e68:	add	x19, x19, x2
  418e6c:	cmp	x20, x19
  418e70:	b.hi	418e30 <ferror@plt+0x16100>  // b.pmore
  418e74:	mov	x23, x22
  418e78:	cbnz	w21, 418f74 <ferror@plt+0x16244>
  418e7c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  418e80:	ldrb	w0, [x0, #2344]
  418e84:	cbnz	w0, 4190f0 <ferror@plt+0x163c0>
  418e88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  418e8c:	ldr	x0, [x0, #2336]
  418e90:	cbz	x0, 419054 <ferror@plt+0x16324>
  418e94:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418e98:	add	x1, x1, #0xd88
  418e9c:	bl	402b40 <iconv_open@plt>
  418ea0:	mov	x19, x0
  418ea4:	cmn	x0, #0x1
  418ea8:	b.eq	419088 <ferror@plt+0x16358>  // b.none
  418eac:	lsl	x21, x20, #2
  418eb0:	add	x21, x21, #0x1
  418eb4:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  418eb8:	str	x22, [sp, #80]
  418ebc:	str	x20, [sp, #96]
  418ec0:	sub	x0, x21, #0x1
  418ec4:	str	x0, [sp, #104]
  418ec8:	ldr	x1, [x24, #1312]
  418ecc:	mov	x0, x21
  418ed0:	blr	x1
  418ed4:	mov	x23, x0
  418ed8:	str	x0, [sp, #88]
  418edc:	mov	x4, #0x0                   	// #0
  418ee0:	mov	x3, #0x0                   	// #0
  418ee4:	mov	x2, #0x0                   	// #0
  418ee8:	mov	x1, #0x0                   	// #0
  418eec:	mov	x0, x19
  418ef0:	bl	402a30 <iconv@plt>
  418ef4:	cmn	x0, #0x1
  418ef8:	b.eq	418f34 <ferror@plt+0x16204>  // b.none
  418efc:	add	x4, sp, #0x68
  418f00:	add	x3, sp, #0x58
  418f04:	add	x2, sp, #0x60
  418f08:	add	x1, sp, #0x50
  418f0c:	mov	x0, x19
  418f10:	bl	402a30 <iconv@plt>
  418f14:	cmn	x0, #0x1
  418f18:	b.eq	418f24 <ferror@plt+0x161f4>  // b.none
  418f1c:	ldr	x1, [sp, #96]
  418f20:	cbz	x1, 418ff0 <ferror@plt+0x162c0>
  418f24:	bl	402c40 <__errno_location@plt>
  418f28:	ldr	w0, [x0]
  418f2c:	cmp	w0, #0x7
  418f30:	b.eq	418fd8 <ferror@plt+0x162a8>  // b.none
  418f34:	str	x25, [sp, #64]
  418f38:	mov	x0, x19
  418f3c:	bl	4026e0 <iconv_close@plt>
  418f40:	b	419058 <ferror@plt+0x16328>
  418f44:	lsl	x0, x20, #2
  418f48:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  418f4c:	ldr	x1, [x1, #1312]
  418f50:	add	x0, x0, #0x1
  418f54:	blr	x1
  418f58:	mov	x23, x0
  418f5c:	mov	x21, x22
  418f60:	add	x20, x22, x20
  418f64:	mov	x19, x0
  418f68:	adrp	x22, 470000 <_obstack_memory_used@@Base+0x1bc60>
  418f6c:	add	x22, x22, #0xd80
  418f70:	b	418f98 <ferror@plt+0x16268>
  418f74:	ldp	x19, x20, [sp, #16]
  418f78:	b	418fc4 <ferror@plt+0x16294>
  418f7c:	mov	x1, x22
  418f80:	mov	x0, x19
  418f84:	bl	402720 <sprintf@plt>
  418f88:	add	x19, x19, #0x4
  418f8c:	add	x21, x21, #0x1
  418f90:	cmp	x20, x21
  418f94:	b.eq	418fbc <ferror@plt+0x1628c>  // b.none
  418f98:	ldrb	w2, [x21]
  418f9c:	sub	w1, w2, #0x20
  418fa0:	and	w1, w1, #0xff
  418fa4:	cmp	w1, #0x5e
  418fa8:	b.hi	418f7c <ferror@plt+0x1624c>  // b.pmore
  418fac:	mov	x0, x19
  418fb0:	strb	w2, [x0], #1
  418fb4:	mov	x19, x0
  418fb8:	b	418f8c <ferror@plt+0x1625c>
  418fbc:	strb	wzr, [x19]
  418fc0:	ldp	x19, x20, [sp, #16]
  418fc4:	mov	x0, x23
  418fc8:	ldp	x21, x22, [sp, #32]
  418fcc:	ldp	x23, x24, [sp, #48]
  418fd0:	ldp	x29, x30, [sp], #112
  418fd4:	ret
  418fd8:	lsl	x21, x21, #1
  418fdc:	add	x0, x24, #0x520
  418fe0:	ldr	x1, [x0, #8]
  418fe4:	mov	x0, x23
  418fe8:	blr	x1
  418fec:	b	418eb8 <ferror@plt+0x16188>
  418ff0:	cbnz	x0, 418f34 <ferror@plt+0x16204>
  418ff4:	add	x4, sp, #0x68
  418ff8:	add	x3, sp, #0x58
  418ffc:	mov	x2, #0x0                   	// #0
  419000:	mov	x1, #0x0                   	// #0
  419004:	mov	x0, x19
  419008:	bl	402a30 <iconv@plt>
  41900c:	cmn	x0, #0x1
  419010:	b.ne	41903c <ferror@plt+0x1630c>  // b.any
  419014:	bl	402c40 <__errno_location@plt>
  419018:	ldr	w0, [x0]
  41901c:	cmp	w0, #0x7
  419020:	b.ne	418f34 <ferror@plt+0x16204>  // b.any
  419024:	lsl	x21, x21, #1
  419028:	add	x0, x24, #0x520
  41902c:	ldr	x1, [x0, #8]
  419030:	mov	x0, x23
  419034:	blr	x1
  419038:	b	418eb8 <ferror@plt+0x16188>
  41903c:	ldr	x0, [sp, #88]
  419040:	strb	wzr, [x0]
  419044:	mov	x0, x19
  419048:	bl	4026e0 <iconv_close@plt>
  41904c:	ldp	x19, x20, [sp, #16]
  419050:	b	418fc4 <ferror@plt+0x16294>
  419054:	str	x25, [sp, #64]
  419058:	add	x0, x20, x20, lsl #2
  41905c:	lsl	x0, x0, #1
  419060:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419064:	ldr	x1, [x1, #1312]
  419068:	add	x0, x0, #0x1
  41906c:	blr	x1
  419070:	mov	x23, x0
  419074:	mov	x21, x0
  419078:	mov	x19, #0x0                   	// #0
  41907c:	adrp	x25, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419080:	add	x25, x25, #0xd90
  419084:	b	4190b0 <ferror@plt+0x16380>
  419088:	str	x25, [sp, #64]
  41908c:	b	419058 <ferror@plt+0x16328>
  419090:	ldr	w2, [sp, #104]
  419094:	mov	x1, x25
  419098:	mov	x0, x21
  41909c:	bl	402720 <sprintf@plt>
  4190a0:	add	x21, x21, #0xa
  4190a4:	add	x19, x19, x24
  4190a8:	cmp	x20, x19
  4190ac:	b.ls	4190d8 <ferror@plt+0x163a8>  // b.plast
  4190b0:	add	x2, sp, #0x68
  4190b4:	sub	x1, x20, x19
  4190b8:	add	x0, x22, x19
  4190bc:	bl	416178 <ferror@plt+0x13448>
  4190c0:	sxtw	x24, w0
  4190c4:	cmp	w0, #0x1
  4190c8:	b.ne	419090 <ferror@plt+0x16360>  // b.any
  4190cc:	ldrb	w0, [x22, x19]
  4190d0:	strb	w0, [x21], #1
  4190d4:	b	4190a4 <ferror@plt+0x16374>
  4190d8:	strb	wzr, [x21]
  4190dc:	ldp	x19, x20, [sp, #16]
  4190e0:	ldr	x25, [sp, #64]
  4190e4:	b	418fc4 <ferror@plt+0x16294>
  4190e8:	mov	x23, x22
  4190ec:	b	418fc4 <ferror@plt+0x16294>
  4190f0:	ldp	x19, x20, [sp, #16]
  4190f4:	b	418fc4 <ferror@plt+0x16294>
  4190f8:	stp	x29, x30, [sp, #-64]!
  4190fc:	mov	x29, sp
  419100:	stp	x19, x20, [sp, #16]
  419104:	mov	x19, x0
  419108:	mov	x20, x1
  41910c:	ldr	x0, [x1, #8]
  419110:	cbnz	x0, 419148 <ferror@plt+0x16418>
  419114:	ldr	x0, [x19, #8]
  419118:	ldr	x2, [x1]
  41911c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  419120:	add	x1, x1, #0xe00
  419124:	add	x0, x0, #0xcc
  419128:	bl	402720 <sprintf@plt>
  41912c:	ldr	x1, [x19, #8]
  419130:	add	x1, x1, #0xcc
  419134:	mov	x0, x19
  419138:	bl	416f20 <ferror@plt+0x141f0>
  41913c:	ldp	x19, x20, [sp, #16]
  419140:	ldp	x29, x30, [sp], #64
  419144:	ret
  419148:	stp	x21, x22, [sp, #32]
  41914c:	str	x23, [sp, #48]
  419150:	mov	w1, #0x5b                  	// #91
  419154:	mov	x0, x19
  419158:	bl	416928 <ferror@plt+0x13bf8>
  41915c:	mov	x21, #0x0                   	// #0
  419160:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x19c60>
  419164:	add	x22, x22, #0xe00
  419168:	mov	w23, #0x2c                  	// #44
  41916c:	b	4191c8 <ferror@plt+0x16498>
  419170:	mov	w1, w23
  419174:	mov	x0, x19
  419178:	bl	416928 <ferror@plt+0x13bf8>
  41917c:	ldr	x0, [x19, #8]
  419180:	ldr	x2, [x20, x21, lsl #3]
  419184:	mov	x1, x22
  419188:	add	x0, x0, #0xcc
  41918c:	bl	402720 <sprintf@plt>
  419190:	ldr	x1, [x19, #8]
  419194:	add	x1, x1, #0xcc
  419198:	mov	x0, x19
  41919c:	bl	416f20 <ferror@plt+0x141f0>
  4191a0:	add	w0, w21, #0x1
  4191a4:	cmp	w0, #0x1
  4191a8:	b.ls	4191c4 <ferror@plt+0x16494>  // b.plast
  4191ac:	mov	w1, #0x5d                  	// #93
  4191b0:	mov	x0, x19
  4191b4:	bl	416928 <ferror@plt+0x13bf8>
  4191b8:	ldp	x21, x22, [sp, #32]
  4191bc:	ldr	x23, [sp, #48]
  4191c0:	b	41913c <ferror@plt+0x1640c>
  4191c4:	add	x21, x21, #0x1
  4191c8:	cbnz	w21, 419170 <ferror@plt+0x16440>
  4191cc:	ldr	x0, [x19, #8]
  4191d0:	ldr	x2, [x20, x21, lsl #3]
  4191d4:	mov	x1, x22
  4191d8:	add	x0, x0, #0xcc
  4191dc:	bl	402720 <sprintf@plt>
  4191e0:	ldr	x1, [x19, #8]
  4191e4:	add	x1, x1, #0xcc
  4191e8:	mov	x0, x19
  4191ec:	bl	416f20 <ferror@plt+0x141f0>
  4191f0:	b	4191c4 <ferror@plt+0x16494>
  4191f4:	stp	x29, x30, [sp, #-64]!
  4191f8:	mov	x29, sp
  4191fc:	stp	x19, x20, [sp, #16]
  419200:	mov	x19, x0
  419204:	mov	x20, x1
  419208:	ldrh	w0, [x1, #2]
  41920c:	cbnz	w0, 419244 <ferror@plt+0x16514>
  419210:	ldr	x0, [x19, #8]
  419214:	ldrh	w2, [x1]
  419218:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  41921c:	add	x1, x1, #0xe00
  419220:	add	x0, x0, #0xcc
  419224:	bl	402720 <sprintf@plt>
  419228:	ldr	x1, [x19, #8]
  41922c:	add	x1, x1, #0xcc
  419230:	mov	x0, x19
  419234:	bl	416f20 <ferror@plt+0x141f0>
  419238:	ldp	x19, x20, [sp, #16]
  41923c:	ldp	x29, x30, [sp], #64
  419240:	ret
  419244:	stp	x21, x22, [sp, #32]
  419248:	str	x23, [sp, #48]
  41924c:	mov	w1, #0x5b                  	// #91
  419250:	mov	x0, x19
  419254:	bl	416928 <ferror@plt+0x13bf8>
  419258:	mov	x21, #0x0                   	// #0
  41925c:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x19c60>
  419260:	add	x22, x22, #0xe00
  419264:	mov	w23, #0x2c                  	// #44
  419268:	b	4192c4 <ferror@plt+0x16594>
  41926c:	mov	w1, w23
  419270:	mov	x0, x19
  419274:	bl	416928 <ferror@plt+0x13bf8>
  419278:	ldr	x0, [x19, #8]
  41927c:	ldrh	w2, [x20, x21, lsl #1]
  419280:	mov	x1, x22
  419284:	add	x0, x0, #0xcc
  419288:	bl	402720 <sprintf@plt>
  41928c:	ldr	x1, [x19, #8]
  419290:	add	x1, x1, #0xcc
  419294:	mov	x0, x19
  419298:	bl	416f20 <ferror@plt+0x141f0>
  41929c:	add	w0, w21, #0x1
  4192a0:	cmp	w0, #0x1
  4192a4:	b.ls	4192c0 <ferror@plt+0x16590>  // b.plast
  4192a8:	mov	w1, #0x5d                  	// #93
  4192ac:	mov	x0, x19
  4192b0:	bl	416928 <ferror@plt+0x13bf8>
  4192b4:	ldp	x21, x22, [sp, #32]
  4192b8:	ldr	x23, [sp, #48]
  4192bc:	b	419238 <ferror@plt+0x16508>
  4192c0:	add	x21, x21, #0x1
  4192c4:	cbnz	w21, 41926c <ferror@plt+0x1653c>
  4192c8:	ldr	x0, [x19, #8]
  4192cc:	ldrh	w2, [x20, x21, lsl #1]
  4192d0:	mov	x1, x22
  4192d4:	add	x0, x0, #0xcc
  4192d8:	bl	402720 <sprintf@plt>
  4192dc:	ldr	x1, [x19, #8]
  4192e0:	add	x1, x1, #0xcc
  4192e4:	mov	x0, x19
  4192e8:	bl	416f20 <ferror@plt+0x141f0>
  4192ec:	b	4192c0 <ferror@plt+0x16590>
  4192f0:	stp	x29, x30, [sp, #-64]!
  4192f4:	mov	x29, sp
  4192f8:	stp	x19, x20, [sp, #16]
  4192fc:	mov	x19, x0
  419300:	mov	x20, x1
  419304:	ldr	x0, [x1, #8]
  419308:	cbnz	x0, 419340 <ferror@plt+0x16610>
  41930c:	ldr	x0, [x19, #8]
  419310:	ldr	x2, [x1]
  419314:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  419318:	add	x1, x1, #0xe00
  41931c:	add	x0, x0, #0xcc
  419320:	bl	402720 <sprintf@plt>
  419324:	ldr	x1, [x19, #8]
  419328:	add	x1, x1, #0xcc
  41932c:	mov	x0, x19
  419330:	bl	416f20 <ferror@plt+0x141f0>
  419334:	ldp	x19, x20, [sp, #16]
  419338:	ldp	x29, x30, [sp], #64
  41933c:	ret
  419340:	stp	x21, x22, [sp, #32]
  419344:	str	x23, [sp, #48]
  419348:	mov	w1, #0x5b                  	// #91
  41934c:	mov	x0, x19
  419350:	bl	416928 <ferror@plt+0x13bf8>
  419354:	mov	x21, #0x0                   	// #0
  419358:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x19c60>
  41935c:	add	x22, x22, #0xe00
  419360:	mov	w23, #0x2c                  	// #44
  419364:	b	4193c0 <ferror@plt+0x16690>
  419368:	mov	w1, w23
  41936c:	mov	x0, x19
  419370:	bl	416928 <ferror@plt+0x13bf8>
  419374:	ldr	x0, [x19, #8]
  419378:	ldr	x2, [x20, x21, lsl #3]
  41937c:	mov	x1, x22
  419380:	add	x0, x0, #0xcc
  419384:	bl	402720 <sprintf@plt>
  419388:	ldr	x1, [x19, #8]
  41938c:	add	x1, x1, #0xcc
  419390:	mov	x0, x19
  419394:	bl	416f20 <ferror@plt+0x141f0>
  419398:	add	w0, w21, #0x1
  41939c:	cmp	w0, #0x1
  4193a0:	b.ls	4193bc <ferror@plt+0x1668c>  // b.plast
  4193a4:	mov	w1, #0x5d                  	// #93
  4193a8:	mov	x0, x19
  4193ac:	bl	416928 <ferror@plt+0x13bf8>
  4193b0:	ldp	x21, x22, [sp, #32]
  4193b4:	ldr	x23, [sp, #48]
  4193b8:	b	419334 <ferror@plt+0x16604>
  4193bc:	add	x21, x21, #0x1
  4193c0:	cbnz	w21, 419368 <ferror@plt+0x16638>
  4193c4:	ldr	x0, [x19, #8]
  4193c8:	ldr	x2, [x20, x21, lsl #3]
  4193cc:	mov	x1, x22
  4193d0:	add	x0, x0, #0xcc
  4193d4:	bl	402720 <sprintf@plt>
  4193d8:	ldr	x1, [x19, #8]
  4193dc:	add	x1, x1, #0xcc
  4193e0:	mov	x0, x19
  4193e4:	bl	416f20 <ferror@plt+0x141f0>
  4193e8:	b	4193bc <ferror@plt+0x1668c>
  4193ec:	stp	x29, x30, [sp, #-32]!
  4193f0:	mov	x29, sp
  4193f4:	str	x19, [sp, #16]
  4193f8:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x19c60>
  4193fc:	add	x19, x19, #0xd70
  419400:	mov	x1, x19
  419404:	mov	w0, #0x0                   	// #0
  419408:	bl	402d20 <setlocale@plt>
  41940c:	mov	x1, x19
  419410:	mov	w0, #0x5                   	// #5
  419414:	bl	402d20 <setlocale@plt>
  419418:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41941c:	add	x19, x19, #0xdd0
  419420:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419424:	add	x1, x1, #0xdb8
  419428:	mov	x0, x19
  41942c:	bl	402840 <bindtextdomain@plt>
  419430:	mov	x0, x19
  419434:	bl	402a00 <textdomain@plt>
  419438:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41943c:	add	x0, x0, #0xdd8
  419440:	bl	402cd0 <gettext@plt>
  419444:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419448:	add	x19, x1, #0x530
  41944c:	str	x0, [x1, #1328]
  419450:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  419454:	add	x0, x0, #0x1d8
  419458:	bl	402cd0 <gettext@plt>
  41945c:	str	x0, [x19, #8]
  419460:	mov	w0, #0xe                   	// #14
  419464:	bl	4027c0 <nl_langinfo@plt>
  419468:	mov	x19, x0
  41946c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419470:	str	x19, [x0, #2336]
  419474:	cbz	x19, 4194ac <ferror@plt+0x1677c>
  419478:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41947c:	add	x1, x1, #0xde0
  419480:	mov	x0, x19
  419484:	bl	4028c0 <strcasecmp@plt>
  419488:	cbz	w0, 4194a0 <ferror@plt+0x16770>
  41948c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419490:	add	x1, x1, #0xde8
  419494:	mov	x0, x19
  419498:	bl	4028c0 <strcasecmp@plt>
  41949c:	cbnz	w0, 4194ac <ferror@plt+0x1677c>
  4194a0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4194a4:	mov	w1, #0x1                   	// #1
  4194a8:	strb	w1, [x0, #2344]
  4194ac:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4194b0:	add	x1, x1, #0xdd8
  4194b4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4194b8:	ldr	x0, [x0, #1328]
  4194bc:	bl	402a20 <strcmp@plt>
  4194c0:	cbnz	w0, 419514 <ferror@plt+0x167e4>
  4194c4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  4194c8:	add	x1, x1, #0x1d8
  4194cc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4194d0:	ldr	x0, [x0, #1336]
  4194d4:	bl	402a20 <strcmp@plt>
  4194d8:	cbnz	w0, 419514 <ferror@plt+0x167e4>
  4194dc:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4194e0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  4194e4:	add	x0, x0, #0x1d8
  4194e8:	str	x0, [x1, #1328]
  4194ec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4194f0:	ldrb	w0, [x0, #2344]
  4194f4:	cbz	w0, 419514 <ferror@plt+0x167e4>
  4194f8:	add	x2, x1, #0x530
  4194fc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419500:	add	x0, x0, #0xdf0
  419504:	str	x0, [x1, #1328]
  419508:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41950c:	add	x0, x0, #0xdf8
  419510:	str	x0, [x2, #8]
  419514:	ldr	x19, [sp, #16]
  419518:	ldp	x29, x30, [sp], #32
  41951c:	ret
  419520:	stp	x29, x30, [sp, #-48]!
  419524:	mov	x29, sp
  419528:	stp	x19, x20, [sp, #16]
  41952c:	str	x21, [sp, #32]
  419530:	mov	x20, x0
  419534:	mov	x2, #0x0                   	// #0
  419538:	mov	x1, x0
  41953c:	mov	x0, #0x0                   	// #0
  419540:	bl	4026a0 <mbstowcs@plt>
  419544:	mov	x19, x0
  419548:	add	x2, x0, #0x1
  41954c:	lsl	x1, x2, #2
  419550:	add	x1, x1, #0xf
  419554:	and	x1, x1, #0xfffffffffffffff0
  419558:	sub	sp, sp, x1
  41955c:	mov	x21, sp
  419560:	mov	x1, x20
  419564:	mov	x0, x21
  419568:	bl	4026a0 <mbstowcs@plt>
  41956c:	mov	x1, x19
  419570:	mov	x0, x21
  419574:	bl	402820 <wcswidth@plt>
  419578:	sxtw	x0, w0
  41957c:	mov	sp, x29
  419580:	ldp	x19, x20, [sp, #16]
  419584:	ldr	x21, [sp, #32]
  419588:	ldp	x29, x30, [sp], #48
  41958c:	ret
  419590:	stp	x29, x30, [sp, #-32]!
  419594:	mov	x29, sp
  419598:	stp	x19, x20, [sp, #16]
  41959c:	bl	419520 <ferror@plt+0x167f0>
  4195a0:	mov	x19, x0
  4195a4:	add	x0, x0, #0x1
  4195a8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4195ac:	mov	x20, x0
  4195b0:	mov	x2, x19
  4195b4:	mov	w1, #0x20                  	// #32
  4195b8:	bl	402890 <memset@plt>
  4195bc:	strb	wzr, [x20, x19]
  4195c0:	mov	x0, x20
  4195c4:	ldp	x19, x20, [sp, #16]
  4195c8:	ldp	x29, x30, [sp], #32
  4195cc:	ret
  4195d0:	cmp	w0, w1
  4195d4:	b.cs	419600 <ferror@plt+0x168d0>  // b.hs, b.nlast
  4195d8:	mov	w2, #0x4                   	// #4
  4195dc:	cbz	w0, 4195f4 <ferror@plt+0x168c4>
  4195e0:	lsl	w3, w0, #1
  4195e4:	add	w2, w0, w0, lsl #1
  4195e8:	lsr	w2, w2, #1
  4195ec:	cmp	w0, #0xf
  4195f0:	csel	w2, w2, w3, hi  // hi = pmore
  4195f4:	cmp	w2, w1
  4195f8:	csel	w0, w2, w1, cs  // cs = hs, nlast
  4195fc:	ret
  419600:	stp	x29, x30, [sp, #-16]!
  419604:	mov	x29, sp
  419608:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41960c:	add	x2, x2, #0xe58
  419610:	mov	w1, #0xa2                  	// #162
  419614:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419618:	add	x0, x0, #0xe70
  41961c:	bl	4102b4 <ferror@plt+0xd584>
  419620:	stp	x29, x30, [sp, #-144]!
  419624:	mov	x29, sp
  419628:	stp	x19, x20, [sp, #16]
  41962c:	stp	x21, x22, [sp, #32]
  419630:	stp	x23, x24, [sp, #48]
  419634:	mov	x19, x1
  419638:	mov	x20, x2
  41963c:	mov	x21, x3
  419640:	and	w23, w4, #0xff
  419644:	str	x1, [sp, #120]
  419648:	asr	x22, x1, #3
  41964c:	mov	w2, w22
  419650:	add	x1, sp, #0x78
  419654:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419658:	ldr	x0, [x0, #2400]
  41965c:	bl	41a594 <ferror@plt+0x17864>
  419660:	ldr	x0, [x0]
  419664:	cbz	x0, 4196c4 <ferror@plt+0x16994>
  419668:	str	x19, [sp, #136]
  41966c:	mov	w2, w22
  419670:	add	x1, sp, #0x88
  419674:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419678:	ldr	x0, [x0, #2400]
  41967c:	bl	41a594 <ferror@plt+0x17864>
  419680:	ldr	x24, [x0]
  419684:	cbz	x24, 4196a4 <ferror@plt+0x16974>
  419688:	ldr	x24, [x0, #8]
  41968c:	ldr	x2, [x24]
  419690:	cmp	x20, x2
  419694:	b.hi	41984c <ferror@plt+0x16b1c>  // b.pmore
  419698:	sub	x2, x2, x20
  41969c:	str	x2, [x24]
  4196a0:	cbnz	w23, 41986c <ferror@plt+0x16b3c>
  4196a4:	ldr	x3, [x24, #32]
  4196a8:	sub	x21, x3, x21
  4196ac:	str	x21, [x24, #32]
  4196b0:	ldp	x19, x20, [sp, #16]
  4196b4:	ldp	x21, x22, [sp, #32]
  4196b8:	ldp	x23, x24, [sp, #48]
  4196bc:	ldp	x29, x30, [sp], #144
  4196c0:	ret
  4196c4:	stp	x25, x26, [sp, #64]
  4196c8:	mov	x0, #0x20                  	// #32
  4196cc:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4196d0:	mov	x25, x0
  4196d4:	str	xzr, [x0]
  4196d8:	str	xzr, [x0, #8]
  4196dc:	str	wzr, [x0, #16]
  4196e0:	mov	w0, #0x3                   	// #3
  4196e4:	str	w0, [x25, #20]
  4196e8:	strb	wzr, [x25, #24]
  4196ec:	str	x19, [sp, #104]
  4196f0:	str	x25, [sp, #112]
  4196f4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4196f8:	ldr	x24, [x0, #2392]
  4196fc:	str	xzr, [sp, #120]
  419700:	mov	w2, #0x0                   	// #0
  419704:	mov	x1, #0x8                   	// #8
  419708:	add	x0, sp, #0x78
  41970c:	bl	453c54 <ferror@plt+0x50f24>
  419710:	ldr	x1, [x25, #8]
  419714:	str	x1, [sp, #120]
  419718:	mov	w2, w0
  41971c:	mov	x1, #0x8                   	// #8
  419720:	add	x0, sp, #0x78
  419724:	bl	453c54 <ferror@plt+0x50f24>
  419728:	ldr	w1, [x25, #16]
  41972c:	mov	w2, #0x79b9                	// #31161
  419730:	movk	w2, #0x9e37, lsl #16
  419734:	sub	w2, w2, w0
  419738:	sub	w2, w2, w1
  41973c:	eor	w2, w2, w0, lsr #13
  419740:	sub	w1, w1, w0
  419744:	sub	w1, w1, w2
  419748:	eor	w1, w1, w2, lsl #8
  41974c:	sub	w0, w0, w2
  419750:	sub	w0, w0, w1
  419754:	eor	w0, w0, w1, lsr #13
  419758:	sub	w2, w2, w1
  41975c:	sub	w2, w2, w0
  419760:	eor	w2, w2, w0, lsr #12
  419764:	sub	w1, w1, w0
  419768:	sub	w1, w1, w2
  41976c:	eor	w1, w1, w2, lsl #16
  419770:	sub	w0, w0, w2
  419774:	sub	w0, w0, w1
  419778:	eor	w0, w0, w1, lsr #5
  41977c:	sub	w3, w2, w1
  419780:	sub	w3, w3, w0
  419784:	eor	w3, w3, w0, lsr #3
  419788:	sub	w2, w1, w0
  41978c:	sub	w2, w2, w3
  419790:	eor	w2, w2, w3, lsl #10
  419794:	sub	w0, w0, w3
  419798:	sub	w0, w0, w2
  41979c:	eor	w2, w0, w2, lsr #15
  4197a0:	add	x1, sp, #0x70
  4197a4:	mov	x0, x24
  4197a8:	bl	41a690 <ferror@plt+0x17960>
  4197ac:	mov	x24, x0
  4197b0:	ldr	x0, [x0]
  4197b4:	cbz	x0, 4198a8 <ferror@plt+0x16b78>
  4197b8:	ldr	x0, [sp, #112]
  4197bc:	cbz	x0, 4197c8 <ferror@plt+0x16a98>
  4197c0:	mov	x1, #0x20                  	// #32
  4197c4:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  4197c8:	ldr	x24, [x24, #8]
  4197cc:	ldr	x0, [x24, #24]
  4197d0:	add	x0, x0, #0x1
  4197d4:	str	x0, [x24, #24]
  4197d8:	ldr	x2, [sp, #104]
  4197dc:	ubfx	x2, x2, #3, #32
  4197e0:	add	x1, sp, #0x68
  4197e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4197e8:	ldr	x0, [x0, #2400]
  4197ec:	bl	41a594 <ferror@plt+0x17864>
  4197f0:	ldr	x0, [x0]
  4197f4:	cbz	x0, 41980c <ferror@plt+0x16adc>
  4197f8:	ldp	x25, x26, [sp, #64]
  4197fc:	b	419668 <ferror@plt+0x16938>
  419800:	ldr	x1, [sp, #112]
  419804:	str	x1, [x0]
  419808:	b	4199a4 <ferror@plt+0x16c74>
  41980c:	mov	w3, #0x1                   	// #1
  419810:	ldr	x2, [sp, #104]
  419814:	ubfx	x2, x2, #3, #32
  419818:	add	x1, sp, #0x68
  41981c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419820:	ldr	x0, [x0, #2400]
  419824:	bl	41ae68 <ferror@plt+0x18138>
  419828:	ldr	x1, [x0]
  41982c:	cbz	x1, 419840 <ferror@plt+0x16b10>
  419830:	str	x24, [x0, #8]
  419834:	str	xzr, [x0, #16]
  419838:	ldp	x25, x26, [sp, #64]
  41983c:	b	419668 <ferror@plt+0x16938>
  419840:	ldr	x1, [sp, #104]
  419844:	str	x1, [x0]
  419848:	b	419830 <ferror@plt+0x16b00>
  41984c:	stp	x25, x26, [sp, #64]
  419850:	str	x27, [sp, #80]
  419854:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419858:	add	x2, x2, #0xe80
  41985c:	mov	w1, #0x97                  	// #151
  419860:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419864:	add	x0, x0, #0xe98
  419868:	bl	4102b4 <ferror@plt+0xd584>
  41986c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419870:	ldr	x20, [x0, #2400]
  419874:	str	x19, [sp, #128]
  419878:	mov	w3, #0x0                   	// #0
  41987c:	mov	w2, w22
  419880:	add	x1, sp, #0x80
  419884:	mov	x0, x20
  419888:	bl	41ae68 <ferror@plt+0x18138>
  41988c:	cbz	x0, 4196a4 <ferror@plt+0x16974>
  419890:	mov	x1, #0x1                   	// #1
  419894:	str	x1, [x0]
  419898:	ldr	x0, [x20, #24]
  41989c:	add	x0, x0, x1
  4198a0:	str	x0, [x20, #24]
  4198a4:	b	4196a4 <ferror@plt+0x16974>
  4198a8:	str	x27, [sp, #80]
  4198ac:	mov	x0, #0x38                  	// #56
  4198b0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4198b4:	mov	x24, x0
  4198b8:	str	xzr, [x0]
  4198bc:	str	xzr, [x0, #8]
  4198c0:	str	xzr, [x0, #16]
  4198c4:	mov	x25, #0x1                   	// #1
  4198c8:	str	x25, [x0, #24]
  4198cc:	str	xzr, [x0, #32]
  4198d0:	str	xzr, [x0, #40]
  4198d4:	str	xzr, [x0, #48]
  4198d8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4198dc:	ldr	x26, [x0, #2392]
  4198e0:	ldr	x27, [sp, #112]
  4198e4:	ldr	x0, [x27]
  4198e8:	str	x0, [sp, #120]
  4198ec:	mov	w2, #0x0                   	// #0
  4198f0:	mov	x1, #0x8                   	// #8
  4198f4:	add	x0, sp, #0x78
  4198f8:	bl	453c54 <ferror@plt+0x50f24>
  4198fc:	ldr	x1, [x27, #8]
  419900:	str	x1, [sp, #120]
  419904:	mov	w2, w0
  419908:	mov	x1, #0x8                   	// #8
  41990c:	add	x0, sp, #0x78
  419910:	bl	453c54 <ferror@plt+0x50f24>
  419914:	ldr	w1, [x27, #16]
  419918:	mov	w3, #0x79b9                	// #31161
  41991c:	movk	w3, #0x9e37, lsl #16
  419920:	sub	w3, w3, w1
  419924:	sub	w3, w3, w0
  419928:	eor	w3, w3, w0, lsr #13
  41992c:	sub	w2, w1, w0
  419930:	sub	w2, w2, w3
  419934:	eor	w2, w2, w3, lsl #8
  419938:	sub	w1, w0, w3
  41993c:	sub	w1, w1, w2
  419940:	eor	w1, w1, w2, lsr #13
  419944:	sub	w3, w3, w2
  419948:	sub	w3, w3, w1
  41994c:	eor	w3, w3, w1, lsr #12
  419950:	sub	w0, w2, w1
  419954:	sub	w0, w0, w3
  419958:	eor	w0, w0, w3, lsl #16
  41995c:	sub	w1, w1, w3
  419960:	sub	w1, w1, w0
  419964:	eor	w1, w1, w0, lsr #5
  419968:	sub	w3, w3, w0
  41996c:	sub	w3, w3, w1
  419970:	eor	w3, w3, w1, lsr #3
  419974:	sub	w2, w0, w1
  419978:	sub	w2, w2, w3
  41997c:	eor	w2, w2, w3, lsl #10
  419980:	sub	w1, w1, w3
  419984:	sub	w1, w1, w2
  419988:	mov	w3, w25
  41998c:	eor	w2, w1, w2, lsr #15
  419990:	add	x1, sp, #0x70
  419994:	mov	x0, x26
  419998:	bl	41aa74 <ferror@plt+0x17d44>
  41999c:	ldr	x1, [x0]
  4199a0:	cbz	x1, 419800 <ferror@plt+0x16ad0>
  4199a4:	str	x24, [x0, #8]
  4199a8:	ldr	x27, [sp, #80]
  4199ac:	b	4197d8 <ferror@plt+0x16aa8>
  4199b0:	stp	x29, x30, [sp, #-112]!
  4199b4:	mov	x29, sp
  4199b8:	stp	x19, x20, [sp, #16]
  4199bc:	stp	x21, x22, [sp, #32]
  4199c0:	stp	x23, x24, [sp, #48]
  4199c4:	mov	x19, x1
  4199c8:	mov	x20, x2
  4199cc:	mov	x21, x3
  4199d0:	mov	x0, #0x20                  	// #32
  4199d4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4199d8:	mov	x23, x0
  4199dc:	str	xzr, [x0]
  4199e0:	str	xzr, [x0, #8]
  4199e4:	str	wzr, [x0, #16]
  4199e8:	mov	w0, #0x3                   	// #3
  4199ec:	str	w0, [x23, #20]
  4199f0:	strb	wzr, [x23, #24]
  4199f4:	str	x19, [sp, #88]
  4199f8:	str	x23, [sp, #96]
  4199fc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419a00:	ldr	x22, [x0, #2392]
  419a04:	str	xzr, [sp, #104]
  419a08:	mov	w2, #0x0                   	// #0
  419a0c:	mov	x1, #0x8                   	// #8
  419a10:	add	x0, sp, #0x68
  419a14:	bl	453c54 <ferror@plt+0x50f24>
  419a18:	ldr	x1, [x23, #8]
  419a1c:	str	x1, [sp, #104]
  419a20:	mov	w2, w0
  419a24:	mov	x1, #0x8                   	// #8
  419a28:	add	x0, sp, #0x68
  419a2c:	bl	453c54 <ferror@plt+0x50f24>
  419a30:	ldr	w1, [x23, #16]
  419a34:	mov	w2, #0x79b9                	// #31161
  419a38:	movk	w2, #0x9e37, lsl #16
  419a3c:	sub	w2, w2, w0
  419a40:	sub	w2, w2, w1
  419a44:	eor	w2, w2, w0, lsr #13
  419a48:	sub	w1, w1, w0
  419a4c:	sub	w1, w1, w2
  419a50:	eor	w1, w1, w2, lsl #8
  419a54:	sub	w0, w0, w2
  419a58:	sub	w0, w0, w1
  419a5c:	eor	w0, w0, w1, lsr #13
  419a60:	sub	w2, w2, w1
  419a64:	sub	w2, w2, w0
  419a68:	eor	w2, w2, w0, lsr #12
  419a6c:	sub	w1, w1, w0
  419a70:	sub	w1, w1, w2
  419a74:	eor	w1, w1, w2, lsl #16
  419a78:	sub	w0, w0, w2
  419a7c:	sub	w0, w0, w1
  419a80:	eor	w0, w0, w1, lsr #5
  419a84:	sub	w3, w2, w1
  419a88:	sub	w3, w3, w0
  419a8c:	eor	w3, w3, w0, lsr #3
  419a90:	sub	w2, w1, w0
  419a94:	sub	w2, w2, w3
  419a98:	eor	w2, w2, w3, lsl #10
  419a9c:	sub	w0, w0, w3
  419aa0:	sub	w0, w0, w2
  419aa4:	eor	w2, w0, w2, lsr #15
  419aa8:	add	x1, sp, #0x60
  419aac:	mov	x0, x22
  419ab0:	bl	41a690 <ferror@plt+0x17960>
  419ab4:	mov	x22, x0
  419ab8:	ldr	x0, [x0]
  419abc:	cbz	x0, 419bcc <ferror@plt+0x16e9c>
  419ac0:	ldr	x0, [sp, #96]
  419ac4:	cbz	x0, 419ad0 <ferror@plt+0x16da0>
  419ac8:	mov	x1, #0x20                  	// #32
  419acc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  419ad0:	ldr	x22, [x22, #8]
  419ad4:	ldr	x0, [x22, #24]
  419ad8:	add	x0, x0, #0x1
  419adc:	str	x0, [x22, #24]
  419ae0:	ldr	x2, [sp, #88]
  419ae4:	ubfx	x2, x2, #3, #32
  419ae8:	add	x1, sp, #0x58
  419aec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419af0:	ldr	x0, [x0, #2400]
  419af4:	bl	41a594 <ferror@plt+0x17864>
  419af8:	ldr	x0, [x0]
  419afc:	cbz	x0, 419b90 <ferror@plt+0x16e60>
  419b00:	mul	x22, x20, x21
  419b04:	str	x19, [sp, #104]
  419b08:	ubfx	x2, x19, #3, #32
  419b0c:	add	x1, sp, #0x68
  419b10:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419b14:	ldr	x0, [x0, #2400]
  419b18:	bl	41a594 <ferror@plt+0x17864>
  419b1c:	ldr	x1, [x0]
  419b20:	cbz	x1, 419b50 <ferror@plt+0x16e20>
  419b24:	ldr	x1, [x0, #8]
  419b28:	ldr	x0, [x1]
  419b2c:	add	x0, x22, x0
  419b30:	str	x0, [x1]
  419b34:	ldr	x2, [x1, #8]
  419b38:	add	x2, x2, #0x1
  419b3c:	str	x2, [x1, #8]
  419b40:	ldr	x2, [x1, #16]
  419b44:	cmp	x0, x2
  419b48:	b.ls	419b50 <ferror@plt+0x16e20>  // b.plast
  419b4c:	str	x0, [x1, #16]
  419b50:	str	x21, [x1, #48]
  419b54:	ldr	x2, [x1, #32]
  419b58:	add	x20, x20, x2
  419b5c:	str	x20, [x1, #32]
  419b60:	ldr	x0, [x1, #40]
  419b64:	cmp	x20, x0
  419b68:	b.ls	419b70 <ferror@plt+0x16e40>  // b.plast
  419b6c:	str	x20, [x1, #40]
  419b70:	ldp	x19, x20, [sp, #16]
  419b74:	ldp	x21, x22, [sp, #32]
  419b78:	ldp	x23, x24, [sp, #48]
  419b7c:	ldp	x29, x30, [sp], #112
  419b80:	ret
  419b84:	ldr	x1, [sp, #96]
  419b88:	str	x1, [x0]
  419b8c:	b	419cc8 <ferror@plt+0x16f98>
  419b90:	mov	w3, #0x1                   	// #1
  419b94:	ldr	x2, [sp, #88]
  419b98:	ubfx	x2, x2, #3, #32
  419b9c:	add	x1, sp, #0x58
  419ba0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419ba4:	ldr	x0, [x0, #2400]
  419ba8:	bl	41ae68 <ferror@plt+0x18138>
  419bac:	ldr	x1, [x0]
  419bb0:	cbz	x1, 419bc0 <ferror@plt+0x16e90>
  419bb4:	str	x22, [x0, #8]
  419bb8:	str	xzr, [x0, #16]
  419bbc:	b	419b00 <ferror@plt+0x16dd0>
  419bc0:	ldr	x1, [sp, #88]
  419bc4:	str	x1, [x0]
  419bc8:	b	419bb4 <ferror@plt+0x16e84>
  419bcc:	str	x25, [sp, #64]
  419bd0:	mov	x0, #0x38                  	// #56
  419bd4:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  419bd8:	mov	x22, x0
  419bdc:	str	xzr, [x0]
  419be0:	str	xzr, [x0, #8]
  419be4:	str	xzr, [x0, #16]
  419be8:	mov	x23, #0x1                   	// #1
  419bec:	str	x23, [x0, #24]
  419bf0:	str	xzr, [x0, #32]
  419bf4:	str	xzr, [x0, #40]
  419bf8:	str	xzr, [x0, #48]
  419bfc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419c00:	ldr	x24, [x0, #2392]
  419c04:	ldr	x25, [sp, #96]
  419c08:	ldr	x0, [x25]
  419c0c:	str	x0, [sp, #104]
  419c10:	mov	w2, #0x0                   	// #0
  419c14:	mov	x1, #0x8                   	// #8
  419c18:	add	x0, sp, #0x68
  419c1c:	bl	453c54 <ferror@plt+0x50f24>
  419c20:	ldr	x1, [x25, #8]
  419c24:	str	x1, [sp, #104]
  419c28:	mov	w2, w0
  419c2c:	mov	x1, #0x8                   	// #8
  419c30:	add	x0, sp, #0x68
  419c34:	bl	453c54 <ferror@plt+0x50f24>
  419c38:	ldr	w2, [x25, #16]
  419c3c:	mov	w3, #0x79b9                	// #31161
  419c40:	movk	w3, #0x9e37, lsl #16
  419c44:	sub	w3, w3, w2
  419c48:	sub	w3, w3, w0
  419c4c:	eor	w3, w3, w0, lsr #13
  419c50:	sub	w2, w2, w0
  419c54:	sub	w2, w2, w3
  419c58:	eor	w2, w2, w3, lsl #8
  419c5c:	sub	w1, w0, w3
  419c60:	sub	w1, w1, w2
  419c64:	eor	w1, w1, w2, lsr #13
  419c68:	sub	w3, w3, w2
  419c6c:	sub	w3, w3, w1
  419c70:	eor	w3, w3, w1, lsr #12
  419c74:	sub	w0, w2, w1
  419c78:	sub	w0, w0, w3
  419c7c:	eor	w0, w0, w3, lsl #16
  419c80:	sub	w1, w1, w3
  419c84:	sub	w1, w1, w0
  419c88:	eor	w1, w1, w0, lsr #5
  419c8c:	sub	w3, w3, w0
  419c90:	sub	w3, w3, w1
  419c94:	eor	w3, w3, w1, lsr #3
  419c98:	sub	w2, w0, w1
  419c9c:	sub	w2, w2, w3
  419ca0:	eor	w2, w2, w3, lsl #10
  419ca4:	sub	w1, w1, w3
  419ca8:	sub	w1, w1, w2
  419cac:	mov	w3, w23
  419cb0:	eor	w2, w1, w2, lsr #15
  419cb4:	add	x1, sp, #0x60
  419cb8:	mov	x0, x24
  419cbc:	bl	41aa74 <ferror@plt+0x17d44>
  419cc0:	ldr	x1, [x0]
  419cc4:	cbz	x1, 419b84 <ferror@plt+0x16e54>
  419cc8:	str	x22, [x0, #8]
  419ccc:	ldr	x25, [sp, #64]
  419cd0:	b	419ae0 <ferror@plt+0x16db0>
  419cd4:	sub	sp, sp, #0x90
  419cd8:	stp	x29, x30, [sp, #16]
  419cdc:	add	x29, sp, #0x10
  419ce0:	stp	x19, x20, [sp, #32]
  419ce4:	stp	x21, x22, [sp, #48]
  419ce8:	str	x23, [sp, #64]
  419cec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419cf0:	ldr	x1, [x0, #1424]
  419cf4:	mov	w0, #0xa                   	// #10
  419cf8:	bl	402750 <fputc@plt>
  419cfc:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419d00:	add	x19, x19, #0x930
  419d04:	ldr	x1, [x19, #40]
  419d08:	ldr	x2, [x1, #16]
  419d0c:	ldr	x0, [x1, #24]
  419d10:	mov	x1, #0x10                  	// #16
  419d14:	sub	x0, x2, x0
  419d18:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  419d1c:	mov	x22, x0
  419d20:	ldr	x0, [x19, #40]
  419d24:	ldr	x1, [x0]
  419d28:	ldr	x0, [x0, #8]
  419d2c:	add	x0, x1, x0, lsl #4
  419d30:	str	x1, [sp, #88]
  419d34:	str	x0, [sp, #96]
  419d38:	add	x0, sp, #0x58
  419d3c:	bl	41b014 <ferror@plt+0x182e4>
  419d40:	mov	w19, #0x0                   	// #0
  419d44:	b	419dc4 <ferror@plt+0x17094>
  419d48:	ldr	x1, [sp, #96]
  419d4c:	cbnz	x1, 419dcc <ferror@plt+0x1709c>
  419d50:	adrp	x3, 41a000 <ferror@plt+0x172d0>
  419d54:	add	x3, x3, #0x1d0
  419d58:	mov	x2, #0x10                  	// #16
  419d5c:	mov	w1, w19
  419d60:	mov	x0, x22
  419d64:	bl	41e554 <ferror@plt+0x1b824>
  419d68:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419d6c:	add	x20, x20, #0x930
  419d70:	ldr	x1, [x20, #40]
  419d74:	ldr	x2, [x1, #16]
  419d78:	ldr	x0, [x1, #24]
  419d7c:	mov	x1, #0x10                  	// #16
  419d80:	sub	x0, x2, x0
  419d84:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  419d88:	mov	x21, x0
  419d8c:	ldr	x0, [x20, #40]
  419d90:	ldr	x1, [x0]
  419d94:	ldr	x0, [x0, #8]
  419d98:	add	x0, x1, x0, lsl #4
  419d9c:	str	x1, [sp, #88]
  419da0:	str	x0, [sp, #96]
  419da4:	add	x0, sp, #0x58
  419da8:	bl	41b014 <ferror@plt+0x182e4>
  419dac:	mov	w20, #0x0                   	// #0
  419db0:	b	41a138 <ferror@plt+0x17408>
  419db4:	add	x0, x0, #0x10
  419db8:	str	x0, [sp, #88]
  419dbc:	add	x0, sp, #0x58
  419dc0:	bl	41b014 <ferror@plt+0x182e4>
  419dc4:	ldr	x0, [sp, #88]
  419dc8:	cbz	x0, 419d48 <ferror@plt+0x17018>
  419dcc:	ldr	x2, [x0]
  419dd0:	ldr	w1, [x2, #20]
  419dd4:	cmp	w1, #0x3
  419dd8:	b.ne	419db4 <ferror@plt+0x17084>  // b.any
  419ddc:	ubfiz	x1, x19, #4, #32
  419de0:	add	x3, x22, x1
  419de4:	ldr	x4, [x0, #8]
  419de8:	str	x2, [x22, x1]
  419dec:	str	x4, [x3, #8]
  419df0:	add	w19, w19, #0x1
  419df4:	b	419db4 <ferror@plt+0x17084>
  419df8:	ldr	x1, [sp, #96]
  419dfc:	cbnz	x1, 41a140 <ferror@plt+0x17410>
  419e00:	adrp	x3, 41a000 <ferror@plt+0x172d0>
  419e04:	add	x3, x3, #0x1d0
  419e08:	mov	x2, #0x10                  	// #16
  419e0c:	mov	w1, w20
  419e10:	mov	x0, x21
  419e14:	bl	41e554 <ferror@plt+0x1b824>
  419e18:	str	xzr, [sp, #88]
  419e1c:	str	xzr, [sp, #96]
  419e20:	str	xzr, [sp, #104]
  419e24:	mov	x0, #0x1                   	// #1
  419e28:	str	x0, [sp, #112]
  419e2c:	str	xzr, [sp, #120]
  419e30:	str	xzr, [sp, #128]
  419e34:	str	xzr, [sp, #136]
  419e38:	cbz	w20, 419eb0 <ferror@plt+0x17180>
  419e3c:	add	x5, x21, #0x8
  419e40:	sub	w20, w20, #0x1
  419e44:	add	x0, x21, #0x18
  419e48:	add	x20, x0, x20, lsl #4
  419e4c:	ldr	x0, [x5], #16
  419e50:	ldr	x1, [x0, #8]
  419e54:	ldr	x4, [sp, #96]
  419e58:	add	x4, x4, x1
  419e5c:	ldr	x1, [x0, #16]
  419e60:	ldr	x3, [sp, #104]
  419e64:	add	x3, x3, x1
  419e68:	ldr	x1, [x0, #32]
  419e6c:	ldr	x2, [sp, #120]
  419e70:	add	x2, x2, x1
  419e74:	ldr	x6, [x0, #40]
  419e78:	ldr	x1, [sp, #128]
  419e7c:	add	x1, x1, x6
  419e80:	ldr	x6, [x0]
  419e84:	ldr	x0, [sp, #88]
  419e88:	add	x0, x0, x6
  419e8c:	str	x0, [sp, #88]
  419e90:	str	x4, [sp, #96]
  419e94:	str	x3, [sp, #104]
  419e98:	str	xzr, [sp, #112]
  419e9c:	str	x2, [sp, #120]
  419ea0:	str	x1, [sp, #128]
  419ea4:	str	xzr, [sp, #136]
  419ea8:	cmp	x20, x5
  419eac:	b.ne	419e4c <ferror@plt+0x1711c>  // b.any
  419eb0:	mov	x0, x21
  419eb4:	bl	402a90 <free@plt>
  419eb8:	mov	x20, #0x8c                  	// #140
  419ebc:	adrp	x23, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419ec0:	mov	w21, #0x2d                  	// #45
  419ec4:	ldr	x1, [x23, #1424]
  419ec8:	mov	w0, w21
  419ecc:	bl	402750 <fputc@plt>
  419ed0:	subs	x20, x20, #0x1
  419ed4:	b.ne	419ec4 <ferror@plt+0x17194>  // b.any
  419ed8:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419edc:	ldr	x1, [x20, #1424]
  419ee0:	mov	w0, #0xa                   	// #10
  419ee4:	bl	402750 <fputc@plt>
  419ee8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419eec:	add	x0, x0, #0xf18
  419ef0:	str	x0, [sp]
  419ef4:	adrp	x7, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419ef8:	add	x7, x7, #0xeb0
  419efc:	adrp	x6, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f00:	add	x6, x6, #0xec0
  419f04:	adrp	x5, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f08:	add	x5, x5, #0xec8
  419f0c:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f10:	add	x4, x4, #0xed0
  419f14:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f18:	add	x3, x3, #0xed8
  419f1c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f20:	add	x2, x2, #0xee8
  419f24:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419f28:	add	x1, x1, #0xef8
  419f2c:	ldr	x0, [x20, #1424]
  419f30:	bl	402ce0 <fprintf@plt>
  419f34:	mov	x20, #0x8c                  	// #140
  419f38:	adrp	x23, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419f3c:	mov	w21, #0x2d                  	// #45
  419f40:	ldr	x1, [x23, #1424]
  419f44:	mov	w0, w21
  419f48:	bl	402750 <fputc@plt>
  419f4c:	subs	x20, x20, #0x1
  419f50:	b.ne	419f40 <ferror@plt+0x17210>  // b.any
  419f54:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419f58:	ldr	x1, [x0, #1424]
  419f5c:	mov	w0, #0xa                   	// #10
  419f60:	bl	402750 <fputc@plt>
  419f64:	sub	w19, w19, #0x1
  419f68:	add	x20, x22, w19, sxtw #4
  419f6c:	tbnz	w19, #31, 419f8c <ferror@plt+0x1725c>
  419f70:	add	x2, sp, #0x58
  419f74:	ldr	x1, [x20]
  419f78:	ldr	x0, [x20, #8]
  419f7c:	bl	41a24c <ferror@plt+0x1751c>
  419f80:	sub	x20, x20, #0x10
  419f84:	subs	w19, w19, #0x1
  419f88:	b.pl	419f70 <ferror@plt+0x17240>  // b.nfrst
  419f8c:	mov	x19, #0x8c                  	// #140
  419f90:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419f94:	mov	w20, #0x2d                  	// #45
  419f98:	ldr	x1, [x21, #1424]
  419f9c:	mov	w0, w20
  419fa0:	bl	402750 <fputc@plt>
  419fa4:	subs	x19, x19, #0x1
  419fa8:	b.ne	419f98 <ferror@plt+0x17268>  // b.any
  419fac:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  419fb0:	ldr	x1, [x19, #1424]
  419fb4:	mov	w0, #0xa                   	// #10
  419fb8:	bl	402750 <fputc@plt>
  419fbc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fc0:	add	x0, x0, #0xf18
  419fc4:	str	x0, [sp]
  419fc8:	adrp	x7, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fcc:	add	x7, x7, #0xeb0
  419fd0:	adrp	x6, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fd4:	add	x6, x6, #0xec0
  419fd8:	adrp	x5, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fdc:	add	x5, x5, #0xec8
  419fe0:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fe4:	add	x4, x4, #0xed0
  419fe8:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419fec:	add	x3, x3, #0xed8
  419ff0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419ff4:	add	x2, x2, #0xee8
  419ff8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  419ffc:	add	x1, x1, #0xef8
  41a000:	ldr	x0, [x19, #1424]
  41a004:	bl	402ce0 <fprintf@plt>
  41a008:	mov	x19, #0x8c                  	// #140
  41a00c:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a010:	mov	w20, #0x2d                  	// #45
  41a014:	ldr	x1, [x21, #1424]
  41a018:	mov	w0, w20
  41a01c:	bl	402750 <fputc@plt>
  41a020:	subs	x19, x19, #0x1
  41a024:	b.ne	41a014 <ferror@plt+0x172e4>  // b.any
  41a028:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a02c:	ldr	x1, [x19, #1424]
  41a030:	mov	w0, #0xa                   	// #10
  41a034:	bl	402750 <fputc@plt>
  41a038:	ldr	x0, [x19, #1424]
  41a03c:	ldr	x3, [sp, #88]
  41a040:	mov	w4, #0x20                  	// #32
  41a044:	mov	x1, #0x27ff                	// #10239
  41a048:	cmp	x3, x1
  41a04c:	b.ls	41a064 <ferror@plt+0x17334>  // b.plast
  41a050:	mov	w1, #0x9fffff              	// #10485759
  41a054:	cmp	x3, x1
  41a058:	b.hi	41a16c <ferror@plt+0x1743c>  // b.pmore
  41a05c:	lsr	x3, x3, #10
  41a060:	mov	w4, #0x6b                  	// #107
  41a064:	ldr	x5, [sp, #96]
  41a068:	mov	w6, #0x20                  	// #32
  41a06c:	mov	x1, #0x27ff                	// #10239
  41a070:	cmp	x5, x1
  41a074:	b.ls	41a08c <ferror@plt+0x1735c>  // b.plast
  41a078:	mov	w1, #0x9fffff              	// #10485759
  41a07c:	cmp	x5, x1
  41a080:	b.hi	41a178 <ferror@plt+0x17448>  // b.pmore
  41a084:	lsr	x5, x5, #10
  41a088:	mov	w6, #0x6b                  	// #107
  41a08c:	ldr	x7, [sp, #120]
  41a090:	mov	w1, #0x20                  	// #32
  41a094:	mov	x2, #0x27ff                	// #10239
  41a098:	cmp	x7, x2
  41a09c:	b.ls	41a0b4 <ferror@plt+0x17384>  // b.plast
  41a0a0:	mov	w1, #0x9fffff              	// #10485759
  41a0a4:	cmp	x7, x1
  41a0a8:	b.hi	41a184 <ferror@plt+0x17454>  // b.pmore
  41a0ac:	lsr	x7, x7, #10
  41a0b0:	mov	w1, #0x6b                  	// #107
  41a0b4:	str	w1, [sp]
  41a0b8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41a0bc:	add	x2, x2, #0xf28
  41a0c0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41a0c4:	add	x1, x1, #0xf30
  41a0c8:	bl	402ce0 <fprintf@plt>
  41a0cc:	mov	x19, #0x8c                  	// #140
  41a0d0:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a0d4:	mov	w20, #0x2d                  	// #45
  41a0d8:	ldr	x1, [x21, #1424]
  41a0dc:	mov	w0, w20
  41a0e0:	bl	402750 <fputc@plt>
  41a0e4:	subs	x19, x19, #0x1
  41a0e8:	b.ne	41a0d8 <ferror@plt+0x173a8>  // b.any
  41a0ec:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a0f0:	ldr	x1, [x19, #1424]
  41a0f4:	mov	w0, #0xa                   	// #10
  41a0f8:	bl	402750 <fputc@plt>
  41a0fc:	mov	x0, x22
  41a100:	bl	402a90 <free@plt>
  41a104:	ldr	x1, [x19, #1424]
  41a108:	mov	w0, #0xa                   	// #10
  41a10c:	bl	402750 <fputc@plt>
  41a110:	ldp	x19, x20, [sp, #32]
  41a114:	ldp	x21, x22, [sp, #48]
  41a118:	ldr	x23, [sp, #64]
  41a11c:	ldp	x29, x30, [sp, #16]
  41a120:	add	sp, sp, #0x90
  41a124:	ret
  41a128:	add	x0, x0, #0x10
  41a12c:	str	x0, [sp, #88]
  41a130:	add	x0, sp, #0x58
  41a134:	bl	41b014 <ferror@plt+0x182e4>
  41a138:	ldr	x0, [sp, #88]
  41a13c:	cbz	x0, 419df8 <ferror@plt+0x170c8>
  41a140:	ldr	x2, [x0]
  41a144:	ldr	w1, [x2, #20]
  41a148:	cmp	w1, #0x3
  41a14c:	b.ne	41a128 <ferror@plt+0x173f8>  // b.any
  41a150:	ubfiz	x1, x20, #4, #32
  41a154:	add	x3, x21, x1
  41a158:	ldr	x4, [x0, #8]
  41a15c:	str	x2, [x21, x1]
  41a160:	str	x4, [x3, #8]
  41a164:	add	w20, w20, #0x1
  41a168:	b	41a128 <ferror@plt+0x173f8>
  41a16c:	lsr	x3, x3, #20
  41a170:	mov	w4, #0x4d                  	// #77
  41a174:	b	41a064 <ferror@plt+0x17334>
  41a178:	lsr	x5, x5, #20
  41a17c:	mov	w6, #0x4d                  	// #77
  41a180:	b	41a08c <ferror@plt+0x1735c>
  41a184:	lsr	x7, x7, #20
  41a188:	mov	w1, #0x4d                  	// #77
  41a18c:	b	41a0b4 <ferror@plt+0x17384>
  41a190:	stp	x29, x30, [sp, #-32]!
  41a194:	mov	x29, sp
  41a198:	str	x19, [sp, #16]
  41a19c:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a1a0:	add	x19, x19, #0x930
  41a1a4:	mov	x0, x19
  41a1a8:	bl	41a418 <ferror@plt+0x176e8>
  41a1ac:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a1b0:	add	x2, x2, #0x3a0
  41a1b4:	mov	x1, x19
  41a1b8:	adrp	x0, 41b000 <ferror@plt+0x182d0>
  41a1bc:	add	x0, x0, #0x4c
  41a1c0:	bl	402740 <__cxa_atexit@plt>
  41a1c4:	ldr	x19, [sp, #16]
  41a1c8:	ldp	x29, x30, [sp], #32
  41a1cc:	ret
  41a1d0:	ldr	x4, [x0, #8]
  41a1d4:	ldr	x3, [x1, #8]
  41a1d8:	ldr	x0, [x4]
  41a1dc:	ldr	x1, [x3]
  41a1e0:	cmp	x1, x0
  41a1e4:	cset	w2, hi  // hi = pmore
  41a1e8:	b.eq	41a1fc <ferror@plt+0x174cc>  // b.none
  41a1ec:	mov	w0, #0xffffffff            	// #-1
  41a1f0:	cmp	w2, #0x0
  41a1f4:	cneg	w0, w0, ne  // ne = any
  41a1f8:	ret
  41a1fc:	ldr	x1, [x4, #16]
  41a200:	ldr	x0, [x3, #16]
  41a204:	cmp	x1, x0
  41a208:	cset	w2, cc  // cc = lo, ul, last
  41a20c:	b.ne	41a1ec <ferror@plt+0x174bc>  // b.any
  41a210:	ldr	x2, [x4, #8]
  41a214:	ldr	x1, [x3, #8]
  41a218:	mov	w0, #0x0                   	// #0
  41a21c:	cmp	x2, x1
  41a220:	b.eq	41a1f8 <ferror@plt+0x174c8>  // b.none
  41a224:	ldr	x2, [x4, #8]
  41a228:	ldr	x1, [x3, #8]
  41a22c:	mov	w0, #0xffffffff            	// #-1
  41a230:	cmp	x2, x1
  41a234:	b.eq	41a1f8 <ferror@plt+0x174c8>  // b.none
  41a238:	ldr	x1, [x4, #8]
  41a23c:	ldr	x0, [x3, #8]
  41a240:	cmp	x1, x0
  41a244:	cset	w2, cc  // cc = lo, ul, last
  41a248:	b	41a1ec <ferror@plt+0x174bc>
  41a24c:	mov	x12, #0x1070                	// #4208
  41a250:	sub	sp, sp, x12
  41a254:	stp	x29, x30, [sp, #48]
  41a258:	add	x29, sp, #0x30
  41a25c:	stp	x19, x20, [sp, #64]
  41a260:	stp	x21, x22, [sp, #80]
  41a264:	str	x23, [sp, #96]
  41a268:	mov	x21, x0
  41a26c:	mov	x22, x1
  41a270:	mov	x23, x2
  41a274:	ldr	x19, [x1]
  41a278:	adrp	x20, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41a27c:	add	x20, x20, #0xe00
  41a280:	mov	x1, x20
  41a284:	mov	x0, x19
  41a288:	bl	402bd0 <strstr@plt>
  41a28c:	cbz	x0, 41a298 <ferror@plt+0x17568>
  41a290:	add	x19, x0, #0x4
  41a294:	b	41a280 <ferror@plt+0x17550>
  41a298:	ldr	x4, [x22, #8]
  41a29c:	ldr	w3, [x22, #16]
  41a2a0:	mov	x2, x19
  41a2a4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41a2a8:	add	x1, x1, #0xe08
  41a2ac:	add	x0, sp, #0x70
  41a2b0:	bl	402720 <sprintf@plt>
  41a2b4:	strb	wzr, [sp, #160]
  41a2b8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41a2bc:	ldr	x0, [x0, #1424]
  41a2c0:	ldr	x3, [x21, #48]
  41a2c4:	ldr	x1, [x21]
  41a2c8:	mov	x2, #0x27ff                	// #10239
  41a2cc:	cmp	x1, x2
  41a2d0:	b.ls	41a2f8 <ferror@plt+0x175c8>  // b.plast
  41a2d4:	mov	w2, #0x9fffff              	// #10485759
  41a2d8:	cmp	x1, x2
  41a2dc:	b.hi	41a2ec <ferror@plt+0x175bc>  // b.pmore
  41a2e0:	lsr	x4, x1, #10
  41a2e4:	mov	w5, #0x6b                  	// #107
  41a2e8:	b	41a300 <ferror@plt+0x175d0>
  41a2ec:	lsr	x4, x1, #20
  41a2f0:	mov	w5, #0x4d                  	// #77
  41a2f4:	b	41a300 <ferror@plt+0x175d0>
  41a2f8:	mov	x4, x1
  41a2fc:	mov	w5, #0x20                  	// #32
  41a300:	ucvtf	d0, x1
  41a304:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41a308:	fmov	d1, x1
  41a30c:	fmul	d0, d0, d1
  41a310:	ldr	d1, [x23]
  41a314:	ucvtf	d1, d1
  41a318:	fdiv	d0, d0, d1
  41a31c:	ldr	x6, [x21, #16]
  41a320:	mov	w7, #0x20                  	// #32
  41a324:	mov	x1, #0x27ff                	// #10239
  41a328:	cmp	x6, x1
  41a32c:	b.ls	41a344 <ferror@plt+0x17614>  // b.plast
  41a330:	mov	w1, #0x9fffff              	// #10485759
  41a334:	cmp	x6, x1
  41a338:	b.hi	41a3f4 <ferror@plt+0x176c4>  // b.pmore
  41a33c:	lsr	x6, x6, #10
  41a340:	mov	w7, #0x6b                  	// #107
  41a344:	ldr	d3, [x21, #8]
  41a348:	ucvtf	d1, d3
  41a34c:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41a350:	fmov	d2, x1
  41a354:	fmul	d1, d1, d2
  41a358:	ldr	d2, [x23, #8]
  41a35c:	ucvtf	d2, d2
  41a360:	fdiv	d1, d1, d2
  41a364:	ldr	x1, [x21, #32]
  41a368:	mov	w8, #0x20                  	// #32
  41a36c:	mov	x2, #0x27ff                	// #10239
  41a370:	cmp	x1, x2
  41a374:	b.ls	41a38c <ferror@plt+0x1765c>  // b.plast
  41a378:	mov	w2, #0x9fffff              	// #10485759
  41a37c:	cmp	x1, x2
  41a380:	b.hi	41a400 <ferror@plt+0x176d0>  // b.pmore
  41a384:	lsr	x1, x1, #10
  41a388:	mov	w8, #0x6b                  	// #107
  41a38c:	ldr	x2, [x21, #40]
  41a390:	mov	w9, #0x20                  	// #32
  41a394:	mov	x10, #0x27ff                	// #10239
  41a398:	cmp	x2, x10
  41a39c:	b.ls	41a3b4 <ferror@plt+0x17684>  // b.plast
  41a3a0:	mov	w9, #0x9fffff              	// #10485759
  41a3a4:	cmp	x2, x9
  41a3a8:	b.hi	41a40c <ferror@plt+0x176dc>  // b.pmore
  41a3ac:	lsr	x2, x2, #10
  41a3b0:	mov	w9, #0x6b                  	// #107
  41a3b4:	str	w9, [sp, #32]
  41a3b8:	str	x2, [sp, #24]
  41a3bc:	str	w8, [sp, #16]
  41a3c0:	str	x1, [sp, #8]
  41a3c4:	str	d3, [sp]
  41a3c8:	add	x2, sp, #0x70
  41a3cc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41a3d0:	add	x1, x1, #0xe18
  41a3d4:	bl	402ce0 <fprintf@plt>
  41a3d8:	ldp	x19, x20, [sp, #64]
  41a3dc:	ldp	x21, x22, [sp, #80]
  41a3e0:	ldr	x23, [sp, #96]
  41a3e4:	ldp	x29, x30, [sp, #48]
  41a3e8:	mov	x12, #0x1070                	// #4208
  41a3ec:	add	sp, sp, x12
  41a3f0:	ret
  41a3f4:	lsr	x6, x6, #20
  41a3f8:	mov	w7, #0x4d                  	// #77
  41a3fc:	b	41a344 <ferror@plt+0x17614>
  41a400:	lsr	x1, x1, #20
  41a404:	mov	w8, #0x4d                  	// #77
  41a408:	b	41a38c <ferror@plt+0x1765c>
  41a40c:	lsr	x2, x2, #20
  41a410:	mov	w9, #0x4d                  	// #77
  41a414:	b	41a3b4 <ferror@plt+0x17684>
  41a418:	stp	x29, x30, [sp, #-48]!
  41a41c:	mov	x29, sp
  41a420:	stp	x19, x20, [sp, #16]
  41a424:	stp	x21, x22, [sp, #32]
  41a428:	mov	x20, x0
  41a42c:	mov	x0, #0x30                  	// #48
  41a430:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  41a434:	mov	x19, x0
  41a438:	str	xzr, [x0, #16]
  41a43c:	str	xzr, [x0, #24]
  41a440:	str	wzr, [x0, #32]
  41a444:	str	wzr, [x0, #36]
  41a448:	strb	wzr, [x0, #44]
  41a44c:	mov	x0, #0xd                   	// #13
  41a450:	bl	40dcb0 <ferror@plt+0xaf80>
  41a454:	mov	w21, w0
  41a458:	ubfiz	x1, x21, #4, #32
  41a45c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a460:	add	x0, x0, #0xf98
  41a464:	ldr	w22, [x0, x1]
  41a468:	mov	x1, #0x10                  	// #16
  41a46c:	mov	x0, x22
  41a470:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41a474:	cbz	x22, 41a48c <ferror@plt+0x1775c>
  41a478:	mov	x1, x0
  41a47c:	add	x2, x0, x22, lsl #4
  41a480:	str	xzr, [x1], #16
  41a484:	cmp	x1, x2
  41a488:	b.ne	41a480 <ferror@plt+0x17750>  // b.any
  41a48c:	str	x0, [x19]
  41a490:	str	x22, [x19, #8]
  41a494:	str	w21, [x19, #40]
  41a498:	str	x19, [x20, #40]
  41a49c:	mov	x0, #0x30                  	// #48
  41a4a0:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  41a4a4:	mov	x19, x0
  41a4a8:	str	xzr, [x0, #16]
  41a4ac:	str	xzr, [x0, #24]
  41a4b0:	str	wzr, [x0, #32]
  41a4b4:	str	wzr, [x0, #36]
  41a4b8:	strb	wzr, [x0, #44]
  41a4bc:	mov	x0, #0xd                   	// #13
  41a4c0:	bl	40dcb0 <ferror@plt+0xaf80>
  41a4c4:	mov	w22, w0
  41a4c8:	ubfiz	x1, x22, #4, #32
  41a4cc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a4d0:	add	x0, x0, #0xf98
  41a4d4:	ldr	w21, [x0, x1]
  41a4d8:	mov	x1, #0x18                  	// #24
  41a4dc:	mov	x0, x21
  41a4e0:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41a4e4:	cbz	x21, 41a500 <ferror@plt+0x177d0>
  41a4e8:	mov	x1, x0
  41a4ec:	add	x2, x21, x21, lsl #1
  41a4f0:	add	x2, x0, x2, lsl #3
  41a4f4:	str	xzr, [x1], #24
  41a4f8:	cmp	x2, x1
  41a4fc:	b.ne	41a4f4 <ferror@plt+0x177c4>  // b.any
  41a500:	str	x0, [x19]
  41a504:	str	x21, [x19, #8]
  41a508:	str	w22, [x19, #40]
  41a50c:	str	x19, [x20, #48]
  41a510:	mov	x0, #0x30                  	// #48
  41a514:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  41a518:	mov	x19, x0
  41a51c:	str	xzr, [x0, #16]
  41a520:	str	xzr, [x0, #24]
  41a524:	str	wzr, [x0, #32]
  41a528:	str	wzr, [x0, #36]
  41a52c:	strb	wzr, [x0, #44]
  41a530:	mov	x0, #0xd                   	// #13
  41a534:	bl	40dcb0 <ferror@plt+0xaf80>
  41a538:	mov	w22, w0
  41a53c:	ubfiz	x1, x22, #4, #32
  41a540:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a544:	add	x0, x0, #0xf98
  41a548:	ldr	w21, [x0, x1]
  41a54c:	mov	x1, #0x18                  	// #24
  41a550:	mov	x0, x21
  41a554:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41a558:	cbz	x21, 41a574 <ferror@plt+0x17844>
  41a55c:	mov	x1, x0
  41a560:	add	x2, x21, x21, lsl #1
  41a564:	add	x2, x0, x2, lsl #3
  41a568:	str	xzr, [x1], #24
  41a56c:	cmp	x2, x1
  41a570:	b.ne	41a568 <ferror@plt+0x17838>  // b.any
  41a574:	str	x0, [x19]
  41a578:	str	x21, [x19, #8]
  41a57c:	str	w22, [x19, #40]
  41a580:	str	x19, [x20]
  41a584:	ldp	x19, x20, [sp, #16]
  41a588:	ldp	x21, x22, [sp, #32]
  41a58c:	ldp	x29, x30, [sp], #48
  41a590:	ret
  41a594:	mov	x7, x0
  41a598:	ldr	w0, [x0, #32]
  41a59c:	add	w0, w0, #0x1
  41a5a0:	str	w0, [x7, #32]
  41a5a4:	ldr	w9, [x7, #40]
  41a5a8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a5ac:	add	x0, x0, #0xf98
  41a5b0:	ubfiz	x4, x9, #4, #32
  41a5b4:	add	x3, x0, x4
  41a5b8:	ldr	w6, [x0, x4]
  41a5bc:	ldr	w11, [x3, #12]
  41a5c0:	mov	w4, w2
  41a5c4:	ldr	w3, [x3, #4]
  41a5c8:	mul	x3, x3, x4
  41a5cc:	lsr	x3, x3, #32
  41a5d0:	sub	w5, w2, w3
  41a5d4:	add	w3, w3, w5, lsr #1
  41a5d8:	lsr	w3, w3, w11
  41a5dc:	msub	w3, w3, w6, w2
  41a5e0:	ldr	x8, [x7]
  41a5e4:	ubfiz	x5, x3, #1, #32
  41a5e8:	add	x5, x5, w3, uxtw
  41a5ec:	lsl	x5, x5, #3
  41a5f0:	add	x0, x8, x5
  41a5f4:	ldr	x5, [x8, x5]
  41a5f8:	cbz	x5, 41a68c <ferror@plt+0x1795c>
  41a5fc:	cmp	x5, #0x1
  41a600:	b.eq	41a610 <ferror@plt+0x178e0>  // b.none
  41a604:	ldr	x10, [x1]
  41a608:	cmp	x5, x10
  41a60c:	b.eq	41a68c <ferror@plt+0x1795c>  // b.none
  41a610:	ldr	x5, [x7, #8]
  41a614:	ubfiz	x9, x9, #4, #32
  41a618:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a61c:	add	x10, x10, #0xf98
  41a620:	add	x9, x10, x9
  41a624:	ldr	w0, [x9, #8]
  41a628:	mul	x0, x0, x4
  41a62c:	lsr	x0, x0, #32
  41a630:	add	w9, w2, #0x1
  41a634:	sub	w4, w2, w0
  41a638:	add	w4, w0, w4, lsr #1
  41a63c:	lsr	w4, w4, w11
  41a640:	sub	w6, w6, #0x2
  41a644:	msub	w4, w4, w6, w9
  41a648:	ldr	w2, [x7, #36]
  41a64c:	add	w2, w2, #0x1
  41a650:	str	w2, [x7, #36]
  41a654:	add	w3, w3, w4
  41a658:	sub	w2, w3, w5
  41a65c:	cmp	x5, w3, uxtw
  41a660:	csel	w3, w2, w3, ls  // ls = plast
  41a664:	ubfiz	x2, x3, #1, #32
  41a668:	add	x2, x2, w3, uxtw
  41a66c:	add	x0, x8, x2, lsl #3
  41a670:	ldr	x2, [x8, x2, lsl #3]
  41a674:	cbz	x2, 41a68c <ferror@plt+0x1795c>
  41a678:	cmp	x2, #0x1
  41a67c:	b.eq	41a648 <ferror@plt+0x17918>  // b.none
  41a680:	ldr	x6, [x1]
  41a684:	cmp	x2, x6
  41a688:	b.ne	41a648 <ferror@plt+0x17918>  // b.any
  41a68c:	ret
  41a690:	mov	x9, x0
  41a694:	ldr	w0, [x0, #32]
  41a698:	add	w0, w0, #0x1
  41a69c:	str	w0, [x9, #32]
  41a6a0:	ldr	w7, [x9, #40]
  41a6a4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a6a8:	add	x0, x0, #0xf98
  41a6ac:	ubfiz	x4, x7, #4, #32
  41a6b0:	add	x3, x0, x4
  41a6b4:	ldr	w6, [x0, x4]
  41a6b8:	ldr	w8, [x3, #12]
  41a6bc:	mov	w11, w2
  41a6c0:	ldr	w3, [x3, #4]
  41a6c4:	mul	x3, x3, x11
  41a6c8:	lsr	x3, x3, #32
  41a6cc:	sub	w5, w2, w3
  41a6d0:	add	w3, w3, w5, lsr #1
  41a6d4:	lsr	w3, w3, w8
  41a6d8:	msub	w3, w3, w6, w2
  41a6dc:	ldr	x10, [x9]
  41a6e0:	ubfiz	x5, x3, #4, #32
  41a6e4:	add	x0, x10, x5
  41a6e8:	ldr	x5, [x10, x5]
  41a6ec:	cbz	x5, 41a7ac <ferror@plt+0x17a7c>
  41a6f0:	cmp	x5, #0x1
  41a6f4:	b.eq	41a70c <ferror@plt+0x179dc>  // b.none
  41a6f8:	ldr	x4, [x1]
  41a6fc:	ldr	x13, [x5]
  41a700:	ldr	x12, [x4]
  41a704:	cmp	x13, x12
  41a708:	b.eq	41a7b0 <ferror@plt+0x17a80>  // b.none
  41a70c:	ldr	x5, [x9, #8]
  41a710:	ubfiz	x7, x7, #4, #32
  41a714:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a718:	add	x0, x0, #0xf98
  41a71c:	add	x0, x0, x7
  41a720:	ldr	w4, [x0, #8]
  41a724:	mul	x4, x4, x11
  41a728:	lsr	x4, x4, #32
  41a72c:	add	w0, w2, #0x1
  41a730:	sub	w2, w2, w4
  41a734:	add	w4, w4, w2, lsr #1
  41a738:	lsr	w4, w4, w8
  41a73c:	sub	w6, w6, #0x2
  41a740:	msub	w4, w4, w6, w0
  41a744:	ldr	w2, [x9, #36]
  41a748:	add	w2, w2, #0x1
  41a74c:	str	w2, [x9, #36]
  41a750:	add	w3, w3, w4
  41a754:	sub	w2, w3, w5
  41a758:	cmp	x5, w3, uxtw
  41a75c:	csel	w3, w2, w3, ls  // ls = plast
  41a760:	ubfiz	x2, x3, #4, #32
  41a764:	add	x0, x10, x2
  41a768:	ldr	x2, [x10, x2]
  41a76c:	cbz	x2, 41a7ac <ferror@plt+0x17a7c>
  41a770:	cmp	x2, #0x1
  41a774:	b.eq	41a744 <ferror@plt+0x17a14>  // b.none
  41a778:	ldr	x6, [x1]
  41a77c:	ldr	x8, [x2]
  41a780:	ldr	x7, [x6]
  41a784:	cmp	x8, x7
  41a788:	b.ne	41a744 <ferror@plt+0x17a14>  // b.any
  41a78c:	ldr	x8, [x2, #8]
  41a790:	ldr	x7, [x6, #8]
  41a794:	cmp	x8, x7
  41a798:	b.ne	41a744 <ferror@plt+0x17a14>  // b.any
  41a79c:	ldr	w7, [x2, #16]
  41a7a0:	ldr	w2, [x6, #16]
  41a7a4:	cmp	w7, w2
  41a7a8:	b.ne	41a744 <ferror@plt+0x17a14>  // b.any
  41a7ac:	ret
  41a7b0:	ldr	x13, [x5, #8]
  41a7b4:	ldr	x12, [x4, #8]
  41a7b8:	cmp	x13, x12
  41a7bc:	b.ne	41a70c <ferror@plt+0x179dc>  // b.any
  41a7c0:	ldr	w5, [x5, #16]
  41a7c4:	ldr	w4, [x4, #16]
  41a7c8:	cmp	w5, w4
  41a7cc:	b.ne	41a70c <ferror@plt+0x179dc>  // b.any
  41a7d0:	b	41a7ac <ferror@plt+0x17a7c>
  41a7d4:	stp	x29, x30, [sp, #-96]!
  41a7d8:	mov	x29, sp
  41a7dc:	stp	x19, x20, [sp, #16]
  41a7e0:	stp	x21, x22, [sp, #32]
  41a7e4:	stp	x23, x24, [sp, #48]
  41a7e8:	stp	x25, x26, [sp, #64]
  41a7ec:	mov	x20, x0
  41a7f0:	ldr	x25, [x0]
  41a7f4:	ldr	w21, [x0, #40]
  41a7f8:	ldr	x19, [x0, #8]
  41a7fc:	add	x22, x25, x19, lsl #4
  41a800:	ldr	x1, [x0, #16]
  41a804:	ldr	x0, [x0, #24]
  41a808:	sub	x1, x1, x0
  41a80c:	lsl	x0, x1, #1
  41a810:	cmp	x19, x1, lsl #1
  41a814:	b.cc	41a830 <ferror@plt+0x17b00>  // b.lo, b.ul, b.last
  41a818:	lsl	w1, w1, #3
  41a81c:	cmp	x1, #0x20
  41a820:	mov	x2, #0x20                  	// #32
  41a824:	csel	x1, x1, x2, cs  // cs = hs, nlast
  41a828:	cmp	x19, x1
  41a82c:	b.ls	41a848 <ferror@plt+0x17b18>  // b.plast
  41a830:	bl	40dcb0 <ferror@plt+0xaf80>
  41a834:	mov	w21, w0
  41a838:	ubfiz	x1, x21, #4, #32
  41a83c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a840:	add	x0, x0, #0xf98
  41a844:	ldr	w19, [x0, x1]
  41a848:	ldrb	w0, [x20, #44]
  41a84c:	cbnz	w0, 41a860 <ferror@plt+0x17b30>
  41a850:	mov	x1, #0x10                  	// #16
  41a854:	mov	x0, x19
  41a858:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41a85c:	b	41a878 <ferror@plt+0x17b48>
  41a860:	mov	x3, #0x0                   	// #0
  41a864:	mov	x2, #0x0                   	// #0
  41a868:	mov	x1, #0x0                   	// #0
  41a86c:	lsl	x0, x19, #4
  41a870:	bl	40e0f8 <ferror@plt+0xb3c8>
  41a874:	cbz	x0, 41a8cc <ferror@plt+0x17b9c>
  41a878:	cbz	x19, 41a890 <ferror@plt+0x17b60>
  41a87c:	mov	x1, x0
  41a880:	add	x2, x0, x19, lsl #4
  41a884:	str	xzr, [x1], #16
  41a888:	cmp	x2, x1
  41a88c:	b.ne	41a884 <ferror@plt+0x17b54>  // b.any
  41a890:	str	x0, [x20]
  41a894:	str	x19, [x20, #8]
  41a898:	str	w21, [x20, #40]
  41a89c:	ldr	x0, [x20, #16]
  41a8a0:	ldr	x1, [x20, #24]
  41a8a4:	sub	x0, x0, x1
  41a8a8:	str	x0, [x20, #16]
  41a8ac:	str	xzr, [x20, #24]
  41a8b0:	mov	x19, x25
  41a8b4:	mov	x23, #0x8                   	// #8
  41a8b8:	mov	w24, #0x79b9                	// #31161
  41a8bc:	movk	w24, #0x9e37, lsl #16
  41a8c0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a8c4:	add	x21, x21, #0xf98
  41a8c8:	b	41a8f8 <ferror@plt+0x17bc8>
  41a8cc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a8d0:	add	x2, x2, #0xd88
  41a8d4:	mov	w1, #0x2b5                 	// #693
  41a8d8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41a8dc:	add	x0, x0, #0xd98
  41a8e0:	bl	4102b4 <ferror@plt+0xd584>
  41a8e4:	ldp	x0, x1, [x19]
  41a8e8:	stp	x0, x1, [x5]
  41a8ec:	add	x19, x19, #0x10
  41a8f0:	cmp	x22, x19
  41a8f4:	b.ls	41aa40 <ferror@plt+0x17d10>  // b.plast
  41a8f8:	ldr	x26, [x19]
  41a8fc:	cmp	x26, #0x1
  41a900:	b.ls	41a8ec <ferror@plt+0x17bbc>  // b.plast
  41a904:	ldr	x0, [x26]
  41a908:	str	x0, [sp, #88]
  41a90c:	mov	w2, #0x0                   	// #0
  41a910:	mov	x1, x23
  41a914:	add	x0, sp, #0x58
  41a918:	bl	453c54 <ferror@plt+0x50f24>
  41a91c:	ldr	x1, [x26, #8]
  41a920:	str	x1, [sp, #88]
  41a924:	mov	w2, w0
  41a928:	mov	x1, x23
  41a92c:	add	x0, sp, #0x58
  41a930:	bl	453c54 <ferror@plt+0x50f24>
  41a934:	ldr	w1, [x26, #16]
  41a938:	sub	w3, w24, w1
  41a93c:	sub	w3, w3, w0
  41a940:	eor	w3, w3, w0, lsr #13
  41a944:	sub	w1, w1, w0
  41a948:	sub	w1, w1, w3
  41a94c:	eor	w1, w1, w3, lsl #8
  41a950:	sub	w2, w0, w3
  41a954:	sub	w2, w2, w1
  41a958:	eor	w2, w2, w1, lsr #13
  41a95c:	sub	w3, w3, w1
  41a960:	sub	w3, w3, w2
  41a964:	eor	w3, w3, w2, lsr #12
  41a968:	sub	w0, w1, w2
  41a96c:	sub	w0, w0, w3
  41a970:	eor	w0, w0, w3, lsl #16
  41a974:	sub	w2, w2, w3
  41a978:	sub	w2, w2, w0
  41a97c:	eor	w2, w2, w0, lsr #5
  41a980:	sub	w3, w3, w0
  41a984:	sub	w3, w3, w2
  41a988:	eor	w3, w3, w2, lsr #3
  41a98c:	sub	w1, w0, w2
  41a990:	sub	w1, w1, w3
  41a994:	eor	w1, w1, w3, lsl #10
  41a998:	sub	w2, w2, w3
  41a99c:	sub	w2, w2, w1
  41a9a0:	eor	w1, w2, w1, lsr #15
  41a9a4:	ldr	w3, [x20, #40]
  41a9a8:	ubfiz	x2, x3, #4, #32
  41a9ac:	add	x0, x21, x2
  41a9b0:	ldr	w6, [x21, x2]
  41a9b4:	ldr	w7, [x0, #12]
  41a9b8:	mov	w8, w1
  41a9bc:	ldr	w0, [x0, #4]
  41a9c0:	mul	x0, x0, x8
  41a9c4:	lsr	x0, x0, #32
  41a9c8:	sub	w2, w1, w0
  41a9cc:	add	w0, w0, w2, lsr #1
  41a9d0:	lsr	w0, w0, w7
  41a9d4:	msub	w0, w0, w6, w1
  41a9d8:	ldr	x2, [x20]
  41a9dc:	ubfiz	x4, x0, #4, #32
  41a9e0:	add	x5, x2, x4
  41a9e4:	ldr	x4, [x2, x4]
  41a9e8:	cbz	x4, 41a8e4 <ferror@plt+0x17bb4>
  41a9ec:	ldr	x4, [x20, #8]
  41a9f0:	ubfiz	x3, x3, #4, #32
  41a9f4:	add	x3, x21, x3
  41a9f8:	ldr	w3, [x3, #8]
  41a9fc:	mul	x3, x3, x8
  41aa00:	lsr	x3, x3, #32
  41aa04:	add	w5, w1, #0x1
  41aa08:	sub	w1, w1, w3
  41aa0c:	add	w1, w3, w1, lsr #1
  41aa10:	lsr	w1, w1, w7
  41aa14:	sub	w6, w6, #0x2
  41aa18:	msub	w1, w1, w6, w5
  41aa1c:	add	w0, w0, w1
  41aa20:	sub	w3, w0, w4
  41aa24:	cmp	x4, w0, uxtw
  41aa28:	csel	w0, w3, w0, ls  // ls = plast
  41aa2c:	ubfiz	x3, x0, #4, #32
  41aa30:	add	x5, x2, x3
  41aa34:	ldr	x3, [x2, x3]
  41aa38:	cbnz	x3, 41aa1c <ferror@plt+0x17cec>
  41aa3c:	b	41a8e4 <ferror@plt+0x17bb4>
  41aa40:	ldrb	w0, [x20, #44]
  41aa44:	cbnz	w0, 41aa68 <ferror@plt+0x17d38>
  41aa48:	mov	x0, x25
  41aa4c:	bl	402a90 <free@plt>
  41aa50:	ldp	x19, x20, [sp, #16]
  41aa54:	ldp	x21, x22, [sp, #32]
  41aa58:	ldp	x23, x24, [sp, #48]
  41aa5c:	ldp	x25, x26, [sp, #64]
  41aa60:	ldp	x29, x30, [sp], #96
  41aa64:	ret
  41aa68:	mov	x0, x25
  41aa6c:	bl	40e140 <ferror@plt+0xb410>
  41aa70:	b	41aa50 <ferror@plt+0x17d20>
  41aa74:	stp	x29, x30, [sp, #-48]!
  41aa78:	mov	x29, sp
  41aa7c:	stp	x19, x20, [sp, #16]
  41aa80:	stp	x21, x22, [sp, #32]
  41aa84:	mov	x19, x0
  41aa88:	mov	x20, x1
  41aa8c:	mov	w22, w2
  41aa90:	mov	w21, w3
  41aa94:	cmp	w3, #0x1
  41aa98:	b.eq	41ab44 <ferror@plt+0x17e14>  // b.none
  41aa9c:	ldr	w0, [x19, #32]
  41aaa0:	add	w0, w0, #0x1
  41aaa4:	str	w0, [x19, #32]
  41aaa8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41aaac:	add	x1, x1, #0xf98
  41aab0:	ldr	w0, [x19, #40]
  41aab4:	lsl	x0, x0, #4
  41aab8:	add	x3, x1, x0
  41aabc:	ldr	w2, [x1, x0]
  41aac0:	ldr	w5, [x3, #12]
  41aac4:	mov	w6, w22
  41aac8:	ldr	w1, [x3, #4]
  41aacc:	mul	x1, x1, x6
  41aad0:	lsr	x1, x1, #32
  41aad4:	sub	w4, w22, w1
  41aad8:	add	w4, w1, w4, lsr #1
  41aadc:	lsr	w4, w4, w5
  41aae0:	msub	w4, w4, w2, w22
  41aae4:	ldr	w0, [x3, #8]
  41aae8:	mul	x0, x0, x6
  41aaec:	lsr	x0, x0, #32
  41aaf0:	add	w1, w22, #0x1
  41aaf4:	sub	w6, w22, w0
  41aaf8:	add	w6, w0, w6, lsr #1
  41aafc:	lsr	w6, w6, w5
  41ab00:	sub	w2, w2, #0x2
  41ab04:	msub	w6, w6, w2, w1
  41ab08:	ldr	x5, [x19]
  41ab0c:	ubfiz	x0, x4, #4, #32
  41ab10:	add	x9, x5, x0
  41ab14:	ldr	x0, [x5, x0]
  41ab18:	cbz	x0, 41ac40 <ferror@plt+0x17f10>
  41ab1c:	cmp	x0, #0x1
  41ab20:	b.eq	41ab3c <ferror@plt+0x17e0c>  // b.none
  41ab24:	ldr	x1, [x20]
  41ab28:	ldr	x3, [x0]
  41ab2c:	ldr	x2, [x1]
  41ab30:	cmp	x3, x2
  41ab34:	b.eq	41ab64 <ferror@plt+0x17e34>  // b.none
  41ab38:	mov	x9, #0x0                   	// #0
  41ab3c:	ldr	x1, [x19, #8]
  41ab40:	b	41aba0 <ferror@plt+0x17e70>
  41ab44:	ldr	x0, [x0, #8]
  41ab48:	add	x0, x0, x0, lsl #1
  41ab4c:	ldr	x1, [x19, #16]
  41ab50:	cmp	x0, x1, lsl #2
  41ab54:	b.hi	41aa9c <ferror@plt+0x17d6c>  // b.pmore
  41ab58:	mov	x0, x19
  41ab5c:	bl	41a7d4 <ferror@plt+0x17aa4>
  41ab60:	b	41aa9c <ferror@plt+0x17d6c>
  41ab64:	ldr	x3, [x0, #8]
  41ab68:	ldr	x2, [x1, #8]
  41ab6c:	cmp	x3, x2
  41ab70:	b.eq	41ab7c <ferror@plt+0x17e4c>  // b.none
  41ab74:	mov	x9, #0x0                   	// #0
  41ab78:	b	41ab3c <ferror@plt+0x17e0c>
  41ab7c:	ldr	w2, [x0, #16]
  41ab80:	ldr	w1, [x1, #16]
  41ab84:	mov	x0, x9
  41ab88:	mov	x9, #0x0                   	// #0
  41ab8c:	cmp	w2, w1
  41ab90:	b.ne	41ab3c <ferror@plt+0x17e0c>  // b.any
  41ab94:	b	41ac28 <ferror@plt+0x17ef8>
  41ab98:	cmp	x9, #0x0
  41ab9c:	csel	x9, x9, x0, ne  // ne = any
  41aba0:	ldr	w2, [x19, #36]
  41aba4:	add	w2, w2, #0x1
  41aba8:	str	w2, [x19, #36]
  41abac:	add	w4, w4, w6
  41abb0:	sub	w0, w4, w1
  41abb4:	cmp	x1, w4, uxtw
  41abb8:	csel	w4, w0, w4, ls  // ls = plast
  41abbc:	ubfiz	x2, x4, #4, #32
  41abc0:	add	x0, x5, x2
  41abc4:	ldr	x2, [x5, x2]
  41abc8:	cbz	x2, 41ac0c <ferror@plt+0x17edc>
  41abcc:	cmp	x2, #0x1
  41abd0:	b.eq	41ab98 <ferror@plt+0x17e68>  // b.none
  41abd4:	ldr	x3, [x20]
  41abd8:	ldr	x8, [x2]
  41abdc:	ldr	x7, [x3]
  41abe0:	cmp	x8, x7
  41abe4:	b.ne	41aba0 <ferror@plt+0x17e70>  // b.any
  41abe8:	ldr	x8, [x2, #8]
  41abec:	ldr	x7, [x3, #8]
  41abf0:	cmp	x8, x7
  41abf4:	b.ne	41aba0 <ferror@plt+0x17e70>  // b.any
  41abf8:	ldr	w7, [x2, #16]
  41abfc:	ldr	w2, [x3, #16]
  41ac00:	cmp	w7, w2
  41ac04:	b.ne	41aba0 <ferror@plt+0x17e70>  // b.any
  41ac08:	b	41ac28 <ferror@plt+0x17ef8>
  41ac0c:	cbz	w21, 41ac38 <ferror@plt+0x17f08>
  41ac10:	cbz	x9, 41ac44 <ferror@plt+0x17f14>
  41ac14:	ldr	x0, [x19, #24]
  41ac18:	sub	x0, x0, #0x1
  41ac1c:	str	x0, [x19, #24]
  41ac20:	str	xzr, [x9]
  41ac24:	mov	x0, x9
  41ac28:	ldp	x19, x20, [sp, #16]
  41ac2c:	ldp	x21, x22, [sp, #32]
  41ac30:	ldp	x29, x30, [sp], #48
  41ac34:	ret
  41ac38:	mov	x0, x2
  41ac3c:	b	41ac28 <ferror@plt+0x17ef8>
  41ac40:	cbz	w21, 41ac28 <ferror@plt+0x17ef8>
  41ac44:	ldr	x0, [x19, #16]
  41ac48:	add	x0, x0, #0x1
  41ac4c:	str	x0, [x19, #16]
  41ac50:	ubfiz	x0, x4, #4, #32
  41ac54:	add	x0, x5, x0
  41ac58:	b	41ac28 <ferror@plt+0x17ef8>
  41ac5c:	stp	x29, x30, [sp, #-64]!
  41ac60:	mov	x29, sp
  41ac64:	stp	x19, x20, [sp, #16]
  41ac68:	stp	x21, x22, [sp, #32]
  41ac6c:	str	x23, [sp, #48]
  41ac70:	mov	x19, x0
  41ac74:	ldr	x21, [x0]
  41ac78:	ldr	w23, [x0, #40]
  41ac7c:	ldr	x22, [x0, #8]
  41ac80:	add	x20, x22, x22, lsl #1
  41ac84:	add	x20, x21, x20, lsl #3
  41ac88:	ldr	x1, [x0, #16]
  41ac8c:	ldr	x0, [x0, #24]
  41ac90:	sub	x1, x1, x0
  41ac94:	lsl	x0, x1, #1
  41ac98:	cmp	x22, x1, lsl #1
  41ac9c:	b.cc	41acb8 <ferror@plt+0x17f88>  // b.lo, b.ul, b.last
  41aca0:	lsl	w1, w1, #3
  41aca4:	cmp	x1, #0x20
  41aca8:	mov	x2, #0x20                  	// #32
  41acac:	csel	x1, x1, x2, cs  // cs = hs, nlast
  41acb0:	cmp	x22, x1
  41acb4:	b.ls	41acd0 <ferror@plt+0x17fa0>  // b.plast
  41acb8:	bl	40dcb0 <ferror@plt+0xaf80>
  41acbc:	mov	w23, w0
  41acc0:	ubfiz	x1, x23, #4, #32
  41acc4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41acc8:	add	x0, x0, #0xf98
  41accc:	ldr	w22, [x0, x1]
  41acd0:	ldrb	w0, [x19, #44]
  41acd4:	cbnz	w0, 41ace8 <ferror@plt+0x17fb8>
  41acd8:	mov	x1, #0x18                  	// #24
  41acdc:	mov	x0, x22
  41ace0:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41ace4:	b	41ad04 <ferror@plt+0x17fd4>
  41ace8:	add	x0, x22, x22, lsl #1
  41acec:	mov	x3, #0x0                   	// #0
  41acf0:	mov	x2, #0x0                   	// #0
  41acf4:	mov	x1, #0x0                   	// #0
  41acf8:	lsl	x0, x0, #3
  41acfc:	bl	40e0f8 <ferror@plt+0xb3c8>
  41ad00:	cbz	x0, 41ad50 <ferror@plt+0x18020>
  41ad04:	cbz	x22, 41ad20 <ferror@plt+0x17ff0>
  41ad08:	mov	x1, x0
  41ad0c:	add	x2, x22, x22, lsl #1
  41ad10:	add	x2, x0, x2, lsl #3
  41ad14:	str	xzr, [x1], #24
  41ad18:	cmp	x1, x2
  41ad1c:	b.ne	41ad14 <ferror@plt+0x17fe4>  // b.any
  41ad20:	str	x0, [x19]
  41ad24:	str	x22, [x19, #8]
  41ad28:	str	w23, [x19, #40]
  41ad2c:	ldr	x0, [x19, #16]
  41ad30:	ldr	x1, [x19, #24]
  41ad34:	sub	x0, x0, x1
  41ad38:	str	x0, [x19, #16]
  41ad3c:	str	xzr, [x19, #24]
  41ad40:	mov	x6, x21
  41ad44:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41ad48:	add	x9, x9, #0xf98
  41ad4c:	b	41ad84 <ferror@plt+0x18054>
  41ad50:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41ad54:	add	x2, x2, #0xd88
  41ad58:	mov	w1, #0x2b5                 	// #693
  41ad5c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41ad60:	add	x0, x0, #0xd98
  41ad64:	bl	4102b4 <ferror@plt+0xd584>
  41ad68:	ldp	x0, x1, [x6]
  41ad6c:	stp	x0, x1, [x7]
  41ad70:	ldr	x0, [x6, #16]
  41ad74:	str	x0, [x7, #16]
  41ad78:	add	x6, x6, #0x18
  41ad7c:	cmp	x20, x6
  41ad80:	b.ls	41ae38 <ferror@plt+0x18108>  // b.plast
  41ad84:	ldr	x0, [x6]
  41ad88:	cmp	x0, #0x1
  41ad8c:	b.ls	41ad78 <ferror@plt+0x18048>  // b.plast
  41ad90:	asr	x3, x0, #3
  41ad94:	ldr	w8, [x19, #40]
  41ad98:	ubfiz	x2, x8, #4, #32
  41ad9c:	add	x1, x9, x2
  41ada0:	ldr	w10, [x9, x2]
  41ada4:	ldr	w11, [x1, #12]
  41ada8:	ubfx	x0, x0, #3, #32
  41adac:	ldr	w1, [x1, #4]
  41adb0:	mul	x1, x1, x0
  41adb4:	lsr	x1, x1, #32
  41adb8:	sub	w2, w3, w1
  41adbc:	add	w1, w1, w2, lsr #1
  41adc0:	lsr	w1, w1, w11
  41adc4:	msub	w1, w1, w10, w3
  41adc8:	ldr	x4, [x19]
  41adcc:	ubfiz	x2, x1, #1, #32
  41add0:	add	x2, x2, w1, uxtw
  41add4:	add	x7, x4, x2, lsl #3
  41add8:	ldr	x2, [x4, x2, lsl #3]
  41addc:	cbz	x2, 41ad68 <ferror@plt+0x18038>
  41ade0:	ldr	x5, [x19, #8]
  41ade4:	ubfiz	x8, x8, #4, #32
  41ade8:	add	x8, x9, x8
  41adec:	ldr	w2, [x8, #8]
  41adf0:	mul	x0, x2, x0
  41adf4:	lsr	x0, x0, #32
  41adf8:	add	w2, w3, #0x1
  41adfc:	sub	w3, w3, w0
  41ae00:	add	w3, w0, w3, lsr #1
  41ae04:	lsr	w3, w3, w11
  41ae08:	sub	w10, w10, #0x2
  41ae0c:	msub	w3, w3, w10, w2
  41ae10:	add	w1, w1, w3
  41ae14:	sub	w0, w1, w5
  41ae18:	cmp	x5, w1, uxtw
  41ae1c:	csel	w1, w0, w1, ls  // ls = plast
  41ae20:	ubfiz	x2, x1, #1, #32
  41ae24:	add	x2, x2, w1, uxtw
  41ae28:	add	x7, x4, x2, lsl #3
  41ae2c:	ldr	x0, [x4, x2, lsl #3]
  41ae30:	cbnz	x0, 41ae10 <ferror@plt+0x180e0>
  41ae34:	b	41ad68 <ferror@plt+0x18038>
  41ae38:	ldrb	w0, [x19, #44]
  41ae3c:	cbnz	w0, 41ae5c <ferror@plt+0x1812c>
  41ae40:	mov	x0, x21
  41ae44:	bl	402a90 <free@plt>
  41ae48:	ldp	x19, x20, [sp, #16]
  41ae4c:	ldp	x21, x22, [sp, #32]
  41ae50:	ldr	x23, [sp, #48]
  41ae54:	ldp	x29, x30, [sp], #64
  41ae58:	ret
  41ae5c:	mov	x0, x21
  41ae60:	bl	40e140 <ferror@plt+0xb410>
  41ae64:	b	41ae48 <ferror@plt+0x18118>
  41ae68:	stp	x29, x30, [sp, #-48]!
  41ae6c:	mov	x29, sp
  41ae70:	stp	x19, x20, [sp, #16]
  41ae74:	stp	x21, x22, [sp, #32]
  41ae78:	mov	x19, x0
  41ae7c:	mov	x20, x1
  41ae80:	mov	w22, w2
  41ae84:	mov	w21, w3
  41ae88:	cmp	w3, #0x1
  41ae8c:	b.eq	41af48 <ferror@plt+0x18218>  // b.none
  41ae90:	ldr	w0, [x19, #32]
  41ae94:	add	w0, w0, #0x1
  41ae98:	str	w0, [x19, #32]
  41ae9c:	ldr	w2, [x19, #40]
  41aea0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41aea4:	add	x0, x0, #0xf98
  41aea8:	ubfiz	x3, x2, #4, #32
  41aeac:	add	x1, x0, x3
  41aeb0:	ldr	w8, [x0, x3]
  41aeb4:	ldr	w9, [x1, #12]
  41aeb8:	mov	w5, w22
  41aebc:	ldr	w0, [x1, #4]
  41aec0:	mul	x0, x0, x5
  41aec4:	lsr	x0, x0, #32
  41aec8:	sub	w4, w22, w0
  41aecc:	add	w4, w0, w4, lsr #1
  41aed0:	lsr	w4, w4, w9
  41aed4:	msub	w4, w4, w8, w22
  41aed8:	ldr	x7, [x19]
  41aedc:	ubfiz	x0, x4, #1, #32
  41aee0:	add	x0, x0, w4, uxtw
  41aee4:	lsl	x0, x0, #3
  41aee8:	add	x6, x7, x0
  41aeec:	ldr	x0, [x7, x0]
  41aef0:	cbz	x0, 41aff4 <ferror@plt+0x182c4>
  41aef4:	cmp	x0, #0x1
  41aef8:	b.eq	41af0c <ferror@plt+0x181dc>  // b.none
  41aefc:	ldr	x1, [x20]
  41af00:	cmp	x0, x1
  41af04:	b.eq	41afe4 <ferror@plt+0x182b4>  // b.none
  41af08:	mov	x6, #0x0                   	// #0
  41af0c:	ubfiz	x3, x2, #4, #32
  41af10:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41af14:	add	x2, x2, #0xf98
  41af18:	add	x2, x2, x3
  41af1c:	ldr	w0, [x2, #8]
  41af20:	mul	x0, x0, x5
  41af24:	lsr	x0, x0, #32
  41af28:	ldr	x5, [x19, #8]
  41af2c:	add	w2, w22, #0x1
  41af30:	sub	w1, w22, w0
  41af34:	add	w1, w0, w1, lsr #1
  41af38:	lsr	w1, w1, w9
  41af3c:	sub	w8, w8, #0x2
  41af40:	msub	w1, w1, w8, w2
  41af44:	b	41af70 <ferror@plt+0x18240>
  41af48:	ldr	x0, [x0, #8]
  41af4c:	add	x0, x0, x0, lsl #1
  41af50:	ldr	x1, [x19, #16]
  41af54:	cmp	x0, x1, lsl #2
  41af58:	b.hi	41ae90 <ferror@plt+0x18160>  // b.pmore
  41af5c:	mov	x0, x19
  41af60:	bl	41ac5c <ferror@plt+0x17f2c>
  41af64:	b	41ae90 <ferror@plt+0x18160>
  41af68:	cmp	x6, #0x0
  41af6c:	csel	x6, x6, x0, ne  // ne = any
  41af70:	ldr	w2, [x19, #36]
  41af74:	add	w2, w2, #0x1
  41af78:	str	w2, [x19, #36]
  41af7c:	add	w4, w4, w1
  41af80:	sub	w0, w4, w5
  41af84:	cmp	x5, w4, uxtw
  41af88:	csel	w4, w0, w4, ls  // ls = plast
  41af8c:	ubfiz	x2, x4, #1, #32
  41af90:	add	x2, x2, w4, uxtw
  41af94:	add	x0, x7, x2, lsl #3
  41af98:	ldr	x2, [x7, x2, lsl #3]
  41af9c:	cbz	x2, 41afc4 <ferror@plt+0x18294>
  41afa0:	cmp	x2, #0x1
  41afa4:	b.eq	41af68 <ferror@plt+0x18238>  // b.none
  41afa8:	ldr	x3, [x20]
  41afac:	cmp	x2, x3
  41afb0:	b.ne	41af70 <ferror@plt+0x18240>  // b.any
  41afb4:	ldp	x19, x20, [sp, #16]
  41afb8:	ldp	x21, x22, [sp, #32]
  41afbc:	ldp	x29, x30, [sp], #48
  41afc0:	ret
  41afc4:	cbz	w21, 41afec <ferror@plt+0x182bc>
  41afc8:	cbz	x6, 41aff8 <ferror@plt+0x182c8>
  41afcc:	ldr	x0, [x19, #24]
  41afd0:	sub	x0, x0, #0x1
  41afd4:	str	x0, [x19, #24]
  41afd8:	str	xzr, [x6]
  41afdc:	mov	x0, x6
  41afe0:	b	41afb4 <ferror@plt+0x18284>
  41afe4:	mov	x0, x6
  41afe8:	b	41afb4 <ferror@plt+0x18284>
  41afec:	mov	x0, x2
  41aff0:	b	41afb4 <ferror@plt+0x18284>
  41aff4:	cbz	w21, 41afb4 <ferror@plt+0x18284>
  41aff8:	ldr	x0, [x19, #16]
  41affc:	add	x0, x0, #0x1
  41b000:	str	x0, [x19, #16]
  41b004:	ubfiz	x0, x4, #1, #32
  41b008:	add	x0, x0, w4, uxtw
  41b00c:	add	x0, x7, x0, lsl #3
  41b010:	b	41afb4 <ferror@plt+0x18284>
  41b014:	ldr	x1, [x0]
  41b018:	ldr	x3, [x0, #8]
  41b01c:	cmp	x1, x3
  41b020:	b.cs	41b040 <ferror@plt+0x18310>  // b.hs, b.nlast
  41b024:	ldr	x2, [x1]
  41b028:	cmp	x2, #0x1
  41b02c:	b.hi	41b048 <ferror@plt+0x18318>  // b.pmore
  41b030:	add	x1, x1, #0x10
  41b034:	str	x1, [x0]
  41b038:	cmp	x1, x3
  41b03c:	b.cc	41b024 <ferror@plt+0x182f4>  // b.lo, b.ul, b.last
  41b040:	str	xzr, [x0]
  41b044:	str	xzr, [x0, #8]
  41b048:	ret
  41b04c:	stp	x29, x30, [sp, #-64]!
  41b050:	mov	x29, sp
  41b054:	stp	x19, x20, [sp, #16]
  41b058:	str	x21, [sp, #32]
  41b05c:	mov	x19, x0
  41b060:	ldr	x0, [x0, #40]
  41b064:	ldr	x1, [x0]
  41b068:	ldr	x0, [x0, #8]
  41b06c:	add	x0, x1, x0, lsl #4
  41b070:	str	x1, [sp, #48]
  41b074:	str	x0, [sp, #56]
  41b078:	add	x0, sp, #0x30
  41b07c:	bl	41b014 <ferror@plt+0x182e4>
  41b080:	mov	x21, #0x20                  	// #32
  41b084:	mov	x20, #0x38                  	// #56
  41b088:	b	41b190 <ferror@plt+0x18460>
  41b08c:	ldr	x0, [sp, #56]
  41b090:	cbnz	x0, 41b198 <ferror@plt+0x18468>
  41b094:	ldr	x20, [x19, #40]
  41b098:	cbz	x20, 41b0d0 <ferror@plt+0x183a0>
  41b09c:	ldr	x0, [x20, #8]
  41b0a0:	sub	x1, x0, #0x1
  41b0a4:	cbz	x0, 41b0b4 <ferror@plt+0x18384>
  41b0a8:	sub	x1, x1, #0x1
  41b0ac:	cmp	x0, x1
  41b0b0:	b.hi	41b0a8 <ferror@plt+0x18378>  // b.pmore
  41b0b4:	ldrb	w0, [x20, #44]
  41b0b8:	cbnz	w0, 41b1a4 <ferror@plt+0x18474>
  41b0bc:	ldr	x0, [x20]
  41b0c0:	bl	402a90 <free@plt>
  41b0c4:	mov	x1, #0x30                  	// #48
  41b0c8:	mov	x0, x20
  41b0cc:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  41b0d0:	ldr	x20, [x19, #48]
  41b0d4:	cbz	x20, 41b110 <ferror@plt+0x183e0>
  41b0d8:	ldr	x0, [x20, #8]
  41b0dc:	sub	x1, x0, #0x1
  41b0e0:	cbz	x0, 41b0f4 <ferror@plt+0x183c4>
  41b0e4:	sub	x1, x1, #0x1
  41b0e8:	ldr	x2, [x20, #8]
  41b0ec:	cmp	x2, x1
  41b0f0:	b.hi	41b0e4 <ferror@plt+0x183b4>  // b.pmore
  41b0f4:	ldrb	w0, [x20, #44]
  41b0f8:	cbnz	w0, 41b1b0 <ferror@plt+0x18480>
  41b0fc:	ldr	x0, [x20]
  41b100:	bl	402a90 <free@plt>
  41b104:	mov	x1, #0x30                  	// #48
  41b108:	mov	x0, x20
  41b10c:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  41b110:	ldr	x19, [x19]
  41b114:	cbz	x19, 41b150 <ferror@plt+0x18420>
  41b118:	ldr	x1, [x19, #8]
  41b11c:	sub	x0, x1, #0x1
  41b120:	cbz	x1, 41b134 <ferror@plt+0x18404>
  41b124:	sub	x0, x0, #0x1
  41b128:	ldr	x1, [x19, #8]
  41b12c:	cmp	x1, x0
  41b130:	b.hi	41b124 <ferror@plt+0x183f4>  // b.pmore
  41b134:	ldrb	w0, [x19, #44]
  41b138:	cbnz	w0, 41b1bc <ferror@plt+0x1848c>
  41b13c:	ldr	x0, [x19]
  41b140:	bl	402a90 <free@plt>
  41b144:	mov	x1, #0x30                  	// #48
  41b148:	mov	x0, x19
  41b14c:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  41b150:	ldp	x19, x20, [sp, #16]
  41b154:	ldr	x21, [sp, #32]
  41b158:	ldp	x29, x30, [sp], #64
  41b15c:	ret
  41b160:	mov	x1, x21
  41b164:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  41b168:	ldr	x1, [sp, #48]
  41b16c:	ldr	x0, [x1, #8]
  41b170:	cbz	x0, 41b17c <ferror@plt+0x1844c>
  41b174:	mov	x1, x20
  41b178:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  41b17c:	ldr	x1, [sp, #48]
  41b180:	add	x1, x1, #0x10
  41b184:	str	x1, [sp, #48]
  41b188:	add	x0, sp, #0x30
  41b18c:	bl	41b014 <ferror@plt+0x182e4>
  41b190:	ldr	x1, [sp, #48]
  41b194:	cbz	x1, 41b08c <ferror@plt+0x1835c>
  41b198:	ldr	x0, [x1]
  41b19c:	cbnz	x0, 41b160 <ferror@plt+0x18430>
  41b1a0:	b	41b168 <ferror@plt+0x18438>
  41b1a4:	ldr	x0, [x20]
  41b1a8:	bl	40e140 <ferror@plt+0xb410>
  41b1ac:	b	41b0c4 <ferror@plt+0x18394>
  41b1b0:	ldr	x0, [x20]
  41b1b4:	bl	40e140 <ferror@plt+0xb410>
  41b1b8:	b	41b104 <ferror@plt+0x183d4>
  41b1bc:	ldr	x0, [x19]
  41b1c0:	bl	40e140 <ferror@plt+0xb410>
  41b1c4:	b	41b144 <ferror@plt+0x18414>
  41b1c8:	stp	x29, x30, [sp, #-32]!
  41b1cc:	mov	x29, sp
  41b1d0:	stp	x19, x20, [sp, #16]
  41b1d4:	mov	x19, x0
  41b1d8:	ldr	x0, [x0, #16]
  41b1dc:	bl	4029c0 <feof@plt>
  41b1e0:	mov	w1, #0x0                   	// #0
  41b1e4:	cbz	w0, 41b1f8 <ferror@plt+0x184c8>
  41b1e8:	mov	w0, w1
  41b1ec:	ldp	x19, x20, [sp, #16]
  41b1f0:	ldp	x29, x30, [sp], #32
  41b1f4:	ret
  41b1f8:	ldr	x0, [x19, #16]
  41b1fc:	bl	402d30 <ferror@plt>
  41b200:	mov	w1, #0x0                   	// #0
  41b204:	cbnz	w0, 41b1e8 <ferror@plt+0x184b8>
  41b208:	ldr	x0, [x19, #32]
  41b20c:	ldr	x1, [x19, #40]
  41b210:	cmp	x1, x0
  41b214:	b.ne	41b23c <ferror@plt+0x1850c>  // b.any
  41b218:	lsl	x20, x0, #1
  41b21c:	cmp	x0, #0x0
  41b220:	mov	x0, #0x1000                	// #4096
  41b224:	csel	x20, x20, x0, ne  // ne = any
  41b228:	mov	x1, x20
  41b22c:	ldr	x0, [x19, #24]
  41b230:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41b234:	str	x0, [x19, #24]
  41b238:	str	x20, [x19, #32]
  41b23c:	ldr	x0, [x19, #40]
  41b240:	ldr	x2, [x19, #32]
  41b244:	ldr	x4, [x19, #24]
  41b248:	ldr	x3, [x19, #16]
  41b24c:	sub	x2, x2, x0
  41b250:	mov	x1, #0x1                   	// #1
  41b254:	add	x0, x4, x0
  41b258:	bl	402a60 <fread@plt>
  41b25c:	mov	x20, x0
  41b260:	ldr	x0, [x19, #16]
  41b264:	bl	402d30 <ferror@plt>
  41b268:	mov	w1, #0x0                   	// #0
  41b26c:	cbnz	w0, 41b1e8 <ferror@plt+0x184b8>
  41b270:	ldr	x0, [x19, #40]
  41b274:	add	x0, x0, x20
  41b278:	str	x0, [x19, #40]
  41b27c:	cmp	x20, #0x0
  41b280:	cset	w1, ne  // ne = any
  41b284:	b	41b1e8 <ferror@plt+0x184b8>
  41b288:	stp	x29, x30, [sp, #-112]!
  41b28c:	mov	x29, sp
  41b290:	stp	x19, x20, [sp, #16]
  41b294:	stp	x21, x22, [sp, #32]
  41b298:	stp	x23, x24, [sp, #48]
  41b29c:	mov	x21, x8
  41b2a0:	mov	w19, w0
  41b2a4:	and	w23, w1, #0xff
  41b2a8:	mov	w20, w2
  41b2ac:	mov	x22, #0x0                   	// #0
  41b2b0:	tbnz	w0, #31, 41b324 <ferror@plt+0x185f4>
  41b2b4:	stp	xzr, xzr, [sp, #80]
  41b2b8:	stp	xzr, xzr, [sp, #96]
  41b2bc:	cmp	w19, #0x1
  41b2c0:	b.ls	41b40c <ferror@plt+0x186dc>  // b.plast
  41b2c4:	mov	w2, #0x0                   	// #0
  41b2c8:	cbz	w23, 41b34c <ferror@plt+0x1861c>
  41b2cc:	add	x3, sp, #0x48
  41b2d0:	mov	w1, w19
  41b2d4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b2d8:	ldr	x0, [x0, #2416]
  41b2dc:	bl	4332f0 <ferror@plt+0x305c0>
  41b2e0:	mov	w19, w0
  41b2e4:	cmp	w20, #0x1
  41b2e8:	b.eq	41b3d0 <ferror@plt+0x186a0>  // b.none
  41b2ec:	cmp	w20, #0x2
  41b2f0:	b.ne	41b36c <ferror@plt+0x1863c>  // b.any
  41b2f4:	mov	w1, w0
  41b2f8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b2fc:	ldr	x0, [x0, #2416]
  41b300:	bl	432f78 <ferror@plt+0x30248>
  41b304:	lsr	x0, x0, #32
  41b308:	cmp	w19, w0
  41b30c:	b.eq	41b370 <ferror@plt+0x18640>  // b.none
  41b310:	mov	x8, x21
  41b314:	mov	w2, #0x2                   	// #2
  41b318:	mov	w1, w23
  41b31c:	bl	41b288 <ferror@plt+0x18558>
  41b320:	b	41b3a4 <ferror@plt+0x18674>
  41b324:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b328:	mov	w1, w0
  41b32c:	ldr	x0, [x24, #2416]
  41b330:	bl	432334 <ferror@plt+0x2f604>
  41b334:	mov	x22, x0
  41b338:	mov	w1, w19
  41b33c:	ldr	x0, [x24, #2416]
  41b340:	bl	432350 <ferror@plt+0x2f620>
  41b344:	mov	w19, w0
  41b348:	b	41b2b4 <ferror@plt+0x18584>
  41b34c:	mov	x2, #0x0                   	// #0
  41b350:	mov	w1, w19
  41b354:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b358:	ldr	x0, [x0, #2416]
  41b35c:	bl	4338e4 <ferror@plt+0x30bb4>
  41b360:	mov	w19, w0
  41b364:	mov	w2, #0x1                   	// #1
  41b368:	b	41b2cc <ferror@plt+0x1859c>
  41b36c:	cbnz	w20, 41b3b8 <ferror@plt+0x18688>
  41b370:	add	x8, sp, #0x50
  41b374:	mov	w2, w19
  41b378:	ldr	x1, [sp, #72]
  41b37c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b380:	ldr	x0, [x0, #2416]
  41b384:	bl	4339f4 <ferror@plt+0x30cc4>
  41b388:	str	x22, [sp, #96]
  41b38c:	cmp	w19, #0x1
  41b390:	b.ls	41b410 <ferror@plt+0x186e0>  // b.plast
  41b394:	ldp	x0, x1, [sp, #80]
  41b398:	stp	x0, x1, [x21]
  41b39c:	ldp	x0, x1, [sp, #96]
  41b3a0:	stp	x0, x1, [x21, #16]
  41b3a4:	ldp	x19, x20, [sp, #16]
  41b3a8:	ldp	x21, x22, [sp, #32]
  41b3ac:	ldp	x23, x24, [sp, #48]
  41b3b0:	ldp	x29, x30, [sp], #112
  41b3b4:	ret
  41b3b8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b3bc:	add	x2, x2, #0xf50
  41b3c0:	mov	w1, #0xc7                  	// #199
  41b3c4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b3c8:	add	x0, x0, #0xf68
  41b3cc:	bl	4102b4 <ferror@plt+0xd584>
  41b3d0:	mov	w1, w0
  41b3d4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41b3d8:	ldr	x0, [x0, #2416]
  41b3dc:	bl	432f78 <ferror@plt+0x30248>
  41b3e0:	cmp	w19, w0
  41b3e4:	b.eq	41b370 <ferror@plt+0x18640>  // b.none
  41b3e8:	mov	x8, x21
  41b3ec:	mov	w2, #0x1                   	// #1
  41b3f0:	mov	w1, w23
  41b3f4:	bl	41b288 <ferror@plt+0x18558>
  41b3f8:	b	41b3a4 <ferror@plt+0x18674>
  41b3fc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b400:	add	x0, x0, #0x280
  41b404:	bl	402cd0 <gettext@plt>
  41b408:	b	41b418 <ferror@plt+0x186e8>
  41b40c:	str	x22, [sp, #96]
  41b410:	mov	x0, #0x0                   	// #0
  41b414:	cbnz	w19, 41b3fc <ferror@plt+0x186cc>
  41b418:	str	x0, [sp, #80]
  41b41c:	b	41b394 <ferror@plt+0x18664>
  41b420:	stp	x29, x30, [sp, #-48]!
  41b424:	mov	x29, sp
  41b428:	stp	x19, x20, [sp, #16]
  41b42c:	str	x21, [sp, #32]
  41b430:	mov	x19, x0
  41b434:	mov	w20, w2
  41b438:	mov	w21, w3
  41b43c:	mov	x2, x1
  41b440:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41b444:	add	x1, x1, #0x420
  41b448:	bl	402ce0 <fprintf@plt>
  41b44c:	mov	w3, w21
  41b450:	mov	w2, w20
  41b454:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b458:	add	x1, x1, #0xf80
  41b45c:	mov	x0, x19
  41b460:	bl	402ce0 <fprintf@plt>
  41b464:	mov	x1, x19
  41b468:	mov	w0, #0xa                   	// #10
  41b46c:	bl	402750 <fputc@plt>
  41b470:	ldp	x19, x20, [sp, #16]
  41b474:	ldr	x21, [sp, #32]
  41b478:	ldp	x29, x30, [sp], #48
  41b47c:	ret
  41b480:	stp	x29, x30, [sp, #-80]!
  41b484:	mov	x29, sp
  41b488:	stp	x19, x20, [sp, #16]
  41b48c:	stp	x21, x22, [sp, #32]
  41b490:	stp	x23, x24, [sp, #48]
  41b494:	mov	x20, x0
  41b498:	mov	x22, x2
  41b49c:	mov	w23, w3
  41b4a0:	mov	w21, w4
  41b4a4:	mov	w24, w5
  41b4a8:	mov	w3, #0x20                  	// #32
  41b4ac:	mov	w2, w1
  41b4b0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b4b4:	add	x1, x1, #0xfa8
  41b4b8:	bl	402ce0 <fprintf@plt>
  41b4bc:	mov	x1, x20
  41b4c0:	mov	w0, #0x7c                  	// #124
  41b4c4:	bl	402750 <fputc@plt>
  41b4c8:	cmp	w21, #0x1
  41b4cc:	b.le	41b520 <ferror@plt+0x187f0>
  41b4d0:	str	x25, [sp, #64]
  41b4d4:	mov	w19, #0x1                   	// #1
  41b4d8:	mov	w25, #0x6667                	// #26215
  41b4dc:	movk	w25, #0x6666, lsl #16
  41b4e0:	ldrb	w0, [x22, #7]
  41b4e4:	lsl	w0, w19, w0
  41b4e8:	add	w0, w0, w23
  41b4ec:	udiv	w0, w0, w24
  41b4f0:	smull	x1, w0, w25
  41b4f4:	asr	x1, x1, #34
  41b4f8:	sub	w1, w1, w0, asr #31
  41b4fc:	add	w1, w1, w1, lsl #2
  41b500:	sub	w0, w0, w1, lsl #1
  41b504:	mov	x1, x20
  41b508:	add	w0, w0, #0x30
  41b50c:	bl	402750 <fputc@plt>
  41b510:	add	w19, w19, #0x1
  41b514:	cmp	w21, w19
  41b518:	b.ne	41b4e0 <ferror@plt+0x187b0>  // b.any
  41b51c:	ldr	x25, [sp, #64]
  41b520:	mov	x1, x20
  41b524:	mov	w0, #0xa                   	// #10
  41b528:	bl	402750 <fputc@plt>
  41b52c:	ldp	x19, x20, [sp, #16]
  41b530:	ldp	x21, x22, [sp, #32]
  41b534:	ldp	x23, x24, [sp, #48]
  41b538:	ldp	x29, x30, [sp], #80
  41b53c:	ret
  41b540:	stp	x29, x30, [sp, #-112]!
  41b544:	mov	x29, sp
  41b548:	stp	x19, x20, [sp, #16]
  41b54c:	stp	x21, x22, [sp, #32]
  41b550:	stp	x23, x24, [sp, #48]
  41b554:	mov	x19, x0
  41b558:	mov	x24, x1
  41b55c:	mov	x21, x2
  41b560:	ldr	x0, [x0, #40]
  41b564:	cbz	x0, 41b644 <ferror@plt+0x18914>
  41b568:	ldr	x1, [x19, #32]
  41b56c:	cmp	x0, x1
  41b570:	b.eq	41b644 <ferror@plt+0x18914>  // b.none
  41b574:	sub	x0, x0, #0x1
  41b578:	ldr	x1, [x19, #48]
  41b57c:	cmp	x1, x0
  41b580:	b.cs	41b644 <ferror@plt+0x18914>  // b.hs, b.nlast
  41b584:	ldr	x0, [x19, #48]
  41b588:	ldr	x2, [x19, #40]
  41b58c:	subs	x2, x2, x0
  41b590:	b.eq	41ba04 <ferror@plt+0x18cd4>  // b.none
  41b594:	ldr	x22, [x19, #24]
  41b598:	add	x22, x22, x0
  41b59c:	mov	w1, #0xa                   	// #10
  41b5a0:	mov	x0, x22
  41b5a4:	bl	402b80 <memchr@plt>
  41b5a8:	mov	x20, x0
  41b5ac:	cbz	x0, 41b650 <ferror@plt+0x18920>
  41b5b0:	add	x23, x0, #0x1
  41b5b4:	strb	wzr, [x19, #72]
  41b5b8:	ldr	x0, [x19, #16]
  41b5bc:	bl	402d30 <ferror@plt>
  41b5c0:	mov	w1, #0x0                   	// #0
  41b5c4:	cbnz	w0, 41b62c <ferror@plt+0x188fc>
  41b5c8:	stp	x25, x26, [sp, #64]
  41b5cc:	sub	x25, x20, x22
  41b5d0:	ldr	x1, [x19, #48]
  41b5d4:	ldr	x0, [x19, #40]
  41b5d8:	cmp	x1, x0
  41b5dc:	b.cs	41b5e4 <ferror@plt+0x188b4>  // b.hs, b.nlast
  41b5e0:	str	x22, [x24]
  41b5e4:	ldr	x22, [x19, #56]
  41b5e8:	add	x22, x22, #0x1
  41b5ec:	str	x22, [x19, #56]
  41b5f0:	ldr	x0, [x19, #64]
  41b5f4:	cmp	x22, x0
  41b5f8:	b.hi	41b610 <ferror@plt+0x188e0>  // b.pmore
  41b5fc:	ldr	x24, [x19, #80]
  41b600:	cbz	x24, 41b710 <ferror@plt+0x189e0>
  41b604:	ldr	w1, [x24, #4]
  41b608:	cmp	w1, #0x63
  41b60c:	b.ls	41ba18 <ferror@plt+0x18ce8>  // b.plast
  41b610:	cbz	x23, 41b9fc <ferror@plt+0x18ccc>
  41b614:	ldr	x0, [x19, #24]
  41b618:	sub	x23, x23, x0
  41b61c:	str	x23, [x19, #48]
  41b620:	str	x25, [x21]
  41b624:	mov	w1, #0x1                   	// #1
  41b628:	ldp	x25, x26, [sp, #64]
  41b62c:	mov	w0, w1
  41b630:	ldp	x19, x20, [sp, #16]
  41b634:	ldp	x21, x22, [sp, #32]
  41b638:	ldp	x23, x24, [sp, #48]
  41b63c:	ldp	x29, x30, [sp], #112
  41b640:	ret
  41b644:	mov	x0, x19
  41b648:	bl	41b1c8 <ferror@plt+0x18498>
  41b64c:	b	41b584 <ferror@plt+0x18854>
  41b650:	mov	w23, #0xa                   	// #10
  41b654:	b	41b68c <ferror@plt+0x1895c>
  41b658:	mov	x0, x19
  41b65c:	bl	41b1c8 <ferror@plt+0x18498>
  41b660:	and	w0, w0, #0xff
  41b664:	cbz	w0, 41b6b0 <ferror@plt+0x18980>
  41b668:	ldr	x0, [x19, #48]
  41b66c:	ldr	x22, [x19, #24]
  41b670:	add	x22, x22, x0
  41b674:	ldr	x2, [x19, #40]
  41b678:	sub	x2, x2, x0
  41b67c:	mov	w1, w23
  41b680:	mov	x0, x22
  41b684:	bl	402b80 <memchr@plt>
  41b688:	cbnz	x0, 41b6e4 <ferror@plt+0x189b4>
  41b68c:	ldr	x0, [x19, #40]
  41b690:	cbz	x0, 41b658 <ferror@plt+0x18928>
  41b694:	ldr	x1, [x19, #32]
  41b698:	cmp	x0, x1
  41b69c:	b.eq	41b658 <ferror@plt+0x18928>  // b.none
  41b6a0:	sub	x0, x0, #0x1
  41b6a4:	ldr	x1, [x19, #48]
  41b6a8:	cmp	x1, x0
  41b6ac:	b.cs	41b658 <ferror@plt+0x18928>  // b.hs, b.nlast
  41b6b0:	stp	x25, x26, [sp, #64]
  41b6b4:	ldr	x23, [x19, #24]
  41b6b8:	ldr	x25, [x19, #40]
  41b6bc:	mov	w0, #0x1                   	// #1
  41b6c0:	strb	w0, [x19, #72]
  41b6c4:	ldr	x0, [x19, #16]
  41b6c8:	bl	402d30 <ferror@plt>
  41b6cc:	cbnz	w0, 41ba0c <ferror@plt+0x18cdc>
  41b6d0:	adds	x0, x23, x25
  41b6d4:	b.eq	41b6f4 <ferror@plt+0x189c4>  // b.none
  41b6d8:	mov	x23, x20
  41b6dc:	mov	x20, x0
  41b6e0:	b	41b5cc <ferror@plt+0x1889c>
  41b6e4:	add	x23, x0, #0x1
  41b6e8:	strb	wzr, [x19, #72]
  41b6ec:	mov	x20, x0
  41b6f0:	b	41b5b8 <ferror@plt+0x18888>
  41b6f4:	stp	x27, x28, [sp, #80]
  41b6f8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b6fc:	add	x2, x2, #0xfb0
  41b700:	mov	w1, #0x241                 	// #577
  41b704:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41b708:	add	x0, x0, #0xf68
  41b70c:	bl	4102b4 <ferror@plt+0xd584>
  41b710:	cmp	x0, #0x64
  41b714:	b.hi	41b824 <ferror@plt+0x18af4>  // b.pmore
  41b718:	cbz	x22, 41b610 <ferror@plt+0x188e0>
  41b71c:	stp	x27, x28, [sp, #80]
  41b720:	ldr	x27, [x19, #48]
  41b724:	ldr	x0, [x19, #24]
  41b728:	sub	x20, x20, x0
  41b72c:	str	wzr, [sp, #104]
  41b730:	mov	w28, #0x0                   	// #0
  41b734:	mov	w1, #0x1                   	// #1
  41b738:	ldr	x0, [x19, #80]
  41b73c:	cbz	x0, 41b98c <ferror@plt+0x18c5c>
  41b740:	ldr	w2, [x0, #4]
  41b744:	ldr	w0, [x0]
  41b748:	add	w1, w1, w2
  41b74c:	and	w0, w0, #0x7fffffff
  41b750:	bl	4195d0 <ferror@plt+0x168a0>
  41b754:	mov	w26, w0
  41b758:	ubfiz	x1, x26, #1, #32
  41b75c:	add	x1, x1, w0, uxtw
  41b760:	lsl	x1, x1, #3
  41b764:	add	x1, x1, #0x8
  41b768:	ldr	x0, [x19, #80]
  41b76c:	cbz	x0, 41b9b0 <ferror@plt+0x18c80>
  41b770:	ldr	w2, [x0, #4]
  41b774:	str	w2, [sp, #108]
  41b778:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41b77c:	str	x0, [x19, #80]
  41b780:	ldr	w1, [x0]
  41b784:	bfxil	w1, w26, #0, #31
  41b788:	str	w1, [x0]
  41b78c:	ubfx	x1, x1, #24, #7
  41b790:	strb	w1, [x0, #3]
  41b794:	ldr	w1, [sp, #108]
  41b798:	str	w1, [x0, #4]
  41b79c:	ldr	w0, [sp, #104]
  41b7a0:	cbz	w0, 41b7ec <ferror@plt+0x18abc>
  41b7a4:	ldr	x6, [x19, #80]
  41b7a8:	cbz	w28, 41b7e4 <ferror@plt+0x18ab4>
  41b7ac:	sub	w0, w28, #0x1
  41b7b0:	add	x0, x0, x0, lsl #1
  41b7b4:	lsl	x3, x0, #3
  41b7b8:	add	x3, x3, #0x20
  41b7bc:	mov	x0, #0x8                   	// #8
  41b7c0:	add	x1, x6, x0
  41b7c4:	add	x2, x24, x0
  41b7c8:	ldp	x4, x5, [x2]
  41b7cc:	stp	x4, x5, [x1]
  41b7d0:	ldr	x2, [x2, #16]
  41b7d4:	str	x2, [x1, #16]
  41b7d8:	add	x0, x0, #0x18
  41b7dc:	cmp	x0, x3
  41b7e0:	b.ne	41b7c0 <ferror@plt+0x18a90>  // b.any
  41b7e4:	ldr	x0, [x19, #80]
  41b7e8:	str	w28, [x0, #4]
  41b7ec:	ldr	x1, [x19, #80]
  41b7f0:	ldr	w0, [x1, #4]
  41b7f4:	add	w2, w0, #0x1
  41b7f8:	str	w2, [x1, #4]
  41b7fc:	ubfiz	x2, x0, #1, #32
  41b800:	add	x0, x2, w0, uxtw
  41b804:	lsl	x0, x0, #3
  41b808:	add	x0, x0, #0x8
  41b80c:	add	x2, x1, x0
  41b810:	str	x22, [x1, x0]
  41b814:	str	x27, [x2, #8]
  41b818:	str	x20, [x2, #16]
  41b81c:	ldp	x27, x28, [sp, #80]
  41b820:	b	41b610 <ferror@plt+0x188e0>
  41b824:	stp	x27, x28, [sp, #80]
  41b828:	ldr	x27, [x19, #48]
  41b82c:	ldr	x0, [x19, #24]
  41b830:	sub	x20, x20, x0
  41b834:	str	wzr, [sp, #104]
  41b838:	mov	w28, #0x0                   	// #0
  41b83c:	mov	w1, #0x1                   	// #1
  41b840:	ldr	x0, [x19, #80]
  41b844:	cbz	x0, 41b9d0 <ferror@plt+0x18ca0>
  41b848:	ldr	w2, [x0, #4]
  41b84c:	ldr	w0, [x0]
  41b850:	add	w1, w1, w2
  41b854:	and	w0, w0, #0x7fffffff
  41b858:	bl	4195d0 <ferror@plt+0x168a0>
  41b85c:	mov	w26, w0
  41b860:	ubfiz	x1, x26, #1, #32
  41b864:	add	x1, x1, w0, uxtw
  41b868:	lsl	x1, x1, #3
  41b86c:	add	x1, x1, #0x8
  41b870:	ldr	x0, [x19, #80]
  41b874:	cbz	x0, 41b9f4 <ferror@plt+0x18cc4>
  41b878:	ldr	w2, [x0, #4]
  41b87c:	str	w2, [sp, #108]
  41b880:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41b884:	str	x0, [x19, #80]
  41b888:	ldr	w1, [x0]
  41b88c:	bfxil	w1, w26, #0, #31
  41b890:	str	w1, [x0]
  41b894:	ubfx	x1, x1, #24, #7
  41b898:	strb	w1, [x0, #3]
  41b89c:	ldr	w1, [sp, #108]
  41b8a0:	str	w1, [x0, #4]
  41b8a4:	ldr	w0, [sp, #104]
  41b8a8:	cbz	w0, 41b8f4 <ferror@plt+0x18bc4>
  41b8ac:	ldr	x6, [x19, #80]
  41b8b0:	cbz	w28, 41b8ec <ferror@plt+0x18bbc>
  41b8b4:	sub	w0, w28, #0x1
  41b8b8:	add	x0, x0, x0, lsl #1
  41b8bc:	lsl	x3, x0, #3
  41b8c0:	add	x3, x3, #0x20
  41b8c4:	mov	x0, #0x8                   	// #8
  41b8c8:	add	x1, x6, x0
  41b8cc:	add	x2, x24, x0
  41b8d0:	ldp	x4, x5, [x2]
  41b8d4:	stp	x4, x5, [x1]
  41b8d8:	ldr	x2, [x2, #16]
  41b8dc:	str	x2, [x1, #16]
  41b8e0:	add	x0, x0, #0x18
  41b8e4:	cmp	x0, x3
  41b8e8:	b.ne	41b8c8 <ferror@plt+0x18b98>  // b.any
  41b8ec:	ldr	x0, [x19, #80]
  41b8f0:	str	w28, [x0, #4]
  41b8f4:	ldr	x1, [x19, #80]
  41b8f8:	ldr	w0, [x1, #4]
  41b8fc:	add	w2, w0, #0x1
  41b900:	str	w2, [x1, #4]
  41b904:	ubfiz	x2, x0, #1, #32
  41b908:	add	x0, x2, w0, uxtw
  41b90c:	lsl	x0, x0, #3
  41b910:	add	x0, x0, #0x8
  41b914:	add	x2, x1, x0
  41b918:	str	x22, [x1, x0]
  41b91c:	str	x27, [x2, #8]
  41b920:	str	x20, [x2, #16]
  41b924:	ldp	x27, x28, [sp, #80]
  41b928:	b	41b610 <ferror@plt+0x188e0>
  41b92c:	ldr	w0, [x24, #4]
  41b930:	cmp	x22, x0
  41b934:	b.ls	41b610 <ferror@plt+0x188e0>  // b.plast
  41b938:	stp	x27, x28, [sp, #80]
  41b93c:	ldr	x27, [x19, #48]
  41b940:	ldr	x0, [x19, #24]
  41b944:	sub	x20, x20, x0
  41b948:	ldr	w0, [x24]
  41b94c:	ubfx	x0, x0, #0, #31
  41b950:	ldr	w1, [x24, #4]
  41b954:	cmp	w0, w1
  41b958:	b.ne	41b7ec <ferror@plt+0x18abc>  // b.any
  41b95c:	ldrsb	w0, [x24, #3]
  41b960:	tbnz	w0, #31, 41b974 <ferror@plt+0x18c44>
  41b964:	str	wzr, [sp, #104]
  41b968:	mov	w28, #0x0                   	// #0
  41b96c:	mov	w1, #0x1                   	// #1
  41b970:	b	41b738 <ferror@plt+0x18a08>
  41b974:	str	xzr, [x19, #80]
  41b978:	ldr	w28, [x24, #4]
  41b97c:	add	w1, w28, #0x1
  41b980:	mov	w0, #0x1                   	// #1
  41b984:	str	w0, [sp, #104]
  41b988:	b	41b738 <ferror@plt+0x18a08>
  41b98c:	mov	w2, #0x4                   	// #4
  41b990:	cmp	w1, w2
  41b994:	csel	w26, w1, w2, cs  // cs = hs, nlast
  41b998:	csel	w1, w1, w2, cs  // cs = hs, nlast
  41b99c:	add	x1, x1, x1, lsl #1
  41b9a0:	lsl	x1, x1, #3
  41b9a4:	add	x1, x1, #0x8
  41b9a8:	str	wzr, [sp, #108]
  41b9ac:	b	41b778 <ferror@plt+0x18a48>
  41b9b0:	str	wzr, [sp, #108]
  41b9b4:	b	41b778 <ferror@plt+0x18a48>
  41b9b8:	str	xzr, [x19, #80]
  41b9bc:	ldr	w28, [x24, #4]
  41b9c0:	add	w1, w28, #0x1
  41b9c4:	mov	w0, #0x1                   	// #1
  41b9c8:	str	w0, [sp, #104]
  41b9cc:	b	41b840 <ferror@plt+0x18b10>
  41b9d0:	mov	w2, #0x4                   	// #4
  41b9d4:	cmp	w1, w2
  41b9d8:	csel	w26, w1, w2, cs  // cs = hs, nlast
  41b9dc:	csel	w1, w1, w2, cs  // cs = hs, nlast
  41b9e0:	add	x1, x1, x1, lsl #1
  41b9e4:	lsl	x1, x1, #3
  41b9e8:	add	x1, x1, #0x8
  41b9ec:	str	wzr, [sp, #108]
  41b9f0:	b	41b880 <ferror@plt+0x18b50>
  41b9f4:	str	wzr, [sp, #108]
  41b9f8:	b	41b880 <ferror@plt+0x18b50>
  41b9fc:	ldr	x23, [x19, #40]
  41ba00:	b	41b61c <ferror@plt+0x188ec>
  41ba04:	mov	w1, #0x0                   	// #0
  41ba08:	b	41b62c <ferror@plt+0x188fc>
  41ba0c:	mov	w1, #0x0                   	// #0
  41ba10:	ldp	x25, x26, [sp, #64]
  41ba14:	b	41b62c <ferror@plt+0x188fc>
  41ba18:	cmp	x0, #0x64
  41ba1c:	b.ls	41b92c <ferror@plt+0x18bfc>  // b.plast
  41ba20:	ldr	w2, [x24, #4]
  41ba24:	cbz	w2, 41ba40 <ferror@plt+0x18d10>
  41ba28:	add	x1, x22, x22, lsl #1
  41ba2c:	add	x1, x22, x1, lsl #3
  41ba30:	lsl	x1, x1, #2
  41ba34:	udiv	x0, x1, x0
  41ba38:	cmp	x0, w2, uxtw
  41ba3c:	b.cc	41b610 <ferror@plt+0x188e0>  // b.lo, b.ul, b.last
  41ba40:	stp	x27, x28, [sp, #80]
  41ba44:	ldr	x27, [x19, #48]
  41ba48:	ldr	x0, [x19, #24]
  41ba4c:	sub	x20, x20, x0
  41ba50:	ldr	w0, [x24]
  41ba54:	ubfx	x0, x0, #0, #31
  41ba58:	cmp	w2, w0
  41ba5c:	b.ne	41b8f4 <ferror@plt+0x18bc4>  // b.any
  41ba60:	ldrsb	w0, [x24, #3]
  41ba64:	tbnz	w0, #31, 41b9b8 <ferror@plt+0x18c88>
  41ba68:	str	wzr, [sp, #104]
  41ba6c:	mov	w28, #0x0                   	// #0
  41ba70:	mov	w1, #0x1                   	// #1
  41ba74:	b	41b840 <ferror@plt+0x18b10>
  41ba78:	str	wzr, [x0]
  41ba7c:	str	xzr, [x0, #8]
  41ba80:	str	xzr, [x0, #16]
  41ba84:	str	xzr, [x0, #24]
  41ba88:	str	xzr, [x0, #32]
  41ba8c:	str	xzr, [x0, #40]
  41ba90:	str	xzr, [x0, #48]
  41ba94:	str	xzr, [x0, #56]
  41ba98:	str	xzr, [x0, #64]
  41ba9c:	mov	w1, #0x1                   	// #1
  41baa0:	strb	w1, [x0, #72]
  41baa4:	str	xzr, [x0, #80]
  41baa8:	ret
  41baac:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bab0:	ldr	x0, [x0, #2424]
  41bab4:	cbz	x0, 41babc <ferror@plt+0x18d8c>
  41bab8:	ret
  41babc:	stp	x29, x30, [sp, #-48]!
  41bac0:	mov	x29, sp
  41bac4:	stp	x19, x20, [sp, #16]
  41bac8:	str	x21, [sp, #32]
  41bacc:	mov	x0, #0x588                 	// #1416
  41bad0:	bl	455598 <_obstack_memory_used@@Base+0x11f8>
  41bad4:	mov	x21, x0
  41bad8:	mov	x1, #0x10                  	// #16
  41badc:	str	x1, [x21], #8
  41bae0:	mov	x19, x21
  41bae4:	add	x20, x0, #0x588
  41bae8:	mov	x0, x19
  41baec:	bl	41ba78 <ferror@plt+0x18d48>
  41baf0:	add	x19, x19, #0x58
  41baf4:	cmp	x19, x20
  41baf8:	b.ne	41bae8 <ferror@plt+0x18db8>  // b.any
  41bafc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bb00:	str	x21, [x0, #2424]
  41bb04:	ldp	x19, x20, [sp, #16]
  41bb08:	ldr	x21, [sp, #32]
  41bb0c:	ldp	x29, x30, [sp], #48
  41bb10:	ret
  41bb14:	stp	x29, x30, [sp, #-64]!
  41bb18:	mov	x29, sp
  41bb1c:	stp	x21, x22, [sp, #32]
  41bb20:	str	x23, [sp, #48]
  41bb24:	mov	x22, x0
  41bb28:	cbz	x0, 41bba4 <ferror@plt+0x18e74>
  41bb2c:	stp	x19, x20, [sp, #16]
  41bb30:	bl	41baac <ferror@plt+0x18d7c>
  41bb34:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bb38:	ldr	x19, [x0, #2424]
  41bb3c:	add	x21, x19, #0x580
  41bb40:	mov	x23, #0x0                   	// #0
  41bb44:	b	41bb54 <ferror@plt+0x18e24>
  41bb48:	add	x19, x19, #0x58
  41bb4c:	cmp	x19, x21
  41bb50:	b.eq	41bb7c <ferror@plt+0x18e4c>  // b.none
  41bb54:	ldr	x0, [x19, #8]
  41bb58:	cbz	x0, 41bb48 <ferror@plt+0x18e18>
  41bb5c:	mov	x1, x22
  41bb60:	bl	402a20 <strcmp@plt>
  41bb64:	cbnz	w0, 41bb48 <ferror@plt+0x18e18>
  41bb68:	ldr	w1, [x19]
  41bb6c:	add	w1, w1, #0x1
  41bb70:	str	w1, [x19]
  41bb74:	mov	x23, x19
  41bb78:	b	41bb48 <ferror@plt+0x18e18>
  41bb7c:	cbz	x23, 41bbac <ferror@plt+0x18e7c>
  41bb80:	ldr	w0, [x23]
  41bb84:	add	w0, w0, #0x1
  41bb88:	str	w0, [x23]
  41bb8c:	ldp	x19, x20, [sp, #16]
  41bb90:	mov	x0, x23
  41bb94:	ldp	x21, x22, [sp, #32]
  41bb98:	ldr	x23, [sp, #48]
  41bb9c:	ldp	x29, x30, [sp], #64
  41bba0:	ret
  41bba4:	mov	x23, x0
  41bba8:	b	41bb90 <ferror@plt+0x18e60>
  41bbac:	ldp	x19, x20, [sp, #16]
  41bbb0:	b	41bb90 <ferror@plt+0x18e60>
  41bbb4:	stp	x29, x30, [sp, #-32]!
  41bbb8:	mov	x29, sp
  41bbbc:	str	x19, [sp, #16]
  41bbc0:	cbz	x0, 41bc18 <ferror@plt+0x18ee8>
  41bbc4:	bl	41bb14 <ferror@plt+0x18de4>
  41bbc8:	mov	x19, x0
  41bbcc:	cbz	x0, 41bc0c <ferror@plt+0x18edc>
  41bbd0:	str	xzr, [x0, #8]
  41bbd4:	ldr	x0, [x0, #16]
  41bbd8:	cbz	x0, 41bbe0 <ferror@plt+0x18eb0>
  41bbdc:	bl	4027a0 <fclose@plt>
  41bbe0:	str	xzr, [x19, #16]
  41bbe4:	str	xzr, [x19, #40]
  41bbe8:	str	xzr, [x19, #48]
  41bbec:	str	xzr, [x19, #56]
  41bbf0:	ldr	x0, [x19, #80]
  41bbf4:	cbz	x0, 41bbfc <ferror@plt+0x18ecc>
  41bbf8:	str	wzr, [x0, #4]
  41bbfc:	str	wzr, [x19]
  41bc00:	str	xzr, [x19, #64]
  41bc04:	mov	w0, #0x1                   	// #1
  41bc08:	strb	w0, [x19, #72]
  41bc0c:	ldr	x19, [sp, #16]
  41bc10:	ldp	x29, x30, [sp], #32
  41bc14:	ret
  41bc18:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41bc1c:	add	x2, x2, #0xfc0
  41bc20:	mov	w1, #0x133                 	// #307
  41bc24:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41bc28:	add	x0, x0, #0xf68
  41bc2c:	bl	4102b4 <ferror@plt+0xd584>
  41bc30:	stp	x29, x30, [sp, #-32]!
  41bc34:	mov	x29, sp
  41bc38:	str	x19, [sp, #16]
  41bc3c:	mov	x19, x0
  41bc40:	ldr	x0, [x0, #16]
  41bc44:	cbz	x0, 41bc50 <ferror@plt+0x18f20>
  41bc48:	bl	4027a0 <fclose@plt>
  41bc4c:	str	xzr, [x19, #16]
  41bc50:	ldr	x0, [x19, #24]
  41bc54:	cbz	x0, 41bc60 <ferror@plt+0x18f30>
  41bc58:	bl	402a90 <free@plt>
  41bc5c:	str	xzr, [x19, #24]
  41bc60:	ldr	x0, [x19, #80]
  41bc64:	cbz	x0, 41bc74 <ferror@plt+0x18f44>
  41bc68:	ldrsb	w1, [x0, #3]
  41bc6c:	tbnz	w1, #31, 41bc80 <ferror@plt+0x18f50>
  41bc70:	bl	402a90 <free@plt>
  41bc74:	ldr	x19, [sp, #16]
  41bc78:	ldp	x29, x30, [sp], #32
  41bc7c:	ret
  41bc80:	str	wzr, [x0, #4]
  41bc84:	b	41bc74 <ferror@plt+0x18f44>
  41bc88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bc8c:	ldr	x0, [x0, #2424]
  41bc90:	cbz	x0, 41bd10 <ferror@plt+0x18fe0>
  41bc94:	stp	x29, x30, [sp, #-32]!
  41bc98:	mov	x29, sp
  41bc9c:	stp	x19, x20, [sp, #16]
  41bca0:	ldur	x1, [x0, #-8]
  41bca4:	add	x19, x1, x1, lsl #1
  41bca8:	lsl	x19, x19, #2
  41bcac:	sub	x19, x19, x1
  41bcb0:	add	x19, x0, x19, lsl #3
  41bcb4:	cmp	x0, x19
  41bcb8:	b.eq	41bcdc <ferror@plt+0x18fac>  // b.none
  41bcbc:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bcc0:	add	x20, x20, #0x970
  41bcc4:	sub	x19, x19, #0x58
  41bcc8:	mov	x0, x19
  41bccc:	bl	41bc30 <ferror@plt+0x18f00>
  41bcd0:	ldr	x0, [x20, #8]
  41bcd4:	cmp	x0, x19
  41bcd8:	b.ne	41bcc4 <ferror@plt+0x18f94>  // b.any
  41bcdc:	mov	x0, x19
  41bce0:	ldr	x2, [x0, #-8]!
  41bce4:	add	x1, x2, x2, lsl #1
  41bce8:	lsl	x1, x1, #2
  41bcec:	sub	x1, x1, x2
  41bcf0:	lsl	x1, x1, #3
  41bcf4:	add	x1, x1, #0x8
  41bcf8:	bl	4552f8 <_obstack_memory_used@@Base+0xf58>
  41bcfc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bd00:	str	xzr, [x0, #2424]
  41bd04:	ldp	x19, x20, [sp, #16]
  41bd08:	ldp	x29, x30, [sp], #32
  41bd0c:	ret
  41bd10:	ret
  41bd14:	stp	x29, x30, [sp, #-32]!
  41bd18:	mov	x29, sp
  41bd1c:	str	xzr, [sp, #24]
  41bd20:	add	x3, sp, #0x18
  41bd24:	mov	w2, #0x1                   	// #1
  41bd28:	mov	w1, w0
  41bd2c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bd30:	ldr	x0, [x0, #2416]
  41bd34:	bl	4332f0 <ferror@plt+0x305c0>
  41bd38:	cmp	w0, #0x1
  41bd3c:	cset	w0, eq  // eq = none
  41bd40:	ldp	x29, x30, [sp], #32
  41bd44:	ret
  41bd48:	stp	x29, x30, [sp, #-16]!
  41bd4c:	mov	x29, sp
  41bd50:	mov	w2, #0x0                   	// #0
  41bd54:	mov	w1, #0x1                   	// #1
  41bd58:	bl	41b288 <ferror@plt+0x18558>
  41bd5c:	ldp	x29, x30, [sp], #16
  41bd60:	ret
  41bd64:	stp	x29, x30, [sp, #-96]!
  41bd68:	mov	x29, sp
  41bd6c:	stp	x19, x20, [sp, #16]
  41bd70:	stp	x21, x22, [sp, #32]
  41bd74:	mov	x22, x0
  41bd78:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  41bd7c:	add	x1, x1, #0xa48
  41bd80:	bl	4027d0 <fopen@plt>
  41bd84:	mov	x21, x0
  41bd88:	cbz	x0, 41beac <ferror@plt+0x1917c>
  41bd8c:	bl	41baac <ferror@plt+0x18d7c>
  41bd90:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41bd94:	ldr	x19, [x0, #2424]
  41bd98:	mov	x1, x19
  41bd9c:	ldr	w20, [x1], #88
  41bda0:	add	x4, x19, #0x580
  41bda4:	b	41bdc4 <ferror@plt+0x19094>
  41bda8:	mov	x19, x1
  41bdac:	cmp	w20, w2
  41bdb0:	csel	w20, w20, w2, cs  // cs = hs, nlast
  41bdb4:	cbz	x3, 41be68 <ferror@plt+0x19138>
  41bdb8:	add	x1, x1, #0x58
  41bdbc:	cmp	x1, x4
  41bdc0:	b.eq	41bdf8 <ferror@plt+0x190c8>  // b.none
  41bdc4:	mov	x5, x1
  41bdc8:	ldr	x3, [x1, #8]
  41bdcc:	ldr	w2, [x1]
  41bdd0:	ldr	w0, [x19]
  41bdd4:	cmp	w2, w0
  41bdd8:	b.cc	41bda8 <ferror@plt+0x19078>  // b.lo, b.ul, b.last
  41bddc:	ldr	x0, [x19, #8]
  41bde0:	cmp	x0, #0x0
  41bde4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
  41bde8:	b.ne	41bdac <ferror@plt+0x1907c>  // b.any
  41bdec:	cmp	w20, w2
  41bdf0:	csel	w20, w20, w2, cs  // cs = hs, nlast
  41bdf4:	mov	x19, x5
  41bdf8:	str	x22, [x19, #8]
  41bdfc:	ldr	x0, [x19, #16]
  41be00:	cbz	x0, 41be08 <ferror@plt+0x190d8>
  41be04:	bl	4027a0 <fclose@plt>
  41be08:	str	x21, [x19, #16]
  41be0c:	str	xzr, [x19, #40]
  41be10:	str	xzr, [x19, #48]
  41be14:	str	xzr, [x19, #56]
  41be18:	ldr	x1, [x19, #80]
  41be1c:	cbz	x1, 41be24 <ferror@plt+0x190f4>
  41be20:	str	wzr, [x1, #4]
  41be24:	add	w20, w20, #0x1
  41be28:	str	w20, [x19]
  41be2c:	str	wzr, [sp, #60]
  41be30:	add	x2, sp, #0x3c
  41be34:	mov	x1, x22
  41be38:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41be3c:	ldr	x0, [x0, #2416]
  41be40:	bl	433dd8 <ferror@plt+0x310a8>
  41be44:	and	w0, w0, #0xff
  41be48:	cbz	w0, 41be88 <ferror@plt+0x19158>
  41be4c:	ldr	w0, [sp, #60]
  41be50:	cmp	w0, #0x1
  41be54:	b.ls	41be70 <ferror@plt+0x19140>  // b.plast
  41be58:	add	x8, sp, #0x40
  41be5c:	bl	41bd48 <ferror@plt+0x19018>
  41be60:	ldrsw	x0, [sp, #72]
  41be64:	b	41be8c <ferror@plt+0x1915c>
  41be68:	mov	x5, x19
  41be6c:	b	41bdf4 <ferror@plt+0x190c4>
  41be70:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41be74:	add	x2, x2, #0xff0
  41be78:	mov	w1, #0x107                 	// #263
  41be7c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41be80:	add	x0, x0, #0xf68
  41be84:	bl	4102b4 <ferror@plt+0xd584>
  41be88:	mov	x0, #0x0                   	// #0
  41be8c:	str	x0, [x19, #64]
  41be90:	mov	w0, #0x1                   	// #1
  41be94:	strb	w0, [x19, #72]
  41be98:	mov	x0, x19
  41be9c:	ldp	x19, x20, [sp, #16]
  41bea0:	ldp	x21, x22, [sp, #32]
  41bea4:	ldp	x29, x30, [sp], #96
  41bea8:	ret
  41beac:	mov	x19, x0
  41beb0:	b	41be98 <ferror@plt+0x19168>
  41beb4:	stp	x29, x30, [sp, #-32]!
  41beb8:	mov	x29, sp
  41bebc:	str	x19, [sp, #16]
  41bec0:	mov	x19, x0
  41bec4:	bl	41bb14 <ferror@plt+0x18de4>
  41bec8:	mov	x1, x0
  41becc:	cbz	x0, 41bee0 <ferror@plt+0x191b0>
  41bed0:	ldrb	w0, [x1, #72]
  41bed4:	ldr	x19, [sp, #16]
  41bed8:	ldp	x29, x30, [sp], #32
  41bedc:	ret
  41bee0:	mov	x0, x19
  41bee4:	bl	41bd64 <ferror@plt+0x19034>
  41bee8:	mov	x1, x0
  41beec:	mov	w0, #0x0                   	// #0
  41bef0:	cbz	x1, 41bed4 <ferror@plt+0x191a4>
  41bef4:	b	41bed0 <ferror@plt+0x191a0>
  41bef8:	stp	x29, x30, [sp, #-80]!
  41befc:	mov	x29, sp
  41bf00:	str	xzr, [sp, #72]
  41bf04:	cbnz	w1, 41bf18 <ferror@plt+0x191e8>
  41bf08:	mov	x0, #0x0                   	// #0
  41bf0c:	mov	x1, #0x0                   	// #0
  41bf10:	ldp	x29, x30, [sp], #80
  41bf14:	ret
  41bf18:	stp	x19, x20, [sp, #16]
  41bf1c:	str	x21, [sp, #32]
  41bf20:	mov	x21, x0
  41bf24:	mov	w20, w1
  41bf28:	bl	41bb14 <ferror@plt+0x18de4>
  41bf2c:	mov	x19, x0
  41bf30:	cbz	x0, 41bfc0 <ferror@plt+0x19290>
  41bf34:	sxtw	x1, w20
  41bf38:	ldr	x0, [x19, #56]
  41bf3c:	cmp	x0, w20, sxtw
  41bf40:	b.cc	41bfec <ferror@plt+0x192bc>  // b.lo, b.ul, b.last
  41bf44:	ldr	x2, [x19, #80]
  41bf48:	cbz	x2, 41bfe4 <ferror@plt+0x192b4>
  41bf4c:	ldr	w3, [x2, #4]
  41bf50:	cbz	w3, 41bfe4 <ferror@plt+0x192b4>
  41bf54:	ldr	x0, [x19, #64]
  41bf58:	cmp	x0, #0x64
  41bf5c:	b.ls	41c028 <ferror@plt+0x192f8>  // b.plast
  41bf60:	cmp	x1, x0
  41bf64:	b.hi	41c09c <ferror@plt+0x1936c>  // b.pmore
  41bf68:	add	x4, x1, x1, lsl #1
  41bf6c:	add	x4, x1, x4, lsl #3
  41bf70:	lsl	x4, x4, #2
  41bf74:	udiv	x4, x4, x0
  41bf78:	cmp	x4, w3, uxtw
  41bf7c:	b.cs	41c0f0 <ferror@plt+0x193c0>  // b.hs, b.nlast
  41bf80:	ubfiz	x0, x4, #1, #32
  41bf84:	add	x0, x0, w4, uxtw
  41bf88:	add	x0, x2, x0, lsl #3
  41bf8c:	add	x0, x0, #0x8
  41bf90:	ubfiz	x3, x4, #1, #32
  41bf94:	add	x4, x3, w4, uxtw
  41bf98:	add	x2, x2, x4, lsl #3
  41bf9c:	ldr	x2, [x2, #8]
  41bfa0:	cmp	x1, x2
  41bfa4:	b.cs	41c04c <ferror@plt+0x1931c>  // b.hs, b.nlast
  41bfa8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41bfac:	add	x2, x2, #0x0
  41bfb0:	mov	w1, #0x2c1                 	// #705
  41bfb4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41bfb8:	add	x0, x0, #0xf68
  41bfbc:	bl	4102b4 <ferror@plt+0xd584>
  41bfc0:	mov	x0, x21
  41bfc4:	bl	41bd64 <ferror@plt+0x19034>
  41bfc8:	mov	x19, x0
  41bfcc:	cbnz	x0, 41bf34 <ferror@plt+0x19204>
  41bfd0:	mov	x0, #0x0                   	// #0
  41bfd4:	mov	x1, #0x0                   	// #0
  41bfd8:	ldp	x19, x20, [sp, #16]
  41bfdc:	ldr	x21, [sp, #32]
  41bfe0:	b	41bf10 <ferror@plt+0x191e0>
  41bfe4:	str	xzr, [x19, #48]
  41bfe8:	str	xzr, [x19, #56]
  41bfec:	sub	x20, x1, #0x1
  41bff0:	ldr	x0, [x19, #56]
  41bff4:	cmp	x0, x20
  41bff8:	b.cs	41c0c4 <ferror@plt+0x19394>  // b.hs, b.nlast
  41bffc:	add	x2, sp, #0x38
  41c000:	add	x1, sp, #0x30
  41c004:	mov	x0, x19
  41c008:	bl	41b540 <ferror@plt+0x18810>
  41c00c:	and	w0, w0, #0xff
  41c010:	cbnz	w0, 41bff0 <ferror@plt+0x192c0>
  41c014:	mov	x0, #0x0                   	// #0
  41c018:	mov	x1, #0x0                   	// #0
  41c01c:	ldp	x19, x20, [sp, #16]
  41c020:	ldr	x21, [sp, #32]
  41c024:	b	41bf10 <ferror@plt+0x191e0>
  41c028:	cmp	x1, x0
  41c02c:	b.hi	41c070 <ferror@plt+0x19340>  // b.pmore
  41c030:	sub	w20, w20, #0x1
  41c034:	add	x20, x20, x20, lsl #1
  41c038:	add	x0, x2, x20, lsl #3
  41c03c:	add	x0, x0, #0x8
  41c040:	ldr	x2, [x0]
  41c044:	cmp	x1, x2
  41c048:	b.cc	41c084 <ferror@plt+0x19354>  // b.lo, b.ul, b.last
  41c04c:	ldr	x2, [x0]
  41c050:	cmp	x1, x2
  41c054:	b.eq	41c0a4 <ferror@plt+0x19374>  // b.none
  41c058:	ldr	x2, [x0, #8]
  41c05c:	str	x2, [x19, #48]
  41c060:	ldr	x0, [x0]
  41c064:	sub	x0, x0, #0x1
  41c068:	str	x0, [x19, #56]
  41c06c:	b	41bfec <ferror@plt+0x192bc>
  41c070:	sub	w0, w0, #0x1
  41c074:	add	x0, x0, x0, lsl #1
  41c078:	add	x0, x2, x0, lsl #3
  41c07c:	add	x0, x0, #0x8
  41c080:	b	41c040 <ferror@plt+0x19310>
  41c084:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c088:	add	x2, x2, #0x0
  41c08c:	mov	w1, #0x2b2                 	// #690
  41c090:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41c094:	add	x0, x0, #0xf68
  41c098:	bl	4102b4 <ferror@plt+0xd584>
  41c09c:	sub	w4, w3, #0x1
  41c0a0:	b	41bf78 <ferror@plt+0x19248>
  41c0a4:	ldr	x2, [x0, #8]
  41c0a8:	ldr	x1, [x19, #24]
  41c0ac:	add	x1, x1, x2
  41c0b0:	str	x1, [sp, #72]
  41c0b4:	ldr	x0, [x0, #16]
  41c0b8:	sub	x0, x0, x2
  41c0bc:	str	x0, [sp, #64]
  41c0c0:	b	41c0dc <ferror@plt+0x193ac>
  41c0c4:	add	x2, sp, #0x40
  41c0c8:	add	x1, sp, #0x48
  41c0cc:	mov	x0, x19
  41c0d0:	bl	41b540 <ferror@plt+0x18810>
  41c0d4:	and	w0, w0, #0xff
  41c0d8:	cbz	w0, 41c014 <ferror@plt+0x192e4>
  41c0dc:	ldr	x0, [sp, #72]
  41c0e0:	ldr	x1, [sp, #64]
  41c0e4:	ldp	x19, x20, [sp, #16]
  41c0e8:	ldr	x21, [sp, #32]
  41c0ec:	b	41bf10 <ferror@plt+0x191e0>
  41c0f0:	str	xzr, [x19, #48]
  41c0f4:	str	xzr, [x19, #56]
  41c0f8:	b	41bfec <ferror@plt+0x192bc>
  41c0fc:	stp	x29, x30, [sp, #-16]!
  41c100:	mov	x29, sp
  41c104:	mov	w2, w1
  41c108:	mov	w1, #0x0                   	// #0
  41c10c:	bl	41b288 <ferror@plt+0x18558>
  41c110:	ldp	x29, x30, [sp], #16
  41c114:	ret
  41c118:	stp	x29, x30, [sp, #-16]!
  41c11c:	mov	x29, sp
  41c120:	mov	w2, w1
  41c124:	mov	w1, #0x0                   	// #0
  41c128:	bl	41b288 <ferror@plt+0x18558>
  41c12c:	ldp	x29, x30, [sp], #16
  41c130:	ret
  41c134:	stp	x29, x30, [sp, #-32]!
  41c138:	mov	x29, sp
  41c13c:	str	x19, [sp, #16]
  41c140:	mov	w19, w0
  41c144:	mov	w1, w0
  41c148:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c14c:	ldr	x0, [x0, #2416]
  41c150:	bl	433248 <ferror@plt+0x30518>
  41c154:	cbnz	w0, 41c168 <ferror@plt+0x19438>
  41c158:	mov	w0, w19
  41c15c:	ldr	x19, [sp, #16]
  41c160:	ldp	x29, x30, [sp], #32
  41c164:	ret
  41c168:	mov	x3, #0x0                   	// #0
  41c16c:	mov	w2, #0x0                   	// #0
  41c170:	mov	w1, w19
  41c174:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c178:	ldr	x0, [x0, #2416]
  41c17c:	bl	4332f0 <ferror@plt+0x305c0>
  41c180:	mov	w19, w0
  41c184:	b	41c158 <ferror@plt+0x19428>
  41c188:	stp	x29, x30, [sp, #-16]!
  41c18c:	mov	x29, sp
  41c190:	mov	x3, #0x0                   	// #0
  41c194:	mov	w2, #0x0                   	// #0
  41c198:	mov	w1, w0
  41c19c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c1a0:	ldr	x0, [x0, #2416]
  41c1a4:	bl	4332f0 <ferror@plt+0x305c0>
  41c1a8:	ldp	x29, x30, [sp], #16
  41c1ac:	ret
  41c1b0:	stp	x29, x30, [sp, #-48]!
  41c1b4:	mov	x29, sp
  41c1b8:	stp	x19, x20, [sp, #16]
  41c1bc:	stp	x21, x22, [sp, #32]
  41c1c0:	mov	w21, w1
  41c1c4:	mov	w22, w2
  41c1c8:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c1cc:	mov	w1, w0
  41c1d0:	ldr	x0, [x19, #2416]
  41c1d4:	bl	433088 <ferror@plt+0x30358>
  41c1d8:	mov	w20, w0
  41c1dc:	mov	w1, w21
  41c1e0:	ldr	x0, [x19, #2416]
  41c1e4:	bl	432f78 <ferror@plt+0x30248>
  41c1e8:	mov	x21, x0
  41c1ec:	mov	w1, w22
  41c1f0:	ldr	x0, [x19, #2416]
  41c1f4:	bl	432f78 <ferror@plt+0x30248>
  41c1f8:	mov	x3, #0x0                   	// #0
  41c1fc:	bfxil	x0, x21, #0, #32
  41c200:	mov	x2, x0
  41c204:	mov	w1, w20
  41c208:	ldr	x0, [x19, #2416]
  41c20c:	bl	432d14 <ferror@plt+0x2ffe4>
  41c210:	ldp	x19, x20, [sp, #16]
  41c214:	ldp	x21, x22, [sp, #32]
  41c218:	ldp	x29, x30, [sp], #48
  41c21c:	ret
  41c220:	stp	x29, x30, [sp, #-32]!
  41c224:	mov	x29, sp
  41c228:	stp	x19, x20, [sp, #16]
  41c22c:	mov	x19, x1
  41c230:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c234:	mov	w1, w0
  41c238:	ldr	x0, [x20, #2416]
  41c23c:	bl	433088 <ferror@plt+0x30358>
  41c240:	mov	x3, #0x0                   	// #0
  41c244:	mov	x2, x19
  41c248:	mov	w1, w0
  41c24c:	ldr	x0, [x20, #2416]
  41c250:	bl	432d14 <ferror@plt+0x2ffe4>
  41c254:	ldp	x19, x20, [sp, #16]
  41c258:	ldp	x29, x30, [sp], #32
  41c25c:	ret
  41c260:	stp	x29, x30, [sp, #-160]!
  41c264:	mov	x29, sp
  41c268:	stp	x19, x20, [sp, #16]
  41c26c:	stp	x21, x22, [sp, #32]
  41c270:	stp	xzr, xzr, [sp, #56]
  41c274:	stp	xzr, xzr, [sp, #72]
  41c278:	stp	xzr, xzr, [sp, #88]
  41c27c:	stp	xzr, xzr, [sp, #104]
  41c280:	stp	xzr, xzr, [sp, #120]
  41c284:	stp	xzr, xzr, [sp, #136]
  41c288:	str	xzr, [sp, #152]
  41c28c:	add	x1, sp, #0x38
  41c290:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c294:	ldr	x0, [x0, #2416]
  41c298:	bl	433eb4 <ferror@plt+0x31184>
  41c29c:	ldr	x0, [sp, #120]
  41c2a0:	ldr	x19, [sp, #128]
  41c2a4:	add	x21, x0, x19
  41c2a8:	ldr	x20, [sp, #72]
  41c2ac:	ldr	x2, [sp, #112]
  41c2b0:	add	x20, x20, x2
  41c2b4:	add	x20, x20, x19
  41c2b8:	ldr	x2, [sp, #80]
  41c2bc:	add	x0, x0, x2
  41c2c0:	add	x19, x0, x19
  41c2c4:	ldr	x2, [sp, #88]
  41c2c8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c2cc:	add	x1, x1, #0x10
  41c2d0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c2d4:	ldr	x0, [x0, #1424]
  41c2d8:	bl	402ce0 <fprintf@plt>
  41c2dc:	ldr	x0, [sp, #88]
  41c2e0:	cbnz	x0, 41c52c <ferror@plt+0x197fc>
  41c2e4:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c2e8:	ldr	x3, [x22, #1424]
  41c2ec:	mov	x2, #0x37                  	// #55
  41c2f0:	mov	x1, #0x1                   	// #1
  41c2f4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c2f8:	add	x0, x0, #0x80
  41c2fc:	bl	402ae0 <fwrite@plt>
  41c300:	ldr	x0, [x22, #1424]
  41c304:	ldr	x2, [sp, #64]
  41c308:	mov	x1, #0x27ff                	// #10239
  41c30c:	mov	w3, #0x20                  	// #32
  41c310:	cmp	x2, x1
  41c314:	b.le	41c338 <ferror@plt+0x19608>
  41c318:	mov	w1, #0x9fffff              	// #10485759
  41c31c:	cmp	x2, x1
  41c320:	b.gt	41c54c <ferror@plt+0x1981c>
  41c324:	add	x1, x2, #0x3ff
  41c328:	cmp	x2, #0x0
  41c32c:	csel	x2, x1, x2, lt  // lt = tstop
  41c330:	asr	x2, x2, #10
  41c334:	mov	w3, #0x6b                  	// #107
  41c338:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c33c:	add	x1, x1, #0xb8
  41c340:	bl	402ce0 <fprintf@plt>
  41c344:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c348:	ldr	x0, [x0, #1424]
  41c34c:	ldr	x2, [sp, #80]
  41c350:	mov	x1, #0x27ff                	// #10239
  41c354:	mov	w3, #0x20                  	// #32
  41c358:	cmp	x2, x1
  41c35c:	b.le	41c380 <ferror@plt+0x19650>
  41c360:	mov	w1, #0x9fffff              	// #10485759
  41c364:	cmp	x2, x1
  41c368:	b.gt	41c568 <ferror@plt+0x19838>
  41c36c:	add	x1, x2, #0x3ff
  41c370:	cmp	x2, #0x0
  41c374:	csel	x2, x1, x2, lt  // lt = tstop
  41c378:	asr	x2, x2, #10
  41c37c:	mov	w3, #0x6b                  	// #107
  41c380:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c384:	add	x1, x1, #0xe8
  41c388:	bl	402ce0 <fprintf@plt>
  41c38c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c390:	ldr	x0, [x0, #1424]
  41c394:	ldr	x2, [sp, #56]
  41c398:	mov	x1, #0x27ff                	// #10239
  41c39c:	mov	w3, #0x20                  	// #32
  41c3a0:	cmp	x2, x1
  41c3a4:	b.le	41c3c8 <ferror@plt+0x19698>
  41c3a8:	mov	w1, #0x9fffff              	// #10485759
  41c3ac:	cmp	x2, x1
  41c3b0:	b.gt	41c584 <ferror@plt+0x19854>
  41c3b4:	add	x1, x2, #0x3ff
  41c3b8:	cmp	x2, #0x0
  41c3bc:	csel	x2, x1, x2, lt  // lt = tstop
  41c3c0:	asr	x2, x2, #10
  41c3c4:	mov	w3, #0x6b                  	// #107
  41c3c8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c3cc:	add	x1, x1, #0x118
  41c3d0:	bl	402ce0 <fprintf@plt>
  41c3d4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c3d8:	ldr	x0, [x0, #1424]
  41c3dc:	ldr	x2, [sp, #72]
  41c3e0:	mov	x1, #0x27ff                	// #10239
  41c3e4:	mov	w3, #0x20                  	// #32
  41c3e8:	cmp	x2, x1
  41c3ec:	b.le	41c410 <ferror@plt+0x196e0>
  41c3f0:	mov	w1, #0x9fffff              	// #10485759
  41c3f4:	cmp	x2, x1
  41c3f8:	b.gt	41c5a0 <ferror@plt+0x19870>
  41c3fc:	add	x1, x2, #0x3ff
  41c400:	cmp	x2, #0x0
  41c404:	csel	x2, x1, x2, lt  // lt = tstop
  41c408:	asr	x2, x2, #10
  41c40c:	mov	w3, #0x6b                  	// #107
  41c410:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c414:	add	x1, x1, #0x148
  41c418:	bl	402ce0 <fprintf@plt>
  41c41c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c420:	ldr	x0, [x0, #1424]
  41c424:	ldr	x2, [sp, #104]
  41c428:	mov	x1, #0x27ff                	// #10239
  41c42c:	mov	w3, #0x20                  	// #32
  41c430:	cmp	x2, x1
  41c434:	b.le	41c458 <ferror@plt+0x19728>
  41c438:	mov	w1, #0x9fffff              	// #10485759
  41c43c:	cmp	x2, x1
  41c440:	b.gt	41c5bc <ferror@plt+0x1988c>
  41c444:	add	x1, x2, #0x3ff
  41c448:	cmp	x2, #0x0
  41c44c:	csel	x2, x1, x2, lt  // lt = tstop
  41c450:	asr	x2, x2, #10
  41c454:	mov	w3, #0x6b                  	// #107
  41c458:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c45c:	add	x1, x1, #0x178
  41c460:	bl	402ce0 <fprintf@plt>
  41c464:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c468:	ldr	x0, [x0, #1424]
  41c46c:	ldr	x2, [sp, #120]
  41c470:	mov	x1, #0x27ff                	// #10239
  41c474:	mov	w3, #0x20                  	// #32
  41c478:	cmp	x2, x1
  41c47c:	b.le	41c4a0 <ferror@plt+0x19770>
  41c480:	mov	w1, #0x9fffff              	// #10485759
  41c484:	cmp	x2, x1
  41c488:	b.gt	41c5d8 <ferror@plt+0x198a8>
  41c48c:	add	x1, x2, #0x3ff
  41c490:	cmp	x2, #0x0
  41c494:	csel	x2, x1, x2, lt  // lt = tstop
  41c498:	asr	x2, x2, #10
  41c49c:	mov	w3, #0x6b                  	// #107
  41c4a0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c4a4:	add	x1, x1, #0x1a8
  41c4a8:	bl	402ce0 <fprintf@plt>
  41c4ac:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c4b0:	ldr	x0, [x0, #1424]
  41c4b4:	ldr	x2, [sp, #128]
  41c4b8:	mov	x1, #0x27ff                	// #10239
  41c4bc:	mov	w3, #0x20                  	// #32
  41c4c0:	cmp	x2, x1
  41c4c4:	b.le	41c4e8 <ferror@plt+0x197b8>
  41c4c8:	mov	w1, #0x9fffff              	// #10485759
  41c4cc:	cmp	x2, x1
  41c4d0:	b.gt	41c5f4 <ferror@plt+0x198c4>
  41c4d4:	add	x1, x2, #0x3ff
  41c4d8:	cmp	x2, #0x0
  41c4dc:	csel	x2, x1, x2, lt  // lt = tstop
  41c4e0:	asr	x2, x2, #10
  41c4e4:	mov	w3, #0x6b                  	// #107
  41c4e8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c4ec:	add	x1, x1, #0x1d8
  41c4f0:	bl	402ce0 <fprintf@plt>
  41c4f4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c4f8:	ldr	x0, [x0, #1424]
  41c4fc:	mov	x1, #0x27ff                	// #10239
  41c500:	cmp	x21, x1
  41c504:	b.le	41c62c <ferror@plt+0x198fc>
  41c508:	mov	w1, #0x9fffff              	// #10485759
  41c50c:	cmp	x21, x1
  41c510:	b.gt	41c610 <ferror@plt+0x198e0>
  41c514:	add	x2, x21, #0x3ff
  41c518:	cmp	x21, #0x0
  41c51c:	csel	x21, x2, x21, lt  // lt = tstop
  41c520:	asr	x2, x21, #10
  41c524:	mov	w3, #0x6b                  	// #107
  41c528:	b	41c634 <ferror@plt+0x19904>
  41c52c:	ldr	x2, [sp, #96]
  41c530:	sdiv	x2, x2, x0
  41c534:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c538:	add	x1, x1, #0x48
  41c53c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c540:	ldr	x0, [x0, #1424]
  41c544:	bl	402ce0 <fprintf@plt>
  41c548:	b	41c2e4 <ferror@plt+0x195b4>
  41c54c:	add	x1, x2, #0xff, lsl #12
  41c550:	add	x1, x1, #0xfff
  41c554:	cmp	x2, #0x0
  41c558:	csel	x2, x1, x2, lt  // lt = tstop
  41c55c:	asr	x2, x2, #20
  41c560:	mov	w3, #0x4d                  	// #77
  41c564:	b	41c338 <ferror@plt+0x19608>
  41c568:	add	x1, x2, #0xff, lsl #12
  41c56c:	add	x1, x1, #0xfff
  41c570:	cmp	x2, #0x0
  41c574:	csel	x2, x1, x2, lt  // lt = tstop
  41c578:	asr	x2, x2, #20
  41c57c:	mov	w3, #0x4d                  	// #77
  41c580:	b	41c380 <ferror@plt+0x19650>
  41c584:	add	x1, x2, #0xff, lsl #12
  41c588:	add	x1, x1, #0xfff
  41c58c:	cmp	x2, #0x0
  41c590:	csel	x2, x1, x2, lt  // lt = tstop
  41c594:	asr	x2, x2, #20
  41c598:	mov	w3, #0x4d                  	// #77
  41c59c:	b	41c3c8 <ferror@plt+0x19698>
  41c5a0:	add	x1, x2, #0xff, lsl #12
  41c5a4:	add	x1, x1, #0xfff
  41c5a8:	cmp	x2, #0x0
  41c5ac:	csel	x2, x1, x2, lt  // lt = tstop
  41c5b0:	asr	x2, x2, #20
  41c5b4:	mov	w3, #0x4d                  	// #77
  41c5b8:	b	41c410 <ferror@plt+0x196e0>
  41c5bc:	add	x1, x2, #0xff, lsl #12
  41c5c0:	add	x1, x1, #0xfff
  41c5c4:	cmp	x2, #0x0
  41c5c8:	csel	x2, x1, x2, lt  // lt = tstop
  41c5cc:	asr	x2, x2, #20
  41c5d0:	mov	w3, #0x4d                  	// #77
  41c5d4:	b	41c458 <ferror@plt+0x19728>
  41c5d8:	add	x1, x2, #0xff, lsl #12
  41c5dc:	add	x1, x1, #0xfff
  41c5e0:	cmp	x2, #0x0
  41c5e4:	csel	x2, x1, x2, lt  // lt = tstop
  41c5e8:	asr	x2, x2, #20
  41c5ec:	mov	w3, #0x4d                  	// #77
  41c5f0:	b	41c4a0 <ferror@plt+0x19770>
  41c5f4:	add	x1, x2, #0xff, lsl #12
  41c5f8:	add	x1, x1, #0xfff
  41c5fc:	cmp	x2, #0x0
  41c600:	csel	x2, x1, x2, lt  // lt = tstop
  41c604:	asr	x2, x2, #20
  41c608:	mov	w3, #0x4d                  	// #77
  41c60c:	b	41c4e8 <ferror@plt+0x197b8>
  41c610:	add	x2, x21, #0xff, lsl #12
  41c614:	add	x2, x2, #0xfff
  41c618:	cmp	x21, #0x0
  41c61c:	csel	x21, x2, x21, lt  // lt = tstop
  41c620:	asr	x2, x21, #20
  41c624:	mov	w3, #0x4d                  	// #77
  41c628:	b	41c634 <ferror@plt+0x19904>
  41c62c:	mov	x2, x21
  41c630:	mov	w3, #0x20                  	// #32
  41c634:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c638:	add	x1, x1, #0x208
  41c63c:	bl	402ce0 <fprintf@plt>
  41c640:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c644:	ldr	x0, [x0, #1424]
  41c648:	ldr	x2, [sp, #136]
  41c64c:	mov	x1, #0x27ff                	// #10239
  41c650:	mov	w3, #0x20                  	// #32
  41c654:	cmp	x2, x1
  41c658:	b.le	41c67c <ferror@plt+0x1994c>
  41c65c:	mov	w1, #0x9fffff              	// #10485759
  41c660:	cmp	x2, x1
  41c664:	b.gt	41c6c0 <ferror@plt+0x19990>
  41c668:	add	x1, x2, #0x3ff
  41c66c:	cmp	x2, #0x0
  41c670:	csel	x2, x1, x2, lt  // lt = tstop
  41c674:	asr	x2, x2, #10
  41c678:	mov	w3, #0x6b                  	// #107
  41c67c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c680:	add	x1, x1, #0x238
  41c684:	bl	402ce0 <fprintf@plt>
  41c688:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c68c:	ldr	x0, [x0, #1424]
  41c690:	mov	x1, #0x27ff                	// #10239
  41c694:	cmp	x20, x1
  41c698:	b.le	41c6f8 <ferror@plt+0x199c8>
  41c69c:	mov	w1, #0x9fffff              	// #10485759
  41c6a0:	cmp	x20, x1
  41c6a4:	b.gt	41c6dc <ferror@plt+0x199ac>
  41c6a8:	add	x2, x20, #0x3ff
  41c6ac:	cmp	x20, #0x0
  41c6b0:	csel	x20, x2, x20, lt  // lt = tstop
  41c6b4:	asr	x2, x20, #10
  41c6b8:	mov	w3, #0x6b                  	// #107
  41c6bc:	b	41c700 <ferror@plt+0x199d0>
  41c6c0:	add	x1, x2, #0xff, lsl #12
  41c6c4:	add	x1, x1, #0xfff
  41c6c8:	cmp	x2, #0x0
  41c6cc:	csel	x2, x1, x2, lt  // lt = tstop
  41c6d0:	asr	x2, x2, #20
  41c6d4:	mov	w3, #0x4d                  	// #77
  41c6d8:	b	41c67c <ferror@plt+0x1994c>
  41c6dc:	add	x2, x20, #0xff, lsl #12
  41c6e0:	add	x2, x2, #0xfff
  41c6e4:	cmp	x20, #0x0
  41c6e8:	csel	x20, x2, x20, lt  // lt = tstop
  41c6ec:	asr	x2, x20, #20
  41c6f0:	mov	w3, #0x4d                  	// #77
  41c6f4:	b	41c700 <ferror@plt+0x199d0>
  41c6f8:	mov	x2, x20
  41c6fc:	mov	w3, #0x20                  	// #32
  41c700:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c704:	add	x1, x1, #0x268
  41c708:	bl	402ce0 <fprintf@plt>
  41c70c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c710:	ldr	x0, [x0, #1424]
  41c714:	mov	x1, #0x27ff                	// #10239
  41c718:	cmp	x19, x1
  41c71c:	b.le	41c760 <ferror@plt+0x19a30>
  41c720:	mov	w1, #0x9fffff              	// #10485759
  41c724:	cmp	x19, x1
  41c728:	b.gt	41c744 <ferror@plt+0x19a14>
  41c72c:	add	x2, x19, #0x3ff
  41c730:	cmp	x19, #0x0
  41c734:	csel	x19, x2, x19, lt  // lt = tstop
  41c738:	asr	x2, x19, #10
  41c73c:	mov	w3, #0x6b                  	// #107
  41c740:	b	41c768 <ferror@plt+0x19a38>
  41c744:	add	x2, x19, #0xff, lsl #12
  41c748:	add	x2, x2, #0xfff
  41c74c:	cmp	x19, #0x0
  41c750:	csel	x19, x2, x19, lt  // lt = tstop
  41c754:	asr	x2, x19, #20
  41c758:	mov	w3, #0x4d                  	// #77
  41c75c:	b	41c768 <ferror@plt+0x19a38>
  41c760:	mov	x2, x19
  41c764:	mov	w3, #0x20                  	// #32
  41c768:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c76c:	add	x1, x1, #0x298
  41c770:	bl	402ce0 <fprintf@plt>
  41c774:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c778:	ldr	x0, [x0, #1424]
  41c77c:	ldr	x2, [sp, #144]
  41c780:	mov	x1, #0x27ff                	// #10239
  41c784:	mov	w3, #0x20                  	// #32
  41c788:	cmp	x2, x1
  41c78c:	b.le	41c7b0 <ferror@plt+0x19a80>
  41c790:	mov	w1, #0x9fffff              	// #10485759
  41c794:	cmp	x2, x1
  41c798:	b.gt	41c88c <ferror@plt+0x19b5c>
  41c79c:	add	x1, x2, #0x3ff
  41c7a0:	cmp	x2, #0x0
  41c7a4:	csel	x2, x1, x2, lt  // lt = tstop
  41c7a8:	asr	x2, x2, #10
  41c7ac:	mov	w3, #0x6b                  	// #107
  41c7b0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c7b4:	add	x1, x1, #0x2c8
  41c7b8:	bl	402ce0 <fprintf@plt>
  41c7bc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c7c0:	ldr	x0, [x0, #1424]
  41c7c4:	ldr	x2, [sp, #152]
  41c7c8:	mov	x1, #0x27ff                	// #10239
  41c7cc:	mov	w3, #0x20                  	// #32
  41c7d0:	cmp	x2, x1
  41c7d4:	b.le	41c7f8 <ferror@plt+0x19ac8>
  41c7d8:	mov	w1, #0x9fffff              	// #10485759
  41c7dc:	cmp	x2, x1
  41c7e0:	b.gt	41c8a8 <ferror@plt+0x19b78>
  41c7e4:	add	x1, x2, #0x3ff
  41c7e8:	cmp	x2, #0x0
  41c7ec:	csel	x2, x1, x2, lt  // lt = tstop
  41c7f0:	asr	x2, x2, #10
  41c7f4:	mov	w3, #0x6b                  	// #107
  41c7f8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c7fc:	add	x1, x1, #0x2f8
  41c800:	bl	402ce0 <fprintf@plt>
  41c804:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c808:	ldr	x0, [x0, #1424]
  41c80c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c810:	ldr	x1, [x1, #2416]
  41c814:	ldr	w2, [x1, #124]
  41c818:	mov	w1, #0x27ff                	// #10239
  41c81c:	cmp	w2, w1
  41c820:	b.hi	41c8c4 <ferror@plt+0x19b94>  // b.pmore
  41c824:	mov	w2, w2
  41c828:	mov	w3, #0x20                  	// #32
  41c82c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c830:	add	x1, x1, #0x328
  41c834:	bl	402ce0 <fprintf@plt>
  41c838:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c83c:	ldr	x0, [x0, #1424]
  41c840:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c844:	ldr	x1, [x1, #2416]
  41c848:	ldr	w2, [x1, #128]
  41c84c:	mov	w1, #0x27ff                	// #10239
  41c850:	cmp	w2, w1
  41c854:	b.hi	41c8e8 <ferror@plt+0x19bb8>  // b.pmore
  41c858:	mov	w2, w2
  41c85c:	mov	w3, #0x20                  	// #32
  41c860:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c864:	add	x1, x1, #0x358
  41c868:	bl	402ce0 <fprintf@plt>
  41c86c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c870:	ldr	x1, [x0, #1424]
  41c874:	mov	w0, #0xa                   	// #10
  41c878:	bl	402750 <fputc@plt>
  41c87c:	ldp	x19, x20, [sp, #16]
  41c880:	ldp	x21, x22, [sp, #32]
  41c884:	ldp	x29, x30, [sp], #160
  41c888:	ret
  41c88c:	add	x1, x2, #0xff, lsl #12
  41c890:	add	x1, x1, #0xfff
  41c894:	cmp	x2, #0x0
  41c898:	csel	x2, x1, x2, lt  // lt = tstop
  41c89c:	asr	x2, x2, #20
  41c8a0:	mov	w3, #0x4d                  	// #77
  41c8a4:	b	41c7b0 <ferror@plt+0x19a80>
  41c8a8:	add	x1, x2, #0xff, lsl #12
  41c8ac:	add	x1, x1, #0xfff
  41c8b0:	cmp	x2, #0x0
  41c8b4:	csel	x2, x1, x2, lt  // lt = tstop
  41c8b8:	asr	x2, x2, #20
  41c8bc:	mov	w3, #0x4d                  	// #77
  41c8c0:	b	41c7f8 <ferror@plt+0x19ac8>
  41c8c4:	mov	w1, #0x9fffff              	// #10485759
  41c8c8:	cmp	w2, w1
  41c8cc:	b.hi	41c8dc <ferror@plt+0x19bac>  // b.pmore
  41c8d0:	lsr	w2, w2, #10
  41c8d4:	mov	w3, #0x6b                  	// #107
  41c8d8:	b	41c82c <ferror@plt+0x19afc>
  41c8dc:	lsr	w2, w2, #20
  41c8e0:	mov	w3, #0x4d                  	// #77
  41c8e4:	b	41c82c <ferror@plt+0x19afc>
  41c8e8:	mov	w1, #0x9fffff              	// #10485759
  41c8ec:	cmp	w2, w1
  41c8f0:	b.hi	41c900 <ferror@plt+0x19bd0>  // b.pmore
  41c8f4:	lsr	w2, w2, #10
  41c8f8:	mov	w3, #0x6b                  	// #107
  41c8fc:	b	41c860 <ferror@plt+0x19b30>
  41c900:	lsr	w2, w2, #20
  41c904:	mov	w3, #0x4d                  	// #77
  41c908:	b	41c860 <ferror@plt+0x19b30>
  41c90c:	stp	x29, x30, [sp, #-144]!
  41c910:	mov	x29, sp
  41c914:	stp	x19, x20, [sp, #16]
  41c918:	stp	x21, x22, [sp, #32]
  41c91c:	stp	x23, x24, [sp, #48]
  41c920:	stp	x25, x26, [sp, #64]
  41c924:	stp	x27, x28, [sp, #80]
  41c928:	mov	x23, x0
  41c92c:	mov	w3, #0x2                   	// #2
  41c930:	mov	w2, #0x0                   	// #0
  41c934:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c938:	add	x1, x1, #0x3e8
  41c93c:	bl	41b420 <ferror@plt+0x186f0>
  41c940:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c944:	ldr	x1, [x0, #2416]
  41c948:	ldr	w0, [x1, #12]
  41c94c:	cbz	w0, 41cce4 <ferror@plt+0x19fb4>
  41c950:	str	wzr, [sp, #96]
  41c954:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c958:	add	x2, x2, #0x4f8
  41c95c:	str	x2, [sp, #104]
  41c960:	b	41cbe0 <ferror@plt+0x19eb0>
  41c964:	ldr	w26, [x1, #56]
  41c968:	b	41cc0c <ferror@plt+0x19edc>
  41c96c:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c970:	add	x0, x3, #0x3b0
  41c974:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c978:	add	x3, x3, #0x390
  41c97c:	cmp	w2, #0x0
  41c980:	csel	x3, x3, x0, ne  // ne = any
  41c984:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c988:	add	x1, x1, #0x490
  41c98c:	mov	x0, x23
  41c990:	bl	402ce0 <fprintf@plt>
  41c994:	mov	x1, x22
  41c998:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c99c:	ldr	x0, [x0, #2416]
  41c9a0:	bl	4323ec <ferror@plt+0x2f6bc>
  41c9a4:	mov	x21, x0
  41c9a8:	ldr	w2, [x22, #20]
  41c9ac:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c9b0:	add	x1, x1, #0x4a8
  41c9b4:	mov	x0, x23
  41c9b8:	bl	402ce0 <fprintf@plt>
  41c9bc:	cbz	x21, 41c9f0 <ferror@plt+0x19cc0>
  41c9c0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41c9c4:	ldr	x0, [x0, #2416]
  41c9c8:	ldr	x2, [x0]
  41c9cc:	sub	x21, x21, x2
  41c9d0:	asr	x21, x21, #3
  41c9d4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41c9d8:	movk	x2, #0xaaab
  41c9dc:	mul	w2, w21, w2
  41c9e0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41c9e4:	add	x1, x1, #0x4c8
  41c9e8:	mov	x0, x23
  41c9ec:	bl	402ce0 <fprintf@plt>
  41c9f0:	mov	x1, x23
  41c9f4:	mov	w0, #0xa                   	// #10
  41c9f8:	bl	402750 <fputc@plt>
  41c9fc:	ldr	w19, [x20, x19]
  41ca00:	cmp	w19, w26
  41ca04:	b.cs	41cbb4 <ferror@plt+0x19e84>  // b.hs, b.nlast
  41ca08:	adrp	x25, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41ca0c:	mov	w27, #0x1                   	// #1
  41ca10:	b	41cad8 <ferror@plt+0x19da8>
  41ca14:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ca18:	add	x3, x3, #0x3a0
  41ca1c:	b	41c984 <ferror@plt+0x19c54>
  41ca20:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ca24:	add	x3, x3, #0x3c0
  41ca28:	b	41c984 <ferror@plt+0x19c54>
  41ca2c:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ca30:	add	x3, x3, #0x388
  41ca34:	b	41c984 <ferror@plt+0x19c54>
  41ca38:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ca3c:	add	x2, x2, #0x4e0
  41ca40:	mov	w1, #0x454                 	// #1108
  41ca44:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41ca48:	add	x0, x0, #0xf68
  41ca4c:	bl	4102b4 <ferror@plt+0xd584>
  41ca50:	mov	w5, #0x3e8                 	// #1000
  41ca54:	mov	w4, w21
  41ca58:	mov	w3, w19
  41ca5c:	mov	x2, x22
  41ca60:	mov	w1, w20
  41ca64:	mov	x0, x23
  41ca68:	bl	41b480 <ferror@plt+0x18750>
  41ca6c:	b	41cba8 <ferror@plt+0x19e78>
  41ca70:	mov	w5, #0x64                  	// #100
  41ca74:	mov	w4, w21
  41ca78:	mov	w3, w19
  41ca7c:	mov	x2, x22
  41ca80:	mov	w1, w20
  41ca84:	mov	x0, x23
  41ca88:	bl	41b480 <ferror@plt+0x18750>
  41ca8c:	mov	w5, #0xa                   	// #10
  41ca90:	mov	w4, w21
  41ca94:	mov	w3, w19
  41ca98:	mov	x2, x22
  41ca9c:	mov	w1, w20
  41caa0:	mov	x0, x23
  41caa4:	bl	41b480 <ferror@plt+0x18750>
  41caa8:	mov	w5, w27
  41caac:	mov	w4, w21
  41cab0:	mov	w3, w19
  41cab4:	mov	x2, x22
  41cab8:	mov	w1, w20
  41cabc:	mov	x0, x23
  41cac0:	bl	41b480 <ferror@plt+0x18750>
  41cac4:	ldrb	w0, [x22, #7]
  41cac8:	lsl	w0, w27, w0
  41cacc:	add	w19, w19, w0
  41cad0:	cmp	w19, w26
  41cad4:	b.cs	41cbb4 <ferror@plt+0x19e84>  // b.hs, b.nlast
  41cad8:	mov	w1, w19
  41cadc:	ldr	x0, [x25, #2416]
  41cae0:	bl	43303c <ferror@plt+0x3030c>
  41cae4:	and	w0, w0, #0xff
  41cae8:	cbz	w0, 41ca38 <ferror@plt+0x19d08>
  41caec:	add	x8, sp, #0x70
  41caf0:	mov	w2, w19
  41caf4:	mov	x1, x22
  41caf8:	ldr	x0, [x25, #2416]
  41cafc:	bl	4339f4 <ferror@plt+0x30cc4>
  41cb00:	ldr	w0, [sp, #124]
  41cb04:	cbnz	w0, 41cac4 <ferror@plt+0x19d94>
  41cb08:	ldr	x28, [sp, #112]
  41cb0c:	ldr	w24, [sp, #120]
  41cb10:	mov	w1, w24
  41cb14:	mov	x0, x28
  41cb18:	bl	41bef8 <ferror@plt+0x191c8>
  41cb1c:	mov	x6, x0
  41cb20:	mov	x20, x1
  41cb24:	cbz	x0, 41cbb4 <ferror@plt+0x19e84>
  41cb28:	mov	w5, w1
  41cb2c:	mov	w4, w19
  41cb30:	mov	w3, w24
  41cb34:	mov	x2, x28
  41cb38:	ldr	x1, [sp, #104]
  41cb3c:	mov	x0, x23
  41cb40:	bl	402ce0 <fprintf@plt>
  41cb44:	ldrb	w21, [x22, #6]
  41cb48:	lsl	w21, w27, w21
  41cb4c:	sub	w21, w21, #0x1
  41cb50:	sxtw	x21, w21
  41cb54:	cmp	x20, x21
  41cb58:	csinc	x21, x21, x20, cs  // cs = hs, nlast
  41cb5c:	mov	w0, w24
  41cb60:	bl	4107bc <ferror@plt+0xda8c>
  41cb64:	mov	w20, w0
  41cb68:	mov	w0, w19
  41cb6c:	bl	4107bc <ferror@plt+0xda8c>
  41cb70:	mov	w24, w0
  41cb74:	mov	x0, x28
  41cb78:	bl	402680 <strlen@plt>
  41cb7c:	cmp	w20, #0x3
  41cb80:	mov	w1, #0x3                   	// #3
  41cb84:	csel	w20, w20, w1, ge  // ge = tcont
  41cb88:	cmp	w24, #0x5
  41cb8c:	mov	w1, #0x5                   	// #5
  41cb90:	csel	w24, w24, w1, ge  // ge = tcont
  41cb94:	add	w20, w20, w24
  41cb98:	add	w0, w0, #0x6
  41cb9c:	add	w20, w20, w0
  41cba0:	cmp	w26, #0x3e7
  41cba4:	b.hi	41ca50 <ferror@plt+0x19d20>  // b.pmore
  41cba8:	cmp	w26, #0x63
  41cbac:	b.ls	41ca8c <ferror@plt+0x19d5c>  // b.plast
  41cbb0:	b	41ca70 <ferror@plt+0x19d40>
  41cbb4:	mov	x1, x23
  41cbb8:	mov	w0, #0xa                   	// #10
  41cbbc:	bl	402750 <fputc@plt>
  41cbc0:	ldr	w0, [sp, #96]
  41cbc4:	add	w2, w0, #0x1
  41cbc8:	str	w2, [sp, #96]
  41cbcc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41cbd0:	ldr	x1, [x0, #2416]
  41cbd4:	ldr	w0, [x1, #12]
  41cbd8:	cmp	w0, w2
  41cbdc:	b.ls	41cce4 <ferror@plt+0x19fb4>  // b.plast
  41cbe0:	sub	w0, w0, #0x1
  41cbe4:	ldr	w2, [sp, #96]
  41cbe8:	cmp	w0, w2
  41cbec:	b.eq	41c964 <ferror@plt+0x19c34>  // b.none
  41cbf0:	ldr	w0, [sp, #96]
  41cbf4:	add	w0, w0, #0x1
  41cbf8:	ldr	x2, [x1]
  41cbfc:	sbfiz	x3, x0, #1, #32
  41cc00:	add	x0, x3, w0, sxtw
  41cc04:	lsl	x0, x0, #3
  41cc08:	ldr	w26, [x2, x0]
  41cc0c:	ldr	w2, [sp, #96]
  41cc10:	sbfiz	x19, x2, #1, #32
  41cc14:	add	x19, x19, w2, sxtw
  41cc18:	lsl	x19, x19, #3
  41cc1c:	ldr	x20, [x1]
  41cc20:	add	x22, x20, x19
  41cc24:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cc28:	add	x1, x1, #0x400
  41cc2c:	mov	x0, x23
  41cc30:	bl	402ce0 <fprintf@plt>
  41cc34:	mov	w3, w26
  41cc38:	ldr	w2, [x20, x19]
  41cc3c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41cc40:	add	x1, x1, #0xf80
  41cc44:	mov	x0, x23
  41cc48:	bl	402ce0 <fprintf@plt>
  41cc4c:	ldr	x2, [x22, #8]
  41cc50:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cc54:	add	x1, x1, #0x418
  41cc58:	mov	x0, x23
  41cc5c:	bl	402ce0 <fprintf@plt>
  41cc60:	ldr	w2, [x22, #16]
  41cc64:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cc68:	add	x1, x1, #0x428
  41cc6c:	mov	x0, x23
  41cc70:	bl	402ce0 <fprintf@plt>
  41cc74:	ldrb	w2, [x22, #6]
  41cc78:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cc7c:	add	x1, x1, #0x440
  41cc80:	mov	x0, x23
  41cc84:	bl	402ce0 <fprintf@plt>
  41cc88:	ldrb	w2, [x22, #6]
  41cc8c:	ldrb	w0, [x22, #7]
  41cc90:	sub	w2, w2, w0
  41cc94:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cc98:	add	x1, x1, #0x460
  41cc9c:	mov	x0, x23
  41cca0:	bl	402ce0 <fprintf@plt>
  41cca4:	ldrb	w2, [x22, #7]
  41cca8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ccac:	add	x1, x1, #0x478
  41ccb0:	mov	x0, x23
  41ccb4:	bl	402ce0 <fprintf@plt>
  41ccb8:	ldrb	w2, [x22, #4]
  41ccbc:	cmp	w2, #0x2
  41ccc0:	b.eq	41ca14 <ferror@plt+0x19ce4>  // b.none
  41ccc4:	b.ls	41c96c <ferror@plt+0x19c3c>  // b.plast
  41ccc8:	cmp	w2, #0x3
  41cccc:	b.eq	41ca20 <ferror@plt+0x19cf0>  // b.none
  41ccd0:	cmp	w2, #0x4
  41ccd4:	b.ne	41ca2c <ferror@plt+0x19cfc>  // b.any
  41ccd8:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ccdc:	add	x3, x3, #0x3d8
  41cce0:	b	41c984 <ferror@plt+0x19c54>
  41cce4:	ldr	w2, [x1, #56]
  41cce8:	ldr	w0, [x1, #36]
  41ccec:	mov	w3, #0x80000000            	// #-2147483648
  41ccf0:	cbz	w0, 41cd04 <ferror@plt+0x19fd4>
  41ccf4:	sub	w0, w0, #0x1
  41ccf8:	ldr	x1, [x1, #24]
  41ccfc:	sbfiz	x0, x0, #5, #32
  41cd00:	ldr	w3, [x1, x0]
  41cd04:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cd08:	add	x1, x1, #0x510
  41cd0c:	mov	x0, x23
  41cd10:	bl	41b420 <ferror@plt+0x186f0>
  41cd14:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41cd18:	ldr	x1, [x0, #2416]
  41cd1c:	ldr	w0, [x1, #36]
  41cd20:	cbz	w0, 41ced0 <ferror@plt+0x1a1a0>
  41cd24:	mov	w28, #0x0                   	// #0
  41cd28:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cd2c:	add	x2, x2, #0x528
  41cd30:	str	x2, [sp, #96]
  41cd34:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41cd38:	add	x2, x2, #0xf80
  41cd3c:	str	x2, [sp, #104]
  41cd40:	adrp	x27, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cd44:	add	x27, x27, #0x618
  41cd48:	b	41ce20 <ferror@plt+0x1a0f0>
  41cd4c:	sub	w3, w19, w3
  41cd50:	mov	w2, w19
  41cd54:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cd58:	add	x1, x1, #0x5e0
  41cd5c:	mov	x0, x23
  41cd60:	bl	402ce0 <fprintf@plt>
  41cd64:	b	41cd90 <ferror@plt+0x1a060>
  41cd68:	mov	w3, w19
  41cd6c:	mov	w2, w20
  41cd70:	mov	x1, x27
  41cd74:	mov	w0, w19
  41cd78:	bl	40fad0 <ferror@plt+0xcda0>
  41cd7c:	mov	w3, w22
  41cd80:	mov	w2, w20
  41cd84:	mov	x1, x26
  41cd88:	mov	w0, w19
  41cd8c:	bl	40fad0 <ferror@plt+0xcda0>
  41cd90:	add	w20, w20, #0x1
  41cd94:	add	w21, w21, #0x2
  41cd98:	ldr	w0, [x24, #4]
  41cd9c:	cmp	w20, w0
  41cda0:	b.cs	41cdfc <ferror@plt+0x1a0cc>  // b.hs, b.nlast
  41cda4:	ldr	x0, [x24, #16]
  41cda8:	ldr	w19, [x0, w21, uxtw #2]
  41cdac:	add	w1, w21, #0x1
  41cdb0:	ldr	w22, [x0, x1, lsl #2]
  41cdb4:	mov	w4, w22
  41cdb8:	mov	w3, w19
  41cdbc:	mov	w2, w20
  41cdc0:	mov	x1, x25
  41cdc4:	mov	x0, x23
  41cdc8:	bl	402ce0 <fprintf@plt>
  41cdcc:	cmp	w19, w22
  41cdd0:	b.ne	41cd68 <ferror@plt+0x1a038>  // b.any
  41cdd4:	ldr	w3, [x24]
  41cdd8:	cmp	w19, w3
  41cddc:	b.cs	41cd4c <ferror@plt+0x1a01c>  // b.hs, b.nlast
  41cde0:	mov	w3, w19
  41cde4:	mov	w2, w20
  41cde8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cdec:	add	x1, x1, #0x5b0
  41cdf0:	mov	w0, w19
  41cdf4:	bl	40fad0 <ferror@plt+0xcda0>
  41cdf8:	b	41cd90 <ferror@plt+0x1a060>
  41cdfc:	mov	x1, x23
  41ce00:	mov	w0, #0xa                   	// #10
  41ce04:	bl	402750 <fputc@plt>
  41ce08:	add	w28, w28, #0x1
  41ce0c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41ce10:	ldr	x1, [x0, #2416]
  41ce14:	ldr	w0, [x1, #36]
  41ce18:	cmp	w0, w28
  41ce1c:	b.ls	41ced0 <ferror@plt+0x1a1a0>  // b.plast
  41ce20:	sub	w0, w0, #0x1
  41ce24:	sub	w19, w0, w28
  41ce28:	sbfiz	x20, x19, #5, #32
  41ce2c:	ldr	x21, [x1, #24]
  41ce30:	add	x24, x21, x20
  41ce34:	mov	x0, x24
  41ce38:	bl	432bac <ferror@plt+0x2fe7c>
  41ce3c:	ldr	w4, [x24, #4]
  41ce40:	mov	x3, x0
  41ce44:	mov	w2, w19
  41ce48:	ldr	x1, [sp, #96]
  41ce4c:	mov	x0, x23
  41ce50:	bl	402ce0 <fprintf@plt>
  41ce54:	ldr	w2, [x21, x20]
  41ce58:	ldr	w3, [x24, #4]
  41ce5c:	add	w3, w2, w3
  41ce60:	ldr	x1, [sp, #104]
  41ce64:	mov	x0, x23
  41ce68:	bl	402ce0 <fprintf@plt>
  41ce6c:	ldr	w0, [x24, #24]
  41ce70:	mov	w2, w0
  41ce74:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ce78:	add	x1, x1, #0x548
  41ce7c:	bl	40fad0 <ferror@plt+0xcda0>
  41ce80:	ldr	w2, [x21, x20]
  41ce84:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ce88:	add	x1, x1, #0x568
  41ce8c:	mov	x0, x23
  41ce90:	bl	402ce0 <fprintf@plt>
  41ce94:	mov	x3, x23
  41ce98:	mov	x2, #0x13                  	// #19
  41ce9c:	mov	x1, #0x1                   	// #1
  41cea0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cea4:	add	x0, x0, #0x588
  41cea8:	bl	402ae0 <fwrite@plt>
  41ceac:	ldr	w0, [x24, #4]
  41ceb0:	cbz	w0, 41cdfc <ferror@plt+0x1a0cc>
  41ceb4:	mov	w21, #0x0                   	// #0
  41ceb8:	mov	w20, #0x0                   	// #0
  41cebc:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cec0:	add	x25, x25, #0x5a0
  41cec4:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cec8:	add	x26, x26, #0x638
  41cecc:	b	41cda4 <ferror@plt+0x1a074>
  41ced0:	mov	w3, #0x80000000            	// #-2147483648
  41ced4:	mov	w2, #0x7fffffff            	// #2147483647
  41ced8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cedc:	add	x1, x1, #0x658
  41cee0:	mov	x0, x23
  41cee4:	bl	41b420 <ferror@plt+0x186f0>
  41cee8:	mov	w3, #0xffffffff            	// #-1
  41ceec:	mov	w2, #0x80000000            	// #-2147483648
  41cef0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41cef4:	add	x1, x1, #0x668
  41cef8:	mov	x0, x23
  41cefc:	bl	41b420 <ferror@plt+0x186f0>
  41cf00:	ldp	x19, x20, [sp, #16]
  41cf04:	ldp	x21, x22, [sp, #32]
  41cf08:	ldp	x23, x24, [sp, #48]
  41cf0c:	ldp	x25, x26, [sp, #64]
  41cf10:	ldp	x27, x28, [sp, #80]
  41cf14:	ldp	x29, x30, [sp], #144
  41cf18:	ret
  41cf1c:	stp	x29, x30, [sp, #-48]!
  41cf20:	mov	x29, sp
  41cf24:	stp	x19, x20, [sp, #16]
  41cf28:	str	x21, [sp, #32]
  41cf2c:	mov	x21, x0
  41cf30:	mov	w19, w1
  41cf34:	mov	x20, x2
  41cf38:	str	w1, [x0]
  41cf3c:	mov	x3, #0x0                   	// #0
  41cf40:	mov	x2, #0x0                   	// #0
  41cf44:	mov	x1, #0x0                   	// #0
  41cf48:	sbfiz	x0, x19, #2, #32
  41cf4c:	bl	40e0c8 <ferror@plt+0xb398>
  41cf50:	str	x0, [x21, #8]
  41cf54:	cmp	w19, #0x0
  41cf58:	b.le	41cf74 <ferror@plt+0x1a244>
  41cf5c:	mov	x3, #0x0                   	// #0
  41cf60:	ldr	w4, [x20, x3, lsl #2]
  41cf64:	str	w4, [x0, x3, lsl #2]
  41cf68:	add	x3, x3, #0x1
  41cf6c:	cmp	w19, w3
  41cf70:	b.gt	41cf60 <ferror@plt+0x1a230>
  41cf74:	ldp	x19, x20, [sp, #16]
  41cf78:	ldr	x21, [sp, #32]
  41cf7c:	ldp	x29, x30, [sp], #48
  41cf80:	ret
  41cf84:	stp	x29, x30, [sp, #-64]!
  41cf88:	mov	x29, sp
  41cf8c:	stp	x19, x20, [sp, #16]
  41cf90:	stp	x21, x22, [sp, #32]
  41cf94:	str	x23, [sp, #48]
  41cf98:	mov	x22, x0
  41cf9c:	mov	x3, #0x1                   	// #1
  41cfa0:	mov	x2, #0x0                   	// #0
  41cfa4:	adrp	x1, 41d000 <ferror@plt+0x1a2d0>
  41cfa8:	add	x1, x1, #0xc24
  41cfac:	mov	x0, #0x30                  	// #48
  41cfb0:	bl	40e0c8 <ferror@plt+0xb398>
  41cfb4:	mov	x19, x0
  41cfb8:	str	xzr, [x0, #16]
  41cfbc:	str	xzr, [x0, #24]
  41cfc0:	str	wzr, [x0, #32]
  41cfc4:	str	wzr, [x0, #36]
  41cfc8:	mov	w0, #0x1                   	// #1
  41cfcc:	strb	w0, [x19, #44]
  41cfd0:	mov	x0, #0x40                  	// #64
  41cfd4:	bl	40dcb0 <ferror@plt+0xaf80>
  41cfd8:	mov	w20, w0
  41cfdc:	ubfiz	x1, x20, #4, #32
  41cfe0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41cfe4:	add	x0, x0, #0xf98
  41cfe8:	ldr	w23, [x0, x1]
  41cfec:	lsl	x21, x23, #4
  41cff0:	mov	x3, #0x0                   	// #0
  41cff4:	mov	x2, #0x0                   	// #0
  41cff8:	mov	x1, #0x0                   	// #0
  41cffc:	mov	x0, x21
  41d000:	bl	40e0f8 <ferror@plt+0xb3c8>
  41d004:	cbz	x0, 41d044 <ferror@plt+0x1a314>
  41d008:	mov	x1, x0
  41d00c:	cbz	x23, 41d020 <ferror@plt+0x1a2f0>
  41d010:	add	x21, x21, x0
  41d014:	str	wzr, [x0], #16
  41d018:	cmp	x0, x21
  41d01c:	b.ne	41d014 <ferror@plt+0x1a2e4>  // b.any
  41d020:	str	x1, [x19]
  41d024:	str	x23, [x19, #8]
  41d028:	str	w20, [x19, #40]
  41d02c:	str	x19, [x22]
  41d030:	ldp	x19, x20, [sp, #16]
  41d034:	ldp	x21, x22, [sp, #32]
  41d038:	ldr	x23, [sp, #48]
  41d03c:	ldp	x29, x30, [sp], #64
  41d040:	ret
  41d044:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41d048:	add	x2, x2, #0xd88
  41d04c:	mov	w1, #0x2b5                 	// #693
  41d050:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41d054:	add	x0, x0, #0xd98
  41d058:	bl	4102b4 <ferror@plt+0xd584>
  41d05c:	stp	x29, x30, [sp, #-32]!
  41d060:	mov	x29, sp
  41d064:	str	x19, [sp, #16]
  41d068:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41d06c:	mov	x3, #0x0                   	// #0
  41d070:	mov	w2, #0x1                   	// #1
  41d074:	mov	w1, w0
  41d078:	ldr	x0, [x19, #2416]
  41d07c:	bl	4332f0 <ferror@plt+0x305c0>
  41d080:	mov	w1, w0
  41d084:	ldr	x0, [x19, #2416]
  41d088:	bl	432f78 <ferror@plt+0x30248>
  41d08c:	ldr	x19, [sp, #16]
  41d090:	ldp	x29, x30, [sp], #32
  41d094:	ret
  41d098:	stp	x29, x30, [sp, #-48]!
  41d09c:	mov	x29, sp
  41d0a0:	stp	x19, x20, [sp, #16]
  41d0a4:	str	x21, [sp, #32]
  41d0a8:	cbz	x2, 41d164 <ferror@plt+0x1a434>
  41d0ac:	mov	x21, x0
  41d0b0:	mov	w0, w1
  41d0b4:	mov	x20, x2
  41d0b8:	mov	x19, x3
  41d0bc:	cbz	x3, 41d17c <ferror@plt+0x1a44c>
  41d0c0:	bl	41d05c <ferror@plt+0x1a32c>
  41d0c4:	ldr	x2, [x21]
  41d0c8:	ldr	w1, [x2, #32]
  41d0cc:	add	w1, w1, #0x1
  41d0d0:	str	w1, [x2, #32]
  41d0d4:	ldr	w7, [x2, #40]
  41d0d8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41d0dc:	add	x1, x1, #0xf98
  41d0e0:	ubfiz	x4, x7, #4, #32
  41d0e4:	add	x3, x1, x4
  41d0e8:	ldr	w6, [x1, x4]
  41d0ec:	ldr	w9, [x3, #12]
  41d0f0:	mov	w5, w0
  41d0f4:	ldr	w1, [x3, #4]
  41d0f8:	mul	x1, x1, x5
  41d0fc:	lsr	x1, x1, #32
  41d100:	sub	w4, w0, w1
  41d104:	add	w1, w1, w4, lsr #1
  41d108:	lsr	w1, w1, w9
  41d10c:	msub	w1, w1, w6, w0
  41d110:	ldr	x3, [x2]
  41d114:	ubfiz	x8, x1, #4, #32
  41d118:	add	x4, x3, x8
  41d11c:	ldr	w8, [x3, x8]
  41d120:	cmp	w8, #0x0
  41d124:	ccmp	w0, w8, #0x4, ne  // ne = any
  41d128:	b.ne	41d194 <ferror@plt+0x1a464>  // b.any
  41d12c:	ldr	w1, [x4]
  41d130:	mov	w0, #0x0                   	// #0
  41d134:	cbz	w1, 41d154 <ferror@plt+0x1a424>
  41d138:	ldr	x0, [x4, #8]
  41d13c:	ldr	w0, [x0]
  41d140:	str	w0, [x20]
  41d144:	ldr	x0, [x4, #8]
  41d148:	ldr	x0, [x0, #8]
  41d14c:	str	x0, [x19]
  41d150:	mov	w0, #0x1                   	// #1
  41d154:	ldp	x19, x20, [sp, #16]
  41d158:	ldr	x21, [sp, #32]
  41d15c:	ldp	x29, x30, [sp], #48
  41d160:	ret
  41d164:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d168:	add	x2, x2, #0x680
  41d16c:	mov	w1, #0x50d                 	// #1293
  41d170:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d174:	add	x0, x0, #0xf68
  41d178:	bl	4102b4 <ferror@plt+0xd584>
  41d17c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d180:	add	x2, x2, #0x680
  41d184:	mov	w1, #0x50e                 	// #1294
  41d188:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d18c:	add	x0, x0, #0xf68
  41d190:	bl	4102b4 <ferror@plt+0xd584>
  41d194:	ldr	x10, [x2, #8]
  41d198:	ubfiz	x7, x7, #4, #32
  41d19c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41d1a0:	add	x8, x8, #0xf98
  41d1a4:	add	x7, x8, x7
  41d1a8:	ldr	w4, [x7, #8]
  41d1ac:	mul	x4, x4, x5
  41d1b0:	lsr	x7, x4, #32
  41d1b4:	add	w5, w0, #0x1
  41d1b8:	sub	w4, w0, w7
  41d1bc:	add	w4, w7, w4, lsr #1
  41d1c0:	lsr	w4, w4, w9
  41d1c4:	sub	w6, w6, #0x2
  41d1c8:	msub	w5, w4, w6, w5
  41d1cc:	ldr	w4, [x2, #36]
  41d1d0:	add	w4, w4, #0x1
  41d1d4:	str	w4, [x2, #36]
  41d1d8:	add	w1, w1, w5
  41d1dc:	sub	w4, w1, w10
  41d1e0:	cmp	x10, w1, uxtw
  41d1e4:	csel	w1, w4, w1, ls  // ls = plast
  41d1e8:	ubfiz	x6, x1, #4, #32
  41d1ec:	add	x4, x3, x6
  41d1f0:	ldr	w6, [x3, x6]
  41d1f4:	cmp	w6, #0x0
  41d1f8:	ccmp	w0, w6, #0x4, ne  // ne = any
  41d1fc:	b.ne	41d1cc <ferror@plt+0x1a49c>  // b.any
  41d200:	b	41d12c <ferror@plt+0x1a3fc>
  41d204:	stp	x29, x30, [sp, #-288]!
  41d208:	mov	x29, sp
  41d20c:	str	x0, [sp, #104]
  41d210:	str	w3, [sp, #144]
  41d214:	str	w4, [sp, #116]
  41d218:	str	w5, [sp, #128]
  41d21c:	str	w6, [sp, #132]
  41d220:	str	x7, [sp, #136]
  41d224:	cbz	x7, 41d274 <ferror@plt+0x1a544>
  41d228:	stp	x19, x20, [sp, #16]
  41d22c:	mov	x20, x1
  41d230:	mov	w19, w2
  41d234:	add	x0, sp, #0x110
  41d238:	bl	41fa90 <ferror@plt+0x1cd60>
  41d23c:	str	w19, [sp, #160]
  41d240:	ldr	x0, [sp, #104]
  41d244:	cbz	x0, 41d2a0 <ferror@plt+0x1a570>
  41d248:	stp	x21, x22, [sp, #32]
  41d24c:	cbnz	w19, 41d2c8 <ferror@plt+0x1a598>
  41d250:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d254:	add	x21, x21, #0x898
  41d258:	add	x0, sp, #0x110
  41d25c:	bl	41fac8 <ferror@plt+0x1cd98>
  41d260:	mov	x0, x21
  41d264:	ldp	x19, x20, [sp, #16]
  41d268:	ldp	x21, x22, [sp, #32]
  41d26c:	ldp	x29, x30, [sp], #288
  41d270:	ret
  41d274:	stp	x19, x20, [sp, #16]
  41d278:	stp	x21, x22, [sp, #32]
  41d27c:	stp	x23, x24, [sp, #48]
  41d280:	stp	x25, x26, [sp, #64]
  41d284:	stp	x27, x28, [sp, #80]
  41d288:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d28c:	add	x2, x2, #0x8e8
  41d290:	mov	w1, #0x5fa                 	// #1530
  41d294:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d298:	add	x0, x0, #0xf68
  41d29c:	bl	4102b4 <ferror@plt+0xd584>
  41d2a0:	stp	x21, x22, [sp, #32]
  41d2a4:	stp	x23, x24, [sp, #48]
  41d2a8:	stp	x25, x26, [sp, #64]
  41d2ac:	stp	x27, x28, [sp, #80]
  41d2b0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d2b4:	add	x2, x2, #0x908
  41d2b8:	mov	w1, #0x551                 	// #1361
  41d2bc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d2c0:	add	x0, x0, #0xf68
  41d2c4:	bl	4102b4 <ferror@plt+0xd584>
  41d2c8:	ldr	x0, [sp, #104]
  41d2cc:	bl	425b94 <ferror@plt+0x22e64>
  41d2d0:	ldrb	w0, [x0, #45]
  41d2d4:	cmp	w0, #0x2
  41d2d8:	b.ne	41d63c <ferror@plt+0x1a90c>  // b.any
  41d2dc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41d2e0:	ldr	x0, [x0, #2416]
  41d2e4:	ldrb	w0, [x0, #116]
  41d2e8:	str	w0, [sp, #148]
  41d2ec:	cbnz	w0, 41d648 <ferror@plt+0x1a918>
  41d2f0:	mov	w0, #0x1                   	// #1
  41d2f4:	str	w0, [sp, #164]
  41d2f8:	add	x0, sp, #0xa0
  41d2fc:	str	x0, [sp, #168]
  41d300:	cbz	x20, 41d34c <ferror@plt+0x1a61c>
  41d304:	add	x3, sp, #0xa8
  41d308:	add	x2, sp, #0xa4
  41d30c:	ldr	w1, [sp, #160]
  41d310:	mov	x0, x20
  41d314:	bl	41d098 <ferror@plt+0x1a368>
  41d318:	ldrsw	x0, [sp, #164]
  41d31c:	mov	w20, w0
  41d320:	cbnz	w0, 41d350 <ferror@plt+0x1a620>
  41d324:	ldr	w3, [sp, #164]
  41d328:	cmp	w3, #0x0
  41d32c:	b.le	41d5cc <ferror@plt+0x1a89c>
  41d330:	stp	x23, x24, [sp, #48]
  41d334:	stp	x25, x26, [sp, #64]
  41d338:	stp	x27, x28, [sp, #80]
  41d33c:	mov	x20, #0x0                   	// #0
  41d340:	mov	x19, #0x0                   	// #0
  41d344:	mov	x27, #0x0                   	// #0
  41d348:	b	41d710 <ferror@plt+0x1a9e0>
  41d34c:	mov	w20, #0x1                   	// #1
  41d350:	ubfiz	x1, x20, #4, #32
  41d354:	add	x1, x1, #0x8
  41d358:	mov	x0, #0x0                   	// #0
  41d35c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41d360:	mov	x19, x0
  41d364:	ldr	w0, [x0]
  41d368:	bfxil	w0, w20, #0, #31
  41d36c:	str	w0, [x19]
  41d370:	ubfx	x0, x0, #24, #7
  41d374:	strb	w0, [x19, #3]
  41d378:	str	wzr, [x19, #4]
  41d37c:	ldrsw	x21, [sp, #164]
  41d380:	cbz	w21, 41da60 <ferror@plt+0x1ad30>
  41d384:	ubfiz	x1, x21, #4, #32
  41d388:	add	x1, x1, #0x8
  41d38c:	mov	x0, #0x0                   	// #0
  41d390:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41d394:	mov	x20, x0
  41d398:	ldr	w0, [x0]
  41d39c:	bfxil	w0, w21, #0, #31
  41d3a0:	str	w0, [x20]
  41d3a4:	ubfx	x0, x0, #24, #7
  41d3a8:	strb	w0, [x20, #3]
  41d3ac:	str	wzr, [x20, #4]
  41d3b0:	ldr	w3, [sp, #164]
  41d3b4:	cmp	w3, #0x0
  41d3b8:	b.le	41d45c <ferror@plt+0x1a72c>
  41d3bc:	stp	x23, x24, [sp, #48]
  41d3c0:	stp	x25, x26, [sp, #64]
  41d3c4:	stp	x27, x28, [sp, #80]
  41d3c8:	b	41d344 <ferror@plt+0x1a614>
  41d3cc:	mov	w0, #0x5fffffff            	// #1610612735
  41d3d0:	cmp	w22, w0
  41d3d4:	b.hi	41d4dc <ferror@plt+0x1a7ac>  // b.pmore
  41d3d8:	cmp	w24, w0
  41d3dc:	b.ls	41d75c <ferror@plt+0x1aa2c>  // b.plast
  41d3e0:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d3e4:	add	x21, x21, #0x740
  41d3e8:	ldp	x23, x24, [sp, #48]
  41d3ec:	ldp	x25, x26, [sp, #64]
  41d3f0:	ldp	x27, x28, [sp, #80]
  41d3f4:	b	41d484 <ferror@plt+0x1a754>
  41d3f8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d3fc:	add	x2, x2, #0xb58
  41d400:	mov	w1, #0x44                  	// #68
  41d404:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d408:	add	x0, x0, #0xb60
  41d40c:	bl	4102b4 <ferror@plt+0xd584>
  41d410:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d414:	add	x2, x2, #0xb58
  41d418:	mov	w1, #0x45                  	// #69
  41d41c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d420:	add	x0, x0, #0xb60
  41d424:	bl	4102b4 <ferror@plt+0xd584>
  41d428:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d42c:	add	x2, x2, #0xb58
  41d430:	mov	w1, #0x47                  	// #71
  41d434:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41d438:	add	x0, x0, #0xb60
  41d43c:	bl	4102b4 <ferror@plt+0xd584>
  41d440:	add	w1, w28, #0x1
  41d444:	mov	w0, #0x1                   	// #1
  41d448:	str	w0, [sp, #152]
  41d44c:	b	41d9dc <ferror@plt+0x1acac>
  41d450:	ldp	x23, x24, [sp, #48]
  41d454:	ldp	x25, x26, [sp, #64]
  41d458:	ldp	x27, x28, [sp, #80]
  41d45c:	add	x1, x19, #0x8
  41d460:	add	x2, x20, #0x8
  41d464:	cmp	x20, #0x0
  41d468:	ldr	w5, [sp, #144]
  41d46c:	add	x4, sp, #0x110
  41d470:	sxtw	x3, w3
  41d474:	csel	x2, x2, x20, ne  // ne = any
  41d478:	ldr	x0, [sp, #104]
  41d47c:	bl	422cbc <ferror@plt+0x1ff8c>
  41d480:	mov	x21, x0
  41d484:	cbz	x20, 41d498 <ferror@plt+0x1a768>
  41d488:	ldrsb	w0, [x20, #3]
  41d48c:	tbnz	w0, #31, 41d5dc <ferror@plt+0x1a8ac>
  41d490:	mov	x0, x20
  41d494:	bl	402a90 <free@plt>
  41d498:	cbz	x19, 41d664 <ferror@plt+0x1a934>
  41d49c:	mov	x20, #0x0                   	// #0
  41d4a0:	add	x22, x19, #0x10
  41d4a4:	ldr	w0, [x19, #4]
  41d4a8:	cmp	w0, w20
  41d4ac:	b.ls	41d654 <ferror@plt+0x1a924>  // b.plast
  41d4b0:	lsl	x0, x20, #4
  41d4b4:	ldr	x0, [x22, x0]
  41d4b8:	bl	402a90 <free@plt>
  41d4bc:	add	x20, x20, #0x1
  41d4c0:	b	41d4a4 <ferror@plt+0x1a774>
  41d4c4:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d4c8:	add	x21, x21, #0x6f8
  41d4cc:	ldp	x23, x24, [sp, #48]
  41d4d0:	ldp	x25, x26, [sp, #64]
  41d4d4:	ldp	x27, x28, [sp, #80]
  41d4d8:	b	41d484 <ferror@plt+0x1a754>
  41d4dc:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d4e0:	add	x21, x21, #0x708
  41d4e4:	ldp	x23, x24, [sp, #48]
  41d4e8:	ldp	x25, x26, [sp, #64]
  41d4ec:	ldp	x27, x28, [sp, #80]
  41d4f0:	b	41d484 <ferror@plt+0x1a754>
  41d4f4:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d4f8:	add	x21, x21, #0x778
  41d4fc:	ldp	x23, x24, [sp, #48]
  41d500:	ldp	x25, x26, [sp, #64]
  41d504:	ldp	x27, x28, [sp, #80]
  41d508:	b	41d484 <ferror@plt+0x1a754>
  41d50c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d510:	add	x21, x21, #0x7a0
  41d514:	ldp	x23, x24, [sp, #48]
  41d518:	ldp	x25, x26, [sp, #64]
  41d51c:	ldp	x27, x28, [sp, #80]
  41d520:	b	41d484 <ferror@plt+0x1a754>
  41d524:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d528:	add	x21, x21, #0x7c8
  41d52c:	ldp	x23, x24, [sp, #48]
  41d530:	ldp	x25, x26, [sp, #64]
  41d534:	ldp	x27, x28, [sp, #80]
  41d538:	b	41d484 <ferror@plt+0x1a754>
  41d53c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d540:	add	x21, x21, #0x7e8
  41d544:	ldp	x23, x24, [sp, #48]
  41d548:	ldp	x25, x26, [sp, #64]
  41d54c:	ldp	x27, x28, [sp, #80]
  41d550:	b	41d484 <ferror@plt+0x1a754>
  41d554:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d558:	add	x21, x21, #0x808
  41d55c:	ldp	x23, x24, [sp, #48]
  41d560:	ldp	x25, x26, [sp, #64]
  41d564:	ldp	x27, x28, [sp, #80]
  41d568:	b	41d484 <ferror@plt+0x1a754>
  41d56c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d570:	add	x21, x21, #0x6a0
  41d574:	ldp	x23, x24, [sp, #48]
  41d578:	ldp	x25, x26, [sp, #64]
  41d57c:	ldp	x27, x28, [sp, #80]
  41d580:	b	41d484 <ferror@plt+0x1a754>
  41d584:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d588:	add	x21, x21, #0x6a0
  41d58c:	ldp	x23, x24, [sp, #48]
  41d590:	ldp	x25, x26, [sp, #64]
  41d594:	ldp	x27, x28, [sp, #80]
  41d598:	b	41d484 <ferror@plt+0x1a754>
  41d59c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d5a0:	add	x21, x21, #0x6c0
  41d5a4:	ldp	x23, x24, [sp, #48]
  41d5a8:	ldp	x25, x26, [sp, #64]
  41d5ac:	ldp	x27, x28, [sp, #80]
  41d5b0:	b	41d484 <ferror@plt+0x1a754>
  41d5b4:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d5b8:	add	x21, x21, #0x820
  41d5bc:	ldp	x23, x24, [sp, #48]
  41d5c0:	ldp	x25, x26, [sp, #64]
  41d5c4:	ldp	x27, x28, [sp, #80]
  41d5c8:	b	41d484 <ferror@plt+0x1a754>
  41d5cc:	mov	x20, #0x0                   	// #0
  41d5d0:	mov	x19, #0x0                   	// #0
  41d5d4:	mov	x1, #0x0                   	// #0
  41d5d8:	b	41d460 <ferror@plt+0x1a730>
  41d5dc:	str	wzr, [x20, #4]
  41d5e0:	b	41d498 <ferror@plt+0x1a768>
  41d5e4:	str	wzr, [x19, #4]
  41d5e8:	b	41d664 <ferror@plt+0x1a934>
  41d5ec:	ldr	x0, [sp, #272]
  41d5f0:	ldr	w1, [sp, #132]
  41d5f4:	add	x6, x0, w1, sxtw #3
  41d5f8:	ldr	w1, [sp, #128]
  41d5fc:	sbfiz	x5, x1, #3, #32
  41d600:	ldr	w1, [sp, #116]
  41d604:	sbfiz	x4, x1, #3, #32
  41d608:	ldr	w2, [x6, #4]
  41d60c:	ldr	w1, [x0, x5]
  41d610:	ldr	w0, [x0, x4]
  41d614:	bl	41c1b0 <ferror@plt+0x19480>
  41d618:	ldr	x1, [sp, #136]
  41d61c:	str	w0, [x1]
  41d620:	b	41d258 <ferror@plt+0x1a528>
  41d624:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d628:	add	x21, x21, #0x868
  41d62c:	b	41d258 <ferror@plt+0x1a528>
  41d630:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d634:	add	x21, x21, #0x850
  41d638:	b	41d258 <ferror@plt+0x1a528>
  41d63c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d640:	add	x21, x21, #0x8b0
  41d644:	b	41d258 <ferror@plt+0x1a528>
  41d648:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d64c:	add	x21, x21, #0x8d0
  41d650:	b	41d258 <ferror@plt+0x1a528>
  41d654:	ldrsb	w0, [x19, #3]
  41d658:	tbnz	w0, #31, 41d5e4 <ferror@plt+0x1a8b4>
  41d65c:	mov	x0, x19
  41d660:	bl	402a90 <free@plt>
  41d664:	cbnz	x21, 41d258 <ferror@plt+0x1a528>
  41d668:	ldr	w0, [sp, #280]
  41d66c:	ldr	w1, [sp, #116]
  41d670:	cmp	w1, w0
  41d674:	b.ge	41d624 <ferror@plt+0x1a8f4>  // b.tcont
  41d678:	ldr	w1, [sp, #128]
  41d67c:	cmp	w1, w0
  41d680:	b.ge	41d630 <ferror@plt+0x1a900>  // b.tcont
  41d684:	ldr	w1, [sp, #132]
  41d688:	cmp	w0, w1
  41d68c:	b.gt	41d5ec <ferror@plt+0x1a8bc>
  41d690:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41d694:	add	x21, x21, #0x880
  41d698:	b	41d258 <ferror@plt+0x1a528>
  41d69c:	ldr	w1, [x20, #4]
  41d6a0:	ldr	w0, [x20]
  41d6a4:	add	w1, w1, #0x1
  41d6a8:	and	w0, w0, #0x7fffffff
  41d6ac:	bl	4195d0 <ferror@plt+0x168a0>
  41d6b0:	mov	w21, w0
  41d6b4:	ldr	w22, [x20, #4]
  41d6b8:	ubfiz	x1, x21, #4, #32
  41d6bc:	add	x1, x1, #0x8
  41d6c0:	mov	x0, x20
  41d6c4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41d6c8:	mov	x20, x0
  41d6cc:	ldr	w0, [x0]
  41d6d0:	bfxil	w0, w21, #0, #31
  41d6d4:	str	w0, [x20]
  41d6d8:	ubfx	x0, x0, #24, #7
  41d6dc:	strb	w0, [x20, #3]
  41d6e0:	str	w22, [x20, #4]
  41d6e4:	ldr	w0, [x20, #4]
  41d6e8:	add	w1, w0, #0x1
  41d6ec:	str	w1, [x20, #4]
  41d6f0:	ubfiz	x0, x0, #4, #32
  41d6f4:	add	x0, x20, x0
  41d6f8:	ldp	x2, x3, [sp, #192]
  41d6fc:	stp	x2, x3, [x0, #8]
  41d700:	ldr	w3, [sp, #164]
  41d704:	add	x27, x27, #0x1
  41d708:	cmp	w3, w27
  41d70c:	b.le	41d450 <ferror@plt+0x1a720>
  41d710:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41d714:	ldr	x0, [sp, #168]
  41d718:	ldr	w1, [x0, x27, lsl #2]
  41d71c:	ldr	x0, [x21, #2416]
  41d720:	bl	432f78 <ferror@plt+0x30248>
  41d724:	mov	x22, x0
  41d728:	lsr	x24, x0, #32
  41d72c:	ldr	x2, [x21, #2416]
  41d730:	ldr	w0, [x2, #36]
  41d734:	mov	w1, #0x80000000            	// #-2147483648
  41d738:	cbz	w0, 41d74c <ferror@plt+0x1aa1c>
  41d73c:	sub	w0, w0, #0x1
  41d740:	ldr	x1, [x2, #24]
  41d744:	sbfiz	x0, x0, #5, #32
  41d748:	ldr	w1, [x1, x0]
  41d74c:	cmp	w22, w1
  41d750:	b.cc	41d3cc <ferror@plt+0x1a69c>  // b.lo, b.ul, b.last
  41d754:	cmp	w22, w24
  41d758:	b.ne	41d4c4 <ferror@plt+0x1a794>  // b.any
  41d75c:	add	x8, sp, #0xd0
  41d760:	mov	w1, #0x1                   	// #1
  41d764:	mov	w0, w22
  41d768:	bl	41c0fc <ferror@plt+0x193cc>
  41d76c:	ldr	x25, [sp, #208]
  41d770:	ldr	w26, [sp, #216]
  41d774:	ldr	w23, [sp, #220]
  41d778:	add	x8, sp, #0xf0
  41d77c:	mov	w1, #0x2                   	// #2
  41d780:	mov	w0, w24
  41d784:	bl	41c0fc <ferror@plt+0x193cc>
  41d788:	ldr	w21, [sp, #252]
  41d78c:	ldr	x0, [sp, #240]
  41d790:	cmp	x25, x0
  41d794:	b.ne	41d4f4 <ferror@plt+0x1a7c4>  // b.any
  41d798:	ldr	w0, [sp, #248]
  41d79c:	cmp	w26, w0
  41d7a0:	b.ne	41d50c <ferror@plt+0x1a7dc>  // b.any
  41d7a4:	cmp	w23, w21
  41d7a8:	b.gt	41d524 <ferror@plt+0x1a7f4>
  41d7ac:	mov	w1, w26
  41d7b0:	mov	x0, x25
  41d7b4:	bl	41bef8 <ferror@plt+0x191c8>
  41d7b8:	mov	x3, x1
  41d7bc:	cbz	x0, 41d53c <ferror@plt+0x1a80c>
  41d7c0:	sub	w21, w21, w23
  41d7c4:	add	w21, w21, #0x1
  41d7c8:	sxtw	x1, w21
  41d7cc:	sub	w2, w23, #0x1
  41d7d0:	sxtw	x4, w2
  41d7d4:	add	x5, x1, x4
  41d7d8:	cmp	x3, x5
  41d7dc:	b.cc	41d554 <ferror@plt+0x1a824>  // b.lo, b.ul, b.last
  41d7e0:	tbnz	w2, #31, 41d3f8 <ferror@plt+0x1a6c8>
  41d7e4:	cmp	w2, w3
  41d7e8:	b.ge	41d410 <ferror@plt+0x1a6e0>  // b.tcont
  41d7ec:	add	w2, w21, w2
  41d7f0:	cmp	w3, w2
  41d7f4:	b.lt	41d428 <ferror@plt+0x1a6f8>  // b.tstop
  41d7f8:	add	x0, x0, x4
  41d7fc:	bl	454ee0 <_obstack_memory_used@@Base+0xb40>
  41d800:	str	x0, [sp, #120]
  41d804:	cbz	x19, 41d9cc <ferror@plt+0x1ac9c>
  41d808:	ldr	w28, [x19, #4]
  41d80c:	ldr	w0, [x19]
  41d810:	ubfx	x0, x0, #0, #31
  41d814:	cmp	w0, w28
  41d818:	b.ne	41d874 <ferror@plt+0x1ab44>  // b.any
  41d81c:	ldrsb	w0, [x19, #3]
  41d820:	tbnz	w0, #31, 41d440 <ferror@plt+0x1a710>
  41d824:	ldr	w1, [x19, #4]
  41d828:	ldr	w0, [x19]
  41d82c:	add	w1, w1, #0x1
  41d830:	and	w0, w0, #0x7fffffff
  41d834:	bl	4195d0 <ferror@plt+0x168a0>
  41d838:	mov	w28, w0
  41d83c:	ldr	w0, [x19, #4]
  41d840:	str	w0, [sp, #152]
  41d844:	ubfiz	x1, x28, #4, #32
  41d848:	add	x1, x1, #0x8
  41d84c:	mov	x0, x19
  41d850:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41d854:	mov	x19, x0
  41d858:	ldr	w0, [x0]
  41d85c:	bfxil	w0, w28, #0, #31
  41d860:	str	w0, [x19]
  41d864:	ubfx	x0, x0, #24, #7
  41d868:	strb	w0, [x19, #3]
  41d86c:	ldr	w0, [sp, #152]
  41d870:	str	w0, [x19, #4]
  41d874:	ldr	w0, [x19, #4]
  41d878:	add	w1, w0, #0x1
  41d87c:	str	w1, [x19, #4]
  41d880:	ubfiz	x0, x0, #4, #32
  41d884:	add	x0, x0, #0x8
  41d888:	add	x1, x19, x0
  41d88c:	str	w21, [x19, x0]
  41d890:	ldr	x0, [sp, #120]
  41d894:	str	x0, [x1, #8]
  41d898:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41d89c:	add	x3, sp, #0xb0
  41d8a0:	mov	w2, #0x1                   	// #1
  41d8a4:	mov	w1, w22
  41d8a8:	ldr	x0, [x21, #2416]
  41d8ac:	bl	4332f0 <ferror@plt+0x305c0>
  41d8b0:	add	x3, sp, #0xb8
  41d8b4:	mov	w2, #0x1                   	// #1
  41d8b8:	mov	w1, w24
  41d8bc:	ldr	x0, [x21, #2416]
  41d8c0:	bl	4332f0 <ferror@plt+0x305c0>
  41d8c4:	ldr	x0, [sp, #176]
  41d8c8:	cbz	x0, 41d56c <ferror@plt+0x1a83c>
  41d8cc:	ldr	x1, [sp, #184]
  41d8d0:	cbz	x1, 41d584 <ferror@plt+0x1a854>
  41d8d4:	cmp	x0, x1
  41d8d8:	b.eq	41d8ec <ferror@plt+0x1abbc>  // b.none
  41d8dc:	ldr	x3, [x0, #8]
  41d8e0:	ldr	x2, [x1, #8]
  41d8e4:	cmp	x3, x2
  41d8e8:	b.ne	41d59c <ferror@plt+0x1a86c>  // b.any
  41d8ec:	ldr	x0, [x0, #8]
  41d8f0:	cmp	x25, x0
  41d8f4:	b.ne	41d5b4 <ferror@plt+0x1a884>  // b.any
  41d8f8:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41d8fc:	mov	w3, w23
  41d900:	mov	w2, w26
  41d904:	ldr	x0, [x21, #2416]
  41d908:	bl	432ac8 <ferror@plt+0x2fd98>
  41d90c:	ldr	x2, [x21, #2416]
  41d910:	mov	w1, w0
  41d914:	add	x0, sp, #0xc0
  41d918:	bl	41ff0c <ferror@plt+0x1d1dc>
  41d91c:	cbz	x20, 41d948 <ferror@plt+0x1ac18>
  41d920:	ldr	w21, [x20, #4]
  41d924:	ldr	w0, [x20]
  41d928:	ubfx	x0, x0, #0, #31
  41d92c:	cmp	w0, w21
  41d930:	b.ne	41d6e4 <ferror@plt+0x1a9b4>  // b.any
  41d934:	ldrsb	w0, [x20, #3]
  41d938:	add	w1, w21, #0x1
  41d93c:	mov	w23, #0x1                   	// #1
  41d940:	tbz	w0, #31, 41d69c <ferror@plt+0x1a96c>
  41d944:	b	41d954 <ferror@plt+0x1ac24>
  41d948:	ldr	w23, [sp, #148]
  41d94c:	mov	w21, #0x0                   	// #0
  41d950:	mov	w1, #0x1                   	// #1
  41d954:	mov	w0, #0x4                   	// #4
  41d958:	cmp	w1, w0
  41d95c:	csel	w22, w1, w0, cs  // cs = hs, nlast
  41d960:	csel	w1, w1, w0, cs  // cs = hs, nlast
  41d964:	lsl	x1, x1, #4
  41d968:	add	x1, x1, #0x8
  41d96c:	mov	x0, #0x0                   	// #0
  41d970:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41d974:	ldr	w1, [x0]
  41d978:	bfxil	w1, w22, #0, #31
  41d97c:	str	w1, [x0]
  41d980:	ubfx	x1, x1, #24, #7
  41d984:	strb	w1, [x0, #3]
  41d988:	str	wzr, [x0, #4]
  41d98c:	cbz	w23, 41d9c4 <ferror@plt+0x1ac94>
  41d990:	add	x2, x0, #0x8
  41d994:	add	x1, x20, #0x8
  41d998:	cbz	w21, 41d9b8 <ferror@plt+0x1ac88>
  41d99c:	sub	w3, w21, #0x1
  41d9a0:	add	x20, x20, x3, lsl #4
  41d9a4:	add	x20, x20, #0x18
  41d9a8:	ldp	x4, x5, [x1], #16
  41d9ac:	stp	x4, x5, [x2], #16
  41d9b0:	cmp	x20, x1
  41d9b4:	b.ne	41d9a8 <ferror@plt+0x1ac78>  // b.any
  41d9b8:	str	w21, [x0, #4]
  41d9bc:	mov	x20, x0
  41d9c0:	b	41d6e4 <ferror@plt+0x1a9b4>
  41d9c4:	mov	x20, x0
  41d9c8:	b	41d6e4 <ferror@plt+0x1a9b4>
  41d9cc:	ldr	w0, [sp, #148]
  41d9d0:	str	w0, [sp, #152]
  41d9d4:	mov	w28, #0x0                   	// #0
  41d9d8:	mov	w1, #0x1                   	// #1
  41d9dc:	mov	w0, #0x4                   	// #4
  41d9e0:	cmp	w1, w0
  41d9e4:	csel	w2, w1, w0, cs  // cs = hs, nlast
  41d9e8:	str	w2, [sp, #156]
  41d9ec:	csel	w1, w1, w0, cs  // cs = hs, nlast
  41d9f0:	lsl	x1, x1, #4
  41d9f4:	add	x1, x1, #0x8
  41d9f8:	mov	x0, #0x0                   	// #0
  41d9fc:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41da00:	ldr	w1, [x0]
  41da04:	ldr	w2, [sp, #156]
  41da08:	bfxil	w1, w2, #0, #31
  41da0c:	str	w1, [x0]
  41da10:	ubfx	x1, x1, #24, #7
  41da14:	strb	w1, [x0, #3]
  41da18:	str	wzr, [x0, #4]
  41da1c:	ldr	w1, [sp, #152]
  41da20:	cbz	w1, 41da58 <ferror@plt+0x1ad28>
  41da24:	add	x2, x0, #0x8
  41da28:	add	x1, x19, #0x8
  41da2c:	cbz	w28, 41da4c <ferror@plt+0x1ad1c>
  41da30:	sub	w3, w28, #0x1
  41da34:	add	x19, x19, x3, lsl #4
  41da38:	add	x19, x19, #0x18
  41da3c:	ldp	x4, x5, [x1], #16
  41da40:	stp	x4, x5, [x2], #16
  41da44:	cmp	x19, x1
  41da48:	b.ne	41da3c <ferror@plt+0x1ad0c>  // b.any
  41da4c:	str	w28, [x0, #4]
  41da50:	mov	x19, x0
  41da54:	b	41d874 <ferror@plt+0x1ab44>
  41da58:	mov	x19, x0
  41da5c:	b	41d874 <ferror@plt+0x1ab44>
  41da60:	mov	x20, #0x0                   	// #0
  41da64:	b	41d3b0 <ferror@plt+0x1a680>
  41da68:	stp	x29, x30, [sp, #-64]!
  41da6c:	mov	x29, sp
  41da70:	stp	x19, x20, [sp, #16]
  41da74:	stp	x21, x22, [sp, #32]
  41da78:	str	x23, [sp, #48]
  41da7c:	cmp	w1, #0x1
  41da80:	b.le	41dbb0 <ferror@plt+0x1ae80>
  41da84:	mov	x23, x0
  41da88:	mov	w22, w1
  41da8c:	mov	x21, x2
  41da90:	cbz	x2, 41dbc8 <ferror@plt+0x1ae98>
  41da94:	ldr	w0, [x2]
  41da98:	bl	41d05c <ferror@plt+0x1a32c>
  41da9c:	mov	w19, w0
  41daa0:	mov	x3, #0x1                   	// #1
  41daa4:	mov	x2, #0x0                   	// #0
  41daa8:	mov	x1, #0x0                   	// #0
  41daac:	mov	x0, #0x10                  	// #16
  41dab0:	bl	40e0c8 <ferror@plt+0xb398>
  41dab4:	mov	x20, x0
  41dab8:	mov	x2, x21
  41dabc:	mov	w1, w22
  41dac0:	bl	41cf1c <ferror@plt+0x1a1ec>
  41dac4:	ldr	x21, [x23]
  41dac8:	ldr	x0, [x21, #8]
  41dacc:	add	x0, x0, x0, lsl #1
  41dad0:	ldr	x1, [x21, #16]
  41dad4:	cmp	x0, x1, lsl #2
  41dad8:	b.ls	41dbe0 <ferror@plt+0x1aeb0>  // b.plast
  41dadc:	ldr	w0, [x21, #32]
  41dae0:	add	w0, w0, #0x1
  41dae4:	str	w0, [x21, #32]
  41dae8:	ldr	w7, [x21, #40]
  41daec:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41daf0:	add	x0, x0, #0xf98
  41daf4:	ubfiz	x2, x7, #4, #32
  41daf8:	add	x1, x0, x2
  41dafc:	ldr	w6, [x0, x2]
  41db00:	ldr	w9, [x1, #12]
  41db04:	mov	w4, w19
  41db08:	ldr	w1, [x1, #4]
  41db0c:	mul	x1, x1, x4
  41db10:	lsr	x1, x1, #32
  41db14:	sub	w2, w19, w1
  41db18:	add	w1, w1, w2, lsr #1
  41db1c:	lsr	w1, w1, w9
  41db20:	msub	w1, w1, w6, w19
  41db24:	ldr	x0, [x21]
  41db28:	ubfiz	x8, x1, #4, #32
  41db2c:	add	x5, x0, x8
  41db30:	ldr	w8, [x0, x8]
  41db34:	cbz	w8, 41dbec <ferror@plt+0x1aebc>
  41db38:	cmp	w19, w8
  41db3c:	b.eq	41dc0c <ferror@plt+0x1aedc>  // b.none
  41db40:	ubfiz	x7, x7, #4, #32
  41db44:	adrp	x5, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41db48:	add	x5, x5, #0xf98
  41db4c:	add	x7, x5, x7
  41db50:	ldr	w3, [x7, #8]
  41db54:	mul	x3, x3, x4
  41db58:	lsr	x4, x3, #32
  41db5c:	ldr	x7, [x21, #8]
  41db60:	add	w2, w19, #0x1
  41db64:	sub	w3, w19, w4
  41db68:	add	w3, w4, w3, lsr #1
  41db6c:	lsr	w3, w3, w9
  41db70:	sub	w6, w6, #0x2
  41db74:	msub	w2, w3, w6, w2
  41db78:	ldr	w3, [x21, #36]
  41db7c:	add	w3, w3, #0x1
  41db80:	str	w3, [x21, #36]
  41db84:	add	w1, w1, w2
  41db88:	sub	w3, w1, w7
  41db8c:	cmp	x7, w1, uxtw
  41db90:	csel	w1, w3, w1, ls  // ls = plast
  41db94:	ubfiz	x3, x1, #4, #32
  41db98:	add	x5, x0, x3
  41db9c:	ldr	w3, [x0, x3]
  41dba0:	cbz	w3, 41dbec <ferror@plt+0x1aebc>
  41dba4:	cmp	w19, w3
  41dba8:	b.ne	41db78 <ferror@plt+0x1ae48>  // b.any
  41dbac:	b	41dc0c <ferror@plt+0x1aedc>
  41dbb0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41dbb4:	add	x2, x2, #0x928
  41dbb8:	mov	w1, #0x4f6                 	// #1270
  41dbbc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41dbc0:	add	x0, x0, #0xf68
  41dbc4:	bl	4102b4 <ferror@plt+0xd584>
  41dbc8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41dbcc:	add	x2, x2, #0x928
  41dbd0:	mov	w1, #0x4f7                 	// #1271
  41dbd4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41dbd8:	add	x0, x0, #0xf68
  41dbdc:	bl	4102b4 <ferror@plt+0xd584>
  41dbe0:	mov	x0, x21
  41dbe4:	bl	41dc68 <ferror@plt+0x1af38>
  41dbe8:	b	41dadc <ferror@plt+0x1adac>
  41dbec:	ldr	x2, [x21, #16]
  41dbf0:	add	x2, x2, #0x1
  41dbf4:	str	x2, [x21, #16]
  41dbf8:	ubfiz	x1, x1, #4, #32
  41dbfc:	add	x5, x0, x1
  41dc00:	ldr	w2, [x0, x1]
  41dc04:	cbnz	w2, 41dc0c <ferror@plt+0x1aedc>
  41dc08:	str	w19, [x0, x1]
  41dc0c:	str	x20, [x5, #8]
  41dc10:	ldp	x19, x20, [sp, #16]
  41dc14:	ldp	x21, x22, [sp, #32]
  41dc18:	ldr	x23, [sp, #48]
  41dc1c:	ldp	x29, x30, [sp], #64
  41dc20:	ret
  41dc24:	stp	x29, x30, [sp, #-16]!
  41dc28:	mov	x29, sp
  41dc2c:	ldr	x1, [x0, #8]
  41dc30:	sub	x2, x1, #0x1
  41dc34:	cbz	x1, 41dc44 <ferror@plt+0x1af14>
  41dc38:	sub	x2, x2, #0x1
  41dc3c:	cmp	x1, x2
  41dc40:	b.hi	41dc38 <ferror@plt+0x1af08>  // b.pmore
  41dc44:	ldrb	w1, [x0, #44]
  41dc48:	cbnz	w1, 41dc5c <ferror@plt+0x1af2c>
  41dc4c:	ldr	x0, [x0]
  41dc50:	bl	402a90 <free@plt>
  41dc54:	ldp	x29, x30, [sp], #16
  41dc58:	ret
  41dc5c:	ldr	x0, [x0]
  41dc60:	bl	40e140 <ferror@plt+0xb410>
  41dc64:	b	41dc54 <ferror@plt+0x1af24>
  41dc68:	stp	x29, x30, [sp, #-64]!
  41dc6c:	mov	x29, sp
  41dc70:	stp	x19, x20, [sp, #16]
  41dc74:	stp	x21, x22, [sp, #32]
  41dc78:	str	x23, [sp, #48]
  41dc7c:	mov	x19, x0
  41dc80:	ldr	x21, [x0]
  41dc84:	ldr	w23, [x0, #40]
  41dc88:	ldr	x22, [x0, #8]
  41dc8c:	add	x20, x21, x22, lsl #4
  41dc90:	ldr	x1, [x0, #16]
  41dc94:	ldr	x0, [x0, #24]
  41dc98:	sub	x1, x1, x0
  41dc9c:	lsl	x0, x1, #1
  41dca0:	cmp	x22, x1, lsl #1
  41dca4:	b.cc	41dcc0 <ferror@plt+0x1af90>  // b.lo, b.ul, b.last
  41dca8:	lsl	w1, w1, #3
  41dcac:	cmp	x1, #0x20
  41dcb0:	mov	x2, #0x20                  	// #32
  41dcb4:	csel	x1, x1, x2, cs  // cs = hs, nlast
  41dcb8:	cmp	x22, x1
  41dcbc:	b.ls	41dcd8 <ferror@plt+0x1afa8>  // b.plast
  41dcc0:	bl	40dcb0 <ferror@plt+0xaf80>
  41dcc4:	mov	w23, w0
  41dcc8:	ubfiz	x1, x23, #4, #32
  41dccc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41dcd0:	add	x0, x0, #0xf98
  41dcd4:	ldr	w22, [x0, x1]
  41dcd8:	ldrb	w0, [x19, #44]
  41dcdc:	cbnz	w0, 41dcf0 <ferror@plt+0x1afc0>
  41dce0:	mov	x1, #0x10                  	// #16
  41dce4:	mov	x0, x22
  41dce8:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  41dcec:	b	41dd08 <ferror@plt+0x1afd8>
  41dcf0:	mov	x3, #0x0                   	// #0
  41dcf4:	mov	x2, #0x0                   	// #0
  41dcf8:	mov	x1, #0x0                   	// #0
  41dcfc:	lsl	x0, x22, #4
  41dd00:	bl	40e0f8 <ferror@plt+0xb3c8>
  41dd04:	cbz	x0, 41dd50 <ferror@plt+0x1b020>
  41dd08:	cbz	x22, 41dd20 <ferror@plt+0x1aff0>
  41dd0c:	mov	x1, x0
  41dd10:	add	x2, x0, x22, lsl #4
  41dd14:	str	wzr, [x1], #16
  41dd18:	cmp	x1, x2
  41dd1c:	b.ne	41dd14 <ferror@plt+0x1afe4>  // b.any
  41dd20:	str	x0, [x19]
  41dd24:	str	x22, [x19, #8]
  41dd28:	str	w23, [x19, #40]
  41dd2c:	ldr	x0, [x19, #16]
  41dd30:	ldr	x1, [x19, #24]
  41dd34:	sub	x0, x0, x1
  41dd38:	str	x0, [x19, #16]
  41dd3c:	str	xzr, [x19, #24]
  41dd40:	mov	x0, x21
  41dd44:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41dd48:	add	x8, x8, #0xf98
  41dd4c:	b	41dd7c <ferror@plt+0x1b04c>
  41dd50:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41dd54:	add	x2, x2, #0xd88
  41dd58:	mov	w1, #0x2b5                 	// #693
  41dd5c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  41dd60:	add	x0, x0, #0xd98
  41dd64:	bl	4102b4 <ferror@plt+0xd584>
  41dd68:	ldp	x2, x3, [x0]
  41dd6c:	stp	x2, x3, [x6]
  41dd70:	add	x0, x0, #0x10
  41dd74:	cmp	x20, x0
  41dd78:	b.ls	41de20 <ferror@plt+0x1b0f0>  // b.plast
  41dd7c:	ldr	w2, [x0]
  41dd80:	cbz	w2, 41dd70 <ferror@plt+0x1b040>
  41dd84:	ldr	w7, [x19, #40]
  41dd88:	ubfiz	x3, x7, #4, #32
  41dd8c:	add	x1, x8, x3
  41dd90:	ldr	w9, [x8, x3]
  41dd94:	ldr	w10, [x1, #12]
  41dd98:	mov	w11, w2
  41dd9c:	ldr	w1, [x1, #4]
  41dda0:	mul	x1, x1, x11
  41dda4:	lsr	x3, x1, #32
  41dda8:	sub	w1, w2, w3
  41ddac:	add	w1, w3, w1, lsr #1
  41ddb0:	lsr	w1, w1, w10
  41ddb4:	msub	w1, w1, w9, w2
  41ddb8:	ldr	x4, [x19]
  41ddbc:	ubfiz	x5, x1, #4, #32
  41ddc0:	add	x6, x4, x5
  41ddc4:	ldr	w3, [x4, x5]
  41ddc8:	cbz	w3, 41dd68 <ferror@plt+0x1b038>
  41ddcc:	ldr	x5, [x19, #8]
  41ddd0:	ubfiz	x7, x7, #4, #32
  41ddd4:	add	x7, x8, x7
  41ddd8:	ldr	w3, [x7, #8]
  41dddc:	mul	x3, x3, x11
  41dde0:	lsr	x3, x3, #32
  41dde4:	add	w6, w2, #0x1
  41dde8:	sub	w2, w2, w3
  41ddec:	add	w2, w3, w2, lsr #1
  41ddf0:	lsr	w2, w2, w10
  41ddf4:	sub	w9, w9, #0x2
  41ddf8:	msub	w2, w2, w9, w6
  41ddfc:	add	w1, w1, w2
  41de00:	sub	w3, w1, w5
  41de04:	cmp	x5, w1, uxtw
  41de08:	csel	w1, w3, w1, ls  // ls = plast
  41de0c:	ubfiz	x3, x1, #4, #32
  41de10:	add	x6, x4, x3
  41de14:	ldr	w3, [x4, x3]
  41de18:	cbnz	w3, 41ddfc <ferror@plt+0x1b0cc>
  41de1c:	b	41dd68 <ferror@plt+0x1b038>
  41de20:	ldrb	w0, [x19, #44]
  41de24:	cbnz	w0, 41de44 <ferror@plt+0x1b114>
  41de28:	mov	x0, x21
  41de2c:	bl	402a90 <free@plt>
  41de30:	ldp	x19, x20, [sp, #16]
  41de34:	ldp	x21, x22, [sp, #32]
  41de38:	ldr	x23, [sp, #48]
  41de3c:	ldp	x29, x30, [sp], #64
  41de40:	ret
  41de44:	mov	x0, x21
  41de48:	bl	40e140 <ferror@plt+0xb410>
  41de4c:	b	41de30 <ferror@plt+0x1b100>
  41de50:	str	xzr, [x0]
  41de54:	ret
  41de58:	stp	x29, x30, [sp, #-32]!
  41de5c:	mov	x29, sp
  41de60:	stp	x19, x20, [sp, #16]
  41de64:	mov	x20, x0
  41de68:	ldr	x19, [x0]
  41de6c:	cbz	x19, 41de84 <ferror@plt+0x1b154>
  41de70:	mov	x0, x19
  41de74:	ldr	x19, [x19]
  41de78:	bl	402a90 <free@plt>
  41de7c:	str	x19, [x20]
  41de80:	cbnz	x19, 41de70 <ferror@plt+0x1b140>
  41de84:	ldp	x19, x20, [sp, #16]
  41de88:	ldp	x29, x30, [sp], #32
  41de8c:	ret
  41de90:	stp	x29, x30, [sp, #-16]!
  41de94:	mov	x29, sp
  41de98:	cmp	x0, #0x10, lsl #12
  41de9c:	b.ne	41dec8 <ferror@plt+0x1b198>  // b.any
  41dea0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41dea4:	ldr	x0, [x0, #2448]
  41dea8:	cbz	x0, 41debc <ferror@plt+0x1b18c>
  41deac:	ldr	x2, [x0]
  41deb0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41deb4:	str	x2, [x1, #2448]
  41deb8:	b	41decc <ferror@plt+0x1b19c>
  41debc:	mov	x0, #0x10000               	// #65536
  41dec0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41dec4:	b	41decc <ferror@plt+0x1b19c>
  41dec8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41decc:	ldp	x29, x30, [sp], #16
  41ded0:	ret
  41ded4:	ldr	x1, [x0]
  41ded8:	sub	x1, x1, x0
  41dedc:	cmp	x1, #0x10, lsl #12
  41dee0:	b.ne	41def8 <ferror@plt+0x1b1c8>  // b.any
  41dee4:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41dee8:	ldr	x2, [x1, #2448]
  41deec:	str	x2, [x0]
  41def0:	str	x0, [x1, #2448]
  41def4:	ret
  41def8:	stp	x29, x30, [sp, #-16]!
  41defc:	mov	x29, sp
  41df00:	bl	402a90 <free@plt>
  41df04:	ldp	x29, x30, [sp], #16
  41df08:	ret
  41df0c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  41df10:	str	xzr, [x0, #2448]
  41df14:	ret
  41df18:	stp	x29, x30, [sp, #-32]!
  41df1c:	mov	x29, sp
  41df20:	str	x19, [sp, #16]
  41df24:	eor	x19, x1, x0
  41df28:	blr	x2
  41df2c:	asr	w0, w0, #31
  41df30:	sxtw	x0, w0
  41df34:	and	x0, x0, x19
  41df38:	ldr	x19, [sp, #16]
  41df3c:	ldp	x29, x30, [sp], #32
  41df40:	ret
  41df44:	stp	x29, x30, [sp, #-96]!
  41df48:	mov	x29, sp
  41df4c:	stp	x19, x20, [sp, #16]
  41df50:	stp	x21, x22, [sp, #32]
  41df54:	stp	x23, x24, [sp, #48]
  41df58:	stp	x25, x26, [sp, #64]
  41df5c:	mov	x23, x0
  41df60:	mov	x19, x1
  41df64:	mov	x21, x2
  41df68:	mov	x20, x3
  41df6c:	ldr	x0, [x1, #32]
  41df70:	cmp	x0, x2
  41df74:	b.cc	41e3a4 <ferror@plt+0x1b674>  // b.lo, b.ul, b.last
  41df78:	str	x3, [x19, #8]
  41df7c:	str	x2, [x19, #16]
  41df80:	ldr	x20, [x1, #24]
  41df84:	add	x22, x23, x20
  41df88:	add	x20, x22, x20
  41df8c:	ldr	x2, [x1]
  41df90:	mov	x1, x23
  41df94:	mov	x0, x22
  41df98:	bl	41df18 <ferror@plt+0x1b1e8>
  41df9c:	eor	x23, x23, x0
  41dfa0:	mov	x25, x23
  41dfa4:	eor	x22, x22, x0
  41dfa8:	mov	x21, x22
  41dfac:	ldr	x0, [x19, #16]
  41dfb0:	cmp	x0, #0x3
  41dfb4:	b.ne	41dfe8 <ferror@plt+0x1b2b8>  // b.any
  41dfb8:	ldr	x2, [x19]
  41dfbc:	mov	x1, x22
  41dfc0:	mov	x0, x20
  41dfc4:	bl	41df18 <ferror@plt+0x1b1e8>
  41dfc8:	eor	x22, x22, x0
  41dfcc:	eor	x20, x20, x0
  41dfd0:	ldr	x2, [x19]
  41dfd4:	mov	x1, x23
  41dfd8:	mov	x0, x22
  41dfdc:	bl	41df18 <ferror@plt+0x1b1e8>
  41dfe0:	eor	x25, x23, x0
  41dfe4:	eor	x21, x22, x0
  41dfe8:	ldr	x1, [x19, #16]
  41dfec:	cmp	x1, #0x3
  41dff0:	b.ls	41e134 <ferror@plt+0x1b404>  // b.plast
  41dff4:	ldr	x22, [x19, #24]
  41dff8:	add	x24, x20, x22
  41dffc:	add	x22, x24, x22
  41e000:	cmp	x1, #0x5
  41e004:	b.ne	41e038 <ferror@plt+0x1b308>  // b.any
  41e008:	ldr	x2, [x19]
  41e00c:	mov	x1, x24
  41e010:	mov	x0, x22
  41e014:	bl	41df18 <ferror@plt+0x1b1e8>
  41e018:	eor	x24, x24, x0
  41e01c:	eor	x22, x22, x0
  41e020:	ldr	x2, [x19]
  41e024:	mov	x1, x20
  41e028:	mov	x0, x22
  41e02c:	bl	41df18 <ferror@plt+0x1b1e8>
  41e030:	eor	x20, x20, x0
  41e034:	eor	x22, x22, x0
  41e038:	ldr	x2, [x19]
  41e03c:	mov	x1, x20
  41e040:	mov	x0, x24
  41e044:	bl	41df18 <ferror@plt+0x1b1e8>
  41e048:	eor	x26, x20, x0
  41e04c:	eor	x23, x24, x0
  41e050:	mov	x24, x23
  41e054:	ldr	x0, [x19, #16]
  41e058:	cmp	x0, #0x5
  41e05c:	b.ne	41e090 <ferror@plt+0x1b360>  // b.any
  41e060:	ldr	x2, [x19]
  41e064:	mov	x1, x25
  41e068:	mov	x0, x23
  41e06c:	bl	41df18 <ferror@plt+0x1b1e8>
  41e070:	eor	x25, x25, x0
  41e074:	eor	x24, x23, x0
  41e078:	ldr	x2, [x19]
  41e07c:	mov	x1, x21
  41e080:	mov	x0, x22
  41e084:	bl	41df18 <ferror@plt+0x1b1e8>
  41e088:	eor	x21, x21, x0
  41e08c:	eor	x22, x22, x0
  41e090:	ldr	x2, [x19]
  41e094:	mov	x1, x25
  41e098:	mov	x0, x26
  41e09c:	bl	41df18 <ferror@plt+0x1b1e8>
  41e0a0:	eor	x25, x25, x0
  41e0a4:	eor	x26, x26, x0
  41e0a8:	ldr	x2, [x19]
  41e0ac:	mov	x1, x21
  41e0b0:	mov	x0, x24
  41e0b4:	bl	41df18 <ferror@plt+0x1b1e8>
  41e0b8:	eor	x21, x21, x0
  41e0bc:	eor	x24, x24, x0
  41e0c0:	ldr	x2, [x19]
  41e0c4:	mov	x1, x21
  41e0c8:	mov	x0, x26
  41e0cc:	bl	41df18 <ferror@plt+0x1b1e8>
  41e0d0:	eor	x21, x21, x0
  41e0d4:	eor	x0, x26, x0
  41e0d8:	ldr	x1, [x19, #24]
  41e0dc:	cmp	x1, #0x8
  41e0e0:	b.ne	41e258 <ferror@plt+0x1b528>  // b.any
  41e0e4:	ldr	x4, [x25]
  41e0e8:	ldr	x3, [x21]
  41e0ec:	ldr	x2, [x0]
  41e0f0:	ldr	x1, [x24]
  41e0f4:	ldr	x0, [x19, #8]
  41e0f8:	ldr	x5, [x19, #16]
  41e0fc:	cmp	x5, #0x5
  41e100:	b.ne	41e10c <ferror@plt+0x1b3dc>  // b.any
  41e104:	ldr	x5, [x22]
  41e108:	str	x5, [x0, #32]
  41e10c:	str	x4, [x0]
  41e110:	str	x3, [x0, #8]
  41e114:	str	x2, [x0, #16]
  41e118:	str	x1, [x0, #24]
  41e11c:	ldp	x19, x20, [sp, #16]
  41e120:	ldp	x21, x22, [sp, #32]
  41e124:	ldp	x23, x24, [sp, #48]
  41e128:	ldp	x25, x26, [sp, #64]
  41e12c:	ldp	x29, x30, [sp], #96
  41e130:	ret
  41e134:	ldr	x0, [x19, #24]
  41e138:	cmp	x0, #0x8
  41e13c:	b.ne	41e168 <ferror@plt+0x1b438>  // b.any
  41e140:	ldr	x3, [x25]
  41e144:	ldr	x2, [x21]
  41e148:	ldr	x0, [x19, #8]
  41e14c:	cmp	x1, #0x3
  41e150:	b.ne	41e15c <ferror@plt+0x1b42c>  // b.any
  41e154:	ldr	x1, [x20]
  41e158:	str	x1, [x0, #16]
  41e15c:	str	x3, [x0]
  41e160:	str	x2, [x0, #8]
  41e164:	b	41e11c <ferror@plt+0x1b3ec>
  41e168:	cmp	x0, #0x4
  41e16c:	b.ne	41e198 <ferror@plt+0x1b468>  // b.any
  41e170:	ldr	w3, [x25]
  41e174:	ldr	w2, [x21]
  41e178:	ldr	x0, [x19, #8]
  41e17c:	cmp	x1, #0x3
  41e180:	b.ne	41e18c <ferror@plt+0x1b45c>  // b.any
  41e184:	ldr	w1, [x20]
  41e188:	str	w1, [x0, #8]
  41e18c:	str	w3, [x0]
  41e190:	str	w2, [x0, #4]
  41e194:	b	41e11c <ferror@plt+0x1b3ec>
  41e198:	mov	x1, #0x8                   	// #8
  41e19c:	cmp	x0, #0x7
  41e1a0:	b.ls	41e200 <ferror@plt+0x1b4d0>  // b.plast
  41e1a4:	sub	x9, x25, #0x8
  41e1a8:	sub	x8, x21, #0x8
  41e1ac:	sub	x10, x20, #0x8
  41e1b0:	ldr	x6, [x9, x1]
  41e1b4:	ldr	x5, [x8, x1]
  41e1b8:	sub	x2, x1, #0x8
  41e1bc:	ldr	x3, [x19, #8]
  41e1c0:	add	x4, x3, x2
  41e1c4:	ldr	x7, [x19, #16]
  41e1c8:	cmp	x7, #0x3
  41e1cc:	b.ne	41e1dc <ferror@plt+0x1b4ac>  // b.any
  41e1d0:	ldr	x7, [x10, x1]
  41e1d4:	lsl	x0, x0, #1
  41e1d8:	str	x7, [x4, x0]
  41e1dc:	str	x6, [x3, x2]
  41e1e0:	ldr	x0, [x19, #24]
  41e1e4:	str	x5, [x4, x0]
  41e1e8:	add	x2, x1, #0x8
  41e1ec:	ldr	x0, [x19, #24]
  41e1f0:	cmp	x2, x0
  41e1f4:	b.hi	41e204 <ferror@plt+0x1b4d4>  // b.pmore
  41e1f8:	mov	x1, x2
  41e1fc:	b	41e1b0 <ferror@plt+0x1b480>
  41e200:	mov	x1, #0x0                   	// #0
  41e204:	ldr	x2, [x19, #24]
  41e208:	cmp	x2, x1
  41e20c:	b.ls	41e11c <ferror@plt+0x1b3ec>  // b.plast
  41e210:	ldrb	w4, [x25, x1]
  41e214:	ldrb	w3, [x21, x1]
  41e218:	ldr	x0, [x19, #8]
  41e21c:	add	x0, x0, x1
  41e220:	ldr	x5, [x19, #16]
  41e224:	cmp	x5, #0x3
  41e228:	b.ne	41e238 <ferror@plt+0x1b508>  // b.any
  41e22c:	ldrb	w5, [x20, x1]
  41e230:	lsl	x2, x2, #1
  41e234:	strb	w5, [x0, x2]
  41e238:	strb	w4, [x0]
  41e23c:	ldr	x2, [x19, #24]
  41e240:	strb	w3, [x0, x2]
  41e244:	add	x1, x1, #0x1
  41e248:	ldr	x2, [x19, #24]
  41e24c:	cmp	x2, x1
  41e250:	b.hi	41e210 <ferror@plt+0x1b4e0>  // b.pmore
  41e254:	b	41e11c <ferror@plt+0x1b3ec>
  41e258:	cmp	x1, #0x4
  41e25c:	b.ne	41e29c <ferror@plt+0x1b56c>  // b.any
  41e260:	ldr	w4, [x25]
  41e264:	ldr	w3, [x21]
  41e268:	ldr	w2, [x0]
  41e26c:	ldr	w1, [x24]
  41e270:	ldr	x0, [x19, #8]
  41e274:	ldr	x5, [x19, #16]
  41e278:	cmp	x5, #0x5
  41e27c:	b.ne	41e288 <ferror@plt+0x1b558>  // b.any
  41e280:	ldr	w5, [x22]
  41e284:	str	w5, [x0, #16]
  41e288:	str	w4, [x0]
  41e28c:	str	w3, [x0, #4]
  41e290:	str	w2, [x0, #8]
  41e294:	str	w1, [x0, #12]
  41e298:	b	41e11c <ferror@plt+0x1b3ec>
  41e29c:	mov	x2, #0x8                   	// #8
  41e2a0:	sub	x11, x22, #0x8
  41e2a4:	cmp	x1, #0x7
  41e2a8:	b.ls	41e32c <ferror@plt+0x1b5fc>  // b.plast
  41e2ac:	add	x3, x25, x2
  41e2b0:	ldur	x9, [x3, #-8]
  41e2b4:	add	x3, x21, x2
  41e2b8:	ldur	x8, [x3, #-8]
  41e2bc:	add	x3, x0, x2
  41e2c0:	ldur	x7, [x3, #-8]
  41e2c4:	add	x3, x24, x2
  41e2c8:	ldur	x6, [x3, #-8]
  41e2cc:	sub	x4, x2, #0x8
  41e2d0:	ldr	x5, [x19, #8]
  41e2d4:	add	x3, x5, x4
  41e2d8:	ldr	x10, [x19, #16]
  41e2dc:	cmp	x10, #0x5
  41e2e0:	b.ne	41e2f0 <ferror@plt+0x1b5c0>  // b.any
  41e2e4:	ldr	x10, [x11, x2]
  41e2e8:	lsl	x1, x1, #2
  41e2ec:	str	x10, [x3, x1]
  41e2f0:	str	x9, [x5, x4]
  41e2f4:	ldr	x1, [x19, #24]
  41e2f8:	add	x4, x3, x1
  41e2fc:	str	x8, [x3, x1]
  41e300:	ldr	x1, [x19, #24]
  41e304:	add	x3, x4, x1
  41e308:	str	x7, [x4, x1]
  41e30c:	ldr	x1, [x19, #24]
  41e310:	str	x6, [x3, x1]
  41e314:	ldr	x1, [x19, #24]
  41e318:	add	x3, x2, #0x8
  41e31c:	cmp	x1, x3
  41e320:	b.cc	41e330 <ferror@plt+0x1b600>  // b.lo, b.ul, b.last
  41e324:	mov	x2, x3
  41e328:	b	41e2ac <ferror@plt+0x1b57c>
  41e32c:	mov	x2, #0x0                   	// #0
  41e330:	ldr	x3, [x19, #24]
  41e334:	cmp	x3, x2
  41e338:	b.ls	41e11c <ferror@plt+0x1b3ec>  // b.plast
  41e33c:	ldrb	w4, [x25, x2]
  41e340:	ldrb	w7, [x21, x2]
  41e344:	ldrb	w6, [x0, x2]
  41e348:	ldrb	w5, [x24, x2]
  41e34c:	ldr	x1, [x19, #8]
  41e350:	add	x1, x1, x2
  41e354:	ldr	x8, [x19, #16]
  41e358:	cmp	x8, #0x5
  41e35c:	b.ne	41e36c <ferror@plt+0x1b63c>  // b.any
  41e360:	ldrb	w8, [x22, x2]
  41e364:	lsl	x3, x3, #2
  41e368:	strb	w8, [x1, x3]
  41e36c:	strb	w4, [x1]
  41e370:	ldr	x4, [x19, #24]
  41e374:	add	x3, x1, x4
  41e378:	strb	w7, [x1, x4]
  41e37c:	ldr	x1, [x19, #24]
  41e380:	add	x4, x3, x1
  41e384:	strb	w6, [x3, x1]
  41e388:	ldr	x1, [x19, #24]
  41e38c:	strb	w5, [x4, x1]
  41e390:	add	x2, x2, #0x1
  41e394:	ldr	x3, [x19, #24]
  41e398:	cmp	x3, x2
  41e39c:	b.hi	41e33c <ferror@plt+0x1b60c>  // b.pmore
  41e3a0:	b	41e11c <ferror@plt+0x1b3ec>
  41e3a4:	str	x27, [sp, #80]
  41e3a8:	lsr	x26, x2, #1
  41e3ac:	ldr	x25, [x1, #24]
  41e3b0:	mul	x25, x26, x25
  41e3b4:	add	x27, x23, x25
  41e3b8:	add	x22, x3, x25
  41e3bc:	cmp	x23, x3
  41e3c0:	csel	x24, x4, x23, eq  // eq = none
  41e3c4:	mov	x3, x22
  41e3c8:	sub	x2, x2, x26
  41e3cc:	mov	x0, x27
  41e3d0:	bl	41df44 <ferror@plt+0x1b214>
  41e3d4:	mov	x4, x27
  41e3d8:	mov	x3, x24
  41e3dc:	mov	x2, x26
  41e3e0:	mov	x1, x19
  41e3e4:	mov	x0, x23
  41e3e8:	bl	41df44 <ferror@plt+0x1b214>
  41e3ec:	ldr	x1, [x19, #24]
  41e3f0:	sub	x1, x25, x1
  41e3f4:	ldr	x2, [x19]
  41e3f8:	add	x1, x24, x1
  41e3fc:	mov	x0, x22
  41e400:	blr	x2
  41e404:	tbz	w0, #31, 41e468 <ferror@plt+0x1b738>
  41e408:	ldr	x0, [x19, #24]
  41e40c:	madd	x21, x0, x21, x20
  41e410:	cmp	x0, #0x8
  41e414:	b.ne	41e480 <ferror@plt+0x1b750>  // b.any
  41e418:	ldr	x2, [x19]
  41e41c:	mov	x1, x24
  41e420:	mov	x0, x22
  41e424:	blr	x2
  41e428:	asr	w0, w0, #31
  41e42c:	sxtw	x1, w0
  41e430:	eor	x2, x22, x24
  41e434:	and	x2, x2, x1
  41e438:	eor	x2, x24, x2
  41e43c:	ldr	x2, [x2]
  41e440:	str	x2, [x20], #8
  41e444:	and	w0, w0, #0x8
  41e448:	add	x22, x22, w0, sxtw
  41e44c:	cmp	x20, x22
  41e450:	b.eq	41e53c <ferror@plt+0x1b80c>  // b.none
  41e454:	mvn	x1, x1
  41e458:	and	x1, x1, #0x8
  41e45c:	add	x24, x24, x1
  41e460:	cmp	x21, x22
  41e464:	b.ne	41e418 <ferror@plt+0x1b6e8>  // b.any
  41e468:	sub	x2, x22, x20
  41e46c:	mov	x1, x24
  41e470:	mov	x0, x20
  41e474:	bl	402620 <memcpy@plt>
  41e478:	ldr	x27, [sp, #80]
  41e47c:	b	41e11c <ferror@plt+0x1b3ec>
  41e480:	cmp	x0, #0x4
  41e484:	b.ne	41e4dc <ferror@plt+0x1b7ac>  // b.any
  41e488:	ldr	x2, [x19]
  41e48c:	mov	x1, x24
  41e490:	mov	x0, x22
  41e494:	blr	x2
  41e498:	asr	w0, w0, #31
  41e49c:	sxtw	x1, w0
  41e4a0:	eor	x2, x22, x24
  41e4a4:	and	x2, x2, x1
  41e4a8:	eor	x2, x24, x2
  41e4ac:	ldr	w2, [x2]
  41e4b0:	str	w2, [x20], #4
  41e4b4:	and	w0, w0, #0x4
  41e4b8:	add	x22, x22, w0, sxtw
  41e4bc:	cmp	x20, x22
  41e4c0:	b.eq	41e544 <ferror@plt+0x1b814>  // b.none
  41e4c4:	mvn	x1, x1
  41e4c8:	and	x1, x1, #0x4
  41e4cc:	add	x24, x24, x1
  41e4d0:	cmp	x21, x22
  41e4d4:	b.ne	41e488 <ferror@plt+0x1b758>  // b.any
  41e4d8:	b	41e468 <ferror@plt+0x1b738>
  41e4dc:	ldr	x2, [x19]
  41e4e0:	mov	x1, x24
  41e4e4:	mov	x0, x22
  41e4e8:	blr	x2
  41e4ec:	asr	w23, w0, #31
  41e4f0:	sxtw	x23, w23
  41e4f4:	eor	x1, x22, x24
  41e4f8:	and	x1, x1, x23
  41e4fc:	ldr	x2, [x19, #24]
  41e500:	eor	x1, x24, x1
  41e504:	mov	x0, x20
  41e508:	bl	402620 <memcpy@plt>
  41e50c:	ldr	x1, [x19, #24]
  41e510:	add	x20, x0, x1
  41e514:	and	x0, x23, x1
  41e518:	add	x22, x22, x0
  41e51c:	cmp	x20, x22
  41e520:	b.eq	41e54c <ferror@plt+0x1b81c>  // b.none
  41e524:	mvn	x0, x23
  41e528:	and	x0, x0, x1
  41e52c:	add	x24, x24, x0
  41e530:	cmp	x21, x22
  41e534:	b.ne	41e4dc <ferror@plt+0x1b7ac>  // b.any
  41e538:	b	41e468 <ferror@plt+0x1b738>
  41e53c:	ldr	x27, [sp, #80]
  41e540:	b	41e11c <ferror@plt+0x1b3ec>
  41e544:	ldr	x27, [sp, #80]
  41e548:	b	41e11c <ferror@plt+0x1b3ec>
  41e54c:	ldr	x27, [sp, #80]
  41e550:	b	41e11c <ferror@plt+0x1b3ec>
  41e554:	cmp	x1, #0x1
  41e558:	b.ls	41e600 <ferror@plt+0x1b8d0>  // b.plast
  41e55c:	stp	x29, x30, [sp, #-352]!
  41e560:	mov	x29, sp
  41e564:	stp	x19, x20, [sp, #16]
  41e568:	mov	x20, x0
  41e56c:	mov	x19, x1
  41e570:	mov	x0, #0x5                   	// #5
  41e574:	tbnz	x2, #63, 41e5b8 <ferror@plt+0x1b888>
  41e578:	str	x3, [sp, #312]
  41e57c:	str	x20, [sp, #320]
  41e580:	str	x19, [sp, #328]
  41e584:	str	x2, [sp, #336]
  41e588:	str	x0, [sp, #344]
  41e58c:	lsr	x1, x19, #1
  41e590:	mul	x0, x1, x2
  41e594:	cmp	x0, #0x100
  41e598:	b.hi	41e5c4 <ferror@plt+0x1b894>  // b.pmore
  41e59c:	add	x4, sp, #0x38
  41e5a0:	mov	x3, x20
  41e5a4:	mov	x2, x19
  41e5a8:	add	x1, sp, #0x138
  41e5ac:	mov	x0, x20
  41e5b0:	bl	41df44 <ferror@plt+0x1b214>
  41e5b4:	b	41e5f4 <ferror@plt+0x1b8c4>
  41e5b8:	mvn	x2, x2
  41e5bc:	mov	x0, #0x3                   	// #3
  41e5c0:	b	41e578 <ferror@plt+0x1b848>
  41e5c4:	str	x21, [sp, #32]
  41e5c8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41e5cc:	mov	x21, x0
  41e5d0:	mov	x4, x0
  41e5d4:	mov	x3, x20
  41e5d8:	mov	x2, x19
  41e5dc:	add	x1, sp, #0x138
  41e5e0:	mov	x0, x20
  41e5e4:	bl	41df44 <ferror@plt+0x1b214>
  41e5e8:	mov	x0, x21
  41e5ec:	bl	402a90 <free@plt>
  41e5f0:	ldr	x21, [sp, #32]
  41e5f4:	ldp	x19, x20, [sp, #16]
  41e5f8:	ldp	x29, x30, [sp], #352
  41e5fc:	ret
  41e600:	ret
  41e604:	stp	x29, x30, [sp, #-16]!
  41e608:	mov	x29, sp
  41e60c:	mvn	x2, x2
  41e610:	bl	41e554 <ferror@plt+0x1b824>
  41e614:	ldp	x29, x30, [sp], #16
  41e618:	ret
  41e61c:	mov	x9, x0
  41e620:	ldr	x5, [x4]
  41e624:	mov	w0, #0x7                   	// #7
  41e628:	cmp	x5, #0x3
  41e62c:	b.ls	41e6e8 <ferror@plt+0x1b9b8>  // b.plast
  41e630:	ldr	x11, [x2]
  41e634:	mov	w0, #0x16                  	// #22
  41e638:	cbz	x11, 41e6e8 <ferror@plt+0x1b9b8>
  41e63c:	ldr	x12, [x1]
  41e640:	ldrb	w13, [x12]
  41e644:	mov	w6, w13
  41e648:	mov	x5, #0x2                   	// #2
  41e64c:	cmp	w13, #0x7f
  41e650:	b.ls	41e690 <ferror@plt+0x1b960>  // b.plast
  41e654:	adrp	x7, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41e658:	add	x7, x7, #0xa8
  41e65c:	add	x14, x7, #0x8
  41e660:	add	x0, x7, x5
  41e664:	ldurb	w8, [x0, #-1]
  41e668:	bic	w10, w6, w8
  41e66c:	add	x0, x14, x5
  41e670:	ldurb	w0, [x0, #-1]
  41e674:	cmp	w10, w0
  41e678:	b.eq	41e6ec <ferror@plt+0x1b9bc>  // b.none
  41e67c:	add	x5, x5, #0x1
  41e680:	cmp	x5, #0x7
  41e684:	b.ne	41e660 <ferror@plt+0x1b930>  // b.any
  41e688:	mov	w0, #0x54                  	// #84
  41e68c:	b	41e6e8 <ferror@plt+0x1b9b8>
  41e690:	sub	x11, x11, #0x1
  41e694:	str	x11, [x2]
  41e698:	ldr	x0, [x1]
  41e69c:	add	x0, x0, #0x1
  41e6a0:	str	x0, [x1]
  41e6a4:	ldr	x1, [x3]
  41e6a8:	cbz	x9, 41e7b8 <ferror@plt+0x1ba88>
  41e6ac:	strb	w6, [x1, #3]
  41e6b0:	lsr	w0, w6, #8
  41e6b4:	strb	w0, [x1, #2]
  41e6b8:	lsr	w0, w6, #16
  41e6bc:	strb	w0, [x1, #1]
  41e6c0:	lsr	w6, w6, #24
  41e6c4:	mov	x0, #0x0                   	// #0
  41e6c8:	strb	w6, [x1, x0]
  41e6cc:	ldr	x0, [x3]
  41e6d0:	add	x0, x0, #0x4
  41e6d4:	str	x0, [x3]
  41e6d8:	ldr	x0, [x4]
  41e6dc:	sub	x0, x0, #0x4
  41e6e0:	str	x0, [x4]
  41e6e4:	mov	w0, #0x0                   	// #0
  41e6e8:	ret
  41e6ec:	mov	w0, #0x16                  	// #22
  41e6f0:	cmp	x5, x11
  41e6f4:	b.hi	41e6e8 <ferror@plt+0x1b9b8>  // b.pmore
  41e6f8:	and	w6, w13, w8
  41e6fc:	add	x0, x12, #0x1
  41e700:	cmp	x5, #0x1
  41e704:	b.ls	41e7b0 <ferror@plt+0x1ba80>  // b.plast
  41e708:	add	x12, x12, x5
  41e70c:	ldrb	w7, [x0], #1
  41e710:	and	w8, w7, #0xc0
  41e714:	cmp	w8, #0x80
  41e718:	b.ne	41e7d8 <ferror@plt+0x1baa8>  // b.any
  41e71c:	and	w7, w7, #0x3f
  41e720:	add	w6, w7, w6, lsl #6
  41e724:	cmp	x0, x12
  41e728:	b.ne	41e70c <ferror@plt+0x1b9dc>  // b.any
  41e72c:	mov	w0, #0x54                  	// #84
  41e730:	cmp	w6, #0x7f
  41e734:	b.ls	41e6e8 <ferror@plt+0x1b9b8>  // b.plast
  41e738:	cmp	w6, #0x7ff
  41e73c:	mov	w0, #0x54                  	// #84
  41e740:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  41e744:	b.hi	41e6e8 <ferror@plt+0x1b9b8>  // b.pmore
  41e748:	mov	w0, #0xffff                	// #65535
  41e74c:	cmp	w6, w0
  41e750:	mov	w0, #0x54                  	// #84
  41e754:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  41e758:	b.hi	41e6e8 <ferror@plt+0x1b9b8>  // b.pmore
  41e75c:	mov	w0, #0x1fffff              	// #2097151
  41e760:	cmp	w6, w0
  41e764:	mov	w0, #0x54                  	// #84
  41e768:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  41e76c:	b.hi	41e6e8 <ferror@plt+0x1b9b8>  // b.pmore
  41e770:	mov	w0, #0x3ffffff             	// #67108863
  41e774:	cmp	w6, w0
  41e778:	mov	w0, #0x54                  	// #84
  41e77c:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  41e780:	b.hi	41e6e8 <ferror@plt+0x1b9b8>  // b.pmore
  41e784:	sub	w0, w6, #0xd, lsl #12
  41e788:	sub	w0, w0, #0x800
  41e78c:	cmp	w0, #0x7ff
  41e790:	mov	w0, #0x54                  	// #84
  41e794:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  41e798:	b.lt	41e6e8 <ferror@plt+0x1b9b8>  // b.tstop
  41e79c:	str	x12, [x1]
  41e7a0:	ldr	x0, [x2]
  41e7a4:	sub	x5, x0, x5
  41e7a8:	str	x5, [x2]
  41e7ac:	b	41e6a4 <ferror@plt+0x1b974>
  41e7b0:	mov	x12, x0
  41e7b4:	b	41e738 <ferror@plt+0x1ba08>
  41e7b8:	strb	w6, [x1]
  41e7bc:	lsr	w0, w6, #8
  41e7c0:	strb	w0, [x1, #1]
  41e7c4:	lsr	w0, w6, #16
  41e7c8:	strb	w0, [x1, #2]
  41e7cc:	lsr	w6, w6, #24
  41e7d0:	mov	x0, #0x3                   	// #3
  41e7d4:	b	41e6c8 <ferror@plt+0x1b998>
  41e7d8:	mov	w0, #0x54                  	// #84
  41e7dc:	b	41e6e8 <ferror@plt+0x1b9b8>
  41e7e0:	ldr	x7, [x1]
  41e7e4:	ldr	x8, [x2]
  41e7e8:	cmp	x8, #0x1
  41e7ec:	b.ls	41e9b0 <ferror@plt+0x1bc80>  // b.plast
  41e7f0:	mov	x6, x0
  41e7f4:	cmp	x0, #0x0
  41e7f8:	cset	w0, eq  // eq = none
  41e7fc:	ldrb	w5, [x7, w0, uxtw]
  41e800:	cset	w0, ne  // ne = any
  41e804:	ldrb	w0, [x7, w0, uxtw]
  41e808:	add	w5, w0, w5, lsl #8
  41e80c:	sub	w9, w5, #0xd, lsl #12
  41e810:	sub	w9, w9, #0xc00
  41e814:	mov	w0, #0x54                  	// #84
  41e818:	cmp	w9, #0x3ff
  41e81c:	b.ls	41e9d0 <ferror@plt+0x1bca0>  // b.plast
  41e820:	sub	sp, sp, #0x10
  41e824:	sub	w9, w5, #0xd, lsl #12
  41e828:	sub	w9, w9, #0x800
  41e82c:	cmp	w9, #0x3ff
  41e830:	b.hi	41e900 <ferror@plt+0x1bbd0>  // b.pmore
  41e834:	mov	w0, #0x16                  	// #22
  41e838:	cmp	x8, #0x3
  41e83c:	b.ls	41e988 <ferror@plt+0x1bc58>  // b.plast
  41e840:	cbz	x6, 41e9c0 <ferror@plt+0x1bc90>
  41e844:	ldrb	w5, [x7, #2]
  41e848:	lsl	w0, w5, #8
  41e84c:	mov	x5, #0x3                   	// #3
  41e850:	ldrb	w5, [x7, x5]
  41e854:	add	w5, w5, w0
  41e858:	sub	w6, w5, #0xd, lsl #12
  41e85c:	sub	w6, w6, #0xc00
  41e860:	mov	w0, #0x54                  	// #84
  41e864:	cmp	w6, #0x3ff
  41e868:	b.hi	41e988 <ferror@plt+0x1bc58>  // b.pmore
  41e86c:	add	w5, w5, w9, lsl #10
  41e870:	add	w5, w5, #0x2, lsl #12
  41e874:	add	w5, w5, #0x400
  41e878:	ldr	x9, [x3]
  41e87c:	mov	w0, w5
  41e880:	add	x8, sp, #0xe
  41e884:	mov	x6, #0x1                   	// #1
  41e888:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41e88c:	add	x10, x10, #0xa8
  41e890:	add	x10, x10, #0x10
  41e894:	mov	x11, x8
  41e898:	and	w7, w0, #0x3f
  41e89c:	orr	w7, w7, #0xffffff80
  41e8a0:	strb	w7, [x8, #-1]!
  41e8a4:	lsr	w0, w0, #6
  41e8a8:	mov	x12, x6
  41e8ac:	add	x6, x6, #0x1
  41e8b0:	cmp	w0, #0x3e
  41e8b4:	b.hi	41e894 <ferror@plt+0x1bb64>  // b.pmore
  41e8b8:	add	x7, x10, x6
  41e8bc:	ldurb	w7, [x7, #-1]
  41e8c0:	tst	w7, w0
  41e8c4:	b.ne	41e894 <ferror@plt+0x1bb64>  // b.any
  41e8c8:	sub	x7, x11, #0x2
  41e8cc:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41e8d0:	add	x8, x8, #0xa8
  41e8d4:	add	x8, x8, #0x18
  41e8d8:	ldrb	w8, [x8, x12]
  41e8dc:	orr	w0, w0, w8
  41e8e0:	sturb	w0, [x11, #-2]
  41e8e4:	ldr	x0, [x4]
  41e8e8:	cmp	x6, x0
  41e8ec:	b.hi	41e9b8 <ferror@plt+0x1bc88>  // b.pmore
  41e8f0:	add	x0, sp, #0xe
  41e8f4:	cmp	x7, x0
  41e8f8:	b.cc	41e920 <ferror@plt+0x1bbf0>  // b.lo, b.ul, b.last
  41e8fc:	b	41e950 <ferror@plt+0x1bc20>
  41e900:	ldr	x9, [x3]
  41e904:	cmp	w5, #0x7f
  41e908:	b.hi	41e87c <ferror@plt+0x1bb4c>  // b.pmore
  41e90c:	strb	w5, [sp, #13]
  41e910:	ldr	x0, [x4]
  41e914:	cbz	x0, 41e9b8 <ferror@plt+0x1bc88>
  41e918:	add	x7, sp, #0xd
  41e91c:	mov	x6, #0x1                   	// #1
  41e920:	mov	x11, x7
  41e924:	add	x8, sp, #0xe
  41e928:	sub	x8, x8, x7
  41e92c:	mov	x0, #0x0                   	// #0
  41e930:	ldrb	w10, [x7, x0]
  41e934:	strb	w10, [x9, x0]
  41e938:	add	x0, x0, #0x1
  41e93c:	cmp	x8, x0
  41e940:	b.ne	41e930 <ferror@plt+0x1bc00>  // b.any
  41e944:	add	x0, sp, #0xe
  41e948:	sub	x0, x0, x11
  41e94c:	add	x9, x9, x0
  41e950:	ldr	x0, [x4]
  41e954:	sub	x6, x0, x6
  41e958:	str	x6, [x4]
  41e95c:	str	x9, [x3]
  41e960:	mov	w0, #0xffff                	// #65535
  41e964:	cmp	w5, w0
  41e968:	b.hi	41e990 <ferror@plt+0x1bc60>  // b.pmore
  41e96c:	ldr	x0, [x1]
  41e970:	add	x0, x0, #0x2
  41e974:	str	x0, [x1]
  41e978:	ldr	x0, [x2]
  41e97c:	sub	x0, x0, #0x2
  41e980:	str	x0, [x2]
  41e984:	mov	w0, #0x0                   	// #0
  41e988:	add	sp, sp, #0x10
  41e98c:	ret
  41e990:	ldr	x0, [x1]
  41e994:	add	x0, x0, #0x4
  41e998:	str	x0, [x1]
  41e99c:	ldr	x0, [x2]
  41e9a0:	sub	x0, x0, #0x4
  41e9a4:	str	x0, [x2]
  41e9a8:	mov	w0, #0x0                   	// #0
  41e9ac:	b	41e988 <ferror@plt+0x1bc58>
  41e9b0:	mov	w0, #0x16                  	// #22
  41e9b4:	ret
  41e9b8:	mov	w0, #0x7                   	// #7
  41e9bc:	b	41e988 <ferror@plt+0x1bc58>
  41e9c0:	ldrb	w5, [x7, #3]
  41e9c4:	lsl	w0, w5, #8
  41e9c8:	mov	x5, #0x2                   	// #2
  41e9cc:	b	41e850 <ferror@plt+0x1bb20>
  41e9d0:	ret
  41e9d4:	cmp	w1, #0x3f
  41e9d8:	b.eq	41ea7c <ferror@plt+0x1bd4c>  // b.none
  41e9dc:	b.hi	41ea34 <ferror@plt+0x1bd04>  // b.pmore
  41e9e0:	cmp	w1, #0x3b
  41e9e4:	b.eq	41ea64 <ferror@plt+0x1bd34>  // b.none
  41e9e8:	b.ls	41ea0c <ferror@plt+0x1bcdc>  // b.plast
  41e9ec:	cmp	w1, #0x3c
  41e9f0:	b.ne	41ea4c <ferror@plt+0x1bd1c>  // b.any
  41e9f4:	add	x0, x0, #0x220
  41e9f8:	ldp	x2, x3, [x0]
  41e9fc:	stp	x2, x3, [x8]
  41ea00:	ldr	x0, [x0, #16]
  41ea04:	str	x0, [x8, #16]
  41ea08:	b	41ea60 <ferror@plt+0x1bd30>
  41ea0c:	cmp	w1, #0x39
  41ea10:	b.eq	41ea7c <ferror@plt+0x1bd4c>  // b.none
  41ea14:	cmp	w1, #0x3a
  41ea18:	b.ne	41ea4c <ferror@plt+0x1bd1c>  // b.any
  41ea1c:	add	x0, x0, #0x238
  41ea20:	ldp	x2, x3, [x0]
  41ea24:	stp	x2, x3, [x8]
  41ea28:	ldr	x0, [x0, #16]
  41ea2c:	str	x0, [x8, #16]
  41ea30:	b	41ea60 <ferror@plt+0x1bd30>
  41ea34:	cmp	w1, #0x41
  41ea38:	b.eq	41ea64 <ferror@plt+0x1bd34>  // b.none
  41ea3c:	cmp	w1, #0x42
  41ea40:	b.eq	41e9f4 <ferror@plt+0x1bcc4>  // b.none
  41ea44:	cmp	w1, #0x40
  41ea48:	b.eq	41ea1c <ferror@plt+0x1bcec>  // b.none
  41ea4c:	add	x0, x0, #0x208
  41ea50:	ldp	x2, x3, [x0]
  41ea54:	stp	x2, x3, [x8]
  41ea58:	ldr	x0, [x0, #16]
  41ea5c:	str	x0, [x8, #16]
  41ea60:	ret
  41ea64:	add	x0, x0, #0x250
  41ea68:	ldp	x2, x3, [x0]
  41ea6c:	stp	x2, x3, [x8]
  41ea70:	ldr	x0, [x0, #16]
  41ea74:	str	x0, [x8, #16]
  41ea78:	b	41ea60 <ferror@plt+0x1bd30>
  41ea7c:	add	x0, x0, #0x268
  41ea80:	ldp	x2, x3, [x0]
  41ea84:	stp	x2, x3, [x8]
  41ea88:	ldr	x0, [x0, #16]
  41ea8c:	str	x0, [x8, #16]
  41ea90:	b	41ea60 <ferror@plt+0x1bd30>
  41ea94:	mov	w0, #0x1                   	// #1
  41ea98:	ret
  41ea9c:	stp	x29, x30, [sp, #-80]!
  41eaa0:	mov	x29, sp
  41eaa4:	stp	x19, x20, [sp, #16]
  41eaa8:	stp	x21, x22, [sp, #32]
  41eaac:	stp	x23, x24, [sp, #48]
  41eab0:	str	x25, [sp, #64]
  41eab4:	mov	x20, x8
  41eab8:	mov	x25, x0
  41eabc:	mov	x23, x1
  41eac0:	mov	x22, x2
  41eac4:	mov	x1, x2
  41eac8:	mov	x0, x23
  41eacc:	bl	4028c0 <strcasecmp@plt>
  41ead0:	cbnz	w0, 41eb08 <ferror@plt+0x1bdd8>
  41ead4:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41ead8:	add	x0, x0, #0xfe0
  41eadc:	str	x0, [x20]
  41eae0:	mov	x0, #0xffffffffffffffff    	// #-1
  41eae4:	str	x0, [x20, #8]
  41eae8:	str	w0, [x20, #16]
  41eaec:	mov	sp, x29
  41eaf0:	ldp	x19, x20, [sp, #16]
  41eaf4:	ldp	x21, x22, [sp, #32]
  41eaf8:	ldp	x23, x24, [sp, #48]
  41eafc:	ldr	x25, [sp, #64]
  41eb00:	ldp	x29, x30, [sp], #80
  41eb04:	ret
  41eb08:	mov	x0, x23
  41eb0c:	bl	402680 <strlen@plt>
  41eb10:	mov	x19, x0
  41eb14:	mov	x0, x22
  41eb18:	bl	402680 <strlen@plt>
  41eb1c:	add	x19, x19, x0
  41eb20:	add	x19, x19, #0x11
  41eb24:	and	x19, x19, #0xfffffffffffffff0
  41eb28:	sub	sp, sp, x19
  41eb2c:	mov	x24, sp
  41eb30:	mov	x1, x22
  41eb34:	mov	x0, x24
  41eb38:	bl	402b30 <strcpy@plt>
  41eb3c:	mov	x0, x24
  41eb40:	bl	402680 <strlen@plt>
  41eb44:	mov	w1, #0x2f                  	// #47
  41eb48:	strh	w1, [x24, x0]
  41eb4c:	mov	x1, x23
  41eb50:	mov	x0, x24
  41eb54:	bl	402880 <strcat@plt>
  41eb58:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41eb5c:	add	x19, x19, #0xa8
  41eb60:	add	x19, x19, #0x20
  41eb64:	mov	x21, #0x0                   	// #0
  41eb68:	ldr	x1, [x19]
  41eb6c:	mov	x0, x24
  41eb70:	bl	4028c0 <strcasecmp@plt>
  41eb74:	cbz	w0, 41ebe8 <ferror@plt+0x1beb8>
  41eb78:	add	x21, x21, #0x1
  41eb7c:	add	x19, x19, #0x18
  41eb80:	cmp	x21, #0x8
  41eb84:	b.ne	41eb68 <ferror@plt+0x1be38>  // b.any
  41eb88:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41eb8c:	add	x0, x0, #0xc44
  41eb90:	str	x0, [x20]
  41eb94:	mov	x1, x22
  41eb98:	mov	x0, x23
  41eb9c:	bl	402b40 <iconv_open@plt>
  41eba0:	str	x0, [x20, #8]
  41eba4:	mov	w1, #0xffffffff            	// #-1
  41eba8:	str	w1, [x20, #16]
  41ebac:	cmn	x0, #0x1
  41ebb0:	b.ne	41eaec <ferror@plt+0x1bdbc>  // b.any
  41ebb4:	bl	402c40 <__errno_location@plt>
  41ebb8:	ldr	w0, [x0]
  41ebbc:	cmp	w0, #0x16
  41ebc0:	b.eq	41ec24 <ferror@plt+0x1bef4>  // b.none
  41ebc4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ebc8:	add	x2, x2, #0x9a8
  41ebcc:	mov	w1, #0x3                   	// #3
  41ebd0:	mov	x0, x25
  41ebd4:	bl	426f1c <ferror@plt+0x241ec>
  41ebd8:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41ebdc:	add	x0, x0, #0xfe0
  41ebe0:	str	x0, [x20]
  41ebe4:	b	41eaec <ferror@plt+0x1bdbc>
  41ebe8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41ebec:	add	x0, x0, #0xa8
  41ebf0:	add	x1, x0, #0x20
  41ebf4:	lsl	x0, x21, #1
  41ebf8:	add	x2, x0, x21
  41ebfc:	add	x2, x1, x2, lsl #3
  41ec00:	ldr	x2, [x2, #8]
  41ec04:	str	x2, [x20]
  41ec08:	add	x0, x0, x21
  41ec0c:	add	x0, x1, x0, lsl #3
  41ec10:	ldr	x0, [x0, #16]
  41ec14:	str	x0, [x20, #8]
  41ec18:	mov	w0, #0xffffffff            	// #-1
  41ec1c:	str	w0, [x20, #16]
  41ec20:	b	41eaec <ferror@plt+0x1bdbc>
  41ec24:	mov	x4, x23
  41ec28:	mov	x3, x22
  41ec2c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41ec30:	add	x2, x2, #0x978
  41ec34:	mov	w1, #0x3                   	// #3
  41ec38:	mov	x0, x25
  41ec3c:	bl	426a10 <ferror@plt+0x23ce0>
  41ec40:	b	41ebd8 <ferror@plt+0x1bea8>
  41ec44:	stp	x29, x30, [sp, #-80]!
  41ec48:	mov	x29, sp
  41ec4c:	stp	x19, x20, [sp, #16]
  41ec50:	stp	x21, x22, [sp, #32]
  41ec54:	mov	x20, x0
  41ec58:	mov	x22, x1
  41ec5c:	mov	x21, x2
  41ec60:	mov	x19, x3
  41ec64:	mov	x4, #0x0                   	// #0
  41ec68:	mov	x3, #0x0                   	// #0
  41ec6c:	mov	x2, #0x0                   	// #0
  41ec70:	mov	x1, #0x0                   	// #0
  41ec74:	bl	402a30 <iconv@plt>
  41ec78:	cmn	x0, #0x1
  41ec7c:	b.eq	41edc8 <ferror@plt+0x1c098>  // b.none
  41ec80:	str	x22, [sp, #72]
  41ec84:	str	x21, [sp, #56]
  41ec88:	ldr	x2, [x19, #16]
  41ec8c:	ldr	x1, [x19]
  41ec90:	add	x1, x1, x2
  41ec94:	str	x1, [sp, #64]
  41ec98:	ldr	x0, [x19, #8]
  41ec9c:	sub	x0, x0, x2
  41eca0:	str	x0, [sp, #48]
  41eca4:	add	x4, sp, #0x30
  41eca8:	add	x3, sp, #0x40
  41ecac:	add	x2, sp, #0x38
  41ecb0:	add	x1, sp, #0x48
  41ecb4:	mov	x0, x20
  41ecb8:	bl	402a30 <iconv@plt>
  41ecbc:	ldr	x0, [sp, #56]
  41ecc0:	cbnz	x0, 41ed7c <ferror@plt+0x1c04c>
  41ecc4:	add	x4, sp, #0x30
  41ecc8:	add	x3, sp, #0x40
  41eccc:	mov	x2, #0x0                   	// #0
  41ecd0:	mov	x1, #0x0                   	// #0
  41ecd4:	mov	x0, x20
  41ecd8:	bl	402a30 <iconv@plt>
  41ecdc:	cmn	x0, #0x1
  41ece0:	b.ne	41ed58 <ferror@plt+0x1c028>  // b.any
  41ece4:	bl	402c40 <__errno_location@plt>
  41ece8:	ldr	w1, [x0]
  41ecec:	mov	w0, #0x0                   	// #0
  41ecf0:	cmp	w1, #0x7
  41ecf4:	b.ne	41ed6c <ferror@plt+0x1c03c>  // b.any
  41ecf8:	ldr	x0, [sp, #48]
  41ecfc:	add	x0, x0, #0x100
  41ed00:	str	x0, [sp, #48]
  41ed04:	ldr	x1, [x19, #8]
  41ed08:	add	x1, x1, #0x100
  41ed0c:	str	x1, [x19, #8]
  41ed10:	ldr	x0, [x19]
  41ed14:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41ed18:	str	x0, [x19]
  41ed1c:	ldr	x1, [x19, #8]
  41ed20:	ldr	x2, [sp, #48]
  41ed24:	sub	x1, x1, x2
  41ed28:	add	x0, x0, x1
  41ed2c:	str	x0, [sp, #64]
  41ed30:	add	x4, sp, #0x30
  41ed34:	add	x3, sp, #0x40
  41ed38:	mov	x2, #0x0                   	// #0
  41ed3c:	mov	x1, #0x0                   	// #0
  41ed40:	mov	x0, x20
  41ed44:	bl	402a30 <iconv@plt>
  41ed48:	mov	x1, x0
  41ed4c:	mov	w0, #0x0                   	// #0
  41ed50:	cmn	x1, #0x1
  41ed54:	b.eq	41ed6c <ferror@plt+0x1c03c>  // b.none
  41ed58:	ldr	x0, [x19, #8]
  41ed5c:	ldr	x1, [sp, #48]
  41ed60:	sub	x0, x0, x1
  41ed64:	str	x0, [x19, #16]
  41ed68:	mov	w0, #0x1                   	// #1
  41ed6c:	ldp	x19, x20, [sp, #16]
  41ed70:	ldp	x21, x22, [sp, #32]
  41ed74:	ldp	x29, x30, [sp], #80
  41ed78:	ret
  41ed7c:	bl	402c40 <__errno_location@plt>
  41ed80:	ldr	w0, [x0]
  41ed84:	cmp	w0, #0x7
  41ed88:	b.ne	41edd0 <ferror@plt+0x1c0a0>  // b.any
  41ed8c:	ldr	x0, [sp, #48]
  41ed90:	add	x0, x0, #0x100
  41ed94:	str	x0, [sp, #48]
  41ed98:	ldr	x1, [x19, #8]
  41ed9c:	add	x1, x1, #0x100
  41eda0:	str	x1, [x19, #8]
  41eda4:	ldr	x0, [x19]
  41eda8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41edac:	str	x0, [x19]
  41edb0:	ldr	x1, [x19, #8]
  41edb4:	ldr	x2, [sp, #48]
  41edb8:	sub	x1, x1, x2
  41edbc:	add	x0, x0, x1
  41edc0:	str	x0, [sp, #64]
  41edc4:	b	41eca4 <ferror@plt+0x1bf74>
  41edc8:	mov	w0, #0x0                   	// #0
  41edcc:	b	41ed6c <ferror@plt+0x1c03c>
  41edd0:	mov	w0, #0x0                   	// #0
  41edd4:	b	41ed6c <ferror@plt+0x1c03c>
  41edd8:	stp	x29, x30, [sp, #-80]!
  41eddc:	mov	x29, sp
  41ede0:	stp	x19, x20, [sp, #16]
  41ede4:	str	x21, [sp, #32]
  41ede8:	mov	x21, x0
  41edec:	mov	x19, x3
  41edf0:	str	x1, [sp, #48]
  41edf4:	str	x2, [sp, #64]
  41edf8:	ldr	x0, [x3, #16]
  41edfc:	ldr	x2, [x3]
  41ee00:	add	x2, x2, x0
  41ee04:	str	x2, [sp, #56]
  41ee08:	ldr	x1, [x3, #8]
  41ee0c:	sub	x1, x1, x0
  41ee10:	str	x1, [sp, #72]
  41ee14:	add	x4, sp, #0x48
  41ee18:	add	x3, sp, #0x38
  41ee1c:	add	x2, sp, #0x40
  41ee20:	add	x1, sp, #0x30
  41ee24:	mov	x0, x21
  41ee28:	bl	41f4a8 <ferror@plt+0x1c778>
  41ee2c:	mov	w20, w0
  41ee30:	ldr	x2, [sp, #64]
  41ee34:	cmp	w0, #0x0
  41ee38:	cset	w1, ne  // ne = any
  41ee3c:	cmp	x2, #0x0
  41ee40:	csinc	w0, w1, wzr, ne  // ne = any
  41ee44:	cbz	w0, 41ee14 <ferror@plt+0x1c0e4>
  41ee48:	cbnz	x2, 41ee6c <ferror@plt+0x1c13c>
  41ee4c:	ldr	x1, [x19, #8]
  41ee50:	ldr	x2, [sp, #72]
  41ee54:	sub	x1, x1, x2
  41ee58:	str	x1, [x19, #16]
  41ee5c:	ldp	x19, x20, [sp, #16]
  41ee60:	ldr	x21, [sp, #32]
  41ee64:	ldp	x29, x30, [sp], #80
  41ee68:	ret
  41ee6c:	cmp	w20, #0x7
  41ee70:	b.ne	41eeb0 <ferror@plt+0x1c180>  // b.any
  41ee74:	ldr	x0, [sp, #72]
  41ee78:	add	x0, x0, #0x100
  41ee7c:	str	x0, [sp, #72]
  41ee80:	ldr	x1, [x19, #8]
  41ee84:	add	x1, x1, #0x100
  41ee88:	str	x1, [x19, #8]
  41ee8c:	ldr	x0, [x19]
  41ee90:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41ee94:	str	x0, [x19]
  41ee98:	ldr	x1, [x19, #8]
  41ee9c:	ldr	x2, [sp, #72]
  41eea0:	sub	x1, x1, x2
  41eea4:	add	x0, x0, x1
  41eea8:	str	x0, [sp, #56]
  41eeac:	b	41ee14 <ferror@plt+0x1c0e4>
  41eeb0:	bl	402c40 <__errno_location@plt>
  41eeb4:	str	w20, [x0]
  41eeb8:	mov	w0, #0x0                   	// #0
  41eebc:	b	41ee5c <ferror@plt+0x1c12c>
  41eec0:	stp	x29, x30, [sp, #-80]!
  41eec4:	mov	x29, sp
  41eec8:	stp	x19, x20, [sp, #16]
  41eecc:	stp	x21, x22, [sp, #32]
  41eed0:	stp	x25, x26, [sp, #64]
  41eed4:	mov	w19, w1
  41eed8:	mov	x20, x2
  41eedc:	ldrsw	x26, [x3, #16]
  41eee0:	ldr	x21, [x0, #1216]
  41eee4:	cmp	x21, x26
  41eee8:	b.eq	41ef9c <ferror@plt+0x1c26c>  // b.none
  41eeec:	stp	x23, x24, [sp, #48]
  41eef0:	ldrb	w25, [x0, #1242]
  41eef4:	cmp	x21, #0x20
  41eef8:	mov	x22, #0x20                  	// #32
  41eefc:	csel	x0, x21, x22, ls  // ls = plast
  41ef00:	mov	x22, #0x1                   	// #1
  41ef04:	lsl	x22, x22, x0
  41ef08:	sub	x22, x22, #0x1
  41ef0c:	udiv	x23, x26, x21
  41ef10:	ldr	x24, [x2, #16]
  41ef14:	ldr	x1, [x2, #8]
  41ef18:	add	x0, x23, x24
  41ef1c:	cmp	x0, x1
  41ef20:	b.hi	41ef84 <ferror@plt+0x1c254>  // b.pmore
  41ef24:	cmp	x21, x26
  41ef28:	b.hi	41ef60 <ferror@plt+0x1c230>  // b.pmore
  41ef2c:	mov	x0, #0x0                   	// #0
  41ef30:	sub	x4, x23, #0x1
  41ef34:	and	w2, w19, w22
  41ef38:	lsr	w19, w19, w21
  41ef3c:	ldr	x3, [x20]
  41ef40:	sub	x1, x4, x0
  41ef44:	cmp	w25, #0x0
  41ef48:	csel	x1, x1, x0, ne  // ne = any
  41ef4c:	add	x3, x3, x1
  41ef50:	strb	w2, [x3, x24]
  41ef54:	add	x0, x0, #0x1
  41ef58:	cmp	x23, x0
  41ef5c:	b.hi	41ef34 <ferror@plt+0x1c204>  // b.pmore
  41ef60:	ldr	x0, [x20, #16]
  41ef64:	add	x23, x0, x23
  41ef68:	str	x23, [x20, #16]
  41ef6c:	ldp	x23, x24, [sp, #48]
  41ef70:	ldp	x19, x20, [sp, #16]
  41ef74:	ldp	x21, x22, [sp, #32]
  41ef78:	ldp	x25, x26, [sp, #64]
  41ef7c:	ldp	x29, x30, [sp], #80
  41ef80:	ret
  41ef84:	add	x1, x1, #0x100
  41ef88:	str	x1, [x2, #8]
  41ef8c:	ldr	x0, [x2]
  41ef90:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41ef94:	str	x0, [x20]
  41ef98:	b	41ef24 <ferror@plt+0x1c1f4>
  41ef9c:	ldr	x1, [x2, #8]
  41efa0:	ldr	x0, [x2, #16]
  41efa4:	add	x0, x0, #0x1
  41efa8:	cmp	x0, x1
  41efac:	b.hi	41efc8 <ferror@plt+0x1c298>  // b.pmore
  41efb0:	ldr	x1, [x20]
  41efb4:	ldr	x0, [x20, #16]
  41efb8:	add	x2, x0, #0x1
  41efbc:	str	x2, [x20, #16]
  41efc0:	strb	w19, [x1, x0]
  41efc4:	b	41ef70 <ferror@plt+0x1c240>
  41efc8:	add	x1, x1, #0x100
  41efcc:	str	x1, [x2, #8]
  41efd0:	ldr	x0, [x2]
  41efd4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41efd8:	str	x0, [x20]
  41efdc:	b	41efb0 <ferror@plt+0x1c280>
  41efe0:	stp	x29, x30, [sp, #-48]!
  41efe4:	mov	x29, sp
  41efe8:	stp	x19, x20, [sp, #16]
  41efec:	str	x21, [sp, #32]
  41eff0:	mov	x21, x1
  41eff4:	mov	x20, x2
  41eff8:	mov	x19, x3
  41effc:	ldr	x0, [x3, #16]
  41f000:	add	x0, x2, x0
  41f004:	ldr	x1, [x3, #8]
  41f008:	cmp	x0, x1
  41f00c:	b.hi	41f048 <ferror@plt+0x1c318>  // b.pmore
  41f010:	ldr	x3, [x19]
  41f014:	ldr	x0, [x19, #16]
  41f018:	mov	x2, x20
  41f01c:	mov	x1, x21
  41f020:	add	x0, x3, x0
  41f024:	bl	402620 <memcpy@plt>
  41f028:	ldr	x2, [x19, #16]
  41f02c:	add	x20, x2, x20
  41f030:	str	x20, [x19, #16]
  41f034:	mov	w0, #0x1                   	// #1
  41f038:	ldp	x19, x20, [sp, #16]
  41f03c:	ldr	x21, [sp, #32]
  41f040:	ldp	x29, x30, [sp], #48
  41f044:	ret
  41f048:	add	x1, x0, x0, lsr #2
  41f04c:	str	x1, [x3, #8]
  41f050:	ldr	x0, [x3]
  41f054:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41f058:	str	x0, [x19]
  41f05c:	b	41f010 <ferror@plt+0x1c2e0>
  41f060:	stp	x29, x30, [sp, #-80]!
  41f064:	mov	x29, sp
  41f068:	stp	x19, x20, [sp, #16]
  41f06c:	str	x21, [sp, #32]
  41f070:	mov	x21, x0
  41f074:	mov	x19, x3
  41f078:	str	x1, [sp, #48]
  41f07c:	str	x2, [sp, #64]
  41f080:	ldr	x0, [x3, #16]
  41f084:	ldr	x2, [x3]
  41f088:	add	x2, x2, x0
  41f08c:	str	x2, [sp, #56]
  41f090:	ldr	x1, [x3, #8]
  41f094:	sub	x1, x1, x0
  41f098:	str	x1, [sp, #72]
  41f09c:	add	x4, sp, #0x48
  41f0a0:	add	x3, sp, #0x38
  41f0a4:	add	x2, sp, #0x40
  41f0a8:	add	x1, sp, #0x30
  41f0ac:	mov	x0, x21
  41f0b0:	bl	41f318 <ferror@plt+0x1c5e8>
  41f0b4:	mov	w20, w0
  41f0b8:	ldr	x2, [sp, #64]
  41f0bc:	cmp	w0, #0x0
  41f0c0:	cset	w1, ne  // ne = any
  41f0c4:	cmp	x2, #0x0
  41f0c8:	csinc	w0, w1, wzr, ne  // ne = any
  41f0cc:	cbz	w0, 41f09c <ferror@plt+0x1c36c>
  41f0d0:	cbnz	x2, 41f0f4 <ferror@plt+0x1c3c4>
  41f0d4:	ldr	x1, [x19, #8]
  41f0d8:	ldr	x2, [sp, #72]
  41f0dc:	sub	x1, x1, x2
  41f0e0:	str	x1, [x19, #16]
  41f0e4:	ldp	x19, x20, [sp, #16]
  41f0e8:	ldr	x21, [sp, #32]
  41f0ec:	ldp	x29, x30, [sp], #80
  41f0f0:	ret
  41f0f4:	cmp	w20, #0x7
  41f0f8:	b.ne	41f138 <ferror@plt+0x1c408>  // b.any
  41f0fc:	ldr	x0, [sp, #72]
  41f100:	add	x0, x0, #0x100
  41f104:	str	x0, [sp, #72]
  41f108:	ldr	x1, [x19, #8]
  41f10c:	add	x1, x1, #0x100
  41f110:	str	x1, [x19, #8]
  41f114:	ldr	x0, [x19]
  41f118:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41f11c:	str	x0, [x19]
  41f120:	ldr	x1, [x19, #8]
  41f124:	ldr	x2, [sp, #72]
  41f128:	sub	x1, x1, x2
  41f12c:	add	x0, x0, x1
  41f130:	str	x0, [sp, #56]
  41f134:	b	41f09c <ferror@plt+0x1c36c>
  41f138:	bl	402c40 <__errno_location@plt>
  41f13c:	str	w20, [x0]
  41f140:	mov	w0, #0x0                   	// #0
  41f144:	b	41f0e4 <ferror@plt+0x1c3b4>
  41f148:	stp	x29, x30, [sp, #-80]!
  41f14c:	mov	x29, sp
  41f150:	stp	x19, x20, [sp, #16]
  41f154:	str	x21, [sp, #32]
  41f158:	mov	x21, x0
  41f15c:	mov	x19, x3
  41f160:	str	x1, [sp, #48]
  41f164:	str	x2, [sp, #64]
  41f168:	ldr	x0, [x3, #16]
  41f16c:	ldr	x2, [x3]
  41f170:	add	x2, x2, x0
  41f174:	str	x2, [sp, #56]
  41f178:	ldr	x1, [x3, #8]
  41f17c:	sub	x1, x1, x0
  41f180:	str	x1, [sp, #72]
  41f184:	add	x4, sp, #0x48
  41f188:	add	x3, sp, #0x38
  41f18c:	add	x2, sp, #0x40
  41f190:	add	x1, sp, #0x30
  41f194:	mov	x0, x21
  41f198:	bl	41e61c <ferror@plt+0x1b8ec>
  41f19c:	mov	w20, w0
  41f1a0:	ldr	x2, [sp, #64]
  41f1a4:	cmp	w0, #0x0
  41f1a8:	cset	w1, ne  // ne = any
  41f1ac:	cmp	x2, #0x0
  41f1b0:	csinc	w0, w1, wzr, ne  // ne = any
  41f1b4:	cbz	w0, 41f184 <ferror@plt+0x1c454>
  41f1b8:	cbnz	x2, 41f1dc <ferror@plt+0x1c4ac>
  41f1bc:	ldr	x1, [x19, #8]
  41f1c0:	ldr	x2, [sp, #72]
  41f1c4:	sub	x1, x1, x2
  41f1c8:	str	x1, [x19, #16]
  41f1cc:	ldp	x19, x20, [sp, #16]
  41f1d0:	ldr	x21, [sp, #32]
  41f1d4:	ldp	x29, x30, [sp], #80
  41f1d8:	ret
  41f1dc:	cmp	w20, #0x7
  41f1e0:	b.ne	41f220 <ferror@plt+0x1c4f0>  // b.any
  41f1e4:	ldr	x0, [sp, #72]
  41f1e8:	add	x0, x0, #0x100
  41f1ec:	str	x0, [sp, #72]
  41f1f0:	ldr	x1, [x19, #8]
  41f1f4:	add	x1, x1, #0x100
  41f1f8:	str	x1, [x19, #8]
  41f1fc:	ldr	x0, [x19]
  41f200:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41f204:	str	x0, [x19]
  41f208:	ldr	x1, [x19, #8]
  41f20c:	ldr	x2, [sp, #72]
  41f210:	sub	x1, x1, x2
  41f214:	add	x0, x0, x1
  41f218:	str	x0, [sp, #56]
  41f21c:	b	41f184 <ferror@plt+0x1c454>
  41f220:	bl	402c40 <__errno_location@plt>
  41f224:	str	w20, [x0]
  41f228:	mov	w0, #0x0                   	// #0
  41f22c:	b	41f1cc <ferror@plt+0x1c49c>
  41f230:	stp	x29, x30, [sp, #-80]!
  41f234:	mov	x29, sp
  41f238:	stp	x19, x20, [sp, #16]
  41f23c:	str	x21, [sp, #32]
  41f240:	mov	x21, x0
  41f244:	mov	x19, x3
  41f248:	str	x1, [sp, #48]
  41f24c:	str	x2, [sp, #64]
  41f250:	ldr	x0, [x3, #16]
  41f254:	ldr	x2, [x3]
  41f258:	add	x2, x2, x0
  41f25c:	str	x2, [sp, #56]
  41f260:	ldr	x1, [x3, #8]
  41f264:	sub	x1, x1, x0
  41f268:	str	x1, [sp, #72]
  41f26c:	add	x4, sp, #0x48
  41f270:	add	x3, sp, #0x38
  41f274:	add	x2, sp, #0x40
  41f278:	add	x1, sp, #0x30
  41f27c:	mov	x0, x21
  41f280:	bl	41e7e0 <ferror@plt+0x1bab0>
  41f284:	mov	w20, w0
  41f288:	ldr	x2, [sp, #64]
  41f28c:	cmp	w0, #0x0
  41f290:	cset	w1, ne  // ne = any
  41f294:	cmp	x2, #0x0
  41f298:	csinc	w0, w1, wzr, ne  // ne = any
  41f29c:	cbz	w0, 41f26c <ferror@plt+0x1c53c>
  41f2a0:	cbnz	x2, 41f2c4 <ferror@plt+0x1c594>
  41f2a4:	ldr	x1, [x19, #8]
  41f2a8:	ldr	x2, [sp, #72]
  41f2ac:	sub	x1, x1, x2
  41f2b0:	str	x1, [x19, #16]
  41f2b4:	ldp	x19, x20, [sp, #16]
  41f2b8:	ldr	x21, [sp, #32]
  41f2bc:	ldp	x29, x30, [sp], #80
  41f2c0:	ret
  41f2c4:	cmp	w20, #0x7
  41f2c8:	b.ne	41f308 <ferror@plt+0x1c5d8>  // b.any
  41f2cc:	ldr	x0, [sp, #72]
  41f2d0:	add	x0, x0, #0x100
  41f2d4:	str	x0, [sp, #72]
  41f2d8:	ldr	x1, [x19, #8]
  41f2dc:	add	x1, x1, #0x100
  41f2e0:	str	x1, [x19, #8]
  41f2e4:	ldr	x0, [x19]
  41f2e8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41f2ec:	str	x0, [x19]
  41f2f0:	ldr	x1, [x19, #8]
  41f2f4:	ldr	x2, [sp, #72]
  41f2f8:	sub	x1, x1, x2
  41f2fc:	add	x0, x0, x1
  41f300:	str	x0, [sp, #56]
  41f304:	b	41f26c <ferror@plt+0x1c53c>
  41f308:	bl	402c40 <__errno_location@plt>
  41f30c:	str	w20, [x0]
  41f310:	mov	w0, #0x0                   	// #0
  41f314:	b	41f2b4 <ferror@plt+0x1c584>
  41f318:	ldr	x5, [x2]
  41f31c:	cmp	x5, #0x3
  41f320:	b.ls	41f474 <ferror@plt+0x1c744>  // b.plast
  41f324:	ldr	x6, [x1]
  41f328:	cbz	x0, 41f484 <ferror@plt+0x1c754>
  41f32c:	ldrb	w0, [x6]
  41f330:	ldrb	w5, [x6, #1]
  41f334:	lsl	w5, w5, #16
  41f338:	add	w0, w5, w0, lsl #24
  41f33c:	ldrb	w5, [x6, #2]
  41f340:	add	w0, w0, w5, lsl #8
  41f344:	mov	x5, #0x3                   	// #3
  41f348:	ldrb	w5, [x6, x5]
  41f34c:	add	w5, w5, w0
  41f350:	sub	w0, w5, #0xd, lsl #12
  41f354:	sub	w0, w0, #0x800
  41f358:	cmp	w0, #0x7ff
  41f35c:	mov	w0, #0x54                  	// #84
  41f360:	mov	w6, #0x7ffffffe            	// #2147483646
  41f364:	ccmp	w5, w6, #0x2, hi  // hi = pmore
  41f368:	b.hi	41f4a4 <ferror@plt+0x1c774>  // b.pmore
  41f36c:	sub	sp, sp, #0x10
  41f370:	ldr	x8, [x3]
  41f374:	cmp	w5, #0x7f
  41f378:	b.hi	41f3f4 <ferror@plt+0x1c6c4>  // b.pmore
  41f37c:	strb	w5, [sp, #13]
  41f380:	ldr	x0, [x4]
  41f384:	cbz	x0, 41f47c <ferror@plt+0x1c74c>
  41f388:	add	x7, sp, #0xd
  41f38c:	mov	x6, #0x1                   	// #1
  41f390:	mov	x10, x7
  41f394:	add	x5, sp, #0xe
  41f398:	sub	x5, x5, x7
  41f39c:	mov	x0, #0x0                   	// #0
  41f3a0:	ldrb	w9, [x7, x0]
  41f3a4:	strb	w9, [x8, x0]
  41f3a8:	add	x0, x0, #0x1
  41f3ac:	cmp	x5, x0
  41f3b0:	b.ne	41f3a0 <ferror@plt+0x1c670>  // b.any
  41f3b4:	add	x0, sp, #0xe
  41f3b8:	sub	x0, x0, x10
  41f3bc:	add	x8, x8, x0
  41f3c0:	ldr	x0, [x4]
  41f3c4:	sub	x6, x0, x6
  41f3c8:	str	x6, [x4]
  41f3cc:	str	x8, [x3]
  41f3d0:	ldr	x0, [x1]
  41f3d4:	add	x0, x0, #0x4
  41f3d8:	str	x0, [x1]
  41f3dc:	ldr	x0, [x2]
  41f3e0:	sub	x0, x0, #0x4
  41f3e4:	str	x0, [x2]
  41f3e8:	mov	w0, #0x0                   	// #0
  41f3ec:	add	sp, sp, #0x10
  41f3f0:	ret
  41f3f4:	add	x7, sp, #0xe
  41f3f8:	mov	x6, #0x1                   	// #1
  41f3fc:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41f400:	add	x9, x9, #0xa8
  41f404:	add	x9, x9, #0x10
  41f408:	mov	x10, x7
  41f40c:	and	w0, w5, #0x3f
  41f410:	orr	w0, w0, #0xffffff80
  41f414:	strb	w0, [x7, #-1]!
  41f418:	lsr	w5, w5, #6
  41f41c:	mov	x11, x6
  41f420:	add	x6, x6, #0x1
  41f424:	cmp	w5, #0x3e
  41f428:	b.hi	41f408 <ferror@plt+0x1c6d8>  // b.pmore
  41f42c:	add	x0, x9, x6
  41f430:	ldurb	w0, [x0, #-1]
  41f434:	tst	w0, w5
  41f438:	b.ne	41f408 <ferror@plt+0x1c6d8>  // b.any
  41f43c:	sub	x7, x10, #0x2
  41f440:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41f444:	add	x0, x0, #0xa8
  41f448:	add	x0, x0, #0x18
  41f44c:	ldrb	w0, [x0, x11]
  41f450:	orr	w5, w5, w0
  41f454:	sturb	w5, [x10, #-2]
  41f458:	ldr	x0, [x4]
  41f45c:	cmp	x6, x0
  41f460:	b.hi	41f47c <ferror@plt+0x1c74c>  // b.pmore
  41f464:	add	x0, sp, #0xe
  41f468:	cmp	x7, x0
  41f46c:	b.cc	41f390 <ferror@plt+0x1c660>  // b.lo, b.ul, b.last
  41f470:	b	41f3c0 <ferror@plt+0x1c690>
  41f474:	mov	w0, #0x16                  	// #22
  41f478:	ret
  41f47c:	mov	w0, #0x7                   	// #7
  41f480:	b	41f3ec <ferror@plt+0x1c6bc>
  41f484:	ldrb	w0, [x6, #3]
  41f488:	ldrb	w5, [x6, #2]
  41f48c:	lsl	w5, w5, #16
  41f490:	add	w0, w5, w0, lsl #24
  41f494:	ldrb	w5, [x6, #1]
  41f498:	add	w0, w0, w5, lsl #8
  41f49c:	mov	x5, #0x0                   	// #0
  41f4a0:	b	41f348 <ferror@plt+0x1c618>
  41f4a4:	ret
  41f4a8:	mov	x12, x0
  41f4ac:	ldr	x8, [x2]
  41f4b0:	mov	w0, #0x16                  	// #22
  41f4b4:	cbz	x8, 41f50c <ferror@plt+0x1c7dc>
  41f4b8:	ldr	x11, [x1]
  41f4bc:	ldr	x14, [x3]
  41f4c0:	ldrb	w9, [x11]
  41f4c4:	mov	w6, w9
  41f4c8:	mov	x5, #0x2                   	// #2
  41f4cc:	cmp	w9, #0x7f
  41f4d0:	b.ls	41f510 <ferror@plt+0x1c7e0>  // b.plast
  41f4d4:	adrp	x7, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41f4d8:	add	x7, x7, #0xa8
  41f4dc:	add	x15, x7, #0x8
  41f4e0:	add	x0, x7, x5
  41f4e4:	ldurb	w10, [x0, #-1]
  41f4e8:	bic	w13, w6, w10
  41f4ec:	add	x0, x15, x5
  41f4f0:	ldurb	w0, [x0, #-1]
  41f4f4:	cmp	w13, w0
  41f4f8:	b.eq	41f568 <ferror@plt+0x1c838>  // b.none
  41f4fc:	add	x5, x5, #0x1
  41f500:	cmp	x5, #0x7
  41f504:	b.ne	41f4e0 <ferror@plt+0x1c7b0>  // b.any
  41f508:	mov	w0, #0x54                  	// #84
  41f50c:	ret
  41f510:	sub	x0, x8, #0x1
  41f514:	str	x0, [x2]
  41f518:	ldr	x0, [x1]
  41f51c:	add	x0, x0, #0x1
  41f520:	str	x0, [x1]
  41f524:	ldr	x0, [x4]
  41f528:	cmp	x0, #0x1
  41f52c:	b.ls	41f6c8 <ferror@plt+0x1c998>  // b.plast
  41f530:	cmp	x12, #0x0
  41f534:	cset	w0, ne  // ne = any
  41f538:	strb	w6, [x14, w0, uxtw]
  41f53c:	cset	w0, eq  // eq = none
  41f540:	lsr	w6, w6, #8
  41f544:	strb	w6, [x14, w0, uxtw]
  41f548:	ldr	x0, [x3]
  41f54c:	add	x0, x0, #0x2
  41f550:	str	x0, [x3]
  41f554:	ldr	x0, [x4]
  41f558:	sub	x0, x0, #0x2
  41f55c:	str	x0, [x4]
  41f560:	mov	w0, #0x0                   	// #0
  41f564:	b	41f50c <ferror@plt+0x1c7dc>
  41f568:	mov	w0, #0x16                  	// #22
  41f56c:	cmp	x8, x5
  41f570:	b.cc	41f50c <ferror@plt+0x1c7dc>  // b.lo, b.ul, b.last
  41f574:	and	w6, w9, w10
  41f578:	add	x9, x11, #0x1
  41f57c:	cmp	x5, #0x1
  41f580:	b.ls	41f6b0 <ferror@plt+0x1c980>  // b.plast
  41f584:	add	x10, x11, x5
  41f588:	ldrb	w7, [x9], #1
  41f58c:	and	w0, w7, #0xc0
  41f590:	cmp	w0, #0x80
  41f594:	b.ne	41f6f8 <ferror@plt+0x1c9c8>  // b.any
  41f598:	and	w7, w7, #0x3f
  41f59c:	add	w6, w7, w6, lsl #6
  41f5a0:	cmp	x9, x10
  41f5a4:	b.ne	41f588 <ferror@plt+0x1c858>  // b.any
  41f5a8:	mov	w0, #0x54                  	// #84
  41f5ac:	cmp	w6, #0x7f
  41f5b0:	b.ls	41f50c <ferror@plt+0x1c7dc>  // b.plast
  41f5b4:	cmp	w6, #0x7ff
  41f5b8:	mov	w0, #0x54                  	// #84
  41f5bc:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  41f5c0:	b.hi	41f50c <ferror@plt+0x1c7dc>  // b.pmore
  41f5c4:	mov	w0, #0xffff                	// #65535
  41f5c8:	cmp	w6, w0
  41f5cc:	mov	w0, #0x54                  	// #84
  41f5d0:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  41f5d4:	b.hi	41f50c <ferror@plt+0x1c7dc>  // b.pmore
  41f5d8:	mov	w0, #0x1fffff              	// #2097151
  41f5dc:	cmp	w6, w0
  41f5e0:	mov	w0, #0x54                  	// #84
  41f5e4:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  41f5e8:	b.hi	41f50c <ferror@plt+0x1c7dc>  // b.pmore
  41f5ec:	mov	w0, #0x3ffffff             	// #67108863
  41f5f0:	cmp	w6, w0
  41f5f4:	mov	w0, #0x54                  	// #84
  41f5f8:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  41f5fc:	b.hi	41f50c <ferror@plt+0x1c7dc>  // b.pmore
  41f600:	sub	w0, w6, #0xd, lsl #12
  41f604:	sub	w0, w0, #0x800
  41f608:	cmp	w0, #0x7ff
  41f60c:	mov	w0, #0x54                  	// #84
  41f610:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  41f614:	b.lt	41f50c <ferror@plt+0x1c7dc>  // b.tstop
  41f618:	str	x10, [x1]
  41f61c:	ldr	x0, [x2]
  41f620:	sub	x5, x0, x5
  41f624:	str	x5, [x2]
  41f628:	mov	w0, #0x10ffff              	// #1114111
  41f62c:	cmp	w6, w0
  41f630:	b.hi	41f6b8 <ferror@plt+0x1c988>  // b.pmore
  41f634:	mov	w0, #0xffff                	// #65535
  41f638:	cmp	w6, w0
  41f63c:	b.ls	41f524 <ferror@plt+0x1c7f4>  // b.plast
  41f640:	ldr	x0, [x4]
  41f644:	cmp	x0, #0x3
  41f648:	b.ls	41f6d8 <ferror@plt+0x1c9a8>  // b.plast
  41f64c:	sub	w0, w6, #0x10, lsl #12
  41f650:	mov	w1, #0xd800                	// #55296
  41f654:	add	w0, w1, w0, lsr #10
  41f658:	and	w6, w6, #0x3ff
  41f65c:	add	w6, w6, #0xd, lsl #12
  41f660:	add	w6, w6, #0xc00
  41f664:	cmp	x12, #0x0
  41f668:	cset	w1, ne  // ne = any
  41f66c:	strb	w0, [x14, w1, uxtw]
  41f670:	cset	w1, eq  // eq = none
  41f674:	lsr	w0, w0, #8
  41f678:	strb	w0, [x14, w1, uxtw]
  41f67c:	cbz	x12, 41f6e8 <ferror@plt+0x1c9b8>
  41f680:	strb	w6, [x14, #3]
  41f684:	lsr	w6, w6, #8
  41f688:	mov	x0, #0x2                   	// #2
  41f68c:	strb	w6, [x14, x0]
  41f690:	ldr	x0, [x3]
  41f694:	add	x0, x0, #0x4
  41f698:	str	x0, [x3]
  41f69c:	ldr	x0, [x4]
  41f6a0:	sub	x0, x0, #0x4
  41f6a4:	str	x0, [x4]
  41f6a8:	mov	w0, #0x0                   	// #0
  41f6ac:	b	41f50c <ferror@plt+0x1c7dc>
  41f6b0:	mov	x10, x9
  41f6b4:	b	41f5b4 <ferror@plt+0x1c884>
  41f6b8:	str	x11, [x1]
  41f6bc:	str	x8, [x2]
  41f6c0:	mov	w0, #0x54                  	// #84
  41f6c4:	b	41f50c <ferror@plt+0x1c7dc>
  41f6c8:	str	x11, [x1]
  41f6cc:	str	x8, [x2]
  41f6d0:	mov	w0, #0x7                   	// #7
  41f6d4:	b	41f50c <ferror@plt+0x1c7dc>
  41f6d8:	str	x11, [x1]
  41f6dc:	str	x8, [x2]
  41f6e0:	mov	w0, #0x7                   	// #7
  41f6e4:	b	41f50c <ferror@plt+0x1c7dc>
  41f6e8:	strb	w6, [x14, #2]
  41f6ec:	lsr	w6, w6, #8
  41f6f0:	mov	x0, #0x3                   	// #3
  41f6f4:	b	41f68c <ferror@plt+0x1c95c>
  41f6f8:	mov	w0, #0x54                  	// #84
  41f6fc:	b	41f50c <ferror@plt+0x1c7dc>
  41f700:	stp	x29, x30, [sp, #-96]!
  41f704:	mov	x29, sp
  41f708:	stp	x19, x20, [sp, #16]
  41f70c:	stp	x21, x22, [sp, #32]
  41f710:	str	x23, [sp, #48]
  41f714:	mov	x19, x0
  41f718:	ldr	x1, [x0, #1168]
  41f71c:	ldr	x21, [x0, #1176]
  41f720:	ldrb	w22, [x0, #1242]
  41f724:	ldr	x0, [x0, #1232]
  41f728:	cmp	x0, #0x1f
  41f72c:	b.ls	41f878 <ferror@plt+0x1cb48>  // b.plast
  41f730:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f734:	add	x2, x0, #0x9d8
  41f738:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f73c:	add	x0, x0, #0x9c8
  41f740:	cmp	w22, #0x0
  41f744:	csel	x0, x0, x2, ne  // ne = any
  41f748:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41f74c:	add	x2, x2, #0xd88
  41f750:	cmp	x1, #0x0
  41f754:	csel	x1, x2, x1, eq  // eq = none
  41f758:	cmp	x21, #0x0
  41f75c:	csel	x21, x21, x0, ne  // ne = any
  41f760:	add	x23, x19, #0x208
  41f764:	mov	x20, x2
  41f768:	add	x8, sp, #0x40
  41f76c:	mov	x0, x19
  41f770:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f774:	ldp	x2, x3, [sp, #64]
  41f778:	stp	x2, x3, [x23]
  41f77c:	ldr	x1, [sp, #80]
  41f780:	str	x1, [x23, #16]
  41f784:	ldr	x0, [x19, #1216]
  41f788:	str	w0, [x19, #536]
  41f78c:	add	x23, x19, #0x220
  41f790:	add	x8, sp, #0x40
  41f794:	mov	x2, x20
  41f798:	mov	x1, x20
  41f79c:	mov	x0, x19
  41f7a0:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f7a4:	ldp	x2, x3, [sp, #64]
  41f7a8:	stp	x2, x3, [x23]
  41f7ac:	ldr	x1, [sp, #80]
  41f7b0:	str	x1, [x23, #16]
  41f7b4:	ldr	x0, [x19, #1216]
  41f7b8:	str	w0, [x19, #560]
  41f7bc:	cbnz	w22, 41f8a8 <ferror@plt+0x1cb78>
  41f7c0:	add	x20, x19, #0x238
  41f7c4:	add	x8, sp, #0x40
  41f7c8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41f7cc:	add	x2, x2, #0xd88
  41f7d0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f7d4:	add	x1, x1, #0x9e8
  41f7d8:	mov	x0, x19
  41f7dc:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f7e0:	ldp	x2, x3, [sp, #64]
  41f7e4:	stp	x2, x3, [x20]
  41f7e8:	ldr	x1, [sp, #80]
  41f7ec:	str	x1, [x20, #16]
  41f7f0:	mov	w0, #0x10                  	// #16
  41f7f4:	str	w0, [x19, #584]
  41f7f8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f7fc:	add	x1, x1, #0x9d8
  41f800:	add	x22, x19, #0x250
  41f804:	adrp	x20, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41f808:	add	x20, x20, #0xd88
  41f80c:	add	x8, sp, #0x40
  41f810:	mov	x2, x20
  41f814:	mov	x0, x19
  41f818:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f81c:	ldp	x0, x1, [sp, #64]
  41f820:	stp	x0, x1, [x22]
  41f824:	ldr	x0, [sp, #80]
  41f828:	str	x0, [x19, #608]
  41f82c:	mov	w0, #0x20                  	// #32
  41f830:	str	w0, [x19, #608]
  41f834:	add	x22, x19, #0x268
  41f838:	add	x8, sp, #0x40
  41f83c:	mov	x2, x20
  41f840:	mov	x1, x21
  41f844:	mov	x0, x19
  41f848:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f84c:	ldp	x0, x1, [sp, #64]
  41f850:	stp	x0, x1, [x22]
  41f854:	ldr	x0, [sp, #80]
  41f858:	str	x0, [x19, #632]
  41f85c:	ldr	x0, [x19, #1232]
  41f860:	str	w0, [x19, #632]
  41f864:	ldp	x19, x20, [sp, #16]
  41f868:	ldp	x21, x22, [sp, #32]
  41f86c:	ldr	x23, [sp, #48]
  41f870:	ldp	x29, x30, [sp], #96
  41f874:	ret
  41f878:	cmp	x0, #0xf
  41f87c:	b.ls	41f89c <ferror@plt+0x1cb6c>  // b.plast
  41f880:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f884:	add	x2, x0, #0x9e8
  41f888:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f88c:	add	x0, x0, #0x9b8
  41f890:	cmp	w22, #0x0
  41f894:	csel	x0, x0, x2, ne  // ne = any
  41f898:	b	41f748 <ferror@plt+0x1ca18>
  41f89c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41f8a0:	add	x0, x0, #0xd88
  41f8a4:	b	41f748 <ferror@plt+0x1ca18>
  41f8a8:	add	x20, x19, #0x238
  41f8ac:	add	x8, sp, #0x40
  41f8b0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41f8b4:	add	x2, x2, #0xd88
  41f8b8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f8bc:	add	x1, x1, #0x9b8
  41f8c0:	mov	x0, x19
  41f8c4:	bl	41ea9c <ferror@plt+0x1bd6c>
  41f8c8:	ldp	x2, x3, [sp, #64]
  41f8cc:	stp	x2, x3, [x20]
  41f8d0:	ldr	x1, [sp, #80]
  41f8d4:	str	x1, [x20, #16]
  41f8d8:	mov	w0, #0x10                  	// #16
  41f8dc:	str	w0, [x19, #584]
  41f8e0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41f8e4:	add	x1, x1, #0x9c8
  41f8e8:	b	41f800 <ferror@plt+0x1cad0>
  41f8ec:	stp	x29, x30, [sp, #-32]!
  41f8f0:	mov	x29, sp
  41f8f4:	str	x19, [sp, #16]
  41f8f8:	mov	x19, x0
  41f8fc:	ldr	x1, [x0, #520]
  41f900:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41f904:	add	x0, x0, #0xc44
  41f908:	cmp	x1, x0
  41f90c:	b.eq	41f96c <ferror@plt+0x1cc3c>  // b.none
  41f910:	ldr	x1, [x19, #544]
  41f914:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41f918:	add	x0, x0, #0xc44
  41f91c:	cmp	x1, x0
  41f920:	b.eq	41f978 <ferror@plt+0x1cc48>  // b.none
  41f924:	ldr	x1, [x19, #568]
  41f928:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41f92c:	add	x0, x0, #0xc44
  41f930:	cmp	x1, x0
  41f934:	b.eq	41f984 <ferror@plt+0x1cc54>  // b.none
  41f938:	ldr	x1, [x19, #592]
  41f93c:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41f940:	add	x0, x0, #0xc44
  41f944:	cmp	x1, x0
  41f948:	b.eq	41f990 <ferror@plt+0x1cc60>  // b.none
  41f94c:	ldr	x1, [x19, #616]
  41f950:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41f954:	add	x0, x0, #0xc44
  41f958:	cmp	x1, x0
  41f95c:	b.eq	41f99c <ferror@plt+0x1cc6c>  // b.none
  41f960:	ldr	x19, [sp, #16]
  41f964:	ldp	x29, x30, [sp], #32
  41f968:	ret
  41f96c:	ldr	x0, [x19, #528]
  41f970:	bl	4026e0 <iconv_close@plt>
  41f974:	b	41f910 <ferror@plt+0x1cbe0>
  41f978:	ldr	x0, [x19, #552]
  41f97c:	bl	4026e0 <iconv_close@plt>
  41f980:	b	41f924 <ferror@plt+0x1cbf4>
  41f984:	ldr	x0, [x19, #576]
  41f988:	bl	4026e0 <iconv_close@plt>
  41f98c:	b	41f938 <ferror@plt+0x1cc08>
  41f990:	ldr	x0, [x19, #600]
  41f994:	bl	4026e0 <iconv_close@plt>
  41f998:	b	41f94c <ferror@plt+0x1cc1c>
  41f99c:	ldr	x0, [x19, #624]
  41f9a0:	bl	4026e0 <iconv_close@plt>
  41f9a4:	b	41f960 <ferror@plt+0x1cc30>
  41f9a8:	stp	x29, x30, [sp, #-80]!
  41f9ac:	mov	x29, sp
  41f9b0:	stp	x19, x20, [sp, #16]
  41f9b4:	mov	x20, x0
  41f9b8:	mov	w19, w1
  41f9bc:	cmp	w1, #0x7e
  41f9c0:	b.hi	41fa34 <ferror@plt+0x1cd04>  // b.pmore
  41f9c4:	str	x21, [sp, #32]
  41f9c8:	strb	w1, [sp, #72]
  41f9cc:	mov	x21, #0x1                   	// #1
  41f9d0:	str	x21, [sp, #56]
  41f9d4:	mov	x0, x21
  41f9d8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41f9dc:	str	x0, [sp, #48]
  41f9e0:	str	xzr, [sp, #64]
  41f9e4:	ldr	x4, [x20, #520]
  41f9e8:	add	x3, sp, #0x30
  41f9ec:	mov	x2, x21
  41f9f0:	add	x1, sp, #0x48
  41f9f4:	ldr	x0, [x20, #528]
  41f9f8:	blr	x4
  41f9fc:	and	w0, w0, #0xff
  41fa00:	cbz	w0, 41fa5c <ferror@plt+0x1cd2c>
  41fa04:	ldr	x0, [sp, #64]
  41fa08:	cmp	x0, #0x1
  41fa0c:	b.eq	41fa7c <ferror@plt+0x1cd4c>  // b.none
  41fa10:	mov	w3, w19
  41fa14:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41fa18:	add	x2, x2, #0xa60
  41fa1c:	mov	w1, #0x4                   	// #4
  41fa20:	mov	x0, x20
  41fa24:	bl	426a10 <ferror@plt+0x23ce0>
  41fa28:	mov	w19, #0x0                   	// #0
  41fa2c:	ldr	x21, [sp, #32]
  41fa30:	b	41fa4c <ferror@plt+0x1cd1c>
  41fa34:	mov	w3, w1
  41fa38:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41fa3c:	add	x2, x2, #0x9f8
  41fa40:	mov	w1, #0x4                   	// #4
  41fa44:	bl	426a10 <ferror@plt+0x23ce0>
  41fa48:	mov	w19, #0x0                   	// #0
  41fa4c:	mov	w0, w19
  41fa50:	ldp	x19, x20, [sp, #16]
  41fa54:	ldp	x29, x30, [sp], #80
  41fa58:	ret
  41fa5c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41fa60:	add	x2, x2, #0xa38
  41fa64:	mov	w1, #0x4                   	// #4
  41fa68:	mov	x0, x20
  41fa6c:	bl	426f1c <ferror@plt+0x241ec>
  41fa70:	mov	w19, #0x0                   	// #0
  41fa74:	ldr	x21, [sp, #32]
  41fa78:	b	41fa4c <ferror@plt+0x1cd1c>
  41fa7c:	ldr	x0, [sp, #48]
  41fa80:	ldrb	w19, [x0]
  41fa84:	bl	402a90 <free@plt>
  41fa88:	ldr	x21, [sp, #32]
  41fa8c:	b	41fa4c <ferror@plt+0x1cd1c>
  41fa90:	stp	x29, x30, [sp, #-32]!
  41fa94:	mov	x29, sp
  41fa98:	str	x19, [sp, #16]
  41fa9c:	mov	x19, x0
  41faa0:	str	xzr, [x0]
  41faa4:	str	wzr, [x0, #8]
  41faa8:	mov	w0, #0x8                   	// #8
  41faac:	str	w0, [x19, #12]
  41fab0:	mov	x0, #0x40                  	// #64
  41fab4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41fab8:	str	x0, [x19]
  41fabc:	ldr	x19, [sp, #16]
  41fac0:	ldp	x29, x30, [sp], #32
  41fac4:	ret
  41fac8:	stp	x29, x30, [sp, #-16]!
  41facc:	mov	x29, sp
  41fad0:	ldr	x0, [x0]
  41fad4:	bl	402a90 <free@plt>
  41fad8:	ldp	x29, x30, [sp], #16
  41fadc:	ret
  41fae0:	stp	x29, x30, [sp, #-32]!
  41fae4:	mov	x29, sp
  41fae8:	stp	x19, x20, [sp, #16]
  41faec:	mov	x19, x0
  41faf0:	mov	x20, x1
  41faf4:	ldr	w1, [x0, #12]
  41faf8:	ldr	w0, [x0, #8]
  41fafc:	cmp	w0, w1
  41fb00:	b.ge	41fb24 <ferror@plt+0x1cdf4>  // b.tcont
  41fb04:	ldr	x1, [x19]
  41fb08:	ldr	w0, [x19, #8]
  41fb0c:	add	w2, w0, #0x1
  41fb10:	str	w2, [x19, #8]
  41fb14:	str	x20, [x1, w0, sxtw #3]
  41fb18:	ldp	x19, x20, [sp, #16]
  41fb1c:	ldp	x29, x30, [sp], #32
  41fb20:	ret
  41fb24:	lsl	w1, w1, #1
  41fb28:	str	w1, [x19, #12]
  41fb2c:	sbfiz	x1, x1, #3, #32
  41fb30:	ldr	x0, [x19]
  41fb34:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41fb38:	str	x0, [x19]
  41fb3c:	b	41fb04 <ferror@plt+0x1cdd4>
  41fb40:	stp	x29, x30, [sp, #-64]!
  41fb44:	mov	x29, sp
  41fb48:	stp	x19, x20, [sp, #16]
  41fb4c:	str	x21, [sp, #32]
  41fb50:	mov	x21, x0
  41fb54:	add	x0, x2, #0x10
  41fb58:	and	x0, x0, #0xfffffffffffffff0
  41fb5c:	sub	sp, sp, x0
  41fb60:	mov	x20, sp
  41fb64:	cbz	x2, 41fcf0 <ferror@plt+0x1cfc0>
  41fb68:	mov	x19, x20
  41fb6c:	mov	x3, #0x0                   	// #0
  41fb70:	mov	w13, #0x4                   	// #4
  41fb74:	mov	w12, #0x8                   	// #8
  41fb78:	add	x0, x29, #0x38
  41fb7c:	add	x11, x29, #0x3e
  41fb80:	add	x15, x0, #0x5
  41fb84:	adrp	x7, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  41fb88:	add	x7, x7, #0x28
  41fb8c:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x29c60>
  41fb90:	add	x8, x8, #0xc78
  41fb94:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x1fc60>
  41fb98:	add	x9, x9, #0xa8
  41fb9c:	add	x10, x9, #0x10
  41fba0:	add	x9, x9, #0x18
  41fba4:	mov	w14, #0x24                  	// #36
  41fba8:	b	41fcd4 <ferror@plt+0x1cfa4>
  41fbac:	add	x4, x3, #0x1
  41fbb0:	ldrb	w0, [x1, x4]
  41fbb4:	cmp	w0, #0x75
  41fbb8:	csel	w6, w13, w12, eq  // eq = none
  41fbbc:	add	x0, x3, #0x2
  41fbc0:	cmp	x2, x0
  41fbc4:	b.ls	41fc84 <ferror@plt+0x1cf54>  // b.plast
  41fbc8:	mov	x3, x0
  41fbcc:	mov	w4, #0x0                   	// #0
  41fbd0:	add	w6, w6, w0
  41fbd4:	ldrb	w5, [x1, x3]
  41fbd8:	ldrh	w0, [x7, w5, sxtw #1]
  41fbdc:	tbz	w0, #8, 41fbf8 <ferror@plt+0x1cec8>
  41fbe0:	ldrb	w0, [x8, w5, sxtw]
  41fbe4:	add	w4, w0, w4, lsl #4
  41fbe8:	add	x3, x3, #0x1
  41fbec:	cmp	w6, w3
  41fbf0:	ccmp	x2, x3, #0x0, ne  // ne = any
  41fbf4:	b.hi	41fbd4 <ferror@plt+0x1cea4>  // b.pmore
  41fbf8:	sub	x3, x3, #0x1
  41fbfc:	cmp	w4, #0x24
  41fc00:	b.eq	41fc74 <ferror@plt+0x1cf44>  // b.none
  41fc04:	add	x6, x29, #0x3e
  41fc08:	mov	x5, #0x1                   	// #1
  41fc0c:	cmp	w4, #0x7f
  41fc10:	b.ls	41fc8c <ferror@plt+0x1cf5c>  // b.plast
  41fc14:	mov	x16, x6
  41fc18:	and	w0, w4, #0x3f
  41fc1c:	orr	w0, w0, #0xffffff80
  41fc20:	strb	w0, [x6, #-1]!
  41fc24:	lsr	w4, w4, #6
  41fc28:	mov	x0, x5
  41fc2c:	add	x5, x5, #0x1
  41fc30:	cmp	w4, #0x3e
  41fc34:	b.hi	41fc14 <ferror@plt+0x1cee4>  // b.pmore
  41fc38:	add	x17, x10, x5
  41fc3c:	ldurb	w17, [x17, #-1]
  41fc40:	tst	w17, w4
  41fc44:	b.ne	41fc14 <ferror@plt+0x1cee4>  // b.any
  41fc48:	sub	x6, x16, #0x2
  41fc4c:	ldrb	w0, [x9, x0]
  41fc50:	orr	w4, w4, w0
  41fc54:	sturb	w4, [x16, #-2]
  41fc58:	sub	x0, x19, x20
  41fc5c:	sub	x0, x2, x0
  41fc60:	cmp	x0, x5
  41fc64:	b.cc	41fcf8 <ferror@plt+0x1cfc8>  // b.lo, b.ul, b.last
  41fc68:	cmp	x6, x11
  41fc6c:	b.cc	41fca0 <ferror@plt+0x1cf70>  // b.lo, b.ul, b.last
  41fc70:	b	41fcc8 <ferror@plt+0x1cf98>
  41fc74:	mov	x4, x19
  41fc78:	strb	w14, [x4], #1
  41fc7c:	mov	x19, x4
  41fc80:	b	41fcc8 <ferror@plt+0x1cf98>
  41fc84:	mov	x3, x4
  41fc88:	mov	w4, #0x0                   	// #0
  41fc8c:	strb	w4, [x29, #61]
  41fc90:	sub	x0, x19, x20
  41fc94:	cmp	x2, x0
  41fc98:	b.eq	41fcf8 <ferror@plt+0x1cfc8>  // b.none
  41fc9c:	mov	x6, x15
  41fca0:	mov	x16, x6
  41fca4:	sub	x5, x11, x6
  41fca8:	mov	x4, #0x0                   	// #0
  41fcac:	ldrb	w0, [x6, x4]
  41fcb0:	strb	w0, [x19, x4]
  41fcb4:	add	x4, x4, #0x1
  41fcb8:	cmp	x4, x5
  41fcbc:	b.ne	41fcac <ferror@plt+0x1cf7c>  // b.any
  41fcc0:	sub	x0, x11, x16
  41fcc4:	add	x19, x19, x0
  41fcc8:	add	x3, x3, #0x1
  41fccc:	cmp	x2, x3
  41fcd0:	b.ls	41fd18 <ferror@plt+0x1cfe8>  // b.plast
  41fcd4:	ldrb	w0, [x1, x3]
  41fcd8:	cmp	w0, #0x5c
  41fcdc:	b.eq	41fbac <ferror@plt+0x1ce7c>  // b.none
  41fce0:	mov	x4, x19
  41fce4:	strb	w0, [x4], #1
  41fce8:	mov	x19, x4
  41fcec:	b	41fcc8 <ferror@plt+0x1cf98>
  41fcf0:	mov	x19, x20
  41fcf4:	b	41fd18 <ferror@plt+0x1cfe8>
  41fcf8:	bl	402c40 <__errno_location@plt>
  41fcfc:	mov	w1, #0x7                   	// #7
  41fd00:	str	w1, [x0]
  41fd04:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41fd08:	add	x2, x2, #0xaa0
  41fd0c:	mov	w1, #0x3                   	// #3
  41fd10:	mov	x0, x21
  41fd14:	bl	426f1c <ferror@plt+0x241ec>
  41fd18:	mov	w3, #0x1                   	// #1
  41fd1c:	sub	x2, x19, x20
  41fd20:	mov	x1, x20
  41fd24:	ldr	x0, [x21, #1088]
  41fd28:	bl	439dcc <ferror@plt+0x3709c>
  41fd2c:	mov	sp, x29
  41fd30:	ldp	x19, x20, [sp, #16]
  41fd34:	ldr	x21, [sp, #32]
  41fd38:	ldp	x29, x30, [sp], #64
  41fd3c:	ret
  41fd40:	stp	x29, x30, [sp, #-128]!
  41fd44:	mov	x29, sp
  41fd48:	stp	x19, x20, [sp, #16]
  41fd4c:	stp	x21, x22, [sp, #32]
  41fd50:	stp	x23, x24, [sp, #48]
  41fd54:	str	x25, [sp, #64]
  41fd58:	mov	x24, x0
  41fd5c:	mov	x20, x2
  41fd60:	mov	x23, x3
  41fd64:	mov	x19, x4
  41fd68:	mov	x22, x5
  41fd6c:	mov	x21, x6
  41fd70:	add	x8, sp, #0x68
  41fd74:	mov	x2, x1
  41fd78:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41fd7c:	add	x1, x1, #0xd88
  41fd80:	bl	41ea9c <ferror@plt+0x1bd6c>
  41fd84:	ldr	x25, [sp, #104]
  41fd88:	adrp	x1, 41e000 <ferror@plt+0x1b2d0>
  41fd8c:	add	x1, x1, #0xfe0
  41fd90:	cmp	x25, x1
  41fd94:	b.eq	41fdf8 <ferror@plt+0x1d0c8>  // b.none
  41fd98:	ldr	x23, [sp, #112]
  41fd9c:	cmp	x19, #0x10, lsl #12
  41fda0:	mov	x0, #0x10000               	// #65536
  41fda4:	csel	x0, x19, x0, cs  // cs = hs, nlast
  41fda8:	str	x0, [sp, #88]
  41fdac:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  41fdb0:	str	x0, [sp, #80]
  41fdb4:	str	xzr, [sp, #96]
  41fdb8:	add	x3, sp, #0x50
  41fdbc:	mov	x2, x19
  41fdc0:	mov	x1, x20
  41fdc4:	mov	x0, x23
  41fdc8:	blr	x25
  41fdcc:	and	w0, w0, #0xff
  41fdd0:	cbz	w0, 41feac <ferror@plt+0x1d17c>
  41fdd4:	mov	x0, x20
  41fdd8:	bl	402a90 <free@plt>
  41fddc:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  41fde0:	add	x0, x0, #0xc44
  41fde4:	cmp	x25, x0
  41fde8:	b.ne	41fe04 <ferror@plt+0x1d0d4>  // b.any
  41fdec:	mov	x0, x23
  41fdf0:	bl	4026e0 <iconv_close@plt>
  41fdf4:	b	41fe04 <ferror@plt+0x1d0d4>
  41fdf8:	str	x20, [sp, #80]
  41fdfc:	str	x23, [sp, #88]
  41fe00:	str	x19, [sp, #96]
  41fe04:	ldr	x1, [sp, #96]
  41fe08:	ldr	x0, [sp, #88]
  41fe0c:	add	x2, x1, #0x1, lsl #12
  41fe10:	cmp	x2, x0
  41fe14:	b.cc	41fe24 <ferror@plt+0x1d0f4>  // b.lo, b.ul, b.last
  41fe18:	add	x2, x1, #0x10
  41fe1c:	cmp	x0, x2
  41fe20:	b.cs	41fe34 <ferror@plt+0x1d104>  // b.hs, b.nlast
  41fe24:	add	x1, x1, #0x10
  41fe28:	ldr	x0, [sp, #80]
  41fe2c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  41fe30:	str	x0, [sp, #80]
  41fe34:	ldr	x0, [sp, #80]
  41fe38:	ldr	x1, [sp, #96]
  41fe3c:	add	x0, x0, x1
  41fe40:	stp	xzr, xzr, [x0]
  41fe44:	ldr	x0, [sp, #96]
  41fe48:	cbz	x0, 41fe60 <ferror@plt+0x1d130>
  41fe4c:	ldr	x1, [sp, #80]
  41fe50:	add	x2, x1, x0
  41fe54:	ldurb	w2, [x2, #-1]
  41fe58:	cmp	w2, #0xd
  41fe5c:	b.eq	41fed0 <ferror@plt+0x1d1a0>  // b.none
  41fe60:	ldr	x1, [sp, #80]
  41fe64:	mov	w2, #0xa                   	// #10
  41fe68:	strb	w2, [x1, x0]
  41fe6c:	ldr	x1, [sp, #80]
  41fe70:	ldr	x2, [sp, #96]
  41fe74:	str	x2, [x21]
  41fe78:	mov	x0, x1
  41fe7c:	cmp	x2, #0x2
  41fe80:	b.ls	41fe90 <ferror@plt+0x1d160>  // b.plast
  41fe84:	ldrb	w3, [x1]
  41fe88:	cmp	w3, #0xef
  41fe8c:	b.eq	41fed8 <ferror@plt+0x1d1a8>  // b.none
  41fe90:	str	x1, [x22]
  41fe94:	ldp	x19, x20, [sp, #16]
  41fe98:	ldp	x21, x22, [sp, #32]
  41fe9c:	ldp	x23, x24, [sp, #48]
  41fea0:	ldr	x25, [sp, #64]
  41fea4:	ldp	x29, x30, [sp], #128
  41fea8:	ret
  41feac:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41feb0:	add	x4, x4, #0xd88
  41feb4:	ldr	x3, [x24, #1184]
  41feb8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  41febc:	add	x2, x2, #0xac8
  41fec0:	mov	w1, #0x3                   	// #3
  41fec4:	mov	x0, x24
  41fec8:	bl	426a10 <ferror@plt+0x23ce0>
  41fecc:	b	41fdd4 <ferror@plt+0x1d0a4>
  41fed0:	strb	w2, [x1, x0]
  41fed4:	b	41fe6c <ferror@plt+0x1d13c>
  41fed8:	ldrb	w3, [x1, #1]
  41fedc:	cmp	w3, #0xbb
  41fee0:	b.ne	41fe90 <ferror@plt+0x1d160>  // b.any
  41fee4:	ldrb	w3, [x1, #2]
  41fee8:	cmp	w3, #0xbf
  41feec:	b.ne	41fe90 <ferror@plt+0x1d160>  // b.any
  41fef0:	sub	x2, x2, #0x3
  41fef4:	str	x2, [x21]
  41fef8:	add	x0, x1, #0x3
  41fefc:	b	41fe90 <ferror@plt+0x1d160>
  41ff00:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  41ff04:	add	x0, x0, #0xd88
  41ff08:	ret
  41ff0c:	stp	x29, x30, [sp, #-32]!
  41ff10:	mov	x29, sp
  41ff14:	stp	x19, x20, [sp, #16]
  41ff18:	mov	x20, x0
  41ff1c:	mov	x19, x2
  41ff20:	str	x2, [x0, #8]
  41ff24:	mov	x0, x2
  41ff28:	bl	432f78 <ferror@plt+0x30248>
  41ff2c:	mov	x3, #0x0                   	// #0
  41ff30:	mov	w2, #0x1                   	// #1
  41ff34:	mov	w1, w0
  41ff38:	mov	x0, x19
  41ff3c:	bl	4332f0 <ferror@plt+0x305c0>
  41ff40:	mov	w1, w0
  41ff44:	str	w0, [x20]
  41ff48:	mov	x0, x19
  41ff4c:	bl	432bf0 <ferror@plt+0x2fec0>
  41ff50:	ldrb	w1, [x0, #7]
  41ff54:	mov	w0, #0x1                   	// #1
  41ff58:	lsl	w0, w0, w1
  41ff5c:	str	w0, [x20, #4]
  41ff60:	ldp	x19, x20, [sp, #16]
  41ff64:	ldp	x29, x30, [sp], #32
  41ff68:	ret
  41ff6c:	mov	x1, x0
  41ff70:	ldr	w0, [x0]
  41ff74:	mov	w2, #0x60000000            	// #1610612736
  41ff78:	cmp	w0, w2
  41ff7c:	b.hi	41ff8c <ferror@plt+0x1d25c>  // b.pmore
  41ff80:	ldr	w2, [x1, #4]
  41ff84:	add	w2, w2, w0
  41ff88:	str	w2, [x1]
  41ff8c:	bfi	x0, x0, #32, #32
  41ff90:	ret
  41ff94:	cmp	w1, #0x0
  41ff98:	b.le	41ffec <ferror@plt+0x1d2bc>
  41ff9c:	stp	x29, x30, [sp, #-48]!
  41ffa0:	mov	x29, sp
  41ffa4:	stp	x19, x20, [sp, #16]
  41ffa8:	stp	x21, x22, [sp, #32]
  41ffac:	mov	x21, x0
  41ffb0:	mov	w20, w1
  41ffb4:	mov	x22, x2
  41ffb8:	mov	w19, #0x0                   	// #0
  41ffbc:	mov	x0, x22
  41ffc0:	bl	41ff6c <ferror@plt+0x1d23c>
  41ffc4:	mov	x1, x0
  41ffc8:	mov	x0, x21
  41ffcc:	bl	41fae0 <ferror@plt+0x1cdb0>
  41ffd0:	add	w19, w19, #0x1
  41ffd4:	cmp	w20, w19
  41ffd8:	b.ne	41ffbc <ferror@plt+0x1d28c>  // b.any
  41ffdc:	ldp	x19, x20, [sp, #16]
  41ffe0:	ldp	x21, x22, [sp, #32]
  41ffe4:	ldp	x29, x30, [sp], #48
  41ffe8:	ret
  41ffec:	ret
  41fff0:	stp	x29, x30, [sp, #-144]!
  41fff4:	mov	x29, sp
  41fff8:	stp	x19, x20, [sp, #16]
  41fffc:	stp	x21, x22, [sp, #32]
  420000:	stp	x23, x24, [sp, #48]
  420004:	stp	x25, x26, [sp, #64]
  420008:	stp	x27, x28, [sp, #80]
  42000c:	mov	x28, x0
  420010:	str	x1, [sp, #128]
  420014:	mov	x27, x2
  420018:	str	w3, [sp, #116]
  42001c:	str	x4, [sp, #136]
  420020:	str	x5, [sp, #120]
  420024:	mov	x24, x6
  420028:	mov	x23, x7
  42002c:	ldr	x0, [x1]
  420030:	str	x0, [sp, #104]
  420034:	ldrb	w0, [x28, #1120]
  420038:	cbnz	w0, 420050 <ferror@plt+0x1d320>
  42003c:	ldrb	w0, [x28, #1152]
  420040:	cbz	w0, 4200a0 <ferror@plt+0x1d370>
  420044:	ldrsb	w0, [x28, #1198]
  420048:	cmp	w0, #0x0
  42004c:	b.gt	4200b8 <ferror@plt+0x1d388>
  420050:	ldrb	w0, [x28, #1138]
  420054:	cmp	w0, #0x0
  420058:	ldr	w0, [sp, #116]
  42005c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  420060:	b.eq	4200d0 <ferror@plt+0x1d3a0>  // b.none
  420064:	ldr	x0, [sp, #104]
  420068:	ldurb	w0, [x0, #-1]
  42006c:	mov	w21, #0x4                   	// #4
  420070:	cmp	w0, #0x75
  420074:	b.eq	420084 <ferror@plt+0x1d354>  // b.none
  420078:	mov	w21, #0x8                   	// #8
  42007c:	cmp	w0, #0x55
  420080:	b.ne	4200f0 <ferror@plt+0x1d3c0>  // b.any
  420084:	ldr	x19, [sp, #104]
  420088:	mov	w20, #0x0                   	// #0
  42008c:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  420090:	add	x25, x25, #0x28
  420094:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x29c60>
  420098:	add	x26, x26, #0xc78
  42009c:	b	420138 <ferror@plt+0x1d408>
  4200a0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4200a4:	add	x2, x2, #0xae8
  4200a8:	mov	w1, #0x0                   	// #0
  4200ac:	mov	x0, x28
  4200b0:	bl	426a10 <ferror@plt+0x23ce0>
  4200b4:	b	420064 <ferror@plt+0x1d334>
  4200b8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4200bc:	add	x2, x2, #0xb20
  4200c0:	mov	w1, #0x0                   	// #0
  4200c4:	mov	x0, x28
  4200c8:	bl	426a10 <ferror@plt+0x23ce0>
  4200cc:	b	420064 <ferror@plt+0x1d334>
  4200d0:	ldr	x0, [sp, #104]
  4200d4:	ldurb	w3, [x0, #-1]
  4200d8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4200dc:	add	x2, x2, #0xb60
  4200e0:	mov	w1, #0x6                   	// #6
  4200e4:	mov	x0, x28
  4200e8:	bl	426a88 <ferror@plt+0x23d58>
  4200ec:	b	420064 <ferror@plt+0x1d334>
  4200f0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4200f4:	add	x2, x2, #0xb98
  4200f8:	mov	w1, #0x4                   	// #4
  4200fc:	mov	x0, x28
  420100:	bl	426a10 <ferror@plt+0x23ce0>
  420104:	mov	w21, #0x4                   	// #4
  420108:	b	420084 <ferror@plt+0x1d354>
  42010c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  420110:	add	x2, x2, #0xbb8
  420114:	mov	w1, #0x434                 	// #1076
  420118:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42011c:	add	x0, x0, #0xbc8
  420120:	bl	4102b4 <ferror@plt+0xd584>
  420124:	ldrb	w0, [x26, w22, sxtw]
  420128:	add	w20, w0, w20, lsl #4
  42012c:	subs	w21, w21, #0x1
  420130:	ccmp	x19, x27, #0x2, ne  // ne = any
  420134:	b.cs	420168 <ferror@plt+0x1d438>  // b.hs, b.nlast
  420138:	ldrb	w22, [x19]
  42013c:	mov	w0, w22
  420140:	ldrh	w0, [x25, x0, lsl #1]
  420144:	tbz	w0, #8, 420168 <ferror@plt+0x1d438>
  420148:	add	x19, x19, #0x1
  42014c:	cbz	x23, 420124 <ferror@plt+0x1d3f4>
  420150:	cbz	x24, 42010c <ferror@plt+0x1d3dc>
  420154:	mov	x0, x23
  420158:	bl	41ff6c <ferror@plt+0x1d23c>
  42015c:	lsr	x0, x0, #32
  420160:	str	w0, [x24, #4]
  420164:	b	420124 <ferror@plt+0x1d3f4>
  420168:	ldr	w0, [sp, #116]
  42016c:	cmp	w0, #0x0
  420170:	cset	w0, ne  // ne = any
  420174:	cmp	w21, #0x0
  420178:	csel	w2, w0, wzr, ne  // ne = any
  42017c:	cbnz	w2, 4201f8 <ferror@plt+0x1d4c8>
  420180:	ldr	x1, [sp, #104]
  420184:	sub	x22, x1, #0x2
  420188:	ldr	x1, [sp, #128]
  42018c:	str	x19, [x1]
  420190:	cbnz	w21, 420208 <ferror@plt+0x1d4d8>
  420194:	cmp	w20, #0x9f
  420198:	b.hi	42022c <ferror@plt+0x1d4fc>  // b.pmore
  42019c:	ldrb	w1, [x28, #1120]
  4201a0:	cbnz	w1, 4201b8 <ferror@plt+0x1d488>
  4201a4:	and	w1, w20, #0xffffffdf
  4201a8:	cmp	w1, #0x40
  4201ac:	mov	w1, #0x24                  	// #36
  4201b0:	ccmp	w20, w1, #0x4, ne  // ne = any
  4201b4:	b.ne	420230 <ferror@plt+0x1d500>  // b.any
  4201b8:	cmp	w20, #0x24
  4201bc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4201c0:	b.ne	420278 <ferror@plt+0x1d548>  // b.any
  4201c4:	ldr	w0, [sp, #116]
  4201c8:	cbz	w0, 420250 <ferror@plt+0x1d520>
  4201cc:	mov	w0, #0x10ffff              	// #1114111
  4201d0:	cmp	w20, w0
  4201d4:	b.ls	4202c0 <ferror@plt+0x1d590>  // b.plast
  4201d8:	mov	x4, x22
  4201dc:	sub	w3, w19, w22
  4201e0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4201e4:	add	x2, x2, #0xcc0
  4201e8:	mov	w1, #0x3                   	// #3
  4201ec:	mov	x0, x28
  4201f0:	bl	426a10 <ferror@plt+0x23ce0>
  4201f4:	b	420250 <ferror@plt+0x1d520>
  4201f8:	ldr	x0, [sp, #120]
  4201fc:	str	wzr, [x0]
  420200:	mov	w0, #0x0                   	// #0
  420204:	b	42025c <ferror@plt+0x1d52c>
  420208:	mov	x4, x22
  42020c:	sub	w3, w19, w22
  420210:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  420214:	add	x2, x2, #0xbe0
  420218:	mov	w1, #0x3                   	// #3
  42021c:	mov	x0, x28
  420220:	bl	426a10 <ferror@plt+0x23ce0>
  420224:	mov	w20, #0x1                   	// #1
  420228:	b	420250 <ferror@plt+0x1d520>
  42022c:	tbz	w20, #31, 421cc4 <ferror@plt+0x1ef94>
  420230:	mov	x4, x22
  420234:	sub	w3, w19, w22
  420238:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42023c:	add	x2, x2, #0xc10
  420240:	mov	w1, #0x3                   	// #3
  420244:	mov	x0, x28
  420248:	bl	426a10 <ferror@plt+0x23ce0>
  42024c:	mov	w20, #0x1                   	// #1
  420250:	ldr	x0, [sp, #120]
  420254:	str	w20, [x0]
  420258:	mov	w0, #0x1                   	// #1
  42025c:	ldp	x19, x20, [sp, #16]
  420260:	ldp	x21, x22, [sp, #32]
  420264:	ldp	x23, x24, [sp, #48]
  420268:	ldp	x25, x26, [sp, #64]
  42026c:	ldp	x27, x28, [sp, #80]
  420270:	ldp	x29, x30, [sp], #144
  420274:	ret
  420278:	ldrb	w0, [x28, #1146]
  42027c:	cbz	w0, 4202cc <ferror@plt+0x1d59c>
  420280:	ldrb	w0, [x28, #1148]
  420284:	cbz	w0, 420290 <ferror@plt+0x1d560>
  420288:	ldrb	w0, [x28, #18]
  42028c:	cbz	w0, 4202a4 <ferror@plt+0x1d574>
  420290:	mov	w20, #0x24                  	// #36
  420294:	ldr	x0, [sp, #136]
  420298:	str	w20, [x0]
  42029c:	strb	wzr, [x0, #4]
  4202a0:	b	420250 <ferror@plt+0x1d520>
  4202a4:	strb	wzr, [x28, #1148]
  4202a8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4202ac:	add	x2, x2, #0xc38
  4202b0:	mov	w1, #0x2                   	// #2
  4202b4:	mov	x0, x28
  4202b8:	bl	426a10 <ferror@plt+0x23ce0>
  4202bc:	b	420290 <ferror@plt+0x1d560>
  4202c0:	mov	w1, #0x73c                 	// #1852
  4202c4:	mov	w3, #0x0                   	// #0
  4202c8:	b	4202d4 <ferror@plt+0x1d5a4>
  4202cc:	mov	w1, #0x73c                 	// #1852
  4202d0:	mov	w3, #0x0                   	// #0
  4202d4:	adrp	x5, 474000 <_obstack_memory_used@@Base+0x1fc60>
  4202d8:	add	x5, x5, #0x188
  4202dc:	b	4202e4 <ferror@plt+0x1d5b4>
  4202e0:	mov	w1, w0
  4202e4:	cmp	w1, w3
  4202e8:	b.eq	420310 <ferror@plt+0x1d5e0>  // b.none
  4202ec:	add	w0, w1, w3
  4202f0:	add	w0, w0, w0, lsr #31
  4202f4:	asr	w0, w0, #1
  4202f8:	add	x4, x5, w0, sxtw #3
  4202fc:	ldr	w4, [x4, #4]
  420300:	cmp	w20, w4
  420304:	b.ls	4202e0 <ferror@plt+0x1d5b0>  // b.plast
  420308:	add	w3, w0, #0x1
  42030c:	b	4202e4 <ferror@plt+0x1d5b4>
  420310:	ldrb	w0, [x28, #1154]
  420314:	cbz	w0, 42035c <ferror@plt+0x1d62c>
  420318:	ldrb	w0, [x28, #1164]
  42031c:	cbnz	w0, 421ca8 <ferror@plt+0x1ef78>
  420320:	ldrb	w1, [x28, #1152]
  420324:	mov	w0, #0x1                   	// #1
  420328:	cbnz	w1, 420340 <ferror@plt+0x1d610>
  42032c:	ldrb	w0, [x28, #1120]
  420330:	cmp	w0, #0x0
  420334:	mov	w0, #0xd                   	// #13
  420338:	mov	w1, #0x4                   	// #4
  42033c:	csel	w0, w0, w1, eq  // eq = none
  420340:	sbfiz	x1, x3, #3, #32
  420344:	adrp	x4, 474000 <_obstack_memory_used@@Base+0x1fc60>
  420348:	add	x4, x4, #0x188
  42034c:	ldrh	w21, [x4, x1]
  420350:	tst	w0, w21
  420354:	b.ne	420384 <ferror@plt+0x1d654>  // b.any
  420358:	b	4201d8 <ferror@plt+0x1d4a8>
  42035c:	sbfiz	x0, x3, #3, #32
  420360:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x1fc60>
  420364:	add	x1, x1, #0x188
  420368:	ldrh	w21, [x1, x0]
  42036c:	mov	w0, #0xd                   	// #13
  420370:	tst	w21, w0
  420374:	b.eq	4201d8 <ferror@plt+0x1d4a8>  // b.none
  420378:	ldrb	w0, [x28, #1164]
  42037c:	mov	w23, #0x10                  	// #16
  420380:	cbnz	w0, 420394 <ferror@plt+0x1d664>
  420384:	ldrb	w0, [x28, #1152]
  420388:	cmp	w0, #0x0
  42038c:	cset	w23, ne  // ne = any
  420390:	lsl	w23, w23, #1
  420394:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x1fc60>
  420398:	add	x0, x0, #0x188
  42039c:	add	x3, x0, w3, sxtw #3
  4203a0:	ldrb	w24, [x3, #2]
  4203a4:	cbz	w24, 4203c4 <ferror@plt+0x1d694>
  4203a8:	ldr	x1, [sp, #136]
  4203ac:	ldrb	w0, [x1, #4]
  4203b0:	cmp	w0, w24
  4203b4:	b.ls	4203c4 <ferror@plt+0x1d694>  // b.plast
  4203b8:	mov	w0, #0x3                   	// #3
  4203bc:	str	w0, [x1, #8]
  4203c0:	b	420400 <ferror@plt+0x1d6d0>
  4203c4:	tbz	w21, #8, 421c58 <ferror@plt+0x1ef28>
  4203c8:	ldr	x0, [sp, #136]
  4203cc:	ldr	w0, [x0]
  4203d0:	sub	w1, w20, #0x1, lsl #12
  4203d4:	sub	w1, w1, #0x161
  4203d8:	cmp	w1, #0x14
  4203dc:	b.hi	42043c <ferror@plt+0x1d70c>  // b.pmore
  4203e0:	sub	w0, w0, #0x1, lsl #12
  4203e4:	sub	w0, w0, #0x100
  4203e8:	cmp	w0, #0x12
  4203ec:	cset	w0, hi  // hi = pmore
  4203f0:	cbz	w0, 421c3c <ferror@plt+0x1ef0c>
  4203f4:	cbnz	w24, 420400 <ferror@plt+0x1d6d0>
  4203f8:	ldr	x0, [sp, #136]
  4203fc:	str	w20, [x0]
  420400:	ldr	x0, [sp, #136]
  420404:	strb	w24, [x0, #4]
  420408:	tst	w23, w21
  42040c:	b.eq	420250 <ferror@plt+0x1d520>  // b.none
  420410:	ldr	w0, [sp, #116]
  420414:	cmp	w0, #0x1
  420418:	b.ne	420250 <ferror@plt+0x1d520>  // b.any
  42041c:	mov	x4, x22
  420420:	sub	w3, w19, w22
  420424:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  420428:	add	x2, x2, #0xc78
  42042c:	mov	w1, #0x3                   	// #3
  420430:	mov	x0, x28
  420434:	bl	426a10 <ferror@plt+0x23ce0>
  420438:	b	420250 <ferror@plt+0x1d520>
  42043c:	sub	w1, w20, #0x1, lsl #12
  420440:	sub	w1, w1, #0x1a8
  420444:	cmp	w1, #0x1a
  420448:	b.hi	420478 <ferror@plt+0x1d748>  // b.pmore
  42044c:	sub	w1, w0, #0xa, lsl #12
  420450:	sub	w1, w1, #0xc00
  420454:	mov	w0, #0x2ba3                	// #11171
  420458:	cmp	w1, w0
  42045c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420460:	mov	w2, #0x1c                  	// #28
  420464:	udiv	w0, w1, w2
  420468:	msub	w0, w0, w2, w1
  42046c:	cmp	w0, #0x0
  420470:	cset	w0, ne  // ne = any
  420474:	b	4203f0 <ferror@plt+0x1d6c0>
  420478:	cmp	w20, #0x345
  42047c:	b.hi	4204ac <ferror@plt+0x1d77c>  // b.pmore
  420480:	cmp	w20, #0x2ff
  420484:	b.ls	421c14 <ferror@plt+0x1eee4>  // b.plast
  420488:	sub	w3, w20, #0x300
  42048c:	cmp	w3, #0x45
  420490:	b.hi	421c14 <ferror@plt+0x1eee4>  // b.pmore
  420494:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420498:	add	x1, x1, #0x60
  42049c:	ldrh	w1, [x1, w3, uxtw #1]
  4204a0:	adr	x3, 4204ac <ferror@plt+0x1d77c>
  4204a4:	add	x1, x3, w1, sxth #2
  4204a8:	br	x1
  4204ac:	cmp	w20, #0xcd5
  4204b0:	b.eq	421af8 <ferror@plt+0x1edc8>  // b.none
  4204b4:	b.ls	420508 <ferror@plt+0x1d7d8>  // b.plast
  4204b8:	mov	w1, #0x102e                	// #4142
  4204bc:	cmp	w20, w1
  4204c0:	b.eq	421b50 <ferror@plt+0x1ee20>  // b.none
  4204c4:	b.ls	4205e0 <ferror@plt+0x1d8b0>  // b.plast
  4204c8:	mov	w1, #0x309a                	// #12442
  4204cc:	cmp	w20, w1
  4204d0:	b.eq	421b8c <ferror@plt+0x1ee5c>  // b.none
  4204d4:	b.ls	42063c <ferror@plt+0x1d90c>  // b.plast
  4204d8:	mov	w1, #0x10ba                	// #4282
  4204dc:	movk	w1, #0x1, lsl #16
  4204e0:	cmp	w20, w1
  4204e4:	b.eq	421bec <ferror@plt+0x1eebc>  // b.none
  4204e8:	add	w1, w1, #0x6d
  4204ec:	cmp	w20, w1
  4204f0:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  4204f4:	sub	w0, w0, #0x11, lsl #12
  4204f8:	sub	w0, w0, #0x131
  4204fc:	cmp	w0, #0x1
  420500:	cset	w0, hi  // hi = pmore
  420504:	b	420598 <ferror@plt+0x1d868>
  420508:	cmp	w20, #0xb3e
  42050c:	b.eq	421ac0 <ferror@plt+0x1ed90>  // b.none
  420510:	b.ls	42053c <ferror@plt+0x1d80c>  // b.plast
  420514:	cmp	w20, #0xbd7
  420518:	b.eq	421ad8 <ferror@plt+0x1eda8>  // b.none
  42051c:	b.ls	4205ac <ferror@plt+0x1d87c>  // b.plast
  420520:	cmp	w20, #0xc56
  420524:	b.eq	421aec <ferror@plt+0x1edbc>  // b.none
  420528:	cmp	w20, #0xcc2
  42052c:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  420530:	cmp	w0, #0xcc6
  420534:	cset	w0, ne  // ne = any
  420538:	b	420598 <ferror@plt+0x1d868>
  42053c:	cmp	w20, #0x93c
  420540:	b.eq	421a8c <ferror@plt+0x1ed5c>  // b.none
  420544:	b.ls	420564 <ferror@plt+0x1d834>  // b.plast
  420548:	cmp	w20, #0x9be
  42054c:	b.eq	421ab4 <ferror@plt+0x1ed84>  // b.none
  420550:	cmp	w20, #0x9d7
  420554:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  420558:	cmp	w0, #0x9c7
  42055c:	cset	w0, ne  // ne = any
  420560:	b	420598 <ferror@plt+0x1d868>
  420564:	cmp	w20, #0x654
  420568:	b.eq	421a28 <ferror@plt+0x1ecf8>  // b.none
  42056c:	cmp	w20, #0x655
  420570:	b.ne	420588 <ferror@plt+0x1d858>  // b.any
  420574:	cmp	w0, #0x623
  420578:	b.hi	421a80 <ferror@plt+0x1ed50>  // b.pmore
  42057c:	cmp	w0, #0x621
  420580:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420584:	b	42059c <ferror@plt+0x1d86c>
  420588:	cmp	w20, #0x653
  42058c:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  420590:	cmp	w0, #0x627
  420594:	cset	w0, ne  // ne = any
  420598:	cbnz	w0, 4203f4 <ferror@plt+0x1d6c4>
  42059c:	mov	w0, #0x3                   	// #3
  4205a0:	ldr	x1, [sp, #136]
  4205a4:	str	w0, [x1, #8]
  4205a8:	b	4203f4 <ferror@plt+0x1d6c4>
  4205ac:	cmp	w20, #0xb57
  4205b0:	b.eq	421acc <ferror@plt+0x1ed9c>  // b.none
  4205b4:	cmp	w20, #0xbbe
  4205b8:	b.ne	4205cc <ferror@plt+0x1d89c>  // b.any
  4205bc:	sub	w0, w0, #0xbc6
  4205c0:	cmp	w0, #0x1
  4205c4:	cset	w0, hi  // hi = pmore
  4205c8:	b	420598 <ferror@plt+0x1d868>
  4205cc:	cmp	w20, #0xb56
  4205d0:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  4205d4:	cmp	w0, #0xb47
  4205d8:	cset	w0, ne  // ne = any
  4205dc:	b	420598 <ferror@plt+0x1d868>
  4205e0:	cmp	w20, #0xdca
  4205e4:	b.eq	421b2c <ferror@plt+0x1edfc>  // b.none
  4205e8:	b.ls	42060c <ferror@plt+0x1d8dc>  // b.plast
  4205ec:	cmp	w20, #0xdcf
  4205f0:	b.eq	421b40 <ferror@plt+0x1ee10>  // b.none
  4205f4:	cmp	w20, #0xddf
  4205f8:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  4205fc:	sub	w0, w0, #0xdd9
  420600:	cmp	w0, #0x1
  420604:	cset	w0, hi  // hi = pmore
  420608:	b	420598 <ferror@plt+0x1d868>
  42060c:	cmp	w20, #0xd3e
  420610:	b.eq	421b1c <ferror@plt+0x1edec>  // b.none
  420614:	cmp	w20, #0xd57
  420618:	b.ne	420628 <ferror@plt+0x1d8f8>  // b.any
  42061c:	cmp	w0, #0xd46
  420620:	cset	w0, ne  // ne = any
  420624:	b	420598 <ferror@plt+0x1d868>
  420628:	cmp	w20, #0xcd6
  42062c:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  420630:	cmp	w0, #0xcc6
  420634:	cset	w0, ne  // ne = any
  420638:	b	420598 <ferror@plt+0x1d868>
  42063c:	mov	w1, #0x1b35                	// #6965
  420640:	cmp	w20, w1
  420644:	b.eq	421b60 <ferror@plt+0x1ee30>  // b.none
  420648:	mov	w1, #0x3099                	// #12441
  42064c:	cmp	w20, w1
  420650:	b.ne	421c14 <ferror@plt+0x1eee4>  // b.any
  420654:	sub	w0, w0, #0x3, lsl #12
  420658:	sub	w0, w0, #0x46
  42065c:	cmp	w0, #0xb7
  420660:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420664:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420668:	add	x1, x1, #0xec
  42066c:	ldrh	w0, [x1, w0, uxtw #1]
  420670:	adr	x1, 42067c <ferror@plt+0x1d94c>
  420674:	add	x0, x1, w0, sxth #2
  420678:	br	x0
  42067c:	cmp	w0, #0x3cb
  420680:	b.hi	420718 <ferror@plt+0x1d9e8>  // b.pmore
  420684:	cmp	w0, #0x390
  420688:	b.hi	4206c0 <ferror@plt+0x1d990>  // b.pmore
  42068c:	cmp	w0, #0x113
  420690:	b.hi	4206e8 <ferror@plt+0x1d9b8>  // b.pmore
  420694:	cmp	w0, #0x40
  420698:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42069c:	sub	w0, w0, #0x41
  4206a0:	cmp	w0, #0xd2
  4206a4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4206a8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  4206ac:	add	x1, x1, #0x25c
  4206b0:	ldrh	w0, [x1, w0, uxtw #1]
  4206b4:	adr	x1, 4206c0 <ferror@plt+0x1d990>
  4206b8:	add	x0, x1, w0, sxth #2
  4206bc:	br	x0
  4206c0:	sub	w1, w0, #0x391
  4206c4:	mov	x0, #0x1                   	// #1
  4206c8:	lsl	x0, x0, x1
  4206cc:	mov	x1, #0x4151                	// #16721
  4206d0:	movk	x1, #0x110, lsl #16
  4206d4:	movk	x1, #0x4151, lsl #32
  4206d8:	movk	x1, #0x710, lsl #48
  4206dc:	tst	x0, x1
  4206e0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4206e4:	b	42059c <ferror@plt+0x1d86c>
  4206e8:	cmp	w0, #0x1a1
  4206ec:	b.hi	420708 <ferror@plt+0x1d9d8>  // b.pmore
  4206f0:	cmp	w0, #0x19f
  4206f4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4206f8:	sub	w0, w0, #0x14c
  4206fc:	cmp	w0, #0x1
  420700:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420704:	b	42059c <ferror@plt+0x1d86c>
  420708:	sub	w0, w0, #0x1af
  42070c:	cmp	w0, #0x1
  420710:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420714:	b	42059c <ferror@plt+0x1d86c>
  420718:	cmp	w0, #0x438
  42071c:	b.ls	420758 <ferror@plt+0x1da28>  // b.plast
  420720:	sub	w1, w0, #0x1, lsl #12
  420724:	sub	w1, w1, #0xf00
  420728:	cmp	w1, #0xfe
  42072c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420730:	sub	w0, w0, #0x1, lsl #12
  420734:	sub	w0, w0, #0xf00
  420738:	cmp	w0, #0xfe
  42073c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420740:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420744:	add	x1, x1, #0x404
  420748:	ldrh	w0, [x1, w0, uxtw #1]
  42074c:	adr	x1, 420758 <ferror@plt+0x1da28>
  420750:	add	x0, x1, w0, sxth #2
  420754:	br	x0
  420758:	cmp	w0, #0x414
  42075c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420760:	sub	w1, w0, #0x415
  420764:	mov	x0, #0x1                   	// #1
  420768:	lsl	x0, x0, x1
  42076c:	mov	x1, #0x9                   	// #9
  420770:	movk	x1, #0x9, lsl #32
  420774:	tst	x0, x1
  420778:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42077c:	b	42059c <ferror@plt+0x1d86c>
  420780:	cmp	w0, #0x41a
  420784:	b.hi	4207e4 <ferror@plt+0x1dab4>  // b.pmore
  420788:	cmp	w0, #0x390
  42078c:	b.hi	4207c0 <ferror@plt+0x1da90>  // b.pmore
  420790:	sub	w1, w0, #0x41
  420794:	cmp	w1, #0x16f
  420798:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42079c:	sub	w0, w0, #0x41
  4207a0:	cmp	w0, #0x16f
  4207a4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4207a8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  4207ac:	add	x1, x1, #0x604
  4207b0:	ldrh	w0, [x1, w0, uxtw #1]
  4207b4:	adr	x1, 4207c0 <ferror@plt+0x1da90>
  4207b8:	add	x0, x1, w0, sxth #2
  4207bc:	br	x0
  4207c0:	sub	w0, w0, #0x391
  4207c4:	cmp	w0, #0x89
  4207c8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4207cc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  4207d0:	add	x1, x1, #0x8e4
  4207d4:	ldrh	w0, [x1, w0, uxtw #1]
  4207d8:	adr	x1, 4207e4 <ferror@plt+0x1dab4>
  4207dc:	add	x0, x1, w0, sxth #2
  4207e0:	br	x0
  4207e4:	mov	w1, #0x1ffe                	// #8190
  4207e8:	cmp	w0, w1
  4207ec:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4207f0:	mov	w1, #0x1eff                	// #7935
  4207f4:	cmp	w0, w1
  4207f8:	b.ls	420824 <ferror@plt+0x1daf4>  // b.plast
  4207fc:	sub	w0, w0, #0x1, lsl #12
  420800:	sub	w0, w0, #0xf00
  420804:	cmp	w0, #0xfe
  420808:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42080c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420810:	add	x1, x1, #0x9f8
  420814:	ldrh	w0, [x1, w0, uxtw #1]
  420818:	adr	x1, 420824 <ferror@plt+0x1daf4>
  42081c:	add	x0, x1, w0, sxth #2
  420820:	br	x0
  420824:	cmp	w0, #0x433
  420828:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  42082c:	cmp	w0, #0x43a
  420830:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420834:	b	42059c <ferror@plt+0x1d86c>
  420838:	cmp	w0, #0x7a
  42083c:	b.hi	42086c <ferror@plt+0x1db3c>  // b.pmore
  420840:	cmp	w0, #0x40
  420844:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420848:	sub	w0, w0, #0x41
  42084c:	cmp	w0, #0x39
  420850:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420854:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420858:	add	x1, x1, #0xbf8
  42085c:	ldrh	w0, [x1, w0, uxtw #1]
  420860:	adr	x1, 42086c <ferror@plt+0x1db3c>
  420864:	add	x0, x1, w0, sxth #2
  420868:	br	x0
  42086c:	sub	w1, w0, #0x1, lsl #12
  420870:	sub	w1, w1, #0xea0
  420874:	cmp	w1, #0x2d
  420878:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42087c:	mov	x0, #0x1                   	// #1
  420880:	lsl	x0, x0, x1
  420884:	mov	x1, #0x3                   	// #3
  420888:	movk	x1, #0x300, lsl #16
  42088c:	movk	x1, #0x3000, lsl #32
  420890:	tst	x0, x1
  420894:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420898:	b	42059c <ferror@plt+0x1d86c>
  42089c:	cmp	w0, #0x79
  4208a0:	b.hi	4208fc <ferror@plt+0x1dbcc>  // b.pmore
  4208a4:	cmp	w0, #0x40
  4208a8:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  4208ac:	sub	w1, w0, #0x41
  4208b0:	mov	x0, #0x1                   	// #1
  4208b4:	lsl	x0, x0, x1
  4208b8:	mov	x1, #0x6111                	// #24849
  4208bc:	movk	x1, #0x130, lsl #16
  4208c0:	movk	x1, #0x6111, lsl #32
  4208c4:	movk	x1, #0x130, lsl #48
  4208c8:	tst	x0, x1
  4208cc:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4208d0:	b	42059c <ferror@plt+0x1d86c>
  4208d4:	sub	w1, w0, #0xca
  4208d8:	mov	x0, #0x1                   	// #1
  4208dc:	lsl	x0, x0, x1
  4208e0:	mov	x1, #0x401                 	// #1025
  4208e4:	movk	x1, #0x100, lsl #16
  4208e8:	movk	x1, #0x401, lsl #32
  4208ec:	movk	x1, #0x300, lsl #48
  4208f0:	tst	x0, x1
  4208f4:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4208f8:	b	42059c <ferror@plt+0x1d86c>
  4208fc:	cmp	w0, #0x103
  420900:	b.hi	420918 <ferror@plt+0x1dbe8>  // b.pmore
  420904:	cmp	w0, #0xc9
  420908:	b.hi	4208d4 <ferror@plt+0x1dba4>  // b.pmore
  42090c:	cmp	w0, #0xc2
  420910:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420914:	b	42059c <ferror@plt+0x1d86c>
  420918:	cmp	w0, #0x1a1
  42091c:	b.hi	42092c <ferror@plt+0x1dbfc>  // b.pmore
  420920:	cmp	w0, #0x19f
  420924:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420928:	b	42059c <ferror@plt+0x1d86c>
  42092c:	sub	w0, w0, #0x1af
  420930:	cmp	w0, #0x1
  420934:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420938:	b	42059c <ferror@plt+0x1d86c>
  42093c:	cmp	w0, #0xfc
  420940:	b.hi	420998 <ferror@plt+0x1dc68>  // b.pmore
  420944:	cmp	w0, #0x40
  420948:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42094c:	sub	w0, w0, #0x41
  420950:	cmp	w0, #0xbb
  420954:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420958:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  42095c:	add	x1, x1, #0xc6c
  420960:	ldrh	w0, [x1, w0, uxtw #1]
  420964:	adr	x1, 420970 <ferror@plt+0x1dc40>
  420968:	add	x0, x1, w0, sxth #2
  42096c:	br	x0
  420970:	sub	w1, w0, #0x391
  420974:	mov	x0, #0x1                   	// #1
  420978:	lsl	x0, x0, x1
  42097c:	mov	x1, #0x101                 	// #257
  420980:	movk	x1, #0x10, lsl #16
  420984:	movk	x1, #0x101, lsl #32
  420988:	movk	x1, #0x10, lsl #48
  42098c:	tst	x0, x1
  420990:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420994:	b	42059c <ferror@plt+0x1d86c>
  420998:	cmp	w0, #0x3c5
  42099c:	b.hi	4209d8 <ferror@plt+0x1dca8>  // b.pmore
  4209a0:	cmp	w0, #0x390
  4209a4:	b.hi	420970 <ferror@plt+0x1dc40>  // b.pmore
  4209a8:	cmp	w0, #0x227
  4209ac:	b.hi	4209c8 <ferror@plt+0x1dc98>  // b.pmore
  4209b0:	cmp	w0, #0x225
  4209b4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4209b8:	sub	w0, w0, #0x1ea
  4209bc:	cmp	w0, #0x1
  4209c0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4209c4:	b	42059c <ferror@plt+0x1d86c>
  4209c8:	sub	w0, w0, #0x22e
  4209cc:	cmp	w0, #0x1
  4209d0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4209d4:	b	42059c <ferror@plt+0x1d86c>
  4209d8:	mov	w1, #0x1e37                	// #7735
  4209dc:	cmp	w0, w1
  4209e0:	b.hi	420a18 <ferror@plt+0x1dce8>  // b.pmore
  4209e4:	mov	w1, #0x1e35                	// #7733
  4209e8:	cmp	w0, w1
  4209ec:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4209f0:	sub	w1, w0, #0x418
  4209f4:	cmp	w1, #0x2b
  4209f8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4209fc:	mov	x0, #0x1                   	// #1
  420a00:	lsl	x0, x0, x1
  420a04:	mov	x1, #0x801                 	// #2049
  420a08:	movk	x1, #0x801, lsl #32
  420a0c:	tst	x0, x1
  420a10:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420a14:	b	42059c <ferror@plt+0x1d86c>
  420a18:	mov	w1, #0x1fb3                	// #8115
  420a1c:	cmp	w0, w1
  420a20:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420a24:	b.ls	420a38 <ferror@plt+0x1dd08>  // b.plast
  420a28:	mov	w1, #0x1fbc                	// #8124
  420a2c:	cmp	w0, w1
  420a30:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420a34:	b	42059c <ferror@plt+0x1d86c>
  420a38:	sub	w0, w0, #0x1, lsl #12
  420a3c:	sub	w0, w0, #0xe5a
  420a40:	cmp	w0, #0x1
  420a44:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420a48:	b	42059c <ferror@plt+0x1d86c>
  420a4c:	cmp	w0, #0x3c5
  420a50:	b.hi	420acc <ferror@plt+0x1dd9c>  // b.pmore
  420a54:	cmp	w0, #0x390
  420a58:	b.hi	420a94 <ferror@plt+0x1dd64>  // b.pmore
  420a5c:	cmp	w0, #0x75
  420a60:	b.hi	420abc <ferror@plt+0x1dd8c>  // b.pmore
  420a64:	cmp	w0, #0x40
  420a68:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420a6c:	sub	w1, w0, #0x41
  420a70:	mov	x0, #0x1                   	// #1
  420a74:	lsl	x0, x0, x1
  420a78:	mov	x1, #0x4151                	// #16721
  420a7c:	movk	x1, #0x10, lsl #16
  420a80:	movk	x1, #0x4151, lsl #32
  420a84:	movk	x1, #0x10, lsl #48
  420a88:	tst	x0, x1
  420a8c:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420a90:	b	42059c <ferror@plt+0x1d86c>
  420a94:	sub	w1, w0, #0x391
  420a98:	mov	x0, #0x1                   	// #1
  420a9c:	lsl	x0, x0, x1
  420aa0:	mov	x1, #0x101                 	// #257
  420aa4:	movk	x1, #0x10, lsl #16
  420aa8:	movk	x1, #0x101, lsl #32
  420aac:	movk	x1, #0x10, lsl #48
  420ab0:	tst	x0, x1
  420ab4:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420ab8:	b	42059c <ferror@plt+0x1d86c>
  420abc:	sub	w0, w0, #0x228
  420ac0:	cmp	w0, #0x1
  420ac4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420ac8:	b	42059c <ferror@plt+0x1d86c>
  420acc:	cmp	w0, #0x443
  420ad0:	b.hi	420b04 <ferror@plt+0x1ddd4>  // b.pmore
  420ad4:	cmp	w0, #0x40f
  420ad8:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420adc:	sub	w1, w0, #0x410
  420ae0:	mov	x0, #0x1                   	// #1
  420ae4:	lsl	x0, x0, x1
  420ae8:	mov	x1, #0x161                 	// #353
  420aec:	movk	x1, #0x8, lsl #16
  420af0:	movk	x1, #0x161, lsl #32
  420af4:	movk	x1, #0x8, lsl #48
  420af8:	tst	x0, x1
  420afc:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420b00:	b	42059c <ferror@plt+0x1d86c>
  420b04:	mov	w1, #0x1fb3                	// #8115
  420b08:	cmp	w0, w1
  420b0c:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420b10:	b.ls	420b24 <ferror@plt+0x1ddf4>  // b.plast
  420b14:	mov	w1, #0x1fbc                	// #8124
  420b18:	cmp	w0, w1
  420b1c:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420b20:	b	42059c <ferror@plt+0x1d86c>
  420b24:	sub	w0, w0, #0x1, lsl #12
  420b28:	sub	w0, w0, #0xea0
  420b2c:	cmp	w0, #0x1
  420b30:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420b34:	b	42059c <ferror@plt+0x1d86c>
  420b38:	cmp	w0, #0x7a
  420b3c:	b.hi	420b70 <ferror@plt+0x1de40>  // b.pmore
  420b40:	cmp	w0, #0x40
  420b44:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420b48:	sub	w1, w0, #0x41
  420b4c:	mov	x0, #0x1                   	// #1
  420b50:	lsl	x0, x0, x1
  420b54:	mov	x1, #0xf1ff                	// #61951
  420b58:	movk	x1, #0x3ce, lsl #16
  420b5c:	movk	x1, #0xf0ff, lsl #32
  420b60:	movk	x1, #0x3ce, lsl #48
  420b64:	tst	x0, x1
  420b68:	b.ne	42059c <ferror@plt+0x1d86c>  // b.any
  420b6c:	b	4203f4 <ferror@plt+0x1d6c4>
  420b70:	cmp	w0, #0x17f
  420b74:	b.hi	420ba0 <ferror@plt+0x1de70>  // b.pmore
  420b78:	cmp	w0, #0x159
  420b7c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420b80:	sub	w1, w0, #0x15a
  420b84:	mov	x0, #0x1                   	// #1
  420b88:	lsl	x0, x0, x1
  420b8c:	mov	x1, #0xc3                  	// #195
  420b90:	movk	x1, #0x20, lsl #32
  420b94:	tst	x0, x1
  420b98:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420b9c:	b	42059c <ferror@plt+0x1d86c>
  420ba0:	sub	w0, w0, #0x1, lsl #12
  420ba4:	sub	w0, w0, #0xe62
  420ba8:	cmp	w0, #0x1
  420bac:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420bb0:	b	42059c <ferror@plt+0x1d86c>
  420bb4:	cmp	w0, #0x456
  420bb8:	b.hi	420c54 <ferror@plt+0x1df24>  // b.pmore
  420bbc:	cmp	w0, #0x3b8
  420bc0:	b.hi	420bfc <ferror@plt+0x1decc>  // b.pmore
  420bc4:	cmp	w0, #0x79
  420bc8:	b.hi	420c20 <ferror@plt+0x1def0>  // b.pmore
  420bcc:	cmp	w0, #0x40
  420bd0:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420bd4:	sub	w1, w0, #0x41
  420bd8:	mov	x0, #0x1                   	// #1
  420bdc:	lsl	x0, x0, x1
  420be0:	mov	x1, #0x4191                	// #16785
  420be4:	movk	x1, #0x1d0, lsl #16
  420be8:	movk	x1, #0x4191, lsl #32
  420bec:	movk	x1, #0x1d8, lsl #48
  420bf0:	tst	x0, x1
  420bf4:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420bf8:	b	42059c <ferror@plt+0x1d86c>
  420bfc:	sub	w0, w0, #0x3b9
  420c00:	cmp	w0, #0x9d
  420c04:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420c08:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  420c0c:	add	x1, x1, #0xde4
  420c10:	ldrh	w0, [x1, w0, uxtw #1]
  420c14:	adr	x1, 420c20 <ferror@plt+0x1def0>
  420c18:	add	x0, x1, w0, sxth #2
  420c1c:	br	x0
  420c20:	cmp	w0, #0x16b
  420c24:	b.hi	420c40 <ferror@plt+0x1df10>  // b.pmore
  420c28:	cmp	w0, #0x169
  420c2c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  420c30:	and	w0, w0, #0xffffffdf
  420c34:	cmp	w0, #0xd5
  420c38:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420c3c:	b	42059c <ferror@plt+0x1d86c>
  420c40:	cmp	w0, #0x399
  420c44:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420c48:	cmp	w0, #0x3a5
  420c4c:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420c50:	b	42059c <ferror@plt+0x1d86c>
  420c54:	cmp	w0, #0x4d9
  420c58:	b.hi	420c68 <ferror@plt+0x1df38>  // b.pmore
  420c5c:	cmp	w0, #0x4d7
  420c60:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420c64:	b	42059c <ferror@plt+0x1d86c>
  420c68:	sub	w0, w0, #0x4e8
  420c6c:	cmp	w0, #0x1
  420c70:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420c74:	b	42059c <ferror@plt+0x1d86c>
  420c78:	cmp	w0, #0x79
  420c7c:	b.hi	420cd8 <ferror@plt+0x1dfa8>  // b.pmore
  420c80:	cmp	w0, #0x40
  420c84:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420c88:	sub	w1, w0, #0x41
  420c8c:	mov	x0, #0x1                   	// #1
  420c90:	lsl	x0, x0, x1
  420c94:	mov	x1, #0x4111                	// #16657
  420c98:	movk	x1, #0x110, lsl #16
  420c9c:	movk	x1, #0x4111, lsl #32
  420ca0:	movk	x1, #0x110, lsl #48
  420ca4:	tst	x0, x1
  420ca8:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420cac:	b	42059c <ferror@plt+0x1d86c>
  420cb0:	sub	w1, w0, #0xca
  420cb4:	mov	x0, #0x1                   	// #1
  420cb8:	lsl	x0, x0, x1
  420cbc:	mov	x1, #0x401                 	// #1025
  420cc0:	movk	x1, #0x100, lsl #16
  420cc4:	movk	x1, #0x401, lsl #32
  420cc8:	movk	x1, #0x300, lsl #48
  420ccc:	tst	x0, x1
  420cd0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420cd4:	b	42059c <ferror@plt+0x1d86c>
  420cd8:	cmp	w0, #0x103
  420cdc:	b.hi	420cf4 <ferror@plt+0x1dfc4>  // b.pmore
  420ce0:	cmp	w0, #0xc9
  420ce4:	b.hi	420cb0 <ferror@plt+0x1df80>  // b.pmore
  420ce8:	cmp	w0, #0xc2
  420cec:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420cf0:	b	42059c <ferror@plt+0x1d86c>
  420cf4:	cmp	w0, #0x1a1
  420cf8:	b.hi	420d08 <ferror@plt+0x1dfd8>  // b.pmore
  420cfc:	cmp	w0, #0x19f
  420d00:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420d04:	b	42059c <ferror@plt+0x1d86c>
  420d08:	sub	w0, w0, #0x1af
  420d0c:	cmp	w0, #0x1
  420d10:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420d14:	b	42059c <ferror@plt+0x1d86c>
  420d18:	sub	w1, w0, #0x41
  420d1c:	cmp	w1, #0x38
  420d20:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420d24:	mov	x0, #0x1                   	// #1
  420d28:	lsl	x0, x0, x1
  420d2c:	mov	x1, #0x1                   	// #1
  420d30:	movk	x1, #0x10, lsl #16
  420d34:	movk	x1, #0x1, lsl #32
  420d38:	movk	x1, #0x150, lsl #48
  420d3c:	tst	x0, x1
  420d40:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420d44:	b	42059c <ferror@plt+0x1d86c>
  420d48:	cmp	w0, #0x75
  420d4c:	b.hi	420d78 <ferror@plt+0x1e048>  // b.pmore
  420d50:	cmp	w0, #0x4e
  420d54:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420d58:	sub	w1, w0, #0x4f
  420d5c:	mov	x0, #0x1                   	// #1
  420d60:	lsl	x0, x0, x1
  420d64:	mov	x1, #0x41                  	// #65
  420d68:	movk	x1, #0x41, lsl #32
  420d6c:	tst	x0, x1
  420d70:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420d74:	b	42059c <ferror@plt+0x1d86c>
  420d78:	sub	w0, w0, #0x423
  420d7c:	tst	w0, #0xffffffdf
  420d80:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420d84:	b	42059c <ferror@plt+0x1d86c>
  420d88:	cmp	w0, #0x7a
  420d8c:	b.hi	420dc0 <ferror@plt+0x1e090>  // b.pmore
  420d90:	cmp	w0, #0x40
  420d94:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420d98:	sub	w1, w0, #0x41
  420d9c:	mov	x0, #0x1                   	// #1
  420da0:	lsl	x0, x0, x1
  420da4:	mov	x1, #0x6ddd                	// #28125
  420da8:	movk	x1, #0x21e, lsl #16
  420dac:	movk	x1, #0x6fdd, lsl #32
  420db0:	movk	x1, #0x21e, lsl #48
  420db4:	tst	x0, x1
  420db8:	b.ne	42059c <ferror@plt+0x1d86c>  // b.any
  420dbc:	b	4203f4 <ferror@plt+0x1d6c4>
  420dc0:	cmp	w0, #0x1b7
  420dc4:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420dc8:	b.ls	420dd8 <ferror@plt+0x1e0a8>  // b.plast
  420dcc:	cmp	w0, #0x292
  420dd0:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420dd4:	b	42059c <ferror@plt+0x1d86c>
  420dd8:	and	w0, w0, #0xffffffdf
  420ddc:	cmp	w0, #0xdc
  420de0:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420de4:	b	42059c <ferror@plt+0x1d86c>
  420de8:	cmp	w0, #0x75
  420dec:	b.hi	420e20 <ferror@plt+0x1e0f0>  // b.pmore
  420df0:	cmp	w0, #0x40
  420df4:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420df8:	sub	w1, w0, #0x41
  420dfc:	mov	x0, #0x1                   	// #1
  420e00:	lsl	x0, x0, x1
  420e04:	mov	x1, #0x4111                	// #16657
  420e08:	movk	x1, #0x12, lsl #16
  420e0c:	movk	x1, #0x4111, lsl #32
  420e10:	movk	x1, #0x12, lsl #48
  420e14:	tst	x0, x1
  420e18:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420e1c:	b	42059c <ferror@plt+0x1d86c>
  420e20:	sub	w0, w0, #0x474
  420e24:	cmp	w0, #0x1
  420e28:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420e2c:	b	42059c <ferror@plt+0x1d86c>
  420e30:	sub	w1, w0, #0x41
  420e34:	cmp	w1, #0x34
  420e38:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420e3c:	mov	x0, #0x1                   	// #1
  420e40:	lsl	x0, x0, x1
  420e44:	mov	x1, #0x4111                	// #16657
  420e48:	movk	x1, #0x12, lsl #16
  420e4c:	movk	x1, #0x4111, lsl #32
  420e50:	movk	x1, #0x12, lsl #48
  420e54:	tst	x0, x1
  420e58:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420e5c:	b	42059c <ferror@plt+0x1d86c>
  420e60:	cmp	w0, #0x3c9
  420e64:	b.hi	420ebc <ferror@plt+0x1e18c>  // b.pmore
  420e68:	cmp	w0, #0x390
  420e6c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420e70:	sub	w1, w0, #0x391
  420e74:	mov	x0, #0x1                   	// #1
  420e78:	lsl	x0, x0, x1
  420e7c:	mov	x1, #0x4151                	// #16721
  420e80:	movk	x1, #0x100, lsl #16
  420e84:	movk	x1, #0x4151, lsl #32
  420e88:	movk	x1, #0x111, lsl #48
  420e8c:	tst	x0, x1
  420e90:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420e94:	b	42059c <ferror@plt+0x1d86c>
  420e98:	sub	w1, w0, #0x1, lsl #12
  420e9c:	sub	w1, w1, #0xfc3
  420ea0:	mov	x0, #0x1                   	// #1
  420ea4:	lsl	x0, x0, x1
  420ea8:	mov	x1, #0x201                 	// #513
  420eac:	movk	x1, #0x201, lsl #48
  420eb0:	tst	x0, x1
  420eb4:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420eb8:	b	42059c <ferror@plt+0x1d86c>
  420ebc:	mov	w1, #0x1ffc                	// #8188
  420ec0:	cmp	w0, w1
  420ec4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420ec8:	mov	w1, #0x1fc2                	// #8130
  420ecc:	cmp	w0, w1
  420ed0:	b.hi	420e98 <ferror@plt+0x1e168>  // b.pmore
  420ed4:	mov	w1, #0x1fb3                	// #8115
  420ed8:	cmp	w0, w1
  420edc:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420ee0:	mov	w1, #0x1fbc                	// #8124
  420ee4:	cmp	w0, w1
  420ee8:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420eec:	b	42059c <ferror@plt+0x1d86c>
  420ef0:	cmp	w0, #0x3c9
  420ef4:	b.hi	420f4c <ferror@plt+0x1e21c>  // b.pmore
  420ef8:	cmp	w0, #0x390
  420efc:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  420f00:	sub	w1, w0, #0x391
  420f04:	mov	x0, #0x1                   	// #1
  420f08:	lsl	x0, x0, x1
  420f0c:	mov	x1, #0x4151                	// #16721
  420f10:	movk	x1, #0x111, lsl #16
  420f14:	movk	x1, #0x4151, lsl #32
  420f18:	movk	x1, #0x111, lsl #48
  420f1c:	tst	x0, x1
  420f20:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420f24:	b	42059c <ferror@plt+0x1d86c>
  420f28:	sub	w1, w0, #0x1, lsl #12
  420f2c:	sub	w1, w1, #0xfc3
  420f30:	mov	x0, #0x1                   	// #1
  420f34:	lsl	x0, x0, x1
  420f38:	mov	x1, #0x201                 	// #513
  420f3c:	movk	x1, #0x201, lsl #48
  420f40:	tst	x0, x1
  420f44:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420f48:	b	42059c <ferror@plt+0x1d86c>
  420f4c:	mov	w1, #0x1ffc                	// #8188
  420f50:	cmp	w0, w1
  420f54:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420f58:	mov	w1, #0x1fc2                	// #8130
  420f5c:	cmp	w0, w1
  420f60:	b.hi	420f28 <ferror@plt+0x1e1f8>  // b.pmore
  420f64:	mov	w1, #0x1fb3                	// #8115
  420f68:	cmp	w0, w1
  420f6c:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  420f70:	mov	w1, #0x1fbc                	// #8124
  420f74:	cmp	w0, w1
  420f78:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  420f7c:	b	42059c <ferror@plt+0x1d86c>
  420f80:	cmp	w0, #0x171
  420f84:	b.hi	420ff8 <ferror@plt+0x1e2c8>  // b.pmore
  420f88:	cmp	w0, #0x167
  420f8c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  420f90:	cmp	w0, #0xfc
  420f94:	b.hi	420fe8 <ferror@plt+0x1e2b8>  // b.pmore
  420f98:	cmp	w0, #0xd1
  420f9c:	b.hi	420fc8 <ferror@plt+0x1e298>  // b.pmore
  420fa0:	sub	w1, w0, #0x4f
  420fa4:	cmp	w1, #0x26
  420fa8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420fac:	mov	x0, #0x1                   	// #1
  420fb0:	lsl	x0, x0, x1
  420fb4:	mov	x1, #0x41                  	// #65
  420fb8:	movk	x1, #0x41, lsl #32
  420fbc:	tst	x0, x1
  420fc0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420fc4:	b	42059c <ferror@plt+0x1d86c>
  420fc8:	sub	w1, w0, #0xd2
  420fcc:	mov	x0, #0x1                   	// #1
  420fd0:	lsl	x0, x0, x1
  420fd4:	mov	x1, #0x79f                 	// #1951
  420fd8:	movk	x1, #0x79f, lsl #32
  420fdc:	tst	x0, x1
  420fe0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  420fe4:	b	42059c <ferror@plt+0x1d86c>
  420fe8:	sub	w0, w0, #0x14c
  420fec:	cmp	w0, #0x5
  420ff0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  420ff4:	b	42059c <ferror@plt+0x1d86c>
  420ff8:	mov	w1, #0x1e53                	// #7763
  420ffc:	cmp	w0, w1
  421000:	b.hi	42104c <ferror@plt+0x1e31c>  // b.pmore
  421004:	mov	w1, #0x1e4b                	// #7755
  421008:	cmp	w0, w1
  42100c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421010:	cmp	w0, #0x1dc
  421014:	b.ls	421040 <ferror@plt+0x1e310>  // b.plast
  421018:	sub	w1, w0, #0x20c
  42101c:	cmp	w1, #0x25
  421020:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421024:	mov	x0, #0x1                   	// #1
  421028:	lsl	x0, x0, x1
  42102c:	mov	x1, #0x3fc0000000          	// #273804165120
  421030:	movk	x1, #0xf0f
  421034:	tst	x0, x1
  421038:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42103c:	b	42059c <ferror@plt+0x1d86c>
  421040:	cmp	w0, #0x1d0
  421044:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421048:	b	42059c <ferror@plt+0x1d86c>
  42104c:	mov	w1, #0x1ed9                	// #7897
  421050:	cmp	w0, w1
  421054:	b.hi	421078 <ferror@plt+0x1e348>  // b.pmore
  421058:	mov	w1, #0x1ecb                	// #7883
  42105c:	cmp	w0, w1
  421060:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421064:	sub	w0, w0, #0x1, lsl #12
  421068:	sub	w0, w0, #0xe72
  42106c:	cmp	w0, #0x9
  421070:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421074:	b	42059c <ferror@plt+0x1d86c>
  421078:	sub	w0, w0, #0x1, lsl #12
  42107c:	sub	w0, w0, #0xee4
  421080:	cmp	w0, #0x3
  421084:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421088:	b	42059c <ferror@plt+0x1d86c>
  42108c:	cmp	w0, #0x233
  421090:	b.hi	4210c0 <ferror@plt+0x1e390>  // b.pmore
  421094:	cmp	w0, #0x40
  421098:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42109c:	sub	w0, w0, #0x41
  4210a0:	cmp	w0, #0x1f2
  4210a4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4210a8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x1dc60>
  4210ac:	add	x1, x1, #0xf20
  4210b0:	ldrh	w0, [x1, w0, uxtw #1]
  4210b4:	adr	x1, 4210c0 <ferror@plt+0x1e390>
  4210b8:	add	x0, x1, w0, sxth #2
  4210bc:	br	x0
  4210c0:	sub	w1, w0, #0x1, lsl #12
  4210c4:	sub	w1, w1, #0xe02
  4210c8:	cmp	w1, #0xf7
  4210cc:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4210d0:	sub	w0, w0, #0x1, lsl #12
  4210d4:	sub	w0, w0, #0xe02
  4210d8:	cmp	w0, #0xf7
  4210dc:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4210e0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  4210e4:	add	x1, x1, #0x308
  4210e8:	ldrh	w0, [x1, w0, uxtw #1]
  4210ec:	adr	x1, 4210f8 <ferror@plt+0x1e3c8>
  4210f0:	add	x0, x1, w0, sxth #2
  4210f4:	br	x0
  4210f8:	cmp	w0, #0x171
  4210fc:	b.hi	421138 <ferror@plt+0x1e408>  // b.pmore
  421100:	cmp	w0, #0x167
  421104:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421108:	cmp	w0, #0xdc
  42110c:	b.hi	421128 <ferror@plt+0x1e3f8>  // b.pmore
  421110:	cmp	w0, #0xd8
  421114:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421118:	and	w0, w0, #0xffffffdf
  42111c:	cmp	w0, #0x55
  421120:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  421124:	b	42059c <ferror@plt+0x1d86c>
  421128:	sub	w0, w0, #0xf9
  42112c:	cmp	w0, #0x3
  421130:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421134:	b	42059c <ferror@plt+0x1d86c>
  421138:	mov	w1, #0x1e7b                	// #7803
  42113c:	cmp	w0, w1
  421140:	b.hi	421174 <ferror@plt+0x1e444>  // b.pmore
  421144:	mov	w1, #0x1e77                	// #7799
  421148:	cmp	w0, w1
  42114c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421150:	cmp	w0, #0x1dc
  421154:	b.hi	421164 <ferror@plt+0x1e434>  // b.pmore
  421158:	cmp	w0, #0x1d2
  42115c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421160:	b	42059c <ferror@plt+0x1d86c>
  421164:	sub	w0, w0, #0x214
  421168:	cmp	w0, #0x3
  42116c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421170:	b	42059c <ferror@plt+0x1d86c>
  421174:	sub	w0, w0, #0x1, lsl #12
  421178:	sub	w0, w0, #0xee6
  42117c:	cmp	w0, #0x1
  421180:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421184:	b	42059c <ferror@plt+0x1d86c>
  421188:	cmp	w0, #0x1e1
  42118c:	b.hi	4211f4 <ferror@plt+0x1e4c4>  // b.pmore
  421190:	cmp	w0, #0x1dd
  421194:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421198:	cmp	w0, #0xe5
  42119c:	b.hi	4211d0 <ferror@plt+0x1e4a0>  // b.pmore
  4211a0:	cmp	w0, #0xdf
  4211a4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4211a8:	cmp	w0, #0x61
  4211ac:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  4211b0:	b.ls	4211c4 <ferror@plt+0x1e494>  // b.plast
  4211b4:	sub	w0, w0, #0xc0
  4211b8:	cmp	w0, #0x5
  4211bc:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4211c0:	b	42059c <ferror@plt+0x1d86c>
  4211c4:	cmp	w0, #0x41
  4211c8:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  4211cc:	b	42059c <ferror@plt+0x1d86c>
  4211d0:	cmp	w0, #0x103
  4211d4:	b.hi	4211e4 <ferror@plt+0x1e4b4>  // b.pmore
  4211d8:	cmp	w0, #0xff
  4211dc:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  4211e0:	b	42059c <ferror@plt+0x1d86c>
  4211e4:	sub	w0, w0, #0x1cd
  4211e8:	cmp	w0, #0x1
  4211ec:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4211f0:	b	42059c <ferror@plt+0x1d86c>
  4211f4:	cmp	w0, #0x227
  4211f8:	b.hi	421224 <ferror@plt+0x1e4f4>  // b.pmore
  4211fc:	cmp	w0, #0x1f9
  421200:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421204:	sub	w1, w0, #0x1fa
  421208:	mov	x0, #0x1                   	// #1
  42120c:	lsl	x0, x0, x1
  421210:	mov	x1, #0x3c3                 	// #963
  421214:	movk	x1, #0x3000, lsl #32
  421218:	tst	x0, x1
  42121c:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421220:	b	42059c <ferror@plt+0x1d86c>
  421224:	mov	w1, #0x1eab                	// #7851
  421228:	cmp	w0, w1
  42122c:	b.hi	421240 <ferror@plt+0x1e510>  // b.pmore
  421230:	mov	w1, #0x1ea1                	// #7841
  421234:	cmp	w0, w1
  421238:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42123c:	b	42059c <ferror@plt+0x1d86c>
  421240:	sub	w0, w0, #0x1, lsl #12
  421244:	sub	w0, w0, #0xeae
  421248:	cmp	w0, #0x7
  42124c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421250:	b	42059c <ferror@plt+0x1d86c>
  421254:	cmp	w0, #0x165
  421258:	b.hi	4212a4 <ferror@plt+0x1e574>  // b.pmore
  42125c:	cmp	w0, #0x159
  421260:	b.hi	421278 <ferror@plt+0x1e548>  // b.pmore
  421264:	cmp	w0, #0x54
  421268:	b.hi	421294 <ferror@plt+0x1e564>  // b.pmore
  42126c:	cmp	w0, #0x52
  421270:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421274:	b	42059c <ferror@plt+0x1d86c>
  421278:	sub	w1, w0, #0x15a
  42127c:	mov	x0, #0x1                   	// #1
  421280:	lsl	x0, x0, x1
  421284:	mov	x1, #0xccf                 	// #3279
  421288:	tst	x0, x1
  42128c:	b.ne	42059c <ferror@plt+0x1d86c>  // b.any
  421290:	b	4203f4 <ferror@plt+0x1d6c4>
  421294:	sub	w0, w0, #0x73
  421298:	cmp	w0, #0x1
  42129c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4212a0:	b	42059c <ferror@plt+0x1d86c>
  4212a4:	sub	w1, w0, #0x1, lsl #12
  4212a8:	sub	w1, w1, #0xe60
  4212ac:	cmp	w1, #0x37
  4212b0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4212b4:	mov	x0, #0x1                   	// #1
  4212b8:	lsl	x0, x0, x1
  4212bc:	mov	x1, #0xcf3                 	// #3315
  4212c0:	movk	x1, #0x80, lsl #48
  4212c4:	tst	x0, x1
  4212c8:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4212cc:	b	42059c <ferror@plt+0x1d86c>
  4212d0:	cmp	w0, #0x21f
  4212d4:	b.hi	421304 <ferror@plt+0x1e5d4>  // b.pmore
  4212d8:	cmp	w0, #0x42
  4212dc:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  4212e0:	sub	w0, w0, #0x43
  4212e4:	cmp	w0, #0x1dc
  4212e8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4212ec:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  4212f0:	add	x1, x1, #0x4f8
  4212f4:	ldrh	w0, [x1, w0, uxtw #1]
  4212f8:	adr	x1, 421304 <ferror@plt+0x1e5d4>
  4212fc:	add	x0, x1, w0, sxth #2
  421300:	br	x0
  421304:	mov	w1, #0x1e3d                	// #7741
  421308:	cmp	w0, w1
  42130c:	b.hi	421348 <ferror@plt+0x1e618>  // b.pmore
  421310:	mov	w1, #0x1e09                	// #7689
  421314:	cmp	w0, w1
  421318:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42131c:	sub	w1, w0, #0x1, lsl #12
  421320:	sub	w1, w1, #0xe0a
  421324:	mov	x0, #0x1                   	// #1
  421328:	lsl	x0, x0, x1
  42132c:	mov	x1, #0xff3f                	// #65343
  421330:	movk	x1, #0x3fc3, lsl #16
  421334:	movk	x1, #0xffc3, lsl #32
  421338:	movk	x1, #0xf, lsl #48
  42133c:	tst	x0, x1
  421340:	b.ne	42059c <ferror@plt+0x1d86c>  // b.any
  421344:	b	4203f4 <ferror@plt+0x1d6c4>
  421348:	mov	w1, #0x1e97                	// #7831
  42134c:	cmp	w0, w1
  421350:	b.hi	421390 <ferror@plt+0x1e660>  // b.pmore
  421354:	mov	w1, #0x1e95                	// #7829
  421358:	cmp	w0, w1
  42135c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421360:	mov	w1, #0x1e4b                	// #7755
  421364:	cmp	w0, w1
  421368:	b.hi	42137c <ferror@plt+0x1e64c>  // b.pmore
  42136c:	mov	w1, #0x1e43                	// #7747
  421370:	cmp	w0, w1
  421374:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421378:	b	42059c <ferror@plt+0x1d86c>
  42137c:	sub	w0, w0, #0x1, lsl #12
  421380:	sub	w0, w0, #0xe58
  421384:	cmp	w0, #0x19
  421388:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42138c:	b	42059c <ferror@plt+0x1d86c>
  421390:	sub	w0, w0, #0x1, lsl #12
  421394:	sub	w0, w0, #0xeb8
  421398:	cmp	w0, #0xf
  42139c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4213a0:	b	42059c <ferror@plt+0x1d86c>
  4213a4:	cmp	w0, #0x231
  4213a8:	b.hi	421408 <ferror@plt+0x1e6d8>  // b.pmore
  4213ac:	cmp	w0, #0xbf
  4213b0:	b.hi	4213e4 <ferror@plt+0x1e6b4>  // b.pmore
  4213b4:	sub	w1, w0, #0x41
  4213b8:	cmp	w1, #0x34
  4213bc:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4213c0:	mov	x0, #0x1                   	// #1
  4213c4:	lsl	x0, x0, x1
  4213c8:	mov	x1, #0x4111                	// #16657
  4213cc:	movk	x1, #0x10, lsl #16
  4213d0:	movk	x1, #0x4111, lsl #32
  4213d4:	movk	x1, #0x10, lsl #48
  4213d8:	tst	x0, x1
  4213dc:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4213e0:	b	42059c <ferror@plt+0x1d86c>
  4213e4:	sub	w0, w0, #0xc0
  4213e8:	cmp	w0, #0x171
  4213ec:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4213f0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  4213f4:	add	x1, x1, #0x8b4
  4213f8:	ldrh	w0, [x1, w0, uxtw #1]
  4213fc:	adr	x1, 421408 <ferror@plt+0x1e6d8>
  421400:	add	x0, x1, w0, sxth #2
  421404:	br	x0
  421408:	mov	w1, #0x1e53                	// #7763
  42140c:	cmp	w0, w1
  421410:	b.hi	421450 <ferror@plt+0x1e720>  // b.pmore
  421414:	mov	w1, #0x1e4b                	// #7755
  421418:	cmp	w0, w1
  42141c:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421420:	sub	w1, w0, #0x1, lsl #12
  421424:	sub	w1, w1, #0xe00
  421428:	cmp	w1, #0x2f
  42142c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421430:	mov	x0, #0x1                   	// #1
  421434:	lsl	x0, x0, x1
  421438:	mov	x1, #0x3                   	// #3
  42143c:	movk	x1, #0xff0, lsl #16
  421440:	movk	x1, #0xf000, lsl #32
  421444:	tst	x0, x1
  421448:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42144c:	b	42059c <ferror@plt+0x1d86c>
  421450:	mov	w1, #0x1e7b                	// #7803
  421454:	cmp	w0, w1
  421458:	b.hi	42146c <ferror@plt+0x1e73c>  // b.pmore
  42145c:	mov	w1, #0x1e71                	// #7793
  421460:	cmp	w0, w1
  421464:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421468:	b	42059c <ferror@plt+0x1d86c>
  42146c:	sub	w0, w0, #0x1, lsl #12
  421470:	sub	w0, w0, #0xea0
  421474:	cmp	w0, #0x51
  421478:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42147c:	b	42059c <ferror@plt+0x1d86c>
  421480:	cmp	w0, #0x171
  421484:	b.hi	4214d8 <ferror@plt+0x1e7a8>  // b.pmore
  421488:	cmp	w0, #0x43
  42148c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421490:	sub	w0, w0, #0x44
  421494:	cmp	w0, #0x12d
  421498:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42149c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  4214a0:	add	x1, x1, #0xb98
  4214a4:	ldrh	w0, [x1, w0, uxtw #1]
  4214a8:	adr	x1, 4214b4 <ferror@plt+0x1e784>
  4214ac:	add	x0, x1, w0, sxth #2
  4214b0:	br	x0
  4214b4:	sub	w1, w0, #0x1, lsl #12
  4214b8:	sub	w1, w1, #0xe0a
  4214bc:	mov	x0, #0x1                   	// #1
  4214c0:	lsl	x0, x0, x1
  4214c4:	mov	x1, #0x3c03                	// #15363
  4214c8:	movk	x1, #0xc00, lsl #48
  4214cc:	tst	x0, x1
  4214d0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4214d4:	b	42059c <ferror@plt+0x1d86c>
  4214d8:	mov	w1, #0x1e45                	// #7749
  4214dc:	cmp	w0, w1
  4214e0:	b.hi	42152c <ferror@plt+0x1e7fc>  // b.pmore
  4214e4:	mov	w1, #0x1e09                	// #7689
  4214e8:	cmp	w0, w1
  4214ec:	b.hi	4214b4 <ferror@plt+0x1e784>  // b.pmore
  4214f0:	cmp	w0, #0x1dc
  4214f4:	b.ls	421520 <ferror@plt+0x1e7f0>  // b.plast
  4214f8:	sub	w1, w0, #0x1f8
  4214fc:	cmp	w1, #0x1f
  421500:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421504:	mov	x0, #0x1                   	// #1
  421508:	lsl	x0, x0, x1
  42150c:	mov	x1, #0xf003                	// #61443
  421510:	movk	x1, #0xf000, lsl #16
  421514:	tst	x0, x1
  421518:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42151c:	b	42059c <ferror@plt+0x1d86c>
  421520:	cmp	w0, #0x1d2
  421524:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421528:	b	42059c <ferror@plt+0x1d86c>
  42152c:	mov	w1, #0x1e97                	// #7831
  421530:	cmp	w0, w1
  421534:	b.hi	42156c <ferror@plt+0x1e83c>  // b.pmore
  421538:	mov	w1, #0x1e69                	// #7785
  42153c:	cmp	w0, w1
  421540:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421544:	sub	w1, w0, #0x1, lsl #12
  421548:	sub	w1, w1, #0xe6a
  42154c:	mov	x0, #0x1                   	// #1
  421550:	lsl	x0, x0, x1
  421554:	mov	x1, #0xc003                	// #49155
  421558:	movk	x1, #0x3, lsl #16
  42155c:	movk	x1, #0x2000, lsl #32
  421560:	tst	x0, x1
  421564:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421568:	b	42059c <ferror@plt+0x1d86c>
  42156c:	mov	w1, #0x1ec5                	// #7877
  421570:	cmp	w0, w1
  421574:	b.hi	421588 <ferror@plt+0x1e858>  // b.pmore
  421578:	mov	w1, #0x1eb9                	// #7865
  42157c:	cmp	w0, w1
  421580:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421584:	b	42059c <ferror@plt+0x1d86c>
  421588:	sub	w0, w0, #0x1, lsl #12
  42158c:	sub	w0, w0, #0xee6
  421590:	cmp	w0, #0x1
  421594:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421598:	b	42059c <ferror@plt+0x1d86c>
  42159c:	cmp	w0, #0x21f
  4215a0:	b.hi	4215d4 <ferror@plt+0x1e8a4>  // b.pmore
  4215a4:	cmp	w0, #0x21d
  4215a8:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4215ac:	cmp	w0, #0x68
  4215b0:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  4215b4:	b.ls	4215c8 <ferror@plt+0x1e898>  // b.plast
  4215b8:	sub	w0, w0, #0x124
  4215bc:	cmp	w0, #0x1
  4215c0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4215c4:	b	42059c <ferror@plt+0x1d86c>
  4215c8:	cmp	w0, #0x48
  4215cc:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  4215d0:	b	42059c <ferror@plt+0x1d86c>
  4215d4:	mov	w1, #0x1e23                	// #7715
  4215d8:	cmp	w0, w1
  4215dc:	b.hi	4215f0 <ferror@plt+0x1e8c0>  // b.pmore
  4215e0:	mov	w1, #0x1e21                	// #7713
  4215e4:	cmp	w0, w1
  4215e8:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  4215ec:	b	42059c <ferror@plt+0x1d86c>
  4215f0:	sub	w0, w0, #0x1, lsl #12
  4215f4:	sub	w0, w0, #0xe26
  4215f8:	cmp	w0, #0x1
  4215fc:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421600:	b	42059c <ferror@plt+0x1d86c>
  421604:	cmp	w0, #0x130
  421608:	b.hi	4216c0 <ferror@plt+0x1e990>  // b.pmore
  42160c:	cmp	w0, #0xf8
  421610:	b.hi	421670 <ferror@plt+0x1e940>  // b.pmore
  421614:	cmp	w0, #0x75
  421618:	b.hi	421698 <ferror@plt+0x1e968>  // b.pmore
  42161c:	cmp	w0, #0x44
  421620:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421624:	sub	w1, w0, #0x45
  421628:	mov	x0, #0x1                   	// #1
  42162c:	lsl	x0, x0, x1
  421630:	mov	x1, #0x11                  	// #17
  421634:	movk	x1, #0x1, lsl #16
  421638:	movk	x1, #0x11, lsl #32
  42163c:	movk	x1, #0x1, lsl #48
  421640:	tst	x0, x1
  421644:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421648:	b	42059c <ferror@plt+0x1d86c>
  42164c:	sub	w1, w0, #0x1, lsl #12
  421650:	sub	w1, w1, #0xeba
  421654:	mov	x0, #0x1                   	// #1
  421658:	lsl	x0, x0, x1
  42165c:	mov	x1, #0xcfff                	// #53247
  421660:	movk	x1, #0x3000, lsl #32
  421664:	tst	x0, x1
  421668:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42166c:	b	42059c <ferror@plt+0x1d86c>
  421670:	sub	w1, w0, #0xf9
  421674:	mov	x0, #0x1                   	// #1
  421678:	lsl	x0, x0, x1
  42167c:	mov	x1, #0xf                   	// #15
  421680:	movk	x1, #0x7e00, lsl #16
  421684:	movk	x1, #0x8006, lsl #32
  421688:	movk	x1, #0x9f, lsl #48
  42168c:	tst	x0, x1
  421690:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421694:	b	42059c <ferror@plt+0x1d86c>
  421698:	sub	w1, w0, #0xc8
  42169c:	cmp	w1, #0x27
  4216a0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4216a4:	mov	x0, #0x1                   	// #1
  4216a8:	lsl	x0, x0, x1
  4216ac:	mov	x1, #0xff000000ff          	// #1095216660735
  4216b0:	movk	x1, #0x1e, lsl #16
  4216b4:	tst	x0, x1
  4216b8:	b.ne	42059c <ferror@plt+0x1d86c>  // b.any
  4216bc:	b	4203f4 <ferror@plt+0x1d6c4>
  4216c0:	mov	w1, #0x1e17                	// #7703
  4216c4:	cmp	w0, w1
  4216c8:	b.hi	421730 <ferror@plt+0x1ea00>  // b.pmore
  4216cc:	mov	w1, #0x1e13                	// #7699
  4216d0:	cmp	w0, w1
  4216d4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4216d8:	cmp	w0, #0x1dc
  4216dc:	b.hi	42170c <ferror@plt+0x1e9dc>  // b.pmore
  4216e0:	cmp	w0, #0x1d2
  4216e4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4216e8:	cmp	w0, #0x171
  4216ec:	b.hi	4216fc <ferror@plt+0x1e9cc>  // b.pmore
  4216f0:	cmp	w0, #0x167
  4216f4:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  4216f8:	b	42059c <ferror@plt+0x1d86c>
  4216fc:	sub	w0, w0, #0x1cf
  421700:	cmp	w0, #0x1
  421704:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421708:	b	42059c <ferror@plt+0x1d86c>
  42170c:	cmp	w0, #0x20b
  421710:	b.hi	421720 <ferror@plt+0x1e9f0>  // b.pmore
  421714:	cmp	w0, #0x203
  421718:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  42171c:	b	42059c <ferror@plt+0x1d86c>
  421720:	sub	w0, w0, #0x214
  421724:	cmp	w0, #0x3
  421728:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42172c:	b	42059c <ferror@plt+0x1d86c>
  421730:	mov	w1, #0x1ee7                	// #7911
  421734:	cmp	w0, w1
  421738:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42173c:	mov	w1, #0x1eb9                	// #7865
  421740:	cmp	w0, w1
  421744:	b.hi	42164c <ferror@plt+0x1e91c>  // b.pmore
  421748:	mov	w1, #0x1e2f                	// #7727
  42174c:	cmp	w0, w1
  421750:	b.hi	421764 <ferror@plt+0x1ea34>  // b.pmore
  421754:	mov	w1, #0x1e2d                	// #7725
  421758:	cmp	w0, w1
  42175c:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421760:	b	42059c <ferror@plt+0x1d86c>
  421764:	sub	w0, w0, #0x1, lsl #12
  421768:	sub	w0, w0, #0xe78
  42176c:	cmp	w0, #0x3
  421770:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421774:	b	42059c <ferror@plt+0x1d86c>
  421778:	cmp	w0, #0x13e
  42177c:	b.hi	421820 <ferror@plt+0x1eaf0>  // b.pmore
  421780:	cmp	w0, #0x10d
  421784:	b.hi	4217e8 <ferror@plt+0x1eab8>  // b.pmore
  421788:	cmp	w0, #0x7a
  42178c:	b.hi	421810 <ferror@plt+0x1eae0>  // b.pmore
  421790:	cmp	w0, #0x41
  421794:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421798:	sub	w1, w0, #0x42
  42179c:	mov	x0, #0x1                   	// #1
  4217a0:	lsl	x0, x0, x1
  4217a4:	mov	x1, #0x1605                	// #5637
  4217a8:	movk	x1, #0x105, lsl #16
  4217ac:	movk	x1, #0x1645, lsl #32
  4217b0:	movk	x1, #0x105, lsl #48
  4217b4:	tst	x0, x1
  4217b8:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4217bc:	b	42059c <ferror@plt+0x1d86c>
  4217c0:	sub	w1, w0, #0x1, lsl #12
  4217c4:	sub	w1, w1, #0xe23
  4217c8:	mov	x0, #0x1                   	// #1
  4217cc:	lsl	x0, x0, x1
  4217d0:	mov	x1, #0x6011                	// #24593
  4217d4:	movk	x1, #0x6, lsl #32
  4217d8:	movk	x1, #0x60, lsl #48
  4217dc:	tst	x0, x1
  4217e0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4217e4:	b	42059c <ferror@plt+0x1d86c>
  4217e8:	sub	w1, w0, #0x10e
  4217ec:	mov	x0, #0x1                   	// #1
  4217f0:	lsl	x0, x0, x1
  4217f4:	mov	x1, #0x3                   	// #3
  4217f8:	movk	x1, #0x80, lsl #16
  4217fc:	movk	x1, #0x9800, lsl #32
  421800:	movk	x1, #0x1, lsl #48
  421804:	tst	x0, x1
  421808:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42180c:	b	42059c <ferror@plt+0x1d86c>
  421810:	and	w0, w0, #0xffffffdf
  421814:	cmp	w0, #0xd1
  421818:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  42181c:	b	42059c <ferror@plt+0x1d86c>
  421820:	mov	w1, #0x1e03                	// #7683
  421824:	cmp	w0, w1
  421828:	b.hi	4218a0 <ferror@plt+0x1eb70>  // b.pmore
  42182c:	mov	w1, #0x1e01                	// #7681
  421830:	cmp	w0, w1
  421834:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  421838:	cmp	w0, #0x17e
  42183c:	b.hi	421870 <ferror@plt+0x1eb40>  // b.pmore
  421840:	cmp	w0, #0x142
  421844:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421848:	sub	w1, w0, #0x143
  42184c:	mov	x0, #0x1                   	// #1
  421850:	lsl	x0, x0, x1
  421854:	mov	x1, #0x33                  	// #51
  421858:	movk	x1, #0x66, lsl #16
  42185c:	movk	x1, #0x6, lsl #32
  421860:	movk	x1, #0xfc0, lsl #48
  421864:	tst	x0, x1
  421868:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42186c:	b	42059c <ferror@plt+0x1d86c>
  421870:	sub	w1, w0, #0x1e8
  421874:	cmp	w1, #0x37
  421878:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42187c:	mov	x0, #0x1                   	// #1
  421880:	lsl	x0, x0, x1
  421884:	mov	x1, #0x3                   	// #3
  421888:	movk	x1, #0x3, lsl #16
  42188c:	movk	x1, #0xf00, lsl #32
  421890:	movk	x1, #0x80, lsl #48
  421894:	tst	x0, x1
  421898:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42189c:	b	42059c <ferror@plt+0x1d86c>
  4218a0:	mov	w1, #0x1e59                	// #7769
  4218a4:	cmp	w0, w1
  4218a8:	b.hi	4218cc <ferror@plt+0x1eb9c>  // b.pmore
  4218ac:	mov	w1, #0x1e22                	// #7714
  4218b0:	cmp	w0, w1
  4218b4:	b.hi	4217c0 <ferror@plt+0x1ea90>  // b.pmore
  4218b8:	sub	w0, w0, #0x1, lsl #12
  4218bc:	sub	w0, w0, #0xe0a
  4218c0:	cmp	w0, #0x1
  4218c4:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4218c8:	b	42059c <ferror@plt+0x1d86c>
  4218cc:	sub	w1, w0, #0x1, lsl #12
  4218d0:	sub	w1, w1, #0xe6a
  4218d4:	cmp	w1, #0x2d
  4218d8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  4218dc:	mov	x0, #0x1                   	// #1
  4218e0:	lsl	x0, x0, x1
  4218e4:	mov	x1, #0x3                   	// #3
  4218e8:	movk	x1, #0x20c0, lsl #32
  4218ec:	tst	x0, x1
  4218f0:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  4218f4:	b	42059c <ferror@plt+0x1d86c>
  4218f8:	mov	w1, #0x1ffe                	// #8190
  4218fc:	cmp	w0, w1
  421900:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421904:	mov	w1, #0x1eff                	// #7935
  421908:	cmp	w0, w1
  42190c:	b.ls	421938 <ferror@plt+0x1ec08>  // b.plast
  421910:	sub	w0, w0, #0x1, lsl #12
  421914:	sub	w0, w0, #0xf00
  421918:	cmp	w0, #0xfe
  42191c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421920:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  421924:	add	x1, x1, #0xdf4
  421928:	ldrh	w0, [x1, w0, uxtw #1]
  42192c:	adr	x1, 421938 <ferror@plt+0x1ec08>
  421930:	add	x0, x1, w0, sxth #2
  421934:	br	x0
  421938:	cmp	w0, #0xa8
  42193c:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  421940:	sub	w1, w0, #0x3b1
  421944:	cmp	w1, #0x1a
  421948:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  42194c:	mov	x0, #0x1                   	// #1
  421950:	lsl	x0, x0, x1
  421954:	mov	x1, #0x141                 	// #321
  421958:	movk	x1, #0x710, lsl #16
  42195c:	tst	x0, x1
  421960:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421964:	b	42059c <ferror@plt+0x1d86c>
  421968:	cmp	w0, #0x3ce
  42196c:	b.hi	4219a0 <ferror@plt+0x1ec70>  // b.pmore
  421970:	cmp	w0, #0x390
  421974:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421978:	sub	w1, w0, #0x391
  42197c:	mov	x0, #0x1                   	// #1
  421980:	lsl	x0, x0, x1
  421984:	mov	x1, #0x41                  	// #65
  421988:	movk	x1, #0x2900, lsl #16
  42198c:	movk	x1, #0x41, lsl #32
  421990:	movk	x1, #0x2100, lsl #48
  421994:	tst	x0, x1
  421998:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  42199c:	b	42059c <ferror@plt+0x1d86c>
  4219a0:	mov	w1, #0x1f7c                	// #8060
  4219a4:	cmp	w0, w1
  4219a8:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  4219ac:	b.ls	4219d0 <ferror@plt+0x1eca0>  // b.plast
  4219b0:	mov	w1, #0x1fc6                	// #8134
  4219b4:	cmp	w0, w1
  4219b8:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  4219bc:	and	w0, w0, #0xffffffbf
  4219c0:	mov	w1, #0x1fb6                	// #8118
  4219c4:	cmp	w0, w1
  4219c8:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  4219cc:	b	42059c <ferror@plt+0x1d86c>
  4219d0:	mov	w1, #0x1f70                	// #8048
  4219d4:	cmp	w0, w1
  4219d8:	b.hi	421a18 <ferror@plt+0x1ece8>  // b.pmore
  4219dc:	mov	w1, #0x1f5f                	// #8031
  4219e0:	cmp	w0, w1
  4219e4:	b.hi	42059c <ferror@plt+0x1d86c>  // b.pmore
  4219e8:	mov	w1, #0x1f0f                	// #7951
  4219ec:	cmp	w0, w1
  4219f0:	b.hi	421a04 <ferror@plt+0x1ecd4>  // b.pmore
  4219f4:	mov	w1, #0x1eff                	// #7935
  4219f8:	cmp	w0, w1
  4219fc:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421a00:	b	42059c <ferror@plt+0x1d86c>
  421a04:	sub	w0, w0, #0x1, lsl #12
  421a08:	sub	w0, w0, #0xf20
  421a0c:	cmp	w0, #0xf
  421a10:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421a14:	b	42059c <ferror@plt+0x1d86c>
  421a18:	mov	w1, #0x1f74                	// #8052
  421a1c:	cmp	w0, w1
  421a20:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  421a24:	b	42059c <ferror@plt+0x1d86c>
  421a28:	cmp	w0, #0x64a
  421a2c:	b.hi	421a58 <ferror@plt+0x1ed28>  // b.pmore
  421a30:	cmp	w0, #0x626
  421a34:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421a38:	sub	w1, w0, #0x627
  421a3c:	mov	x0, #0x1                   	// #1
  421a40:	lsl	x0, x0, x1
  421a44:	mov	x1, #0x1                   	// #1
  421a48:	movk	x1, #0xa, lsl #32
  421a4c:	tst	x0, x1
  421a50:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421a54:	b	42059c <ferror@plt+0x1d86c>
  421a58:	sub	w1, w0, #0x6c1
  421a5c:	cmp	w1, #0x14
  421a60:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421a64:	mov	x0, #0x1                   	// #1
  421a68:	lsl	x0, x0, x1
  421a6c:	mov	x1, #0x1                   	// #1
  421a70:	movk	x1, #0x12, lsl #16
  421a74:	tst	x0, x1
  421a78:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421a7c:	b	42059c <ferror@plt+0x1d86c>
  421a80:	cmp	w0, #0x627
  421a84:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  421a88:	b	4203f4 <ferror@plt+0x1d6c4>
  421a8c:	sub	w1, w0, #0x915
  421a90:	cmp	w1, #0x1e
  421a94:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421a98:	mov	x0, #0x1                   	// #1
  421a9c:	lsl	x0, x0, x1
  421aa0:	mov	x1, #0x3087                	// #12423
  421aa4:	movk	x1, #0x4c48, lsl #16
  421aa8:	tst	x0, x1
  421aac:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421ab0:	b	42059c <ferror@plt+0x1d86c>
  421ab4:	cmp	w0, #0x9c7
  421ab8:	cset	w0, ne  // ne = any
  421abc:	b	420598 <ferror@plt+0x1d868>
  421ac0:	cmp	w0, #0xb47
  421ac4:	cset	w0, ne  // ne = any
  421ac8:	b	420598 <ferror@plt+0x1d868>
  421acc:	cmp	w0, #0xb47
  421ad0:	cset	w0, ne  // ne = any
  421ad4:	b	420598 <ferror@plt+0x1d868>
  421ad8:	cmp	w0, #0xb92
  421adc:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  421ae0:	cmp	w0, #0xbc6
  421ae4:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  421ae8:	b	42059c <ferror@plt+0x1d86c>
  421aec:	cmp	w0, #0xc46
  421af0:	cset	w0, ne  // ne = any
  421af4:	b	420598 <ferror@plt+0x1d868>
  421af8:	sub	w1, w0, #0xcbf
  421afc:	cmp	w1, #0xb
  421b00:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421b04:	mov	x0, #0x1                   	// #1
  421b08:	lsl	x0, x0, x1
  421b0c:	mov	x1, #0x881                 	// #2177
  421b10:	tst	x0, x1
  421b14:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421b18:	b	42059c <ferror@plt+0x1d86c>
  421b1c:	sub	w0, w0, #0xd46
  421b20:	cmp	w0, #0x1
  421b24:	cset	w0, hi  // hi = pmore
  421b28:	b	420598 <ferror@plt+0x1d868>
  421b2c:	cmp	w0, #0xdd9
  421b30:	b.eq	42059c <ferror@plt+0x1d86c>  // b.none
  421b34:	cmp	w0, #0xddc
  421b38:	b.ne	4203f4 <ferror@plt+0x1d6c4>  // b.any
  421b3c:	b	42059c <ferror@plt+0x1d86c>
  421b40:	sub	w0, w0, #0xdd9
  421b44:	cmp	w0, #0x1
  421b48:	cset	w0, hi  // hi = pmore
  421b4c:	b	420598 <ferror@plt+0x1d868>
  421b50:	mov	w1, #0x1025                	// #4133
  421b54:	cmp	w0, w1
  421b58:	cset	w0, ne  // ne = any
  421b5c:	b	420598 <ferror@plt+0x1d868>
  421b60:	sub	w1, w0, #0x1, lsl #12
  421b64:	sub	w1, w1, #0xb05
  421b68:	cmp	w1, #0x3d
  421b6c:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421b70:	mov	x0, #0x1                   	// #1
  421b74:	lsl	x0, x0, x1
  421b78:	mov	x1, #0x1155                	// #4437
  421b7c:	movk	x1, #0x26a0, lsl #48
  421b80:	tst	x0, x1
  421b84:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421b88:	b	42059c <ferror@plt+0x1d86c>
  421b8c:	mov	w1, #0x307b                	// #12411
  421b90:	cmp	w0, w1
  421b94:	b.hi	421bc4 <ferror@plt+0x1ee94>  // b.pmore
  421b98:	mov	w1, #0x306e                	// #12398
  421b9c:	cmp	w0, w1
  421ba0:	b.ls	4203f4 <ferror@plt+0x1d6c4>  // b.plast
  421ba4:	sub	w1, w0, #0x3, lsl #12
  421ba8:	sub	w1, w1, #0x6f
  421bac:	mov	x0, #0x1                   	// #1
  421bb0:	lsl	x0, x0, x1
  421bb4:	mov	x1, #0x1249                	// #4681
  421bb8:	tst	x0, x1
  421bbc:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421bc0:	b	42059c <ferror@plt+0x1d86c>
  421bc4:	sub	w1, w0, #0x3, lsl #12
  421bc8:	sub	w1, w1, #0xcf
  421bcc:	cmp	w1, #0xc
  421bd0:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421bd4:	mov	x0, #0x1                   	// #1
  421bd8:	lsl	x0, x0, x1
  421bdc:	mov	x1, #0x1249                	// #4681
  421be0:	tst	x0, x1
  421be4:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421be8:	b	42059c <ferror@plt+0x1d86c>
  421bec:	sub	w1, w0, #0x11, lsl #12
  421bf0:	sub	w1, w1, #0x99
  421bf4:	cmp	w1, #0xc
  421bf8:	b.hi	4203f4 <ferror@plt+0x1d6c4>  // b.pmore
  421bfc:	mov	x0, #0x1                   	// #1
  421c00:	lsl	x0, x0, x1
  421c04:	mov	x1, #0x1005                	// #4101
  421c08:	tst	x0, x1
  421c0c:	b.eq	4203f4 <ferror@plt+0x1d6c4>  // b.none
  421c10:	b	42059c <ferror@plt+0x1d86c>
  421c14:	mov	w3, w20
  421c18:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421c1c:	add	x2, x2, #0xc58
  421c20:	mov	w1, #0x4                   	// #4
  421c24:	mov	x0, x28
  421c28:	bl	426a10 <ferror@plt+0x23ce0>
  421c2c:	b	4203f4 <ferror@plt+0x1d6c4>
  421c30:	mov	w2, #0x1                   	// #1
  421c34:	cbz	w2, 42059c <ferror@plt+0x1d86c>
  421c38:	b	4203f4 <ferror@plt+0x1d6c4>
  421c3c:	ldr	x2, [sp, #136]
  421c40:	ldr	w0, [x2, #8]
  421c44:	cmp	w0, #0x2
  421c48:	mov	w1, #0x2                   	// #2
  421c4c:	csel	w0, w0, w1, ge  // ge = tcont
  421c50:	str	w0, [x2, #8]
  421c54:	b	4203f4 <ferror@plt+0x1d6c4>
  421c58:	tbnz	w21, #7, 4203f4 <ferror@plt+0x1d6c4>
  421c5c:	tbz	w21, #6, 421c78 <ferror@plt+0x1ef48>
  421c60:	ldr	x1, [sp, #136]
  421c64:	ldr	w0, [x1, #8]
  421c68:	cmp	w0, #0x0
  421c6c:	csinc	w0, w0, wzr, gt
  421c70:	str	w0, [x1, #8]
  421c74:	b	4203f4 <ferror@plt+0x1d6c4>
  421c78:	tbz	w21, #5, 421c98 <ferror@plt+0x1ef68>
  421c7c:	ldr	x2, [sp, #136]
  421c80:	ldr	w0, [x2, #8]
  421c84:	cmp	w0, #0x2
  421c88:	mov	w1, #0x2                   	// #2
  421c8c:	csel	w0, w0, w1, ge  // ge = tcont
  421c90:	str	w0, [x2, #8]
  421c94:	b	4203f4 <ferror@plt+0x1d6c4>
  421c98:	mov	w0, #0x3                   	// #3
  421c9c:	ldr	x1, [sp, #136]
  421ca0:	str	w0, [x1, #8]
  421ca4:	b	4203f4 <ferror@plt+0x1d6c4>
  421ca8:	sbfiz	x0, x3, #3, #32
  421cac:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x1fc60>
  421cb0:	add	x1, x1, #0x188
  421cb4:	ldrh	w21, [x1, x0]
  421cb8:	mov	w23, #0x10                  	// #16
  421cbc:	tbnz	w21, #3, 420394 <ferror@plt+0x1d664>
  421cc0:	b	4201d8 <ferror@plt+0x1d4a8>
  421cc4:	sub	w0, w20, #0xd, lsl #12
  421cc8:	sub	w0, w0, #0x800
  421ccc:	cmp	w0, #0x7ff
  421cd0:	b.ls	420230 <ferror@plt+0x1d500>  // b.plast
  421cd4:	b	4201c4 <ferror@plt+0x1d494>
  421cd8:	stp	x29, x30, [sp, #-384]!
  421cdc:	mov	x29, sp
  421ce0:	stp	x19, x20, [sp, #16]
  421ce4:	stp	x21, x22, [sp, #32]
  421ce8:	stp	x23, x24, [sp, #48]
  421cec:	str	x0, [sp, #112]
  421cf0:	mov	x19, x1
  421cf4:	str	x2, [sp, #184]
  421cf8:	str	x3, [sp, #136]
  421cfc:	mov	w1, w4
  421d00:	mov	x21, x5
  421d04:	str	x5, [sp, #192]
  421d08:	mov	x20, x6
  421d0c:	str	x6, [sp, #104]
  421d10:	add	x8, sp, #0x150
  421d14:	bl	41e9d4 <ferror@plt+0x1bca4>
  421d18:	ldr	x23, [sp, #336]
  421d1c:	ldr	x24, [sp, #344]
  421d20:	cmp	x20, #0x0
  421d24:	cset	w1, ne  // ne = any
  421d28:	str	w1, [sp, #176]
  421d2c:	cmp	x21, #0x0
  421d30:	cset	w0, ne  // ne = any
  421d34:	cmp	w0, w1
  421d38:	b.ne	421dac <ferror@plt+0x1f07c>  // b.any
  421d3c:	ldr	x0, [sp, #136]
  421d40:	cbz	x0, 4228c8 <ferror@plt+0x1fb98>
  421d44:	ldr	w0, [x19]
  421d48:	cmp	w0, #0x100
  421d4c:	mov	w1, #0x100                 	// #256
  421d50:	csel	w0, w0, w1, cs  // cs = hs, nlast
  421d54:	str	x0, [sp, #368]
  421d58:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  421d5c:	str	x0, [sp, #360]
  421d60:	str	xzr, [sp, #376]
  421d64:	ldr	x0, [sp, #184]
  421d68:	cbz	x0, 4227d0 <ferror@plt+0x1faa0>
  421d6c:	stp	x25, x26, [sp, #64]
  421d70:	stp	x27, x28, [sp, #80]
  421d74:	ldr	x0, [sp, #136]
  421d78:	cmp	x0, #0x0
  421d7c:	add	x27, sp, #0x168
  421d80:	csel	x27, x27, xzr, ne  // ne = any
  421d84:	add	x0, x19, #0x8
  421d88:	str	x0, [sp, #152]
  421d8c:	mov	x21, #0x0                   	// #0
  421d90:	str	xzr, [sp, #160]
  421d94:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x1fc60>
  421d98:	add	x0, x0, #0xa8
  421d9c:	str	x0, [sp, #200]
  421da0:	add	x0, x0, #0x10
  421da4:	str	x0, [sp, #144]
  421da8:	b	421f08 <ferror@plt+0x1f1d8>
  421dac:	stp	x25, x26, [sp, #64]
  421db0:	stp	x27, x28, [sp, #80]
  421db4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421db8:	add	x2, x2, #0xcf8
  421dbc:	mov	w1, #0x5fc                 	// #1532
  421dc0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421dc4:	add	x0, x0, #0xbc8
  421dc8:	bl	4102b4 <ferror@plt+0xd584>
  421dcc:	add	x19, x20, #0x1
  421dd0:	cbz	x21, 421dfc <ferror@plt+0x1f0cc>
  421dd4:	mov	x0, x21
  421dd8:	bl	41ff6c <ferror@plt+0x1d23c>
  421ddc:	ldrb	w0, [x20, #1]
  421de0:	cmp	w0, #0x38
  421de4:	b.eq	422848 <ferror@plt+0x1fb18>  // b.none
  421de8:	ldrb	w0, [x20, #1]
  421dec:	cmp	w0, #0x52
  421df0:	b.eq	4228a0 <ferror@plt+0x1fb70>  // b.none
  421df4:	mov	x20, x19
  421df8:	b	421f50 <ferror@plt+0x1f220>
  421dfc:	ldrb	w0, [x20, #1]
  421e00:	cmp	w0, #0x38
  421e04:	b.eq	421e1c <ferror@plt+0x1f0ec>  // b.none
  421e08:	ldrb	w0, [x20, #1]
  421e0c:	cmp	w0, #0x52
  421e10:	b.eq	422894 <ferror@plt+0x1fb64>  // b.none
  421e14:	mov	x20, x19
  421e18:	b	421f50 <ferror@plt+0x1f220>
  421e1c:	add	x20, x20, #0x2
  421e20:	b	421f44 <ferror@plt+0x1f214>
  421e24:	add	x26, x20, #0x2
  421e28:	cbnz	x21, 4228a4 <ferror@plt+0x1fb74>
  421e2c:	ldrb	w0, [x20, #2]
  421e30:	cmp	w0, #0x28
  421e34:	b.ne	4228c0 <ferror@plt+0x1fb90>  // b.any
  421e38:	add	x20, x20, #0x3
  421e3c:	b	421e74 <ferror@plt+0x1f144>
  421e40:	ldrb	w0, [x19]
  421e44:	cmp	w0, #0x28
  421e48:	b.eq	421e64 <ferror@plt+0x1f134>  // b.none
  421e4c:	mov	x20, x19
  421e50:	add	x19, x19, #0x1
  421e54:	cbz	x21, 421e40 <ferror@plt+0x1f110>
  421e58:	mov	x0, x21
  421e5c:	bl	41ff6c <ferror@plt+0x1d23c>
  421e60:	b	421e40 <ferror@plt+0x1f110>
  421e64:	add	x20, x20, #0x2
  421e68:	cbz	x21, 421e74 <ferror@plt+0x1f144>
  421e6c:	mov	x0, x21
  421e70:	bl	41ff6c <ferror@plt+0x1d23c>
  421e74:	ldur	w19, [x25, #-8]
  421e78:	ldr	x0, [x25]
  421e7c:	add	x19, x0, x19
  421e80:	sub	x26, x20, x26
  421e84:	add	x1, x26, #0x1
  421e88:	add	x1, x20, x1
  421e8c:	mvn	x26, x26
  421e90:	add	x0, x19, x26
  421e94:	cmp	x19, x1
  421e98:	csel	x19, x0, x19, cs  // cs = hs, nlast
  421e9c:	ldr	x0, [sp, #136]
  421ea0:	cbz	x0, 421ec0 <ferror@plt+0x1f190>
  421ea4:	add	x3, sp, #0x168
  421ea8:	sub	x2, x19, x20
  421eac:	mov	x1, x20
  421eb0:	mov	x0, x24
  421eb4:	blr	x23
  421eb8:	and	w0, w0, #0xff
  421ebc:	cbz	w0, 4227d8 <ferror@plt+0x1faa8>
  421ec0:	cbz	x21, 421ee4 <ferror@plt+0x1f1b4>
  421ec4:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  421ec8:	add	x0, x0, #0xfe0
  421ecc:	cmp	x23, x0
  421ed0:	b.ne	421f84 <ferror@plt+0x1f254>  // b.any
  421ed4:	mov	x2, x21
  421ed8:	sub	w1, w19, w20
  421edc:	ldr	x0, [sp, #104]
  421ee0:	bl	41ff94 <ferror@plt+0x1d264>
  421ee4:	ldr	x0, [sp, #160]
  421ee8:	add	x0, x0, #0x1
  421eec:	str	x0, [sp, #160]
  421ef0:	ldr	x1, [sp, #152]
  421ef4:	add	x1, x1, #0x10
  421ef8:	str	x1, [sp, #152]
  421efc:	ldr	x1, [sp, #184]
  421f00:	cmp	x1, x0
  421f04:	b.eq	422744 <ferror@plt+0x1fa14>  // b.none
  421f08:	ldr	x0, [sp, #160]
  421f0c:	ldr	x1, [sp, #192]
  421f10:	add	x0, x1, x0, lsl #4
  421f14:	cmp	x1, #0x0
  421f18:	csel	x21, x0, x21, ne  // ne = any
  421f1c:	ldr	x0, [sp, #152]
  421f20:	mov	x25, x0
  421f24:	ldr	x20, [x0]
  421f28:	ldrb	w0, [x20]
  421f2c:	cmp	w0, #0x75
  421f30:	b.eq	421dcc <ferror@plt+0x1f09c>  // b.none
  421f34:	cmp	w0, #0x4c
  421f38:	mov	w1, #0x55                  	// #85
  421f3c:	ccmp	w0, w1, #0x4, ne  // ne = any
  421f40:	cinc	x20, x20, eq  // eq = none
  421f44:	ldrb	w0, [x20]
  421f48:	cmp	w0, #0x52
  421f4c:	b.eq	421e24 <ferror@plt+0x1f0f4>  // b.none
  421f50:	cmp	w0, #0x27
  421f54:	mov	w1, #0x22                  	// #34
  421f58:	ccmp	w0, w1, #0x4, ne  // ne = any
  421f5c:	b.ne	421f9c <ferror@plt+0x1f26c>  // b.any
  421f60:	add	x20, x20, #0x1
  421f64:	cbz	x21, 421f70 <ferror@plt+0x1f240>
  421f68:	mov	x0, x21
  421f6c:	bl	41ff6c <ferror@plt+0x1d23c>
  421f70:	ldur	w0, [x25, #-8]
  421f74:	sub	x0, x0, #0x1
  421f78:	ldr	x19, [x25]
  421f7c:	add	x19, x19, x0
  421f80:	b	422588 <ferror@plt+0x1f858>
  421f84:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421f88:	add	x2, x2, #0xcf8
  421f8c:	mov	w1, #0x641                 	// #1601
  421f90:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421f94:	add	x0, x0, #0xbc8
  421f98:	bl	4102b4 <ferror@plt+0xd584>
  421f9c:	ldr	x0, [sp, #104]
  421fa0:	cbz	x0, 421fdc <ferror@plt+0x1f2ac>
  421fa4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421fa8:	add	x2, x2, #0xd10
  421fac:	mov	w1, #0x3                   	// #3
  421fb0:	ldr	x0, [sp, #112]
  421fb4:	bl	426a10 <ferror@plt+0x23ce0>
  421fb8:	mov	w0, #0x0                   	// #0
  421fbc:	ldr	x1, [sp, #136]
  421fc0:	cbz	x1, 4228d8 <ferror@plt+0x1fba8>
  421fc4:	ldr	x0, [sp, #360]
  421fc8:	bl	402a90 <free@plt>
  421fcc:	mov	w0, #0x0                   	// #0
  421fd0:	ldp	x25, x26, [sp, #64]
  421fd4:	ldp	x27, x28, [sp, #80]
  421fd8:	b	422800 <ferror@plt+0x1fad0>
  421fdc:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421fe0:	add	x2, x2, #0xcf8
  421fe4:	mov	w1, #0x64d                 	// #1613
  421fe8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  421fec:	add	x0, x0, #0xbc8
  421ff0:	bl	4102b4 <ferror@plt+0xd584>
  421ff4:	cmp	x20, x25
  421ff8:	b.cc	4225b0 <ferror@plt+0x1f880>  // b.lo, b.ul, b.last
  421ffc:	cmp	x19, x25
  422000:	b.ls	421ee4 <ferror@plt+0x1f1b4>  // b.plast
  422004:	add	x26, x25, #0x1
  422008:	str	x23, [sp, #336]
  42200c:	str	x24, [sp, #344]
  422010:	ldp	x0, x1, [sp, #336]
  422014:	add	x2, sp, #0x200
  422018:	stp	x0, x1, [x2, #-232]
  42201c:	ldr	x0, [sp, #352]
  422020:	str	x0, [sp, #296]
  422024:	cbz	x21, 422634 <ferror@plt+0x1f904>
  422028:	b	422620 <ferror@plt+0x1f8f0>
  42202c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422030:	add	x2, x2, #0xcf8
  422034:	mov	w1, #0x66c                 	// #1644
  422038:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42203c:	add	x0, x0, #0xbc8
  422040:	bl	4102b4 <ferror@plt+0xd584>
  422044:	str	x26, [sp, #264]
  422048:	ldr	x0, [sp, #120]
  42204c:	bfi	x22, x0, #32, #32
  422050:	str	x22, [sp, #272]
  422054:	str	wzr, [sp, #304]
  422058:	strb	wzr, [sp, #308]
  42205c:	str	wzr, [sp, #312]
  422060:	cmp	x21, #0x0
  422064:	cset	w0, ne  // ne = any
  422068:	ldr	w1, [sp, #176]
  42206c:	cmp	w0, w1
  422070:	b.ne	422134 <ferror@plt+0x1f404>  // b.any
  422074:	add	x25, x25, #0x2
  422078:	str	x25, [sp, #264]
  42207c:	cbz	x21, 422090 <ferror@plt+0x1f360>
  422080:	mov	x0, x21
  422084:	bl	41ff6c <ferror@plt+0x1d23c>
  422088:	lsr	x0, x0, #32
  42208c:	str	w0, [sp, #276]
  422090:	mov	x7, x21
  422094:	add	x6, sp, #0x110
  422098:	add	x5, sp, #0xf4
  42209c:	add	x4, sp, #0x130
  4220a0:	mov	w3, #0x0                   	// #0
  4220a4:	mov	x2, x19
  4220a8:	add	x1, sp, #0x108
  4220ac:	ldr	x0, [sp, #112]
  4220b0:	bl	41fff0 <ferror@plt+0x1d2c0>
  4220b4:	ldr	w0, [sp, #244]
  4220b8:	cmp	w0, #0x7f
  4220bc:	b.hi	42214c <ferror@plt+0x1f41c>  // b.pmore
  4220c0:	strb	w0, [sp, #261]
  4220c4:	add	x0, sp, #0x105
  4220c8:	mov	x20, #0x1                   	// #1
  4220cc:	add	x1, sp, #0xf8
  4220d0:	add	x3, sp, #0x106
  4220d4:	ldrb	w2, [x0], #1
  4220d8:	strb	w2, [x1], #1
  4220dc:	cmp	x0, x3
  4220e0:	b.ne	4220d4 <ferror@plt+0x1f3a4>  // b.any
  4220e4:	cbz	x27, 422104 <ferror@plt+0x1f3d4>
  4220e8:	mov	x3, x27
  4220ec:	mov	x2, x20
  4220f0:	add	x1, sp, #0xf8
  4220f4:	mov	x0, x24
  4220f8:	blr	x23
  4220fc:	and	w0, w0, #0xff
  422100:	cbz	w0, 4221bc <ferror@plt+0x1f48c>
  422104:	cbz	x21, 42212c <ferror@plt+0x1f3fc>
  422108:	cmp	w20, #0x0
  42210c:	b.le	42212c <ferror@plt+0x1f3fc>
  422110:	mov	w25, #0x0                   	// #0
  422114:	ldr	x1, [sp, #272]
  422118:	ldr	x0, [sp, #104]
  42211c:	bl	41fae0 <ferror@plt+0x1cdb0>
  422120:	add	w25, w25, #0x1
  422124:	cmp	w20, w25
  422128:	b.ne	422114 <ferror@plt+0x1f3e4>  // b.any
  42212c:	ldr	x20, [sp, #264]
  422130:	b	422588 <ferror@plt+0x1f858>
  422134:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422138:	add	x2, x2, #0xd28
  42213c:	mov	w1, #0x48d                 	// #1165
  422140:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422144:	add	x0, x0, #0xbc8
  422148:	bl	4102b4 <ferror@plt+0xd584>
  42214c:	add	x3, sp, #0x106
  422150:	mov	x20, #0x1                   	// #1
  422154:	mov	x1, x3
  422158:	and	w2, w0, #0x3f
  42215c:	orr	w2, w2, #0xffffff80
  422160:	strb	w2, [x3, #-1]!
  422164:	lsr	w0, w0, #6
  422168:	mov	x2, x20
  42216c:	add	x20, x20, #0x1
  422170:	cmp	w0, #0x3e
  422174:	b.hi	422154 <ferror@plt+0x1f424>  // b.pmore
  422178:	ldr	x4, [sp, #144]
  42217c:	add	x4, x4, x20
  422180:	ldurb	w4, [x4, #-1]
  422184:	tst	w4, w0
  422188:	b.ne	422154 <ferror@plt+0x1f424>  // b.any
  42218c:	ldr	x3, [sp, #200]
  422190:	add	x3, x3, #0x18
  422194:	ldrb	w2, [x3, x2]
  422198:	orr	w0, w0, w2
  42219c:	sturb	w0, [x1, #-2]
  4221a0:	cmp	x20, #0x6
  4221a4:	b.hi	42281c <ferror@plt+0x1faec>  // b.pmore
  4221a8:	sub	x0, x1, #0x2
  4221ac:	add	x1, sp, #0x106
  4221b0:	cmp	x0, x1
  4221b4:	b.cc	4220cc <ferror@plt+0x1f39c>  // b.lo, b.ul, b.last
  4221b8:	b	4220e4 <ferror@plt+0x1f3b4>
  4221bc:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4221c0:	add	x2, x2, #0xd38
  4221c4:	mov	w1, #0x3                   	// #3
  4221c8:	ldr	x0, [sp, #112]
  4221cc:	bl	426f1c <ferror@plt+0x241ec>
  4221d0:	b	422104 <ferror@plt+0x1f3d4>
  4221d4:	str	x23, [sp, #280]
  4221d8:	str	x24, [sp, #288]
  4221dc:	add	x0, sp, #0x200
  4221e0:	ldp	x0, x1, [x0, #-232]
  4221e4:	stp	x0, x1, [sp, #304]
  4221e8:	ldr	x0, [sp, #296]
  4221ec:	str	x0, [sp, #320]
  4221f0:	ldr	w0, [sp, #296]
  4221f4:	str	w0, [sp, #180]
  4221f8:	ldr	x1, [sp, #120]
  4221fc:	bfi	x22, x1, #32, #32
  422200:	mov	x28, x22
  422204:	sxtw	x0, w0
  422208:	cmp	x0, #0x20
  42220c:	mov	x1, #0x20                  	// #32
  422210:	csel	x0, x0, x1, ls  // ls = plast
  422214:	mov	x1, #0x1                   	// #1
  422218:	lsl	x0, x1, x0
  42221c:	sub	x0, x0, #0x1
  422220:	str	x0, [sp, #168]
  422224:	cmp	x21, #0x0
  422228:	cset	w0, ne  // ne = any
  42222c:	ldr	w1, [sp, #176]
  422230:	cmp	w0, w1
  422234:	b.ne	422280 <ferror@plt+0x1f550>  // b.any
  422238:	ldr	x0, [sp, #112]
  42223c:	ldrb	w0, [x0, #1138]
  422240:	cbnz	w0, 422298 <ferror@plt+0x1f568>
  422244:	add	x20, x25, #0x2
  422248:	cbz	x21, 42225c <ferror@plt+0x1f52c>
  42224c:	mov	x0, x21
  422250:	bl	41ff6c <ferror@plt+0x1d23c>
  422254:	lsr	x0, x0, #32
  422258:	bfi	x28, x0, #32, #32
  42225c:	cmp	x19, x20
  422260:	b.ls	422304 <ferror@plt+0x1f5d4>  // b.plast
  422264:	mov	w1, #0x0                   	// #0
  422268:	str	wzr, [sp, #96]
  42226c:	mov	w25, #0x0                   	// #0
  422270:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  422274:	add	x0, x0, #0xc78
  422278:	str	x0, [sp, #128]
  42227c:	b	4222d0 <ferror@plt+0x1f5a0>
  422280:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422284:	add	x2, x2, #0xd68
  422288:	mov	w1, #0x4f9                 	// #1273
  42228c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422290:	add	x0, x0, #0xbc8
  422294:	bl	4102b4 <ferror@plt+0xd584>
  422298:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42229c:	add	x2, x2, #0xd78
  4222a0:	mov	w1, #0x6                   	// #6
  4222a4:	ldr	x0, [sp, #112]
  4222a8:	bl	426a88 <ferror@plt+0x23d58>
  4222ac:	b	422244 <ferror@plt+0x1f514>
  4222b0:	and	w0, w25, #0xf0000000
  4222b4:	ldr	w1, [sp, #96]
  4222b8:	orr	w0, w1, w0
  4222bc:	str	w0, [sp, #96]
  4222c0:	add	w25, w26, w25, lsl #4
  4222c4:	mov	w1, #0x1                   	// #1
  4222c8:	cmp	x19, x20
  4222cc:	b.eq	42231c <ferror@plt+0x1f5ec>  // b.none
  4222d0:	ldrb	w0, [x20]
  4222d4:	ldr	x2, [sp, #128]
  4222d8:	ldrb	w26, [x2, w0, sxtw]
  4222dc:	cmp	w26, #0x63
  4222e0:	b.eq	422300 <ferror@plt+0x1f5d0>  // b.none
  4222e4:	add	x20, x20, #0x1
  4222e8:	cbz	x21, 4222b0 <ferror@plt+0x1f580>
  4222ec:	mov	x0, x21
  4222f0:	bl	41ff6c <ferror@plt+0x1d23c>
  4222f4:	lsr	x0, x0, #32
  4222f8:	bfi	x28, x0, #32, #32
  4222fc:	b	4222b0 <ferror@plt+0x1f580>
  422300:	cbnz	w1, 422320 <ferror@plt+0x1f5f0>
  422304:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422308:	add	x2, x2, #0xdb0
  42230c:	mov	w1, #0x3                   	// #3
  422310:	ldr	x0, [sp, #112]
  422314:	bl	426a10 <ferror@plt+0x23ce0>
  422318:	b	422588 <ferror@plt+0x1f858>
  42231c:	mov	x20, x19
  422320:	ldr	w0, [sp, #168]
  422324:	and	w0, w25, w0
  422328:	cmp	x0, w25, uxtw
  42232c:	cset	w0, ne  // ne = any
  422330:	ldr	w1, [sp, #96]
  422334:	orr	w0, w0, w1
  422338:	cbnz	w0, 422380 <ferror@plt+0x1f650>
  42233c:	cbz	x27, 42236c <ferror@plt+0x1f63c>
  422340:	ldr	w0, [sp, #180]
  422344:	str	w0, [sp, #320]
  422348:	ldp	x0, x1, [sp, #304]
  42234c:	stp	x0, x1, [sp, #208]
  422350:	ldr	x0, [sp, #320]
  422354:	str	x0, [sp, #224]
  422358:	add	x3, sp, #0xd0
  42235c:	mov	x2, x27
  422360:	mov	w1, w25
  422364:	ldr	x0, [sp, #112]
  422368:	bl	41eec0 <ferror@plt+0x1c190>
  42236c:	ldr	x0, [sp, #104]
  422370:	cbz	x0, 422588 <ferror@plt+0x1f858>
  422374:	mov	x1, x28
  422378:	bl	41fae0 <ferror@plt+0x1cdb0>
  42237c:	b	422588 <ferror@plt+0x1f858>
  422380:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422384:	add	x2, x2, #0xdd8
  422388:	mov	w1, #0x2                   	// #2
  42238c:	ldr	x0, [sp, #112]
  422390:	bl	426a10 <ferror@plt+0x23ce0>
  422394:	ldr	w0, [sp, #168]
  422398:	and	w25, w25, w0
  42239c:	b	42233c <ferror@plt+0x1f60c>
  4223a0:	str	x23, [sp, #280]
  4223a4:	str	x24, [sp, #288]
  4223a8:	add	x0, sp, #0x200
  4223ac:	ldp	x0, x1, [x0, #-232]
  4223b0:	stp	x0, x1, [sp, #304]
  4223b4:	ldr	x0, [sp, #296]
  4223b8:	str	x0, [sp, #320]
  4223bc:	ldr	w0, [sp, #296]
  4223c0:	str	w0, [sp, #168]
  4223c4:	ldr	x1, [sp, #120]
  4223c8:	bfi	x22, x1, #32, #32
  4223cc:	str	x22, [sp, #96]
  4223d0:	sxtw	x0, w0
  4223d4:	cmp	x0, #0x20
  4223d8:	mov	x1, #0x20                  	// #32
  4223dc:	csel	x0, x0, x1, ls  // ls = plast
  4223e0:	mov	x1, #0x1                   	// #1
  4223e4:	lsl	x0, x1, x0
  4223e8:	sub	x0, x0, #0x1
  4223ec:	str	x0, [sp, #128]
  4223f0:	cmp	x21, #0x0
  4223f4:	cset	w0, ne  // ne = any
  4223f8:	ldr	w1, [sp, #176]
  4223fc:	cmp	w0, w1
  422400:	b.ne	422418 <ferror@plt+0x1f6e8>  // b.any
  422404:	cmp	x19, x26
  422408:	b.ls	4224f4 <ferror@plt+0x1f7c4>  // b.plast
  42240c:	add	x20, x25, #0x4
  422410:	mov	w25, #0x0                   	// #0
  422414:	b	422448 <ferror@plt+0x1f718>
  422418:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42241c:	add	x2, x2, #0xe00
  422420:	mov	w1, #0x540                 	// #1344
  422424:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422428:	add	x0, x0, #0xbc8
  42242c:	bl	4102b4 <ferror@plt+0xd584>
  422430:	add	w25, w28, w25, lsl #3
  422434:	sub	w25, w25, #0x30
  422438:	cmp	x19, x26
  42243c:	b.eq	42247c <ferror@plt+0x1f74c>  // b.none
  422440:	cmp	x20, x26
  422444:	b.eq	422488 <ferror@plt+0x1f758>  // b.none
  422448:	ldrb	w28, [x26]
  42244c:	sub	w0, w28, #0x30
  422450:	cmp	w0, #0x7
  422454:	b.hi	422484 <ferror@plt+0x1f754>  // b.pmore
  422458:	add	x26, x26, #0x1
  42245c:	cbz	x21, 422430 <ferror@plt+0x1f700>
  422460:	mov	x0, x21
  422464:	bl	41ff6c <ferror@plt+0x1d23c>
  422468:	lsr	x0, x0, #32
  42246c:	ldr	x1, [sp, #96]
  422470:	bfi	x1, x0, #32, #32
  422474:	str	x1, [sp, #96]
  422478:	b	422430 <ferror@plt+0x1f700>
  42247c:	mov	x20, x19
  422480:	b	422488 <ferror@plt+0x1f758>
  422484:	mov	x20, x26
  422488:	ldr	x26, [sp, #128]
  42248c:	and	w0, w25, w26
  422490:	cmp	x0, w25, uxtw
  422494:	b.eq	4224b0 <ferror@plt+0x1f780>  // b.none
  422498:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42249c:	add	x2, x2, #0xe10
  4224a0:	mov	w1, #0x2                   	// #2
  4224a4:	ldr	x0, [sp, #112]
  4224a8:	bl	426a10 <ferror@plt+0x23ce0>
  4224ac:	and	w25, w25, w26
  4224b0:	cbz	x27, 4224e0 <ferror@plt+0x1f7b0>
  4224b4:	ldr	w0, [sp, #168]
  4224b8:	str	w0, [sp, #320]
  4224bc:	ldp	x0, x1, [sp, #304]
  4224c0:	stp	x0, x1, [sp, #208]
  4224c4:	ldr	x0, [sp, #320]
  4224c8:	str	x0, [sp, #224]
  4224cc:	add	x3, sp, #0xd0
  4224d0:	mov	x2, x27
  4224d4:	mov	w1, w25
  4224d8:	ldr	x0, [sp, #112]
  4224dc:	bl	41eec0 <ferror@plt+0x1c190>
  4224e0:	ldr	x0, [sp, #104]
  4224e4:	cbz	x0, 422588 <ferror@plt+0x1f858>
  4224e8:	ldr	x1, [sp, #96]
  4224ec:	bl	41fae0 <ferror@plt+0x1cdb0>
  4224f0:	b	422588 <ferror@plt+0x1f858>
  4224f4:	mov	x20, x26
  4224f8:	mov	w25, #0x0                   	// #0
  4224fc:	b	4224b0 <ferror@plt+0x1f780>
  422500:	ldr	x0, [sp, #112]
  422504:	ldrb	w0, [x0, #1154]
  422508:	cbz	w0, 422544 <ferror@plt+0x1f814>
  42250c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  422510:	add	x0, x0, #0x28
  422514:	ldrh	w0, [x0, w3, sxtw #1]
  422518:	mov	w1, #0xac                  	// #172
  42251c:	tst	w1, w0
  422520:	b.eq	4226fc <ferror@plt+0x1f9cc>  // b.none
  422524:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422528:	add	x2, x2, #0xe98
  42252c:	mov	w1, #0x2                   	// #2
  422530:	ldr	x0, [sp, #112]
  422534:	bl	426a10 <ferror@plt+0x23ce0>
  422538:	b	422544 <ferror@plt+0x1f814>
  42253c:	mov	w0, #0x8                   	// #8
  422540:	strb	w0, [sp, #243]
  422544:	cbz	x27, 422564 <ferror@plt+0x1f834>
  422548:	mov	x3, x27
  42254c:	mov	x2, #0x1                   	// #1
  422550:	add	x1, sp, #0xf3
  422554:	mov	x0, x24
  422558:	blr	x23
  42255c:	and	w0, w0, #0xff
  422560:	cbz	w0, 42272c <ferror@plt+0x1f9fc>
  422564:	cbz	x21, 422584 <ferror@plt+0x1f854>
  422568:	mov	x0, x21
  42256c:	bl	41ff6c <ferror@plt+0x1d23c>
  422570:	lsr	x0, x0, #32
  422574:	bfi	x22, x0, #32, #32
  422578:	mov	x1, x22
  42257c:	ldr	x0, [sp, #104]
  422580:	bl	41fae0 <ferror@plt+0x1cdb0>
  422584:	add	x20, x25, #0x2
  422588:	cmp	x20, x19
  42258c:	b.cs	421ee4 <ferror@plt+0x1f1b4>  // b.hs, b.nlast
  422590:	mov	x25, x20
  422594:	ldrb	w0, [x25]
  422598:	cmp	w0, #0x5c
  42259c:	b.eq	421ff4 <ferror@plt+0x1f2c4>  // b.none
  4225a0:	add	x25, x25, #0x1
  4225a4:	cmp	x19, x25
  4225a8:	b.ne	422594 <ferror@plt+0x1f864>  // b.any
  4225ac:	mov	x25, x19
  4225b0:	ldr	x0, [sp, #136]
  4225b4:	cbz	x0, 4225d4 <ferror@plt+0x1f8a4>
  4225b8:	add	x3, sp, #0x168
  4225bc:	sub	x2, x25, x20
  4225c0:	mov	x1, x20
  4225c4:	mov	x0, x24
  4225c8:	blr	x23
  4225cc:	and	w0, w0, #0xff
  4225d0:	cbz	w0, 4227d8 <ferror@plt+0x1faa8>
  4225d4:	cbz	x21, 422868 <ferror@plt+0x1fb38>
  4225d8:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  4225dc:	add	x0, x0, #0xfe0
  4225e0:	cmp	x23, x0
  4225e4:	b.ne	42202c <ferror@plt+0x1f2fc>  // b.any
  4225e8:	mov	x2, x21
  4225ec:	sub	w1, w25, w20
  4225f0:	ldr	x0, [sp, #104]
  4225f4:	bl	41ff94 <ferror@plt+0x1d264>
  4225f8:	cmp	x19, x25
  4225fc:	b.ls	421ee4 <ferror@plt+0x1f1b4>  // b.plast
  422600:	add	x26, x25, #0x1
  422604:	str	x23, [sp, #336]
  422608:	str	x24, [sp, #344]
  42260c:	ldp	x0, x1, [sp, #336]
  422610:	add	x2, sp, #0x200
  422614:	stp	x0, x1, [x2, #-232]
  422618:	ldr	x0, [sp, #352]
  42261c:	str	x0, [sp, #296]
  422620:	mov	x0, x21
  422624:	bl	41ff6c <ferror@plt+0x1d23c>
  422628:	mov	x22, x0
  42262c:	lsr	x0, x0, #32
  422630:	str	x0, [sp, #120]
  422634:	ldrb	w3, [x25, #1]
  422638:	strb	w3, [sp, #243]
  42263c:	sub	w0, w3, #0x22
  422640:	cmp	w0, #0x59
  422644:	b.hi	42250c <ferror@plt+0x1f7dc>  // b.pmore
  422648:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x1ec60>
  42264c:	add	x1, x1, #0xff4
  422650:	ldrh	w0, [x1, w0, uxtw #1]
  422654:	adr	x1, 422660 <ferror@plt+0x1f930>
  422658:	add	x0, x1, w0, sxth #2
  42265c:	br	x0
  422660:	mov	w0, #0xc                   	// #12
  422664:	strb	w0, [sp, #243]
  422668:	b	422544 <ferror@plt+0x1f814>
  42266c:	mov	w0, #0xa                   	// #10
  422670:	strb	w0, [sp, #243]
  422674:	b	422544 <ferror@plt+0x1f814>
  422678:	mov	w0, #0xd                   	// #13
  42267c:	strb	w0, [sp, #243]
  422680:	b	422544 <ferror@plt+0x1f814>
  422684:	mov	w0, #0x9                   	// #9
  422688:	strb	w0, [sp, #243]
  42268c:	b	422544 <ferror@plt+0x1f814>
  422690:	mov	w0, #0xb                   	// #11
  422694:	strb	w0, [sp, #243]
  422698:	b	422544 <ferror@plt+0x1f814>
  42269c:	ldr	x0, [sp, #112]
  4226a0:	ldrb	w0, [x0, #1138]
  4226a4:	cbnz	w0, 4226b4 <ferror@plt+0x1f984>
  4226a8:	mov	w0, #0x7                   	// #7
  4226ac:	strb	w0, [sp, #243]
  4226b0:	b	422544 <ferror@plt+0x1f814>
  4226b4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4226b8:	add	x2, x2, #0xe38
  4226bc:	mov	w1, #0x6                   	// #6
  4226c0:	ldr	x0, [sp, #112]
  4226c4:	bl	426a88 <ferror@plt+0x23d58>
  4226c8:	b	4226a8 <ferror@plt+0x1f978>
  4226cc:	ldr	x0, [sp, #112]
  4226d0:	ldrb	w0, [x0, #1154]
  4226d4:	cbnz	w0, 4226e4 <ferror@plt+0x1f9b4>
  4226d8:	mov	w0, #0x1b                  	// #27
  4226dc:	strb	w0, [sp, #243]
  4226e0:	b	422544 <ferror@plt+0x1f814>
  4226e4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4226e8:	add	x2, x2, #0xe70
  4226ec:	mov	w1, #0x2                   	// #2
  4226f0:	ldr	x0, [sp, #112]
  4226f4:	bl	426a10 <ferror@plt+0x23ce0>
  4226f8:	b	4226d8 <ferror@plt+0x1f9a8>
  4226fc:	mov	w2, w3
  422700:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422704:	add	x1, x1, #0xeb8
  422708:	add	x0, sp, #0x130
  42270c:	bl	402720 <sprintf@plt>
  422710:	add	x3, sp, #0x130
  422714:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422718:	add	x2, x2, #0xec0
  42271c:	mov	w1, #0x2                   	// #2
  422720:	ldr	x0, [sp, #112]
  422724:	bl	426a10 <ferror@plt+0x23ce0>
  422728:	b	422544 <ferror@plt+0x1f814>
  42272c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422730:	add	x2, x2, #0xee0
  422734:	mov	w1, #0x3                   	// #3
  422738:	ldr	x0, [sp, #112]
  42273c:	bl	426f1c <ferror@plt+0x241ec>
  422740:	b	422564 <ferror@plt+0x1f834>
  422744:	ldr	x0, [sp, #136]
  422748:	cbz	x0, 4227c4 <ferror@plt+0x1fa94>
  42274c:	ldp	x25, x26, [sp, #64]
  422750:	ldp	x27, x28, [sp, #80]
  422754:	str	x23, [sp, #336]
  422758:	str	x24, [sp, #344]
  42275c:	ldp	x0, x1, [sp, #336]
  422760:	stp	x0, x1, [sp, #208]
  422764:	ldr	x0, [sp, #352]
  422768:	str	x0, [sp, #224]
  42276c:	add	x3, sp, #0xd0
  422770:	add	x2, sp, #0x168
  422774:	mov	w1, #0x0                   	// #0
  422778:	ldr	x0, [sp, #112]
  42277c:	bl	41eec0 <ferror@plt+0x1c190>
  422780:	ldr	x1, [sp, #376]
  422784:	ldr	x0, [sp, #360]
  422788:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42278c:	str	x0, [sp, #360]
  422790:	ldr	x1, [sp, #136]
  422794:	str	x0, [x1, #8]
  422798:	ldr	x0, [sp, #376]
  42279c:	str	w0, [x1]
  4227a0:	mov	w0, #0x1                   	// #1
  4227a4:	cbz	x21, 422800 <ferror@plt+0x1fad0>
  4227a8:	mov	x0, x21
  4227ac:	bl	41ff6c <ferror@plt+0x1d23c>
  4227b0:	mov	x1, x0
  4227b4:	ldr	x0, [sp, #104]
  4227b8:	bl	41fae0 <ferror@plt+0x1cdb0>
  4227bc:	mov	w0, #0x1                   	// #1
  4227c0:	b	422800 <ferror@plt+0x1fad0>
  4227c4:	ldp	x25, x26, [sp, #64]
  4227c8:	ldp	x27, x28, [sp, #80]
  4227cc:	b	4227a0 <ferror@plt+0x1fa70>
  4227d0:	mov	x21, #0x0                   	// #0
  4227d4:	b	422754 <ferror@plt+0x1fa24>
  4227d8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  4227dc:	add	x2, x2, #0xa38
  4227e0:	mov	w1, #0x3                   	// #3
  4227e4:	ldr	x0, [sp, #112]
  4227e8:	bl	426f1c <ferror@plt+0x241ec>
  4227ec:	ldr	x0, [sp, #360]
  4227f0:	bl	402a90 <free@plt>
  4227f4:	mov	w0, #0x0                   	// #0
  4227f8:	ldp	x25, x26, [sp, #64]
  4227fc:	ldp	x27, x28, [sp, #80]
  422800:	ldp	x19, x20, [sp, #16]
  422804:	ldp	x21, x22, [sp, #32]
  422808:	ldp	x23, x24, [sp, #48]
  42280c:	ldp	x29, x30, [sp], #384
  422810:	ret
  422814:	add	x20, x26, #0x1
  422818:	b	421e6c <ferror@plt+0x1f13c>
  42281c:	bl	402c40 <__errno_location@plt>
  422820:	mov	w1, #0x7                   	// #7
  422824:	str	w1, [x0]
  422828:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42282c:	add	x2, x2, #0xaa0
  422830:	mov	w1, #0x3                   	// #3
  422834:	ldr	x0, [sp, #112]
  422838:	bl	426f1c <ferror@plt+0x241ec>
  42283c:	b	42212c <ferror@plt+0x1f3fc>
  422840:	add	x26, x20, #0x4
  422844:	b	4228a4 <ferror@plt+0x1fb74>
  422848:	add	x19, x20, #0x2
  42284c:	mov	x0, x21
  422850:	bl	41ff6c <ferror@plt+0x1d23c>
  422854:	ldrb	w0, [x20, #2]
  422858:	cmp	w0, #0x52
  42285c:	b.eq	422840 <ferror@plt+0x1fb10>  // b.none
  422860:	mov	x20, x19
  422864:	b	421f50 <ferror@plt+0x1f220>
  422868:	cmp	x19, x25
  42286c:	b.ls	421ee4 <ferror@plt+0x1f1b4>  // b.plast
  422870:	add	x26, x25, #0x1
  422874:	str	x23, [sp, #336]
  422878:	str	x24, [sp, #344]
  42287c:	ldp	x0, x1, [sp, #336]
  422880:	add	x2, sp, #0x200
  422884:	stp	x0, x1, [x2, #-232]
  422888:	ldr	x0, [sp, #352]
  42288c:	str	x0, [sp, #296]
  422890:	b	422634 <ferror@plt+0x1f904>
  422894:	add	x26, x20, #0x3
  422898:	mov	x20, x19
  42289c:	b	421e2c <ferror@plt+0x1f0fc>
  4228a0:	add	x26, x20, #0x3
  4228a4:	mov	x0, x21
  4228a8:	bl	41ff6c <ferror@plt+0x1d23c>
  4228ac:	mov	x0, x21
  4228b0:	bl	41ff6c <ferror@plt+0x1d23c>
  4228b4:	ldrb	w0, [x26]
  4228b8:	cmp	w0, #0x28
  4228bc:	b.eq	422814 <ferror@plt+0x1fae4>  // b.none
  4228c0:	mov	x19, x26
  4228c4:	b	421e4c <ferror@plt+0x1f11c>
  4228c8:	ldr	x0, [sp, #184]
  4228cc:	cbnz	x0, 421d6c <ferror@plt+0x1f03c>
  4228d0:	mov	w0, #0x1                   	// #1
  4228d4:	b	422800 <ferror@plt+0x1fad0>
  4228d8:	ldp	x25, x26, [sp, #64]
  4228dc:	ldp	x27, x28, [sp, #80]
  4228e0:	b	422800 <ferror@plt+0x1fad0>
  4228e4:	stp	x29, x30, [sp, #-16]!
  4228e8:	mov	x29, sp
  4228ec:	mov	x6, #0x0                   	// #0
  4228f0:	mov	x5, #0x0                   	// #0
  4228f4:	bl	421cd8 <ferror@plt+0x1efa8>
  4228f8:	ldp	x29, x30, [sp], #16
  4228fc:	ret
  422900:	stp	x29, x30, [sp, #-64]!
  422904:	mov	x29, sp
  422908:	str	x19, [sp, #16]
  42290c:	add	x19, x0, #0x208
  422910:	ldp	x6, x7, [x19]
  422914:	stp	x6, x7, [sp, #40]
  422918:	ldr	x5, [x0, #536]
  42291c:	str	x5, [sp, #56]
  422920:	adrp	x5, 41e000 <ferror@plt+0x1b2d0>
  422924:	add	x5, x5, #0xfe0
  422928:	str	x5, [x0, #520]
  42292c:	mov	x5, #0xffffffffffffffff    	// #-1
  422930:	str	x5, [x0, #528]
  422934:	ldr	x5, [x0, #1216]
  422938:	str	w5, [x0, #536]
  42293c:	mov	w4, #0x3e                  	// #62
  422940:	bl	4228e4 <ferror@plt+0x1fbb4>
  422944:	ldp	x2, x3, [sp, #40]
  422948:	stp	x2, x3, [x19]
  42294c:	ldr	x1, [sp, #56]
  422950:	str	x1, [x19, #16]
  422954:	ldr	x19, [sp, #16]
  422958:	ldp	x29, x30, [sp], #64
  42295c:	ret
  422960:	stp	x29, x30, [sp, #-144]!
  422964:	mov	x29, sp
  422968:	stp	x19, x20, [sp, #16]
  42296c:	stp	x21, x22, [sp, #32]
  422970:	stp	x23, x24, [sp, #48]
  422974:	mov	x21, x0
  422978:	mov	x20, x1
  42297c:	mov	x22, x2
  422980:	mov	x23, x3
  422984:	str	wzr, [sp, #104]
  422988:	str	xzr, [sp, #112]
  42298c:	ldrb	w4, [x1, #4]
  422990:	and	w19, w4, #0xfffffffb
  422994:	and	w19, w19, #0xff
  422998:	cmp	w19, #0x38
  42299c:	cset	w1, ne  // ne = any
  4229a0:	cmp	w4, #0x3c
  4229a4:	cset	w0, eq  // eq = none
  4229a8:	ldr	w2, [x20, #8]
  4229ac:	add	w1, w1, #0x2
  4229b0:	add	w0, w1, w0, lsl #1
  4229b4:	cmp	x2, w0, sxtw
  4229b8:	b.eq	422a5c <ferror@plt+0x1fd2c>  // b.none
  4229bc:	add	x3, sp, #0x68
  4229c0:	mov	x2, #0x1                   	// #1
  4229c4:	add	x1, x20, #0x8
  4229c8:	mov	x0, x21
  4229cc:	bl	4228e4 <ferror@plt+0x1fbb4>
  4229d0:	and	w0, w0, #0xff
  4229d4:	cbz	w0, 422a80 <ferror@plt+0x1fd50>
  4229d8:	stp	x25, x26, [sp, #64]
  4229dc:	cmp	w19, #0x38
  4229e0:	b.eq	422b8c <ferror@plt+0x1fe5c>  // b.none
  4229e4:	str	x27, [sp, #80]
  4229e8:	ldrb	w25, [x20, #4]
  4229ec:	ldr	w19, [sp, #104]
  4229f0:	ldr	x27, [sp, #112]
  4229f4:	ldrb	w26, [x21, #1242]
  4229f8:	add	x8, sp, #0x78
  4229fc:	mov	w1, w25
  422a00:	mov	x0, x21
  422a04:	bl	41e9d4 <ferror@plt+0x1bca4>
  422a08:	ldrsw	x24, [sp, #136]
  422a0c:	ldr	x2, [x21, #1216]
  422a10:	cmp	x2, #0x20
  422a14:	mov	x3, #0x20                  	// #32
  422a18:	csel	x0, x2, x3, ls  // ls = plast
  422a1c:	mov	x3, #0x1                   	// #1
  422a20:	lsl	x3, x3, x0
  422a24:	sub	x3, x3, #0x1
  422a28:	udiv	x5, x24, x2
  422a2c:	mov	w6, w19
  422a30:	lsl	x7, x5, #1
  422a34:	sub	x1, x6, x7
  422a38:	cmp	x24, x2
  422a3c:	b.cc	422abc <ferror@plt+0x1fd8c>  // b.lo, b.ul, b.last
  422a40:	mov	w19, #0x0                   	// #0
  422a44:	mov	x0, #0x0                   	// #0
  422a48:	add	x4, x5, x1
  422a4c:	sub	x4, x4, #0x1
  422a50:	add	x4, x27, x4
  422a54:	add	x27, x27, x1
  422a58:	b	422ab0 <ferror@plt+0x1fd80>
  422a5c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422a60:	add	x2, x2, #0xf18
  422a64:	mov	w1, #0x3                   	// #3
  422a68:	mov	x0, x21
  422a6c:	bl	426a10 <ferror@plt+0x23ce0>
  422a70:	str	wzr, [x22]
  422a74:	str	wzr, [x23]
  422a78:	mov	w19, #0x0                   	// #0
  422a7c:	b	422b50 <ferror@plt+0x1fe20>
  422a80:	str	wzr, [x22]
  422a84:	str	wzr, [x23]
  422a88:	mov	w19, #0x0                   	// #0
  422a8c:	b	422b50 <ferror@plt+0x1fe20>
  422a90:	neg	x1, x0
  422a94:	ldrb	w1, [x4, x1]
  422a98:	lsl	w19, w19, w2
  422a9c:	and	w1, w1, w3
  422aa0:	orr	w19, w1, w19
  422aa4:	add	x0, x0, #0x1
  422aa8:	cmp	x5, x0
  422aac:	b.ls	422ac0 <ferror@plt+0x1fd90>  // b.plast
  422ab0:	cbz	w26, 422a90 <ferror@plt+0x1fd60>
  422ab4:	ldrb	w1, [x27, x0]
  422ab8:	b	422a98 <ferror@plt+0x1fd68>
  422abc:	mov	w19, #0x0                   	// #0
  422ac0:	cmp	x6, x7
  422ac4:	b.hi	422b68 <ferror@plt+0x1fe38>  // b.pmore
  422ac8:	cmp	x24, #0x1f
  422acc:	b.hi	422b14 <ferror@plt+0x1fde4>  // b.pmore
  422ad0:	cmp	x24, #0x20
  422ad4:	mov	x0, #0x20                  	// #32
  422ad8:	csel	x1, x24, x0, ls  // ls = plast
  422adc:	mov	x0, #0x1                   	// #1
  422ae0:	lsl	x0, x0, x1
  422ae4:	sub	w1, w25, #0x3a
  422ae8:	cmp	w1, #0x1
  422aec:	b.ls	422b0c <ferror@plt+0x1fddc>  // b.plast
  422af0:	ldrb	w1, [x21, #1241]
  422af4:	cbnz	w1, 422b0c <ferror@plt+0x1fddc>
  422af8:	sub	w24, w24, #0x1
  422afc:	mov	w1, #0x1                   	// #1
  422b00:	lsl	w24, w1, w24
  422b04:	tst	w24, w19
  422b08:	b.ne	422b80 <ferror@plt+0x1fe50>  // b.any
  422b0c:	sub	x0, x0, #0x1
  422b10:	and	w19, w19, w0
  422b14:	sub	w25, w25, #0x3a
  422b18:	mov	w0, #0x1                   	// #1
  422b1c:	cmp	w25, w0
  422b20:	b.ls	422b28 <ferror@plt+0x1fdf8>  // b.plast
  422b24:	ldrb	w0, [x21, #1241]
  422b28:	str	w0, [x23]
  422b2c:	mov	w0, #0x1                   	// #1
  422b30:	str	w0, [x22]
  422b34:	ldr	x27, [sp, #80]
  422b38:	ldr	x0, [sp, #112]
  422b3c:	ldr	x1, [x20, #16]
  422b40:	cmp	x0, x1
  422b44:	b.eq	422cb4 <ferror@plt+0x1ff84>  // b.none
  422b48:	bl	402a90 <free@plt>
  422b4c:	ldp	x25, x26, [sp, #64]
  422b50:	mov	w0, w19
  422b54:	ldp	x19, x20, [sp, #16]
  422b58:	ldp	x21, x22, [sp, #32]
  422b5c:	ldp	x23, x24, [sp, #48]
  422b60:	ldp	x29, x30, [sp], #144
  422b64:	ret
  422b68:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422b6c:	add	x2, x2, #0xf38
  422b70:	mov	w1, #0x0                   	// #0
  422b74:	mov	x0, x21
  422b78:	bl	426a10 <ferror@plt+0x23ce0>
  422b7c:	b	422ac8 <ferror@plt+0x1fd98>
  422b80:	neg	x0, x0
  422b84:	orr	w19, w19, w0
  422b88:	b	422b24 <ferror@plt+0x1fdf4>
  422b8c:	ldr	x3, [sp, #112]
  422b90:	ldr	x24, [x21, #1216]
  422b94:	ldr	x26, [x21, #1224]
  422b98:	udiv	x26, x26, x24
  422b9c:	cmp	x24, #0x20
  422ba0:	mov	x2, #0x20                  	// #32
  422ba4:	csel	x0, x24, x2, ls  // ls = plast
  422ba8:	mov	x2, #0x1                   	// #1
  422bac:	lsl	x2, x2, x0
  422bb0:	sub	x2, x2, #0x1
  422bb4:	ldr	w25, [sp, #104]
  422bb8:	sub	w25, w25, #0x1
  422bbc:	cbz	x25, 422cac <ferror@plt+0x1ff7c>
  422bc0:	mov	w19, #0x0                   	// #0
  422bc4:	mov	x1, #0x0                   	// #0
  422bc8:	ldrb	w0, [x3, x1]
  422bcc:	and	w0, w0, w2
  422bd0:	lsl	w19, w19, w24
  422bd4:	orr	w19, w0, w19
  422bd8:	cmp	x24, #0x20
  422bdc:	csel	w19, w19, w0, cc  // cc = lo, ul, last
  422be0:	add	x1, x1, #0x1
  422be4:	cmp	x1, x25
  422be8:	b.ne	422bc8 <ferror@plt+0x1fe98>  // b.any
  422bec:	cmp	x26, x25
  422bf0:	b.cc	422c44 <ferror@plt+0x1ff14>  // b.lo, b.ul, b.last
  422bf4:	cmp	x25, #0x1
  422bf8:	b.ls	422c64 <ferror@plt+0x1ff34>  // b.plast
  422bfc:	ldrb	w0, [x21, #1137]
  422c00:	cbnz	w0, 422c94 <ferror@plt+0x1ff64>
  422c04:	ldr	x0, [x21, #1224]
  422c08:	mov	w1, #0x0                   	// #0
  422c0c:	cmp	x0, #0x1f
  422c10:	b.hi	422c88 <ferror@plt+0x1ff58>  // b.pmore
  422c14:	mov	w2, w0
  422c18:	mov	w24, #0x1                   	// #1
  422c1c:	lsl	w24, w24, w0
  422c20:	mov	w1, #0x0                   	// #0
  422c24:	sub	w2, w2, #0x1
  422c28:	mov	w0, #0x1                   	// #1
  422c2c:	lsl	w2, w0, w2
  422c30:	tst	w2, w19
  422c34:	b.eq	422c80 <ferror@plt+0x1ff50>  // b.none
  422c38:	neg	w24, w24
  422c3c:	orr	w19, w19, w24
  422c40:	b	422c88 <ferror@plt+0x1ff58>
  422c44:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422c48:	add	x2, x2, #0xf38
  422c4c:	mov	w1, #0x0                   	// #0
  422c50:	mov	x0, x21
  422c54:	bl	426a10 <ferror@plt+0x23ce0>
  422c58:	mov	x25, x26
  422c5c:	cmp	x26, #0x1
  422c60:	b.hi	422c04 <ferror@plt+0x1fed4>  // b.pmore
  422c64:	ldrb	w1, [x21, #1240]
  422c68:	cmp	x24, #0x1f
  422c6c:	b.hi	422c88 <ferror@plt+0x1ff58>  // b.pmore
  422c70:	mov	w2, w24
  422c74:	mov	w0, #0x1                   	// #1
  422c78:	lsl	w24, w0, w24
  422c7c:	cbz	w1, 422c24 <ferror@plt+0x1fef4>
  422c80:	sub	w24, w24, #0x1
  422c84:	and	w19, w19, w24
  422c88:	str	w25, [x22]
  422c8c:	str	w1, [x23]
  422c90:	b	422b38 <ferror@plt+0x1fe08>
  422c94:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422c98:	add	x2, x2, #0xf68
  422c9c:	mov	w1, #0x5                   	// #5
  422ca0:	mov	x0, x21
  422ca4:	bl	426a88 <ferror@plt+0x23d58>
  422ca8:	b	422c04 <ferror@plt+0x1fed4>
  422cac:	mov	w19, #0x0                   	// #0
  422cb0:	b	422c64 <ferror@plt+0x1ff34>
  422cb4:	ldp	x25, x26, [sp, #64]
  422cb8:	b	422b50 <ferror@plt+0x1fe20>
  422cbc:	stp	x29, x30, [sp, #-112]!
  422cc0:	mov	x29, sp
  422cc4:	stp	x19, x20, [sp, #16]
  422cc8:	stp	x21, x22, [sp, #32]
  422ccc:	stp	x23, x24, [sp, #48]
  422cd0:	mov	x20, x0
  422cd4:	mov	x21, x1
  422cd8:	mov	x23, x2
  422cdc:	mov	x22, x3
  422ce0:	mov	x24, x4
  422ce4:	mov	w19, w5
  422ce8:	add	x8, sp, #0x58
  422cec:	mov	w1, w5
  422cf0:	bl	41e9d4 <ferror@plt+0x1bca4>
  422cf4:	adrp	x5, 41e000 <ferror@plt+0x1b2d0>
  422cf8:	add	x5, x5, #0xfe0
  422cfc:	ldr	x6, [sp, #88]
  422d00:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422d04:	add	x0, x0, #0xf90
  422d08:	cmp	x6, x5
  422d0c:	b.eq	422d24 <ferror@plt+0x1fff4>  // b.none
  422d10:	ldp	x19, x20, [sp, #16]
  422d14:	ldp	x21, x22, [sp, #32]
  422d18:	ldp	x23, x24, [sp, #48]
  422d1c:	ldp	x29, x30, [sp], #112
  422d20:	ret
  422d24:	str	x25, [sp, #64]
  422d28:	ldr	x25, [x20, #1000]
  422d2c:	adrp	x0, 41e000 <ferror@plt+0x1b2d0>
  422d30:	add	x0, x0, #0xa94
  422d34:	str	x0, [x20, #1000]
  422d38:	mov	x6, x24
  422d3c:	mov	x5, x23
  422d40:	mov	w4, w19
  422d44:	mov	x3, #0x0                   	// #0
  422d48:	mov	x2, x22
  422d4c:	mov	x1, x21
  422d50:	mov	x0, x20
  422d54:	bl	421cd8 <ferror@plt+0x1efa8>
  422d58:	ands	w1, w0, #0xff
  422d5c:	str	x25, [x20, #1000]
  422d60:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1cc60>
  422d64:	add	x0, x0, #0xfc0
  422d68:	csel	x0, x0, xzr, eq  // eq = none
  422d6c:	ldr	x25, [sp, #64]
  422d70:	b	422d10 <ferror@plt+0x1ffe0>
  422d74:	ldrb	w0, [x1, #18]
  422d78:	and	w0, w0, #0xfffffffc
  422d7c:	strb	w0, [x1, #18]
  422d80:	str	xzr, [x1, #24]
  422d84:	ldrh	w0, [x1, #18]
  422d88:	ubfx	x2, x0, #2, #8
  422d8c:	mov	w3, #0xffffffcd            	// #-51
  422d90:	and	w2, w2, w3
  422d94:	bfi	w0, w2, #2, #8
  422d98:	strh	w0, [x1, #18]
  422d9c:	mov	w0, #0x1                   	// #1
  422da0:	ret
  422da4:	stp	x29, x30, [sp, #-32]!
  422da8:	mov	x29, sp
  422dac:	stp	x19, x20, [sp, #16]
  422db0:	mov	w20, #0x0                   	// #0
  422db4:	cbz	x0, 422de8 <ferror@plt+0x200b8>
  422db8:	mov	x19, x0
  422dbc:	mov	w20, #0x0                   	// #0
  422dc0:	b	422ddc <ferror@plt+0x200ac>
  422dc4:	ldr	x0, [x19, #24]
  422dc8:	bl	422da4 <ferror@plt+0x20074>
  422dcc:	add	w20, w20, w0
  422dd0:	add	w20, w20, #0x1
  422dd4:	ldr	x19, [x19]
  422dd8:	cbz	x19, 422de8 <ferror@plt+0x200b8>
  422ddc:	ldrb	w0, [x19, #16]
  422de0:	cbz	w0, 422dd0 <ferror@plt+0x200a0>
  422de4:	b	422dc4 <ferror@plt+0x20094>
  422de8:	mov	w0, w20
  422dec:	ldp	x19, x20, [sp, #16]
  422df0:	ldp	x29, x30, [sp], #32
  422df4:	ret
  422df8:	stp	x29, x30, [sp, #-32]!
  422dfc:	mov	x29, sp
  422e00:	stp	x19, x20, [sp, #16]
  422e04:	mov	x19, x0
  422e08:	and	w20, w1, #0xff
  422e0c:	bl	431be0 <ferror@plt+0x2eeb0>
  422e10:	ldrb	w1, [x0, #4]
  422e14:	cmp	w1, #0x35
  422e18:	b.eq	422e50 <ferror@plt+0x20120>  // b.none
  422e1c:	ldrh	w2, [x0, #6]
  422e20:	tbnz	w2, #4, 422ec4 <ferror@plt+0x20194>
  422e24:	cmp	w1, #0x16
  422e28:	b.eq	422ee8 <ferror@plt+0x201b8>  // b.none
  422e2c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422e30:	add	x2, x2, #0xc40
  422e34:	mov	w1, #0x3                   	// #3
  422e38:	mov	x0, x19
  422e3c:	bl	426a10 <ferror@plt+0x23ce0>
  422e40:	mov	x0, #0x0                   	// #0
  422e44:	ldp	x19, x20, [sp, #16]
  422e48:	ldp	x29, x30, [sp], #32
  422e4c:	ret
  422e50:	ldr	x0, [x0, #8]
  422e54:	cbz	w20, 422e7c <ferror@plt+0x2014c>
  422e58:	ldr	x1, [x19, #1248]
  422e5c:	cmp	x1, x0
  422e60:	b.eq	422e8c <ferror@plt+0x2015c>  // b.none
  422e64:	ldr	x1, [x19, #1288]
  422e68:	cmp	x1, x0
  422e6c:	b.eq	422ea8 <ferror@plt+0x20178>  // b.none
  422e70:	ldr	x1, [x19, #1296]
  422e74:	cmp	x1, x0
  422e78:	b.eq	422ea8 <ferror@plt+0x20178>  // b.none
  422e7c:	ldrh	w1, [x0, #18]
  422e80:	tst	x1, #0x8
  422e84:	csel	x0, x0, xzr, eq  // eq = none
  422e88:	b	422e44 <ferror@plt+0x20114>
  422e8c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422e90:	add	x2, x2, #0xb70
  422e94:	mov	w1, #0x3                   	// #3
  422e98:	mov	x0, x19
  422e9c:	bl	426a10 <ferror@plt+0x23ce0>
  422ea0:	mov	x0, #0x0                   	// #0
  422ea4:	b	422e44 <ferror@plt+0x20114>
  422ea8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422eac:	add	x2, x2, #0xba0
  422eb0:	mov	w1, #0x3                   	// #3
  422eb4:	mov	x0, x19
  422eb8:	bl	426a10 <ferror@plt+0x23ce0>
  422ebc:	mov	x0, #0x0                   	// #0
  422ec0:	b	422e44 <ferror@plt+0x20114>
  422ec4:	ldr	x0, [x0, #8]
  422ec8:	ldr	x3, [x0]
  422ecc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422ed0:	add	x2, x2, #0xbd8
  422ed4:	mov	w1, #0x3                   	// #3
  422ed8:	mov	x0, x19
  422edc:	bl	426a10 <ferror@plt+0x23ce0>
  422ee0:	mov	x0, #0x0                   	// #0
  422ee4:	b	422e44 <ferror@plt+0x20114>
  422ee8:	ldr	x0, [x19, #144]
  422eec:	ldr	x3, [x0, #8]
  422ef0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422ef4:	add	x2, x2, #0xc18
  422ef8:	mov	w1, #0x3                   	// #3
  422efc:	mov	x0, x19
  422f00:	bl	426a10 <ferror@plt+0x23ce0>
  422f04:	mov	x0, #0x0                   	// #0
  422f08:	b	422e44 <ferror@plt+0x20114>
  422f0c:	stp	x29, x30, [sp, #-32]!
  422f10:	mov	x29, sp
  422f14:	stp	x19, x20, [sp, #16]
  422f18:	mov	x20, x0
  422f1c:	mov	w19, w1
  422f20:	bl	431be0 <ferror@plt+0x2eeb0>
  422f24:	mov	x1, x0
  422f28:	ldrb	w2, [x0, #4]
  422f2c:	cmp	w2, #0x37
  422f30:	b.eq	422f4c <ferror@plt+0x2021c>  // b.none
  422f34:	mov	w0, #0x0                   	// #0
  422f38:	cmp	w2, #0x16
  422f3c:	b.ne	422f58 <ferror@plt+0x20228>  // b.any
  422f40:	ldp	x19, x20, [sp, #16]
  422f44:	ldp	x29, x30, [sp], #32
  422f48:	ret
  422f4c:	ldr	w0, [x0, #8]
  422f50:	cmp	w0, #0x1
  422f54:	b.eq	422f80 <ferror@plt+0x20250>  // b.none
  422f58:	mov	x0, x20
  422f5c:	bl	431e54 <ferror@plt+0x2f124>
  422f60:	mov	x3, x0
  422f64:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  422f68:	add	x2, x2, #0xc60
  422f6c:	mov	w1, #0x3                   	// #3
  422f70:	mov	x0, x20
  422f74:	bl	426a10 <ferror@plt+0x23ce0>
  422f78:	mov	w0, #0x0                   	// #0
  422f7c:	b	422f40 <ferror@plt+0x20210>
  422f80:	ldr	x0, [x1, #16]
  422f84:	ldrb	w2, [x0]
  422f88:	sub	w0, w2, #0x30
  422f8c:	cmp	w0, w19
  422f90:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  422f94:	b.hi	422f58 <ferror@plt+0x20228>  // b.pmore
  422f98:	cmp	w0, #0x4
  422f9c:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  422fa0:	b.ne	422f58 <ferror@plt+0x20228>  // b.any
  422fa4:	cmp	w19, #0x0
  422fa8:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  422fac:	b.eq	422f58 <ferror@plt+0x20228>  // b.none
  422fb0:	b	422f40 <ferror@plt+0x20210>
  422fb4:	stp	x29, x30, [sp, #-32]!
  422fb8:	mov	x29, sp
  422fbc:	str	x19, [sp, #16]
  422fc0:	mov	x19, x0
  422fc4:	mov	x0, x19
  422fc8:	bl	438a9c <ferror@plt+0x35d6c>
  422fcc:	ldrb	w1, [x0, #4]
  422fd0:	cmp	w1, #0x53
  422fd4:	b.eq	422fc4 <ferror@plt+0x20294>  // b.none
  422fd8:	ldr	x19, [sp, #16]
  422fdc:	ldp	x29, x30, [sp], #32
  422fe0:	ret
  422fe4:	stp	x29, x30, [sp, #-48]!
  422fe8:	mov	x29, sp
  422fec:	stp	x19, x20, [sp, #16]
  422ff0:	mov	x20, x0
  422ff4:	bl	422fb4 <ferror@plt+0x20284>
  422ff8:	mov	x19, x0
  422ffc:	ldrb	w0, [x0, #4]
  423000:	cmp	w0, #0x16
  423004:	b.eq	423080 <ferror@plt+0x20350>  // b.none
  423008:	ldrb	w0, [x19, #4]
  42300c:	mov	x19, #0x0                   	// #0
  423010:	cmp	w0, #0x14
  423014:	b.ne	423070 <ferror@plt+0x20340>  // b.any
  423018:	mov	x0, x20
  42301c:	bl	422fb4 <ferror@plt+0x20284>
  423020:	mov	x19, x0
  423024:	ldrb	w0, [x0, #4]
  423028:	cmp	w0, #0x16
  42302c:	b.eq	423090 <ferror@plt+0x20360>  // b.none
  423030:	ldrb	w0, [x19, #4]
  423034:	sub	w0, w0, #0x3e
  423038:	and	w0, w0, #0xff
  42303c:	cmp	w0, #0x4
  423040:	b.hi	4230b0 <ferror@plt+0x20380>  // b.pmore
  423044:	str	x21, [sp, #32]
  423048:	mov	x0, x20
  42304c:	bl	422fb4 <ferror@plt+0x20284>
  423050:	mov	x21, x0
  423054:	ldrb	w0, [x0, #4]
  423058:	cmp	w0, #0x16
  42305c:	b.eq	4230a0 <ferror@plt+0x20370>  // b.none
  423060:	ldrb	w0, [x21, #4]
  423064:	cmp	w0, #0x15
  423068:	csel	x19, x19, xzr, eq  // eq = none
  42306c:	ldr	x21, [sp, #32]
  423070:	mov	x0, x19
  423074:	ldp	x19, x20, [sp, #16]
  423078:	ldp	x29, x30, [sp], #48
  42307c:	ret
  423080:	mov	w1, #0x1                   	// #1
  423084:	mov	x0, x20
  423088:	bl	435970 <ferror@plt+0x32c40>
  42308c:	b	423008 <ferror@plt+0x202d8>
  423090:	mov	w1, #0x1                   	// #1
  423094:	mov	x0, x20
  423098:	bl	435970 <ferror@plt+0x32c40>
  42309c:	b	423030 <ferror@plt+0x20300>
  4230a0:	mov	w1, #0x1                   	// #1
  4230a4:	mov	x0, x20
  4230a8:	bl	435970 <ferror@plt+0x32c40>
  4230ac:	b	423060 <ferror@plt+0x20330>
  4230b0:	mov	x19, #0x0                   	// #0
  4230b4:	b	423070 <ferror@plt+0x20340>
  4230b8:	stp	x29, x30, [sp, #-32]!
  4230bc:	mov	x29, sp
  4230c0:	stp	x19, x20, [sp, #16]
  4230c4:	mov	x19, x0
  4230c8:	ldr	x0, [x0, #448]
  4230cc:	ldurb	w0, [x0, #-20]
  4230d0:	cmp	w0, #0x16
  4230d4:	b.eq	4230f8 <ferror@plt+0x203c8>  // b.none
  4230d8:	and	w1, w1, #0xff
  4230dc:	mov	w20, w2
  4230e0:	cbz	w1, 423104 <ferror@plt+0x203d4>
  4230e4:	mov	x0, x19
  4230e8:	bl	438a9c <ferror@plt+0x35d6c>
  4230ec:	ldrb	w0, [x0, #4]
  4230f0:	cmp	w0, #0x16
  4230f4:	b.ne	423110 <ferror@plt+0x203e0>  // b.any
  4230f8:	ldp	x19, x20, [sp, #16]
  4230fc:	ldp	x29, x30, [sp], #32
  423100:	ret
  423104:	mov	x0, x19
  423108:	bl	431be0 <ferror@plt+0x2eeb0>
  42310c:	b	4230ec <ferror@plt+0x203bc>
  423110:	ldr	x0, [x19, #144]
  423114:	ldr	x3, [x0, #8]
  423118:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  42311c:	add	x2, x2, #0xc88
  423120:	mov	w1, w20
  423124:	mov	x0, x19
  423128:	bl	426b04 <ferror@plt+0x23dd4>
  42312c:	b	4230f8 <ferror@plt+0x203c8>
  423130:	stp	x29, x30, [sp, #-16]!
  423134:	mov	x29, sp
  423138:	mov	w2, #0x0                   	// #0
  42313c:	bl	4230b8 <ferror@plt+0x20388>
  423140:	ldp	x29, x30, [sp], #16
  423144:	ret
  423148:	stp	x29, x30, [sp, #-32]!
  42314c:	mov	x29, sp
  423150:	str	x19, [sp, #16]
  423154:	mov	x19, x0
  423158:	bl	438a9c <ferror@plt+0x35d6c>
  42315c:	ldrb	w1, [x0, #4]
  423160:	cmp	w1, #0x3e
  423164:	b.ne	423184 <ferror@plt+0x20454>  // b.any
  423168:	ldr	x3, [x19, #952]
  42316c:	cbz	x3, 4231a0 <ferror@plt+0x20470>
  423170:	add	x2, x0, #0x8
  423174:	ldr	w1, [x19, #48]
  423178:	mov	x0, x19
  42317c:	blr	x3
  423180:	b	4231a0 <ferror@plt+0x20470>
  423184:	ldr	x0, [x19, #144]
  423188:	ldr	x3, [x0, #8]
  42318c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423190:	add	x2, x2, #0xcb0
  423194:	mov	w1, #0x3                   	// #3
  423198:	mov	x0, x19
  42319c:	bl	426a10 <ferror@plt+0x23ce0>
  4231a0:	mov	w1, #0x0                   	// #0
  4231a4:	mov	x0, x19
  4231a8:	bl	423130 <ferror@plt+0x20400>
  4231ac:	ldr	x19, [sp, #16]
  4231b0:	ldp	x29, x30, [sp], #32
  4231b4:	ret
  4231b8:	stp	x29, x30, [sp, #-32]!
  4231bc:	mov	x29, sp
  4231c0:	str	x19, [sp, #16]
  4231c4:	mov	x19, x0
  4231c8:	ldr	x0, [x0, #136]
  4231cc:	ldr	x0, [x0, #8]
  4231d0:	cbz	x0, 4231e8 <ferror@plt+0x204b8>
  4231d4:	mov	x0, x19
  4231d8:	bl	4357ec <ferror@plt+0x32abc>
  4231dc:	ldr	x0, [x19, #136]
  4231e0:	ldr	x0, [x0, #8]
  4231e4:	cbnz	x0, 4231d4 <ferror@plt+0x204a4>
  4231e8:	ldr	x0, [x19, #448]
  4231ec:	ldurb	w0, [x0, #-20]
  4231f0:	cmp	w0, #0x16
  4231f4:	b.eq	42320c <ferror@plt+0x204dc>  // b.none
  4231f8:	mov	x0, x19
  4231fc:	bl	431be0 <ferror@plt+0x2eeb0>
  423200:	ldrb	w0, [x0, #4]
  423204:	cmp	w0, #0x16
  423208:	b.ne	4231f8 <ferror@plt+0x204c8>  // b.any
  42320c:	ldr	x19, [sp, #16]
  423210:	ldp	x29, x30, [sp], #32
  423214:	ret
  423218:	stp	x29, x30, [sp, #-48]!
  42321c:	mov	x29, sp
  423220:	stp	x19, x20, [sp, #16]
  423224:	str	x21, [sp, #32]
  423228:	mov	x20, x0
  42322c:	mov	w0, #0x1                   	// #1
  423230:	strb	w0, [x20, #23]
  423234:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x22c60>
  423238:	add	x21, x21, #0xcf0
  42323c:	b	423290 <ferror@plt+0x20560>
  423240:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423244:	add	x2, x2, #0xcc8
  423248:	mov	w1, #0x3                   	// #3
  42324c:	mov	x0, x20
  423250:	bl	426a10 <ferror@plt+0x23ce0>
  423254:	strb	wzr, [x20, #23]
  423258:	ldp	x19, x20, [sp, #16]
  42325c:	ldr	x21, [sp, #32]
  423260:	ldp	x29, x30, [sp], #48
  423264:	ret
  423268:	ldr	x3, [x19]
  42326c:	mov	x2, x21
  423270:	mov	w1, #0x0                   	// #0
  423274:	mov	x0, x20
  423278:	bl	426a10 <ferror@plt+0x23ce0>
  42327c:	mov	x0, x19
  423280:	bl	435c00 <ferror@plt+0x32ed0>
  423284:	ldrh	w1, [x19, #18]
  423288:	orr	w1, w1, #0x18
  42328c:	strh	w1, [x19, #18]
  423290:	mov	x0, x20
  423294:	bl	431be0 <ferror@plt+0x2eeb0>
  423298:	ldrb	w1, [x0, #4]
  42329c:	cmp	w1, #0x16
  4232a0:	b.eq	423254 <ferror@plt+0x20524>  // b.none
  4232a4:	cmp	w1, #0x35
  4232a8:	b.ne	423240 <ferror@plt+0x20510>  // b.any
  4232ac:	ldr	x19, [x0, #8]
  4232b0:	ldrh	w1, [x19, #18]
  4232b4:	tbnz	w1, #3, 423290 <ferror@plt+0x20560>
  4232b8:	ldrb	w0, [x19, #18]
  4232bc:	tbz	w0, #1, 42327c <ferror@plt+0x2054c>
  4232c0:	b	423268 <ferror@plt+0x20538>
  4232c4:	stp	x29, x30, [sp, #-32]!
  4232c8:	mov	x29, sp
  4232cc:	stp	x19, x20, [sp, #16]
  4232d0:	mov	x20, x0
  4232d4:	ldr	x0, [x0]
  4232d8:	ldr	x19, [x0, #96]
  4232dc:	cbz	x19, 423324 <ferror@plt+0x205f4>
  4232e0:	ldr	w0, [x19, #28]
  4232e4:	cmp	w0, #0x5
  4232e8:	b.eq	42333c <ferror@plt+0x2060c>  // b.none
  4232ec:	mov	w0, #0x5                   	// #5
  4232f0:	str	w0, [x19, #28]
  4232f4:	ldrb	w0, [x19, #24]
  4232f8:	strb	w0, [x20, #18]
  4232fc:	mov	w0, #0x1                   	// #1
  423300:	strb	w0, [x19, #24]
  423304:	str	xzr, [x19, #16]
  423308:	ldrb	w0, [x19, #25]
  42330c:	cbnz	w0, 423318 <ferror@plt+0x205e8>
  423310:	ldrb	w0, [x20, #1140]
  423314:	cbnz	w0, 423370 <ferror@plt+0x20640>
  423318:	ldp	x19, x20, [sp, #16]
  42331c:	ldp	x29, x30, [sp], #32
  423320:	ret
  423324:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423328:	add	x2, x2, #0xd10
  42332c:	mov	w1, #0x3                   	// #3
  423330:	mov	x0, x20
  423334:	bl	426a10 <ferror@plt+0x23ce0>
  423338:	b	423318 <ferror@plt+0x205e8>
  42333c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423340:	add	x2, x2, #0xd28
  423344:	mov	w1, #0x3                   	// #3
  423348:	mov	x0, x20
  42334c:	bl	426a10 <ferror@plt+0x23ce0>
  423350:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423354:	add	x4, x4, #0xd40
  423358:	mov	w3, #0x0                   	// #0
  42335c:	ldr	w2, [x19, #8]
  423360:	mov	w1, #0x3                   	// #3
  423364:	mov	x0, x20
  423368:	bl	426bfc <ferror@plt+0x23ecc>
  42336c:	b	4232ec <ferror@plt+0x205bc>
  423370:	mov	w2, #0x8                   	// #8
  423374:	mov	w1, #0x0                   	// #0
  423378:	mov	x0, x20
  42337c:	bl	4230b8 <ferror@plt+0x20388>
  423380:	b	423318 <ferror@plt+0x205e8>
  423384:	stp	x29, x30, [sp, #-80]!
  423388:	mov	x29, sp
  42338c:	stp	x19, x20, [sp, #16]
  423390:	stp	x21, x22, [sp, #32]
  423394:	stp	x23, x24, [sp, #48]
  423398:	stp	x25, x26, [sp, #64]
  42339c:	mov	x19, x0
  4233a0:	mov	w20, w1
  4233a4:	mov	x23, x2
  4233a8:	ldrb	w2, [x0, #24]
  4233ac:	add	w2, w2, #0x1
  4233b0:	strb	w2, [x0, #24]
  4233b4:	str	xzr, [x23]
  4233b8:	bl	438a9c <ferror@plt+0x35d6c>
  4233bc:	mov	x22, x0
  4233c0:	ldrb	w0, [x0, #4]
  4233c4:	cmp	w0, #0x16
  4233c8:	b.eq	423424 <ferror@plt+0x206f4>  // b.none
  4233cc:	cmp	w0, #0x35
  4233d0:	b.ne	423440 <ferror@plt+0x20710>  // b.any
  4233d4:	ldr	w21, [x22]
  4233d8:	mov	x0, x19
  4233dc:	bl	438a9c <ferror@plt+0x35d6c>
  4233e0:	ldrb	w0, [x0, #4]
  4233e4:	cmp	w0, #0x14
  4233e8:	b.eq	423498 <ferror@plt+0x20768>  // b.none
  4233ec:	cmp	w20, #0x4
  4233f0:	b.eq	423488 <ferror@plt+0x20758>  // b.none
  4233f4:	cmp	w20, #0x11
  4233f8:	ccmp	w0, #0x16, #0x0, eq  // eq = none
  4233fc:	b.eq	4235a4 <ferror@plt+0x20874>  // b.none
  423400:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423404:	add	x4, x4, #0xda0
  423408:	mov	w3, #0x0                   	// #0
  42340c:	mov	w2, w21
  423410:	mov	w1, #0x3                   	// #3
  423414:	mov	x0, x19
  423418:	bl	426bfc <ferror@plt+0x23ecc>
  42341c:	mov	x0, #0x0                   	// #0
  423420:	b	423460 <ferror@plt+0x20730>
  423424:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423428:	add	x2, x2, #0xd60
  42342c:	mov	w1, #0x3                   	// #3
  423430:	mov	x0, x19
  423434:	bl	426a10 <ferror@plt+0x23ce0>
  423438:	mov	x0, #0x0                   	// #0
  42343c:	b	423460 <ferror@plt+0x20730>
  423440:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423444:	add	x4, x4, #0xd80
  423448:	mov	w3, #0x0                   	// #0
  42344c:	ldr	w2, [x22]
  423450:	mov	w1, #0x3                   	// #3
  423454:	mov	x0, x19
  423458:	bl	426bfc <ferror@plt+0x23ecc>
  42345c:	mov	x0, #0x0                   	// #0
  423460:	ldrb	w1, [x19, #24]
  423464:	sub	w1, w1, #0x1
  423468:	strb	w1, [x19, #24]
  42346c:	mov	sp, x29
  423470:	ldp	x19, x20, [sp, #16]
  423474:	ldp	x21, x22, [sp, #32]
  423478:	ldp	x23, x24, [sp, #48]
  42347c:	ldp	x25, x26, [sp, #64]
  423480:	ldp	x29, x30, [sp], #80
  423484:	ret
  423488:	mov	w1, #0x1                   	// #1
  42348c:	mov	x0, x19
  423490:	bl	435970 <ferror@plt+0x32c40>
  423494:	b	4235a4 <ferror@plt+0x20874>
  423498:	ldr	x1, [x19, #56]
  42349c:	ldr	x0, [x1, #24]
  4234a0:	ldr	x1, [x1, #16]
  4234a4:	sub	x0, x0, x1
  4234a8:	cmp	x0, #0x2f
  4234ac:	b.ls	4234dc <ferror@plt+0x207ac>  // b.plast
  4234b0:	ldr	x0, [x19, #56]
  4234b4:	ldr	x2, [x0, #16]
  4234b8:	mov	w1, #0x1                   	// #1
  4234bc:	mov	x0, x19
  4234c0:	bl	435d8c <ferror@plt+0x3305c>
  4234c4:	mov	x26, x0
  4234c8:	str	xzr, [x0]
  4234cc:	mov	w20, #0x0                   	// #0
  4234d0:	add	x25, x19, #0x38
  4234d4:	mov	x24, #0x18                  	// #24
  4234d8:	b	423540 <ferror@plt+0x20810>
  4234dc:	mov	x2, #0x30                  	// #48
  4234e0:	add	x1, x19, #0x38
  4234e4:	mov	x0, x19
  4234e8:	bl	42f3b0 <ferror@plt+0x2c680>
  4234ec:	b	4234b0 <ferror@plt+0x20780>
  4234f0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  4234f4:	add	x2, x2, #0xdc0
  4234f8:	mov	w1, #0x3                   	// #3
  4234fc:	mov	x0, x19
  423500:	bl	426a10 <ferror@plt+0x23ce0>
  423504:	b	42341c <ferror@plt+0x206ec>
  423508:	mov	x2, x24
  42350c:	mov	x1, x25
  423510:	mov	x0, x19
  423514:	bl	42f3b0 <ferror@plt+0x2c680>
  423518:	ldr	x0, [x19, #56]
  42351c:	ldr	x26, [x0, #16]
  423520:	ubfiz	x1, x20, #1, #32
  423524:	add	x1, x1, w20, uxtw
  423528:	add	x1, x26, x1, lsl #3
  42352c:	ldp	x2, x3, [x21]
  423530:	stp	x2, x3, [x1, #24]
  423534:	ldr	x0, [x21, #16]
  423538:	str	x0, [x1, #40]
  42353c:	add	w20, w20, #0x1
  423540:	mov	x0, x19
  423544:	bl	438a9c <ferror@plt+0x35d6c>
  423548:	mov	x21, x0
  42354c:	ldrb	w0, [x0, #4]
  423550:	cmp	w0, #0x15
  423554:	b.eq	42358c <ferror@plt+0x2085c>  // b.none
  423558:	cmp	w0, #0x16
  42355c:	b.eq	4234f0 <ferror@plt+0x207c0>  // b.none
  423560:	ldr	x1, [x19, #56]
  423564:	ldr	x0, [x1, #24]
  423568:	ldr	x1, [x1, #16]
  42356c:	sub	x0, x0, x1
  423570:	ubfiz	x1, x20, #1, #32
  423574:	add	x1, x1, w20, uxtw
  423578:	lsl	x1, x1, #3
  42357c:	add	x1, x1, #0x48
  423580:	cmp	x0, x1
  423584:	b.cs	423518 <ferror@plt+0x207e8>  // b.hs, b.nlast
  423588:	b	423508 <ferror@plt+0x207d8>
  42358c:	cbz	w20, 4235f4 <ferror@plt+0x208c4>
  423590:	ldrh	w0, [x26, #30]
  423594:	and	w0, w0, #0xfffffffe
  423598:	strh	w0, [x26, #30]
  42359c:	str	w20, [x26, #12]
  4235a0:	str	x26, [x23]
  4235a4:	ldr	x0, [x22, #8]
  4235a8:	ldr	w2, [x0, #8]
  4235ac:	add	w21, w2, #0x1
  4235b0:	add	w0, w2, #0x1
  4235b4:	add	x0, x0, #0xf
  4235b8:	and	x0, x0, #0x1fffffff0
  4235bc:	sub	sp, sp, x0
  4235c0:	mov	x20, sp
  4235c4:	mov	x0, x20
  4235c8:	mov	w1, #0x23                  	// #35
  4235cc:	strb	w1, [x0], #1
  4235d0:	ldr	x1, [x22, #8]
  4235d4:	mov	w2, w2
  4235d8:	ldr	x1, [x1]
  4235dc:	bl	402620 <memcpy@plt>
  4235e0:	mov	w2, w21
  4235e4:	mov	x1, x20
  4235e8:	mov	x0, x19
  4235ec:	bl	42d2b4 <ferror@plt+0x2a584>
  4235f0:	b	423460 <ferror@plt+0x20730>
  4235f4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  4235f8:	add	x2, x2, #0xde0
  4235fc:	mov	w1, #0x3                   	// #3
  423600:	mov	x0, x19
  423604:	bl	426a10 <ferror@plt+0x23ce0>
  423608:	b	42341c <ferror@plt+0x206ec>
  42360c:	stp	x29, x30, [sp, #-48]!
  423610:	mov	x29, sp
  423614:	stp	x19, x20, [sp, #16]
  423618:	stp	x21, x22, [sp, #32]
  42361c:	mov	x22, x1
  423620:	add	x21, x0, #0x18
  423624:	ldr	x19, [x0, #24]
  423628:	cbnz	x19, 423658 <ferror@plt+0x20928>
  42362c:	mov	x0, x21
  423630:	ldp	x19, x20, [sp, #16]
  423634:	ldp	x21, x22, [sp, #32]
  423638:	ldp	x29, x30, [sp], #48
  42363c:	ret
  423640:	ldr	w0, [x19, #12]
  423644:	cmp	w0, w20
  423648:	b.eq	42362c <ferror@plt+0x208fc>  // b.none
  42364c:	ldr	x21, [x21]
  423650:	ldr	x19, [x21]
  423654:	cbz	x19, 42362c <ferror@plt+0x208fc>
  423658:	ldr	w0, [x19, #12]
  42365c:	ldr	w1, [x22, #12]
  423660:	cmp	w0, w1
  423664:	b.ne	42364c <ferror@plt+0x2091c>  // b.any
  423668:	cbz	w0, 42362c <ferror@plt+0x208fc>
  42366c:	mov	w20, #0x0                   	// #0
  423670:	mov	w0, w20
  423674:	add	x0, x0, #0x1
  423678:	add	x0, x0, x0, lsl #1
  42367c:	lsl	x0, x0, #3
  423680:	add	x1, x22, x0
  423684:	add	x0, x19, x0
  423688:	bl	42eb4c <ferror@plt+0x2be1c>
  42368c:	cbz	w0, 423640 <ferror@plt+0x20910>
  423690:	add	w20, w20, #0x1
  423694:	ldr	w0, [x19, #12]
  423698:	cmp	w0, w20
  42369c:	b.hi	423670 <ferror@plt+0x20940>  // b.pmore
  4236a0:	b	423640 <ferror@plt+0x20910>
  4236a4:	stp	x29, x30, [sp, #-48]!
  4236a8:	mov	x29, sp
  4236ac:	str	x19, [sp, #16]
  4236b0:	mov	x19, x0
  4236b4:	add	x2, sp, #0x28
  4236b8:	mov	w1, #0x11                  	// #17
  4236bc:	bl	423384 <ferror@plt+0x20654>
  4236c0:	cbz	x0, 4236ec <ferror@plt+0x209bc>
  4236c4:	ldr	x1, [sp, #40]
  4236c8:	cbz	x1, 4236f8 <ferror@plt+0x209c8>
  4236cc:	bl	42360c <ferror@plt+0x208dc>
  4236d0:	ldr	x1, [x0]
  4236d4:	cbz	x1, 4236e0 <ferror@plt+0x209b0>
  4236d8:	ldr	x1, [x1]
  4236dc:	str	x1, [x0]
  4236e0:	mov	w1, #0x0                   	// #0
  4236e4:	mov	x0, x19
  4236e8:	bl	423130 <ferror@plt+0x20400>
  4236ec:	ldr	x19, [sp, #16]
  4236f0:	ldp	x29, x30, [sp], #48
  4236f4:	ret
  4236f8:	bl	435c00 <ferror@plt+0x32ed0>
  4236fc:	b	4236ec <ferror@plt+0x209bc>
  423700:	stp	x29, x30, [sp, #-48]!
  423704:	mov	x29, sp
  423708:	stp	x19, x20, [sp, #16]
  42370c:	mov	x20, x0
  423710:	add	x2, sp, #0x28
  423714:	mov	w1, #0x10                  	// #16
  423718:	bl	423384 <ferror@plt+0x20654>
  42371c:	cbz	x0, 423750 <ferror@plt+0x20a20>
  423720:	mov	x19, x0
  423724:	ldr	x1, [sp, #40]
  423728:	bl	42360c <ferror@plt+0x208dc>
  42372c:	ldr	x0, [x0]
  423730:	cbz	x0, 42375c <ferror@plt+0x20a2c>
  423734:	ldr	x3, [x19]
  423738:	add	x3, x3, #0x1
  42373c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423740:	add	x2, x2, #0xe00
  423744:	mov	w1, #0x0                   	// #0
  423748:	mov	x0, x20
  42374c:	bl	426a10 <ferror@plt+0x23ce0>
  423750:	ldp	x19, x20, [sp, #16]
  423754:	ldp	x29, x30, [sp], #48
  423758:	ret
  42375c:	ldr	x0, [sp, #40]
  423760:	ldr	w1, [x0, #12]
  423764:	add	x1, x1, #0x1
  423768:	add	x1, x1, x1, lsl #1
  42376c:	lsl	x1, x1, #3
  423770:	mov	x0, x20
  423774:	bl	431f14 <ferror@plt+0x2f1e4>
  423778:	str	x0, [sp, #40]
  42377c:	ldr	x1, [x19, #24]
  423780:	str	x1, [x0]
  423784:	ldr	x0, [sp, #40]
  423788:	str	x0, [x19, #24]
  42378c:	mov	w1, #0x0                   	// #0
  423790:	mov	x0, x20
  423794:	bl	423130 <ferror@plt+0x20400>
  423798:	b	423750 <ferror@plt+0x20a20>
  42379c:	stp	x29, x30, [sp, #-48]!
  4237a0:	mov	x29, sp
  4237a4:	stp	x19, x20, [sp, #16]
  4237a8:	mov	x19, x0
  4237ac:	and	w20, w1, #0xff
  4237b0:	bl	431be0 <ferror@plt+0x2eeb0>
  4237b4:	ldrb	w1, [x0, #4]
  4237b8:	cmp	w1, #0x3e
  4237bc:	b.eq	4237f8 <ferror@plt+0x20ac8>  // b.none
  4237c0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4237c4:	add	x0, x0, #0x738
  4237c8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4237cc:	add	x3, x3, #0x600
  4237d0:	cmp	w20, #0x0
  4237d4:	csel	x3, x3, x0, ne  // ne = any
  4237d8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  4237dc:	add	x2, x2, #0xe18
  4237e0:	mov	w1, #0x3                   	// #3
  4237e4:	mov	x0, x19
  4237e8:	bl	426a10 <ferror@plt+0x23ce0>
  4237ec:	ldp	x19, x20, [sp, #16]
  4237f0:	ldp	x29, x30, [sp], #48
  4237f4:	ret
  4237f8:	mov	w4, #0x3e                  	// #62
  4237fc:	add	x3, sp, #0x20
  423800:	mov	x2, #0x1                   	// #1
  423804:	add	x1, x0, #0x8
  423808:	mov	x0, x19
  42380c:	bl	422900 <ferror@plt+0x1fbd0>
  423810:	and	w0, w0, #0xff
  423814:	cbz	w0, 4237c0 <ferror@plt+0x20a90>
  423818:	ldr	w0, [sp, #32]
  42381c:	cbz	w0, 4237c0 <ferror@plt+0x20a90>
  423820:	cmp	w20, #0x0
  423824:	ldr	x3, [sp, #40]
  423828:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  42382c:	add	x2, x2, #0xf58
  423830:	mov	w1, #0x3                   	// #3
  423834:	csel	w1, w1, wzr, ne  // ne = any
  423838:	mov	x0, x19
  42383c:	bl	426a10 <ferror@plt+0x23ce0>
  423840:	ldr	x0, [sp, #40]
  423844:	bl	402a90 <free@plt>
  423848:	b	4237ec <ferror@plt+0x20abc>
  42384c:	stp	x29, x30, [sp, #-16]!
  423850:	mov	x29, sp
  423854:	mov	w1, #0x1                   	// #1
  423858:	bl	42379c <ferror@plt+0x20a6c>
  42385c:	ldp	x29, x30, [sp], #16
  423860:	ret
  423864:	stp	x29, x30, [sp, #-16]!
  423868:	mov	x29, sp
  42386c:	mov	w1, #0x0                   	// #0
  423870:	bl	42379c <ferror@plt+0x20a6c>
  423874:	ldp	x29, x30, [sp], #16
  423878:	ret
  42387c:	stp	x29, x30, [sp, #-80]!
  423880:	mov	x29, sp
  423884:	stp	x19, x20, [sp, #16]
  423888:	stp	x21, x22, [sp, #32]
  42388c:	stp	x23, x24, [sp, #48]
  423890:	str	x25, [sp, #64]
  423894:	mov	x22, x0
  423898:	mov	x0, #0x400                 	// #1024
  42389c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4238a0:	mov	x21, x0
  4238a4:	mov	x25, #0x400                 	// #1024
  4238a8:	mov	x20, #0x0                   	// #0
  4238ac:	mov	w24, #0x20                  	// #32
  4238b0:	mov	w23, #0x1                   	// #1
  4238b4:	b	423920 <ferror@plt+0x20bf0>
  4238b8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  4238bc:	add	x2, x2, #0xe40
  4238c0:	mov	w1, #0x3                   	// #3
  4238c4:	mov	x0, x22
  4238c8:	bl	426a10 <ferror@plt+0x23ce0>
  4238cc:	strb	wzr, [x21, x20]
  4238d0:	mov	x0, x21
  4238d4:	ldp	x19, x20, [sp, #16]
  4238d8:	ldp	x21, x22, [sp, #32]
  4238dc:	ldp	x23, x24, [sp, #48]
  4238e0:	ldr	x25, [sp, #64]
  4238e4:	ldp	x29, x30, [sp], #80
  4238e8:	ret
  4238ec:	add	x1, x25, x1
  4238f0:	lsl	x25, x1, #1
  4238f4:	mov	x1, x25
  4238f8:	mov	x0, x21
  4238fc:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  423900:	mov	x21, x0
  423904:	b	423954 <ferror@plt+0x20c24>
  423908:	mov	w3, w23
  42390c:	add	x2, x21, x20
  423910:	mov	x1, x19
  423914:	mov	x0, x22
  423918:	bl	42e788 <ferror@plt+0x2ba58>
  42391c:	sub	x20, x0, x21
  423920:	mov	x0, x22
  423924:	bl	422fb4 <ferror@plt+0x20284>
  423928:	mov	x19, x0
  42392c:	ldrb	w1, [x0, #4]
  423930:	cmp	w1, #0x2
  423934:	b.eq	4238cc <ferror@plt+0x20b9c>  // b.none
  423938:	cmp	w1, #0x16
  42393c:	b.eq	4238b8 <ferror@plt+0x20b88>  // b.none
  423940:	bl	42e6bc <ferror@plt+0x2b98c>
  423944:	add	w1, w0, #0x2
  423948:	add	x0, x20, x1
  42394c:	cmp	x0, x25
  423950:	b.hi	4238ec <ferror@plt+0x20bbc>  // b.pmore
  423954:	ldrh	w0, [x19, #6]
  423958:	tbz	w0, #0, 423908 <ferror@plt+0x20bd8>
  42395c:	strb	w24, [x21, x20]
  423960:	add	x20, x20, #0x1
  423964:	b	423908 <ferror@plt+0x20bd8>
  423968:	stp	x29, x30, [sp, #-112]!
  42396c:	mov	x29, sp
  423970:	stp	x19, x20, [sp, #16]
  423974:	stp	x21, x22, [sp, #32]
  423978:	stp	x23, x24, [sp, #48]
  42397c:	mov	x19, x0
  423980:	mov	x23, x1
  423984:	mov	x22, x2
  423988:	mov	x20, x3
  42398c:	bl	422fb4 <ferror@plt+0x20284>
  423990:	mov	x21, x0
  423994:	ldr	w0, [x0]
  423998:	str	w0, [x20]
  42399c:	ldrb	w0, [x21, #4]
  4239a0:	cmp	w0, #0x3e
  4239a4:	b.eq	4239d0 <ferror@plt+0x20ca0>  // b.none
  4239a8:	cmp	w0, #0x44
  4239ac:	b.eq	4239e0 <ferror@plt+0x20cb0>  // b.none
  4239b0:	cmp	w0, #0x3
  4239b4:	b.ne	423a68 <ferror@plt+0x20d38>  // b.any
  4239b8:	mov	x0, x19
  4239bc:	bl	42387c <ferror@plt+0x20b4c>
  4239c0:	mov	x20, x0
  4239c4:	mov	w0, #0x1                   	// #1
  4239c8:	str	w0, [x23]
  4239cc:	b	423a20 <ferror@plt+0x20cf0>
  4239d0:	ldr	x0, [x21, #16]
  4239d4:	ldrb	w0, [x0]
  4239d8:	cmp	w0, #0x52
  4239dc:	b.eq	423a68 <ferror@plt+0x20d38>  // b.none
  4239e0:	ldr	w0, [x21, #8]
  4239e4:	sub	w0, w0, #0x1
  4239e8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4239ec:	mov	x20, x0
  4239f0:	ldr	w2, [x21, #8]
  4239f4:	ldr	x1, [x21, #16]
  4239f8:	sub	w2, w2, #0x2
  4239fc:	add	x1, x1, #0x1
  423a00:	bl	402620 <memcpy@plt>
  423a04:	ldr	w0, [x21, #8]
  423a08:	sub	w0, w0, #0x2
  423a0c:	strb	wzr, [x20, w0, uxtw]
  423a10:	ldrb	w0, [x21, #4]
  423a14:	cmp	w0, #0x44
  423a18:	cset	w0, eq  // eq = none
  423a1c:	str	w0, [x23]
  423a20:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  423a24:	add	x0, x0, #0x598
  423a28:	ldr	x1, [x19, #144]
  423a2c:	add	x0, x0, #0x108
  423a30:	cmp	x1, x0
  423a34:	b.eq	423a50 <ferror@plt+0x20d20>  // b.none
  423a38:	cbz	x22, 423a44 <ferror@plt+0x20d14>
  423a3c:	ldrb	w0, [x19, #1123]
  423a40:	cbz	w0, 423aac <ferror@plt+0x20d7c>
  423a44:	mov	w1, #0x1                   	// #1
  423a48:	mov	x0, x19
  423a4c:	bl	423130 <ferror@plt+0x20400>
  423a50:	mov	x0, x20
  423a54:	ldp	x19, x20, [sp, #16]
  423a58:	ldp	x21, x22, [sp, #32]
  423a5c:	ldp	x23, x24, [sp, #48]
  423a60:	ldp	x29, x30, [sp], #112
  423a64:	ret
  423a68:	ldr	x1, [x19, #144]
  423a6c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  423a70:	add	x0, x0, #0x598
  423a74:	add	x0, x0, #0x108
  423a78:	cmp	x1, x0
  423a7c:	b.eq	423aa0 <ferror@plt+0x20d70>  // b.none
  423a80:	ldr	x3, [x1, #8]
  423a84:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423a88:	add	x2, x2, #0xe78
  423a8c:	mov	w1, #0x3                   	// #3
  423a90:	mov	x0, x19
  423a94:	bl	426a10 <ferror@plt+0x23ce0>
  423a98:	mov	x20, #0x0                   	// #0
  423a9c:	b	423a50 <ferror@plt+0x20d20>
  423aa0:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x22c60>
  423aa4:	add	x3, x3, #0xe60
  423aa8:	b	423a84 <ferror@plt+0x20d54>
  423aac:	stp	x25, x26, [sp, #64]
  423ab0:	mov	x0, #0x40                  	// #64
  423ab4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  423ab8:	mov	x23, x0
  423abc:	ldr	x0, [x19, #448]
  423ac0:	ldurb	w0, [x0, #-20]
  423ac4:	mov	x26, #0x8                   	// #8
  423ac8:	mov	x24, #0x0                   	// #0
  423acc:	cmp	w0, #0x16
  423ad0:	b.eq	423ae8 <ferror@plt+0x20db8>  // b.none
  423ad4:	stp	x27, x28, [sp, #80]
  423ad8:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x22c60>
  423adc:	add	x27, x27, #0xc88
  423ae0:	mov	w28, #0x2                   	// #2
  423ae4:	b	423b14 <ferror@plt+0x20de4>
  423ae8:	mov	x24, #0x0                   	// #0
  423aec:	b	423b64 <ferror@plt+0x20e34>
  423af0:	ldr	x0, [x19, #144]
  423af4:	ldr	x3, [x0, #8]
  423af8:	mov	x2, x27
  423afc:	mov	w1, w28
  423b00:	mov	x0, x19
  423b04:	bl	426a10 <ferror@plt+0x23ce0>
  423b08:	b	423b14 <ferror@plt+0x20de4>
  423b0c:	str	x21, [x23, x24, lsl #3]
  423b10:	mov	x24, x25
  423b14:	mov	x0, x19
  423b18:	bl	431be0 <ferror@plt+0x2eeb0>
  423b1c:	mov	x21, x0
  423b20:	ldrb	w0, [x0, #4]
  423b24:	cmp	w0, #0x16
  423b28:	b.eq	423b60 <ferror@plt+0x20e30>  // b.none
  423b2c:	cmp	w0, #0x4f
  423b30:	b.ne	423af0 <ferror@plt+0x20dc0>  // b.any
  423b34:	add	x25, x24, #0x1
  423b38:	cmp	x25, x26
  423b3c:	b.cc	423b0c <ferror@plt+0x20ddc>  // b.lo, b.ul, b.last
  423b40:	lsl	x0, x26, #1
  423b44:	str	x0, [sp, #104]
  423b48:	lsl	x1, x26, #4
  423b4c:	mov	x0, x23
  423b50:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  423b54:	mov	x23, x0
  423b58:	ldr	x26, [sp, #104]
  423b5c:	b	423b0c <ferror@plt+0x20ddc>
  423b60:	ldp	x27, x28, [sp, #80]
  423b64:	str	xzr, [x23, x24, lsl #3]
  423b68:	str	x23, [x22]
  423b6c:	ldp	x25, x26, [sp, #64]
  423b70:	b	423a50 <ferror@plt+0x20d20>
  423b74:	stp	x29, x30, [sp, #-80]!
  423b78:	mov	x29, sp
  423b7c:	stp	x19, x20, [sp, #16]
  423b80:	str	x21, [sp, #32]
  423b84:	mov	x19, x0
  423b88:	mov	w21, w1
  423b8c:	str	xzr, [sp, #64]
  423b90:	ldrb	w2, [x0, #1123]
  423b94:	cmp	w2, #0x0
  423b98:	cset	w2, eq  // eq = none
  423b9c:	strb	w2, [x0, #21]
  423ba0:	add	x3, sp, #0x3c
  423ba4:	add	x2, sp, #0x40
  423ba8:	add	x1, sp, #0x4c
  423bac:	bl	423968 <ferror@plt+0x20c38>
  423bb0:	mov	x20, x0
  423bb4:	cbz	x0, 423be4 <ferror@plt+0x20eb4>
  423bb8:	ldrb	w0, [x0]
  423bbc:	cbz	w0, 423c08 <ferror@plt+0x20ed8>
  423bc0:	ldr	x0, [x19, #40]
  423bc4:	ldr	w0, [x0, #48]
  423bc8:	cmp	w0, #0xc7
  423bcc:	b.ls	423c30 <ferror@plt+0x20f00>  // b.plast
  423bd0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423bd4:	add	x2, x2, #0xeb8
  423bd8:	mov	w1, #0x3                   	// #3
  423bdc:	mov	x0, x19
  423be0:	bl	426a10 <ferror@plt+0x23ce0>
  423be4:	mov	x0, x20
  423be8:	bl	402a90 <free@plt>
  423bec:	ldr	x0, [sp, #64]
  423bf0:	cbz	x0, 423bf8 <ferror@plt+0x20ec8>
  423bf4:	bl	402a90 <free@plt>
  423bf8:	ldp	x19, x20, [sp, #16]
  423bfc:	ldr	x21, [sp, #32]
  423c00:	ldp	x29, x30, [sp], #80
  423c04:	ret
  423c08:	ldr	x0, [x19, #144]
  423c0c:	ldr	x5, [x0, #8]
  423c10:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423c14:	add	x4, x4, #0xea0
  423c18:	mov	w3, #0x0                   	// #0
  423c1c:	ldr	w2, [sp, #60]
  423c20:	mov	w1, #0x3                   	// #3
  423c24:	mov	x0, x19
  423c28:	bl	426bfc <ferror@plt+0x23ecc>
  423c2c:	b	423be4 <ferror@plt+0x20eb4>
  423c30:	mov	x0, x19
  423c34:	bl	4231b8 <ferror@plt+0x20488>
  423c38:	ldr	x6, [x19, #928]
  423c3c:	cbz	x6, 423c60 <ferror@plt+0x20f30>
  423c40:	ldr	x0, [x19, #144]
  423c44:	ldr	x5, [sp, #64]
  423c48:	ldr	w4, [sp, #76]
  423c4c:	mov	x3, x20
  423c50:	ldr	x2, [x0, #8]
  423c54:	ldr	w1, [x19, #48]
  423c58:	mov	x0, x19
  423c5c:	blr	x6
  423c60:	ldr	w4, [sp, #60]
  423c64:	mov	w3, w21
  423c68:	ldr	w2, [sp, #76]
  423c6c:	mov	x1, x20
  423c70:	mov	x0, x19
  423c74:	bl	42c7b4 <ferror@plt+0x29a84>
  423c78:	b	423be4 <ferror@plt+0x20eb4>
  423c7c:	stp	x29, x30, [sp, #-16]!
  423c80:	mov	x29, sp
  423c84:	mov	w1, #0x2                   	// #2
  423c88:	bl	423b74 <ferror@plt+0x20e44>
  423c8c:	ldp	x29, x30, [sp], #16
  423c90:	ret
  423c94:	stp	x29, x30, [sp, #-32]!
  423c98:	mov	x29, sp
  423c9c:	str	x19, [sp, #16]
  423ca0:	mov	x19, x0
  423ca4:	ldr	x0, [x0, #40]
  423ca8:	ldr	w0, [x0, #48]
  423cac:	mov	w1, #0x1                   	// #1
  423cb0:	cmp	w0, w1
  423cb4:	b.eq	423ccc <ferror@plt+0x20f9c>  // b.none
  423cb8:	mov	x0, x19
  423cbc:	bl	423b74 <ferror@plt+0x20e44>
  423cc0:	ldr	x19, [sp, #16]
  423cc4:	ldp	x29, x30, [sp], #32
  423cc8:	ret
  423ccc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423cd0:	add	x2, x2, #0xed8
  423cd4:	mov	w1, #0x0                   	// #0
  423cd8:	mov	x0, x19
  423cdc:	bl	426a10 <ferror@plt+0x23ce0>
  423ce0:	mov	w1, #0x0                   	// #0
  423ce4:	b	423cb8 <ferror@plt+0x20f88>
  423ce8:	stp	x29, x30, [sp, #-16]!
  423cec:	mov	x29, sp
  423cf0:	mov	w1, #0x0                   	// #0
  423cf4:	bl	423b74 <ferror@plt+0x20e44>
  423cf8:	ldp	x29, x30, [sp], #16
  423cfc:	ret
  423d00:	stp	x29, x30, [sp, #-64]!
  423d04:	mov	x29, sp
  423d08:	stp	x19, x20, [sp, #16]
  423d0c:	stp	x21, x22, [sp, #32]
  423d10:	str	x23, [sp, #48]
  423d14:	mov	x19, x0
  423d18:	mov	w20, w1
  423d1c:	mov	w22, w2
  423d20:	ldr	x0, [x0, #448]
  423d24:	ldur	w23, [x0, #-24]
  423d28:	mov	x1, #0x0                   	// #0
  423d2c:	cbz	w3, 423d38 <ferror@plt+0x21008>
  423d30:	ldr	x0, [x19, #144]
  423d34:	ldr	x1, [x0, #8]
  423d38:	ldrb	w0, [x19, #24]
  423d3c:	add	w0, w0, #0x1
  423d40:	strb	w0, [x19, #24]
  423d44:	mov	x0, x19
  423d48:	bl	42f09c <ferror@plt+0x2c36c>
  423d4c:	mov	x21, x0
  423d50:	ldrb	w0, [x19, #24]
  423d54:	sub	w0, w0, #0x1
  423d58:	strb	w0, [x19, #24]
  423d5c:	cmp	w22, #0x0
  423d60:	cset	w0, ne  // ne = any
  423d64:	cmp	w0, #0x0
  423d68:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  423d6c:	b.eq	423db8 <ferror@plt+0x21088>  // b.none
  423d70:	cmp	w20, #0x0
  423d74:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  423d78:	b.eq	423ddc <ferror@plt+0x210ac>  // b.none
  423d7c:	mov	x5, x21
  423d80:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  423d84:	add	x4, x4, #0xf58
  423d88:	mov	w3, #0x0                   	// #0
  423d8c:	mov	w2, w23
  423d90:	mov	w1, w22
  423d94:	mov	x0, x19
  423d98:	bl	426c74 <ferror@plt+0x23f44>
  423d9c:	mov	x0, x21
  423da0:	bl	402a90 <free@plt>
  423da4:	ldp	x19, x20, [sp, #16]
  423da8:	ldp	x21, x22, [sp, #32]
  423dac:	ldr	x23, [sp, #48]
  423db0:	ldp	x29, x30, [sp], #64
  423db4:	ret
  423db8:	mov	x5, x21
  423dbc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  423dc0:	add	x4, x4, #0xf58
  423dc4:	mov	w3, #0x0                   	// #0
  423dc8:	mov	w2, w23
  423dcc:	mov	w1, w22
  423dd0:	mov	x0, x19
  423dd4:	bl	426d6c <ferror@plt+0x2403c>
  423dd8:	b	423d9c <ferror@plt+0x2106c>
  423ddc:	mov	x5, x21
  423de0:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0x19c60>
  423de4:	add	x4, x4, #0xf58
  423de8:	mov	w3, #0x0                   	// #0
  423dec:	mov	w2, w23
  423df0:	mov	w1, w20
  423df4:	mov	x0, x19
  423df8:	bl	426bfc <ferror@plt+0x23ecc>
  423dfc:	b	423d9c <ferror@plt+0x2106c>
  423e00:	stp	x29, x30, [sp, #-16]!
  423e04:	mov	x29, sp
  423e08:	mov	w3, #0x1                   	// #1
  423e0c:	mov	w2, #0x12                  	// #18
  423e10:	mov	w1, w3
  423e14:	bl	423d00 <ferror@plt+0x20fd0>
  423e18:	ldp	x29, x30, [sp], #16
  423e1c:	ret
  423e20:	stp	x29, x30, [sp, #-16]!
  423e24:	mov	x29, sp
  423e28:	mov	w3, #0x1                   	// #1
  423e2c:	mov	w2, #0x0                   	// #0
  423e30:	mov	w1, #0x3                   	// #3
  423e34:	bl	423d00 <ferror@plt+0x20fd0>
  423e38:	ldp	x29, x30, [sp], #16
  423e3c:	ret
  423e40:	stp	x29, x30, [sp, #-32]!
  423e44:	mov	x29, sp
  423e48:	stp	x19, x20, [sp, #16]
  423e4c:	mov	x20, x0
  423e50:	ldr	x0, [x0]
  423e54:	ldr	x19, [x0, #96]
  423e58:	cbz	x19, 423e90 <ferror@plt+0x21160>
  423e5c:	ldr	w0, [x19, #28]
  423e60:	cmp	w0, #0x5
  423e64:	b.eq	423ea8 <ferror@plt+0x21178>  // b.none
  423e68:	mov	w0, #0x9                   	// #9
  423e6c:	str	w0, [x19, #28]
  423e70:	ldrb	w0, [x19, #24]
  423e74:	cbz	w0, 423edc <ferror@plt+0x211ac>
  423e78:	mov	w0, #0x1                   	// #1
  423e7c:	strb	w0, [x20, #18]
  423e80:	str	xzr, [x19, #16]
  423e84:	ldp	x19, x20, [sp, #16]
  423e88:	ldp	x29, x30, [sp], #32
  423e8c:	ret
  423e90:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423e94:	add	x2, x2, #0xf00
  423e98:	mov	w1, #0x3                   	// #3
  423e9c:	mov	x0, x20
  423ea0:	bl	426a10 <ferror@plt+0x23ce0>
  423ea4:	b	423e84 <ferror@plt+0x21154>
  423ea8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423eac:	add	x2, x2, #0xf18
  423eb0:	mov	w1, #0x3                   	// #3
  423eb4:	mov	x0, x20
  423eb8:	bl	426a10 <ferror@plt+0x23ce0>
  423ebc:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423ec0:	add	x4, x4, #0xd40
  423ec4:	mov	w3, #0x0                   	// #0
  423ec8:	ldr	w2, [x19, #8]
  423ecc:	mov	w1, #0x3                   	// #3
  423ed0:	mov	x0, x20
  423ed4:	bl	426bfc <ferror@plt+0x23ecc>
  423ed8:	b	423e68 <ferror@plt+0x21138>
  423edc:	mov	w1, #0x0                   	// #0
  423ee0:	mov	x0, x20
  423ee4:	bl	4291f8 <ferror@plt+0x264c8>
  423ee8:	eor	w1, w0, #0x1
  423eec:	strb	w1, [x20, #18]
  423ef0:	strb	w0, [x19, #24]
  423ef4:	b	423e80 <ferror@plt+0x21150>
  423ef8:	stp	x29, x30, [sp, #-32]!
  423efc:	mov	x29, sp
  423f00:	stp	x19, x20, [sp, #16]
  423f04:	mov	x19, x0
  423f08:	mov	w1, #0x1                   	// #1
  423f0c:	bl	422df8 <ferror@plt+0x200c8>
  423f10:	cbz	x0, 423f70 <ferror@plt+0x21240>
  423f14:	mov	x20, x0
  423f18:	ldr	x1, [x19, #1024]
  423f1c:	cbz	x1, 423f28 <ferror@plt+0x211f8>
  423f20:	mov	x0, x19
  423f24:	blr	x1
  423f28:	ldr	x3, [x19, #944]
  423f2c:	cbz	x3, 423f40 <ferror@plt+0x21210>
  423f30:	mov	x2, x20
  423f34:	ldr	w1, [x19, #48]
  423f38:	mov	x0, x19
  423f3c:	blr	x3
  423f40:	ldrb	w0, [x20, #18]
  423f44:	tbz	w0, #1, 423f70 <ferror@plt+0x21240>
  423f48:	ldrh	w0, [x20, #18]
  423f4c:	tbnz	w0, #5, 423f88 <ferror@plt+0x21258>
  423f50:	ldrb	w0, [x20, #18]
  423f54:	and	w0, w0, #0x3
  423f58:	cmp	w0, #0x3
  423f5c:	b.eq	423fa4 <ferror@plt+0x21274>  // b.none
  423f60:	ldrb	w0, [x19, #1151]
  423f64:	cbnz	w0, 423fd0 <ferror@plt+0x212a0>
  423f68:	mov	x0, x20
  423f6c:	bl	435c00 <ferror@plt+0x32ed0>
  423f70:	mov	w1, #0x0                   	// #0
  423f74:	mov	x0, x19
  423f78:	bl	423130 <ferror@plt+0x20400>
  423f7c:	ldp	x19, x20, [sp, #16]
  423f80:	ldp	x29, x30, [sp], #32
  423f84:	ret
  423f88:	ldr	x3, [x20]
  423f8c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  423f90:	add	x2, x2, #0xf30
  423f94:	mov	w1, #0x0                   	// #0
  423f98:	mov	x0, x19
  423f9c:	bl	426a10 <ferror@plt+0x23ce0>
  423fa0:	b	423f60 <ferror@plt+0x21230>
  423fa4:	ldrb	w0, [x19, #1143]
  423fa8:	cbz	w0, 423f60 <ferror@plt+0x21230>
  423fac:	ldr	x5, [x20]
  423fb0:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  423fb4:	add	x4, x4, #0xf30
  423fb8:	mov	w3, #0x0                   	// #0
  423fbc:	ldr	w2, [x19, #48]
  423fc0:	mov	w1, #0xb                   	// #11
  423fc4:	mov	x0, x19
  423fc8:	bl	426c74 <ferror@plt+0x23f44>
  423fcc:	b	423f60 <ferror@plt+0x21230>
  423fd0:	mov	x2, #0x0                   	// #0
  423fd4:	mov	x1, x20
  423fd8:	mov	x0, x19
  423fdc:	bl	434f54 <ferror@plt+0x32224>
  423fe0:	b	423f68 <ferror@plt+0x21238>
  423fe4:	stp	x29, x30, [sp, #-64]!
  423fe8:	mov	x29, sp
  423fec:	stp	x19, x20, [sp, #16]
  423ff0:	stp	x21, x22, [sp, #32]
  423ff4:	str	x23, [sp, #48]
  423ff8:	mov	x19, x0
  423ffc:	mov	w21, w1
  424000:	mov	w22, w2
  424004:	mov	x20, x3
  424008:	ldr	x23, [x0]
  42400c:	ldr	x0, [x0, #840]
  424010:	ldr	x1, [x19, #832]
  424014:	sub	x0, x0, x1
  424018:	cmp	x0, #0x1f
  42401c:	b.ls	4240d4 <ferror@plt+0x213a4>  // b.plast
  424020:	ldr	x5, [x19, #832]
  424024:	add	x5, x5, #0x20
  424028:	ldr	x0, [x19, #824]
  42402c:	cmp	x5, x0
  424030:	b.eq	4240e4 <ferror@plt+0x213b4>  // b.none
  424034:	ldr	x4, [x19, #856]
  424038:	add	x5, x5, x4
  42403c:	bic	x4, x5, x4
  424040:	str	x4, [x19, #832]
  424044:	ldr	x1, [x19, #816]
  424048:	ldr	x2, [x19, #840]
  42404c:	sub	x4, x4, x1
  424050:	sub	x1, x2, x1
  424054:	cmp	x4, x1
  424058:	b.ls	424060 <ferror@plt+0x21330>  // b.plast
  42405c:	str	x2, [x19, #832]
  424060:	ldr	x2, [x19, #832]
  424064:	str	x2, [x19, #824]
  424068:	ldr	w1, [x19, #48]
  42406c:	str	w1, [x0, #8]
  424070:	ldr	x1, [x23, #96]
  424074:	str	x1, [x0]
  424078:	ldrb	w1, [x19, #18]
  42407c:	cmp	w1, #0x0
  424080:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  424084:	cset	w1, eq  // eq = none
  424088:	strb	w1, [x0, #24]
  42408c:	ldrb	w1, [x19, #18]
  424090:	cmp	w1, #0x0
  424094:	cset	w1, ne  // ne = any
  424098:	strb	w1, [x0, #25]
  42409c:	str	w22, [x0, #28]
  4240a0:	ldrb	w1, [x19, #440]
  4240a4:	cbz	w1, 4240f4 <ferror@plt+0x213c4>
  4240a8:	ldr	x1, [x19, #424]
  4240ac:	cmp	x1, #0x0
  4240b0:	csel	x20, x20, xzr, eq  // eq = none
  4240b4:	str	x20, [x0, #16]
  4240b8:	strb	w21, [x19, #18]
  4240bc:	str	x0, [x23, #96]
  4240c0:	ldp	x19, x20, [sp, #16]
  4240c4:	ldp	x21, x22, [sp, #32]
  4240c8:	ldr	x23, [sp, #48]
  4240cc:	ldp	x29, x30, [sp], #64
  4240d0:	ret
  4240d4:	mov	x1, #0x20                  	// #32
  4240d8:	add	x0, x19, #0x328
  4240dc:	bl	4541c8 <_obstack_newchunk@@Base>
  4240e0:	b	424020 <ferror@plt+0x212f0>
  4240e4:	ldrb	w1, [x19, #888]
  4240e8:	orr	w1, w1, #0x2
  4240ec:	strb	w1, [x19, #888]
  4240f0:	b	424034 <ferror@plt+0x21304>
  4240f4:	mov	x20, #0x0                   	// #0
  4240f8:	b	4240b4 <ferror@plt+0x21384>
  4240fc:	stp	x29, x30, [sp, #-32]!
  424100:	mov	x29, sp
  424104:	str	x19, [sp, #16]
  424108:	mov	x19, x0
  42410c:	ldrb	w0, [x0, #18]
  424110:	mov	w1, #0x1                   	// #1
  424114:	cbz	w0, 424134 <ferror@plt+0x21404>
  424118:	ldr	x3, [x19, #432]
  42411c:	mov	w2, #0x4                   	// #4
  424120:	mov	x0, x19
  424124:	bl	423fe4 <ferror@plt+0x212b4>
  424128:	ldr	x19, [sp, #16]
  42412c:	ldp	x29, x30, [sp], #32
  424130:	ret
  424134:	mov	x0, x19
  424138:	bl	4291f8 <ferror@plt+0x264c8>
  42413c:	and	w1, w0, #0xff
  424140:	eor	w1, w1, #0x1
  424144:	b	424118 <ferror@plt+0x213e8>
  424148:	stp	x29, x30, [sp, #-48]!
  42414c:	mov	x29, sp
  424150:	stp	x19, x20, [sp, #16]
  424154:	str	x21, [sp, #32]
  424158:	mov	x19, x0
  42415c:	ldrb	w0, [x0, #18]
  424160:	mov	x20, #0x0                   	// #0
  424164:	mov	w21, #0x1                   	// #1
  424168:	cbz	w0, 424190 <ferror@plt+0x21460>
  42416c:	mov	x3, x20
  424170:	mov	w2, #0x6                   	// #6
  424174:	mov	w1, w21
  424178:	mov	x0, x19
  42417c:	bl	423fe4 <ferror@plt+0x212b4>
  424180:	ldp	x19, x20, [sp, #16]
  424184:	ldr	x21, [sp, #32]
  424188:	ldp	x29, x30, [sp], #48
  42418c:	ret
  424190:	mov	w1, #0x0                   	// #0
  424194:	mov	x0, x19
  424198:	bl	422df8 <ferror@plt+0x200c8>
  42419c:	mov	x20, x0
  4241a0:	cbz	x0, 42416c <ferror@plt+0x2143c>
  4241a4:	ldrb	w0, [x0, #18]
  4241a8:	mov	w21, #0x0                   	// #0
  4241ac:	tbz	w0, #1, 4241c0 <ferror@plt+0x21490>
  4241b0:	ldrh	w21, [x20, #18]
  4241b4:	ubfx	x21, x21, #8, #2
  4241b8:	eor	w21, w21, #0x1
  4241bc:	and	w21, w21, #0x1
  4241c0:	ldrb	w0, [x20, #18]
  4241c4:	and	w0, w0, #0x3
  4241c8:	cmp	w0, #0x2
  4241cc:	b.eq	424200 <ferror@plt+0x214d0>  // b.none
  4241d0:	ldrh	w0, [x20, #18]
  4241d4:	tbz	w0, #7, 424214 <ferror@plt+0x214e4>
  4241d8:	ldr	x3, [x19, #1032]
  4241dc:	cbz	x3, 4241f0 <ferror@plt+0x214c0>
  4241e0:	mov	x2, x20
  4241e4:	ldr	w1, [x19, #48]
  4241e8:	mov	x0, x19
  4241ec:	blr	x3
  4241f0:	mov	w1, #0x0                   	// #0
  4241f4:	mov	x0, x19
  4241f8:	bl	423130 <ferror@plt+0x20400>
  4241fc:	b	42416c <ferror@plt+0x2143c>
  424200:	ldr	x1, [x20, #24]
  424204:	ldrb	w0, [x1, #19]
  424208:	orr	w0, w0, #0x20
  42420c:	strb	w0, [x1, #19]
  424210:	b	4241d0 <ferror@plt+0x214a0>
  424214:	mov	x1, x20
  424218:	mov	x0, x19
  42421c:	bl	436cc8 <ferror@plt+0x33f98>
  424220:	b	4241d8 <ferror@plt+0x214a8>
  424224:	stp	x29, x30, [sp, #-48]!
  424228:	mov	x29, sp
  42422c:	stp	x19, x20, [sp, #16]
  424230:	mov	x19, x0
  424234:	ldrb	w0, [x0, #18]
  424238:	mov	w20, #0x1                   	// #1
  42423c:	cbz	w0, 424260 <ferror@plt+0x21530>
  424240:	mov	x3, #0x0                   	// #0
  424244:	mov	w2, #0x3                   	// #3
  424248:	mov	w1, w20
  42424c:	mov	x0, x19
  424250:	bl	423fe4 <ferror@plt+0x212b4>
  424254:	ldp	x19, x20, [sp, #16]
  424258:	ldp	x29, x30, [sp], #48
  42425c:	ret
  424260:	str	x21, [sp, #32]
  424264:	mov	w1, #0x0                   	// #0
  424268:	mov	x0, x19
  42426c:	bl	422df8 <ferror@plt+0x200c8>
  424270:	mov	x21, x0
  424274:	cbz	x0, 4242f0 <ferror@plt+0x215c0>
  424278:	ldrb	w0, [x0, #18]
  42427c:	tbz	w0, #1, 424288 <ferror@plt+0x21558>
  424280:	ldrh	w20, [x21, #18]
  424284:	ubfx	x20, x20, #8, #1
  424288:	ldrb	w1, [x21, #18]
  42428c:	and	w1, w1, #0x3
  424290:	cmp	w1, #0x2
  424294:	b.eq	4242cc <ferror@plt+0x2159c>  // b.none
  424298:	ldrh	w0, [x21, #18]
  42429c:	tbz	w0, #7, 4242e0 <ferror@plt+0x215b0>
  4242a0:	ldr	x3, [x19, #1032]
  4242a4:	cbz	x3, 4242b8 <ferror@plt+0x21588>
  4242a8:	mov	x2, x21
  4242ac:	ldr	w1, [x19, #48]
  4242b0:	mov	x0, x19
  4242b4:	blr	x3
  4242b8:	mov	w1, #0x0                   	// #0
  4242bc:	mov	x0, x19
  4242c0:	bl	423130 <ferror@plt+0x20400>
  4242c4:	ldr	x21, [sp, #32]
  4242c8:	b	424240 <ferror@plt+0x21510>
  4242cc:	ldr	x1, [x21, #24]
  4242d0:	ldrb	w0, [x1, #19]
  4242d4:	orr	w0, w0, #0x20
  4242d8:	strb	w0, [x1, #19]
  4242dc:	b	424298 <ferror@plt+0x21568>
  4242e0:	mov	x1, x21
  4242e4:	mov	x0, x19
  4242e8:	bl	436cc8 <ferror@plt+0x33f98>
  4242ec:	b	4242a0 <ferror@plt+0x21570>
  4242f0:	ldr	x21, [sp, #32]
  4242f4:	b	424240 <ferror@plt+0x21510>
  4242f8:	stp	x29, x30, [sp, #-32]!
  4242fc:	mov	x29, sp
  424300:	stp	x19, x20, [sp, #16]
  424304:	mov	x19, x0
  424308:	mov	w1, #0x1                   	// #1
  42430c:	bl	422df8 <ferror@plt+0x200c8>
  424310:	cbz	x0, 424378 <ferror@plt+0x21648>
  424314:	mov	x20, x0
  424318:	ldrb	w0, [x19, #1124]
  42431c:	cmp	w0, #0x0
  424320:	cset	w0, eq  // eq = none
  424324:	strb	w0, [x19, #21]
  424328:	ldr	x1, [x19, #1024]
  42432c:	cbz	x1, 424338 <ferror@plt+0x21608>
  424330:	mov	x0, x19
  424334:	blr	x1
  424338:	mov	x1, x20
  42433c:	mov	x0, x19
  424340:	bl	435e00 <ferror@plt+0x330d0>
  424344:	and	w0, w0, #0xff
  424348:	cbz	w0, 424364 <ferror@plt+0x21634>
  42434c:	ldr	x3, [x19, #936]
  424350:	cbz	x3, 424364 <ferror@plt+0x21634>
  424354:	mov	x2, x20
  424358:	ldr	w1, [x19, #48]
  42435c:	mov	x0, x19
  424360:	blr	x3
  424364:	ldrh	w0, [x20, #18]
  424368:	ubfx	x1, x0, #2, #8
  42436c:	and	w1, w1, #0xffffffdf
  424370:	bfi	w0, w1, #2, #8
  424374:	strh	w0, [x20, #18]
  424378:	ldp	x19, x20, [sp, #16]
  42437c:	ldp	x29, x30, [sp], #32
  424380:	ret
  424384:	stp	x29, x30, [sp, #-32]!
  424388:	mov	x29, sp
  42438c:	stp	x19, x20, [sp, #16]
  424390:	mov	x19, x0
  424394:	ldr	x0, [x0, #144]
  424398:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  42439c:	add	x1, x1, #0x598
  4243a0:	cmp	x0, x1
  4243a4:	b.eq	4244b0 <ferror@plt+0x21780>  // b.none
  4243a8:	cbz	x0, 424400 <ferror@plt+0x216d0>
  4243ac:	ldrb	w1, [x0, #19]
  4243b0:	tbz	w1, #4, 424434 <ferror@plt+0x21704>
  4243b4:	ldrb	w1, [x19, #18]
  4243b8:	cmp	w1, #0x0
  4243bc:	cset	w20, ne  // ne = any
  4243c0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  4243c4:	add	x1, x1, #0x598
  4243c8:	add	x2, x1, #0xd8
  4243cc:	cmp	x0, x2
  4243d0:	cset	w2, eq  // eq = none
  4243d4:	add	x1, x1, #0x60
  4243d8:	cmp	x0, x1
  4243dc:	csinc	w1, w2, wzr, ne  // ne = any
  4243e0:	strb	w1, [x19, #20]
  4243e4:	mov	w0, #0x0                   	// #0
  4243e8:	cbnz	w1, 424468 <ferror@plt+0x21738>
  4243ec:	mov	w2, #0x0                   	// #0
  4243f0:	mov	x1, #0x0                   	// #0
  4243f4:	mov	x0, x19
  4243f8:	bl	43a93c <ferror@plt+0x37c0c>
  4243fc:	b	424498 <ferror@plt+0x21768>
  424400:	ldrb	w1, [x19, #18]
  424404:	cmp	w1, #0x0
  424408:	cset	w20, ne  // ne = any
  42440c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  424410:	add	x1, x1, #0x598
  424414:	add	x2, x1, #0xd8
  424418:	add	x1, x1, #0x60
  42441c:	cmp	x0, x2
  424420:	ccmp	x0, x1, #0x4, ne  // ne = any
  424424:	cset	w0, eq  // eq = none
  424428:	strb	w0, [x19, #20]
  42442c:	mov	w0, #0x0                   	// #0
  424430:	b	42446c <ferror@plt+0x2173c>
  424434:	ldrb	w1, [x19, #18]
  424438:	cmp	w1, #0x0
  42443c:	cset	w20, ne  // ne = any
  424440:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424444:	add	x2, x2, #0x598
  424448:	add	x1, x2, #0xd8
  42444c:	cmp	x0, x1
  424450:	cset	w1, eq  // eq = none
  424454:	add	x2, x2, #0x60
  424458:	cmp	x0, x2
  42445c:	csinc	w0, w1, wzr, ne  // ne = any
  424460:	strb	w0, [x19, #20]
  424464:	cbz	w0, 424470 <ferror@plt+0x21740>
  424468:	strb	wzr, [x19, #18]
  42446c:	cbz	w0, 4243ec <ferror@plt+0x216bc>
  424470:	ldrb	w0, [x19, #24]
  424474:	add	w0, w0, #0x1
  424478:	strb	w0, [x19, #24]
  42447c:	mov	w2, #0x0                   	// #0
  424480:	mov	x1, #0x0                   	// #0
  424484:	mov	x0, x19
  424488:	bl	43a93c <ferror@plt+0x37c0c>
  42448c:	ldrb	w0, [x19, #24]
  424490:	sub	w0, w0, #0x1
  424494:	strb	w0, [x19, #24]
  424498:	strb	w20, [x19, #18]
  42449c:	ldr	x1, [x19, #1312]
  4244a0:	ldr	x2, [x19, #1328]
  4244a4:	sub	x2, x2, x1
  4244a8:	mov	x0, x19
  4244ac:	bl	43a8d8 <ferror@plt+0x37ba8>
  4244b0:	ldrb	w0, [x19, #24]
  4244b4:	add	w0, w0, #0x1
  4244b8:	strb	w0, [x19, #24]
  4244bc:	ldp	x19, x20, [sp, #16]
  4244c0:	ldp	x29, x30, [sp], #32
  4244c4:	ret
  4244c8:	stp	x29, x30, [sp, #-32]!
  4244cc:	mov	x29, sp
  4244d0:	str	x19, [sp, #16]
  4244d4:	mov	x19, x0
  4244d8:	ldrb	w0, [x0, #1160]
  4244dc:	cbz	w0, 424514 <ferror@plt+0x217e4>
  4244e0:	ldrb	w0, [x19, #32]
  4244e4:	cbnz	w0, 4244f4 <ferror@plt+0x217c4>
  4244e8:	ldrb	w0, [x19, #24]
  4244ec:	sub	w0, w0, #0x1
  4244f0:	strb	w0, [x19, #24]
  4244f4:	ldr	x1, [x19, #144]
  4244f8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4244fc:	add	x0, x0, #0x598
  424500:	cmp	x1, x0
  424504:	b.eq	424524 <ferror@plt+0x217f4>  // b.none
  424508:	mov	x0, x19
  42450c:	bl	43a910 <ferror@plt+0x37be0>
  424510:	b	424524 <ferror@plt+0x217f4>
  424514:	ldrb	w0, [x19, #32]
  424518:	cmp	w0, #0x0
  42451c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  424520:	b.ne	424550 <ferror@plt+0x21820>  // b.any
  424524:	ldrb	w0, [x19, #1123]
  424528:	cmp	w0, #0x0
  42452c:	cset	w0, eq  // eq = none
  424530:	strb	w0, [x19, #21]
  424534:	strb	wzr, [x19, #16]
  424538:	strb	wzr, [x19, #20]
  42453c:	strb	wzr, [x19, #19]
  424540:	str	xzr, [x19, #144]
  424544:	ldr	x19, [sp, #16]
  424548:	ldp	x29, x30, [sp], #32
  42454c:	ret
  424550:	mov	x0, x19
  424554:	bl	4231b8 <ferror@plt+0x20488>
  424558:	ldr	w0, [x19, #500]
  42455c:	cbnz	w0, 424524 <ferror@plt+0x217f4>
  424560:	add	x0, x19, #0x1c8
  424564:	str	x0, [x19, #488]
  424568:	ldr	x0, [x19, #472]
  42456c:	str	x0, [x19, #448]
  424570:	b	424524 <ferror@plt+0x217f4>
  424574:	stp	x29, x30, [sp, #-48]!
  424578:	mov	x29, sp
  42457c:	stp	x19, x20, [sp, #16]
  424580:	stp	x21, x22, [sp, #32]
  424584:	mov	x22, x0
  424588:	mov	x19, x1
  42458c:	mov	x20, x2
  424590:	cbnz	x1, 4245ec <ferror@plt+0x218bc>
  424594:	mov	x0, x20
  424598:	ldp	x19, x20, [sp, #16]
  42459c:	ldp	x21, x22, [sp, #32]
  4245a0:	ldp	x29, x30, [sp], #48
  4245a4:	ret
  4245a8:	mov	x2, x20
  4245ac:	ldr	x1, [x19, #24]
  4245b0:	mov	x0, x22
  4245b4:	bl	424574 <ferror@plt+0x21844>
  4245b8:	mov	x20, x0
  4245bc:	ldr	x21, [x20]
  4245c0:	mov	x0, x21
  4245c4:	bl	402680 <strlen@plt>
  4245c8:	mov	w2, w0
  4245cc:	mov	x1, x21
  4245d0:	mov	x0, x22
  4245d4:	bl	42d2b4 <ferror@plt+0x2a584>
  4245d8:	str	x0, [x19, #8]
  4245dc:	ldr	x0, [x20], #8
  4245e0:	bl	402a90 <free@plt>
  4245e4:	ldr	x19, [x19]
  4245e8:	cbz	x19, 424594 <ferror@plt+0x21864>
  4245ec:	ldrb	w0, [x19, #16]
  4245f0:	cbz	w0, 4245bc <ferror@plt+0x2188c>
  4245f4:	b	4245a8 <ferror@plt+0x21878>
  4245f8:	stp	x29, x30, [sp, #-48]!
  4245fc:	mov	x29, sp
  424600:	stp	x19, x20, [sp, #16]
  424604:	mov	x20, x0
  424608:	add	x3, sp, #0x28
  42460c:	mov	x2, #0x0                   	// #0
  424610:	add	x1, sp, #0x2c
  424614:	bl	423968 <ferror@plt+0x20c38>
  424618:	cbz	x0, 424644 <ferror@plt+0x21914>
  42461c:	mov	x19, x0
  424620:	ldr	w2, [sp, #44]
  424624:	mov	x1, x0
  424628:	mov	x0, x20
  42462c:	bl	42cd78 <ferror@plt+0x2a048>
  424630:	tbnz	w0, #31, 424650 <ferror@plt+0x21920>
  424634:	cmp	w0, #0x0
  424638:	b.gt	42466c <ferror@plt+0x2193c>
  42463c:	mov	x0, x19
  424640:	bl	402a90 <free@plt>
  424644:	ldp	x19, x20, [sp, #16]
  424648:	ldp	x29, x30, [sp], #48
  42464c:	ret
  424650:	mov	x3, x19
  424654:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  424658:	add	x2, x2, #0xf40
  42465c:	mov	w1, #0x0                   	// #0
  424660:	mov	x0, x20
  424664:	bl	426a10 <ferror@plt+0x23ce0>
  424668:	b	42463c <ferror@plt+0x2190c>
  42466c:	mov	x3, x19
  424670:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  424674:	add	x2, x2, #0xf60
  424678:	mov	w1, #0x0                   	// #0
  42467c:	mov	x0, x20
  424680:	bl	426a10 <ferror@plt+0x23ce0>
  424684:	mov	x0, x20
  424688:	bl	438a9c <ferror@plt+0x35d6c>
  42468c:	ldrb	w0, [x0, #4]
  424690:	cmp	w0, #0x16
  424694:	b.eq	42463c <ferror@plt+0x2190c>  // b.none
  424698:	mov	w1, #0x1                   	// #1
  42469c:	mov	x0, x20
  4246a0:	bl	435970 <ferror@plt+0x32c40>
  4246a4:	mov	w3, #0x0                   	// #0
  4246a8:	mov	w2, #0x0                   	// #0
  4246ac:	mov	w1, #0x0                   	// #0
  4246b0:	mov	x0, x20
  4246b4:	bl	423d00 <ferror@plt+0x20fd0>
  4246b8:	b	42463c <ferror@plt+0x2190c>
  4246bc:	stp	x29, x30, [sp, #-32]!
  4246c0:	mov	x29, sp
  4246c4:	str	x19, [sp, #16]
  4246c8:	mov	x19, x0
  4246cc:	ldr	x0, [x0, #40]
  4246d0:	ldr	w0, [x0, #48]
  4246d4:	cmp	w0, #0x1
  4246d8:	b.eq	42470c <ferror@plt+0x219dc>  // b.none
  4246dc:	mov	w1, #0x0                   	// #0
  4246e0:	mov	x0, x19
  4246e4:	bl	423130 <ferror@plt+0x20400>
  4246e8:	mov	x0, x19
  4246ec:	bl	4231b8 <ferror@plt+0x20488>
  4246f0:	mov	w2, #0x0                   	// #0
  4246f4:	mov	w1, #0x1                   	// #1
  4246f8:	mov	x0, x19
  4246fc:	bl	42cbf4 <ferror@plt+0x29ec4>
  424700:	ldr	x19, [sp, #16]
  424704:	ldp	x29, x30, [sp], #32
  424708:	ret
  42470c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  424710:	add	x2, x2, #0xf80
  424714:	mov	w1, #0x0                   	// #0
  424718:	mov	x0, x19
  42471c:	bl	426a10 <ferror@plt+0x23ce0>
  424720:	b	424700 <ferror@plt+0x219d0>
  424724:	stp	x29, x30, [sp, #-64]!
  424728:	mov	x29, sp
  42472c:	stp	x19, x20, [sp, #16]
  424730:	stp	x21, x22, [sp, #32]
  424734:	str	x23, [sp, #48]
  424738:	mov	x19, x0
  42473c:	bl	422fe4 <ferror@plt+0x202b4>
  424740:	cbz	x0, 424794 <ferror@plt+0x21a64>
  424744:	ldr	w2, [x0, #8]
  424748:	add	w1, w2, #0x2
  42474c:	add	x1, x1, #0xf
  424750:	and	x1, x1, #0x1fffffff0
  424754:	sub	sp, sp, x1
  424758:	mov	x20, sp
  42475c:	ldr	x5, [x0, #16]
  424760:	ldrb	w0, [x5]
  424764:	cmp	w0, #0x4c
  424768:	cset	x1, eq  // eq = none
  42476c:	add	x1, x1, #0x1
  424770:	add	x1, x5, x1
  424774:	mov	w2, w2
  424778:	sub	x2, x2, #0x1
  42477c:	add	x5, x5, x2
  424780:	cmp	x1, x5
  424784:	b.cs	424804 <ferror@plt+0x21ad4>  // b.hs, b.nlast
  424788:	mov	x3, x20
  42478c:	mov	w6, #0x5c                  	// #92
  424790:	b	4247e0 <ferror@plt+0x21ab0>
  424794:	ldr	x0, [x19, #448]
  424798:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x22c60>
  42479c:	add	x4, x4, #0xfb8
  4247a0:	mov	w3, #0x0                   	// #0
  4247a4:	ldur	w2, [x0, #-24]
  4247a8:	mov	w1, #0x3                   	// #3
  4247ac:	mov	x0, x19
  4247b0:	bl	426bfc <ferror@plt+0x23ecc>
  4247b4:	mov	w1, #0x0                   	// #0
  4247b8:	mov	x0, x19
  4247bc:	bl	423130 <ferror@plt+0x20400>
  4247c0:	mov	x0, x19
  4247c4:	bl	4231b8 <ferror@plt+0x20488>
  4247c8:	b	424888 <ferror@plt+0x21b58>
  4247cc:	mov	x1, x2
  4247d0:	ldrb	w2, [x1], #1
  4247d4:	strb	w2, [x3], #1
  4247d8:	cmp	x5, x1
  4247dc:	b.ls	424808 <ferror@plt+0x21ad8>  // b.plast
  4247e0:	ldrb	w4, [x1]
  4247e4:	mov	x2, x1
  4247e8:	cmp	w4, #0x5c
  4247ec:	b.ne	4247cc <ferror@plt+0x21a9c>  // b.any
  4247f0:	ldrb	w0, [x1, #1]
  4247f4:	cmp	w0, #0x22
  4247f8:	ccmp	w0, w6, #0x4, ne  // ne = any
  4247fc:	cinc	x2, x1, eq  // eq = none
  424800:	b	4247cc <ferror@plt+0x21a9c>
  424804:	mov	x3, x20
  424808:	strb	wzr, [x3]
  42480c:	mov	w1, #0x0                   	// #0
  424810:	mov	x0, x19
  424814:	bl	423130 <ferror@plt+0x20400>
  424818:	mov	x0, x19
  42481c:	bl	4231b8 <ferror@plt+0x20488>
  424820:	mov	x0, #0x20                  	// #32
  424824:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  424828:	mov	x21, x0
  42482c:	stp	xzr, xzr, [x0]
  424830:	stp	xzr, xzr, [x0, #16]
  424834:	mov	x0, x20
  424838:	bl	402680 <strlen@plt>
  42483c:	add	x0, x0, #0x1
  424840:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  424844:	mov	x22, x0
  424848:	str	x0, [x21, #8]
  42484c:	mov	x1, x20
  424850:	bl	402b30 <strcpy@plt>
  424854:	ldr	x0, [x19, #1400]
  424858:	str	x0, [x21]
  42485c:	mov	x1, x22
  424860:	mov	x0, x19
  424864:	bl	42e2b0 <ferror@plt+0x2b580>
  424868:	mov	x20, x0
  42486c:	ldrb	w0, [x0, #18]
  424870:	tst	x0, #0x3
  424874:	b.ne	4248a0 <ferror@plt+0x21b70>  // b.any
  424878:	ldrb	w0, [x21, #28]
  42487c:	orr	w0, w0, #0x4
  424880:	strb	w0, [x21, #28]
  424884:	str	x21, [x19, #1400]
  424888:	mov	sp, x29
  42488c:	ldp	x19, x20, [sp, #16]
  424890:	ldp	x21, x22, [sp, #32]
  424894:	ldr	x23, [sp, #48]
  424898:	ldp	x29, x30, [sp], #64
  42489c:	ret
  4248a0:	mov	x1, x20
  4248a4:	mov	x0, x19
  4248a8:	bl	438b54 <ferror@plt+0x35e24>
  4248ac:	mov	x23, x0
  4248b0:	bl	402680 <strlen@plt>
  4248b4:	mov	x22, x0
  4248b8:	add	x0, x0, #0x2
  4248bc:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4248c0:	str	x0, [x21, #16]
  4248c4:	mov	w2, #0xa                   	// #10
  4248c8:	strb	w2, [x0, x22]
  4248cc:	add	x1, x0, x22
  4248d0:	strb	wzr, [x1, #1]
  4248d4:	ldr	x1, [x20, #24]
  4248d8:	ldr	w1, [x1, #8]
  4248dc:	str	w1, [x21, #24]
  4248e0:	ldr	x1, [x20, #24]
  4248e4:	ldrb	w2, [x1, #19]
  4248e8:	ubfx	x2, x2, #4, #1
  4248ec:	ldrb	w1, [x21, #28]
  4248f0:	bfxil	w1, w2, #0, #1
  4248f4:	strb	w1, [x21, #28]
  4248f8:	ldr	x2, [x20, #24]
  4248fc:	ldrb	w2, [x2, #19]
  424900:	ubfx	x2, x2, #5, #1
  424904:	bfi	w1, w2, #1, #1
  424908:	strb	w1, [x21, #28]
  42490c:	mov	x2, x22
  424910:	mov	x1, x23
  424914:	bl	402620 <memcpy@plt>
  424918:	b	424884 <ferror@plt+0x21b54>
  42491c:	stp	x29, x30, [sp, #-32]!
  424920:	mov	x29, sp
  424924:	str	x19, [sp, #16]
  424928:	mov	x19, x0
  42492c:	ldr	x0, [x0, #40]
  424930:	ldr	w0, [x0, #48]
  424934:	cmp	w0, #0x1
  424938:	b.eq	424964 <ferror@plt+0x21c34>  // b.none
  42493c:	mov	w1, #0x0                   	// #0
  424940:	mov	x0, x19
  424944:	bl	423130 <ferror@plt+0x20400>
  424948:	ldr	x0, [x19]
  42494c:	ldr	x1, [x0, #80]
  424950:	mov	x0, x19
  424954:	bl	42c7a4 <ferror@plt+0x29a74>
  424958:	ldr	x19, [sp, #16]
  42495c:	ldp	x29, x30, [sp], #32
  424960:	ret
  424964:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x22c60>
  424968:	add	x2, x2, #0xfe0
  42496c:	mov	w1, #0x0                   	// #0
  424970:	mov	x0, x19
  424974:	bl	426a10 <ferror@plt+0x23ce0>
  424978:	b	42493c <ferror@plt+0x21c0c>
  42497c:	stp	x29, x30, [sp, #-32]!
  424980:	mov	x29, sp
  424984:	stp	x19, x20, [sp, #16]
  424988:	mov	x19, x0
  42498c:	mov	x20, x1
  424990:	cbnz	x0, 4249d8 <ferror@plt+0x21ca8>
  424994:	mov	x0, x20
  424998:	ldp	x19, x20, [sp, #16]
  42499c:	ldp	x29, x30, [sp], #32
  4249a0:	ret
  4249a4:	mov	x1, x20
  4249a8:	ldr	x0, [x19, #24]
  4249ac:	bl	42497c <ferror@plt+0x21c4c>
  4249b0:	ldr	x3, [x19, #8]
  4249b4:	ldr	w1, [x3, #8]
  4249b8:	mov	x20, x0
  4249bc:	add	w2, w1, #0x1
  4249c0:	mov	w1, w1
  4249c4:	ldr	x0, [x3]
  4249c8:	bl	454dfc <_obstack_memory_used@@Base+0xa5c>
  4249cc:	str	x0, [x20], #8
  4249d0:	ldr	x19, [x19]
  4249d4:	cbz	x19, 424994 <ferror@plt+0x21c64>
  4249d8:	ldrb	w1, [x19, #16]
  4249dc:	mov	x0, x20
  4249e0:	cbz	w1, 4249b0 <ferror@plt+0x21c80>
  4249e4:	b	4249a4 <ferror@plt+0x21c74>
  4249e8:	stp	x29, x30, [sp, #-64]!
  4249ec:	mov	x29, sp
  4249f0:	stp	x19, x20, [sp, #16]
  4249f4:	stp	x21, x22, [sp, #32]
  4249f8:	stp	x23, x24, [sp, #48]
  4249fc:	mov	x22, x0
  424a00:	mov	x20, x1
  424a04:	mov	x21, x2
  424a08:	and	w24, w3, #0xff
  424a0c:	cbz	x1, 424aa0 <ferror@plt+0x21d70>
  424a10:	mov	x0, x1
  424a14:	bl	402680 <strlen@plt>
  424a18:	mov	w2, w0
  424a1c:	mov	x1, x20
  424a20:	mov	x0, x22
  424a24:	bl	42d2b4 <ferror@plt+0x2a584>
  424a28:	mov	x23, x0
  424a2c:	ldr	x3, [x22, #896]
  424a30:	cbz	x3, 424a48 <ferror@plt+0x21d18>
  424a34:	ldr	x0, [x3, #8]
  424a38:	cmp	x23, x0
  424a3c:	b.eq	424ba4 <ferror@plt+0x21e74>  // b.none
  424a40:	ldr	x3, [x3]
  424a44:	cbnz	x3, 424a34 <ferror@plt+0x21d04>
  424a48:	mov	x1, #0x20                  	// #32
  424a4c:	mov	x0, x22
  424a50:	bl	431eb0 <ferror@plt+0x2f180>
  424a54:	mov	x3, x0
  424a58:	stp	xzr, xzr, [x0]
  424a5c:	stp	xzr, xzr, [x0, #16]
  424a60:	ldr	x0, [x22, #896]
  424a64:	str	x0, [x3]
  424a68:	str	x3, [x22, #896]
  424a6c:	str	x23, [x3, #8]
  424a70:	mov	w0, #0x1                   	// #1
  424a74:	strb	w0, [x3, #16]
  424a78:	strb	w24, [x3, #19]
  424a7c:	b	424bb8 <ferror@plt+0x21e88>
  424a80:	mov	x3, x20
  424a84:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424a88:	add	x2, x2, #0x0
  424a8c:	mov	w1, #0x4                   	// #4
  424a90:	mov	x0, x22
  424a94:	bl	426a10 <ferror@plt+0x23ce0>
  424a98:	mov	x0, #0x0                   	// #0
  424a9c:	b	424b90 <ferror@plt+0x21e60>
  424aa0:	add	x19, x0, #0x380
  424aa4:	cbnz	w24, 424b08 <ferror@plt+0x21dd8>
  424aa8:	mov	x0, x21
  424aac:	bl	402680 <strlen@plt>
  424ab0:	mov	w2, w0
  424ab4:	mov	x1, x21
  424ab8:	mov	x0, x22
  424abc:	bl	42d2b4 <ferror@plt+0x2a584>
  424ac0:	mov	x23, x0
  424ac4:	ldr	x1, [x19]
  424ac8:	cbz	x1, 424ae0 <ferror@plt+0x21db0>
  424acc:	ldr	x0, [x1, #8]
  424ad0:	cmp	x23, x0
  424ad4:	b.eq	424b64 <ferror@plt+0x21e34>  // b.none
  424ad8:	ldr	x1, [x1]
  424adc:	cbnz	x1, 424acc <ferror@plt+0x21d9c>
  424ae0:	mov	x1, #0x20                  	// #32
  424ae4:	mov	x0, x22
  424ae8:	bl	431eb0 <ferror@plt+0x2f180>
  424aec:	stp	xzr, xzr, [x0]
  424af0:	stp	xzr, xzr, [x0, #16]
  424af4:	ldr	x1, [x19]
  424af8:	str	x1, [x0]
  424afc:	str	x0, [x19]
  424b00:	str	x23, [x0, #8]
  424b04:	b	424b90 <ferror@plt+0x21e60>
  424b08:	mov	x3, x2
  424b0c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424b10:	add	x2, x2, #0x48
  424b14:	mov	w1, #0x4                   	// #4
  424b18:	bl	426a10 <ferror@plt+0x23ce0>
  424b1c:	mov	x0, x20
  424b20:	b	424b90 <ferror@plt+0x21e60>
  424b24:	ldr	x3, [x23]
  424b28:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424b2c:	add	x2, x2, #0x88
  424b30:	mov	w1, #0x4                   	// #4
  424b34:	mov	x0, x22
  424b38:	bl	426a10 <ferror@plt+0x23ce0>
  424b3c:	mov	x0, #0x0                   	// #0
  424b40:	b	424b90 <ferror@plt+0x21e60>
  424b44:	mov	x3, x21
  424b48:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424b4c:	add	x2, x2, #0xf0
  424b50:	mov	w1, #0x4                   	// #4
  424b54:	mov	x0, x22
  424b58:	bl	426a10 <ferror@plt+0x23ce0>
  424b5c:	mov	x0, x20
  424b60:	b	424b90 <ferror@plt+0x21e60>
  424b64:	ldrb	w0, [x1, #16]
  424b68:	cbnz	w0, 424b24 <ferror@plt+0x21df4>
  424b6c:	cbz	x20, 424b44 <ferror@plt+0x21e14>
  424b70:	mov	x4, x21
  424b74:	mov	x3, x20
  424b78:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424b7c:	add	x2, x2, #0xc8
  424b80:	mov	w1, #0x4                   	// #4
  424b84:	mov	x0, x22
  424b88:	bl	426a10 <ferror@plt+0x23ce0>
  424b8c:	mov	x0, #0x0                   	// #0
  424b90:	ldp	x19, x20, [sp, #16]
  424b94:	ldp	x21, x22, [sp, #32]
  424b98:	ldp	x23, x24, [sp, #48]
  424b9c:	ldp	x29, x30, [sp], #64
  424ba0:	ret
  424ba4:	ldrb	w0, [x3, #16]
  424ba8:	cbz	w0, 424b24 <ferror@plt+0x21df4>
  424bac:	ldrb	w0, [x3, #19]
  424bb0:	cmp	w0, w24
  424bb4:	b.ne	424a80 <ferror@plt+0x21d50>  // b.any
  424bb8:	add	x19, x3, #0x18
  424bbc:	b	424aa8 <ferror@plt+0x21d78>
  424bc0:	stp	x29, x30, [sp, #-32]!
  424bc4:	mov	x29, sp
  424bc8:	str	x19, [sp, #16]
  424bcc:	mov	x19, x3
  424bd0:	mov	w3, #0x0                   	// #0
  424bd4:	bl	4249e8 <ferror@plt+0x21cb8>
  424bd8:	mov	w1, #0x1                   	// #1
  424bdc:	strb	w1, [x0, #17]
  424be0:	str	x19, [x0, #24]
  424be4:	ldr	x19, [sp, #16]
  424be8:	ldp	x29, x30, [sp], #32
  424bec:	ret
  424bf0:	stp	x29, x30, [sp, #-96]!
  424bf4:	mov	x29, sp
  424bf8:	stp	x19, x20, [sp, #16]
  424bfc:	stp	x21, x22, [sp, #32]
  424c00:	mov	x19, x0
  424c04:	str	wzr, [sp, #92]
  424c08:	ldrb	w1, [x0, #24]
  424c0c:	add	w1, w1, #0x1
  424c10:	strb	w1, [x0, #24]
  424c14:	add	x1, sp, #0x5c
  424c18:	bl	438b40 <ferror@plt+0x35e10>
  424c1c:	mov	x21, x0
  424c20:	ldp	x0, x1, [x0]
  424c24:	stp	x0, x1, [sp, #64]
  424c28:	ldr	x0, [x21, #16]
  424c2c:	str	x0, [sp, #80]
  424c30:	ldrb	w0, [x21, #4]
  424c34:	cmp	w0, #0x35
  424c38:	b.eq	424c60 <ferror@plt+0x21f30>  // b.none
  424c3c:	ldr	x0, [x19, #960]
  424c40:	cbnz	x0, 424de4 <ferror@plt+0x220b4>
  424c44:	ldrb	w0, [x19, #24]
  424c48:	sub	w0, w0, #0x1
  424c4c:	strb	w0, [x19, #24]
  424c50:	ldp	x19, x20, [sp, #16]
  424c54:	ldp	x21, x22, [sp, #32]
  424c58:	ldp	x29, x30, [sp], #96
  424c5c:	ret
  424c60:	ldr	x20, [x19, #896]
  424c64:	ldr	x1, [x21, #8]
  424c68:	cbz	x20, 424c3c <ferror@plt+0x21f0c>
  424c6c:	str	x23, [sp, #48]
  424c70:	ldr	x0, [x20, #8]
  424c74:	cmp	x1, x0
  424c78:	b.eq	424e10 <ferror@plt+0x220e0>  // b.none
  424c7c:	ldr	x20, [x20]
  424c80:	cbnz	x20, 424c70 <ferror@plt+0x21f40>
  424c84:	ldr	x23, [sp, #48]
  424c88:	b	424c3c <ferror@plt+0x21f0c>
  424c8c:	ldrb	w23, [x20, #19]
  424c90:	cbz	w23, 424ca0 <ferror@plt+0x21f70>
  424c94:	ldrb	w0, [x19, #24]
  424c98:	sub	w0, w0, #0x1
  424c9c:	strb	w0, [x19, #24]
  424ca0:	mov	x0, x19
  424ca4:	bl	438a9c <ferror@plt+0x35d6c>
  424ca8:	mov	x22, x0
  424cac:	ldrb	w0, [x0, #4]
  424cb0:	cmp	w0, #0x35
  424cb4:	b.eq	424cd8 <ferror@plt+0x21fa8>  // b.none
  424cb8:	cbz	w23, 424cc8 <ferror@plt+0x21f98>
  424cbc:	ldrb	w0, [x19, #24]
  424cc0:	add	w0, w0, #0x1
  424cc4:	strb	w0, [x19, #24]
  424cc8:	ldr	x0, [x19, #960]
  424ccc:	cbnz	x0, 424d50 <ferror@plt+0x22020>
  424cd0:	ldr	x23, [sp, #48]
  424cd4:	b	424c44 <ferror@plt+0x21f14>
  424cd8:	ldr	x20, [x20, #24]
  424cdc:	ldr	x1, [x22, #8]
  424ce0:	cbz	x20, 424cb8 <ferror@plt+0x21f88>
  424ce4:	ldr	x0, [x20, #8]
  424ce8:	cmp	x1, x0
  424cec:	b.eq	424dfc <ferror@plt+0x220cc>  // b.none
  424cf0:	ldr	x20, [x20]
  424cf4:	cbnz	x20, 424ce4 <ferror@plt+0x21fb4>
  424cf8:	b	424cb8 <ferror@plt+0x21f88>
  424cfc:	ldr	x3, [x19, #904]
  424d00:	cbz	x3, 424d14 <ferror@plt+0x21fe4>
  424d04:	mov	w2, #0x0                   	// #0
  424d08:	mov	x1, x21
  424d0c:	mov	x0, x19
  424d10:	blr	x3
  424d14:	ldrb	w0, [x20, #19]
  424d18:	cbz	w0, 424d28 <ferror@plt+0x21ff8>
  424d1c:	ldrb	w0, [x19, #24]
  424d20:	sub	w0, w0, #0x1
  424d24:	strb	w0, [x19, #24]
  424d28:	ldr	x1, [x20, #24]
  424d2c:	mov	x0, x19
  424d30:	blr	x1
  424d34:	ldrb	w0, [x20, #19]
  424d38:	cbz	w0, 424df4 <ferror@plt+0x220c4>
  424d3c:	ldrb	w0, [x19, #24]
  424d40:	add	w0, w0, #0x1
  424d44:	strb	w0, [x19, #24]
  424d48:	ldr	x23, [sp, #48]
  424d4c:	b	424c44 <ferror@plt+0x21f14>
  424d50:	ldr	x0, [x19, #136]
  424d54:	ldr	x0, [x0, #8]
  424d58:	cbz	x0, 424dc0 <ferror@plt+0x22090>
  424d5c:	mov	x0, #0x30                  	// #48
  424d60:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  424d64:	mov	x2, x0
  424d68:	ldr	x1, [sp, #64]
  424d6c:	str	x1, [x0]
  424d70:	ldr	x0, [sp, #72]
  424d74:	str	x0, [x2, #8]
  424d78:	ldr	x0, [sp, #80]
  424d7c:	str	x0, [x2, #16]
  424d80:	lsr	x1, x1, #48
  424d84:	orr	w1, w1, #0x400
  424d88:	strh	w1, [x2, #6]
  424d8c:	ldp	x4, x5, [x22]
  424d90:	stp	x4, x5, [x2, #24]
  424d94:	ldr	x1, [x22, #16]
  424d98:	str	x1, [x2, #40]
  424d9c:	ldrh	w1, [x2, #30]
  424da0:	orr	w1, w1, #0x400
  424da4:	strh	w1, [x2, #30]
  424da8:	mov	w3, #0x2                   	// #2
  424dac:	mov	x1, #0x0                   	// #0
  424db0:	mov	x0, x19
  424db4:	bl	435580 <ferror@plt+0x32850>
  424db8:	ldr	x23, [sp, #48]
  424dbc:	b	424dd0 <ferror@plt+0x220a0>
  424dc0:	mov	w1, #0x2                   	// #2
  424dc4:	ldr	x23, [sp, #48]
  424dc8:	mov	x0, x19
  424dcc:	bl	435970 <ferror@plt+0x32c40>
  424dd0:	ldr	x2, [x19, #960]
  424dd4:	ldr	w1, [x19, #48]
  424dd8:	mov	x0, x19
  424ddc:	blr	x2
  424de0:	b	424c44 <ferror@plt+0x21f14>
  424de4:	mov	w1, #0x1                   	// #1
  424de8:	b	424dc8 <ferror@plt+0x22098>
  424dec:	ldr	x23, [sp, #48]
  424df0:	b	424c44 <ferror@plt+0x21f14>
  424df4:	ldr	x23, [sp, #48]
  424df8:	b	424c44 <ferror@plt+0x21f14>
  424dfc:	cbz	w23, 424e18 <ferror@plt+0x220e8>
  424e00:	ldrb	w0, [x19, #24]
  424e04:	add	w0, w0, #0x1
  424e08:	strb	w0, [x19, #24]
  424e0c:	b	424e18 <ferror@plt+0x220e8>
  424e10:	ldrb	w0, [x20, #16]
  424e14:	cbnz	w0, 424c8c <ferror@plt+0x21f5c>
  424e18:	ldrb	w0, [x20, #18]
  424e1c:	cbz	w0, 424cfc <ferror@plt+0x21fcc>
  424e20:	ldr	w0, [sp, #92]
  424e24:	str	w0, [x19, #152]
  424e28:	mov	w0, #0x51                  	// #81
  424e2c:	strb	w0, [x19, #156]
  424e30:	ldrh	w0, [x21, #6]
  424e34:	strh	w0, [x19, #158]
  424e38:	ldr	w0, [x20, #24]
  424e3c:	str	w0, [x19, #160]
  424e40:	mov	w0, #0x1                   	// #1
  424e44:	strb	w0, [x19, #32]
  424e48:	ldrb	w0, [x20, #19]
  424e4c:	strb	w0, [x19, #33]
  424e50:	ldrb	w0, [x20, #19]
  424e54:	cbnz	w0, 424dec <ferror@plt+0x220bc>
  424e58:	ldrb	w0, [x19, #24]
  424e5c:	add	w0, w0, #0x1
  424e60:	strb	w0, [x19, #24]
  424e64:	ldr	x23, [sp, #48]
  424e68:	b	424c44 <ferror@plt+0x21f14>
  424e6c:	stp	x29, x30, [sp, #-48]!
  424e70:	mov	x29, sp
  424e74:	stp	x19, x20, [sp, #16]
  424e78:	str	x21, [sp, #32]
  424e7c:	mov	x19, x0
  424e80:	ldr	x20, [x0]
  424e84:	ldr	x21, [x20, #96]
  424e88:	cbz	x21, 424ed8 <ferror@plt+0x221a8>
  424e8c:	ldrb	w0, [x21, #25]
  424e90:	cbnz	w0, 424e9c <ferror@plt+0x2216c>
  424e94:	ldrb	w0, [x19, #1140]
  424e98:	cbnz	w0, 424eec <ferror@plt+0x221bc>
  424e9c:	ldr	x0, [x21]
  424ea0:	cbz	x0, 424f00 <ferror@plt+0x221d0>
  424ea4:	ldr	x0, [x21]
  424ea8:	str	x0, [x20, #96]
  424eac:	ldrb	w0, [x21, #25]
  424eb0:	strb	w0, [x19, #18]
  424eb4:	ldr	x0, [x19, #816]
  424eb8:	cmp	x0, x21
  424ebc:	b.cs	424f1c <ferror@plt+0x221ec>  // b.hs, b.nlast
  424ec0:	ldr	x0, [x19, #840]
  424ec4:	cmp	x0, x21
  424ec8:	b.ls	424f1c <ferror@plt+0x221ec>  // b.plast
  424ecc:	str	x21, [x19, #824]
  424ed0:	str	x21, [x19, #832]
  424ed4:	b	424f28 <ferror@plt+0x221f8>
  424ed8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424edc:	add	x2, x2, #0x118
  424ee0:	mov	w1, #0x3                   	// #3
  424ee4:	bl	426a10 <ferror@plt+0x23ce0>
  424ee8:	b	424f28 <ferror@plt+0x221f8>
  424eec:	mov	w2, #0x8                   	// #8
  424ef0:	mov	w1, #0x0                   	// #0
  424ef4:	mov	x0, x19
  424ef8:	bl	4230b8 <ferror@plt+0x20388>
  424efc:	b	424e9c <ferror@plt+0x2216c>
  424f00:	ldr	x0, [x21, #16]
  424f04:	cbz	x0, 424ea4 <ferror@plt+0x22174>
  424f08:	mov	w0, #0x1                   	// #1
  424f0c:	strb	w0, [x19, #440]
  424f10:	ldr	x0, [x21, #16]
  424f14:	str	x0, [x19, #424]
  424f18:	b	424ea4 <ferror@plt+0x22174>
  424f1c:	mov	x1, x21
  424f20:	add	x0, x19, #0x328
  424f24:	bl	454320 <_obstack_free@@Base>
  424f28:	ldp	x19, x20, [sp, #16]
  424f2c:	ldr	x21, [sp, #32]
  424f30:	ldp	x29, x30, [sp], #48
  424f34:	ret
  424f38:	stp	x29, x30, [sp, #-240]!
  424f3c:	mov	x29, sp
  424f40:	stp	x19, x20, [sp, #16]
  424f44:	stp	x21, x22, [sp, #32]
  424f48:	stp	x23, x24, [sp, #48]
  424f4c:	mov	x19, x0
  424f50:	mov	w21, w1
  424f54:	ldrb	w22, [x0, #25]
  424f58:	ldrb	w23, [x0, #27]
  424f5c:	cbz	w23, 424f64 <ferror@plt+0x22234>
  424f60:	strb	wzr, [x0, #24]
  424f64:	cbz	w22, 424f78 <ferror@plt+0x22248>
  424f68:	ldrb	w0, [x19, #1154]
  424f6c:	cbnz	w0, 424ff4 <ferror@plt+0x222c4>
  424f70:	strb	wzr, [x19, #25]
  424f74:	strb	wzr, [x19, #24]
  424f78:	mov	w0, #0x1                   	// #1
  424f7c:	strb	w0, [x19, #16]
  424f80:	strb	wzr, [x19, #21]
  424f84:	mov	w0, #0x53                  	// #83
  424f88:	strb	w0, [x19, #156]
  424f8c:	ldr	x0, [x19, #40]
  424f90:	ldr	w0, [x0, #60]
  424f94:	str	w0, [x19, #48]
  424f98:	mov	x0, x19
  424f9c:	bl	431be0 <ferror@plt+0x2eeb0>
  424fa0:	mov	x20, x0
  424fa4:	ldrb	w0, [x0, #4]
  424fa8:	cmp	w0, #0x35
  424fac:	b.eq	42500c <ferror@plt+0x222dc>  // b.none
  424fb0:	cmp	w0, #0x37
  424fb4:	b.eq	4250e4 <ferror@plt+0x223b4>  // b.none
  424fb8:	cmp	w0, #0x16
  424fbc:	b.eq	424fd4 <ferror@plt+0x222a4>  // b.none
  424fc0:	ldr	w0, [x19, #1116]
  424fc4:	cmp	w0, #0x15
  424fc8:	b.eq	425310 <ferror@plt+0x225e0>  // b.none
  424fcc:	ldrb	w0, [x19, #18]
  424fd0:	cbz	w0, 425260 <ferror@plt+0x22530>
  424fd4:	str	xzr, [x19, #144]
  424fd8:	ldrb	w0, [x19, #1160]
  424fdc:	mov	w20, #0x1                   	// #1
  424fe0:	cbz	w0, 425098 <ferror@plt+0x22368>
  424fe4:	mov	x0, x19
  424fe8:	bl	424384 <ferror@plt+0x21654>
  424fec:	mov	w20, #0x1                   	// #1
  424ff0:	b	425098 <ferror@plt+0x22368>
  424ff4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  424ff8:	add	x2, x2, #0x130
  424ffc:	mov	w1, #0x2                   	// #2
  425000:	mov	x0, x19
  425004:	bl	426a10 <ferror@plt+0x23ce0>
  425008:	b	424f70 <ferror@plt+0x22240>
  42500c:	ldr	x0, [x20, #8]
  425010:	ldrb	w1, [x0, #16]
  425014:	tbz	w1, #0, 424fc0 <ferror@plt+0x22290>
  425018:	ldrb	w0, [x0, #16]
  42501c:	ubfx	x1, x0, #1, #7
  425020:	and	x20, x0, #0xfe
  425024:	add	x20, x20, x1
  425028:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  42502c:	add	x0, x0, #0x598
  425030:	add	x20, x0, x20, lsl #3
  425034:	ldrb	w0, [x20, #19]
  425038:	tbz	w0, #1, 425114 <ferror@plt+0x223e4>
  42503c:	ldrb	w0, [x19, #1155]
  425040:	cbz	w0, 425344 <ferror@plt+0x22614>
  425044:	ldrb	w0, [x19, #1244]
  425048:	cbnz	w0, 425058 <ferror@plt+0x22328>
  42504c:	cbnz	w21, 425310 <ferror@plt+0x225e0>
  425050:	ldrb	w0, [x20, #19]
  425054:	tbz	w0, #3, 425310 <ferror@plt+0x225e0>
  425058:	ldrb	w0, [x20, #19]
  42505c:	and	w0, w0, #0x4
  425060:	strb	w0, [x19, #19]
  425064:	ldrb	w0, [x20, #19]
  425068:	and	w0, w0, #0x4
  42506c:	strb	w0, [x19, #17]
  425070:	ldrb	w0, [x19, #18]
  425074:	cbnz	w0, 42536c <ferror@plt+0x2263c>
  425078:	str	x20, [x19, #144]
  42507c:	ldrb	w0, [x19, #1160]
  425080:	cbnz	w0, 425378 <ferror@plt+0x22648>
  425084:	ldr	x0, [x19, #144]
  425088:	ldr	x1, [x0]
  42508c:	mov	x0, x19
  425090:	blr	x1
  425094:	mov	w20, #0x1                   	// #1
  425098:	mov	w1, w20
  42509c:	mov	x0, x19
  4250a0:	bl	4244c8 <ferror@plt+0x21798>
  4250a4:	cbz	w22, 4250c0 <ferror@plt+0x22390>
  4250a8:	ldrb	w0, [x19, #32]
  4250ac:	cbnz	w0, 4250c0 <ferror@plt+0x22390>
  4250b0:	mov	w0, #0x2                   	// #2
  4250b4:	strb	w0, [x19, #25]
  4250b8:	mov	w0, #0x1                   	// #1
  4250bc:	strb	w0, [x19, #24]
  4250c0:	cbz	w23, 4250cc <ferror@plt+0x2239c>
  4250c4:	mov	w0, #0x1                   	// #1
  4250c8:	strb	w0, [x19, #24]
  4250cc:	mov	w0, w20
  4250d0:	ldp	x19, x20, [sp, #16]
  4250d4:	ldp	x21, x22, [sp, #32]
  4250d8:	ldp	x23, x24, [sp, #48]
  4250dc:	ldp	x29, x30, [sp], #240
  4250e0:	ret
  4250e4:	ldr	w0, [x19, #1116]
  4250e8:	cmp	w0, #0x15
  4250ec:	b.eq	425310 <ferror@plt+0x225e0>  // b.none
  4250f0:	ldrb	w0, [x19, #1154]
  4250f4:	cbz	w0, 425108 <ferror@plt+0x223d8>
  4250f8:	ldrb	w0, [x19, #1155]
  4250fc:	cbnz	w0, 425108 <ferror@plt+0x223d8>
  425100:	ldrb	w0, [x19, #18]
  425104:	cbz	w0, 42511c <ferror@plt+0x223ec>
  425108:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x23c60>
  42510c:	add	x20, x20, #0x598
  425110:	add	x20, x20, #0x1c8
  425114:	strb	wzr, [x19, #440]
  425118:	b	42503c <ferror@plt+0x2230c>
  42511c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425120:	add	x2, x2, #0x170
  425124:	mov	w1, #0x2                   	// #2
  425128:	mov	x0, x19
  42512c:	bl	426a10 <ferror@plt+0x23ce0>
  425130:	b	425108 <ferror@plt+0x223d8>
  425134:	ldrb	w0, [x20, #18]
  425138:	cmp	w0, #0x2
  42513c:	b.eq	425194 <ferror@plt+0x22464>  // b.none
  425140:	ldrb	w0, [x20, #19]
  425144:	tbz	w0, #5, 4251e0 <ferror@plt+0x224b0>
  425148:	ldrb	w0, [x19, #1132]
  42514c:	cbnz	w0, 425200 <ferror@plt+0x224d0>
  425150:	ldrb	w0, [x19, #1138]
  425154:	cbz	w0, 425078 <ferror@plt+0x22348>
  425158:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  42515c:	add	x0, x0, #0x598
  425160:	add	x0, x0, #0xd8
  425164:	cmp	x20, x0
  425168:	b.eq	425224 <ferror@plt+0x224f4>  // b.none
  42516c:	cbz	w21, 42523c <ferror@plt+0x2250c>
  425170:	ldrb	w0, [x20, #18]
  425174:	cbnz	w0, 425070 <ferror@plt+0x22340>
  425178:	ldr	x3, [x20, #8]
  42517c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425180:	add	x2, x2, #0x210
  425184:	mov	w1, #0x6                   	// #6
  425188:	mov	x0, x19
  42518c:	bl	426a88 <ferror@plt+0x23d58>
  425190:	b	425070 <ferror@plt+0x22340>
  425194:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  425198:	add	x0, x0, #0x598
  42519c:	add	x0, x0, #0x168
  4251a0:	cmp	x20, x0
  4251a4:	b.eq	4251cc <ferror@plt+0x2249c>  // b.none
  4251a8:	ldrb	w0, [x19, #1154]
  4251ac:	cbz	w0, 425140 <ferror@plt+0x22410>
  4251b0:	ldr	x3, [x20, #8]
  4251b4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4251b8:	add	x2, x2, #0x1a0
  4251bc:	mov	w1, #0x2                   	// #2
  4251c0:	mov	x0, x19
  4251c4:	bl	426a10 <ferror@plt+0x23ce0>
  4251c8:	b	425218 <ferror@plt+0x224e8>
  4251cc:	ldrb	w0, [x19, #1122]
  4251d0:	cbz	w0, 425338 <ferror@plt+0x22608>
  4251d4:	ldrb	w0, [x19, #1138]
  4251d8:	cbnz	w0, 42516c <ferror@plt+0x2243c>
  4251dc:	b	425078 <ferror@plt+0x22348>
  4251e0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4251e4:	add	x0, x0, #0x598
  4251e8:	add	x0, x0, #0x168
  4251ec:	cmp	x20, x0
  4251f0:	b.ne	425150 <ferror@plt+0x22420>  // b.any
  4251f4:	ldrb	w0, [x19, #1122]
  4251f8:	cbz	w0, 425148 <ferror@plt+0x22418>
  4251fc:	b	4251d4 <ferror@plt+0x224a4>
  425200:	ldr	x3, [x20, #8]
  425204:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425208:	add	x2, x2, #0x1b8
  42520c:	mov	w1, #0x1                   	// #1
  425210:	mov	x0, x19
  425214:	bl	426a88 <ferror@plt+0x23d58>
  425218:	ldrb	w0, [x19, #1138]
  42521c:	cbz	w0, 425070 <ferror@plt+0x22340>
  425220:	b	425158 <ferror@plt+0x22428>
  425224:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425228:	add	x2, x2, #0x1e0
  42522c:	mov	w1, #0x6                   	// #6
  425230:	mov	x0, x19
  425234:	bl	426a88 <ferror@plt+0x23d58>
  425238:	b	425070 <ferror@plt+0x22340>
  42523c:	ldrb	w0, [x20, #18]
  425240:	cbz	w0, 425070 <ferror@plt+0x22340>
  425244:	ldr	x3, [x20, #8]
  425248:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42524c:	add	x2, x2, #0x240
  425250:	mov	w1, #0x6                   	// #6
  425254:	mov	x0, x19
  425258:	bl	426a88 <ferror@plt+0x23d58>
  42525c:	b	425070 <ferror@plt+0x22340>
  425260:	mov	x1, x20
  425264:	mov	x0, x19
  425268:	bl	431e54 <ferror@plt+0x2f124>
  42526c:	mov	x21, x0
  425270:	ldr	x3, [x19, #1064]
  425274:	cbz	x3, 4252f4 <ferror@plt+0x225c4>
  425278:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42527c:	add	x2, x2, #0x598
  425280:	add	x2, x2, #0x1e0
  425284:	mov	x1, x0
  425288:	mov	x0, x19
  42528c:	blr	x3
  425290:	mov	x24, x0
  425294:	cbz	x0, 4252f4 <ferror@plt+0x225c4>
  425298:	mov	x3, #0x0                   	// #0
  42529c:	ldr	w2, [x20]
  4252a0:	ldr	x1, [x19, #40]
  4252a4:	add	x0, sp, #0x48
  4252a8:	bl	434390 <ferror@plt+0x31660>
  4252ac:	ldr	w1, [x20]
  4252b0:	ldr	x0, [x19, #40]
  4252b4:	bl	432f78 <ferror@plt+0x30248>
  4252b8:	mov	x2, x24
  4252bc:	mov	x1, x0
  4252c0:	add	x0, sp, #0x48
  4252c4:	bl	4349fc <ferror@plt+0x31ccc>
  4252c8:	mov	x5, x24
  4252cc:	mov	x4, x21
  4252d0:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x23c60>
  4252d4:	add	x3, x3, #0x280
  4252d8:	add	x2, sp, #0x48
  4252dc:	mov	w1, #0x3                   	// #3
  4252e0:	mov	x0, x19
  4252e4:	bl	426ea4 <ferror@plt+0x24174>
  4252e8:	add	x0, sp, #0x48
  4252ec:	bl	434120 <ferror@plt+0x313f0>
  4252f0:	b	424fd4 <ferror@plt+0x222a4>
  4252f4:	mov	x3, x21
  4252f8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4252fc:	add	x2, x2, #0x2b8
  425300:	mov	w1, #0x3                   	// #3
  425304:	mov	x0, x19
  425308:	bl	426a10 <ferror@plt+0x23ce0>
  42530c:	b	424fd4 <ferror@plt+0x222a4>
  425310:	str	xzr, [x19, #144]
  425314:	ldrb	w0, [x19, #1160]
  425318:	cbz	w0, 425324 <ferror@plt+0x225f4>
  42531c:	mov	x0, x19
  425320:	bl	424384 <ferror@plt+0x21654>
  425324:	mov	w1, #0x1                   	// #1
  425328:	mov	x0, x19
  42532c:	bl	435970 <ferror@plt+0x32c40>
  425330:	mov	w20, #0x0                   	// #0
  425334:	b	425098 <ferror@plt+0x22368>
  425338:	ldrb	w0, [x19, #1154]
  42533c:	cbz	w0, 425148 <ferror@plt+0x22418>
  425340:	b	4251b0 <ferror@plt+0x22480>
  425344:	ldrb	w0, [x20, #19]
  425348:	and	w0, w0, #0x4
  42534c:	strb	w0, [x19, #19]
  425350:	ldrb	w0, [x20, #19]
  425354:	and	w0, w0, #0x4
  425358:	strb	w0, [x19, #17]
  42535c:	ldrb	w0, [x19, #18]
  425360:	cbz	w0, 425134 <ferror@plt+0x22404>
  425364:	ldrb	w0, [x19, #1138]
  425368:	cbnz	w0, 425158 <ferror@plt+0x22428>
  42536c:	ldrb	w0, [x20, #19]
  425370:	tbz	w0, #0, 424fd4 <ferror@plt+0x222a4>
  425374:	b	425078 <ferror@plt+0x22348>
  425378:	mov	x0, x19
  42537c:	bl	424384 <ferror@plt+0x21654>
  425380:	b	425084 <ferror@plt+0x22354>
  425384:	stp	x29, x30, [sp, #-16]!
  425388:	mov	x29, sp
  42538c:	mov	x2, #0x0                   	// #0
  425390:	adrp	x1, 422000 <ferror@plt+0x1f2d0>
  425394:	add	x1, x1, #0xd74
  425398:	bl	42d448 <ferror@plt+0x2a718>
  42539c:	ldp	x29, x30, [sp], #16
  4253a0:	ret
  4253a4:	stp	x29, x30, [sp, #-32]!
  4253a8:	mov	x29, sp
  4253ac:	stp	x19, x20, [sp, #16]
  4253b0:	mov	x19, x0
  4253b4:	mov	w0, w4
  4253b8:	mov	w4, w3
  4253bc:	mov	x3, x2
  4253c0:	mov	w2, w0
  4253c4:	ldr	x0, [x19, #40]
  4253c8:	bl	43247c <ferror@plt+0x2f74c>
  4253cc:	mov	x20, x0
  4253d0:	cbz	x0, 4253e4 <ferror@plt+0x226b4>
  4253d4:	mov	w2, #0x7f                  	// #127
  4253d8:	ldr	w1, [x0, #16]
  4253dc:	ldr	x0, [x19, #40]
  4253e0:	bl	4327c8 <ferror@plt+0x2fa98>
  4253e4:	ldr	x2, [x19, #912]
  4253e8:	cbz	x2, 4253f8 <ferror@plt+0x226c8>
  4253ec:	mov	x1, x20
  4253f0:	mov	x0, x19
  4253f4:	blr	x2
  4253f8:	ldp	x19, x20, [sp, #16]
  4253fc:	ldp	x29, x30, [sp], #32
  425400:	ret
  425404:	stp	x29, x30, [sp, #-80]!
  425408:	mov	x29, sp
  42540c:	stp	x19, x20, [sp, #16]
  425410:	stp	x21, x22, [sp, #32]
  425414:	stp	x23, x24, [sp, #48]
  425418:	mov	x20, x0
  42541c:	ldr	x21, [x0, #40]
  425420:	ldr	w1, [x21, #12]
  425424:	sub	w1, w1, #0x1
  425428:	sbfiz	x2, x1, #1, #32
  42542c:	add	x1, x2, w1, sxtw
  425430:	ldr	x2, [x21]
  425434:	add	x1, x2, x1, lsl #3
  425438:	ldr	x22, [x1, #8]
  42543c:	ldrb	w23, [x1, #5]
  425440:	mov	w1, #0x1                   	// #1
  425444:	bl	435970 <ferror@plt+0x32c40>
  425448:	mov	x0, x20
  42544c:	bl	438a9c <ferror@plt+0x35d6c>
  425450:	mov	x1, x0
  425454:	ldrb	w0, [x0, #4]
  425458:	cmp	w0, #0x37
  42545c:	b.ne	425500 <ferror@plt+0x227d0>  // b.any
  425460:	ldr	x3, [x1, #16]
  425464:	ldr	w2, [x1, #8]
  425468:	cbz	x2, 4256b0 <ferror@plt+0x22980>
  42546c:	mov	x0, x3
  425470:	mov	w19, #0x0                   	// #0
  425474:	adrp	x4, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  425478:	add	x4, x4, #0x28
  42547c:	add	x3, x3, x2
  425480:	ldrb	w2, [x0], #1
  425484:	ldrh	w5, [x4, w2, sxtw #1]
  425488:	tbz	w5, #2, 425500 <ferror@plt+0x227d0>
  42548c:	add	w19, w19, w19, lsl #2
  425490:	add	w19, w2, w19, lsl #1
  425494:	sub	w19, w19, #0x30
  425498:	cmp	x0, x3
  42549c:	b.ne	425480 <ferror@plt+0x22750>  // b.any
  4254a0:	mov	x0, x20
  4254a4:	bl	438a9c <ferror@plt+0x35d6c>
  4254a8:	mov	x1, x0
  4254ac:	ldrb	w0, [x0, #4]
  4254b0:	cmp	w0, #0x3e
  4254b4:	b.eq	425534 <ferror@plt+0x22804>  // b.none
  4254b8:	cmp	w0, #0x16
  4254bc:	b.ne	425684 <ferror@plt+0x22954>  // b.any
  4254c0:	mov	x0, x20
  4254c4:	bl	4231b8 <ferror@plt+0x20488>
  4254c8:	mov	w24, #0x3                   	// #3
  4254cc:	ldr	x1, [x20, #40]
  4254d0:	ldr	w0, [x1, #56]
  4254d4:	sub	w0, w0, #0x1
  4254d8:	str	w0, [x1, #56]
  4254dc:	mov	w4, w23
  4254e0:	mov	w3, w19
  4254e4:	mov	x2, x22
  4254e8:	mov	w1, w24
  4254ec:	mov	x0, x20
  4254f0:	bl	4253a4 <ferror@plt+0x22674>
  4254f4:	mov	w0, #0x1                   	// #1
  4254f8:	strb	w0, [x21, #116]
  4254fc:	b	425520 <ferror@plt+0x227f0>
  425500:	mov	x0, x20
  425504:	bl	431e54 <ferror@plt+0x2f124>
  425508:	mov	x3, x0
  42550c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425510:	add	x2, x2, #0x2e0
  425514:	mov	w1, #0x3                   	// #3
  425518:	mov	x0, x20
  42551c:	bl	426a10 <ferror@plt+0x23ce0>
  425520:	ldp	x19, x20, [sp, #16]
  425524:	ldp	x21, x22, [sp, #32]
  425528:	ldp	x23, x24, [sp, #48]
  42552c:	ldp	x29, x30, [sp], #80
  425530:	ret
  425534:	str	wzr, [sp, #64]
  425538:	str	xzr, [sp, #72]
  42553c:	mov	w4, #0x3e                  	// #62
  425540:	add	x3, sp, #0x40
  425544:	mov	x2, #0x1                   	// #1
  425548:	add	x1, x1, #0x8
  42554c:	mov	x0, x20
  425550:	bl	422900 <ferror@plt+0x1fbd0>
  425554:	ands	w0, w0, #0xff
  425558:	ldr	x0, [sp, #72]
  42555c:	csel	x22, x0, x22, ne  // ne = any
  425560:	mov	w1, #0x0                   	// #0
  425564:	mov	x0, x20
  425568:	bl	422f0c <ferror@plt+0x201dc>
  42556c:	cmp	w0, #0x1
  425570:	b.eq	425624 <ferror@plt+0x228f4>  // b.none
  425574:	mov	w24, #0x3                   	// #3
  425578:	cmp	w0, #0x2
  42557c:	b.eq	425644 <ferror@plt+0x22914>  // b.none
  425580:	cmp	w0, #0x3
  425584:	b.ne	4256b8 <ferror@plt+0x22988>  // b.any
  425588:	mov	w1, #0x3                   	// #3
  42558c:	mov	x0, x20
  425590:	bl	422f0c <ferror@plt+0x201dc>
  425594:	cmp	w0, #0x4
  425598:	cset	w23, eq  // eq = none
  42559c:	add	w23, w23, #0x1
  4255a0:	ldr	x0, [x20]
  4255a4:	strb	w23, [x0, #106]
  4255a8:	mov	w1, #0x0                   	// #0
  4255ac:	mov	x0, x20
  4255b0:	bl	423130 <ferror@plt+0x20400>
  4255b4:	mov	x0, x20
  4255b8:	bl	4231b8 <ferror@plt+0x20488>
  4255bc:	cmp	w24, #0x1
  4255c0:	b.ne	4254cc <ferror@plt+0x2279c>  // b.any
  4255c4:	ldr	w24, [x21, #12]
  4255c8:	sub	w24, w24, #0x1
  4255cc:	sbfiz	x0, x24, #1, #32
  4255d0:	add	x24, x0, w24, sxtw
  4255d4:	ldr	x0, [x21]
  4255d8:	add	x24, x0, x24, lsl #3
  4255dc:	mov	x1, x24
  4255e0:	mov	x0, x21
  4255e4:	bl	4323ec <ferror@plt+0x2f6bc>
  4255e8:	ldr	w1, [x24, #20]
  4255ec:	cbz	w1, 425608 <ferror@plt+0x228d8>
  4255f0:	cbz	x0, 4256a8 <ferror@plt+0x22978>
  4255f4:	mov	x1, x22
  4255f8:	ldr	x0, [x0, #8]
  4255fc:	bl	452d78 <ferror@plt+0x50048>
  425600:	mov	w24, #0x1                   	// #1
  425604:	cbz	w0, 4254cc <ferror@plt+0x2279c>
  425608:	mov	x3, x22
  42560c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425610:	add	x2, x2, #0x328
  425614:	mov	w1, #0x0                   	// #0
  425618:	mov	x0, x20
  42561c:	bl	426a88 <ferror@plt+0x23d58>
  425620:	b	425520 <ferror@plt+0x227f0>
  425624:	mov	x1, x22
  425628:	mov	x0, x20
  42562c:	bl	42cbc4 <ferror@plt+0x29e94>
  425630:	mov	w1, #0x1                   	// #1
  425634:	mov	x0, x20
  425638:	bl	422f0c <ferror@plt+0x201dc>
  42563c:	mov	w24, #0x0                   	// #0
  425640:	b	425580 <ferror@plt+0x22850>
  425644:	mov	w1, #0x2                   	// #2
  425648:	mov	x0, x20
  42564c:	bl	422f0c <ferror@plt+0x201dc>
  425650:	cmp	w0, w24
  425654:	b.eq	42567c <ferror@plt+0x2294c>  // b.none
  425658:	ldr	x0, [x20]
  42565c:	strb	wzr, [x0, #106]
  425660:	mov	w1, #0x0                   	// #0
  425664:	mov	x0, x20
  425668:	bl	423130 <ferror@plt+0x20400>
  42566c:	mov	x0, x20
  425670:	bl	4231b8 <ferror@plt+0x20488>
  425674:	mov	w23, #0x0                   	// #0
  425678:	b	4255c4 <ferror@plt+0x22894>
  42567c:	mov	w24, #0x1                   	// #1
  425680:	b	425588 <ferror@plt+0x22858>
  425684:	mov	x0, x20
  425688:	bl	431e54 <ferror@plt+0x2f124>
  42568c:	mov	x3, x0
  425690:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425694:	add	x2, x2, #0x308
  425698:	mov	w1, #0x3                   	// #3
  42569c:	mov	x0, x20
  4256a0:	bl	426a10 <ferror@plt+0x23ce0>
  4256a4:	b	425520 <ferror@plt+0x227f0>
  4256a8:	mov	w24, #0x1                   	// #1
  4256ac:	b	4254cc <ferror@plt+0x2279c>
  4256b0:	mov	w19, #0x0                   	// #0
  4256b4:	b	4254a0 <ferror@plt+0x22770>
  4256b8:	ldr	x0, [x20]
  4256bc:	strb	wzr, [x0, #106]
  4256c0:	mov	w1, #0x0                   	// #0
  4256c4:	mov	x0, x20
  4256c8:	bl	423130 <ferror@plt+0x20400>
  4256cc:	mov	x0, x20
  4256d0:	bl	4231b8 <ferror@plt+0x20488>
  4256d4:	mov	w23, #0x0                   	// #0
  4256d8:	b	4254cc <ferror@plt+0x2279c>
  4256dc:	stp	x29, x30, [sp, #-80]!
  4256e0:	mov	x29, sp
  4256e4:	stp	x19, x20, [sp, #16]
  4256e8:	stp	x21, x22, [sp, #32]
  4256ec:	stp	x23, x24, [sp, #48]
  4256f0:	mov	x19, x0
  4256f4:	ldr	x21, [x0, #40]
  4256f8:	ldr	w1, [x21, #12]
  4256fc:	sub	w1, w1, #0x1
  425700:	sbfiz	x0, x1, #1, #32
  425704:	add	x1, x0, w1, sxtw
  425708:	ldr	x0, [x21]
  42570c:	add	x1, x0, x1, lsl #3
  425710:	ldrb	w23, [x1, #5]
  425714:	ldr	x24, [x1, #8]
  425718:	ldrb	w0, [x19, #1152]
  42571c:	cmp	w0, #0x0
  425720:	mov	w22, #0x7fffffff            	// #2147483647
  425724:	mov	w0, #0x7fff                	// #32767
  425728:	csel	w22, w22, w0, ne  // ne = any
  42572c:	mov	x0, x19
  425730:	bl	438a9c <ferror@plt+0x35d6c>
  425734:	mov	x1, x0
  425738:	ldrb	w0, [x0, #4]
  42573c:	cmp	w0, #0x37
  425740:	b.eq	425780 <ferror@plt+0x22a50>  // b.none
  425744:	cmp	w0, #0x16
  425748:	b.eq	4257fc <ferror@plt+0x22acc>  // b.none
  42574c:	mov	x0, x19
  425750:	bl	431e54 <ferror@plt+0x2f124>
  425754:	mov	x3, x0
  425758:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42575c:	add	x2, x2, #0x388
  425760:	mov	w1, #0x3                   	// #3
  425764:	mov	x0, x19
  425768:	bl	426a10 <ferror@plt+0x23ce0>
  42576c:	ldp	x19, x20, [sp, #16]
  425770:	ldp	x21, x22, [sp, #32]
  425774:	ldp	x23, x24, [sp, #48]
  425778:	ldp	x29, x30, [sp], #80
  42577c:	ret
  425780:	ldr	x5, [x1, #16]
  425784:	ldr	w0, [x1, #8]
  425788:	mov	x3, x5
  42578c:	mov	w4, #0x0                   	// #0
  425790:	mov	w2, #0x0                   	// #0
  425794:	cbz	x0, 4258ec <ferror@plt+0x22bbc>
  425798:	adrp	x7, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42579c:	add	x7, x7, #0x28
  4257a0:	mov	w8, #0x1                   	// #1
  4257a4:	add	x5, x5, x0
  4257a8:	b	4257b0 <ferror@plt+0x22a80>
  4257ac:	mov	w2, w20
  4257b0:	ldrb	w0, [x3], #1
  4257b4:	ldrh	w6, [x7, w0, sxtw #1]
  4257b8:	tbz	w6, #2, 42574c <ferror@plt+0x22a1c>
  4257bc:	add	w20, w2, w2, lsl #2
  4257c0:	sub	w0, w0, #0x30
  4257c4:	add	w20, w0, w20, lsl #1
  4257c8:	cmp	w2, w20
  4257cc:	csel	w4, w4, w8, ls  // ls = plast
  4257d0:	cmp	x3, x5
  4257d4:	b.ne	4257ac <ferror@plt+0x22a7c>  // b.any
  4257d8:	ldrb	w0, [x19, #1154]
  4257dc:	cbnz	w0, 425814 <ferror@plt+0x22ae4>
  4257e0:	cbz	w4, 425838 <ferror@plt+0x22b08>
  4257e4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4257e8:	add	x2, x2, #0x3b8
  4257ec:	mov	w1, #0x0                   	// #0
  4257f0:	mov	x0, x19
  4257f4:	bl	426a10 <ferror@plt+0x23ce0>
  4257f8:	b	425838 <ferror@plt+0x22b08>
  4257fc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425800:	add	x2, x2, #0x360
  425804:	mov	w1, #0x3                   	// #3
  425808:	mov	x0, x19
  42580c:	bl	426a10 <ferror@plt+0x23ce0>
  425810:	b	42576c <ferror@plt+0x22a3c>
  425814:	cmp	w20, #0x0
  425818:	ccmp	w22, w20, #0x0, ne  // ne = any
  42581c:	ccmp	w4, #0x0, #0x0, cs  // cs = hs, nlast
  425820:	b.eq	425838 <ferror@plt+0x22b08>  // b.none
  425824:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425828:	add	x2, x2, #0x3b8
  42582c:	mov	w1, #0x2                   	// #2
  425830:	mov	x0, x19
  425834:	bl	426a10 <ferror@plt+0x23ce0>
  425838:	mov	x0, x19
  42583c:	bl	438a9c <ferror@plt+0x35d6c>
  425840:	mov	x1, x0
  425844:	ldrb	w0, [x0, #4]
  425848:	cmp	w0, #0x3e
  42584c:	b.eq	42588c <ferror@plt+0x22b5c>  // b.none
  425850:	cmp	w0, #0x16
  425854:	b.ne	4258c8 <ferror@plt+0x22b98>  // b.any
  425858:	mov	x0, x19
  42585c:	bl	4231b8 <ferror@plt+0x20488>
  425860:	mov	w4, w23
  425864:	mov	w3, w20
  425868:	mov	x2, x24
  42586c:	mov	w1, #0x3                   	// #3
  425870:	mov	x0, x19
  425874:	bl	4253a4 <ferror@plt+0x22674>
  425878:	mov	w0, #0x1                   	// #1
  42587c:	strb	w0, [x21, #116]
  425880:	b	42576c <ferror@plt+0x22a3c>
  425884:	mov	w20, #0x0                   	// #0
  425888:	b	425824 <ferror@plt+0x22af4>
  42588c:	str	wzr, [sp, #64]
  425890:	str	xzr, [sp, #72]
  425894:	mov	w4, #0x3e                  	// #62
  425898:	add	x3, sp, #0x40
  42589c:	mov	x2, #0x1                   	// #1
  4258a0:	add	x1, x1, #0x8
  4258a4:	mov	x0, x19
  4258a8:	bl	422900 <ferror@plt+0x1fbd0>
  4258ac:	ands	w0, w0, #0xff
  4258b0:	ldr	x0, [sp, #72]
  4258b4:	csel	x24, x0, x24, ne  // ne = any
  4258b8:	mov	w1, #0x1                   	// #1
  4258bc:	mov	x0, x19
  4258c0:	bl	423130 <ferror@plt+0x20400>
  4258c4:	b	425858 <ferror@plt+0x22b28>
  4258c8:	mov	x0, x19
  4258cc:	bl	431e54 <ferror@plt+0x2f124>
  4258d0:	mov	x3, x0
  4258d4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4258d8:	add	x2, x2, #0x308
  4258dc:	mov	w1, #0x3                   	// #3
  4258e0:	mov	x0, x19
  4258e4:	bl	426a10 <ferror@plt+0x23ce0>
  4258e8:	b	42576c <ferror@plt+0x22a3c>
  4258ec:	ldrb	w0, [x19, #1154]
  4258f0:	cbnz	w0, 425884 <ferror@plt+0x22b54>
  4258f4:	mov	w4, #0x0                   	// #0
  4258f8:	mov	w20, #0x0                   	// #0
  4258fc:	b	4257e0 <ferror@plt+0x22ab0>
  425900:	stp	x29, x30, [sp, #-32]!
  425904:	mov	x29, sp
  425908:	cbz	x3, 425938 <ferror@plt+0x22c08>
  42590c:	stp	x19, x20, [sp, #16]
  425910:	mov	x19, x3
  425914:	and	w20, w4, #0xff
  425918:	mov	w3, #0x0                   	// #0
  42591c:	bl	4249e8 <ferror@plt+0x21cb8>
  425920:	cbz	x0, 42594c <ferror@plt+0x22c1c>
  425924:	strb	w20, [x0, #19]
  425928:	str	x19, [x0, #24]
  42592c:	ldp	x19, x20, [sp, #16]
  425930:	ldp	x29, x30, [sp], #32
  425934:	ret
  425938:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42593c:	add	x2, x2, #0x3d8
  425940:	mov	w1, #0x4                   	// #4
  425944:	bl	426a10 <ferror@plt+0x23ce0>
  425948:	b	425930 <ferror@plt+0x22c00>
  42594c:	ldp	x19, x20, [sp, #16]
  425950:	b	425930 <ferror@plt+0x22c00>
  425954:	stp	x29, x30, [sp, #-32]!
  425958:	mov	x29, sp
  42595c:	stp	x19, x20, [sp, #16]
  425960:	mov	w19, w3
  425964:	and	w20, w4, #0xff
  425968:	mov	w3, w5
  42596c:	bl	4249e8 <ferror@plt+0x21cb8>
  425970:	cbz	x0, 425984 <ferror@plt+0x22c54>
  425974:	mov	w1, #0x1                   	// #1
  425978:	strb	w1, [x0, #18]
  42597c:	strb	w20, [x0, #19]
  425980:	str	w19, [x0, #24]
  425984:	ldp	x19, x20, [sp, #16]
  425988:	ldp	x29, x30, [sp], #32
  42598c:	ret
  425990:	stp	x29, x30, [sp, #-32]!
  425994:	mov	x29, sp
  425998:	stp	x19, x20, [sp, #16]
  42599c:	mov	x19, x0
  4259a0:	adrp	x3, 424000 <ferror@plt+0x212d0>
  4259a4:	add	x3, x3, #0x91c
  4259a8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4259ac:	add	x2, x2, #0x400
  4259b0:	mov	x1, #0x0                   	// #0
  4259b4:	bl	424bc0 <ferror@plt+0x21e90>
  4259b8:	adrp	x3, 424000 <ferror@plt+0x212d0>
  4259bc:	add	x3, x3, #0x724
  4259c0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4259c4:	add	x2, x2, #0x408
  4259c8:	mov	x1, #0x0                   	// #0
  4259cc:	mov	x0, x19
  4259d0:	bl	424bc0 <ferror@plt+0x21e90>
  4259d4:	adrp	x3, 425000 <ferror@plt+0x222d0>
  4259d8:	add	x3, x3, #0xe0c
  4259dc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4259e0:	add	x2, x2, #0x418
  4259e4:	mov	x1, #0x0                   	// #0
  4259e8:	mov	x0, x19
  4259ec:	bl	424bc0 <ferror@plt+0x21e90>
  4259f0:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x23c60>
  4259f4:	add	x20, x20, #0x430
  4259f8:	adrp	x3, 423000 <ferror@plt+0x202d0>
  4259fc:	add	x3, x3, #0x218
  425a00:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425a04:	add	x2, x2, #0x428
  425a08:	mov	x1, x20
  425a0c:	mov	x0, x19
  425a10:	bl	424bc0 <ferror@plt+0x21e90>
  425a14:	adrp	x3, 424000 <ferror@plt+0x212d0>
  425a18:	add	x3, x3, #0x6bc
  425a1c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425a20:	add	x2, x2, #0x438
  425a24:	mov	x1, x20
  425a28:	mov	x0, x19
  425a2c:	bl	424bc0 <ferror@plt+0x21e90>
  425a30:	adrp	x3, 424000 <ferror@plt+0x212d0>
  425a34:	add	x3, x3, #0x5f8
  425a38:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  425a3c:	add	x2, x2, #0x448
  425a40:	mov	x1, x20
  425a44:	mov	x0, x19
  425a48:	bl	424bc0 <ferror@plt+0x21e90>
  425a4c:	adrp	x3, 423000 <ferror@plt+0x202d0>
  425a50:	add	x3, x3, #0x864
  425a54:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1bc60>
  425a58:	add	x2, x2, #0x738
  425a5c:	mov	x1, x20
  425a60:	mov	x0, x19
  425a64:	bl	424bc0 <ferror@plt+0x21e90>
  425a68:	adrp	x3, 423000 <ferror@plt+0x202d0>
  425a6c:	add	x3, x3, #0x84c
  425a70:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  425a74:	add	x2, x2, #0x600
  425a78:	mov	x1, x20
  425a7c:	mov	x0, x19
  425a80:	bl	424bc0 <ferror@plt+0x21e90>
  425a84:	ldp	x19, x20, [sp, #16]
  425a88:	ldp	x29, x30, [sp], #32
  425a8c:	ret
  425a90:	stp	x29, x30, [sp, #-32]!
  425a94:	mov	x29, sp
  425a98:	stp	x19, x20, [sp, #16]
  425a9c:	mov	x20, x0
  425aa0:	ldr	x0, [x0, #896]
  425aa4:	bl	422da4 <ferror@plt+0x20074>
  425aa8:	sbfiz	x0, x0, #3, #32
  425aac:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  425ab0:	mov	x19, x0
  425ab4:	mov	x1, x0
  425ab8:	ldr	x0, [x20, #896]
  425abc:	bl	42497c <ferror@plt+0x21c4c>
  425ac0:	mov	x0, x19
  425ac4:	ldp	x19, x20, [sp, #16]
  425ac8:	ldp	x29, x30, [sp], #32
  425acc:	ret
  425ad0:	stp	x29, x30, [sp, #-32]!
  425ad4:	mov	x29, sp
  425ad8:	str	x19, [sp, #16]
  425adc:	mov	x19, x1
  425ae0:	mov	x2, x1
  425ae4:	ldr	x1, [x0, #896]
  425ae8:	bl	424574 <ferror@plt+0x21844>
  425aec:	mov	x0, x19
  425af0:	bl	402a90 <free@plt>
  425af4:	ldr	x19, [sp, #16]
  425af8:	ldp	x29, x30, [sp], #32
  425afc:	ret
  425b00:	stp	x29, x30, [sp, #-64]!
  425b04:	mov	x29, sp
  425b08:	stp	x19, x20, [sp, #16]
  425b0c:	str	x21, [sp, #32]
  425b10:	mov	x21, x0
  425b14:	mov	x20, x1
  425b18:	add	x2, sp, #0x38
  425b1c:	mov	w1, #0x4                   	// #4
  425b20:	bl	423384 <ferror@plt+0x20654>
  425b24:	mov	x19, x0
  425b28:	str	wzr, [x20]
  425b2c:	cbz	x0, 425b74 <ferror@plt+0x22e44>
  425b30:	ldr	x0, [x0, #24]
  425b34:	cbz	x0, 425b5c <ferror@plt+0x22e2c>
  425b38:	ldr	x1, [sp, #56]
  425b3c:	mov	w0, #0x1                   	// #1
  425b40:	cbz	x1, 425b58 <ferror@plt+0x22e28>
  425b44:	mov	x0, x19
  425b48:	bl	42360c <ferror@plt+0x208dc>
  425b4c:	ldr	x0, [x0]
  425b50:	cmp	x0, #0x0
  425b54:	cset	w0, ne  // ne = any
  425b58:	str	w0, [x20]
  425b5c:	cmp	x19, #0x0
  425b60:	cset	w0, eq  // eq = none
  425b64:	ldp	x19, x20, [sp, #16]
  425b68:	ldr	x21, [sp, #32]
  425b6c:	ldp	x29, x30, [sp], #64
  425b70:	ret
  425b74:	ldr	x0, [x21, #448]
  425b78:	ldurb	w0, [x0, #-20]
  425b7c:	cmp	w0, #0x16
  425b80:	b.ne	425b5c <ferror@plt+0x22e2c>  // b.any
  425b84:	mov	w1, #0x1                   	// #1
  425b88:	mov	x0, x21
  425b8c:	bl	435970 <ferror@plt+0x32c40>
  425b90:	b	425b5c <ferror@plt+0x22e2c>
  425b94:	add	x0, x0, #0x458
  425b98:	ret
  425b9c:	add	x0, x0, #0x388
  425ba0:	ret
  425ba4:	stp	x29, x30, [sp, #-16]!
  425ba8:	mov	x29, sp
  425bac:	mov	x2, #0xb8                  	// #184
  425bb0:	add	x0, x0, #0x388
  425bb4:	bl	402620 <memcpy@plt>
  425bb8:	ldp	x29, x30, [sp], #16
  425bbc:	ret
  425bc0:	stp	x29, x30, [sp, #-32]!
  425bc4:	mov	x29, sp
  425bc8:	str	x19, [sp, #16]
  425bcc:	mov	x19, x0
  425bd0:	ldr	x0, [x0, #712]
  425bd4:	cbz	x0, 425be8 <ferror@plt+0x22eb8>
  425bd8:	ldr	x0, [x19, #712]
  425bdc:	ldr	x19, [sp, #16]
  425be0:	ldp	x29, x30, [sp], #32
  425be4:	ret
  425be8:	bl	4390ec <ferror@plt+0x363bc>
  425bec:	str	x0, [x19, #712]
  425bf0:	b	425bd8 <ferror@plt+0x22ea8>
  425bf4:	stp	x29, x30, [sp, #-48]!
  425bf8:	mov	x29, sp
  425bfc:	stp	x19, x20, [sp, #16]
  425c00:	stp	x21, x22, [sp, #32]
  425c04:	mov	x19, x0
  425c08:	mov	x20, x1
  425c0c:	mov	x22, x2
  425c10:	mov	w21, w3
  425c14:	ldr	x0, [x0, #840]
  425c18:	ldr	x1, [x19, #832]
  425c1c:	sub	x0, x0, x1
  425c20:	cmp	x0, #0xc7
  425c24:	b.ls	425ce0 <ferror@plt+0x22fb0>  // b.plast
  425c28:	ldr	x5, [x19, #832]
  425c2c:	add	x5, x5, #0xc8
  425c30:	ldr	x0, [x19, #824]
  425c34:	cmp	x5, x0
  425c38:	b.eq	425cf0 <ferror@plt+0x22fc0>  // b.none
  425c3c:	ldr	x4, [x19, #856]
  425c40:	add	x5, x5, x4
  425c44:	bic	x4, x5, x4
  425c48:	str	x4, [x19, #832]
  425c4c:	ldr	x1, [x19, #816]
  425c50:	ldr	x2, [x19, #840]
  425c54:	sub	x4, x4, x1
  425c58:	sub	x1, x2, x1
  425c5c:	cmp	x4, x1
  425c60:	b.ls	425c68 <ferror@plt+0x22f38>  // b.plast
  425c64:	str	x2, [x19, #832]
  425c68:	ldr	x2, [x19, #832]
  425c6c:	str	x2, [x19, #824]
  425c70:	stp	xzr, xzr, [x0]
  425c74:	stp	xzr, xzr, [x0, #32]
  425c78:	stp	xzr, xzr, [x0, #48]
  425c7c:	stp	xzr, xzr, [x0, #64]
  425c80:	stp	xzr, xzr, [x0, #80]
  425c84:	stp	xzr, xzr, [x0, #96]
  425c88:	stp	xzr, xzr, [x0, #112]
  425c8c:	stp	xzr, xzr, [x0, #128]
  425c90:	stp	xzr, xzr, [x0, #144]
  425c94:	stp	xzr, xzr, [x0, #160]
  425c98:	stp	xzr, xzr, [x0, #176]
  425c9c:	str	xzr, [x0, #192]
  425ca0:	str	x20, [x0, #24]
  425ca4:	str	x20, [x0, #16]
  425ca8:	add	x20, x20, x22
  425cac:	str	x20, [x0, #32]
  425cb0:	ldrb	w1, [x0, #105]
  425cb4:	bfi	w1, w21, #1, #1
  425cb8:	strb	w1, [x0, #105]
  425cbc:	ldr	x1, [x19]
  425cc0:	str	x1, [x0, #72]
  425cc4:	mov	w1, #0x1                   	// #1
  425cc8:	strb	w1, [x0, #104]
  425ccc:	str	x0, [x19]
  425cd0:	ldp	x19, x20, [sp, #16]
  425cd4:	ldp	x21, x22, [sp, #32]
  425cd8:	ldp	x29, x30, [sp], #48
  425cdc:	ret
  425ce0:	mov	x1, #0xc8                  	// #200
  425ce4:	add	x0, x19, #0x328
  425ce8:	bl	4541c8 <_obstack_newchunk@@Base>
  425cec:	b	425c28 <ferror@plt+0x22ef8>
  425cf0:	ldrb	w1, [x19, #888]
  425cf4:	orr	w1, w1, #0x2
  425cf8:	strb	w1, [x19, #888]
  425cfc:	b	425c3c <ferror@plt+0x22f0c>
  425d00:	stp	x29, x30, [sp, #-80]!
  425d04:	mov	x29, sp
  425d08:	stp	x19, x20, [sp, #16]
  425d0c:	stp	x23, x24, [sp, #48]
  425d10:	mov	x20, x0
  425d14:	ldr	x23, [x0]
  425d18:	ldr	x24, [x23, #80]
  425d1c:	ldr	x19, [x23, #96]
  425d20:	cbz	x19, 425d78 <ferror@plt+0x23048>
  425d24:	stp	x21, x22, [sp, #32]
  425d28:	str	x25, [sp, #64]
  425d2c:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x23c60>
  425d30:	add	x22, x22, #0x598
  425d34:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x23c60>
  425d38:	add	x21, x21, #0x458
  425d3c:	mov	w25, #0x3                   	// #3
  425d40:	ldrsw	x1, [x19, #28]
  425d44:	add	x1, x1, x1, lsl #1
  425d48:	add	x1, x22, x1, lsl #3
  425d4c:	ldr	x5, [x1, #8]
  425d50:	mov	x4, x21
  425d54:	mov	w3, #0x0                   	// #0
  425d58:	ldr	w2, [x19, #8]
  425d5c:	mov	w1, w25
  425d60:	mov	x0, x20
  425d64:	bl	426bfc <ferror@plt+0x23ecc>
  425d68:	ldr	x19, [x19]
  425d6c:	cbnz	x19, 425d40 <ferror@plt+0x23010>
  425d70:	ldp	x21, x22, [sp, #32]
  425d74:	ldr	x25, [sp, #64]
  425d78:	strb	wzr, [x20, #18]
  425d7c:	ldr	x0, [x23, #72]
  425d80:	str	x0, [x20]
  425d84:	ldr	x19, [x23, #40]
  425d88:	ldr	x0, [x23, #48]
  425d8c:	bl	402a90 <free@plt>
  425d90:	ldr	x0, [x20, #816]
  425d94:	cmp	x0, x23
  425d98:	b.cs	425db4 <ferror@plt+0x23084>  // b.hs, b.nlast
  425d9c:	ldr	x0, [x20, #840]
  425da0:	cmp	x0, x23
  425da4:	b.ls	425db4 <ferror@plt+0x23084>  // b.plast
  425da8:	str	x23, [x20, #824]
  425dac:	str	x23, [x20, #832]
  425db0:	b	425dc0 <ferror@plt+0x23090>
  425db4:	mov	x1, x23
  425db8:	add	x0, x20, #0x328
  425dbc:	bl	454320 <_obstack_free@@Base>
  425dc0:	cbz	x24, 425dfc <ferror@plt+0x230cc>
  425dc4:	mov	x2, x19
  425dc8:	mov	x1, x24
  425dcc:	mov	x0, x20
  425dd0:	bl	42ce5c <ferror@plt+0x2a12c>
  425dd4:	mov	w4, #0x0                   	// #0
  425dd8:	mov	w3, #0x0                   	// #0
  425ddc:	mov	x2, #0x0                   	// #0
  425de0:	mov	w1, #0x1                   	// #1
  425de4:	mov	x0, x20
  425de8:	bl	4253a4 <ferror@plt+0x22674>
  425dec:	ldp	x19, x20, [sp, #16]
  425df0:	ldp	x23, x24, [sp, #48]
  425df4:	ldp	x29, x30, [sp], #80
  425df8:	ret
  425dfc:	cbz	x19, 425dec <ferror@plt+0x230bc>
  425e00:	mov	x0, x19
  425e04:	bl	402a90 <free@plt>
  425e08:	b	425dec <ferror@plt+0x230bc>
  425e0c:	stp	x29, x30, [sp, #-64]!
  425e10:	mov	x29, sp
  425e14:	stp	x19, x20, [sp, #16]
  425e18:	stp	x21, x22, [sp, #32]
  425e1c:	str	x23, [sp, #48]
  425e20:	mov	x21, x0
  425e24:	ldr	x19, [x0, #1400]
  425e28:	bl	422fe4 <ferror@plt+0x202b4>
  425e2c:	cbz	x0, 425e80 <ferror@plt+0x23150>
  425e30:	ldr	w2, [x0, #8]
  425e34:	add	w1, w2, #0x2
  425e38:	add	x1, x1, #0xf
  425e3c:	and	x1, x1, #0x1fffffff0
  425e40:	sub	sp, sp, x1
  425e44:	mov	x20, sp
  425e48:	ldr	x4, [x0, #16]
  425e4c:	ldrb	w0, [x4]
  425e50:	cmp	w0, #0x4c
  425e54:	cset	x1, eq  // eq = none
  425e58:	add	x1, x1, #0x1
  425e5c:	add	x1, x4, x1
  425e60:	mov	w2, w2
  425e64:	sub	x2, x2, #0x1
  425e68:	add	x4, x4, x2
  425e6c:	cmp	x1, x4
  425e70:	b.cs	425ef0 <ferror@plt+0x231c0>  // b.hs, b.nlast
  425e74:	mov	x3, x20
  425e78:	mov	w5, #0x5c                  	// #92
  425e7c:	b	425ecc <ferror@plt+0x2319c>
  425e80:	ldr	x0, [x21, #448]
  425e84:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  425e88:	add	x4, x4, #0x470
  425e8c:	mov	w3, #0x0                   	// #0
  425e90:	ldur	w2, [x0, #-24]
  425e94:	mov	w1, #0x3                   	// #3
  425e98:	mov	x0, x21
  425e9c:	bl	426bfc <ferror@plt+0x23ecc>
  425ea0:	mov	w1, #0x0                   	// #0
  425ea4:	mov	x0, x21
  425ea8:	bl	423130 <ferror@plt+0x20400>
  425eac:	mov	x0, x21
  425eb0:	bl	4231b8 <ferror@plt+0x20488>
  425eb4:	b	425fbc <ferror@plt+0x2328c>
  425eb8:	mov	x1, x2
  425ebc:	ldrb	w2, [x1], #1
  425ec0:	strb	w2, [x3], #1
  425ec4:	cmp	x4, x1
  425ec8:	b.ls	425ef4 <ferror@plt+0x231c4>  // b.plast
  425ecc:	ldrb	w0, [x1]
  425ed0:	mov	x2, x1
  425ed4:	cmp	w0, #0x5c
  425ed8:	b.ne	425eb8 <ferror@plt+0x23188>  // b.any
  425edc:	ldrb	w0, [x1, #1]
  425ee0:	cmp	w0, #0x22
  425ee4:	ccmp	w0, w5, #0x4, ne  // ne = any
  425ee8:	cinc	x2, x1, eq  // eq = none
  425eec:	b	425eb8 <ferror@plt+0x23188>
  425ef0:	mov	x3, x20
  425ef4:	strb	wzr, [x3]
  425ef8:	mov	w1, #0x0                   	// #0
  425efc:	mov	x0, x21
  425f00:	bl	423130 <ferror@plt+0x20400>
  425f04:	mov	x0, x21
  425f08:	bl	4231b8 <ferror@plt+0x20488>
  425f0c:	cbz	x19, 425fbc <ferror@plt+0x2328c>
  425f10:	mov	x22, #0x0                   	// #0
  425f14:	b	425f1c <ferror@plt+0x231ec>
  425f18:	mov	x19, x1
  425f1c:	mov	x1, x20
  425f20:	ldr	x0, [x19, #8]
  425f24:	bl	402a20 <strcmp@plt>
  425f28:	cbz	w0, 425f3c <ferror@plt+0x2320c>
  425f2c:	ldr	x1, [x19]
  425f30:	mov	x22, x19
  425f34:	cbnz	x1, 425f18 <ferror@plt+0x231e8>
  425f38:	b	425fbc <ferror@plt+0x2328c>
  425f3c:	cbz	x22, 425fd4 <ferror@plt+0x232a4>
  425f40:	ldr	x0, [x19]
  425f44:	str	x0, [x22]
  425f48:	ldr	x1, [x19, #8]
  425f4c:	mov	x0, x21
  425f50:	bl	42e2b0 <ferror@plt+0x2b580>
  425f54:	mov	x20, x0
  425f58:	cbz	x0, 425fa4 <ferror@plt+0x23274>
  425f5c:	ldr	x1, [x21, #1024]
  425f60:	cbz	x1, 425f6c <ferror@plt+0x2323c>
  425f64:	mov	x0, x21
  425f68:	blr	x1
  425f6c:	ldrb	w0, [x20, #18]
  425f70:	tbz	w0, #1, 425f9c <ferror@plt+0x2326c>
  425f74:	ldr	x3, [x21, #944]
  425f78:	cbz	x3, 425f8c <ferror@plt+0x2325c>
  425f7c:	mov	x2, x20
  425f80:	ldr	w1, [x21, #48]
  425f84:	mov	x0, x21
  425f88:	blr	x3
  425f8c:	ldrb	w0, [x21, #1151]
  425f90:	cbnz	w0, 425fe0 <ferror@plt+0x232b0>
  425f94:	mov	x0, x20
  425f98:	bl	435c00 <ferror@plt+0x32ed0>
  425f9c:	ldrb	w0, [x19, #28]
  425fa0:	tbz	w0, #2, 425ff4 <ferror@plt+0x232c4>
  425fa4:	ldr	x0, [x19, #16]
  425fa8:	bl	402a90 <free@plt>
  425fac:	ldr	x0, [x19, #8]
  425fb0:	bl	402a90 <free@plt>
  425fb4:	mov	x0, x19
  425fb8:	bl	402a90 <free@plt>
  425fbc:	mov	sp, x29
  425fc0:	ldp	x19, x20, [sp, #16]
  425fc4:	ldp	x21, x22, [sp, #32]
  425fc8:	ldr	x23, [sp, #48]
  425fcc:	ldp	x29, x30, [sp], #64
  425fd0:	ret
  425fd4:	ldr	x0, [x19]
  425fd8:	str	x0, [x21, #1400]
  425fdc:	b	425f48 <ferror@plt+0x23218>
  425fe0:	mov	x2, #0x0                   	// #0
  425fe4:	mov	x1, x20
  425fe8:	mov	x0, x21
  425fec:	bl	434f54 <ferror@plt+0x32224>
  425ff0:	b	425f94 <ferror@plt+0x23264>
  425ff4:	ldr	x20, [x19, #16]
  425ff8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  425ffc:	add	x1, x1, #0x498
  426000:	mov	x0, x20
  426004:	bl	402c10 <strcspn@plt>
  426008:	sxtw	x23, w0
  42600c:	mov	w2, w23
  426010:	mov	x1, x20
  426014:	mov	x0, x21
  426018:	bl	42d2b4 <ferror@plt+0x2a584>
  42601c:	mov	x20, x0
  426020:	ldr	x22, [x19, #16]
  426024:	add	x22, x22, x23
  426028:	mov	w1, #0xa                   	// #10
  42602c:	mov	x0, x22
  426030:	bl	402ac0 <strchr@plt>
  426034:	mov	w3, #0x1                   	// #1
  426038:	sub	x2, x0, x22
  42603c:	mov	x1, x22
  426040:	mov	x0, x21
  426044:	bl	425bf4 <ferror@plt+0x22ec4>
  426048:	mov	x22, x0
  42604c:	cbz	x0, 4260d0 <ferror@plt+0x233a0>
  426050:	mov	x0, x21
  426054:	bl	42da34 <ferror@plt+0x2ad04>
  426058:	mov	w0, #0x1                   	// #1
  42605c:	strb	w0, [x22, #106]
  426060:	mov	x1, x20
  426064:	mov	x0, x21
  426068:	bl	435e00 <ferror@plt+0x330d0>
  42606c:	and	w0, w0, #0xff
  426070:	cbz	w0, 4260b8 <ferror@plt+0x23388>
  426074:	mov	x0, x21
  426078:	bl	425d00 <ferror@plt+0x22fd0>
  42607c:	ldr	x0, [x20, #24]
  426080:	ldr	w1, [x19, #24]
  426084:	str	w1, [x0, #8]
  426088:	ldr	x0, [x20, #24]
  42608c:	ldrb	w2, [x19, #28]
  426090:	ldrb	w1, [x0, #19]
  426094:	bfi	w1, w2, #4, #1
  426098:	strb	w1, [x0, #19]
  42609c:	ldr	x1, [x20, #24]
  4260a0:	ldrb	w0, [x19, #28]
  4260a4:	ubfx	x0, x0, #1, #1
  4260a8:	ldrb	w2, [x1, #19]
  4260ac:	bfi	w2, w0, #5, #1
  4260b0:	strb	w2, [x1, #19]
  4260b4:	b	425fa4 <ferror@plt+0x23274>
  4260b8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4260bc:	add	x2, x2, #0x4a0
  4260c0:	mov	w1, #0x9a8                 	// #2472
  4260c4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4260c8:	add	x0, x0, #0x4b8
  4260cc:	bl	4102b4 <ferror@plt+0xd584>
  4260d0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4260d4:	add	x2, x2, #0x4a0
  4260d8:	mov	w1, #0x9ac                 	// #2476
  4260dc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4260e0:	add	x0, x0, #0x4b8
  4260e4:	bl	4102b4 <ferror@plt+0xd584>
  4260e8:	stp	x29, x30, [sp, #-96]!
  4260ec:	mov	x29, sp
  4260f0:	stp	x19, x20, [sp, #16]
  4260f4:	stp	x21, x22, [sp, #32]
  4260f8:	stp	x23, x24, [sp, #48]
  4260fc:	stp	x25, x26, [sp, #64]
  426100:	str	x27, [sp, #80]
  426104:	mov	x19, x0
  426108:	mov	w21, w2
  42610c:	ldr	w0, [x1]
  426110:	sub	w2, w0, #0x1
  426114:	add	x2, x2, #0xf
  426118:	and	x2, x2, #0x1fffffff0
  42611c:	sub	sp, sp, x2
  426120:	mov	x22, sp
  426124:	ldr	x2, [x1, #8]
  426128:	ldrb	w1, [x2]
  42612c:	cmp	w1, #0x4c
  426130:	cset	x1, eq  // eq = none
  426134:	add	x1, x1, #0x1
  426138:	add	x1, x2, x1
  42613c:	mov	w0, w0
  426140:	sub	x0, x0, #0x1
  426144:	add	x2, x2, x0
  426148:	cmp	x1, x2
  42614c:	b.cs	426194 <ferror@plt+0x23464>  // b.hs, b.nlast
  426150:	mov	x20, x22
  426154:	mov	w4, #0x5c                  	// #92
  426158:	b	426170 <ferror@plt+0x23440>
  42615c:	mov	x1, x0
  426160:	ldrb	w0, [x1], #1
  426164:	strb	w0, [x20], #1
  426168:	cmp	x2, x1
  42616c:	b.ls	426198 <ferror@plt+0x23468>  // b.plast
  426170:	ldrb	w3, [x1]
  426174:	mov	x0, x1
  426178:	cmp	w3, #0x5c
  42617c:	b.ne	42615c <ferror@plt+0x2342c>  // b.any
  426180:	ldrb	w0, [x1, #1]
  426184:	cmp	w0, #0x22
  426188:	ccmp	w0, w4, #0x4, ne  // ne = any
  42618c:	cinc	x0, x1, eq  // eq = none
  426190:	b	42615c <ferror@plt+0x2342c>
  426194:	mov	x20, x22
  426198:	mov	w0, #0xa                   	// #10
  42619c:	strb	w0, [x20]
  4261a0:	ldr	x25, [x19, #136]
  4261a4:	ldr	x24, [x19, #448]
  4261a8:	ldr	x23, [x19, #488]
  4261ac:	mov	x1, #0x38                  	// #56
  4261b0:	mov	x0, #0x1                   	// #1
  4261b4:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  4261b8:	str	x0, [x19, #136]
  4261bc:	mov	w3, #0x1                   	// #1
  4261c0:	sub	x2, x20, x22
  4261c4:	mov	x1, x22
  4261c8:	mov	x0, x19
  4261cc:	bl	425bf4 <ferror@plt+0x22ec4>
  4261d0:	ldr	x0, [x19]
  4261d4:	ldr	x1, [x0, #72]
  4261d8:	cbz	x1, 4261e4 <ferror@plt+0x234b4>
  4261dc:	ldr	x1, [x1, #80]
  4261e0:	str	x1, [x0, #80]
  4261e4:	mov	w0, #0x1                   	// #1
  4261e8:	strb	w0, [x19, #16]
  4261ec:	strb	wzr, [x19, #21]
  4261f0:	mov	w0, #0x53                  	// #83
  4261f4:	strb	w0, [x19, #156]
  4261f8:	ldr	x0, [x19, #40]
  4261fc:	ldr	w0, [x0, #60]
  426200:	str	w0, [x19, #48]
  426204:	mov	x0, x19
  426208:	bl	42da34 <ferror@plt+0x2ad04>
  42620c:	ldr	x20, [x19, #144]
  426210:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  426214:	add	x0, x0, #0x598
  426218:	add	x0, x0, #0x108
  42621c:	str	x0, [x19, #144]
  426220:	mov	x0, x19
  426224:	bl	424bf0 <ferror@plt+0x21ec0>
  426228:	mov	w1, #0x1                   	// #1
  42622c:	mov	x0, x19
  426230:	bl	4244c8 <ferror@plt+0x21798>
  426234:	str	x20, [x19, #144]
  426238:	ldrb	w0, [x19, #156]
  42623c:	cmp	w0, #0x51
  426240:	b.eq	4262d4 <ferror@plt+0x235a4>  // b.none
  426244:	mov	x0, #0x18                  	// #24
  426248:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42624c:	mov	x20, x0
  426250:	ldp	x0, x1, [x19, #152]
  426254:	stp	x0, x1, [x20]
  426258:	ldr	x0, [x19, #168]
  42625c:	str	x0, [x20, #16]
  426260:	ldr	x3, [x19, #904]
  426264:	mov	w26, #0x1                   	// #1
  426268:	cbz	x3, 42627c <ferror@plt+0x2354c>
  42626c:	mov	w2, #0x0                   	// #0
  426270:	ldr	x1, [x19, #448]
  426274:	mov	x0, x19
  426278:	blr	x3
  42627c:	ldr	x0, [x19]
  426280:	str	xzr, [x0, #80]
  426284:	mov	x0, x19
  426288:	bl	425d00 <ferror@plt+0x22fd0>
  42628c:	ldr	x0, [x19, #136]
  426290:	bl	402a90 <free@plt>
  426294:	str	x25, [x19, #136]
  426298:	str	x24, [x19, #448]
  42629c:	str	x23, [x19, #488]
  4262a0:	mov	w3, w26
  4262a4:	mov	x2, x20
  4262a8:	mov	x1, #0x0                   	// #0
  4262ac:	mov	x0, x19
  4262b0:	bl	435580 <ferror@plt+0x32850>
  4262b4:	mov	sp, x29
  4262b8:	ldp	x19, x20, [sp, #16]
  4262bc:	ldp	x21, x22, [sp, #32]
  4262c0:	ldp	x23, x24, [sp, #48]
  4262c4:	ldp	x25, x26, [sp, #64]
  4262c8:	ldr	x27, [sp, #80]
  4262cc:	ldp	x29, x30, [sp], #96
  4262d0:	ret
  4262d4:	mov	x0, #0x4b0                 	// #1200
  4262d8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4262dc:	mov	x20, x0
  4262e0:	ldp	x0, x1, [x19, #152]
  4262e4:	stp	x0, x1, [x20]
  4262e8:	ldr	x0, [x19, #168]
  4262ec:	str	x0, [x20, #16]
  4262f0:	mov	x22, #0x18                  	// #24
  4262f4:	mov	w26, #0x1                   	// #1
  4262f8:	mov	w27, #0x32                  	// #50
  4262fc:	b	426328 <ferror@plt+0x235f8>
  426300:	add	w27, w27, w27, lsl #1
  426304:	add	w27, w27, w27, lsr #31
  426308:	asr	w27, w27, #1
  42630c:	sbfiz	x1, x27, #1, #32
  426310:	add	x1, x1, w27, sxtw
  426314:	lsl	x1, x1, #3
  426318:	mov	x0, x20
  42631c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  426320:	mov	x20, x0
  426324:	add	x22, x22, #0x18
  426328:	mov	x0, x19
  42632c:	bl	438a9c <ferror@plt+0x35d6c>
  426330:	add	x1, x20, x22
  426334:	ldp	x2, x3, [x0]
  426338:	stp	x2, x3, [x1]
  42633c:	ldr	x0, [x0, #16]
  426340:	str	x0, [x1, #16]
  426344:	str	w21, [x20, x22]
  426348:	add	w26, w26, #0x1
  42634c:	ldrh	w0, [x1, #6]
  426350:	orr	w0, w0, #0x400
  426354:	strh	w0, [x1, #6]
  426358:	ldrb	w0, [x1, #4]
  42635c:	cmp	w0, #0x52
  426360:	b.eq	42627c <ferror@plt+0x2354c>  // b.none
  426364:	cmp	w27, w26
  426368:	b.ne	426324 <ferror@plt+0x235f4>  // b.any
  42636c:	b	426300 <ferror@plt+0x235d0>
  426370:	stp	x29, x30, [sp, #-32]!
  426374:	mov	x29, sp
  426378:	stp	x19, x20, [sp, #16]
  42637c:	mov	x19, x0
  426380:	mov	w20, w1
  426384:	bl	422fe4 <ferror@plt+0x202b4>
  426388:	mov	w1, #0x53                  	// #83
  42638c:	strb	w1, [x19, #156]
  426390:	cbz	x0, 4263b4 <ferror@plt+0x23684>
  426394:	mov	w2, w20
  426398:	add	x1, x0, #0x8
  42639c:	mov	x0, x19
  4263a0:	bl	4260e8 <ferror@plt+0x233b8>
  4263a4:	mov	w0, #0x1                   	// #1
  4263a8:	ldp	x19, x20, [sp, #16]
  4263ac:	ldp	x29, x30, [sp], #32
  4263b0:	ret
  4263b4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4263b8:	add	x2, x2, #0x4d8
  4263bc:	mov	w1, #0x3                   	// #3
  4263c0:	mov	x0, x19
  4263c4:	bl	426a10 <ferror@plt+0x23ce0>
  4263c8:	mov	w0, #0x0                   	// #0
  4263cc:	b	4263a8 <ferror@plt+0x23678>
  4263d0:	stp	x29, x30, [sp, #-32]!
  4263d4:	mov	x29, sp
  4263d8:	stp	x19, x20, [sp, #16]
  4263dc:	mov	x19, x0
  4263e0:	mov	w20, w1
  4263e4:	mov	x1, x2
  4263e8:	mov	x2, x3
  4263ec:	mov	w3, #0x1                   	// #1
  4263f0:	bl	425bf4 <ferror@plt+0x22ec4>
  4263f4:	mov	w0, #0x1                   	// #1
  4263f8:	strb	w0, [x19, #16]
  4263fc:	strb	wzr, [x19, #21]
  426400:	mov	w0, #0x53                  	// #83
  426404:	strb	w0, [x19, #156]
  426408:	ldr	x0, [x19, #40]
  42640c:	ldr	w0, [x0, #60]
  426410:	str	w0, [x19, #48]
  426414:	mov	x0, x19
  426418:	bl	42da34 <ferror@plt+0x2ad04>
  42641c:	sbfiz	x1, x20, #1, #32
  426420:	add	x20, x1, w20, sxtw
  426424:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  426428:	add	x1, x1, #0x598
  42642c:	add	x20, x1, x20, lsl #3
  426430:	str	x20, [x19, #144]
  426434:	ldrb	w0, [x19, #1160]
  426438:	cbnz	w0, 42646c <ferror@plt+0x2373c>
  42643c:	ldr	x0, [x19, #144]
  426440:	ldr	x1, [x0]
  426444:	mov	x0, x19
  426448:	blr	x1
  42644c:	mov	w1, #0x1                   	// #1
  426450:	mov	x0, x19
  426454:	bl	4244c8 <ferror@plt+0x21798>
  426458:	mov	x0, x19
  42645c:	bl	425d00 <ferror@plt+0x22fd0>
  426460:	ldp	x19, x20, [sp, #16]
  426464:	ldp	x29, x30, [sp], #32
  426468:	ret
  42646c:	mov	x0, x19
  426470:	bl	424384 <ferror@plt+0x21654>
  426474:	b	42643c <ferror@plt+0x2370c>
  426478:	stp	x29, x30, [sp, #-48]!
  42647c:	mov	x29, sp
  426480:	stp	x19, x20, [sp, #16]
  426484:	stp	x21, x22, [sp, #32]
  426488:	mov	x22, x0
  42648c:	mov	x20, x1
  426490:	mov	x0, x1
  426494:	bl	402680 <strlen@plt>
  426498:	mov	x19, x0
  42649c:	add	x0, x0, #0x12
  4264a0:	and	x0, x0, #0xfffffffffffffff0
  4264a4:	sub	sp, sp, x0
  4264a8:	mov	x21, sp
  4264ac:	mov	x2, x19
  4264b0:	mov	x1, x20
  4264b4:	mov	x0, x21
  4264b8:	bl	402620 <memcpy@plt>
  4264bc:	mov	w1, #0x3d                  	// #61
  4264c0:	mov	x0, x20
  4264c4:	bl	402ac0 <strchr@plt>
  4264c8:	cbz	x0, 426508 <ferror@plt+0x237d8>
  4264cc:	sub	x20, x0, x20
  4264d0:	mov	w0, #0x20                  	// #32
  4264d4:	strb	w0, [x21, x20]
  4264d8:	mov	w0, #0xa                   	// #10
  4264dc:	strb	w0, [x21, x19]
  4264e0:	mov	x3, x19
  4264e4:	mov	x2, x21
  4264e8:	mov	w1, #0x0                   	// #0
  4264ec:	mov	x0, x22
  4264f0:	bl	4263d0 <ferror@plt+0x236a0>
  4264f4:	mov	sp, x29
  4264f8:	ldp	x19, x20, [sp, #16]
  4264fc:	ldp	x21, x22, [sp, #32]
  426500:	ldp	x29, x30, [sp], #48
  426504:	ret
  426508:	add	x0, x19, #0x1
  42650c:	mov	w1, #0x20                  	// #32
  426510:	strb	w1, [x21, x19]
  426514:	mov	w1, #0x31                  	// #49
  426518:	strb	w1, [x21, x0]
  42651c:	add	x19, x19, #0x2
  426520:	b	4264d8 <ferror@plt+0x237a8>
  426524:	stp	x29, x30, [sp, #-272]!
  426528:	mov	x29, sp
  42652c:	stp	x19, x20, [sp, #16]
  426530:	mov	x20, x0
  426534:	mov	x0, x1
  426538:	str	x2, [sp, #224]
  42653c:	str	x3, [sp, #232]
  426540:	str	x4, [sp, #240]
  426544:	str	x5, [sp, #248]
  426548:	str	x6, [sp, #256]
  42654c:	str	x7, [sp, #264]
  426550:	str	q0, [sp, #96]
  426554:	str	q1, [sp, #112]
  426558:	str	q2, [sp, #128]
  42655c:	str	q3, [sp, #144]
  426560:	str	q4, [sp, #160]
  426564:	str	q5, [sp, #176]
  426568:	str	q6, [sp, #192]
  42656c:	str	q7, [sp, #208]
  426570:	add	x1, sp, #0x110
  426574:	str	x1, [sp, #64]
  426578:	str	x1, [sp, #72]
  42657c:	add	x1, sp, #0xe0
  426580:	str	x1, [sp, #80]
  426584:	mov	w1, #0xffffffd0            	// #-48
  426588:	str	w1, [sp, #88]
  42658c:	mov	w1, #0xffffff80            	// #-128
  426590:	str	w1, [sp, #92]
  426594:	ldp	x2, x3, [sp, #64]
  426598:	stp	x2, x3, [sp, #32]
  42659c:	ldp	x2, x3, [sp, #80]
  4265a0:	stp	x2, x3, [sp, #48]
  4265a4:	add	x1, sp, #0x20
  4265a8:	bl	454f1c <_obstack_memory_used@@Base+0xb7c>
  4265ac:	mov	x19, x0
  4265b0:	mov	x1, x0
  4265b4:	mov	x0, x20
  4265b8:	bl	426478 <ferror@plt+0x23748>
  4265bc:	mov	x0, x19
  4265c0:	bl	402a90 <free@plt>
  4265c4:	ldp	x19, x20, [sp, #16]
  4265c8:	ldp	x29, x30, [sp], #272
  4265cc:	ret
  4265d0:	stp	x29, x30, [sp, #-48]!
  4265d4:	mov	x29, sp
  4265d8:	stp	x19, x20, [sp, #16]
  4265dc:	stp	x21, x22, [sp, #32]
  4265e0:	mov	x21, x0
  4265e4:	mov	x20, x1
  4265e8:	mov	x0, x1
  4265ec:	bl	402680 <strlen@plt>
  4265f0:	mov	x19, x0
  4265f4:	add	x0, x0, #0x10
  4265f8:	and	x0, x0, #0xfffffffffffffff0
  4265fc:	sub	sp, sp, x0
  426600:	mov	x22, sp
  426604:	mov	x2, x19
  426608:	mov	x1, x20
  42660c:	mov	x0, x22
  426610:	bl	402620 <memcpy@plt>
  426614:	mov	w0, #0xa                   	// #10
  426618:	strb	w0, [x22, x19]
  42661c:	mov	x3, x19
  426620:	mov	x2, x22
  426624:	mov	w1, #0x0                   	// #0
  426628:	mov	x0, x21
  42662c:	bl	4263d0 <ferror@plt+0x236a0>
  426630:	mov	sp, x29
  426634:	ldp	x19, x20, [sp, #16]
  426638:	ldp	x21, x22, [sp, #32]
  42663c:	ldp	x29, x30, [sp], #48
  426640:	ret
  426644:	stp	x29, x30, [sp, #-48]!
  426648:	mov	x29, sp
  42664c:	stp	x19, x20, [sp, #16]
  426650:	stp	x21, x22, [sp, #32]
  426654:	mov	x21, x0
  426658:	mov	x20, x1
  42665c:	mov	x0, x1
  426660:	bl	402680 <strlen@plt>
  426664:	mov	x19, x0
  426668:	add	x0, x0, #0x10
  42666c:	and	x0, x0, #0xfffffffffffffff0
  426670:	sub	sp, sp, x0
  426674:	mov	x22, sp
  426678:	mov	x2, x19
  42667c:	mov	x1, x20
  426680:	mov	x0, x22
  426684:	bl	402620 <memcpy@plt>
  426688:	mov	w0, #0xa                   	// #10
  42668c:	strb	w0, [x22, x19]
  426690:	mov	x3, x19
  426694:	mov	x2, x22
  426698:	mov	w1, #0x7                   	// #7
  42669c:	mov	x0, x21
  4266a0:	bl	4263d0 <ferror@plt+0x236a0>
  4266a4:	mov	sp, x29
  4266a8:	ldp	x19, x20, [sp, #16]
  4266ac:	ldp	x21, x22, [sp, #32]
  4266b0:	ldp	x29, x30, [sp], #48
  4266b4:	ret
  4266b8:	stp	x29, x30, [sp, #-64]!
  4266bc:	mov	x29, sp
  4266c0:	stp	x19, x20, [sp, #16]
  4266c4:	stp	x21, x22, [sp, #32]
  4266c8:	stp	x23, x24, [sp, #48]
  4266cc:	mov	x23, x0
  4266d0:	mov	x20, x1
  4266d4:	mov	w24, w2
  4266d8:	mov	x0, x1
  4266dc:	bl	402680 <strlen@plt>
  4266e0:	mov	x19, x0
  4266e4:	mov	w1, #0x3d                  	// #61
  4266e8:	mov	x0, x20
  4266ec:	bl	402ac0 <strchr@plt>
  4266f0:	mov	x21, x0
  4266f4:	add	x0, x19, #0x11
  4266f8:	and	x0, x0, #0xfffffffffffffff0
  4266fc:	sub	sp, sp, x0
  426700:	mov	x22, sp
  426704:	mov	x2, x19
  426708:	mov	x1, x20
  42670c:	mov	x0, x22
  426710:	bl	402620 <memcpy@plt>
  426714:	mov	x3, x19
  426718:	cbz	x21, 426734 <ferror@plt+0x23a04>
  42671c:	sub	x20, x21, x20
  426720:	mov	w0, #0x28                  	// #40
  426724:	strb	w0, [x22, x20]
  426728:	add	x3, x19, #0x1
  42672c:	mov	w0, #0x29                  	// #41
  426730:	strb	w0, [x22, x19]
  426734:	mov	w0, #0xa                   	// #10
  426738:	strb	w0, [x22, x3]
  42673c:	mov	x2, x22
  426740:	mov	w1, w24
  426744:	mov	x0, x23
  426748:	bl	4263d0 <ferror@plt+0x236a0>
  42674c:	mov	sp, x29
  426750:	ldp	x19, x20, [sp, #16]
  426754:	ldp	x21, x22, [sp, #32]
  426758:	ldp	x23, x24, [sp, #48]
  42675c:	ldp	x29, x30, [sp], #64
  426760:	ret
  426764:	stp	x29, x30, [sp, #-16]!
  426768:	mov	x29, sp
  42676c:	mov	w2, #0x10                  	// #16
  426770:	bl	4266b8 <ferror@plt+0x23988>
  426774:	ldp	x29, x30, [sp], #16
  426778:	ret
  42677c:	stp	x29, x30, [sp, #-16]!
  426780:	mov	x29, sp
  426784:	mov	w2, #0x11                  	// #17
  426788:	bl	4266b8 <ferror@plt+0x23988>
  42678c:	ldp	x29, x30, [sp], #16
  426790:	ret
  426794:	stp	x29, x30, [sp, #-48]!
  426798:	mov	x29, sp
  42679c:	stp	x19, x20, [sp, #16]
  4267a0:	str	x21, [sp, #32]
  4267a4:	mov	x21, x0
  4267a8:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x23c60>
  4267ac:	add	x20, x20, #0x598
  4267b0:	add	x20, x20, #0x8
  4267b4:	mov	w19, #0x0                   	// #0
  4267b8:	ldrh	w2, [x20, #8]
  4267bc:	ldr	x1, [x20], #24
  4267c0:	mov	x0, x21
  4267c4:	bl	42d2b4 <ferror@plt+0x2a584>
  4267c8:	ldrb	w1, [x0, #16]
  4267cc:	orr	w1, w1, #0x1
  4267d0:	bfi	w1, w19, #1, #7
  4267d4:	strb	w1, [x0, #16]
  4267d8:	add	w19, w19, #0x1
  4267dc:	cmp	w19, #0x13
  4267e0:	b.ne	4267b8 <ferror@plt+0x23a88>  // b.any
  4267e4:	ldp	x19, x20, [sp, #16]
  4267e8:	ldr	x21, [sp, #32]
  4267ec:	ldp	x29, x30, [sp], #48
  4267f0:	ret
  4267f4:	stp	x29, x30, [sp, #-16]!
  4267f8:	mov	x29, sp
  4267fc:	bl	42387c <ferror@plt+0x20b4c>
  426800:	ldp	x29, x30, [sp], #16
  426804:	ret
  426808:	stp	x29, x30, [sp, #-64]!
  42680c:	mov	x29, sp
  426810:	stp	x19, x20, [sp, #16]
  426814:	stp	x21, x22, [sp, #32]
  426818:	stp	x23, x24, [sp, #48]
  42681c:	ldr	x22, [x0, #1000]
  426820:	cbz	x22, 426878 <ferror@plt+0x23b48>
  426824:	mov	x19, x0
  426828:	mov	w20, w1
  42682c:	mov	w24, w2
  426830:	mov	x23, x3
  426834:	mov	x1, x4
  426838:	mov	x21, x5
  42683c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  426840:	add	x0, x0, #0x848
  426844:	bl	402a80 <dgettext@plt>
  426848:	mov	x5, x21
  42684c:	mov	x4, x0
  426850:	mov	x3, x23
  426854:	mov	w2, w24
  426858:	mov	w1, w20
  42685c:	mov	x0, x19
  426860:	blr	x22
  426864:	ldp	x19, x20, [sp, #16]
  426868:	ldp	x21, x22, [sp, #32]
  42686c:	ldp	x23, x24, [sp, #48]
  426870:	ldp	x29, x30, [sp], #64
  426874:	ret
  426878:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42687c:	add	x2, x2, #0x818
  426880:	mov	w1, #0x29                  	// #41
  426884:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  426888:	add	x0, x0, #0x830
  42688c:	bl	4102b4 <ferror@plt+0xd584>
  426890:	stp	x29, x30, [sp, #-240]!
  426894:	mov	x29, sp
  426898:	stp	x19, x20, [sp, #16]
  42689c:	stp	x21, x22, [sp, #32]
  4268a0:	str	x23, [sp, #48]
  4268a4:	mov	x19, x0
  4268a8:	mov	w20, w1
  4268ac:	mov	w21, w2
  4268b0:	mov	x22, x3
  4268b4:	mov	x23, x4
  4268b8:	ldrb	w0, [x0, #1160]
  4268bc:	cbz	w0, 4268dc <ferror@plt+0x23bac>
  4268c0:	ldrb	w0, [x19, #16]
  4268c4:	cbz	w0, 4268d0 <ferror@plt+0x23ba0>
  4268c8:	ldr	w2, [x19, #48]
  4268cc:	b	4268f8 <ferror@plt+0x23bc8>
  4268d0:	ldr	x0, [x19, #40]
  4268d4:	ldr	w2, [x0, #60]
  4268d8:	b	4268f8 <ferror@plt+0x23bc8>
  4268dc:	ldr	x0, [x19, #448]
  4268e0:	ldr	x1, [x19, #488]
  4268e4:	ldr	x1, [x1, #16]
  4268e8:	mov	w2, #0x0                   	// #0
  4268ec:	cmp	x0, x1
  4268f0:	b.eq	4268f8 <ferror@plt+0x23bc8>  // b.none
  4268f4:	ldur	w2, [x0, #-24]
  4268f8:	mov	x3, #0x0                   	// #0
  4268fc:	ldr	x1, [x19, #40]
  426900:	add	x0, sp, #0x48
  426904:	bl	434390 <ferror@plt+0x31660>
  426908:	mov	x5, x23
  42690c:	mov	x4, x22
  426910:	add	x3, sp, #0x48
  426914:	mov	w2, w21
  426918:	mov	w1, w20
  42691c:	mov	x0, x19
  426920:	bl	426808 <ferror@plt+0x23ad8>
  426924:	mov	w19, w0
  426928:	add	x0, sp, #0x48
  42692c:	bl	434120 <ferror@plt+0x313f0>
  426930:	mov	w0, w19
  426934:	ldp	x19, x20, [sp, #16]
  426938:	ldp	x21, x22, [sp, #32]
  42693c:	ldr	x23, [sp, #48]
  426940:	ldp	x29, x30, [sp], #240
  426944:	ret
  426948:	stp	x29, x30, [sp, #-240]!
  42694c:	mov	x29, sp
  426950:	stp	x19, x20, [sp, #16]
  426954:	stp	x21, x22, [sp, #32]
  426958:	stp	x23, x24, [sp, #48]
  42695c:	mov	x19, x0
  426960:	ldr	x0, [x0, #1000]
  426964:	cbz	x0, 4269e8 <ferror@plt+0x23cb8>
  426968:	mov	w21, w1
  42696c:	mov	w22, w2
  426970:	mov	w2, w3
  426974:	mov	w20, w4
  426978:	mov	x23, x5
  42697c:	mov	x24, x6
  426980:	mov	x3, #0x0                   	// #0
  426984:	ldr	x1, [x19, #40]
  426988:	add	x0, sp, #0x48
  42698c:	bl	434390 <ferror@plt+0x31660>
  426990:	cbnz	w20, 426a00 <ferror@plt+0x23cd0>
  426994:	ldr	x20, [x19, #1000]
  426998:	mov	x1, x23
  42699c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4269a0:	add	x0, x0, #0x848
  4269a4:	bl	402a80 <dgettext@plt>
  4269a8:	mov	x5, x24
  4269ac:	mov	x4, x0
  4269b0:	add	x3, sp, #0x48
  4269b4:	mov	w2, w22
  4269b8:	mov	w1, w21
  4269bc:	mov	x0, x19
  4269c0:	blr	x20
  4269c4:	mov	w19, w0
  4269c8:	add	x0, sp, #0x48
  4269cc:	bl	434120 <ferror@plt+0x313f0>
  4269d0:	mov	w0, w19
  4269d4:	ldp	x19, x20, [sp, #16]
  4269d8:	ldp	x21, x22, [sp, #32]
  4269dc:	ldp	x23, x24, [sp, #48]
  4269e0:	ldp	x29, x30, [sp], #240
  4269e4:	ret
  4269e8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4269ec:	add	x2, x2, #0x850
  4269f0:	mov	w1, #0x9f                  	// #159
  4269f4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4269f8:	add	x0, x0, #0x830
  4269fc:	bl	4102b4 <ferror@plt+0xd584>
  426a00:	mov	w1, w20
  426a04:	add	x0, sp, #0x48
  426a08:	bl	4342b8 <ferror@plt+0x31588>
  426a0c:	b	426994 <ferror@plt+0x23c64>
  426a10:	stp	x29, x30, [sp, #-224]!
  426a14:	mov	x29, sp
  426a18:	str	x3, [sp, #184]
  426a1c:	str	x4, [sp, #192]
  426a20:	str	x5, [sp, #200]
  426a24:	str	x6, [sp, #208]
  426a28:	str	x7, [sp, #216]
  426a2c:	str	q0, [sp, #48]
  426a30:	str	q1, [sp, #64]
  426a34:	str	q2, [sp, #80]
  426a38:	str	q3, [sp, #96]
  426a3c:	str	q4, [sp, #112]
  426a40:	str	q5, [sp, #128]
  426a44:	str	q6, [sp, #144]
  426a48:	str	q7, [sp, #160]
  426a4c:	add	x3, sp, #0xe0
  426a50:	str	x3, [sp, #16]
  426a54:	str	x3, [sp, #24]
  426a58:	add	x3, sp, #0xb0
  426a5c:	str	x3, [sp, #32]
  426a60:	mov	w3, #0xffffffd8            	// #-40
  426a64:	str	w3, [sp, #40]
  426a68:	mov	w3, #0xffffff80            	// #-128
  426a6c:	str	w3, [sp, #44]
  426a70:	add	x4, sp, #0x10
  426a74:	mov	x3, x2
  426a78:	mov	w2, #0x0                   	// #0
  426a7c:	bl	426890 <ferror@plt+0x23b60>
  426a80:	ldp	x29, x30, [sp], #224
  426a84:	ret
  426a88:	stp	x29, x30, [sp, #-224]!
  426a8c:	mov	x29, sp
  426a90:	str	x3, [sp, #184]
  426a94:	str	x4, [sp, #192]
  426a98:	str	x5, [sp, #200]
  426a9c:	str	x6, [sp, #208]
  426aa0:	str	x7, [sp, #216]
  426aa4:	str	q0, [sp, #48]
  426aa8:	str	q1, [sp, #64]
  426aac:	str	q2, [sp, #80]
  426ab0:	str	q3, [sp, #96]
  426ab4:	str	q4, [sp, #112]
  426ab8:	str	q5, [sp, #128]
  426abc:	str	q6, [sp, #144]
  426ac0:	str	q7, [sp, #160]
  426ac4:	add	x3, sp, #0xe0
  426ac8:	str	x3, [sp, #16]
  426acc:	str	x3, [sp, #24]
  426ad0:	add	x3, sp, #0xb0
  426ad4:	str	x3, [sp, #32]
  426ad8:	mov	w3, #0xffffffd8            	// #-40
  426adc:	str	w3, [sp, #40]
  426ae0:	mov	w3, #0xffffff80            	// #-128
  426ae4:	str	w3, [sp, #44]
  426ae8:	add	x4, sp, #0x10
  426aec:	mov	x3, x2
  426af0:	mov	w2, w1
  426af4:	mov	w1, #0x0                   	// #0
  426af8:	bl	426890 <ferror@plt+0x23b60>
  426afc:	ldp	x29, x30, [sp], #224
  426b00:	ret
  426b04:	stp	x29, x30, [sp, #-224]!
  426b08:	mov	x29, sp
  426b0c:	str	x3, [sp, #184]
  426b10:	str	x4, [sp, #192]
  426b14:	str	x5, [sp, #200]
  426b18:	str	x6, [sp, #208]
  426b1c:	str	x7, [sp, #216]
  426b20:	str	q0, [sp, #48]
  426b24:	str	q1, [sp, #64]
  426b28:	str	q2, [sp, #80]
  426b2c:	str	q3, [sp, #96]
  426b30:	str	q4, [sp, #112]
  426b34:	str	q5, [sp, #128]
  426b38:	str	q6, [sp, #144]
  426b3c:	str	q7, [sp, #160]
  426b40:	add	x3, sp, #0xe0
  426b44:	str	x3, [sp, #16]
  426b48:	str	x3, [sp, #24]
  426b4c:	add	x3, sp, #0xb0
  426b50:	str	x3, [sp, #32]
  426b54:	mov	w3, #0xffffffd8            	// #-40
  426b58:	str	w3, [sp, #40]
  426b5c:	mov	w3, #0xffffff80            	// #-128
  426b60:	str	w3, [sp, #44]
  426b64:	add	x4, sp, #0x10
  426b68:	mov	x3, x2
  426b6c:	mov	w2, w1
  426b70:	mov	w1, #0x2                   	// #2
  426b74:	bl	426890 <ferror@plt+0x23b60>
  426b78:	ldp	x29, x30, [sp], #224
  426b7c:	ret
  426b80:	stp	x29, x30, [sp, #-224]!
  426b84:	mov	x29, sp
  426b88:	str	x3, [sp, #184]
  426b8c:	str	x4, [sp, #192]
  426b90:	str	x5, [sp, #200]
  426b94:	str	x6, [sp, #208]
  426b98:	str	x7, [sp, #216]
  426b9c:	str	q0, [sp, #48]
  426ba0:	str	q1, [sp, #64]
  426ba4:	str	q2, [sp, #80]
  426ba8:	str	q3, [sp, #96]
  426bac:	str	q4, [sp, #112]
  426bb0:	str	q5, [sp, #128]
  426bb4:	str	q6, [sp, #144]
  426bb8:	str	q7, [sp, #160]
  426bbc:	add	x3, sp, #0xe0
  426bc0:	str	x3, [sp, #16]
  426bc4:	str	x3, [sp, #24]
  426bc8:	add	x3, sp, #0xb0
  426bcc:	str	x3, [sp, #32]
  426bd0:	mov	w3, #0xffffffd8            	// #-40
  426bd4:	str	w3, [sp, #40]
  426bd8:	mov	w3, #0xffffff80            	// #-128
  426bdc:	str	w3, [sp, #44]
  426be0:	add	x4, sp, #0x10
  426be4:	mov	x3, x2
  426be8:	mov	w2, w1
  426bec:	mov	w1, #0x1                   	// #1
  426bf0:	bl	426890 <ferror@plt+0x23b60>
  426bf4:	ldp	x29, x30, [sp], #224
  426bf8:	ret
  426bfc:	stp	x29, x30, [sp, #-208]!
  426c00:	mov	x29, sp
  426c04:	str	x5, [sp, #184]
  426c08:	str	x6, [sp, #192]
  426c0c:	str	x7, [sp, #200]
  426c10:	str	q0, [sp, #48]
  426c14:	str	q1, [sp, #64]
  426c18:	str	q2, [sp, #80]
  426c1c:	str	q3, [sp, #96]
  426c20:	str	q4, [sp, #112]
  426c24:	str	q5, [sp, #128]
  426c28:	str	q6, [sp, #144]
  426c2c:	str	q7, [sp, #160]
  426c30:	add	x5, sp, #0xd0
  426c34:	str	x5, [sp, #16]
  426c38:	str	x5, [sp, #24]
  426c3c:	add	x5, sp, #0xb0
  426c40:	str	x5, [sp, #32]
  426c44:	mov	w5, #0xffffffe8            	// #-24
  426c48:	str	w5, [sp, #40]
  426c4c:	mov	w5, #0xffffff80            	// #-128
  426c50:	str	w5, [sp, #44]
  426c54:	add	x6, sp, #0x10
  426c58:	mov	x5, x4
  426c5c:	mov	w4, w3
  426c60:	mov	w3, w2
  426c64:	mov	w2, #0x0                   	// #0
  426c68:	bl	426948 <ferror@plt+0x23c18>
  426c6c:	ldp	x29, x30, [sp], #208
  426c70:	ret
  426c74:	stp	x29, x30, [sp, #-208]!
  426c78:	mov	x29, sp
  426c7c:	str	x5, [sp, #184]
  426c80:	str	x6, [sp, #192]
  426c84:	str	x7, [sp, #200]
  426c88:	str	q0, [sp, #48]
  426c8c:	str	q1, [sp, #64]
  426c90:	str	q2, [sp, #80]
  426c94:	str	q3, [sp, #96]
  426c98:	str	q4, [sp, #112]
  426c9c:	str	q5, [sp, #128]
  426ca0:	str	q6, [sp, #144]
  426ca4:	str	q7, [sp, #160]
  426ca8:	add	x5, sp, #0xd0
  426cac:	str	x5, [sp, #16]
  426cb0:	str	x5, [sp, #24]
  426cb4:	add	x5, sp, #0xb0
  426cb8:	str	x5, [sp, #32]
  426cbc:	mov	w5, #0xffffffe8            	// #-24
  426cc0:	str	w5, [sp, #40]
  426cc4:	mov	w5, #0xffffff80            	// #-128
  426cc8:	str	w5, [sp, #44]
  426ccc:	add	x6, sp, #0x10
  426cd0:	mov	x5, x4
  426cd4:	mov	w4, w3
  426cd8:	mov	w3, w2
  426cdc:	mov	w2, w1
  426ce0:	mov	w1, #0x0                   	// #0
  426ce4:	bl	426948 <ferror@plt+0x23c18>
  426ce8:	ldp	x29, x30, [sp], #208
  426cec:	ret
  426cf0:	stp	x29, x30, [sp, #-208]!
  426cf4:	mov	x29, sp
  426cf8:	str	x5, [sp, #184]
  426cfc:	str	x6, [sp, #192]
  426d00:	str	x7, [sp, #200]
  426d04:	str	q0, [sp, #48]
  426d08:	str	q1, [sp, #64]
  426d0c:	str	q2, [sp, #80]
  426d10:	str	q3, [sp, #96]
  426d14:	str	q4, [sp, #112]
  426d18:	str	q5, [sp, #128]
  426d1c:	str	q6, [sp, #144]
  426d20:	str	q7, [sp, #160]
  426d24:	add	x5, sp, #0xd0
  426d28:	str	x5, [sp, #16]
  426d2c:	str	x5, [sp, #24]
  426d30:	add	x5, sp, #0xb0
  426d34:	str	x5, [sp, #32]
  426d38:	mov	w5, #0xffffffe8            	// #-24
  426d3c:	str	w5, [sp, #40]
  426d40:	mov	w5, #0xffffff80            	// #-128
  426d44:	str	w5, [sp, #44]
  426d48:	add	x6, sp, #0x10
  426d4c:	mov	x5, x4
  426d50:	mov	w4, w3
  426d54:	mov	w3, w2
  426d58:	mov	w2, w1
  426d5c:	mov	w1, #0x2                   	// #2
  426d60:	bl	426948 <ferror@plt+0x23c18>
  426d64:	ldp	x29, x30, [sp], #208
  426d68:	ret
  426d6c:	stp	x29, x30, [sp, #-208]!
  426d70:	mov	x29, sp
  426d74:	str	x5, [sp, #184]
  426d78:	str	x6, [sp, #192]
  426d7c:	str	x7, [sp, #200]
  426d80:	str	q0, [sp, #48]
  426d84:	str	q1, [sp, #64]
  426d88:	str	q2, [sp, #80]
  426d8c:	str	q3, [sp, #96]
  426d90:	str	q4, [sp, #112]
  426d94:	str	q5, [sp, #128]
  426d98:	str	q6, [sp, #144]
  426d9c:	str	q7, [sp, #160]
  426da0:	add	x5, sp, #0xd0
  426da4:	str	x5, [sp, #16]
  426da8:	str	x5, [sp, #24]
  426dac:	add	x5, sp, #0xb0
  426db0:	str	x5, [sp, #32]
  426db4:	mov	w5, #0xffffffe8            	// #-24
  426db8:	str	w5, [sp, #40]
  426dbc:	mov	w5, #0xffffff80            	// #-128
  426dc0:	str	w5, [sp, #44]
  426dc4:	add	x6, sp, #0x10
  426dc8:	mov	x5, x4
  426dcc:	mov	w4, w3
  426dd0:	mov	w3, w2
  426dd4:	mov	w2, w1
  426dd8:	mov	w1, #0x1                   	// #1
  426ddc:	bl	426948 <ferror@plt+0x23c18>
  426de0:	ldp	x29, x30, [sp], #208
  426de4:	ret
  426de8:	stp	x29, x30, [sp, #-416]!
  426dec:	mov	x29, sp
  426df0:	stp	x19, x20, [sp, #16]
  426df4:	str	x21, [sp, #32]
  426df8:	mov	x19, x0
  426dfc:	mov	w20, w1
  426e00:	mov	x21, x3
  426e04:	str	x4, [sp, #384]
  426e08:	str	x5, [sp, #392]
  426e0c:	str	x6, [sp, #400]
  426e10:	str	x7, [sp, #408]
  426e14:	str	q0, [sp, #256]
  426e18:	str	q1, [sp, #272]
  426e1c:	str	q2, [sp, #288]
  426e20:	str	q3, [sp, #304]
  426e24:	str	q4, [sp, #320]
  426e28:	str	q5, [sp, #336]
  426e2c:	str	q6, [sp, #352]
  426e30:	str	q7, [sp, #368]
  426e34:	add	x0, sp, #0x1a0
  426e38:	str	x0, [sp, #224]
  426e3c:	str	x0, [sp, #232]
  426e40:	add	x0, sp, #0x180
  426e44:	str	x0, [sp, #240]
  426e48:	mov	w0, #0xffffffe0            	// #-32
  426e4c:	str	w0, [sp, #248]
  426e50:	mov	w0, #0xffffff80            	// #-128
  426e54:	str	w0, [sp, #252]
  426e58:	mov	x3, #0x0                   	// #0
  426e5c:	ldr	x1, [x19, #40]
  426e60:	add	x0, sp, #0x38
  426e64:	bl	434390 <ferror@plt+0x31660>
  426e68:	add	x5, sp, #0xe0
  426e6c:	mov	x4, x21
  426e70:	add	x3, sp, #0x38
  426e74:	mov	w2, #0x0                   	// #0
  426e78:	mov	w1, w20
  426e7c:	mov	x0, x19
  426e80:	bl	426808 <ferror@plt+0x23ad8>
  426e84:	mov	w19, w0
  426e88:	add	x0, sp, #0x38
  426e8c:	bl	434120 <ferror@plt+0x313f0>
  426e90:	mov	w0, w19
  426e94:	ldp	x19, x20, [sp, #16]
  426e98:	ldr	x21, [sp, #32]
  426e9c:	ldp	x29, x30, [sp], #416
  426ea0:	ret
  426ea4:	stp	x29, x30, [sp, #-208]!
  426ea8:	mov	x29, sp
  426eac:	str	x4, [sp, #176]
  426eb0:	str	x5, [sp, #184]
  426eb4:	str	x6, [sp, #192]
  426eb8:	str	x7, [sp, #200]
  426ebc:	str	q0, [sp, #48]
  426ec0:	str	q1, [sp, #64]
  426ec4:	str	q2, [sp, #80]
  426ec8:	str	q3, [sp, #96]
  426ecc:	str	q4, [sp, #112]
  426ed0:	str	q5, [sp, #128]
  426ed4:	str	q6, [sp, #144]
  426ed8:	str	q7, [sp, #160]
  426edc:	add	x4, sp, #0xd0
  426ee0:	str	x4, [sp, #16]
  426ee4:	str	x4, [sp, #24]
  426ee8:	add	x4, sp, #0xb0
  426eec:	str	x4, [sp, #32]
  426ef0:	mov	w4, #0xffffffe0            	// #-32
  426ef4:	str	w4, [sp, #40]
  426ef8:	mov	w4, #0xffffff80            	// #-128
  426efc:	str	w4, [sp, #44]
  426f00:	add	x5, sp, #0x10
  426f04:	mov	x4, x3
  426f08:	mov	x3, x2
  426f0c:	mov	w2, #0x0                   	// #0
  426f10:	bl	426808 <ferror@plt+0x23ad8>
  426f14:	ldp	x29, x30, [sp], #208
  426f18:	ret
  426f1c:	stp	x29, x30, [sp, #-48]!
  426f20:	mov	x29, sp
  426f24:	stp	x19, x20, [sp, #16]
  426f28:	str	x21, [sp, #32]
  426f2c:	mov	x19, x0
  426f30:	mov	w20, w1
  426f34:	mov	x1, x2
  426f38:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  426f3c:	add	x0, x0, #0x848
  426f40:	bl	402a80 <dgettext@plt>
  426f44:	mov	x21, x0
  426f48:	bl	402c40 <__errno_location@plt>
  426f4c:	ldr	w0, [x0]
  426f50:	bl	454e98 <_obstack_memory_used@@Base+0xaf8>
  426f54:	mov	x4, x0
  426f58:	mov	x3, x21
  426f5c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  426f60:	add	x2, x2, #0x870
  426f64:	mov	w1, w20
  426f68:	mov	x0, x19
  426f6c:	bl	426a10 <ferror@plt+0x23ce0>
  426f70:	ldp	x19, x20, [sp, #16]
  426f74:	ldr	x21, [sp, #32]
  426f78:	ldp	x29, x30, [sp], #48
  426f7c:	ret
  426f80:	stp	x29, x30, [sp, #-48]!
  426f84:	mov	x29, sp
  426f88:	stp	x19, x20, [sp, #16]
  426f8c:	stp	x21, x22, [sp, #32]
  426f90:	mov	x20, x0
  426f94:	mov	w21, w1
  426f98:	mov	x19, x2
  426f9c:	mov	w22, w3
  426fa0:	ldrb	w0, [x2]
  426fa4:	cbz	w0, 426fe4 <ferror@plt+0x242b4>
  426fa8:	bl	402c40 <__errno_location@plt>
  426fac:	ldr	w0, [x0]
  426fb0:	bl	454e98 <_obstack_memory_used@@Base+0xaf8>
  426fb4:	mov	x5, x0
  426fb8:	mov	x4, x19
  426fbc:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x23c60>
  426fc0:	add	x3, x3, #0x870
  426fc4:	mov	w2, w22
  426fc8:	mov	w1, w21
  426fcc:	mov	x0, x20
  426fd0:	bl	426de8 <ferror@plt+0x240b8>
  426fd4:	ldp	x19, x20, [sp, #16]
  426fd8:	ldp	x21, x22, [sp, #32]
  426fdc:	ldp	x29, x30, [sp], #48
  426fe0:	ret
  426fe4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  426fe8:	add	x1, x1, #0x9c0
  426fec:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  426ff0:	add	x0, x0, #0x848
  426ff4:	bl	402a80 <dgettext@plt>
  426ff8:	mov	x19, x0
  426ffc:	b	426fa8 <ferror@plt+0x24278>
  427000:	mov	x6, x0
  427004:	cmp	x2, #0x2
  427008:	b.eq	427064 <ferror@plt+0x24334>  // b.none
  42700c:	ldrb	w12, [x6, #1163]
  427010:	cmp	x2, #0x0
  427014:	cset	w3, ne  // ne = any
  427018:	cmp	w12, #0x0
  42701c:	csel	w3, w3, wzr, ne  // ne = any
  427020:	cbnz	w3, 427110 <ferror@plt+0x243e0>
  427024:	sub	x5, x2, #0x1
  427028:	cbz	x2, 42757c <ferror@plt+0x2484c>
  42702c:	stp	x29, x30, [sp, #-16]!
  427030:	mov	x29, sp
  427034:	mov	x4, x1
  427038:	mov	x13, #0x0                   	// #0
  42703c:	mov	x16, #0x0                   	// #0
  427040:	mov	x15, #0x0                   	// #0
  427044:	mov	x7, #0x0                   	// #0
  427048:	mov	x9, #0x0                   	// #0
  42704c:	mov	x8, #0x0                   	// #0
  427050:	mov	x11, #0x0                   	// #0
  427054:	mov	x10, #0x0                   	// #0
  427058:	mov	x0, #0x0                   	// #0
  42705c:	mov	x18, #0x0                   	// #0
  427060:	b	427268 <ferror@plt+0x24538>
  427064:	ldrb	w3, [x1]
  427068:	and	w0, w3, #0xffffffdf
  42706c:	and	w0, w0, #0xff
  427070:	cmp	w0, #0x44
  427074:	b.ne	427558 <ferror@plt+0x24828>  // b.any
  427078:	ldrb	w0, [x1, #1]
  42707c:	cmp	w0, #0x64
  427080:	b.eq	427100 <ferror@plt+0x243d0>  // b.none
  427084:	b.hi	4270c0 <ferror@plt+0x24390>  // b.pmore
  427088:	cmp	w0, #0x46
  42708c:	b.eq	4270f0 <ferror@plt+0x243c0>  // b.none
  427090:	cmp	w0, #0x4c
  427094:	b.ne	4270a8 <ferror@plt+0x24378>  // b.any
  427098:	cmp	w3, #0x44
  42709c:	mov	w0, #0x4040                	// #16448
  4270a0:	csel	w0, w0, wzr, eq  // eq = none
  4270a4:	ret
  4270a8:	cmp	w0, #0x44
  4270ac:	b.ne	42700c <ferror@plt+0x242dc>  // b.any
  4270b0:	cmp	w3, #0x44
  4270b4:	mov	w0, #0x4020                	// #16416
  4270b8:	csel	w0, w0, wzr, eq  // eq = none
  4270bc:	ret
  4270c0:	cmp	w0, #0x66
  4270c4:	b.eq	4270e0 <ferror@plt+0x243b0>  // b.none
  4270c8:	cmp	w0, #0x6c
  4270cc:	b.ne	42700c <ferror@plt+0x242dc>  // b.any
  4270d0:	cmp	w3, #0x44
  4270d4:	mov	w0, #0x4040                	// #16448
  4270d8:	csel	w0, w0, wzr, ne  // ne = any
  4270dc:	ret
  4270e0:	cmp	w3, #0x44
  4270e4:	mov	w0, #0x4010                	// #16400
  4270e8:	csel	w0, w0, wzr, ne  // ne = any
  4270ec:	ret
  4270f0:	cmp	w3, #0x44
  4270f4:	mov	w0, #0x4010                	// #16400
  4270f8:	csel	w0, w0, wzr, eq  // eq = none
  4270fc:	ret
  427100:	cmp	w3, #0x44
  427104:	mov	w0, #0x4020                	// #16416
  427108:	csel	w0, w0, wzr, ne  // ne = any
  42710c:	ret
  427110:	sub	x4, x2, #0x1
  427114:	ldrb	w0, [x1, x4]
  427118:	cmp	w0, #0x6b
  42711c:	b.eq	4271c4 <ferror@plt+0x24494>  // b.none
  427120:	cmp	w0, #0x6b
  427124:	b.hi	4271b4 <ferror@plt+0x24484>  // b.pmore
  427128:	cmp	w0, #0x4b
  42712c:	b.eq	4271cc <ferror@plt+0x2449c>  // b.none
  427130:	mov	x3, #0x100000              	// #1048576
  427134:	cmp	w0, #0x52
  427138:	b.ne	4271bc <ferror@plt+0x2448c>  // b.any
  42713c:	cmp	x2, #0x1
  427140:	b.eq	4271dc <ferror@plt+0x244ac>  // b.none
  427144:	ldrb	w0, [x1]
  427148:	and	w0, w0, #0xffffffdf
  42714c:	and	w0, w0, #0xff
  427150:	cmp	w0, #0x55
  427154:	b.ne	42716c <ferror@plt+0x2443c>  // b.any
  427158:	orr	x3, x3, #0x1000
  42715c:	cmp	x4, #0x1
  427160:	b.eq	4271e4 <ferror@plt+0x244b4>  // b.none
  427164:	sub	x4, x2, #0x2
  427168:	add	x1, x1, #0x1
  42716c:	ldrb	w0, [x1]
  427170:	cmp	w0, #0x68
  427174:	b.eq	42722c <ferror@plt+0x244fc>  // b.none
  427178:	b.hi	4271f4 <ferror@plt+0x244c4>  // b.pmore
  42717c:	cmp	w0, #0x48
  427180:	b.eq	42722c <ferror@plt+0x244fc>  // b.none
  427184:	cmp	w0, #0x4c
  427188:	b.ne	4271ec <ferror@plt+0x244bc>  // b.any
  42718c:	cmp	x4, #0x1
  427190:	b.eq	427244 <ferror@plt+0x24514>  // b.none
  427194:	mov	w0, #0x0                   	// #0
  427198:	cmp	x4, #0x2
  42719c:	b.ne	4275b8 <ferror@plt+0x24888>  // b.any
  4271a0:	ldrb	w1, [x1, #1]
  4271a4:	orr	x0, x3, #0x40
  4271a8:	cmp	w1, #0x4c
  4271ac:	csel	w0, w0, wzr, eq  // eq = none
  4271b0:	ret
  4271b4:	cmp	w0, #0x72
  4271b8:	b.eq	4271d4 <ferror@plt+0x244a4>  // b.none
  4271bc:	sub	x5, x2, #0x1
  4271c0:	b	42702c <ferror@plt+0x242fc>
  4271c4:	mov	x3, #0x200000              	// #2097152
  4271c8:	b	42713c <ferror@plt+0x2440c>
  4271cc:	mov	x3, #0x200000              	// #2097152
  4271d0:	b	42713c <ferror@plt+0x2440c>
  4271d4:	mov	x3, #0x100000              	// #1048576
  4271d8:	b	42713c <ferror@plt+0x2440c>
  4271dc:	mov	w0, w3
  4271e0:	ret
  4271e4:	mov	w0, w3
  4271e8:	ret
  4271ec:	mov	w0, #0x0                   	// #0
  4271f0:	ret
  4271f4:	cmp	w0, #0x6c
  4271f8:	b.ne	427224 <ferror@plt+0x244f4>  // b.any
  4271fc:	cmp	x4, #0x1
  427200:	b.eq	42723c <ferror@plt+0x2450c>  // b.none
  427204:	mov	w0, #0x0                   	// #0
  427208:	cmp	x4, #0x2
  42720c:	b.ne	4275b8 <ferror@plt+0x24888>  // b.any
  427210:	ldrb	w1, [x1, #1]
  427214:	orr	x0, x3, #0x40
  427218:	cmp	w1, #0x6c
  42721c:	csel	w0, w0, wzr, eq  // eq = none
  427220:	ret
  427224:	mov	w0, #0x0                   	// #0
  427228:	ret
  42722c:	orr	x0, x3, #0x10
  427230:	cmp	x4, #0x1
  427234:	csel	w0, w0, wzr, eq  // eq = none
  427238:	ret
  42723c:	orr	w0, w3, #0x20
  427240:	ret
  427244:	orr	w0, w3, #0x20
  427248:	ret
  42724c:	cmp	w3, #0x44
  427250:	b.ne	4272ac <ferror@plt+0x2457c>  // b.any
  427254:	add	x10, x10, #0x1
  427258:	mov	x3, x5
  42725c:	add	x4, x4, #0x1
  427260:	sub	x5, x3, #0x1
  427264:	cbz	x3, 4273d4 <ferror@plt+0x246a4>
  427268:	ldrb	w3, [x4]
  42726c:	cmp	w3, #0x64
  427270:	b.eq	427254 <ferror@plt+0x24524>  // b.none
  427274:	b.hi	4272d8 <ferror@plt+0x245a8>  // b.pmore
  427278:	cmp	w3, #0x4c
  42727c:	b.eq	4273bc <ferror@plt+0x2468c>  // b.none
  427280:	b.hi	4272b4 <ferror@plt+0x24584>  // b.pmore
  427284:	cmp	w3, #0x46
  427288:	b.eq	427320 <ferror@plt+0x245f0>  // b.none
  42728c:	b.ls	42724c <ferror@plt+0x2451c>  // b.plast
  427290:	sub	w3, w3, #0x49
  427294:	and	w3, w3, #0xff
  427298:	cmp	w3, #0x1
  42729c:	b.hi	4274f8 <ferror@plt+0x247c8>  // b.pmore
  4272a0:	add	x7, x7, #0x1
  4272a4:	mov	x3, x5
  4272a8:	b	42725c <ferror@plt+0x2452c>
  4272ac:	mov	w0, #0x0                   	// #0
  4272b0:	b	427318 <ferror@plt+0x245e8>
  4272b4:	cmp	w3, #0x51
  4272b8:	b.eq	4273c8 <ferror@plt+0x24698>  // b.none
  4272bc:	cmp	w3, #0x57
  4272c0:	b.ne	4272d0 <ferror@plt+0x245a0>  // b.any
  4272c4:	add	x8, x8, #0x1
  4272c8:	mov	x3, x5
  4272cc:	b	42725c <ferror@plt+0x2452c>
  4272d0:	mov	w0, #0x0                   	// #0
  4272d4:	b	427318 <ferror@plt+0x245e8>
  4272d8:	cmp	w3, #0x6c
  4272dc:	b.eq	4273bc <ferror@plt+0x2468c>  // b.none
  4272e0:	b.ls	4272fc <ferror@plt+0x245cc>  // b.plast
  4272e4:	cmp	w3, #0x71
  4272e8:	b.eq	4273c8 <ferror@plt+0x24698>  // b.none
  4272ec:	cmp	w3, #0x77
  4272f0:	b.eq	4272c4 <ferror@plt+0x24594>  // b.none
  4272f4:	mov	w0, #0x0                   	// #0
  4272f8:	b	427318 <ferror@plt+0x245e8>
  4272fc:	cmp	w3, #0x66
  427300:	b.eq	427320 <ferror@plt+0x245f0>  // b.none
  427304:	sub	w3, w3, #0x69
  427308:	and	w3, w3, #0xff
  42730c:	cmp	w3, #0x1
  427310:	b.ls	4272a0 <ferror@plt+0x24570>  // b.plast
  427314:	mov	w0, #0x0                   	// #0
  427318:	ldp	x29, x30, [sp], #16
  42731c:	ret
  427320:	add	x14, x0, #0x1
  427324:	cbz	x5, 4273d8 <ferror@plt+0x246a8>
  427328:	ldrb	w3, [x6, #1120]
  42732c:	cbnz	w3, 427348 <ferror@plt+0x24618>
  427330:	ldrb	w17, [x4, #1]
  427334:	sub	w3, w17, #0x31
  427338:	and	w3, w3, #0xff
  42733c:	cmp	x13, #0x0
  427340:	ccmp	w3, #0x8, #0x2, eq  // eq = none
  427344:	b.ls	427358 <ferror@plt+0x24628>  // b.plast
  427348:	add	x4, x4, #0x1
  42734c:	sub	x5, x5, #0x1
  427350:	mov	x0, x14
  427354:	b	427268 <ferror@plt+0x24538>
  427358:	mov	x13, x18
  42735c:	add	x13, x13, x13, lsl #2
  427360:	sub	w3, w17, #0x30
  427364:	sxtw	x3, w3
  427368:	add	x13, x3, x13, lsl #1
  42736c:	mov	x3, x5
  427370:	mov	x30, x4
  427374:	add	x4, x4, #0x1
  427378:	subs	x5, x5, #0x1
  42737c:	b.eq	4273a0 <ferror@plt+0x24670>  // b.none
  427380:	ldrb	w17, [x4, #1]
  427384:	sub	w14, w17, #0x30
  427388:	and	w14, w14, #0xff
  42738c:	cmp	x13, #0xef
  427390:	ccmp	w14, #0x9, #0x2, ls  // ls = plast
  427394:	b.ls	42735c <ferror@plt+0x2462c>  // b.plast
  427398:	cmp	w17, #0x78
  42739c:	b.eq	4273ac <ferror@plt+0x2467c>  // b.none
  4273a0:	add	x15, x15, #0x1
  4273a4:	mov	x3, x5
  4273a8:	b	42725c <ferror@plt+0x2452c>
  4273ac:	add	x16, x16, #0x1
  4273b0:	sub	x3, x3, #0x2
  4273b4:	add	x4, x30, #0x2
  4273b8:	b	42725c <ferror@plt+0x2452c>
  4273bc:	add	x11, x11, #0x1
  4273c0:	mov	x3, x5
  4273c4:	b	42725c <ferror@plt+0x2452c>
  4273c8:	add	x9, x9, #0x1
  4273cc:	mov	x3, x5
  4273d0:	b	42725c <ferror@plt+0x2452c>
  4273d4:	mov	x14, x0
  4273d8:	add	x3, x11, x8
  4273dc:	add	x0, x14, x10
  4273e0:	add	x3, x3, x0
  4273e4:	add	x0, x9, x15
  4273e8:	add	x3, x3, x0
  4273ec:	add	x3, x3, x16
  4273f0:	cmp	x13, #0xf0
  4273f4:	ccmp	x7, #0x1, #0x2, ls  // ls = plast
  4273f8:	mov	w0, #0x0                   	// #0
  4273fc:	ccmp	x3, #0x1, #0x2, ls  // ls = plast
  427400:	b.hi	427318 <ferror@plt+0x245e8>  // b.pmore
  427404:	cmp	x16, #0x0
  427408:	cset	w3, ne  // ne = any
  42740c:	sub	x0, x13, #0x20
  427410:	tst	x0, #0xffffffffffffffdf
  427414:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  427418:	b.eq	427484 <ferror@plt+0x24754>  // b.none
  42741c:	mov	w0, #0x0                   	// #0
  427420:	cmp	x15, #0x0
  427424:	cset	w4, ne  // ne = any
  427428:	cmp	x13, #0x80
  42742c:	b.ne	427318 <ferror@plt+0x245e8>  // b.any
  427430:	cmp	x13, #0x60
  427434:	mov	w0, #0x0                   	// #0
  427438:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  42743c:	b.ne	427318 <ferror@plt+0x245e8>  // b.any
  427440:	cbz	x7, 427510 <ferror@plt+0x247e0>
  427444:	cbz	w12, 427318 <ferror@plt+0x245e8>
  427448:	ldrb	w0, [x6, #1120]
  42744c:	cbz	w0, 4274c4 <ferror@plt+0x24794>
  427450:	ldr	w0, [x6, #1116]
  427454:	cmp	w0, #0xe
  427458:	b.le	4274cc <ferror@plt+0x2479c>
  42745c:	ldrb	w5, [x1]
  427460:	mov	w0, #0x2000                	// #8192
  427464:	cmp	w5, #0x69
  427468:	b.ne	427524 <ferror@plt+0x247f4>  // b.any
  42746c:	cmp	x2, #0x1
  427470:	b.eq	427500 <ferror@plt+0x247d0>  // b.none
  427474:	cmp	x2, #0x2
  427478:	b.eq	4274a8 <ferror@plt+0x24778>  // b.none
  42747c:	mov	w0, #0x2000                	// #8192
  427480:	b	427524 <ferror@plt+0x247f4>
  427484:	cmp	x15, #0x0
  427488:	cset	w4, ne  // ne = any
  42748c:	cmp	w4, #0x0
  427490:	ccmp	x13, #0x10, #0x4, ne  // ne = any
  427494:	b.eq	427430 <ferror@plt+0x24700>  // b.none
  427498:	mov	w0, #0x0                   	// #0
  42749c:	tst	x13, #0x1f
  4274a0:	b.ne	427318 <ferror@plt+0x245e8>  // b.any
  4274a4:	b	427430 <ferror@plt+0x24700>
  4274a8:	ldrb	w0, [x1, #1]
  4274ac:	cmp	w0, #0x6c
  4274b0:	mov	w1, #0x66                  	// #102
  4274b4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4274b8:	b.eq	427508 <ferror@plt+0x247d8>  // b.none
  4274bc:	mov	w0, #0x2000                	// #8192
  4274c0:	b	427524 <ferror@plt+0x247f4>
  4274c4:	mov	w0, #0x2000                	// #8192
  4274c8:	b	427524 <ferror@plt+0x247f4>
  4274cc:	mov	w0, #0x2000                	// #8192
  4274d0:	b	427524 <ferror@plt+0x247f4>
  4274d4:	lsl	w1, w13, #24
  4274d8:	orr	w1, w1, #0x800000
  4274dc:	cmp	w3, #0x0
  4274e0:	mov	w2, #0x8000                	// #32768
  4274e4:	csel	w1, w1, w2, ne  // ne = any
  4274e8:	b	4274f0 <ferror@plt+0x247c0>
  4274ec:	mov	w1, #0x20000               	// #131072
  4274f0:	orr	w0, w0, w1
  4274f4:	b	427318 <ferror@plt+0x245e8>
  4274f8:	mov	w0, #0x0                   	// #0
  4274fc:	b	427318 <ferror@plt+0x245e8>
  427500:	mov	w0, #0x0                   	// #0
  427504:	b	427318 <ferror@plt+0x245e8>
  427508:	mov	w0, #0x0                   	// #0
  42750c:	b	427318 <ferror@plt+0x245e8>
  427510:	orr	x0, x9, x8
  427514:	cmp	x0, #0x0
  427518:	mov	w0, #0x0                   	// #0
  42751c:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  427520:	b.eq	427318 <ferror@plt+0x245e8>  // b.none
  427524:	mov	w1, #0x10                  	// #16
  427528:	cbnz	x14, 4274f0 <ferror@plt+0x247c0>
  42752c:	mov	w1, #0x20                  	// #32
  427530:	cbnz	x10, 4274f0 <ferror@plt+0x247c0>
  427534:	mov	w1, #0x40                  	// #64
  427538:	cbnz	x11, 4274f0 <ferror@plt+0x247c0>
  42753c:	mov	w1, #0x10000               	// #65536
  427540:	cbnz	x8, 4274f0 <ferror@plt+0x247c0>
  427544:	cbnz	x9, 4274ec <ferror@plt+0x247bc>
  427548:	cbz	w4, 4274d4 <ferror@plt+0x247a4>
  42754c:	lsl	w1, w13, #24
  427550:	orr	w1, w1, #0x400000
  427554:	b	4274f0 <ferror@plt+0x247c0>
  427558:	ldrb	w12, [x6, #1163]
  42755c:	mov	x5, #0x1                   	// #1
  427560:	cbz	w12, 42702c <ferror@plt+0x242fc>
  427564:	sub	x4, x2, #0x1
  427568:	ldrb	w0, [x1, x4]
  42756c:	cmp	w0, #0x6b
  427570:	b.ne	427120 <ferror@plt+0x243f0>  // b.any
  427574:	mov	x3, #0x200000              	// #2097152
  427578:	b	427144 <ferror@plt+0x24414>
  42757c:	mov	x13, x2
  427580:	mov	x7, x2
  427584:	mov	x9, x2
  427588:	mov	x8, x2
  42758c:	mov	x11, x2
  427590:	mov	x10, x2
  427594:	mov	x14, x2
  427598:	cmp	x2, #0x0
  42759c:	cset	w4, ne  // ne = any
  4275a0:	cmp	w4, #0x0
  4275a4:	ccmp	x2, #0x10, #0x4, ne  // ne = any
  4275a8:	b.eq	4275bc <ferror@plt+0x2488c>  // b.none
  4275ac:	mov	w0, #0x0                   	// #0
  4275b0:	tst	x2, #0x1f
  4275b4:	b.eq	4275bc <ferror@plt+0x2488c>  // b.none
  4275b8:	ret
  4275bc:	cmp	x13, #0x60
  4275c0:	mov	w0, #0x0                   	// #0
  4275c4:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  4275c8:	b.ne	4275b8 <ferror@plt+0x24888>  // b.any
  4275cc:	cbz	x7, 427670 <ferror@plt+0x24940>
  4275d0:	cbz	w12, 4275b8 <ferror@plt+0x24888>
  4275d4:	ldrb	w0, [x6, #1120]
  4275d8:	cbz	w0, 42762c <ferror@plt+0x248fc>
  4275dc:	ldr	w0, [x6, #1116]
  4275e0:	cmp	w0, #0xe
  4275e4:	b.le	427634 <ferror@plt+0x24904>
  4275e8:	ldrb	w5, [x1]
  4275ec:	mov	w0, #0x2000                	// #8192
  4275f0:	cmp	w5, #0x69
  4275f4:	b.ne	427684 <ferror@plt+0x24954>  // b.any
  4275f8:	cmp	x2, #0x1
  4275fc:	b.eq	427660 <ferror@plt+0x24930>  // b.none
  427600:	cmp	x2, #0x2
  427604:	b.eq	427610 <ferror@plt+0x248e0>  // b.none
  427608:	mov	w0, #0x2000                	// #8192
  42760c:	b	427684 <ferror@plt+0x24954>
  427610:	ldrb	w0, [x1, #1]
  427614:	cmp	w0, #0x6c
  427618:	mov	w1, #0x66                  	// #102
  42761c:	ccmp	w0, w1, #0x4, ne  // ne = any
  427620:	b.eq	427668 <ferror@plt+0x24938>  // b.none
  427624:	mov	w0, #0x2000                	// #8192
  427628:	b	427684 <ferror@plt+0x24954>
  42762c:	mov	w0, #0x2000                	// #8192
  427630:	b	427684 <ferror@plt+0x24954>
  427634:	mov	w0, #0x2000                	// #8192
  427638:	b	427684 <ferror@plt+0x24954>
  42763c:	lsl	w1, w13, #24
  427640:	orr	w1, w1, #0x800000
  427644:	cmp	w3, #0x0
  427648:	mov	w2, #0x8000                	// #32768
  42764c:	csel	w1, w1, w2, ne  // ne = any
  427650:	b	427658 <ferror@plt+0x24928>
  427654:	mov	w1, #0x20000               	// #131072
  427658:	orr	w0, w0, w1
  42765c:	ret
  427660:	mov	w0, #0x0                   	// #0
  427664:	ret
  427668:	mov	w0, #0x0                   	// #0
  42766c:	ret
  427670:	orr	x0, x9, x8
  427674:	cmp	x0, #0x0
  427678:	mov	w0, #0x0                   	// #0
  42767c:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  427680:	b.eq	4275b8 <ferror@plt+0x24888>  // b.none
  427684:	mov	w1, #0x10                  	// #16
  427688:	cbnz	x14, 427658 <ferror@plt+0x24928>
  42768c:	mov	w1, #0x20                  	// #32
  427690:	cbnz	x10, 427658 <ferror@plt+0x24928>
  427694:	mov	w1, #0x40                  	// #64
  427698:	cbnz	x11, 427658 <ferror@plt+0x24928>
  42769c:	mov	w1, #0x10000               	// #65536
  4276a0:	cbnz	x8, 427658 <ferror@plt+0x24928>
  4276a4:	cbnz	x9, 427654 <ferror@plt+0x24924>
  4276a8:	cbz	w4, 42763c <ferror@plt+0x2490c>
  4276ac:	lsl	w1, w13, #24
  4276b0:	orr	w1, w1, #0x400000
  4276b4:	b	427658 <ferror@plt+0x24928>
  4276b8:	mov	x10, x0
  4276bc:	cbz	x2, 4277e0 <ferror@plt+0x24ab0>
  4276c0:	add	x4, x1, x2
  4276c4:	mov	x9, x1
  4276c8:	mov	x11, #0x0                   	// #0
  4276cc:	mov	x8, #0x0                   	// #0
  4276d0:	mov	x12, #0x0                   	// #0
  4276d4:	mov	x6, #0x1                   	// #1
  4276d8:	b	4276ec <ferror@plt+0x249bc>
  4276dc:	add	x12, x12, #0x1
  4276e0:	sub	x4, x4, #0x1
  4276e4:	cmp	x9, x4
  4276e8:	b.eq	42774c <ferror@plt+0x24a1c>  // b.none
  4276ec:	ldurb	w5, [x4, #-1]
  4276f0:	sub	w3, w5, #0x49
  4276f4:	and	w3, w3, #0xff
  4276f8:	cmp	w3, #0x2c
  4276fc:	b.hi	42780c <ferror@plt+0x24adc>  // b.pmore
  427700:	lsl	x3, x6, x3
  427704:	tst	x3, #0x300000003
  427708:	b.ne	427724 <ferror@plt+0x249f4>  // b.any
  42770c:	tst	x3, #0x800000008
  427710:	b.ne	42772c <ferror@plt+0x249fc>  // b.any
  427714:	tst	x3, #0x100000001000
  427718:	b.ne	4276dc <ferror@plt+0x249ac>  // b.any
  42771c:	mov	w0, #0x0                   	// #0
  427720:	b	427810 <ferror@plt+0x24ae0>
  427724:	add	x11, x11, #0x1
  427728:	b	4276e0 <ferror@plt+0x249b0>
  42772c:	add	x8, x8, #0x1
  427730:	cmp	x8, #0x2
  427734:	b.ne	4276e0 <ferror@plt+0x249b0>  // b.any
  427738:	ldrb	w0, [x4]
  42773c:	cmp	w0, w5
  427740:	b.eq	4276e0 <ferror@plt+0x249b0>  // b.none
  427744:	mov	w0, #0x0                   	// #0
  427748:	b	427810 <ferror@plt+0x24ae0>
  42774c:	cmp	x8, #0x2
  427750:	ccmp	x12, #0x1, #0x2, ls  // ls = plast
  427754:	mov	w0, #0x0                   	// #0
  427758:	ccmp	x11, #0x1, #0x2, ls  // ls = plast
  42775c:	b.hi	427810 <ferror@plt+0x24ae0>  // b.pmore
  427760:	cbz	x11, 4277b8 <ferror@plt+0x24a88>
  427764:	ldrb	w3, [x10, #1163]
  427768:	cbz	w3, 427810 <ferror@plt+0x24ae0>
  42776c:	ldrb	w0, [x10, #1120]
  427770:	cbz	w0, 4277d0 <ferror@plt+0x24aa0>
  427774:	ldr	w0, [x10, #1116]
  427778:	cmp	w0, #0xe
  42777c:	b.le	4277d8 <ferror@plt+0x24aa8>
  427780:	ldrb	w0, [x1]
  427784:	mov	w3, #0x2000                	// #8192
  427788:	cmp	w0, #0x69
  42778c:	b.ne	4277bc <ferror@plt+0x24a8c>  // b.any
  427790:	mov	w0, #0x0                   	// #0
  427794:	cmp	x2, #0x1
  427798:	b.eq	427810 <ferror@plt+0x24ae0>  // b.none
  42779c:	cmp	x2, #0x2
  4277a0:	b.ne	4277bc <ferror@plt+0x24a8c>  // b.any
  4277a4:	ldrb	w0, [x1, #1]
  4277a8:	cmp	w0, #0x6c
  4277ac:	b.ne	4277bc <ferror@plt+0x24a8c>  // b.any
  4277b0:	mov	w0, #0x0                   	// #0
  4277b4:	b	427810 <ferror@plt+0x24ae0>
  4277b8:	mov	w3, #0x0                   	// #0
  4277bc:	mov	x2, x8
  4277c0:	cmp	x12, #0x0
  4277c4:	mov	w0, #0x1000                	// #4096
  4277c8:	csel	w0, w0, wzr, ne  // ne = any
  4277cc:	b	4277e8 <ferror@plt+0x24ab8>
  4277d0:	mov	w3, #0x2000                	// #8192
  4277d4:	b	4277bc <ferror@plt+0x24a8c>
  4277d8:	mov	w3, #0x2000                	// #8192
  4277dc:	b	4277bc <ferror@plt+0x24a8c>
  4277e0:	mov	w3, #0x0                   	// #0
  4277e4:	mov	w0, #0x0                   	// #0
  4277e8:	orr	w0, w0, w3
  4277ec:	mov	w1, #0x10                  	// #16
  4277f0:	cbz	x2, 427804 <ferror@plt+0x24ad4>
  4277f4:	cmp	x2, #0x1
  4277f8:	mov	w1, #0x20                  	// #32
  4277fc:	mov	w2, #0x40                  	// #64
  427800:	csel	w1, w1, w2, eq  // eq = none
  427804:	orr	w0, w0, w1
  427808:	b	427810 <ferror@plt+0x24ae0>
  42780c:	mov	w0, #0x0                   	// #0
  427810:	ret
  427814:	ldr	x2, [x0]
  427818:	ldr	x4, [x0, #8]
  42781c:	cmp	x1, #0x40
  427820:	b.ls	427858 <ferror@plt+0x24b28>  // b.plast
  427824:	sub	x1, x1, #0x40
  427828:	mov	x3, #0xffffffffffffffff    	// #-1
  42782c:	lsl	x3, x3, x1
  427830:	bic	x3, x2, x3
  427834:	cmp	x1, #0x40
  427838:	csel	x2, x3, x2, cc  // cc = lo, ul, last
  42783c:	str	x2, [x0]
  427840:	str	x4, [x0, #8]
  427844:	ldp	x2, x3, [x0]
  427848:	stp	x2, x3, [x8]
  42784c:	ldr	x0, [x0, #16]
  427850:	str	x0, [x8, #16]
  427854:	ret
  427858:	mov	x2, #0x0                   	// #0
  42785c:	cmp	x1, #0x3f
  427860:	b.hi	42783c <ferror@plt+0x24b0c>  // b.pmore
  427864:	mov	x2, #0xffffffffffffffff    	// #-1
  427868:	lsl	x1, x2, x1
  42786c:	bic	x4, x4, x1
  427870:	mov	x2, #0x0                   	// #0
  427874:	b	42783c <ferror@plt+0x24b0c>
  427878:	cmp	x1, #0x40
  42787c:	b.hi	427898 <ferror@plt+0x24b68>  // b.pmore
  427880:	sub	w1, w1, #0x1
  427884:	ldr	x0, [x0, #8]
  427888:	lsr	x0, x0, x1
  42788c:	eor	x0, x0, #0x1
  427890:	and	w0, w0, #0x1
  427894:	ret
  427898:	sub	w1, w1, #0x41
  42789c:	ldr	x0, [x0]
  4278a0:	lsr	x0, x0, x1
  4278a4:	eor	x0, x0, #0x1
  4278a8:	and	w0, w0, #0x1
  4278ac:	b	427894 <ferror@plt+0x24b64>
  4278b0:	stp	x29, x30, [sp, #-112]!
  4278b4:	mov	x29, sp
  4278b8:	stp	x19, x20, [sp, #16]
  4278bc:	stp	x21, x22, [sp, #32]
  4278c0:	mov	x20, x8
  4278c4:	mov	x19, x0
  4278c8:	ldr	x21, [x0]
  4278cc:	ldr	x22, [x0, #8]
  4278d0:	neg	x0, x21
  4278d4:	negs	x2, x22
  4278d8:	csinv	x0, x0, x21, eq  // eq = none
  4278dc:	str	x0, [x19]
  4278e0:	str	x2, [x19, #8]
  4278e4:	ldp	x2, x3, [x19]
  4278e8:	stp	x2, x3, [sp, #48]
  4278ec:	ldr	x0, [x19, #16]
  4278f0:	str	x0, [sp, #64]
  4278f4:	add	x8, sp, #0x50
  4278f8:	add	x0, sp, #0x30
  4278fc:	bl	427814 <ferror@plt+0x24ae4>
  427900:	ldr	x1, [sp, #80]
  427904:	str	x1, [x19]
  427908:	ldr	x0, [sp, #88]
  42790c:	str	x0, [x19, #8]
  427910:	ldr	x0, [sp, #96]
  427914:	str	x0, [x19, #16]
  427918:	ldr	x3, [x19, #8]
  42791c:	cmp	x22, x3
  427920:	ccmp	x21, x1, #0x0, eq  // eq = none
  427924:	cset	w2, eq  // eq = none
  427928:	eor	w0, w0, #0x1
  42792c:	ands	w0, w2, w0
  427930:	b.ne	427958 <ferror@plt+0x24c28>  // b.any
  427934:	strb	w0, [x19, #17]
  427938:	ldp	x0, x1, [x19]
  42793c:	stp	x0, x1, [x20]
  427940:	ldr	x0, [x19, #16]
  427944:	str	x0, [x20, #16]
  427948:	ldp	x19, x20, [sp, #16]
  42794c:	ldp	x21, x22, [sp, #32]
  427950:	ldp	x29, x30, [sp], #112
  427954:	ret
  427958:	orr	x1, x1, x3
  42795c:	cmp	x1, #0x0
  427960:	cset	w0, ne  // ne = any
  427964:	b	427934 <ferror@plt+0x24c04>
  427968:	stp	x29, x30, [sp, #-128]!
  42796c:	mov	x29, sp
  427970:	stp	x19, x20, [sp, #16]
  427974:	stp	x21, x22, [sp, #32]
  427978:	stp	x23, x24, [sp, #48]
  42797c:	mov	x22, x8
  427980:	mov	x19, x0
  427984:	mov	x21, x1
  427988:	mov	x20, x2
  42798c:	ldr	x24, [x0]
  427990:	ldr	x23, [x0, #8]
  427994:	ldp	x2, x3, [x0]
  427998:	stp	x2, x3, [sp, #96]
  42799c:	ldr	x0, [x0, #16]
  4279a0:	str	x0, [sp, #112]
  4279a4:	add	x0, sp, #0x60
  4279a8:	bl	427878 <ferror@plt+0x24b48>
  4279ac:	and	w0, w0, #0xff
  4279b0:	ldrb	w1, [x19, #16]
  4279b4:	orr	w0, w0, w1
  4279b8:	eor	w0, w0, #0x1
  4279bc:	and	x0, x0, #0xff
  4279c0:	neg	x0, x0
  4279c4:	cmp	x21, x20
  4279c8:	b.ls	427a34 <ferror@plt+0x24d04>  // b.plast
  4279cc:	cmp	x21, #0x3f
  4279d0:	b.hi	427a1c <ferror@plt+0x24cec>  // b.pmore
  4279d4:	lsl	x1, x0, x21
  4279d8:	orr	x23, x23, x1
  4279dc:	mov	x24, x0
  4279e0:	cmp	x20, #0x3f
  4279e4:	b.ls	4279f4 <ferror@plt+0x24cc4>  // b.plast
  4279e8:	sub	x20, x20, #0x40
  4279ec:	mov	x23, x24
  4279f0:	mov	x24, x0
  4279f4:	cbz	x20, 427a94 <ferror@plt+0x24d64>
  4279f8:	mov	w1, #0x40                  	// #64
  4279fc:	sub	w1, w1, w20
  427a00:	lsr	x23, x23, x20
  427a04:	lsl	x2, x24, x1
  427a08:	orr	x23, x23, x2
  427a0c:	lsr	x20, x24, x20
  427a10:	lsl	x0, x0, x1
  427a14:	orr	x0, x20, x0
  427a18:	b	427a38 <ferror@plt+0x24d08>
  427a1c:	sub	w1, w21, #0x40
  427a20:	lsl	x1, x0, x1
  427a24:	orr	x1, x24, x1
  427a28:	cmp	x21, #0x80
  427a2c:	csel	x24, x1, x24, cc  // cc = lo, ul, last
  427a30:	b	4279e0 <ferror@plt+0x24cb0>
  427a34:	mov	x23, x0
  427a38:	str	x0, [x19]
  427a3c:	str	x23, [x19, #8]
  427a40:	ldp	x0, x1, [x19]
  427a44:	stp	x0, x1, [sp, #64]
  427a48:	ldr	x0, [x19, #16]
  427a4c:	str	x0, [sp, #80]
  427a50:	add	x8, sp, #0x60
  427a54:	mov	x1, x21
  427a58:	add	x0, sp, #0x40
  427a5c:	bl	427814 <ferror@plt+0x24ae4>
  427a60:	ldp	x0, x1, [sp, #96]
  427a64:	stp	x0, x1, [x19]
  427a68:	ldr	x2, [sp, #112]
  427a6c:	str	x2, [x19, #16]
  427a70:	strb	wzr, [x19, #17]
  427a74:	stp	x0, x1, [x22]
  427a78:	ldr	x0, [x19, #16]
  427a7c:	str	x0, [x22, #16]
  427a80:	ldp	x19, x20, [sp, #16]
  427a84:	ldp	x21, x22, [sp, #32]
  427a88:	ldp	x23, x24, [sp, #48]
  427a8c:	ldp	x29, x30, [sp], #128
  427a90:	ret
  427a94:	mov	x0, x24
  427a98:	b	427a38 <ferror@plt+0x24d08>
  427a9c:	stp	x29, x30, [sp, #-192]!
  427aa0:	mov	x29, sp
  427aa4:	stp	x19, x20, [sp, #16]
  427aa8:	stp	x21, x22, [sp, #32]
  427aac:	stp	x23, x24, [sp, #48]
  427ab0:	stp	x25, x26, [sp, #64]
  427ab4:	str	x27, [sp, #80]
  427ab8:	mov	x21, x8
  427abc:	mov	x19, x0
  427ac0:	ldr	x25, [x0]
  427ac4:	ldr	x26, [x0, #8]
  427ac8:	cmp	x2, x1
  427acc:	b.cc	427b2c <ferror@plt+0x24dfc>  // b.lo, b.ul, b.last
  427ad0:	ldrb	w23, [x0, #16]
  427ad4:	mov	w0, #0x0                   	// #0
  427ad8:	cbnz	w23, 427ae8 <ferror@plt+0x24db8>
  427adc:	orr	x25, x25, x26
  427ae0:	cmp	x25, #0x0
  427ae4:	cset	w0, ne  // ne = any
  427ae8:	mov	x27, #0x0                   	// #0
  427aec:	mov	x24, #0x0                   	// #0
  427af0:	str	x24, [x19]
  427af4:	str	x27, [x19, #8]
  427af8:	strb	w23, [x19, #16]
  427afc:	strb	w0, [x19, #17]
  427b00:	ldp	x0, x1, [x19]
  427b04:	stp	x0, x1, [x21]
  427b08:	ldr	x0, [x19, #16]
  427b0c:	str	x0, [x21, #16]
  427b10:	ldp	x19, x20, [sp, #16]
  427b14:	ldp	x21, x22, [sp, #32]
  427b18:	ldp	x23, x24, [sp, #48]
  427b1c:	ldp	x25, x26, [sp, #64]
  427b20:	ldr	x27, [sp, #80]
  427b24:	ldp	x29, x30, [sp], #192
  427b28:	ret
  427b2c:	mov	x22, x1
  427b30:	mov	x20, x2
  427b34:	cmp	x2, #0x3f
  427b38:	b.ls	427b4c <ferror@plt+0x24e1c>  // b.plast
  427b3c:	sub	x2, x2, #0x40
  427b40:	mov	x0, x26
  427b44:	mov	x1, #0x0                   	// #0
  427b48:	b	427b54 <ferror@plt+0x24e24>
  427b4c:	mov	x1, x26
  427b50:	mov	x0, x25
  427b54:	cbz	x2, 427b6c <ferror@plt+0x24e3c>
  427b58:	neg	w3, w2
  427b5c:	lsr	x3, x1, x3
  427b60:	lsl	x0, x0, x2
  427b64:	orr	x0, x3, x0
  427b68:	lsl	x1, x1, x2
  427b6c:	str	x0, [x19]
  427b70:	str	x1, [x19, #8]
  427b74:	ldp	x0, x1, [x19]
  427b78:	stp	x0, x1, [sp, #96]
  427b7c:	ldr	x0, [x19, #16]
  427b80:	str	x0, [sp, #112]
  427b84:	add	x8, sp, #0x80
  427b88:	mov	x1, x22
  427b8c:	add	x0, sp, #0x60
  427b90:	bl	427814 <ferror@plt+0x24ae4>
  427b94:	ldr	x24, [sp, #128]
  427b98:	str	x24, [x19]
  427b9c:	ldr	x0, [sp, #136]
  427ba0:	str	x0, [x19, #8]
  427ba4:	ldr	x23, [sp, #144]
  427ba8:	str	x23, [x19, #16]
  427bac:	mov	x27, x0
  427bb0:	mov	w0, #0x0                   	// #0
  427bb4:	ands	w23, w23, #0xff
  427bb8:	b.ne	427af0 <ferror@plt+0x24dc0>  // b.any
  427bbc:	ldp	x0, x1, [x19]
  427bc0:	stp	x0, x1, [sp, #96]
  427bc4:	ldr	x0, [x19, #16]
  427bc8:	str	x0, [sp, #112]
  427bcc:	add	x8, sp, #0xa8
  427bd0:	mov	x2, x20
  427bd4:	mov	x1, x22
  427bd8:	add	x0, sp, #0x60
  427bdc:	bl	427968 <ferror@plt+0x24c38>
  427be0:	mov	w0, #0x1                   	// #1
  427be4:	ldr	x1, [sp, #176]
  427be8:	cmp	x1, x26
  427bec:	b.ne	427af0 <ferror@plt+0x24dc0>  // b.any
  427bf0:	ldr	x0, [sp, #168]
  427bf4:	cmp	x0, x25
  427bf8:	cset	w0, ne  // ne = any
  427bfc:	b	427af0 <ferror@plt+0x24dc0>
  427c00:	and	x2, x0, #0xffffffff
  427c04:	and	x3, x1, #0xffffffff
  427c08:	mul	x5, x2, x3
  427c0c:	lsr	x0, x0, #32
  427c10:	lsr	x1, x1, #32
  427c14:	mul	x4, x0, x1
  427c18:	mul	x1, x2, x1
  427c1c:	mul	x0, x3, x0
  427c20:	add	x2, x5, x1, lsl #32
  427c24:	cmp	x5, x2
  427c28:	cinc	x3, x4, hi  // hi = pmore
  427c2c:	str	x3, [x8]
  427c30:	add	x3, x2, x0, lsl #32
  427c34:	str	x3, [x8, #8]
  427c38:	cmp	x2, x3
  427c3c:	b.ls	427c4c <ferror@plt+0x24f1c>  // b.plast
  427c40:	ldr	x2, [x8]
  427c44:	add	x2, x2, #0x1
  427c48:	str	x2, [x8]
  427c4c:	lsr	x0, x0, #32
  427c50:	add	x1, x0, x1, lsr #32
  427c54:	ldr	x0, [x8]
  427c58:	add	x1, x0, x1
  427c5c:	str	x1, [x8]
  427c60:	mov	w0, #0x1                   	// #1
  427c64:	strb	w0, [x8, #16]
  427c68:	strb	wzr, [x8, #17]
  427c6c:	ret
  427c70:	stp	x29, x30, [sp, #-176]!
  427c74:	mov	x29, sp
  427c78:	stp	x19, x20, [sp, #16]
  427c7c:	stp	x21, x22, [sp, #32]
  427c80:	stp	x23, x24, [sp, #48]
  427c84:	stp	x25, x26, [sp, #64]
  427c88:	mov	x22, x8
  427c8c:	mov	x19, x1
  427c90:	mov	x20, x2
  427c94:	mov	w21, w3
  427c98:	ldr	x1, [x1]
  427c9c:	ldr	x2, [x19, #8]
  427ca0:	ldrb	w3, [x19, #16]
  427ca4:	ldr	x25, [x20]
  427ca8:	ldr	x24, [x20, #8]
  427cac:	ldrb	w23, [x20, #16]
  427cb0:	ldr	x26, [x0, #1208]
  427cb4:	cmp	w21, #0x5
  427cb8:	b.eq	427ea0 <ferror@plt+0x25170>  // b.none
  427cbc:	b.hi	427d84 <ferror@plt+0x25054>  // b.pmore
  427cc0:	cmp	w21, #0x4
  427cc4:	b.ne	427fb4 <ferror@plt+0x25284>  // b.any
  427cc8:	adds	x24, x2, x24
  427ccc:	adc	x25, x25, x1
  427cd0:	cmp	w3, #0x0
  427cd4:	csinc	w23, w23, wzr, eq  // eq = none
  427cd8:	str	x25, [sp, #152]
  427cdc:	str	x24, [sp, #160]
  427ce0:	strb	w23, [sp, #168]
  427ce4:	strb	wzr, [sp, #169]
  427ce8:	ldp	x0, x1, [sp, #152]
  427cec:	stp	x0, x1, [sp, #112]
  427cf0:	ldr	x0, [sp, #168]
  427cf4:	str	x0, [sp, #128]
  427cf8:	add	x8, sp, #0x50
  427cfc:	mov	x1, x26
  427d00:	add	x0, sp, #0x70
  427d04:	bl	427814 <ferror@plt+0x24ae4>
  427d08:	ldp	x0, x1, [sp, #80]
  427d0c:	stp	x0, x1, [sp, #152]
  427d10:	ldr	x0, [sp, #96]
  427d14:	str	x0, [sp, #168]
  427d18:	ubfx	w1, w0, #8, #8
  427d1c:	ands	w21, w0, #0xff
  427d20:	b.ne	427d6c <ferror@plt+0x2503c>  // b.any
  427d24:	ldp	x0, x1, [x19]
  427d28:	stp	x0, x1, [sp, #80]
  427d2c:	ldr	x0, [x19, #16]
  427d30:	str	x0, [sp, #96]
  427d34:	mov	x1, x26
  427d38:	add	x0, sp, #0x50
  427d3c:	bl	427878 <ferror@plt+0x24b48>
  427d40:	and	w19, w0, #0xff
  427d44:	ldp	x0, x1, [x20]
  427d48:	stp	x0, x1, [sp, #80]
  427d4c:	ldr	x0, [x20, #16]
  427d50:	str	x0, [sp, #96]
  427d54:	mov	x1, x26
  427d58:	add	x0, sp, #0x50
  427d5c:	bl	427878 <ferror@plt+0x24b48>
  427d60:	cmp	w19, w0, uxtb
  427d64:	b.eq	427f8c <ferror@plt+0x2525c>  // b.none
  427d68:	mov	w1, w21
  427d6c:	strb	w1, [sp, #169]
  427d70:	ldp	x0, x1, [sp, #152]
  427d74:	stp	x0, x1, [x22]
  427d78:	ldr	x0, [sp, #168]
  427d7c:	str	x0, [x22, #16]
  427d80:	b	428008 <ferror@plt+0x252d8>
  427d84:	sub	w1, w21, #0xc
  427d88:	cmp	w1, #0x1
  427d8c:	b.hi	427fb4 <ferror@plt+0x25284>  // b.pmore
  427d90:	cbnz	w23, 427e00 <ferror@plt+0x250d0>
  427d94:	ldp	x0, x1, [x20]
  427d98:	stp	x0, x1, [sp, #112]
  427d9c:	ldr	x0, [x20, #16]
  427da0:	str	x0, [sp, #128]
  427da4:	mov	x1, x26
  427da8:	add	x0, sp, #0x70
  427dac:	bl	427878 <ferror@plt+0x24b48>
  427db0:	and	w0, w0, #0xff
  427db4:	cbnz	w0, 427e00 <ferror@plt+0x250d0>
  427db8:	cmp	w21, #0xd
  427dbc:	cset	w21, ne  // ne = any
  427dc0:	add	w21, w21, #0xc
  427dc4:	ldp	x0, x1, [x20]
  427dc8:	stp	x0, x1, [sp, #80]
  427dcc:	ldr	x0, [x20, #16]
  427dd0:	str	x0, [sp, #96]
  427dd4:	add	x8, sp, #0x70
  427dd8:	mov	x1, x26
  427ddc:	add	x0, sp, #0x50
  427de0:	bl	4278b0 <ferror@plt+0x24b80>
  427de4:	ldr	x25, [sp, #112]
  427de8:	str	x25, [x20]
  427dec:	ldr	x0, [sp, #120]
  427df0:	str	x0, [x20, #8]
  427df4:	ldr	x0, [sp, #128]
  427df8:	str	x0, [x20, #16]
  427dfc:	ldr	x24, [x20, #8]
  427e00:	cmp	x25, #0x0
  427e04:	csinv	x24, x24, xzr, eq  // eq = none
  427e08:	cmp	w21, #0xd
  427e0c:	b.eq	427e58 <ferror@plt+0x25128>  // b.none
  427e10:	ldp	x0, x1, [x19]
  427e14:	stp	x0, x1, [sp, #112]
  427e18:	ldr	x0, [x19, #16]
  427e1c:	str	x0, [sp, #128]
  427e20:	add	x8, sp, #0x50
  427e24:	mov	x2, x24
  427e28:	mov	x1, x26
  427e2c:	add	x0, sp, #0x70
  427e30:	bl	427968 <ferror@plt+0x24c38>
  427e34:	ldr	x25, [sp, #80]
  427e38:	str	x25, [x19]
  427e3c:	ldr	x0, [sp, #88]
  427e40:	str	x0, [x19, #8]
  427e44:	ldr	x23, [sp, #96]
  427e48:	str	x23, [x19, #16]
  427e4c:	mov	x24, x0
  427e50:	and	w23, w23, #0xff
  427e54:	b	427fec <ferror@plt+0x252bc>
  427e58:	ldp	x0, x1, [x19]
  427e5c:	stp	x0, x1, [sp, #112]
  427e60:	ldr	x0, [x19, #16]
  427e64:	str	x0, [sp, #128]
  427e68:	add	x8, sp, #0x50
  427e6c:	mov	x2, x24
  427e70:	mov	x1, x26
  427e74:	add	x0, sp, #0x70
  427e78:	bl	427a9c <ferror@plt+0x24d6c>
  427e7c:	ldr	x25, [sp, #80]
  427e80:	str	x25, [x19]
  427e84:	ldr	x0, [sp, #88]
  427e88:	str	x0, [x19, #8]
  427e8c:	ldr	x23, [sp, #96]
  427e90:	str	x23, [x19, #16]
  427e94:	mov	x24, x0
  427e98:	and	w23, w23, #0xff
  427e9c:	b	427fec <ferror@plt+0x252bc>
  427ea0:	sub	x24, x2, x24
  427ea4:	sub	x25, x1, x25
  427ea8:	cmp	x24, x2
  427eac:	cset	x0, hi  // hi = pmore
  427eb0:	sub	x25, x25, x0
  427eb4:	cmp	w3, #0x0
  427eb8:	csinc	w23, w23, wzr, eq  // eq = none
  427ebc:	str	x25, [sp, #152]
  427ec0:	str	x24, [sp, #160]
  427ec4:	strb	w23, [sp, #168]
  427ec8:	strb	wzr, [sp, #169]
  427ecc:	ldp	x0, x1, [sp, #152]
  427ed0:	stp	x0, x1, [sp, #112]
  427ed4:	ldr	x0, [sp, #168]
  427ed8:	str	x0, [sp, #128]
  427edc:	add	x8, sp, #0x50
  427ee0:	mov	x1, x26
  427ee4:	add	x0, sp, #0x70
  427ee8:	bl	427814 <ferror@plt+0x24ae4>
  427eec:	ldp	x0, x1, [sp, #80]
  427ef0:	stp	x0, x1, [sp, #152]
  427ef4:	ldr	x0, [sp, #96]
  427ef8:	str	x0, [sp, #168]
  427efc:	ubfx	w1, w0, #8, #8
  427f00:	ands	w21, w0, #0xff
  427f04:	b.ne	427f74 <ferror@plt+0x25244>  // b.any
  427f08:	ldp	x0, x1, [x19]
  427f0c:	stp	x0, x1, [sp, #80]
  427f10:	ldr	x0, [x19, #16]
  427f14:	str	x0, [sp, #96]
  427f18:	mov	x1, x26
  427f1c:	add	x0, sp, #0x50
  427f20:	bl	427878 <ferror@plt+0x24b48>
  427f24:	and	w19, w0, #0xff
  427f28:	ldp	x0, x1, [x20]
  427f2c:	stp	x0, x1, [sp, #80]
  427f30:	ldr	x0, [x20, #16]
  427f34:	str	x0, [sp, #96]
  427f38:	mov	x1, x26
  427f3c:	add	x0, sp, #0x50
  427f40:	bl	427878 <ferror@plt+0x24b48>
  427f44:	cmp	w19, w0, uxtb
  427f48:	b.eq	427f70 <ferror@plt+0x25240>  // b.none
  427f4c:	ldp	x0, x1, [sp, #152]
  427f50:	stp	x0, x1, [sp, #80]
  427f54:	ldr	x0, [sp, #168]
  427f58:	str	x0, [sp, #96]
  427f5c:	mov	x1, x26
  427f60:	add	x0, sp, #0x50
  427f64:	bl	427878 <ferror@plt+0x24b48>
  427f68:	cmp	w19, w0, uxtb
  427f6c:	cset	w21, ne  // ne = any
  427f70:	mov	w1, w21
  427f74:	strb	w1, [sp, #169]
  427f78:	ldp	x0, x1, [sp, #152]
  427f7c:	stp	x0, x1, [x22]
  427f80:	ldr	x0, [sp, #168]
  427f84:	str	x0, [x22, #16]
  427f88:	b	428008 <ferror@plt+0x252d8>
  427f8c:	ldp	x0, x1, [sp, #152]
  427f90:	stp	x0, x1, [sp, #80]
  427f94:	ldr	x0, [sp, #168]
  427f98:	str	x0, [sp, #96]
  427f9c:	mov	x1, x26
  427fa0:	add	x0, sp, #0x50
  427fa4:	bl	427878 <ferror@plt+0x24b48>
  427fa8:	cmp	w19, w0, uxtb
  427fac:	cset	w21, ne  // ne = any
  427fb0:	b	427d68 <ferror@plt+0x25038>
  427fb4:	ldrb	w1, [x0, #1154]
  427fb8:	cbz	w1, 427fdc <ferror@plt+0x252ac>
  427fbc:	ldrb	w1, [x0, #1152]
  427fc0:	cbz	w1, 427fcc <ferror@plt+0x2529c>
  427fc4:	ldr	w1, [x0, #28]
  427fc8:	cbnz	w1, 427fdc <ferror@plt+0x252ac>
  427fcc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  427fd0:	add	x2, x2, #0x878
  427fd4:	mov	w1, #0x15                  	// #21
  427fd8:	bl	426b04 <ferror@plt+0x23dd4>
  427fdc:	ldp	x0, x1, [x20]
  427fe0:	stp	x0, x1, [x19]
  427fe4:	ldr	x0, [x20, #16]
  427fe8:	str	x0, [x19, #16]
  427fec:	str	x25, [x19]
  427ff0:	str	x24, [x19, #8]
  427ff4:	strb	w23, [x19, #16]
  427ff8:	ldp	x0, x1, [x19]
  427ffc:	stp	x0, x1, [x22]
  428000:	ldr	x0, [x19, #16]
  428004:	str	x0, [x22, #16]
  428008:	ldp	x19, x20, [sp, #16]
  42800c:	ldp	x21, x22, [sp, #32]
  428010:	ldp	x23, x24, [sp, #48]
  428014:	ldp	x25, x26, [sp, #64]
  428018:	ldp	x29, x30, [sp], #176
  42801c:	ret
  428020:	stp	x29, x30, [sp, #-80]!
  428024:	mov	x29, sp
  428028:	stp	x19, x20, [sp, #16]
  42802c:	stp	x21, x22, [sp, #32]
  428030:	stp	x23, x24, [sp, #48]
  428034:	str	x25, [sp, #64]
  428038:	mov	x21, x8
  42803c:	mov	x19, x0
  428040:	mov	w23, w1
  428044:	strb	wzr, [x8, #16]
  428048:	str	xzr, [x8]
  42804c:	strb	wzr, [x8, #17]
  428050:	str	xzr, [x8, #8]
  428054:	ldrb	w2, [x0, #26]
  428058:	add	w2, w2, #0x1
  42805c:	strb	w2, [x0, #26]
  428060:	bl	438a9c <ferror@plt+0x35d6c>
  428064:	mov	x20, x0
  428068:	ldrb	w0, [x0, #4]
  42806c:	mov	w25, #0x0                   	// #0
  428070:	cmp	w0, #0x14
  428074:	b.eq	428130 <ferror@plt+0x25400>  // b.none
  428078:	ldrb	w0, [x20, #4]
  42807c:	cmp	w0, #0x44
  428080:	cset	w24, eq  // eq = none
  428084:	cmp	w0, #0x3e
  428088:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  42808c:	b.eq	428144 <ferror@plt+0x25414>  // b.none
  428090:	ldr	w0, [x20, #8]
  428094:	sub	w0, w0, #0x1
  428098:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42809c:	mov	x22, x0
  4280a0:	ldr	w2, [x20, #8]
  4280a4:	ldr	x1, [x20, #16]
  4280a8:	sub	w2, w2, #0x2
  4280ac:	add	x1, x1, #0x1
  4280b0:	bl	402620 <memcpy@plt>
  4280b4:	ldr	w0, [x20, #8]
  4280b8:	sub	w0, w0, #0x2
  4280bc:	strb	wzr, [x22, w0, uxtw]
  4280c0:	ldr	x20, [x20, #8]
  4280c4:	mov	w3, w23
  4280c8:	mov	w2, w24
  4280cc:	mov	x1, x22
  4280d0:	mov	x0, x19
  4280d4:	bl	42d17c <ferror@plt+0x2a44c>
  4280d8:	and	w0, w0, #0xff
  4280dc:	cbz	w0, 4280e8 <ferror@plt+0x253b8>
  4280e0:	mov	x0, #0x1                   	// #1
  4280e4:	str	x0, [x21, #8]
  4280e8:	mov	x0, x22
  4280ec:	bl	402a90 <free@plt>
  4280f0:	cbz	w25, 428104 <ferror@plt+0x253d4>
  4280f4:	ldr	x0, [x19, #448]
  4280f8:	ldurb	w0, [x0, #-20]
  4280fc:	cmp	w0, #0x16
  428100:	b.ne	428188 <ferror@plt+0x25458>  // b.any
  428104:	cbz	x20, 42810c <ferror@plt+0x253dc>
  428108:	str	x20, [x19, #432]
  42810c:	ldrb	w0, [x19, #26]
  428110:	sub	w0, w0, #0x1
  428114:	strb	w0, [x19, #26]
  428118:	ldp	x19, x20, [sp, #16]
  42811c:	ldp	x21, x22, [sp, #32]
  428120:	ldp	x23, x24, [sp, #48]
  428124:	ldr	x25, [sp, #64]
  428128:	ldp	x29, x30, [sp], #80
  42812c:	ret
  428130:	mov	x0, x19
  428134:	bl	438a9c <ferror@plt+0x35d6c>
  428138:	mov	x20, x0
  42813c:	mov	w25, #0x1                   	// #1
  428140:	b	428078 <ferror@plt+0x25348>
  428144:	cmp	w0, #0x3
  428148:	b.eq	42816c <ferror@plt+0x2543c>  // b.none
  42814c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  428150:	add	x2, x2, #0x8a0
  428154:	mov	w1, #0x3                   	// #3
  428158:	mov	x0, x19
  42815c:	bl	426a10 <ferror@plt+0x23ce0>
  428160:	cbz	w25, 42810c <ferror@plt+0x253dc>
  428164:	mov	x20, #0x0                   	// #0
  428168:	b	4280f4 <ferror@plt+0x253c4>
  42816c:	mov	x0, x19
  428170:	bl	4267f4 <ferror@plt+0x23ac4>
  428174:	mov	x22, x0
  428178:	mov	w24, #0x1                   	// #1
  42817c:	mov	x20, #0x0                   	// #0
  428180:	cbnz	x0, 4280c4 <ferror@plt+0x25394>
  428184:	b	428160 <ferror@plt+0x25430>
  428188:	mov	x0, x19
  42818c:	bl	438a9c <ferror@plt+0x35d6c>
  428190:	ldrb	w0, [x0, #4]
  428194:	cmp	w0, #0x15
  428198:	b.eq	428104 <ferror@plt+0x253d4>  // b.none
  42819c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4281a0:	add	x2, x2, #0x8d8
  4281a4:	mov	w1, #0x3                   	// #3
  4281a8:	mov	x0, x19
  4281ac:	bl	426a10 <ferror@plt+0x23ce0>
  4281b0:	b	428104 <ferror@plt+0x253d4>
  4281b4:	stp	x29, x30, [sp, #-16]!
  4281b8:	mov	x29, sp
  4281bc:	bl	427000 <ferror@plt+0x242d0>
  4281c0:	ldp	x29, x30, [sp], #16
  4281c4:	ret
  4281c8:	stp	x29, x30, [sp, #-16]!
  4281cc:	mov	x29, sp
  4281d0:	bl	4276b8 <ferror@plt+0x24988>
  4281d4:	ldp	x29, x30, [sp], #16
  4281d8:	ret
  4281dc:	cmp	w0, #0x4a
  4281e0:	b.eq	42820c <ferror@plt+0x254dc>  // b.none
  4281e4:	cmp	w0, #0x4b
  4281e8:	b.eq	428214 <ferror@plt+0x254e4>  // b.none
  4281ec:	cmp	w0, #0x4c
  4281f0:	b.eq	42821c <ferror@plt+0x254ec>  // b.none
  4281f4:	cmp	w0, #0x4d
  4281f8:	b.eq	428224 <ferror@plt+0x254f4>  // b.none
  4281fc:	cmp	w0, #0x4e
  428200:	mov	w1, #0x42                  	// #66
  428204:	csel	w0, w0, w1, ne  // ne = any
  428208:	ret
  42820c:	mov	w0, #0x3e                  	// #62
  428210:	b	428208 <ferror@plt+0x254d8>
  428214:	mov	w0, #0x3f                  	// #63
  428218:	b	428208 <ferror@plt+0x254d8>
  42821c:	mov	w0, #0x40                  	// #64
  428220:	b	428208 <ferror@plt+0x254d8>
  428224:	mov	w0, #0x41                  	// #65
  428228:	b	428208 <ferror@plt+0x254d8>
  42822c:	cmp	w0, #0x3e
  428230:	b.eq	42825c <ferror@plt+0x2552c>  // b.none
  428234:	cmp	w0, #0x3f
  428238:	b.eq	428264 <ferror@plt+0x25534>  // b.none
  42823c:	cmp	w0, #0x40
  428240:	b.eq	42826c <ferror@plt+0x2553c>  // b.none
  428244:	cmp	w0, #0x41
  428248:	b.eq	428274 <ferror@plt+0x25544>  // b.none
  42824c:	cmp	w0, #0x42
  428250:	mov	w1, #0x4e                  	// #78
  428254:	csel	w0, w0, w1, ne  // ne = any
  428258:	ret
  42825c:	mov	w0, #0x4a                  	// #74
  428260:	b	428258 <ferror@plt+0x25528>
  428264:	mov	w0, #0x4b                  	// #75
  428268:	b	428258 <ferror@plt+0x25528>
  42826c:	mov	w0, #0x4c                  	// #76
  428270:	b	428258 <ferror@plt+0x25528>
  428274:	mov	w0, #0x4d                  	// #77
  428278:	b	428258 <ferror@plt+0x25528>
  42827c:	cmp	w0, #0x45
  428280:	b.eq	4282ac <ferror@plt+0x2557c>  // b.none
  428284:	cmp	w0, #0x46
  428288:	b.eq	4282b4 <ferror@plt+0x25584>  // b.none
  42828c:	cmp	w0, #0x47
  428290:	b.eq	4282bc <ferror@plt+0x2558c>  // b.none
  428294:	cmp	w0, #0x48
  428298:	b.eq	4282c4 <ferror@plt+0x25594>  // b.none
  42829c:	cmp	w0, #0x49
  4282a0:	mov	w1, #0x3c                  	// #60
  4282a4:	csel	w0, w0, w1, ne  // ne = any
  4282a8:	ret
  4282ac:	mov	w0, #0x38                  	// #56
  4282b0:	b	4282a8 <ferror@plt+0x25578>
  4282b4:	mov	w0, #0x39                  	// #57
  4282b8:	b	4282a8 <ferror@plt+0x25578>
  4282bc:	mov	w0, #0x3a                  	// #58
  4282c0:	b	4282a8 <ferror@plt+0x25578>
  4282c4:	mov	w0, #0x3b                  	// #59
  4282c8:	b	4282a8 <ferror@plt+0x25578>
  4282cc:	cmp	w0, #0x38
  4282d0:	b.eq	4282fc <ferror@plt+0x255cc>  // b.none
  4282d4:	cmp	w0, #0x39
  4282d8:	b.eq	428304 <ferror@plt+0x255d4>  // b.none
  4282dc:	cmp	w0, #0x3a
  4282e0:	b.eq	42830c <ferror@plt+0x255dc>  // b.none
  4282e4:	cmp	w0, #0x3b
  4282e8:	b.eq	428314 <ferror@plt+0x255e4>  // b.none
  4282ec:	cmp	w0, #0x3c
  4282f0:	mov	w1, #0x49                  	// #73
  4282f4:	csel	w0, w0, w1, ne  // ne = any
  4282f8:	ret
  4282fc:	mov	w0, #0x45                  	// #69
  428300:	b	4282f8 <ferror@plt+0x255c8>
  428304:	mov	w0, #0x46                  	// #70
  428308:	b	4282f8 <ferror@plt+0x255c8>
  42830c:	mov	w0, #0x47                  	// #71
  428310:	b	4282f8 <ferror@plt+0x255c8>
  428314:	mov	w0, #0x48                  	// #72
  428318:	b	4282f8 <ferror@plt+0x255c8>
  42831c:	sub	w0, w0, #0x4a
  428320:	cmp	w0, #0x4
  428324:	cset	w0, ls  // ls = plast
  428328:	ret
  42832c:	sub	w0, w0, #0x45
  428330:	cmp	w0, #0x4
  428334:	cset	w0, ls  // ls = plast
  428338:	ret
  42833c:	ldr	w2, [x0, #8]
  428340:	ldr	x0, [x0, #16]
  428344:	cbz	w2, 4283a0 <ferror@plt+0x25670>
  428348:	mov	x1, #0x0                   	// #0
  42834c:	mov	w5, #0x27                  	// #39
  428350:	mov	w4, w1
  428354:	ldrb	w3, [x0, x1]
  428358:	cmp	w3, #0x22
  42835c:	ccmp	w3, w5, #0x4, ne  // ne = any
  428360:	b.eq	428374 <ferror@plt+0x25644>  // b.none
  428364:	add	w4, w1, #0x1
  428368:	add	x1, x1, #0x1
  42836c:	cmp	w2, w1
  428370:	b.hi	428350 <ferror@plt+0x25620>  // b.pmore
  428374:	cmp	w2, w4
  428378:	b.eq	4283a4 <ferror@plt+0x25674>  // b.none
  42837c:	ldrb	w3, [x0, w4, uxtw]
  428380:	mov	w4, w2
  428384:	sub	w2, w2, #0x1
  428388:	ldrb	w1, [x0, w2, uxtw]
  42838c:	cmp	w1, w3
  428390:	b.eq	4283ac <ferror@plt+0x2567c>  // b.none
  428394:	cbnz	w2, 428380 <ferror@plt+0x25650>
  428398:	add	x0, x0, w2, uxtw
  42839c:	ret
  4283a0:	mov	w4, w2
  4283a4:	add	x0, x0, w4, uxtw
  4283a8:	b	42839c <ferror@plt+0x2566c>
  4283ac:	mov	w2, w4
  4283b0:	b	428398 <ferror@plt+0x25668>
  4283b4:	stp	x29, x30, [sp, #-96]!
  4283b8:	mov	x29, sp
  4283bc:	stp	x21, x22, [sp, #32]
  4283c0:	stp	x25, x26, [sp, #64]
  4283c4:	stp	x27, x28, [sp, #80]
  4283c8:	mov	x25, x0
  4283cc:	mov	x26, x2
  4283d0:	mov	w27, w3
  4283d4:	ldr	x8, [x1, #16]
  4283d8:	cbz	x2, 4283e0 <ferror@plt+0x256b0>
  4283dc:	str	xzr, [x2]
  4283e0:	ldr	w28, [x1, #8]
  4283e4:	cmp	w28, #0x1
  4283e8:	b.eq	428d88 <ferror@plt+0x26058>  // b.none
  4283ec:	stp	x19, x20, [sp, #16]
  4283f0:	stp	x23, x24, [sp, #48]
  4283f4:	ldrb	w0, [x8]
  4283f8:	mov	x20, x8
  4283fc:	mov	w24, #0xa                   	// #10
  428400:	cmp	w0, #0x30
  428404:	b.eq	428434 <ferror@plt+0x25704>  // b.none
  428408:	mov	w22, #0x0                   	// #0
  42840c:	mov	w6, #0x0                   	// #0
  428410:	mov	w23, #0x0                   	// #0
  428414:	mov	w21, #0x0                   	// #0
  428418:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42841c:	add	x3, x3, #0x28
  428420:	adrp	x5, 47e000 <_obstack_memory_used@@Base+0x29c60>
  428424:	add	x5, x5, #0xc78
  428428:	mov	w7, #0x0                   	// #0
  42842c:	mov	w4, #0x1                   	// #1
  428430:	b	42853c <ferror@plt+0x2580c>
  428434:	add	x20, x8, #0x1
  428438:	ldrb	w0, [x8, #1]
  42843c:	and	w0, w0, #0xffffffdf
  428440:	and	w0, w0, #0xff
  428444:	cmp	w0, #0x58
  428448:	b.ne	4284bc <ferror@plt+0x2578c>  // b.any
  42844c:	ldrb	w0, [x8, #2]
  428450:	cmp	w0, #0x2e
  428454:	b.eq	428468 <ferror@plt+0x25738>  // b.none
  428458:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42845c:	add	x1, x1, #0x28
  428460:	ldrh	w1, [x1, w0, sxtw #1]
  428464:	tbz	w1, #8, 42847c <ferror@plt+0x2574c>
  428468:	add	x20, x8, #0x2
  42846c:	mov	w24, #0x10                  	// #16
  428470:	b	428408 <ferror@plt+0x256d8>
  428474:	mov	w24, #0x8                   	// #8
  428478:	b	428408 <ferror@plt+0x256d8>
  42847c:	mov	w24, #0x8                   	// #8
  428480:	cmp	w0, #0x27
  428484:	b.ne	428408 <ferror@plt+0x256d8>  // b.any
  428488:	ldrb	w0, [x25, #1166]
  42848c:	cbz	w0, 428408 <ferror@plt+0x256d8>
  428490:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428494:	add	x4, x4, #0x9b0
  428498:	mov	w3, #0x0                   	// #0
  42849c:	mov	w2, w27
  4284a0:	mov	w1, #0x3                   	// #3
  4284a4:	mov	x0, x25
  4284a8:	bl	426bfc <ferror@plt+0x23ecc>
  4284ac:	mov	w21, #0x0                   	// #0
  4284b0:	ldp	x19, x20, [sp, #16]
  4284b4:	ldp	x23, x24, [sp, #48]
  4284b8:	b	4285f8 <ferror@plt+0x258c8>
  4284bc:	cmp	w0, #0x42
  4284c0:	b.ne	428474 <ferror@plt+0x25744>  // b.any
  4284c4:	ldrb	w1, [x8, #2]
  4284c8:	sub	w0, w1, #0x30
  4284cc:	and	w0, w0, #0xff
  4284d0:	cmp	w0, #0x1
  4284d4:	b.ls	428518 <ferror@plt+0x257e8>  // b.plast
  4284d8:	mov	w24, #0x8                   	// #8
  4284dc:	cmp	w1, #0x27
  4284e0:	b.ne	428408 <ferror@plt+0x256d8>  // b.any
  4284e4:	ldrb	w0, [x25, #1166]
  4284e8:	cbz	w0, 428408 <ferror@plt+0x256d8>
  4284ec:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4284f0:	add	x4, x4, #0x9b0
  4284f4:	mov	w3, #0x0                   	// #0
  4284f8:	mov	w2, w27
  4284fc:	mov	w1, #0x3                   	// #3
  428500:	mov	x0, x25
  428504:	bl	426bfc <ferror@plt+0x23ecc>
  428508:	mov	w21, #0x0                   	// #0
  42850c:	ldp	x19, x20, [sp, #16]
  428510:	ldp	x23, x24, [sp, #48]
  428514:	b	4285f8 <ferror@plt+0x258c8>
  428518:	add	x20, x8, #0x2
  42851c:	mov	w24, #0x2                   	// #2
  428520:	b	428408 <ferror@plt+0x256d8>
  428524:	ldrb	w0, [x5, w0, sxtw]
  428528:	cmp	w21, w0
  42852c:	csel	w21, w21, w0, cs  // cs = hs, nlast
  428530:	mov	w22, w7
  428534:	mov	w6, w4
  428538:	mov	x20, x19
  42853c:	mov	x19, x20
  428540:	ldrb	w0, [x19], #1
  428544:	mov	w1, w0
  428548:	ldrh	w1, [x3, x1, lsl #1]
  42854c:	tbnz	w1, #2, 428524 <ferror@plt+0x257f4>
  428550:	tst	x1, #0x100
  428554:	ccmp	w24, #0x10, #0x0, ne  // ne = any
  428558:	b.eq	428524 <ferror@plt+0x257f4>  // b.none
  42855c:	cmp	w0, #0x27
  428560:	b.eq	428588 <ferror@plt+0x25858>  // b.none
  428564:	cmp	w0, #0x2e
  428568:	b.ne	42863c <ferror@plt+0x2590c>  // b.any
  42856c:	cbnz	w22, 4285d0 <ferror@plt+0x258a0>
  428570:	ldrb	w0, [x19]
  428574:	cmp	w0, #0x27
  428578:	b.eq	4285c8 <ferror@plt+0x25898>  // b.none
  42857c:	cbnz	w23, 428610 <ferror@plt+0x258e0>
  428580:	mov	w23, w4
  428584:	b	428538 <ferror@plt+0x25808>
  428588:	ldrb	w0, [x25, #1166]
  42858c:	cbz	w0, 428dc8 <ferror@plt+0x26098>
  428590:	cbnz	w22, 42859c <ferror@plt+0x2586c>
  428594:	mov	w22, w4
  428598:	b	428538 <ferror@plt+0x25808>
  42859c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4285a0:	add	x4, x4, #0x9d8
  4285a4:	mov	w3, #0x0                   	// #0
  4285a8:	mov	w2, w27
  4285ac:	mov	w1, #0x3                   	// #3
  4285b0:	mov	x0, x25
  4285b4:	bl	426bfc <ferror@plt+0x23ecc>
  4285b8:	mov	w21, #0x0                   	// #0
  4285bc:	ldp	x19, x20, [sp, #16]
  4285c0:	ldp	x23, x24, [sp, #48]
  4285c4:	b	4285f8 <ferror@plt+0x258c8>
  4285c8:	ldrb	w0, [x25, #1166]
  4285cc:	cbz	w0, 42857c <ferror@plt+0x2584c>
  4285d0:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4285d4:	add	x4, x4, #0x9f8
  4285d8:	mov	w3, #0x0                   	// #0
  4285dc:	mov	w2, w27
  4285e0:	mov	w1, #0x3                   	// #3
  4285e4:	mov	x0, x25
  4285e8:	bl	426bfc <ferror@plt+0x23ecc>
  4285ec:	mov	w21, #0x0                   	// #0
  4285f0:	ldp	x19, x20, [sp, #16]
  4285f4:	ldp	x23, x24, [sp, #48]
  4285f8:	mov	w0, w21
  4285fc:	ldp	x21, x22, [sp, #32]
  428600:	ldp	x25, x26, [sp, #64]
  428604:	ldp	x27, x28, [sp, #80]
  428608:	ldp	x29, x30, [sp], #96
  42860c:	ret
  428610:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428614:	add	x4, x4, #0xa28
  428618:	mov	w3, #0x0                   	// #0
  42861c:	mov	w2, w27
  428620:	mov	w1, #0x3                   	// #3
  428624:	mov	x0, x25
  428628:	bl	426bfc <ferror@plt+0x23ecc>
  42862c:	mov	w21, #0x0                   	// #0
  428630:	ldp	x19, x20, [sp, #16]
  428634:	ldp	x23, x24, [sp, #48]
  428638:	b	4285f8 <ferror@plt+0x258c8>
  42863c:	add	x28, x8, w28, uxtw
  428640:	cmp	w24, #0xa
  428644:	b.hi	428dd0 <ferror@plt+0x260a0>  // b.pmore
  428648:	and	w1, w0, #0xffffffdf
  42864c:	and	w1, w1, #0xff
  428650:	cmp	w1, #0x45
  428654:	b.ne	428dd0 <ferror@plt+0x260a0>  // b.any
  428658:	cbnz	w22, 428720 <ferror@plt+0x259f0>
  42865c:	ldrb	w0, [x19]
  428660:	mov	w23, #0x2                   	// #2
  428664:	cmp	w0, #0x27
  428668:	b.eq	428718 <ferror@plt+0x259e8>  // b.none
  42866c:	cmp	w23, #0x0
  428670:	cset	w0, ne  // ne = any
  428674:	cmp	w0, #0x0
  428678:	ccmp	w24, #0x8, #0x0, ne  // ne = any
  42867c:	b.ne	4287b4 <ferror@plt+0x25a84>  // b.any
  428680:	mov	w24, #0xa                   	// #10
  428684:	cmp	w21, #0x9
  428688:	b.ls	428878 <ferror@plt+0x25b48>  // b.plast
  42868c:	add	w5, w21, #0x30
  428690:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428694:	add	x4, x4, #0xaf8
  428698:	mov	w3, #0x0                   	// #0
  42869c:	mov	w2, w27
  4286a0:	mov	w1, #0x3                   	// #3
  4286a4:	mov	x0, x25
  4286a8:	bl	426bfc <ferror@plt+0x23ecc>
  4286ac:	mov	w21, #0x0                   	// #0
  4286b0:	ldp	x19, x20, [sp, #16]
  4286b4:	ldp	x23, x24, [sp, #48]
  4286b8:	b	4285f8 <ferror@plt+0x258c8>
  4286bc:	and	w0, w0, #0xffffffdf
  4286c0:	and	w0, w0, #0xff
  4286c4:	cmp	w0, #0x50
  4286c8:	b.eq	428658 <ferror@plt+0x25928>  // b.none
  4286cc:	cmp	w23, #0x0
  4286d0:	cset	w0, ne  // ne = any
  4286d4:	cbnz	w22, 42874c <ferror@plt+0x25a1c>
  4286d8:	cmp	w21, w24
  4286dc:	b.cc	4287bc <ferror@plt+0x25a8c>  // b.lo, b.ul, b.last
  4286e0:	cmp	w24, #0x2
  4286e4:	b.ne	42868c <ferror@plt+0x2595c>  // b.any
  4286e8:	add	w5, w21, #0x30
  4286ec:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4286f0:	add	x4, x4, #0xad0
  4286f4:	mov	w3, #0x0                   	// #0
  4286f8:	mov	w2, w27
  4286fc:	mov	w1, #0x3                   	// #3
  428700:	mov	x0, x25
  428704:	bl	426bfc <ferror@plt+0x23ecc>
  428708:	mov	w21, #0x0                   	// #0
  42870c:	ldp	x19, x20, [sp, #16]
  428710:	ldp	x23, x24, [sp, #48]
  428714:	b	4285f8 <ferror@plt+0x258c8>
  428718:	ldrb	w0, [x25, #1166]
  42871c:	cbz	w0, 42866c <ferror@plt+0x2593c>
  428720:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428724:	add	x4, x4, #0xa50
  428728:	mov	w3, #0x0                   	// #0
  42872c:	mov	w2, w27
  428730:	mov	w1, #0x3                   	// #3
  428734:	mov	x0, x25
  428738:	bl	426bfc <ferror@plt+0x23ecc>
  42873c:	mov	w21, #0x0                   	// #0
  428740:	ldp	x19, x20, [sp, #16]
  428744:	ldp	x23, x24, [sp, #48]
  428748:	b	4285f8 <ferror@plt+0x258c8>
  42874c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428750:	add	x4, x4, #0xa78
  428754:	mov	w3, #0x0                   	// #0
  428758:	mov	w2, w27
  42875c:	mov	w1, #0x3                   	// #3
  428760:	mov	x0, x25
  428764:	bl	426bfc <ferror@plt+0x23ecc>
  428768:	mov	w21, #0x0                   	// #0
  42876c:	ldp	x19, x20, [sp, #16]
  428770:	ldp	x23, x24, [sp, #48]
  428774:	b	4285f8 <ferror@plt+0x258c8>
  428778:	orr	w19, w0, #0x2
  42877c:	cmp	w24, #0x8
  428780:	b.eq	428d90 <ferror@plt+0x26060>  // b.none
  428784:	ldrb	w0, [x25, #1154]
  428788:	cbz	w0, 428c6c <ferror@plt+0x25f3c>
  42878c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428790:	add	x4, x4, #0xaa0
  428794:	mov	w3, #0x0                   	// #0
  428798:	mov	w2, w27
  42879c:	mov	w1, #0x2                   	// #2
  4287a0:	mov	x0, x25
  4287a4:	bl	426bfc <ferror@plt+0x23ecc>
  4287a8:	b	428c60 <ferror@plt+0x25f30>
  4287ac:	mov	x19, x20
  4287b0:	b	42866c <ferror@plt+0x2593c>
  4287b4:	mov	x20, x19
  4287b8:	b	4286d8 <ferror@plt+0x259a8>
  4287bc:	cbnz	w0, 428840 <ferror@plt+0x25b10>
  4287c0:	sub	x28, x28, x20
  4287c4:	mov	x2, x28
  4287c8:	mov	x1, x20
  4287cc:	mov	x0, x25
  4287d0:	bl	4276b8 <ferror@plt+0x24988>
  4287d4:	mov	w21, w0
  4287d8:	cbnz	w0, 428c48 <ferror@plt+0x25f18>
  4287dc:	ldrb	w0, [x25, #1161]
  4287e0:	cbz	w0, 428c18 <ferror@plt+0x25ee8>
  4287e4:	cbz	x26, 4287ec <ferror@plt+0x25abc>
  4287e8:	str	x20, [x26]
  4287ec:	ldrb	w0, [x25, #1138]
  4287f0:	cbnz	w0, 428db0 <ferror@plt+0x26080>
  4287f4:	mov	w21, #0x1040                	// #4160
  4287f8:	movk	w21, #0x100, lsl #16
  4287fc:	ldrb	w0, [x25, #1139]
  428800:	cbz	w0, 428c5c <ferror@plt+0x25f2c>
  428804:	ldrb	w1, [x25, #1120]
  428808:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  42880c:	add	x0, x0, #0x928
  428810:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428814:	add	x4, x4, #0x900
  428818:	cmp	w1, #0x0
  42881c:	csel	x4, x4, x0, ne  // ne = any
  428820:	ldrb	w0, [x25, #1152]
  428824:	cbz	w0, 428d00 <ferror@plt+0x25fd0>
  428828:	mov	w3, #0x0                   	// #0
  42882c:	mov	w2, w27
  428830:	mov	w1, #0x7                   	// #7
  428834:	mov	x0, x25
  428838:	bl	426c74 <ferror@plt+0x23f44>
  42883c:	b	428c5c <ferror@plt+0x25f2c>
  428840:	cmp	w24, #0x2
  428844:	b.ne	428874 <ferror@plt+0x25b44>  // b.any
  428848:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  42884c:	add	x4, x4, #0xb20
  428850:	mov	w3, #0x0                   	// #0
  428854:	mov	w2, w27
  428858:	mov	w1, #0x3                   	// #3
  42885c:	mov	x0, x25
  428860:	bl	426bfc <ferror@plt+0x23ecc>
  428864:	mov	w21, #0x0                   	// #0
  428868:	ldp	x19, x20, [sp, #16]
  42886c:	ldp	x23, x24, [sp, #48]
  428870:	b	4285f8 <ferror@plt+0x258c8>
  428874:	mov	x19, x20
  428878:	cmp	w24, #0x10
  42887c:	eor	w6, w6, #0x1
  428880:	csel	w20, w6, wzr, eq  // eq = none
  428884:	cbnz	w20, 428934 <ferror@plt+0x25c04>
  428888:	b.eq	428960 <ferror@plt+0x25c30>  // b.none
  42888c:	cmp	w23, #0x2
  428890:	b.eq	42899c <ferror@plt+0x25c6c>  // b.none
  428894:	cbnz	w22, 428ac0 <ferror@plt+0x25d90>
  428898:	sub	x20, x28, x19
  42889c:	mov	x2, x20
  4288a0:	mov	x1, x19
  4288a4:	mov	x0, x25
  4288a8:	bl	427000 <ferror@plt+0x242d0>
  4288ac:	mov	w21, w0
  4288b0:	cbnz	w0, 428b1c <ferror@plt+0x25dec>
  4288b4:	ldrb	w0, [x25, #1161]
  4288b8:	cbz	w0, 428aec <ferror@plt+0x25dbc>
  4288bc:	cbz	x26, 4288c4 <ferror@plt+0x25b94>
  4288c0:	str	x19, [x26]
  4288c4:	mov	w21, #0x40                  	// #64
  4288c8:	movk	w21, #0x100, lsl #16
  4288cc:	cmp	x19, x28
  4288d0:	b.eq	4288f4 <ferror@plt+0x25bc4>  // b.none
  4288d4:	ldrb	w0, [x25, #1138]
  4288d8:	cbnz	w0, 428b68 <ferror@plt+0x25e38>
  4288dc:	mov	w21, #0x40                  	// #64
  4288e0:	movk	w21, #0x100, lsl #16
  4288e4:	ubfx	x22, x21, #14, #1
  4288e8:	cmp	w22, #0x0
  4288ec:	ccmp	w24, #0xa, #0x4, ne  // ne = any
  4288f0:	b.ne	428bc4 <ferror@plt+0x25e94>  // b.any
  4288f4:	tst	w21, #0x300000
  4288f8:	b.eq	428b3c <ferror@plt+0x25e0c>  // b.none
  4288fc:	ldrb	w0, [x25, #1154]
  428900:	cbnz	w0, 428bf8 <ferror@plt+0x25ec8>
  428904:	orr	w19, w21, #0x2
  428908:	tbz	w21, #13, 428c74 <ferror@plt+0x25f44>
  42890c:	ldrb	w0, [x25, #1154]
  428910:	cbz	w0, 428c74 <ferror@plt+0x25f44>
  428914:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428918:	add	x4, x4, #0xd58
  42891c:	mov	w3, #0x0                   	// #0
  428920:	mov	w2, w27
  428924:	mov	w1, #0x2                   	// #2
  428928:	mov	x0, x25
  42892c:	bl	426bfc <ferror@plt+0x23ecc>
  428930:	b	428c6c <ferror@plt+0x25f3c>
  428934:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428938:	add	x4, x4, #0xb50
  42893c:	mov	w3, #0x0                   	// #0
  428940:	mov	w2, w27
  428944:	mov	w1, #0x3                   	// #3
  428948:	mov	x0, x25
  42894c:	bl	426bfc <ferror@plt+0x23ecc>
  428950:	mov	w21, #0x0                   	// #0
  428954:	ldp	x19, x20, [sp, #16]
  428958:	ldp	x23, x24, [sp, #48]
  42895c:	b	4285f8 <ferror@plt+0x258c8>
  428960:	ldrb	w0, [x25, #1154]
  428964:	cbz	w0, 428994 <ferror@plt+0x25c64>
  428968:	ldrb	w0, [x25, #1127]
  42896c:	cbnz	w0, 428994 <ferror@plt+0x25c64>
  428970:	ldrb	w0, [x25, #1120]
  428974:	cbz	w0, 4289fc <ferror@plt+0x25ccc>
  428978:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  42897c:	add	x4, x4, #0xb80
  428980:	mov	w3, #0x0                   	// #0
  428984:	mov	w2, w27
  428988:	mov	w1, #0x2                   	// #2
  42898c:	mov	x0, x25
  428990:	bl	426bfc <ferror@plt+0x23ecc>
  428994:	cmp	w23, #0x2
  428998:	b.ne	428a94 <ferror@plt+0x25d64>  // b.any
  42899c:	ldrb	w0, [x19]
  4289a0:	sub	w0, w0, #0x2b
  4289a4:	and	w0, w0, #0xfffffffd
  4289a8:	tst	w0, #0xff
  4289ac:	cinc	x19, x19, eq  // eq = none
  4289b0:	ldrb	w1, [x19]
  4289b4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4289b8:	add	x0, x0, #0x28
  4289bc:	ldrh	w0, [x0, w1, sxtw #1]
  4289c0:	tbz	w0, #2, 428a1c <ferror@plt+0x25cec>
  4289c4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4289c8:	add	x0, x0, #0x28
  4289cc:	ldrb	w1, [x19]
  4289d0:	mov	w22, w20
  4289d4:	cmp	w1, #0x27
  4289d8:	b.eq	428a84 <ferror@plt+0x25d54>  // b.none
  4289dc:	ldrb	w1, [x19, #1]!
  4289e0:	ldrh	w2, [x0, w1, sxtw #1]
  4289e4:	tbnz	w2, #2, 4289cc <ferror@plt+0x25c9c>
  4289e8:	cmp	w1, #0x27
  4289ec:	b.ne	428894 <ferror@plt+0x25b64>  // b.any
  4289f0:	ldrb	w1, [x25, #1166]
  4289f4:	cbnz	w1, 4289cc <ferror@plt+0x25c9c>
  4289f8:	b	428894 <ferror@plt+0x25b64>
  4289fc:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428a00:	add	x4, x4, #0xbb0
  428a04:	mov	w3, #0x0                   	// #0
  428a08:	mov	w2, w27
  428a0c:	mov	w1, #0x2                   	// #2
  428a10:	mov	x0, x25
  428a14:	bl	426bfc <ferror@plt+0x23ecc>
  428a18:	b	428994 <ferror@plt+0x25c64>
  428a1c:	cmp	w1, #0x27
  428a20:	b.ne	428a2c <ferror@plt+0x25cfc>  // b.any
  428a24:	ldrb	w0, [x25, #1166]
  428a28:	cbnz	w0, 428a58 <ferror@plt+0x25d28>
  428a2c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428a30:	add	x4, x4, #0xbe0
  428a34:	mov	w3, #0x0                   	// #0
  428a38:	mov	w2, w27
  428a3c:	mov	w1, #0x3                   	// #3
  428a40:	mov	x0, x25
  428a44:	bl	426bfc <ferror@plt+0x23ecc>
  428a48:	mov	w21, #0x0                   	// #0
  428a4c:	ldp	x19, x20, [sp, #16]
  428a50:	ldp	x23, x24, [sp, #48]
  428a54:	b	4285f8 <ferror@plt+0x258c8>
  428a58:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428a5c:	add	x4, x4, #0xa50
  428a60:	mov	w3, #0x0                   	// #0
  428a64:	mov	w2, w27
  428a68:	mov	w1, #0x3                   	// #3
  428a6c:	mov	x0, x25
  428a70:	bl	426bfc <ferror@plt+0x23ecc>
  428a74:	mov	w21, #0x0                   	// #0
  428a78:	ldp	x19, x20, [sp, #16]
  428a7c:	ldp	x23, x24, [sp, #48]
  428a80:	b	4285f8 <ferror@plt+0x258c8>
  428a84:	ldrb	w1, [x25, #1166]
  428a88:	cmp	w1, #0x0
  428a8c:	cset	w22, ne  // ne = any
  428a90:	b	4289dc <ferror@plt+0x25cac>
  428a94:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428a98:	add	x4, x4, #0xbf8
  428a9c:	mov	w3, #0x0                   	// #0
  428aa0:	mov	w2, w27
  428aa4:	mov	w1, #0x3                   	// #3
  428aa8:	mov	x0, x25
  428aac:	bl	426bfc <ferror@plt+0x23ecc>
  428ab0:	mov	w21, #0x0                   	// #0
  428ab4:	ldp	x19, x20, [sp, #16]
  428ab8:	ldp	x23, x24, [sp, #48]
  428abc:	b	4285f8 <ferror@plt+0x258c8>
  428ac0:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428ac4:	add	x4, x4, #0xa78
  428ac8:	mov	w3, #0x0                   	// #0
  428acc:	mov	w2, w27
  428ad0:	mov	w1, #0x3                   	// #3
  428ad4:	mov	x0, x25
  428ad8:	bl	426bfc <ferror@plt+0x23ecc>
  428adc:	mov	w21, #0x0                   	// #0
  428ae0:	ldp	x19, x20, [sp, #16]
  428ae4:	ldp	x23, x24, [sp, #48]
  428ae8:	b	4285f8 <ferror@plt+0x258c8>
  428aec:	mov	x6, x19
  428af0:	mov	w5, w20
  428af4:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428af8:	add	x4, x4, #0xc30
  428afc:	mov	w3, #0x0                   	// #0
  428b00:	mov	w2, w27
  428b04:	mov	w1, #0x3                   	// #3
  428b08:	mov	x0, x25
  428b0c:	bl	426bfc <ferror@plt+0x23ecc>
  428b10:	ldp	x19, x20, [sp, #16]
  428b14:	ldp	x23, x24, [sp, #48]
  428b18:	b	4285f8 <ferror@plt+0x258c8>
  428b1c:	cmp	x19, x28
  428b20:	b.eq	428b2c <ferror@plt+0x25dfc>  // b.none
  428b24:	ldrb	w0, [x25, #1138]
  428b28:	cbnz	w0, 428b70 <ferror@plt+0x25e40>
  428b2c:	cmp	w21, #0x20
  428b30:	b.ne	4288e4 <ferror@plt+0x25bb4>  // b.any
  428b34:	ldrb	w0, [x25, #1154]
  428b38:	cbnz	w0, 428ba4 <ferror@plt+0x25e74>
  428b3c:	cbz	w22, 428904 <ferror@plt+0x25bd4>
  428b40:	ldrb	w0, [x25, #1154]
  428b44:	cbz	w0, 428904 <ferror@plt+0x25bd4>
  428b48:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428b4c:	add	x4, x4, #0xcf8
  428b50:	mov	w3, #0x0                   	// #0
  428b54:	mov	w2, w27
  428b58:	mov	w1, #0x2                   	// #2
  428b5c:	mov	x0, x25
  428b60:	bl	426bfc <ferror@plt+0x23ecc>
  428b64:	b	428904 <ferror@plt+0x25bd4>
  428b68:	mov	w21, #0x40                  	// #64
  428b6c:	movk	w21, #0x100, lsl #16
  428b70:	mov	x0, x25
  428b74:	bl	4358dc <ferror@plt+0x32bac>
  428b78:	cbnz	w0, 428b2c <ferror@plt+0x25dfc>
  428b7c:	mov	x6, x19
  428b80:	mov	w5, w20
  428b84:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428b88:	add	x4, x4, #0xc60
  428b8c:	mov	w3, #0x0                   	// #0
  428b90:	mov	w2, w27
  428b94:	mov	w1, #0x6                   	// #6
  428b98:	mov	x0, x25
  428b9c:	bl	426c74 <ferror@plt+0x23f44>
  428ba0:	b	428b2c <ferror@plt+0x25dfc>
  428ba4:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428ba8:	add	x4, x4, #0xc88
  428bac:	mov	w3, #0x0                   	// #0
  428bb0:	mov	w2, w27
  428bb4:	mov	w1, #0x2                   	// #2
  428bb8:	mov	x0, x25
  428bbc:	bl	426bfc <ferror@plt+0x23ecc>
  428bc0:	b	428b3c <ferror@plt+0x25e0c>
  428bc4:	mov	x6, x19
  428bc8:	mov	w5, w20
  428bcc:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428bd0:	add	x4, x4, #0xcb8
  428bd4:	mov	w3, #0x0                   	// #0
  428bd8:	mov	w2, w27
  428bdc:	mov	w1, #0x3                   	// #3
  428be0:	mov	x0, x25
  428be4:	bl	426bfc <ferror@plt+0x23ecc>
  428be8:	mov	w21, #0x0                   	// #0
  428bec:	ldp	x19, x20, [sp, #16]
  428bf0:	ldp	x23, x24, [sp, #48]
  428bf4:	b	4285f8 <ferror@plt+0x258c8>
  428bf8:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428bfc:	add	x4, x4, #0xaa0
  428c00:	mov	w3, #0x0                   	// #0
  428c04:	mov	w2, w27
  428c08:	mov	w1, #0x2                   	// #2
  428c0c:	mov	x0, x25
  428c10:	bl	426bfc <ferror@plt+0x23ecc>
  428c14:	b	428b3c <ferror@plt+0x25e0c>
  428c18:	mov	x6, x20
  428c1c:	mov	w5, w28
  428c20:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428c24:	add	x4, x4, #0xd28
  428c28:	mov	w3, #0x0                   	// #0
  428c2c:	mov	w2, w27
  428c30:	mov	w1, #0x3                   	// #3
  428c34:	mov	x0, x25
  428c38:	bl	426bfc <ferror@plt+0x23ecc>
  428c3c:	ldp	x19, x20, [sp, #16]
  428c40:	ldp	x23, x24, [sp, #48]
  428c44:	b	4285f8 <ferror@plt+0x258c8>
  428c48:	ldrb	w0, [x25, #1138]
  428c4c:	cbnz	w0, 428c9c <ferror@plt+0x25f6c>
  428c50:	and	w0, w21, #0xf0
  428c54:	cmp	w0, #0x40
  428c58:	b.eq	4287fc <ferror@plt+0x25acc>  // b.none
  428c5c:	orr	w19, w21, #0x1
  428c60:	tbz	w19, #13, 428c6c <ferror@plt+0x25f3c>
  428c64:	ldrb	w0, [x25, #1154]
  428c68:	cbnz	w0, 428914 <ferror@plt+0x25be4>
  428c6c:	cmp	w24, #0x2
  428c70:	b.eq	428d18 <ferror@plt+0x25fe8>  // b.none
  428c74:	cmp	w24, #0xa
  428c78:	b.eq	428d68 <ferror@plt+0x26038>  // b.none
  428c7c:	cmp	w24, #0x10
  428c80:	b.eq	428d78 <ferror@plt+0x26048>  // b.none
  428c84:	orr	w21, w19, #0x400
  428c88:	cmp	w24, #0x2
  428c8c:	b.eq	428d58 <ferror@plt+0x26028>  // b.none
  428c90:	ldp	x19, x20, [sp, #16]
  428c94:	ldp	x23, x24, [sp, #48]
  428c98:	b	4285f8 <ferror@plt+0x258c8>
  428c9c:	mov	x0, x25
  428ca0:	bl	4358dc <ferror@plt+0x32bac>
  428ca4:	cbnz	w0, 428c50 <ferror@plt+0x25f20>
  428ca8:	and	w0, w21, #0x3000
  428cac:	and	w1, w21, #0xf0
  428cb0:	cmp	w1, #0x40
  428cb4:	b.eq	428cf0 <ferror@plt+0x25fc0>  // b.none
  428cb8:	cbz	w0, 428c5c <ferror@plt+0x25f2c>
  428cbc:	mov	w1, #0x6                   	// #6
  428cc0:	mov	x6, x20
  428cc4:	mov	w5, w28
  428cc8:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428ccc:	add	x4, x4, #0xc60
  428cd0:	mov	w3, #0x0                   	// #0
  428cd4:	mov	w2, w27
  428cd8:	mov	x0, x25
  428cdc:	bl	426c74 <ferror@plt+0x23f44>
  428ce0:	b	428c50 <ferror@plt+0x25f20>
  428ce4:	mov	w21, #0x1040                	// #4160
  428ce8:	movk	w21, #0x100, lsl #16
  428cec:	mov	w0, #0x1000                	// #4096
  428cf0:	ldrb	w1, [x25, #1139]
  428cf4:	cbz	w1, 428da4 <ferror@plt+0x26074>
  428cf8:	mov	w1, #0x7                   	// #7
  428cfc:	b	428cc0 <ferror@plt+0x25f90>
  428d00:	mov	w3, #0x0                   	// #0
  428d04:	mov	w2, w27
  428d08:	mov	w1, #0x7                   	// #7
  428d0c:	mov	x0, x25
  428d10:	bl	426cf0 <ferror@plt+0x23fc0>
  428d14:	b	428c5c <ferror@plt+0x25f2c>
  428d18:	ldrb	w0, [x25, #1165]
  428d1c:	cbnz	w0, 428d58 <ferror@plt+0x26028>
  428d20:	ldrb	w0, [x25, #1154]
  428d24:	cbz	w0, 428d58 <ferror@plt+0x26028>
  428d28:	ldrb	w1, [x25, #1120]
  428d2c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  428d30:	add	x0, x0, #0x988
  428d34:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  428d38:	add	x4, x4, #0x950
  428d3c:	cmp	w1, #0x0
  428d40:	csel	x4, x4, x0, ne  // ne = any
  428d44:	mov	w3, #0x0                   	// #0
  428d48:	mov	w2, w27
  428d4c:	mov	w1, #0x2                   	// #2
  428d50:	mov	x0, x25
  428d54:	bl	426bfc <ferror@plt+0x23ecc>
  428d58:	orr	w21, w19, #0x800
  428d5c:	ldp	x19, x20, [sp, #16]
  428d60:	ldp	x23, x24, [sp, #48]
  428d64:	b	4285f8 <ferror@plt+0x258c8>
  428d68:	orr	w21, w19, #0x100
  428d6c:	ldp	x19, x20, [sp, #16]
  428d70:	ldp	x23, x24, [sp, #48]
  428d74:	b	4285f8 <ferror@plt+0x258c8>
  428d78:	orr	w21, w19, #0x200
  428d7c:	ldp	x19, x20, [sp, #16]
  428d80:	ldp	x23, x24, [sp, #48]
  428d84:	b	4285f8 <ferror@plt+0x258c8>
  428d88:	mov	w21, #0x111                 	// #273
  428d8c:	b	4285f8 <ferror@plt+0x258c8>
  428d90:	ldrb	w0, [x25, #1154]
  428d94:	mov	w24, #0xa                   	// #10
  428d98:	cbz	w0, 428c74 <ferror@plt+0x25f44>
  428d9c:	mov	w24, #0xa                   	// #10
  428da0:	b	42878c <ferror@plt+0x25a5c>
  428da4:	cbz	w0, 4287fc <ferror@plt+0x25acc>
  428da8:	mov	w1, #0x6                   	// #6
  428dac:	b	428cc0 <ferror@plt+0x25f90>
  428db0:	mov	x0, x25
  428db4:	bl	4358dc <ferror@plt+0x32bac>
  428db8:	cbz	w0, 428ce4 <ferror@plt+0x25fb4>
  428dbc:	mov	w21, #0x1040                	// #4160
  428dc0:	movk	w21, #0x100, lsl #16
  428dc4:	b	428c50 <ferror@plt+0x25f20>
  428dc8:	add	x28, x8, w28, uxtw
  428dcc:	mov	w0, #0x27                  	// #39
  428dd0:	cmp	w24, #0x10
  428dd4:	b.eq	4286bc <ferror@plt+0x2598c>  // b.none
  428dd8:	cbnz	w22, 42874c <ferror@plt+0x25a1c>
  428ddc:	cmp	w23, #0x0
  428de0:	ccmp	w24, #0x10, #0x4, eq  // eq = none
  428de4:	b.eq	4287ac <ferror@plt+0x25a7c>  // b.none
  428de8:	sub	x2, x28, x20
  428dec:	mov	x1, x20
  428df0:	mov	x0, x25
  428df4:	bl	427000 <ferror@plt+0x242d0>
  428df8:	tst	w0, #0x300000
  428dfc:	b.ne	428778 <ferror@plt+0x25a48>  // b.any
  428e00:	cmp	w21, w24
  428e04:	b.cs	4286e0 <ferror@plt+0x259b0>  // b.hs, b.nlast
  428e08:	b	4287c0 <ferror@plt+0x25a90>
  428e0c:	stp	x29, x30, [sp, #-224]!
  428e10:	mov	x29, sp
  428e14:	stp	x19, x20, [sp, #16]
  428e18:	stp	x21, x22, [sp, #32]
  428e1c:	stp	x23, x24, [sp, #48]
  428e20:	mov	x19, x8
  428e24:	mov	x22, x0
  428e28:	mov	w23, w2
  428e2c:	str	xzr, [x8, #8]
  428e30:	str	xzr, [x8]
  428e34:	ubfx	x0, x23, #12, #1
  428e38:	strb	w0, [x8, #16]
  428e3c:	strb	wzr, [x8, #17]
  428e40:	ldr	x2, [x1, #16]
  428e44:	ldr	w21, [x1, #8]
  428e48:	cmp	w21, #0x1
  428e4c:	b.eq	428edc <ferror@plt+0x261ac>  // b.none
  428e50:	stp	x25, x26, [sp, #64]
  428e54:	stp	x27, x28, [sp, #80]
  428e58:	ldr	x28, [x22, #1208]
  428e5c:	and	w0, w23, #0xf00
  428e60:	add	x20, x2, #0x1
  428e64:	mov	w25, #0x8                   	// #8
  428e68:	cmp	w0, #0x400
  428e6c:	b.eq	428e90 <ferror@plt+0x26160>  // b.none
  428e70:	add	x20, x2, #0x2
  428e74:	mov	w25, #0x10                  	// #16
  428e78:	cmp	w0, #0x200
  428e7c:	b.eq	428e90 <ferror@plt+0x26160>  // b.none
  428e80:	mov	x20, x2
  428e84:	mov	w25, #0xa                   	// #10
  428e88:	cmp	w0, #0x800
  428e8c:	b.eq	428f00 <ferror@plt+0x261d0>  // b.none
  428e90:	neg	w0, w28
  428e94:	mov	x1, #0xffffffffffffffff    	// #-1
  428e98:	lsr	x0, x1, x0
  428e9c:	cmp	x28, #0x40
  428ea0:	csel	x0, x0, x1, cc  // cc = lo, ul, last
  428ea4:	add	x21, x2, w21, uxtw
  428ea8:	mov	w27, w25
  428eac:	sub	x0, x0, x27
  428eb0:	add	x0, x0, #0x1
  428eb4:	udiv	x0, x0, x27
  428eb8:	add	x0, x0, #0x1
  428ebc:	cmp	x20, x21
  428ec0:	b.cs	428fac <ferror@plt+0x2627c>  // b.hs, b.nlast
  428ec4:	str	wzr, [sp, #108]
  428ec8:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  428ecc:	add	x24, x24, #0x28
  428ed0:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x29c60>
  428ed4:	add	x26, x26, #0xc78
  428ed8:	b	428f78 <ferror@plt+0x26248>
  428edc:	ldrb	w0, [x2]
  428ee0:	sub	w0, w0, #0x30
  428ee4:	sxtw	x0, w0
  428ee8:	str	x0, [x8, #8]
  428eec:	ldp	x19, x20, [sp, #16]
  428ef0:	ldp	x21, x22, [sp, #32]
  428ef4:	ldp	x23, x24, [sp, #48]
  428ef8:	ldp	x29, x30, [sp], #224
  428efc:	ret
  428f00:	add	x20, x2, #0x2
  428f04:	mov	w25, #0x2                   	// #2
  428f08:	b	428e90 <ferror@plt+0x26160>
  428f0c:	tbz	w2, #8, 428f90 <ferror@plt+0x26260>
  428f10:	ldrb	w2, [x26, w1, sxtw]
  428f14:	ldr	x1, [x19, #8]
  428f18:	cmp	x0, x1
  428f1c:	b.hi	428f60 <ferror@plt+0x26230>  // b.pmore
  428f20:	ldr	x3, [x19]
  428f24:	ldrb	w7, [x19, #16]
  428f28:	cmp	xzr, x3, lsr #60
  428f2c:	cset	w6, ne  // ne = any
  428f30:	lsl	x5, x1, #4
  428f34:	extr	x4, x3, x1, #60
  428f38:	add	x0, x5, w2, uxtb
  428f3c:	str	x0, [sp, #112]
  428f40:	cmp	x5, x0
  428f44:	b.hi	429100 <ferror@plt+0x263d0>  // b.pmore
  428f48:	str	x4, [sp, #120]
  428f4c:	b	42906c <ferror@plt+0x2633c>
  428f50:	ldrb	w2, [x26, w1, sxtw]
  428f54:	ldr	x1, [x19, #8]
  428f58:	cmp	x1, x0
  428f5c:	b.cs	429004 <ferror@plt+0x262d4>  // b.hs, b.nlast
  428f60:	and	x2, x2, #0xff
  428f64:	madd	x1, x27, x1, x2
  428f68:	str	x1, [x19, #8]
  428f6c:	add	x20, x20, #0x1
  428f70:	cmp	x21, x20
  428f74:	b.eq	428fa0 <ferror@plt+0x26270>  // b.none
  428f78:	ldrb	w1, [x20]
  428f7c:	mov	w2, w1
  428f80:	ldrh	w2, [x24, x2, lsl #1]
  428f84:	tbnz	w2, #2, 428f50 <ferror@plt+0x26220>
  428f88:	cmp	w25, #0x10
  428f8c:	b.eq	428f0c <ferror@plt+0x261dc>  // b.none
  428f90:	cmp	w1, #0x27
  428f94:	b.ne	428fa0 <ferror@plt+0x26270>  // b.any
  428f98:	ldrb	w1, [x22, #1166]
  428f9c:	cbnz	w1, 428f6c <ferror@plt+0x2623c>
  428fa0:	ldr	w0, [sp, #108]
  428fa4:	cbz	w0, 428fac <ferror@plt+0x2627c>
  428fa8:	tbz	w23, #24, 429118 <ferror@plt+0x263e8>
  428fac:	ldrb	w0, [x19, #16]
  428fb0:	cbnz	w0, 429170 <ferror@plt+0x26440>
  428fb4:	ldrb	w0, [x22, #1160]
  428fb8:	cbz	w0, 428fc4 <ferror@plt+0x26294>
  428fbc:	ldrb	w0, [x22, #16]
  428fc0:	cbnz	w0, 42917c <ferror@plt+0x2644c>
  428fc4:	ldp	x0, x1, [x19]
  428fc8:	stp	x0, x1, [sp, #128]
  428fcc:	ldr	x0, [x19, #16]
  428fd0:	str	x0, [sp, #144]
  428fd4:	mov	x1, x28
  428fd8:	add	x0, sp, #0x80
  428fdc:	bl	427878 <ferror@plt+0x24b48>
  428fe0:	and	w0, w0, #0xff
  428fe4:	cbnz	w0, 429188 <ferror@plt+0x26458>
  428fe8:	cmp	w25, #0xa
  428fec:	b.eq	429138 <ferror@plt+0x26408>  // b.none
  428ff0:	mov	w0, #0x1                   	// #1
  428ff4:	strb	w0, [x19, #16]
  428ff8:	ldp	x25, x26, [sp, #64]
  428ffc:	ldp	x27, x28, [sp, #80]
  429000:	b	428eec <ferror@plt+0x261bc>
  429004:	ldr	x3, [x19]
  429008:	ldrb	w7, [x19, #16]
  42900c:	cmp	w25, #0x2
  429010:	b.eq	42915c <ferror@plt+0x2642c>  // b.none
  429014:	cmp	w25, #0x10
  429018:	b.eq	428f28 <ferror@plt+0x261f8>  // b.none
  42901c:	cmp	xzr, x3, lsr #61
  429020:	cset	w6, ne  // ne = any
  429024:	lsl	x5, x1, #3
  429028:	extr	x4, x3, x1, #61
  42902c:	cmp	w25, #0xa
  429030:	b.ne	428f38 <ferror@plt+0x26208>  // b.any
  429034:	lsl	x8, x1, #1
  429038:	lsr	x0, x1, #63
  42903c:	add	x1, x0, x3, lsl #1
  429040:	add	x2, x8, w2, uxtb
  429044:	cmp	x8, x2
  429048:	b.ls	429050 <ferror@plt+0x26320>  // b.plast
  42904c:	add	x1, x1, #0x1
  429050:	adds	x0, x5, x2
  429054:	str	x0, [sp, #112]
  429058:	b.cc	429060 <ferror@plt+0x26330>  // b.lo, b.ul, b.last
  42905c:	add	x1, x1, #0x1
  429060:	adds	x0, x1, x4
  429064:	str	x0, [sp, #120]
  429068:	csinc	w6, w6, wzr, cc  // cc = lo, ul, last
  42906c:	ldr	x0, [sp, #120]
  429070:	str	x0, [sp, #200]
  429074:	ldr	x0, [sp, #112]
  429078:	str	x0, [sp, #208]
  42907c:	strb	w7, [sp, #216]
  429080:	strb	w6, [sp, #217]
  429084:	ldp	x0, x1, [sp, #200]
  429088:	stp	x0, x1, [sp, #128]
  42908c:	ldr	x0, [sp, #216]
  429090:	str	x0, [sp, #144]
  429094:	add	x8, sp, #0xa0
  429098:	mov	x1, x28
  42909c:	add	x0, sp, #0x80
  4290a0:	bl	427814 <ferror@plt+0x24ae4>
  4290a4:	ldr	x1, [sp, #160]
  4290a8:	ldr	x0, [sp, #168]
  4290ac:	str	x1, [sp, #200]
  4290b0:	str	x0, [sp, #208]
  4290b4:	ldr	x0, [sp, #176]
  4290b8:	str	x0, [sp, #216]
  4290bc:	ubfx	w0, w0, #8, #8
  4290c0:	ldr	x2, [sp, #208]
  4290c4:	ldr	x3, [sp, #112]
  4290c8:	cmp	x3, x2
  4290cc:	b.eq	429108 <ferror@plt+0x263d8>  // b.none
  4290d0:	mov	w0, #0x1                   	// #1
  4290d4:	strb	w0, [sp, #217]
  4290d8:	ldp	x0, x1, [sp, #200]
  4290dc:	stp	x0, x1, [x19]
  4290e0:	ldr	x0, [sp, #216]
  4290e4:	str	x0, [x19, #16]
  4290e8:	ubfx	w0, w0, #8, #8
  4290ec:	ldr	w1, [sp, #108]
  4290f0:	orr	w0, w0, w1
  4290f4:	str	w0, [sp, #108]
  4290f8:	mov	x0, #0x0                   	// #0
  4290fc:	b	428f6c <ferror@plt+0x2623c>
  429100:	mov	x1, #0x0                   	// #0
  429104:	b	42905c <ferror@plt+0x2632c>
  429108:	ldr	x2, [sp, #120]
  42910c:	cmp	x2, x1
  429110:	csinc	w0, w0, wzr, eq  // eq = none
  429114:	b	4290d4 <ferror@plt+0x263a4>
  429118:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  42911c:	add	x2, x2, #0xd80
  429120:	mov	w1, #0x2                   	// #2
  429124:	mov	x0, x22
  429128:	bl	426a10 <ferror@plt+0x23ce0>
  42912c:	ldp	x25, x26, [sp, #64]
  429130:	ldp	x27, x28, [sp, #80]
  429134:	b	428eec <ferror@plt+0x261bc>
  429138:	ldrb	w0, [x22, #1152]
  42913c:	cmp	w0, #0x0
  429140:	cset	w1, ne  // ne = any
  429144:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  429148:	add	x2, x2, #0xdb0
  42914c:	lsl	w1, w1, #1
  429150:	mov	x0, x22
  429154:	bl	426a10 <ferror@plt+0x23ce0>
  429158:	b	428ff0 <ferror@plt+0x262c0>
  42915c:	cmp	x3, #0x0
  429160:	cset	w6, lt  // lt = tstop
  429164:	lsl	x5, x1, #1
  429168:	extr	x4, x3, x1, #63
  42916c:	b	428f38 <ferror@plt+0x26208>
  429170:	ldp	x25, x26, [sp, #64]
  429174:	ldp	x27, x28, [sp, #80]
  429178:	b	428eec <ferror@plt+0x261bc>
  42917c:	ldp	x25, x26, [sp, #64]
  429180:	ldp	x27, x28, [sp, #80]
  429184:	b	428eec <ferror@plt+0x261bc>
  429188:	ldp	x25, x26, [sp, #64]
  42918c:	ldp	x27, x28, [sp, #80]
  429190:	b	428eec <ferror@plt+0x261bc>
  429194:	stp	x29, x30, [sp, #-48]!
  429198:	mov	x29, sp
  42919c:	stp	x19, x20, [sp, #16]
  4291a0:	str	x21, [sp, #32]
  4291a4:	mov	x20, x0
  4291a8:	ldr	x0, [x0, #1096]
  4291ac:	ldr	x21, [x20, #1104]
  4291b0:	sub	x21, x21, x0
  4291b4:	asr	x19, x21, #3
  4291b8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  4291bc:	movk	x1, #0xcccd
  4291c0:	mul	x19, x19, x1
  4291c4:	add	x19, x19, #0xa
  4291c8:	add	x19, x19, x19, lsl #2
  4291cc:	lsl	x19, x19, #4
  4291d0:	mov	x1, x19
  4291d4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4291d8:	str	x0, [x20, #1096]
  4291dc:	add	x19, x0, x19
  4291e0:	str	x19, [x20, #1104]
  4291e4:	add	x0, x0, x21
  4291e8:	ldp	x19, x20, [sp, #16]
  4291ec:	ldr	x21, [sp, #32]
  4291f0:	ldp	x29, x30, [sp], #48
  4291f4:	ret
  4291f8:	sub	sp, sp, #0x270
  4291fc:	stp	x29, x30, [sp]
  429200:	mov	x29, sp
  429204:	stp	x19, x20, [sp, #16]
  429208:	stp	x21, x22, [sp, #32]
  42920c:	stp	x23, x24, [sp, #48]
  429210:	stp	x25, x26, [sp, #64]
  429214:	stp	x27, x28, [sp, #80]
  429218:	mov	x26, x0
  42921c:	and	w0, w1, #0xff
  429220:	str	w0, [sp, #212]
  429224:	ldr	x28, [x26, #1096]
  429228:	str	wzr, [sp, #452]
  42922c:	str	wzr, [x26, #28]
  429230:	str	xzr, [x26, #432]
  429234:	mov	w0, #0x16                  	// #22
  429238:	str	w0, [x28, #36]
  42923c:	mov	w0, #0x1                   	// #1
  429240:	str	w0, [sp, #128]
  429244:	str	wzr, [sp, #196]
  429248:	str	wzr, [sp, #116]
  42924c:	add	x0, sp, #0x120
  429250:	str	x0, [sp, #216]
  429254:	add	x1, sp, #0x100
  429258:	str	x1, [sp, #136]
  42925c:	str	x0, [sp, #176]
  429260:	mov	x27, x26
  429264:	b	42a810 <ferror@plt+0x27ae0>
  429268:	cmp	w0, #0x35
  42926c:	b.eq	42ad54 <ferror@plt+0x28024>  // b.none
  429270:	cmp	w0, #0x35
  429274:	b.ls	429298 <ferror@plt+0x26568>  // b.plast
  429278:	sub	w1, w0, #0x37
  42927c:	and	w1, w1, #0xff
  429280:	cmp	w1, #0x5
  429284:	b.hi	4297e4 <ferror@plt+0x26ab4>  // b.pmore
  429288:	ldr	w1, [sp, #128]
  42928c:	cbnz	w1, 4292fc <ferror@plt+0x265cc>
  429290:	mov	x26, x27
  429294:	b	4292ac <ferror@plt+0x2657c>
  429298:	cmp	w0, #0x25
  42929c:	b.ne	4297d4 <ferror@plt+0x26aa4>  // b.any
  4292a0:	ldr	w0, [sp, #128]
  4292a4:	cbnz	w0, 42ad64 <ferror@plt+0x28034>
  4292a8:	mov	x26, x27
  4292ac:	ldr	x1, [sp, #120]
  4292b0:	mov	x0, x26
  4292b4:	bl	431e54 <ferror@plt+0x2f124>
  4292b8:	mov	x5, x0
  4292bc:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4292c0:	add	x4, x4, #0xdf8
  4292c4:	mov	w3, #0x0                   	// #0
  4292c8:	ldr	w2, [sp, #132]
  4292cc:	mov	w1, #0x3                   	// #3
  4292d0:	mov	x0, x26
  4292d4:	bl	426bfc <ferror@plt+0x23ecc>
  4292d8:	mov	w0, #0x0                   	// #0
  4292dc:	ldp	x19, x20, [sp, #16]
  4292e0:	ldp	x21, x22, [sp, #32]
  4292e4:	ldp	x23, x24, [sp, #48]
  4292e8:	ldp	x25, x26, [sp, #64]
  4292ec:	ldp	x27, x28, [sp, #80]
  4292f0:	ldp	x29, x30, [sp]
  4292f4:	add	sp, sp, #0x270
  4292f8:	ret
  4292fc:	str	wzr, [sp, #400]
  429300:	cmp	w0, #0x37
  429304:	b.eq	429420 <ferror@plt+0x266f0>  // b.none
  429308:	b.ls	4293a4 <ferror@plt+0x26674>  // b.plast
  42930c:	sub	w0, w0, #0x38
  429310:	and	w0, w0, #0xff
  429314:	cmp	w0, #0x4
  429318:	b.hi	4296f4 <ferror@plt+0x269c4>  // b.pmore
  42931c:	add	x3, sp, #0x190
  429320:	add	x2, sp, #0x178
  429324:	ldr	x1, [sp, #120]
  429328:	mov	x0, x27
  42932c:	bl	422960 <ferror@plt+0x1fc30>
  429330:	mov	w1, w0
  429334:	ldr	w2, [sp, #400]
  429338:	cbnz	w2, 42971c <ferror@plt+0x269ec>
  42933c:	mov	x3, #0x0                   	// #0
  429340:	tbz	w0, #31, 42ad98 <ferror@plt+0x28068>
  429344:	mov	x0, #0xffffffffffffffff    	// #-1
  429348:	str	x0, [sp, #424]
  42934c:	orr	x1, x1, #0xffffffff00000000
  429350:	str	x1, [sp, #432]
  429354:	strb	wzr, [sp, #440]
  429358:	strb	wzr, [sp, #441]
  42935c:	add	x0, sp, #0x280
  429360:	ldp	x0, x1, [x0, #-216]
  429364:	stp	x0, x1, [sp, #256]
  429368:	ldr	x0, [sp, #440]
  42936c:	str	x0, [sp, #272]
  429370:	ldr	x8, [sp, #216]
  429374:	ldr	x1, [x27, #1208]
  429378:	ldr	x0, [sp, #136]
  42937c:	bl	427814 <ferror@plt+0x24ae4>
  429380:	ldr	x3, [sp, #288]
  429384:	ldr	x0, [sp, #296]
  429388:	str	x3, [sp, #424]
  42938c:	str	x0, [sp, #432]
  429390:	ldr	x2, [sp, #304]
  429394:	str	x2, [sp, #440]
  429398:	mov	x1, x0
  42939c:	ubfx	w2, w2, #8, #8
  4293a0:	b	42ad98 <ferror@plt+0x28068>
  4293a4:	cmp	w0, #0x25
  4293a8:	b.eq	42ad68 <ferror@plt+0x28038>  // b.none
  4293ac:	cmp	w0, #0x35
  4293b0:	b.ne	4296f4 <ferror@plt+0x269c4>  // b.any
  4293b4:	ldr	x0, [sp, #120]
  4293b8:	ldr	x0, [x0, #8]
  4293bc:	ldr	x1, [x27, #1248]
  4293c0:	cmp	x0, x1
  4293c4:	b.eq	4294ec <ferror@plt+0x267bc>  // b.none
  4293c8:	ldr	x1, [x27, #1288]
  4293cc:	cmp	x0, x1
  4293d0:	b.eq	429628 <ferror@plt+0x268f8>  // b.none
  4293d4:	ldr	x1, [x27, #1296]
  4293d8:	cmp	x0, x1
  4293dc:	b.eq	42964c <ferror@plt+0x2691c>  // b.none
  4293e0:	ldrb	w1, [x27, #1120]
  4293e4:	cbz	w1, 429400 <ferror@plt+0x266d0>
  4293e8:	ldr	x1, [x27, #1256]
  4293ec:	cmp	x0, x1
  4293f0:	b.eq	429670 <ferror@plt+0x26940>  // b.none
  4293f4:	ldr	x2, [x27, #1264]
  4293f8:	cmp	x0, x2
  4293fc:	b.eq	429670 <ferror@plt+0x26940>  // b.none
  429400:	ldrb	w2, [x27, #1149]
  429404:	cbz	w2, 429728 <ferror@plt+0x269f8>
  429408:	ldr	w1, [x27, #28]
  42940c:	cbz	w1, 429684 <ferror@plt+0x26954>
  429410:	mov	w2, #0x0                   	// #0
  429414:	mov	x1, #0x0                   	// #0
  429418:	mov	x3, #0x0                   	// #0
  42941c:	b	42ad98 <ferror@plt+0x28068>
  429420:	ldr	w3, [sp, #132]
  429424:	mov	x2, #0x0                   	// #0
  429428:	ldr	x1, [sp, #120]
  42942c:	mov	x0, x27
  429430:	bl	4283b4 <ferror@plt+0x25684>
  429434:	str	w0, [sp, #376]
  429438:	tbnz	w0, #24, 429480 <ferror@plt+0x26750>
  42943c:	ldr	w2, [sp, #376]
  429440:	and	w0, w2, #0xf
  429444:	cmp	w0, #0x1
  429448:	b.eq	429498 <ferror@plt+0x26768>  // b.none
  42944c:	cmp	w0, #0x2
  429450:	b.ne	42970c <ferror@plt+0x269dc>  // b.any
  429454:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  429458:	add	x4, x4, #0xe58
  42945c:	mov	w3, #0x0                   	// #0
  429460:	ldr	w2, [sp, #132]
  429464:	mov	w1, #0x3                   	// #3
  429468:	mov	x0, x27
  42946c:	bl	426bfc <ferror@plt+0x23ecc>
  429470:	mov	w2, #0x0                   	// #0
  429474:	mov	x1, #0x0                   	// #0
  429478:	mov	x3, #0x0                   	// #0
  42947c:	b	42ad98 <ferror@plt+0x28068>
  429480:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  429484:	add	x2, x2, #0xe28
  429488:	mov	w1, #0x3                   	// #3
  42948c:	mov	x0, x27
  429490:	bl	426a10 <ferror@plt+0x23ce0>
  429494:	b	42943c <ferror@plt+0x2670c>
  429498:	tbnz	w2, #13, 4294c0 <ferror@plt+0x26790>
  42949c:	add	x8, sp, #0x1c8
  4294a0:	ldr	x1, [sp, #120]
  4294a4:	mov	x0, x27
  4294a8:	bl	428e0c <ferror@plt+0x260dc>
  4294ac:	ldr	x3, [sp, #456]
  4294b0:	ldr	x1, [sp, #464]
  4294b4:	ldrb	w0, [sp, #472]
  4294b8:	ldrb	w2, [sp, #473]
  4294bc:	b	42adbc <ferror@plt+0x2808c>
  4294c0:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4294c4:	add	x4, x4, #0xe88
  4294c8:	mov	w3, #0x0                   	// #0
  4294cc:	ldr	w2, [sp, #132]
  4294d0:	mov	w1, #0x3                   	// #3
  4294d4:	mov	x0, x27
  4294d8:	bl	426bfc <ferror@plt+0x23ecc>
  4294dc:	mov	w2, #0x0                   	// #0
  4294e0:	mov	x1, #0x0                   	// #0
  4294e4:	mov	x3, #0x0                   	// #0
  4294e8:	b	42ad98 <ferror@plt+0x28068>
  4294ec:	ldr	x20, [x27, #136]
  4294f0:	ldrb	w0, [x27, #24]
  4294f4:	add	w0, w0, #0x1
  4294f8:	strb	w0, [x27, #24]
  4294fc:	mov	x0, x27
  429500:	bl	438a9c <ferror@plt+0x35d6c>
  429504:	mov	x19, x0
  429508:	ldrb	w0, [x0, #4]
  42950c:	cmp	w0, #0x14
  429510:	b.eq	42954c <ferror@plt+0x2681c>  // b.none
  429514:	cmp	w0, #0x35
  429518:	b.eq	42acd8 <ferror@plt+0x27fa8>  // b.none
  42951c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  429520:	add	x2, x2, #0xed8
  429524:	mov	w1, #0x3                   	// #3
  429528:	mov	x0, x27
  42952c:	bl	426a10 <ferror@plt+0x23ce0>
  429530:	ldrh	w0, [x19, #6]
  429534:	tbnz	w0, #4, 429594 <ferror@plt+0x26864>
  429538:	ldrb	w0, [x27, #24]
  42953c:	sub	w0, w0, #0x1
  429540:	strb	w0, [x27, #24]
  429544:	mov	w1, #0x0                   	// #0
  429548:	b	42ad38 <ferror@plt+0x28008>
  42954c:	mov	x0, x27
  429550:	bl	438a9c <ferror@plt+0x35d6c>
  429554:	mov	x19, x0
  429558:	ldrb	w0, [x0, #4]
  42955c:	cmp	w0, #0x35
  429560:	b.ne	42951c <ferror@plt+0x267ec>  // b.any
  429564:	ldr	x19, [x19, #8]
  429568:	mov	x0, x27
  42956c:	bl	438a9c <ferror@plt+0x35d6c>
  429570:	ldrb	w0, [x0, #4]
  429574:	cmp	w0, #0x15
  429578:	b.eq	42acdc <ferror@plt+0x27fac>  // b.none
  42957c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  429580:	add	x2, x2, #0xeb8
  429584:	mov	w1, #0x3                   	// #3
  429588:	mov	x0, x27
  42958c:	bl	426a10 <ferror@plt+0x23ce0>
  429590:	b	429538 <ferror@plt+0x26808>
  429594:	strh	wzr, [sp, #430]
  429598:	ldrb	w0, [x19, #4]
  42959c:	strb	w0, [sp, #428]
  4295a0:	mov	x1, x19
  4295a4:	mov	x0, x27
  4295a8:	bl	431e54 <ferror@plt+0x2f124>
  4295ac:	mov	x19, x0
  4295b0:	add	x1, sp, #0x1a8
  4295b4:	mov	x0, x27
  4295b8:	bl	431e54 <ferror@plt+0x2f124>
  4295bc:	mov	x4, x0
  4295c0:	mov	x3, x19
  4295c4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4295c8:	add	x2, x2, #0xf08
  4295cc:	mov	w1, #0x3                   	// #3
  4295d0:	mov	x0, x27
  4295d4:	bl	426a10 <ferror@plt+0x23ce0>
  4295d8:	b	429538 <ferror@plt+0x26808>
  4295dc:	add	x0, x27, #0x50
  4295e0:	cmp	x20, x0
  4295e4:	b.ne	42acec <ferror@plt+0x27fbc>  // b.any
  4295e8:	b	42acf4 <ferror@plt+0x27fc4>
  4295ec:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4295f0:	add	x2, x2, #0xf38
  4295f4:	mov	w1, #0x18                  	// #24
  4295f8:	mov	x0, x27
  4295fc:	bl	426b04 <ferror@plt+0x23dd4>
  429600:	b	42acf4 <ferror@plt+0x27fc4>
  429604:	ldr	x1, [x19, #24]
  429608:	ldrb	w0, [x1, #19]
  42960c:	orr	w0, w0, #0x20
  429610:	strb	w0, [x1, #19]
  429614:	b	42ad04 <ferror@plt+0x27fd4>
  429618:	mov	x1, x19
  42961c:	mov	x0, x27
  429620:	bl	436cc8 <ferror@plt+0x33f98>
  429624:	b	42ad0c <ferror@plt+0x27fdc>
  429628:	add	x8, sp, #0x1c8
  42962c:	mov	w1, #0x0                   	// #0
  429630:	mov	x0, x27
  429634:	bl	428020 <ferror@plt+0x252f0>
  429638:	ldr	x3, [sp, #456]
  42963c:	ldr	x1, [sp, #464]
  429640:	ldrb	w0, [sp, #472]
  429644:	ldrb	w2, [sp, #473]
  429648:	b	42adbc <ferror@plt+0x2808c>
  42964c:	add	x8, sp, #0x1c8
  429650:	mov	w1, #0x1                   	// #1
  429654:	mov	x0, x27
  429658:	bl	428020 <ferror@plt+0x252f0>
  42965c:	ldr	x3, [sp, #456]
  429660:	ldr	x1, [sp, #464]
  429664:	ldrb	w0, [sp, #472]
  429668:	ldrb	w2, [sp, #473]
  42966c:	b	42adbc <ferror@plt+0x2808c>
  429670:	cmp	x0, x1
  429674:	cset	x1, eq  // eq = none
  429678:	mov	w2, #0x0                   	// #0
  42967c:	mov	x3, #0x0                   	// #0
  429680:	b	42ad98 <ferror@plt+0x28068>
  429684:	ldr	x5, [x0]
  429688:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  42968c:	add	x4, x4, #0xf68
  429690:	mov	w3, #0x0                   	// #0
  429694:	ldr	w2, [sp, #132]
  429698:	mov	w1, #0xd                   	// #13
  42969c:	mov	x0, x27
  4296a0:	bl	426c74 <ferror@plt+0x23f44>
  4296a4:	mov	w2, #0x0                   	// #0
  4296a8:	mov	x1, #0x0                   	// #0
  4296ac:	mov	x3, #0x0                   	// #0
  4296b0:	b	42ad98 <ferror@plt+0x28068>
  4296b4:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4296b8:	add	x4, x4, #0xf90
  4296bc:	mov	w3, #0x0                   	// #0
  4296c0:	ldr	w2, [sp, #132]
  4296c4:	mov	w1, #0x2                   	// #2
  4296c8:	mov	x0, x27
  4296cc:	bl	426bfc <ferror@plt+0x23ecc>
  4296d0:	b	42ad80 <ferror@plt+0x28050>
  4296d4:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  4296d8:	add	x4, x4, #0xfb0
  4296dc:	mov	w3, #0x0                   	// #0
  4296e0:	ldr	w2, [sp, #132]
  4296e4:	mov	w1, #0x1                   	// #1
  4296e8:	mov	x0, x27
  4296ec:	bl	426c74 <ferror@plt+0x23f44>
  4296f0:	b	42ad80 <ferror@plt+0x28050>
  4296f4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x23c60>
  4296f8:	add	x2, x2, #0xfd8
  4296fc:	mov	w1, #0x4ad                 	// #1197
  429700:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  429704:	add	x0, x0, #0xfe8
  429708:	bl	4102b4 <ferror@plt+0xd584>
  42970c:	mov	w2, #0x0                   	// #0
  429710:	mov	x1, #0x0                   	// #0
  429714:	mov	x3, #0x0                   	// #0
  429718:	b	42ad98 <ferror@plt+0x28068>
  42971c:	mov	w2, #0x0                   	// #0
  429720:	mov	x3, #0x0                   	// #0
  429724:	b	42ad98 <ferror@plt+0x28068>
  429728:	mov	x1, #0x0                   	// #0
  42972c:	mov	x3, #0x0                   	// #0
  429730:	b	42ad98 <ferror@plt+0x28068>
  429734:	ldr	w0, [sp, #116]
  429738:	cmp	w0, #0x1
  42973c:	cset	w0, eq  // eq = none
  429740:	str	w0, [sp, #196]
  429744:	mov	w26, #0x1                   	// #1
  429748:	mov	w3, w26
  42974c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  429750:	add	x0, x0, #0x2a0
  429754:	add	x0, x0, w26, sxtw #1
  429758:	ldrb	w0, [x0, #1]
  42975c:	tbz	w0, #0, 429820 <ferror@plt+0x26af0>
  429760:	ldr	w1, [sp, #128]
  429764:	cbz	w1, 429818 <ferror@plt+0x26ae8>
  429768:	ldr	w1, [x28, #36]
  42976c:	sub	w2, w1, #0x1
  429770:	cmp	w2, #0x1b
  429774:	b.hi	429918 <ferror@plt+0x26be8>  // b.pmore
  429778:	cmp	w26, #0x14
  42977c:	b.eq	42a7e4 <ferror@plt+0x27ab4>  // b.none
  429780:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  429784:	add	x2, x2, #0x2a0
  429788:	sbfiz	x3, x3, #1, #32
  42978c:	ldrb	w3, [x2, x3]
  429790:	ubfx	x0, x0, #1, #1
  429794:	sub	w3, w3, w0
  429798:	str	w3, [sp, #152]
  42979c:	mov	w0, w1
  4297a0:	sbfiz	x1, x1, #1, #32
  4297a4:	ldrb	w1, [x2, x1]
  4297a8:	cmp	w3, w1
  4297ac:	b.cs	42a8d4 <ferror@plt+0x27ba4>  // b.hs, b.nlast
  4297b0:	str	x2, [sp, #104]
  4297b4:	str	w26, [sp, #156]
  4297b8:	mov	x26, x27
  4297bc:	b	42a458 <ferror@plt+0x27728>
  4297c0:	ldr	w0, [sp, #128]
  4297c4:	mov	w26, #0x5                   	// #5
  4297c8:	cbz	w0, 42ac30 <ferror@plt+0x27f00>
  4297cc:	mov	w26, #0x1c                  	// #28
  4297d0:	b	42a868 <ferror@plt+0x27b38>
  4297d4:	mov	w26, w0
  4297d8:	sub	w0, w0, #0x1
  4297dc:	cmp	w0, #0x19
  4297e0:	b.ls	429748 <ferror@plt+0x26a18>  // b.plast
  4297e4:	ldr	x1, [sp, #120]
  4297e8:	mov	x0, x27
  4297ec:	bl	431e54 <ferror@plt+0x2f124>
  4297f0:	mov	x5, x0
  4297f4:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  4297f8:	add	x4, x4, #0x0
  4297fc:	mov	w3, #0x0                   	// #0
  429800:	ldr	w2, [sp, #132]
  429804:	mov	w1, #0x3                   	// #3
  429808:	mov	x0, x27
  42980c:	bl	426bfc <ferror@plt+0x23ecc>
  429810:	mov	w0, #0x0                   	// #0
  429814:	b	4292dc <ferror@plt+0x265ac>
  429818:	mov	x26, x27
  42981c:	b	42aca4 <ferror@plt+0x27f74>
  429820:	ldr	w1, [sp, #128]
  429824:	cbz	w1, 429768 <ferror@plt+0x26a38>
  429828:	cmp	w26, #0x15
  42982c:	b.ne	4298a8 <ferror@plt+0x26b78>  // b.any
  429830:	ldr	w1, [x28, #36]
  429834:	cmp	w1, #0x14
  429838:	b.eq	429884 <ferror@plt+0x26b54>  // b.none
  42983c:	ldr	w1, [x28, #36]
  429840:	and	w1, w1, #0xfffffffd
  429844:	cmp	w1, #0x14
  429848:	b.eq	429768 <ferror@plt+0x26a38>  // b.none
  42984c:	mov	x26, x27
  429850:	ldr	x1, [x28]
  429854:	mov	x0, x26
  429858:	bl	431e54 <ferror@plt+0x2f124>
  42985c:	mov	x5, x0
  429860:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  429864:	add	x4, x4, #0x78
  429868:	mov	w3, #0x0                   	// #0
  42986c:	ldr	w2, [sp, #132]
  429870:	mov	w1, #0x3                   	// #3
  429874:	mov	x0, x26
  429878:	bl	426bfc <ferror@plt+0x23ecc>
  42987c:	mov	w0, #0x0                   	// #0
  429880:	b	4292dc <ferror@plt+0x265ac>
  429884:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  429888:	add	x4, x4, #0x38
  42988c:	mov	w3, #0x0                   	// #0
  429890:	ldr	w2, [sp, #132]
  429894:	mov	w1, #0x3                   	// #3
  429898:	mov	x0, x27
  42989c:	bl	426bfc <ferror@plt+0x23ecc>
  4298a0:	mov	w0, #0x0                   	// #0
  4298a4:	b	4292dc <ferror@plt+0x265ac>
  4298a8:	cmp	w26, #0x16
  4298ac:	b.ne	42ac50 <ferror@plt+0x27f20>  // b.any
  4298b0:	ldr	w1, [x28, #36]
  4298b4:	cmp	w1, #0x16
  4298b8:	b.eq	4298d0 <ferror@plt+0x26ba0>  // b.none
  4298bc:	and	w1, w1, #0xfffffffd
  4298c0:	cmp	w1, #0x14
  4298c4:	b.eq	42a880 <ferror@plt+0x27b50>  // b.none
  4298c8:	mov	x26, x27
  4298cc:	b	429850 <ferror@plt+0x26b20>
  4298d0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4298d4:	add	x0, x0, #0xdf0
  4298d8:	adrp	x5, 478000 <_obstack_memory_used@@Base+0x23c60>
  4298dc:	add	x5, x5, #0xde8
  4298e0:	ldr	w1, [sp, #212]
  4298e4:	cmp	w1, #0x0
  4298e8:	csel	x5, x5, x0, ne  // ne = any
  4298ec:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  4298f0:	add	x4, x4, #0x60
  4298f4:	mov	w3, #0x0                   	// #0
  4298f8:	ldr	w2, [sp, #132]
  4298fc:	mov	w1, #0x3                   	// #3
  429900:	mov	x0, x27
  429904:	bl	426bfc <ferror@plt+0x23ecc>
  429908:	mov	w0, #0x0                   	// #0
  42990c:	b	4292dc <ferror@plt+0x265ac>
  429910:	mov	x26, x27
  429914:	b	429850 <ferror@plt+0x26b20>
  429918:	mov	x26, x27
  42991c:	ldr	w3, [x28, #36]
  429920:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  429924:	add	x2, x2, #0xc8
  429928:	mov	w1, #0x4                   	// #4
  42992c:	mov	x0, x26
  429930:	bl	426a10 <ferror@plt+0x23ce0>
  429934:	mov	w0, #0x0                   	// #0
  429938:	b	4292dc <ferror@plt+0x265ac>
  42993c:	ldrb	w0, [x28, #24]
  429940:	ldurb	w1, [x28, #-16]
  429944:	cmp	w1, w0
  429948:	b.eq	42a470 <ferror@plt+0x27740>  // b.none
  42994c:	cbz	w0, 4299a8 <ferror@plt+0x26c78>
  429950:	ldp	x0, x1, [x28, #-32]
  429954:	stp	x0, x1, [sp, #256]
  429958:	ldur	x0, [x28, #-16]
  42995c:	str	x0, [sp, #272]
  429960:	ldr	x1, [x26, #1208]
  429964:	ldr	x0, [sp, #136]
  429968:	bl	427878 <ferror@plt+0x24b48>
  42996c:	and	w0, w0, #0xff
  429970:	cbnz	w0, 42a470 <ferror@plt+0x27740>
  429974:	ldur	w19, [x28, #-8]
  429978:	ldr	x1, [x28]
  42997c:	mov	x0, x26
  429980:	bl	431e54 <ferror@plt+0x2f124>
  429984:	mov	x5, x0
  429988:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42998c:	add	x4, x4, #0xe8
  429990:	mov	w3, #0x0                   	// #0
  429994:	mov	w2, w19
  429998:	mov	w1, #0x0                   	// #0
  42999c:	mov	x0, x26
  4299a0:	bl	426bfc <ferror@plt+0x23ecc>
  4299a4:	b	42a470 <ferror@plt+0x27740>
  4299a8:	ldp	x0, x1, [x28, #8]
  4299ac:	stp	x0, x1, [sp, #256]
  4299b0:	ldr	x0, [x28, #24]
  4299b4:	str	x0, [sp, #272]
  4299b8:	ldr	x1, [x26, #1208]
  4299bc:	ldr	x0, [sp, #136]
  4299c0:	bl	427878 <ferror@plt+0x24b48>
  4299c4:	and	w0, w0, #0xff
  4299c8:	cbnz	w0, 42a470 <ferror@plt+0x27740>
  4299cc:	ldr	w19, [x28, #32]
  4299d0:	ldr	x1, [x28]
  4299d4:	mov	x0, x26
  4299d8:	bl	431e54 <ferror@plt+0x2f124>
  4299dc:	mov	x5, x0
  4299e0:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  4299e4:	add	x4, x4, #0x120
  4299e8:	mov	w3, #0x0                   	// #0
  4299ec:	mov	w2, w19
  4299f0:	mov	w1, #0x0                   	// #0
  4299f4:	mov	x0, x26
  4299f8:	bl	426bfc <ferror@plt+0x23ecc>
  4299fc:	b	42a470 <ferror@plt+0x27740>
  429a00:	ldp	x0, x1, [x28, #8]
  429a04:	add	x2, sp, #0x280
  429a08:	stp	x0, x1, [x2, #-216]
  429a0c:	ldr	x0, [x28, #24]
  429a10:	str	x0, [sp, #440]
  429a14:	ldr	x19, [x28, #8]
  429a18:	ldr	x20, [x28, #16]
  429a1c:	ldrb	w22, [x28, #24]
  429a20:	ldrb	w0, [x28, #25]
  429a24:	cmp	w21, #0x1b
  429a28:	b.eq	429a58 <ferror@plt+0x26d28>  // b.none
  429a2c:	cmp	w21, #0x1c
  429a30:	b.eq	429a88 <ferror@plt+0x26d58>  // b.none
  429a34:	cmp	w21, #0xe
  429a38:	b.eq	429b24 <ferror@plt+0x26df4>  // b.none
  429a3c:	orr	x19, x19, x20
  429a40:	cmp	x19, #0x0
  429a44:	cset	x20, eq  // eq = none
  429a48:	mov	w0, #0x0                   	// #0
  429a4c:	mov	w22, #0x0                   	// #0
  429a50:	mov	x19, #0x0                   	// #0
  429a54:	b	429ae0 <ferror@plt+0x26db0>
  429a58:	ldrb	w0, [x26, #1138]
  429a5c:	cbz	w0, 429ae0 <ferror@plt+0x26db0>
  429a60:	ldr	w1, [x26, #28]
  429a64:	mov	w0, #0x0                   	// #0
  429a68:	cbnz	w1, 429ae0 <ferror@plt+0x26db0>
  429a6c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  429a70:	add	x2, x2, #0x158
  429a74:	mov	w1, #0x6                   	// #6
  429a78:	mov	x0, x26
  429a7c:	bl	426a88 <ferror@plt+0x23d58>
  429a80:	mov	w0, #0x0                   	// #0
  429a84:	b	429ae0 <ferror@plt+0x26db0>
  429a88:	str	x19, [sp, #424]
  429a8c:	str	x20, [sp, #432]
  429a90:	strb	w22, [sp, #440]
  429a94:	strb	w0, [sp, #441]
  429a98:	add	x0, sp, #0x280
  429a9c:	ldp	x0, x1, [x0, #-216]
  429aa0:	stp	x0, x1, [sp, #288]
  429aa4:	ldr	x0, [sp, #440]
  429aa8:	str	x0, [sp, #304]
  429aac:	ldr	x8, [sp, #136]
  429ab0:	ldr	x1, [x26, #1208]
  429ab4:	ldr	x0, [sp, #176]
  429ab8:	bl	4278b0 <ferror@plt+0x24b80>
  429abc:	ldr	x19, [sp, #256]
  429ac0:	ldr	x0, [sp, #264]
  429ac4:	str	x19, [sp, #424]
  429ac8:	str	x0, [sp, #432]
  429acc:	ldr	x0, [sp, #272]
  429ad0:	str	x0, [sp, #440]
  429ad4:	ldr	x20, [sp, #432]
  429ad8:	and	w22, w0, #0xff
  429adc:	ubfx	w0, w0, #8, #8
  429ae0:	str	x19, [sp, #424]
  429ae4:	str	x20, [sp, #432]
  429ae8:	strb	w22, [sp, #440]
  429aec:	strb	w0, [sp, #441]
  429af0:	ldr	x1, [sp, #440]
  429af4:	str	x1, [sp, #496]
  429af8:	str	x19, [sp, #480]
  429afc:	str	x20, [sp, #488]
  429b00:	strb	w22, [sp, #496]
  429b04:	strb	w0, [sp, #497]
  429b08:	ldp	x0, x1, [sp, #480]
  429b0c:	stp	x0, x1, [x28, #-32]
  429b10:	ldr	x0, [sp, #496]
  429b14:	stur	x0, [x28, #-16]
  429b18:	ldr	w0, [x28, #32]
  429b1c:	stur	w0, [x28, #-8]
  429b20:	b	42a424 <ferror@plt+0x276f4>
  429b24:	mvn	x19, x19
  429b28:	str	x19, [sp, #424]
  429b2c:	mvn	x20, x20
  429b30:	str	x20, [sp, #432]
  429b34:	strb	w22, [sp, #440]
  429b38:	strb	w0, [sp, #441]
  429b3c:	add	x0, sp, #0x280
  429b40:	ldp	x0, x1, [x0, #-216]
  429b44:	stp	x0, x1, [sp, #288]
  429b48:	ldr	x0, [sp, #440]
  429b4c:	str	x0, [sp, #304]
  429b50:	ldr	x8, [sp, #136]
  429b54:	ldr	x1, [x26, #1208]
  429b58:	ldr	x0, [sp, #176]
  429b5c:	bl	427814 <ferror@plt+0x24ae4>
  429b60:	ldr	x19, [sp, #256]
  429b64:	ldr	x0, [sp, #264]
  429b68:	str	x19, [sp, #424]
  429b6c:	str	x0, [sp, #432]
  429b70:	ldr	x22, [sp, #272]
  429b74:	str	x22, [sp, #440]
  429b78:	mov	x20, x0
  429b7c:	and	w22, w22, #0xff
  429b80:	mov	w0, #0x0                   	// #0
  429b84:	b	429ae0 <ferror@plt+0x26db0>
  429b88:	ldp	x0, x1, [x28, #-32]
  429b8c:	stp	x0, x1, [sp, #288]
  429b90:	ldur	x0, [x28, #-16]
  429b94:	str	x0, [sp, #304]
  429b98:	ldp	x0, x1, [x28, #8]
  429b9c:	stp	x0, x1, [sp, #224]
  429ba0:	ldr	x0, [x28, #24]
  429ba4:	str	x0, [sp, #240]
  429ba8:	ldr	x8, [sp, #136]
  429bac:	mov	w3, w21
  429bb0:	add	x2, sp, #0xe0
  429bb4:	ldr	x1, [sp, #176]
  429bb8:	mov	x0, x26
  429bbc:	bl	427c70 <ferror@plt+0x24f40>
  429bc0:	ldp	x0, x1, [sp, #256]
  429bc4:	stp	x0, x1, [x28, #-32]
  429bc8:	ldr	x0, [sp, #272]
  429bcc:	stur	x0, [x28, #-16]
  429bd0:	ldr	w0, [x28, #32]
  429bd4:	stur	w0, [x28, #-8]
  429bd8:	b	42a424 <ferror@plt+0x276f4>
  429bdc:	ldur	x0, [x28, #-16]
  429be0:	str	x0, [sp, #368]
  429be4:	ldur	x22, [x28, #-32]
  429be8:	ldur	x24, [x28, #-24]
  429bec:	ldurb	w0, [x28, #-16]
  429bf0:	ldurb	w2, [x28, #-15]
  429bf4:	ldp	x4, x5, [x28, #8]
  429bf8:	add	x1, sp, #0x200
  429bfc:	stp	x4, x5, [x1, #-136]
  429c00:	ldr	x1, [x28, #24]
  429c04:	str	x1, [sp, #392]
  429c08:	ldr	x20, [x28, #8]
  429c0c:	ldr	x23, [x28, #16]
  429c10:	ldr	x25, [x26, #1208]
  429c14:	str	x22, [sp, #352]
  429c18:	str	x24, [sp, #360]
  429c1c:	strb	w0, [sp, #368]
  429c20:	strb	w2, [sp, #369]
  429c24:	ldp	x2, x3, [sp, #352]
  429c28:	stp	x2, x3, [sp, #400]
  429c2c:	ldr	x2, [sp, #368]
  429c30:	str	x2, [sp, #416]
  429c34:	str	x20, [sp, #376]
  429c38:	str	x23, [sp, #384]
  429c3c:	add	x2, sp, #0x200
  429c40:	ldp	x2, x3, [x2, #-136]
  429c44:	add	x4, sp, #0x280
  429c48:	stp	x2, x3, [x4, #-216]
  429c4c:	str	x1, [sp, #440]
  429c50:	cbnz	w0, 429cac <ferror@plt+0x26f7c>
  429c54:	ldrb	w27, [sp, #392]
  429c58:	cbnz	w27, 429cac <ferror@plt+0x26f7c>
  429c5c:	strb	w0, [sp, #416]
  429c60:	ldp	x0, x1, [sp, #400]
  429c64:	stp	x0, x1, [sp, #224]
  429c68:	ldr	x0, [sp, #416]
  429c6c:	str	x0, [sp, #240]
  429c70:	mov	x1, x25
  429c74:	add	x0, sp, #0xe0
  429c78:	bl	427878 <ferror@plt+0x24b48>
  429c7c:	and	w19, w0, #0xff
  429c80:	strb	w27, [sp, #440]
  429c84:	add	x0, sp, #0x280
  429c88:	ldp	x0, x1, [x0, #-216]
  429c8c:	stp	x0, x1, [sp, #224]
  429c90:	ldr	x0, [sp, #440]
  429c94:	str	x0, [sp, #240]
  429c98:	mov	x1, x25
  429c9c:	add	x0, sp, #0xe0
  429ca0:	bl	427878 <ferror@plt+0x24b48>
  429ca4:	cmp	w19, w0, uxtb
  429ca8:	b.ne	429cc8 <ferror@plt+0x26f98>  // b.any
  429cac:	mov	w19, #0x1                   	// #1
  429cb0:	cmp	x22, x20
  429cb4:	b.hi	429cc8 <ferror@plt+0x26f98>  // b.pmore
  429cb8:	cset	w19, eq  // eq = none
  429cbc:	cmp	x24, x23
  429cc0:	cset	w0, cs  // cs = hs, nlast
  429cc4:	and	w19, w19, w0
  429cc8:	cmp	w21, #0x19
  429ccc:	b.eq	429d00 <ferror@plt+0x26fd0>  // b.none
  429cd0:	cmp	w21, #0x3
  429cd4:	b.eq	429d4c <ferror@plt+0x2701c>  // b.none
  429cd8:	cmp	w21, #0x2
  429cdc:	b.eq	429d58 <ferror@plt+0x27028>  // b.none
  429ce0:	mov	w0, #0x1                   	// #1
  429ce4:	cbz	w19, 429cf8 <ferror@plt+0x26fc8>
  429ce8:	cmp	x24, x23
  429cec:	cset	w0, eq  // eq = none
  429cf0:	cmp	x22, x20
  429cf4:	csel	w0, w0, wzr, eq  // eq = none
  429cf8:	and	x19, x0, #0xff
  429cfc:	b	429d04 <ferror@plt+0x26fd4>
  429d00:	and	x19, x19, #0xff
  429d04:	str	xzr, [sp, #352]
  429d08:	str	x19, [sp, #360]
  429d0c:	strb	wzr, [sp, #368]
  429d10:	strb	wzr, [sp, #369]
  429d14:	ldr	x0, [sp, #368]
  429d18:	str	x0, [sp, #520]
  429d1c:	str	xzr, [sp, #504]
  429d20:	str	x19, [sp, #512]
  429d24:	strb	wzr, [sp, #520]
  429d28:	strb	wzr, [sp, #521]
  429d2c:	add	x0, sp, #0x280
  429d30:	ldp	x0, x1, [x0, #-136]
  429d34:	stp	x0, x1, [x28, #-32]
  429d38:	ldr	x0, [sp, #520]
  429d3c:	stur	x0, [x28, #-16]
  429d40:	ldr	w0, [x28, #32]
  429d44:	stur	w0, [x28, #-8]
  429d48:	b	42a424 <ferror@plt+0x276f4>
  429d4c:	eor	w19, w19, #0x1
  429d50:	and	x19, x19, #0xff
  429d54:	b	429d04 <ferror@plt+0x26fd4>
  429d58:	cbz	w19, 429d6c <ferror@plt+0x2703c>
  429d5c:	cmp	x22, x20
  429d60:	cset	w19, ne  // ne = any
  429d64:	cmp	x24, x23
  429d68:	csinc	w19, w19, wzr, eq  // eq = none
  429d6c:	and	x19, x19, #0xff
  429d70:	b	429d04 <ferror@plt+0x26fd4>
  429d74:	ldp	x0, x1, [x28, #-32]
  429d78:	add	x2, sp, #0x280
  429d7c:	stp	x0, x1, [x2, #-216]
  429d80:	ldur	x0, [x28, #-16]
  429d84:	str	x0, [sp, #440]
  429d88:	ldur	x4, [x28, #-32]
  429d8c:	ldr	x3, [x28, #8]
  429d90:	ldur	x2, [x28, #-24]
  429d94:	ldr	x1, [x28, #16]
  429d98:	mov	w0, #0x0                   	// #0
  429d9c:	cmp	x2, x1
  429da0:	b.eq	429e00 <ferror@plt+0x270d0>  // b.none
  429da4:	eor	w1, w0, #0x1
  429da8:	and	w1, w1, #0xff
  429dac:	cmp	w21, #0x18
  429db0:	csel	w0, w1, w0, eq  // eq = none
  429db4:	and	x0, x0, #0xff
  429db8:	str	xzr, [sp, #424]
  429dbc:	str	x0, [sp, #432]
  429dc0:	strb	wzr, [sp, #440]
  429dc4:	strb	wzr, [sp, #441]
  429dc8:	ldr	x1, [sp, #440]
  429dcc:	str	x1, [sp, #544]
  429dd0:	str	xzr, [sp, #528]
  429dd4:	str	x0, [sp, #536]
  429dd8:	strb	wzr, [sp, #544]
  429ddc:	strb	wzr, [sp, #545]
  429de0:	add	x0, sp, #0x200
  429de4:	ldp	x0, x1, [x0, #16]
  429de8:	stp	x0, x1, [x28, #-32]
  429dec:	ldr	x0, [sp, #544]
  429df0:	stur	x0, [x28, #-16]
  429df4:	ldr	w0, [x28, #32]
  429df8:	stur	w0, [x28, #-8]
  429dfc:	b	42a424 <ferror@plt+0x276f4>
  429e00:	cmp	x4, x3
  429e04:	cset	w0, eq  // eq = none
  429e08:	b	429da4 <ferror@plt+0x27074>
  429e0c:	ldp	x0, x1, [x28, #-32]
  429e10:	add	x2, sp, #0x280
  429e14:	stp	x0, x1, [x2, #-216]
  429e18:	ldur	x0, [x28, #-16]
  429e1c:	str	x0, [sp, #440]
  429e20:	ldur	x4, [x28, #-32]
  429e24:	ldur	x6, [x28, #-24]
  429e28:	ldr	x3, [x28, #8]
  429e2c:	ldr	x5, [x28, #16]
  429e30:	ldrb	w0, [x28, #24]
  429e34:	ldurb	w1, [x28, #-16]
  429e38:	cmp	w1, #0x0
  429e3c:	csinc	w0, w0, wzr, eq  // eq = none
  429e40:	and	x1, x6, x5
  429e44:	and	x2, x4, x3
  429e48:	cmp	w21, #0x9
  429e4c:	b.eq	429e60 <ferror@plt+0x27130>  // b.none
  429e50:	eor	x1, x6, x5
  429e54:	eor	x2, x4, x3
  429e58:	cmp	w21, #0xa
  429e5c:	b.eq	429ea8 <ferror@plt+0x27178>  // b.none
  429e60:	str	x2, [sp, #424]
  429e64:	str	x1, [sp, #432]
  429e68:	strb	w0, [sp, #440]
  429e6c:	strb	wzr, [sp, #441]
  429e70:	ldr	x3, [sp, #440]
  429e74:	str	x3, [sp, #568]
  429e78:	str	x2, [sp, #552]
  429e7c:	str	x1, [sp, #560]
  429e80:	strb	w0, [sp, #568]
  429e84:	strb	wzr, [sp, #569]
  429e88:	add	x0, sp, #0x280
  429e8c:	ldp	x0, x1, [x0, #-88]
  429e90:	stp	x0, x1, [x28, #-32]
  429e94:	ldr	x0, [sp, #568]
  429e98:	stur	x0, [x28, #-16]
  429e9c:	ldr	w0, [x28, #32]
  429ea0:	stur	w0, [x28, #-8]
  429ea4:	b	42a424 <ferror@plt+0x276f4>
  429ea8:	orr	x1, x6, x5
  429eac:	orr	x2, x4, x3
  429eb0:	b	429e60 <ferror@plt+0x27130>
  429eb4:	ldp	x0, x1, [x28, #-32]
  429eb8:	add	x2, sp, #0x200
  429ebc:	stp	x0, x1, [x2, #-136]
  429ec0:	ldur	x0, [x28, #-16]
  429ec4:	str	x0, [sp, #392]
  429ec8:	ldur	x24, [x28, #-32]
  429ecc:	ldur	x23, [x28, #-24]
  429ed0:	ldurb	w0, [x28, #-16]
  429ed4:	ldp	x2, x3, [x28, #8]
  429ed8:	stp	x2, x3, [sp, #400]
  429edc:	ldr	x1, [x28, #24]
  429ee0:	str	x1, [sp, #416]
  429ee4:	ldr	x25, [x28, #8]
  429ee8:	ldr	x19, [x28, #16]
  429eec:	mov	w20, w0
  429ef0:	cbnz	w0, 42aa24 <ferror@plt+0x27cf4>
  429ef4:	ldrb	w21, [x28, #24]
  429ef8:	mov	w27, w21
  429efc:	ldr	x22, [x26, #1208]
  429f00:	cbnz	w21, 42aa30 <ferror@plt+0x27d00>
  429f04:	str	x24, [sp, #376]
  429f08:	str	x23, [sp, #384]
  429f0c:	strb	w0, [sp, #392]
  429f10:	add	x0, sp, #0x200
  429f14:	ldp	x0, x1, [x0, #-136]
  429f18:	stp	x0, x1, [sp, #224]
  429f1c:	ldr	x0, [sp, #392]
  429f20:	str	x0, [sp, #240]
  429f24:	mov	x1, x22
  429f28:	add	x0, sp, #0xe0
  429f2c:	bl	427878 <ferror@plt+0x24b48>
  429f30:	and	w0, w0, #0xff
  429f34:	mov	w20, w21
  429f38:	cbz	w0, 429fb4 <ferror@plt+0x27284>
  429f3c:	str	x25, [sp, #400]
  429f40:	str	x19, [sp, #408]
  429f44:	strb	w21, [sp, #416]
  429f48:	ldp	x0, x1, [sp, #400]
  429f4c:	stp	x0, x1, [sp, #224]
  429f50:	ldr	x0, [sp, #416]
  429f54:	str	x0, [sp, #240]
  429f58:	mov	x1, x22
  429f5c:	add	x0, sp, #0xe0
  429f60:	bl	427878 <ferror@plt+0x24b48>
  429f64:	ands	w21, w0, #0xff
  429f68:	b.ne	42aa30 <ferror@plt+0x27d00>  // b.any
  429f6c:	eor	w20, w20, #0x1
  429f70:	ldp	x0, x1, [sp, #400]
  429f74:	stp	x0, x1, [sp, #256]
  429f78:	ldr	x0, [sp, #416]
  429f7c:	str	x0, [sp, #272]
  429f80:	add	x8, sp, #0xe0
  429f84:	mov	x1, x22
  429f88:	ldr	x0, [sp, #136]
  429f8c:	bl	4278b0 <ferror@plt+0x24b80>
  429f90:	ldr	x25, [sp, #224]
  429f94:	str	x25, [sp, #400]
  429f98:	ldr	x0, [sp, #232]
  429f9c:	str	x0, [sp, #408]
  429fa0:	ldr	x0, [sp, #240]
  429fa4:	str	x0, [sp, #416]
  429fa8:	ldr	x19, [sp, #408]
  429fac:	mov	w27, w21
  429fb0:	b	42aa30 <ferror@plt+0x27d00>
  429fb4:	add	x0, sp, #0x200
  429fb8:	ldp	x0, x1, [x0, #-136]
  429fbc:	stp	x0, x1, [sp, #256]
  429fc0:	ldr	x0, [sp, #392]
  429fc4:	str	x0, [sp, #272]
  429fc8:	add	x8, sp, #0xe0
  429fcc:	mov	x1, x22
  429fd0:	ldr	x0, [sp, #136]
  429fd4:	bl	4278b0 <ferror@plt+0x24b80>
  429fd8:	ldr	x24, [sp, #224]
  429fdc:	str	x24, [sp, #376]
  429fe0:	ldr	x0, [sp, #232]
  429fe4:	str	x0, [sp, #384]
  429fe8:	ldr	x0, [sp, #240]
  429fec:	str	x0, [sp, #392]
  429ff0:	ldr	x23, [sp, #384]
  429ff4:	mov	w20, #0x1                   	// #1
  429ff8:	b	429f3c <ferror@plt+0x2720c>
  429ffc:	cmp	x21, x23
  42a000:	csinc	w19, w19, wzr, eq  // eq = none
  42a004:	b	42aaf8 <ferror@plt+0x27dc8>
  42a008:	add	x0, sp, #0x200
  42a00c:	ldp	x0, x1, [x0, #64]
  42a010:	stp	x0, x1, [sp, #256]
  42a014:	ldr	x0, [sp, #592]
  42a018:	str	x0, [sp, #272]
  42a01c:	add	x8, sp, #0xe0
  42a020:	mov	x1, x22
  42a024:	ldr	x0, [sp, #136]
  42a028:	bl	4278b0 <ferror@plt+0x24b80>
  42a02c:	ldr	x23, [sp, #224]
  42a030:	str	x23, [sp, #576]
  42a034:	ldr	x0, [sp, #232]
  42a038:	str	x0, [sp, #584]
  42a03c:	ldr	x0, [sp, #240]
  42a040:	str	x0, [sp, #592]
  42a044:	ldr	x24, [sp, #584]
  42a048:	and	w2, w0, #0xff
  42a04c:	ubfx	w0, w0, #8, #8
  42a050:	b	42ab04 <ferror@plt+0x27dd4>
  42a054:	ldr	w25, [x28, #32]
  42a058:	ldp	x0, x1, [x28, #-32]
  42a05c:	add	x2, sp, #0x200
  42a060:	stp	x0, x1, [x2, #-184]
  42a064:	ldur	x0, [x28, #-16]
  42a068:	str	x0, [sp, #344]
  42a06c:	ldurb	w20, [x28, #-16]
  42a070:	ldurb	w24, [x28, #-15]
  42a074:	ldp	x0, x1, [x28, #8]
  42a078:	stp	x0, x1, [sp, #352]
  42a07c:	ldr	x0, [x28, #24]
  42a080:	str	x0, [sp, #368]
  42a084:	ldr	x19, [x28, #8]
  42a088:	ldr	x22, [x28, #16]
  42a08c:	str	w20, [sp, #184]
  42a090:	cbnz	w20, 42ab8c <ferror@plt+0x27e5c>
  42a094:	ldrb	w23, [x28, #24]
  42a098:	str	w23, [sp, #192]
  42a09c:	ldr	x2, [x26, #1208]
  42a0a0:	str	x2, [sp, #144]
  42a0a4:	cbnz	w23, 42a1b4 <ferror@plt+0x27484>
  42a0a8:	strb	w20, [sp, #344]
  42a0ac:	strb	w24, [sp, #345]
  42a0b0:	add	x0, sp, #0x200
  42a0b4:	ldp	x0, x1, [x0, #-184]
  42a0b8:	stp	x0, x1, [sp, #224]
  42a0bc:	ldr	x0, [sp, #344]
  42a0c0:	str	x0, [sp, #240]
  42a0c4:	mov	x1, x2
  42a0c8:	add	x0, sp, #0xe0
  42a0cc:	bl	427878 <ferror@plt+0x24b48>
  42a0d0:	and	w0, w0, #0xff
  42a0d4:	str	w23, [sp, #188]
  42a0d8:	cbz	w0, 42a168 <ferror@plt+0x27438>
  42a0dc:	str	x19, [sp, #352]
  42a0e0:	str	x22, [sp, #360]
  42a0e4:	strb	w23, [sp, #368]
  42a0e8:	ldp	x0, x1, [sp, #352]
  42a0ec:	stp	x0, x1, [sp, #224]
  42a0f0:	ldr	x0, [sp, #368]
  42a0f4:	str	x0, [sp, #240]
  42a0f8:	ldr	x1, [sp, #144]
  42a0fc:	add	x0, sp, #0xe0
  42a100:	bl	427878 <ferror@plt+0x24b48>
  42a104:	ldr	w1, [sp, #188]
  42a108:	str	w1, [sp, #184]
  42a10c:	ands	w23, w0, #0xff
  42a110:	b.ne	42aba0 <ferror@plt+0x27e70>  // b.any
  42a114:	ldr	w0, [sp, #188]
  42a118:	eor	w0, w0, #0x1
  42a11c:	and	w0, w0, #0xff
  42a120:	str	w0, [sp, #184]
  42a124:	ldp	x0, x1, [sp, #352]
  42a128:	stp	x0, x1, [sp, #256]
  42a12c:	ldr	x0, [sp, #368]
  42a130:	str	x0, [sp, #272]
  42a134:	add	x8, sp, #0xe0
  42a138:	ldr	x1, [sp, #144]
  42a13c:	ldr	x0, [sp, #136]
  42a140:	bl	4278b0 <ferror@plt+0x24b80>
  42a144:	ldr	x19, [sp, #224]
  42a148:	str	x19, [sp, #352]
  42a14c:	ldr	x0, [sp, #232]
  42a150:	str	x0, [sp, #360]
  42a154:	ldr	x0, [sp, #240]
  42a158:	str	x0, [sp, #368]
  42a15c:	ldr	x22, [sp, #360]
  42a160:	str	w23, [sp, #192]
  42a164:	b	42aba0 <ferror@plt+0x27e70>
  42a168:	add	x0, sp, #0x200
  42a16c:	ldp	x0, x1, [x0, #-184]
  42a170:	stp	x0, x1, [sp, #256]
  42a174:	ldr	x0, [sp, #344]
  42a178:	str	x0, [sp, #272]
  42a17c:	add	x8, sp, #0xe0
  42a180:	ldr	x1, [sp, #144]
  42a184:	ldr	x0, [sp, #136]
  42a188:	bl	4278b0 <ferror@plt+0x24b80>
  42a18c:	ldp	x0, x1, [sp, #224]
  42a190:	add	x2, sp, #0x200
  42a194:	stp	x0, x1, [x2, #-184]
  42a198:	ldr	x0, [sp, #240]
  42a19c:	str	x0, [sp, #344]
  42a1a0:	and	w20, w0, #0xff
  42a1a4:	ubfx	w24, w0, #8, #8
  42a1a8:	mov	w0, #0x1                   	// #1
  42a1ac:	str	w0, [sp, #188]
  42a1b0:	b	42a0dc <ferror@plt+0x273ac>
  42a1b4:	ldr	w0, [sp, #184]
  42a1b8:	str	w0, [sp, #188]
  42a1bc:	b	42aba0 <ferror@plt+0x27e70>
  42a1c0:	cbz	x22, 42a1fc <ferror@plt+0x274cc>
  42a1c4:	ldr	x1, [sp, #144]
  42a1c8:	sub	x20, x1, #0x41
  42a1cc:	sub	x0, x1, #0x1
  42a1d0:	cmp	x1, #0x41
  42a1d4:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  42a1d8:	mov	x1, #0x1                   	// #1
  42a1dc:	lsl	x1, x1, x0
  42a1e0:	tst	x22, x1
  42a1e4:	b.ne	42abd0 <ferror@plt+0x27ea0>  // b.any
  42a1e8:	sub	x0, x0, #0x1
  42a1ec:	lsr	x1, x1, #1
  42a1f0:	tst	x22, x1
  42a1f4:	b.eq	42a1e8 <ferror@plt+0x274b8>  // b.none
  42a1f8:	b	42abd0 <ferror@plt+0x27ea0>
  42a1fc:	ldr	w0, [x26, #28]
  42a200:	cbz	w0, 42a228 <ferror@plt+0x274f8>
  42a204:	strb	w20, [sp, #344]
  42a208:	strb	w24, [sp, #345]
  42a20c:	ldr	x0, [sp, #344]
  42a210:	str	x0, [sp, #616]
  42a214:	ldr	x0, [sp, #328]
  42a218:	str	x0, [sp, #160]
  42a21c:	ldr	x0, [sp, #336]
  42a220:	str	x0, [sp, #168]
  42a224:	b	42a3f0 <ferror@plt+0x276c0>
  42a228:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a22c:	add	x4, x4, #0x188
  42a230:	mov	w3, #0x0                   	// #0
  42a234:	mov	w2, w25
  42a238:	mov	w1, #0x3                   	// #3
  42a23c:	mov	x0, x26
  42a240:	bl	426bfc <ferror@plt+0x23ecc>
  42a244:	b	42a204 <ferror@plt+0x274d4>
  42a248:	cbnz	w23, 42a318 <ferror@plt+0x275e8>
  42a24c:	cbz	x20, 42a3b0 <ferror@plt+0x27680>
  42a250:	extr	x22, x19, x22, #1
  42a254:	lsr	x19, x19, #1
  42a258:	sub	x20, x20, #0x1
  42a25c:	strb	w27, [sp, #344]
  42a260:	strb	w24, [sp, #345]
  42a264:	add	x0, sp, #0x200
  42a268:	ldp	x0, x1, [x0, #-184]
  42a26c:	stp	x0, x1, [sp, #400]
  42a270:	ldr	x0, [sp, #344]
  42a274:	str	x0, [sp, #416]
  42a278:	ldr	x21, [sp, #328]
  42a27c:	ldr	x25, [sp, #336]
  42a280:	str	x19, [sp, #376]
  42a284:	str	x22, [sp, #384]
  42a288:	add	x0, sp, #0x200
  42a28c:	ldp	x0, x1, [x0, #-136]
  42a290:	add	x2, sp, #0x280
  42a294:	stp	x0, x1, [x2, #-216]
  42a298:	ldr	x0, [sp, #392]
  42a29c:	str	x0, [sp, #440]
  42a2a0:	cbnz	w27, 42a304 <ferror@plt+0x275d4>
  42a2a4:	ldrb	w28, [sp, #392]
  42a2a8:	cbnz	w28, 42a304 <ferror@plt+0x275d4>
  42a2ac:	str	x21, [sp, #400]
  42a2b0:	str	x25, [sp, #408]
  42a2b4:	strb	w27, [sp, #416]
  42a2b8:	ldp	x0, x1, [sp, #400]
  42a2bc:	stp	x0, x1, [sp, #224]
  42a2c0:	ldr	x0, [sp, #416]
  42a2c4:	str	x0, [sp, #240]
  42a2c8:	ldr	x1, [sp, #144]
  42a2cc:	add	x0, sp, #0xe0
  42a2d0:	bl	427878 <ferror@plt+0x24b48>
  42a2d4:	and	w23, w0, #0xff
  42a2d8:	strb	w28, [sp, #440]
  42a2dc:	add	x0, sp, #0x280
  42a2e0:	ldp	x0, x1, [x0, #-216]
  42a2e4:	stp	x0, x1, [sp, #224]
  42a2e8:	ldr	x0, [sp, #440]
  42a2ec:	str	x0, [sp, #240]
  42a2f0:	ldr	x1, [sp, #144]
  42a2f4:	add	x0, sp, #0xe0
  42a2f8:	bl	427878 <ferror@plt+0x24b48>
  42a2fc:	cmp	w23, w0, uxtb
  42a300:	b.ne	42a248 <ferror@plt+0x27518>  // b.any
  42a304:	cmp	x19, x21
  42a308:	b.cc	42a318 <ferror@plt+0x275e8>  // b.lo, b.ul, b.last
  42a30c:	b.ne	42a24c <ferror@plt+0x2751c>  // b.any
  42a310:	cmp	x22, x25
  42a314:	b.hi	42a24c <ferror@plt+0x2751c>  // b.pmore
  42a318:	add	x0, sp, #0x200
  42a31c:	ldp	x0, x1, [x0, #-184]
  42a320:	stp	x0, x1, [sp, #256]
  42a324:	ldr	x0, [sp, #344]
  42a328:	str	x0, [sp, #272]
  42a32c:	add	x0, sp, #0x200
  42a330:	ldp	x0, x1, [x0, #-136]
  42a334:	stp	x0, x1, [sp, #288]
  42a338:	ldr	x0, [sp, #392]
  42a33c:	str	x0, [sp, #304]
  42a340:	add	x8, sp, #0xe0
  42a344:	mov	w3, #0x5                   	// #5
  42a348:	ldr	x2, [sp, #176]
  42a34c:	ldr	x1, [sp, #136]
  42a350:	mov	x0, x26
  42a354:	bl	427c70 <ferror@plt+0x24f40>
  42a358:	ldp	x0, x1, [sp, #224]
  42a35c:	add	x2, sp, #0x200
  42a360:	stp	x0, x1, [x2, #-184]
  42a364:	ldr	x24, [sp, #240]
  42a368:	str	x24, [sp, #344]
  42a36c:	and	w27, w24, #0xff
  42a370:	ubfx	w24, w24, #8, #8
  42a374:	cmp	x20, #0x3f
  42a378:	b.ls	42a398 <ferror@plt+0x27668>  // b.plast
  42a37c:	sub	w0, w20, #0x40
  42a380:	mov	x1, #0x1                   	// #1
  42a384:	lsl	x0, x1, x0
  42a388:	ldr	x1, [sp, #160]
  42a38c:	orr	x0, x1, x0
  42a390:	str	x0, [sp, #160]
  42a394:	b	42a250 <ferror@plt+0x27520>
  42a398:	mov	x0, #0x1                   	// #1
  42a39c:	lsl	x0, x0, x20
  42a3a0:	ldr	x1, [sp, #168]
  42a3a4:	orr	x0, x1, x0
  42a3a8:	str	x0, [sp, #168]
  42a3ac:	b	42a24c <ferror@plt+0x2751c>
  42a3b0:	ldr	x28, [sp, #200]
  42a3b4:	ldr	w21, [sp, #208]
  42a3b8:	cmp	w21, #0x7
  42a3bc:	b.eq	42a498 <ferror@plt+0x27768>  // b.none
  42a3c0:	ldr	w20, [sp, #192]
  42a3c4:	mov	w24, #0x0                   	// #0
  42a3c8:	ldr	w0, [sp, #188]
  42a3cc:	cbnz	w0, 42a5a8 <ferror@plt+0x27878>
  42a3d0:	strb	w20, [sp, #344]
  42a3d4:	strb	w24, [sp, #345]
  42a3d8:	ldr	x0, [sp, #344]
  42a3dc:	str	x0, [sp, #616]
  42a3e0:	ldr	x0, [sp, #328]
  42a3e4:	str	x0, [sp, #160]
  42a3e8:	ldr	x0, [sp, #336]
  42a3ec:	str	x0, [sp, #168]
  42a3f0:	ldr	x0, [sp, #160]
  42a3f4:	str	x0, [sp, #600]
  42a3f8:	ldr	x0, [sp, #168]
  42a3fc:	str	x0, [sp, #608]
  42a400:	strb	w20, [sp, #616]
  42a404:	strb	w24, [sp, #617]
  42a408:	add	x0, sp, #0x280
  42a40c:	ldp	x0, x1, [x0, #-40]
  42a410:	stp	x0, x1, [x28, #-32]
  42a414:	ldr	x0, [sp, #616]
  42a418:	stur	x0, [x28, #-16]
  42a41c:	ldr	w0, [x28, #32]
  42a420:	stur	w0, [x28, #-8]
  42a424:	sub	x19, x28, #0x28
  42a428:	ldurb	w0, [x28, #-15]
  42a42c:	cbz	w0, 42a438 <ferror@plt+0x27708>
  42a430:	ldr	w0, [x26, #28]
  42a434:	cbz	w0, 42a8b0 <ferror@plt+0x27b80>
  42a438:	ldr	w0, [x19, #36]
  42a43c:	sbfiz	x1, x0, #1, #32
  42a440:	ldr	x2, [sp, #104]
  42a444:	ldrb	w1, [x2, x1]
  42a448:	ldr	w2, [sp, #152]
  42a44c:	cmp	w2, w1
  42a450:	b.cs	42a8c8 <ferror@plt+0x27b98>  // b.hs, b.nlast
  42a454:	mov	x28, x19
  42a458:	ldrb	w1, [x26, #1141]
  42a45c:	cbz	w1, 42a470 <ferror@plt+0x27740>
  42a460:	ldr	x1, [sp, #104]
  42a464:	add	x0, x1, w0, sxtw #1
  42a468:	ldrb	w0, [x0, #1]
  42a46c:	tbnz	w0, #2, 42993c <ferror@plt+0x26c0c>
  42a470:	ldr	w21, [x28, #36]
  42a474:	sub	w1, w21, #0x1
  42a478:	cmp	w1, #0x1b
  42a47c:	b.hi	42991c <ferror@plt+0x26bec>  // b.pmore
  42a480:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a484:	add	x0, x0, #0x268
  42a488:	ldrh	w0, [x0, w1, uxtw #1]
  42a48c:	adr	x1, 42a498 <ferror@plt+0x27768>
  42a490:	add	x0, x1, w0, sxth #2
  42a494:	br	x0
  42a498:	ldr	w0, [sp, #192]
  42a49c:	cbnz	w0, 42a59c <ferror@plt+0x2786c>
  42a4a0:	mov	w20, #0x0                   	// #0
  42a4a4:	ldr	w1, [sp, #184]
  42a4a8:	cbnz	w1, 42a530 <ferror@plt+0x27800>
  42a4ac:	ldr	x19, [sp, #160]
  42a4b0:	str	x19, [sp, #424]
  42a4b4:	ldr	x21, [sp, #168]
  42a4b8:	str	x21, [sp, #432]
  42a4bc:	strb	w20, [sp, #440]
  42a4c0:	strb	w0, [sp, #441]
  42a4c4:	add	x0, sp, #0x280
  42a4c8:	ldp	x0, x1, [x0, #-216]
  42a4cc:	stp	x0, x1, [sp, #224]
  42a4d0:	ldr	x0, [sp, #440]
  42a4d4:	str	x0, [sp, #240]
  42a4d8:	ldr	x1, [sp, #144]
  42a4dc:	add	x0, sp, #0xe0
  42a4e0:	bl	427878 <ferror@plt+0x24b48>
  42a4e4:	ldr	w1, [sp, #184]
  42a4e8:	eor	w1, w1, #0x1
  42a4ec:	and	w1, w1, #0xff
  42a4f0:	cmp	w1, w0, uxtb
  42a4f4:	b.eq	42a508 <ferror@plt+0x277d8>  // b.none
  42a4f8:	orr	x0, x19, x21
  42a4fc:	cmp	x0, #0x0
  42a500:	cset	w0, ne  // ne = any
  42a504:	str	w0, [sp, #192]
  42a508:	ldr	w24, [sp, #192]
  42a50c:	ldr	x0, [sp, #160]
  42a510:	str	x0, [sp, #424]
  42a514:	ldr	x0, [sp, #168]
  42a518:	str	x0, [sp, #432]
  42a51c:	strb	w20, [sp, #440]
  42a520:	strb	w24, [sp, #441]
  42a524:	ldr	x0, [sp, #440]
  42a528:	str	x0, [sp, #616]
  42a52c:	b	42a3f0 <ferror@plt+0x276c0>
  42a530:	ldr	x0, [sp, #160]
  42a534:	str	x0, [sp, #424]
  42a538:	ldr	x0, [sp, #168]
  42a53c:	str	x0, [sp, #432]
  42a540:	strb	wzr, [sp, #440]
  42a544:	strb	wzr, [sp, #441]
  42a548:	add	x0, sp, #0x280
  42a54c:	ldp	x0, x1, [x0, #-216]
  42a550:	stp	x0, x1, [sp, #256]
  42a554:	ldr	x0, [sp, #440]
  42a558:	str	x0, [sp, #272]
  42a55c:	add	x8, sp, #0xe0
  42a560:	ldr	x1, [sp, #144]
  42a564:	ldr	x0, [sp, #136]
  42a568:	bl	4278b0 <ferror@plt+0x24b80>
  42a56c:	ldr	x1, [sp, #224]
  42a570:	str	x1, [sp, #424]
  42a574:	ldr	x0, [sp, #232]
  42a578:	str	x0, [sp, #432]
  42a57c:	ldr	x0, [sp, #240]
  42a580:	str	x0, [sp, #440]
  42a584:	str	x1, [sp, #160]
  42a588:	ldr	x1, [sp, #432]
  42a58c:	str	x1, [sp, #168]
  42a590:	and	w20, w0, #0xff
  42a594:	ubfx	w0, w0, #8, #8
  42a598:	b	42a4ac <ferror@plt+0x2777c>
  42a59c:	mov	w24, #0x0                   	// #0
  42a5a0:	mov	w20, #0x1                   	// #1
  42a5a4:	b	42a50c <ferror@plt+0x277dc>
  42a5a8:	ldrb	w0, [sp, #192]
  42a5ac:	strb	w0, [sp, #344]
  42a5b0:	strb	wzr, [sp, #345]
  42a5b4:	add	x0, sp, #0x200
  42a5b8:	ldp	x0, x1, [x0, #-184]
  42a5bc:	stp	x0, x1, [sp, #256]
  42a5c0:	ldr	x0, [sp, #344]
  42a5c4:	str	x0, [sp, #272]
  42a5c8:	add	x8, sp, #0xe0
  42a5cc:	ldr	x1, [sp, #144]
  42a5d0:	ldr	x0, [sp, #136]
  42a5d4:	bl	4278b0 <ferror@plt+0x24b80>
  42a5d8:	ldp	x0, x1, [sp, #224]
  42a5dc:	add	x2, sp, #0x200
  42a5e0:	stp	x0, x1, [x2, #-184]
  42a5e4:	ldr	x0, [sp, #240]
  42a5e8:	str	x0, [sp, #344]
  42a5ec:	and	w20, w0, #0xff
  42a5f0:	ubfx	w24, w0, #8, #8
  42a5f4:	b	42a3d0 <ferror@plt+0x276a0>
  42a5f8:	sub	x19, x28, #0x28
  42a5fc:	ldur	x0, [x28, #-24]
  42a600:	ldur	x1, [x28, #-32]
  42a604:	orr	x0, x0, x1
  42a608:	cbz	x0, 42a64c <ferror@plt+0x2791c>
  42a60c:	ldr	w0, [x26, #28]
  42a610:	sub	w0, w0, #0x1
  42a614:	str	w0, [x26, #28]
  42a618:	ldur	x1, [x28, #-24]
  42a61c:	ldur	x0, [x28, #-32]
  42a620:	orr	x1, x1, x0
  42a624:	mov	w0, #0x1                   	// #1
  42a628:	cbz	x1, 42a64c <ferror@plt+0x2791c>
  42a62c:	and	x0, x0, #0xff
  42a630:	stur	x0, [x28, #-24]
  42a634:	stur	xzr, [x28, #-32]
  42a638:	sturb	wzr, [x28, #-16]
  42a63c:	sturb	wzr, [x28, #-15]
  42a640:	ldr	w0, [x28, #32]
  42a644:	stur	w0, [x28, #-8]
  42a648:	b	42a438 <ferror@plt+0x27708>
  42a64c:	ldr	x0, [x28, #16]
  42a650:	ldr	x1, [x28, #8]
  42a654:	orr	x0, x0, x1
  42a658:	cmp	x0, #0x0
  42a65c:	cset	w0, ne  // ne = any
  42a660:	b	42a62c <ferror@plt+0x278fc>
  42a664:	sub	x19, x28, #0x28
  42a668:	ldur	x0, [x28, #-24]
  42a66c:	ldur	x1, [x28, #-32]
  42a670:	orr	x0, x0, x1
  42a674:	cbnz	x0, 42a6b8 <ferror@plt+0x27988>
  42a678:	ldr	w0, [x26, #28]
  42a67c:	sub	w0, w0, #0x1
  42a680:	str	w0, [x26, #28]
  42a684:	ldur	x0, [x28, #-24]
  42a688:	ldur	x1, [x28, #-32]
  42a68c:	orr	x0, x0, x1
  42a690:	cbnz	x0, 42a6b8 <ferror@plt+0x27988>
  42a694:	mov	w0, #0x0                   	// #0
  42a698:	and	x0, x0, #0xff
  42a69c:	stur	x0, [x28, #-24]
  42a6a0:	stur	xzr, [x28, #-32]
  42a6a4:	sturb	wzr, [x28, #-16]
  42a6a8:	sturb	wzr, [x28, #-15]
  42a6ac:	ldr	w0, [x28, #32]
  42a6b0:	stur	w0, [x28, #-8]
  42a6b4:	b	42a438 <ferror@plt+0x27708>
  42a6b8:	ldr	x1, [x28, #16]
  42a6bc:	ldr	x0, [x28, #8]
  42a6c0:	orr	x1, x1, x0
  42a6c4:	mov	w0, #0x1                   	// #1
  42a6c8:	cbnz	x1, 42a698 <ferror@plt+0x27968>
  42a6cc:	b	42a694 <ferror@plt+0x27964>
  42a6d0:	mov	x27, x26
  42a6d4:	ldr	w26, [sp, #156]
  42a6d8:	cmp	w26, #0x15
  42a6dc:	b.ne	42a704 <ferror@plt+0x279d4>  // b.any
  42a6e0:	sub	x0, x28, #0x28
  42a6e4:	ldp	x2, x3, [x28, #8]
  42a6e8:	stp	x2, x3, [x28, #-32]
  42a6ec:	ldr	x1, [x28, #24]
  42a6f0:	stur	x1, [x28, #-16]
  42a6f4:	ldr	w1, [x28, #32]
  42a6f8:	stur	w1, [x28, #-8]
  42a6fc:	mov	x28, x0
  42a700:	b	42a810 <ferror@plt+0x27ae0>
  42a704:	ldr	x0, [x28]
  42a708:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a70c:	add	x4, x4, #0x1a0
  42a710:	mov	w3, #0x0                   	// #0
  42a714:	ldr	w2, [x0]
  42a718:	mov	w1, #0x3                   	// #3
  42a71c:	mov	x0, x27
  42a720:	bl	426bfc <ferror@plt+0x23ecc>
  42a724:	b	429934 <ferror@plt+0x26c04>
  42a728:	sub	x19, x28, #0x50
  42a72c:	ldur	x0, [x28, #-64]
  42a730:	ldur	x1, [x28, #-72]
  42a734:	orr	x0, x0, x1
  42a738:	cbz	x0, 42a774 <ferror@plt+0x27a44>
  42a73c:	ldr	w0, [x26, #28]
  42a740:	sub	w0, w0, #0x1
  42a744:	str	w0, [x26, #28]
  42a748:	ldp	x0, x1, [x28, #-32]
  42a74c:	stp	x0, x1, [x28, #-72]
  42a750:	ldur	x0, [x28, #-16]
  42a754:	stur	x0, [x28, #-56]
  42a758:	ldur	w0, [x28, #-8]
  42a75c:	stur	w0, [x28, #-48]
  42a760:	ldurb	w0, [x28, #-16]
  42a764:	cbnz	w0, 42a76c <ferror@plt+0x27a3c>
  42a768:	ldrb	w0, [x28, #24]
  42a76c:	sturb	w0, [x28, #-56]
  42a770:	b	42a438 <ferror@plt+0x27708>
  42a774:	ldp	x0, x1, [x28, #8]
  42a778:	stp	x0, x1, [x28, #-72]
  42a77c:	ldr	x0, [x28, #24]
  42a780:	stur	x0, [x28, #-56]
  42a784:	ldr	w0, [x28, #32]
  42a788:	stur	w0, [x28, #-48]
  42a78c:	b	42a760 <ferror@plt+0x27a30>
  42a790:	mov	x27, x26
  42a794:	ldr	w26, [sp, #156]
  42a798:	sub	w0, w26, #0x12
  42a79c:	cmp	w0, #0x1
  42a7a0:	b.hi	42a898 <ferror@plt+0x27b68>  // b.pmore
  42a7a4:	cmp	w26, #0x16
  42a7a8:	b.eq	42a998 <ferror@plt+0x27c68>  // b.none
  42a7ac:	cmp	w26, #0x11
  42a7b0:	b.eq	42a934 <ferror@plt+0x27c04>  // b.none
  42a7b4:	b.hi	42a8f4 <ferror@plt+0x27bc4>  // b.pmore
  42a7b8:	cmp	w26, #0xf
  42a7bc:	b.eq	42a934 <ferror@plt+0x27c04>  // b.none
  42a7c0:	cmp	w26, #0x10
  42a7c4:	b.ne	42a7e4 <ferror@plt+0x27ab4>  // b.any
  42a7c8:	ldr	x0, [x28, #16]
  42a7cc:	ldr	x1, [x28, #8]
  42a7d0:	orr	x0, x0, x1
  42a7d4:	cbz	x0, 42a7e4 <ferror@plt+0x27ab4>
  42a7d8:	ldr	w0, [x27, #28]
  42a7dc:	add	w0, w0, #0x1
  42a7e0:	str	w0, [x27, #28]
  42a7e4:	add	x28, x28, #0x28
  42a7e8:	ldr	x0, [x27, #1104]
  42a7ec:	cmp	x0, x28
  42a7f0:	b.eq	42a988 <ferror@plt+0x27c58>  // b.none
  42a7f4:	str	w26, [x28, #36]
  42a7f8:	ldr	x0, [sp, #120]
  42a7fc:	str	x0, [x28]
  42a800:	ldr	w0, [sp, #132]
  42a804:	str	w0, [x28, #32]
  42a808:	mov	w0, #0x1                   	// #1
  42a80c:	str	w0, [sp, #128]
  42a810:	ldr	w0, [sp, #116]
  42a814:	add	w0, w0, #0x1
  42a818:	str	w0, [sp, #116]
  42a81c:	add	x1, sp, #0x1c4
  42a820:	mov	x0, x27
  42a824:	bl	438b40 <ferror@plt+0x35e10>
  42a828:	str	x0, [sp, #120]
  42a82c:	ldrb	w0, [x0, #4]
  42a830:	ldr	w1, [sp, #452]
  42a834:	str	w1, [sp, #132]
  42a838:	cmp	w0, #0x5
  42a83c:	b.eq	4297c0 <ferror@plt+0x26a90>  // b.none
  42a840:	cmp	w0, #0x5
  42a844:	b.hi	429268 <ferror@plt+0x26538>  // b.pmore
  42a848:	cmp	w0, #0x1
  42a84c:	b.eq	429734 <ferror@plt+0x26a04>  // b.none
  42a850:	cmp	w0, #0x4
  42a854:	b.ne	4297d4 <ferror@plt+0x26aa4>  // b.any
  42a858:	ldr	w0, [sp, #128]
  42a85c:	mov	w26, #0x4                   	// #4
  42a860:	cbz	w0, 42ac30 <ferror@plt+0x27f00>
  42a864:	mov	w26, #0x1b                  	// #27
  42a868:	mov	w3, w26
  42a86c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a870:	add	x0, x0, #0x2a0
  42a874:	add	x0, x0, w26, sxtw #1
  42a878:	ldrb	w0, [x0, #1]
  42a87c:	tbz	w0, #0, 42ac48 <ferror@plt+0x27f18>
  42a880:	ldr	w1, [x28, #36]
  42a884:	sub	w2, w1, #0x1
  42a888:	cmp	w2, #0x1b
  42a88c:	b.ls	429780 <ferror@plt+0x26a50>  // b.plast
  42a890:	mov	x26, x27
  42a894:	b	42991c <ferror@plt+0x26bec>
  42a898:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a89c:	add	x2, x2, #0x1c0
  42a8a0:	mov	w1, #0x3                   	// #3
  42a8a4:	mov	x0, x27
  42a8a8:	bl	426a10 <ferror@plt+0x23ce0>
  42a8ac:	b	429934 <ferror@plt+0x26c04>
  42a8b0:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a8b4:	add	x2, x2, #0x1e0
  42a8b8:	mov	w1, #0x2                   	// #2
  42a8bc:	mov	x0, x26
  42a8c0:	bl	426a10 <ferror@plt+0x23ce0>
  42a8c4:	b	42a438 <ferror@plt+0x27708>
  42a8c8:	mov	x27, x26
  42a8cc:	ldr	w26, [sp, #156]
  42a8d0:	mov	x28, x19
  42a8d4:	cmp	w26, #0x15
  42a8d8:	b.ne	42a7a4 <ferror@plt+0x27a74>  // b.any
  42a8dc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a8e0:	add	x2, x2, #0x210
  42a8e4:	mov	w1, #0x3                   	// #3
  42a8e8:	mov	x0, x27
  42a8ec:	bl	426a10 <ferror@plt+0x23ce0>
  42a8f0:	b	429934 <ferror@plt+0x26c04>
  42a8f4:	cmp	w26, #0x12
  42a8f8:	b.ne	42a928 <ferror@plt+0x27bf8>  // b.any
  42a8fc:	ldr	w0, [x28, #36]
  42a900:	cmp	w0, #0x11
  42a904:	b.ne	42a954 <ferror@plt+0x27c24>  // b.any
  42a908:	ldur	x0, [x28, #-24]
  42a90c:	ldur	x1, [x28, #-32]
  42a910:	orr	x0, x0, x1
  42a914:	cbz	x0, 42a978 <ferror@plt+0x27c48>
  42a918:	ldr	w0, [x27, #28]
  42a91c:	add	w0, w0, #0x1
  42a920:	str	w0, [x27, #28]
  42a924:	b	42a7e4 <ferror@plt+0x27ab4>
  42a928:	cmp	w26, #0x15
  42a92c:	b.eq	42a810 <ferror@plt+0x27ae0>  // b.none
  42a930:	b	42a7e4 <ferror@plt+0x27ab4>
  42a934:	ldr	x0, [x28, #16]
  42a938:	ldr	x1, [x28, #8]
  42a93c:	orr	x0, x0, x1
  42a940:	cbnz	x0, 42a7e4 <ferror@plt+0x27ab4>
  42a944:	ldr	w0, [x27, #28]
  42a948:	add	w0, w0, #0x1
  42a94c:	str	w0, [x27, #28]
  42a950:	b	42a7e4 <ferror@plt+0x27ab4>
  42a954:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a958:	add	x4, x4, #0x230
  42a95c:	mov	w3, #0x0                   	// #0
  42a960:	ldr	w2, [sp, #132]
  42a964:	mov	w1, #0x3                   	// #3
  42a968:	mov	x0, x27
  42a96c:	bl	426bfc <ferror@plt+0x23ecc>
  42a970:	mov	w0, #0x0                   	// #0
  42a974:	b	4292dc <ferror@plt+0x265ac>
  42a978:	ldr	w0, [x27, #28]
  42a97c:	sub	w0, w0, #0x1
  42a980:	str	w0, [x27, #28]
  42a984:	b	42a7e4 <ferror@plt+0x27ab4>
  42a988:	mov	x0, x27
  42a98c:	bl	429194 <ferror@plt+0x26464>
  42a990:	mov	x28, x0
  42a994:	b	42a7f4 <ferror@plt+0x27ac4>
  42a998:	mov	x26, x27
  42a99c:	ldr	x0, [x27, #432]
  42a9a0:	cbz	x0, 42a9c0 <ferror@plt+0x27c90>
  42a9a4:	ldr	w0, [sp, #196]
  42a9a8:	eor	w0, w0, #0x1
  42a9ac:	ldr	w1, [sp, #116]
  42a9b0:	cmp	w1, #0x3
  42a9b4:	csinc	w0, w0, wzr, eq  // eq = none
  42a9b8:	cbz	w0, 42a9c0 <ferror@plt+0x27c90>
  42a9bc:	str	xzr, [x27, #432]
  42a9c0:	ldr	x0, [x26, #1096]
  42a9c4:	cmp	x0, x28
  42a9c8:	b.eq	42aa0c <ferror@plt+0x27cdc>  // b.none
  42a9cc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  42a9d0:	add	x0, x0, #0xdf0
  42a9d4:	adrp	x5, 478000 <_obstack_memory_used@@Base+0x23c60>
  42a9d8:	add	x5, x5, #0xde8
  42a9dc:	ldr	w1, [sp, #212]
  42a9e0:	cmp	w1, #0x0
  42a9e4:	csel	x5, x5, x0, ne  // ne = any
  42a9e8:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42a9ec:	add	x4, x4, #0x250
  42a9f0:	mov	w3, #0x0                   	// #0
  42a9f4:	ldr	w2, [x28, #32]
  42a9f8:	mov	w1, #0x4                   	// #4
  42a9fc:	mov	x0, x26
  42aa00:	bl	426bfc <ferror@plt+0x23ecc>
  42aa04:	mov	w0, #0x0                   	// #0
  42aa08:	b	4292dc <ferror@plt+0x265ac>
  42aa0c:	ldr	x0, [x28, #16]
  42aa10:	ldr	x1, [x28, #8]
  42aa14:	orr	x0, x0, x1
  42aa18:	cmp	x0, #0x0
  42aa1c:	cset	w0, ne  // ne = any
  42aa20:	b	4292dc <ferror@plt+0x265ac>
  42aa24:	ldr	x22, [x26, #1208]
  42aa28:	mov	w27, w0
  42aa2c:	mov	w20, #0x0                   	// #0
  42aa30:	add	x8, sp, #0x240
  42aa34:	mov	x1, x19
  42aa38:	mov	x0, x23
  42aa3c:	bl	427c00 <ferror@plt+0x24ed0>
  42aa40:	ldr	x21, [sp, #576]
  42aa44:	ldr	x0, [sp, #584]
  42aa48:	str	x0, [sp, #144]
  42aa4c:	add	x8, sp, #0x1a8
  42aa50:	mov	x1, x19
  42aa54:	mov	x0, x24
  42aa58:	bl	427c00 <ferror@plt+0x24ed0>
  42aa5c:	ldr	x0, [sp, #432]
  42aa60:	add	x21, x21, x0
  42aa64:	ldr	x0, [sp, #424]
  42aa68:	mov	w19, #0x1                   	// #1
  42aa6c:	cbnz	x0, 42aa80 <ferror@plt+0x27d50>
  42aa70:	cmp	x25, #0x0
  42aa74:	cset	w19, ne  // ne = any
  42aa78:	cmp	x24, #0x0
  42aa7c:	csel	w19, w19, wzr, ne  // ne = any
  42aa80:	add	x8, sp, #0x1a8
  42aa84:	mov	x1, x25
  42aa88:	mov	x0, x23
  42aa8c:	bl	427c00 <ferror@plt+0x24ed0>
  42aa90:	ldr	x0, [sp, #432]
  42aa94:	add	x21, x21, x0
  42aa98:	ldr	x0, [sp, #424]
  42aa9c:	cmp	x0, #0x0
  42aaa0:	csinc	w19, w19, wzr, eq  // eq = none
  42aaa4:	str	x21, [sp, #576]
  42aaa8:	add	x0, sp, #0x200
  42aaac:	ldp	x0, x1, [x0, #64]
  42aab0:	stp	x0, x1, [sp, #256]
  42aab4:	ldr	x0, [sp, #592]
  42aab8:	str	x0, [sp, #272]
  42aabc:	add	x8, sp, #0xe0
  42aac0:	mov	x1, x22
  42aac4:	ldr	x0, [sp, #136]
  42aac8:	bl	427814 <ferror@plt+0x24ae4>
  42aacc:	ldr	x23, [sp, #224]
  42aad0:	str	x23, [sp, #576]
  42aad4:	ldr	x0, [sp, #232]
  42aad8:	str	x0, [sp, #584]
  42aadc:	ldr	x0, [sp, #240]
  42aae0:	str	x0, [sp, #592]
  42aae4:	ldr	x24, [sp, #584]
  42aae8:	ldr	x0, [sp, #144]
  42aaec:	cmp	x0, x24
  42aaf0:	b.eq	429ffc <ferror@plt+0x272cc>  // b.none
  42aaf4:	mov	w19, #0x1                   	// #1
  42aaf8:	cbnz	w20, 42a008 <ferror@plt+0x272d8>
  42aafc:	ldrb	w2, [sp, #592]
  42ab00:	ldrb	w0, [sp, #593]
  42ab04:	mov	w1, #0x0                   	// #0
  42ab08:	cbnz	w27, 42ab5c <ferror@plt+0x27e2c>
  42ab0c:	cbnz	w19, 42ab58 <ferror@plt+0x27e28>
  42ab10:	str	x23, [sp, #576]
  42ab14:	str	x24, [sp, #584]
  42ab18:	strb	w2, [sp, #592]
  42ab1c:	strb	w0, [sp, #593]
  42ab20:	add	x0, sp, #0x200
  42ab24:	ldp	x0, x1, [x0, #64]
  42ab28:	stp	x0, x1, [sp, #224]
  42ab2c:	ldr	x0, [sp, #592]
  42ab30:	str	x0, [sp, #240]
  42ab34:	mov	x1, x22
  42ab38:	add	x0, sp, #0xe0
  42ab3c:	bl	427878 <ferror@plt+0x24b48>
  42ab40:	eor	w20, w20, #0x1
  42ab44:	cmp	w20, w0, uxtb
  42ab48:	b.eq	42ab58 <ferror@plt+0x27e28>  // b.none
  42ab4c:	orr	x0, x23, x24
  42ab50:	cmp	x0, #0x0
  42ab54:	cset	w19, ne  // ne = any
  42ab58:	mov	w1, w19
  42ab5c:	str	x23, [sp, #576]
  42ab60:	str	x24, [sp, #584]
  42ab64:	strb	w27, [sp, #592]
  42ab68:	strb	w1, [sp, #593]
  42ab6c:	add	x0, sp, #0x200
  42ab70:	ldp	x0, x1, [x0, #64]
  42ab74:	stp	x0, x1, [x28, #-32]
  42ab78:	ldr	x0, [sp, #592]
  42ab7c:	stur	x0, [x28, #-16]
  42ab80:	ldr	w0, [x28, #32]
  42ab84:	stur	w0, [x28, #-8]
  42ab88:	b	42a424 <ferror@plt+0x276f4>
  42ab8c:	ldr	x0, [x26, #1208]
  42ab90:	str	x0, [sp, #144]
  42ab94:	str	w20, [sp, #192]
  42ab98:	str	wzr, [sp, #188]
  42ab9c:	str	wzr, [sp, #184]
  42aba0:	cbz	x19, 42a1c0 <ferror@plt+0x27490>
  42aba4:	ldr	x1, [sp, #144]
  42aba8:	sub	x0, x1, #0x1
  42abac:	sub	w2, w1, #0x41
  42abb0:	mov	x1, #0x1                   	// #1
  42abb4:	lsl	x1, x1, x2
  42abb8:	tst	x19, x1
  42abbc:	b.ne	42abd0 <ferror@plt+0x27ea0>  // b.any
  42abc0:	sub	x0, x0, #0x1
  42abc4:	lsr	x1, x1, #1
  42abc8:	tst	x19, x1
  42abcc:	b.eq	42abc0 <ferror@plt+0x27e90>  // b.none
  42abd0:	ldr	x3, [sp, #144]
  42abd4:	sub	x20, x3, #0x1
  42abd8:	sub	x20, x20, x0
  42abdc:	str	x19, [sp, #352]
  42abe0:	str	x22, [sp, #360]
  42abe4:	mov	w0, #0x1                   	// #1
  42abe8:	strb	w0, [sp, #368]
  42abec:	ldp	x0, x1, [sp, #352]
  42abf0:	stp	x0, x1, [sp, #224]
  42abf4:	ldr	x0, [sp, #368]
  42abf8:	str	x0, [sp, #240]
  42abfc:	add	x8, sp, #0x178
  42ac00:	mov	x2, x20
  42ac04:	mov	x1, x3
  42ac08:	add	x0, sp, #0xe0
  42ac0c:	bl	427a9c <ferror@plt+0x24d6c>
  42ac10:	ldr	x19, [sp, #376]
  42ac14:	ldr	x22, [sp, #384]
  42ac18:	str	xzr, [sp, #168]
  42ac1c:	str	xzr, [sp, #160]
  42ac20:	mov	w27, #0x1                   	// #1
  42ac24:	str	x28, [sp, #200]
  42ac28:	str	w21, [sp, #208]
  42ac2c:	b	42a25c <ferror@plt+0x2752c>
  42ac30:	mov	w3, w26
  42ac34:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ac38:	add	x0, x0, #0x2a0
  42ac3c:	add	x0, x0, w26, sxtw #1
  42ac40:	ldrb	w0, [x0, #1]
  42ac44:	tbnz	w0, #0, 42aca0 <ferror@plt+0x27f70>
  42ac48:	ldr	w1, [sp, #128]
  42ac4c:	cbz	w1, 429768 <ferror@plt+0x26a38>
  42ac50:	ldr	w1, [x28, #36]
  42ac54:	and	w1, w1, #0xfffffffd
  42ac58:	cmp	w1, #0x14
  42ac5c:	b.ne	429910 <ferror@plt+0x26be0>  // b.any
  42ac60:	sub	w1, w26, #0x15
  42ac64:	cmp	w1, #0x1
  42ac68:	b.ls	429768 <ferror@plt+0x26a38>  // b.plast
  42ac6c:	ldr	x1, [sp, #120]
  42ac70:	mov	x0, x27
  42ac74:	bl	431e54 <ferror@plt+0x2f124>
  42ac78:	mov	x5, x0
  42ac7c:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ac80:	add	x4, x4, #0xa0
  42ac84:	mov	w3, #0x0                   	// #0
  42ac88:	ldr	w2, [sp, #132]
  42ac8c:	mov	w1, #0x3                   	// #3
  42ac90:	mov	x0, x27
  42ac94:	bl	426bfc <ferror@plt+0x23ecc>
  42ac98:	mov	w0, #0x0                   	// #0
  42ac9c:	b	4292dc <ferror@plt+0x265ac>
  42aca0:	mov	x26, x27
  42aca4:	ldr	x1, [sp, #120]
  42aca8:	mov	x0, x26
  42acac:	bl	431e54 <ferror@plt+0x2f124>
  42acb0:	mov	x5, x0
  42acb4:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x23c60>
  42acb8:	add	x4, x4, #0xdf8
  42acbc:	mov	w3, #0x0                   	// #0
  42acc0:	ldr	w2, [sp, #132]
  42acc4:	mov	w1, #0x3                   	// #3
  42acc8:	mov	x0, x26
  42accc:	bl	426bfc <ferror@plt+0x23ecc>
  42acd0:	mov	w0, #0x0                   	// #0
  42acd4:	b	4292dc <ferror@plt+0x265ac>
  42acd8:	ldr	x19, [x19, #8]
  42acdc:	cbz	x19, 429538 <ferror@plt+0x26808>
  42ace0:	ldr	x0, [x27, #136]
  42ace4:	cmp	x20, x0
  42ace8:	b.eq	4295dc <ferror@plt+0x268ac>  // b.none
  42acec:	ldrb	w0, [x27, #1150]
  42acf0:	cbnz	w0, 4295ec <ferror@plt+0x268bc>
  42acf4:	ldrb	w0, [x19, #18]
  42acf8:	and	w0, w0, #0x3
  42acfc:	cmp	w0, #0x2
  42ad00:	b.eq	429604 <ferror@plt+0x268d4>  // b.none
  42ad04:	ldrh	w0, [x19, #18]
  42ad08:	tbz	w0, #7, 429618 <ferror@plt+0x268e8>
  42ad0c:	str	x19, [x27, #432]
  42ad10:	ldrb	w0, [x27, #24]
  42ad14:	sub	w0, w0, #0x1
  42ad18:	strb	w0, [x27, #24]
  42ad1c:	ldrb	w0, [x19, #18]
  42ad20:	mov	w1, #0x0                   	// #0
  42ad24:	tbz	w0, #1, 42ad38 <ferror@plt+0x28008>
  42ad28:	ldrh	w1, [x19, #18]
  42ad2c:	ubfx	x1, x1, #8, #2
  42ad30:	eor	w1, w1, #0x1
  42ad34:	and	w1, w1, #0x1
  42ad38:	and	x1, x1, #0xff
  42ad3c:	mov	w2, #0x0                   	// #0
  42ad40:	mov	w0, #0x0                   	// #0
  42ad44:	mov	x3, #0x0                   	// #0
  42ad48:	b	42adbc <ferror@plt+0x2808c>
  42ad4c:	str	wzr, [sp, #400]
  42ad50:	b	4293b4 <ferror@plt+0x26684>
  42ad54:	ldr	w0, [sp, #128]
  42ad58:	cbnz	w0, 42ad4c <ferror@plt+0x2801c>
  42ad5c:	mov	x26, x27
  42ad60:	b	4292ac <ferror@plt+0x2657c>
  42ad64:	str	wzr, [sp, #400]
  42ad68:	ldrb	w0, [x27, #18]
  42ad6c:	cbnz	w0, 42ad80 <ferror@plt+0x28050>
  42ad70:	ldrb	w0, [x27, #1154]
  42ad74:	cbnz	w0, 4296b4 <ferror@plt+0x26984>
  42ad78:	ldrb	w0, [x27, #1132]
  42ad7c:	cbnz	w0, 4296d4 <ferror@plt+0x269a4>
  42ad80:	add	x1, sp, #0x178
  42ad84:	mov	x0, x27
  42ad88:	bl	425b00 <ferror@plt+0x22dd0>
  42ad8c:	ldr	w1, [sp, #376]
  42ad90:	mov	w2, #0x0                   	// #0
  42ad94:	mov	x3, #0x0                   	// #0
  42ad98:	ldr	w0, [sp, #400]
  42ad9c:	cmp	w0, #0x0
  42ada0:	cset	w0, ne  // ne = any
  42ada4:	str	x3, [sp, #424]
  42ada8:	str	x1, [sp, #432]
  42adac:	strb	w0, [sp, #440]
  42adb0:	strb	w2, [sp, #441]
  42adb4:	ldr	x4, [sp, #440]
  42adb8:	str	x4, [sp, #472]
  42adbc:	str	x3, [sp, #456]
  42adc0:	str	x1, [sp, #464]
  42adc4:	strb	w0, [sp, #472]
  42adc8:	strb	w2, [sp, #473]
  42adcc:	add	x0, sp, #0x280
  42add0:	ldp	x0, x1, [x0, #-184]
  42add4:	stp	x0, x1, [x28, #8]
  42add8:	ldr	x0, [sp, #472]
  42addc:	str	x0, [x28, #24]
  42ade0:	str	wzr, [sp, #128]
  42ade4:	b	42a810 <ferror@plt+0x27ae0>
  42ade8:	ldr	x2, [x0]
  42adec:	ldr	x3, [x0, #8]
  42adf0:	ldrb	w4, [x0, #16]
  42adf4:	cbnz	w4, 42ae28 <ferror@plt+0x280f8>
  42adf8:	cmp	x1, #0x40
  42adfc:	b.ls	42ae44 <ferror@plt+0x28114>  // b.plast
  42ae00:	sub	x1, x1, #0x40
  42ae04:	cmp	x1, #0x3f
  42ae08:	b.hi	42ae28 <ferror@plt+0x280f8>  // b.pmore
  42ae0c:	sub	w4, w1, #0x1
  42ae10:	lsr	x4, x2, x4
  42ae14:	tbz	w4, #0, 42ae28 <ferror@plt+0x280f8>
  42ae18:	neg	w1, w1
  42ae1c:	mov	x4, #0xffffffffffffffff    	// #-1
  42ae20:	lsr	x1, x4, x1
  42ae24:	orn	x2, x2, x1
  42ae28:	str	x2, [x0]
  42ae2c:	str	x3, [x0, #8]
  42ae30:	ldp	x2, x3, [x0]
  42ae34:	stp	x2, x3, [x8]
  42ae38:	ldr	x0, [x0, #16]
  42ae3c:	str	x0, [x8, #16]
  42ae40:	ret
  42ae44:	sub	w4, w1, #0x1
  42ae48:	lsr	x4, x3, x4
  42ae4c:	tbz	w4, #0, 42ae28 <ferror@plt+0x280f8>
  42ae50:	mov	x2, #0xffffffffffffffff    	// #-1
  42ae54:	cmp	x1, #0x3f
  42ae58:	b.hi	42ae28 <ferror@plt+0x280f8>  // b.pmore
  42ae5c:	neg	w1, w1
  42ae60:	lsr	x1, x2, x1
  42ae64:	orn	x3, x3, x1
  42ae68:	b	42ae28 <ferror@plt+0x280f8>
  42ae6c:	stp	x29, x30, [sp, #-16]!
  42ae70:	mov	x29, sp
  42ae74:	ldr	x1, [x0, #8]
  42ae78:	cbz	x1, 42ae90 <ferror@plt+0x28160>
  42ae7c:	ldr	x0, [x0, #24]
  42ae80:	ldr	x0, [x0]
  42ae84:	bl	453c24 <ferror@plt+0x50ef4>
  42ae88:	ldp	x29, x30, [sp], #16
  42ae8c:	ret
  42ae90:	ldr	x0, [x0, #24]
  42ae94:	ldr	x0, [x0, #8]
  42ae98:	b	42ae84 <ferror@plt+0x28154>
  42ae9c:	stp	x29, x30, [sp, #-32]!
  42aea0:	mov	x29, sp
  42aea4:	str	x19, [sp, #16]
  42aea8:	mov	x19, x0
  42aeac:	ldr	x0, [x0, #48]
  42aeb0:	bl	402a90 <free@plt>
  42aeb4:	ldr	x0, [x19]
  42aeb8:	bl	402a90 <free@plt>
  42aebc:	ldr	x0, [x19, #8]
  42aec0:	bl	402a90 <free@plt>
  42aec4:	mov	x0, x19
  42aec8:	bl	402a90 <free@plt>
  42aecc:	ldr	x19, [sp, #16]
  42aed0:	ldp	x29, x30, [sp], #32
  42aed4:	ret
  42aed8:	ldr	x0, [x0]
  42aedc:	ldr	x2, [x0, #8]
  42aee0:	cbz	x2, 42af68 <ferror@plt+0x28238>
  42aee4:	stp	x29, x30, [sp, #-32]!
  42aee8:	mov	x29, sp
  42aeec:	stp	x19, x20, [sp, #16]
  42aef0:	mov	x19, x1
  42aef4:	ldr	x20, [x0, #24]
  42aef8:	ldrb	w0, [x20, #210]
  42aefc:	cbnz	w0, 42af08 <ferror@plt+0x281d8>
  42af00:	ldr	x0, [x20, #56]
  42af04:	cbz	x0, 42af18 <ferror@plt+0x281e8>
  42af08:	mov	w0, #0x1                   	// #1
  42af0c:	ldp	x19, x20, [sp, #16]
  42af10:	ldp	x29, x30, [sp], #32
  42af14:	ret
  42af18:	ldrh	w0, [x20, #208]
  42af1c:	cmp	w0, #0x1
  42af20:	b.ne	42af08 <ferror@plt+0x281d8>  // b.any
  42af24:	ldrb	w0, [x20, #212]
  42af28:	cbnz	w0, 42af08 <ferror@plt+0x281d8>
  42af2c:	ldr	x0, [x1]
  42af30:	cbz	x0, 42af50 <ferror@plt+0x28220>
  42af34:	ldr	x1, [x19]
  42af38:	ldr	x0, [x19, #8]
  42af3c:	add	x2, x0, #0x1
  42af40:	str	x2, [x19, #8]
  42af44:	ldr	x2, [x20, #8]
  42af48:	str	x2, [x1, x0, lsl #3]
  42af4c:	b	42af08 <ferror@plt+0x281d8>
  42af50:	mov	x1, #0x8                   	// #8
  42af54:	ldr	x0, [x19, #8]
  42af58:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  42af5c:	str	x0, [x19]
  42af60:	str	xzr, [x19, #8]
  42af64:	b	42af34 <ferror@plt+0x28204>
  42af68:	mov	w0, #0x1                   	// #1
  42af6c:	ret
  42af70:	stp	x29, x30, [sp, #-16]!
  42af74:	mov	x29, sp
  42af78:	bl	452d78 <ferror@plt+0x50048>
  42af7c:	cmp	w0, #0x0
  42af80:	cset	w0, eq  // eq = none
  42af84:	ldp	x29, x30, [sp], #16
  42af88:	ret
  42af8c:	stp	x29, x30, [sp, #-16]!
  42af90:	mov	x29, sp
  42af94:	ldr	x2, [x0, #8]
  42af98:	cbz	x2, 42afb8 <ferror@plt+0x28288>
  42af9c:	ldr	x0, [x0, #24]
  42afa0:	ldr	x0, [x0]
  42afa4:	bl	452d78 <ferror@plt+0x50048>
  42afa8:	cmp	w0, #0x0
  42afac:	cset	w0, eq  // eq = none
  42afb0:	ldp	x29, x30, [sp], #16
  42afb4:	ret
  42afb8:	ldr	x0, [x0, #24]
  42afbc:	ldr	x0, [x0, #8]
  42afc0:	b	42afa4 <ferror@plt+0x28274>
  42afc4:	stp	x29, x30, [sp, #-64]!
  42afc8:	mov	x29, sp
  42afcc:	stp	x19, x20, [sp, #16]
  42afd0:	stp	x21, x22, [sp, #32]
  42afd4:	str	x23, [sp, #48]
  42afd8:	mov	x23, x0
  42afdc:	mov	x22, x1
  42afe0:	ldr	w19, [x1, #16]
  42afe4:	bl	402680 <strlen@plt>
  42afe8:	mov	x21, x0
  42afec:	add	x0, x19, #0x2
  42aff0:	add	x0, x0, x21
  42aff4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42aff8:	mov	x20, x0
  42affc:	mov	x2, x19
  42b000:	ldr	x1, [x22, #8]
  42b004:	bl	402620 <memcpy@plt>
  42b008:	cbz	x19, 42b028 <ferror@plt+0x282f8>
  42b00c:	add	x0, x20, x19
  42b010:	ldurb	w0, [x0, #-1]
  42b014:	cmp	w0, #0x2f
  42b018:	b.eq	42b028 <ferror@plt+0x282f8>  // b.none
  42b01c:	mov	w0, #0x2f                  	// #47
  42b020:	strb	w0, [x20, x19]
  42b024:	add	x19, x19, #0x1
  42b028:	add	x2, x21, #0x1
  42b02c:	mov	x1, x23
  42b030:	add	x0, x20, x19
  42b034:	bl	402620 <memcpy@plt>
  42b038:	mov	x0, x20
  42b03c:	ldp	x19, x20, [sp, #16]
  42b040:	ldp	x21, x22, [sp, #32]
  42b044:	ldr	x23, [sp, #48]
  42b048:	ldp	x29, x30, [sp], #64
  42b04c:	ret
  42b050:	stp	x29, x30, [sp, #-32]!
  42b054:	mov	x29, sp
  42b058:	str	x19, [sp, #16]
  42b05c:	mov	x19, x0
  42b060:	ldr	x0, [x0, #312]
  42b064:	ldr	w0, [x0]
  42b068:	cmp	w0, #0x7f
  42b06c:	b.eq	42b09c <ferror@plt+0x2836c>  // b.none
  42b070:	ldr	x0, [x19, #312]
  42b074:	ldr	w1, [x0]
  42b078:	add	w2, w1, #0x1
  42b07c:	str	w2, [x0]
  42b080:	ubfiz	x1, x1, #5, #32
  42b084:	add	x1, x1, #0x10
  42b088:	ldr	x0, [x19, #312]
  42b08c:	add	x0, x0, x1
  42b090:	ldr	x19, [sp, #16]
  42b094:	ldp	x29, x30, [sp], #32
  42b098:	ret
  42b09c:	mov	x0, #0xff0                 	// #4080
  42b0a0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42b0a4:	str	wzr, [x0]
  42b0a8:	ldr	x1, [x19, #312]
  42b0ac:	str	x1, [x0, #8]
  42b0b0:	str	x0, [x19, #312]
  42b0b4:	b	42b070 <ferror@plt+0x28340>
  42b0b8:	stp	x29, x30, [sp, #-64]!
  42b0bc:	mov	x29, sp
  42b0c0:	stp	x19, x20, [sp, #16]
  42b0c4:	stp	x21, x22, [sp, #32]
  42b0c8:	str	x23, [sp, #48]
  42b0cc:	mov	x21, x0
  42b0d0:	mov	x20, x1
  42b0d4:	mov	w23, w2
  42b0d8:	ldr	x19, [x0, #304]
  42b0dc:	mov	x0, x1
  42b0e0:	bl	453c24 <ferror@plt+0x50ef4>
  42b0e4:	mov	w3, #0x1                   	// #1
  42b0e8:	mov	w2, w0
  42b0ec:	mov	x1, x20
  42b0f0:	mov	x0, x19
  42b0f4:	bl	4537e4 <ferror@plt+0x50ab4>
  42b0f8:	mov	x22, x0
  42b0fc:	ldr	x3, [x0]
  42b100:	cbz	x3, 42b114 <ferror@plt+0x283e4>
  42b104:	ldr	x4, [x3, #8]
  42b108:	cbz	x4, 42b184 <ferror@plt+0x28454>
  42b10c:	ldr	x3, [x3]
  42b110:	cbnz	x3, 42b104 <ferror@plt+0x283d4>
  42b114:	mov	x1, #0x40                  	// #64
  42b118:	mov	x0, #0x1                   	// #1
  42b11c:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  42b120:	mov	x19, x0
  42b124:	ldr	x0, [x21, #200]
  42b128:	str	x0, [x19]
  42b12c:	str	x20, [x19, #8]
  42b130:	mov	x0, x20
  42b134:	bl	402680 <strlen@plt>
  42b138:	str	w0, [x19, #16]
  42b13c:	strb	w23, [x19, #20]
  42b140:	str	xzr, [x19, #40]
  42b144:	mov	x0, x21
  42b148:	bl	42b050 <ferror@plt+0x28320>
  42b14c:	ldr	x1, [x22]
  42b150:	str	x1, [x0]
  42b154:	str	xzr, [x0, #8]
  42b158:	ldr	x1, [x21, #40]
  42b15c:	ldr	w1, [x1, #56]
  42b160:	str	w1, [x0, #16]
  42b164:	str	x19, [x0, #24]
  42b168:	str	x0, [x22]
  42b16c:	mov	x0, x19
  42b170:	ldp	x19, x20, [sp, #16]
  42b174:	ldp	x21, x22, [sp, #32]
  42b178:	ldr	x23, [sp, #48]
  42b17c:	ldp	x29, x30, [sp], #64
  42b180:	ret
  42b184:	ldr	x19, [x3, #24]
  42b188:	b	42b16c <ferror@plt+0x2843c>
  42b18c:	stp	x29, x30, [sp, #-80]!
  42b190:	mov	x29, sp
  42b194:	stp	x19, x20, [sp, #16]
  42b198:	stp	x21, x22, [sp, #32]
  42b19c:	mov	w20, w0
  42b1a0:	mov	x21, x1
  42b1a4:	mov	x0, #0x15                  	// #21
  42b1a8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42b1ac:	mov	x22, x0
  42b1b0:	and	x1, x20, #0xff
  42b1b4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42b1b8:	add	x0, x0, #0x28
  42b1bc:	ldrh	w0, [x0, x1, lsl #1]
  42b1c0:	mov	x19, x22
  42b1c4:	tst	w0, #0xc00
  42b1c8:	b.ne	42b204 <ferror@plt+0x284d4>  // b.any
  42b1cc:	stp	x23, x24, [sp, #48]
  42b1d0:	str	x25, [sp, #64]
  42b1d4:	strb	w20, [x19], #1
  42b1d8:	mov	w23, #0x14                  	// #20
  42b1dc:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42b1e0:	add	x24, x24, #0x28
  42b1e4:	b	42b24c <ferror@plt+0x2851c>
  42b1e8:	mov	x0, x21
  42b1ec:	bl	402d00 <__uflow@plt>
  42b1f0:	mov	w20, w0
  42b1f4:	cmn	w0, #0x1
  42b1f8:	b.ne	42b268 <ferror@plt+0x28538>  // b.any
  42b1fc:	ldp	x23, x24, [sp, #48]
  42b200:	ldr	x25, [sp, #64]
  42b204:	strb	wzr, [x19]
  42b208:	mov	x1, x21
  42b20c:	mov	w0, w20
  42b210:	bl	402aa0 <ungetc@plt>
  42b214:	mov	x0, x22
  42b218:	ldp	x19, x20, [sp, #16]
  42b21c:	ldp	x21, x22, [sp, #32]
  42b220:	ldp	x29, x30, [sp], #80
  42b224:	ret
  42b228:	lsl	w25, w23, #1
  42b22c:	add	w1, w25, #0x1
  42b230:	sxtw	x1, w1
  42b234:	mov	x0, x22
  42b238:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42b23c:	mov	x22, x0
  42b240:	add	x19, x0, w23, sxtw
  42b244:	mov	w23, w25
  42b248:	strb	w20, [x19], #1
  42b24c:	ldr	x2, [x21, #8]
  42b250:	ldr	x0, [x21, #16]
  42b254:	cmp	x2, x0
  42b258:	b.cs	42b1e8 <ferror@plt+0x284b8>  // b.hs, b.nlast
  42b25c:	add	x0, x2, #0x1
  42b260:	str	x0, [x21, #8]
  42b264:	ldrb	w20, [x2]
  42b268:	and	x0, x20, #0xff
  42b26c:	ldrh	w0, [x24, x0, lsl #1]
  42b270:	tst	w0, #0xc00
  42b274:	b.ne	42b288 <ferror@plt+0x28558>  // b.any
  42b278:	sub	x0, x19, x22
  42b27c:	cmp	x0, w23, sxtw
  42b280:	b.ne	42b248 <ferror@plt+0x28518>  // b.any
  42b284:	b	42b228 <ferror@plt+0x284f8>
  42b288:	ldp	x23, x24, [sp, #48]
  42b28c:	ldr	x25, [sp, #64]
  42b290:	b	42b204 <ferror@plt+0x284d4>
  42b294:	stp	x29, x30, [sp, #-96]!
  42b298:	mov	x29, sp
  42b29c:	stp	x19, x20, [sp, #16]
  42b2a0:	stp	x21, x22, [sp, #32]
  42b2a4:	stp	x23, x24, [sp, #48]
  42b2a8:	stp	x25, x26, [sp, #64]
  42b2ac:	str	x27, [sp, #80]
  42b2b0:	mov	x21, x0
  42b2b4:	ldr	w19, [x0, #16]
  42b2b8:	add	x0, x19, #0x1b
  42b2bc:	and	x0, x0, #0x1fffffff0
  42b2c0:	sub	sp, sp, x0
  42b2c4:	mov	x20, sp
  42b2c8:	mov	x2, x19
  42b2cc:	ldr	x1, [x21, #8]
  42b2d0:	mov	x0, x20
  42b2d4:	bl	402620 <memcpy@plt>
  42b2d8:	cbz	x19, 42b2f8 <ferror@plt+0x285c8>
  42b2dc:	add	x0, x20, x19
  42b2e0:	ldurb	w0, [x0, #-1]
  42b2e4:	cmp	w0, #0x2f
  42b2e8:	b.eq	42b2f8 <ferror@plt+0x285c8>  // b.none
  42b2ec:	mov	w0, #0x2f                  	// #47
  42b2f0:	strb	w0, [x20, x19]
  42b2f4:	add	x19, x19, #0x1
  42b2f8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42b2fc:	add	x0, x0, #0x2e0
  42b300:	add	x1, x20, x19
  42b304:	ldr	x2, [x0]
  42b308:	str	x2, [x20, x19]
  42b30c:	ldur	w0, [x0, #7]
  42b310:	stur	w0, [x1, #7]
  42b314:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  42b318:	add	x1, x1, #0xa48
  42b31c:	mov	x0, x20
  42b320:	bl	452ed0 <ferror@plt+0x501a0>
  42b324:	mov	x19, x0
  42b328:	mov	x0, #0x48                  	// #72
  42b32c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42b330:	str	x0, [x21, #32]
  42b334:	mov	x23, #0x0                   	// #0
  42b338:	cbz	x19, 42b36c <ferror@plt+0x2863c>
  42b33c:	mov	x22, #0x0                   	// #0
  42b340:	mov	x24, #0x9                   	// #9
  42b344:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42b348:	add	x20, x20, #0x28
  42b34c:	b	42b40c <ferror@plt+0x286dc>
  42b350:	mov	x0, x19
  42b354:	bl	402d00 <__uflow@plt>
  42b358:	mov	w25, w0
  42b35c:	cmn	w0, #0x1
  42b360:	b.ne	42b428 <ferror@plt+0x286f8>  // b.any
  42b364:	mov	x0, x19
  42b368:	bl	4027a0 <fclose@plt>
  42b36c:	ldr	x0, [x21, #32]
  42b370:	str	xzr, [x0, x23, lsl #3]
  42b374:	mov	sp, x29
  42b378:	ldp	x19, x20, [sp, #16]
  42b37c:	ldp	x21, x22, [sp, #32]
  42b380:	ldp	x23, x24, [sp, #48]
  42b384:	ldp	x25, x26, [sp, #64]
  42b388:	ldr	x27, [sp, #80]
  42b38c:	ldp	x29, x30, [sp], #96
  42b390:	ret
  42b394:	add	x24, x24, #0x8
  42b398:	lsl	x1, x24, #3
  42b39c:	ldr	x0, [x21, #32]
  42b3a0:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42b3a4:	str	x0, [x21, #32]
  42b3a8:	b	42b444 <ferror@plt+0x28714>
  42b3ac:	mov	x0, x19
  42b3b0:	bl	402d00 <__uflow@plt>
  42b3b4:	cmn	w0, #0x1
  42b3b8:	b.ne	42b474 <ferror@plt+0x28744>  // b.any
  42b3bc:	mov	x1, x19
  42b3c0:	bl	42b18c <ferror@plt+0x2845c>
  42b3c4:	mov	x25, x0
  42b3c8:	ldrb	w0, [x0]
  42b3cc:	cmp	w0, #0x2f
  42b3d0:	b.ne	42b484 <ferror@plt+0x28754>  // b.any
  42b3d4:	ldr	x0, [x21, #32]
  42b3d8:	add	x0, x0, x22
  42b3dc:	str	x25, [x0, #8]
  42b3e0:	ldr	x1, [x19, #8]
  42b3e4:	ldr	x0, [x19, #16]
  42b3e8:	cmp	x1, x0
  42b3ec:	b.cs	42b4a8 <ferror@plt+0x28778>  // b.hs, b.nlast
  42b3f0:	add	x0, x1, #0x1
  42b3f4:	str	x0, [x19, #8]
  42b3f8:	ldrb	w0, [x1]
  42b3fc:	cmp	w0, #0xa
  42b400:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  42b404:	b.ne	42b3e0 <ferror@plt+0x286b0>  // b.any
  42b408:	add	x22, x22, #0x10
  42b40c:	ldr	x0, [x19, #8]
  42b410:	ldr	x1, [x19, #16]
  42b414:	cmp	x0, x1
  42b418:	b.cs	42b350 <ferror@plt+0x28620>  // b.hs, b.nlast
  42b41c:	add	x1, x0, #0x1
  42b420:	str	x1, [x19, #8]
  42b424:	ldrb	w25, [x0]
  42b428:	and	x0, x25, #0xff
  42b42c:	ldrh	w0, [x20, x0, lsl #1]
  42b430:	tst	w0, #0xc00
  42b434:	b.ne	42b40c <ferror@plt+0x286dc>  // b.any
  42b438:	add	x23, x23, #0x2
  42b43c:	cmp	x23, x24
  42b440:	b.hi	42b394 <ferror@plt+0x28664>  // b.pmore
  42b444:	ldr	x26, [x21, #32]
  42b448:	mov	x1, x19
  42b44c:	mov	w0, w25
  42b450:	bl	42b18c <ferror@plt+0x2845c>
  42b454:	str	x0, [x26, x22]
  42b458:	ldr	x1, [x19, #8]
  42b45c:	ldr	x0, [x19, #16]
  42b460:	cmp	x1, x0
  42b464:	b.cs	42b3ac <ferror@plt+0x2867c>  // b.hs, b.nlast
  42b468:	add	x0, x1, #0x1
  42b46c:	str	x0, [x19, #8]
  42b470:	ldrb	w0, [x1]
  42b474:	and	x1, x0, #0xff
  42b478:	ldrh	w1, [x20, x1, lsl #1]
  42b47c:	tbnz	w1, #0, 42b458 <ferror@plt+0x28728>
  42b480:	b	42b3bc <ferror@plt+0x2868c>
  42b484:	add	x26, x22, #0x8
  42b488:	ldr	x27, [x21, #32]
  42b48c:	mov	x1, x21
  42b490:	mov	x0, x25
  42b494:	bl	42afc4 <ferror@plt+0x28294>
  42b498:	str	x0, [x27, x26]
  42b49c:	mov	x0, x25
  42b4a0:	bl	402a90 <free@plt>
  42b4a4:	b	42b3e0 <ferror@plt+0x286b0>
  42b4a8:	mov	x0, x19
  42b4ac:	bl	402d00 <__uflow@plt>
  42b4b0:	b	42b3fc <ferror@plt+0x286cc>
  42b4b4:	stp	x29, x30, [sp, #-16]!
  42b4b8:	mov	x29, sp
  42b4bc:	ldr	x1, [x1]
  42b4c0:	ldr	x0, [x0]
  42b4c4:	bl	402a20 <strcmp@plt>
  42b4c8:	ldp	x29, x30, [sp], #16
  42b4cc:	ret
  42b4d0:	stp	x29, x30, [sp, #-32]!
  42b4d4:	mov	x29, sp
  42b4d8:	str	x19, [sp, #16]
  42b4dc:	mov	x19, x0
  42b4e0:	ldr	x0, [x0, #8]
  42b4e4:	ldrb	w1, [x0]
  42b4e8:	cbnz	w1, 42b51c <ferror@plt+0x287ec>
  42b4ec:	str	wzr, [x19, #200]
  42b4f0:	add	x2, x19, #0x48
  42b4f4:	mov	w0, #0x0                   	// #0
  42b4f8:	bl	402bc0 <__fxstat@plt>
  42b4fc:	cbnz	w0, 42b570 <ferror@plt+0x28840>
  42b500:	ldr	w0, [x19, #88]
  42b504:	and	w0, w0, #0xf000
  42b508:	cmp	w0, #0x4, lsl #12
  42b50c:	b.eq	42b564 <ferror@plt+0x28834>  // b.none
  42b510:	str	wzr, [x19, #204]
  42b514:	mov	w0, #0x1                   	// #1
  42b518:	b	42b558 <ferror@plt+0x28828>
  42b51c:	mov	w2, #0x1b6                 	// #438
  42b520:	mov	w1, #0x100                 	// #256
  42b524:	bl	402800 <open@plt>
  42b528:	mov	w1, w0
  42b52c:	str	w0, [x19, #200]
  42b530:	cmn	w0, #0x1
  42b534:	b.ne	42b4f0 <ferror@plt+0x287c0>  // b.any
  42b538:	bl	402c40 <__errno_location@plt>
  42b53c:	ldr	w1, [x0]
  42b540:	cmp	w1, #0x14
  42b544:	b.eq	42b584 <ferror@plt+0x28854>  // b.none
  42b548:	bl	402c40 <__errno_location@plt>
  42b54c:	ldr	w0, [x0]
  42b550:	str	w0, [x19, #204]
  42b554:	mov	w0, #0x0                   	// #0
  42b558:	ldr	x19, [sp, #16]
  42b55c:	ldp	x29, x30, [sp], #32
  42b560:	ret
  42b564:	bl	402c40 <__errno_location@plt>
  42b568:	mov	w1, #0x2                   	// #2
  42b56c:	str	w1, [x0]
  42b570:	ldr	w0, [x19, #200]
  42b574:	bl	402940 <close@plt>
  42b578:	mov	w0, #0xffffffff            	// #-1
  42b57c:	str	w0, [x19, #200]
  42b580:	b	42b548 <ferror@plt+0x28818>
  42b584:	mov	w1, #0x2                   	// #2
  42b588:	str	w1, [x0]
  42b58c:	b	42b548 <ferror@plt+0x28818>
  42b590:	stp	x29, x30, [sp, #-96]!
  42b594:	mov	x29, sp
  42b598:	stp	x19, x20, [sp, #16]
  42b59c:	stp	x21, x22, [sp, #32]
  42b5a0:	stp	x23, x24, [sp, #48]
  42b5a4:	stp	x25, x26, [sp, #64]
  42b5a8:	mov	x20, x0
  42b5ac:	mov	x19, x1
  42b5b0:	mov	x23, x2
  42b5b4:	ldr	x26, [x1, #8]
  42b5b8:	str	x2, [x1, #8]
  42b5bc:	mov	x0, x1
  42b5c0:	bl	42b4d0 <ferror@plt+0x287a0>
  42b5c4:	ands	w22, w0, #0xff
  42b5c8:	b.eq	42b678 <ferror@plt+0x28948>  // b.none
  42b5cc:	stp	x27, x28, [sp, #80]
  42b5d0:	ldr	x3, [x20, #968]
  42b5d4:	ldr	w2, [x19, #200]
  42b5d8:	mov	x1, x23
  42b5dc:	mov	x0, x20
  42b5e0:	blr	x3
  42b5e4:	and	w22, w0, #0x1
  42b5e8:	mov	w27, w22
  42b5ec:	tbz	w0, #0, 42b698 <ferror@plt+0x28968>
  42b5f0:	ldrb	w0, [x20, #1131]
  42b5f4:	cbz	w0, 42b6b8 <ferror@plt+0x28988>
  42b5f8:	ldr	x0, [x20, #40]
  42b5fc:	ldr	w0, [x0, #48]
  42b600:	cmp	w0, #0x1
  42b604:	b.ls	42b64c <ferror@plt+0x2891c>  // b.plast
  42b608:	mov	w21, #0x1                   	// #1
  42b60c:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42b610:	mov	w25, #0x2e                  	// #46
  42b614:	mov	w28, #0x2e                  	// #46
  42b618:	ldr	x0, [x24, #1424]
  42b61c:	ldr	x1, [x0, #40]
  42b620:	ldr	x2, [x0, #48]
  42b624:	cmp	x1, x2
  42b628:	b.cs	42b6ac <ferror@plt+0x2897c>  // b.hs, b.nlast
  42b62c:	add	x2, x1, #0x1
  42b630:	str	x2, [x0, #40]
  42b634:	strb	w25, [x1]
  42b638:	add	w21, w21, #0x1
  42b63c:	ldr	x0, [x20, #40]
  42b640:	ldr	w0, [x0, #48]
  42b644:	cmp	w0, w21
  42b648:	b.hi	42b618 <ferror@plt+0x288e8>  // b.pmore
  42b64c:	cmp	w27, #0x0
  42b650:	mov	x3, x23
  42b654:	mov	w2, #0x21                  	// #33
  42b658:	mov	w0, #0x78                  	// #120
  42b65c:	csel	w2, w2, w0, ne  // ne = any
  42b660:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42b664:	add	x1, x1, #0x2f0
  42b668:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42b66c:	ldr	x0, [x0, #1424]
  42b670:	bl	402ce0 <fprintf@plt>
  42b674:	ldp	x27, x28, [sp, #80]
  42b678:	str	x26, [x19, #8]
  42b67c:	mov	w0, w22
  42b680:	ldp	x19, x20, [sp, #16]
  42b684:	ldp	x21, x22, [sp, #32]
  42b688:	ldp	x23, x24, [sp, #48]
  42b68c:	ldp	x25, x26, [sp, #64]
  42b690:	ldp	x29, x30, [sp], #96
  42b694:	ret
  42b698:	ldr	w0, [x19, #200]
  42b69c:	bl	402940 <close@plt>
  42b6a0:	mov	w0, #0xffffffff            	// #-1
  42b6a4:	str	w0, [x19, #200]
  42b6a8:	b	42b5f0 <ferror@plt+0x288c0>
  42b6ac:	mov	w1, w28
  42b6b0:	bl	4029a0 <__overflow@plt>
  42b6b4:	b	42b638 <ferror@plt+0x28908>
  42b6b8:	ldp	x27, x28, [sp, #80]
  42b6bc:	b	42b678 <ferror@plt+0x28948>
  42b6c0:	stp	x29, x30, [sp, #-64]!
  42b6c4:	mov	x29, sp
  42b6c8:	stp	x19, x20, [sp, #16]
  42b6cc:	stp	x21, x22, [sp, #32]
  42b6d0:	stp	x23, x24, [sp, #48]
  42b6d4:	mov	x19, x0
  42b6d8:	mov	x20, x1
  42b6dc:	mov	w22, w2
  42b6e0:	mov	w23, w3
  42b6e4:	ldr	x0, [x0, #40]
  42b6e8:	ldr	w0, [x0, #60]
  42b6ec:	mov	w21, #0x0                   	// #0
  42b6f0:	cmp	w0, #0x1
  42b6f4:	b.ls	42b704 <ferror@plt+0x289d4>  // b.plast
  42b6f8:	ldr	x0, [x19]
  42b6fc:	cbz	x0, 42b704 <ferror@plt+0x289d4>
  42b700:	ldrb	w21, [x0, #106]
  42b704:	ldrb	w0, [x19, #26]
  42b708:	cbnz	w0, 42b75c <ferror@plt+0x28a2c>
  42b70c:	ldr	w24, [x19, #1200]
  42b710:	bl	402c40 <__errno_location@plt>
  42b714:	ldr	w1, [x20, #204]
  42b718:	str	w1, [x0]
  42b71c:	orr	w21, w21, w22
  42b720:	cmp	w21, #0x0
  42b724:	cset	w0, ne  // ne = any
  42b728:	cmp	w24, w0
  42b72c:	b.le	42b7a8 <ferror@plt+0x28a78>
  42b730:	cmp	w1, #0x2
  42b734:	cset	w1, eq  // eq = none
  42b738:	ldrb	w0, [x19, #1204]
  42b73c:	tst	w1, w0
  42b740:	b.ne	42b770 <ferror@plt+0x28a40>  // b.any
  42b744:	ldr	x2, [x20, #8]
  42b748:	cbz	x2, 42b7d4 <ferror@plt+0x28aa4>
  42b74c:	mov	w3, w23
  42b750:	mov	w1, #0x6                   	// #6
  42b754:	mov	x0, x19
  42b758:	bl	426f80 <ferror@plt+0x24250>
  42b75c:	ldp	x19, x20, [sp, #16]
  42b760:	ldp	x21, x22, [sp, #32]
  42b764:	ldp	x23, x24, [sp, #48]
  42b768:	ldp	x29, x30, [sp], #64
  42b76c:	ret
  42b770:	ldr	x1, [x20]
  42b774:	ldr	x0, [x19, #712]
  42b778:	bl	439330 <ferror@plt+0x36600>
  42b77c:	ldrb	w0, [x19, #1207]
  42b780:	cbz	w0, 42b75c <ferror@plt+0x28a2c>
  42b784:	ldr	x2, [x20, #8]
  42b788:	cbz	x2, 42b7a0 <ferror@plt+0x28a70>
  42b78c:	mov	w3, w23
  42b790:	mov	w1, #0x6                   	// #6
  42b794:	mov	x0, x19
  42b798:	bl	426f80 <ferror@plt+0x24250>
  42b79c:	b	42b75c <ferror@plt+0x28a2c>
  42b7a0:	ldr	x2, [x20]
  42b7a4:	b	42b78c <ferror@plt+0x28a5c>
  42b7a8:	ldr	w0, [x19, #1200]
  42b7ac:	cbz	w0, 42b744 <ferror@plt+0x28a14>
  42b7b0:	ldrb	w0, [x19, #1207]
  42b7b4:	cbnz	w0, 42b744 <ferror@plt+0x28a14>
  42b7b8:	ldr	x2, [x20, #8]
  42b7bc:	cbz	x2, 42b7dc <ferror@plt+0x28aac>
  42b7c0:	mov	w3, w23
  42b7c4:	mov	w1, #0x0                   	// #0
  42b7c8:	mov	x0, x19
  42b7cc:	bl	426f80 <ferror@plt+0x24250>
  42b7d0:	b	42b75c <ferror@plt+0x28a2c>
  42b7d4:	ldr	x2, [x20]
  42b7d8:	b	42b74c <ferror@plt+0x28a1c>
  42b7dc:	ldr	x2, [x20]
  42b7e0:	b	42b7c0 <ferror@plt+0x28a90>
  42b7e4:	stp	x29, x30, [sp, #-16]!
  42b7e8:	mov	x29, sp
  42b7ec:	mov	x2, #0x20                  	// #32
  42b7f0:	bl	4029e0 <memcmp@plt>
  42b7f4:	ldp	x29, x30, [sp], #16
  42b7f8:	ret
  42b7fc:	stp	x29, x30, [sp, #-96]!
  42b800:	mov	x29, sp
  42b804:	stp	x19, x20, [sp, #16]
  42b808:	ldrb	w20, [x1, #213]
  42b80c:	cbnz	w20, 42b988 <ferror@plt+0x28c58>
  42b810:	stp	x23, x24, [sp, #48]
  42b814:	stp	x25, x26, [sp, #64]
  42b818:	mov	x23, x0
  42b81c:	mov	x19, x1
  42b820:	mov	w24, w2
  42b824:	ldrb	w25, [x1, #211]
  42b828:	cbnz	w25, 42b9e8 <ferror@plt+0x28cb8>
  42b82c:	ldr	w0, [x1, #204]
  42b830:	mov	w20, w25
  42b834:	cbnz	w0, 42b9f4 <ferror@plt+0x28cc4>
  42b838:	ldr	w0, [x1, #200]
  42b83c:	cmn	w0, #0x1
  42b840:	b.eq	42b8c0 <ferror@plt+0x28b90>  // b.none
  42b844:	ldr	w26, [x19, #88]
  42b848:	and	w26, w26, #0xf000
  42b84c:	cmp	w26, #0x6, lsl #12
  42b850:	b.eq	42b8f0 <ferror@plt+0x28bc0>  // b.none
  42b854:	stp	x21, x22, [sp, #32]
  42b858:	str	x27, [sp, #80]
  42b85c:	cmp	w26, #0x8, lsl #12
  42b860:	cset	w27, eq  // eq = none
  42b864:	mov	x20, #0x2000                	// #8192
  42b868:	b.eq	42b910 <ferror@plt+0x28be0>  // b.none
  42b86c:	add	x0, x20, #0x10
  42b870:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42b874:	mov	x21, x0
  42b878:	mov	x22, #0x0                   	// #0
  42b87c:	sub	x2, x20, x22
  42b880:	add	x1, x21, x22
  42b884:	ldr	w0, [x19, #200]
  42b888:	bl	402b70 <read@plt>
  42b88c:	cmp	x0, #0x0
  42b890:	b.le	42b918 <ferror@plt+0x28be8>
  42b894:	add	x22, x22, x0
  42b898:	cmp	x20, x22
  42b89c:	b.ne	42b87c <ferror@plt+0x28b4c>  // b.any
  42b8a0:	cmp	w26, #0x8, lsl #12
  42b8a4:	b.eq	42b9e0 <ferror@plt+0x28cb0>  // b.none
  42b8a8:	lsl	x20, x20, #1
  42b8ac:	add	x1, x20, #0x10
  42b8b0:	mov	x0, x21
  42b8b4:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42b8b8:	mov	x21, x0
  42b8bc:	b	42b87c <ferror@plt+0x28b4c>
  42b8c0:	mov	x0, x1
  42b8c4:	bl	42b4d0 <ferror@plt+0x287a0>
  42b8c8:	ands	w20, w0, #0xff
  42b8cc:	b.ne	42b844 <ferror@plt+0x28b14>  // b.any
  42b8d0:	mov	w3, w24
  42b8d4:	mov	w2, #0x0                   	// #0
  42b8d8:	mov	x1, x19
  42b8dc:	mov	x0, x23
  42b8e0:	bl	42b6c0 <ferror@plt+0x28990>
  42b8e4:	ldp	x23, x24, [sp, #48]
  42b8e8:	ldp	x25, x26, [sp, #64]
  42b8ec:	b	42b988 <ferror@plt+0x28c58>
  42b8f0:	ldr	x4, [x19, #8]
  42b8f4:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x24c60>
  42b8f8:	add	x3, x3, #0x2f8
  42b8fc:	mov	w2, w24
  42b900:	mov	w1, #0x3                   	// #3
  42b904:	mov	x0, x23
  42b908:	bl	426de8 <ferror@plt+0x240b8>
  42b90c:	b	42b960 <ferror@plt+0x28c30>
  42b910:	ldr	x20, [x19, #120]
  42b914:	b	42b86c <ferror@plt+0x28b3c>
  42b918:	tbnz	x0, #63, 42b998 <ferror@plt+0x28c68>
  42b91c:	cmp	w27, #0x0
  42b920:	ccmp	x22, x20, #0x4, ne  // ne = any
  42b924:	b.ne	42b9c0 <ferror@plt+0x28c90>  // b.any
  42b928:	add	x6, x19, #0x78
  42b92c:	add	x5, x19, #0x30
  42b930:	mov	x4, x22
  42b934:	add	x3, x20, #0x10
  42b938:	mov	x2, x21
  42b93c:	ldr	x1, [x23, #1184]
  42b940:	mov	x0, x23
  42b944:	bl	41fd40 <ferror@plt+0x1d010>
  42b948:	str	x0, [x19, #40]
  42b94c:	mov	w0, #0x1                   	// #1
  42b950:	strb	w0, [x19, #213]
  42b954:	mov	w25, #0x1                   	// #1
  42b958:	ldp	x21, x22, [sp, #32]
  42b95c:	ldr	x27, [sp, #80]
  42b960:	eor	w25, w25, #0x1
  42b964:	strb	w25, [x19, #211]
  42b968:	ldr	w0, [x19, #200]
  42b96c:	bl	402940 <close@plt>
  42b970:	mov	w0, #0xffffffff            	// #-1
  42b974:	str	w0, [x19, #200]
  42b978:	ldrb	w20, [x19, #211]
  42b97c:	eor	w20, w20, #0x1
  42b980:	ldp	x23, x24, [sp, #48]
  42b984:	ldp	x25, x26, [sp, #64]
  42b988:	mov	w0, w20
  42b98c:	ldp	x19, x20, [sp, #16]
  42b990:	ldp	x29, x30, [sp], #96
  42b994:	ret
  42b998:	mov	w3, w24
  42b99c:	ldr	x2, [x19, #8]
  42b9a0:	mov	w1, #0x3                   	// #3
  42b9a4:	mov	x0, x23
  42b9a8:	bl	426f80 <ferror@plt+0x24250>
  42b9ac:	mov	x0, x21
  42b9b0:	bl	402a90 <free@plt>
  42b9b4:	ldp	x21, x22, [sp, #32]
  42b9b8:	ldr	x27, [sp, #80]
  42b9bc:	b	42b960 <ferror@plt+0x28c30>
  42b9c0:	ldr	x4, [x19, #8]
  42b9c4:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x24c60>
  42b9c8:	add	x3, x3, #0x310
  42b9cc:	mov	w2, w24
  42b9d0:	mov	w1, #0x0                   	// #0
  42b9d4:	mov	x0, x23
  42b9d8:	bl	426de8 <ferror@plt+0x240b8>
  42b9dc:	b	42b928 <ferror@plt+0x28bf8>
  42b9e0:	mov	x20, x22
  42b9e4:	b	42b928 <ferror@plt+0x28bf8>
  42b9e8:	ldp	x23, x24, [sp, #48]
  42b9ec:	ldp	x25, x26, [sp, #64]
  42b9f0:	b	42b988 <ferror@plt+0x28c58>
  42b9f4:	ldp	x23, x24, [sp, #48]
  42b9f8:	ldp	x25, x26, [sp, #64]
  42b9fc:	b	42b988 <ferror@plt+0x28c58>
  42ba00:	stp	x29, x30, [sp, #-48]!
  42ba04:	mov	x29, sp
  42ba08:	stp	x19, x20, [sp, #16]
  42ba0c:	mov	x19, x0
  42ba10:	ldrb	w0, [x1]
  42ba14:	add	x20, x19, #0xd8
  42ba18:	cmp	w0, #0x2f
  42ba1c:	b.eq	42ba40 <ferror@plt+0x28d10>  // b.none
  42ba20:	ldr	x0, [x19]
  42ba24:	cbz	x0, 42ba50 <ferror@plt+0x28d20>
  42ba28:	ldr	x20, [x0, #80]
  42ba2c:	cmp	w3, #0x1
  42ba30:	b.eq	42ba58 <ferror@plt+0x28d28>  // b.none
  42ba34:	cbz	w2, 42ba74 <ferror@plt+0x28d44>
  42ba38:	ldr	x20, [x19, #208]
  42ba3c:	cbz	x20, 42bb10 <ferror@plt+0x28de0>
  42ba40:	mov	x0, x20
  42ba44:	ldp	x19, x20, [sp, #16]
  42ba48:	ldp	x29, x30, [sp], #48
  42ba4c:	ret
  42ba50:	ldr	x20, [x19, #288]
  42ba54:	b	42ba2c <ferror@plt+0x28cfc>
  42ba58:	ldr	x0, [x20, #64]
  42ba5c:	cbz	x0, 42bb2c <ferror@plt+0x28dfc>
  42ba60:	add	x3, x19, #0xd8
  42ba64:	cmp	x0, x3
  42ba68:	b.eq	42bb2c <ferror@plt+0x28dfc>  // b.none
  42ba6c:	ldr	x20, [x0]
  42ba70:	b	42ba3c <ferror@plt+0x28d0c>
  42ba74:	cmp	w3, #0x3
  42ba78:	b.eq	42ba8c <ferror@plt+0x28d5c>  // b.none
  42ba7c:	ldrb	w0, [x19, #416]
  42ba80:	cbz	w0, 42baa8 <ferror@plt+0x28d78>
  42ba84:	ldr	x20, [x19, #200]
  42ba88:	b	42ba3c <ferror@plt+0x28d0c>
  42ba8c:	mov	w2, #0x0                   	// #0
  42ba90:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ba94:	add	x1, x1, #0x330
  42ba98:	mov	x0, x19
  42ba9c:	bl	42b0b8 <ferror@plt+0x28388>
  42baa0:	mov	x20, x0
  42baa4:	b	42ba40 <ferror@plt+0x28d10>
  42baa8:	ldr	x0, [x20, #24]
  42baac:	cbz	x0, 42bad4 <ferror@plt+0x28da4>
  42bab0:	ldr	x1, [x20, #24]
  42bab4:	ldr	x0, [x19]
  42bab8:	mov	w2, #0x0                   	// #0
  42babc:	cbz	x0, 42bac4 <ferror@plt+0x28d94>
  42bac0:	ldrb	w2, [x0, #106]
  42bac4:	mov	x0, x19
  42bac8:	bl	42b0b8 <ferror@plt+0x28388>
  42bacc:	mov	x20, x0
  42bad0:	b	42ba40 <ferror@plt+0x28d10>
  42bad4:	stp	x21, x22, [sp, #32]
  42bad8:	ldr	x0, [x20, #8]
  42badc:	bl	453fdc <ferror@plt+0x512ac>
  42bae0:	ldr	x21, [x20, #8]
  42bae4:	sub	x21, x0, x21
  42bae8:	add	x0, x21, #0x1
  42baec:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42baf0:	mov	x22, x0
  42baf4:	mov	x2, x21
  42baf8:	ldr	x1, [x20, #8]
  42bafc:	bl	402620 <memcpy@plt>
  42bb00:	strb	wzr, [x22, x21]
  42bb04:	str	x22, [x20, #24]
  42bb08:	ldp	x21, x22, [sp, #32]
  42bb0c:	b	42bab0 <ferror@plt+0x28d80>
  42bb10:	mov	x3, x1
  42bb14:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42bb18:	add	x2, x2, #0x338
  42bb1c:	mov	w1, #0x3                   	// #3
  42bb20:	mov	x0, x19
  42bb24:	bl	426a10 <ferror@plt+0x23ce0>
  42bb28:	b	42ba40 <ferror@plt+0x28d10>
  42bb2c:	cbnz	w2, 42ba38 <ferror@plt+0x28d08>
  42bb30:	b	42ba7c <ferror@plt+0x28d4c>
  42bb34:	ldr	w0, [x0, #204]
  42bb38:	cmp	w0, #0x0
  42bb3c:	cset	w0, ne  // ne = any
  42bb40:	ret
  42bb44:	stp	x29, x30, [sp, #-304]!
  42bb48:	mov	x29, sp
  42bb4c:	stp	x19, x20, [sp, #16]
  42bb50:	stp	x21, x22, [sp, #32]
  42bb54:	stp	x23, x24, [sp, #48]
  42bb58:	stp	x25, x26, [sp, #64]
  42bb5c:	mov	x20, x0
  42bb60:	str	x1, [sp, #112]
  42bb64:	mov	x23, x2
  42bb68:	and	w0, w3, #0xff
  42bb6c:	str	w0, [sp, #136]
  42bb70:	str	w4, [sp, #144]
  42bb74:	and	w0, w5, #0xff
  42bb78:	str	w0, [sp, #132]
  42bb7c:	str	w6, [sp, #140]
  42bb80:	cbz	x2, 42bc58 <ferror@plt+0x28f28>
  42bb84:	ldr	x19, [x20, #296]
  42bb88:	ldr	x21, [sp, #112]
  42bb8c:	mov	x0, x21
  42bb90:	bl	453c24 <ferror@plt+0x50ef4>
  42bb94:	mov	w3, #0x1                   	// #1
  42bb98:	mov	w2, w0
  42bb9c:	mov	x1, x21
  42bba0:	mov	x0, x19
  42bba4:	bl	4537e4 <ferror@plt+0x50ab4>
  42bba8:	mov	x25, x0
  42bbac:	ldr	x0, [x0]
  42bbb0:	cbz	x0, 42bbc8 <ferror@plt+0x28e98>
  42bbb4:	ldr	x1, [x0, #8]
  42bbb8:	cmp	x23, x1
  42bbbc:	b.eq	42c37c <ferror@plt+0x2964c>  // b.none
  42bbc0:	ldr	x0, [x0]
  42bbc4:	cbnz	x0, 42bbb4 <ferror@plt+0x28e84>
  42bbc8:	mov	x1, #0xd8                  	// #216
  42bbcc:	mov	x0, #0x1                   	// #1
  42bbd0:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  42bbd4:	mov	x19, x0
  42bbd8:	ldr	x0, [x20]
  42bbdc:	cmp	x0, #0x0
  42bbe0:	cset	w0, eq  // eq = none
  42bbe4:	strb	w0, [x19, #212]
  42bbe8:	mov	w0, #0xffffffff            	// #-1
  42bbec:	str	w0, [x19, #200]
  42bbf0:	str	x23, [x19, #64]
  42bbf4:	ldr	x0, [sp, #112]
  42bbf8:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  42bbfc:	str	x0, [x19]
  42bc00:	ldr	w1, [sp, #132]
  42bc04:	mov	w0, w1
  42bc08:	cbnz	w1, 42bc20 <ferror@plt+0x28ef0>
  42bc0c:	ldr	x1, [x20]
  42bc10:	ldr	w0, [sp, #132]
  42bc14:	cbz	x1, 42bc20 <ferror@plt+0x28ef0>
  42bc18:	ldr	x0, [x1, #80]
  42bc1c:	ldrb	w0, [x0, #214]
  42bc20:	strb	w0, [x19, #214]
  42bc24:	ldr	w0, [sp, #136]
  42bc28:	cbnz	w0, 42c240 <ferror@plt+0x29510>
  42bc2c:	stp	x27, x28, [sp, #80]
  42bc30:	str	w0, [sp, #168]
  42bc34:	str	w0, [sp, #128]
  42bc38:	str	w0, [sp, #148]
  42bc3c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42bc40:	add	x0, x0, #0x3f0
  42bc44:	str	x0, [sp, #160]
  42bc48:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  42bc4c:	add	x0, x0, #0x600
  42bc50:	str	x0, [sp, #152]
  42bc54:	b	42be00 <ferror@plt+0x290d0>
  42bc58:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x24c60>
  42bc5c:	add	x3, x3, #0x368
  42bc60:	mov	w2, w6
  42bc64:	mov	w1, #0x4                   	// #4
  42bc68:	mov	x0, x20
  42bc6c:	bl	426de8 <ferror@plt+0x240b8>
  42bc70:	b	42bb84 <ferror@plt+0x28e54>
  42bc74:	ldr	x21, [x19, #64]
  42bc78:	ldr	x22, [x19]
  42bc7c:	ldr	x0, [x21, #32]
  42bc80:	cbz	x0, 42bd74 <ferror@plt+0x29044>
  42bc84:	ldr	x0, [x21, #32]
  42bc88:	ldr	x0, [x0]
  42bc8c:	cbz	x0, 42bcb0 <ferror@plt+0x28f80>
  42bc90:	mov	x24, #0x0                   	// #0
  42bc94:	mov	x1, x22
  42bc98:	bl	452d78 <ferror@plt+0x50048>
  42bc9c:	cbz	w0, 42bd80 <ferror@plt+0x29050>
  42bca0:	add	x24, x24, #0x2
  42bca4:	ldr	x0, [x21, #32]
  42bca8:	ldr	x0, [x0, x24, lsl #3]
  42bcac:	cbnz	x0, 42bc94 <ferror@plt+0x28f64>
  42bcb0:	ldrb	w0, [x22]
  42bcb4:	cmp	w0, #0x2f
  42bcb8:	b.eq	42be08 <ferror@plt+0x290d8>  // b.none
  42bcbc:	mov	w1, #0x2f                  	// #47
  42bcc0:	mov	x0, x22
  42bcc4:	bl	402ac0 <strchr@plt>
  42bcc8:	mov	x24, x0
  42bccc:	cmp	x0, #0x0
  42bcd0:	ccmp	x22, x0, #0x4, ne  // ne = any
  42bcd4:	b.eq	42be08 <ferror@plt+0x290d8>  // b.none
  42bcd8:	sub	x28, x0, x22
  42bcdc:	add	x0, x28, #0x1
  42bce0:	str	x0, [sp, #120]
  42bce4:	ldr	w27, [x21, #16]
  42bce8:	add	x27, x27, x0
  42bcec:	add	x0, x27, #0x2
  42bcf0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42bcf4:	mov	x26, x0
  42bcf8:	ldr	w28, [x21, #16]
  42bcfc:	add	x1, x0, x28
  42bd00:	str	x1, [sp, #104]
  42bd04:	mov	x2, x28
  42bd08:	ldr	x1, [x21, #8]
  42bd0c:	bl	402620 <memcpy@plt>
  42bd10:	ldr	w0, [x21, #16]
  42bd14:	cbz	w0, 42bd44 <ferror@plt+0x29014>
  42bd18:	sub	w0, w0, #0x1
  42bd1c:	ldr	x1, [x21, #8]
  42bd20:	ldrb	w0, [x1, w0, uxtw]
  42bd24:	cmp	w0, #0x2f
  42bd28:	b.eq	42bd44 <ferror@plt+0x29014>  // b.none
  42bd2c:	mov	w0, #0x2f                  	// #47
  42bd30:	strb	w0, [x26, x28]
  42bd34:	add	x27, x27, #0x1
  42bd38:	ldr	x1, [sp, #104]
  42bd3c:	add	x0, x1, #0x1
  42bd40:	str	x0, [sp, #104]
  42bd44:	ldr	x2, [sp, #120]
  42bd48:	mov	x1, x22
  42bd4c:	ldr	x0, [sp, #104]
  42bd50:	bl	402620 <memcpy@plt>
  42bd54:	strb	wzr, [x26, x27]
  42bd58:	ldrb	w2, [x21, #20]
  42bd5c:	mov	x1, x26
  42bd60:	mov	x0, x20
  42bd64:	bl	42b0b8 <ferror@plt+0x28388>
  42bd68:	mov	x21, x0
  42bd6c:	add	x22, x24, #0x1
  42bd70:	b	42bc7c <ferror@plt+0x28f4c>
  42bd74:	mov	x0, x21
  42bd78:	bl	42b294 <ferror@plt+0x28564>
  42bd7c:	b	42bc84 <ferror@plt+0x28f54>
  42bd80:	add	x24, x24, #0x1
  42bd84:	ldr	x0, [x21, #32]
  42bd88:	ldr	x0, [x0, x24, lsl #3]
  42bd8c:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  42bd90:	mov	x21, x0
  42bd94:	b	42be24 <ferror@plt+0x290f4>
  42bd98:	ldr	x0, [x19]
  42bd9c:	bl	42afc4 <ferror@plt+0x28294>
  42bda0:	mov	x21, x0
  42bda4:	b	42be20 <ferror@plt+0x290f0>
  42bda8:	mov	x0, x24
  42bdac:	bl	402a90 <free@plt>
  42bdb0:	mov	x0, x21
  42bdb4:	bl	453c24 <ferror@plt+0x50ef4>
  42bdb8:	mov	w22, w0
  42bdbc:	mov	w2, w0
  42bdc0:	mov	x1, x21
  42bdc4:	ldr	x0, [x20, #320]
  42bdc8:	bl	453670 <ferror@plt+0x50940>
  42bdcc:	cbz	x0, 42be70 <ferror@plt+0x29140>
  42bdd0:	mov	w0, #0x2                   	// #2
  42bdd4:	str	w0, [x19, #204]
  42bdd8:	ldr	x0, [x19, #64]
  42bddc:	ldr	x21, [x0]
  42bde0:	str	x21, [x19, #64]
  42bde4:	cbz	x21, 42c050 <ferror@plt+0x29320>
  42bde8:	ldr	x0, [x20, #208]
  42bdec:	cmp	x21, x0
  42bdf0:	b.eq	42c194 <ferror@plt+0x29464>  // b.none
  42bdf4:	ldr	x0, [x20, #200]
  42bdf8:	cmp	x21, x0
  42bdfc:	b.eq	42c16c <ferror@plt+0x2943c>  // b.none
  42be00:	ldrb	w0, [x20, #1145]
  42be04:	cbnz	w0, 42bc74 <ferror@plt+0x28f44>
  42be08:	ldr	x1, [x19, #64]
  42be0c:	ldr	x2, [x1, #40]
  42be10:	cbz	x2, 42bd98 <ferror@plt+0x29068>
  42be14:	ldr	x0, [x19]
  42be18:	blr	x2
  42be1c:	mov	x21, x0
  42be20:	cbz	x21, 42c040 <ferror@plt+0x29310>
  42be24:	ldrb	w0, [x20, #1245]
  42be28:	cbz	w0, 42bdb0 <ferror@plt+0x29080>
  42be2c:	ldr	x0, [x19, #64]
  42be30:	ldrb	w0, [x0, #20]
  42be34:	cbz	w0, 42bdb0 <ferror@plt+0x29080>
  42be38:	mov	x0, x21
  42be3c:	bl	453ff0 <ferror@plt+0x512c0>
  42be40:	mov	x24, x0
  42be44:	cbz	x0, 42bda8 <ferror@plt+0x29078>
  42be48:	bl	402680 <strlen@plt>
  42be4c:	mov	x22, x0
  42be50:	mov	x0, x21
  42be54:	bl	402680 <strlen@plt>
  42be58:	cmp	x22, x0
  42be5c:	b.cs	42bda8 <ferror@plt+0x29078>  // b.hs, b.nlast
  42be60:	mov	x0, x21
  42be64:	bl	402a90 <free@plt>
  42be68:	mov	x21, x24
  42be6c:	b	42bdb0 <ferror@plt+0x29080>
  42be70:	str	x21, [x19, #8]
  42be74:	ldr	x0, [x19]
  42be78:	ldrb	w0, [x0]
  42be7c:	cbz	w0, 42c2a4 <ferror@plt+0x29574>
  42be80:	ldr	x0, [x20, #968]
  42be84:	cbz	x0, 42c2a4 <ferror@plt+0x29574>
  42be88:	ldr	x0, [x20, #280]
  42be8c:	cbz	x0, 42bea0 <ferror@plt+0x29170>
  42be90:	ldrb	w1, [x0, #214]
  42be94:	cbnz	w1, 42bf28 <ferror@plt+0x291f8>
  42be98:	ldrb	w0, [x0, #212]
  42be9c:	cbz	w0, 42c2a4 <ferror@plt+0x29574>
  42bea0:	mov	x0, x21
  42bea4:	bl	402680 <strlen@plt>
  42bea8:	mov	x26, x0
  42beac:	add	x27, x0, #0x5
  42beb0:	mov	x0, x27
  42beb4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42beb8:	mov	x24, x0
  42bebc:	mov	x2, x26
  42bec0:	mov	x1, x21
  42bec4:	bl	402620 <memcpy@plt>
  42bec8:	add	x0, x24, x26
  42becc:	ldr	x2, [sp, #160]
  42bed0:	ldr	w1, [x2]
  42bed4:	str	w1, [x24, x26]
  42bed8:	ldrb	w1, [x2, #4]
  42bedc:	strb	w1, [x0, #4]
  42bee0:	add	x2, sp, #0xb0
  42bee4:	mov	x1, x24
  42bee8:	mov	w0, #0x0                   	// #0
  42beec:	bl	402c70 <__xstat@plt>
  42bef0:	cbnz	w0, 42c29c <ferror@plt+0x2956c>
  42bef4:	ldr	w0, [sp, #192]
  42bef8:	and	w0, w0, #0xf000
  42befc:	cmp	w0, #0x4, lsl #12
  42bf00:	b.eq	42bf34 <ferror@plt+0x29204>  // b.none
  42bf04:	mov	x2, x24
  42bf08:	mov	x1, x19
  42bf0c:	mov	x0, x20
  42bf10:	bl	42b590 <ferror@plt+0x28860>
  42bf14:	and	w26, w0, #0xff
  42bf18:	cbz	w26, 42c294 <ferror@plt+0x29564>
  42bf1c:	str	x24, [x19, #16]
  42bf20:	ldp	x27, x28, [sp, #80]
  42bf24:	b	42c280 <ferror@plt+0x29550>
  42bf28:	ldr	x0, [x0, #32]
  42bf2c:	cbnz	x0, 42be90 <ferror@plt+0x29160>
  42bf30:	b	42bea0 <ferror@plt+0x29170>
  42bf34:	mov	x0, x24
  42bf38:	bl	402730 <opendir@plt>
  42bf3c:	str	x0, [sp, #104]
  42bf40:	cbz	x0, 42c294 <ferror@plt+0x29564>
  42bf44:	add	x26, x24, x26
  42bf48:	mov	w0, #0x2f                  	// #47
  42bf4c:	strb	w0, [x26, #4]
  42bf50:	str	x27, [sp, #120]
  42bf54:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42bf58:	add	x0, x0, #0x388
  42bf5c:	str	x0, [sp, #168]
  42bf60:	b	42bfa8 <ferror@plt+0x29278>
  42bf64:	add	x0, x1, #0x40
  42bf68:	add	x0, x28, x0
  42bf6c:	str	x0, [sp, #120]
  42bf70:	mov	x1, x0
  42bf74:	mov	x0, x24
  42bf78:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42bf7c:	mov	x24, x0
  42bf80:	mov	x2, x28
  42bf84:	mov	x1, x26
  42bf88:	add	x0, x24, x27
  42bf8c:	bl	402620 <memcpy@plt>
  42bf90:	mov	x2, x24
  42bf94:	mov	x1, x19
  42bf98:	mov	x0, x20
  42bf9c:	bl	42b590 <ferror@plt+0x28860>
  42bfa0:	ands	w26, w0, #0xff
  42bfa4:	b.ne	42bffc <ferror@plt+0x292cc>  // b.any
  42bfa8:	ldr	x0, [sp, #104]
  42bfac:	bl	4028e0 <readdir@plt>
  42bfb0:	cbz	x0, 42bff8 <ferror@plt+0x292c8>
  42bfb4:	add	x26, x0, #0x13
  42bfb8:	ldr	x1, [sp, #152]
  42bfbc:	mov	x0, x26
  42bfc0:	bl	402a20 <strcmp@plt>
  42bfc4:	cbz	w0, 42bfa8 <ferror@plt+0x29278>
  42bfc8:	ldr	x1, [sp, #168]
  42bfcc:	mov	x0, x26
  42bfd0:	bl	402a20 <strcmp@plt>
  42bfd4:	cbz	w0, 42bfa8 <ferror@plt+0x29278>
  42bfd8:	mov	x0, x26
  42bfdc:	bl	402680 <strlen@plt>
  42bfe0:	add	x28, x0, #0x1
  42bfe4:	add	x0, x27, x28
  42bfe8:	ldr	x1, [sp, #120]
  42bfec:	cmp	x0, x1
  42bff0:	b.ls	42bf80 <ferror@plt+0x29250>  // b.plast
  42bff4:	b	42bf64 <ferror@plt+0x29234>
  42bff8:	ldr	w26, [sp, #136]
  42bffc:	ldr	x0, [sp, #104]
  42c000:	bl	402920 <closedir@plt>
  42c004:	b	42bf18 <ferror@plt+0x291e8>
  42c008:	ldr	w3, [sp, #140]
  42c00c:	mov	w2, #0x0                   	// #0
  42c010:	mov	x1, x19
  42c014:	mov	x0, x20
  42c018:	bl	42b6c0 <ferror@plt+0x28990>
  42c01c:	ldp	x27, x28, [sp, #80]
  42c020:	b	42c280 <ferror@plt+0x29550>
  42c024:	add	x0, x20, #0x148
  42c028:	bl	4541c8 <_obstack_newchunk@@Base>
  42c02c:	b	42c2e4 <ferror@plt+0x295b4>
  42c030:	ldrb	w0, [x24, #80]
  42c034:	orr	w0, w0, #0x2
  42c038:	strb	w0, [x24, #80]
  42c03c:	b	42c31c <ferror@plt+0x295ec>
  42c040:	mov	w0, #0x2                   	// #2
  42c044:	str	w0, [x19, #204]
  42c048:	str	xzr, [x19, #8]
  42c04c:	b	42bdd8 <ferror@plt+0x290a8>
  42c050:	ldr	x3, [x20, #984]
  42c054:	cbz	x3, 42c0ac <ferror@plt+0x2937c>
  42c058:	add	x2, x19, #0x40
  42c05c:	ldr	x1, [sp, #112]
  42c060:	mov	x0, x20
  42c064:	blr	x3
  42c068:	str	x0, [x19, #8]
  42c06c:	cbz	x0, 42c0a4 <ferror@plt+0x29374>
  42c070:	mov	x0, x19
  42c074:	bl	42b4d0 <ferror@plt+0x287a0>
  42c078:	and	w0, w0, #0xff
  42c07c:	cbz	w0, 42c09c <ferror@plt+0x2936c>
  42c080:	ldr	x0, [x20, #280]
  42c084:	str	x0, [x19, #32]
  42c088:	str	x19, [x20, #280]
  42c08c:	ldr	x0, [x25]
  42c090:	cbz	x0, 42c0d8 <ferror@plt+0x293a8>
  42c094:	ldp	x27, x28, [sp, #80]
  42c098:	b	42c380 <ferror@plt+0x29650>
  42c09c:	ldr	x0, [x19, #8]
  42c0a0:	bl	402a90 <free@plt>
  42c0a4:	ldr	x0, [x19]
  42c0a8:	str	x0, [x19, #8]
  42c0ac:	ldr	w0, [sp, #168]
  42c0b0:	cbnz	w0, 42c0f0 <ferror@plt+0x293c0>
  42c0b4:	ldr	w0, [sp, #132]
  42c0b8:	cbnz	w0, 42c12c <ferror@plt+0x293fc>
  42c0bc:	ldr	w3, [sp, #140]
  42c0c0:	ldr	w2, [sp, #144]
  42c0c4:	mov	x1, x19
  42c0c8:	mov	x0, x20
  42c0cc:	bl	42b6c0 <ferror@plt+0x28990>
  42c0d0:	ldp	x27, x28, [sp, #80]
  42c0d4:	b	42c280 <ferror@plt+0x29550>
  42c0d8:	str	x19, [x25]
  42c0dc:	mov	x1, x25
  42c0e0:	ldr	x0, [x20, #296]
  42c0e4:	bl	453ac8 <ferror@plt+0x50d98>
  42c0e8:	ldp	x27, x28, [sp, #80]
  42c0ec:	b	42c380 <ferror@plt+0x29650>
  42c0f0:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42c0f4:	add	x2, x2, #0x390
  42c0f8:	mov	w1, #0x3                   	// #3
  42c0fc:	mov	x0, x20
  42c100:	bl	426a10 <ferror@plt+0x23ce0>
  42c104:	mov	x0, x20
  42c108:	bl	425b94 <ferror@plt+0x22e64>
  42c10c:	ldrb	w0, [x0, #84]
  42c110:	cbnz	w0, 42c0b4 <ferror@plt+0x29384>
  42c114:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42c118:	add	x2, x2, #0x3c8
  42c11c:	mov	w1, #0x3                   	// #3
  42c120:	mov	x0, x20
  42c124:	bl	426a10 <ferror@plt+0x23ce0>
  42c128:	b	42c0b4 <ferror@plt+0x29384>
  42c12c:	ldr	x0, [x19]
  42c130:	bl	402a90 <free@plt>
  42c134:	mov	x0, x19
  42c138:	bl	402a90 <free@plt>
  42c13c:	ldr	x22, [x25]
  42c140:	cbz	x22, 42c150 <ferror@plt+0x29420>
  42c144:	mov	x19, x21
  42c148:	ldp	x27, x28, [sp, #80]
  42c14c:	b	42c380 <ferror@plt+0x29650>
  42c150:	str	x19, [x25]
  42c154:	mov	x1, x25
  42c158:	ldr	x0, [x20, #296]
  42c15c:	bl	453ac8 <ferror@plt+0x50d98>
  42c160:	mov	x19, x22
  42c164:	ldp	x27, x28, [sp, #80]
  42c168:	b	42c380 <ferror@plt+0x29650>
  42c16c:	mov	w0, #0x1                   	// #1
  42c170:	str	w0, [sp, #128]
  42c174:	ldr	x22, [x25]
  42c178:	cbz	x22, 42be00 <ferror@plt+0x290d0>
  42c17c:	ldr	x24, [x22, #8]
  42c180:	cmp	x21, x24
  42c184:	b.eq	42c1a0 <ferror@plt+0x29470>  // b.none
  42c188:	ldr	x22, [x22]
  42c18c:	cbnz	x22, 42c17c <ferror@plt+0x2944c>
  42c190:	b	42be00 <ferror@plt+0x290d0>
  42c194:	mov	w0, #0x1                   	// #1
  42c198:	str	w0, [sp, #148]
  42c19c:	b	42c174 <ferror@plt+0x29444>
  42c1a0:	ldr	x0, [x19]
  42c1a4:	bl	402a90 <free@plt>
  42c1a8:	mov	x0, x19
  42c1ac:	bl	402a90 <free@plt>
  42c1b0:	ldr	x19, [x22, #24]
  42c1b4:	ldp	x27, x28, [sp, #80]
  42c1b8:	mov	x0, x20
  42c1bc:	bl	42b050 <ferror@plt+0x28320>
  42c1c0:	ldr	x1, [x25]
  42c1c4:	str	x1, [x0]
  42c1c8:	str	x23, [x0, #8]
  42c1cc:	ldr	x1, [x20, #40]
  42c1d0:	ldr	w1, [x1, #56]
  42c1d4:	str	w1, [x0, #16]
  42c1d8:	str	x19, [x0, #24]
  42c1dc:	str	x0, [x25]
  42c1e0:	ldr	w0, [sp, #148]
  42c1e4:	cbz	w0, 42c1f8 <ferror@plt+0x294c8>
  42c1e8:	ldr	x0, [x20, #208]
  42c1ec:	cmp	x0, x24
  42c1f0:	ccmp	x0, x23, #0x4, ne  // ne = any
  42c1f4:	b.ne	42c24c <ferror@plt+0x2951c>  // b.any
  42c1f8:	ldr	w0, [sp, #128]
  42c1fc:	cbz	w0, 42c380 <ferror@plt+0x29650>
  42c200:	ldr	x0, [x20, #200]
  42c204:	cmp	x0, x23
  42c208:	ccmp	x0, x24, #0x4, ne  // ne = any
  42c20c:	b.eq	42c380 <ferror@plt+0x29650>  // b.none
  42c210:	mov	x0, x20
  42c214:	bl	42b050 <ferror@plt+0x28320>
  42c218:	ldr	x1, [x25]
  42c21c:	str	x1, [x0]
  42c220:	ldr	x1, [x20, #200]
  42c224:	str	x1, [x0, #8]
  42c228:	ldr	x1, [x20, #40]
  42c22c:	ldr	w1, [x1, #56]
  42c230:	str	w1, [x0, #16]
  42c234:	str	x19, [x0, #24]
  42c238:	str	x0, [x25]
  42c23c:	b	42c380 <ferror@plt+0x29650>
  42c240:	str	wzr, [sp, #128]
  42c244:	str	wzr, [sp, #148]
  42c248:	b	42c280 <ferror@plt+0x29550>
  42c24c:	mov	x0, x20
  42c250:	bl	42b050 <ferror@plt+0x28320>
  42c254:	ldr	x1, [x25]
  42c258:	str	x1, [x0]
  42c25c:	ldr	x1, [x20, #208]
  42c260:	str	x1, [x0, #8]
  42c264:	ldr	x1, [x20, #40]
  42c268:	ldr	w1, [x1, #56]
  42c26c:	str	w1, [x0, #16]
  42c270:	str	x19, [x0, #24]
  42c274:	str	x0, [x25]
  42c278:	b	42c1f8 <ferror@plt+0x294c8>
  42c27c:	ldp	x27, x28, [sp, #80]
  42c280:	ldr	x0, [x20, #280]
  42c284:	str	x0, [x19, #32]
  42c288:	str	x19, [x20, #280]
  42c28c:	mov	x24, #0x0                   	// #0
  42c290:	b	42c1b8 <ferror@plt+0x29488>
  42c294:	mov	w0, #0x1                   	// #1
  42c298:	str	w0, [sp, #168]
  42c29c:	mov	x0, x24
  42c2a0:	bl	402a90 <free@plt>
  42c2a4:	mov	x0, x19
  42c2a8:	bl	42b4d0 <ferror@plt+0x287a0>
  42c2ac:	and	w0, w0, #0xff
  42c2b0:	cbnz	w0, 42c27c <ferror@plt+0x2954c>
  42c2b4:	ldr	w0, [x19, #204]
  42c2b8:	cmp	w0, #0x2
  42c2bc:	b.ne	42c008 <ferror@plt+0x292d8>  // b.any
  42c2c0:	mov	x0, x21
  42c2c4:	bl	402680 <strlen@plt>
  42c2c8:	mov	x26, x0
  42c2cc:	add	x1, x0, #0x1
  42c2d0:	ldr	x0, [x20, #360]
  42c2d4:	ldr	x2, [x20, #352]
  42c2d8:	sub	x0, x0, x2
  42c2dc:	cmp	x0, x1
  42c2e0:	b.cc	42c024 <ferror@plt+0x292f4>  // b.lo, b.ul, b.last
  42c2e4:	add	x24, x20, #0x148
  42c2e8:	mov	x2, x26
  42c2ec:	mov	x1, x21
  42c2f0:	ldr	x0, [x20, #352]
  42c2f4:	bl	402620 <memcpy@plt>
  42c2f8:	ldr	x1, [x20, #352]
  42c2fc:	add	x0, x1, x26
  42c300:	add	x0, x0, #0x1
  42c304:	str	x0, [x20, #352]
  42c308:	strb	wzr, [x1, x26]
  42c30c:	ldr	x26, [x20, #344]
  42c310:	ldr	x1, [x20, #352]
  42c314:	cmp	x26, x1
  42c318:	b.eq	42c030 <ferror@plt+0x29300>  // b.none
  42c31c:	ldr	x0, [x20, #376]
  42c320:	add	x1, x1, x0
  42c324:	bic	x0, x1, x0
  42c328:	str	x0, [x20, #352]
  42c32c:	ldr	x1, [x20, #336]
  42c330:	ldr	x2, [x20, #360]
  42c334:	sub	x0, x0, x1
  42c338:	sub	x1, x2, x1
  42c33c:	cmp	x0, x1
  42c340:	b.ls	42c348 <ferror@plt+0x29618>  // b.plast
  42c344:	str	x2, [x20, #352]
  42c348:	ldr	x1, [x20, #352]
  42c34c:	str	x1, [x20, #344]
  42c350:	mov	x0, x21
  42c354:	bl	402a90 <free@plt>
  42c358:	mov	w3, #0x1                   	// #1
  42c35c:	mov	w2, w22
  42c360:	mov	x1, x26
  42c364:	ldr	x0, [x20, #320]
  42c368:	bl	4537e4 <ferror@plt+0x50ab4>
  42c36c:	str	x26, [x0]
  42c370:	ldr	x0, [x19]
  42c374:	str	x0, [x19, #8]
  42c378:	b	42bdd8 <ferror@plt+0x290a8>
  42c37c:	ldr	x19, [x0, #24]
  42c380:	mov	x0, x19
  42c384:	ldp	x19, x20, [sp, #16]
  42c388:	ldp	x21, x22, [sp, #32]
  42c38c:	ldp	x23, x24, [sp, #48]
  42c390:	ldp	x25, x26, [sp, #64]
  42c394:	ldp	x29, x30, [sp], #304
  42c398:	ret
  42c39c:	stp	x29, x30, [sp, #-160]!
  42c3a0:	mov	x29, sp
  42c3a4:	stp	x21, x22, [sp, #32]
  42c3a8:	stp	x23, x24, [sp, #48]
  42c3ac:	str	w3, [sp, #100]
  42c3b0:	ldrb	w21, [x1, #210]
  42c3b4:	cbnz	w21, 42c410 <ferror@plt+0x296e0>
  42c3b8:	stp	x19, x20, [sp, #16]
  42c3bc:	mov	x20, x0
  42c3c0:	mov	x19, x1
  42c3c4:	and	w23, w2, #0xff
  42c3c8:	cbnz	w23, 42c418 <ferror@plt+0x296e8>
  42c3cc:	ldr	x0, [x19, #56]
  42c3d0:	cbz	x0, 42c3dc <ferror@plt+0x296ac>
  42c3d4:	ldrb	w0, [x0, #18]
  42c3d8:	tbnz	w0, #1, 42c6c8 <ferror@plt+0x29998>
  42c3dc:	ldr	x1, [x19, #16]
  42c3e0:	cbz	x1, 42c434 <ferror@plt+0x29704>
  42c3e4:	ldr	x4, [x20, #976]
  42c3e8:	ldr	x3, [x19, #8]
  42c3ec:	ldr	w2, [x19, #200]
  42c3f0:	mov	x0, x20
  42c3f4:	blr	x4
  42c3f8:	mov	w0, #0xffffffff            	// #-1
  42c3fc:	str	w0, [x19, #200]
  42c400:	ldr	x0, [x19, #16]
  42c404:	bl	402a90 <free@plt>
  42c408:	str	xzr, [x19, #16]
  42c40c:	ldp	x19, x20, [sp, #16]
  42c410:	mov	w24, #0x0                   	// #0
  42c414:	b	42c6b4 <ferror@plt+0x29984>
  42c418:	mov	w0, #0x1                   	// #1
  42c41c:	strb	w0, [x20, #417]
  42c420:	strb	w0, [x1, #210]
  42c424:	ldrh	w0, [x1, #208]
  42c428:	cbz	w0, 42c3cc <ferror@plt+0x2969c>
  42c42c:	ldp	x19, x20, [sp, #16]
  42c430:	b	42c410 <ferror@plt+0x296e0>
  42c434:	ldr	w2, [sp, #100]
  42c438:	mov	x1, x19
  42c43c:	mov	x0, x20
  42c440:	bl	42b7fc <ferror@plt+0x28acc>
  42c444:	ands	w24, w0, #0xff
  42c448:	b.ne	42c454 <ferror@plt+0x29724>  // b.any
  42c44c:	ldp	x19, x20, [sp, #16]
  42c450:	b	42c410 <ferror@plt+0x296e0>
  42c454:	stp	x27, x28, [sp, #80]
  42c458:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42c45c:	ldr	x28, [x0, #2456]
  42c460:	cbz	x28, 42c560 <ferror@plt+0x29830>
  42c464:	cbnz	w23, 42c470 <ferror@plt+0x29740>
  42c468:	ldrb	w0, [x28, #8]
  42c46c:	cbz	w0, 42c560 <ferror@plt+0x29830>
  42c470:	ldr	x0, [x19, #120]
  42c474:	str	x0, [sp, #120]
  42c478:	strb	wzr, [sp, #144]
  42c47c:	str	x19, [sp, #152]
  42c480:	strb	w23, [sp, #145]
  42c484:	ldr	x27, [x28], #16
  42c488:	cbz	x27, 42c560 <ferror@plt+0x29830>
  42c48c:	stp	x25, x26, [sp, #64]
  42c490:	mov	x26, #0x0                   	// #0
  42c494:	add	x0, sp, #0x80
  42c498:	str	x0, [sp, #104]
  42c49c:	b	42c4dc <ferror@plt+0x297ac>
  42c4a0:	ldr	x0, [sp, #152]
  42c4a4:	ldr	x2, [sp, #104]
  42c4a8:	ldr	x1, [x0, #120]
  42c4ac:	ldr	x0, [x0, #40]
  42c4b0:	bl	450054 <ferror@plt+0x4d324>
  42c4b4:	mov	w0, #0x1                   	// #1
  42c4b8:	strb	w0, [sp, #144]
  42c4bc:	b	42c504 <ferror@plt+0x297d4>
  42c4c0:	ldrb	w0, [x25, #24]
  42c4c4:	eor	w0, w0, #0x1
  42c4c8:	cmp	w0, #0x0
  42c4cc:	b.le	42c520 <ferror@plt+0x297f0>
  42c4d0:	add	x26, x22, #0x1
  42c4d4:	cmp	x26, x27
  42c4d8:	b.cs	42c55c <ferror@plt+0x2982c>  // b.hs, b.nlast
  42c4dc:	add	x22, x27, x26
  42c4e0:	lsr	x22, x22, #1
  42c4e4:	add	x25, x28, x22, lsl #5
  42c4e8:	mov	x2, #0x8                   	// #8
  42c4ec:	mov	x1, x25
  42c4f0:	add	x0, sp, #0x78
  42c4f4:	bl	4029e0 <memcmp@plt>
  42c4f8:	cbnz	w0, 42c534 <ferror@plt+0x29804>
  42c4fc:	ldrb	w0, [sp, #144]
  42c500:	cbz	w0, 42c4a0 <ferror@plt+0x29770>
  42c504:	mov	x2, #0x10                  	// #16
  42c508:	add	x1, x25, #0x8
  42c50c:	ldr	x0, [sp, #104]
  42c510:	bl	4029e0 <memcmp@plt>
  42c514:	cbnz	w0, 42c534 <ferror@plt+0x29804>
  42c518:	ldrb	w0, [sp, #145]
  42c51c:	cbz	w0, 42c4c0 <ferror@plt+0x29790>
  42c520:	cbz	w23, 42c540 <ferror@plt+0x29810>
  42c524:	ldp	x19, x20, [sp, #16]
  42c528:	ldp	x25, x26, [sp, #64]
  42c52c:	ldp	x27, x28, [sp, #80]
  42c530:	b	42c410 <ferror@plt+0x296e0>
  42c534:	tbz	w0, #31, 42c4c8 <ferror@plt+0x29798>
  42c538:	mov	x27, x22
  42c53c:	b	42c4d4 <ferror@plt+0x297a4>
  42c540:	mov	w0, #0x1                   	// #1
  42c544:	strb	w0, [x20, #417]
  42c548:	strb	w0, [x19, #210]
  42c54c:	ldp	x19, x20, [sp, #16]
  42c550:	ldp	x25, x26, [sp, #64]
  42c554:	ldp	x27, x28, [sp, #80]
  42c558:	b	42c410 <ferror@plt+0x296e0>
  42c55c:	ldp	x25, x26, [sp, #64]
  42c560:	ldrb	w0, [x20, #417]
  42c564:	cbz	w0, 42c5e0 <ferror@plt+0x298b0>
  42c568:	ldr	x22, [x20, #280]
  42c56c:	cbz	x22, 42c5e0 <ferror@plt+0x298b0>
  42c570:	mov	x28, #0xd8                  	// #216
  42c574:	mov	w27, #0xffffffff            	// #-1
  42c578:	b	42c6ec <ferror@plt+0x299bc>
  42c57c:	ldr	x25, [x22, #64]
  42c580:	ldr	x0, [x22]
  42c584:	str	x0, [sp, #104]
  42c588:	mov	x1, x28
  42c58c:	mov	x0, #0x1                   	// #1
  42c590:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  42c594:	mov	x26, x0
  42c598:	ldr	x0, [x20]
  42c59c:	cmp	x0, #0x0
  42c5a0:	cset	w0, eq  // eq = none
  42c5a4:	strb	w0, [x26, #212]
  42c5a8:	str	w27, [x26, #200]
  42c5ac:	str	x25, [x26, #64]
  42c5b0:	ldr	x0, [sp, #104]
  42c5b4:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  42c5b8:	str	x0, [x26]
  42c5bc:	ldr	x0, [x22, #8]
  42c5c0:	str	x0, [x26, #8]
  42c5c4:	b	42c740 <ferror@plt+0x29a10>
  42c5c8:	str	xzr, [x26, #8]
  42c5cc:	mov	x0, x26
  42c5d0:	bl	42ae9c <ferror@plt+0x2816c>
  42c5d4:	cbnz	w25, 42c788 <ferror@plt+0x29a58>
  42c5d8:	ldp	x25, x26, [sp, #64]
  42c5dc:	b	42c6e4 <ferror@plt+0x299b4>
  42c5e0:	ldr	x0, [x20]
  42c5e4:	mov	w22, #0x0                   	// #0
  42c5e8:	cbz	x0, 42c60c <ferror@plt+0x298dc>
  42c5ec:	ldr	x1, [x19, #64]
  42c5f0:	cbz	x1, 42c60c <ferror@plt+0x298dc>
  42c5f4:	ldrb	w0, [x0, #106]
  42c5f8:	ldrb	w2, [x1, #20]
  42c5fc:	ldrb	w22, [x1, #20]
  42c600:	cmp	w2, w0, uxtb
  42c604:	csel	w22, w22, w0, cs  // cs = hs, nlast
  42c608:	and	w22, w22, #0xff
  42c60c:	cmp	w22, #0x0
  42c610:	cset	w0, ne  // ne = any
  42c614:	ldr	w1, [x20, #1200]
  42c618:	cmp	w1, w0
  42c61c:	b.le	42c644 <ferror@plt+0x29914>
  42c620:	ldrh	w0, [x19, #208]
  42c624:	cbnz	w0, 42c644 <ferror@plt+0x29914>
  42c628:	ldrb	w0, [x19, #212]
  42c62c:	cbz	w0, 42c638 <ferror@plt+0x29908>
  42c630:	ldrb	w0, [x20, #1206]
  42c634:	cbnz	w0, 42c644 <ferror@plt+0x29914>
  42c638:	ldr	x1, [x19, #8]
  42c63c:	ldr	x0, [x20, #712]
  42c640:	bl	439330 <ferror@plt+0x36600>
  42c644:	strb	wzr, [x19, #213]
  42c648:	ldrh	w0, [x19, #208]
  42c64c:	add	w0, w0, #0x1
  42c650:	strh	w0, [x19, #208]
  42c654:	ldr	x1, [x19, #40]
  42c658:	ldr	x2, [x19, #120]
  42c65c:	ldrb	w0, [x20, #1155]
  42c660:	cbz	w0, 42c66c <ferror@plt+0x2993c>
  42c664:	ldrb	w21, [x20, #1244]
  42c668:	eor	w21, w21, #0x1
  42c66c:	mov	w3, w21
  42c670:	mov	x0, x20
  42c674:	bl	425bf4 <ferror@plt+0x22ec4>
  42c678:	str	x19, [x0, #80]
  42c67c:	strb	w22, [x0, #106]
  42c680:	ldr	x1, [x19, #48]
  42c684:	str	x1, [x0, #40]
  42c688:	mov	w0, #0x1                   	// #1
  42c68c:	strb	w0, [x20, #440]
  42c690:	str	xzr, [x20, #424]
  42c694:	mov	w4, w22
  42c698:	mov	w3, #0x1                   	// #1
  42c69c:	ldr	x2, [x19, #8]
  42c6a0:	mov	w1, #0x0                   	// #0
  42c6a4:	mov	x0, x20
  42c6a8:	bl	4253a4 <ferror@plt+0x22674>
  42c6ac:	ldp	x19, x20, [sp, #16]
  42c6b0:	ldp	x27, x28, [sp, #80]
  42c6b4:	mov	w0, w24
  42c6b8:	ldp	x21, x22, [sp, #32]
  42c6bc:	ldp	x23, x24, [sp, #48]
  42c6c0:	ldp	x29, x30, [sp], #160
  42c6c4:	ret
  42c6c8:	ldp	x19, x20, [sp, #16]
  42c6cc:	b	42c410 <ferror@plt+0x296e0>
  42c6d0:	ldr	x0, [x22, #40]
  42c6d4:	cbz	x0, 42c79c <ferror@plt+0x29a6c>
  42c6d8:	ldrb	w25, [x22, #213]
  42c6dc:	cbz	w25, 42c5c8 <ferror@plt+0x29898>
  42c6e0:	ldp	x25, x26, [sp, #64]
  42c6e4:	ldr	x22, [x22, #32]
  42c6e8:	cbz	x22, 42c5e0 <ferror@plt+0x298b0>
  42c6ec:	cmp	x19, x22
  42c6f0:	b.eq	42c6e4 <ferror@plt+0x299b4>  // b.none
  42c6f4:	cbnz	w23, 42c700 <ferror@plt+0x299d0>
  42c6f8:	ldrb	w0, [x22, #210]
  42c6fc:	cbz	w0, 42c6e4 <ferror@plt+0x299b4>
  42c700:	ldr	w0, [x22, #204]
  42c704:	cbnz	w0, 42c6e4 <ferror@plt+0x299b4>
  42c708:	ldr	x1, [x22, #160]
  42c70c:	ldr	x0, [x19, #160]
  42c710:	cmp	x1, x0
  42c714:	b.ne	42c6e4 <ferror@plt+0x299b4>  // b.any
  42c718:	ldr	x1, [x22, #120]
  42c71c:	ldr	x0, [x19, #120]
  42c720:	cmp	x1, x0
  42c724:	b.ne	42c6e4 <ferror@plt+0x299b4>  // b.any
  42c728:	stp	x25, x26, [sp, #64]
  42c72c:	ldr	x0, [x22, #40]
  42c730:	mov	x26, x22
  42c734:	cbz	x0, 42c740 <ferror@plt+0x29a10>
  42c738:	ldrb	w0, [x22, #213]
  42c73c:	cbz	w0, 42c57c <ferror@plt+0x2984c>
  42c740:	ldr	w2, [sp, #100]
  42c744:	mov	x1, x26
  42c748:	mov	x0, x20
  42c74c:	bl	42b7fc <ferror@plt+0x28acc>
  42c750:	ands	w25, w0, #0xff
  42c754:	b.eq	42c6d0 <ferror@plt+0x299a0>  // b.none
  42c758:	ldr	x2, [x19, #120]
  42c75c:	ldr	x0, [x26, #120]
  42c760:	cmp	x0, x2
  42c764:	b.ne	42c6d0 <ferror@plt+0x299a0>  // b.any
  42c768:	ldr	x1, [x19, #40]
  42c76c:	ldr	x0, [x26, #40]
  42c770:	bl	4029e0 <memcmp@plt>
  42c774:	cbnz	w0, 42c6d0 <ferror@plt+0x299a0>
  42c778:	ldr	x0, [x22, #40]
  42c77c:	cbz	x0, 42c788 <ferror@plt+0x29a58>
  42c780:	ldrb	w0, [x22, #213]
  42c784:	cbz	w0, 42c5c8 <ferror@plt+0x29898>
  42c788:	mov	w24, w21
  42c78c:	ldp	x19, x20, [sp, #16]
  42c790:	ldp	x25, x26, [sp, #64]
  42c794:	ldp	x27, x28, [sp, #80]
  42c798:	b	42c6b4 <ferror@plt+0x29984>
  42c79c:	ldp	x25, x26, [sp, #64]
  42c7a0:	b	42c6e4 <ferror@plt+0x299b4>
  42c7a4:	mov	w2, #0x1                   	// #1
  42c7a8:	strb	w2, [x0, #417]
  42c7ac:	strb	w2, [x1, #210]
  42c7b0:	ret
  42c7b4:	stp	x29, x30, [sp, #-64]!
  42c7b8:	mov	x29, sp
  42c7bc:	stp	x19, x20, [sp, #16]
  42c7c0:	stp	x21, x22, [sp, #32]
  42c7c4:	stp	x23, x24, [sp, #48]
  42c7c8:	mov	x19, x0
  42c7cc:	mov	x22, x1
  42c7d0:	mov	w23, w2
  42c7d4:	mov	w20, w3
  42c7d8:	mov	w21, w4
  42c7dc:	cmp	w3, #0x3
  42c7e0:	b.eq	42c840 <ferror@plt+0x29b10>  // b.none
  42c7e4:	bl	42ba00 <ferror@plt+0x28cd0>
  42c7e8:	mov	x2, x0
  42c7ec:	mov	w0, #0x0                   	// #0
  42c7f0:	cbz	x2, 42c82c <ferror@plt+0x29afc>
  42c7f4:	cmp	w20, #0x4
  42c7f8:	cset	w24, eq  // eq = none
  42c7fc:	mov	w6, w21
  42c800:	mov	w5, w24
  42c804:	mov	w4, w23
  42c808:	mov	w3, #0x0                   	// #0
  42c80c:	mov	x1, x22
  42c810:	mov	x0, x19
  42c814:	bl	42bb44 <ferror@plt+0x28e14>
  42c818:	mov	x22, x0
  42c81c:	cmp	x0, #0x0
  42c820:	mov	w0, #0x0                   	// #0
  42c824:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  42c828:	b.eq	42c898 <ferror@plt+0x29b68>  // b.none
  42c82c:	ldp	x19, x20, [sp, #16]
  42c830:	ldp	x21, x22, [sp, #32]
  42c834:	ldp	x23, x24, [sp, #48]
  42c838:	ldp	x29, x30, [sp], #64
  42c83c:	ret
  42c840:	ldr	x0, [x0, #448]
  42c844:	ldr	x1, [x19, #488]
  42c848:	ldr	x1, [x1, #16]
  42c84c:	cmp	x0, x1
  42c850:	b.eq	42c858 <ferror@plt+0x29b28>  // b.none
  42c854:	stur	wzr, [x0, #-24]
  42c858:	mov	w3, #0x3                   	// #3
  42c85c:	mov	w2, w23
  42c860:	mov	x1, x22
  42c864:	mov	x0, x19
  42c868:	bl	42ba00 <ferror@plt+0x28cd0>
  42c86c:	mov	x2, x0
  42c870:	mov	w0, #0x0                   	// #0
  42c874:	cbz	x2, 42c82c <ferror@plt+0x29afc>
  42c878:	mov	w6, w21
  42c87c:	mov	w5, #0x0                   	// #0
  42c880:	mov	w4, w23
  42c884:	mov	w3, #0x0                   	// #0
  42c888:	mov	x1, x22
  42c88c:	mov	x0, x19
  42c890:	bl	42bb44 <ferror@plt+0x28e14>
  42c894:	mov	x22, x0
  42c898:	ldr	x0, [x22, #16]
  42c89c:	cbz	x0, 42c8c0 <ferror@plt+0x29b90>
  42c8a0:	cmp	w20, #0x2
  42c8a4:	mov	w3, w21
  42c8a8:	cset	w2, eq  // eq = none
  42c8ac:	mov	x1, x22
  42c8b0:	mov	x0, x19
  42c8b4:	bl	42c39c <ferror@plt+0x2966c>
  42c8b8:	and	w0, w0, #0xff
  42c8bc:	b	42c82c <ferror@plt+0x29afc>
  42c8c0:	ldr	w0, [x22, #204]
  42c8c4:	cbnz	w0, 42c8a0 <ferror@plt+0x29b70>
  42c8c8:	sub	w0, w20, #0x3
  42c8cc:	cmp	w0, #0x1
  42c8d0:	b.ls	42c8a0 <ferror@plt+0x29b70>  // b.plast
  42c8d4:	ldr	x0, [x19, #40]
  42c8d8:	ldr	w1, [x0, #56]
  42c8dc:	bl	433188 <ferror@plt+0x30458>
  42c8e0:	mov	w23, w0
  42c8e4:	mov	w1, w21
  42c8e8:	ldr	x0, [x19, #40]
  42c8ec:	bl	433188 <ferror@plt+0x30458>
  42c8f0:	cmp	w23, w0
  42c8f4:	b.le	42c8a0 <ferror@plt+0x29b70>
  42c8f8:	ldr	x1, [x19, #40]
  42c8fc:	ldr	w0, [x1, #56]
  42c900:	sub	w0, w0, #0x1
  42c904:	str	w0, [x1, #56]
  42c908:	cmp	w20, #0x2
  42c90c:	mov	w3, w21
  42c910:	cset	w2, eq  // eq = none
  42c914:	mov	x1, x22
  42c918:	mov	x0, x19
  42c91c:	bl	42c39c <ferror@plt+0x2966c>
  42c920:	ands	w0, w0, #0xff
  42c924:	b.ne	42c82c <ferror@plt+0x29afc>  // b.any
  42c928:	ldr	x2, [x19, #40]
  42c92c:	ldr	w1, [x2, #56]
  42c930:	add	w1, w1, #0x1
  42c934:	str	w1, [x2, #56]
  42c938:	b	42c82c <ferror@plt+0x29afc>
  42c93c:	stp	x29, x30, [sp, #-32]!
  42c940:	mov	x29, sp
  42c944:	stp	x19, x20, [sp, #16]
  42c948:	mov	x19, x1
  42c94c:	ldr	x20, [x0, #296]
  42c950:	mov	x0, x1
  42c954:	bl	453c24 <ferror@plt+0x50ef4>
  42c958:	mov	w2, w0
  42c95c:	mov	x1, x19
  42c960:	mov	x0, x20
  42c964:	bl	453670 <ferror@plt+0x50940>
  42c968:	cbnz	x0, 42c978 <ferror@plt+0x29c48>
  42c96c:	b	42c98c <ferror@plt+0x29c5c>
  42c970:	ldr	x0, [x0]
  42c974:	cbz	x0, 42c98c <ferror@plt+0x29c5c>
  42c978:	ldr	x1, [x0, #8]
  42c97c:	cbz	x1, 42c970 <ferror@plt+0x29c40>
  42c980:	ldr	x1, [x0, #24]
  42c984:	ldr	w1, [x1, #204]
  42c988:	cbnz	w1, 42c970 <ferror@plt+0x29c40>
  42c98c:	cmp	x0, #0x0
  42c990:	cset	w0, ne  // ne = any
  42c994:	ldp	x19, x20, [sp, #16]
  42c998:	ldp	x29, x30, [sp], #32
  42c99c:	ret
  42c9a0:	stp	x29, x30, [sp, #-48]!
  42c9a4:	mov	x29, sp
  42c9a8:	stp	x19, x20, [sp, #16]
  42c9ac:	stp	x21, x22, [sp, #32]
  42c9b0:	mov	x21, x0
  42c9b4:	mov	x19, x1
  42c9b8:	mov	w20, w2
  42c9bc:	ldr	x22, [x0, #296]
  42c9c0:	mov	x0, x1
  42c9c4:	bl	453c24 <ferror@plt+0x50ef4>
  42c9c8:	mov	w2, w0
  42c9cc:	mov	x1, x19
  42c9d0:	mov	x0, x22
  42c9d4:	bl	453670 <ferror@plt+0x50940>
  42c9d8:	mov	x19, x0
  42c9dc:	tbnz	w20, #31, 42c9e8 <ferror@plt+0x29cb8>
  42c9e0:	cbnz	x19, 42ca04 <ferror@plt+0x29cd4>
  42c9e4:	b	42ca24 <ferror@plt+0x29cf4>
  42c9e8:	mov	w1, w20
  42c9ec:	ldr	x0, [x21, #40]
  42c9f0:	bl	432350 <ferror@plt+0x2f620>
  42c9f4:	mov	w20, w0
  42c9f8:	b	42c9e0 <ferror@plt+0x29cb0>
  42c9fc:	ldr	x19, [x19]
  42ca00:	cbz	x19, 42ca24 <ferror@plt+0x29cf4>
  42ca04:	ldr	x1, [x19, #8]
  42ca08:	cbz	x1, 42c9fc <ferror@plt+0x29ccc>
  42ca0c:	ldr	x1, [x19, #24]
  42ca10:	ldr	w1, [x1, #204]
  42ca14:	cbnz	w1, 42c9fc <ferror@plt+0x29ccc>
  42ca18:	ldr	w0, [x19, #16]
  42ca1c:	cmp	w0, w20
  42ca20:	b.hi	42c9fc <ferror@plt+0x29ccc>  // b.pmore
  42ca24:	cmp	x19, #0x0
  42ca28:	cset	w0, ne  // ne = any
  42ca2c:	ldp	x19, x20, [sp, #16]
  42ca30:	ldp	x21, x22, [sp, #32]
  42ca34:	ldp	x29, x30, [sp], #48
  42ca38:	ret
  42ca3c:	stp	x29, x30, [sp, #-64]!
  42ca40:	mov	x29, sp
  42ca44:	stp	x19, x20, [sp, #16]
  42ca48:	stp	x21, x22, [sp, #32]
  42ca4c:	str	x23, [sp, #48]
  42ca50:	mov	x19, x0
  42ca54:	adrp	x20, 402000 <_ZGTtnam@plt-0x610>
  42ca58:	add	x20, x20, #0xa90
  42ca5c:	adrp	x21, 454000 <ferror@plt+0x512d0>
  42ca60:	add	x21, x21, #0xd6c
  42ca64:	adrp	x23, 42a000 <ferror@plt+0x272d0>
  42ca68:	add	x23, x23, #0xf8c
  42ca6c:	adrp	x22, 42a000 <ferror@plt+0x272d0>
  42ca70:	add	x22, x22, #0xe6c
  42ca74:	mov	x5, x20
  42ca78:	mov	x4, x21
  42ca7c:	mov	x3, #0x0                   	// #0
  42ca80:	mov	x2, x23
  42ca84:	mov	x1, x22
  42ca88:	mov	x0, #0x7f                  	// #127
  42ca8c:	bl	45343c <ferror@plt+0x5070c>
  42ca90:	str	x0, [x19, #296]
  42ca94:	mov	x5, x20
  42ca98:	mov	x4, x21
  42ca9c:	mov	x3, #0x0                   	// #0
  42caa0:	mov	x2, x23
  42caa4:	mov	x1, x22
  42caa8:	mov	x0, #0x7f                  	// #127
  42caac:	bl	45343c <ferror@plt+0x5070c>
  42cab0:	str	x0, [x19, #304]
  42cab4:	mov	x0, #0xff0                 	// #4080
  42cab8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42cabc:	str	wzr, [x0]
  42cac0:	ldr	x1, [x19, #312]
  42cac4:	str	x1, [x0, #8]
  42cac8:	str	x0, [x19, #312]
  42cacc:	mov	x5, x20
  42cad0:	mov	x4, x21
  42cad4:	mov	x3, #0x0                   	// #0
  42cad8:	adrp	x2, 42a000 <ferror@plt+0x272d0>
  42cadc:	add	x2, x2, #0xf70
  42cae0:	adrp	x1, 453000 <ferror@plt+0x502d0>
  42cae4:	add	x1, x1, #0xc24
  42cae8:	mov	x0, #0x7f                  	// #127
  42caec:	bl	45343c <ferror@plt+0x5070c>
  42caf0:	str	x0, [x19, #320]
  42caf4:	mov	x4, x20
  42caf8:	adrp	x3, 454000 <ferror@plt+0x512d0>
  42cafc:	add	x3, x3, #0xd38
  42cb00:	mov	x2, #0x0                   	// #0
  42cb04:	mov	x1, #0x0                   	// #0
  42cb08:	add	x0, x19, #0x148
  42cb0c:	bl	454174 <_obstack_begin@@Base>
  42cb10:	ldp	x19, x20, [sp, #16]
  42cb14:	ldp	x21, x22, [sp, #32]
  42cb18:	ldr	x23, [sp, #48]
  42cb1c:	ldp	x29, x30, [sp], #64
  42cb20:	ret
  42cb24:	stp	x29, x30, [sp, #-32]!
  42cb28:	mov	x29, sp
  42cb2c:	stp	x19, x20, [sp, #16]
  42cb30:	mov	x19, x0
  42cb34:	ldr	x0, [x0, #296]
  42cb38:	bl	4534bc <ferror@plt+0x5078c>
  42cb3c:	ldr	x0, [x19, #304]
  42cb40:	bl	4534bc <ferror@plt+0x5078c>
  42cb44:	ldr	x0, [x19, #320]
  42cb48:	bl	4534bc <ferror@plt+0x5078c>
  42cb4c:	mov	x1, #0x0                   	// #0
  42cb50:	add	x0, x19, #0x148
  42cb54:	bl	454320 <_obstack_free@@Base>
  42cb58:	ldr	x20, [x19, #312]
  42cb5c:	cbz	x20, 42cb70 <ferror@plt+0x29e40>
  42cb60:	mov	x0, x20
  42cb64:	ldr	x20, [x20, #8]
  42cb68:	bl	402a90 <free@plt>
  42cb6c:	cbnz	x20, 42cb60 <ferror@plt+0x29e30>
  42cb70:	ldr	x19, [x19, #280]
  42cb74:	cbz	x19, 42cb88 <ferror@plt+0x29e58>
  42cb78:	mov	x0, x19
  42cb7c:	ldr	x19, [x19, #32]
  42cb80:	bl	42ae9c <ferror@plt+0x2816c>
  42cb84:	cbnz	x19, 42cb78 <ferror@plt+0x29e48>
  42cb88:	ldp	x19, x20, [sp, #16]
  42cb8c:	ldp	x29, x30, [sp], #32
  42cb90:	ret
  42cb94:	stp	x29, x30, [sp, #-32]!
  42cb98:	mov	x29, sp
  42cb9c:	str	x19, [sp, #16]
  42cba0:	mov	x19, x0
  42cba4:	bl	42cb24 <ferror@plt+0x29df4>
  42cba8:	str	xzr, [x19, #312]
  42cbac:	str	xzr, [x19, #280]
  42cbb0:	mov	x0, x19
  42cbb4:	bl	42ca3c <ferror@plt+0x29d0c>
  42cbb8:	ldr	x19, [sp, #16]
  42cbbc:	ldp	x29, x30, [sp], #32
  42cbc0:	ret
  42cbc4:	stp	x29, x30, [sp, #-16]!
  42cbc8:	mov	x29, sp
  42cbcc:	ldr	x2, [x0]
  42cbd0:	ldr	x2, [x2, #80]
  42cbd4:	mov	w6, #0x0                   	// #0
  42cbd8:	mov	w5, #0x0                   	// #0
  42cbdc:	mov	w4, #0x0                   	// #0
  42cbe0:	mov	w3, #0x1                   	// #1
  42cbe4:	ldr	x2, [x2, #64]
  42cbe8:	bl	42bb44 <ferror@plt+0x28e14>
  42cbec:	ldp	x29, x30, [sp], #16
  42cbf0:	ret
  42cbf4:	stp	x29, x30, [sp, #-16]!
  42cbf8:	mov	x29, sp
  42cbfc:	mov	w4, w1
  42cc00:	ldr	x1, [x0, #40]
  42cc04:	ldr	w5, [x1, #12]
  42cc08:	sub	w5, w5, #0x1
  42cc0c:	sbfiz	x3, x5, #1, #32
  42cc10:	add	x5, x3, w5, sxtw
  42cc14:	lsl	x5, x5, #3
  42cc18:	ldr	x3, [x1]
  42cc1c:	add	x6, x3, x5
  42cc20:	cbz	w4, 42cc30 <ferror@plt+0x29f00>
  42cc24:	cmp	w2, #0x0
  42cc28:	cset	w4, ne  // ne = any
  42cc2c:	add	w4, w4, #0x1
  42cc30:	ldr	x1, [x0]
  42cc34:	strb	w4, [x1, #106]
  42cc38:	ldr	x1, [x0, #40]
  42cc3c:	ldr	w1, [x1, #60]
  42cc40:	ldr	w3, [x3, x5]
  42cc44:	sub	w1, w1, w3
  42cc48:	ldrb	w3, [x6, #6]
  42cc4c:	lsr	w1, w1, w3
  42cc50:	ldr	w3, [x6, #16]
  42cc54:	add	w3, w1, w3
  42cc58:	ldr	x2, [x6, #8]
  42cc5c:	mov	w1, #0x2                   	// #2
  42cc60:	bl	4253a4 <ferror@plt+0x22674>
  42cc64:	ldp	x29, x30, [sp], #16
  42cc68:	ret
  42cc6c:	stp	x29, x30, [sp, #-16]!
  42cc70:	mov	x29, sp
  42cc74:	mov	w4, #0x0                   	// #0
  42cc78:	mov	w3, #0x1                   	// #1
  42cc7c:	bl	4253a4 <ferror@plt+0x22674>
  42cc80:	ldp	x29, x30, [sp], #16
  42cc84:	ret
  42cc88:	stp	x29, x30, [sp, #-64]!
  42cc8c:	mov	x29, sp
  42cc90:	stp	x19, x20, [sp, #16]
  42cc94:	mov	x19, x0
  42cc98:	str	xzr, [sp, #48]
  42cc9c:	ldr	x0, [x0, #296]
  42cca0:	bl	45327c <ferror@plt+0x5054c>
  42cca4:	str	x0, [sp, #56]
  42cca8:	add	x2, sp, #0x30
  42ccac:	adrp	x1, 42a000 <ferror@plt+0x272d0>
  42ccb0:	add	x1, x1, #0xed8
  42ccb4:	ldr	x0, [x19, #296]
  42ccb8:	bl	453b94 <ferror@plt+0x50e64>
  42ccbc:	ldr	x0, [sp, #48]
  42ccc0:	cbz	x0, 42cd60 <ferror@plt+0x2a030>
  42ccc4:	adrp	x3, 42b000 <ferror@plt+0x282d0>
  42ccc8:	add	x3, x3, #0x4b4
  42cccc:	mov	x2, #0x8                   	// #8
  42ccd0:	ldr	x1, [sp, #56]
  42ccd4:	bl	402760 <qsort@plt>
  42ccd8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ccdc:	add	x1, x1, #0x3f8
  42cce0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  42cce4:	add	x0, x0, #0x848
  42cce8:	bl	402a80 <dgettext@plt>
  42ccec:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42ccf0:	ldr	x1, [x1, #1424]
  42ccf4:	bl	402bf0 <fputs_unlocked@plt>
  42ccf8:	ldr	x0, [sp, #56]
  42ccfc:	cbz	x0, 42cd58 <ferror@plt+0x2a028>
  42cd00:	stp	x21, x22, [sp, #32]
  42cd04:	mov	x19, #0x0                   	// #0
  42cd08:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42cd0c:	mov	w21, #0xa                   	// #10
  42cd10:	mov	w22, #0xa                   	// #10
  42cd14:	ldr	x1, [x20, #1424]
  42cd18:	ldr	x0, [sp, #48]
  42cd1c:	ldr	x0, [x0, x19, lsl #3]
  42cd20:	bl	402bf0 <fputs_unlocked@plt>
  42cd24:	ldr	x0, [x20, #1424]
  42cd28:	ldr	x1, [x0, #40]
  42cd2c:	ldr	x2, [x0, #48]
  42cd30:	cmp	x1, x2
  42cd34:	b.cs	42cd6c <ferror@plt+0x2a03c>  // b.hs, b.nlast
  42cd38:	add	x2, x1, #0x1
  42cd3c:	str	x2, [x0, #40]
  42cd40:	strb	w21, [x1]
  42cd44:	add	x19, x19, #0x1
  42cd48:	ldr	x0, [sp, #56]
  42cd4c:	cmp	x0, x19
  42cd50:	b.hi	42cd14 <ferror@plt+0x29fe4>  // b.pmore
  42cd54:	ldp	x21, x22, [sp, #32]
  42cd58:	ldr	x0, [sp, #48]
  42cd5c:	bl	402a90 <free@plt>
  42cd60:	ldp	x19, x20, [sp, #16]
  42cd64:	ldp	x29, x30, [sp], #64
  42cd68:	ret
  42cd6c:	mov	w1, w22
  42cd70:	bl	4029a0 <__overflow@plt>
  42cd74:	b	42cd44 <ferror@plt+0x2a014>
  42cd78:	stp	x29, x30, [sp, #-48]!
  42cd7c:	mov	x29, sp
  42cd80:	stp	x19, x20, [sp, #16]
  42cd84:	str	x21, [sp, #32]
  42cd88:	mov	x19, x0
  42cd8c:	mov	x20, x1
  42cd90:	mov	w21, w2
  42cd94:	mov	w3, #0x0                   	// #0
  42cd98:	bl	42ba00 <ferror@plt+0x28cd0>
  42cd9c:	cbz	x0, 42ce14 <ferror@plt+0x2a0e4>
  42cda0:	mov	x2, x0
  42cda4:	mov	w6, #0x0                   	// #0
  42cda8:	mov	w5, #0x0                   	// #0
  42cdac:	mov	w4, w21
  42cdb0:	mov	w3, #0x0                   	// #0
  42cdb4:	mov	x1, x20
  42cdb8:	mov	x0, x19
  42cdbc:	bl	42bb44 <ferror@plt+0x28e14>
  42cdc0:	mov	x20, x0
  42cdc4:	ldr	w1, [x0, #204]
  42cdc8:	mov	w0, #0xffffffff            	// #-1
  42cdcc:	cbnz	w1, 42cdf4 <ferror@plt+0x2a0c4>
  42cdd0:	ldr	w0, [x20, #200]
  42cdd4:	cmn	w0, #0x1
  42cdd8:	b.ne	42ce04 <ferror@plt+0x2a0d4>  // b.any
  42cddc:	ldr	x0, [x19]
  42cde0:	ldr	x0, [x0, #80]
  42cde4:	ldr	x1, [x20, #160]
  42cde8:	ldr	x0, [x0, #160]
  42cdec:	cmp	x1, x0
  42cdf0:	cset	w0, gt
  42cdf4:	ldp	x19, x20, [sp, #16]
  42cdf8:	ldr	x21, [sp, #32]
  42cdfc:	ldp	x29, x30, [sp], #48
  42ce00:	ret
  42ce04:	bl	402940 <close@plt>
  42ce08:	mov	w0, #0xffffffff            	// #-1
  42ce0c:	str	w0, [x20, #200]
  42ce10:	b	42cddc <ferror@plt+0x2a0ac>
  42ce14:	mov	w0, #0xffffffff            	// #-1
  42ce18:	b	42cdf4 <ferror@plt+0x2a0c4>
  42ce1c:	stp	x29, x30, [sp, #-16]!
  42ce20:	mov	x29, sp
  42ce24:	mov	w4, #0x0                   	// #0
  42ce28:	mov	w3, #0x3                   	// #3
  42ce2c:	mov	w2, #0x0                   	// #0
  42ce30:	bl	42c7b4 <ferror@plt+0x29a84>
  42ce34:	ldp	x29, x30, [sp], #16
  42ce38:	ret
  42ce3c:	stp	x29, x30, [sp, #-16]!
  42ce40:	mov	x29, sp
  42ce44:	mov	w4, #0x0                   	// #0
  42ce48:	mov	w3, #0x4                   	// #4
  42ce4c:	mov	w2, #0x1                   	// #1
  42ce50:	bl	42c7b4 <ferror@plt+0x29a84>
  42ce54:	ldp	x29, x30, [sp], #16
  42ce58:	ret
  42ce5c:	mov	x3, x0
  42ce60:	mov	x0, x2
  42ce64:	ldrb	w2, [x3, #440]
  42ce68:	cbz	w2, 42ce74 <ferror@plt+0x2a144>
  42ce6c:	ldr	x2, [x1, #56]
  42ce70:	cbz	x2, 42ce9c <ferror@plt+0x2a16c>
  42ce74:	strb	wzr, [x3, #440]
  42ce78:	cbz	x0, 42ceb8 <ferror@plt+0x2a188>
  42ce7c:	stp	x29, x30, [sp, #-16]!
  42ce80:	mov	x29, sp
  42ce84:	ldr	x2, [x1, #48]
  42ce88:	cmp	x2, x0
  42ce8c:	b.eq	42cea8 <ferror@plt+0x2a178>  // b.none
  42ce90:	bl	402a90 <free@plt>
  42ce94:	ldp	x29, x30, [sp], #16
  42ce98:	ret
  42ce9c:	ldr	x2, [x3, #424]
  42cea0:	str	x2, [x1, #56]
  42cea4:	b	42ce74 <ferror@plt+0x2a144>
  42cea8:	str	xzr, [x1, #48]
  42ceac:	str	xzr, [x1, #40]
  42ceb0:	strb	wzr, [x1, #213]
  42ceb4:	b	42ce90 <ferror@plt+0x2a160>
  42ceb8:	ret
  42cebc:	ldr	x0, [x0]
  42cec0:	ret
  42cec4:	add	x0, x0, #0x48
  42cec8:	ret
  42cecc:	stp	x29, x30, [sp, #-48]!
  42ced0:	mov	x29, sp
  42ced4:	stp	x19, x20, [sp, #16]
  42ced8:	str	x21, [sp, #32]
  42cedc:	mov	x21, x0
  42cee0:	mov	x19, x1
  42cee4:	mov	x20, x2
  42cee8:	str	x1, [x0, #200]
  42ceec:	str	x1, [x0, #208]
  42cef0:	cmp	w3, #0x0
  42cef4:	cset	w0, ne  // ne = any
  42cef8:	strb	w0, [x21, #416]
  42cefc:	cbnz	x1, 42cf1c <ferror@plt+0x2a1ec>
  42cf00:	ldp	x19, x20, [sp, #16]
  42cf04:	ldr	x21, [sp, #32]
  42cf08:	ldp	x29, x30, [sp], #48
  42cf0c:	ret
  42cf10:	str	x20, [x21, #208]
  42cf14:	ldr	x19, [x19]
  42cf18:	cbz	x19, 42cf00 <ferror@plt+0x2a1d0>
  42cf1c:	str	xzr, [x19, #32]
  42cf20:	ldr	x0, [x19, #8]
  42cf24:	bl	402680 <strlen@plt>
  42cf28:	str	w0, [x19, #16]
  42cf2c:	cmp	x20, x19
  42cf30:	b.ne	42cf14 <ferror@plt+0x2a1e4>  // b.any
  42cf34:	b	42cf10 <ferror@plt+0x2a1e0>
  42cf38:	ldr	x0, [x0, #8]
  42cf3c:	ret
  42cf40:	ldr	x0, [x0, #64]
  42cf44:	ret
  42cf48:	ldr	x0, [x0]
  42cf4c:	ret
  42cf50:	ldr	x0, [x0, #80]
  42cf54:	ret
  42cf58:	ldr	x0, [x0, #72]
  42cf5c:	ret
  42cf60:	stp	x29, x30, [sp, #-80]!
  42cf64:	mov	x29, sp
  42cf68:	stp	x19, x20, [sp, #16]
  42cf6c:	stp	x21, x22, [sp, #32]
  42cf70:	stp	x23, x24, [sp, #48]
  42cf74:	stp	x25, x26, [sp, #64]
  42cf78:	mov	x22, x0
  42cf7c:	mov	x23, x1
  42cf80:	ldr	x2, [x0, #280]
  42cf84:	cbz	x2, 42cfc8 <ferror@plt+0x2a298>
  42cf88:	mov	x1, #0x0                   	// #0
  42cf8c:	add	x1, x1, #0x1
  42cf90:	ldr	x2, [x2, #32]
  42cf94:	cbnz	x2, 42cf8c <ferror@plt+0x2a25c>
  42cf98:	lsl	x1, x1, #5
  42cf9c:	add	x1, x1, #0x10
  42cfa0:	mov	x0, #0x1                   	// #1
  42cfa4:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  42cfa8:	mov	x20, x0
  42cfac:	str	xzr, [x0]
  42cfb0:	strb	wzr, [x0, #8]
  42cfb4:	ldr	x19, [x22, #280]
  42cfb8:	cbz	x19, 42d09c <ferror@plt+0x2a36c>
  42cfbc:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x19c60>
  42cfc0:	add	x24, x24, #0xde0
  42cfc4:	b	42d020 <ferror@plt+0x2a2f0>
  42cfc8:	mov	x1, #0x0                   	// #0
  42cfcc:	b	42cf98 <ferror@plt+0x2a268>
  42cfd0:	ldr	w26, [x19, #200]
  42cfd4:	mov	x0, x19
  42cfd8:	bl	42b4d0 <ferror@plt+0x287a0>
  42cfdc:	ands	w25, w0, #0xff
  42cfe0:	b.eq	42d07c <ferror@plt+0x2a34c>  // b.none
  42cfe4:	mov	x1, x24
  42cfe8:	ldr	w0, [x19, #200]
  42cfec:	bl	452f00 <ferror@plt+0x501d0>
  42cff0:	mov	x25, x0
  42cff4:	add	x1, x20, x21, lsl #5
  42cff8:	add	x1, x1, #0x18
  42cffc:	bl	4500a4 <ferror@plt+0x4d374>
  42d000:	mov	x0, x25
  42d004:	bl	4027a0 <fclose@plt>
  42d008:	str	w26, [x19, #200]
  42d00c:	ldr	x0, [x19, #120]
  42d010:	add	x21, x20, x21, lsl #5
  42d014:	str	x0, [x21, #16]
  42d018:	ldr	x19, [x19, #32]
  42d01c:	cbz	x19, 42d09c <ferror@plt+0x2a36c>
  42d020:	ldrb	w2, [x19, #211]
  42d024:	cbnz	w2, 42d018 <ferror@plt+0x2a2e8>
  42d028:	ldr	w0, [x19, #204]
  42d02c:	cbnz	w0, 42d018 <ferror@plt+0x2a2e8>
  42d030:	ldrh	w0, [x19, #208]
  42d034:	cbz	w0, 42d018 <ferror@plt+0x2a2e8>
  42d038:	ldr	x21, [x20]
  42d03c:	add	x0, x21, #0x1
  42d040:	str	x0, [x20]
  42d044:	ldrb	w2, [x19, #210]
  42d048:	add	x0, x20, x0, lsl #5
  42d04c:	strb	w2, [x0, #8]
  42d050:	ldrb	w0, [x20, #8]
  42d054:	orr	w2, w2, w0
  42d058:	strb	w2, [x20, #8]
  42d05c:	ldrb	w0, [x19, #213]
  42d060:	cbz	w0, 42cfd0 <ferror@plt+0x2a2a0>
  42d064:	add	x2, x20, x21, lsl #5
  42d068:	add	x2, x2, #0x18
  42d06c:	ldr	x1, [x19, #120]
  42d070:	ldr	x0, [x19, #40]
  42d074:	bl	450054 <ferror@plt+0x4d324>
  42d078:	b	42d00c <ferror@plt+0x2a2dc>
  42d07c:	mov	w3, #0x0                   	// #0
  42d080:	mov	w2, #0x0                   	// #0
  42d084:	mov	x1, x19
  42d088:	mov	x0, x22
  42d08c:	bl	42b6c0 <ferror@plt+0x28990>
  42d090:	mov	x0, x20
  42d094:	bl	402a90 <free@plt>
  42d098:	b	42d0e0 <ferror@plt+0x2a3b0>
  42d09c:	mov	x0, x20
  42d0a0:	ldr	x19, [x0], #16
  42d0a4:	adrp	x3, 42b000 <ferror@plt+0x282d0>
  42d0a8:	add	x3, x3, #0x7e4
  42d0ac:	mov	x2, #0x20                  	// #32
  42d0b0:	mov	x1, x19
  42d0b4:	bl	402760 <qsort@plt>
  42d0b8:	lsl	x1, x19, #5
  42d0bc:	mov	x3, x23
  42d0c0:	mov	x2, #0x1                   	// #1
  42d0c4:	add	x1, x1, #0x10
  42d0c8:	mov	x0, x20
  42d0cc:	bl	402660 <fwrite_unlocked@plt>
  42d0d0:	cmp	x0, #0x1
  42d0d4:	cset	w25, eq  // eq = none
  42d0d8:	mov	x0, x20
  42d0dc:	bl	402a90 <free@plt>
  42d0e0:	mov	w0, w25
  42d0e4:	ldp	x19, x20, [sp, #16]
  42d0e8:	ldp	x21, x22, [sp, #32]
  42d0ec:	ldp	x23, x24, [sp, #48]
  42d0f0:	ldp	x25, x26, [sp, #64]
  42d0f4:	ldp	x29, x30, [sp], #80
  42d0f8:	ret
  42d0fc:	stp	x29, x30, [sp, #-80]!
  42d100:	mov	x29, sp
  42d104:	str	x19, [sp, #16]
  42d108:	mov	x19, x1
  42d10c:	mov	x3, x1
  42d110:	mov	x2, #0x1                   	// #1
  42d114:	mov	x1, #0x10                  	// #16
  42d118:	add	x0, sp, #0x20
  42d11c:	bl	4029d0 <fread_unlocked@plt>
  42d120:	mov	w1, #0x0                   	// #0
  42d124:	cmp	x0, #0x1
  42d128:	b.eq	42d13c <ferror@plt+0x2a40c>  // b.none
  42d12c:	mov	w0, w1
  42d130:	ldr	x19, [sp, #16]
  42d134:	ldp	x29, x30, [sp], #80
  42d138:	ret
  42d13c:	ldr	x0, [sp, #32]
  42d140:	lsl	x0, x0, #5
  42d144:	add	x0, x0, #0x10
  42d148:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42d14c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42d150:	str	x0, [x1, #2456]
  42d154:	ldp	x2, x3, [sp, #32]
  42d158:	stp	x2, x3, [x0], #16
  42d15c:	mov	x3, x19
  42d160:	ldr	x2, [sp, #32]
  42d164:	mov	x1, #0x20                  	// #32
  42d168:	bl	4029d0 <fread_unlocked@plt>
  42d16c:	ldr	x1, [sp, #32]
  42d170:	cmp	x1, x0
  42d174:	cset	w1, eq  // eq = none
  42d178:	b	42d12c <ferror@plt+0x2a3fc>
  42d17c:	stp	x29, x30, [sp, #-48]!
  42d180:	mov	x29, sp
  42d184:	stp	x19, x20, [sp, #16]
  42d188:	str	x21, [sp, #32]
  42d18c:	mov	x19, x0
  42d190:	mov	x20, x1
  42d194:	mov	w21, w2
  42d198:	bl	42ba00 <ferror@plt+0x28cd0>
  42d19c:	mov	w6, #0x0                   	// #0
  42d1a0:	mov	w5, #0x0                   	// #0
  42d1a4:	mov	w4, w21
  42d1a8:	mov	w3, #0x0                   	// #0
  42d1ac:	mov	x2, x0
  42d1b0:	mov	x1, x20
  42d1b4:	mov	x0, x19
  42d1b8:	bl	42bb44 <ferror@plt+0x28e14>
  42d1bc:	ldr	w0, [x0, #204]
  42d1c0:	cmp	w0, #0x2
  42d1c4:	cset	w0, ne  // ne = any
  42d1c8:	ldp	x19, x20, [sp, #16]
  42d1cc:	ldr	x21, [sp, #32]
  42d1d0:	ldp	x29, x30, [sp], #48
  42d1d4:	ret
  42d1d8:	stp	x29, x30, [sp, #-32]!
  42d1dc:	mov	x29, sp
  42d1e0:	str	x19, [sp, #16]
  42d1e4:	ldr	x19, [x0, #120]
  42d1e8:	ldr	x0, [x19, #752]
  42d1ec:	ldr	x1, [x19, #744]
  42d1f0:	sub	x0, x0, x1
  42d1f4:	cmp	x0, #0x1f
  42d1f8:	b.ls	42d258 <ferror@plt+0x2a528>  // b.plast
  42d1fc:	ldr	x2, [x19, #744]
  42d200:	add	x2, x2, #0x20
  42d204:	ldr	x0, [x19, #736]
  42d208:	cmp	x2, x0
  42d20c:	b.eq	42d268 <ferror@plt+0x2a538>  // b.none
  42d210:	ldr	x1, [x19, #768]
  42d214:	add	x2, x2, x1
  42d218:	bic	x1, x2, x1
  42d21c:	str	x1, [x19, #744]
  42d220:	ldr	x2, [x19, #728]
  42d224:	ldr	x3, [x19, #752]
  42d228:	sub	x1, x1, x2
  42d22c:	sub	x2, x3, x2
  42d230:	cmp	x1, x2
  42d234:	b.ls	42d23c <ferror@plt+0x2a50c>  // b.plast
  42d238:	str	x3, [x19, #744]
  42d23c:	ldr	x1, [x19, #744]
  42d240:	str	x1, [x19, #736]
  42d244:	stp	xzr, xzr, [x0]
  42d248:	stp	xzr, xzr, [x0, #16]
  42d24c:	ldr	x19, [sp, #16]
  42d250:	ldp	x29, x30, [sp], #32
  42d254:	ret
  42d258:	mov	x1, #0x20                  	// #32
  42d25c:	add	x0, x19, #0x2d0
  42d260:	bl	4541c8 <_obstack_newchunk@@Base>
  42d264:	b	42d1fc <ferror@plt+0x2a4cc>
  42d268:	ldrb	w1, [x19, #800]
  42d26c:	orr	w1, w1, #0x2
  42d270:	strb	w1, [x19, #800]
  42d274:	b	42d210 <ferror@plt+0x2a4e0>
  42d278:	stp	x29, x30, [sp, #-32]!
  42d27c:	mov	x29, sp
  42d280:	str	x19, [sp, #16]
  42d284:	mov	x19, x0
  42d288:	ldrb	w0, [x0, #1304]
  42d28c:	cbnz	w0, 42d29c <ferror@plt+0x2a56c>
  42d290:	ldr	x19, [sp, #16]
  42d294:	ldp	x29, x30, [sp], #32
  42d298:	ret
  42d29c:	ldr	x0, [x19, #1088]
  42d2a0:	bl	439a7c <ferror@plt+0x36d4c>
  42d2a4:	mov	x1, #0x0                   	// #0
  42d2a8:	add	x0, x19, #0x2d0
  42d2ac:	bl	454320 <_obstack_free@@Base>
  42d2b0:	b	42d290 <ferror@plt+0x2a560>
  42d2b4:	stp	x29, x30, [sp, #-16]!
  42d2b8:	mov	x29, sp
  42d2bc:	mov	w3, #0x1                   	// #1
  42d2c0:	mov	w2, w2
  42d2c4:	ldr	x0, [x0, #1088]
  42d2c8:	bl	439dcc <ferror@plt+0x3709c>
  42d2cc:	ldp	x29, x30, [sp], #16
  42d2d0:	ret
  42d2d4:	stp	x29, x30, [sp, #-32]!
  42d2d8:	mov	x29, sp
  42d2dc:	stp	x19, x20, [sp, #16]
  42d2e0:	mov	x19, x0
  42d2e4:	mov	x20, x1
  42d2e8:	cbz	x1, 42d3d0 <ferror@plt+0x2a6a0>
  42d2ec:	str	x19, [x20, #120]
  42d2f0:	str	x20, [x19, #1088]
  42d2f4:	mov	x0, x19
  42d2f8:	bl	426794 <ferror@plt+0x23a64>
  42d2fc:	mov	x0, x19
  42d300:	bl	425990 <ferror@plt+0x22c60>
  42d304:	mov	w2, #0x7                   	// #7
  42d308:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d30c:	add	x1, x1, #0x428
  42d310:	mov	x0, x19
  42d314:	bl	42d2b4 <ferror@plt+0x2a584>
  42d318:	str	x0, [x19, #1248]
  42d31c:	mov	w2, #0x4                   	// #4
  42d320:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  42d324:	add	x1, x1, #0xe18
  42d328:	mov	x0, x19
  42d32c:	bl	42d2b4 <ferror@plt+0x2a584>
  42d330:	str	x0, [x19, #1256]
  42d334:	mov	w2, #0x5                   	// #5
  42d338:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  42d33c:	add	x1, x1, #0xe20
  42d340:	mov	x0, x19
  42d344:	bl	42d2b4 <ferror@plt+0x2a584>
  42d348:	str	x0, [x19, #1264]
  42d34c:	mov	w2, #0xb                   	// #11
  42d350:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d354:	add	x1, x1, #0x430
  42d358:	mov	x0, x19
  42d35c:	bl	42d2b4 <ferror@plt+0x2a584>
  42d360:	str	x0, [x19, #1272]
  42d364:	ldrh	w1, [x0, #18]
  42d368:	orr	w1, w1, #0x10
  42d36c:	strh	w1, [x0, #18]
  42d370:	mov	w2, #0xa                   	// #10
  42d374:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d378:	add	x1, x1, #0x440
  42d37c:	mov	x0, x19
  42d380:	bl	42d2b4 <ferror@plt+0x2a584>
  42d384:	str	x0, [x19, #1280]
  42d388:	ldrh	w1, [x0, #18]
  42d38c:	orr	w1, w1, #0x10
  42d390:	strh	w1, [x0, #18]
  42d394:	mov	w2, #0xf                   	// #15
  42d398:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d39c:	add	x1, x1, #0x450
  42d3a0:	mov	x0, x19
  42d3a4:	bl	42d2b4 <ferror@plt+0x2a584>
  42d3a8:	str	x0, [x19, #1288]
  42d3ac:	mov	w2, #0x14                  	// #20
  42d3b0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d3b4:	add	x1, x1, #0x460
  42d3b8:	mov	x0, x19
  42d3bc:	bl	42d2b4 <ferror@plt+0x2a584>
  42d3c0:	str	x0, [x19, #1296]
  42d3c4:	ldp	x19, x20, [sp, #16]
  42d3c8:	ldp	x29, x30, [sp], #32
  42d3cc:	ret
  42d3d0:	mov	w0, #0x1                   	// #1
  42d3d4:	strb	w0, [x19, #1304]
  42d3d8:	mov	w0, #0xd                   	// #13
  42d3dc:	bl	439a08 <ferror@plt+0x36cd8>
  42d3e0:	mov	x20, x0
  42d3e4:	adrp	x0, 42d000 <ferror@plt+0x2a2d0>
  42d3e8:	add	x0, x0, #0x1d8
  42d3ec:	str	x0, [x20, #96]
  42d3f0:	adrp	x4, 402000 <_ZGTtnam@plt-0x610>
  42d3f4:	add	x4, x4, #0xa90
  42d3f8:	adrp	x3, 454000 <ferror@plt+0x512d0>
  42d3fc:	add	x3, x3, #0xd38
  42d400:	mov	x2, #0x0                   	// #0
  42d404:	mov	x1, #0x0                   	// #0
  42d408:	add	x0, x19, #0x2d0
  42d40c:	bl	454174 <_obstack_begin@@Base>
  42d410:	b	42d2ec <ferror@plt+0x2a5bc>
  42d414:	stp	x29, x30, [sp, #-16]!
  42d418:	mov	x29, sp
  42d41c:	mov	w3, #0x0                   	// #0
  42d420:	sxtw	x2, w2
  42d424:	ldr	x0, [x0, #1088]
  42d428:	bl	439dcc <ferror@plt+0x3709c>
  42d42c:	cbz	x0, 42d440 <ferror@plt+0x2a710>
  42d430:	ldrb	w0, [x0, #18]
  42d434:	ubfx	x0, x0, #1, #1
  42d438:	ldp	x29, x30, [sp], #16
  42d43c:	ret
  42d440:	mov	w0, #0x0                   	// #0
  42d444:	b	42d438 <ferror@plt+0x2a708>
  42d448:	stp	x29, x30, [sp, #-16]!
  42d44c:	mov	x29, sp
  42d450:	ldr	x0, [x0, #1088]
  42d454:	bl	439e1c <ferror@plt+0x370ec>
  42d458:	ldp	x29, x30, [sp], #16
  42d45c:	ret
  42d460:	stp	x29, x30, [sp, #-48]!
  42d464:	mov	x29, sp
  42d468:	stp	x19, x20, [sp, #16]
  42d46c:	str	x21, [sp, #32]
  42d470:	mov	x19, x0
  42d474:	mov	x21, x1
  42d478:	mov	w20, w2
  42d47c:	ldr	w0, [x0, #64]
  42d480:	ldr	w1, [x19, #60]
  42d484:	cmp	w1, w0
  42d488:	b.eq	42d4c8 <ferror@plt+0x2a798>  // b.none
  42d48c:	ldr	w0, [x19, #60]
  42d490:	ldr	x1, [x19, #48]
  42d494:	lsl	x0, x0, #4
  42d498:	str	x21, [x1, x0]
  42d49c:	ldr	w0, [x19, #60]
  42d4a0:	ldr	x1, [x19, #48]
  42d4a4:	add	x0, x1, x0, lsl #4
  42d4a8:	str	w20, [x0, #8]
  42d4ac:	ldr	w0, [x19, #60]
  42d4b0:	add	w0, w0, #0x1
  42d4b4:	str	w0, [x19, #60]
  42d4b8:	ldp	x19, x20, [sp, #16]
  42d4bc:	ldr	x21, [sp, #32]
  42d4c0:	ldp	x29, x30, [sp], #48
  42d4c4:	ret
  42d4c8:	add	w0, w0, #0x64
  42d4cc:	lsl	w0, w0, #1
  42d4d0:	str	w0, [x19, #64]
  42d4d4:	mov	w0, w0
  42d4d8:	lsl	x1, x0, #4
  42d4dc:	ldr	x0, [x19, #48]
  42d4e0:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42d4e4:	str	x0, [x19, #48]
  42d4e8:	b	42d48c <ferror@plt+0x2a75c>
  42d4ec:	ldrb	w6, [x1]
  42d4f0:	tbz	w6, #7, 42d5b8 <ferror@plt+0x2a888>
  42d4f4:	mov	w2, w6
  42d4f8:	mov	w4, #0x0                   	// #0
  42d4fc:	mov	w5, w4
  42d500:	add	w4, w4, #0x1
  42d504:	lsl	w2, w2, #1
  42d508:	tbnz	w2, #7, 42d4fc <ferror@plt+0x2a7cc>
  42d50c:	mov	w3, #0x7f                  	// #127
  42d510:	asr	w3, w3, w4
  42d514:	and	w3, w3, w6
  42d518:	sxtw	x3, w3
  42d51c:	cmp	w4, #0x1
  42d520:	b.le	42d554 <ferror@plt+0x2a824>
  42d524:	mov	x2, #0x0                   	// #0
  42d528:	add	x6, x1, #0x1
  42d52c:	ldrb	w1, [x6, x2]
  42d530:	mov	x7, x1
  42d534:	bfi	x7, x3, #6, #58
  42d538:	mov	x3, x7
  42d53c:	and	w1, w1, #0xffffffc0
  42d540:	cmp	w1, #0x80
  42d544:	b.ne	42d598 <ferror@plt+0x2a868>  // b.any
  42d548:	add	x2, x2, #0x1
  42d54c:	cmp	w5, w2
  42d550:	b.gt	42d52c <ferror@plt+0x2a7fc>
  42d554:	mov	w1, #0x5c                  	// #92
  42d558:	strb	w1, [x0]
  42d55c:	mov	w1, #0x55                  	// #85
  42d560:	strb	w1, [x0, #1]
  42d564:	add	x0, x0, #0x2
  42d568:	mov	w1, #0x1c                  	// #28
  42d56c:	adrp	x5, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d570:	add	x5, x5, #0x4a0
  42d574:	lsr	x2, x3, x1
  42d578:	and	x2, x2, #0xf
  42d57c:	ldrb	w2, [x5, x2]
  42d580:	strb	w2, [x0], #1
  42d584:	sub	w1, w1, #0x4
  42d588:	cmn	w1, #0x4
  42d58c:	b.ne	42d574 <ferror@plt+0x2a844>  // b.any
  42d590:	sxtw	x0, w4
  42d594:	ret
  42d598:	stp	x29, x30, [sp, #-16]!
  42d59c:	mov	x29, sp
  42d5a0:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d5a4:	add	x2, x2, #0x478
  42d5a8:	mov	w1, #0xc89                 	// #3209
  42d5ac:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d5b0:	add	x0, x0, #0x488
  42d5b4:	bl	4102b4 <ferror@plt+0xd584>
  42d5b8:	and	x3, x6, #0x7f
  42d5bc:	mov	w4, #0x0                   	// #0
  42d5c0:	b	42d554 <ferror@plt+0x2a824>
  42d5c4:	ldrb	w3, [x1]
  42d5c8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d5cc:	add	x2, x2, #0x28
  42d5d0:	ldrh	w2, [x2, w3, sxtw #1]
  42d5d4:	tbz	w2, #9, 42d65c <ferror@plt+0x2a92c>
  42d5d8:	stp	x29, x30, [sp, #-16]!
  42d5dc:	mov	x29, sp
  42d5e0:	sub	w3, w3, #0x71
  42d5e4:	add	x2, x1, #0x1
  42d5e8:	ldrb	w4, [x1, #1]
  42d5ec:	adrp	x5, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d5f0:	add	x5, x5, #0x28
  42d5f4:	ldrh	w5, [x5, w4, sxtw #1]
  42d5f8:	mov	w6, #0x204                 	// #516
  42d5fc:	tst	w6, w5
  42d600:	b.eq	42d62c <ferror@plt+0x2a8fc>  // b.none
  42d604:	mov	w8, #0x43                  	// #67
  42d608:	adrp	x6, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d60c:	add	x6, x6, #0x28
  42d610:	mov	w7, #0x204                 	// #516
  42d614:	madd	w3, w3, w8, w4
  42d618:	sub	w3, w3, #0x71
  42d61c:	ldrb	w4, [x2, #1]!
  42d620:	ldrh	w5, [x6, w4, sxtw #1]
  42d624:	tst	w7, w5
  42d628:	b.ne	42d614 <ferror@plt+0x2a8e4>  // b.any
  42d62c:	sub	x2, x2, x1
  42d630:	mov	w4, #0x0                   	// #0
  42d634:	add	w3, w3, w2
  42d638:	ldr	x0, [x0, #1088]
  42d63c:	bl	439abc <ferror@plt+0x36d8c>
  42d640:	mov	x1, x0
  42d644:	mov	w0, #0x0                   	// #0
  42d648:	cbz	x1, 42d654 <ferror@plt+0x2a924>
  42d64c:	ldrb	w0, [x1, #18]
  42d650:	ubfx	x0, x0, #1, #1
  42d654:	ldp	x29, x30, [sp], #16
  42d658:	ret
  42d65c:	mov	w0, #0x0                   	// #0
  42d660:	ret
  42d664:	stp	x29, x30, [sp, #-16]!
  42d668:	mov	x29, sp
  42d66c:	ldrb	w1, [x0, #1154]
  42d670:	cbz	w1, 42d6a0 <ferror@plt+0x2a970>
  42d674:	ldrb	w1, [x0, #1167]
  42d678:	cbnz	w1, 42d6a0 <ferror@plt+0x2a970>
  42d67c:	ldr	x1, [x0]
  42d680:	cbz	x1, 42d68c <ferror@plt+0x2a95c>
  42d684:	ldrb	w1, [x1, #106]
  42d688:	cbnz	w1, 42d6a8 <ferror@plt+0x2a978>
  42d68c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d690:	add	x2, x2, #0x4b8
  42d694:	mov	w1, #0x2                   	// #2
  42d698:	bl	426a10 <ferror@plt+0x23ce0>
  42d69c:	b	42d6a8 <ferror@plt+0x2a978>
  42d6a0:	ldrb	w1, [x0, #22]
  42d6a4:	cbz	w1, 42d6b0 <ferror@plt+0x2a980>
  42d6a8:	ldp	x29, x30, [sp], #16
  42d6ac:	ret
  42d6b0:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d6b4:	add	x2, x2, #0x4e0
  42d6b8:	mov	w1, #0x2                   	// #2
  42d6bc:	bl	426a10 <ferror@plt+0x23ce0>
  42d6c0:	b	42d6a8 <ferror@plt+0x2a978>
  42d6c4:	stp	x29, x30, [sp, #-48]!
  42d6c8:	mov	x29, sp
  42d6cc:	str	x19, [sp, #16]
  42d6d0:	mov	x8, x0
  42d6d4:	ldr	x19, [x0]
  42d6d8:	ldr	x3, [x19]
  42d6dc:	ldrb	w4, [x3]
  42d6e0:	cmp	w4, #0x24
  42d6e4:	b.eq	42d70c <ferror@plt+0x2a9dc>  // b.none
  42d6e8:	ldrb	w0, [x0, #1147]
  42d6ec:	cmp	w0, #0x0
  42d6f0:	cset	w0, ne  // ne = any
  42d6f4:	cmp	w4, #0x5c
  42d6f8:	csel	w0, w0, wzr, eq  // eq = none
  42d6fc:	cbnz	w0, 42d754 <ferror@plt+0x2aa24>
  42d700:	ldr	x19, [sp, #16]
  42d704:	ldp	x29, x30, [sp], #48
  42d708:	ret
  42d70c:	ldrb	w1, [x0, #1146]
  42d710:	mov	w0, #0x0                   	// #0
  42d714:	cbz	w1, 42d700 <ferror@plt+0x2a9d0>
  42d718:	add	x3, x3, #0x1
  42d71c:	str	x3, [x19]
  42d720:	ldrb	w1, [x8, #1148]
  42d724:	mov	w0, #0x1                   	// #1
  42d728:	cbz	w1, 42d700 <ferror@plt+0x2a9d0>
  42d72c:	ldrb	w1, [x8, #18]
  42d730:	cbnz	w1, 42d700 <ferror@plt+0x2a9d0>
  42d734:	strb	wzr, [x8, #1148]
  42d738:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x1cc60>
  42d73c:	add	x2, x2, #0xc38
  42d740:	mov	w1, #0x2                   	// #2
  42d744:	mov	x0, x8
  42d748:	bl	426a10 <ferror@plt+0x23ce0>
  42d74c:	mov	w0, #0x1                   	// #1
  42d750:	b	42d700 <ferror@plt+0x2a9d0>
  42d754:	ldrb	w4, [x3, #1]
  42d758:	and	w4, w4, #0xffffffdf
  42d75c:	and	w4, w4, #0xff
  42d760:	mov	w0, #0x0                   	// #0
  42d764:	cmp	w4, #0x55
  42d768:	b.ne	42d700 <ferror@plt+0x2a9d0>  // b.any
  42d76c:	add	x3, x3, #0x2
  42d770:	str	x3, [x19]
  42d774:	cmp	w1, #0x0
  42d778:	cset	w3, eq  // eq = none
  42d77c:	mov	x7, #0x0                   	// #0
  42d780:	mov	x6, #0x0                   	// #0
  42d784:	add	x5, sp, #0x2c
  42d788:	mov	x4, x2
  42d78c:	add	w3, w3, #0x1
  42d790:	ldr	x2, [x19, #32]
  42d794:	mov	x1, x19
  42d798:	mov	x0, x8
  42d79c:	bl	41fff0 <ferror@plt+0x1d2c0>
  42d7a0:	ands	w0, w0, #0xff
  42d7a4:	b.ne	42d700 <ferror@plt+0x2a9d0>  // b.any
  42d7a8:	ldr	x1, [x19]
  42d7ac:	sub	x1, x1, #0x2
  42d7b0:	str	x1, [x19]
  42d7b4:	b	42d700 <ferror@plt+0x2a9d0>
  42d7b8:	stp	x29, x30, [sp, #-64]!
  42d7bc:	mov	x29, sp
  42d7c0:	stp	x19, x20, [sp, #16]
  42d7c4:	stp	x21, x22, [sp, #32]
  42d7c8:	stp	x23, x24, [sp, #48]
  42d7cc:	mov	x19, x0
  42d7d0:	mov	x23, x1
  42d7d4:	mov	x20, x3
  42d7d8:	mov	x24, x4
  42d7dc:	ldr	x0, [x0]
  42d7e0:	ldr	x21, [x0]
  42d7e4:	tst	w2, #0xff
  42d7e8:	b.ne	42d864 <ferror@plt+0x2ab34>  // b.any
  42d7ec:	ldrb	w0, [x1]
  42d7f0:	sub	w22, w0, #0x71
  42d7f4:	ldrb	w0, [x21]
  42d7f8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d7fc:	add	x1, x1, #0x28
  42d800:	ldrh	w1, [x1, w0, sxtw #1]
  42d804:	mov	w2, #0x204                 	// #516
  42d808:	tst	w2, w1
  42d80c:	b.eq	42d838 <ferror@plt+0x2ab08>  // b.none
  42d810:	mov	w4, #0x43                  	// #67
  42d814:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d818:	add	x2, x2, #0x28
  42d81c:	mov	w3, #0x204                 	// #516
  42d820:	madd	w0, w22, w4, w0
  42d824:	sub	w22, w0, #0x71
  42d828:	ldrb	w0, [x21, #1]!
  42d82c:	ldrh	w1, [x2, w0, sxtw #1]
  42d830:	tst	w3, w1
  42d834:	b.ne	42d820 <ferror@plt+0x2aaf0>  // b.any
  42d838:	ldurb	w0, [x21, #-1]
  42d83c:	str	w0, [x20]
  42d840:	strb	wzr, [x20, #4]
  42d844:	ldr	x0, [x19]
  42d848:	str	x21, [x0]
  42d84c:	mov	x2, x20
  42d850:	mov	w1, #0x0                   	// #0
  42d854:	mov	x0, x19
  42d858:	bl	42d6c4 <ferror@plt+0x2a994>
  42d85c:	and	w0, w0, #0xff
  42d860:	cbz	w0, 42d874 <ferror@plt+0x2ab44>
  42d864:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42d868:	add	x21, x21, #0x28
  42d86c:	mov	w22, #0x204                 	// #516
  42d870:	b	42d8b4 <ferror@plt+0x2ab84>
  42d874:	sub	x3, x21, x23
  42d878:	mov	w4, #0x1                   	// #1
  42d87c:	add	w3, w22, w3
  42d880:	sub	w2, w21, w23
  42d884:	mov	x1, x23
  42d888:	ldr	x0, [x19, #1088]
  42d88c:	bl	439abc <ferror@plt+0x36d8c>
  42d890:	mov	x20, x0
  42d894:	str	x0, [x24]
  42d898:	b	42d91c <ferror@plt+0x2abec>
  42d89c:	str	w0, [x20]
  42d8a0:	strb	wzr, [x20, #4]
  42d8a4:	ldr	x1, [x19]
  42d8a8:	ldr	x0, [x1]
  42d8ac:	add	x0, x0, #0x1
  42d8b0:	str	x0, [x1]
  42d8b4:	ldr	x0, [x19]
  42d8b8:	ldr	x0, [x0]
  42d8bc:	ldrb	w0, [x0]
  42d8c0:	ldrh	w1, [x21, w0, sxtw #1]
  42d8c4:	tst	w22, w1
  42d8c8:	b.ne	42d89c <ferror@plt+0x2ab6c>  // b.any
  42d8cc:	mov	x2, x20
  42d8d0:	mov	w1, #0x0                   	// #0
  42d8d4:	mov	x0, x19
  42d8d8:	bl	42d6c4 <ferror@plt+0x2a994>
  42d8dc:	and	w0, w0, #0xff
  42d8e0:	cbnz	w0, 42d8b4 <ferror@plt+0x2ab84>
  42d8e4:	ldr	x0, [x19]
  42d8e8:	ldr	x2, [x0]
  42d8ec:	sub	x2, x2, x23
  42d8f0:	mov	x1, x23
  42d8f4:	mov	x0, x19
  42d8f8:	bl	41fb40 <ferror@plt+0x1ce10>
  42d8fc:	mov	x20, x0
  42d900:	ldr	x0, [x19]
  42d904:	ldr	x2, [x0]
  42d908:	sub	w2, w2, w23
  42d90c:	mov	x1, x23
  42d910:	mov	x0, x19
  42d914:	bl	42d2b4 <ferror@plt+0x2a584>
  42d918:	str	x0, [x24]
  42d91c:	ldrh	w0, [x20, #18]
  42d920:	ubfx	x1, x0, #2, #8
  42d924:	tbnz	w0, #4, 42d940 <ferror@plt+0x2ac10>
  42d928:	mov	x0, x20
  42d92c:	ldp	x19, x20, [sp, #16]
  42d930:	ldp	x21, x22, [sp, #32]
  42d934:	ldp	x23, x24, [sp, #48]
  42d938:	ldp	x29, x30, [sp], #64
  42d93c:	ret
  42d940:	ldrb	w0, [x19, #18]
  42d944:	cbnz	w0, 42d928 <ferror@plt+0x2abf8>
  42d948:	tbz	w1, #1, 42d954 <ferror@plt+0x2ac24>
  42d94c:	ldrb	w0, [x19, #23]
  42d950:	cbz	w0, 42d990 <ferror@plt+0x2ac60>
  42d954:	ldr	x0, [x19, #1272]
  42d958:	cmp	x0, x20
  42d95c:	b.eq	42d9ac <ferror@plt+0x2ac7c>  // b.none
  42d960:	ldr	x0, [x19, #1280]
  42d964:	cmp	x0, x20
  42d968:	b.eq	42d9ec <ferror@plt+0x2acbc>  // b.none
  42d96c:	ldrh	w0, [x20, #18]
  42d970:	tbz	w0, #9, 42d928 <ferror@plt+0x2abf8>
  42d974:	ldr	x3, [x20]
  42d978:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d97c:	add	x2, x2, #0x5d8
  42d980:	mov	w1, #0xf                   	// #15
  42d984:	mov	x0, x19
  42d988:	bl	426a88 <ferror@plt+0x23d58>
  42d98c:	b	42d928 <ferror@plt+0x2abf8>
  42d990:	ldr	x3, [x20]
  42d994:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d998:	add	x2, x2, #0x528
  42d99c:	mov	w1, #0x3                   	// #3
  42d9a0:	mov	x0, x19
  42d9a4:	bl	426a10 <ferror@plt+0x23ce0>
  42d9a8:	b	42d954 <ferror@plt+0x2ac24>
  42d9ac:	ldrb	w0, [x19, #22]
  42d9b0:	cbnz	w0, 42d960 <ferror@plt+0x2ac30>
  42d9b4:	ldrb	w0, [x19, #1120]
  42d9b8:	cbz	w0, 42d9d4 <ferror@plt+0x2aca4>
  42d9bc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d9c0:	add	x2, x2, #0x548
  42d9c4:	mov	w1, #0x2                   	// #2
  42d9c8:	mov	x0, x19
  42d9cc:	bl	426a10 <ferror@plt+0x23ce0>
  42d9d0:	b	42d960 <ferror@plt+0x2ac30>
  42d9d4:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42d9d8:	add	x2, x2, #0x590
  42d9dc:	mov	w1, #0x2                   	// #2
  42d9e0:	mov	x0, x19
  42d9e4:	bl	426a10 <ferror@plt+0x23ce0>
  42d9e8:	b	42d960 <ferror@plt+0x2ac30>
  42d9ec:	mov	x0, x19
  42d9f0:	bl	42d664 <ferror@plt+0x2a934>
  42d9f4:	b	42d96c <ferror@plt+0x2ac3c>
  42d9f8:	ldrb	w2, [x0, #4]
  42d9fc:	cmp	w2, #0x35
  42da00:	b.ne	42da28 <ferror@plt+0x2acf8>  // b.any
  42da04:	stp	x29, x30, [sp, #-16]!
  42da08:	mov	x29, sp
  42da0c:	ldr	x0, [x0, #8]
  42da10:	ldr	x0, [x0]
  42da14:	bl	402a20 <strcmp@plt>
  42da18:	cmp	w0, #0x0
  42da1c:	cset	w0, eq  // eq = none
  42da20:	ldp	x29, x30, [sp], #16
  42da24:	ret
  42da28:	mov	w0, #0x0                   	// #0
  42da2c:	ret
  42da30:	ret
  42da34:	stp	x29, x30, [sp, #-96]!
  42da38:	mov	x29, sp
  42da3c:	stp	x19, x20, [sp, #16]
  42da40:	stp	x21, x22, [sp, #32]
  42da44:	stp	x23, x24, [sp, #48]
  42da48:	mov	x23, x0
  42da4c:	ldr	x20, [x0]
  42da50:	str	wzr, [x20, #60]
  42da54:	str	wzr, [x20, #56]
  42da58:	ldr	x19, [x20, #16]
  42da5c:	str	x19, [x20, #8]
  42da60:	str	x19, [x20]
  42da64:	strb	wzr, [x20, #104]
  42da68:	ldrb	w0, [x20, #105]
  42da6c:	tbnz	w0, #1, 42de3c <ferror@plt+0x2b10c>
  42da70:	mov	x24, #0x0                   	// #0
  42da74:	mov	x22, #0x1000                	// #4096
  42da78:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42da7c:	add	x21, x21, #0x9b0
  42da80:	mov	x3, x19
  42da84:	and	x1, x19, #0xfffffffffffffff0
  42da88:	and	x0, x19, #0xfff
  42da8c:	sub	x0, x22, x0
  42da90:	cmp	x0, #0xf
  42da94:	b.ls	42dbac <ferror@plt+0x2ae7c>  // b.plast
  42da98:	ldr	q1, [x19]
  42da9c:	movi	v0.16b, #0xa
  42daa0:	cmeq	v0.16b, v1.16b, v0.16b
  42daa4:	movi	v2.16b, #0xd
  42daa8:	cmeq	v2.16b, v1.16b, v2.16b
  42daac:	orr	v0.16b, v0.16b, v2.16b
  42dab0:	movi	v2.16b, #0x5c
  42dab4:	cmeq	v2.16b, v1.16b, v2.16b
  42dab8:	orr	v0.16b, v0.16b, v2.16b
  42dabc:	movi	v2.16b, #0x3f
  42dac0:	cmeq	v1.16b, v1.16b, v2.16b
  42dac4:	orr	v0.16b, v0.16b, v1.16b
  42dac8:	addp	d1, v0.2d
  42dacc:	fmov	x0, d1
  42dad0:	cbnz	x0, 42db10 <ferror@plt+0x2ade0>
  42dad4:	movi	v6.16b, #0xa
  42dad8:	movi	v5.16b, #0xd
  42dadc:	movi	v4.16b, #0x5c
  42dae0:	movi	v3.16b, #0x3f
  42dae4:	ldr	q1, [x1, #16]!
  42dae8:	cmeq	v0.16b, v1.16b, v6.16b
  42daec:	cmeq	v2.16b, v1.16b, v5.16b
  42daf0:	orr	v0.16b, v0.16b, v2.16b
  42daf4:	cmeq	v2.16b, v1.16b, v4.16b
  42daf8:	orr	v0.16b, v0.16b, v2.16b
  42dafc:	cmeq	v1.16b, v1.16b, v3.16b
  42db00:	orr	v0.16b, v0.16b, v1.16b
  42db04:	addp	d1, v0.2d
  42db08:	fmov	x2, d1
  42db0c:	cbz	x2, 42dae4 <ferror@plt+0x2adb4>
  42db10:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  42db14:	ldr	q1, [x0, #1184]
  42db18:	and	v0.16b, v0.16b, v1.16b
  42db1c:	uaddlp	v0.8h, v0.16b
  42db20:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  42db24:	ldr	q1, [x0, #1200]
  42db28:	ushl	v0.8h, v0.8h, v1.8h
  42db2c:	addv	h0, v0.8h
  42db30:	umov	w2, v0.h[0]
  42db34:	cmp	x1, x3
  42db38:	csel	x19, x19, x1, cc  // cc = lo, ul, last
  42db3c:	rbit	w2, w2
  42db40:	clz	w2, w2
  42db44:	add	x19, x19, w2, sxtw
  42db48:	ldrb	w0, [x19]
  42db4c:	cmp	w0, #0x5c
  42db50:	b.eq	42dc24 <ferror@plt+0x2aef4>  // b.none
  42db54:	cmp	w0, #0x3f
  42db58:	b.eq	42dc30 <ferror@plt+0x2af00>  // b.none
  42db5c:	ldr	x1, [x20, #32]
  42db60:	cmp	x1, x19
  42db64:	b.eq	42de84 <ferror@plt+0x2b154>  // b.none
  42db68:	mov	x22, x19
  42db6c:	cmp	w0, #0xd
  42db70:	b.eq	42dc8c <ferror@plt+0x2af5c>  // b.none
  42db74:	cbnz	x24, 42dca8 <ferror@plt+0x2af78>
  42db78:	mov	x1, x19
  42db7c:	mov	w0, #0xa                   	// #10
  42db80:	strb	w0, [x1], #1
  42db84:	mov	w2, #0xa                   	// #10
  42db88:	mov	x0, x20
  42db8c:	bl	42d460 <ferror@plt+0x2a730>
  42db90:	add	x22, x22, #0x1
  42db94:	str	x22, [x20, #16]
  42db98:	ldp	x19, x20, [sp, #16]
  42db9c:	ldp	x21, x22, [sp, #32]
  42dba0:	ldp	x23, x24, [sp, #48]
  42dba4:	ldp	x29, x30, [sp], #96
  42dba8:	ret
  42dbac:	ldr	q1, [x1]
  42dbb0:	movi	v0.16b, #0xa
  42dbb4:	cmeq	v0.16b, v1.16b, v0.16b
  42dbb8:	movi	v2.16b, #0xd
  42dbbc:	cmeq	v2.16b, v1.16b, v2.16b
  42dbc0:	orr	v0.16b, v0.16b, v2.16b
  42dbc4:	movi	v2.16b, #0x5c
  42dbc8:	cmeq	v2.16b, v1.16b, v2.16b
  42dbcc:	orr	v0.16b, v0.16b, v2.16b
  42dbd0:	movi	v2.16b, #0x3f
  42dbd4:	cmeq	v1.16b, v1.16b, v2.16b
  42dbd8:	orr	v0.16b, v0.16b, v1.16b
  42dbdc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  42dbe0:	ldr	q1, [x0, #1184]
  42dbe4:	and	v0.16b, v0.16b, v1.16b
  42dbe8:	uaddlp	v0.8h, v0.16b
  42dbec:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  42dbf0:	ldr	q1, [x0, #1200]
  42dbf4:	ushl	v0.8h, v0.8h, v1.8h
  42dbf8:	addv	h0, v0.8h
  42dbfc:	and	w0, w19, #0xf
  42dc00:	mov	w2, #0xffffffff            	// #-1
  42dc04:	lsl	w2, w2, w0
  42dc08:	umov	w0, v0.h[0]
  42dc0c:	ands	w0, w2, w0
  42dc10:	b.eq	42dad4 <ferror@plt+0x2ada4>  // b.none
  42dc14:	rbit	w0, w0
  42dc18:	clz	w0, w0
  42dc1c:	add	x19, x1, w0, sxtw
  42dc20:	b	42db48 <ferror@plt+0x2ae18>
  42dc24:	mov	x24, x19
  42dc28:	add	x19, x19, #0x1
  42dc2c:	b	42da80 <ferror@plt+0x2ad50>
  42dc30:	ldrb	w0, [x19, #1]
  42dc34:	cmp	w0, #0x3f
  42dc38:	b.eq	42dc44 <ferror@plt+0x2af14>  // b.none
  42dc3c:	add	x19, x19, #0x1
  42dc40:	b	42da80 <ferror@plt+0x2ad50>
  42dc44:	ldrb	w2, [x19, #2]
  42dc48:	ldrb	w0, [x21, w2, sxtw]
  42dc4c:	cbz	w0, 42dc3c <ferror@plt+0x2af0c>
  42dc50:	mov	x1, x19
  42dc54:	mov	x0, x20
  42dc58:	bl	42d460 <ferror@plt+0x2a730>
  42dc5c:	ldrb	w0, [x23, #1125]
  42dc60:	cbz	w0, 42dc3c <ferror@plt+0x2af0c>
  42dc64:	stp	x25, x26, [sp, #64]
  42dc68:	str	x27, [sp, #80]
  42dc6c:	ldrb	w1, [x19, #2]
  42dc70:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42dc74:	add	x0, x0, #0x9b0
  42dc78:	ldrb	w0, [x0, x1]
  42dc7c:	mov	x27, x19
  42dc80:	strb	w0, [x27], #2
  42dc84:	mov	x21, x19
  42dc88:	b	42dd18 <ferror@plt+0x2afe8>
  42dc8c:	ldrb	w0, [x19, #1]
  42dc90:	cmp	w0, #0xa
  42dc94:	b.ne	42db74 <ferror@plt+0x2ae44>  // b.any
  42dc98:	add	x22, x19, #0x1
  42dc9c:	cmp	x1, x22
  42dca0:	b.ne	42db74 <ferror@plt+0x2ae44>  // b.any
  42dca4:	b	42db78 <ferror@plt+0x2ae48>
  42dca8:	ldurb	w1, [x19, #-1]
  42dcac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42dcb0:	add	x0, x0, #0x28
  42dcb4:	ldrh	w0, [x0, x1, lsl #1]
  42dcb8:	tbz	w0, #11, 42ded0 <ferror@plt+0x2b1a0>
  42dcbc:	mov	x21, x19
  42dcc0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42dcc4:	add	x2, x2, #0x28
  42dcc8:	mov	x1, x21
  42dccc:	sub	x21, x21, #0x1
  42dcd0:	ldurb	w0, [x21, #-1]
  42dcd4:	ldrh	w0, [x2, x0, lsl #1]
  42dcd8:	tbnz	w0, #11, 42dcc8 <ferror@plt+0x2af98>
  42dcdc:	sub	x1, x1, #0x2
  42dce0:	cmp	x24, x1
  42dce4:	b.ne	42db78 <ferror@plt+0x2ae48>  // b.any
  42dce8:	stp	x25, x26, [sp, #64]
  42dcec:	str	x27, [sp, #80]
  42dcf0:	cmp	x21, x19
  42dcf4:	mov	w2, #0x20                  	// #32
  42dcf8:	mov	w0, #0x5c                  	// #92
  42dcfc:	csel	w2, w2, w0, ne  // ne = any
  42dd00:	mov	x1, x24
  42dd04:	mov	x0, x20
  42dd08:	bl	42d460 <ferror@plt+0x2a730>
  42dd0c:	sub	x21, x21, #0x2
  42dd10:	str	x24, [x20, #16]
  42dd14:	mov	x27, x22
  42dd18:	adrp	x26, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42dd1c:	add	x26, x26, #0x9b0
  42dd20:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42dd24:	add	x24, x24, #0x28
  42dd28:	mov	w25, #0x20                  	// #32
  42dd2c:	b	42dd90 <ferror@plt+0x2b060>
  42dd30:	ldr	x0, [x20, #32]
  42dd34:	cmp	x0, x22
  42dd38:	b.eq	42de94 <ferror@plt+0x2b164>  // b.none
  42dd3c:	ldrb	w0, [x27, #2]
  42dd40:	cmp	w0, #0xa
  42dd44:	b.ne	42ddc0 <ferror@plt+0x2b090>  // b.any
  42dd48:	add	x22, x27, #0x2
  42dd4c:	b	42ddb4 <ferror@plt+0x2b084>
  42dd50:	cmp	x1, x21
  42dd54:	b.eq	42deb8 <ferror@plt+0x2b188>  // b.none
  42dd58:	ldurb	w0, [x21, #-1]
  42dd5c:	cmp	w0, #0x5c
  42dd60:	b.ne	42dec4 <ferror@plt+0x2b194>  // b.any
  42dd64:	sub	x27, x21, #0x1
  42dd68:	cmp	x19, x21
  42dd6c:	mov	w2, #0x5c                  	// #92
  42dd70:	csel	w2, w25, w2, ne  // ne = any
  42dd74:	mov	x1, x27
  42dd78:	mov	x0, x20
  42dd7c:	bl	42d460 <ferror@plt+0x2a730>
  42dd80:	sub	x19, x21, #0x2
  42dd84:	str	x27, [x20, #16]
  42dd88:	mov	x21, x19
  42dd8c:	mov	x27, x22
  42dd90:	add	x22, x27, #0x1
  42dd94:	ldrb	w0, [x27, #1]
  42dd98:	add	x19, x21, #0x1
  42dd9c:	strb	w0, [x21, #1]
  42dda0:	cmp	w0, #0xa
  42dda4:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42dda8:	b.ne	42ddf4 <ferror@plt+0x2b0c4>  // b.any
  42ddac:	cmp	w0, #0xd
  42ddb0:	b.eq	42dd30 <ferror@plt+0x2b000>  // b.none
  42ddb4:	ldr	x0, [x20, #32]
  42ddb8:	cmp	x0, x22
  42ddbc:	b.eq	42dea0 <ferror@plt+0x2b170>  // b.none
  42ddc0:	ldr	x1, [x20, #16]
  42ddc4:	cmp	x1, x19
  42ddc8:	b.eq	42deac <ferror@plt+0x2b17c>  // b.none
  42ddcc:	mov	x21, x19
  42ddd0:	ldurb	w0, [x21, #-1]
  42ddd4:	ldrh	w0, [x24, x0, lsl #1]
  42ddd8:	tbz	w0, #11, 42dd50 <ferror@plt+0x2b020>
  42dddc:	sub	x21, x21, #0x1
  42dde0:	cmp	x1, x21
  42dde4:	b.ne	42ddd0 <ferror@plt+0x2b0a0>  // b.any
  42dde8:	ldp	x25, x26, [sp, #64]
  42ddec:	ldr	x27, [sp, #80]
  42ddf0:	b	42db78 <ferror@plt+0x2ae48>
  42ddf4:	cmp	w0, #0x3f
  42ddf8:	b.ne	42dd88 <ferror@plt+0x2b058>  // b.any
  42ddfc:	ldrb	w0, [x27, #2]
  42de00:	cmp	w0, #0x3f
  42de04:	b.ne	42dd88 <ferror@plt+0x2b058>  // b.any
  42de08:	ldrb	w2, [x27, #3]
  42de0c:	ldrb	w0, [x26, w2, sxtw]
  42de10:	cbz	w0, 42dd88 <ferror@plt+0x2b058>
  42de14:	mov	x1, x19
  42de18:	mov	x0, x20
  42de1c:	bl	42d460 <ferror@plt+0x2a730>
  42de20:	ldrb	w0, [x23, #1125]
  42de24:	cbz	w0, 42dd88 <ferror@plt+0x2b058>
  42de28:	mov	x22, x27
  42de2c:	ldrb	w0, [x22, #3]!
  42de30:	ldrb	w0, [x26, w0, sxtw]
  42de34:	strb	w0, [x21, #1]
  42de38:	b	42dd88 <ferror@plt+0x2b058>
  42de3c:	ldrb	w0, [x19]
  42de40:	cmp	w0, #0xa
  42de44:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42de48:	b.eq	42de5c <ferror@plt+0x2b12c>  // b.none
  42de4c:	ldrb	w0, [x19, #1]!
  42de50:	cmp	w0, #0xa
  42de54:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42de58:	b.ne	42de4c <ferror@plt+0x2b11c>  // b.any
  42de5c:	mov	x22, x19
  42de60:	cmp	w0, #0xd
  42de64:	b.ne	42db78 <ferror@plt+0x2ae48>  // b.any
  42de68:	ldr	x22, [x20, #32]
  42de6c:	cmp	x19, x22
  42de70:	b.eq	42de8c <ferror@plt+0x2b15c>  // b.none
  42de74:	ldrb	w0, [x19, #1]
  42de78:	cmp	w0, #0xa
  42de7c:	cinc	x22, x19, eq  // eq = none
  42de80:	b	42db78 <ferror@plt+0x2ae48>
  42de84:	mov	x22, x19
  42de88:	b	42db78 <ferror@plt+0x2ae48>
  42de8c:	mov	x19, x22
  42de90:	b	42db78 <ferror@plt+0x2ae48>
  42de94:	ldp	x25, x26, [sp, #64]
  42de98:	ldr	x27, [sp, #80]
  42de9c:	b	42db78 <ferror@plt+0x2ae48>
  42dea0:	ldp	x25, x26, [sp, #64]
  42dea4:	ldr	x27, [sp, #80]
  42dea8:	b	42db78 <ferror@plt+0x2ae48>
  42deac:	ldp	x25, x26, [sp, #64]
  42deb0:	ldr	x27, [sp, #80]
  42deb4:	b	42db78 <ferror@plt+0x2ae48>
  42deb8:	ldp	x25, x26, [sp, #64]
  42debc:	ldr	x27, [sp, #80]
  42dec0:	b	42db78 <ferror@plt+0x2ae48>
  42dec4:	ldp	x25, x26, [sp, #64]
  42dec8:	ldr	x27, [sp, #80]
  42decc:	b	42db78 <ferror@plt+0x2ae48>
  42ded0:	sub	x0, x19, #0x1
  42ded4:	cmp	x24, x0
  42ded8:	b.ne	42db78 <ferror@plt+0x2ae48>  // b.any
  42dedc:	stp	x25, x26, [sp, #64]
  42dee0:	str	x27, [sp, #80]
  42dee4:	mov	x21, x19
  42dee8:	mov	w2, #0x5c                  	// #92
  42deec:	b	42dd00 <ferror@plt+0x2afd0>
  42def0:	stp	x29, x30, [sp, #-80]!
  42def4:	mov	x29, sp
  42def8:	stp	x19, x20, [sp, #16]
  42defc:	stp	x21, x22, [sp, #32]
  42df00:	stp	x25, x26, [sp, #64]
  42df04:	mov	x20, x0
  42df08:	mov	w21, w1
  42df0c:	ldr	x19, [x0]
  42df10:	ldr	w0, [x19, #56]
  42df14:	ubfiz	x1, x0, #4, #32
  42df18:	ldr	x2, [x19, #48]
  42df1c:	add	x25, x2, x1
  42df20:	ldr	x2, [x2, x1]
  42df24:	ldr	x1, [x19]
  42df28:	cmp	x2, x1
  42df2c:	b.hi	42e138 <ferror@plt+0x2b408>  // b.pmore
  42df30:	stp	x23, x24, [sp, #48]
  42df34:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42df38:	add	x22, x22, #0x9b0
  42df3c:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x24c60>
  42df40:	add	x23, x23, #0x688
  42df44:	mov	w24, #0x4                   	// #4
  42df48:	b	42e008 <ferror@plt+0x2b2d8>
  42df4c:	ldr	x0, [x20, #40]
  42df50:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42df54:	add	x4, x4, #0x610
  42df58:	mov	w3, w26
  42df5c:	ldr	w2, [x0, #60]
  42df60:	mov	w1, #0x0                   	// #0
  42df64:	mov	x0, x20
  42df68:	bl	426bfc <ferror@plt+0x23ecc>
  42df6c:	b	42e044 <ferror@plt+0x2b314>
  42df70:	ldr	x0, [x20, #40]
  42df74:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42df78:	add	x4, x4, #0x640
  42df7c:	mov	w3, w26
  42df80:	ldr	w2, [x0, #60]
  42df84:	mov	w1, #0x2                   	// #2
  42df88:	mov	x0, x20
  42df8c:	bl	426bfc <ferror@plt+0x23ecc>
  42df90:	ldr	x0, [x19, #32]
  42df94:	str	x0, [x19, #16]
  42df98:	ldr	x0, [x25]
  42df9c:	str	x0, [x19, #8]
  42dfa0:	ldr	x0, [x20, #40]
  42dfa4:	ldr	w2, [x0, #12]
  42dfa8:	sub	w2, w2, #0x1
  42dfac:	sbfiz	x1, x2, #1, #32
  42dfb0:	add	x2, x1, w2, sxtw
  42dfb4:	lsl	x2, x2, #3
  42dfb8:	ldr	x1, [x0]
  42dfbc:	add	x4, x1, x2
  42dfc0:	ldr	w3, [x0, #60]
  42dfc4:	ldr	w1, [x1, x2]
  42dfc8:	sub	w3, w3, w1
  42dfcc:	ldrb	w1, [x4, #6]
  42dfd0:	lsr	w3, w3, w1
  42dfd4:	ldr	w1, [x4, #16]
  42dfd8:	add	w1, w1, #0x1
  42dfdc:	mov	w2, #0x0                   	// #0
  42dfe0:	add	w1, w3, w1
  42dfe4:	bl	4327c8 <ferror@plt+0x2fa98>
  42dfe8:	ldr	w0, [x19, #56]
  42dfec:	ubfiz	x1, x0, #4, #32
  42dff0:	ldr	x2, [x19, #48]
  42dff4:	add	x25, x2, x1
  42dff8:	ldr	x2, [x2, x1]
  42dffc:	ldr	x1, [x19]
  42e000:	cmp	x2, x1
  42e004:	b.hi	42e134 <ferror@plt+0x2b404>  // b.pmore
  42e008:	add	w0, w0, #0x1
  42e00c:	str	w0, [x19, #56]
  42e010:	ldr	x1, [x25]
  42e014:	add	x26, x1, #0x1
  42e018:	ldr	x0, [x19, #8]
  42e01c:	sub	x26, x26, x0
  42e020:	ldr	w5, [x25, #8]
  42e024:	cmp	w5, #0x20
  42e028:	cset	w0, eq  // eq = none
  42e02c:	cmp	w5, #0x5c
  42e030:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42e034:	b.eq	42e058 <ferror@plt+0x2b328>  // b.none
  42e038:	cmp	w21, #0x0
  42e03c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42e040:	b.ne	42df4c <ferror@plt+0x2b21c>  // b.any
  42e044:	ldr	x1, [x19, #16]
  42e048:	ldr	x0, [x19, #32]
  42e04c:	cmp	x1, x0
  42e050:	b.ls	42df98 <ferror@plt+0x2b268>  // b.plast
  42e054:	b	42df70 <ferror@plt+0x2b240>
  42e058:	ldrb	w6, [x22, w5, uxtw]
  42e05c:	cbz	w6, 42e118 <ferror@plt+0x2b3e8>
  42e060:	ldrb	w0, [x20, #1136]
  42e064:	cbz	w0, 42dfe8 <ferror@plt+0x2b2b8>
  42e068:	cbnz	w21, 42e094 <ferror@plt+0x2b364>
  42e06c:	ldrb	w0, [x20, #1125]
  42e070:	cbnz	w0, 42e0f4 <ferror@plt+0x2b3c4>
  42e074:	ldr	x0, [x20, #40]
  42e078:	mov	x4, x23
  42e07c:	mov	w3, w26
  42e080:	ldr	w2, [x0, #60]
  42e084:	mov	w1, w24
  42e088:	mov	x0, x20
  42e08c:	bl	426c74 <ferror@plt+0x23f44>
  42e090:	b	42dfe8 <ferror@plt+0x2b2b8>
  42e094:	cmp	w5, #0x2f
  42e098:	b.ne	42dfe8 <ferror@plt+0x2b2b8>  // b.any
  42e09c:	ldrb	w0, [x20, #1125]
  42e0a0:	cbnz	w0, 42e0e8 <ferror@plt+0x2b3b8>
  42e0a4:	add	x2, x1, #0x3
  42e0a8:	ldrb	w0, [x1, #3]
  42e0ac:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42e0b0:	add	x1, x1, #0x28
  42e0b4:	ldrh	w1, [x1, w0, sxtw #1]
  42e0b8:	tbz	w1, #11, 42e0d0 <ferror@plt+0x2b3a0>
  42e0bc:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42e0c0:	add	x3, x3, #0x28
  42e0c4:	ldrb	w0, [x2, #1]!
  42e0c8:	ldrh	w1, [x3, w0, sxtw #1]
  42e0cc:	tbnz	w1, #11, 42e0c4 <ferror@plt+0x2b394>
  42e0d0:	cmp	w0, #0xa
  42e0d4:	b.ne	42dfe8 <ferror@plt+0x2b2b8>  // b.any
  42e0d8:	ldr	x0, [x25, #16]
  42e0dc:	cmp	x0, x2
  42e0e0:	b.hi	42e074 <ferror@plt+0x2b344>  // b.pmore
  42e0e4:	b	42dfe8 <ferror@plt+0x2b2b8>
  42e0e8:	ldr	x0, [x25, #16]
  42e0ec:	cmp	x1, x0
  42e0f0:	b.ne	42dfe8 <ferror@plt+0x2b2b8>  // b.any
  42e0f4:	ldr	x0, [x20, #40]
  42e0f8:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e0fc:	add	x4, x4, #0x668
  42e100:	mov	w3, w26
  42e104:	ldr	w2, [x0, #60]
  42e108:	mov	w1, w24
  42e10c:	mov	x0, x20
  42e110:	bl	426c74 <ferror@plt+0x23f44>
  42e114:	b	42dfe8 <ferror@plt+0x2b2b8>
  42e118:	cbz	w5, 42dfe8 <ferror@plt+0x2b2b8>
  42e11c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e120:	add	x2, x2, #0x6b8
  42e124:	mov	w1, #0x48b                 	// #1163
  42e128:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e12c:	add	x0, x0, #0x488
  42e130:	bl	4102b4 <ferror@plt+0xd584>
  42e134:	ldp	x23, x24, [sp, #48]
  42e138:	ldp	x19, x20, [sp, #16]
  42e13c:	ldp	x21, x22, [sp, #32]
  42e140:	ldp	x25, x26, [sp, #64]
  42e144:	ldp	x29, x30, [sp], #80
  42e148:	ret
  42e14c:	stp	x29, x30, [sp, #-64]!
  42e150:	mov	x29, sp
  42e154:	stp	x19, x20, [sp, #16]
  42e158:	stp	x21, x22, [sp, #32]
  42e15c:	stp	x23, x24, [sp, #48]
  42e160:	mov	x21, x0
  42e164:	ldr	x20, [x0]
  42e168:	ldr	x1, [x20]
  42e16c:	ldrb	w0, [x1, #1]
  42e170:	cmp	w0, #0x2f
  42e174:	cinc	x1, x1, eq  // eq = none
  42e178:	add	x1, x1, #0x1
  42e17c:	mov	w22, #0x1                   	// #1
  42e180:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e184:	add	x23, x23, #0x6d0
  42e188:	mov	w24, #0x2                   	// #2
  42e18c:	b	42e1b4 <ferror@plt+0x2b484>
  42e190:	ldurb	w0, [x1, #-1]
  42e194:	cmp	w0, #0x2a
  42e198:	b.eq	42e280 <ferror@plt+0x2b550>  // b.none
  42e19c:	ldrb	w0, [x21, #1133]
  42e1a0:	cbz	w0, 42e1b0 <ferror@plt+0x2b480>
  42e1a4:	ldrb	w0, [x1, #1]
  42e1a8:	cmp	w0, #0x2a
  42e1ac:	b.eq	42e24c <ferror@plt+0x2b51c>  // b.none
  42e1b0:	mov	x1, x19
  42e1b4:	mov	x19, x1
  42e1b8:	ldrb	w2, [x19], #1
  42e1bc:	cmp	w2, #0x2f
  42e1c0:	b.eq	42e190 <ferror@plt+0x2b460>  // b.none
  42e1c4:	cmp	w2, #0xa
  42e1c8:	b.ne	42e1b0 <ferror@plt+0x2b480>  // b.any
  42e1cc:	str	x1, [x20]
  42e1d0:	mov	w1, w22
  42e1d4:	mov	x0, x21
  42e1d8:	bl	42def0 <ferror@plt+0x2b1c0>
  42e1dc:	ldr	x1, [x20, #16]
  42e1e0:	ldr	x0, [x20, #32]
  42e1e4:	cmp	x1, x0
  42e1e8:	b.cs	42e2a8 <ferror@plt+0x2b578>  // b.hs, b.nlast
  42e1ec:	mov	x0, x21
  42e1f0:	bl	42da34 <ferror@plt+0x2ad04>
  42e1f4:	ldr	x0, [x21, #40]
  42e1f8:	ldr	w1, [x0, #12]
  42e1fc:	sub	w1, w1, #0x1
  42e200:	sbfiz	x2, x1, #1, #32
  42e204:	add	x1, x2, w1, sxtw
  42e208:	lsl	x1, x1, #3
  42e20c:	ldr	x5, [x0]
  42e210:	add	x4, x5, x1
  42e214:	ldr	x6, [x20, #16]
  42e218:	ldr	x2, [x20, #8]
  42e21c:	ldr	w3, [x0, #60]
  42e220:	ldr	w1, [x5, x1]
  42e224:	sub	w1, w3, w1
  42e228:	ldrb	w3, [x4, #6]
  42e22c:	lsr	w1, w1, w3
  42e230:	ldr	w3, [x4, #16]
  42e234:	add	w3, w3, #0x1
  42e238:	sub	w2, w6, w2
  42e23c:	add	w1, w1, w3
  42e240:	bl	4327c8 <ferror@plt+0x2fa98>
  42e244:	ldr	x19, [x20]
  42e248:	b	42e1b0 <ferror@plt+0x2b480>
  42e24c:	ldrb	w0, [x1, #2]
  42e250:	cmp	w0, #0x2f
  42e254:	b.eq	42e1b0 <ferror@plt+0x2b480>  // b.none
  42e258:	str	x19, [x20]
  42e25c:	ldr	x3, [x20, #8]
  42e260:	ldr	x0, [x21, #40]
  42e264:	mov	x4, x23
  42e268:	sub	w3, w19, w3
  42e26c:	ldr	w2, [x0, #60]
  42e270:	mov	w1, w24
  42e274:	mov	x0, x21
  42e278:	bl	426c74 <ferror@plt+0x23f44>
  42e27c:	b	42e1b0 <ferror@plt+0x2b480>
  42e280:	str	x19, [x20]
  42e284:	mov	w1, #0x1                   	// #1
  42e288:	mov	x0, x21
  42e28c:	bl	42def0 <ferror@plt+0x2b1c0>
  42e290:	mov	w0, #0x0                   	// #0
  42e294:	ldp	x19, x20, [sp, #16]
  42e298:	ldp	x21, x22, [sp, #32]
  42e29c:	ldp	x23, x24, [sp, #48]
  42e2a0:	ldp	x29, x30, [sp], #64
  42e2a4:	ret
  42e2a8:	mov	w0, #0x1                   	// #1
  42e2ac:	b	42e294 <ferror@plt+0x2b564>
  42e2b0:	stp	x29, x30, [sp, #-32]!
  42e2b4:	mov	x29, sp
  42e2b8:	stp	x19, x20, [sp, #16]
  42e2bc:	mov	x20, x0
  42e2c0:	mov	x2, x1
  42e2c4:	ldrb	w5, [x2], #1
  42e2c8:	sub	w5, w5, #0x71
  42e2cc:	ldrb	w3, [x1, #1]
  42e2d0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42e2d4:	add	x0, x0, #0x28
  42e2d8:	ldrh	w0, [x0, w3, sxtw #1]
  42e2dc:	mov	w4, #0x204                 	// #516
  42e2e0:	tst	w4, w0
  42e2e4:	b.eq	42e310 <ferror@plt+0x2b5e0>  // b.none
  42e2e8:	mov	w7, #0x43                  	// #67
  42e2ec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42e2f0:	add	x0, x0, #0x28
  42e2f4:	mov	w6, w4
  42e2f8:	madd	w5, w5, w7, w3
  42e2fc:	sub	w5, w5, #0x71
  42e300:	ldrb	w3, [x2, #1]!
  42e304:	ldrh	w4, [x0, w3, sxtw #1]
  42e308:	tst	w6, w4
  42e30c:	b.ne	42e2f8 <ferror@plt+0x2b5c8>  // b.any
  42e310:	sub	x3, x2, x1
  42e314:	mov	w4, #0x1                   	// #1
  42e318:	add	w3, w5, w3
  42e31c:	sub	w2, w2, w1
  42e320:	ldr	x0, [x20, #1088]
  42e324:	bl	439abc <ferror@plt+0x36d8c>
  42e328:	mov	x19, x0
  42e32c:	ldrh	w0, [x0, #18]
  42e330:	ubfx	x1, x0, #2, #8
  42e334:	tbnz	w0, #4, 42e348 <ferror@plt+0x2b618>
  42e338:	mov	x0, x19
  42e33c:	ldp	x19, x20, [sp, #16]
  42e340:	ldp	x29, x30, [sp], #32
  42e344:	ret
  42e348:	ldrb	w0, [x20, #18]
  42e34c:	cbnz	w0, 42e338 <ferror@plt+0x2b608>
  42e350:	tbz	w1, #1, 42e35c <ferror@plt+0x2b62c>
  42e354:	ldrb	w0, [x20, #23]
  42e358:	cbz	w0, 42e398 <ferror@plt+0x2b668>
  42e35c:	ldr	x0, [x20, #1272]
  42e360:	cmp	x19, x0
  42e364:	b.eq	42e3b4 <ferror@plt+0x2b684>  // b.none
  42e368:	ldr	x0, [x20, #1280]
  42e36c:	cmp	x19, x0
  42e370:	b.eq	42e3f4 <ferror@plt+0x2b6c4>  // b.none
  42e374:	ldrh	w0, [x19, #18]
  42e378:	tbz	w0, #9, 42e338 <ferror@plt+0x2b608>
  42e37c:	ldr	x3, [x19]
  42e380:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e384:	add	x2, x2, #0x5d8
  42e388:	mov	w1, #0xf                   	// #15
  42e38c:	mov	x0, x20
  42e390:	bl	426a88 <ferror@plt+0x23d58>
  42e394:	b	42e338 <ferror@plt+0x2b608>
  42e398:	ldr	x3, [x19]
  42e39c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e3a0:	add	x2, x2, #0x528
  42e3a4:	mov	w1, #0x3                   	// #3
  42e3a8:	mov	x0, x20
  42e3ac:	bl	426a10 <ferror@plt+0x23ce0>
  42e3b0:	b	42e35c <ferror@plt+0x2b62c>
  42e3b4:	ldrb	w0, [x20, #22]
  42e3b8:	cbnz	w0, 42e368 <ferror@plt+0x2b638>
  42e3bc:	ldrb	w0, [x20, #1120]
  42e3c0:	cbz	w0, 42e3dc <ferror@plt+0x2b6ac>
  42e3c4:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e3c8:	add	x2, x2, #0x548
  42e3cc:	mov	w1, #0x2                   	// #2
  42e3d0:	mov	x0, x20
  42e3d4:	bl	426a10 <ferror@plt+0x23ce0>
  42e3d8:	b	42e368 <ferror@plt+0x2b638>
  42e3dc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e3e0:	add	x2, x2, #0x590
  42e3e4:	mov	w1, #0x2                   	// #2
  42e3e8:	mov	x0, x20
  42e3ec:	bl	426a10 <ferror@plt+0x23ce0>
  42e3f0:	b	42e368 <ferror@plt+0x2b638>
  42e3f4:	mov	x0, x20
  42e3f8:	bl	42d664 <ferror@plt+0x2a934>
  42e3fc:	b	42e374 <ferror@plt+0x2b644>
  42e400:	add	x0, x0, #0x568
  42e404:	ret
  42e408:	stp	x29, x30, [sp, #-32]!
  42e40c:	mov	x29, sp
  42e410:	stp	x19, x20, [sp, #16]
  42e414:	mov	x20, x0
  42e418:	ubfiz	x19, x1, #1, #32
  42e41c:	add	x1, x19, w1, uxtw
  42e420:	lsl	x19, x1, #3
  42e424:	mov	x0, x19
  42e428:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42e42c:	str	x0, [x20, #16]
  42e430:	add	x19, x0, x19
  42e434:	str	x19, [x20, #24]
  42e438:	str	xzr, [x20]
  42e43c:	ldp	x19, x20, [sp, #16]
  42e440:	ldp	x29, x30, [sp], #32
  42e444:	ret
  42e448:	stp	x29, x30, [sp, #-32]!
  42e44c:	mov	x29, sp
  42e450:	str	x19, [sp, #16]
  42e454:	mov	x19, x0
  42e458:	ldr	x0, [x0]
  42e45c:	cbz	x0, 42e470 <ferror@plt+0x2b740>
  42e460:	ldr	x0, [x19]
  42e464:	ldr	x19, [sp, #16]
  42e468:	ldp	x29, x30, [sp], #32
  42e46c:	ret
  42e470:	mov	x0, #0x20                  	// #32
  42e474:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42e478:	str	x0, [x19]
  42e47c:	str	x19, [x0, #8]
  42e480:	mov	w1, #0xfa                  	// #250
  42e484:	bl	42e408 <ferror@plt+0x2b6d8>
  42e488:	b	42e460 <ferror@plt+0x2b730>
  42e48c:	ldr	w1, [x0, #48]
  42e490:	cmp	w1, #0x1
  42e494:	b.eq	42e4b4 <ferror@plt+0x2b784>  // b.none
  42e498:	tst	w1, #0xfffffffd
  42e49c:	b.ne	42e4d4 <ferror@plt+0x2b7a4>  // b.any
  42e4a0:	ldr	x1, [x0, #24]
  42e4a4:	ldr	x0, [x0, #16]
  42e4a8:	sub	x0, x1, x0
  42e4ac:	ubfx	x0, x0, #3, #32
  42e4b0:	ret
  42e4b4:	ldr	x1, [x0, #24]
  42e4b8:	ldr	x0, [x0, #16]
  42e4bc:	sub	x0, x1, x0
  42e4c0:	asr	x0, x0, #3
  42e4c4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42e4c8:	movk	x1, #0xaaab
  42e4cc:	mul	w0, w0, w1
  42e4d0:	ret
  42e4d4:	stp	x29, x30, [sp, #-16]!
  42e4d8:	mov	x29, sp
  42e4dc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e4e0:	add	x2, x2, #0x6e8
  42e4e4:	mov	w1, #0x99f                 	// #2463
  42e4e8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e4ec:	add	x0, x0, #0x488
  42e4f0:	bl	4102b4 <ferror@plt+0xd584>
  42e4f4:	stp	x29, x30, [sp, #-64]!
  42e4f8:	mov	x29, sp
  42e4fc:	stp	x19, x20, [sp, #16]
  42e500:	stp	x21, x22, [sp, #32]
  42e504:	stp	x23, x24, [sp, #48]
  42e508:	mov	x19, x0
  42e50c:	ldr	x0, [x0, #488]
  42e510:	ldr	x22, [x19, #448]
  42e514:	ldr	x20, [x0, #24]
  42e518:	sub	x20, x20, x22
  42e51c:	ldr	w23, [x19, #496]
  42e520:	cbz	x23, 42e544 <ferror@plt+0x2b814>
  42e524:	asr	x21, x20, #3
  42e528:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42e52c:	movk	x1, #0xaaab
  42e530:	mul	x21, x21, x1
  42e534:	cmp	x21, x23
  42e538:	b.le	42e584 <ferror@plt+0x2b854>
  42e53c:	cmp	x20, #0x18
  42e540:	b.gt	42e5d0 <ferror@plt+0x2b8a0>
  42e544:	cbnz	x20, 42e55c <ferror@plt+0x2b82c>
  42e548:	ldr	x0, [x19, #488]
  42e54c:	ldr	x2, [x19, #448]
  42e550:	ldr	x1, [x0, #24]
  42e554:	cmp	x2, x1
  42e558:	b.eq	42e5f4 <ferror@plt+0x2b8c4>  // b.none
  42e55c:	ldr	x0, [x19, #448]
  42e560:	add	x1, x0, #0x18
  42e564:	str	x1, [x19, #448]
  42e568:	ldur	w1, [x22, #-24]
  42e56c:	str	w1, [x0]
  42e570:	ldp	x19, x20, [sp, #16]
  42e574:	ldp	x21, x22, [sp, #32]
  42e578:	ldp	x23, x24, [sp, #48]
  42e57c:	ldp	x29, x30, [sp], #64
  42e580:	ret
  42e584:	bl	42e448 <ferror@plt+0x2b718>
  42e588:	mov	x24, x0
  42e58c:	cmp	x21, x23
  42e590:	b.lt	42e5b4 <ferror@plt+0x2b884>  // b.tstop
  42e594:	ldr	x0, [x19, #488]
  42e598:	ldr	x1, [x0, #24]
  42e59c:	ldr	x0, [x24, #16]
  42e5a0:	ldp	x2, x3, [x1, #-24]
  42e5a4:	stp	x2, x3, [x0]
  42e5a8:	ldur	x1, [x1, #-8]
  42e5ac:	str	x1, [x0, #16]
  42e5b0:	b	42e53c <ferror@plt+0x2b80c>
  42e5b4:	ldr	x1, [x0, #16]
  42e5b8:	sub	x2, x23, x21
  42e5bc:	add	x2, x2, x2, lsl #1
  42e5c0:	lsl	x2, x2, #3
  42e5c4:	add	x0, x1, #0x18
  42e5c8:	bl	402630 <memmove@plt>
  42e5cc:	b	42e594 <ferror@plt+0x2b864>
  42e5d0:	ldr	x1, [x19, #448]
  42e5d4:	sub	x2, x21, #0x1
  42e5d8:	cmp	x2, x23
  42e5dc:	csel	x2, x2, x23, le
  42e5e0:	add	x2, x2, x2, lsl #1
  42e5e4:	lsl	x2, x2, #3
  42e5e8:	add	x0, x1, #0x18
  42e5ec:	bl	402630 <memmove@plt>
  42e5f0:	b	42e55c <ferror@plt+0x2b82c>
  42e5f4:	bl	42e448 <ferror@plt+0x2b718>
  42e5f8:	str	x0, [x19, #488]
  42e5fc:	ldr	x0, [x0, #16]
  42e600:	str	x0, [x19, #448]
  42e604:	b	42e55c <ferror@plt+0x2b82c>
  42e608:	stp	x29, x30, [sp, #-32]!
  42e60c:	mov	x29, sp
  42e610:	stp	x19, x20, [sp, #16]
  42e614:	mov	x20, x0
  42e618:	ldrb	w0, [x0, #16]
  42e61c:	mov	w19, #0x0                   	// #0
  42e620:	cbz	w0, 42e660 <ferror@plt+0x2b930>
  42e624:	mov	w0, w19
  42e628:	ldp	x19, x20, [sp, #16]
  42e62c:	ldp	x29, x30, [sp], #32
  42e630:	ret
  42e634:	mov	x0, x20
  42e638:	bl	42da34 <ferror@plt+0x2ad04>
  42e63c:	b	42e624 <ferror@plt+0x2b8f4>
  42e640:	ldrb	w19, [x1, #105]
  42e644:	ubfx	x19, x19, #2, #1
  42e648:	mov	x0, x20
  42e64c:	bl	425d00 <ferror@plt+0x22fd0>
  42e650:	ldr	x0, [x20]
  42e654:	cmp	x0, #0x0
  42e658:	csinc	w19, w19, wzr, ne  // ne = any
  42e65c:	cbnz	w19, 42e6a4 <ferror@plt+0x2b974>
  42e660:	ldr	x1, [x20]
  42e664:	ldrb	w19, [x1, #104]
  42e668:	cbz	w19, 42e6ac <ferror@plt+0x2b97c>
  42e66c:	ldr	x2, [x1, #16]
  42e670:	ldr	x0, [x1, #32]
  42e674:	cmp	x2, x0
  42e678:	b.cc	42e634 <ferror@plt+0x2b904>  // b.lo, b.ul, b.last
  42e67c:	ldrb	w3, [x20, #25]
  42e680:	cbnz	w3, 42e6b4 <ferror@plt+0x2b984>
  42e684:	ldr	x3, [x1, #24]
  42e688:	cmp	x3, x0
  42e68c:	ccmp	x2, x0, #0x0, ne  // ne = any
  42e690:	b.ls	42e640 <ferror@plt+0x2b910>  // b.plast
  42e694:	ldrb	w2, [x1, #105]
  42e698:	tbnz	w2, #1, 42e640 <ferror@plt+0x2b910>
  42e69c:	str	x0, [x1, #16]
  42e6a0:	b	42e640 <ferror@plt+0x2b910>
  42e6a4:	mov	w19, #0x0                   	// #0
  42e6a8:	b	42e624 <ferror@plt+0x2b8f4>
  42e6ac:	mov	w19, #0x1                   	// #1
  42e6b0:	b	42e624 <ferror@plt+0x2b8f4>
  42e6b4:	mov	w19, #0x0                   	// #0
  42e6b8:	b	42e624 <ferror@plt+0x2b8f4>
  42e6bc:	mov	x1, x0
  42e6c0:	ldrb	w0, [x0, #4]
  42e6c4:	lsl	x0, x0, #4
  42e6c8:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e6cc:	add	x2, x2, #0xf28
  42e6d0:	ldr	w2, [x2, x0]
  42e6d4:	cmp	w2, #0x1
  42e6d8:	b.eq	42e6f0 <ferror@plt+0x2b9c0>  // b.none
  42e6dc:	mov	w0, #0x6                   	// #6
  42e6e0:	cmp	w2, #0x2
  42e6e4:	b.ne	42e6ec <ferror@plt+0x2b9bc>  // b.any
  42e6e8:	ldr	w0, [x1, #8]
  42e6ec:	ret
  42e6f0:	ldr	x0, [x1, #8]
  42e6f4:	ldr	w0, [x0, #8]
  42e6f8:	add	w0, w0, w0, lsl #2
  42e6fc:	lsl	w0, w0, #1
  42e700:	b	42e6ec <ferror@plt+0x2b9bc>
  42e704:	stp	x29, x30, [sp, #-48]!
  42e708:	mov	x29, sp
  42e70c:	stp	x19, x20, [sp, #16]
  42e710:	stp	x21, x22, [sp, #32]
  42e714:	mov	x20, x0
  42e718:	ldr	x21, [x1]
  42e71c:	ldr	w0, [x1, #8]
  42e720:	cbz	w0, 42e774 <ferror@plt+0x2ba44>
  42e724:	mov	x22, x1
  42e728:	mov	x19, #0x0                   	// #0
  42e72c:	b	42e754 <ferror@plt+0x2ba24>
  42e730:	mov	x0, x20
  42e734:	bl	42d4ec <ferror@plt+0x2a7bc>
  42e738:	sub	x19, x19, #0x1
  42e73c:	add	x19, x0, x19
  42e740:	add	x20, x20, #0xa
  42e744:	add	x19, x19, #0x1
  42e748:	ldr	w0, [x22, #8]
  42e74c:	cmp	x0, x19
  42e750:	b.ls	42e774 <ferror@plt+0x2ba44>  // b.plast
  42e754:	add	x1, x21, x19
  42e758:	ldrb	w2, [x21, x19]
  42e75c:	tst	w2, #0xffffff80
  42e760:	b.ne	42e730 <ferror@plt+0x2ba00>  // b.any
  42e764:	mov	x0, x20
  42e768:	strb	w2, [x0], #1
  42e76c:	mov	x20, x0
  42e770:	b	42e744 <ferror@plt+0x2ba14>
  42e774:	mov	x0, x20
  42e778:	ldp	x19, x20, [sp, #16]
  42e77c:	ldp	x21, x22, [sp, #32]
  42e780:	ldp	x29, x30, [sp], #48
  42e784:	ret
  42e788:	stp	x29, x30, [sp, #-32]!
  42e78c:	mov	x29, sp
  42e790:	stp	x19, x20, [sp, #16]
  42e794:	mov	x20, x1
  42e798:	mov	x19, x2
  42e79c:	ldrb	w2, [x1, #4]
  42e7a0:	sbfiz	x4, x2, #4, #32
  42e7a4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e7a8:	add	x1, x1, #0xf28
  42e7ac:	ldr	w1, [x1, x4]
  42e7b0:	cmp	w1, #0x2
  42e7b4:	b.eq	42e894 <ferror@plt+0x2bb64>  // b.none
  42e7b8:	and	w3, w3, #0xff
  42e7bc:	b.hi	42e7ec <ferror@plt+0x2babc>  // b.pmore
  42e7c0:	cbz	w1, 42e82c <ferror@plt+0x2bafc>
  42e7c4:	cbz	w3, 42e884 <ferror@plt+0x2bb54>
  42e7c8:	ldr	x0, [x20, #16]
  42e7cc:	ldr	w2, [x0, #8]
  42e7d0:	ldr	x1, [x0]
  42e7d4:	mov	x0, x19
  42e7d8:	bl	402620 <memcpy@plt>
  42e7dc:	ldr	x0, [x20, #16]
  42e7e0:	ldr	w0, [x0, #8]
  42e7e4:	add	x0, x19, x0
  42e7e8:	b	42e820 <ferror@plt+0x2baf0>
  42e7ec:	cmp	w1, #0x3
  42e7f0:	b.ne	42e81c <ferror@plt+0x2baec>  // b.any
  42e7f4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e7f8:	add	x1, x1, #0xf28
  42e7fc:	add	x2, x1, w2, sxtw #4
  42e800:	ldr	x3, [x2, #8]
  42e804:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e808:	add	x2, x2, #0x710
  42e80c:	mov	w1, #0x4                   	// #4
  42e810:	bl	426a10 <ferror@plt+0x23ce0>
  42e814:	mov	x0, x19
  42e818:	b	42e820 <ferror@plt+0x2baf0>
  42e81c:	mov	x0, x19
  42e820:	ldp	x19, x20, [sp, #16]
  42e824:	ldp	x29, x30, [sp], #32
  42e828:	ret
  42e82c:	ldrh	w0, [x20, #6]
  42e830:	tbz	w0, #1, 42e86c <ferror@plt+0x2bb3c>
  42e834:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e838:	add	x0, x0, #0xf28
  42e83c:	add	x0, x0, #0x540
  42e840:	sub	w2, w2, #0x25
  42e844:	ldr	x1, [x0, w2, sxtw #3]
  42e848:	ldrb	w0, [x1], #1
  42e84c:	cbz	w0, 42e864 <ferror@plt+0x2bb34>
  42e850:	strb	w0, [x19], #1
  42e854:	ldrb	w0, [x1], #1
  42e858:	cbnz	w0, 42e850 <ferror@plt+0x2bb20>
  42e85c:	mov	x0, x19
  42e860:	b	42e820 <ferror@plt+0x2baf0>
  42e864:	mov	x0, x19
  42e868:	b	42e820 <ferror@plt+0x2baf0>
  42e86c:	tbnz	w0, #4, 42e7c4 <ferror@plt+0x2ba94>
  42e870:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e874:	add	x0, x0, #0xf28
  42e878:	add	x2, x0, w2, sxtw #4
  42e87c:	ldr	x1, [x2, #8]
  42e880:	b	42e848 <ferror@plt+0x2bb18>
  42e884:	ldr	x1, [x20, #8]
  42e888:	mov	x0, x19
  42e88c:	bl	42e704 <ferror@plt+0x2b9d4>
  42e890:	b	42e820 <ferror@plt+0x2baf0>
  42e894:	ldr	w2, [x20, #8]
  42e898:	ldr	x1, [x20, #16]
  42e89c:	mov	x0, x19
  42e8a0:	bl	402620 <memcpy@plt>
  42e8a4:	ldr	w0, [x20, #8]
  42e8a8:	add	x0, x19, x0
  42e8ac:	b	42e820 <ferror@plt+0x2baf0>
  42e8b0:	stp	x29, x30, [sp, #-48]!
  42e8b4:	mov	x29, sp
  42e8b8:	stp	x19, x20, [sp, #16]
  42e8bc:	mov	x19, x0
  42e8c0:	mov	x20, x2
  42e8c4:	ldr	w2, [x0, #1192]
  42e8c8:	ldr	w0, [x20, #8]
  42e8cc:	cmp	w2, w0
  42e8d0:	b.ge	42e8e8 <ferror@plt+0x2bbb8>  // b.tcont
  42e8d4:	stp	x21, x22, [sp, #32]
  42e8d8:	mov	x21, x1
  42e8dc:	ldrb	w0, [x19, #18]
  42e8e0:	cbz	w0, 42e8f4 <ferror@plt+0x2bbc4>
  42e8e4:	ldp	x21, x22, [sp, #32]
  42e8e8:	ldp	x19, x20, [sp, #16]
  42e8ec:	ldp	x29, x30, [sp], #48
  42e8f0:	ret
  42e8f4:	mov	x0, x1
  42e8f8:	bl	42e6bc <ferror@plt+0x2b98c>
  42e8fc:	mov	w0, w0
  42e900:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42e904:	mov	x22, x0
  42e908:	mov	w3, #0x0                   	// #0
  42e90c:	mov	x2, x0
  42e910:	mov	x1, x21
  42e914:	mov	x0, x19
  42e918:	bl	42e788 <ferror@plt+0x2ba58>
  42e91c:	sub	x5, x0, x22
  42e920:	ldr	w0, [x20, #8]
  42e924:	cmp	w0, #0x1
  42e928:	b.eq	42e95c <ferror@plt+0x2bc2c>  // b.none
  42e92c:	mov	x6, x22
  42e930:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e934:	add	x4, x4, #0x740
  42e938:	mov	w3, #0x0                   	// #0
  42e93c:	ldr	w2, [x21]
  42e940:	mov	w1, #0x10                  	// #16
  42e944:	mov	x0, x19
  42e948:	bl	426c74 <ferror@plt+0x23f44>
  42e94c:	mov	x0, x22
  42e950:	bl	402a90 <free@plt>
  42e954:	ldp	x21, x22, [sp, #32]
  42e958:	b	42e8e8 <ferror@plt+0x2bbb8>
  42e95c:	mov	x6, x22
  42e960:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e964:	add	x4, x4, #0x728
  42e968:	mov	w3, #0x0                   	// #0
  42e96c:	ldr	w2, [x21]
  42e970:	mov	w1, #0x10                  	// #16
  42e974:	mov	x0, x19
  42e978:	bl	426c74 <ferror@plt+0x23f44>
  42e97c:	b	42e94c <ferror@plt+0x2bc1c>
  42e980:	tst	w1, #0x2
  42e984:	b.eq	42e9a0 <ferror@plt+0x2bc70>  // b.none
  42e988:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e98c:	add	x1, x1, #0xf28
  42e990:	add	x1, x1, #0x540
  42e994:	sub	w0, w0, #0x25
  42e998:	ldr	x0, [x1, w0, sxtw #3]
  42e99c:	ret
  42e9a0:	and	w2, w1, #0xff
  42e9a4:	tbnz	w2, #4, 42e9bc <ferror@plt+0x2bc8c>
  42e9a8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e9ac:	add	x1, x1, #0xf28
  42e9b0:	add	x0, x1, w0, sxtw #4
  42e9b4:	ldr	x0, [x0, #8]
  42e9b8:	ret
  42e9bc:	stp	x29, x30, [sp, #-16]!
  42e9c0:	mov	x29, sp
  42e9c4:	bl	43c0d8 <ferror@plt+0x393a8>
  42e9c8:	ldp	x29, x30, [sp], #16
  42e9cc:	ret
  42e9d0:	stp	x29, x30, [sp, #-80]!
  42e9d4:	mov	x29, sp
  42e9d8:	stp	x19, x20, [sp, #16]
  42e9dc:	stp	x21, x22, [sp, #32]
  42e9e0:	mov	x21, x0
  42e9e4:	mov	x20, x1
  42e9e8:	ldrb	w1, [x0, #4]
  42e9ec:	sbfiz	x2, x1, #4, #32
  42e9f0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42e9f4:	add	x0, x0, #0xf28
  42e9f8:	ldr	w0, [x0, x2]
  42e9fc:	cmp	w0, #0x1
  42ea00:	b.eq	42ea8c <ferror@plt+0x2bd5c>  // b.none
  42ea04:	cmp	w0, #0x2
  42ea08:	b.eq	42eb34 <ferror@plt+0x2be04>  // b.none
  42ea0c:	cbz	w0, 42ea20 <ferror@plt+0x2bcf0>
  42ea10:	ldp	x19, x20, [sp, #16]
  42ea14:	ldp	x21, x22, [sp, #32]
  42ea18:	ldp	x29, x30, [sp], #80
  42ea1c:	ret
  42ea20:	ldrh	w0, [x21, #6]
  42ea24:	tbz	w0, #1, 42ea68 <ferror@plt+0x2bd38>
  42ea28:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ea2c:	add	x0, x0, #0xf28
  42ea30:	add	x0, x0, #0x540
  42ea34:	sub	w1, w1, #0x25
  42ea38:	ldr	x19, [x0, w1, sxtw #3]
  42ea3c:	ldrb	w1, [x19]
  42ea40:	ldr	x0, [x20, #40]
  42ea44:	ldr	x2, [x20, #48]
  42ea48:	cmp	x0, x2
  42ea4c:	b.cs	42ea80 <ferror@plt+0x2bd50>  // b.hs, b.nlast
  42ea50:	add	x2, x0, #0x1
  42ea54:	str	x2, [x20, #40]
  42ea58:	strb	w1, [x0]
  42ea5c:	ldrb	w1, [x19, #1]!
  42ea60:	cbnz	w1, 42ea40 <ferror@plt+0x2bd10>
  42ea64:	b	42ea10 <ferror@plt+0x2bce0>
  42ea68:	tbnz	w0, #4, 42ea8c <ferror@plt+0x2bd5c>
  42ea6c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ea70:	add	x0, x0, #0xf28
  42ea74:	add	x1, x0, w1, sxtw #4
  42ea78:	ldr	x19, [x1, #8]
  42ea7c:	b	42ea3c <ferror@plt+0x2bd0c>
  42ea80:	mov	x0, x20
  42ea84:	bl	4029a0 <__overflow@plt>
  42ea88:	b	42ea5c <ferror@plt+0x2bd2c>
  42ea8c:	ldr	x0, [x21, #8]
  42ea90:	ldr	x22, [x0]
  42ea94:	ldr	w1, [x0, #8]
  42ea98:	cbz	w1, 42ea10 <ferror@plt+0x2bce0>
  42ea9c:	stp	x23, x24, [sp, #48]
  42eaa0:	mov	x19, #0x0                   	// #0
  42eaa4:	mov	x24, #0xa                   	// #10
  42eaa8:	mov	x23, #0x1                   	// #1
  42eaac:	b	42eaf8 <ferror@plt+0x2bdc8>
  42eab0:	add	x0, sp, #0x40
  42eab4:	bl	42d4ec <ferror@plt+0x2a7bc>
  42eab8:	sub	x19, x19, #0x1
  42eabc:	add	x19, x0, x19
  42eac0:	mov	x3, x20
  42eac4:	mov	x2, x24
  42eac8:	mov	x1, x23
  42eacc:	add	x0, sp, #0x40
  42ead0:	bl	402660 <fwrite_unlocked@plt>
  42ead4:	b	42eae4 <ferror@plt+0x2bdb4>
  42ead8:	add	x2, x0, #0x1
  42eadc:	str	x2, [x20, #40]
  42eae0:	strb	w1, [x0]
  42eae4:	add	x19, x19, #0x1
  42eae8:	ldr	x0, [x21, #8]
  42eaec:	ldr	w1, [x0, #8]
  42eaf0:	cmp	x1, x19
  42eaf4:	b.ls	42eb2c <ferror@plt+0x2bdfc>  // b.plast
  42eaf8:	add	x1, x22, x19
  42eafc:	ldrb	w2, [x22, x19]
  42eb00:	tst	w2, #0xffffff80
  42eb04:	b.ne	42eab0 <ferror@plt+0x2bd80>  // b.any
  42eb08:	ldr	x0, [x0]
  42eb0c:	ldrb	w1, [x0, x19]
  42eb10:	ldr	x0, [x20, #40]
  42eb14:	ldr	x2, [x20, #48]
  42eb18:	cmp	x0, x2
  42eb1c:	b.cc	42ead8 <ferror@plt+0x2bda8>  // b.lo, b.ul, b.last
  42eb20:	mov	x0, x20
  42eb24:	bl	4029a0 <__overflow@plt>
  42eb28:	b	42eae4 <ferror@plt+0x2bdb4>
  42eb2c:	ldp	x23, x24, [sp, #48]
  42eb30:	b	42ea10 <ferror@plt+0x2bce0>
  42eb34:	mov	x3, x20
  42eb38:	ldr	w2, [x21, #8]
  42eb3c:	mov	x1, #0x1                   	// #1
  42eb40:	ldr	x0, [x21, #16]
  42eb44:	bl	402660 <fwrite_unlocked@plt>
  42eb48:	b	42ea10 <ferror@plt+0x2bce0>
  42eb4c:	ldr	w3, [x0, #4]
  42eb50:	and	w3, w3, #0xffff00ff
  42eb54:	ldr	w2, [x1, #4]
  42eb58:	and	w2, w2, #0xffff00ff
  42eb5c:	cmp	w3, w2
  42eb60:	b.eq	42eb6c <ferror@plt+0x2be3c>  // b.none
  42eb64:	mov	w0, #0x0                   	// #0
  42eb68:	ret
  42eb6c:	ldrb	w3, [x0, #4]
  42eb70:	sbfiz	x4, x3, #4, #32
  42eb74:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42eb78:	add	x2, x2, #0xf28
  42eb7c:	ldr	w2, [x2, x4]
  42eb80:	cmp	w2, #0x2
  42eb84:	b.eq	42ec2c <ferror@plt+0x2befc>  // b.none
  42eb88:	cmp	w2, #0x3
  42eb8c:	b.eq	42ebc0 <ferror@plt+0x2be90>  // b.none
  42eb90:	cmp	w2, #0x1
  42eb94:	b.eq	42ebfc <ferror@plt+0x2becc>  // b.none
  42eb98:	mov	w2, #0x1                   	// #1
  42eb9c:	cmp	w3, #0x26
  42eba0:	b.eq	42ebac <ferror@plt+0x2be7c>  // b.none
  42eba4:	mov	w0, w2
  42eba8:	ret
  42ebac:	ldr	w2, [x0, #8]
  42ebb0:	ldr	w0, [x1, #8]
  42ebb4:	cmp	w2, w0
  42ebb8:	cset	w2, eq  // eq = none
  42ebbc:	b	42eba4 <ferror@plt+0x2be74>
  42ebc0:	mov	w2, #0x1                   	// #1
  42ebc4:	cmp	w3, #0x50
  42ebc8:	b.eq	42ebd4 <ferror@plt+0x2bea4>  // b.none
  42ebcc:	mov	w0, w2
  42ebd0:	ret
  42ebd4:	ldr	w4, [x0, #8]
  42ebd8:	ldr	w3, [x1, #8]
  42ebdc:	mov	w2, #0x0                   	// #0
  42ebe0:	cmp	w4, w3
  42ebe4:	b.ne	42ebcc <ferror@plt+0x2be9c>  // b.any
  42ebe8:	ldr	x2, [x0, #16]
  42ebec:	ldr	x0, [x1, #16]
  42ebf0:	cmp	x2, x0
  42ebf4:	cset	w2, eq  // eq = none
  42ebf8:	b	42ebcc <ferror@plt+0x2be9c>
  42ebfc:	ldr	x4, [x0, #8]
  42ec00:	ldr	x3, [x1, #8]
  42ec04:	mov	w2, #0x0                   	// #0
  42ec08:	cmp	x4, x3
  42ec0c:	b.eq	42ec18 <ferror@plt+0x2bee8>  // b.none
  42ec10:	mov	w0, w2
  42ec14:	ret
  42ec18:	ldr	x2, [x0, #16]
  42ec1c:	ldr	x0, [x1, #16]
  42ec20:	cmp	x2, x0
  42ec24:	cset	w2, eq  // eq = none
  42ec28:	b	42ec10 <ferror@plt+0x2bee0>
  42ec2c:	ldr	w2, [x0, #8]
  42ec30:	ldr	w4, [x1, #8]
  42ec34:	mov	w3, #0x0                   	// #0
  42ec38:	cmp	w2, w4
  42ec3c:	b.eq	42ec48 <ferror@plt+0x2bf18>  // b.none
  42ec40:	mov	w0, w3
  42ec44:	ret
  42ec48:	stp	x29, x30, [sp, #-16]!
  42ec4c:	mov	x29, sp
  42ec50:	mov	w2, w2
  42ec54:	ldr	x1, [x1, #16]
  42ec58:	ldr	x0, [x0, #16]
  42ec5c:	bl	4029e0 <memcmp@plt>
  42ec60:	cmp	w0, #0x0
  42ec64:	cset	w3, eq  // eq = none
  42ec68:	mov	w0, w3
  42ec6c:	ldp	x29, x30, [sp], #16
  42ec70:	ret
  42ec74:	mov	x8, x0
  42ec78:	ldrb	w3, [x1, #4]
  42ec7c:	ldrb	w6, [x2, #4]
  42ec80:	ldrh	w4, [x1, #6]
  42ec84:	tst	x4, #0x10
  42ec88:	mov	w4, #0x35                  	// #53
  42ec8c:	csel	w3, w3, w4, eq  // eq = none
  42ec90:	ldrh	w5, [x2, #6]
  42ec94:	tst	x5, #0x10
  42ec98:	csel	w4, w6, w4, eq  // eq = none
  42ec9c:	tbz	w5, #1, 42ed00 <ferror@plt+0x2bfd0>
  42eca0:	adrp	x5, 479000 <_obstack_memory_used@@Base+0x24c60>
  42eca4:	add	x5, x5, #0xf28
  42eca8:	add	x5, x5, #0x540
  42ecac:	sub	w0, w4, #0x25
  42ecb0:	ldr	x0, [x5, w0, sxtw #3]
  42ecb4:	ldrb	w5, [x0]
  42ecb8:	cmp	w5, #0x3d
  42ecbc:	mov	w0, #0x1                   	// #1
  42ecc0:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  42ecc4:	b.le	42efc0 <ferror@plt+0x2c290>
  42ecc8:	mov	w7, w4
  42eccc:	cmp	w3, #0x12
  42ecd0:	b.eq	42eecc <ferror@plt+0x2c19c>  // b.none
  42ecd4:	b.hi	42eda0 <ferror@plt+0x2c070>  // b.pmore
  42ecd8:	cmp	w3, #0x7
  42ecdc:	b.eq	42eeac <ferror@plt+0x2c17c>  // b.none
  42ece0:	b.ls	42ed2c <ferror@plt+0x2bffc>  // b.plast
  42ece4:	cmp	w3, #0x9
  42ece8:	b.eq	42eec0 <ferror@plt+0x2c190>  // b.none
  42ecec:	cmp	w3, #0xa
  42ecf0:	b.ne	42ed84 <ferror@plt+0x2c054>  // b.any
  42ecf4:	cmp	w5, #0x7c
  42ecf8:	cset	w0, eq  // eq = none
  42ecfc:	b	42efc0 <ferror@plt+0x2c290>
  42ed00:	sbfiz	x5, x4, #4, #32
  42ed04:	adrp	x7, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ed08:	add	x7, x7, #0xf28
  42ed0c:	ldr	w0, [x7, x5]
  42ed10:	cbnz	w0, 42ed24 <ferror@plt+0x2bff4>
  42ed14:	add	x0, x7, w4, sxtw #4
  42ed18:	ldr	x0, [x0, #8]
  42ed1c:	ldrb	w5, [x0]
  42ed20:	b	42ecb8 <ferror@plt+0x2bf88>
  42ed24:	mov	w5, #0xffffffff            	// #-1
  42ed28:	b	42ecc8 <ferror@plt+0x2bf98>
  42ed2c:	cmp	w3, #0x4
  42ed30:	b.eq	42eea0 <ferror@plt+0x2c170>  // b.none
  42ed34:	b.ls	42ed58 <ferror@plt+0x2c028>  // b.plast
  42ed38:	mov	w0, #0x0                   	// #0
  42ed3c:	cmp	w3, #0x5
  42ed40:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42ed44:	cmp	w5, #0x2d
  42ed48:	mov	w0, #0x3e                  	// #62
  42ed4c:	ccmp	w5, w0, #0x4, ne  // ne = any
  42ed50:	cset	w0, eq  // eq = none
  42ed54:	b	42efc0 <ferror@plt+0x2c290>
  42ed58:	cmp	w3, #0x2
  42ed5c:	b.eq	42ee94 <ferror@plt+0x2c164>  // b.none
  42ed60:	mov	w0, #0x0                   	// #0
  42ed64:	cmp	w3, #0x3
  42ed68:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42ed6c:	sub	w0, w5, #0x3a
  42ed70:	and	w0, w0, #0xfffffffd
  42ed74:	cmp	w5, #0x25
  42ed78:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42ed7c:	cset	w0, eq  // eq = none
  42ed80:	b	42efc0 <ferror@plt+0x2c290>
  42ed84:	mov	w0, #0x0                   	// #0
  42ed88:	cmp	w3, #0x8
  42ed8c:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42ed90:	and	w5, w5, #0xfffffffb
  42ed94:	cmp	w5, #0x3a
  42ed98:	cset	w0, eq  // eq = none
  42ed9c:	b	42efc0 <ferror@plt+0x2c290>
  42eda0:	cmp	w3, #0x35
  42eda4:	b.eq	42eee8 <ferror@plt+0x2c1b8>  // b.none
  42eda8:	b.ls	42ee14 <ferror@plt+0x2c0e4>  // b.plast
  42edac:	cmp	w3, #0x3d
  42edb0:	b.eq	42ef74 <ferror@plt+0x2c244>  // b.none
  42edb4:	b.ls	42ee5c <ferror@plt+0x2c12c>  // b.plast
  42edb8:	sub	w3, w3, #0x3e
  42edbc:	cmp	w3, #0x4
  42edc0:	b.hi	42efbc <ferror@plt+0x2c28c>  // b.pmore
  42edc4:	ldrb	w1, [x8, #1161]
  42edc8:	mov	w0, #0x0                   	// #0
  42edcc:	cbz	w1, 42efc0 <ferror@plt+0x2c290>
  42edd0:	mov	w0, #0x1                   	// #1
  42edd4:	cmp	w4, #0x35
  42edd8:	b.eq	42efc0 <ferror@plt+0x2c290>  // b.none
  42eddc:	sbfiz	x6, x6, #4, #32
  42ede0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ede4:	add	x0, x0, #0xf28
  42ede8:	ldr	w1, [x0, x6]
  42edec:	mov	w0, #0x0                   	// #0
  42edf0:	cmp	w1, #0x2
  42edf4:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42edf8:	ldr	x0, [x2, #16]
  42edfc:	ldrb	w1, [x0]
  42ee00:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42ee04:	add	x0, x0, #0x28
  42ee08:	ldrh	w0, [x0, x1, lsl #1]
  42ee0c:	ubfx	x0, x0, #9, #1
  42ee10:	b	42efc0 <ferror@plt+0x2c290>
  42ee14:	cmp	w3, #0x2f
  42ee18:	b.eq	42eedc <ferror@plt+0x2c1ac>  // b.none
  42ee1c:	cmp	w3, #0x30
  42ee20:	b.ne	42ee40 <ferror@plt+0x2c110>  // b.any
  42ee24:	cmp	w5, #0x2e
  42ee28:	mov	w0, #0x25                  	// #37
  42ee2c:	ccmp	w5, w0, #0x4, ne  // ne = any
  42ee30:	mov	w0, #0x37                  	// #55
  42ee34:	ccmp	w4, w0, #0x4, ne  // ne = any
  42ee38:	cset	w0, eq  // eq = none
  42ee3c:	b	42efc0 <ferror@plt+0x2c290>
  42ee40:	mov	w0, #0x0                   	// #0
  42ee44:	cmp	w3, #0x25
  42ee48:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42ee4c:	sub	w5, w5, #0x23
  42ee50:	tst	w5, #0xfffffffd
  42ee54:	cset	w0, eq  // eq = none
  42ee58:	b	42efc0 <ferror@plt+0x2c290>
  42ee5c:	mov	w0, #0x0                   	// #0
  42ee60:	cmp	w3, #0x37
  42ee64:	b.ne	42efc0 <ferror@plt+0x2c290>  // b.any
  42ee68:	and	w4, w4, #0xfffffffd
  42ee6c:	and	w4, w4, #0xff
  42ee70:	mov	w0, #0x1                   	// #1
  42ee74:	cmp	w4, #0x35
  42ee78:	b.eq	42efc0 <ferror@plt+0x2c290>  // b.none
  42ee7c:	sub	w0, w5, #0x2d
  42ee80:	cmp	w0, #0x1
  42ee84:	cset	w0, ls  // ls = plast
  42ee88:	cmp	w5, #0x2b
  42ee8c:	csinc	w0, w0, wzr, ne  // ne = any
  42ee90:	b	42efc0 <ferror@plt+0x2c290>
  42ee94:	cmp	w5, #0x3e
  42ee98:	cset	w0, eq  // eq = none
  42ee9c:	b	42efc0 <ferror@plt+0x2c290>
  42eea0:	cmp	w5, #0x2b
  42eea4:	cset	w0, eq  // eq = none
  42eea8:	b	42efc0 <ferror@plt+0x2c290>
  42eeac:	cmp	w5, #0x2f
  42eeb0:	mov	w0, #0x2a                  	// #42
  42eeb4:	ccmp	w5, w0, #0x4, ne  // ne = any
  42eeb8:	cset	w0, eq  // eq = none
  42eebc:	b	42efc0 <ferror@plt+0x2c290>
  42eec0:	cmp	w5, #0x26
  42eec4:	cset	w0, eq  // eq = none
  42eec8:	b	42efc0 <ferror@plt+0x2c290>
  42eecc:	and	w5, w5, #0xfffffffb
  42eed0:	cmp	w5, #0x3a
  42eed4:	cset	w0, eq  // eq = none
  42eed8:	b	42efc0 <ferror@plt+0x2c290>
  42eedc:	cmp	w5, #0x2a
  42eee0:	cset	w0, eq  // eq = none
  42eee4:	b	42efc0 <ferror@plt+0x2c290>
  42eee8:	cmp	w4, #0x37
  42eeec:	b.eq	42ef0c <ferror@plt+0x2c1dc>  // b.none
  42eef0:	cmp	w7, #0x35
  42eef4:	mov	w0, #0x38                  	// #56
  42eef8:	ccmp	w7, w0, #0x4, ne  // ne = any
  42eefc:	cset	w0, eq  // eq = none
  42ef00:	cmp	w7, #0x3e
  42ef04:	csinc	w0, w0, wzr, ne  // ne = any
  42ef08:	b	42efc0 <ferror@plt+0x2c290>
  42ef0c:	ldr	w1, [x2, #8]
  42ef10:	cbz	w1, 42ef64 <ferror@plt+0x2c234>
  42ef14:	ldr	x0, [x2, #16]
  42ef18:	sub	w1, w1, #0x1
  42ef1c:	add	x3, x0, #0x1
  42ef20:	add	x3, x1, x3
  42ef24:	adrp	x4, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42ef28:	add	x4, x4, #0x28
  42ef2c:	mov	w5, #0x204                 	// #516
  42ef30:	b	42ef40 <ferror@plt+0x2c210>
  42ef34:	add	x0, x0, #0x1
  42ef38:	cmp	x3, x0
  42ef3c:	b.eq	42ef6c <ferror@plt+0x2c23c>  // b.none
  42ef40:	ldrb	w1, [x0]
  42ef44:	ldrh	w2, [x4, w1, sxtw #1]
  42ef48:	tst	w5, w2
  42ef4c:	b.ne	42ef34 <ferror@plt+0x2c204>  // b.any
  42ef50:	cmp	w1, #0x24
  42ef54:	b.ne	42eef0 <ferror@plt+0x2c1c0>  // b.any
  42ef58:	ldrb	w1, [x8, #1146]
  42ef5c:	cbnz	w1, 42ef34 <ferror@plt+0x2c204>
  42ef60:	b	42eef0 <ferror@plt+0x2c1c0>
  42ef64:	mov	w0, #0x1                   	// #1
  42ef68:	b	42efc0 <ferror@plt+0x2c290>
  42ef6c:	mov	w0, #0x1                   	// #1
  42ef70:	b	42efc0 <ferror@plt+0x2c290>
  42ef74:	ldr	x0, [x1, #16]
  42ef78:	ldrb	w2, [x0]
  42ef7c:	cmp	w4, #0x35
  42ef80:	cset	w3, eq  // eq = none
  42ef84:	cmp	w2, #0x5c
  42ef88:	csel	w1, w3, wzr, eq  // eq = none
  42ef8c:	cbnz	w1, 42efa8 <ferror@plt+0x2c278>
  42ef90:	ldrb	w0, [x8, #1122]
  42ef94:	cmp	w0, #0x0
  42ef98:	cset	w0, ne  // ne = any
  42ef9c:	cmp	w2, #0x40
  42efa0:	csel	w1, w0, wzr, eq  // eq = none
  42efa4:	cbnz	w1, 42efb0 <ferror@plt+0x2c280>
  42efa8:	mov	w0, w1
  42efac:	b	42efc0 <ferror@plt+0x2c290>
  42efb0:	cmp	w4, #0x3e
  42efb4:	csinc	w1, w3, wzr, ne  // ne = any
  42efb8:	b	42efa8 <ferror@plt+0x2c278>
  42efbc:	mov	w0, #0x0                   	// #0
  42efc0:	ret
  42efc4:	stp	x29, x30, [sp, #-64]!
  42efc8:	mov	x29, sp
  42efcc:	stp	x19, x20, [sp, #16]
  42efd0:	stp	x21, x22, [sp, #32]
  42efd4:	mov	x21, x0
  42efd8:	mov	x20, x1
  42efdc:	bl	438a9c <ferror@plt+0x35d6c>
  42efe0:	mov	x19, x0
  42efe4:	ldrb	w0, [x0, #4]
  42efe8:	cmp	w0, #0x16
  42efec:	b.eq	42f05c <ferror@plt+0x2c32c>  // b.none
  42eff0:	str	x23, [sp, #48]
  42eff4:	mov	w22, #0x20                  	// #32
  42eff8:	mov	w23, #0x20                  	// #32
  42effc:	b	42f018 <ferror@plt+0x2c2e8>
  42f000:	add	x0, x1, #0x1
  42f004:	str	x0, [x20, #40]
  42f008:	strb	w22, [x1]
  42f00c:	ldrb	w1, [x19, #4]
  42f010:	cmp	w1, #0x16
  42f014:	b.eq	42f058 <ferror@plt+0x2c328>  // b.none
  42f018:	mov	x1, x20
  42f01c:	mov	x0, x19
  42f020:	bl	42e9d0 <ferror@plt+0x2bca0>
  42f024:	mov	x0, x21
  42f028:	bl	438a9c <ferror@plt+0x35d6c>
  42f02c:	mov	x19, x0
  42f030:	ldrh	w2, [x0, #6]
  42f034:	tbz	w2, #0, 42f00c <ferror@plt+0x2c2dc>
  42f038:	ldr	x1, [x20, #40]
  42f03c:	ldr	x0, [x20, #48]
  42f040:	cmp	x1, x0
  42f044:	b.cc	42f000 <ferror@plt+0x2c2d0>  // b.lo, b.ul, b.last
  42f048:	mov	w1, w23
  42f04c:	mov	x0, x20
  42f050:	bl	4029a0 <__overflow@plt>
  42f054:	b	42f00c <ferror@plt+0x2c2dc>
  42f058:	ldr	x23, [sp, #48]
  42f05c:	ldr	x0, [x20, #40]
  42f060:	ldr	x1, [x20, #48]
  42f064:	cmp	x0, x1
  42f068:	b.cs	42f08c <ferror@plt+0x2c35c>  // b.hs, b.nlast
  42f06c:	add	x1, x0, #0x1
  42f070:	str	x1, [x20, #40]
  42f074:	mov	w1, #0xa                   	// #10
  42f078:	strb	w1, [x0]
  42f07c:	ldp	x19, x20, [sp, #16]
  42f080:	ldp	x21, x22, [sp, #32]
  42f084:	ldp	x29, x30, [sp], #64
  42f088:	ret
  42f08c:	mov	w1, #0xa                   	// #10
  42f090:	mov	x0, x20
  42f094:	bl	4029a0 <__overflow@plt>
  42f098:	b	42f07c <ferror@plt+0x2c34c>
  42f09c:	stp	x29, x30, [sp, #-80]!
  42f0a0:	mov	x29, sp
  42f0a4:	stp	x19, x20, [sp, #16]
  42f0a8:	stp	x21, x22, [sp, #32]
  42f0ac:	stp	x23, x24, [sp, #48]
  42f0b0:	str	x25, [sp, #64]
  42f0b4:	mov	x22, x0
  42f0b8:	cbz	x1, 42f190 <ferror@plt+0x2c460>
  42f0bc:	mov	x19, x1
  42f0c0:	mov	x0, x1
  42f0c4:	bl	402680 <strlen@plt>
  42f0c8:	mov	x25, x0
  42f0cc:	add	w23, w0, #0x78
  42f0d0:	add	w0, w0, #0x78
  42f0d4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42f0d8:	mov	x21, x0
  42f0dc:	mov	x2, x19
  42f0e0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  42f0e4:	add	x1, x1, #0x758
  42f0e8:	bl	402720 <sprintf@plt>
  42f0ec:	add	w25, w25, #0x2
  42f0f0:	mov	x0, x22
  42f0f4:	bl	438a9c <ferror@plt+0x35d6c>
  42f0f8:	mov	x19, x0
  42f0fc:	ldrb	w0, [x0, #4]
  42f100:	cmp	w0, #0x16
  42f104:	b.eq	42f1a8 <ferror@plt+0x2c478>  // b.none
  42f108:	mov	w24, #0x20                  	// #32
  42f10c:	b	42f11c <ferror@plt+0x2c3ec>
  42f110:	ldrb	w0, [x19, #4]
  42f114:	cmp	w0, #0x16
  42f118:	b.eq	42f1a8 <ferror@plt+0x2c478>  // b.none
  42f11c:	mov	x0, x19
  42f120:	bl	42e6bc <ferror@plt+0x2b98c>
  42f124:	add	w1, w0, w25
  42f128:	add	w1, w1, #0x2
  42f12c:	cmp	w1, w23
  42f130:	b.hi	42f170 <ferror@plt+0x2c440>  // b.pmore
  42f134:	mov	w3, #0x0                   	// #0
  42f138:	add	x2, x21, w25, uxtw
  42f13c:	mov	x1, x19
  42f140:	mov	x0, x22
  42f144:	bl	42e788 <ferror@plt+0x2ba58>
  42f148:	sub	x20, x0, x21
  42f14c:	mov	w25, w20
  42f150:	mov	x0, x22
  42f154:	bl	438a9c <ferror@plt+0x35d6c>
  42f158:	mov	x19, x0
  42f15c:	ldrh	w0, [x0, #6]
  42f160:	tbz	w0, #0, 42f110 <ferror@plt+0x2c3e0>
  42f164:	add	w25, w20, #0x1
  42f168:	strb	w24, [x21, w20, uxtw]
  42f16c:	b	42f110 <ferror@plt+0x2c3e0>
  42f170:	lsl	w0, w23, #1
  42f174:	cmp	w1, w0
  42f178:	csel	w23, w1, w0, cs  // cs = hs, nlast
  42f17c:	csel	w1, w1, w0, cs  // cs = hs, nlast
  42f180:	mov	x0, x21
  42f184:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  42f188:	mov	x21, x0
  42f18c:	b	42f134 <ferror@plt+0x2c404>
  42f190:	mov	x0, #0x78                  	// #120
  42f194:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42f198:	mov	x21, x0
  42f19c:	mov	w23, #0x78                  	// #120
  42f1a0:	mov	w25, #0x0                   	// #0
  42f1a4:	b	42f0f0 <ferror@plt+0x2c3c0>
  42f1a8:	strb	wzr, [x21, w25, uxtw]
  42f1ac:	mov	x0, x21
  42f1b0:	ldp	x19, x20, [sp, #16]
  42f1b4:	ldp	x21, x22, [sp, #32]
  42f1b8:	ldp	x23, x24, [sp, #48]
  42f1bc:	ldr	x25, [sp, #64]
  42f1c0:	ldp	x29, x30, [sp], #80
  42f1c4:	ret
  42f1c8:	mov	x2, x1
  42f1cc:	mov	x3, x2
  42f1d0:	ldr	x2, [x2]
  42f1d4:	cbnz	x2, 42f1cc <ferror@plt+0x2c49c>
  42f1d8:	ldr	x2, [x0, #72]
  42f1dc:	str	x2, [x3]
  42f1e0:	str	x1, [x0, #72]
  42f1e4:	ret
  42f1e8:	add	x4, x0, #0x48
  42f1ec:	ldr	x0, [x0, #72]
  42f1f0:	cbz	x0, 42f204 <ferror@plt+0x2c4d4>
  42f1f4:	add	x5, x1, x1, lsl #1
  42f1f8:	mov	x2, #0x1f40                	// #8000
  42f1fc:	add	x5, x2, x5, lsr #1
  42f200:	b	42f25c <ferror@plt+0x2c52c>
  42f204:	stp	x29, x30, [sp, #-32]!
  42f208:	mov	x29, sp
  42f20c:	str	x19, [sp, #16]
  42f210:	mov	x19, #0x1f40                	// #8000
  42f214:	cmp	x1, x19
  42f218:	csel	x19, x1, x19, cs  // cs = hs, nlast
  42f21c:	add	x19, x19, #0x7
  42f220:	and	x19, x19, #0xfffffffffffffff8
  42f224:	add	x0, x19, #0x20
  42f228:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  42f22c:	mov	x1, x0
  42f230:	add	x0, x0, x19
  42f234:	str	x1, [x0, #8]
  42f238:	str	x1, [x0, #16]
  42f23c:	str	x0, [x0, #24]
  42f240:	str	xzr, [x1, x19]
  42f244:	ldr	x19, [sp, #16]
  42f248:	ldp	x29, x30, [sp], #32
  42f24c:	ret
  42f250:	mov	x4, x0
  42f254:	ldr	x0, [x0]
  42f258:	cbz	x0, 42f204 <ferror@plt+0x2c4d4>
  42f25c:	ldr	x2, [x0, #24]
  42f260:	ldr	x3, [x0, #8]
  42f264:	sub	x2, x2, x3
  42f268:	cmp	x2, x1
  42f26c:	b.cc	42f250 <ferror@plt+0x2c520>  // b.lo, b.ul, b.last
  42f270:	cmp	x5, x2
  42f274:	b.cc	42f250 <ferror@plt+0x2c520>  // b.lo, b.ul, b.last
  42f278:	ldr	x1, [x0]
  42f27c:	str	x1, [x4]
  42f280:	str	xzr, [x0]
  42f284:	ldr	x1, [x0, #8]
  42f288:	str	x1, [x0, #16]
  42f28c:	ret
  42f290:	stp	x29, x30, [sp, #-32]!
  42f294:	mov	x29, sp
  42f298:	stp	x19, x20, [sp, #16]
  42f29c:	mov	x19, x1
  42f2a0:	ldr	x3, [x1, #24]
  42f2a4:	ldr	x1, [x1, #16]
  42f2a8:	sub	x1, x3, x1
  42f2ac:	add	x1, x2, x1, lsl #1
  42f2b0:	bl	42f1e8 <ferror@plt+0x2c4b8>
  42f2b4:	mov	x20, x0
  42f2b8:	str	x0, [x19]
  42f2bc:	ldr	x1, [x19, #16]
  42f2c0:	ldr	x2, [x19, #24]
  42f2c4:	sub	x2, x2, x1
  42f2c8:	ldr	x0, [x0, #8]
  42f2cc:	bl	402620 <memcpy@plt>
  42f2d0:	mov	x0, x20
  42f2d4:	ldp	x19, x20, [sp, #16]
  42f2d8:	ldp	x29, x30, [sp], #32
  42f2dc:	ret
  42f2e0:	stp	x29, x30, [sp, #-80]!
  42f2e4:	mov	x29, sp
  42f2e8:	stp	x19, x20, [sp, #16]
  42f2ec:	stp	x21, x22, [sp, #32]
  42f2f0:	stp	x23, x24, [sp, #48]
  42f2f4:	stp	x25, x26, [sp, #64]
  42f2f8:	mov	x26, x0
  42f2fc:	mov	x24, x1
  42f300:	mov	x20, x2
  42f304:	mov	x23, x3
  42f308:	mov	x21, x4
  42f30c:	ldr	x25, [x3]
  42f310:	ldr	x19, [x4]
  42f314:	cbz	x25, 42f368 <ferror@plt+0x2c638>
  42f318:	ldr	x0, [x19, #16]
  42f31c:	ldr	x22, [x19, #24]
  42f320:	sub	x22, x22, x0
  42f324:	cmp	x22, x2
  42f328:	b.cc	42f37c <ferror@plt+0x2c64c>  // b.lo, b.ul, b.last
  42f32c:	mov	x2, x20
  42f330:	mov	x1, x24
  42f334:	ldr	x0, [x19, #16]
  42f338:	bl	402620 <memcpy@plt>
  42f33c:	ldr	x2, [x19, #16]
  42f340:	add	x20, x2, x20
  42f344:	str	x20, [x19, #16]
  42f348:	str	x25, [x23]
  42f34c:	str	x19, [x21]
  42f350:	ldp	x19, x20, [sp, #16]
  42f354:	ldp	x21, x22, [sp, #32]
  42f358:	ldp	x23, x24, [sp, #48]
  42f35c:	ldp	x25, x26, [sp, #64]
  42f360:	ldp	x29, x30, [sp], #80
  42f364:	ret
  42f368:	mov	x1, x2
  42f36c:	bl	42f1e8 <ferror@plt+0x2c4b8>
  42f370:	mov	x25, x0
  42f374:	mov	x19, x0
  42f378:	b	42f32c <ferror@plt+0x2c5fc>
  42f37c:	mov	x2, x22
  42f380:	bl	402620 <memcpy@plt>
  42f384:	ldr	x0, [x19, #16]
  42f388:	add	x0, x0, x22
  42f38c:	str	x0, [x19, #16]
  42f390:	add	x24, x24, x22
  42f394:	sub	x20, x20, x22
  42f398:	mov	x2, x20
  42f39c:	mov	x1, x19
  42f3a0:	mov	x0, x26
  42f3a4:	bl	42f290 <ferror@plt+0x2c560>
  42f3a8:	mov	x19, x0
  42f3ac:	b	42f32c <ferror@plt+0x2c5fc>
  42f3b0:	stp	x29, x30, [sp, #-48]!
  42f3b4:	mov	x29, sp
  42f3b8:	stp	x19, x20, [sp, #16]
  42f3bc:	str	x21, [sp, #32]
  42f3c0:	mov	x21, x1
  42f3c4:	ldr	x20, [x1]
  42f3c8:	ldr	x3, [x20, #24]
  42f3cc:	ldr	x1, [x20, #16]
  42f3d0:	sub	x1, x3, x1
  42f3d4:	add	x1, x2, x1, lsl #1
  42f3d8:	bl	42f1e8 <ferror@plt+0x2c4b8>
  42f3dc:	mov	x19, x0
  42f3e0:	ldr	x1, [x20, #16]
  42f3e4:	ldr	x2, [x20, #24]
  42f3e8:	sub	x2, x2, x1
  42f3ec:	ldr	x0, [x0, #8]
  42f3f0:	bl	402620 <memcpy@plt>
  42f3f4:	str	x20, [x19]
  42f3f8:	str	x19, [x21]
  42f3fc:	ldp	x19, x20, [sp, #16]
  42f400:	ldr	x21, [sp, #32]
  42f404:	ldp	x29, x30, [sp], #48
  42f408:	ret
  42f40c:	stp	x29, x30, [sp, #-32]!
  42f410:	mov	x29, sp
  42f414:	str	x19, [sp, #16]
  42f418:	mov	x19, x0
  42f41c:	cbz	x0, 42f434 <ferror@plt+0x2c704>
  42f420:	mov	x0, x19
  42f424:	ldr	x19, [x19]
  42f428:	ldr	x0, [x0, #8]
  42f42c:	bl	402a90 <free@plt>
  42f430:	cbnz	x19, 42f420 <ferror@plt+0x2c6f0>
  42f434:	ldr	x19, [sp, #16]
  42f438:	ldp	x29, x30, [sp], #32
  42f43c:	ret
  42f440:	stp	x29, x30, [sp, #-32]!
  42f444:	mov	x29, sp
  42f448:	stp	x19, x20, [sp, #16]
  42f44c:	mov	x20, x0
  42f450:	mov	x19, x1
  42f454:	ldr	x1, [x0, #64]
  42f458:	ldr	x0, [x1, #16]
  42f45c:	ldr	x2, [x1, #24]
  42f460:	sub	x2, x2, x0
  42f464:	cmp	x2, x19
  42f468:	b.cc	42f480 <ferror@plt+0x2c750>  // b.lo, b.ul, b.last
  42f46c:	add	x19, x0, x19
  42f470:	str	x19, [x1, #16]
  42f474:	ldp	x19, x20, [sp, #16]
  42f478:	ldp	x29, x30, [sp], #32
  42f47c:	ret
  42f480:	mov	x1, x19
  42f484:	mov	x0, x20
  42f488:	bl	42f1e8 <ferror@plt+0x2c4b8>
  42f48c:	mov	x1, x0
  42f490:	ldr	x0, [x20, #64]
  42f494:	str	x0, [x1]
  42f498:	str	x1, [x20, #64]
  42f49c:	ldr	x0, [x1, #16]
  42f4a0:	b	42f46c <ferror@plt+0x2c73c>
  42f4a4:	stp	x29, x30, [sp, #-80]!
  42f4a8:	mov	x29, sp
  42f4ac:	stp	x19, x20, [sp, #16]
  42f4b0:	stp	x21, x22, [sp, #32]
  42f4b4:	stp	x23, x24, [sp, #48]
  42f4b8:	str	x25, [sp, #64]
  42f4bc:	mov	x22, x0
  42f4c0:	mov	x23, x1
  42f4c4:	mov	x20, x2
  42f4c8:	ldr	x0, [x0]
  42f4cc:	ldr	x24, [x0]
  42f4d0:	sub	x24, x24, #0x1
  42f4d4:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  42f4d8:	add	x21, x21, #0x28
  42f4dc:	mov	w25, #0x204                 	// #516
  42f4e0:	b	42f5a4 <ferror@plt+0x2c874>
  42f4e4:	ldrb	w1, [x22, #1166]
  42f4e8:	cbz	w1, 42f554 <ferror@plt+0x2c824>
  42f4ec:	str	w0, [x20]
  42f4f0:	strb	wzr, [x20, #4]
  42f4f4:	add	x19, x19, #0x1
  42f4f8:	ldrb	w0, [x19]
  42f4fc:	ldrh	w1, [x21, w0, sxtw #1]
  42f500:	and	w1, w25, w1
  42f504:	cmp	w0, #0x2e
  42f508:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42f50c:	b.ne	42f4ec <ferror@plt+0x2c7bc>  // b.any
  42f510:	cmp	w0, #0x27
  42f514:	b.eq	42f4e4 <ferror@plt+0x2c7b4>  // b.none
  42f518:	sub	w1, w0, #0x2b
  42f51c:	and	w1, w1, #0xfffffffd
  42f520:	tst	w1, #0xff
  42f524:	b.ne	42f554 <ferror@plt+0x2c824>  // b.any
  42f528:	ldurb	w1, [x19, #-1]
  42f52c:	and	w1, w1, #0xffffffdf
  42f530:	and	w1, w1, #0xff
  42f534:	cmp	w1, #0x45
  42f538:	b.eq	42f4ec <ferror@plt+0x2c7bc>  // b.none
  42f53c:	cmp	w1, #0x50
  42f540:	b.ne	42f554 <ferror@plt+0x2c824>  // b.any
  42f544:	ldrb	w1, [x22, #1127]
  42f548:	cbnz	w1, 42f4ec <ferror@plt+0x2c7bc>
  42f54c:	ldr	x2, [x22]
  42f550:	b	42f588 <ferror@plt+0x2c858>
  42f554:	ldr	x2, [x22]
  42f558:	ldr	x1, [x2]
  42f55c:	cmp	x19, x1
  42f560:	b.ls	42f588 <ferror@plt+0x2c858>  // b.plast
  42f564:	ldurb	w0, [x19, #-1]
  42f568:	cmp	w0, #0x27
  42f56c:	b.ne	42f588 <ferror@plt+0x2c858>  // b.any
  42f570:	ldrb	w0, [x22, #1166]
  42f574:	cbz	w0, 42f588 <ferror@plt+0x2c858>
  42f578:	sub	x19, x19, #0x1
  42f57c:	cmp	x19, x1
  42f580:	b.ne	42f564 <ferror@plt+0x2c834>  // b.any
  42f584:	mov	x19, x1
  42f588:	str	x19, [x2]
  42f58c:	mov	x2, x20
  42f590:	mov	w1, #0x0                   	// #0
  42f594:	mov	x0, x22
  42f598:	bl	42d6c4 <ferror@plt+0x2a994>
  42f59c:	and	w0, w0, #0xff
  42f5a0:	cbz	w0, 42f5b0 <ferror@plt+0x2c880>
  42f5a4:	ldr	x0, [x22]
  42f5a8:	ldr	x19, [x0]
  42f5ac:	b	42f4f8 <ferror@plt+0x2c7c8>
  42f5b0:	sub	x1, x19, x24
  42f5b4:	str	w1, [x23]
  42f5b8:	add	w1, w1, #0x1
  42f5bc:	mov	x0, x22
  42f5c0:	bl	42f440 <ferror@plt+0x2c710>
  42f5c4:	mov	x19, x0
  42f5c8:	ldr	w2, [x23]
  42f5cc:	mov	x1, x24
  42f5d0:	bl	402620 <memcpy@plt>
  42f5d4:	ldr	w0, [x23]
  42f5d8:	strb	wzr, [x19, x0]
  42f5dc:	str	x19, [x23, #8]
  42f5e0:	ldp	x19, x20, [sp, #16]
  42f5e4:	ldp	x21, x22, [sp, #32]
  42f5e8:	ldp	x23, x24, [sp, #48]
  42f5ec:	ldr	x25, [sp, #64]
  42f5f0:	ldp	x29, x30, [sp], #80
  42f5f4:	ret
  42f5f8:	stp	x29, x30, [sp, #-64]!
  42f5fc:	mov	x29, sp
  42f600:	stp	x19, x20, [sp, #16]
  42f604:	stp	x21, x22, [sp, #32]
  42f608:	str	x23, [sp, #48]
  42f60c:	mov	x20, x1
  42f610:	mov	x23, x2
  42f614:	mov	w19, w3
  42f618:	mov	w22, w4
  42f61c:	add	w1, w3, #0x1
  42f620:	bl	42f440 <ferror@plt+0x2c710>
  42f624:	mov	x21, x0
  42f628:	mov	w2, w19
  42f62c:	mov	x1, x23
  42f630:	bl	402620 <memcpy@plt>
  42f634:	strb	wzr, [x21, w19, uxtw]
  42f638:	strb	w22, [x20, #4]
  42f63c:	str	w19, [x20, #8]
  42f640:	str	x21, [x20, #16]
  42f644:	ldp	x19, x20, [sp, #16]
  42f648:	ldp	x21, x22, [sp, #32]
  42f64c:	ldr	x23, [sp, #48]
  42f650:	ldp	x29, x30, [sp], #64
  42f654:	ret
  42f658:	stp	x29, x30, [sp, #-224]!
  42f65c:	mov	x29, sp
  42f660:	stp	x19, x20, [sp, #16]
  42f664:	stp	x21, x22, [sp, #32]
  42f668:	stp	x23, x24, [sp, #48]
  42f66c:	mov	x22, x0
  42f670:	str	x1, [sp, #112]
  42f674:	str	x2, [sp, #104]
  42f678:	ldrb	w0, [x2]
  42f67c:	cmp	w0, #0x4c
  42f680:	mov	w1, #0x55                  	// #85
  42f684:	ccmp	w0, w1, #0x4, ne  // ne = any
  42f688:	b.ne	42f6c0 <ferror@plt+0x2c990>  // b.any
  42f68c:	add	x19, x2, #0x2
  42f690:	ldrb	w21, [x2, #1]
  42f694:	cmp	w21, #0x52
  42f698:	b.eq	42f758 <ferror@plt+0x2ca28>  // b.none
  42f69c:	cmp	w21, #0x22
  42f6a0:	b.eq	430088 <ferror@plt+0x2d358>  // b.none
  42f6a4:	cmp	w21, #0x27
  42f6a8:	b.eq	4300b0 <ferror@plt+0x2d380>  // b.none
  42f6ac:	mov	w23, #0x44                  	// #68
  42f6b0:	mov	w21, #0x3e                  	// #62
  42f6b4:	mov	w2, #0x0                   	// #0
  42f6b8:	mov	w0, #0x1                   	// #1
  42f6bc:	b	43010c <ferror@plt+0x2d3dc>
  42f6c0:	mov	w21, w0
  42f6c4:	cmp	w0, #0x75
  42f6c8:	b.eq	42f708 <ferror@plt+0x2c9d8>  // b.none
  42f6cc:	ldr	x1, [sp, #104]
  42f6d0:	add	x19, x1, #0x1
  42f6d4:	cmp	w0, #0x52
  42f6d8:	b.ne	42f69c <ferror@plt+0x2c96c>  // b.any
  42f6dc:	stp	x25, x26, [sp, #64]
  42f6e0:	stp	x27, x28, [sp, #80]
  42f6e4:	str	xzr, [sp, #160]
  42f6e8:	str	xzr, [sp, #168]
  42f6ec:	ldr	x0, [x22]
  42f6f0:	ldr	w20, [x0, #56]
  42f6f4:	ldr	x0, [x0, #48]
  42f6f8:	add	x20, x0, x20, lsl #4
  42f6fc:	mov	w0, #0x3e                  	// #62
  42f700:	str	w0, [sp, #140]
  42f704:	b	42f788 <ferror@plt+0x2ca58>
  42f708:	ldr	x1, [sp, #104]
  42f70c:	ldrb	w21, [x1, #1]
  42f710:	add	x19, x1, #0x2
  42f714:	cmp	w21, #0x38
  42f718:	b.eq	42f74c <ferror@plt+0x2ca1c>  // b.none
  42f71c:	cmp	w21, #0x52
  42f720:	b.eq	430314 <ferror@plt+0x2d5e4>  // b.none
  42f724:	cmp	w21, #0x22
  42f728:	b.ne	42f6a4 <ferror@plt+0x2c974>  // b.any
  42f72c:	ldr	x0, [sp, #104]
  42f730:	ldrb	w0, [x0, #1]
  42f734:	cmp	w0, #0x38
  42f738:	mov	w23, #0x42                  	// #66
  42f73c:	mov	w0, #0x40                  	// #64
  42f740:	csel	w23, w23, w0, eq  // eq = none
  42f744:	mov	w21, #0x22                  	// #34
  42f748:	b	42f6b4 <ferror@plt+0x2c984>
  42f74c:	add	x19, x1, #0x3
  42f750:	ldrb	w21, [x1, #2]
  42f754:	b	42f71c <ferror@plt+0x2c9ec>
  42f758:	stp	x25, x26, [sp, #64]
  42f75c:	stp	x27, x28, [sp, #80]
  42f760:	str	xzr, [sp, #160]
  42f764:	str	xzr, [sp, #168]
  42f768:	ldr	x1, [x22]
  42f76c:	ldr	w20, [x1, #56]
  42f770:	ldr	x1, [x1, #48]
  42f774:	add	x20, x1, x20, lsl #4
  42f778:	mov	w1, #0x3f                  	// #63
  42f77c:	str	w1, [sp, #140]
  42f780:	cmp	w0, #0x4c
  42f784:	b.ne	42f7c0 <ferror@plt+0x2ca90>  // b.any
  42f788:	add	x19, x19, #0x1
  42f78c:	ldr	x23, [sp, #104]
  42f790:	sub	x0, x19, x23
  42f794:	str	x0, [sp, #128]
  42f798:	mov	x24, #0x0                   	// #0
  42f79c:	mov	x21, #0x0                   	// #0
  42f7a0:	str	wzr, [sp, #120]
  42f7a4:	str	wzr, [sp, #124]
  42f7a8:	str	wzr, [sp, #136]
  42f7ac:	mov	x27, #0xffffffff77ffffff    	// #-2281701377
  42f7b0:	movk	x27, #0x3fff, lsl #48
  42f7b4:	mov	x26, #0xfcee00000000        	// #278099132416000
  42f7b8:	movk	x26, #0xffff, lsl #48
  42f7bc:	b	42fb0c <ferror@plt+0x2cddc>
  42f7c0:	mov	w1, #0x41                  	// #65
  42f7c4:	str	w1, [sp, #140]
  42f7c8:	cmp	w0, #0x55
  42f7cc:	b.eq	42f788 <ferror@plt+0x2ca58>  // b.none
  42f7d0:	mov	w1, #0x3e                  	// #62
  42f7d4:	str	w1, [sp, #140]
  42f7d8:	cmp	w0, #0x75
  42f7dc:	b.ne	42f788 <ferror@plt+0x2ca58>  // b.any
  42f7e0:	b	430334 <ferror@plt+0x2d604>
  42f7e4:	mov	x20, x1
  42f7e8:	mov	x19, x25
  42f7ec:	b	42fb0c <ferror@plt+0x2cddc>
  42f7f0:	mov	x20, x1
  42f7f4:	mov	x24, x0
  42f7f8:	mov	x19, x25
  42f7fc:	b	42fb0c <ferror@plt+0x2cddc>
  42f800:	mov	x20, x1
  42f804:	mov	x19, x25
  42f808:	mov	x24, #0x0                   	// #0
  42f80c:	mov	w0, #0x2                   	// #2
  42f810:	str	w0, [sp, #120]
  42f814:	str	wzr, [sp, #124]
  42f818:	b	42fb0c <ferror@plt+0x2cddc>
  42f81c:	b.ne	42fac8 <ferror@plt+0x2cd98>  // b.any
  42f820:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  42f824:	add	x25, x25, #0x5b8
  42f828:	b	42f8c8 <ferror@plt+0x2cb98>
  42f82c:	sub	x28, x19, x23
  42f830:	add	x4, sp, #0xa8
  42f834:	add	x3, sp, #0xa0
  42f838:	mov	x2, x28
  42f83c:	mov	x1, x23
  42f840:	mov	x0, x22
  42f844:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f848:	add	x21, x21, #0x1
  42f84c:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x24c60>
  42f850:	add	x23, x23, #0x760
  42f854:	add	x4, sp, #0xa8
  42f858:	add	x3, sp, #0xa0
  42f85c:	mov	x2, #0x1                   	// #1
  42f860:	mov	x1, x23
  42f864:	mov	x0, x22
  42f868:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f86c:	add	x21, x28, x21
  42f870:	cmp	x24, #0x10
  42f874:	ccmp	x19, x23, #0x4, ls  // ls = plast
  42f878:	b.ne	42f9b0 <ferror@plt+0x2cc80>  // b.any
  42f87c:	ldr	w0, [x20, #8]
  42f880:	cmp	w0, #0x20
  42f884:	b.eq	42f9c4 <ferror@plt+0x2cc94>  // b.none
  42f888:	add	x4, sp, #0xa8
  42f88c:	add	x3, sp, #0xa0
  42f890:	mov	x2, #0x1                   	// #1
  42f894:	mov	x1, x25
  42f898:	mov	x0, x22
  42f89c:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f8a0:	add	x21, x21, #0x1
  42f8a4:	cmp	x19, x25
  42f8a8:	mov	x23, x19
  42f8ac:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  42f8b0:	b.ls	42fa08 <ferror@plt+0x2ccd8>  // b.plast
  42f8b4:	add	x1, x20, #0x10
  42f8b8:	ldr	x0, [x20, #16]
  42f8bc:	cmp	x19, x0
  42f8c0:	b.ne	42facc <ferror@plt+0x2cd9c>  // b.any
  42f8c4:	mov	x20, x1
  42f8c8:	ldr	w0, [x20, #8]
  42f8cc:	cmp	w0, #0x20
  42f8d0:	b.eq	42f82c <ferror@plt+0x2cafc>  // b.none
  42f8d4:	cmp	w0, #0x5c
  42f8d8:	b.eq	42f82c <ferror@plt+0x2cafc>  // b.none
  42f8dc:	cbz	w0, 42f8b4 <ferror@plt+0x2cb84>
  42f8e0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  42f8e4:	add	x1, x1, #0x9b0
  42f8e8:	ldrb	w1, [x1, w0, uxtw]
  42f8ec:	cbz	w1, 42fab0 <ferror@plt+0x2cd80>
  42f8f0:	strb	w0, [sp, #159]
  42f8f4:	str	wzr, [x20, #8]
  42f8f8:	ldrb	w0, [x22, #1125]
  42f8fc:	cbz	w0, 42f8b4 <ferror@plt+0x2cb84>
  42f900:	sub	x28, x19, x23
  42f904:	add	x4, sp, #0xa8
  42f908:	add	x3, sp, #0xa0
  42f90c:	mov	x2, x28
  42f910:	mov	x1, x23
  42f914:	mov	x0, x22
  42f918:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f91c:	add	x21, x28, x21
  42f920:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x24c60>
  42f924:	add	x23, x23, #0x768
  42f928:	add	x4, sp, #0xa8
  42f92c:	add	x3, sp, #0xa0
  42f930:	mov	x2, #0x2                   	// #2
  42f934:	mov	x1, x23
  42f938:	mov	x0, x22
  42f93c:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f940:	cmp	x24, #0x10
  42f944:	ccmp	x19, x23, #0x4, ls  // ls = plast
  42f948:	b.ne	42fa1c <ferror@plt+0x2ccec>  // b.any
  42f94c:	ldrb	w0, [sp, #159]
  42f950:	cmp	w0, #0x2f
  42f954:	b.ne	42fa5c <ferror@plt+0x2cd2c>  // b.any
  42f958:	ldr	x0, [x20, #16]
  42f95c:	cmp	x19, x0
  42f960:	b.ne	42fa5c <ferror@plt+0x2cd2c>  // b.any
  42f964:	ldr	w0, [x20, #24]
  42f968:	cmp	w0, #0x20
  42f96c:	mov	w1, #0x5c                  	// #92
  42f970:	ccmp	w0, w1, #0x4, ne  // ne = any
  42f974:	b.ne	42fa30 <ferror@plt+0x2cd00>  // b.any
  42f978:	adrp	x23, 47b000 <_obstack_memory_used@@Base+0x26c60>
  42f97c:	add	x23, x23, #0xc40
  42f980:	add	x4, sp, #0xa8
  42f984:	add	x3, sp, #0xa0
  42f988:	mov	x2, #0x1                   	// #1
  42f98c:	mov	x1, x23
  42f990:	mov	x0, x22
  42f994:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f998:	add	x21, x21, #0x3
  42f99c:	cmp	x19, x23
  42f9a0:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  42f9a4:	b.ls	42fa48 <ferror@plt+0x2cd18>  // b.plast
  42f9a8:	add	x20, x20, #0x10
  42f9ac:	b	42f87c <ferror@plt+0x2cb4c>
  42f9b0:	mov	w0, #0x5c                  	// #92
  42f9b4:	add	x1, sp, #0xc8
  42f9b8:	strb	w0, [x1, x24]
  42f9bc:	add	x24, x24, #0x1
  42f9c0:	b	42f87c <ferror@plt+0x2cb4c>
  42f9c4:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1bc60>
  42f9c8:	add	x23, x23, #0x6e0
  42f9cc:	add	x4, sp, #0xa8
  42f9d0:	add	x3, sp, #0xa0
  42f9d4:	mov	x2, #0x1                   	// #1
  42f9d8:	mov	x1, x23
  42f9dc:	mov	x0, x22
  42f9e0:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42f9e4:	add	x21, x21, #0x1
  42f9e8:	cmp	x19, x23
  42f9ec:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  42f9f0:	b.hi	42f888 <ferror@plt+0x2cb58>  // b.pmore
  42f9f4:	mov	w0, #0x20                  	// #32
  42f9f8:	add	x1, sp, #0xc8
  42f9fc:	strb	w0, [x1, x24]
  42fa00:	add	x24, x24, #0x1
  42fa04:	b	42f888 <ferror@plt+0x2cb58>
  42fa08:	mov	w0, #0xa                   	// #10
  42fa0c:	add	x1, sp, #0xc8
  42fa10:	strb	w0, [x1, x24]
  42fa14:	add	x24, x24, #0x1
  42fa18:	b	42f8b4 <ferror@plt+0x2cb84>
  42fa1c:	mov	w0, #0x3f3f                	// #16191
  42fa20:	add	x1, sp, #0xc8
  42fa24:	strh	w0, [x1, x24]
  42fa28:	add	x24, x24, #0x2
  42fa2c:	b	42f94c <ferror@plt+0x2cc1c>
  42fa30:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fa34:	add	x2, x2, #0x770
  42fa38:	mov	w1, #0x6e1                 	// #1761
  42fa3c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fa40:	add	x0, x0, #0x488
  42fa44:	bl	4102b4 <ferror@plt+0xd584>
  42fa48:	mov	w0, #0x2f                  	// #47
  42fa4c:	add	x1, sp, #0xc8
  42fa50:	strb	w0, [x1, x24]
  42fa54:	add	x24, x24, #0x1
  42fa58:	b	42f9a8 <ferror@plt+0x2cc78>
  42fa5c:	add	x23, x19, #0x1
  42fa60:	add	x19, sp, #0x9f
  42fa64:	add	x4, sp, #0xa8
  42fa68:	add	x3, sp, #0xa0
  42fa6c:	mov	x2, #0x1                   	// #1
  42fa70:	mov	x1, x19
  42fa74:	mov	x0, x22
  42fa78:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42fa7c:	add	x21, x21, #0x3
  42fa80:	cmp	x24, #0x10
  42fa84:	ccmp	x19, x23, #0x4, ls  // ls = plast
  42fa88:	b.ne	42fa9c <ferror@plt+0x2cd6c>  // b.any
  42fa8c:	ldrb	w2, [sp, #159]
  42fa90:	mov	x1, x20
  42fa94:	mov	x25, x23
  42fa98:	b	42fae0 <ferror@plt+0x2cdb0>
  42fa9c:	add	x0, sp, #0xc8
  42faa0:	ldrb	w1, [sp, #159]
  42faa4:	strb	w1, [x0, x24]
  42faa8:	add	x24, x24, #0x1
  42faac:	b	42fa8c <ferror@plt+0x2cd5c>
  42fab0:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fab4:	add	x2, x2, #0x770
  42fab8:	mov	w1, #0x6f0                 	// #1776
  42fabc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fac0:	add	x0, x0, #0x488
  42fac4:	bl	4102b4 <ferror@plt+0xd584>
  42fac8:	mov	x1, x20
  42facc:	mov	x25, x19
  42fad0:	ldrb	w0, [x25], #1
  42fad4:	mov	w2, w0
  42fad8:	cmp	x24, #0x10
  42fadc:	b.ls	42fb20 <ferror@plt+0x2cdf0>  // b.plast
  42fae0:	ldr	w0, [sp, #120]
  42fae4:	cbz	w0, 42fb30 <ferror@plt+0x2ce00>
  42fae8:	ldr	w0, [sp, #120]
  42faec:	cmp	w0, #0x2
  42faf0:	b.eq	42fcc8 <ferror@plt+0x2cf98>  // b.none
  42faf4:	cmp	w2, #0x29
  42faf8:	b.eq	42f800 <ferror@plt+0x2cad0>  // b.none
  42fafc:	mov	x20, x1
  42fb00:	mov	x19, x25
  42fb04:	cmp	w2, #0xa
  42fb08:	b.eq	42fd6c <ferror@plt+0x2d03c>  // b.none
  42fb0c:	ldr	x0, [x20]
  42fb10:	cmp	x0, x19
  42fb14:	b.cs	42f81c <ferror@plt+0x2caec>  // b.hs, b.nlast
  42fb18:	add	x20, x20, #0x10
  42fb1c:	b	42fb0c <ferror@plt+0x2cddc>
  42fb20:	add	x3, sp, #0xc8
  42fb24:	strb	w0, [x3, x24]
  42fb28:	add	x24, x24, #0x1
  42fb2c:	b	42fae0 <ferror@plt+0x2cdb0>
  42fb30:	ldr	w0, [sp, #136]
  42fb34:	mov	w6, w0
  42fb38:	cmp	x24, w0, uxtw
  42fb3c:	b.ls	42f7e4 <ferror@plt+0x2cab4>  // b.plast
  42fb40:	mov	w4, w0
  42fb44:	mov	x3, #0x0                   	// #0
  42fb48:	add	x2, sp, #0xc8
  42fb4c:	add	x7, x2, x6
  42fb50:	add	x2, sp, #0xb0
  42fb54:	add	x6, x2, x6
  42fb58:	mov	x2, #0x1                   	// #1
  42fb5c:	add	w0, w0, #0x1
  42fb60:	sub	x8, x0, #0x1
  42fb64:	ldrb	w5, [x7, x3]
  42fb68:	strb	w5, [x6, x3]
  42fb6c:	cmp	w5, #0x3f
  42fb70:	b.ls	42fc24 <ferror@plt+0x2cef4>  // b.plast
  42fb74:	sub	w0, w5, #0x41
  42fb78:	and	w0, w0, #0xff
  42fb7c:	cmp	w0, #0x3d
  42fb80:	b.hi	42fb98 <ferror@plt+0x2ce68>  // b.pmore
  42fb84:	lsl	x0, x2, x0
  42fb88:	tst	x0, x27
  42fb8c:	b.eq	42fb98 <ferror@plt+0x2ce68>  // b.none
  42fb90:	cmp	w4, #0xf
  42fb94:	b.ls	42fc3c <ferror@plt+0x2cf0c>  // b.plast
  42fb98:	cmp	w5, #0x28
  42fb9c:	b.eq	42fca0 <ferror@plt+0x2cf70>  // b.none
  42fba0:	ldr	x0, [x22]
  42fba4:	ldr	x0, [x0, #8]
  42fba8:	sub	x25, x25, x0
  42fbac:	add	w3, w25, #0x1
  42fbb0:	cmp	w4, #0x10
  42fbb4:	b.eq	42fc60 <ferror@plt+0x2cf30>  // b.none
  42fbb8:	cmp	w5, #0xa
  42fbbc:	b.eq	42fc80 <ferror@plt+0x2cf50>  // b.none
  42fbc0:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fbc4:	add	x4, x4, #0x7e0
  42fbc8:	ldr	x0, [sp, #112]
  42fbcc:	ldr	w2, [x0]
  42fbd0:	mov	w1, #0x3                   	// #3
  42fbd4:	mov	x0, x22
  42fbd8:	bl	426bfc <ferror@plt+0x23ecc>
  42fbdc:	ldr	x1, [x22]
  42fbe0:	ldr	x3, [sp, #128]
  42fbe4:	sub	x0, x3, #0x1
  42fbe8:	ldr	x2, [sp, #104]
  42fbec:	add	x0, x2, x0
  42fbf0:	str	x0, [x1]
  42fbf4:	mov	w4, #0x3d                  	// #61
  42fbf8:	sub	w3, w3, #0x1
  42fbfc:	ldr	x1, [sp, #112]
  42fc00:	mov	x0, x22
  42fc04:	bl	42f5f8 <ferror@plt+0x2c8c8>
  42fc08:	ldr	x1, [sp, #160]
  42fc0c:	cbz	x1, 43037c <ferror@plt+0x2d64c>
  42fc10:	mov	x0, x22
  42fc14:	bl	42f1c8 <ferror@plt+0x2c498>
  42fc18:	ldp	x25, x26, [sp, #64]
  42fc1c:	ldp	x27, x28, [sp, #80]
  42fc20:	b	4301a8 <ferror@plt+0x2d478>
  42fc24:	cmp	w5, #0x20
  42fc28:	b.ls	42fb98 <ferror@plt+0x2ce68>  // b.plast
  42fc2c:	lsl	x0, x2, x5
  42fc30:	tst	x0, x26
  42fc34:	b.ne	42fb90 <ferror@plt+0x2ce60>  // b.any
  42fc38:	b	42fb98 <ferror@plt+0x2ce68>
  42fc3c:	add	w4, w4, #0x1
  42fc40:	add	x3, x3, #0x1
  42fc44:	add	x0, x8, x3
  42fc48:	cmp	x24, x0
  42fc4c:	b.hi	42fb64 <ferror@plt+0x2ce34>  // b.pmore
  42fc50:	mov	x20, x1
  42fc54:	str	w4, [sp, #136]
  42fc58:	mov	x19, x25
  42fc5c:	b	42fb0c <ferror@plt+0x2cddc>
  42fc60:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fc64:	add	x4, x4, #0x780
  42fc68:	ldr	x0, [sp, #112]
  42fc6c:	ldr	w2, [x0]
  42fc70:	mov	w1, #0x3                   	// #3
  42fc74:	mov	x0, x22
  42fc78:	bl	426bfc <ferror@plt+0x23ecc>
  42fc7c:	b	42fbdc <ferror@plt+0x2ceac>
  42fc80:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fc84:	add	x4, x4, #0x7b0
  42fc88:	ldr	x0, [sp, #112]
  42fc8c:	ldr	w2, [x0]
  42fc90:	mov	w1, #0x3                   	// #3
  42fc94:	mov	x0, x22
  42fc98:	bl	426bfc <ferror@plt+0x23ecc>
  42fc9c:	b	42fbdc <ferror@plt+0x2ceac>
  42fca0:	add	x0, sp, #0xb0
  42fca4:	mov	w2, #0x22                  	// #34
  42fca8:	strb	w2, [x0, w4, uxtw]
  42fcac:	mov	x20, x1
  42fcb0:	str	w4, [sp, #136]
  42fcb4:	mov	x19, x25
  42fcb8:	mov	x24, #0x11                  	// #17
  42fcbc:	mov	w0, #0x1                   	// #1
  42fcc0:	str	w0, [sp, #120]
  42fcc4:	b	42fb0c <ferror@plt+0x2cddc>
  42fcc8:	ldr	w3, [sp, #136]
  42fccc:	ldr	w0, [sp, #124]
  42fcd0:	cmp	w3, w0
  42fcd4:	b.cc	42fe40 <ferror@plt+0x2d110>  // b.lo, b.ul, b.last
  42fcd8:	mov	w5, w0
  42fcdc:	cmp	x24, w0, uxtw
  42fce0:	b.ls	430308 <ferror@plt+0x2d5d8>  // b.plast
  42fce4:	add	w3, w0, #0x1
  42fce8:	mov	x0, x3
  42fcec:	sub	x5, x5, x3
  42fcf0:	add	x3, sp, #0xc8
  42fcf4:	add	x6, x3, x5
  42fcf8:	add	x3, sp, #0xb0
  42fcfc:	add	x5, x3, x5
  42fd00:	mov	w7, w0
  42fd04:	sub	w3, w0, #0x1
  42fd08:	str	w3, [sp, #124]
  42fd0c:	ldrb	w4, [x6, x0]
  42fd10:	ldrb	w3, [x5, x0]
  42fd14:	cmp	w4, w3
  42fd18:	b.ne	42fd3c <ferror@plt+0x2d00c>  // b.any
  42fd1c:	ldr	w3, [sp, #136]
  42fd20:	cmp	w3, w0
  42fd24:	b.cc	42fe40 <ferror@plt+0x2d110>  // b.lo, b.ul, b.last
  42fd28:	add	x3, x0, #0x1
  42fd2c:	cmp	x24, x0
  42fd30:	b.ls	43030c <ferror@plt+0x2d5dc>  // b.plast
  42fd34:	mov	x0, x3
  42fd38:	b	42fd00 <ferror@plt+0x2cfd0>
  42fd3c:	ldr	w0, [sp, #136]
  42fd40:	ldr	w3, [sp, #124]
  42fd44:	cmp	w0, w3
  42fd48:	b.cc	42fe40 <ferror@plt+0x2d110>  // b.lo, b.ul, b.last
  42fd4c:	ldr	w3, [sp, #124]
  42fd50:	mov	w0, w3
  42fd54:	cmp	x24, w3, uxtw
  42fd58:	b.eq	42f7f0 <ferror@plt+0x2cac0>  // b.none
  42fd5c:	mov	x24, #0x11                  	// #17
  42fd60:	mov	w0, #0x1                   	// #1
  42fd64:	str	w0, [sp, #120]
  42fd68:	b	42faf4 <ferror@plt+0x2cdc4>
  42fd6c:	ldrb	w0, [x22, #16]
  42fd70:	cbnz	w0, 42fe14 <ferror@plt+0x2d0e4>
  42fd74:	ldrb	w0, [x22, #25]
  42fd78:	cbz	w0, 42fd90 <ferror@plt+0x2d060>
  42fd7c:	ldr	x0, [x22]
  42fd80:	ldr	x1, [x0, #16]
  42fd84:	ldr	x0, [x0, #32]
  42fd88:	cmp	x1, x0
  42fd8c:	b.cs	42fe14 <ferror@plt+0x2d0e4>  // b.hs, b.nlast
  42fd90:	sub	x19, x25, x23
  42fd94:	add	x4, sp, #0xa8
  42fd98:	add	x3, sp, #0xa0
  42fd9c:	mov	x2, x19
  42fda0:	mov	x1, x23
  42fda4:	mov	x0, x22
  42fda8:	bl	42f2e0 <ferror@plt+0x2c5b0>
  42fdac:	add	x21, x21, x19
  42fdb0:	ldr	x0, [x22]
  42fdb4:	ldr	x1, [x0]
  42fdb8:	ldr	x0, [x0, #32]
  42fdbc:	cmp	x1, x0
  42fdc0:	b.cc	42fef4 <ferror@plt+0x2d1c4>  // b.lo, b.ul, b.last
  42fdc4:	ldr	x0, [x22]
  42fdc8:	mov	w1, #0x1                   	// #1
  42fdcc:	strb	w1, [x0, #104]
  42fdd0:	ldr	x0, [x22]
  42fdd4:	sub	x25, x25, #0x1
  42fdd8:	str	x25, [x0]
  42fddc:	mov	w1, #0x0                   	// #0
  42fde0:	mov	x0, x22
  42fde4:	bl	42def0 <ferror@plt+0x2b1c0>
  42fde8:	mov	x0, x22
  42fdec:	bl	42e608 <ferror@plt+0x2b8d8>
  42fdf0:	and	w0, w0, #0xff
  42fdf4:	cbz	w0, 42ff40 <ferror@plt+0x2d210>
  42fdf8:	ldr	x0, [x22]
  42fdfc:	ldr	x23, [x0]
  42fe00:	ldr	w20, [x0, #56]
  42fe04:	ldr	x0, [x0, #48]
  42fe08:	add	x20, x0, x20, lsl #4
  42fe0c:	mov	x19, x23
  42fe10:	b	42fb0c <ferror@plt+0x2cddc>
  42fe14:	sub	x25, x25, #0x1
  42fe18:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42fe1c:	add	x4, x4, #0x810
  42fe20:	mov	w3, #0x0                   	// #0
  42fe24:	ldr	x0, [sp, #112]
  42fe28:	ldr	w2, [x0]
  42fe2c:	mov	w1, #0x3                   	// #3
  42fe30:	mov	x0, x22
  42fe34:	bl	426bfc <ferror@plt+0x23ecc>
  42fe38:	mov	w0, #0x3d                  	// #61
  42fe3c:	str	w0, [sp, #140]
  42fe40:	ldrb	w0, [x22, #1161]
  42fe44:	cbnz	w0, 42ff9c <ferror@plt+0x2d26c>
  42fe48:	ldr	x0, [x22]
  42fe4c:	str	x25, [x0]
  42fe50:	ldr	x0, [sp, #160]
  42fe54:	cbz	x0, 430064 <ferror@plt+0x2d334>
  42fe58:	sub	x25, x25, x23
  42fe5c:	add	x1, x21, #0x1
  42fe60:	add	x1, x1, x25
  42fe64:	mov	x0, x22
  42fe68:	bl	42f440 <ferror@plt+0x2c710>
  42fe6c:	mov	x19, x0
  42fe70:	ldr	x0, [sp, #112]
  42fe74:	ldrb	w1, [sp, #140]
  42fe78:	strb	w1, [x0, #4]
  42fe7c:	add	w21, w25, w21
  42fe80:	str	w21, [x0, #8]
  42fe84:	str	x19, [x0, #16]
  42fe88:	ldr	x0, [sp, #160]
  42fe8c:	str	x0, [sp, #168]
  42fe90:	cbz	x0, 42fec8 <ferror@plt+0x2d198>
  42fe94:	ldr	x1, [x0, #8]
  42fe98:	ldr	x2, [x0, #16]
  42fe9c:	sub	x2, x2, x1
  42fea0:	mov	x0, x19
  42fea4:	bl	402620 <memcpy@plt>
  42fea8:	ldr	x0, [sp, #168]
  42feac:	ldr	x1, [x0, #16]
  42feb0:	ldr	x2, [x0, #8]
  42feb4:	sub	x1, x1, x2
  42feb8:	add	x19, x19, x1
  42febc:	ldr	x0, [x0]
  42fec0:	str	x0, [sp, #168]
  42fec4:	cbnz	x0, 42fe94 <ferror@plt+0x2d164>
  42fec8:	ldr	x1, [sp, #160]
  42fecc:	mov	x0, x22
  42fed0:	bl	42f1c8 <ferror@plt+0x2c498>
  42fed4:	mov	x2, x25
  42fed8:	mov	x1, x23
  42fedc:	mov	x0, x19
  42fee0:	bl	402620 <memcpy@plt>
  42fee4:	strb	wzr, [x19, x25]
  42fee8:	ldp	x25, x26, [sp, #64]
  42feec:	ldp	x27, x28, [sp, #80]
  42fef0:	b	4301a8 <ferror@plt+0x2d478>
  42fef4:	ldr	x0, [x22, #40]
  42fef8:	ldr	w1, [x0, #12]
  42fefc:	sub	w1, w1, #0x1
  42ff00:	sbfiz	x2, x1, #1, #32
  42ff04:	add	x1, x2, w1, sxtw
  42ff08:	lsl	x1, x1, #3
  42ff0c:	ldr	x4, [x0]
  42ff10:	add	x3, x4, x1
  42ff14:	ldr	w2, [x0, #60]
  42ff18:	ldr	w1, [x4, x1]
  42ff1c:	sub	w1, w2, w1
  42ff20:	ldrb	w2, [x3, #6]
  42ff24:	lsr	w1, w1, w2
  42ff28:	ldr	w3, [x3, #16]
  42ff2c:	add	w3, w3, #0x1
  42ff30:	mov	w2, #0x0                   	// #0
  42ff34:	add	w1, w1, w3
  42ff38:	bl	4327c8 <ferror@plt+0x2fa98>
  42ff3c:	b	42fdc4 <ferror@plt+0x2d094>
  42ff40:	ldr	x1, [sp, #112]
  42ff44:	ldr	w19, [x1]
  42ff48:	mov	w0, #0x16                  	// #22
  42ff4c:	strb	w0, [x1, #4]
  42ff50:	ldr	x0, [x22, #40]
  42ff54:	ldr	w0, [x0, #60]
  42ff58:	str	w0, [x1]
  42ff5c:	mov	w0, #0x40                  	// #64
  42ff60:	strh	w0, [x1, #6]
  42ff64:	ldr	x1, [sp, #160]
  42ff68:	cbz	x1, 42ff74 <ferror@plt+0x2d244>
  42ff6c:	mov	x0, x22
  42ff70:	bl	42f1c8 <ferror@plt+0x2c498>
  42ff74:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ff78:	add	x4, x4, #0x810
  42ff7c:	mov	w3, #0x0                   	// #0
  42ff80:	mov	w2, w19
  42ff84:	mov	w1, #0x3                   	// #3
  42ff88:	mov	x0, x22
  42ff8c:	bl	426bfc <ferror@plt+0x23ecc>
  42ff90:	ldp	x25, x26, [sp, #64]
  42ff94:	ldp	x27, x28, [sp, #80]
  42ff98:	b	4301a8 <ferror@plt+0x2d478>
  42ff9c:	ldrb	w0, [x25]
  42ffa0:	cmp	w0, #0x5f
  42ffa4:	b.ne	42ffb4 <ferror@plt+0x2d284>  // b.any
  42ffa8:	ldrb	w0, [x25, #1]
  42ffac:	cmp	w0, #0x5f
  42ffb0:	b.ne	42fffc <ferror@plt+0x2d2cc>  // b.any
  42ffb4:	mov	x1, x25
  42ffb8:	mov	x0, x22
  42ffbc:	bl	42d5c4 <ferror@plt+0x2a894>
  42ffc0:	and	w0, w0, #0xff
  42ffc4:	cbz	w0, 42fffc <ferror@plt+0x2d2cc>
  42ffc8:	ldrb	w0, [x22, #1162]
  42ffcc:	cbz	w0, 42fe48 <ferror@plt+0x2d118>
  42ffd0:	ldrb	w0, [x22, #18]
  42ffd4:	cbnz	w0, 42fe48 <ferror@plt+0x2d118>
  42ffd8:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  42ffdc:	add	x4, x4, #0x828
  42ffe0:	mov	w3, #0x0                   	// #0
  42ffe4:	ldr	x0, [sp, #112]
  42ffe8:	ldr	w2, [x0]
  42ffec:	mov	w1, #0x13                  	// #19
  42fff0:	mov	x0, x22
  42fff4:	bl	426c74 <ferror@plt+0x23f44>
  42fff8:	b	42fe48 <ferror@plt+0x2d118>
  42fffc:	ldrb	w1, [x25]
  430000:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430004:	add	x0, x0, #0x28
  430008:	ldrh	w0, [x0, x1, lsl #1]
  43000c:	tbz	w0, #9, 42fe48 <ferror@plt+0x2d118>
  430010:	ldr	w0, [sp, #140]
  430014:	bl	42822c <ferror@plt+0x254fc>
  430018:	str	w0, [sp, #140]
  43001c:	add	x0, x25, #0x1
  430020:	ldrb	w2, [x25, #1]
  430024:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430028:	add	x1, x1, #0x28
  43002c:	ldrh	w1, [x1, x2, lsl #1]
  430030:	mov	w2, #0x204                 	// #516
  430034:	tst	w2, w1
  430038:	b.eq	43005c <ferror@plt+0x2d32c>  // b.none
  43003c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430040:	add	x1, x1, #0x28
  430044:	ldrb	w3, [x0, #1]!
  430048:	ldrh	w3, [x1, x3, lsl #1]
  43004c:	tst	w2, w3
  430050:	b.ne	430044 <ferror@plt+0x2d314>  // b.any
  430054:	mov	x25, x0
  430058:	b	42fe48 <ferror@plt+0x2d118>
  43005c:	mov	x25, x0
  430060:	b	42fe48 <ferror@plt+0x2d118>
  430064:	ldr	w4, [sp, #140]
  430068:	sub	w3, w25, w23
  43006c:	mov	x2, x23
  430070:	ldr	x1, [sp, #112]
  430074:	mov	x0, x22
  430078:	bl	42f5f8 <ferror@plt+0x2c8c8>
  43007c:	ldp	x25, x26, [sp, #64]
  430080:	ldp	x27, x28, [sp, #80]
  430084:	b	4301a8 <ferror@plt+0x2d478>
  430088:	mov	w23, #0x3f                  	// #63
  43008c:	cmp	w0, #0x4c
  430090:	b.eq	42f6b4 <ferror@plt+0x2c984>  // b.none
  430094:	mov	w23, #0x41                  	// #65
  430098:	cmp	w0, #0x55
  43009c:	b.eq	42f6b4 <ferror@plt+0x2c984>  // b.none
  4300a0:	mov	w23, #0x3e                  	// #62
  4300a4:	cmp	w0, #0x75
  4300a8:	b.ne	42f6b4 <ferror@plt+0x2c984>  // b.any
  4300ac:	b	42f72c <ferror@plt+0x2c9fc>
  4300b0:	mov	w23, #0x39                  	// #57
  4300b4:	cmp	w0, #0x4c
  4300b8:	b.eq	42f6b4 <ferror@plt+0x2c984>  // b.none
  4300bc:	mov	w23, #0x3b                  	// #59
  4300c0:	cmp	w0, #0x55
  4300c4:	b.eq	42f6b4 <ferror@plt+0x2c984>  // b.none
  4300c8:	mov	w23, #0x38                  	// #56
  4300cc:	cmp	w0, #0x75
  4300d0:	b.ne	42f6b4 <ferror@plt+0x2c984>  // b.any
  4300d4:	ldr	x0, [sp, #104]
  4300d8:	ldrb	w0, [x0, #1]
  4300dc:	cmp	w0, w23
  4300e0:	mov	w23, #0x3c                  	// #60
  4300e4:	mov	w0, #0x3a                  	// #58
  4300e8:	csel	w23, w23, w0, eq  // eq = none
  4300ec:	b	42f6b4 <ferror@plt+0x2c984>
  4300f0:	ldrb	w1, [x22, #19]
  4300f4:	cbnz	w1, 430108 <ferror@plt+0x2d3d8>
  4300f8:	ldrb	w1, [x19, #1]
  4300fc:	add	x19, x19, #0x2
  430100:	cmp	w1, #0xa
  430104:	csel	x20, x19, x20, ne  // ne = any
  430108:	mov	x19, x20
  43010c:	mov	x20, x19
  430110:	ldrb	w1, [x20], #1
  430114:	cmp	w1, #0x5c
  430118:	b.eq	4300f0 <ferror@plt+0x2d3c0>  // b.none
  43011c:	cmp	w1, w21
  430120:	b.eq	43016c <ferror@plt+0x2d43c>  // b.none
  430124:	cmp	w1, #0xa
  430128:	b.eq	430138 <ferror@plt+0x2d408>  // b.none
  43012c:	cmp	w1, #0x0
  430130:	csel	w2, w2, w0, ne  // ne = any
  430134:	b	430108 <ferror@plt+0x2d3d8>
  430138:	cmp	w21, #0x3e
  43013c:	b.eq	43015c <ferror@plt+0x2d42c>  // b.none
  430140:	cbnz	w2, 430354 <ferror@plt+0x2d624>
  430144:	ldr	w0, [x22, #1116]
  430148:	cmp	w0, #0x15
  43014c:	b.ne	4301d4 <ferror@plt+0x2d4a4>  // b.any
  430150:	mov	x20, x19
  430154:	mov	w23, #0x3d                  	// #61
  430158:	b	430178 <ferror@plt+0x2d448>
  43015c:	mov	w0, #0x3                   	// #3
  430160:	ldr	x1, [sp, #112]
  430164:	strb	w0, [x1, #4]
  430168:	b	4301a8 <ferror@plt+0x2d478>
  43016c:	cbnz	w2, 4301bc <ferror@plt+0x2d48c>
  430170:	cmp	w23, #0x3d
  430174:	b.eq	4301cc <ferror@plt+0x2d49c>  // b.none
  430178:	ldrb	w0, [x22, #1161]
  43017c:	cbnz	w0, 4301f8 <ferror@plt+0x2d4c8>
  430180:	ldrb	w0, [x22, #1199]
  430184:	cbnz	w0, 4302c0 <ferror@plt+0x2d590>
  430188:	ldr	x0, [x22]
  43018c:	str	x20, [x0]
  430190:	mov	w4, w23
  430194:	ldr	x2, [sp, #104]
  430198:	sub	w3, w20, w2
  43019c:	ldr	x1, [sp, #112]
  4301a0:	mov	x0, x22
  4301a4:	bl	42f5f8 <ferror@plt+0x2c8c8>
  4301a8:	ldp	x19, x20, [sp, #16]
  4301ac:	ldp	x21, x22, [sp, #32]
  4301b0:	ldp	x23, x24, [sp, #48]
  4301b4:	ldp	x29, x30, [sp], #224
  4301b8:	ret
  4301bc:	ldrb	w0, [x22, #18]
  4301c0:	mov	x19, x20
  4301c4:	cbnz	w0, 430170 <ferror@plt+0x2d440>
  4301c8:	b	430360 <ferror@plt+0x2d630>
  4301cc:	mov	x19, x20
  4301d0:	b	430144 <ferror@plt+0x2d414>
  4301d4:	mov	w3, w21
  4301d8:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  4301dc:	add	x2, x2, #0x8a8
  4301e0:	mov	w1, #0x2                   	// #2
  4301e4:	mov	x0, x22
  4301e8:	bl	426a10 <ferror@plt+0x23ce0>
  4301ec:	mov	x20, x19
  4301f0:	mov	w23, #0x3d                  	// #61
  4301f4:	b	430178 <ferror@plt+0x2d448>
  4301f8:	ldrb	w0, [x20]
  4301fc:	cmp	w0, #0x5f
  430200:	b.ne	430210 <ferror@plt+0x2d4e0>  // b.any
  430204:	ldrb	w0, [x20, #1]
  430208:	cmp	w0, #0x5f
  43020c:	b.ne	430258 <ferror@plt+0x2d528>  // b.any
  430210:	mov	x1, x20
  430214:	mov	x0, x22
  430218:	bl	42d5c4 <ferror@plt+0x2a894>
  43021c:	and	w0, w0, #0xff
  430220:	cbz	w0, 430258 <ferror@plt+0x2d528>
  430224:	ldrb	w0, [x22, #1162]
  430228:	cbz	w0, 430188 <ferror@plt+0x2d458>
  43022c:	ldrb	w0, [x22, #18]
  430230:	cbnz	w0, 430188 <ferror@plt+0x2d458>
  430234:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  430238:	add	x4, x4, #0x828
  43023c:	mov	w3, #0x0                   	// #0
  430240:	ldr	x0, [sp, #112]
  430244:	ldr	w2, [x0]
  430248:	mov	w1, #0x13                  	// #19
  43024c:	mov	x0, x22
  430250:	bl	426c74 <ferror@plt+0x23f44>
  430254:	b	430188 <ferror@plt+0x2d458>
  430258:	ldrb	w1, [x20]
  43025c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430260:	add	x0, x0, #0x28
  430264:	ldrh	w0, [x0, x1, lsl #1]
  430268:	tbz	w0, #9, 430188 <ferror@plt+0x2d458>
  43026c:	mov	w0, w23
  430270:	bl	4282cc <ferror@plt+0x2559c>
  430274:	bl	42822c <ferror@plt+0x254fc>
  430278:	mov	w23, w0
  43027c:	add	x0, x20, #0x1
  430280:	ldrb	w2, [x20, #1]
  430284:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430288:	add	x1, x1, #0x28
  43028c:	ldrh	w1, [x1, x2, lsl #1]
  430290:	mov	w2, #0x204                 	// #516
  430294:	tst	w2, w1
  430298:	b.eq	430300 <ferror@plt+0x2d5d0>  // b.none
  43029c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4302a0:	add	x2, x2, #0x28
  4302a4:	mov	w3, #0x204                 	// #516
  4302a8:	ldrb	w1, [x0, #1]!
  4302ac:	ldrh	w1, [x2, x1, lsl #1]
  4302b0:	tst	w3, w1
  4302b4:	b.ne	4302a8 <ferror@plt+0x2d578>  // b.any
  4302b8:	mov	x20, x0
  4302bc:	b	430188 <ferror@plt+0x2d458>
  4302c0:	mov	x1, x20
  4302c4:	mov	x0, x22
  4302c8:	bl	42d5c4 <ferror@plt+0x2a894>
  4302cc:	and	w0, w0, #0xff
  4302d0:	cbz	w0, 430188 <ferror@plt+0x2d458>
  4302d4:	ldrb	w0, [x22, #18]
  4302d8:	cbnz	w0, 430188 <ferror@plt+0x2d458>
  4302dc:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  4302e0:	add	x4, x4, #0x8d0
  4302e4:	mov	w3, #0x0                   	// #0
  4302e8:	ldr	x0, [sp, #112]
  4302ec:	ldr	w2, [x0]
  4302f0:	mov	w1, #0x17                  	// #23
  4302f4:	mov	x0, x22
  4302f8:	bl	426c74 <ferror@plt+0x23f44>
  4302fc:	b	430188 <ferror@plt+0x2d458>
  430300:	mov	x20, x0
  430304:	b	430188 <ferror@plt+0x2d458>
  430308:	ldr	w7, [sp, #124]
  43030c:	str	w7, [sp, #124]
  430310:	b	42fd4c <ferror@plt+0x2d01c>
  430314:	stp	x25, x26, [sp, #64]
  430318:	stp	x27, x28, [sp, #80]
  43031c:	str	xzr, [sp, #160]
  430320:	str	xzr, [sp, #168]
  430324:	ldr	x0, [x22]
  430328:	ldr	w20, [x0, #56]
  43032c:	ldr	x0, [x0, #48]
  430330:	add	x20, x0, x20, lsl #4
  430334:	ldr	x0, [sp, #104]
  430338:	ldrb	w0, [x0, #1]
  43033c:	cmp	w0, #0x38
  430340:	mov	w1, #0x42                  	// #66
  430344:	mov	w0, #0x40                  	// #64
  430348:	csel	w0, w1, w0, eq  // eq = none
  43034c:	str	w0, [sp, #140]
  430350:	b	42f788 <ferror@plt+0x2ca58>
  430354:	ldrb	w0, [x22, #18]
  430358:	cbnz	w0, 430144 <ferror@plt+0x2d414>
  43035c:	mov	w23, #0x3d                  	// #61
  430360:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430364:	add	x2, x2, #0x880
  430368:	mov	w1, #0x0                   	// #0
  43036c:	mov	x0, x22
  430370:	bl	426a10 <ferror@plt+0x23ce0>
  430374:	mov	x20, x19
  430378:	b	430170 <ferror@plt+0x2d440>
  43037c:	ldp	x25, x26, [sp, #64]
  430380:	ldp	x27, x28, [sp, #80]
  430384:	b	4301a8 <ferror@plt+0x2d478>
  430388:	stp	x29, x30, [sp, #-144]!
  43038c:	mov	x29, sp
  430390:	stp	x19, x20, [sp, #16]
  430394:	stp	x21, x22, [sp, #32]
  430398:	stp	x23, x24, [sp, #48]
  43039c:	stp	x25, x26, [sp, #64]
  4303a0:	mov	x19, x0
  4303a4:	ldr	x20, [x0, #448]
  4303a8:	add	x0, x20, #0x18
  4303ac:	str	x0, [x19, #448]
  4303b0:	mov	w25, #0x0                   	// #0
  4303b4:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x24c60>
  4303b8:	add	x23, x23, #0x918
  4303bc:	strh	wzr, [x20, #6]
  4303c0:	ldr	x21, [x19]
  4303c4:	ldrb	w0, [x21, #104]
  4303c8:	cbz	w0, 430428 <ferror@plt+0x2d6f8>
  4303cc:	ldrb	w0, [x19, #32]
  4303d0:	cbnz	w0, 43049c <ferror@plt+0x2d76c>
  4303d4:	mov	x0, x19
  4303d8:	bl	42e608 <ferror@plt+0x2b8d8>
  4303dc:	and	w0, w0, #0xff
  4303e0:	cbz	w0, 4304c0 <ferror@plt+0x2d790>
  4303e4:	ldr	x0, [x19]
  4303e8:	cmp	x0, x21
  4303ec:	csel	w25, w25, wzr, eq  // eq = none
  4303f0:	ldr	w0, [x19, #500]
  4303f4:	cbnz	w0, 43040c <ferror@plt+0x2d6dc>
  4303f8:	add	x0, x19, #0x1c8
  4303fc:	str	x0, [x19, #488]
  430400:	ldr	x20, [x19, #472]
  430404:	add	x0, x20, #0x18
  430408:	str	x0, [x19, #448]
  43040c:	mov	w1, #0x40                  	// #64
  430410:	strh	w1, [x20, #6]
  430414:	ldrb	w0, [x19, #25]
  430418:	cmp	w0, #0x2
  43041c:	mov	w0, #0x41                  	// #65
  430420:	csel	w0, w0, w1, eq  // eq = none
  430424:	strh	w0, [x20, #6]
  430428:	ldr	x21, [x19]
  43042c:	adrp	x22, 479000 <_obstack_memory_used@@Base+0x24c60>
  430430:	add	x22, x22, #0xe28
  430434:	ldr	x0, [x19, #40]
  430438:	ldr	w0, [x0, #60]
  43043c:	str	w0, [x20]
  430440:	ldr	w0, [x21, #56]
  430444:	ldr	x2, [x21, #48]
  430448:	lsl	x0, x0, #4
  43044c:	ldr	x1, [x21]
  430450:	ldr	x0, [x2, x0]
  430454:	cmp	x1, x0
  430458:	b.cc	430464 <ferror@plt+0x2d734>  // b.lo, b.ul, b.last
  43045c:	ldr	x0, [x19, #8]
  430460:	cbz	x0, 4304e8 <ferror@plt+0x2d7b8>
  430464:	ldr	x0, [x21]
  430468:	add	x1, x0, #0x1
  43046c:	str	x1, [x21]
  430470:	ldrb	w26, [x0]
  430474:	mov	w24, w26
  430478:	ldr	w0, [x19, #1408]
  43047c:	cbz	w0, 430504 <ferror@plt+0x2d7d4>
  430480:	str	w0, [x20]
  430484:	cmp	w26, #0x7e
  430488:	b.hi	431a94 <ferror@plt+0x2ed64>  // b.pmore
  43048c:	ldrh	w0, [x22, w26, uxtw #1]
  430490:	adr	x1, 43049c <ferror@plt+0x2d76c>
  430494:	add	x0, x1, w0, sxth #2
  430498:	br	x0
  43049c:	mov	w0, #0x52                  	// #82
  4304a0:	strb	w0, [x20, #4]
  4304a4:	strb	wzr, [x19, #32]
  4304a8:	ldrb	w0, [x19, #33]
  4304ac:	cbnz	w0, 4319c4 <ferror@plt+0x2ec94>
  4304b0:	ldrb	w0, [x19, #24]
  4304b4:	sub	w0, w0, #0x1
  4304b8:	strb	w0, [x19, #24]
  4304bc:	b	4319c4 <ferror@plt+0x2ec94>
  4304c0:	mov	w0, #0x16                  	// #22
  4304c4:	strb	w0, [x20, #4]
  4304c8:	ldrb	w0, [x19, #16]
  4304cc:	cbnz	w0, 4319c4 <ferror@plt+0x2ec94>
  4304d0:	ldr	x0, [x19, #40]
  4304d4:	ldr	w0, [x0, #60]
  4304d8:	str	w0, [x20]
  4304dc:	mov	w0, #0x40                  	// #64
  4304e0:	strh	w0, [x20, #6]
  4304e4:	b	4319c4 <ferror@plt+0x2ec94>
  4304e8:	mov	w1, #0x0                   	// #0
  4304ec:	mov	x0, x19
  4304f0:	bl	42def0 <ferror@plt+0x2b1c0>
  4304f4:	ldr	x0, [x19, #40]
  4304f8:	ldr	w0, [x0, #60]
  4304fc:	str	w0, [x20]
  430500:	b	430464 <ferror@plt+0x2d734>
  430504:	ldr	x0, [x21, #8]
  430508:	sub	w1, w1, w0
  43050c:	ldr	x0, [x19, #40]
  430510:	bl	4329f4 <ferror@plt+0x2fcc4>
  430514:	str	w0, [x20]
  430518:	b	430484 <ferror@plt+0x2d754>
  43051c:	stp	x27, x28, [sp, #80]
  430520:	ldrh	w0, [x20, #6]
  430524:	orr	w0, w0, #0x1
  430528:	strh	w0, [x20, #6]
  43052c:	ldr	x26, [x19]
  430530:	mov	w28, #0x0                   	// #0
  430534:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  430538:	add	x0, x0, #0x908
  43053c:	str	x0, [sp, #104]
  430540:	adrp	x27, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  430544:	add	x27, x27, #0x28
  430548:	b	43056c <ferror@plt+0x2d83c>
  43054c:	mov	w28, #0x1                   	// #1
  430550:	ldr	x0, [x26]
  430554:	add	x1, x0, #0x1
  430558:	str	x1, [x26]
  43055c:	ldrb	w24, [x0]
  430560:	mov	w0, w24
  430564:	ldrh	w0, [x27, x0, lsl #1]
  430568:	tbz	w0, #11, 4305c4 <ferror@plt+0x2d894>
  43056c:	cmp	w24, #0x20
  430570:	ccmp	w24, #0x9, #0x4, ne  // ne = any
  430574:	b.eq	430550 <ferror@plt+0x2d820>  // b.none
  430578:	cbz	w24, 43054c <ferror@plt+0x2d81c>
  43057c:	ldrb	w0, [x19, #16]
  430580:	cbz	w0, 430550 <ferror@plt+0x2d820>
  430584:	ldrb	w0, [x19, #1154]
  430588:	cbz	w0, 430550 <ferror@plt+0x2d820>
  43058c:	ldr	x0, [x19, #40]
  430590:	ldr	x3, [x26]
  430594:	ldr	x1, [x26, #8]
  430598:	cmp	w24, #0xc
  43059c:	ldr	x2, [sp, #104]
  4305a0:	csel	x5, x2, x23, eq  // eq = none
  4305a4:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  4305a8:	add	x4, x4, #0x948
  4305ac:	sub	w3, w3, w1
  4305b0:	ldr	w2, [x0, #60]
  4305b4:	mov	w1, #0x2                   	// #2
  4305b8:	mov	x0, x19
  4305bc:	bl	426bfc <ferror@plt+0x23ecc>
  4305c0:	b	430550 <ferror@plt+0x2d820>
  4305c4:	cbnz	w28, 4305dc <ferror@plt+0x2d8ac>
  4305c8:	ldr	x0, [x26]
  4305cc:	sub	x0, x0, #0x1
  4305d0:	str	x0, [x26]
  4305d4:	ldp	x27, x28, [sp, #80]
  4305d8:	b	430440 <ferror@plt+0x2d710>
  4305dc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  4305e0:	add	x2, x2, #0x968
  4305e4:	mov	w1, #0x0                   	// #0
  4305e8:	mov	x0, x19
  4305ec:	bl	426a10 <ferror@plt+0x23ce0>
  4305f0:	b	4305c8 <ferror@plt+0x2d898>
  4305f4:	ldr	x1, [x21]
  4305f8:	ldr	x0, [x21, #32]
  4305fc:	cmp	x1, x0
  430600:	b.cc	430610 <ferror@plt+0x2d8e0>  // b.lo, b.ul, b.last
  430604:	mov	w0, #0x1                   	// #1
  430608:	strb	w0, [x21, #104]
  43060c:	b	4303bc <ferror@plt+0x2d68c>
  430610:	ldr	x0, [x19, #40]
  430614:	ldr	w1, [x0, #12]
  430618:	sub	w1, w1, #0x1
  43061c:	sbfiz	x2, x1, #1, #32
  430620:	add	x1, x2, w1, sxtw
  430624:	lsl	x1, x1, #3
  430628:	ldr	x4, [x0]
  43062c:	add	x3, x4, x1
  430630:	ldr	w2, [x0, #60]
  430634:	ldr	w1, [x4, x1]
  430638:	sub	w1, w2, w1
  43063c:	ldrb	w2, [x3, #6]
  430640:	lsr	w1, w1, w2
  430644:	ldr	w3, [x3, #16]
  430648:	add	w3, w3, #0x1
  43064c:	mov	w2, #0x0                   	// #0
  430650:	add	w1, w1, w3
  430654:	bl	4327c8 <ferror@plt+0x2fa98>
  430658:	b	430604 <ferror@plt+0x2d8d4>
  43065c:	str	wzr, [sp, #128]
  430660:	strb	wzr, [sp, #132]
  430664:	str	wzr, [sp, #136]
  430668:	mov	w0, #0x37                  	// #55
  43066c:	strb	w0, [x20, #4]
  430670:	add	x2, sp, #0x80
  430674:	add	x1, x20, #0x8
  430678:	mov	x0, x19
  43067c:	bl	42f4a4 <ferror@plt+0x2c774>
  430680:	add	x2, sp, #0x80
  430684:	mov	x1, x20
  430688:	mov	x0, x19
  43068c:	bl	42e8b0 <ferror@plt+0x2bb80>
  430690:	b	431ab0 <ferror@plt+0x2ed80>
  430694:	cmp	w24, #0x4c
  430698:	b.eq	4306b4 <ferror@plt+0x2d984>  // b.none
  43069c:	ldrb	w0, [x19, #1130]
  4306a0:	cbnz	w0, 4306b4 <ferror@plt+0x2d984>
  4306a4:	cmp	w24, #0x52
  4306a8:	b.eq	4306f4 <ferror@plt+0x2d9c4>  // b.none
  4306ac:	ldrb	w0, [x19, #1128]
  4306b0:	cbz	w0, 4306f4 <ferror@plt+0x2d9c4>
  4306b4:	ldr	x2, [x21]
  4306b8:	ldrb	w0, [x2]
  4306bc:	cmp	w24, #0x52
  4306c0:	cset	w1, ne  // ne = any
  4306c4:	cmp	w0, #0x27
  4306c8:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  4306cc:	b.ne	430784 <ferror@plt+0x2da54>  // b.any
  4306d0:	cmp	w0, #0x22
  4306d4:	b.eq	430784 <ferror@plt+0x2da54>  // b.none
  4306d8:	cmp	w0, #0x52
  4306dc:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  4306e0:	b.ne	430770 <ferror@plt+0x2da40>  // b.any
  4306e4:	cmp	w24, #0x75
  4306e8:	mov	w1, #0x38                  	// #56
  4306ec:	ccmp	w0, w1, #0x0, eq  // eq = none
  4306f0:	b.eq	430798 <ferror@plt+0x2da68>  // b.none
  4306f4:	mov	w0, #0x35                  	// #53
  4306f8:	strb	w0, [x20, #4]
  4306fc:	str	wzr, [sp, #128]
  430700:	strb	wzr, [sp, #132]
  430704:	str	wzr, [sp, #136]
  430708:	ldr	x1, [x21]
  43070c:	add	x4, x20, #0x10
  430710:	add	x3, sp, #0x80
  430714:	mov	w2, #0x0                   	// #0
  430718:	sub	x1, x1, #0x1
  43071c:	mov	x0, x19
  430720:	bl	42d7b8 <ferror@plt+0x2aa88>
  430724:	str	x0, [x20, #8]
  430728:	add	x2, sp, #0x80
  43072c:	mov	x1, x20
  430730:	mov	x0, x19
  430734:	bl	42e8b0 <ferror@plt+0x2bb80>
  430738:	ldr	x0, [x20, #8]
  43073c:	ldrh	w1, [x0, #18]
  430740:	tbz	w1, #2, 43075c <ferror@plt+0x2da2c>
  430744:	ldrh	w1, [x20, #6]
  430748:	orr	w1, w1, #0x10
  43074c:	strh	w1, [x20, #6]
  430750:	ldrb	w0, [x0, #16]
  430754:	ubfx	x0, x0, #1, #7
  430758:	strb	w0, [x20, #4]
  43075c:	cbz	w25, 431ab0 <ferror@plt+0x2ed80>
  430760:	ldrh	w0, [x20, #6]
  430764:	orr	w0, w0, #0x20
  430768:	strh	w0, [x20, #6]
  43076c:	b	431ab0 <ferror@plt+0x2ed80>
  430770:	ldrb	w0, [x2, #1]
  430774:	cmp	w0, #0x22
  430778:	b.ne	4306f4 <ferror@plt+0x2d9c4>  // b.any
  43077c:	ldrb	w0, [x19, #1130]
  430780:	cbz	w0, 4306f4 <ferror@plt+0x2d9c4>
  430784:	sub	x2, x2, #0x1
  430788:	mov	x1, x20
  43078c:	mov	x0, x19
  430790:	bl	42f658 <ferror@plt+0x2c928>
  430794:	b	431ab0 <ferror@plt+0x2ed80>
  430798:	ldrb	w0, [x2, #1]
  43079c:	cmp	w0, #0x22
  4307a0:	b.eq	430784 <ferror@plt+0x2da54>  // b.none
  4307a4:	cmp	w0, #0x27
  4307a8:	b.eq	4307cc <ferror@plt+0x2da9c>  // b.none
  4307ac:	cmp	w0, #0x52
  4307b0:	b.ne	4306f4 <ferror@plt+0x2d9c4>  // b.any
  4307b4:	ldrb	w0, [x2, #2]
  4307b8:	cmp	w0, #0x22
  4307bc:	b.ne	4306f4 <ferror@plt+0x2d9c4>  // b.any
  4307c0:	ldrb	w0, [x19, #1130]
  4307c4:	cbz	w0, 4306f4 <ferror@plt+0x2d9c4>
  4307c8:	b	430784 <ferror@plt+0x2da54>
  4307cc:	ldrb	w0, [x19, #1129]
  4307d0:	cbnz	w0, 430784 <ferror@plt+0x2da54>
  4307d4:	b	4306f4 <ferror@plt+0x2d9c4>
  4307d8:	ldr	x2, [x21]
  4307dc:	sub	x2, x2, #0x1
  4307e0:	mov	x1, x20
  4307e4:	mov	x0, x19
  4307e8:	bl	42f658 <ferror@plt+0x2c928>
  4307ec:	b	431ab0 <ferror@plt+0x2ed80>
  4307f0:	stp	x27, x28, [sp, #80]
  4307f4:	ldr	x27, [x21]
  4307f8:	ldrb	w28, [x27]
  4307fc:	cmp	w28, #0x2a
  430800:	b.eq	430854 <ferror@plt+0x2db24>  // b.none
  430804:	cmp	w28, #0x2f
  430808:	b.ne	430a6c <ferror@plt+0x2dd3c>  // b.any
  43080c:	ldrb	w0, [x19, #1160]
  430810:	cbnz	w0, 430a8c <ferror@plt+0x2dd5c>
  430814:	ldr	x0, [x19]
  430818:	cbz	x0, 430824 <ferror@plt+0x2daf4>
  43081c:	ldrb	w0, [x0, #106]
  430820:	cbnz	w0, 430908 <ferror@plt+0x2dbd8>
  430824:	ldr	w0, [x19, #1116]
  430828:	cbnz	w0, 4308c0 <ferror@plt+0x2db90>
  43082c:	ldrb	w1, [x19, #1154]
  430830:	cbz	w1, 43083c <ferror@plt+0x2db0c>
  430834:	ldrb	w1, [x21, #105]
  430838:	tbz	w1, #0, 43087c <ferror@plt+0x2db4c>
  43083c:	ldrsb	w1, [x19, #1198]
  430840:	cmp	w1, #0x0
  430844:	b.le	430908 <ferror@plt+0x2dbd8>
  430848:	ldrb	w1, [x19, #1120]
  43084c:	cbnz	w1, 430908 <ferror@plt+0x2dbd8>
  430850:	b	4308d4 <ferror@plt+0x2dba4>
  430854:	mov	x0, x19
  430858:	bl	42e14c <ferror@plt+0x2b41c>
  43085c:	and	w0, w0, #0xff
  430860:	cbz	w0, 43095c <ferror@plt+0x2dc2c>
  430864:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430868:	add	x2, x2, #0x988
  43086c:	mov	w1, #0x3                   	// #3
  430870:	mov	x0, x19
  430874:	bl	426a10 <ferror@plt+0x23ce0>
  430878:	b	43095c <ferror@plt+0x2dc2c>
  43087c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430880:	add	x2, x2, #0x9a0
  430884:	mov	w1, #0x2                   	// #2
  430888:	mov	x0, x19
  43088c:	bl	426a10 <ferror@plt+0x23ce0>
  430890:	and	w0, w0, #0xff
  430894:	cbnz	w0, 4308a8 <ferror@plt+0x2db78>
  430898:	ldrb	w0, [x21, #105]
  43089c:	orr	w0, w0, #0x1
  4308a0:	strb	w0, [x21, #105]
  4308a4:	b	430908 <ferror@plt+0x2dbd8>
  4308a8:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  4308ac:	add	x2, x2, #0x9d0
  4308b0:	mov	w1, #0x5                   	// #5
  4308b4:	mov	x0, x19
  4308b8:	bl	426a10 <ferror@plt+0x23ce0>
  4308bc:	b	430898 <ferror@plt+0x2db68>
  4308c0:	ldrsb	w1, [x19, #1198]
  4308c4:	cmp	w1, #0x0
  4308c8:	b.le	4308dc <ferror@plt+0x2dbac>
  4308cc:	ldrb	w1, [x19, #1120]
  4308d0:	cbnz	w1, 4308dc <ferror@plt+0x2dbac>
  4308d4:	ldrb	w1, [x21, #105]
  4308d8:	tbz	w1, #0, 4309bc <ferror@plt+0x2dc8c>
  4308dc:	sub	w0, w0, #0x5
  4308e0:	cmp	w0, #0x1
  4308e4:	b.hi	430908 <ferror@plt+0x2dbd8>  // b.pmore
  4308e8:	ldrb	w0, [x27, #1]
  4308ec:	cmp	w0, #0x2a
  4308f0:	b.eq	430a00 <ferror@plt+0x2dcd0>  // b.none
  4308f4:	ldr	w0, [x19, #16]
  4308f8:	tst	w0, #0xff00ff
  4308fc:	b.ne	430a00 <ferror@plt+0x2dcd0>  // b.any
  430900:	ldrb	w0, [x21, #105]
  430904:	tbz	w0, #0, 430a10 <ferror@plt+0x2dce0>
  430908:	ldr	x2, [x19]
  43090c:	ldr	x0, [x19, #40]
  430910:	ldr	w24, [x0, #60]
  430914:	ldr	x0, [x2]
  430918:	ldrb	w1, [x0]
  43091c:	cmp	w1, #0xa
  430920:	b.eq	430938 <ferror@plt+0x2dc08>  // b.none
  430924:	add	x0, x0, #0x1
  430928:	str	x0, [x2]
  43092c:	ldrb	w1, [x0], #1
  430930:	cmp	w1, #0xa
  430934:	b.ne	430928 <ferror@plt+0x2dbf8>  // b.any
  430938:	mov	w1, #0x1                   	// #1
  43093c:	mov	x0, x19
  430940:	bl	42def0 <ferror@plt+0x2b1c0>
  430944:	ldr	x0, [x19, #40]
  430948:	ldr	w0, [x0, #60]
  43094c:	cmp	w24, w0
  430950:	b.eq	43095c <ferror@plt+0x2dc2c>  // b.none
  430954:	ldrb	w0, [x19, #1133]
  430958:	cbnz	w0, 430a54 <ferror@plt+0x2dd24>
  43095c:	add	x24, x27, #0x1
  430960:	ldrb	w0, [x19, #1144]
  430964:	cmp	w0, #0x2
  430968:	b.eq	430a9c <ferror@plt+0x2dd6c>  // b.none
  43096c:	b.hi	431b54 <ferror@plt+0x2ee24>  // b.pmore
  430970:	cmp	w0, #0x1
  430974:	csinc	w25, w25, wzr, ne  // ne = any
  430978:	ldr	x4, [x19, #1072]
  43097c:	cbz	x4, 4309a0 <ferror@plt+0x2dc70>
  430980:	ldr	x0, [x19]
  430984:	ldr	x3, [x0]
  430988:	sub	x3, x3, x27
  43098c:	add	x3, x3, #0x1
  430990:	sub	x2, x27, #0x1
  430994:	ldr	w1, [x20]
  430998:	mov	x0, x19
  43099c:	blr	x4
  4309a0:	ldrb	w0, [x19, #21]
  4309a4:	cbnz	w0, 431150 <ferror@plt+0x2e420>
  4309a8:	ldrh	w0, [x20, #6]
  4309ac:	orr	w0, w0, #0x1
  4309b0:	strh	w0, [x20, #6]
  4309b4:	ldp	x27, x28, [sp, #80]
  4309b8:	b	430434 <ferror@plt+0x2d704>
  4309bc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  4309c0:	add	x2, x2, #0xa08
  4309c4:	mov	w1, #0x0                   	// #0
  4309c8:	mov	x0, x19
  4309cc:	bl	426a10 <ferror@plt+0x23ce0>
  4309d0:	and	w0, w0, #0xff
  4309d4:	cbnz	w0, 4309e8 <ferror@plt+0x2dcb8>
  4309d8:	ldrb	w0, [x21, #105]
  4309dc:	orr	w0, w0, #0x1
  4309e0:	strb	w0, [x21, #105]
  4309e4:	b	430908 <ferror@plt+0x2dbd8>
  4309e8:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  4309ec:	add	x2, x2, #0x9d0
  4309f0:	mov	w1, #0x5                   	// #5
  4309f4:	mov	x0, x19
  4309f8:	bl	426a10 <ferror@plt+0x23ce0>
  4309fc:	b	4309d8 <ferror@plt+0x2dca8>
  430a00:	mov	w0, #0x7                   	// #7
  430a04:	strb	w0, [x20, #4]
  430a08:	ldp	x27, x28, [sp, #80]
  430a0c:	b	43195c <ferror@plt+0x2ec2c>
  430a10:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430a14:	add	x2, x2, #0x9a0
  430a18:	mov	w1, #0x3                   	// #3
  430a1c:	mov	x0, x19
  430a20:	bl	426a10 <ferror@plt+0x23ce0>
  430a24:	and	w0, w0, #0xff
  430a28:	cbnz	w0, 430a3c <ferror@plt+0x2dd0c>
  430a2c:	ldrb	w0, [x21, #105]
  430a30:	orr	w0, w0, #0x1
  430a34:	strb	w0, [x21, #105]
  430a38:	b	430908 <ferror@plt+0x2dbd8>
  430a3c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430a40:	add	x2, x2, #0x9d0
  430a44:	mov	w1, #0x5                   	// #5
  430a48:	mov	x0, x19
  430a4c:	bl	426a10 <ferror@plt+0x23ce0>
  430a50:	b	430a2c <ferror@plt+0x2dcfc>
  430a54:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  430a58:	add	x2, x2, #0xa38
  430a5c:	mov	w1, #0x2                   	// #2
  430a60:	mov	x0, x19
  430a64:	bl	426a88 <ferror@plt+0x23d58>
  430a68:	b	43095c <ferror@plt+0x2dc2c>
  430a6c:	cmp	w28, #0x3d
  430a70:	b.ne	430a8c <ferror@plt+0x2dd5c>  // b.any
  430a74:	add	x27, x27, #0x1
  430a78:	str	x27, [x21]
  430a7c:	mov	w0, #0x1e                  	// #30
  430a80:	strb	w0, [x20, #4]
  430a84:	ldp	x27, x28, [sp, #80]
  430a88:	b	43195c <ferror@plt+0x2ec2c>
  430a8c:	mov	w0, #0x7                   	// #7
  430a90:	strb	w0, [x20, #4]
  430a94:	ldp	x27, x28, [sp, #80]
  430a98:	b	43195c <ferror@plt+0x2ec2c>
  430a9c:	ldr	x0, [x19]
  430aa0:	ldr	x2, [x0]
  430aa4:	sub	x0, x2, x24
  430aa8:	cmp	x0, #0x7
  430aac:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430ab0:	mov	w1, #0x2d                  	// #45
  430ab4:	b	430ac8 <ferror@plt+0x2dd98>
  430ab8:	add	x24, x24, #0x1
  430abc:	sub	x0, x2, x24
  430ac0:	cmp	x0, #0x7
  430ac4:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430ac8:	ldrb	w0, [x24]
  430acc:	and	w0, w0, #0xffffffdf
  430ad0:	and	w0, w0, #0xff
  430ad4:	cmp	w0, #0x46
  430ad8:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430adc:	ldrb	w0, [x24, #1]
  430ae0:	and	w0, w0, #0xffffffdf
  430ae4:	and	w0, w0, #0xff
  430ae8:	cmp	w0, #0x41
  430aec:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430af0:	ldrb	w0, [x24, #2]
  430af4:	and	w0, w0, #0xffffffdf
  430af8:	and	w0, w0, #0xff
  430afc:	cmp	w0, #0x4c
  430b00:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430b04:	ldrb	w0, [x24, #3]
  430b08:	and	w0, w0, #0xffffffdf
  430b0c:	and	w0, w0, #0xff
  430b10:	cmp	w0, #0x4c
  430b14:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430b18:	ldrb	w0, [x24, #4]
  430b1c:	and	w0, w0, #0xffffffdf
  430b20:	and	w0, w0, #0xff
  430b24:	cmp	w0, #0x53
  430b28:	cinc	x24, x24, eq  // eq = none
  430b2c:	ldrb	w0, [x24, #4]!
  430b30:	cmp	w0, #0x20
  430b34:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430b38:	ccmp	w0, w1, #0x4, ne  // ne = any
  430b3c:	b.ne	430b54 <ferror@plt+0x2de24>  // b.any
  430b40:	ldrb	w0, [x24, #1]!
  430b44:	cmp	w0, #0x20
  430b48:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430b4c:	ccmp	w0, w1, #0x4, ne  // ne = any
  430b50:	b.eq	430b40 <ferror@plt+0x2de10>  // b.none
  430b54:	and	w0, w0, #0xffffffdf
  430b58:	and	w0, w0, #0xff
  430b5c:	cmp	w0, #0x54
  430b60:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430b64:	ldrb	w0, [x24, #1]
  430b68:	and	w0, w0, #0xffffffdf
  430b6c:	and	w0, w0, #0xff
  430b70:	cmp	w0, #0x48
  430b74:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430b78:	ldrb	w0, [x24, #2]
  430b7c:	and	w0, w0, #0xffffffdf
  430b80:	and	w0, w0, #0xff
  430b84:	cmp	w0, #0x52
  430b88:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430b8c:	ldrb	w0, [x24, #3]
  430b90:	and	w0, w0, #0xffffffdf
  430b94:	and	w0, w0, #0xff
  430b98:	cmp	w0, #0x55
  430b9c:	b.eq	431148 <ferror@plt+0x2e418>  // b.none
  430ba0:	cmp	w0, #0x4f
  430ba4:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430ba8:	ldrb	w0, [x24, #4]
  430bac:	and	w0, w0, #0xffffffdf
  430bb0:	and	w0, w0, #0xff
  430bb4:	cmp	w0, #0x55
  430bb8:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430bbc:	ldrb	w0, [x24, #5]
  430bc0:	and	w0, w0, #0xffffffdf
  430bc4:	and	w0, w0, #0xff
  430bc8:	cmp	w0, #0x47
  430bcc:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430bd0:	ldrb	w0, [x24, #6]
  430bd4:	and	w0, w0, #0xffffffdf
  430bd8:	and	w0, w0, #0xff
  430bdc:	cmp	w0, #0x48
  430be0:	b.ne	430ab8 <ferror@plt+0x2dd88>  // b.any
  430be4:	mov	w25, #0x1                   	// #1
  430be8:	b	430978 <ferror@plt+0x2dc48>
  430bec:	ldrb	w0, [x27, #13]
  430bf0:	cmp	w0, #0x40
  430bf4:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  430bf8:	mov	x0, #0xc                   	// #12
  430bfc:	b	431bbc <ferror@plt+0x2ee8c>
  430c00:	cmp	w26, #0x6c
  430c04:	b.eq	430df4 <ferror@plt+0x2e0c4>  // b.none
  430c08:	cmp	w0, #0x4
  430c0c:	b.eq	430e4c <ferror@plt+0x2e11c>  // b.none
  430c10:	sub	w0, w26, #0x20
  430c14:	and	w0, w0, #0xff
  430c18:	cmp	w26, #0x2e
  430c1c:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  430c20:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  430c24:	b.hi	430c44 <ferror@plt+0x2df14>  // b.pmore
  430c28:	ldrb	w26, [x24, #1]!
  430c2c:	sub	w0, w26, #0x20
  430c30:	and	w0, w0, #0xff
  430c34:	cmp	w26, #0x2e
  430c38:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  430c3c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  430c40:	b.ls	430c28 <ferror@plt+0x2def8>  // b.plast
  430c44:	and	w0, w26, #0xffffffdf
  430c48:	and	w0, w0, #0xff
  430c4c:	cmp	w0, #0x45
  430c50:	b.ne	430f28 <ferror@plt+0x2e1f8>  // b.any
  430c54:	ldr	x0, [x19]
  430c58:	ldr	x0, [x0]
  430c5c:	sub	x0, x0, x24
  430c60:	cmp	x0, #0xc
  430c64:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430c68:	cmp	w26, #0x45
  430c6c:	b.eq	430ef4 <ferror@plt+0x2e1c4>  // b.none
  430c70:	mov	x2, #0x3                   	// #3
  430c74:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430c78:	add	x1, x1, #0xa80
  430c7c:	add	x0, x24, #0x1
  430c80:	bl	4029e0 <memcmp@plt>
  430c84:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430c88:	mov	x1, x24
  430c8c:	ldrb	w2, [x1, #4]!
  430c90:	add	x0, x24, #0x5
  430c94:	cmp	w2, #0x2c
  430c98:	csel	x0, x0, x1, eq  // eq = none
  430c9c:	ldrb	w1, [x0]
  430ca0:	cmp	w1, #0x20
  430ca4:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  430ca8:	add	x24, x0, #0x1
  430cac:	ldr	w1, [sp, #104]
  430cb0:	cbz	w1, 430cc0 <ferror@plt+0x2df90>
  430cb4:	ldrb	w1, [x0, #1]
  430cb8:	cmp	w1, #0x66
  430cbc:	b.eq	430978 <ferror@plt+0x2dc48>  // b.none
  430cc0:	cmp	w26, #0x65
  430cc4:	b.eq	430f18 <ferror@plt+0x2e1e8>  // b.none
  430cc8:	ldrb	w26, [x0, #1]
  430ccc:	and	w0, w26, #0xffffffdf
  430cd0:	and	w0, w0, #0xff
  430cd4:	cmp	w0, #0x46
  430cd8:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  430cdc:	ldr	x0, [x19]
  430ce0:	ldr	x0, [x0]
  430ce4:	str	x0, [sp, #120]
  430ce8:	sub	x0, x0, x24
  430cec:	cmp	x0, #0x7
  430cf0:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430cf4:	cmp	w26, #0x46
  430cf8:	b.eq	430fe0 <ferror@plt+0x2e2b0>  // b.none
  430cfc:	ldr	w0, [sp, #104]
  430d00:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430d04:	mov	x2, #0x3                   	// #3
  430d08:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430d0c:	add	x1, x1, #0xab0
  430d10:	add	x0, x24, #0x1
  430d14:	bl	4029e0 <memcmp@plt>
  430d18:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430d1c:	add	x0, x24, #0x4
  430d20:	str	x0, [sp, #112]
  430d24:	ldrb	w0, [x24, #4]
  430d28:	mov	w1, w0
  430d2c:	mov	w2, #0x73                  	// #115
  430d30:	cmp	w2, w1
  430d34:	b.eq	431018 <ferror@plt+0x2e2e8>  // b.none
  430d38:	cmp	w0, #0x2d
  430d3c:	mov	w2, #0x20                  	// #32
  430d40:	ccmp	w0, w2, #0x4, ne  // ne = any
  430d44:	b.ne	431030 <ferror@plt+0x2e300>  // b.any
  430d48:	add	x0, x24, #0x5
  430d4c:	str	x0, [sp, #112]
  430d50:	cmp	w26, #0x66
  430d54:	b.eq	430d68 <ferror@plt+0x2e038>  // b.none
  430d58:	ldr	x0, [sp, #112]
  430d5c:	ldrb	w0, [x0]
  430d60:	cmp	w0, #0x54
  430d64:	b.eq	431050 <ferror@plt+0x2e320>  // b.none
  430d68:	ldr	w0, [sp, #104]
  430d6c:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430d70:	ldr	x0, [sp, #112]
  430d74:	ldrb	w0, [x0]
  430d78:	cmp	w0, #0x74
  430d7c:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  430d80:	ldr	x0, [sp, #120]
  430d84:	ldr	x1, [sp, #112]
  430d88:	sub	x24, x0, x1
  430d8c:	cmp	x24, #0x3
  430d90:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430d94:	ldr	x0, [sp, #112]
  430d98:	add	x26, x0, #0x1
  430d9c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430da0:	add	x1, x1, #0x928
  430da4:	mov	x2, #0x3                   	// #3
  430da8:	mov	x0, x26
  430dac:	bl	4029e0 <memcmp@plt>
  430db0:	cbz	w0, 431088 <ferror@plt+0x2e358>
  430db4:	cmp	x24, #0x6
  430db8:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430dbc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  430dc0:	add	x0, x0, #0x940
  430dc4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430dc8:	add	x1, x1, #0x938
  430dcc:	ldr	w2, [sp, #104]
  430dd0:	cmp	w2, #0x0
  430dd4:	mov	x2, #0x6                   	// #6
  430dd8:	csel	x1, x1, x0, ne  // ne = any
  430ddc:	mov	x0, x26
  430de0:	bl	4029e0 <memcmp@plt>
  430de4:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430de8:	ldr	x0, [sp, #112]
  430dec:	add	x24, x0, #0x7
  430df0:	b	431090 <ferror@plt+0x2e360>
  430df4:	ldr	x0, [x19]
  430df8:	ldr	x0, [x0]
  430dfc:	sub	x0, x0, x24
  430e00:	sub	x0, x0, #0x1
  430e04:	cmp	x0, #0xf
  430e08:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430e0c:	mov	x2, #0x10                  	// #16
  430e10:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430e14:	add	x1, x1, #0xa50
  430e18:	add	x0, x27, #0x2
  430e1c:	bl	4029e0 <memcmp@plt>
  430e20:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430e24:	add	x24, x27, #0x12
  430e28:	ldrb	w0, [x27, #18]
  430e2c:	cmp	w0, #0x20
  430e30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430e34:	b.ne	431bc4 <ferror@plt+0x2ee94>  // b.any
  430e38:	ldrb	w0, [x24, #1]!
  430e3c:	cmp	w0, #0x20
  430e40:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430e44:	b.eq	430e38 <ferror@plt+0x2e108>  // b.none
  430e48:	b	431bc4 <ferror@plt+0x2ee94>
  430e4c:	cmp	w26, #0x20
  430e50:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  430e54:	b.ne	430e68 <ferror@plt+0x2e138>  // b.any
  430e58:	ldrb	w0, [x24, #1]!
  430e5c:	cmp	w0, #0x20
  430e60:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430e64:	b.eq	430e58 <ferror@plt+0x2e128>  // b.none
  430e68:	ldr	x0, [x19]
  430e6c:	ldr	x26, [x0]
  430e70:	sub	x0, x26, x24
  430e74:	cmp	x0, #0x7
  430e78:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430e7c:	mov	x2, #0x7                   	// #7
  430e80:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430e84:	add	x1, x1, #0xa68
  430e88:	mov	x0, x24
  430e8c:	bl	4029e0 <memcmp@plt>
  430e90:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430e94:	ldrb	w0, [x24, #7]
  430e98:	cmp	w0, #0x55
  430e9c:	b.eq	430ecc <ferror@plt+0x2e19c>  // b.none
  430ea0:	add	x0, x24, #0x7
  430ea4:	sub	x1, x26, x0
  430ea8:	cmp	x1, #0x3
  430eac:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430eb0:	mov	x2, #0x4                   	// #4
  430eb4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430eb8:	add	x1, x1, #0xa70
  430ebc:	bl	4029e0 <memcmp@plt>
  430ec0:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430ec4:	add	x24, x24, #0xb
  430ec8:	b	430ed0 <ferror@plt+0x2e1a0>
  430ecc:	add	x24, x24, #0x8
  430ed0:	ldrb	w0, [x24]
  430ed4:	cmp	w0, #0x20
  430ed8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430edc:	b.ne	431bc4 <ferror@plt+0x2ee94>  // b.any
  430ee0:	ldrb	w0, [x24, #1]!
  430ee4:	cmp	w0, #0x20
  430ee8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430eec:	b.eq	430ee0 <ferror@plt+0x2e1b0>  // b.none
  430ef0:	b	431bc4 <ferror@plt+0x2ee94>
  430ef4:	mov	x2, #0x3                   	// #3
  430ef8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430efc:	add	x1, x1, #0xa78
  430f00:	add	x0, x24, #0x1
  430f04:	bl	4029e0 <memcmp@plt>
  430f08:	cbnz	w0, 430c70 <ferror@plt+0x2df40>
  430f0c:	mov	w0, #0x1                   	// #1
  430f10:	str	w0, [sp, #104]
  430f14:	b	430c88 <ferror@plt+0x2df58>
  430f18:	ldrb	w1, [x0, #1]
  430f1c:	cmp	w1, #0x46
  430f20:	b.ne	430cc8 <ferror@plt+0x2df98>  // b.any
  430f24:	b	430978 <ferror@plt+0x2dc48>
  430f28:	cmp	w0, #0x49
  430f2c:	b.ne	430ccc <ferror@plt+0x2df9c>  // b.any
  430f30:	ldr	x0, [x19]
  430f34:	ldr	x0, [x0]
  430f38:	sub	x0, x0, x24
  430f3c:	cmp	x0, #0x13
  430f40:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  430f44:	cmp	w26, #0x49
  430f48:	b.eq	430f90 <ferror@plt+0x2e260>  // b.none
  430f4c:	mov	x2, #0xa                   	// #10
  430f50:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430f54:	add	x1, x1, #0xa98
  430f58:	add	x0, x24, #0x1
  430f5c:	bl	4029e0 <memcmp@plt>
  430f60:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430f64:	add	x0, x24, #0xb
  430f68:	ldrb	w1, [x24, #11]
  430f6c:	cmp	w1, #0x20
  430f70:	b.eq	431b14 <ferror@plt+0x2ede4>  // b.none
  430f74:	mov	x2, #0x3                   	// #3
  430f78:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430f7c:	add	x1, x1, #0xac0
  430f80:	bl	4029e0 <memcmp@plt>
  430f84:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  430f88:	add	x0, x24, #0xe
  430f8c:	b	431b40 <ferror@plt+0x2ee10>
  430f90:	mov	x2, #0xa                   	// #10
  430f94:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430f98:	add	x1, x1, #0xa88
  430f9c:	add	x0, x24, #0x1
  430fa0:	bl	4029e0 <memcmp@plt>
  430fa4:	cbnz	w0, 430f4c <ferror@plt+0x2e21c>
  430fa8:	ldrb	w0, [x24, #11]
  430fac:	cmp	w0, #0x20
  430fb0:	b.ne	431b1c <ferror@plt+0x2edec>  // b.any
  430fb4:	add	x0, x24, #0xc
  430fb8:	ldrb	w1, [x24, #12]
  430fbc:	cmp	w1, #0x66
  430fc0:	b.eq	430978 <ferror@plt+0x2dc48>  // b.none
  430fc4:	mov	w1, #0x1                   	// #1
  430fc8:	str	w1, [sp, #104]
  430fcc:	b	431b48 <ferror@plt+0x2ee18>
  430fd0:	ldrb	w1, [x0]
  430fd4:	cmp	w1, #0x46
  430fd8:	b.ne	431b48 <ferror@plt+0x2ee18>  // b.any
  430fdc:	b	430978 <ferror@plt+0x2dc48>
  430fe0:	mov	x2, #0x3                   	// #3
  430fe4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  430fe8:	add	x1, x1, #0xaa8
  430fec:	add	x0, x24, #0x1
  430ff0:	bl	4029e0 <memcmp@plt>
  430ff4:	cbnz	w0, 430cfc <ferror@plt+0x2dfcc>
  430ff8:	add	x0, x24, #0x4
  430ffc:	str	x0, [sp, #112]
  431000:	ldrb	w0, [x24, #4]
  431004:	mov	w1, w0
  431008:	mov	w2, #0x1                   	// #1
  43100c:	str	w2, [sp, #104]
  431010:	mov	w2, #0x53                  	// #83
  431014:	b	430d30 <ferror@plt+0x2e000>
  431018:	ldrb	w2, [x24, #5]
  43101c:	cmp	w2, #0x20
  431020:	b.ne	430d38 <ferror@plt+0x2e008>  // b.any
  431024:	add	x0, x24, #0x6
  431028:	str	x0, [sp, #112]
  43102c:	b	430d50 <ferror@plt+0x2e020>
  431030:	ldr	w0, [sp, #104]
  431034:	cmp	w0, #0x0
  431038:	mov	w0, #0x54                  	// #84
  43103c:	mov	w2, #0x74                  	// #116
  431040:	csel	w0, w0, w2, ne  // ne = any
  431044:	cmp	w0, w1
  431048:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  43104c:	b	430d50 <ferror@plt+0x2e020>
  431050:	ldr	x1, [sp, #120]
  431054:	ldr	x0, [sp, #112]
  431058:	sub	x24, x1, x0
  43105c:	cmp	x24, #0x3
  431060:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  431064:	add	x26, x0, #0x1
  431068:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  43106c:	add	x0, x0, #0x928
  431070:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  431074:	add	x1, x1, #0x930
  431078:	ldr	w2, [sp, #104]
  43107c:	cmp	w2, #0x0
  431080:	csel	x1, x1, x0, ne  // ne = any
  431084:	b	430da4 <ferror@plt+0x2e074>
  431088:	ldr	x0, [sp, #112]
  43108c:	add	x24, x0, #0x4
  431090:	ldrb	w0, [x24]
  431094:	sub	w1, w0, #0x20
  431098:	and	w1, w1, #0xff
  43109c:	cmp	w0, #0x2e
  4310a0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4310a4:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4310a8:	b.hi	4310b4 <ferror@plt+0x2e384>  // b.pmore
  4310ac:	add	x24, x24, #0x1
  4310b0:	b	431090 <ferror@plt+0x2e360>
  4310b4:	cmp	w0, #0x2d
  4310b8:	b.ne	431bc4 <ferror@plt+0x2ee94>  // b.any
  4310bc:	add	x0, x24, #0x1
  4310c0:	ldrb	w1, [x27]
  4310c4:	cmp	w1, #0x2a
  4310c8:	b.ne	43112c <ferror@plt+0x2e3fc>  // b.any
  4310cc:	add	x0, x24, #0x2
  4310d0:	b	4310d8 <ferror@plt+0x2e3a8>
  4310d4:	add	x0, x0, #0x1
  4310d8:	sub	x24, x0, #0x1
  4310dc:	ldurb	w1, [x0, #-1]
  4310e0:	and	w2, w1, #0xffffffdf
  4310e4:	and	w2, w2, #0xff
  4310e8:	cmp	w1, #0x0
  4310ec:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  4310f0:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  4310f4:	b.ne	4310d4 <ferror@plt+0x2e3a4>  // b.any
  4310f8:	cmp	w1, #0x2a
  4310fc:	b.ne	43110c <ferror@plt+0x2e3dc>  // b.any
  431100:	ldrb	w1, [x0]
  431104:	cmp	w1, #0x2f
  431108:	b.ne	4310d4 <ferror@plt+0x2e3a4>  // b.any
  43110c:	ldrb	w0, [x24]
  431110:	cmp	w0, #0x2a
  431114:	b.ne	430978 <ferror@plt+0x2dc48>  // b.any
  431118:	ldrb	w0, [x24, #1]
  43111c:	cmp	w0, #0x2f
  431120:	csinc	w25, w25, wzr, ne  // ne = any
  431124:	b	430978 <ferror@plt+0x2dc48>
  431128:	add	x0, x0, #0x1
  43112c:	ldrb	w1, [x0]
  431130:	cmp	w1, #0x0
  431134:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  431138:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  43113c:	b.ne	431128 <ferror@plt+0x2e3f8>  // b.any
  431140:	mov	x24, x0
  431144:	b	431bd0 <ferror@plt+0x2eea0>
  431148:	mov	w25, #0x1                   	// #1
  43114c:	b	430978 <ferror@plt+0x2dc48>
  431150:	cbz	w25, 431160 <ferror@plt+0x2e430>
  431154:	ldrh	w0, [x20, #6]
  431158:	orr	w0, w0, #0x20
  43115c:	strh	w0, [x20, #6]
  431160:	ldr	x0, [x19]
  431164:	ldr	x0, [x0]
  431168:	ldurb	w2, [x0, #-1]
  43116c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  431170:	add	x1, x1, #0x28
  431174:	ldrh	w1, [x1, x2, lsl #1]
  431178:	tst	x1, #0x400
  43117c:	sub	w0, w0, w27
  431180:	cinc	w23, w0, eq  // eq = none
  431184:	ldrb	w0, [x19, #16]
  431188:	cbnz	w0, 431194 <ferror@plt+0x2e464>
  43118c:	ldrb	w0, [x19, #25]
  431190:	cbz	w0, 4312d0 <ferror@plt+0x2e5a0>
  431194:	cmp	w28, #0x2f
  431198:	b.eq	431280 <ferror@plt+0x2e550>  // b.none
  43119c:	mov	w1, w23
  4311a0:	mov	x0, x19
  4311a4:	bl	42f440 <ferror@plt+0x2c710>
  4311a8:	mov	x22, x0
  4311ac:	mov	w0, #0x4f                  	// #79
  4311b0:	strb	w0, [x20, #4]
  4311b4:	str	w23, [x20, #8]
  4311b8:	str	x22, [x20, #16]
  4311bc:	mov	x0, x22
  4311c0:	mov	w1, #0x2f                  	// #47
  4311c4:	strb	w1, [x0], #1
  4311c8:	sub	w2, w23, #0x1
  4311cc:	mov	x1, x27
  4311d0:	bl	402620 <memcpy@plt>
  4311d4:	ldrb	w0, [x19, #16]
  4311d8:	cbnz	w0, 4311ec <ferror@plt+0x2e4bc>
  4311dc:	ldrb	w0, [x19, #25]
  4311e0:	cbz	w0, 4311ec <ferror@plt+0x2e4bc>
  4311e4:	cmp	w28, #0x2f
  4311e8:	b.eq	431314 <ferror@plt+0x2e5e4>  // b.none
  4311ec:	ldr	w0, [x19, #1396]
  4311f0:	cbz	w0, 431390 <ferror@plt+0x2e660>
  4311f4:	ldr	w1, [x19, #1396]
  4311f8:	ldr	w0, [x19, #1392]
  4311fc:	cmp	w0, w1
  431200:	b.eq	4313a8 <ferror@plt+0x2e678>  // b.none
  431204:	ldr	w22, [x20, #8]
  431208:	ldrsw	x23, [x19, #1392]
  43120c:	lsl	x23, x23, #4
  431210:	ldr	x24, [x19, #1384]
  431214:	add	w0, w22, #0x1
  431218:	sxtw	x0, w0
  43121c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  431220:	str	x0, [x24, x23]
  431224:	sxtw	x22, w22
  431228:	ldrsw	x0, [x19, #1392]
  43122c:	ldr	x3, [x19, #1384]
  431230:	lsl	x0, x0, #4
  431234:	mov	x2, x22
  431238:	ldr	x1, [x20, #16]
  43123c:	ldr	x0, [x3, x0]
  431240:	bl	402620 <memcpy@plt>
  431244:	ldrsw	x0, [x19, #1392]
  431248:	ldr	x1, [x19, #1384]
  43124c:	lsl	x0, x0, #4
  431250:	ldr	x0, [x1, x0]
  431254:	strb	wzr, [x0, x22]
  431258:	ldr	w1, [x20]
  43125c:	ldrsw	x0, [x19, #1392]
  431260:	ldr	x2, [x19, #1384]
  431264:	add	x0, x2, x0, lsl #4
  431268:	str	w1, [x0, #8]
  43126c:	ldr	w0, [x19, #1392]
  431270:	add	w0, w0, #0x1
  431274:	str	w0, [x19, #1392]
  431278:	ldp	x27, x28, [sp, #80]
  43127c:	b	431ab0 <ferror@plt+0x2ed80>
  431280:	add	w24, w23, #0x2
  431284:	add	w1, w23, #0x2
  431288:	mov	x0, x19
  43128c:	bl	42f440 <ferror@plt+0x2c710>
  431290:	mov	x22, x0
  431294:	mov	w0, #0x4f                  	// #79
  431298:	strb	w0, [x20, #4]
  43129c:	str	w24, [x20, #8]
  4312a0:	str	x22, [x20, #16]
  4312a4:	mov	x0, x22
  4312a8:	mov	w1, #0x2f                  	// #47
  4312ac:	strb	w1, [x0], #1
  4312b0:	sub	w2, w23, #0x1
  4312b4:	mov	x1, x27
  4312b8:	bl	402620 <memcpy@plt>
  4312bc:	ldrb	w0, [x19, #16]
  4312c0:	cbnz	w0, 431318 <ferror@plt+0x2e5e8>
  4312c4:	ldrb	w0, [x19, #25]
  4312c8:	cbz	w0, 4311ec <ferror@plt+0x2e4bc>
  4312cc:	b	431318 <ferror@plt+0x2e5e8>
  4312d0:	mov	w1, w23
  4312d4:	mov	x0, x19
  4312d8:	bl	42f440 <ferror@plt+0x2c710>
  4312dc:	mov	x22, x0
  4312e0:	mov	w0, #0x4f                  	// #79
  4312e4:	strb	w0, [x20, #4]
  4312e8:	str	w23, [x20, #8]
  4312ec:	str	x22, [x20, #16]
  4312f0:	mov	x0, x22
  4312f4:	mov	w1, #0x2f                  	// #47
  4312f8:	strb	w1, [x0], #1
  4312fc:	sub	w2, w23, #0x1
  431300:	mov	x1, x27
  431304:	bl	402620 <memcpy@plt>
  431308:	ldrb	w0, [x19, #16]
  43130c:	cbnz	w0, 4311e4 <ferror@plt+0x2e4b4>
  431310:	b	4311dc <ferror@plt+0x2e4ac>
  431314:	mov	w24, w23
  431318:	mov	w0, #0x2a                  	// #42
  43131c:	strb	w0, [x22, #1]
  431320:	sub	w1, w24, #0x2
  431324:	strb	w0, [x22, w1, uxtw]
  431328:	sub	w0, w24, #0x1
  43132c:	mov	w2, #0x2f                  	// #47
  431330:	strb	w2, [x22, x0]
  431334:	cmp	w1, #0x2
  431338:	b.ls	4311ec <ferror@plt+0x2e4bc>  // b.plast
  43133c:	add	x0, x22, #0x1
  431340:	add	x1, x22, #0x2
  431344:	sub	w24, w24, #0x5
  431348:	add	x1, x1, x24
  43134c:	mov	w3, #0x7c                  	// #124
  431350:	b	431364 <ferror@plt+0x2e634>
  431354:	strb	w3, [x2, #1]
  431358:	add	x0, x0, #0x1
  43135c:	cmp	x0, x1
  431360:	b.eq	4311ec <ferror@plt+0x2e4bc>  // b.none
  431364:	mov	x2, x0
  431368:	ldrb	w4, [x0, #1]
  43136c:	cmp	w4, #0x2f
  431370:	b.ne	431358 <ferror@plt+0x2e628>  // b.any
  431374:	ldrb	w4, [x0]
  431378:	cmp	w4, #0x2a
  43137c:	b.eq	431354 <ferror@plt+0x2e624>  // b.none
  431380:	ldrb	w4, [x0, #2]
  431384:	cmp	w4, #0x2a
  431388:	b.ne	431358 <ferror@plt+0x2e628>  // b.any
  43138c:	b	431354 <ferror@plt+0x2e624>
  431390:	mov	w0, #0x100                 	// #256
  431394:	str	w0, [x19, #1396]
  431398:	mov	x0, #0x1000                	// #4096
  43139c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4313a0:	str	x0, [x19, #1384]
  4313a4:	b	4311f4 <ferror@plt+0x2e4c4>
  4313a8:	lsl	w1, w1, #1
  4313ac:	str	w1, [x19, #1396]
  4313b0:	sbfiz	x1, x1, #4, #32
  4313b4:	ldr	x0, [x19, #1384]
  4313b8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4313bc:	str	x0, [x19, #1384]
  4313c0:	b	431204 <ferror@plt+0x2e4d4>
  4313c4:	ldrb	w0, [x19, #19]
  4313c8:	cbnz	w0, 431424 <ferror@plt+0x2e6f4>
  4313cc:	mov	w0, #0x3                   	// #3
  4313d0:	strb	w0, [x20, #4]
  4313d4:	ldr	x0, [x21]
  4313d8:	ldrb	w1, [x0]
  4313dc:	cmp	w1, #0x3d
  4313e0:	b.eq	431448 <ferror@plt+0x2e718>  // b.none
  4313e4:	cmp	w1, #0x3c
  4313e8:	b.eq	43145c <ferror@plt+0x2e72c>  // b.none
  4313ec:	ldrb	w2, [x19, #1126]
  4313f0:	cbz	w2, 43195c <ferror@plt+0x2ec2c>
  4313f4:	cmp	w1, #0x3a
  4313f8:	b.eq	431490 <ferror@plt+0x2e760>  // b.none
  4313fc:	cmp	w1, #0x25
  431400:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431404:	add	x0, x0, #0x1
  431408:	str	x0, [x21]
  43140c:	ldrh	w0, [x20, #6]
  431410:	orr	w0, w0, #0x2
  431414:	strh	w0, [x20, #6]
  431418:	mov	w0, #0x29                  	// #41
  43141c:	strb	w0, [x20, #4]
  431420:	b	43195c <ferror@plt+0x2ec2c>
  431424:	ldr	x2, [x21]
  431428:	sub	x2, x2, #0x1
  43142c:	mov	x1, x20
  431430:	mov	x0, x19
  431434:	bl	42f658 <ferror@plt+0x2c928>
  431438:	ldrb	w0, [x20, #4]
  43143c:	cmp	w0, #0x3
  431440:	b.ne	431ab0 <ferror@plt+0x2ed80>  // b.any
  431444:	b	4313cc <ferror@plt+0x2e69c>
  431448:	add	x0, x0, #0x1
  43144c:	str	x0, [x21]
  431450:	mov	w0, #0x1a                  	// #26
  431454:	strb	w0, [x20, #4]
  431458:	b	43195c <ferror@plt+0x2ec2c>
  43145c:	add	x0, x0, #0x1
  431460:	str	x0, [x21]
  431464:	mov	w0, #0xd                   	// #13
  431468:	strb	w0, [x20, #4]
  43146c:	ldr	x0, [x21]
  431470:	ldrb	w1, [x0]
  431474:	cmp	w1, #0x3d
  431478:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43147c:	add	x0, x0, #0x1
  431480:	str	x0, [x21]
  431484:	mov	w0, #0x24                  	// #36
  431488:	strb	w0, [x20, #4]
  43148c:	b	43195c <ferror@plt+0x2ec2c>
  431490:	ldrb	w1, [x19, #1120]
  431494:	cbz	w1, 4314a8 <ferror@plt+0x2e778>
  431498:	ldr	w1, [x19, #1116]
  43149c:	sub	w1, w1, #0xb
  4314a0:	cmp	w1, #0x1
  4314a4:	b.hi	4314c8 <ferror@plt+0x2e798>  // b.pmore
  4314a8:	add	x0, x0, #0x1
  4314ac:	str	x0, [x21]
  4314b0:	ldrh	w0, [x20, #6]
  4314b4:	orr	w0, w0, #0x2
  4314b8:	strh	w0, [x20, #6]
  4314bc:	mov	w0, #0x27                  	// #39
  4314c0:	strb	w0, [x20, #4]
  4314c4:	b	43195c <ferror@plt+0x2ec2c>
  4314c8:	ldrb	w1, [x0, #1]
  4314cc:	cmp	w1, #0x3a
  4314d0:	b.ne	4314a8 <ferror@plt+0x2e778>  // b.any
  4314d4:	ldrb	w1, [x0, #2]
  4314d8:	and	w1, w1, #0xfffffffb
  4314dc:	and	w1, w1, #0xff
  4314e0:	cmp	w1, #0x3a
  4314e4:	b.eq	4314a8 <ferror@plt+0x2e778>  // b.none
  4314e8:	b	43195c <ferror@plt+0x2ec2c>
  4314ec:	mov	w0, #0x2                   	// #2
  4314f0:	strb	w0, [x20, #4]
  4314f4:	ldr	x0, [x21]
  4314f8:	ldrb	w1, [x0]
  4314fc:	cmp	w1, #0x3d
  431500:	b.eq	431540 <ferror@plt+0x2e810>  // b.none
  431504:	cmp	w1, #0x3e
  431508:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43150c:	add	x0, x0, #0x1
  431510:	str	x0, [x21]
  431514:	mov	w0, #0xc                   	// #12
  431518:	strb	w0, [x20, #4]
  43151c:	ldr	x0, [x21]
  431520:	ldrb	w1, [x0]
  431524:	cmp	w1, #0x3d
  431528:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43152c:	add	x0, x0, #0x1
  431530:	str	x0, [x21]
  431534:	mov	w0, #0x23                  	// #35
  431538:	strb	w0, [x20, #4]
  43153c:	b	43195c <ferror@plt+0x2ec2c>
  431540:	add	x0, x0, #0x1
  431544:	str	x0, [x21]
  431548:	mov	w0, #0x19                  	// #25
  43154c:	strb	w0, [x20, #4]
  431550:	b	43195c <ferror@plt+0x2ec2c>
  431554:	mov	w0, #0x8                   	// #8
  431558:	strb	w0, [x20, #4]
  43155c:	ldr	x0, [x21]
  431560:	ldrb	w1, [x0]
  431564:	cmp	w1, #0x3d
  431568:	b.eq	4315a4 <ferror@plt+0x2e874>  // b.none
  43156c:	ldrb	w2, [x19, #1126]
  431570:	cbz	w2, 43195c <ferror@plt+0x2ec2c>
  431574:	cmp	w1, #0x3a
  431578:	b.eq	4315b8 <ferror@plt+0x2e888>  // b.none
  43157c:	cmp	w1, #0x3e
  431580:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431584:	add	x0, x0, #0x1
  431588:	str	x0, [x21]
  43158c:	ldrh	w0, [x20, #6]
  431590:	orr	w0, w0, #0x2
  431594:	strh	w0, [x20, #6]
  431598:	mov	w0, #0x2a                  	// #42
  43159c:	strb	w0, [x20, #4]
  4315a0:	b	43195c <ferror@plt+0x2ec2c>
  4315a4:	add	x0, x0, #0x1
  4315a8:	str	x0, [x21]
  4315ac:	mov	w0, #0x1f                  	// #31
  4315b0:	strb	w0, [x20, #4]
  4315b4:	b	43195c <ferror@plt+0x2ec2c>
  4315b8:	add	x0, x0, #0x1
  4315bc:	str	x0, [x21]
  4315c0:	ldrh	w0, [x20, #6]
  4315c4:	orr	w0, w0, #0x2
  4315c8:	strh	w0, [x20, #6]
  4315cc:	mov	w0, #0x25                  	// #37
  4315d0:	strb	w0, [x20, #4]
  4315d4:	ldr	x0, [x21]
  4315d8:	ldrb	w1, [x0]
  4315dc:	cmp	w1, #0x25
  4315e0:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4315e4:	ldrb	w1, [x0, #1]
  4315e8:	cmp	w1, #0x3a
  4315ec:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4315f0:	add	x0, x0, #0x2
  4315f4:	str	x0, [x21]
  4315f8:	mov	w0, #0x26                  	// #38
  4315fc:	strb	w0, [x20, #4]
  431600:	str	wzr, [x20, #8]
  431604:	b	43195c <ferror@plt+0x2ec2c>
  431608:	mov	w0, #0x30                  	// #48
  43160c:	strb	w0, [x20, #4]
  431610:	ldr	x2, [x21]
  431614:	ldrb	w1, [x2]
  431618:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43161c:	add	x0, x0, #0x28
  431620:	ldrh	w0, [x0, w1, sxtw #1]
  431624:	tbnz	w0, #2, 431654 <ferror@plt+0x2e924>
  431628:	cmp	w1, #0x2e
  43162c:	b.eq	43168c <ferror@plt+0x2e95c>  // b.none
  431630:	cmp	w1, #0x2a
  431634:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431638:	ldrb	w0, [x19, #1120]
  43163c:	cbz	w0, 43195c <ferror@plt+0x2ec2c>
  431640:	add	x2, x2, #0x1
  431644:	str	x2, [x21]
  431648:	mov	w0, #0x33                  	// #51
  43164c:	strb	w0, [x20, #4]
  431650:	b	43195c <ferror@plt+0x2ec2c>
  431654:	str	wzr, [sp, #128]
  431658:	strb	wzr, [sp, #132]
  43165c:	str	wzr, [sp, #136]
  431660:	mov	w0, #0x37                  	// #55
  431664:	strb	w0, [x20, #4]
  431668:	add	x2, sp, #0x80
  43166c:	add	x1, x20, #0x8
  431670:	mov	x0, x19
  431674:	bl	42f4a4 <ferror@plt+0x2c774>
  431678:	add	x2, sp, #0x80
  43167c:	mov	x1, x20
  431680:	mov	x0, x19
  431684:	bl	42e8b0 <ferror@plt+0x2bb80>
  431688:	b	431ab0 <ferror@plt+0x2ed80>
  43168c:	ldrb	w0, [x2, #1]
  431690:	cmp	w0, #0x2e
  431694:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431698:	add	x2, x2, #0x2
  43169c:	str	x2, [x21]
  4316a0:	mov	w0, #0x2c                  	// #44
  4316a4:	strb	w0, [x20, #4]
  4316a8:	b	43195c <ferror@plt+0x2ec2c>
  4316ac:	mov	w0, #0x4                   	// #4
  4316b0:	strb	w0, [x20, #4]
  4316b4:	ldr	x0, [x21]
  4316b8:	ldrb	w1, [x0]
  4316bc:	cmp	w1, #0x2b
  4316c0:	b.eq	4316e0 <ferror@plt+0x2e9b0>  // b.none
  4316c4:	cmp	w1, #0x3d
  4316c8:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4316cc:	add	x0, x0, #0x1
  4316d0:	str	x0, [x21]
  4316d4:	mov	w0, #0x1b                  	// #27
  4316d8:	strb	w0, [x20, #4]
  4316dc:	b	43195c <ferror@plt+0x2ec2c>
  4316e0:	add	x0, x0, #0x1
  4316e4:	str	x0, [x21]
  4316e8:	mov	w0, #0x2d                  	// #45
  4316ec:	strb	w0, [x20, #4]
  4316f0:	b	43195c <ferror@plt+0x2ec2c>
  4316f4:	mov	w0, #0x5                   	// #5
  4316f8:	strb	w0, [x20, #4]
  4316fc:	ldr	x0, [x21]
  431700:	ldrb	w1, [x0]
  431704:	cmp	w1, #0x3e
  431708:	b.eq	431730 <ferror@plt+0x2ea00>  // b.none
  43170c:	cmp	w1, #0x2d
  431710:	b.eq	43176c <ferror@plt+0x2ea3c>  // b.none
  431714:	cmp	w1, #0x3d
  431718:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43171c:	add	x0, x0, #0x1
  431720:	str	x0, [x21]
  431724:	mov	w0, #0x1c                  	// #28
  431728:	strb	w0, [x20, #4]
  43172c:	b	43195c <ferror@plt+0x2ec2c>
  431730:	add	x0, x0, #0x1
  431734:	str	x0, [x21]
  431738:	mov	w0, #0x2f                  	// #47
  43173c:	strb	w0, [x20, #4]
  431740:	ldr	x0, [x21]
  431744:	ldrb	w1, [x0]
  431748:	cmp	w1, #0x2a
  43174c:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431750:	ldrb	w1, [x19, #1120]
  431754:	cbz	w1, 43195c <ferror@plt+0x2ec2c>
  431758:	add	x0, x0, #0x1
  43175c:	str	x0, [x21]
  431760:	mov	w0, #0x32                  	// #50
  431764:	strb	w0, [x20, #4]
  431768:	b	43195c <ferror@plt+0x2ec2c>
  43176c:	add	x0, x0, #0x1
  431770:	str	x0, [x21]
  431774:	mov	w0, #0x2e                  	// #46
  431778:	strb	w0, [x20, #4]
  43177c:	b	43195c <ferror@plt+0x2ec2c>
  431780:	mov	w0, #0x9                   	// #9
  431784:	strb	w0, [x20, #4]
  431788:	ldr	x0, [x21]
  43178c:	ldrb	w1, [x0]
  431790:	cmp	w1, #0x26
  431794:	b.eq	4317b4 <ferror@plt+0x2ea84>  // b.none
  431798:	cmp	w1, #0x3d
  43179c:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4317a0:	add	x0, x0, #0x1
  4317a4:	str	x0, [x21]
  4317a8:	mov	w0, #0x20                  	// #32
  4317ac:	strb	w0, [x20, #4]
  4317b0:	b	43195c <ferror@plt+0x2ec2c>
  4317b4:	add	x0, x0, #0x1
  4317b8:	str	x0, [x21]
  4317bc:	mov	w0, #0xf                   	// #15
  4317c0:	strb	w0, [x20, #4]
  4317c4:	b	43195c <ferror@plt+0x2ec2c>
  4317c8:	mov	w0, #0xa                   	// #10
  4317cc:	strb	w0, [x20, #4]
  4317d0:	ldr	x0, [x21]
  4317d4:	ldrb	w1, [x0]
  4317d8:	cmp	w1, #0x7c
  4317dc:	b.eq	4317fc <ferror@plt+0x2eacc>  // b.none
  4317e0:	cmp	w1, #0x3d
  4317e4:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4317e8:	add	x0, x0, #0x1
  4317ec:	str	x0, [x21]
  4317f0:	mov	w0, #0x21                  	// #33
  4317f4:	strb	w0, [x20, #4]
  4317f8:	b	43195c <ferror@plt+0x2ec2c>
  4317fc:	add	x0, x0, #0x1
  431800:	str	x0, [x21]
  431804:	mov	w0, #0x10                  	// #16
  431808:	strb	w0, [x20, #4]
  43180c:	b	43195c <ferror@plt+0x2ec2c>
  431810:	mov	w0, #0x12                  	// #18
  431814:	strb	w0, [x20, #4]
  431818:	ldr	x0, [x21]
  43181c:	ldrb	w1, [x0]
  431820:	cmp	w1, #0x3a
  431824:	b.eq	431858 <ferror@plt+0x2eb28>  // b.none
  431828:	cmp	w1, #0x3e
  43182c:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  431830:	ldrb	w1, [x19, #1126]
  431834:	cbz	w1, 43195c <ferror@plt+0x2ec2c>
  431838:	add	x0, x0, #0x1
  43183c:	str	x0, [x21]
  431840:	ldrh	w0, [x20, #6]
  431844:	orr	w0, w0, #0x2
  431848:	strh	w0, [x20, #6]
  43184c:	mov	w0, #0x28                  	// #40
  431850:	strb	w0, [x20, #4]
  431854:	b	43195c <ferror@plt+0x2ec2c>
  431858:	ldrb	w1, [x19, #1120]
  43185c:	cbz	w1, 43195c <ferror@plt+0x2ec2c>
  431860:	add	x0, x0, #0x1
  431864:	str	x0, [x21]
  431868:	mov	w0, #0x31                  	// #49
  43186c:	strb	w0, [x20, #4]
  431870:	b	43195c <ferror@plt+0x2ec2c>
  431874:	mov	w0, #0x6                   	// #6
  431878:	strb	w0, [x20, #4]
  43187c:	ldr	x0, [x21]
  431880:	ldrb	w1, [x0]
  431884:	cmp	w1, #0x3d
  431888:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43188c:	add	x0, x0, #0x1
  431890:	str	x0, [x21]
  431894:	mov	w0, #0x1d                  	// #29
  431898:	strb	w0, [x20, #4]
  43189c:	b	43195c <ferror@plt+0x2ec2c>
  4318a0:	strb	wzr, [x20, #4]
  4318a4:	ldr	x0, [x21]
  4318a8:	ldrb	w1, [x0]
  4318ac:	cmp	w1, #0x3d
  4318b0:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4318b4:	add	x0, x0, #0x1
  4318b8:	str	x0, [x21]
  4318bc:	mov	w0, #0x17                  	// #23
  4318c0:	strb	w0, [x20, #4]
  4318c4:	b	43195c <ferror@plt+0x2ec2c>
  4318c8:	mov	w0, #0x1                   	// #1
  4318cc:	strb	w0, [x20, #4]
  4318d0:	ldr	x0, [x21]
  4318d4:	ldrb	w1, [x0]
  4318d8:	cmp	w1, #0x3d
  4318dc:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  4318e0:	add	x0, x0, #0x1
  4318e4:	str	x0, [x21]
  4318e8:	mov	w0, #0x18                  	// #24
  4318ec:	strb	w0, [x20, #4]
  4318f0:	b	43195c <ferror@plt+0x2ec2c>
  4318f4:	mov	w0, #0xb                   	// #11
  4318f8:	strb	w0, [x20, #4]
  4318fc:	ldr	x0, [x21]
  431900:	ldrb	w1, [x0]
  431904:	cmp	w1, #0x3d
  431908:	b.ne	43195c <ferror@plt+0x2ec2c>  // b.any
  43190c:	add	x0, x0, #0x1
  431910:	str	x0, [x21]
  431914:	mov	w0, #0x22                  	// #34
  431918:	strb	w0, [x20, #4]
  43191c:	b	43195c <ferror@plt+0x2ec2c>
  431920:	mov	w0, #0x25                  	// #37
  431924:	strb	w0, [x20, #4]
  431928:	ldr	x0, [x21]
  43192c:	ldrb	w1, [x0]
  431930:	cmp	w1, #0x23
  431934:	b.eq	431940 <ferror@plt+0x2ec10>  // b.none
  431938:	str	wzr, [x20, #8]
  43193c:	b	431ab0 <ferror@plt+0x2ed80>
  431940:	add	x0, x0, #0x1
  431944:	str	x0, [x21]
  431948:	mov	w0, #0x26                  	// #38
  43194c:	strb	w0, [x20, #4]
  431950:	b	431938 <ferror@plt+0x2ec08>
  431954:	mov	w0, #0x11                  	// #17
  431958:	strb	w0, [x20, #4]
  43195c:	ldr	w0, [x20]
  431960:	cmp	w0, #0x1
  431964:	b.ls	4319c4 <ferror@plt+0x2ec94>  // b.plast
  431968:	ldr	w0, [x21, #56]
  43196c:	ldr	x2, [x21, #48]
  431970:	lsl	x0, x0, #4
  431974:	ldr	x1, [x21]
  431978:	ldr	x0, [x2, x0]
  43197c:	cmp	x1, x0
  431980:	b.cc	43198c <ferror@plt+0x2ec5c>  // b.lo, b.ul, b.last
  431984:	ldr	x0, [x19, #8]
  431988:	cbz	x0, 431b04 <ferror@plt+0x2edd4>
  43198c:	ldr	w22, [x20]
  431990:	ldr	x1, [x21]
  431994:	ldr	x0, [x21, #8]
  431998:	sub	w1, w1, w0
  43199c:	ldr	x0, [x19, #40]
  4319a0:	bl	4329f4 <ferror@plt+0x2fcc4>
  4319a4:	mov	x2, #0x0                   	// #0
  4319a8:	bfxil	x2, x22, #0, #32
  4319ac:	bfi	x2, x0, #32, #32
  4319b0:	mov	x3, #0x0                   	// #0
  4319b4:	ldr	w1, [x20]
  4319b8:	ldr	x0, [x19, #40]
  4319bc:	bl	432d14 <ferror@plt+0x2ffe4>
  4319c0:	str	w0, [x20]
  4319c4:	mov	x0, x20
  4319c8:	ldp	x19, x20, [sp, #16]
  4319cc:	ldp	x21, x22, [sp, #32]
  4319d0:	ldp	x23, x24, [sp, #48]
  4319d4:	ldp	x25, x26, [sp, #64]
  4319d8:	ldp	x29, x30, [sp], #144
  4319dc:	ret
  4319e0:	mov	w0, #0xe                   	// #14
  4319e4:	strb	w0, [x20, #4]
  4319e8:	b	43195c <ferror@plt+0x2ec2c>
  4319ec:	mov	w0, #0x13                  	// #19
  4319f0:	strb	w0, [x20, #4]
  4319f4:	b	43195c <ferror@plt+0x2ec2c>
  4319f8:	mov	w0, #0x14                  	// #20
  4319fc:	strb	w0, [x20, #4]
  431a00:	b	43195c <ferror@plt+0x2ec2c>
  431a04:	mov	w0, #0x15                  	// #21
  431a08:	strb	w0, [x20, #4]
  431a0c:	b	43195c <ferror@plt+0x2ec2c>
  431a10:	mov	w0, #0x27                  	// #39
  431a14:	strb	w0, [x20, #4]
  431a18:	b	43195c <ferror@plt+0x2ec2c>
  431a1c:	mov	w0, #0x28                  	// #40
  431a20:	strb	w0, [x20, #4]
  431a24:	b	43195c <ferror@plt+0x2ec2c>
  431a28:	mov	w0, #0x29                  	// #41
  431a2c:	strb	w0, [x20, #4]
  431a30:	b	43195c <ferror@plt+0x2ec2c>
  431a34:	mov	w0, #0x2a                  	// #42
  431a38:	strb	w0, [x20, #4]
  431a3c:	b	43195c <ferror@plt+0x2ec2c>
  431a40:	mov	w0, #0x2b                  	// #43
  431a44:	strb	w0, [x20, #4]
  431a48:	b	43195c <ferror@plt+0x2ec2c>
  431a4c:	mov	w0, #0x34                  	// #52
  431a50:	strb	w0, [x20, #4]
  431a54:	b	43195c <ferror@plt+0x2ec2c>
  431a58:	ldr	x22, [x21]
  431a5c:	sub	x22, x22, #0x1
  431a60:	str	x22, [x21]
  431a64:	str	wzr, [sp, #128]
  431a68:	strb	wzr, [sp, #132]
  431a6c:	str	wzr, [sp, #136]
  431a70:	add	x2, sp, #0x80
  431a74:	mov	w1, #0x1                   	// #1
  431a78:	mov	x0, x19
  431a7c:	bl	42d6c4 <ferror@plt+0x2a994>
  431a80:	and	w0, w0, #0xff
  431a84:	cbnz	w0, 431acc <ferror@plt+0x2ed9c>
  431a88:	ldr	x0, [x21]
  431a8c:	add	x0, x0, #0x1
  431a90:	str	x0, [x21]
  431a94:	ldr	x2, [x21]
  431a98:	mov	w4, #0x3d                  	// #61
  431a9c:	mov	w3, #0x1                   	// #1
  431aa0:	sub	x2, x2, #0x1
  431aa4:	mov	x1, x20
  431aa8:	mov	x0, x19
  431aac:	bl	42f5f8 <ferror@plt+0x2c8c8>
  431ab0:	ldr	w0, [x20]
  431ab4:	cmp	w0, #0x1
  431ab8:	b.ls	4319c4 <ferror@plt+0x2ec94>  // b.plast
  431abc:	ldrb	w0, [x20, #4]
  431ac0:	cmp	w0, #0x16
  431ac4:	b.eq	4319c4 <ferror@plt+0x2ec94>  // b.none
  431ac8:	b	431968 <ferror@plt+0x2ec38>
  431acc:	mov	w0, #0x35                  	// #53
  431ad0:	strb	w0, [x20, #4]
  431ad4:	add	x4, x20, #0x10
  431ad8:	add	x3, sp, #0x80
  431adc:	mov	w2, #0x1                   	// #1
  431ae0:	mov	x1, x22
  431ae4:	mov	x0, x19
  431ae8:	bl	42d7b8 <ferror@plt+0x2aa88>
  431aec:	str	x0, [x20, #8]
  431af0:	add	x2, sp, #0x80
  431af4:	mov	x1, x20
  431af8:	mov	x0, x19
  431afc:	bl	42e8b0 <ferror@plt+0x2bb80>
  431b00:	b	431ab0 <ferror@plt+0x2ed80>
  431b04:	mov	w1, #0x0                   	// #0
  431b08:	mov	x0, x19
  431b0c:	bl	42def0 <ferror@plt+0x2b1c0>
  431b10:	b	43198c <ferror@plt+0x2ec5c>
  431b14:	add	x0, x24, #0xc
  431b18:	b	431b40 <ferror@plt+0x2ee10>
  431b1c:	mov	x2, #0x4                   	// #4
  431b20:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  431b24:	add	x1, x1, #0xab8
  431b28:	add	x0, x24, #0xb
  431b2c:	bl	4029e0 <memcmp@plt>
  431b30:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  431b34:	add	x0, x24, #0xe
  431b38:	mov	w1, #0x1                   	// #1
  431b3c:	str	w1, [sp, #104]
  431b40:	cmp	w26, #0x69
  431b44:	b.eq	430fd0 <ferror@plt+0x2e2a0>  // b.none
  431b48:	ldrb	w26, [x0]
  431b4c:	mov	x24, x0
  431b50:	b	430ccc <ferror@plt+0x2df9c>
  431b54:	sub	w1, w0, #0x3
  431b58:	and	w1, w1, #0xff
  431b5c:	cmp	w1, #0x1
  431b60:	b.hi	430978 <ferror@plt+0x2dc48>  // b.pmore
  431b64:	ldrb	w26, [x27, #1]
  431b68:	cmp	w26, #0x40
  431b6c:	cset	w1, eq  // eq = none
  431b70:	cmp	w26, #0x2d
  431b74:	csinc	w1, w1, wzr, ne  // ne = any
  431b78:	str	w1, [sp, #104]
  431b7c:	cbz	w1, 430c00 <ferror@plt+0x2ded0>
  431b80:	ldr	x0, [x19]
  431b84:	ldr	x0, [x0]
  431b88:	sub	x0, x0, x24
  431b8c:	sub	x0, x0, #0x1
  431b90:	cmp	x0, #0xa
  431b94:	b.ls	430978 <ferror@plt+0x2dc48>  // b.plast
  431b98:	mov	x2, #0xb                   	// #11
  431b9c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  431ba0:	add	x1, x1, #0xfe0
  431ba4:	add	x0, x27, #0x2
  431ba8:	bl	4029e0 <memcmp@plt>
  431bac:	cbnz	w0, 430978 <ferror@plt+0x2dc48>
  431bb0:	mov	x0, #0xb                   	// #11
  431bb4:	cmp	w26, #0x40
  431bb8:	b.eq	430bec <ferror@plt+0x2debc>  // b.none
  431bbc:	add	x0, x0, #0x1
  431bc0:	add	x24, x24, x0
  431bc4:	ldrb	w0, [x27]
  431bc8:	cmp	w0, #0x2a
  431bcc:	b.eq	43110c <ferror@plt+0x2e3dc>  // b.none
  431bd0:	ldrb	w0, [x24]
  431bd4:	cmp	w0, #0xa
  431bd8:	csinc	w25, w25, wzr, ne  // ne = any
  431bdc:	b	430978 <ferror@plt+0x2dc48>
  431be0:	stp	x29, x30, [sp, #-48]!
  431be4:	mov	x29, sp
  431be8:	stp	x19, x20, [sp, #16]
  431bec:	str	x21, [sp, #32]
  431bf0:	mov	x19, x0
  431bf4:	add	x21, x0, #0x98
  431bf8:	b	431c90 <ferror@plt+0x2ef60>
  431bfc:	bl	42e448 <ferror@plt+0x2b718>
  431c00:	str	x0, [x19, #488]
  431c04:	ldr	x0, [x0, #16]
  431c08:	str	x0, [x19, #448]
  431c0c:	b	431ca4 <ferror@plt+0x2ef74>
  431c10:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  431c14:	add	x2, x2, #0xac8
  431c18:	mov	w1, #0xa1d                 	// #2589
  431c1c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  431c20:	add	x0, x0, #0x488
  431c24:	bl	4102b4 <ferror@plt+0xd584>
  431c28:	mov	x0, x19
  431c2c:	bl	430388 <ferror@plt+0x2d658>
  431c30:	mov	x20, x0
  431c34:	b	431cdc <ferror@plt+0x2efac>
  431c38:	ldrb	w0, [x19, #25]
  431c3c:	cmp	w0, #0x1
  431c40:	b.eq	431cf0 <ferror@plt+0x2efc0>  // b.none
  431c44:	and	w1, w1, #0x1
  431c48:	mov	x0, x19
  431c4c:	bl	424f38 <ferror@plt+0x22208>
  431c50:	cbz	w0, 431cfc <ferror@plt+0x2efcc>
  431c54:	ldrb	w0, [x19, #156]
  431c58:	cmp	w0, #0x53
  431c5c:	b.eq	431c90 <ferror@plt+0x2ef60>  // b.none
  431c60:	mov	x20, x21
  431c64:	b	431cfc <ferror@plt+0x2efcc>
  431c68:	ldrb	w0, [x19, #16]
  431c6c:	cbnz	w0, 431d20 <ferror@plt+0x2eff0>
  431c70:	ldrb	w0, [x19, #32]
  431c74:	cbnz	w0, 431d20 <ferror@plt+0x2eff0>
  431c78:	strb	wzr, [x19, #440]
  431c7c:	ldrb	w0, [x19, #18]
  431c80:	cbz	w0, 431d20 <ferror@plt+0x2eff0>
  431c84:	ldrb	w0, [x20, #4]
  431c88:	cmp	w0, #0x16
  431c8c:	b.eq	431d20 <ferror@plt+0x2eff0>  // b.none
  431c90:	ldr	x0, [x19, #488]
  431c94:	ldr	x2, [x19, #448]
  431c98:	ldr	x1, [x0, #24]
  431c9c:	cmp	x2, x1
  431ca0:	b.eq	431bfc <ferror@plt+0x2eecc>  // b.none
  431ca4:	ldr	x20, [x19, #448]
  431ca8:	ldr	x0, [x19, #488]
  431cac:	ldr	x1, [x0, #16]
  431cb0:	cmp	x20, x1
  431cb4:	b.cc	431c10 <ferror@plt+0x2eee0>  // b.lo, b.ul, b.last
  431cb8:	ldr	x0, [x0, #24]
  431cbc:	cmp	x20, x0
  431cc0:	b.cs	431c10 <ferror@plt+0x2eee0>  // b.hs, b.nlast
  431cc4:	ldr	w0, [x19, #496]
  431cc8:	cbz	w0, 431c28 <ferror@plt+0x2eef8>
  431ccc:	sub	w0, w0, #0x1
  431cd0:	str	w0, [x19, #496]
  431cd4:	add	x0, x20, #0x18
  431cd8:	str	x0, [x19, #448]
  431cdc:	ldrh	w1, [x20, #6]
  431ce0:	tbz	w1, #6, 431c68 <ferror@plt+0x2ef38>
  431ce4:	ldrb	w0, [x20, #4]
  431ce8:	cmp	w0, #0x25
  431cec:	b.eq	431c38 <ferror@plt+0x2ef08>  // b.none
  431cf0:	ldrb	w0, [x19, #32]
  431cf4:	cmp	w0, #0x0
  431cf8:	csel	x20, x21, x20, ne  // ne = any
  431cfc:	ldr	x3, [x19, #904]
  431d00:	cbz	x3, 431c68 <ferror@plt+0x2ef38>
  431d04:	ldrb	w0, [x19, #18]
  431d08:	cbnz	w0, 431c68 <ferror@plt+0x2ef38>
  431d0c:	ldrb	w2, [x19, #25]
  431d10:	mov	x1, x20
  431d14:	mov	x0, x19
  431d18:	blr	x3
  431d1c:	b	431c68 <ferror@plt+0x2ef38>
  431d20:	mov	x0, x20
  431d24:	ldp	x19, x20, [sp, #16]
  431d28:	ldr	x21, [sp, #32]
  431d2c:	ldp	x29, x30, [sp], #48
  431d30:	ret
  431d34:	stp	x29, x30, [sp, #-64]!
  431d38:	mov	x29, sp
  431d3c:	stp	x19, x20, [sp, #16]
  431d40:	stp	x21, x22, [sp, #32]
  431d44:	mov	x22, x0
  431d48:	mov	w19, w1
  431d4c:	ldr	x21, [x0, #136]
  431d50:	ldr	x20, [x21, #8]
  431d54:	cbnz	x20, 431d64 <ferror@plt+0x2f034>
  431d58:	str	x23, [sp, #48]
  431d5c:	b	431d88 <ferror@plt+0x2f058>
  431d60:	mov	x20, x1
  431d64:	mov	x0, x21
  431d68:	bl	42e48c <ferror@plt+0x2b75c>
  431d6c:	cmp	w0, w19
  431d70:	b.gt	431da4 <ferror@plt+0x2f074>
  431d74:	sub	w19, w19, w0
  431d78:	ldr	x1, [x20, #8]
  431d7c:	mov	x21, x20
  431d80:	cbnz	x1, 431d60 <ferror@plt+0x2f030>
  431d84:	str	x23, [sp, #48]
  431d88:	ldr	w0, [x22, #500]
  431d8c:	add	w0, w0, #0x1
  431d90:	str	w0, [x22, #500]
  431d94:	ldr	x23, [x22, #904]
  431d98:	str	xzr, [x22, #904]
  431d9c:	mov	w21, w19
  431da0:	b	431df8 <ferror@plt+0x2f0c8>
  431da4:	ldr	w0, [x21, #48]
  431da8:	cmp	w0, #0x1
  431dac:	b.eq	431dc4 <ferror@plt+0x2f094>  // b.none
  431db0:	tst	w0, #0xfffffffd
  431db4:	b.ne	431dd8 <ferror@plt+0x2f0a8>  // b.any
  431db8:	ldr	x0, [x21, #16]
  431dbc:	ldr	x20, [x0, w19, sxtw #3]
  431dc0:	b	431e40 <ferror@plt+0x2f110>
  431dc4:	sbfiz	x20, x19, #1, #32
  431dc8:	add	x19, x20, w19, sxtw
  431dcc:	ldr	x20, [x21, #16]
  431dd0:	add	x20, x20, x19, lsl #3
  431dd4:	b	431e40 <ferror@plt+0x2f110>
  431dd8:	str	x23, [sp, #48]
  431ddc:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x24c60>
  431de0:	add	x2, x2, #0xad8
  431de4:	mov	w1, #0x9ad                 	// #2477
  431de8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  431dec:	add	x0, x0, #0x488
  431df0:	bl	4102b4 <ferror@plt+0xd584>
  431df4:	mov	w21, w1
  431df8:	mov	x0, x22
  431dfc:	bl	431be0 <ferror@plt+0x2eeb0>
  431e00:	mov	x20, x0
  431e04:	ldrb	w0, [x0, #4]
  431e08:	cmp	w0, #0x16
  431e0c:	b.eq	431e1c <ferror@plt+0x2f0ec>  // b.none
  431e10:	sub	w1, w21, #0x1
  431e14:	cbnz	w21, 431df4 <ferror@plt+0x2f0c4>
  431e18:	b	431e20 <ferror@plt+0x2f0f0>
  431e1c:	sub	w1, w21, #0x1
  431e20:	sub	w1, w19, w1
  431e24:	mov	x0, x22
  431e28:	bl	435918 <ferror@plt+0x32be8>
  431e2c:	ldr	w0, [x22, #500]
  431e30:	sub	w0, w0, #0x1
  431e34:	str	w0, [x22, #500]
  431e38:	str	x23, [x22, #904]
  431e3c:	ldr	x23, [sp, #48]
  431e40:	mov	x0, x20
  431e44:	ldp	x19, x20, [sp, #16]
  431e48:	ldp	x21, x22, [sp, #32]
  431e4c:	ldp	x29, x30, [sp], #64
  431e50:	ret
  431e54:	stp	x29, x30, [sp, #-48]!
  431e58:	mov	x29, sp
  431e5c:	stp	x19, x20, [sp, #16]
  431e60:	str	x21, [sp, #32]
  431e64:	mov	x20, x0
  431e68:	mov	x21, x1
  431e6c:	mov	x0, x1
  431e70:	bl	42e6bc <ferror@plt+0x2b98c>
  431e74:	add	w1, w0, #0x1
  431e78:	mov	x0, x20
  431e7c:	bl	42f440 <ferror@plt+0x2c710>
  431e80:	mov	x19, x0
  431e84:	mov	w3, #0x0                   	// #0
  431e88:	mov	x2, x0
  431e8c:	mov	x1, x21
  431e90:	mov	x0, x20
  431e94:	bl	42e788 <ferror@plt+0x2ba58>
  431e98:	strb	wzr, [x0]
  431e9c:	mov	x0, x19
  431ea0:	ldp	x19, x20, [sp, #16]
  431ea4:	ldr	x21, [sp, #32]
  431ea8:	ldp	x29, x30, [sp], #48
  431eac:	ret
  431eb0:	stp	x29, x30, [sp, #-32]!
  431eb4:	mov	x29, sp
  431eb8:	stp	x19, x20, [sp, #16]
  431ebc:	mov	x20, x0
  431ec0:	mov	x19, x1
  431ec4:	ldr	x1, [x0, #56]
  431ec8:	ldr	x0, [x1, #16]
  431ecc:	ldr	x2, [x1, #24]
  431ed0:	sub	x2, x2, x0
  431ed4:	cmp	x2, x19
  431ed8:	b.cc	431ef0 <ferror@plt+0x2f1c0>  // b.lo, b.ul, b.last
  431edc:	add	x19, x0, x19
  431ee0:	str	x19, [x1, #16]
  431ee4:	ldp	x19, x20, [sp, #16]
  431ee8:	ldp	x29, x30, [sp], #32
  431eec:	ret
  431ef0:	mov	x1, x19
  431ef4:	mov	x0, x20
  431ef8:	bl	42f1e8 <ferror@plt+0x2c4b8>
  431efc:	mov	x1, x0
  431f00:	ldr	x0, [x20, #56]
  431f04:	str	x0, [x1]
  431f08:	str	x1, [x20, #56]
  431f0c:	ldr	x0, [x1, #16]
  431f10:	b	431edc <ferror@plt+0x2f1ac>
  431f14:	stp	x29, x30, [sp, #-48]!
  431f18:	mov	x29, sp
  431f1c:	stp	x19, x20, [sp, #16]
  431f20:	str	x21, [sp, #32]
  431f24:	mov	x19, x1
  431f28:	ldr	x2, [x0, #56]
  431f2c:	ldr	x21, [x2, #16]
  431f30:	ldr	x0, [x0, #1088]
  431f34:	ldr	x1, [x0, #104]
  431f38:	cbz	x1, 431f68 <ferror@plt+0x2f238>
  431f3c:	mov	x0, x19
  431f40:	blr	x1
  431f44:	mov	x20, x0
  431f48:	mov	x2, x19
  431f4c:	mov	x1, x21
  431f50:	bl	402620 <memcpy@plt>
  431f54:	mov	x0, x20
  431f58:	ldp	x19, x20, [sp, #16]
  431f5c:	ldr	x21, [sp, #32]
  431f60:	ldp	x29, x30, [sp], #48
  431f64:	ret
  431f68:	add	x19, x21, x19
  431f6c:	str	x19, [x2, #16]
  431f70:	mov	x20, x21
  431f74:	b	431f54 <ferror@plt+0x2f224>
  431f78:	ldrb	w1, [x0, #4]
  431f7c:	sbfiz	x2, x1, #4, #32
  431f80:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x24c60>
  431f84:	add	x0, x0, #0xf28
  431f88:	ldr	w0, [x0, x2]
  431f8c:	cmp	w0, #0x2
  431f90:	b.eq	431fa0 <ferror@plt+0x2f270>  // b.none
  431f94:	b.hi	431fa4 <ferror@plt+0x2f274>  // b.pmore
  431f98:	cbz	w0, 431fd8 <ferror@plt+0x2f2a8>
  431f9c:	mov	w0, #0x0                   	// #0
  431fa0:	ret
  431fa4:	cmp	w0, #0x3
  431fa8:	b.ne	431fd0 <ferror@plt+0x2f2a0>  // b.any
  431fac:	cmp	w1, #0x50
  431fb0:	b.eq	431fa0 <ferror@plt+0x2f270>  // b.none
  431fb4:	mov	w0, #0x1                   	// #1
  431fb8:	cmp	w1, #0x53
  431fbc:	b.eq	431fa0 <ferror@plt+0x2f270>  // b.none
  431fc0:	cmp	w1, #0x51
  431fc4:	cset	w0, ne  // ne = any
  431fc8:	add	w0, w0, #0x5
  431fcc:	b	431fa0 <ferror@plt+0x2f270>
  431fd0:	mov	w0, #0x6                   	// #6
  431fd4:	b	431fa0 <ferror@plt+0x2f270>
  431fd8:	cmp	w1, #0x26
  431fdc:	mov	w0, #0x4                   	// #4
  431fe0:	mov	w1, #0x6                   	// #6
  431fe4:	csel	w0, w0, w1, eq  // eq = none
  431fe8:	b	431fa0 <ferror@plt+0x2f270>
  431fec:	str	w1, [x0, #1408]
  431ff0:	ret
  431ff4:	str	wzr, [x0, #1408]
  431ff8:	ret
  431ffc:	ldr	w2, [x0]
  432000:	ldr	w1, [x0, #4]
  432004:	add	w2, w2, w1
  432008:	ldr	x3, [x0, #16]
  43200c:	ldr	w1, [x0, #8]
  432010:	add	w0, w1, w3
  432014:	add	w0, w2, w0
  432018:	ret
  43201c:	mov	x2, x0
  432020:	ldr	x3, [x0]
  432024:	ldr	x0, [x1]
  432028:	cmp	x3, x0
  43202c:	b.eq	432038 <ferror@plt+0x2f308>  // b.none
  432030:	mov	w0, #0x0                   	// #0
  432034:	ret
  432038:	ldr	w4, [x2, #8]
  43203c:	ldr	w3, [x1, #8]
  432040:	mov	w0, #0x0                   	// #0
  432044:	cmp	w4, w3
  432048:	b.ne	432034 <ferror@plt+0x2f304>  // b.any
  43204c:	ldr	x2, [x2, #16]
  432050:	ldr	x0, [x1, #16]
  432054:	cmp	x2, x0
  432058:	cset	w0, eq  // eq = none
  43205c:	b	432034 <ferror@plt+0x2f304>
  432060:	ldr	x2, [x0]
  432064:	ldr	x1, [x1]
  432068:	add	x2, x2, x1
  43206c:	str	x2, [x0]
  432070:	mov	w0, #0x1                   	// #1
  432074:	ret
  432078:	mov	x8, x0
  43207c:	tbnz	w1, #31, 4320dc <ferror@plt+0x2f3ac>
  432080:	cmp	x8, #0x0
  432084:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  432088:	b.ls	432140 <ferror@plt+0x2f410>  // b.plast
  43208c:	ldr	w4, [x8, #16]
  432090:	ldr	x7, [x8]
  432094:	sbfiz	x2, x4, #1, #32
  432098:	add	x2, x2, w4, sxtw
  43209c:	lsl	x2, x2, #3
  4320a0:	add	x0, x7, x2
  4320a4:	ldr	w2, [x7, x2]
  4320a8:	mov	w3, #0x0                   	// #0
  4320ac:	cmp	w1, w2
  4320b0:	b.cc	432120 <ferror@plt+0x2f3f0>  // b.lo, b.ul, b.last
  4320b4:	ldr	w2, [x8, #12]
  4320b8:	add	w3, w4, #0x1
  4320bc:	cmp	w3, w2
  4320c0:	b.eq	43213c <ferror@plt+0x2f40c>  // b.none
  4320c4:	ldr	w3, [x0, #24]
  4320c8:	cmp	w1, w3
  4320cc:	b.cc	43213c <ferror@plt+0x2f40c>  // b.lo, b.ul, b.last
  4320d0:	mov	w3, w4
  4320d4:	mov	w4, w2
  4320d8:	b	432120 <ferror@plt+0x2f3f0>
  4320dc:	and	x0, x1, #0x7fffffff
  4320e0:	lsl	w1, w1, #1
  4320e4:	add	x1, x1, x0
  4320e8:	lsl	x1, x1, #3
  4320ec:	ldr	x0, [x8, #104]
  4320f0:	ldr	w1, [x0, x1]
  4320f4:	b	432080 <ferror@plt+0x2f350>
  4320f8:	add	w2, w3, w4
  4320fc:	lsr	w5, w2, #1
  432100:	lsr	w6, w2, #1
  432104:	and	x2, x2, #0xfffffffe
  432108:	add	x2, x2, x6
  43210c:	lsl	x2, x2, #3
  432110:	ldr	w2, [x7, x2]
  432114:	cmp	w1, w2
  432118:	csel	w3, w3, w5, cc  // cc = lo, ul, last
  43211c:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  432120:	sub	w2, w4, w3
  432124:	cmp	w2, #0x1
  432128:	b.hi	4320f8 <ferror@plt+0x2f3c8>  // b.pmore
  43212c:	str	w3, [x8, #16]
  432130:	sbfiz	x0, x3, #1, #32
  432134:	add	x0, x0, w3, sxtw
  432138:	add	x0, x7, x0, lsl #3
  43213c:	ret
  432140:	mov	x0, #0x0                   	// #0
  432144:	b	43213c <ferror@plt+0x2f40c>
  432148:	stp	x29, x30, [sp, #-80]!
  43214c:	mov	x29, sp
  432150:	stp	x19, x20, [sp, #16]
  432154:	stp	x21, x22, [sp, #32]
  432158:	stp	x25, x26, [sp, #64]
  43215c:	mov	x20, x0
  432160:	mov	w21, w1
  432164:	mov	w0, #0x6fffffff            	// #1879048191
  432168:	cmp	w1, w0
  43216c:	b.ls	432238 <ferror@plt+0x2f508>  // b.plast
  432170:	ldr	w0, [x20, #32]
  432174:	add	x22, x20, #0x24
  432178:	ldr	w19, [x20, #36]
  43217c:	cmp	w0, w19
  432180:	b.eq	4321b4 <ferror@plt+0x2f484>  // b.none
  432184:	ubfiz	x19, x19, #5, #32
  432188:	ldr	x0, [x20, #24]
  43218c:	add	x0, x0, x19
  432190:	ldr	w1, [x22]
  432194:	add	w1, w1, #0x1
  432198:	str	w1, [x22]
  43219c:	str	w21, [x0]
  4321a0:	ldp	x19, x20, [sp, #16]
  4321a4:	ldp	x21, x22, [sp, #32]
  4321a8:	ldp	x25, x26, [sp, #64]
  4321ac:	ldp	x29, x30, [sp], #80
  4321b0:	ret
  4321b4:	stp	x23, x24, [sp, #48]
  4321b8:	add	x25, x20, #0x20
  4321bc:	cbz	w0, 43227c <ferror@plt+0x2f54c>
  4321c0:	lsl	w0, w0, #1
  4321c4:	mov	w1, #0x6fffffff            	// #1879048191
  4321c8:	cmp	w21, w1
  4321cc:	b.ls	432270 <ferror@plt+0x2f540>  // b.plast
  4321d0:	ldr	x26, [x20, #24]
  4321d4:	mov	x24, #0x20                  	// #32
  4321d8:	mov	w0, w0
  4321dc:	ldr	x1, [x20, #80]
  4321e0:	mul	x0, x0, x24
  4321e4:	blr	x1
  4321e8:	udiv	x23, x0, x24
  4321ec:	and	x1, x23, #0xffffffff
  4321f0:	ldr	x2, [x20, #72]
  4321f4:	mul	x1, x1, x24
  4321f8:	mov	x0, x26
  4321fc:	blr	x2
  432200:	mov	x26, x0
  432204:	sub	w2, w23, w19
  432208:	mov	w0, w19
  43220c:	mul	x2, x2, x24
  432210:	mov	w1, #0x0                   	// #0
  432214:	madd	x0, x0, x24, x26
  432218:	bl	402890 <memset@plt>
  43221c:	mov	w0, #0x6fffffff            	// #1879048191
  432220:	cmp	w21, w0
  432224:	b.ls	432284 <ferror@plt+0x2f554>  // b.plast
  432228:	str	x26, [x20, #24]
  43222c:	str	w23, [x25]
  432230:	ldp	x23, x24, [sp, #48]
  432234:	b	432184 <ferror@plt+0x2f454>
  432238:	ldr	w0, [x20, #8]
  43223c:	add	x22, x20, #0xc
  432240:	ldr	w19, [x20, #12]
  432244:	cmp	w0, w19
  432248:	b.eq	432260 <ferror@plt+0x2f530>  // b.none
  43224c:	ubfiz	x0, x19, #1, #32
  432250:	add	x19, x0, w19, uxtw
  432254:	ldr	x0, [x20]
  432258:	add	x0, x0, x19, lsl #3
  43225c:	b	432190 <ferror@plt+0x2f460>
  432260:	stp	x23, x24, [sp, #48]
  432264:	add	x25, x20, #0x8
  432268:	cbnz	w0, 4321c0 <ferror@plt+0x2f490>
  43226c:	mov	w0, #0x100                 	// #256
  432270:	ldr	x26, [x20]
  432274:	mov	x24, #0x18                  	// #24
  432278:	b	4321d8 <ferror@plt+0x2f4a8>
  43227c:	mov	w0, #0x100                 	// #256
  432280:	b	4321d0 <ferror@plt+0x2f4a0>
  432284:	str	x26, [x20]
  432288:	str	w23, [x25]
  43228c:	ldp	x23, x24, [sp, #48]
  432290:	b	43224c <ferror@plt+0x2f51c>
  432294:	ldr	x0, [x0, #88]
  432298:	cbz	x0, 4322b0 <ferror@plt+0x2f580>
  43229c:	stp	x29, x30, [sp, #-16]!
  4322a0:	mov	x29, sp
  4322a4:	bl	4534bc <ferror@plt+0x5078c>
  4322a8:	ldp	x29, x30, [sp], #16
  4322ac:	ret
  4322b0:	ret
  4322b4:	stp	x29, x30, [sp, #-48]!
  4322b8:	mov	x29, sp
  4322bc:	stp	x19, x20, [sp, #16]
  4322c0:	mov	x20, x0
  4322c4:	mov	x3, #0x0                   	// #0
  4322c8:	adrp	x2, 432000 <ferror@plt+0x2f2d0>
  4322cc:	add	x2, x2, #0x1c
  4322d0:	adrp	x1, 431000 <ferror@plt+0x2e2d0>
  4322d4:	add	x1, x1, #0xffc
  4322d8:	mov	x0, #0x64                  	// #100
  4322dc:	bl	453474 <ferror@plt+0x50744>
  4322e0:	str	x0, [x20, #88]
  4322e4:	ldr	w0, [x20, #96]
  4322e8:	cbz	w0, 432328 <ferror@plt+0x2f5f8>
  4322ec:	str	x21, [sp, #32]
  4322f0:	mov	w19, #0x0                   	// #0
  4322f4:	mov	w21, #0x1                   	// #1
  4322f8:	ubfiz	x1, x19, #1, #32
  4322fc:	add	x1, x1, w19, uxtw
  432300:	ldr	x0, [x20, #104]
  432304:	mov	w2, w21
  432308:	add	x1, x0, x1, lsl #3
  43230c:	ldr	x0, [x20, #88]
  432310:	bl	4539f0 <ferror@plt+0x50cc0>
  432314:	add	w19, w19, #0x1
  432318:	ldr	w0, [x20, #96]
  43231c:	cmp	w0, w19
  432320:	b.hi	4322f8 <ferror@plt+0x2f5c8>  // b.pmore
  432324:	ldr	x21, [sp, #32]
  432328:	ldp	x19, x20, [sp, #16]
  43232c:	ldp	x29, x30, [sp], #48
  432330:	ret
  432334:	and	x2, x1, #0x7fffffff
  432338:	ldr	x0, [x0, #104]
  43233c:	lsl	w1, w1, #1
  432340:	add	x1, x1, x2
  432344:	add	x1, x0, x1, lsl #3
  432348:	ldr	x0, [x1, #16]
  43234c:	ret
  432350:	and	x2, x1, #0x7fffffff
  432354:	ldr	x0, [x0, #104]
  432358:	lsl	w1, w1, #1
  43235c:	add	x1, x1, x2
  432360:	lsl	x1, x1, #3
  432364:	ldr	w0, [x0, x1]
  432368:	ret
  43236c:	stp	x29, x30, [sp, #-32]!
  432370:	mov	x29, sp
  432374:	stp	x19, x20, [sp, #16]
  432378:	mov	x19, x0
  43237c:	mov	w20, w1
  432380:	stp	xzr, xzr, [x0]
  432384:	stp	xzr, xzr, [x0, #16]
  432388:	stp	xzr, xzr, [x0, #32]
  43238c:	stp	xzr, xzr, [x0, #48]
  432390:	stp	xzr, xzr, [x0, #64]
  432394:	stp	xzr, xzr, [x0, #80]
  432398:	stp	xzr, xzr, [x0, #96]
  43239c:	stp	xzr, xzr, [x0, #112]
  4323a0:	str	xzr, [x0, #128]
  4323a4:	adrp	x0, 454000 <ferror@plt+0x512d0>
  4323a8:	add	x0, x0, #0xdb8
  4323ac:	str	x0, [x19, #72]
  4323b0:	mov	w0, #0x1                   	// #1
  4323b4:	str	w0, [x19, #56]
  4323b8:	str	w0, [x19, #60]
  4323bc:	mov	x3, #0x0                   	// #0
  4323c0:	adrp	x2, 432000 <ferror@plt+0x2f2d0>
  4323c4:	add	x2, x2, #0x1c
  4323c8:	adrp	x1, 431000 <ferror@plt+0x2e2d0>
  4323cc:	add	x1, x1, #0xffc
  4323d0:	mov	x0, #0x64                  	// #100
  4323d4:	bl	453474 <ferror@plt+0x50744>
  4323d8:	str	x0, [x19, #88]
  4323dc:	str	w20, [x19, #112]
  4323e0:	ldp	x19, x20, [sp, #16]
  4323e4:	ldp	x29, x30, [sp], #32
  4323e8:	ret
  4323ec:	stp	x29, x30, [sp, #-16]!
  4323f0:	mov	x29, sp
  4323f4:	ldr	w1, [x1, #20]
  4323f8:	bl	432078 <ferror@plt+0x2f348>
  4323fc:	ldp	x29, x30, [sp], #16
  432400:	ret
  432404:	stp	x29, x30, [sp, #-48]!
  432408:	mov	x29, sp
  43240c:	stp	x19, x20, [sp, #16]
  432410:	mov	x20, x0
  432414:	ldr	w19, [x0, #12]
  432418:	sub	w19, w19, #0x1
  43241c:	sbfiz	x0, x19, #1, #32
  432420:	add	x19, x0, w19, sxtw
  432424:	ldr	x0, [x20]
  432428:	add	x19, x0, x19, lsl #3
  43242c:	ldr	w0, [x19, #20]
  432430:	cbz	w0, 432470 <ferror@plt+0x2f740>
  432434:	stp	x21, x22, [sp, #32]
  432438:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43243c:	add	x21, x21, #0x4d0
  432440:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  432444:	ldr	x2, [x19, #8]
  432448:	mov	x1, x21
  43244c:	ldr	x0, [x22, #1424]
  432450:	bl	402ce0 <fprintf@plt>
  432454:	mov	x1, x19
  432458:	mov	x0, x20
  43245c:	bl	4323ec <ferror@plt+0x2f6bc>
  432460:	mov	x19, x0
  432464:	ldr	w1, [x0, #20]
  432468:	cbnz	w1, 432444 <ferror@plt+0x2f714>
  43246c:	ldp	x21, x22, [sp, #32]
  432470:	ldp	x19, x20, [sp, #16]
  432474:	ldp	x29, x30, [sp], #48
  432478:	ret
  43247c:	stp	x29, x30, [sp, #-80]!
  432480:	mov	x29, sp
  432484:	stp	x19, x20, [sp, #16]
  432488:	stp	x21, x22, [sp, #32]
  43248c:	stp	x23, x24, [sp, #48]
  432490:	str	x25, [sp, #64]
  432494:	mov	x19, x0
  432498:	mov	w21, w1
  43249c:	mov	w25, w2
  4324a0:	mov	x23, x3
  4324a4:	mov	w24, w4
  4324a8:	ldr	w1, [x0, #56]
  4324ac:	add	w22, w1, #0x1
  4324b0:	mov	w0, #0x5fffffff            	// #1610612735
  4324b4:	cmp	w1, w0
  4324b8:	b.hi	4324dc <ferror@plt+0x2f7ac>  // b.pmore
  4324bc:	ldr	w2, [x19, #120]
  4324c0:	mov	w0, #0x1                   	// #1
  4324c4:	lsl	w0, w0, w2
  4324c8:	add	w22, w0, w1
  4324cc:	neg	w0, w0
  4324d0:	and	w0, w22, w0
  4324d4:	cmp	w2, #0x0
  4324d8:	csel	w22, w0, w22, ne  // ne = any
  4324dc:	cmp	w21, #0x1
  4324e0:	b.eq	4325bc <ferror@plt+0x2f88c>  // b.none
  4324e4:	mov	w0, #0x6fffffff            	// #1879048191
  4324e8:	cmp	w22, w0
  4324ec:	csel	w22, w22, wzr, ls  // ls = plast
  4324f0:	mov	w1, w22
  4324f4:	mov	x0, x19
  4324f8:	bl	432148 <ferror@plt+0x2f418>
  4324fc:	mov	x20, x0
  432500:	strb	w21, [x0, #4]
  432504:	cbz	x23, 432518 <ferror@plt+0x2f7e8>
  432508:	ldrb	w0, [x23]
  43250c:	cmp	w0, #0x0
  432510:	ccmp	w21, #0x3, #0x4, eq  // eq = none
  432514:	b.ne	4325f8 <ferror@plt+0x2f8c8>  // b.any
  432518:	cmp	w21, #0x3
  43251c:	b.eq	43263c <ferror@plt+0x2f90c>  // b.none
  432520:	mov	x0, #0x0                   	// #0
  432524:	cmp	w21, #0x1
  432528:	b.eq	432604 <ferror@plt+0x2f8d4>  // b.none
  43252c:	strb	w25, [x20, #5]
  432530:	str	x23, [x20, #8]
  432534:	str	w24, [x20, #16]
  432538:	ldr	w1, [x19, #12]
  43253c:	sub	w1, w1, #0x1
  432540:	str	w1, [x19, #16]
  432544:	strb	wzr, [x20, #6]
  432548:	strb	wzr, [x20, #7]
  43254c:	str	w22, [x19, #56]
  432550:	str	w22, [x19, #60]
  432554:	str	wzr, [x19, #64]
  432558:	cbnz	w21, 4326a8 <ferror@plt+0x2f978>
  43255c:	ldr	w0, [x19, #48]
  432560:	cbz	w0, 432588 <ferror@plt+0x2f858>
  432564:	ldur	w2, [x20, #-24]
  432568:	ldr	w0, [x20]
  43256c:	sub	w0, w0, #0x1
  432570:	sub	w0, w0, w2
  432574:	ldurb	w3, [x20, #-18]
  432578:	mov	w1, #0xffffffff            	// #-1
  43257c:	lsl	w1, w1, w3
  432580:	and	w0, w0, w1
  432584:	add	w0, w0, w2
  432588:	str	w0, [x20, #20]
  43258c:	ldr	w21, [x19, #48]
  432590:	add	w0, w21, #0x1
  432594:	str	w0, [x19, #48]
  432598:	ldrb	w0, [x19, #52]
  43259c:	cbnz	w0, 432648 <ferror@plt+0x2f918>
  4325a0:	mov	x0, x20
  4325a4:	ldp	x19, x20, [sp, #16]
  4325a8:	ldp	x21, x22, [sp, #32]
  4325ac:	ldp	x23, x24, [sp, #48]
  4325b0:	ldr	x25, [sp, #64]
  4325b4:	ldp	x29, x30, [sp], #80
  4325b8:	ret
  4325bc:	ldr	w0, [x19, #12]
  4325c0:	sub	w0, w0, #0x1
  4325c4:	ldr	x1, [x19]
  4325c8:	sbfiz	x2, x0, #1, #32
  4325cc:	add	x0, x2, w0, sxtw
  4325d0:	add	x0, x1, x0, lsl #3
  4325d4:	ldr	w0, [x0, #20]
  4325d8:	cmp	w0, #0x0
  4325dc:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  4325e0:	b.ne	4324e4 <ferror@plt+0x2f7b4>  // b.any
  4325e4:	ldr	w0, [x19, #48]
  4325e8:	sub	w0, w0, #0x1
  4325ec:	str	w0, [x19, #48]
  4325f0:	mov	x20, #0x0                   	// #0
  4325f4:	b	4325a0 <ferror@plt+0x2f870>
  4325f8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4325fc:	add	x23, x23, #0x500
  432600:	b	432520 <ferror@plt+0x2f7f0>
  432604:	sub	x1, x20, #0x18
  432608:	mov	x0, x19
  43260c:	bl	4323ec <ferror@plt+0x2f6bc>
  432610:	cbnz	x23, 43252c <ferror@plt+0x2f7fc>
  432614:	ldr	x23, [x0, #8]
  432618:	ldr	w24, [x0, #24]
  43261c:	ldr	w1, [x0]
  432620:	sub	w24, w24, w1
  432624:	ldrb	w1, [x0, #6]
  432628:	lsr	w24, w24, w1
  43262c:	ldr	w4, [x0, #16]
  432630:	add	w24, w24, w4
  432634:	ldrb	w25, [x0, #5]
  432638:	b	43252c <ferror@plt+0x2f7fc>
  43263c:	mov	w21, #0x2                   	// #2
  432640:	mov	x0, #0x0                   	// #0
  432644:	b	43252c <ferror@plt+0x2f7fc>
  432648:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43264c:	mov	w19, #0x2e                  	// #46
  432650:	mov	w23, #0x2e                  	// #46
  432654:	cbz	w21, 432680 <ferror@plt+0x2f950>
  432658:	ldr	x0, [x22, #1424]
  43265c:	ldr	x1, [x0, #40]
  432660:	ldr	x2, [x0, #48]
  432664:	cmp	x1, x2
  432668:	b.cs	43269c <ferror@plt+0x2f96c>  // b.hs, b.nlast
  43266c:	add	x2, x1, #0x1
  432670:	str	x2, [x0, #40]
  432674:	strb	w19, [x1]
  432678:	subs	w21, w21, #0x1
  43267c:	b.ne	432658 <ferror@plt+0x2f928>  // b.any
  432680:	ldr	x2, [x20, #8]
  432684:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  432688:	add	x1, x1, #0x508
  43268c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  432690:	ldr	x0, [x0, #1424]
  432694:	bl	402ce0 <fprintf@plt>
  432698:	b	4325a0 <ferror@plt+0x2f870>
  43269c:	mov	w1, w23
  4326a0:	bl	4029a0 <__overflow@plt>
  4326a4:	b	432678 <ferror@plt+0x2f948>
  4326a8:	cmp	w21, #0x2
  4326ac:	b.eq	4326d0 <ferror@plt+0x2f9a0>  // b.none
  4326b0:	cmp	w21, #0x1
  4326b4:	b.ne	4325a0 <ferror@plt+0x2f870>  // b.any
  4326b8:	ldr	w1, [x19, #48]
  4326bc:	sub	w1, w1, #0x1
  4326c0:	str	w1, [x19, #48]
  4326c4:	ldr	w0, [x0, #20]
  4326c8:	str	w0, [x20, #20]
  4326cc:	b	4325a0 <ferror@plt+0x2f870>
  4326d0:	ldur	w0, [x20, #-4]
  4326d4:	str	w0, [x20, #20]
  4326d8:	b	4325a0 <ferror@plt+0x2f870>
  4326dc:	ldr	x0, [x0, #24]
  4326e0:	cmp	x0, #0x0
  4326e4:	cset	w0, ne  // ne = any
  4326e8:	ret
  4326ec:	stp	x29, x30, [sp, #-64]!
  4326f0:	mov	x29, sp
  4326f4:	stp	x19, x20, [sp, #16]
  4326f8:	stp	x21, x22, [sp, #32]
  4326fc:	str	x23, [sp, #48]
  432700:	mov	x21, x0
  432704:	mov	x23, x1
  432708:	mov	w22, w2
  43270c:	mov	w19, w3
  432710:	ldr	w3, [x0, #36]
  432714:	mov	w0, #0x80000000            	// #-2147483648
  432718:	cbz	w3, 43272c <ferror@plt+0x2f9fc>
  43271c:	sub	w3, w3, #0x1
  432720:	ldr	x0, [x21, #24]
  432724:	sbfiz	x3, x3, #5, #32
  432728:	ldr	w0, [x0, x3]
  43272c:	sub	w1, w0, w19
  432730:	mov	x20, #0x0                   	// #0
  432734:	mov	w0, #0x6fffffff            	// #1879048191
  432738:	cmp	w1, w0
  43273c:	b.ls	432788 <ferror@plt+0x2fa58>  // b.plast
  432740:	mov	x0, x21
  432744:	bl	432148 <ferror@plt+0x2f418>
  432748:	mov	x20, x0
  43274c:	str	x23, [x0, #8]
  432750:	str	w19, [x0, #4]
  432754:	ubfiz	x19, x19, #3, #31
  432758:	ldr	x2, [x21, #72]
  43275c:	mov	x1, x19
  432760:	mov	x0, #0x0                   	// #0
  432764:	blr	x2
  432768:	str	x0, [x20, #16]
  43276c:	str	w22, [x20, #24]
  432770:	mov	x2, x19
  432774:	mov	w1, #0x0                   	// #0
  432778:	bl	402890 <memset@plt>
  43277c:	ldr	w0, [x21, #36]
  432780:	sub	w0, w0, #0x1
  432784:	str	w0, [x21, #40]
  432788:	mov	x0, x20
  43278c:	ldp	x19, x20, [sp, #16]
  432790:	ldp	x21, x22, [sp, #32]
  432794:	ldr	x23, [sp, #48]
  432798:	ldp	x29, x30, [sp], #64
  43279c:	ret
  4327a0:	lsl	w4, w1, #1
  4327a4:	lsl	w6, w1, #1
  4327a8:	ldr	x5, [x0, #16]
  4327ac:	str	w2, [x5, x6, lsl #2]
  4327b0:	add	w4, w4, #0x1
  4327b4:	ldr	x2, [x0, #16]
  4327b8:	str	w3, [x2, x4, lsl #2]
  4327bc:	ldr	w0, [x0]
  4327c0:	add	w0, w1, w0
  4327c4:	ret
  4327c8:	stp	x29, x30, [sp, #-64]!
  4327cc:	mov	x29, sp
  4327d0:	stp	x19, x20, [sp, #16]
  4327d4:	stp	x21, x22, [sp, #32]
  4327d8:	str	x23, [sp, #48]
  4327dc:	mov	x20, x0
  4327e0:	mov	w22, w1
  4327e4:	ldr	w4, [x0, #12]
  4327e8:	sub	w4, w4, #0x1
  4327ec:	sbfiz	x0, x4, #1, #32
  4327f0:	add	x4, x0, w4, sxtw
  4327f4:	lsl	x4, x4, #3
  4327f8:	ldr	x0, [x20]
  4327fc:	add	x5, x0, x4
  432800:	ldr	w9, [x20, #56]
  432804:	ldr	w3, [x20, #60]
  432808:	ldr	w7, [x0, x4]
  43280c:	ldrb	w4, [x5, #6]
  432810:	ldr	w8, [x5, #16]
  432814:	sub	w1, w3, w7
  432818:	lsr	w1, w1, w4
  43281c:	add	w1, w1, w8
  432820:	ldrb	w10, [x5, #7]
  432824:	subs	w6, w22, w1
  432828:	b.mi	4328c0 <ferror@plt+0x2fb90>  // b.first
  43282c:	cmp	w6, #0xa
  432830:	b.le	432840 <ferror@plt+0x2fb10>
  432834:	mul	w0, w6, w4
  432838:	cmp	w0, #0x3e8
  43283c:	b.gt	4328c0 <ferror@plt+0x2fb90>
  432840:	sub	w11, w4, w10
  432844:	mov	w0, #0x1                   	// #1
  432848:	lsl	w0, w0, w11
  43284c:	cmp	w0, w2
  432850:	b.ls	4328c0 <ferror@plt+0x2fb90>  // b.plast
  432854:	cmp	w2, #0x50
  432858:	ccmp	w11, #0x9, #0x4, ls  // ls = plast
  43285c:	b.gt	4328c0 <ferror@plt+0x2fb90>
  432860:	cmp	w10, #0x0
  432864:	mov	w0, #0x50000000            	// #1342177280
  432868:	ccmp	w9, w0, #0x0, ne  // ne = any
  43286c:	b.hi	4329dc <ferror@plt+0x2fcac>  // b.pmore
  432870:	mov	w0, #0x60000000            	// #1610612736
  432874:	cmp	w9, w0
  432878:	b.ls	4328b0 <ferror@plt+0x2fb80>  // b.plast
  43287c:	ldr	w0, [x20, #64]
  432880:	cmp	w0, #0x0
  432884:	mov	w0, #0x6fffffff            	// #1879048191
  432888:	ccmp	w9, w0, #0x2, eq  // eq = none
  43288c:	b.ls	4328b0 <ferror@plt+0x2fb80>  // b.plast
  432890:	mov	w0, #0x0                   	// #0
  432894:	mov	w2, #0x6fffffff            	// #1879048191
  432898:	cmp	w9, w2
  43289c:	b.hi	432970 <ferror@plt+0x2fc40>  // b.pmore
  4328a0:	mov	w23, #0x0                   	// #0
  4328a4:	mov	w19, #0x0                   	// #0
  4328a8:	mov	w21, #0x0                   	// #0
  4328ac:	b	432908 <ferror@plt+0x2fbd8>
  4328b0:	ldr	w21, [x20, #64]
  4328b4:	lsl	w0, w6, w4
  4328b8:	add	w0, w0, w3
  4328bc:	b	43294c <ferror@plt+0x2fc1c>
  4328c0:	cmp	w2, #0x1, lsl #12
  4328c4:	mov	w0, #0x60000000            	// #1610612736
  4328c8:	ccmp	w9, w0, #0x2, ls  // ls = plast
  4328cc:	b.hi	432890 <ferror@plt+0x2fb60>  // b.pmore
  4328d0:	mov	w23, #0x0                   	// #0
  4328d4:	mov	w0, #0x50000000            	// #1342177280
  4328d8:	cmp	w9, w0
  4328dc:	b.hi	4328e4 <ferror@plt+0x2fbb4>  // b.pmore
  4328e0:	ldr	w23, [x20, #120]
  4328e4:	cmp	w2, #0x7f
  4328e8:	b.ls	432984 <ferror@plt+0x2fc54>  // b.plast
  4328ec:	mov	w3, #0x7                   	// #7
  4328f0:	mov	w0, #0x1                   	// #1
  4328f4:	add	w3, w3, #0x1
  4328f8:	lsl	w21, w0, w3
  4328fc:	cmp	w21, w2
  432900:	b.ls	4328f4 <ferror@plt+0x2fbc4>  // b.plast
  432904:	add	w19, w23, w3
  432908:	cmp	w6, #0x0
  43290c:	ccmp	w1, w8, #0x0, ge  // ge = tcont
  432910:	b.eq	432990 <ferror@plt+0x2fc60>  // b.none
  432914:	mov	w4, w22
  432918:	ldr	x3, [x5, #8]
  43291c:	ldrb	w2, [x5, #5]
  432920:	mov	w1, #0x2                   	// #2
  432924:	mov	x0, x20
  432928:	bl	43247c <ferror@plt+0x2f74c>
  43292c:	mov	x5, x0
  432930:	strb	w19, [x5, #6]
  432934:	strb	w23, [x5, #7]
  432938:	ldr	w3, [x5, #16]
  43293c:	sub	w3, w22, w3
  432940:	lsl	w3, w3, w19
  432944:	ldr	w0, [x5]
  432948:	add	w0, w3, w0
  43294c:	mov	w1, #0x6fffffff            	// #1879048191
  432950:	cmp	w0, w1
  432954:	b.hi	4329d4 <ferror@plt+0x2fca4>  // b.pmore
  432958:	str	w0, [x20, #60]
  43295c:	ldr	w1, [x20, #56]
  432960:	cmp	w1, w0
  432964:	b.cs	43296c <ferror@plt+0x2fc3c>  // b.hs, b.nlast
  432968:	str	w0, [x20, #56]
  43296c:	str	w21, [x20, #64]
  432970:	ldp	x19, x20, [sp, #16]
  432974:	ldp	x21, x22, [sp, #32]
  432978:	ldr	x23, [sp, #48]
  43297c:	ldp	x29, x30, [sp], #64
  432980:	ret
  432984:	mov	w3, #0x7                   	// #7
  432988:	mov	w21, #0x80                  	// #128
  43298c:	b	432904 <ferror@plt+0x2fbd4>
  432990:	mov	w0, #0x1                   	// #1
  432994:	lsl	w0, w0, w4
  432998:	sub	w0, w0, #0x1
  43299c:	sub	w7, w9, w7
  4329a0:	and	w0, w0, w7
  4329a4:	lsr	w0, w0, w10
  4329a8:	sub	w1, w19, w23
  4329ac:	lsr	w0, w0, w1
  4329b0:	cbnz	w0, 432914 <ferror@plt+0x2fbe4>
  4329b4:	sub	w0, w22, w8
  4329b8:	mov	w1, #0x20                  	// #32
  4329bc:	sub	w1, w1, w19
  4329c0:	lsr	x0, x0, x1
  4329c4:	cmp	x0, #0x0
  4329c8:	ccmp	w10, w23, #0x0, eq  // eq = none
  4329cc:	b.gt	432914 <ferror@plt+0x2fbe4>
  4329d0:	b	432930 <ferror@plt+0x2fc00>
  4329d4:	mov	w0, #0x0                   	// #0
  4329d8:	b	432970 <ferror@plt+0x2fc40>
  4329dc:	cmp	w2, #0x1, lsl #12
  4329e0:	mov	w0, #0x60000000            	// #1610612736
  4329e4:	ccmp	w9, w0, #0x2, ls  // ls = plast
  4329e8:	mov	w23, #0x0                   	// #0
  4329ec:	b.ls	4328e4 <ferror@plt+0x2fbb4>  // b.plast
  4329f0:	b	432890 <ferror@plt+0x2fb60>
  4329f4:	stp	x29, x30, [sp, #-32]!
  4329f8:	mov	x29, sp
  4329fc:	stp	x19, x20, [sp, #16]
  432a00:	mov	x19, x0
  432a04:	mov	w20, w1
  432a08:	ldr	w0, [x0, #60]
  432a0c:	ldr	w1, [x19, #64]
  432a10:	cmp	w1, w20
  432a14:	b.hi	432a88 <ferror@plt+0x2fd58>  // b.pmore
  432a18:	cmp	w20, #0x1, lsl #12
  432a1c:	mov	w1, #0x60000000            	// #1610612736
  432a20:	ccmp	w0, w1, #0x2, ls  // ls = plast
  432a24:	b.hi	432abc <ferror@plt+0x2fd8c>  // b.pmore
  432a28:	ldr	w1, [x19, #12]
  432a2c:	sub	w1, w1, #0x1
  432a30:	sbfiz	x2, x1, #1, #32
  432a34:	add	x1, x2, w1, sxtw
  432a38:	lsl	x1, x1, #3
  432a3c:	ldr	x3, [x19]
  432a40:	add	x2, x3, x1
  432a44:	ldr	w1, [x3, x1]
  432a48:	sub	w0, w0, w1
  432a4c:	ldrb	w1, [x2, #6]
  432a50:	lsr	w0, w0, w1
  432a54:	ldr	w1, [x2, #16]
  432a58:	add	w2, w20, #0x32
  432a5c:	add	w1, w0, w1
  432a60:	mov	x0, x19
  432a64:	bl	4327c8 <ferror@plt+0x2fa98>
  432a68:	ldr	w1, [x19, #12]
  432a6c:	sub	w1, w1, #0x1
  432a70:	ldr	x2, [x19]
  432a74:	sbfiz	x3, x1, #1, #32
  432a78:	add	x1, x3, w1, sxtw
  432a7c:	add	x1, x2, x1, lsl #3
  432a80:	ldrb	w1, [x1, #6]
  432a84:	cbz	w1, 432abc <ferror@plt+0x2fd8c>
  432a88:	ldr	w1, [x19, #12]
  432a8c:	sub	w1, w1, #0x1
  432a90:	ldr	x2, [x19]
  432a94:	sbfiz	x3, x1, #1, #32
  432a98:	add	x1, x3, w1, sxtw
  432a9c:	add	x1, x2, x1, lsl #3
  432aa0:	ldrb	w1, [x1, #7]
  432aa4:	lsl	w20, w20, w1
  432aa8:	add	w0, w0, w20
  432aac:	ldr	w1, [x19, #56]
  432ab0:	cmp	w1, w0
  432ab4:	b.hi	432abc <ferror@plt+0x2fd8c>  // b.pmore
  432ab8:	str	w0, [x19, #56]
  432abc:	ldp	x19, x20, [sp, #16]
  432ac0:	ldp	x29, x30, [sp], #32
  432ac4:	ret
  432ac8:	mov	x4, x0
  432acc:	ldrb	w5, [x1, #6]
  432ad0:	ldr	w0, [x1, #16]
  432ad4:	sub	w2, w2, w0
  432ad8:	lsl	w2, w2, w5
  432adc:	ldr	w0, [x1]
  432ae0:	add	w0, w2, w0
  432ae4:	mov	w2, #0x60000000            	// #1610612736
  432ae8:	cmp	w0, w2
  432aec:	b.hi	432b0c <ferror@plt+0x2fddc>  // b.pmore
  432af0:	mov	w2, #0x1                   	// #1
  432af4:	lsl	w2, w2, w5
  432af8:	sub	w2, w2, #0x1
  432afc:	and	w3, w2, w3
  432b00:	ldrb	w1, [x1, #7]
  432b04:	lsl	w1, w3, w1
  432b08:	add	w0, w0, w1
  432b0c:	ldr	w1, [x4, #36]
  432b10:	mov	w2, #0x80000000            	// #-2147483648
  432b14:	cbz	w1, 432b28 <ferror@plt+0x2fdf8>
  432b18:	sub	w1, w1, #0x1
  432b1c:	ldr	x2, [x4, #24]
  432b20:	sbfiz	x1, x1, #5, #32
  432b24:	ldr	w2, [x2, x1]
  432b28:	sub	w1, w2, #0x1
  432b2c:	cmp	w0, w2
  432b30:	csel	w0, w1, w0, cs  // cs = hs, nlast
  432b34:	ldr	w1, [x4, #56]
  432b38:	cmp	w1, w0
  432b3c:	b.cs	432b44 <ferror@plt+0x2fe14>  // b.hs, b.nlast
  432b40:	str	w0, [x4, #56]
  432b44:	ret
  432b48:	cbz	x0, 432b60 <ferror@plt+0x2fe30>
  432b4c:	ldr	w1, [x0]
  432b50:	mov	w0, #0x6fffffff            	// #1879048191
  432b54:	cmp	w1, w0
  432b58:	cset	w0, hi  // hi = pmore
  432b5c:	ret
  432b60:	mov	w0, #0x0                   	// #0
  432b64:	b	432b5c <ferror@plt+0x2fe2c>
  432b68:	stp	x29, x30, [sp, #-32]!
  432b6c:	mov	x29, sp
  432b70:	str	x19, [sp, #16]
  432b74:	mov	x19, x1
  432b78:	tbnz	w2, #31, 432b9c <ferror@plt+0x2fe6c>
  432b7c:	ldr	w0, [x19]
  432b80:	sub	w2, w2, w0
  432b84:	lsl	w2, w2, #1
  432b88:	ldr	x0, [x19, #16]
  432b8c:	ldr	w0, [x0, x2, lsl #2]
  432b90:	ldr	x19, [sp, #16]
  432b94:	ldp	x29, x30, [sp], #32
  432b98:	ret
  432b9c:	mov	w1, w2
  432ba0:	bl	432350 <ferror@plt+0x2f620>
  432ba4:	mov	w2, w0
  432ba8:	b	432b7c <ferror@plt+0x2fe4c>
  432bac:	ldr	x0, [x0, #8]
  432bb0:	ldr	x0, [x0]
  432bb4:	ret
  432bb8:	tbnz	w1, #31, 432bd4 <ferror@plt+0x2fea4>
  432bbc:	mov	w0, #0x90000000            	// #-1879048192
  432bc0:	add	w1, w1, w0
  432bc4:	mov	w0, #0xfffffff             	// #268435455
  432bc8:	cmp	w1, w0
  432bcc:	cset	w0, ls  // ls = plast
  432bd0:	ret
  432bd4:	and	x2, x1, #0x7fffffff
  432bd8:	lsl	w1, w1, #1
  432bdc:	add	x1, x1, x2
  432be0:	lsl	x1, x1, #3
  432be4:	ldr	x0, [x0, #104]
  432be8:	ldr	w1, [x0, x1]
  432bec:	b	432bbc <ferror@plt+0x2fe8c>
  432bf0:	stp	x29, x30, [sp, #-48]!
  432bf4:	mov	x29, sp
  432bf8:	stp	x19, x20, [sp, #16]
  432bfc:	mov	x20, x0
  432c00:	mov	w19, w1
  432c04:	tbnz	w1, #31, 432c2c <ferror@plt+0x2fefc>
  432c08:	bl	432bb8 <ferror@plt+0x2fe88>
  432c0c:	and	w0, w0, #0xff
  432c10:	cbnz	w0, 432c7c <ferror@plt+0x2ff4c>
  432c14:	mov	w1, w19
  432c18:	mov	x0, x20
  432c1c:	bl	432078 <ferror@plt+0x2f348>
  432c20:	ldp	x19, x20, [sp, #16]
  432c24:	ldp	x29, x30, [sp], #48
  432c28:	ret
  432c2c:	str	x21, [sp, #32]
  432c30:	ldr	x21, [x0, #104]
  432c34:	and	x0, x19, #0x7fffffff
  432c38:	lsl	w19, w1, #1
  432c3c:	add	x19, x19, x0
  432c40:	lsl	x19, x19, #3
  432c44:	ldr	w19, [x21, x19]
  432c48:	mov	w1, w19
  432c4c:	mov	x0, x20
  432c50:	bl	432bb8 <ferror@plt+0x2fe88>
  432c54:	and	w0, w0, #0xff
  432c58:	cbz	w0, 432d04 <ferror@plt+0x2ffd4>
  432c5c:	tbz	w19, #31, 432cbc <ferror@plt+0x2ff8c>
  432c60:	and	x0, x19, #0x7fffffff
  432c64:	lsl	w19, w19, #1
  432c68:	add	x19, x19, x0
  432c6c:	lsl	x19, x19, #3
  432c70:	ldr	w19, [x21, x19]
  432c74:	ldr	x21, [sp, #32]
  432c78:	b	432c80 <ferror@plt+0x2ff50>
  432c7c:	cbz	x20, 432d0c <ferror@plt+0x2ffdc>
  432c80:	ldr	w3, [x20, #40]
  432c84:	ldr	w2, [x20, #36]
  432c88:	ldr	x4, [x20, #24]
  432c8c:	sbfiz	x1, x3, #5, #32
  432c90:	add	x0, x4, x1
  432c94:	ldr	w1, [x4, x1]
  432c98:	cmp	w1, w19
  432c9c:	b.hi	432cc8 <ferror@plt+0x2ff98>  // b.pmore
  432ca0:	cbz	w3, 432c20 <ferror@plt+0x2fef0>
  432ca4:	ldur	w1, [x0, #-32]
  432ca8:	cmp	w1, w19
  432cac:	b.hi	432c20 <ferror@plt+0x2fef0>  // b.pmore
  432cb0:	sub	w2, w3, #0x1
  432cb4:	mov	w3, #0x0                   	// #0
  432cb8:	b	432cc8 <ferror@plt+0x2ff98>
  432cbc:	ldr	x21, [sp, #32]
  432cc0:	b	432c80 <ferror@plt+0x2ff50>
  432cc4:	mov	w2, w0
  432cc8:	cmp	w2, w3
  432ccc:	b.ls	432cf4 <ferror@plt+0x2ffc4>  // b.plast
  432cd0:	add	w1, w2, w3
  432cd4:	lsr	w0, w1, #1
  432cd8:	lsr	w1, w1, #1
  432cdc:	lsl	x1, x1, #5
  432ce0:	ldr	w1, [x4, x1]
  432ce4:	cmp	w1, w19
  432ce8:	b.ls	432cc4 <ferror@plt+0x2ff94>  // b.plast
  432cec:	add	w3, w0, #0x1
  432cf0:	b	432cc8 <ferror@plt+0x2ff98>
  432cf4:	str	w2, [x20, #40]
  432cf8:	sbfiz	x0, x2, #5, #32
  432cfc:	add	x0, x4, x0
  432d00:	b	432c20 <ferror@plt+0x2fef0>
  432d04:	ldr	x21, [sp, #32]
  432d08:	b	432c14 <ferror@plt+0x2fee4>
  432d0c:	mov	x0, x20
  432d10:	b	432c20 <ferror@plt+0x2fef0>
  432d14:	stp	x29, x30, [sp, #-96]!
  432d18:	mov	x29, sp
  432d1c:	stp	x19, x20, [sp, #16]
  432d20:	stp	x21, x22, [sp, #32]
  432d24:	stp	x23, x24, [sp, #48]
  432d28:	mov	x21, x0
  432d2c:	mov	w19, w1
  432d30:	mov	x20, x2
  432d34:	mov	x22, x3
  432d38:	tbnz	w1, #31, 432df8 <ferror@plt+0x300c8>
  432d3c:	cmp	x22, #0x0
  432d40:	cset	w23, eq  // eq = none
  432d44:	cmp	w19, #0x0
  432d48:	mov	w0, #0x0                   	// #0
  432d4c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  432d50:	b.ne	432de4 <ferror@plt+0x300b4>  // b.any
  432d54:	lsr	x24, x20, #32
  432d58:	cmp	w24, w20
  432d5c:	ccmp	w20, #0x1, #0x0, cs  // cs = hs, nlast
  432d60:	cset	w0, ls  // ls = plast
  432d64:	cmp	w19, w20
  432d68:	mov	w1, #0x4fffffff            	// #1342177279
  432d6c:	ccmp	w19, w1, #0x2, eq  // eq = none
  432d70:	cset	w1, hi  // hi = pmore
  432d74:	orr	w0, w0, w1
  432d78:	cmp	x22, #0x0
  432d7c:	csinc	w0, w0, wzr, eq  // eq = none
  432d80:	cbz	w0, 432e14 <ferror@plt+0x300e4>
  432d84:	cmp	w19, w24
  432d88:	ccmp	w19, w20, #0x0, eq  // eq = none
  432d8c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  432d90:	b.ne	432f68 <ferror@plt+0x30238>  // b.any
  432d94:	cbz	x22, 432e80 <ferror@plt+0x30150>
  432d98:	str	w19, [sp, #72]
  432d9c:	str	w20, [sp, #76]
  432da0:	str	w24, [sp, #80]
  432da4:	str	x22, [sp, #88]
  432da8:	mov	w2, #0x1                   	// #1
  432dac:	add	x1, sp, #0x48
  432db0:	ldr	x0, [x21, #88]
  432db4:	bl	4539f0 <ferror@plt+0x50cc0>
  432db8:	mov	x19, x0
  432dbc:	ldr	x0, [x0]
  432dc0:	cbz	x0, 432ea4 <ferror@plt+0x30174>
  432dc4:	ldr	x1, [x19]
  432dc8:	ldr	x0, [x21, #104]
  432dcc:	sub	x0, x1, x0
  432dd0:	asr	x0, x0, #3
  432dd4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  432dd8:	movk	x1, #0xaaab
  432ddc:	mul	x0, x0, x1
  432de0:	orr	w0, w0, #0x80000000
  432de4:	ldp	x19, x20, [sp, #16]
  432de8:	ldp	x21, x22, [sp, #32]
  432dec:	ldp	x23, x24, [sp, #48]
  432df0:	ldp	x29, x30, [sp], #96
  432df4:	ret
  432df8:	and	x0, x19, #0x7fffffff
  432dfc:	lsl	w19, w1, #1
  432e00:	add	x19, x19, x0
  432e04:	lsl	x19, x19, #3
  432e08:	ldr	x0, [x21, #104]
  432e0c:	ldr	w19, [x0, x19]
  432e10:	b	432d3c <ferror@plt+0x3000c>
  432e14:	ldr	w0, [x21, #36]
  432e18:	mov	w1, #0x80000000            	// #-2147483648
  432e1c:	cbz	w0, 432e30 <ferror@plt+0x30100>
  432e20:	sub	w0, w0, #0x1
  432e24:	ldr	x1, [x21, #24]
  432e28:	sbfiz	x0, x0, #5, #32
  432e2c:	ldr	w1, [x1, x0]
  432e30:	cmp	w24, w20
  432e34:	csel	w0, w24, w20, cs  // cs = hs, nlast
  432e38:	cmp	w0, w19
  432e3c:	csel	w0, w0, w19, cs  // cs = hs, nlast
  432e40:	cmp	w0, w1
  432e44:	b.cs	432e70 <ferror@plt+0x30140>  // b.hs, b.nlast
  432e48:	mov	w1, w19
  432e4c:	mov	x0, x21
  432e50:	bl	432bf0 <ferror@plt+0x2fec0>
  432e54:	ldrb	w2, [x0, #7]
  432e58:	sub	w1, w24, w20
  432e5c:	lsr	w1, w1, w2
  432e60:	mov	w0, #0x1                   	// #1
  432e64:	lsl	w0, w0, w2
  432e68:	cmp	w0, w1
  432e6c:	b.hi	432e90 <ferror@plt+0x30160>  // b.pmore
  432e70:	cmp	w19, w20
  432e74:	ccmp	w19, w24, #0x0, eq  // eq = none
  432e78:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  432e7c:	b.ne	432f70 <ferror@plt+0x30240>  // b.any
  432e80:	ldr	w0, [x21, #128]
  432e84:	add	w0, w0, #0x1
  432e88:	str	w0, [x21, #128]
  432e8c:	b	432d98 <ferror@plt+0x30068>
  432e90:	orr	w0, w19, w1
  432e94:	ldr	w1, [x21, #124]
  432e98:	add	w1, w1, #0x1
  432e9c:	str	w1, [x21, #124]
  432ea0:	b	432de4 <ferror@plt+0x300b4>
  432ea4:	ldr	w0, [x21, #100]
  432ea8:	ldr	w1, [x21, #96]
  432eac:	cmp	w1, w0
  432eb0:	b.cc	432f0c <ferror@plt+0x301dc>  // b.lo, b.ul, b.last
  432eb4:	ldr	x20, [x21, #104]
  432eb8:	ldr	x2, [x21, #72]
  432ebc:	adrp	x1, 454000 <ferror@plt+0x512d0>
  432ec0:	add	x1, x1, #0xdb8
  432ec4:	cmp	x2, #0x0
  432ec8:	csel	x2, x1, x2, eq  // eq = none
  432ecc:	lsl	w1, w0, #1
  432ed0:	cmp	w0, #0x0
  432ed4:	mov	w0, #0x80                  	// #128
  432ed8:	csel	w1, w1, w0, ne  // ne = any
  432edc:	str	w1, [x21, #100]
  432ee0:	mov	w1, w1
  432ee4:	add	x1, x1, x1, lsl #1
  432ee8:	lsl	x1, x1, #3
  432eec:	mov	x0, x20
  432ef0:	blr	x2
  432ef4:	str	x0, [x21, #104]
  432ef8:	sub	x0, x0, x20
  432efc:	str	x0, [sp, #64]
  432f00:	ldr	w0, [x21, #100]
  432f04:	cmp	w0, #0x80
  432f08:	b.hi	432f50 <ferror@plt+0x30220>  // b.pmore
  432f0c:	ldr	w0, [x21, #96]
  432f10:	add	x0, x0, x0, lsl #1
  432f14:	ldr	x1, [x21, #104]
  432f18:	add	x0, x1, x0, lsl #3
  432f1c:	str	x0, [x19]
  432f20:	ldr	x1, [x21, #104]
  432f24:	ldr	w0, [x21, #96]
  432f28:	add	w2, w0, #0x1
  432f2c:	str	w2, [x21, #96]
  432f30:	ubfiz	x2, x0, #1, #32
  432f34:	add	x0, x2, w0, uxtw
  432f38:	add	x0, x1, x0, lsl #3
  432f3c:	ldp	x2, x3, [sp, #72]
  432f40:	stp	x2, x3, [x0]
  432f44:	ldr	x1, [sp, #88]
  432f48:	str	x1, [x0, #16]
  432f4c:	b	432dc4 <ferror@plt+0x30094>
  432f50:	add	x2, sp, #0x40
  432f54:	adrp	x1, 432000 <ferror@plt+0x2f2d0>
  432f58:	add	x1, x1, #0x60
  432f5c:	ldr	x0, [x21, #88]
  432f60:	bl	453b94 <ferror@plt+0x50e64>
  432f64:	b	432f0c <ferror@plt+0x301dc>
  432f68:	mov	w0, w19
  432f6c:	b	432de4 <ferror@plt+0x300b4>
  432f70:	mov	w0, w19
  432f74:	b	432de4 <ferror@plt+0x300b4>
  432f78:	stp	x29, x30, [sp, #-32]!
  432f7c:	mov	x29, sp
  432f80:	str	x19, [sp, #16]
  432f84:	mov	w19, w1
  432f88:	tbnz	w1, #31, 432fd8 <ferror@plt+0x302a8>
  432f8c:	cmp	w1, #0x1
  432f90:	b.ls	432fc0 <ferror@plt+0x30290>  // b.plast
  432f94:	ldr	w1, [x0, #36]
  432f98:	mov	w2, #0x80000000            	// #-2147483648
  432f9c:	cbz	w1, 432fb0 <ferror@plt+0x30280>
  432fa0:	sub	w1, w1, #0x1
  432fa4:	ldr	x2, [x0, #24]
  432fa8:	sbfiz	x1, x1, #5, #32
  432fac:	ldr	w2, [x2, x1]
  432fb0:	mov	w1, #0x50000000            	// #1342177280
  432fb4:	cmp	w19, w1
  432fb8:	ccmp	w19, w2, #0x2, ls  // ls = plast
  432fbc:	b.cc	433004 <ferror@plt+0x302d4>  // b.lo, b.ul, b.last
  432fc0:	mov	x0, #0x0                   	// #0
  432fc4:	bfxil	x0, x19, #0, #32
  432fc8:	bfi	x0, x19, #32, #32
  432fcc:	ldr	x19, [sp, #16]
  432fd0:	ldp	x29, x30, [sp], #32
  432fd4:	ret
  432fd8:	and	x1, x19, #0x7fffffff
  432fdc:	lsl	w19, w19, #1
  432fe0:	add	x19, x19, x1
  432fe4:	ldr	x0, [x0, #104]
  432fe8:	add	x19, x0, x19, lsl #3
  432fec:	ldr	w1, [x19, #4]
  432ff0:	mov	x0, #0x0                   	// #0
  432ff4:	bfxil	x0, x1, #0, #32
  432ff8:	ldr	w1, [x19, #8]
  432ffc:	bfi	x0, x1, #32, #32
  433000:	b	432fcc <ferror@plt+0x3029c>
  433004:	mov	w1, w19
  433008:	bl	432bf0 <ferror@plt+0x2fec0>
  43300c:	ldrb	w2, [x0, #7]
  433010:	mov	w0, #0x1                   	// #1
  433014:	lsl	w0, w0, w2
  433018:	sub	w0, w0, #0x1
  43301c:	and	w1, w0, w19
  433020:	bic	w19, w19, w0
  433024:	mov	x0, #0x0                   	// #0
  433028:	bfxil	x0, x19, #0, #32
  43302c:	lsl	w1, w1, w2
  433030:	add	w19, w1, w19
  433034:	bfi	x0, x19, #32, #32
  433038:	b	432fcc <ferror@plt+0x3029c>
  43303c:	tbnz	w1, #31, 433078 <ferror@plt+0x30348>
  433040:	stp	x29, x30, [sp, #-32]!
  433044:	mov	x29, sp
  433048:	str	x19, [sp, #16]
  43304c:	mov	w19, w1
  433050:	bl	432bf0 <ferror@plt+0x2fec0>
  433054:	cbz	x0, 433080 <ferror@plt+0x30350>
  433058:	ldrb	w1, [x0, #7]
  43305c:	mov	w0, #0xffffffff            	// #-1
  433060:	lsl	w0, w0, w1
  433064:	bics	wzr, w19, w0
  433068:	cset	w0, eq  // eq = none
  43306c:	ldr	x19, [sp, #16]
  433070:	ldp	x29, x30, [sp], #32
  433074:	ret
  433078:	mov	w0, #0x0                   	// #0
  43307c:	ret
  433080:	mov	w0, #0x1                   	// #1
  433084:	b	43306c <ferror@plt+0x3033c>
  433088:	stp	x29, x30, [sp, #-32]!
  43308c:	mov	x29, sp
  433090:	str	x19, [sp, #16]
  433094:	mov	w19, w1
  433098:	tbnz	w1, #31, 4330d4 <ferror@plt+0x303a4>
  43309c:	ldr	w1, [x0, #36]
  4330a0:	mov	w2, #0x80000000            	// #-2147483648
  4330a4:	cbz	w1, 4330b8 <ferror@plt+0x30388>
  4330a8:	sub	w1, w1, #0x1
  4330ac:	ldr	x2, [x0, #24]
  4330b0:	sbfiz	x1, x1, #5, #32
  4330b4:	ldr	w2, [x2, x1]
  4330b8:	cmp	w19, #0x1
  4330bc:	ccmp	w19, w2, #0x2, hi  // hi = pmore
  4330c0:	b.cc	4330f0 <ferror@plt+0x303c0>  // b.lo, b.ul, b.last
  4330c4:	mov	w0, w19
  4330c8:	ldr	x19, [sp, #16]
  4330cc:	ldp	x29, x30, [sp], #32
  4330d0:	ret
  4330d4:	and	x1, x19, #0x7fffffff
  4330d8:	lsl	w19, w19, #1
  4330dc:	add	x19, x19, x1
  4330e0:	lsl	x19, x19, #3
  4330e4:	ldr	x1, [x0, #104]
  4330e8:	ldr	w19, [x1, x19]
  4330ec:	b	43309c <ferror@plt+0x3036c>
  4330f0:	mov	w1, w19
  4330f4:	bl	432bf0 <ferror@plt+0x2fec0>
  4330f8:	ldrb	w1, [x0, #7]
  4330fc:	mov	w0, #0xffffffff            	// #-1
  433100:	lsl	w0, w0, w1
  433104:	and	w19, w19, w0
  433108:	b	4330c4 <ferror@plt+0x30394>
  43310c:	stp	x29, x30, [sp, #-48]!
  433110:	mov	x29, sp
  433114:	stp	x19, x20, [sp, #16]
  433118:	stp	x21, x22, [sp, #32]
  43311c:	mov	x21, x0
  433120:	mov	w20, w1
  433124:	mov	x22, x2
  433128:	tbnz	w1, #31, 433150 <ferror@plt+0x30420>
  43312c:	mov	w1, w20
  433130:	mov	x0, x21
  433134:	bl	432bf0 <ferror@plt+0x2fec0>
  433138:	mov	x19, x0
  43313c:	bl	432b48 <ferror@plt+0x2fe18>
  433140:	and	w3, w0, #0xff
  433144:	cbz	w3, 43316c <ferror@plt+0x3043c>
  433148:	ldr	w20, [x19, #24]
  43314c:	b	43312c <ferror@plt+0x303fc>
  433150:	and	x0, x20, #0x7fffffff
  433154:	lsl	w1, w1, #1
  433158:	add	x1, x1, x0
  43315c:	lsl	x1, x1, #3
  433160:	ldr	x0, [x21, #104]
  433164:	ldr	w20, [x0, x1]
  433168:	b	43312c <ferror@plt+0x303fc>
  43316c:	cbz	x22, 433174 <ferror@plt+0x30444>
  433170:	str	x19, [x22]
  433174:	mov	w0, w20
  433178:	ldp	x19, x20, [sp, #16]
  43317c:	ldp	x21, x22, [sp, #32]
  433180:	ldp	x29, x30, [sp], #48
  433184:	ret
  433188:	stp	x29, x30, [sp, #-32]!
  43318c:	mov	x29, sp
  433190:	mov	x3, x0
  433194:	str	xzr, [sp, #24]
  433198:	tbnz	w1, #31, 4331d8 <ferror@plt+0x304a8>
  43319c:	mov	w0, #0x0                   	// #0
  4331a0:	cmp	w1, #0x1
  4331a4:	b.ls	4331d0 <ferror@plt+0x304a0>  // b.plast
  4331a8:	add	x2, sp, #0x18
  4331ac:	mov	x0, x3
  4331b0:	bl	43310c <ferror@plt+0x303dc>
  4331b4:	ldr	x1, [sp, #24]
  4331b8:	ldr	w2, [x1]
  4331bc:	sub	w0, w0, w2
  4331c0:	ldrb	w2, [x1, #6]
  4331c4:	lsr	w0, w0, w2
  4331c8:	ldr	w1, [x1, #16]
  4331cc:	add	w0, w0, w1
  4331d0:	ldp	x29, x30, [sp], #32
  4331d4:	ret
  4331d8:	and	x0, x1, #0x7fffffff
  4331dc:	lsl	w1, w1, #1
  4331e0:	add	x1, x1, x0
  4331e4:	lsl	x1, x1, #3
  4331e8:	ldr	x0, [x3, #104]
  4331ec:	ldr	w1, [x0, x1]
  4331f0:	b	43319c <ferror@plt+0x3046c>
  4331f4:	stp	x29, x30, [sp, #-32]!
  4331f8:	mov	x29, sp
  4331fc:	str	xzr, [sp, #24]
  433200:	tbnz	w1, #31, 43322c <ferror@plt+0x304fc>
  433204:	mov	x2, #0x0                   	// #0
  433208:	cmp	w1, #0x1
  43320c:	b.ls	433220 <ferror@plt+0x304f0>  // b.plast
  433210:	add	x2, sp, #0x18
  433214:	bl	43310c <ferror@plt+0x303dc>
  433218:	ldr	x0, [sp, #24]
  43321c:	ldr	x2, [x0, #8]
  433220:	mov	x0, x2
  433224:	ldp	x29, x30, [sp], #32
  433228:	ret
  43322c:	and	x2, x1, #0x7fffffff
  433230:	lsl	w1, w1, #1
  433234:	add	x1, x1, x2
  433238:	lsl	x1, x1, #3
  43323c:	ldr	x2, [x0, #104]
  433240:	ldr	w1, [x2, x1]
  433244:	b	433204 <ferror@plt+0x304d4>
  433248:	stp	x29, x30, [sp, #-48]!
  43324c:	mov	x29, sp
  433250:	stp	x19, x20, [sp, #16]
  433254:	str	x21, [sp, #32]
  433258:	mov	x21, x0
  43325c:	mov	w19, w1
  433260:	tbnz	w1, #31, 433274 <ferror@plt+0x30544>
  433264:	mov	w0, #0x0                   	// #0
  433268:	cmp	w19, #0x1
  43326c:	b.hi	43329c <ferror@plt+0x3056c>  // b.pmore
  433270:	b	4332e0 <ferror@plt+0x305b0>
  433274:	and	x0, x19, #0x7fffffff
  433278:	lsl	w1, w1, #1
  43327c:	add	x1, x1, x0
  433280:	lsl	x1, x1, #3
  433284:	ldr	x0, [x21, #104]
  433288:	ldr	w19, [x0, x1]
  43328c:	b	433264 <ferror@plt+0x30534>
  433290:	ldrb	w0, [x20, #5]
  433294:	b	4332e0 <ferror@plt+0x305b0>
  433298:	ldr	w19, [x20, #24]
  43329c:	mov	w1, w19
  4332a0:	mov	x0, x21
  4332a4:	bl	432bf0 <ferror@plt+0x2fec0>
  4332a8:	mov	x20, x0
  4332ac:	cbz	x0, 4332dc <ferror@plt+0x305ac>
  4332b0:	bl	432b48 <ferror@plt+0x2fe18>
  4332b4:	and	w0, w0, #0xff
  4332b8:	cbz	w0, 433290 <ferror@plt+0x30560>
  4332bc:	mov	w2, w19
  4332c0:	mov	x1, x20
  4332c4:	mov	x0, x21
  4332c8:	bl	432b68 <ferror@plt+0x2fe38>
  4332cc:	mov	w19, w0
  4332d0:	cmp	w0, #0x1
  4332d4:	b.hi	43329c <ferror@plt+0x3056c>  // b.pmore
  4332d8:	b	433298 <ferror@plt+0x30568>
  4332dc:	mov	w0, #0x0                   	// #0
  4332e0:	ldp	x19, x20, [sp, #16]
  4332e4:	ldr	x21, [sp, #32]
  4332e8:	ldp	x29, x30, [sp], #48
  4332ec:	ret
  4332f0:	stp	x29, x30, [sp, #-64]!
  4332f4:	mov	x29, sp
  4332f8:	stp	x19, x20, [sp, #16]
  4332fc:	stp	x21, x22, [sp, #32]
  433300:	mov	x21, x0
  433304:	mov	w19, w1
  433308:	mov	x22, x3
  43330c:	mov	w0, w1
  433310:	tbnz	w1, #31, 433350 <ferror@plt+0x30620>
  433314:	cmp	w0, #0x1
  433318:	b.ls	43336c <ferror@plt+0x3063c>  // b.plast
  43331c:	mov	w20, #0x6fffffff            	// #1879048191
  433320:	cmp	w2, #0x1
  433324:	b.eq	4333a8 <ferror@plt+0x30678>  // b.none
  433328:	cmp	w2, #0x2
  43332c:	b.eq	43337c <ferror@plt+0x3064c>  // b.none
  433330:	cbz	w2, 433388 <ferror@plt+0x30658>
  433334:	str	x23, [sp, #48]
  433338:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43333c:	add	x2, x2, #0x510
  433340:	mov	w1, #0x621                 	// #1569
  433344:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433348:	add	x0, x0, #0x530
  43334c:	bl	4102b4 <ferror@plt+0xd584>
  433350:	and	x3, x19, #0x7fffffff
  433354:	ldr	x1, [x21, #104]
  433358:	lsl	w0, w19, #1
  43335c:	add	x0, x0, x3
  433360:	lsl	x0, x0, #3
  433364:	ldr	w0, [x1, x0]
  433368:	b	433314 <ferror@plt+0x305e4>
  43336c:	mov	w0, w19
  433370:	cbz	x22, 433398 <ferror@plt+0x30668>
  433374:	str	xzr, [x22]
  433378:	b	433398 <ferror@plt+0x30668>
  43337c:	str	x23, [sp, #48]
  433380:	mov	w23, #0x6fffffff            	// #1879048191
  433384:	b	43342c <ferror@plt+0x306fc>
  433388:	mov	x2, x22
  43338c:	mov	w1, w19
  433390:	mov	x0, x21
  433394:	bl	43310c <ferror@plt+0x303dc>
  433398:	ldp	x19, x20, [sp, #16]
  43339c:	ldp	x21, x22, [sp, #32]
  4333a0:	ldp	x29, x30, [sp], #64
  4333a4:	ret
  4333a8:	mov	w1, w19
  4333ac:	mov	x0, x21
  4333b0:	bl	432bf0 <ferror@plt+0x2fec0>
  4333b4:	mov	x1, x0
  4333b8:	cbz	x0, 4333dc <ferror@plt+0x306ac>
  4333bc:	ldr	w0, [x0]
  4333c0:	cmp	w0, w20
  4333c4:	b.ls	4333dc <ferror@plt+0x306ac>  // b.plast
  4333c8:	mov	w2, w19
  4333cc:	mov	x0, x21
  4333d0:	bl	432b68 <ferror@plt+0x2fe38>
  4333d4:	mov	w19, w0
  4333d8:	b	4333a8 <ferror@plt+0x30678>
  4333dc:	mov	w0, w19
  4333e0:	cbz	x22, 433398 <ferror@plt+0x30668>
  4333e4:	str	x1, [x22]
  4333e8:	b	433398 <ferror@plt+0x30668>
  4333ec:	mov	w1, w19
  4333f0:	mov	x0, x21
  4333f4:	bl	432350 <ferror@plt+0x2f620>
  4333f8:	mov	w20, w0
  4333fc:	mov	w1, w20
  433400:	mov	x0, x21
  433404:	bl	432bf0 <ferror@plt+0x2fec0>
  433408:	cbz	x0, 433438 <ferror@plt+0x30708>
  43340c:	ldr	w1, [x0]
  433410:	cmp	w1, w23
  433414:	b.ls	433438 <ferror@plt+0x30708>  // b.plast
  433418:	sub	w20, w20, w1
  43341c:	lsl	w20, w20, #1
  433420:	add	w20, w20, #0x1
  433424:	ldr	x0, [x0, #16]
  433428:	ldr	w19, [x0, x20, lsl #2]
  43342c:	mov	w20, w19
  433430:	tbz	w19, #31, 4333fc <ferror@plt+0x306cc>
  433434:	b	4333ec <ferror@plt+0x306bc>
  433438:	cbz	x22, 43344c <ferror@plt+0x3071c>
  43343c:	str	x0, [x22]
  433440:	mov	w0, w19
  433444:	ldr	x23, [sp, #48]
  433448:	b	433398 <ferror@plt+0x30668>
  43344c:	mov	w0, w19
  433450:	ldr	x23, [sp, #48]
  433454:	b	433398 <ferror@plt+0x30668>
  433458:	stp	x29, x30, [sp, #-64]!
  43345c:	mov	x29, sp
  433460:	stp	x19, x20, [sp, #16]
  433464:	str	x21, [sp, #32]
  433468:	mov	x21, x0
  43346c:	mov	w19, w1
  433470:	mov	w20, w2
  433474:	str	xzr, [sp, #56]
  433478:	tbnz	w1, #31, 4334b0 <ferror@plt+0x30780>
  43347c:	mov	w1, w19
  433480:	mov	x0, x21
  433484:	bl	432bb8 <ferror@plt+0x2fe88>
  433488:	and	w0, w0, #0xff
  43348c:	cbnz	w0, 43349c <ferror@plt+0x3076c>
  433490:	cmp	w20, #0x0
  433494:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  433498:	b.hi	4334cc <ferror@plt+0x3079c>  // b.pmore
  43349c:	mov	w0, w19
  4334a0:	ldp	x19, x20, [sp, #16]
  4334a4:	ldr	x21, [sp, #32]
  4334a8:	ldp	x29, x30, [sp], #64
  4334ac:	ret
  4334b0:	and	x0, x19, #0x7fffffff
  4334b4:	lsl	w19, w1, #1
  4334b8:	add	x19, x19, x0
  4334bc:	lsl	x19, x19, #3
  4334c0:	ldr	x0, [x21, #104]
  4334c4:	ldr	w19, [x0, x19]
  4334c8:	b	43347c <ferror@plt+0x3074c>
  4334cc:	add	x3, sp, #0x38
  4334d0:	mov	w2, #0x1                   	// #1
  4334d4:	mov	w1, w19
  4334d8:	mov	x0, x21
  4334dc:	bl	4332f0 <ferror@plt+0x305c0>
  4334e0:	mov	w19, w0
  4334e4:	ldr	x0, [sp, #56]
  4334e8:	ldr	w3, [x0]
  4334ec:	ldrb	w7, [x0, #7]
  4334f0:	lsl	w1, w20, w7
  4334f4:	add	w1, w1, w19
  4334f8:	cmp	w1, w3
  4334fc:	b.ls	43349c <ferror@plt+0x3076c>  // b.plast
  433500:	sub	w6, w19, w3
  433504:	ldrb	w5, [x0, #6]
  433508:	lsr	w1, w6, w5
  43350c:	ldr	w2, [x0, #16]
  433510:	add	w2, w1, w2
  433514:	ldr	w1, [x21, #12]
  433518:	sub	w1, w1, #0x1
  43351c:	sbfiz	x0, x1, #1, #32
  433520:	add	x1, x0, w1, sxtw
  433524:	ldr	x0, [x21]
  433528:	add	x1, x0, x1, lsl #3
  43352c:	ldr	x3, [sp, #56]
  433530:	cmp	x3, x1
  433534:	b.eq	43356c <ferror@plt+0x3083c>  // b.none
  433538:	ldrb	w4, [x3, #7]
  43353c:	lsl	w4, w20, w4
  433540:	add	w4, w4, w19
  433544:	ldr	w0, [x3, #24]
  433548:	cmp	w4, w0
  43354c:	b.cc	433568 <ferror@plt+0x30838>  // b.lo, b.ul, b.last
  433550:	add	x3, x3, #0x18
  433554:	str	x3, [sp, #56]
  433558:	ldr	w0, [x3, #16]
  43355c:	cmp	w2, w0
  433560:	b.cs	43352c <ferror@plt+0x307fc>  // b.hs, b.nlast
  433564:	b	43349c <ferror@plt+0x3076c>
  433568:	mov	x1, x3
  43356c:	mov	w0, #0x1                   	// #1
  433570:	lsl	w3, w0, w5
  433574:	sub	w3, w3, #0x1
  433578:	and	w3, w3, w6
  43357c:	lsr	w3, w3, w7
  433580:	add	w3, w3, w20
  433584:	ldrb	w4, [x1, #6]
  433588:	ldrb	w5, [x1, #7]
  43358c:	sub	w4, w4, w5
  433590:	lsl	w0, w0, w4
  433594:	cmp	w0, w3
  433598:	b.ls	43349c <ferror@plt+0x3076c>  // b.plast
  43359c:	mov	x0, x21
  4335a0:	bl	432ac8 <ferror@plt+0x2fd98>
  4335a4:	mov	w20, w0
  4335a8:	ldr	w0, [x21, #56]
  4335ac:	cmp	w0, w20
  4335b0:	b.cc	43349c <ferror@plt+0x3076c>  // b.lo, b.ul, b.last
  4335b4:	mov	w1, w20
  4335b8:	mov	x0, x21
  4335bc:	bl	432bf0 <ferror@plt+0x2fec0>
  4335c0:	ldr	x1, [sp, #56]
  4335c4:	cmp	x1, x0
  4335c8:	csel	w19, w19, w20, ne  // ne = any
  4335cc:	b	43349c <ferror@plt+0x3076c>
  4335d0:	stp	x29, x30, [sp, #-64]!
  4335d4:	mov	x29, sp
  4335d8:	stp	x19, x20, [sp, #16]
  4335dc:	stp	x21, x22, [sp, #32]
  4335e0:	stp	x23, x24, [sp, #48]
  4335e4:	mov	x20, x0
  4335e8:	mov	w21, w1
  4335ec:	mov	w22, w2
  4335f0:	mov	w24, w1
  4335f4:	tbnz	w1, #31, 433650 <ferror@plt+0x30920>
  4335f8:	mov	w19, w22
  4335fc:	tbnz	w22, #31, 43365c <ferror@plt+0x3092c>
  433600:	cmp	w24, w19
  433604:	b.eq	433790 <ferror@plt+0x30a60>  // b.none
  433608:	mov	w1, w24
  43360c:	mov	x0, x20
  433610:	bl	432bb8 <ferror@plt+0x2fe88>
  433614:	ands	w23, w0, #0xff
  433618:	b.ne	433670 <ferror@plt+0x30940>  // b.any
  43361c:	mov	w1, w19
  433620:	mov	x0, x20
  433624:	bl	432bb8 <ferror@plt+0x2fe88>
  433628:	and	w1, w0, #0xff
  43362c:	cbnz	w1, 43368c <ferror@plt+0x3095c>
  433630:	tbnz	w24, #31, 433768 <ferror@plt+0x30a38>
  433634:	tbnz	w19, #31, 43377c <ferror@plt+0x30a4c>
  433638:	sub	w0, w19, w24
  43363c:	ldp	x19, x20, [sp, #16]
  433640:	ldp	x21, x22, [sp, #32]
  433644:	ldp	x23, x24, [sp, #48]
  433648:	ldp	x29, x30, [sp], #64
  43364c:	ret
  433650:	bl	432350 <ferror@plt+0x2f620>
  433654:	mov	w24, w0
  433658:	b	4335f8 <ferror@plt+0x308c8>
  43365c:	mov	w1, w22
  433660:	mov	x0, x20
  433664:	bl	432350 <ferror@plt+0x2f620>
  433668:	mov	w19, w0
  43366c:	b	433600 <ferror@plt+0x308d0>
  433670:	mov	x3, #0x0                   	// #0
  433674:	mov	w2, #0x0                   	// #0
  433678:	mov	w1, w24
  43367c:	mov	x0, x20
  433680:	bl	4332f0 <ferror@plt+0x305c0>
  433684:	mov	w24, w0
  433688:	b	43361c <ferror@plt+0x308ec>
  43368c:	mov	x3, #0x0                   	// #0
  433690:	mov	w2, #0x0                   	// #0
  433694:	mov	w1, w19
  433698:	mov	x0, x20
  43369c:	bl	4332f0 <ferror@plt+0x305c0>
  4336a0:	mov	w19, w0
  4336a4:	cmp	w0, w24
  4336a8:	b.ne	433630 <ferror@plt+0x30900>  // b.any
  4336ac:	cbz	w23, 433760 <ferror@plt+0x30a30>
  4336b0:	mov	w1, w21
  4336b4:	mov	x0, x20
  4336b8:	bl	432bf0 <ferror@plt+0x2fec0>
  4336bc:	mov	x19, x0
  4336c0:	mov	w1, w22
  4336c4:	mov	x0, x20
  4336c8:	bl	432bf0 <ferror@plt+0x2fec0>
  4336cc:	mov	x23, x0
  4336d0:	b	433708 <ferror@plt+0x309d8>
  4336d4:	cmp	x19, x23
  4336d8:	b.eq	433754 <ferror@plt+0x30a24>  // b.none
  4336dc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4336e0:	add	x2, x2, #0x548
  4336e4:	mov	w1, #0x549                 	// #1353
  4336e8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4336ec:	add	x0, x0, #0x530
  4336f0:	bl	4102b4 <ferror@plt+0xd584>
  4336f4:	ldr	w21, [x19, #24]
  4336f8:	mov	w1, w21
  4336fc:	mov	x0, x20
  433700:	bl	432bf0 <ferror@plt+0x2fec0>
  433704:	mov	x19, x0
  433708:	mov	x0, x19
  43370c:	bl	432b48 <ferror@plt+0x2fe18>
  433710:	and	w0, w0, #0xff
  433714:	cbz	w0, 4336d4 <ferror@plt+0x309a4>
  433718:	mov	x0, x23
  43371c:	bl	432b48 <ferror@plt+0x2fe18>
  433720:	ands	w0, w0, #0xff
  433724:	ccmp	x19, x23, #0x4, ne  // ne = any
  433728:	b.eq	4336d4 <ferror@plt+0x309a4>  // b.none
  43372c:	ldr	w1, [x19]
  433730:	ldr	w0, [x23]
  433734:	cmp	w1, w0
  433738:	b.cc	4336f4 <ferror@plt+0x309c4>  // b.lo, b.ul, b.last
  43373c:	ldr	w22, [x23, #24]
  433740:	mov	w1, w22
  433744:	mov	x0, x20
  433748:	bl	432bf0 <ferror@plt+0x2fec0>
  43374c:	mov	x23, x0
  433750:	b	433708 <ferror@plt+0x309d8>
  433754:	sub	w0, w22, w21
  433758:	cbnz	x19, 43363c <ferror@plt+0x3090c>
  43375c:	b	4336dc <ferror@plt+0x309ac>
  433760:	mov	w19, w24
  433764:	b	433630 <ferror@plt+0x30900>
  433768:	mov	w1, w24
  43376c:	mov	x0, x20
  433770:	bl	432350 <ferror@plt+0x2f620>
  433774:	mov	w24, w0
  433778:	b	433634 <ferror@plt+0x30904>
  43377c:	mov	w1, w19
  433780:	mov	x0, x20
  433784:	bl	432350 <ferror@plt+0x2f620>
  433788:	mov	w19, w0
  43378c:	b	433638 <ferror@plt+0x30908>
  433790:	mov	w0, #0x0                   	// #0
  433794:	b	43363c <ferror@plt+0x3090c>
  433798:	stp	x29, x30, [sp, #-48]!
  43379c:	mov	x29, sp
  4337a0:	stp	x19, x20, [sp, #16]
  4337a4:	stp	x21, x22, [sp, #32]
  4337a8:	mov	x21, x0
  4337ac:	mov	w19, w1
  4337b0:	tbnz	w1, #31, 433834 <ferror@plt+0x30b04>
  4337b4:	mov	w1, w19
  4337b8:	mov	x0, x21
  4337bc:	bl	432bb8 <ferror@plt+0x2fe88>
  4337c0:	ands	w0, w0, #0xff
  4337c4:	b.eq	433824 <ferror@plt+0x30af4>  // b.none
  4337c8:	mov	w1, w19
  4337cc:	mov	x0, x21
  4337d0:	bl	432bf0 <ferror@plt+0x2fec0>
  4337d4:	mov	x20, x0
  4337d8:	mov	w22, w19
  4337dc:	mov	w2, w19
  4337e0:	mov	x1, x0
  4337e4:	mov	x0, x21
  4337e8:	bl	432b68 <ferror@plt+0x2fe38>
  4337ec:	mov	w19, w0
  4337f0:	mov	w1, w0
  4337f4:	mov	x0, x21
  4337f8:	bl	432bb8 <ferror@plt+0x2fe88>
  4337fc:	and	w0, w0, #0xff
  433800:	cbnz	w0, 4337c8 <ferror@plt+0x30a98>
  433804:	ldr	w0, [x20]
  433808:	sub	w0, w22, w0
  43380c:	lsl	w0, w0, #1
  433810:	add	w0, w0, #0x1
  433814:	ldr	x1, [x20, #16]
  433818:	ldr	w0, [x1, x0, lsl #2]
  43381c:	cmp	w0, w19
  433820:	cset	w0, eq  // eq = none
  433824:	ldp	x19, x20, [sp, #16]
  433828:	ldp	x21, x22, [sp, #32]
  43382c:	ldp	x29, x30, [sp], #48
  433830:	ret
  433834:	bl	432350 <ferror@plt+0x2f620>
  433838:	mov	w19, w0
  43383c:	b	4337b4 <ferror@plt+0x30a84>
  433840:	stp	x29, x30, [sp, #-64]!
  433844:	mov	x29, sp
  433848:	stp	x19, x20, [sp, #16]
  43384c:	stp	x21, x22, [sp, #32]
  433850:	str	x23, [sp, #48]
  433854:	mov	x19, x0
  433858:	mov	x21, x2
  43385c:	ldr	x23, [x2]
  433860:	tbnz	w1, #31, 4338b0 <ferror@plt+0x30b80>
  433864:	mov	w2, w1
  433868:	mov	x1, x23
  43386c:	mov	x0, x19
  433870:	bl	432b68 <ferror@plt+0x2fe38>
  433874:	mov	w20, w0
  433878:	mov	w1, w0
  43387c:	mov	x0, x19
  433880:	bl	432bf0 <ferror@plt+0x2fec0>
  433884:	mov	x22, x0
  433888:	bl	432b48 <ferror@plt+0x2fe18>
  43388c:	and	w0, w0, #0xff
  433890:	cbz	w0, 4338cc <ferror@plt+0x30b9c>
  433894:	str	x22, [x21]
  433898:	mov	w0, w20
  43389c:	ldp	x19, x20, [sp, #16]
  4338a0:	ldp	x21, x22, [sp, #32]
  4338a4:	ldr	x23, [sp, #48]
  4338a8:	ldp	x29, x30, [sp], #64
  4338ac:	ret
  4338b0:	and	x0, x1, #0x7fffffff
  4338b4:	lsl	w1, w1, #1
  4338b8:	add	x1, x1, x0
  4338bc:	lsl	x1, x1, #3
  4338c0:	ldr	x0, [x19, #104]
  4338c4:	ldr	w1, [x0, x1]
  4338c8:	b	433864 <ferror@plt+0x30b34>
  4338cc:	ldr	w20, [x23, #24]
  4338d0:	mov	w1, w20
  4338d4:	mov	x0, x19
  4338d8:	bl	432bf0 <ferror@plt+0x2fec0>
  4338dc:	mov	x22, x0
  4338e0:	b	433894 <ferror@plt+0x30b64>
  4338e4:	stp	x29, x30, [sp, #-80]!
  4338e8:	mov	x29, sp
  4338ec:	stp	x19, x20, [sp, #16]
  4338f0:	stp	x21, x22, [sp, #32]
  4338f4:	stp	x23, x24, [sp, #48]
  4338f8:	mov	x22, x0
  4338fc:	mov	w19, w1
  433900:	mov	x23, x2
  433904:	str	xzr, [sp, #72]
  433908:	str	xzr, [sp, #64]
  43390c:	tbnz	w1, #31, 433944 <ferror@plt+0x30c14>
  433910:	mov	w1, w19
  433914:	mov	x0, x22
  433918:	bl	432bf0 <ferror@plt+0x2fec0>
  43391c:	str	x0, [sp, #72]
  433920:	bl	432b48 <ferror@plt+0x2fe18>
  433924:	and	w0, w0, #0xff
  433928:	cbnz	w0, 433960 <ferror@plt+0x30c30>
  43392c:	mov	w0, w19
  433930:	ldp	x19, x20, [sp, #16]
  433934:	ldp	x21, x22, [sp, #32]
  433938:	ldp	x23, x24, [sp, #48]
  43393c:	ldp	x29, x30, [sp], #80
  433940:	ret
  433944:	and	x1, x19, #0x7fffffff
  433948:	lsl	w0, w19, #1
  43394c:	add	x0, x0, x1
  433950:	lsl	x0, x0, #3
  433954:	ldr	x1, [x22, #104]
  433958:	ldr	w19, [x1, x0]
  43395c:	b	433910 <ferror@plt+0x30be0>
  433960:	add	x3, sp, #0x40
  433964:	mov	w2, #0x1                   	// #1
  433968:	mov	w1, w19
  43396c:	mov	x0, x22
  433970:	bl	4332f0 <ferror@plt+0x305c0>
  433974:	mov	w20, w0
  433978:	cmp	w0, #0x1
  43397c:	b.ls	43398c <ferror@plt+0x30c5c>  // b.plast
  433980:	ldr	x0, [sp, #64]
  433984:	ldrb	w0, [x0, #5]
  433988:	cbz	w0, 43392c <ferror@plt+0x30bfc>
  43398c:	mov	w24, #0x1                   	// #1
  433990:	b	4339c0 <ferror@plt+0x30c90>
  433994:	add	x2, sp, #0x48
  433998:	mov	w1, w19
  43399c:	mov	x0, x22
  4339a0:	bl	433840 <ferror@plt+0x30b10>
  4339a4:	mov	w19, w0
  4339a8:	add	x3, sp, #0x40
  4339ac:	mov	w2, w24
  4339b0:	mov	w1, w0
  4339b4:	mov	x0, x22
  4339b8:	bl	4332f0 <ferror@plt+0x305c0>
  4339bc:	mov	w20, w0
  4339c0:	ldr	x21, [sp, #72]
  4339c4:	mov	x0, x21
  4339c8:	bl	432b48 <ferror@plt+0x2fe18>
  4339cc:	and	w0, w0, #0xff
  4339d0:	cbz	w0, 4339e8 <ferror@plt+0x30cb8>
  4339d4:	cmp	w20, #0x1
  4339d8:	b.ls	433994 <ferror@plt+0x30c64>  // b.plast
  4339dc:	ldr	x0, [sp, #64]
  4339e0:	ldrb	w0, [x0, #5]
  4339e4:	cbnz	w0, 433994 <ferror@plt+0x30c64>
  4339e8:	cbz	x23, 43392c <ferror@plt+0x30bfc>
  4339ec:	str	x21, [x23]
  4339f0:	b	43392c <ferror@plt+0x30bfc>
  4339f4:	stp	x29, x30, [sp, #-48]!
  4339f8:	mov	x29, sp
  4339fc:	stp	x19, x20, [sp, #16]
  433a00:	str	x21, [sp, #32]
  433a04:	mov	x20, x8
  433a08:	mov	x21, x1
  433a0c:	mov	w19, w2
  433a10:	stp	xzr, xzr, [x8]
  433a14:	stp	xzr, xzr, [x8, #16]
  433a18:	tbnz	w2, #31, 433a98 <ferror@plt+0x30d68>
  433a1c:	cmp	w19, #0x1
  433a20:	b.ls	433a88 <ferror@plt+0x30d58>  // b.plast
  433a24:	cbz	x21, 433ac0 <ferror@plt+0x30d90>
  433a28:	mov	w1, w19
  433a2c:	bl	432bb8 <ferror@plt+0x2fe88>
  433a30:	and	w0, w0, #0xff
  433a34:	cbnz	w0, 433ad8 <ferror@plt+0x30da8>
  433a38:	ldr	x0, [x21, #8]
  433a3c:	str	x0, [x20]
  433a40:	ldr	w2, [x21]
  433a44:	sub	w19, w19, w2
  433a48:	ldrb	w1, [x21, #6]
  433a4c:	lsr	w0, w19, w1
  433a50:	ldr	w2, [x21, #16]
  433a54:	add	w0, w0, w2
  433a58:	str	w0, [x20, #8]
  433a5c:	mov	w2, #0x1                   	// #1
  433a60:	lsl	w2, w2, w1
  433a64:	sub	w2, w2, #0x1
  433a68:	and	w19, w2, w19
  433a6c:	ldrb	w0, [x21, #7]
  433a70:	lsr	w19, w19, w0
  433a74:	str	w19, [x20, #12]
  433a78:	ldrb	w0, [x21, #5]
  433a7c:	cmp	w0, #0x0
  433a80:	cset	w0, ne  // ne = any
  433a84:	strb	w0, [x20, #24]
  433a88:	ldp	x19, x20, [sp, #16]
  433a8c:	ldr	x21, [sp, #32]
  433a90:	ldp	x29, x30, [sp], #48
  433a94:	ret
  433a98:	and	x1, x19, #0x7fffffff
  433a9c:	lsl	w19, w2, #1
  433aa0:	add	x19, x19, x1
  433aa4:	lsl	x19, x19, #3
  433aa8:	ldr	x1, [x0, #104]
  433aac:	add	x2, x1, x19
  433ab0:	ldr	x2, [x2, #16]
  433ab4:	str	x2, [x8, #16]
  433ab8:	ldr	w19, [x1, x19]
  433abc:	b	433a1c <ferror@plt+0x30cec>
  433ac0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433ac4:	add	x2, x2, #0x568
  433ac8:	mov	w1, #0x6bd                 	// #1725
  433acc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433ad0:	add	x0, x0, #0x530
  433ad4:	bl	4102b4 <ferror@plt+0xd584>
  433ad8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433adc:	add	x2, x2, #0x568
  433ae0:	mov	w1, #0x6c5                 	// #1733
  433ae4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433ae8:	add	x0, x0, #0x530
  433aec:	bl	4102b4 <ferror@plt+0xd584>
  433af0:	stp	x29, x30, [sp, #-96]!
  433af4:	mov	x29, sp
  433af8:	stp	x19, x20, [sp, #16]
  433afc:	stp	x21, x22, [sp, #32]
  433b00:	mov	x19, x0
  433b04:	mov	x21, x1
  433b08:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433b0c:	add	x0, x0, #0x700
  433b10:	ldp	x4, x5, [x0]
  433b14:	stp	x4, x5, [sp, #56]
  433b18:	ldp	x4, x5, [x0, #16]
  433b1c:	stp	x4, x5, [sp, #72]
  433b20:	ldr	x0, [x0, #32]
  433b24:	str	x0, [sp, #88]
  433b28:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  433b2c:	ldr	x0, [x0, #1424]
  433b30:	cmp	x19, #0x0
  433b34:	csel	x19, x0, x19, eq  // eq = none
  433b38:	ands	w3, w3, #0xff
  433b3c:	b.ne	433c10 <ferror@plt+0x30ee0>  // b.any
  433b40:	sbfiz	x0, x2, #1, #32
  433b44:	add	x0, x0, w2, sxtw
  433b48:	lsl	x0, x0, #3
  433b4c:	ldr	x4, [x1]
  433b50:	add	x20, x4, x0
  433b54:	ldrb	w1, [x20, #4]
  433b58:	ldr	w4, [x4, x0]
  433b5c:	cmp	w1, #0x4
  433b60:	b.ls	433c24 <ferror@plt+0x30ef4>  // b.plast
  433b64:	adrp	x5, 470000 <_obstack_memory_used@@Base+0x1bc60>
  433b68:	add	x5, x5, #0x228
  433b6c:	ldrb	w1, [x20, #5]
  433b70:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433b74:	add	x0, x0, #0x590
  433b78:	adrp	x6, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433b7c:	add	x6, x6, #0x588
  433b80:	cmp	w1, #0x0
  433b84:	csel	x6, x6, x0, ne  // ne = any
  433b88:	mov	x3, x20
  433b8c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433b90:	add	x1, x1, #0x5b0
  433b94:	mov	x0, x19
  433b98:	bl	402ce0 <fprintf@plt>
  433b9c:	mov	x1, x20
  433ba0:	mov	x0, x21
  433ba4:	bl	4323ec <ferror@plt+0x2f6bc>
  433ba8:	mov	x22, x0
  433bac:	ldr	w3, [x20, #16]
  433bb0:	ldr	x2, [x20, #8]
  433bb4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433bb8:	add	x1, x1, #0x5f8
  433bbc:	mov	x0, x19
  433bc0:	bl	402ce0 <fprintf@plt>
  433bc4:	cbz	x22, 433c70 <ferror@plt+0x30f40>
  433bc8:	ldr	x2, [x21]
  433bcc:	sub	x2, x22, x2
  433bd0:	asr	x2, x2, #3
  433bd4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  433bd8:	movk	x0, #0xaaab
  433bdc:	mul	w2, w2, w0
  433be0:	ldr	x3, [x22, #8]
  433be4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433be8:	add	x1, x1, #0x598
  433bec:	mov	x0, x19
  433bf0:	bl	402ce0 <fprintf@plt>
  433bf4:	mov	x1, x19
  433bf8:	mov	w0, #0xa                   	// #10
  433bfc:	bl	402750 <fputc@plt>
  433c00:	ldp	x19, x20, [sp, #16]
  433c04:	ldp	x21, x22, [sp, #32]
  433c08:	ldp	x29, x30, [sp], #96
  433c0c:	ret
  433c10:	sbfiz	x0, x2, #5, #32
  433c14:	ldr	x1, [x1, #24]
  433c18:	add	x20, x1, x0
  433c1c:	ldr	w4, [x1, x0]
  433c20:	mov	w1, #0x4                   	// #4
  433c24:	add	x0, sp, #0x60
  433c28:	add	x1, x0, w1, uxtb #3
  433c2c:	ldur	x5, [x1, #-40]
  433c30:	cbz	w3, 433b6c <ferror@plt+0x30e3c>
  433c34:	adrp	x6, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433c38:	add	x6, x6, #0x590
  433c3c:	mov	x3, x20
  433c40:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433c44:	add	x1, x1, #0x5b0
  433c48:	mov	x0, x19
  433c4c:	bl	402ce0 <fprintf@plt>
  433c50:	ldr	x0, [x20, #8]
  433c54:	ldr	w3, [x20, #4]
  433c58:	ldr	x2, [x0]
  433c5c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433c60:	add	x1, x1, #0x5e0
  433c64:	mov	x0, x19
  433c68:	bl	402ce0 <fprintf@plt>
  433c6c:	b	433bf4 <ferror@plt+0x30ec4>
  433c70:	mov	w2, #0xffffffff            	// #-1
  433c74:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433c78:	add	x3, x3, #0x580
  433c7c:	b	433be4 <ferror@plt+0x30eb4>
  433c80:	sub	sp, sp, #0x80
  433c84:	stp	x29, x30, [sp, #32]
  433c88:	add	x29, sp, #0x20
  433c8c:	stp	x19, x20, [sp, #48]
  433c90:	stp	x21, x22, [sp, #64]
  433c94:	mov	x20, x0
  433c98:	mov	w19, w1
  433c9c:	mov	x22, x2
  433ca0:	tbnz	w1, #31, 433cbc <ferror@plt+0x30f8c>
  433ca4:	cbnz	w19, 433cd8 <ferror@plt+0x30fa8>
  433ca8:	ldp	x19, x20, [sp, #48]
  433cac:	ldp	x21, x22, [sp, #64]
  433cb0:	ldp	x29, x30, [sp, #32]
  433cb4:	add	sp, sp, #0x80
  433cb8:	ret
  433cbc:	and	x0, x19, #0x7fffffff
  433cc0:	lsl	w19, w1, #1
  433cc4:	add	x19, x19, x0
  433cc8:	lsl	x19, x19, #3
  433ccc:	ldr	x0, [x20, #104]
  433cd0:	ldr	w19, [x0, x19]
  433cd4:	b	433ca4 <ferror@plt+0x30f74>
  433cd8:	stp	x23, x24, [sp, #80]
  433cdc:	stp	x25, x26, [sp, #96]
  433ce0:	add	x3, sp, #0x78
  433ce4:	mov	w2, #0x2                   	// #2
  433ce8:	mov	w1, w19
  433cec:	mov	x0, x20
  433cf0:	bl	4332f0 <ferror@plt+0x305c0>
  433cf4:	mov	w23, w0
  433cf8:	ldr	x1, [sp, #120]
  433cfc:	cbz	x1, 433da8 <ferror@plt+0x31078>
  433d00:	ldr	x25, [x1, #8]
  433d04:	ldr	w21, [x1]
  433d08:	sub	w0, w0, w21
  433d0c:	ldrb	w2, [x1, #6]
  433d10:	lsr	w24, w0, w2
  433d14:	ldr	w3, [x1, #16]
  433d18:	add	w24, w24, w3
  433d1c:	mov	w21, #0x1                   	// #1
  433d20:	lsl	w21, w21, w2
  433d24:	sub	w21, w21, #0x1
  433d28:	and	w21, w21, w0
  433d2c:	ldrb	w0, [x1, #7]
  433d30:	lsr	w21, w21, w0
  433d34:	ldrb	w0, [x1, #5]
  433d38:	cmp	w0, #0x0
  433d3c:	cset	w26, ne  // ne = any
  433d40:	cmp	w19, w23
  433d44:	cset	w0, ne  // ne = any
  433d48:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433d4c:	add	x3, x3, #0x608
  433d50:	b.eq	433d90 <ferror@plt+0x31060>  // b.none
  433d54:	str	w23, [sp, #16]
  433d58:	str	w19, [sp, #8]
  433d5c:	str	w0, [sp]
  433d60:	ldr	x7, [sp, #120]
  433d64:	mov	w6, w26
  433d68:	mov	w5, w21
  433d6c:	mov	w4, w24
  433d70:	mov	x2, x25
  433d74:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433d78:	add	x1, x1, #0x618
  433d7c:	mov	x0, x22
  433d80:	bl	402ce0 <fprintf@plt>
  433d84:	ldp	x23, x24, [sp, #80]
  433d88:	ldp	x25, x26, [sp, #96]
  433d8c:	b	433ca8 <ferror@plt+0x30f78>
  433d90:	mov	x0, x20
  433d94:	bl	4323ec <ferror@plt+0x2f6bc>
  433d98:	cbz	x0, 433dc8 <ferror@plt+0x31098>
  433d9c:	ldr	x3, [x0, #8]
  433da0:	mov	w0, #0x0                   	// #0
  433da4:	b	433d54 <ferror@plt+0x31024>
  433da8:	mov	w0, #0xffffffff            	// #-1
  433dac:	mov	w26, w0
  433db0:	mov	w21, w0
  433db4:	mov	w24, w0
  433db8:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x19c60>
  433dbc:	add	x3, x3, #0xd70
  433dc0:	mov	x25, x3
  433dc4:	b	433d54 <ferror@plt+0x31024>
  433dc8:	mov	w0, #0x0                   	// #0
  433dcc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  433dd0:	add	x3, x3, #0x610
  433dd4:	b	433d54 <ferror@plt+0x31024>
  433dd8:	cbz	x0, 433e9c <ferror@plt+0x3116c>
  433ddc:	stp	x29, x30, [sp, #-64]!
  433de0:	mov	x29, sp
  433de4:	stp	x19, x20, [sp, #16]
  433de8:	stp	x21, x22, [sp, #32]
  433dec:	str	x23, [sp, #48]
  433df0:	mov	x22, x0
  433df4:	mov	x23, x1
  433df8:	mov	x21, x2
  433dfc:	ldr	w19, [x0, #12]
  433e00:	mov	w0, #0x0                   	// #0
  433e04:	cbz	w19, 433e80 <ferror@plt+0x31150>
  433e08:	subs	w19, w19, #0x1
  433e0c:	b.mi	433eac <ferror@plt+0x3117c>  // b.first
  433e10:	sbfiz	x20, x19, #1, #32
  433e14:	add	x20, x20, w19, sxtw
  433e18:	lsl	x20, x20, #3
  433e1c:	b	433e2c <ferror@plt+0x310fc>
  433e20:	sub	x20, x20, #0x18
  433e24:	subs	w19, w19, #0x1
  433e28:	b.mi	433eac <ferror@plt+0x3117c>  // b.first
  433e2c:	ldr	x3, [x22]
  433e30:	add	x3, x3, x20
  433e34:	ldr	x0, [x3, #8]
  433e38:	cbz	x0, 433e20 <ferror@plt+0x310f0>
  433e3c:	mov	x1, x23
  433e40:	bl	452d78 <ferror@plt+0x50048>
  433e44:	cbnz	w0, 433e20 <ferror@plt+0x310f0>
  433e48:	tbnz	w19, #31, 433ea4 <ferror@plt+0x31174>
  433e4c:	ldr	w0, [x22, #12]
  433e50:	sub	w0, w0, #0x1
  433e54:	cmp	w0, w19
  433e58:	b.eq	433e94 <ferror@plt+0x31164>  // b.none
  433e5c:	sxtw	x19, w19
  433e60:	add	x19, x19, #0x1
  433e64:	ldr	x0, [x22]
  433e68:	add	x19, x19, x19, lsl #1
  433e6c:	lsl	x19, x19, #3
  433e70:	ldr	w0, [x0, x19]
  433e74:	sub	w0, w0, #0x1
  433e78:	str	w0, [x21]
  433e7c:	mov	w0, #0x1                   	// #1
  433e80:	ldp	x19, x20, [sp, #16]
  433e84:	ldp	x21, x22, [sp, #32]
  433e88:	ldr	x23, [sp, #48]
  433e8c:	ldp	x29, x30, [sp], #64
  433e90:	ret
  433e94:	ldr	w0, [x22, #56]
  433e98:	b	433e78 <ferror@plt+0x31148>
  433e9c:	mov	w0, #0x0                   	// #0
  433ea0:	ret
  433ea4:	mov	w0, #0x0                   	// #0
  433ea8:	b	433e80 <ferror@plt+0x31150>
  433eac:	mov	w0, #0x0                   	// #0
  433eb0:	b	433e80 <ferror@plt+0x31150>
  433eb4:	ldr	w14, [x0, #8]
  433eb8:	ubfiz	x13, x14, #1, #32
  433ebc:	add	x13, x13, w14, uxtw
  433ec0:	lsl	x13, x13, #3
  433ec4:	ldr	w2, [x0, #12]
  433ec8:	add	x2, x2, x2, lsl #1
  433ecc:	lsl	x12, x2, #3
  433ed0:	ldr	w15, [x0, #32]
  433ed4:	lsl	x15, x15, #5
  433ed8:	ldr	x9, [x0, #24]
  433edc:	cbz	x9, 433efc <ferror@plt+0x311cc>
  433ee0:	ldr	w11, [x0, #36]
  433ee4:	sub	w11, w11, #0x1
  433ee8:	sbfiz	x11, x11, #5, #32
  433eec:	add	x11, x9, x11
  433ef0:	mov	x3, #0x0                   	// #0
  433ef4:	mov	x10, #0x0                   	// #0
  433ef8:	b	433f74 <ferror@plt+0x31244>
  433efc:	mov	x3, #0x0                   	// #0
  433f00:	mov	x10, #0x0                   	// #0
  433f04:	ldr	w2, [x0, #36]
  433f08:	lsl	x2, x2, #5
  433f0c:	mov	w14, w14
  433f10:	str	x14, [x1]
  433f14:	ldr	w4, [x0, #12]
  433f18:	str	x4, [x1, #8]
  433f1c:	str	x13, [x1, #16]
  433f20:	str	x12, [x1, #24]
  433f24:	adrp	x4, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  433f28:	ldr	w4, [x4, #2468]
  433f2c:	str	x4, [x1, #32]
  433f30:	adrp	x4, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  433f34:	ldr	w4, [x4, #2464]
  433f38:	str	x4, [x1, #40]
  433f3c:	ldr	w4, [x0, #36]
  433f40:	str	x4, [x1, #48]
  433f44:	str	x15, [x1, #56]
  433f48:	str	x10, [x1, #72]
  433f4c:	str	x2, [x1, #64]
  433f50:	str	x3, [x1, #80]
  433f54:	ldr	w2, [x0, #100]
  433f58:	add	x2, x2, x2, lsl #1
  433f5c:	lsl	x2, x2, #3
  433f60:	str	x2, [x1, #88]
  433f64:	ldr	w0, [x0, #96]
  433f68:	str	x0, [x1, #96]
  433f6c:	ret
  433f70:	add	x9, x9, #0x20
  433f74:	cmp	x11, x9
  433f78:	b.cc	433f04 <ferror@plt+0x311d4>  // b.lo, b.ul, b.last
  433f7c:	ldr	w2, [x9, #4]
  433f80:	lsl	w8, w2, #1
  433f84:	ubfiz	x4, x2, #3, #31
  433f88:	add	x10, x4, x10
  433f8c:	cmp	wzr, w2, lsl #1
  433f90:	b.eq	433f70 <ferror@plt+0x31240>  // b.none
  433f94:	ldr	x4, [x9, #16]
  433f98:	mov	w2, #0x0                   	// #0
  433f9c:	add	w5, w2, #0x1
  433fa0:	ldr	w7, [x4, w2, uxtw #2]
  433fa4:	ldr	w6, [x4, x5, lsl #2]
  433fa8:	add	x5, x3, #0x4
  433fac:	cmp	w7, w6
  433fb0:	csel	x3, x5, x3, eq  // eq = none
  433fb4:	add	w2, w2, #0x2
  433fb8:	cmp	w8, w2
  433fbc:	b.hi	433f9c <ferror@plt+0x3126c>  // b.pmore
  433fc0:	b	433f70 <ferror@plt+0x31240>
  433fc4:	cbz	x1, 43411c <ferror@plt+0x313ec>
  433fc8:	stp	x29, x30, [sp, #-64]!
  433fcc:	mov	x29, sp
  433fd0:	stp	x19, x20, [sp, #16]
  433fd4:	stp	x21, x22, [sp, #32]
  433fd8:	str	x23, [sp, #48]
  433fdc:	mov	x20, x0
  433fe0:	mov	x19, x1
  433fe4:	mov	w23, w2
  433fe8:	mov	w22, w3
  433fec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  433ff0:	ldr	x0, [x0, #1424]
  433ff4:	cmp	x20, #0x0
  433ff8:	csel	x20, x0, x20, eq  // eq = none
  433ffc:	ldr	w2, [x1, #12]
  434000:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434004:	add	x1, x1, #0x650
  434008:	mov	x0, x20
  43400c:	bl	402ce0 <fprintf@plt>
  434010:	ldr	w2, [x19, #36]
  434014:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434018:	add	x1, x1, #0x670
  43401c:	mov	x0, x20
  434020:	bl	402ce0 <fprintf@plt>
  434024:	ldr	w2, [x19, #48]
  434028:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43402c:	add	x1, x1, #0x690
  434030:	mov	x0, x20
  434034:	bl	402ce0 <fprintf@plt>
  434038:	ldr	w2, [x19, #56]
  43403c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434040:	add	x1, x1, #0x6b0
  434044:	mov	x0, x20
  434048:	bl	402ce0 <fprintf@plt>
  43404c:	cbnz	w23, 434068 <ferror@plt+0x31338>
  434050:	cbnz	w22, 4340c0 <ferror@plt+0x31390>
  434054:	ldp	x19, x20, [sp, #16]
  434058:	ldp	x21, x22, [sp, #32]
  43405c:	ldr	x23, [sp, #48]
  434060:	ldp	x29, x30, [sp], #64
  434064:	ret
  434068:	mov	x3, x20
  43406c:	mov	x2, #0x14                  	// #20
  434070:	mov	x1, #0x1                   	// #1
  434074:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434078:	add	x0, x0, #0x6d0
  43407c:	bl	402ae0 <fwrite@plt>
  434080:	mov	w21, #0x0                   	// #0
  434084:	ldr	w0, [x19, #12]
  434088:	cmp	w0, w21
  43408c:	b.ls	4340b0 <ferror@plt+0x31380>  // b.plast
  434090:	mov	w3, #0x0                   	// #0
  434094:	mov	w2, w21
  434098:	mov	x1, x19
  43409c:	mov	x0, x20
  4340a0:	bl	433af0 <ferror@plt+0x30dc0>
  4340a4:	add	w21, w21, #0x1
  4340a8:	cmp	w23, w21
  4340ac:	b.ne	434084 <ferror@plt+0x31354>  // b.any
  4340b0:	mov	x1, x20
  4340b4:	mov	w0, #0xa                   	// #10
  4340b8:	bl	402750 <fputc@plt>
  4340bc:	b	434050 <ferror@plt+0x31320>
  4340c0:	mov	x3, x20
  4340c4:	mov	x2, #0x11                  	// #17
  4340c8:	mov	x1, #0x1                   	// #1
  4340cc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4340d0:	add	x0, x0, #0x6e8
  4340d4:	bl	402ae0 <fwrite@plt>
  4340d8:	mov	w21, #0x0                   	// #0
  4340dc:	mov	w23, #0x1                   	// #1
  4340e0:	ldr	w0, [x19, #36]
  4340e4:	cmp	w0, w21
  4340e8:	b.ls	43410c <ferror@plt+0x313dc>  // b.plast
  4340ec:	mov	w3, w23
  4340f0:	mov	w2, w21
  4340f4:	mov	x1, x19
  4340f8:	mov	x0, x20
  4340fc:	bl	433af0 <ferror@plt+0x30dc0>
  434100:	add	w21, w21, #0x1
  434104:	cmp	w22, w21
  434108:	b.ne	4340e0 <ferror@plt+0x313b0>  // b.any
  43410c:	mov	x1, x20
  434110:	mov	w0, #0xa                   	// #10
  434114:	bl	402750 <fputc@plt>
  434118:	b	434054 <ferror@plt+0x31324>
  43411c:	ret
  434120:	stp	x29, x30, [sp, #-48]!
  434124:	mov	x29, sp
  434128:	stp	x21, x22, [sp, #32]
  43412c:	mov	x21, x0
  434130:	ldr	w0, [x0, #120]
  434134:	cbz	w0, 4341a0 <ferror@plt+0x31470>
  434138:	stp	x19, x20, [sp, #16]
  43413c:	mov	w19, #0x0                   	// #0
  434140:	mov	x22, #0x18                  	// #24
  434144:	b	434178 <ferror@plt+0x31448>
  434148:	add	x1, x21, w19, sxtw #3
  43414c:	add	x1, x1, #0x80
  434150:	b	434190 <ferror@plt+0x31460>
  434154:	ldr	x0, [x20, #8]
  434158:	bl	402a90 <free@plt>
  43415c:	mov	x1, x22
  434160:	mov	x0, x20
  434164:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  434168:	add	w19, w19, #0x1
  43416c:	ldr	w0, [x21, #120]
  434170:	cmp	w0, w19
  434174:	b.ls	43419c <ferror@plt+0x3146c>  // b.plast
  434178:	cmp	w19, #0x1
  43417c:	b.le	434148 <ferror@plt+0x31418>
  434180:	sbfiz	x1, x19, #3, #32
  434184:	sub	x0, x1, #0x10
  434188:	ldr	x1, [x21, #152]
  43418c:	add	x1, x1, x0
  434190:	ldr	x20, [x1]
  434194:	cbnz	x20, 434154 <ferror@plt+0x31424>
  434198:	b	434168 <ferror@plt+0x31438>
  43419c:	ldp	x19, x20, [sp, #16]
  4341a0:	ldr	x0, [x21, #152]
  4341a4:	bl	402a90 <free@plt>
  4341a8:	ldr	x0, [x21, #72]
  4341ac:	bl	402a90 <free@plt>
  4341b0:	ldp	x21, x22, [sp, #32]
  4341b4:	ldp	x29, x30, [sp], #48
  4341b8:	ret
  4341bc:	cmp	w1, #0x2
  4341c0:	b.gt	4341d0 <ferror@plt+0x314a0>
  4341c4:	add	x1, x0, w1, sxtw #4
  4341c8:	add	x0, x1, #0x10
  4341cc:	ret
  4341d0:	sbfiz	x1, x1, #4, #32
  4341d4:	sub	x1, x1, #0x30
  4341d8:	ldr	x0, [x0, #72]
  4341dc:	add	x0, x0, x1
  4341e0:	b	4341cc <ferror@plt+0x3149c>
  4341e4:	stp	x29, x30, [sp, #-16]!
  4341e8:	mov	x29, sp
  4341ec:	bl	4341bc <ferror@plt+0x3148c>
  4341f0:	ldr	w0, [x0]
  4341f4:	ldp	x29, x30, [sp], #16
  4341f8:	ret
  4341fc:	cmp	w1, #0x2
  434200:	b.gt	434210 <ferror@plt+0x314e0>
  434204:	add	x1, x0, w1, sxtw #4
  434208:	add	x0, x1, #0x10
  43420c:	ret
  434210:	sbfiz	x1, x1, #4, #32
  434214:	sub	x1, x1, #0x30
  434218:	ldr	x0, [x0, #72]
  43421c:	add	x0, x0, x1
  434220:	b	43420c <ferror@plt+0x314dc>
  434224:	stp	x29, x30, [sp, #-80]!
  434228:	mov	x29, sp
  43422c:	stp	x19, x20, [sp, #16]
  434230:	mov	x20, x8
  434234:	mov	x19, x0
  434238:	cbnz	w1, 4342a4 <ferror@plt+0x31574>
  43423c:	ldrb	w0, [x0, #84]
  434240:	cbz	w0, 434260 <ferror@plt+0x31530>
  434244:	ldp	x0, x1, [x19, #88]
  434248:	stp	x0, x1, [x20]
  43424c:	ldp	x0, x1, [x19, #104]
  434250:	stp	x0, x1, [x20, #16]
  434254:	ldp	x19, x20, [sp, #16]
  434258:	ldp	x29, x30, [sp], #80
  43425c:	ret
  434260:	str	x21, [sp, #32]
  434264:	mov	x0, x19
  434268:	bl	4341e4 <ferror@plt+0x314b4>
  43426c:	add	x8, sp, #0x30
  434270:	mov	w1, #0x0                   	// #0
  434274:	bl	41c118 <ferror@plt+0x193e8>
  434278:	ldp	x0, x1, [sp, #48]
  43427c:	stp	x0, x1, [x19, #88]
  434280:	ldp	x0, x1, [sp, #64]
  434284:	stp	x0, x1, [x19, #104]
  434288:	ldr	w0, [x19, #80]
  43428c:	cbz	w0, 434294 <ferror@plt+0x31564>
  434290:	str	w0, [x19, #100]
  434294:	mov	w0, #0x1                   	// #1
  434298:	strb	w0, [x19, #84]
  43429c:	ldr	x21, [sp, #32]
  4342a0:	b	434244 <ferror@plt+0x31514>
  4342a4:	bl	4341e4 <ferror@plt+0x314b4>
  4342a8:	mov	x8, x20
  4342ac:	mov	w1, #0x0                   	// #0
  4342b0:	bl	41c118 <ferror@plt+0x193e8>
  4342b4:	b	434254 <ferror@plt+0x31524>
  4342b8:	str	w1, [x0, #80]
  4342bc:	strb	wzr, [x0, #84]
  4342c0:	ret
  4342c4:	stp	x29, x30, [sp, #-64]!
  4342c8:	mov	x29, sp
  4342cc:	stp	x19, x20, [sp, #16]
  4342d0:	stp	x21, x22, [sp, #32]
  4342d4:	stp	x23, x24, [sp, #48]
  4342d8:	mov	x20, x0
  4342dc:	mov	w23, w1
  4342e0:	mov	w22, w2
  4342e4:	mov	x21, x3
  4342e8:	ldr	w4, [x0, #8]
  4342ec:	add	w0, w4, #0x1
  4342f0:	str	w0, [x20, #8]
  4342f4:	cmp	w4, #0x2
  4342f8:	b.gt	43432c <ferror@plt+0x315fc>
  4342fc:	add	x20, x20, #0x8
  434300:	sbfiz	x4, x4, #4, #32
  434304:	add	x4, x4, #0x8
  434308:	add	x1, x20, x4
  43430c:	str	w23, [x20, x4]
  434310:	str	w2, [x1, #4]
  434314:	str	x3, [x1, #8]
  434318:	ldp	x19, x20, [sp, #16]
  43431c:	ldp	x21, x22, [sp, #32]
  434320:	ldp	x23, x24, [sp, #48]
  434324:	ldp	x29, x30, [sp], #64
  434328:	ret
  43432c:	sub	w19, w4, #0x3
  434330:	ldr	x0, [x20, #72]
  434334:	cbz	x0, 434360 <ferror@plt+0x31630>
  434338:	ldr	w1, [x20, #64]
  43433c:	cmp	w19, w1
  434340:	b.ge	434378 <ferror@plt+0x31648>  // b.tcont
  434344:	sbfiz	x4, x19, #4, #32
  434348:	ldr	x1, [x20, #72]
  43434c:	add	x0, x1, x4
  434350:	str	w23, [x1, x4]
  434354:	str	w22, [x0, #4]
  434358:	str	x21, [x0, #8]
  43435c:	b	434318 <ferror@plt+0x315e8>
  434360:	mov	w0, #0x10                  	// #16
  434364:	str	w0, [x20, #64]
  434368:	mov	x0, #0x100                 	// #256
  43436c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  434370:	str	x0, [x20, #72]
  434374:	b	434344 <ferror@plt+0x31614>
  434378:	lsl	w1, w1, #1
  43437c:	str	w1, [x20, #64]
  434380:	sbfiz	x1, x1, #4, #32
  434384:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  434388:	str	x0, [x20, #72]
  43438c:	b	434344 <ferror@plt+0x31614>
  434390:	stp	x29, x30, [sp, #-16]!
  434394:	mov	x29, sp
  434398:	mov	x5, x1
  43439c:	mov	w1, w2
  4343a0:	mov	x2, x0
  4343a4:	str	x5, [x2], #8
  4343a8:	str	wzr, [x0, #8]
  4343ac:	str	wzr, [x2, #56]
  4343b0:	str	xzr, [x2, #64]
  4343b4:	str	wzr, [x0, #80]
  4343b8:	strb	wzr, [x0, #84]
  4343bc:	str	wzr, [x0, #120]
  4343c0:	str	wzr, [x0, #144]
  4343c4:	str	xzr, [x0, #152]
  4343c8:	strb	wzr, [x0, #160]
  4343cc:	strb	wzr, [x0, #161]
  4343d0:	mov	w2, #0x0                   	// #0
  4343d4:	bl	4342c4 <ferror@plt+0x31594>
  4343d8:	ldp	x29, x30, [sp], #16
  4343dc:	ret
  4343e0:	stp	x29, x30, [sp, #-48]!
  4343e4:	mov	x29, sp
  4343e8:	stp	x19, x20, [sp, #16]
  4343ec:	stp	x21, x22, [sp, #32]
  4343f0:	mov	x20, x0
  4343f4:	mov	w19, w1
  4343f8:	mov	w22, w2
  4343fc:	mov	w21, w3
  434400:	ldr	w0, [x0, #8]
  434404:	cmp	w0, w1
  434408:	b.eq	434434 <ferror@plt+0x31704>  // b.none
  43440c:	mov	x0, x20
  434410:	bl	4341fc <ferror@plt+0x314cc>
  434414:	str	w22, [x0]
  434418:	str	w21, [x0, #4]
  43441c:	cbnz	w19, 434424 <ferror@plt+0x316f4>
  434420:	strb	wzr, [x20, #84]
  434424:	ldp	x19, x20, [sp, #16]
  434428:	ldp	x21, x22, [sp, #32]
  43442c:	ldp	x29, x30, [sp], #48
  434430:	ret
  434434:	mov	x3, #0x0                   	// #0
  434438:	mov	w2, w21
  43443c:	mov	w1, w22
  434440:	mov	x0, x20
  434444:	bl	4342c4 <ferror@plt+0x31594>
  434448:	b	43441c <ferror@plt+0x316ec>
  43444c:	ldr	w1, [x0, #120]
  434450:	cbz	w1, 434484 <ferror@plt+0x31754>
  434454:	sub	w1, w1, #0x1
  434458:	cmp	w1, #0x1
  43445c:	b.le	434478 <ferror@plt+0x31748>
  434460:	sbfiz	x1, x1, #3, #32
  434464:	sub	x1, x1, #0x10
  434468:	ldr	x0, [x0, #152]
  43446c:	add	x1, x0, x1
  434470:	ldr	x0, [x1]
  434474:	ret
  434478:	add	x1, x0, w1, sxtw #3
  43447c:	add	x1, x1, #0x80
  434480:	b	434470 <ferror@plt+0x31740>
  434484:	mov	x0, #0x0                   	// #0
  434488:	b	434474 <ferror@plt+0x31744>
  43448c:	stp	x29, x30, [sp, #-48]!
  434490:	mov	x29, sp
  434494:	stp	x21, x22, [sp, #32]
  434498:	mov	x21, x0
  43449c:	mov	w0, #0x1                   	// #1
  4344a0:	strb	w0, [x21, #160]
  4344a4:	ldr	w0, [x21, #120]
  4344a8:	cbz	w0, 434514 <ferror@plt+0x317e4>
  4344ac:	stp	x19, x20, [sp, #16]
  4344b0:	mov	w19, #0x0                   	// #0
  4344b4:	mov	x22, #0x18                  	// #24
  4344b8:	b	4344ec <ferror@plt+0x317bc>
  4344bc:	add	x1, x21, w19, sxtw #3
  4344c0:	add	x1, x1, #0x80
  4344c4:	b	434504 <ferror@plt+0x317d4>
  4344c8:	ldr	x0, [x20, #8]
  4344cc:	bl	402a90 <free@plt>
  4344d0:	mov	x1, x22
  4344d4:	mov	x0, x20
  4344d8:	bl	4552f0 <_obstack_memory_used@@Base+0xf50>
  4344dc:	add	w19, w19, #0x1
  4344e0:	ldr	w0, [x21, #120]
  4344e4:	cmp	w0, w19
  4344e8:	b.ls	434510 <ferror@plt+0x317e0>  // b.plast
  4344ec:	cmp	w19, #0x1
  4344f0:	b.le	4344bc <ferror@plt+0x3178c>
  4344f4:	sbfiz	x1, x19, #3, #32
  4344f8:	sub	x0, x1, #0x10
  4344fc:	ldr	x1, [x21, #152]
  434500:	add	x1, x1, x0
  434504:	ldr	x20, [x1]
  434508:	cbnz	x20, 4344c8 <ferror@plt+0x31798>
  43450c:	b	4344dc <ferror@plt+0x317ac>
  434510:	ldp	x19, x20, [sp, #16]
  434514:	str	wzr, [x21, #120]
  434518:	ldp	x21, x22, [sp, #32]
  43451c:	ldp	x29, x30, [sp], #48
  434520:	ret
  434524:	ldrb	w2, [x0, #160]
  434528:	cbnz	w2, 434538 <ferror@plt+0x31808>
  43452c:	mov	w3, #0x60000000            	// #1610612736
  434530:	cmp	w1, w3
  434534:	b.hi	434540 <ferror@plt+0x31810>  // b.pmore
  434538:	mov	w0, w2
  43453c:	ret
  434540:	stp	x29, x30, [sp, #-16]!
  434544:	mov	x29, sp
  434548:	bl	43448c <ferror@plt+0x3175c>
  43454c:	mov	w2, #0x1                   	// #1
  434550:	mov	w0, w2
  434554:	ldp	x29, x30, [sp], #16
  434558:	ret
  43455c:	stp	x29, x30, [sp, #-32]!
  434560:	mov	x29, sp
  434564:	stp	x19, x20, [sp, #16]
  434568:	mov	x19, x0
  43456c:	mov	x20, x3
  434570:	str	w1, [x0]
  434574:	str	w2, [x0, #4]
  434578:	mov	x0, x3
  43457c:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  434580:	str	x0, [x19, #8]
  434584:	mov	x0, x20
  434588:	bl	402680 <strlen@plt>
  43458c:	str	x0, [x19, #16]
  434590:	ldp	x19, x20, [sp, #16]
  434594:	ldp	x29, x30, [sp], #32
  434598:	ret
  43459c:	stp	x29, x30, [sp, #-112]!
  4345a0:	mov	x29, sp
  4345a4:	stp	x19, x20, [sp, #16]
  4345a8:	str	x21, [sp, #32]
  4345ac:	mov	x20, x0
  4345b0:	mov	x19, x1
  4345b4:	mov	w21, w2
  4345b8:	add	x8, sp, #0x50
  4345bc:	mov	w1, #0x1                   	// #1
  4345c0:	ldr	w0, [x0]
  4345c4:	bl	41c118 <ferror@plt+0x193e8>
  4345c8:	ldr	x0, [sp, #80]
  4345cc:	cmp	x0, x19
  4345d0:	b.eq	4345e8 <ferror@plt+0x318b8>  // b.none
  4345d4:	mov	w0, #0x0                   	// #0
  4345d8:	ldp	x19, x20, [sp, #16]
  4345dc:	ldr	x21, [sp, #32]
  4345e0:	ldp	x29, x30, [sp], #112
  4345e4:	ret
  4345e8:	mov	w0, #0x0                   	// #0
  4345ec:	ldr	w1, [sp, #88]
  4345f0:	cmp	w1, w21
  4345f4:	b.gt	4345d8 <ferror@plt+0x318a8>
  4345f8:	add	x8, sp, #0x30
  4345fc:	mov	w1, #0x1                   	// #1
  434600:	ldr	w0, [x20, #4]
  434604:	bl	41c118 <ferror@plt+0x193e8>
  434608:	mov	w0, #0x0                   	// #0
  43460c:	ldr	x1, [sp, #48]
  434610:	cmp	x1, x19
  434614:	b.ne	4345d8 <ferror@plt+0x318a8>  // b.any
  434618:	ldr	w0, [sp, #56]
  43461c:	cmp	w0, w21
  434620:	cset	w0, ge  // ge = tcont
  434624:	b	4345d8 <ferror@plt+0x318a8>
  434628:	stp	x29, x30, [sp, #-48]!
  43462c:	mov	x29, sp
  434630:	stp	x19, x20, [sp, #16]
  434634:	mov	x19, x0
  434638:	ldr	w0, [x0, #4]
  43463c:	cmp	w0, w1
  434640:	b.eq	434654 <ferror@plt+0x31924>  // b.none
  434644:	mov	w0, #0x0                   	// #0
  434648:	ldp	x19, x20, [sp, #16]
  43464c:	ldp	x29, x30, [sp], #48
  434650:	ret
  434654:	str	x21, [sp, #32]
  434658:	mov	x21, x3
  43465c:	str	w2, [x19, #4]
  434660:	mov	x0, x3
  434664:	bl	402680 <strlen@plt>
  434668:	mov	x20, x0
  43466c:	ldr	x1, [x19, #16]
  434670:	add	x1, x1, #0x1
  434674:	add	x1, x1, x0
  434678:	ldr	x0, [x19, #8]
  43467c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  434680:	str	x0, [x19, #8]
  434684:	ldr	x3, [x19, #16]
  434688:	mov	x2, x20
  43468c:	mov	x1, x21
  434690:	add	x0, x0, x3
  434694:	bl	402620 <memcpy@plt>
  434698:	ldr	x0, [x19, #16]
  43469c:	add	x20, x20, x0
  4346a0:	str	x20, [x19, #16]
  4346a4:	ldr	x0, [x19, #8]
  4346a8:	strb	wzr, [x0, x20]
  4346ac:	mov	w0, #0x1                   	// #1
  4346b0:	ldr	x21, [sp, #32]
  4346b4:	b	434648 <ferror@plt+0x31918>
  4346b8:	ldr	x1, [x0, #16]
  4346bc:	cbz	x1, 4346d8 <ferror@plt+0x319a8>
  4346c0:	ldr	x0, [x0, #8]
  4346c4:	add	x1, x0, x1
  4346c8:	ldurb	w0, [x1, #-1]
  4346cc:	cmp	w0, #0xa
  4346d0:	cset	w0, eq  // eq = none
  4346d4:	ret
  4346d8:	mov	w0, #0x0                   	// #0
  4346dc:	b	4346d4 <ferror@plt+0x319a4>
  4346e0:	stp	x29, x30, [sp, #-128]!
  4346e4:	mov	x29, sp
  4346e8:	stp	x19, x20, [sp, #16]
  4346ec:	stp	x21, x22, [sp, #32]
  4346f0:	mov	x22, x0
  4346f4:	mov	w21, w1
  4346f8:	mov	w20, w2
  4346fc:	mov	x19, x3
  434700:	bl	434524 <ferror@plt+0x317f4>
  434704:	and	w4, w0, #0xff
  434708:	cbz	w4, 43471c <ferror@plt+0x319ec>
  43470c:	ldp	x19, x20, [sp, #16]
  434710:	ldp	x21, x22, [sp, #32]
  434714:	ldp	x29, x30, [sp], #128
  434718:	ret
  43471c:	mov	w1, w20
  434720:	mov	x0, x22
  434724:	bl	434524 <ferror@plt+0x317f4>
  434728:	and	w0, w0, #0xff
  43472c:	cbnz	w0, 43470c <ferror@plt+0x319dc>
  434730:	str	x23, [sp, #48]
  434734:	add	x8, sp, #0x60
  434738:	mov	w1, #0x1                   	// #1
  43473c:	mov	w0, w21
  434740:	bl	41c118 <ferror@plt+0x193e8>
  434744:	ldr	w23, [sp, #108]
  434748:	add	x8, sp, #0x40
  43474c:	mov	w1, #0x1                   	// #1
  434750:	mov	w0, w20
  434754:	bl	41c118 <ferror@plt+0x193e8>
  434758:	ldr	x1, [sp, #96]
  43475c:	ldr	x0, [sp, #64]
  434760:	cmp	x1, x0
  434764:	b.ne	434820 <ferror@plt+0x31af0>  // b.any
  434768:	ldr	w1, [sp, #104]
  43476c:	ldr	w0, [sp, #72]
  434770:	cmp	w1, w0
  434774:	b.ne	434830 <ferror@plt+0x31b00>  // b.any
  434778:	ldr	w0, [sp, #76]
  43477c:	cmp	w0, w23
  434780:	b.lt	434840 <ferror@plt+0x31b10>  // b.tstop
  434784:	mov	w1, #0xa                   	// #10
  434788:	mov	x0, x19
  43478c:	bl	402ac0 <strchr@plt>
  434790:	cbz	x0, 4347ac <ferror@plt+0x31a7c>
  434794:	cmp	w21, w20
  434798:	b.ne	434850 <ferror@plt+0x31b20>  // b.any
  43479c:	cmp	w23, #0x1
  4347a0:	b.ne	434860 <ferror@plt+0x31b30>  // b.any
  4347a4:	ldrb	w0, [x0, #1]
  4347a8:	cbnz	w0, 434870 <ferror@plt+0x31b40>
  4347ac:	mov	x0, x22
  4347b0:	bl	43444c <ferror@plt+0x3171c>
  4347b4:	mov	x23, x0
  4347b8:	cbz	x0, 4347c8 <ferror@plt+0x31a98>
  4347bc:	bl	4346b8 <ferror@plt+0x31988>
  4347c0:	and	w0, w0, #0xff
  4347c4:	cbz	w0, 434880 <ferror@plt+0x31b50>
  4347c8:	mov	x0, #0x18                  	// #24
  4347cc:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  4347d0:	mov	x23, x0
  4347d4:	mov	x3, x19
  4347d8:	mov	w2, w20
  4347dc:	mov	w1, w21
  4347e0:	bl	43455c <ferror@plt+0x3182c>
  4347e4:	ldr	w1, [x22, #120]
  4347e8:	add	w2, w1, #0x1
  4347ec:	str	w2, [x22, #120]
  4347f0:	cmp	w1, #0x1
  4347f4:	b.le	4348a4 <ferror@plt+0x31b74>
  4347f8:	sub	w19, w1, #0x2
  4347fc:	ldr	x0, [x22, #152]
  434800:	cbz	x0, 4348b4 <ferror@plt+0x31b84>
  434804:	ldr	w1, [x22, #144]
  434808:	cmp	w19, w1
  43480c:	b.ge	4348cc <ferror@plt+0x31b9c>  // b.tcont
  434810:	ldr	x0, [x22, #152]
  434814:	str	x23, [x0, w19, sxtw #3]
  434818:	ldr	x23, [sp, #48]
  43481c:	b	43470c <ferror@plt+0x319dc>
  434820:	mov	x0, x22
  434824:	bl	43448c <ferror@plt+0x3175c>
  434828:	ldr	x23, [sp, #48]
  43482c:	b	43470c <ferror@plt+0x319dc>
  434830:	mov	x0, x22
  434834:	bl	43448c <ferror@plt+0x3175c>
  434838:	ldr	x23, [sp, #48]
  43483c:	b	43470c <ferror@plt+0x319dc>
  434840:	mov	x0, x22
  434844:	bl	43448c <ferror@plt+0x3175c>
  434848:	ldr	x23, [sp, #48]
  43484c:	b	43470c <ferror@plt+0x319dc>
  434850:	mov	x0, x22
  434854:	bl	43448c <ferror@plt+0x3175c>
  434858:	ldr	x23, [sp, #48]
  43485c:	b	43470c <ferror@plt+0x319dc>
  434860:	mov	x0, x22
  434864:	bl	43448c <ferror@plt+0x3175c>
  434868:	ldr	x23, [sp, #48]
  43486c:	b	43470c <ferror@plt+0x319dc>
  434870:	mov	x0, x22
  434874:	bl	43448c <ferror@plt+0x3175c>
  434878:	ldr	x23, [sp, #48]
  43487c:	b	43470c <ferror@plt+0x319dc>
  434880:	mov	x3, x19
  434884:	mov	w2, w20
  434888:	mov	w1, w21
  43488c:	mov	x0, x23
  434890:	bl	434628 <ferror@plt+0x318f8>
  434894:	and	w0, w0, #0xff
  434898:	cbz	w0, 4347c8 <ferror@plt+0x31a98>
  43489c:	ldr	x23, [sp, #48]
  4348a0:	b	43470c <ferror@plt+0x319dc>
  4348a4:	add	x1, x22, w1, sxtw #3
  4348a8:	str	x23, [x1, #128]
  4348ac:	ldr	x23, [sp, #48]
  4348b0:	b	43470c <ferror@plt+0x319dc>
  4348b4:	mov	w0, #0x10                  	// #16
  4348b8:	str	w0, [x22, #144]
  4348bc:	mov	x0, #0x80                  	// #128
  4348c0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4348c4:	str	x0, [x22, #152]
  4348c8:	b	434810 <ferror@plt+0x31ae0>
  4348cc:	lsl	w1, w1, #1
  4348d0:	str	w1, [x22, #144]
  4348d4:	sbfiz	x1, x1, #3, #32
  4348d8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  4348dc:	str	x0, [x22, #152]
  4348e0:	b	434810 <ferror@plt+0x31ae0>
  4348e4:	stp	x29, x30, [sp, #-32]!
  4348e8:	mov	x29, sp
  4348ec:	stp	x19, x20, [sp, #16]
  4348f0:	mov	x19, x0
  4348f4:	mov	x20, x2
  4348f8:	ldr	x0, [x0]
  4348fc:	bl	432f78 <ferror@plt+0x30248>
  434900:	mov	x1, x0
  434904:	mov	x3, x20
  434908:	mov	w2, w0
  43490c:	mov	x0, x19
  434910:	bl	4346e0 <ferror@plt+0x319b0>
  434914:	ldp	x19, x20, [sp, #16]
  434918:	ldp	x29, x30, [sp], #32
  43491c:	ret
  434920:	stp	x29, x30, [sp, #-32]!
  434924:	mov	x29, sp
  434928:	stp	x19, x20, [sp, #16]
  43492c:	mov	x19, x0
  434930:	mov	x20, x1
  434934:	mov	w1, #0x0                   	// #0
  434938:	bl	4341e4 <ferror@plt+0x314b4>
  43493c:	mov	x2, x20
  434940:	mov	w1, w0
  434944:	mov	x0, x19
  434948:	bl	4348e4 <ferror@plt+0x31bb4>
  43494c:	ldp	x19, x20, [sp, #16]
  434950:	ldp	x29, x30, [sp], #32
  434954:	ret
  434958:	stp	x29, x30, [sp, #-48]!
  43495c:	mov	x29, sp
  434960:	stp	x19, x20, [sp, #16]
  434964:	str	x21, [sp, #32]
  434968:	mov	x19, x0
  43496c:	mov	x21, x2
  434970:	ldr	x0, [x0]
  434974:	bl	432f78 <ferror@plt+0x30248>
  434978:	lsr	x20, x0, #32
  43497c:	mov	w2, #0x1                   	// #1
  434980:	mov	w1, w20
  434984:	ldr	x0, [x19]
  434988:	bl	433458 <ferror@plt+0x30728>
  43498c:	cmp	w20, w0
  434990:	b.eq	4349b8 <ferror@plt+0x31c88>  // b.none
  434994:	mov	w1, w0
  434998:	mov	x3, x21
  43499c:	mov	w2, w0
  4349a0:	mov	x0, x19
  4349a4:	bl	4346e0 <ferror@plt+0x319b0>
  4349a8:	ldp	x19, x20, [sp, #16]
  4349ac:	ldr	x21, [sp, #32]
  4349b0:	ldp	x29, x30, [sp], #48
  4349b4:	ret
  4349b8:	mov	x0, x19
  4349bc:	bl	43448c <ferror@plt+0x3175c>
  4349c0:	b	4349a8 <ferror@plt+0x31c78>
  4349c4:	stp	x29, x30, [sp, #-32]!
  4349c8:	mov	x29, sp
  4349cc:	stp	x19, x20, [sp, #16]
  4349d0:	mov	x19, x0
  4349d4:	mov	x20, x1
  4349d8:	mov	w1, #0x0                   	// #0
  4349dc:	bl	4341e4 <ferror@plt+0x314b4>
  4349e0:	mov	x2, x20
  4349e4:	mov	w1, w0
  4349e8:	mov	x0, x19
  4349ec:	bl	434958 <ferror@plt+0x31c28>
  4349f0:	ldp	x19, x20, [sp, #16]
  4349f4:	ldp	x29, x30, [sp], #32
  4349f8:	ret
  4349fc:	stp	x29, x30, [sp, #-48]!
  434a00:	mov	x29, sp
  434a04:	stp	x19, x20, [sp, #16]
  434a08:	stp	x21, x22, [sp, #32]
  434a0c:	mov	x19, x0
  434a10:	mov	x20, x1
  434a14:	mov	x22, x2
  434a18:	ldr	x0, [x0]
  434a1c:	bl	433088 <ferror@plt+0x30358>
  434a20:	mov	w21, w0
  434a24:	lsr	x1, x20, #32
  434a28:	ldr	x0, [x19]
  434a2c:	bl	433088 <ferror@plt+0x30358>
  434a30:	mov	w20, w0
  434a34:	mov	w2, #0x1                   	// #1
  434a38:	mov	w1, w0
  434a3c:	ldr	x0, [x19]
  434a40:	bl	433458 <ferror@plt+0x30728>
  434a44:	cmp	w20, w0
  434a48:	b.eq	434a70 <ferror@plt+0x31d40>  // b.none
  434a4c:	mov	w2, w0
  434a50:	mov	x3, x22
  434a54:	mov	w1, w21
  434a58:	mov	x0, x19
  434a5c:	bl	4346e0 <ferror@plt+0x319b0>
  434a60:	ldp	x19, x20, [sp, #16]
  434a64:	ldp	x21, x22, [sp, #32]
  434a68:	ldp	x29, x30, [sp], #48
  434a6c:	ret
  434a70:	mov	x0, x19
  434a74:	bl	43448c <ferror@plt+0x3175c>
  434a78:	b	434a60 <ferror@plt+0x31d30>
  434a7c:	stp	x29, x30, [sp, #-16]!
  434a80:	mov	x29, sp
  434a84:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x19c60>
  434a88:	add	x2, x2, #0xd70
  434a8c:	bl	4349fc <ferror@plt+0x31ccc>
  434a90:	ldp	x29, x30, [sp], #16
  434a94:	ret
  434a98:	stp	x29, x30, [sp, #-32]!
  434a9c:	mov	x29, sp
  434aa0:	str	x19, [sp, #16]
  434aa4:	mov	x19, x0
  434aa8:	ldr	x0, [x0]
  434aac:	bl	432f78 <ferror@plt+0x30248>
  434ab0:	mov	x1, x0
  434ab4:	mov	x0, x19
  434ab8:	bl	434a7c <ferror@plt+0x31d4c>
  434abc:	ldr	x19, [sp, #16]
  434ac0:	ldp	x29, x30, [sp], #32
  434ac4:	ret
  434ac8:	stp	x29, x30, [sp, #-32]!
  434acc:	mov	x29, sp
  434ad0:	str	x19, [sp, #16]
  434ad4:	mov	x19, x0
  434ad8:	mov	w1, #0x0                   	// #0
  434adc:	bl	4341e4 <ferror@plt+0x314b4>
  434ae0:	mov	w1, w0
  434ae4:	mov	x0, x19
  434ae8:	bl	434a98 <ferror@plt+0x31d68>
  434aec:	ldr	x19, [sp, #16]
  434af0:	ldp	x29, x30, [sp], #32
  434af4:	ret
  434af8:	stp	x29, x30, [sp, #-32]!
  434afc:	mov	x29, sp
  434b00:	stp	x19, x20, [sp, #16]
  434b04:	mov	x19, x0
  434b08:	mov	x20, x2
  434b0c:	ldr	x0, [x0]
  434b10:	bl	432f78 <ferror@plt+0x30248>
  434b14:	mov	x2, x20
  434b18:	mov	x1, x0
  434b1c:	mov	x0, x19
  434b20:	bl	4349fc <ferror@plt+0x31ccc>
  434b24:	ldp	x19, x20, [sp, #16]
  434b28:	ldp	x29, x30, [sp], #32
  434b2c:	ret
  434b30:	stp	x29, x30, [sp, #-32]!
  434b34:	mov	x29, sp
  434b38:	stp	x19, x20, [sp, #16]
  434b3c:	mov	x19, x0
  434b40:	mov	x20, x1
  434b44:	mov	w1, #0x0                   	// #0
  434b48:	bl	4341e4 <ferror@plt+0x314b4>
  434b4c:	mov	x2, x20
  434b50:	mov	w1, w0
  434b54:	mov	x0, x19
  434b58:	bl	434af8 <ferror@plt+0x31dc8>
  434b5c:	ldp	x19, x20, [sp, #16]
  434b60:	ldp	x29, x30, [sp], #32
  434b64:	ret
  434b68:	mov	x4, x0
  434b6c:	cmp	w2, #0x1
  434b70:	b.eq	434bac <ferror@plt+0x31e7c>  // b.none
  434b74:	cmp	w2, #0x2
  434b78:	b.eq	434bc0 <ferror@plt+0x31e90>  // b.none
  434b7c:	mov	x0, #0x0                   	// #0
  434b80:	cbz	w2, 434b88 <ferror@plt+0x31e58>
  434b84:	ret
  434b88:	ldr	x0, [x4]
  434b8c:	cbz	x0, 434b84 <ferror@plt+0x31e54>
  434b90:	cbz	x3, 434ba4 <ferror@plt+0x31e74>
  434b94:	cbnz	w2, 434bc8 <ferror@plt+0x31e98>
  434b98:	ldr	x2, [x4, #32]
  434b9c:	add	x2, x2, x1, lsl #2
  434ba0:	str	x2, [x3]
  434ba4:	add	x0, x0, x1, lsl #3
  434ba8:	b	434b84 <ferror@plt+0x31e54>
  434bac:	add	x0, x0, #0x10
  434bb0:	cbz	x3, 434ba4 <ferror@plt+0x31e74>
  434bb4:	ldr	x2, [x0, x1, lsl #3]
  434bb8:	str	x2, [x3]
  434bbc:	b	434ba4 <ferror@plt+0x31e74>
  434bc0:	ldr	x0, [x0, #8]
  434bc4:	b	434b8c <ferror@plt+0x31e5c>
  434bc8:	cmp	w2, #0x2
  434bcc:	b.eq	434bdc <ferror@plt+0x31eac>  // b.none
  434bd0:	cmp	w2, #0x1
  434bd4:	b.ne	434ba4 <ferror@plt+0x31e74>  // b.any
  434bd8:	b	434bb4 <ferror@plt+0x31e84>
  434bdc:	ldr	x2, [x4, #40]
  434be0:	add	x2, x2, x1, lsl #2
  434be4:	str	x2, [x3]
  434be8:	b	434ba4 <ferror@plt+0x31e74>
  434bec:	stp	x29, x30, [sp, #-48]!
  434bf0:	mov	x29, sp
  434bf4:	stp	x19, x20, [sp, #16]
  434bf8:	mov	x19, x1
  434bfc:	mov	w20, w2
  434c00:	mov	x1, x3
  434c04:	mov	w2, w4
  434c08:	str	xzr, [sp, #40]
  434c0c:	tst	w5, #0xff
  434c10:	add	x3, sp, #0x28
  434c14:	csel	x3, x3, xzr, ne  // ne = any
  434c18:	bl	434b68 <ferror@plt+0x31e38>
  434c1c:	str	x19, [x0]
  434c20:	ldr	x0, [sp, #40]
  434c24:	cbz	x0, 434c2c <ferror@plt+0x31efc>
  434c28:	str	w20, [x0]
  434c2c:	ldp	x19, x20, [sp, #16]
  434c30:	ldp	x29, x30, [sp], #48
  434c34:	ret
  434c38:	stp	x29, x30, [sp, #-32]!
  434c3c:	mov	x29, sp
  434c40:	str	xzr, [sp, #24]
  434c44:	add	x3, sp, #0x18
  434c48:	mov	w2, w1
  434c4c:	mov	x1, #0x0                   	// #0
  434c50:	bl	434b68 <ferror@plt+0x31e38>
  434c54:	cmp	x0, #0x0
  434c58:	ldr	x1, [sp, #24]
  434c5c:	csel	x0, x1, x0, ne  // ne = any
  434c60:	ldp	x29, x30, [sp], #32
  434c64:	ret
  434c68:	ldr	w1, [x0, #4]
  434c6c:	tst	w1, #0xfffffffd
  434c70:	b.eq	434c78 <ferror@plt+0x31f48>  // b.none
  434c74:	ret
  434c78:	ldr	x1, [x0, #8]
  434c7c:	add	x1, x1, #0x8
  434c80:	str	x1, [x0, #8]
  434c84:	ldrb	w1, [x0]
  434c88:	cbz	w1, 434c74 <ferror@plt+0x31f44>
  434c8c:	ldr	x1, [x0, #16]
  434c90:	add	x1, x1, #0x4
  434c94:	str	x1, [x0, #16]
  434c98:	b	434c74 <ferror@plt+0x31f44>
  434c9c:	cbz	x1, 434cc0 <ferror@plt+0x31f90>
  434ca0:	ldr	x2, [x0, #16]
  434ca4:	ldr	x3, [x0, #8]
  434ca8:	sub	x0, x2, #0x8
  434cac:	cmp	x2, x3
  434cb0:	csel	x0, x0, xzr, ne  // ne = any
  434cb4:	cmp	x1, x0
  434cb8:	cset	w0, eq  // eq = none
  434cbc:	ret
  434cc0:	mov	w0, #0x0                   	// #0
  434cc4:	b	434cbc <ferror@plt+0x31f8c>
  434cc8:	cbz	x0, 434cdc <ferror@plt+0x31fac>
  434ccc:	ldr	w1, [x0, #48]
  434cd0:	cmp	w1, #0x2
  434cd4:	b.eq	434ce0 <ferror@plt+0x31fb0>  // b.none
  434cd8:	ldr	x0, [x0, #40]
  434cdc:	ret
  434ce0:	ldr	x0, [x0, #40]
  434ce4:	ldr	x0, [x0]
  434ce8:	b	434cdc <ferror@plt+0x31fac>
  434cec:	stp	x29, x30, [sp, #-32]!
  434cf0:	mov	x29, sp
  434cf4:	str	x19, [sp, #16]
  434cf8:	mov	x19, x0
  434cfc:	ldr	x0, [x0, #136]
  434d00:	ldr	x0, [x0]
  434d04:	cbz	x0, 434d18 <ferror@plt+0x31fe8>
  434d08:	str	x0, [x19, #136]
  434d0c:	ldr	x19, [sp, #16]
  434d10:	ldp	x29, x30, [sp], #32
  434d14:	ret
  434d18:	mov	x0, #0x38                  	// #56
  434d1c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  434d20:	stp	xzr, xzr, [x0]
  434d24:	stp	xzr, xzr, [x0, #16]
  434d28:	stp	xzr, xzr, [x0, #32]
  434d2c:	str	xzr, [x0, #48]
  434d30:	ldr	x1, [x19, #136]
  434d34:	str	x1, [x0, #8]
  434d38:	str	x0, [x1]
  434d3c:	b	434d08 <ferror@plt+0x31fd8>
  434d40:	stp	x29, x30, [sp, #-64]!
  434d44:	mov	x29, sp
  434d48:	stp	x19, x20, [sp, #16]
  434d4c:	stp	x21, x22, [sp, #32]
  434d50:	stp	x23, x24, [sp, #48]
  434d54:	mov	x19, x0
  434d58:	mov	x21, x1
  434d5c:	mov	x24, x2
  434d60:	mov	x23, x3
  434d64:	mov	x22, x4
  434d68:	mov	w20, w5
  434d6c:	cbz	x1, 434dc0 <ferror@plt+0x32090>
  434d70:	mov	x0, x19
  434d74:	bl	434cec <ferror@plt+0x31fbc>
  434d78:	mov	x19, x0
  434d7c:	mov	w0, #0x2                   	// #2
  434d80:	str	w0, [x19, #48]
  434d84:	str	x24, [x19, #32]
  434d88:	mov	x0, #0x18                  	// #24
  434d8c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  434d90:	str	x21, [x0]
  434d94:	str	x23, [x0, #8]
  434d98:	str	x23, [x0, #16]
  434d9c:	str	x0, [x19, #40]
  434da0:	str	x22, [x19, #16]
  434da4:	add	x20, x22, w20, uxtw #3
  434da8:	str	x20, [x19, #24]
  434dac:	ldp	x19, x20, [sp, #16]
  434db0:	ldp	x21, x22, [sp, #32]
  434db4:	ldp	x23, x24, [sp, #48]
  434db8:	ldp	x29, x30, [sp], #64
  434dbc:	ret
  434dc0:	ldr	x0, [x0, #136]
  434dc4:	bl	434cc8 <ferror@plt+0x31f98>
  434dc8:	mov	x21, x0
  434dcc:	b	434d70 <ferror@plt+0x32040>
  434dd0:	stp	x29, x30, [sp, #-32]!
  434dd4:	mov	x29, sp
  434dd8:	stp	x19, x20, [sp, #16]
  434ddc:	mov	x19, x1
  434de0:	mov	x20, x2
  434de4:	bl	42e4f4 <ferror@plt+0x2b7c4>
  434de8:	ldr	x1, [x19]
  434dec:	ldrb	w1, [x1, #4]
  434df0:	strb	w1, [x0, #4]
  434df4:	ldr	x1, [x19]
  434df8:	ldp	x2, x3, [x1, #8]
  434dfc:	stp	x2, x3, [x0, #8]
  434e00:	ldrh	w1, [x20, #6]
  434e04:	tbz	w1, #3, 434e28 <ferror@plt+0x320f8>
  434e08:	ldr	x1, [x19]
  434e0c:	ldrh	w1, [x1, #6]
  434e10:	orr	w1, w1, #0x8
  434e14:	strh	w1, [x0, #6]
  434e18:	str	x0, [x19]
  434e1c:	ldp	x19, x20, [sp, #16]
  434e20:	ldp	x29, x30, [sp], #32
  434e24:	ret
  434e28:	ldr	x1, [x19]
  434e2c:	ldrh	w1, [x1, #6]
  434e30:	and	w1, w1, #0xfffffff7
  434e34:	and	w1, w1, #0xffff
  434e38:	b	434e14 <ferror@plt+0x320e4>
  434e3c:	stp	x29, x30, [sp, #-32]!
  434e40:	mov	x29, sp
  434e44:	str	x19, [sp, #16]
  434e48:	mov	x19, x1
  434e4c:	bl	42e4f4 <ferror@plt+0x2b7c4>
  434e50:	mov	w1, #0x53                  	// #83
  434e54:	strb	w1, [x0, #4]
  434e58:	str	x19, [x0, #8]
  434e5c:	strh	wzr, [x0, #6]
  434e60:	ldr	x19, [sp, #16]
  434e64:	ldp	x29, x30, [sp], #32
  434e68:	ret
  434e6c:	stp	x29, x30, [sp, #-48]!
  434e70:	mov	x29, sp
  434e74:	stp	x19, x20, [sp, #16]
  434e78:	str	x21, [sp, #32]
  434e7c:	mov	x20, x0
  434e80:	lsl	x21, x1, #3
  434e84:	cbz	x2, 434e98 <ferror@plt+0x32168>
  434e88:	mov	x19, x2
  434e8c:	lsl	x0, x1, #4
  434e90:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  434e94:	str	x0, [x19]
  434e98:	mov	x1, x21
  434e9c:	mov	x0, x20
  434ea0:	bl	42f1e8 <ferror@plt+0x2c4b8>
  434ea4:	ldp	x19, x20, [sp, #16]
  434ea8:	ldr	x21, [sp, #32]
  434eac:	ldp	x29, x30, [sp], #48
  434eb0:	ret
  434eb4:	stp	x29, x30, [sp, #-64]!
  434eb8:	mov	x29, sp
  434ebc:	stp	x19, x20, [sp, #16]
  434ec0:	mov	x20, x0
  434ec4:	ldr	x19, [x0, #16]
  434ec8:	ldr	x0, [x0, #24]
  434ecc:	cmp	x19, x0
  434ed0:	b.hi	434f34 <ferror@plt+0x32204>  // b.pmore
  434ed4:	stp	x21, x22, [sp, #32]
  434ed8:	mov	x21, x1
  434edc:	mov	x22, x2
  434ee0:	mov	w2, w3
  434ee4:	cbz	x1, 434f18 <ferror@plt+0x321e8>
  434ee8:	str	x23, [sp, #48]
  434eec:	ldr	x23, [x20, #8]
  434ef0:	cbz	x5, 434f08 <ferror@plt+0x321d8>
  434ef4:	mov	w3, w4
  434ef8:	mov	w1, w6
  434efc:	mov	x0, x5
  434f00:	bl	4327a0 <ferror@plt+0x2fa70>
  434f04:	mov	w2, w0
  434f08:	sub	x23, x19, x23
  434f0c:	ubfx	x23, x23, #3, #32
  434f10:	str	w2, [x21, x23, lsl #2]
  434f14:	ldr	x23, [sp, #48]
  434f18:	mov	x0, x19
  434f1c:	str	x22, [x0], #8
  434f20:	str	x0, [x20, #16]
  434f24:	ldp	x21, x22, [sp, #32]
  434f28:	ldp	x19, x20, [sp, #16]
  434f2c:	ldp	x29, x30, [sp], #64
  434f30:	ret
  434f34:	stp	x21, x22, [sp, #32]
  434f38:	str	x23, [sp, #48]
  434f3c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434f40:	add	x2, x2, #0x7e0
  434f44:	mov	w1, #0x953                 	// #2387
  434f48:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434f4c:	add	x0, x0, #0x7f8
  434f50:	bl	4102b4 <ferror@plt+0xd584>
  434f54:	stp	x29, x30, [sp, #-48]!
  434f58:	mov	x29, sp
  434f5c:	stp	x19, x20, [sp, #16]
  434f60:	mov	x19, x1
  434f64:	ldrb	w1, [x1, #18]
  434f68:	and	w1, w1, #0x3
  434f6c:	cmp	w1, #0x2
  434f70:	b.eq	434f84 <ferror@plt+0x32254>  // b.none
  434f74:	mov	w0, #0x1                   	// #1
  434f78:	ldp	x19, x20, [sp, #16]
  434f7c:	ldp	x29, x30, [sp], #48
  434f80:	ret
  434f84:	str	x21, [sp, #32]
  434f88:	mov	x20, x0
  434f8c:	ldr	x21, [x19, #24]
  434f90:	ldrb	w0, [x21, #19]
  434f94:	tbz	w0, #5, 434fa0 <ferror@plt+0x32270>
  434f98:	ldr	x21, [sp, #32]
  434f9c:	b	434f74 <ferror@plt+0x32244>
  434fa0:	ldr	w1, [x21, #8]
  434fa4:	ldr	x0, [x20, #40]
  434fa8:	bl	432bf0 <ferror@plt+0x2fec0>
  434fac:	ldr	w0, [x0, #20]
  434fb0:	cbz	w0, 434fbc <ferror@plt+0x3228c>
  434fb4:	ldr	x21, [sp, #32]
  434fb8:	b	434f74 <ferror@plt+0x32244>
  434fbc:	ldr	x5, [x19]
  434fc0:	adrp	x4, 47a000 <_obstack_memory_used@@Base+0x25c60>
  434fc4:	add	x4, x4, #0x810
  434fc8:	mov	w3, #0x0                   	// #0
  434fcc:	ldr	w2, [x21, #8]
  434fd0:	mov	w1, #0xe                   	// #14
  434fd4:	mov	x0, x20
  434fd8:	bl	426c74 <ferror@plt+0x23f44>
  434fdc:	ldr	x21, [sp, #32]
  434fe0:	b	434f74 <ferror@plt+0x32244>
  434fe4:	sub	w3, w2, #0x1
  434fe8:	cbz	w2, 435044 <ferror@plt+0x32314>
  434fec:	mov	w4, w3
  434ff0:	add	x4, x4, #0x1
  434ff4:	add	x4, x1, x4
  434ff8:	mov	w5, #0x5c                  	// #92
  434ffc:	mov	w6, #0x6e                  	// #110
  435000:	b	43501c <ferror@plt+0x322ec>
  435004:	mov	x3, x0
  435008:	strb	w5, [x3], #1
  43500c:	mov	x0, x3
  435010:	strb	w2, [x0], #1
  435014:	cmp	x4, x1
  435018:	b.eq	435044 <ferror@plt+0x32314>  // b.none
  43501c:	ldrb	w2, [x1], #1
  435020:	cmp	w2, #0x22
  435024:	b.eq	435004 <ferror@plt+0x322d4>  // b.none
  435028:	cmp	w2, #0x5c
  43502c:	b.eq	435004 <ferror@plt+0x322d4>  // b.none
  435030:	mov	x3, x0
  435034:	cmp	w2, #0xa
  435038:	b.ne	43500c <ferror@plt+0x322dc>  // b.any
  43503c:	mov	w2, w6
  435040:	b	435004 <ferror@plt+0x322d4>
  435044:	ret
  435048:	stp	x29, x30, [sp, #-80]!
  43504c:	mov	x29, sp
  435050:	stp	x19, x20, [sp, #16]
  435054:	stp	x21, x22, [sp, #32]
  435058:	mov	x19, x0
  43505c:	mov	x20, x1
  435060:	ldr	w3, [x1, #24]
  435064:	cmp	w3, #0x5
  435068:	b.eq	4352dc <ferror@plt+0x325ac>  // b.none
  43506c:	mov	w1, w2
  435070:	b.ls	435098 <ferror@plt+0x32368>  // b.plast
  435074:	cmp	w3, #0x9
  435078:	b.eq	43542c <ferror@plt+0x326fc>  // b.none
  43507c:	b.ls	4350cc <ferror@plt+0x3239c>  // b.plast
  435080:	cmp	w3, #0xa
  435084:	b.ne	435108 <ferror@plt+0x323d8>  // b.any
  435088:	ldr	x1, [x0, #1040]
  43508c:	blr	x1
  435090:	mov	w21, w0
  435094:	b	435124 <ferror@plt+0x323f4>
  435098:	cmp	w3, #0x3
  43509c:	b.hi	435298 <ferror@plt+0x32568>  // b.pmore
  4350a0:	cmp	w3, #0x1
  4350a4:	b.hi	4351fc <ferror@plt+0x324cc>  // b.pmore
  4350a8:	cbnz	w3, 4352dc <ferror@plt+0x325ac>
  4350ac:	ldrb	w0, [x0, #1160]
  4350b0:	cbz	w0, 4352a8 <ferror@plt+0x32578>
  4350b4:	ldr	x0, [x19, #40]
  4350b8:	ldr	w1, [x0, #60]
  4350bc:	ldr	x0, [x19, #40]
  4350c0:	bl	433188 <ferror@plt+0x30458>
  4350c4:	mov	w21, w0
  4350c8:	b	435124 <ferror@plt+0x323f4>
  4350cc:	cmp	w3, #0x6
  4350d0:	b.eq	4352c0 <ferror@plt+0x32590>  // b.none
  4350d4:	cmp	w3, #0x8
  4350d8:	b.ne	435108 <ferror@plt+0x323d8>  // b.any
  4350dc:	ldrb	w0, [x0, #1134]
  4350e0:	cbnz	w0, 435158 <ferror@plt+0x32428>
  4350e4:	mov	x0, x19
  4350e8:	bl	42cf48 <ferror@plt+0x2a218>
  4350ec:	mov	x20, x0
  4350f0:	ldr	x0, [x0, #88]
  4350f4:	cbz	x0, 435174 <ferror@plt+0x32444>
  4350f8:	ldr	x20, [x20, #88]
  4350fc:	cbnz	x20, 435144 <ferror@plt+0x32414>
  435100:	mov	w21, #0x1                   	// #1
  435104:	b	435124 <ferror@plt+0x323f4>
  435108:	ldr	x3, [x20]
  43510c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435110:	add	x2, x2, #0x828
  435114:	mov	w1, #0x4                   	// #4
  435118:	mov	x0, x19
  43511c:	bl	426a10 <ferror@plt+0x23ce0>
  435120:	mov	w21, #0x1                   	// #1
  435124:	mov	x1, #0x15                  	// #21
  435128:	mov	x0, x19
  43512c:	bl	42f440 <ferror@plt+0x2c710>
  435130:	mov	x20, x0
  435134:	mov	w2, w21
  435138:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  43513c:	add	x1, x1, #0xd40
  435140:	bl	402720 <sprintf@plt>
  435144:	mov	x0, x20
  435148:	ldp	x19, x20, [sp, #16]
  43514c:	ldp	x21, x22, [sp, #32]
  435150:	ldp	x29, x30, [sp], #80
  435154:	ret
  435158:	ldr	x3, [x20]
  43515c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435160:	add	x2, x2, #0x848
  435164:	mov	w1, #0x14                  	// #20
  435168:	mov	x0, x19
  43516c:	bl	426a88 <ferror@plt+0x23d58>
  435170:	b	4350e4 <ferror@plt+0x323b4>
  435174:	mov	x0, x20
  435178:	bl	42cf50 <ferror@plt+0x2a220>
  43517c:	cbz	x0, 4350f8 <ferror@plt+0x323c8>
  435180:	bl	42cec4 <ferror@plt+0x2a194>
  435184:	cbz	x0, 4351d8 <ferror@plt+0x324a8>
  435188:	add	x0, x0, #0x58
  43518c:	bl	402790 <localtime@plt>
  435190:	cbz	x0, 4351d8 <ferror@plt+0x324a8>
  435194:	stp	x23, x24, [sp, #48]
  435198:	bl	402bb0 <asctime@plt>
  43519c:	mov	x23, x0
  4351a0:	bl	402680 <strlen@plt>
  4351a4:	mov	x22, x0
  4351a8:	add	x1, x0, #0x2
  4351ac:	mov	x0, x19
  4351b0:	bl	42f440 <ferror@plt+0x2c710>
  4351b4:	mov	x21, x0
  4351b8:	mov	w24, #0x22                  	// #34
  4351bc:	strb	w24, [x0], #1
  4351c0:	mov	x1, x23
  4351c4:	bl	402b30 <strcpy@plt>
  4351c8:	strb	w24, [x21, x22]
  4351cc:	str	x21, [x20, #88]
  4351d0:	ldp	x23, x24, [sp, #48]
  4351d4:	b	4350f8 <ferror@plt+0x323c8>
  4351d8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4351dc:	add	x2, x2, #0x878
  4351e0:	mov	w1, #0x0                   	// #0
  4351e4:	mov	x0, x19
  4351e8:	bl	426f1c <ferror@plt+0x241ec>
  4351ec:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4351f0:	add	x0, x0, #0x8a0
  4351f4:	str	x0, [x20, #88]
  4351f8:	b	4350f8 <ferror@plt+0x323c8>
  4351fc:	cmp	w3, #0x2
  435200:	b.eq	435268 <ferror@plt+0x32538>  // b.none
  435204:	ldr	x0, [x0, #288]
  435208:	bl	42cebc <ferror@plt+0x2a18c>
  43520c:	mov	x21, x0
  435210:	cbz	x0, 43527c <ferror@plt+0x3254c>
  435214:	ldr	x1, [x19, #1080]
  435218:	cbz	x1, 435228 <ferror@plt+0x324f8>
  43521c:	mov	x0, x21
  435220:	blr	x1
  435224:	mov	x21, x0
  435228:	mov	x0, x21
  43522c:	bl	402680 <strlen@plt>
  435230:	mov	x22, x0
  435234:	lsl	w1, w0, #1
  435238:	add	w1, w1, #0x3
  43523c:	mov	x0, x19
  435240:	bl	42f440 <ferror@plt+0x2c710>
  435244:	mov	x20, x0
  435248:	mov	w19, #0x22                  	// #34
  43524c:	strb	w19, [x0], #1
  435250:	mov	w2, w22
  435254:	mov	x1, x21
  435258:	bl	434fe4 <ferror@plt+0x322b4>
  43525c:	strb	w19, [x0]
  435260:	strb	wzr, [x0, #1]
  435264:	b	435144 <ferror@plt+0x32414>
  435268:	ldr	x0, [x0, #40]
  43526c:	ldr	w1, [x0, #60]
  435270:	bl	4331f4 <ferror@plt+0x304c4>
  435274:	mov	x21, x0
  435278:	b	435214 <ferror@plt+0x324e4>
  43527c:	stp	x23, x24, [sp, #48]
  435280:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435284:	add	x2, x2, #0x8c0
  435288:	mov	w1, #0x1c5                 	// #453
  43528c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435290:	add	x0, x0, #0x7f8
  435294:	bl	4102b4 <ferror@plt+0xd584>
  435298:	ldr	x0, [x0, #40]
  43529c:	ldr	w21, [x0, #48]
  4352a0:	sub	w21, w21, #0x1
  4352a4:	b	435124 <ferror@plt+0x323f4>
  4352a8:	mov	x3, #0x0                   	// #0
  4352ac:	mov	w2, #0x0                   	// #0
  4352b0:	ldr	x0, [x19, #40]
  4352b4:	bl	4332f0 <ferror@plt+0x305c0>
  4352b8:	mov	w1, w0
  4352bc:	b	4350bc <ferror@plt+0x3238c>
  4352c0:	ldr	x0, [x0]
  4352c4:	mov	w21, #0x1                   	// #1
  4352c8:	cbz	x0, 435124 <ferror@plt+0x323f4>
  4352cc:	ldrb	w0, [x0, #106]
  4352d0:	cmp	w0, #0x0
  4352d4:	cset	w21, eq  // eq = none
  4352d8:	b	435124 <ferror@plt+0x323f4>
  4352dc:	ldrb	w0, [x19, #1134]
  4352e0:	cbnz	w0, 435300 <ferror@plt+0x325d0>
  4352e4:	ldr	x0, [x19, #640]
  4352e8:	cbz	x0, 43531c <ferror@plt+0x325ec>
  4352ec:	ldr	w0, [x20, #24]
  4352f0:	cmp	w0, #0x1
  4352f4:	b.eq	435424 <ferror@plt+0x326f4>  // b.none
  4352f8:	ldr	x20, [x19, #648]
  4352fc:	b	4350fc <ferror@plt+0x323cc>
  435300:	ldr	x3, [x20]
  435304:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435308:	add	x2, x2, #0x848
  43530c:	mov	w1, #0x14                  	// #20
  435310:	mov	x0, x19
  435314:	bl	426a88 <ferror@plt+0x23d58>
  435318:	b	4352e4 <ferror@plt+0x325b4>
  43531c:	ldr	x0, [x19, #656]
  435320:	cmn	x0, #0x2
  435324:	b.eq	4353a4 <ferror@plt+0x32674>  // b.none
  435328:	ldr	x0, [x19, #656]
  43532c:	tbnz	x0, #63, 4353bc <ferror@plt+0x3268c>
  435330:	add	x0, x19, #0x290
  435334:	bl	4028d0 <gmtime@plt>
  435338:	mov	x21, x0
  43533c:	cbz	x21, 4353f4 <ferror@plt+0x326c4>
  435340:	mov	x1, #0xe                   	// #14
  435344:	mov	x0, x19
  435348:	bl	42f440 <ferror@plt+0x2c710>
  43534c:	str	x0, [x19, #640]
  435350:	ldr	w4, [x21, #20]
  435354:	ldrsw	x2, [x21, #16]
  435358:	add	w4, w4, #0x76c
  43535c:	ldr	w3, [x21, #12]
  435360:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  435364:	add	x1, x1, #0xc0
  435368:	ldr	x2, [x1, x2, lsl #3]
  43536c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435370:	add	x1, x1, #0x8d8
  435374:	bl	402720 <sprintf@plt>
  435378:	mov	x1, #0xb                   	// #11
  43537c:	mov	x0, x19
  435380:	bl	42f440 <ferror@plt+0x2c710>
  435384:	str	x0, [x19, #648]
  435388:	ldr	w4, [x21]
  43538c:	ldr	w3, [x21, #4]
  435390:	ldr	w2, [x21, #8]
  435394:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435398:	add	x1, x1, #0x8e8
  43539c:	bl	402720 <sprintf@plt>
  4353a0:	b	4352ec <ferror@plt+0x325bc>
  4353a4:	ldr	x1, [x19, #1056]
  4353a8:	cbz	x1, 4353bc <ferror@plt+0x3268c>
  4353ac:	mov	x0, x19
  4353b0:	blr	x1
  4353b4:	str	x0, [x19, #656]
  4353b8:	b	435328 <ferror@plt+0x325f8>
  4353bc:	bl	402c40 <__errno_location@plt>
  4353c0:	mov	x21, x0
  4353c4:	str	wzr, [x0]
  4353c8:	mov	x0, #0x0                   	// #0
  4353cc:	bl	4027e0 <time@plt>
  4353d0:	str	x0, [sp, #72]
  4353d4:	cmn	x0, #0x1
  4353d8:	b.ne	4353e4 <ferror@plt+0x326b4>  // b.any
  4353dc:	ldr	w0, [x21]
  4353e0:	cbnz	w0, 4353f4 <ferror@plt+0x326c4>
  4353e4:	add	x0, sp, #0x48
  4353e8:	bl	402790 <localtime@plt>
  4353ec:	mov	x21, x0
  4353f0:	b	43533c <ferror@plt+0x3260c>
  4353f4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4353f8:	add	x2, x2, #0x900
  4353fc:	mov	w1, #0x0                   	// #0
  435400:	mov	x0, x19
  435404:	bl	426f1c <ferror@plt+0x241ec>
  435408:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43540c:	add	x0, x0, #0x928
  435410:	str	x0, [x19, #640]
  435414:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435418:	add	x0, x0, #0x938
  43541c:	str	x0, [x19, #648]
  435420:	b	4352ec <ferror@plt+0x325bc>
  435424:	ldr	x20, [x19, #640]
  435428:	b	4350fc <ferror@plt+0x323cc>
  43542c:	ldrb	w0, [x0, #1244]
  435430:	cbz	w0, 43543c <ferror@plt+0x3270c>
  435434:	ldrb	w0, [x19, #16]
  435438:	cbnz	w0, 43544c <ferror@plt+0x3271c>
  43543c:	ldr	w21, [x19, #1376]
  435440:	add	w0, w21, #0x1
  435444:	str	w0, [x19, #1376]
  435448:	b	435124 <ferror@plt+0x323f4>
  43544c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435450:	add	x2, x2, #0x948
  435454:	mov	w1, #0x3                   	// #3
  435458:	mov	x0, x19
  43545c:	bl	426a10 <ferror@plt+0x23ce0>
  435460:	b	43543c <ferror@plt+0x3270c>
  435464:	ldrh	w4, [x1, #16]
  435468:	cmp	w4, w3
  43546c:	b.eq	435578 <ferror@plt+0x32848>  // b.none
  435470:	stp	x29, x30, [sp, #-48]!
  435474:	mov	x29, sp
  435478:	stp	x19, x20, [sp, #16]
  43547c:	str	x21, [sp, #32]
  435480:	mov	x20, x0
  435484:	mov	x19, x1
  435488:	mov	x21, x2
  43548c:	b.ls	435538 <ferror@plt+0x32808>  // b.plast
  435490:	add	w0, w3, #0x1
  435494:	cmp	w4, w0
  435498:	b.ne	4354a4 <ferror@plt+0x32774>  // b.any
  43549c:	ldrb	w1, [x1, #19]
  4354a0:	tbnz	w1, #3, 4354e0 <ferror@plt+0x327b0>
  4354a4:	mov	w5, w3
  4354a8:	ldr	x3, [x21]
  4354ac:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4354b0:	add	x2, x2, #0xa28
  4354b4:	mov	w1, #0x3                   	// #3
  4354b8:	mov	x0, x20
  4354bc:	bl	426a10 <ferror@plt+0x23ce0>
  4354c0:	ldr	w2, [x19, #8]
  4354c4:	mov	w0, #0x0                   	// #0
  4354c8:	cmp	w2, #0x2
  4354cc:	b.hi	435558 <ferror@plt+0x32828>  // b.pmore
  4354d0:	ldp	x19, x20, [sp, #16]
  4354d4:	ldr	x21, [sp, #32]
  4354d8:	ldp	x29, x30, [sp], #48
  4354dc:	ret
  4354e0:	ldrb	w2, [x20, #1154]
  4354e4:	mov	w0, #0x1                   	// #1
  4354e8:	cbz	w2, 4354d0 <ferror@plt+0x327a0>
  4354ec:	tbnz	w1, #4, 4354d0 <ferror@plt+0x327a0>
  4354f0:	ldrb	w1, [x20, #1167]
  4354f4:	cbnz	w1, 4354d0 <ferror@plt+0x327a0>
  4354f8:	ldrb	w0, [x20, #1120]
  4354fc:	cbz	w0, 43551c <ferror@plt+0x327ec>
  435500:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435504:	add	x2, x2, #0x988
  435508:	mov	w1, #0x2                   	// #2
  43550c:	mov	x0, x20
  435510:	bl	426a10 <ferror@plt+0x23ce0>
  435514:	mov	w0, #0x1                   	// #1
  435518:	b	4354d0 <ferror@plt+0x327a0>
  43551c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435520:	add	x2, x2, #0x9d8
  435524:	mov	w1, #0x2                   	// #2
  435528:	mov	x0, x20
  43552c:	bl	426a10 <ferror@plt+0x23ce0>
  435530:	mov	w0, #0x1                   	// #1
  435534:	b	4354d0 <ferror@plt+0x327a0>
  435538:	mov	w5, w4
  43553c:	mov	w4, w3
  435540:	ldr	x3, [x2]
  435544:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435548:	add	x2, x2, #0xa60
  43554c:	mov	w1, #0x3                   	// #3
  435550:	bl	426a10 <ferror@plt+0x23ce0>
  435554:	b	4354c0 <ferror@plt+0x32790>
  435558:	ldr	x4, [x21]
  43555c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435560:	add	x3, x3, #0xa98
  435564:	mov	w1, #0x5                   	// #5
  435568:	mov	x0, x20
  43556c:	bl	426de8 <ferror@plt+0x240b8>
  435570:	mov	w0, #0x0                   	// #0
  435574:	b	4354d0 <ferror@plt+0x327a0>
  435578:	mov	w0, #0x1                   	// #1
  43557c:	ret
  435580:	stp	x29, x30, [sp, #-48]!
  435584:	mov	x29, sp
  435588:	stp	x19, x20, [sp, #16]
  43558c:	stp	x21, x22, [sp, #32]
  435590:	mov	x22, x0
  435594:	mov	x20, x1
  435598:	mov	x21, x2
  43559c:	mov	w19, w3
  4355a0:	cbz	x1, 4355e0 <ferror@plt+0x328b0>
  4355a4:	mov	x0, x22
  4355a8:	bl	434cec <ferror@plt+0x31fbc>
  4355ac:	mov	w1, #0x1                   	// #1
  4355b0:	str	w1, [x0, #48]
  4355b4:	str	x20, [x0, #40]
  4355b8:	str	xzr, [x0, #32]
  4355bc:	str	x21, [x0, #16]
  4355c0:	ubfiz	x3, x19, #1, #32
  4355c4:	add	x19, x3, w19, uxtw
  4355c8:	add	x19, x21, x19, lsl #3
  4355cc:	str	x19, [x0, #24]
  4355d0:	ldp	x19, x20, [sp, #16]
  4355d4:	ldp	x21, x22, [sp, #32]
  4355d8:	ldp	x29, x30, [sp], #48
  4355dc:	ret
  4355e0:	ldr	x0, [x0, #136]
  4355e4:	bl	434cc8 <ferror@plt+0x31f98>
  4355e8:	mov	x20, x0
  4355ec:	b	4355a4 <ferror@plt+0x32874>
  4355f0:	stp	x29, x30, [sp, #-80]!
  4355f4:	mov	x29, sp
  4355f8:	stp	x19, x20, [sp, #16]
  4355fc:	stp	x21, x22, [sp, #32]
  435600:	stp	x23, x24, [sp, #48]
  435604:	mov	x19, x0
  435608:	mov	w22, w2
  43560c:	ldr	w0, [x1, #24]
  435610:	cmp	w0, #0x7
  435614:	b.ne	435634 <ferror@plt+0x32904>  // b.any
  435618:	ldrb	w1, [x19, #16]
  43561c:	mov	w0, #0x0                   	// #0
  435620:	cbnz	w1, 43570c <ferror@plt+0x329dc>
  435624:	mov	w1, w2
  435628:	mov	x0, x19
  43562c:	bl	426370 <ferror@plt+0x23640>
  435630:	b	43570c <ferror@plt+0x329dc>
  435634:	mov	x20, x1
  435638:	mov	w2, w3
  43563c:	mov	x0, x19
  435640:	bl	435048 <ferror@plt+0x32318>
  435644:	mov	x24, x0
  435648:	bl	402680 <strlen@plt>
  43564c:	mov	x21, x0
  435650:	add	x0, x0, #0x10
  435654:	and	x0, x0, #0xfffffffffffffff0
  435658:	sub	sp, sp, x0
  43565c:	mov	x23, sp
  435660:	mov	x2, x21
  435664:	mov	x1, x24
  435668:	mov	x0, x23
  43566c:	bl	402620 <memcpy@plt>
  435670:	mov	w0, #0xa                   	// #10
  435674:	strb	w0, [x23, x21]
  435678:	mov	w3, #0x1                   	// #1
  43567c:	mov	x2, x21
  435680:	mov	x1, x23
  435684:	mov	x0, x19
  435688:	bl	425bf4 <ferror@plt+0x22ec4>
  43568c:	mov	x0, x19
  435690:	bl	42da34 <ferror@plt+0x2ad04>
  435694:	mov	x0, x19
  435698:	bl	42e4f4 <ferror@plt+0x2b7c4>
  43569c:	str	x0, [x19, #448]
  4356a0:	mov	x0, x19
  4356a4:	bl	430388 <ferror@plt+0x2d658>
  4356a8:	mov	x21, x0
  4356ac:	str	w22, [x0]
  4356b0:	ldr	x0, [x19, #136]
  4356b4:	ldr	w0, [x0, #48]
  4356b8:	cmp	w0, #0x2
  4356bc:	b.eq	435724 <ferror@plt+0x329f4>  // b.none
  4356c0:	mov	w3, #0x1                   	// #1
  4356c4:	mov	x2, x21
  4356c8:	mov	x1, #0x0                   	// #0
  4356cc:	mov	x0, x19
  4356d0:	bl	435580 <ferror@plt+0x32850>
  4356d4:	ldr	x0, [x19]
  4356d8:	ldr	x1, [x0]
  4356dc:	ldr	x0, [x0, #32]
  4356e0:	cmp	x1, x0
  4356e4:	b.eq	435700 <ferror@plt+0x329d0>  // b.none
  4356e8:	ldr	x3, [x20]
  4356ec:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4356f0:	add	x2, x2, #0x828
  4356f4:	mov	w1, #0x4                   	// #4
  4356f8:	mov	x0, x19
  4356fc:	bl	426a10 <ferror@plt+0x23ce0>
  435700:	mov	x0, x19
  435704:	bl	425d00 <ferror@plt+0x22fd0>
  435708:	mov	w0, #0x1                   	// #1
  43570c:	mov	sp, x29
  435710:	ldp	x19, x20, [sp, #16]
  435714:	ldp	x21, x22, [sp, #32]
  435718:	ldp	x23, x24, [sp, #48]
  43571c:	ldp	x29, x30, [sp], #80
  435720:	ret
  435724:	str	xzr, [x29, #72]
  435728:	add	x2, x29, #0x48
  43572c:	mov	x1, #0x1                   	// #1
  435730:	mov	x0, x19
  435734:	bl	434e6c <ferror@plt+0x3213c>
  435738:	mov	x23, x0
  43573c:	mov	w3, #0x1                   	// #1
  435740:	mov	w2, w22
  435744:	mov	x1, x20
  435748:	ldr	x0, [x19, #40]
  43574c:	bl	4326ec <ferror@plt+0x2f9bc>
  435750:	ldr	x1, [x19, #40]
  435754:	ldr	w3, [x1, #112]
  435758:	mov	w6, #0x0                   	// #0
  43575c:	mov	x5, x0
  435760:	mov	w4, w3
  435764:	mov	x2, x21
  435768:	ldr	x1, [x29, #72]
  43576c:	mov	x0, x23
  435770:	bl	434eb4 <ferror@plt+0x32184>
  435774:	mov	w5, #0x1                   	// #1
  435778:	ldr	x4, [x23, #8]
  43577c:	ldr	x3, [x29, #72]
  435780:	mov	x2, x23
  435784:	mov	x1, x20
  435788:	mov	x0, x19
  43578c:	bl	434d40 <ferror@plt+0x32010>
  435790:	b	4356d4 <ferror@plt+0x329a4>
  435794:	stp	x29, x30, [sp, #-48]!
  435798:	mov	x29, sp
  43579c:	stp	x19, x20, [sp, #16]
  4357a0:	str	x21, [sp, #32]
  4357a4:	mov	x20, x1
  4357a8:	mov	x19, x2
  4357ac:	mov	x21, x3
  4357b0:	bl	434cec <ferror@plt+0x31fbc>
  4357b4:	mov	w1, #0x1                   	// #1
  4357b8:	str	w1, [x0, #48]
  4357bc:	str	x20, [x0, #40]
  4357c0:	str	xzr, [x0, #32]
  4357c4:	str	x19, [x0, #16]
  4357c8:	add	x19, x19, x21
  4357cc:	str	x19, [x0, #24]
  4357d0:	ldrh	w0, [x20, #18]
  4357d4:	orr	w0, w0, #0x40
  4357d8:	strh	w0, [x20, #18]
  4357dc:	ldp	x19, x20, [sp, #16]
  4357e0:	ldr	x21, [sp, #32]
  4357e4:	ldp	x29, x30, [sp], #48
  4357e8:	ret
  4357ec:	stp	x29, x30, [sp, #-48]!
  4357f0:	mov	x29, sp
  4357f4:	stp	x19, x20, [sp, #16]
  4357f8:	stp	x21, x22, [sp, #32]
  4357fc:	mov	x20, x0
  435800:	ldr	x19, [x0, #136]
  435804:	add	x0, x0, #0x50
  435808:	cmp	x19, x0
  43580c:	b.eq	435884 <ferror@plt+0x32b54>  // b.none
  435810:	ldr	x21, [x19, #40]
  435814:	cbz	x21, 435854 <ferror@plt+0x32b24>
  435818:	ldr	w0, [x19, #48]
  43581c:	cmp	w0, #0x2
  435820:	b.eq	43589c <ferror@plt+0x32b6c>  // b.none
  435824:	ldr	x0, [x19, #8]
  435828:	bl	434cc8 <ferror@plt+0x31f98>
  43582c:	cmp	x21, x0
  435830:	b.eq	435848 <ferror@plt+0x32b18>  // b.none
  435834:	ldrh	w0, [x21, #18]
  435838:	ubfx	x1, x0, #2, #8
  43583c:	and	w1, w1, #0xffffffef
  435840:	bfi	w0, w1, #2, #8
  435844:	strh	w0, [x21, #18]
  435848:	ldr	x0, [x20, #184]
  43584c:	cmp	x0, x21
  435850:	b.eq	4358cc <ferror@plt+0x32b9c>  // b.none
  435854:	ldr	x0, [x19, #32]
  435858:	cbz	x0, 435860 <ferror@plt+0x32b30>
  43585c:	bl	42f40c <ferror@plt+0x2c6dc>
  435860:	ldr	x0, [x19, #8]
  435864:	str	x0, [x20, #136]
  435868:	str	xzr, [x0]
  43586c:	mov	x0, x19
  435870:	bl	402a90 <free@plt>
  435874:	ldp	x19, x20, [sp, #16]
  435878:	ldp	x21, x22, [sp, #32]
  43587c:	ldp	x29, x30, [sp], #48
  435880:	ret
  435884:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435888:	add	x2, x2, #0xab0
  43588c:	mov	w1, #0x9eb                 	// #2539
  435890:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435894:	add	x0, x0, #0x7f8
  435898:	bl	4102b4 <ferror@plt+0xd584>
  43589c:	ldr	x22, [x21]
  4358a0:	ldr	x0, [x19, #32]
  4358a4:	cbz	x0, 4358b4 <ferror@plt+0x32b84>
  4358a8:	ldr	x0, [x21, #8]
  4358ac:	cbz	x0, 4358b4 <ferror@plt+0x32b84>
  4358b0:	bl	402a90 <free@plt>
  4358b4:	mov	x0, x21
  4358b8:	bl	402a90 <free@plt>
  4358bc:	str	xzr, [x19, #40]
  4358c0:	mov	x21, x22
  4358c4:	cbz	x22, 435848 <ferror@plt+0x32b18>
  4358c8:	b	435824 <ferror@plt+0x32af4>
  4358cc:	ldr	x0, [x19, #8]
  4358d0:	cbnz	x0, 435854 <ferror@plt+0x32b24>
  4358d4:	str	xzr, [x20, #184]
  4358d8:	b	435854 <ferror@plt+0x32b24>
  4358dc:	ldr	x0, [x0, #136]
  4358e0:	ldr	w1, [x0, #48]
  4358e4:	cmp	w1, #0x2
  4358e8:	b.eq	43590c <ferror@plt+0x32bdc>  // b.none
  4358ec:	ldr	x1, [x0, #40]
  4358f0:	mov	w0, #0x0                   	// #0
  4358f4:	cbz	x1, 435908 <ferror@plt+0x32bd8>
  4358f8:	ldr	x1, [x1, #24]
  4358fc:	cbz	x1, 435908 <ferror@plt+0x32bd8>
  435900:	ldrb	w0, [x1, #19]
  435904:	ubfx	x0, x0, #4, #1
  435908:	ret
  43590c:	ldr	x0, [x0, #40]
  435910:	ldr	x1, [x0]
  435914:	b	4358f0 <ferror@plt+0x32bc0>
  435918:	ldr	w2, [x0, #496]
  43591c:	add	w2, w2, w1
  435920:	str	w2, [x0, #496]
  435924:	sub	w2, w1, #0x1
  435928:	cbnz	w1, 43593c <ferror@plt+0x32c0c>
  43592c:	ret
  435930:	sub	w2, w2, #0x1
  435934:	cmn	w2, #0x1
  435938:	b.eq	43592c <ferror@plt+0x32bfc>  // b.none
  43593c:	ldr	x1, [x0, #448]
  435940:	sub	x1, x1, #0x18
  435944:	str	x1, [x0, #448]
  435948:	ldr	x3, [x0, #488]
  43594c:	ldr	x4, [x3, #16]
  435950:	cmp	x1, x4
  435954:	b.ne	435930 <ferror@plt+0x32c00>  // b.any
  435958:	ldr	x1, [x3, #8]
  43595c:	cbz	x1, 435930 <ferror@plt+0x32c00>
  435960:	str	x1, [x0, #488]
  435964:	ldr	x1, [x1, #24]
  435968:	str	x1, [x0, #448]
  43596c:	b	435930 <ferror@plt+0x32c00>
  435970:	stp	x29, x30, [sp, #-16]!
  435974:	mov	x29, sp
  435978:	ldr	x2, [x0, #136]
  43597c:	ldr	x3, [x2, #8]
  435980:	cbz	x3, 4359ac <ferror@plt+0x32c7c>
  435984:	cmp	w1, #0x1
  435988:	b.ne	4359b4 <ferror@plt+0x32c84>  // b.any
  43598c:	ldr	w1, [x2, #48]
  435990:	cmp	w1, #0x1
  435994:	b.eq	4359cc <ferror@plt+0x32c9c>  // b.none
  435998:	cbnz	w1, 4359e0 <ferror@plt+0x32cb0>
  43599c:	ldr	x0, [x2, #16]
  4359a0:	sub	x0, x0, #0x8
  4359a4:	str	x0, [x2, #16]
  4359a8:	b	4359d8 <ferror@plt+0x32ca8>
  4359ac:	bl	435918 <ferror@plt+0x32be8>
  4359b0:	b	4359d8 <ferror@plt+0x32ca8>
  4359b4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4359b8:	add	x2, x2, #0xac8
  4359bc:	mov	w1, #0xb8f                 	// #2959
  4359c0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4359c4:	add	x0, x0, #0x7f8
  4359c8:	bl	4102b4 <ferror@plt+0xd584>
  4359cc:	ldr	x0, [x2, #16]
  4359d0:	sub	x0, x0, #0x18
  4359d4:	str	x0, [x2, #16]
  4359d8:	ldp	x29, x30, [sp], #16
  4359dc:	ret
  4359e0:	cmp	w1, #0x2
  4359e4:	b.ne	435a28 <ferror@plt+0x32cf8>  // b.any
  4359e8:	ldr	x1, [x2, #16]
  4359ec:	sub	x1, x1, #0x8
  4359f0:	str	x1, [x2, #16]
  4359f4:	ldr	x0, [x0, #136]
  4359f8:	ldr	x0, [x0, #40]
  4359fc:	cbz	x0, 435a10 <ferror@plt+0x32ce0>
  435a00:	ldr	x1, [x0, #16]
  435a04:	sub	x1, x1, #0x4
  435a08:	str	x1, [x0, #16]
  435a0c:	b	4359d8 <ferror@plt+0x32ca8>
  435a10:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435a14:	add	x2, x2, #0xac8
  435a18:	mov	w1, #0xb9e                 	// #2974
  435a1c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435a20:	add	x0, x0, #0x7f8
  435a24:	bl	4102b4 <ferror@plt+0xd584>
  435a28:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435a2c:	add	x2, x2, #0xac8
  435a30:	mov	w1, #0xba1                 	// #2977
  435a34:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435a38:	add	x0, x0, #0x7f8
  435a3c:	bl	4102b4 <ferror@plt+0xd584>
  435a40:	stp	x29, x30, [sp, #-80]!
  435a44:	mov	x29, sp
  435a48:	stp	x19, x20, [sp, #16]
  435a4c:	stp	x21, x22, [sp, #32]
  435a50:	stp	x23, x24, [sp, #48]
  435a54:	stp	x25, x26, [sp, #64]
  435a58:	mov	x19, x0
  435a5c:	mov	w23, w1
  435a60:	mov	x21, x2
  435a64:	mov	x22, x3
  435a68:	ldr	x0, [x2]
  435a6c:	bl	42e6bc <ferror@plt+0x2b98c>
  435a70:	mov	w20, w0
  435a74:	mov	x0, x22
  435a78:	bl	42e6bc <ferror@plt+0x2b98c>
  435a7c:	add	w20, w20, w0
  435a80:	add	w20, w20, #0x1
  435a84:	add	x20, x20, #0xf
  435a88:	and	x20, x20, #0x1fffffff0
  435a8c:	sub	sp, sp, x20
  435a90:	mov	x25, sp
  435a94:	mov	w3, #0x1                   	// #1
  435a98:	mov	x2, x25
  435a9c:	ldr	x1, [x21]
  435aa0:	mov	x0, x19
  435aa4:	bl	42e788 <ferror@plt+0x2ba58>
  435aa8:	mov	x24, x0
  435aac:	ldr	x0, [x21]
  435ab0:	ldrb	w0, [x0, #4]
  435ab4:	mov	x2, x24
  435ab8:	cmp	w0, #0x7
  435abc:	b.eq	435ba8 <ferror@plt+0x32e78>  // b.none
  435ac0:	ldrb	w0, [x22, #4]
  435ac4:	cmp	w0, #0x53
  435ac8:	b.ne	435bbc <ferror@plt+0x32e8c>  // b.any
  435acc:	mov	w0, #0xa                   	// #10
  435ad0:	strb	w0, [x2]
  435ad4:	mov	w3, #0x1                   	// #1
  435ad8:	sub	x2, x2, x25
  435adc:	mov	x1, x25
  435ae0:	mov	x0, x19
  435ae4:	bl	425bf4 <ferror@plt+0x22ec4>
  435ae8:	mov	x0, x19
  435aec:	bl	42da34 <ferror@plt+0x2ad04>
  435af0:	mov	x0, x19
  435af4:	bl	42e4f4 <ferror@plt+0x2b7c4>
  435af8:	str	x0, [x19, #448]
  435afc:	mov	x0, x19
  435b00:	bl	430388 <ferror@plt+0x2d658>
  435b04:	mov	x20, x0
  435b08:	ldr	x0, [x19]
  435b0c:	ldr	x1, [x0]
  435b10:	ldr	x0, [x0, #32]
  435b14:	cmp	x1, x0
  435b18:	b.eq	435bd4 <ferror@plt+0x32ea4>  // b.none
  435b1c:	ldr	w26, [x20]
  435b20:	mov	x0, x19
  435b24:	bl	425d00 <ferror@plt+0x22fd0>
  435b28:	mov	w1, #0x1                   	// #1
  435b2c:	mov	x0, x19
  435b30:	bl	435970 <ferror@plt+0x32c40>
  435b34:	strb	wzr, [x24]
  435b38:	ldr	x0, [x21]
  435b3c:	ldp	x2, x3, [x0]
  435b40:	stp	x2, x3, [x20]
  435b44:	ldr	x0, [x0, #16]
  435b48:	str	x0, [x20, #16]
  435b4c:	str	x20, [x21]
  435b50:	str	w26, [x20]
  435b54:	ldrh	w0, [x20, #6]
  435b58:	and	w0, w0, #0xfffffff7
  435b5c:	strh	w0, [x20, #6]
  435b60:	ldr	w1, [x19, #1116]
  435b64:	mov	w0, #0x0                   	// #0
  435b68:	cmp	w1, #0x15
  435b6c:	b.eq	435be4 <ferror@plt+0x32eb4>  // b.none
  435b70:	mov	x1, x22
  435b74:	mov	x0, x19
  435b78:	bl	431e54 <ferror@plt+0x2f124>
  435b7c:	mov	x6, x0
  435b80:	mov	x5, x25
  435b84:	adrp	x4, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435b88:	add	x4, x4, #0xae0
  435b8c:	mov	w3, #0x0                   	// #0
  435b90:	mov	w2, w23
  435b94:	mov	w1, #0x3                   	// #3
  435b98:	mov	x0, x19
  435b9c:	bl	426bfc <ferror@plt+0x23ecc>
  435ba0:	mov	w0, #0x0                   	// #0
  435ba4:	b	435be4 <ferror@plt+0x32eb4>
  435ba8:	ldrb	w0, [x22, #4]
  435bac:	cbz	w0, 435bbc <ferror@plt+0x32e8c>
  435bb0:	mov	w0, #0x20                  	// #32
  435bb4:	strb	w0, [x2], #1
  435bb8:	b	435ac0 <ferror@plt+0x32d90>
  435bbc:	mov	w3, #0x1                   	// #1
  435bc0:	mov	x1, x22
  435bc4:	mov	x0, x19
  435bc8:	bl	42e788 <ferror@plt+0x2ba58>
  435bcc:	mov	x2, x0
  435bd0:	b	435acc <ferror@plt+0x32d9c>
  435bd4:	str	x20, [x21]
  435bd8:	mov	x0, x19
  435bdc:	bl	425d00 <ferror@plt+0x22fd0>
  435be0:	mov	w0, #0x1                   	// #1
  435be4:	mov	sp, x29
  435be8:	ldp	x19, x20, [sp, #16]
  435bec:	ldp	x21, x22, [sp, #32]
  435bf0:	ldp	x23, x24, [sp, #48]
  435bf4:	ldp	x25, x26, [sp, #64]
  435bf8:	ldp	x29, x30, [sp], #80
  435bfc:	ret
  435c00:	ldrb	w1, [x0, #18]
  435c04:	and	w1, w1, #0xfffffffc
  435c08:	strb	w1, [x0, #18]
  435c0c:	str	xzr, [x0, #24]
  435c10:	ldrh	w1, [x0, #18]
  435c14:	ubfx	x2, x1, #2, #8
  435c18:	and	w2, w2, #0xffffffcf
  435c1c:	bfi	w1, w2, #2, #8
  435c20:	strh	w1, [x0, #18]
  435c24:	ret
  435c28:	stp	x29, x30, [sp, #-64]!
  435c2c:	mov	x29, sp
  435c30:	stp	x19, x20, [sp, #16]
  435c34:	stp	x21, x22, [sp, #32]
  435c38:	mov	x21, x0
  435c3c:	mov	x19, x2
  435c40:	ldrb	w0, [x2, #18]
  435c44:	and	w0, w0, #0x3
  435c48:	cmp	w0, #0x1
  435c4c:	b.eq	435cf8 <ferror@plt+0x32fc8>  // b.none
  435c50:	str	x23, [sp, #48]
  435c54:	mov	w20, w1
  435c58:	mov	x22, x3
  435c5c:	add	w0, w1, #0x1
  435c60:	add	w0, w0, w0, lsl #1
  435c64:	lsl	w23, w0, #3
  435c68:	ldr	w1, [x21, #512]
  435c6c:	cmp	w1, w0, lsl #3
  435c70:	b.cc	435d18 <ferror@plt+0x32fe8>  // b.lo, b.ul, b.last
  435c74:	mov	w23, w20
  435c78:	add	x0, x23, w20, uxtw #1
  435c7c:	lsl	x0, x0, #3
  435c80:	ldr	x2, [x21, #504]
  435c84:	add	x1, x2, x0
  435c88:	str	x19, [x2, x0]
  435c8c:	ldr	x0, [x19, #24]
  435c90:	str	x0, [x1, #8]
  435c94:	ldrb	w0, [x19, #18]
  435c98:	and	w0, w0, #0x3
  435c9c:	str	w0, [x1, #16]
  435ca0:	lsl	x0, x23, #3
  435ca4:	ldr	x2, [x21, #56]
  435ca8:	ldr	x1, [x2, #24]
  435cac:	ldr	x2, [x2, #16]
  435cb0:	sub	x1, x1, x2
  435cb4:	add	x0, x0, #0x8
  435cb8:	cmp	x1, x0
  435cbc:	b.cc	435d30 <ferror@plt+0x33000>  // b.lo, b.ul, b.last
  435cc0:	ldr	x0, [x21, #56]
  435cc4:	ldr	x0, [x0, #16]
  435cc8:	str	x22, [x0, x23, lsl #3]
  435ccc:	ldrb	w1, [x19, #18]
  435cd0:	mov	w0, #0x1                   	// #1
  435cd4:	bfxil	w1, w0, #0, #2
  435cd8:	strb	w1, [x19, #18]
  435cdc:	add	w20, w20, w0
  435ce0:	strh	w20, [x19, #24]
  435ce4:	ldr	x23, [sp, #48]
  435ce8:	ldp	x19, x20, [sp, #16]
  435cec:	ldp	x21, x22, [sp, #32]
  435cf0:	ldp	x29, x30, [sp], #64
  435cf4:	ret
  435cf8:	ldr	x3, [x2]
  435cfc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435d00:	add	x2, x2, #0xb20
  435d04:	mov	w1, #0x3                   	// #3
  435d08:	mov	x0, x21
  435d0c:	bl	426a10 <ferror@plt+0x23ce0>
  435d10:	mov	w0, #0x0                   	// #0
  435d14:	b	435ce8 <ferror@plt+0x32fb8>
  435d18:	mov	w1, w23
  435d1c:	ldr	x0, [x21, #504]
  435d20:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  435d24:	str	x0, [x21, #504]
  435d28:	str	w23, [x21, #512]
  435d2c:	b	435c74 <ferror@plt+0x32f44>
  435d30:	mov	x2, #0x8                   	// #8
  435d34:	add	x1, x21, #0x38
  435d38:	mov	x0, x21
  435d3c:	bl	42f3b0 <ferror@plt+0x2c680>
  435d40:	b	435cc0 <ferror@plt+0x32f90>
  435d44:	sub	w2, w1, #0x1
  435d48:	cbz	w1, 435d88 <ferror@plt+0x33058>
  435d4c:	ubfiz	x1, x2, #1, #32
  435d50:	add	x1, x1, w2, uxtw
  435d54:	lsl	x1, x1, #3
  435d58:	ldr	x2, [x0, #504]
  435d5c:	add	x3, x2, x1
  435d60:	ldr	x2, [x2, x1]
  435d64:	ldrb	w4, [x2, #18]
  435d68:	ldr	w5, [x3, #16]
  435d6c:	bfxil	w4, w5, #0, #2
  435d70:	strb	w4, [x2, #18]
  435d74:	ldr	x3, [x3, #8]
  435d78:	str	x3, [x2, #24]
  435d7c:	sub	x1, x1, #0x18
  435d80:	cmn	x1, #0x18
  435d84:	b.ne	435d58 <ferror@plt+0x33028>  // b.any
  435d88:	ret
  435d8c:	mov	x3, x0
  435d90:	mov	x0, x2
  435d94:	ldr	w2, [x3, #48]
  435d98:	str	w2, [x0, #8]
  435d9c:	str	xzr, [x0]
  435da0:	strb	wzr, [x0, #18]
  435da4:	strh	wzr, [x0, #16]
  435da8:	ldrb	w2, [x0, #19]
  435dac:	and	w2, w2, #0xfffffff7
  435db0:	strb	w2, [x0, #19]
  435db4:	ldrb	w4, [x3, #1151]
  435db8:	cmp	w4, #0x0
  435dbc:	cset	w4, eq  // eq = none
  435dc0:	bfi	w2, w4, #5, #1
  435dc4:	str	wzr, [x0, #12]
  435dc8:	and	w2, w2, #0xfffffffb
  435dcc:	and	w2, w2, #0xffffffbf
  435dd0:	strb	w2, [x0, #19]
  435dd4:	ldr	x2, [x3]
  435dd8:	mov	w3, #0x0                   	// #0
  435ddc:	cbz	x2, 435dec <ferror@plt+0x330bc>
  435de0:	ldrb	w2, [x2, #106]
  435de4:	cmp	w2, #0x0
  435de8:	cset	w3, ne  // ne = any
  435dec:	ldrb	w2, [x0, #19]
  435df0:	bfi	w2, w3, #4, #1
  435df4:	bfxil	w2, w1, #0, #2
  435df8:	strb	w2, [x0, #19]
  435dfc:	ret
  435e00:	stp	x29, x30, [sp, #-240]!
  435e04:	mov	x29, sp
  435e08:	stp	x19, x20, [sp, #16]
  435e0c:	stp	x23, x24, [sp, #48]
  435e10:	mov	x19, x0
  435e14:	mov	x23, x1
  435e18:	ldrb	w0, [x0, #1160]
  435e1c:	str	w0, [sp, #104]
  435e20:	cbz	w0, 435ee4 <ferror@plt+0x331b4>
  435e24:	mov	x0, x19
  435e28:	bl	43b72c <ferror@plt+0x389fc>
  435e2c:	mov	x20, x0
  435e30:	cbz	x20, 436ad4 <ferror@plt+0x33da4>
  435e34:	ldrb	w0, [x23, #18]
  435e38:	tbz	w0, #1, 4369e4 <ferror@plt+0x33cb4>
  435e3c:	ldrb	w0, [x19, #1151]
  435e40:	cbnz	w0, 4368f4 <ferror@plt+0x33bc4>
  435e44:	ldrh	w0, [x23, #18]
  435e48:	ubfx	x1, x0, #2, #8
  435e4c:	tbnz	w0, #5, 436994 <ferror@plt+0x33c64>
  435e50:	ldrb	w0, [x23, #18]
  435e54:	and	w0, w0, #0x3
  435e58:	cmp	w0, #0x3
  435e5c:	b.eq	436908 <ferror@plt+0x33bd8>  // b.none
  435e60:	tbnz	w1, #6, 4369dc <ferror@plt+0x33cac>
  435e64:	stp	x21, x22, [sp, #32]
  435e68:	ldr	x21, [x23, #24]
  435e6c:	ldrb	w2, [x21, #18]
  435e70:	cbz	w2, 435e8c <ferror@plt+0x3315c>
  435e74:	ldr	x3, [x19, #1048]
  435e78:	sub	w2, w2, #0x1
  435e7c:	mov	x1, x21
  435e80:	mov	x0, x19
  435e84:	blr	x3
  435e88:	strb	wzr, [x21, #18]
  435e8c:	ldrh	w1, [x21, #16]
  435e90:	ldrh	w0, [x20, #16]
  435e94:	cmp	w0, w1
  435e98:	b.ne	436990 <ferror@plt+0x33c60>  // b.any
  435e9c:	ldrb	w4, [x21, #19]
  435ea0:	ldrb	w0, [x20, #19]
  435ea4:	eor	w0, w4, w0
  435ea8:	tst	w0, #0xc
  435eac:	b.ne	436a84 <ferror@plt+0x33d54>  // b.any
  435eb0:	sub	w1, w1, #0x1
  435eb4:	cmn	w1, #0x1
  435eb8:	b.eq	436918 <ferror@plt+0x33be8>  // b.none
  435ebc:	mov	w0, w1
  435ec0:	ldr	x2, [x21]
  435ec4:	ldr	x3, [x20]
  435ec8:	ldr	x2, [x2, x0, lsl #3]
  435ecc:	sub	w1, w1, #0x1
  435ed0:	ldr	x0, [x3, x0, lsl #3]
  435ed4:	cmp	x2, x0
  435ed8:	b.eq	435eb4 <ferror@plt+0x33184>  // b.none
  435edc:	ldp	x21, x22, [sp, #32]
  435ee0:	b	436994 <ferror@plt+0x33c64>
  435ee4:	stp	x21, x22, [sp, #32]
  435ee8:	stp	x25, x26, [sp, #64]
  435eec:	ldr	x20, [x19, #448]
  435ef0:	add	x0, sp, #0xb0
  435ef4:	str	x0, [x19, #448]
  435ef8:	mov	x0, x19
  435efc:	bl	430388 <ferror@plt+0x2d658>
  435f00:	mov	x21, x0
  435f04:	str	x20, [x19, #448]
  435f08:	ldrh	w0, [x0, #6]
  435f0c:	tbnz	w0, #0, 436b48 <ferror@plt+0x33e18>
  435f10:	ldrb	w0, [x21, #4]
  435f14:	cmp	w0, #0x14
  435f18:	b.eq	435f6c <ferror@plt+0x3323c>  // b.none
  435f1c:	stp	x27, x28, [sp, #80]
  435f20:	cmp	w0, #0x16
  435f24:	b.eq	436b4c <ferror@plt+0x33e1c>  // b.none
  435f28:	cmp	w0, #0x4f
  435f2c:	b.eq	436210 <ferror@plt+0x334e0>  // b.none
  435f30:	ldrb	w1, [x19, #1152]
  435f34:	cbnz	w1, 436224 <ferror@plt+0x334f4>
  435f38:	cmp	w0, #0x3d
  435f3c:	b.eq	436260 <ferror@plt+0x33530>  // b.none
  435f40:	b.hi	436250 <ferror@plt+0x33520>  // b.pmore
  435f44:	and	w0, w0, #0xfffffffd
  435f48:	and	w0, w0, #0xff
  435f4c:	cmp	w0, #0x34
  435f50:	cset	w1, eq  // eq = none
  435f54:	lsl	w1, w1, #1
  435f58:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435f5c:	add	x2, x2, #0xca0
  435f60:	mov	x0, x19
  435f64:	bl	426a10 <ferror@plt+0x23ce0>
  435f68:	b	436b4c <ferror@plt+0x33e1c>
  435f6c:	mov	w21, #0x0                   	// #0
  435f70:	mov	w20, #0x0                   	// #0
  435f74:	str	wzr, [sp, #160]
  435f78:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435f7c:	add	x24, x24, #0xbe0
  435f80:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x25c60>
  435f84:	add	x22, x22, #0xbb0
  435f88:	mov	w25, #0xa                   	// #10
  435f8c:	b	43609c <ferror@plt+0x3336c>
  435f90:	cmp	w2, #0x13
  435f94:	b.eq	436084 <ferror@plt+0x33354>  // b.none
  435f98:	cmp	w2, #0x15
  435f9c:	b.ne	435fec <ferror@plt+0x332bc>  // b.any
  435fa0:	cmp	w20, #0x0
  435fa4:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  435fa8:	ldr	w1, [sp, #160]
  435fac:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  435fb0:	b.eq	436bd0 <ferror@plt+0x33ea0>  // b.none
  435fb4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  435fb8:	add	x1, x1, #0xc0
  435fbc:	ldp	x4, x5, [x1, #96]
  435fc0:	stp	x4, x5, [sp, #200]
  435fc4:	ldp	x4, x5, [x1, #112]
  435fc8:	stp	x4, x5, [sp, #216]
  435fcc:	ldr	x1, [x1, #128]
  435fd0:	str	x1, [sp, #232]
  435fd4:	mov	w21, w20
  435fd8:	cmp	w2, #0x16
  435fdc:	b.ne	4360f8 <ferror@plt+0x333c8>  // b.any
  435fe0:	add	w21, w20, #0x2
  435fe4:	mov	x3, #0x0                   	// #0
  435fe8:	b	436018 <ferror@plt+0x332e8>
  435fec:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  435ff0:	add	x1, x1, #0xc0
  435ff4:	ldp	x4, x5, [x1, #96]
  435ff8:	stp	x4, x5, [sp, #200]
  435ffc:	ldp	x4, x5, [x1, #112]
  436000:	stp	x4, x5, [sp, #216]
  436004:	ldr	x1, [x1, #128]
  436008:	str	x1, [sp, #232]
  43600c:	cbz	w21, 435fd4 <ferror@plt+0x332a4>
  436010:	mov	x3, #0x0                   	// #0
  436014:	mov	w21, #0x4                   	// #4
  436018:	add	x0, sp, #0xc8
  43601c:	ldr	x2, [x0, w21, uxtw #3]
  436020:	mov	w1, #0x3                   	// #3
  436024:	mov	x0, x19
  436028:	bl	426a10 <ferror@plt+0x23ce0>
  43602c:	b	4367b8 <ferror@plt+0x33a88>
  436030:	mov	x3, #0x0                   	// #0
  436034:	mov	w21, #0x4                   	// #4
  436038:	b	436018 <ferror@plt+0x332e8>
  43603c:	mov	x3, #0x0                   	// #0
  436040:	mov	w21, #0x4                   	// #4
  436044:	b	436018 <ferror@plt+0x332e8>
  436048:	orr	w26, w20, w21
  43604c:	ands	w26, w26, #0xff
  436050:	b.ne	4360d0 <ferror@plt+0x333a0>  // b.any
  436054:	ldr	x3, [x0, #16]
  436058:	ldr	x2, [x0, #8]
  43605c:	ldr	w21, [sp, #160]
  436060:	mov	w1, w21
  436064:	mov	x0, x19
  436068:	bl	435c28 <ferror@plt+0x32ef8>
  43606c:	ands	w20, w0, #0xff
  436070:	b.eq	4367b8 <ferror@plt+0x33a88>  // b.none
  436074:	add	w0, w21, #0x1
  436078:	str	w0, [sp, #160]
  43607c:	mov	w21, w26
  436080:	b	43609c <ferror@plt+0x3336c>
  436084:	eor	w1, w20, #0x1
  436088:	orr	w1, w21, w1
  43608c:	ands	w1, w1, #0xff
  436090:	b.ne	43610c <ferror@plt+0x333dc>  // b.any
  436094:	mov	w21, w1
  436098:	mov	w20, w1
  43609c:	mov	x0, x19
  4360a0:	bl	431be0 <ferror@plt+0x2eeb0>
  4360a4:	ldrb	w2, [x0, #4]
  4360a8:	cmp	w2, #0x2c
  4360ac:	b.eq	436138 <ferror@plt+0x33408>  // b.none
  4360b0:	cmp	w2, #0x2c
  4360b4:	b.ls	435f90 <ferror@plt+0x33260>  // b.plast
  4360b8:	cmp	w2, #0x35
  4360bc:	b.eq	436048 <ferror@plt+0x33318>  // b.none
  4360c0:	cmp	w2, #0x4f
  4360c4:	b.ne	435fec <ferror@plt+0x332bc>  // b.any
  4360c8:	ldrb	w1, [x19, #1124]
  4360cc:	cbz	w1, 43609c <ferror@plt+0x3336c>
  4360d0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4360d4:	add	x1, x1, #0xc0
  4360d8:	ldp	x4, x5, [x1, #96]
  4360dc:	stp	x4, x5, [sp, #200]
  4360e0:	ldp	x4, x5, [x1, #112]
  4360e4:	stp	x4, x5, [sp, #216]
  4360e8:	ldr	x1, [x1, #128]
  4360ec:	str	x1, [sp, #232]
  4360f0:	cbnz	w21, 43603c <ferror@plt+0x3330c>
  4360f4:	mov	w21, w20
  4360f8:	mov	x1, x0
  4360fc:	mov	x0, x19
  436100:	bl	431e54 <ferror@plt+0x2f124>
  436104:	mov	x3, x0
  436108:	b	436018 <ferror@plt+0x332e8>
  43610c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  436110:	add	x1, x1, #0xc0
  436114:	ldp	x4, x5, [x1, #96]
  436118:	stp	x4, x5, [sp, #200]
  43611c:	ldp	x4, x5, [x1, #112]
  436120:	stp	x4, x5, [sp, #216]
  436124:	ldr	x1, [x1, #128]
  436128:	str	x1, [sp, #232]
  43612c:	cbnz	w21, 436030 <ferror@plt+0x33300>
  436130:	mov	w21, w20
  436134:	b	4360f8 <ferror@plt+0x333c8>
  436138:	cbnz	w21, 436c34 <ferror@plt+0x33f04>
  43613c:	cbz	w20, 436170 <ferror@plt+0x33440>
  436140:	ldrb	w0, [x19, #1154]
  436144:	mov	w21, w20
  436148:	cbz	w0, 43609c <ferror@plt+0x3336c>
  43614c:	ldrb	w0, [x19, #1142]
  436150:	cbz	w0, 43609c <ferror@plt+0x3336c>
  436154:	ldrb	w0, [x19, #1120]
  436158:	cmp	w0, #0x0
  43615c:	csel	x2, x22, x24, ne  // ne = any
  436160:	mov	w1, w25
  436164:	mov	x0, x19
  436168:	bl	426b04 <ferror@plt+0x23dd4>
  43616c:	b	43609c <ferror@plt+0x3336c>
  436170:	ldr	x2, [x19, #1272]
  436174:	mov	x3, x2
  436178:	ldr	w21, [sp, #160]
  43617c:	mov	w1, w21
  436180:	mov	x0, x19
  436184:	bl	435c28 <ferror@plt+0x32ef8>
  436188:	add	w0, w21, #0x1
  43618c:	str	w0, [sp, #160]
  436190:	mov	w0, #0x1                   	// #1
  436194:	strb	w0, [x19, #22]
  436198:	ldrb	w0, [x19, #1152]
  43619c:	cbnz	w0, 4361e0 <ferror@plt+0x334b0>
  4361a0:	ldrb	w0, [x19, #1154]
  4361a4:	cbz	w0, 4361e0 <ferror@plt+0x334b0>
  4361a8:	ldrb	w0, [x19, #1142]
  4361ac:	cbz	w0, 4361e0 <ferror@plt+0x334b0>
  4361b0:	ldrb	w1, [x19, #1120]
  4361b4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4361b8:	add	x0, x0, #0xb78
  4361bc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4361c0:	add	x2, x2, #0xb40
  4361c4:	cmp	w1, #0x0
  4361c8:	csel	x2, x2, x0, ne  // ne = any
  4361cc:	mov	w1, w25
  4361d0:	mov	x0, x19
  4361d4:	bl	426b04 <ferror@plt+0x23dd4>
  4361d8:	mov	w21, #0x1                   	// #1
  4361dc:	b	43609c <ferror@plt+0x3336c>
  4361e0:	ldrsb	w0, [x19, #1198]
  4361e4:	mov	w21, #0x1                   	// #1
  4361e8:	cmp	w0, #0x0
  4361ec:	b.le	43609c <ferror@plt+0x3336c>
  4361f0:	ldrb	w0, [x19, #1120]
  4361f4:	cbnz	w0, 43609c <ferror@plt+0x3336c>
  4361f8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4361fc:	add	x2, x2, #0xb78
  436200:	mov	w1, #0x0                   	// #0
  436204:	mov	x0, x19
  436208:	bl	426a10 <ferror@plt+0x23ce0>
  43620c:	b	43609c <ferror@plt+0x3336c>
  436210:	ldrb	w0, [x19, #1124]
  436214:	cbz	w0, 436b4c <ferror@plt+0x33e1c>
  436218:	ldrb	w0, [x19, #1152]
  43621c:	mov	w1, #0x0                   	// #0
  436220:	cbz	w0, 435f58 <ferror@plt+0x33228>
  436224:	ldrb	w1, [x19, #1120]
  436228:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43622c:	add	x0, x0, #0xc48
  436230:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436234:	add	x2, x2, #0xc10
  436238:	cmp	w1, #0x0
  43623c:	csel	x2, x2, x0, ne  // ne = any
  436240:	mov	w1, #0x2                   	// #2
  436244:	mov	x0, x19
  436248:	bl	426a10 <ferror@plt+0x23ce0>
  43624c:	b	436b4c <ferror@plt+0x33e1c>
  436250:	cmp	w0, #0x43
  436254:	cset	w1, eq  // eq = none
  436258:	lsl	w1, w1, #1
  43625c:	b	435f58 <ferror@plt+0x33228>
  436260:	ldr	x0, [x21, #16]
  436264:	ldrb	w1, [x0]
  436268:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43626c:	add	x0, x0, #0xc80
  436270:	bl	402ac0 <strchr@plt>
  436274:	cmp	x0, #0x0
  436278:	cset	w1, eq  // eq = none
  43627c:	lsl	w1, w1, #1
  436280:	b	435f58 <ferror@plt+0x33228>
  436284:	ldr	x0, [x19, #56]
  436288:	ldr	x1, [x0, #24]
  43628c:	ldr	x0, [x0, #16]
  436290:	sub	x1, x1, x0
  436294:	ldr	w0, [x20, #12]
  436298:	add	x0, x0, #0x2
  43629c:	add	x0, x0, x0, lsl #1
  4362a0:	cmp	x1, x0, lsl #3
  4362a4:	b.cc	436320 <ferror@plt+0x335f0>  // b.lo, b.ul, b.last
  4362a8:	ldr	x0, [x19, #56]
  4362ac:	ldr	x20, [x0, #16]
  4362b0:	ldr	x21, [x19, #448]
  4362b4:	ldr	w0, [x20, #12]
  4362b8:	add	x0, x0, #0x1
  4362bc:	add	x0, x0, x0, lsl #1
  4362c0:	add	x0, x20, x0, lsl #3
  4362c4:	str	x0, [x19, #448]
  4362c8:	mov	x0, x19
  4362cc:	bl	430388 <ferror@plt+0x2d658>
  4362d0:	str	x21, [x19, #448]
  4362d4:	ldrb	w1, [x0, #4]
  4362d8:	cmp	w1, #0x35
  4362dc:	b.eq	436334 <ferror@plt+0x33604>  // b.none
  4362e0:	ldrb	w2, [x19, #1138]
  4362e4:	cbz	w2, 436300 <ferror@plt+0x335d0>
  4362e8:	ldrh	w2, [x20, #16]
  4362ec:	cbz	w2, 436300 <ferror@plt+0x335d0>
  4362f0:	cmp	w1, #0x38
  4362f4:	mov	w2, #0x3e                  	// #62
  4362f8:	ccmp	w1, w2, #0x4, ne  // ne = any
  4362fc:	b.eq	43635c <ferror@plt+0x3362c>  // b.none
  436300:	ldr	w0, [x20, #12]
  436304:	add	w1, w0, #0x1
  436308:	str	w1, [x20, #12]
  43630c:	mov	w0, w0
  436310:	add	x0, x0, #0x1
  436314:	add	x0, x0, x0, lsl #1
  436318:	add	x0, x20, x0, lsl #3
  43631c:	b	436740 <ferror@plt+0x33a10>
  436320:	mov	x2, #0x18                  	// #24
  436324:	add	x1, x19, #0x38
  436328:	mov	x0, x19
  43632c:	bl	42f3b0 <ferror@plt+0x2c680>
  436330:	b	4362a8 <ferror@plt+0x33578>
  436334:	ldr	x3, [x0, #8]
  436338:	ldrb	w2, [x3, #18]
  43633c:	and	w2, w2, #0x3
  436340:	cmp	w2, #0x1
  436344:	b.ne	4362e0 <ferror@plt+0x335b0>  // b.any
  436348:	mov	w1, #0x50                  	// #80
  43634c:	strb	w1, [x0, #4]
  436350:	ldrh	w1, [x3, #24]
  436354:	str	w1, [x0, #8]
  436358:	b	436300 <ferror@plt+0x335d0>
  43635c:	ldr	x21, [x0, #16]
  436360:	ldr	w24, [x0, #8]
  436364:	sub	x24, x24, #0x1
  436368:	add	x24, x21, x24
  43636c:	add	x21, x21, #0x1
  436370:	cmp	x24, x21
  436374:	b.hi	43646c <ferror@plt+0x3373c>  // b.pmore
  436378:	b	436300 <ferror@plt+0x335d0>
  43637c:	mov	x21, x0
  436380:	b	436464 <ferror@plt+0x33734>
  436384:	add	x21, x21, #0x1
  436388:	cmp	x24, x21
  43638c:	b.eq	436b3c <ferror@plt+0x33e0c>  // b.none
  436390:	ldrb	w0, [x21]
  436394:	ldr	x1, [sp, #120]
  436398:	ldrh	w1, [x1, w0, sxtw #1]
  43639c:	tbnz	w1, #9, 4363b0 <ferror@plt+0x33680>
  4363a0:	cmp	w0, #0x24
  4363a4:	b.ne	436384 <ferror@plt+0x33654>  // b.any
  4363a8:	ldrb	w0, [x19, #1146]
  4363ac:	cbz	w0, 436384 <ferror@plt+0x33654>
  4363b0:	cmp	x24, x21
  4363b4:	b.ls	436b00 <ferror@plt+0x33dd0>  // b.plast
  4363b8:	mov	x0, x21
  4363bc:	mov	w3, #0x204                 	// #516
  4363c0:	b	4363d0 <ferror@plt+0x336a0>
  4363c4:	add	x0, x0, #0x1
  4363c8:	cmp	x24, x0
  4363cc:	b.eq	436b08 <ferror@plt+0x33dd8>  // b.none
  4363d0:	ldrb	w1, [x0]
  4363d4:	ldr	x2, [sp, #120]
  4363d8:	ldrh	w2, [x2, w1, sxtw #1]
  4363dc:	tst	w3, w2
  4363e0:	b.ne	4363c4 <ferror@plt+0x33694>  // b.any
  4363e4:	cmp	w1, #0x24
  4363e8:	b.ne	4363f4 <ferror@plt+0x336c4>  // b.any
  4363ec:	ldrb	w1, [x19, #1146]
  4363f0:	cbnz	w1, 4363c4 <ferror@plt+0x33694>
  4363f4:	sub	x1, x0, x21
  4363f8:	str	w1, [sp, #144]
  4363fc:	ldrh	w28, [x20, #16]
  436400:	cbz	w28, 43637c <ferror@plt+0x3364c>
  436404:	str	x21, [sp, #112]
  436408:	mov	x21, x0
  43640c:	b	436b24 <ferror@plt+0x33df4>
  436410:	add	x25, x25, #0x1
  436414:	cmp	w28, w25
  436418:	b.ls	436464 <ferror@plt+0x33734>  // b.plast
  43641c:	ldr	x0, [sp, #128]
  436420:	ldr	x0, [x0, x25, lsl #3]
  436424:	ldr	w1, [x0, #8]
  436428:	ldr	w2, [sp, #144]
  43642c:	cmp	w1, w2
  436430:	b.ne	436410 <ferror@plt+0x336e0>  // b.any
  436434:	ldr	x0, [x0]
  436438:	str	x0, [sp, #152]
  43643c:	ldr	x2, [sp, #136]
  436440:	mov	x1, x0
  436444:	ldr	x0, [sp, #112]
  436448:	bl	4029e0 <memcmp@plt>
  43644c:	cbnz	w0, 436410 <ferror@plt+0x336e0>
  436450:	ldr	x3, [sp, #152]
  436454:	ldr	x2, [sp, #168]
  436458:	mov	w1, #0x6                   	// #6
  43645c:	mov	x0, x19
  436460:	bl	426a88 <ferror@plt+0x23d58>
  436464:	cmp	x24, x21
  436468:	b.ls	436300 <ferror@plt+0x335d0>  // b.plast
  43646c:	cmp	x21, x24
  436470:	b.cc	436390 <ferror@plt+0x33660>  // b.lo, b.ul, b.last
  436474:	b	436b40 <ferror@plt+0x33e10>
  436478:	ldrb	w1, [x20, #19]
  43647c:	tbz	w1, #2, 436758 <ferror@plt+0x33a28>
  436480:	ldrb	w1, [x0, #4]
  436484:	cmp	w1, #0x50
  436488:	b.eq	4364b4 <ferror@plt+0x33784>  // b.none
  43648c:	ldr	w1, [x19, #1116]
  436490:	cmp	w1, #0x15
  436494:	b.eq	436758 <ferror@plt+0x33a28>  // b.none
  436498:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43649c:	add	x2, x2, #0xd08
  4364a0:	mov	w1, #0x3                   	// #3
  4364a4:	mov	x0, x19
  4364a8:	bl	426a10 <ferror@plt+0x23ce0>
  4364ac:	ldp	x27, x28, [sp, #80]
  4364b0:	b	4367b8 <ferror@plt+0x33a88>
  4364b4:	ldrh	w1, [x0, #6]
  4364b8:	tbz	w1, #0, 4364c4 <ferror@plt+0x33794>
  4364bc:	orr	w1, w1, #0x200
  4364c0:	strh	w1, [x0, #6]
  4364c4:	ldurh	w2, [x0, #-18]
  4364c8:	tbz	w2, #1, 4364d8 <ferror@plt+0x337a8>
  4364cc:	ldrh	w1, [x0, #6]
  4364d0:	orr	w1, w1, #0x100
  4364d4:	strh	w1, [x0, #6]
  4364d8:	ldrh	w1, [x0, #6]
  4364dc:	and	w1, w1, #0xfffffffe
  4364e0:	orr	w1, w1, #0x4
  4364e4:	and	w2, w2, #0x1
  4364e8:	orr	w1, w1, w2
  4364ec:	strh	w1, [x0, #6]
  4364f0:	ldp	x2, x3, [x0]
  4364f4:	stp	x2, x3, [x0, #-24]
  4364f8:	ldr	x1, [x0, #16]
  4364fc:	stur	x1, [x0, #-8]
  436500:	ldr	w1, [x20, #12]
  436504:	sub	w1, w1, #0x1
  436508:	str	w1, [x20, #12]
  43650c:	b	436758 <ferror@plt+0x33a28>
  436510:	cbnz	w26, 4365a8 <ferror@plt+0x33878>
  436514:	cbz	w27, 4365e4 <ferror@plt+0x338b4>
  436518:	cbnz	w22, 4365c4 <ferror@plt+0x33894>
  43651c:	ldr	w1, [x20, #12]
  436520:	sub	w1, w1, #0x1
  436524:	str	w1, [x20, #12]
  436528:	mov	w1, w1
  43652c:	add	x1, x1, #0x1
  436530:	add	x1, x1, x1, lsl #1
  436534:	lsl	x1, x1, #3
  436538:	mov	x0, x19
  43653c:	bl	431f14 <ferror@plt+0x2f1e4>
  436540:	mov	x20, x0
  436544:	ldr	w0, [x0, #12]
  436548:	cbz	w0, 436558 <ferror@plt+0x33828>
  43654c:	ldrh	w0, [x20, #30]
  436550:	and	w0, w0, #0xfffffffe
  436554:	strh	w0, [x20, #30]
  436558:	ldr	w1, [sp, #108]
  43655c:	cbz	w1, 4368d4 <ferror@plt+0x33ba4>
  436560:	ubfiz	x0, x1, #1, #32
  436564:	add	x0, x0, w1, uxtw
  436568:	lsl	x21, x0, #3
  43656c:	ldr	x2, [x19, #56]
  436570:	ldr	x1, [x2, #24]
  436574:	ldr	x2, [x2, #16]
  436578:	sub	x1, x1, x2
  43657c:	cmp	x1, x0, lsl #3
  436580:	b.cc	436834 <ferror@plt+0x33b04>  // b.lo, b.ul, b.last
  436584:	ldr	x0, [x19, #56]
  436588:	ldr	x1, [x0, #16]
  43658c:	add	x0, x20, #0x18
  436590:	ldr	w5, [x20, #12]
  436594:	cbz	w5, 4368b4 <ferror@plt+0x33b84>
  436598:	mov	w5, #0x0                   	// #0
  43659c:	mov	w8, #0x0                   	// #0
  4365a0:	mov	w3, #0x0                   	// #0
  4365a4:	b	436878 <ferror@plt+0x33b48>
  4365a8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4365ac:	add	x2, x2, #0xd38
  4365b0:	mov	w1, #0x3                   	// #3
  4365b4:	mov	x0, x19
  4365b8:	bl	426a10 <ferror@plt+0x23ce0>
  4365bc:	ldp	x27, x28, [sp, #80]
  4365c0:	b	4367b8 <ferror@plt+0x33a88>
  4365c4:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4365c8:	add	x3, x3, #0xd70
  4365cc:	ldr	w2, [sp, #148]
  4365d0:	mov	w1, #0x3                   	// #3
  4365d4:	mov	x0, x19
  4365d8:	bl	426de8 <ferror@plt+0x240b8>
  4365dc:	ldp	x27, x28, [sp, #80]
  4365e0:	b	4367b8 <ferror@plt+0x33a88>
  4365e4:	cbz	w22, 43651c <ferror@plt+0x337ec>
  4365e8:	ldp	x27, x28, [sp, #80]
  4365ec:	b	4367b8 <ferror@plt+0x33a88>
  4365f0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4365f4:	add	x2, x2, #0xd38
  4365f8:	mov	w1, #0x3                   	// #3
  4365fc:	mov	x0, x19
  436600:	bl	426a10 <ferror@plt+0x23ce0>
  436604:	ldp	x27, x28, [sp, #80]
  436608:	b	4367b8 <ferror@plt+0x33a88>
  43660c:	sub	w1, w1, #0x1
  436610:	str	w1, [x20, #12]
  436614:	ldurh	w1, [x0, #-18]
  436618:	orr	w2, w1, #0x8
  43661c:	sturh	w2, [x0, #-18]
  436620:	ldrh	w2, [x0, #6]
  436624:	tbz	w2, #1, 436634 <ferror@plt+0x33904>
  436628:	mov	w3, #0x108                 	// #264
  43662c:	orr	w1, w1, w3
  436630:	sturh	w1, [x0, #-18]
  436634:	mov	w26, #0x1                   	// #1
  436638:	tbz	w2, #0, 436650 <ferror@plt+0x33920>
  43663c:	ldurh	w1, [x0, #-18]
  436640:	orr	w1, w1, #0x200
  436644:	sturh	w1, [x0, #-18]
  436648:	b	436650 <ferror@plt+0x33920>
  43664c:	mov	w26, #0x0                   	// #0
  436650:	cbz	w27, 436738 <ferror@plt+0x33a08>
  436654:	ldrb	w1, [x0, #4]
  436658:	cmp	w1, #0x35
  43665c:	b.eq	4366c4 <ferror@plt+0x33994>  // b.none
  436660:	cmp	w22, #0x1
  436664:	b.eq	43672c <ferror@plt+0x339fc>  // b.none
  436668:	b.le	436738 <ferror@plt+0x33a08>
  43666c:	cmp	w1, #0x26
  436670:	cset	w3, eq  // eq = none
  436674:	cmp	w22, #0x2
  436678:	cset	w2, eq  // eq = none
  43667c:	cmp	w2, #0x0
  436680:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  436684:	b.ne	4367d8 <ferror@plt+0x33aa8>  // b.any
  436688:	cbnz	w2, 4367f8 <ferror@plt+0x33ac8>
  43668c:	cbnz	w3, 436adc <ferror@plt+0x33dac>
  436690:	ldr	w2, [sp, #100]
  436694:	cmp	w1, #0x14
  436698:	b.eq	436804 <ferror@plt+0x33ad4>  // b.none
  43669c:	cmp	w1, #0x15
  4366a0:	b.ne	436ae8 <ferror@plt+0x33db8>  // b.any
  4366a4:	sub	w22, w22, #0x1
  4366a8:	cmp	w22, #0x2
  4366ac:	b.ne	436af4 <ferror@plt+0x33dc4>  // b.any
  4366b0:	cbnz	w2, 436814 <ferror@plt+0x33ae4>
  4366b4:	ldr	w0, [sp, #104]
  4366b8:	str	w0, [sp, #100]
  4366bc:	mov	w22, #0x0                   	// #0
  4366c0:	b	436738 <ferror@plt+0x33a08>
  4366c4:	ldr	x3, [x0, #8]
  4366c8:	ldr	x2, [x19, #1280]
  4366cc:	cmp	x3, x2
  4366d0:	b.eq	4366f4 <ferror@plt+0x339c4>  // b.none
  4366d4:	cmp	w22, #0x1
  4366d8:	b.eq	43679c <ferror@plt+0x33a6c>  // b.none
  4366dc:	b.le	436738 <ferror@plt+0x33a08>
  4366e0:	cmp	w1, #0x26
  4366e4:	cset	w3, eq  // eq = none
  4366e8:	cmp	w22, #0x2
  4366ec:	cset	w2, eq  // eq = none
  4366f0:	b	436688 <ferror@plt+0x33958>
  4366f4:	cmp	w22, #0x0
  4366f8:	b.le	43671c <ferror@plt+0x339ec>
  4366fc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436700:	add	x3, x3, #0xd88
  436704:	ldr	w2, [x0]
  436708:	mov	w1, #0x3                   	// #3
  43670c:	mov	x0, x19
  436710:	bl	426de8 <ferror@plt+0x240b8>
  436714:	ldp	x27, x28, [sp, #80]
  436718:	b	4367b8 <ferror@plt+0x33a88>
  43671c:	add	w22, w22, #0x1
  436720:	ldr	w0, [x0]
  436724:	str	w0, [sp, #148]
  436728:	b	436738 <ferror@plt+0x33a08>
  43672c:	cmp	w1, #0x14
  436730:	b.ne	43679c <ferror@plt+0x33a6c>  // b.any
  436734:	mov	w22, #0x2                   	// #2
  436738:	mov	x0, #0x0                   	// #0
  43673c:	cbz	x0, 436284 <ferror@plt+0x33554>
  436740:	ldr	w1, [x20, #12]
  436744:	cmp	w1, #0x1
  436748:	b.ls	436758 <ferror@plt+0x33a28>  // b.plast
  43674c:	ldurb	w1, [x0, #-20]
  436750:	cmp	w1, #0x25
  436754:	b.eq	436478 <ferror@plt+0x33748>  // b.none
  436758:	ldrb	w1, [x0, #4]
  43675c:	cmp	w1, #0x16
  436760:	b.eq	436510 <ferror@plt+0x337e0>  // b.none
  436764:	cmp	w1, #0x26
  436768:	b.ne	43664c <ferror@plt+0x3391c>  // b.any
  43676c:	ldr	w1, [x20, #12]
  436770:	cmp	w1, #0x1
  436774:	b.eq	4365f0 <ferror@plt+0x338c0>  // b.none
  436778:	cbz	w26, 43660c <ferror@plt+0x338dc>
  43677c:	ldr	w2, [sp, #108]
  436780:	add	w2, w2, #0x1
  436784:	str	w2, [sp, #108]
  436788:	sub	w1, w1, #0x1
  43678c:	str	w1, [x0, #8]
  436790:	cbz	w27, 436738 <ferror@plt+0x33a08>
  436794:	ldrb	w1, [x0, #4]
  436798:	b	436660 <ferror@plt+0x33930>
  43679c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4367a0:	add	x3, x3, #0xdb8
  4367a4:	ldr	w2, [sp, #148]
  4367a8:	mov	w1, #0x3                   	// #3
  4367ac:	mov	x0, x19
  4367b0:	bl	426de8 <ferror@plt+0x240b8>
  4367b4:	ldp	x27, x28, [sp, #80]
  4367b8:	strb	wzr, [x19, #22]
  4367bc:	ldr	w1, [sp, #160]
  4367c0:	mov	x0, x19
  4367c4:	bl	435d44 <ferror@plt+0x33014>
  4367c8:	mov	x20, #0x0                   	// #0
  4367cc:	ldp	x21, x22, [sp, #32]
  4367d0:	ldp	x25, x26, [sp, #64]
  4367d4:	b	435e30 <ferror@plt+0x33100>
  4367d8:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4367dc:	add	x3, x3, #0xdf0
  4367e0:	ldr	w2, [x0]
  4367e4:	mov	w1, #0x3                   	// #3
  4367e8:	mov	x0, x19
  4367ec:	bl	426de8 <ferror@plt+0x240b8>
  4367f0:	ldp	x27, x28, [sp, #80]
  4367f4:	b	4367b8 <ferror@plt+0x33a88>
  4367f8:	ldr	w2, [sp, #100]
  4367fc:	mov	w22, #0x3                   	// #3
  436800:	b	436694 <ferror@plt+0x33964>
  436804:	add	w22, w22, #0x1
  436808:	ldr	w0, [sp, #104]
  43680c:	str	w0, [sp, #100]
  436810:	b	436738 <ferror@plt+0x33a08>
  436814:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436818:	add	x3, x3, #0xdf0
  43681c:	ldr	w2, [x0]
  436820:	mov	w1, #0x3                   	// #3
  436824:	mov	x0, x19
  436828:	bl	426de8 <ferror@plt+0x240b8>
  43682c:	ldp	x27, x28, [sp, #80]
  436830:	b	4367b8 <ferror@plt+0x33a88>
  436834:	mov	x2, x21
  436838:	add	x1, x19, #0x38
  43683c:	mov	x0, x19
  436840:	bl	42f3b0 <ferror@plt+0x2c680>
  436844:	b	436584 <ferror@plt+0x33854>
  436848:	ubfiz	x4, x8, #1, #32
  43684c:	add	x4, x4, w8, uxtw
  436850:	add	x4, x1, x4, lsl #3
  436854:	ldp	x6, x7, [x2]
  436858:	stp	x6, x7, [x4]
  43685c:	ldr	x2, [x2, #16]
  436860:	str	x2, [x4, #16]
  436864:	add	w8, w8, #0x1
  436868:	add	w3, w3, #0x1
  43686c:	ldr	w2, [x20, #12]
  436870:	cmp	w2, w3
  436874:	b.eq	4368b4 <ferror@plt+0x33b84>  // b.none
  436878:	ubfiz	x2, x3, #1, #32
  43687c:	add	x2, x2, w3, uxtw
  436880:	add	x2, x0, x2, lsl #3
  436884:	ldrb	w4, [x2, #4]
  436888:	cmp	w4, #0x26
  43688c:	b.eq	436848 <ferror@plt+0x33b18>  // b.none
  436890:	ubfiz	x4, x5, #1, #32
  436894:	add	x4, x4, w5, uxtw
  436898:	add	x4, x0, x4, lsl #3
  43689c:	ldp	x6, x7, [x2]
  4368a0:	stp	x6, x7, [x4]
  4368a4:	ldr	x2, [x2, #16]
  4368a8:	str	x2, [x4, #16]
  4368ac:	add	w5, w5, #0x1
  4368b0:	b	436868 <ferror@plt+0x33b38>
  4368b4:	ubfiz	x2, x5, #1, #32
  4368b8:	add	x5, x2, w5, uxtw
  4368bc:	mov	x2, x21
  4368c0:	add	x0, x0, x5, lsl #3
  4368c4:	bl	402620 <memcpy@plt>
  4368c8:	ldrb	w0, [x20, #19]
  4368cc:	orr	w0, w0, #0x40
  4368d0:	strb	w0, [x20, #19]
  4368d4:	strb	wzr, [x19, #22]
  4368d8:	ldr	w1, [sp, #160]
  4368dc:	mov	x0, x19
  4368e0:	bl	435d44 <ferror@plt+0x33014>
  4368e4:	ldp	x21, x22, [sp, #32]
  4368e8:	ldp	x25, x26, [sp, #64]
  4368ec:	ldp	x27, x28, [sp, #80]
  4368f0:	b	435e30 <ferror@plt+0x33100>
  4368f4:	mov	x2, #0x0                   	// #0
  4368f8:	mov	x1, x23
  4368fc:	mov	x0, x19
  436900:	bl	434f54 <ferror@plt+0x32224>
  436904:	b	435e44 <ferror@plt+0x33114>
  436908:	ldrb	w0, [x19, #1143]
  43690c:	cbz	w0, 4369dc <ferror@plt+0x33cac>
  436910:	mov	w1, #0xb                   	// #11
  436914:	b	4369a8 <ferror@plt+0x33c78>
  436918:	and	w4, w4, #0x3
  43691c:	cmp	w4, #0x2
  436920:	b.eq	43696c <ferror@plt+0x33c3c>  // b.none
  436924:	ldr	w22, [x21, #12]
  436928:	ldr	w0, [x20, #12]
  43692c:	cmp	w22, w0
  436930:	b.ne	436a8c <ferror@plt+0x33d5c>  // b.any
  436934:	sub	w22, w22, #0x1
  436938:	cmn	w22, #0x1
  43693c:	b.eq	436acc <ferror@plt+0x33d9c>  // b.none
  436940:	mov	w0, w22
  436944:	add	x0, x0, #0x1
  436948:	add	x0, x0, x0, lsl #1
  43694c:	lsl	x0, x0, #3
  436950:	add	x1, x20, x0
  436954:	add	x0, x21, x0
  436958:	bl	42eb4c <ferror@plt+0x2be1c>
  43695c:	sub	w22, w22, #0x1
  436960:	cbnz	w0, 436938 <ferror@plt+0x33c08>
  436964:	ldp	x21, x22, [sp, #32]
  436968:	b	436994 <ferror@plt+0x33c64>
  43696c:	mov	x1, x20
  436970:	mov	x0, x21
  436974:	bl	43b9d8 <ferror@plt+0x38ca8>
  436978:	and	w0, w0, #0xff
  43697c:	cbnz	w0, 436988 <ferror@plt+0x33c58>
  436980:	ldp	x21, x22, [sp, #32]
  436984:	b	4369dc <ferror@plt+0x33cac>
  436988:	ldp	x21, x22, [sp, #32]
  43698c:	b	436994 <ferror@plt+0x33c64>
  436990:	ldp	x21, x22, [sp, #32]
  436994:	ldrb	w0, [x23, #18]
  436998:	and	w0, w0, #0x3
  43699c:	mov	w1, #0x0                   	// #0
  4369a0:	cmp	w0, #0x3
  4369a4:	b.eq	436a94 <ferror@plt+0x33d64>  // b.none
  4369a8:	ldr	x5, [x23]
  4369ac:	adrp	x4, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4369b0:	add	x4, x4, #0xe20
  4369b4:	mov	w3, #0x0                   	// #0
  4369b8:	ldr	w2, [x19, #48]
  4369bc:	mov	x0, x19
  4369c0:	bl	426cf0 <ferror@plt+0x23fc0>
  4369c4:	and	w0, w0, #0xff
  4369c8:	cbz	w0, 4369dc <ferror@plt+0x33cac>
  4369cc:	ldrb	w0, [x23, #18]
  4369d0:	and	w0, w0, #0x3
  4369d4:	cmp	w0, #0x2
  4369d8:	b.eq	436aa8 <ferror@plt+0x33d78>  // b.none
  4369dc:	mov	x0, x23
  4369e0:	bl	435c00 <ferror@plt+0x32ed0>
  4369e4:	ldrb	w0, [x23, #18]
  4369e8:	mov	w1, #0x2                   	// #2
  4369ec:	bfxil	w0, w1, #0, #2
  4369f0:	strb	w0, [x23, #18]
  4369f4:	str	x20, [x23, #24]
  4369f8:	ldr	x19, [x23]
  4369fc:	mov	x2, #0x7                   	// #7
  436a00:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436a04:	add	x1, x1, #0xe60
  436a08:	mov	x0, x19
  436a0c:	bl	402830 <strncmp@plt>
  436a10:	cbnz	w0, 436a5c <ferror@plt+0x33d2c>
  436a14:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436a18:	add	x1, x1, #0xe68
  436a1c:	mov	x0, x19
  436a20:	bl	402a20 <strcmp@plt>
  436a24:	cbz	w0, 436a5c <ferror@plt+0x33d2c>
  436a28:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436a2c:	add	x1, x1, #0xe80
  436a30:	mov	x0, x19
  436a34:	bl	402a20 <strcmp@plt>
  436a38:	cbz	w0, 436a5c <ferror@plt+0x33d2c>
  436a3c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436a40:	add	x1, x1, #0xe98
  436a44:	mov	x0, x19
  436a48:	bl	402a20 <strcmp@plt>
  436a4c:	cbz	w0, 436a5c <ferror@plt+0x33d2c>
  436a50:	ldrh	w0, [x23, #18]
  436a54:	orr	w0, w0, #0x20
  436a58:	strh	w0, [x23, #18]
  436a5c:	ldrh	w0, [x23, #18]
  436a60:	ubfx	x1, x0, #2, #8
  436a64:	and	w1, w1, #0xffffffbf
  436a68:	bfi	w0, w1, #2, #8
  436a6c:	strh	w0, [x23, #18]
  436a70:	mov	w0, #0x1                   	// #1
  436a74:	ldp	x19, x20, [sp, #16]
  436a78:	ldp	x23, x24, [sp, #48]
  436a7c:	ldp	x29, x30, [sp], #240
  436a80:	ret
  436a84:	ldp	x21, x22, [sp, #32]
  436a88:	b	436994 <ferror@plt+0x33c64>
  436a8c:	ldp	x21, x22, [sp, #32]
  436a90:	b	436994 <ferror@plt+0x33c64>
  436a94:	ldrh	w0, [x23, #18]
  436a98:	tst	x0, #0x20
  436a9c:	mov	w1, #0xb                   	// #11
  436aa0:	csel	w1, w1, wzr, eq  // eq = none
  436aa4:	b	4369a8 <ferror@plt+0x33c78>
  436aa8:	ldr	x0, [x23, #24]
  436aac:	adrp	x4, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436ab0:	add	x4, x4, #0xe30
  436ab4:	mov	w3, #0x0                   	// #0
  436ab8:	ldr	w2, [x0, #8]
  436abc:	mov	w1, #0x5                   	// #5
  436ac0:	mov	x0, x19
  436ac4:	bl	426bfc <ferror@plt+0x23ecc>
  436ac8:	b	4369dc <ferror@plt+0x33cac>
  436acc:	ldp	x21, x22, [sp, #32]
  436ad0:	b	4369dc <ferror@plt+0x33cac>
  436ad4:	mov	w0, #0x0                   	// #0
  436ad8:	b	436a74 <ferror@plt+0x33d44>
  436adc:	mov	w0, #0x1                   	// #1
  436ae0:	str	w0, [sp, #100]
  436ae4:	b	436738 <ferror@plt+0x33a08>
  436ae8:	ldr	w0, [sp, #104]
  436aec:	str	w0, [sp, #100]
  436af0:	b	436738 <ferror@plt+0x33a08>
  436af4:	ldr	w0, [sp, #104]
  436af8:	str	w0, [sp, #100]
  436afc:	b	436738 <ferror@plt+0x33a08>
  436b00:	str	x21, [sp, #112]
  436b04:	b	436b10 <ferror@plt+0x33de0>
  436b08:	str	x21, [sp, #112]
  436b0c:	mov	x21, x24
  436b10:	ldr	x0, [sp, #112]
  436b14:	sub	x1, x21, x0
  436b18:	str	w1, [sp, #144]
  436b1c:	ldrh	w28, [x20, #16]
  436b20:	cbz	w28, 436300 <ferror@plt+0x335d0>
  436b24:	ldr	x0, [x20]
  436b28:	str	x0, [sp, #128]
  436b2c:	mov	x25, #0x0                   	// #0
  436b30:	and	x0, x1, #0xffffffff
  436b34:	str	x0, [sp, #136]
  436b38:	b	43641c <ferror@plt+0x336ec>
  436b3c:	mov	x21, x24
  436b40:	str	x21, [sp, #112]
  436b44:	b	436b10 <ferror@plt+0x33de0>
  436b48:	stp	x27, x28, [sp, #80]
  436b4c:	ldr	x0, [x19, #56]
  436b50:	ldr	x2, [x0, #16]
  436b54:	ldr	x0, [x0, #24]
  436b58:	sub	x0, x0, x2
  436b5c:	cmp	x0, #0x2f
  436b60:	b.ls	436c8c <ferror@plt+0x33f5c>  // b.plast
  436b64:	mov	w1, #0x0                   	// #0
  436b68:	mov	x0, x19
  436b6c:	bl	435d8c <ferror@plt+0x3305c>
  436b70:	mov	x20, x0
  436b74:	add	x0, x20, #0x18
  436b78:	ldp	x2, x3, [x21]
  436b7c:	stp	x2, x3, [x20, #24]
  436b80:	ldr	x1, [x21, #16]
  436b84:	str	x1, [x0, #16]
  436b88:	mov	w1, #0x1                   	// #1
  436b8c:	str	w1, [x20, #12]
  436b90:	str	wzr, [sp, #160]
  436b94:	ldrb	w27, [x20, #19]
  436b98:	and	w27, w27, #0x8
  436b9c:	ldr	w1, [sp, #104]
  436ba0:	str	w1, [sp, #100]
  436ba4:	str	wzr, [sp, #148]
  436ba8:	mov	w22, #0x0                   	// #0
  436bac:	str	wzr, [sp, #108]
  436bb0:	mov	w26, #0x0                   	// #0
  436bb4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  436bb8:	add	x1, x1, #0x28
  436bbc:	str	x1, [sp, #120]
  436bc0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436bc4:	add	x1, x1, #0xcc8
  436bc8:	str	x1, [sp, #168]
  436bcc:	b	43673c <ferror@plt+0x33a0c>
  436bd0:	stp	x27, x28, [sp, #80]
  436bd4:	ldr	x0, [sp, #160]
  436bd8:	ubfiz	x1, x0, #3, #32
  436bdc:	mov	x0, x19
  436be0:	bl	431f14 <ferror@plt+0x2f1e4>
  436be4:	mov	x22, x0
  436be8:	ldr	x0, [x19, #56]
  436bec:	ldr	x2, [x0, #16]
  436bf0:	ldr	x0, [x0, #24]
  436bf4:	sub	x0, x0, x2
  436bf8:	cmp	x0, #0x2f
  436bfc:	b.ls	436c60 <ferror@plt+0x33f30>  // b.plast
  436c00:	mov	w1, #0x0                   	// #0
  436c04:	mov	x0, x19
  436c08:	bl	435d8c <ferror@plt+0x3305c>
  436c0c:	mov	x20, x0
  436c10:	ldrb	w1, [x20, #19]
  436c14:	bfi	w1, w21, #3, #1
  436c18:	ldrh	w0, [sp, #160]
  436c1c:	strh	w0, [x20, #16]
  436c20:	str	x22, [x20]
  436c24:	orr	w1, w1, #0x4
  436c28:	strb	w1, [x20, #19]
  436c2c:	mov	x0, #0x0                   	// #0
  436c30:	b	436b94 <ferror@plt+0x33e64>
  436c34:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  436c38:	add	x0, x0, #0xc0
  436c3c:	ldp	x2, x3, [x0, #96]
  436c40:	stp	x2, x3, [sp, #200]
  436c44:	ldp	x2, x3, [x0, #112]
  436c48:	stp	x2, x3, [sp, #216]
  436c4c:	ldr	x0, [x0, #128]
  436c50:	str	x0, [sp, #232]
  436c54:	mov	x3, #0x0                   	// #0
  436c58:	mov	w21, #0x4                   	// #4
  436c5c:	b	436018 <ferror@plt+0x332e8>
  436c60:	mov	x2, #0x30                  	// #48
  436c64:	add	x1, x19, #0x38
  436c68:	mov	x0, x19
  436c6c:	bl	42f3b0 <ferror@plt+0x2c680>
  436c70:	ldr	x0, [x19, #56]
  436c74:	ldr	x2, [x0, #16]
  436c78:	mov	w1, #0x0                   	// #0
  436c7c:	mov	x0, x19
  436c80:	bl	435d8c <ferror@plt+0x3305c>
  436c84:	mov	x20, x0
  436c88:	b	436c10 <ferror@plt+0x33ee0>
  436c8c:	mov	x2, #0x30                  	// #48
  436c90:	add	x1, x19, #0x38
  436c94:	mov	x0, x19
  436c98:	bl	42f3b0 <ferror@plt+0x2c680>
  436c9c:	ldr	x0, [x19, #56]
  436ca0:	ldr	x2, [x0, #16]
  436ca4:	mov	w1, #0x0                   	// #0
  436ca8:	mov	x0, x19
  436cac:	bl	435d8c <ferror@plt+0x3305c>
  436cb0:	mov	x20, x0
  436cb4:	b	436b74 <ferror@plt+0x33e44>
  436cb8:	ldr	x0, [x1, #24]
  436cbc:	add	w2, w2, #0x1
  436cc0:	strb	w2, [x0, #18]
  436cc4:	ret
  436cc8:	stp	x29, x30, [sp, #-48]!
  436ccc:	mov	x29, sp
  436cd0:	stp	x19, x20, [sp, #16]
  436cd4:	mov	x20, x0
  436cd8:	mov	x19, x1
  436cdc:	ldrh	w2, [x1, #18]
  436ce0:	orr	w2, w2, #0x80
  436ce4:	strh	w2, [x1, #18]
  436ce8:	and	w2, w2, #0x3
  436cec:	cmp	w2, #0x2
  436cf0:	b.eq	436d1c <ferror@plt+0x33fec>  // b.none
  436cf4:	cmp	w2, #0x3
  436cf8:	b.eq	436d44 <ferror@plt+0x34014>  // b.none
  436cfc:	cbz	w2, 436d70 <ferror@plt+0x34040>
  436d00:	str	x21, [sp, #32]
  436d04:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436d08:	add	x2, x2, #0xeb0
  436d0c:	mov	w1, #0xe0b                 	// #3595
  436d10:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436d14:	add	x0, x0, #0x7f8
  436d18:	bl	4102b4 <ferror@plt+0xd584>
  436d1c:	str	x21, [sp, #32]
  436d20:	ldr	x21, [x1, #24]
  436d24:	ldrb	w2, [x21, #18]
  436d28:	cbz	w2, 436d68 <ferror@plt+0x34038>
  436d2c:	ldr	x3, [x0, #1048]
  436d30:	sub	w2, w2, #0x1
  436d34:	mov	x1, x21
  436d38:	blr	x3
  436d3c:	strb	wzr, [x21, #18]
  436d40:	ldr	x21, [sp, #32]
  436d44:	ldr	x3, [x20, #1008]
  436d48:	cbz	x3, 436d5c <ferror@plt+0x3402c>
  436d4c:	mov	x2, x19
  436d50:	ldr	w1, [x20, #48]
  436d54:	mov	x0, x20
  436d58:	blr	x3
  436d5c:	ldp	x19, x20, [sp, #16]
  436d60:	ldp	x29, x30, [sp], #48
  436d64:	ret
  436d68:	ldr	x21, [sp, #32]
  436d6c:	b	436d44 <ferror@plt+0x34014>
  436d70:	ldr	x3, [x0, #1016]
  436d74:	cbz	x3, 436d5c <ferror@plt+0x3402c>
  436d78:	mov	x2, x1
  436d7c:	ldr	w1, [x0, #48]
  436d80:	blr	x3
  436d84:	b	436d5c <ferror@plt+0x3402c>
  436d88:	stp	x29, x30, [sp, #-288]!
  436d8c:	mov	x29, sp
  436d90:	stp	x25, x26, [sp, #64]
  436d94:	stp	x27, x28, [sp, #80]
  436d98:	mov	x26, x0
  436d9c:	mov	x28, x1
  436da0:	str	x2, [sp, #104]
  436da4:	str	w3, [sp, #100]
  436da8:	strb	wzr, [x0, #440]
  436dac:	strb	wzr, [x0, #19]
  436db0:	mov	w0, #0x1                   	// #1
  436db4:	strb	w0, [x26, #192]
  436db8:	ldrb	w0, [x1, #18]
  436dbc:	and	w0, w0, #0x3
  436dc0:	cmp	w0, #0x2
  436dc4:	b.eq	436e04 <ferror@plt+0x340d4>  // b.none
  436dc8:	strb	wzr, [x26, #192]
  436dcc:	ldr	x1, [x26, #184]
  436dd0:	ldrb	w0, [x1, #18]
  436dd4:	and	w0, w0, #0x3
  436dd8:	cmp	w0, #0x2
  436ddc:	b.eq	438184 <ferror@plt+0x35454>  // b.none
  436de0:	ldr	w3, [x26, #176]
  436de4:	ldr	w2, [sp, #100]
  436de8:	mov	x1, x28
  436dec:	mov	x0, x26
  436df0:	bl	4355f0 <ferror@plt+0x328c0>
  436df4:	ldp	x25, x26, [sp, #64]
  436df8:	ldp	x27, x28, [sp, #80]
  436dfc:	ldp	x29, x30, [sp], #288
  436e00:	ret
  436e04:	stp	x19, x20, [sp, #16]
  436e08:	stp	x21, x22, [sp, #32]
  436e0c:	ldr	x0, [x1, #24]
  436e10:	str	x0, [sp, #112]
  436e14:	ldrb	w0, [x0, #19]
  436e18:	mov	x27, #0x0                   	// #0
  436e1c:	tbnz	w0, #2, 436e98 <ferror@plt+0x34168>
  436e20:	ldrh	w0, [x28, #18]
  436e24:	ubfx	x1, x0, #2, #8
  436e28:	orr	w2, w1, #0x10
  436e2c:	bfi	w0, w2, #2, #8
  436e30:	strh	w0, [x28, #18]
  436e34:	tbz	w1, #5, 437f98 <ferror@plt+0x35268>
  436e38:	ldr	x3, [x26, #1032]
  436e3c:	cbz	x3, 436e50 <ferror@plt+0x34120>
  436e40:	mov	x2, x28
  436e44:	ldr	w1, [sp, #100]
  436e48:	mov	x0, x26
  436e4c:	blr	x3
  436e50:	ldr	x1, [sp, #112]
  436e54:	ldrb	w0, [x1, #19]
  436e58:	orr	w0, w0, #0x20
  436e5c:	strb	w0, [x1, #19]
  436e60:	ldrh	w0, [x1, #16]
  436e64:	cbnz	w0, 4380c0 <ferror@plt+0x35390>
  436e68:	ldrb	w0, [x1, #19]
  436e6c:	tbnz	w0, #6, 437fa8 <ferror@plt+0x35278>
  436e70:	ldr	w21, [x1, #12]
  436e74:	ldrb	w0, [x26, #1157]
  436e78:	cbnz	w0, 43801c <ferror@plt+0x352ec>
  436e7c:	mov	w3, w21
  436e80:	ldr	x0, [sp, #112]
  436e84:	add	x2, x0, #0x18
  436e88:	mov	x1, x28
  436e8c:	mov	x0, x26
  436e90:	bl	435580 <ferror@plt+0x32850>
  436e94:	b	4380b0 <ferror@plt+0x35380>
  436e98:	ldrb	w0, [x26, #24]
  436e9c:	add	w0, w0, #0x1
  436ea0:	strb	w0, [x26, #24]
  436ea4:	ldr	w0, [x26, #500]
  436ea8:	add	w0, w0, #0x1
  436eac:	str	w0, [x26, #500]
  436eb0:	mov	w0, #0x1                   	// #1
  436eb4:	strb	w0, [x26, #25]
  436eb8:	mov	x19, #0x0                   	// #0
  436ebc:	b	436ed4 <ferror@plt+0x341a4>
  436ec0:	mov	x19, x0
  436ec4:	b	436ed4 <ferror@plt+0x341a4>
  436ec8:	ldr	x1, [x0, #8]
  436ecc:	cmp	x1, #0x0
  436ed0:	csel	x19, x19, x0, ne  // ne = any
  436ed4:	mov	x0, x26
  436ed8:	bl	438a9c <ferror@plt+0x35d6c>
  436edc:	ldrb	w1, [x0, #4]
  436ee0:	cmp	w1, #0x53
  436ee4:	b.ne	436ef8 <ferror@plt+0x341c8>  // b.any
  436ee8:	cbz	x19, 436ec0 <ferror@plt+0x34190>
  436eec:	ldrh	w1, [x19, #6]
  436ef0:	tbnz	w1, #0, 436ed4 <ferror@plt+0x341a4>
  436ef4:	b	436ec8 <ferror@plt+0x34198>
  436ef8:	cmp	w1, #0x14
  436efc:	b.eq	436f88 <ferror@plt+0x34258>  // b.none
  436f00:	cmp	w1, #0x16
  436f04:	b.ne	436f14 <ferror@plt+0x341e4>  // b.any
  436f08:	add	x1, x26, #0x2b0
  436f0c:	cmp	x0, x1
  436f10:	b.ne	436f38 <ferror@plt+0x34208>  // b.any
  436f14:	mov	w1, #0x1                   	// #1
  436f18:	mov	x0, x26
  436f1c:	bl	435970 <ferror@plt+0x32c40>
  436f20:	cbz	x19, 436f38 <ferror@plt+0x34208>
  436f24:	mov	w3, #0x1                   	// #1
  436f28:	mov	x2, x19
  436f2c:	mov	x1, #0x0                   	// #0
  436f30:	mov	x0, x26
  436f34:	bl	435580 <ferror@plt+0x32850>
  436f38:	strb	wzr, [x26, #25]
  436f3c:	ldr	w0, [x26, #500]
  436f40:	sub	w0, w0, #0x1
  436f44:	str	w0, [x26, #500]
  436f48:	ldrb	w0, [x26, #24]
  436f4c:	sub	w0, w0, #0x1
  436f50:	strb	w0, [x26, #24]
  436f54:	ldrb	w0, [x26, #1138]
  436f58:	mov	x27, #0x0                   	// #0
  436f5c:	cbz	w0, 437410 <ferror@plt+0x346e0>
  436f60:	ldr	x0, [x28, #24]
  436f64:	ldrb	w0, [x0, #19]
  436f68:	tbnz	w0, #4, 437400 <ferror@plt+0x346d0>
  436f6c:	ldr	x3, [x28]
  436f70:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  436f74:	add	x2, x2, #0xef8
  436f78:	mov	w1, #0x6                   	// #6
  436f7c:	mov	x0, x26
  436f80:	bl	426a88 <ferror@plt+0x23d58>
  436f84:	b	437400 <ferror@plt+0x346d0>
  436f88:	stp	x23, x24, [sp, #48]
  436f8c:	mov	w0, #0x2                   	// #2
  436f90:	strb	w0, [x26, #25]
  436f94:	ldrb	w25, [x26, #1157]
  436f98:	ldr	x0, [x28, #24]
  436f9c:	str	x0, [sp, #120]
  436fa0:	ldrh	w1, [x0, #16]
  436fa4:	ldrh	w0, [x0, #16]
  436fa8:	cmp	w1, #0x0
  436fac:	csinc	w0, w0, wzr, ne  // ne = any
  436fb0:	and	x19, x0, #0xffff
  436fb4:	ubfiz	x0, x0, #3, #16
  436fb8:	sub	x1, x0, x19
  436fbc:	lsl	x1, x1, #6
  436fc0:	mov	x0, x26
  436fc4:	bl	42f1e8 <ferror@plt+0x2c4b8>
  436fc8:	mov	x20, x0
  436fcc:	str	x0, [sp, #136]
  436fd0:	ldr	x21, [x0, #8]
  436fd4:	str	x21, [sp, #152]
  436fd8:	add	x19, x19, x19, lsl #1
  436fdc:	lsl	x19, x19, #4
  436fe0:	mov	x2, x19
  436fe4:	mov	w1, #0x0                   	// #0
  436fe8:	mov	x0, x21
  436fec:	bl	402890 <memset@plt>
  436ff0:	add	x19, x21, x19
  436ff4:	str	x19, [x20, #16]
  436ff8:	mov	x22, x20
  436ffc:	mov	x27, #0x0                   	// #0
  437000:	str	wzr, [sp, #128]
  437004:	str	x28, [sp, #144]
  437008:	b	437294 <ferror@plt+0x34564>
  43700c:	mov	x0, #0xc8                  	// #200
  437010:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  437014:	str	x0, [x21, #32]
  437018:	b	4372b0 <ferror@plt+0x34580>
  43701c:	mov	x2, x28
  437020:	mov	x1, x22
  437024:	mov	x0, x26
  437028:	bl	42f290 <ferror@plt+0x2c560>
  43702c:	mov	x22, x0
  437030:	ldr	x0, [x0, #16]
  437034:	str	x0, [x21]
  437038:	b	43709c <ferror@plt+0x3436c>
  43703c:	add	w24, w24, #0x3e8
  437040:	ubfiz	x1, x24, #2, #32
  437044:	ldr	x0, [x21, #32]
  437048:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43704c:	str	x0, [x21, #32]
  437050:	b	4370a8 <ferror@plt+0x34378>
  437054:	cbz	w20, 437080 <ferror@plt+0x34350>
  437058:	ldrb	w0, [x26, #1157]
  43705c:	cmp	w0, #0x0
  437060:	cset	w5, ne  // ne = any
  437064:	mov	w4, #0x0                   	// #0
  437068:	mov	w3, w20
  43706c:	ldr	w2, [sp, #264]
  437070:	mov	x1, x19
  437074:	mov	x0, x21
  437078:	bl	434bec <ferror@plt+0x31ebc>
  43707c:	add	w20, w20, #0x1
  437080:	add	w19, w20, #0x2
  437084:	add	w0, w20, #0x2
  437088:	ldr	x1, [x21]
  43708c:	add	x0, x1, x0, lsl #3
  437090:	ldr	x1, [x22, #24]
  437094:	cmp	x1, x0
  437098:	b.cc	43701c <ferror@plt+0x342ec>  // b.lo, b.ul, b.last
  43709c:	cmp	w25, #0x0
  4370a0:	ccmp	w19, w24, #0x0, ne  // ne = any
  4370a4:	b.hi	43703c <ferror@plt+0x3430c>  // b.pmore
  4370a8:	add	x1, sp, #0x108
  4370ac:	mov	x0, x26
  4370b0:	bl	4385c8 <ferror@plt+0x35898>
  4370b4:	mov	x19, x0
  4370b8:	ldrb	w0, [x0, #4]
  4370bc:	cmp	w0, #0x53
  4370c0:	b.eq	437054 <ferror@plt+0x34324>  // b.none
  4370c4:	cmp	w0, #0x14
  4370c8:	b.eq	437114 <ferror@plt+0x343e4>  // b.none
  4370cc:	cmp	w0, #0x15
  4370d0:	b.eq	43711c <ferror@plt+0x343ec>  // b.none
  4370d4:	cmp	w0, #0x13
  4370d8:	b.eq	43712c <ferror@plt+0x343fc>  // b.none
  4370dc:	cmp	w0, #0x16
  4370e0:	b.eq	437208 <ferror@plt+0x344d8>  // b.none
  4370e4:	cmp	w0, #0x25
  4370e8:	b.eq	437150 <ferror@plt+0x34420>  // b.none
  4370ec:	cmp	w0, #0x51
  4370f0:	b.ne	437058 <ferror@plt+0x34328>  // b.any
  4370f4:	mov	x0, x26
  4370f8:	bl	42e4f4 <ferror@plt+0x2b7c4>
  4370fc:	ldp	x2, x3, [x19]
  437100:	stp	x2, x3, [x0]
  437104:	ldr	x1, [x19, #16]
  437108:	str	x1, [x0, #16]
  43710c:	mov	x19, x0
  437110:	b	4371c8 <ferror@plt+0x34498>
  437114:	add	w23, w23, #0x1
  437118:	b	437058 <ferror@plt+0x34328>
  43711c:	sub	w0, w23, #0x1
  437120:	cbz	w23, 437208 <ferror@plt+0x344d8>
  437124:	mov	w23, w0
  437128:	b	437058 <ferror@plt+0x34328>
  43712c:	cbnz	w23, 437058 <ferror@plt+0x34328>
  437130:	ldr	x1, [sp, #120]
  437134:	ldrb	w0, [x1, #19]
  437138:	tbz	w0, #3, 437208 <ferror@plt+0x344d8>
  43713c:	ldrh	w0, [x1, #16]
  437140:	ldr	w1, [sp, #128]
  437144:	cmp	w1, w0
  437148:	b.eq	437058 <ferror@plt+0x34328>  // b.none
  43714c:	b	437208 <ferror@plt+0x344d8>
  437150:	ldrh	w0, [x19, #6]
  437154:	tbz	w0, #6, 437058 <ferror@plt+0x34328>
  437158:	b	437208 <ferror@plt+0x344d8>
  43715c:	mov	x1, #0x100                 	// #256
  437160:	mov	x0, x26
  437164:	bl	42f1e8 <ferror@plt+0x2c4b8>
  437168:	mov	x27, x0
  43716c:	b	43718c <ferror@plt+0x3445c>
  437170:	ldr	x0, [x27, #8]
  437174:	sub	x1, x1, x0
  437178:	lsl	x1, x1, #1
  43717c:	mov	x0, x26
  437180:	bl	42f1e8 <ferror@plt+0x2c4b8>
  437184:	str	x27, [x0]
  437188:	mov	x27, x0
  43718c:	ldr	x0, [x27, #16]
  437190:	str	x19, [x0]
  437194:	ldr	x0, [x27, #16]
  437198:	add	x0, x0, #0x8
  43719c:	str	x0, [x27, #16]
  4371a0:	ldrb	w0, [x19, #4]
  4371a4:	cmp	w0, #0x52
  4371a8:	b.eq	4371e4 <ferror@plt+0x344b4>  // b.none
  4371ac:	add	x1, sp, #0x108
  4371b0:	mov	x0, x26
  4371b4:	bl	4385c8 <ferror@plt+0x35898>
  4371b8:	mov	x19, x0
  4371bc:	ldrb	w0, [x0, #4]
  4371c0:	cmp	w0, #0x16
  4371c4:	b.eq	4371e4 <ferror@plt+0x344b4>  // b.none
  4371c8:	cbz	x27, 43715c <ferror@plt+0x3442c>
  4371cc:	ldr	x1, [x27, #16]
  4371d0:	ldr	x0, [x27, #24]
  4371d4:	sub	x0, x0, x1
  4371d8:	cmp	x0, #0x7
  4371dc:	b.ls	437170 <ferror@plt+0x34440>  // b.plast
  4371e0:	b	43718c <ferror@plt+0x3445c>
  4371e4:	mov	w0, #0x2                   	// #2
  4371e8:	strb	w0, [x26, #25]
  4371ec:	mov	w0, #0x1                   	// #1
  4371f0:	strb	w0, [x26, #24]
  4371f4:	ldrb	w0, [x19, #4]
  4371f8:	cmp	w0, #0x16
  4371fc:	b.eq	437208 <ferror@plt+0x344d8>  // b.none
  437200:	b	437080 <ferror@plt+0x34350>
  437204:	mov	w20, w0
  437208:	cbz	w20, 437224 <ferror@plt+0x344f4>
  43720c:	sub	w0, w20, #0x1
  437210:	ldr	x1, [x21]
  437214:	ldr	x1, [x1, w0, uxtw #3]
  437218:	ldrb	w1, [x1, #4]
  43721c:	cmp	w1, #0x53
  437220:	b.eq	437204 <ferror@plt+0x344d4>  // b.none
  437224:	str	w20, [x21, #24]
  437228:	ldrb	w0, [x26, #1157]
  43722c:	cmp	w0, #0x0
  437230:	cset	w5, ne  // ne = any
  437234:	mov	w4, #0x0                   	// #0
  437238:	mov	w3, w20
  43723c:	ldr	w2, [x26, #688]
  437240:	add	x1, x26, #0x2b0
  437244:	mov	x0, x21
  437248:	bl	434bec <ferror@plt+0x31ebc>
  43724c:	ldr	x1, [sp, #120]
  437250:	ldrh	w0, [x1, #16]
  437254:	ldr	w2, [sp, #128]
  437258:	cmp	w2, w0
  43725c:	b.hi	437280 <ferror@plt+0x34550>  // b.pmore
  437260:	add	w20, w20, #0x1
  437264:	ldr	x0, [x21]
  437268:	add	x20, x0, x20, lsl #3
  43726c:	str	x20, [x22, #16]
  437270:	ldrh	w1, [x1, #16]
  437274:	add	x0, x21, #0x30
  437278:	cmp	w2, w1
  43727c:	csel	x21, x0, x21, ne  // ne = any
  437280:	ldrb	w1, [x19, #4]
  437284:	sub	w0, w1, #0x15
  437288:	and	w0, w0, #0xff
  43728c:	cmp	w0, #0x1
  437290:	b.ls	4372c4 <ferror@plt+0x34594>  // b.plast
  437294:	ldr	w0, [sp, #128]
  437298:	str	w0, [sp, #132]
  43729c:	add	w0, w0, #0x1
  4372a0:	str	w0, [sp, #128]
  4372a4:	ldr	x0, [x22, #16]
  4372a8:	str	x0, [x21]
  4372ac:	cbnz	w25, 43700c <ferror@plt+0x342dc>
  4372b0:	mov	w24, #0x32                  	// #50
  4372b4:	mov	w20, #0x0                   	// #0
  4372b8:	mov	w23, #0x0                   	// #0
  4372bc:	mov	x28, #0x1f40                	// #8000
  4372c0:	b	437080 <ferror@plt+0x34350>
  4372c4:	ldr	x28, [sp, #144]
  4372c8:	cmp	w1, #0x16
  4372cc:	b.eq	43739c <ferror@plt+0x3466c>  // b.none
  4372d0:	ldr	w0, [sp, #128]
  4372d4:	mov	w19, w0
  4372d8:	cmp	w0, #0x1
  4372dc:	b.eq	437430 <ferror@plt+0x34700>  // b.none
  4372e0:	mov	w3, w19
  4372e4:	mov	x2, x28
  4372e8:	ldr	x20, [sp, #120]
  4372ec:	mov	x1, x20
  4372f0:	mov	x0, x26
  4372f4:	bl	435464 <ferror@plt+0x32734>
  4372f8:	ands	w0, w0, #0xff
  4372fc:	str	w0, [sp, #200]
  437300:	b.eq	4373cc <ferror@plt+0x3469c>  // b.none
  437304:	ldrb	w0, [x20, #19]
  437308:	tbz	w0, #3, 437348 <ferror@plt+0x34618>
  43730c:	ldrh	w0, [x20, #16]
  437310:	cmp	w19, w0
  437314:	b.cc	437334 <ferror@plt+0x34604>  // b.lo, b.ul, b.last
  437318:	cmp	w19, #0x1
  43731c:	b.ne	437348 <ferror@plt+0x34618>  // b.any
  437320:	ldr	x1, [sp, #152]
  437324:	ldr	w1, [x1, #24]
  437328:	cbnz	w1, 437348 <ferror@plt+0x34618>
  43732c:	ldrb	w1, [x26, #1153]
  437330:	cbnz	w1, 437348 <ferror@plt+0x34618>
  437334:	ubfiz	x1, x0, #1, #16
  437338:	add	x0, x1, w0, uxth
  43733c:	ldr	x1, [sp, #152]
  437340:	add	x0, x1, x0, lsl #4
  437344:	stur	xzr, [x0, #-48]
  437348:	strb	wzr, [x26, #25]
  43734c:	ldr	w0, [x26, #500]
  437350:	sub	w0, w0, #0x1
  437354:	str	w0, [x26, #500]
  437358:	ldrb	w0, [x26, #24]
  43735c:	sub	w0, w0, #0x1
  437360:	strb	w0, [x26, #24]
  437364:	ldr	x0, [sp, #112]
  437368:	ldrh	w0, [x0, #16]
  43736c:	cbnz	w0, 43745c <ferror@plt+0x3472c>
  437370:	ldr	x0, [sp, #136]
  437374:	ldr	x0, [x0, #8]
  437378:	ldr	w1, [sp, #128]
  43737c:	cbz	w1, 437f88 <ferror@plt+0x35258>
  437380:	add	x19, x0, #0x8
  437384:	ldr	w1, [sp, #132]
  437388:	ubfiz	x21, x1, #1, #32
  43738c:	add	x21, x21, w1, uxtw
  437390:	add	x0, x0, #0x38
  437394:	add	x21, x0, x21, lsl #4
  437398:	b	437f50 <ferror@plt+0x35220>
  43739c:	ldr	x0, [x26, #136]
  4373a0:	ldr	x0, [x0, #8]
  4373a4:	cbz	x0, 437424 <ferror@plt+0x346f4>
  4373a8:	mov	w1, #0x1                   	// #1
  4373ac:	mov	x0, x26
  4373b0:	bl	435970 <ferror@plt+0x32c40>
  4373b4:	ldr	x3, [x28]
  4373b8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4373bc:	add	x2, x2, #0xec8
  4373c0:	mov	w1, #0x3                   	// #3
  4373c4:	mov	x0, x26
  4373c8:	bl	426a10 <ferror@plt+0x23ce0>
  4373cc:	ldr	x1, [sp, #136]
  4373d0:	mov	x0, x26
  4373d4:	bl	42f1c8 <ferror@plt+0x2c498>
  4373d8:	strb	wzr, [x26, #25]
  4373dc:	ldr	w0, [x26, #500]
  4373e0:	sub	w0, w0, #0x1
  4373e4:	str	w0, [x26, #500]
  4373e8:	ldrb	w0, [x26, #24]
  4373ec:	sub	w0, w0, #0x1
  4373f0:	strb	w0, [x26, #24]
  4373f4:	ldrb	w0, [x26, #1138]
  4373f8:	cbnz	w0, 437454 <ferror@plt+0x34724>
  4373fc:	ldp	x23, x24, [sp, #48]
  437400:	cbz	x27, 437410 <ferror@plt+0x346e0>
  437404:	mov	x1, x27
  437408:	mov	x0, x26
  43740c:	bl	42f1c8 <ferror@plt+0x2c498>
  437410:	strb	wzr, [x26, #192]
  437414:	mov	w0, #0x0                   	// #0
  437418:	ldp	x19, x20, [sp, #16]
  43741c:	ldp	x21, x22, [sp, #32]
  437420:	b	436df4 <ferror@plt+0x340c4>
  437424:	ldrb	w0, [x26, #16]
  437428:	cbz	w0, 4373b4 <ferror@plt+0x34684>
  43742c:	b	4373a8 <ferror@plt+0x34678>
  437430:	ldr	x0, [sp, #120]
  437434:	ldrh	w0, [x0, #16]
  437438:	ldr	w19, [sp, #128]
  43743c:	cbnz	w0, 4372e0 <ferror@plt+0x345b0>
  437440:	ldr	x0, [sp, #152]
  437444:	ldr	w0, [x0, #24]
  437448:	cmp	w0, #0x0
  43744c:	cset	w19, ne  // ne = any
  437450:	b	4372e0 <ferror@plt+0x345b0>
  437454:	ldp	x23, x24, [sp, #48]
  437458:	b	436f60 <ferror@plt+0x34230>
  43745c:	ldr	x0, [sp, #136]
  437460:	ldr	x0, [x0, #8]
  437464:	str	x0, [sp, #144]
  437468:	str	xzr, [sp, #256]
  43746c:	ldr	x1, [sp, #112]
  437470:	ldrb	w0, [x1, #19]
  437474:	tbnz	w0, #6, 4374b8 <ferror@plt+0x34788>
  437478:	ldr	w19, [x1, #12]
  43747c:	ldr	x0, [sp, #112]
  437480:	add	x25, x0, #0x18
  437484:	str	x25, [sp, #120]
  437488:	ubfiz	x0, x19, #1, #32
  43748c:	add	x0, x0, w19, uxtw
  437490:	add	x24, x25, x0, lsl #3
  437494:	cmp	x25, x24
  437498:	b.cs	4379c4 <ferror@plt+0x34c94>  // b.hs, b.nlast
  43749c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4374a0:	add	x0, x0, #0xf40
  4374a4:	str	x0, [sp, #192]
  4374a8:	str	x27, [sp, #168]
  4374ac:	str	x28, [sp, #176]
  4374b0:	mov	w28, w19
  4374b4:	b	437750 <ferror@plt+0x34a20>
  4374b8:	ldr	x2, [sp, #112]
  4374bc:	ldr	w1, [x2, #12]
  4374c0:	mov	w19, w1
  4374c4:	sub	w1, w1, #0x1
  4374c8:	cbz	w19, 438518 <ferror@plt+0x357e8>
  4374cc:	ubfiz	x0, x1, #1, #32
  4374d0:	add	x0, x0, w1, uxtw
  4374d4:	add	x0, x2, x0, lsl #3
  4374d8:	ldrb	w0, [x0, #28]
  4374dc:	cmp	w0, #0x26
  4374e0:	b.eq	4374c0 <ferror@plt+0x34790>  // b.none
  4374e4:	b	43747c <ferror@plt+0x3474c>
  4374e8:	mov	x2, #0x3                   	// #3
  4374ec:	add	x1, x26, #0x40
  4374f0:	mov	x0, x26
  4374f4:	bl	42f3b0 <ferror@plt+0x2c680>
  4374f8:	b	4377b0 <ferror@plt+0x34a80>
  4374fc:	cbz	x27, 437510 <ferror@plt+0x347e0>
  437500:	ldrh	w0, [x27, #6]
  437504:	tbnz	w0, #0, 4375e4 <ferror@plt+0x348b4>
  437508:	ldr	x0, [x22, #8]
  43750c:	cbnz	x0, 4375e4 <ferror@plt+0x348b4>
  437510:	ldr	x27, [x22, #8]
  437514:	b	4375e4 <ferror@plt+0x348b4>
  437518:	bl	42831c <ferror@plt+0x255ec>
  43751c:	and	w0, w0, #0xff
  437520:	cbnz	w0, 437624 <ferror@plt+0x348f4>
  437524:	ldrb	w0, [x22, #4]
  437528:	bl	42832c <ferror@plt+0x255fc>
  43752c:	and	w24, w0, #0xff
  437530:	mov	x0, x22
  437534:	bl	42e6bc <ferror@plt+0x2b98c>
  437538:	mov	w20, w0
  43753c:	cbnz	w24, 437630 <ferror@plt+0x34900>
  437540:	add	x20, x20, #0x3
  437544:	ldr	x1, [x26, #64]
  437548:	ldr	x0, [x1, #24]
  43754c:	sub	x0, x0, x19
  437550:	cmp	x20, x0
  437554:	b.hi	43763c <ferror@plt+0x3490c>  // b.pmore
  437558:	sub	x0, x19, #0x1
  43755c:	ldr	x1, [x26, #64]
  437560:	ldr	x1, [x1, #16]
  437564:	cmp	x1, x0
  437568:	b.eq	437584 <ferror@plt+0x34854>  // b.none
  43756c:	cmp	x27, #0x0
  437570:	csel	x27, x27, x22, ne  // ne = any
  437574:	ldrh	w0, [x27, #6]
  437578:	tbz	w0, #0, 437584 <ferror@plt+0x34854>
  43757c:	mov	w0, #0x20                  	// #32
  437580:	strb	w0, [x19], #1
  437584:	cbz	w24, 437664 <ferror@plt+0x34934>
  437588:	mov	x1, x20
  43758c:	mov	x0, x26
  437590:	bl	42f1e8 <ferror@plt+0x2c4b8>
  437594:	mov	x20, x0
  437598:	ldr	x24, [x0, #16]
  43759c:	mov	w3, #0x1                   	// #1
  4375a0:	mov	x2, x24
  4375a4:	mov	x1, x22
  4375a8:	mov	x0, x26
  4375ac:	bl	42e788 <ferror@plt+0x2ba58>
  4375b0:	sub	w2, w0, w24
  4375b4:	mov	x1, x24
  4375b8:	mov	x0, x19
  4375bc:	bl	434fe4 <ferror@plt+0x322b4>
  4375c0:	mov	x19, x0
  4375c4:	mov	x1, x20
  4375c8:	mov	x0, x26
  4375cc:	bl	42f1c8 <ferror@plt+0x2c498>
  4375d0:	ldrb	w0, [x22, #4]
  4375d4:	cmp	w0, #0x3d
  4375d8:	b.eq	437680 <ferror@plt+0x34950>  // b.none
  4375dc:	ldr	x27, [sp, #152]
  4375e0:	str	wzr, [sp, #160]
  4375e4:	add	w23, w23, #0x1
  4375e8:	ldr	w0, [x21, #24]
  4375ec:	cmp	w0, w23
  4375f0:	b.ls	4376b0 <ferror@plt+0x34980>  // b.plast
  4375f4:	ldr	x0, [x21]
  4375f8:	ldr	x22, [x0, w23, uxtw #3]
  4375fc:	ldrb	w0, [x22, #4]
  437600:	cmp	w0, #0x53
  437604:	b.eq	4374fc <ferror@plt+0x347cc>  // b.none
  437608:	sub	w2, w0, #0x38
  43760c:	and	w2, w2, #0xff
  437610:	sub	w1, w0, #0x3e
  437614:	and	w1, w1, #0xff
  437618:	cmp	w2, #0x4
  43761c:	ccmp	w1, #0x4, #0x0, hi  // hi = pmore
  437620:	b.hi	437518 <ferror@plt+0x347e8>  // b.pmore
  437624:	mov	x0, x22
  437628:	bl	42e6bc <ferror@plt+0x2b98c>
  43762c:	mov	w20, w0
  437630:	lsl	x20, x20, #2
  437634:	ldr	w24, [sp, #188]
  437638:	b	437540 <ferror@plt+0x34810>
  43763c:	ldr	x0, [x1, #16]
  437640:	sub	x19, x19, x0
  437644:	mov	x2, x20
  437648:	ldr	x1, [sp, #208]
  43764c:	mov	x0, x26
  437650:	bl	42f3b0 <ferror@plt+0x2c680>
  437654:	ldr	x0, [x26, #64]
  437658:	ldr	x0, [x0, #16]
  43765c:	add	x19, x0, x19
  437660:	b	437558 <ferror@plt+0x34828>
  437664:	mov	w3, #0x1                   	// #1
  437668:	mov	x2, x19
  43766c:	mov	x1, x22
  437670:	mov	x0, x26
  437674:	bl	42e788 <ferror@plt+0x2ba58>
  437678:	mov	x19, x0
  43767c:	b	4375d0 <ferror@plt+0x348a0>
  437680:	ldr	x0, [x22, #16]
  437684:	ldrb	w0, [x0]
  437688:	cmp	w0, #0x5c
  43768c:	b.eq	43769c <ferror@plt+0x3496c>  // b.none
  437690:	ldr	x27, [sp, #152]
  437694:	str	wzr, [sp, #160]
  437698:	b	4375e4 <ferror@plt+0x348b4>
  43769c:	ldr	w0, [sp, #160]
  4376a0:	add	w0, w0, #0x1
  4376a4:	str	w0, [sp, #160]
  4376a8:	ldr	x27, [sp, #152]
  4376ac:	b	4375e4 <ferror@plt+0x348b4>
  4376b0:	ldr	x24, [sp, #216]
  4376b4:	ldr	x0, [sp, #160]
  4376b8:	tbnz	w0, #0, 437708 <ferror@plt+0x349d8>
  4376bc:	add	x20, x19, #0x1
  4376c0:	mov	x0, x19
  4376c4:	mov	w1, #0x22                  	// #34
  4376c8:	strb	w1, [x0], #2
  4376cc:	ldr	x1, [x26, #64]
  4376d0:	ldr	x19, [x1, #16]
  4376d4:	sub	x20, x20, x19
  4376d8:	str	x0, [x1, #16]
  4376dc:	mov	x0, x26
  4376e0:	bl	42e4f4 <ferror@plt+0x2b7c4>
  4376e4:	strb	wzr, [x19, w20, uxtw]
  4376e8:	mov	w1, #0x3e                  	// #62
  4376ec:	strb	w1, [x0, #4]
  4376f0:	str	w20, [x0, #8]
  4376f4:	str	x19, [x0, #16]
  4376f8:	strh	wzr, [x0, #6]
  4376fc:	str	x0, [x21, #16]
  437700:	ldr	w19, [sp, #184]
  437704:	b	437744 <ferror@plt+0x34a14>
  437708:	ldr	x2, [sp, #192]
  43770c:	mov	w1, #0x0                   	// #0
  437710:	mov	x0, x26
  437714:	bl	426a10 <ferror@plt+0x23ce0>
  437718:	sub	x19, x19, #0x1
  43771c:	b	4376bc <ferror@plt+0x3498c>
  437720:	tbnz	w0, #3, 437738 <ferror@plt+0x34a08>
  437724:	ldr	x0, [sp, #120]
  437728:	cmp	x0, x25
  43772c:	b.eq	4377ec <ferror@plt+0x34abc>  // b.none
  437730:	ldurh	w0, [x25, #-18]
  437734:	tbz	w0, #3, 4377ec <ferror@plt+0x34abc>
  437738:	add	w19, w19, #0x1
  43773c:	ldr	w0, [x21, #24]
  437740:	add	w19, w19, w0
  437744:	add	x25, x25, #0x18
  437748:	cmp	x24, x25
  43774c:	b.ls	437954 <ferror@plt+0x34c24>  // b.plast
  437750:	ldrb	w0, [x25, #4]
  437754:	cmp	w0, #0x50
  437758:	b.ne	437744 <ferror@plt+0x34a14>  // b.any
  43775c:	add	w1, w19, #0x2
  437760:	str	w1, [sp, #184]
  437764:	add	w28, w28, #0x2
  437768:	ldr	w20, [x25, #8]
  43776c:	sub	w20, w20, #0x1
  437770:	add	x20, x20, x20, lsl #1
  437774:	lsl	x20, x20, #4
  437778:	ldr	x0, [sp, #144]
  43777c:	add	x21, x0, x20
  437780:	ldrh	w0, [x25, #6]
  437784:	tbz	w0, #2, 437720 <ferror@plt+0x349f0>
  437788:	ldr	x0, [x21, #16]
  43778c:	str	x0, [sp, #152]
  437790:	mov	w19, w1
  437794:	cbnz	x0, 437744 <ferror@plt+0x34a14>
  437798:	ldr	x1, [x26, #64]
  43779c:	ldr	x0, [x1, #24]
  4377a0:	ldr	x1, [x1, #16]
  4377a4:	sub	x0, x0, x1
  4377a8:	cmp	x0, #0x2
  4377ac:	b.ls	4374e8 <ferror@plt+0x347b8>  // b.plast
  4377b0:	ldr	x0, [x26, #64]
  4377b4:	ldr	x19, [x0, #16]
  4377b8:	mov	w0, #0x22                  	// #34
  4377bc:	strb	w0, [x19], #1
  4377c0:	ldr	w0, [x21, #24]
  4377c4:	cbz	w0, 4376bc <ferror@plt+0x3498c>
  4377c8:	ldr	x27, [sp, #152]
  4377cc:	str	wzr, [sp, #160]
  4377d0:	mov	w23, #0x0                   	// #0
  4377d4:	add	x0, x26, #0x40
  4377d8:	str	x0, [sp, #208]
  4377dc:	ldr	w0, [sp, #200]
  4377e0:	str	w0, [sp, #188]
  4377e4:	str	x24, [sp, #216]
  4377e8:	b	4375f4 <ferror@plt+0x348c4>
  4377ec:	ldr	x0, [x21, #8]
  4377f0:	cbz	x0, 437804 <ferror@plt+0x34ad4>
  4377f4:	add	w19, w19, #0x1
  4377f8:	ldr	w0, [x21, #28]
  4377fc:	add	w19, w19, w0
  437800:	b	437744 <ferror@plt+0x34a14>
  437804:	ldr	w0, [x21, #24]
  437808:	cbz	w0, 4377f4 <ferror@plt+0x34ac4>
  43780c:	ldrb	w22, [x26, #1157]
  437810:	ldrb	w0, [x26, #1138]
  437814:	cmp	w0, #0x0
  437818:	cset	w23, ne  // ne = any
  43781c:	strb	wzr, [x26, #1138]
  437820:	mov	x0, #0x800                 	// #2048
  437824:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  437828:	str	x0, [x21, #8]
  43782c:	ldrb	w0, [x26, #1157]
  437830:	cbnz	w0, 437868 <ferror@plt+0x34b38>
  437834:	cbz	w22, 437878 <ferror@plt+0x34b48>
  437838:	ldr	w5, [x21, #24]
  43783c:	add	w5, w5, #0x1
  437840:	ldr	x0, [sp, #144]
  437844:	ldr	x4, [x0, x20]
  437848:	ldr	x3, [x21, #32]
  43784c:	mov	x2, #0x0                   	// #0
  437850:	mov	x1, #0x0                   	// #0
  437854:	mov	x0, x26
  437858:	bl	434d40 <ferror@plt+0x32010>
  43785c:	mov	x22, #0x100                 	// #256
  437860:	mov	w27, #0x2                   	// #2
  437864:	b	437900 <ferror@plt+0x34bd0>
  437868:	mov	x0, #0x400                 	// #1024
  43786c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  437870:	str	x0, [x21, #40]
  437874:	b	437834 <ferror@plt+0x34b04>
  437878:	ldr	x0, [sp, #144]
  43787c:	ldr	x22, [x0, x20]
  437880:	ldr	w20, [x21, #24]
  437884:	add	w20, w20, #0x1
  437888:	mov	x0, x26
  43788c:	bl	434cec <ferror@plt+0x31fbc>
  437890:	str	wzr, [x0, #48]
  437894:	str	xzr, [x0, #40]
  437898:	str	xzr, [x0, #32]
  43789c:	str	x22, [x0, #16]
  4378a0:	add	x20, x22, w20, uxtw #3
  4378a4:	str	x20, [x0, #24]
  4378a8:	b	43785c <ferror@plt+0x34b2c>
  4378ac:	lsl	x0, x20, #3
  4378b0:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4378b4:	str	x0, [x21, #40]
  4378b8:	add	x1, sp, #0x108
  4378bc:	mov	x0, x26
  4378c0:	bl	4385c8 <ferror@plt+0x35898>
  4378c4:	mov	x1, x0
  4378c8:	ldrb	w0, [x0, #4]
  4378cc:	cmp	w0, #0x16
  4378d0:	b.eq	437944 <ferror@plt+0x34c14>  // b.none
  4378d4:	ldrb	w0, [x26, #1157]
  4378d8:	cmp	w0, #0x0
  4378dc:	cset	w5, ne  // ne = any
  4378e0:	mov	w4, w27
  4378e4:	ldr	w3, [x21, #28]
  4378e8:	ldr	w2, [sp, #264]
  4378ec:	mov	x0, x21
  4378f0:	bl	434bec <ferror@plt+0x31ebc>
  4378f4:	ldr	w0, [x21, #28]
  4378f8:	add	w0, w0, #0x1
  4378fc:	str	w0, [x21, #28]
  437900:	ldr	w20, [x21, #28]
  437904:	add	w20, w20, #0x1
  437908:	cmp	x20, x22
  43790c:	b.ls	4378b8 <ferror@plt+0x34b88>  // b.plast
  437910:	lsl	x22, x20, #1
  437914:	lsl	x1, x20, #4
  437918:	ldr	x0, [x21, #8]
  43791c:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  437920:	str	x0, [x21, #8]
  437924:	ldrb	w0, [x26, #1157]
  437928:	cbz	w0, 4378b8 <ferror@plt+0x34b88>
  43792c:	ldr	x0, [x21, #40]
  437930:	cbz	x0, 4378ac <ferror@plt+0x34b7c>
  437934:	lsl	x1, x20, #3
  437938:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43793c:	str	x0, [x21, #40]
  437940:	b	4378b8 <ferror@plt+0x34b88>
  437944:	mov	x0, x26
  437948:	bl	4357ec <ferror@plt+0x32abc>
  43794c:	strb	w23, [x26, #1138]
  437950:	b	4377f4 <ferror@plt+0x34ac4>
  437954:	mov	w20, w28
  437958:	ldr	x27, [sp, #168]
  43795c:	ldr	x28, [sp, #176]
  437960:	ldrb	w0, [x26, #1157]
  437964:	str	w0, [sp, #192]
  437968:	mov	w1, w19
  43796c:	cbnz	w0, 43846c <ferror@plt+0x3573c>
  437970:	mov	x2, #0x0                   	// #0
  437974:	mov	x0, x26
  437978:	bl	434e6c <ferror@plt+0x3213c>
  43797c:	mov	x25, x0
  437980:	ldr	x0, [x0, #8]
  437984:	str	x0, [sp, #208]
  437988:	ldr	x1, [sp, #112]
  43798c:	ldrb	w0, [x1, #19]
  437990:	and	w0, w0, #0x8
  437994:	mov	w2, w0
  437998:	ldrh	w0, [x1, #16]
  43799c:	add	x0, x0, x0, lsl #1
  4379a0:	ldr	x1, [sp, #144]
  4379a4:	add	x0, x1, x0, lsl #4
  4379a8:	ldur	w0, [x0, #-24]
  4379ac:	str	w0, [sp, #188]
  4379b0:	ldr	x0, [sp, #120]
  4379b4:	cmp	x0, x24
  4379b8:	b.cs	437f0c <ferror@plt+0x351dc>  // b.hs, b.nlast
  4379bc:	str	xzr, [sp, #168]
  4379c0:	b	4384d8 <ferror@plt+0x357a8>
  4379c4:	mov	w20, w19
  4379c8:	b	437960 <ferror@plt+0x34c30>
  4379cc:	ldr	x2, [x19, #8]
  4379d0:	ldr	x1, [x26, #1280]
  4379d4:	cmp	x2, x1
  4379d8:	b.eq	4379fc <ferror@plt+0x34ccc>  // b.none
  4379dc:	cmp	w22, #0x1
  4379e0:	b.eq	437a68 <ferror@plt+0x34d38>  // b.none
  4379e4:	b.le	438248 <ferror@plt+0x35518>
  4379e8:	cmp	w0, #0x26
  4379ec:	cset	w2, eq  // eq = none
  4379f0:	cmp	w22, #0x2
  4379f4:	cset	w1, eq  // eq = none
  4379f8:	b	4383f8 <ferror@plt+0x356c8>
  4379fc:	cmp	w22, #0x0
  437a00:	b.le	437a20 <ferror@plt+0x34cf0>
  437a04:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  437a08:	add	x3, x3, #0xd88
  437a0c:	ldr	w2, [x19]
  437a10:	mov	w1, #0x3                   	// #3
  437a14:	mov	x0, x26
  437a18:	bl	426de8 <ferror@plt+0x240b8>
  437a1c:	b	4383b4 <ferror@plt+0x35684>
  437a20:	add	w22, w22, #0x1
  437a24:	ldr	w0, [x19]
  437a28:	str	w0, [sp, #176]
  437a2c:	ldr	x0, [sp, #120]
  437a30:	cmp	x19, x0
  437a34:	b.eq	437a40 <ferror@plt+0x34d10>  // b.none
  437a38:	ldurh	w0, [x19, #-18]
  437a3c:	tbz	w0, #3, 437af4 <ferror@plt+0x34dc4>
  437a40:	ldr	x0, [x25, #16]
  437a44:	ldr	x2, [x25, #8]
  437a48:	sub	x1, x0, #0x8
  437a4c:	cmp	x0, x2
  437a50:	csel	x0, x1, xzr, ne  // ne = any
  437a54:	str	x0, [sp, #160]
  437a58:	b	4383b4 <ferror@plt+0x35684>
  437a5c:	mov	w22, #0x2                   	// #2
  437a60:	cmp	w0, #0x14
  437a64:	b.eq	4383b4 <ferror@plt+0x35684>  // b.none
  437a68:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  437a6c:	add	x3, x3, #0xdb8
  437a70:	ldr	w2, [sp, #176]
  437a74:	mov	w1, #0x3                   	// #3
  437a78:	mov	x0, x26
  437a7c:	bl	426de8 <ferror@plt+0x240b8>
  437a80:	mov	w22, #0x1                   	// #1
  437a84:	b	4383b4 <ferror@plt+0x35684>
  437a88:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  437a8c:	add	x3, x3, #0xdf0
  437a90:	ldr	w2, [x19]
  437a94:	mov	w1, #0x3                   	// #3
  437a98:	mov	x0, x26
  437a9c:	bl	426de8 <ferror@plt+0x240b8>
  437aa0:	mov	w22, #0x2                   	// #2
  437aa4:	b	4383b4 <ferror@plt+0x35684>
  437aa8:	ldr	w1, [sp, #184]
  437aac:	mov	w22, #0x3                   	// #3
  437ab0:	b	438404 <ferror@plt+0x356d4>
  437ab4:	add	w22, w22, #0x1
  437ab8:	str	wzr, [sp, #184]
  437abc:	b	438538 <ferror@plt+0x35808>
  437ac0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x25c60>
  437ac4:	add	x3, x3, #0xdf0
  437ac8:	ldr	w2, [x19]
  437acc:	mov	w1, #0x3                   	// #3
  437ad0:	mov	x0, x26
  437ad4:	bl	426de8 <ferror@plt+0x240b8>
  437ad8:	mov	w22, #0x0                   	// #0
  437adc:	str	wzr, [sp, #184]
  437ae0:	b	4383b4 <ferror@plt+0x35684>
  437ae4:	ldr	w0, [sp, #188]
  437ae8:	cbnz	w0, 438244 <ferror@plt+0x35514>
  437aec:	str	wzr, [sp, #184]
  437af0:	b	4383b4 <ferror@plt+0x35684>
  437af4:	mov	x1, x19
  437af8:	mov	x0, x26
  437afc:	bl	434e3c <ferror@plt+0x3210c>
  437b00:	mov	x2, x0
  437b04:	ldrb	w0, [x26, #1157]
  437b08:	ldr	x1, [sp, #120]
  437b0c:	sub	x6, x19, x1
  437b10:	asr	x6, x6, #3
  437b14:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  437b18:	movk	x1, #0xaaab
  437b1c:	mul	x6, x6, x1
  437b20:	cmp	w0, #0x2
  437b24:	ldr	w3, [x2]
  437b28:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  437b2c:	ldr	x5, [sp, #168]
  437b30:	mov	w4, w3
  437b34:	ldr	x1, [sp, #256]
  437b38:	mov	x0, x25
  437b3c:	bl	434eb4 <ferror@plt+0x32184>
  437b40:	b	437a40 <ferror@plt+0x34d10>
  437b44:	ldr	x1, [x25, #16]
  437b48:	cmp	x2, x1
  437b4c:	b.eq	438590 <ferror@plt+0x35860>  // b.none
  437b50:	sub	x1, x1, #0x8
  437b54:	cmp	x3, x1
  437b58:	b.eq	438444 <ferror@plt+0x35714>  // b.none
  437b5c:	ldr	x0, [x1]
  437b60:	ldrb	w0, [x0, #4]
  437b64:	cmp	w0, #0x53
  437b68:	b.ne	4381d8 <ferror@plt+0x354a8>  // b.any
  437b6c:	ldr	x0, [x25, #16]
  437b70:	cmp	x0, x2
  437b74:	b.ls	437b44 <ferror@plt+0x34e14>  // b.plast
  437b78:	sub	x0, x0, #0x8
  437b7c:	str	x0, [x25, #16]
  437b80:	b	437b44 <ferror@plt+0x34e14>
  437b84:	ldrb	w1, [x26, #1157]
  437b88:	cmp	w1, #0x0
  437b8c:	cset	w2, ne  // ne = any
  437b90:	strb	w2, [sp, #264]
  437b94:	mov	w2, #0x1                   	// #1
  437b98:	str	w2, [sp, #268]
  437b9c:	add	x2, x0, #0x10
  437ba0:	str	x2, [sp, #272]
  437ba4:	str	xzr, [sp, #280]
  437ba8:	mov	w21, #0x1                   	// #1
  437bac:	cbz	w1, 4382cc <ferror@plt+0x3559c>
  437bb0:	mov	w1, w21
  437bb4:	bl	434c38 <ferror@plt+0x31f08>
  437bb8:	str	x0, [sp, #280]
  437bbc:	b	4382cc <ferror@plt+0x3559c>
  437bc0:	ldr	w21, [x0, #24]
  437bc4:	ldrb	w2, [x26, #1157]
  437bc8:	ldr	x3, [sp, #144]
  437bcc:	ldr	x1, [x3, x1]
  437bd0:	cmp	w2, #0x0
  437bd4:	cset	w3, ne  // ne = any
  437bd8:	strb	w3, [sp, #264]
  437bdc:	str	wzr, [sp, #268]
  437be0:	str	x1, [sp, #272]
  437be4:	str	xzr, [sp, #280]
  437be8:	cbz	w2, 4382cc <ferror@plt+0x3559c>
  437bec:	mov	w1, #0x0                   	// #0
  437bf0:	bl	434c38 <ferror@plt+0x31f08>
  437bf4:	str	x0, [sp, #280]
  437bf8:	b	4382cc <ferror@plt+0x3559c>
  437bfc:	ldr	w21, [x0, #24]
  437c00:	ldrb	w2, [x26, #1157]
  437c04:	ldr	x3, [sp, #144]
  437c08:	ldr	x1, [x3, x1]
  437c0c:	cmp	w2, #0x0
  437c10:	cset	w3, ne  // ne = any
  437c14:	strb	w3, [sp, #264]
  437c18:	str	wzr, [sp, #268]
  437c1c:	str	x1, [sp, #272]
  437c20:	str	xzr, [sp, #280]
  437c24:	cbnz	w2, 437c8c <ferror@plt+0x34f5c>
  437c28:	ldr	x0, [x25, #16]
  437c2c:	ldr	x1, [x25, #8]
  437c30:	sub	x2, x0, x1
  437c34:	str	xzr, [sp, #152]
  437c38:	tst	x2, #0x7fffffff8
  437c3c:	b.eq	437c78 <ferror@plt+0x34f48>  // b.none
  437c40:	sub	x2, x0, #0x8
  437c44:	cmp	x0, x1
  437c48:	csel	x2, x2, xzr, ne  // ne = any
  437c4c:	str	x2, [sp, #152]
  437c50:	ldr	x2, [x2]
  437c54:	ldrb	w2, [x2, #4]
  437c58:	cmp	w2, #0x13
  437c5c:	b.eq	437c9c <ferror@plt+0x34f6c>  // b.none
  437c60:	cmp	w21, #0x0
  437c64:	ldr	x1, [sp, #160]
  437c68:	ldr	x0, [sp, #152]
  437c6c:	ccmp	x1, x0, #0x4, eq  // eq = none
  437c70:	csel	x0, x0, xzr, ne  // ne = any
  437c74:	str	x0, [sp, #152]
  437c78:	ldrb	w0, [x26, #16]
  437c7c:	cbz	w0, 4382f0 <ferror@plt+0x355c0>
  437c80:	ldrb	w0, [x26, #17]
  437c84:	cbnz	w0, 4382f0 <ferror@plt+0x355c0>
  437c88:	b	43830c <ferror@plt+0x355dc>
  437c8c:	mov	w1, #0x0                   	// #0
  437c90:	bl	434c38 <ferror@plt+0x31f08>
  437c94:	str	x0, [sp, #280]
  437c98:	b	437c28 <ferror@plt+0x34ef8>
  437c9c:	ldr	x3, [sp, #112]
  437ca0:	ldrb	w2, [x3, #19]
  437ca4:	tbz	w2, #3, 437c60 <ferror@plt+0x34f30>
  437ca8:	ldrh	w2, [x3, #16]
  437cac:	ldr	w3, [x19, #8]
  437cb0:	cmp	w3, w2
  437cb4:	b.ne	437c60 <ferror@plt+0x34f30>  // b.any
  437cb8:	ldr	x2, [sp, #272]
  437cbc:	cbz	x2, 437cc8 <ferror@plt+0x34f98>
  437cc0:	ldr	x2, [x2]
  437cc4:	cbnz	x2, 437c78 <ferror@plt+0x34f48>
  437cc8:	cmp	x0, x1
  437ccc:	b.ls	43823c <ferror@plt+0x3550c>  // b.plast
  437cd0:	sub	x0, x0, #0x8
  437cd4:	str	x0, [x25, #16]
  437cd8:	str	xzr, [sp, #152]
  437cdc:	b	437c78 <ferror@plt+0x34f48>
  437ce0:	mov	w1, w3
  437ce4:	bl	434c38 <ferror@plt+0x31f08>
  437ce8:	str	x0, [sp, #280]
  437cec:	b	4382b8 <ferror@plt+0x35588>
  437cf0:	cbz	w21, 4382cc <ferror@plt+0x3559c>
  437cf4:	ldr	x0, [sp, #272]
  437cf8:	cbz	x0, 437d00 <ferror@plt+0x34fd0>
  437cfc:	ldr	x0, [x0]
  437d00:	ldrb	w0, [x0, #4]
  437d04:	cmp	w0, #0x53
  437d08:	b.ne	4382cc <ferror@plt+0x3559c>  // b.any
  437d0c:	add	x0, sp, #0x108
  437d10:	bl	434c68 <ferror@plt+0x31f38>
  437d14:	subs	w21, w21, #0x1
  437d18:	b.ne	437cf4 <ferror@plt+0x34fc4>  // b.any
  437d1c:	b	4382cc <ferror@plt+0x3559c>
  437d20:	mov	x1, x19
  437d24:	mov	x0, x26
  437d28:	bl	434e3c <ferror@plt+0x3210c>
  437d2c:	mov	x2, x0
  437d30:	ldrb	w0, [x26, #1157]
  437d34:	ldr	x1, [sp, #120]
  437d38:	sub	x6, x19, x1
  437d3c:	asr	x6, x6, #3
  437d40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  437d44:	movk	x1, #0xaaab
  437d48:	mul	x6, x6, x1
  437d4c:	cmp	w0, #0x2
  437d50:	ldr	w3, [x2]
  437d54:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  437d58:	ldr	x5, [sp, #168]
  437d5c:	mov	w4, w3
  437d60:	ldr	x1, [sp, #256]
  437d64:	mov	x0, x25
  437d68:	bl	434eb4 <ferror@plt+0x32184>
  437d6c:	b	43830c <ferror@plt+0x355dc>
  437d70:	ldr	x0, [sp, #120]
  437d74:	sub	x27, x19, x0
  437d78:	asr	x27, x27, #3
  437d7c:	mov	w0, #0xaaab                	// #43691
  437d80:	movk	w0, #0xaaaa, lsl #16
  437d84:	mul	w27, w27, w0
  437d88:	add	w0, w23, w21
  437d8c:	mov	w20, w23
  437d90:	str	x24, [sp, #232]
  437d94:	ldr	w24, [sp, #192]
  437d98:	str	w22, [sp, #240]
  437d9c:	mov	w22, w0
  437da0:	str	w21, [sp, #244]
  437da4:	ldr	x21, [sp, #168]
  437da8:	b	437de0 <ferror@plt+0x350b0>
  437dac:	mov	x2, x0
  437db0:	b	437e04 <ferror@plt+0x350d4>
  437db4:	ldr	x0, [x0]
  437db8:	ldr	w3, [x0]
  437dbc:	mov	x5, x21
  437dc0:	ldr	w4, [x19]
  437dc4:	mov	x0, x25
  437dc8:	bl	434eb4 <ferror@plt+0x32184>
  437dcc:	add	x0, sp, #0x108
  437dd0:	bl	434c68 <ferror@plt+0x31f38>
  437dd4:	add	w20, w20, #0x1
  437dd8:	cmp	w20, w22
  437ddc:	b.eq	437e18 <ferror@plt+0x350e8>  // b.none
  437de0:	cmp	w24, #0x1
  437de4:	csel	w6, w20, w23, gt
  437de8:	ldrb	w0, [x26, #1157]
  437dec:	cmp	w0, #0x1
  437df0:	csel	w6, w6, w27, hi  // hi = pmore
  437df4:	ldr	x1, [sp, #256]
  437df8:	ldr	x0, [sp, #272]
  437dfc:	cbz	x0, 437dac <ferror@plt+0x3507c>
  437e00:	ldr	x2, [x0]
  437e04:	ldrb	w3, [sp, #264]
  437e08:	cbz	w3, 437db4 <ferror@plt+0x35084>
  437e0c:	ldr	x0, [sp, #280]
  437e10:	ldr	w3, [x0]
  437e14:	b	437dbc <ferror@plt+0x3508c>
  437e18:	ldr	x24, [sp, #232]
  437e1c:	ldr	w22, [sp, #240]
  437e20:	ldr	w21, [sp, #244]
  437e24:	ldrh	w0, [x19, #6]
  437e28:	tbz	w0, #3, 4381fc <ferror@plt+0x354cc>
  437e2c:	ldr	x0, [x25, #16]
  437e30:	ldr	x1, [x25, #8]
  437e34:	cmp	x0, x1
  437e38:	b.eq	4383b0 <ferror@plt+0x35680>  // b.none
  437e3c:	sub	x0, x0, #0x8
  437e40:	str	x0, [sp, #152]
  437e44:	b	4383a0 <ferror@plt+0x35670>
  437e48:	ldrb	w0, [x26, #1120]
  437e4c:	cbnz	w0, 437e80 <ferror@plt+0x35150>
  437e50:	ldrsb	w0, [x26, #1198]
  437e54:	cbz	w0, 438388 <ferror@plt+0x35658>
  437e58:	cmp	w0, #0x0
  437e5c:	cset	w1, gt
  437e60:	ldr	w4, [x19, #8]
  437e64:	ldr	x0, [sp, #200]
  437e68:	ldr	x3, [x0]
  437e6c:	ldr	x2, [sp, #224]
  437e70:	add	w1, w1, #0x15
  437e74:	mov	x0, x26
  437e78:	bl	426b04 <ferror@plt+0x23dd4>
  437e7c:	b	438388 <ferror@plt+0x35658>
  437e80:	ldr	w4, [x19, #8]
  437e84:	ldr	x0, [sp, #200]
  437e88:	ldr	x3, [x0]
  437e8c:	ldr	x2, [sp, #248]
  437e90:	mov	w1, #0x15                  	// #21
  437e94:	mov	x0, x26
  437e98:	bl	426b04 <ferror@plt+0x23dd4>
  437e9c:	b	438388 <ferror@plt+0x35658>
  437ea0:	mov	w22, #0x0                   	// #0
  437ea4:	str	wzr, [sp, #184]
  437ea8:	str	xzr, [sp, #160]
  437eac:	b	4383b4 <ferror@plt+0x35684>
  437eb0:	ldr	x27, [sp, #216]
  437eb4:	ldr	x28, [sp, #200]
  437eb8:	ldr	w0, [sp, #192]
  437ebc:	cbz	w0, 437f0c <ferror@plt+0x351dc>
  437ec0:	ldr	x5, [x25, #16]
  437ec4:	ldr	x0, [x25, #8]
  437ec8:	sub	x5, x5, x0
  437ecc:	ubfx	x5, x5, #3, #32
  437ed0:	ldr	x4, [sp, #208]
  437ed4:	ldr	x3, [sp, #256]
  437ed8:	mov	x2, x25
  437edc:	mov	x1, x28
  437ee0:	mov	x0, x26
  437ee4:	bl	434d40 <ferror@plt+0x32010>
  437ee8:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  437eec:	ldr	x0, [x25, #16]
  437ef0:	ldr	x1, [x25, #8]
  437ef4:	sub	x0, x0, x1
  437ef8:	lsr	x0, x0, #3
  437efc:	ldr	w1, [x2, #2464]
  437f00:	add	w0, w1, w0
  437f04:	str	w0, [x2, #2464]
  437f08:	b	437370 <ferror@plt+0x34640>
  437f0c:	ldr	x19, [x25, #16]
  437f10:	ldr	x0, [x25, #8]
  437f14:	sub	x19, x19, x0
  437f18:	lsr	x19, x19, #3
  437f1c:	mov	x0, x26
  437f20:	bl	434cec <ferror@plt+0x31fbc>
  437f24:	str	wzr, [x0, #48]
  437f28:	str	x28, [x0, #40]
  437f2c:	str	x25, [x0, #32]
  437f30:	ldr	x1, [sp, #208]
  437f34:	str	x1, [x0, #16]
  437f38:	add	x19, x1, w19, uxtw #3
  437f3c:	str	x19, [x0, #24]
  437f40:	b	437ee8 <ferror@plt+0x351b8>
  437f44:	add	x19, x19, #0x30
  437f48:	cmp	x21, x19
  437f4c:	b.eq	437f88 <ferror@plt+0x35258>  // b.none
  437f50:	mov	x20, x19
  437f54:	ldr	x0, [x19]
  437f58:	cbz	x0, 437f64 <ferror@plt+0x35234>
  437f5c:	bl	402a90 <free@plt>
  437f60:	str	xzr, [x19]
  437f64:	ldr	x0, [x20, #24]
  437f68:	cbz	x0, 437f74 <ferror@plt+0x35244>
  437f6c:	bl	402a90 <free@plt>
  437f70:	str	xzr, [x20, #24]
  437f74:	ldr	x0, [x20, #32]
  437f78:	cbz	x0, 437f44 <ferror@plt+0x35214>
  437f7c:	bl	402a90 <free@plt>
  437f80:	str	xzr, [x20, #32]
  437f84:	b	437f44 <ferror@plt+0x35214>
  437f88:	ldr	x0, [sp, #136]
  437f8c:	bl	42f40c <ferror@plt+0x2c6dc>
  437f90:	ldp	x23, x24, [sp, #48]
  437f94:	b	436e20 <ferror@plt+0x340f0>
  437f98:	mov	x1, x28
  437f9c:	mov	x0, x26
  437fa0:	bl	436cc8 <ferror@plt+0x33f98>
  437fa4:	b	436e38 <ferror@plt+0x34108>
  437fa8:	ldr	x2, [sp, #112]
  437fac:	ldr	w1, [x2, #12]
  437fb0:	mov	w21, w1
  437fb4:	sub	w1, w1, #0x1
  437fb8:	cbz	w21, 4381a0 <ferror@plt+0x35470>
  437fbc:	ubfiz	x0, x1, #1, #32
  437fc0:	add	x0, x0, w1, uxtw
  437fc4:	add	x0, x2, x0, lsl #3
  437fc8:	ldrb	w0, [x0, #28]
  437fcc:	cmp	w0, #0x26
  437fd0:	b.eq	437fb0 <ferror@plt+0x35280>  // b.none
  437fd4:	ldrb	w0, [x26, #1157]
  437fd8:	cbz	w0, 436e7c <ferror@plt+0x3414c>
  437fdc:	stp	x23, x24, [sp, #48]
  437fe0:	ldr	x0, [sp, #112]
  437fe4:	add	x19, x0, #0x18
  437fe8:	str	xzr, [sp, #264]
  437fec:	add	x2, sp, #0x108
  437ff0:	mov	w1, w21
  437ff4:	mov	x0, x26
  437ff8:	bl	434e6c <ferror@plt+0x3213c>
  437ffc:	mov	x22, x0
  438000:	mov	w3, w21
  438004:	ldr	w2, [sp, #100]
  438008:	mov	x1, x28
  43800c:	ldr	x0, [x26, #40]
  438010:	bl	4326ec <ferror@plt+0x2f9bc>
  438014:	mov	x23, x0
  438018:	b	43805c <ferror@plt+0x3532c>
  43801c:	stp	x23, x24, [sp, #48]
  438020:	ldr	x0, [sp, #112]
  438024:	add	x19, x0, #0x18
  438028:	str	xzr, [sp, #264]
  43802c:	add	x2, sp, #0x108
  438030:	mov	w1, w21
  438034:	mov	x0, x26
  438038:	bl	434e6c <ferror@plt+0x3213c>
  43803c:	mov	x22, x0
  438040:	mov	w3, w21
  438044:	ldr	w2, [sp, #100]
  438048:	mov	x1, x28
  43804c:	ldr	x0, [x26, #40]
  438050:	bl	4326ec <ferror@plt+0x2f9bc>
  438054:	mov	x23, x0
  438058:	cbz	w21, 4380d8 <ferror@plt+0x353a8>
  43805c:	mov	w20, #0x0                   	// #0
  438060:	ldr	w3, [x19]
  438064:	mov	w6, w20
  438068:	mov	x5, x23
  43806c:	mov	w4, w3
  438070:	mov	x2, x19
  438074:	ldr	x1, [sp, #264]
  438078:	mov	x0, x22
  43807c:	bl	434eb4 <ferror@plt+0x32184>
  438080:	add	x19, x19, #0x18
  438084:	add	w20, w20, #0x1
  438088:	cmp	w20, w21
  43808c:	b.cc	438060 <ferror@plt+0x35330>  // b.lo, b.ul, b.last
  438090:	ldp	x23, x24, [sp, #48]
  438094:	mov	w5, w21
  438098:	ldr	x4, [x22, #8]
  43809c:	ldr	x3, [sp, #264]
  4380a0:	mov	x2, x22
  4380a4:	mov	x1, x28
  4380a8:	mov	x0, x26
  4380ac:	bl	434d40 <ferror@plt+0x32010>
  4380b0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4380b4:	ldr	w0, [x1, #2464]
  4380b8:	add	w21, w0, w21
  4380bc:	str	w21, [x1, #2464]
  4380c0:	cbz	x27, 438170 <ferror@plt+0x35440>
  4380c4:	ldrb	w0, [x26, #16]
  4380c8:	cbz	w0, 4380e0 <ferror@plt+0x353b0>
  4380cc:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4380d0:	add	x22, x22, #0x9a0
  4380d4:	b	438114 <ferror@plt+0x353e4>
  4380d8:	ldp	x23, x24, [sp, #48]
  4380dc:	b	438094 <ferror@plt+0x35364>
  4380e0:	ldr	x1, [sp, #104]
  4380e4:	mov	x0, x26
  4380e8:	bl	434e3c <ferror@plt+0x3210c>
  4380ec:	mov	w3, #0x1                   	// #1
  4380f0:	mov	x2, x0
  4380f4:	mov	x1, #0x0                   	// #0
  4380f8:	mov	x0, x26
  4380fc:	bl	435580 <ferror@plt+0x32850>
  438100:	b	4380cc <ferror@plt+0x3539c>
  438104:	ldr	w0, [x22]
  438108:	add	w19, w0, w19
  43810c:	str	w19, [x22]
  438110:	cbz	x27, 43815c <ferror@plt+0x3542c>
  438114:	mov	x21, x27
  438118:	ldr	x27, [x27]
  43811c:	str	xzr, [x21]
  438120:	ldr	x20, [x21, #8]
  438124:	ldr	x19, [x21, #16]
  438128:	sub	x19, x19, x20
  43812c:	asr	x19, x19, #3
  438130:	mov	x0, x26
  438134:	bl	434cec <ferror@plt+0x31fbc>
  438138:	str	wzr, [x0, #48]
  43813c:	str	xzr, [x0, #40]
  438140:	str	x21, [x0, #32]
  438144:	str	x20, [x0, #16]
  438148:	add	x20, x20, w19, uxtw #3
  43814c:	str	x20, [x0, #24]
  438150:	ldrb	w0, [x26, #1157]
  438154:	cbnz	w0, 438110 <ferror@plt+0x353e0>
  438158:	b	438104 <ferror@plt+0x353d4>
  43815c:	strb	wzr, [x26, #192]
  438160:	mov	w0, #0x2                   	// #2
  438164:	ldp	x19, x20, [sp, #16]
  438168:	ldp	x21, x22, [sp, #32]
  43816c:	b	436df4 <ferror@plt+0x340c4>
  438170:	strb	wzr, [x26, #192]
  438174:	mov	w0, #0x1                   	// #1
  438178:	ldp	x19, x20, [sp, #16]
  43817c:	ldp	x21, x22, [sp, #32]
  438180:	b	436df4 <ferror@plt+0x340c4>
  438184:	ldr	x0, [x1, #24]
  438188:	ldrb	w0, [x0, #19]
  43818c:	tbz	w0, #2, 436de0 <ferror@plt+0x340b0>
  438190:	ldrb	w0, [x26, #1157]
  438194:	ldr	w3, [sp, #100]
  438198:	cbnz	w0, 436de4 <ferror@plt+0x340b4>
  43819c:	b	436de0 <ferror@plt+0x340b0>
  4381a0:	ldrb	w0, [x26, #1157]
  4381a4:	cbz	w0, 436e7c <ferror@plt+0x3414c>
  4381a8:	str	xzr, [sp, #264]
  4381ac:	add	x2, sp, #0x108
  4381b0:	mov	x1, #0x0                   	// #0
  4381b4:	mov	x0, x26
  4381b8:	bl	434e6c <ferror@plt+0x3213c>
  4381bc:	mov	x22, x0
  4381c0:	mov	w3, #0x0                   	// #0
  4381c4:	ldr	w2, [sp, #100]
  4381c8:	mov	x1, x28
  4381cc:	ldr	x0, [x26, #40]
  4381d0:	bl	4326ec <ferror@plt+0x2f9bc>
  4381d4:	b	438094 <ferror@plt+0x35364>
  4381d8:	ldrh	w0, [x19, #6]
  4381dc:	tbz	w0, #3, 438598 <ferror@plt+0x35868>
  4381e0:	mov	x2, x19
  4381e4:	mov	x0, x26
  4381e8:	bl	434dd0 <ferror@plt+0x320a0>
  4381ec:	mov	w22, #0x0                   	// #0
  4381f0:	str	wzr, [sp, #184]
  4381f4:	str	xzr, [sp, #160]
  4381f8:	b	4383b4 <ferror@plt+0x35684>
  4381fc:	ldrb	w0, [x26, #16]
  438200:	cbnz	w0, 438398 <ferror@plt+0x35668>
  438204:	ldr	x1, [sp, #160]
  438208:	mov	x0, x25
  43820c:	bl	434c9c <ferror@plt+0x31f6c>
  438210:	and	w0, w0, #0xff
  438214:	cbnz	w0, 438398 <ferror@plt+0x35668>
  438218:	ldr	w3, [x26, #664]
  43821c:	mov	w6, #0x0                   	// #0
  438220:	mov	x5, #0x0                   	// #0
  438224:	mov	w4, w3
  438228:	add	x2, x26, #0x298
  43822c:	ldr	x1, [sp, #256]
  438230:	mov	x0, x25
  438234:	bl	434eb4 <ferror@plt+0x32184>
  438238:	b	438398 <ferror@plt+0x35668>
  43823c:	str	xzr, [sp, #152]
  438240:	b	437c78 <ferror@plt+0x34f48>
  438244:	str	wzr, [sp, #184]
  438248:	ldrb	w0, [x19, #4]
  43824c:	cmp	w0, #0x50
  438250:	b.ne	438540 <ferror@plt+0x35810>  // b.any
  438254:	ldr	w0, [x19, #8]
  438258:	sub	w0, w0, #0x1
  43825c:	add	x0, x0, x0, lsl #1
  438260:	lsl	x1, x0, #4
  438264:	ldr	x0, [sp, #144]
  438268:	add	x0, x0, x1
  43826c:	ldrh	w2, [x19, #6]
  438270:	tbnz	w2, #2, 437b84 <ferror@plt+0x34e54>
  438274:	tbnz	w2, #3, 437bc0 <ferror@plt+0x34e90>
  438278:	ldr	x2, [sp, #120]
  43827c:	cmp	x19, x2
  438280:	b.eq	43828c <ferror@plt+0x3555c>  // b.none
  438284:	ldurh	w2, [x19, #-18]
  438288:	tbnz	w2, #3, 437bfc <ferror@plt+0x34ecc>
  43828c:	ldr	w21, [x0, #28]
  438290:	ldrb	w1, [x26, #1157]
  438294:	ldr	x2, [x0, #8]
  438298:	cmp	w1, #0x0
  43829c:	cset	w3, ne  // ne = any
  4382a0:	strb	w3, [sp, #264]
  4382a4:	mov	w3, #0x2                   	// #2
  4382a8:	str	w3, [sp, #268]
  4382ac:	str	x2, [sp, #272]
  4382b0:	str	xzr, [sp, #280]
  4382b4:	cbnz	w1, 437ce0 <ferror@plt+0x34fb0>
  4382b8:	ldr	x1, [sp, #160]
  4382bc:	mov	x0, x25
  4382c0:	bl	434c9c <ferror@plt+0x31f6c>
  4382c4:	and	w0, w0, #0xff
  4382c8:	cbnz	w0, 437cf0 <ferror@plt+0x34fc0>
  4382cc:	ldrb	w0, [x26, #16]
  4382d0:	cbz	w0, 4382e0 <ferror@plt+0x355b0>
  4382d4:	ldrb	w0, [x26, #17]
  4382d8:	str	xzr, [sp, #152]
  4382dc:	cbz	w0, 43830c <ferror@plt+0x355dc>
  4382e0:	str	xzr, [sp, #152]
  4382e4:	ldr	x0, [sp, #120]
  4382e8:	cmp	x19, x0
  4382ec:	b.eq	43830c <ferror@plt+0x355dc>  // b.none
  4382f0:	ldurh	w0, [x19, #-18]
  4382f4:	tbnz	w0, #3, 43830c <ferror@plt+0x355dc>
  4382f8:	ldr	x1, [sp, #160]
  4382fc:	mov	x0, x25
  438300:	bl	434c9c <ferror@plt+0x31f6c>
  438304:	and	w0, w0, #0xff
  438308:	cbz	w0, 437d20 <ferror@plt+0x34ff0>
  43830c:	cbnz	w21, 437d70 <ferror@plt+0x35040>
  438310:	ldrb	w0, [x26, #1154]
  438314:	cbz	w0, 43833c <ferror@plt+0x3560c>
  438318:	ldrb	w0, [x26, #1152]
  43831c:	cbnz	w0, 43833c <ferror@plt+0x3560c>
  438320:	ldr	x0, [sp, #112]
  438324:	ldrb	w0, [x0, #19]
  438328:	tbnz	w0, #4, 43833c <ferror@plt+0x3560c>
  43832c:	ldr	x0, [x26]
  438330:	cbz	x0, 437e48 <ferror@plt+0x35118>
  438334:	ldrb	w0, [x0, #106]
  438338:	cbz	w0, 437e48 <ferror@plt+0x35118>
  43833c:	ldrsb	w0, [x26, #1198]
  438340:	cmp	w0, #0x0
  438344:	b.le	438388 <ferror@plt+0x35658>
  438348:	ldrb	w0, [x26, #1120]
  43834c:	cbnz	w0, 438388 <ferror@plt+0x35658>
  438350:	ldr	x0, [sp, #112]
  438354:	ldrb	w0, [x0, #19]
  438358:	tbnz	w0, #4, 438388 <ferror@plt+0x35658>
  43835c:	ldr	x0, [x26]
  438360:	cbz	x0, 43836c <ferror@plt+0x3563c>
  438364:	ldrb	w0, [x0, #106]
  438368:	cbnz	w0, 438388 <ferror@plt+0x35658>
  43836c:	ldr	w4, [x19, #8]
  438370:	ldr	x0, [sp, #200]
  438374:	ldr	x3, [x0]
  438378:	ldr	x2, [sp, #224]
  43837c:	mov	w1, #0x16                  	// #22
  438380:	mov	x0, x26
  438384:	bl	426a88 <ferror@plt+0x23d58>
  438388:	ldrb	w0, [x26, #16]
  43838c:	cbnz	w0, 438398 <ferror@plt+0x35668>
  438390:	ldrh	w0, [x19, #6]
  438394:	tbz	w0, #3, 438204 <ferror@plt+0x354d4>
  438398:	ldr	x0, [sp, #152]
  43839c:	cbz	x0, 4383b0 <ferror@plt+0x35680>
  4383a0:	mov	x2, x19
  4383a4:	ldr	x1, [sp, #152]
  4383a8:	mov	x0, x26
  4383ac:	bl	434dd0 <ferror@plt+0x320a0>
  4383b0:	add	w23, w23, w21
  4383b4:	add	x19, x19, #0x18
  4383b8:	cmp	x19, x24
  4383bc:	b.cs	437eb0 <ferror@plt+0x35180>  // b.hs, b.nlast
  4383c0:	cbz	w28, 438248 <ferror@plt+0x35518>
  4383c4:	ldrb	w0, [x19, #4]
  4383c8:	cmp	w0, #0x35
  4383cc:	b.eq	4379cc <ferror@plt+0x34c9c>  // b.none
  4383d0:	cmp	w22, #0x1
  4383d4:	b.eq	437a5c <ferror@plt+0x34d2c>  // b.none
  4383d8:	b.le	438248 <ferror@plt+0x35518>
  4383dc:	cmp	w0, #0x26
  4383e0:	cset	w2, eq  // eq = none
  4383e4:	cmp	w22, #0x2
  4383e8:	cset	w1, eq  // eq = none
  4383ec:	cmp	w1, #0x0
  4383f0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4383f4:	b.ne	437a88 <ferror@plt+0x34d58>  // b.any
  4383f8:	cbnz	w1, 437aa8 <ferror@plt+0x34d78>
  4383fc:	cbnz	w2, 438530 <ferror@plt+0x35800>
  438400:	ldr	w1, [sp, #184]
  438404:	cmp	w0, #0x14
  438408:	b.eq	437ab4 <ferror@plt+0x34d84>  // b.none
  43840c:	cmp	w0, #0x15
  438410:	b.ne	437ae4 <ferror@plt+0x34db4>  // b.any
  438414:	sub	w22, w22, #0x1
  438418:	cmp	w22, #0x2
  43841c:	b.ne	438588 <ferror@plt+0x35858>  // b.any
  438420:	cbnz	w1, 437ac0 <ferror@plt+0x34d90>
  438424:	ldr	x1, [x25, #16]
  438428:	ldr	x2, [x25, #8]
  43842c:	cmp	x1, x2
  438430:	b.eq	438590 <ferror@plt+0x35860>  // b.none
  438434:	sub	x1, x1, #0x8
  438438:	ldr	x3, [sp, #160]
  43843c:	cmp	x3, x1
  438440:	b.ne	437b5c <ferror@plt+0x34e2c>  // b.any
  438444:	ldrh	w0, [x19, #6]
  438448:	tbz	w0, #3, 438598 <ferror@plt+0x35868>
  43844c:	ldr	x0, [x1]
  438450:	ldrb	w0, [x0, #4]
  438454:	cmp	w0, #0x53
  438458:	b.ne	4381e0 <ferror@plt+0x354b0>  // b.any
  43845c:	mov	w22, #0x0                   	// #0
  438460:	str	wzr, [sp, #184]
  438464:	str	xzr, [sp, #160]
  438468:	b	4383b4 <ferror@plt+0x35684>
  43846c:	add	x2, sp, #0x100
  438470:	mov	x0, x26
  438474:	bl	434e6c <ferror@plt+0x3213c>
  438478:	mov	x25, x0
  43847c:	ldr	x0, [x0, #8]
  438480:	str	x0, [sp, #208]
  438484:	ldr	w0, [sp, #192]
  438488:	cmp	w0, #0x1
  43848c:	csel	w3, w19, w20, gt
  438490:	ldr	w2, [sp, #100]
  438494:	mov	x1, x28
  438498:	ldr	x0, [x26, #40]
  43849c:	bl	4326ec <ferror@plt+0x2f9bc>
  4384a0:	str	x0, [sp, #168]
  4384a4:	ldr	x1, [sp, #112]
  4384a8:	ldrb	w0, [x1, #19]
  4384ac:	and	w0, w0, #0x8
  4384b0:	mov	w2, w0
  4384b4:	ldrh	w0, [x1, #16]
  4384b8:	add	x0, x0, x0, lsl #1
  4384bc:	ldr	x1, [sp, #144]
  4384c0:	add	x0, x1, x0, lsl #4
  4384c4:	ldur	w0, [x0, #-24]
  4384c8:	str	w0, [sp, #188]
  4384cc:	ldr	x0, [sp, #120]
  4384d0:	cmp	x0, x24
  4384d4:	b.cs	437ec0 <ferror@plt+0x35190>  // b.hs, b.nlast
  4384d8:	ldr	x19, [sp, #120]
  4384dc:	str	wzr, [sp, #176]
  4384e0:	mov	w22, #0x0                   	// #0
  4384e4:	str	wzr, [sp, #184]
  4384e8:	mov	w23, #0x0                   	// #0
  4384ec:	str	xzr, [sp, #160]
  4384f0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4384f4:	add	x0, x0, #0xfc0
  4384f8:	str	x0, [sp, #224]
  4384fc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  438500:	add	x0, x0, #0xf70
  438504:	str	x0, [sp, #248]
  438508:	str	x27, [sp, #216]
  43850c:	str	x28, [sp, #200]
  438510:	mov	w28, w2
  438514:	b	4383c0 <ferror@plt+0x35690>
  438518:	ldr	x0, [sp, #112]
  43851c:	add	x0, x0, #0x18
  438520:	str	x0, [sp, #120]
  438524:	mov	x24, x0
  438528:	mov	w20, w19
  43852c:	b	437960 <ferror@plt+0x34c30>
  438530:	mov	w0, #0x1                   	// #1
  438534:	str	w0, [sp, #184]
  438538:	ldr	w0, [sp, #188]
  43853c:	cbz	w0, 4383b4 <ferror@plt+0x35684>
  438540:	ldrb	w0, [x26, #1157]
  438544:	ldr	x1, [sp, #120]
  438548:	sub	x6, x19, x1
  43854c:	asr	x6, x6, #3
  438550:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  438554:	movk	x1, #0xaaab
  438558:	mul	x6, x6, x1
  43855c:	cmp	w0, #0x2
  438560:	ldr	w3, [x19]
  438564:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  438568:	ldr	x5, [sp, #168]
  43856c:	mov	w4, w3
  438570:	mov	x2, x19
  438574:	ldr	x1, [sp, #256]
  438578:	mov	x0, x25
  43857c:	bl	434eb4 <ferror@plt+0x32184>
  438580:	add	w23, w23, #0x1
  438584:	b	4383b4 <ferror@plt+0x35684>
  438588:	str	wzr, [sp, #184]
  43858c:	b	438538 <ferror@plt+0x35808>
  438590:	ldrh	w0, [x19, #6]
  438594:	tbnz	w0, #3, 437ea0 <ferror@plt+0x35170>
  438598:	ldr	w3, [x26, #664]
  43859c:	mov	w6, #0x0                   	// #0
  4385a0:	mov	x5, #0x0                   	// #0
  4385a4:	mov	w4, w3
  4385a8:	add	x2, x26, #0x298
  4385ac:	ldr	x1, [sp, #256]
  4385b0:	mov	x0, x25
  4385b4:	bl	434eb4 <ferror@plt+0x32184>
  4385b8:	mov	w22, #0x0                   	// #0
  4385bc:	str	wzr, [sp, #184]
  4385c0:	str	xzr, [sp, #160]
  4385c4:	b	4383b4 <ferror@plt+0x35684>
  4385c8:	stp	x29, x30, [sp, #-112]!
  4385cc:	mov	x29, sp
  4385d0:	stp	x19, x20, [sp, #16]
  4385d4:	stp	x21, x22, [sp, #32]
  4385d8:	stp	x23, x24, [sp, #48]
  4385dc:	stp	x25, x26, [sp, #64]
  4385e0:	mov	x19, x0
  4385e4:	mov	x23, x1
  4385e8:	ldrb	w26, [x0, #192]
  4385ec:	mov	w24, #0x0                   	// #0
  4385f0:	adrp	x25, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4385f4:	add	x25, x25, #0x9a0
  4385f8:	ldr	x0, [x19, #136]
  4385fc:	ldr	x1, [x0, #8]
  438600:	cbz	x1, 4386b4 <ferror@plt+0x35984>
  438604:	ldr	w1, [x0, #48]
  438608:	cmp	w1, #0x1
  43860c:	b.eq	4387b0 <ferror@plt+0x35a80>  // b.none
  438610:	tst	w1, #0xfffffffd
  438614:	b.ne	43880c <ferror@plt+0x35adc>  // b.any
  438618:	ldr	x2, [x0, #16]
  43861c:	ldr	x3, [x0, #24]
  438620:	cmp	x2, x3
  438624:	b.ne	438828 <ferror@plt+0x35af8>  // b.any
  438628:	ldr	x0, [x0, #40]
  43862c:	cbz	x0, 43863c <ferror@plt+0x3590c>
  438630:	ldr	w0, [x25, #4]
  438634:	add	w0, w0, #0x1
  438638:	str	w0, [x25, #4]
  43863c:	mov	x0, x19
  438640:	bl	4357ec <ferror@plt+0x32abc>
  438644:	ldrb	w0, [x19, #16]
  438648:	cbnz	w0, 4385f8 <ferror@plt+0x358c8>
  43864c:	add	x20, x19, #0x298
  438650:	cbz	x23, 438694 <ferror@plt+0x35964>
  438654:	cbnz	w24, 43865c <ferror@plt+0x3592c>
  438658:	ldr	w24, [x20]
  43865c:	str	w24, [x23]
  438660:	ldrb	w0, [x19, #1157]
  438664:	cbnz	w0, 43867c <ferror@plt+0x3594c>
  438668:	ldr	x0, [x19, #136]
  43866c:	bl	434cc8 <ferror@plt+0x31f98>
  438670:	cbz	x0, 43867c <ferror@plt+0x3594c>
  438674:	ldr	w0, [x19, #176]
  438678:	str	w0, [x23]
  43867c:	ldr	w0, [x23]
  438680:	ldrb	w1, [x19, #1160]
  438684:	cbz	w1, 438690 <ferror@plt+0x35960>
  438688:	ldrb	w1, [x19, #16]
  43868c:	cbnz	w1, 438a94 <ferror@plt+0x35d64>
  438690:	str	w0, [x23]
  438694:	strb	w26, [x19, #192]
  438698:	mov	x0, x20
  43869c:	ldp	x19, x20, [sp, #16]
  4386a0:	ldp	x21, x22, [sp, #32]
  4386a4:	ldp	x23, x24, [sp, #48]
  4386a8:	ldp	x25, x26, [sp, #64]
  4386ac:	ldp	x29, x30, [sp], #112
  4386b0:	ret
  4386b4:	mov	x0, x19
  4386b8:	bl	431be0 <ferror@plt+0x2eeb0>
  4386bc:	mov	x20, x0
  4386c0:	ldr	w24, [x0]
  4386c4:	ldrb	w0, [x19, #16]
  4386c8:	cbz	w0, 4386d8 <ferror@plt+0x359a8>
  4386cc:	ldrb	w0, [x20, #4]
  4386d0:	cmp	w0, #0x4f
  4386d4:	b.eq	4385f8 <ferror@plt+0x358c8>  // b.none
  4386d8:	ldrb	w0, [x20, #4]
  4386dc:	cmp	w0, #0x35
  4386e0:	b.ne	438650 <ferror@plt+0x35920>  // b.any
  4386e4:	ldr	x21, [x20, #8]
  4386e8:	ldrb	w0, [x21, #18]
  4386ec:	tst	x0, #0x3
  4386f0:	b.eq	438650 <ferror@plt+0x35920>  // b.none
  4386f4:	ldrh	w0, [x20, #6]
  4386f8:	tbnz	w0, #10, 438650 <ferror@plt+0x35920>
  4386fc:	ldrh	w0, [x21, #18]
  438700:	tbnz	w0, #6, 438a68 <ferror@plt+0x35d38>
  438704:	ldrb	w0, [x19, #192]
  438708:	cbnz	w0, 438724 <ferror@plt+0x359f4>
  43870c:	ldr	x0, [x19, #136]
  438710:	bl	434cc8 <ferror@plt+0x31f98>
  438714:	cbnz	x0, 438724 <ferror@plt+0x359f4>
  438718:	ldr	w0, [x20]
  43871c:	str	w0, [x19, #176]
  438720:	str	x21, [x19, #184]
  438724:	ldrb	w0, [x19, #24]
  438728:	cbnz	w0, 438650 <ferror@plt+0x35920>
  43872c:	ldrh	w0, [x21, #18]
  438730:	tbz	w0, #8, 438a50 <ferror@plt+0x35d20>
  438734:	ldr	x0, [x19, #992]
  438738:	cbz	x0, 438650 <ferror@plt+0x35920>
  43873c:	mov	w1, #0x0                   	// #0
  438740:	mov	x0, x19
  438744:	bl	431d34 <ferror@plt+0x2f004>
  438748:	ldrb	w1, [x0, #4]
  43874c:	mov	w21, #0x1                   	// #1
  438750:	cmp	w1, #0x53
  438754:	b.eq	438760 <ferror@plt+0x35a30>  // b.none
  438758:	ldrb	w21, [x0, #6]
  43875c:	and	w21, w21, #0x1
  438760:	ldr	x2, [x19, #992]
  438764:	mov	x1, x20
  438768:	mov	x0, x19
  43876c:	blr	x2
  438770:	mov	x1, x0
  438774:	cbz	x0, 438a08 <ferror@plt+0x35cd8>
  438778:	mov	w3, w24
  43877c:	mov	x2, x20
  438780:	mov	x0, x19
  438784:	bl	436d88 <ferror@plt+0x34058>
  438788:	cbz	w0, 438650 <ferror@plt+0x35920>
  43878c:	ldrb	w1, [x19, #16]
  438790:	cmp	w1, #0x0
  438794:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  438798:	b.eq	4385f8 <ferror@plt+0x358c8>  // b.none
  43879c:	mov	x1, x20
  4387a0:	mov	x0, x19
  4387a4:	bl	434e3c <ferror@plt+0x3210c>
  4387a8:	mov	x20, x0
  4387ac:	b	438650 <ferror@plt+0x35920>
  4387b0:	ldr	x20, [x0, #16]
  4387b4:	ldr	x1, [x0, #24]
  4387b8:	cmp	x20, x1
  4387bc:	b.eq	438628 <ferror@plt+0x358f8>  // b.none
  4387c0:	mov	x1, x20
  4387c4:	ldr	w24, [x1], #24
  4387c8:	str	x1, [x0, #16]
  4387cc:	ldrh	w0, [x20, #6]
  4387d0:	tbz	w0, #3, 4386c4 <ferror@plt+0x35994>
  4387d4:	str	x27, [sp, #80]
  4387d8:	str	x20, [sp, #96]
  4387dc:	ldr	x22, [x19, #136]
  4387e0:	mov	x0, x22
  4387e4:	bl	434cc8 <ferror@plt+0x31f98>
  4387e8:	cbz	x0, 438894 <ferror@plt+0x35b64>
  4387ec:	ldrh	w0, [x20, #6]
  4387f0:	tbz	w0, #3, 438894 <ferror@plt+0x35b64>
  4387f4:	ldr	w0, [x22, #48]
  4387f8:	cmp	w0, #0x2
  4387fc:	b.eq	4388ac <ferror@plt+0x35b7c>  // b.none
  438800:	ldr	w27, [x19, #176]
  438804:	mov	x21, #0x0                   	// #0
  438808:	b	438900 <ferror@plt+0x35bd0>
  43880c:	str	x27, [sp, #80]
  438810:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  438814:	add	x2, x2, #0x10
  438818:	mov	w1, #0xa2f                 	// #2607
  43881c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  438820:	add	x0, x0, #0x7f8
  438824:	bl	4102b4 <ferror@plt+0xd584>
  438828:	cbnz	w1, 43883c <ferror@plt+0x35b0c>
  43882c:	ldr	x20, [x2], #8
  438830:	ldr	w24, [x20]
  438834:	str	x2, [x0, #16]
  438838:	b	4387cc <ferror@plt+0x35a9c>
  43883c:	cmp	w1, #0x2
  438840:	b.ne	438878 <ferror@plt+0x35b48>  // b.any
  438844:	ldr	x1, [x0, #40]
  438848:	ldr	x20, [x2]
  43884c:	ldr	x2, [x1, #8]
  438850:	cbz	x2, 438870 <ferror@plt+0x35b40>
  438854:	ldr	x2, [x1, #16]
  438858:	ldr	w24, [x2], #4
  43885c:	str	x2, [x1, #16]
  438860:	ldr	x1, [x0, #16]
  438864:	add	x1, x1, #0x8
  438868:	str	x1, [x0, #16]
  43886c:	b	4387cc <ferror@plt+0x35a9c>
  438870:	ldr	w24, [x20]
  438874:	b	438860 <ferror@plt+0x35b30>
  438878:	str	x27, [sp, #80]
  43887c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  438880:	add	x2, x2, #0x28
  438884:	mov	w1, #0xa59                 	// #2649
  438888:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43888c:	add	x0, x0, #0x7f8
  438890:	bl	4102b4 <ferror@plt+0xd584>
  438894:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  438898:	add	x2, x2, #0x48
  43889c:	mov	w1, #0x352                 	// #850
  4388a0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  4388a4:	add	x0, x0, #0x7f8
  4388a8:	bl	4102b4 <ferror@plt+0xd584>
  4388ac:	ldr	x0, [x22, #40]
  4388b0:	ldr	x0, [x0, #16]
  4388b4:	ldur	w27, [x0, #-4]
  4388b8:	b	438804 <ferror@plt+0x35ad4>
  4388bc:	ldr	x21, [x22, #16]
  4388c0:	add	x0, x21, #0x18
  4388c4:	str	x0, [x22, #16]
  4388c8:	ldrb	w0, [x21, #4]
  4388cc:	cmp	w0, #0x53
  4388d0:	b.ne	4388dc <ferror@plt+0x35bac>  // b.any
  4388d4:	ldrh	w0, [x21, #6]
  4388d8:	tbnz	w0, #3, 438950 <ferror@plt+0x35c20>
  4388dc:	mov	x3, x21
  4388e0:	add	x2, sp, #0x60
  4388e4:	mov	w1, w27
  4388e8:	mov	x0, x19
  4388ec:	bl	435a40 <ferror@plt+0x32d10>
  4388f0:	and	w0, w0, #0xff
  4388f4:	cbz	w0, 438968 <ferror@plt+0x35c38>
  4388f8:	ldrh	w0, [x21, #6]
  4388fc:	tbz	w0, #3, 438968 <ferror@plt+0x35c38>
  438900:	ldr	w0, [x22, #48]
  438904:	cmp	w0, #0x1
  438908:	b.eq	4388bc <ferror@plt+0x35b8c>  // b.none
  43890c:	cbnz	w0, 438924 <ferror@plt+0x35bf4>
  438910:	ldr	x0, [x22, #16]
  438914:	add	x1, x0, #0x8
  438918:	str	x1, [x22, #16]
  43891c:	ldr	x21, [x0]
  438920:	b	4388c8 <ferror@plt+0x35b98>
  438924:	cmp	w0, #0x2
  438928:	b.ne	4388c8 <ferror@plt+0x35b98>  // b.any
  43892c:	ldr	x0, [x22, #16]
  438930:	add	x1, x0, #0x8
  438934:	str	x1, [x22, #16]
  438938:	ldr	x21, [x0]
  43893c:	ldr	x1, [x22, #40]
  438940:	ldr	x0, [x1, #16]
  438944:	add	x0, x0, #0x4
  438948:	str	x0, [x1, #16]
  43894c:	b	4388c8 <ferror@plt+0x35b98>
  438950:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  438954:	add	x2, x2, #0x48
  438958:	mov	w1, #0x380                 	// #896
  43895c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x25c60>
  438960:	add	x0, x0, #0x7f8
  438964:	bl	4102b4 <ferror@plt+0xd584>
  438968:	ldr	w0, [x22, #48]
  43896c:	cmp	w0, #0x2
  438970:	b.eq	438998 <ferror@plt+0x35c68>  // b.none
  438974:	mov	w3, #0x1                   	// #1
  438978:	ldr	x2, [sp, #96]
  43897c:	mov	x1, #0x0                   	// #0
  438980:	mov	x0, x19
  438984:	bl	435580 <ferror@plt+0x32850>
  438988:	ldrb	w0, [x19, #16]
  43898c:	cbz	w0, 4389f0 <ferror@plt+0x35cc0>
  438990:	ldr	x27, [sp, #80]
  438994:	b	4385f8 <ferror@plt+0x358c8>
  438998:	str	xzr, [sp, #104]
  43899c:	add	x2, sp, #0x68
  4389a0:	mov	x1, #0x1                   	// #1
  4389a4:	mov	x0, x19
  4389a8:	bl	434e6c <ferror@plt+0x3213c>
  4389ac:	mov	x21, x0
  4389b0:	mov	w6, #0x0                   	// #0
  4389b4:	mov	x5, #0x0                   	// #0
  4389b8:	mov	w4, #0x0                   	// #0
  4389bc:	mov	w3, w27
  4389c0:	ldr	x2, [sp, #96]
  4389c4:	ldr	x1, [sp, #104]
  4389c8:	bl	434eb4 <ferror@plt+0x32184>
  4389cc:	ldr	x0, [x22, #40]
  4389d0:	mov	w5, #0x1                   	// #1
  4389d4:	ldr	x4, [x21, #8]
  4389d8:	ldr	x3, [sp, #104]
  4389dc:	mov	x2, x21
  4389e0:	ldr	x1, [x0]
  4389e4:	mov	x0, x19
  4389e8:	bl	434d40 <ferror@plt+0x32010>
  4389ec:	b	438988 <ferror@plt+0x35c58>
  4389f0:	mov	x1, x20
  4389f4:	mov	x0, x19
  4389f8:	bl	434e3c <ferror@plt+0x3210c>
  4389fc:	mov	x20, x0
  438a00:	ldr	x27, [sp, #80]
  438a04:	b	438650 <ferror@plt+0x35920>
  438a08:	cbz	w21, 438650 <ferror@plt+0x35920>
  438a0c:	mov	w1, #0x0                   	// #0
  438a10:	mov	x0, x19
  438a14:	bl	431d34 <ferror@plt+0x2f004>
  438a18:	mov	x1, x0
  438a1c:	ldrb	w0, [x0, #4]
  438a20:	cmp	w0, #0x53
  438a24:	b.eq	438650 <ferror@plt+0x35920>  // b.none
  438a28:	ldrh	w0, [x1, #6]
  438a2c:	tbnz	w0, #0, 438650 <ferror@plt+0x35920>
  438a30:	mov	x0, x19
  438a34:	bl	434e3c <ferror@plt+0x3210c>
  438a38:	mov	w3, #0x1                   	// #1
  438a3c:	mov	x2, x0
  438a40:	mov	x1, #0x0                   	// #0
  438a44:	mov	x0, x19
  438a48:	bl	435580 <ferror@plt+0x32850>
  438a4c:	b	438650 <ferror@plt+0x35920>
  438a50:	mov	w3, w24
  438a54:	mov	x2, x20
  438a58:	mov	x1, x21
  438a5c:	mov	x0, x19
  438a60:	bl	436d88 <ferror@plt+0x34058>
  438a64:	b	438788 <ferror@plt+0x35a58>
  438a68:	mov	x0, x19
  438a6c:	bl	42e4f4 <ferror@plt+0x2b7c4>
  438a70:	ldrb	w1, [x20, #4]
  438a74:	strb	w1, [x0, #4]
  438a78:	ldrh	w1, [x20, #6]
  438a7c:	orr	w1, w1, #0x400
  438a80:	strh	w1, [x0, #6]
  438a84:	ldp	x2, x3, [x20, #8]
  438a88:	stp	x2, x3, [x0, #8]
  438a8c:	mov	x20, x0
  438a90:	b	438650 <ferror@plt+0x35920>
  438a94:	ldr	w0, [x19, #48]
  438a98:	b	438690 <ferror@plt+0x35960>
  438a9c:	stp	x29, x30, [sp, #-16]!
  438aa0:	mov	x29, sp
  438aa4:	mov	x1, #0x0                   	// #0
  438aa8:	bl	4385c8 <ferror@plt+0x35898>
  438aac:	ldp	x29, x30, [sp], #16
  438ab0:	ret
  438ab4:	stp	x29, x30, [sp, #-32]!
  438ab8:	mov	x29, sp
  438abc:	str	x19, [sp, #16]
  438ac0:	mov	x19, x0
  438ac4:	ldr	x1, [x0]
  438ac8:	ldrb	w0, [x1, #105]
  438acc:	orr	w0, w0, #0x4
  438ad0:	strb	w0, [x1, #105]
  438ad4:	ldrb	w0, [x19, #27]
  438ad8:	add	w0, w0, #0x1
  438adc:	strb	w0, [x19, #27]
  438ae0:	ldrb	w0, [x19, #24]
  438ae4:	add	w0, w0, #0x1
  438ae8:	strb	w0, [x19, #24]
  438aec:	ldrb	w0, [x19, #1160]
  438af0:	cbz	w0, 438b28 <ferror@plt+0x35df8>
  438af4:	mov	x0, x19
  438af8:	bl	43b5b0 <ferror@plt+0x38880>
  438afc:	and	w0, w0, #0xff
  438b00:	cbnz	w0, 438af4 <ferror@plt+0x35dc4>
  438b04:	ldrb	w0, [x19, #27]
  438b08:	sub	w0, w0, #0x1
  438b0c:	strb	w0, [x19, #27]
  438b10:	ldrb	w0, [x19, #24]
  438b14:	sub	w0, w0, #0x1
  438b18:	strb	w0, [x19, #24]
  438b1c:	ldr	x19, [sp, #16]
  438b20:	ldp	x29, x30, [sp], #32
  438b24:	ret
  438b28:	mov	x0, x19
  438b2c:	bl	438a9c <ferror@plt+0x35d6c>
  438b30:	ldrb	w0, [x0, #4]
  438b34:	cmp	w0, #0x16
  438b38:	b.ne	438b28 <ferror@plt+0x35df8>  // b.any
  438b3c:	b	438b04 <ferror@plt+0x35dd4>
  438b40:	stp	x29, x30, [sp, #-16]!
  438b44:	mov	x29, sp
  438b48:	bl	4385c8 <ferror@plt+0x35898>
  438b4c:	ldp	x29, x30, [sp], #16
  438b50:	ret
  438b54:	stp	x29, x30, [sp, #-96]!
  438b58:	mov	x29, sp
  438b5c:	stp	x19, x20, [sp, #16]
  438b60:	stp	x21, x22, [sp, #32]
  438b64:	stp	x23, x24, [sp, #48]
  438b68:	stp	x25, x26, [sp, #64]
  438b6c:	mov	x23, x0
  438b70:	mov	x25, x1
  438b74:	ldr	x20, [x1, #24]
  438b78:	ldr	w0, [x1, #8]
  438b7c:	add	w0, w0, w0, lsl #2
  438b80:	lsl	w0, w0, #1
  438b84:	ldrb	w4, [x20, #19]
  438b88:	add	w19, w0, #0x2
  438b8c:	tbz	w4, #2, 438bc0 <ferror@plt+0x35e90>
  438b90:	add	w19, w0, #0x6
  438b94:	ldrh	w2, [x20, #16]
  438b98:	cbz	w2, 438bc0 <ferror@plt+0x35e90>
  438b9c:	ldr	x3, [x20]
  438ba0:	mov	x0, #0x0                   	// #0
  438ba4:	ldr	x1, [x3, x0, lsl #3]
  438ba8:	ldr	w1, [x1, #8]
  438bac:	add	w1, w1, #0x1
  438bb0:	add	w19, w19, w1
  438bb4:	add	x0, x0, #0x1
  438bb8:	cmp	w2, w0
  438bbc:	b.hi	438ba4 <ferror@plt+0x35e74>  // b.pmore
  438bc0:	ldrb	w0, [x23, #1160]
  438bc4:	cbnz	w0, 438be0 <ferror@plt+0x35eb0>
  438bc8:	tbnz	w4, #6, 438c30 <ferror@plt+0x35f00>
  438bcc:	ldr	w24, [x20, #12]
  438bd0:	cbz	w24, 438bec <ferror@plt+0x35ebc>
  438bd4:	add	x22, x20, #0x18
  438bd8:	mov	w21, #0x0                   	// #0
  438bdc:	b	438c98 <ferror@plt+0x35f68>
  438be0:	mov	x0, x20
  438be4:	bl	43b614 <ferror@plt+0x388e4>
  438be8:	add	w19, w19, w0
  438bec:	ldr	w0, [x23, #512]
  438bf0:	cmp	w0, w19
  438bf4:	b.cc	438cc0 <ferror@plt+0x35f90>  // b.lo, b.ul, b.last
  438bf8:	mov	x1, x25
  438bfc:	ldr	x0, [x23, #504]
  438c00:	bl	42e704 <ferror@plt+0x2b9d4>
  438c04:	mov	x19, x0
  438c08:	ldrb	w0, [x20, #19]
  438c0c:	tbz	w0, #2, 438d48 <ferror@plt+0x36018>
  438c10:	mov	w0, #0x28                  	// #40
  438c14:	strb	w0, [x19], #1
  438c18:	ldrh	w0, [x20, #16]
  438c1c:	cbz	w0, 438d40 <ferror@plt+0x36010>
  438c20:	mov	w22, #0x0                   	// #0
  438c24:	mov	w24, #0x2e                  	// #46
  438c28:	mov	w25, #0x2c                  	// #44
  438c2c:	b	438cfc <ferror@plt+0x35fcc>
  438c30:	ldr	w1, [x20, #12]
  438c34:	mov	w24, w1
  438c38:	sub	w1, w1, #0x1
  438c3c:	cbz	w24, 438bec <ferror@plt+0x35ebc>
  438c40:	ubfiz	x0, x1, #1, #32
  438c44:	add	x0, x0, w1, uxtw
  438c48:	add	x0, x20, x0, lsl #3
  438c4c:	ldrb	w0, [x0, #28]
  438c50:	cmp	w0, #0x26
  438c54:	b.eq	438c34 <ferror@plt+0x35f04>  // b.none
  438c58:	b	438bd4 <ferror@plt+0x35ea4>
  438c5c:	mov	x0, x22
  438c60:	bl	42e6bc <ferror@plt+0x2b98c>
  438c64:	add	w19, w19, w0
  438c68:	ldrh	w2, [x22, #6]
  438c6c:	ubfx	x0, x2, #2, #1
  438c70:	add	w19, w19, w0
  438c74:	add	w0, w19, #0x3
  438c78:	tst	x2, #0x8
  438c7c:	csel	w19, w0, w19, ne  // ne = any
  438c80:	and	w2, w2, #0x1
  438c84:	add	w19, w19, w2
  438c88:	add	w21, w21, #0x1
  438c8c:	add	x22, x22, #0x18
  438c90:	cmp	w21, w24
  438c94:	b.cs	438bec <ferror@plt+0x35ebc>  // b.hs, b.nlast
  438c98:	ubfiz	x2, x21, #1, #32
  438c9c:	add	x2, x2, w21, uxtw
  438ca0:	add	x2, x20, x2, lsl #3
  438ca4:	ldrb	w0, [x2, #28]
  438ca8:	cmp	w0, #0x50
  438cac:	b.ne	438c5c <ferror@plt+0x35f2c>  // b.any
  438cb0:	ldr	x0, [x22, #16]
  438cb4:	ldr	w0, [x0, #8]
  438cb8:	add	w19, w19, w0
  438cbc:	b	438c68 <ferror@plt+0x35f38>
  438cc0:	mov	w1, w19
  438cc4:	ldr	x0, [x23, #504]
  438cc8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  438ccc:	str	x0, [x23, #504]
  438cd0:	str	w19, [x23, #512]
  438cd4:	b	438bf8 <ferror@plt+0x35ec8>
  438cd8:	ldrb	w0, [x20, #19]
  438cdc:	tbz	w0, #3, 438d40 <ferror@plt+0x36010>
  438ce0:	strb	w24, [x19]
  438ce4:	strb	w24, [x19, #1]
  438ce8:	strb	w24, [x19, #2]
  438cec:	add	x19, x19, #0x3
  438cf0:	ldrh	w0, [x20, #16]
  438cf4:	cmp	w0, w22
  438cf8:	b.ls	438d40 <ferror@plt+0x36010>  // b.plast
  438cfc:	ldr	x0, [x20]
  438d00:	ldr	x21, [x0, w22, uxtw #3]
  438d04:	ldr	x0, [x23, #1272]
  438d08:	cmp	x0, x21
  438d0c:	b.eq	438d28 <ferror@plt+0x35ff8>  // b.none
  438d10:	ldr	w2, [x21, #8]
  438d14:	ldr	x1, [x21]
  438d18:	mov	x0, x19
  438d1c:	bl	402620 <memcpy@plt>
  438d20:	ldr	w0, [x21, #8]
  438d24:	add	x19, x19, x0
  438d28:	add	w22, w22, #0x1
  438d2c:	ldrh	w0, [x20, #16]
  438d30:	cmp	w22, w0
  438d34:	b.cs	438cd8 <ferror@plt+0x35fa8>  // b.hs, b.nlast
  438d38:	strb	w25, [x19], #1
  438d3c:	b	438cf0 <ferror@plt+0x35fc0>
  438d40:	mov	w0, #0x29                  	// #41
  438d44:	strb	w0, [x19], #1
  438d48:	mov	w0, #0x20                  	// #32
  438d4c:	strb	w0, [x19], #1
  438d50:	ldrb	w0, [x23, #1160]
  438d54:	cbnz	w0, 438d84 <ferror@plt+0x36054>
  438d58:	ldr	w25, [x20, #12]
  438d5c:	cbz	w25, 438d94 <ferror@plt+0x36064>
  438d60:	ldrb	w0, [x20, #19]
  438d64:	tbnz	w0, #6, 438e60 <ferror@plt+0x36130>
  438d68:	stp	x27, x28, [sp, #80]
  438d6c:	add	x24, x20, #0x18
  438d70:	mov	w21, #0x0                   	// #0
  438d74:	mov	w27, #0x20                  	// #32
  438d78:	mov	w26, #0x23                  	// #35
  438d7c:	mov	w28, #0x1                   	// #1
  438d80:	b	438df0 <ferror@plt+0x360c0>
  438d84:	mov	x1, x19
  438d88:	mov	x0, x20
  438d8c:	bl	43b67c <ferror@plt+0x3894c>
  438d90:	mov	x19, x0
  438d94:	strb	wzr, [x19]
  438d98:	ldr	x0, [x23, #504]
  438d9c:	ldp	x19, x20, [sp, #16]
  438da0:	ldp	x21, x22, [sp, #32]
  438da4:	ldp	x23, x24, [sp, #48]
  438da8:	ldp	x25, x26, [sp, #64]
  438dac:	ldp	x29, x30, [sp], #96
  438db0:	ret
  438db4:	stp	x27, x28, [sp, #80]
  438db8:	b	438d6c <ferror@plt+0x3603c>
  438dbc:	ldr	x0, [x22, #16]
  438dc0:	ldr	w2, [x0, #8]
  438dc4:	ldr	x1, [x0]
  438dc8:	mov	x0, x19
  438dcc:	bl	402620 <memcpy@plt>
  438dd0:	ldr	x0, [x22, #16]
  438dd4:	ldr	w0, [x0, #8]
  438dd8:	add	x19, x19, x0
  438ddc:	b	438e3c <ferror@plt+0x3610c>
  438de0:	add	w21, w21, #0x1
  438de4:	add	x24, x24, #0x18
  438de8:	cmp	w25, w21
  438dec:	b.ls	438e58 <ferror@plt+0x36128>  // b.plast
  438df0:	mov	x22, x24
  438df4:	ldrh	w0, [x24, #6]
  438df8:	tbz	w0, #0, 438e00 <ferror@plt+0x360d0>
  438dfc:	strb	w27, [x19], #1
  438e00:	ldrh	w0, [x22, #6]
  438e04:	tbz	w0, #2, 438e0c <ferror@plt+0x360dc>
  438e08:	strb	w26, [x19], #1
  438e0c:	ubfiz	x0, x21, #1, #32
  438e10:	add	x0, x0, w21, uxtw
  438e14:	add	x0, x20, x0, lsl #3
  438e18:	ldrb	w0, [x0, #28]
  438e1c:	cmp	w0, #0x50
  438e20:	b.eq	438dbc <ferror@plt+0x3608c>  // b.none
  438e24:	mov	w3, w28
  438e28:	mov	x2, x19
  438e2c:	mov	x1, x22
  438e30:	mov	x0, x23
  438e34:	bl	42e788 <ferror@plt+0x2ba58>
  438e38:	mov	x19, x0
  438e3c:	ldrh	w0, [x22, #6]
  438e40:	tbz	w0, #3, 438de0 <ferror@plt+0x360b0>
  438e44:	strb	w27, [x19]
  438e48:	strb	w26, [x19, #1]
  438e4c:	strb	w26, [x19, #2]
  438e50:	add	x19, x19, #0x3
  438e54:	b	438de0 <ferror@plt+0x360b0>
  438e58:	ldp	x27, x28, [sp, #80]
  438e5c:	b	438d94 <ferror@plt+0x36064>
  438e60:	sub	w1, w25, #0x1
  438e64:	add	w25, w1, #0x1
  438e68:	ubfiz	x0, x1, #1, #32
  438e6c:	add	x0, x0, w1, uxtw
  438e70:	add	x0, x20, x0, lsl #3
  438e74:	ldrb	w0, [x0, #28]
  438e78:	cmp	w0, #0x26
  438e7c:	b.ne	438db4 <ferror@plt+0x36084>  // b.any
  438e80:	sub	w1, w1, #0x1
  438e84:	cmn	w1, #0x1
  438e88:	b.ne	438e64 <ferror@plt+0x36134>  // b.any
  438e8c:	b	438d94 <ferror@plt+0x36064>
  438e90:	stp	x29, x30, [sp, #-48]!
  438e94:	mov	x29, sp
  438e98:	stp	x19, x20, [sp, #16]
  438e9c:	stp	x21, x22, [sp, #32]
  438ea0:	mov	x21, x0
  438ea4:	mov	x19, x1
  438ea8:	ldr	x0, [x0, #32]
  438eac:	cbz	x0, 438f34 <ferror@plt+0x36204>
  438eb0:	ldr	w0, [x21, #48]
  438eb4:	cbz	w0, 438f34 <ferror@plt+0x36204>
  438eb8:	mov	w20, #0x0                   	// #0
  438ebc:	b	438ed0 <ferror@plt+0x361a0>
  438ec0:	add	w20, w20, #0x1
  438ec4:	ldr	w0, [x21, #48]
  438ec8:	cmp	w0, w20
  438ecc:	b.ls	438f34 <ferror@plt+0x36204>  // b.plast
  438ed0:	mov	w22, w20
  438ed4:	ldr	x1, [x21, #40]
  438ed8:	ldr	x0, [x21, #32]
  438edc:	ldr	x2, [x1, x22, lsl #3]
  438ee0:	mov	x1, x19
  438ee4:	ldr	x0, [x0, x22, lsl #3]
  438ee8:	bl	452d8c <ferror@plt+0x5005c>
  438eec:	cbnz	w0, 438ec0 <ferror@plt+0x36190>
  438ef0:	ldr	x0, [x21, #40]
  438ef4:	ldr	x0, [x0, x22, lsl #3]
  438ef8:	add	x1, x19, x0
  438efc:	ldrb	w2, [x19, x0]
  438f00:	cmp	w2, #0x2f
  438f04:	b.ne	438ec0 <ferror@plt+0x36190>  // b.any
  438f08:	ldrb	w2, [x1, #1]
  438f0c:	cmp	w2, #0x2e
  438f10:	b.ne	438f2c <ferror@plt+0x361fc>  // b.any
  438f14:	ldrb	w2, [x1, #2]
  438f18:	cmp	w2, #0x2e
  438f1c:	b.ne	438f2c <ferror@plt+0x361fc>  // b.any
  438f20:	ldrb	w1, [x1, #3]
  438f24:	cmp	w1, #0x2f
  438f28:	b.eq	438ec0 <ferror@plt+0x36190>  // b.none
  438f2c:	add	x0, x0, #0x1
  438f30:	add	x19, x19, x0
  438f34:	ldrb	w0, [x19]
  438f38:	cmp	w0, #0x2e
  438f3c:	b.eq	438f54 <ferror@plt+0x36224>  // b.none
  438f40:	mov	x0, x19
  438f44:	b	438f88 <ferror@plt+0x36258>
  438f48:	ldrb	w0, [x19]
  438f4c:	cmp	w0, #0x2e
  438f50:	b.ne	438f98 <ferror@plt+0x36268>  // b.any
  438f54:	ldrb	w0, [x19, #1]
  438f58:	cmp	w0, #0x2f
  438f5c:	b.ne	438f84 <ferror@plt+0x36254>  // b.any
  438f60:	add	x0, x19, #0x2
  438f64:	ldrb	w1, [x19, #2]
  438f68:	mov	x19, x0
  438f6c:	cmp	w1, #0x2f
  438f70:	b.ne	438f48 <ferror@plt+0x36218>  // b.any
  438f74:	ldrb	w0, [x19, #1]!
  438f78:	cmp	w0, #0x2f
  438f7c:	b.eq	438f74 <ferror@plt+0x36244>  // b.none
  438f80:	b	438f48 <ferror@plt+0x36218>
  438f84:	mov	x0, x19
  438f88:	ldp	x19, x20, [sp, #16]
  438f8c:	ldp	x21, x22, [sp, #32]
  438f90:	ldp	x29, x30, [sp], #48
  438f94:	ret
  438f98:	mov	x0, x19
  438f9c:	b	438f88 <ferror@plt+0x36258>
  438fa0:	stp	x29, x30, [sp, #-32]!
  438fa4:	mov	x29, sp
  438fa8:	str	x19, [sp, #16]
  438fac:	mov	x19, x0
  438fb0:	ldrb	w0, [x0]
  438fb4:	cbz	w0, 439034 <ferror@plt+0x36304>
  438fb8:	sub	x4, x19, #0x1
  438fbc:	mov	x3, x4
  438fc0:	mov	w1, #0x0                   	// #0
  438fc4:	b	438fe0 <ferror@plt+0x362b0>
  438fc8:	cmp	w0, #0x24
  438fcc:	cinc	w1, w1, eq  // eq = none
  438fd0:	add	w1, w1, #0x1
  438fd4:	add	x3, x3, #0x1
  438fd8:	ldrb	w0, [x3, #1]
  438fdc:	cbz	w0, 439038 <ferror@plt+0x36308>
  438fe0:	cmp	w0, #0x23
  438fe4:	b.eq	43902c <ferror@plt+0x362fc>  // b.none
  438fe8:	b.hi	438fc8 <ferror@plt+0x36298>  // b.pmore
  438fec:	cmp	w0, #0x9
  438ff0:	b.eq	438ffc <ferror@plt+0x362cc>  // b.none
  438ff4:	cmp	w0, #0x20
  438ff8:	b.ne	438fd0 <ferror@plt+0x362a0>  // b.any
  438ffc:	mov	x2, x3
  439000:	cmp	x19, x3
  439004:	b.hi	439024 <ferror@plt+0x362f4>  // b.pmore
  439008:	ldrb	w0, [x2]
  43900c:	cmp	w0, #0x5c
  439010:	b.ne	439024 <ferror@plt+0x362f4>  // b.any
  439014:	add	w1, w1, #0x1
  439018:	sub	x2, x2, #0x1
  43901c:	cmp	x2, x4
  439020:	b.ne	439008 <ferror@plt+0x362d8>  // b.any
  439024:	add	w1, w1, #0x1
  439028:	b	438fd0 <ferror@plt+0x362a0>
  43902c:	add	w1, w1, #0x1
  439030:	b	438fd0 <ferror@plt+0x362a0>
  439034:	mov	w1, #0x0                   	// #0
  439038:	add	w1, w1, #0x1
  43903c:	sxtw	x0, w1
  439040:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  439044:	ldrb	w3, [x19]
  439048:	cbz	w3, 4390d8 <ferror@plt+0x363a8>
  43904c:	sub	x7, x19, #0x1
  439050:	mov	x5, x7
  439054:	mov	x1, x0
  439058:	mov	w6, #0x5c                  	// #92
  43905c:	mov	w8, #0x24                  	// #36
  439060:	b	439088 <ferror@plt+0x36358>
  439064:	cmp	w3, #0x24
  439068:	b.ne	439078 <ferror@plt+0x36348>  // b.any
  43906c:	strb	w8, [x1], #1
  439070:	b	439078 <ferror@plt+0x36348>
  439074:	strb	w6, [x1], #1
  439078:	strb	w3, [x1], #1
  43907c:	add	x5, x5, #0x1
  439080:	ldrb	w3, [x5, #1]
  439084:	cbz	w3, 4390dc <ferror@plt+0x363ac>
  439088:	cmp	w3, #0x23
  43908c:	b.eq	4390d0 <ferror@plt+0x363a0>  // b.none
  439090:	b.hi	439064 <ferror@plt+0x36334>  // b.pmore
  439094:	cmp	w3, #0x9
  439098:	b.eq	4390a4 <ferror@plt+0x36374>  // b.none
  43909c:	cmp	w3, #0x20
  4390a0:	b.ne	439078 <ferror@plt+0x36348>  // b.any
  4390a4:	mov	x2, x5
  4390a8:	cmp	x19, x5
  4390ac:	b.hi	439074 <ferror@plt+0x36344>  // b.pmore
  4390b0:	ldrb	w4, [x2]
  4390b4:	cmp	w4, #0x5c
  4390b8:	b.ne	439074 <ferror@plt+0x36344>  // b.any
  4390bc:	strb	w6, [x1], #1
  4390c0:	sub	x2, x2, #0x1
  4390c4:	cmp	x2, x7
  4390c8:	b.ne	4390b0 <ferror@plt+0x36380>  // b.any
  4390cc:	b	439074 <ferror@plt+0x36344>
  4390d0:	strb	w6, [x1], #1
  4390d4:	b	439078 <ferror@plt+0x36348>
  4390d8:	mov	x1, x0
  4390dc:	strb	wzr, [x1]
  4390e0:	ldr	x19, [sp, #16]
  4390e4:	ldp	x29, x30, [sp], #32
  4390e8:	ret
  4390ec:	stp	x29, x30, [sp, #-16]!
  4390f0:	mov	x29, sp
  4390f4:	mov	x1, #0x38                  	// #56
  4390f8:	mov	x0, #0x1                   	// #1
  4390fc:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  439100:	ldp	x29, x30, [sp], #16
  439104:	ret
  439108:	stp	x29, x30, [sp, #-32]!
  43910c:	mov	x29, sp
  439110:	stp	x19, x20, [sp, #16]
  439114:	mov	x19, x0
  439118:	ldr	x0, [x0]
  43911c:	cbz	x0, 439150 <ferror@plt+0x36420>
  439120:	ldr	w0, [x19, #8]
  439124:	cbz	w0, 439148 <ferror@plt+0x36418>
  439128:	mov	w20, #0x0                   	// #0
  43912c:	ldr	x0, [x19]
  439130:	ldr	x0, [x0, w20, uxtw #3]
  439134:	bl	402a90 <free@plt>
  439138:	add	w20, w20, #0x1
  43913c:	ldr	w0, [x19, #8]
  439140:	cmp	w0, w20
  439144:	b.hi	43912c <ferror@plt+0x363fc>  // b.pmore
  439148:	ldr	x0, [x19]
  43914c:	bl	402a90 <free@plt>
  439150:	ldr	x0, [x19, #16]
  439154:	cbz	x0, 439188 <ferror@plt+0x36458>
  439158:	ldr	w0, [x19, #24]
  43915c:	cbz	w0, 439180 <ferror@plt+0x36450>
  439160:	mov	w20, #0x0                   	// #0
  439164:	ldr	x0, [x19, #16]
  439168:	ldr	x0, [x0, w20, uxtw #3]
  43916c:	bl	402a90 <free@plt>
  439170:	add	w20, w20, #0x1
  439174:	ldr	w0, [x19, #24]
  439178:	cmp	w0, w20
  43917c:	b.hi	439164 <ferror@plt+0x36434>  // b.pmore
  439180:	ldr	x0, [x19, #16]
  439184:	bl	402a90 <free@plt>
  439188:	ldr	x0, [x19, #32]
  43918c:	cbz	x0, 4391c8 <ferror@plt+0x36498>
  439190:	ldr	w0, [x19, #48]
  439194:	cbz	w0, 4391b8 <ferror@plt+0x36488>
  439198:	mov	w20, #0x0                   	// #0
  43919c:	ldr	x0, [x19, #32]
  4391a0:	ldr	x0, [x0, w20, uxtw #3]
  4391a4:	bl	402a90 <free@plt>
  4391a8:	add	w20, w20, #0x1
  4391ac:	ldr	w0, [x19, #48]
  4391b0:	cmp	w0, w20
  4391b4:	b.hi	43919c <ferror@plt+0x3646c>  // b.pmore
  4391b8:	ldr	x0, [x19, #32]
  4391bc:	bl	402a90 <free@plt>
  4391c0:	ldr	x0, [x19, #40]
  4391c4:	bl	402a90 <free@plt>
  4391c8:	mov	x0, x19
  4391cc:	bl	402a90 <free@plt>
  4391d0:	ldp	x19, x20, [sp, #16]
  4391d4:	ldp	x29, x30, [sp], #32
  4391d8:	ret
  4391dc:	stp	x29, x30, [sp, #-48]!
  4391e0:	mov	x29, sp
  4391e4:	stp	x19, x20, [sp, #16]
  4391e8:	str	x21, [sp, #32]
  4391ec:	mov	x19, x0
  4391f0:	mov	x21, x1
  4391f4:	mov	w20, w2
  4391f8:	ldr	w0, [x0, #12]
  4391fc:	ldr	w1, [x19, #8]
  439200:	cmp	w1, w0
  439204:	b.eq	439240 <ferror@plt+0x36510>  // b.none
  439208:	mov	x1, x21
  43920c:	mov	x0, x19
  439210:	bl	438e90 <ferror@plt+0x36160>
  439214:	cbz	w20, 439264 <ferror@plt+0x36534>
  439218:	bl	438fa0 <ferror@plt+0x36270>
  43921c:	ldr	x2, [x19]
  439220:	ldr	w1, [x19, #8]
  439224:	add	w3, w1, #0x1
  439228:	str	w3, [x19, #8]
  43922c:	str	x0, [x2, w1, uxtw #3]
  439230:	ldp	x19, x20, [sp, #16]
  439234:	ldr	x21, [sp, #32]
  439238:	ldp	x29, x30, [sp], #48
  43923c:	ret
  439240:	add	w0, w0, #0x2
  439244:	lsl	w0, w0, #1
  439248:	str	w0, [x19, #12]
  43924c:	mov	w0, w0
  439250:	lsl	x1, x0, #3
  439254:	ldr	x0, [x19]
  439258:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43925c:	str	x0, [x19]
  439260:	b	439208 <ferror@plt+0x364d8>
  439264:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  439268:	b	43921c <ferror@plt+0x364ec>
  43926c:	stp	x29, x30, [sp, #-48]!
  439270:	mov	x29, sp
  439274:	stp	x19, x20, [sp, #16]
  439278:	str	x21, [sp, #32]
  43927c:	mov	x19, x0
  439280:	ldr	w0, [x0, #8]
  439284:	cbnz	w0, 4392a4 <ferror@plt+0x36574>
  439288:	ldrb	w0, [x1]
  43928c:	cbnz	w0, 4392b8 <ferror@plt+0x36588>
  439290:	mov	w2, #0x1                   	// #1
  439294:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  439298:	add	x1, x1, #0x60
  43929c:	mov	x0, x19
  4392a0:	bl	4391dc <ferror@plt+0x364ac>
  4392a4:	mov	sp, x29
  4392a8:	ldp	x19, x20, [sp, #16]
  4392ac:	ldr	x21, [sp, #32]
  4392b0:	ldp	x29, x30, [sp], #48
  4392b4:	ret
  4392b8:	mov	x0, x1
  4392bc:	bl	453fdc <ferror@plt+0x512ac>
  4392c0:	mov	x21, x0
  4392c4:	bl	402680 <strlen@plt>
  4392c8:	add	x1, x0, #0x12
  4392cc:	and	x1, x1, #0xfffffffffffffff0
  4392d0:	sub	sp, sp, x1
  4392d4:	mov	x20, sp
  4392d8:	mov	x1, x21
  4392dc:	mov	x0, x20
  4392e0:	bl	402b30 <strcpy@plt>
  4392e4:	mov	w1, #0x2e                  	// #46
  4392e8:	mov	x0, x20
  4392ec:	bl	402950 <strrchr@plt>
  4392f0:	cbz	x0, 439320 <ferror@plt+0x365f0>
  4392f4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4392f8:	add	x1, x1, #0x148
  4392fc:	ldrh	w2, [x1]
  439300:	strh	w2, [x0]
  439304:	ldrb	w1, [x1, #2]
  439308:	strb	w1, [x0, #2]
  43930c:	mov	w2, #0x1                   	// #1
  439310:	mov	x1, x20
  439314:	mov	x0, x19
  439318:	bl	4391dc <ferror@plt+0x364ac>
  43931c:	b	4392a4 <ferror@plt+0x36574>
  439320:	mov	x0, x20
  439324:	bl	402680 <strlen@plt>
  439328:	add	x0, x20, x0
  43932c:	b	4392f4 <ferror@plt+0x365c4>
  439330:	stp	x29, x30, [sp, #-32]!
  439334:	mov	x29, sp
  439338:	stp	x19, x20, [sp, #16]
  43933c:	mov	x19, x0
  439340:	bl	438e90 <ferror@plt+0x36160>
  439344:	bl	438fa0 <ferror@plt+0x36270>
  439348:	mov	x20, x0
  43934c:	ldr	w0, [x19, #28]
  439350:	ldr	w1, [x19, #24]
  439354:	cmp	w1, w0
  439358:	b.eq	43937c <ferror@plt+0x3664c>  // b.none
  43935c:	ldr	x1, [x19, #16]
  439360:	ldr	w0, [x19, #24]
  439364:	add	w2, w0, #0x1
  439368:	str	w2, [x19, #24]
  43936c:	str	x20, [x1, w0, uxtw #3]
  439370:	ldp	x19, x20, [sp, #16]
  439374:	ldp	x29, x30, [sp], #32
  439378:	ret
  43937c:	add	w0, w0, #0x4
  439380:	lsl	w0, w0, #1
  439384:	str	w0, [x19, #28]
  439388:	mov	w0, w0
  43938c:	lsl	x1, x0, #3
  439390:	ldr	x0, [x19, #16]
  439394:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  439398:	str	x0, [x19, #16]
  43939c:	b	43935c <ferror@plt+0x3662c>
  4393a0:	stp	x29, x30, [sp, #-64]!
  4393a4:	mov	x29, sp
  4393a8:	stp	x19, x20, [sp, #16]
  4393ac:	stp	x21, x22, [sp, #32]
  4393b0:	mov	x20, x0
  4393b4:	mov	x21, x1
  4393b8:	ldrb	w0, [x1]
  4393bc:	cbz	w0, 439498 <ferror@plt+0x36768>
  4393c0:	str	x23, [sp, #48]
  4393c4:	b	4393fc <ferror@plt+0x366cc>
  4393c8:	mov	x19, x21
  4393cc:	b	439420 <ferror@plt+0x366f0>
  4393d0:	ldr	w1, [x20, #48]
  4393d4:	ldr	x0, [x20, #32]
  4393d8:	str	x23, [x0, x1, lsl #3]
  4393dc:	ldr	w1, [x20, #48]
  4393e0:	ldr	x0, [x20, #40]
  4393e4:	str	x22, [x0, x1, lsl #3]
  4393e8:	ldr	w0, [x20, #48]
  4393ec:	add	w0, w0, #0x1
  4393f0:	str	w0, [x20, #48]
  4393f4:	ldrb	w0, [x21]
  4393f8:	cbz	w0, 439494 <ferror@plt+0x36764>
  4393fc:	ldrb	w0, [x21]
  439400:	cmp	w0, #0x3a
  439404:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  439408:	b.eq	4393c8 <ferror@plt+0x36698>  // b.none
  43940c:	mov	x19, x21
  439410:	ldrb	w2, [x19, #1]!
  439414:	cmp	w2, #0x3a
  439418:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  43941c:	b.ne	439410 <ferror@plt+0x366e0>  // b.any
  439420:	sub	x22, x19, x21
  439424:	add	x0, x22, #0x1
  439428:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  43942c:	mov	x23, x0
  439430:	mov	x2, x22
  439434:	mov	x1, x21
  439438:	bl	402620 <memcpy@plt>
  43943c:	strb	wzr, [x23, x22]
  439440:	ldrb	w0, [x19]
  439444:	cmp	w0, #0x3a
  439448:	cinc	x21, x19, eq  // eq = none
  43944c:	ldr	w0, [x20, #52]
  439450:	ldr	w1, [x20, #48]
  439454:	cmp	w1, w0
  439458:	b.ne	4393d0 <ferror@plt+0x366a0>  // b.any
  43945c:	add	w0, w0, #0x4
  439460:	lsl	w0, w0, #1
  439464:	str	w0, [x20, #52]
  439468:	mov	w0, w0
  43946c:	lsl	x1, x0, #3
  439470:	ldr	x0, [x20, #32]
  439474:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  439478:	str	x0, [x20, #32]
  43947c:	ldr	w1, [x20, #52]
  439480:	lsl	x1, x1, #3
  439484:	ldr	x0, [x20, #40]
  439488:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43948c:	str	x0, [x20, #40]
  439490:	b	4393d0 <ferror@plt+0x366a0>
  439494:	ldr	x23, [sp, #48]
  439498:	ldp	x19, x20, [sp, #16]
  43949c:	ldp	x21, x22, [sp, #32]
  4394a0:	ldp	x29, x30, [sp], #64
  4394a4:	ret
  4394a8:	stp	x29, x30, [sp, #-96]!
  4394ac:	mov	x29, sp
  4394b0:	stp	x19, x20, [sp, #16]
  4394b4:	stp	x21, x22, [sp, #32]
  4394b8:	stp	x23, x24, [sp, #48]
  4394bc:	stp	x25, x26, [sp, #64]
  4394c0:	stp	x27, x28, [sp, #80]
  4394c4:	mov	x20, x0
  4394c8:	mov	x21, x1
  4394cc:	sub	w0, w2, #0x1
  4394d0:	cmp	w0, #0x20
  4394d4:	mov	w24, #0x22                  	// #34
  4394d8:	csel	w24, w2, w24, hi  // hi = pmore
  4394dc:	ldr	w19, [x20, #8]
  4394e0:	cbz	w19, 4395a4 <ferror@plt+0x36874>
  4394e4:	ldr	x0, [x20]
  4394e8:	ldr	x0, [x0]
  4394ec:	bl	402680 <strlen@plt>
  4394f0:	mov	w19, w0
  4394f4:	mov	w22, #0x0                   	// #0
  4394f8:	mov	x25, #0x0                   	// #0
  4394fc:	mov	w27, #0x20                  	// #32
  439500:	adrp	x26, 47b000 <_obstack_memory_used@@Base+0x26c60>
  439504:	add	x26, x26, #0x150
  439508:	mov	x28, #0x4                   	// #4
  43950c:	b	43953c <ferror@plt+0x3680c>
  439510:	mov	x3, x21
  439514:	mov	x2, x28
  439518:	mov	x1, #0x1                   	// #1
  43951c:	mov	x0, x26
  439520:	bl	402660 <fwrite_unlocked@plt>
  439524:	add	w19, w23, #0x1
  439528:	b	43953c <ferror@plt+0x3680c>
  43952c:	mov	w1, #0x20                  	// #32
  439530:	mov	x0, x21
  439534:	bl	4029a0 <__overflow@plt>
  439538:	add	w19, w19, #0x1
  43953c:	ldr	x0, [x20]
  439540:	mov	x1, x21
  439544:	ldr	x0, [x0, x25]
  439548:	bl	402bf0 <fputs_unlocked@plt>
  43954c:	add	w22, w22, #0x1
  439550:	ldr	w0, [x20, #8]
  439554:	cmp	w0, w22
  439558:	b.ls	4395a4 <ferror@plt+0x36874>  // b.plast
  43955c:	ubfiz	x25, x22, #3, #32
  439560:	ldr	x0, [x20]
  439564:	ldr	x0, [x0, w22, uxtw #3]
  439568:	bl	402680 <strlen@plt>
  43956c:	mov	x23, x0
  439570:	add	w19, w19, w0
  439574:	cbz	w22, 43953c <ferror@plt+0x3680c>
  439578:	cmp	w24, #0x0
  43957c:	ccmp	w24, w19, #0x2, ne  // ne = any
  439580:	b.cc	439510 <ferror@plt+0x367e0>  // b.lo, b.ul, b.last
  439584:	ldr	x0, [x21, #40]
  439588:	ldr	x1, [x21, #48]
  43958c:	cmp	x0, x1
  439590:	b.cs	43952c <ferror@plt+0x367fc>  // b.hs, b.nlast
  439594:	add	x1, x0, #0x1
  439598:	str	x1, [x21, #40]
  43959c:	strb	w27, [x0]
  4395a0:	b	439538 <ferror@plt+0x36808>
  4395a4:	ldr	x0, [x21, #40]
  4395a8:	ldr	x1, [x21, #48]
  4395ac:	cmp	x0, x1
  4395b0:	b.cs	4395e8 <ferror@plt+0x368b8>  // b.hs, b.nlast
  4395b4:	add	x1, x0, #0x1
  4395b8:	str	x1, [x21, #40]
  4395bc:	mov	w1, #0x3a                  	// #58
  4395c0:	strb	w1, [x0]
  4395c4:	add	w19, w19, #0x1
  4395c8:	ldr	w0, [x20, #24]
  4395cc:	cbz	w0, 439688 <ferror@plt+0x36958>
  4395d0:	mov	w23, #0x0                   	// #0
  4395d4:	mov	w26, #0x20                  	// #32
  4395d8:	adrp	x27, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4395dc:	add	x27, x27, #0x150
  4395e0:	mov	x28, #0x4                   	// #4
  4395e4:	b	439644 <ferror@plt+0x36914>
  4395e8:	mov	w1, #0x3a                  	// #58
  4395ec:	mov	x0, x21
  4395f0:	bl	4029a0 <__overflow@plt>
  4395f4:	b	4395c4 <ferror@plt+0x36894>
  4395f8:	mov	x3, x21
  4395fc:	mov	x2, x28
  439600:	mov	x1, #0x1                   	// #1
  439604:	mov	x0, x27
  439608:	bl	402660 <fwrite_unlocked@plt>
  43960c:	add	w19, w22, #0x1
  439610:	b	439624 <ferror@plt+0x368f4>
  439614:	add	x1, x0, #0x1
  439618:	str	x1, [x21, #40]
  43961c:	strb	w26, [x0]
  439620:	add	w19, w19, #0x1
  439624:	ldr	x0, [x20, #16]
  439628:	mov	x1, x21
  43962c:	ldr	x0, [x0, x25, lsl #3]
  439630:	bl	402bf0 <fputs_unlocked@plt>
  439634:	add	w23, w23, #0x1
  439638:	ldr	w0, [x20, #24]
  43963c:	cmp	w0, w23
  439640:	b.ls	439688 <ferror@plt+0x36958>  // b.plast
  439644:	mov	w25, w23
  439648:	ldr	x0, [x20, #16]
  43964c:	ldr	x0, [x0, x25, lsl #3]
  439650:	bl	402680 <strlen@plt>
  439654:	mov	x22, x0
  439658:	add	w19, w19, w0
  43965c:	cmp	w24, #0x0
  439660:	ccmp	w24, w19, #0x2, ne  // ne = any
  439664:	b.cc	4395f8 <ferror@plt+0x368c8>  // b.lo, b.ul, b.last
  439668:	ldr	x0, [x21, #40]
  43966c:	ldr	x1, [x21, #48]
  439670:	cmp	x0, x1
  439674:	b.cc	439614 <ferror@plt+0x368e4>  // b.lo, b.ul, b.last
  439678:	mov	w1, #0x20                  	// #32
  43967c:	mov	x0, x21
  439680:	bl	4029a0 <__overflow@plt>
  439684:	b	439620 <ferror@plt+0x368f0>
  439688:	ldr	x0, [x21, #40]
  43968c:	ldr	x1, [x21, #48]
  439690:	cmp	x0, x1
  439694:	b.cs	4396c4 <ferror@plt+0x36994>  // b.hs, b.nlast
  439698:	add	x1, x0, #0x1
  43969c:	str	x1, [x21, #40]
  4396a0:	mov	w1, #0xa                   	// #10
  4396a4:	strb	w1, [x0]
  4396a8:	ldp	x19, x20, [sp, #16]
  4396ac:	ldp	x21, x22, [sp, #32]
  4396b0:	ldp	x23, x24, [sp, #48]
  4396b4:	ldp	x25, x26, [sp, #64]
  4396b8:	ldp	x27, x28, [sp, #80]
  4396bc:	ldp	x29, x30, [sp], #96
  4396c0:	ret
  4396c4:	mov	w1, #0xa                   	// #10
  4396c8:	mov	x0, x21
  4396cc:	bl	4029a0 <__overflow@plt>
  4396d0:	b	4396a8 <ferror@plt+0x36978>
  4396d4:	stp	x29, x30, [sp, #-80]!
  4396d8:	mov	x29, sp
  4396dc:	stp	x21, x22, [sp, #32]
  4396e0:	mov	x21, x0
  4396e4:	ldr	w0, [x0, #24]
  4396e8:	cmp	w0, #0x1
  4396ec:	b.ls	439794 <ferror@plt+0x36a64>  // b.plast
  4396f0:	stp	x19, x20, [sp, #16]
  4396f4:	stp	x23, x24, [sp, #48]
  4396f8:	str	x25, [sp, #64]
  4396fc:	mov	x19, x1
  439700:	mov	w20, #0x1                   	// #1
  439704:	mov	w22, #0xa                   	// #10
  439708:	mov	w24, #0xa                   	// #10
  43970c:	mov	w23, #0x3a                  	// #58
  439710:	mov	w25, #0x3a                  	// #58
  439714:	ldr	x1, [x19, #40]
  439718:	ldr	x0, [x19, #48]
  43971c:	cmp	x1, x0
  439720:	b.cs	4397a0 <ferror@plt+0x36a70>  // b.hs, b.nlast
  439724:	add	x0, x1, #0x1
  439728:	str	x0, [x19, #40]
  43972c:	strb	w22, [x1]
  439730:	ldr	x0, [x21, #16]
  439734:	mov	x1, x19
  439738:	ldr	x0, [x0, w20, uxtw #3]
  43973c:	bl	402bf0 <fputs_unlocked@plt>
  439740:	ldr	x1, [x19, #40]
  439744:	ldr	x0, [x19, #48]
  439748:	cmp	x1, x0
  43974c:	b.cs	4397b0 <ferror@plt+0x36a80>  // b.hs, b.nlast
  439750:	add	x0, x1, #0x1
  439754:	str	x0, [x19, #40]
  439758:	strb	w23, [x1]
  43975c:	ldr	x1, [x19, #40]
  439760:	ldr	x0, [x19, #48]
  439764:	cmp	x1, x0
  439768:	b.cs	4397c0 <ferror@plt+0x36a90>  // b.hs, b.nlast
  43976c:	add	x0, x1, #0x1
  439770:	str	x0, [x19, #40]
  439774:	strb	w22, [x1]
  439778:	add	w20, w20, #0x1
  43977c:	ldr	w0, [x21, #24]
  439780:	cmp	w0, w20
  439784:	b.hi	439714 <ferror@plt+0x369e4>  // b.pmore
  439788:	ldp	x19, x20, [sp, #16]
  43978c:	ldp	x23, x24, [sp, #48]
  439790:	ldr	x25, [sp, #64]
  439794:	ldp	x21, x22, [sp, #32]
  439798:	ldp	x29, x30, [sp], #80
  43979c:	ret
  4397a0:	mov	w1, w24
  4397a4:	mov	x0, x19
  4397a8:	bl	4029a0 <__overflow@plt>
  4397ac:	b	439730 <ferror@plt+0x36a00>
  4397b0:	mov	w1, w25
  4397b4:	mov	x0, x19
  4397b8:	bl	4029a0 <__overflow@plt>
  4397bc:	b	43975c <ferror@plt+0x36a2c>
  4397c0:	mov	w1, w24
  4397c4:	mov	x0, x19
  4397c8:	bl	4029a0 <__overflow@plt>
  4397cc:	b	439778 <ferror@plt+0x36a48>
  4397d0:	stp	x29, x30, [sp, #-80]!
  4397d4:	mov	x29, sp
  4397d8:	stp	x19, x20, [sp, #16]
  4397dc:	stp	x21, x22, [sp, #32]
  4397e0:	mov	x20, x0
  4397e4:	mov	x22, x1
  4397e8:	mov	x3, x1
  4397ec:	mov	x2, #0x1                   	// #1
  4397f0:	mov	x1, #0x4                   	// #4
  4397f4:	add	x0, x0, #0x18
  4397f8:	bl	402660 <fwrite_unlocked@plt>
  4397fc:	cmp	x0, #0x1
  439800:	b.ne	4398a0 <ferror@plt+0x36b70>  // b.any
  439804:	ldr	w0, [x20, #24]
  439808:	cbz	w0, 4398a8 <ferror@plt+0x36b78>
  43980c:	stp	x23, x24, [sp, #48]
  439810:	mov	w19, #0x0                   	// #0
  439814:	mov	x23, #0x1                   	// #1
  439818:	mov	x24, #0x8                   	// #8
  43981c:	mov	w21, w19
  439820:	ldr	x0, [x20, #16]
  439824:	ldr	x0, [x0, x21, lsl #3]
  439828:	bl	402680 <strlen@plt>
  43982c:	str	x0, [sp, #72]
  439830:	mov	x3, x22
  439834:	mov	x2, x23
  439838:	mov	x1, x24
  43983c:	add	x0, sp, #0x48
  439840:	bl	402660 <fwrite_unlocked@plt>
  439844:	cmp	x0, #0x1
  439848:	b.ne	439888 <ferror@plt+0x36b58>  // b.any
  43984c:	ldr	x0, [x20, #16]
  439850:	mov	x3, x22
  439854:	mov	x2, x23
  439858:	ldr	x1, [sp, #72]
  43985c:	ldr	x0, [x0, x21, lsl #3]
  439860:	bl	402660 <fwrite_unlocked@plt>
  439864:	cmp	x0, #0x1
  439868:	b.ne	439888 <ferror@plt+0x36b58>  // b.any
  43986c:	add	w19, w19, #0x1
  439870:	ldr	w0, [x20, #24]
  439874:	cmp	w0, w19
  439878:	b.hi	43981c <ferror@plt+0x36aec>  // b.pmore
  43987c:	mov	w0, #0x0                   	// #0
  439880:	ldp	x23, x24, [sp, #48]
  439884:	b	439890 <ferror@plt+0x36b60>
  439888:	mov	w0, #0xffffffff            	// #-1
  43988c:	ldp	x23, x24, [sp, #48]
  439890:	ldp	x19, x20, [sp, #16]
  439894:	ldp	x21, x22, [sp, #32]
  439898:	ldp	x29, x30, [sp], #80
  43989c:	ret
  4398a0:	mov	w0, #0xffffffff            	// #-1
  4398a4:	b	439890 <ferror@plt+0x36b60>
  4398a8:	mov	w0, #0x0                   	// #0
  4398ac:	b	439890 <ferror@plt+0x36b60>
  4398b0:	stp	x29, x30, [sp, #-96]!
  4398b4:	mov	x29, sp
  4398b8:	stp	x21, x22, [sp, #32]
  4398bc:	stp	x23, x24, [sp, #48]
  4398c0:	stp	x25, x26, [sp, #64]
  4398c4:	mov	x26, x0
  4398c8:	mov	x21, x1
  4398cc:	mov	x23, x2
  4398d0:	mov	x3, x1
  4398d4:	mov	x2, #0x4                   	// #4
  4398d8:	mov	x1, #0x1                   	// #1
  4398dc:	add	x0, sp, #0x5c
  4398e0:	bl	4029d0 <fread_unlocked@plt>
  4398e4:	cmp	x0, #0x4
  4398e8:	b.ne	439a00 <ferror@plt+0x36cd0>  // b.any
  4398ec:	stp	x19, x20, [sp, #16]
  4398f0:	mov	x0, #0x200                 	// #512
  4398f4:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4398f8:	mov	x19, x0
  4398fc:	ldr	w0, [sp, #92]
  439900:	cbz	w0, 4399dc <ferror@plt+0x36cac>
  439904:	mov	x24, #0x200                 	// #512
  439908:	mov	w20, #0x0                   	// #0
  43990c:	mov	x25, #0x8                   	// #8
  439910:	mov	x22, #0x1                   	// #1
  439914:	b	439974 <ferror@plt+0x36c44>
  439918:	mov	x0, x19
  43991c:	bl	402a90 <free@plt>
  439920:	mov	w0, #0xffffffff            	// #-1
  439924:	ldp	x19, x20, [sp, #16]
  439928:	b	4399ec <ferror@plt+0x36cbc>
  43992c:	add	x24, x1, #0x80
  439930:	mov	x1, x24
  439934:	mov	x0, x19
  439938:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43993c:	mov	x19, x0
  439940:	b	4399a0 <ferror@plt+0x36c70>
  439944:	mov	x0, x19
  439948:	bl	402a90 <free@plt>
  43994c:	mov	w0, #0xffffffff            	// #-1
  439950:	ldp	x19, x20, [sp, #16]
  439954:	b	4399ec <ferror@plt+0x36cbc>
  439958:	mov	x1, x19
  43995c:	mov	x0, x26
  439960:	bl	439330 <ferror@plt+0x36600>
  439964:	add	w20, w20, #0x1
  439968:	ldr	w0, [sp, #92]
  43996c:	cmp	w0, w20
  439970:	b.ls	4399dc <ferror@plt+0x36cac>  // b.plast
  439974:	mov	x3, x21
  439978:	mov	x2, x25
  43997c:	mov	x1, x22
  439980:	add	x0, sp, #0x50
  439984:	bl	4029d0 <fread_unlocked@plt>
  439988:	cmp	x0, #0x8
  43998c:	b.ne	439918 <ferror@plt+0x36be8>  // b.any
  439990:	ldr	x1, [sp, #80]
  439994:	add	x0, x1, #0x1
  439998:	cmp	x0, x24
  43999c:	b.hi	43992c <ferror@plt+0x36bfc>  // b.pmore
  4399a0:	mov	x3, x21
  4399a4:	ldr	x2, [sp, #80]
  4399a8:	mov	x1, x22
  4399ac:	mov	x0, x19
  4399b0:	bl	4029d0 <fread_unlocked@plt>
  4399b4:	ldr	x3, [sp, #80]
  4399b8:	cmp	x0, x3
  4399bc:	b.ne	439944 <ferror@plt+0x36c14>  // b.any
  4399c0:	strb	wzr, [x19, x3]
  4399c4:	cbz	x23, 439964 <ferror@plt+0x36c34>
  4399c8:	mov	x1, x23
  4399cc:	mov	x0, x19
  4399d0:	bl	452d78 <ferror@plt+0x50048>
  4399d4:	cbz	w0, 439964 <ferror@plt+0x36c34>
  4399d8:	b	439958 <ferror@plt+0x36c28>
  4399dc:	mov	x0, x19
  4399e0:	bl	402a90 <free@plt>
  4399e4:	mov	w0, #0x0                   	// #0
  4399e8:	ldp	x19, x20, [sp, #16]
  4399ec:	ldp	x21, x22, [sp, #32]
  4399f0:	ldp	x23, x24, [sp, #48]
  4399f4:	ldp	x25, x26, [sp, #64]
  4399f8:	ldp	x29, x30, [sp], #96
  4399fc:	ret
  439a00:	mov	w0, #0xffffffff            	// #-1
  439a04:	b	4399ec <ferror@plt+0x36cbc>
  439a08:	stp	x29, x30, [sp, #-48]!
  439a0c:	mov	x29, sp
  439a10:	stp	x19, x20, [sp, #16]
  439a14:	str	x21, [sp, #32]
  439a18:	mov	w21, #0x1                   	// #1
  439a1c:	lsl	w20, w21, w0
  439a20:	mov	x1, #0x90                  	// #144
  439a24:	mov	x0, #0x1                   	// #1
  439a28:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  439a2c:	mov	x19, x0
  439a30:	adrp	x4, 402000 <_ZGTtnam@plt-0x610>
  439a34:	add	x4, x4, #0xa90
  439a38:	adrp	x3, 454000 <ferror@plt+0x512d0>
  439a3c:	add	x3, x3, #0xd38
  439a40:	mov	x2, #0x0                   	// #0
  439a44:	mov	x1, #0x0                   	// #0
  439a48:	bl	454174 <_obstack_begin@@Base>
  439a4c:	str	xzr, [x19, #48]
  439a50:	mov	x1, #0x8                   	// #8
  439a54:	mov	w0, w20
  439a58:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  439a5c:	str	x0, [x19, #88]
  439a60:	strb	w21, [x19, #136]
  439a64:	str	w20, [x19, #112]
  439a68:	mov	x0, x19
  439a6c:	ldp	x19, x20, [sp, #16]
  439a70:	ldr	x21, [sp, #32]
  439a74:	ldp	x29, x30, [sp], #48
  439a78:	ret
  439a7c:	stp	x29, x30, [sp, #-32]!
  439a80:	mov	x29, sp
  439a84:	str	x19, [sp, #16]
  439a88:	mov	x19, x0
  439a8c:	mov	x1, #0x0                   	// #0
  439a90:	bl	454320 <_obstack_free@@Base>
  439a94:	ldrb	w0, [x19, #136]
  439a98:	cbnz	w0, 439ab0 <ferror@plt+0x36d80>
  439a9c:	mov	x0, x19
  439aa0:	bl	402a90 <free@plt>
  439aa4:	ldr	x19, [sp, #16]
  439aa8:	ldp	x29, x30, [sp], #32
  439aac:	ret
  439ab0:	ldr	x0, [x19, #88]
  439ab4:	bl	402a90 <free@plt>
  439ab8:	b	439a9c <ferror@plt+0x36d6c>
  439abc:	stp	x29, x30, [sp, #-112]!
  439ac0:	mov	x29, sp
  439ac4:	stp	x19, x20, [sp, #16]
  439ac8:	stp	x21, x22, [sp, #32]
  439acc:	stp	x23, x24, [sp, #48]
  439ad0:	stp	x25, x26, [sp, #64]
  439ad4:	stp	x27, x28, [sp, #80]
  439ad8:	mov	x20, x0
  439adc:	str	x1, [sp, #96]
  439ae0:	mov	x27, x2
  439ae4:	mov	w23, w3
  439ae8:	str	w4, [sp, #108]
  439aec:	ldr	w28, [x0, #112]
  439af0:	sub	w21, w28, #0x1
  439af4:	and	w22, w21, w3
  439af8:	ldr	w0, [x0, #128]
  439afc:	add	w0, w0, #0x1
  439b00:	str	w0, [x20, #128]
  439b04:	ldr	x25, [x20, #88]
  439b08:	and	w0, w21, w3
  439b0c:	ldr	x19, [x25, x0, lsl #3]
  439b10:	cbz	x19, 439dbc <ferror@plt+0x3708c>
  439b14:	cmn	x19, #0x1
  439b18:	b.eq	439c08 <ferror@plt+0x36ed8>  // b.none
  439b1c:	ldr	w0, [x19, #12]
  439b20:	mov	w26, w28
  439b24:	cmp	w0, w3
  439b28:	b.eq	439bec <ferror@plt+0x36ebc>  // b.none
  439b2c:	add	w24, w23, w23, lsl #4
  439b30:	and	w24, w24, w21
  439b34:	orr	w24, w24, #0x1
  439b38:	ldr	w0, [x20, #132]
  439b3c:	add	w0, w0, #0x1
  439b40:	str	w0, [x20, #132]
  439b44:	add	w0, w22, w24
  439b48:	and	w22, w21, w0
  439b4c:	and	w0, w21, w0
  439b50:	ldr	x19, [x25, x0, lsl #3]
  439b54:	cbnz	x19, 439c38 <ferror@plt+0x36f08>
  439b58:	ldr	w0, [sp, #108]
  439b5c:	cbz	w0, 439db4 <ferror@plt+0x37084>
  439b60:	cmp	w26, w28
  439b64:	csel	w26, w26, w22, ne  // ne = any
  439b68:	ldr	x1, [x20, #96]
  439b6c:	mov	x0, x20
  439b70:	blr	x1
  439b74:	mov	x19, x0
  439b78:	ldr	x0, [x20, #88]
  439b7c:	str	x19, [x0, w26, uxtw #3]
  439b80:	str	w27, [x19, #8]
  439b84:	str	w23, [x19, #12]
  439b88:	ldr	x1, [x20, #104]
  439b8c:	cbz	x1, 439c70 <ferror@plt+0x36f40>
  439b90:	add	x0, x27, #0x1
  439b94:	blr	x1
  439b98:	mov	x21, x0
  439b9c:	mov	x2, x27
  439ba0:	ldr	x1, [sp, #96]
  439ba4:	bl	402620 <memcpy@plt>
  439ba8:	strb	wzr, [x21, x27]
  439bac:	str	x21, [x19]
  439bb0:	ldr	w1, [x20, #116]
  439bb4:	add	w1, w1, #0x1
  439bb8:	str	w1, [x20, #116]
  439bbc:	ldr	w0, [x20, #112]
  439bc0:	add	w2, w0, w0, lsl #1
  439bc4:	cmp	w2, w1, lsl #2
  439bc8:	b.ls	439d0c <ferror@plt+0x36fdc>  // b.plast
  439bcc:	mov	x0, x19
  439bd0:	ldp	x19, x20, [sp, #16]
  439bd4:	ldp	x21, x22, [sp, #32]
  439bd8:	ldp	x23, x24, [sp, #48]
  439bdc:	ldp	x25, x26, [sp, #64]
  439be0:	ldp	x27, x28, [sp, #80]
  439be4:	ldp	x29, x30, [sp], #112
  439be8:	ret
  439bec:	ldr	w0, [x19, #8]
  439bf0:	cmp	w0, w2
  439bf4:	b.ne	439b2c <ferror@plt+0x36dfc>  // b.any
  439bf8:	ldr	x0, [x19]
  439bfc:	bl	4029e0 <memcmp@plt>
  439c00:	cbnz	w0, 439b2c <ferror@plt+0x36dfc>
  439c04:	b	439bcc <ferror@plt+0x36e9c>
  439c08:	mov	w26, w22
  439c0c:	b	439b2c <ferror@plt+0x36dfc>
  439c10:	cmp	w28, w26
  439c14:	csel	w26, w26, w22, eq  // eq = none
  439c18:	ldr	w0, [x20, #132]
  439c1c:	add	w0, w0, #0x1
  439c20:	str	w0, [x20, #132]
  439c24:	add	w0, w24, w22
  439c28:	and	w22, w21, w0
  439c2c:	and	w0, w21, w0
  439c30:	ldr	x19, [x25, x0, lsl #3]
  439c34:	cbz	x19, 439b58 <ferror@plt+0x36e28>
  439c38:	cmn	x19, #0x1
  439c3c:	b.eq	439c10 <ferror@plt+0x36ee0>  // b.none
  439c40:	ldr	w0, [x19, #12]
  439c44:	cmp	w0, w23
  439c48:	b.ne	439c18 <ferror@plt+0x36ee8>  // b.any
  439c4c:	ldr	w0, [x19, #8]
  439c50:	cmp	w0, w27
  439c54:	b.ne	439c18 <ferror@plt+0x36ee8>  // b.any
  439c58:	mov	x2, x27
  439c5c:	ldr	x1, [sp, #96]
  439c60:	ldr	x0, [x19]
  439c64:	bl	4029e0 <memcmp@plt>
  439c68:	cbnz	w0, 439c18 <ferror@plt+0x36ee8>
  439c6c:	b	439bcc <ferror@plt+0x36e9c>
  439c70:	add	x1, x27, #0x1
  439c74:	ldr	x0, [x20, #32]
  439c78:	ldr	x2, [x20, #24]
  439c7c:	sub	x0, x0, x2
  439c80:	cmp	x1, x0
  439c84:	b.hi	439cf0 <ferror@plt+0x36fc0>  // b.pmore
  439c88:	mov	x2, x27
  439c8c:	ldr	x1, [sp, #96]
  439c90:	ldr	x0, [x20, #24]
  439c94:	bl	402620 <memcpy@plt>
  439c98:	ldr	x1, [x20, #24]
  439c9c:	add	x0, x1, x27
  439ca0:	add	x0, x0, #0x1
  439ca4:	str	x0, [x20, #24]
  439ca8:	strb	wzr, [x1, x27]
  439cac:	ldr	x2, [x20, #16]
  439cb0:	ldr	x1, [x20, #24]
  439cb4:	cmp	x1, x2
  439cb8:	b.eq	439cfc <ferror@plt+0x36fcc>  // b.none
  439cbc:	ldr	x0, [x20, #48]
  439cc0:	add	x1, x1, x0
  439cc4:	bic	x0, x1, x0
  439cc8:	ldr	x1, [x20, #8]
  439ccc:	ldr	x3, [x20, #32]
  439cd0:	sub	x4, x0, x1
  439cd4:	sub	x1, x3, x1
  439cd8:	cmp	x4, x1
  439cdc:	csel	x0, x0, x3, ls  // ls = plast
  439ce0:	str	x0, [x20, #24]
  439ce4:	str	x0, [x20, #16]
  439ce8:	str	x2, [x19]
  439cec:	b	439bb0 <ferror@plt+0x36e80>
  439cf0:	mov	x0, x20
  439cf4:	bl	4541c8 <_obstack_newchunk@@Base>
  439cf8:	b	439c88 <ferror@plt+0x36f58>
  439cfc:	ldrb	w0, [x20, #80]
  439d00:	orr	w0, w0, #0x2
  439d04:	strb	w0, [x20, #80]
  439d08:	b	439cbc <ferror@plt+0x36f8c>
  439d0c:	lsl	w22, w0, #1
  439d10:	mov	x1, #0x8                   	// #8
  439d14:	lsl	w0, w0, #1
  439d18:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  439d1c:	mov	x21, x0
  439d20:	sub	w2, w22, #0x1
  439d24:	ldr	x0, [x20, #88]
  439d28:	ldr	w7, [x20, #112]
  439d2c:	add	x7, x0, x7, lsl #3
  439d30:	mov	x5, x0
  439d34:	b	439d48 <ferror@plt+0x37018>
  439d38:	str	x6, [x21, w3, uxtw #3]
  439d3c:	add	x5, x5, #0x8
  439d40:	cmp	x7, x5
  439d44:	b.ls	439d90 <ferror@plt+0x37060>  // b.plast
  439d48:	ldr	x6, [x5]
  439d4c:	sub	x1, x6, #0x1
  439d50:	cmn	x1, #0x3
  439d54:	b.hi	439d3c <ferror@plt+0x3700c>  // b.pmore
  439d58:	ldr	w1, [x6, #12]
  439d5c:	and	w3, w2, w1
  439d60:	and	w4, w2, w1
  439d64:	ldr	x4, [x21, x4, lsl #3]
  439d68:	cbz	x4, 439d38 <ferror@plt+0x37008>
  439d6c:	add	w1, w1, w1, lsl #4
  439d70:	and	w4, w1, w2
  439d74:	orr	w4, w4, #0x1
  439d78:	add	w1, w4, w3
  439d7c:	and	w3, w2, w1
  439d80:	and	w1, w2, w1
  439d84:	ldr	x1, [x21, x1, lsl #3]
  439d88:	cbnz	x1, 439d78 <ferror@plt+0x37048>
  439d8c:	b	439d38 <ferror@plt+0x37008>
  439d90:	ldrb	w1, [x20, #136]
  439d94:	cbnz	w1, 439dac <ferror@plt+0x3707c>
  439d98:	mov	w0, #0x1                   	// #1
  439d9c:	strb	w0, [x20, #136]
  439da0:	str	x21, [x20, #88]
  439da4:	str	w22, [x20, #112]
  439da8:	b	439bcc <ferror@plt+0x36e9c>
  439dac:	bl	402a90 <free@plt>
  439db0:	b	439d98 <ferror@plt+0x37068>
  439db4:	mov	x19, #0x0                   	// #0
  439db8:	b	439bcc <ferror@plt+0x36e9c>
  439dbc:	ldr	w0, [sp, #108]
  439dc0:	cbz	w0, 439bcc <ferror@plt+0x36e9c>
  439dc4:	mov	w26, w22
  439dc8:	b	439b68 <ferror@plt+0x36e38>
  439dcc:	stp	x29, x30, [sp, #-16]!
  439dd0:	mov	x29, sp
  439dd4:	mov	w4, w3
  439dd8:	cbz	x2, 439e14 <ferror@plt+0x370e4>
  439ddc:	add	x8, x1, x2
  439de0:	mov	x6, x1
  439de4:	mov	w5, #0x0                   	// #0
  439de8:	mov	w7, #0x43                  	// #67
  439dec:	mul	w5, w5, w7
  439df0:	sub	w5, w5, #0x71
  439df4:	ldrb	w3, [x6], #1
  439df8:	add	w5, w3, w5
  439dfc:	cmp	x8, x6
  439e00:	b.ne	439dec <ferror@plt+0x370bc>  // b.any
  439e04:	add	w3, w5, w2
  439e08:	bl	439abc <ferror@plt+0x36d8c>
  439e0c:	ldp	x29, x30, [sp], #16
  439e10:	ret
  439e14:	mov	w5, #0x0                   	// #0
  439e18:	b	439e04 <ferror@plt+0x370d4>
  439e1c:	stp	x29, x30, [sp, #-64]!
  439e20:	mov	x29, sp
  439e24:	stp	x19, x20, [sp, #16]
  439e28:	stp	x21, x22, [sp, #32]
  439e2c:	str	x23, [sp, #48]
  439e30:	mov	x21, x0
  439e34:	mov	x23, x1
  439e38:	mov	x22, x2
  439e3c:	ldr	x19, [x0, #88]
  439e40:	ldr	w20, [x0, #112]
  439e44:	add	x20, x19, x20, lsl #3
  439e48:	b	439e58 <ferror@plt+0x37128>
  439e4c:	add	x19, x19, #0x8
  439e50:	cmp	x20, x19
  439e54:	b.ls	439e78 <ferror@plt+0x37148>  // b.plast
  439e58:	ldr	x1, [x19]
  439e5c:	sub	x3, x1, #0x1
  439e60:	cmn	x3, #0x3
  439e64:	b.hi	439e4c <ferror@plt+0x3711c>  // b.pmore
  439e68:	mov	x2, x22
  439e6c:	ldr	x0, [x21, #120]
  439e70:	blr	x23
  439e74:	cbnz	w0, 439e4c <ferror@plt+0x3711c>
  439e78:	ldp	x19, x20, [sp, #16]
  439e7c:	ldp	x21, x22, [sp, #32]
  439e80:	ldr	x23, [sp, #48]
  439e84:	ldp	x29, x30, [sp], #64
  439e88:	ret
  439e8c:	stp	x29, x30, [sp, #-64]!
  439e90:	mov	x29, sp
  439e94:	stp	x19, x20, [sp, #16]
  439e98:	stp	x21, x22, [sp, #32]
  439e9c:	stp	x23, x24, [sp, #48]
  439ea0:	mov	x21, x0
  439ea4:	mov	x23, x1
  439ea8:	mov	x22, x2
  439eac:	ldr	x19, [x0, #88]
  439eb0:	ldr	w20, [x0, #112]
  439eb4:	add	x20, x19, x20, lsl #3
  439eb8:	mov	x24, #0xffffffffffffffff    	// #-1
  439ebc:	b	439ecc <ferror@plt+0x3719c>
  439ec0:	add	x19, x19, #0x8
  439ec4:	cmp	x20, x19
  439ec8:	b.ls	439ef4 <ferror@plt+0x371c4>  // b.plast
  439ecc:	ldr	x1, [x19]
  439ed0:	sub	x3, x1, #0x1
  439ed4:	cmn	x3, #0x3
  439ed8:	b.hi	439ec0 <ferror@plt+0x37190>  // b.pmore
  439edc:	mov	x2, x22
  439ee0:	ldr	x0, [x21, #120]
  439ee4:	blr	x23
  439ee8:	cbz	w0, 439ec0 <ferror@plt+0x37190>
  439eec:	str	x24, [x19]
  439ef0:	b	439ec0 <ferror@plt+0x37190>
  439ef4:	ldp	x19, x20, [sp, #16]
  439ef8:	ldp	x21, x22, [sp, #32]
  439efc:	ldp	x23, x24, [sp, #48]
  439f00:	ldp	x29, x30, [sp], #64
  439f04:	ret
  439f08:	stp	x29, x30, [sp, #-64]!
  439f0c:	mov	x29, sp
  439f10:	stp	x19, x20, [sp, #16]
  439f14:	stp	x21, x22, [sp, #32]
  439f18:	str	x23, [sp, #48]
  439f1c:	mov	x19, x0
  439f20:	mov	x22, x1
  439f24:	mov	w21, w2
  439f28:	mov	w20, w3
  439f2c:	and	w23, w4, #0xff
  439f30:	ldrb	w0, [x0, #136]
  439f34:	cbnz	w0, 439f5c <ferror@plt+0x3722c>
  439f38:	str	x22, [x19, #88]
  439f3c:	str	w21, [x19, #112]
  439f40:	str	w20, [x19, #116]
  439f44:	strb	w23, [x19, #136]
  439f48:	ldp	x19, x20, [sp, #16]
  439f4c:	ldp	x21, x22, [sp, #32]
  439f50:	ldr	x23, [sp, #48]
  439f54:	ldp	x29, x30, [sp], #64
  439f58:	ret
  439f5c:	ldr	x0, [x19, #88]
  439f60:	bl	402a90 <free@plt>
  439f64:	b	439f38 <ferror@plt+0x37208>
  439f68:	stp	x29, x30, [sp, #-112]!
  439f6c:	mov	x29, sp
  439f70:	stp	x19, x20, [sp, #16]
  439f74:	stp	x21, x22, [sp, #32]
  439f78:	stp	x23, x24, [sp, #48]
  439f7c:	stp	x25, x26, [sp, #64]
  439f80:	stp	d8, d9, [sp, #80]
  439f84:	str	d10, [sp, #96]
  439f88:	mov	x22, x0
  439f8c:	ldr	x1, [x0, #88]
  439f90:	ldr	w23, [x0, #112]
  439f94:	lsl	x23, x23, #3
  439f98:	add	x0, x1, x23
  439f9c:	movi	d8, #0x0
  439fa0:	mov	x24, #0x0                   	// #0
  439fa4:	mov	x20, #0x0                   	// #0
  439fa8:	mov	x19, #0x0                   	// #0
  439fac:	mov	x21, #0x0                   	// #0
  439fb0:	b	439fc4 <ferror@plt+0x37294>
  439fb4:	add	x24, x24, #0x1
  439fb8:	add	x1, x1, #0x8
  439fbc:	cmp	x0, x1
  439fc0:	b.ls	439ffc <ferror@plt+0x372cc>  // b.plast
  439fc4:	ldr	x2, [x1]
  439fc8:	cmn	x2, #0x1
  439fcc:	b.eq	439fb4 <ferror@plt+0x37284>  // b.none
  439fd0:	cbz	x2, 439fb8 <ferror@plt+0x37288>
  439fd4:	ldr	w2, [x2, #8]
  439fd8:	mov	w3, w2
  439fdc:	add	x19, x19, x3
  439fe0:	ucvtf	d0, w2
  439fe4:	fmul	d0, d0, d0
  439fe8:	fadd	d8, d8, d0
  439fec:	cmp	x20, x3
  439ff0:	csel	x20, x20, x3, cs  // cs = hs, nlast
  439ff4:	add	x21, x21, #0x1
  439ff8:	b	439fb8 <ferror@plt+0x37288>
  439ffc:	ldr	w26, [x22, #116]
  43a000:	adrp	x25, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43a004:	mov	w3, w26
  43a008:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a00c:	add	x2, x2, #0x158
  43a010:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a014:	add	x1, x1, #0x168
  43a018:	ldr	x0, [x25, #1424]
  43a01c:	bl	402ce0 <fprintf@plt>
  43a020:	ucvtf	d10, w26
  43a024:	ucvtf	d0, x21
  43a028:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  43a02c:	fmov	d1, x0
  43a030:	fmul	d0, d0, d1
  43a034:	fdiv	d0, d0, d10
  43a038:	mov	x3, x21
  43a03c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a040:	add	x2, x2, #0x180
  43a044:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a048:	add	x1, x1, #0x190
  43a04c:	ldr	x0, [x25, #1424]
  43a050:	bl	402ce0 <fprintf@plt>
  43a054:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a058:	add	x21, x21, #0x1b0
  43a05c:	ldr	w3, [x22, #112]
  43a060:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a064:	add	x2, x2, #0x1a8
  43a068:	mov	x1, x21
  43a06c:	ldr	x0, [x25, #1424]
  43a070:	bl	402ce0 <fprintf@plt>
  43a074:	mov	x3, x24
  43a078:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a07c:	add	x2, x2, #0x1c0
  43a080:	mov	x1, x21
  43a084:	ldr	x0, [x25, #1424]
  43a088:	bl	402ce0 <fprintf@plt>
  43a08c:	ldr	x0, [x22, #104]
  43a090:	cbz	x0, 43a228 <ferror@plt+0x374f8>
  43a094:	ldr	x0, [x25, #1424]
  43a098:	mov	x1, #0x27ff                	// #10239
  43a09c:	cmp	x19, x1
  43a0a0:	b.ls	43a0c8 <ferror@plt+0x37398>  // b.plast
  43a0a4:	mov	w1, #0x9fffff              	// #10485759
  43a0a8:	cmp	x19, x1
  43a0ac:	b.hi	43a0bc <ferror@plt+0x3738c>  // b.pmore
  43a0b0:	lsr	x3, x19, #10
  43a0b4:	mov	w4, #0x6b                  	// #107
  43a0b8:	b	43a0d0 <ferror@plt+0x373a0>
  43a0bc:	lsr	x3, x19, #20
  43a0c0:	mov	w4, #0x4d                  	// #77
  43a0c4:	b	43a0d0 <ferror@plt+0x373a0>
  43a0c8:	mov	x3, x19
  43a0cc:	mov	w4, #0x20                  	// #32
  43a0d0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a0d4:	add	x2, x2, #0x1d0
  43a0d8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a0dc:	add	x1, x1, #0x1e0
  43a0e0:	bl	402ce0 <fprintf@plt>
  43a0e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43a0e8:	ldr	x0, [x0, #1424]
  43a0ec:	mov	w4, #0x20                  	// #32
  43a0f0:	mov	x1, #0x27ff                	// #10239
  43a0f4:	cmp	x23, x1
  43a0f8:	b.ls	43a110 <ferror@plt+0x373e0>  // b.plast
  43a0fc:	mov	w1, #0x9fffff              	// #10485759
  43a100:	cmp	x23, x1
  43a104:	b.hi	43a2bc <ferror@plt+0x3758c>  // b.pmore
  43a108:	lsr	x23, x23, #10
  43a10c:	mov	w4, #0x6b                  	// #107
  43a110:	mov	x3, x23
  43a114:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a118:	add	x2, x2, #0x220
  43a11c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a120:	add	x1, x1, #0x1e0
  43a124:	bl	402ce0 <fprintf@plt>
  43a128:	ucvtf	d9, x19
  43a12c:	fdiv	d9, d9, d10
  43a130:	ldr	w0, [x22, #132]
  43a134:	ucvtf	d1, w0
  43a138:	ldr	w0, [x22, #128]
  43a13c:	ucvtf	d0, w0
  43a140:	adrp	x19, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a144:	add	x19, x19, #0x240
  43a148:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43a14c:	fdiv	d0, d1, d0
  43a150:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a154:	add	x2, x2, #0x230
  43a158:	mov	x1, x19
  43a15c:	ldr	x0, [x21, #1424]
  43a160:	bl	402ce0 <fprintf@plt>
  43a164:	ldr	w0, [x22, #128]
  43a168:	ucvtf	d0, w0
  43a16c:	fdiv	d0, d10, d0
  43a170:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a174:	add	x2, x2, #0x250
  43a178:	mov	x1, x19
  43a17c:	ldr	x0, [x21, #1424]
  43a180:	bl	402ce0 <fprintf@plt>
  43a184:	ldr	x0, [x21, #1424]
  43a188:	fdiv	d8, d8, d10
  43a18c:	fmul	d0, d9, d9
  43a190:	fsub	d8, d8, d0
  43a194:	fcmpe	d8, #0.0
  43a198:	b.mi	43a2c8 <ferror@plt+0x37598>  // b.first
  43a19c:	movi	d1, #0x0
  43a1a0:	fcmp	d8, d1
  43a1a4:	b.eq	43a1d0 <ferror@plt+0x374a0>  // b.none
  43a1a8:	fmov	d1, d8
  43a1ac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a1b0:	ldr	d3, [x1, #712]
  43a1b4:	fmul	d0, d1, d1
  43a1b8:	fsub	d0, d0, d8
  43a1bc:	fadd	d2, d1, d1
  43a1c0:	fdiv	d0, d0, d2
  43a1c4:	fsub	d1, d1, d0
  43a1c8:	fcmpe	d0, d3
  43a1cc:	b.gt	43a1b4 <ferror@plt+0x37484>
  43a1d0:	fmov	d0, d9
  43a1d4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a1d8:	add	x2, x2, #0x288
  43a1dc:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a1e0:	add	x1, x1, #0x298
  43a1e4:	bl	402ce0 <fprintf@plt>
  43a1e8:	mov	x3, x20
  43a1ec:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a1f0:	add	x2, x2, #0x2b8
  43a1f4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a1f8:	add	x1, x1, #0x1b0
  43a1fc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43a200:	ldr	x0, [x0, #1424]
  43a204:	bl	402ce0 <fprintf@plt>
  43a208:	ldp	x19, x20, [sp, #16]
  43a20c:	ldp	x21, x22, [sp, #32]
  43a210:	ldp	x23, x24, [sp, #48]
  43a214:	ldp	x25, x26, [sp, #64]
  43a218:	ldp	d8, d9, [sp, #80]
  43a21c:	ldr	d10, [sp, #96]
  43a220:	ldp	x29, x30, [sp], #112
  43a224:	ret
  43a228:	mov	x0, x22
  43a22c:	bl	4543a0 <_obstack_memory_used@@Base>
  43a230:	sub	x5, x0, x19
  43a234:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43a238:	ldr	x0, [x0, #1424]
  43a23c:	mov	x1, #0x27ff                	// #10239
  43a240:	cmp	x19, x1
  43a244:	b.ls	43a26c <ferror@plt+0x3753c>  // b.plast
  43a248:	mov	w1, #0x9fffff              	// #10485759
  43a24c:	cmp	x19, x1
  43a250:	b.hi	43a260 <ferror@plt+0x37530>  // b.pmore
  43a254:	lsr	x3, x19, #10
  43a258:	mov	w4, #0x6b                  	// #107
  43a25c:	b	43a274 <ferror@plt+0x37544>
  43a260:	lsr	x3, x19, #20
  43a264:	mov	w4, #0x4d                  	// #77
  43a268:	b	43a274 <ferror@plt+0x37544>
  43a26c:	mov	x3, x19
  43a270:	mov	w4, #0x20                  	// #32
  43a274:	mov	w6, #0x20                  	// #32
  43a278:	mov	x1, #0x27ff                	// #10239
  43a27c:	cmp	x5, x1
  43a280:	b.ls	43a298 <ferror@plt+0x37568>  // b.plast
  43a284:	mov	w1, #0x9fffff              	// #10485759
  43a288:	cmp	x5, x1
  43a28c:	b.hi	43a2b0 <ferror@plt+0x37580>  // b.pmore
  43a290:	lsr	x5, x5, #10
  43a294:	mov	w6, #0x6b                  	// #107
  43a298:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a29c:	add	x2, x2, #0x1f0
  43a2a0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a2a4:	add	x1, x1, #0x200
  43a2a8:	bl	402ce0 <fprintf@plt>
  43a2ac:	b	43a0e4 <ferror@plt+0x373b4>
  43a2b0:	lsr	x5, x5, #20
  43a2b4:	mov	w6, #0x4d                  	// #77
  43a2b8:	b	43a298 <ferror@plt+0x37568>
  43a2bc:	lsr	x23, x23, #20
  43a2c0:	mov	w4, #0x4d                  	// #77
  43a2c4:	b	43a110 <ferror@plt+0x373e0>
  43a2c8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a2cc:	add	x2, x2, #0x260
  43a2d0:	mov	w1, #0x165                 	// #357
  43a2d4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a2d8:	add	x0, x0, #0x270
  43a2dc:	bl	4102b4 <ferror@plt+0xd584>
  43a2e0:	ldr	w2, [x0, #40]
  43a2e4:	add	w2, w2, #0x1
  43a2e8:	str	w2, [x0, #40]
  43a2ec:	ldr	w3, [x0, #36]
  43a2f0:	cmp	w2, w3
  43a2f4:	b.hi	43a300 <ferror@plt+0x375d0>  // b.pmore
  43a2f8:	ldr	x0, [x0, #8]
  43a2fc:	str	x1, [x0, w2, uxtw #3]
  43a300:	ret
  43a304:	ldrb	w6, [x3]
  43a308:	cbz	x2, 43a3a0 <ferror@plt+0x37670>
  43a30c:	add	x5, x0, #0x1
  43a310:	adrp	x7, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43a314:	add	x7, x7, #0x28
  43a318:	mov	w11, #0x20                  	// #32
  43a31c:	mov	w9, #0x27                  	// #39
  43a320:	mov	w10, #0x0                   	// #0
  43a324:	b	43a370 <ferror@plt+0x37640>
  43a328:	add	x1, x1, #0x1
  43a32c:	subs	x2, x2, #0x1
  43a330:	b.eq	43a344 <ferror@plt+0x37614>  // b.none
  43a334:	ldrb	w4, [x1]
  43a338:	ldrh	w4, [x7, x4, lsl #1]
  43a33c:	tst	w4, #0xc00
  43a340:	b.ne	43a328 <ferror@plt+0x375f8>  // b.any
  43a344:	mov	x8, x5
  43a348:	sturb	w11, [x5, #-1]
  43a34c:	mov	w6, #0x0                   	// #0
  43a350:	b	43a368 <ferror@plt+0x37638>
  43a354:	mov	w6, w4
  43a358:	add	x1, x1, #0x1
  43a35c:	mov	x8, x5
  43a360:	sturb	w4, [x5, #-1]
  43a364:	sub	x2, x2, #0x1
  43a368:	add	x5, x5, #0x1
  43a36c:	cbz	x2, 43a3a4 <ferror@plt+0x37674>
  43a370:	ldrb	w4, [x1]
  43a374:	ldrh	w8, [x7, w4, sxtw #1]
  43a378:	tst	w8, #0xc00
  43a37c:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  43a380:	b.eq	43a328 <ferror@plt+0x375f8>  // b.none
  43a384:	cmp	w4, #0x22
  43a388:	ccmp	w4, w9, #0x4, ne  // ne = any
  43a38c:	b.ne	43a358 <ferror@plt+0x37628>  // b.any
  43a390:	cbz	w6, 43a354 <ferror@plt+0x37624>
  43a394:	cmp	w4, w6
  43a398:	csel	w6, w6, w10, ne  // ne = any
  43a39c:	b	43a358 <ferror@plt+0x37628>
  43a3a0:	mov	x8, x0
  43a3a4:	strb	w6, [x3]
  43a3a8:	sub	x0, x8, x0
  43a3ac:	ret
  43a3b0:	stp	x29, x30, [sp, #-64]!
  43a3b4:	mov	x29, sp
  43a3b8:	stp	x19, x20, [sp, #16]
  43a3bc:	stp	x21, x22, [sp, #32]
  43a3c0:	stp	x23, x24, [sp, #48]
  43a3c4:	mov	x19, x0
  43a3c8:	mov	x20, x1
  43a3cc:	mov	w21, w2
  43a3d0:	ldr	x0, [x0, #40]
  43a3d4:	ldr	w23, [x0, #60]
  43a3d8:	ldr	x22, [x19]
  43a3dc:	str	x1, [x22]
  43a3e0:	ldr	x0, [x19, #136]
  43a3e4:	ldr	x0, [x0, #8]
  43a3e8:	cbz	x0, 43a460 <ferror@plt+0x37730>
  43a3ec:	ldr	x2, [x19]
  43a3f0:	ldr	x0, [x2]
  43a3f4:	ldrb	w1, [x0, #1]
  43a3f8:	cmp	w1, #0x2f
  43a3fc:	cinc	x0, x0, eq  // eq = none
  43a400:	add	x0, x0, #0x1
  43a404:	b	43a414 <ferror@plt+0x376e4>
  43a408:	ldurb	w1, [x0, #-2]
  43a40c:	cmp	w1, #0x2a
  43a410:	b.eq	43a454 <ferror@plt+0x37724>  // b.none
  43a414:	mov	x3, x0
  43a418:	ldrb	w1, [x0], #1
  43a41c:	cmp	w1, #0x2f
  43a420:	b.eq	43a408 <ferror@plt+0x376d8>  // b.none
  43a424:	cmp	w1, #0xa
  43a428:	b.ne	43a414 <ferror@plt+0x376e4>  // b.any
  43a42c:	str	x3, [x2]
  43a430:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x24c60>
  43a434:	add	x4, x4, #0x988
  43a438:	mov	w3, #0x0                   	// #0
  43a43c:	mov	w2, w23
  43a440:	mov	w1, #0x3                   	// #3
  43a444:	mov	x0, x19
  43a448:	bl	426bfc <ferror@plt+0x23ecc>
  43a44c:	mov	w24, #0x1                   	// #1
  43a450:	b	43a470 <ferror@plt+0x37740>
  43a454:	str	x0, [x2]
  43a458:	mov	w24, #0x0                   	// #0
  43a45c:	b	43a470 <ferror@plt+0x37740>
  43a460:	mov	x0, x19
  43a464:	bl	42e14c <ferror@plt+0x2b41c>
  43a468:	ands	w24, w0, #0xff
  43a46c:	b.ne	43a430 <ferror@plt+0x37700>  // b.any
  43a470:	ldrb	w1, [x19, #16]
  43a474:	cbz	w1, 43a4b8 <ferror@plt+0x37788>
  43a478:	cbz	w21, 43a494 <ferror@plt+0x37764>
  43a47c:	ldrb	w0, [x19, #1124]
  43a480:	cbz	w0, 43a4d0 <ferror@plt+0x377a0>
  43a484:	ldr	x0, [x19, #1328]
  43a488:	sub	x0, x0, #0x1
  43a48c:	str	x0, [x19, #1328]
  43a490:	b	43a4a0 <ferror@plt+0x37770>
  43a494:	ldr	x0, [x19, #1328]
  43a498:	mov	w1, #0x20                  	// #32
  43a49c:	sturb	w1, [x0, #-1]
  43a4a0:	ldr	x0, [x22]
  43a4a4:	ldp	x19, x20, [sp, #16]
  43a4a8:	ldp	x21, x22, [sp, #32]
  43a4ac:	ldp	x23, x24, [sp, #48]
  43a4b0:	ldp	x29, x30, [sp], #64
  43a4b4:	ret
  43a4b8:	ldrb	w0, [x19, #1123]
  43a4bc:	cbz	w0, 43a4d0 <ferror@plt+0x377a0>
  43a4c0:	ldr	x0, [x19, #1328]
  43a4c4:	sub	x0, x0, #0x1
  43a4c8:	str	x0, [x19, #1328]
  43a4cc:	b	43a4a0 <ferror@plt+0x37770>
  43a4d0:	ldr	x21, [x22]
  43a4d4:	sub	x21, x21, x20
  43a4d8:	mov	x2, x21
  43a4dc:	mov	x1, x20
  43a4e0:	ldr	x0, [x19, #1328]
  43a4e4:	bl	402620 <memcpy@plt>
  43a4e8:	ldr	x1, [x19, #1328]
  43a4ec:	add	x0, x1, x21
  43a4f0:	cbnz	w24, 43a4fc <ferror@plt+0x377cc>
  43a4f4:	str	x0, [x19, #1328]
  43a4f8:	b	43a4a0 <ferror@plt+0x37770>
  43a4fc:	add	x0, x0, #0x1
  43a500:	str	x0, [x19, #1328]
  43a504:	mov	w0, #0x2a                  	// #42
  43a508:	strb	w0, [x1, x21]
  43a50c:	ldr	x0, [x19, #1328]
  43a510:	add	x1, x0, #0x1
  43a514:	str	x1, [x19, #1328]
  43a518:	mov	w1, #0x2f                  	// #47
  43a51c:	strb	w1, [x0]
  43a520:	b	43a4a0 <ferror@plt+0x37770>
  43a524:	stp	x29, x30, [sp, #-48]!
  43a528:	mov	x29, sp
  43a52c:	stp	x19, x20, [sp, #16]
  43a530:	str	x21, [sp, #32]
  43a534:	mov	x19, x0
  43a538:	mov	x0, x1
  43a53c:	mov	w21, w2
  43a540:	ldr	x5, [x19, #1328]
  43a544:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43a548:	add	x20, x20, #0x28
  43a54c:	mov	x1, x0
  43a550:	ldrb	w3, [x1], #1
  43a554:	mov	x4, x5
  43a558:	strb	w3, [x4], #1
  43a55c:	mov	w2, w3
  43a560:	ldrh	w2, [x20, x2, lsl #1]
  43a564:	tbnz	w2, #11, 43a594 <ferror@plt+0x37864>
  43a568:	cmp	w3, #0x2f
  43a56c:	b.ne	43a580 <ferror@plt+0x37850>  // b.any
  43a570:	ldrb	w2, [x0, #1]
  43a574:	cmp	w2, #0x2a
  43a578:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  43a57c:	b.ne	43a5a0 <ferror@plt+0x37870>  // b.any
  43a580:	str	x5, [x19, #1328]
  43a584:	ldp	x19, x20, [sp, #16]
  43a588:	ldr	x21, [sp, #32]
  43a58c:	ldp	x29, x30, [sp], #48
  43a590:	ret
  43a594:	mov	x5, x4
  43a598:	mov	x0, x1
  43a59c:	b	43a54c <ferror@plt+0x3781c>
  43a5a0:	str	x4, [x19, #1328]
  43a5a4:	mov	w2, #0x0                   	// #0
  43a5a8:	mov	x0, x19
  43a5ac:	bl	43a3b0 <ferror@plt+0x37680>
  43a5b0:	ldr	x5, [x19, #1328]
  43a5b4:	b	43a54c <ferror@plt+0x3781c>
  43a5b8:	stp	x29, x30, [sp, #-64]!
  43a5bc:	mov	x29, sp
  43a5c0:	stp	x19, x20, [sp, #16]
  43a5c4:	stp	x21, x22, [sp, #32]
  43a5c8:	mov	x19, x0
  43a5cc:	mov	x20, x1
  43a5d0:	ldr	x21, [x0, #1328]
  43a5d4:	ldr	x0, [x0, #1312]
  43a5d8:	sub	x21, x21, x0
  43a5dc:	ldrh	w0, [x1, #16]
  43a5e0:	cbz	w0, 43a670 <ferror@plt+0x37940>
  43a5e4:	str	x23, [sp, #48]
  43a5e8:	mov	w22, w2
  43a5ec:	add	x0, x21, #0xd
  43a5f0:	and	x23, x0, #0xfffffffffffffff8
  43a5f4:	ldr	w2, [x1, #12]
  43a5f8:	add	x2, x2, x23
  43a5fc:	ldr	x1, [x19, #56]
  43a600:	ldr	x0, [x1, #24]
  43a604:	ldr	x1, [x1, #16]
  43a608:	sub	x0, x0, x1
  43a60c:	cmp	x2, x0
  43a610:	b.hi	43a6a0 <ferror@plt+0x37970>  // b.pmore
  43a614:	ldr	x0, [x19, #56]
  43a618:	ldr	x1, [x0, #16]
  43a61c:	ldr	w2, [x20, #12]
  43a620:	add	x0, x1, x2
  43a624:	str	x1, [x20, #24]
  43a628:	str	w21, [x1, x2]
  43a62c:	strh	w22, [x0, #4]
  43a630:	mov	x2, x21
  43a634:	ldr	x1, [x19, #1312]
  43a638:	add	x0, x0, #0x6
  43a63c:	bl	402620 <memcpy@plt>
  43a640:	ldr	x0, [x19, #1312]
  43a644:	str	x0, [x19, #1328]
  43a648:	ldr	w0, [x20, #12]
  43a64c:	add	w0, w0, w23
  43a650:	str	w0, [x20, #12]
  43a654:	cbnz	w22, 43a6b0 <ferror@plt+0x37980>
  43a658:	ldr	x1, [x19, #56]
  43a65c:	ldr	x2, [x1, #16]
  43a660:	add	x0, x2, w0, uxtw
  43a664:	str	x0, [x1, #16]
  43a668:	ldr	x23, [sp, #48]
  43a66c:	b	43a6b4 <ferror@plt+0x37984>
  43a670:	add	x1, x21, #0x1
  43a674:	mov	x0, x19
  43a678:	bl	42f440 <ferror@plt+0x2c710>
  43a67c:	mov	x22, x0
  43a680:	mov	x2, x21
  43a684:	ldr	x1, [x19, #1312]
  43a688:	bl	402620 <memcpy@plt>
  43a68c:	mov	w0, #0xa                   	// #10
  43a690:	strb	w0, [x22, x21]
  43a694:	str	x22, [x20, #24]
  43a698:	str	w21, [x20, #12]
  43a69c:	b	43a6b4 <ferror@plt+0x37984>
  43a6a0:	add	x1, x19, #0x38
  43a6a4:	mov	x0, x19
  43a6a8:	bl	42f3b0 <ferror@plt+0x2c680>
  43a6ac:	b	43a614 <ferror@plt+0x378e4>
  43a6b0:	ldr	x23, [sp, #48]
  43a6b4:	ldp	x19, x20, [sp, #16]
  43a6b8:	ldp	x21, x22, [sp, #32]
  43a6bc:	ldp	x29, x30, [sp], #64
  43a6c0:	ret
  43a6c4:	ldrh	w2, [x1, #18]
  43a6c8:	tbz	w2, #6, 43a748 <ferror@plt+0x37a18>
  43a6cc:	ldrb	w2, [x1, #18]
  43a6d0:	and	w2, w2, #0x3
  43a6d4:	cmp	w2, #0x3
  43a6d8:	b.eq	43a738 <ferror@plt+0x37a08>  // b.none
  43a6dc:	ldr	x2, [x1, #24]
  43a6e0:	ldrb	w2, [x2, #19]
  43a6e4:	ubfx	x2, x2, #2, #1
  43a6e8:	cbz	w2, 43a710 <ferror@plt+0x379e0>
  43a6ec:	ldr	x2, [x0, #136]
  43a6f0:	mov	x3, #0x1                   	// #1
  43a6f4:	ldr	x2, [x2, #8]
  43a6f8:	cbz	x2, 43a750 <ferror@plt+0x37a20>
  43a6fc:	add	x3, x3, #0x1
  43a700:	ldr	x4, [x2, #40]
  43a704:	cmp	x4, x1
  43a708:	ccmp	x3, #0x14, #0x0, eq  // eq = none
  43a70c:	b.ls	43a6f4 <ferror@plt+0x379c4>  // b.plast
  43a710:	stp	x29, x30, [sp, #-16]!
  43a714:	mov	x29, sp
  43a718:	ldr	x3, [x1]
  43a71c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a720:	add	x2, x2, #0x2d0
  43a724:	mov	w1, #0x3                   	// #3
  43a728:	bl	426a10 <ferror@plt+0x23ce0>
  43a72c:	mov	w0, #0x1                   	// #1
  43a730:	ldp	x29, x30, [sp], #16
  43a734:	ret
  43a738:	ldr	w2, [x1, #24]
  43a73c:	cmp	w2, #0xa
  43a740:	cset	w2, eq  // eq = none
  43a744:	b	43a6e8 <ferror@plt+0x379b8>
  43a748:	mov	w0, #0x0                   	// #0
  43a74c:	ret
  43a750:	mov	w0, #0x0                   	// #0
  43a754:	ret
  43a758:	stp	x29, x30, [sp, #-48]!
  43a75c:	mov	x29, sp
  43a760:	stp	x19, x20, [sp, #16]
  43a764:	mov	x20, x0
  43a768:	add	x1, x1, #0x3
  43a76c:	ldr	x2, [x0, #1328]
  43a770:	ldr	x0, [x0, #1320]
  43a774:	sub	x0, x0, x2
  43a778:	cmp	x0, x1
  43a77c:	b.cc	43a78c <ferror@plt+0x37a5c>  // b.lo, b.ul, b.last
  43a780:	ldp	x19, x20, [sp, #16]
  43a784:	ldp	x29, x30, [sp], #48
  43a788:	ret
  43a78c:	str	x21, [sp, #32]
  43a790:	ldr	x0, [x20, #1312]
  43a794:	sub	x21, x2, x0
  43a798:	add	x1, x1, x21
  43a79c:	add	x1, x1, x1, lsl #1
  43a7a0:	lsr	x19, x1, #1
  43a7a4:	mov	x1, x19
  43a7a8:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  43a7ac:	str	x0, [x20, #1312]
  43a7b0:	add	x19, x0, x19
  43a7b4:	str	x19, [x20, #1320]
  43a7b8:	add	x0, x0, x21
  43a7bc:	str	x0, [x20, #1328]
  43a7c0:	ldr	x21, [sp, #32]
  43a7c4:	b	43a780 <ferror@plt+0x37a50>
  43a7c8:	stp	x29, x30, [sp, #-64]!
  43a7cc:	mov	x29, sp
  43a7d0:	stp	x19, x20, [sp, #16]
  43a7d4:	stp	x21, x22, [sp, #32]
  43a7d8:	mov	x20, x0
  43a7dc:	mov	x19, x1
  43a7e0:	ldrb	w0, [x1, #18]
  43a7e4:	and	w0, w0, #0x3
  43a7e8:	cmp	w0, #0x3
  43a7ec:	b.eq	43a82c <ferror@plt+0x37afc>  // b.none
  43a7f0:	ldr	x1, [x1, #24]
  43a7f4:	ldrb	w0, [x1, #19]
  43a7f8:	orr	w0, w0, #0x20
  43a7fc:	strb	w0, [x1, #19]
  43a800:	ldr	x22, [x1, #24]
  43a804:	ldr	w21, [x1, #12]
  43a808:	mov	x3, x21
  43a80c:	mov	x2, x22
  43a810:	mov	x1, x19
  43a814:	mov	x0, x20
  43a818:	bl	435794 <ferror@plt+0x32a64>
  43a81c:	ldp	x19, x20, [sp, #16]
  43a820:	ldp	x21, x22, [sp, #32]
  43a824:	ldp	x29, x30, [sp], #64
  43a828:	ret
  43a82c:	str	x23, [sp, #48]
  43a830:	mov	w2, #0x0                   	// #0
  43a834:	mov	x0, x20
  43a838:	bl	435048 <ferror@plt+0x32318>
  43a83c:	mov	x23, x0
  43a840:	bl	402680 <strlen@plt>
  43a844:	mov	x21, x0
  43a848:	add	x1, x0, #0x1
  43a84c:	mov	x0, x20
  43a850:	bl	42f440 <ferror@plt+0x2c710>
  43a854:	mov	x22, x0
  43a858:	mov	x2, x21
  43a85c:	mov	x1, x23
  43a860:	bl	402620 <memcpy@plt>
  43a864:	mov	w0, #0xa                   	// #10
  43a868:	strb	w0, [x22, x21]
  43a86c:	ldr	x23, [sp, #48]
  43a870:	b	43a808 <ferror@plt+0x37ad8>
  43a874:	stp	x29, x30, [sp, #-32]!
  43a878:	mov	x29, sp
  43a87c:	stp	x19, x20, [sp, #16]
  43a880:	mov	x20, x0
  43a884:	ldr	x19, [x0, #1328]
  43a888:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43a88c:	add	x3, x3, #0x28
  43a890:	mov	w4, #0x204                 	// #516
  43a894:	ldrb	w2, [x1], #1
  43a898:	strb	w2, [x19], #1
  43a89c:	ldrb	w2, [x1]
  43a8a0:	ldrh	w2, [x3, x2, lsl #1]
  43a8a4:	tst	w4, w2
  43a8a8:	b.ne	43a894 <ferror@plt+0x37b64>  // b.any
  43a8ac:	ldr	x0, [x20, #136]
  43a8b0:	str	x1, [x0, #16]
  43a8b4:	ldr	x1, [x20, #1328]
  43a8b8:	mov	w3, #0x1                   	// #1
  43a8bc:	sub	x2, x19, x1
  43a8c0:	ldr	x0, [x20, #1088]
  43a8c4:	bl	439dcc <ferror@plt+0x3709c>
  43a8c8:	str	x19, [x20, #1328]
  43a8cc:	ldp	x19, x20, [sp, #16]
  43a8d0:	ldp	x29, x30, [sp], #32
  43a8d4:	ret
  43a8d8:	ldr	x3, [x0]
  43a8dc:	str	x3, [x0, #8]
  43a8e0:	ldr	x4, [x3]
  43a8e4:	str	x4, [x0, #1344]
  43a8e8:	ldr	x4, [x3, #32]
  43a8ec:	str	x4, [x0, #1352]
  43a8f0:	ldr	x4, [x3, #16]
  43a8f4:	str	x4, [x0, #1360]
  43a8f8:	strb	wzr, [x3, #104]
  43a8fc:	str	x1, [x3]
  43a900:	str	x1, [x3, #8]
  43a904:	add	x1, x1, x2
  43a908:	str	x1, [x3, #32]
  43a90c:	ret
  43a910:	ldr	x1, [x0, #8]
  43a914:	ldr	x2, [x0, #1344]
  43a918:	str	x2, [x1]
  43a91c:	ldr	x2, [x0, #1352]
  43a920:	str	x2, [x1, #32]
  43a924:	ldr	x2, [x0, #1360]
  43a928:	str	x2, [x1, #8]
  43a92c:	mov	w2, #0x1                   	// #1
  43a930:	strb	w2, [x1, #104]
  43a934:	str	xzr, [x0, #8]
  43a938:	ret
  43a93c:	stp	x29, x30, [sp, #-272]!
  43a940:	mov	x29, sp
  43a944:	stp	x19, x20, [sp, #16]
  43a948:	stp	x21, x22, [sp, #32]
  43a94c:	stp	x23, x24, [sp, #48]
  43a950:	stp	x25, x26, [sp, #64]
  43a954:	stp	x27, x28, [sp, #80]
  43a958:	mov	x21, x0
  43a95c:	str	x1, [sp, #128]
  43a960:	str	xzr, [sp, #224]
  43a964:	str	xzr, [sp, #232]
  43a968:	str	xzr, [sp, #240]
  43a96c:	str	xzr, [sp, #248]
  43a970:	str	wzr, [sp, #256]
  43a974:	str	wzr, [sp, #260]
  43a978:	str	wzr, [sp, #264]
  43a97c:	ldrb	w0, [x0, #19]
  43a980:	cmp	w0, #0x0
  43a984:	cset	w25, ne  // ne = any
  43a988:	ldr	x0, [x21, #136]
  43a98c:	ldr	x1, [x21]
  43a990:	ldr	x1, [x1]
  43a994:	str	x1, [x0, #16]
  43a998:	ldr	x0, [x21, #136]
  43a99c:	ldr	x1, [x21]
  43a9a0:	ldr	x1, [x1, #32]
  43a9a4:	str	x1, [x0, #24]
  43a9a8:	ands	w27, w2, #0xff
  43a9ac:	b.ne	43a9c4 <ferror@plt+0x37c94>  // b.any
  43a9b0:	ldr	x0, [x21, #1312]
  43a9b4:	str	x0, [x21, #1328]
  43a9b8:	ldr	x0, [x21, #40]
  43a9bc:	ldr	w0, [x0, #60]
  43a9c0:	str	w0, [x21, #1336]
  43a9c4:	ldr	x0, [x21]
  43a9c8:	ldr	x0, [x0]
  43a9cc:	str	x0, [sp, #120]
  43a9d0:	mov	w22, #0x0                   	// #0
  43a9d4:	mov	w28, #0x0                   	// #0
  43a9d8:	str	wzr, [sp, #112]
  43a9dc:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43a9e0:	add	x0, x0, #0x328
  43a9e4:	str	x0, [sp, #104]
  43a9e8:	ldr	x26, [x21, #136]
  43a9ec:	ldr	x23, [x26, #16]
  43a9f0:	ldr	x1, [x26, #24]
  43a9f4:	sub	x1, x1, x23
  43a9f8:	mov	x0, x21
  43a9fc:	bl	43a758 <ferror@plt+0x37a28>
  43aa00:	ldr	x24, [x21, #1328]
  43aa04:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43aa08:	add	x0, x0, #0x28
  43aa0c:	str	x0, [sp, #136]
  43aa10:	b	43aa58 <ferror@plt+0x37d28>
  43aa14:	mov	x24, x20
  43aa18:	mov	x23, x19
  43aa1c:	b	43aa58 <ferror@plt+0x37d28>
  43aa20:	mov	x24, x20
  43aa24:	mov	x23, x19
  43aa28:	mov	w22, #0x6                   	// #6
  43aa2c:	b	43aa58 <ferror@plt+0x37d28>
  43aa30:	mov	x24, x20
  43aa34:	mov	x23, x19
  43aa38:	mov	w22, #0x3                   	// #3
  43aa3c:	b	43aa58 <ferror@plt+0x37d28>
  43aa40:	mov	x24, x20
  43aa44:	mov	x23, x19
  43aa48:	mov	w22, #0x8                   	// #8
  43aa4c:	b	43aa58 <ferror@plt+0x37d28>
  43aa50:	mov	w25, #0x0                   	// #0
  43aa54:	mov	w22, #0x0                   	// #0
  43aa58:	ldr	x0, [x26, #8]
  43aa5c:	cmp	x0, #0x0
  43aa60:	ccmp	w27, #0x0, #0x0, eq  // eq = none
  43aa64:	b.eq	43aaa4 <ferror@plt+0x37d74>  // b.none
  43aa68:	mov	x19, x23
  43aa6c:	ldrb	w0, [x19], #1
  43aa70:	mov	x20, x24
  43aa74:	strb	w0, [x20], #1
  43aa78:	cmp	w0, #0x7a
  43aa7c:	b.hi	43abf0 <ferror@plt+0x37ec0>  // b.pmore
  43aa80:	ldr	x1, [sp, #104]
  43aa84:	ldrh	w1, [x1, w0, uxtw #1]
  43aa88:	adr	x2, 43aa94 <ferror@plt+0x37d64>
  43aa8c:	add	x1, x2, w1, sxth #2
  43aa90:	br	x1
  43aa94:	mov	x24, x20
  43aa98:	mov	x23, x19
  43aa9c:	mov	w22, #0x5                   	// #5
  43aaa0:	b	43aa58 <ferror@plt+0x37d28>
  43aaa4:	ldr	x1, [x21]
  43aaa8:	ldr	w0, [x1, #56]
  43aaac:	ldr	x2, [x1, #48]
  43aab0:	lsl	x0, x0, #4
  43aab4:	ldr	x0, [x2, x0]
  43aab8:	cmp	x0, x23
  43aabc:	b.hi	43aa68 <ferror@plt+0x37d38>  // b.pmore
  43aac0:	str	x23, [x1]
  43aac4:	mov	w1, #0x0                   	// #0
  43aac8:	mov	x0, x21
  43aacc:	bl	42def0 <ferror@plt+0x2b1c0>
  43aad0:	b	43aa68 <ferror@plt+0x37d38>
  43aad4:	ldr	x0, [x26, #8]
  43aad8:	cbnz	x0, 43aba0 <ferror@plt+0x37e70>
  43aadc:	str	x24, [x21, #1328]
  43aae0:	ldr	x0, [x21]
  43aae4:	str	x19, [x0]
  43aae8:	cbnz	w27, 43ab68 <ferror@plt+0x37e38>
  43aaec:	ldr	x0, [x21]
  43aaf0:	mov	w1, #0x1                   	// #1
  43aaf4:	strb	w1, [x0, #104]
  43aaf8:	ldr	x0, [x21, #40]
  43aafc:	ldr	w1, [x0, #12]
  43ab00:	sub	w1, w1, #0x1
  43ab04:	sbfiz	x2, x1, #1, #32
  43ab08:	add	x1, x2, w1, sxtw
  43ab0c:	lsl	x1, x1, #3
  43ab10:	ldr	x4, [x0]
  43ab14:	add	x3, x4, x1
  43ab18:	ldr	w2, [x0, #60]
  43ab1c:	ldr	w1, [x4, x1]
  43ab20:	sub	w1, w2, w1
  43ab24:	ldrb	w2, [x3, #6]
  43ab28:	lsr	w1, w1, w2
  43ab2c:	ldr	w3, [x3, #16]
  43ab30:	add	w3, w3, #0x1
  43ab34:	mov	w2, #0x0                   	// #0
  43ab38:	add	w1, w1, w3
  43ab3c:	bl	4327c8 <ferror@plt+0x2fa98>
  43ab40:	sub	w0, w22, #0x1
  43ab44:	cmp	w0, #0x1
  43ab48:	b.hi	43abb0 <ferror@plt+0x37e80>  // b.pmore
  43ab4c:	ldrb	w0, [x21, #16]
  43ab50:	cbnz	w0, 43b558 <ferror@plt+0x38828>
  43ab54:	mov	x0, x21
  43ab58:	bl	42e608 <ferror@plt+0x2b8d8>
  43ab5c:	and	w0, w0, #0xff
  43ab60:	cbnz	w0, 43abc0 <ferror@plt+0x37e90>
  43ab64:	mov	w27, #0x1                   	// #1
  43ab68:	ldr	x1, [sp, #224]
  43ab6c:	cbz	x1, 43ab78 <ferror@plt+0x37e48>
  43ab70:	mov	x0, x21
  43ab74:	bl	42f1c8 <ferror@plt+0x2c498>
  43ab78:	cmp	w22, #0x2
  43ab7c:	b.eq	43b560 <ferror@plt+0x38830>  // b.none
  43ab80:	mov	w0, w27
  43ab84:	ldp	x19, x20, [sp, #16]
  43ab88:	ldp	x21, x22, [sp, #32]
  43ab8c:	ldp	x23, x24, [sp, #48]
  43ab90:	ldp	x25, x26, [sp, #64]
  43ab94:	ldp	x27, x28, [sp, #80]
  43ab98:	ldp	x29, x30, [sp], #272
  43ab9c:	ret
  43aba0:	str	x24, [x21, #1328]
  43aba4:	mov	x0, x21
  43aba8:	bl	4357ec <ferror@plt+0x32abc>
  43abac:	b	43a9e8 <ferror@plt+0x37cb8>
  43abb0:	ldr	x1, [sp, #224]
  43abb4:	mov	w27, #0x1                   	// #1
  43abb8:	cbnz	x1, 43ab70 <ferror@plt+0x37e40>
  43abbc:	b	43ab80 <ferror@plt+0x37e50>
  43abc0:	cmp	w22, #0x2
  43abc4:	b.eq	43abd8 <ferror@plt+0x37ea8>  // b.none
  43abc8:	ldr	x0, [x21]
  43abcc:	ldr	x23, [x0]
  43abd0:	mov	x24, x20
  43abd4:	b	43aa58 <ferror@plt+0x37d28>
  43abd8:	mov	w0, #0x20                  	// #32
  43abdc:	strb	w0, [x24]
  43abe0:	b	43abc8 <ferror@plt+0x37e98>
  43abe4:	cmp	w25, #0x0
  43abe8:	mov	w0, #0x3e                  	// #62
  43abec:	csel	w28, w28, w0, eq  // eq = none
  43abf0:	ldrb	w0, [x21, #16]
  43abf4:	cbnz	w0, 43b54c <ferror@plt+0x3881c>
  43abf8:	strb	wzr, [x21, #440]
  43abfc:	mov	x24, x20
  43ac00:	mov	x23, x19
  43ac04:	cmp	w22, #0x1
  43ac08:	b.ls	43aa50 <ferror@plt+0x37d20>  // b.plast
  43ac0c:	cmp	w22, #0x3
  43ac10:	ccmp	w22, #0x8, #0x4, ne  // ne = any
  43ac14:	cset	w25, eq  // eq = none
  43ac18:	sub	w0, w22, #0x5
  43ac1c:	cmp	w0, #0x1
  43ac20:	cset	w0, ls  // ls = plast
  43ac24:	orr	w25, w25, w0
  43ac28:	cbz	w25, 43aa58 <ferror@plt+0x37d28>
  43ac2c:	mov	w25, #0x0                   	// #0
  43ac30:	mov	w22, #0x0                   	// #0
  43ac34:	b	43aa58 <ferror@plt+0x37d28>
  43ac38:	cmp	w28, #0x3e
  43ac3c:	csel	w28, w28, wzr, ne  // ne = any
  43ac40:	b	43abf0 <ferror@plt+0x37ec0>
  43ac44:	cmp	w28, w0
  43ac48:	b.eq	43b538 <ferror@plt+0x38808>  // b.none
  43ac4c:	cmp	w28, #0x0
  43ac50:	csel	w28, w28, w0, ne  // ne = any
  43ac54:	b	43abf0 <ferror@plt+0x37ec0>
  43ac58:	ldrb	w0, [x23, #1]
  43ac5c:	cmp	w0, #0x22
  43ac60:	mov	w1, #0x5c                  	// #92
  43ac64:	ccmp	w0, w1, #0x4, ne  // ne = any
  43ac68:	mov	w1, #0x27                  	// #39
  43ac6c:	ccmp	w0, w1, #0x4, ne  // ne = any
  43ac70:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43ac74:	add	x19, x23, #0x2
  43ac78:	add	x20, x24, #0x2
  43ac7c:	strb	w0, [x24, #1]
  43ac80:	b	43abf0 <ferror@plt+0x37ec0>
  43ac84:	cbnz	w28, 43abf0 <ferror@plt+0x37ec0>
  43ac88:	ldrb	w0, [x23, #1]
  43ac8c:	cmp	w0, #0x2a
  43ac90:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43ac94:	str	x20, [x21, #1328]
  43ac98:	ldr	x0, [sp, #128]
  43ac9c:	cmp	x0, #0x0
  43aca0:	cset	w2, ne  // ne = any
  43aca4:	mov	x1, x19
  43aca8:	mov	x0, x21
  43acac:	bl	43a3b0 <ferror@plt+0x37680>
  43acb0:	mov	x23, x0
  43acb4:	ldr	x24, [x21, #1328]
  43acb8:	b	43aa58 <ferror@plt+0x37d28>
  43acbc:	ldrb	w0, [x21, #18]
  43acc0:	cbnz	w0, 43abf0 <ferror@plt+0x37ec0>
  43acc4:	cmp	w28, #0x0
  43acc8:	ldr	x0, [sp, #128]
  43accc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  43acd0:	b.eq	43abf0 <ferror@plt+0x37ec0>  // b.none
  43acd4:	str	x24, [x21, #1328]
  43acd8:	mov	x1, x23
  43acdc:	mov	x0, x21
  43ace0:	bl	43a874 <ferror@plt+0x37b44>
  43ace4:	mov	x23, x0
  43ace8:	ldr	x20, [x21, #1328]
  43acec:	ldr	x19, [x26, #16]
  43acf0:	ldrb	w0, [x0, #18]
  43acf4:	tst	x0, #0x2
  43acf8:	ccmp	w22, #0x1, #0x2, ne  // ne = any
  43acfc:	b.ls	43ad5c <ferror@plt+0x3802c>  // b.plast
  43ad00:	ldr	x0, [sp, #128]
  43ad04:	cbz	x0, 43ad18 <ferror@plt+0x37fe8>
  43ad08:	ldrb	w0, [x23, #18]
  43ad0c:	and	w0, w0, #0x3
  43ad10:	cmp	w0, #0x1
  43ad14:	b.eq	43ad7c <ferror@plt+0x3804c>  // b.none
  43ad18:	cmp	w22, #0x5
  43ad1c:	b.eq	43aa20 <ferror@plt+0x37cf0>  // b.none
  43ad20:	ldrb	w0, [x21, #20]
  43ad24:	cbz	w0, 43abf0 <ferror@plt+0x37ec0>
  43ad28:	ldr	x0, [x21, #1248]
  43ad2c:	cmp	x0, x23
  43ad30:	b.eq	43aa30 <ferror@plt+0x37d00>  // b.none
  43ad34:	ldr	x0, [x21, #1288]
  43ad38:	cmp	x0, x23
  43ad3c:	b.eq	43aa40 <ferror@plt+0x37d10>  // b.none
  43ad40:	ldr	x0, [x21, #1296]
  43ad44:	cmp	x0, x23
  43ad48:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43ad4c:	mov	x24, x20
  43ad50:	mov	x23, x19
  43ad54:	mov	w22, #0x8                   	// #8
  43ad58:	b	43aa58 <ferror@plt+0x37d28>
  43ad5c:	ldrb	w0, [x21, #24]
  43ad60:	cbz	w0, 43ad98 <ferror@plt+0x38068>
  43ad64:	ldr	x0, [sp, #128]
  43ad68:	cbz	x0, 43ad20 <ferror@plt+0x37ff0>
  43ad6c:	ldrb	w0, [x23, #18]
  43ad70:	and	w0, w0, #0x3
  43ad74:	cmp	w0, #0x1
  43ad78:	b.ne	43ad20 <ferror@plt+0x37ff0>  // b.any
  43ad7c:	str	x24, [x21, #1328]
  43ad80:	ldrh	w2, [x23, #24]
  43ad84:	ldr	x1, [sp, #128]
  43ad88:	mov	x0, x21
  43ad8c:	bl	43a5b8 <ferror@plt+0x37888>
  43ad90:	ldr	x20, [x21, #1312]
  43ad94:	b	43abf0 <ferror@plt+0x37ec0>
  43ad98:	strb	wzr, [x21, #440]
  43ad9c:	ldrb	w0, [x23, #18]
  43ada0:	and	w0, w0, #0x3
  43ada4:	cmp	w0, #0x3
  43ada8:	b.eq	43ade4 <ferror@plt+0x380b4>  // b.none
  43adac:	ldr	x0, [x23, #24]
  43adb0:	ldrb	w1, [x0, #19]
  43adb4:	tbnz	w1, #2, 43adf8 <ferror@plt+0x380c8>
  43adb8:	mov	x1, x23
  43adbc:	mov	x0, x21
  43adc0:	bl	43a6c4 <ferror@plt+0x37994>
  43adc4:	and	w0, w0, #0xff
  43adc8:	cbnz	w0, 43abf0 <ferror@plt+0x37ec0>
  43adcc:	str	x24, [x21, #1328]
  43add0:	mov	x1, x23
  43add4:	mov	x0, x21
  43add8:	bl	43a7c8 <ferror@plt+0x37a98>
  43addc:	mov	w22, #0x0                   	// #0
  43ade0:	b	43a9e8 <ferror@plt+0x37cb8>
  43ade4:	ldr	w0, [x23, #24]
  43ade8:	cmp	w0, #0xa
  43adec:	b.ne	43adb8 <ferror@plt+0x38088>  // b.any
  43adf0:	mov	w22, #0x1                   	// #1
  43adf4:	b	43adfc <ferror@plt+0x380cc>
  43adf8:	ldrh	w22, [x0, #16]
  43adfc:	ldr	x1, [sp, #224]
  43ae00:	cbz	x1, 43ae0c <ferror@plt+0x380dc>
  43ae04:	mov	x0, x21
  43ae08:	bl	42f1c8 <ferror@plt+0x2c498>
  43ae0c:	add	w1, w22, #0x1
  43ae10:	ubfiz	x1, x1, #3, #17
  43ae14:	mov	x0, x21
  43ae18:	bl	42f1e8 <ferror@plt+0x2c4b8>
  43ae1c:	str	x0, [sp, #224]
  43ae20:	ldr	x0, [x0, #16]
  43ae24:	str	x0, [sp, #232]
  43ae28:	str	x23, [sp, #240]
  43ae2c:	ldr	x0, [x21, #1312]
  43ae30:	sub	x24, x24, x0
  43ae34:	str	x24, [sp, #248]
  43ae38:	str	w22, [sp, #260]
  43ae3c:	str	wzr, [sp, #264]
  43ae40:	ldr	x0, [x21, #40]
  43ae44:	ldr	w0, [x0, #60]
  43ae48:	str	w0, [sp, #256]
  43ae4c:	mov	x24, x20
  43ae50:	mov	x23, x19
  43ae54:	mov	w22, #0x1                   	// #1
  43ae58:	b	43aa58 <ferror@plt+0x37d28>
  43ae5c:	cbnz	w28, 43abf0 <ferror@plt+0x37ec0>
  43ae60:	ldr	w0, [sp, #112]
  43ae64:	add	w0, w0, #0x1
  43ae68:	str	w0, [sp, #112]
  43ae6c:	cmp	w22, #0x1
  43ae70:	b.eq	43ae94 <ferror@plt+0x38164>  // b.none
  43ae74:	cmp	w22, #0x6
  43ae78:	b.eq	43b588 <ferror@plt+0x38858>  // b.none
  43ae7c:	cmp	w22, #0x3
  43ae80:	b.eq	43b5a8 <ferror@plt+0x38878>  // b.none
  43ae84:	cmp	w22, #0x8
  43ae88:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43ae8c:	mov	w22, #0x9                   	// #9
  43ae90:	b	43b58c <ferror@plt+0x3885c>
  43ae94:	ldr	x1, [sp, #240]
  43ae98:	mov	x0, x21
  43ae9c:	bl	43a6c4 <ferror@plt+0x37994>
  43aea0:	and	w0, w0, #0xff
  43aea4:	cbnz	w0, 43b3dc <ferror@plt+0x386ac>
  43aea8:	ldr	x0, [sp, #248]
  43aeac:	ldr	x20, [x21, #1312]
  43aeb0:	add	x20, x20, x0
  43aeb4:	ldr	x1, [sp, #232]
  43aeb8:	str	x0, [x1]
  43aebc:	str	w22, [sp, #112]
  43aec0:	mov	w22, #0x2                   	// #2
  43aec4:	b	43b58c <ferror@plt+0x3885c>
  43aec8:	cmp	w28, #0x0
  43aecc:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  43aed0:	ldr	w0, [sp, #112]
  43aed4:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  43aed8:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43aedc:	ldr	x1, [x21, #1312]
  43aee0:	sub	x1, x20, x1
  43aee4:	add	x0, sp, #0xe0
  43aee8:	bl	43a2e0 <ferror@plt+0x375b0>
  43aeec:	mov	w22, #0x2                   	// #2
  43aef0:	mov	w0, #0x1                   	// #1
  43aef4:	str	w0, [sp, #112]
  43aef8:	b	43b58c <ferror@plt+0x3885c>
  43aefc:	cbnz	w28, 43abf0 <ferror@plt+0x37ec0>
  43af00:	ldr	w0, [sp, #112]
  43af04:	subs	w0, w0, #0x1
  43af08:	str	w0, [sp, #112]
  43af0c:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  43af10:	b.ne	43b3cc <ferror@plt+0x3869c>  // b.any
  43af14:	ldr	x1, [sp, #240]
  43af18:	ldrb	w0, [x1, #18]
  43af1c:	and	w0, w0, #0x3
  43af20:	cmp	w0, #0x3
  43af24:	b.eq	43af78 <ferror@plt+0x38248>  // b.none
  43af28:	ldr	x22, [x1, #24]
  43af2c:	ldrb	w0, [x22, #19]
  43af30:	orr	w0, w0, #0x20
  43af34:	strb	w0, [x22, #19]
  43af38:	ldr	x1, [x21, #1312]
  43af3c:	sub	x1, x20, x1
  43af40:	add	x0, sp, #0xe0
  43af44:	bl	43a2e0 <ferror@plt+0x375b0>
  43af48:	ldr	w0, [sp, #264]
  43af4c:	cmp	w0, #0x1
  43af50:	b.eq	43b1c4 <ferror@plt+0x38494>  // b.none
  43af54:	ldr	w3, [sp, #264]
  43af58:	ldr	x2, [sp, #240]
  43af5c:	mov	x1, x22
  43af60:	mov	x0, x21
  43af64:	bl	435464 <ferror@plt+0x32734>
  43af68:	and	w0, w0, #0xff
  43af6c:	cbnz	w0, 43b1ec <ferror@plt+0x384bc>
  43af70:	str	w28, [sp, #112]
  43af74:	b	43b3dc <ferror@plt+0x386ac>
  43af78:	ldr	x1, [x21, #1312]
  43af7c:	sub	x1, x20, x1
  43af80:	add	x0, sp, #0xe0
  43af84:	bl	43a2e0 <ferror@plt+0x375b0>
  43af88:	stp	xzr, xzr, [sp, #176]
  43af8c:	stp	xzr, xzr, [sp, #192]
  43af90:	stp	xzr, xzr, [sp, #208]
  43af94:	ldr	w0, [sp, #260]
  43af98:	strh	w0, [sp, #192]
  43af9c:	ldr	w3, [sp, #264]
  43afa0:	ldr	x2, [sp, #240]
  43afa4:	add	x1, sp, #0xb0
  43afa8:	mov	x0, x21
  43afac:	bl	435464 <ferror@plt+0x32734>
  43afb0:	and	w0, w0, #0xff
  43afb4:	cbnz	w0, 43afc0 <ferror@plt+0x38290>
  43afb8:	str	w28, [sp, #112]
  43afbc:	b	43b3dc <ferror@plt+0x386ac>
  43afc0:	ldr	x0, [sp, #232]
  43afc4:	ldr	x1, [x0, #8]
  43afc8:	ldr	x22, [x0]
  43afcc:	sub	x22, x1, x22
  43afd0:	ldr	x0, [x21, #1312]
  43afd4:	ldr	x1, [sp, #248]
  43afd8:	add	x0, x0, x1
  43afdc:	str	x0, [x21, #1328]
  43afe0:	str	x19, [x26, #16]
  43afe4:	add	x1, x22, #0x2
  43afe8:	mov	x0, x21
  43afec:	bl	42f440 <ferror@plt+0x2c710>
  43aff0:	mov	x20, x0
  43aff4:	mov	w1, #0x28                  	// #40
  43aff8:	strb	w1, [x0], #1
  43affc:	ldr	x3, [x21, #1312]
  43b000:	ldr	x1, [sp, #232]
  43b004:	ldr	x1, [x1]
  43b008:	mov	x2, x22
  43b00c:	add	x1, x3, x1
  43b010:	bl	402620 <memcpy@plt>
  43b014:	add	x0, x22, #0x1
  43b018:	add	x1, x20, x0
  43b01c:	mov	w22, #0xa                   	// #10
  43b020:	strb	w22, [x20, x0]
  43b024:	ldr	x0, [x26, #24]
  43b028:	str	x0, [sp, #112]
  43b02c:	ldr	x0, [x21]
  43b030:	ldr	x24, [x0]
  43b034:	ldr	x3, [x0, #32]
  43b038:	str	x3, [sp, #136]
  43b03c:	ldr	x4, [x0, #8]
  43b040:	str	x4, [sp, #144]
  43b044:	ldrb	w5, [x0, #104]
  43b048:	str	w5, [sp, #156]
  43b04c:	ldr	x6, [x21, #8]
  43b050:	str	x6, [sp, #160]
  43b054:	str	x20, [x0]
  43b058:	ldr	x0, [x21]
  43b05c:	str	x20, [x0, #8]
  43b060:	ldr	x0, [x21]
  43b064:	str	x1, [x0, #32]
  43b068:	ldr	x0, [x21]
  43b06c:	strb	wzr, [x0, #104]
  43b070:	ldr	x0, [x21]
  43b074:	str	x0, [x21, #8]
  43b078:	ldrb	w0, [x21, #16]
  43b07c:	cmp	w0, #0x0
  43b080:	cset	w20, ne  // ne = any
  43b084:	mov	w2, #0x1                   	// #1
  43b088:	strb	w2, [x21, #16]
  43b08c:	ldr	x23, [x26, #8]
  43b090:	str	xzr, [x26, #8]
  43b094:	mov	x1, #0x0                   	// #0
  43b098:	mov	x0, x21
  43b09c:	bl	43a93c <ferror@plt+0x37c0c>
  43b0a0:	strb	w20, [x21, #16]
  43b0a4:	mov	x1, #0x1                   	// #1
  43b0a8:	mov	x0, x21
  43b0ac:	bl	43a758 <ferror@plt+0x37a28>
  43b0b0:	ldr	x0, [x21, #1328]
  43b0b4:	strb	w22, [x0]
  43b0b8:	ldr	x1, [x21]
  43b0bc:	ldr	x0, [x21, #1312]
  43b0c0:	ldr	x2, [sp, #248]
  43b0c4:	add	x0, x0, x2
  43b0c8:	str	x0, [x1]
  43b0cc:	ldr	x0, [x21]
  43b0d0:	ldr	x1, [x0]
  43b0d4:	str	x1, [x0, #8]
  43b0d8:	ldr	x0, [x21]
  43b0dc:	ldr	x1, [x21, #1328]
  43b0e0:	str	x1, [x0, #32]
  43b0e4:	ldr	x0, [x21]
  43b0e8:	ldr	x0, [x0]
  43b0ec:	str	x0, [x26, #16]
  43b0f0:	ldr	x0, [x21]
  43b0f4:	ldr	x0, [x0, #32]
  43b0f8:	str	x0, [x26, #24]
  43b0fc:	ldrb	w0, [x21, #24]
  43b100:	add	w0, w0, #0x1
  43b104:	strb	w0, [x21, #24]
  43b108:	mov	w2, #0x0                   	// #0
  43b10c:	ldr	x1, [sp, #240]
  43b110:	mov	x0, x21
  43b114:	bl	435048 <ferror@plt+0x32318>
  43b118:	str	x0, [sp, #168]
  43b11c:	ldrb	w1, [x21, #24]
  43b120:	sub	w1, w1, #0x1
  43b124:	strb	w1, [x21, #24]
  43b128:	str	x23, [x26, #8]
  43b12c:	ldr	x1, [x21]
  43b130:	str	x24, [x1]
  43b134:	ldr	x1, [x21]
  43b138:	ldr	x3, [sp, #136]
  43b13c:	str	x3, [x1, #32]
  43b140:	ldr	x1, [x21]
  43b144:	ldr	x4, [sp, #144]
  43b148:	str	x4, [x1, #8]
  43b14c:	ldr	x1, [x21]
  43b150:	ldrb	w3, [sp, #156]
  43b154:	strb	w3, [x1, #104]
  43b158:	ldr	x6, [sp, #160]
  43b15c:	str	x6, [x21, #8]
  43b160:	ldr	x1, [x21, #1312]
  43b164:	ldr	x2, [sp, #248]
  43b168:	add	x1, x1, x2
  43b16c:	str	x1, [x21, #1328]
  43b170:	str	x19, [x26, #16]
  43b174:	ldr	x2, [sp, #112]
  43b178:	str	x2, [x26, #24]
  43b17c:	bl	402680 <strlen@plt>
  43b180:	mov	x19, x0
  43b184:	add	x1, x0, #0x1
  43b188:	mov	x0, x21
  43b18c:	bl	42f440 <ferror@plt+0x2c710>
  43b190:	mov	x20, x0
  43b194:	mov	x2, x19
  43b198:	ldr	x1, [sp, #168]
  43b19c:	bl	402620 <memcpy@plt>
  43b1a0:	strb	w22, [x20, x19]
  43b1a4:	mov	x3, x19
  43b1a8:	mov	x2, x20
  43b1ac:	ldr	x1, [sp, #240]
  43b1b0:	mov	x0, x21
  43b1b4:	bl	435794 <ferror@plt+0x32a64>
  43b1b8:	mov	w22, w28
  43b1bc:	str	w28, [sp, #112]
  43b1c0:	b	43a9e8 <ferror@plt+0x37cb8>
  43b1c4:	ldrh	w0, [x22, #16]
  43b1c8:	cbnz	w0, 43af54 <ferror@plt+0x38224>
  43b1cc:	ldr	x0, [sp, #248]
  43b1d0:	add	x1, x0, #0x1
  43b1d4:	ldr	x0, [x21, #1312]
  43b1d8:	add	x0, x0, x1
  43b1dc:	cmp	x20, x0
  43b1e0:	b.ne	43af54 <ferror@plt+0x38224>  // b.any
  43b1e4:	str	wzr, [sp, #264]
  43b1e8:	b	43af54 <ferror@plt+0x38224>
  43b1ec:	ldr	x0, [x21, #1312]
  43b1f0:	ldr	x1, [sp, #248]
  43b1f4:	add	x0, x0, x1
  43b1f8:	str	x0, [x21, #1328]
  43b1fc:	str	x19, [x26, #16]
  43b200:	ldr	x1, [sp, #240]
  43b204:	ldr	x20, [x1, #24]
  43b208:	ldrh	w0, [x20, #16]
  43b20c:	cbz	w0, 43b28c <ferror@plt+0x3855c>
  43b210:	ldr	x4, [x20, #24]
  43b214:	ldr	w0, [x4]
  43b218:	ldrh	w2, [x4, #4]
  43b21c:	cbz	w2, 43b2a0 <ferror@plt+0x38570>
  43b220:	ldr	x5, [sp, #232]
  43b224:	mov	x1, x0
  43b228:	and	x3, x2, #0xffff
  43b22c:	add	x0, x0, #0xd
  43b230:	and	x0, x0, #0xfffffffffffffff8
  43b234:	add	x4, x4, x0
  43b238:	ldr	w0, [x4]
  43b23c:	ldr	x3, [x5, x3, lsl #3]
  43b240:	sub	x3, x3, #0x1
  43b244:	add	x2, x5, w2, uxth #3
  43b248:	ldur	x2, [x2, #-8]
  43b24c:	sub	x2, x3, x2
  43b250:	add	x2, x0, x2, lsl #1
  43b254:	add	x1, x1, x2
  43b258:	ldrh	w2, [x4, #4]
  43b25c:	cbnz	w2, 43b228 <ferror@plt+0x384f8>
  43b260:	add	x1, x1, #0x1
  43b264:	mov	x0, x21
  43b268:	bl	42f1e8 <ferror@plt+0x2c4b8>
  43b26c:	mov	x19, x0
  43b270:	ldr	x5, [x0, #16]
  43b274:	ldr	x8, [x20, #24]
  43b278:	mov	w0, #0x0                   	// #0
  43b27c:	mov	x3, #0x0                   	// #0
  43b280:	mov	w10, #0x0                   	// #0
  43b284:	mov	w9, #0x5c                  	// #92
  43b288:	b	43b324 <ferror@plt+0x385f4>
  43b28c:	mov	x0, x21
  43b290:	bl	43a7c8 <ferror@plt+0x37a98>
  43b294:	mov	w22, w28
  43b298:	str	w28, [sp, #112]
  43b29c:	b	43a9e8 <ferror@plt+0x37cb8>
  43b2a0:	mov	x1, x0
  43b2a4:	b	43b260 <ferror@plt+0x38530>
  43b2a8:	cmp	x11, x1
  43b2ac:	b.cs	43b2c4 <ferror@plt+0x38594>  // b.hs, b.nlast
  43b2b0:	ldurb	w2, [x1, #-1]
  43b2b4:	cmp	w2, #0x5c
  43b2b8:	mov	w6, w7
  43b2bc:	eor	w7, w7, #0x1
  43b2c0:	csel	w7, w7, w6, ne  // ne = any
  43b2c4:	mov	x2, x5
  43b2c8:	strb	w9, [x2], #1
  43b2cc:	add	x3, x3, #0x1
  43b2d0:	mov	x5, x2
  43b2d4:	ldrb	w2, [x1], #1
  43b2d8:	strb	w2, [x5], #1
  43b2dc:	add	x3, x3, #0x1
  43b2e0:	cmp	x1, x4
  43b2e4:	b.eq	43b314 <ferror@plt+0x385e4>  // b.none
  43b2e8:	mov	x2, x5
  43b2ec:	cbz	w0, 43b2d0 <ferror@plt+0x385a0>
  43b2f0:	ldrb	w6, [x1]
  43b2f4:	cmp	w6, #0x22
  43b2f8:	b.eq	43b2a8 <ferror@plt+0x38578>  // b.none
  43b2fc:	cbz	w7, 43b2d0 <ferror@plt+0x385a0>
  43b300:	cmp	w6, #0x5c
  43b304:	b.ne	43b2d0 <ferror@plt+0x385a0>  // b.any
  43b308:	strb	w9, [x2], #1
  43b30c:	add	x3, x3, #0x1
  43b310:	b	43b2d0 <ferror@plt+0x385a0>
  43b314:	ldr	w1, [x8]
  43b318:	add	x1, x1, #0xd
  43b31c:	and	x1, x1, #0xfffffffffffffff8
  43b320:	add	x8, x8, x1
  43b324:	ldr	w6, [x8]
  43b328:	add	x3, x3, x6
  43b32c:	cbz	x6, 43b360 <ferror@plt+0x38630>
  43b330:	mov	x1, #0x0                   	// #0
  43b334:	add	x7, x8, #0x6
  43b338:	ldrb	w2, [x7, x1]
  43b33c:	cmp	w2, #0x22
  43b340:	mov	w4, w0
  43b344:	eor	w0, w0, #0x1
  43b348:	csel	w0, w0, w4, eq  // eq = none
  43b34c:	strb	w2, [x5, x1]
  43b350:	add	x1, x1, #0x1
  43b354:	cmp	x6, x1
  43b358:	b.ne	43b338 <ferror@plt+0x38608>  // b.any
  43b35c:	add	x5, x5, x1
  43b360:	ldrh	w1, [x8, #4]
  43b364:	cbz	w1, 43b3a0 <ferror@plt+0x38670>
  43b368:	ldr	x4, [sp, #232]
  43b36c:	and	x6, x1, #0xffff
  43b370:	add	x1, x4, w1, uxth #3
  43b374:	ldur	x2, [x1, #-8]
  43b378:	ldr	x1, [x4, x6, lsl #3]
  43b37c:	sub	x1, x1, #0x1
  43b380:	ldr	x4, [x21, #1312]
  43b384:	add	x11, x4, x2
  43b388:	cmp	x1, x2
  43b38c:	b.eq	43b314 <ferror@plt+0x385e4>  // b.none
  43b390:	add	x4, x4, x1
  43b394:	mov	x1, x11
  43b398:	mov	w7, w10
  43b39c:	b	43b2e8 <ferror@plt+0x385b8>
  43b3a0:	mov	w0, #0xa                   	// #10
  43b3a4:	strb	w0, [x5]
  43b3a8:	ldr	x2, [x19, #16]
  43b3ac:	ldr	x1, [sp, #240]
  43b3b0:	mov	x0, x21
  43b3b4:	bl	435794 <ferror@plt+0x32a64>
  43b3b8:	ldr	x0, [x21, #136]
  43b3bc:	str	x19, [x0, #32]
  43b3c0:	mov	w22, w28
  43b3c4:	str	w28, [sp, #112]
  43b3c8:	b	43a9e8 <ferror@plt+0x37cb8>
  43b3cc:	sub	w0, w22, #0x7
  43b3d0:	tst	w0, #0xfffffffd
  43b3d4:	ccmp	w22, #0x4, #0x4, ne  // ne = any
  43b3d8:	b.ne	43abf0 <ferror@plt+0x37ec0>  // b.any
  43b3dc:	ldrb	w0, [x21, #16]
  43b3e0:	cbz	w0, 43b540 <ferror@plt+0x38810>
  43b3e4:	mov	x24, x20
  43b3e8:	mov	x23, x19
  43b3ec:	mov	w25, #0x0                   	// #0
  43b3f0:	mov	w22, #0x0                   	// #0
  43b3f4:	mov	w28, #0x0                   	// #0
  43b3f8:	b	43aa58 <ferror@plt+0x37d28>
  43b3fc:	ldr	x0, [sp, #120]
  43b400:	cmp	x23, x0
  43b404:	b.eq	43b420 <ferror@plt+0x386f0>  // b.none
  43b408:	ldrb	w0, [x21, #20]
  43b40c:	cbz	w0, 43abf0 <ferror@plt+0x37ec0>
  43b410:	mov	x24, x20
  43b414:	mov	x23, x19
  43b418:	mov	w22, #0x5                   	// #5
  43b41c:	b	43aa58 <ferror@plt+0x37d28>
  43b420:	ldr	x0, [x21, #136]
  43b424:	ldr	x0, [x0, #8]
  43b428:	cbnz	x0, 43b408 <ferror@plt+0x386d8>
  43b42c:	ldrb	w0, [x21, #16]
  43b430:	cbz	w0, 43b448 <ferror@plt+0x38718>
  43b434:	ldrb	w0, [x21, #20]
  43b438:	cbnz	w0, 43aa94 <ferror@plt+0x37d64>
  43b43c:	mov	x24, x20
  43b440:	mov	x23, x19
  43b444:	b	43ac04 <ferror@plt+0x37ed4>
  43b448:	str	x20, [x21, #1328]
  43b44c:	mov	w2, #0x1                   	// #1
  43b450:	mov	x1, x19
  43b454:	mov	x0, x21
  43b458:	bl	43a524 <ferror@plt+0x377f4>
  43b45c:	mov	x19, x0
  43b460:	ldr	x20, [x21, #1328]
  43b464:	ldrb	w0, [x0]
  43b468:	cmp	w0, #0xa
  43b46c:	b.eq	43b4bc <ferror@plt+0x3878c>  // b.none
  43b470:	ldr	x1, [sp, #136]
  43b474:	ldrh	w1, [x1, w0, sxtw #1]
  43b478:	tbz	w1, #2, 43b488 <ferror@plt+0x38758>
  43b47c:	ldr	w2, [x21, #1116]
  43b480:	cmp	w2, #0x15
  43b484:	b.ne	43b4a0 <ferror@plt+0x38770>  // b.any
  43b488:	tbnz	w1, #9, 43b520 <ferror@plt+0x387f0>
  43b48c:	cmp	w0, #0x24
  43b490:	b.eq	43b518 <ferror@plt+0x387e8>  // b.none
  43b494:	ldr	w0, [x21, #1116]
  43b498:	cmp	w0, #0x15
  43b49c:	b.eq	43b408 <ferror@plt+0x386d8>  // b.none
  43b4a0:	ldr	x0, [x21]
  43b4a4:	str	x19, [x0]
  43b4a8:	mov	w1, #0x0                   	// #0
  43b4ac:	mov	x0, x21
  43b4b0:	bl	424f38 <ferror@plt+0x22208>
  43b4b4:	mov	w27, #0x0                   	// #0
  43b4b8:	b	43ab68 <ferror@plt+0x37e38>
  43b4bc:	ldr	x0, [x21]
  43b4c0:	mov	w1, #0x1                   	// #1
  43b4c4:	strb	w1, [x0, #104]
  43b4c8:	ldr	x0, [x21, #40]
  43b4cc:	ldr	w1, [x0, #12]
  43b4d0:	sub	w1, w1, #0x1
  43b4d4:	sbfiz	x2, x1, #1, #32
  43b4d8:	add	x1, x2, w1, sxtw
  43b4dc:	lsl	x1, x1, #3
  43b4e0:	ldr	x4, [x0]
  43b4e4:	add	x3, x4, x1
  43b4e8:	ldr	w2, [x0, #60]
  43b4ec:	ldr	w1, [x4, x1]
  43b4f0:	sub	w1, w2, w1
  43b4f4:	ldrb	w2, [x3, #6]
  43b4f8:	lsr	w1, w1, w2
  43b4fc:	ldr	w3, [x3, #16]
  43b500:	add	w3, w3, #0x1
  43b504:	mov	w2, #0x0                   	// #0
  43b508:	add	w1, w1, w3
  43b50c:	bl	4327c8 <ferror@plt+0x2fa98>
  43b510:	mov	w27, #0x0                   	// #0
  43b514:	b	43ab68 <ferror@plt+0x37e38>
  43b518:	ldrb	w0, [x21, #1146]
  43b51c:	cbz	w0, 43b494 <ferror@plt+0x38764>
  43b520:	mov	x1, x19
  43b524:	mov	x0, x21
  43b528:	bl	43a874 <ferror@plt+0x37b44>
  43b52c:	ldrb	w0, [x0, #16]
  43b530:	tbz	w0, #0, 43b494 <ferror@plt+0x38764>
  43b534:	b	43b4a0 <ferror@plt+0x38770>
  43b538:	mov	w28, #0x0                   	// #0
  43b53c:	b	43abf0 <ferror@plt+0x37ec0>
  43b540:	mov	w22, #0x0                   	// #0
  43b544:	mov	w28, #0x0                   	// #0
  43b548:	b	43abf8 <ferror@plt+0x37ec8>
  43b54c:	mov	x24, x20
  43b550:	mov	x23, x19
  43b554:	b	43ac04 <ferror@plt+0x37ed4>
  43b558:	mov	w27, #0x1                   	// #1
  43b55c:	b	43ab68 <ferror@plt+0x37e38>
  43b560:	ldr	x0, [sp, #240]
  43b564:	ldr	x5, [x0]
  43b568:	adrp	x4, 47a000 <_obstack_memory_used@@Base+0x25c60>
  43b56c:	add	x4, x4, #0xec8
  43b570:	mov	w3, #0x0                   	// #0
  43b574:	ldr	w2, [sp, #256]
  43b578:	mov	w1, #0x3                   	// #3
  43b57c:	mov	x0, x21
  43b580:	bl	426bfc <ferror@plt+0x23ecc>
  43b584:	b	43ab80 <ferror@plt+0x37e50>
  43b588:	mov	w22, #0x7                   	// #7
  43b58c:	ldrb	w0, [x21, #16]
  43b590:	mov	w28, #0x0                   	// #0
  43b594:	cbz	w0, 43abf8 <ferror@plt+0x37ec8>
  43b598:	mov	x24, x20
  43b59c:	mov	x23, x19
  43b5a0:	mov	w25, #0x0                   	// #0
  43b5a4:	b	43aa58 <ferror@plt+0x37d28>
  43b5a8:	mov	w22, #0x4                   	// #4
  43b5ac:	b	43b58c <ferror@plt+0x3885c>
  43b5b0:	stp	x29, x30, [sp, #-32]!
  43b5b4:	mov	x29, sp
  43b5b8:	str	x19, [sp, #16]
  43b5bc:	mov	x19, x0
  43b5c0:	ldr	x0, [x19]
  43b5c4:	ldrb	w0, [x0, #104]
  43b5c8:	cbz	w0, 43b5dc <ferror@plt+0x388ac>
  43b5cc:	mov	x0, x19
  43b5d0:	bl	42e608 <ferror@plt+0x2b8d8>
  43b5d4:	ands	w0, w0, #0xff
  43b5d8:	b.eq	43b608 <ferror@plt+0x388d8>  // b.none
  43b5dc:	mov	w2, #0x0                   	// #0
  43b5e0:	mov	x1, #0x0                   	// #0
  43b5e4:	mov	x0, x19
  43b5e8:	bl	43a93c <ferror@plt+0x37c0c>
  43b5ec:	and	w0, w0, #0xff
  43b5f0:	cbz	w0, 43b5c0 <ferror@plt+0x38890>
  43b5f4:	ldrb	w0, [x19, #18]
  43b5f8:	cbnz	w0, 43b5c0 <ferror@plt+0x38890>
  43b5fc:	ldr	x0, [x19]
  43b600:	cmp	x0, #0x0
  43b604:	cset	w0, ne  // ne = any
  43b608:	ldr	x19, [sp, #16]
  43b60c:	ldp	x29, x30, [sp], #32
  43b610:	ret
  43b614:	ldrb	w1, [x0, #19]
  43b618:	tbz	w1, #2, 43b66c <ferror@plt+0x3893c>
  43b61c:	ldrh	w1, [x0, #16]
  43b620:	cbz	w1, 43b66c <ferror@plt+0x3893c>
  43b624:	ldr	x3, [x0, #24]
  43b628:	ldr	w1, [x3]
  43b62c:	ldrh	w2, [x3, #4]
  43b630:	cbz	w2, 43b674 <ferror@plt+0x38944>
  43b634:	ldr	x4, [x0]
  43b638:	mov	x0, x1
  43b63c:	add	x1, x1, #0xd
  43b640:	and	x1, x1, #0xfffffffffffffff8
  43b644:	add	x3, x3, x1
  43b648:	ldr	w1, [x3]
  43b64c:	add	x2, x4, w2, uxth #3
  43b650:	ldur	x2, [x2, #-8]
  43b654:	ldr	w2, [x2, #8]
  43b658:	add	x2, x2, x1
  43b65c:	add	x0, x0, x2
  43b660:	ldrh	w2, [x3, #4]
  43b664:	cbnz	w2, 43b63c <ferror@plt+0x3890c>
  43b668:	b	43b670 <ferror@plt+0x38940>
  43b66c:	ldr	w0, [x0, #12]
  43b670:	ret
  43b674:	mov	x0, x1
  43b678:	b	43b670 <ferror@plt+0x38940>
  43b67c:	stp	x29, x30, [sp, #-48]!
  43b680:	mov	x29, sp
  43b684:	stp	x19, x20, [sp, #16]
  43b688:	stp	x21, x22, [sp, #32]
  43b68c:	mov	x21, x0
  43b690:	mov	x19, x1
  43b694:	ldrb	w0, [x0, #19]
  43b698:	tbz	w0, #2, 43b700 <ferror@plt+0x389d0>
  43b69c:	ldrh	w0, [x21, #16]
  43b6a0:	cbz	w0, 43b700 <ferror@plt+0x389d0>
  43b6a4:	ldr	x20, [x21, #24]
  43b6a8:	mov	x1, x20
  43b6ac:	ldr	w2, [x1], #6
  43b6b0:	mov	x0, x19
  43b6b4:	bl	402620 <memcpy@plt>
  43b6b8:	ldr	w1, [x20]
  43b6bc:	add	x19, x19, x1
  43b6c0:	ldrh	w1, [x20, #4]
  43b6c4:	cbz	w1, 43b718 <ferror@plt+0x389e8>
  43b6c8:	ldr	x0, [x21]
  43b6cc:	add	x1, x0, w1, uxth #3
  43b6d0:	ldur	x22, [x1, #-8]
  43b6d4:	ldr	w2, [x22, #8]
  43b6d8:	ldr	x1, [x22]
  43b6dc:	mov	x0, x19
  43b6e0:	bl	402620 <memcpy@plt>
  43b6e4:	ldr	w1, [x22, #8]
  43b6e8:	add	x19, x19, x1
  43b6ec:	ldr	w1, [x20]
  43b6f0:	add	x1, x1, #0xd
  43b6f4:	and	x1, x1, #0xfffffffffffffff8
  43b6f8:	add	x20, x20, x1
  43b6fc:	b	43b6a8 <ferror@plt+0x38978>
  43b700:	ldr	w2, [x21, #12]
  43b704:	ldr	x1, [x21, #24]
  43b708:	mov	x0, x19
  43b70c:	bl	402620 <memcpy@plt>
  43b710:	ldr	w1, [x21, #12]
  43b714:	add	x19, x19, x1
  43b718:	mov	x0, x19
  43b71c:	ldp	x19, x20, [sp, #16]
  43b720:	ldp	x21, x22, [sp, #32]
  43b724:	ldp	x29, x30, [sp], #48
  43b728:	ret
  43b72c:	stp	x29, x30, [sp, #-64]!
  43b730:	mov	x29, sp
  43b734:	stp	x19, x20, [sp, #16]
  43b738:	stp	x21, x22, [sp, #32]
  43b73c:	stp	x23, x24, [sp, #48]
  43b740:	mov	x19, x0
  43b744:	ldr	x21, [x0, #136]
  43b748:	ldr	x1, [x0, #1312]
  43b74c:	str	x1, [x0, #1328]
  43b750:	ldr	x1, [x0]
  43b754:	ldr	x1, [x1]
  43b758:	str	x1, [x21, #16]
  43b75c:	ldr	x2, [x0]
  43b760:	ldr	x2, [x2, #32]
  43b764:	str	x2, [x21, #24]
  43b768:	sub	x1, x2, x1
  43b76c:	bl	43a758 <ferror@plt+0x37a28>
  43b770:	ldr	x0, [x21, #16]
  43b774:	ldrb	w0, [x0]
  43b778:	cmp	w0, #0x28
  43b77c:	b.eq	43b870 <ferror@plt+0x38b40>  // b.none
  43b780:	mov	w22, #0x0                   	// #0
  43b784:	mov	x23, #0x0                   	// #0
  43b788:	mov	w24, #0x0                   	// #0
  43b78c:	mov	x1, #0x30                  	// #48
  43b790:	mov	x0, x19
  43b794:	bl	431eb0 <ferror@plt+0x2f180>
  43b798:	mov	x2, x0
  43b79c:	mov	w1, #0x2                   	// #2
  43b7a0:	mov	x0, x19
  43b7a4:	bl	435d8c <ferror@plt+0x3305c>
  43b7a8:	mov	x20, x0
  43b7ac:	str	x23, [x0]
  43b7b0:	strh	w22, [x0, #16]
  43b7b4:	ldrb	w0, [x0, #19]
  43b7b8:	bfi	w0, w24, #2, #1
  43b7bc:	strb	w0, [x20, #19]
  43b7c0:	ldr	x23, [x19]
  43b7c4:	ldrb	w2, [x19, #1124]
  43b7c8:	ldr	x1, [x21, #16]
  43b7cc:	mov	x0, x19
  43b7d0:	bl	43a524 <ferror@plt+0x377f4>
  43b7d4:	str	x0, [x23]
  43b7d8:	ldrb	w0, [x19, #24]
  43b7dc:	add	w0, w0, #0x1
  43b7e0:	strb	w0, [x19, #24]
  43b7e4:	mov	w2, #0x0                   	// #0
  43b7e8:	mov	x1, x20
  43b7ec:	mov	x0, x19
  43b7f0:	bl	43a93c <ferror@plt+0x37c0c>
  43b7f4:	ldrb	w0, [x19, #24]
  43b7f8:	sub	w0, w0, #0x1
  43b7fc:	strb	w0, [x19, #24]
  43b800:	mov	w1, w22
  43b804:	mov	x0, x19
  43b808:	bl	435d44 <ferror@plt+0x33014>
  43b80c:	ldr	x3, [x19, #1312]
  43b810:	ldr	x1, [x19, #1328]
  43b814:	cmp	x3, x1
  43b818:	b.cs	43b844 <ferror@plt+0x38b14>  // b.hs, b.nlast
  43b81c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43b820:	add	x0, x0, #0x28
  43b824:	ldurb	w2, [x1, #-1]
  43b828:	ldrh	w2, [x0, x2, lsl #1]
  43b82c:	tst	w2, #0xc00
  43b830:	b.eq	43b844 <ferror@plt+0x38b14>  // b.none
  43b834:	sub	x1, x1, #0x1
  43b838:	cmp	x3, x1
  43b83c:	b.ne	43b824 <ferror@plt+0x38af4>  // b.any
  43b840:	mov	x1, x3
  43b844:	str	x1, [x19, #1328]
  43b848:	mov	w2, #0x0                   	// #0
  43b84c:	mov	x1, x20
  43b850:	mov	x0, x19
  43b854:	bl	43a5b8 <ferror@plt+0x37888>
  43b858:	mov	x0, x20
  43b85c:	ldp	x19, x20, [sp, #16]
  43b860:	ldp	x21, x22, [sp, #32]
  43b864:	ldp	x23, x24, [sp, #48]
  43b868:	ldp	x29, x30, [sp], #64
  43b86c:	ret
  43b870:	ldr	x0, [x19, #136]
  43b874:	ldr	x1, [x0, #16]
  43b878:	add	x1, x1, #0x1
  43b87c:	mov	w22, #0x0                   	// #0
  43b880:	mov	w24, #0x1                   	// #1
  43b884:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  43b888:	add	x23, x23, #0x28
  43b88c:	mov	w2, w24
  43b890:	mov	x0, x19
  43b894:	bl	43a524 <ferror@plt+0x377f4>
  43b898:	mov	x20, x0
  43b89c:	ldrb	w0, [x0]
  43b8a0:	ldrh	w1, [x23, w0, sxtw #1]
  43b8a4:	tbnz	w1, #9, 43b8b8 <ferror@plt+0x38b88>
  43b8a8:	cmp	w0, #0x24
  43b8ac:	b.ne	43b948 <ferror@plt+0x38c18>  // b.any
  43b8b0:	ldrb	w1, [x19, #1146]
  43b8b4:	cbz	w1, 43b948 <ferror@plt+0x38c18>
  43b8b8:	mov	x1, x20
  43b8bc:	mov	x0, x19
  43b8c0:	bl	43a874 <ferror@plt+0x37b44>
  43b8c4:	mov	x2, x0
  43b8c8:	mov	x3, x0
  43b8cc:	mov	w1, w22
  43b8d0:	mov	x0, x19
  43b8d4:	bl	435c28 <ferror@plt+0x32ef8>
  43b8d8:	and	w0, w0, #0xff
  43b8dc:	cbz	w0, 43b95c <ferror@plt+0x38c2c>
  43b8e0:	add	w22, w22, #0x1
  43b8e4:	ldr	x0, [x19, #136]
  43b8e8:	mov	w2, w24
  43b8ec:	ldr	x1, [x0, #16]
  43b8f0:	mov	x0, x19
  43b8f4:	bl	43a524 <ferror@plt+0x377f4>
  43b8f8:	mov	x20, x0
  43b8fc:	ldrb	w0, [x0]
  43b900:	cmp	w0, #0x2c
  43b904:	b.eq	43b940 <ferror@plt+0x38c10>  // b.none
  43b908:	cmp	w0, #0x29
  43b90c:	cset	w0, eq  // eq = none
  43b910:	cbz	w0, 43b95c <ferror@plt+0x38c2c>
  43b914:	ldr	x0, [x19, #136]
  43b918:	ldrb	w1, [x20]
  43b91c:	cmp	w1, #0x29
  43b920:	cinc	x20, x20, eq  // eq = none
  43b924:	str	x20, [x0, #16]
  43b928:	ubfiz	x1, x22, #3, #32
  43b92c:	mov	x0, x19
  43b930:	bl	431f14 <ferror@plt+0x2f1e4>
  43b934:	mov	x23, x0
  43b938:	mov	w24, #0x1                   	// #1
  43b93c:	b	43b78c <ferror@plt+0x38a5c>
  43b940:	add	x1, x20, #0x1
  43b944:	b	43b88c <ferror@plt+0x38b5c>
  43b948:	cmp	w0, #0x29
  43b94c:	cset	w0, eq  // eq = none
  43b950:	cmp	w22, #0x0
  43b954:	csel	w0, w0, wzr, eq  // eq = none
  43b958:	b	43b910 <ferror@plt+0x38be0>
  43b95c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43b960:	add	x2, x2, #0x300
  43b964:	mov	w1, #0x3                   	// #3
  43b968:	mov	x0, x19
  43b96c:	bl	426a10 <ferror@plt+0x23ce0>
  43b970:	ldr	x0, [x19, #136]
  43b974:	ldrb	w1, [x20]
  43b978:	cmp	w1, #0x29
  43b97c:	cinc	x20, x20, eq  // eq = none
  43b980:	str	x20, [x0, #16]
  43b984:	ldr	x20, [x19]
  43b988:	ldrb	w2, [x19, #1124]
  43b98c:	ldr	x1, [x21, #16]
  43b990:	mov	x0, x19
  43b994:	bl	43a524 <ferror@plt+0x377f4>
  43b998:	str	x0, [x20]
  43b99c:	ldrb	w0, [x19, #24]
  43b9a0:	add	w0, w0, #0x1
  43b9a4:	strb	w0, [x19, #24]
  43b9a8:	mov	w2, #0x0                   	// #0
  43b9ac:	mov	x1, #0x0                   	// #0
  43b9b0:	mov	x0, x19
  43b9b4:	bl	43a93c <ferror@plt+0x37c0c>
  43b9b8:	ldrb	w0, [x19, #24]
  43b9bc:	sub	w0, w0, #0x1
  43b9c0:	strb	w0, [x19, #24]
  43b9c4:	mov	w1, w22
  43b9c8:	mov	x0, x19
  43b9cc:	bl	435d44 <ferror@plt+0x33014>
  43b9d0:	mov	x20, #0x0                   	// #0
  43b9d4:	b	43b858 <ferror@plt+0x38b28>
  43b9d8:	stp	x29, x30, [sp, #-80]!
  43b9dc:	mov	x29, sp
  43b9e0:	stp	x19, x20, [sp, #16]
  43b9e4:	stp	x21, x22, [sp, #32]
  43b9e8:	mov	x19, x0
  43b9ec:	mov	x20, x1
  43b9f0:	ldr	w1, [x0, #12]
  43b9f4:	ldr	w0, [x20, #12]
  43b9f8:	add	w0, w1, w0
  43b9fc:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  43ba00:	mov	x21, x0
  43ba04:	ldr	w2, [x19, #12]
  43ba08:	add	x22, x0, x2
  43ba0c:	strb	wzr, [sp, #79]
  43ba10:	strb	wzr, [sp, #78]
  43ba14:	ldrh	w0, [x19, #16]
  43ba18:	cbz	w0, 43bac4 <ferror@plt+0x38d94>
  43ba1c:	ldr	x19, [x19, #24]
  43ba20:	ldr	x20, [x20, #24]
  43ba24:	ldrh	w1, [x19, #4]
  43ba28:	ldrh	w0, [x20, #4]
  43ba2c:	cmp	w1, w0
  43ba30:	b.ne	43bb3c <ferror@plt+0x38e0c>  // b.any
  43ba34:	str	x23, [sp, #48]
  43ba38:	mov	x1, x19
  43ba3c:	add	x3, sp, #0x4f
  43ba40:	ldr	w2, [x1], #6
  43ba44:	mov	x0, x21
  43ba48:	bl	43a304 <ferror@plt+0x375d4>
  43ba4c:	mov	x23, x0
  43ba50:	mov	x1, x20
  43ba54:	add	x3, sp, #0x4e
  43ba58:	ldr	w2, [x1], #6
  43ba5c:	mov	x0, x22
  43ba60:	bl	43a304 <ferror@plt+0x375d4>
  43ba64:	cmp	x23, x0
  43ba68:	b.ne	43bb44 <ferror@plt+0x38e14>  // b.any
  43ba6c:	mov	x2, x23
  43ba70:	mov	x1, x22
  43ba74:	mov	x0, x21
  43ba78:	bl	4029e0 <memcmp@plt>
  43ba7c:	cbnz	w0, 43bb50 <ferror@plt+0x38e20>
  43ba80:	ldrh	w0, [x19, #4]
  43ba84:	cbz	w0, 43bb5c <ferror@plt+0x38e2c>
  43ba88:	ldr	w1, [x19]
  43ba8c:	add	x1, x1, #0xd
  43ba90:	and	x1, x1, #0xfffffffffffffff8
  43ba94:	add	x19, x19, x1
  43ba98:	ldr	w1, [x20]
  43ba9c:	add	x1, x1, #0xd
  43baa0:	and	x1, x1, #0xfffffffffffffff8
  43baa4:	add	x20, x20, x1
  43baa8:	ldrh	w1, [x19, #4]
  43baac:	ldrh	w0, [x20, #4]
  43bab0:	cmp	w1, w0
  43bab4:	b.eq	43ba38 <ferror@plt+0x38d08>  // b.none
  43bab8:	mov	w19, #0x1                   	// #1
  43babc:	ldr	x23, [sp, #48]
  43bac0:	b	43bb00 <ferror@plt+0x38dd0>
  43bac4:	str	x23, [sp, #48]
  43bac8:	add	x3, sp, #0x4f
  43bacc:	ldr	x1, [x19, #24]
  43bad0:	mov	x0, x21
  43bad4:	bl	43a304 <ferror@plt+0x375d4>
  43bad8:	mov	x23, x0
  43badc:	add	x3, sp, #0x4e
  43bae0:	ldr	w2, [x20, #12]
  43bae4:	ldr	x1, [x20, #24]
  43bae8:	mov	x0, x22
  43baec:	bl	43a304 <ferror@plt+0x375d4>
  43baf0:	mov	w19, #0x1                   	// #1
  43baf4:	cmp	x23, x0
  43baf8:	b.eq	43bb1c <ferror@plt+0x38dec>  // b.none
  43bafc:	ldr	x23, [sp, #48]
  43bb00:	mov	x0, x21
  43bb04:	bl	402a90 <free@plt>
  43bb08:	mov	w0, w19
  43bb0c:	ldp	x19, x20, [sp, #16]
  43bb10:	ldp	x21, x22, [sp, #32]
  43bb14:	ldp	x29, x30, [sp], #80
  43bb18:	ret
  43bb1c:	mov	x2, x23
  43bb20:	mov	x1, x22
  43bb24:	mov	x0, x21
  43bb28:	bl	4029e0 <memcmp@plt>
  43bb2c:	cmp	w0, #0x0
  43bb30:	cset	w19, ne  // ne = any
  43bb34:	ldr	x23, [sp, #48]
  43bb38:	b	43bb00 <ferror@plt+0x38dd0>
  43bb3c:	mov	w19, #0x1                   	// #1
  43bb40:	b	43bb00 <ferror@plt+0x38dd0>
  43bb44:	mov	w19, #0x1                   	// #1
  43bb48:	ldr	x23, [sp, #48]
  43bb4c:	b	43bb00 <ferror@plt+0x38dd0>
  43bb50:	mov	w19, #0x1                   	// #1
  43bb54:	ldr	x23, [sp, #48]
  43bb58:	b	43bb00 <ferror@plt+0x38dd0>
  43bb5c:	mov	w19, #0x0                   	// #0
  43bb60:	ldr	x23, [sp, #48]
  43bb64:	b	43bb00 <ferror@plt+0x38dd0>
  43bb68:	stp	x29, x30, [sp, #-48]!
  43bb6c:	mov	x29, sp
  43bb70:	stp	x19, x20, [sp, #16]
  43bb74:	stp	x21, x22, [sp, #32]
  43bb78:	mov	x19, x0
  43bb7c:	bl	430388 <ferror@plt+0x2d658>
  43bb80:	ldrb	w0, [x0, #4]
  43bb84:	cmp	w0, #0x25
  43bb88:	b.eq	43bbac <ferror@plt+0x38e7c>  // b.none
  43bb8c:	mov	w1, #0x1                   	// #1
  43bb90:	mov	x0, x19
  43bb94:	bl	435970 <ferror@plt+0x32c40>
  43bb98:	mov	sp, x29
  43bb9c:	ldp	x19, x20, [sp, #16]
  43bba0:	ldp	x21, x22, [sp, #32]
  43bba4:	ldp	x29, x30, [sp], #48
  43bba8:	ret
  43bbac:	mov	x0, x19
  43bbb0:	bl	430388 <ferror@plt+0x2d658>
  43bbb4:	ldrb	w0, [x0, #4]
  43bbb8:	cmp	w0, #0x37
  43bbbc:	b.eq	43bbd0 <ferror@plt+0x38ea0>  // b.none
  43bbc0:	mov	w1, #0x2                   	// #2
  43bbc4:	mov	x0, x19
  43bbc8:	bl	435970 <ferror@plt+0x32c40>
  43bbcc:	b	43bb98 <ferror@plt+0x38e68>
  43bbd0:	mov	x0, x19
  43bbd4:	bl	430388 <ferror@plt+0x2d658>
  43bbd8:	mov	x20, x0
  43bbdc:	ldrb	w0, [x0, #4]
  43bbe0:	cmp	w0, #0x3e
  43bbe4:	b.ne	43bc1c <ferror@plt+0x38eec>  // b.any
  43bbe8:	ldr	w2, [x20, #8]
  43bbec:	cmp	w2, #0x4
  43bbf0:	b.ls	43bc1c <ferror@plt+0x38eec>  // b.plast
  43bbf4:	ldr	x1, [x20, #16]
  43bbf8:	sub	w0, w2, #0x2
  43bbfc:	ldrb	w0, [x1, w0, uxtw]
  43bc00:	cmp	w0, #0x2f
  43bc04:	b.ne	43bc1c <ferror@plt+0x38eec>  // b.any
  43bc08:	sub	w0, w2, #0x3
  43bc0c:	mov	w3, w0
  43bc10:	ldrb	w0, [x1, w0, uxtw]
  43bc14:	cmp	w0, #0x2f
  43bc18:	b.eq	43bc2c <ferror@plt+0x38efc>  // b.none
  43bc1c:	mov	w1, #0x3                   	// #3
  43bc20:	mov	x0, x19
  43bc24:	bl	435970 <ferror@plt+0x32c40>
  43bc28:	b	43bb98 <ferror@plt+0x38e68>
  43bc2c:	ldr	x21, [x19, #920]
  43bc30:	cbz	x21, 43bb98 <ferror@plt+0x38e68>
  43bc34:	add	x0, x3, #0xf
  43bc38:	and	x0, x0, #0x1fffffff0
  43bc3c:	sub	sp, sp, x0
  43bc40:	mov	x22, sp
  43bc44:	sub	w2, w2, #0x4
  43bc48:	add	x1, x1, #0x1
  43bc4c:	mov	x0, x22
  43bc50:	bl	402620 <memcpy@plt>
  43bc54:	ldr	w0, [x20, #8]
  43bc58:	sub	w0, w0, #0x4
  43bc5c:	strb	wzr, [x22, w0, uxtw]
  43bc60:	mov	x1, x22
  43bc64:	mov	x0, x19
  43bc68:	blr	x21
  43bc6c:	b	43bb98 <ferror@plt+0x38e68>
  43bc70:	str	w1, [x0, #1116]
  43bc74:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43bc78:	add	x3, x3, #0x6e8
  43bc7c:	sbfiz	x2, x1, #4, #32
  43bc80:	sub	x1, x2, w1, sxtw
  43bc84:	add	x2, x3, x1
  43bc88:	ldrb	w1, [x3, x1]
  43bc8c:	strb	w1, [x0, #1152]
  43bc90:	ldrb	w1, [x2, #1]
  43bc94:	strb	w1, [x0, #1120]
  43bc98:	ldrb	w1, [x2, #2]
  43bc9c:	strb	w1, [x0, #1127]
  43bca0:	ldrb	w1, [x2, #3]
  43bca4:	strb	w1, [x0, #1147]
  43bca8:	ldrb	w1, [x2, #4]
  43bcac:	strb	w1, [x0, #1164]
  43bcb0:	ldrb	w1, [x2, #5]
  43bcb4:	strb	w1, [x0, #1153]
  43bcb8:	ldrb	w1, [x2, #6]
  43bcbc:	strb	w1, [x0, #1126]
  43bcc0:	ldrb	w1, [x2, #7]
  43bcc4:	strb	w1, [x0, #1128]
  43bcc8:	ldrb	w1, [x2, #8]
  43bccc:	strb	w1, [x0, #1130]
  43bcd0:	ldrb	w1, [x2, #9]
  43bcd4:	strb	w1, [x0, #1161]
  43bcd8:	ldrb	w1, [x2, #10]
  43bcdc:	strb	w1, [x0, #1165]
  43bce0:	ldrb	w1, [x2, #11]
  43bce4:	strb	w1, [x0, #1166]
  43bce8:	ldrb	w1, [x2, #12]
  43bcec:	strb	w1, [x0, #1125]
  43bcf0:	ldrb	w1, [x2, #13]
  43bcf4:	strb	w1, [x0, #1129]
  43bcf8:	ldrb	w1, [x2, #14]
  43bcfc:	strb	w1, [x0, #1167]
  43bd00:	ret
  43bd04:	stp	x29, x30, [sp, #-64]!
  43bd08:	mov	x29, sp
  43bd0c:	stp	x19, x20, [sp, #16]
  43bd10:	stp	x21, x22, [sp, #32]
  43bd14:	str	x23, [sp, #48]
  43bd18:	mov	w23, w0
  43bd1c:	mov	x21, x1
  43bd20:	mov	x22, x2
  43bd24:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43bd28:	ldr	w0, [x0, #2472]
  43bd2c:	cbz	w0, 43beec <ferror@plt+0x391bc>
  43bd30:	mov	x1, #0x588                 	// #1416
  43bd34:	mov	x0, #0x1                   	// #1
  43bd38:	bl	454d6c <_obstack_memory_used@@Base+0x9cc>
  43bd3c:	mov	x19, x0
  43bd40:	add	x20, x0, #0x50
  43bd44:	stp	xzr, xzr, [x0, #80]
  43bd48:	stp	xzr, xzr, [x0, #96]
  43bd4c:	stp	xzr, xzr, [x0, #112]
  43bd50:	str	xzr, [x0, #128]
  43bd54:	mov	w1, w23
  43bd58:	bl	43bc70 <ferror@plt+0x38f40>
  43bd5c:	mov	w0, #0x1                   	// #1
  43bd60:	strb	w0, [x19, #1137]
  43bd64:	strb	w0, [x19, #1123]
  43bd68:	strb	w0, [x19, #1124]
  43bd6c:	mov	w1, #0x8                   	// #8
  43bd70:	str	w1, [x19, #1112]
  43bd74:	strb	w0, [x19, #1158]
  43bd78:	mov	w1, #0x2                   	// #2
  43bd7c:	strb	w1, [x19, #1136]
  43bd80:	strb	w0, [x19, #1140]
  43bd84:	mov	w2, #0xffffffff            	// #-1
  43bd88:	strb	w2, [x19, #1198]
  43bd8c:	strb	wzr, [x19, #1199]
  43bd90:	strb	w0, [x19, #1132]
  43bd94:	strb	wzr, [x19, #1139]
  43bd98:	strb	w0, [x19, #1146]
  43bd9c:	strb	w0, [x19, #1148]
  43bda0:	strb	w0, [x19, #1142]
  43bda4:	strb	w0, [x19, #1143]
  43bda8:	strb	wzr, [x19, #1144]
  43bdac:	strb	w1, [x19, #1157]
  43bdb0:	mov	w1, #0x1                   	// #1
  43bdb4:	str	w1, [x19, #1192]
  43bdb8:	strb	w0, [x19, #1162]
  43bdbc:	strb	w0, [x19, #1245]
  43bdc0:	strb	w0, [x19, #1163]
  43bdc4:	strb	wzr, [x19, #1134]
  43bdc8:	mov	x1, #0x40                  	// #64
  43bdcc:	str	x1, [x19, #1208]
  43bdd0:	mov	x1, #0x8                   	// #8
  43bdd4:	str	x1, [x19, #1216]
  43bdd8:	mov	x1, #0x20                  	// #32
  43bddc:	str	x1, [x19, #1232]
  43bde0:	str	x1, [x19, #1224]
  43bde4:	strb	wzr, [x19, #1240]
  43bde8:	strb	w0, [x19, #1241]
  43bdec:	strb	w0, [x19, #1242]
  43bdf0:	bl	41ff00 <ferror@plt+0x1d1d0>
  43bdf4:	str	x0, [x19, #1168]
  43bdf8:	str	xzr, [x19, #1176]
  43bdfc:	bl	41ff00 <ferror@plt+0x1d1d0>
  43be00:	str	x0, [x19, #1184]
  43be04:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  43be08:	add	x0, x0, #0xd70
  43be0c:	str	x0, [x19, #224]
  43be10:	str	x22, [x19, #40]
  43be14:	ldrb	w0, [x19, #1123]
  43be18:	cmp	w0, #0x0
  43be1c:	cset	w0, eq  // eq = none
  43be20:	strb	w0, [x19, #21]
  43be24:	mov	w0, #0x53                  	// #83
  43be28:	strb	w0, [x19, #668]
  43be2c:	str	xzr, [x19, #672]
  43be30:	mov	w0, #0x16                  	// #22
  43be34:	strb	w0, [x19, #692]
  43be38:	strh	wzr, [x19, #694]
  43be3c:	add	x22, x19, #0x1c8
  43be40:	mov	w1, #0xfa                  	// #250
  43be44:	mov	x0, x22
  43be48:	bl	42e408 <ferror@plt+0x2b6d8>
  43be4c:	str	x22, [x19, #488]
  43be50:	ldr	x0, [x19, #472]
  43be54:	str	x0, [x19, #448]
  43be58:	str	x20, [x19, #136]
  43be5c:	str	xzr, [x19, #120]
  43be60:	str	xzr, [x19, #80]
  43be64:	str	xzr, [x19, #88]
  43be68:	mov	x1, #0x0                   	// #0
  43be6c:	mov	x0, x19
  43be70:	bl	42f1e8 <ferror@plt+0x2c4b8>
  43be74:	str	x0, [x19, #56]
  43be78:	mov	x1, #0x0                   	// #0
  43be7c:	mov	x0, x19
  43be80:	bl	42f1e8 <ferror@plt+0x2c4b8>
  43be84:	str	x0, [x19, #64]
  43be88:	str	xzr, [x19, #1400]
  43be8c:	str	wzr, [x19, #1408]
  43be90:	mov	x0, #0xfffffffffffffffe    	// #-2
  43be94:	str	x0, [x19, #656]
  43be98:	mov	x0, x19
  43be9c:	bl	429194 <ferror@plt+0x26464>
  43bea0:	adrp	x4, 402000 <_ZGTtnam@plt-0x610>
  43bea4:	add	x4, x4, #0xa90
  43bea8:	adrp	x3, 454000 <ferror@plt+0x512d0>
  43beac:	add	x3, x3, #0xd38
  43beb0:	mov	x2, #0x0                   	// #0
  43beb4:	mov	x1, #0x0                   	// #0
  43beb8:	add	x0, x19, #0x328
  43bebc:	bl	454174 <_obstack_begin@@Base>
  43bec0:	mov	x0, x19
  43bec4:	bl	42ca3c <ferror@plt+0x29d0c>
  43bec8:	mov	x1, x21
  43becc:	mov	x0, x19
  43bed0:	bl	42d2d4 <ferror@plt+0x2a5a4>
  43bed4:	mov	x0, x19
  43bed8:	ldp	x19, x20, [sp, #16]
  43bedc:	ldp	x21, x22, [sp, #32]
  43bee0:	ldr	x23, [sp, #48]
  43bee4:	ldp	x29, x30, [sp], #64
  43bee8:	ret
  43beec:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  43bef0:	add	x19, x0, #0x9a8
  43bef4:	mov	w1, #0x1                   	// #1
  43bef8:	str	w1, [x0, #2472]
  43befc:	bl	42da30 <ferror@plt+0x2ad00>
  43bf00:	mov	w1, #0x23                  	// #35
  43bf04:	strb	w1, [x19, #69]
  43bf08:	mov	w1, #0x5d                  	// #93
  43bf0c:	strb	w1, [x19, #49]
  43bf10:	mov	w1, #0x7c                  	// #124
  43bf14:	strb	w1, [x19, #41]
  43bf18:	mov	w1, #0x5b                  	// #91
  43bf1c:	strb	w1, [x19, #48]
  43bf20:	mov	w1, #0x5e                  	// #94
  43bf24:	strb	w1, [x19, #47]
  43bf28:	mov	w1, #0x7d                  	// #125
  43bf2c:	strb	w1, [x19, #70]
  43bf30:	mov	w1, #0x5c                  	// #92
  43bf34:	strb	w1, [x19, #55]
  43bf38:	mov	w1, #0x7b                  	// #123
  43bf3c:	strb	w1, [x19, #68]
  43bf40:	mov	w1, #0x7e                  	// #126
  43bf44:	strb	w1, [x19, #53]
  43bf48:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  43bf4c:	add	x1, x1, #0xdb8
  43bf50:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  43bf54:	add	x0, x0, #0x848
  43bf58:	bl	402840 <bindtextdomain@plt>
  43bf5c:	b	43bd30 <ferror@plt+0x39000>
  43bf60:	str	x1, [x0, #40]
  43bf64:	ret
  43bf68:	stp	x29, x30, [sp, #-48]!
  43bf6c:	mov	x29, sp
  43bf70:	stp	x19, x20, [sp, #16]
  43bf74:	stp	x21, x22, [sp, #32]
  43bf78:	mov	x19, x0
  43bf7c:	ldr	x0, [x0, #1096]
  43bf80:	bl	402a90 <free@plt>
  43bf84:	ldr	x0, [x19]
  43bf88:	cbz	x0, 43bf9c <ferror@plt+0x3926c>
  43bf8c:	mov	x0, x19
  43bf90:	bl	425d00 <ferror@plt+0x22fd0>
  43bf94:	ldr	x0, [x19]
  43bf98:	cbnz	x0, 43bf8c <ferror@plt+0x3925c>
  43bf9c:	ldr	x0, [x19, #1312]
  43bfa0:	bl	402a90 <free@plt>
  43bfa4:	ldr	x0, [x19, #504]
  43bfa8:	cbz	x0, 43bfb8 <ferror@plt+0x39288>
  43bfac:	bl	402a90 <free@plt>
  43bfb0:	str	xzr, [x19, #504]
  43bfb4:	str	wzr, [x19, #512]
  43bfb8:	ldr	x0, [x19, #712]
  43bfbc:	cbz	x0, 43bfc4 <ferror@plt+0x39294>
  43bfc0:	bl	439108 <ferror@plt+0x363d8>
  43bfc4:	mov	x1, #0x0                   	// #0
  43bfc8:	add	x0, x19, #0x328
  43bfcc:	bl	454320 <_obstack_free@@Base>
  43bfd0:	mov	x0, x19
  43bfd4:	bl	42d278 <ferror@plt+0x2a548>
  43bfd8:	mov	x0, x19
  43bfdc:	bl	42cb24 <ferror@plt+0x29df4>
  43bfe0:	mov	x0, x19
  43bfe4:	bl	41f8ec <ferror@plt+0x1cbbc>
  43bfe8:	ldr	x0, [x19, #56]
  43bfec:	bl	42f40c <ferror@plt+0x2c6dc>
  43bff0:	ldr	x0, [x19, #64]
  43bff4:	bl	42f40c <ferror@plt+0x2c6dc>
  43bff8:	ldr	x0, [x19, #72]
  43bffc:	bl	42f40c <ferror@plt+0x2c6dc>
  43c000:	add	x22, x19, #0x1c8
  43c004:	ldr	x20, [x19, #456]
  43c008:	ldr	x0, [x22, #16]
  43c00c:	bl	402a90 <free@plt>
  43c010:	b	43c020 <ferror@plt+0x392f0>
  43c014:	mov	x0, x20
  43c018:	bl	402a90 <free@plt>
  43c01c:	mov	x20, x21
  43c020:	cbz	x20, 43c03c <ferror@plt+0x3930c>
  43c024:	ldr	x21, [x20]
  43c028:	ldr	x0, [x20, #16]
  43c02c:	bl	402a90 <free@plt>
  43c030:	cmp	x20, x22
  43c034:	b.ne	43c014 <ferror@plt+0x392e4>  // b.any
  43c038:	b	43c01c <ferror@plt+0x392ec>
  43c03c:	ldr	x20, [x19, #80]
  43c040:	cbz	x20, 43c054 <ferror@plt+0x39324>
  43c044:	mov	x0, x20
  43c048:	ldr	x20, [x20]
  43c04c:	bl	402a90 <free@plt>
  43c050:	cbnz	x20, 43c044 <ferror@plt+0x39314>
  43c054:	ldr	x0, [x19, #1384]
  43c058:	cbz	x0, 43c094 <ferror@plt+0x39364>
  43c05c:	ldr	w0, [x19, #1392]
  43c060:	cmp	w0, #0x0
  43c064:	b.le	43c08c <ferror@plt+0x3935c>
  43c068:	mov	x20, #0x0                   	// #0
  43c06c:	ldr	x1, [x19, #1384]
  43c070:	lsl	x0, x20, #4
  43c074:	ldr	x0, [x1, x0]
  43c078:	bl	402a90 <free@plt>
  43c07c:	add	x20, x20, #0x1
  43c080:	ldr	w0, [x19, #1392]
  43c084:	cmp	w0, w20
  43c088:	b.gt	43c06c <ferror@plt+0x3933c>
  43c08c:	ldr	x0, [x19, #1384]
  43c090:	bl	402a90 <free@plt>
  43c094:	ldr	x0, [x19, #1400]
  43c098:	cbz	x0, 43c0c0 <ferror@plt+0x39390>
  43c09c:	ldr	x20, [x19, #1400]
  43c0a0:	ldr	x0, [x20]
  43c0a4:	str	x0, [x19, #1400]
  43c0a8:	ldr	x0, [x20, #8]
  43c0ac:	bl	402a90 <free@plt>
  43c0b0:	mov	x0, x20
  43c0b4:	bl	402a90 <free@plt>
  43c0b8:	ldr	x0, [x19, #1400]
  43c0bc:	cbnz	x0, 43c09c <ferror@plt+0x3936c>
  43c0c0:	mov	x0, x19
  43c0c4:	bl	402a90 <free@plt>
  43c0c8:	ldp	x19, x20, [sp, #16]
  43c0cc:	ldp	x21, x22, [sp, #32]
  43c0d0:	ldp	x29, x30, [sp], #48
  43c0d4:	ret
  43c0d8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c0dc:	add	x1, x1, #0x6e8
  43c0e0:	add	x1, x1, #0x150
  43c0e4:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c0e8:	add	x3, x3, #0x6e8
  43c0ec:	add	x3, x3, #0x200
  43c0f0:	ldrh	w2, [x1, #10]
  43c0f4:	cmp	w2, w0
  43c0f8:	b.eq	43c110 <ferror@plt+0x393e0>  // b.none
  43c0fc:	add	x1, x1, #0x10
  43c100:	cmp	x1, x3
  43c104:	b.ne	43c0f0 <ferror@plt+0x393c0>  // b.any
  43c108:	mov	x0, #0x0                   	// #0
  43c10c:	ret
  43c110:	ldr	x0, [x1]
  43c114:	b	43c10c <ferror@plt+0x393dc>
  43c118:	stp	x29, x30, [sp, #-48]!
  43c11c:	mov	x29, sp
  43c120:	stp	x19, x20, [sp, #16]
  43c124:	str	x21, [sp, #32]
  43c128:	mov	x20, x0
  43c12c:	ldrb	w0, [x0, #1160]
  43c130:	mov	x21, #0xa                   	// #10
  43c134:	cbnz	w0, 43c154 <ferror@plt+0x39424>
  43c138:	ldrb	w0, [x20, #1243]
  43c13c:	mov	x21, #0xb                   	// #11
  43c140:	cbz	w0, 43c154 <ferror@plt+0x39424>
  43c144:	ldrb	w0, [x20, #1153]
  43c148:	cmp	w0, #0x0
  43c14c:	cset	x21, eq  // eq = none
  43c150:	add	x21, x21, #0xb
  43c154:	adrp	x19, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c158:	add	x19, x19, #0x6e8
  43c15c:	add	x19, x19, #0x200
  43c160:	add	x21, x19, x21, lsl #4
  43c164:	b	43c1ac <ferror@plt+0x3947c>
  43c168:	ldrh	w2, [x19, #8]
  43c16c:	ldr	x1, [x19]
  43c170:	mov	x0, x20
  43c174:	bl	42d2b4 <ferror@plt+0x2a584>
  43c178:	ldrb	w1, [x0, #18]
  43c17c:	orr	w1, w1, #0x3
  43c180:	strb	w1, [x0, #18]
  43c184:	ldrb	w1, [x19, #12]
  43c188:	cbz	w1, 43c198 <ferror@plt+0x39468>
  43c18c:	ldrh	w1, [x0, #18]
  43c190:	orr	w1, w1, #0x20
  43c194:	strh	w1, [x0, #18]
  43c198:	ldrh	w1, [x19, #10]
  43c19c:	str	w1, [x0, #24]
  43c1a0:	add	x19, x19, #0x10
  43c1a4:	cmp	x19, x21
  43c1a8:	b.cs	43c1d0 <ferror@plt+0x394a0>  // b.hs, b.nlast
  43c1ac:	ldrh	w0, [x19, #10]
  43c1b0:	cmp	w0, #0xa
  43c1b4:	b.ne	43c168 <ferror@plt+0x39438>  // b.any
  43c1b8:	ldr	w0, [x20, #1116]
  43c1bc:	cmp	w0, #0x15
  43c1c0:	b.eq	43c1a0 <ferror@plt+0x39470>  // b.none
  43c1c4:	ldr	x0, [x20, #1040]
  43c1c8:	cbnz	x0, 43c168 <ferror@plt+0x39438>
  43c1cc:	b	43c1a0 <ferror@plt+0x39470>
  43c1d0:	ldp	x19, x20, [sp, #16]
  43c1d4:	ldr	x21, [sp, #32]
  43c1d8:	ldp	x29, x30, [sp], #48
  43c1dc:	ret
  43c1e0:	stp	x29, x30, [sp, #-32]!
  43c1e4:	mov	x29, sp
  43c1e8:	stp	x19, x20, [sp, #16]
  43c1ec:	mov	x19, x0
  43c1f0:	mov	w20, w1
  43c1f4:	bl	43c118 <ferror@plt+0x393e8>
  43c1f8:	ldrb	w0, [x19, #1160]
  43c1fc:	cbnz	w0, 43c220 <ferror@plt+0x394f0>
  43c200:	ldrb	w0, [x19, #1243]
  43c204:	cbz	w0, 43c210 <ferror@plt+0x394e0>
  43c208:	ldrb	w0, [x19, #1153]
  43c20c:	cbz	w0, 43c220 <ferror@plt+0x394f0>
  43c210:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c214:	add	x1, x1, #0x420
  43c218:	mov	x0, x19
  43c21c:	bl	4265d0 <ferror@plt+0x238a0>
  43c220:	ldrb	w0, [x19, #1120]
  43c224:	cbz	w0, 43c2c0 <ferror@plt+0x39590>
  43c228:	ldr	w0, [x19, #1116]
  43c22c:	sub	w1, w0, #0x13
  43c230:	cmp	w1, #0x1
  43c234:	b.ls	43c270 <ferror@plt+0x39540>  // b.plast
  43c238:	sub	w1, w0, #0x11
  43c23c:	cmp	w1, #0x1
  43c240:	b.ls	43c284 <ferror@plt+0x39554>  // b.plast
  43c244:	sub	w1, w0, #0xf
  43c248:	cmp	w1, #0x1
  43c24c:	b.ls	43c298 <ferror@plt+0x39568>  // b.plast
  43c250:	sub	w0, w0, #0xd
  43c254:	cmp	w0, #0x1
  43c258:	b.ls	43c2ac <ferror@plt+0x3957c>  // b.plast
  43c25c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c260:	add	x1, x1, #0x490
  43c264:	mov	x0, x19
  43c268:	bl	4265d0 <ferror@plt+0x238a0>
  43c26c:	b	43c344 <ferror@plt+0x39614>
  43c270:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c274:	add	x1, x1, #0x430
  43c278:	mov	x0, x19
  43c27c:	bl	4265d0 <ferror@plt+0x238a0>
  43c280:	b	43c344 <ferror@plt+0x39614>
  43c284:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c288:	add	x1, x1, #0x448
  43c28c:	mov	x0, x19
  43c290:	bl	4265d0 <ferror@plt+0x238a0>
  43c294:	b	43c344 <ferror@plt+0x39614>
  43c298:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c29c:	add	x1, x1, #0x460
  43c2a0:	mov	x0, x19
  43c2a4:	bl	4265d0 <ferror@plt+0x238a0>
  43c2a8:	b	43c344 <ferror@plt+0x39614>
  43c2ac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c2b0:	add	x1, x1, #0x478
  43c2b4:	mov	x0, x19
  43c2b8:	bl	4265d0 <ferror@plt+0x238a0>
  43c2bc:	b	43c344 <ferror@plt+0x39614>
  43c2c0:	ldr	w0, [x19, #1116]
  43c2c4:	cmp	w0, #0x15
  43c2c8:	b.eq	43c30c <ferror@plt+0x395dc>  // b.none
  43c2cc:	cmp	w0, #0x6
  43c2d0:	b.eq	43c320 <ferror@plt+0x395f0>  // b.none
  43c2d4:	cmp	w0, #0x4
  43c2d8:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  43c2dc:	b.eq	43c334 <ferror@plt+0x39604>  // b.none
  43c2e0:	cmp	w0, #0x3
  43c2e4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  43c2e8:	b.eq	43c3ac <ferror@plt+0x3967c>  // b.none
  43c2ec:	cmp	w0, #0x2
  43c2f0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43c2f4:	b.eq	43c3c0 <ferror@plt+0x39690>  // b.none
  43c2f8:	ldrb	w0, [x19, #1152]
  43c2fc:	cbnz	w0, 43c3d4 <ferror@plt+0x396a4>
  43c300:	ldrb	w0, [x19, #1128]
  43c304:	cbnz	w0, 43c364 <ferror@plt+0x39634>
  43c308:	b	43c384 <ferror@plt+0x39654>
  43c30c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c310:	add	x1, x1, #0x4a8
  43c314:	mov	x0, x19
  43c318:	bl	4265d0 <ferror@plt+0x238a0>
  43c31c:	b	43c344 <ferror@plt+0x39614>
  43c320:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c324:	add	x1, x1, #0x4b8
  43c328:	mov	x0, x19
  43c32c:	bl	4265d0 <ferror@plt+0x238a0>
  43c330:	b	43c344 <ferror@plt+0x39614>
  43c334:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c338:	add	x1, x1, #0x4d8
  43c33c:	mov	x0, x19
  43c340:	bl	4265d0 <ferror@plt+0x238a0>
  43c344:	ldrb	w0, [x19, #1128]
  43c348:	cbz	w0, 43c384 <ferror@plt+0x39654>
  43c34c:	ldrb	w0, [x19, #1120]
  43c350:	cbz	w0, 43c364 <ferror@plt+0x39634>
  43c354:	ldr	w0, [x19, #1116]
  43c358:	sub	w0, w0, #0xb
  43c35c:	cmp	w0, #0x1
  43c360:	b.ls	43c384 <ferror@plt+0x39654>  // b.plast
  43c364:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c368:	add	x1, x1, #0x558
  43c36c:	mov	x0, x19
  43c370:	bl	4265d0 <ferror@plt+0x238a0>
  43c374:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c378:	add	x1, x1, #0x570
  43c37c:	mov	x0, x19
  43c380:	bl	4265d0 <ferror@plt+0x238a0>
  43c384:	cbz	w20, 43c3e8 <ferror@plt+0x396b8>
  43c388:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c38c:	add	x1, x1, #0x588
  43c390:	mov	x0, x19
  43c394:	bl	4265d0 <ferror@plt+0x238a0>
  43c398:	ldrb	w0, [x19, #1122]
  43c39c:	cbnz	w0, 43c3fc <ferror@plt+0x396cc>
  43c3a0:	ldp	x19, x20, [sp, #16]
  43c3a4:	ldp	x29, x30, [sp], #32
  43c3a8:	ret
  43c3ac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c3b0:	add	x1, x1, #0x4f8
  43c3b4:	mov	x0, x19
  43c3b8:	bl	4265d0 <ferror@plt+0x238a0>
  43c3bc:	b	43c344 <ferror@plt+0x39614>
  43c3c0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c3c4:	add	x1, x1, #0x518
  43c3c8:	mov	x0, x19
  43c3cc:	bl	4265d0 <ferror@plt+0x238a0>
  43c3d0:	b	43c344 <ferror@plt+0x39614>
  43c3d4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c3d8:	add	x1, x1, #0x538
  43c3dc:	mov	x0, x19
  43c3e0:	bl	4265d0 <ferror@plt+0x238a0>
  43c3e4:	b	43c344 <ferror@plt+0x39614>
  43c3e8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c3ec:	add	x1, x1, #0x5a0
  43c3f0:	mov	x0, x19
  43c3f4:	bl	4265d0 <ferror@plt+0x238a0>
  43c3f8:	b	43c398 <ferror@plt+0x39668>
  43c3fc:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c400:	add	x1, x1, #0x5b8
  43c404:	mov	x0, x19
  43c408:	bl	4265d0 <ferror@plt+0x238a0>
  43c40c:	b	43c3a0 <ferror@plt+0x39670>
  43c410:	stp	x29, x30, [sp, #-48]!
  43c414:	mov	x29, sp
  43c418:	stp	x19, x20, [sp, #16]
  43c41c:	stp	x21, x22, [sp, #32]
  43c420:	mov	x19, x0
  43c424:	ldrb	w0, [x0, #1120]
  43c428:	cbz	w0, 43c430 <ferror@plt+0x39700>
  43c42c:	strb	wzr, [x19, #1138]
  43c430:	ldrb	w1, [x19, #1155]
  43c434:	cbz	w1, 43c45c <ferror@plt+0x3972c>
  43c438:	ldrb	w1, [x19, #1244]
  43c43c:	cbnz	w1, 43c448 <ferror@plt+0x39718>
  43c440:	mov	w1, #0x1                   	// #1
  43c444:	strb	w1, [x19, #24]
  43c448:	strb	wzr, [x19, #1160]
  43c44c:	ldrb	w1, [x19, #1136]
  43c450:	cmp	w1, #0x2
  43c454:	b.ne	43c488 <ferror@plt+0x39758>  // b.any
  43c458:	b	43c468 <ferror@plt+0x39738>
  43c45c:	ldrb	w1, [x19, #1136]
  43c460:	cmp	w1, #0x2
  43c464:	b.ne	43c478 <ferror@plt+0x39748>  // b.any
  43c468:	ldrb	w1, [x19, #1125]
  43c46c:	cmp	w1, #0x0
  43c470:	cset	w1, eq  // eq = none
  43c474:	strb	w1, [x19, #1136]
  43c478:	ldrb	w1, [x19, #1160]
  43c47c:	cbz	w1, 43c488 <ferror@plt+0x39758>
  43c480:	strb	wzr, [x19, #1125]
  43c484:	strb	wzr, [x19, #1136]
  43c488:	cbz	w0, 43c520 <ferror@plt+0x397f0>
  43c48c:	ldrb	w0, [x19, #1158]
  43c490:	cmp	w0, #0x0
  43c494:	cset	w21, ne  // ne = any
  43c498:	ldrb	w1, [x19, #1159]
  43c49c:	cbz	w1, 43c50c <ferror@plt+0x397dc>
  43c4a0:	mov	w0, #0x84                  	// #132
  43c4a4:	orr	w21, w21, w0
  43c4a8:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c4ac:	add	x20, x20, #0x6e8
  43c4b0:	add	x20, x20, #0x150
  43c4b4:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43c4b8:	add	x22, x22, #0x6e8
  43c4bc:	add	x22, x22, #0x200
  43c4c0:	ldrh	w2, [x20, #8]
  43c4c4:	ldr	x1, [x20]
  43c4c8:	mov	x0, x19
  43c4cc:	bl	42d2b4 <ferror@plt+0x2a584>
  43c4d0:	ldrh	w1, [x0, #18]
  43c4d4:	ubfx	x2, x1, #2, #8
  43c4d8:	orr	w2, w21, w2
  43c4dc:	bfi	w1, w2, #2, #8
  43c4e0:	strh	w1, [x0, #18]
  43c4e4:	ldrb	w1, [x0, #16]
  43c4e8:	and	w1, w1, #0xfffffffe
  43c4ec:	strb	w1, [x0, #16]
  43c4f0:	ldrh	w2, [x20, #10]
  43c4f4:	bfi	w1, w2, #1, #7
  43c4f8:	strb	w1, [x0, #16]
  43c4fc:	add	x20, x20, #0x10
  43c500:	cmp	x20, x22
  43c504:	b.ne	43c4c0 <ferror@plt+0x39790>  // b.any
  43c508:	b	43c510 <ferror@plt+0x397e0>
  43c50c:	cbnz	w0, 43c4a8 <ferror@plt+0x39778>
  43c510:	ldp	x19, x20, [sp, #16]
  43c514:	ldp	x21, x22, [sp, #32]
  43c518:	ldp	x29, x30, [sp], #48
  43c51c:	ret
  43c520:	ldrb	w0, [x19, #1159]
  43c524:	cbz	w0, 43c510 <ferror@plt+0x397e0>
  43c528:	mov	w21, #0x0                   	// #0
  43c52c:	b	43c4a0 <ferror@plt+0x39770>
  43c530:	stp	x29, x30, [sp, #-48]!
  43c534:	mov	x29, sp
  43c538:	stp	x19, x20, [sp, #16]
  43c53c:	mov	x19, x0
  43c540:	mov	x20, x1
  43c544:	ldr	w0, [x0, #1200]
  43c548:	cbz	w0, 43c560 <ferror@plt+0x39830>
  43c54c:	ldr	x0, [x19, #712]
  43c550:	cbz	x0, 43c5c0 <ferror@plt+0x39890>
  43c554:	mov	x1, x20
  43c558:	ldr	x0, [x19, #712]
  43c55c:	bl	43926c <ferror@plt+0x3653c>
  43c560:	mov	w6, #0x0                   	// #0
  43c564:	mov	w5, #0x0                   	// #0
  43c568:	mov	w4, #0x0                   	// #0
  43c56c:	mov	w3, #0x0                   	// #0
  43c570:	add	x2, x19, #0xd8
  43c574:	mov	x1, x20
  43c578:	mov	x0, x19
  43c57c:	bl	42bb44 <ferror@plt+0x28e14>
  43c580:	str	x0, [x19, #288]
  43c584:	bl	42bb34 <ferror@plt+0x28e04>
  43c588:	and	w1, w0, #0xff
  43c58c:	mov	x0, #0x0                   	// #0
  43c590:	cbnz	w1, 43c5b4 <ferror@plt+0x39884>
  43c594:	mov	w3, #0x0                   	// #0
  43c598:	mov	w2, #0x0                   	// #0
  43c59c:	ldr	x1, [x19, #288]
  43c5a0:	mov	x0, x19
  43c5a4:	bl	42c39c <ferror@plt+0x2966c>
  43c5a8:	ldrb	w1, [x19, #1155]
  43c5ac:	mov	x0, x20
  43c5b0:	cbnz	w1, 43c5cc <ferror@plt+0x3989c>
  43c5b4:	ldp	x19, x20, [sp, #16]
  43c5b8:	ldp	x29, x30, [sp], #48
  43c5bc:	ret
  43c5c0:	bl	4390ec <ferror@plt+0x363bc>
  43c5c4:	str	x0, [x19, #712]
  43c5c8:	b	43c554 <ferror@plt+0x39824>
  43c5cc:	mov	x0, x19
  43c5d0:	bl	430388 <ferror@plt+0x2d658>
  43c5d4:	mov	x20, x0
  43c5d8:	ldrb	w0, [x0, #4]
  43c5dc:	cmp	w0, #0x25
  43c5e0:	b.eq	43c614 <ferror@plt+0x398e4>  // b.none
  43c5e4:	mov	w1, #0x1                   	// #1
  43c5e8:	mov	x0, x19
  43c5ec:	bl	435970 <ferror@plt+0x32c40>
  43c5f0:	ldr	x1, [x19, #40]
  43c5f4:	ldr	w0, [x1, #12]
  43c5f8:	sub	w0, w0, #0x1
  43c5fc:	ldr	x1, [x1]
  43c600:	sbfiz	x2, x0, #1, #32
  43c604:	add	x0, x2, w0, sxtw
  43c608:	add	x0, x1, x0, lsl #3
  43c60c:	ldr	x0, [x0, #8]
  43c610:	b	43c5b4 <ferror@plt+0x39884>
  43c614:	str	x21, [sp, #32]
  43c618:	mov	w0, #0x1                   	// #1
  43c61c:	strb	w0, [x19, #16]
  43c620:	mov	x0, x19
  43c624:	bl	430388 <ferror@plt+0x2d658>
  43c628:	mov	x21, x0
  43c62c:	mov	w1, #0x1                   	// #1
  43c630:	mov	x0, x19
  43c634:	bl	435970 <ferror@plt+0x32c40>
  43c638:	strb	wzr, [x19, #16]
  43c63c:	ldrb	w0, [x21, #4]
  43c640:	cmp	w0, #0x37
  43c644:	b.eq	43c650 <ferror@plt+0x39920>  // b.none
  43c648:	ldr	x21, [sp, #32]
  43c64c:	b	43c5e4 <ferror@plt+0x398b4>
  43c650:	ldrh	w1, [x20, #6]
  43c654:	and	w1, w1, #0x1
  43c658:	mov	x0, x19
  43c65c:	bl	424f38 <ferror@plt+0x22208>
  43c660:	cbnz	w0, 43c66c <ferror@plt+0x3993c>
  43c664:	ldr	x21, [sp, #32]
  43c668:	b	43c5e4 <ferror@plt+0x398b4>
  43c66c:	mov	x0, x19
  43c670:	bl	43bb68 <ferror@plt+0x38e38>
  43c674:	ldr	x21, [sp, #32]
  43c678:	b	43c5f0 <ferror@plt+0x398c0>
  43c67c:	stp	x29, x30, [sp, #-32]!
  43c680:	mov	x29, sp
  43c684:	stp	x19, x20, [sp, #16]
  43c688:	mov	x19, x0
  43c68c:	mov	x20, x1
  43c690:	ldrb	w0, [x0, #1151]
  43c694:	cbnz	w0, 43c6d4 <ferror@plt+0x399a4>
  43c698:	ldr	x0, [x19]
  43c69c:	cbz	x0, 43c6b0 <ferror@plt+0x39980>
  43c6a0:	mov	x0, x19
  43c6a4:	bl	425d00 <ferror@plt+0x22fd0>
  43c6a8:	ldr	x0, [x19]
  43c6ac:	cbnz	x0, 43c6a0 <ferror@plt+0x39970>
  43c6b0:	ldr	w0, [x19, #1200]
  43c6b4:	cmp	w0, #0x0
  43c6b8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  43c6bc:	b.ne	43c6ec <ferror@plt+0x399bc>  // b.any
  43c6c0:	ldrb	w0, [x19, #1131]
  43c6c4:	cbnz	w0, 43c714 <ferror@plt+0x399e4>
  43c6c8:	ldp	x19, x20, [sp, #16]
  43c6cc:	ldp	x29, x30, [sp], #32
  43c6d0:	ret
  43c6d4:	mov	x2, #0x0                   	// #0
  43c6d8:	adrp	x1, 434000 <ferror@plt+0x312d0>
  43c6dc:	add	x1, x1, #0xf54
  43c6e0:	mov	x0, x19
  43c6e4:	bl	42d448 <ferror@plt+0x2a718>
  43c6e8:	b	43c698 <ferror@plt+0x39968>
  43c6ec:	mov	w2, #0x48                  	// #72
  43c6f0:	mov	x1, x20
  43c6f4:	ldr	x0, [x19, #712]
  43c6f8:	bl	4394a8 <ferror@plt+0x36778>
  43c6fc:	ldrb	w0, [x19, #1205]
  43c700:	cbz	w0, 43c6c0 <ferror@plt+0x39990>
  43c704:	mov	x1, x20
  43c708:	ldr	x0, [x19, #712]
  43c70c:	bl	4396d4 <ferror@plt+0x369a4>
  43c710:	b	43c6c0 <ferror@plt+0x39990>
  43c714:	mov	x0, x19
  43c718:	bl	42cc88 <ferror@plt+0x29f58>
  43c71c:	b	43c6c8 <ferror@plt+0x39998>
  43c720:	stp	x29, x30, [sp, #-96]!
  43c724:	mov	x29, sp
  43c728:	mov	x5, x0
  43c72c:	add	x0, sp, #0x18
  43c730:	stp	xzr, xzr, [sp, #32]
  43c734:	stp	xzr, xzr, [x0, #24]
  43c738:	stp	xzr, xzr, [x0, #40]
  43c73c:	stp	xzr, xzr, [x0, #56]
  43c740:	str	x5, [sp, #24]
  43c744:	str	w1, [sp, #32]
  43c748:	mov	x1, #0x48                  	// #72
  43c74c:	bl	43c9e0 <ferror@plt+0x39cb0>
  43c750:	cbz	x0, 43c77c <ferror@plt+0x39a4c>
  43c754:	ldp	x2, x3, [sp, #24]
  43c758:	stp	x2, x3, [x0]
  43c75c:	ldp	x2, x3, [sp, #40]
  43c760:	stp	x2, x3, [x0, #16]
  43c764:	ldp	x2, x3, [sp, #56]
  43c768:	stp	x2, x3, [x0, #32]
  43c76c:	ldp	x2, x3, [sp, #72]
  43c770:	stp	x2, x3, [x0, #48]
  43c774:	ldr	x1, [sp, #88]
  43c778:	str	x1, [x0, #64]
  43c77c:	ldp	x29, x30, [sp], #96
  43c780:	ret
  43c784:	stp	x29, x30, [sp, #-48]!
  43c788:	mov	x29, sp
  43c78c:	str	x19, [sp, #16]
  43c790:	mov	x19, x1
  43c794:	str	wzr, [sp, #44]
  43c798:	add	x1, sp, #0x2c
  43c79c:	bl	46c2a8 <_obstack_memory_used@@Base+0x17f08>
  43c7a0:	mov	x1, x0
  43c7a4:	ldr	w0, [x19]
  43c7a8:	cmp	w0, #0x0
  43c7ac:	b.gt	43c800 <ferror@plt+0x39ad0>
  43c7b0:	ldr	w0, [sp, #44]
  43c7b4:	cmp	w0, #0x0
  43c7b8:	cset	x0, eq  // eq = none
  43c7bc:	sub	x1, x1, x0
  43c7c0:	ldr	w0, [x19, #44]
  43c7c4:	cbnz	w0, 43c810 <ferror@plt+0x39ae0>
  43c7c8:	ldr	x5, [x19, #16]
  43c7cc:	mov	x4, #0x0                   	// #0
  43c7d0:	mov	w3, #0x0                   	// #0
  43c7d4:	mov	x2, #0x0                   	// #0
  43c7d8:	ldr	x0, [x19, #32]
  43c7dc:	blr	x5
  43c7e0:	str	w0, [x19, #40]
  43c7e4:	ldr	w0, [x19, #40]
  43c7e8:	cmp	w0, #0x0
  43c7ec:	mov	w0, #0x5                   	// #5
  43c7f0:	csel	w0, w0, wzr, ne  // ne = any
  43c7f4:	ldr	x19, [sp, #16]
  43c7f8:	ldp	x29, x30, [sp], #48
  43c7fc:	ret
  43c800:	sub	w0, w0, #0x1
  43c804:	str	w0, [x19]
  43c808:	mov	w0, #0x0                   	// #0
  43c80c:	b	43c7f4 <ferror@plt+0x39ac4>
  43c810:	ldr	x4, [x19, #32]
  43c814:	ldr	x3, [x19, #24]
  43c818:	ldr	x2, [x19, #16]
  43c81c:	ldr	x0, [x19, #8]
  43c820:	bl	43cef4 <ferror@plt+0x3a1c4>
  43c824:	str	w0, [x19, #40]
  43c828:	b	43c7e4 <ferror@plt+0x39ab4>
  43c82c:	stp	x29, x30, [sp, #-80]!
  43c830:	mov	x29, sp
  43c834:	str	x19, [sp, #16]
  43c838:	mov	x19, x0
  43c83c:	add	w1, w1, #0x1
  43c840:	str	w1, [sp, #32]
  43c844:	str	x0, [sp, #40]
  43c848:	str	x2, [sp, #48]
  43c84c:	str	x3, [sp, #56]
  43c850:	str	x4, [sp, #64]
  43c854:	str	wzr, [sp, #72]
  43c858:	mov	x3, #0x0                   	// #0
  43c85c:	mov	x2, #0x0                   	// #0
  43c860:	mov	x1, #0x1000                	// #4096
  43c864:	bl	43c9e0 <ferror@plt+0x39cb0>
  43c868:	cbz	x0, 43c8ac <ferror@plt+0x39b7c>
  43c86c:	mov	x1, x0
  43c870:	mov	x4, #0x0                   	// #0
  43c874:	mov	x3, #0x0                   	// #0
  43c878:	mov	x2, #0x1000                	// #4096
  43c87c:	mov	x0, x19
  43c880:	bl	43c934 <ferror@plt+0x39c04>
  43c884:	mov	w0, #0x1                   	// #1
  43c888:	str	w0, [sp, #76]
  43c88c:	add	x1, sp, #0x20
  43c890:	adrp	x0, 43c000 <ferror@plt+0x392d0>
  43c894:	add	x0, x0, #0x784
  43c898:	bl	46c8f0 <_obstack_memory_used@@Base+0x18550>
  43c89c:	ldr	w0, [sp, #72]
  43c8a0:	ldr	x19, [sp, #16]
  43c8a4:	ldp	x29, x30, [sp], #80
  43c8a8:	ret
  43c8ac:	str	wzr, [sp, #76]
  43c8b0:	b	43c88c <ferror@plt+0x39b5c>
  43c8b4:	cmp	x2, #0xf
  43c8b8:	b.ls	43c930 <ferror@plt+0x39c00>  // b.plast
  43c8bc:	add	x4, x0, #0x40
  43c8c0:	ldr	x3, [x0, #64]
  43c8c4:	mov	x5, #0x0                   	// #0
  43c8c8:	cbnz	x3, 43c8d4 <ferror@plt+0x39ba4>
  43c8cc:	b	43c920 <ferror@plt+0x39bf0>
  43c8d0:	mov	x4, x6
  43c8d4:	add	x5, x5, #0x1
  43c8d8:	mov	x6, x3
  43c8dc:	ldr	x3, [x3]
  43c8e0:	cbz	x3, 43c900 <ferror@plt+0x39bd0>
  43c8e4:	cbz	x4, 43c8d0 <ferror@plt+0x39ba0>
  43c8e8:	ldr	x7, [x4]
  43c8ec:	ldr	x8, [x3, #8]
  43c8f0:	ldr	x7, [x7, #8]
  43c8f4:	cmp	x8, x7
  43c8f8:	csel	x4, x4, x6, cs  // cs = hs, nlast
  43c8fc:	b	43c8d4 <ferror@plt+0x39ba4>
  43c900:	cmp	x5, #0xf
  43c904:	b.ls	43c920 <ferror@plt+0x39bf0>  // b.plast
  43c908:	ldr	x3, [x4]
  43c90c:	ldr	x5, [x3, #8]
  43c910:	cmp	x5, x2
  43c914:	b.cs	43c930 <ferror@plt+0x39c00>  // b.hs, b.nlast
  43c918:	ldr	x3, [x3]
  43c91c:	str	x3, [x4]
  43c920:	ldr	x3, [x0, #64]
  43c924:	str	x3, [x1]
  43c928:	str	x2, [x1, #8]
  43c92c:	str	x1, [x0, #64]
  43c930:	ret
  43c934:	stp	x29, x30, [sp, #-48]!
  43c938:	mov	x29, sp
  43c93c:	stp	x19, x20, [sp, #16]
  43c940:	str	x21, [sp, #32]
  43c944:	mov	x19, x0
  43c948:	mov	x21, x1
  43c94c:	mov	x20, x2
  43c950:	mov	x0, #0xffff                	// #65535
  43c954:	cmp	x2, x0
  43c958:	b.ls	43c974 <ferror@plt+0x39c44>  // b.plast
  43c95c:	bl	402900 <getpagesize@plt>
  43c960:	sxtw	x0, w0
  43c964:	sub	x0, x0, #0x1
  43c968:	orr	x1, x21, x20
  43c96c:	tst	x0, x1
  43c970:	b.eq	43c9c0 <ferror@plt+0x39c90>  // b.none
  43c974:	ldr	w0, [x19, #8]
  43c978:	cbz	w0, 43c998 <ferror@plt+0x39c68>
  43c97c:	add	x0, x19, #0x3c
  43c980:	mov	w2, #0x1                   	// #1
  43c984:	ldxr	w1, [x0]
  43c988:	stxr	w3, w2, [x0]
  43c98c:	cbnz	w3, 43c984 <ferror@plt+0x39c54>
  43c990:	dmb	ish
  43c994:	cbnz	w1, 43c9b0 <ferror@plt+0x39c80>
  43c998:	mov	x2, x20
  43c99c:	mov	x1, x21
  43c9a0:	mov	x0, x19
  43c9a4:	bl	43c8b4 <ferror@plt+0x39b84>
  43c9a8:	ldr	w0, [x19, #8]
  43c9ac:	cbnz	w0, 43c9d4 <ferror@plt+0x39ca4>
  43c9b0:	ldp	x19, x20, [sp, #16]
  43c9b4:	ldr	x21, [sp, #32]
  43c9b8:	ldp	x29, x30, [sp], #48
  43c9bc:	ret
  43c9c0:	mov	x1, x20
  43c9c4:	mov	x0, x21
  43c9c8:	bl	402b00 <munmap@plt>
  43c9cc:	cbnz	w0, 43c974 <ferror@plt+0x39c44>
  43c9d0:	b	43c9b0 <ferror@plt+0x39c80>
  43c9d4:	add	x19, x19, #0x3c
  43c9d8:	stlr	wzr, [x19]
  43c9dc:	b	43c9b0 <ferror@plt+0x39c80>
  43c9e0:	stp	x29, x30, [sp, #-64]!
  43c9e4:	mov	x29, sp
  43c9e8:	stp	x19, x20, [sp, #16]
  43c9ec:	stp	x21, x22, [sp, #32]
  43c9f0:	stp	x23, x24, [sp, #48]
  43c9f4:	mov	x21, x0
  43c9f8:	mov	x20, x1
  43c9fc:	mov	x22, x2
  43ca00:	mov	x23, x3
  43ca04:	ldr	w0, [x0, #8]
  43ca08:	cbnz	w0, 43ca44 <ferror@plt+0x39d14>
  43ca0c:	add	x1, x21, #0x40
  43ca10:	ldr	x19, [x21, #64]
  43ca14:	cbz	x19, 43ca30 <ferror@plt+0x39d00>
  43ca18:	ldr	x4, [x19, #8]
  43ca1c:	cmp	x4, x20
  43ca20:	b.cs	43cacc <ferror@plt+0x39d9c>  // b.hs, b.nlast
  43ca24:	mov	x1, x19
  43ca28:	ldr	x19, [x19]
  43ca2c:	cbnz	x19, 43ca18 <ferror@plt+0x39ce8>
  43ca30:	ldr	w0, [x21, #8]
  43ca34:	cbz	w0, 43ca60 <ferror@plt+0x39d30>
  43ca38:	add	x0, x21, #0x3c
  43ca3c:	stlr	wzr, [x0]
  43ca40:	b	43ca60 <ferror@plt+0x39d30>
  43ca44:	add	x0, x21, #0x3c
  43ca48:	mov	w2, #0x1                   	// #1
  43ca4c:	ldxr	w1, [x0]
  43ca50:	stxr	w3, w2, [x0]
  43ca54:	cbnz	w3, 43ca4c <ferror@plt+0x39d1c>
  43ca58:	dmb	ish
  43ca5c:	cbz	w1, 43ca0c <ferror@plt+0x39cdc>
  43ca60:	bl	402900 <getpagesize@plt>
  43ca64:	sxtw	x0, w0
  43ca68:	sub	x24, x20, #0x1
  43ca6c:	add	x24, x24, x0
  43ca70:	neg	x0, x0
  43ca74:	and	x24, x24, x0
  43ca78:	mov	x5, #0x0                   	// #0
  43ca7c:	mov	w4, #0xffffffff            	// #-1
  43ca80:	mov	w3, #0x22                  	// #34
  43ca84:	mov	w2, #0x3                   	// #3
  43ca88:	mov	x1, x24
  43ca8c:	mov	x0, #0x0                   	// #0
  43ca90:	bl	402a40 <mmap@plt>
  43ca94:	mov	x19, x0
  43ca98:	cmn	x0, #0x1
  43ca9c:	b.eq	43cb1c <ferror@plt+0x39dec>  // b.none
  43caa0:	add	x1, x20, #0x7
  43caa4:	and	x1, x1, #0xfffffffffffffff8
  43caa8:	cmp	x24, x1
  43caac:	b.ls	43caf0 <ferror@plt+0x39dc0>  // b.plast
  43cab0:	mov	x4, x23
  43cab4:	mov	x3, x22
  43cab8:	sub	x2, x24, x1
  43cabc:	add	x1, x0, x1
  43cac0:	mov	x0, x21
  43cac4:	bl	43c934 <ferror@plt+0x39c04>
  43cac8:	b	43caf0 <ferror@plt+0x39dc0>
  43cacc:	ldr	x0, [x19]
  43cad0:	str	x0, [x1]
  43cad4:	add	x1, x20, #0x7
  43cad8:	and	x1, x1, #0xfffffffffffffff8
  43cadc:	ldr	x2, [x19, #8]
  43cae0:	cmp	x2, x1
  43cae4:	b.hi	43cb08 <ferror@plt+0x39dd8>  // b.pmore
  43cae8:	ldr	w0, [x21, #8]
  43caec:	cbnz	w0, 43cb40 <ferror@plt+0x39e10>
  43caf0:	mov	x0, x19
  43caf4:	ldp	x19, x20, [sp, #16]
  43caf8:	ldp	x21, x22, [sp, #32]
  43cafc:	ldp	x23, x24, [sp, #48]
  43cb00:	ldp	x29, x30, [sp], #64
  43cb04:	ret
  43cb08:	sub	x2, x2, x1
  43cb0c:	add	x1, x19, x1
  43cb10:	mov	x0, x21
  43cb14:	bl	43c8b4 <ferror@plt+0x39b84>
  43cb18:	b	43cae8 <ferror@plt+0x39db8>
  43cb1c:	mov	x19, #0x0                   	// #0
  43cb20:	cbz	x22, 43caf0 <ferror@plt+0x39dc0>
  43cb24:	bl	402c40 <__errno_location@plt>
  43cb28:	ldr	w2, [x0]
  43cb2c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43cb30:	add	x1, x1, #0x9a8
  43cb34:	mov	x0, x23
  43cb38:	blr	x22
  43cb3c:	b	43caf0 <ferror@plt+0x39dc0>
  43cb40:	add	x21, x21, #0x3c
  43cb44:	stlr	wzr, [x21]
  43cb48:	b	43caf0 <ferror@plt+0x39dc0>
  43cb4c:	stp	x29, x30, [sp, #-96]!
  43cb50:	mov	x29, sp
  43cb54:	stp	x19, x20, [sp, #16]
  43cb58:	stp	x21, x22, [sp, #32]
  43cb5c:	stp	x23, x24, [sp, #48]
  43cb60:	mov	x23, x0
  43cb64:	mov	x21, x1
  43cb68:	mov	x19, x4
  43cb6c:	ldr	x0, [x4, #16]
  43cb70:	cmp	x0, x1
  43cb74:	b.cs	43cc00 <ferror@plt+0x39ed0>  // b.hs, b.nlast
  43cb78:	stp	x25, x26, [sp, #64]
  43cb7c:	mov	x24, x2
  43cb80:	mov	x25, x3
  43cb84:	ldr	x0, [x4, #8]
  43cb88:	add	x22, x0, x1
  43cb8c:	cbnz	x0, 43cc38 <ferror@plt+0x39f08>
  43cb90:	lsl	x22, x22, #4
  43cb94:	mov	x3, x25
  43cb98:	mov	x2, x24
  43cb9c:	mov	x1, x22
  43cba0:	mov	x0, x23
  43cba4:	bl	43c9e0 <ferror@plt+0x39cb0>
  43cba8:	mov	x20, x0
  43cbac:	cbz	x0, 43cc6c <ferror@plt+0x39f3c>
  43cbb0:	ldr	x26, [x19]
  43cbb4:	cbz	x26, 43cbec <ferror@plt+0x39ebc>
  43cbb8:	str	x27, [sp, #80]
  43cbbc:	ldr	x27, [x19, #8]
  43cbc0:	mov	x2, x27
  43cbc4:	mov	x1, x26
  43cbc8:	bl	402620 <memcpy@plt>
  43cbcc:	ldr	x2, [x19, #16]
  43cbd0:	mov	x4, x25
  43cbd4:	mov	x3, x24
  43cbd8:	add	x2, x27, x2
  43cbdc:	mov	x1, x26
  43cbe0:	mov	x0, x23
  43cbe4:	bl	43c934 <ferror@plt+0x39c04>
  43cbe8:	ldr	x27, [sp, #80]
  43cbec:	str	x20, [x19]
  43cbf0:	ldr	x0, [x19, #8]
  43cbf4:	sub	x22, x22, x0
  43cbf8:	str	x22, [x19, #16]
  43cbfc:	ldp	x25, x26, [sp, #64]
  43cc00:	ldr	x1, [x19, #8]
  43cc04:	ldr	x20, [x19]
  43cc08:	add	x20, x20, x1
  43cc0c:	add	x1, x1, x21
  43cc10:	str	x1, [x19, #8]
  43cc14:	ldr	x1, [x19, #16]
  43cc18:	sub	x21, x1, x21
  43cc1c:	str	x21, [x19, #16]
  43cc20:	mov	x0, x20
  43cc24:	ldp	x19, x20, [sp, #16]
  43cc28:	ldp	x21, x22, [sp, #32]
  43cc2c:	ldp	x23, x24, [sp, #48]
  43cc30:	ldp	x29, x30, [sp], #96
  43cc34:	ret
  43cc38:	bl	402900 <getpagesize@plt>
  43cc3c:	sxtw	x1, w0
  43cc40:	cmp	x22, w0, sxtw
  43cc44:	b.cs	43cc58 <ferror@plt+0x39f28>  // b.hs, b.nlast
  43cc48:	lsl	x22, x22, #1
  43cc4c:	cmp	x22, x1
  43cc50:	csel	x22, x22, x1, ls  // ls = plast
  43cc54:	b	43cb94 <ferror@plt+0x39e64>
  43cc58:	add	x22, x1, x22, lsl #1
  43cc5c:	sub	x22, x22, #0x1
  43cc60:	neg	x1, x1
  43cc64:	and	x22, x1, x22
  43cc68:	b	43cb94 <ferror@plt+0x39e64>
  43cc6c:	ldp	x25, x26, [sp, #64]
  43cc70:	b	43cc20 <ferror@plt+0x39ef0>
  43cc74:	ldr	x0, [x1]
  43cc78:	ldr	x2, [x1, #8]
  43cc7c:	add	x2, x0, x2
  43cc80:	str	x2, [x1]
  43cc84:	str	xzr, [x1, #8]
  43cc88:	ret
  43cc8c:	stp	x29, x30, [sp, #-32]!
  43cc90:	mov	x29, sp
  43cc94:	str	x19, [sp, #16]
  43cc98:	mov	x19, x1
  43cc9c:	ldr	x5, [x1, #8]
  43cca0:	add	x1, x5, #0x7
  43cca4:	and	x1, x1, #0xfffffffffffffff8
  43cca8:	ldr	x4, [x19, #16]
  43ccac:	add	x5, x5, x4
  43ccb0:	ldr	x6, [x19]
  43ccb4:	mov	x4, x3
  43ccb8:	mov	x3, x2
  43ccbc:	sub	x2, x5, x1
  43ccc0:	add	x1, x6, x1
  43ccc4:	bl	43c934 <ferror@plt+0x39c04>
  43ccc8:	str	xzr, [x19, #16]
  43cccc:	ldr	x0, [x19, #8]
  43ccd0:	cbnz	x0, 43ccd8 <ferror@plt+0x39fa8>
  43ccd4:	str	xzr, [x19]
  43ccd8:	mov	w0, #0x1                   	// #1
  43ccdc:	ldr	x19, [sp, #16]
  43cce0:	ldp	x29, x30, [sp], #32
  43cce4:	ret
  43cce8:	stp	x29, x30, [sp, #-160]!
  43ccec:	mov	x29, sp
  43ccf0:	stp	x19, x20, [sp, #16]
  43ccf4:	stp	x21, x22, [sp, #32]
  43ccf8:	stp	x23, x24, [sp, #48]
  43ccfc:	mov	x20, x0
  43cd00:	mov	x22, x1
  43cd04:	mov	x23, x2
  43cd08:	ldr	w0, [x0, #8]
  43cd0c:	cbnz	w0, 43cd40 <ferror@plt+0x3a010>
  43cd10:	ldr	w0, [x20, #56]
  43cd14:	cbnz	w0, 43cd64 <ferror@plt+0x3a034>
  43cd18:	ldr	x0, [x20, #24]
  43cd1c:	str	x0, [sp, #152]
  43cd20:	ldr	x1, [sp, #152]
  43cd24:	mov	w0, #0x1                   	// #1
  43cd28:	cbz	x1, 43cd80 <ferror@plt+0x3a050>
  43cd2c:	ldp	x19, x20, [sp, #16]
  43cd30:	ldp	x21, x22, [sp, #32]
  43cd34:	ldp	x23, x24, [sp, #48]
  43cd38:	ldp	x29, x30, [sp], #160
  43cd3c:	ret
  43cd40:	add	x0, x20, #0x38
  43cd44:	ldar	w0, [x0]
  43cd48:	cbnz	w0, 43cd64 <ferror@plt+0x3a034>
  43cd4c:	ldr	w0, [x20, #8]
  43cd50:	cbz	w0, 43cd18 <ferror@plt+0x39fe8>
  43cd54:	add	x0, x20, #0x18
  43cd58:	ldar	x0, [x0]
  43cd5c:	str	x0, [sp, #152]
  43cd60:	b	43cd20 <ferror@plt+0x39ff0>
  43cd64:	mov	w2, #0xffffffff            	// #-1
  43cd68:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43cd6c:	add	x1, x1, #0x9d8
  43cd70:	mov	x0, x23
  43cd74:	blr	x22
  43cd78:	mov	w0, #0x0                   	// #0
  43cd7c:	b	43cd2c <ferror@plt+0x39ffc>
  43cd80:	stp	x25, x26, [sp, #64]
  43cd84:	mov	w0, #0xffffffff            	// #-1
  43cd88:	mov	w19, #0x0                   	// #0
  43cd8c:	add	x26, sp, #0x54
  43cd90:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43cd94:	add	x25, x25, #0x9b0
  43cd98:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43cd9c:	add	x24, x24, #0x9c0
  43cda0:	b	43cdc0 <ferror@plt+0x3a090>
  43cda4:	cbz	w19, 43ce00 <ferror@plt+0x3a0d0>
  43cda8:	cmp	w19, #0x1
  43cdac:	b.ne	43ce0c <ferror@plt+0x3a0dc>  // b.any
  43cdb0:	mov	x21, #0x0                   	// #0
  43cdb4:	add	w19, w19, #0x1
  43cdb8:	cmp	w19, #0x5
  43cdbc:	b.eq	43ce6c <ferror@plt+0x3a13c>  // b.none
  43cdc0:	cmp	w19, #0x2
  43cdc4:	b.eq	43ce10 <ferror@plt+0x3a0e0>  // b.none
  43cdc8:	b.le	43cda4 <ferror@plt+0x3a074>
  43cdcc:	cmp	w19, #0x3
  43cdd0:	b.eq	43ce9c <ferror@plt+0x3a16c>  // b.none
  43cdd4:	cmp	w19, #0x4
  43cdd8:	b.ne	43ce0c <ferror@plt+0x3a0dc>  // b.any
  43cddc:	bl	4027b0 <getpid@plt>
  43cde0:	add	x21, sp, #0x58
  43cde4:	sxtw	x3, w0
  43cde8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43cdec:	add	x2, x2, #0xa00
  43cdf0:	mov	x1, #0x40                  	// #64
  43cdf4:	mov	x0, x21
  43cdf8:	bl	402780 <snprintf@plt>
  43cdfc:	b	43cea0 <ferror@plt+0x3a170>
  43ce00:	ldr	x21, [x20]
  43ce04:	cbz	x21, 43cdb0 <ferror@plt+0x3a080>
  43ce08:	b	43cea0 <ferror@plt+0x3a170>
  43ce0c:	bl	402990 <abort@plt>
  43ce10:	mov	x21, x25
  43ce14:	b	43cea0 <ferror@plt+0x3a170>
  43ce18:	ldr	w1, [sp, #84]
  43ce1c:	cbnz	w1, 43cdb4 <ferror@plt+0x3a084>
  43ce20:	b	43ce84 <ferror@plt+0x3a154>
  43ce24:	mov	w2, #0x0                   	// #0
  43ce28:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ce2c:	add	x1, x1, #0xa18
  43ce30:	mov	x0, x23
  43ce34:	blr	x22
  43ce38:	b	43ce84 <ferror@plt+0x3a154>
  43ce3c:	add	x20, x20, #0x38
  43ce40:	mov	w0, #0x1                   	// #1
  43ce44:	stlr	w0, [x20]
  43ce48:	mov	w0, #0x0                   	// #0
  43ce4c:	ldp	x25, x26, [sp, #64]
  43ce50:	b	43cd2c <ferror@plt+0x39ffc>
  43ce54:	add	x20, x20, #0x18
  43ce58:	ldr	x0, [sp, #152]
  43ce5c:	stlr	x0, [x20]
  43ce60:	mov	w0, #0x1                   	// #1
  43ce64:	ldp	x25, x26, [sp, #64]
  43ce68:	b	43cd2c <ferror@plt+0x39ffc>
  43ce6c:	tbz	w0, #31, 43ceb8 <ferror@plt+0x3a188>
  43ce70:	ldr	x1, [x20]
  43ce74:	cbz	x1, 43ce24 <ferror@plt+0x3a0f4>
  43ce78:	mov	w2, #0x2                   	// #2
  43ce7c:	mov	x0, x23
  43ce80:	blr	x22
  43ce84:	ldr	w0, [x20, #8]
  43ce88:	cbnz	w0, 43ce3c <ferror@plt+0x3a10c>
  43ce8c:	mov	w1, #0x1                   	// #1
  43ce90:	str	w1, [x20, #56]
  43ce94:	ldp	x25, x26, [sp, #64]
  43ce98:	b	43cd2c <ferror@plt+0x39ffc>
  43ce9c:	mov	x21, x24
  43cea0:	mov	x3, x26
  43cea4:	mov	x2, x23
  43cea8:	mov	x1, x22
  43ceac:	mov	x0, x21
  43ceb0:	bl	43cfe0 <ferror@plt+0x3a2b0>
  43ceb4:	tbnz	w0, #31, 43ce18 <ferror@plt+0x3a0e8>
  43ceb8:	add	x5, sp, #0x98
  43cebc:	mov	x4, x23
  43cec0:	mov	x3, x22
  43cec4:	mov	w2, w0
  43cec8:	mov	x1, x21
  43cecc:	mov	x0, x20
  43ced0:	bl	440208 <ferror@plt+0x3d4d8>
  43ced4:	cbz	w0, 43ce84 <ferror@plt+0x3a154>
  43ced8:	ldr	w0, [x20, #8]
  43cedc:	cbnz	w0, 43ce54 <ferror@plt+0x3a124>
  43cee0:	ldr	x0, [sp, #152]
  43cee4:	str	x0, [x20, #24]
  43cee8:	mov	w0, #0x1                   	// #1
  43ceec:	ldp	x25, x26, [sp, #64]
  43cef0:	b	43cd2c <ferror@plt+0x39ffc>
  43cef4:	stp	x29, x30, [sp, #-64]!
  43cef8:	mov	x29, sp
  43cefc:	stp	x19, x20, [sp, #16]
  43cf00:	stp	x21, x22, [sp, #32]
  43cf04:	str	x23, [sp, #48]
  43cf08:	mov	x19, x0
  43cf0c:	mov	x23, x1
  43cf10:	mov	x22, x2
  43cf14:	mov	x20, x3
  43cf18:	mov	x21, x4
  43cf1c:	mov	x2, x4
  43cf20:	mov	x1, x3
  43cf24:	bl	43cce8 <ferror@plt+0x39fb8>
  43cf28:	cbz	w0, 43cf54 <ferror@plt+0x3a224>
  43cf2c:	ldr	w1, [x19, #56]
  43cf30:	mov	w0, #0x0                   	// #0
  43cf34:	cbnz	w1, 43cf54 <ferror@plt+0x3a224>
  43cf38:	ldr	x5, [x19, #24]
  43cf3c:	mov	x4, x21
  43cf40:	mov	x3, x20
  43cf44:	mov	x2, x22
  43cf48:	mov	x1, x23
  43cf4c:	mov	x0, x19
  43cf50:	blr	x5
  43cf54:	ldp	x19, x20, [sp, #16]
  43cf58:	ldp	x21, x22, [sp, #32]
  43cf5c:	ldr	x23, [sp, #48]
  43cf60:	ldp	x29, x30, [sp], #64
  43cf64:	ret
  43cf68:	stp	x29, x30, [sp, #-64]!
  43cf6c:	mov	x29, sp
  43cf70:	stp	x19, x20, [sp, #16]
  43cf74:	stp	x21, x22, [sp, #32]
  43cf78:	str	x23, [sp, #48]
  43cf7c:	mov	x19, x0
  43cf80:	mov	x23, x1
  43cf84:	mov	x22, x2
  43cf88:	mov	x20, x3
  43cf8c:	mov	x21, x4
  43cf90:	mov	x2, x4
  43cf94:	mov	x1, x3
  43cf98:	bl	43cce8 <ferror@plt+0x39fb8>
  43cf9c:	cbz	w0, 43cfcc <ferror@plt+0x3a29c>
  43cfa0:	ldr	w1, [x19, #56]
  43cfa4:	mov	w0, #0x0                   	// #0
  43cfa8:	cbnz	w1, 43cfcc <ferror@plt+0x3a29c>
  43cfac:	ldr	x5, [x19, #40]
  43cfb0:	mov	x4, x21
  43cfb4:	mov	x3, x20
  43cfb8:	mov	x2, x22
  43cfbc:	mov	x1, x23
  43cfc0:	mov	x0, x19
  43cfc4:	blr	x5
  43cfc8:	mov	w0, #0x1                   	// #1
  43cfcc:	ldp	x19, x20, [sp, #16]
  43cfd0:	ldp	x21, x22, [sp, #32]
  43cfd4:	ldr	x23, [sp, #48]
  43cfd8:	ldp	x29, x30, [sp], #64
  43cfdc:	ret
  43cfe0:	stp	x29, x30, [sp, #-64]!
  43cfe4:	mov	x29, sp
  43cfe8:	stp	x19, x20, [sp, #16]
  43cfec:	stp	x21, x22, [sp, #32]
  43cff0:	str	x23, [sp, #48]
  43cff4:	mov	x21, x0
  43cff8:	mov	x23, x1
  43cffc:	mov	x22, x2
  43d000:	cbz	x3, 43d080 <ferror@plt+0x3a350>
  43d004:	mov	x20, x3
  43d008:	str	wzr, [x3]
  43d00c:	mov	w1, #0x80000               	// #524288
  43d010:	bl	402800 <open@plt>
  43d014:	mov	w19, w0
  43d018:	tbnz	w0, #31, 43d044 <ferror@plt+0x3a314>
  43d01c:	mov	w2, #0x1                   	// #1
  43d020:	mov	w1, #0x2                   	// #2
  43d024:	mov	w0, w19
  43d028:	bl	402af0 <fcntl@plt>
  43d02c:	mov	w0, w19
  43d030:	ldp	x19, x20, [sp, #16]
  43d034:	ldp	x21, x22, [sp, #32]
  43d038:	ldr	x23, [sp, #48]
  43d03c:	ldp	x29, x30, [sp], #64
  43d040:	ret
  43d044:	bl	402c40 <__errno_location@plt>
  43d048:	ldr	w0, [x0]
  43d04c:	cmp	w0, #0x2
  43d050:	b.eq	43d070 <ferror@plt+0x3a340>  // b.none
  43d054:	bl	402c40 <__errno_location@plt>
  43d058:	ldr	w2, [x0]
  43d05c:	mov	x1, x21
  43d060:	mov	x0, x22
  43d064:	blr	x23
  43d068:	mov	w19, #0xffffffff            	// #-1
  43d06c:	b	43d02c <ferror@plt+0x3a2fc>
  43d070:	mov	w0, #0x1                   	// #1
  43d074:	str	w0, [x20]
  43d078:	mov	w19, #0xffffffff            	// #-1
  43d07c:	b	43d02c <ferror@plt+0x3a2fc>
  43d080:	mov	w1, #0x80000               	// #524288
  43d084:	bl	402800 <open@plt>
  43d088:	mov	w19, w0
  43d08c:	tbz	w0, #31, 43d01c <ferror@plt+0x3a2ec>
  43d090:	b	43d054 <ferror@plt+0x3a324>
  43d094:	stp	x29, x30, [sp, #-32]!
  43d098:	mov	x29, sp
  43d09c:	stp	x19, x20, [sp, #16]
  43d0a0:	mov	x19, x1
  43d0a4:	mov	x20, x2
  43d0a8:	bl	402940 <close@plt>
  43d0ac:	tbnz	w0, #31, 43d0c0 <ferror@plt+0x3a390>
  43d0b0:	mov	w0, #0x1                   	// #1
  43d0b4:	ldp	x19, x20, [sp, #16]
  43d0b8:	ldp	x29, x30, [sp], #32
  43d0bc:	ret
  43d0c0:	bl	402c40 <__errno_location@plt>
  43d0c4:	ldr	w2, [x0]
  43d0c8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43d0cc:	add	x1, x1, #0xa48
  43d0d0:	mov	x0, x20
  43d0d4:	blr	x19
  43d0d8:	mov	w0, #0x0                   	// #0
  43d0dc:	b	43d0b4 <ferror@plt+0x3a384>
  43d0e0:	stp	x29, x30, [sp, #-16]!
  43d0e4:	mov	x29, sp
  43d0e8:	mov	x0, x4
  43d0ec:	mov	w2, #0xffffffff            	// #-1
  43d0f0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43d0f4:	add	x1, x1, #0xa50
  43d0f8:	blr	x3
  43d0fc:	mov	w0, #0x0                   	// #0
  43d100:	ldp	x29, x30, [sp], #16
  43d104:	ret
  43d108:	stp	x29, x30, [sp, #-16]!
  43d10c:	mov	x29, sp
  43d110:	mov	x0, x4
  43d114:	mov	w2, #0xffffffff            	// #-1
  43d118:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43d11c:	add	x1, x1, #0xa70
  43d120:	blr	x3
  43d124:	ldp	x29, x30, [sp], #16
  43d128:	ret
  43d12c:	ldr	x2, [x0, #8]
  43d130:	ldr	x0, [x1, #8]
  43d134:	cmp	x2, x0
  43d138:	b.cc	43d144 <ferror@plt+0x3a414>  // b.lo, b.ul, b.last
  43d13c:	cset	w0, hi  // hi = pmore
  43d140:	ret
  43d144:	mov	w0, #0xffffffff            	// #-1
  43d148:	b	43d140 <ferror@plt+0x3a410>
  43d14c:	stp	x29, x30, [sp, #-192]!
  43d150:	mov	x29, sp
  43d154:	stp	x19, x20, [sp, #16]
  43d158:	mov	x19, x3
  43d15c:	add	x20, x2, #0x1, lsl #12
  43d160:	stp	xzr, xzr, [sp, #160]
  43d164:	stp	xzr, xzr, [sp, #176]
  43d168:	cbz	x1, 43d1dc <ferror@plt+0x3a4ac>
  43d16c:	mov	x4, #0x0                   	// #0
  43d170:	add	x7, sp, #0xa0
  43d174:	add	x3, sp, #0x60
  43d178:	add	x8, sp, #0x80
  43d17c:	b	43d1b4 <ferror@plt+0x3a484>
  43d180:	and	w2, w4, #0xffff
  43d184:	ldrh	w5, [x3, w5, sxtw #1]
  43d188:	strh	w2, [x20, x5, lsl #1]
  43d18c:	ldrb	w5, [x0, x4]
  43d190:	strh	w2, [x3, x5, lsl #1]
  43d194:	ldrb	w5, [x0, x4]
  43d198:	lsl	x5, x5, #1
  43d19c:	ldrh	w6, [x7, x5]
  43d1a0:	add	w6, w6, #0x1
  43d1a4:	strh	w6, [x7, x5]
  43d1a8:	add	x4, x4, #0x1
  43d1ac:	cmp	x1, x4
  43d1b0:	b.eq	43d1dc <ferror@plt+0x3a4ac>  // b.none
  43d1b4:	ldrb	w5, [x0, x4]
  43d1b8:	cmp	w5, #0xf
  43d1bc:	b.hi	43d4f0 <ferror@plt+0x3a7c0>  // b.pmore
  43d1c0:	ldrh	w2, [x7, w5, sxtw #1]
  43d1c4:	cbnz	w2, 43d180 <ferror@plt+0x3a450>
  43d1c8:	and	w2, w4, #0xffff
  43d1cc:	sbfiz	x5, x5, #1, #32
  43d1d0:	strh	w2, [x8, x5]
  43d1d4:	strh	w2, [x3, x5]
  43d1d8:	b	43d194 <ferror@plt+0x3a464>
  43d1dc:	mov	x2, #0x800                 	// #2048
  43d1e0:	mov	w1, #0x0                   	// #0
  43d1e4:	mov	x0, x19
  43d1e8:	bl	402890 <memset@plt>
  43d1ec:	mov	x4, #0x0                   	// #0
  43d1f0:	mov	w1, #0x0                   	// #0
  43d1f4:	add	x9, sp, #0xa0
  43d1f8:	mov	w8, #0x1                   	// #1
  43d1fc:	add	x12, sp, #0x80
  43d200:	add	x0, x9, x4, lsl #1
  43d204:	ldrh	w0, [x0, #2]
  43d208:	cbnz	w0, 43d238 <ferror@plt+0x3a508>
  43d20c:	add	x4, x4, #0x1
  43d210:	cmp	x4, #0x8
  43d214:	b.ne	43d200 <ferror@plt+0x3a4d0>  // b.any
  43d218:	stp	x21, x22, [sp, #32]
  43d21c:	stp	x23, x24, [sp, #48]
  43d220:	stp	x25, x26, [sp, #64]
  43d224:	add	x7, sp, #0xa0
  43d228:	mov	x6, #0x9                   	// #9
  43d22c:	add	x9, sp, #0x50
  43d230:	mov	w8, #0x1                   	// #1
  43d234:	b	43d364 <ferror@plt+0x3a634>
  43d238:	add	w3, w4, #0x1
  43d23c:	lsl	w5, w8, w3
  43d240:	cmp	w5, w0
  43d244:	b.cc	43d500 <ferror@plt+0x3a7d0>  // b.lo, b.ul, b.last
  43d248:	add	x5, x12, x4, lsl #1
  43d24c:	ldrh	w7, [x5, #2]
  43d250:	and	x5, x0, #0xffff
  43d254:	tst	w7, #0xfffffe00
  43d258:	b.ne	43d508 <ferror@plt+0x3a7d8>  // b.any
  43d25c:	ubfiz	w13, w4, #9, #7
  43d260:	lsl	w3, w8, w3
  43d264:	sxtw	x3, w3
  43d268:	lsl	w10, w8, w4
  43d26c:	mov	x11, #0x0                   	// #0
  43d270:	orr	w6, w13, w7
  43d274:	mov	w0, w1
  43d278:	cmp	w1, #0xff
  43d27c:	b.hi	43d298 <ferror@plt+0x3a568>  // b.pmore
  43d280:	ldrh	w2, [x19, x0, lsl #1]
  43d284:	cbnz	w2, 43d510 <ferror@plt+0x3a7e0>
  43d288:	strh	w6, [x19, x0, lsl #1]
  43d28c:	add	x0, x0, x3
  43d290:	cmp	x0, #0xff
  43d294:	b.ls	43d280 <ferror@plt+0x3a550>  // b.plast
  43d298:	add	x11, x11, #0x1
  43d29c:	cmp	x11, x5
  43d2a0:	b.cs	43d2ac <ferror@plt+0x3a57c>  // b.hs, b.nlast
  43d2a4:	mov	w7, w7
  43d2a8:	ldrh	w7, [x20, x7, lsl #1]
  43d2ac:	tst	w10, w1
  43d2b0:	b.eq	43d2f0 <ferror@plt+0x3a5c0>  // b.none
  43d2b4:	mov	w0, w10
  43d2b8:	lsr	w0, w0, #1
  43d2bc:	tst	w0, w1
  43d2c0:	b.ne	43d2b8 <ferror@plt+0x3a588>  // b.any
  43d2c4:	sub	w2, w0, #0x1
  43d2c8:	and	w1, w2, w1
  43d2cc:	add	w1, w1, w0
  43d2d0:	cmp	w0, #0x0
  43d2d4:	csel	w1, w1, w0, ne  // ne = any
  43d2d8:	cmp	x11, x5
  43d2dc:	b.eq	43d20c <ferror@plt+0x3a4dc>  // b.none
  43d2e0:	tst	w7, #0xfffffe00
  43d2e4:	b.eq	43d270 <ferror@plt+0x3a540>  // b.none
  43d2e8:	mov	w0, #0x0                   	// #0
  43d2ec:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d2f0:	mov	w0, w10
  43d2f4:	b	43d2c4 <ferror@plt+0x3a594>
  43d2f8:	add	w1, w1, w0
  43d2fc:	lsl	w4, w8, w4
  43d300:	bic	w5, w5, w4
  43d304:	subs	x3, x3, #0x1
  43d308:	b.eq	43d350 <ferror@plt+0x3a620>  // b.none
  43d30c:	sub	w4, w6, w3
  43d310:	lsr	w0, w5, w4
  43d314:	tbz	w0, #0, 43d304 <ferror@plt+0x3a5d4>
  43d318:	sub	w0, w3, #0x1
  43d31c:	lsl	w0, w8, w0
  43d320:	cbz	x3, 43d2fc <ferror@plt+0x3a5cc>
  43d324:	tst	w0, w1
  43d328:	b.eq	43d2f8 <ferror@plt+0x3a5c8>  // b.none
  43d32c:	mov	w2, #0x0                   	// #0
  43d330:	bic	w1, w1, w0
  43d334:	add	w2, w2, #0x1
  43d338:	lsr	w0, w0, #1
  43d33c:	cmp	x3, w2, uxtw
  43d340:	b.ls	43d2fc <ferror@plt+0x3a5cc>  // b.plast
  43d344:	tst	w1, w0
  43d348:	b.ne	43d330 <ferror@plt+0x3a600>  // b.any
  43d34c:	b	43d2f8 <ferror@plt+0x3a5c8>
  43d350:	cbnz	w5, 43d52c <ferror@plt+0x3a7fc>
  43d354:	add	x6, x6, #0x1
  43d358:	add	x7, x7, #0x2
  43d35c:	cmp	x6, #0x10
  43d360:	b.eq	43d380 <ferror@plt+0x3a650>  // b.none
  43d364:	ldrh	w5, [x7, #18]
  43d368:	cbz	w5, 43d354 <ferror@plt+0x3a624>
  43d36c:	add	x0, x9, x6, lsl #1
  43d370:	sturh	w1, [x0, #-18]
  43d374:	cbz	x6, 43d518 <ferror@plt+0x3a7e8>
  43d378:	mov	x3, x6
  43d37c:	b	43d30c <ferror@plt+0x3a5dc>
  43d380:	mov	x3, #0x7                   	// #7
  43d384:	mov	x16, #0x0                   	// #0
  43d388:	add	x12, sp, #0xa0
  43d38c:	add	x22, sp, #0x80
  43d390:	add	x21, sp, #0x50
  43d394:	mov	w10, #0x1                   	// #1
  43d398:	mov	x17, #0x0                   	// #0
  43d39c:	mov	x30, #0x100                 	// #256
  43d3a0:	add	x0, x12, x3, lsl #1
  43d3a4:	ldrh	w0, [x0, #16]
  43d3a8:	cbnz	w0, 43d3c8 <ferror@plt+0x3a698>
  43d3ac:	subs	x3, x3, #0x1
  43d3b0:	b.ne	43d3a0 <ferror@plt+0x3a670>  // b.any
  43d3b4:	mov	w0, #0x1                   	// #1
  43d3b8:	ldp	x21, x22, [sp, #32]
  43d3bc:	ldp	x23, x24, [sp, #48]
  43d3c0:	ldp	x25, x26, [sp, #64]
  43d3c4:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d3c8:	lsl	x1, x3, #1
  43d3cc:	add	x2, x1, x22
  43d3d0:	ldrh	w23, [x2, #16]
  43d3d4:	add	x1, x1, x21
  43d3d8:	ldurh	w5, [x1, #-2]
  43d3dc:	and	x9, x0, #0xffff
  43d3e0:	lsl	w4, w10, w3
  43d3e4:	sxtw	x26, w4
  43d3e8:	ubfiz	w15, w3, #9, #7
  43d3ec:	add	w14, w15, #0x1, lsl #12
  43d3f0:	and	w14, w14, #0xffff
  43d3f4:	mov	w4, w4
  43d3f8:	add	w11, w3, #0x7
  43d3fc:	lsl	w11, w10, w11
  43d400:	mov	x8, x17
  43d404:	mov	x18, x17
  43d408:	mov	x13, x30
  43d40c:	mov	x24, #0x0                   	// #0
  43d410:	mov	x25, x3
  43d414:	and	x0, x5, #0xff
  43d418:	cmp	x13, w5, uxtb
  43d41c:	b.eq	43d44c <ferror@plt+0x3a71c>  // b.none
  43d420:	lsl	x1, x0, #1
  43d424:	ldrh	w8, [x19, x1]
  43d428:	cbnz	w8, 43d4cc <ferror@plt+0x3a79c>
  43d42c:	tst	x16, #0xfffffffffffffe00
  43d430:	b.ne	43d540 <ferror@plt+0x3a810>  // b.any
  43d434:	add	w2, w14, w16
  43d438:	strh	w2, [x19, x1]
  43d43c:	mov	x8, x25
  43d440:	mov	x18, x16
  43d444:	mov	x13, x0
  43d448:	add	x16, x26, x16
  43d44c:	orr	w7, w15, w23
  43d450:	lsr	w0, w5, #8
  43d454:	lsl	w6, w10, w8
  43d458:	cmp	x6, x0
  43d45c:	b.ls	43d480 <ferror@plt+0x3a750>  // b.plast
  43d460:	add	x1, x19, x18, lsl #1
  43d464:	add	x1, x1, #0x200
  43d468:	ldrh	w2, [x1, x0, lsl #1]
  43d46c:	cbnz	w2, 43d57c <ferror@plt+0x3a84c>
  43d470:	strh	w7, [x1, x0, lsl #1]
  43d474:	add	x0, x0, x4
  43d478:	cmp	x6, x0
  43d47c:	b.hi	43d468 <ferror@plt+0x3a738>  // b.pmore
  43d480:	add	x24, x24, #0x1
  43d484:	cmp	x9, x24
  43d488:	b.ls	43d494 <ferror@plt+0x3a764>  // b.plast
  43d48c:	mov	w23, w23
  43d490:	ldrh	w23, [x20, x23, lsl #1]
  43d494:	tst	w11, w5
  43d498:	b.eq	43d4e8 <ferror@plt+0x3a7b8>  // b.none
  43d49c:	mov	w0, w11
  43d4a0:	lsr	w0, w0, #1
  43d4a4:	tst	w0, w5
  43d4a8:	b.ne	43d4a0 <ferror@plt+0x3a770>  // b.any
  43d4ac:	sub	w1, w0, #0x1
  43d4b0:	and	w5, w1, w5
  43d4b4:	add	w5, w5, w0
  43d4b8:	cmp	w0, #0x0
  43d4bc:	csel	w5, w5, w0, ne  // ne = any
  43d4c0:	cmp	x9, x24
  43d4c4:	b.ne	43d414 <ferror@plt+0x3a6e4>  // b.any
  43d4c8:	b	43d3ac <ferror@plt+0x3a67c>
  43d4cc:	tbz	w8, #12, 43d554 <ferror@plt+0x3a824>
  43d4d0:	and	x18, x8, #0x1ff
  43d4d4:	ubfx	x8, x8, #9, #3
  43d4d8:	cmp	x8, x3
  43d4dc:	b.cc	43d568 <ferror@plt+0x3a838>  // b.lo, b.ul, b.last
  43d4e0:	mov	x13, x0
  43d4e4:	b	43d44c <ferror@plt+0x3a71c>
  43d4e8:	mov	w0, w11
  43d4ec:	b	43d4ac <ferror@plt+0x3a77c>
  43d4f0:	mov	w0, #0x0                   	// #0
  43d4f4:	ldp	x19, x20, [sp, #16]
  43d4f8:	ldp	x29, x30, [sp], #192
  43d4fc:	ret
  43d500:	mov	w0, #0x0                   	// #0
  43d504:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d508:	mov	w0, #0x0                   	// #0
  43d50c:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d510:	mov	w0, #0x0                   	// #0
  43d514:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d518:	mov	w0, #0x0                   	// #0
  43d51c:	ldp	x21, x22, [sp, #32]
  43d520:	ldp	x23, x24, [sp, #48]
  43d524:	ldp	x25, x26, [sp, #64]
  43d528:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d52c:	mov	w0, #0x0                   	// #0
  43d530:	ldp	x21, x22, [sp, #32]
  43d534:	ldp	x23, x24, [sp, #48]
  43d538:	ldp	x25, x26, [sp, #64]
  43d53c:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d540:	mov	w0, #0x0                   	// #0
  43d544:	ldp	x21, x22, [sp, #32]
  43d548:	ldp	x23, x24, [sp, #48]
  43d54c:	ldp	x25, x26, [sp, #64]
  43d550:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d554:	mov	w0, #0x0                   	// #0
  43d558:	ldp	x21, x22, [sp, #32]
  43d55c:	ldp	x23, x24, [sp, #48]
  43d560:	ldp	x25, x26, [sp, #64]
  43d564:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d568:	mov	w0, #0x0                   	// #0
  43d56c:	ldp	x21, x22, [sp, #32]
  43d570:	ldp	x23, x24, [sp, #48]
  43d574:	ldp	x25, x26, [sp, #64]
  43d578:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d57c:	mov	w0, #0x0                   	// #0
  43d580:	ldp	x21, x22, [sp, #32]
  43d584:	ldp	x23, x24, [sp, #48]
  43d588:	ldp	x25, x26, [sp, #64]
  43d58c:	b	43d4f4 <ferror@plt+0x3a7c4>
  43d590:	ldr	w5, [x3]
  43d594:	cmp	w5, #0xe
  43d598:	b.hi	43d5dc <ferror@plt+0x3a8ac>  // b.pmore
  43d59c:	ldr	x4, [x0]
  43d5a0:	ldr	x6, [x2]
  43d5a4:	sub	x1, x1, x4
  43d5a8:	cmp	x1, #0x3
  43d5ac:	b.le	43d5e4 <ferror@plt+0x3a8b4>
  43d5b0:	mov	x1, x4
  43d5b4:	ldr	w4, [x1], #4
  43d5b8:	lsl	x4, x4, x5
  43d5bc:	orr	x4, x4, x6
  43d5c0:	prfm	pldl1strm, [x1]
  43d5c4:	str	x1, [x0]
  43d5c8:	str	x4, [x2]
  43d5cc:	add	w5, w5, #0x20
  43d5d0:	str	w5, [x3]
  43d5d4:	mov	w0, #0x1                   	// #1
  43d5d8:	ret
  43d5dc:	mov	w0, #0x1                   	// #1
  43d5e0:	b	43d5d8 <ferror@plt+0x3a8a8>
  43d5e4:	mov	w0, #0x0                   	// #0
  43d5e8:	b	43d5d8 <ferror@plt+0x3a8a8>
  43d5ec:	stp	x29, x30, [sp, #-240]!
  43d5f0:	mov	x29, sp
  43d5f4:	stp	x19, x20, [sp, #16]
  43d5f8:	stp	x21, x22, [sp, #32]
  43d5fc:	stp	x23, x24, [sp, #48]
  43d600:	stp	x25, x26, [sp, #64]
  43d604:	mov	x21, x0
  43d608:	str	x1, [sp, #120]
  43d60c:	str	x2, [sp, #112]
  43d610:	mov	x19, x3
  43d614:	mov	x20, x4
  43d618:	str	x0, [sp, #200]
  43d61c:	add	x23, x0, x1
  43d620:	add	x0, x3, x4
  43d624:	str	x0, [sp, #104]
  43d628:	cmp	x1, #0x4
  43d62c:	b.le	43e218 <ferror@plt+0x3b4e8>
  43d630:	mov	x22, x3
  43d634:	mov	x0, x21
  43d638:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43d63c:	add	x1, x1, #0xcf0
  43d640:	str	x1, [sp, #144]
  43d644:	add	x1, x1, #0x200
  43d648:	str	x1, [sp, #152]
  43d64c:	ldrb	w1, [x0]
  43d650:	and	w2, w1, #0xf
  43d654:	cmp	w2, #0x8
  43d658:	b.ne	43e16c <ferror@plt+0x3b43c>  // b.any
  43d65c:	cmp	w1, #0x7f
  43d660:	b.hi	43e16c <ferror@plt+0x3b43c>  // b.pmore
  43d664:	ldrb	w2, [x0, #1]
  43d668:	tbnz	w2, #5, 43e16c <ferror@plt+0x3b43c>
  43d66c:	orr	w1, w2, w1, lsl #8
  43d670:	sxtw	x1, w1
  43d674:	mov	x2, #0x4211                	// #16913
  43d678:	movk	x2, #0x2108, lsl #16
  43d67c:	movk	x2, #0x1084, lsl #32
  43d680:	movk	x2, #0x842, lsl #48
  43d684:	umulh	x3, x1, x2
  43d688:	sub	x2, x1, x3
  43d68c:	add	x2, x3, x2, lsr #1
  43d690:	lsr	x2, x2, #4
  43d694:	lsl	x3, x2, #5
  43d698:	sub	x2, x3, x2
  43d69c:	cmp	x1, x2
  43d6a0:	b.ne	43e16c <ferror@plt+0x3b43c>  // b.any
  43d6a4:	stp	x27, x28, [sp, #80]
  43d6a8:	add	x0, x0, #0x2
  43d6ac:	str	x0, [sp, #200]
  43d6b0:	str	xzr, [sp, #208]
  43d6b4:	str	wzr, [sp, #196]
  43d6b8:	tst	x0, #0x3
  43d6bc:	b.eq	43d6ec <ferror@plt+0x3a9bc>  // b.none
  43d6c0:	ldr	w1, [sp, #196]
  43d6c4:	ldrb	w2, [x0], #1
  43d6c8:	lsl	x3, x2, x1
  43d6cc:	ldr	x2, [sp, #208]
  43d6d0:	orr	x2, x2, x3
  43d6d4:	str	x2, [sp, #208]
  43d6d8:	add	w1, w1, #0x8
  43d6dc:	str	w1, [sp, #196]
  43d6e0:	str	x0, [sp, #200]
  43d6e4:	tst	x0, #0x3
  43d6e8:	b.ne	43d6c0 <ferror@plt+0x3a990>  // b.any
  43d6ec:	add	x25, sp, #0xc4
  43d6f0:	add	x24, sp, #0xd0
  43d6f4:	mov	x3, x25
  43d6f8:	mov	x2, x24
  43d6fc:	mov	x1, x23
  43d700:	add	x0, sp, #0xc8
  43d704:	bl	43d590 <ferror@plt+0x3a860>
  43d708:	cbz	w0, 43e0f8 <ferror@plt+0x3b3c8>
  43d70c:	ldr	x0, [sp, #208]
  43d710:	str	x0, [sp, #160]
  43d714:	ubfx	w1, w0, #1, #2
  43d718:	lsr	x0, x0, #3
  43d71c:	str	x0, [sp, #208]
  43d720:	ldr	w2, [sp, #196]
  43d724:	sub	w0, w2, #0x3
  43d728:	str	w0, [sp, #196]
  43d72c:	cmp	w1, #0x3
  43d730:	b.eq	43e100 <ferror@plt+0x3b3d0>  // b.none
  43d734:	cbz	w1, 43da88 <ferror@plt+0x3ad58>
  43d738:	cmp	w1, #0x1
  43d73c:	b.eq	43ddb4 <ferror@plt+0x3b084>  // b.none
  43d740:	mov	x3, x25
  43d744:	mov	x2, x24
  43d748:	mov	x1, x23
  43d74c:	add	x0, sp, #0xc8
  43d750:	bl	43d590 <ferror@plt+0x3a860>
  43d754:	cbz	w0, 43e128 <ferror@plt+0x3b3f8>
  43d758:	ldr	x0, [sp, #208]
  43d75c:	and	w27, w0, #0x1f
  43d760:	add	w27, w27, #0x101
  43d764:	ubfx	w28, w0, #5, #5
  43d768:	add	w28, w28, #0x1
  43d76c:	ubfx	w26, w0, #10, #4
  43d770:	add	w26, w26, #0x4
  43d774:	lsr	x0, x0, #14
  43d778:	str	x0, [sp, #208]
  43d77c:	ldr	w0, [sp, #196]
  43d780:	sub	w0, w0, #0xe
  43d784:	str	w0, [sp, #196]
  43d788:	cmp	w27, #0x11e
  43d78c:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
  43d790:	b.hi	43e130 <ferror@plt+0x3b400>  // b.pmore
  43d794:	stp	xzr, xzr, [sp, #216]
  43d798:	strh	wzr, [sp, #232]
  43d79c:	strb	wzr, [sp, #234]
  43d7a0:	mov	x3, x25
  43d7a4:	mov	x2, x24
  43d7a8:	mov	x1, x23
  43d7ac:	add	x0, sp, #0xc8
  43d7b0:	bl	43d590 <ferror@plt+0x3a860>
  43d7b4:	cbz	w0, 43e138 <ferror@plt+0x3b408>
  43d7b8:	ldr	x0, [sp, #208]
  43d7bc:	and	w1, w0, #0x7
  43d7c0:	strb	w1, [sp, #232]
  43d7c4:	ubfx	w1, w0, #3, #3
  43d7c8:	strb	w1, [sp, #233]
  43d7cc:	ubfx	w1, w0, #6, #3
  43d7d0:	strb	w1, [sp, #234]
  43d7d4:	ubfx	w1, w0, #9, #3
  43d7d8:	strb	w1, [sp, #216]
  43d7dc:	lsr	x2, x0, #12
  43d7e0:	str	x2, [sp, #208]
  43d7e4:	ldr	w1, [sp, #196]
  43d7e8:	sub	w3, w1, #0xc
  43d7ec:	str	w3, [sp, #196]
  43d7f0:	cmp	w26, #0x4
  43d7f4:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d7f8:	and	w2, w2, #0x7
  43d7fc:	strb	w2, [sp, #224]
  43d800:	lsr	x0, x0, #15
  43d804:	str	x0, [sp, #208]
  43d808:	sub	w1, w1, #0xf
  43d80c:	str	w1, [sp, #196]
  43d810:	cmp	w26, #0x5
  43d814:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d818:	mov	x3, x25
  43d81c:	mov	x2, x24
  43d820:	mov	x1, x23
  43d824:	add	x0, sp, #0xc8
  43d828:	bl	43d590 <ferror@plt+0x3a860>
  43d82c:	cbz	w0, 43e140 <ferror@plt+0x3b410>
  43d830:	ldr	x0, [sp, #208]
  43d834:	and	w1, w0, #0x7
  43d838:	strb	w1, [sp, #223]
  43d83c:	lsr	x2, x0, #3
  43d840:	str	x2, [sp, #208]
  43d844:	ldr	w1, [sp, #196]
  43d848:	sub	w3, w1, #0x3
  43d84c:	str	w3, [sp, #196]
  43d850:	cmp	w26, #0x6
  43d854:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d858:	and	w2, w2, #0x7
  43d85c:	strb	w2, [sp, #225]
  43d860:	lsr	x2, x0, #6
  43d864:	str	x2, [sp, #208]
  43d868:	sub	w3, w1, #0x6
  43d86c:	str	w3, [sp, #196]
  43d870:	cmp	w26, #0x7
  43d874:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d878:	and	w2, w2, #0x7
  43d87c:	strb	w2, [sp, #222]
  43d880:	lsr	x2, x0, #9
  43d884:	str	x2, [sp, #208]
  43d888:	sub	w3, w1, #0x9
  43d88c:	str	w3, [sp, #196]
  43d890:	cmp	w26, #0x8
  43d894:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d898:	and	w2, w2, #0x7
  43d89c:	strb	w2, [sp, #226]
  43d8a0:	lsr	x2, x0, #12
  43d8a4:	str	x2, [sp, #208]
  43d8a8:	sub	w3, w1, #0xc
  43d8ac:	str	w3, [sp, #196]
  43d8b0:	cmp	w26, #0x9
  43d8b4:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d8b8:	and	w2, w2, #0x7
  43d8bc:	strb	w2, [sp, #221]
  43d8c0:	lsr	x0, x0, #15
  43d8c4:	str	x0, [sp, #208]
  43d8c8:	sub	w1, w1, #0xf
  43d8cc:	str	w1, [sp, #196]
  43d8d0:	cmp	w26, #0xa
  43d8d4:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d8d8:	mov	x3, x25
  43d8dc:	mov	x2, x24
  43d8e0:	mov	x1, x23
  43d8e4:	add	x0, sp, #0xc8
  43d8e8:	bl	43d590 <ferror@plt+0x3a860>
  43d8ec:	cbz	w0, 43e148 <ferror@plt+0x3b418>
  43d8f0:	ldr	x0, [sp, #208]
  43d8f4:	and	w1, w0, #0x7
  43d8f8:	strb	w1, [sp, #227]
  43d8fc:	lsr	x2, x0, #3
  43d900:	str	x2, [sp, #208]
  43d904:	ldr	w1, [sp, #196]
  43d908:	sub	w3, w1, #0x3
  43d90c:	str	w3, [sp, #196]
  43d910:	cmp	w26, #0xb
  43d914:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d918:	and	w2, w2, #0x7
  43d91c:	strb	w2, [sp, #220]
  43d920:	lsr	x2, x0, #6
  43d924:	str	x2, [sp, #208]
  43d928:	sub	w3, w1, #0x6
  43d92c:	str	w3, [sp, #196]
  43d930:	cmp	w26, #0xc
  43d934:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d938:	and	w2, w2, #0x7
  43d93c:	strb	w2, [sp, #228]
  43d940:	lsr	x2, x0, #9
  43d944:	str	x2, [sp, #208]
  43d948:	sub	w3, w1, #0x9
  43d94c:	str	w3, [sp, #196]
  43d950:	cmp	w26, #0xd
  43d954:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d958:	and	w2, w2, #0x7
  43d95c:	strb	w2, [sp, #219]
  43d960:	lsr	x2, x0, #12
  43d964:	str	x2, [sp, #208]
  43d968:	sub	w3, w1, #0xc
  43d96c:	str	w3, [sp, #196]
  43d970:	cmp	w26, #0xe
  43d974:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d978:	and	w2, w2, #0x7
  43d97c:	strb	w2, [sp, #229]
  43d980:	lsr	x0, x0, #15
  43d984:	str	x0, [sp, #208]
  43d988:	sub	w1, w1, #0xf
  43d98c:	str	w1, [sp, #196]
  43d990:	cmp	w26, #0xf
  43d994:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d998:	mov	x3, x25
  43d99c:	mov	x2, x24
  43d9a0:	mov	x1, x23
  43d9a4:	add	x0, sp, #0xc8
  43d9a8:	bl	43d590 <ferror@plt+0x3a860>
  43d9ac:	cbz	w0, 43e150 <ferror@plt+0x3b420>
  43d9b0:	ldr	x0, [sp, #208]
  43d9b4:	and	w1, w0, #0x7
  43d9b8:	strb	w1, [sp, #218]
  43d9bc:	lsr	x2, x0, #3
  43d9c0:	str	x2, [sp, #208]
  43d9c4:	ldr	w1, [sp, #196]
  43d9c8:	sub	w3, w1, #0x3
  43d9cc:	str	w3, [sp, #196]
  43d9d0:	cmp	w26, #0x10
  43d9d4:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d9d8:	and	w2, w2, #0x7
  43d9dc:	strb	w2, [sp, #230]
  43d9e0:	lsr	x2, x0, #6
  43d9e4:	str	x2, [sp, #208]
  43d9e8:	sub	w3, w1, #0x6
  43d9ec:	str	w3, [sp, #196]
  43d9f0:	cmp	w26, #0x11
  43d9f4:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43d9f8:	and	w2, w2, #0x7
  43d9fc:	strb	w2, [sp, #217]
  43da00:	lsr	x2, x0, #9
  43da04:	str	x2, [sp, #208]
  43da08:	sub	w3, w1, #0x9
  43da0c:	str	w3, [sp, #196]
  43da10:	cmp	w26, #0x12
  43da14:	b.eq	43da30 <ferror@plt+0x3ad00>  // b.none
  43da18:	and	w2, w2, #0x7
  43da1c:	strb	w2, [sp, #231]
  43da20:	lsr	x0, x0, #12
  43da24:	str	x0, [sp, #208]
  43da28:	sub	w1, w1, #0xc
  43da2c:	str	w1, [sp, #196]
  43da30:	ldr	x26, [sp, #112]
  43da34:	mov	x3, x26
  43da38:	mov	x2, x26
  43da3c:	mov	x1, #0x13                  	// #19
  43da40:	add	x0, sp, #0xd8
  43da44:	bl	43d14c <ferror@plt+0x3a41c>
  43da48:	cbz	w0, 43e158 <ferror@plt+0x3b428>
  43da4c:	add	x0, x26, #0x1, lsl #12
  43da50:	add	x0, x0, #0x278
  43da54:	str	x0, [sp, #136]
  43da58:	mov	w1, w27
  43da5c:	str	x1, [sp, #168]
  43da60:	mov	w2, w28
  43da64:	str	x2, [sp, #184]
  43da68:	add	x28, x1, x2
  43da6c:	add	x28, x0, x28
  43da70:	cmp	x0, x28
  43da74:	b.cs	43dd5c <ferror@plt+0x3b02c>  // b.hs, b.nlast
  43da78:	mov	x26, x0
  43da7c:	add	x0, sp, #0xc8
  43da80:	str	x0, [sp, #128]
  43da84:	b	43dbe4 <ferror@plt+0x3aeb4>
  43da88:	cmp	w0, #0x8
  43da8c:	b.ls	43dab4 <ferror@plt+0x3ad84>  // b.plast
  43da90:	ldr	x1, [sp, #200]
  43da94:	sub	w0, w0, #0x8
  43da98:	cmp	w0, #0x8
  43da9c:	b.hi	43da94 <ferror@plt+0x3ad64>  // b.pmore
  43daa0:	sub	w2, w2, #0xc
  43daa4:	lsr	w2, w2, #3
  43daa8:	mvn	x2, x2
  43daac:	add	x2, x1, x2
  43dab0:	str	x2, [sp, #200]
  43dab4:	str	xzr, [sp, #208]
  43dab8:	str	wzr, [sp, #196]
  43dabc:	ldr	x27, [sp, #200]
  43dac0:	sub	x0, x23, x27
  43dac4:	cmp	x0, #0x3
  43dac8:	b.le	43e108 <ferror@plt+0x3b3d8>
  43dacc:	ldrb	w0, [x27, #1]
  43dad0:	ldrb	w26, [x27]
  43dad4:	bfi	w26, w0, #8, #24
  43dad8:	ldrb	w1, [x27, #3]
  43dadc:	ldrb	w0, [x27, #2]
  43dae0:	bfi	w0, w1, #8, #24
  43dae4:	add	x27, x27, #0x4
  43dae8:	str	x27, [sp, #200]
  43daec:	mvn	w0, w0
  43daf0:	cmp	w26, w0, uxth
  43daf4:	b.ne	43e110 <ferror@plt+0x3b3e0>  // b.any
  43daf8:	sub	x0, x23, x27
  43dafc:	cmp	w26, w0
  43db00:	b.hi	43e118 <ferror@plt+0x3b3e8>  // b.pmore
  43db04:	ldr	x0, [sp, #104]
  43db08:	sub	x0, x0, x22
  43db0c:	cmp	w26, w0
  43db10:	b.hi	43e120 <ferror@plt+0x3b3f0>  // b.pmore
  43db14:	and	x26, x26, #0xffff
  43db18:	mov	x2, x26
  43db1c:	mov	x1, x27
  43db20:	mov	x0, x22
  43db24:	bl	402620 <memcpy@plt>
  43db28:	add	x22, x22, x26
  43db2c:	add	x26, x27, x26
  43db30:	str	x26, [sp, #200]
  43db34:	tst	x26, #0x3
  43db38:	b.eq	43db68 <ferror@plt+0x3ae38>  // b.none
  43db3c:	ldr	w0, [sp, #196]
  43db40:	ldrb	w1, [x26], #1
  43db44:	lsl	x2, x1, x0
  43db48:	ldr	x1, [sp, #208]
  43db4c:	orr	x1, x1, x2
  43db50:	str	x1, [sp, #208]
  43db54:	add	w0, w0, #0x8
  43db58:	str	w0, [sp, #196]
  43db5c:	str	x26, [sp, #200]
  43db60:	tst	x26, #0x3
  43db64:	b.ne	43db3c <ferror@plt+0x3ae0c>  // b.any
  43db68:	ldr	x0, [sp, #160]
  43db6c:	tbz	w0, #0, 43d6f4 <ferror@plt+0x3a9c4>
  43db70:	ldr	x0, [sp, #200]
  43db74:	sub	x1, x23, x0
  43db78:	cmp	x1, #0x4
  43db7c:	b.le	43e0f0 <ferror@plt+0x3b3c0>
  43db80:	ldp	x27, x28, [sp, #80]
  43db84:	b	43d64c <ferror@plt+0x3a91c>
  43db88:	cmp	w3, #0x10
  43db8c:	b.eq	43dc44 <ferror@plt+0x3af14>  // b.none
  43db90:	cmp	w3, #0x11
  43db94:	b.eq	43dcb4 <ferror@plt+0x3af84>  // b.none
  43db98:	cmp	w3, #0x12
  43db9c:	b.ne	43e1a0 <ferror@plt+0x3b470>  // b.any
  43dba0:	and	w27, w0, #0x7f
  43dba4:	add	w27, w27, #0xb
  43dba8:	lsr	x0, x0, #7
  43dbac:	str	x0, [sp, #208]
  43dbb0:	sub	w1, w1, #0x8
  43dbb4:	str	w1, [sp, #196]
  43dbb8:	sub	x0, x28, x26
  43dbbc:	cmp	w27, w0
  43dbc0:	b.hi	43e1a8 <ferror@plt+0x3b478>  // b.pmore
  43dbc4:	mov	w27, w27
  43dbc8:	mov	x2, x27
  43dbcc:	mov	w1, #0x0                   	// #0
  43dbd0:	mov	x0, x26
  43dbd4:	bl	402890 <memset@plt>
  43dbd8:	add	x26, x26, x27
  43dbdc:	cmp	x26, x28
  43dbe0:	b.cs	43dd5c <ferror@plt+0x3b02c>  // b.hs, b.nlast
  43dbe4:	mov	x3, x25
  43dbe8:	mov	x2, x24
  43dbec:	mov	x1, x23
  43dbf0:	ldr	x0, [sp, #128]
  43dbf4:	bl	43d590 <ferror@plt+0x3a860>
  43dbf8:	cbz	w0, 43e160 <ferror@plt+0x3b430>
  43dbfc:	ldr	x0, [sp, #208]
  43dc00:	and	x1, x0, #0xff
  43dc04:	ldr	x2, [sp, #112]
  43dc08:	ldrh	w2, [x2, x1, lsl #1]
  43dc0c:	tbnz	w2, #12, 43e168 <ferror@plt+0x3b438>
  43dc10:	ubfx	x3, x2, #9, #3
  43dc14:	add	w1, w3, #0x1
  43dc18:	lsr	x0, x0, x1
  43dc1c:	str	x0, [sp, #208]
  43dc20:	ldr	w1, [sp, #196]
  43dc24:	sub	w1, w1, w3
  43dc28:	sub	w3, w1, #0x1
  43dc2c:	str	w3, [sp, #196]
  43dc30:	and	w3, w2, #0x1ff
  43dc34:	tst	w2, #0x1f0
  43dc38:	b.ne	43db88 <ferror@plt+0x3ae58>  // b.any
  43dc3c:	strb	w3, [x26], #1
  43dc40:	b	43dbdc <ferror@plt+0x3aeac>
  43dc44:	ldr	x2, [sp, #136]
  43dc48:	cmp	x26, x2
  43dc4c:	b.eq	43e188 <ferror@plt+0x3b458>  // b.none
  43dc50:	and	w2, w0, #0x3
  43dc54:	add	w2, w2, #0x3
  43dc58:	lsr	x0, x0, #2
  43dc5c:	str	x0, [sp, #208]
  43dc60:	sub	w1, w1, #0x3
  43dc64:	str	w1, [sp, #196]
  43dc68:	sub	x0, x28, x26
  43dc6c:	cmp	w2, w0
  43dc70:	b.hi	43e190 <ferror@plt+0x3b460>  // b.pmore
  43dc74:	ldurb	w0, [x26, #-1]
  43dc78:	cmp	w2, #0x5
  43dc7c:	b.eq	43dc98 <ferror@plt+0x3af68>  // b.none
  43dc80:	cmp	w2, #0x6
  43dc84:	b.eq	43dc94 <ferror@plt+0x3af64>  // b.none
  43dc88:	cmp	w2, #0x4
  43dc8c:	b.ne	43dca0 <ferror@plt+0x3af70>  // b.any
  43dc90:	b	43dc9c <ferror@plt+0x3af6c>
  43dc94:	strb	w0, [x26], #1
  43dc98:	strb	w0, [x26], #1
  43dc9c:	strb	w0, [x26], #1
  43dca0:	strb	w0, [x26]
  43dca4:	strb	w0, [x26, #1]
  43dca8:	strb	w0, [x26, #2]
  43dcac:	add	x26, x26, #0x3
  43dcb0:	b	43dbdc <ferror@plt+0x3aeac>
  43dcb4:	and	w2, w0, #0x7
  43dcb8:	add	w2, w2, #0x3
  43dcbc:	lsr	x0, x0, #3
  43dcc0:	str	x0, [sp, #208]
  43dcc4:	sub	w1, w1, #0x4
  43dcc8:	str	w1, [sp, #196]
  43dccc:	sub	x0, x28, x26
  43dcd0:	cmp	w2, w0
  43dcd4:	b.hi	43e198 <ferror@plt+0x3b468>  // b.pmore
  43dcd8:	cmp	w2, #0x7
  43dcdc:	b.eq	43dd54 <ferror@plt+0x3b024>  // b.none
  43dce0:	b.hi	43dd28 <ferror@plt+0x3aff8>  // b.pmore
  43dce4:	cmp	w2, #0x5
  43dce8:	b.eq	43dcf8 <ferror@plt+0x3afc8>  // b.none
  43dcec:	cmp	w2, #0x6
  43dcf0:	b.ne	43dd00 <ferror@plt+0x3afd0>  // b.any
  43dcf4:	strb	wzr, [x26], #1
  43dcf8:	strb	wzr, [x26], #1
  43dcfc:	b	43dd0c <ferror@plt+0x3afdc>
  43dd00:	mov	x0, x26
  43dd04:	cmp	w2, #0x4
  43dd08:	b.ne	43dd14 <ferror@plt+0x3afe4>  // b.any
  43dd0c:	mov	x0, x26
  43dd10:	strb	wzr, [x0], #1
  43dd14:	strb	wzr, [x0]
  43dd18:	strb	wzr, [x0, #1]
  43dd1c:	add	x26, x0, #0x3
  43dd20:	strb	wzr, [x0, #2]
  43dd24:	b	43dbdc <ferror@plt+0x3aeac>
  43dd28:	cmp	w2, #0x9
  43dd2c:	b.eq	43dd3c <ferror@plt+0x3b00c>  // b.none
  43dd30:	cmp	w2, #0xa
  43dd34:	b.ne	43dd44 <ferror@plt+0x3b014>  // b.any
  43dd38:	strb	wzr, [x26], #1
  43dd3c:	strb	wzr, [x26], #1
  43dd40:	b	43dd50 <ferror@plt+0x3b020>
  43dd44:	mov	x0, x26
  43dd48:	cmp	w2, #0x8
  43dd4c:	b.ne	43dd14 <ferror@plt+0x3afe4>  // b.any
  43dd50:	strb	wzr, [x26], #1
  43dd54:	strb	wzr, [x26], #1
  43dd58:	b	43dcf4 <ferror@plt+0x3afc4>
  43dd5c:	ldr	x26, [sp, #112]
  43dd60:	add	x0, x26, #0x1, lsl #12
  43dd64:	ldrb	w0, [x0, #888]
  43dd68:	cbz	w0, 43e1b0 <ferror@plt+0x3b480>
  43dd6c:	mov	x3, x26
  43dd70:	mov	x2, x26
  43dd74:	ldr	x28, [sp, #168]
  43dd78:	mov	x1, x28
  43dd7c:	ldr	x27, [sp, #136]
  43dd80:	mov	x0, x27
  43dd84:	bl	43d14c <ferror@plt+0x3a41c>
  43dd88:	cbz	w0, 43e1b8 <ferror@plt+0x3b488>
  43dd8c:	add	x2, x26, #0x800
  43dd90:	str	x2, [sp, #176]
  43dd94:	mov	x3, x2
  43dd98:	mov	x2, x26
  43dd9c:	ldr	x1, [sp, #184]
  43dda0:	add	x0, x27, x28
  43dda4:	bl	43d14c <ferror@plt+0x3a41c>
  43dda8:	cbz	w0, 43e1c0 <ferror@plt+0x3b490>
  43ddac:	str	x26, [sp, #136]
  43ddb0:	b	43ddc4 <ferror@plt+0x3b094>
  43ddb4:	ldr	x0, [sp, #144]
  43ddb8:	str	x0, [sp, #176]
  43ddbc:	ldr	x0, [sp, #152]
  43ddc0:	str	x0, [sp, #136]
  43ddc4:	add	x0, sp, #0xc8
  43ddc8:	str	x0, [sp, #128]
  43ddcc:	b	43de20 <ferror@plt+0x3b0f0>
  43ddd0:	mov	w2, #0x1                   	// #1
  43ddd4:	lsl	w1, w2, w1
  43ddd8:	sub	w1, w1, #0x1
  43dddc:	and	x1, x1, x0, lsr #8
  43dde0:	add	w26, w26, #0x100
  43dde4:	add	x1, x1, w26, sxtw
  43dde8:	ldr	x2, [sp, #136]
  43ddec:	ldrh	w26, [x2, x1, lsl #1]
  43ddf0:	ubfx	x1, x26, #9, #3
  43ddf4:	and	w26, w26, #0x1ff
  43ddf8:	add	w2, w1, #0x8
  43ddfc:	lsr	x0, x0, x2
  43de00:	str	x0, [sp, #208]
  43de04:	ldr	w0, [sp, #196]
  43de08:	sub	w0, w0, #0x8
  43de0c:	sub	w0, w0, w1
  43de10:	str	w0, [sp, #196]
  43de14:	b	43de70 <ferror@plt+0x3b140>
  43de18:	strb	w26, [x22], #1
  43de1c:	prfm	pstl1keep, [x22]
  43de20:	mov	x3, x25
  43de24:	mov	x2, x24
  43de28:	mov	x1, x23
  43de2c:	ldr	x0, [sp, #128]
  43de30:	bl	43d590 <ferror@plt+0x3a860>
  43de34:	cbz	w0, 43e1c8 <ferror@plt+0x3b498>
  43de38:	ldr	x0, [sp, #208]
  43de3c:	and	x1, x0, #0xff
  43de40:	ldr	x2, [sp, #136]
  43de44:	ldrh	w2, [x2, x1, lsl #1]
  43de48:	ubfx	x1, x2, #9, #3
  43de4c:	and	w26, w2, #0x1ff
  43de50:	tbnz	w2, #12, 43ddd0 <ferror@plt+0x3b0a0>
  43de54:	add	w2, w1, #0x1
  43de58:	lsr	x0, x0, x2
  43de5c:	str	x0, [sp, #208]
  43de60:	ldr	w0, [sp, #196]
  43de64:	sub	w0, w0, #0x1
  43de68:	sub	w1, w0, w1
  43de6c:	str	w1, [sp, #196]
  43de70:	cmp	w26, #0xff
  43de74:	b.hi	43de8c <ferror@plt+0x3b15c>  // b.pmore
  43de78:	ldr	x0, [sp, #104]
  43de7c:	cmp	x0, x22
  43de80:	b.ne	43de18 <ferror@plt+0x3b0e8>  // b.any
  43de84:	ldp	x27, x28, [sp, #80]
  43de88:	b	43e16c <ferror@plt+0x3b43c>
  43de8c:	cmp	w26, #0x100
  43de90:	b.eq	43db68 <ferror@plt+0x3ae38>  // b.none
  43de94:	cmp	w26, #0x108
  43de98:	b.hi	43df28 <ferror@plt+0x3b1f8>  // b.pmore
  43de9c:	sub	w28, w26, #0xfe
  43dea0:	mov	x3, x25
  43dea4:	mov	x2, x24
  43dea8:	mov	x1, x23
  43deac:	ldr	x0, [sp, #128]
  43deb0:	bl	43d590 <ferror@plt+0x3a860>
  43deb4:	cbz	w0, 43e1e0 <ferror@plt+0x3b4b0>
  43deb8:	ldr	x0, [sp, #208]
  43debc:	and	x1, x0, #0xff
  43dec0:	ldr	x2, [sp, #176]
  43dec4:	ldrh	w2, [x2, x1, lsl #1]
  43dec8:	ubfx	x1, x2, #9, #3
  43decc:	and	w26, w2, #0x1ff
  43ded0:	tbnz	w2, #12, 43dfa8 <ferror@plt+0x3b278>
  43ded4:	add	w2, w1, #0x1
  43ded8:	lsr	x0, x0, x2
  43dedc:	str	x0, [sp, #208]
  43dee0:	ldr	w0, [sp, #196]
  43dee4:	sub	w0, w0, #0x1
  43dee8:	sub	w1, w0, w1
  43deec:	str	w1, [sp, #196]
  43def0:	cbnz	w26, 43dff0 <ferror@plt+0x3b2c0>
  43def4:	cmp	x19, x22
  43def8:	b.eq	43e1e8 <ferror@plt+0x3b4b8>  // b.none
  43defc:	ldr	x0, [sp, #104]
  43df00:	sub	x0, x0, x22
  43df04:	cmp	w28, w0
  43df08:	b.hi	43e1f0 <ferror@plt+0x3b4c0>  // b.pmore
  43df0c:	mov	w28, w28
  43df10:	mov	x2, x28
  43df14:	ldurb	w1, [x22, #-1]
  43df18:	mov	x0, x22
  43df1c:	bl	402890 <memset@plt>
  43df20:	add	x22, x22, x28
  43df24:	b	43de20 <ferror@plt+0x3b0f0>
  43df28:	cmp	w26, #0x11d
  43df2c:	b.eq	43dfa0 <ferror@plt+0x3b270>  // b.none
  43df30:	b.hi	43e1d0 <ferror@plt+0x3b4a0>  // b.pmore
  43df34:	mov	x3, x25
  43df38:	mov	x2, x24
  43df3c:	mov	x1, x23
  43df40:	ldr	x0, [sp, #128]
  43df44:	bl	43d590 <ferror@plt+0x3a860>
  43df48:	cbz	w0, 43e1d8 <ferror@plt+0x3b4a8>
  43df4c:	sub	w26, w26, #0x109
  43df50:	lsr	w1, w26, #2
  43df54:	add	w2, w1, #0x1
  43df58:	and	w26, w26, #0x3
  43df5c:	lsl	w0, w26, w2
  43df60:	add	w0, w0, #0xb
  43df64:	ldr	x3, [sp, #208]
  43df68:	mov	w4, #0x1                   	// #1
  43df6c:	lsl	w1, w4, w1
  43df70:	sub	w1, w1, #0x1
  43df74:	mov	w4, #0xffffffff            	// #-1
  43df78:	lsl	w4, w4, w2
  43df7c:	bic	w4, w3, w4
  43df80:	add	w1, w4, w1, lsl #3
  43df84:	add	w28, w1, w0
  43df88:	lsr	x3, x3, x2
  43df8c:	str	x3, [sp, #208]
  43df90:	ldr	w0, [sp, #196]
  43df94:	sub	w2, w0, w2
  43df98:	str	w2, [sp, #196]
  43df9c:	b	43dea0 <ferror@plt+0x3b170>
  43dfa0:	mov	w28, #0x102                 	// #258
  43dfa4:	b	43dea0 <ferror@plt+0x3b170>
  43dfa8:	mov	w2, #0x1                   	// #1
  43dfac:	lsl	w1, w2, w1
  43dfb0:	sub	w1, w1, #0x1
  43dfb4:	and	x1, x1, x0, lsr #8
  43dfb8:	add	w26, w26, #0x100
  43dfbc:	add	x1, x1, w26, sxtw
  43dfc0:	ldr	x2, [sp, #176]
  43dfc4:	ldrh	w26, [x2, x1, lsl #1]
  43dfc8:	ubfx	x1, x26, #9, #3
  43dfcc:	and	w26, w26, #0x1ff
  43dfd0:	add	w2, w1, #0x8
  43dfd4:	lsr	x0, x0, x2
  43dfd8:	str	x0, [sp, #208]
  43dfdc:	ldr	w0, [sp, #196]
  43dfe0:	sub	w0, w0, #0x8
  43dfe4:	sub	w0, w0, w1
  43dfe8:	str	w0, [sp, #196]
  43dfec:	b	43def0 <ferror@plt+0x3b1c0>
  43dff0:	cmp	w26, #0x1d
  43dff4:	b.hi	43e1f8 <ferror@plt+0x3b4c8>  // b.pmore
  43dff8:	cmp	w26, #0x3
  43dffc:	b.hi	43e044 <ferror@plt+0x3b314>  // b.pmore
  43e000:	add	w26, w26, #0x1
  43e004:	sub	x0, x22, x19
  43e008:	cmp	w26, w0
  43e00c:	b.hi	43e208 <ferror@plt+0x3b4d8>  // b.pmore
  43e010:	ldr	x0, [sp, #104]
  43e014:	sub	x0, x0, x22
  43e018:	cmp	w28, w0
  43e01c:	b.hi	43e210 <ferror@plt+0x3b4e0>  // b.pmore
  43e020:	cmp	w28, w26
  43e024:	b.hi	43e0b0 <ferror@plt+0x3b380>  // b.pmore
  43e028:	mov	w27, w28
  43e02c:	mov	x2, x27
  43e030:	sub	x1, x22, w26, uxtw
  43e034:	mov	x0, x22
  43e038:	bl	402620 <memcpy@plt>
  43e03c:	add	x22, x22, x27
  43e040:	b	43de20 <ferror@plt+0x3b0f0>
  43e044:	mov	x3, x25
  43e048:	mov	x2, x24
  43e04c:	mov	x1, x23
  43e050:	ldr	x0, [sp, #128]
  43e054:	bl	43d590 <ferror@plt+0x3a860>
  43e058:	cbz	w0, 43e200 <ferror@plt+0x3b4d0>
  43e05c:	sub	w26, w26, #0x4
  43e060:	lsr	w1, w26, #1
  43e064:	add	w2, w1, #0x1
  43e068:	and	w26, w26, #0x1
  43e06c:	lsl	w0, w26, w2
  43e070:	add	w0, w0, #0x5
  43e074:	ldr	x3, [sp, #208]
  43e078:	mov	w4, #0x1                   	// #1
  43e07c:	lsl	w1, w4, w1
  43e080:	sub	w1, w1, #0x1
  43e084:	mov	w4, #0xffffffff            	// #-1
  43e088:	lsl	w4, w4, w2
  43e08c:	bic	w4, w3, w4
  43e090:	add	w1, w4, w1, lsl #2
  43e094:	add	w26, w1, w0
  43e098:	lsr	x3, x3, x2
  43e09c:	str	x3, [sp, #208]
  43e0a0:	ldr	w0, [sp, #196]
  43e0a4:	sub	w2, w0, w2
  43e0a8:	str	w2, [sp, #196]
  43e0ac:	b	43e004 <ferror@plt+0x3b2d4>
  43e0b0:	mov	w0, w26
  43e0b4:	str	x0, [sp, #184]
  43e0b8:	cmp	w28, w26
  43e0bc:	csel	w0, w28, w26, ls  // ls = plast
  43e0c0:	str	w0, [sp, #168]
  43e0c4:	csel	w27, w28, w26, ls  // ls = plast
  43e0c8:	mov	x2, x27
  43e0cc:	ldr	x1, [sp, #184]
  43e0d0:	sub	x1, x22, x1
  43e0d4:	mov	x0, x22
  43e0d8:	bl	402620 <memcpy@plt>
  43e0dc:	add	x22, x22, x27
  43e0e0:	ldr	w0, [sp, #168]
  43e0e4:	subs	w28, w28, w0
  43e0e8:	b.ne	43e0b8 <ferror@plt+0x3b388>  // b.any
  43e0ec:	b	43de20 <ferror@plt+0x3b0f0>
  43e0f0:	ldp	x27, x28, [sp, #80]
  43e0f4:	b	43e21c <ferror@plt+0x3b4ec>
  43e0f8:	ldp	x27, x28, [sp, #80]
  43e0fc:	b	43e16c <ferror@plt+0x3b43c>
  43e100:	ldp	x27, x28, [sp, #80]
  43e104:	b	43e16c <ferror@plt+0x3b43c>
  43e108:	ldp	x27, x28, [sp, #80]
  43e10c:	b	43e16c <ferror@plt+0x3b43c>
  43e110:	ldp	x27, x28, [sp, #80]
  43e114:	b	43e16c <ferror@plt+0x3b43c>
  43e118:	ldp	x27, x28, [sp, #80]
  43e11c:	b	43e16c <ferror@plt+0x3b43c>
  43e120:	ldp	x27, x28, [sp, #80]
  43e124:	b	43e16c <ferror@plt+0x3b43c>
  43e128:	ldp	x27, x28, [sp, #80]
  43e12c:	b	43e16c <ferror@plt+0x3b43c>
  43e130:	ldp	x27, x28, [sp, #80]
  43e134:	b	43e16c <ferror@plt+0x3b43c>
  43e138:	ldp	x27, x28, [sp, #80]
  43e13c:	b	43e16c <ferror@plt+0x3b43c>
  43e140:	ldp	x27, x28, [sp, #80]
  43e144:	b	43e16c <ferror@plt+0x3b43c>
  43e148:	ldp	x27, x28, [sp, #80]
  43e14c:	b	43e16c <ferror@plt+0x3b43c>
  43e150:	ldp	x27, x28, [sp, #80]
  43e154:	b	43e16c <ferror@plt+0x3b43c>
  43e158:	ldp	x27, x28, [sp, #80]
  43e15c:	b	43e16c <ferror@plt+0x3b43c>
  43e160:	ldp	x27, x28, [sp, #80]
  43e164:	b	43e16c <ferror@plt+0x3b43c>
  43e168:	ldp	x27, x28, [sp, #80]
  43e16c:	mov	w0, #0x0                   	// #0
  43e170:	ldp	x19, x20, [sp, #16]
  43e174:	ldp	x21, x22, [sp, #32]
  43e178:	ldp	x23, x24, [sp, #48]
  43e17c:	ldp	x25, x26, [sp, #64]
  43e180:	ldp	x29, x30, [sp], #240
  43e184:	ret
  43e188:	ldp	x27, x28, [sp, #80]
  43e18c:	b	43e16c <ferror@plt+0x3b43c>
  43e190:	ldp	x27, x28, [sp, #80]
  43e194:	b	43e16c <ferror@plt+0x3b43c>
  43e198:	ldp	x27, x28, [sp, #80]
  43e19c:	b	43e16c <ferror@plt+0x3b43c>
  43e1a0:	ldp	x27, x28, [sp, #80]
  43e1a4:	b	43e16c <ferror@plt+0x3b43c>
  43e1a8:	ldp	x27, x28, [sp, #80]
  43e1ac:	b	43e16c <ferror@plt+0x3b43c>
  43e1b0:	ldp	x27, x28, [sp, #80]
  43e1b4:	b	43e16c <ferror@plt+0x3b43c>
  43e1b8:	ldp	x27, x28, [sp, #80]
  43e1bc:	b	43e16c <ferror@plt+0x3b43c>
  43e1c0:	ldp	x27, x28, [sp, #80]
  43e1c4:	b	43e16c <ferror@plt+0x3b43c>
  43e1c8:	ldp	x27, x28, [sp, #80]
  43e1cc:	b	43e16c <ferror@plt+0x3b43c>
  43e1d0:	ldp	x27, x28, [sp, #80]
  43e1d4:	b	43e16c <ferror@plt+0x3b43c>
  43e1d8:	ldp	x27, x28, [sp, #80]
  43e1dc:	b	43e16c <ferror@plt+0x3b43c>
  43e1e0:	ldp	x27, x28, [sp, #80]
  43e1e4:	b	43e16c <ferror@plt+0x3b43c>
  43e1e8:	ldp	x27, x28, [sp, #80]
  43e1ec:	b	43e16c <ferror@plt+0x3b43c>
  43e1f0:	ldp	x27, x28, [sp, #80]
  43e1f4:	b	43e16c <ferror@plt+0x3b43c>
  43e1f8:	ldp	x27, x28, [sp, #80]
  43e1fc:	b	43e16c <ferror@plt+0x3b43c>
  43e200:	ldp	x27, x28, [sp, #80]
  43e204:	b	43e16c <ferror@plt+0x3b43c>
  43e208:	ldp	x27, x28, [sp, #80]
  43e20c:	b	43e16c <ferror@plt+0x3b43c>
  43e210:	ldp	x27, x28, [sp, #80]
  43e214:	b	43e16c <ferror@plt+0x3b43c>
  43e218:	mov	x22, x3
  43e21c:	ldr	x0, [sp, #104]
  43e220:	cmp	x0, x22
  43e224:	b.ne	43e4b4 <ferror@plt+0x3b784>  // b.any
  43e228:	ldr	x1, [sp, #120]
  43e22c:	sub	x0, x1, #0x4
  43e230:	add	x0, x21, x0
  43e234:	add	x21, x21, x1
  43e238:	mov	w9, #0x0                   	// #0
  43e23c:	ldrb	w1, [x0], #1
  43e240:	orr	w9, w1, w9, lsl #8
  43e244:	cmp	x21, x0
  43e248:	b.ne	43e23c <ferror@plt+0x3b50c>  // b.any
  43e24c:	mov	w5, #0x0                   	// #0
  43e250:	mov	w3, #0x1                   	// #1
  43e254:	mov	x0, #0x15af                	// #5551
  43e258:	cmp	x20, x0
  43e25c:	b.ls	43e4a8 <ferror@plt+0x3b778>  // b.plast
  43e260:	mov	x13, #0x15b0                	// #5552
  43e264:	mov	w15, #0x8071                	// #32881
  43e268:	movk	w15, #0x8007, lsl #16
  43e26c:	mov	w14, #0xfff1                	// #65521
  43e270:	mov	x17, x0
  43e274:	mov	x2, x19
  43e278:	add	x16, x19, x13
  43e27c:	ldrb	w0, [x2]
  43e280:	add	w0, w0, w3
  43e284:	ldrb	w1, [x2, #1]
  43e288:	add	w1, w1, w0
  43e28c:	ldrb	w6, [x2, #2]
  43e290:	add	w6, w6, w1
  43e294:	ldrb	w25, [x2, #3]
  43e298:	add	w25, w25, w6
  43e29c:	ldrb	w4, [x2, #4]
  43e2a0:	add	w4, w4, w25
  43e2a4:	ldrb	w24, [x2, #5]
  43e2a8:	add	w24, w24, w4
  43e2ac:	ldrb	w12, [x2, #6]
  43e2b0:	add	w12, w12, w24
  43e2b4:	ldrb	w23, [x2, #7]
  43e2b8:	add	w23, w23, w12
  43e2bc:	ldrb	w11, [x2, #8]
  43e2c0:	add	w11, w11, w23
  43e2c4:	ldrb	w22, [x2, #9]
  43e2c8:	add	w22, w22, w11
  43e2cc:	ldrb	w10, [x2, #10]
  43e2d0:	add	w10, w10, w22
  43e2d4:	ldrb	w21, [x2, #11]
  43e2d8:	add	w21, w21, w10
  43e2dc:	ldrb	w8, [x2, #12]
  43e2e0:	add	w8, w8, w21
  43e2e4:	ldrb	w18, [x2, #13]
  43e2e8:	add	w18, w18, w8
  43e2ec:	ldrb	w7, [x2, #14]
  43e2f0:	add	w7, w7, w18
  43e2f4:	add	x2, x2, #0x10
  43e2f8:	ldurb	w3, [x2, #-1]
  43e2fc:	add	w3, w3, w7
  43e300:	add	w1, w0, w1
  43e304:	add	w6, w6, w25
  43e308:	add	w1, w1, w6
  43e30c:	add	w4, w4, w24
  43e310:	add	w1, w1, w4
  43e314:	add	w12, w12, w23
  43e318:	add	w1, w1, w12
  43e31c:	add	w0, w11, w22
  43e320:	add	w0, w1, w0
  43e324:	add	w10, w10, w21
  43e328:	add	w0, w0, w10
  43e32c:	add	w8, w8, w18
  43e330:	add	w0, w0, w8
  43e334:	add	w7, w7, w3
  43e338:	add	w0, w0, w7
  43e33c:	add	w5, w5, w0
  43e340:	cmp	x2, x16
  43e344:	b.ne	43e27c <ferror@plt+0x3b54c>  // b.any
  43e348:	add	x19, x19, x13
  43e34c:	sub	x20, x20, x13
  43e350:	umull	x0, w3, w15
  43e354:	lsr	x0, x0, #47
  43e358:	msub	w3, w0, w14, w3
  43e35c:	umull	x0, w5, w15
  43e360:	lsr	x0, x0, #47
  43e364:	msub	w5, w0, w14, w5
  43e368:	cmp	x20, x17
  43e36c:	b.hi	43e274 <ferror@plt+0x3b544>  // b.pmore
  43e370:	cmp	x20, #0xf
  43e374:	b.ls	43e458 <ferror@plt+0x3b728>  // b.plast
  43e378:	sub	x12, x20, #0x10
  43e37c:	and	x12, x12, #0xfffffffffffffff0
  43e380:	add	x12, x12, #0x10
  43e384:	add	x12, x19, x12
  43e388:	ldrb	w0, [x19]
  43e38c:	add	w0, w0, w3
  43e390:	ldrb	w1, [x19, #1]
  43e394:	add	w1, w1, w0
  43e398:	ldrb	w11, [x19, #2]
  43e39c:	add	w11, w11, w1
  43e3a0:	ldrb	w18, [x19, #3]
  43e3a4:	add	w18, w18, w11
  43e3a8:	ldrb	w10, [x19, #4]
  43e3ac:	add	w10, w10, w18
  43e3b0:	ldrb	w17, [x19, #5]
  43e3b4:	add	w17, w17, w10
  43e3b8:	ldrb	w8, [x19, #6]
  43e3bc:	add	w8, w8, w17
  43e3c0:	ldrb	w16, [x19, #7]
  43e3c4:	add	w16, w16, w8
  43e3c8:	ldrb	w7, [x19, #8]
  43e3cc:	add	w7, w7, w16
  43e3d0:	ldrb	w15, [x19, #9]
  43e3d4:	add	w15, w15, w7
  43e3d8:	ldrb	w6, [x19, #10]
  43e3dc:	add	w6, w6, w15
  43e3e0:	ldrb	w14, [x19, #11]
  43e3e4:	add	w14, w14, w6
  43e3e8:	ldrb	w4, [x19, #12]
  43e3ec:	add	w4, w4, w14
  43e3f0:	ldrb	w13, [x19, #13]
  43e3f4:	add	w13, w13, w4
  43e3f8:	ldrb	w2, [x19, #14]
  43e3fc:	add	w2, w2, w13
  43e400:	add	x19, x19, #0x10
  43e404:	ldurb	w3, [x19, #-1]
  43e408:	add	w3, w3, w2
  43e40c:	add	w1, w0, w1
  43e410:	add	w11, w11, w18
  43e414:	add	w1, w1, w11
  43e418:	add	w10, w10, w17
  43e41c:	add	w1, w1, w10
  43e420:	add	w8, w8, w16
  43e424:	add	w1, w1, w8
  43e428:	add	w0, w7, w15
  43e42c:	add	w0, w1, w0
  43e430:	add	w6, w6, w14
  43e434:	add	w0, w0, w6
  43e438:	add	w4, w4, w13
  43e43c:	add	w0, w0, w4
  43e440:	add	w2, w2, w3
  43e444:	add	w0, w0, w2
  43e448:	add	w5, w5, w0
  43e44c:	cmp	x12, x19
  43e450:	b.ne	43e388 <ferror@plt+0x3b658>  // b.any
  43e454:	and	x20, x20, #0xf
  43e458:	cbz	x20, 43e474 <ferror@plt+0x3b744>
  43e45c:	add	x20, x19, x20
  43e460:	ldrb	w0, [x19], #1
  43e464:	add	w3, w3, w0
  43e468:	add	w5, w5, w3
  43e46c:	cmp	x19, x20
  43e470:	b.ne	43e460 <ferror@plt+0x3b730>  // b.any
  43e474:	mov	w0, #0x8071                	// #32881
  43e478:	movk	w0, #0x8007, lsl #16
  43e47c:	umull	x1, w5, w0
  43e480:	lsr	x1, x1, #47
  43e484:	mov	w2, #0xfff1                	// #65521
  43e488:	msub	w5, w1, w2, w5
  43e48c:	umull	x0, w3, w0
  43e490:	lsr	x0, x0, #47
  43e494:	msub	w3, w0, w2, w3
  43e498:	add	w3, w3, w5, lsl #16
  43e49c:	cmp	w3, w9
  43e4a0:	cset	w0, eq  // eq = none
  43e4a4:	b	43e170 <ferror@plt+0x3b440>
  43e4a8:	mov	w5, #0x0                   	// #0
  43e4ac:	mov	w3, #0x1                   	// #1
  43e4b0:	b	43e370 <ferror@plt+0x3b640>
  43e4b4:	mov	w0, #0x0                   	// #0
  43e4b8:	b	43e170 <ferror@plt+0x3b440>
  43e4bc:	stp	x29, x30, [sp, #-112]!
  43e4c0:	mov	x29, sp
  43e4c4:	stp	x21, x22, [sp, #32]
  43e4c8:	str	x5, [sp, #104]
  43e4cc:	str	xzr, [x6]
  43e4d0:	str	xzr, [x7]
  43e4d4:	mov	w21, #0x1                   	// #1
  43e4d8:	cmp	x2, #0xb
  43e4dc:	b.ls	43e5a8 <ferror@plt+0x3b878>  // b.plast
  43e4e0:	stp	x19, x20, [sp, #16]
  43e4e4:	stp	x23, x24, [sp, #48]
  43e4e8:	stp	x25, x26, [sp, #64]
  43e4ec:	stp	x27, x28, [sp, #80]
  43e4f0:	mov	x26, x0
  43e4f4:	mov	x20, x1
  43e4f8:	mov	x23, x2
  43e4fc:	mov	x25, x3
  43e500:	mov	x27, x4
  43e504:	mov	x22, x6
  43e508:	mov	x24, x7
  43e50c:	mov	x2, #0x4                   	// #4
  43e510:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43e514:	add	x1, x1, #0xa98
  43e518:	mov	x0, x20
  43e51c:	bl	4029e0 <memcmp@plt>
  43e520:	mov	w21, w0
  43e524:	cbnz	w0, 43e5b8 <ferror@plt+0x3b888>
  43e528:	add	x0, x20, #0x4
  43e52c:	add	x2, x20, #0xc
  43e530:	mov	x19, #0x0                   	// #0
  43e534:	ldrb	w1, [x0], #1
  43e538:	orr	x19, x1, x19, lsl #8
  43e53c:	cmp	x0, x2
  43e540:	b.ne	43e534 <ferror@plt+0x3b804>  // b.any
  43e544:	ldr	x28, [x22]
  43e548:	cmp	x19, #0x0
  43e54c:	ccmp	x28, #0x0, #0x4, eq  // eq = none
  43e550:	b.ne	43e570 <ferror@plt+0x3b840>  // b.any
  43e554:	ldr	x3, [sp, #104]
  43e558:	mov	x2, x27
  43e55c:	mov	x1, x19
  43e560:	mov	x0, x26
  43e564:	bl	43c9e0 <ferror@plt+0x39cb0>
  43e568:	mov	x28, x0
  43e56c:	cbz	x0, 43e5d0 <ferror@plt+0x3b8a0>
  43e570:	mov	x4, x19
  43e574:	mov	x3, x28
  43e578:	mov	x2, x25
  43e57c:	sub	x1, x23, #0xc
  43e580:	add	x0, x20, #0xc
  43e584:	bl	43d5ec <ferror@plt+0x3a8bc>
  43e588:	mov	w21, #0x1                   	// #1
  43e58c:	cbz	w0, 43e5e4 <ferror@plt+0x3b8b4>
  43e590:	str	x28, [x22]
  43e594:	str	x19, [x24]
  43e598:	ldp	x19, x20, [sp, #16]
  43e59c:	ldp	x23, x24, [sp, #48]
  43e5a0:	ldp	x25, x26, [sp, #64]
  43e5a4:	ldp	x27, x28, [sp, #80]
  43e5a8:	mov	w0, w21
  43e5ac:	ldp	x21, x22, [sp, #32]
  43e5b0:	ldp	x29, x30, [sp], #112
  43e5b4:	ret
  43e5b8:	mov	w21, #0x1                   	// #1
  43e5bc:	ldp	x19, x20, [sp, #16]
  43e5c0:	ldp	x23, x24, [sp, #48]
  43e5c4:	ldp	x25, x26, [sp, #64]
  43e5c8:	ldp	x27, x28, [sp, #80]
  43e5cc:	b	43e5a8 <ferror@plt+0x3b878>
  43e5d0:	ldp	x19, x20, [sp, #16]
  43e5d4:	ldp	x23, x24, [sp, #48]
  43e5d8:	ldp	x25, x26, [sp, #64]
  43e5dc:	ldp	x27, x28, [sp, #80]
  43e5e0:	b	43e5a8 <ferror@plt+0x3b878>
  43e5e4:	ldp	x19, x20, [sp, #16]
  43e5e8:	ldp	x23, x24, [sp, #48]
  43e5ec:	ldp	x25, x26, [sp, #64]
  43e5f0:	ldp	x27, x28, [sp, #80]
  43e5f4:	b	43e5a8 <ferror@plt+0x3b878>
  43e5f8:	stp	x29, x30, [sp, #-144]!
  43e5fc:	mov	x29, sp
  43e600:	stp	x19, x20, [sp, #16]
  43e604:	stp	x21, x22, [sp, #32]
  43e608:	stp	x23, x24, [sp, #48]
  43e60c:	stp	x25, x26, [sp, #64]
  43e610:	stp	x27, x28, [sp, #80]
  43e614:	mov	x23, x0
  43e618:	str	x1, [sp, #104]
  43e61c:	mov	x22, x2
  43e620:	str	x3, [sp, #112]
  43e624:	mov	x25, x4
  43e628:	mov	x20, x6
  43e62c:	mov	x21, x7
  43e630:	str	x5, [sp, #120]
  43e634:	mov	x0, x5
  43e638:	bl	402680 <strlen@plt>
  43e63c:	mov	x24, x0
  43e640:	add	x28, x22, x25
  43e644:	add	x27, x28, x0
  43e648:	add	x26, x27, #0x1
  43e64c:	mov	x3, x21
  43e650:	mov	x2, x20
  43e654:	mov	x1, x26
  43e658:	mov	x0, x23
  43e65c:	bl	43c9e0 <ferror@plt+0x39cb0>
  43e660:	cbz	x0, 43e6e8 <ferror@plt+0x3b9b8>
  43e664:	mov	x19, x0
  43e668:	mov	x2, x22
  43e66c:	ldr	x1, [sp, #104]
  43e670:	bl	402620 <memcpy@plt>
  43e674:	mov	x2, x25
  43e678:	ldr	x1, [sp, #112]
  43e67c:	add	x0, x19, x22
  43e680:	bl	402620 <memcpy@plt>
  43e684:	mov	x2, x24
  43e688:	ldr	x1, [sp, #120]
  43e68c:	add	x0, x19, x28
  43e690:	bl	402620 <memcpy@plt>
  43e694:	strb	wzr, [x19, x27]
  43e698:	add	x3, sp, #0x8c
  43e69c:	mov	x2, x21
  43e6a0:	mov	x1, x20
  43e6a4:	mov	x0, x19
  43e6a8:	bl	43cfe0 <ferror@plt+0x3a2b0>
  43e6ac:	mov	w22, w0
  43e6b0:	mov	x4, x21
  43e6b4:	mov	x3, x20
  43e6b8:	mov	x2, x26
  43e6bc:	mov	x1, x19
  43e6c0:	mov	x0, x23
  43e6c4:	bl	43c934 <ferror@plt+0x39c04>
  43e6c8:	mov	w0, w22
  43e6cc:	ldp	x19, x20, [sp, #16]
  43e6d0:	ldp	x21, x22, [sp, #32]
  43e6d4:	ldp	x23, x24, [sp, #48]
  43e6d8:	ldp	x25, x26, [sp, #64]
  43e6dc:	ldp	x27, x28, [sp, #80]
  43e6e0:	ldp	x29, x30, [sp], #144
  43e6e4:	ret
  43e6e8:	mov	w22, #0xffffffff            	// #-1
  43e6ec:	b	43e6c8 <ferror@plt+0x3b998>
  43e6f0:	stp	x29, x30, [sp, #-288]!
  43e6f4:	mov	x29, sp
  43e6f8:	stp	x19, x20, [sp, #16]
  43e6fc:	stp	x21, x22, [sp, #32]
  43e700:	stp	x23, x24, [sp, #48]
  43e704:	stp	x25, x26, [sp, #64]
  43e708:	stp	x27, x28, [sp, #80]
  43e70c:	mov	x24, x0
  43e710:	mov	x21, x1
  43e714:	str	x2, [sp, #96]
  43e718:	str	w3, [sp, #108]
  43e71c:	mov	x22, x4
  43e720:	mov	x23, x5
  43e724:	mov	x28, #0x0                   	// #0
  43e728:	mov	x27, #0x0                   	// #0
  43e72c:	add	x0, sp, #0xa0
  43e730:	str	x0, [sp, #120]
  43e734:	b	43e8f8 <ferror@plt+0x3bbc8>
  43e738:	mov	x4, x23
  43e73c:	mov	x3, x22
  43e740:	mov	x2, x25
  43e744:	mov	x1, x19
  43e748:	mov	x0, x24
  43e74c:	bl	43c934 <ferror@plt+0x39c04>
  43e750:	mov	w1, #0x2f                  	// #47
  43e754:	mov	x0, x21
  43e758:	bl	402950 <strrchr@plt>
  43e75c:	cbz	x0, 43e924 <ferror@plt+0x3bbf4>
  43e760:	add	x0, x0, #0x1
  43e764:	sub	x19, x0, x21
  43e768:	mov	x7, x23
  43e76c:	mov	x6, x22
  43e770:	ldr	x5, [sp, #96]
  43e774:	mov	x4, #0x0                   	// #0
  43e778:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x19c60>
  43e77c:	add	x3, x3, #0xd70
  43e780:	mov	x2, x19
  43e784:	mov	x1, x21
  43e788:	mov	x0, x24
  43e78c:	bl	43e5f8 <ferror@plt+0x3b8c8>
  43e790:	mov	w20, w0
  43e794:	tbnz	w0, #31, 43e934 <ferror@plt+0x3bc04>
  43e798:	cmp	x28, #0x0
  43e79c:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  43e7a0:	b.ne	43e9a0 <ferror@plt+0x3bc70>  // b.any
  43e7a4:	ldr	w0, [sp, #108]
  43e7a8:	cbnz	w0, 43e9c4 <ferror@plt+0x3bc94>
  43e7ac:	mov	w0, w20
  43e7b0:	ldp	x19, x20, [sp, #16]
  43e7b4:	ldp	x21, x22, [sp, #32]
  43e7b8:	ldp	x23, x24, [sp, #48]
  43e7bc:	ldp	x25, x26, [sp, #64]
  43e7c0:	ldp	x27, x28, [sp, #80]
  43e7c4:	ldp	x29, x30, [sp], #288
  43e7c8:	ret
  43e7cc:	mov	x4, x23
  43e7d0:	mov	x3, x22
  43e7d4:	mov	x2, x25
  43e7d8:	mov	x1, x19
  43e7dc:	mov	x0, x24
  43e7e0:	bl	43c934 <ferror@plt+0x39c04>
  43e7e4:	lsl	x25, x25, #1
  43e7e8:	mov	x3, x23
  43e7ec:	mov	x2, x22
  43e7f0:	mov	x1, x25
  43e7f4:	mov	x0, x24
  43e7f8:	bl	43c9e0 <ferror@plt+0x39cb0>
  43e7fc:	mov	x19, x0
  43e800:	cbz	x0, 43e750 <ferror@plt+0x3ba20>
  43e804:	mov	x2, x25
  43e808:	mov	x1, x0
  43e80c:	mov	x0, x21
  43e810:	bl	402700 <readlink@plt>
  43e814:	tbnz	x0, #63, 43e738 <ferror@plt+0x3ba08>
  43e818:	sub	x2, x25, #0x1
  43e81c:	cmp	x2, x0
  43e820:	b.ls	43e7cc <ferror@plt+0x3ba9c>  // b.plast
  43e824:	strb	wzr, [x19, x0]
  43e828:	ldrb	w0, [x19]
  43e82c:	cmp	w0, #0x2f
  43e830:	b.eq	43e8d0 <ferror@plt+0x3bba0>  // b.none
  43e834:	mov	w1, #0x2f                  	// #47
  43e838:	mov	x0, x21
  43e83c:	bl	402950 <strrchr@plt>
  43e840:	cbz	x0, 43e8d0 <ferror@plt+0x3bba0>
  43e844:	add	x0, x0, #0x1
  43e848:	sub	x20, x0, x21
  43e84c:	mov	x0, x19
  43e850:	bl	402680 <strlen@plt>
  43e854:	add	x1, x20, #0x1
  43e858:	add	x0, x1, x0
  43e85c:	mov	x3, x23
  43e860:	mov	x2, x22
  43e864:	str	x0, [sp, #112]
  43e868:	mov	x1, x0
  43e86c:	mov	x0, x24
  43e870:	bl	43c9e0 <ferror@plt+0x39cb0>
  43e874:	mov	x26, x0
  43e878:	cbz	x0, 43ea94 <ferror@plt+0x3bd64>
  43e87c:	mov	x2, x20
  43e880:	mov	x1, x21
  43e884:	bl	402620 <memcpy@plt>
  43e888:	mov	x0, x19
  43e88c:	bl	402680 <strlen@plt>
  43e890:	add	x20, x26, x20
  43e894:	mov	x2, x0
  43e898:	mov	x1, x19
  43e89c:	mov	x0, x20
  43e8a0:	bl	402620 <memcpy@plt>
  43e8a4:	mov	x0, x19
  43e8a8:	bl	402680 <strlen@plt>
  43e8ac:	strb	wzr, [x20, x0]
  43e8b0:	mov	x4, x23
  43e8b4:	mov	x3, x22
  43e8b8:	mov	x2, x25
  43e8bc:	mov	x1, x19
  43e8c0:	mov	x0, x24
  43e8c4:	bl	43c934 <ferror@plt+0x39c04>
  43e8c8:	ldr	x25, [sp, #112]
  43e8cc:	mov	x19, x26
  43e8d0:	cbz	x27, 43e8ec <ferror@plt+0x3bbbc>
  43e8d4:	mov	x4, x23
  43e8d8:	mov	x3, x22
  43e8dc:	mov	x2, x28
  43e8e0:	mov	x1, x27
  43e8e4:	mov	x0, x24
  43e8e8:	bl	43c934 <ferror@plt+0x39c04>
  43e8ec:	mov	x28, x25
  43e8f0:	mov	x27, x19
  43e8f4:	mov	x21, x19
  43e8f8:	ldr	x2, [sp, #120]
  43e8fc:	mov	x1, x21
  43e900:	mov	w0, #0x0                   	// #0
  43e904:	bl	402b60 <__lxstat@plt>
  43e908:	tbnz	w0, #31, 43e750 <ferror@plt+0x3ba20>
  43e90c:	ldr	w0, [sp, #176]
  43e910:	and	w0, w0, #0xf000
  43e914:	cmp	w0, #0xa, lsl #12
  43e918:	b.ne	43e750 <ferror@plt+0x3ba20>  // b.any
  43e91c:	mov	x25, #0x80                  	// #128
  43e920:	b	43e7e8 <ferror@plt+0x3bab8>
  43e924:	mov	x19, #0x0                   	// #0
  43e928:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x19c60>
  43e92c:	add	x21, x21, #0xd70
  43e930:	b	43e768 <ferror@plt+0x3ba38>
  43e934:	mov	x7, x23
  43e938:	mov	x6, x22
  43e93c:	ldr	x5, [sp, #96]
  43e940:	mov	x4, #0x7                   	// #7
  43e944:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43e948:	add	x3, x3, #0xaa0
  43e94c:	mov	x2, x19
  43e950:	mov	x1, x21
  43e954:	mov	x0, x24
  43e958:	bl	43e5f8 <ferror@plt+0x3b8c8>
  43e95c:	mov	w20, w0
  43e960:	tbz	w0, #31, 43e798 <ferror@plt+0x3ba68>
  43e964:	mov	x7, x23
  43e968:	mov	x6, x22
  43e96c:	ldr	x5, [sp, #96]
  43e970:	mov	x4, x19
  43e974:	mov	x3, x21
  43e978:	mov	x2, #0xf                   	// #15
  43e97c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43e980:	add	x1, x1, #0xaa8
  43e984:	mov	x0, x24
  43e988:	bl	43e5f8 <ferror@plt+0x3b8c8>
  43e98c:	cmp	w0, #0x0
  43e990:	csinv	w20, w0, wzr, ge  // ge = tcont
  43e994:	cmp	x27, #0x0
  43e998:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  43e99c:	b.eq	43e9b8 <ferror@plt+0x3bc88>  // b.none
  43e9a0:	mov	x4, x23
  43e9a4:	mov	x3, x22
  43e9a8:	mov	x2, x28
  43e9ac:	mov	x1, x27
  43e9b0:	mov	x0, x24
  43e9b4:	bl	43c934 <ferror@plt+0x39c04>
  43e9b8:	tbz	w20, #31, 43e7a4 <ferror@plt+0x3ba74>
  43e9bc:	mov	w20, #0xffffffff            	// #-1
  43e9c0:	b	43e7ac <ferror@plt+0x3ba7c>
  43e9c4:	add	x2, sp, #0xa0
  43e9c8:	mov	w1, w20
  43e9cc:	mov	w0, #0x0                   	// #0
  43e9d0:	bl	402bc0 <__fxstat@plt>
  43e9d4:	tbnz	w0, #31, 43ea64 <ferror@plt+0x3bd34>
  43e9d8:	add	x6, sp, #0x88
  43e9dc:	mov	x5, x23
  43e9e0:	mov	x4, x22
  43e9e4:	ldr	x3, [sp, #208]
  43e9e8:	mov	x2, #0x0                   	// #0
  43e9ec:	mov	w1, w20
  43e9f0:	mov	x0, x24
  43e9f4:	bl	440394 <ferror@plt+0x3d664>
  43e9f8:	cbz	w0, 43ea7c <ferror@plt+0x3bd4c>
  43e9fc:	ldr	x1, [sp, #136]
  43ea00:	ldr	x3, [sp, #208]
  43ea04:	add	x3, x1, x3
  43ea08:	cmp	x1, x3
  43ea0c:	b.cs	43eaac <ferror@plt+0x3bd7c>  // b.hs, b.nlast
  43ea10:	mov	w19, #0xffffffff            	// #-1
  43ea14:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ea18:	add	x2, x2, #0xcf0
  43ea1c:	add	x2, x2, #0x4e0
  43ea20:	ldrb	w0, [x1], #1
  43ea24:	eor	w0, w0, w19
  43ea28:	and	x0, x0, #0xff
  43ea2c:	ldr	w0, [x2, x0, lsl #2]
  43ea30:	eor	w19, w0, w19, lsr #8
  43ea34:	cmp	x3, x1
  43ea38:	b.ne	43ea20 <ferror@plt+0x3bcf0>  // b.any
  43ea3c:	mov	x3, x23
  43ea40:	mov	x2, x22
  43ea44:	add	x1, sp, #0x88
  43ea48:	mov	x0, x24
  43ea4c:	bl	440458 <ferror@plt+0x3d728>
  43ea50:	mvn	w19, w19
  43ea54:	ldr	w0, [sp, #108]
  43ea58:	cmp	w0, w19
  43ea5c:	b.eq	43e7ac <ferror@plt+0x3ba7c>  // b.none
  43ea60:	b	43ea7c <ferror@plt+0x3bd4c>
  43ea64:	bl	402c40 <__errno_location@plt>
  43ea68:	ldr	w2, [x0]
  43ea6c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ea70:	add	x1, x1, #0xab8
  43ea74:	mov	x0, x23
  43ea78:	blr	x22
  43ea7c:	mov	x2, x23
  43ea80:	mov	x1, x22
  43ea84:	mov	w0, w20
  43ea88:	bl	43d094 <ferror@plt+0x3a364>
  43ea8c:	mov	w20, #0xffffffff            	// #-1
  43ea90:	b	43e7ac <ferror@plt+0x3ba7c>
  43ea94:	cmp	x28, #0x0
  43ea98:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  43ea9c:	mov	w20, #0xffffffff            	// #-1
  43eaa0:	b.eq	43e7ac <ferror@plt+0x3ba7c>  // b.none
  43eaa4:	mov	w20, #0xffffffff            	// #-1
  43eaa8:	b	43e9a0 <ferror@plt+0x3bc70>
  43eaac:	mov	x3, x23
  43eab0:	mov	x2, x22
  43eab4:	add	x1, sp, #0x88
  43eab8:	mov	x0, x24
  43eabc:	bl	440458 <ferror@plt+0x3d728>
  43eac0:	b	43ea7c <ferror@plt+0x3bd4c>
  43eac4:	sub	sp, sp, #0x430
  43eac8:	stp	x29, x30, [sp, #80]
  43eacc:	add	x29, sp, #0x50
  43ead0:	stp	x19, x20, [sp, #96]
  43ead4:	stp	x21, x22, [sp, #112]
  43ead8:	stp	x23, x24, [sp, #128]
  43eadc:	stp	x25, x26, [sp, #144]
  43eae0:	stp	x27, x28, [sp, #160]
  43eae4:	mov	x21, x0
  43eae8:	str	x1, [sp, #208]
  43eaec:	mov	w23, w2
  43eaf0:	str	x3, [sp, #184]
  43eaf4:	mov	x19, x4
  43eaf8:	mov	x20, x5
  43eafc:	str	x6, [sp, #192]
  43eb00:	str	x7, [sp, #200]
  43eb04:	ldr	w0, [sp, #1096]
  43eb08:	cbnz	w0, 43eb18 <ferror@plt+0x3bde8>
  43eb0c:	str	wzr, [x7]
  43eb10:	ldr	x0, [sp, #1072]
  43eb14:	str	wzr, [x0]
  43eb18:	add	x6, sp, #0x418
  43eb1c:	mov	x5, x20
  43eb20:	mov	x4, x19
  43eb24:	mov	x3, #0x40                  	// #64
  43eb28:	mov	x2, #0x0                   	// #0
  43eb2c:	mov	w1, w23
  43eb30:	mov	x0, x21
  43eb34:	bl	440394 <ferror@plt+0x3d664>
  43eb38:	mov	w22, w0
  43eb3c:	mov	w26, w0
  43eb40:	cbnz	w0, 43ebbc <ferror@plt+0x3be8c>
  43eb44:	mov	x24, #0x0                   	// #0
  43eb48:	mov	w27, #0x0                   	// #0
  43eb4c:	mov	w25, #0x0                   	// #0
  43eb50:	str	wzr, [sp, #180]
  43eb54:	mov	w28, #0x0                   	// #0
  43eb58:	cbnz	w28, 43fc30 <ferror@plt+0x3cf00>
  43eb5c:	cbnz	w22, 43fc48 <ferror@plt+0x3cf18>
  43eb60:	cbnz	w25, 43fc60 <ferror@plt+0x3cf30>
  43eb64:	cbnz	w27, 43fc78 <ferror@plt+0x3cf48>
  43eb68:	ldr	w0, [sp, #180]
  43eb6c:	cbnz	w0, 43fc90 <ferror@plt+0x3cf60>
  43eb70:	cbnz	w26, 43fca8 <ferror@plt+0x3cf78>
  43eb74:	cbz	x24, 43eb8c <ferror@plt+0x3be5c>
  43eb78:	mov	x3, x20
  43eb7c:	mov	x2, x19
  43eb80:	add	x1, x24, #0x18
  43eb84:	mov	x0, x21
  43eb88:	bl	440458 <ferror@plt+0x3d728>
  43eb8c:	mov	w25, #0x0                   	// #0
  43eb90:	cmn	w23, #0x1
  43eb94:	b.ne	43fcc0 <ferror@plt+0x3cf90>  // b.any
  43eb98:	mov	w0, w25
  43eb9c:	ldp	x19, x20, [sp, #96]
  43eba0:	ldp	x21, x22, [sp, #112]
  43eba4:	ldp	x23, x24, [sp, #128]
  43eba8:	ldp	x25, x26, [sp, #144]
  43ebac:	ldp	x27, x28, [sp, #160]
  43ebb0:	ldp	x29, x30, [sp, #80]
  43ebb4:	add	sp, sp, #0x430
  43ebb8:	ret
  43ebbc:	ldr	x0, [sp, #1048]
  43ebc0:	ldp	x2, x3, [x0]
  43ebc4:	add	x1, sp, #0x4d0
  43ebc8:	stp	x2, x3, [x1, #-248]
  43ebcc:	ldp	x2, x3, [x0, #16]
  43ebd0:	stp	x2, x3, [x1, #-232]
  43ebd4:	ldp	x2, x3, [x0, #32]
  43ebd8:	stp	x2, x3, [x1, #-216]
  43ebdc:	ldp	x2, x3, [x0, #48]
  43ebe0:	stp	x2, x3, [x1, #-200]
  43ebe4:	ldrb	w24, [x0, #4]
  43ebe8:	ldrb	w1, [x0, #5]
  43ebec:	str	w1, [sp, #272]
  43ebf0:	ldrb	w22, [x0, #6]
  43ebf4:	ldrh	w28, [x0, #16]
  43ebf8:	ldrh	w1, [x0, #18]
  43ebfc:	str	w1, [sp, #216]
  43ec00:	ldr	x25, [x0, #40]
  43ec04:	ldr	w1, [x0, #48]
  43ec08:	str	w1, [sp, #224]
  43ec0c:	ldrh	w26, [x0, #60]
  43ec10:	ldrh	w27, [x0, #62]
  43ec14:	mov	x3, x20
  43ec18:	mov	x2, x19
  43ec1c:	add	x1, sp, #0x418
  43ec20:	mov	x0, x21
  43ec24:	bl	440458 <ferror@plt+0x3d728>
  43ec28:	mov	w0, #0x457f                	// #17791
  43ec2c:	movk	w0, #0x464c, lsl #16
  43ec30:	ldr	w1, [sp, #984]
  43ec34:	cmp	w1, w0
  43ec38:	b.eq	43ec5c <ferror@plt+0x3bf2c>  // b.none
  43ec3c:	mov	w2, #0x0                   	// #0
  43ec40:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ec44:	add	x1, x1, #0xac0
  43ec48:	mov	x0, x20
  43ec4c:	blr	x19
  43ec50:	mov	w26, #0x0                   	// #0
  43ec54:	mov	w22, #0x0                   	// #0
  43ec58:	b	43eb44 <ferror@plt+0x3be14>
  43ec5c:	cmp	w22, #0x1
  43ec60:	b.eq	43ec84 <ferror@plt+0x3bf54>  // b.none
  43ec64:	mov	w2, #0x0                   	// #0
  43ec68:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ec6c:	add	x1, x1, #0xae0
  43ec70:	mov	x0, x20
  43ec74:	blr	x19
  43ec78:	mov	w26, #0x0                   	// #0
  43ec7c:	mov	w22, #0x0                   	// #0
  43ec80:	b	43eb44 <ferror@plt+0x3be14>
  43ec84:	cmp	w24, #0x2
  43ec88:	b.eq	43ecac <ferror@plt+0x3bf7c>  // b.none
  43ec8c:	mov	w2, #0x0                   	// #0
  43ec90:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ec94:	add	x1, x1, #0xb10
  43ec98:	mov	x0, x20
  43ec9c:	blr	x19
  43eca0:	mov	w26, #0x0                   	// #0
  43eca4:	mov	w22, #0x0                   	// #0
  43eca8:	b	43eb44 <ferror@plt+0x3be14>
  43ecac:	ldr	w0, [sp, #272]
  43ecb0:	sub	w0, w0, #0x1
  43ecb4:	and	w0, w0, #0xff
  43ecb8:	cmp	w0, #0x1
  43ecbc:	b.hi	43edac <ferror@plt+0x3c07c>  // b.pmore
  43ecc0:	ldr	w0, [sp, #1088]
  43ecc4:	cmp	w0, #0x0
  43ecc8:	ccmp	w28, #0x3, #0x0, ne  // ne = any
  43eccc:	b.eq	43fcd4 <ferror@plt+0x3cfa4>  // b.none
  43ecd0:	str	w26, [sp, #232]
  43ecd4:	mov	w24, w27
  43ecd8:	cmp	w26, #0x0
  43ecdc:	mov	w0, #0xffff                	// #65535
  43ece0:	ccmp	w27, w0, #0x4, ne  // ne = any
  43ece4:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  43ece8:	b.ne	43edcc <ferror@plt+0x3c09c>  // b.any
  43ecec:	ldr	w27, [sp, #232]
  43ecf0:	sub	w3, w27, #0x1
  43ecf4:	add	x6, sp, #0x3c0
  43ecf8:	mov	x5, x20
  43ecfc:	mov	x4, x19
  43ed00:	lsl	x3, x3, #6
  43ed04:	add	x2, x25, #0x40
  43ed08:	mov	w1, w23
  43ed0c:	mov	x0, x21
  43ed10:	bl	440394 <ferror@plt+0x3d664>
  43ed14:	mov	w22, w0
  43ed18:	mov	w26, w0
  43ed1c:	cbz	w0, 43eb44 <ferror@plt+0x3be14>
  43ed20:	ldr	x22, [sp, #960]
  43ed24:	str	x22, [sp, #344]
  43ed28:	sub	w0, w24, #0x1
  43ed2c:	add	x0, x22, x0, lsl #6
  43ed30:	ldr	x1, [x0, #32]
  43ed34:	str	x1, [sp, #248]
  43ed38:	add	x6, sp, #0x3a8
  43ed3c:	mov	x5, x20
  43ed40:	mov	x4, x19
  43ed44:	mov	x3, x1
  43ed48:	ldr	x2, [x0, #24]
  43ed4c:	mov	w1, w23
  43ed50:	mov	x0, x21
  43ed54:	bl	440394 <ferror@plt+0x3d664>
  43ed58:	mov	w26, w0
  43ed5c:	cbnz	w0, 43ee50 <ferror@plt+0x3c120>
  43ed60:	mov	w27, w0
  43ed64:	mov	w25, w0
  43ed68:	str	w0, [sp, #180]
  43ed6c:	mov	w22, w0
  43ed70:	mov	w28, w0
  43ed74:	mov	x24, #0x0                   	// #0
  43ed78:	mov	x3, x20
  43ed7c:	mov	x2, x19
  43ed80:	add	x1, sp, #0x3c0
  43ed84:	mov	x0, x21
  43ed88:	bl	440458 <ferror@plt+0x3d728>
  43ed8c:	cbz	w26, 43eb58 <ferror@plt+0x3be28>
  43ed90:	mov	x3, x20
  43ed94:	mov	x2, x19
  43ed98:	add	x1, sp, #0x3a8
  43ed9c:	mov	x0, x21
  43eda0:	bl	440458 <ferror@plt+0x3d728>
  43eda4:	mov	w26, #0x0                   	// #0
  43eda8:	b	43eb58 <ferror@plt+0x3be28>
  43edac:	mov	w2, #0x0                   	// #0
  43edb0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43edb4:	add	x1, x1, #0xb38
  43edb8:	mov	x0, x20
  43edbc:	blr	x19
  43edc0:	mov	w26, #0x0                   	// #0
  43edc4:	mov	w22, #0x0                   	// #0
  43edc8:	b	43eb44 <ferror@plt+0x3be14>
  43edcc:	add	x6, sp, #0x188
  43edd0:	mov	x5, x20
  43edd4:	mov	x4, x19
  43edd8:	mov	x3, #0x8                   	// #8
  43eddc:	mov	x2, x25
  43ede0:	mov	w1, w23
  43ede4:	mov	x0, x21
  43ede8:	bl	440394 <ferror@plt+0x3d664>
  43edec:	mov	w22, w0
  43edf0:	cbz	w0, 43ee28 <ferror@plt+0x3c0f8>
  43edf4:	ldr	x0, [sp, #392]
  43edf8:	cbnz	w26, 43ee30 <ferror@plt+0x3c100>
  43edfc:	ldr	w1, [x0, #32]
  43ee00:	str	w1, [sp, #232]
  43ee04:	mov	w1, #0xffff                	// #65535
  43ee08:	cmp	w27, w1
  43ee0c:	b.eq	43ee30 <ferror@plt+0x3c100>  // b.none
  43ee10:	mov	x3, x20
  43ee14:	mov	x2, x19
  43ee18:	add	x1, sp, #0x188
  43ee1c:	mov	x0, x21
  43ee20:	bl	440458 <ferror@plt+0x3d728>
  43ee24:	b	43ecec <ferror@plt+0x3bfbc>
  43ee28:	mov	w26, w0
  43ee2c:	b	43eb44 <ferror@plt+0x3be14>
  43ee30:	ldr	w24, [x0, #40]
  43ee34:	ldr	w0, [sp, #232]
  43ee38:	cmp	w24, w0
  43ee3c:	sub	w0, w24, #0x100
  43ee40:	mov	w1, #0xffff                	// #65535
  43ee44:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
  43ee48:	csel	w24, w0, w24, hi  // hi = pmore
  43ee4c:	b	43ee10 <ferror@plt+0x3c0e0>
  43ee50:	ldr	x0, [sp, #936]
  43ee54:	str	x0, [sp, #256]
  43ee58:	mov	x2, #0x140                 	// #320
  43ee5c:	mov	w1, #0x0                   	// #0
  43ee60:	add	x0, sp, #0x268
  43ee64:	bl	402890 <memset@plt>
  43ee68:	cmp	w27, #0x1
  43ee6c:	b.ls	43f528 <ferror@plt+0x3c7f8>  // b.plast
  43ee70:	mov	x26, x22
  43ee74:	mov	x24, #0x0                   	// #0
  43ee78:	str	wzr, [sp, #360]
  43ee7c:	str	xzr, [sp, #328]
  43ee80:	str	xzr, [sp, #304]
  43ee84:	mov	w27, #0x0                   	// #0
  43ee88:	str	wzr, [sp, #324]
  43ee8c:	str	xzr, [sp, #312]
  43ee90:	mov	w25, #0x0                   	// #0
  43ee94:	str	wzr, [sp, #364]
  43ee98:	str	xzr, [sp, #352]
  43ee9c:	str	wzr, [sp, #180]
  43eea0:	mov	w22, #0x1                   	// #1
  43eea4:	str	wzr, [sp, #240]
  43eea8:	str	wzr, [sp, #320]
  43eeac:	adrp	x0, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  43eeb0:	add	x1, x0, #0x9b8
  43eeb4:	add	x0, sp, #0x268
  43eeb8:	str	x0, [sp, #296]
  43eebc:	add	x0, sp, #0x1a8
  43eec0:	str	x0, [sp, #368]
  43eec4:	add	x0, sp, #0x1c0
  43eec8:	str	x0, [sp, #376]
  43eecc:	str	x24, [sp, #336]
  43eed0:	str	x21, [sp, #264]
  43eed4:	str	w23, [sp, #276]
  43eed8:	str	x19, [sp, #280]
  43eedc:	str	x20, [sp, #288]
  43eee0:	ldr	w28, [sp, #1096]
  43eee4:	mov	x23, x1
  43eee8:	b	43f0b4 <ferror@plt+0x3c384>
  43eeec:	str	w22, [sp, #320]
  43eef0:	b	43f0d4 <ferror@plt+0x3c3a4>
  43eef4:	ldr	x24, [sp, #336]
  43eef8:	ldr	x21, [sp, #264]
  43eefc:	ldr	w23, [sp, #276]
  43ef00:	ldr	x19, [sp, #280]
  43ef04:	ldr	x20, [sp, #288]
  43ef08:	mov	w2, #0x0                   	// #0
  43ef0c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ef10:	add	x1, x1, #0xb60
  43ef14:	mov	x0, x20
  43ef18:	blr	x19
  43ef1c:	mov	w22, #0x0                   	// #0
  43ef20:	mov	w28, #0x0                   	// #0
  43ef24:	mov	w26, #0x1                   	// #1
  43ef28:	b	43ed78 <ferror@plt+0x3c048>
  43ef2c:	sbfiz	x21, x19, #5, #32
  43ef30:	ldr	x0, [x24, #24]
  43ef34:	ldr	x1, [sp, #296]
  43ef38:	str	x0, [x1, x21]
  43ef3c:	ldr	x1, [x24, #32]
  43ef40:	add	x0, sp, #0x270
  43ef44:	str	x1, [x0, x21]
  43ef48:	ldr	x0, [x24, #8]
  43ef4c:	ubfx	w0, w0, #11, #1
  43ef50:	add	x1, sp, #0x280
  43ef54:	str	w0, [x1, x21]
  43ef58:	b	43f10c <ferror@plt+0x3c3dc>
  43ef5c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43ef60:	add	x1, x1, #0xb80
  43ef64:	mov	x0, x20
  43ef68:	bl	402a20 <strcmp@plt>
  43ef6c:	mov	w19, w0
  43ef70:	str	wzr, [sp, #180]
  43ef74:	cbnz	w0, 43f124 <ferror@plt+0x3c3f4>
  43ef78:	add	x6, sp, #0x220
  43ef7c:	ldr	x5, [sp, #288]
  43ef80:	ldr	x4, [sp, #280]
  43ef84:	ldr	x3, [x24, #32]
  43ef88:	ldr	x2, [x24, #24]
  43ef8c:	ldr	w1, [sp, #276]
  43ef90:	ldr	x0, [sp, #264]
  43ef94:	bl	440394 <ferror@plt+0x3d664>
  43ef98:	cbz	w0, 43fcfc <ferror@plt+0x3cfcc>
  43ef9c:	ldr	x21, [sp, #544]
  43efa0:	ldr	w0, [x21, #8]
  43efa4:	cmp	w0, #0x3
  43efa8:	b.eq	43efe4 <ferror@plt+0x3c2b4>  // b.none
  43efac:	ldr	w0, [sp, #1112]
  43efb0:	cbz	w0, 43f028 <ferror@plt+0x3c2f8>
  43efb4:	ldr	w0, [sp, #364]
  43efb8:	ldr	w1, [sp, #1112]
  43efbc:	cmp	w0, w1
  43efc0:	b.ne	43fd24 <ferror@plt+0x3cff4>  // b.any
  43efc4:	mov	w2, w0
  43efc8:	ldr	x1, [sp, #1104]
  43efcc:	ldr	x0, [sp, #352]
  43efd0:	bl	4029e0 <memcmp@plt>
  43efd4:	cbnz	w0, 43fd50 <ferror@plt+0x3d020>
  43efd8:	mov	w0, #0x1                   	// #1
  43efdc:	str	w0, [sp, #180]
  43efe0:	b	43f124 <ferror@plt+0x3c3f4>
  43efe4:	ldr	w0, [x21]
  43efe8:	cmp	w0, #0x4
  43efec:	b.ne	43efac <ferror@plt+0x3c27c>  // b.any
  43eff0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43eff4:	add	x1, x1, #0xb98
  43eff8:	add	x0, x21, #0xc
  43effc:	bl	402a20 <strcmp@plt>
  43f000:	cbnz	w0, 43efac <ferror@plt+0x3c27c>
  43f004:	ldr	w0, [x21, #4]
  43f008:	add	w1, w0, #0x10
  43f00c:	ldr	x2, [x24, #32]
  43f010:	cmp	x2, x1
  43f014:	b.hi	43efac <ferror@plt+0x3c27c>  // b.pmore
  43f018:	add	x1, x21, #0x10
  43f01c:	str	x1, [sp, #352]
  43f020:	str	w0, [sp, #364]
  43f024:	b	43efac <ferror@plt+0x3c27c>
  43f028:	mov	w0, #0x1                   	// #1
  43f02c:	str	w0, [sp, #180]
  43f030:	b	43f124 <ferror@plt+0x3c3f4>
  43f034:	add	x6, sp, #0x208
  43f038:	ldr	x5, [sp, #288]
  43f03c:	ldr	x4, [sp, #280]
  43f040:	ldr	x3, [x24, #32]
  43f044:	ldr	x2, [x24, #24]
  43f048:	ldr	w1, [sp, #276]
  43f04c:	ldr	x0, [sp, #264]
  43f050:	bl	440394 <ferror@plt+0x3d664>
  43f054:	cbz	w0, 43fd7c <ferror@plt+0x3d04c>
  43f058:	ldr	x19, [sp, #520]
  43f05c:	ldr	x21, [x24, #32]
  43f060:	mov	x1, x21
  43f064:	mov	x0, x19
  43f068:	bl	4026d0 <strnlen@plt>
  43f06c:	add	x0, x0, #0x3
  43f070:	and	x0, x0, #0xfffffffffffffffc
  43f074:	add	x1, x0, #0x4
  43f078:	mov	w25, #0x1                   	// #1
  43f07c:	cmp	x21, x1
  43f080:	b.cc	43f144 <ferror@plt+0x3c414>  // b.lo, b.ul, b.last
  43f084:	ldr	w0, [x19, x0]
  43f088:	str	w0, [sp, #324]
  43f08c:	str	x19, [sp, #312]
  43f090:	b	43f144 <ferror@plt+0x3c414>
  43f094:	ldr	w0, [sp, #216]
  43f098:	cmp	w0, #0x15
  43f09c:	b.eq	43f1bc <ferror@plt+0x3c48c>  // b.none
  43f0a0:	add	w22, w22, #0x1
  43f0a4:	add	x26, x26, #0x40
  43f0a8:	ldr	w0, [sp, #232]
  43f0ac:	cmp	w0, w22
  43f0b0:	b.eq	43f22c <ferror@plt+0x3c4fc>  // b.none
  43f0b4:	mov	x24, x26
  43f0b8:	ldr	w0, [x26, #4]
  43f0bc:	cmp	w0, #0x2
  43f0c0:	b.eq	43eeec <ferror@plt+0x3c1bc>  // b.none
  43f0c4:	cmp	w0, #0xb
  43f0c8:	ldr	w0, [sp, #240]
  43f0cc:	csel	w0, w0, w22, ne  // ne = any
  43f0d0:	str	w0, [sp, #240]
  43f0d4:	ldr	w20, [x24]
  43f0d8:	ldr	x0, [sp, #248]
  43f0dc:	cmp	x20, x0
  43f0e0:	b.cs	43eef4 <ferror@plt+0x3c1c4>  // b.hs, b.nlast
  43f0e4:	ldr	x0, [sp, #256]
  43f0e8:	add	x20, x0, x20
  43f0ec:	mov	x19, #0x0                   	// #0
  43f0f0:	ldr	x1, [x23, x19, lsl #3]
  43f0f4:	mov	x0, x20
  43f0f8:	bl	402a20 <strcmp@plt>
  43f0fc:	cbz	w0, 43ef2c <ferror@plt+0x3c1fc>
  43f100:	add	x19, x19, #0x1
  43f104:	cmp	x19, #0xa
  43f108:	b.ne	43f0f0 <ferror@plt+0x3c3c0>  // b.any
  43f10c:	cmp	w28, #0x0
  43f110:	ldr	x0, [sp, #1104]
  43f114:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  43f118:	ldr	w0, [sp, #180]
  43f11c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  43f120:	b.eq	43ef5c <ferror@plt+0x3c22c>  // b.none
  43f124:	orr	w19, w28, w25
  43f128:	cbnz	w19, 43f144 <ferror@plt+0x3c414>
  43f12c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f130:	add	x1, x1, #0xba0
  43f134:	mov	x0, x20
  43f138:	bl	402a20 <strcmp@plt>
  43f13c:	mov	w25, w19
  43f140:	cbz	w0, 43f034 <ferror@plt+0x3c304>
  43f144:	cbnz	w27, 43f094 <ferror@plt+0x3c364>
  43f148:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f14c:	add	x1, x1, #0xbb0
  43f150:	mov	x0, x20
  43f154:	bl	402a20 <strcmp@plt>
  43f158:	cbnz	w0, 43f094 <ferror@plt+0x3c364>
  43f15c:	add	x6, sp, #0x1f0
  43f160:	ldr	x5, [sp, #288]
  43f164:	ldr	x4, [sp, #280]
  43f168:	ldr	x3, [x24, #32]
  43f16c:	ldr	x2, [x24, #24]
  43f170:	ldr	w1, [sp, #276]
  43f174:	ldr	x0, [sp, #264]
  43f178:	bl	440394 <ferror@plt+0x3d664>
  43f17c:	cbz	w0, 43fda4 <ferror@plt+0x3d074>
  43f180:	ldr	x21, [sp, #496]
  43f184:	str	x21, [sp, #304]
  43f188:	ldr	x19, [x24, #32]
  43f18c:	mov	x1, x19
  43f190:	mov	x0, x21
  43f194:	bl	4026d0 <strnlen@plt>
  43f198:	mov	w27, #0x1                   	// #1
  43f19c:	cmp	x19, x0
  43f1a0:	b.ls	43f094 <ferror@plt+0x3c364>  // b.plast
  43f1a4:	add	x0, x0, #0x1
  43f1a8:	add	x1, x21, x0
  43f1ac:	str	x1, [sp, #328]
  43f1b0:	sub	w0, w19, w0
  43f1b4:	str	w0, [sp, #360]
  43f1b8:	b	43f094 <ferror@plt+0x3c364>
  43f1bc:	ldr	x0, [sp, #224]
  43f1c0:	tbnz	w0, #1, 43f0a0 <ferror@plt+0x3c370>
  43f1c4:	ldr	w0, [x24, #4]
  43f1c8:	cmp	w0, #0x1
  43f1cc:	b.ne	43f0a0 <ferror@plt+0x3c370>  // b.any
  43f1d0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f1d4:	add	x1, x1, #0xbc8
  43f1d8:	mov	x0, x20
  43f1dc:	bl	402a20 <strcmp@plt>
  43f1e0:	cbnz	w0, 43f0a0 <ferror@plt+0x3c370>
  43f1e4:	ldr	x6, [sp, #376]
  43f1e8:	ldr	x5, [sp, #288]
  43f1ec:	ldr	x4, [sp, #280]
  43f1f0:	ldr	x3, [x24, #32]
  43f1f4:	ldr	x2, [x24, #24]
  43f1f8:	ldr	w1, [sp, #276]
  43f1fc:	ldr	x0, [sp, #264]
  43f200:	bl	440394 <ferror@plt+0x3d664>
  43f204:	cbz	w0, 43fdcc <ferror@plt+0x3d09c>
  43f208:	ldr	x0, [x24, #16]
  43f20c:	str	x0, [sp, #424]
  43f210:	ldr	x0, [sp, #448]
  43f214:	str	x0, [sp, #432]
  43f218:	ldr	x0, [x24, #32]
  43f21c:	str	x0, [sp, #440]
  43f220:	ldr	x0, [sp, #368]
  43f224:	str	x0, [sp, #336]
  43f228:	b	43f0a0 <ferror@plt+0x3c370>
  43f22c:	ldr	x24, [sp, #336]
  43f230:	ldr	x21, [sp, #264]
  43f234:	ldr	w23, [sp, #276]
  43f238:	ldr	x19, [sp, #280]
  43f23c:	ldr	x20, [sp, #288]
  43f240:	ldr	w0, [sp, #320]
  43f244:	cmp	w0, #0x0
  43f248:	ldr	w1, [sp, #240]
  43f24c:	csel	w0, w0, w1, ne  // ne = any
  43f250:	cmp	w0, #0x0
  43f254:	ldr	w1, [sp, #1096]
  43f258:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  43f25c:	b.ne	43f55c <ferror@plt+0x3c82c>  // b.any
  43f260:	sub	w26, w0, #0x1
  43f264:	ldr	x0, [sp, #344]
  43f268:	add	x26, x0, x26, lsl #6
  43f26c:	ldr	w22, [x26, #40]
  43f270:	ldr	w0, [sp, #232]
  43f274:	cmp	w0, w22
  43f278:	b.hi	43f2a0 <ferror@plt+0x3c570>  // b.pmore
  43f27c:	mov	w2, #0x0                   	// #0
  43f280:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f284:	add	x1, x1, #0xbd0
  43f288:	mov	x0, x20
  43f28c:	blr	x19
  43f290:	mov	w22, #0x0                   	// #0
  43f294:	mov	w28, #0x0                   	// #0
  43f298:	mov	w26, #0x1                   	// #1
  43f29c:	b	43ed78 <ferror@plt+0x3c048>
  43f2a0:	add	x6, sp, #0x250
  43f2a4:	mov	x5, x20
  43f2a8:	mov	x4, x19
  43f2ac:	ldr	x3, [x26, #32]
  43f2b0:	ldr	x2, [x26, #24]
  43f2b4:	mov	w1, w23
  43f2b8:	mov	x0, x21
  43f2bc:	bl	440394 <ferror@plt+0x3d664>
  43f2c0:	mov	w28, w0
  43f2c4:	cbnz	w0, 43f2d4 <ferror@plt+0x3c5a4>
  43f2c8:	mov	w22, w0
  43f2cc:	mov	w26, #0x1                   	// #1
  43f2d0:	b	43ed78 <ferror@plt+0x3c048>
  43f2d4:	sub	w22, w22, #0x1
  43f2d8:	ldr	x0, [sp, #344]
  43f2dc:	add	x0, x0, x22, lsl #6
  43f2e0:	add	x6, sp, #0x238
  43f2e4:	mov	x5, x20
  43f2e8:	mov	x4, x19
  43f2ec:	ldr	x3, [x0, #32]
  43f2f0:	str	x0, [sp, #216]
  43f2f4:	ldr	x2, [x0, #24]
  43f2f8:	mov	w1, w23
  43f2fc:	mov	x0, x21
  43f300:	bl	440394 <ferror@plt+0x3d664>
  43f304:	mov	w22, w0
  43f308:	cbnz	w0, 43f318 <ferror@plt+0x3c5e8>
  43f30c:	mov	w28, #0x1                   	// #1
  43f310:	mov	w26, w28
  43f314:	b	43ed78 <ferror@plt+0x3c048>
  43f318:	mov	x3, x20
  43f31c:	mov	x2, x19
  43f320:	mov	x1, #0x18                  	// #24
  43f324:	mov	x0, x21
  43f328:	bl	43c9e0 <ferror@plt+0x39cb0>
  43f32c:	mov	x28, x0
  43f330:	cbz	x0, 43fdf0 <ferror@plt+0x3d0c0>
  43f334:	ldr	x22, [sp, #592]
  43f338:	ldr	x0, [x26, #32]
  43f33c:	ldr	x2, [sp, #568]
  43f340:	str	x2, [sp, #232]
  43f344:	ldr	x1, [sp, #216]
  43f348:	ldr	x1, [x1, #32]
  43f34c:	str	x1, [sp, #240]
  43f350:	mov	x1, #0x18                  	// #24
  43f354:	udiv	x1, x0, x1
  43f358:	str	x1, [sp, #216]
  43f35c:	cmp	x0, #0x17
  43f360:	b.ls	43feb4 <ferror@plt+0x3d184>  // b.plast
  43f364:	mov	x1, x22
  43f368:	mov	x2, #0x0                   	// #0
  43f36c:	mov	x3, #0x0                   	// #0
  43f370:	b	43f388 <ferror@plt+0x3c658>
  43f374:	add	x2, x2, #0x1
  43f378:	add	x1, x1, #0x18
  43f37c:	ldr	x0, [sp, #216]
  43f380:	cmp	x0, x2
  43f384:	b.ls	43f3ac <ferror@plt+0x3c67c>  // b.plast
  43f388:	ldrb	w0, [x1, #4]
  43f38c:	and	w0, w0, #0xf
  43f390:	sub	w0, w0, #0x1
  43f394:	cmp	w0, #0x1
  43f398:	b.hi	43f374 <ferror@plt+0x3c644>  // b.pmore
  43f39c:	ldrh	w0, [x1, #6]
  43f3a0:	cbz	w0, 43f374 <ferror@plt+0x3c644>
  43f3a4:	add	x3, x3, #0x1
  43f3a8:	b	43f374 <ferror@plt+0x3c644>
  43f3ac:	str	x3, [sp, #224]
  43f3b0:	mov	x0, #0x18                  	// #24
  43f3b4:	mul	x0, x3, x0
  43f3b8:	str	x0, [sp, #248]
  43f3bc:	mov	x3, x20
  43f3c0:	mov	x2, x19
  43f3c4:	mov	x1, x0
  43f3c8:	mov	x0, x21
  43f3cc:	bl	43c9e0 <ferror@plt+0x39cb0>
  43f3d0:	mov	x26, x0
  43f3d4:	cbz	x0, 43f414 <ferror@plt+0x3c6e4>
  43f3d8:	mov	x1, #0x0                   	// #0
  43f3dc:	mov	w2, #0x0                   	// #0
  43f3e0:	ldr	x6, [sp, #216]
  43f3e4:	b	43f468 <ferror@plt+0x3c738>
  43f3e8:	mov	w2, #0x0                   	// #0
  43f3ec:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f3f0:	add	x1, x1, #0xc00
  43f3f4:	mov	x0, x20
  43f3f8:	blr	x19
  43f3fc:	mov	x4, x20
  43f400:	mov	x3, x19
  43f404:	ldr	x2, [sp, #248]
  43f408:	mov	x1, x26
  43f40c:	mov	x0, x21
  43f410:	bl	43c934 <ferror@plt+0x39c04>
  43f414:	mov	x4, x20
  43f418:	mov	x3, x19
  43f41c:	mov	x2, #0x18                  	// #24
  43f420:	mov	x1, x28
  43f424:	mov	x0, x21
  43f428:	bl	43c934 <ferror@plt+0x39c04>
  43f42c:	mov	w22, #0x1                   	// #1
  43f430:	mov	w28, w22
  43f434:	mov	w26, w22
  43f438:	b	43ed78 <ferror@plt+0x3c048>
  43f43c:	ldr	x0, [x22, #8]
  43f440:	ldr	x3, [sp, #184]
  43f444:	add	x0, x3, x0
  43f448:	str	x0, [x5, #8]
  43f44c:	ldr	x0, [x22, #16]
  43f450:	str	x0, [x5, #16]
  43f454:	add	w2, w2, #0x1
  43f458:	add	x1, x1, #0x1
  43f45c:	add	x22, x22, #0x18
  43f460:	cmp	x6, x1
  43f464:	b.ls	43fed4 <ferror@plt+0x3d1a4>  // b.plast
  43f468:	ldrb	w0, [x22, #4]
  43f46c:	and	w0, w0, #0xf
  43f470:	sub	w0, w0, #0x1
  43f474:	cmp	w0, #0x1
  43f478:	b.hi	43f458 <ferror@plt+0x3c728>  // b.pmore
  43f47c:	ldrh	w0, [x22, #6]
  43f480:	cbz	w0, 43f458 <ferror@plt+0x3c728>
  43f484:	ldr	w3, [x22]
  43f488:	ldr	x0, [sp, #240]
  43f48c:	cmp	x0, x3
  43f490:	b.ls	43f3e8 <ferror@plt+0x3c6b8>  // b.plast
  43f494:	ubfiz	x0, x2, #1, #32
  43f498:	add	x0, x0, w2, uxtw
  43f49c:	add	x5, x26, x0, lsl #3
  43f4a0:	ldr	x4, [sp, #232]
  43f4a4:	add	x3, x4, x3
  43f4a8:	str	x3, [x26, x0, lsl #3]
  43f4ac:	cbz	x24, 43f43c <ferror@plt+0x3c70c>
  43f4b0:	ldr	x0, [x22, #8]
  43f4b4:	ldr	x3, [x24]
  43f4b8:	cmp	x0, x3
  43f4bc:	b.cc	43f43c <ferror@plt+0x3c70c>  // b.lo, b.ul, b.last
  43f4c0:	ldr	x4, [x24, #16]
  43f4c4:	add	x4, x3, x4
  43f4c8:	cmp	x0, x4
  43f4cc:	b.cs	43f43c <ferror@plt+0x3c70c>  // b.hs, b.nlast
  43f4d0:	sub	x0, x0, x3
  43f4d4:	ldr	x3, [x24, #8]
  43f4d8:	ldr	x0, [x3, x0]
  43f4dc:	b	43f440 <ferror@plt+0x3c710>
  43f4e0:	add	x1, x21, #0x30
  43f4e4:	ldr	x0, [x21, #48]
  43f4e8:	b	43f4f4 <ferror@plt+0x3c7c4>
  43f4ec:	mov	x1, x0
  43f4f0:	ldr	x0, [x0]
  43f4f4:	cbnz	x0, 43f4ec <ferror@plt+0x3c7bc>
  43f4f8:	str	x28, [x1]
  43f4fc:	mov	w22, #0x1                   	// #1
  43f500:	b	43f560 <ferror@plt+0x3c830>
  43f504:	ldxr	x1, [x0]
  43f508:	cbnz	x1, 43f514 <ferror@plt+0x3c7e4>
  43f50c:	stlxr	w3, x28, [x0]
  43f510:	cbnz	w3, 43f504 <ferror@plt+0x3c7d4>
  43f514:	cmp	x1, #0x0
  43f518:	dmb	ish
  43f51c:	b.ne	43ff28 <ferror@plt+0x3d1f8>  // b.any
  43f520:	mov	w22, #0x1                   	// #1
  43f524:	b	43f560 <ferror@plt+0x3c830>
  43f528:	mov	x24, #0x0                   	// #0
  43f52c:	str	wzr, [sp, #360]
  43f530:	str	xzr, [sp, #328]
  43f534:	str	xzr, [sp, #304]
  43f538:	mov	w27, #0x0                   	// #0
  43f53c:	str	wzr, [sp, #324]
  43f540:	str	xzr, [sp, #312]
  43f544:	mov	w25, #0x0                   	// #0
  43f548:	str	wzr, [sp, #364]
  43f54c:	str	xzr, [sp, #352]
  43f550:	str	wzr, [sp, #180]
  43f554:	mov	w22, #0x0                   	// #0
  43f558:	b	43f560 <ferror@plt+0x3c830>
  43f55c:	mov	w22, #0x0                   	// #0
  43f560:	mov	x3, x20
  43f564:	mov	x2, x19
  43f568:	add	x1, sp, #0x3c0
  43f56c:	mov	x0, x21
  43f570:	bl	440458 <ferror@plt+0x3d728>
  43f574:	mov	x3, x20
  43f578:	mov	x2, x19
  43f57c:	add	x1, sp, #0x3a8
  43f580:	mov	x0, x21
  43f584:	bl	440458 <ferror@plt+0x3d728>
  43f588:	ldr	x0, [sp, #352]
  43f58c:	cbz	x0, 43f698 <ferror@plt+0x3c968>
  43f590:	ldr	w1, [sp, #364]
  43f594:	mov	w28, w1
  43f598:	ubfiz	x0, x1, #1, #32
  43f59c:	add	x1, x0, #0x21
  43f5a0:	str	x1, [sp, #216]
  43f5a4:	mov	x3, x20
  43f5a8:	mov	x2, x19
  43f5ac:	mov	x0, x21
  43f5b0:	bl	43c9e0 <ferror@plt+0x39cb0>
  43f5b4:	mov	x26, x0
  43f5b8:	cbz	x0, 43f698 <ferror@plt+0x3c968>
  43f5bc:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f5c0:	add	x0, x0, #0xc28
  43f5c4:	ldp	x2, x3, [x0]
  43f5c8:	stp	x2, x3, [x26]
  43f5cc:	ldr	x1, [x0, #16]
  43f5d0:	str	x1, [x26, #16]
  43f5d4:	ldrb	w0, [x0, #24]
  43f5d8:	strb	w0, [x26, #24]
  43f5dc:	add	x1, x26, #0x19
  43f5e0:	cbz	x28, 43f648 <ferror@plt+0x3c918>
  43f5e4:	mov	x2, #0x0                   	// #0
  43f5e8:	mov	w6, #0x2f                  	// #47
  43f5ec:	ldr	x7, [sp, #352]
  43f5f0:	b	43f608 <ferror@plt+0x3c8d8>
  43f5f4:	strb	w6, [x1, #2]
  43f5f8:	add	x1, x1, #0x3
  43f5fc:	add	x2, x2, #0x1
  43f600:	cmp	x28, x2
  43f604:	b.eq	43f648 <ferror@plt+0x3c918>  // b.none
  43f608:	ldrb	w0, [x7, x2]
  43f60c:	lsr	w4, w0, #4
  43f610:	add	w5, w4, #0x30
  43f614:	add	w3, w4, #0x57
  43f618:	cmp	w4, #0x9
  43f61c:	csel	w3, w3, w5, hi  // hi = pmore
  43f620:	strb	w3, [x1]
  43f624:	and	w0, w0, #0xf
  43f628:	add	w4, w0, #0x30
  43f62c:	add	w3, w0, #0x57
  43f630:	cmp	w0, #0x9
  43f634:	csel	w0, w3, w4, hi  // hi = pmore
  43f638:	strb	w0, [x1, #1]
  43f63c:	cbz	x2, 43f5f4 <ferror@plt+0x3c8c4>
  43f640:	add	x1, x1, #0x2
  43f644:	b	43f5fc <ferror@plt+0x3c8cc>
  43f648:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  43f64c:	add	x0, x0, #0xc48
  43f650:	ldr	w2, [x0]
  43f654:	str	w2, [x1]
  43f658:	ldrh	w0, [x0, #4]
  43f65c:	strh	w0, [x1, #4]
  43f660:	strb	wzr, [x1, #6]
  43f664:	add	x3, sp, #0x188
  43f668:	mov	x2, x20
  43f66c:	mov	x1, x19
  43f670:	mov	x0, x26
  43f674:	bl	43cfe0 <ferror@plt+0x3a2b0>
  43f678:	mov	w28, w0
  43f67c:	mov	x4, x20
  43f680:	mov	x3, x19
  43f684:	ldr	x2, [sp, #216]
  43f688:	mov	x1, x26
  43f68c:	mov	x0, x21
  43f690:	bl	43c934 <ferror@plt+0x39c04>
  43f694:	tbz	w28, #31, 43f738 <ferror@plt+0x3ca08>
  43f698:	ldr	w0, [sp, #180]
  43f69c:	cbnz	w0, 43f7fc <ferror@plt+0x3cacc>
  43f6a0:	cbz	x24, 43f6b8 <ferror@plt+0x3c988>
  43f6a4:	mov	x3, x20
  43f6a8:	mov	x2, x19
  43f6ac:	add	x1, x24, #0x18
  43f6b0:	mov	x0, x21
  43f6b4:	bl	440458 <ferror@plt+0x3d728>
  43f6b8:	ldr	x0, [sp, #312]
  43f6bc:	cbz	x0, 43f6e4 <ferror@plt+0x3c9b4>
  43f6c0:	mov	x5, x20
  43f6c4:	mov	x4, x19
  43f6c8:	ldr	w3, [sp, #324]
  43f6cc:	mov	x2, x0
  43f6d0:	ldr	x1, [sp, #208]
  43f6d4:	mov	x0, x21
  43f6d8:	bl	43e6f0 <ferror@plt+0x3b9c0>
  43f6dc:	mov	w24, w0
  43f6e0:	tbz	w0, #31, 43f814 <ferror@plt+0x3cae4>
  43f6e4:	cbnz	w25, 43f8bc <ferror@plt+0x3cb8c>
  43f6e8:	str	xzr, [sp, #416]
  43f6ec:	ldr	x0, [sp, #304]
  43f6f0:	cbz	x0, 43f71c <ferror@plt+0x3c9ec>
  43f6f4:	mov	x5, x20
  43f6f8:	mov	x4, x19
  43f6fc:	mov	w3, #0x0                   	// #0
  43f700:	mov	x2, x0
  43f704:	ldr	x25, [sp, #208]
  43f708:	mov	x1, x25
  43f70c:	mov	x0, x21
  43f710:	bl	43e6f0 <ferror@plt+0x3b9c0>
  43f714:	mov	w24, w0
  43f718:	tbz	w0, #31, 43f8d4 <ferror@plt+0x3cba4>
  43f71c:	cbnz	w27, 43f954 <ferror@plt+0x3cc24>
  43f720:	add	x24, sp, #0x268
  43f724:	add	x4, x24, #0x140
  43f728:	mov	x0, x24
  43f72c:	mov	x3, #0x0                   	// #0
  43f730:	mov	x27, #0x0                   	// #0
  43f734:	b	43f98c <ferror@plt+0x3cc5c>
  43f738:	mov	x3, x20
  43f73c:	mov	x2, x19
  43f740:	add	x1, sp, #0x220
  43f744:	mov	x0, x21
  43f748:	bl	440458 <ferror@plt+0x3d728>
  43f74c:	cbnz	w25, 43f7b8 <ferror@plt+0x3ca88>
  43f750:	cbnz	w27, 43f7d0 <ferror@plt+0x3caa0>
  43f754:	str	wzr, [sp, #40]
  43f758:	str	xzr, [sp, #32]
  43f75c:	mov	w0, #0x1                   	// #1
  43f760:	str	w0, [sp, #24]
  43f764:	str	wzr, [sp, #16]
  43f768:	str	xzr, [sp, #8]
  43f76c:	ldr	x0, [sp, #1072]
  43f770:	str	x0, [sp]
  43f774:	ldr	x7, [sp, #200]
  43f778:	ldr	x6, [sp, #192]
  43f77c:	mov	x5, x20
  43f780:	mov	x4, x19
  43f784:	ldr	x3, [sp, #184]
  43f788:	mov	w2, w28
  43f78c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  43f790:	add	x1, x1, #0xd70
  43f794:	mov	x0, x21
  43f798:	bl	43eac4 <ferror@plt+0x3bd94>
  43f79c:	mov	w25, w0
  43f7a0:	tbnz	w0, #31, 43f7e8 <ferror@plt+0x3cab8>
  43f7a4:	mov	x2, x20
  43f7a8:	mov	x1, x19
  43f7ac:	mov	w0, w23
  43f7b0:	bl	43d094 <ferror@plt+0x3a364>
  43f7b4:	b	43eb98 <ferror@plt+0x3be68>
  43f7b8:	mov	x3, x20
  43f7bc:	mov	x2, x19
  43f7c0:	add	x1, sp, #0x208
  43f7c4:	mov	x0, x21
  43f7c8:	bl	440458 <ferror@plt+0x3d728>
  43f7cc:	b	43f750 <ferror@plt+0x3ca20>
  43f7d0:	mov	x3, x20
  43f7d4:	mov	x2, x19
  43f7d8:	add	x1, sp, #0x1f0
  43f7dc:	mov	x0, x21
  43f7e0:	bl	440458 <ferror@plt+0x3d728>
  43f7e4:	b	43f754 <ferror@plt+0x3ca24>
  43f7e8:	mov	x2, x20
  43f7ec:	mov	x1, x19
  43f7f0:	mov	w0, w28
  43f7f4:	bl	43d094 <ferror@plt+0x3a364>
  43f7f8:	b	43eb98 <ferror@plt+0x3be68>
  43f7fc:	mov	x3, x20
  43f800:	mov	x2, x19
  43f804:	add	x1, sp, #0x220
  43f808:	mov	x0, x21
  43f80c:	bl	440458 <ferror@plt+0x3d728>
  43f810:	b	43f6a0 <ferror@plt+0x3c970>
  43f814:	mov	x3, x20
  43f818:	mov	x2, x19
  43f81c:	add	x1, sp, #0x208
  43f820:	mov	x0, x21
  43f824:	bl	440458 <ferror@plt+0x3d728>
  43f828:	cbnz	w27, 43f890 <ferror@plt+0x3cb60>
  43f82c:	str	wzr, [sp, #40]
  43f830:	str	xzr, [sp, #32]
  43f834:	mov	w0, #0x1                   	// #1
  43f838:	str	w0, [sp, #24]
  43f83c:	str	wzr, [sp, #16]
  43f840:	str	xzr, [sp, #8]
  43f844:	ldr	x0, [sp, #1072]
  43f848:	str	x0, [sp]
  43f84c:	ldr	x7, [sp, #200]
  43f850:	ldr	x6, [sp, #192]
  43f854:	mov	x5, x20
  43f858:	mov	x4, x19
  43f85c:	ldr	x3, [sp, #184]
  43f860:	mov	w2, w24
  43f864:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  43f868:	add	x1, x1, #0xd70
  43f86c:	mov	x0, x21
  43f870:	bl	43eac4 <ferror@plt+0x3bd94>
  43f874:	mov	w25, w0
  43f878:	tbnz	w0, #31, 43f8a8 <ferror@plt+0x3cb78>
  43f87c:	mov	x2, x20
  43f880:	mov	x1, x19
  43f884:	mov	w0, w23
  43f888:	bl	43d094 <ferror@plt+0x3a364>
  43f88c:	b	43eb98 <ferror@plt+0x3be68>
  43f890:	mov	x3, x20
  43f894:	mov	x2, x19
  43f898:	add	x1, sp, #0x1f0
  43f89c:	mov	x0, x21
  43f8a0:	bl	440458 <ferror@plt+0x3d728>
  43f8a4:	b	43f82c <ferror@plt+0x3cafc>
  43f8a8:	mov	x2, x20
  43f8ac:	mov	x1, x19
  43f8b0:	mov	w0, w24
  43f8b4:	bl	43d094 <ferror@plt+0x3a364>
  43f8b8:	b	43eb98 <ferror@plt+0x3be68>
  43f8bc:	mov	x3, x20
  43f8c0:	mov	x2, x19
  43f8c4:	add	x1, sp, #0x208
  43f8c8:	mov	x0, x21
  43f8cc:	bl	440458 <ferror@plt+0x3d728>
  43f8d0:	b	43f6e8 <ferror@plt+0x3c9b8>
  43f8d4:	ldr	w0, [sp, #360]
  43f8d8:	str	w0, [sp, #40]
  43f8dc:	ldr	x0, [sp, #328]
  43f8e0:	str	x0, [sp, #32]
  43f8e4:	mov	w0, #0x1                   	// #1
  43f8e8:	str	w0, [sp, #24]
  43f8ec:	str	wzr, [sp, #16]
  43f8f0:	add	x0, sp, #0x1a0
  43f8f4:	str	x0, [sp, #8]
  43f8f8:	ldr	x0, [sp, #1072]
  43f8fc:	str	x0, [sp]
  43f900:	ldr	x7, [sp, #200]
  43f904:	ldr	x6, [sp, #192]
  43f908:	mov	x5, x20
  43f90c:	mov	x4, x19
  43f910:	ldr	x3, [sp, #184]
  43f914:	mov	w2, w24
  43f918:	mov	x1, x25
  43f91c:	mov	x0, x21
  43f920:	bl	43eac4 <ferror@plt+0x3bd94>
  43f924:	mov	w25, w0
  43f928:	mov	x3, x20
  43f92c:	mov	x2, x19
  43f930:	add	x1, sp, #0x1f0
  43f934:	mov	x0, x21
  43f938:	bl	440458 <ferror@plt+0x3d728>
  43f93c:	tbz	w25, #31, 43f720 <ferror@plt+0x3c9f0>
  43f940:	mov	x2, x20
  43f944:	mov	x1, x19
  43f948:	mov	w0, w24
  43f94c:	bl	43d094 <ferror@plt+0x3a364>
  43f950:	b	43eb98 <ferror@plt+0x3be68>
  43f954:	mov	x3, x20
  43f958:	mov	x2, x19
  43f95c:	add	x1, sp, #0x1f0
  43f960:	mov	x0, x21
  43f964:	bl	440458 <ferror@plt+0x3d728>
  43f968:	b	43f720 <ferror@plt+0x3c9f0>
  43f96c:	ldr	x27, [x2]
  43f970:	ldr	x2, [x2]
  43f974:	add	x1, x1, x2
  43f978:	cmp	x3, x1
  43f97c:	csel	x3, x3, x1, ge  // ge = tcont
  43f980:	add	x0, x0, #0x20
  43f984:	cmp	x4, x0
  43f988:	b.eq	43f9ac <ferror@plt+0x3cc7c>  // b.none
  43f98c:	mov	x2, x0
  43f990:	ldr	x1, [x0, #8]
  43f994:	cbz	x1, 43f980 <ferror@plt+0x3cc50>
  43f998:	cbz	x27, 43f96c <ferror@plt+0x3cc3c>
  43f99c:	ldr	x5, [x0]
  43f9a0:	cmp	x5, x27
  43f9a4:	b.ge	43f970 <ferror@plt+0x3cc40>  // b.tcont
  43f9a8:	b	43f96c <ferror@plt+0x3cc3c>
  43f9ac:	cmp	x27, #0x0
  43f9b0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43f9b4:	b.ne	43f9d8 <ferror@plt+0x3cca8>  // b.any
  43f9b8:	mov	x2, x20
  43f9bc:	mov	x1, x19
  43f9c0:	mov	w0, w23
  43f9c4:	bl	43d094 <ferror@plt+0x3a364>
  43f9c8:	mov	w26, w0
  43f9cc:	cbz	w0, 43eb44 <ferror@plt+0x3be14>
  43f9d0:	mov	w25, #0x1                   	// #1
  43f9d4:	b	43eb98 <ferror@plt+0x3be68>
  43f9d8:	add	x6, sp, #0x1d8
  43f9dc:	mov	x5, x20
  43f9e0:	mov	x4, x19
  43f9e4:	sub	x3, x3, x27
  43f9e8:	mov	x2, x27
  43f9ec:	mov	w1, w23
  43f9f0:	mov	x0, x21
  43f9f4:	bl	440394 <ferror@plt+0x3d664>
  43f9f8:	mov	w26, w0
  43f9fc:	cbz	w0, 43eb44 <ferror@plt+0x3be14>
  43fa00:	mov	x2, x20
  43fa04:	mov	x1, x19
  43fa08:	mov	w0, w23
  43fa0c:	bl	43d094 <ferror@plt+0x3a364>
  43fa10:	cbz	w0, 43fcdc <ferror@plt+0x3cfac>
  43fa14:	ldr	x3, [sp, #472]
  43fa18:	mov	x0, x24
  43fa1c:	mov	w2, #0x1                   	// #1
  43fa20:	mov	w25, #0x0                   	// #0
  43fa24:	b	43fa5c <ferror@plt+0x3cd2c>
  43fa28:	ldr	x1, [x0]
  43fa2c:	sub	x1, x1, x27
  43fa30:	add	x1, x3, x1
  43fa34:	str	x1, [x0, #16]
  43fa38:	sub	w1, w2, #0x1
  43fa3c:	cmp	w1, #0x4
  43fa40:	b.hi	43fa4c <ferror@plt+0x3cd1c>  // b.pmore
  43fa44:	add	w25, w25, #0x1
  43fa48:	b	43fa54 <ferror@plt+0x3cd24>
  43fa4c:	cmp	w2, #0x9
  43fa50:	b.hi	43fa6c <ferror@plt+0x3cd3c>  // b.pmore
  43fa54:	add	x0, x0, #0x20
  43fa58:	add	w2, w2, #0x1
  43fa5c:	ldr	x1, [x0, #8]
  43fa60:	cbnz	x1, 43fa28 <ferror@plt+0x3ccf8>
  43fa64:	str	xzr, [x0, #16]
  43fa68:	b	43fa4c <ferror@plt+0x3cd1c>
  43fa6c:	mov	x26, x24
  43fa70:	mov	w28, #0x5                   	// #5
  43fa74:	mov	x23, #0x0                   	// #0
  43fa78:	add	x0, sp, #0x188
  43fa7c:	str	x0, [sp, #200]
  43fa80:	add	x0, sp, #0x180
  43fa84:	str	x0, [sp, #208]
  43fa88:	str	w22, [sp, #180]
  43fa8c:	b	43fae0 <ferror@plt+0x3cdb0>
  43fa90:	str	xzr, [sp, #384]
  43fa94:	str	xzr, [sp, #392]
  43fa98:	ldr	x7, [sp, #200]
  43fa9c:	ldr	x6, [sp, #208]
  43faa0:	mov	x5, x20
  43faa4:	mov	x4, x19
  43faa8:	mov	x3, x23
  43faac:	mov	x2, x22
  43fab0:	ldr	x1, [x27, #176]
  43fab4:	mov	x0, x21
  43fab8:	bl	43e4bc <ferror@plt+0x3b78c>
  43fabc:	cbz	w0, 43fb14 <ferror@plt+0x3cde4>
  43fac0:	ldr	x0, [sp, #384]
  43fac4:	str	x0, [x27, #16]
  43fac8:	ldr	x0, [sp, #392]
  43facc:	str	x0, [x27, #8]
  43fad0:	str	wzr, [x27, #24]
  43fad4:	add	x26, x26, #0x20
  43fad8:	subs	w28, w28, #0x1
  43fadc:	b.eq	43fb24 <ferror@plt+0x3cdf4>  // b.none
  43fae0:	mov	x27, x26
  43fae4:	ldr	x0, [x26, #8]
  43fae8:	cbnz	x0, 43fad4 <ferror@plt+0x3cda4>
  43faec:	ldr	x22, [x26, #168]
  43faf0:	cbz	x22, 43fad4 <ferror@plt+0x3cda4>
  43faf4:	cbnz	x23, 43fa90 <ferror@plt+0x3cd60>
  43faf8:	mov	x3, x20
  43fafc:	mov	x2, x19
  43fb00:	mov	x1, #0x13b4                	// #5044
  43fb04:	mov	x0, x21
  43fb08:	bl	43c9e0 <ferror@plt+0x39cb0>
  43fb0c:	mov	x23, x0
  43fb10:	cbnz	x0, 43fa90 <ferror@plt+0x3cd60>
  43fb14:	ldr	w22, [sp, #180]
  43fb18:	mov	w26, #0x1                   	// #1
  43fb1c:	mov	w23, #0xffffffff            	// #-1
  43fb20:	b	43eb44 <ferror@plt+0x3be14>
  43fb24:	ldr	w22, [sp, #180]
  43fb28:	mov	w0, #0x5                   	// #5
  43fb2c:	str	w0, [sp, #200]
  43fb30:	str	w22, [sp, #180]
  43fb34:	b	43fe2c <ferror@plt+0x3d0fc>
  43fb38:	mov	x3, x20
  43fb3c:	mov	x2, x19
  43fb40:	mov	x1, #0x13b4                	// #5044
  43fb44:	mov	x0, x21
  43fb48:	bl	43c9e0 <ferror@plt+0x39cb0>
  43fb4c:	mov	x23, x0
  43fb50:	cbnz	x0, 43fe44 <ferror@plt+0x3d114>
  43fb54:	ldr	w22, [sp, #180]
  43fb58:	mov	w26, #0x1                   	// #1
  43fb5c:	mov	w23, #0xffffffff            	// #-1
  43fb60:	b	43eb44 <ferror@plt+0x3be14>
  43fb64:	ldr	w22, [sp, #180]
  43fb68:	cbz	x23, 43fb84 <ferror@plt+0x3ce54>
  43fb6c:	mov	x4, x20
  43fb70:	mov	x3, x19
  43fb74:	mov	x2, #0x13b4                	// #5044
  43fb78:	mov	x1, x23
  43fb7c:	mov	x0, x21
  43fb80:	bl	43c934 <ferror@plt+0x39c04>
  43fb84:	cbz	w25, 43fc14 <ferror@plt+0x3cee4>
  43fb88:	mov	w26, #0x1                   	// #1
  43fb8c:	ldr	x0, [sp, #1080]
  43fb90:	str	x0, [sp, #72]
  43fb94:	ldr	x0, [sp, #192]
  43fb98:	str	x0, [sp, #64]
  43fb9c:	str	x20, [sp, #56]
  43fba0:	str	x19, [sp, #48]
  43fba4:	ldr	x0, [sp, #416]
  43fba8:	str	x0, [sp, #40]
  43fbac:	ldr	w0, [sp, #272]
  43fbb0:	cmp	w0, #0x2
  43fbb4:	cset	w0, eq  // eq = none
  43fbb8:	str	w0, [sp, #32]
  43fbbc:	ldr	x0, [sp, #752]
  43fbc0:	str	x0, [sp, #24]
  43fbc4:	ldr	x0, [sp, #760]
  43fbc8:	str	x0, [sp, #16]
  43fbcc:	ldr	x0, [sp, #720]
  43fbd0:	str	x0, [sp, #8]
  43fbd4:	ldr	x0, [sp, #728]
  43fbd8:	str	x0, [sp]
  43fbdc:	ldr	x7, [sp, #688]
  43fbe0:	ldr	x6, [sp, #696]
  43fbe4:	ldr	x5, [sp, #656]
  43fbe8:	ldr	x4, [sp, #664]
  43fbec:	ldr	x3, [sp, #624]
  43fbf0:	ldr	x2, [sp, #632]
  43fbf4:	ldr	x1, [sp, #184]
  43fbf8:	mov	x0, x21
  43fbfc:	bl	443800 <ferror@plt+0x40ad0>
  43fc00:	cbz	w0, 43fcf4 <ferror@plt+0x3cfc4>
  43fc04:	mov	w25, #0x1                   	// #1
  43fc08:	ldr	x0, [sp, #1072]
  43fc0c:	str	w25, [x0]
  43fc10:	b	43eb98 <ferror@plt+0x3be68>
  43fc14:	mov	x3, x20
  43fc18:	mov	x2, x19
  43fc1c:	add	x1, sp, #0x1d8
  43fc20:	mov	x0, x21
  43fc24:	bl	440458 <ferror@plt+0x3d728>
  43fc28:	mov	w26, #0x0                   	// #0
  43fc2c:	b	43fb8c <ferror@plt+0x3ce5c>
  43fc30:	mov	x3, x20
  43fc34:	mov	x2, x19
  43fc38:	add	x1, sp, #0x250
  43fc3c:	mov	x0, x21
  43fc40:	bl	440458 <ferror@plt+0x3d728>
  43fc44:	b	43eb5c <ferror@plt+0x3be2c>
  43fc48:	mov	x3, x20
  43fc4c:	mov	x2, x19
  43fc50:	add	x1, sp, #0x238
  43fc54:	mov	x0, x21
  43fc58:	bl	440458 <ferror@plt+0x3d728>
  43fc5c:	b	43eb60 <ferror@plt+0x3be30>
  43fc60:	mov	x3, x20
  43fc64:	mov	x2, x19
  43fc68:	add	x1, sp, #0x208
  43fc6c:	mov	x0, x21
  43fc70:	bl	440458 <ferror@plt+0x3d728>
  43fc74:	b	43eb64 <ferror@plt+0x3be34>
  43fc78:	mov	x3, x20
  43fc7c:	mov	x2, x19
  43fc80:	add	x1, sp, #0x1f0
  43fc84:	mov	x0, x21
  43fc88:	bl	440458 <ferror@plt+0x3d728>
  43fc8c:	b	43eb68 <ferror@plt+0x3be38>
  43fc90:	mov	x3, x20
  43fc94:	mov	x2, x19
  43fc98:	add	x1, sp, #0x220
  43fc9c:	mov	x0, x21
  43fca0:	bl	440458 <ferror@plt+0x3d728>
  43fca4:	b	43eb70 <ferror@plt+0x3be40>
  43fca8:	mov	x3, x20
  43fcac:	mov	x2, x19
  43fcb0:	add	x1, sp, #0x1d8
  43fcb4:	mov	x0, x21
  43fcb8:	bl	440458 <ferror@plt+0x3d728>
  43fcbc:	b	43eb74 <ferror@plt+0x3be44>
  43fcc0:	mov	x2, x20
  43fcc4:	mov	x1, x19
  43fcc8:	mov	w0, w23
  43fccc:	bl	43d094 <ferror@plt+0x3a364>
  43fcd0:	b	43eb98 <ferror@plt+0x3be68>
  43fcd4:	mov	w25, #0xffffffff            	// #-1
  43fcd8:	b	43eb98 <ferror@plt+0x3be68>
  43fcdc:	mov	w26, #0x1                   	// #1
  43fce0:	b	43eb44 <ferror@plt+0x3be14>
  43fce4:	ldr	w22, [sp, #180]
  43fce8:	mov	w26, #0x1                   	// #1
  43fcec:	mov	w23, #0xffffffff            	// #-1
  43fcf0:	b	43eb44 <ferror@plt+0x3be14>
  43fcf4:	mov	w23, #0xffffffff            	// #-1
  43fcf8:	b	43eb44 <ferror@plt+0x3be14>
  43fcfc:	mov	w22, w0
  43fd00:	ldr	x24, [sp, #336]
  43fd04:	ldr	x21, [sp, #264]
  43fd08:	ldr	w23, [sp, #276]
  43fd0c:	ldr	x19, [sp, #280]
  43fd10:	ldr	x20, [sp, #288]
  43fd14:	str	w0, [sp, #180]
  43fd18:	mov	w28, w0
  43fd1c:	mov	w26, #0x1                   	// #1
  43fd20:	b	43ed78 <ferror@plt+0x3c048>
  43fd24:	ldr	x24, [sp, #336]
  43fd28:	mov	w28, w19
  43fd2c:	ldr	x21, [sp, #264]
  43fd30:	ldr	w23, [sp, #276]
  43fd34:	ldr	x19, [sp, #280]
  43fd38:	ldr	x20, [sp, #288]
  43fd3c:	mov	w22, w28
  43fd40:	mov	w0, #0x1                   	// #1
  43fd44:	str	w0, [sp, #180]
  43fd48:	mov	w26, w0
  43fd4c:	b	43ed78 <ferror@plt+0x3c048>
  43fd50:	ldr	x24, [sp, #336]
  43fd54:	mov	w28, w19
  43fd58:	ldr	x21, [sp, #264]
  43fd5c:	ldr	w23, [sp, #276]
  43fd60:	ldr	x19, [sp, #280]
  43fd64:	ldr	x20, [sp, #288]
  43fd68:	mov	w22, w28
  43fd6c:	mov	w0, #0x1                   	// #1
  43fd70:	str	w0, [sp, #180]
  43fd74:	mov	w26, w0
  43fd78:	b	43ed78 <ferror@plt+0x3c048>
  43fd7c:	ldr	x24, [sp, #336]
  43fd80:	mov	w28, w0
  43fd84:	ldr	x21, [sp, #264]
  43fd88:	ldr	w23, [sp, #276]
  43fd8c:	ldr	x19, [sp, #280]
  43fd90:	ldr	x20, [sp, #288]
  43fd94:	mov	w25, w0
  43fd98:	mov	w22, w0
  43fd9c:	mov	w26, #0x1                   	// #1
  43fda0:	b	43ed78 <ferror@plt+0x3c048>
  43fda4:	ldr	x24, [sp, #336]
  43fda8:	mov	w28, w0
  43fdac:	ldr	x21, [sp, #264]
  43fdb0:	ldr	w23, [sp, #276]
  43fdb4:	ldr	x19, [sp, #280]
  43fdb8:	ldr	x20, [sp, #288]
  43fdbc:	mov	w27, w0
  43fdc0:	mov	w22, w0
  43fdc4:	mov	w26, #0x1                   	// #1
  43fdc8:	b	43ed78 <ferror@plt+0x3c048>
  43fdcc:	ldr	x24, [sp, #336]
  43fdd0:	mov	w28, w0
  43fdd4:	ldr	x21, [sp, #264]
  43fdd8:	ldr	w23, [sp, #276]
  43fddc:	ldr	x19, [sp, #280]
  43fde0:	ldr	x20, [sp, #288]
  43fde4:	mov	w22, w0
  43fde8:	mov	w26, #0x1                   	// #1
  43fdec:	b	43ed78 <ferror@plt+0x3c048>
  43fdf0:	mov	w22, #0x1                   	// #1
  43fdf4:	mov	w28, w22
  43fdf8:	mov	w26, w22
  43fdfc:	b	43ed78 <ferror@plt+0x3c048>
  43fe00:	mov	x0, #0x0                   	// #0
  43fe04:	mov	x22, #0x0                   	// #0
  43fe08:	str	x22, [x27, #16]
  43fe0c:	str	x0, [x27, #8]
  43fe10:	str	wzr, [x27, #24]
  43fe14:	sub	w25, w25, #0x1
  43fe18:	add	x24, x24, #0x20
  43fe1c:	ldr	w0, [sp, #200]
  43fe20:	subs	w0, w0, #0x1
  43fe24:	str	w0, [sp, #200]
  43fe28:	b.eq	43fb64 <ferror@plt+0x3ce34>  // b.none
  43fe2c:	mov	x27, x24
  43fe30:	ldr	x28, [x24, #8]
  43fe34:	cbz	x28, 43fe18 <ferror@plt+0x3d0e8>
  43fe38:	ldr	w0, [x24, #24]
  43fe3c:	cbz	w0, 43fe18 <ferror@plt+0x3d0e8>
  43fe40:	cbz	x23, 43fb38 <ferror@plt+0x3ce08>
  43fe44:	cmp	x28, #0x17
  43fe48:	b.ls	43fe00 <ferror@plt+0x3d0d0>  // b.plast
  43fe4c:	ldr	x26, [x27, #16]
  43fe50:	ldr	w0, [x26]
  43fe54:	cmp	w0, #0x1
  43fe58:	b.ne	43fe9c <ferror@plt+0x3d16c>  // b.any
  43fe5c:	mov	x3, x20
  43fe60:	mov	x2, x19
  43fe64:	ldr	x1, [x26, #8]
  43fe68:	mov	x0, x21
  43fe6c:	bl	43c9e0 <ferror@plt+0x39cb0>
  43fe70:	mov	x22, x0
  43fe74:	cbz	x0, 43fce4 <ferror@plt+0x3cfb4>
  43fe78:	ldr	x4, [x26, #8]
  43fe7c:	mov	x3, x0
  43fe80:	mov	x2, x23
  43fe84:	sub	x1, x28, #0x18
  43fe88:	add	x0, x26, #0x18
  43fe8c:	bl	43d5ec <ferror@plt+0x3a8bc>
  43fe90:	cbz	w0, 43fea8 <ferror@plt+0x3d178>
  43fe94:	ldr	x0, [x26, #8]
  43fe98:	b	43fe08 <ferror@plt+0x3d0d8>
  43fe9c:	mov	x0, #0x0                   	// #0
  43fea0:	mov	x22, #0x0                   	// #0
  43fea4:	b	43fe08 <ferror@plt+0x3d0d8>
  43fea8:	mov	x0, #0x0                   	// #0
  43feac:	mov	x22, #0x0                   	// #0
  43feb0:	b	43fe08 <ferror@plt+0x3d0d8>
  43feb4:	mov	x3, x20
  43feb8:	mov	x2, x19
  43febc:	mov	x1, #0x0                   	// #0
  43fec0:	mov	x0, x21
  43fec4:	bl	43c9e0 <ferror@plt+0x39cb0>
  43fec8:	mov	x26, x0
  43fecc:	cbz	x0, 43f414 <ferror@plt+0x3c6e4>
  43fed0:	str	xzr, [sp, #224]
  43fed4:	adrp	x3, 43d000 <ferror@plt+0x3a2d0>
  43fed8:	add	x3, x3, #0x12c
  43fedc:	mov	x2, #0x18                  	// #24
  43fee0:	ldr	x22, [sp, #224]
  43fee4:	mov	x1, x22
  43fee8:	mov	x0, x26
  43feec:	bl	44408c <ferror@plt+0x4135c>
  43fef0:	str	xzr, [x28]
  43fef4:	str	x26, [x28, #8]
  43fef8:	str	x22, [x28, #16]
  43fefc:	mov	x3, x20
  43ff00:	mov	x2, x19
  43ff04:	add	x1, sp, #0x250
  43ff08:	mov	x0, x21
  43ff0c:	bl	440458 <ferror@plt+0x3d728>
  43ff10:	mov	w0, #0x1                   	// #1
  43ff14:	ldr	x1, [sp, #200]
  43ff18:	str	w0, [x1]
  43ff1c:	ldr	w0, [x21, #8]
  43ff20:	cbz	w0, 43f4e0 <ferror@plt+0x3c7b0>
  43ff24:	add	x2, x21, #0x30
  43ff28:	mov	x0, x2
  43ff2c:	ldar	x1, [x0]
  43ff30:	cbz	x1, 43f504 <ferror@plt+0x3c7d4>
  43ff34:	mov	x0, x1
  43ff38:	b	43ff2c <ferror@plt+0x3d1fc>
  43ff3c:	sub	sp, sp, #0x80
  43ff40:	stp	x29, x30, [sp, #48]
  43ff44:	add	x29, sp, #0x30
  43ff48:	stp	x19, x20, [sp, #64]
  43ff4c:	str	x21, [sp, #80]
  43ff50:	mov	x20, x0
  43ff54:	mov	x19, x2
  43ff58:	ldr	x1, [x0, #8]
  43ff5c:	cbz	x1, 43ff68 <ferror@plt+0x3d238>
  43ff60:	ldrb	w0, [x1]
  43ff64:	cbnz	w0, 43fff8 <ferror@plt+0x3d2c8>
  43ff68:	ldr	w2, [x19, #56]
  43ff6c:	cmn	w2, #0x1
  43ff70:	b.eq	43ffe0 <ferror@plt+0x3d2b0>  // b.none
  43ff74:	ldr	x21, [x19, #48]
  43ff78:	mov	w0, #0xffffffff            	// #-1
  43ff7c:	str	w0, [x19, #56]
  43ff80:	str	wzr, [sp, #40]
  43ff84:	str	xzr, [sp, #32]
  43ff88:	str	wzr, [sp, #24]
  43ff8c:	str	wzr, [sp, #16]
  43ff90:	str	xzr, [sp, #8]
  43ff94:	add	x0, sp, #0x6c
  43ff98:	str	x0, [sp]
  43ff9c:	ldr	x7, [x19, #32]
  43ffa0:	add	x6, sp, #0x70
  43ffa4:	ldr	x5, [x19, #16]
  43ffa8:	ldr	x4, [x19, #8]
  43ffac:	ldr	x3, [x20]
  43ffb0:	mov	x1, x21
  43ffb4:	ldr	x0, [x19]
  43ffb8:	bl	43eac4 <ferror@plt+0x3bd94>
  43ffbc:	cbz	w0, 43ffe0 <ferror@plt+0x3d2b0>
  43ffc0:	ldr	w0, [sp, #108]
  43ffc4:	cbz	w0, 43ffe0 <ferror@plt+0x3d2b0>
  43ffc8:	ldr	x0, [x19, #40]
  43ffcc:	mov	w1, #0x1                   	// #1
  43ffd0:	str	w1, [x0]
  43ffd4:	ldr	x0, [x19, #24]
  43ffd8:	ldr	x1, [sp, #112]
  43ffdc:	str	x1, [x0]
  43ffe0:	mov	w0, #0x0                   	// #0
  43ffe4:	ldp	x19, x20, [sp, #64]
  43ffe8:	ldr	x21, [sp, #80]
  43ffec:	ldp	x29, x30, [sp, #48]
  43fff0:	add	sp, sp, #0x80
  43fff4:	ret
  43fff8:	ldr	w0, [x2, #56]
  43fffc:	cmn	w0, #0x1
  440000:	b.ne	440028 <ferror@plt+0x3d2f8>  // b.any
  440004:	ldr	x21, [x20, #8]
  440008:	add	x3, sp, #0x7c
  44000c:	ldr	x2, [x19, #16]
  440010:	ldr	x1, [x19, #8]
  440014:	mov	x0, x21
  440018:	bl	43cfe0 <ferror@plt+0x3a2b0>
  44001c:	mov	w2, w0
  440020:	tbz	w0, #31, 43ff80 <ferror@plt+0x3d250>
  440024:	b	43ffe0 <ferror@plt+0x3d2b0>
  440028:	ldr	x2, [x2, #16]
  44002c:	ldr	x1, [x19, #8]
  440030:	bl	43d094 <ferror@plt+0x3a364>
  440034:	mov	w0, #0xffffffff            	// #-1
  440038:	str	w0, [x19, #56]
  44003c:	b	440004 <ferror@plt+0x3d2d4>
  440040:	stp	x29, x30, [sp, #-16]!
  440044:	mov	x29, sp
  440048:	mov	x3, x0
  44004c:	mov	x10, x2
  440050:	mov	x0, x4
  440054:	ldr	w2, [x3, #8]
  440058:	cbnz	w2, 4400b0 <ferror@plt+0x3d380>
  44005c:	ldr	x4, [x3, #48]
  440060:	cbz	x4, 440114 <ferror@plt+0x3d3e4>
  440064:	mov	x9, #0x0                   	// #0
  440068:	b	440148 <ferror@plt+0x3d418>
  44006c:	mov	x8, x6
  440070:	cmp	x8, x7
  440074:	b.ls	440140 <ferror@plt+0x3d410>  // b.plast
  440078:	add	x5, x8, x7
  44007c:	lsr	x6, x5, #1
  440080:	and	x5, x5, #0xfffffffffffffffe
  440084:	add	x5, x5, x6
  440088:	add	x5, x2, x5, lsl #3
  44008c:	ldr	x3, [x5, #8]
  440090:	cmp	x3, x1
  440094:	b.hi	44006c <ferror@plt+0x3d33c>  // b.pmore
  440098:	ldr	x7, [x5, #16]
  44009c:	add	x3, x3, x7
  4400a0:	cmp	x3, x1
  4400a4:	b.hi	440128 <ferror@plt+0x3d3f8>  // b.pmore
  4400a8:	add	x7, x6, #0x1
  4400ac:	b	440070 <ferror@plt+0x3d340>
  4400b0:	add	x2, x3, #0x30
  4400b4:	mov	x4, #0x0                   	// #0
  4400b8:	ldar	x2, [x2]
  4400bc:	cbz	x2, 440114 <ferror@plt+0x3d3e4>
  4400c0:	ldr	x9, [x2, #8]
  4400c4:	ldr	x8, [x2, #16]
  4400c8:	mov	x7, x4
  4400cc:	b	4400d4 <ferror@plt+0x3d3a4>
  4400d0:	mov	x8, x6
  4400d4:	cmp	x8, x7
  4400d8:	b.ls	4400b8 <ferror@plt+0x3d388>  // b.plast
  4400dc:	add	x5, x8, x7
  4400e0:	lsr	x6, x5, #1
  4400e4:	and	x5, x5, #0xfffffffffffffffe
  4400e8:	add	x5, x5, x6
  4400ec:	add	x5, x9, x5, lsl #3
  4400f0:	ldr	x3, [x5, #8]
  4400f4:	cmp	x3, x1
  4400f8:	b.hi	4400d0 <ferror@plt+0x3d3a0>  // b.pmore
  4400fc:	ldr	x7, [x5, #16]
  440100:	add	x3, x3, x7
  440104:	cmp	x3, x1
  440108:	b.hi	440128 <ferror@plt+0x3d3f8>  // b.pmore
  44010c:	add	x7, x6, #0x1
  440110:	b	4400d4 <ferror@plt+0x3d3a4>
  440114:	mov	x4, #0x0                   	// #0
  440118:	mov	x3, #0x0                   	// #0
  44011c:	mov	x2, #0x0                   	// #0
  440120:	blr	x10
  440124:	b	440138 <ferror@plt+0x3d408>
  440128:	ldr	x4, [x5, #16]
  44012c:	ldr	x3, [x5, #8]
  440130:	ldr	x2, [x5]
  440134:	blr	x10
  440138:	ldp	x29, x30, [sp], #16
  44013c:	ret
  440140:	ldr	x4, [x4]
  440144:	cbz	x4, 440114 <ferror@plt+0x3d3e4>
  440148:	ldr	x2, [x4, #8]
  44014c:	ldr	x8, [x4, #16]
  440150:	mov	x7, x9
  440154:	b	440070 <ferror@plt+0x3d340>
  440158:	stp	x29, x30, [sp, #-80]!
  44015c:	mov	x29, sp
  440160:	stp	x19, x20, [sp, #16]
  440164:	stp	x21, x22, [sp, #32]
  440168:	stp	x23, x24, [sp, #48]
  44016c:	stp	x25, x26, [sp, #64]
  440170:	mov	x22, x0
  440174:	mov	x23, x1
  440178:	mov	x24, x2
  44017c:	mov	x20, x3
  440180:	mov	x21, x4
  440184:	mov	x25, x5
  440188:	mov	x26, x6
  44018c:	mov	x3, x4
  440190:	mov	x2, x20
  440194:	mov	x1, #0x13b4                	// #5044
  440198:	bl	43c9e0 <ferror@plt+0x39cb0>
  44019c:	cbz	x0, 440200 <ferror@plt+0x3d4d0>
  4401a0:	mov	x19, x0
  4401a4:	mov	x7, x26
  4401a8:	mov	x6, x25
  4401ac:	mov	x5, x21
  4401b0:	mov	x4, x20
  4401b4:	mov	x3, x0
  4401b8:	mov	x2, x24
  4401bc:	mov	x1, x23
  4401c0:	mov	x0, x22
  4401c4:	bl	43e4bc <ferror@plt+0x3b78c>
  4401c8:	mov	w23, w0
  4401cc:	mov	x4, x21
  4401d0:	mov	x3, x20
  4401d4:	mov	x2, #0x13b4                	// #5044
  4401d8:	mov	x1, x19
  4401dc:	mov	x0, x22
  4401e0:	bl	43c934 <ferror@plt+0x39c04>
  4401e4:	mov	w0, w23
  4401e8:	ldp	x19, x20, [sp, #16]
  4401ec:	ldp	x21, x22, [sp, #32]
  4401f0:	ldp	x23, x24, [sp, #48]
  4401f4:	ldp	x25, x26, [sp, #64]
  4401f8:	ldp	x29, x30, [sp], #80
  4401fc:	ret
  440200:	mov	w23, #0x0                   	// #0
  440204:	b	4401e4 <ferror@plt+0x3d4b4>
  440208:	sub	sp, sp, #0xc0
  44020c:	stp	x29, x30, [sp, #48]
  440210:	add	x29, sp, #0x30
  440214:	stp	x19, x20, [sp, #64]
  440218:	stp	x21, x22, [sp, #80]
  44021c:	stp	x23, x24, [sp, #96]
  440220:	mov	x19, x0
  440224:	mov	x24, x1
  440228:	mov	w20, w2
  44022c:	mov	x22, x3
  440230:	mov	x21, x4
  440234:	mov	x23, x5
  440238:	adrp	x3, 43d000 <ferror@plt+0x3a2d0>
  44023c:	add	x3, x3, #0xe0
  440240:	str	x3, [sp, #176]
  440244:	str	wzr, [sp, #40]
  440248:	str	xzr, [sp, #32]
  44024c:	str	wzr, [sp, #24]
  440250:	mov	w3, #0x1                   	// #1
  440254:	str	w3, [sp, #16]
  440258:	str	xzr, [sp, #8]
  44025c:	add	x3, sp, #0xb8
  440260:	str	x3, [sp]
  440264:	add	x7, sp, #0xbc
  440268:	add	x6, sp, #0xb0
  44026c:	mov	x5, x4
  440270:	mov	x4, x22
  440274:	mov	x3, #0x0                   	// #0
  440278:	bl	43eac4 <ferror@plt+0x3bd94>
  44027c:	cbz	w0, 440310 <ferror@plt+0x3d5e0>
  440280:	str	x19, [sp, #112]
  440284:	str	x22, [sp, #120]
  440288:	str	x21, [sp, #128]
  44028c:	add	x1, sp, #0xb0
  440290:	str	x1, [sp, #136]
  440294:	add	x1, sp, #0xbc
  440298:	str	x1, [sp, #144]
  44029c:	add	x1, sp, #0xb8
  4402a0:	str	x1, [sp, #152]
  4402a4:	str	x24, [sp, #160]
  4402a8:	cmp	w0, #0x0
  4402ac:	csinv	w20, w20, wzr, lt  // lt = tstop
  4402b0:	str	w20, [sp, #168]
  4402b4:	add	x1, sp, #0x70
  4402b8:	adrp	x0, 43f000 <ferror@plt+0x3c2d0>
  4402bc:	add	x0, x0, #0xf3c
  4402c0:	bl	402a70 <dl_iterate_phdr@plt>
  4402c4:	ldr	w0, [x19, #8]
  4402c8:	cbnz	w0, 440340 <ferror@plt+0x3d610>
  4402cc:	ldr	w0, [sp, #188]
  4402d0:	cbz	w0, 440328 <ferror@plt+0x3d5f8>
  4402d4:	adrp	x0, 440000 <ferror@plt+0x3d2d0>
  4402d8:	add	x0, x0, #0x40
  4402dc:	str	x0, [x19, #40]
  4402e0:	ldr	x0, [x19, #24]
  4402e4:	str	x0, [x23]
  4402e8:	ldr	x2, [x23]
  4402ec:	cmp	x2, #0x0
  4402f0:	mov	w0, #0x1                   	// #1
  4402f4:	adrp	x1, 43d000 <ferror@plt+0x3a2d0>
  4402f8:	add	x1, x1, #0xe0
  4402fc:	ccmp	x2, x1, #0x4, ne  // ne = any
  440300:	b.ne	440310 <ferror@plt+0x3d5e0>  // b.any
  440304:	ldr	x0, [sp, #176]
  440308:	str	x0, [x23]
  44030c:	mov	w0, #0x1                   	// #1
  440310:	ldp	x19, x20, [sp, #64]
  440314:	ldp	x21, x22, [sp, #80]
  440318:	ldp	x23, x24, [sp, #96]
  44031c:	ldp	x29, x30, [sp, #48]
  440320:	add	sp, sp, #0xc0
  440324:	ret
  440328:	ldr	x0, [x19, #40]
  44032c:	cbnz	x0, 4402e0 <ferror@plt+0x3d5b0>
  440330:	adrp	x0, 43d000 <ferror@plt+0x3a2d0>
  440334:	add	x0, x0, #0x108
  440338:	str	x0, [x19, #40]
  44033c:	b	4402e0 <ferror@plt+0x3d5b0>
  440340:	ldr	w0, [sp, #188]
  440344:	cbz	w0, 440370 <ferror@plt+0x3d640>
  440348:	add	x0, x19, #0x28
  44034c:	adrp	x1, 440000 <ferror@plt+0x3d2d0>
  440350:	add	x1, x1, #0x40
  440354:	stlr	x1, [x0]
  440358:	ldr	w0, [x19, #8]
  44035c:	cbz	w0, 4402e0 <ferror@plt+0x3d5b0>
  440360:	add	x19, x19, #0x18
  440364:	ldar	x0, [x19]
  440368:	str	x0, [x23]
  44036c:	b	4402e8 <ferror@plt+0x3d5b8>
  440370:	add	x0, x19, #0x28
  440374:	adrp	x1, 43d000 <ferror@plt+0x3a2d0>
  440378:	add	x1, x1, #0x108
  44037c:	ldxr	x2, [x0]
  440380:	cbnz	x2, 44038c <ferror@plt+0x3d65c>
  440384:	stlxr	w3, x1, [x0]
  440388:	cbnz	w3, 44037c <ferror@plt+0x3d64c>
  44038c:	dmb	ish
  440390:	b	440358 <ferror@plt+0x3d628>
  440394:	stp	x29, x30, [sp, #-80]!
  440398:	mov	x29, sp
  44039c:	stp	x19, x20, [sp, #16]
  4403a0:	stp	x21, x22, [sp, #32]
  4403a4:	stp	x23, x24, [sp, #48]
  4403a8:	str	x25, [sp, #64]
  4403ac:	mov	w22, w1
  4403b0:	mov	x20, x2
  4403b4:	mov	x19, x3
  4403b8:	mov	x23, x4
  4403bc:	mov	x24, x5
  4403c0:	mov	x21, x6
  4403c4:	bl	402900 <getpagesize@plt>
  4403c8:	sxtw	x0, w0
  4403cc:	udiv	x25, x20, x0
  4403d0:	msub	w25, w25, w0, w20
  4403d4:	sub	x19, x19, #0x1
  4403d8:	add	x3, x0, x25
  4403dc:	add	x19, x19, x3
  4403e0:	neg	x0, x0
  4403e4:	and	x19, x0, x19
  4403e8:	sub	x5, x20, x25
  4403ec:	mov	w4, w22
  4403f0:	mov	w3, #0x2                   	// #2
  4403f4:	mov	w2, #0x1                   	// #1
  4403f8:	mov	x1, x19
  4403fc:	mov	x0, #0x0                   	// #0
  440400:	bl	402a40 <mmap@plt>
  440404:	cmn	x0, #0x1
  440408:	b.eq	440438 <ferror@plt+0x3d708>  // b.none
  44040c:	add	x25, x0, x25
  440410:	str	x25, [x21]
  440414:	str	x0, [x21, #8]
  440418:	str	x19, [x21, #16]
  44041c:	mov	w0, #0x1                   	// #1
  440420:	ldp	x19, x20, [sp, #16]
  440424:	ldp	x21, x22, [sp, #32]
  440428:	ldp	x23, x24, [sp, #48]
  44042c:	ldr	x25, [sp, #64]
  440430:	ldp	x29, x30, [sp], #80
  440434:	ret
  440438:	bl	402c40 <__errno_location@plt>
  44043c:	ldr	w2, [x0]
  440440:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  440444:	add	x1, x1, #0x9a8
  440448:	mov	x0, x24
  44044c:	blr	x23
  440450:	mov	w0, #0x0                   	// #0
  440454:	b	440420 <ferror@plt+0x3d6f0>
  440458:	stp	x29, x30, [sp, #-32]!
  44045c:	mov	x29, sp
  440460:	stp	x19, x20, [sp, #16]
  440464:	mov	x4, x1
  440468:	mov	x19, x2
  44046c:	mov	x20, x3
  440470:	ldr	x1, [x1, #16]
  440474:	ldr	x0, [x4, #8]
  440478:	bl	402b00 <munmap@plt>
  44047c:	tbnz	w0, #31, 44048c <ferror@plt+0x3d75c>
  440480:	ldp	x19, x20, [sp, #16]
  440484:	ldp	x29, x30, [sp], #32
  440488:	ret
  44048c:	bl	402c40 <__errno_location@plt>
  440490:	ldr	w2, [x0]
  440494:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440498:	add	x1, x1, #0x5d0
  44049c:	mov	x0, x20
  4404a0:	blr	x19
  4404a4:	b	440480 <ferror@plt+0x3d750>
  4404a8:	cmp	w1, #0x4
  4404ac:	b.eq	440504 <ferror@plt+0x3d7d4>  // b.none
  4404b0:	b.gt	4404dc <ferror@plt+0x3d7ac>
  4404b4:	cmp	w1, #0x1
  4404b8:	b.eq	4404f8 <ferror@plt+0x3d7c8>  // b.none
  4404bc:	cmp	w1, #0x2
  4404c0:	b.ne	4404d4 <ferror@plt+0x3d7a4>  // b.any
  4404c4:	mov	x1, #0xffff                	// #65535
  4404c8:	cmp	x0, x1
  4404cc:	cset	w0, eq  // eq = none
  4404d0:	b	4404f4 <ferror@plt+0x3d7c4>
  4404d4:	mov	w0, #0x0                   	// #0
  4404d8:	b	4404f4 <ferror@plt+0x3d7c4>
  4404dc:	cmp	w1, #0x8
  4404e0:	b.ne	4404f0 <ferror@plt+0x3d7c0>  // b.any
  4404e4:	cmn	x0, #0x1
  4404e8:	cset	w0, eq  // eq = none
  4404ec:	b	4404f4 <ferror@plt+0x3d7c4>
  4404f0:	mov	w0, #0x0                   	// #0
  4404f4:	ret
  4404f8:	cmp	x0, #0xff
  4404fc:	cset	w0, eq  // eq = none
  440500:	b	4404f4 <ferror@plt+0x3d7c4>
  440504:	mov	x1, #0xffffffff            	// #4294967295
  440508:	cmp	x0, x1
  44050c:	cset	w0, eq  // eq = none
  440510:	b	4404f4 <ferror@plt+0x3d7c4>
  440514:	mov	x4, #0x0                   	// #0
  440518:	b	440520 <ferror@plt+0x3d7f0>
  44051c:	mov	x1, x3
  440520:	cmp	x1, x4
  440524:	b.ls	440558 <ferror@plt+0x3d828>  // b.plast
  440528:	add	x3, x1, x4
  44052c:	lsr	x3, x3, #1
  440530:	add	x7, x0, x3, lsl #3
  440534:	ldr	x5, [x0, x3, lsl #3]
  440538:	ldr	x6, [x5, #24]
  44053c:	cmp	x6, x2
  440540:	b.hi	44051c <ferror@plt+0x3d7ec>  // b.pmore
  440544:	ldr	x4, [x5, #32]
  440548:	cmp	x4, x2
  44054c:	b.hi	440560 <ferror@plt+0x3d830>  // b.pmore
  440550:	add	x4, x3, #0x1
  440554:	b	440520 <ferror@plt+0x3d7f0>
  440558:	mov	x0, #0x0                   	// #0
  44055c:	b	440564 <ferror@plt+0x3d834>
  440560:	ldr	x0, [x7]
  440564:	ret
  440568:	mov	x2, x0
  44056c:	ldr	x4, [x0]
  440570:	ldr	x3, [x1]
  440574:	mov	w0, #0xffffffff            	// #-1
  440578:	cmp	x4, x3
  44057c:	b.cc	4405c0 <ferror@plt+0x3d890>  // b.lo, b.ul, b.last
  440580:	mov	w0, #0x1                   	// #1
  440584:	b.hi	4405c0 <ferror@plt+0x3d890>  // b.pmore
  440588:	ldr	x4, [x2, #8]
  44058c:	ldr	x3, [x1, #8]
  440590:	cmp	x4, x3
  440594:	b.cc	4405c0 <ferror@plt+0x3d890>  // b.lo, b.ul, b.last
  440598:	mov	w0, #0xffffffff            	// #-1
  44059c:	b.hi	4405c0 <ferror@plt+0x3d890>  // b.pmore
  4405a0:	ldr	x0, [x2, #16]
  4405a4:	ldr	x2, [x0, #56]
  4405a8:	ldr	x0, [x1, #16]
  4405ac:	ldr	x1, [x0, #56]
  4405b0:	mov	w0, #0xffffffff            	// #-1
  4405b4:	cmp	x2, x1
  4405b8:	b.lt	4405c0 <ferror@plt+0x3d890>  // b.tstop
  4405bc:	cset	w0, gt
  4405c0:	ret
  4405c4:	mov	x2, x0
  4405c8:	ldr	x4, [x0]
  4405cc:	ldr	x3, [x1]
  4405d0:	mov	w0, #0xffffffff            	// #-1
  4405d4:	cmp	x4, x3
  4405d8:	b.cc	4405fc <ferror@plt+0x3d8cc>  // b.lo, b.ul, b.last
  4405dc:	mov	w0, #0x1                   	// #1
  4405e0:	b.hi	4405fc <ferror@plt+0x3d8cc>  // b.pmore
  4405e4:	ldr	w2, [x2, #20]
  4405e8:	ldr	w1, [x1, #20]
  4405ec:	mov	w0, #0xffffffff            	// #-1
  4405f0:	cmp	w2, w1
  4405f4:	b.lt	4405fc <ferror@plt+0x3d8cc>  // b.tstop
  4405f8:	cset	w0, gt
  4405fc:	ret
  440600:	ldr	x2, [x0]
  440604:	ldr	x0, [x1]
  440608:	cmp	x2, x0
  44060c:	b.cc	440618 <ferror@plt+0x3d8e8>  // b.lo, b.ul, b.last
  440610:	cset	w0, hi  // hi = pmore
  440614:	ret
  440618:	mov	w0, #0xffffffff            	// #-1
  44061c:	b	440614 <ferror@plt+0x3d8e4>
  440620:	ldr	x7, [x1, #32]
  440624:	cbz	x7, 4406c0 <ferror@plt+0x3d990>
  440628:	stp	x29, x30, [sp, #-64]!
  44062c:	mov	x29, sp
  440630:	stp	x19, x20, [sp, #16]
  440634:	stp	x21, x22, [sp, #32]
  440638:	stp	x23, x24, [sp, #48]
  44063c:	mov	x19, x0
  440640:	mov	x22, x2
  440644:	mov	x23, x3
  440648:	mov	x20, x4
  44064c:	mov	x21, x5
  440650:	ldr	x2, [x1, #24]
  440654:	mov	x4, x7
  440658:	mov	x3, #0x0                   	// #0
  44065c:	b	440664 <ferror@plt+0x3d934>
  440660:	mov	x4, x0
  440664:	cmp	x4, x3
  440668:	b.ls	4406a8 <ferror@plt+0x3d978>  // b.plast
  44066c:	add	x1, x4, x3
  440670:	lsr	x0, x1, #1
  440674:	and	x1, x1, #0xfffffffffffffffe
  440678:	add	x1, x1, x0
  44067c:	lsl	x6, x1, #3
  440680:	mov	x5, x6
  440684:	add	x6, x2, x6
  440688:	ldr	x1, [x2, x1, lsl #3]
  44068c:	cmp	x1, x19
  440690:	b.hi	440660 <ferror@plt+0x3d930>  // b.pmore
  440694:	ldr	x1, [x6, #8]
  440698:	cmp	x1, x19
  44069c:	b.hi	4406c8 <ferror@plt+0x3d998>  // b.pmore
  4406a0:	add	x3, x0, #0x1
  4406a4:	b	440664 <ferror@plt+0x3d934>
  4406a8:	mov	w0, #0x0                   	// #0
  4406ac:	ldp	x19, x20, [sp, #16]
  4406b0:	ldp	x21, x22, [sp, #32]
  4406b4:	ldp	x23, x24, [sp, #48]
  4406b8:	ldp	x29, x30, [sp], #64
  4406bc:	ret
  4406c0:	mov	w0, #0x0                   	// #0
  4406c4:	ret
  4406c8:	asr	x0, x5, #3
  4406cc:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4406d0:	movk	x5, #0xaaab
  4406d4:	mul	x0, x0, x5
  4406d8:	add	x0, x0, #0x1
  4406dc:	mov	x1, x5
  4406e0:	cmp	x7, x0
  4406e4:	b.ls	44071c <ferror@plt+0x3d9ec>  // b.plast
  4406e8:	ldr	x0, [x6, #24]
  4406ec:	cmp	x0, x19
  4406f0:	b.hi	44071c <ferror@plt+0x3d9ec>  // b.pmore
  4406f4:	ldr	x0, [x6, #32]
  4406f8:	cmp	x0, x19
  4406fc:	b.ls	44071c <ferror@plt+0x3d9ec>  // b.plast
  440700:	add	x6, x6, #0x18
  440704:	sub	x0, x6, x2
  440708:	asr	x0, x0, #3
  44070c:	mul	x0, x0, x1
  440710:	add	x0, x0, #0x1
  440714:	cmp	x7, x0
  440718:	b.hi	4406e8 <ferror@plt+0x3d9b8>  // b.pmore
  44071c:	ldr	x24, [x6, #16]
  440720:	mov	x5, x21
  440724:	mov	x4, x20
  440728:	mov	x3, x23
  44072c:	mov	x2, x22
  440730:	mov	x1, x24
  440734:	mov	x0, x19
  440738:	bl	440620 <ferror@plt+0x3d8f0>
  44073c:	cbnz	w0, 4406ac <ferror@plt+0x3d97c>
  440740:	ldr	x4, [x24]
  440744:	ldr	w3, [x21]
  440748:	ldr	x2, [x20]
  44074c:	mov	x1, x19
  440750:	mov	x0, x23
  440754:	blr	x22
  440758:	cbnz	w0, 4406ac <ferror@plt+0x3d97c>
  44075c:	ldr	x1, [x24, #8]
  440760:	str	x1, [x20]
  440764:	ldr	w1, [x24, #16]
  440768:	str	w1, [x21]
  44076c:	b	4406ac <ferror@plt+0x3d97c>
  440770:	stp	x29, x30, [sp, #-112]!
  440774:	mov	x29, sp
  440778:	stp	x21, x22, [sp, #32]
  44077c:	stp	x23, x24, [sp, #48]
  440780:	stp	x25, x26, [sp, #64]
  440784:	mov	x24, x2
  440788:	mov	x25, x3
  44078c:	ldr	x21, [x0]
  440790:	sub	x2, x1, #0x1
  440794:	cmp	x2, x21
  440798:	b.cs	4407b8 <ferror@plt+0x3da88>  // b.hs, b.nlast
  44079c:	lsl	x2, x1, #5
  4407a0:	sub	x2, x2, #0x20
  4407a4:	ldr	x3, [x0, #8]
  4407a8:	add	x26, x3, x2
  4407ac:	ldr	x2, [x3, x2]
  4407b0:	cmp	x2, x1
  4407b4:	b.eq	440818 <ferror@plt+0x3dae8>  // b.none
  4407b8:	stp	x19, x20, [sp, #16]
  4407bc:	stp	xzr, xzr, [sp, #88]
  4407c0:	str	xzr, [sp, #104]
  4407c4:	str	x1, [sp, #80]
  4407c8:	ldr	x23, [x0, #8]
  4407cc:	mov	x20, #0x0                   	// #0
  4407d0:	add	x22, sp, #0x50
  4407d4:	b	4407dc <ferror@plt+0x3daac>
  4407d8:	mov	x21, x19
  4407dc:	cmp	x21, x20
  4407e0:	b.ls	440830 <ferror@plt+0x3db00>  // b.plast
  4407e4:	add	x19, x21, x20
  4407e8:	lsr	x19, x19, #1
  4407ec:	add	x26, x23, x19, lsl #5
  4407f0:	mov	x1, x26
  4407f4:	mov	x0, x22
  4407f8:	bl	440600 <ferror@plt+0x3d8d0>
  4407fc:	tbnz	w0, #31, 4407d8 <ferror@plt+0x3daa8>
  440800:	cmp	w0, #0x0
  440804:	b.le	440810 <ferror@plt+0x3dae0>
  440808:	add	x20, x19, #0x1
  44080c:	b	4407dc <ferror@plt+0x3daac>
  440810:	cbz	x26, 440830 <ferror@plt+0x3db00>
  440814:	ldp	x19, x20, [sp, #16]
  440818:	mov	x0, x26
  44081c:	ldp	x21, x22, [sp, #32]
  440820:	ldp	x23, x24, [sp, #48]
  440824:	ldp	x25, x26, [sp, #64]
  440828:	ldp	x29, x30, [sp], #112
  44082c:	ret
  440830:	mov	w2, #0x0                   	// #0
  440834:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440838:	add	x1, x1, #0x5d8
  44083c:	mov	x0, x25
  440840:	blr	x24
  440844:	mov	x26, #0x0                   	// #0
  440848:	ldp	x19, x20, [sp, #16]
  44084c:	b	440818 <ferror@plt+0x3dae8>
  440850:	stp	x29, x30, [sp, #-64]!
  440854:	mov	x29, sp
  440858:	stp	x19, x20, [sp, #16]
  44085c:	stp	x21, x22, [sp, #32]
  440860:	str	x23, [sp, #48]
  440864:	mov	x23, x1
  440868:	mov	x20, x2
  44086c:	mov	x21, x3
  440870:	mov	w22, w4
  440874:	mov	x2, x5
  440878:	mov	x3, x6
  44087c:	mov	x19, x7
  440880:	ldr	x7, [x7, #24]
  440884:	cbz	x7, 4408a8 <ferror@plt+0x3db78>
  440888:	add	x7, x7, x7, lsl #1
  44088c:	lsl	x7, x7, #3
  440890:	sub	x7, x7, #0x18
  440894:	ldr	x1, [x19]
  440898:	add	x4, x1, x7
  44089c:	ldr	x1, [x1, x7]
  4408a0:	cmp	x1, x20
  4408a4:	b.eq	4408fc <ferror@plt+0x3dbcc>  // b.none
  4408a8:	mov	x4, x19
  4408ac:	mov	x1, #0x18                  	// #24
  4408b0:	bl	43cb4c <ferror@plt+0x39e1c>
  4408b4:	cbz	x0, 44091c <ferror@plt+0x3dbec>
  4408b8:	ldr	x2, [x23, #16]
  4408bc:	add	x20, x2, x20
  4408c0:	str	x20, [x0]
  4408c4:	str	x21, [x0, #8]
  4408c8:	str	w22, [x0, #16]
  4408cc:	ldr	x1, [x19, #24]
  4408d0:	str	w1, [x0, #20]
  4408d4:	ldr	x0, [x19, #24]
  4408d8:	add	x0, x0, #0x1
  4408dc:	str	x0, [x19, #24]
  4408e0:	mov	w1, #0x1                   	// #1
  4408e4:	mov	w0, w1
  4408e8:	ldp	x19, x20, [sp, #16]
  4408ec:	ldp	x21, x22, [sp, #32]
  4408f0:	ldr	x23, [sp, #48]
  4408f4:	ldp	x29, x30, [sp], #64
  4408f8:	ret
  4408fc:	ldr	x1, [x4, #8]
  440900:	cmp	x1, x21
  440904:	b.ne	4408a8 <ferror@plt+0x3db78>  // b.any
  440908:	ldr	w4, [x4, #16]
  44090c:	mov	w1, #0x1                   	// #1
  440910:	cmp	w4, w22
  440914:	b.ne	4408a8 <ferror@plt+0x3db78>  // b.any
  440918:	b	4408e4 <ferror@plt+0x3dbb4>
  44091c:	mov	w1, #0x0                   	// #0
  440920:	b	4408e4 <ferror@plt+0x3dbb4>
  440924:	stp	x29, x30, [sp, #-48]!
  440928:	mov	x29, sp
  44092c:	stp	x19, x20, [sp, #16]
  440930:	stp	x21, x22, [sp, #32]
  440934:	mov	x22, x2
  440938:	mov	x2, x5
  44093c:	mov	x19, x7
  440940:	ldr	x21, [x1, #16]
  440944:	add	x20, x21, x3
  440948:	add	x21, x21, x4
  44094c:	ldr	x1, [x7, #24]
  440950:	cbz	x1, 44098c <ferror@plt+0x3dc5c>
  440954:	add	x1, x1, x1, lsl #1
  440958:	lsl	x1, x1, #3
  44095c:	sub	x1, x1, #0x18
  440960:	ldr	x3, [x7]
  440964:	add	x1, x3, x1
  440968:	ldr	x3, [x1, #8]
  44096c:	cmp	x3, x20
  440970:	b.eq	440980 <ferror@plt+0x3dc50>  // b.none
  440974:	add	x4, x3, #0x1
  440978:	cmp	x4, x20
  44097c:	b.ne	44098c <ferror@plt+0x3dc5c>  // b.any
  440980:	ldr	x4, [x1, #16]
  440984:	cmp	x4, x22
  440988:	b.eq	4409cc <ferror@plt+0x3dc9c>  // b.none
  44098c:	mov	x4, x19
  440990:	mov	x3, x6
  440994:	mov	x1, #0x18                  	// #24
  440998:	bl	43cb4c <ferror@plt+0x39e1c>
  44099c:	cbz	x0, 4409e0 <ferror@plt+0x3dcb0>
  4409a0:	str	x20, [x0]
  4409a4:	str	x21, [x0, #8]
  4409a8:	str	x22, [x0, #16]
  4409ac:	ldr	x0, [x19, #24]
  4409b0:	add	x0, x0, #0x1
  4409b4:	str	x0, [x19, #24]
  4409b8:	mov	w0, #0x1                   	// #1
  4409bc:	ldp	x19, x20, [sp, #16]
  4409c0:	ldp	x21, x22, [sp, #32]
  4409c4:	ldp	x29, x30, [sp], #48
  4409c8:	ret
  4409cc:	mov	w0, #0x1                   	// #1
  4409d0:	cmp	x3, x21
  4409d4:	b.cs	4409bc <ferror@plt+0x3dc8c>  // b.hs, b.nlast
  4409d8:	str	x21, [x1, #8]
  4409dc:	b	4409bc <ferror@plt+0x3dc8c>
  4409e0:	mov	w0, #0x0                   	// #0
  4409e4:	b	4409bc <ferror@plt+0x3dc8c>
  4409e8:	stp	x29, x30, [sp, #-48]!
  4409ec:	mov	x29, sp
  4409f0:	stp	x19, x20, [sp, #16]
  4409f4:	stp	x21, x22, [sp, #32]
  4409f8:	mov	x19, x2
  4409fc:	mov	x2, x3
  440a00:	mov	x3, x4
  440a04:	mov	x20, x5
  440a08:	ldr	x21, [x19]
  440a0c:	add	x21, x1, x21
  440a10:	ldr	x22, [x19, #8]
  440a14:	add	x22, x1, x22
  440a18:	ldr	x1, [x5, #24]
  440a1c:	cbz	x1, 440a5c <ferror@plt+0x3dd2c>
  440a20:	add	x1, x1, x1, lsl #1
  440a24:	lsl	x1, x1, #3
  440a28:	sub	x1, x1, #0x18
  440a2c:	ldr	x4, [x5]
  440a30:	add	x1, x4, x1
  440a34:	ldr	x4, [x1, #8]
  440a38:	cmp	x21, x4
  440a3c:	b.eq	440a4c <ferror@plt+0x3dd1c>  // b.none
  440a40:	add	x5, x4, #0x1
  440a44:	cmp	x21, x5
  440a48:	b.ne	440a5c <ferror@plt+0x3dd2c>  // b.any
  440a4c:	ldr	x6, [x19, #16]
  440a50:	ldr	x5, [x1, #16]
  440a54:	cmp	x6, x5
  440a58:	b.eq	440aa4 <ferror@plt+0x3dd74>  // b.none
  440a5c:	mov	x4, x20
  440a60:	mov	x1, #0x18                  	// #24
  440a64:	bl	43cb4c <ferror@plt+0x39e1c>
  440a68:	cbz	x0, 440ab8 <ferror@plt+0x3dd88>
  440a6c:	str	x21, [x19]
  440a70:	str	x22, [x19, #8]
  440a74:	ldp	x2, x3, [x19]
  440a78:	stp	x2, x3, [x0]
  440a7c:	ldr	x1, [x19, #16]
  440a80:	str	x1, [x0, #16]
  440a84:	ldr	x0, [x20, #24]
  440a88:	add	x0, x0, #0x1
  440a8c:	str	x0, [x20, #24]
  440a90:	mov	w0, #0x1                   	// #1
  440a94:	ldp	x19, x20, [sp, #16]
  440a98:	ldp	x21, x22, [sp, #32]
  440a9c:	ldp	x29, x30, [sp], #48
  440aa0:	ret
  440aa4:	mov	w0, #0x1                   	// #1
  440aa8:	cmp	x22, x4
  440aac:	b.ls	440a94 <ferror@plt+0x3dd64>  // b.plast
  440ab0:	str	x22, [x1, #8]
  440ab4:	b	440a94 <ferror@plt+0x3dd64>
  440ab8:	mov	w0, #0x0                   	// #0
  440abc:	b	440a94 <ferror@plt+0x3dd64>
  440ac0:	stp	x29, x30, [sp, #-240]!
  440ac4:	mov	x29, sp
  440ac8:	stp	x19, x20, [sp, #16]
  440acc:	mov	x19, x0
  440ad0:	ldr	x5, [x0, #16]
  440ad4:	ldr	x0, [x0, #8]
  440ad8:	add	x20, sp, #0x28
  440adc:	sub	w5, w5, w0
  440ae0:	ldr	x4, [x19]
  440ae4:	mov	x3, x1
  440ae8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440aec:	add	x2, x2, #0x5f8
  440af0:	mov	x1, #0xc8                  	// #200
  440af4:	mov	x0, x20
  440af8:	bl	402780 <snprintf@plt>
  440afc:	ldr	x3, [x19, #40]
  440b00:	mov	w2, #0x0                   	// #0
  440b04:	mov	x1, x20
  440b08:	ldr	x0, [x19, #48]
  440b0c:	blr	x3
  440b10:	ldp	x19, x20, [sp, #16]
  440b14:	ldp	x29, x30, [sp], #240
  440b18:	ret
  440b1c:	stp	x29, x30, [sp, #-32]!
  440b20:	mov	x29, sp
  440b24:	str	x19, [sp, #16]
  440b28:	mov	x19, x0
  440b2c:	ldr	x0, [x0, #24]
  440b30:	cmp	x1, x0
  440b34:	b.ls	440b64 <ferror@plt+0x3de34>  // b.plast
  440b38:	ldr	w0, [x19, #56]
  440b3c:	cbz	w0, 440b48 <ferror@plt+0x3de18>
  440b40:	mov	w0, #0x0                   	// #0
  440b44:	b	440b7c <ferror@plt+0x3de4c>
  440b48:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440b4c:	add	x1, x1, #0x608
  440b50:	mov	x0, x19
  440b54:	bl	440ac0 <ferror@plt+0x3dd90>
  440b58:	mov	w0, #0x1                   	// #1
  440b5c:	str	w0, [x19, #56]
  440b60:	b	440b40 <ferror@plt+0x3de10>
  440b64:	ldr	x2, [x19, #16]
  440b68:	add	x2, x2, x1
  440b6c:	str	x2, [x19, #16]
  440b70:	sub	x1, x0, x1
  440b74:	str	x1, [x19, #24]
  440b78:	mov	w0, #0x1                   	// #1
  440b7c:	ldr	x19, [sp, #16]
  440b80:	ldp	x29, x30, [sp], #32
  440b84:	ret
  440b88:	stp	x29, x30, [sp, #-32]!
  440b8c:	mov	x29, sp
  440b90:	stp	x19, x20, [sp, #16]
  440b94:	mov	x19, x0
  440b98:	ldr	x20, [x0, #16]
  440b9c:	mov	x1, #0x4                   	// #4
  440ba0:	bl	440b1c <ferror@plt+0x3ddec>
  440ba4:	cbz	w0, 440bf8 <ferror@plt+0x3dec8>
  440ba8:	ldr	w0, [x19, #32]
  440bac:	cbz	w0, 440bd4 <ferror@plt+0x3dea4>
  440bb0:	ldrb	w0, [x20]
  440bb4:	ldrb	w1, [x20, #1]
  440bb8:	lsl	w1, w1, #16
  440bbc:	orr	w0, w1, w0, lsl #24
  440bc0:	ldrb	w1, [x20, #2]
  440bc4:	ldrb	w2, [x20, #3]
  440bc8:	orr	w1, w2, w1, lsl #8
  440bcc:	orr	w0, w0, w1
  440bd0:	b	440bfc <ferror@plt+0x3decc>
  440bd4:	ldrb	w0, [x20, #3]
  440bd8:	ldrb	w1, [x20, #2]
  440bdc:	lsl	w1, w1, #16
  440be0:	orr	w0, w1, w0, lsl #24
  440be4:	ldrb	w1, [x20, #1]
  440be8:	ldrb	w2, [x20]
  440bec:	orr	w1, w2, w1, lsl #8
  440bf0:	orr	w0, w0, w1
  440bf4:	b	440bfc <ferror@plt+0x3decc>
  440bf8:	mov	w0, #0x0                   	// #0
  440bfc:	ldp	x19, x20, [sp, #16]
  440c00:	ldp	x29, x30, [sp], #32
  440c04:	ret
  440c08:	stp	x29, x30, [sp, #-32]!
  440c0c:	mov	x29, sp
  440c10:	stp	x19, x20, [sp, #16]
  440c14:	mov	x20, x0
  440c18:	ldr	x19, [x0, #16]
  440c1c:	mov	x1, #0x8                   	// #8
  440c20:	bl	440b1c <ferror@plt+0x3ddec>
  440c24:	cbz	w0, 440cc8 <ferror@plt+0x3df98>
  440c28:	ldr	w0, [x20, #32]
  440c2c:	cbz	w0, 440c7c <ferror@plt+0x3df4c>
  440c30:	ldrb	w0, [x19]
  440c34:	ldrb	w1, [x19, #1]
  440c38:	lsl	x1, x1, #48
  440c3c:	orr	x0, x1, x0, lsl #56
  440c40:	ldrb	w1, [x19, #2]
  440c44:	ldrb	w2, [x19, #3]
  440c48:	lsl	x2, x2, #32
  440c4c:	orr	x1, x2, x1, lsl #40
  440c50:	orr	x0, x0, x1
  440c54:	ldrb	w1, [x19, #4]
  440c58:	ldrb	w2, [x19, #5]
  440c5c:	lsl	x2, x2, #16
  440c60:	orr	x1, x2, x1, lsl #24
  440c64:	orr	x0, x0, x1
  440c68:	ldrb	w1, [x19, #6]
  440c6c:	ldrb	w2, [x19, #7]
  440c70:	orr	x1, x2, x1, lsl #8
  440c74:	orr	x0, x0, x1
  440c78:	b	440ccc <ferror@plt+0x3df9c>
  440c7c:	ldrb	w0, [x19, #7]
  440c80:	ldrb	w1, [x19, #6]
  440c84:	lsl	x1, x1, #48
  440c88:	orr	x0, x1, x0, lsl #56
  440c8c:	ldrb	w1, [x19, #5]
  440c90:	ldrb	w2, [x19, #4]
  440c94:	lsl	x2, x2, #32
  440c98:	orr	x1, x2, x1, lsl #40
  440c9c:	orr	x0, x0, x1
  440ca0:	ldrb	w1, [x19, #3]
  440ca4:	ldrb	w2, [x19, #2]
  440ca8:	lsl	x2, x2, #16
  440cac:	orr	x1, x2, x1, lsl #24
  440cb0:	orr	x0, x0, x1
  440cb4:	ldrb	w1, [x19, #1]
  440cb8:	ldrb	w2, [x19]
  440cbc:	orr	x1, x2, x1, lsl #8
  440cc0:	orr	x0, x0, x1
  440cc4:	b	440ccc <ferror@plt+0x3df9c>
  440cc8:	mov	x0, #0x0                   	// #0
  440ccc:	ldp	x19, x20, [sp, #16]
  440cd0:	ldp	x29, x30, [sp], #32
  440cd4:	ret
  440cd8:	stp	x29, x30, [sp, #-16]!
  440cdc:	mov	x29, sp
  440ce0:	cbz	w1, 440cf0 <ferror@plt+0x3dfc0>
  440ce4:	bl	440c08 <ferror@plt+0x3ded8>
  440ce8:	ldp	x29, x30, [sp], #16
  440cec:	ret
  440cf0:	bl	440b88 <ferror@plt+0x3de58>
  440cf4:	mov	w0, w0
  440cf8:	b	440ce8 <ferror@plt+0x3dfb8>
  440cfc:	stp	x29, x30, [sp, #-32]!
  440d00:	mov	x29, sp
  440d04:	stp	x19, x20, [sp, #16]
  440d08:	mov	x19, x0
  440d0c:	ldr	x20, [x0, #16]
  440d10:	mov	x1, #0x2                   	// #2
  440d14:	bl	440b1c <ferror@plt+0x3ddec>
  440d18:	cbz	w0, 440d44 <ferror@plt+0x3e014>
  440d1c:	ldr	w0, [x19, #32]
  440d20:	cbz	w0, 440d34 <ferror@plt+0x3e004>
  440d24:	ldrb	w1, [x20]
  440d28:	ldrb	w0, [x20, #1]
  440d2c:	bfi	w0, w1, #8, #24
  440d30:	b	440d48 <ferror@plt+0x3e018>
  440d34:	ldrb	w1, [x20, #1]
  440d38:	ldrb	w0, [x20]
  440d3c:	bfi	w0, w1, #8, #24
  440d40:	b	440d48 <ferror@plt+0x3e018>
  440d44:	mov	w0, #0x0                   	// #0
  440d48:	ldp	x19, x20, [sp, #16]
  440d4c:	ldp	x29, x30, [sp], #32
  440d50:	ret
  440d54:	stp	x29, x30, [sp, #-32]!
  440d58:	mov	x29, sp
  440d5c:	str	x19, [sp, #16]
  440d60:	ldr	x19, [x0, #16]
  440d64:	mov	x1, #0x1                   	// #1
  440d68:	bl	440b1c <ferror@plt+0x3ddec>
  440d6c:	cbz	w0, 440d80 <ferror@plt+0x3e050>
  440d70:	ldrb	w0, [x19]
  440d74:	ldr	x19, [sp, #16]
  440d78:	ldp	x29, x30, [sp], #32
  440d7c:	ret
  440d80:	mov	w0, #0x0                   	// #0
  440d84:	b	440d74 <ferror@plt+0x3e044>
  440d88:	stp	x29, x30, [sp, #-80]!
  440d8c:	mov	x29, sp
  440d90:	stp	x19, x20, [sp, #16]
  440d94:	stp	x21, x22, [sp, #32]
  440d98:	stp	x23, x24, [sp, #48]
  440d9c:	stp	x25, x26, [sp, #64]
  440da0:	mov	x20, x0
  440da4:	mov	w24, #0x0                   	// #0
  440da8:	mov	w19, #0x0                   	// #0
  440dac:	mov	x22, #0x0                   	// #0
  440db0:	mov	x23, #0x1                   	// #1
  440db4:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440db8:	add	x25, x25, #0x618
  440dbc:	mov	w26, #0x1                   	// #1
  440dc0:	b	440dd0 <ferror@plt+0x3e0a0>
  440dc4:	cbz	w24, 440e00 <ferror@plt+0x3e0d0>
  440dc8:	add	w19, w19, #0x7
  440dcc:	tbz	w21, #7, 440e18 <ferror@plt+0x3e0e8>
  440dd0:	ldr	x21, [x20, #16]
  440dd4:	mov	x1, x23
  440dd8:	mov	x0, x20
  440ddc:	bl	440b1c <ferror@plt+0x3ddec>
  440de0:	cbz	w0, 440e14 <ferror@plt+0x3e0e4>
  440de4:	ldrb	w21, [x21]
  440de8:	cmp	w19, #0x3f
  440dec:	b.hi	440dc4 <ferror@plt+0x3e094>  // b.pmore
  440df0:	and	x0, x21, #0x7f
  440df4:	lsl	x0, x0, x19
  440df8:	orr	x22, x22, x0
  440dfc:	b	440dc8 <ferror@plt+0x3e098>
  440e00:	mov	x1, x25
  440e04:	mov	x0, x20
  440e08:	bl	440ac0 <ferror@plt+0x3dd90>
  440e0c:	mov	w24, w26
  440e10:	b	440dc8 <ferror@plt+0x3e098>
  440e14:	mov	x22, #0x0                   	// #0
  440e18:	mov	x0, x22
  440e1c:	ldp	x19, x20, [sp, #16]
  440e20:	ldp	x21, x22, [sp, #32]
  440e24:	ldp	x23, x24, [sp, #48]
  440e28:	ldp	x25, x26, [sp, #64]
  440e2c:	ldp	x29, x30, [sp], #80
  440e30:	ret
  440e34:	stp	x29, x30, [sp, #-16]!
  440e38:	mov	x29, sp
  440e3c:	cmp	w1, #0x4
  440e40:	b.eq	440e84 <ferror@plt+0x3e154>  // b.none
  440e44:	b.gt	440e64 <ferror@plt+0x3e134>
  440e48:	cmp	w1, #0x1
  440e4c:	b.eq	440e74 <ferror@plt+0x3e144>  // b.none
  440e50:	cmp	w1, #0x2
  440e54:	b.ne	440e90 <ferror@plt+0x3e160>  // b.any
  440e58:	bl	440cfc <ferror@plt+0x3dfcc>
  440e5c:	and	x0, x0, #0xffff
  440e60:	b	440e7c <ferror@plt+0x3e14c>
  440e64:	cmp	w1, #0x8
  440e68:	b.ne	440e90 <ferror@plt+0x3e160>  // b.any
  440e6c:	bl	440c08 <ferror@plt+0x3ded8>
  440e70:	b	440e7c <ferror@plt+0x3e14c>
  440e74:	bl	440d54 <ferror@plt+0x3e024>
  440e78:	and	x0, x0, #0xff
  440e7c:	ldp	x29, x30, [sp], #16
  440e80:	ret
  440e84:	bl	440b88 <ferror@plt+0x3de58>
  440e88:	mov	w0, w0
  440e8c:	b	440e7c <ferror@plt+0x3e14c>
  440e90:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440e94:	add	x1, x1, #0x638
  440e98:	bl	440ac0 <ferror@plt+0x3dd90>
  440e9c:	mov	x0, #0x0                   	// #0
  440ea0:	b	440e7c <ferror@plt+0x3e14c>
  440ea4:	stp	x29, x30, [sp, #-80]!
  440ea8:	mov	x29, sp
  440eac:	stp	x19, x20, [sp, #16]
  440eb0:	stp	x21, x22, [sp, #32]
  440eb4:	stp	x23, x24, [sp, #48]
  440eb8:	stp	x25, x26, [sp, #64]
  440ebc:	mov	x21, x0
  440ec0:	mov	w24, #0x0                   	// #0
  440ec4:	mov	w19, #0x0                   	// #0
  440ec8:	mov	x22, #0x0                   	// #0
  440ecc:	mov	x23, #0x1                   	// #1
  440ed0:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x27c60>
  440ed4:	add	x25, x25, #0x658
  440ed8:	mov	w26, #0x1                   	// #1
  440edc:	b	440eec <ferror@plt+0x3e1bc>
  440ee0:	cbz	w24, 440f1c <ferror@plt+0x3e1ec>
  440ee4:	add	w19, w19, #0x7
  440ee8:	tbz	w20, #7, 440f30 <ferror@plt+0x3e200>
  440eec:	ldr	x20, [x21, #16]
  440ef0:	mov	x1, x23
  440ef4:	mov	x0, x21
  440ef8:	bl	440b1c <ferror@plt+0x3ddec>
  440efc:	cbz	w0, 440f50 <ferror@plt+0x3e220>
  440f00:	ldrb	w20, [x20]
  440f04:	cmp	w19, #0x3f
  440f08:	b.hi	440ee0 <ferror@plt+0x3e1b0>  // b.pmore
  440f0c:	and	x0, x20, #0x7f
  440f10:	lsl	x0, x0, x19
  440f14:	orr	x22, x22, x0
  440f18:	b	440ee4 <ferror@plt+0x3e1b4>
  440f1c:	mov	x1, x25
  440f20:	mov	x0, x21
  440f24:	bl	440ac0 <ferror@plt+0x3dd90>
  440f28:	mov	w24, w26
  440f2c:	b	440ee4 <ferror@plt+0x3e1b4>
  440f30:	and	w20, w20, #0x40
  440f34:	cmp	w19, #0x3f
  440f38:	mov	x0, #0xffffffffffffffff    	// #-1
  440f3c:	lsl	x0, x0, x19
  440f40:	orr	x0, x22, x0
  440f44:	ccmp	w20, #0x0, #0x4, ls  // ls = plast
  440f48:	csel	x0, x0, x22, ne  // ne = any
  440f4c:	b	440f54 <ferror@plt+0x3e224>
  440f50:	mov	x0, #0x0                   	// #0
  440f54:	ldp	x19, x20, [sp, #16]
  440f58:	ldp	x21, x22, [sp, #32]
  440f5c:	ldp	x23, x24, [sp, #48]
  440f60:	ldp	x25, x26, [sp, #64]
  440f64:	ldp	x29, x30, [sp], #80
  440f68:	ret
  440f6c:	stp	x29, x30, [sp, #-32]!
  440f70:	mov	x29, sp
  440f74:	stp	x19, x20, [sp, #16]
  440f78:	mov	x19, x0
  440f7c:	ldr	x20, [x0, #16]
  440f80:	ldr	x1, [x0, #24]
  440f84:	mov	x0, x20
  440f88:	bl	4026d0 <strnlen@plt>
  440f8c:	add	x1, x0, #0x1
  440f90:	mov	x0, x19
  440f94:	bl	440b1c <ferror@plt+0x3ddec>
  440f98:	cmp	w0, #0x0
  440f9c:	csel	x0, x20, xzr, ne  // ne = any
  440fa0:	ldp	x19, x20, [sp, #16]
  440fa4:	ldp	x29, x30, [sp], #32
  440fa8:	ret
  440fac:	sub	sp, sp, #0x60
  440fb0:	stp	x29, x30, [sp, #16]
  440fb4:	add	x29, sp, #0x10
  440fb8:	stp	x19, x20, [sp, #32]
  440fbc:	stp	x21, x22, [sp, #48]
  440fc0:	mov	x19, x1
  440fc4:	mov	w21, w2
  440fc8:	mov	x22, x7
  440fcc:	ldr	x20, [sp, #96]
  440fd0:	stp	xzr, xzr, [x20]
  440fd4:	cmp	w0, #0x20
  440fd8:	b.hi	44101c <ferror@plt+0x3e2ec>  // b.pmore
  440fdc:	stp	x23, x24, [sp, #64]
  440fe0:	stp	x25, x26, [sp, #80]
  440fe4:	mov	w24, w3
  440fe8:	mov	w23, w4
  440fec:	mov	x26, x5
  440ff0:	mov	x25, x6
  440ff4:	cbz	w0, 44154c <ferror@plt+0x3e81c>
  440ff8:	sub	w0, w0, #0x1
  440ffc:	cmp	w0, #0x1f
  441000:	b.hi	44156c <ferror@plt+0x3e83c>  // b.pmore
  441004:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441008:	add	x1, x1, #0x8d4
  44100c:	ldrh	w0, [x1, w0, uxtw #1]
  441010:	adr	x1, 44101c <ferror@plt+0x3e2ec>
  441014:	add	x0, x1, w0, sxth #2
  441018:	br	x0
  44101c:	mov	w1, #0x1f20                	// #7968
  441020:	cmp	w0, w1
  441024:	b.eq	4414f8 <ferror@plt+0x3e7c8>  // b.none
  441028:	b.ls	441070 <ferror@plt+0x3e340>  // b.plast
  44102c:	mov	w1, #0x1f21                	// #7969
  441030:	cmp	w0, w1
  441034:	b.ne	441554 <ferror@plt+0x3e824>  // b.any
  441038:	mov	w1, w2
  44103c:	mov	x0, x19
  441040:	bl	440cd8 <ferror@plt+0x3dfa8>
  441044:	cbz	x22, 441528 <ferror@plt+0x3e7f8>
  441048:	ldr	x1, [x22, #112]
  44104c:	cmp	x1, x0
  441050:	b.ls	441534 <ferror@plt+0x3e804>  // b.plast
  441054:	mov	w1, #0x4                   	// #4
  441058:	str	w1, [x20]
  44105c:	ldr	x1, [x22, #104]
  441060:	add	x0, x1, x0
  441064:	str	x0, [x20, #8]
  441068:	mov	w0, #0x1                   	// #1
  44106c:	b	4410c8 <ferror@plt+0x3e398>
  441070:	mov	w1, #0x1f01                	// #7937
  441074:	cmp	w0, w1
  441078:	b.eq	4414dc <ferror@plt+0x3e7ac>  // b.none
  44107c:	mov	w1, #0x1f02                	// #7938
  441080:	cmp	w0, w1
  441084:	b.ne	441554 <ferror@plt+0x3e824>  // b.any
  441088:	mov	w0, #0x8                   	// #8
  44108c:	str	w0, [x20]
  441090:	mov	x0, x19
  441094:	bl	440d88 <ferror@plt+0x3e058>
  441098:	str	x0, [x20, #8]
  44109c:	mov	w0, #0x1                   	// #1
  4410a0:	b	4410c8 <ferror@plt+0x3e398>
  4410a4:	mov	w21, #0x1                   	// #1
  4410a8:	str	w21, [x20]
  4410ac:	mov	w1, w4
  4410b0:	mov	x0, x19
  4410b4:	bl	440e34 <ferror@plt+0x3e104>
  4410b8:	str	x0, [x20, #8]
  4410bc:	mov	w0, w21
  4410c0:	ldp	x23, x24, [sp, #64]
  4410c4:	ldp	x25, x26, [sp, #80]
  4410c8:	ldp	x19, x20, [sp, #32]
  4410cc:	ldp	x21, x22, [sp, #48]
  4410d0:	ldp	x29, x30, [sp, #16]
  4410d4:	add	sp, sp, #0x60
  4410d8:	ret
  4410dc:	mov	w0, #0xa                   	// #10
  4410e0:	str	w0, [x20]
  4410e4:	mov	x0, x19
  4410e8:	bl	440cfc <ferror@plt+0x3dfcc>
  4410ec:	and	x1, x0, #0xffff
  4410f0:	mov	x0, x19
  4410f4:	bl	440b1c <ferror@plt+0x3ddec>
  4410f8:	ldp	x23, x24, [sp, #64]
  4410fc:	ldp	x25, x26, [sp, #80]
  441100:	b	4410c8 <ferror@plt+0x3e398>
  441104:	mov	w0, #0xa                   	// #10
  441108:	str	w0, [x20]
  44110c:	mov	x0, x19
  441110:	bl	440b88 <ferror@plt+0x3de58>
  441114:	mov	w1, w0
  441118:	mov	x0, x19
  44111c:	bl	440b1c <ferror@plt+0x3ddec>
  441120:	ldp	x23, x24, [sp, #64]
  441124:	ldp	x25, x26, [sp, #80]
  441128:	b	4410c8 <ferror@plt+0x3e398>
  44112c:	mov	w0, #0x2                   	// #2
  441130:	str	w0, [x20]
  441134:	mov	x0, x19
  441138:	bl	440cfc <ferror@plt+0x3dfcc>
  44113c:	and	x0, x0, #0xffff
  441140:	str	x0, [x20, #8]
  441144:	mov	w0, #0x1                   	// #1
  441148:	ldp	x23, x24, [sp, #64]
  44114c:	ldp	x25, x26, [sp, #80]
  441150:	b	4410c8 <ferror@plt+0x3e398>
  441154:	mov	w0, #0x2                   	// #2
  441158:	str	w0, [x20]
  44115c:	mov	x0, x19
  441160:	bl	440b88 <ferror@plt+0x3de58>
  441164:	mov	w0, w0
  441168:	str	x0, [x20, #8]
  44116c:	mov	w0, #0x1                   	// #1
  441170:	ldp	x23, x24, [sp, #64]
  441174:	ldp	x25, x26, [sp, #80]
  441178:	b	4410c8 <ferror@plt+0x3e398>
  44117c:	mov	w0, #0x2                   	// #2
  441180:	str	w0, [x20]
  441184:	mov	x0, x19
  441188:	bl	440c08 <ferror@plt+0x3ded8>
  44118c:	str	x0, [x20, #8]
  441190:	mov	w0, #0x1                   	// #1
  441194:	ldp	x23, x24, [sp, #64]
  441198:	ldp	x25, x26, [sp, #80]
  44119c:	b	4410c8 <ferror@plt+0x3e398>
  4411a0:	mov	w0, #0x4                   	// #4
  4411a4:	str	w0, [x20]
  4411a8:	mov	x0, x19
  4411ac:	bl	440f6c <ferror@plt+0x3e23c>
  4411b0:	str	x0, [x20, #8]
  4411b4:	cmp	x0, #0x0
  4411b8:	cset	w0, ne  // ne = any
  4411bc:	ldp	x23, x24, [sp, #64]
  4411c0:	ldp	x25, x26, [sp, #80]
  4411c4:	b	4410c8 <ferror@plt+0x3e398>
  4411c8:	mov	w0, #0xa                   	// #10
  4411cc:	str	w0, [x20]
  4411d0:	mov	x0, x19
  4411d4:	bl	440d88 <ferror@plt+0x3e058>
  4411d8:	mov	x1, x0
  4411dc:	mov	x0, x19
  4411e0:	bl	440b1c <ferror@plt+0x3ddec>
  4411e4:	ldp	x23, x24, [sp, #64]
  4411e8:	ldp	x25, x26, [sp, #80]
  4411ec:	b	4410c8 <ferror@plt+0x3e398>
  4411f0:	mov	w0, #0xa                   	// #10
  4411f4:	str	w0, [x20]
  4411f8:	mov	x0, x19
  4411fc:	bl	440d54 <ferror@plt+0x3e024>
  441200:	and	x1, x0, #0xff
  441204:	mov	x0, x19
  441208:	bl	440b1c <ferror@plt+0x3ddec>
  44120c:	ldp	x23, x24, [sp, #64]
  441210:	ldp	x25, x26, [sp, #80]
  441214:	b	4410c8 <ferror@plt+0x3e398>
  441218:	mov	w0, #0x2                   	// #2
  44121c:	str	w0, [x20]
  441220:	mov	x0, x19
  441224:	bl	440d54 <ferror@plt+0x3e024>
  441228:	and	x0, x0, #0xff
  44122c:	str	x0, [x20, #8]
  441230:	mov	w0, #0x1                   	// #1
  441234:	ldp	x23, x24, [sp, #64]
  441238:	ldp	x25, x26, [sp, #80]
  44123c:	b	4410c8 <ferror@plt+0x3e398>
  441240:	mov	w0, #0x2                   	// #2
  441244:	str	w0, [x20]
  441248:	mov	x0, x19
  44124c:	bl	440d54 <ferror@plt+0x3e024>
  441250:	and	x0, x0, #0xff
  441254:	str	x0, [x20, #8]
  441258:	mov	w0, #0x1                   	// #1
  44125c:	ldp	x23, x24, [sp, #64]
  441260:	ldp	x25, x26, [sp, #80]
  441264:	b	4410c8 <ferror@plt+0x3e398>
  441268:	mov	w0, #0x3                   	// #3
  44126c:	str	w0, [x20]
  441270:	mov	x0, x19
  441274:	bl	440ea4 <ferror@plt+0x3e174>
  441278:	str	x0, [x20, #8]
  44127c:	mov	w0, #0x1                   	// #1
  441280:	ldp	x23, x24, [sp, #64]
  441284:	ldp	x25, x26, [sp, #80]
  441288:	b	4410c8 <ferror@plt+0x3e398>
  44128c:	mov	w1, w2
  441290:	mov	x0, x19
  441294:	bl	440cd8 <ferror@plt+0x3dfa8>
  441298:	cmp	x25, x0
  44129c:	b.ls	4412c0 <ferror@plt+0x3e590>  // b.plast
  4412a0:	mov	w1, #0x4                   	// #4
  4412a4:	str	w1, [x20]
  4412a8:	add	x0, x26, x0
  4412ac:	str	x0, [x20, #8]
  4412b0:	mov	w0, #0x1                   	// #1
  4412b4:	ldp	x23, x24, [sp, #64]
  4412b8:	ldp	x25, x26, [sp, #80]
  4412bc:	b	4410c8 <ferror@plt+0x3e398>
  4412c0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4412c4:	add	x1, x1, #0x680
  4412c8:	mov	x0, x19
  4412cc:	bl	440ac0 <ferror@plt+0x3dd90>
  4412d0:	mov	w0, #0x0                   	// #0
  4412d4:	ldp	x23, x24, [sp, #64]
  4412d8:	ldp	x25, x26, [sp, #80]
  4412dc:	b	4410c8 <ferror@plt+0x3e398>
  4412e0:	mov	w0, #0x2                   	// #2
  4412e4:	str	w0, [x20]
  4412e8:	mov	x0, x19
  4412ec:	bl	440d88 <ferror@plt+0x3e058>
  4412f0:	str	x0, [x20, #8]
  4412f4:	mov	w0, #0x1                   	// #1
  4412f8:	ldp	x23, x24, [sp, #64]
  4412fc:	ldp	x25, x26, [sp, #80]
  441300:	b	4410c8 <ferror@plt+0x3e398>
  441304:	mov	w0, #0x6                   	// #6
  441308:	str	w0, [x20]
  44130c:	cmp	w3, #0x2
  441310:	b.eq	441334 <ferror@plt+0x3e604>  // b.none
  441314:	mov	w1, w2
  441318:	mov	x0, x19
  44131c:	bl	440cd8 <ferror@plt+0x3dfa8>
  441320:	str	x0, [x20, #8]
  441324:	mov	w0, #0x1                   	// #1
  441328:	ldp	x23, x24, [sp, #64]
  44132c:	ldp	x25, x26, [sp, #80]
  441330:	b	4410c8 <ferror@plt+0x3e398>
  441334:	mov	w1, w4
  441338:	mov	x0, x19
  44133c:	bl	440e34 <ferror@plt+0x3e104>
  441340:	str	x0, [x20, #8]
  441344:	mov	w0, #0x1                   	// #1
  441348:	ldp	x23, x24, [sp, #64]
  44134c:	ldp	x25, x26, [sp, #80]
  441350:	b	4410c8 <ferror@plt+0x3e398>
  441354:	mov	w0, #0x5                   	// #5
  441358:	str	w0, [x20]
  44135c:	mov	x0, x19
  441360:	bl	440d54 <ferror@plt+0x3e024>
  441364:	and	x0, x0, #0xff
  441368:	str	x0, [x20, #8]
  44136c:	mov	w0, #0x1                   	// #1
  441370:	ldp	x23, x24, [sp, #64]
  441374:	ldp	x25, x26, [sp, #80]
  441378:	b	4410c8 <ferror@plt+0x3e398>
  44137c:	mov	w0, #0x5                   	// #5
  441380:	str	w0, [x20]
  441384:	mov	x0, x19
  441388:	bl	440cfc <ferror@plt+0x3dfcc>
  44138c:	and	x0, x0, #0xffff
  441390:	str	x0, [x20, #8]
  441394:	mov	w0, #0x1                   	// #1
  441398:	ldp	x23, x24, [sp, #64]
  44139c:	ldp	x25, x26, [sp, #80]
  4413a0:	b	4410c8 <ferror@plt+0x3e398>
  4413a4:	mov	w0, #0x5                   	// #5
  4413a8:	str	w0, [x20]
  4413ac:	mov	x0, x19
  4413b0:	bl	440b88 <ferror@plt+0x3de58>
  4413b4:	mov	w0, w0
  4413b8:	str	x0, [x20, #8]
  4413bc:	mov	w0, #0x1                   	// #1
  4413c0:	ldp	x23, x24, [sp, #64]
  4413c4:	ldp	x25, x26, [sp, #80]
  4413c8:	b	4410c8 <ferror@plt+0x3e398>
  4413cc:	mov	w0, #0x5                   	// #5
  4413d0:	str	w0, [x20]
  4413d4:	mov	x0, x19
  4413d8:	bl	440c08 <ferror@plt+0x3ded8>
  4413dc:	str	x0, [x20, #8]
  4413e0:	mov	w0, #0x1                   	// #1
  4413e4:	ldp	x23, x24, [sp, #64]
  4413e8:	ldp	x25, x26, [sp, #80]
  4413ec:	b	4410c8 <ferror@plt+0x3e398>
  4413f0:	mov	w0, #0x5                   	// #5
  4413f4:	str	w0, [x20]
  4413f8:	mov	x0, x19
  4413fc:	bl	440d88 <ferror@plt+0x3e058>
  441400:	str	x0, [x20, #8]
  441404:	mov	w0, #0x1                   	// #1
  441408:	ldp	x23, x24, [sp, #64]
  44140c:	ldp	x25, x26, [sp, #80]
  441410:	b	4410c8 <ferror@plt+0x3e398>
  441414:	mov	x0, x19
  441418:	bl	440d88 <ferror@plt+0x3e058>
  44141c:	str	x20, [sp]
  441420:	mov	x7, x22
  441424:	mov	x6, x25
  441428:	mov	x5, x26
  44142c:	mov	w4, w23
  441430:	mov	w3, w24
  441434:	mov	w2, w21
  441438:	mov	x1, x19
  44143c:	bl	440fac <ferror@plt+0x3e27c>
  441440:	ldp	x23, x24, [sp, #64]
  441444:	ldp	x25, x26, [sp, #80]
  441448:	b	4410c8 <ferror@plt+0x3e398>
  44144c:	mov	w0, #0x8                   	// #8
  441450:	str	w0, [x20]
  441454:	mov	w1, w2
  441458:	mov	x0, x19
  44145c:	bl	440cd8 <ferror@plt+0x3dfa8>
  441460:	str	x0, [x20, #8]
  441464:	mov	w0, #0x1                   	// #1
  441468:	ldp	x23, x24, [sp, #64]
  44146c:	ldp	x25, x26, [sp, #80]
  441470:	b	4410c8 <ferror@plt+0x3e398>
  441474:	mov	w0, #0xb                   	// #11
  441478:	str	w0, [x20]
  44147c:	mov	x0, x19
  441480:	bl	440d88 <ferror@plt+0x3e058>
  441484:	mov	x1, x0
  441488:	mov	x0, x19
  44148c:	bl	440b1c <ferror@plt+0x3ddec>
  441490:	ldp	x23, x24, [sp, #64]
  441494:	ldp	x25, x26, [sp, #80]
  441498:	b	4410c8 <ferror@plt+0x3e398>
  44149c:	mov	w0, #0x2                   	// #2
  4414a0:	str	w0, [x20]
  4414a4:	mov	x0, #0x1                   	// #1
  4414a8:	str	x0, [x20, #8]
  4414ac:	ldp	x23, x24, [sp, #64]
  4414b0:	ldp	x25, x26, [sp, #80]
  4414b4:	b	4410c8 <ferror@plt+0x3e398>
  4414b8:	mov	w0, #0x9                   	// #9
  4414bc:	str	w0, [x20]
  4414c0:	mov	x0, x19
  4414c4:	bl	440c08 <ferror@plt+0x3ded8>
  4414c8:	str	x0, [x20, #8]
  4414cc:	mov	w0, #0x1                   	// #1
  4414d0:	ldp	x23, x24, [sp, #64]
  4414d4:	ldp	x25, x26, [sp, #80]
  4414d8:	b	4410c8 <ferror@plt+0x3e398>
  4414dc:	mov	w0, #0x8                   	// #8
  4414e0:	str	w0, [x20]
  4414e4:	mov	x0, x19
  4414e8:	bl	440d88 <ferror@plt+0x3e058>
  4414ec:	str	x0, [x20, #8]
  4414f0:	mov	w0, #0x1                   	// #1
  4414f4:	b	4410c8 <ferror@plt+0x3e398>
  4414f8:	mov	w1, w2
  4414fc:	mov	x0, x19
  441500:	bl	440cd8 <ferror@plt+0x3dfa8>
  441504:	str	x0, [x20, #8]
  441508:	cbz	x22, 44151c <ferror@plt+0x3e7ec>
  44150c:	mov	w0, #0x7                   	// #7
  441510:	str	w0, [x20]
  441514:	mov	w0, #0x1                   	// #1
  441518:	b	4410c8 <ferror@plt+0x3e398>
  44151c:	str	wzr, [x20]
  441520:	mov	w0, #0x1                   	// #1
  441524:	b	4410c8 <ferror@plt+0x3e398>
  441528:	str	wzr, [x20]
  44152c:	mov	w0, #0x1                   	// #1
  441530:	b	4410c8 <ferror@plt+0x3e398>
  441534:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441538:	add	x1, x1, #0x6a0
  44153c:	mov	x0, x19
  441540:	bl	440ac0 <ferror@plt+0x3dd90>
  441544:	mov	w0, #0x0                   	// #0
  441548:	b	4410c8 <ferror@plt+0x3e398>
  44154c:	ldp	x23, x24, [sp, #64]
  441550:	ldp	x25, x26, [sp, #80]
  441554:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441558:	add	x1, x1, #0x6c8
  44155c:	mov	x0, x19
  441560:	bl	440ac0 <ferror@plt+0x3dd90>
  441564:	mov	w0, #0x0                   	// #0
  441568:	b	4410c8 <ferror@plt+0x3e398>
  44156c:	ldp	x23, x24, [sp, #64]
  441570:	ldp	x25, x26, [sp, #80]
  441574:	b	441554 <ferror@plt+0x3e824>
  441578:	ldp	x23, x24, [sp, #64]
  44157c:	ldp	x25, x26, [sp, #80]
  441580:	b	441554 <ferror@plt+0x3e824>
  441584:	sub	sp, sp, #0xd0
  441588:	stp	x29, x30, [sp, #16]
  44158c:	add	x29, sp, #0x10
  441590:	stp	x19, x20, [sp, #32]
  441594:	stp	x25, x26, [sp, #80]
  441598:	mov	x20, x0
  44159c:	mov	x26, x3
  4415a0:	str	x4, [sp, #120]
  4415a4:	ldr	x0, [x1, #16]
  4415a8:	cmp	x0, x2
  4415ac:	b.hi	44165c <ferror@plt+0x3e92c>  // b.pmore
  4415b0:	mov	x19, x1
  4415b4:	sub	x5, x2, x0
  4415b8:	ldr	x4, [x1, #8]
  4415bc:	cmp	x5, x4
  4415c0:	b.cs	44165c <ferror@plt+0x3e92c>  // b.hs, b.nlast
  4415c4:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4415c8:	add	x3, x3, #0xc50
  4415cc:	str	x3, [sp, #144]
  4415d0:	ldr	x1, [x20, #56]
  4415d4:	str	x1, [sp, #152]
  4415d8:	ldr	x1, [x19]
  4415dc:	add	x1, x1, x5
  4415e0:	str	x1, [sp, #160]
  4415e4:	add	x0, x0, x4
  4415e8:	sub	x0, x0, x2
  4415ec:	str	x0, [sp, #168]
  4415f0:	ldr	w0, [x20, #120]
  4415f4:	str	w0, [sp, #176]
  4415f8:	str	x26, [sp, #184]
  4415fc:	ldr	x0, [sp, #120]
  441600:	str	x0, [sp, #192]
  441604:	str	wzr, [sp, #200]
  441608:	add	x0, sp, #0x90
  44160c:	bl	440d88 <ferror@plt+0x3e058>
  441610:	mov	x1, x0
  441614:	cbz	x0, 44168c <ferror@plt+0x3e95c>
  441618:	stp	x23, x24, [sp, #64]
  44161c:	ldr	x3, [sp, #120]
  441620:	mov	x2, x26
  441624:	add	x0, x19, #0x58
  441628:	bl	440770 <ferror@plt+0x3da40>
  44162c:	mov	x23, x0
  441630:	cbz	x0, 4417a8 <ferror@plt+0x3ea78>
  441634:	stp	x21, x22, [sp, #48]
  441638:	ldr	x0, [x0, #16]
  44163c:	mov	x21, #0x0                   	// #0
  441640:	mov	x25, #0x0                   	// #0
  441644:	cbz	x0, 441798 <ferror@plt+0x3ea68>
  441648:	stp	x27, x28, [sp, #96]
  44164c:	add	x27, sp, #0x90
  441650:	add	x24, sp, #0x80
  441654:	mov	w28, #0x2007                	// #8199
  441658:	b	441704 <ferror@plt+0x3e9d4>
  44165c:	mov	w2, #0x0                   	// #0
  441660:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441664:	add	x1, x1, #0x6e0
  441668:	ldr	x0, [sp, #120]
  44166c:	blr	x26
  441670:	mov	x25, #0x0                   	// #0
  441674:	mov	x0, x25
  441678:	ldp	x19, x20, [sp, #32]
  44167c:	ldp	x25, x26, [sp, #80]
  441680:	ldp	x29, x30, [sp, #16]
  441684:	add	sp, sp, #0xd0
  441688:	ret
  44168c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441690:	add	x1, x1, #0x710
  441694:	add	x0, sp, #0x90
  441698:	bl	440ac0 <ferror@plt+0x3dd90>
  44169c:	mov	x25, #0x0                   	// #0
  4416a0:	b	441674 <ferror@plt+0x3e944>
  4416a4:	cmp	w0, #0x6e
  4416a8:	b.eq	4416b4 <ferror@plt+0x3e984>  // b.none
  4416ac:	cmp	w0, w28
  4416b0:	b.ne	4416f4 <ferror@plt+0x3e9c4>  // b.any
  4416b4:	ldr	w0, [sp, #128]
  4416b8:	cmp	w0, #0x4
  4416bc:	b.ne	4416f4 <ferror@plt+0x3e9c4>  // b.any
  4416c0:	ldr	x25, [sp, #136]
  4416c4:	ldp	x21, x22, [sp, #48]
  4416c8:	ldp	x23, x24, [sp, #64]
  4416cc:	ldp	x27, x28, [sp, #96]
  4416d0:	b	441674 <ferror@plt+0x3e944>
  4416d4:	ldr	x5, [sp, #120]
  4416d8:	mov	x4, x26
  4416dc:	mov	x3, x24
  4416e0:	mov	x1, x19
  4416e4:	mov	x0, x20
  4416e8:	bl	4417b4 <ferror@plt+0x3ea84>
  4416ec:	cmp	x0, #0x0
  4416f0:	csel	x25, x25, x0, eq  // eq = none
  4416f4:	add	x21, x21, #0x1
  4416f8:	ldr	x0, [x23, #16]
  4416fc:	cmp	x0, x21
  441700:	b.ls	441774 <ferror@plt+0x3ea44>  // b.plast
  441704:	lsl	x22, x21, #3
  441708:	ldr	x0, [x23, #24]
  44170c:	add	x0, x0, x22
  441710:	ldr	w0, [x0, #4]
  441714:	str	x24, [sp]
  441718:	ldr	x7, [x20, #8]
  44171c:	ldr	x6, [x20, #112]
  441720:	ldr	x5, [x20, #104]
  441724:	ldr	w4, [x19, #48]
  441728:	ldr	w3, [x19, #40]
  44172c:	ldr	w2, [x19, #44]
  441730:	mov	x1, x27
  441734:	bl	440fac <ferror@plt+0x3e27c>
  441738:	cbz	w0, 441784 <ferror@plt+0x3ea54>
  44173c:	ldr	x0, [x23, #24]
  441740:	add	x2, x0, x22
  441744:	ldr	w0, [x0, x22]
  441748:	cmp	w0, #0x47
  44174c:	b.eq	4416d4 <ferror@plt+0x3e9a4>  // b.none
  441750:	b.hi	4416a4 <ferror@plt+0x3e974>  // b.pmore
  441754:	cmp	w0, #0x3
  441758:	b.ne	4416f4 <ferror@plt+0x3e9c4>  // b.any
  44175c:	cbnz	x25, 4416f4 <ferror@plt+0x3e9c4>
  441760:	ldr	w0, [sp, #128]
  441764:	cmp	w0, #0x4
  441768:	ldr	x0, [sp, #136]
  44176c:	csel	x25, x0, x25, eq  // eq = none
  441770:	b	4416f4 <ferror@plt+0x3e9c4>
  441774:	ldp	x21, x22, [sp, #48]
  441778:	ldp	x23, x24, [sp, #64]
  44177c:	ldp	x27, x28, [sp, #96]
  441780:	b	441674 <ferror@plt+0x3e944>
  441784:	mov	x25, #0x0                   	// #0
  441788:	ldp	x21, x22, [sp, #48]
  44178c:	ldp	x23, x24, [sp, #64]
  441790:	ldp	x27, x28, [sp, #96]
  441794:	b	441674 <ferror@plt+0x3e944>
  441798:	mov	x25, #0x0                   	// #0
  44179c:	ldp	x21, x22, [sp, #48]
  4417a0:	ldp	x23, x24, [sp, #64]
  4417a4:	b	441674 <ferror@plt+0x3e944>
  4417a8:	mov	x25, x0
  4417ac:	ldp	x23, x24, [sp, #64]
  4417b0:	b	441674 <ferror@plt+0x3e944>
  4417b4:	stp	x29, x30, [sp, #-48]!
  4417b8:	mov	x29, sp
  4417bc:	stp	x19, x20, [sp, #16]
  4417c0:	stp	x21, x22, [sp, #32]
  4417c4:	mov	x19, x0
  4417c8:	mov	x6, x3
  4417cc:	mov	x20, x4
  4417d0:	mov	x21, x5
  4417d4:	ldr	w3, [x2]
  4417d8:	cmp	w3, #0x31
  4417dc:	b.eq	4417ec <ferror@plt+0x3eabc>  // b.none
  4417e0:	mov	x0, #0x0                   	// #0
  4417e4:	cmp	w3, #0x47
  4417e8:	b.ne	44181c <ferror@plt+0x3eaec>  // b.any
  4417ec:	ldr	w0, [x2, #4]
  4417f0:	cmp	w0, #0x20
  4417f4:	b.eq	4418b8 <ferror@plt+0x3eb88>  // b.none
  4417f8:	ldr	w2, [x6]
  4417fc:	cmp	w2, #0x6
  441800:	b.eq	44182c <ferror@plt+0x3eafc>  // b.none
  441804:	cmp	w2, #0x2
  441808:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  44180c:	b.eq	441864 <ferror@plt+0x3eb34>  // b.none
  441810:	mov	x0, #0x0                   	// #0
  441814:	cmp	w2, #0x7
  441818:	b.eq	44187c <ferror@plt+0x3eb4c>  // b.none
  44181c:	ldp	x19, x20, [sp, #16]
  441820:	ldp	x21, x22, [sp, #32]
  441824:	ldp	x29, x30, [sp], #48
  441828:	ret
  44182c:	ldr	x22, [x6, #8]
  441830:	mov	x2, x22
  441834:	ldr	x1, [x19, #48]
  441838:	ldr	x0, [x19, #40]
  44183c:	bl	440514 <ferror@plt+0x3d7e4>
  441840:	cbz	x0, 44181c <ferror@plt+0x3eaec>
  441844:	ldr	x2, [x0, #24]
  441848:	mov	x4, x21
  44184c:	mov	x3, x20
  441850:	sub	x2, x22, x2
  441854:	mov	x1, x0
  441858:	mov	x0, x19
  44185c:	bl	441584 <ferror@plt+0x3e854>
  441860:	b	44181c <ferror@plt+0x3eaec>
  441864:	mov	x4, x21
  441868:	mov	x3, x20
  44186c:	ldr	x2, [x6, #8]
  441870:	mov	x0, x19
  441874:	bl	441584 <ferror@plt+0x3e854>
  441878:	b	44181c <ferror@plt+0x3eaec>
  44187c:	ldr	x19, [x19, #8]
  441880:	ldr	x22, [x6, #8]
  441884:	mov	x2, x22
  441888:	ldr	x1, [x19, #48]
  44188c:	ldr	x0, [x19, #40]
  441890:	bl	440514 <ferror@plt+0x3d7e4>
  441894:	cbz	x0, 44181c <ferror@plt+0x3eaec>
  441898:	ldr	x2, [x0, #24]
  44189c:	mov	x4, x21
  4418a0:	mov	x3, x20
  4418a4:	sub	x2, x22, x2
  4418a8:	mov	x1, x0
  4418ac:	mov	x0, x19
  4418b0:	bl	441584 <ferror@plt+0x3e854>
  4418b4:	b	44181c <ferror@plt+0x3eaec>
  4418b8:	mov	x0, #0x0                   	// #0
  4418bc:	b	44181c <ferror@plt+0x3eaec>
  4418c0:	sub	sp, sp, #0x170
  4418c4:	stp	x29, x30, [sp, #48]
  4418c8:	add	x29, sp, #0x30
  4418cc:	stp	x19, x20, [sp, #64]
  4418d0:	stp	x21, x22, [sp, #80]
  4418d4:	stp	x23, x24, [sp, #96]
  4418d8:	stp	x25, x26, [sp, #112]
  4418dc:	stp	x27, x28, [sp, #128]
  4418e0:	str	x0, [sp, #192]
  4418e4:	str	x1, [sp, #200]
  4418e8:	mov	x24, x2
  4418ec:	str	x5, [sp, #224]
  4418f0:	str	x6, [sp, #184]
  4418f4:	str	w7, [sp, #236]
  4418f8:	ldr	x22, [sp, #392]
  4418fc:	add	x0, sp, #0x130
  441900:	str	x0, [sp, #216]
  441904:	mov	x25, x0
  441908:	add	x0, sp, #0xf0
  44190c:	str	x0, [sp, #208]
  441910:	str	x25, [sp, #176]
  441914:	mov	x28, x4
  441918:	mov	x26, x3
  44191c:	ldr	x27, [sp, #368]
  441920:	ldr	x0, [x24, #24]
  441924:	cbz	x0, 441d1c <ferror@plt+0x3efec>
  441928:	mov	x0, x24
  44192c:	bl	440d88 <ferror@plt+0x3e058>
  441930:	mov	x1, x0
  441934:	cbz	x0, 441d24 <ferror@plt+0x3eff4>
  441938:	ldr	x3, [sp, #384]
  44193c:	ldr	x2, [sp, #376]
  441940:	add	x0, x22, #0x58
  441944:	bl	440770 <ferror@plt+0x3da40>
  441948:	mov	x20, x0
  44194c:	cbz	x0, 441d2c <ferror@plt+0x3effc>
  441950:	ldr	x0, [sp, #408]
  441954:	cbz	x0, 441964 <ferror@plt+0x3ec34>
  441958:	ldr	w0, [x20, #8]
  44195c:	ldr	x1, [sp, #408]
  441960:	str	w0, [x1]
  441964:	ldr	x0, [x20, #16]
  441968:	cbz	x0, 441b94 <ferror@plt+0x3ee64>
  44196c:	mov	x21, #0x0                   	// #0
  441970:	str	wzr, [sp, #168]
  441974:	str	xzr, [sp, #160]
  441978:	str	wzr, [sp, #232]
  44197c:	mov	w23, #0x0                   	// #0
  441980:	str	xzr, [sp, #152]
  441984:	str	wzr, [sp, #172]
  441988:	str	xzr, [sp, #144]
  44198c:	b	441a4c <ferror@plt+0x3ed1c>
  441990:	cmp	w0, #0x3
  441994:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441998:	ldr	w0, [x20, #8]
  44199c:	cmp	w0, #0x11
  4419a0:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  4419a4:	ldr	w0, [sp, #304]
  4419a8:	cmp	w0, #0x4
  4419ac:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  4419b0:	ldr	x0, [sp, #312]
  4419b4:	str	x0, [x22, #64]
  4419b8:	b	441a3c <ferror@plt+0x3ed0c>
  4419bc:	cmp	w0, #0x1b
  4419c0:	b.eq	441ae4 <ferror@plt+0x3edb4>  // b.none
  4419c4:	cmp	w0, #0x55
  4419c8:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  4419cc:	ldr	w0, [sp, #304]
  4419d0:	cmp	w0, #0x2
  4419d4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4419d8:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  4419dc:	ldr	x0, [sp, #312]
  4419e0:	str	x0, [sp, #160]
  4419e4:	mov	w0, #0x1                   	// #1
  4419e8:	str	w0, [sp, #168]
  4419ec:	b	441a3c <ferror@plt+0x3ed0c>
  4419f0:	ldr	w0, [sp, #304]
  4419f4:	cmp	w0, #0x1
  4419f8:	b.eq	441a1c <ferror@plt+0x3ecec>  // b.none
  4419fc:	cmp	w0, #0x2
  441a00:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441a04:	ldr	x0, [sp, #312]
  441a08:	str	x0, [sp, #152]
  441a0c:	mov	w0, #0x1                   	// #1
  441a10:	str	w0, [sp, #232]
  441a14:	mov	w23, w0
  441a18:	b	441a3c <ferror@plt+0x3ed0c>
  441a1c:	ldr	x0, [sp, #312]
  441a20:	str	x0, [sp, #152]
  441a24:	mov	w0, #0x1                   	// #1
  441a28:	mov	w23, w0
  441a2c:	b	441a3c <ferror@plt+0x3ed0c>
  441a30:	ldr	w0, [x20, #8]
  441a34:	cmp	w0, #0x11
  441a38:	b.eq	441ac8 <ferror@plt+0x3ed98>  // b.none
  441a3c:	add	x21, x21, #0x1
  441a40:	ldr	x0, [x20, #16]
  441a44:	cmp	x0, x21
  441a48:	b.ls	441b08 <ferror@plt+0x3edd8>  // b.plast
  441a4c:	lsl	x19, x21, #3
  441a50:	ldr	x0, [x20, #24]
  441a54:	add	x0, x0, x19
  441a58:	ldr	w0, [x0, #4]
  441a5c:	str	x25, [sp]
  441a60:	mov	x7, x27
  441a64:	mov	x6, x28
  441a68:	mov	x5, x26
  441a6c:	ldr	w4, [x22, #48]
  441a70:	ldr	w3, [x22, #40]
  441a74:	ldr	w2, [x22, #44]
  441a78:	mov	x1, x24
  441a7c:	bl	440fac <ferror@plt+0x3e27c>
  441a80:	cbz	w0, 441d3c <ferror@plt+0x3f00c>
  441a84:	ldr	x0, [x20, #24]
  441a88:	ldr	w0, [x0, x19]
  441a8c:	cmp	w0, #0x12
  441a90:	b.eq	4419f0 <ferror@plt+0x3ecc0>  // b.none
  441a94:	b.hi	4419bc <ferror@plt+0x3ec8c>  // b.pmore
  441a98:	cmp	w0, #0x10
  441a9c:	b.eq	441a30 <ferror@plt+0x3ed00>  // b.none
  441aa0:	cmp	w0, #0x11
  441aa4:	b.ne	441990 <ferror@plt+0x3ec60>  // b.any
  441aa8:	ldr	w0, [sp, #304]
  441aac:	cmp	w0, #0x1
  441ab0:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441ab4:	ldr	x0, [sp, #312]
  441ab8:	str	x0, [sp, #144]
  441abc:	mov	w0, #0x1                   	// #1
  441ac0:	str	w0, [sp, #172]
  441ac4:	b	441a3c <ferror@plt+0x3ed0c>
  441ac8:	ldr	w0, [sp, #304]
  441acc:	cmp	w0, #0x2
  441ad0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  441ad4:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441ad8:	ldr	x0, [sp, #312]
  441adc:	str	x0, [x22, #56]
  441ae0:	b	441a3c <ferror@plt+0x3ed0c>
  441ae4:	ldr	w0, [x20, #8]
  441ae8:	cmp	w0, #0x11
  441aec:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441af0:	ldr	w0, [sp, #304]
  441af4:	cmp	w0, #0x4
  441af8:	b.ne	441a3c <ferror@plt+0x3ed0c>  // b.any
  441afc:	ldr	x0, [sp, #312]
  441b00:	str	x0, [x22, #72]
  441b04:	b	441a3c <ferror@plt+0x3ed0c>
  441b08:	ldr	w0, [x20, #8]
  441b0c:	cmp	w0, #0x2e
  441b10:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  441b14:	b.ne	441b94 <ferror@plt+0x3ee64>  // b.any
  441b18:	ldr	w0, [sp, #168]
  441b1c:	cbnz	w0, 441bf0 <ferror@plt+0x3eec0>
  441b20:	ldr	w0, [sp, #172]
  441b24:	cmp	w0, #0x0
  441b28:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  441b2c:	b.eq	441b94 <ferror@plt+0x3ee64>  // b.none
  441b30:	ldr	x1, [sp, #152]
  441b34:	ldr	x2, [sp, #144]
  441b38:	add	x0, x1, x2
  441b3c:	ldr	w3, [sp, #232]
  441b40:	cmp	w3, #0x0
  441b44:	csel	x0, x0, x1, ne  // ne = any
  441b48:	str	x2, [sp, #304]
  441b4c:	str	x0, [sp, #312]
  441b50:	str	x22, [sp, #320]
  441b54:	ldr	x0, [sp, #216]
  441b58:	ldp	x0, x1, [x0]
  441b5c:	ldr	x2, [sp, #208]
  441b60:	stp	x0, x1, [x2]
  441b64:	str	x22, [x2, #16]
  441b68:	ldr	x5, [sp, #400]
  441b6c:	ldr	x4, [sp, #384]
  441b70:	ldr	x3, [sp, #376]
  441b74:	ldr	x1, [sp, #200]
  441b78:	ldr	x0, [sp, #192]
  441b7c:	bl	4409e8 <ferror@plt+0x3dcb8>
  441b80:	mov	w19, w0
  441b84:	cbz	w0, 441d40 <ferror@plt+0x3f010>
  441b88:	ldr	w0, [x20, #8]
  441b8c:	cmp	w0, #0x11
  441b90:	b.eq	441d34 <ferror@plt+0x3f004>  // b.none
  441b94:	ldr	w0, [x20, #12]
  441b98:	cbz	w0, 441920 <ferror@plt+0x3ebf0>
  441b9c:	str	xzr, [sp, #40]
  441ba0:	ldr	x0, [sp, #400]
  441ba4:	str	x0, [sp, #32]
  441ba8:	str	x22, [sp, #24]
  441bac:	ldr	x0, [sp, #384]
  441bb0:	str	x0, [sp, #16]
  441bb4:	ldr	x0, [sp, #376]
  441bb8:	str	x0, [sp, #8]
  441bbc:	str	x27, [sp]
  441bc0:	ldr	w7, [sp, #236]
  441bc4:	ldr	x6, [sp, #184]
  441bc8:	ldr	x5, [sp, #224]
  441bcc:	mov	x4, x28
  441bd0:	mov	x3, x26
  441bd4:	mov	x2, x24
  441bd8:	ldr	x1, [sp, #200]
  441bdc:	ldr	x0, [sp, #192]
  441be0:	bl	4418c0 <ferror@plt+0x3eb90>
  441be4:	mov	w19, w0
  441be8:	cbnz	w0, 441920 <ferror@plt+0x3ebf0>
  441bec:	b	441d40 <ferror@plt+0x3f010>
  441bf0:	ldr	x0, [sp, #160]
  441bf4:	ldr	x1, [sp, #184]
  441bf8:	cmp	x0, x1
  441bfc:	b.cs	441c4c <ferror@plt+0x3ef1c>  // b.hs, b.nlast
  441c00:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  441c04:	add	x0, x0, #0xc80
  441c08:	str	x0, [sp, #304]
  441c0c:	ldr	x0, [sp, #224]
  441c10:	str	x0, [sp, #312]
  441c14:	ldr	x1, [sp, #160]
  441c18:	add	x0, x0, x1
  441c1c:	str	x0, [sp, #320]
  441c20:	ldr	x0, [sp, #184]
  441c24:	sub	x0, x0, x1
  441c28:	str	x0, [sp, #328]
  441c2c:	ldr	w0, [sp, #236]
  441c30:	str	w0, [sp, #336]
  441c34:	ldr	x0, [sp, #376]
  441c38:	str	x0, [sp, #344]
  441c3c:	ldr	x0, [sp, #384]
  441c40:	str	x0, [sp, #352]
  441c44:	str	wzr, [sp, #360]
  441c48:	b	441c70 <ferror@plt+0x3ef40>
  441c4c:	mov	w2, #0x0                   	// #0
  441c50:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  441c54:	add	x1, x1, #0x740
  441c58:	ldr	x0, [sp, #384]
  441c5c:	ldr	x3, [sp, #376]
  441c60:	blr	x3
  441c64:	mov	w19, #0x0                   	// #0
  441c68:	b	441d40 <ferror@plt+0x3f010>
  441c6c:	str	x23, [sp, #144]
  441c70:	ldr	w19, [sp, #360]
  441c74:	cbnz	w19, 441c64 <ferror@plt+0x3ef34>
  441c78:	ldr	w1, [x22, #48]
  441c7c:	ldr	x23, [sp, #176]
  441c80:	mov	x0, x23
  441c84:	bl	440e34 <ferror@plt+0x3e104>
  441c88:	mov	x21, x0
  441c8c:	ldr	w1, [x22, #48]
  441c90:	mov	x0, x23
  441c94:	bl	440e34 <ferror@plt+0x3e104>
  441c98:	mov	x23, x0
  441c9c:	orr	x0, x21, x0
  441ca0:	cbz	x0, 441d00 <ferror@plt+0x3efd0>
  441ca4:	ldr	w1, [x22, #48]
  441ca8:	mov	x0, x21
  441cac:	bl	4404a8 <ferror@plt+0x3d778>
  441cb0:	cbnz	w0, 441c6c <ferror@plt+0x3ef3c>
  441cb4:	ldr	x0, [sp, #144]
  441cb8:	add	x21, x21, x0
  441cbc:	str	x21, [sp, #280]
  441cc0:	add	x23, x23, x0
  441cc4:	str	x23, [sp, #288]
  441cc8:	str	x22, [sp, #296]
  441ccc:	add	x0, sp, #0x200
  441cd0:	ldp	x0, x1, [x0, #-232]
  441cd4:	ldr	x2, [sp, #208]
  441cd8:	stp	x0, x1, [x2]
  441cdc:	str	x22, [x2, #16]
  441ce0:	ldr	x5, [sp, #400]
  441ce4:	ldr	x4, [sp, #384]
  441ce8:	ldr	x3, [sp, #376]
  441cec:	ldr	x1, [sp, #200]
  441cf0:	ldr	x0, [sp, #192]
  441cf4:	bl	4409e8 <ferror@plt+0x3dcb8>
  441cf8:	cbnz	w0, 441c70 <ferror@plt+0x3ef40>
  441cfc:	b	441c64 <ferror@plt+0x3ef34>
  441d00:	ldr	w0, [sp, #360]
  441d04:	cbnz	w0, 441d40 <ferror@plt+0x3f010>
  441d08:	ldr	w0, [x20, #8]
  441d0c:	cmp	w0, #0x11
  441d10:	b.ne	441b94 <ferror@plt+0x3ee64>  // b.any
  441d14:	ldr	w19, [sp, #168]
  441d18:	b	441d40 <ferror@plt+0x3f010>
  441d1c:	mov	w19, #0x1                   	// #1
  441d20:	b	441d40 <ferror@plt+0x3f010>
  441d24:	mov	w19, #0x1                   	// #1
  441d28:	b	441d40 <ferror@plt+0x3f010>
  441d2c:	mov	w19, #0x0                   	// #0
  441d30:	b	441d40 <ferror@plt+0x3f010>
  441d34:	mov	w19, #0x1                   	// #1
  441d38:	b	441d40 <ferror@plt+0x3f010>
  441d3c:	mov	w19, w0
  441d40:	mov	w0, w19
  441d44:	ldp	x19, x20, [sp, #64]
  441d48:	ldp	x21, x22, [sp, #80]
  441d4c:	ldp	x23, x24, [sp, #96]
  441d50:	ldp	x25, x26, [sp, #112]
  441d54:	ldp	x27, x28, [sp, #128]
  441d58:	ldp	x29, x30, [sp, #48]
  441d5c:	add	sp, sp, #0x170
  441d60:	ret
  441d64:	ldr	x4, [x0]
  441d68:	ldr	x3, [x1]
  441d6c:	cmp	x4, x3
  441d70:	b.cc	441db8 <ferror@plt+0x3f088>  // b.lo, b.ul, b.last
  441d74:	mov	x2, x0
  441d78:	mov	w0, #0x1                   	// #1
  441d7c:	b.hi	441dc8 <ferror@plt+0x3f098>  // b.pmore
  441d80:	ldr	x4, [x2, #8]
  441d84:	ldr	x3, [x1, #8]
  441d88:	cmp	x4, x3
  441d8c:	b.cc	441dc8 <ferror@plt+0x3f098>  // b.lo, b.ul, b.last
  441d90:	b.hi	441dc0 <ferror@plt+0x3f090>  // b.pmore
  441d94:	stp	x29, x30, [sp, #-16]!
  441d98:	mov	x29, sp
  441d9c:	ldr	x1, [x1, #16]
  441da0:	ldr	x0, [x2, #16]
  441da4:	ldr	x1, [x1]
  441da8:	ldr	x0, [x0]
  441dac:	bl	402a20 <strcmp@plt>
  441db0:	ldp	x29, x30, [sp], #16
  441db4:	ret
  441db8:	mov	w0, #0xffffffff            	// #-1
  441dbc:	ret
  441dc0:	mov	w0, #0xffffffff            	// #-1
  441dc4:	ret
  441dc8:	ret
  441dcc:	sub	sp, sp, #0x120
  441dd0:	stp	x29, x30, [sp, #16]
  441dd4:	add	x29, sp, #0x10
  441dd8:	stp	x19, x20, [sp, #32]
  441ddc:	str	x0, [sp, #176]
  441de0:	str	x3, [sp, #184]
  441de4:	str	x5, [sp, #208]
  441de8:	str	x6, [sp, #112]
  441dec:	str	x7, [sp, #120]
  441df0:	ldr	x0, [x4, #24]
  441df4:	cbz	x0, 442480 <ferror@plt+0x3f750>
  441df8:	stp	x21, x22, [sp, #48]
  441dfc:	stp	x23, x24, [sp, #64]
  441e00:	stp	x25, x26, [sp, #80]
  441e04:	stp	x27, x28, [sp, #96]
  441e08:	mov	x23, x1
  441e0c:	mov	x21, x2
  441e10:	mov	x27, x4
  441e14:	add	x0, x2, #0x58
  441e18:	str	x0, [sp, #136]
  441e1c:	add	x28, sp, #0xe0
  441e20:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  441e24:	add	x0, x0, #0xd70
  441e28:	str	x0, [sp, #216]
  441e2c:	mov	x0, x27
  441e30:	bl	440d88 <ferror@plt+0x3e058>
  441e34:	mov	x1, x0
  441e38:	cbz	x0, 442488 <ferror@plt+0x3f758>
  441e3c:	ldr	x3, [sp, #120]
  441e40:	ldr	x2, [sp, #112]
  441e44:	ldr	x0, [sp, #136]
  441e48:	bl	440770 <ferror@plt+0x3da40>
  441e4c:	mov	x19, x0
  441e50:	cbz	x0, 4424a0 <ferror@plt+0x3f770>
  441e54:	ldr	w0, [x0, #8]
  441e58:	cmp	w0, #0x2e
  441e5c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  441e60:	cset	w25, eq  // eq = none
  441e64:	cmp	w0, #0x1d
  441e68:	csinc	w25, w25, wzr, ne  // ne = any
  441e6c:	b.eq	441ec4 <ferror@plt+0x3f194>  // b.none
  441e70:	cbnz	w25, 441eb8 <ferror@plt+0x3f188>
  441e74:	ldr	x0, [sp, #288]
  441e78:	str	x0, [sp, #192]
  441e7c:	mov	x22, #0x0                   	// #0
  441e80:	ldr	x26, [x19, #16]
  441e84:	cbz	x26, 442178 <ferror@plt+0x3f448>
  441e88:	str	wzr, [sp, #128]
  441e8c:	str	wzr, [sp, #148]
  441e90:	str	xzr, [sp, #160]
  441e94:	str	wzr, [sp, #200]
  441e98:	str	wzr, [sp, #168]
  441e9c:	str	xzr, [sp, #152]
  441ea0:	str	wzr, [sp, #172]
  441ea4:	mov	x26, #0x0                   	// #0
  441ea8:	mov	x20, #0x0                   	// #0
  441eac:	mov	w0, #0x1                   	// #1
  441eb0:	str	w0, [sp, #204]
  441eb4:	b	441f84 <ferror@plt+0x3f254>
  441eb8:	ldr	x0, [sp, #288]
  441ebc:	str	x0, [sp, #192]
  441ec0:	b	441ecc <ferror@plt+0x3f19c>
  441ec4:	ldr	x0, [sp, #296]
  441ec8:	str	x0, [sp, #192]
  441ecc:	ldr	x3, [sp, #120]
  441ed0:	ldr	x2, [sp, #112]
  441ed4:	mov	x1, #0x28                  	// #40
  441ed8:	ldr	x0, [sp, #176]
  441edc:	bl	43c9e0 <ferror@plt+0x39cb0>
  441ee0:	mov	x22, x0
  441ee4:	cbz	x0, 4424b8 <ferror@plt+0x3f788>
  441ee8:	stp	xzr, xzr, [x0]
  441eec:	stp	xzr, xzr, [x0, #16]
  441ef0:	str	xzr, [x0, #32]
  441ef4:	b	441e80 <ferror@plt+0x3f150>
  441ef8:	ldr	x0, [x19, #24]
  441efc:	ldr	w0, [x0, x24]
  441f00:	cmp	w0, #0x11
  441f04:	b.ne	441fc8 <ferror@plt+0x3f298>  // b.any
  441f08:	ldr	w0, [sp, #224]
  441f0c:	cmp	w0, #0x1
  441f10:	b.eq	441f28 <ferror@plt+0x3f1f8>  // b.none
  441f14:	cbz	w25, 441f74 <ferror@plt+0x3f244>
  441f18:	ldr	w0, [sp, #224]
  441f1c:	cmp	w0, #0x1
  441f20:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  441f24:	b	441f34 <ferror@plt+0x3f204>
  441f28:	ldr	x0, [sp, #232]
  441f2c:	str	x0, [sp, #184]
  441f30:	cbz	w25, 441f74 <ferror@plt+0x3f244>
  441f34:	ldr	x26, [sp, #232]
  441f38:	mov	w0, #0x1                   	// #1
  441f3c:	str	w0, [sp, #172]
  441f40:	b	441f74 <ferror@plt+0x3f244>
  441f44:	cmp	w0, #0x3
  441f48:	b.ne	441f6c <ferror@plt+0x3f23c>  // b.any
  441f4c:	ldr	x0, [x22]
  441f50:	cbnz	x0, 441f74 <ferror@plt+0x3f244>
  441f54:	ldr	w0, [sp, #224]
  441f58:	cmp	w0, #0x4
  441f5c:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  441f60:	ldr	x0, [sp, #232]
  441f64:	str	x0, [x22]
  441f68:	b	441f74 <ferror@plt+0x3f244>
  441f6c:	cmp	w0, #0x11
  441f70:	b.eq	441f18 <ferror@plt+0x3f1e8>  // b.none
  441f74:	add	x20, x20, #0x1
  441f78:	ldr	x0, [x19, #16]
  441f7c:	cmp	x0, x20
  441f80:	b.ls	442190 <ferror@plt+0x3f460>  // b.plast
  441f84:	lsl	x24, x20, #3
  441f88:	ldr	x0, [x19, #24]
  441f8c:	add	x0, x0, x24
  441f90:	ldr	w0, [x0, #4]
  441f94:	str	x28, [sp]
  441f98:	ldr	x7, [x23, #8]
  441f9c:	ldr	x6, [x23, #112]
  441fa0:	ldr	x5, [x23, #104]
  441fa4:	ldr	w4, [x21, #48]
  441fa8:	ldr	w3, [x21, #40]
  441fac:	ldr	w2, [x21, #44]
  441fb0:	mov	x1, x27
  441fb4:	bl	440fac <ferror@plt+0x3e27c>
  441fb8:	cbz	w0, 4420d0 <ferror@plt+0x3f3a0>
  441fbc:	ldr	w0, [x19, #8]
  441fc0:	cmp	w0, #0x11
  441fc4:	b.eq	441ef8 <ferror@plt+0x3f1c8>  // b.none
  441fc8:	cbz	w25, 441f74 <ferror@plt+0x3f244>
  441fcc:	ldr	x0, [x19, #24]
  441fd0:	add	x2, x0, x24
  441fd4:	ldr	w0, [x0, x24]
  441fd8:	cmp	w0, #0x55
  441fdc:	b.eq	442154 <ferror@plt+0x3f424>  // b.none
  441fe0:	b.hi	44202c <ferror@plt+0x3f2fc>  // b.pmore
  441fe4:	cmp	w0, #0x12
  441fe8:	b.eq	442110 <ferror@plt+0x3f3e0>  // b.none
  441fec:	b.ls	441f44 <ferror@plt+0x3f214>  // b.plast
  441ff0:	cmp	w0, #0x31
  441ff4:	b.eq	442000 <ferror@plt+0x3f2d0>  // b.none
  441ff8:	cmp	w0, #0x47
  441ffc:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442000:	ldr	w0, [sp, #128]
  442004:	cbnz	w0, 441f74 <ferror@plt+0x3f244>
  442008:	ldr	x5, [sp, #120]
  44200c:	ldr	x4, [sp, #112]
  442010:	mov	x3, x28
  442014:	mov	x1, x21
  442018:	mov	x0, x23
  44201c:	bl	4417b4 <ferror@plt+0x3ea84>
  442020:	cbz	x0, 441f74 <ferror@plt+0x3f244>
  442024:	str	x0, [x22]
  442028:	b	441f74 <ferror@plt+0x3f244>
  44202c:	cmp	w0, #0x59
  442030:	b.eq	4420f8 <ferror@plt+0x3f3c8>  // b.none
  442034:	b.ls	44206c <ferror@plt+0x3f33c>  // b.plast
  442038:	cmp	w0, #0x6e
  44203c:	b.eq	44204c <ferror@plt+0x3f31c>  // b.none
  442040:	mov	w1, #0x2007                	// #8199
  442044:	cmp	w0, w1
  442048:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  44204c:	ldr	w0, [sp, #224]
  442050:	cmp	w0, #0x4
  442054:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442058:	ldr	x0, [sp, #232]
  44205c:	str	x0, [x22]
  442060:	mov	w0, #0x1                   	// #1
  442064:	str	w0, [sp, #128]
  442068:	b	441f74 <ferror@plt+0x3f244>
  44206c:	cmp	w0, #0x58
  442070:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442074:	ldr	w0, [sp, #224]
  442078:	cmp	w0, #0x2
  44207c:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442080:	ldr	x0, [sp, #232]
  442084:	cbnz	x0, 442094 <ferror@plt+0x3f364>
  442088:	ldr	x0, [sp, #216]
  44208c:	str	x0, [x22, #8]
  442090:	b	441f74 <ferror@plt+0x3f244>
  442094:	sub	x1, x0, #0x1
  442098:	ldr	x2, [sp, #208]
  44209c:	ldr	x2, [x2, #48]
  4420a0:	cmp	x1, x2
  4420a4:	b.cs	4420c0 <ferror@plt+0x3f390>  // b.hs, b.nlast
  4420a8:	ldr	x1, [sp, #208]
  4420ac:	ldr	x1, [x1, #56]
  4420b0:	add	x0, x1, x0, lsl #3
  4420b4:	ldur	x0, [x0, #-8]
  4420b8:	str	x0, [x22, #8]
  4420bc:	b	441f74 <ferror@plt+0x3f244>
  4420c0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4420c4:	add	x1, x1, #0x760
  4420c8:	mov	x0, x27
  4420cc:	bl	440ac0 <ferror@plt+0x3dd90>
  4420d0:	mov	w20, #0x0                   	// #0
  4420d4:	ldp	x21, x22, [sp, #48]
  4420d8:	ldp	x23, x24, [sp, #64]
  4420dc:	ldp	x25, x26, [sp, #80]
  4420e0:	ldp	x27, x28, [sp, #96]
  4420e4:	mov	w0, w20
  4420e8:	ldp	x19, x20, [sp, #32]
  4420ec:	ldp	x29, x30, [sp, #16]
  4420f0:	add	sp, sp, #0x120
  4420f4:	ret
  4420f8:	ldr	w0, [sp, #224]
  4420fc:	cmp	w0, #0x2
  442100:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442104:	ldr	x0, [sp, #232]
  442108:	str	w0, [x22, #16]
  44210c:	b	441f74 <ferror@plt+0x3f244>
  442110:	ldr	w0, [sp, #224]
  442114:	cmp	w0, #0x1
  442118:	b.eq	442140 <ferror@plt+0x3f410>  // b.none
  44211c:	cmp	w0, #0x2
  442120:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442124:	ldr	x0, [sp, #232]
  442128:	str	x0, [sp, #152]
  44212c:	mov	w0, #0x1                   	// #1
  442130:	str	w0, [sp, #200]
  442134:	ldr	w0, [sp, #204]
  442138:	str	w0, [sp, #168]
  44213c:	b	441f74 <ferror@plt+0x3f244>
  442140:	ldr	x0, [sp, #232]
  442144:	str	x0, [sp, #152]
  442148:	mov	w0, #0x1                   	// #1
  44214c:	str	w0, [sp, #168]
  442150:	b	441f74 <ferror@plt+0x3f244>
  442154:	ldr	w0, [sp, #224]
  442158:	cmp	w0, #0x2
  44215c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  442160:	b.ne	441f74 <ferror@plt+0x3f244>  // b.any
  442164:	ldr	x0, [sp, #232]
  442168:	str	x0, [sp, #160]
  44216c:	mov	w0, #0x1                   	// #1
  442170:	str	w0, [sp, #148]
  442174:	b	441f74 <ferror@plt+0x3f244>
  442178:	str	x26, [sp, #160]
  44217c:	str	x26, [sp, #152]
  442180:	str	wzr, [sp, #148]
  442184:	str	wzr, [sp, #200]
  442188:	str	wzr, [sp, #168]
  44218c:	str	wzr, [sp, #172]
  442190:	cbz	w25, 4423f0 <ferror@plt+0x3f6c0>
  442194:	ldr	x0, [x22]
  442198:	cbz	x0, 442284 <ferror@plt+0x3f554>
  44219c:	ldr	w0, [sp, #148]
  4421a0:	cbnz	w0, 4422a0 <ferror@plt+0x3f570>
  4421a4:	ldr	w0, [sp, #172]
  4421a8:	cmp	w0, #0x0
  4421ac:	ldr	w0, [sp, #168]
  4421b0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4421b4:	b.eq	4423d8 <ferror@plt+0x3f6a8>  // b.none
  4421b8:	ldr	x0, [sp, #152]
  4421bc:	add	x4, x0, x26
  4421c0:	ldr	w1, [sp, #200]
  4421c4:	cmp	w1, #0x0
  4421c8:	ldr	x7, [sp, #192]
  4421cc:	ldr	x6, [sp, #120]
  4421d0:	ldr	x5, [sp, #112]
  4421d4:	csel	x4, x4, x0, ne  // ne = any
  4421d8:	mov	x3, x26
  4421dc:	mov	x2, x22
  4421e0:	mov	x1, x23
  4421e4:	ldr	x0, [sp, #176]
  4421e8:	bl	440924 <ferror@plt+0x3dbf4>
  4421ec:	mov	w20, w0
  4421f0:	cbz	w0, 4423c4 <ferror@plt+0x3f694>
  4421f4:	ldr	w0, [x19, #12]
  4421f8:	cbz	w0, 4423f8 <ferror@plt+0x3f6c8>
  4421fc:	stp	xzr, xzr, [x28]
  442200:	stp	xzr, xzr, [x28, #16]
  442204:	str	x28, [sp, #8]
  442208:	ldr	x0, [sp, #288]
  44220c:	str	x0, [sp]
  442210:	ldr	x7, [sp, #120]
  442214:	ldr	x6, [sp, #112]
  442218:	ldr	x5, [sp, #208]
  44221c:	mov	x4, x27
  442220:	ldr	x3, [sp, #184]
  442224:	mov	x2, x21
  442228:	mov	x1, x23
  44222c:	ldr	x0, [sp, #176]
  442230:	bl	441dcc <ferror@plt+0x3f09c>
  442234:	cbz	w0, 442468 <ferror@plt+0x3f738>
  442238:	ldr	x0, [sp, #248]
  44223c:	cbz	x0, 4423f8 <ferror@plt+0x3f6c8>
  442240:	ldr	x3, [sp, #120]
  442244:	ldr	x2, [sp, #112]
  442248:	mov	x1, x28
  44224c:	ldr	x0, [sp, #176]
  442250:	bl	43cc8c <ferror@plt+0x39f5c>
  442254:	cbz	w0, 442468 <ferror@plt+0x3f738>
  442258:	ldr	x19, [sp, #224]
  44225c:	adrp	x3, 441000 <ferror@plt+0x3e2d0>
  442260:	add	x3, x3, #0xd64
  442264:	mov	x2, #0x18                  	// #24
  442268:	ldr	x1, [sp, #248]
  44226c:	mov	x0, x19
  442270:	bl	44408c <ferror@plt+0x4135c>
  442274:	str	x19, [x22, #24]
  442278:	ldr	x0, [sp, #248]
  44227c:	str	x0, [x22, #32]
  442280:	b	4423f8 <ferror@plt+0x3f6c8>
  442284:	ldr	x4, [sp, #120]
  442288:	ldr	x3, [sp, #112]
  44228c:	mov	x2, #0x28                  	// #40
  442290:	mov	x1, x22
  442294:	ldr	x0, [sp, #176]
  442298:	bl	43c934 <ferror@plt+0x39c04>
  44229c:	b	4423f0 <ferror@plt+0x3f6c0>
  4422a0:	ldr	x0, [x23, #96]
  4422a4:	ldr	x1, [sp, #160]
  4422a8:	cmp	x0, x1
  4422ac:	b.ls	442304 <ferror@plt+0x3f5d4>  // b.plast
  4422b0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4422b4:	add	x1, x1, #0xc80
  4422b8:	str	x1, [sp, #224]
  4422bc:	ldr	x1, [x23, #88]
  4422c0:	str	x1, [sp, #232]
  4422c4:	ldr	x2, [sp, #160]
  4422c8:	add	x1, x1, x2
  4422cc:	str	x1, [sp, #240]
  4422d0:	sub	x0, x0, x2
  4422d4:	str	x0, [sp, #248]
  4422d8:	ldr	w0, [x23, #120]
  4422dc:	str	w0, [sp, #256]
  4422e0:	ldr	x0, [sp, #112]
  4422e4:	str	x0, [sp, #264]
  4422e8:	ldr	x0, [sp, #120]
  4422ec:	str	x0, [sp, #272]
  4422f0:	str	wzr, [sp, #280]
  4422f4:	ldr	x0, [sp, #184]
  4422f8:	str	x0, [sp, #128]
  4422fc:	mov	x26, x28
  442300:	b	442338 <ferror@plt+0x3f608>
  442304:	mov	w2, #0x0                   	// #0
  442308:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44230c:	add	x1, x1, #0x798
  442310:	ldr	x0, [sp, #120]
  442314:	ldr	x3, [sp, #112]
  442318:	blr	x3
  44231c:	mov	w20, #0x0                   	// #0
  442320:	ldp	x21, x22, [sp, #48]
  442324:	ldp	x23, x24, [sp, #64]
  442328:	ldp	x25, x26, [sp, #80]
  44232c:	ldp	x27, x28, [sp, #96]
  442330:	b	4420e4 <ferror@plt+0x3f3b4>
  442334:	str	x25, [sp, #128]
  442338:	ldr	w20, [sp, #280]
  44233c:	cbnz	w20, 44231c <ferror@plt+0x3f5ec>
  442340:	ldr	w1, [x21, #48]
  442344:	mov	x0, x26
  442348:	bl	440e34 <ferror@plt+0x3e104>
  44234c:	mov	x24, x0
  442350:	ldr	w1, [x21, #48]
  442354:	mov	x0, x26
  442358:	bl	440e34 <ferror@plt+0x3e104>
  44235c:	mov	x25, x0
  442360:	orr	x0, x24, x0
  442364:	cbz	x0, 4423a8 <ferror@plt+0x3f678>
  442368:	ldr	w1, [x21, #48]
  44236c:	mov	x0, x24
  442370:	bl	4404a8 <ferror@plt+0x3d778>
  442374:	cbnz	w0, 442334 <ferror@plt+0x3f604>
  442378:	ldr	x7, [sp, #192]
  44237c:	ldr	x6, [sp, #120]
  442380:	ldr	x5, [sp, #112]
  442384:	ldr	x0, [sp, #128]
  442388:	add	x4, x25, x0
  44238c:	add	x3, x24, x0
  442390:	mov	x2, x22
  442394:	mov	x1, x23
  442398:	ldr	x0, [sp, #176]
  44239c:	bl	440924 <ferror@plt+0x3dbf4>
  4423a0:	cbnz	w0, 442338 <ferror@plt+0x3f608>
  4423a4:	b	44231c <ferror@plt+0x3f5ec>
  4423a8:	ldr	w0, [sp, #280]
  4423ac:	cbz	w0, 4421f4 <ferror@plt+0x3f4c4>
  4423b0:	ldp	x21, x22, [sp, #48]
  4423b4:	ldp	x23, x24, [sp, #64]
  4423b8:	ldp	x25, x26, [sp, #80]
  4423bc:	ldp	x27, x28, [sp, #96]
  4423c0:	b	4420e4 <ferror@plt+0x3f3b4>
  4423c4:	ldp	x21, x22, [sp, #48]
  4423c8:	ldp	x23, x24, [sp, #64]
  4423cc:	ldp	x25, x26, [sp, #80]
  4423d0:	ldp	x27, x28, [sp, #96]
  4423d4:	b	4420e4 <ferror@plt+0x3f3b4>
  4423d8:	ldr	x4, [sp, #120]
  4423dc:	ldr	x3, [sp, #112]
  4423e0:	mov	x2, #0x28                  	// #40
  4423e4:	mov	x1, x22
  4423e8:	ldr	x0, [sp, #176]
  4423ec:	bl	43c934 <ferror@plt+0x39c04>
  4423f0:	ldr	w0, [x19, #12]
  4423f4:	cbnz	w0, 442418 <ferror@plt+0x3f6e8>
  4423f8:	ldr	x0, [x27, #24]
  4423fc:	cbnz	x0, 441e2c <ferror@plt+0x3f0fc>
  442400:	mov	w20, #0x1                   	// #1
  442404:	ldp	x21, x22, [sp, #48]
  442408:	ldp	x23, x24, [sp, #64]
  44240c:	ldp	x25, x26, [sp, #80]
  442410:	ldp	x27, x28, [sp, #96]
  442414:	b	4420e4 <ferror@plt+0x3f3b4>
  442418:	ldr	x0, [sp, #296]
  44241c:	str	x0, [sp, #8]
  442420:	ldr	x0, [sp, #288]
  442424:	str	x0, [sp]
  442428:	ldr	x7, [sp, #120]
  44242c:	ldr	x6, [sp, #112]
  442430:	ldr	x5, [sp, #208]
  442434:	mov	x4, x27
  442438:	ldr	x3, [sp, #184]
  44243c:	mov	x2, x21
  442440:	mov	x1, x23
  442444:	ldr	x0, [sp, #176]
  442448:	bl	441dcc <ferror@plt+0x3f09c>
  44244c:	mov	w20, w0
  442450:	cbnz	w0, 4423f8 <ferror@plt+0x3f6c8>
  442454:	ldp	x21, x22, [sp, #48]
  442458:	ldp	x23, x24, [sp, #64]
  44245c:	ldp	x25, x26, [sp, #80]
  442460:	ldp	x27, x28, [sp, #96]
  442464:	b	4420e4 <ferror@plt+0x3f3b4>
  442468:	mov	w20, #0x0                   	// #0
  44246c:	ldp	x21, x22, [sp, #48]
  442470:	ldp	x23, x24, [sp, #64]
  442474:	ldp	x25, x26, [sp, #80]
  442478:	ldp	x27, x28, [sp, #96]
  44247c:	b	4420e4 <ferror@plt+0x3f3b4>
  442480:	mov	w20, #0x1                   	// #1
  442484:	b	4420e4 <ferror@plt+0x3f3b4>
  442488:	mov	w20, #0x1                   	// #1
  44248c:	ldp	x21, x22, [sp, #48]
  442490:	ldp	x23, x24, [sp, #64]
  442494:	ldp	x25, x26, [sp, #80]
  442498:	ldp	x27, x28, [sp, #96]
  44249c:	b	4420e4 <ferror@plt+0x3f3b4>
  4424a0:	mov	w20, #0x0                   	// #0
  4424a4:	ldp	x21, x22, [sp, #48]
  4424a8:	ldp	x23, x24, [sp, #64]
  4424ac:	ldp	x25, x26, [sp, #80]
  4424b0:	ldp	x27, x28, [sp, #96]
  4424b4:	b	4420e4 <ferror@plt+0x3f3b4>
  4424b8:	mov	w20, #0x0                   	// #0
  4424bc:	ldp	x21, x22, [sp, #48]
  4424c0:	ldp	x23, x24, [sp, #64]
  4424c4:	ldp	x25, x26, [sp, #80]
  4424c8:	ldp	x27, x28, [sp, #96]
  4424cc:	b	4420e4 <ferror@plt+0x3f3b4>
  4424d0:	stp	x29, x30, [sp, #-48]!
  4424d4:	mov	x29, sp
  4424d8:	stp	x19, x20, [sp, #16]
  4424dc:	stp	x21, x22, [sp, #32]
  4424e0:	mov	x20, x0
  4424e4:	mov	x19, x1
  4424e8:	mov	x21, x2
  4424ec:	mov	x22, x3
  4424f0:	ldr	x2, [x1, #32]
  4424f4:	cbnz	x2, 442524 <ferror@plt+0x3f7f4>
  4424f8:	ldr	x2, [x19, #48]
  4424fc:	mov	x4, x22
  442500:	mov	x3, x21
  442504:	lsl	x2, x2, #3
  442508:	ldr	x1, [x19, #56]
  44250c:	mov	x0, x20
  442510:	bl	43c934 <ferror@plt+0x39c04>
  442514:	ldp	x19, x20, [sp, #16]
  442518:	ldp	x21, x22, [sp, #32]
  44251c:	ldp	x29, x30, [sp], #48
  442520:	ret
  442524:	mov	x4, x3
  442528:	mov	x3, x21
  44252c:	lsl	x2, x2, #3
  442530:	ldr	x1, [x1, #40]
  442534:	bl	43c934 <ferror@plt+0x39c04>
  442538:	b	4424f8 <ferror@plt+0x3f7c8>
  44253c:	stp	x29, x30, [sp, #-64]!
  442540:	mov	x29, sp
  442544:	stp	x19, x20, [sp, #16]
  442548:	stp	x21, x22, [sp, #32]
  44254c:	str	x23, [sp, #48]
  442550:	mov	x21, x0
  442554:	mov	x20, x1
  442558:	mov	x22, x2
  44255c:	mov	x23, x3
  442560:	ldr	x2, [x1]
  442564:	cbz	x2, 4425a0 <ferror@plt+0x3f870>
  442568:	mov	x19, #0x0                   	// #0
  44256c:	ldr	x5, [x20, #8]
  442570:	add	x5, x5, x19, lsl #5
  442574:	ldr	x2, [x5, #16]
  442578:	mov	x4, x23
  44257c:	mov	x3, x22
  442580:	lsl	x2, x2, #3
  442584:	ldr	x1, [x5, #24]
  442588:	mov	x0, x21
  44258c:	bl	43c934 <ferror@plt+0x39c04>
  442590:	add	x19, x19, #0x1
  442594:	ldr	x2, [x20]
  442598:	cmp	x2, x19
  44259c:	b.hi	44256c <ferror@plt+0x3f83c>  // b.pmore
  4425a0:	mov	x4, x23
  4425a4:	mov	x3, x22
  4425a8:	lsl	x2, x2, #5
  4425ac:	ldr	x1, [x20, #8]
  4425b0:	mov	x0, x21
  4425b4:	bl	43c934 <ferror@plt+0x39c04>
  4425b8:	str	xzr, [x20]
  4425bc:	str	xzr, [x20, #8]
  4425c0:	ldp	x19, x20, [sp, #16]
  4425c4:	ldp	x21, x22, [sp, #32]
  4425c8:	ldr	x23, [sp, #48]
  4425cc:	ldp	x29, x30, [sp], #64
  4425d0:	ret
  4425d4:	sub	sp, sp, #0x1d0
  4425d8:	stp	x29, x30, [sp, #16]
  4425dc:	add	x29, sp, #0x10
  4425e0:	stp	x23, x24, [sp, #64]
  4425e4:	stp	x25, x26, [sp, #80]
  4425e8:	mov	x24, x0
  4425ec:	str	x3, [sp, #120]
  4425f0:	str	x4, [sp, #128]
  4425f4:	mov	x26, x6
  4425f8:	mov	w0, #0x1                   	// #1
  4425fc:	str	w0, [x6]
  442600:	ldr	x6, [x1, #32]
  442604:	cbz	x6, 44267c <ferror@plt+0x3f94c>
  442608:	stp	x19, x20, [sp, #32]
  44260c:	stp	x27, x28, [sp, #96]
  442610:	mov	x23, x1
  442614:	mov	x20, x2
  442618:	mov	x27, x5
  44261c:	ldr	x2, [x1, #24]
  442620:	mov	x4, x6
  442624:	mov	x3, #0x0                   	// #0
  442628:	b	442630 <ferror@plt+0x3f900>
  44262c:	mov	x4, x7
  442630:	cmp	x4, x3
  442634:	b.ls	442674 <ferror@plt+0x3f944>  // b.plast
  442638:	add	x0, x4, x3
  44263c:	lsr	x7, x0, #1
  442640:	and	x0, x0, #0xfffffffffffffffe
  442644:	add	x0, x0, x7
  442648:	lsl	x1, x0, #3
  44264c:	mov	x5, x1
  442650:	add	x1, x2, x1
  442654:	ldr	x0, [x2, x0, lsl #3]
  442658:	cmp	x0, x20
  44265c:	b.hi	44262c <ferror@plt+0x3f8fc>  // b.pmore
  442660:	ldr	x0, [x1, #8]
  442664:	cmp	x0, x20
  442668:	b.hi	443654 <ferror@plt+0x40924>  // b.pmore
  44266c:	add	x3, x7, #0x1
  442670:	b	442630 <ferror@plt+0x3f900>
  442674:	ldp	x19, x20, [sp, #32]
  442678:	ldp	x27, x28, [sp, #96]
  44267c:	str	wzr, [x26]
  442680:	mov	w0, #0x0                   	// #0
  442684:	ldp	x23, x24, [sp, #64]
  442688:	ldp	x25, x26, [sp, #80]
  44268c:	ldp	x29, x30, [sp, #16]
  442690:	add	sp, sp, #0x1d0
  442694:	ret
  442698:	add	x0, x22, #0x68
  44269c:	ldar	x21, [x0]
  4426a0:	cmn	x21, #0x1
  4426a4:	b.ne	4436c0 <ferror@plt+0x40990>  // b.any
  4426a8:	sub	x19, x19, #0x18
  4426ac:	ldr	x22, [x19, #16]
  4426b0:	ldr	x21, [x22, #104]
  4426b4:	ldr	x0, [x23, #24]
  4426b8:	cmp	x0, x19
  4426bc:	b.cs	4436c0 <ferror@plt+0x40990>  // b.hs, b.nlast
  4426c0:	ldur	x0, [x19, #-24]
  4426c4:	cmp	x0, x20
  4426c8:	b.hi	4436c0 <ferror@plt+0x40990>  // b.pmore
  4426cc:	ldur	x0, [x19, #-16]
  4426d0:	cmp	x0, x20
  4426d4:	b.ls	4436c0 <ferror@plt+0x40990>  // b.plast
  4426d8:	ldr	w0, [x24, #8]
  4426dc:	cbz	w0, 4426a0 <ferror@plt+0x3f970>
  4426e0:	b	442698 <ferror@plt+0x3f968>
  4426e4:	add	x0, x22, #0x68
  4426e8:	ldar	x21, [x0]
  4426ec:	b	4436c8 <ferror@plt+0x40998>
  4426f0:	ldr	x0, [x19, #16]
  4426f4:	str	x0, [sp, #136]
  4426f8:	stp	xzr, xzr, [sp, #224]
  4426fc:	str	xzr, [sp, #240]
  442700:	str	xzr, [sp, #248]
  442704:	stp	xzr, xzr, [sp, #256]
  442708:	stp	xzr, xzr, [sp, #272]
  44270c:	stp	xzr, xzr, [sp, #288]
  442710:	stp	xzr, xzr, [sp, #304]
  442714:	ldr	x1, [x0, #56]
  442718:	ldr	x0, [x23, #80]
  44271c:	cmp	x1, x0
  442720:	b.cc	4427f0 <ferror@plt+0x3fac0>  // b.lo, b.ul, b.last
  442724:	mov	w2, #0x0                   	// #0
  442728:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44272c:	add	x1, x1, #0x7c0
  442730:	mov	x0, x27
  442734:	ldr	x3, [sp, #128]
  442738:	blr	x3
  44273c:	ldr	x0, [sp, #240]
  442740:	ldr	x1, [sp, #232]
  442744:	add	x0, x0, x1
  442748:	str	x0, [sp, #240]
  44274c:	str	xzr, [sp, #232]
  442750:	mov	x3, x27
  442754:	ldr	x25, [sp, #128]
  442758:	mov	x2, x25
  44275c:	add	x1, sp, #0xe0
  442760:	mov	x0, x24
  442764:	bl	43cc8c <ferror@plt+0x39f5c>
  442768:	mov	x3, x27
  44276c:	mov	x2, x25
  442770:	add	x1, sp, #0x100
  442774:	mov	x0, x24
  442778:	bl	4424d0 <ferror@plt+0x3f7a0>
  44277c:	str	xzr, [sp, #144]
  442780:	mov	x0, #0xffffffffffffffff    	// #-1
  442784:	str	x0, [sp, #136]
  442788:	mov	x28, #0x0                   	// #0
  44278c:	mov	w0, #0x0                   	// #0
  442790:	ldr	w1, [x24, #8]
  442794:	cbnz	w1, 443358 <ferror@plt+0x40628>
  442798:	ldr	x1, [sp, #144]
  44279c:	str	x1, [x22, #112]
  4427a0:	str	x21, [x22, #120]
  4427a4:	str	x28, [x22, #128]
  4427a8:	ldr	x1, [sp, #136]
  4427ac:	str	x1, [x22, #104]
  4427b0:	ldr	x1, [sp, #136]
  4427b4:	cmn	x1, #0x1
  4427b8:	b.ne	4433b0 <ferror@plt+0x40680>  // b.any
  4427bc:	cbz	w0, 443384 <ferror@plt+0x40654>
  4427c0:	mov	x6, x26
  4427c4:	mov	x5, x27
  4427c8:	ldr	x4, [sp, #128]
  4427cc:	ldr	x3, [sp, #120]
  4427d0:	mov	x2, x20
  4427d4:	mov	x1, x23
  4427d8:	mov	x0, x24
  4427dc:	bl	4425d4 <ferror@plt+0x3f8a4>
  4427e0:	ldp	x19, x20, [sp, #32]
  4427e4:	ldp	x21, x22, [sp, #48]
  4427e8:	ldp	x27, x28, [sp, #96]
  4427ec:	b	442684 <ferror@plt+0x3f954>
  4427f0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4427f4:	add	x2, x2, #0xc60
  4427f8:	str	x2, [sp, #320]
  4427fc:	ldr	x2, [x23, #72]
  442800:	str	x2, [sp, #328]
  442804:	add	x2, x2, x1
  442808:	str	x2, [sp, #336]
  44280c:	sub	x0, x0, x1
  442810:	str	x0, [sp, #344]
  442814:	ldr	w0, [x23, #120]
  442818:	str	w0, [sp, #352]
  44281c:	ldr	x0, [sp, #128]
  442820:	str	x0, [sp, #360]
  442824:	str	x27, [sp, #368]
  442828:	str	wzr, [sp, #376]
  44282c:	add	x0, sp, #0x140
  442830:	bl	440b88 <ferror@plt+0x3de58>
  442834:	mov	w1, w0
  442838:	mov	w25, #0x0                   	// #0
  44283c:	mov	x2, #0xffffffff            	// #4294967295
  442840:	cmp	x2, w0, uxtw
  442844:	b.eq	442a64 <ferror@plt+0x3fd34>  // b.none
  442848:	str	x1, [sp, #344]
  44284c:	add	x0, sp, #0x140
  442850:	bl	440cfc <ferror@plt+0x3dfcc>
  442854:	and	w0, w0, #0xffff
  442858:	str	w0, [sp, #256]
  44285c:	sub	w0, w0, #0x2
  442860:	cmp	w0, #0x2
  442864:	b.hi	442a78 <ferror@plt+0x3fd48>  // b.pmore
  442868:	add	x0, sp, #0x140
  44286c:	mov	w1, w25
  442870:	mov	x25, x0
  442874:	bl	440cd8 <ferror@plt+0x3dfa8>
  442878:	mov	x1, x0
  44287c:	ldp	x2, x3, [sp, #320]
  442880:	stp	x2, x3, [sp, #384]
  442884:	ldp	x2, x3, [sp, #336]
  442888:	stp	x2, x3, [sp, #400]
  44288c:	ldp	x2, x3, [sp, #352]
  442890:	stp	x2, x3, [sp, #416]
  442894:	ldp	x2, x3, [sp, #368]
  442898:	stp	x2, x3, [sp, #432]
  44289c:	str	x0, [sp, #408]
  4428a0:	mov	x0, x25
  4428a4:	bl	440b1c <ferror@plt+0x3ddec>
  4428a8:	cbz	w0, 44273c <ferror@plt+0x3fa0c>
  4428ac:	add	x0, sp, #0x180
  4428b0:	bl	440d54 <ferror@plt+0x3e024>
  4428b4:	and	w0, w0, #0xff
  4428b8:	str	w0, [sp, #260]
  4428bc:	ldr	w0, [sp, #256]
  4428c0:	cmp	w0, #0x3
  4428c4:	b.gt	442a8c <ferror@plt+0x3fd5c>
  4428c8:	mov	w0, #0x1                   	// #1
  4428cc:	str	w0, [sp, #264]
  4428d0:	add	x25, sp, #0x180
  4428d4:	mov	x0, x25
  4428d8:	bl	440d54 <ferror@plt+0x3e024>
  4428dc:	ldr	x28, [sp, #400]
  4428e0:	mov	x1, #0x1                   	// #1
  4428e4:	mov	x0, x25
  4428e8:	bl	440b1c <ferror@plt+0x3ddec>
  4428ec:	mov	w1, #0x0                   	// #0
  4428f0:	cbz	w0, 442904 <ferror@plt+0x3fbd4>
  4428f4:	ldrb	w1, [x28]
  4428f8:	eor	w1, w1, #0xffffff80
  4428fc:	sub	w1, w1, #0x80
  442900:	sxtb	w1, w1
  442904:	str	w1, [sp, #268]
  442908:	add	x25, sp, #0x180
  44290c:	mov	x0, x25
  442910:	bl	440d54 <ferror@plt+0x3e024>
  442914:	and	w0, w0, #0xff
  442918:	str	w0, [sp, #272]
  44291c:	mov	x0, x25
  442920:	bl	440d54 <ferror@plt+0x3e024>
  442924:	and	w1, w0, #0xff
  442928:	str	w1, [sp, #276]
  44292c:	ldr	x0, [sp, #400]
  442930:	str	x0, [sp, #280]
  442934:	sub	w1, w1, #0x1
  442938:	mov	x0, x25
  44293c:	bl	440b1c <ferror@plt+0x3ddec>
  442940:	cbz	w0, 44273c <ferror@plt+0x3fa0c>
  442944:	str	xzr, [sp, #288]
  442948:	ldr	x25, [sp, #400]
  44294c:	ldr	x28, [sp, #408]
  442950:	add	x28, x25, x28
  442954:	cmp	x25, x28
  442958:	b.cs	44298c <ferror@plt+0x3fc5c>  // b.hs, b.nlast
  44295c:	ldrb	w0, [x25]
  442960:	cbz	w0, 44298c <ferror@plt+0x3fc5c>
  442964:	sub	x1, x28, x25
  442968:	mov	x0, x25
  44296c:	bl	4026d0 <strnlen@plt>
  442970:	add	x0, x0, #0x1
  442974:	add	x25, x25, x0
  442978:	ldr	x0, [sp, #288]
  44297c:	add	x0, x0, #0x1
  442980:	str	x0, [sp, #288]
  442984:	cmp	x28, x25
  442988:	b.hi	44295c <ferror@plt+0x3fc2c>  // b.pmore
  44298c:	str	xzr, [sp, #296]
  442990:	ldr	x1, [sp, #288]
  442994:	cbnz	x1, 442aa0 <ferror@plt+0x3fd70>
  442998:	ldr	x0, [sp, #400]
  44299c:	ldrb	w0, [x0]
  4429a0:	mov	x28, #0x0                   	// #0
  4429a4:	add	x1, sp, #0x180
  4429a8:	cbz	w0, 4429ec <ferror@plt+0x3fcbc>
  4429ac:	str	x21, [sp, #144]
  4429b0:	mov	x25, x1
  4429b4:	ldr	w0, [sp, #440]
  4429b8:	cbnz	w0, 44324c <ferror@plt+0x4051c>
  4429bc:	ldr	x21, [sp, #296]
  4429c0:	mov	x0, x25
  4429c4:	bl	440f6c <ferror@plt+0x3e23c>
  4429c8:	str	x0, [x21, x28]
  4429cc:	ldr	x0, [sp, #296]
  4429d0:	ldr	x0, [x0, x28]
  4429d4:	cbz	x0, 443254 <ferror@plt+0x40524>
  4429d8:	add	x28, x28, #0x8
  4429dc:	ldr	x0, [sp, #400]
  4429e0:	ldrb	w0, [x0]
  4429e4:	cbnz	w0, 4429b4 <ferror@plt+0x3fc84>
  4429e8:	ldr	x21, [sp, #144]
  4429ec:	mov	x1, #0x1                   	// #1
  4429f0:	add	x0, sp, #0x180
  4429f4:	bl	440b1c <ferror@plt+0x3ddec>
  4429f8:	cbz	w0, 44273c <ferror@plt+0x3fa0c>
  4429fc:	str	xzr, [sp, #304]
  442a00:	ldr	x25, [sp, #400]
  442a04:	ldr	x28, [sp, #408]
  442a08:	add	x28, x25, x28
  442a0c:	cmp	x25, x28
  442a10:	b.cc	442aec <ferror@plt+0x3fdbc>  // b.lo, b.ul, b.last
  442a14:	ldr	x3, [sp, #368]
  442a18:	ldr	x2, [sp, #360]
  442a1c:	ldr	x1, [sp, #304]
  442a20:	lsl	x1, x1, #3
  442a24:	mov	x0, x24
  442a28:	bl	43c9e0 <ferror@plt+0x39cb0>
  442a2c:	str	x0, [sp, #312]
  442a30:	cbz	x0, 44273c <ferror@plt+0x3fa0c>
  442a34:	ldr	x0, [sp, #400]
  442a38:	ldrb	w0, [x0]
  442a3c:	cbz	w0, 442c94 <ferror@plt+0x3ff64>
  442a40:	mov	x25, #0x0                   	// #0
  442a44:	add	x0, sp, #0x180
  442a48:	str	x21, [sp, #144]
  442a4c:	str	x22, [sp, #152]
  442a50:	str	x19, [sp, #160]
  442a54:	str	x23, [sp, #168]
  442a58:	str	x20, [sp, #176]
  442a5c:	mov	x22, x0
  442a60:	b	442c10 <ferror@plt+0x3fee0>
  442a64:	add	x0, sp, #0x140
  442a68:	bl	440c08 <ferror@plt+0x3ded8>
  442a6c:	mov	x1, x0
  442a70:	mov	w25, #0x1                   	// #1
  442a74:	b	442848 <ferror@plt+0x3fb18>
  442a78:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  442a7c:	add	x1, x1, #0x7e0
  442a80:	add	x0, sp, #0x140
  442a84:	bl	440ac0 <ferror@plt+0x3dd90>
  442a88:	b	44273c <ferror@plt+0x3fa0c>
  442a8c:	add	x0, sp, #0x180
  442a90:	bl	440d54 <ferror@plt+0x3e024>
  442a94:	and	w0, w0, #0xff
  442a98:	str	w0, [sp, #264]
  442a9c:	b	4428d0 <ferror@plt+0x3fba0>
  442aa0:	ldr	x3, [sp, #368]
  442aa4:	ldr	x2, [sp, #360]
  442aa8:	lsl	x1, x1, #3
  442aac:	mov	x0, x24
  442ab0:	bl	43c9e0 <ferror@plt+0x39cb0>
  442ab4:	str	x0, [sp, #296]
  442ab8:	cbnz	x0, 442998 <ferror@plt+0x3fc68>
  442abc:	b	44273c <ferror@plt+0x3fa0c>
  442ac0:	mov	x0, #0x1                   	// #1
  442ac4:	b	442b28 <ferror@plt+0x3fdf8>
  442ac8:	mov	x0, #0x1                   	// #1
  442acc:	b	442b48 <ferror@plt+0x3fe18>
  442ad0:	mov	x0, #0x1                   	// #1
  442ad4:	add	x25, x25, x0
  442ad8:	ldr	x0, [sp, #304]
  442adc:	add	x0, x0, #0x1
  442ae0:	str	x0, [sp, #304]
  442ae4:	cmp	x28, x25
  442ae8:	b.ls	442a14 <ferror@plt+0x3fce4>  // b.plast
  442aec:	ldrb	w0, [x25]
  442af0:	cbz	w0, 442a14 <ferror@plt+0x3fce4>
  442af4:	sub	x1, x28, x25
  442af8:	mov	x0, x25
  442afc:	bl	4026d0 <strnlen@plt>
  442b00:	mov	x1, x0
  442b04:	add	x0, x0, #0x1
  442b08:	add	x2, x25, x0
  442b0c:	ldrsb	w0, [x25, x0]
  442b10:	tbz	w0, #31, 442ac0 <ferror@plt+0x3fd90>
  442b14:	mov	x0, #0x1                   	// #1
  442b18:	add	x25, x25, x1
  442b1c:	add	x0, x0, #0x1
  442b20:	ldrsb	w1, [x25, x0]
  442b24:	tbnz	w1, #31, 442b1c <ferror@plt+0x3fdec>
  442b28:	add	x3, x2, x0
  442b2c:	ldrsb	w0, [x2, x0]
  442b30:	tbz	w0, #31, 442ac8 <ferror@plt+0x3fd98>
  442b34:	mov	x0, #0x1                   	// #1
  442b38:	sub	x2, x3, #0x1
  442b3c:	add	x0, x0, #0x1
  442b40:	ldrsb	w1, [x2, x0]
  442b44:	tbnz	w1, #31, 442b3c <ferror@plt+0x3fe0c>
  442b48:	add	x25, x3, x0
  442b4c:	ldrsb	w0, [x3, x0]
  442b50:	tbz	w0, #31, 442ad0 <ferror@plt+0x3fda0>
  442b54:	mov	x0, #0x1                   	// #1
  442b58:	sub	x2, x25, #0x1
  442b5c:	add	x0, x0, #0x1
  442b60:	ldrsb	w1, [x2, x0]
  442b64:	tbnz	w1, #31, 442b5c <ferror@plt+0x3fe2c>
  442b68:	b	442ad4 <ferror@plt+0x3fda4>
  442b6c:	sub	x1, x0, #0x1
  442b70:	ldr	x2, [sp, #288]
  442b74:	cmp	x1, x2
  442b78:	b.cs	442c58 <ferror@plt+0x3ff28>  // b.hs, b.nlast
  442b7c:	ldr	x1, [sp, #296]
  442b80:	add	x0, x1, x0, lsl #3
  442b84:	ldur	x28, [x0, #-8]
  442b88:	mov	x0, x28
  442b8c:	bl	402680 <strlen@plt>
  442b90:	mov	x20, x0
  442b94:	mov	x0, x19
  442b98:	bl	402680 <strlen@plt>
  442b9c:	mov	x23, x0
  442ba0:	add	x1, x20, x0
  442ba4:	ldr	x3, [sp, #368]
  442ba8:	ldr	x2, [sp, #360]
  442bac:	add	x1, x1, #0x2
  442bb0:	mov	x0, x24
  442bb4:	bl	43c9e0 <ferror@plt+0x39cb0>
  442bb8:	mov	x21, x0
  442bbc:	cbz	x0, 44328c <ferror@plt+0x4055c>
  442bc0:	mov	x2, x20
  442bc4:	mov	x1, x28
  442bc8:	bl	402620 <memcpy@plt>
  442bcc:	mov	w0, #0x2f                  	// #47
  442bd0:	strb	w0, [x21, x20]
  442bd4:	add	x0, x20, #0x1
  442bd8:	add	x2, x23, #0x1
  442bdc:	mov	x1, x19
  442be0:	add	x0, x21, x0
  442be4:	bl	402620 <memcpy@plt>
  442be8:	ldr	x0, [sp, #312]
  442bec:	str	x21, [x0, x25]
  442bf0:	mov	x0, x22
  442bf4:	bl	440d88 <ferror@plt+0x3e058>
  442bf8:	mov	x0, x22
  442bfc:	bl	440d88 <ferror@plt+0x3e058>
  442c00:	add	x25, x25, #0x8
  442c04:	ldr	x0, [sp, #400]
  442c08:	ldrb	w0, [x0]
  442c0c:	cbz	w0, 442c80 <ferror@plt+0x3ff50>
  442c10:	ldr	w0, [sp, #440]
  442c14:	cbnz	w0, 44325c <ferror@plt+0x4052c>
  442c18:	mov	x0, x22
  442c1c:	bl	440f6c <ferror@plt+0x3e23c>
  442c20:	mov	x19, x0
  442c24:	cbz	x0, 443274 <ferror@plt+0x40544>
  442c28:	mov	x0, x22
  442c2c:	bl	440d88 <ferror@plt+0x3e058>
  442c30:	ldrb	w1, [x19]
  442c34:	cmp	w1, #0x2f
  442c38:	b.eq	442c4c <ferror@plt+0x3ff1c>  // b.none
  442c3c:	cbnz	x0, 442b6c <ferror@plt+0x3fe3c>
  442c40:	ldr	x0, [sp, #136]
  442c44:	ldr	x28, [x0, #72]
  442c48:	cbnz	x28, 442b88 <ferror@plt+0x3fe58>
  442c4c:	ldr	x0, [sp, #312]
  442c50:	str	x19, [x0, x25]
  442c54:	b	442bf0 <ferror@plt+0x3fec0>
  442c58:	ldr	x21, [sp, #144]
  442c5c:	ldr	x22, [sp, #152]
  442c60:	ldr	x19, [sp, #160]
  442c64:	ldr	x23, [sp, #168]
  442c68:	ldr	x20, [sp, #176]
  442c6c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  442c70:	add	x1, x1, #0x800
  442c74:	add	x0, sp, #0x140
  442c78:	bl	440ac0 <ferror@plt+0x3dd90>
  442c7c:	b	44273c <ferror@plt+0x3fa0c>
  442c80:	ldr	x21, [sp, #144]
  442c84:	ldr	x22, [sp, #152]
  442c88:	ldr	x19, [sp, #160]
  442c8c:	ldr	x23, [sp, #168]
  442c90:	ldr	x20, [sp, #176]
  442c94:	ldr	w0, [sp, #440]
  442c98:	cbnz	w0, 44273c <ferror@plt+0x3fa0c>
  442c9c:	ldr	x0, [sp, #304]
  442ca0:	cbz	x0, 442cb4 <ferror@plt+0x3ff84>
  442ca4:	ldr	x0, [sp, #312]
  442ca8:	ldr	x0, [x0]
  442cac:	str	x0, [sp, #144]
  442cb0:	b	442cc0 <ferror@plt+0x3ff90>
  442cb4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  442cb8:	add	x0, x0, #0xd70
  442cbc:	str	x0, [sp, #144]
  442cc0:	ldr	x0, [sp, #344]
  442cc4:	cbz	x0, 4430f8 <ferror@plt+0x403c8>
  442cc8:	ldr	x1, [sp, #144]
  442ccc:	mov	w2, #0x1                   	// #1
  442cd0:	mov	x4, #0x0                   	// #0
  442cd4:	mov	w3, #0x0                   	// #0
  442cd8:	add	x28, sp, #0x140
  442cdc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x19c60>
  442ce0:	add	x0, x0, #0xd70
  442ce4:	str	x0, [sp, #216]
  442ce8:	add	x25, sp, #0xe0
  442cec:	str	x21, [sp, #152]
  442cf0:	str	x22, [sp, #160]
  442cf4:	str	x19, [sp, #168]
  442cf8:	mov	x22, x1
  442cfc:	mov	w21, w2
  442d00:	mov	w19, w3
  442d04:	str	x20, [sp, #176]
  442d08:	mov	x20, x4
  442d0c:	str	x27, [sp, #184]
  442d10:	str	x26, [sp, #192]
  442d14:	b	442d80 <ferror@plt+0x40050>
  442d18:	sub	w26, w26, w1
  442d1c:	ldr	w3, [sp, #272]
  442d20:	udiv	w1, w26, w3
  442d24:	add	w19, w1, w19
  442d28:	ldr	w2, [sp, #264]
  442d2c:	ldr	w0, [sp, #260]
  442d30:	mul	w0, w19, w0
  442d34:	udiv	w0, w0, w2
  442d38:	add	x20, x20, x0
  442d3c:	udiv	w0, w19, w2
  442d40:	msub	w19, w0, w2, w19
  442d44:	msub	w1, w1, w3, w26
  442d48:	ldr	w26, [sp, #268]
  442d4c:	add	w1, w1, w26
  442d50:	add	w21, w21, w1
  442d54:	mov	x7, x25
  442d58:	ldr	x6, [sp, #368]
  442d5c:	ldr	x5, [sp, #360]
  442d60:	mov	w4, w21
  442d64:	mov	x3, x22
  442d68:	mov	x2, x20
  442d6c:	mov	x1, x23
  442d70:	mov	x0, x24
  442d74:	bl	440850 <ferror@plt+0x3db20>
  442d78:	ldr	x0, [sp, #344]
  442d7c:	cbz	x0, 4430e0 <ferror@plt+0x403b0>
  442d80:	mov	x0, x28
  442d84:	bl	440d54 <ferror@plt+0x3e024>
  442d88:	and	w26, w0, #0xff
  442d8c:	ldr	w1, [sp, #276]
  442d90:	cmp	w1, w0, uxtb
  442d94:	b.ls	442d18 <ferror@plt+0x3ffe8>  // b.plast
  442d98:	cbz	w26, 442de8 <ferror@plt+0x400b8>
  442d9c:	cmp	w26, #0x5
  442da0:	b.eq	443080 <ferror@plt+0x40350>  // b.none
  442da4:	b.hi	442fb0 <ferror@plt+0x40280>  // b.pmore
  442da8:	cmp	w26, #0x3
  442dac:	b.eq	443044 <ferror@plt+0x40314>  // b.none
  442db0:	b.ls	442f74 <ferror@plt+0x40244>  // b.plast
  442db4:	cmp	w26, #0x4
  442db8:	b.ne	4430a0 <ferror@plt+0x40370>  // b.any
  442dbc:	mov	x0, x28
  442dc0:	bl	440d88 <ferror@plt+0x3e058>
  442dc4:	cbz	x0, 4430d8 <ferror@plt+0x403a8>
  442dc8:	sub	x1, x0, #0x1
  442dcc:	ldr	x2, [sp, #304]
  442dd0:	cmp	x1, x2
  442dd4:	b.cs	443054 <ferror@plt+0x40324>  // b.hs, b.nlast
  442dd8:	ldr	x1, [sp, #312]
  442ddc:	add	x0, x1, x0, lsl #3
  442de0:	ldur	x22, [x0, #-8]
  442de4:	b	442d78 <ferror@plt+0x40048>
  442de8:	mov	x0, x28
  442dec:	bl	440d88 <ferror@plt+0x3e058>
  442df0:	mov	x27, x0
  442df4:	mov	x0, x28
  442df8:	bl	440d54 <ferror@plt+0x3e024>
  442dfc:	and	w0, w0, #0xff
  442e00:	cmp	w0, #0x3
  442e04:	b.eq	442e48 <ferror@plt+0x40118>  // b.none
  442e08:	b.hi	442e34 <ferror@plt+0x40104>  // b.pmore
  442e0c:	cmp	w0, #0x1
  442e10:	b.eq	4430c4 <ferror@plt+0x40394>  // b.none
  442e14:	cmp	w0, #0x2
  442e18:	b.ne	442f48 <ferror@plt+0x40218>  // b.any
  442e1c:	ldr	x0, [sp, #136]
  442e20:	ldr	w1, [x0, #48]
  442e24:	mov	x0, x28
  442e28:	bl	440e34 <ferror@plt+0x3e104>
  442e2c:	mov	x20, x0
  442e30:	b	442d78 <ferror@plt+0x40048>
  442e34:	cmp	w0, #0x4
  442e38:	b.ne	442f48 <ferror@plt+0x40218>  // b.any
  442e3c:	mov	x0, x28
  442e40:	bl	440d88 <ferror@plt+0x3e058>
  442e44:	b	442d78 <ferror@plt+0x40048>
  442e48:	mov	x0, x28
  442e4c:	bl	440f6c <ferror@plt+0x3e23c>
  442e50:	mov	x22, x0
  442e54:	cbz	x0, 4432a4 <ferror@plt+0x40574>
  442e58:	mov	x0, x28
  442e5c:	bl	440d88 <ferror@plt+0x3e058>
  442e60:	mov	x26, x0
  442e64:	mov	x0, x28
  442e68:	bl	440d88 <ferror@plt+0x3e058>
  442e6c:	mov	x0, x28
  442e70:	bl	440d88 <ferror@plt+0x3e058>
  442e74:	ldrb	w0, [x22]
  442e78:	cmp	w0, #0x2f
  442e7c:	b.eq	442d78 <ferror@plt+0x40048>  // b.none
  442e80:	cbnz	w26, 442efc <ferror@plt+0x401cc>
  442e84:	ldr	x0, [sp, #136]
  442e88:	ldr	x0, [x0, #72]
  442e8c:	str	x0, [sp, #200]
  442e90:	ldr	x0, [sp, #200]
  442e94:	bl	402680 <strlen@plt>
  442e98:	mov	x26, x0
  442e9c:	mov	x0, x22
  442ea0:	bl	402680 <strlen@plt>
  442ea4:	str	x0, [sp, #208]
  442ea8:	add	x1, x26, x0
  442eac:	ldr	x3, [sp, #368]
  442eb0:	ldr	x2, [sp, #360]
  442eb4:	add	x1, x1, #0x2
  442eb8:	mov	x0, x24
  442ebc:	bl	43c9e0 <ferror@plt+0x39cb0>
  442ec0:	mov	x27, x0
  442ec4:	cbz	x0, 4432c0 <ferror@plt+0x40590>
  442ec8:	mov	x2, x26
  442ecc:	ldr	x1, [sp, #200]
  442ed0:	bl	402620 <memcpy@plt>
  442ed4:	mov	w0, #0x2f                  	// #47
  442ed8:	strb	w0, [x27, x26]
  442edc:	add	x0, x26, #0x1
  442ee0:	ldr	x2, [sp, #208]
  442ee4:	add	x2, x2, #0x1
  442ee8:	mov	x1, x22
  442eec:	add	x0, x27, x0
  442ef0:	bl	402620 <memcpy@plt>
  442ef4:	mov	x22, x27
  442ef8:	b	442d78 <ferror@plt+0x40048>
  442efc:	sub	w26, w26, #0x1
  442f00:	ldr	x0, [sp, #288]
  442f04:	cmp	x26, x0
  442f08:	b.cs	442f1c <ferror@plt+0x401ec>  // b.hs, b.nlast
  442f0c:	ldr	x0, [sp, #296]
  442f10:	ldr	x0, [x0, x26, lsl #3]
  442f14:	str	x0, [sp, #200]
  442f18:	b	442e90 <ferror@plt+0x40160>
  442f1c:	ldr	x21, [sp, #152]
  442f20:	ldr	x22, [sp, #160]
  442f24:	ldr	x19, [sp, #168]
  442f28:	ldr	x20, [sp, #176]
  442f2c:	ldr	x27, [sp, #184]
  442f30:	ldr	x26, [sp, #192]
  442f34:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  442f38:	add	x1, x1, #0x838
  442f3c:	add	x0, sp, #0x140
  442f40:	bl	440ac0 <ferror@plt+0x3dd90>
  442f44:	b	44273c <ferror@plt+0x3fa0c>
  442f48:	sub	x1, x27, #0x1
  442f4c:	mov	x0, x28
  442f50:	bl	440b1c <ferror@plt+0x3ddec>
  442f54:	cbnz	w0, 442d78 <ferror@plt+0x40048>
  442f58:	ldr	x21, [sp, #152]
  442f5c:	ldr	x22, [sp, #160]
  442f60:	ldr	x19, [sp, #168]
  442f64:	ldr	x20, [sp, #176]
  442f68:	ldr	x27, [sp, #184]
  442f6c:	ldr	x26, [sp, #192]
  442f70:	b	44273c <ferror@plt+0x3fa0c>
  442f74:	cmp	w26, #0x1
  442f78:	b.eq	44301c <ferror@plt+0x402ec>  // b.none
  442f7c:	cmp	w26, #0x2
  442f80:	b.ne	4430a0 <ferror@plt+0x40370>  // b.any
  442f84:	mov	x0, x28
  442f88:	bl	440d88 <ferror@plt+0x3e058>
  442f8c:	add	x19, x0, w19, uxtw
  442f90:	ldr	w1, [sp, #264]
  442f94:	ldr	w0, [sp, #260]
  442f98:	mul	x0, x0, x19
  442f9c:	udiv	x0, x0, x1
  442fa0:	add	x20, x20, x0
  442fa4:	udiv	x0, x19, x1
  442fa8:	msub	w19, w0, w1, w19
  442fac:	b	442d78 <ferror@plt+0x40048>
  442fb0:	cmp	w26, #0x9
  442fb4:	b.eq	44308c <ferror@plt+0x4035c>  // b.none
  442fb8:	b.ls	442fd8 <ferror@plt+0x402a8>  // b.plast
  442fbc:	cmp	w26, #0xb
  442fc0:	b.ls	442d78 <ferror@plt+0x40048>  // b.plast
  442fc4:	cmp	w26, #0xc
  442fc8:	b.ne	4430a0 <ferror@plt+0x40370>  // b.any
  442fcc:	mov	x0, x28
  442fd0:	bl	440d88 <ferror@plt+0x3e058>
  442fd4:	b	442d78 <ferror@plt+0x40048>
  442fd8:	cmp	w26, #0x7
  442fdc:	b.ls	442d78 <ferror@plt+0x40048>  // b.plast
  442fe0:	cmp	w26, #0x8
  442fe4:	b.ne	4430a0 <ferror@plt+0x40370>  // b.any
  442fe8:	mov	w0, #0xff                  	// #255
  442fec:	sub	w0, w0, w1
  442ff0:	ldr	w1, [sp, #272]
  442ff4:	udiv	w0, w0, w1
  442ff8:	add	w19, w0, w19
  442ffc:	ldr	w1, [sp, #264]
  443000:	ldr	w0, [sp, #260]
  443004:	mul	w0, w19, w0
  443008:	udiv	w0, w0, w1
  44300c:	add	x20, x20, x0
  443010:	udiv	w0, w19, w1
  443014:	msub	w19, w0, w1, w19
  443018:	b	442d78 <ferror@plt+0x40048>
  44301c:	mov	x7, x25
  443020:	ldr	x6, [sp, #368]
  443024:	ldr	x5, [sp, #360]
  443028:	mov	w4, w21
  44302c:	mov	x3, x22
  443030:	mov	x2, x20
  443034:	mov	x1, x23
  443038:	mov	x0, x24
  44303c:	bl	440850 <ferror@plt+0x3db20>
  443040:	b	442d78 <ferror@plt+0x40048>
  443044:	mov	x0, x28
  443048:	bl	440ea4 <ferror@plt+0x3e174>
  44304c:	add	w21, w21, w0
  443050:	b	442d78 <ferror@plt+0x40048>
  443054:	ldr	x21, [sp, #152]
  443058:	ldr	x22, [sp, #160]
  44305c:	ldr	x19, [sp, #168]
  443060:	ldr	x20, [sp, #176]
  443064:	ldr	x27, [sp, #184]
  443068:	ldr	x26, [sp, #192]
  44306c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  443070:	add	x1, x1, #0x868
  443074:	add	x0, sp, #0x140
  443078:	bl	440ac0 <ferror@plt+0x3dd90>
  44307c:	b	44273c <ferror@plt+0x3fa0c>
  443080:	mov	x0, x28
  443084:	bl	440d88 <ferror@plt+0x3e058>
  443088:	b	442d78 <ferror@plt+0x40048>
  44308c:	mov	x0, x28
  443090:	bl	440cfc <ferror@plt+0x3dfcc>
  443094:	add	x20, x20, w0, uxth
  443098:	mov	w19, #0x0                   	// #0
  44309c:	b	442d78 <ferror@plt+0x40048>
  4430a0:	sub	w26, w26, #0x1
  4430a4:	ldr	x0, [sp, #280]
  4430a8:	ldrb	w26, [x0, w26, uxtw]
  4430ac:	cbz	w26, 442d78 <ferror@plt+0x40048>
  4430b0:	mov	x0, x28
  4430b4:	bl	440d88 <ferror@plt+0x3e058>
  4430b8:	subs	w26, w26, #0x1
  4430bc:	b.ne	4430b0 <ferror@plt+0x40380>  // b.any
  4430c0:	b	442d78 <ferror@plt+0x40048>
  4430c4:	ldr	x22, [sp, #144]
  4430c8:	mov	w19, w26
  4430cc:	mov	w21, #0x1                   	// #1
  4430d0:	mov	x20, #0x0                   	// #0
  4430d4:	b	442d78 <ferror@plt+0x40048>
  4430d8:	ldr	x22, [sp, #216]
  4430dc:	b	442d78 <ferror@plt+0x40048>
  4430e0:	ldr	x21, [sp, #152]
  4430e4:	ldr	x22, [sp, #160]
  4430e8:	ldr	x19, [sp, #168]
  4430ec:	ldr	x20, [sp, #176]
  4430f0:	ldr	x27, [sp, #184]
  4430f4:	ldr	x26, [sp, #192]
  4430f8:	ldr	w0, [sp, #376]
  4430fc:	cbnz	w0, 44273c <ferror@plt+0x3fa0c>
  443100:	ldr	x0, [sp, #248]
  443104:	cbz	x0, 44273c <ferror@plt+0x3fa0c>
  443108:	add	x4, sp, #0xe0
  44310c:	mov	x3, x27
  443110:	ldr	x25, [sp, #128]
  443114:	mov	x2, x25
  443118:	mov	x1, #0x18                  	// #24
  44311c:	mov	x0, x24
  443120:	bl	43cb4c <ferror@plt+0x39e1c>
  443124:	cbz	x0, 44273c <ferror@plt+0x3fa0c>
  443128:	mov	x1, #0xffffffffffffffff    	// #-1
  44312c:	str	x1, [x0]
  443130:	str	xzr, [x0, #8]
  443134:	str	wzr, [x0, #16]
  443138:	str	wzr, [x0, #20]
  44313c:	mov	x3, x27
  443140:	mov	x2, x25
  443144:	add	x1, sp, #0xe0
  443148:	mov	x0, x24
  44314c:	bl	43cc8c <ferror@plt+0x39f5c>
  443150:	cbz	w0, 44273c <ferror@plt+0x3fa0c>
  443154:	ldr	x0, [sp, #224]
  443158:	str	x0, [sp, #136]
  44315c:	adrp	x3, 440000 <ferror@plt+0x3d2d0>
  443160:	add	x3, x3, #0x5c4
  443164:	mov	x2, #0x18                  	// #24
  443168:	ldr	x1, [sp, #248]
  44316c:	bl	44408c <ferror@plt+0x4135c>
  443170:	ldr	x0, [sp, #248]
  443174:	str	x0, [sp, #144]
  443178:	ldr	w0, [x24, #8]
  44317c:	cbnz	w0, 44363c <ferror@plt+0x4090c>
  443180:	add	x25, x23, #0x80
  443184:	ldr	x28, [x19, #16]
  443188:	str	x25, [sp, #176]
  44318c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  443190:	add	x0, x0, #0xc50
  443194:	str	x0, [sp, #384]
  443198:	ldr	x0, [x23, #56]
  44319c:	str	x0, [sp, #392]
  4431a0:	ldr	x0, [x28]
  4431a4:	str	x0, [sp, #400]
  4431a8:	ldr	x0, [x28, #8]
  4431ac:	str	x0, [sp, #408]
  4431b0:	ldr	w0, [x23, #120]
  4431b4:	str	w0, [sp, #416]
  4431b8:	ldr	x0, [sp, #128]
  4431bc:	str	x0, [sp, #424]
  4431c0:	str	x27, [sp, #432]
  4431c4:	str	wzr, [sp, #440]
  4431c8:	add	x1, sp, #0x100
  4431cc:	add	x2, sp, #0x180
  4431d0:	str	x21, [sp, #152]
  4431d4:	str	x22, [sp, #160]
  4431d8:	str	x19, [sp, #168]
  4431dc:	mov	x19, x0
  4431e0:	mov	x21, x1
  4431e4:	mov	x22, x2
  4431e8:	ldr	x0, [sp, #408]
  4431ec:	cbz	x0, 4432dc <ferror@plt+0x405ac>
  4431f0:	str	x25, [sp, #8]
  4431f4:	str	x25, [sp]
  4431f8:	mov	x7, x27
  4431fc:	mov	x6, x19
  443200:	mov	x5, x21
  443204:	mov	x4, x22
  443208:	mov	x3, #0x0                   	// #0
  44320c:	mov	x2, x28
  443210:	mov	x1, x23
  443214:	mov	x0, x24
  443218:	bl	441dcc <ferror@plt+0x3f09c>
  44321c:	cbnz	w0, 4431e8 <ferror@plt+0x404b8>
  443220:	ldr	x21, [sp, #152]
  443224:	ldr	x22, [sp, #160]
  443228:	ldr	x19, [sp, #168]
  44322c:	mov	x28, #0x0                   	// #0
  443230:	mov	x3, x27
  443234:	ldr	x2, [sp, #128]
  443238:	add	x1, sp, #0x100
  44323c:	mov	x0, x24
  443240:	bl	4424d0 <ferror@plt+0x3f7a0>
  443244:	mov	w0, #0x1                   	// #1
  443248:	b	442790 <ferror@plt+0x3fa60>
  44324c:	ldr	x21, [sp, #144]
  443250:	b	44273c <ferror@plt+0x3fa0c>
  443254:	ldr	x21, [sp, #144]
  443258:	b	44273c <ferror@plt+0x3fa0c>
  44325c:	ldr	x21, [sp, #144]
  443260:	ldr	x22, [sp, #152]
  443264:	ldr	x19, [sp, #160]
  443268:	ldr	x23, [sp, #168]
  44326c:	ldr	x20, [sp, #176]
  443270:	b	44273c <ferror@plt+0x3fa0c>
  443274:	ldr	x21, [sp, #144]
  443278:	ldr	x22, [sp, #152]
  44327c:	ldr	x19, [sp, #160]
  443280:	ldr	x23, [sp, #168]
  443284:	ldr	x20, [sp, #176]
  443288:	b	44273c <ferror@plt+0x3fa0c>
  44328c:	ldr	x21, [sp, #144]
  443290:	ldr	x22, [sp, #152]
  443294:	ldr	x19, [sp, #160]
  443298:	ldr	x23, [sp, #168]
  44329c:	ldr	x20, [sp, #176]
  4432a0:	b	44273c <ferror@plt+0x3fa0c>
  4432a4:	ldr	x21, [sp, #152]
  4432a8:	ldr	x22, [sp, #160]
  4432ac:	ldr	x19, [sp, #168]
  4432b0:	ldr	x20, [sp, #176]
  4432b4:	ldr	x27, [sp, #184]
  4432b8:	ldr	x26, [sp, #192]
  4432bc:	b	44273c <ferror@plt+0x3fa0c>
  4432c0:	ldr	x21, [sp, #152]
  4432c4:	ldr	x22, [sp, #160]
  4432c8:	ldr	x19, [sp, #168]
  4432cc:	ldr	x20, [sp, #176]
  4432d0:	ldr	x27, [sp, #184]
  4432d4:	ldr	x26, [sp, #192]
  4432d8:	b	44273c <ferror@plt+0x3fa0c>
  4432dc:	ldr	x21, [sp, #152]
  4432e0:	ldr	x22, [sp, #160]
  4432e4:	ldr	x19, [sp, #168]
  4432e8:	ldr	x28, [x25, #24]
  4432ec:	cbz	x28, 44322c <ferror@plt+0x404fc>
  4432f0:	ldr	x0, [sp, #176]
  4432f4:	cbz	x0, 443338 <ferror@plt+0x40608>
  4432f8:	mov	x3, x27
  4432fc:	ldr	x2, [sp, #128]
  443300:	ldr	x25, [sp, #176]
  443304:	mov	x1, x25
  443308:	mov	x0, x24
  44330c:	bl	43cc74 <ferror@plt+0x39f44>
  443310:	cbz	x0, 44322c <ferror@plt+0x404fc>
  443314:	str	xzr, [x25, #24]
  443318:	mov	x21, x0
  44331c:	adrp	x3, 441000 <ferror@plt+0x3e2d0>
  443320:	add	x3, x3, #0xd64
  443324:	mov	x2, #0x18                  	// #24
  443328:	mov	x1, x28
  44332c:	mov	x0, x21
  443330:	bl	44408c <ferror@plt+0x4135c>
  443334:	b	443230 <ferror@plt+0x40500>
  443338:	mov	x3, x27
  44333c:	ldr	x2, [sp, #128]
  443340:	add	x1, sp, #0x140
  443344:	mov	x0, x24
  443348:	bl	43cc8c <ferror@plt+0x39f5c>
  44334c:	cbz	w0, 44322c <ferror@plt+0x404fc>
  443350:	ldr	x21, [x25]
  443354:	b	44331c <ferror@plt+0x405ec>
  443358:	add	x1, x22, #0x70
  44335c:	ldr	x2, [sp, #144]
  443360:	stlr	x2, [x1]
  443364:	add	x1, x22, #0x78
  443368:	stlr	x21, [x1]
  44336c:	add	x1, x22, #0x80
  443370:	stlr	x28, [x1]
  443374:	add	x22, x22, #0x68
  443378:	ldr	x1, [sp, #136]
  44337c:	stlr	x1, [x22]
  443380:	b	4427b0 <ferror@plt+0x3fa80>
  443384:	mov	x4, #0x0                   	// #0
  443388:	mov	w3, #0x0                   	// #0
  44338c:	mov	x2, #0x0                   	// #0
  443390:	mov	x1, x20
  443394:	mov	x0, x27
  443398:	ldr	x5, [sp, #120]
  44339c:	blr	x5
  4433a0:	ldp	x19, x20, [sp, #32]
  4433a4:	ldp	x21, x22, [sp, #48]
  4433a8:	ldp	x27, x28, [sp, #96]
  4433ac:	b	442684 <ferror@plt+0x3f954>
  4433b0:	ldr	x21, [sp, #136]
  4433b4:	b	4436d4 <ferror@plt+0x409a4>
  4433b8:	mov	x3, x1
  4433bc:	cmp	x2, x3
  4433c0:	b.cs	443604 <ferror@plt+0x408d4>  // b.hs, b.nlast
  4433c4:	add	x0, x2, x3
  4433c8:	lsr	x1, x0, #1
  4433cc:	and	x0, x0, #0xfffffffffffffffe
  4433d0:	add	x0, x0, x1
  4433d4:	add	x5, x21, x0, lsl #3
  4433d8:	ldr	x0, [x21, x0, lsl #3]
  4433dc:	cmp	x0, x20
  4433e0:	b.hi	4433b8 <ferror@plt+0x40688>  // b.pmore
  4433e4:	ldr	x0, [x5, #24]
  4433e8:	cmp	x0, x20
  4433ec:	b.hi	4435ec <ferror@plt+0x408bc>  // b.pmore
  4433f0:	add	x2, x1, #0x1
  4433f4:	b	4433bc <ferror@plt+0x4068c>
  4433f8:	ldr	x21, [x4, #64]
  4433fc:	cbz	x21, 443478 <ferror@plt+0x40748>
  443400:	ldrb	w0, [x21]
  443404:	cmp	w0, #0x2f
  443408:	b.eq	443478 <ferror@plt+0x40748>  // b.none
  44340c:	ldr	x23, [x4, #72]
  443410:	cbz	x23, 443478 <ferror@plt+0x40748>
  443414:	mov	x0, x21
  443418:	bl	402680 <strlen@plt>
  44341c:	mov	x25, x0
  443420:	mov	x0, x23
  443424:	bl	402680 <strlen@plt>
  443428:	mov	x22, x0
  44342c:	add	x1, x25, x0
  443430:	mov	x3, x27
  443434:	ldr	x2, [sp, #128]
  443438:	add	x1, x1, #0x2
  44343c:	mov	x0, x24
  443440:	bl	43c9e0 <ferror@plt+0x39cb0>
  443444:	mov	x24, x0
  443448:	cbz	x0, 443484 <ferror@plt+0x40754>
  44344c:	mov	x2, x22
  443450:	mov	x1, x23
  443454:	bl	402620 <memcpy@plt>
  443458:	mov	w0, #0x2f                  	// #47
  44345c:	strb	w0, [x24, x22]
  443460:	add	x0, x22, #0x1
  443464:	add	x2, x25, #0x1
  443468:	mov	x1, x21
  44346c:	add	x0, x24, x0
  443470:	bl	402620 <memcpy@plt>
  443474:	mov	x21, x24
  443478:	ldr	x0, [x19, #16]
  44347c:	str	x21, [x0, #80]
  443480:	b	44360c <ferror@plt+0x408dc>
  443484:	str	wzr, [x26]
  443488:	mov	w0, #0x0                   	// #0
  44348c:	ldp	x19, x20, [sp, #32]
  443490:	ldp	x21, x22, [sp, #48]
  443494:	ldp	x27, x28, [sp, #96]
  443498:	b	442684 <ferror@plt+0x3f954>
  44349c:	mov	x4, #0x0                   	// #0
  4434a0:	ldr	w3, [x5, #16]
  4434a4:	ldr	x2, [x5, #8]
  4434a8:	mov	x1, x20
  4434ac:	mov	x0, x27
  4434b0:	ldr	x5, [sp, #120]
  4434b4:	blr	x5
  4434b8:	ldp	x19, x20, [sp, #32]
  4434bc:	ldp	x21, x22, [sp, #48]
  4434c0:	ldp	x27, x28, [sp, #96]
  4434c4:	b	442684 <ferror@plt+0x3f954>
  4434c8:	mov	x6, x2
  4434cc:	cmp	x4, x6
  4434d0:	b.cs	4435c0 <ferror@plt+0x40890>  // b.hs, b.nlast
  4434d4:	add	x0, x4, x6
  4434d8:	lsr	x2, x0, #1
  4434dc:	and	x0, x0, #0xfffffffffffffffe
  4434e0:	add	x0, x0, x2
  4434e4:	lsl	x1, x0, #3
  4434e8:	mov	x7, x1
  4434ec:	add	x1, x3, x1
  4434f0:	ldr	x0, [x3, x0, lsl #3]
  4434f4:	cmp	x0, x20
  4434f8:	b.hi	4434c8 <ferror@plt+0x40798>  // b.pmore
  4434fc:	ldr	x0, [x1, #8]
  443500:	cmp	x0, x20
  443504:	b.hi	443510 <ferror@plt+0x407e0>  // b.pmore
  443508:	add	x4, x2, #0x1
  44350c:	b	4434cc <ferror@plt+0x4079c>
  443510:	asr	x0, x7, #3
  443514:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  443518:	movk	x2, #0xaaab
  44351c:	mul	x0, x0, x2
  443520:	add	x0, x0, #0x1
  443524:	cmp	x8, x0
  443528:	b.ls	443560 <ferror@plt+0x40830>  // b.plast
  44352c:	ldr	x0, [x1, #24]
  443530:	cmp	x0, x20
  443534:	b.hi	443560 <ferror@plt+0x40830>  // b.pmore
  443538:	ldr	x0, [x1, #32]
  44353c:	cmp	x0, x20
  443540:	b.ls	443560 <ferror@plt+0x40830>  // b.plast
  443544:	add	x1, x1, #0x18
  443548:	sub	x0, x1, x3
  44354c:	asr	x0, x0, #3
  443550:	mul	x0, x0, x2
  443554:	add	x0, x0, #0x1
  443558:	cmp	x8, x0
  44355c:	b.hi	44352c <ferror@plt+0x407fc>  // b.pmore
  443560:	ldr	x19, [x1, #16]
  443564:	ldr	x0, [x5, #8]
  443568:	str	x0, [sp, #456]
  44356c:	ldr	w0, [x5, #16]
  443570:	str	w0, [sp, #452]
  443574:	add	x5, sp, #0x1c4
  443578:	add	x4, sp, #0x1c8
  44357c:	mov	x3, x27
  443580:	ldr	x21, [sp, #120]
  443584:	mov	x2, x21
  443588:	mov	x1, x19
  44358c:	mov	x0, x20
  443590:	bl	440620 <ferror@plt+0x3d8f0>
  443594:	cbnz	w0, 4436e4 <ferror@plt+0x409b4>
  443598:	ldr	x4, [x19]
  44359c:	ldr	w3, [sp, #452]
  4435a0:	ldr	x2, [sp, #456]
  4435a4:	mov	x1, x20
  4435a8:	mov	x0, x27
  4435ac:	blr	x21
  4435b0:	ldp	x19, x20, [sp, #32]
  4435b4:	ldp	x21, x22, [sp, #48]
  4435b8:	ldp	x27, x28, [sp, #96]
  4435bc:	b	442684 <ferror@plt+0x3f954>
  4435c0:	mov	x4, #0x0                   	// #0
  4435c4:	ldr	w3, [x5, #16]
  4435c8:	ldr	x2, [x5, #8]
  4435cc:	mov	x1, x20
  4435d0:	mov	x0, x27
  4435d4:	ldr	x5, [sp, #120]
  4435d8:	blr	x5
  4435dc:	ldp	x19, x20, [sp, #32]
  4435e0:	ldp	x21, x22, [sp, #48]
  4435e4:	ldp	x27, x28, [sp, #96]
  4435e8:	b	442684 <ferror@plt+0x3f954>
  4435ec:	ldr	x8, [x4, #128]
  4435f0:	cbz	x8, 44349c <ferror@plt+0x4076c>
  4435f4:	ldr	x3, [x4, #120]
  4435f8:	mov	x6, x8
  4435fc:	mov	x4, #0x0                   	// #0
  443600:	b	4434cc <ferror@plt+0x4079c>
  443604:	ldr	x0, [x4, #80]
  443608:	cbz	x0, 4433f8 <ferror@plt+0x406c8>
  44360c:	ldr	x0, [x19, #16]
  443610:	mov	x4, #0x0                   	// #0
  443614:	mov	w3, #0x0                   	// #0
  443618:	ldr	x2, [x0, #80]
  44361c:	mov	x1, x20
  443620:	mov	x0, x27
  443624:	ldr	x5, [sp, #120]
  443628:	blr	x5
  44362c:	ldp	x19, x20, [sp, #32]
  443630:	ldp	x21, x22, [sp, #48]
  443634:	ldp	x27, x28, [sp, #96]
  443638:	b	442684 <ferror@plt+0x3f954>
  44363c:	ldr	x28, [x19, #16]
  443640:	stp	xzr, xzr, [sp, #320]
  443644:	stp	xzr, xzr, [sp, #336]
  443648:	str	x21, [sp, #176]
  44364c:	add	x25, sp, #0x140
  443650:	b	44318c <ferror@plt+0x4045c>
  443654:	stp	x21, x22, [sp, #48]
  443658:	mov	x19, x1
  44365c:	asr	x0, x5, #3
  443660:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  443664:	movk	x5, #0xaaab
  443668:	mul	x0, x0, x5
  44366c:	add	x0, x0, #0x1
  443670:	mov	x1, x5
  443674:	cmp	x6, x0
  443678:	b.ls	4436b0 <ferror@plt+0x40980>  // b.plast
  44367c:	ldr	x0, [x19, #24]
  443680:	cmp	x0, x20
  443684:	b.hi	4436b0 <ferror@plt+0x40980>  // b.pmore
  443688:	ldr	x0, [x19, #32]
  44368c:	cmp	x0, x20
  443690:	b.ls	4436b0 <ferror@plt+0x40980>  // b.plast
  443694:	add	x19, x19, #0x18
  443698:	sub	x0, x19, x2
  44369c:	asr	x0, x0, #3
  4436a0:	mul	x0, x0, x1
  4436a4:	add	x0, x0, #0x1
  4436a8:	cmp	x6, x0
  4436ac:	b.hi	44367c <ferror@plt+0x4094c>  // b.pmore
  4436b0:	ldr	x22, [x19, #16]
  4436b4:	ldr	x21, [x22, #104]
  4436b8:	cmp	x2, x19
  4436bc:	b.cc	4426c0 <ferror@plt+0x3f990>  // b.lo, b.ul, b.last
  4436c0:	ldr	w0, [x24, #8]
  4436c4:	cbnz	w0, 4426e4 <ferror@plt+0x3f9b4>
  4436c8:	cbz	x21, 4426f0 <ferror@plt+0x3f9c0>
  4436cc:	cmn	x21, #0x1
  4436d0:	b.eq	443384 <ferror@plt+0x40654>  // b.none
  4436d4:	ldr	x4, [x19, #16]
  4436d8:	ldr	x3, [x4, #112]
  4436dc:	mov	x2, #0x0                   	// #0
  4436e0:	b	4433bc <ferror@plt+0x4068c>
  4436e4:	ldp	x19, x20, [sp, #32]
  4436e8:	ldp	x21, x22, [sp, #48]
  4436ec:	ldp	x27, x28, [sp, #96]
  4436f0:	b	442684 <ferror@plt+0x3f954>
  4436f4:	stp	x29, x30, [sp, #-96]!
  4436f8:	mov	x29, sp
  4436fc:	stp	x19, x20, [sp, #16]
  443700:	stp	x21, x22, [sp, #32]
  443704:	stp	x23, x24, [sp, #48]
  443708:	mov	x20, x0
  44370c:	mov	x23, x1
  443710:	mov	x21, x2
  443714:	mov	x24, x3
  443718:	mov	x22, x4
  44371c:	ldr	w0, [x0, #8]
  443720:	cbnz	w0, 443770 <ferror@plt+0x40a40>
  443724:	ldr	x19, [x20, #32]
  443728:	cbz	x19, 4437bc <ferror@plt+0x40a8c>
  44372c:	str	x25, [sp, #64]
  443730:	add	x25, sp, #0x5c
  443734:	mov	x6, x25
  443738:	mov	x5, x22
  44373c:	mov	x4, x24
  443740:	mov	x3, x21
  443744:	mov	x2, x23
  443748:	mov	x1, x19
  44374c:	mov	x0, x20
  443750:	bl	4425d4 <ferror@plt+0x3f8a4>
  443754:	cbnz	w0, 4437e8 <ferror@plt+0x40ab8>
  443758:	ldr	w1, [sp, #92]
  44375c:	cbnz	w1, 4437f0 <ferror@plt+0x40ac0>
  443760:	ldr	x19, [x19]
  443764:	cbnz	x19, 443734 <ferror@plt+0x40a04>
  443768:	ldr	x25, [sp, #64]
  44376c:	b	4437bc <ferror@plt+0x40a8c>
  443770:	str	x25, [sp, #64]
  443774:	add	x19, x20, #0x20
  443778:	add	x25, sp, #0x5c
  44377c:	ldar	x19, [x19]
  443780:	cbz	x19, 4437b8 <ferror@plt+0x40a88>
  443784:	mov	x6, x25
  443788:	mov	x5, x22
  44378c:	mov	x4, x24
  443790:	mov	x3, x21
  443794:	mov	x2, x23
  443798:	mov	x1, x19
  44379c:	mov	x0, x20
  4437a0:	bl	4425d4 <ferror@plt+0x3f8a4>
  4437a4:	cbnz	w0, 4437f8 <ferror@plt+0x40ac8>
  4437a8:	ldr	w1, [sp, #92]
  4437ac:	cbz	w1, 44377c <ferror@plt+0x40a4c>
  4437b0:	ldr	x25, [sp, #64]
  4437b4:	b	4437d4 <ferror@plt+0x40aa4>
  4437b8:	ldr	x25, [sp, #64]
  4437bc:	mov	x4, #0x0                   	// #0
  4437c0:	mov	w3, #0x0                   	// #0
  4437c4:	mov	x2, #0x0                   	// #0
  4437c8:	mov	x1, x23
  4437cc:	mov	x0, x22
  4437d0:	blr	x21
  4437d4:	ldp	x19, x20, [sp, #16]
  4437d8:	ldp	x21, x22, [sp, #32]
  4437dc:	ldp	x23, x24, [sp, #48]
  4437e0:	ldp	x29, x30, [sp], #96
  4437e4:	ret
  4437e8:	ldr	x25, [sp, #64]
  4437ec:	b	4437d4 <ferror@plt+0x40aa4>
  4437f0:	ldr	x25, [sp, #64]
  4437f4:	b	4437d4 <ferror@plt+0x40aa4>
  4437f8:	ldr	x25, [sp, #64]
  4437fc:	b	4437d4 <ferror@plt+0x40aa4>
  443800:	sub	sp, sp, #0x290
  443804:	stp	x29, x30, [sp, #48]
  443808:	add	x29, sp, #0x30
  44380c:	stp	x19, x20, [sp, #64]
  443810:	stp	x21, x22, [sp, #80]
  443814:	stp	x23, x24, [sp, #96]
  443818:	stp	x27, x28, [sp, #128]
  44381c:	mov	x24, x0
  443820:	str	x1, [sp, #208]
  443824:	str	x2, [sp, #272]
  443828:	str	x3, [sp, #264]
  44382c:	str	x4, [sp, #280]
  443830:	str	x5, [sp, #288]
  443834:	str	x6, [sp, #216]
  443838:	str	x7, [sp, #168]
  44383c:	ldr	x23, [sp, #704]
  443840:	ldr	x27, [sp, #712]
  443844:	stp	xzr, xzr, [sp, #336]
  443848:	str	xzr, [sp, #352]
  44384c:	stp	xzr, xzr, [sp, #368]
  443850:	str	xzr, [sp, #384]
  443854:	str	xzr, [sp, #360]
  443858:	str	xzr, [sp, #392]
  44385c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  443860:	add	x0, x0, #0xc50
  443864:	str	x0, [sp, #400]
  443868:	str	x2, [sp, #408]
  44386c:	str	x2, [sp, #416]
  443870:	str	x3, [sp, #424]
  443874:	ldr	w0, [sp, #688]
  443878:	str	w0, [sp, #432]
  44387c:	str	x23, [sp, #440]
  443880:	str	x27, [sp, #448]
  443884:	str	wzr, [sp, #456]
  443888:	add	x0, sp, #0x200
  44388c:	stp	xzr, xzr, [x0, #-200]
  443890:	str	xzr, [sp, #328]
  443894:	cbz	x3, 4438d0 <ferror@plt+0x40ba0>
  443898:	stp	x25, x26, [sp, #112]
  44389c:	str	xzr, [sp, #160]
  4438a0:	str	xzr, [sp, #176]
  4438a4:	add	x28, sp, #0x190
  4438a8:	add	x0, sp, #0x138
  4438ac:	str	x0, [sp, #224]
  4438b0:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x26c60>
  4438b4:	add	x0, x0, #0xc70
  4438b8:	str	x0, [sp, #232]
  4438bc:	add	x0, sp, #0x150
  4438c0:	str	x0, [sp, #240]
  4438c4:	mov	x26, x24
  4438c8:	mov	x24, x27
  4438cc:	b	443b04 <ferror@plt+0x40dd4>
  4438d0:	str	x3, [sp, #160]
  4438d4:	b	443e3c <ferror@plt+0x4110c>
  4438d8:	mov	x27, x24
  4438dc:	mov	x24, x26
  4438e0:	b	443934 <ferror@plt+0x40c04>
  4438e4:	mov	x0, x28
  4438e8:	bl	440c08 <ferror@plt+0x3ded8>
  4438ec:	str	x0, [sp, #152]
  4438f0:	mov	w0, #0x1                   	// #1
  4438f4:	str	w0, [sp, #192]
  4438f8:	b	443b2c <ferror@plt+0x40dfc>
  4438fc:	mov	x27, x24
  443900:	mov	x24, x26
  443904:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  443908:	add	x1, x1, #0x898
  44390c:	add	x0, sp, #0x1d0
  443910:	bl	440ac0 <ferror@plt+0x3dd90>
  443914:	b	443934 <ferror@plt+0x40c04>
  443918:	mov	x27, x24
  44391c:	mov	x24, x26
  443920:	mov	w2, #0x0                   	// #0
  443924:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  443928:	add	x1, x1, #0x8b8
  44392c:	mov	x0, x27
  443930:	blr	x23
  443934:	ldr	x0, [sp, #160]
  443938:	cbz	x0, 4439a8 <ferror@plt+0x40c78>
  44393c:	ldr	x19, [sp, #312]
  443940:	add	x21, x19, x0, lsl #3
  443944:	mov	x20, #0x88                  	// #136
  443948:	ldr	x1, [x19]
  44394c:	mov	x3, x27
  443950:	mov	x2, x23
  443954:	add	x1, x1, #0x58
  443958:	mov	x0, x24
  44395c:	bl	44253c <ferror@plt+0x3f80c>
  443960:	mov	x4, x27
  443964:	mov	x3, x23
  443968:	mov	x2, x20
  44396c:	ldr	x1, [x19], #8
  443970:	mov	x0, x24
  443974:	bl	43c934 <ferror@plt+0x39c04>
  443978:	cmp	x21, x19
  44397c:	b.ne	443948 <ferror@plt+0x40c18>  // b.any
  443980:	ldr	x0, [sp, #328]
  443984:	ldr	x1, [sp, #320]
  443988:	add	x0, x0, x1
  44398c:	str	x0, [sp, #328]
  443990:	str	xzr, [sp, #320]
  443994:	mov	x3, x27
  443998:	mov	x2, x23
  44399c:	add	x1, sp, #0x138
  4439a0:	mov	x0, x24
  4439a4:	bl	43cc8c <ferror@plt+0x39f5c>
  4439a8:	ldr	x0, [sp, #360]
  4439ac:	cbnz	x0, 443ff0 <ferror@plt+0x412c0>
  4439b0:	ldp	x25, x26, [sp, #112]
  4439b4:	mov	w0, #0x0                   	// #0
  4439b8:	b	443f80 <ferror@plt+0x41250>
  4439bc:	mov	x0, x20
  4439c0:	bl	440d88 <ferror@plt+0x3e058>
  4439c4:	mov	x0, x20
  4439c8:	bl	440d88 <ferror@plt+0x3e058>
  4439cc:	cbz	x0, 443a04 <ferror@plt+0x40cd4>
  4439d0:	ldr	w0, [sp, #648]
  4439d4:	cbnz	w0, 443fc0 <ferror@plt+0x41290>
  4439d8:	add	x21, x21, #0x1
  4439dc:	mov	x0, x20
  4439e0:	bl	440d88 <ferror@plt+0x3e058>
  4439e4:	mov	x0, x20
  4439e8:	bl	440d54 <ferror@plt+0x3e024>
  4439ec:	mov	x0, x20
  4439f0:	bl	440d88 <ferror@plt+0x3e058>
  4439f4:	cbz	x0, 4439bc <ferror@plt+0x40c8c>
  4439f8:	mov	x0, x20
  4439fc:	bl	440d88 <ferror@plt+0x3e058>
  443a00:	b	4439ec <ferror@plt+0x40cbc>
  443a04:	mov	x27, x0
  443a08:	str	x0, [sp, #200]
  443a0c:	ldr	w0, [sp, #648]
  443a10:	cbnz	w0, 443fcc <ferror@plt+0x4129c>
  443a14:	cbnz	x21, 443c68 <ferror@plt+0x40f38>
  443a18:	add	x0, sp, #0x1d0
  443a1c:	bl	440d54 <ferror@plt+0x3e024>
  443a20:	and	w2, w0, #0xff
  443a24:	ldr	x3, [sp, #176]
  443a28:	str	x3, [x19, #24]
  443a2c:	ldr	w4, [sp, #192]
  443a30:	cmp	w4, #0x0
  443a34:	mov	x0, #0xc                   	// #12
  443a38:	mov	x1, #0x4                   	// #4
  443a3c:	csel	x0, x0, x1, ne  // ne = any
  443a40:	ldr	x1, [sp, #152]
  443a44:	add	x0, x0, x1
  443a48:	add	x0, x3, x0
  443a4c:	str	x0, [sp, #176]
  443a50:	str	x0, [x19, #32]
  443a54:	ldr	x1, [sp, #480]
  443a58:	str	x1, [x19]
  443a5c:	ldr	x0, [sp, #488]
  443a60:	str	x0, [x19, #8]
  443a64:	ldr	x0, [sp, #184]
  443a68:	sub	x1, x1, x0
  443a6c:	str	x1, [x19, #16]
  443a70:	ldr	w0, [sp, #196]
  443a74:	str	w0, [x19, #40]
  443a78:	str	w4, [x19, #44]
  443a7c:	str	w2, [x19, #48]
  443a80:	str	xzr, [x19, #64]
  443a84:	str	xzr, [x19, #72]
  443a88:	str	xzr, [x19, #80]
  443a8c:	str	xzr, [x19, #56]
  443a90:	str	xzr, [x19, #104]
  443a94:	str	xzr, [x19, #112]
  443a98:	str	xzr, [x19, #120]
  443a9c:	str	xzr, [x19, #128]
  443aa0:	add	x0, sp, #0x250
  443aa4:	str	x0, [sp, #40]
  443aa8:	ldr	x0, [sp, #240]
  443aac:	str	x0, [sp, #32]
  443ab0:	str	x19, [sp, #24]
  443ab4:	str	x24, [sp, #16]
  443ab8:	str	x23, [sp, #8]
  443abc:	ldr	x0, [sp, #696]
  443ac0:	str	x0, [sp]
  443ac4:	ldr	w7, [sp, #688]
  443ac8:	ldr	x6, [sp, #664]
  443acc:	ldr	x5, [sp, #656]
  443ad0:	ldr	x4, [sp, #680]
  443ad4:	ldr	x3, [sp, #672]
  443ad8:	add	x2, sp, #0x1d0
  443adc:	ldr	x1, [sp, #208]
  443ae0:	mov	x0, x26
  443ae4:	bl	4418c0 <ferror@plt+0x3eb90>
  443ae8:	cbz	w0, 444058 <ferror@plt+0x41328>
  443aec:	ldr	w0, [sp, #520]
  443af0:	cbnz	w0, 443fe4 <ferror@plt+0x412b4>
  443af4:	ldr	x0, [sp, #424]
  443af8:	cbz	x0, 443e28 <ferror@plt+0x410f8>
  443afc:	ldr	w0, [sp, #456]
  443b00:	cbnz	w0, 4438d8 <ferror@plt+0x40ba8>
  443b04:	ldr	x0, [sp, #416]
  443b08:	str	x0, [sp, #184]
  443b0c:	mov	x0, x28
  443b10:	bl	440b88 <ferror@plt+0x3de58>
  443b14:	mov	w1, w0
  443b18:	str	x1, [sp, #152]
  443b1c:	str	wzr, [sp, #192]
  443b20:	mov	x1, #0xffffffff            	// #4294967295
  443b24:	cmp	x1, w0, uxtw
  443b28:	b.eq	4438e4 <ferror@plt+0x40bb4>  // b.none
  443b2c:	ldp	x0, x1, [x28]
  443b30:	stp	x0, x1, [sp, #464]
  443b34:	ldp	x0, x1, [x28, #16]
  443b38:	stp	x0, x1, [sp, #480]
  443b3c:	ldp	x0, x1, [x28, #32]
  443b40:	stp	x0, x1, [sp, #496]
  443b44:	ldp	x0, x1, [x28, #48]
  443b48:	add	x2, sp, #0x200
  443b4c:	stp	x0, x1, [x2]
  443b50:	ldr	x0, [sp, #152]
  443b54:	str	x0, [sp, #488]
  443b58:	mov	x1, x0
  443b5c:	mov	x0, x28
  443b60:	bl	440b1c <ferror@plt+0x3ddec>
  443b64:	cbz	w0, 443f9c <ferror@plt+0x4126c>
  443b68:	add	x0, sp, #0x1d0
  443b6c:	bl	440cfc <ferror@plt+0x3dfcc>
  443b70:	and	w0, w0, #0xffff
  443b74:	str	w0, [sp, #196]
  443b78:	sub	w0, w0, #0x2
  443b7c:	cmp	w0, #0x2
  443b80:	b.hi	4438fc <ferror@plt+0x40bcc>  // b.pmore
  443b84:	ldr	x4, [sp, #224]
  443b88:	mov	x3, x24
  443b8c:	mov	x2, x23
  443b90:	mov	x1, #0x8                   	// #8
  443b94:	mov	x0, x26
  443b98:	bl	43cb4c <ferror@plt+0x39e1c>
  443b9c:	mov	x20, x0
  443ba0:	cbz	x0, 443fa8 <ferror@plt+0x41278>
  443ba4:	mov	x3, x24
  443ba8:	mov	x2, x23
  443bac:	mov	x1, #0x88                  	// #136
  443bb0:	mov	x0, x26
  443bb4:	bl	43c9e0 <ferror@plt+0x39cb0>
  443bb8:	mov	x19, x0
  443bbc:	cbz	x0, 443fb4 <ferror@plt+0x41284>
  443bc0:	str	x0, [x20]
  443bc4:	ldr	x0, [sp, #160]
  443bc8:	add	x0, x0, #0x1
  443bcc:	str	x0, [sp, #160]
  443bd0:	add	x0, x19, #0x58
  443bd4:	str	x0, [sp, #248]
  443bd8:	stp	xzr, xzr, [x19, #88]
  443bdc:	ldr	w1, [sp, #192]
  443be0:	add	x0, sp, #0x1d0
  443be4:	bl	440cd8 <ferror@plt+0x3dfa8>
  443be8:	str	xzr, [x19, #88]
  443bec:	str	xzr, [x19, #96]
  443bf0:	ldr	x1, [sp, #168]
  443bf4:	cmp	x1, x0
  443bf8:	b.ls	443918 <ferror@plt+0x40be8>  // b.plast
  443bfc:	ldr	x1, [sp, #232]
  443c00:	str	x1, [sp, #528]
  443c04:	ldr	x1, [sp, #216]
  443c08:	str	x1, [sp, #536]
  443c0c:	add	x1, x1, x0
  443c10:	str	x1, [sp, #544]
  443c14:	ldr	x1, [sp, #168]
  443c18:	sub	x0, x1, x0
  443c1c:	str	x0, [sp, #552]
  443c20:	ldr	w0, [sp, #688]
  443c24:	str	w0, [sp, #560]
  443c28:	str	x23, [sp, #568]
  443c2c:	str	x24, [sp, #576]
  443c30:	str	wzr, [sp, #584]
  443c34:	add	x0, sp, #0x200
  443c38:	ldp	x0, x1, [x0, #16]
  443c3c:	add	x2, sp, #0x200
  443c40:	stp	x0, x1, [x2, #80]
  443c44:	ldp	x0, x1, [x2, #32]
  443c48:	stp	x0, x1, [x2, #96]
  443c4c:	ldp	x0, x1, [x2, #48]
  443c50:	stp	x0, x1, [x2, #112]
  443c54:	ldp	x0, x1, [x2, #64]
  443c58:	stp	x0, x1, [x2, #128]
  443c5c:	mov	x21, #0x0                   	// #0
  443c60:	add	x20, sp, #0x250
  443c64:	b	4439c4 <ferror@plt+0x40c94>
  443c68:	lsl	x20, x21, #5
  443c6c:	mov	x3, x24
  443c70:	mov	x2, x23
  443c74:	mov	x1, x20
  443c78:	mov	x0, x26
  443c7c:	bl	43c9e0 <ferror@plt+0x39cb0>
  443c80:	str	x0, [x19, #96]
  443c84:	cbz	x0, 443fd8 <ferror@plt+0x412a8>
  443c88:	str	x21, [x19, #88]
  443c8c:	mov	x2, x20
  443c90:	mov	w1, #0x0                   	// #0
  443c94:	bl	402890 <memset@plt>
  443c98:	ldr	w0, [sp, #584]
  443c9c:	cbnz	w0, 443de0 <ferror@plt+0x410b0>
  443ca0:	add	x20, sp, #0x210
  443ca4:	str	x26, [sp, #256]
  443ca8:	str	x23, [sp, #704]
  443cac:	str	x24, [sp, #712]
  443cb0:	str	x28, [sp, #296]
  443cb4:	b	443d14 <ferror@plt+0x40fe4>
  443cb8:	add	x21, x21, #0x1
  443cbc:	mov	x0, x22
  443cc0:	bl	440d88 <ferror@plt+0x3e058>
  443cc4:	mov	x0, x22
  443cc8:	bl	440d88 <ferror@plt+0x3e058>
  443ccc:	mov	x24, x0
  443cd0:	cbnz	x0, 443cb8 <ferror@plt+0x40f88>
  443cd4:	cbnz	x21, 443d6c <ferror@plt+0x4103c>
  443cd8:	mov	x0, x20
  443cdc:	bl	440d88 <ferror@plt+0x3e058>
  443ce0:	mov	x0, x20
  443ce4:	bl	440d88 <ferror@plt+0x3e058>
  443ce8:	mov	x22, #0x0                   	// #0
  443cec:	ldr	x1, [x19, #96]
  443cf0:	add	x0, x1, x27
  443cf4:	str	x23, [x1, x27]
  443cf8:	str	w28, [x0, #8]
  443cfc:	str	w26, [x0, #12]
  443d00:	str	x21, [x0, #16]
  443d04:	str	x22, [x0, #24]
  443d08:	add	x27, x27, #0x20
  443d0c:	ldr	w0, [sp, #584]
  443d10:	cbnz	w0, 443dbc <ferror@plt+0x4108c>
  443d14:	mov	x0, x20
  443d18:	bl	440d88 <ferror@plt+0x3e058>
  443d1c:	mov	x23, x0
  443d20:	cbz	x0, 443dfc <ferror@plt+0x410cc>
  443d24:	mov	x0, x20
  443d28:	bl	440d88 <ferror@plt+0x3e058>
  443d2c:	mov	x28, x0
  443d30:	mov	x0, x20
  443d34:	bl	440d54 <ferror@plt+0x3e024>
  443d38:	and	w26, w0, #0xff
  443d3c:	ldp	x0, x1, [x20]
  443d40:	add	x2, sp, #0x200
  443d44:	stp	x0, x1, [x2, #80]
  443d48:	ldp	x0, x1, [x20, #16]
  443d4c:	stp	x0, x1, [x2, #96]
  443d50:	ldp	x0, x1, [x20, #32]
  443d54:	stp	x0, x1, [x2, #112]
  443d58:	ldp	x0, x1, [x20, #48]
  443d5c:	stp	x0, x1, [x2, #128]
  443d60:	ldr	x21, [sp, #200]
  443d64:	add	x22, sp, #0x250
  443d68:	b	443cc4 <ferror@plt+0x40f94>
  443d6c:	ldr	x3, [sp, #712]
  443d70:	ldr	x2, [sp, #704]
  443d74:	lsl	x1, x21, #3
  443d78:	ldr	x0, [sp, #256]
  443d7c:	bl	43c9e0 <ferror@plt+0x39cb0>
  443d80:	mov	x22, x0
  443d84:	cbz	x0, 443dec <ferror@plt+0x410bc>
  443d88:	mov	x25, x0
  443d8c:	mov	x21, x24
  443d90:	mov	x0, x20
  443d94:	bl	440d88 <ferror@plt+0x3e058>
  443d98:	mov	x24, x0
  443d9c:	mov	x0, x20
  443da0:	bl	440d88 <ferror@plt+0x3e058>
  443da4:	cbz	x24, 443cec <ferror@plt+0x40fbc>
  443da8:	str	w24, [x25]
  443dac:	str	w0, [x25, #4]
  443db0:	add	x21, x21, #0x1
  443db4:	add	x25, x25, #0x8
  443db8:	b	443d90 <ferror@plt+0x41060>
  443dbc:	ldr	x24, [sp, #256]
  443dc0:	ldr	x23, [sp, #704]
  443dc4:	ldr	x27, [sp, #712]
  443dc8:	mov	x3, x27
  443dcc:	mov	x2, x23
  443dd0:	ldr	x1, [sp, #248]
  443dd4:	mov	x0, x24
  443dd8:	bl	44253c <ferror@plt+0x3f80c>
  443ddc:	b	443934 <ferror@plt+0x40c04>
  443de0:	mov	x27, x24
  443de4:	mov	x24, x26
  443de8:	b	443dc8 <ferror@plt+0x41098>
  443dec:	ldr	x24, [sp, #256]
  443df0:	ldr	x23, [sp, #704]
  443df4:	ldr	x27, [sp, #712]
  443df8:	b	443dc8 <ferror@plt+0x41098>
  443dfc:	ldr	x26, [sp, #256]
  443e00:	ldr	x23, [sp, #704]
  443e04:	ldr	x24, [sp, #712]
  443e08:	ldr	x28, [sp, #296]
  443e0c:	adrp	x3, 440000 <ferror@plt+0x3d2d0>
  443e10:	add	x3, x3, #0x600
  443e14:	mov	x2, #0x20                  	// #32
  443e18:	ldr	x1, [x19, #88]
  443e1c:	ldr	x0, [x19, #96]
  443e20:	bl	44408c <ferror@plt+0x4135c>
  443e24:	b	443a18 <ferror@plt+0x40ce8>
  443e28:	mov	x27, x24
  443e2c:	mov	x24, x26
  443e30:	ldr	w0, [sp, #456]
  443e34:	cbnz	w0, 443934 <ferror@plt+0x40c04>
  443e38:	ldp	x25, x26, [sp, #112]
  443e3c:	add	x0, sp, #0x200
  443e40:	ldp	x0, x1, [x0, #-200]
  443e44:	stp	x0, x1, [sp, #368]
  443e48:	ldr	x0, [sp, #328]
  443e4c:	str	x0, [sp, #384]
  443e50:	ldr	x0, [sp, #160]
  443e54:	str	x0, [sp, #392]
  443e58:	mov	x3, x27
  443e5c:	mov	x2, x23
  443e60:	add	x1, sp, #0x150
  443e64:	mov	x0, x24
  443e68:	bl	43cc8c <ferror@plt+0x39f5c>
  443e6c:	cbz	w0, 4439b4 <ferror@plt+0x40c84>
  443e70:	mov	x3, x27
  443e74:	mov	x2, x23
  443e78:	add	x1, sp, #0x170
  443e7c:	mov	x0, x24
  443e80:	bl	43cc8c <ferror@plt+0x39f5c>
  443e84:	cbz	w0, 4439b4 <ferror@plt+0x40c84>
  443e88:	ldr	x20, [sp, #336]
  443e8c:	ldr	x22, [sp, #368]
  443e90:	ldr	x19, [sp, #360]
  443e94:	ldr	x21, [sp, #392]
  443e98:	adrp	x3, 440000 <ferror@plt+0x3d2d0>
  443e9c:	add	x3, x3, #0x568
  443ea0:	mov	x2, #0x18                  	// #24
  443ea4:	mov	x1, x19
  443ea8:	mov	x0, x20
  443eac:	bl	44408c <ferror@plt+0x4135c>
  443eb0:	mov	x3, x27
  443eb4:	mov	x2, x23
  443eb8:	mov	x1, #0xa0                  	// #160
  443ebc:	mov	x0, x24
  443ec0:	bl	43c9e0 <ferror@plt+0x39cb0>
  443ec4:	cbz	x0, 4439b4 <ferror@plt+0x40c84>
  443ec8:	str	xzr, [x0]
  443ecc:	ldr	x1, [sp, #696]
  443ed0:	str	x1, [x0, #8]
  443ed4:	ldr	x1, [sp, #208]
  443ed8:	str	x1, [x0, #16]
  443edc:	str	x20, [x0, #24]
  443ee0:	str	x19, [x0, #32]
  443ee4:	str	x22, [x0, #40]
  443ee8:	str	x21, [x0, #48]
  443eec:	ldr	x1, [sp, #272]
  443ef0:	str	x1, [x0, #56]
  443ef4:	ldr	x1, [sp, #264]
  443ef8:	str	x1, [x0, #64]
  443efc:	ldr	x1, [sp, #280]
  443f00:	str	x1, [x0, #72]
  443f04:	ldr	x1, [sp, #288]
  443f08:	str	x1, [x0, #80]
  443f0c:	ldr	x1, [sp, #656]
  443f10:	str	x1, [x0, #88]
  443f14:	ldr	x1, [sp, #664]
  443f18:	str	x1, [x0, #96]
  443f1c:	ldr	x1, [sp, #672]
  443f20:	str	x1, [x0, #104]
  443f24:	ldr	x1, [sp, #680]
  443f28:	str	x1, [x0, #112]
  443f2c:	ldr	w1, [sp, #688]
  443f30:	str	w1, [x0, #120]
  443f34:	stp	xzr, xzr, [x0, #128]
  443f38:	stp	xzr, xzr, [x0, #144]
  443f3c:	ldr	x1, [sp, #728]
  443f40:	cbz	x1, 443f48 <ferror@plt+0x41218>
  443f44:	str	x0, [x1]
  443f48:	ldr	w1, [x24, #8]
  443f4c:	add	x3, x24, #0x20
  443f50:	cbnz	w1, 444050 <ferror@plt+0x41320>
  443f54:	ldr	x1, [x24, #32]
  443f58:	cbz	x1, 444020 <ferror@plt+0x412f0>
  443f5c:	mov	x2, x1
  443f60:	ldr	x1, [x1]
  443f64:	cbnz	x1, 443f5c <ferror@plt+0x4122c>
  443f68:	str	x0, [x2]
  443f6c:	ldr	x1, [sp, #720]
  443f70:	adrp	x0, 443000 <ferror@plt+0x402d0>
  443f74:	add	x0, x0, #0x6f4
  443f78:	str	x0, [x1]
  443f7c:	mov	w0, #0x1                   	// #1
  443f80:	ldp	x19, x20, [sp, #64]
  443f84:	ldp	x21, x22, [sp, #80]
  443f88:	ldp	x23, x24, [sp, #96]
  443f8c:	ldp	x27, x28, [sp, #128]
  443f90:	ldp	x29, x30, [sp, #48]
  443f94:	add	sp, sp, #0x290
  443f98:	ret
  443f9c:	mov	x27, x24
  443fa0:	mov	x24, x26
  443fa4:	b	443934 <ferror@plt+0x40c04>
  443fa8:	mov	x27, x24
  443fac:	mov	x24, x26
  443fb0:	b	443934 <ferror@plt+0x40c04>
  443fb4:	mov	x27, x24
  443fb8:	mov	x24, x26
  443fbc:	b	443934 <ferror@plt+0x40c04>
  443fc0:	mov	x27, x24
  443fc4:	mov	x24, x26
  443fc8:	b	443934 <ferror@plt+0x40c04>
  443fcc:	mov	x27, x24
  443fd0:	mov	x24, x26
  443fd4:	b	443934 <ferror@plt+0x40c04>
  443fd8:	mov	x27, x24
  443fdc:	mov	x24, x26
  443fe0:	b	443934 <ferror@plt+0x40c04>
  443fe4:	mov	x27, x24
  443fe8:	mov	x24, x26
  443fec:	b	443934 <ferror@plt+0x40c04>
  443ff0:	ldr	x0, [sp, #352]
  443ff4:	ldr	x1, [sp, #344]
  443ff8:	add	x0, x0, x1
  443ffc:	str	x0, [sp, #352]
  444000:	str	xzr, [sp, #344]
  444004:	mov	x3, x27
  444008:	mov	x2, x23
  44400c:	add	x1, sp, #0x150
  444010:	mov	x0, x24
  444014:	bl	43cc8c <ferror@plt+0x39f5c>
  444018:	ldp	x25, x26, [sp, #112]
  44401c:	b	4439b4 <ferror@plt+0x40c84>
  444020:	add	x2, x24, #0x20
  444024:	b	443f68 <ferror@plt+0x41238>
  444028:	mov	x2, x1
  44402c:	ldar	x1, [x2]
  444030:	cbnz	x1, 444028 <ferror@plt+0x412f8>
  444034:	ldxr	x1, [x2]
  444038:	cbnz	x1, 444044 <ferror@plt+0x41314>
  44403c:	stlxr	w4, x0, [x2]
  444040:	cbnz	w4, 444034 <ferror@plt+0x41304>
  444044:	cmp	x1, #0x0
  444048:	dmb	ish
  44404c:	b.eq	443f6c <ferror@plt+0x4123c>  // b.none
  444050:	mov	x2, x3
  444054:	b	44402c <ferror@plt+0x412fc>
  444058:	mov	x27, x24
  44405c:	mov	x24, x26
  444060:	b	443934 <ferror@plt+0x40c04>
  444064:	cbz	x2, 444088 <ferror@plt+0x41358>
  444068:	mov	x3, #0x0                   	// #0
  44406c:	ldrb	w4, [x0, x3]
  444070:	ldrb	w5, [x1, x3]
  444074:	strb	w5, [x0, x3]
  444078:	strb	w4, [x1, x3]
  44407c:	add	x3, x3, #0x1
  444080:	cmp	x2, x3
  444084:	b.ne	44406c <ferror@plt+0x4133c>  // b.any
  444088:	ret
  44408c:	stp	x29, x30, [sp, #-80]!
  444090:	mov	x29, sp
  444094:	stp	x21, x22, [sp, #32]
  444098:	stp	x23, x24, [sp, #48]
  44409c:	stp	x25, x26, [sp, #64]
  4440a0:	mov	x23, x0
  4440a4:	mov	x24, x1
  4440a8:	mov	x22, x2
  4440ac:	mov	x26, x3
  4440b0:	cmp	x1, #0x1
  4440b4:	b.ls	4441a8 <ferror@plt+0x41478>  // b.plast
  4440b8:	stp	x19, x20, [sp, #16]
  4440bc:	b	444178 <ferror@plt+0x41448>
  4440c0:	mov	x2, x22
  4440c4:	mov	x1, x19
  4440c8:	madd	x0, x22, x21, x23
  4440cc:	bl	444064 <ferror@plt+0x41334>
  4440d0:	add	x20, x20, #0x1
  4440d4:	add	x19, x19, x22
  4440d8:	cmp	x20, x24
  4440dc:	b.eq	444148 <ferror@plt+0x41418>  // b.none
  4440e0:	mov	x1, x19
  4440e4:	mov	x0, x23
  4440e8:	blr	x26
  4440ec:	cmp	w0, #0x0
  4440f0:	b.le	4440d0 <ferror@plt+0x413a0>
  4440f4:	add	x21, x21, #0x1
  4440f8:	cmp	x21, x20
  4440fc:	b.eq	4440d0 <ferror@plt+0x413a0>  // b.none
  444100:	b	4440c0 <ferror@plt+0x41390>
  444104:	mov	x2, x22
  444108:	madd	x1, x21, x22, x23
  44410c:	mov	x0, x23
  444110:	bl	444064 <ferror@plt+0x41334>
  444114:	cmp	x24, x21, lsl #1
  444118:	b.hi	44414c <ferror@plt+0x4141c>  // b.pmore
  44411c:	sub	x1, x24, #0x1
  444120:	madd	x0, x21, x22, x22
  444124:	mov	x3, x26
  444128:	mov	x2, x22
  44412c:	sub	x1, x1, x21
  444130:	add	x0, x23, x0
  444134:	bl	44408c <ferror@plt+0x4135c>
  444138:	mov	x24, x21
  44413c:	b	444170 <ferror@plt+0x41440>
  444140:	mov	x21, #0x0                   	// #0
  444144:	b	444114 <ferror@plt+0x413e4>
  444148:	cbnz	x21, 444104 <ferror@plt+0x413d4>
  44414c:	mov	x3, x26
  444150:	mov	x2, x22
  444154:	mov	x1, x21
  444158:	mov	x0, x23
  44415c:	bl	44408c <ferror@plt+0x4135c>
  444160:	madd	x0, x21, x22, x22
  444164:	add	x23, x23, x0
  444168:	sub	x24, x24, #0x1
  44416c:	sub	x24, x24, x21
  444170:	cmp	x24, #0x1
  444174:	b.ls	4441a4 <ferror@plt+0x41474>  // b.plast
  444178:	lsr	x1, x24, #1
  44417c:	mov	x2, x22
  444180:	madd	x1, x1, x22, x23
  444184:	mov	x0, x23
  444188:	bl	444064 <ferror@plt+0x41334>
  44418c:	cmp	x24, #0x1
  444190:	b.ls	444140 <ferror@plt+0x41410>  // b.plast
  444194:	add	x19, x23, x22
  444198:	mov	x21, #0x0                   	// #0
  44419c:	mov	x20, #0x1                   	// #1
  4441a0:	b	4440e0 <ferror@plt+0x413b0>
  4441a4:	ldp	x19, x20, [sp, #16]
  4441a8:	ldp	x21, x22, [sp, #32]
  4441ac:	ldp	x23, x24, [sp, #48]
  4441b0:	ldp	x25, x26, [sp, #64]
  4441b4:	ldp	x29, x30, [sp], #80
  4441b8:	ret
  4441bc:	mov	w2, w0
  4441c0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4441c4:	add	x1, x1, #0xba0
  4441c8:	mov	w0, #0xffffffff            	// #-1
  4441cc:	cmp	w2, w0
  4441d0:	b.eq	4441e4 <ferror@plt+0x414b4>  // b.none
  4441d4:	add	x1, x1, #0x18
  4441d8:	ldr	w0, [x1, #8]
  4441dc:	cbnz	w0, 4441cc <ferror@plt+0x4149c>
  4441e0:	b	4441f0 <ferror@plt+0x414c0>
  4441e4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4441e8:	str	w2, [x0, #1344]
  4441ec:	mov	w0, w2
  4441f0:	ret
  4441f4:	stp	x29, x30, [sp, #-48]!
  4441f8:	mov	x29, sp
  4441fc:	stp	x19, x20, [sp, #16]
  444200:	str	x21, [sp, #32]
  444204:	mov	x21, x0
  444208:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44420c:	add	x19, x19, #0xba0
  444210:	mov	w20, #0xffffffff            	// #-1
  444214:	ldr	x1, [x19]
  444218:	mov	x0, x21
  44421c:	bl	402a20 <strcmp@plt>
  444220:	cbz	w0, 444230 <ferror@plt+0x41500>
  444224:	add	x19, x19, #0x18
  444228:	ldr	w20, [x19, #8]
  44422c:	cbnz	w20, 444214 <ferror@plt+0x414e4>
  444230:	mov	w0, w20
  444234:	ldp	x19, x20, [sp, #16]
  444238:	ldr	x21, [sp, #32]
  44423c:	ldp	x29, x30, [sp], #48
  444240:	ret
  444244:	stp	x29, x30, [sp, #-32]!
  444248:	mov	x29, sp
  44424c:	str	x19, [sp, #16]
  444250:	bl	44f28c <ferror@plt+0x4c55c>
  444254:	mov	x19, x0
  444258:	cbz	x0, 44426c <ferror@plt+0x4153c>
  44425c:	bl	454450 <_obstack_memory_used@@Base+0xb0>
  444260:	cbz	w0, 44427c <ferror@plt+0x4154c>
  444264:	mov	x0, x19
  444268:	bl	4548b8 <_obstack_memory_used@@Base+0x518>
  44426c:	mov	x0, x19
  444270:	ldr	x19, [sp, #16]
  444274:	ldp	x29, x30, [sp], #32
  444278:	ret
  44427c:	mov	x0, x19
  444280:	bl	402a90 <free@plt>
  444284:	mov	x19, #0x0                   	// #0
  444288:	b	44426c <ferror@plt+0x4153c>
  44428c:	stp	x29, x30, [sp, #-112]!
  444290:	mov	x29, sp
  444294:	stp	x23, x24, [sp, #48]
  444298:	stp	x27, x28, [sp, #80]
  44429c:	mov	x24, x0
  4442a0:	mov	x2, #0x5                   	// #5
  4442a4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4442a8:	add	x1, x1, #0x960
  4442ac:	bl	402830 <strncmp@plt>
  4442b0:	add	x1, x24, #0x5
  4442b4:	cmp	w0, #0x0
  4442b8:	csel	x24, x1, x24, eq  // eq = none
  4442bc:	ldrb	w1, [x24]
  4442c0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4442c4:	add	x0, x0, #0x28
  4442c8:	ldrh	w0, [x0, x1, lsl #1]
  4442cc:	mov	x27, #0x0                   	// #0
  4442d0:	tbnz	w0, #3, 444328 <ferror@plt+0x415f8>
  4442d4:	mov	x0, x27
  4442d8:	bl	402a90 <free@plt>
  4442dc:	mov	x0, x24
  4442e0:	bl	402680 <strlen@plt>
  4442e4:	add	w0, w0, #0x3
  4442e8:	sxtw	x0, w0
  4442ec:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4442f0:	mov	x27, x0
  4442f4:	ldrb	w0, [x24]
  4442f8:	cmp	w0, #0x3c
  4442fc:	b.eq	4448d8 <ferror@plt+0x41ba8>  // b.none
  444300:	mov	x2, x24
  444304:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444308:	add	x1, x1, #0x968
  44430c:	mov	x0, x27
  444310:	bl	402720 <sprintf@plt>
  444314:	mov	x0, x27
  444318:	ldp	x23, x24, [sp, #48]
  44431c:	ldp	x27, x28, [sp, #80]
  444320:	ldp	x29, x30, [sp], #112
  444324:	ret
  444328:	stp	x19, x20, [sp, #16]
  44432c:	stp	x21, x22, [sp, #32]
  444330:	mov	x0, x24
  444334:	bl	402680 <strlen@plt>
  444338:	add	w0, w0, #0x8
  44433c:	sxtw	x0, w0
  444340:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  444344:	mov	x27, x0
  444348:	mov	x20, x0
  44434c:	mov	x19, x24
  444350:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  444354:	add	x23, x23, #0x28
  444358:	adrp	x28, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44435c:	add	x28, x28, #0xba0
  444360:	add	x0, x28, #0xc0
  444364:	str	x0, [sp, #104]
  444368:	ldrb	w0, [x19]
  44436c:	ldrh	w1, [x23, w0, sxtw #1]
  444370:	tbz	w1, #3, 444444 <ferror@plt+0x41714>
  444374:	ldrb	w0, [x19], #1
  444378:	strb	w0, [x20], #1
  44437c:	ldrb	w0, [x19]
  444380:	ldrh	w1, [x23, w0, sxtw #1]
  444384:	tst	w1, #0xc
  444388:	b.ne	444374 <ferror@plt+0x41644>  // b.any
  44438c:	cmp	w0, #0x5f
  444390:	b.ne	4444e4 <ferror@plt+0x417b4>  // b.any
  444394:	ldrb	w0, [x19, #1]
  444398:	ldrh	w0, [x23, x0, lsl #1]
  44439c:	tst	w0, #0xc
  4443a0:	b.ne	444374 <ferror@plt+0x41644>  // b.any
  4443a4:	ldrb	w0, [x19]
  4443a8:	cmp	w0, #0x4e
  4443ac:	cset	w2, eq  // eq = none
  4443b0:	sub	w1, w0, #0x4e
  4443b4:	and	w1, w1, #0xfffffffd
  4443b8:	tst	w1, #0xff
  4443bc:	b.ne	4445b4 <ferror@plt+0x41884>  // b.any
  4443c0:	ldrb	w1, [x19, #1]
  4443c4:	cbz	w1, 4447ac <ferror@plt+0x41a7c>
  4443c8:	cmp	w0, #0x53
  4443cc:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  4443d0:	b.eq	444500 <ferror@plt+0x417d0>  // b.none
  4443d4:	cmp	w0, #0x58
  4443d8:	b.eq	444630 <ferror@plt+0x41900>  // b.none
  4443dc:	ldrb	w0, [x19]
  4443e0:	cmp	w0, #0x53
  4443e4:	b.ne	4446a0 <ferror@plt+0x41970>  // b.any
  4443e8:	ldrb	w0, [x19, #1]
  4443ec:	cbz	w0, 444720 <ferror@plt+0x419f0>
  4443f0:	ldrb	w1, [x19, #2]
  4443f4:	cmp	w1, #0x5f
  4443f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4443fc:	b.ne	444720 <ferror@plt+0x419f0>  // b.any
  444400:	cmp	w0, #0x52
  444404:	b.eq	444688 <ferror@plt+0x41958>  // b.none
  444408:	b.hi	444674 <ferror@plt+0x41944>  // b.pmore
  44440c:	cmp	w0, #0x49
  444410:	b.eq	444694 <ferror@plt+0x41964>  // b.none
  444414:	cmp	w0, #0x4f
  444418:	b.ne	444668 <ferror@plt+0x41938>  // b.any
  44441c:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444420:	add	x21, x21, #0x928
  444424:	add	x22, x19, #0x2
  444428:	mov	x1, x21
  44442c:	mov	x0, x20
  444430:	bl	402b30 <strcpy@plt>
  444434:	mov	x0, x21
  444438:	bl	402680 <strlen@plt>
  44443c:	add	x21, x20, x0
  444440:	b	44451c <ferror@plt+0x417ec>
  444444:	cmp	w0, #0x4f
  444448:	b.ne	444884 <ferror@plt+0x41b54>  // b.any
  44444c:	stp	x25, x26, [sp, #64]
  444450:	add	x26, x28, #0xc0
  444454:	mov	w25, #0x0                   	// #0
  444458:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44445c:	add	x21, x21, #0x918
  444460:	mov	x0, x21
  444464:	bl	402680 <strlen@plt>
  444468:	mov	x22, x0
  44446c:	mov	x2, x0
  444470:	mov	x1, x21
  444474:	mov	x0, x19
  444478:	bl	402830 <strncmp@plt>
  44447c:	cbz	w0, 44449c <ferror@plt+0x4176c>
  444480:	add	w25, w25, #0x1
  444484:	ldr	x21, [x26, #16]!
  444488:	cbnz	x21, 444460 <ferror@plt+0x41730>
  44448c:	ldp	x19, x20, [sp, #16]
  444490:	ldp	x21, x22, [sp, #32]
  444494:	ldp	x25, x26, [sp, #64]
  444498:	b	4442d4 <ferror@plt+0x415a4>
  44449c:	add	x19, x19, x22
  4444a0:	ldr	x0, [sp, #104]
  4444a4:	add	x25, x0, w25, sxtw #4
  4444a8:	ldr	x26, [x25, #8]
  4444ac:	mov	x0, x26
  4444b0:	bl	402680 <strlen@plt>
  4444b4:	mov	x21, x0
  4444b8:	mov	x22, x20
  4444bc:	mov	w25, #0x22                  	// #34
  4444c0:	strb	w25, [x22], #1
  4444c4:	mov	x2, x0
  4444c8:	mov	x1, x26
  4444cc:	mov	x0, x22
  4444d0:	bl	402620 <memcpy@plt>
  4444d4:	add	x20, x22, x21
  4444d8:	add	x20, x20, #0x1
  4444dc:	strb	w25, [x22, x21]
  4444e0:	ldp	x25, x26, [sp, #64]
  4444e4:	ldrb	w0, [x19]
  4444e8:	cmp	w0, #0x54
  4444ec:	b.eq	4445a4 <ferror@plt+0x41874>  // b.none
  4444f0:	cmp	w0, #0x45
  4444f4:	b.ne	4443a8 <ferror@plt+0x41678>  // b.any
  4444f8:	ldrb	w1, [x19, #1]
  4444fc:	cbz	w1, 444624 <ferror@plt+0x418f4>
  444500:	cmp	w0, #0x58
  444504:	b.eq	444638 <ferror@plt+0x41908>  // b.none
  444508:	ldrb	w0, [x19]
  44450c:	mov	x21, x20
  444510:	mov	x22, x19
  444514:	cmp	w0, #0x44
  444518:	b.eq	4446ac <ferror@plt+0x4197c>  // b.none
  44451c:	ldrb	w0, [x22]
  444520:	cmp	w0, #0x5f
  444524:	b.ne	444828 <ferror@plt+0x41af8>  // b.any
  444528:	ldrb	w0, [x22, #1]
  44452c:	cmp	w0, #0x5f
  444530:	b.ne	4447cc <ferror@plt+0x41a9c>  // b.any
  444534:	add	x19, x22, #0x2
  444538:	ldrb	w0, [x22, #2]
  44453c:	ldrh	w1, [x23, w0, sxtw #1]
  444540:	tbnz	w1, #2, 4446f0 <ferror@plt+0x419c0>
  444544:	cmp	w0, #0x5f
  444548:	b.ne	4447bc <ferror@plt+0x41a8c>  // b.any
  44454c:	ldrb	w0, [x22, #3]
  444550:	cmp	w0, #0x5f
  444554:	b.eq	4447bc <ferror@plt+0x41a8c>  // b.none
  444558:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44455c:	add	x22, x22, #0xba0
  444560:	add	x22, x22, #0x200
  444564:	mov	w23, #0x0                   	// #0
  444568:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44456c:	add	x20, x20, #0x958
  444570:	mov	x0, x20
  444574:	bl	402680 <strlen@plt>
  444578:	mov	x2, x0
  44457c:	mov	x1, x20
  444580:	mov	x0, x19
  444584:	bl	402830 <strncmp@plt>
  444588:	cbz	w0, 44477c <ferror@plt+0x41a4c>
  44458c:	add	w23, w23, #0x1
  444590:	ldr	x20, [x22, #16]!
  444594:	cbnz	x20, 444570 <ferror@plt+0x41840>
  444598:	ldp	x19, x20, [sp, #16]
  44459c:	ldp	x21, x22, [sp, #32]
  4445a0:	b	4442d4 <ferror@plt+0x415a4>
  4445a4:	ldrb	w1, [x19, #1]
  4445a8:	mov	w2, #0x0                   	// #0
  4445ac:	cmp	w1, #0x4b
  4445b0:	b.eq	4445d4 <ferror@plt+0x418a4>  // b.none
  4445b4:	cmp	w0, #0x53
  4445b8:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  4445bc:	b.eq	444500 <ferror@plt+0x417d0>  // b.none
  4445c0:	ldrb	w1, [x19, #1]
  4445c4:	cbnz	w1, 4443d4 <ferror@plt+0x416a4>
  4445c8:	ldp	x19, x20, [sp, #16]
  4445cc:	ldp	x21, x22, [sp, #32]
  4445d0:	b	4442d4 <ferror@plt+0x415a4>
  4445d4:	ldrb	w0, [x19, #2]
  4445d8:	cmp	w0, #0x42
  4445dc:	b.eq	444600 <ferror@plt+0x418d0>  // b.none
  4445e0:	cmp	w0, #0x5f
  4445e4:	b.ne	444890 <ferror@plt+0x41b60>  // b.any
  4445e8:	ldrb	w0, [x19, #3]
  4445ec:	cmp	w0, #0x5f
  4445f0:	b.eq	444614 <ferror@plt+0x418e4>  // b.none
  4445f4:	ldp	x19, x20, [sp, #16]
  4445f8:	ldp	x21, x22, [sp, #32]
  4445fc:	b	4442d4 <ferror@plt+0x415a4>
  444600:	ldrb	w0, [x19, #3]
  444604:	cbz	w0, 4447ac <ferror@plt+0x41a7c>
  444608:	ldp	x19, x20, [sp, #16]
  44460c:	ldp	x21, x22, [sp, #32]
  444610:	b	4442d4 <ferror@plt+0x415a4>
  444614:	add	x19, x19, #0x4
  444618:	mov	w0, #0x2e                  	// #46
  44461c:	strb	w0, [x20], #1
  444620:	b	444368 <ferror@plt+0x41638>
  444624:	ldp	x19, x20, [sp, #16]
  444628:	ldp	x21, x22, [sp, #32]
  44462c:	b	4442d4 <ferror@plt+0x415a4>
  444630:	mov	x0, x19
  444634:	b	44463c <ferror@plt+0x4190c>
  444638:	mov	x0, x19
  44463c:	add	x19, x0, #0x1
  444640:	ldrb	w0, [x0, #1]
  444644:	cmp	w0, #0x6e
  444648:	mov	w1, #0x62                  	// #98
  44464c:	ccmp	w0, w1, #0x4, ne  // ne = any
  444650:	b.ne	4443dc <ferror@plt+0x416ac>  // b.any
  444654:	ldrb	w0, [x19, #1]!
  444658:	cmp	w0, #0x6e
  44465c:	ccmp	w0, w1, #0x4, ne  // ne = any
  444660:	b.eq	444654 <ferror@plt+0x41924>  // b.none
  444664:	b	4443dc <ferror@plt+0x416ac>
  444668:	ldp	x19, x20, [sp, #16]
  44466c:	ldp	x21, x22, [sp, #32]
  444670:	b	4442d4 <ferror@plt+0x415a4>
  444674:	cmp	w0, #0x57
  444678:	b.ne	44489c <ferror@plt+0x41b6c>  // b.any
  44467c:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444680:	add	x21, x21, #0x938
  444684:	b	444424 <ferror@plt+0x416f4>
  444688:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44468c:	add	x21, x21, #0x930
  444690:	b	444424 <ferror@plt+0x416f4>
  444694:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444698:	add	x21, x21, #0x920
  44469c:	b	444424 <ferror@plt+0x416f4>
  4446a0:	mov	x21, x20
  4446a4:	mov	x22, x19
  4446a8:	b	444514 <ferror@plt+0x417e4>
  4446ac:	ldrb	w0, [x22, #1]
  4446b0:	cmp	w0, #0x41
  4446b4:	b.eq	4446e4 <ferror@plt+0x419b4>  // b.none
  4446b8:	cmp	w0, #0x46
  4446bc:	b.ne	4448a8 <ferror@plt+0x41b78>  // b.any
  4446c0:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4446c4:	add	x19, x19, #0x948
  4446c8:	mov	x1, x19
  4446cc:	mov	x0, x21
  4446d0:	bl	402b30 <strcpy@plt>
  4446d4:	mov	x0, x19
  4446d8:	bl	402680 <strlen@plt>
  4446dc:	add	x20, x21, x0
  4446e0:	b	4447ac <ferror@plt+0x41a7c>
  4446e4:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4446e8:	add	x19, x19, #0x940
  4446ec:	b	4446c8 <ferror@plt+0x41998>
  4446f0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4446f4:	add	x2, x2, #0x28
  4446f8:	mov	x3, x19
  4446fc:	ldrb	w0, [x19, #1]!
  444700:	ldrh	w1, [x2, w0, sxtw #1]
  444704:	tbnz	w1, #2, 4446f8 <ferror@plt+0x419c8>
  444708:	cmp	w0, #0x5f
  44470c:	b.ne	444740 <ferror@plt+0x41a10>  // b.any
  444710:	ldrb	w0, [x19, #1]
  444714:	ldrh	w0, [x2, x0, lsl #1]
  444718:	tbnz	w0, #2, 4446f8 <ferror@plt+0x419c8>
  44471c:	mov	x20, x21
  444720:	ldrb	w0, [x19]
  444724:	cmp	w0, #0x2e
  444728:	b.eq	444834 <ferror@plt+0x41b04>  // b.none
  44472c:	ldrb	w0, [x19]
  444730:	cbz	w0, 4447ac <ferror@plt+0x41a7c>
  444734:	ldp	x19, x20, [sp, #16]
  444738:	ldp	x21, x22, [sp, #32]
  44473c:	b	4442d4 <ferror@plt+0x415a4>
  444740:	mov	x20, x21
  444744:	cmp	w0, #0x58
  444748:	b.ne	444720 <ferror@plt+0x419f0>  // b.any
  44474c:	add	x19, x3, #0x2
  444750:	ldrb	w0, [x3, #2]
  444754:	cmp	w0, #0x6e
  444758:	mov	w1, #0x62                  	// #98
  44475c:	ccmp	w0, w1, #0x4, ne  // ne = any
  444760:	b.ne	444720 <ferror@plt+0x419f0>  // b.any
  444764:	ldrb	w0, [x19, #1]!
  444768:	cmp	w0, #0x6e
  44476c:	ccmp	w0, w1, #0x4, ne  // ne = any
  444770:	b.eq	444764 <ferror@plt+0x41a34>  // b.none
  444774:	mov	x20, x21
  444778:	b	444720 <ferror@plt+0x419f0>
  44477c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444780:	add	x0, x0, #0xba0
  444784:	add	x23, x0, w23, sxtw #4
  444788:	ldr	x19, [x23, #520]
  44478c:	mov	x0, x19
  444790:	bl	402680 <strlen@plt>
  444794:	mov	x20, x0
  444798:	mov	x2, x0
  44479c:	mov	x1, x19
  4447a0:	mov	x0, x21
  4447a4:	bl	402620 <memcpy@plt>
  4447a8:	add	x20, x21, x20
  4447ac:	strb	wzr, [x20]
  4447b0:	ldp	x19, x20, [sp, #16]
  4447b4:	ldp	x21, x22, [sp, #32]
  4447b8:	b	444314 <ferror@plt+0x415e4>
  4447bc:	mov	x20, x21
  4447c0:	mov	w0, #0x2e                  	// #46
  4447c4:	strb	w0, [x20], #1
  4447c8:	b	444368 <ferror@plt+0x41638>
  4447cc:	cmp	w0, #0x42
  4447d0:	mov	w1, #0x45                  	// #69
  4447d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4447d8:	b.ne	4448b4 <ferror@plt+0x41b84>  // b.any
  4447dc:	add	x1, x22, #0x2
  4447e0:	ldrb	w0, [x22, #2]
  4447e4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4447e8:	add	x2, x2, #0x28
  4447ec:	ldrh	w2, [x2, w0, sxtw #1]
  4447f0:	tbz	w2, #2, 444808 <ferror@plt+0x41ad8>
  4447f4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4447f8:	add	x3, x3, #0x28
  4447fc:	ldrb	w0, [x1, #1]!
  444800:	ldrh	w2, [x3, w0, sxtw #1]
  444804:	tbnz	w2, #2, 4447fc <ferror@plt+0x41acc>
  444808:	cmp	w0, #0x73
  44480c:	b.ne	4448c0 <ferror@plt+0x41b90>  // b.any
  444810:	ldrb	w0, [x1, #1]
  444814:	mov	x20, x21
  444818:	cbz	w0, 4447ac <ferror@plt+0x41a7c>
  44481c:	ldp	x19, x20, [sp, #16]
  444820:	ldp	x21, x22, [sp, #32]
  444824:	b	4442d4 <ferror@plt+0x415a4>
  444828:	mov	x20, x21
  44482c:	mov	x19, x22
  444830:	b	444720 <ferror@plt+0x419f0>
  444834:	ldrb	w1, [x19, #1]
  444838:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  44483c:	add	x0, x0, #0x28
  444840:	ldrh	w0, [x0, x1, lsl #1]
  444844:	tbz	w0, #2, 4448cc <ferror@plt+0x41b9c>
  444848:	add	x0, x19, #0x2
  44484c:	ldrb	w2, [x19, #2]
  444850:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  444854:	add	x1, x1, #0x28
  444858:	ldrh	w1, [x1, x2, lsl #1]
  44485c:	tbz	w1, #2, 44487c <ferror@plt+0x41b4c>
  444860:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  444864:	add	x2, x2, #0x28
  444868:	ldrb	w1, [x0, #1]!
  44486c:	ldrh	w1, [x2, x1, lsl #1]
  444870:	tbnz	w1, #2, 444868 <ferror@plt+0x41b38>
  444874:	mov	x19, x0
  444878:	b	44472c <ferror@plt+0x419fc>
  44487c:	mov	x19, x0
  444880:	b	44472c <ferror@plt+0x419fc>
  444884:	ldp	x19, x20, [sp, #16]
  444888:	ldp	x21, x22, [sp, #32]
  44488c:	b	4442d4 <ferror@plt+0x415a4>
  444890:	ldp	x19, x20, [sp, #16]
  444894:	ldp	x21, x22, [sp, #32]
  444898:	b	4442d4 <ferror@plt+0x415a4>
  44489c:	ldp	x19, x20, [sp, #16]
  4448a0:	ldp	x21, x22, [sp, #32]
  4448a4:	b	4442d4 <ferror@plt+0x415a4>
  4448a8:	ldp	x19, x20, [sp, #16]
  4448ac:	ldp	x21, x22, [sp, #32]
  4448b0:	b	4442d4 <ferror@plt+0x415a4>
  4448b4:	ldp	x19, x20, [sp, #16]
  4448b8:	ldp	x21, x22, [sp, #32]
  4448bc:	b	4442d4 <ferror@plt+0x415a4>
  4448c0:	ldp	x19, x20, [sp, #16]
  4448c4:	ldp	x21, x22, [sp, #32]
  4448c8:	b	4442d4 <ferror@plt+0x415a4>
  4448cc:	ldp	x19, x20, [sp, #16]
  4448d0:	ldp	x21, x22, [sp, #32]
  4448d4:	b	4442d4 <ferror@plt+0x415a4>
  4448d8:	mov	x1, x24
  4448dc:	mov	x0, x27
  4448e0:	bl	402b30 <strcpy@plt>
  4448e4:	b	444314 <ferror@plt+0x415e4>
  4448e8:	stp	x29, x30, [sp, #-48]!
  4448ec:	mov	x29, sp
  4448f0:	stp	x19, x20, [sp, #16]
  4448f4:	str	x21, [sp, #32]
  4448f8:	mov	x21, x0
  4448fc:	mov	w19, w1
  444900:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  444904:	ldr	w1, [x1, #1344]
  444908:	cmn	w1, #0x1
  44490c:	b.eq	44495c <ferror@plt+0x41c2c>  // b.none
  444910:	mov	w0, #0xc104                	// #49412
  444914:	movk	w0, #0x3, lsl #16
  444918:	and	w1, w1, w0
  44491c:	orr	w1, w19, w1
  444920:	tst	w19, w0
  444924:	csel	w19, w1, w19, eq  // eq = none
  444928:	mov	w0, #0x4100                	// #16640
  44492c:	movk	w0, #0x2, lsl #16
  444930:	tst	w19, w0
  444934:	b.ne	444968 <ferror@plt+0x41c38>  // b.any
  444938:	tbnz	w19, #2, 4449a8 <ferror@plt+0x41c78>
  44493c:	tbnz	w19, #15, 4449bc <ferror@plt+0x41c8c>
  444940:	mov	x20, #0x0                   	// #0
  444944:	tbnz	w19, #16, 4449d0 <ferror@plt+0x41ca0>
  444948:	mov	x0, x20
  44494c:	ldp	x19, x20, [sp, #16]
  444950:	ldr	x21, [sp, #32]
  444954:	ldp	x29, x30, [sp], #48
  444958:	ret
  44495c:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  444960:	mov	x20, x0
  444964:	b	444948 <ferror@plt+0x41c18>
  444968:	mov	w1, w19
  44496c:	mov	x0, x21
  444970:	bl	44f28c <ferror@plt+0x4c55c>
  444974:	mov	x20, x0
  444978:	tbnz	w19, #14, 444948 <ferror@plt+0x41c18>
  44497c:	cbz	x0, 4449e4 <ferror@plt+0x41cb4>
  444980:	bl	454450 <_obstack_memory_used@@Base+0xb0>
  444984:	cbnz	w0, 44499c <ferror@plt+0x41c6c>
  444988:	tbz	w19, #17, 444948 <ferror@plt+0x41c18>
  44498c:	mov	x0, x20
  444990:	bl	402a90 <free@plt>
  444994:	mov	x20, #0x0                   	// #0
  444998:	b	444948 <ferror@plt+0x41c18>
  44499c:	mov	x0, x20
  4449a0:	bl	4548b8 <_obstack_memory_used@@Base+0x518>
  4449a4:	b	444948 <ferror@plt+0x41c18>
  4449a8:	mov	x0, x21
  4449ac:	bl	44f2b8 <ferror@plt+0x4c588>
  4449b0:	mov	x20, x0
  4449b4:	cbnz	x0, 444948 <ferror@plt+0x41c18>
  4449b8:	b	44493c <ferror@plt+0x41c0c>
  4449bc:	mov	w1, w19
  4449c0:	mov	x0, x21
  4449c4:	bl	44428c <ferror@plt+0x4155c>
  4449c8:	mov	x20, x0
  4449cc:	b	444948 <ferror@plt+0x41c18>
  4449d0:	mov	w1, w19
  4449d4:	mov	x0, x21
  4449d8:	bl	452ca4 <ferror@plt+0x4ff74>
  4449dc:	mov	x20, x0
  4449e0:	b	444948 <ferror@plt+0x41c18>
  4449e4:	tbz	w19, #17, 444938 <ferror@plt+0x41c08>
  4449e8:	b	444948 <ferror@plt+0x41c18>
  4449ec:	sub	w0, w0, #0x1c
  4449f0:	cmp	w0, #0x34
  4449f4:	b.hi	444a14 <ferror@plt+0x41ce4>  // b.pmore
  4449f8:	mov	x1, #0x1                   	// #1
  4449fc:	lsl	x0, x1, x0
  444a00:	mov	x1, #0x1f                  	// #31
  444a04:	movk	x1, #0x1a, lsl #48
  444a08:	tst	x0, x1
  444a0c:	cset	w0, ne  // ne = any
  444a10:	b	444a18 <ferror@plt+0x41ce8>
  444a14:	mov	w0, #0x0                   	// #0
  444a18:	ret
  444a1c:	mov	x2, x0
  444a20:	ldr	w1, [x0, #40]
  444a24:	ldr	w0, [x0, #44]
  444a28:	cmp	w1, w0
  444a2c:	b.ge	444a54 <ferror@plt+0x41d24>  // b.tcont
  444a30:	sbfiz	x0, x1, #1, #32
  444a34:	add	x1, x0, w1, sxtw
  444a38:	ldr	x0, [x2, #32]
  444a3c:	add	x0, x0, x1, lsl #3
  444a40:	str	wzr, [x0, #4]
  444a44:	ldr	w1, [x2, #40]
  444a48:	add	w1, w1, #0x1
  444a4c:	str	w1, [x2, #40]
  444a50:	ret
  444a54:	mov	x0, #0x0                   	// #0
  444a58:	b	444a50 <ferror@plt+0x41d20>
  444a5c:	stp	x29, x30, [sp, #-48]!
  444a60:	mov	x29, sp
  444a64:	stp	x19, x20, [sp, #16]
  444a68:	mov	w19, w1
  444a6c:	sub	w1, w1, #0x1
  444a70:	cmp	w1, #0x4f
  444a74:	b.hi	444af0 <ferror@plt+0x41dc0>  // b.pmore
  444a78:	str	x21, [sp, #32]
  444a7c:	mov	x21, x2
  444a80:	mov	x20, x3
  444a84:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x27c60>
  444a88:	add	x2, x2, #0xe00
  444a8c:	ldrb	w1, [x2, w1, uxtw]
  444a90:	adr	x2, 444a9c <ferror@plt+0x41d6c>
  444a94:	add	x1, x2, w1, sxtb #2
  444a98:	br	x1
  444a9c:	cmp	x21, #0x0
  444aa0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  444aa4:	b.ne	444ab8 <ferror@plt+0x41d88>  // b.any
  444aa8:	mov	x0, #0x0                   	// #0
  444aac:	ldr	x21, [sp, #32]
  444ab0:	b	444ad0 <ferror@plt+0x41da0>
  444ab4:	cbz	x21, 444af8 <ferror@plt+0x41dc8>
  444ab8:	bl	444a1c <ferror@plt+0x41cec>
  444abc:	cbz	x0, 444b04 <ferror@plt+0x41dd4>
  444ac0:	str	w19, [x0]
  444ac4:	str	x21, [x0, #8]
  444ac8:	str	x20, [x0, #16]
  444acc:	ldr	x21, [sp, #32]
  444ad0:	ldp	x19, x20, [sp, #16]
  444ad4:	ldp	x29, x30, [sp], #48
  444ad8:	ret
  444adc:	cbnz	x3, 444ab8 <ferror@plt+0x41d88>
  444ae0:	mov	x0, x3
  444ae4:	ldr	x21, [sp, #32]
  444ae8:	b	444ad0 <ferror@plt+0x41da0>
  444aec:	ldr	x21, [sp, #32]
  444af0:	mov	x0, #0x0                   	// #0
  444af4:	b	444ad0 <ferror@plt+0x41da0>
  444af8:	mov	x0, x21
  444afc:	ldr	x21, [sp, #32]
  444b00:	b	444ad0 <ferror@plt+0x41da0>
  444b04:	ldr	x21, [sp, #32]
  444b08:	b	444ad0 <ferror@plt+0x41da0>
  444b0c:	stp	x29, x30, [sp, #-32]!
  444b10:	mov	x29, sp
  444b14:	str	x19, [sp, #16]
  444b18:	mov	x19, x1
  444b1c:	cbz	x1, 444b40 <ferror@plt+0x41e10>
  444b20:	bl	444a1c <ferror@plt+0x41cec>
  444b24:	cbz	x0, 444b34 <ferror@plt+0x41e04>
  444b28:	mov	w1, #0x27                  	// #39
  444b2c:	str	w1, [x0]
  444b30:	str	x19, [x0, #8]
  444b34:	ldr	x19, [sp, #16]
  444b38:	ldp	x29, x30, [sp], #32
  444b3c:	ret
  444b40:	mov	x0, x1
  444b44:	b	444b34 <ferror@plt+0x41e04>
  444b48:	cbz	x0, 444b9c <ferror@plt+0x41e6c>
  444b4c:	mov	x2, x0
  444b50:	ldr	w1, [x0]
  444b54:	cmp	w1, #0x8
  444b58:	b.hi	444b90 <ferror@plt+0x41e60>  // b.pmore
  444b5c:	cmp	w1, #0x6
  444b60:	b.hi	444ba4 <ferror@plt+0x41e74>  // b.pmore
  444b64:	sub	w1, w1, #0x1
  444b68:	mov	w0, #0x0                   	// #0
  444b6c:	cmp	w1, #0x1
  444b70:	b.hi	444b8c <ferror@plt+0x41e5c>  // b.pmore
  444b74:	stp	x29, x30, [sp, #-16]!
  444b78:	mov	x29, sp
  444b7c:	ldr	x0, [x2, #16]
  444b80:	bl	444b48 <ferror@plt+0x41e18>
  444b84:	ldp	x29, x30, [sp], #16
  444b88:	ret
  444b8c:	ret
  444b90:	cmp	w1, #0x35
  444b94:	cset	w0, eq  // eq = none
  444b98:	ret
  444b9c:	mov	w0, #0x0                   	// #0
  444ba0:	ret
  444ba4:	mov	w0, #0x1                   	// #1
  444ba8:	ret
  444bac:	cbz	x0, 444c3c <ferror@plt+0x41f0c>
  444bb0:	stp	x29, x30, [sp, #-16]!
  444bb4:	mov	x29, sp
  444bb8:	ldr	w1, [x0]
  444bbc:	cmp	w1, #0x4
  444bc0:	b.eq	444c1c <ferror@plt+0x41eec>  // b.none
  444bc4:	b.ls	444bf4 <ferror@plt+0x41ec4>  // b.plast
  444bc8:	sub	w1, w1, #0x1c
  444bcc:	cmp	w1, #0x34
  444bd0:	b.hi	444c14 <ferror@plt+0x41ee4>  // b.pmore
  444bd4:	mov	x2, #0x1                   	// #1
  444bd8:	lsl	x1, x2, x1
  444bdc:	mov	x2, #0x1f                  	// #31
  444be0:	movk	x2, #0x1a, lsl #48
  444be4:	tst	x1, x2
  444be8:	b.ne	444c30 <ferror@plt+0x41f00>  // b.any
  444bec:	mov	w0, #0x0                   	// #0
  444bf0:	b	444c0c <ferror@plt+0x41edc>
  444bf4:	cmp	w1, #0x2
  444bf8:	b.ne	444c08 <ferror@plt+0x41ed8>  // b.any
  444bfc:	ldr	x0, [x0, #16]
  444c00:	bl	444bac <ferror@plt+0x41e7c>
  444c04:	b	444c0c <ferror@plt+0x41edc>
  444c08:	mov	w0, #0x0                   	// #0
  444c0c:	ldp	x29, x30, [sp], #16
  444c10:	ret
  444c14:	mov	w0, #0x0                   	// #0
  444c18:	b	444c0c <ferror@plt+0x41edc>
  444c1c:	ldr	x0, [x0, #8]
  444c20:	bl	444b48 <ferror@plt+0x41e18>
  444c24:	cmp	w0, #0x0
  444c28:	cset	w0, eq  // eq = none
  444c2c:	b	444c0c <ferror@plt+0x41edc>
  444c30:	ldr	x0, [x0, #8]
  444c34:	bl	444bac <ferror@plt+0x41e7c>
  444c38:	b	444c0c <ferror@plt+0x41edc>
  444c3c:	mov	w0, #0x0                   	// #0
  444c40:	ret
  444c44:	mov	x4, x0
  444c48:	ldr	x1, [x0, #24]
  444c4c:	ldrb	w0, [x1]
  444c50:	cmp	w0, #0x6e
  444c54:	b.eq	444cd4 <ferror@plt+0x41fa4>  // b.none
  444c58:	sub	w1, w0, #0x30
  444c5c:	and	w1, w1, #0xff
  444c60:	cmp	w1, #0x9
  444c64:	b.hi	444d0c <ferror@plt+0x41fdc>  // b.pmore
  444c68:	mov	w7, #0x0                   	// #0
  444c6c:	mov	w3, w0
  444c70:	mov	w0, #0x0                   	// #0
  444c74:	mov	w6, #0x7fffffff            	// #2147483647
  444c78:	mov	w5, #0x6667                	// #26215
  444c7c:	movk	w5, #0x6666, lsl #16
  444c80:	add	w0, w0, w0, lsl #2
  444c84:	add	w0, w3, w0, lsl #1
  444c88:	sub	w0, w0, #0x30
  444c8c:	ldr	x1, [x4, #24]
  444c90:	add	x2, x1, #0x1
  444c94:	str	x2, [x4, #24]
  444c98:	ldrb	w1, [x1, #1]
  444c9c:	sub	w2, w1, #0x30
  444ca0:	and	w2, w2, #0xff
  444ca4:	cmp	w2, #0x9
  444ca8:	b.hi	444cf8 <ferror@plt+0x41fc8>  // b.pmore
  444cac:	mov	w3, w1
  444cb0:	sub	w1, w1, #0x30
  444cb4:	sub	w1, w6, w1
  444cb8:	smull	x2, w1, w5
  444cbc:	asr	x2, x2, #34
  444cc0:	sub	w1, w2, w1, asr #31
  444cc4:	cmp	w1, w0
  444cc8:	b.ge	444c80 <ferror@plt+0x41f50>  // b.tcont
  444ccc:	mov	w0, #0xffffffff            	// #-1
  444cd0:	ret
  444cd4:	add	x0, x1, #0x1
  444cd8:	str	x0, [x4, #24]
  444cdc:	ldrb	w0, [x1, #1]
  444ce0:	sub	w1, w0, #0x30
  444ce4:	and	w1, w1, #0xff
  444ce8:	cmp	w1, #0x9
  444cec:	b.hi	444d04 <ferror@plt+0x41fd4>  // b.pmore
  444cf0:	mov	w7, #0x1                   	// #1
  444cf4:	b	444c6c <ferror@plt+0x41f3c>
  444cf8:	cbz	w7, 444cd0 <ferror@plt+0x41fa0>
  444cfc:	neg	w0, w0
  444d00:	b	444cd0 <ferror@plt+0x41fa0>
  444d04:	mov	w0, #0x0                   	// #0
  444d08:	b	444cfc <ferror@plt+0x41fcc>
  444d0c:	mov	w0, #0x0                   	// #0
  444d10:	b	444cd0 <ferror@plt+0x41fa0>
  444d14:	stp	x29, x30, [sp, #-32]!
  444d18:	mov	x29, sp
  444d1c:	stp	x19, x20, [sp, #16]
  444d20:	mov	x20, x0
  444d24:	bl	444a1c <ferror@plt+0x41cec>
  444d28:	mov	x19, x0
  444d2c:	cbz	x0, 444d48 <ferror@plt+0x42018>
  444d30:	mov	w0, #0x42                  	// #66
  444d34:	str	w0, [x19]
  444d38:	mov	x0, x20
  444d3c:	bl	444c44 <ferror@plt+0x41f14>
  444d40:	sxtw	x0, w0
  444d44:	str	x0, [x19, #8]
  444d48:	mov	x0, x19
  444d4c:	ldp	x19, x20, [sp, #16]
  444d50:	ldp	x29, x30, [sp], #32
  444d54:	ret
  444d58:	stp	x29, x30, [sp, #-32]!
  444d5c:	mov	x29, sp
  444d60:	str	x19, [sp, #16]
  444d64:	mov	x19, x0
  444d68:	cbnz	w1, 444d88 <ferror@plt+0x42058>
  444d6c:	ldr	x2, [x0, #24]
  444d70:	ldrb	w3, [x2]
  444d74:	mov	w0, w1
  444d78:	cbz	w3, 444d9c <ferror@plt+0x4206c>
  444d7c:	add	x0, x2, #0x1
  444d80:	str	x0, [x19, #24]
  444d84:	ldrb	w1, [x2]
  444d88:	cmp	w1, #0x68
  444d8c:	b.eq	444da8 <ferror@plt+0x42078>  // b.none
  444d90:	mov	w0, #0x0                   	// #0
  444d94:	cmp	w1, #0x76
  444d98:	b.eq	444dd4 <ferror@plt+0x420a4>  // b.none
  444d9c:	ldr	x19, [sp, #16]
  444da0:	ldp	x29, x30, [sp], #32
  444da4:	ret
  444da8:	mov	x0, x19
  444dac:	bl	444c44 <ferror@plt+0x41f14>
  444db0:	ldr	x1, [x19, #24]
  444db4:	ldrb	w2, [x1]
  444db8:	mov	w0, #0x0                   	// #0
  444dbc:	cmp	w2, #0x5f
  444dc0:	b.ne	444d9c <ferror@plt+0x4206c>  // b.any
  444dc4:	add	x1, x1, #0x1
  444dc8:	str	x1, [x19, #24]
  444dcc:	mov	w0, #0x1                   	// #1
  444dd0:	b	444d9c <ferror@plt+0x4206c>
  444dd4:	mov	x0, x19
  444dd8:	bl	444c44 <ferror@plt+0x41f14>
  444ddc:	ldr	x1, [x19, #24]
  444de0:	ldrb	w2, [x1]
  444de4:	mov	w0, #0x0                   	// #0
  444de8:	cmp	w2, #0x5f
  444dec:	b.ne	444d9c <ferror@plt+0x4206c>  // b.any
  444df0:	add	x1, x1, #0x1
  444df4:	str	x1, [x19, #24]
  444df8:	mov	x0, x19
  444dfc:	bl	444c44 <ferror@plt+0x41f14>
  444e00:	b	444db0 <ferror@plt+0x42080>
  444e04:	ldr	x2, [x0, #24]
  444e08:	ldrb	w1, [x2]
  444e0c:	cmp	w1, #0x72
  444e10:	mov	w0, #0x56                  	// #86
  444e14:	ccmp	w1, w0, #0x4, ne  // ne = any
  444e18:	mov	w0, #0x4b                  	// #75
  444e1c:	ccmp	w1, w0, #0x4, ne  // ne = any
  444e20:	mov	w0, #0x1                   	// #1
  444e24:	b.eq	444e34 <ferror@plt+0x42104>  // b.none
  444e28:	mov	w0, #0x0                   	// #0
  444e2c:	cmp	w1, #0x44
  444e30:	b.eq	444e38 <ferror@plt+0x42108>  // b.none
  444e34:	ret
  444e38:	ldrb	w0, [x2, #1]
  444e3c:	and	w1, w0, #0xffffffdf
  444e40:	and	w1, w1, #0xff
  444e44:	sub	w0, w0, #0x77
  444e48:	and	w0, w0, #0xff
  444e4c:	cmp	w1, #0x4f
  444e50:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  444e54:	cset	w0, ls  // ls = plast
  444e58:	b	444e34 <ferror@plt+0x42104>
  444e5c:	mov	x2, x1
  444e60:	ldr	x3, [x0, #24]
  444e64:	ldrb	w1, [x3]
  444e68:	cmp	w1, #0x52
  444e6c:	mov	w4, #0x4f                  	// #79
  444e70:	ccmp	w1, w4, #0x4, ne  // ne = any
  444e74:	b.ne	444ec0 <ferror@plt+0x42190>  // b.any
  444e78:	stp	x29, x30, [sp, #-16]!
  444e7c:	mov	x29, sp
  444e80:	cmp	w1, #0x52
  444e84:	b.eq	444eb0 <ferror@plt+0x42180>  // b.none
  444e88:	ldr	w4, [x0, #72]
  444e8c:	add	w4, w4, #0x3
  444e90:	mov	w1, #0x20                  	// #32
  444e94:	str	w4, [x0, #72]
  444e98:	add	x3, x3, #0x1
  444e9c:	str	x3, [x0, #24]
  444ea0:	mov	x3, #0x0                   	// #0
  444ea4:	bl	444a5c <ferror@plt+0x41d2c>
  444ea8:	ldp	x29, x30, [sp], #16
  444eac:	ret
  444eb0:	ldr	w4, [x0, #72]
  444eb4:	add	w4, w4, #0x2
  444eb8:	mov	w1, #0x1f                  	// #31
  444ebc:	b	444e94 <ferror@plt+0x42164>
  444ec0:	mov	x0, x2
  444ec4:	ret
  444ec8:	stp	x29, x30, [sp, #-32]!
  444ecc:	mov	x29, sp
  444ed0:	str	x19, [sp, #16]
  444ed4:	mov	x19, x0
  444ed8:	ldr	x1, [x0, #24]
  444edc:	ldrb	w0, [x1]
  444ee0:	cmp	w0, #0x5f
  444ee4:	b.eq	444f24 <ferror@plt+0x421f4>  // b.none
  444ee8:	cmp	w0, #0x6e
  444eec:	b.eq	444f2c <ferror@plt+0x421fc>  // b.none
  444ef0:	mov	x0, x19
  444ef4:	bl	444c44 <ferror@plt+0x41f14>
  444ef8:	adds	w0, w0, #0x1
  444efc:	b.mi	444f34 <ferror@plt+0x42204>  // b.first
  444f00:	ldr	x1, [x19, #24]
  444f04:	ldrb	w2, [x1]
  444f08:	cmp	w2, #0x5f
  444f0c:	b.ne	444f3c <ferror@plt+0x4220c>  // b.any
  444f10:	add	x1, x1, #0x1
  444f14:	str	x1, [x19, #24]
  444f18:	ldr	x19, [sp, #16]
  444f1c:	ldp	x29, x30, [sp], #32
  444f20:	ret
  444f24:	mov	w0, #0x0                   	// #0
  444f28:	b	444f10 <ferror@plt+0x421e0>
  444f2c:	mov	w0, #0xffffffff            	// #-1
  444f30:	b	444f18 <ferror@plt+0x421e8>
  444f34:	mov	w0, #0xffffffff            	// #-1
  444f38:	b	444f18 <ferror@plt+0x421e8>
  444f3c:	mov	w0, #0xffffffff            	// #-1
  444f40:	b	444f18 <ferror@plt+0x421e8>
  444f44:	stp	x29, x30, [sp, #-32]!
  444f48:	mov	x29, sp
  444f4c:	stp	x19, x20, [sp, #16]
  444f50:	mov	x19, x0
  444f54:	ldr	x0, [x0, #24]
  444f58:	ldrb	w1, [x0]
  444f5c:	cmp	w1, #0x54
  444f60:	b.ne	444fa0 <ferror@plt+0x42270>  // b.any
  444f64:	add	x0, x0, #0x1
  444f68:	str	x0, [x19, #24]
  444f6c:	mov	x0, x19
  444f70:	bl	444ec8 <ferror@plt+0x42198>
  444f74:	mov	w20, w0
  444f78:	mov	x0, #0x0                   	// #0
  444f7c:	tbnz	w20, #31, 444fa4 <ferror@plt+0x42274>
  444f80:	mov	x0, x19
  444f84:	bl	444a1c <ferror@plt+0x41cec>
  444f88:	cbz	x0, 444fa4 <ferror@plt+0x42274>
  444f8c:	mov	w1, #0x5                   	// #5
  444f90:	str	w1, [x0]
  444f94:	sxtw	x20, w20
  444f98:	str	x20, [x0, #8]
  444f9c:	b	444fa4 <ferror@plt+0x42274>
  444fa0:	mov	x0, #0x0                   	// #0
  444fa4:	ldp	x19, x20, [sp, #16]
  444fa8:	ldp	x29, x30, [sp], #32
  444fac:	ret
  444fb0:	ldr	x0, [x0, #8]
  444fb4:	ldr	x0, [x0]
  444fb8:	ldrb	w1, [x0, #1]
  444fbc:	cmp	w1, #0x63
  444fc0:	b.eq	444fcc <ferror@plt+0x4229c>  // b.none
  444fc4:	mov	w0, #0x0                   	// #0
  444fc8:	ret
  444fcc:	ldrb	w0, [x0]
  444fd0:	sub	w1, w0, #0x63
  444fd4:	and	w1, w1, #0xff
  444fd8:	sub	w0, w0, #0x72
  444fdc:	and	w0, w0, #0xff
  444fe0:	cmp	w1, #0x1
  444fe4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  444fe8:	cset	w0, ls  // ls = plast
  444fec:	b	444fc8 <ferror@plt+0x42298>
  444ff0:	stp	x29, x30, [sp, #-32]!
  444ff4:	mov	x29, sp
  444ff8:	stp	x19, x20, [sp, #16]
  444ffc:	mov	x19, x0
  445000:	ldr	x0, [x0, #24]
  445004:	ldrb	w1, [x0]
  445008:	cmp	w1, #0x5f
  44500c:	b.ne	445080 <ferror@plt+0x42350>  // b.any
  445010:	add	x1, x0, #0x1
  445014:	str	x1, [x19, #24]
  445018:	ldrb	w1, [x0, #1]
  44501c:	mov	w20, #0x1                   	// #1
  445020:	cmp	w1, #0x5f
  445024:	b.eq	445070 <ferror@plt+0x42340>  // b.none
  445028:	mov	x0, x19
  44502c:	bl	444c44 <ferror@plt+0x41f14>
  445030:	mov	w1, w0
  445034:	mov	w0, #0x0                   	// #0
  445038:	tbnz	w1, #31, 445084 <ferror@plt+0x42354>
  44503c:	cmp	w20, #0x1
  445040:	mov	w0, #0x1                   	// #1
  445044:	ccmp	w1, #0x9, #0x4, gt
  445048:	b.le	445084 <ferror@plt+0x42354>
  44504c:	ldr	x1, [x19, #24]
  445050:	ldrb	w2, [x1]
  445054:	mov	w0, #0x0                   	// #0
  445058:	cmp	w2, #0x5f
  44505c:	b.ne	445084 <ferror@plt+0x42354>  // b.any
  445060:	add	x1, x1, #0x1
  445064:	str	x1, [x19, #24]
  445068:	mov	w0, #0x1                   	// #1
  44506c:	b	445084 <ferror@plt+0x42354>
  445070:	add	x0, x0, #0x2
  445074:	str	x0, [x19, #24]
  445078:	mov	w20, #0x2                   	// #2
  44507c:	b	445028 <ferror@plt+0x422f8>
  445080:	mov	w0, #0x1                   	// #1
  445084:	ldp	x19, x20, [sp, #16]
  445088:	ldp	x29, x30, [sp], #32
  44508c:	ret
  445090:	mov	x2, x0
  445094:	cbz	x1, 4450c8 <ferror@plt+0x42398>
  445098:	ldr	w3, [x0, #56]
  44509c:	ldr	w4, [x0, #60]
  4450a0:	mov	w0, #0x0                   	// #0
  4450a4:	cmp	w3, w4
  4450a8:	b.ge	4450c4 <ferror@plt+0x42394>  // b.tcont
  4450ac:	ldr	x0, [x2, #48]
  4450b0:	str	x1, [x0, w3, sxtw #3]
  4450b4:	ldr	w0, [x2, #56]
  4450b8:	add	w0, w0, #0x1
  4450bc:	str	w0, [x2, #56]
  4450c0:	mov	w0, #0x1                   	// #1
  4450c4:	ret
  4450c8:	mov	w0, #0x0                   	// #0
  4450cc:	b	4450c4 <ferror@plt+0x42394>
  4450d0:	cbz	x1, 4451e4 <ferror@plt+0x424b4>
  4450d4:	stp	x29, x30, [sp, #-32]!
  4450d8:	mov	x29, sp
  4450dc:	stp	x19, x20, [sp, #16]
  4450e0:	mov	x20, x0
  4450e4:	mov	x19, x1
  4450e8:	ldr	w1, [x1]
  4450ec:	sub	w1, w1, #0x1
  4450f0:	cmp	w1, #0x4f
  4450f4:	b.hi	445128 <ferror@plt+0x423f8>  // b.pmore
  4450f8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4450fc:	add	x0, x0, #0xe50
  445100:	ldrb	w0, [x0, w1, uxtw]
  445104:	adr	x1, 445110 <ferror@plt+0x423e0>
  445108:	add	x0, x1, w0, sxtb #2
  44510c:	br	x0
  445110:	ldr	w0, [x20, #364]
  445114:	add	w0, w0, #0x1
  445118:	str	w0, [x20, #364]
  44511c:	ldr	w0, [x20, #308]
  445120:	cmp	w0, #0x800
  445124:	b.le	445154 <ferror@plt+0x42424>
  445128:	ldp	x19, x20, [sp, #16]
  44512c:	ldp	x29, x30, [sp], #32
  445130:	ret
  445134:	ldr	x0, [x19, #8]
  445138:	ldr	w0, [x0]
  44513c:	cmp	w0, #0x5
  445140:	b.ne	44511c <ferror@plt+0x423ec>  // b.any
  445144:	ldr	w0, [x20, #348]
  445148:	add	w0, w0, #0x1
  44514c:	str	w0, [x20, #348]
  445150:	b	44511c <ferror@plt+0x423ec>
  445154:	add	w0, w0, #0x1
  445158:	str	w0, [x20, #308]
  44515c:	ldr	x1, [x19, #8]
  445160:	mov	x0, x20
  445164:	bl	4450d0 <ferror@plt+0x423a0>
  445168:	ldr	x1, [x19, #16]
  44516c:	mov	x0, x20
  445170:	bl	4450d0 <ferror@plt+0x423a0>
  445174:	ldr	w0, [x20, #308]
  445178:	sub	w0, w0, #0x1
  44517c:	str	w0, [x20, #308]
  445180:	b	445128 <ferror@plt+0x423f8>
  445184:	ldr	x1, [x19, #16]
  445188:	mov	x0, x20
  44518c:	bl	4450d0 <ferror@plt+0x423a0>
  445190:	b	445128 <ferror@plt+0x423f8>
  445194:	ldr	x1, [x19, #16]
  445198:	mov	x0, x20
  44519c:	bl	4450d0 <ferror@plt+0x423a0>
  4451a0:	b	445128 <ferror@plt+0x423f8>
  4451a4:	ldr	x1, [x19, #16]
  4451a8:	mov	x0, x20
  4451ac:	bl	4450d0 <ferror@plt+0x423a0>
  4451b0:	b	445128 <ferror@plt+0x423f8>
  4451b4:	ldr	x1, [x19, #8]
  4451b8:	mov	x0, x20
  4451bc:	bl	4450d0 <ferror@plt+0x423a0>
  4451c0:	b	445128 <ferror@plt+0x423f8>
  4451c4:	ldr	x1, [x19, #8]
  4451c8:	mov	x0, x20
  4451cc:	bl	4450d0 <ferror@plt+0x423a0>
  4451d0:	b	445128 <ferror@plt+0x423f8>
  4451d4:	ldr	x1, [x19, #8]
  4451d8:	mov	x0, x20
  4451dc:	bl	4450d0 <ferror@plt+0x423a0>
  4451e0:	b	445128 <ferror@plt+0x423f8>
  4451e4:	ret
  4451e8:	cbz	x2, 445284 <ferror@plt+0x42554>
  4451ec:	stp	x29, x30, [sp, #-64]!
  4451f0:	mov	x29, sp
  4451f4:	stp	x19, x20, [sp, #16]
  4451f8:	stp	x21, x22, [sp, #32]
  4451fc:	str	x23, [sp, #48]
  445200:	mov	x19, x0
  445204:	mov	x20, x1
  445208:	add	x22, x1, x2
  44520c:	mov	x23, #0xff                  	// #255
  445210:	b	445234 <ferror@plt+0x42504>
  445214:	ldr	x0, [x19, #256]
  445218:	add	x1, x0, #0x1
  44521c:	str	x1, [x19, #256]
  445220:	strb	w21, [x19, x0]
  445224:	strb	w21, [x19, #264]
  445228:	add	x20, x20, #0x1
  44522c:	cmp	x20, x22
  445230:	b.eq	445270 <ferror@plt+0x42540>  // b.none
  445234:	ldrb	w21, [x20]
  445238:	ldr	x0, [x19, #256]
  44523c:	cmp	x0, #0xff
  445240:	b.ne	445214 <ferror@plt+0x424e4>  // b.any
  445244:	strb	wzr, [x19, #255]
  445248:	ldr	x3, [x19, #272]
  44524c:	ldr	x2, [x19, #280]
  445250:	mov	x1, x23
  445254:	mov	x0, x19
  445258:	blr	x3
  44525c:	str	xzr, [x19, #256]
  445260:	ldr	x0, [x19, #320]
  445264:	add	x0, x0, #0x1
  445268:	str	x0, [x19, #320]
  44526c:	b	445214 <ferror@plt+0x424e4>
  445270:	ldp	x19, x20, [sp, #16]
  445274:	ldp	x21, x22, [sp, #32]
  445278:	ldr	x23, [sp, #48]
  44527c:	ldp	x29, x30, [sp], #64
  445280:	ret
  445284:	ret
  445288:	tbnz	w1, #31, 4452b4 <ferror@plt+0x42584>
  44528c:	cbz	x0, 4452b4 <ferror@plt+0x42584>
  445290:	ldr	w2, [x0]
  445294:	cmp	w2, #0x2f
  445298:	b.ne	4452b8 <ferror@plt+0x42588>  // b.any
  44529c:	cbz	w1, 4452b0 <ferror@plt+0x42580>
  4452a0:	sub	w1, w1, #0x1
  4452a4:	ldr	x0, [x0, #16]
  4452a8:	cbnz	x0, 445290 <ferror@plt+0x42560>
  4452ac:	b	4452b4 <ferror@plt+0x42584>
  4452b0:	ldr	x0, [x0, #8]
  4452b4:	ret
  4452b8:	mov	x0, #0x0                   	// #0
  4452bc:	b	4452b4 <ferror@plt+0x42584>
  4452c0:	mov	x2, x0
  4452c4:	ldr	x0, [x0, #288]
  4452c8:	cbz	x0, 4452ec <ferror@plt+0x425bc>
  4452cc:	stp	x29, x30, [sp, #-16]!
  4452d0:	mov	x29, sp
  4452d4:	ldr	x0, [x0, #8]
  4452d8:	ldr	w1, [x1, #8]
  4452dc:	ldr	x0, [x0, #16]
  4452e0:	bl	445288 <ferror@plt+0x42558>
  4452e4:	ldp	x29, x30, [sp], #16
  4452e8:	ret
  4452ec:	mov	w1, #0x1                   	// #1
  4452f0:	str	w1, [x2, #304]
  4452f4:	ret
  4452f8:	stp	x29, x30, [sp, #-32]!
  4452fc:	mov	x29, sp
  445300:	stp	x19, x20, [sp, #16]
  445304:	mov	x19, x1
  445308:	cbz	x1, 4453d0 <ferror@plt+0x426a0>
  44530c:	mov	x20, x0
  445310:	ldr	w2, [x1]
  445314:	cmp	w2, #0x8
  445318:	b.eq	4453a4 <ferror@plt+0x42674>  // b.none
  44531c:	b.hi	44535c <ferror@plt+0x4262c>  // b.pmore
  445320:	cmp	w2, #0x6
  445324:	b.eq	4453d8 <ferror@plt+0x426a8>  // b.none
  445328:	b.ls	445338 <ferror@plt+0x42608>  // b.plast
  44532c:	ldr	x1, [x1, #16]
  445330:	bl	4452f8 <ferror@plt+0x425c8>
  445334:	b	445398 <ferror@plt+0x42668>
  445338:	cbz	w2, 4453e0 <ferror@plt+0x426b0>
  44533c:	cmp	w2, #0x5
  445340:	b.ne	4453b0 <ferror@plt+0x42680>  // b.any
  445344:	bl	4452c0 <ferror@plt+0x42590>
  445348:	cbz	x0, 445398 <ferror@plt+0x42668>
  44534c:	ldr	w1, [x0]
  445350:	cmp	w1, #0x2f
  445354:	csel	x0, x0, xzr, eq  // eq = none
  445358:	b	445398 <ferror@plt+0x42668>
  44535c:	sub	w2, w2, #0x18
  445360:	cmp	w2, #0x34
  445364:	b.hi	4453b0 <ferror@plt+0x42680>  // b.pmore
  445368:	mov	x1, #0x1                   	// #1
  44536c:	lsl	x2, x1, x2
  445370:	mov	x0, #0x8001                	// #32769
  445374:	movk	x0, #0x410, lsl #16
  445378:	movk	x0, #0xc600, lsl #32
  44537c:	movk	x0, #0x19, lsl #48
  445380:	tst	x2, x0
  445384:	b.ne	4453e8 <ferror@plt+0x426b8>  // b.any
  445388:	tbz	w2, #27, 4453b0 <ferror@plt+0x42680>
  44538c:	ldr	x1, [x19, #16]
  445390:	mov	x0, x20
  445394:	bl	4452f8 <ferror@plt+0x425c8>
  445398:	ldp	x19, x20, [sp, #16]
  44539c:	ldp	x29, x30, [sp], #32
  4453a0:	ret
  4453a4:	ldr	x1, [x1, #16]
  4453a8:	bl	4452f8 <ferror@plt+0x425c8>
  4453ac:	b	445398 <ferror@plt+0x42668>
  4453b0:	ldr	x1, [x19, #8]
  4453b4:	mov	x0, x20
  4453b8:	bl	4452f8 <ferror@plt+0x425c8>
  4453bc:	cbnz	x0, 445398 <ferror@plt+0x42668>
  4453c0:	ldr	x1, [x19, #16]
  4453c4:	mov	x0, x20
  4453c8:	bl	4452f8 <ferror@plt+0x425c8>
  4453cc:	b	445398 <ferror@plt+0x42668>
  4453d0:	mov	x0, x1
  4453d4:	b	445398 <ferror@plt+0x42668>
  4453d8:	mov	x0, #0x0                   	// #0
  4453dc:	b	445398 <ferror@plt+0x42668>
  4453e0:	mov	x0, #0x0                   	// #0
  4453e4:	b	445398 <ferror@plt+0x42668>
  4453e8:	mov	x0, #0x0                   	// #0
  4453ec:	b	445398 <ferror@plt+0x42668>
  4453f0:	mov	x1, x0
  4453f4:	mov	w0, #0x0                   	// #0
  4453f8:	cbz	x1, 44541c <ferror@plt+0x426ec>
  4453fc:	ldr	w2, [x1]
  445400:	cmp	w2, #0x2f
  445404:	b.ne	44541c <ferror@plt+0x426ec>  // b.any
  445408:	ldr	x2, [x1, #8]
  44540c:	cbz	x2, 44541c <ferror@plt+0x426ec>
  445410:	add	w0, w0, #0x1
  445414:	ldr	x1, [x1, #16]
  445418:	cbnz	x1, 4453fc <ferror@plt+0x426cc>
  44541c:	ret
  445420:	stp	x29, x30, [sp, #-48]!
  445424:	mov	x29, sp
  445428:	stp	x19, x20, [sp, #16]
  44542c:	stp	x21, x22, [sp, #32]
  445430:	mov	x22, x0
  445434:	mov	x21, x1
  445438:	mov	x19, x2
  44543c:	add	x2, x1, #0x1
  445440:	ldr	x3, [x19, #8]
  445444:	add	x2, x2, x3
  445448:	ldr	x20, [x19, #16]
  44544c:	cmp	x2, x20
  445450:	b.hi	4454a0 <ferror@plt+0x42770>  // b.pmore
  445454:	ldr	w0, [x19, #24]
  445458:	cbnz	w0, 445490 <ferror@plt+0x42760>
  44545c:	ldr	x3, [x19]
  445460:	ldr	x0, [x19, #8]
  445464:	mov	x2, x21
  445468:	mov	x1, x22
  44546c:	add	x0, x3, x0
  445470:	bl	402620 <memcpy@plt>
  445474:	ldr	x0, [x19]
  445478:	ldr	x1, [x19, #8]
  44547c:	add	x0, x0, x21
  445480:	strb	wzr, [x0, x1]
  445484:	ldr	x1, [x19, #8]
  445488:	add	x21, x1, x21
  44548c:	str	x21, [x19, #8]
  445490:	ldp	x19, x20, [sp, #16]
  445494:	ldp	x21, x22, [sp, #32]
  445498:	ldp	x29, x30, [sp], #48
  44549c:	ret
  4454a0:	ldr	w0, [x19, #24]
  4454a4:	cbnz	w0, 445490 <ferror@plt+0x42760>
  4454a8:	cbnz	x20, 4454b8 <ferror@plt+0x42788>
  4454ac:	mov	x20, #0x2                   	// #2
  4454b0:	cmp	x2, x20
  4454b4:	b.ls	4454c4 <ferror@plt+0x42794>  // b.plast
  4454b8:	lsl	x20, x20, #1
  4454bc:	cmp	x2, x20
  4454c0:	b.hi	4454b8 <ferror@plt+0x42788>  // b.pmore
  4454c4:	mov	x1, x20
  4454c8:	ldr	x0, [x19]
  4454cc:	bl	4028f0 <realloc@plt>
  4454d0:	cbz	x0, 4454e0 <ferror@plt+0x427b0>
  4454d4:	str	x0, [x19]
  4454d8:	str	x20, [x19, #16]
  4454dc:	b	445454 <ferror@plt+0x42724>
  4454e0:	ldr	x0, [x19]
  4454e4:	bl	402a90 <free@plt>
  4454e8:	str	xzr, [x19]
  4454ec:	str	xzr, [x19, #8]
  4454f0:	str	xzr, [x19, #16]
  4454f4:	mov	w0, #0x1                   	// #1
  4454f8:	str	w0, [x19, #24]
  4454fc:	b	445490 <ferror@plt+0x42760>
  445500:	stp	x29, x30, [sp, #-240]!
  445504:	mov	x29, sp
  445508:	stp	x19, x20, [sp, #16]
  44550c:	mov	x19, x0
  445510:	cbz	x2, 445554 <ferror@plt+0x42824>
  445514:	stp	x21, x22, [sp, #32]
  445518:	mov	w20, w1
  44551c:	mov	x22, x2
  445520:	ldr	w21, [x0, #304]
  445524:	cbnz	w21, 449690 <ferror@plt+0x46960>
  445528:	ldr	w0, [x2]
  44552c:	cmp	w0, #0x50
  445530:	b.hi	44958c <ferror@plt+0x4685c>  // b.pmore
  445534:	stp	x23, x24, [sp, #48]
  445538:	stp	x25, x26, [sp, #64]
  44553c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  445540:	add	x1, x1, #0xea0
  445544:	ldrh	w1, [x1, w0, uxtw #1]
  445548:	adr	x2, 445554 <ferror@plt+0x42824>
  44554c:	add	x1, x2, w1, sxth #2
  445550:	br	x1
  445554:	mov	w0, #0x1                   	// #1
  445558:	str	w0, [x19, #304]
  44555c:	b	449694 <ferror@plt+0x46964>
  445560:	tbnz	w20, #2, 4455ec <ferror@plt+0x428bc>
  445564:	ldr	x1, [x22, #8]
  445568:	ldrsw	x0, [x22, #16]
  44556c:	cbz	x0, 4496a0 <ferror@plt+0x46970>
  445570:	mov	x20, x1
  445574:	add	x22, x1, x0
  445578:	mov	x23, #0xff                  	// #255
  44557c:	b	4455a0 <ferror@plt+0x42870>
  445580:	ldr	x0, [x19, #256]
  445584:	add	x1, x0, #0x1
  445588:	str	x1, [x19, #256]
  44558c:	strb	w21, [x19, x0]
  445590:	strb	w21, [x19, #264]
  445594:	add	x20, x20, #0x1
  445598:	cmp	x22, x20
  44559c:	b.eq	4455dc <ferror@plt+0x428ac>  // b.none
  4455a0:	ldrb	w21, [x20]
  4455a4:	ldr	x0, [x19, #256]
  4455a8:	cmp	x0, #0xff
  4455ac:	b.ne	445580 <ferror@plt+0x42850>  // b.any
  4455b0:	strb	wzr, [x19, #255]
  4455b4:	ldr	x3, [x19, #272]
  4455b8:	ldr	x2, [x19, #280]
  4455bc:	mov	x1, x23
  4455c0:	mov	x0, x19
  4455c4:	blr	x3
  4455c8:	str	xzr, [x19, #256]
  4455cc:	ldr	x0, [x19, #320]
  4455d0:	add	x0, x0, #0x1
  4455d4:	str	x0, [x19, #320]
  4455d8:	b	445580 <ferror@plt+0x42850>
  4455dc:	ldp	x21, x22, [sp, #32]
  4455e0:	ldp	x23, x24, [sp, #48]
  4455e4:	ldp	x25, x26, [sp, #64]
  4455e8:	b	449694 <ferror@plt+0x46964>
  4455ec:	ldr	x20, [x22, #8]
  4455f0:	ldrsw	x22, [x22, #16]
  4455f4:	add	x22, x20, x22
  4455f8:	cmp	x20, x22
  4455fc:	b.cs	4496b0 <ferror@plt+0x46980>  // b.hs, b.nlast
  445600:	mov	x23, #0xff                  	// #255
  445604:	mov	x24, #0x0                   	// #0
  445608:	b	4456b0 <ferror@plt+0x42980>
  44560c:	sub	w1, w0, #0x41
  445610:	and	w1, w1, #0xff
  445614:	cmp	w1, #0x5
  445618:	b.hi	445650 <ferror@plt+0x42920>  // b.pmore
  44561c:	sub	w0, w0, #0x37
  445620:	sxtw	x0, w0
  445624:	add	x2, x0, x2, lsl #4
  445628:	add	x21, x21, #0x1
  44562c:	cmp	x22, x21
  445630:	b.eq	445680 <ferror@plt+0x42950>  // b.none
  445634:	ldrb	w0, [x21]
  445638:	sub	w1, w0, #0x30
  44563c:	and	w1, w1, #0xff
  445640:	cmp	w1, #0x9
  445644:	b.hi	44560c <ferror@plt+0x428dc>  // b.pmore
  445648:	sub	w0, w0, #0x30
  44564c:	b	445620 <ferror@plt+0x428f0>
  445650:	sub	w1, w0, #0x61
  445654:	and	w1, w1, #0xff
  445658:	cmp	w1, #0x5
  44565c:	b.hi	445668 <ferror@plt+0x42938>  // b.pmore
  445660:	sub	w0, w0, #0x57
  445664:	b	445620 <ferror@plt+0x428f0>
  445668:	cmp	x22, x21
  44566c:	b.ls	445680 <ferror@plt+0x42950>  // b.plast
  445670:	ldrb	w0, [x21]
  445674:	cmp	w0, #0x5f
  445678:	ccmp	x2, x23, #0x2, eq  // eq = none
  44567c:	b.ls	4456f4 <ferror@plt+0x429c4>  // b.plast
  445680:	ldrb	w21, [x20]
  445684:	ldr	x0, [x19, #256]
  445688:	cmp	x0, #0xff
  44568c:	b.eq	44574c <ferror@plt+0x42a1c>  // b.none
  445690:	ldr	x0, [x19, #256]
  445694:	add	x1, x0, #0x1
  445698:	str	x1, [x19, #256]
  44569c:	strb	w21, [x19, x0]
  4456a0:	strb	w21, [x19, #264]
  4456a4:	add	x20, x20, #0x1
  4456a8:	cmp	x22, x20
  4456ac:	b.ls	445778 <ferror@plt+0x42a48>  // b.plast
  4456b0:	sub	x0, x22, x20
  4456b4:	cmp	x0, #0x3
  4456b8:	b.le	445680 <ferror@plt+0x42950>
  4456bc:	ldrb	w0, [x20]
  4456c0:	cmp	w0, #0x5f
  4456c4:	b.ne	445680 <ferror@plt+0x42950>  // b.any
  4456c8:	ldrb	w0, [x20, #1]
  4456cc:	cmp	w0, #0x5f
  4456d0:	b.ne	445680 <ferror@plt+0x42950>  // b.any
  4456d4:	ldrb	w0, [x20, #2]
  4456d8:	cmp	w0, #0x55
  4456dc:	b.ne	445680 <ferror@plt+0x42950>  // b.any
  4456e0:	add	x21, x20, #0x3
  4456e4:	cmp	x22, x21
  4456e8:	b.ls	445680 <ferror@plt+0x42950>  // b.plast
  4456ec:	mov	x2, x24
  4456f0:	b	445634 <ferror@plt+0x42904>
  4456f4:	and	w20, w2, #0xff
  4456f8:	ldr	x0, [x19, #256]
  4456fc:	cmp	x0, #0xff
  445700:	b.eq	445720 <ferror@plt+0x429f0>  // b.none
  445704:	ldr	x0, [x19, #256]
  445708:	add	x1, x0, #0x1
  44570c:	str	x1, [x19, #256]
  445710:	strb	w20, [x19, x0]
  445714:	strb	w20, [x19, #264]
  445718:	mov	x20, x21
  44571c:	b	4456a4 <ferror@plt+0x42974>
  445720:	strb	wzr, [x19, #255]
  445724:	ldr	x3, [x19, #272]
  445728:	ldr	x2, [x19, #280]
  44572c:	mov	x1, x23
  445730:	mov	x0, x19
  445734:	blr	x3
  445738:	str	xzr, [x19, #256]
  44573c:	ldr	x0, [x19, #320]
  445740:	add	x0, x0, #0x1
  445744:	str	x0, [x19, #320]
  445748:	b	445704 <ferror@plt+0x429d4>
  44574c:	strb	wzr, [x19, #255]
  445750:	ldr	x3, [x19, #272]
  445754:	ldr	x2, [x19, #280]
  445758:	mov	x1, x23
  44575c:	mov	x0, x19
  445760:	blr	x3
  445764:	str	xzr, [x19, #256]
  445768:	ldr	x0, [x19, #320]
  44576c:	add	x0, x0, #0x1
  445770:	str	x0, [x19, #320]
  445774:	b	445690 <ferror@plt+0x42960>
  445778:	ldp	x21, x22, [sp, #32]
  44577c:	ldp	x23, x24, [sp, #48]
  445780:	ldp	x25, x26, [sp, #64]
  445784:	b	449694 <ferror@plt+0x46964>
  445788:	ldr	x2, [x22, #8]
  44578c:	mov	w1, w20
  445790:	mov	x0, x19
  445794:	bl	4497d4 <ferror@plt+0x46aa4>
  445798:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44579c:	add	x21, x21, #0xca0
  4457a0:	add	x24, x21, #0x5
  4457a4:	mov	x25, #0xff                  	// #255
  4457a8:	b	4457cc <ferror@plt+0x42a9c>
  4457ac:	ldr	x0, [x19, #256]
  4457b0:	add	x1, x0, #0x1
  4457b4:	str	x1, [x19, #256]
  4457b8:	strb	w23, [x19, x0]
  4457bc:	strb	w23, [x19, #264]
  4457c0:	add	x21, x21, #0x1
  4457c4:	cmp	x21, x24
  4457c8:	b.eq	445808 <ferror@plt+0x42ad8>  // b.none
  4457cc:	ldrb	w23, [x21]
  4457d0:	ldr	x0, [x19, #256]
  4457d4:	cmp	x0, #0xff
  4457d8:	b.ne	4457ac <ferror@plt+0x42a7c>  // b.any
  4457dc:	strb	wzr, [x19, #255]
  4457e0:	ldr	x3, [x19, #272]
  4457e4:	ldr	x2, [x19, #280]
  4457e8:	mov	x1, x25
  4457ec:	mov	x0, x19
  4457f0:	blr	x3
  4457f4:	str	xzr, [x19, #256]
  4457f8:	ldr	x0, [x19, #320]
  4457fc:	add	x0, x0, #0x1
  445800:	str	x0, [x19, #320]
  445804:	b	4457ac <ferror@plt+0x42a7c>
  445808:	ldr	x2, [x22, #16]
  44580c:	mov	w1, w20
  445810:	mov	x0, x19
  445814:	bl	4497d4 <ferror@plt+0x46aa4>
  445818:	ldr	x0, [x19, #256]
  44581c:	cmp	x0, #0xff
  445820:	b.eq	44584c <ferror@plt+0x42b1c>  // b.none
  445824:	ldr	x1, [x19, #256]
  445828:	add	x0, x1, #0x1
  44582c:	str	x0, [x19, #256]
  445830:	mov	w0, #0x5d                  	// #93
  445834:	strb	w0, [x19, x1]
  445838:	strb	w0, [x19, #264]
  44583c:	ldp	x21, x22, [sp, #32]
  445840:	ldp	x23, x24, [sp, #48]
  445844:	ldp	x25, x26, [sp, #64]
  445848:	b	449694 <ferror@plt+0x46964>
  44584c:	strb	wzr, [x19, #255]
  445850:	ldr	x3, [x19, #272]
  445854:	ldr	x2, [x19, #280]
  445858:	mov	x1, #0xff                  	// #255
  44585c:	mov	x0, x19
  445860:	blr	x3
  445864:	str	xzr, [x19, #256]
  445868:	ldr	x0, [x19, #320]
  44586c:	add	x0, x0, #0x1
  445870:	str	x0, [x19, #320]
  445874:	b	445824 <ferror@plt+0x42af4>
  445878:	ldr	x2, [x22, #8]
  44587c:	mov	w1, w20
  445880:	mov	x0, x19
  445884:	bl	4497d4 <ferror@plt+0x46aa4>
  445888:	tbz	w20, #2, 4458e0 <ferror@plt+0x42bb0>
  44588c:	ldr	x0, [x19, #256]
  445890:	cmp	x0, #0xff
  445894:	b.eq	445950 <ferror@plt+0x42c20>  // b.none
  445898:	ldr	x1, [x19, #256]
  44589c:	add	x0, x1, #0x1
  4458a0:	str	x0, [x19, #256]
  4458a4:	mov	w0, #0x2e                  	// #46
  4458a8:	strb	w0, [x19, x1]
  4458ac:	strb	w0, [x19, #264]
  4458b0:	ldr	x23, [x22, #16]
  4458b4:	ldr	w0, [x23]
  4458b8:	cmp	w0, #0x47
  4458bc:	b.eq	44597c <ferror@plt+0x42c4c>  // b.none
  4458c0:	mov	x2, x23
  4458c4:	mov	w1, w20
  4458c8:	mov	x0, x19
  4458cc:	bl	4497d4 <ferror@plt+0x46aa4>
  4458d0:	ldp	x21, x22, [sp, #32]
  4458d4:	ldp	x23, x24, [sp, #48]
  4458d8:	ldp	x25, x26, [sp, #64]
  4458dc:	b	449694 <ferror@plt+0x46964>
  4458e0:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x24c60>
  4458e4:	add	x21, x21, #0xc30
  4458e8:	add	x24, x21, #0x2
  4458ec:	mov	x25, #0xff                  	// #255
  4458f0:	b	445914 <ferror@plt+0x42be4>
  4458f4:	ldr	x0, [x19, #256]
  4458f8:	add	x1, x0, #0x1
  4458fc:	str	x1, [x19, #256]
  445900:	strb	w23, [x19, x0]
  445904:	strb	w23, [x19, #264]
  445908:	add	x21, x21, #0x1
  44590c:	cmp	x24, x21
  445910:	b.eq	4458b0 <ferror@plt+0x42b80>  // b.none
  445914:	ldrb	w23, [x21]
  445918:	ldr	x0, [x19, #256]
  44591c:	cmp	x0, #0xff
  445920:	b.ne	4458f4 <ferror@plt+0x42bc4>  // b.any
  445924:	strb	wzr, [x19, #255]
  445928:	ldr	x3, [x19, #272]
  44592c:	ldr	x2, [x19, #280]
  445930:	mov	x1, x25
  445934:	mov	x0, x19
  445938:	blr	x3
  44593c:	str	xzr, [x19, #256]
  445940:	ldr	x0, [x19, #320]
  445944:	add	x0, x0, #0x1
  445948:	str	x0, [x19, #320]
  44594c:	b	4458f4 <ferror@plt+0x42bc4>
  445950:	strb	wzr, [x19, #255]
  445954:	ldr	x3, [x19, #272]
  445958:	ldr	x2, [x19, #280]
  44595c:	mov	x1, #0xff                  	// #255
  445960:	mov	x0, x19
  445964:	blr	x3
  445968:	str	xzr, [x19, #256]
  44596c:	ldr	x0, [x19, #320]
  445970:	add	x0, x0, #0x1
  445974:	str	x0, [x19, #320]
  445978:	b	445898 <ferror@plt+0x42b68>
  44597c:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  445980:	add	x21, x21, #0xca8
  445984:	add	x24, x21, #0xd
  445988:	mov	x25, #0xff                  	// #255
  44598c:	b	4459b0 <ferror@plt+0x42c80>
  445990:	ldr	x0, [x19, #256]
  445994:	add	x1, x0, #0x1
  445998:	str	x1, [x19, #256]
  44599c:	strb	w22, [x19, x0]
  4459a0:	strb	w22, [x19, #264]
  4459a4:	add	x21, x21, #0x1
  4459a8:	cmp	x21, x24
  4459ac:	b.eq	4459ec <ferror@plt+0x42cbc>  // b.none
  4459b0:	ldrb	w22, [x21]
  4459b4:	ldr	x0, [x19, #256]
  4459b8:	cmp	x0, #0xff
  4459bc:	b.ne	445990 <ferror@plt+0x42c60>  // b.any
  4459c0:	strb	wzr, [x19, #255]
  4459c4:	ldr	x3, [x19, #272]
  4459c8:	ldr	x2, [x19, #280]
  4459cc:	mov	x1, x25
  4459d0:	mov	x0, x19
  4459d4:	blr	x3
  4459d8:	str	xzr, [x19, #256]
  4459dc:	ldr	x0, [x19, #320]
  4459e0:	add	x0, x0, #0x1
  4459e4:	str	x0, [x19, #320]
  4459e8:	b	445990 <ferror@plt+0x42c60>
  4459ec:	ldr	w2, [x23, #16]
  4459f0:	add	w2, w2, #0x1
  4459f4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4459f8:	add	x1, x1, #0xd08
  4459fc:	add	x0, sp, #0x70
  445a00:	bl	402720 <sprintf@plt>
  445a04:	add	x0, sp, #0x70
  445a08:	bl	402680 <strlen@plt>
  445a0c:	cbz	x0, 445a7c <ferror@plt+0x42d4c>
  445a10:	add	x21, sp, #0x70
  445a14:	add	x24, x0, x21
  445a18:	mov	x25, #0xff                  	// #255
  445a1c:	b	445a40 <ferror@plt+0x42d10>
  445a20:	ldr	x0, [x19, #256]
  445a24:	add	x1, x0, #0x1
  445a28:	str	x1, [x19, #256]
  445a2c:	strb	w22, [x19, x0]
  445a30:	strb	w22, [x19, #264]
  445a34:	add	x21, x21, #0x1
  445a38:	cmp	x24, x21
  445a3c:	b.eq	445a7c <ferror@plt+0x42d4c>  // b.none
  445a40:	ldrb	w22, [x21]
  445a44:	ldr	x0, [x19, #256]
  445a48:	cmp	x0, #0xff
  445a4c:	b.ne	445a20 <ferror@plt+0x42cf0>  // b.any
  445a50:	strb	wzr, [x19, #255]
  445a54:	ldr	x3, [x19, #272]
  445a58:	ldr	x2, [x19, #280]
  445a5c:	mov	x1, x25
  445a60:	mov	x0, x19
  445a64:	blr	x3
  445a68:	str	xzr, [x19, #256]
  445a6c:	ldr	x0, [x19, #320]
  445a70:	add	x0, x0, #0x1
  445a74:	str	x0, [x19, #320]
  445a78:	b	445a20 <ferror@plt+0x42cf0>
  445a7c:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  445a80:	add	x21, x21, #0xcb8
  445a84:	add	x24, x21, #0x3
  445a88:	mov	x25, #0xff                  	// #255
  445a8c:	b	445ab0 <ferror@plt+0x42d80>
  445a90:	ldr	x0, [x19, #256]
  445a94:	add	x1, x0, #0x1
  445a98:	str	x1, [x19, #256]
  445a9c:	strb	w22, [x19, x0]
  445aa0:	strb	w22, [x19, #264]
  445aa4:	add	x21, x21, #0x1
  445aa8:	cmp	x21, x24
  445aac:	b.eq	445aec <ferror@plt+0x42dbc>  // b.none
  445ab0:	ldrb	w22, [x21]
  445ab4:	ldr	x0, [x19, #256]
  445ab8:	cmp	x0, #0xff
  445abc:	b.ne	445a90 <ferror@plt+0x42d60>  // b.any
  445ac0:	strb	wzr, [x19, #255]
  445ac4:	ldr	x3, [x19, #272]
  445ac8:	ldr	x2, [x19, #280]
  445acc:	mov	x1, x25
  445ad0:	mov	x0, x19
  445ad4:	blr	x3
  445ad8:	str	xzr, [x19, #256]
  445adc:	ldr	x0, [x19, #320]
  445ae0:	add	x0, x0, #0x1
  445ae4:	str	x0, [x19, #320]
  445ae8:	b	445a90 <ferror@plt+0x42d60>
  445aec:	ldr	x23, [x23, #8]
  445af0:	b	4458c0 <ferror@plt+0x42b90>
  445af4:	stp	x27, x28, [sp, #80]
  445af8:	ldr	x27, [x19, #296]
  445afc:	str	xzr, [x19, #296]
  445b00:	ldr	x21, [x22, #8]
  445b04:	cbz	x21, 44959c <ferror@plt+0x4686c>
  445b08:	ldr	x24, [x19, #288]
  445b0c:	add	x26, sp, #0x70
  445b10:	mov	x25, x26
  445b14:	mov	w23, #0x0                   	// #0
  445b18:	ldr	x0, [x19, #296]
  445b1c:	str	x0, [x25]
  445b20:	str	x25, [x19, #296]
  445b24:	str	x21, [x25, #8]
  445b28:	str	wzr, [x25, #16]
  445b2c:	str	x24, [x25, #24]
  445b30:	add	w23, w23, #0x1
  445b34:	ldr	w28, [x21]
  445b38:	mov	w0, w28
  445b3c:	bl	4449ec <ferror@plt+0x41cbc>
  445b40:	cbz	w0, 4495b8 <ferror@plt+0x46888>
  445b44:	ldr	x21, [x21, #8]
  445b48:	cbz	x21, 44959c <ferror@plt+0x4686c>
  445b4c:	add	x25, x25, #0x20
  445b50:	cmp	w23, #0x4
  445b54:	b.ne	445b18 <ferror@plt+0x42de8>  // b.any
  445b58:	mov	w0, #0x1                   	// #1
  445b5c:	str	w0, [x19, #304]
  445b60:	ldp	x21, x22, [sp, #32]
  445b64:	ldp	x23, x24, [sp, #48]
  445b68:	ldp	x25, x26, [sp, #64]
  445b6c:	ldp	x27, x28, [sp, #80]
  445b70:	b	449694 <ferror@plt+0x46964>
  445b74:	ldr	x21, [x21, #16]
  445b78:	ldr	w0, [x21]
  445b7c:	cmp	w0, #0x47
  445b80:	b.eq	445bf4 <ferror@plt+0x42ec4>  // b.none
  445b84:	ubfiz	x25, x23, #5, #32
  445b88:	add	x0, sp, #0x70
  445b8c:	add	x25, x0, x25
  445b90:	add	x28, sp, #0x78
  445b94:	ldr	w0, [x21]
  445b98:	bl	4449ec <ferror@plt+0x41cbc>
  445b9c:	cbz	w0, 4495c0 <ferror@plt+0x46890>
  445ba0:	cmp	w23, #0x3
  445ba4:	b.hi	445c18 <ferror@plt+0x42ee8>  // b.pmore
  445ba8:	sub	w0, w23, #0x1
  445bac:	lsl	x0, x0, #5
  445bb0:	add	x1, sp, #0x70
  445bb4:	add	x1, x1, x0
  445bb8:	ldp	x2, x3, [x1]
  445bbc:	stp	x2, x3, [x25]
  445bc0:	ldp	x2, x3, [x1, #16]
  445bc4:	stp	x2, x3, [x25, #16]
  445bc8:	str	x1, [x25]
  445bcc:	str	x25, [x19, #296]
  445bd0:	str	x21, [x28, x0]
  445bd4:	add	x1, sp, #0x80
  445bd8:	str	wzr, [x1, x0]
  445bdc:	add	x1, sp, #0x88
  445be0:	str	x24, [x1, x0]
  445be4:	add	w23, w23, #0x1
  445be8:	ldr	x21, [x21, #8]
  445bec:	add	x25, x25, #0x20
  445bf0:	b	445b94 <ferror@plt+0x42e64>
  445bf4:	ldr	x21, [x21, #8]
  445bf8:	cbnz	x21, 445b84 <ferror@plt+0x42e54>
  445bfc:	mov	w0, #0x1                   	// #1
  445c00:	str	w0, [x19, #304]
  445c04:	ldp	x21, x22, [sp, #32]
  445c08:	ldp	x23, x24, [sp, #48]
  445c0c:	ldp	x25, x26, [sp, #64]
  445c10:	ldp	x27, x28, [sp, #80]
  445c14:	b	449694 <ferror@plt+0x46964>
  445c18:	mov	w0, #0x1                   	// #1
  445c1c:	str	w0, [x19, #304]
  445c20:	ldp	x21, x22, [sp, #32]
  445c24:	ldp	x23, x24, [sp, #48]
  445c28:	ldp	x25, x26, [sp, #64]
  445c2c:	ldp	x27, x28, [sp, #80]
  445c30:	b	449694 <ferror@plt+0x46964>
  445c34:	str	x24, [sp, #96]
  445c38:	add	x0, sp, #0x60
  445c3c:	str	x0, [x19, #288]
  445c40:	str	x21, [sp, #104]
  445c44:	b	4495cc <ferror@plt+0x4689c>
  445c48:	ldr	x0, [sp, #96]
  445c4c:	str	x0, [x19, #288]
  445c50:	b	4495e8 <ferror@plt+0x468b8>
  445c54:	ldr	x0, [x19, #256]
  445c58:	add	x1, x0, #0x1
  445c5c:	str	x1, [x19, #256]
  445c60:	strb	w22, [x19, x0]
  445c64:	strb	w22, [x19, #264]
  445c68:	ldr	x2, [x24, #8]
  445c6c:	mov	w1, w20
  445c70:	mov	x0, x19
  445c74:	bl	449870 <ferror@plt+0x46b40>
  445c78:	sub	x0, x21, #0x20
  445c7c:	cmp	x26, x21
  445c80:	b.eq	445ccc <ferror@plt+0x42f9c>  // b.none
  445c84:	mov	x21, x0
  445c88:	mov	x24, x21
  445c8c:	ldr	w0, [x21, #16]
  445c90:	cbnz	w0, 445c78 <ferror@plt+0x42f48>
  445c94:	ldr	x0, [x19, #256]
  445c98:	cmp	x0, #0xff
  445c9c:	b.ne	445c54 <ferror@plt+0x42f24>  // b.any
  445ca0:	strb	wzr, [x19, #255]
  445ca4:	ldr	x3, [x19, #272]
  445ca8:	ldr	x2, [x19, #280]
  445cac:	mov	x1, x23
  445cb0:	mov	x0, x19
  445cb4:	blr	x3
  445cb8:	str	xzr, [x19, #256]
  445cbc:	ldr	x0, [x19, #320]
  445cc0:	add	x0, x0, #0x1
  445cc4:	str	x0, [x19, #320]
  445cc8:	b	445c54 <ferror@plt+0x42f24>
  445ccc:	str	x27, [x19, #296]
  445cd0:	ldp	x21, x22, [sp, #32]
  445cd4:	ldp	x23, x24, [sp, #48]
  445cd8:	ldp	x25, x26, [sp, #64]
  445cdc:	ldp	x27, x28, [sp, #80]
  445ce0:	b	449694 <ferror@plt+0x46964>
  445ce4:	ldr	x23, [x19, #368]
  445ce8:	str	x22, [x19, #368]
  445cec:	ldr	x24, [x19, #296]
  445cf0:	str	xzr, [x19, #296]
  445cf4:	ldr	x21, [x22, #8]
  445cf8:	tbz	w20, #2, 445d10 <ferror@plt+0x42fe0>
  445cfc:	ldr	w0, [x21]
  445d00:	cbnz	w0, 445d10 <ferror@plt+0x42fe0>
  445d04:	ldr	w0, [x21, #16]
  445d08:	cmp	w0, #0x6
  445d0c:	b.eq	445da8 <ferror@plt+0x43078>  // b.none
  445d10:	mov	x2, x21
  445d14:	mov	w1, w20
  445d18:	mov	x0, x19
  445d1c:	bl	4497d4 <ferror@plt+0x46aa4>
  445d20:	ldrb	w0, [x19, #264]
  445d24:	cmp	w0, #0x3c
  445d28:	b.eq	445de8 <ferror@plt+0x430b8>  // b.none
  445d2c:	ldr	x0, [x19, #256]
  445d30:	cmp	x0, #0xff
  445d34:	b.eq	445e3c <ferror@plt+0x4310c>  // b.none
  445d38:	ldr	x1, [x19, #256]
  445d3c:	add	x0, x1, #0x1
  445d40:	str	x0, [x19, #256]
  445d44:	mov	w0, #0x3c                  	// #60
  445d48:	strb	w0, [x19, x1]
  445d4c:	strb	w0, [x19, #264]
  445d50:	ldr	x2, [x22, #16]
  445d54:	mov	w1, w20
  445d58:	mov	x0, x19
  445d5c:	bl	4497d4 <ferror@plt+0x46aa4>
  445d60:	ldrb	w0, [x19, #264]
  445d64:	cmp	w0, #0x3e
  445d68:	b.eq	445e68 <ferror@plt+0x43138>  // b.none
  445d6c:	ldr	x0, [x19, #256]
  445d70:	cmp	x0, #0xff
  445d74:	b.eq	445ebc <ferror@plt+0x4318c>  // b.none
  445d78:	ldr	x1, [x19, #256]
  445d7c:	add	x0, x1, #0x1
  445d80:	str	x0, [x19, #256]
  445d84:	mov	w0, #0x3e                  	// #62
  445d88:	strb	w0, [x19, x1]
  445d8c:	strb	w0, [x19, #264]
  445d90:	str	x24, [x19, #296]
  445d94:	str	x23, [x19, #368]
  445d98:	ldp	x21, x22, [sp, #32]
  445d9c:	ldp	x23, x24, [sp, #48]
  445da0:	ldp	x25, x26, [sp, #64]
  445da4:	b	449694 <ferror@plt+0x46964>
  445da8:	mov	x2, #0x6                   	// #6
  445dac:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  445db0:	add	x1, x1, #0xcc0
  445db4:	ldr	x0, [x21, #8]
  445db8:	bl	402830 <strncmp@plt>
  445dbc:	cbnz	w0, 445d10 <ferror@plt+0x42fe0>
  445dc0:	ldr	x2, [x22, #16]
  445dc4:	mov	w1, w20
  445dc8:	mov	x0, x19
  445dcc:	bl	4497d4 <ferror@plt+0x46aa4>
  445dd0:	mov	x2, #0x2                   	// #2
  445dd4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  445dd8:	add	x1, x1, #0xc10
  445ddc:	mov	x0, x19
  445de0:	bl	4451e8 <ferror@plt+0x424b8>
  445de4:	b	445d90 <ferror@plt+0x43060>
  445de8:	ldr	x0, [x19, #256]
  445dec:	cmp	x0, #0xff
  445df0:	b.eq	445e10 <ferror@plt+0x430e0>  // b.none
  445df4:	ldr	x1, [x19, #256]
  445df8:	add	x0, x1, #0x1
  445dfc:	str	x0, [x19, #256]
  445e00:	mov	w0, #0x20                  	// #32
  445e04:	strb	w0, [x19, x1]
  445e08:	strb	w0, [x19, #264]
  445e0c:	b	445d2c <ferror@plt+0x42ffc>
  445e10:	strb	wzr, [x19, #255]
  445e14:	ldr	x3, [x19, #272]
  445e18:	ldr	x2, [x19, #280]
  445e1c:	mov	x1, #0xff                  	// #255
  445e20:	mov	x0, x19
  445e24:	blr	x3
  445e28:	str	xzr, [x19, #256]
  445e2c:	ldr	x0, [x19, #320]
  445e30:	add	x0, x0, #0x1
  445e34:	str	x0, [x19, #320]
  445e38:	b	445df4 <ferror@plt+0x430c4>
  445e3c:	strb	wzr, [x19, #255]
  445e40:	ldr	x3, [x19, #272]
  445e44:	ldr	x2, [x19, #280]
  445e48:	mov	x1, #0xff                  	// #255
  445e4c:	mov	x0, x19
  445e50:	blr	x3
  445e54:	str	xzr, [x19, #256]
  445e58:	ldr	x0, [x19, #320]
  445e5c:	add	x0, x0, #0x1
  445e60:	str	x0, [x19, #320]
  445e64:	b	445d38 <ferror@plt+0x43008>
  445e68:	ldr	x0, [x19, #256]
  445e6c:	cmp	x0, #0xff
  445e70:	b.eq	445e90 <ferror@plt+0x43160>  // b.none
  445e74:	ldr	x1, [x19, #256]
  445e78:	add	x0, x1, #0x1
  445e7c:	str	x0, [x19, #256]
  445e80:	mov	w0, #0x20                  	// #32
  445e84:	strb	w0, [x19, x1]
  445e88:	strb	w0, [x19, #264]
  445e8c:	b	445d6c <ferror@plt+0x4303c>
  445e90:	strb	wzr, [x19, #255]
  445e94:	ldr	x3, [x19, #272]
  445e98:	ldr	x2, [x19, #280]
  445e9c:	mov	x1, #0xff                  	// #255
  445ea0:	mov	x0, x19
  445ea4:	blr	x3
  445ea8:	str	xzr, [x19, #256]
  445eac:	ldr	x0, [x19, #320]
  445eb0:	add	x0, x0, #0x1
  445eb4:	str	x0, [x19, #320]
  445eb8:	b	445e74 <ferror@plt+0x43144>
  445ebc:	strb	wzr, [x19, #255]
  445ec0:	ldr	x3, [x19, #272]
  445ec4:	ldr	x2, [x19, #280]
  445ec8:	mov	x1, #0xff                  	// #255
  445ecc:	mov	x0, x19
  445ed0:	blr	x3
  445ed4:	str	xzr, [x19, #256]
  445ed8:	ldr	x0, [x19, #320]
  445edc:	add	x0, x0, #0x1
  445ee0:	str	x0, [x19, #320]
  445ee4:	b	445d78 <ferror@plt+0x43048>
  445ee8:	ldr	w0, [x19, #312]
  445eec:	cbz	w0, 446000 <ferror@plt+0x432d0>
  445ef0:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  445ef4:	add	x20, x20, #0xcc8
  445ef8:	add	x23, x20, #0x5
  445efc:	mov	x24, #0xff                  	// #255
  445f00:	b	445f24 <ferror@plt+0x431f4>
  445f04:	ldr	x0, [x19, #256]
  445f08:	add	x1, x0, #0x1
  445f0c:	str	x1, [x19, #256]
  445f10:	strb	w21, [x19, x0]
  445f14:	strb	w21, [x19, #264]
  445f18:	add	x20, x20, #0x1
  445f1c:	cmp	x23, x20
  445f20:	b.eq	445f60 <ferror@plt+0x43230>  // b.none
  445f24:	ldrb	w21, [x20]
  445f28:	ldr	x0, [x19, #256]
  445f2c:	cmp	x0, #0xff
  445f30:	b.ne	445f04 <ferror@plt+0x431d4>  // b.any
  445f34:	strb	wzr, [x19, #255]
  445f38:	ldr	x3, [x19, #272]
  445f3c:	ldr	x2, [x19, #280]
  445f40:	mov	x1, x24
  445f44:	mov	x0, x19
  445f48:	blr	x3
  445f4c:	str	xzr, [x19, #256]
  445f50:	ldr	x0, [x19, #320]
  445f54:	add	x0, x0, #0x1
  445f58:	str	x0, [x19, #320]
  445f5c:	b	445f04 <ferror@plt+0x431d4>
  445f60:	ldr	x2, [x22, #8]
  445f64:	add	w2, w2, #0x1
  445f68:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  445f6c:	add	x1, x1, #0xd08
  445f70:	add	x0, sp, #0x70
  445f74:	bl	402720 <sprintf@plt>
  445f78:	add	x0, sp, #0x70
  445f7c:	bl	402680 <strlen@plt>
  445f80:	cbz	x0, 4496c0 <ferror@plt+0x46990>
  445f84:	add	x20, sp, #0x70
  445f88:	add	x22, x0, x20
  445f8c:	mov	x23, #0xff                  	// #255
  445f90:	b	445fb4 <ferror@plt+0x43284>
  445f94:	ldr	x0, [x19, #256]
  445f98:	add	x1, x0, #0x1
  445f9c:	str	x1, [x19, #256]
  445fa0:	strb	w21, [x19, x0]
  445fa4:	strb	w21, [x19, #264]
  445fa8:	add	x20, x20, #0x1
  445fac:	cmp	x22, x20
  445fb0:	b.eq	445ff0 <ferror@plt+0x432c0>  // b.none
  445fb4:	ldrb	w21, [x20]
  445fb8:	ldr	x0, [x19, #256]
  445fbc:	cmp	x0, #0xff
  445fc0:	b.ne	445f94 <ferror@plt+0x43264>  // b.any
  445fc4:	strb	wzr, [x19, #255]
  445fc8:	ldr	x3, [x19, #272]
  445fcc:	ldr	x2, [x19, #280]
  445fd0:	mov	x1, x23
  445fd4:	mov	x0, x19
  445fd8:	blr	x3
  445fdc:	str	xzr, [x19, #256]
  445fe0:	ldr	x0, [x19, #320]
  445fe4:	add	x0, x0, #0x1
  445fe8:	str	x0, [x19, #320]
  445fec:	b	445f94 <ferror@plt+0x43264>
  445ff0:	ldp	x21, x22, [sp, #32]
  445ff4:	ldp	x23, x24, [sp, #48]
  445ff8:	ldp	x25, x26, [sp, #64]
  445ffc:	b	449694 <ferror@plt+0x46964>
  446000:	mov	x1, x22
  446004:	mov	x0, x19
  446008:	bl	4452c0 <ferror@plt+0x42590>
  44600c:	cbz	x0, 446058 <ferror@plt+0x43328>
  446010:	ldr	w1, [x0]
  446014:	cmp	w1, #0x2f
  446018:	b.eq	44604c <ferror@plt+0x4331c>  // b.none
  44601c:	ldr	x21, [x19, #288]
  446020:	ldr	x1, [x21]
  446024:	str	x1, [x19, #288]
  446028:	mov	x2, x0
  44602c:	mov	w1, w20
  446030:	mov	x0, x19
  446034:	bl	4497d4 <ferror@plt+0x46aa4>
  446038:	str	x21, [x19, #288]
  44603c:	ldp	x21, x22, [sp, #32]
  446040:	ldp	x23, x24, [sp, #48]
  446044:	ldp	x25, x26, [sp, #64]
  446048:	b	449694 <ferror@plt+0x46964>
  44604c:	ldr	w1, [x19, #316]
  446050:	bl	445288 <ferror@plt+0x42558>
  446054:	cbnz	x0, 44601c <ferror@plt+0x432ec>
  446058:	mov	w0, #0x1                   	// #1
  44605c:	str	w0, [x19, #304]
  446060:	ldp	x21, x22, [sp, #32]
  446064:	ldp	x23, x24, [sp, #48]
  446068:	ldp	x25, x26, [sp, #64]
  44606c:	b	449694 <ferror@plt+0x46964>
  446070:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446074:	add	x21, x21, #0xcd0
  446078:	add	x24, x21, #0x1e
  44607c:	mov	x25, #0xff                  	// #255
  446080:	b	4460a4 <ferror@plt+0x43374>
  446084:	ldr	x0, [x19, #256]
  446088:	add	x1, x0, #0x1
  44608c:	str	x1, [x19, #256]
  446090:	strb	w23, [x19, x0]
  446094:	strb	w23, [x19, #264]
  446098:	add	x21, x21, #0x1
  44609c:	cmp	x21, x24
  4460a0:	b.eq	4460e0 <ferror@plt+0x433b0>  // b.none
  4460a4:	ldrb	w23, [x21]
  4460a8:	ldr	x0, [x19, #256]
  4460ac:	cmp	x0, #0xff
  4460b0:	b.ne	446084 <ferror@plt+0x43354>  // b.any
  4460b4:	strb	wzr, [x19, #255]
  4460b8:	ldr	x3, [x19, #272]
  4460bc:	ldr	x2, [x19, #280]
  4460c0:	mov	x1, x25
  4460c4:	mov	x0, x19
  4460c8:	blr	x3
  4460cc:	str	xzr, [x19, #256]
  4460d0:	ldr	x0, [x19, #320]
  4460d4:	add	x0, x0, #0x1
  4460d8:	str	x0, [x19, #320]
  4460dc:	b	446084 <ferror@plt+0x43354>
  4460e0:	ldr	x2, [x22, #8]
  4460e4:	mov	w1, w20
  4460e8:	mov	x0, x19
  4460ec:	bl	4497d4 <ferror@plt+0x46aa4>
  4460f0:	ldp	x21, x22, [sp, #32]
  4460f4:	ldp	x23, x24, [sp, #48]
  4460f8:	ldp	x25, x26, [sp, #64]
  4460fc:	b	449694 <ferror@plt+0x46964>
  446100:	ldr	x2, [x22, #16]
  446104:	mov	w1, w20
  446108:	mov	x0, x19
  44610c:	bl	4497d4 <ferror@plt+0x46aa4>
  446110:	ldp	x21, x22, [sp, #32]
  446114:	ldp	x23, x24, [sp, #48]
  446118:	ldp	x25, x26, [sp, #64]
  44611c:	b	449694 <ferror@plt+0x46964>
  446120:	ldr	x0, [x19, #256]
  446124:	cmp	x0, #0xff
  446128:	b.eq	446164 <ferror@plt+0x43434>  // b.none
  44612c:	ldr	x1, [x19, #256]
  446130:	add	x0, x1, #0x1
  446134:	str	x0, [x19, #256]
  446138:	mov	w0, #0x7e                  	// #126
  44613c:	strb	w0, [x19, x1]
  446140:	strb	w0, [x19, #264]
  446144:	ldr	x2, [x22, #16]
  446148:	mov	w1, w20
  44614c:	mov	x0, x19
  446150:	bl	4497d4 <ferror@plt+0x46aa4>
  446154:	ldp	x21, x22, [sp, #32]
  446158:	ldp	x23, x24, [sp, #48]
  44615c:	ldp	x25, x26, [sp, #64]
  446160:	b	449694 <ferror@plt+0x46964>
  446164:	strb	wzr, [x19, #255]
  446168:	ldr	x3, [x19, #272]
  44616c:	ldr	x2, [x19, #280]
  446170:	mov	x1, #0xff                  	// #255
  446174:	mov	x0, x19
  446178:	blr	x3
  44617c:	str	xzr, [x19, #256]
  446180:	ldr	x0, [x19, #320]
  446184:	add	x0, x0, #0x1
  446188:	str	x0, [x19, #320]
  44618c:	b	44612c <ferror@plt+0x433fc>
  446190:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446194:	add	x21, x21, #0xcf0
  446198:	add	x24, x21, #0xb
  44619c:	mov	x25, #0xff                  	// #255
  4461a0:	b	4461c4 <ferror@plt+0x43494>
  4461a4:	ldr	x0, [x19, #256]
  4461a8:	add	x1, x0, #0x1
  4461ac:	str	x1, [x19, #256]
  4461b0:	strb	w23, [x19, x0]
  4461b4:	strb	w23, [x19, #264]
  4461b8:	add	x21, x21, #0x1
  4461bc:	cmp	x24, x21
  4461c0:	b.eq	446200 <ferror@plt+0x434d0>  // b.none
  4461c4:	ldrb	w23, [x21]
  4461c8:	ldr	x0, [x19, #256]
  4461cc:	cmp	x0, #0xff
  4461d0:	b.ne	4461a4 <ferror@plt+0x43474>  // b.any
  4461d4:	strb	wzr, [x19, #255]
  4461d8:	ldr	x3, [x19, #272]
  4461dc:	ldr	x2, [x19, #280]
  4461e0:	mov	x1, x25
  4461e4:	mov	x0, x19
  4461e8:	blr	x3
  4461ec:	str	xzr, [x19, #256]
  4461f0:	ldr	x0, [x19, #320]
  4461f4:	add	x0, x0, #0x1
  4461f8:	str	x0, [x19, #320]
  4461fc:	b	4461a4 <ferror@plt+0x43474>
  446200:	ldr	x2, [x22, #8]
  446204:	mov	w1, w20
  446208:	mov	x0, x19
  44620c:	bl	4497d4 <ferror@plt+0x46aa4>
  446210:	ldp	x21, x22, [sp, #32]
  446214:	ldp	x23, x24, [sp, #48]
  446218:	ldp	x25, x26, [sp, #64]
  44621c:	b	449694 <ferror@plt+0x46964>
  446220:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446224:	add	x21, x21, #0xd00
  446228:	add	x24, x21, #0x8
  44622c:	mov	x25, #0xff                  	// #255
  446230:	b	446254 <ferror@plt+0x43524>
  446234:	ldr	x0, [x19, #256]
  446238:	add	x1, x0, #0x1
  44623c:	str	x1, [x19, #256]
  446240:	strb	w23, [x19, x0]
  446244:	strb	w23, [x19, #264]
  446248:	add	x21, x21, #0x1
  44624c:	cmp	x24, x21
  446250:	b.eq	446290 <ferror@plt+0x43560>  // b.none
  446254:	ldrb	w23, [x21]
  446258:	ldr	x0, [x19, #256]
  44625c:	cmp	x0, #0xff
  446260:	b.ne	446234 <ferror@plt+0x43504>  // b.any
  446264:	strb	wzr, [x19, #255]
  446268:	ldr	x3, [x19, #272]
  44626c:	ldr	x2, [x19, #280]
  446270:	mov	x1, x25
  446274:	mov	x0, x19
  446278:	blr	x3
  44627c:	str	xzr, [x19, #256]
  446280:	ldr	x0, [x19, #320]
  446284:	add	x0, x0, #0x1
  446288:	str	x0, [x19, #320]
  44628c:	b	446234 <ferror@plt+0x43504>
  446290:	ldr	x2, [x22, #8]
  446294:	mov	w1, w20
  446298:	mov	x0, x19
  44629c:	bl	4497d4 <ferror@plt+0x46aa4>
  4462a0:	ldp	x21, x22, [sp, #32]
  4462a4:	ldp	x23, x24, [sp, #48]
  4462a8:	ldp	x25, x26, [sp, #64]
  4462ac:	b	449694 <ferror@plt+0x46964>
  4462b0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4462b4:	add	x21, x21, #0xd10
  4462b8:	add	x24, x21, #0x18
  4462bc:	mov	x25, #0xff                  	// #255
  4462c0:	b	4462e4 <ferror@plt+0x435b4>
  4462c4:	ldr	x0, [x19, #256]
  4462c8:	add	x1, x0, #0x1
  4462cc:	str	x1, [x19, #256]
  4462d0:	strb	w23, [x19, x0]
  4462d4:	strb	w23, [x19, #264]
  4462d8:	add	x21, x21, #0x1
  4462dc:	cmp	x24, x21
  4462e0:	b.eq	446320 <ferror@plt+0x435f0>  // b.none
  4462e4:	ldrb	w23, [x21]
  4462e8:	ldr	x0, [x19, #256]
  4462ec:	cmp	x0, #0xff
  4462f0:	b.ne	4462c4 <ferror@plt+0x43594>  // b.any
  4462f4:	strb	wzr, [x19, #255]
  4462f8:	ldr	x3, [x19, #272]
  4462fc:	ldr	x2, [x19, #280]
  446300:	mov	x1, x25
  446304:	mov	x0, x19
  446308:	blr	x3
  44630c:	str	xzr, [x19, #256]
  446310:	ldr	x0, [x19, #320]
  446314:	add	x0, x0, #0x1
  446318:	str	x0, [x19, #320]
  44631c:	b	4462c4 <ferror@plt+0x43594>
  446320:	ldr	x2, [x22, #8]
  446324:	mov	w1, w20
  446328:	mov	x0, x19
  44632c:	bl	4497d4 <ferror@plt+0x46aa4>
  446330:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446334:	add	x21, x21, #0xd30
  446338:	add	x24, x21, #0x4
  44633c:	mov	x25, #0xff                  	// #255
  446340:	b	446364 <ferror@plt+0x43634>
  446344:	ldr	x0, [x19, #256]
  446348:	add	x1, x0, #0x1
  44634c:	str	x1, [x19, #256]
  446350:	strb	w23, [x19, x0]
  446354:	strb	w23, [x19, #264]
  446358:	add	x21, x21, #0x1
  44635c:	cmp	x21, x24
  446360:	b.eq	4463a0 <ferror@plt+0x43670>  // b.none
  446364:	ldrb	w23, [x21]
  446368:	ldr	x0, [x19, #256]
  44636c:	cmp	x0, #0xff
  446370:	b.ne	446344 <ferror@plt+0x43614>  // b.any
  446374:	strb	wzr, [x19, #255]
  446378:	ldr	x3, [x19, #272]
  44637c:	ldr	x2, [x19, #280]
  446380:	mov	x1, x25
  446384:	mov	x0, x19
  446388:	blr	x3
  44638c:	str	xzr, [x19, #256]
  446390:	ldr	x0, [x19, #320]
  446394:	add	x0, x0, #0x1
  446398:	str	x0, [x19, #320]
  44639c:	b	446344 <ferror@plt+0x43614>
  4463a0:	ldr	x2, [x22, #16]
  4463a4:	mov	w1, w20
  4463a8:	mov	x0, x19
  4463ac:	bl	4497d4 <ferror@plt+0x46aa4>
  4463b0:	ldp	x21, x22, [sp, #32]
  4463b4:	ldp	x23, x24, [sp, #48]
  4463b8:	ldp	x25, x26, [sp, #64]
  4463bc:	b	449694 <ferror@plt+0x46964>
  4463c0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4463c4:	add	x21, x21, #0xd38
  4463c8:	add	x24, x21, #0xd
  4463cc:	mov	x25, #0xff                  	// #255
  4463d0:	b	4463f4 <ferror@plt+0x436c4>
  4463d4:	ldr	x0, [x19, #256]
  4463d8:	add	x1, x0, #0x1
  4463dc:	str	x1, [x19, #256]
  4463e0:	strb	w23, [x19, x0]
  4463e4:	strb	w23, [x19, #264]
  4463e8:	add	x21, x21, #0x1
  4463ec:	cmp	x21, x24
  4463f0:	b.eq	446430 <ferror@plt+0x43700>  // b.none
  4463f4:	ldrb	w23, [x21]
  4463f8:	ldr	x0, [x19, #256]
  4463fc:	cmp	x0, #0xff
  446400:	b.ne	4463d4 <ferror@plt+0x436a4>  // b.any
  446404:	strb	wzr, [x19, #255]
  446408:	ldr	x3, [x19, #272]
  44640c:	ldr	x2, [x19, #280]
  446410:	mov	x1, x25
  446414:	mov	x0, x19
  446418:	blr	x3
  44641c:	str	xzr, [x19, #256]
  446420:	ldr	x0, [x19, #320]
  446424:	add	x0, x0, #0x1
  446428:	str	x0, [x19, #320]
  44642c:	b	4463d4 <ferror@plt+0x436a4>
  446430:	ldr	x2, [x22, #8]
  446434:	mov	w1, w20
  446438:	mov	x0, x19
  44643c:	bl	4497d4 <ferror@plt+0x46aa4>
  446440:	ldp	x21, x22, [sp, #32]
  446444:	ldp	x23, x24, [sp, #48]
  446448:	ldp	x25, x26, [sp, #64]
  44644c:	b	449694 <ferror@plt+0x46964>
  446450:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446454:	add	x21, x21, #0xd48
  446458:	add	x24, x21, #0x12
  44645c:	mov	x25, #0xff                  	// #255
  446460:	b	446484 <ferror@plt+0x43754>
  446464:	ldr	x0, [x19, #256]
  446468:	add	x1, x0, #0x1
  44646c:	str	x1, [x19, #256]
  446470:	strb	w23, [x19, x0]
  446474:	strb	w23, [x19, #264]
  446478:	add	x21, x21, #0x1
  44647c:	cmp	x24, x21
  446480:	b.eq	4464c0 <ferror@plt+0x43790>  // b.none
  446484:	ldrb	w23, [x21]
  446488:	ldr	x0, [x19, #256]
  44648c:	cmp	x0, #0xff
  446490:	b.ne	446464 <ferror@plt+0x43734>  // b.any
  446494:	strb	wzr, [x19, #255]
  446498:	ldr	x3, [x19, #272]
  44649c:	ldr	x2, [x19, #280]
  4464a0:	mov	x1, x25
  4464a4:	mov	x0, x19
  4464a8:	blr	x3
  4464ac:	str	xzr, [x19, #256]
  4464b0:	ldr	x0, [x19, #320]
  4464b4:	add	x0, x0, #0x1
  4464b8:	str	x0, [x19, #320]
  4464bc:	b	446464 <ferror@plt+0x43734>
  4464c0:	ldr	x2, [x22, #8]
  4464c4:	mov	w1, w20
  4464c8:	mov	x0, x19
  4464cc:	bl	4497d4 <ferror@plt+0x46aa4>
  4464d0:	ldp	x21, x22, [sp, #32]
  4464d4:	ldp	x23, x24, [sp, #48]
  4464d8:	ldp	x25, x26, [sp, #64]
  4464dc:	b	449694 <ferror@plt+0x46964>
  4464e0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4464e4:	add	x21, x21, #0xd60
  4464e8:	add	x24, x21, #0x10
  4464ec:	mov	x25, #0xff                  	// #255
  4464f0:	b	446514 <ferror@plt+0x437e4>
  4464f4:	ldr	x0, [x19, #256]
  4464f8:	add	x1, x0, #0x1
  4464fc:	str	x1, [x19, #256]
  446500:	strb	w23, [x19, x0]
  446504:	strb	w23, [x19, #264]
  446508:	add	x21, x21, #0x1
  44650c:	cmp	x21, x24
  446510:	b.eq	446550 <ferror@plt+0x43820>  // b.none
  446514:	ldrb	w23, [x21]
  446518:	ldr	x0, [x19, #256]
  44651c:	cmp	x0, #0xff
  446520:	b.ne	4464f4 <ferror@plt+0x437c4>  // b.any
  446524:	strb	wzr, [x19, #255]
  446528:	ldr	x3, [x19, #272]
  44652c:	ldr	x2, [x19, #280]
  446530:	mov	x1, x25
  446534:	mov	x0, x19
  446538:	blr	x3
  44653c:	str	xzr, [x19, #256]
  446540:	ldr	x0, [x19, #320]
  446544:	add	x0, x0, #0x1
  446548:	str	x0, [x19, #320]
  44654c:	b	4464f4 <ferror@plt+0x437c4>
  446550:	ldr	x2, [x22, #8]
  446554:	mov	w1, w20
  446558:	mov	x0, x19
  44655c:	bl	4497d4 <ferror@plt+0x46aa4>
  446560:	ldp	x21, x22, [sp, #32]
  446564:	ldp	x23, x24, [sp, #48]
  446568:	ldp	x25, x26, [sp, #64]
  44656c:	b	449694 <ferror@plt+0x46964>
  446570:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446574:	add	x21, x21, #0xd78
  446578:	add	x24, x21, #0x15
  44657c:	mov	x25, #0xff                  	// #255
  446580:	b	4465a4 <ferror@plt+0x43874>
  446584:	ldr	x0, [x19, #256]
  446588:	add	x1, x0, #0x1
  44658c:	str	x1, [x19, #256]
  446590:	strb	w23, [x19, x0]
  446594:	strb	w23, [x19, #264]
  446598:	add	x21, x21, #0x1
  44659c:	cmp	x24, x21
  4465a0:	b.eq	4465e0 <ferror@plt+0x438b0>  // b.none
  4465a4:	ldrb	w23, [x21]
  4465a8:	ldr	x0, [x19, #256]
  4465ac:	cmp	x0, #0xff
  4465b0:	b.ne	446584 <ferror@plt+0x43854>  // b.any
  4465b4:	strb	wzr, [x19, #255]
  4465b8:	ldr	x3, [x19, #272]
  4465bc:	ldr	x2, [x19, #280]
  4465c0:	mov	x1, x25
  4465c4:	mov	x0, x19
  4465c8:	blr	x3
  4465cc:	str	xzr, [x19, #256]
  4465d0:	ldr	x0, [x19, #320]
  4465d4:	add	x0, x0, #0x1
  4465d8:	str	x0, [x19, #320]
  4465dc:	b	446584 <ferror@plt+0x43854>
  4465e0:	ldr	x2, [x22, #8]
  4465e4:	mov	w1, w20
  4465e8:	mov	x0, x19
  4465ec:	bl	4497d4 <ferror@plt+0x46aa4>
  4465f0:	ldp	x21, x22, [sp, #32]
  4465f4:	ldp	x23, x24, [sp, #48]
  4465f8:	ldp	x25, x26, [sp, #64]
  4465fc:	b	449694 <ferror@plt+0x46964>
  446600:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446604:	add	x21, x21, #0xd90
  446608:	add	x24, x21, #0x11
  44660c:	mov	x25, #0xff                  	// #255
  446610:	b	446634 <ferror@plt+0x43904>
  446614:	ldr	x0, [x19, #256]
  446618:	add	x1, x0, #0x1
  44661c:	str	x1, [x19, #256]
  446620:	strb	w23, [x19, x0]
  446624:	strb	w23, [x19, #264]
  446628:	add	x21, x21, #0x1
  44662c:	cmp	x24, x21
  446630:	b.eq	446670 <ferror@plt+0x43940>  // b.none
  446634:	ldrb	w23, [x21]
  446638:	ldr	x0, [x19, #256]
  44663c:	cmp	x0, #0xff
  446640:	b.ne	446614 <ferror@plt+0x438e4>  // b.any
  446644:	strb	wzr, [x19, #255]
  446648:	ldr	x3, [x19, #272]
  44664c:	ldr	x2, [x19, #280]
  446650:	mov	x1, x25
  446654:	mov	x0, x19
  446658:	blr	x3
  44665c:	str	xzr, [x19, #256]
  446660:	ldr	x0, [x19, #320]
  446664:	add	x0, x0, #0x1
  446668:	str	x0, [x19, #320]
  44666c:	b	446614 <ferror@plt+0x438e4>
  446670:	ldr	x2, [x22, #8]
  446674:	mov	w1, w20
  446678:	mov	x0, x19
  44667c:	bl	4497d4 <ferror@plt+0x46aa4>
  446680:	ldp	x21, x22, [sp, #32]
  446684:	ldp	x23, x24, [sp, #48]
  446688:	ldp	x25, x26, [sp, #64]
  44668c:	b	449694 <ferror@plt+0x46964>
  446690:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446694:	add	x21, x21, #0xda8
  446698:	add	x24, x21, #0x1a
  44669c:	mov	x25, #0xff                  	// #255
  4466a0:	b	4466c4 <ferror@plt+0x43994>
  4466a4:	ldr	x0, [x19, #256]
  4466a8:	add	x1, x0, #0x1
  4466ac:	str	x1, [x19, #256]
  4466b0:	strb	w23, [x19, x0]
  4466b4:	strb	w23, [x19, #264]
  4466b8:	add	x21, x21, #0x1
  4466bc:	cmp	x24, x21
  4466c0:	b.eq	446700 <ferror@plt+0x439d0>  // b.none
  4466c4:	ldrb	w23, [x21]
  4466c8:	ldr	x0, [x19, #256]
  4466cc:	cmp	x0, #0xff
  4466d0:	b.ne	4466a4 <ferror@plt+0x43974>  // b.any
  4466d4:	strb	wzr, [x19, #255]
  4466d8:	ldr	x3, [x19, #272]
  4466dc:	ldr	x2, [x19, #280]
  4466e0:	mov	x1, x25
  4466e4:	mov	x0, x19
  4466e8:	blr	x3
  4466ec:	str	xzr, [x19, #256]
  4466f0:	ldr	x0, [x19, #320]
  4466f4:	add	x0, x0, #0x1
  4466f8:	str	x0, [x19, #320]
  4466fc:	b	4466a4 <ferror@plt+0x43974>
  446700:	ldr	x2, [x22, #8]
  446704:	mov	w1, w20
  446708:	mov	x0, x19
  44670c:	bl	4497d4 <ferror@plt+0x46aa4>
  446710:	ldp	x21, x22, [sp, #32]
  446714:	ldp	x23, x24, [sp, #48]
  446718:	ldp	x25, x26, [sp, #64]
  44671c:	b	449694 <ferror@plt+0x46964>
  446720:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446724:	add	x21, x21, #0xdc8
  446728:	add	x24, x21, #0xf
  44672c:	mov	x25, #0xff                  	// #255
  446730:	b	446754 <ferror@plt+0x43a24>
  446734:	ldr	x0, [x19, #256]
  446738:	add	x1, x0, #0x1
  44673c:	str	x1, [x19, #256]
  446740:	strb	w23, [x19, x0]
  446744:	strb	w23, [x19, #264]
  446748:	add	x21, x21, #0x1
  44674c:	cmp	x24, x21
  446750:	b.eq	446790 <ferror@plt+0x43a60>  // b.none
  446754:	ldrb	w23, [x21]
  446758:	ldr	x0, [x19, #256]
  44675c:	cmp	x0, #0xff
  446760:	b.ne	446734 <ferror@plt+0x43a04>  // b.any
  446764:	strb	wzr, [x19, #255]
  446768:	ldr	x3, [x19, #272]
  44676c:	ldr	x2, [x19, #280]
  446770:	mov	x1, x25
  446774:	mov	x0, x19
  446778:	blr	x3
  44677c:	str	xzr, [x19, #256]
  446780:	ldr	x0, [x19, #320]
  446784:	add	x0, x0, #0x1
  446788:	str	x0, [x19, #320]
  44678c:	b	446734 <ferror@plt+0x43a04>
  446790:	ldr	x2, [x22, #8]
  446794:	mov	w1, w20
  446798:	mov	x0, x19
  44679c:	bl	4497d4 <ferror@plt+0x46aa4>
  4467a0:	ldp	x21, x22, [sp, #32]
  4467a4:	ldp	x23, x24, [sp, #48]
  4467a8:	ldp	x25, x26, [sp, #64]
  4467ac:	b	449694 <ferror@plt+0x46964>
  4467b0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4467b4:	add	x21, x21, #0xdd8
  4467b8:	add	x24, x21, #0x13
  4467bc:	mov	x25, #0xff                  	// #255
  4467c0:	b	4467e4 <ferror@plt+0x43ab4>
  4467c4:	ldr	x0, [x19, #256]
  4467c8:	add	x1, x0, #0x1
  4467cc:	str	x1, [x19, #256]
  4467d0:	strb	w23, [x19, x0]
  4467d4:	strb	w23, [x19, #264]
  4467d8:	add	x21, x21, #0x1
  4467dc:	cmp	x24, x21
  4467e0:	b.eq	446820 <ferror@plt+0x43af0>  // b.none
  4467e4:	ldrb	w23, [x21]
  4467e8:	ldr	x0, [x19, #256]
  4467ec:	cmp	x0, #0xff
  4467f0:	b.ne	4467c4 <ferror@plt+0x43a94>  // b.any
  4467f4:	strb	wzr, [x19, #255]
  4467f8:	ldr	x3, [x19, #272]
  4467fc:	ldr	x2, [x19, #280]
  446800:	mov	x1, x25
  446804:	mov	x0, x19
  446808:	blr	x3
  44680c:	str	xzr, [x19, #256]
  446810:	ldr	x0, [x19, #320]
  446814:	add	x0, x0, #0x1
  446818:	str	x0, [x19, #320]
  44681c:	b	4467c4 <ferror@plt+0x43a94>
  446820:	ldr	x2, [x22, #8]
  446824:	mov	w1, w20
  446828:	mov	x0, x19
  44682c:	bl	4497d4 <ferror@plt+0x46aa4>
  446830:	ldp	x21, x22, [sp, #32]
  446834:	ldp	x23, x24, [sp, #48]
  446838:	ldp	x25, x26, [sp, #64]
  44683c:	b	449694 <ferror@plt+0x46964>
  446840:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446844:	add	x21, x21, #0xdf0
  446848:	add	x24, x21, #0x16
  44684c:	mov	x25, #0xff                  	// #255
  446850:	b	446874 <ferror@plt+0x43b44>
  446854:	ldr	x0, [x19, #256]
  446858:	add	x1, x0, #0x1
  44685c:	str	x1, [x19, #256]
  446860:	strb	w23, [x19, x0]
  446864:	strb	w23, [x19, #264]
  446868:	add	x21, x21, #0x1
  44686c:	cmp	x24, x21
  446870:	b.eq	4468b0 <ferror@plt+0x43b80>  // b.none
  446874:	ldrb	w23, [x21]
  446878:	ldr	x0, [x19, #256]
  44687c:	cmp	x0, #0xff
  446880:	b.ne	446854 <ferror@plt+0x43b24>  // b.any
  446884:	strb	wzr, [x19, #255]
  446888:	ldr	x3, [x19, #272]
  44688c:	ldr	x2, [x19, #280]
  446890:	mov	x1, x25
  446894:	mov	x0, x19
  446898:	blr	x3
  44689c:	str	xzr, [x19, #256]
  4468a0:	ldr	x0, [x19, #320]
  4468a4:	add	x0, x0, #0x1
  4468a8:	str	x0, [x19, #320]
  4468ac:	b	446854 <ferror@plt+0x43b24>
  4468b0:	ldr	x2, [x22, #8]
  4468b4:	mov	w1, w20
  4468b8:	mov	x0, x19
  4468bc:	bl	4497d4 <ferror@plt+0x46aa4>
  4468c0:	ldp	x21, x22, [sp, #32]
  4468c4:	ldp	x23, x24, [sp, #48]
  4468c8:	ldp	x25, x26, [sp, #64]
  4468cc:	b	449694 <ferror@plt+0x46964>
  4468d0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4468d4:	add	x21, x21, #0xe08
  4468d8:	add	x24, x21, #0x19
  4468dc:	mov	x25, #0xff                  	// #255
  4468e0:	b	446904 <ferror@plt+0x43bd4>
  4468e4:	ldr	x0, [x19, #256]
  4468e8:	add	x1, x0, #0x1
  4468ec:	str	x1, [x19, #256]
  4468f0:	strb	w23, [x19, x0]
  4468f4:	strb	w23, [x19, #264]
  4468f8:	add	x21, x21, #0x1
  4468fc:	cmp	x21, x24
  446900:	b.eq	446940 <ferror@plt+0x43c10>  // b.none
  446904:	ldrb	w23, [x21]
  446908:	ldr	x0, [x19, #256]
  44690c:	cmp	x0, #0xff
  446910:	b.ne	4468e4 <ferror@plt+0x43bb4>  // b.any
  446914:	strb	wzr, [x19, #255]
  446918:	ldr	x3, [x19, #272]
  44691c:	ldr	x2, [x19, #280]
  446920:	mov	x1, x25
  446924:	mov	x0, x19
  446928:	blr	x3
  44692c:	str	xzr, [x19, #256]
  446930:	ldr	x0, [x19, #320]
  446934:	add	x0, x0, #0x1
  446938:	str	x0, [x19, #320]
  44693c:	b	4468e4 <ferror@plt+0x43bb4>
  446940:	ldr	x2, [x22, #8]
  446944:	mov	w1, w20
  446948:	mov	x0, x19
  44694c:	bl	4497d4 <ferror@plt+0x46aa4>
  446950:	ldp	x21, x22, [sp, #32]
  446954:	ldp	x23, x24, [sp, #48]
  446958:	ldp	x25, x26, [sp, #64]
  44695c:	b	449694 <ferror@plt+0x46964>
  446960:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446964:	add	x21, x21, #0xe28
  446968:	add	x24, x21, #0x15
  44696c:	mov	x25, #0xff                  	// #255
  446970:	b	446994 <ferror@plt+0x43c64>
  446974:	ldr	x0, [x19, #256]
  446978:	add	x1, x0, #0x1
  44697c:	str	x1, [x19, #256]
  446980:	strb	w23, [x19, x0]
  446984:	strb	w23, [x19, #264]
  446988:	add	x21, x21, #0x1
  44698c:	cmp	x24, x21
  446990:	b.eq	4469d0 <ferror@plt+0x43ca0>  // b.none
  446994:	ldrb	w23, [x21]
  446998:	ldr	x0, [x19, #256]
  44699c:	cmp	x0, #0xff
  4469a0:	b.ne	446974 <ferror@plt+0x43c44>  // b.any
  4469a4:	strb	wzr, [x19, #255]
  4469a8:	ldr	x3, [x19, #272]
  4469ac:	ldr	x2, [x19, #280]
  4469b0:	mov	x1, x25
  4469b4:	mov	x0, x19
  4469b8:	blr	x3
  4469bc:	str	xzr, [x19, #256]
  4469c0:	ldr	x0, [x19, #320]
  4469c4:	add	x0, x0, #0x1
  4469c8:	str	x0, [x19, #320]
  4469cc:	b	446974 <ferror@plt+0x43c44>
  4469d0:	ldr	x2, [x22, #16]
  4469d4:	mov	w1, w20
  4469d8:	mov	x0, x19
  4469dc:	bl	4497d4 <ferror@plt+0x46aa4>
  4469e0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4469e4:	add	x21, x21, #0xd40
  4469e8:	add	x24, x21, #0x5
  4469ec:	mov	x25, #0xff                  	// #255
  4469f0:	b	446a14 <ferror@plt+0x43ce4>
  4469f4:	ldr	x0, [x19, #256]
  4469f8:	add	x1, x0, #0x1
  4469fc:	str	x1, [x19, #256]
  446a00:	strb	w23, [x19, x0]
  446a04:	strb	w23, [x19, #264]
  446a08:	add	x21, x21, #0x1
  446a0c:	cmp	x24, x21
  446a10:	b.eq	446a50 <ferror@plt+0x43d20>  // b.none
  446a14:	ldrb	w23, [x21]
  446a18:	ldr	x0, [x19, #256]
  446a1c:	cmp	x0, #0xff
  446a20:	b.ne	4469f4 <ferror@plt+0x43cc4>  // b.any
  446a24:	strb	wzr, [x19, #255]
  446a28:	ldr	x3, [x19, #272]
  446a2c:	ldr	x2, [x19, #280]
  446a30:	mov	x1, x25
  446a34:	mov	x0, x19
  446a38:	blr	x3
  446a3c:	str	xzr, [x19, #256]
  446a40:	ldr	x0, [x19, #320]
  446a44:	add	x0, x0, #0x1
  446a48:	str	x0, [x19, #320]
  446a4c:	b	4469f4 <ferror@plt+0x43cc4>
  446a50:	ldr	x2, [x22, #8]
  446a54:	mov	w1, w20
  446a58:	mov	x0, x19
  446a5c:	bl	4497d4 <ferror@plt+0x46aa4>
  446a60:	ldp	x21, x22, [sp, #32]
  446a64:	ldp	x23, x24, [sp, #48]
  446a68:	ldp	x25, x26, [sp, #64]
  446a6c:	b	449694 <ferror@plt+0x46964>
  446a70:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446a74:	add	x21, x21, #0xe40
  446a78:	add	x24, x21, #0x11
  446a7c:	mov	x25, #0xff                  	// #255
  446a80:	b	446aa4 <ferror@plt+0x43d74>
  446a84:	ldr	x0, [x19, #256]
  446a88:	add	x1, x0, #0x1
  446a8c:	str	x1, [x19, #256]
  446a90:	strb	w23, [x19, x0]
  446a94:	strb	w23, [x19, #264]
  446a98:	add	x21, x21, #0x1
  446a9c:	cmp	x21, x24
  446aa0:	b.eq	446ae0 <ferror@plt+0x43db0>  // b.none
  446aa4:	ldrb	w23, [x21]
  446aa8:	ldr	x0, [x19, #256]
  446aac:	cmp	x0, #0xff
  446ab0:	b.ne	446a84 <ferror@plt+0x43d54>  // b.any
  446ab4:	strb	wzr, [x19, #255]
  446ab8:	ldr	x3, [x19, #272]
  446abc:	ldr	x2, [x19, #280]
  446ac0:	mov	x1, x25
  446ac4:	mov	x0, x19
  446ac8:	blr	x3
  446acc:	str	xzr, [x19, #256]
  446ad0:	ldr	x0, [x19, #320]
  446ad4:	add	x0, x0, #0x1
  446ad8:	str	x0, [x19, #320]
  446adc:	b	446a84 <ferror@plt+0x43d54>
  446ae0:	ldr	x2, [x22, #8]
  446ae4:	mov	w1, w20
  446ae8:	mov	x0, x19
  446aec:	bl	4497d4 <ferror@plt+0x46aa4>
  446af0:	ldp	x21, x22, [sp, #32]
  446af4:	ldp	x23, x24, [sp, #48]
  446af8:	ldp	x25, x26, [sp, #64]
  446afc:	b	449694 <ferror@plt+0x46964>
  446b00:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446b04:	add	x21, x21, #0xe58
  446b08:	add	x24, x21, #0x16
  446b0c:	mov	x25, #0xff                  	// #255
  446b10:	b	446b34 <ferror@plt+0x43e04>
  446b14:	ldr	x0, [x19, #256]
  446b18:	add	x1, x0, #0x1
  446b1c:	str	x1, [x19, #256]
  446b20:	strb	w23, [x19, x0]
  446b24:	strb	w23, [x19, #264]
  446b28:	add	x21, x21, #0x1
  446b2c:	cmp	x21, x24
  446b30:	b.eq	446b70 <ferror@plt+0x43e40>  // b.none
  446b34:	ldrb	w23, [x21]
  446b38:	ldr	x0, [x19, #256]
  446b3c:	cmp	x0, #0xff
  446b40:	b.ne	446b14 <ferror@plt+0x43de4>  // b.any
  446b44:	strb	wzr, [x19, #255]
  446b48:	ldr	x3, [x19, #272]
  446b4c:	ldr	x2, [x19, #280]
  446b50:	mov	x1, x25
  446b54:	mov	x0, x19
  446b58:	blr	x3
  446b5c:	str	xzr, [x19, #256]
  446b60:	ldr	x0, [x19, #320]
  446b64:	add	x0, x0, #0x1
  446b68:	str	x0, [x19, #320]
  446b6c:	b	446b14 <ferror@plt+0x43de4>
  446b70:	ldr	x2, [x22, #8]
  446b74:	mov	w1, w20
  446b78:	mov	x0, x19
  446b7c:	bl	4497d4 <ferror@plt+0x46aa4>
  446b80:	ldp	x21, x22, [sp, #32]
  446b84:	ldp	x23, x24, [sp, #48]
  446b88:	ldp	x25, x26, [sp, #64]
  446b8c:	b	449694 <ferror@plt+0x46964>
  446b90:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  446b94:	add	x21, x21, #0xe70
  446b98:	add	x24, x21, #0x1a
  446b9c:	mov	x25, #0xff                  	// #255
  446ba0:	b	446bc4 <ferror@plt+0x43e94>
  446ba4:	ldr	x0, [x19, #256]
  446ba8:	add	x1, x0, #0x1
  446bac:	str	x1, [x19, #256]
  446bb0:	strb	w23, [x19, x0]
  446bb4:	strb	w23, [x19, #264]
  446bb8:	add	x21, x21, #0x1
  446bbc:	cmp	x21, x24
  446bc0:	b.eq	446c00 <ferror@plt+0x43ed0>  // b.none
  446bc4:	ldrb	w23, [x21]
  446bc8:	ldr	x0, [x19, #256]
  446bcc:	cmp	x0, #0xff
  446bd0:	b.ne	446ba4 <ferror@plt+0x43e74>  // b.any
  446bd4:	strb	wzr, [x19, #255]
  446bd8:	ldr	x3, [x19, #272]
  446bdc:	ldr	x2, [x19, #280]
  446be0:	mov	x1, x25
  446be4:	mov	x0, x19
  446be8:	blr	x3
  446bec:	str	xzr, [x19, #256]
  446bf0:	ldr	x0, [x19, #320]
  446bf4:	add	x0, x0, #0x1
  446bf8:	str	x0, [x19, #320]
  446bfc:	b	446ba4 <ferror@plt+0x43e74>
  446c00:	ldr	x2, [x22, #8]
  446c04:	mov	w1, w20
  446c08:	mov	x0, x19
  446c0c:	bl	4497d4 <ferror@plt+0x46aa4>
  446c10:	ldp	x21, x22, [sp, #32]
  446c14:	ldp	x23, x24, [sp, #48]
  446c18:	ldp	x25, x26, [sp, #64]
  446c1c:	b	449694 <ferror@plt+0x46964>
  446c20:	ldr	x1, [x22, #8]
  446c24:	ldrsw	x0, [x22, #16]
  446c28:	cbz	x0, 4496d0 <ferror@plt+0x469a0>
  446c2c:	mov	x20, x1
  446c30:	add	x22, x1, x0
  446c34:	mov	x23, #0xff                  	// #255
  446c38:	b	446c5c <ferror@plt+0x43f2c>
  446c3c:	ldr	x0, [x19, #256]
  446c40:	add	x1, x0, #0x1
  446c44:	str	x1, [x19, #256]
  446c48:	strb	w21, [x19, x0]
  446c4c:	strb	w21, [x19, #264]
  446c50:	add	x20, x20, #0x1
  446c54:	cmp	x20, x22
  446c58:	b.eq	446c98 <ferror@plt+0x43f68>  // b.none
  446c5c:	ldrb	w21, [x20]
  446c60:	ldr	x0, [x19, #256]
  446c64:	cmp	x0, #0xff
  446c68:	b.ne	446c3c <ferror@plt+0x43f0c>  // b.any
  446c6c:	strb	wzr, [x19, #255]
  446c70:	ldr	x3, [x19, #272]
  446c74:	ldr	x2, [x19, #280]
  446c78:	mov	x1, x23
  446c7c:	mov	x0, x19
  446c80:	blr	x3
  446c84:	str	xzr, [x19, #256]
  446c88:	ldr	x0, [x19, #320]
  446c8c:	add	x0, x0, #0x1
  446c90:	str	x0, [x19, #320]
  446c94:	b	446c3c <ferror@plt+0x43f0c>
  446c98:	ldp	x21, x22, [sp, #32]
  446c9c:	ldp	x23, x24, [sp, #48]
  446ca0:	ldp	x25, x26, [sp, #64]
  446ca4:	b	449694 <ferror@plt+0x46964>
  446ca8:	ldr	x1, [x19, #296]
  446cac:	cbnz	x1, 446cbc <ferror@plt+0x43f8c>
  446cb0:	b	449610 <ferror@plt+0x468e0>
  446cb4:	ldr	x1, [x1]
  446cb8:	cbz	x1, 449610 <ferror@plt+0x468e0>
  446cbc:	ldr	w2, [x1, #16]
  446cc0:	cbnz	w2, 446cb4 <ferror@plt+0x43f84>
  446cc4:	ldr	x3, [x1, #8]
  446cc8:	ldr	w3, [x3]
  446ccc:	sub	w4, w3, #0x19
  446cd0:	cmp	w4, #0x2
  446cd4:	b.hi	449604 <ferror@plt+0x468d4>  // b.pmore
  446cd8:	cmp	w0, w3
  446cdc:	b.ne	446cb4 <ferror@plt+0x43f84>  // b.any
  446ce0:	ldr	x2, [x22, #8]
  446ce4:	mov	w1, w20
  446ce8:	mov	x0, x19
  446cec:	bl	4497d4 <ferror@plt+0x46aa4>
  446cf0:	ldp	x21, x22, [sp, #32]
  446cf4:	ldp	x23, x24, [sp, #48]
  446cf8:	ldp	x25, x26, [sp, #64]
  446cfc:	b	449694 <ferror@plt+0x46964>
  446d00:	ldr	x0, [x22, #8]
  446d04:	ldr	w24, [x19, #312]
  446d08:	cbnz	w24, 446d1c <ferror@plt+0x43fec>
  446d0c:	ldr	w1, [x0]
  446d10:	mov	w21, w24
  446d14:	cmp	w1, #0x5
  446d18:	b.eq	446d44 <ferror@plt+0x44014>  // b.none
  446d1c:	ldr	w1, [x0]
  446d20:	cmp	w1, #0x23
  446d24:	b.eq	44960c <ferror@plt+0x468dc>  // b.none
  446d28:	ldr	w2, [x22]
  446d2c:	cmp	w1, w2
  446d30:	b.eq	449638 <ferror@plt+0x46908>  // b.none
  446d34:	cmp	w1, #0x24
  446d38:	b.ne	449610 <ferror@plt+0x468e0>  // b.any
  446d3c:	ldr	x2, [x0, #8]
  446d40:	b	446e80 <ferror@plt+0x44150>
  446d44:	ldr	w5, [x19, #344]
  446d48:	cmp	w5, #0x0
  446d4c:	b.le	446d7c <ferror@plt+0x4404c>
  446d50:	ldr	x1, [x19, #336]
  446d54:	sub	w3, w5, #0x1
  446d58:	add	x2, x1, #0x10
  446d5c:	add	x3, x2, x3, lsl #4
  446d60:	mov	x4, x1
  446d64:	ldr	x2, [x1]
  446d68:	cmp	x0, x2
  446d6c:	b.eq	449640 <ferror@plt+0x46910>  // b.none
  446d70:	add	x1, x1, #0x10
  446d74:	cmp	x1, x3
  446d78:	b.ne	446d60 <ferror@plt+0x44030>  // b.any
  446d7c:	ldr	w1, [x19, #348]
  446d80:	cmp	w1, w5
  446d84:	b.le	446e3c <ferror@plt+0x4410c>
  446d88:	sbfiz	x3, x5, #4, #32
  446d8c:	ldr	x2, [x19, #336]
  446d90:	add	x1, x2, w5, sxtw #4
  446d94:	add	w5, w5, #0x1
  446d98:	str	w5, [x19, #344]
  446d9c:	str	x0, [x2, x3]
  446da0:	add	x1, x1, #0x8
  446da4:	ldr	x2, [x19, #288]
  446da8:	cbz	x2, 446de4 <ferror@plt+0x440b4>
  446dac:	ldr	w4, [x19, #360]
  446db0:	ldr	w3, [x19, #364]
  446db4:	cmp	w4, w3
  446db8:	b.ge	446e54 <ferror@plt+0x44124>  // b.tcont
  446dbc:	ldr	x3, [x19, #352]
  446dc0:	add	x3, x3, w4, sxtw #4
  446dc4:	add	w4, w4, #0x1
  446dc8:	str	w4, [x19, #360]
  446dcc:	ldr	x4, [x2, #8]
  446dd0:	str	x4, [x3, #8]
  446dd4:	str	x3, [x1]
  446dd8:	mov	x1, x3
  446ddc:	ldr	x2, [x2]
  446de0:	cbnz	x2, 446dac <ferror@plt+0x4407c>
  446de4:	str	xzr, [x1]
  446de8:	ldr	w1, [x19, #304]
  446dec:	cbnz	w1, 446e6c <ferror@plt+0x4413c>
  446df0:	mov	x1, x0
  446df4:	mov	x0, x19
  446df8:	bl	4452c0 <ferror@plt+0x42590>
  446dfc:	cbz	x0, 446e24 <ferror@plt+0x440f4>
  446e00:	mov	w21, w24
  446e04:	ldr	w1, [x0]
  446e08:	cmp	w1, #0x2f
  446e0c:	b.ne	446d1c <ferror@plt+0x43fec>  // b.any
  446e10:	ldr	w1, [x19, #316]
  446e14:	bl	445288 <ferror@plt+0x42558>
  446e18:	cbnz	x0, 446d1c <ferror@plt+0x43fec>
  446e1c:	cbz	w21, 446e24 <ferror@plt+0x440f4>
  446e20:	str	x23, [x19, #288]
  446e24:	mov	w0, #0x1                   	// #1
  446e28:	str	w0, [x19, #304]
  446e2c:	ldp	x21, x22, [sp, #32]
  446e30:	ldp	x23, x24, [sp, #48]
  446e34:	ldp	x25, x26, [sp, #64]
  446e38:	b	449694 <ferror@plt+0x46964>
  446e3c:	mov	w0, #0x1                   	// #1
  446e40:	str	w0, [x19, #304]
  446e44:	ldp	x21, x22, [sp, #32]
  446e48:	ldp	x23, x24, [sp, #48]
  446e4c:	ldp	x25, x26, [sp, #64]
  446e50:	b	449694 <ferror@plt+0x46964>
  446e54:	mov	w0, #0x1                   	// #1
  446e58:	str	w0, [x19, #304]
  446e5c:	ldp	x21, x22, [sp, #32]
  446e60:	ldp	x23, x24, [sp, #48]
  446e64:	ldp	x25, x26, [sp, #64]
  446e68:	b	449694 <ferror@plt+0x46964>
  446e6c:	ldp	x21, x22, [sp, #32]
  446e70:	ldp	x23, x24, [sp, #48]
  446e74:	ldp	x25, x26, [sp, #64]
  446e78:	b	449694 <ferror@plt+0x46964>
  446e7c:	mov	x2, #0x0                   	// #0
  446e80:	ldr	x0, [x19, #296]
  446e84:	str	x0, [sp, #112]
  446e88:	add	x0, sp, #0x70
  446e8c:	str	x0, [x19, #296]
  446e90:	str	x22, [sp, #120]
  446e94:	str	wzr, [sp, #128]
  446e98:	ldr	x0, [x19, #288]
  446e9c:	str	x0, [sp, #136]
  446ea0:	cbz	x2, 449630 <ferror@plt+0x46900>
  446ea4:	mov	w1, w20
  446ea8:	mov	x0, x19
  446eac:	bl	4497d4 <ferror@plt+0x46aa4>
  446eb0:	ldr	w0, [sp, #128]
  446eb4:	cbz	w0, 446ed8 <ferror@plt+0x441a8>
  446eb8:	ldr	x0, [sp, #112]
  446ebc:	str	x0, [x19, #296]
  446ec0:	cbz	w21, 4496e0 <ferror@plt+0x469b0>
  446ec4:	str	x23, [x19, #288]
  446ec8:	ldp	x21, x22, [sp, #32]
  446ecc:	ldp	x23, x24, [sp, #48]
  446ed0:	ldp	x25, x26, [sp, #64]
  446ed4:	b	449694 <ferror@plt+0x46964>
  446ed8:	mov	x2, x22
  446edc:	mov	w1, w20
  446ee0:	mov	x0, x19
  446ee4:	bl	449870 <ferror@plt+0x46b40>
  446ee8:	b	446eb8 <ferror@plt+0x44188>
  446eec:	tbnz	w20, #2, 446f7c <ferror@plt+0x4424c>
  446ef0:	ldr	x0, [x22, #8]
  446ef4:	ldr	x22, [x0]
  446ef8:	ldrsw	x0, [x0, #8]
  446efc:	cbz	x0, 4496f0 <ferror@plt+0x469c0>
  446f00:	mov	x20, x22
  446f04:	add	x22, x22, x0
  446f08:	mov	x23, #0xff                  	// #255
  446f0c:	b	446f30 <ferror@plt+0x44200>
  446f10:	ldr	x0, [x19, #256]
  446f14:	add	x1, x0, #0x1
  446f18:	str	x1, [x19, #256]
  446f1c:	strb	w21, [x19, x0]
  446f20:	strb	w21, [x19, #264]
  446f24:	add	x20, x20, #0x1
  446f28:	cmp	x20, x22
  446f2c:	b.eq	446f6c <ferror@plt+0x4423c>  // b.none
  446f30:	ldrb	w21, [x20]
  446f34:	ldr	x0, [x19, #256]
  446f38:	cmp	x0, #0xff
  446f3c:	b.ne	446f10 <ferror@plt+0x441e0>  // b.any
  446f40:	strb	wzr, [x19, #255]
  446f44:	ldr	x3, [x19, #272]
  446f48:	ldr	x2, [x19, #280]
  446f4c:	mov	x1, x23
  446f50:	mov	x0, x19
  446f54:	blr	x3
  446f58:	str	xzr, [x19, #256]
  446f5c:	ldr	x0, [x19, #320]
  446f60:	add	x0, x0, #0x1
  446f64:	str	x0, [x19, #320]
  446f68:	b	446f10 <ferror@plt+0x441e0>
  446f6c:	ldp	x21, x22, [sp, #32]
  446f70:	ldp	x23, x24, [sp, #48]
  446f74:	ldp	x25, x26, [sp, #64]
  446f78:	b	449694 <ferror@plt+0x46964>
  446f7c:	ldr	x0, [x22, #8]
  446f80:	ldr	x22, [x0, #16]
  446f84:	ldrsw	x0, [x0, #24]
  446f88:	cbz	x0, 449700 <ferror@plt+0x469d0>
  446f8c:	mov	x20, x22
  446f90:	add	x22, x22, x0
  446f94:	mov	x23, #0xff                  	// #255
  446f98:	b	446fbc <ferror@plt+0x4428c>
  446f9c:	ldr	x0, [x19, #256]
  446fa0:	add	x1, x0, #0x1
  446fa4:	str	x1, [x19, #256]
  446fa8:	strb	w21, [x19, x0]
  446fac:	strb	w21, [x19, #264]
  446fb0:	add	x20, x20, #0x1
  446fb4:	cmp	x20, x22
  446fb8:	b.eq	446ff8 <ferror@plt+0x442c8>  // b.none
  446fbc:	ldrb	w21, [x20]
  446fc0:	ldr	x0, [x19, #256]
  446fc4:	cmp	x0, #0xff
  446fc8:	b.ne	446f9c <ferror@plt+0x4426c>  // b.any
  446fcc:	strb	wzr, [x19, #255]
  446fd0:	ldr	x3, [x19, #272]
  446fd4:	ldr	x2, [x19, #280]
  446fd8:	mov	x1, x23
  446fdc:	mov	x0, x19
  446fe0:	blr	x3
  446fe4:	str	xzr, [x19, #256]
  446fe8:	ldr	x0, [x19, #320]
  446fec:	add	x0, x0, #0x1
  446ff0:	str	x0, [x19, #320]
  446ff4:	b	446f9c <ferror@plt+0x4426c>
  446ff8:	ldp	x21, x22, [sp, #32]
  446ffc:	ldp	x23, x24, [sp, #48]
  447000:	ldp	x25, x26, [sp, #64]
  447004:	b	449694 <ferror@plt+0x46964>
  447008:	ldr	x2, [x22, #8]
  44700c:	mov	w1, w20
  447010:	mov	x0, x19
  447014:	bl	4497d4 <ferror@plt+0x46aa4>
  447018:	ldp	x21, x22, [sp, #32]
  44701c:	ldp	x23, x24, [sp, #48]
  447020:	ldp	x25, x26, [sp, #64]
  447024:	b	449694 <ferror@plt+0x46964>
  447028:	and	w21, w20, #0x20
  44702c:	tbnz	w20, #5, 447050 <ferror@plt+0x44320>
  447030:	ldr	x0, [x22, #8]
  447034:	cbz	x0, 447124 <ferror@plt+0x443f4>
  447038:	tbz	w20, #6, 44708c <ferror@plt+0x4435c>
  44703c:	cbz	w21, 447124 <ferror@plt+0x443f4>
  447040:	ldp	x21, x22, [sp, #32]
  447044:	ldp	x23, x24, [sp, #48]
  447048:	ldp	x25, x26, [sp, #64]
  44704c:	b	449694 <ferror@plt+0x46964>
  447050:	and	w23, w20, #0xffffff9f
  447054:	ldr	x3, [x19, #296]
  447058:	mov	x2, x22
  44705c:	mov	w1, w23
  447060:	mov	x0, x19
  447064:	bl	44a23c <ferror@plt+0x4750c>
  447068:	ldr	x2, [x22, #8]
  44706c:	cbz	x2, 44703c <ferror@plt+0x4430c>
  447070:	mov	w1, w23
  447074:	mov	x0, x19
  447078:	bl	4497d4 <ferror@plt+0x46aa4>
  44707c:	ldp	x21, x22, [sp, #32]
  447080:	ldp	x23, x24, [sp, #48]
  447084:	ldp	x25, x26, [sp, #64]
  447088:	b	449694 <ferror@plt+0x46964>
  44708c:	ldr	x0, [x19, #296]
  447090:	str	x0, [sp, #112]
  447094:	add	x0, sp, #0x70
  447098:	str	x0, [x19, #296]
  44709c:	str	x22, [sp, #120]
  4470a0:	str	wzr, [sp, #128]
  4470a4:	ldr	x0, [x19, #288]
  4470a8:	str	x0, [sp, #136]
  4470ac:	ldr	x2, [x22, #8]
  4470b0:	and	w1, w20, #0xffffff9f
  4470b4:	mov	x0, x19
  4470b8:	bl	4497d4 <ferror@plt+0x46aa4>
  4470bc:	ldr	x0, [sp, #112]
  4470c0:	str	x0, [x19, #296]
  4470c4:	ldr	w0, [sp, #128]
  4470c8:	cbnz	w0, 449710 <ferror@plt+0x469e0>
  4470cc:	cbnz	w21, 44703c <ferror@plt+0x4430c>
  4470d0:	ldr	x0, [x19, #256]
  4470d4:	cmp	x0, #0xff
  4470d8:	b.eq	4470f8 <ferror@plt+0x443c8>  // b.none
  4470dc:	ldr	x1, [x19, #256]
  4470e0:	add	x0, x1, #0x1
  4470e4:	str	x0, [x19, #256]
  4470e8:	mov	w0, #0x20                  	// #32
  4470ec:	strb	w0, [x19, x1]
  4470f0:	strb	w0, [x19, #264]
  4470f4:	b	44703c <ferror@plt+0x4430c>
  4470f8:	strb	wzr, [x19, #255]
  4470fc:	ldr	x3, [x19, #272]
  447100:	ldr	x2, [x19, #280]
  447104:	mov	x1, #0xff                  	// #255
  447108:	mov	x0, x19
  44710c:	blr	x3
  447110:	str	xzr, [x19, #256]
  447114:	ldr	x0, [x19, #320]
  447118:	add	x0, x0, #0x1
  44711c:	str	x0, [x19, #320]
  447120:	b	4470dc <ferror@plt+0x443ac>
  447124:	ldr	x3, [x19, #296]
  447128:	mov	x2, x22
  44712c:	and	w1, w20, #0xffffff9f
  447130:	mov	x0, x19
  447134:	bl	44a23c <ferror@plt+0x4750c>
  447138:	ldp	x21, x22, [sp, #32]
  44713c:	ldp	x23, x24, [sp, #48]
  447140:	ldp	x25, x26, [sp, #64]
  447144:	b	449694 <ferror@plt+0x46964>
  447148:	ldr	x23, [x19, #296]
  44714c:	str	x23, [sp, #112]
  447150:	add	x0, sp, #0x70
  447154:	str	x0, [x19, #296]
  447158:	str	x22, [sp, #120]
  44715c:	str	wzr, [sp, #128]
  447160:	ldr	x0, [x19, #288]
  447164:	str	x0, [sp, #136]
  447168:	mov	x0, x23
  44716c:	mov	w21, #0x1                   	// #1
  447170:	add	x3, sp, #0x70
  447174:	mov	w6, w21
  447178:	cbnz	x23, 4471c8 <ferror@plt+0x44498>
  44717c:	ldr	x2, [x22, #16]
  447180:	mov	w1, w20
  447184:	mov	x0, x19
  447188:	bl	4497d4 <ferror@plt+0x46aa4>
  44718c:	str	xzr, [x19, #296]
  447190:	ldr	w0, [sp, #128]
  447194:	cbz	w0, 44726c <ferror@plt+0x4453c>
  447198:	ldp	x21, x22, [sp, #32]
  44719c:	ldp	x23, x24, [sp, #48]
  4471a0:	ldp	x25, x26, [sp, #64]
  4471a4:	b	449694 <ferror@plt+0x46964>
  4471a8:	mov	w0, #0x1                   	// #1
  4471ac:	str	w0, [x19, #304]
  4471b0:	ldp	x21, x22, [sp, #32]
  4471b4:	ldp	x23, x24, [sp, #48]
  4471b8:	ldp	x25, x26, [sp, #64]
  4471bc:	b	449694 <ferror@plt+0x46964>
  4471c0:	ldr	x0, [x0]
  4471c4:	cbz	x0, 44721c <ferror@plt+0x444ec>
  4471c8:	ldr	x1, [x0, #8]
  4471cc:	ldr	w1, [x1]
  4471d0:	sub	w1, w1, #0x19
  4471d4:	cmp	w1, #0x2
  4471d8:	b.hi	44721c <ferror@plt+0x444ec>  // b.pmore
  4471dc:	ldr	w1, [x0, #16]
  4471e0:	cbnz	w1, 4471c0 <ferror@plt+0x44490>
  4471e4:	cmp	w21, #0x3
  4471e8:	b.hi	4471a8 <ferror@plt+0x44478>  // b.pmore
  4471ec:	ubfiz	x2, x21, #5, #32
  4471f0:	add	x1, x3, x2
  4471f4:	ldp	x4, x5, [x0]
  4471f8:	stp	x4, x5, [x1]
  4471fc:	ldp	x4, x5, [x0, #16]
  447200:	stp	x4, x5, [x1, #16]
  447204:	ldr	x4, [x19, #296]
  447208:	str	x4, [x3, x2]
  44720c:	str	x1, [x19, #296]
  447210:	str	w6, [x0, #16]
  447214:	add	w21, w21, #0x1
  447218:	b	4471c0 <ferror@plt+0x44490>
  44721c:	ldr	x2, [x22, #16]
  447220:	mov	w1, w20
  447224:	mov	x0, x19
  447228:	bl	4497d4 <ferror@plt+0x46aa4>
  44722c:	str	x23, [x19, #296]
  447230:	ldr	w0, [sp, #128]
  447234:	cbnz	w0, 449720 <ferror@plt+0x469f0>
  447238:	cmp	w21, #0x1
  44723c:	b.ls	44726c <ferror@plt+0x4453c>  // b.plast
  447240:	sub	w23, w21, #0x1
  447244:	add	x0, sp, #0x70
  447248:	add	x23, x0, x23, lsl #5
  44724c:	sub	w21, w21, #0x1
  447250:	ldr	x2, [x23, #8]
  447254:	mov	w1, w20
  447258:	mov	x0, x19
  44725c:	bl	449870 <ferror@plt+0x46b40>
  447260:	sub	x23, x23, #0x20
  447264:	cmp	w21, #0x1
  447268:	b.ne	44724c <ferror@plt+0x4451c>  // b.any
  44726c:	ldr	x3, [x19, #296]
  447270:	mov	x2, x22
  447274:	mov	w1, w20
  447278:	mov	x0, x19
  44727c:	bl	44a894 <ferror@plt+0x47b64>
  447280:	ldp	x21, x22, [sp, #32]
  447284:	ldp	x23, x24, [sp, #48]
  447288:	ldp	x25, x26, [sp, #64]
  44728c:	b	449694 <ferror@plt+0x46964>
  447290:	ldr	x0, [x19, #296]
  447294:	str	x0, [sp, #112]
  447298:	add	x0, sp, #0x70
  44729c:	str	x0, [x19, #296]
  4472a0:	str	x22, [sp, #120]
  4472a4:	str	wzr, [sp, #128]
  4472a8:	ldr	x0, [x19, #288]
  4472ac:	str	x0, [sp, #136]
  4472b0:	ldr	x2, [x22, #16]
  4472b4:	mov	w1, w20
  4472b8:	mov	x0, x19
  4472bc:	bl	4497d4 <ferror@plt+0x46aa4>
  4472c0:	ldr	w0, [sp, #128]
  4472c4:	cbz	w0, 4472e0 <ferror@plt+0x445b0>
  4472c8:	ldr	x0, [sp, #112]
  4472cc:	str	x0, [x19, #296]
  4472d0:	ldp	x21, x22, [sp, #32]
  4472d4:	ldp	x23, x24, [sp, #48]
  4472d8:	ldp	x25, x26, [sp, #64]
  4472dc:	b	449694 <ferror@plt+0x46964>
  4472e0:	mov	x2, x22
  4472e4:	mov	w1, w20
  4472e8:	mov	x0, x19
  4472ec:	bl	449870 <ferror@plt+0x46b40>
  4472f0:	b	4472c8 <ferror@plt+0x44598>
  4472f4:	ldrsh	w0, [x22, #18]
  4472f8:	cbnz	w0, 447364 <ferror@plt+0x44634>
  4472fc:	ldr	x2, [x22, #8]
  447300:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447304:	add	x0, x0, #0x78
  447308:	ldr	x1, [x2, #8]
  44730c:	add	x0, x0, #0x100
  447310:	cmp	x1, x0
  447314:	b.eq	447348 <ferror@plt+0x44618>  // b.none
  447318:	mov	w1, w20
  44731c:	mov	x0, x19
  447320:	bl	4497d4 <ferror@plt+0x46aa4>
  447324:	ldr	x0, [x19, #256]
  447328:	cmp	x0, #0xff
  44732c:	b.eq	4473d4 <ferror@plt+0x446a4>  // b.none
  447330:	ldr	x1, [x19, #256]
  447334:	add	x0, x1, #0x1
  447338:	str	x0, [x19, #256]
  44733c:	mov	w0, #0x20                  	// #32
  447340:	strb	w0, [x19, x1]
  447344:	strb	w0, [x19, #264]
  447348:	ldrsh	w0, [x22, #16]
  44734c:	cbz	w0, 44746c <ferror@plt+0x4473c>
  447350:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447354:	add	x20, x20, #0xe98
  447358:	add	x22, x20, #0x6
  44735c:	mov	x23, #0xff                  	// #255
  447360:	b	447420 <ferror@plt+0x446f0>
  447364:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447368:	add	x21, x21, #0xe90
  44736c:	add	x24, x21, #0x5
  447370:	mov	x25, #0xff                  	// #255
  447374:	b	447398 <ferror@plt+0x44668>
  447378:	ldr	x0, [x19, #256]
  44737c:	add	x1, x0, #0x1
  447380:	str	x1, [x19, #256]
  447384:	strb	w23, [x19, x0]
  447388:	strb	w23, [x19, #264]
  44738c:	add	x21, x21, #0x1
  447390:	cmp	x21, x24
  447394:	b.eq	4472fc <ferror@plt+0x445cc>  // b.none
  447398:	ldrb	w23, [x21]
  44739c:	ldr	x0, [x19, #256]
  4473a0:	cmp	x0, #0xff
  4473a4:	b.ne	447378 <ferror@plt+0x44648>  // b.any
  4473a8:	strb	wzr, [x19, #255]
  4473ac:	ldr	x3, [x19, #272]
  4473b0:	ldr	x2, [x19, #280]
  4473b4:	mov	x1, x25
  4473b8:	mov	x0, x19
  4473bc:	blr	x3
  4473c0:	str	xzr, [x19, #256]
  4473c4:	ldr	x0, [x19, #320]
  4473c8:	add	x0, x0, #0x1
  4473cc:	str	x0, [x19, #320]
  4473d0:	b	447378 <ferror@plt+0x44648>
  4473d4:	strb	wzr, [x19, #255]
  4473d8:	ldr	x3, [x19, #272]
  4473dc:	ldr	x2, [x19, #280]
  4473e0:	mov	x1, #0xff                  	// #255
  4473e4:	mov	x0, x19
  4473e8:	blr	x3
  4473ec:	str	xzr, [x19, #256]
  4473f0:	ldr	x0, [x19, #320]
  4473f4:	add	x0, x0, #0x1
  4473f8:	str	x0, [x19, #320]
  4473fc:	b	447330 <ferror@plt+0x44600>
  447400:	ldr	x0, [x19, #256]
  447404:	add	x1, x0, #0x1
  447408:	str	x1, [x19, #256]
  44740c:	strb	w21, [x19, x0]
  447410:	strb	w21, [x19, #264]
  447414:	add	x20, x20, #0x1
  447418:	cmp	x20, x22
  44741c:	b.eq	44745c <ferror@plt+0x4472c>  // b.none
  447420:	ldrb	w21, [x20]
  447424:	ldr	x0, [x19, #256]
  447428:	cmp	x0, #0xff
  44742c:	b.ne	447400 <ferror@plt+0x446d0>  // b.any
  447430:	strb	wzr, [x19, #255]
  447434:	ldr	x3, [x19, #272]
  447438:	ldr	x2, [x19, #280]
  44743c:	mov	x1, x23
  447440:	mov	x0, x19
  447444:	blr	x3
  447448:	str	xzr, [x19, #256]
  44744c:	ldr	x0, [x19, #320]
  447450:	add	x0, x0, #0x1
  447454:	str	x0, [x19, #320]
  447458:	b	447400 <ferror@plt+0x446d0>
  44745c:	ldp	x21, x22, [sp, #32]
  447460:	ldp	x23, x24, [sp, #48]
  447464:	ldp	x25, x26, [sp, #64]
  447468:	b	449694 <ferror@plt+0x46964>
  44746c:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447470:	add	x20, x20, #0xea0
  447474:	add	x22, x20, #0x6
  447478:	mov	x23, #0xff                  	// #255
  44747c:	b	4474a0 <ferror@plt+0x44770>
  447480:	ldr	x0, [x19, #256]
  447484:	add	x1, x0, #0x1
  447488:	str	x1, [x19, #256]
  44748c:	strb	w21, [x19, x0]
  447490:	strb	w21, [x19, #264]
  447494:	add	x20, x20, #0x1
  447498:	cmp	x20, x22
  44749c:	b.eq	4474dc <ferror@plt+0x447ac>  // b.none
  4474a0:	ldrb	w21, [x20]
  4474a4:	ldr	x0, [x19, #256]
  4474a8:	cmp	x0, #0xff
  4474ac:	b.ne	447480 <ferror@plt+0x44750>  // b.any
  4474b0:	strb	wzr, [x19, #255]
  4474b4:	ldr	x3, [x19, #272]
  4474b8:	ldr	x2, [x19, #280]
  4474bc:	mov	x1, x23
  4474c0:	mov	x0, x19
  4474c4:	blr	x3
  4474c8:	str	xzr, [x19, #256]
  4474cc:	ldr	x0, [x19, #320]
  4474d0:	add	x0, x0, #0x1
  4474d4:	str	x0, [x19, #320]
  4474d8:	b	447480 <ferror@plt+0x44750>
  4474dc:	ldp	x21, x22, [sp, #32]
  4474e0:	ldp	x23, x24, [sp, #48]
  4474e4:	ldp	x25, x26, [sp, #64]
  4474e8:	b	449694 <ferror@plt+0x46964>
  4474ec:	ldr	x2, [x22, #8]
  4474f0:	cbz	x2, 447500 <ferror@plt+0x447d0>
  4474f4:	mov	w1, w20
  4474f8:	mov	x0, x19
  4474fc:	bl	4497d4 <ferror@plt+0x46aa4>
  447500:	ldr	x0, [x22, #16]
  447504:	cbz	x0, 449730 <ferror@plt+0x46a00>
  447508:	ldr	x1, [x19, #256]
  44750c:	cmp	x1, #0xfd
  447510:	b.ls	447538 <ferror@plt+0x44808>  // b.plast
  447514:	strb	wzr, [x19, x1]
  447518:	ldr	x3, [x19, #272]
  44751c:	ldr	x2, [x19, #280]
  447520:	mov	x0, x19
  447524:	blr	x3
  447528:	str	xzr, [x19, #256]
  44752c:	ldr	x0, [x19, #320]
  447530:	add	x0, x0, #0x1
  447534:	str	x0, [x19, #320]
  447538:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  44753c:	add	x21, x21, #0xe10
  447540:	add	x25, x21, #0x2
  447544:	mov	x26, #0xff                  	// #255
  447548:	b	44756c <ferror@plt+0x4483c>
  44754c:	ldr	x0, [x19, #256]
  447550:	add	x24, x0, #0x1
  447554:	str	x24, [x19, #256]
  447558:	strb	w23, [x19, x0]
  44755c:	strb	w23, [x19, #264]
  447560:	add	x21, x21, #0x1
  447564:	cmp	x21, x25
  447568:	b.eq	4475a8 <ferror@plt+0x44878>  // b.none
  44756c:	ldrb	w23, [x21]
  447570:	ldr	x0, [x19, #256]
  447574:	cmp	x0, #0xff
  447578:	b.ne	44754c <ferror@plt+0x4481c>  // b.any
  44757c:	strb	wzr, [x19, #255]
  447580:	ldr	x3, [x19, #272]
  447584:	ldr	x2, [x19, #280]
  447588:	mov	x1, x26
  44758c:	mov	x0, x19
  447590:	blr	x3
  447594:	str	xzr, [x19, #256]
  447598:	ldr	x0, [x19, #320]
  44759c:	add	x0, x0, #0x1
  4475a0:	str	x0, [x19, #320]
  4475a4:	b	44754c <ferror@plt+0x4481c>
  4475a8:	ldr	x21, [x19, #320]
  4475ac:	ldr	x2, [x22, #16]
  4475b0:	mov	w1, w20
  4475b4:	mov	x0, x19
  4475b8:	bl	4497d4 <ferror@plt+0x46aa4>
  4475bc:	ldr	x0, [x19, #320]
  4475c0:	cmp	x0, x21
  4475c4:	b.eq	4475d8 <ferror@plt+0x448a8>  // b.none
  4475c8:	ldp	x21, x22, [sp, #32]
  4475cc:	ldp	x23, x24, [sp, #48]
  4475d0:	ldp	x25, x26, [sp, #64]
  4475d4:	b	449694 <ferror@plt+0x46964>
  4475d8:	ldr	x0, [x19, #256]
  4475dc:	cmp	x0, x24
  4475e0:	b.eq	4475f4 <ferror@plt+0x448c4>  // b.none
  4475e4:	ldp	x21, x22, [sp, #32]
  4475e8:	ldp	x23, x24, [sp, #48]
  4475ec:	ldp	x25, x26, [sp, #64]
  4475f0:	b	449694 <ferror@plt+0x46964>
  4475f4:	sub	x0, x0, #0x2
  4475f8:	str	x0, [x19, #256]
  4475fc:	ldp	x21, x22, [sp, #32]
  447600:	ldp	x23, x24, [sp, #48]
  447604:	ldp	x25, x26, [sp, #64]
  447608:	b	449694 <ferror@plt+0x46964>
  44760c:	ldr	x2, [x22, #8]
  447610:	ldr	x21, [x22, #16]
  447614:	cbz	x2, 447624 <ferror@plt+0x448f4>
  447618:	mov	w1, w20
  44761c:	mov	x0, x19
  447620:	bl	4497d4 <ferror@plt+0x46aa4>
  447624:	ldr	x0, [x19, #256]
  447628:	cmp	x0, #0xff
  44762c:	b.eq	44768c <ferror@plt+0x4495c>  // b.none
  447630:	ldr	x1, [x19, #256]
  447634:	add	x0, x1, #0x1
  447638:	str	x0, [x19, #256]
  44763c:	mov	w0, #0x7b                  	// #123
  447640:	strb	w0, [x19, x1]
  447644:	strb	w0, [x19, #264]
  447648:	mov	x2, x21
  44764c:	mov	w1, w20
  447650:	mov	x0, x19
  447654:	bl	4497d4 <ferror@plt+0x46aa4>
  447658:	ldr	x0, [x19, #256]
  44765c:	cmp	x0, #0xff
  447660:	b.eq	4476b8 <ferror@plt+0x44988>  // b.none
  447664:	ldr	x1, [x19, #256]
  447668:	add	x0, x1, #0x1
  44766c:	str	x0, [x19, #256]
  447670:	mov	w0, #0x7d                  	// #125
  447674:	strb	w0, [x19, x1]
  447678:	strb	w0, [x19, #264]
  44767c:	ldp	x21, x22, [sp, #32]
  447680:	ldp	x23, x24, [sp, #48]
  447684:	ldp	x25, x26, [sp, #64]
  447688:	b	449694 <ferror@plt+0x46964>
  44768c:	strb	wzr, [x19, #255]
  447690:	ldr	x3, [x19, #272]
  447694:	ldr	x2, [x19, #280]
  447698:	mov	x1, #0xff                  	// #255
  44769c:	mov	x0, x19
  4476a0:	blr	x3
  4476a4:	str	xzr, [x19, #256]
  4476a8:	ldr	x0, [x19, #320]
  4476ac:	add	x0, x0, #0x1
  4476b0:	str	x0, [x19, #320]
  4476b4:	b	447630 <ferror@plt+0x44900>
  4476b8:	strb	wzr, [x19, #255]
  4476bc:	ldr	x3, [x19, #272]
  4476c0:	ldr	x2, [x19, #280]
  4476c4:	mov	x1, #0xff                  	// #255
  4476c8:	mov	x0, x19
  4476cc:	blr	x3
  4476d0:	str	xzr, [x19, #256]
  4476d4:	ldr	x0, [x19, #320]
  4476d8:	add	x0, x0, #0x1
  4476dc:	str	x0, [x19, #320]
  4476e0:	b	447664 <ferror@plt+0x44934>
  4476e4:	ldr	x24, [x22, #8]
  4476e8:	ldr	w23, [x24, #16]
  4476ec:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4476f0:	add	x20, x20, #0xea8
  4476f4:	add	x22, x20, #0x8
  4476f8:	mov	x25, #0xff                  	// #255
  4476fc:	b	447720 <ferror@plt+0x449f0>
  447700:	ldr	x0, [x19, #256]
  447704:	add	x1, x0, #0x1
  447708:	str	x1, [x19, #256]
  44770c:	strb	w21, [x19, x0]
  447710:	strb	w21, [x19, #264]
  447714:	add	x20, x20, #0x1
  447718:	cmp	x20, x22
  44771c:	b.eq	44775c <ferror@plt+0x44a2c>  // b.none
  447720:	ldrb	w21, [x20]
  447724:	ldr	x0, [x19, #256]
  447728:	cmp	x0, #0xff
  44772c:	b.ne	447700 <ferror@plt+0x449d0>  // b.any
  447730:	strb	wzr, [x19, #255]
  447734:	ldr	x3, [x19, #272]
  447738:	ldr	x2, [x19, #280]
  44773c:	mov	x1, x25
  447740:	mov	x0, x19
  447744:	blr	x3
  447748:	str	xzr, [x19, #256]
  44774c:	ldr	x0, [x19, #320]
  447750:	add	x0, x0, #0x1
  447754:	str	x0, [x19, #320]
  447758:	b	447700 <ferror@plt+0x449d0>
  44775c:	ldr	x0, [x24, #8]
  447760:	ldrb	w0, [x0]
  447764:	sub	w0, w0, #0x61
  447768:	and	w0, w0, #0xff
  44776c:	cmp	w0, #0x19
  447770:	b.hi	447794 <ferror@plt+0x44a64>  // b.pmore
  447774:	cmp	x1, #0xff
  447778:	b.eq	4477c4 <ferror@plt+0x44a94>  // b.none
  44777c:	ldr	x1, [x19, #256]
  447780:	add	x0, x1, #0x1
  447784:	str	x0, [x19, #256]
  447788:	mov	w0, #0x20                  	// #32
  44778c:	strb	w0, [x19, x1]
  447790:	strb	w0, [x19, #264]
  447794:	ldr	x22, [x24, #8]
  447798:	add	x0, x22, w23, sxtw
  44779c:	ldurb	w0, [x0, #-1]
  4477a0:	cmp	w0, #0x20
  4477a4:	cset	w0, eq  // eq = none
  4477a8:	sub	w23, w23, w0
  4477ac:	sxtw	x0, w23
  4477b0:	cbz	w23, 449740 <ferror@plt+0x46a10>
  4477b4:	mov	x20, x22
  4477b8:	add	x22, x22, x0
  4477bc:	mov	x23, #0xff                  	// #255
  4477c0:	b	44780c <ferror@plt+0x44adc>
  4477c4:	strb	wzr, [x19, #255]
  4477c8:	ldr	x3, [x19, #272]
  4477cc:	ldr	x2, [x19, #280]
  4477d0:	mov	x0, x19
  4477d4:	blr	x3
  4477d8:	str	xzr, [x19, #256]
  4477dc:	ldr	x0, [x19, #320]
  4477e0:	add	x0, x0, #0x1
  4477e4:	str	x0, [x19, #320]
  4477e8:	b	44777c <ferror@plt+0x44a4c>
  4477ec:	ldr	x0, [x19, #256]
  4477f0:	add	x1, x0, #0x1
  4477f4:	str	x1, [x19, #256]
  4477f8:	strb	w21, [x19, x0]
  4477fc:	strb	w21, [x19, #264]
  447800:	add	x20, x20, #0x1
  447804:	cmp	x20, x22
  447808:	b.eq	447848 <ferror@plt+0x44b18>  // b.none
  44780c:	ldrb	w21, [x20]
  447810:	ldr	x0, [x19, #256]
  447814:	cmp	x0, #0xff
  447818:	b.ne	4477ec <ferror@plt+0x44abc>  // b.any
  44781c:	strb	wzr, [x19, #255]
  447820:	ldr	x3, [x19, #272]
  447824:	ldr	x2, [x19, #280]
  447828:	mov	x1, x23
  44782c:	mov	x0, x19
  447830:	blr	x3
  447834:	str	xzr, [x19, #256]
  447838:	ldr	x0, [x19, #320]
  44783c:	add	x0, x0, #0x1
  447840:	str	x0, [x19, #320]
  447844:	b	4477ec <ferror@plt+0x44abc>
  447848:	ldp	x21, x22, [sp, #32]
  44784c:	ldp	x23, x24, [sp, #48]
  447850:	ldp	x25, x26, [sp, #64]
  447854:	b	449694 <ferror@plt+0x46964>
  447858:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44785c:	add	x21, x21, #0xeb8
  447860:	add	x24, x21, #0x9
  447864:	mov	x25, #0xff                  	// #255
  447868:	b	44788c <ferror@plt+0x44b5c>
  44786c:	ldr	x0, [x19, #256]
  447870:	add	x1, x0, #0x1
  447874:	str	x1, [x19, #256]
  447878:	strb	w23, [x19, x0]
  44787c:	strb	w23, [x19, #264]
  447880:	add	x21, x21, #0x1
  447884:	cmp	x21, x24
  447888:	b.eq	4478c8 <ferror@plt+0x44b98>  // b.none
  44788c:	ldrb	w23, [x21]
  447890:	ldr	x0, [x19, #256]
  447894:	cmp	x0, #0xff
  447898:	b.ne	44786c <ferror@plt+0x44b3c>  // b.any
  44789c:	strb	wzr, [x19, #255]
  4478a0:	ldr	x3, [x19, #272]
  4478a4:	ldr	x2, [x19, #280]
  4478a8:	mov	x1, x25
  4478ac:	mov	x0, x19
  4478b0:	blr	x3
  4478b4:	str	xzr, [x19, #256]
  4478b8:	ldr	x0, [x19, #320]
  4478bc:	add	x0, x0, #0x1
  4478c0:	str	x0, [x19, #320]
  4478c4:	b	44786c <ferror@plt+0x44b3c>
  4478c8:	ldr	x2, [x22, #16]
  4478cc:	mov	w1, w20
  4478d0:	mov	x0, x19
  4478d4:	bl	4497d4 <ferror@plt+0x46aa4>
  4478d8:	ldp	x21, x22, [sp, #32]
  4478dc:	ldp	x23, x24, [sp, #48]
  4478e0:	ldp	x25, x26, [sp, #64]
  4478e4:	b	449694 <ferror@plt+0x46964>
  4478e8:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4478ec:	add	x21, x21, #0xeb8
  4478f0:	add	x24, x21, #0x9
  4478f4:	mov	x25, #0xff                  	// #255
  4478f8:	b	44791c <ferror@plt+0x44bec>
  4478fc:	ldr	x0, [x19, #256]
  447900:	add	x1, x0, #0x1
  447904:	str	x1, [x19, #256]
  447908:	strb	w23, [x19, x0]
  44790c:	strb	w23, [x19, #264]
  447910:	add	x21, x21, #0x1
  447914:	cmp	x21, x24
  447918:	b.eq	447958 <ferror@plt+0x44c28>  // b.none
  44791c:	ldrb	w23, [x21]
  447920:	ldr	x0, [x19, #256]
  447924:	cmp	x0, #0xff
  447928:	b.ne	4478fc <ferror@plt+0x44bcc>  // b.any
  44792c:	strb	wzr, [x19, #255]
  447930:	ldr	x3, [x19, #272]
  447934:	ldr	x2, [x19, #280]
  447938:	mov	x1, x25
  44793c:	mov	x0, x19
  447940:	blr	x3
  447944:	str	xzr, [x19, #256]
  447948:	ldr	x0, [x19, #320]
  44794c:	add	x0, x0, #0x1
  447950:	str	x0, [x19, #320]
  447954:	b	4478fc <ferror@plt+0x44bcc>
  447958:	ldr	x0, [x19, #368]
  44795c:	cbz	x0, 447974 <ferror@plt+0x44c44>
  447960:	ldr	x1, [x19, #288]
  447964:	str	x1, [sp, #112]
  447968:	add	x1, sp, #0x70
  44796c:	str	x1, [x19, #288]
  447970:	str	x0, [sp, #120]
  447974:	ldr	x2, [x22, #8]
  447978:	ldr	w0, [x2]
  44797c:	cmp	w0, #0x4
  447980:	b.eq	4479b0 <ferror@plt+0x44c80>  // b.none
  447984:	mov	w1, w20
  447988:	mov	x0, x19
  44798c:	bl	4497d4 <ferror@plt+0x46aa4>
  447990:	ldr	x0, [x19, #368]
  447994:	cbz	x0, 449750 <ferror@plt+0x46a20>
  447998:	ldr	x0, [sp, #112]
  44799c:	str	x0, [x19, #288]
  4479a0:	ldp	x21, x22, [sp, #32]
  4479a4:	ldp	x23, x24, [sp, #48]
  4479a8:	ldp	x25, x26, [sp, #64]
  4479ac:	b	449694 <ferror@plt+0x46964>
  4479b0:	ldr	x2, [x2, #8]
  4479b4:	mov	w1, w20
  4479b8:	mov	x0, x19
  4479bc:	bl	4497d4 <ferror@plt+0x46aa4>
  4479c0:	ldr	x0, [x19, #368]
  4479c4:	cbz	x0, 4479d0 <ferror@plt+0x44ca0>
  4479c8:	ldr	x0, [sp, #112]
  4479cc:	str	x0, [x19, #288]
  4479d0:	ldrb	w0, [x19, #264]
  4479d4:	cmp	w0, #0x3c
  4479d8:	b.eq	447a54 <ferror@plt+0x44d24>  // b.none
  4479dc:	ldr	x0, [x19, #256]
  4479e0:	cmp	x0, #0xff
  4479e4:	b.eq	447aa8 <ferror@plt+0x44d78>  // b.none
  4479e8:	ldr	x1, [x19, #256]
  4479ec:	add	x0, x1, #0x1
  4479f0:	str	x0, [x19, #256]
  4479f4:	mov	w0, #0x3c                  	// #60
  4479f8:	strb	w0, [x19, x1]
  4479fc:	strb	w0, [x19, #264]
  447a00:	ldr	x0, [x22, #8]
  447a04:	ldr	x2, [x0, #16]
  447a08:	mov	w1, w20
  447a0c:	mov	x0, x19
  447a10:	bl	4497d4 <ferror@plt+0x46aa4>
  447a14:	ldrb	w0, [x19, #264]
  447a18:	cmp	w0, #0x3e
  447a1c:	b.eq	447ad4 <ferror@plt+0x44da4>  // b.none
  447a20:	ldr	x0, [x19, #256]
  447a24:	cmp	x0, #0xff
  447a28:	b.eq	447b28 <ferror@plt+0x44df8>  // b.none
  447a2c:	ldr	x1, [x19, #256]
  447a30:	add	x0, x1, #0x1
  447a34:	str	x0, [x19, #256]
  447a38:	mov	w0, #0x3e                  	// #62
  447a3c:	strb	w0, [x19, x1]
  447a40:	strb	w0, [x19, #264]
  447a44:	ldp	x21, x22, [sp, #32]
  447a48:	ldp	x23, x24, [sp, #48]
  447a4c:	ldp	x25, x26, [sp, #64]
  447a50:	b	449694 <ferror@plt+0x46964>
  447a54:	ldr	x0, [x19, #256]
  447a58:	cmp	x0, #0xff
  447a5c:	b.eq	447a7c <ferror@plt+0x44d4c>  // b.none
  447a60:	ldr	x1, [x19, #256]
  447a64:	add	x0, x1, #0x1
  447a68:	str	x0, [x19, #256]
  447a6c:	mov	w0, #0x20                  	// #32
  447a70:	strb	w0, [x19, x1]
  447a74:	strb	w0, [x19, #264]
  447a78:	b	4479dc <ferror@plt+0x44cac>
  447a7c:	strb	wzr, [x19, #255]
  447a80:	ldr	x3, [x19, #272]
  447a84:	ldr	x2, [x19, #280]
  447a88:	mov	x1, #0xff                  	// #255
  447a8c:	mov	x0, x19
  447a90:	blr	x3
  447a94:	str	xzr, [x19, #256]
  447a98:	ldr	x0, [x19, #320]
  447a9c:	add	x0, x0, #0x1
  447aa0:	str	x0, [x19, #320]
  447aa4:	b	447a60 <ferror@plt+0x44d30>
  447aa8:	strb	wzr, [x19, #255]
  447aac:	ldr	x3, [x19, #272]
  447ab0:	ldr	x2, [x19, #280]
  447ab4:	mov	x1, #0xff                  	// #255
  447ab8:	mov	x0, x19
  447abc:	blr	x3
  447ac0:	str	xzr, [x19, #256]
  447ac4:	ldr	x0, [x19, #320]
  447ac8:	add	x0, x0, #0x1
  447acc:	str	x0, [x19, #320]
  447ad0:	b	4479e8 <ferror@plt+0x44cb8>
  447ad4:	ldr	x0, [x19, #256]
  447ad8:	cmp	x0, #0xff
  447adc:	b.eq	447afc <ferror@plt+0x44dcc>  // b.none
  447ae0:	ldr	x1, [x19, #256]
  447ae4:	add	x0, x1, #0x1
  447ae8:	str	x0, [x19, #256]
  447aec:	mov	w0, #0x20                  	// #32
  447af0:	strb	w0, [x19, x1]
  447af4:	strb	w0, [x19, #264]
  447af8:	b	447a20 <ferror@plt+0x44cf0>
  447afc:	strb	wzr, [x19, #255]
  447b00:	ldr	x3, [x19, #272]
  447b04:	ldr	x2, [x19, #280]
  447b08:	mov	x1, #0xff                  	// #255
  447b0c:	mov	x0, x19
  447b10:	blr	x3
  447b14:	str	xzr, [x19, #256]
  447b18:	ldr	x0, [x19, #320]
  447b1c:	add	x0, x0, #0x1
  447b20:	str	x0, [x19, #320]
  447b24:	b	447ae0 <ferror@plt+0x44db0>
  447b28:	strb	wzr, [x19, #255]
  447b2c:	ldr	x3, [x19, #272]
  447b30:	ldr	x2, [x19, #280]
  447b34:	mov	x1, #0xff                  	// #255
  447b38:	mov	x0, x19
  447b3c:	blr	x3
  447b40:	str	xzr, [x19, #256]
  447b44:	ldr	x0, [x19, #320]
  447b48:	add	x0, x0, #0x1
  447b4c:	str	x0, [x19, #320]
  447b50:	b	447a2c <ferror@plt+0x44cfc>
  447b54:	ldr	x2, [x22, #8]
  447b58:	mov	w1, w20
  447b5c:	mov	x0, x19
  447b60:	bl	44aaf4 <ferror@plt+0x47dc4>
  447b64:	ldp	x21, x22, [sp, #32]
  447b68:	ldp	x23, x24, [sp, #48]
  447b6c:	ldp	x25, x26, [sp, #64]
  447b70:	b	449694 <ferror@plt+0x46964>
  447b74:	ldr	x24, [x22, #8]
  447b78:	ldr	x21, [x22, #16]
  447b7c:	ldr	w0, [x24]
  447b80:	cmp	w0, #0x32
  447b84:	b.eq	447c80 <ferror@plt+0x44f50>  // b.none
  447b88:	cmp	w0, #0x34
  447b8c:	b.ne	447ed4 <ferror@plt+0x451a4>  // b.any
  447b90:	ldr	x0, [x19, #256]
  447b94:	cmp	x0, #0xff
  447b98:	b.eq	447edc <ferror@plt+0x451ac>  // b.none
  447b9c:	ldr	x1, [x19, #256]
  447ba0:	add	x0, x1, #0x1
  447ba4:	str	x0, [x19, #256]
  447ba8:	mov	w0, #0x28                  	// #40
  447bac:	strb	w0, [x19, x1]
  447bb0:	strb	w0, [x19, #264]
  447bb4:	ldr	x2, [x24, #8]
  447bb8:	mov	w1, w20
  447bbc:	mov	x0, x19
  447bc0:	bl	4497d4 <ferror@plt+0x46aa4>
  447bc4:	ldr	x0, [x19, #256]
  447bc8:	cmp	x0, #0xff
  447bcc:	b.eq	447f08 <ferror@plt+0x451d8>  // b.none
  447bd0:	ldr	x1, [x19, #256]
  447bd4:	add	x0, x1, #0x1
  447bd8:	str	x0, [x19, #256]
  447bdc:	mov	w0, #0x29                  	// #41
  447be0:	strb	w0, [x19, x1]
  447be4:	strb	w0, [x19, #264]
  447be8:	mov	x23, #0x0                   	// #0
  447bec:	cbz	x23, 447fac <ferror@plt+0x4527c>
  447bf0:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447bf4:	add	x1, x1, #0xed8
  447bf8:	mov	x0, x23
  447bfc:	bl	402a20 <strcmp@plt>
  447c00:	cbz	w0, 447f34 <ferror@plt+0x45204>
  447c04:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  447c08:	add	x1, x1, #0x458
  447c0c:	mov	x0, x23
  447c10:	bl	402a20 <strcmp@plt>
  447c14:	cbnz	w0, 447fac <ferror@plt+0x4527c>
  447c18:	ldr	x0, [x19, #256]
  447c1c:	cmp	x0, #0xff
  447c20:	b.eq	447f54 <ferror@plt+0x45224>  // b.none
  447c24:	ldr	x1, [x19, #256]
  447c28:	add	x0, x1, #0x1
  447c2c:	str	x0, [x19, #256]
  447c30:	mov	w0, #0x28                  	// #40
  447c34:	strb	w0, [x19, x1]
  447c38:	strb	w0, [x19, #264]
  447c3c:	mov	x2, x21
  447c40:	mov	w1, w20
  447c44:	mov	x0, x19
  447c48:	bl	4497d4 <ferror@plt+0x46aa4>
  447c4c:	ldr	x0, [x19, #256]
  447c50:	cmp	x0, #0xff
  447c54:	b.eq	447f80 <ferror@plt+0x45250>  // b.none
  447c58:	ldr	x1, [x19, #256]
  447c5c:	add	x0, x1, #0x1
  447c60:	str	x0, [x19, #256]
  447c64:	mov	w0, #0x29                  	// #41
  447c68:	strb	w0, [x19, x1]
  447c6c:	strb	w0, [x19, #264]
  447c70:	ldp	x21, x22, [sp, #32]
  447c74:	ldp	x23, x24, [sp, #48]
  447c78:	ldp	x25, x26, [sp, #64]
  447c7c:	b	449694 <ferror@plt+0x46964>
  447c80:	ldr	x0, [x24, #8]
  447c84:	ldr	x23, [x0]
  447c88:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447c8c:	add	x1, x1, #0xec8
  447c90:	mov	x0, x23
  447c94:	bl	402a20 <strcmp@plt>
  447c98:	cbnz	w0, 447ca8 <ferror@plt+0x44f78>
  447c9c:	ldr	w0, [x21]
  447ca0:	cmp	w0, #0x3
  447ca4:	b.eq	447cf4 <ferror@plt+0x44fc4>  // b.none
  447ca8:	ldr	w0, [x21]
  447cac:	cmp	w0, #0x39
  447cb0:	b.eq	447d18 <ferror@plt+0x44fe8>  // b.none
  447cb4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447cb8:	add	x1, x1, #0xed0
  447cbc:	mov	x0, x23
  447cc0:	bl	402a20 <strcmp@plt>
  447cc4:	cbz	w0, 447d48 <ferror@plt+0x45018>
  447cc8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  447ccc:	add	x1, x1, #0xfd0
  447cd0:	mov	x0, x23
  447cd4:	bl	402a20 <strcmp@plt>
  447cd8:	mov	w22, w0
  447cdc:	cbz	w0, 447e10 <ferror@plt+0x450e0>
  447ce0:	mov	x2, x24
  447ce4:	mov	w1, w20
  447ce8:	mov	x0, x19
  447cec:	bl	44aaf4 <ferror@plt+0x47dc4>
  447cf0:	b	447bec <ferror@plt+0x44ebc>
  447cf4:	ldr	x0, [x21, #8]
  447cf8:	ldr	w1, [x0]
  447cfc:	cmp	w1, #0x1
  447d00:	b.ne	447cb4 <ferror@plt+0x44f84>  // b.any
  447d04:	ldr	x1, [x21, #16]
  447d08:	ldr	w1, [x1]
  447d0c:	cmp	w1, #0x29
  447d10:	csel	x21, x21, x0, ne  // ne = any
  447d14:	b	447cb4 <ferror@plt+0x44f84>
  447d18:	ldr	x2, [x21, #8]
  447d1c:	mov	w1, w20
  447d20:	mov	x0, x19
  447d24:	bl	44abbc <ferror@plt+0x47e8c>
  447d28:	mov	x2, x24
  447d2c:	mov	w1, w20
  447d30:	mov	x0, x19
  447d34:	bl	44aaf4 <ferror@plt+0x47dc4>
  447d38:	ldp	x21, x22, [sp, #32]
  447d3c:	ldp	x23, x24, [sp, #48]
  447d40:	ldp	x25, x26, [sp, #64]
  447d44:	b	449694 <ferror@plt+0x46964>
  447d48:	mov	x1, x21
  447d4c:	mov	x0, x19
  447d50:	bl	4452f8 <ferror@plt+0x425c8>
  447d54:	bl	4453f0 <ferror@plt+0x426c0>
  447d58:	mov	w2, w0
  447d5c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  447d60:	add	x1, x1, #0xd08
  447d64:	add	x0, sp, #0x70
  447d68:	bl	402720 <sprintf@plt>
  447d6c:	add	x0, sp, #0x70
  447d70:	bl	402680 <strlen@plt>
  447d74:	cbz	x0, 449760 <ferror@plt+0x46a30>
  447d78:	add	x20, sp, #0x70
  447d7c:	add	x21, x0, x20
  447d80:	mov	x23, #0xff                  	// #255
  447d84:	b	447da8 <ferror@plt+0x45078>
  447d88:	ldr	x0, [x19, #256]
  447d8c:	add	x1, x0, #0x1
  447d90:	str	x1, [x19, #256]
  447d94:	strb	w22, [x19, x0]
  447d98:	strb	w22, [x19, #264]
  447d9c:	add	x20, x20, #0x1
  447da0:	cmp	x20, x21
  447da4:	b.eq	447de4 <ferror@plt+0x450b4>  // b.none
  447da8:	ldrb	w22, [x20]
  447dac:	ldr	x0, [x19, #256]
  447db0:	cmp	x0, #0xff
  447db4:	b.ne	447d88 <ferror@plt+0x45058>  // b.any
  447db8:	strb	wzr, [x19, #255]
  447dbc:	ldr	x3, [x19, #272]
  447dc0:	ldr	x2, [x19, #280]
  447dc4:	mov	x1, x23
  447dc8:	mov	x0, x19
  447dcc:	blr	x3
  447dd0:	str	xzr, [x19, #256]
  447dd4:	ldr	x0, [x19, #320]
  447dd8:	add	x0, x0, #0x1
  447ddc:	str	x0, [x19, #320]
  447de0:	b	447d88 <ferror@plt+0x45058>
  447de4:	ldp	x21, x22, [sp, #32]
  447de8:	ldp	x23, x24, [sp, #48]
  447dec:	ldp	x25, x26, [sp, #64]
  447df0:	b	449694 <ferror@plt+0x46964>
  447df4:	ldr	x1, [x0, #8]
  447df8:	mov	x0, x19
  447dfc:	bl	4452f8 <ferror@plt+0x425c8>
  447e00:	bl	4453f0 <ferror@plt+0x426c0>
  447e04:	add	w22, w22, w0
  447e08:	ldr	x21, [x21, #16]
  447e0c:	cbz	x21, 447e38 <ferror@plt+0x45108>
  447e10:	ldr	w0, [x21]
  447e14:	cmp	w0, #0x2f
  447e18:	b.ne	447e38 <ferror@plt+0x45108>  // b.any
  447e1c:	ldr	x0, [x21, #8]
  447e20:	cbz	x0, 447e38 <ferror@plt+0x45108>
  447e24:	ldr	w1, [x0]
  447e28:	cmp	w1, #0x4b
  447e2c:	b.eq	447df4 <ferror@plt+0x450c4>  // b.none
  447e30:	add	w22, w22, #0x1
  447e34:	b	447e08 <ferror@plt+0x450d8>
  447e38:	mov	w2, w22
  447e3c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  447e40:	add	x1, x1, #0xd08
  447e44:	add	x0, sp, #0x70
  447e48:	bl	402720 <sprintf@plt>
  447e4c:	add	x0, sp, #0x70
  447e50:	bl	402680 <strlen@plt>
  447e54:	cbz	x0, 449770 <ferror@plt+0x46a40>
  447e58:	add	x20, sp, #0x70
  447e5c:	add	x22, x0, x20
  447e60:	mov	x23, #0xff                  	// #255
  447e64:	b	447e88 <ferror@plt+0x45158>
  447e68:	ldr	x0, [x19, #256]
  447e6c:	add	x1, x0, #0x1
  447e70:	str	x1, [x19, #256]
  447e74:	strb	w21, [x19, x0]
  447e78:	strb	w21, [x19, #264]
  447e7c:	add	x20, x20, #0x1
  447e80:	cmp	x20, x22
  447e84:	b.eq	447ec4 <ferror@plt+0x45194>  // b.none
  447e88:	ldrb	w21, [x20]
  447e8c:	ldr	x0, [x19, #256]
  447e90:	cmp	x0, #0xff
  447e94:	b.ne	447e68 <ferror@plt+0x45138>  // b.any
  447e98:	strb	wzr, [x19, #255]
  447e9c:	ldr	x3, [x19, #272]
  447ea0:	ldr	x2, [x19, #280]
  447ea4:	mov	x1, x23
  447ea8:	mov	x0, x19
  447eac:	blr	x3
  447eb0:	str	xzr, [x19, #256]
  447eb4:	ldr	x0, [x19, #320]
  447eb8:	add	x0, x0, #0x1
  447ebc:	str	x0, [x19, #320]
  447ec0:	b	447e68 <ferror@plt+0x45138>
  447ec4:	ldp	x21, x22, [sp, #32]
  447ec8:	ldp	x23, x24, [sp, #48]
  447ecc:	ldp	x25, x26, [sp, #64]
  447ed0:	b	449694 <ferror@plt+0x46964>
  447ed4:	mov	x23, #0x0                   	// #0
  447ed8:	b	447ce0 <ferror@plt+0x44fb0>
  447edc:	strb	wzr, [x19, #255]
  447ee0:	ldr	x3, [x19, #272]
  447ee4:	ldr	x2, [x19, #280]
  447ee8:	mov	x1, #0xff                  	// #255
  447eec:	mov	x0, x19
  447ef0:	blr	x3
  447ef4:	str	xzr, [x19, #256]
  447ef8:	ldr	x0, [x19, #320]
  447efc:	add	x0, x0, #0x1
  447f00:	str	x0, [x19, #320]
  447f04:	b	447b9c <ferror@plt+0x44e6c>
  447f08:	strb	wzr, [x19, #255]
  447f0c:	ldr	x3, [x19, #272]
  447f10:	ldr	x2, [x19, #280]
  447f14:	mov	x1, #0xff                  	// #255
  447f18:	mov	x0, x19
  447f1c:	blr	x3
  447f20:	str	xzr, [x19, #256]
  447f24:	ldr	x0, [x19, #320]
  447f28:	add	x0, x0, #0x1
  447f2c:	str	x0, [x19, #320]
  447f30:	b	447bd0 <ferror@plt+0x44ea0>
  447f34:	mov	x2, x21
  447f38:	mov	w1, w20
  447f3c:	mov	x0, x19
  447f40:	bl	4497d4 <ferror@plt+0x46aa4>
  447f44:	ldp	x21, x22, [sp, #32]
  447f48:	ldp	x23, x24, [sp, #48]
  447f4c:	ldp	x25, x26, [sp, #64]
  447f50:	b	449694 <ferror@plt+0x46964>
  447f54:	strb	wzr, [x19, #255]
  447f58:	ldr	x3, [x19, #272]
  447f5c:	ldr	x2, [x19, #280]
  447f60:	mov	x1, #0xff                  	// #255
  447f64:	mov	x0, x19
  447f68:	blr	x3
  447f6c:	str	xzr, [x19, #256]
  447f70:	ldr	x0, [x19, #320]
  447f74:	add	x0, x0, #0x1
  447f78:	str	x0, [x19, #320]
  447f7c:	b	447c24 <ferror@plt+0x44ef4>
  447f80:	strb	wzr, [x19, #255]
  447f84:	ldr	x3, [x19, #272]
  447f88:	ldr	x2, [x19, #280]
  447f8c:	mov	x1, #0xff                  	// #255
  447f90:	mov	x0, x19
  447f94:	blr	x3
  447f98:	str	xzr, [x19, #256]
  447f9c:	ldr	x0, [x19, #320]
  447fa0:	add	x0, x0, #0x1
  447fa4:	str	x0, [x19, #320]
  447fa8:	b	447c58 <ferror@plt+0x44f28>
  447fac:	mov	x2, x21
  447fb0:	mov	w1, w20
  447fb4:	mov	x0, x19
  447fb8:	bl	44abbc <ferror@plt+0x47e8c>
  447fbc:	ldp	x21, x22, [sp, #32]
  447fc0:	ldp	x23, x24, [sp, #48]
  447fc4:	ldp	x25, x26, [sp, #64]
  447fc8:	b	449694 <ferror@plt+0x46964>
  447fcc:	ldr	x0, [x22, #16]
  447fd0:	ldr	w0, [x0]
  447fd4:	cmp	w0, #0x39
  447fd8:	b.eq	447ff4 <ferror@plt+0x452c4>  // b.none
  447fdc:	mov	w0, #0x1                   	// #1
  447fe0:	str	w0, [x19, #304]
  447fe4:	ldp	x21, x22, [sp, #32]
  447fe8:	ldp	x23, x24, [sp, #48]
  447fec:	ldp	x25, x26, [sp, #64]
  447ff0:	b	449694 <ferror@plt+0x46964>
  447ff4:	ldr	x21, [x22, #8]
  447ff8:	mov	x0, x21
  447ffc:	bl	444fb0 <ferror@plt+0x42280>
  448000:	cbnz	w0, 448108 <ferror@plt+0x453d8>
  448004:	mov	x2, x22
  448008:	mov	w1, w20
  44800c:	mov	x0, x19
  448010:	bl	44acb8 <ferror@plt+0x47f88>
  448014:	cbnz	w0, 449780 <ferror@plt+0x46a50>
  448018:	ldr	x0, [x22, #8]
  44801c:	ldr	w1, [x0]
  448020:	cmp	w1, #0x32
  448024:	b.eq	448260 <ferror@plt+0x45530>  // b.none
  448028:	ldr	x0, [x22, #8]
  44802c:	ldr	x0, [x0, #8]
  448030:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448034:	add	x1, x1, #0xee8
  448038:	ldr	x0, [x0]
  44803c:	bl	402a20 <strcmp@plt>
  448040:	cbnz	w0, 448058 <ferror@plt+0x45328>
  448044:	ldr	x0, [x22, #16]
  448048:	ldr	x0, [x0, #8]
  44804c:	ldr	w1, [x0]
  448050:	cmp	w1, #0x3
  448054:	b.eq	4482d4 <ferror@plt+0x455a4>  // b.none
  448058:	ldr	x0, [x22, #16]
  44805c:	ldr	x2, [x0, #8]
  448060:	mov	w1, w20
  448064:	mov	x0, x19
  448068:	bl	44abbc <ferror@plt+0x47e8c>
  44806c:	ldr	x21, [x22, #8]
  448070:	ldr	x0, [x21, #8]
  448074:	ldr	x23, [x0]
  448078:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44807c:	add	x1, x1, #0xef0
  448080:	mov	x0, x23
  448084:	bl	402a20 <strcmp@plt>
  448088:	cbnz	w0, 448358 <ferror@plt+0x45628>
  44808c:	ldr	x0, [x19, #256]
  448090:	cmp	x0, #0xff
  448094:	b.eq	448300 <ferror@plt+0x455d0>  // b.none
  448098:	ldr	x1, [x19, #256]
  44809c:	add	x0, x1, #0x1
  4480a0:	str	x0, [x19, #256]
  4480a4:	mov	w0, #0x5b                  	// #91
  4480a8:	strb	w0, [x19, x1]
  4480ac:	strb	w0, [x19, #264]
  4480b0:	ldr	x0, [x22, #16]
  4480b4:	ldr	x2, [x0, #16]
  4480b8:	mov	w1, w20
  4480bc:	mov	x0, x19
  4480c0:	bl	4497d4 <ferror@plt+0x46aa4>
  4480c4:	ldr	x0, [x19, #256]
  4480c8:	cmp	x0, #0xff
  4480cc:	b.eq	44832c <ferror@plt+0x455fc>  // b.none
  4480d0:	ldr	x1, [x19, #256]
  4480d4:	add	x0, x1, #0x1
  4480d8:	str	x0, [x19, #256]
  4480dc:	mov	w0, #0x5d                  	// #93
  4480e0:	strb	w0, [x19, x1]
  4480e4:	strb	w0, [x19, #264]
  4480e8:	ldr	x0, [x22, #8]
  4480ec:	ldr	w1, [x0]
  4480f0:	cmp	w1, #0x32
  4480f4:	b.eq	448398 <ferror@plt+0x45668>  // b.none
  4480f8:	ldp	x21, x22, [sp, #32]
  4480fc:	ldp	x23, x24, [sp, #48]
  448100:	ldp	x25, x26, [sp, #64]
  448104:	b	449694 <ferror@plt+0x46964>
  448108:	mov	x2, x21
  44810c:	mov	w1, w20
  448110:	mov	x0, x19
  448114:	bl	44aaf4 <ferror@plt+0x47dc4>
  448118:	ldr	x0, [x19, #256]
  44811c:	cmp	x0, #0xff
  448120:	b.eq	448164 <ferror@plt+0x45434>  // b.none
  448124:	ldr	x1, [x19, #256]
  448128:	add	x0, x1, #0x1
  44812c:	str	x0, [x19, #256]
  448130:	mov	w0, #0x3c                  	// #60
  448134:	strb	w0, [x19, x1]
  448138:	strb	w0, [x19, #264]
  44813c:	ldr	x0, [x22, #16]
  448140:	ldr	x2, [x0, #8]
  448144:	mov	w1, w20
  448148:	mov	x0, x19
  44814c:	bl	4497d4 <ferror@plt+0x46aa4>
  448150:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448154:	add	x21, x21, #0xee0
  448158:	add	x24, x21, #0x2
  44815c:	mov	x25, #0xff                  	// #255
  448160:	b	4481b0 <ferror@plt+0x45480>
  448164:	strb	wzr, [x19, #255]
  448168:	ldr	x3, [x19, #272]
  44816c:	ldr	x2, [x19, #280]
  448170:	mov	x1, #0xff                  	// #255
  448174:	mov	x0, x19
  448178:	blr	x3
  44817c:	str	xzr, [x19, #256]
  448180:	ldr	x0, [x19, #320]
  448184:	add	x0, x0, #0x1
  448188:	str	x0, [x19, #320]
  44818c:	b	448124 <ferror@plt+0x453f4>
  448190:	ldr	x0, [x19, #256]
  448194:	add	x1, x0, #0x1
  448198:	str	x1, [x19, #256]
  44819c:	strb	w23, [x19, x0]
  4481a0:	strb	w23, [x19, #264]
  4481a4:	add	x21, x21, #0x1
  4481a8:	cmp	x21, x24
  4481ac:	b.eq	4481ec <ferror@plt+0x454bc>  // b.none
  4481b0:	ldrb	w23, [x21]
  4481b4:	ldr	x0, [x19, #256]
  4481b8:	cmp	x0, #0xff
  4481bc:	b.ne	448190 <ferror@plt+0x45460>  // b.any
  4481c0:	strb	wzr, [x19, #255]
  4481c4:	ldr	x3, [x19, #272]
  4481c8:	ldr	x2, [x19, #280]
  4481cc:	mov	x1, x25
  4481d0:	mov	x0, x19
  4481d4:	blr	x3
  4481d8:	str	xzr, [x19, #256]
  4481dc:	ldr	x0, [x19, #320]
  4481e0:	add	x0, x0, #0x1
  4481e4:	str	x0, [x19, #320]
  4481e8:	b	448190 <ferror@plt+0x45460>
  4481ec:	ldr	x0, [x22, #16]
  4481f0:	ldr	x2, [x0, #16]
  4481f4:	mov	w1, w20
  4481f8:	mov	x0, x19
  4481fc:	bl	4497d4 <ferror@plt+0x46aa4>
  448200:	ldr	x0, [x19, #256]
  448204:	cmp	x0, #0xff
  448208:	b.eq	448234 <ferror@plt+0x45504>  // b.none
  44820c:	ldr	x1, [x19, #256]
  448210:	add	x0, x1, #0x1
  448214:	str	x0, [x19, #256]
  448218:	mov	w0, #0x29                  	// #41
  44821c:	strb	w0, [x19, x1]
  448220:	strb	w0, [x19, #264]
  448224:	ldp	x21, x22, [sp, #32]
  448228:	ldp	x23, x24, [sp, #48]
  44822c:	ldp	x25, x26, [sp, #64]
  448230:	b	449694 <ferror@plt+0x46964>
  448234:	strb	wzr, [x19, #255]
  448238:	ldr	x3, [x19, #272]
  44823c:	ldr	x2, [x19, #280]
  448240:	mov	x1, #0xff                  	// #255
  448244:	mov	x0, x19
  448248:	blr	x3
  44824c:	str	xzr, [x19, #256]
  448250:	ldr	x0, [x19, #320]
  448254:	add	x0, x0, #0x1
  448258:	str	x0, [x19, #320]
  44825c:	b	44820c <ferror@plt+0x454dc>
  448260:	ldr	x0, [x0, #8]
  448264:	ldr	w1, [x0, #16]
  448268:	cmp	w1, #0x1
  44826c:	b.ne	448028 <ferror@plt+0x452f8>  // b.any
  448270:	ldr	x0, [x0, #8]
  448274:	ldrb	w0, [x0]
  448278:	cmp	w0, #0x3e
  44827c:	b.ne	448028 <ferror@plt+0x452f8>  // b.any
  448280:	ldr	x0, [x19, #256]
  448284:	cmp	x0, #0xff
  448288:	b.eq	4482a8 <ferror@plt+0x45578>  // b.none
  44828c:	ldr	x1, [x19, #256]
  448290:	add	x0, x1, #0x1
  448294:	str	x0, [x19, #256]
  448298:	mov	w0, #0x28                  	// #40
  44829c:	strb	w0, [x19, x1]
  4482a0:	strb	w0, [x19, #264]
  4482a4:	b	448028 <ferror@plt+0x452f8>
  4482a8:	strb	wzr, [x19, #255]
  4482ac:	ldr	x3, [x19, #272]
  4482b0:	ldr	x2, [x19, #280]
  4482b4:	mov	x1, #0xff                  	// #255
  4482b8:	mov	x0, x19
  4482bc:	blr	x3
  4482c0:	str	xzr, [x19, #256]
  4482c4:	ldr	x0, [x19, #320]
  4482c8:	add	x0, x0, #0x1
  4482cc:	str	x0, [x19, #320]
  4482d0:	b	44828c <ferror@plt+0x4555c>
  4482d4:	ldr	x1, [x0, #16]
  4482d8:	ldr	w1, [x1]
  4482dc:	cmp	w1, #0x29
  4482e0:	b.eq	4482ec <ferror@plt+0x455bc>  // b.none
  4482e4:	mov	w1, #0x1                   	// #1
  4482e8:	str	w1, [x19, #304]
  4482ec:	ldr	x2, [x0, #8]
  4482f0:	mov	w1, w20
  4482f4:	mov	x0, x19
  4482f8:	bl	44abbc <ferror@plt+0x47e8c>
  4482fc:	b	44806c <ferror@plt+0x4533c>
  448300:	strb	wzr, [x19, #255]
  448304:	ldr	x3, [x19, #272]
  448308:	ldr	x2, [x19, #280]
  44830c:	mov	x1, #0xff                  	// #255
  448310:	mov	x0, x19
  448314:	blr	x3
  448318:	str	xzr, [x19, #256]
  44831c:	ldr	x0, [x19, #320]
  448320:	add	x0, x0, #0x1
  448324:	str	x0, [x19, #320]
  448328:	b	448098 <ferror@plt+0x45368>
  44832c:	strb	wzr, [x19, #255]
  448330:	ldr	x3, [x19, #272]
  448334:	ldr	x2, [x19, #280]
  448338:	mov	x1, #0xff                  	// #255
  44833c:	mov	x0, x19
  448340:	blr	x3
  448344:	str	xzr, [x19, #256]
  448348:	ldr	x0, [x19, #320]
  44834c:	add	x0, x0, #0x1
  448350:	str	x0, [x19, #320]
  448354:	b	4480d0 <ferror@plt+0x453a0>
  448358:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44835c:	add	x1, x1, #0xee8
  448360:	mov	x0, x23
  448364:	bl	402a20 <strcmp@plt>
  448368:	cbnz	w0, 448384 <ferror@plt+0x45654>
  44836c:	ldr	x0, [x22, #16]
  448370:	ldr	x2, [x0, #16]
  448374:	mov	w1, w20
  448378:	mov	x0, x19
  44837c:	bl	44abbc <ferror@plt+0x47e8c>
  448380:	b	4480e8 <ferror@plt+0x453b8>
  448384:	mov	x2, x21
  448388:	mov	w1, w20
  44838c:	mov	x0, x19
  448390:	bl	44aaf4 <ferror@plt+0x47dc4>
  448394:	b	44836c <ferror@plt+0x4563c>
  448398:	ldr	x0, [x0, #8]
  44839c:	ldr	w1, [x0, #16]
  4483a0:	cmp	w1, #0x1
  4483a4:	b.eq	4483b8 <ferror@plt+0x45688>  // b.none
  4483a8:	ldp	x21, x22, [sp, #32]
  4483ac:	ldp	x23, x24, [sp, #48]
  4483b0:	ldp	x25, x26, [sp, #64]
  4483b4:	b	449694 <ferror@plt+0x46964>
  4483b8:	ldr	x0, [x0, #8]
  4483bc:	ldrb	w0, [x0]
  4483c0:	cmp	w0, #0x3e
  4483c4:	b.eq	4483d8 <ferror@plt+0x456a8>  // b.none
  4483c8:	ldp	x21, x22, [sp, #32]
  4483cc:	ldp	x23, x24, [sp, #48]
  4483d0:	ldp	x25, x26, [sp, #64]
  4483d4:	b	449694 <ferror@plt+0x46964>
  4483d8:	ldr	x0, [x19, #256]
  4483dc:	cmp	x0, #0xff
  4483e0:	b.eq	44840c <ferror@plt+0x456dc>  // b.none
  4483e4:	ldr	x1, [x19, #256]
  4483e8:	add	x0, x1, #0x1
  4483ec:	str	x0, [x19, #256]
  4483f0:	mov	w0, #0x29                  	// #41
  4483f4:	strb	w0, [x19, x1]
  4483f8:	strb	w0, [x19, #264]
  4483fc:	ldp	x21, x22, [sp, #32]
  448400:	ldp	x23, x24, [sp, #48]
  448404:	ldp	x25, x26, [sp, #64]
  448408:	b	449694 <ferror@plt+0x46964>
  44840c:	strb	wzr, [x19, #255]
  448410:	ldr	x3, [x19, #272]
  448414:	ldr	x2, [x19, #280]
  448418:	mov	x1, #0xff                  	// #255
  44841c:	mov	x0, x19
  448420:	blr	x3
  448424:	str	xzr, [x19, #256]
  448428:	ldr	x0, [x19, #320]
  44842c:	add	x0, x0, #0x1
  448430:	str	x0, [x19, #320]
  448434:	b	4483e4 <ferror@plt+0x456b4>
  448438:	mov	w0, #0x1                   	// #1
  44843c:	str	w0, [x19, #304]
  448440:	ldp	x21, x22, [sp, #32]
  448444:	ldp	x23, x24, [sp, #48]
  448448:	ldp	x25, x26, [sp, #64]
  44844c:	b	449694 <ferror@plt+0x46964>
  448450:	ldr	x0, [x22, #16]
  448454:	ldr	w1, [x0]
  448458:	cmp	w1, #0x3b
  44845c:	b.ne	448470 <ferror@plt+0x45740>  // b.any
  448460:	ldr	x0, [x0, #16]
  448464:	ldr	w0, [x0]
  448468:	cmp	w0, #0x3c
  44846c:	b.eq	448488 <ferror@plt+0x45758>  // b.none
  448470:	mov	w0, #0x1                   	// #1
  448474:	str	w0, [x19, #304]
  448478:	ldp	x21, x22, [sp, #32]
  44847c:	ldp	x23, x24, [sp, #48]
  448480:	ldp	x25, x26, [sp, #64]
  448484:	b	449694 <ferror@plt+0x46964>
  448488:	mov	x2, x22
  44848c:	mov	w1, w20
  448490:	mov	x0, x19
  448494:	bl	44acb8 <ferror@plt+0x47f88>
  448498:	cbnz	w0, 449790 <ferror@plt+0x46a60>
  44849c:	ldr	x24, [x22, #8]
  4484a0:	ldr	x0, [x22, #16]
  4484a4:	ldr	x22, [x0, #8]
  4484a8:	ldr	x0, [x0, #16]
  4484ac:	ldr	x23, [x0, #8]
  4484b0:	ldr	x21, [x0, #16]
  4484b4:	ldr	x0, [x24, #8]
  4484b8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4484bc:	add	x1, x1, #0xef8
  4484c0:	ldr	x0, [x0]
  4484c4:	bl	402a20 <strcmp@plt>
  4484c8:	cbnz	w0, 448530 <ferror@plt+0x45800>
  4484cc:	mov	x2, x22
  4484d0:	mov	w1, w20
  4484d4:	mov	x0, x19
  4484d8:	bl	44abbc <ferror@plt+0x47e8c>
  4484dc:	mov	x2, x24
  4484e0:	mov	w1, w20
  4484e4:	mov	x0, x19
  4484e8:	bl	44aaf4 <ferror@plt+0x47dc4>
  4484ec:	mov	x2, x23
  4484f0:	mov	w1, w20
  4484f4:	mov	x0, x19
  4484f8:	bl	44abbc <ferror@plt+0x47e8c>
  4484fc:	mov	x2, #0x3                   	// #3
  448500:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448504:	add	x1, x1, #0xf00
  448508:	mov	x0, x19
  44850c:	bl	4451e8 <ferror@plt+0x424b8>
  448510:	mov	x2, x21
  448514:	mov	w1, w20
  448518:	mov	x0, x19
  44851c:	bl	44abbc <ferror@plt+0x47e8c>
  448520:	ldp	x21, x22, [sp, #32]
  448524:	ldp	x23, x24, [sp, #48]
  448528:	ldp	x25, x26, [sp, #64]
  44852c:	b	449694 <ferror@plt+0x46964>
  448530:	mov	x2, #0x4                   	// #4
  448534:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448538:	add	x1, x1, #0xf08
  44853c:	mov	x0, x19
  448540:	bl	4451e8 <ferror@plt+0x424b8>
  448544:	ldr	x0, [x22, #8]
  448548:	cbz	x0, 448580 <ferror@plt+0x45850>
  44854c:	mov	x2, x22
  448550:	mov	w1, w20
  448554:	mov	x0, x19
  448558:	bl	44abbc <ferror@plt+0x47e8c>
  44855c:	ldr	x0, [x19, #256]
  448560:	cmp	x0, #0xff
  448564:	b.eq	4485b4 <ferror@plt+0x45884>  // b.none
  448568:	ldr	x1, [x19, #256]
  44856c:	add	x0, x1, #0x1
  448570:	str	x0, [x19, #256]
  448574:	mov	w0, #0x20                  	// #32
  448578:	strb	w0, [x19, x1]
  44857c:	strb	w0, [x19, #264]
  448580:	mov	x2, x23
  448584:	mov	w1, w20
  448588:	mov	x0, x19
  44858c:	bl	4497d4 <ferror@plt+0x46aa4>
  448590:	cbz	x21, 4497a0 <ferror@plt+0x46a70>
  448594:	mov	x2, x21
  448598:	mov	w1, w20
  44859c:	mov	x0, x19
  4485a0:	bl	44abbc <ferror@plt+0x47e8c>
  4485a4:	ldp	x21, x22, [sp, #32]
  4485a8:	ldp	x23, x24, [sp, #48]
  4485ac:	ldp	x25, x26, [sp, #64]
  4485b0:	b	449694 <ferror@plt+0x46964>
  4485b4:	strb	wzr, [x19, #255]
  4485b8:	ldr	x3, [x19, #272]
  4485bc:	ldr	x2, [x19, #280]
  4485c0:	mov	x1, #0xff                  	// #255
  4485c4:	mov	x0, x19
  4485c8:	blr	x3
  4485cc:	str	xzr, [x19, #256]
  4485d0:	ldr	x0, [x19, #320]
  4485d4:	add	x0, x0, #0x1
  4485d8:	str	x0, [x19, #320]
  4485dc:	b	448568 <ferror@plt+0x45838>
  4485e0:	mov	w0, #0x1                   	// #1
  4485e4:	str	w0, [x19, #304]
  4485e8:	ldp	x21, x22, [sp, #32]
  4485ec:	ldp	x23, x24, [sp, #48]
  4485f0:	ldp	x25, x26, [sp, #64]
  4485f4:	b	449694 <ferror@plt+0x46964>
  4485f8:	ldr	x1, [x22, #8]
  4485fc:	ldr	w2, [x1]
  448600:	mov	w21, #0x0                   	// #0
  448604:	cmp	w2, #0x27
  448608:	b.eq	448694 <ferror@plt+0x45964>  // b.none
  44860c:	ldr	x0, [x19, #256]
  448610:	cmp	x0, #0xff
  448614:	b.eq	448904 <ferror@plt+0x45bd4>  // b.none
  448618:	ldr	x1, [x19, #256]
  44861c:	add	x0, x1, #0x1
  448620:	str	x0, [x19, #256]
  448624:	mov	w0, #0x28                  	// #40
  448628:	strb	w0, [x19, x1]
  44862c:	strb	w0, [x19, #264]
  448630:	ldr	x2, [x22, #8]
  448634:	mov	w1, w20
  448638:	mov	x0, x19
  44863c:	bl	4497d4 <ferror@plt+0x46aa4>
  448640:	ldr	x0, [x19, #256]
  448644:	cmp	x0, #0xff
  448648:	b.eq	448930 <ferror@plt+0x45c00>  // b.none
  44864c:	add	x2, x0, #0x1
  448650:	str	x2, [x19, #256]
  448654:	mov	w1, #0x29                  	// #41
  448658:	strb	w1, [x19, x0]
  44865c:	strb	w1, [x19, #264]
  448660:	ldr	w0, [x22]
  448664:	cmp	w0, #0x3e
  448668:	b.eq	448980 <ferror@plt+0x45c50>  // b.none
  44866c:	cmp	w21, #0x8
  448670:	b.eq	4489cc <ferror@plt+0x45c9c>  // b.none
  448674:	ldr	x2, [x22, #16]
  448678:	mov	w1, w20
  44867c:	mov	x0, x19
  448680:	bl	4497d4 <ferror@plt+0x46aa4>
  448684:	ldp	x21, x22, [sp, #32]
  448688:	ldp	x23, x24, [sp, #48]
  44868c:	ldp	x25, x26, [sp, #64]
  448690:	b	449694 <ferror@plt+0x46964>
  448694:	ldr	x1, [x1, #8]
  448698:	ldr	w21, [x1, #28]
  44869c:	cmp	w21, #0x6
  4486a0:	b.ls	448704 <ferror@plt+0x459d4>  // b.plast
  4486a4:	cmp	w21, #0x7
  4486a8:	b.ne	44860c <ferror@plt+0x458dc>  // b.any
  4486ac:	ldr	x1, [x22, #16]
  4486b0:	ldr	w2, [x1]
  4486b4:	cbnz	w2, 44860c <ferror@plt+0x458dc>
  4486b8:	ldr	w2, [x1, #16]
  4486bc:	cmp	w0, #0x3d
  4486c0:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  4486c4:	b.ne	44860c <ferror@plt+0x458dc>  // b.any
  4486c8:	ldr	x0, [x1, #8]
  4486cc:	ldrb	w0, [x0]
  4486d0:	cmp	w0, #0x30
  4486d4:	b.eq	4488e0 <ferror@plt+0x45bb0>  // b.none
  4486d8:	cmp	w0, #0x31
  4486dc:	b.ne	44860c <ferror@plt+0x458dc>  // b.any
  4486e0:	mov	x2, #0x4                   	// #4
  4486e4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4486e8:	add	x1, x1, #0xe18
  4486ec:	mov	x0, x19
  4486f0:	bl	4451e8 <ferror@plt+0x424b8>
  4486f4:	ldp	x21, x22, [sp, #32]
  4486f8:	ldp	x23, x24, [sp, #48]
  4486fc:	ldp	x25, x26, [sp, #64]
  448700:	b	449694 <ferror@plt+0x46964>
  448704:	cbz	w21, 44860c <ferror@plt+0x458dc>
  448708:	ldr	x1, [x22, #16]
  44870c:	ldr	w1, [x1]
  448710:	cbnz	w1, 44860c <ferror@plt+0x458dc>
  448714:	cmp	w0, #0x3e
  448718:	b.eq	448764 <ferror@plt+0x45a34>  // b.none
  44871c:	ldr	x2, [x22, #16]
  448720:	mov	w1, w20
  448724:	mov	x0, x19
  448728:	bl	4497d4 <ferror@plt+0x46aa4>
  44872c:	cmp	w21, #0x4
  448730:	b.eq	448898 <ferror@plt+0x45b68>  // b.none
  448734:	b.ls	4487b8 <ferror@plt+0x45a88>  // b.plast
  448738:	cmp	w21, #0x5
  44873c:	b.eq	4488bc <ferror@plt+0x45b8c>  // b.none
  448740:	mov	x2, #0x3                   	// #3
  448744:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448748:	add	x1, x1, #0xf20
  44874c:	mov	x0, x19
  448750:	bl	4451e8 <ferror@plt+0x424b8>
  448754:	ldp	x21, x22, [sp, #32]
  448758:	ldp	x23, x24, [sp, #48]
  44875c:	ldp	x25, x26, [sp, #64]
  448760:	b	449694 <ferror@plt+0x46964>
  448764:	ldr	x0, [x19, #256]
  448768:	cmp	x0, #0xff
  44876c:	b.eq	44878c <ferror@plt+0x45a5c>  // b.none
  448770:	ldr	x1, [x19, #256]
  448774:	add	x0, x1, #0x1
  448778:	str	x0, [x19, #256]
  44877c:	mov	w0, #0x2d                  	// #45
  448780:	strb	w0, [x19, x1]
  448784:	strb	w0, [x19, #264]
  448788:	b	44871c <ferror@plt+0x459ec>
  44878c:	strb	wzr, [x19, #255]
  448790:	ldr	x3, [x19, #272]
  448794:	ldr	x2, [x19, #280]
  448798:	mov	x1, #0xff                  	// #255
  44879c:	mov	x0, x19
  4487a0:	blr	x3
  4487a4:	str	xzr, [x19, #256]
  4487a8:	ldr	x0, [x19, #320]
  4487ac:	add	x0, x0, #0x1
  4487b0:	str	x0, [x19, #320]
  4487b4:	b	448770 <ferror@plt+0x45a40>
  4487b8:	cmp	w21, #0x2
  4487bc:	b.eq	44880c <ferror@plt+0x45adc>  // b.none
  4487c0:	cmp	w21, #0x3
  4487c4:	b.ne	4487fc <ferror@plt+0x45acc>  // b.any
  4487c8:	ldr	x0, [x19, #256]
  4487cc:	cmp	x0, #0xff
  4487d0:	b.eq	44886c <ferror@plt+0x45b3c>  // b.none
  4487d4:	ldr	x1, [x19, #256]
  4487d8:	add	x0, x1, #0x1
  4487dc:	str	x0, [x19, #256]
  4487e0:	mov	w0, #0x6c                  	// #108
  4487e4:	strb	w0, [x19, x1]
  4487e8:	strb	w0, [x19, #264]
  4487ec:	ldp	x21, x22, [sp, #32]
  4487f0:	ldp	x23, x24, [sp, #48]
  4487f4:	ldp	x25, x26, [sp, #64]
  4487f8:	b	449694 <ferror@plt+0x46964>
  4487fc:	ldp	x21, x22, [sp, #32]
  448800:	ldp	x23, x24, [sp, #48]
  448804:	ldp	x25, x26, [sp, #64]
  448808:	b	449694 <ferror@plt+0x46964>
  44880c:	ldr	x0, [x19, #256]
  448810:	cmp	x0, #0xff
  448814:	b.eq	448840 <ferror@plt+0x45b10>  // b.none
  448818:	ldr	x1, [x19, #256]
  44881c:	add	x0, x1, #0x1
  448820:	str	x0, [x19, #256]
  448824:	mov	w0, #0x75                  	// #117
  448828:	strb	w0, [x19, x1]
  44882c:	strb	w0, [x19, #264]
  448830:	ldp	x21, x22, [sp, #32]
  448834:	ldp	x23, x24, [sp, #48]
  448838:	ldp	x25, x26, [sp, #64]
  44883c:	b	449694 <ferror@plt+0x46964>
  448840:	strb	wzr, [x19, #255]
  448844:	ldr	x3, [x19, #272]
  448848:	ldr	x2, [x19, #280]
  44884c:	mov	x1, #0xff                  	// #255
  448850:	mov	x0, x19
  448854:	blr	x3
  448858:	str	xzr, [x19, #256]
  44885c:	ldr	x0, [x19, #320]
  448860:	add	x0, x0, #0x1
  448864:	str	x0, [x19, #320]
  448868:	b	448818 <ferror@plt+0x45ae8>
  44886c:	strb	wzr, [x19, #255]
  448870:	ldr	x3, [x19, #272]
  448874:	ldr	x2, [x19, #280]
  448878:	mov	x1, #0xff                  	// #255
  44887c:	mov	x0, x19
  448880:	blr	x3
  448884:	str	xzr, [x19, #256]
  448888:	ldr	x0, [x19, #320]
  44888c:	add	x0, x0, #0x1
  448890:	str	x0, [x19, #320]
  448894:	b	4487d4 <ferror@plt+0x45aa4>
  448898:	mov	x2, #0x2                   	// #2
  44889c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4488a0:	add	x1, x1, #0xf10
  4488a4:	mov	x0, x19
  4488a8:	bl	4451e8 <ferror@plt+0x424b8>
  4488ac:	ldp	x21, x22, [sp, #32]
  4488b0:	ldp	x23, x24, [sp, #48]
  4488b4:	ldp	x25, x26, [sp, #64]
  4488b8:	b	449694 <ferror@plt+0x46964>
  4488bc:	mov	x2, #0x2                   	// #2
  4488c0:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4488c4:	add	x1, x1, #0xf18
  4488c8:	mov	x0, x19
  4488cc:	bl	4451e8 <ferror@plt+0x424b8>
  4488d0:	ldp	x21, x22, [sp, #32]
  4488d4:	ldp	x23, x24, [sp, #48]
  4488d8:	ldp	x25, x26, [sp, #64]
  4488dc:	b	449694 <ferror@plt+0x46964>
  4488e0:	mov	x2, #0x5                   	// #5
  4488e4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4488e8:	add	x1, x1, #0xe20
  4488ec:	mov	x0, x19
  4488f0:	bl	4451e8 <ferror@plt+0x424b8>
  4488f4:	ldp	x21, x22, [sp, #32]
  4488f8:	ldp	x23, x24, [sp, #48]
  4488fc:	ldp	x25, x26, [sp, #64]
  448900:	b	449694 <ferror@plt+0x46964>
  448904:	strb	wzr, [x19, #255]
  448908:	ldr	x3, [x19, #272]
  44890c:	ldr	x2, [x19, #280]
  448910:	mov	x1, #0xff                  	// #255
  448914:	mov	x0, x19
  448918:	blr	x3
  44891c:	str	xzr, [x19, #256]
  448920:	ldr	x0, [x19, #320]
  448924:	add	x0, x0, #0x1
  448928:	str	x0, [x19, #320]
  44892c:	b	448618 <ferror@plt+0x458e8>
  448930:	strb	wzr, [x19, #255]
  448934:	ldr	x3, [x19, #272]
  448938:	ldr	x2, [x19, #280]
  44893c:	mov	x1, #0xff                  	// #255
  448940:	mov	x0, x19
  448944:	blr	x3
  448948:	ldr	x0, [x19, #320]
  44894c:	add	x0, x0, #0x1
  448950:	str	x0, [x19, #320]
  448954:	mov	x0, #0x1                   	// #1
  448958:	str	x0, [x19, #256]
  44895c:	mov	w0, #0x29                  	// #41
  448960:	strb	w0, [x19]
  448964:	strb	w0, [x19, #264]
  448968:	ldr	w0, [x22]
  44896c:	cmp	w0, #0x3e
  448970:	b.eq	4489b0 <ferror@plt+0x45c80>  // b.none
  448974:	cmp	w21, #0x8
  448978:	b.ne	448674 <ferror@plt+0x45944>  // b.any
  44897c:	b	4489d8 <ferror@plt+0x45ca8>
  448980:	cmp	x2, #0xff
  448984:	b.ne	4489b0 <ferror@plt+0x45c80>  // b.any
  448988:	strb	wzr, [x19, #255]
  44898c:	ldr	x3, [x19, #272]
  448990:	ldr	x2, [x19, #280]
  448994:	mov	x1, #0xff                  	// #255
  448998:	mov	x0, x19
  44899c:	blr	x3
  4489a0:	str	xzr, [x19, #256]
  4489a4:	ldr	x0, [x19, #320]
  4489a8:	add	x0, x0, #0x1
  4489ac:	str	x0, [x19, #320]
  4489b0:	ldr	x1, [x19, #256]
  4489b4:	add	x0, x1, #0x1
  4489b8:	str	x0, [x19, #256]
  4489bc:	mov	w0, #0x2d                  	// #45
  4489c0:	strb	w0, [x19, x1]
  4489c4:	strb	w0, [x19, #264]
  4489c8:	b	44866c <ferror@plt+0x4593c>
  4489cc:	ldr	x0, [x19, #256]
  4489d0:	cmp	x0, #0xff
  4489d4:	b.eq	448a34 <ferror@plt+0x45d04>  // b.none
  4489d8:	ldr	x1, [x19, #256]
  4489dc:	add	x0, x1, #0x1
  4489e0:	str	x0, [x19, #256]
  4489e4:	mov	w0, #0x5b                  	// #91
  4489e8:	strb	w0, [x19, x1]
  4489ec:	strb	w0, [x19, #264]
  4489f0:	ldr	x2, [x22, #16]
  4489f4:	mov	w1, w20
  4489f8:	mov	x0, x19
  4489fc:	bl	4497d4 <ferror@plt+0x46aa4>
  448a00:	ldr	x0, [x19, #256]
  448a04:	cmp	x0, #0xff
  448a08:	b.eq	448a60 <ferror@plt+0x45d30>  // b.none
  448a0c:	ldr	x1, [x19, #256]
  448a10:	add	x0, x1, #0x1
  448a14:	str	x0, [x19, #256]
  448a18:	mov	w0, #0x5d                  	// #93
  448a1c:	strb	w0, [x19, x1]
  448a20:	strb	w0, [x19, #264]
  448a24:	ldp	x21, x22, [sp, #32]
  448a28:	ldp	x23, x24, [sp, #48]
  448a2c:	ldp	x25, x26, [sp, #64]
  448a30:	b	449694 <ferror@plt+0x46964>
  448a34:	strb	wzr, [x19, #255]
  448a38:	ldr	x3, [x19, #272]
  448a3c:	ldr	x2, [x19, #280]
  448a40:	mov	x1, #0xff                  	// #255
  448a44:	mov	x0, x19
  448a48:	blr	x3
  448a4c:	str	xzr, [x19, #256]
  448a50:	ldr	x0, [x19, #320]
  448a54:	add	x0, x0, #0x1
  448a58:	str	x0, [x19, #320]
  448a5c:	b	4489d8 <ferror@plt+0x45ca8>
  448a60:	strb	wzr, [x19, #255]
  448a64:	ldr	x3, [x19, #272]
  448a68:	ldr	x2, [x19, #280]
  448a6c:	mov	x1, #0xff                  	// #255
  448a70:	mov	x0, x19
  448a74:	blr	x3
  448a78:	str	xzr, [x19, #256]
  448a7c:	ldr	x0, [x19, #320]
  448a80:	add	x0, x0, #0x1
  448a84:	str	x0, [x19, #320]
  448a88:	b	448a0c <ferror@plt+0x45cdc>
  448a8c:	ldr	w2, [x22, #8]
  448a90:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  448a94:	add	x1, x1, #0xd08
  448a98:	add	x0, sp, #0x70
  448a9c:	bl	402720 <sprintf@plt>
  448aa0:	add	x0, sp, #0x70
  448aa4:	bl	402680 <strlen@plt>
  448aa8:	cbz	x0, 4497b0 <ferror@plt+0x46a80>
  448aac:	add	x20, sp, #0x70
  448ab0:	add	x22, x0, x20
  448ab4:	mov	x23, #0xff                  	// #255
  448ab8:	b	448adc <ferror@plt+0x45dac>
  448abc:	ldr	x0, [x19, #256]
  448ac0:	add	x1, x0, #0x1
  448ac4:	str	x1, [x19, #256]
  448ac8:	strb	w21, [x19, x0]
  448acc:	strb	w21, [x19, #264]
  448ad0:	add	x20, x20, #0x1
  448ad4:	cmp	x20, x22
  448ad8:	b.eq	448b18 <ferror@plt+0x45de8>  // b.none
  448adc:	ldrb	w21, [x20]
  448ae0:	ldr	x0, [x19, #256]
  448ae4:	cmp	x0, #0xff
  448ae8:	b.ne	448abc <ferror@plt+0x45d8c>  // b.any
  448aec:	strb	wzr, [x19, #255]
  448af0:	ldr	x3, [x19, #272]
  448af4:	ldr	x2, [x19, #280]
  448af8:	mov	x1, x23
  448afc:	mov	x0, x19
  448b00:	blr	x3
  448b04:	str	xzr, [x19, #256]
  448b08:	ldr	x0, [x19, #320]
  448b0c:	add	x0, x0, #0x1
  448b10:	str	x0, [x19, #320]
  448b14:	b	448abc <ferror@plt+0x45d8c>
  448b18:	ldp	x21, x22, [sp, #32]
  448b1c:	ldp	x23, x24, [sp, #48]
  448b20:	ldp	x25, x26, [sp, #64]
  448b24:	b	449694 <ferror@plt+0x46964>
  448b28:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448b2c:	add	x21, x21, #0xf28
  448b30:	add	x24, x21, #0xe
  448b34:	mov	x25, #0xff                  	// #255
  448b38:	b	448b5c <ferror@plt+0x45e2c>
  448b3c:	ldr	x0, [x19, #256]
  448b40:	add	x1, x0, #0x1
  448b44:	str	x1, [x19, #256]
  448b48:	strb	w23, [x19, x0]
  448b4c:	strb	w23, [x19, #264]
  448b50:	add	x21, x21, #0x1
  448b54:	cmp	x21, x24
  448b58:	b.eq	448b98 <ferror@plt+0x45e68>  // b.none
  448b5c:	ldrb	w23, [x21]
  448b60:	ldr	x0, [x19, #256]
  448b64:	cmp	x0, #0xff
  448b68:	b.ne	448b3c <ferror@plt+0x45e0c>  // b.any
  448b6c:	strb	wzr, [x19, #255]
  448b70:	ldr	x3, [x19, #272]
  448b74:	ldr	x2, [x19, #280]
  448b78:	mov	x1, x25
  448b7c:	mov	x0, x19
  448b80:	blr	x3
  448b84:	str	xzr, [x19, #256]
  448b88:	ldr	x0, [x19, #320]
  448b8c:	add	x0, x0, #0x1
  448b90:	str	x0, [x19, #320]
  448b94:	b	448b3c <ferror@plt+0x45e0c>
  448b98:	ldr	x2, [x22, #8]
  448b9c:	mov	w1, w20
  448ba0:	mov	x0, x19
  448ba4:	bl	4497d4 <ferror@plt+0x46aa4>
  448ba8:	ldp	x21, x22, [sp, #32]
  448bac:	ldp	x23, x24, [sp, #48]
  448bb0:	ldp	x25, x26, [sp, #64]
  448bb4:	b	449694 <ferror@plt+0x46964>
  448bb8:	ldr	x2, [x22, #8]
  448bbc:	mov	w1, w20
  448bc0:	mov	x0, x19
  448bc4:	bl	4497d4 <ferror@plt+0x46aa4>
  448bc8:	ldr	x2, [x22, #16]
  448bcc:	mov	w1, w20
  448bd0:	mov	x0, x19
  448bd4:	bl	4497d4 <ferror@plt+0x46aa4>
  448bd8:	ldp	x21, x22, [sp, #32]
  448bdc:	ldp	x23, x24, [sp, #48]
  448be0:	ldp	x25, x26, [sp, #64]
  448be4:	b	449694 <ferror@plt+0x46964>
  448be8:	ldrb	w20, [x22, #8]
  448bec:	ldr	x0, [x19, #256]
  448bf0:	cmp	x0, #0xff
  448bf4:	b.eq	448c1c <ferror@plt+0x45eec>  // b.none
  448bf8:	ldr	x0, [x19, #256]
  448bfc:	add	x1, x0, #0x1
  448c00:	str	x1, [x19, #256]
  448c04:	strb	w20, [x19, x0]
  448c08:	strb	w20, [x19, #264]
  448c0c:	ldp	x21, x22, [sp, #32]
  448c10:	ldp	x23, x24, [sp, #48]
  448c14:	ldp	x25, x26, [sp, #64]
  448c18:	b	449694 <ferror@plt+0x46964>
  448c1c:	strb	wzr, [x19, #255]
  448c20:	ldr	x3, [x19, #272]
  448c24:	ldr	x2, [x19, #280]
  448c28:	mov	x1, #0xff                  	// #255
  448c2c:	mov	x0, x19
  448c30:	blr	x3
  448c34:	str	xzr, [x19, #256]
  448c38:	ldr	x0, [x19, #320]
  448c3c:	add	x0, x0, #0x1
  448c40:	str	x0, [x19, #320]
  448c44:	b	448bf8 <ferror@plt+0x45ec8>
  448c48:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448c4c:	add	x21, x21, #0xf38
  448c50:	add	x24, x21, #0xa
  448c54:	mov	x25, #0xff                  	// #255
  448c58:	b	448c7c <ferror@plt+0x45f4c>
  448c5c:	ldr	x0, [x19, #256]
  448c60:	add	x1, x0, #0x1
  448c64:	str	x1, [x19, #256]
  448c68:	strb	w23, [x19, x0]
  448c6c:	strb	w23, [x19, #264]
  448c70:	add	x21, x21, #0x1
  448c74:	cmp	x21, x24
  448c78:	b.eq	448cb8 <ferror@plt+0x45f88>  // b.none
  448c7c:	ldrb	w23, [x21]
  448c80:	ldr	x0, [x19, #256]
  448c84:	cmp	x0, #0xff
  448c88:	b.ne	448c5c <ferror@plt+0x45f2c>  // b.any
  448c8c:	strb	wzr, [x19, #255]
  448c90:	ldr	x3, [x19, #272]
  448c94:	ldr	x2, [x19, #280]
  448c98:	mov	x1, x25
  448c9c:	mov	x0, x19
  448ca0:	blr	x3
  448ca4:	str	xzr, [x19, #256]
  448ca8:	ldr	x0, [x19, #320]
  448cac:	add	x0, x0, #0x1
  448cb0:	str	x0, [x19, #320]
  448cb4:	b	448c5c <ferror@plt+0x45f2c>
  448cb8:	ldr	x2, [x22, #8]
  448cbc:	mov	w1, w20
  448cc0:	mov	x0, x19
  448cc4:	bl	4497d4 <ferror@plt+0x46aa4>
  448cc8:	ldr	x0, [x19, #256]
  448ccc:	cmp	x0, #0xff
  448cd0:	b.eq	448cfc <ferror@plt+0x45fcc>  // b.none
  448cd4:	ldr	x1, [x19, #256]
  448cd8:	add	x0, x1, #0x1
  448cdc:	str	x0, [x19, #256]
  448ce0:	mov	w0, #0x29                  	// #41
  448ce4:	strb	w0, [x19, x1]
  448ce8:	strb	w0, [x19, #264]
  448cec:	ldp	x21, x22, [sp, #32]
  448cf0:	ldp	x23, x24, [sp, #48]
  448cf4:	ldp	x25, x26, [sp, #64]
  448cf8:	b	449694 <ferror@plt+0x46964>
  448cfc:	strb	wzr, [x19, #255]
  448d00:	ldr	x3, [x19, #272]
  448d04:	ldr	x2, [x19, #280]
  448d08:	mov	x1, #0xff                  	// #255
  448d0c:	mov	x0, x19
  448d10:	blr	x3
  448d14:	str	xzr, [x19, #256]
  448d18:	ldr	x0, [x19, #320]
  448d1c:	add	x0, x0, #0x1
  448d20:	str	x0, [x19, #320]
  448d24:	b	448cd4 <ferror@plt+0x45fa4>
  448d28:	ldr	x1, [x22, #8]
  448d2c:	mov	x0, x19
  448d30:	bl	4452f8 <ferror@plt+0x425c8>
  448d34:	cbz	x0, 448d5c <ferror@plt+0x4602c>
  448d38:	stp	x27, x28, [sp, #80]
  448d3c:	bl	4453f0 <ferror@plt+0x426c0>
  448d40:	mov	w25, w0
  448d44:	ldr	x27, [x22, #8]
  448d48:	cmp	w0, #0x0
  448d4c:	b.le	4497c0 <ferror@plt+0x46a90>
  448d50:	sub	w28, w0, #0x1
  448d54:	mov	x26, #0xff                  	// #255
  448d58:	b	448df8 <ferror@plt+0x460c8>
  448d5c:	ldr	x2, [x22, #8]
  448d60:	mov	w1, w20
  448d64:	mov	x0, x19
  448d68:	bl	44abbc <ferror@plt+0x47e8c>
  448d6c:	mov	x2, #0x3                   	// #3
  448d70:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  448d74:	add	x1, x1, #0xc10
  448d78:	mov	x0, x19
  448d7c:	bl	4451e8 <ferror@plt+0x424b8>
  448d80:	ldp	x21, x22, [sp, #32]
  448d84:	ldp	x23, x24, [sp, #48]
  448d88:	ldp	x25, x26, [sp, #64]
  448d8c:	b	449694 <ferror@plt+0x46964>
  448d90:	ldr	x0, [x19, #256]
  448d94:	add	x1, x0, #0x1
  448d98:	str	x1, [x19, #256]
  448d9c:	strb	w23, [x19, x0]
  448da0:	strb	w23, [x19, #264]
  448da4:	add	x22, x22, #0x1
  448da8:	cmp	x22, x24
  448dac:	b.eq	448dec <ferror@plt+0x460bc>  // b.none
  448db0:	ldrb	w23, [x22]
  448db4:	ldr	x0, [x19, #256]
  448db8:	cmp	x0, #0xff
  448dbc:	b.ne	448d90 <ferror@plt+0x46060>  // b.any
  448dc0:	strb	wzr, [x19, #255]
  448dc4:	ldr	x3, [x19, #272]
  448dc8:	ldr	x2, [x19, #280]
  448dcc:	mov	x1, x26
  448dd0:	mov	x0, x19
  448dd4:	blr	x3
  448dd8:	str	xzr, [x19, #256]
  448ddc:	ldr	x0, [x19, #320]
  448de0:	add	x0, x0, #0x1
  448de4:	str	x0, [x19, #320]
  448de8:	b	448d90 <ferror@plt+0x46060>
  448dec:	add	w21, w21, #0x1
  448df0:	cmp	w25, w21
  448df4:	b.eq	448e24 <ferror@plt+0x460f4>  // b.none
  448df8:	str	w21, [x19, #316]
  448dfc:	mov	x2, x27
  448e00:	mov	w1, w20
  448e04:	mov	x0, x19
  448e08:	bl	4497d4 <ferror@plt+0x46aa4>
  448e0c:	cmp	w28, w21
  448e10:	b.le	448dec <ferror@plt+0x460bc>
  448e14:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  448e18:	add	x22, x0, #0xe10
  448e1c:	add	x24, x22, #0x2
  448e20:	b	448db0 <ferror@plt+0x46080>
  448e24:	ldp	x21, x22, [sp, #32]
  448e28:	ldp	x23, x24, [sp, #48]
  448e2c:	ldp	x25, x26, [sp, #64]
  448e30:	ldp	x27, x28, [sp, #80]
  448e34:	b	449694 <ferror@plt+0x46964>
  448e38:	ldr	x23, [x22, #8]
  448e3c:	cbnz	x23, 448ec0 <ferror@plt+0x46190>
  448e40:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448e44:	add	x20, x20, #0xf48
  448e48:	add	x22, x20, #0x4
  448e4c:	mov	x23, #0xff                  	// #255
  448e50:	b	448e74 <ferror@plt+0x46144>
  448e54:	ldr	x0, [x19, #256]
  448e58:	add	x1, x0, #0x1
  448e5c:	str	x1, [x19, #256]
  448e60:	strb	w21, [x19, x0]
  448e64:	strb	w21, [x19, #264]
  448e68:	add	x20, x20, #0x1
  448e6c:	cmp	x22, x20
  448e70:	b.eq	448eb0 <ferror@plt+0x46180>  // b.none
  448e74:	ldrb	w21, [x20]
  448e78:	ldr	x0, [x19, #256]
  448e7c:	cmp	x0, #0xff
  448e80:	b.ne	448e54 <ferror@plt+0x46124>  // b.any
  448e84:	strb	wzr, [x19, #255]
  448e88:	ldr	x3, [x19, #272]
  448e8c:	ldr	x2, [x19, #280]
  448e90:	mov	x1, x23
  448e94:	mov	x0, x19
  448e98:	blr	x3
  448e9c:	str	xzr, [x19, #256]
  448ea0:	ldr	x0, [x19, #320]
  448ea4:	add	x0, x0, #0x1
  448ea8:	str	x0, [x19, #320]
  448eac:	b	448e54 <ferror@plt+0x46124>
  448eb0:	ldp	x21, x22, [sp, #32]
  448eb4:	ldp	x23, x24, [sp, #48]
  448eb8:	ldp	x25, x26, [sp, #64]
  448ebc:	b	449694 <ferror@plt+0x46964>
  448ec0:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  448ec4:	add	x20, x20, #0xf50
  448ec8:	add	x22, x20, #0x6
  448ecc:	mov	x24, #0xff                  	// #255
  448ed0:	b	448ef4 <ferror@plt+0x461c4>
  448ed4:	ldr	x0, [x19, #256]
  448ed8:	add	x1, x0, #0x1
  448edc:	str	x1, [x19, #256]
  448ee0:	strb	w21, [x19, x0]
  448ee4:	strb	w21, [x19, #264]
  448ee8:	add	x20, x20, #0x1
  448eec:	cmp	x20, x22
  448ef0:	b.eq	448f30 <ferror@plt+0x46200>  // b.none
  448ef4:	ldrb	w21, [x20]
  448ef8:	ldr	x0, [x19, #256]
  448efc:	cmp	x0, #0xff
  448f00:	b.ne	448ed4 <ferror@plt+0x461a4>  // b.any
  448f04:	strb	wzr, [x19, #255]
  448f08:	ldr	x3, [x19, #272]
  448f0c:	ldr	x2, [x19, #280]
  448f10:	mov	x1, x24
  448f14:	mov	x0, x19
  448f18:	blr	x3
  448f1c:	str	xzr, [x19, #256]
  448f20:	ldr	x0, [x19, #320]
  448f24:	add	x0, x0, #0x1
  448f28:	str	x0, [x19, #320]
  448f2c:	b	448ed4 <ferror@plt+0x461a4>
  448f30:	mov	w2, w23
  448f34:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  448f38:	add	x1, x1, #0xd08
  448f3c:	add	x0, sp, #0x70
  448f40:	bl	402720 <sprintf@plt>
  448f44:	add	x0, sp, #0x70
  448f48:	bl	402680 <strlen@plt>
  448f4c:	cbz	x0, 448fbc <ferror@plt+0x4628c>
  448f50:	add	x20, sp, #0x70
  448f54:	add	x22, x20, x0
  448f58:	mov	x23, #0xff                  	// #255
  448f5c:	b	448f80 <ferror@plt+0x46250>
  448f60:	ldr	x0, [x19, #256]
  448f64:	add	x1, x0, #0x1
  448f68:	str	x1, [x19, #256]
  448f6c:	strb	w21, [x19, x0]
  448f70:	strb	w21, [x19, #264]
  448f74:	add	x20, x20, #0x1
  448f78:	cmp	x22, x20
  448f7c:	b.eq	448fbc <ferror@plt+0x4628c>  // b.none
  448f80:	ldrb	w21, [x20]
  448f84:	ldr	x0, [x19, #256]
  448f88:	cmp	x0, #0xff
  448f8c:	b.ne	448f60 <ferror@plt+0x46230>  // b.any
  448f90:	strb	wzr, [x19, #255]
  448f94:	ldr	x3, [x19, #272]
  448f98:	ldr	x2, [x19, #280]
  448f9c:	mov	x1, x23
  448fa0:	mov	x0, x19
  448fa4:	blr	x3
  448fa8:	str	xzr, [x19, #256]
  448fac:	ldr	x0, [x19, #320]
  448fb0:	add	x0, x0, #0x1
  448fb4:	str	x0, [x19, #320]
  448fb8:	b	448f60 <ferror@plt+0x46230>
  448fbc:	ldr	x0, [x19, #256]
  448fc0:	cmp	x0, #0xff
  448fc4:	b.eq	448ff0 <ferror@plt+0x462c0>  // b.none
  448fc8:	ldr	x1, [x19, #256]
  448fcc:	add	x0, x1, #0x1
  448fd0:	str	x0, [x19, #256]
  448fd4:	mov	w0, #0x7d                  	// #125
  448fd8:	strb	w0, [x19, x1]
  448fdc:	strb	w0, [x19, #264]
  448fe0:	ldp	x21, x22, [sp, #32]
  448fe4:	ldp	x23, x24, [sp, #48]
  448fe8:	ldp	x25, x26, [sp, #64]
  448fec:	b	449694 <ferror@plt+0x46964>
  448ff0:	strb	wzr, [x19, #255]
  448ff4:	ldr	x3, [x19, #272]
  448ff8:	ldr	x2, [x19, #280]
  448ffc:	mov	x1, #0xff                  	// #255
  449000:	mov	x0, x19
  449004:	blr	x3
  449008:	str	xzr, [x19, #256]
  44900c:	ldr	x0, [x19, #320]
  449010:	add	x0, x0, #0x1
  449014:	str	x0, [x19, #320]
  449018:	b	448fc8 <ferror@plt+0x46298>
  44901c:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  449020:	add	x21, x21, #0xf58
  449024:	add	x24, x21, #0x1d
  449028:	mov	x25, #0xff                  	// #255
  44902c:	b	449050 <ferror@plt+0x46320>
  449030:	ldr	x0, [x19, #256]
  449034:	add	x1, x0, #0x1
  449038:	str	x1, [x19, #256]
  44903c:	strb	w23, [x19, x0]
  449040:	strb	w23, [x19, #264]
  449044:	add	x21, x21, #0x1
  449048:	cmp	x21, x24
  44904c:	b.eq	44908c <ferror@plt+0x4635c>  // b.none
  449050:	ldrb	w23, [x21]
  449054:	ldr	x0, [x19, #256]
  449058:	cmp	x0, #0xff
  44905c:	b.ne	449030 <ferror@plt+0x46300>  // b.any
  449060:	strb	wzr, [x19, #255]
  449064:	ldr	x3, [x19, #272]
  449068:	ldr	x2, [x19, #280]
  44906c:	mov	x1, x25
  449070:	mov	x0, x19
  449074:	blr	x3
  449078:	str	xzr, [x19, #256]
  44907c:	ldr	x0, [x19, #320]
  449080:	add	x0, x0, #0x1
  449084:	str	x0, [x19, #320]
  449088:	b	449030 <ferror@plt+0x46300>
  44908c:	ldr	x2, [x22, #8]
  449090:	mov	w1, w20
  449094:	mov	x0, x19
  449098:	bl	4497d4 <ferror@plt+0x46aa4>
  44909c:	ldp	x21, x22, [sp, #32]
  4490a0:	ldp	x23, x24, [sp, #48]
  4490a4:	ldp	x25, x26, [sp, #64]
  4490a8:	b	449694 <ferror@plt+0x46964>
  4490ac:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4490b0:	add	x21, x21, #0xf78
  4490b4:	add	x24, x21, #0x1c
  4490b8:	mov	x25, #0xff                  	// #255
  4490bc:	b	4490e0 <ferror@plt+0x463b0>
  4490c0:	ldr	x0, [x19, #256]
  4490c4:	add	x1, x0, #0x1
  4490c8:	str	x1, [x19, #256]
  4490cc:	strb	w23, [x19, x0]
  4490d0:	strb	w23, [x19, #264]
  4490d4:	add	x21, x21, #0x1
  4490d8:	cmp	x21, x24
  4490dc:	b.eq	44911c <ferror@plt+0x463ec>  // b.none
  4490e0:	ldrb	w23, [x21]
  4490e4:	ldr	x0, [x19, #256]
  4490e8:	cmp	x0, #0xff
  4490ec:	b.ne	4490c0 <ferror@plt+0x46390>  // b.any
  4490f0:	strb	wzr, [x19, #255]
  4490f4:	ldr	x3, [x19, #272]
  4490f8:	ldr	x2, [x19, #280]
  4490fc:	mov	x1, x25
  449100:	mov	x0, x19
  449104:	blr	x3
  449108:	str	xzr, [x19, #256]
  44910c:	ldr	x0, [x19, #320]
  449110:	add	x0, x0, #0x1
  449114:	str	x0, [x19, #320]
  449118:	b	4490c0 <ferror@plt+0x46390>
  44911c:	ldr	x2, [x22, #8]
  449120:	mov	w1, w20
  449124:	mov	x0, x19
  449128:	bl	4497d4 <ferror@plt+0x46aa4>
  44912c:	ldp	x21, x22, [sp, #32]
  449130:	ldp	x23, x24, [sp, #48]
  449134:	ldp	x25, x26, [sp, #64]
  449138:	b	449694 <ferror@plt+0x46964>
  44913c:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  449140:	add	x21, x21, #0xf98
  449144:	add	x24, x21, #0x8
  449148:	mov	x25, #0xff                  	// #255
  44914c:	b	449170 <ferror@plt+0x46440>
  449150:	ldr	x0, [x19, #256]
  449154:	add	x1, x0, #0x1
  449158:	str	x1, [x19, #256]
  44915c:	strb	w23, [x19, x0]
  449160:	strb	w23, [x19, #264]
  449164:	add	x21, x21, #0x1
  449168:	cmp	x21, x24
  44916c:	b.eq	4491ac <ferror@plt+0x4647c>  // b.none
  449170:	ldrb	w23, [x21]
  449174:	ldr	x0, [x19, #256]
  449178:	cmp	x0, #0xff
  44917c:	b.ne	449150 <ferror@plt+0x46420>  // b.any
  449180:	strb	wzr, [x19, #255]
  449184:	ldr	x3, [x19, #272]
  449188:	ldr	x2, [x19, #280]
  44918c:	mov	x1, x25
  449190:	mov	x0, x19
  449194:	blr	x3
  449198:	str	xzr, [x19, #256]
  44919c:	ldr	x0, [x19, #320]
  4491a0:	add	x0, x0, #0x1
  4491a4:	str	x0, [x19, #320]
  4491a8:	b	449150 <ferror@plt+0x46420>
  4491ac:	ldr	w0, [x19, #312]
  4491b0:	add	w0, w0, #0x1
  4491b4:	str	w0, [x19, #312]
  4491b8:	ldr	x2, [x22, #8]
  4491bc:	mov	w1, w20
  4491c0:	mov	x0, x19
  4491c4:	bl	4497d4 <ferror@plt+0x46aa4>
  4491c8:	ldr	w0, [x19, #312]
  4491cc:	sub	w0, w0, #0x1
  4491d0:	str	w0, [x19, #312]
  4491d4:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4491d8:	add	x20, x20, #0xfa8
  4491dc:	add	x23, x20, #0x2
  4491e0:	mov	x24, #0xff                  	// #255
  4491e4:	b	449208 <ferror@plt+0x464d8>
  4491e8:	ldr	x0, [x19, #256]
  4491ec:	add	x1, x0, #0x1
  4491f0:	str	x1, [x19, #256]
  4491f4:	strb	w21, [x19, x0]
  4491f8:	strb	w21, [x19, #264]
  4491fc:	add	x20, x20, #0x1
  449200:	cmp	x20, x23
  449204:	b.eq	449244 <ferror@plt+0x46514>  // b.none
  449208:	ldrb	w21, [x20]
  44920c:	ldr	x0, [x19, #256]
  449210:	cmp	x0, #0xff
  449214:	b.ne	4491e8 <ferror@plt+0x464b8>  // b.any
  449218:	strb	wzr, [x19, #255]
  44921c:	ldr	x3, [x19, #272]
  449220:	ldr	x2, [x19, #280]
  449224:	mov	x1, x24
  449228:	mov	x0, x19
  44922c:	blr	x3
  449230:	str	xzr, [x19, #256]
  449234:	ldr	x0, [x19, #320]
  449238:	add	x0, x0, #0x1
  44923c:	str	x0, [x19, #320]
  449240:	b	4491e8 <ferror@plt+0x464b8>
  449244:	ldr	w2, [x22, #16]
  449248:	add	w2, w2, #0x1
  44924c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  449250:	add	x1, x1, #0xd08
  449254:	add	x0, sp, #0x70
  449258:	bl	402720 <sprintf@plt>
  44925c:	add	x0, sp, #0x70
  449260:	bl	402680 <strlen@plt>
  449264:	cbz	x0, 4492d4 <ferror@plt+0x465a4>
  449268:	add	x20, sp, #0x70
  44926c:	add	x22, x0, x20
  449270:	mov	x23, #0xff                  	// #255
  449274:	b	449298 <ferror@plt+0x46568>
  449278:	ldr	x0, [x19, #256]
  44927c:	add	x1, x0, #0x1
  449280:	str	x1, [x19, #256]
  449284:	strb	w21, [x19, x0]
  449288:	strb	w21, [x19, #264]
  44928c:	add	x20, x20, #0x1
  449290:	cmp	x20, x22
  449294:	b.eq	4492d4 <ferror@plt+0x465a4>  // b.none
  449298:	ldrb	w21, [x20]
  44929c:	ldr	x0, [x19, #256]
  4492a0:	cmp	x0, #0xff
  4492a4:	b.ne	449278 <ferror@plt+0x46548>  // b.any
  4492a8:	strb	wzr, [x19, #255]
  4492ac:	ldr	x3, [x19, #272]
  4492b0:	ldr	x2, [x19, #280]
  4492b4:	mov	x1, x23
  4492b8:	mov	x0, x19
  4492bc:	blr	x3
  4492c0:	str	xzr, [x19, #256]
  4492c4:	ldr	x0, [x19, #320]
  4492c8:	add	x0, x0, #0x1
  4492cc:	str	x0, [x19, #320]
  4492d0:	b	449278 <ferror@plt+0x46548>
  4492d4:	ldr	x0, [x19, #256]
  4492d8:	cmp	x0, #0xff
  4492dc:	b.eq	449308 <ferror@plt+0x465d8>  // b.none
  4492e0:	ldr	x1, [x19, #256]
  4492e4:	add	x0, x1, #0x1
  4492e8:	str	x0, [x19, #256]
  4492ec:	mov	w0, #0x7d                  	// #125
  4492f0:	strb	w0, [x19, x1]
  4492f4:	strb	w0, [x19, #264]
  4492f8:	ldp	x21, x22, [sp, #32]
  4492fc:	ldp	x23, x24, [sp, #48]
  449300:	ldp	x25, x26, [sp, #64]
  449304:	b	449694 <ferror@plt+0x46964>
  449308:	strb	wzr, [x19, #255]
  44930c:	ldr	x3, [x19, #272]
  449310:	ldr	x2, [x19, #280]
  449314:	mov	x1, #0xff                  	// #255
  449318:	mov	x0, x19
  44931c:	blr	x3
  449320:	str	xzr, [x19, #256]
  449324:	ldr	x0, [x19, #320]
  449328:	add	x0, x0, #0x1
  44932c:	str	x0, [x19, #320]
  449330:	b	4492e0 <ferror@plt+0x465b0>
  449334:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  449338:	add	x20, x20, #0xfb0
  44933c:	add	x23, x20, #0xe
  449340:	mov	x24, #0xff                  	// #255
  449344:	b	449368 <ferror@plt+0x46638>
  449348:	ldr	x0, [x19, #256]
  44934c:	add	x1, x0, #0x1
  449350:	str	x1, [x19, #256]
  449354:	strb	w21, [x19, x0]
  449358:	strb	w21, [x19, #264]
  44935c:	add	x20, x20, #0x1
  449360:	cmp	x20, x23
  449364:	b.eq	4493a4 <ferror@plt+0x46674>  // b.none
  449368:	ldrb	w21, [x20]
  44936c:	ldr	x0, [x19, #256]
  449370:	cmp	x0, #0xff
  449374:	b.ne	449348 <ferror@plt+0x46618>  // b.any
  449378:	strb	wzr, [x19, #255]
  44937c:	ldr	x3, [x19, #272]
  449380:	ldr	x2, [x19, #280]
  449384:	mov	x1, x24
  449388:	mov	x0, x19
  44938c:	blr	x3
  449390:	str	xzr, [x19, #256]
  449394:	ldr	x0, [x19, #320]
  449398:	add	x0, x0, #0x1
  44939c:	str	x0, [x19, #320]
  4493a0:	b	449348 <ferror@plt+0x46618>
  4493a4:	ldr	x2, [x22, #8]
  4493a8:	add	w2, w2, #0x1
  4493ac:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4493b0:	add	x1, x1, #0xd08
  4493b4:	add	x0, sp, #0x70
  4493b8:	bl	402720 <sprintf@plt>
  4493bc:	add	x0, sp, #0x70
  4493c0:	bl	402680 <strlen@plt>
  4493c4:	cbz	x0, 449434 <ferror@plt+0x46704>
  4493c8:	add	x20, sp, #0x70
  4493cc:	add	x22, x0, x20
  4493d0:	mov	x23, #0xff                  	// #255
  4493d4:	b	4493f8 <ferror@plt+0x466c8>
  4493d8:	ldr	x0, [x19, #256]
  4493dc:	add	x1, x0, #0x1
  4493e0:	str	x1, [x19, #256]
  4493e4:	strb	w21, [x19, x0]
  4493e8:	strb	w21, [x19, #264]
  4493ec:	add	x20, x20, #0x1
  4493f0:	cmp	x20, x22
  4493f4:	b.eq	449434 <ferror@plt+0x46704>  // b.none
  4493f8:	ldrb	w21, [x20]
  4493fc:	ldr	x0, [x19, #256]
  449400:	cmp	x0, #0xff
  449404:	b.ne	4493d8 <ferror@plt+0x466a8>  // b.any
  449408:	strb	wzr, [x19, #255]
  44940c:	ldr	x3, [x19, #272]
  449410:	ldr	x2, [x19, #280]
  449414:	mov	x1, x23
  449418:	mov	x0, x19
  44941c:	blr	x3
  449420:	str	xzr, [x19, #256]
  449424:	ldr	x0, [x19, #320]
  449428:	add	x0, x0, #0x1
  44942c:	str	x0, [x19, #320]
  449430:	b	4493d8 <ferror@plt+0x466a8>
  449434:	ldr	x0, [x19, #256]
  449438:	cmp	x0, #0xff
  44943c:	b.eq	449468 <ferror@plt+0x46738>  // b.none
  449440:	ldr	x1, [x19, #256]
  449444:	add	x0, x1, #0x1
  449448:	str	x0, [x19, #256]
  44944c:	mov	w0, #0x7d                  	// #125
  449450:	strb	w0, [x19, x1]
  449454:	strb	w0, [x19, #264]
  449458:	ldp	x21, x22, [sp, #32]
  44945c:	ldp	x23, x24, [sp, #48]
  449460:	ldp	x25, x26, [sp, #64]
  449464:	b	449694 <ferror@plt+0x46964>
  449468:	strb	wzr, [x19, #255]
  44946c:	ldr	x3, [x19, #272]
  449470:	ldr	x2, [x19, #280]
  449474:	mov	x1, #0xff                  	// #255
  449478:	mov	x0, x19
  44947c:	blr	x3
  449480:	str	xzr, [x19, #256]
  449484:	ldr	x0, [x19, #320]
  449488:	add	x0, x0, #0x1
  44948c:	str	x0, [x19, #320]
  449490:	b	449440 <ferror@plt+0x46710>
  449494:	ldr	x2, [x22, #8]
  449498:	mov	w1, w20
  44949c:	mov	x0, x19
  4494a0:	bl	4497d4 <ferror@plt+0x46aa4>
  4494a4:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4494a8:	add	x21, x21, #0xfc0
  4494ac:	add	x24, x21, #0x8
  4494b0:	mov	x25, #0xff                  	// #255
  4494b4:	b	4494d8 <ferror@plt+0x467a8>
  4494b8:	ldr	x0, [x19, #256]
  4494bc:	add	x1, x0, #0x1
  4494c0:	str	x1, [x19, #256]
  4494c4:	strb	w23, [x19, x0]
  4494c8:	strb	w23, [x19, #264]
  4494cc:	add	x21, x21, #0x1
  4494d0:	cmp	x21, x24
  4494d4:	b.eq	449514 <ferror@plt+0x467e4>  // b.none
  4494d8:	ldrb	w23, [x21]
  4494dc:	ldr	x0, [x19, #256]
  4494e0:	cmp	x0, #0xff
  4494e4:	b.ne	4494b8 <ferror@plt+0x46788>  // b.any
  4494e8:	strb	wzr, [x19, #255]
  4494ec:	ldr	x3, [x19, #272]
  4494f0:	ldr	x2, [x19, #280]
  4494f4:	mov	x1, x25
  4494f8:	mov	x0, x19
  4494fc:	blr	x3
  449500:	str	xzr, [x19, #256]
  449504:	ldr	x0, [x19, #320]
  449508:	add	x0, x0, #0x1
  44950c:	str	x0, [x19, #320]
  449510:	b	4494b8 <ferror@plt+0x46788>
  449514:	ldr	x2, [x22, #16]
  449518:	mov	w1, w20
  44951c:	mov	x0, x19
  449520:	bl	4497d4 <ferror@plt+0x46aa4>
  449524:	ldr	x0, [x19, #256]
  449528:	cmp	x0, #0xff
  44952c:	b.eq	449558 <ferror@plt+0x46828>  // b.none
  449530:	ldr	x1, [x19, #256]
  449534:	add	x0, x1, #0x1
  449538:	str	x0, [x19, #256]
  44953c:	mov	w0, #0x5d                  	// #93
  449540:	strb	w0, [x19, x1]
  449544:	strb	w0, [x19, #264]
  449548:	ldp	x21, x22, [sp, #32]
  44954c:	ldp	x23, x24, [sp, #48]
  449550:	ldp	x25, x26, [sp, #64]
  449554:	b	449694 <ferror@plt+0x46964>
  449558:	strb	wzr, [x19, #255]
  44955c:	ldr	x3, [x19, #272]
  449560:	ldr	x2, [x19, #280]
  449564:	mov	x1, #0xff                  	// #255
  449568:	mov	x0, x19
  44956c:	blr	x3
  449570:	str	xzr, [x19, #256]
  449574:	ldr	x0, [x19, #320]
  449578:	add	x0, x0, #0x1
  44957c:	str	x0, [x19, #320]
  449580:	b	449530 <ferror@plt+0x46800>
  449584:	ldp	x23, x24, [sp, #48]
  449588:	ldp	x25, x26, [sp, #64]
  44958c:	mov	w0, #0x1                   	// #1
  449590:	str	w0, [x19, #304]
  449594:	ldp	x21, x22, [sp, #32]
  449598:	b	449694 <ferror@plt+0x46964>
  44959c:	mov	w0, #0x1                   	// #1
  4495a0:	str	w0, [x19, #304]
  4495a4:	ldp	x21, x22, [sp, #32]
  4495a8:	ldp	x23, x24, [sp, #48]
  4495ac:	ldp	x25, x26, [sp, #64]
  4495b0:	ldp	x27, x28, [sp, #80]
  4495b4:	b	449694 <ferror@plt+0x46964>
  4495b8:	cmp	w28, #0x2
  4495bc:	b.eq	445b74 <ferror@plt+0x42e44>  // b.none
  4495c0:	ldr	w0, [x21]
  4495c4:	cmp	w0, #0x4
  4495c8:	b.eq	445c34 <ferror@plt+0x42f04>  // b.none
  4495cc:	ldr	x2, [x22, #16]
  4495d0:	mov	w1, w20
  4495d4:	mov	x0, x19
  4495d8:	bl	4497d4 <ferror@plt+0x46aa4>
  4495dc:	ldr	w0, [x21]
  4495e0:	cmp	w0, #0x4
  4495e4:	b.eq	445c48 <ferror@plt+0x42f18>  // b.none
  4495e8:	cbz	w23, 445ccc <ferror@plt+0x42f9c>
  4495ec:	sub	w21, w23, #0x1
  4495f0:	add	x0, sp, #0x70
  4495f4:	add	x21, x0, x21, lsl #5
  4495f8:	mov	w22, #0x20                  	// #32
  4495fc:	mov	x23, #0xff                  	// #255
  449600:	b	445c88 <ferror@plt+0x42f58>
  449604:	mov	w21, w2
  449608:	b	449610 <ferror@plt+0x468e0>
  44960c:	mov	x22, x0
  449610:	ldr	x0, [x19, #296]
  449614:	str	x0, [sp, #112]
  449618:	add	x0, sp, #0x70
  44961c:	str	x0, [x19, #296]
  449620:	str	x22, [sp, #120]
  449624:	str	wzr, [sp, #128]
  449628:	ldr	x0, [x19, #288]
  44962c:	str	x0, [sp, #136]
  449630:	ldr	x2, [x22, #8]
  449634:	b	446ea4 <ferror@plt+0x44174>
  449638:	mov	x22, x0
  44963c:	b	449610 <ferror@plt+0x468e0>
  449640:	ldr	x3, [x19, #328]
  449644:	mov	x1, x3
  449648:	cbz	x3, 44966c <ferror@plt+0x4693c>
  44964c:	ldr	x2, [x1]
  449650:	cmp	x2, x0
  449654:	b.eq	446df0 <ferror@plt+0x440c0>  // b.none
  449658:	cmp	x3, x1
  44965c:	ccmp	x2, x22, #0x0, ne  // ne = any
  449660:	b.eq	446df0 <ferror@plt+0x440c0>  // b.none
  449664:	ldr	x1, [x1, #8]
  449668:	cbnz	x1, 44964c <ferror@plt+0x4691c>
  44966c:	ldr	x23, [x19, #288]
  449670:	ldr	x1, [x4, #8]
  449674:	str	x1, [x19, #288]
  449678:	mov	x1, x0
  44967c:	mov	x0, x19
  449680:	bl	4452c0 <ferror@plt+0x42590>
  449684:	cbz	x0, 446e20 <ferror@plt+0x440f0>
  449688:	mov	w21, #0x1                   	// #1
  44968c:	b	446e04 <ferror@plt+0x440d4>
  449690:	ldp	x21, x22, [sp, #32]
  449694:	ldp	x19, x20, [sp, #16]
  449698:	ldp	x29, x30, [sp], #240
  44969c:	ret
  4496a0:	ldp	x21, x22, [sp, #32]
  4496a4:	ldp	x23, x24, [sp, #48]
  4496a8:	ldp	x25, x26, [sp, #64]
  4496ac:	b	449694 <ferror@plt+0x46964>
  4496b0:	ldp	x21, x22, [sp, #32]
  4496b4:	ldp	x23, x24, [sp, #48]
  4496b8:	ldp	x25, x26, [sp, #64]
  4496bc:	b	449694 <ferror@plt+0x46964>
  4496c0:	ldp	x21, x22, [sp, #32]
  4496c4:	ldp	x23, x24, [sp, #48]
  4496c8:	ldp	x25, x26, [sp, #64]
  4496cc:	b	449694 <ferror@plt+0x46964>
  4496d0:	ldp	x21, x22, [sp, #32]
  4496d4:	ldp	x23, x24, [sp, #48]
  4496d8:	ldp	x25, x26, [sp, #64]
  4496dc:	b	449694 <ferror@plt+0x46964>
  4496e0:	ldp	x21, x22, [sp, #32]
  4496e4:	ldp	x23, x24, [sp, #48]
  4496e8:	ldp	x25, x26, [sp, #64]
  4496ec:	b	449694 <ferror@plt+0x46964>
  4496f0:	ldp	x21, x22, [sp, #32]
  4496f4:	ldp	x23, x24, [sp, #48]
  4496f8:	ldp	x25, x26, [sp, #64]
  4496fc:	b	449694 <ferror@plt+0x46964>
  449700:	ldp	x21, x22, [sp, #32]
  449704:	ldp	x23, x24, [sp, #48]
  449708:	ldp	x25, x26, [sp, #64]
  44970c:	b	449694 <ferror@plt+0x46964>
  449710:	ldp	x21, x22, [sp, #32]
  449714:	ldp	x23, x24, [sp, #48]
  449718:	ldp	x25, x26, [sp, #64]
  44971c:	b	449694 <ferror@plt+0x46964>
  449720:	ldp	x21, x22, [sp, #32]
  449724:	ldp	x23, x24, [sp, #48]
  449728:	ldp	x25, x26, [sp, #64]
  44972c:	b	449694 <ferror@plt+0x46964>
  449730:	ldp	x21, x22, [sp, #32]
  449734:	ldp	x23, x24, [sp, #48]
  449738:	ldp	x25, x26, [sp, #64]
  44973c:	b	449694 <ferror@plt+0x46964>
  449740:	ldp	x21, x22, [sp, #32]
  449744:	ldp	x23, x24, [sp, #48]
  449748:	ldp	x25, x26, [sp, #64]
  44974c:	b	449694 <ferror@plt+0x46964>
  449750:	ldp	x21, x22, [sp, #32]
  449754:	ldp	x23, x24, [sp, #48]
  449758:	ldp	x25, x26, [sp, #64]
  44975c:	b	449694 <ferror@plt+0x46964>
  449760:	ldp	x21, x22, [sp, #32]
  449764:	ldp	x23, x24, [sp, #48]
  449768:	ldp	x25, x26, [sp, #64]
  44976c:	b	449694 <ferror@plt+0x46964>
  449770:	ldp	x21, x22, [sp, #32]
  449774:	ldp	x23, x24, [sp, #48]
  449778:	ldp	x25, x26, [sp, #64]
  44977c:	b	449694 <ferror@plt+0x46964>
  449780:	ldp	x21, x22, [sp, #32]
  449784:	ldp	x23, x24, [sp, #48]
  449788:	ldp	x25, x26, [sp, #64]
  44978c:	b	449694 <ferror@plt+0x46964>
  449790:	ldp	x21, x22, [sp, #32]
  449794:	ldp	x23, x24, [sp, #48]
  449798:	ldp	x25, x26, [sp, #64]
  44979c:	b	449694 <ferror@plt+0x46964>
  4497a0:	ldp	x21, x22, [sp, #32]
  4497a4:	ldp	x23, x24, [sp, #48]
  4497a8:	ldp	x25, x26, [sp, #64]
  4497ac:	b	449694 <ferror@plt+0x46964>
  4497b0:	ldp	x21, x22, [sp, #32]
  4497b4:	ldp	x23, x24, [sp, #48]
  4497b8:	ldp	x25, x26, [sp, #64]
  4497bc:	b	449694 <ferror@plt+0x46964>
  4497c0:	ldp	x21, x22, [sp, #32]
  4497c4:	ldp	x23, x24, [sp, #48]
  4497c8:	ldp	x25, x26, [sp, #64]
  4497cc:	ldp	x27, x28, [sp, #80]
  4497d0:	b	449694 <ferror@plt+0x46964>
  4497d4:	stp	x29, x30, [sp, #-48]!
  4497d8:	mov	x29, sp
  4497dc:	stp	x19, x20, [sp, #16]
  4497e0:	mov	x19, x0
  4497e4:	cbz	x2, 449804 <ferror@plt+0x46ad4>
  4497e8:	mov	x20, x2
  4497ec:	ldr	w0, [x2, #4]
  4497f0:	cmp	w0, #0x1
  4497f4:	b.gt	449804 <ferror@plt+0x46ad4>
  4497f8:	ldr	w2, [x19, #308]
  4497fc:	cmp	w2, #0x400
  449800:	b.le	449818 <ferror@plt+0x46ae8>
  449804:	mov	w0, #0x1                   	// #1
  449808:	str	w0, [x19, #304]
  44980c:	ldp	x19, x20, [sp, #16]
  449810:	ldp	x29, x30, [sp], #48
  449814:	ret
  449818:	add	w0, w0, #0x1
  44981c:	str	w0, [x20, #4]
  449820:	ldr	w0, [x19, #308]
  449824:	add	w0, w0, #0x1
  449828:	str	w0, [x19, #308]
  44982c:	str	x20, [sp, #32]
  449830:	ldr	x0, [x19, #328]
  449834:	str	x0, [sp, #40]
  449838:	add	x0, sp, #0x20
  44983c:	str	x0, [x19, #328]
  449840:	mov	x2, x20
  449844:	mov	x0, x19
  449848:	bl	445500 <ferror@plt+0x427d0>
  44984c:	ldr	x0, [sp, #40]
  449850:	str	x0, [x19, #328]
  449854:	ldr	w0, [x20, #4]
  449858:	sub	w0, w0, #0x1
  44985c:	str	w0, [x20, #4]
  449860:	ldr	w0, [x19, #308]
  449864:	sub	w0, w0, #0x1
  449868:	str	w0, [x19, #308]
  44986c:	b	44980c <ferror@plt+0x46adc>
  449870:	stp	x29, x30, [sp, #-80]!
  449874:	mov	x29, sp
  449878:	stp	x19, x20, [sp, #16]
  44987c:	stp	x21, x22, [sp, #32]
  449880:	mov	x19, x0
  449884:	mov	w22, w1
  449888:	mov	x20, x2
  44988c:	ldr	w0, [x2]
  449890:	sub	w0, w0, #0x3
  449894:	cmp	w0, #0x4d
  449898:	b.hi	44a208 <ferror@plt+0x474d8>  // b.pmore
  44989c:	stp	x23, x24, [sp, #48]
  4498a0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  4498a4:	add	x1, x1, #0xf44
  4498a8:	ldrh	w0, [x1, w0, uxtw #1]
  4498ac:	adr	x1, 4498b8 <ferror@plt+0x46b88>
  4498b0:	add	x0, x1, w0, sxth #2
  4498b4:	br	x0
  4498b8:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4498bc:	add	x20, x20, #0xfd8
  4498c0:	add	x22, x20, #0x9
  4498c4:	mov	x23, #0xff                  	// #255
  4498c8:	b	4498ec <ferror@plt+0x46bbc>
  4498cc:	ldr	x0, [x19, #256]
  4498d0:	add	x1, x0, #0x1
  4498d4:	str	x1, [x19, #256]
  4498d8:	strb	w21, [x19, x0]
  4498dc:	strb	w21, [x19, #264]
  4498e0:	add	x20, x20, #0x1
  4498e4:	cmp	x20, x22
  4498e8:	b.eq	449928 <ferror@plt+0x46bf8>  // b.none
  4498ec:	ldrb	w21, [x20]
  4498f0:	ldr	x0, [x19, #256]
  4498f4:	cmp	x0, #0xff
  4498f8:	b.ne	4498cc <ferror@plt+0x46b9c>  // b.any
  4498fc:	strb	wzr, [x19, #255]
  449900:	ldr	x3, [x19, #272]
  449904:	ldr	x2, [x19, #280]
  449908:	mov	x1, x23
  44990c:	mov	x0, x19
  449910:	blr	x3
  449914:	str	xzr, [x19, #256]
  449918:	ldr	x0, [x19, #320]
  44991c:	add	x0, x0, #0x1
  449920:	str	x0, [x19, #320]
  449924:	b	4498cc <ferror@plt+0x46b9c>
  449928:	ldp	x23, x24, [sp, #48]
  44992c:	b	449e08 <ferror@plt+0x470d8>
  449930:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  449934:	add	x20, x20, #0xfe8
  449938:	add	x22, x20, #0x9
  44993c:	mov	x23, #0xff                  	// #255
  449940:	b	449964 <ferror@plt+0x46c34>
  449944:	ldr	x0, [x19, #256]
  449948:	add	x1, x0, #0x1
  44994c:	str	x1, [x19, #256]
  449950:	strb	w21, [x19, x0]
  449954:	strb	w21, [x19, #264]
  449958:	add	x20, x20, #0x1
  44995c:	cmp	x22, x20
  449960:	b.eq	4499a0 <ferror@plt+0x46c70>  // b.none
  449964:	ldrb	w21, [x20]
  449968:	ldr	x0, [x19, #256]
  44996c:	cmp	x0, #0xff
  449970:	b.ne	449944 <ferror@plt+0x46c14>  // b.any
  449974:	strb	wzr, [x19, #255]
  449978:	ldr	x3, [x19, #272]
  44997c:	ldr	x2, [x19, #280]
  449980:	mov	x1, x23
  449984:	mov	x0, x19
  449988:	blr	x3
  44998c:	str	xzr, [x19, #256]
  449990:	ldr	x0, [x19, #320]
  449994:	add	x0, x0, #0x1
  449998:	str	x0, [x19, #320]
  44999c:	b	449944 <ferror@plt+0x46c14>
  4499a0:	ldp	x23, x24, [sp, #48]
  4499a4:	b	449e08 <ferror@plt+0x470d8>
  4499a8:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4499ac:	add	x20, x20, #0xff8
  4499b0:	add	x22, x20, #0x6
  4499b4:	mov	x23, #0xff                  	// #255
  4499b8:	b	4499dc <ferror@plt+0x46cac>
  4499bc:	ldr	x0, [x19, #256]
  4499c0:	add	x1, x0, #0x1
  4499c4:	str	x1, [x19, #256]
  4499c8:	strb	w21, [x19, x0]
  4499cc:	strb	w21, [x19, #264]
  4499d0:	add	x20, x20, #0x1
  4499d4:	cmp	x20, x22
  4499d8:	b.eq	449a18 <ferror@plt+0x46ce8>  // b.none
  4499dc:	ldrb	w21, [x20]
  4499e0:	ldr	x0, [x19, #256]
  4499e4:	cmp	x0, #0xff
  4499e8:	b.ne	4499bc <ferror@plt+0x46c8c>  // b.any
  4499ec:	strb	wzr, [x19, #255]
  4499f0:	ldr	x3, [x19, #272]
  4499f4:	ldr	x2, [x19, #280]
  4499f8:	mov	x1, x23
  4499fc:	mov	x0, x19
  449a00:	blr	x3
  449a04:	str	xzr, [x19, #256]
  449a08:	ldr	x0, [x19, #320]
  449a0c:	add	x0, x0, #0x1
  449a10:	str	x0, [x19, #320]
  449a14:	b	4499bc <ferror@plt+0x46c8c>
  449a18:	ldp	x23, x24, [sp, #48]
  449a1c:	b	449e08 <ferror@plt+0x470d8>
  449a20:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  449a24:	add	x20, x20, #0x0
  449a28:	add	x22, x20, #0x11
  449a2c:	mov	x23, #0xff                  	// #255
  449a30:	b	449a54 <ferror@plt+0x46d24>
  449a34:	ldr	x0, [x19, #256]
  449a38:	add	x1, x0, #0x1
  449a3c:	str	x1, [x19, #256]
  449a40:	strb	w21, [x19, x0]
  449a44:	strb	w21, [x19, #264]
  449a48:	add	x20, x20, #0x1
  449a4c:	cmp	x20, x22
  449a50:	b.eq	449a90 <ferror@plt+0x46d60>  // b.none
  449a54:	ldrb	w21, [x20]
  449a58:	ldr	x0, [x19, #256]
  449a5c:	cmp	x0, #0xff
  449a60:	b.ne	449a34 <ferror@plt+0x46d04>  // b.any
  449a64:	strb	wzr, [x19, #255]
  449a68:	ldr	x3, [x19, #272]
  449a6c:	ldr	x2, [x19, #280]
  449a70:	mov	x1, x23
  449a74:	mov	x0, x19
  449a78:	blr	x3
  449a7c:	str	xzr, [x19, #256]
  449a80:	ldr	x0, [x19, #320]
  449a84:	add	x0, x0, #0x1
  449a88:	str	x0, [x19, #320]
  449a8c:	b	449a34 <ferror@plt+0x46d04>
  449a90:	ldp	x23, x24, [sp, #48]
  449a94:	b	449e08 <ferror@plt+0x470d8>
  449a98:	str	x25, [sp, #64]
  449a9c:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x29c60>
  449aa0:	add	x21, x21, #0x18
  449aa4:	add	x24, x21, #0x9
  449aa8:	mov	x25, #0xff                  	// #255
  449aac:	b	449ad0 <ferror@plt+0x46da0>
  449ab0:	ldr	x0, [x19, #256]
  449ab4:	add	x1, x0, #0x1
  449ab8:	str	x1, [x19, #256]
  449abc:	strb	w23, [x19, x0]
  449ac0:	strb	w23, [x19, #264]
  449ac4:	add	x21, x21, #0x1
  449ac8:	cmp	x21, x24
  449acc:	b.eq	449b0c <ferror@plt+0x46ddc>  // b.none
  449ad0:	ldrb	w23, [x21]
  449ad4:	ldr	x0, [x19, #256]
  449ad8:	cmp	x0, #0xff
  449adc:	b.ne	449ab0 <ferror@plt+0x46d80>  // b.any
  449ae0:	strb	wzr, [x19, #255]
  449ae4:	ldr	x3, [x19, #272]
  449ae8:	ldr	x2, [x19, #280]
  449aec:	mov	x1, x25
  449af0:	mov	x0, x19
  449af4:	blr	x3
  449af8:	str	xzr, [x19, #256]
  449afc:	ldr	x0, [x19, #320]
  449b00:	add	x0, x0, #0x1
  449b04:	str	x0, [x19, #320]
  449b08:	b	449ab0 <ferror@plt+0x46d80>
  449b0c:	ldr	x0, [x20, #16]
  449b10:	cbz	x0, 44a21c <ferror@plt+0x474ec>
  449b14:	cmp	x1, #0xff
  449b18:	b.eq	449b74 <ferror@plt+0x46e44>  // b.none
  449b1c:	ldr	x1, [x19, #256]
  449b20:	add	x0, x1, #0x1
  449b24:	str	x0, [x19, #256]
  449b28:	mov	w0, #0x28                  	// #40
  449b2c:	strb	w0, [x19, x1]
  449b30:	strb	w0, [x19, #264]
  449b34:	ldr	x2, [x20, #16]
  449b38:	mov	w1, w22
  449b3c:	mov	x0, x19
  449b40:	bl	4497d4 <ferror@plt+0x46aa4>
  449b44:	ldr	x0, [x19, #256]
  449b48:	cmp	x0, #0xff
  449b4c:	b.eq	449b9c <ferror@plt+0x46e6c>  // b.none
  449b50:	ldr	x1, [x19, #256]
  449b54:	add	x0, x1, #0x1
  449b58:	str	x0, [x19, #256]
  449b5c:	mov	w0, #0x29                  	// #41
  449b60:	strb	w0, [x19, x1]
  449b64:	strb	w0, [x19, #264]
  449b68:	ldp	x23, x24, [sp, #48]
  449b6c:	ldr	x25, [sp, #64]
  449b70:	b	449e08 <ferror@plt+0x470d8>
  449b74:	strb	wzr, [x19, #255]
  449b78:	ldr	x3, [x19, #272]
  449b7c:	ldr	x2, [x19, #280]
  449b80:	mov	x0, x19
  449b84:	blr	x3
  449b88:	str	xzr, [x19, #256]
  449b8c:	ldr	x0, [x19, #320]
  449b90:	add	x0, x0, #0x1
  449b94:	str	x0, [x19, #320]
  449b98:	b	449b1c <ferror@plt+0x46dec>
  449b9c:	strb	wzr, [x19, #255]
  449ba0:	ldr	x3, [x19, #272]
  449ba4:	ldr	x2, [x19, #280]
  449ba8:	mov	x1, #0xff                  	// #255
  449bac:	mov	x0, x19
  449bb0:	blr	x3
  449bb4:	str	xzr, [x19, #256]
  449bb8:	ldr	x0, [x19, #320]
  449bbc:	add	x0, x0, #0x1
  449bc0:	str	x0, [x19, #320]
  449bc4:	b	449b50 <ferror@plt+0x46e20>
  449bc8:	str	x25, [sp, #64]
  449bcc:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x29c60>
  449bd0:	add	x21, x21, #0x28
  449bd4:	add	x24, x21, #0x6
  449bd8:	mov	x25, #0xff                  	// #255
  449bdc:	b	449c00 <ferror@plt+0x46ed0>
  449be0:	ldr	x0, [x19, #256]
  449be4:	add	x1, x0, #0x1
  449be8:	str	x1, [x19, #256]
  449bec:	strb	w23, [x19, x0]
  449bf0:	strb	w23, [x19, #264]
  449bf4:	add	x21, x21, #0x1
  449bf8:	cmp	x21, x24
  449bfc:	b.eq	449c3c <ferror@plt+0x46f0c>  // b.none
  449c00:	ldrb	w23, [x21]
  449c04:	ldr	x0, [x19, #256]
  449c08:	cmp	x0, #0xff
  449c0c:	b.ne	449be0 <ferror@plt+0x46eb0>  // b.any
  449c10:	strb	wzr, [x19, #255]
  449c14:	ldr	x3, [x19, #272]
  449c18:	ldr	x2, [x19, #280]
  449c1c:	mov	x1, x25
  449c20:	mov	x0, x19
  449c24:	blr	x3
  449c28:	str	xzr, [x19, #256]
  449c2c:	ldr	x0, [x19, #320]
  449c30:	add	x0, x0, #0x1
  449c34:	str	x0, [x19, #320]
  449c38:	b	449be0 <ferror@plt+0x46eb0>
  449c3c:	ldr	x0, [x20, #16]
  449c40:	cbz	x0, 44a228 <ferror@plt+0x474f8>
  449c44:	cmp	x1, #0xff
  449c48:	b.eq	449ca4 <ferror@plt+0x46f74>  // b.none
  449c4c:	ldr	x1, [x19, #256]
  449c50:	add	x0, x1, #0x1
  449c54:	str	x0, [x19, #256]
  449c58:	mov	w0, #0x28                  	// #40
  449c5c:	strb	w0, [x19, x1]
  449c60:	strb	w0, [x19, #264]
  449c64:	ldr	x2, [x20, #16]
  449c68:	mov	w1, w22
  449c6c:	mov	x0, x19
  449c70:	bl	4497d4 <ferror@plt+0x46aa4>
  449c74:	ldr	x0, [x19, #256]
  449c78:	cmp	x0, #0xff
  449c7c:	b.eq	449ccc <ferror@plt+0x46f9c>  // b.none
  449c80:	ldr	x1, [x19, #256]
  449c84:	add	x0, x1, #0x1
  449c88:	str	x0, [x19, #256]
  449c8c:	mov	w0, #0x29                  	// #41
  449c90:	strb	w0, [x19, x1]
  449c94:	strb	w0, [x19, #264]
  449c98:	ldp	x23, x24, [sp, #48]
  449c9c:	ldr	x25, [sp, #64]
  449ca0:	b	449e08 <ferror@plt+0x470d8>
  449ca4:	strb	wzr, [x19, #255]
  449ca8:	ldr	x3, [x19, #272]
  449cac:	ldr	x2, [x19, #280]
  449cb0:	mov	x0, x19
  449cb4:	blr	x3
  449cb8:	str	xzr, [x19, #256]
  449cbc:	ldr	x0, [x19, #320]
  449cc0:	add	x0, x0, #0x1
  449cc4:	str	x0, [x19, #320]
  449cc8:	b	449c4c <ferror@plt+0x46f1c>
  449ccc:	strb	wzr, [x19, #255]
  449cd0:	ldr	x3, [x19, #272]
  449cd4:	ldr	x2, [x19, #280]
  449cd8:	mov	x1, #0xff                  	// #255
  449cdc:	mov	x0, x19
  449ce0:	blr	x3
  449ce4:	str	xzr, [x19, #256]
  449ce8:	ldr	x0, [x19, #320]
  449cec:	add	x0, x0, #0x1
  449cf0:	str	x0, [x19, #320]
  449cf4:	b	449c80 <ferror@plt+0x46f50>
  449cf8:	ldr	x0, [x19, #256]
  449cfc:	cmp	x0, #0xff
  449d00:	b.eq	449d34 <ferror@plt+0x47004>  // b.none
  449d04:	ldr	x1, [x19, #256]
  449d08:	add	x0, x1, #0x1
  449d0c:	str	x0, [x19, #256]
  449d10:	mov	w0, #0x20                  	// #32
  449d14:	strb	w0, [x19, x1]
  449d18:	strb	w0, [x19, #264]
  449d1c:	ldr	x2, [x20, #16]
  449d20:	mov	w1, w22
  449d24:	mov	x0, x19
  449d28:	bl	4497d4 <ferror@plt+0x46aa4>
  449d2c:	ldp	x23, x24, [sp, #48]
  449d30:	b	449e08 <ferror@plt+0x470d8>
  449d34:	strb	wzr, [x19, #255]
  449d38:	ldr	x3, [x19, #272]
  449d3c:	ldr	x2, [x19, #280]
  449d40:	mov	x1, #0xff                  	// #255
  449d44:	mov	x0, x19
  449d48:	blr	x3
  449d4c:	str	xzr, [x19, #256]
  449d50:	ldr	x0, [x19, #320]
  449d54:	add	x0, x0, #0x1
  449d58:	str	x0, [x19, #320]
  449d5c:	b	449d04 <ferror@plt+0x46fd4>
  449d60:	tbnz	w22, #2, 44a234 <ferror@plt+0x47504>
  449d64:	ldr	x0, [x19, #256]
  449d68:	cmp	x0, #0xff
  449d6c:	b.eq	449d90 <ferror@plt+0x47060>  // b.none
  449d70:	ldr	x1, [x19, #256]
  449d74:	add	x0, x1, #0x1
  449d78:	str	x0, [x19, #256]
  449d7c:	mov	w0, #0x2a                  	// #42
  449d80:	strb	w0, [x19, x1]
  449d84:	strb	w0, [x19, #264]
  449d88:	ldp	x23, x24, [sp, #48]
  449d8c:	b	449e08 <ferror@plt+0x470d8>
  449d90:	strb	wzr, [x19, #255]
  449d94:	ldr	x3, [x19, #272]
  449d98:	ldr	x2, [x19, #280]
  449d9c:	mov	x1, #0xff                  	// #255
  449da0:	mov	x0, x19
  449da4:	blr	x3
  449da8:	str	xzr, [x19, #256]
  449dac:	ldr	x0, [x19, #320]
  449db0:	add	x0, x0, #0x1
  449db4:	str	x0, [x19, #320]
  449db8:	b	449d70 <ferror@plt+0x47040>
  449dbc:	ldr	x0, [x19, #256]
  449dc0:	cmp	x0, #0xff
  449dc4:	b.eq	449e18 <ferror@plt+0x470e8>  // b.none
  449dc8:	ldr	x1, [x19, #256]
  449dcc:	add	x0, x1, #0x1
  449dd0:	str	x0, [x19, #256]
  449dd4:	mov	w0, #0x20                  	// #32
  449dd8:	strb	w0, [x19, x1]
  449ddc:	strb	w0, [x19, #264]
  449de0:	ldr	x0, [x19, #256]
  449de4:	cmp	x0, #0xff
  449de8:	b.eq	449e44 <ferror@plt+0x47114>  // b.none
  449dec:	ldr	x1, [x19, #256]
  449df0:	add	x0, x1, #0x1
  449df4:	str	x0, [x19, #256]
  449df8:	mov	w0, #0x26                  	// #38
  449dfc:	strb	w0, [x19, x1]
  449e00:	strb	w0, [x19, #264]
  449e04:	ldp	x23, x24, [sp, #48]
  449e08:	ldp	x19, x20, [sp, #16]
  449e0c:	ldp	x21, x22, [sp, #32]
  449e10:	ldp	x29, x30, [sp], #80
  449e14:	ret
  449e18:	strb	wzr, [x19, #255]
  449e1c:	ldr	x3, [x19, #272]
  449e20:	ldr	x2, [x19, #280]
  449e24:	mov	x1, #0xff                  	// #255
  449e28:	mov	x0, x19
  449e2c:	blr	x3
  449e30:	str	xzr, [x19, #256]
  449e34:	ldr	x0, [x19, #320]
  449e38:	add	x0, x0, #0x1
  449e3c:	str	x0, [x19, #320]
  449e40:	b	449dc8 <ferror@plt+0x47098>
  449e44:	strb	wzr, [x19, #255]
  449e48:	ldr	x3, [x19, #272]
  449e4c:	ldr	x2, [x19, #280]
  449e50:	mov	x1, #0xff                  	// #255
  449e54:	mov	x0, x19
  449e58:	blr	x3
  449e5c:	str	xzr, [x19, #256]
  449e60:	ldr	x0, [x19, #320]
  449e64:	add	x0, x0, #0x1
  449e68:	str	x0, [x19, #320]
  449e6c:	b	449dec <ferror@plt+0x470bc>
  449e70:	ldr	x0, [x19, #256]
  449e74:	cmp	x0, #0xff
  449e78:	b.eq	449ea8 <ferror@plt+0x47178>  // b.none
  449e7c:	ldr	x1, [x19, #256]
  449e80:	add	x0, x1, #0x1
  449e84:	str	x0, [x19, #256]
  449e88:	mov	w0, #0x20                  	// #32
  449e8c:	strb	w0, [x19, x1]
  449e90:	strb	w0, [x19, #264]
  449e94:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x24c60>
  449e98:	add	x20, x20, #0xb48
  449e9c:	add	x22, x20, #0x2
  449ea0:	mov	x23, #0xff                  	// #255
  449ea4:	b	449ef4 <ferror@plt+0x471c4>
  449ea8:	strb	wzr, [x19, #255]
  449eac:	ldr	x3, [x19, #272]
  449eb0:	ldr	x2, [x19, #280]
  449eb4:	mov	x1, #0xff                  	// #255
  449eb8:	mov	x0, x19
  449ebc:	blr	x3
  449ec0:	str	xzr, [x19, #256]
  449ec4:	ldr	x0, [x19, #320]
  449ec8:	add	x0, x0, #0x1
  449ecc:	str	x0, [x19, #320]
  449ed0:	b	449e7c <ferror@plt+0x4714c>
  449ed4:	ldr	x0, [x19, #256]
  449ed8:	add	x1, x0, #0x1
  449edc:	str	x1, [x19, #256]
  449ee0:	strb	w21, [x19, x0]
  449ee4:	strb	w21, [x19, #264]
  449ee8:	add	x20, x20, #0x1
  449eec:	cmp	x22, x20
  449ef0:	b.eq	449f30 <ferror@plt+0x47200>  // b.none
  449ef4:	ldrb	w21, [x20]
  449ef8:	ldr	x0, [x19, #256]
  449efc:	cmp	x0, #0xff
  449f00:	b.ne	449ed4 <ferror@plt+0x471a4>  // b.any
  449f04:	strb	wzr, [x19, #255]
  449f08:	ldr	x3, [x19, #272]
  449f0c:	ldr	x2, [x19, #280]
  449f10:	mov	x1, x23
  449f14:	mov	x0, x19
  449f18:	blr	x3
  449f1c:	str	xzr, [x19, #256]
  449f20:	ldr	x0, [x19, #320]
  449f24:	add	x0, x0, #0x1
  449f28:	str	x0, [x19, #320]
  449f2c:	b	449ed4 <ferror@plt+0x471a4>
  449f30:	ldp	x23, x24, [sp, #48]
  449f34:	b	449e08 <ferror@plt+0x470d8>
  449f38:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  449f3c:	add	x20, x20, #0x30
  449f40:	add	x22, x20, #0x8
  449f44:	mov	x23, #0xff                  	// #255
  449f48:	b	449f6c <ferror@plt+0x4723c>
  449f4c:	ldr	x0, [x19, #256]
  449f50:	add	x1, x0, #0x1
  449f54:	str	x1, [x19, #256]
  449f58:	strb	w21, [x19, x0]
  449f5c:	strb	w21, [x19, #264]
  449f60:	add	x20, x20, #0x1
  449f64:	cmp	x20, x22
  449f68:	b.eq	449fa8 <ferror@plt+0x47278>  // b.none
  449f6c:	ldrb	w21, [x20]
  449f70:	ldr	x0, [x19, #256]
  449f74:	cmp	x0, #0xff
  449f78:	b.ne	449f4c <ferror@plt+0x4721c>  // b.any
  449f7c:	strb	wzr, [x19, #255]
  449f80:	ldr	x3, [x19, #272]
  449f84:	ldr	x2, [x19, #280]
  449f88:	mov	x1, x23
  449f8c:	mov	x0, x19
  449f90:	blr	x3
  449f94:	str	xzr, [x19, #256]
  449f98:	ldr	x0, [x19, #320]
  449f9c:	add	x0, x0, #0x1
  449fa0:	str	x0, [x19, #320]
  449fa4:	b	449f4c <ferror@plt+0x4721c>
  449fa8:	ldp	x23, x24, [sp, #48]
  449fac:	b	449e08 <ferror@plt+0x470d8>
  449fb0:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  449fb4:	add	x20, x20, #0x40
  449fb8:	add	x22, x20, #0xa
  449fbc:	mov	x23, #0xff                  	// #255
  449fc0:	b	449fe4 <ferror@plt+0x472b4>
  449fc4:	ldr	x0, [x19, #256]
  449fc8:	add	x1, x0, #0x1
  449fcc:	str	x1, [x19, #256]
  449fd0:	strb	w21, [x19, x0]
  449fd4:	strb	w21, [x19, #264]
  449fd8:	add	x20, x20, #0x1
  449fdc:	cmp	x20, x22
  449fe0:	b.eq	44a020 <ferror@plt+0x472f0>  // b.none
  449fe4:	ldrb	w21, [x20]
  449fe8:	ldr	x0, [x19, #256]
  449fec:	cmp	x0, #0xff
  449ff0:	b.ne	449fc4 <ferror@plt+0x47294>  // b.any
  449ff4:	strb	wzr, [x19, #255]
  449ff8:	ldr	x3, [x19, #272]
  449ffc:	ldr	x2, [x19, #280]
  44a000:	mov	x1, x23
  44a004:	mov	x0, x19
  44a008:	blr	x3
  44a00c:	str	xzr, [x19, #256]
  44a010:	ldr	x0, [x19, #320]
  44a014:	add	x0, x0, #0x1
  44a018:	str	x0, [x19, #320]
  44a01c:	b	449fc4 <ferror@plt+0x47294>
  44a020:	ldp	x23, x24, [sp, #48]
  44a024:	b	449e08 <ferror@plt+0x470d8>
  44a028:	ldrb	w0, [x19, #264]
  44a02c:	cmp	w0, #0x28
  44a030:	b.eq	44a058 <ferror@plt+0x47328>  // b.none
  44a034:	ldr	x0, [x19, #256]
  44a038:	cmp	x0, #0xff
  44a03c:	b.eq	44a07c <ferror@plt+0x4734c>  // b.none
  44a040:	ldr	x1, [x19, #256]
  44a044:	add	x0, x1, #0x1
  44a048:	str	x0, [x19, #256]
  44a04c:	mov	w0, #0x20                  	// #32
  44a050:	strb	w0, [x19, x1]
  44a054:	strb	w0, [x19, #264]
  44a058:	ldr	x2, [x20, #8]
  44a05c:	mov	w1, w22
  44a060:	mov	x0, x19
  44a064:	bl	4497d4 <ferror@plt+0x46aa4>
  44a068:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44a06c:	add	x20, x20, #0x50
  44a070:	add	x22, x20, #0x3
  44a074:	mov	x23, #0xff                  	// #255
  44a078:	b	44a0c8 <ferror@plt+0x47398>
  44a07c:	strb	wzr, [x19, #255]
  44a080:	ldr	x3, [x19, #272]
  44a084:	ldr	x2, [x19, #280]
  44a088:	mov	x1, #0xff                  	// #255
  44a08c:	mov	x0, x19
  44a090:	blr	x3
  44a094:	str	xzr, [x19, #256]
  44a098:	ldr	x0, [x19, #320]
  44a09c:	add	x0, x0, #0x1
  44a0a0:	str	x0, [x19, #320]
  44a0a4:	b	44a040 <ferror@plt+0x47310>
  44a0a8:	ldr	x0, [x19, #256]
  44a0ac:	add	x1, x0, #0x1
  44a0b0:	str	x1, [x19, #256]
  44a0b4:	strb	w21, [x19, x0]
  44a0b8:	strb	w21, [x19, #264]
  44a0bc:	add	x20, x20, #0x1
  44a0c0:	cmp	x20, x22
  44a0c4:	b.eq	44a104 <ferror@plt+0x473d4>  // b.none
  44a0c8:	ldrb	w21, [x20]
  44a0cc:	ldr	x0, [x19, #256]
  44a0d0:	cmp	x0, #0xff
  44a0d4:	b.ne	44a0a8 <ferror@plt+0x47378>  // b.any
  44a0d8:	strb	wzr, [x19, #255]
  44a0dc:	ldr	x3, [x19, #272]
  44a0e0:	ldr	x2, [x19, #280]
  44a0e4:	mov	x1, x23
  44a0e8:	mov	x0, x19
  44a0ec:	blr	x3
  44a0f0:	str	xzr, [x19, #256]
  44a0f4:	ldr	x0, [x19, #320]
  44a0f8:	add	x0, x0, #0x1
  44a0fc:	str	x0, [x19, #320]
  44a100:	b	44a0a8 <ferror@plt+0x47378>
  44a104:	ldp	x23, x24, [sp, #48]
  44a108:	b	449e08 <ferror@plt+0x470d8>
  44a10c:	ldr	x2, [x2, #8]
  44a110:	mov	w1, w22
  44a114:	mov	x0, x19
  44a118:	bl	4497d4 <ferror@plt+0x46aa4>
  44a11c:	ldp	x23, x24, [sp, #48]
  44a120:	b	449e08 <ferror@plt+0x470d8>
  44a124:	str	x25, [sp, #64]
  44a128:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44a12c:	add	x21, x21, #0x58
  44a130:	add	x24, x21, #0xa
  44a134:	mov	x25, #0xff                  	// #255
  44a138:	b	44a15c <ferror@plt+0x4742c>
  44a13c:	ldr	x0, [x19, #256]
  44a140:	add	x1, x0, #0x1
  44a144:	str	x1, [x19, #256]
  44a148:	strb	w23, [x19, x0]
  44a14c:	strb	w23, [x19, #264]
  44a150:	add	x21, x21, #0x1
  44a154:	cmp	x21, x24
  44a158:	b.eq	44a198 <ferror@plt+0x47468>  // b.none
  44a15c:	ldrb	w23, [x21]
  44a160:	ldr	x0, [x19, #256]
  44a164:	cmp	x0, #0xff
  44a168:	b.ne	44a13c <ferror@plt+0x4740c>  // b.any
  44a16c:	strb	wzr, [x19, #255]
  44a170:	ldr	x3, [x19, #272]
  44a174:	ldr	x2, [x19, #280]
  44a178:	mov	x1, x25
  44a17c:	mov	x0, x19
  44a180:	blr	x3
  44a184:	str	xzr, [x19, #256]
  44a188:	ldr	x0, [x19, #320]
  44a18c:	add	x0, x0, #0x1
  44a190:	str	x0, [x19, #320]
  44a194:	b	44a13c <ferror@plt+0x4740c>
  44a198:	ldr	x2, [x20, #8]
  44a19c:	mov	w1, w22
  44a1a0:	mov	x0, x19
  44a1a4:	bl	4497d4 <ferror@plt+0x46aa4>
  44a1a8:	ldr	x0, [x19, #256]
  44a1ac:	cmp	x0, #0xff
  44a1b0:	b.eq	44a1d8 <ferror@plt+0x474a8>  // b.none
  44a1b4:	ldr	x1, [x19, #256]
  44a1b8:	add	x0, x1, #0x1
  44a1bc:	str	x0, [x19, #256]
  44a1c0:	mov	w0, #0x29                  	// #41
  44a1c4:	strb	w0, [x19, x1]
  44a1c8:	strb	w0, [x19, #264]
  44a1cc:	ldp	x23, x24, [sp, #48]
  44a1d0:	ldr	x25, [sp, #64]
  44a1d4:	b	449e08 <ferror@plt+0x470d8>
  44a1d8:	strb	wzr, [x19, #255]
  44a1dc:	ldr	x3, [x19, #272]
  44a1e0:	ldr	x2, [x19, #280]
  44a1e4:	mov	x1, #0xff                  	// #255
  44a1e8:	mov	x0, x19
  44a1ec:	blr	x3
  44a1f0:	str	xzr, [x19, #256]
  44a1f4:	ldr	x0, [x19, #320]
  44a1f8:	add	x0, x0, #0x1
  44a1fc:	str	x0, [x19, #320]
  44a200:	b	44a1b4 <ferror@plt+0x47484>
  44a204:	ldp	x23, x24, [sp, #48]
  44a208:	mov	x2, x20
  44a20c:	mov	w1, w22
  44a210:	mov	x0, x19
  44a214:	bl	4497d4 <ferror@plt+0x46aa4>
  44a218:	b	449e08 <ferror@plt+0x470d8>
  44a21c:	ldp	x23, x24, [sp, #48]
  44a220:	ldr	x25, [sp, #64]
  44a224:	b	449e08 <ferror@plt+0x470d8>
  44a228:	ldp	x23, x24, [sp, #48]
  44a22c:	ldr	x25, [sp, #64]
  44a230:	b	449e08 <ferror@plt+0x470d8>
  44a234:	ldp	x23, x24, [sp, #48]
  44a238:	b	449e08 <ferror@plt+0x470d8>
  44a23c:	stp	x29, x30, [sp, #-64]!
  44a240:	mov	x29, sp
  44a244:	stp	x19, x20, [sp, #16]
  44a248:	stp	x21, x22, [sp, #32]
  44a24c:	str	x23, [sp, #48]
  44a250:	mov	x19, x0
  44a254:	mov	w21, w1
  44a258:	mov	x22, x2
  44a25c:	mov	x20, x3
  44a260:	cbz	x3, 44a2a8 <ferror@plt+0x47578>
  44a264:	mov	x1, x3
  44a268:	mov	x3, #0x1                   	// #1
  44a26c:	mov	x2, #0xe000000             	// #234881024
  44a270:	movk	x2, #0x862, lsl #32
  44a274:	ldr	w0, [x1, #16]
  44a278:	cbnz	w0, 44a2a8 <ferror@plt+0x47578>
  44a27c:	ldr	x0, [x1, #8]
  44a280:	ldr	w0, [x0]
  44a284:	cmp	w0, #0x2b
  44a288:	b.hi	44a2a0 <ferror@plt+0x47570>  // b.pmore
  44a28c:	lsl	x0, x3, x0
  44a290:	tst	x0, x2
  44a294:	b.ne	44a2dc <ferror@plt+0x475ac>  // b.any
  44a298:	tst	x0, #0x1c00000000
  44a29c:	b.ne	44a2c8 <ferror@plt+0x47598>  // b.any
  44a2a0:	ldr	x1, [x1]
  44a2a4:	cbnz	x1, 44a274 <ferror@plt+0x47544>
  44a2a8:	ldr	x23, [x19, #296]
  44a2ac:	str	xzr, [x19, #296]
  44a2b0:	mov	w3, #0x0                   	// #0
  44a2b4:	mov	x2, x20
  44a2b8:	mov	w1, w21
  44a2bc:	mov	x0, x19
  44a2c0:	bl	44a4d4 <ferror@plt+0x477a4>
  44a2c4:	b	44a370 <ferror@plt+0x47640>
  44a2c8:	ldrb	w0, [x19, #264]
  44a2cc:	and	w0, w0, #0xfffffffd
  44a2d0:	and	w0, w0, #0xff
  44a2d4:	cmp	w0, #0x28
  44a2d8:	b.eq	44a30c <ferror@plt+0x475dc>  // b.none
  44a2dc:	ldrb	w0, [x19, #264]
  44a2e0:	cmp	w0, #0x20
  44a2e4:	b.eq	44a30c <ferror@plt+0x475dc>  // b.none
  44a2e8:	ldr	x0, [x19, #256]
  44a2ec:	cmp	x0, #0xff
  44a2f0:	b.eq	44a3f8 <ferror@plt+0x476c8>  // b.none
  44a2f4:	ldr	x1, [x19, #256]
  44a2f8:	add	x0, x1, #0x1
  44a2fc:	str	x0, [x19, #256]
  44a300:	mov	w0, #0x20                  	// #32
  44a304:	strb	w0, [x19, x1]
  44a308:	strb	w0, [x19, #264]
  44a30c:	ldr	x0, [x19, #256]
  44a310:	cmp	x0, #0xff
  44a314:	b.eq	44a424 <ferror@plt+0x476f4>  // b.none
  44a318:	ldr	x1, [x19, #256]
  44a31c:	add	x0, x1, #0x1
  44a320:	str	x0, [x19, #256]
  44a324:	mov	w0, #0x28                  	// #40
  44a328:	strb	w0, [x19, x1]
  44a32c:	strb	w0, [x19, #264]
  44a330:	ldr	x23, [x19, #296]
  44a334:	str	xzr, [x19, #296]
  44a338:	mov	w3, #0x0                   	// #0
  44a33c:	mov	x2, x20
  44a340:	mov	w1, w21
  44a344:	mov	x0, x19
  44a348:	bl	44a4d4 <ferror@plt+0x477a4>
  44a34c:	ldr	x0, [x19, #256]
  44a350:	cmp	x0, #0xff
  44a354:	b.eq	44a450 <ferror@plt+0x47720>  // b.none
  44a358:	ldr	x1, [x19, #256]
  44a35c:	add	x0, x1, #0x1
  44a360:	str	x0, [x19, #256]
  44a364:	mov	w0, #0x29                  	// #41
  44a368:	strb	w0, [x19, x1]
  44a36c:	strb	w0, [x19, #264]
  44a370:	ldr	x0, [x19, #256]
  44a374:	cmp	x0, #0xff
  44a378:	b.eq	44a47c <ferror@plt+0x4774c>  // b.none
  44a37c:	ldr	x1, [x19, #256]
  44a380:	add	x0, x1, #0x1
  44a384:	str	x0, [x19, #256]
  44a388:	mov	w0, #0x28                  	// #40
  44a38c:	strb	w0, [x19, x1]
  44a390:	strb	w0, [x19, #264]
  44a394:	ldr	x2, [x22, #16]
  44a398:	cbz	x2, 44a3a8 <ferror@plt+0x47678>
  44a39c:	mov	w1, w21
  44a3a0:	mov	x0, x19
  44a3a4:	bl	4497d4 <ferror@plt+0x46aa4>
  44a3a8:	ldr	x0, [x19, #256]
  44a3ac:	cmp	x0, #0xff
  44a3b0:	b.eq	44a4a8 <ferror@plt+0x47778>  // b.none
  44a3b4:	ldr	x1, [x19, #256]
  44a3b8:	add	x0, x1, #0x1
  44a3bc:	str	x0, [x19, #256]
  44a3c0:	mov	w0, #0x29                  	// #41
  44a3c4:	strb	w0, [x19, x1]
  44a3c8:	strb	w0, [x19, #264]
  44a3cc:	mov	w3, #0x1                   	// #1
  44a3d0:	mov	x2, x20
  44a3d4:	mov	w1, w21
  44a3d8:	mov	x0, x19
  44a3dc:	bl	44a4d4 <ferror@plt+0x477a4>
  44a3e0:	str	x23, [x19, #296]
  44a3e4:	ldp	x19, x20, [sp, #16]
  44a3e8:	ldp	x21, x22, [sp, #32]
  44a3ec:	ldr	x23, [sp, #48]
  44a3f0:	ldp	x29, x30, [sp], #64
  44a3f4:	ret
  44a3f8:	strb	wzr, [x19, #255]
  44a3fc:	ldr	x3, [x19, #272]
  44a400:	ldr	x2, [x19, #280]
  44a404:	mov	x1, #0xff                  	// #255
  44a408:	mov	x0, x19
  44a40c:	blr	x3
  44a410:	str	xzr, [x19, #256]
  44a414:	ldr	x0, [x19, #320]
  44a418:	add	x0, x0, #0x1
  44a41c:	str	x0, [x19, #320]
  44a420:	b	44a2f4 <ferror@plt+0x475c4>
  44a424:	strb	wzr, [x19, #255]
  44a428:	ldr	x3, [x19, #272]
  44a42c:	ldr	x2, [x19, #280]
  44a430:	mov	x1, #0xff                  	// #255
  44a434:	mov	x0, x19
  44a438:	blr	x3
  44a43c:	str	xzr, [x19, #256]
  44a440:	ldr	x0, [x19, #320]
  44a444:	add	x0, x0, #0x1
  44a448:	str	x0, [x19, #320]
  44a44c:	b	44a318 <ferror@plt+0x475e8>
  44a450:	strb	wzr, [x19, #255]
  44a454:	ldr	x3, [x19, #272]
  44a458:	ldr	x2, [x19, #280]
  44a45c:	mov	x1, #0xff                  	// #255
  44a460:	mov	x0, x19
  44a464:	blr	x3
  44a468:	str	xzr, [x19, #256]
  44a46c:	ldr	x0, [x19, #320]
  44a470:	add	x0, x0, #0x1
  44a474:	str	x0, [x19, #320]
  44a478:	b	44a358 <ferror@plt+0x47628>
  44a47c:	strb	wzr, [x19, #255]
  44a480:	ldr	x3, [x19, #272]
  44a484:	ldr	x2, [x19, #280]
  44a488:	mov	x1, #0xff                  	// #255
  44a48c:	mov	x0, x19
  44a490:	blr	x3
  44a494:	str	xzr, [x19, #256]
  44a498:	ldr	x0, [x19, #320]
  44a49c:	add	x0, x0, #0x1
  44a4a0:	str	x0, [x19, #320]
  44a4a4:	b	44a37c <ferror@plt+0x4764c>
  44a4a8:	strb	wzr, [x19, #255]
  44a4ac:	ldr	x3, [x19, #272]
  44a4b0:	ldr	x2, [x19, #280]
  44a4b4:	mov	x1, #0xff                  	// #255
  44a4b8:	mov	x0, x19
  44a4bc:	blr	x3
  44a4c0:	str	xzr, [x19, #256]
  44a4c4:	ldr	x0, [x19, #320]
  44a4c8:	add	x0, x0, #0x1
  44a4cc:	str	x0, [x19, #320]
  44a4d0:	b	44a3b4 <ferror@plt+0x47684>
  44a4d4:	cbz	x2, 44a890 <ferror@plt+0x47b60>
  44a4d8:	stp	x29, x30, [sp, #-112]!
  44a4dc:	mov	x29, sp
  44a4e0:	stp	x19, x20, [sp, #16]
  44a4e4:	stp	x21, x22, [sp, #32]
  44a4e8:	mov	x19, x0
  44a4ec:	mov	w22, w1
  44a4f0:	mov	x20, x2
  44a4f4:	mov	w21, w3
  44a4f8:	ldr	w0, [x0, #304]
  44a4fc:	cbnz	w0, 44a57c <ferror@plt+0x4784c>
  44a500:	ldr	w0, [x2, #16]
  44a504:	cbnz	w0, 44a58c <ferror@plt+0x4785c>
  44a508:	cbnz	w3, 44a51c <ferror@plt+0x477ec>
  44a50c:	ldr	x0, [x2, #8]
  44a510:	ldr	w0, [x0]
  44a514:	bl	4449ec <ferror@plt+0x41cbc>
  44a518:	cbnz	w0, 44a58c <ferror@plt+0x4785c>
  44a51c:	stp	x23, x24, [sp, #48]
  44a520:	mov	w0, #0x1                   	// #1
  44a524:	str	w0, [x20, #16]
  44a528:	ldr	x23, [x19, #288]
  44a52c:	ldr	x0, [x20, #24]
  44a530:	str	x0, [x19, #288]
  44a534:	ldr	x2, [x20, #8]
  44a538:	ldr	w0, [x2]
  44a53c:	cmp	w0, #0x29
  44a540:	b.eq	44a5a4 <ferror@plt+0x47874>  // b.none
  44a544:	cmp	w0, #0x2a
  44a548:	b.eq	44a5c0 <ferror@plt+0x47890>  // b.none
  44a54c:	cmp	w0, #0x2
  44a550:	b.eq	44a5dc <ferror@plt+0x478ac>  // b.none
  44a554:	mov	w1, w22
  44a558:	mov	x0, x19
  44a55c:	bl	449870 <ferror@plt+0x46b40>
  44a560:	str	x23, [x19, #288]
  44a564:	mov	w3, w21
  44a568:	ldr	x2, [x20]
  44a56c:	mov	w1, w22
  44a570:	mov	x0, x19
  44a574:	bl	44a4d4 <ferror@plt+0x477a4>
  44a578:	ldp	x23, x24, [sp, #48]
  44a57c:	ldp	x19, x20, [sp, #16]
  44a580:	ldp	x21, x22, [sp, #32]
  44a584:	ldp	x29, x30, [sp], #112
  44a588:	ret
  44a58c:	mov	w3, w21
  44a590:	ldr	x2, [x20]
  44a594:	mov	w1, w22
  44a598:	mov	x0, x19
  44a59c:	bl	44a4d4 <ferror@plt+0x477a4>
  44a5a0:	b	44a57c <ferror@plt+0x4784c>
  44a5a4:	ldr	x3, [x20]
  44a5a8:	mov	w1, w22
  44a5ac:	mov	x0, x19
  44a5b0:	bl	44a23c <ferror@plt+0x4750c>
  44a5b4:	str	x23, [x19, #288]
  44a5b8:	ldp	x23, x24, [sp, #48]
  44a5bc:	b	44a57c <ferror@plt+0x4784c>
  44a5c0:	ldr	x3, [x20]
  44a5c4:	mov	w1, w22
  44a5c8:	mov	x0, x19
  44a5cc:	bl	44a894 <ferror@plt+0x47b64>
  44a5d0:	str	x23, [x19, #288]
  44a5d4:	ldp	x23, x24, [sp, #48]
  44a5d8:	b	44a57c <ferror@plt+0x4784c>
  44a5dc:	ldr	x21, [x19, #296]
  44a5e0:	str	xzr, [x19, #296]
  44a5e4:	ldr	x0, [x20, #8]
  44a5e8:	ldr	x2, [x0, #8]
  44a5ec:	mov	w1, w22
  44a5f0:	mov	x0, x19
  44a5f4:	bl	4497d4 <ferror@plt+0x46aa4>
  44a5f8:	str	x21, [x19, #296]
  44a5fc:	tbz	w22, #2, 44a64c <ferror@plt+0x4791c>
  44a600:	ldr	x0, [x19, #256]
  44a604:	cmp	x0, #0xff
  44a608:	b.eq	44a6c8 <ferror@plt+0x47998>  // b.none
  44a60c:	ldr	x1, [x19, #256]
  44a610:	add	x0, x1, #0x1
  44a614:	str	x0, [x19, #256]
  44a618:	mov	w0, #0x2e                  	// #46
  44a61c:	strb	w0, [x19, x1]
  44a620:	strb	w0, [x19, #264]
  44a624:	ldr	x0, [x20, #8]
  44a628:	ldr	x20, [x0, #16]
  44a62c:	ldr	w0, [x20]
  44a630:	cmp	w0, #0x47
  44a634:	b.eq	44a6f4 <ferror@plt+0x479c4>  // b.none
  44a638:	ldr	w0, [x20]
  44a63c:	bl	4449ec <ferror@plt+0x41cbc>
  44a640:	cbz	w0, 44a874 <ferror@plt+0x47b44>
  44a644:	ldr	x20, [x20, #8]
  44a648:	b	44a638 <ferror@plt+0x47908>
  44a64c:	stp	x25, x26, [sp, #64]
  44a650:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x24c60>
  44a654:	add	x21, x21, #0xc30
  44a658:	add	x25, x21, #0x2
  44a65c:	mov	x26, #0xff                  	// #255
  44a660:	b	44a684 <ferror@plt+0x47954>
  44a664:	ldr	x0, [x19, #256]
  44a668:	add	x1, x0, #0x1
  44a66c:	str	x1, [x19, #256]
  44a670:	strb	w24, [x19, x0]
  44a674:	strb	w24, [x19, #264]
  44a678:	add	x21, x21, #0x1
  44a67c:	cmp	x21, x25
  44a680:	b.eq	44a6c0 <ferror@plt+0x47990>  // b.none
  44a684:	ldrb	w24, [x21]
  44a688:	ldr	x0, [x19, #256]
  44a68c:	cmp	x0, #0xff
  44a690:	b.ne	44a664 <ferror@plt+0x47934>  // b.any
  44a694:	strb	wzr, [x19, #255]
  44a698:	ldr	x3, [x19, #272]
  44a69c:	ldr	x2, [x19, #280]
  44a6a0:	mov	x1, x26
  44a6a4:	mov	x0, x19
  44a6a8:	blr	x3
  44a6ac:	str	xzr, [x19, #256]
  44a6b0:	ldr	x0, [x19, #320]
  44a6b4:	add	x0, x0, #0x1
  44a6b8:	str	x0, [x19, #320]
  44a6bc:	b	44a664 <ferror@plt+0x47934>
  44a6c0:	ldp	x25, x26, [sp, #64]
  44a6c4:	b	44a624 <ferror@plt+0x478f4>
  44a6c8:	strb	wzr, [x19, #255]
  44a6cc:	ldr	x3, [x19, #272]
  44a6d0:	ldr	x2, [x19, #280]
  44a6d4:	mov	x1, #0xff                  	// #255
  44a6d8:	mov	x0, x19
  44a6dc:	blr	x3
  44a6e0:	str	xzr, [x19, #256]
  44a6e4:	ldr	x0, [x19, #320]
  44a6e8:	add	x0, x0, #0x1
  44a6ec:	str	x0, [x19, #320]
  44a6f0:	b	44a60c <ferror@plt+0x478dc>
  44a6f4:	stp	x25, x26, [sp, #64]
  44a6f8:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44a6fc:	add	x21, x21, #0xca8
  44a700:	add	x25, x21, #0xd
  44a704:	mov	x26, #0xff                  	// #255
  44a708:	b	44a72c <ferror@plt+0x479fc>
  44a70c:	ldr	x0, [x19, #256]
  44a710:	add	x1, x0, #0x1
  44a714:	str	x1, [x19, #256]
  44a718:	strb	w24, [x19, x0]
  44a71c:	strb	w24, [x19, #264]
  44a720:	add	x21, x21, #0x1
  44a724:	cmp	x21, x25
  44a728:	b.eq	44a768 <ferror@plt+0x47a38>  // b.none
  44a72c:	ldrb	w24, [x21]
  44a730:	ldr	x0, [x19, #256]
  44a734:	cmp	x0, #0xff
  44a738:	b.ne	44a70c <ferror@plt+0x479dc>  // b.any
  44a73c:	strb	wzr, [x19, #255]
  44a740:	ldr	x3, [x19, #272]
  44a744:	ldr	x2, [x19, #280]
  44a748:	mov	x1, x26
  44a74c:	mov	x0, x19
  44a750:	blr	x3
  44a754:	str	xzr, [x19, #256]
  44a758:	ldr	x0, [x19, #320]
  44a75c:	add	x0, x0, #0x1
  44a760:	str	x0, [x19, #320]
  44a764:	b	44a70c <ferror@plt+0x479dc>
  44a768:	ldr	w2, [x20, #16]
  44a76c:	add	w2, w2, #0x1
  44a770:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  44a774:	add	x1, x1, #0xd08
  44a778:	add	x0, sp, #0x50
  44a77c:	bl	402720 <sprintf@plt>
  44a780:	add	x0, sp, #0x50
  44a784:	bl	402680 <strlen@plt>
  44a788:	cbz	x0, 44a7f8 <ferror@plt+0x47ac8>
  44a78c:	add	x21, sp, #0x50
  44a790:	add	x25, x0, x21
  44a794:	mov	x26, #0xff                  	// #255
  44a798:	b	44a7bc <ferror@plt+0x47a8c>
  44a79c:	ldr	x0, [x19, #256]
  44a7a0:	add	x1, x0, #0x1
  44a7a4:	str	x1, [x19, #256]
  44a7a8:	strb	w24, [x19, x0]
  44a7ac:	strb	w24, [x19, #264]
  44a7b0:	add	x21, x21, #0x1
  44a7b4:	cmp	x25, x21
  44a7b8:	b.eq	44a7f8 <ferror@plt+0x47ac8>  // b.none
  44a7bc:	ldrb	w24, [x21]
  44a7c0:	ldr	x0, [x19, #256]
  44a7c4:	cmp	x0, #0xff
  44a7c8:	b.ne	44a79c <ferror@plt+0x47a6c>  // b.any
  44a7cc:	strb	wzr, [x19, #255]
  44a7d0:	ldr	x3, [x19, #272]
  44a7d4:	ldr	x2, [x19, #280]
  44a7d8:	mov	x1, x26
  44a7dc:	mov	x0, x19
  44a7e0:	blr	x3
  44a7e4:	str	xzr, [x19, #256]
  44a7e8:	ldr	x0, [x19, #320]
  44a7ec:	add	x0, x0, #0x1
  44a7f0:	str	x0, [x19, #320]
  44a7f4:	b	44a79c <ferror@plt+0x47a6c>
  44a7f8:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44a7fc:	add	x21, x21, #0xcb8
  44a800:	add	x25, x21, #0x3
  44a804:	mov	x26, #0xff                  	// #255
  44a808:	b	44a82c <ferror@plt+0x47afc>
  44a80c:	ldr	x0, [x19, #256]
  44a810:	add	x1, x0, #0x1
  44a814:	str	x1, [x19, #256]
  44a818:	strb	w24, [x19, x0]
  44a81c:	strb	w24, [x19, #264]
  44a820:	add	x21, x21, #0x1
  44a824:	cmp	x25, x21
  44a828:	b.eq	44a868 <ferror@plt+0x47b38>  // b.none
  44a82c:	ldrb	w24, [x21]
  44a830:	ldr	x0, [x19, #256]
  44a834:	cmp	x0, #0xff
  44a838:	b.ne	44a80c <ferror@plt+0x47adc>  // b.any
  44a83c:	strb	wzr, [x19, #255]
  44a840:	ldr	x3, [x19, #272]
  44a844:	ldr	x2, [x19, #280]
  44a848:	mov	x1, x26
  44a84c:	mov	x0, x19
  44a850:	blr	x3
  44a854:	str	xzr, [x19, #256]
  44a858:	ldr	x0, [x19, #320]
  44a85c:	add	x0, x0, #0x1
  44a860:	str	x0, [x19, #320]
  44a864:	b	44a80c <ferror@plt+0x47adc>
  44a868:	ldr	x20, [x20, #8]
  44a86c:	ldp	x25, x26, [sp, #64]
  44a870:	b	44a638 <ferror@plt+0x47908>
  44a874:	mov	x2, x20
  44a878:	mov	w1, w22
  44a87c:	mov	x0, x19
  44a880:	bl	4497d4 <ferror@plt+0x46aa4>
  44a884:	str	x23, [x19, #288]
  44a888:	ldp	x23, x24, [sp, #48]
  44a88c:	b	44a57c <ferror@plt+0x4784c>
  44a890:	ret
  44a894:	stp	x29, x30, [sp, #-80]!
  44a898:	mov	x29, sp
  44a89c:	stp	x19, x20, [sp, #16]
  44a8a0:	stp	x21, x22, [sp, #32]
  44a8a4:	stp	x23, x24, [sp, #48]
  44a8a8:	mov	x19, x0
  44a8ac:	mov	w22, w1
  44a8b0:	mov	x24, x2
  44a8b4:	cbz	x3, 44aa60 <ferror@plt+0x47d30>
  44a8b8:	mov	x21, x3
  44a8bc:	mov	x0, x3
  44a8c0:	ldr	w20, [x0, #16]
  44a8c4:	cbz	w20, 44a8f0 <ferror@plt+0x47bc0>
  44a8c8:	ldr	x0, [x0]
  44a8cc:	cbnz	x0, 44a8c0 <ferror@plt+0x47b90>
  44a8d0:	mov	w20, #0x1                   	// #1
  44a8d4:	mov	w3, #0x0                   	// #0
  44a8d8:	mov	x2, x21
  44a8dc:	mov	w1, w22
  44a8e0:	mov	x0, x19
  44a8e4:	bl	44a4d4 <ferror@plt+0x477a4>
  44a8e8:	cbz	w20, 44aa84 <ferror@plt+0x47d54>
  44a8ec:	b	44aa60 <ferror@plt+0x47d30>
  44a8f0:	ldr	x0, [x0, #8]
  44a8f4:	ldr	w0, [x0]
  44a8f8:	cmp	w0, #0x2a
  44a8fc:	b.eq	44a8d4 <ferror@plt+0x47ba4>  // b.none
  44a900:	stp	x25, x26, [sp, #64]
  44a904:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44a908:	add	x20, x20, #0xf40
  44a90c:	add	x25, x20, #0x2
  44a910:	mov	x26, #0xff                  	// #255
  44a914:	b	44a938 <ferror@plt+0x47c08>
  44a918:	ldr	x0, [x19, #256]
  44a91c:	add	x1, x0, #0x1
  44a920:	str	x1, [x19, #256]
  44a924:	strb	w23, [x19, x0]
  44a928:	strb	w23, [x19, #264]
  44a92c:	add	x20, x20, #0x1
  44a930:	cmp	x20, x25
  44a934:	b.eq	44aa24 <ferror@plt+0x47cf4>  // b.none
  44a938:	ldrb	w23, [x20]
  44a93c:	ldr	x0, [x19, #256]
  44a940:	cmp	x0, #0xff
  44a944:	b.ne	44a918 <ferror@plt+0x47be8>  // b.any
  44a948:	strb	wzr, [x19, #255]
  44a94c:	ldr	x3, [x19, #272]
  44a950:	ldr	x2, [x19, #280]
  44a954:	mov	x1, x26
  44a958:	mov	x0, x19
  44a95c:	blr	x3
  44a960:	str	xzr, [x19, #256]
  44a964:	ldr	x0, [x19, #320]
  44a968:	add	x0, x0, #0x1
  44a96c:	str	x0, [x19, #320]
  44a970:	b	44a918 <ferror@plt+0x47be8>
  44a974:	strb	wzr, [x19, #255]
  44a978:	ldr	x3, [x19, #272]
  44a97c:	ldr	x2, [x19, #280]
  44a980:	mov	x1, #0xff                  	// #255
  44a984:	mov	x0, x19
  44a988:	blr	x3
  44a98c:	str	xzr, [x19, #256]
  44a990:	ldr	x0, [x19, #320]
  44a994:	add	x0, x0, #0x1
  44a998:	str	x0, [x19, #320]
  44a99c:	b	44aa44 <ferror@plt+0x47d14>
  44a9a0:	strb	wzr, [x19, #255]
  44a9a4:	ldr	x3, [x19, #272]
  44a9a8:	ldr	x2, [x19, #280]
  44a9ac:	mov	x1, #0xff                  	// #255
  44a9b0:	mov	x0, x19
  44a9b4:	blr	x3
  44a9b8:	str	xzr, [x19, #256]
  44a9bc:	ldr	x0, [x19, #320]
  44a9c0:	add	x0, x0, #0x1
  44a9c4:	str	x0, [x19, #320]
  44a9c8:	b	44aa6c <ferror@plt+0x47d3c>
  44a9cc:	strb	wzr, [x19, #255]
  44a9d0:	ldr	x3, [x19, #272]
  44a9d4:	ldr	x2, [x19, #280]
  44a9d8:	mov	x1, #0xff                  	// #255
  44a9dc:	mov	x0, x19
  44a9e0:	blr	x3
  44a9e4:	str	xzr, [x19, #256]
  44a9e8:	ldr	x0, [x19, #320]
  44a9ec:	add	x0, x0, #0x1
  44a9f0:	str	x0, [x19, #320]
  44a9f4:	b	44aa90 <ferror@plt+0x47d60>
  44a9f8:	strb	wzr, [x19, #255]
  44a9fc:	ldr	x3, [x19, #272]
  44aa00:	ldr	x2, [x19, #280]
  44aa04:	mov	x1, #0xff                  	// #255
  44aa08:	mov	x0, x19
  44aa0c:	blr	x3
  44aa10:	str	xzr, [x19, #256]
  44aa14:	ldr	x0, [x19, #320]
  44aa18:	add	x0, x0, #0x1
  44aa1c:	str	x0, [x19, #320]
  44aa20:	b	44aac8 <ferror@plt+0x47d98>
  44aa24:	mov	w3, #0x0                   	// #0
  44aa28:	mov	x2, x21
  44aa2c:	mov	w1, w22
  44aa30:	mov	x0, x19
  44aa34:	bl	44a4d4 <ferror@plt+0x477a4>
  44aa38:	ldr	x0, [x19, #256]
  44aa3c:	cmp	x0, #0xff
  44aa40:	b.eq	44a974 <ferror@plt+0x47c44>  // b.none
  44aa44:	ldr	x1, [x19, #256]
  44aa48:	add	x0, x1, #0x1
  44aa4c:	str	x0, [x19, #256]
  44aa50:	mov	w0, #0x29                  	// #41
  44aa54:	strb	w0, [x19, x1]
  44aa58:	strb	w0, [x19, #264]
  44aa5c:	ldp	x25, x26, [sp, #64]
  44aa60:	ldr	x0, [x19, #256]
  44aa64:	cmp	x0, #0xff
  44aa68:	b.eq	44a9a0 <ferror@plt+0x47c70>  // b.none
  44aa6c:	ldr	x1, [x19, #256]
  44aa70:	add	x0, x1, #0x1
  44aa74:	str	x0, [x19, #256]
  44aa78:	mov	w0, #0x20                  	// #32
  44aa7c:	strb	w0, [x19, x1]
  44aa80:	strb	w0, [x19, #264]
  44aa84:	ldr	x0, [x19, #256]
  44aa88:	cmp	x0, #0xff
  44aa8c:	b.eq	44a9cc <ferror@plt+0x47c9c>  // b.none
  44aa90:	ldr	x1, [x19, #256]
  44aa94:	add	x0, x1, #0x1
  44aa98:	str	x0, [x19, #256]
  44aa9c:	mov	w0, #0x5b                  	// #91
  44aaa0:	strb	w0, [x19, x1]
  44aaa4:	strb	w0, [x19, #264]
  44aaa8:	ldr	x2, [x24, #8]
  44aaac:	cbz	x2, 44aabc <ferror@plt+0x47d8c>
  44aab0:	mov	w1, w22
  44aab4:	mov	x0, x19
  44aab8:	bl	4497d4 <ferror@plt+0x46aa4>
  44aabc:	ldr	x0, [x19, #256]
  44aac0:	cmp	x0, #0xff
  44aac4:	b.eq	44a9f8 <ferror@plt+0x47cc8>  // b.none
  44aac8:	ldr	x1, [x19, #256]
  44aacc:	add	x0, x1, #0x1
  44aad0:	str	x0, [x19, #256]
  44aad4:	mov	w0, #0x5d                  	// #93
  44aad8:	strb	w0, [x19, x1]
  44aadc:	strb	w0, [x19, #264]
  44aae0:	ldp	x19, x20, [sp, #16]
  44aae4:	ldp	x21, x22, [sp, #32]
  44aae8:	ldp	x23, x24, [sp, #48]
  44aaec:	ldp	x29, x30, [sp], #80
  44aaf0:	ret
  44aaf4:	stp	x29, x30, [sp, #-64]!
  44aaf8:	mov	x29, sp
  44aafc:	stp	x19, x20, [sp, #16]
  44ab00:	mov	x19, x0
  44ab04:	ldr	w0, [x2]
  44ab08:	cmp	w0, #0x32
  44ab0c:	b.eq	44ab24 <ferror@plt+0x47df4>  // b.none
  44ab10:	mov	x0, x19
  44ab14:	bl	4497d4 <ferror@plt+0x46aa4>
  44ab18:	ldp	x19, x20, [sp, #16]
  44ab1c:	ldp	x29, x30, [sp], #64
  44ab20:	ret
  44ab24:	stp	x21, x22, [sp, #32]
  44ab28:	ldr	x0, [x2, #8]
  44ab2c:	ldr	x22, [x0, #8]
  44ab30:	ldrsw	x0, [x0, #16]
  44ab34:	cbz	x0, 44abb4 <ferror@plt+0x47e84>
  44ab38:	str	x23, [sp, #48]
  44ab3c:	mov	x20, x22
  44ab40:	add	x22, x22, x0
  44ab44:	mov	x23, #0xff                  	// #255
  44ab48:	b	44ab6c <ferror@plt+0x47e3c>
  44ab4c:	ldr	x0, [x19, #256]
  44ab50:	add	x1, x0, #0x1
  44ab54:	str	x1, [x19, #256]
  44ab58:	strb	w21, [x19, x0]
  44ab5c:	strb	w21, [x19, #264]
  44ab60:	add	x20, x20, #0x1
  44ab64:	cmp	x20, x22
  44ab68:	b.eq	44aba8 <ferror@plt+0x47e78>  // b.none
  44ab6c:	ldrb	w21, [x20]
  44ab70:	ldr	x0, [x19, #256]
  44ab74:	cmp	x0, #0xff
  44ab78:	b.ne	44ab4c <ferror@plt+0x47e1c>  // b.any
  44ab7c:	strb	wzr, [x19, #255]
  44ab80:	ldr	x3, [x19, #272]
  44ab84:	ldr	x2, [x19, #280]
  44ab88:	mov	x1, x23
  44ab8c:	mov	x0, x19
  44ab90:	blr	x3
  44ab94:	str	xzr, [x19, #256]
  44ab98:	ldr	x0, [x19, #320]
  44ab9c:	add	x0, x0, #0x1
  44aba0:	str	x0, [x19, #320]
  44aba4:	b	44ab4c <ferror@plt+0x47e1c>
  44aba8:	ldp	x21, x22, [sp, #32]
  44abac:	ldr	x23, [sp, #48]
  44abb0:	b	44ab18 <ferror@plt+0x47de8>
  44abb4:	ldp	x21, x22, [sp, #32]
  44abb8:	b	44ab18 <ferror@plt+0x47de8>
  44abbc:	stp	x29, x30, [sp, #-48]!
  44abc0:	mov	x29, sp
  44abc4:	stp	x19, x20, [sp, #16]
  44abc8:	str	x21, [sp, #32]
  44abcc:	mov	x19, x0
  44abd0:	mov	w21, w1
  44abd4:	mov	x20, x2
  44abd8:	ldr	w0, [x2]
  44abdc:	cmp	w0, #0x31
  44abe0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  44abe4:	ccmp	w0, #0x6, #0x4, hi  // hi = pmore
  44abe8:	b.ne	44abf8 <ferror@plt+0x47ec8>  // b.any
  44abec:	mov	x0, x19
  44abf0:	bl	4497d4 <ferror@plt+0x46aa4>
  44abf4:	b	44ac50 <ferror@plt+0x47f20>
  44abf8:	ldr	x0, [x19, #256]
  44abfc:	cmp	x0, #0xff
  44ac00:	b.eq	44ac60 <ferror@plt+0x47f30>  // b.none
  44ac04:	ldr	x1, [x19, #256]
  44ac08:	add	x0, x1, #0x1
  44ac0c:	str	x0, [x19, #256]
  44ac10:	mov	w0, #0x28                  	// #40
  44ac14:	strb	w0, [x19, x1]
  44ac18:	strb	w0, [x19, #264]
  44ac1c:	mov	x2, x20
  44ac20:	mov	w1, w21
  44ac24:	mov	x0, x19
  44ac28:	bl	4497d4 <ferror@plt+0x46aa4>
  44ac2c:	ldr	x0, [x19, #256]
  44ac30:	cmp	x0, #0xff
  44ac34:	b.eq	44ac8c <ferror@plt+0x47f5c>  // b.none
  44ac38:	ldr	x1, [x19, #256]
  44ac3c:	add	x0, x1, #0x1
  44ac40:	str	x0, [x19, #256]
  44ac44:	mov	w0, #0x29                  	// #41
  44ac48:	strb	w0, [x19, x1]
  44ac4c:	strb	w0, [x19, #264]
  44ac50:	ldp	x19, x20, [sp, #16]
  44ac54:	ldr	x21, [sp, #32]
  44ac58:	ldp	x29, x30, [sp], #48
  44ac5c:	ret
  44ac60:	strb	wzr, [x19, #255]
  44ac64:	ldr	x3, [x19, #272]
  44ac68:	ldr	x2, [x19, #280]
  44ac6c:	mov	x1, #0xff                  	// #255
  44ac70:	mov	x0, x19
  44ac74:	blr	x3
  44ac78:	str	xzr, [x19, #256]
  44ac7c:	ldr	x0, [x19, #320]
  44ac80:	add	x0, x0, #0x1
  44ac84:	str	x0, [x19, #320]
  44ac88:	b	44ac04 <ferror@plt+0x47ed4>
  44ac8c:	strb	wzr, [x19, #255]
  44ac90:	ldr	x3, [x19, #272]
  44ac94:	ldr	x2, [x19, #280]
  44ac98:	mov	x1, #0xff                  	// #255
  44ac9c:	mov	x0, x19
  44aca0:	blr	x3
  44aca4:	str	xzr, [x19, #256]
  44aca8:	ldr	x0, [x19, #320]
  44acac:	add	x0, x0, #0x1
  44acb0:	str	x0, [x19, #320]
  44acb4:	b	44ac38 <ferror@plt+0x47f08>
  44acb8:	stp	x29, x30, [sp, #-96]!
  44acbc:	mov	x29, sp
  44acc0:	stp	x19, x20, [sp, #16]
  44acc4:	stp	x21, x22, [sp, #32]
  44acc8:	mov	x19, x0
  44accc:	mov	w21, w1
  44acd0:	ldr	x0, [x2, #8]
  44acd4:	ldr	x0, [x0, #8]
  44acd8:	ldr	x0, [x0]
  44acdc:	ldrb	w1, [x0]
  44ace0:	cmp	w1, #0x66
  44ace4:	b.ne	44b090 <ferror@plt+0x48360>  // b.any
  44ace8:	stp	x23, x24, [sp, #48]
  44acec:	stp	x25, x26, [sp, #64]
  44acf0:	ldr	x1, [x2, #16]
  44acf4:	ldr	x24, [x1, #8]
  44acf8:	ldr	x25, [x1, #16]
  44acfc:	ldr	w1, [x25]
  44ad00:	mov	x26, #0x0                   	// #0
  44ad04:	cmp	w1, #0x3c
  44ad08:	b.eq	44ad94 <ferror@plt+0x48064>  // b.none
  44ad0c:	ldr	w23, [x19, #316]
  44ad10:	mov	w1, #0xffffffff            	// #-1
  44ad14:	str	w1, [x19, #316]
  44ad18:	ldrb	w0, [x0, #1]
  44ad1c:	cmp	w0, #0x6c
  44ad20:	b.eq	44ae00 <ferror@plt+0x480d0>  // b.none
  44ad24:	b.hi	44ada0 <ferror@plt+0x48070>  // b.pmore
  44ad28:	cmp	w0, #0x4c
  44ad2c:	b.eq	44ad38 <ferror@plt+0x48008>  // b.none
  44ad30:	cmp	w0, #0x52
  44ad34:	b.ne	44aebc <ferror@plt+0x4818c>  // b.any
  44ad38:	str	x27, [sp, #80]
  44ad3c:	ldr	x0, [x19, #256]
  44ad40:	cmp	x0, #0xff
  44ad44:	b.eq	44af90 <ferror@plt+0x48260>  // b.none
  44ad48:	ldr	x1, [x19, #256]
  44ad4c:	add	x0, x1, #0x1
  44ad50:	str	x0, [x19, #256]
  44ad54:	mov	w0, #0x28                  	// #40
  44ad58:	strb	w0, [x19, x1]
  44ad5c:	strb	w0, [x19, #264]
  44ad60:	mov	x2, x25
  44ad64:	mov	w1, w21
  44ad68:	mov	x0, x19
  44ad6c:	bl	44abbc <ferror@plt+0x47e8c>
  44ad70:	mov	x2, x24
  44ad74:	mov	w1, w21
  44ad78:	mov	x0, x19
  44ad7c:	bl	44aaf4 <ferror@plt+0x47dc4>
  44ad80:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x24c60>
  44ad84:	add	x20, x20, #0xc10
  44ad88:	add	x25, x20, #0x3
  44ad8c:	mov	x27, #0xff                  	// #255
  44ad90:	b	44afdc <ferror@plt+0x482ac>
  44ad94:	ldr	x26, [x25, #16]
  44ad98:	ldr	x25, [x25, #8]
  44ad9c:	b	44ad0c <ferror@plt+0x47fdc>
  44ada0:	cmp	w0, #0x72
  44ada4:	b.ne	44aebc <ferror@plt+0x4818c>  // b.any
  44ada8:	ldr	x0, [x19, #256]
  44adac:	cmp	x0, #0xff
  44adb0:	b.eq	44af08 <ferror@plt+0x481d8>  // b.none
  44adb4:	ldr	x1, [x19, #256]
  44adb8:	add	x0, x1, #0x1
  44adbc:	str	x0, [x19, #256]
  44adc0:	mov	w0, #0x28                  	// #40
  44adc4:	strb	w0, [x19, x1]
  44adc8:	strb	w0, [x19, #264]
  44adcc:	mov	x2, x25
  44add0:	mov	w1, w21
  44add4:	mov	x0, x19
  44add8:	bl	44abbc <ferror@plt+0x47e8c>
  44addc:	mov	x2, x24
  44ade0:	mov	w1, w21
  44ade4:	mov	x0, x19
  44ade8:	bl	44aaf4 <ferror@plt+0x47dc4>
  44adec:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44adf0:	add	x20, x20, #0x70
  44adf4:	add	x22, x20, #0x4
  44adf8:	mov	x24, #0xff                  	// #255
  44adfc:	b	44af54 <ferror@plt+0x48224>
  44ae00:	str	x27, [sp, #80]
  44ae04:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44ae08:	add	x20, x20, #0x68
  44ae0c:	add	x26, x20, #0x4
  44ae10:	mov	x27, #0xff                  	// #255
  44ae14:	b	44ae38 <ferror@plt+0x48108>
  44ae18:	ldr	x0, [x19, #256]
  44ae1c:	add	x1, x0, #0x1
  44ae20:	str	x1, [x19, #256]
  44ae24:	strb	w22, [x19, x0]
  44ae28:	strb	w22, [x19, #264]
  44ae2c:	add	x20, x20, #0x1
  44ae30:	cmp	x20, x26
  44ae34:	b.eq	44ae74 <ferror@plt+0x48144>  // b.none
  44ae38:	ldrb	w22, [x20]
  44ae3c:	ldr	x0, [x19, #256]
  44ae40:	cmp	x0, #0xff
  44ae44:	b.ne	44ae18 <ferror@plt+0x480e8>  // b.any
  44ae48:	strb	wzr, [x19, #255]
  44ae4c:	ldr	x3, [x19, #272]
  44ae50:	ldr	x2, [x19, #280]
  44ae54:	mov	x1, x27
  44ae58:	mov	x0, x19
  44ae5c:	blr	x3
  44ae60:	str	xzr, [x19, #256]
  44ae64:	ldr	x0, [x19, #320]
  44ae68:	add	x0, x0, #0x1
  44ae6c:	str	x0, [x19, #320]
  44ae70:	b	44ae18 <ferror@plt+0x480e8>
  44ae74:	mov	x2, x24
  44ae78:	mov	w1, w21
  44ae7c:	mov	x0, x19
  44ae80:	bl	44aaf4 <ferror@plt+0x47dc4>
  44ae84:	mov	x2, x25
  44ae88:	mov	w1, w21
  44ae8c:	mov	x0, x19
  44ae90:	bl	44abbc <ferror@plt+0x47e8c>
  44ae94:	ldr	x0, [x19, #256]
  44ae98:	cmp	x0, #0xff
  44ae9c:	b.eq	44aedc <ferror@plt+0x481ac>  // b.none
  44aea0:	ldr	x1, [x19, #256]
  44aea4:	add	x0, x1, #0x1
  44aea8:	str	x0, [x19, #256]
  44aeac:	mov	w0, #0x29                  	// #41
  44aeb0:	strb	w0, [x19, x1]
  44aeb4:	strb	w0, [x19, #264]
  44aeb8:	ldr	x27, [sp, #80]
  44aebc:	str	w23, [x19, #316]
  44aec0:	mov	w0, #0x1                   	// #1
  44aec4:	ldp	x23, x24, [sp, #48]
  44aec8:	ldp	x25, x26, [sp, #64]
  44aecc:	ldp	x19, x20, [sp, #16]
  44aed0:	ldp	x21, x22, [sp, #32]
  44aed4:	ldp	x29, x30, [sp], #96
  44aed8:	ret
  44aedc:	strb	wzr, [x19, #255]
  44aee0:	ldr	x3, [x19, #272]
  44aee4:	ldr	x2, [x19, #280]
  44aee8:	mov	x1, #0xff                  	// #255
  44aeec:	mov	x0, x19
  44aef0:	blr	x3
  44aef4:	str	xzr, [x19, #256]
  44aef8:	ldr	x0, [x19, #320]
  44aefc:	add	x0, x0, #0x1
  44af00:	str	x0, [x19, #320]
  44af04:	b	44aea0 <ferror@plt+0x48170>
  44af08:	strb	wzr, [x19, #255]
  44af0c:	ldr	x3, [x19, #272]
  44af10:	ldr	x2, [x19, #280]
  44af14:	mov	x1, #0xff                  	// #255
  44af18:	mov	x0, x19
  44af1c:	blr	x3
  44af20:	str	xzr, [x19, #256]
  44af24:	ldr	x0, [x19, #320]
  44af28:	add	x0, x0, #0x1
  44af2c:	str	x0, [x19, #320]
  44af30:	b	44adb4 <ferror@plt+0x48084>
  44af34:	ldr	x0, [x19, #256]
  44af38:	add	x1, x0, #0x1
  44af3c:	str	x1, [x19, #256]
  44af40:	strb	w21, [x19, x0]
  44af44:	strb	w21, [x19, #264]
  44af48:	add	x20, x20, #0x1
  44af4c:	cmp	x20, x22
  44af50:	b.eq	44aebc <ferror@plt+0x4818c>  // b.none
  44af54:	ldrb	w21, [x20]
  44af58:	ldr	x0, [x19, #256]
  44af5c:	cmp	x0, #0xff
  44af60:	b.ne	44af34 <ferror@plt+0x48204>  // b.any
  44af64:	strb	wzr, [x19, #255]
  44af68:	ldr	x3, [x19, #272]
  44af6c:	ldr	x2, [x19, #280]
  44af70:	mov	x1, x24
  44af74:	mov	x0, x19
  44af78:	blr	x3
  44af7c:	str	xzr, [x19, #256]
  44af80:	ldr	x0, [x19, #320]
  44af84:	add	x0, x0, #0x1
  44af88:	str	x0, [x19, #320]
  44af8c:	b	44af34 <ferror@plt+0x48204>
  44af90:	strb	wzr, [x19, #255]
  44af94:	ldr	x3, [x19, #272]
  44af98:	ldr	x2, [x19, #280]
  44af9c:	mov	x1, #0xff                  	// #255
  44afa0:	mov	x0, x19
  44afa4:	blr	x3
  44afa8:	str	xzr, [x19, #256]
  44afac:	ldr	x0, [x19, #320]
  44afb0:	add	x0, x0, #0x1
  44afb4:	str	x0, [x19, #320]
  44afb8:	b	44ad48 <ferror@plt+0x48018>
  44afbc:	ldr	x0, [x19, #256]
  44afc0:	add	x1, x0, #0x1
  44afc4:	str	x1, [x19, #256]
  44afc8:	strb	w22, [x19, x0]
  44afcc:	strb	w22, [x19, #264]
  44afd0:	add	x20, x20, #0x1
  44afd4:	cmp	x20, x25
  44afd8:	b.eq	44b018 <ferror@plt+0x482e8>  // b.none
  44afdc:	ldrb	w22, [x20]
  44afe0:	ldr	x0, [x19, #256]
  44afe4:	cmp	x0, #0xff
  44afe8:	b.ne	44afbc <ferror@plt+0x4828c>  // b.any
  44afec:	strb	wzr, [x19, #255]
  44aff0:	ldr	x3, [x19, #272]
  44aff4:	ldr	x2, [x19, #280]
  44aff8:	mov	x1, x27
  44affc:	mov	x0, x19
  44b000:	blr	x3
  44b004:	str	xzr, [x19, #256]
  44b008:	ldr	x0, [x19, #320]
  44b00c:	add	x0, x0, #0x1
  44b010:	str	x0, [x19, #320]
  44b014:	b	44afbc <ferror@plt+0x4828c>
  44b018:	mov	x2, x24
  44b01c:	mov	w1, w21
  44b020:	mov	x0, x19
  44b024:	bl	44aaf4 <ferror@plt+0x47dc4>
  44b028:	mov	x2, x26
  44b02c:	mov	w1, w21
  44b030:	mov	x0, x19
  44b034:	bl	44abbc <ferror@plt+0x47e8c>
  44b038:	ldr	x0, [x19, #256]
  44b03c:	cmp	x0, #0xff
  44b040:	b.eq	44b064 <ferror@plt+0x48334>  // b.none
  44b044:	ldr	x1, [x19, #256]
  44b048:	add	x0, x1, #0x1
  44b04c:	str	x0, [x19, #256]
  44b050:	mov	w0, #0x29                  	// #41
  44b054:	strb	w0, [x19, x1]
  44b058:	strb	w0, [x19, #264]
  44b05c:	ldr	x27, [sp, #80]
  44b060:	b	44aebc <ferror@plt+0x4818c>
  44b064:	strb	wzr, [x19, #255]
  44b068:	ldr	x3, [x19, #272]
  44b06c:	ldr	x2, [x19, #280]
  44b070:	mov	x1, #0xff                  	// #255
  44b074:	mov	x0, x19
  44b078:	blr	x3
  44b07c:	str	xzr, [x19, #256]
  44b080:	ldr	x0, [x19, #320]
  44b084:	add	x0, x0, #0x1
  44b088:	str	x0, [x19, #320]
  44b08c:	b	44b044 <ferror@plt+0x48314>
  44b090:	mov	w0, #0x0                   	// #0
  44b094:	b	44aecc <ferror@plt+0x4819c>
  44b098:	cmp	x1, #0x0
  44b09c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  44b0a0:	ccmp	x0, #0x0, #0x4, gt
  44b0a4:	b.ne	44b0b0 <ferror@plt+0x48380>  // b.any
  44b0a8:	mov	w0, #0x0                   	// #0
  44b0ac:	ret
  44b0b0:	str	wzr, [x0, #4]
  44b0b4:	str	wzr, [x0]
  44b0b8:	str	x1, [x0, #8]
  44b0bc:	str	w2, [x0, #16]
  44b0c0:	mov	w0, #0x1                   	// #1
  44b0c4:	b	44b0ac <ferror@plt+0x4837c>
  44b0c8:	stp	x29, x30, [sp, #-48]!
  44b0cc:	mov	x29, sp
  44b0d0:	stp	x19, x20, [sp, #16]
  44b0d4:	str	x21, [sp, #32]
  44b0d8:	mov	x20, x1
  44b0dc:	mov	w21, w2
  44b0e0:	bl	444a1c <ferror@plt+0x41cec>
  44b0e4:	mov	x19, x0
  44b0e8:	mov	w2, w21
  44b0ec:	mov	x1, x20
  44b0f0:	bl	44b098 <ferror@plt+0x48368>
  44b0f4:	cmp	w0, #0x0
  44b0f8:	csel	x0, x19, xzr, ne  // ne = any
  44b0fc:	ldp	x19, x20, [sp, #16]
  44b100:	ldr	x21, [sp, #32]
  44b104:	ldp	x29, x30, [sp], #48
  44b108:	ret
  44b10c:	stp	x29, x30, [sp, #-48]!
  44b110:	mov	x29, sp
  44b114:	stp	x19, x20, [sp, #16]
  44b118:	mov	x19, x0
  44b11c:	bl	444c44 <ferror@plt+0x41f14>
  44b120:	cmp	w0, #0x0
  44b124:	b.le	44b208 <ferror@plt+0x484d8>
  44b128:	str	x21, [sp, #32]
  44b12c:	mov	w20, w0
  44b130:	ldr	x21, [x19, #24]
  44b134:	ldr	x0, [x19, #8]
  44b138:	sub	x0, x0, x21
  44b13c:	cmp	x0, w20, sxtw
  44b140:	b.lt	44b200 <ferror@plt+0x484d0>  // b.tstop
  44b144:	add	x0, x21, w20, sxtw
  44b148:	str	x0, [x19, #24]
  44b14c:	ldr	w1, [x19, #16]
  44b150:	tbz	w1, #2, 44b160 <ferror@plt+0x48430>
  44b154:	ldrb	w1, [x21, w20, sxtw]
  44b158:	cmp	w1, #0x24
  44b15c:	b.eq	44b1cc <ferror@plt+0x4849c>  // b.none
  44b160:	cmp	w20, #0x9
  44b164:	b.le	44b1a8 <ferror@plt+0x48478>
  44b168:	mov	x2, #0x8                   	// #8
  44b16c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44b170:	add	x1, x1, #0x78
  44b174:	mov	x0, x21
  44b178:	bl	4029e0 <memcmp@plt>
  44b17c:	cbnz	w0, 44b1a8 <ferror@plt+0x48478>
  44b180:	ldrb	w0, [x21, #8]
  44b184:	cmp	w0, #0x2e
  44b188:	mov	w1, #0x5f                  	// #95
  44b18c:	ccmp	w0, w1, #0x4, ne  // ne = any
  44b190:	mov	w1, #0x24                  	// #36
  44b194:	ccmp	w0, w1, #0x4, ne  // ne = any
  44b198:	b.ne	44b1a8 <ferror@plt+0x48478>  // b.any
  44b19c:	ldrb	w0, [x21, #9]
  44b1a0:	cmp	w0, #0x4e
  44b1a4:	b.eq	44b1d8 <ferror@plt+0x484a8>  // b.none
  44b1a8:	mov	w2, w20
  44b1ac:	mov	x1, x21
  44b1b0:	mov	x0, x19
  44b1b4:	bl	44b0c8 <ferror@plt+0x48398>
  44b1b8:	str	x0, [x19, #64]
  44b1bc:	ldr	x21, [sp, #32]
  44b1c0:	ldp	x19, x20, [sp, #16]
  44b1c4:	ldp	x29, x30, [sp], #48
  44b1c8:	ret
  44b1cc:	add	x0, x0, #0x1
  44b1d0:	str	x0, [x19, #24]
  44b1d4:	b	44b160 <ferror@plt+0x48430>
  44b1d8:	ldr	w0, [x19, #72]
  44b1dc:	add	w0, w0, #0x16
  44b1e0:	sub	w20, w0, w20
  44b1e4:	str	w20, [x19, #72]
  44b1e8:	mov	w2, #0x15                  	// #21
  44b1ec:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44b1f0:	add	x1, x1, #0x88
  44b1f4:	mov	x0, x19
  44b1f8:	bl	44b0c8 <ferror@plt+0x48398>
  44b1fc:	b	44b1b8 <ferror@plt+0x48488>
  44b200:	mov	x0, #0x0                   	// #0
  44b204:	b	44b1b8 <ferror@plt+0x48488>
  44b208:	mov	x0, #0x0                   	// #0
  44b20c:	b	44b1c0 <ferror@plt+0x48490>
  44b210:	stp	x29, x30, [sp, #-48]!
  44b214:	mov	x29, sp
  44b218:	stp	x19, x20, [sp, #16]
  44b21c:	stp	x21, x22, [sp, #32]
  44b220:	mov	x19, x0
  44b224:	mov	x20, x1
  44b228:	ldr	x22, [x0, #64]
  44b22c:	ldr	x2, [x0, #24]
  44b230:	ldrb	w0, [x2]
  44b234:	cmp	w0, #0x42
  44b238:	b.ne	44b278 <ferror@plt+0x48548>  // b.any
  44b23c:	mov	w21, #0x4c                  	// #76
  44b240:	add	x2, x2, #0x1
  44b244:	str	x2, [x19, #24]
  44b248:	mov	x0, x19
  44b24c:	bl	44b10c <ferror@plt+0x483dc>
  44b250:	mov	x3, x0
  44b254:	mov	x2, x20
  44b258:	mov	w1, w21
  44b25c:	mov	x0, x19
  44b260:	bl	444a5c <ferror@plt+0x41d2c>
  44b264:	mov	x20, x0
  44b268:	ldr	x2, [x19, #24]
  44b26c:	ldrb	w0, [x2]
  44b270:	cmp	w0, #0x42
  44b274:	b.eq	44b240 <ferror@plt+0x48510>  // b.none
  44b278:	str	x22, [x19, #64]
  44b27c:	mov	x0, x20
  44b280:	ldp	x19, x20, [sp, #16]
  44b284:	ldp	x21, x22, [sp, #32]
  44b288:	ldp	x29, x30, [sp], #48
  44b28c:	ret
  44b290:	stp	x29, x30, [sp, #-64]!
  44b294:	mov	x29, sp
  44b298:	stp	x19, x20, [sp, #16]
  44b29c:	mov	x19, x0
  44b2a0:	ldr	x0, [x0, #24]
  44b2a4:	ldrb	w2, [x0]
  44b2a8:	mov	x20, #0x0                   	// #0
  44b2ac:	cmp	w2, #0x53
  44b2b0:	b.ne	44b308 <ferror@plt+0x485d8>  // b.any
  44b2b4:	add	x2, x0, #0x1
  44b2b8:	str	x2, [x19, #24]
  44b2bc:	ldrb	w2, [x0, #1]
  44b2c0:	cbz	w2, 44b3ac <ferror@plt+0x4867c>
  44b2c4:	add	x2, x0, #0x2
  44b2c8:	str	x2, [x19, #24]
  44b2cc:	ldrb	w2, [x0, #1]
  44b2d0:	sub	w0, w2, #0x30
  44b2d4:	and	w0, w0, #0xff
  44b2d8:	cmp	w2, #0x5f
  44b2dc:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  44b2e0:	b.hi	44b318 <ferror@plt+0x485e8>  // b.pmore
  44b2e4:	mov	w1, #0x0                   	// #0
  44b2e8:	cmp	w2, #0x5f
  44b2ec:	b.ne	44b384 <ferror@plt+0x48654>  // b.any
  44b2f0:	ldr	w0, [x19, #56]
  44b2f4:	mov	x20, #0x0                   	// #0
  44b2f8:	cmp	w0, w1
  44b2fc:	b.ls	44b308 <ferror@plt+0x485d8>  // b.plast
  44b300:	ldr	x0, [x19, #48]
  44b304:	ldr	x20, [x0, w1, uxtw #3]
  44b308:	mov	x0, x20
  44b30c:	ldp	x19, x20, [sp, #16]
  44b310:	ldp	x29, x30, [sp], #64
  44b314:	ret
  44b318:	sub	w3, w2, #0x41
  44b31c:	and	w3, w3, #0xff
  44b320:	mov	w0, #0x0                   	// #0
  44b324:	cmp	w3, #0x19
  44b328:	b.ls	44b338 <ferror@plt+0x48608>  // b.plast
  44b32c:	stp	x21, x22, [sp, #32]
  44b330:	b	44b3b0 <ferror@plt+0x48680>
  44b334:	mov	w0, w1
  44b338:	sub	w1, w2, #0x30
  44b33c:	and	w1, w1, #0xff
  44b340:	cmp	w1, #0x9
  44b344:	b.hi	44b38c <ferror@plt+0x4865c>  // b.pmore
  44b348:	add	w1, w0, w0, lsl #3
  44b34c:	add	w1, w2, w1, lsl #2
  44b350:	sub	w1, w1, #0x30
  44b354:	cmp	w0, w1
  44b358:	b.hi	44b4dc <ferror@plt+0x487ac>  // b.pmore
  44b35c:	ldr	x0, [x19, #24]
  44b360:	ldrb	w2, [x0]
  44b364:	cbz	w2, 44b334 <ferror@plt+0x48604>
  44b368:	add	x2, x0, #0x1
  44b36c:	str	x2, [x19, #24]
  44b370:	ldrb	w2, [x0]
  44b374:	cmp	w2, #0x5f
  44b378:	b.ne	44b334 <ferror@plt+0x48604>  // b.any
  44b37c:	add	w1, w1, #0x1
  44b380:	b	44b2f0 <ferror@plt+0x485c0>
  44b384:	mov	w0, #0x0                   	// #0
  44b388:	b	44b338 <ferror@plt+0x48608>
  44b38c:	sub	w1, w2, #0x41
  44b390:	and	w1, w1, #0xff
  44b394:	cmp	w1, #0x19
  44b398:	b.hi	44b4d4 <ferror@plt+0x487a4>  // b.pmore
  44b39c:	add	w1, w0, w0, lsl #3
  44b3a0:	add	w1, w2, w1, lsl #2
  44b3a4:	sub	w1, w1, #0x37
  44b3a8:	b	44b354 <ferror@plt+0x48624>
  44b3ac:	stp	x21, x22, [sp, #32]
  44b3b0:	ldr	w21, [x19, #16]
  44b3b4:	ands	w0, w21, #0x8
  44b3b8:	ubfx	x21, x21, #3, #1
  44b3bc:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  44b3c0:	b.eq	44b3dc <ferror@plt+0x486ac>  // b.none
  44b3c4:	ldr	x0, [x19, #24]
  44b3c8:	ldrb	w0, [x0]
  44b3cc:	sub	w0, w0, #0x43
  44b3d0:	and	w0, w0, #0xff
  44b3d4:	cmp	w0, #0x1
  44b3d8:	csinc	w21, w21, wzr, hi  // hi = pmore
  44b3dc:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44b3e0:	add	x20, x20, #0x78
  44b3e4:	add	x20, x20, #0x440
  44b3e8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44b3ec:	add	x1, x1, #0x78
  44b3f0:	add	x1, x1, #0x5c8
  44b3f4:	ldrb	w0, [x20]
  44b3f8:	cmp	w0, w2
  44b3fc:	b.eq	44b418 <ferror@plt+0x486e8>  // b.none
  44b400:	add	x20, x20, #0x38
  44b404:	cmp	x20, x1
  44b408:	b.ne	44b3f4 <ferror@plt+0x486c4>  // b.any
  44b40c:	mov	x20, #0x0                   	// #0
  44b410:	ldp	x21, x22, [sp, #32]
  44b414:	b	44b308 <ferror@plt+0x485d8>
  44b418:	ldr	x22, [x20, #40]
  44b41c:	cbz	x22, 44b44c <ferror@plt+0x4871c>
  44b420:	str	x23, [sp, #48]
  44b424:	ldr	w23, [x20, #48]
  44b428:	mov	x0, x19
  44b42c:	bl	444a1c <ferror@plt+0x41cec>
  44b430:	cbz	x0, 44b444 <ferror@plt+0x48714>
  44b434:	mov	w1, #0x18                  	// #24
  44b438:	str	w1, [x0]
  44b43c:	str	x22, [x0, #8]
  44b440:	str	w23, [x0, #16]
  44b444:	str	x0, [x19, #64]
  44b448:	ldr	x23, [sp, #48]
  44b44c:	cbz	w21, 44b49c <ferror@plt+0x4876c>
  44b450:	ldr	x22, [x20, #24]
  44b454:	ldr	w21, [x20, #32]
  44b458:	ldr	w0, [x19, #72]
  44b45c:	add	w0, w0, w21
  44b460:	str	w0, [x19, #72]
  44b464:	mov	x0, x19
  44b468:	bl	444a1c <ferror@plt+0x41cec>
  44b46c:	mov	x20, x0
  44b470:	cbz	x0, 44b484 <ferror@plt+0x48754>
  44b474:	mov	w0, #0x18                  	// #24
  44b478:	str	w0, [x20]
  44b47c:	str	x22, [x20, #8]
  44b480:	str	w21, [x20, #16]
  44b484:	ldr	x0, [x19, #24]
  44b488:	ldrb	w0, [x0]
  44b48c:	cmp	w0, #0x42
  44b490:	b.eq	44b4a8 <ferror@plt+0x48778>  // b.none
  44b494:	ldp	x21, x22, [sp, #32]
  44b498:	b	44b308 <ferror@plt+0x485d8>
  44b49c:	ldr	x22, [x20, #8]
  44b4a0:	ldr	w21, [x20, #16]
  44b4a4:	b	44b458 <ferror@plt+0x48728>
  44b4a8:	mov	x1, x20
  44b4ac:	mov	x0, x19
  44b4b0:	bl	44b210 <ferror@plt+0x484e0>
  44b4b4:	mov	x20, x0
  44b4b8:	mov	x1, x0
  44b4bc:	mov	x0, x19
  44b4c0:	bl	445090 <ferror@plt+0x42360>
  44b4c4:	cmp	w0, #0x0
  44b4c8:	csel	x20, x20, xzr, ne  // ne = any
  44b4cc:	ldp	x21, x22, [sp, #32]
  44b4d0:	b	44b308 <ferror@plt+0x485d8>
  44b4d4:	mov	x20, #0x0                   	// #0
  44b4d8:	b	44b308 <ferror@plt+0x485d8>
  44b4dc:	mov	x20, #0x0                   	// #0
  44b4e0:	b	44b308 <ferror@plt+0x485d8>
  44b4e4:	cmp	w1, #0x0
  44b4e8:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  44b4ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44b4f0:	b.eq	44b510 <ferror@plt+0x487e0>  // b.none
  44b4f4:	str	wzr, [x0, #4]
  44b4f8:	mov	w3, #0x33                  	// #51
  44b4fc:	str	w3, [x0]
  44b500:	str	w1, [x0, #8]
  44b504:	str	x2, [x0, #16]
  44b508:	mov	w0, #0x1                   	// #1
  44b50c:	ret
  44b510:	mov	w0, #0x0                   	// #0
  44b514:	b	44b50c <ferror@plt+0x487dc>
  44b518:	mov	x3, x0
  44b51c:	cmp	x0, #0x0
  44b520:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  44b524:	mov	w0, #0x0                   	// #0
  44b528:	b.eq	44b554 <ferror@plt+0x48824>  // b.none
  44b52c:	sub	w4, w1, #0x1
  44b530:	mov	w0, #0x0                   	// #0
  44b534:	cmp	w4, #0x4
  44b538:	b.hi	44b554 <ferror@plt+0x48824>  // b.pmore
  44b53c:	str	wzr, [x3, #4]
  44b540:	mov	w0, #0x7                   	// #7
  44b544:	str	w0, [x3]
  44b548:	str	w1, [x3, #8]
  44b54c:	str	x2, [x3, #16]
  44b550:	mov	w0, #0x1                   	// #1
  44b554:	ret
  44b558:	mov	x3, x0
  44b55c:	cmp	x0, #0x0
  44b560:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  44b564:	mov	w0, #0x0                   	// #0
  44b568:	b.eq	44b594 <ferror@plt+0x48864>  // b.none
  44b56c:	sub	w4, w1, #0x1
  44b570:	mov	w0, #0x0                   	// #0
  44b574:	cmp	w4, #0x4
  44b578:	b.hi	44b594 <ferror@plt+0x48864>  // b.pmore
  44b57c:	str	wzr, [x3, #4]
  44b580:	mov	w0, #0x8                   	// #8
  44b584:	str	w0, [x3]
  44b588:	str	w1, [x3, #8]
  44b58c:	str	x2, [x3, #16]
  44b590:	mov	w0, #0x1                   	// #1
  44b594:	ret
  44b598:	stp	x29, x30, [sp, #-80]!
  44b59c:	mov	x29, sp
  44b5a0:	stp	x19, x20, [sp, #16]
  44b5a4:	mov	x19, x0
  44b5a8:	bl	444e04 <ferror@plt+0x420d4>
  44b5ac:	cbnz	w0, 44b5dc <ferror@plt+0x488ac>
  44b5b0:	ldr	x0, [x19, #24]
  44b5b4:	ldrb	w2, [x0]
  44b5b8:	sub	w1, w2, #0x30
  44b5bc:	cmp	w1, #0x4a
  44b5c0:	b.hi	44bee0 <ferror@plt+0x491b0>  // b.pmore
  44b5c4:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44b5c8:	add	x3, x3, #0xfe0
  44b5cc:	ldrh	w1, [x3, w1, uxtw #1]
  44b5d0:	adr	x3, 44b5dc <ferror@plt+0x488ac>
  44b5d4:	add	x1, x3, w1, sxth #2
  44b5d8:	br	x1
  44b5dc:	mov	w2, #0x0                   	// #0
  44b5e0:	add	x1, sp, #0x48
  44b5e4:	mov	x0, x19
  44b5e8:	bl	44d090 <ferror@plt+0x4a360>
  44b5ec:	mov	x20, x0
  44b5f0:	cbz	x0, 44b6f0 <ferror@plt+0x489c0>
  44b5f4:	ldr	x0, [x19, #24]
  44b5f8:	ldrb	w0, [x0]
  44b5fc:	cmp	w0, #0x46
  44b600:	b.eq	44b644 <ferror@plt+0x48914>  // b.none
  44b604:	mov	x0, x19
  44b608:	bl	44b598 <ferror@plt+0x48868>
  44b60c:	str	x0, [x20]
  44b610:	ldr	x0, [x20]
  44b614:	cbz	x0, 44bed8 <ferror@plt+0x491a8>
  44b618:	ldr	w1, [x0]
  44b61c:	sub	w1, w1, #0x1f
  44b620:	cmp	w1, #0x1
  44b624:	b.ls	44b654 <ferror@plt+0x48924>  // b.plast
  44b628:	ldr	x1, [sp, #72]
  44b62c:	mov	x0, x19
  44b630:	bl	445090 <ferror@plt+0x42360>
  44b634:	cmp	w0, #0x0
  44b638:	ldr	x20, [sp, #72]
  44b63c:	csel	x20, x20, xzr, ne  // ne = any
  44b640:	b	44b6f0 <ferror@plt+0x489c0>
  44b644:	mov	x0, x19
  44b648:	bl	44c740 <ferror@plt+0x49a10>
  44b64c:	str	x0, [x20]
  44b650:	b	44b610 <ferror@plt+0x488e0>
  44b654:	ldr	x1, [x0, #8]
  44b658:	ldr	x2, [sp, #72]
  44b65c:	str	x2, [x0, #8]
  44b660:	ldr	x0, [x20]
  44b664:	str	x0, [sp, #72]
  44b668:	str	x1, [x20]
  44b66c:	b	44b628 <ferror@plt+0x488f8>
  44b670:	sub	w2, w2, #0x61
  44b674:	sbfiz	x2, x2, #5, #32
  44b678:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44b67c:	add	x1, x1, #0x78
  44b680:	add	x1, x1, x2
  44b684:	mov	x0, x19
  44b688:	bl	444b0c <ferror@plt+0x41ddc>
  44b68c:	str	x0, [sp, #72]
  44b690:	ldr	x1, [x0, #8]
  44b694:	ldr	w0, [x19, #72]
  44b698:	ldr	w1, [x1, #8]
  44b69c:	add	w0, w0, w1
  44b6a0:	str	w0, [x19, #72]
  44b6a4:	ldr	x0, [x19, #24]
  44b6a8:	add	x0, x0, #0x1
  44b6ac:	str	x0, [x19, #24]
  44b6b0:	b	44b6ec <ferror@plt+0x489bc>
  44b6b4:	add	x0, x0, #0x1
  44b6b8:	str	x0, [x19, #24]
  44b6bc:	mov	x0, x19
  44b6c0:	bl	44b10c <ferror@plt+0x483dc>
  44b6c4:	mov	x3, #0x0                   	// #0
  44b6c8:	mov	x2, x0
  44b6cc:	mov	w1, #0x28                  	// #40
  44b6d0:	mov	x0, x19
  44b6d4:	bl	444a5c <ferror@plt+0x41d2c>
  44b6d8:	str	x0, [sp, #72]
  44b6dc:	ldr	x1, [sp, #72]
  44b6e0:	mov	x0, x19
  44b6e4:	bl	445090 <ferror@plt+0x42360>
  44b6e8:	cbz	w0, 44bef0 <ferror@plt+0x491c0>
  44b6ec:	ldr	x20, [sp, #72]
  44b6f0:	mov	x0, x20
  44b6f4:	ldp	x19, x20, [sp, #16]
  44b6f8:	ldp	x29, x30, [sp], #80
  44b6fc:	ret
  44b700:	mov	x0, x19
  44b704:	bl	44c740 <ferror@plt+0x49a10>
  44b708:	str	x0, [sp, #72]
  44b70c:	b	44b6dc <ferror@plt+0x489ac>
  44b710:	mov	x0, x19
  44b714:	bl	44d324 <ferror@plt+0x4a5f4>
  44b718:	str	x0, [sp, #72]
  44b71c:	b	44b6dc <ferror@plt+0x489ac>
  44b720:	add	x1, x0, #0x1
  44b724:	str	x1, [x19, #24]
  44b728:	ldrb	w0, [x0, #1]
  44b72c:	cmp	w0, #0x5f
  44b730:	b.eq	44b7cc <ferror@plt+0x48a9c>  // b.none
  44b734:	sub	w0, w0, #0x30
  44b738:	and	w0, w0, #0xff
  44b73c:	cmp	w0, #0x9
  44b740:	b.hi	44b7b8 <ferror@plt+0x48a88>  // b.pmore
  44b744:	ldr	x0, [x19, #24]
  44b748:	add	x2, x0, #0x1
  44b74c:	str	x2, [x19, #24]
  44b750:	ldrb	w0, [x0, #1]
  44b754:	sub	w0, w0, #0x30
  44b758:	and	w0, w0, #0xff
  44b75c:	cmp	w0, #0x9
  44b760:	b.ls	44b744 <ferror@plt+0x48a14>  // b.plast
  44b764:	sub	w2, w2, w1
  44b768:	mov	x0, x19
  44b76c:	bl	44b0c8 <ferror@plt+0x48398>
  44b770:	mov	x20, x0
  44b774:	cbz	x0, 44b7b0 <ferror@plt+0x48a80>
  44b778:	ldr	x0, [x19, #24]
  44b77c:	ldrb	w1, [x0]
  44b780:	cmp	w1, #0x5f
  44b784:	b.ne	44b7d4 <ferror@plt+0x48aa4>  // b.any
  44b788:	add	x0, x0, #0x1
  44b78c:	str	x0, [x19, #24]
  44b790:	mov	x0, x19
  44b794:	bl	44b598 <ferror@plt+0x48868>
  44b798:	mov	x3, x0
  44b79c:	mov	x2, x20
  44b7a0:	mov	w1, #0x2a                  	// #42
  44b7a4:	mov	x0, x19
  44b7a8:	bl	444a5c <ferror@plt+0x41d2c>
  44b7ac:	mov	x20, x0
  44b7b0:	str	x20, [sp, #72]
  44b7b4:	b	44b6dc <ferror@plt+0x489ac>
  44b7b8:	mov	x0, x19
  44b7bc:	bl	44c818 <ferror@plt+0x49ae8>
  44b7c0:	mov	x20, x0
  44b7c4:	cbnz	x0, 44b778 <ferror@plt+0x48a48>
  44b7c8:	b	44b7b0 <ferror@plt+0x48a80>
  44b7cc:	mov	x20, #0x0                   	// #0
  44b7d0:	b	44b778 <ferror@plt+0x48a48>
  44b7d4:	mov	x20, #0x0                   	// #0
  44b7d8:	b	44b7b0 <ferror@plt+0x48a80>
  44b7dc:	add	x0, x0, #0x1
  44b7e0:	str	x0, [x19, #24]
  44b7e4:	mov	x0, x19
  44b7e8:	bl	44b598 <ferror@plt+0x48868>
  44b7ec:	mov	x20, x0
  44b7f0:	cbz	x0, 44b818 <ferror@plt+0x48ae8>
  44b7f4:	mov	x0, x19
  44b7f8:	bl	44b598 <ferror@plt+0x48868>
  44b7fc:	mov	x3, x0
  44b800:	cbz	x0, 44b820 <ferror@plt+0x48af0>
  44b804:	mov	x2, x20
  44b808:	mov	w1, #0x2b                  	// #43
  44b80c:	mov	x0, x19
  44b810:	bl	444a5c <ferror@plt+0x41d2c>
  44b814:	mov	x20, x0
  44b818:	str	x20, [sp, #72]
  44b81c:	b	44b6dc <ferror@plt+0x489ac>
  44b820:	mov	x20, x0
  44b824:	b	44b818 <ferror@plt+0x48ae8>
  44b828:	mov	x0, x19
  44b82c:	bl	444f44 <ferror@plt+0x42214>
  44b830:	str	x0, [sp, #72]
  44b834:	ldr	x20, [x19, #24]
  44b838:	ldrb	w1, [x20]
  44b83c:	cmp	w1, #0x49
  44b840:	b.ne	44b6dc <ferror@plt+0x489ac>  // b.any
  44b844:	ldr	w1, [x19, #80]
  44b848:	cbnz	w1, 44b888 <ferror@plt+0x48b58>
  44b84c:	mov	x1, x0
  44b850:	mov	x0, x19
  44b854:	bl	445090 <ferror@plt+0x42360>
  44b858:	mov	x20, #0x0                   	// #0
  44b85c:	cbz	w0, 44b6f0 <ferror@plt+0x489c0>
  44b860:	ldr	x20, [sp, #72]
  44b864:	mov	x0, x19
  44b868:	bl	44e490 <ferror@plt+0x4b760>
  44b86c:	mov	x3, x0
  44b870:	mov	x2, x20
  44b874:	mov	w1, #0x4                   	// #4
  44b878:	mov	x0, x19
  44b87c:	bl	444a5c <ferror@plt+0x41d2c>
  44b880:	str	x0, [sp, #72]
  44b884:	b	44b6dc <ferror@plt+0x489ac>
  44b888:	stp	x21, x22, [sp, #32]
  44b88c:	stp	x23, x24, [sp, #48]
  44b890:	ldr	w24, [x19, #40]
  44b894:	ldr	w23, [x19, #56]
  44b898:	ldr	w22, [x19, #72]
  44b89c:	mov	x0, x19
  44b8a0:	bl	44e490 <ferror@plt+0x4b760>
  44b8a4:	mov	x21, x0
  44b8a8:	ldr	x0, [x19, #24]
  44b8ac:	ldrb	w0, [x0]
  44b8b0:	cmp	w0, #0x49
  44b8b4:	b.eq	44b8d4 <ferror@plt+0x48ba4>  // b.none
  44b8b8:	str	x20, [x19, #24]
  44b8bc:	str	w24, [x19, #40]
  44b8c0:	str	w23, [x19, #56]
  44b8c4:	str	w22, [x19, #72]
  44b8c8:	ldp	x21, x22, [sp, #32]
  44b8cc:	ldp	x23, x24, [sp, #48]
  44b8d0:	b	44b6dc <ferror@plt+0x489ac>
  44b8d4:	ldr	x1, [sp, #72]
  44b8d8:	mov	x0, x19
  44b8dc:	bl	445090 <ferror@plt+0x42360>
  44b8e0:	cbz	w0, 44b908 <ferror@plt+0x48bd8>
  44b8e4:	mov	x3, x21
  44b8e8:	ldr	x2, [sp, #72]
  44b8ec:	mov	w1, #0x4                   	// #4
  44b8f0:	mov	x0, x19
  44b8f4:	bl	444a5c <ferror@plt+0x41d2c>
  44b8f8:	str	x0, [sp, #72]
  44b8fc:	ldp	x21, x22, [sp, #32]
  44b900:	ldp	x23, x24, [sp, #48]
  44b904:	b	44b6dc <ferror@plt+0x489ac>
  44b908:	mov	x20, #0x0                   	// #0
  44b90c:	ldp	x21, x22, [sp, #32]
  44b910:	ldp	x23, x24, [sp, #48]
  44b914:	b	44b6f0 <ferror@plt+0x489c0>
  44b918:	ldrb	w0, [x0, #1]
  44b91c:	sub	w1, w0, #0x30
  44b920:	and	w1, w1, #0xff
  44b924:	cmp	w0, #0x5f
  44b928:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  44b92c:	b.ls	44b940 <ferror@plt+0x48c10>  // b.plast
  44b930:	sub	w0, w0, #0x41
  44b934:	and	w0, w0, #0xff
  44b938:	cmp	w0, #0x19
  44b93c:	b.hi	44b988 <ferror@plt+0x48c58>  // b.pmore
  44b940:	mov	w1, #0x0                   	// #0
  44b944:	mov	x0, x19
  44b948:	bl	44b290 <ferror@plt+0x48560>
  44b94c:	mov	x20, x0
  44b950:	str	x0, [sp, #72]
  44b954:	ldr	x0, [x19, #24]
  44b958:	ldrb	w0, [x0]
  44b95c:	cmp	w0, #0x49
  44b960:	b.ne	44b6ec <ferror@plt+0x489bc>  // b.any
  44b964:	mov	x0, x19
  44b968:	bl	44e490 <ferror@plt+0x4b760>
  44b96c:	mov	x3, x0
  44b970:	mov	x2, x20
  44b974:	mov	w1, #0x4                   	// #4
  44b978:	mov	x0, x19
  44b97c:	bl	444a5c <ferror@plt+0x41d2c>
  44b980:	str	x0, [sp, #72]
  44b984:	b	44b6dc <ferror@plt+0x489ac>
  44b988:	mov	x0, x19
  44b98c:	bl	44d324 <ferror@plt+0x4a5f4>
  44b990:	str	x0, [sp, #72]
  44b994:	cbz	x0, 44b6dc <ferror@plt+0x489ac>
  44b998:	ldr	w0, [x0]
  44b99c:	cmp	w0, #0x18
  44b9a0:	b.ne	44b6dc <ferror@plt+0x489ac>  // b.any
  44b9a4:	b	44b6ec <ferror@plt+0x489bc>
  44b9a8:	add	x0, x0, #0x1
  44b9ac:	str	x0, [x19, #24]
  44b9b0:	mov	x0, x19
  44b9b4:	bl	44b598 <ferror@plt+0x48868>
  44b9b8:	mov	x3, #0x0                   	// #0
  44b9bc:	mov	x2, x0
  44b9c0:	mov	w1, #0x24                  	// #36
  44b9c4:	mov	x0, x19
  44b9c8:	bl	444a5c <ferror@plt+0x41d2c>
  44b9cc:	str	x0, [sp, #72]
  44b9d0:	b	44b6dc <ferror@plt+0x489ac>
  44b9d4:	add	x0, x0, #0x1
  44b9d8:	str	x0, [x19, #24]
  44b9dc:	mov	x0, x19
  44b9e0:	bl	44b598 <ferror@plt+0x48868>
  44b9e4:	mov	x3, #0x0                   	// #0
  44b9e8:	mov	x2, x0
  44b9ec:	mov	w1, #0x22                  	// #34
  44b9f0:	mov	x0, x19
  44b9f4:	bl	444a5c <ferror@plt+0x41d2c>
  44b9f8:	str	x0, [sp, #72]
  44b9fc:	b	44b6dc <ferror@plt+0x489ac>
  44ba00:	add	x0, x0, #0x1
  44ba04:	str	x0, [x19, #24]
  44ba08:	mov	x0, x19
  44ba0c:	bl	44b598 <ferror@plt+0x48868>
  44ba10:	mov	x3, #0x0                   	// #0
  44ba14:	mov	x2, x0
  44ba18:	mov	w1, #0x23                  	// #35
  44ba1c:	mov	x0, x19
  44ba20:	bl	444a5c <ferror@plt+0x41d2c>
  44ba24:	str	x0, [sp, #72]
  44ba28:	b	44b6dc <ferror@plt+0x489ac>
  44ba2c:	add	x0, x0, #0x1
  44ba30:	str	x0, [x19, #24]
  44ba34:	mov	x0, x19
  44ba38:	bl	44b598 <ferror@plt+0x48868>
  44ba3c:	mov	x3, #0x0                   	// #0
  44ba40:	mov	x2, x0
  44ba44:	mov	w1, #0x25                  	// #37
  44ba48:	mov	x0, x19
  44ba4c:	bl	444a5c <ferror@plt+0x41d2c>
  44ba50:	str	x0, [sp, #72]
  44ba54:	b	44b6dc <ferror@plt+0x489ac>
  44ba58:	add	x0, x0, #0x1
  44ba5c:	str	x0, [x19, #24]
  44ba60:	mov	x0, x19
  44ba64:	bl	44b598 <ferror@plt+0x48868>
  44ba68:	mov	x3, #0x0                   	// #0
  44ba6c:	mov	x2, x0
  44ba70:	mov	w1, #0x26                  	// #38
  44ba74:	mov	x0, x19
  44ba78:	bl	444a5c <ferror@plt+0x41d2c>
  44ba7c:	str	x0, [sp, #72]
  44ba80:	b	44b6dc <ferror@plt+0x489ac>
  44ba84:	add	x0, x0, #0x1
  44ba88:	str	x0, [x19, #24]
  44ba8c:	mov	x0, x19
  44ba90:	bl	44b10c <ferror@plt+0x483dc>
  44ba94:	mov	x20, x0
  44ba98:	str	x0, [sp, #72]
  44ba9c:	ldr	x0, [x19, #24]
  44baa0:	ldrb	w0, [x0]
  44baa4:	cmp	w0, #0x49
  44baa8:	b.eq	44bad0 <ferror@plt+0x48da0>  // b.none
  44baac:	mov	x0, x19
  44bab0:	bl	44b598 <ferror@plt+0x48868>
  44bab4:	ldr	x3, [sp, #72]
  44bab8:	mov	x2, x0
  44babc:	mov	w1, #0x21                  	// #33
  44bac0:	mov	x0, x19
  44bac4:	bl	444a5c <ferror@plt+0x41d2c>
  44bac8:	str	x0, [sp, #72]
  44bacc:	b	44b6dc <ferror@plt+0x489ac>
  44bad0:	mov	x0, x19
  44bad4:	bl	44e490 <ferror@plt+0x4b760>
  44bad8:	mov	x3, x0
  44badc:	mov	x2, x20
  44bae0:	mov	w1, #0x4                   	// #4
  44bae4:	mov	x0, x19
  44bae8:	bl	444a5c <ferror@plt+0x41d2c>
  44baec:	str	x0, [sp, #72]
  44baf0:	b	44baac <ferror@plt+0x48d7c>
  44baf4:	add	x1, x0, #0x1
  44baf8:	str	x1, [x19, #24]
  44bafc:	ldrb	w1, [x0, #1]
  44bb00:	mov	x20, #0x0                   	// #0
  44bb04:	cbz	w1, 44b6f0 <ferror@plt+0x489c0>
  44bb08:	add	x1, x0, #0x2
  44bb0c:	str	x1, [x19, #24]
  44bb10:	ldrb	w1, [x0, #1]
  44bb14:	cmp	w1, #0x68
  44bb18:	b.eq	44bdec <ferror@plt+0x490bc>  // b.none
  44bb1c:	b.hi	44bc64 <ferror@plt+0x48f34>  // b.pmore
  44bb20:	cmp	w1, #0x63
  44bb24:	b.eq	44bda0 <ferror@plt+0x49070>  // b.none
  44bb28:	b.ls	44bb6c <ferror@plt+0x48e3c>  // b.plast
  44bb2c:	cmp	w1, #0x65
  44bb30:	b.eq	44bdbc <ferror@plt+0x4908c>  // b.none
  44bb34:	cmp	w1, #0x66
  44bb38:	b.ne	44bc28 <ferror@plt+0x48ef8>  // b.any
  44bb3c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44bb40:	add	x1, x1, #0x78
  44bb44:	add	x1, x1, #0x340
  44bb48:	mov	x0, x19
  44bb4c:	bl	444b0c <ferror@plt+0x41ddc>
  44bb50:	str	x0, [sp, #72]
  44bb54:	ldr	x1, [x0, #8]
  44bb58:	ldr	w0, [x19, #72]
  44bb5c:	ldr	w1, [x1, #8]
  44bb60:	add	w0, w0, w1
  44bb64:	str	w0, [x19, #72]
  44bb68:	b	44b6ec <ferror@plt+0x489bc>
  44bb6c:	cmp	w1, #0x54
  44bb70:	b.eq	44bd54 <ferror@plt+0x49024>  // b.none
  44bb74:	cmp	w1, #0x61
  44bb78:	b.ne	44bb98 <ferror@plt+0x48e68>  // b.any
  44bb7c:	mov	w2, #0x4                   	// #4
  44bb80:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  44bb84:	add	x1, x1, #0xab8
  44bb88:	mov	x0, x19
  44bb8c:	bl	44b0c8 <ferror@plt+0x48398>
  44bb90:	str	x0, [sp, #72]
  44bb94:	b	44b6ec <ferror@plt+0x489bc>
  44bb98:	cmp	w1, #0x46
  44bb9c:	b.ne	44b6f0 <ferror@plt+0x489c0>  // b.any
  44bba0:	mov	x0, x19
  44bba4:	bl	444a1c <ferror@plt+0x41cec>
  44bba8:	str	x0, [sp, #72]
  44bbac:	mov	w1, #0x2c                  	// #44
  44bbb0:	str	w1, [x0]
  44bbb4:	ldr	x0, [x19, #24]
  44bbb8:	ldrb	w0, [x0]
  44bbbc:	sub	w0, w0, #0x30
  44bbc0:	and	w0, w0, #0xff
  44bbc4:	cmp	w0, #0x9
  44bbc8:	cset	w2, ls  // ls = plast
  44bbcc:	ldr	x1, [sp, #72]
  44bbd0:	strh	w2, [x1, #16]
  44bbd4:	b.ls	44be7c <ferror@plt+0x4914c>  // b.plast
  44bbd8:	ldr	x20, [sp, #72]
  44bbdc:	mov	x0, x19
  44bbe0:	bl	44b598 <ferror@plt+0x48868>
  44bbe4:	str	x0, [x20, #8]
  44bbe8:	ldr	x0, [sp, #72]
  44bbec:	ldr	x20, [x0, #8]
  44bbf0:	cbz	x20, 44b6f0 <ferror@plt+0x489c0>
  44bbf4:	mov	x0, x19
  44bbf8:	bl	444c44 <ferror@plt+0x41f14>
  44bbfc:	ldr	x1, [x19, #24]
  44bc00:	ldrb	w0, [x1]
  44bc04:	cbz	w0, 44bc14 <ferror@plt+0x48ee4>
  44bc08:	add	x0, x1, #0x1
  44bc0c:	str	x0, [x19, #24]
  44bc10:	ldrb	w0, [x1]
  44bc14:	cmp	w0, #0x73
  44bc18:	cset	w1, eq  // eq = none
  44bc1c:	ldr	x0, [sp, #72]
  44bc20:	strh	w1, [x0, #18]
  44bc24:	b	44b6ec <ferror@plt+0x489bc>
  44bc28:	mov	x20, #0x0                   	// #0
  44bc2c:	cmp	w1, #0x64
  44bc30:	b.ne	44b6f0 <ferror@plt+0x489c0>  // b.any
  44bc34:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44bc38:	add	x1, x1, #0x78
  44bc3c:	add	x1, x1, #0x360
  44bc40:	mov	x0, x19
  44bc44:	bl	444b0c <ferror@plt+0x41ddc>
  44bc48:	str	x0, [sp, #72]
  44bc4c:	ldr	x1, [x0, #8]
  44bc50:	ldr	w0, [x19, #72]
  44bc54:	ldr	w1, [x1, #8]
  44bc58:	add	w0, w0, w1
  44bc5c:	str	w0, [x19, #72]
  44bc60:	b	44b6ec <ferror@plt+0x489bc>
  44bc64:	cmp	w1, #0x73
  44bc68:	b.eq	44be4c <ferror@plt+0x4911c>  // b.none
  44bc6c:	b.ls	44bcdc <ferror@plt+0x48fac>  // b.plast
  44bc70:	cmp	w1, #0x75
  44bc74:	b.eq	44be1c <ferror@plt+0x490ec>  // b.none
  44bc78:	cmp	w1, #0x76
  44bc7c:	b.ne	44bd4c <ferror@plt+0x4901c>  // b.any
  44bc80:	ldrb	w1, [x0, #2]
  44bc84:	cmp	w1, #0x5f
  44bc88:	b.eq	44be88 <ferror@plt+0x49158>  // b.none
  44bc8c:	mov	x0, x19
  44bc90:	bl	444d14 <ferror@plt+0x41fe4>
  44bc94:	mov	x20, x0
  44bc98:	cbz	x20, 44bcd4 <ferror@plt+0x48fa4>
  44bc9c:	ldr	x0, [x19, #24]
  44bca0:	ldrb	w1, [x0]
  44bca4:	cmp	w1, #0x5f
  44bca8:	b.ne	44bea0 <ferror@plt+0x49170>  // b.any
  44bcac:	add	x0, x0, #0x1
  44bcb0:	str	x0, [x19, #24]
  44bcb4:	mov	x0, x19
  44bcb8:	bl	44b598 <ferror@plt+0x48868>
  44bcbc:	mov	x3, x0
  44bcc0:	mov	x2, x20
  44bcc4:	mov	w1, #0x2d                  	// #45
  44bcc8:	mov	x0, x19
  44bccc:	bl	444a5c <ferror@plt+0x41d2c>
  44bcd0:	mov	x20, x0
  44bcd4:	str	x20, [sp, #72]
  44bcd8:	b	44b6dc <ferror@plt+0x489ac>
  44bcdc:	cmp	w1, #0x6e
  44bce0:	b.eq	44bea8 <ferror@plt+0x49178>  // b.none
  44bce4:	cmp	w1, #0x70
  44bce8:	b.ne	44bd10 <ferror@plt+0x48fe0>  // b.any
  44bcec:	mov	x0, x19
  44bcf0:	bl	44b598 <ferror@plt+0x48868>
  44bcf4:	mov	x3, #0x0                   	// #0
  44bcf8:	mov	x2, x0
  44bcfc:	mov	w1, #0x4b                  	// #75
  44bd00:	mov	x0, x19
  44bd04:	bl	444a5c <ferror@plt+0x41d2c>
  44bd08:	str	x0, [sp, #72]
  44bd0c:	b	44b6dc <ferror@plt+0x489ac>
  44bd10:	mov	x20, #0x0                   	// #0
  44bd14:	cmp	w1, #0x69
  44bd18:	b.ne	44b6f0 <ferror@plt+0x489c0>  // b.any
  44bd1c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44bd20:	add	x1, x1, #0x78
  44bd24:	add	x1, x1, #0x400
  44bd28:	mov	x0, x19
  44bd2c:	bl	444b0c <ferror@plt+0x41ddc>
  44bd30:	str	x0, [sp, #72]
  44bd34:	ldr	x1, [x0, #8]
  44bd38:	ldr	w0, [x19, #72]
  44bd3c:	ldr	w1, [x1, #8]
  44bd40:	add	w0, w0, w1
  44bd44:	str	w0, [x19, #72]
  44bd48:	b	44b6ec <ferror@plt+0x489bc>
  44bd4c:	cmp	w1, #0x74
  44bd50:	b.ne	44bee8 <ferror@plt+0x491b8>  // b.any
  44bd54:	mov	x0, x19
  44bd58:	bl	44c818 <ferror@plt+0x49ae8>
  44bd5c:	mov	x3, #0x0                   	// #0
  44bd60:	mov	x2, x0
  44bd64:	mov	w1, #0x43                  	// #67
  44bd68:	mov	x0, x19
  44bd6c:	bl	444a5c <ferror@plt+0x41d2c>
  44bd70:	str	x0, [sp, #72]
  44bd74:	cbz	x0, 44b6dc <ferror@plt+0x489ac>
  44bd78:	ldr	x0, [x19, #24]
  44bd7c:	ldrb	w1, [x0]
  44bd80:	cbz	w1, 44bd98 <ferror@plt+0x49068>
  44bd84:	add	x1, x0, #0x1
  44bd88:	str	x1, [x19, #24]
  44bd8c:	ldrb	w0, [x0]
  44bd90:	cmp	w0, #0x45
  44bd94:	b.eq	44b6dc <ferror@plt+0x489ac>  // b.none
  44bd98:	str	xzr, [sp, #72]
  44bd9c:	b	44b6dc <ferror@plt+0x489ac>
  44bda0:	mov	w2, #0xe                   	// #14
  44bda4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44bda8:	add	x1, x1, #0xa0
  44bdac:	mov	x0, x19
  44bdb0:	bl	44b0c8 <ferror@plt+0x48398>
  44bdb4:	str	x0, [sp, #72]
  44bdb8:	b	44b6ec <ferror@plt+0x489bc>
  44bdbc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44bdc0:	add	x1, x1, #0x78
  44bdc4:	add	x1, x1, #0x380
  44bdc8:	mov	x0, x19
  44bdcc:	bl	444b0c <ferror@plt+0x41ddc>
  44bdd0:	str	x0, [sp, #72]
  44bdd4:	ldr	x1, [x0, #8]
  44bdd8:	ldr	w0, [x19, #72]
  44bddc:	ldr	w1, [x1, #8]
  44bde0:	add	w0, w0, w1
  44bde4:	str	w0, [x19, #72]
  44bde8:	b	44b6ec <ferror@plt+0x489bc>
  44bdec:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44bdf0:	add	x1, x1, #0x78
  44bdf4:	add	x1, x1, #0x3a0
  44bdf8:	mov	x0, x19
  44bdfc:	bl	444b0c <ferror@plt+0x41ddc>
  44be00:	str	x0, [sp, #72]
  44be04:	ldr	x1, [x0, #8]
  44be08:	ldr	w0, [x19, #72]
  44be0c:	ldr	w1, [x1, #8]
  44be10:	add	w0, w0, w1
  44be14:	str	w0, [x19, #72]
  44be18:	b	44b6ec <ferror@plt+0x489bc>
  44be1c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44be20:	add	x1, x1, #0x78
  44be24:	add	x1, x1, #0x3c0
  44be28:	mov	x0, x19
  44be2c:	bl	444b0c <ferror@plt+0x41ddc>
  44be30:	str	x0, [sp, #72]
  44be34:	ldr	x1, [x0, #8]
  44be38:	ldr	w0, [x19, #72]
  44be3c:	ldr	w1, [x1, #8]
  44be40:	add	w0, w0, w1
  44be44:	str	w0, [x19, #72]
  44be48:	b	44b6ec <ferror@plt+0x489bc>
  44be4c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44be50:	add	x1, x1, #0x78
  44be54:	add	x1, x1, #0x3e0
  44be58:	mov	x0, x19
  44be5c:	bl	444b0c <ferror@plt+0x41ddc>
  44be60:	str	x0, [sp, #72]
  44be64:	ldr	x1, [x0, #8]
  44be68:	ldr	w0, [x19, #72]
  44be6c:	ldr	w1, [x1, #8]
  44be70:	add	w0, w0, w1
  44be74:	str	w0, [x19, #72]
  44be78:	b	44b6ec <ferror@plt+0x489bc>
  44be7c:	mov	x0, x19
  44be80:	bl	444c44 <ferror@plt+0x41f14>
  44be84:	b	44bbd8 <ferror@plt+0x48ea8>
  44be88:	add	x0, x0, #0x3
  44be8c:	str	x0, [x19, #24]
  44be90:	mov	x0, x19
  44be94:	bl	44c818 <ferror@plt+0x49ae8>
  44be98:	mov	x20, x0
  44be9c:	b	44bc98 <ferror@plt+0x48f68>
  44bea0:	mov	x20, #0x0                   	// #0
  44bea4:	b	44bcd4 <ferror@plt+0x48fa4>
  44bea8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44beac:	add	x1, x1, #0x78
  44beb0:	add	x1, x1, #0x420
  44beb4:	mov	x0, x19
  44beb8:	bl	444b0c <ferror@plt+0x41ddc>
  44bebc:	str	x0, [sp, #72]
  44bec0:	ldr	x1, [x0, #8]
  44bec4:	ldr	w0, [x19, #72]
  44bec8:	ldr	w1, [x1, #8]
  44becc:	add	w0, w0, w1
  44bed0:	str	w0, [x19, #72]
  44bed4:	b	44b6ec <ferror@plt+0x489bc>
  44bed8:	mov	x20, x0
  44bedc:	b	44b6f0 <ferror@plt+0x489c0>
  44bee0:	mov	x20, #0x0                   	// #0
  44bee4:	b	44b6f0 <ferror@plt+0x489c0>
  44bee8:	mov	x20, #0x0                   	// #0
  44beec:	b	44b6f0 <ferror@plt+0x489c0>
  44bef0:	mov	x20, #0x0                   	// #0
  44bef4:	b	44b6f0 <ferror@plt+0x489c0>
  44bef8:	stp	x29, x30, [sp, #-64]!
  44befc:	mov	x29, sp
  44bf00:	stp	x19, x20, [sp, #16]
  44bf04:	mov	x19, x0
  44bf08:	str	xzr, [sp, #56]
  44bf0c:	ldr	x0, [x0, #24]
  44bf10:	ldrb	w1, [x0]
  44bf14:	cmp	w1, #0x45
  44bf18:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44bf1c:	mov	w2, #0x2e                  	// #46
  44bf20:	ccmp	w1, w2, #0x4, ne  // ne = any
  44bf24:	b.eq	44c00c <ferror@plt+0x492dc>  // b.none
  44bf28:	stp	x21, x22, [sp, #32]
  44bf2c:	add	x21, sp, #0x38
  44bf30:	mov	w22, #0x4f                  	// #79
  44bf34:	mov	w20, w2
  44bf38:	b	44bf84 <ferror@plt+0x49254>
  44bf3c:	mov	x0, x19
  44bf40:	bl	44b598 <ferror@plt+0x48868>
  44bf44:	mov	x2, x0
  44bf48:	cbz	x0, 44c014 <ferror@plt+0x492e4>
  44bf4c:	mov	x3, #0x0                   	// #0
  44bf50:	mov	w1, w20
  44bf54:	mov	x0, x19
  44bf58:	bl	444a5c <ferror@plt+0x41d2c>
  44bf5c:	mov	x2, x0
  44bf60:	str	x0, [x21]
  44bf64:	cbz	x0, 44c01c <ferror@plt+0x492ec>
  44bf68:	add	x21, x0, #0x10
  44bf6c:	ldr	x0, [x19, #24]
  44bf70:	ldrb	w1, [x0]
  44bf74:	cmp	w1, #0x45
  44bf78:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44bf7c:	ccmp	w1, w20, #0x4, ne  // ne = any
  44bf80:	b.eq	44bf9c <ferror@plt+0x4926c>  // b.none
  44bf84:	cmp	w1, #0x52
  44bf88:	ccmp	w1, w22, #0x4, ne  // ne = any
  44bf8c:	b.ne	44bf3c <ferror@plt+0x4920c>  // b.any
  44bf90:	ldrb	w0, [x0, #1]
  44bf94:	cmp	w0, #0x45
  44bf98:	b.ne	44bf3c <ferror@plt+0x4920c>  // b.any
  44bf9c:	ldr	x2, [sp, #56]
  44bfa0:	cbz	x2, 44c024 <ferror@plt+0x492f4>
  44bfa4:	ldr	x0, [x2, #16]
  44bfa8:	cbz	x0, 44bfc0 <ferror@plt+0x49290>
  44bfac:	ldp	x21, x22, [sp, #32]
  44bfb0:	mov	x0, x2
  44bfb4:	ldp	x19, x20, [sp, #16]
  44bfb8:	ldp	x29, x30, [sp], #64
  44bfbc:	ret
  44bfc0:	ldr	x0, [x2, #8]
  44bfc4:	ldr	w1, [x0]
  44bfc8:	cmp	w1, #0x27
  44bfcc:	b.eq	44bfd8 <ferror@plt+0x492a8>  // b.none
  44bfd0:	ldp	x21, x22, [sp, #32]
  44bfd4:	b	44bfb0 <ferror@plt+0x49280>
  44bfd8:	ldr	x0, [x0, #8]
  44bfdc:	ldr	w1, [x0, #28]
  44bfe0:	cmp	w1, #0x9
  44bfe4:	b.eq	44bff0 <ferror@plt+0x492c0>  // b.none
  44bfe8:	ldp	x21, x22, [sp, #32]
  44bfec:	b	44bfb0 <ferror@plt+0x49280>
  44bff0:	ldr	w1, [x19, #72]
  44bff4:	ldr	w0, [x0, #8]
  44bff8:	sub	w0, w1, w0
  44bffc:	str	w0, [x19, #72]
  44c000:	str	xzr, [x2, #8]
  44c004:	ldp	x21, x22, [sp, #32]
  44c008:	b	44bfb0 <ferror@plt+0x49280>
  44c00c:	mov	x2, #0x0                   	// #0
  44c010:	b	44bfb0 <ferror@plt+0x49280>
  44c014:	ldp	x21, x22, [sp, #32]
  44c018:	b	44bfb0 <ferror@plt+0x49280>
  44c01c:	ldp	x21, x22, [sp, #32]
  44c020:	b	44bfb0 <ferror@plt+0x49280>
  44c024:	ldp	x21, x22, [sp, #32]
  44c028:	b	44bfb0 <ferror@plt+0x49280>
  44c02c:	stp	x29, x30, [sp, #-48]!
  44c030:	mov	x29, sp
  44c034:	stp	x19, x20, [sp, #16]
  44c038:	stp	x21, x22, [sp, #32]
  44c03c:	mov	x20, x0
  44c040:	ldr	x0, [x0, #24]
  44c044:	ldrb	w19, [x0]
  44c048:	cbz	w19, 44c0b4 <ferror@plt+0x49384>
  44c04c:	add	x1, x0, #0x1
  44c050:	str	x1, [x20, #24]
  44c054:	ldrb	w6, [x0]
  44c058:	ldrb	w19, [x0, #1]
  44c05c:	cbz	w19, 44c1cc <ferror@plt+0x4949c>
  44c060:	add	x1, x0, #0x2
  44c064:	str	x1, [x20, #24]
  44c068:	ldrb	w19, [x0, #1]
  44c06c:	cmp	w6, #0x76
  44c070:	b.ne	44c0b8 <ferror@plt+0x49388>  // b.any
  44c074:	sub	w0, w19, #0x30
  44c078:	and	w0, w0, #0xff
  44c07c:	cmp	w0, #0x9
  44c080:	b.hi	44c0c8 <ferror@plt+0x49398>  // b.pmore
  44c084:	mov	x0, x20
  44c088:	bl	44b10c <ferror@plt+0x483dc>
  44c08c:	mov	x21, x0
  44c090:	mov	x0, x20
  44c094:	bl	444a1c <ferror@plt+0x41cec>
  44c098:	mov	x22, x0
  44c09c:	mov	x2, x21
  44c0a0:	sub	w1, w19, #0x30
  44c0a4:	bl	44b4e4 <ferror@plt+0x487b4>
  44c0a8:	cmp	w0, #0x0
  44c0ac:	csel	x22, x22, xzr, ne  // ne = any
  44c0b0:	b	44c1b8 <ferror@plt+0x49488>
  44c0b4:	mov	w6, w19
  44c0b8:	cmp	w6, #0x63
  44c0bc:	mov	w0, #0x76                  	// #118
  44c0c0:	ccmp	w19, w0, #0x0, eq  // eq = none
  44c0c4:	b.eq	44c0e0 <ferror@plt+0x493b0>  // b.none
  44c0c8:	mov	w4, #0x43                  	// #67
  44c0cc:	mov	w3, #0x0                   	// #0
  44c0d0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44c0d4:	add	x0, x0, #0x78
  44c0d8:	add	x0, x0, #0x5c8
  44c0dc:	b	44c158 <ferror@plt+0x49428>
  44c0e0:	ldr	w19, [x20, #80]
  44c0e4:	ldr	w0, [x20, #76]
  44c0e8:	cmp	w0, #0x0
  44c0ec:	cset	w0, eq  // eq = none
  44c0f0:	str	w0, [x20, #80]
  44c0f4:	mov	x0, x20
  44c0f8:	bl	44b598 <ferror@plt+0x48868>
  44c0fc:	mov	x2, x0
  44c100:	ldr	w0, [x20, #80]
  44c104:	cbz	w0, 44c124 <ferror@plt+0x493f4>
  44c108:	mov	x3, #0x0                   	// #0
  44c10c:	mov	w1, #0x35                  	// #53
  44c110:	mov	x0, x20
  44c114:	bl	444a5c <ferror@plt+0x41d2c>
  44c118:	mov	x22, x0
  44c11c:	str	w19, [x20, #80]
  44c120:	b	44c1b8 <ferror@plt+0x49488>
  44c124:	mov	x3, #0x0                   	// #0
  44c128:	mov	w1, #0x34                  	// #52
  44c12c:	mov	x0, x20
  44c130:	bl	444a5c <ferror@plt+0x41d2c>
  44c134:	mov	x22, x0
  44c138:	b	44c11c <ferror@plt+0x493ec>
  44c13c:	ldrb	w2, [x5, #1]
  44c140:	cmp	w2, w19
  44c144:	b.eq	44c18c <ferror@plt+0x4945c>  // b.none
  44c148:	b.hi	44c1ac <ferror@plt+0x4947c>  // b.pmore
  44c14c:	add	w3, w1, #0x1
  44c150:	cmp	w3, w4
  44c154:	b.eq	44c1b4 <ferror@plt+0x49484>  // b.none
  44c158:	sub	w1, w4, w3
  44c15c:	add	w1, w1, w1, lsr #31
  44c160:	add	w1, w3, w1, asr #1
  44c164:	sbfiz	x2, x1, #1, #32
  44c168:	add	x2, x2, w1, sxtw
  44c16c:	add	x21, x0, x2, lsl #3
  44c170:	ldr	x5, [x0, x2, lsl #3]
  44c174:	ldrb	w2, [x5]
  44c178:	cmp	w2, w6
  44c17c:	b.eq	44c13c <ferror@plt+0x4940c>  // b.none
  44c180:	b.ls	44c14c <ferror@plt+0x4941c>  // b.plast
  44c184:	mov	w4, w1
  44c188:	b	44c150 <ferror@plt+0x49420>
  44c18c:	mov	x0, x20
  44c190:	bl	444a1c <ferror@plt+0x41cec>
  44c194:	mov	x22, x0
  44c198:	cbz	x0, 44c1b8 <ferror@plt+0x49488>
  44c19c:	mov	w0, #0x32                  	// #50
  44c1a0:	str	w0, [x22]
  44c1a4:	str	x21, [x22, #8]
  44c1a8:	b	44c1b8 <ferror@plt+0x49488>
  44c1ac:	mov	w4, w1
  44c1b0:	b	44c150 <ferror@plt+0x49420>
  44c1b4:	mov	x22, #0x0                   	// #0
  44c1b8:	mov	x0, x22
  44c1bc:	ldp	x19, x20, [sp, #16]
  44c1c0:	ldp	x21, x22, [sp, #32]
  44c1c4:	ldp	x29, x30, [sp], #48
  44c1c8:	ret
  44c1cc:	cmp	w6, #0x76
  44c1d0:	b.eq	44c0c8 <ferror@plt+0x49398>  // b.none
  44c1d4:	b	44c0b8 <ferror@plt+0x49388>
  44c1d8:	stp	x29, x30, [sp, #-48]!
  44c1dc:	mov	x29, sp
  44c1e0:	stp	x19, x20, [sp, #16]
  44c1e4:	mov	x19, x0
  44c1e8:	ldr	x2, [x0, #24]
  44c1ec:	ldrb	w1, [x2]
  44c1f0:	sub	w0, w1, #0x30
  44c1f4:	and	w0, w0, #0xff
  44c1f8:	cmp	w0, #0x9
  44c1fc:	b.ls	44c288 <ferror@plt+0x49558>  // b.plast
  44c200:	sub	w0, w1, #0x61
  44c204:	and	w0, w0, #0xff
  44c208:	cmp	w0, #0x19
  44c20c:	b.hi	44c2cc <ferror@plt+0x4959c>  // b.pmore
  44c210:	cmp	w1, #0x6f
  44c214:	b.eq	44c2b4 <ferror@plt+0x49584>  // b.none
  44c218:	mov	x0, x19
  44c21c:	bl	44c02c <ferror@plt+0x492fc>
  44c220:	mov	x20, x0
  44c224:	cbz	x0, 44c294 <ferror@plt+0x49564>
  44c228:	ldr	w0, [x0]
  44c22c:	cmp	w0, #0x32
  44c230:	b.ne	44c294 <ferror@plt+0x49564>  // b.any
  44c234:	ldr	x2, [x20, #8]
  44c238:	ldr	w0, [x19, #72]
  44c23c:	add	w1, w0, #0x7
  44c240:	ldr	w0, [x2, #16]
  44c244:	add	w0, w0, w1
  44c248:	str	w0, [x19, #72]
  44c24c:	ldr	x0, [x20, #8]
  44c250:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44c254:	add	x1, x1, #0xb0
  44c258:	ldr	x0, [x0]
  44c25c:	bl	402a20 <strcmp@plt>
  44c260:	cbnz	w0, 44c294 <ferror@plt+0x49564>
  44c264:	mov	x0, x19
  44c268:	bl	44b10c <ferror@plt+0x483dc>
  44c26c:	mov	x3, x0
  44c270:	mov	x2, x20
  44c274:	mov	w1, #0x37                  	// #55
  44c278:	mov	x0, x19
  44c27c:	bl	444a5c <ferror@plt+0x41d2c>
  44c280:	mov	x20, x0
  44c284:	b	44c294 <ferror@plt+0x49564>
  44c288:	mov	x0, x19
  44c28c:	bl	44b10c <ferror@plt+0x483dc>
  44c290:	mov	x20, x0
  44c294:	ldr	x0, [x19, #24]
  44c298:	ldrb	w0, [x0]
  44c29c:	cmp	w0, #0x42
  44c2a0:	b.eq	44c62c <ferror@plt+0x498fc>  // b.none
  44c2a4:	mov	x0, x20
  44c2a8:	ldp	x19, x20, [sp, #16]
  44c2ac:	ldp	x29, x30, [sp], #48
  44c2b0:	ret
  44c2b4:	ldrb	w0, [x2, #1]
  44c2b8:	cmp	w0, #0x6e
  44c2bc:	b.ne	44c218 <ferror@plt+0x494e8>  // b.any
  44c2c0:	add	x2, x2, #0x2
  44c2c4:	str	x2, [x19, #24]
  44c2c8:	b	44c218 <ferror@plt+0x494e8>
  44c2cc:	sub	w0, w1, #0x43
  44c2d0:	and	w0, w0, #0xff
  44c2d4:	cmp	w0, #0x1
  44c2d8:	b.ls	44c374 <ferror@plt+0x49644>  // b.plast
  44c2dc:	cmp	w1, #0x4c
  44c2e0:	b.eq	44c538 <ferror@plt+0x49808>  // b.none
  44c2e4:	mov	x20, #0x0                   	// #0
  44c2e8:	cmp	w1, #0x55
  44c2ec:	b.ne	44c2a4 <ferror@plt+0x49574>  // b.any
  44c2f0:	ldrb	w0, [x2, #1]
  44c2f4:	cmp	w0, #0x6c
  44c2f8:	b.eq	44c564 <ferror@plt+0x49834>  // b.none
  44c2fc:	cmp	w0, #0x74
  44c300:	b.ne	44c2a4 <ferror@plt+0x49574>  // b.any
  44c304:	add	x0, x2, #0x1
  44c308:	str	x0, [x19, #24]
  44c30c:	ldrb	w0, [x2, #1]
  44c310:	mov	x20, #0x0                   	// #0
  44c314:	cmp	w0, #0x74
  44c318:	b.ne	44c294 <ferror@plt+0x49564>  // b.any
  44c31c:	stp	x21, x22, [sp, #32]
  44c320:	add	x2, x2, #0x2
  44c324:	str	x2, [x19, #24]
  44c328:	mov	x0, x19
  44c32c:	bl	444ec8 <ferror@plt+0x42198>
  44c330:	mov	w21, w0
  44c334:	tbnz	w0, #31, 44c624 <ferror@plt+0x498f4>
  44c338:	mov	x0, x19
  44c33c:	bl	444a1c <ferror@plt+0x41cec>
  44c340:	mov	x20, x0
  44c344:	cbz	x0, 44c358 <ferror@plt+0x49628>
  44c348:	mov	w0, #0x48                  	// #72
  44c34c:	str	w0, [x20]
  44c350:	sxtw	x21, w21
  44c354:	str	x21, [x20, #8]
  44c358:	mov	x1, x20
  44c35c:	mov	x0, x19
  44c360:	bl	445090 <ferror@plt+0x42360>
  44c364:	cmp	w0, #0x0
  44c368:	csel	x20, x20, xzr, ne  // ne = any
  44c36c:	ldp	x21, x22, [sp, #32]
  44c370:	b	44c294 <ferror@plt+0x49564>
  44c374:	stp	x21, x22, [sp, #32]
  44c378:	ldr	x21, [x19, #64]
  44c37c:	cbz	x21, 44c3c0 <ferror@plt+0x49690>
  44c380:	ldr	w0, [x21]
  44c384:	cbnz	w0, 44c3b8 <ferror@plt+0x49688>
  44c388:	ldr	w0, [x19, #72]
  44c38c:	ldr	w1, [x21, #16]
  44c390:	add	w0, w0, w1
  44c394:	str	w0, [x19, #72]
  44c398:	ldrb	w0, [x2]
  44c39c:	cmp	w0, #0x43
  44c3a0:	b.eq	44c404 <ferror@plt+0x496d4>  // b.none
  44c3a4:	cmp	w0, #0x44
  44c3a8:	b.eq	44c3c8 <ferror@plt+0x49698>  // b.none
  44c3ac:	mov	x20, #0x0                   	// #0
  44c3b0:	ldp	x21, x22, [sp, #32]
  44c3b4:	b	44c294 <ferror@plt+0x49564>
  44c3b8:	cmp	w0, #0x18
  44c3bc:	b.eq	44c3f0 <ferror@plt+0x496c0>  // b.none
  44c3c0:	cmp	w1, #0x43
  44c3c4:	b.eq	44c404 <ferror@plt+0x496d4>  // b.none
  44c3c8:	ldrb	w0, [x2, #1]
  44c3cc:	cmp	w0, #0x32
  44c3d0:	b.eq	44c520 <ferror@plt+0x497f0>  // b.none
  44c3d4:	b.ls	44c4d0 <ferror@plt+0x497a0>  // b.plast
  44c3d8:	cmp	w0, #0x34
  44c3dc:	b.eq	44c530 <ferror@plt+0x49800>  // b.none
  44c3e0:	cmp	w0, #0x35
  44c3e4:	b.ne	44c5fc <ferror@plt+0x498cc>  // b.any
  44c3e8:	mov	w22, #0x5                   	// #5
  44c3ec:	b	44c4e4 <ferror@plt+0x497b4>
  44c3f0:	ldr	w0, [x19, #72]
  44c3f4:	ldr	w1, [x21, #16]
  44c3f8:	add	w0, w0, w1
  44c3fc:	str	w0, [x19, #72]
  44c400:	b	44c398 <ferror@plt+0x49668>
  44c404:	ldrb	w0, [x2, #1]
  44c408:	cmp	w0, #0x49
  44c40c:	b.eq	44c438 <ferror@plt+0x49708>  // b.none
  44c410:	cmp	w0, #0x33
  44c414:	b.eq	44c4ac <ferror@plt+0x4977c>  // b.none
  44c418:	b.ls	44c640 <ferror@plt+0x49910>  // b.plast
  44c41c:	cmp	w0, #0x34
  44c420:	b.eq	44c4c4 <ferror@plt+0x49794>  // b.none
  44c424:	mov	w1, #0x0                   	// #0
  44c428:	cmp	w0, #0x35
  44c42c:	b.ne	44c69c <ferror@plt+0x4996c>  // b.any
  44c430:	mov	w21, #0x5                   	// #5
  44c434:	b	44c658 <ferror@plt+0x49928>
  44c438:	add	x1, x2, #0x1
  44c43c:	str	x1, [x19, #24]
  44c440:	ldrb	w0, [x2, #2]
  44c444:	cmp	w0, #0x33
  44c448:	b.eq	44c4a0 <ferror@plt+0x49770>  // b.none
  44c44c:	b.hi	44c478 <ferror@plt+0x49748>  // b.pmore
  44c450:	cmp	w0, #0x31
  44c454:	b.eq	44c6a8 <ferror@plt+0x49978>  // b.none
  44c458:	cmp	w0, #0x32
  44c45c:	b.ne	44c46c <ferror@plt+0x4973c>  // b.any
  44c460:	mov	x2, x1
  44c464:	mov	w1, #0x1                   	// #1
  44c468:	b	44c654 <ferror@plt+0x49924>
  44c46c:	mov	x20, #0x0                   	// #0
  44c470:	ldp	x21, x22, [sp, #32]
  44c474:	b	44c294 <ferror@plt+0x49564>
  44c478:	cmp	w0, #0x34
  44c47c:	b.eq	44c4b8 <ferror@plt+0x49788>  // b.none
  44c480:	cmp	w0, #0x35
  44c484:	b.ne	44c494 <ferror@plt+0x49764>  // b.any
  44c488:	mov	x2, x1
  44c48c:	mov	w1, #0x1                   	// #1
  44c490:	b	44c430 <ferror@plt+0x49700>
  44c494:	mov	x20, #0x0                   	// #0
  44c498:	ldp	x21, x22, [sp, #32]
  44c49c:	b	44c294 <ferror@plt+0x49564>
  44c4a0:	mov	x2, x1
  44c4a4:	mov	w1, #0x1                   	// #1
  44c4a8:	b	44c4b0 <ferror@plt+0x49780>
  44c4ac:	mov	w1, #0x0                   	// #0
  44c4b0:	mov	w21, #0x3                   	// #3
  44c4b4:	b	44c658 <ferror@plt+0x49928>
  44c4b8:	mov	x2, x1
  44c4bc:	mov	w1, #0x1                   	// #1
  44c4c0:	b	44c4c8 <ferror@plt+0x49798>
  44c4c4:	mov	w1, #0x0                   	// #0
  44c4c8:	mov	w21, #0x4                   	// #4
  44c4cc:	b	44c658 <ferror@plt+0x49928>
  44c4d0:	cmp	w0, #0x30
  44c4d4:	b.eq	44c528 <ferror@plt+0x497f8>  // b.none
  44c4d8:	mov	w22, #0x2                   	// #2
  44c4dc:	cmp	w0, #0x31
  44c4e0:	b.ne	44c514 <ferror@plt+0x497e4>  // b.any
  44c4e4:	add	x2, x2, #0x2
  44c4e8:	str	x2, [x19, #24]
  44c4ec:	mov	x0, x19
  44c4f0:	bl	444a1c <ferror@plt+0x41cec>
  44c4f4:	mov	x20, x0
  44c4f8:	mov	x2, x21
  44c4fc:	mov	w1, w22
  44c500:	bl	44b558 <ferror@plt+0x48828>
  44c504:	cmp	w0, #0x0
  44c508:	csel	x20, x20, xzr, ne  // ne = any
  44c50c:	ldp	x21, x22, [sp, #32]
  44c510:	b	44c294 <ferror@plt+0x49564>
  44c514:	mov	x20, #0x0                   	// #0
  44c518:	ldp	x21, x22, [sp, #32]
  44c51c:	b	44c294 <ferror@plt+0x49564>
  44c520:	mov	w22, #0x3                   	// #3
  44c524:	b	44c4e4 <ferror@plt+0x497b4>
  44c528:	mov	w22, #0x1                   	// #1
  44c52c:	b	44c4e4 <ferror@plt+0x497b4>
  44c530:	mov	w22, #0x4                   	// #4
  44c534:	b	44c4e4 <ferror@plt+0x497b4>
  44c538:	add	x2, x2, #0x1
  44c53c:	str	x2, [x19, #24]
  44c540:	mov	x0, x19
  44c544:	bl	44b10c <ferror@plt+0x483dc>
  44c548:	mov	x20, x0
  44c54c:	cbz	x0, 44c2a4 <ferror@plt+0x49574>
  44c550:	mov	x0, x19
  44c554:	bl	444ff0 <ferror@plt+0x422c0>
  44c558:	cbnz	w0, 44c294 <ferror@plt+0x49564>
  44c55c:	mov	x20, #0x0                   	// #0
  44c560:	b	44c2a4 <ferror@plt+0x49574>
  44c564:	add	x0, x2, #0x1
  44c568:	str	x0, [x19, #24]
  44c56c:	ldrb	w0, [x2, #1]
  44c570:	mov	x20, #0x0                   	// #0
  44c574:	cmp	w0, #0x6c
  44c578:	b.ne	44c294 <ferror@plt+0x49564>  // b.any
  44c57c:	stp	x21, x22, [sp, #32]
  44c580:	add	x2, x2, #0x2
  44c584:	str	x2, [x19, #24]
  44c588:	mov	x0, x19
  44c58c:	bl	44bef8 <ferror@plt+0x491c8>
  44c590:	mov	x21, x0
  44c594:	cbz	x0, 44c608 <ferror@plt+0x498d8>
  44c598:	ldr	x0, [x19, #24]
  44c59c:	ldrb	w1, [x0]
  44c5a0:	cmp	w1, #0x45
  44c5a4:	b.ne	44c614 <ferror@plt+0x498e4>  // b.any
  44c5a8:	add	x0, x0, #0x1
  44c5ac:	str	x0, [x19, #24]
  44c5b0:	mov	x0, x19
  44c5b4:	bl	444ec8 <ferror@plt+0x42198>
  44c5b8:	mov	w22, w0
  44c5bc:	tbnz	w0, #31, 44c61c <ferror@plt+0x498ec>
  44c5c0:	mov	x0, x19
  44c5c4:	bl	444a1c <ferror@plt+0x41cec>
  44c5c8:	mov	x20, x0
  44c5cc:	cbz	x0, 44c5e0 <ferror@plt+0x498b0>
  44c5d0:	mov	w0, #0x46                  	// #70
  44c5d4:	str	w0, [x20]
  44c5d8:	str	x21, [x20, #8]
  44c5dc:	str	w22, [x20, #16]
  44c5e0:	mov	x1, x20
  44c5e4:	mov	x0, x19
  44c5e8:	bl	445090 <ferror@plt+0x42360>
  44c5ec:	cmp	w0, #0x0
  44c5f0:	csel	x20, x20, xzr, ne  // ne = any
  44c5f4:	ldp	x21, x22, [sp, #32]
  44c5f8:	b	44c294 <ferror@plt+0x49564>
  44c5fc:	mov	x20, #0x0                   	// #0
  44c600:	ldp	x21, x22, [sp, #32]
  44c604:	b	44c294 <ferror@plt+0x49564>
  44c608:	mov	x20, x0
  44c60c:	ldp	x21, x22, [sp, #32]
  44c610:	b	44c294 <ferror@plt+0x49564>
  44c614:	ldp	x21, x22, [sp, #32]
  44c618:	b	44c294 <ferror@plt+0x49564>
  44c61c:	ldp	x21, x22, [sp, #32]
  44c620:	b	44c294 <ferror@plt+0x49564>
  44c624:	ldp	x21, x22, [sp, #32]
  44c628:	b	44c294 <ferror@plt+0x49564>
  44c62c:	mov	x1, x20
  44c630:	mov	x0, x19
  44c634:	bl	44b210 <ferror@plt+0x484e0>
  44c638:	mov	x20, x0
  44c63c:	b	44c2a4 <ferror@plt+0x49574>
  44c640:	cmp	w0, #0x31
  44c644:	b.eq	44c6c0 <ferror@plt+0x49990>  // b.none
  44c648:	mov	w1, #0x0                   	// #0
  44c64c:	cmp	w0, #0x32
  44c650:	b.ne	44c690 <ferror@plt+0x49960>  // b.any
  44c654:	mov	w21, #0x2                   	// #2
  44c658:	add	x2, x2, #0x2
  44c65c:	str	x2, [x19, #24]
  44c660:	cbnz	w1, 44c6b4 <ferror@plt+0x49984>
  44c664:	ldr	x22, [x19, #64]
  44c668:	mov	x0, x19
  44c66c:	bl	444a1c <ferror@plt+0x41cec>
  44c670:	mov	x20, x0
  44c674:	mov	x2, x22
  44c678:	mov	w1, w21
  44c67c:	bl	44b518 <ferror@plt+0x487e8>
  44c680:	cmp	w0, #0x0
  44c684:	csel	x20, x20, xzr, ne  // ne = any
  44c688:	ldp	x21, x22, [sp, #32]
  44c68c:	b	44c294 <ferror@plt+0x49564>
  44c690:	mov	x20, #0x0                   	// #0
  44c694:	ldp	x21, x22, [sp, #32]
  44c698:	b	44c2a4 <ferror@plt+0x49574>
  44c69c:	mov	x20, #0x0                   	// #0
  44c6a0:	ldp	x21, x22, [sp, #32]
  44c6a4:	b	44c2a4 <ferror@plt+0x49574>
  44c6a8:	add	x2, x2, #0x3
  44c6ac:	str	x2, [x19, #24]
  44c6b0:	mov	w21, #0x1                   	// #1
  44c6b4:	mov	x0, x19
  44c6b8:	bl	44b598 <ferror@plt+0x48868>
  44c6bc:	b	44c664 <ferror@plt+0x49934>
  44c6c0:	add	x2, x2, #0x2
  44c6c4:	str	x2, [x19, #24]
  44c6c8:	mov	w21, #0x1                   	// #1
  44c6cc:	b	44c664 <ferror@plt+0x49934>
  44c6d0:	stp	x29, x30, [sp, #-32]!
  44c6d4:	mov	x29, sp
  44c6d8:	stp	x19, x20, [sp, #16]
  44c6dc:	mov	x19, x0
  44c6e0:	ldr	x0, [x0, #24]
  44c6e4:	ldrb	w2, [x0]
  44c6e8:	cmp	w2, #0x4a
  44c6ec:	b.eq	44c6fc <ferror@plt+0x499cc>  // b.none
  44c6f0:	cbnz	w1, 44c704 <ferror@plt+0x499d4>
  44c6f4:	mov	x20, #0x0                   	// #0
  44c6f8:	b	44c714 <ferror@plt+0x499e4>
  44c6fc:	add	x0, x0, #0x1
  44c700:	str	x0, [x19, #24]
  44c704:	mov	x0, x19
  44c708:	bl	44b598 <ferror@plt+0x48868>
  44c70c:	mov	x20, x0
  44c710:	cbz	x0, 44c734 <ferror@plt+0x49a04>
  44c714:	mov	x0, x19
  44c718:	bl	44bef8 <ferror@plt+0x491c8>
  44c71c:	cbz	x0, 44c734 <ferror@plt+0x49a04>
  44c720:	mov	x3, x0
  44c724:	mov	x2, x20
  44c728:	mov	w1, #0x29                  	// #41
  44c72c:	mov	x0, x19
  44c730:	bl	444a5c <ferror@plt+0x41d2c>
  44c734:	ldp	x19, x20, [sp, #16]
  44c738:	ldp	x29, x30, [sp], #32
  44c73c:	ret
  44c740:	stp	x29, x30, [sp, #-32]!
  44c744:	mov	x29, sp
  44c748:	str	x19, [sp, #16]
  44c74c:	mov	x19, x0
  44c750:	ldr	w0, [x0, #16]
  44c754:	tbnz	w0, #18, 44c800 <ferror@plt+0x49ad0>
  44c758:	ldr	w0, [x19, #84]
  44c75c:	cmp	w0, #0x800
  44c760:	b.hi	44c7f8 <ferror@plt+0x49ac8>  // b.pmore
  44c764:	add	w0, w0, #0x1
  44c768:	str	w0, [x19, #84]
  44c76c:	ldr	x1, [x19, #24]
  44c770:	ldrb	w2, [x1]
  44c774:	mov	x0, #0x0                   	// #0
  44c778:	cmp	w2, #0x46
  44c77c:	b.eq	44c798 <ferror@plt+0x49a68>  // b.none
  44c780:	ldr	w1, [x19, #84]
  44c784:	sub	w1, w1, #0x1
  44c788:	str	w1, [x19, #84]
  44c78c:	ldr	x19, [sp, #16]
  44c790:	ldp	x29, x30, [sp], #32
  44c794:	ret
  44c798:	add	x0, x1, #0x1
  44c79c:	str	x0, [x19, #24]
  44c7a0:	ldrb	w2, [x1, #1]
  44c7a4:	add	x1, x1, #0x2
  44c7a8:	cmp	w2, #0x59
  44c7ac:	csel	x1, x1, x0, eq  // eq = none
  44c7b0:	str	x1, [x19, #24]
  44c7b4:	mov	w1, #0x1                   	// #1
  44c7b8:	mov	x0, x19
  44c7bc:	bl	44c6d0 <ferror@plt+0x499a0>
  44c7c0:	mov	x1, x0
  44c7c4:	mov	x0, x19
  44c7c8:	bl	444e5c <ferror@plt+0x4212c>
  44c7cc:	ldr	x1, [x19, #24]
  44c7d0:	ldrb	w2, [x1]
  44c7d4:	cmp	w2, #0x45
  44c7d8:	b.eq	44c7ec <ferror@plt+0x49abc>  // b.none
  44c7dc:	mov	x0, #0x0                   	// #0
  44c7e0:	ldr	w1, [x19, #16]
  44c7e4:	tbz	w1, #18, 44c780 <ferror@plt+0x49a50>
  44c7e8:	b	44c78c <ferror@plt+0x49a5c>
  44c7ec:	add	x1, x1, #0x1
  44c7f0:	str	x1, [x19, #24]
  44c7f4:	b	44c7e0 <ferror@plt+0x49ab0>
  44c7f8:	mov	x0, #0x0                   	// #0
  44c7fc:	b	44c78c <ferror@plt+0x49a5c>
  44c800:	ldr	x1, [x19, #24]
  44c804:	ldrb	w0, [x1]
  44c808:	cmp	w0, #0x46
  44c80c:	b.eq	44c798 <ferror@plt+0x49a68>  // b.none
  44c810:	mov	x0, #0x0                   	// #0
  44c814:	b	44c78c <ferror@plt+0x49a5c>
  44c818:	stp	x29, x30, [sp, #-64]!
  44c81c:	mov	x29, sp
  44c820:	stp	x19, x20, [sp, #16]
  44c824:	stp	x21, x22, [sp, #32]
  44c828:	mov	x19, x0
  44c82c:	ldr	w21, [x0, #76]
  44c830:	mov	w0, #0x1                   	// #1
  44c834:	str	w0, [x19, #76]
  44c838:	ldr	x0, [x19, #24]
  44c83c:	ldrb	w1, [x0]
  44c840:	cmp	w1, #0x4c
  44c844:	b.eq	44c8a8 <ferror@plt+0x49b78>  // b.none
  44c848:	cmp	w1, #0x54
  44c84c:	b.eq	44c8b8 <ferror@plt+0x49b88>  // b.none
  44c850:	cmp	w1, #0x73
  44c854:	b.eq	44c8c8 <ferror@plt+0x49b98>  // b.none
  44c858:	cmp	w1, #0x66
  44c85c:	b.eq	44c9f4 <ferror@plt+0x49cc4>  // b.none
  44c860:	sub	w2, w1, #0x30
  44c864:	and	w2, w2, #0xff
  44c868:	cmp	w2, #0x9
  44c86c:	b.hi	44ca98 <ferror@plt+0x49d68>  // b.pmore
  44c870:	mov	x0, x19
  44c874:	bl	44c1d8 <ferror@plt+0x494a8>
  44c878:	mov	x20, x0
  44c87c:	cbz	x0, 44c890 <ferror@plt+0x49b60>
  44c880:	ldr	x0, [x19, #24]
  44c884:	ldrb	w0, [x0]
  44c888:	cmp	w0, #0x49
  44c88c:	b.eq	44cab8 <ferror@plt+0x49d88>  // b.none
  44c890:	str	w21, [x19, #76]
  44c894:	mov	x0, x20
  44c898:	ldp	x19, x20, [sp, #16]
  44c89c:	ldp	x21, x22, [sp, #32]
  44c8a0:	ldp	x29, x30, [sp], #64
  44c8a4:	ret
  44c8a8:	mov	x0, x19
  44c8ac:	bl	44e1f4 <ferror@plt+0x4b4c4>
  44c8b0:	mov	x20, x0
  44c8b4:	b	44c890 <ferror@plt+0x49b60>
  44c8b8:	mov	x0, x19
  44c8bc:	bl	444f44 <ferror@plt+0x42214>
  44c8c0:	mov	x20, x0
  44c8c4:	b	44c890 <ferror@plt+0x49b60>
  44c8c8:	ldrb	w2, [x0, #1]
  44c8cc:	cmp	w2, #0x72
  44c8d0:	b.eq	44c944 <ferror@plt+0x49c14>  // b.none
  44c8d4:	cmp	w2, #0x70
  44c8d8:	b.eq	44c9c8 <ferror@plt+0x49c98>  // b.none
  44c8dc:	cmp	w1, #0x69
  44c8e0:	mov	w2, #0x74                  	// #116
  44c8e4:	ccmp	w1, w2, #0x4, ne  // ne = any
  44c8e8:	b.ne	44ca00 <ferror@plt+0x49cd0>  // b.any
  44c8ec:	ldrb	w2, [x0, #1]
  44c8f0:	cmp	w2, #0x6c
  44c8f4:	b.ne	44ca00 <ferror@plt+0x49cd0>  // b.any
  44c8f8:	add	x0, x0, #0x2
  44c8fc:	str	x0, [x19, #24]
  44c900:	mov	x22, #0x0                   	// #0
  44c904:	cmp	w1, #0x74
  44c908:	b.eq	44cadc <ferror@plt+0x49dac>  // b.none
  44c90c:	ldr	x0, [x19, #24]
  44c910:	ldrb	w0, [x0, #1]
  44c914:	mov	x20, #0x0                   	// #0
  44c918:	cbz	w0, 44c890 <ferror@plt+0x49b60>
  44c91c:	mov	w1, #0x45                  	// #69
  44c920:	mov	x0, x19
  44c924:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44c928:	mov	x3, x0
  44c92c:	mov	x2, x22
  44c930:	mov	w1, #0x31                  	// #49
  44c934:	mov	x0, x19
  44c938:	bl	444a5c <ferror@plt+0x41d2c>
  44c93c:	mov	x20, x0
  44c940:	b	44c890 <ferror@plt+0x49b60>
  44c944:	add	x0, x0, #0x2
  44c948:	str	x0, [x19, #24]
  44c94c:	mov	x0, x19
  44c950:	bl	44b598 <ferror@plt+0x48868>
  44c954:	mov	x20, x0
  44c958:	mov	x0, x19
  44c95c:	bl	44c1d8 <ferror@plt+0x494a8>
  44c960:	mov	x22, x0
  44c964:	ldr	x0, [x19, #24]
  44c968:	ldrb	w0, [x0]
  44c96c:	cmp	w0, #0x49
  44c970:	b.eq	44c990 <ferror@plt+0x49c60>  // b.none
  44c974:	mov	x3, x22
  44c978:	mov	x2, x20
  44c97c:	mov	w1, #0x1                   	// #1
  44c980:	mov	x0, x19
  44c984:	bl	444a5c <ferror@plt+0x41d2c>
  44c988:	mov	x20, x0
  44c98c:	b	44c890 <ferror@plt+0x49b60>
  44c990:	mov	x0, x19
  44c994:	bl	44e490 <ferror@plt+0x4b760>
  44c998:	mov	x3, x0
  44c99c:	mov	x2, x22
  44c9a0:	mov	w1, #0x4                   	// #4
  44c9a4:	mov	x0, x19
  44c9a8:	bl	444a5c <ferror@plt+0x41d2c>
  44c9ac:	mov	x3, x0
  44c9b0:	mov	x2, x20
  44c9b4:	mov	w1, #0x1                   	// #1
  44c9b8:	mov	x0, x19
  44c9bc:	bl	444a5c <ferror@plt+0x41d2c>
  44c9c0:	mov	x20, x0
  44c9c4:	b	44c890 <ferror@plt+0x49b60>
  44c9c8:	add	x0, x0, #0x2
  44c9cc:	str	x0, [x19, #24]
  44c9d0:	mov	x0, x19
  44c9d4:	bl	44e4cc <ferror@plt+0x4b79c>
  44c9d8:	mov	x3, #0x0                   	// #0
  44c9dc:	mov	x2, x0
  44c9e0:	mov	w1, #0x4b                  	// #75
  44c9e4:	mov	x0, x19
  44c9e8:	bl	444a5c <ferror@plt+0x41d2c>
  44c9ec:	mov	x20, x0
  44c9f0:	b	44c890 <ferror@plt+0x49b60>
  44c9f4:	ldrb	w1, [x0, #1]
  44c9f8:	cmp	w1, #0x70
  44c9fc:	b.eq	44ca34 <ferror@plt+0x49d04>  // b.none
  44ca00:	mov	x0, x19
  44ca04:	bl	44c02c <ferror@plt+0x492fc>
  44ca08:	mov	x20, x0
  44ca0c:	cbz	x0, 44c890 <ferror@plt+0x49b60>
  44ca10:	ldr	w0, [x0]
  44ca14:	cmp	w0, #0x32
  44ca18:	b.eq	44caec <ferror@plt+0x49dbc>  // b.none
  44ca1c:	cmp	w0, #0x33
  44ca20:	b.eq	44cbfc <ferror@plt+0x49ecc>  // b.none
  44ca24:	cmp	w0, #0x34
  44ca28:	b.eq	44cf7c <ferror@plt+0x4a24c>  // b.none
  44ca2c:	mov	x20, #0x0                   	// #0
  44ca30:	b	44c890 <ferror@plt+0x49b60>
  44ca34:	add	x1, x0, #0x2
  44ca38:	str	x1, [x19, #24]
  44ca3c:	ldrb	w1, [x0, #2]
  44ca40:	cmp	w1, #0x54
  44ca44:	b.eq	44ca88 <ferror@plt+0x49d58>  // b.none
  44ca48:	mov	x0, x19
  44ca4c:	bl	444ec8 <ferror@plt+0x42198>
  44ca50:	mvn	x1, x0
  44ca54:	mov	x20, #0x0                   	// #0
  44ca58:	tst	x1, #0x7fffffff
  44ca5c:	b.eq	44c890 <ferror@plt+0x49b60>  // b.none
  44ca60:	add	w22, w0, #0x1
  44ca64:	mov	x0, x19
  44ca68:	bl	444a1c <ferror@plt+0x41cec>
  44ca6c:	mov	x20, x0
  44ca70:	cbz	x0, 44c890 <ferror@plt+0x49b60>
  44ca74:	mov	w0, #0x6                   	// #6
  44ca78:	str	w0, [x20]
  44ca7c:	sxtw	x0, w22
  44ca80:	str	x0, [x20, #8]
  44ca84:	b	44c890 <ferror@plt+0x49b60>
  44ca88:	add	x0, x0, #0x3
  44ca8c:	str	x0, [x19, #24]
  44ca90:	mov	w22, #0x0                   	// #0
  44ca94:	b	44ca64 <ferror@plt+0x49d34>
  44ca98:	cmp	w1, #0x6f
  44ca9c:	b.ne	44c8dc <ferror@plt+0x49bac>  // b.any
  44caa0:	ldrb	w1, [x0, #1]
  44caa4:	cmp	w1, #0x6e
  44caa8:	b.ne	44ca00 <ferror@plt+0x49cd0>  // b.any
  44caac:	add	x0, x0, #0x2
  44cab0:	str	x0, [x19, #24]
  44cab4:	b	44c870 <ferror@plt+0x49b40>
  44cab8:	mov	x0, x19
  44cabc:	bl	44e490 <ferror@plt+0x4b760>
  44cac0:	mov	x3, x0
  44cac4:	mov	x2, x20
  44cac8:	mov	w1, #0x4                   	// #4
  44cacc:	mov	x0, x19
  44cad0:	bl	444a5c <ferror@plt+0x41d2c>
  44cad4:	mov	x20, x0
  44cad8:	b	44c890 <ferror@plt+0x49b60>
  44cadc:	mov	x0, x19
  44cae0:	bl	44b598 <ferror@plt+0x48868>
  44cae4:	mov	x22, x0
  44cae8:	b	44c90c <ferror@plt+0x49bdc>
  44caec:	ldr	x0, [x20, #8]
  44caf0:	ldr	x22, [x0]
  44caf4:	ldr	w0, [x0, #16]
  44caf8:	sub	w1, w0, #0x2
  44cafc:	ldr	w0, [x19, #72]
  44cb00:	add	w0, w0, w1
  44cb04:	str	w0, [x19, #72]
  44cb08:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44cb0c:	add	x1, x1, #0x458
  44cb10:	mov	x0, x22
  44cb14:	bl	402a20 <strcmp@plt>
  44cb18:	cbz	w0, 44cb40 <ferror@plt+0x49e10>
  44cb1c:	ldr	w0, [x20]
  44cb20:	cmp	w0, #0x33
  44cb24:	b.eq	44cc00 <ferror@plt+0x49ed0>  // b.none
  44cb28:	cmp	w0, #0x34
  44cb2c:	b.eq	44cb88 <ferror@plt+0x49e58>  // b.none
  44cb30:	cmp	w0, #0x32
  44cb34:	b.eq	44cb64 <ferror@plt+0x49e34>  // b.none
  44cb38:	mov	x20, #0x0                   	// #0
  44cb3c:	b	44c890 <ferror@plt+0x49b60>
  44cb40:	mov	x0, x19
  44cb44:	bl	44b598 <ferror@plt+0x48868>
  44cb48:	mov	x3, x0
  44cb4c:	mov	x2, x20
  44cb50:	mov	w1, #0x37                  	// #55
  44cb54:	mov	x0, x19
  44cb58:	bl	444a5c <ferror@plt+0x41d2c>
  44cb5c:	mov	x20, x0
  44cb60:	b	44c890 <ferror@plt+0x49b60>
  44cb64:	ldr	x0, [x20, #8]
  44cb68:	ldr	w0, [x0, #20]
  44cb6c:	cmp	w0, #0x2
  44cb70:	b.eq	44cd28 <ferror@plt+0x49ff8>  // b.none
  44cb74:	b.gt	44cc10 <ferror@plt+0x49ee0>
  44cb78:	cbz	w0, 44ccb8 <ferror@plt+0x49f88>
  44cb7c:	cmp	w0, #0x1
  44cb80:	b.ne	44cc08 <ferror@plt+0x49ed8>  // b.any
  44cb84:	cbz	x22, 44cf7c <ferror@plt+0x4a24c>
  44cb88:	str	x23, [sp, #48]
  44cb8c:	ldrb	w0, [x22]
  44cb90:	cmp	w0, #0x70
  44cb94:	mov	w1, #0x6d                  	// #109
  44cb98:	ccmp	w0, w1, #0x4, ne  // ne = any
  44cb9c:	b.ne	44cbac <ferror@plt+0x49e7c>  // b.any
  44cba0:	ldrb	w1, [x22, #1]
  44cba4:	cmp	w1, w0
  44cba8:	b.eq	44ccd4 <ferror@plt+0x49fa4>  // b.none
  44cbac:	ldr	w0, [x20]
  44cbb0:	cmp	w0, #0x34
  44cbb4:	b.eq	44cf94 <ferror@plt+0x4a264>  // b.none
  44cbb8:	mov	w23, #0x0                   	// #0
  44cbbc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44cbc0:	add	x1, x1, #0xfd0
  44cbc4:	mov	x0, x22
  44cbc8:	bl	402a20 <strcmp@plt>
  44cbcc:	cbz	w0, 44ccfc <ferror@plt+0x49fcc>
  44cbd0:	mov	x0, x19
  44cbd4:	bl	44e4cc <ferror@plt+0x4b79c>
  44cbd8:	mov	x3, x0
  44cbdc:	cbnz	w23, 44cd0c <ferror@plt+0x49fdc>
  44cbe0:	ldr	x23, [sp, #48]
  44cbe4:	mov	x2, x20
  44cbe8:	mov	w1, #0x37                  	// #55
  44cbec:	mov	x0, x19
  44cbf0:	bl	444a5c <ferror@plt+0x41d2c>
  44cbf4:	mov	x20, x0
  44cbf8:	b	44c890 <ferror@plt+0x49b60>
  44cbfc:	mov	x22, #0x0                   	// #0
  44cc00:	ldr	w0, [x20, #8]
  44cc04:	b	44cb6c <ferror@plt+0x49e3c>
  44cc08:	mov	x20, #0x0                   	// #0
  44cc0c:	b	44c890 <ferror@plt+0x49b60>
  44cc10:	cmp	w0, #0x3
  44cc14:	b.ne	44ccb0 <ferror@plt+0x49f80>  // b.any
  44cc18:	cbz	x22, 44cf44 <ferror@plt+0x4a214>
  44cc1c:	str	x23, [sp, #48]
  44cc20:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44cc24:	add	x1, x1, #0xef8
  44cc28:	mov	x0, x22
  44cc2c:	bl	402a20 <strcmp@plt>
  44cc30:	cbz	w0, 44ce48 <ferror@plt+0x4a118>
  44cc34:	ldrb	w0, [x22]
  44cc38:	cmp	w0, #0x66
  44cc3c:	b.eq	44ceb4 <ferror@plt+0x4a184>  // b.none
  44cc40:	cmp	w0, #0x6e
  44cc44:	b.ne	44cf58 <ferror@plt+0x4a228>  // b.any
  44cc48:	ldrb	w0, [x22, #1]
  44cc4c:	cmp	w0, #0x77
  44cc50:	mov	w1, #0x61                  	// #97
  44cc54:	ccmp	w0, w1, #0x4, ne  // ne = any
  44cc58:	b.ne	44cf64 <ferror@plt+0x4a234>  // b.any
  44cc5c:	mov	w1, #0x5f                  	// #95
  44cc60:	mov	x0, x19
  44cc64:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44cc68:	mov	x22, x0
  44cc6c:	mov	x0, x19
  44cc70:	bl	44b598 <ferror@plt+0x48868>
  44cc74:	mov	x23, x0
  44cc78:	ldr	x0, [x19, #24]
  44cc7c:	ldrb	w1, [x0]
  44cc80:	cmp	w1, #0x45
  44cc84:	b.eq	44cee8 <ferror@plt+0x4a1b8>  // b.none
  44cc88:	cmp	w1, #0x70
  44cc8c:	b.eq	44cef8 <ferror@plt+0x4a1c8>  // b.none
  44cc90:	cmp	w1, #0x69
  44cc94:	b.ne	44cf70 <ferror@plt+0x4a240>  // b.any
  44cc98:	ldrb	w0, [x0, #1]
  44cc9c:	cmp	w0, #0x6c
  44cca0:	b.eq	44cf2c <ferror@plt+0x4a1fc>  // b.none
  44cca4:	mov	x20, #0x0                   	// #0
  44cca8:	ldr	x23, [sp, #48]
  44ccac:	b	44c890 <ferror@plt+0x49b60>
  44ccb0:	mov	x20, #0x0                   	// #0
  44ccb4:	b	44c890 <ferror@plt+0x49b60>
  44ccb8:	mov	x3, #0x0                   	// #0
  44ccbc:	mov	x2, x20
  44ccc0:	mov	w1, #0x36                  	// #54
  44ccc4:	mov	x0, x19
  44ccc8:	bl	444a5c <ferror@plt+0x41d2c>
  44cccc:	mov	x20, x0
  44ccd0:	b	44c890 <ferror@plt+0x49b60>
  44ccd4:	ldr	x0, [x19, #24]
  44ccd8:	ldrb	w1, [x0]
  44ccdc:	mov	w23, #0x1                   	// #1
  44cce0:	cmp	w1, #0x5f
  44cce4:	b.ne	44cbbc <ferror@plt+0x49e8c>  // b.any
  44cce8:	add	x0, x0, #0x1
  44ccec:	str	x0, [x19, #24]
  44ccf0:	b	44cbac <ferror@plt+0x49e7c>
  44ccf4:	ldr	x23, [sp, #48]
  44ccf8:	b	44cfbc <ferror@plt+0x4a28c>
  44ccfc:	mov	x0, x19
  44cd00:	bl	44e3e0 <ferror@plt+0x4b6b0>
  44cd04:	mov	x3, x0
  44cd08:	b	44cbdc <ferror@plt+0x49eac>
  44cd0c:	mov	x2, x3
  44cd10:	mov	w1, #0x39                  	// #57
  44cd14:	mov	x0, x19
  44cd18:	bl	444a5c <ferror@plt+0x41d2c>
  44cd1c:	mov	x3, x0
  44cd20:	ldr	x23, [sp, #48]
  44cd24:	b	44cbe4 <ferror@plt+0x49eb4>
  44cd28:	cbz	x22, 44cf3c <ferror@plt+0x4a20c>
  44cd2c:	str	x23, [sp, #48]
  44cd30:	mov	x0, x20
  44cd34:	bl	444fb0 <ferror@plt+0x42280>
  44cd38:	cbnz	w0, 44cde0 <ferror@plt+0x4a0b0>
  44cd3c:	ldrb	w0, [x22]
  44cd40:	cmp	w0, #0x66
  44cd44:	b.eq	44cdf0 <ferror@plt+0x4a0c0>  // b.none
  44cd48:	mov	x0, x19
  44cd4c:	bl	44e4cc <ferror@plt+0x4b79c>
  44cd50:	mov	x23, x0
  44cd54:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44cd58:	add	x1, x1, #0xee8
  44cd5c:	mov	x0, x22
  44cd60:	bl	402a20 <strcmp@plt>
  44cd64:	cbz	w0, 44ce00 <ferror@plt+0x4a0d0>
  44cd68:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44cd6c:	add	x1, x1, #0xb8
  44cd70:	mov	x0, x22
  44cd74:	bl	402a20 <strcmp@plt>
  44cd78:	cbz	w0, 44cd90 <ferror@plt+0x4a060>
  44cd7c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44cd80:	add	x1, x1, #0xc0
  44cd84:	mov	x0, x22
  44cd88:	bl	402a20 <strcmp@plt>
  44cd8c:	cbnz	w0, 44ce38 <ferror@plt+0x4a108>
  44cd90:	mov	x0, x19
  44cd94:	bl	44c1d8 <ferror@plt+0x494a8>
  44cd98:	mov	x22, x0
  44cd9c:	ldr	x0, [x19, #24]
  44cda0:	ldrb	w0, [x0]
  44cda4:	cmp	w0, #0x49
  44cda8:	b.eq	44ce14 <ferror@plt+0x4a0e4>  // b.none
  44cdac:	mov	x3, x22
  44cdb0:	mov	x2, x23
  44cdb4:	mov	w1, #0x39                  	// #57
  44cdb8:	mov	x0, x19
  44cdbc:	bl	444a5c <ferror@plt+0x41d2c>
  44cdc0:	mov	x3, x0
  44cdc4:	mov	x2, x20
  44cdc8:	mov	w1, #0x38                  	// #56
  44cdcc:	mov	x0, x19
  44cdd0:	bl	444a5c <ferror@plt+0x41d2c>
  44cdd4:	mov	x20, x0
  44cdd8:	ldr	x23, [sp, #48]
  44cddc:	b	44c890 <ferror@plt+0x49b60>
  44cde0:	mov	x0, x19
  44cde4:	bl	44b598 <ferror@plt+0x48868>
  44cde8:	mov	x23, x0
  44cdec:	b	44cd54 <ferror@plt+0x4a024>
  44cdf0:	mov	x0, x19
  44cdf4:	bl	44c02c <ferror@plt+0x492fc>
  44cdf8:	mov	x23, x0
  44cdfc:	b	44cd54 <ferror@plt+0x4a024>
  44ce00:	mov	w1, #0x45                  	// #69
  44ce04:	mov	x0, x19
  44ce08:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44ce0c:	mov	x22, x0
  44ce10:	b	44cdac <ferror@plt+0x4a07c>
  44ce14:	mov	x0, x19
  44ce18:	bl	44e490 <ferror@plt+0x4b760>
  44ce1c:	mov	x3, x0
  44ce20:	mov	x2, x22
  44ce24:	mov	w1, #0x4                   	// #4
  44ce28:	mov	x0, x19
  44ce2c:	bl	444a5c <ferror@plt+0x41d2c>
  44ce30:	mov	x22, x0
  44ce34:	b	44cdac <ferror@plt+0x4a07c>
  44ce38:	mov	x0, x19
  44ce3c:	bl	44e4cc <ferror@plt+0x4b79c>
  44ce40:	mov	x22, x0
  44ce44:	b	44cdac <ferror@plt+0x4a07c>
  44ce48:	mov	x0, x19
  44ce4c:	bl	44e4cc <ferror@plt+0x4b79c>
  44ce50:	mov	x22, x0
  44ce54:	mov	x0, x19
  44ce58:	bl	44e4cc <ferror@plt+0x4b79c>
  44ce5c:	mov	x23, x0
  44ce60:	mov	x0, x19
  44ce64:	bl	44e4cc <ferror@plt+0x4b79c>
  44ce68:	mov	x3, x0
  44ce6c:	cbz	x0, 44cf4c <ferror@plt+0x4a21c>
  44ce70:	mov	x2, x23
  44ce74:	mov	w1, #0x3c                  	// #60
  44ce78:	mov	x0, x19
  44ce7c:	bl	444a5c <ferror@plt+0x41d2c>
  44ce80:	mov	x3, x0
  44ce84:	mov	x2, x22
  44ce88:	mov	w1, #0x3b                  	// #59
  44ce8c:	mov	x0, x19
  44ce90:	bl	444a5c <ferror@plt+0x41d2c>
  44ce94:	mov	x3, x0
  44ce98:	mov	x2, x20
  44ce9c:	mov	w1, #0x3a                  	// #58
  44cea0:	mov	x0, x19
  44cea4:	bl	444a5c <ferror@plt+0x41d2c>
  44cea8:	mov	x20, x0
  44ceac:	ldr	x23, [sp, #48]
  44ceb0:	b	44c890 <ferror@plt+0x49b60>
  44ceb4:	mov	x0, x19
  44ceb8:	bl	44c02c <ferror@plt+0x492fc>
  44cebc:	mov	x22, x0
  44cec0:	mov	x0, x19
  44cec4:	bl	44e4cc <ferror@plt+0x4b79c>
  44cec8:	mov	x23, x0
  44cecc:	mov	x0, x19
  44ced0:	bl	44e4cc <ferror@plt+0x4b79c>
  44ced4:	mov	x3, x0
  44ced8:	cbnz	x0, 44ce70 <ferror@plt+0x4a140>
  44cedc:	mov	x20, x0
  44cee0:	ldr	x23, [sp, #48]
  44cee4:	b	44c890 <ferror@plt+0x49b60>
  44cee8:	add	x0, x0, #0x1
  44ceec:	str	x0, [x19, #24]
  44cef0:	mov	x3, #0x0                   	// #0
  44cef4:	b	44ce70 <ferror@plt+0x4a140>
  44cef8:	ldrb	w1, [x0, #1]
  44cefc:	cmp	w1, #0x69
  44cf00:	b.eq	44cf10 <ferror@plt+0x4a1e0>  // b.none
  44cf04:	mov	x20, #0x0                   	// #0
  44cf08:	ldr	x23, [sp, #48]
  44cf0c:	b	44c890 <ferror@plt+0x49b60>
  44cf10:	add	x0, x0, #0x2
  44cf14:	str	x0, [x19, #24]
  44cf18:	mov	w1, #0x45                  	// #69
  44cf1c:	mov	x0, x19
  44cf20:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44cf24:	mov	x3, x0
  44cf28:	b	44ce70 <ferror@plt+0x4a140>
  44cf2c:	mov	x0, x19
  44cf30:	bl	44e4cc <ferror@plt+0x4b79c>
  44cf34:	mov	x3, x0
  44cf38:	b	44ce70 <ferror@plt+0x4a140>
  44cf3c:	mov	x20, x22
  44cf40:	b	44c890 <ferror@plt+0x49b60>
  44cf44:	mov	x20, x22
  44cf48:	b	44c890 <ferror@plt+0x49b60>
  44cf4c:	mov	x20, x0
  44cf50:	ldr	x23, [sp, #48]
  44cf54:	b	44c890 <ferror@plt+0x49b60>
  44cf58:	mov	x20, #0x0                   	// #0
  44cf5c:	ldr	x23, [sp, #48]
  44cf60:	b	44c890 <ferror@plt+0x49b60>
  44cf64:	mov	x20, #0x0                   	// #0
  44cf68:	ldr	x23, [sp, #48]
  44cf6c:	b	44c890 <ferror@plt+0x49b60>
  44cf70:	mov	x20, #0x0                   	// #0
  44cf74:	ldr	x23, [sp, #48]
  44cf78:	b	44c890 <ferror@plt+0x49b60>
  44cf7c:	ldr	w0, [x20]
  44cf80:	cmp	w0, #0x34
  44cf84:	b.eq	44cfac <ferror@plt+0x4a27c>  // b.none
  44cf88:	str	x23, [sp, #48]
  44cf8c:	mov	w23, #0x0                   	// #0
  44cf90:	b	44cbd0 <ferror@plt+0x49ea0>
  44cf94:	ldr	x0, [x19, #24]
  44cf98:	ldrb	w1, [x0]
  44cf9c:	cmp	w1, #0x5f
  44cfa0:	b.eq	44ccf4 <ferror@plt+0x49fc4>  // b.none
  44cfa4:	mov	w23, #0x0                   	// #0
  44cfa8:	b	44cbbc <ferror@plt+0x49e8c>
  44cfac:	ldr	x0, [x19, #24]
  44cfb0:	ldrb	w1, [x0]
  44cfb4:	cmp	w1, #0x5f
  44cfb8:	b.ne	44cfd8 <ferror@plt+0x4a2a8>  // b.any
  44cfbc:	add	x0, x0, #0x1
  44cfc0:	str	x0, [x19, #24]
  44cfc4:	mov	w1, #0x45                  	// #69
  44cfc8:	mov	x0, x19
  44cfcc:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44cfd0:	mov	x3, x0
  44cfd4:	b	44cbe4 <ferror@plt+0x49eb4>
  44cfd8:	str	x23, [sp, #48]
  44cfdc:	mov	w23, #0x0                   	// #0
  44cfe0:	b	44cbd0 <ferror@plt+0x49ea0>
  44cfe4:	stp	x29, x30, [sp, #-64]!
  44cfe8:	mov	x29, sp
  44cfec:	stp	x19, x20, [sp, #16]
  44cff0:	stp	x21, x22, [sp, #32]
  44cff4:	mov	x19, x0
  44cff8:	and	w22, w1, #0xff
  44cffc:	str	xzr, [sp, #56]
  44d000:	ldr	x0, [x0, #24]
  44d004:	ldrb	w2, [x0]
  44d008:	add	x20, sp, #0x38
  44d00c:	mov	w21, #0x2e                  	// #46
  44d010:	cmp	w2, w1, uxtb
  44d014:	b.eq	44d070 <ferror@plt+0x4a340>  // b.none
  44d018:	mov	x0, x19
  44d01c:	bl	44c818 <ferror@plt+0x49ae8>
  44d020:	cbz	x0, 44d060 <ferror@plt+0x4a330>
  44d024:	mov	x3, #0x0                   	// #0
  44d028:	mov	x2, x0
  44d02c:	mov	w1, w21
  44d030:	mov	x0, x19
  44d034:	bl	444a5c <ferror@plt+0x41d2c>
  44d038:	str	x0, [x20]
  44d03c:	cbz	x0, 44d060 <ferror@plt+0x4a330>
  44d040:	add	x20, x0, #0x10
  44d044:	ldr	x0, [x19, #24]
  44d048:	ldrb	w1, [x0]
  44d04c:	cmp	w1, w22
  44d050:	b.ne	44d018 <ferror@plt+0x4a2e8>  // b.any
  44d054:	add	x0, x0, #0x1
  44d058:	str	x0, [x19, #24]
  44d05c:	ldr	x0, [sp, #56]
  44d060:	ldp	x19, x20, [sp, #16]
  44d064:	ldp	x21, x22, [sp, #32]
  44d068:	ldp	x29, x30, [sp], #64
  44d06c:	ret
  44d070:	add	x0, x0, #0x1
  44d074:	str	x0, [x19, #24]
  44d078:	mov	x3, #0x0                   	// #0
  44d07c:	mov	x2, #0x0                   	// #0
  44d080:	mov	w1, w21
  44d084:	mov	x0, x19
  44d088:	bl	444a5c <ferror@plt+0x41d2c>
  44d08c:	b	44d060 <ferror@plt+0x4a330>
  44d090:	stp	x29, x30, [sp, #-112]!
  44d094:	mov	x29, sp
  44d098:	stp	x19, x20, [sp, #16]
  44d09c:	stp	x21, x22, [sp, #32]
  44d0a0:	stp	x23, x24, [sp, #48]
  44d0a4:	stp	x25, x26, [sp, #64]
  44d0a8:	stp	x27, x28, [sp, #80]
  44d0ac:	mov	x19, x0
  44d0b0:	mov	x23, x1
  44d0b4:	mov	w26, w2
  44d0b8:	ldr	x0, [x0, #24]
  44d0bc:	ldrb	w20, [x0]
  44d0c0:	cmp	w2, #0x0
  44d0c4:	mov	w0, #0x1e                  	// #30
  44d0c8:	mov	w1, #0x1b                  	// #27
  44d0cc:	csel	w0, w0, w1, ne  // ne = any
  44d0d0:	mov	w25, #0x1d                  	// #29
  44d0d4:	mov	w1, #0x1a                  	// #26
  44d0d8:	csel	w25, w25, w1, ne  // ne = any
  44d0dc:	mov	w24, #0x1c                  	// #28
  44d0e0:	mov	w1, #0x19                  	// #25
  44d0e4:	csel	w24, w24, w1, ne  // ne = any
  44d0e8:	mov	x21, x23
  44d0ec:	mov	w28, #0x50                  	// #80
  44d0f0:	mov	x22, #0x0                   	// #0
  44d0f4:	mov	w27, #0x4f                  	// #79
  44d0f8:	str	w0, [sp, #108]
  44d0fc:	b	44d138 <ferror@plt+0x4a408>
  44d100:	ldr	w0, [x19, #72]
  44d104:	add	w0, w0, #0x9
  44d108:	str	w0, [x19, #72]
  44d10c:	mov	w1, w24
  44d110:	mov	x3, x22
  44d114:	mov	x2, x22
  44d118:	mov	x0, x19
  44d11c:	bl	444a5c <ferror@plt+0x41d2c>
  44d120:	mov	x3, x0
  44d124:	str	x0, [x21]
  44d128:	cbz	x0, 44d2e4 <ferror@plt+0x4a5b4>
  44d12c:	add	x21, x0, #0x8
  44d130:	ldr	x0, [x19, #24]
  44d134:	ldrb	w20, [x0]
  44d138:	mov	x0, x19
  44d13c:	bl	444e04 <ferror@plt+0x420d4>
  44d140:	cbz	w0, 44d26c <ferror@plt+0x4a53c>
  44d144:	ldr	x0, [x19, #24]
  44d148:	add	x1, x0, #0x1
  44d14c:	str	x1, [x19, #24]
  44d150:	cmp	w20, #0x72
  44d154:	b.eq	44d100 <ferror@plt+0x4a3d0>  // b.none
  44d158:	cmp	w20, #0x56
  44d15c:	b.eq	44d1e0 <ferror@plt+0x4a4b0>  // b.none
  44d160:	cmp	w20, #0x4b
  44d164:	b.eq	44d1f8 <ferror@plt+0x4a4c8>  // b.none
  44d168:	ldrb	w1, [x0, #1]
  44d16c:	cbz	w1, 44d2e0 <ferror@plt+0x4a5b0>
  44d170:	add	x1, x0, #0x2
  44d174:	str	x1, [x19, #24]
  44d178:	ldrb	w2, [x0, #1]
  44d17c:	cmp	w2, #0x78
  44d180:	b.eq	44d210 <ferror@plt+0x4a4e0>  // b.none
  44d184:	and	w0, w2, #0xffffffdf
  44d188:	and	w0, w0, #0xff
  44d18c:	cmp	w0, #0x4f
  44d190:	b.ne	44d228 <ferror@plt+0x4a4f8>  // b.any
  44d194:	ldr	w0, [x19, #72]
  44d198:	add	w0, w0, #0x9
  44d19c:	str	w0, [x19, #72]
  44d1a0:	mov	x3, x22
  44d1a4:	mov	w1, w27
  44d1a8:	cmp	w2, #0x4f
  44d1ac:	b.ne	44d114 <ferror@plt+0x4a3e4>  // b.any
  44d1b0:	mov	x0, x19
  44d1b4:	bl	44c818 <ferror@plt+0x49ae8>
  44d1b8:	mov	x3, x0
  44d1bc:	cbz	x0, 44d2e4 <ferror@plt+0x4a5b4>
  44d1c0:	ldr	x0, [x19, #24]
  44d1c4:	ldrb	w1, [x0]
  44d1c8:	cmp	w1, #0x45
  44d1cc:	b.ne	44d304 <ferror@plt+0x4a5d4>  // b.any
  44d1d0:	add	x0, x0, #0x1
  44d1d4:	str	x0, [x19, #24]
  44d1d8:	mov	w1, w27
  44d1dc:	b	44d114 <ferror@plt+0x4a3e4>
  44d1e0:	ldr	w0, [x19, #72]
  44d1e4:	add	w0, w0, #0x9
  44d1e8:	str	w0, [x19, #72]
  44d1ec:	mov	w1, w25
  44d1f0:	mov	x3, x22
  44d1f4:	b	44d114 <ferror@plt+0x4a3e4>
  44d1f8:	ldr	w0, [x19, #72]
  44d1fc:	add	w0, w0, #0x6
  44d200:	str	w0, [x19, #72]
  44d204:	ldr	w1, [sp, #108]
  44d208:	mov	x3, x22
  44d20c:	b	44d114 <ferror@plt+0x4a3e4>
  44d210:	ldr	w0, [x19, #72]
  44d214:	add	w0, w0, #0x11
  44d218:	str	w0, [x19, #72]
  44d21c:	mov	x3, x22
  44d220:	mov	w1, #0x4d                  	// #77
  44d224:	b	44d114 <ferror@plt+0x4a3e4>
  44d228:	cmp	w2, #0x77
  44d22c:	b.ne	44d30c <ferror@plt+0x4a5dc>  // b.any
  44d230:	ldr	w0, [x19, #72]
  44d234:	add	w0, w0, #0x6
  44d238:	str	w0, [x19, #72]
  44d23c:	mov	x0, x19
  44d240:	bl	44bef8 <ferror@plt+0x491c8>
  44d244:	mov	x3, x0
  44d248:	cbz	x0, 44d2e4 <ferror@plt+0x4a5b4>
  44d24c:	ldr	x0, [x19, #24]
  44d250:	ldrb	w1, [x0]
  44d254:	cmp	w1, #0x45
  44d258:	b.ne	44d314 <ferror@plt+0x4a5e4>  // b.any
  44d25c:	add	x0, x0, #0x1
  44d260:	str	x0, [x19, #24]
  44d264:	mov	w1, w28
  44d268:	b	44d114 <ferror@plt+0x4a3e4>
  44d26c:	cmp	w20, #0x46
  44d270:	mov	x3, x21
  44d274:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  44d278:	b.ne	44d2e4 <ferror@plt+0x4a5b4>  // b.any
  44d27c:	cmp	x21, x23
  44d280:	b.eq	44d31c <ferror@plt+0x4a5ec>  // b.none
  44d284:	mov	w4, #0x1d                  	// #29
  44d288:	mov	w3, #0x1e                  	// #30
  44d28c:	mov	w2, #0x1c                  	// #28
  44d290:	b	44d2a8 <ferror@plt+0x4a578>
  44d294:	str	w4, [x1]
  44d298:	ldr	x23, [x23]
  44d29c:	add	x23, x23, #0x8
  44d2a0:	cmp	x21, x23
  44d2a4:	b.eq	44d2d8 <ferror@plt+0x4a5a8>  // b.none
  44d2a8:	ldr	x1, [x23]
  44d2ac:	ldr	w0, [x1]
  44d2b0:	cmp	w0, #0x1a
  44d2b4:	b.eq	44d294 <ferror@plt+0x4a564>  // b.none
  44d2b8:	cmp	w0, #0x1b
  44d2bc:	b.eq	44d2d0 <ferror@plt+0x4a5a0>  // b.none
  44d2c0:	cmp	w0, #0x19
  44d2c4:	b.ne	44d298 <ferror@plt+0x4a568>  // b.any
  44d2c8:	str	w2, [x1]
  44d2cc:	b	44d298 <ferror@plt+0x4a568>
  44d2d0:	str	w3, [x1]
  44d2d4:	b	44d298 <ferror@plt+0x4a568>
  44d2d8:	mov	x3, x23
  44d2dc:	b	44d2e4 <ferror@plt+0x4a5b4>
  44d2e0:	mov	x3, #0x0                   	// #0
  44d2e4:	mov	x0, x3
  44d2e8:	ldp	x19, x20, [sp, #16]
  44d2ec:	ldp	x21, x22, [sp, #32]
  44d2f0:	ldp	x23, x24, [sp, #48]
  44d2f4:	ldp	x25, x26, [sp, #64]
  44d2f8:	ldp	x27, x28, [sp, #80]
  44d2fc:	ldp	x29, x30, [sp], #112
  44d300:	ret
  44d304:	mov	x3, #0x0                   	// #0
  44d308:	b	44d2e4 <ferror@plt+0x4a5b4>
  44d30c:	mov	x3, #0x0                   	// #0
  44d310:	b	44d2e4 <ferror@plt+0x4a5b4>
  44d314:	mov	x3, #0x0                   	// #0
  44d318:	b	44d2e4 <ferror@plt+0x4a5b4>
  44d31c:	mov	x3, x23
  44d320:	b	44d2e4 <ferror@plt+0x4a5b4>
  44d324:	stp	x29, x30, [sp, #-112]!
  44d328:	mov	x29, sp
  44d32c:	stp	x19, x20, [sp, #16]
  44d330:	stp	x21, x22, [sp, #32]
  44d334:	mov	x19, x0
  44d338:	ldr	x1, [x0, #24]
  44d33c:	ldrb	w0, [x1]
  44d340:	cmp	w0, #0x55
  44d344:	b.eq	44d720 <ferror@plt+0x4a9f0>  // b.none
  44d348:	b.hi	44d3ac <ferror@plt+0x4a67c>  // b.pmore
  44d34c:	cmp	w0, #0x4e
  44d350:	b.eq	44d440 <ferror@plt+0x4a710>  // b.none
  44d354:	cmp	w0, #0x53
  44d358:	b.ne	44d7b4 <ferror@plt+0x4aa84>  // b.any
  44d35c:	ldrb	w0, [x1, #1]
  44d360:	cmp	w0, #0x74
  44d364:	b.eq	44d740 <ferror@plt+0x4aa10>  // b.none
  44d368:	mov	w1, #0x0                   	// #0
  44d36c:	mov	x0, x19
  44d370:	bl	44b290 <ferror@plt+0x48560>
  44d374:	mov	x22, x0
  44d378:	ldr	x0, [x19, #24]
  44d37c:	ldrb	w0, [x0]
  44d380:	cmp	w0, #0x49
  44d384:	b.ne	44d72c <ferror@plt+0x4a9fc>  // b.any
  44d388:	mov	x0, x19
  44d38c:	bl	44e490 <ferror@plt+0x4b760>
  44d390:	mov	x3, x0
  44d394:	mov	x2, x22
  44d398:	mov	w1, #0x4                   	// #4
  44d39c:	mov	x0, x19
  44d3a0:	bl	444a5c <ferror@plt+0x41d2c>
  44d3a4:	mov	x22, x0
  44d3a8:	b	44d72c <ferror@plt+0x4a9fc>
  44d3ac:	cmp	w0, #0x5a
  44d3b0:	b.ne	44d7b4 <ferror@plt+0x4aa84>  // b.any
  44d3b4:	add	x1, x1, #0x1
  44d3b8:	str	x1, [x19, #24]
  44d3bc:	mov	w1, #0x0                   	// #0
  44d3c0:	mov	x0, x19
  44d3c4:	bl	44d86c <ferror@plt+0x4ab3c>
  44d3c8:	mov	x22, x0
  44d3cc:	cbz	x0, 44d72c <ferror@plt+0x4a9fc>
  44d3d0:	ldr	x0, [x19, #24]
  44d3d4:	ldrb	w1, [x0]
  44d3d8:	cmp	w1, #0x45
  44d3dc:	b.ne	44d804 <ferror@plt+0x4aad4>  // b.any
  44d3e0:	add	x1, x0, #0x1
  44d3e4:	str	x1, [x19, #24]
  44d3e8:	ldrb	w1, [x0, #1]
  44d3ec:	cmp	w1, #0x73
  44d3f0:	b.eq	44d658 <ferror@plt+0x4a928>  // b.none
  44d3f4:	cmp	w1, #0x64
  44d3f8:	b.eq	44d688 <ferror@plt+0x4a958>  // b.none
  44d3fc:	mov	x0, x19
  44d400:	bl	44d324 <ferror@plt+0x4a5f4>
  44d404:	mov	x3, x0
  44d408:	cbz	x0, 44d41c <ferror@plt+0x4a6ec>
  44d40c:	ldr	w0, [x0]
  44d410:	sub	w0, w0, #0x46
  44d414:	tst	w0, #0xfffffffd
  44d418:	b.ne	44d6c4 <ferror@plt+0x4a994>  // b.any
  44d41c:	ldr	w0, [x22]
  44d420:	cmp	w0, #0x3
  44d424:	b.eq	44d708 <ferror@plt+0x4a9d8>  // b.none
  44d428:	mov	x2, x22
  44d42c:	mov	w1, #0x2                   	// #2
  44d430:	mov	x0, x19
  44d434:	bl	444a5c <ferror@plt+0x41d2c>
  44d438:	mov	x22, x0
  44d43c:	b	44d72c <ferror@plt+0x4a9fc>
  44d440:	add	x1, x1, #0x1
  44d444:	str	x1, [x19, #24]
  44d448:	mov	w2, #0x1                   	// #1
  44d44c:	add	x1, sp, #0x68
  44d450:	mov	x0, x19
  44d454:	bl	44d090 <ferror@plt+0x4a360>
  44d458:	mov	x22, x0
  44d45c:	cbz	x0, 44d72c <ferror@plt+0x4a9fc>
  44d460:	stp	x27, x28, [sp, #80]
  44d464:	mov	x1, #0x0                   	// #0
  44d468:	mov	x0, x19
  44d46c:	bl	444e5c <ferror@plt+0x4212c>
  44d470:	mov	x27, x0
  44d474:	ldr	x0, [x19, #24]
  44d478:	ldrb	w20, [x0]
  44d47c:	cbz	w20, 44d834 <ferror@plt+0x4ab04>
  44d480:	stp	x23, x24, [sp, #48]
  44d484:	stp	x25, x26, [sp, #64]
  44d488:	mov	x23, #0x0                   	// #0
  44d48c:	mov	w24, #0x1                   	// #1
  44d490:	mov	w26, #0x55                  	// #85
  44d494:	mov	w25, #0x4c                  	// #76
  44d498:	mov	w28, #0x4                   	// #4
  44d49c:	b	44d514 <ferror@plt+0x4a7e4>
  44d4a0:	ldrb	w0, [x0, #1]
  44d4a4:	and	w0, w0, #0xffffffdf
  44d4a8:	and	w0, w0, #0xff
  44d4ac:	cmp	w0, #0x54
  44d4b0:	b.ne	44d560 <ferror@plt+0x4a830>  // b.any
  44d4b4:	mov	x0, x19
  44d4b8:	bl	44b598 <ferror@plt+0x48868>
  44d4bc:	mov	x21, x0
  44d4c0:	mov	w1, w24
  44d4c4:	cbz	x23, 44d4e4 <ferror@plt+0x4a7b4>
  44d4c8:	mov	x3, x21
  44d4cc:	mov	x2, x23
  44d4d0:	mov	x0, x19
  44d4d4:	bl	444a5c <ferror@plt+0x41d2c>
  44d4d8:	mov	x21, x0
  44d4dc:	cmp	w20, #0x53
  44d4e0:	b.eq	44d504 <ferror@plt+0x4a7d4>  // b.none
  44d4e4:	ldr	x0, [x19, #24]
  44d4e8:	ldrb	w20, [x0]
  44d4ec:	cmp	w20, #0x45
  44d4f0:	b.eq	44d510 <ferror@plt+0x4a7e0>  // b.none
  44d4f4:	mov	x1, x21
  44d4f8:	mov	x0, x19
  44d4fc:	bl	445090 <ferror@plt+0x42360>
  44d500:	cbz	w0, 44d5f0 <ferror@plt+0x4a8c0>
  44d504:	ldr	x0, [x19, #24]
  44d508:	ldrb	w20, [x0]
  44d50c:	cbz	w20, 44d82c <ferror@plt+0x4aafc>
  44d510:	mov	x23, x21
  44d514:	cmp	w20, #0x44
  44d518:	b.eq	44d4a0 <ferror@plt+0x4a770>  // b.none
  44d51c:	sub	w2, w20, #0x30
  44d520:	and	w2, w2, #0xff
  44d524:	sub	w1, w20, #0x61
  44d528:	and	w1, w1, #0xff
  44d52c:	cmp	w2, #0x9
  44d530:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
  44d534:	b.ls	44d548 <ferror@plt+0x4a818>  // b.plast
  44d538:	cmp	w20, #0x43
  44d53c:	ccmp	w20, w26, #0x4, ne  // ne = any
  44d540:	ccmp	w20, w25, #0x4, ne  // ne = any
  44d544:	b.ne	44d570 <ferror@plt+0x4a840>  // b.any
  44d548:	mov	x0, x19
  44d54c:	bl	44c1d8 <ferror@plt+0x494a8>
  44d550:	mov	x21, x0
  44d554:	mov	w1, w24
  44d558:	cbnz	x23, 44d4c8 <ferror@plt+0x4a798>
  44d55c:	b	44d4dc <ferror@plt+0x4a7ac>
  44d560:	mov	x0, x19
  44d564:	bl	44c1d8 <ferror@plt+0x494a8>
  44d568:	mov	x21, x0
  44d56c:	b	44d4c0 <ferror@plt+0x4a790>
  44d570:	cmp	w20, #0x53
  44d574:	b.eq	44d5ac <ferror@plt+0x4a87c>  // b.none
  44d578:	cmp	w20, #0x49
  44d57c:	b.eq	44d5c8 <ferror@plt+0x4a898>  // b.none
  44d580:	cmp	w20, #0x54
  44d584:	b.eq	44d5e0 <ferror@plt+0x4a8b0>  // b.none
  44d588:	cmp	w20, #0x45
  44d58c:	b.eq	44d5fc <ferror@plt+0x4a8cc>  // b.none
  44d590:	cmp	w20, #0x4d
  44d594:	ccmp	x23, #0x0, #0x4, eq  // eq = none
  44d598:	b.eq	44d850 <ferror@plt+0x4ab20>  // b.none
  44d59c:	add	x0, x0, #0x1
  44d5a0:	str	x0, [x19, #24]
  44d5a4:	mov	x21, x23
  44d5a8:	b	44d504 <ferror@plt+0x4a7d4>
  44d5ac:	mov	w1, w24
  44d5b0:	mov	x0, x19
  44d5b4:	bl	44b290 <ferror@plt+0x48560>
  44d5b8:	mov	x21, x0
  44d5bc:	mov	w1, w24
  44d5c0:	cbnz	x23, 44d4c8 <ferror@plt+0x4a798>
  44d5c4:	b	44d504 <ferror@plt+0x4a7d4>
  44d5c8:	cbz	x23, 44d844 <ferror@plt+0x4ab14>
  44d5cc:	mov	x0, x19
  44d5d0:	bl	44e490 <ferror@plt+0x4b760>
  44d5d4:	mov	x21, x0
  44d5d8:	mov	w1, w28
  44d5dc:	b	44d4c8 <ferror@plt+0x4a798>
  44d5e0:	mov	x0, x19
  44d5e4:	bl	444f44 <ferror@plt+0x42214>
  44d5e8:	mov	x21, x0
  44d5ec:	b	44d4c0 <ferror@plt+0x4a790>
  44d5f0:	ldp	x23, x24, [sp, #48]
  44d5f4:	ldp	x25, x26, [sp, #64]
  44d5f8:	b	44d834 <ferror@plt+0x4ab04>
  44d5fc:	str	x23, [x22]
  44d600:	cbz	x23, 44d644 <ferror@plt+0x4a914>
  44d604:	cbz	x27, 44d614 <ferror@plt+0x4a8e4>
  44d608:	ldr	x0, [sp, #104]
  44d60c:	str	x0, [x27, #8]
  44d610:	str	x27, [sp, #104]
  44d614:	ldr	x0, [x19, #24]
  44d618:	ldrb	w1, [x0]
  44d61c:	mov	x22, #0x0                   	// #0
  44d620:	cmp	w1, #0x45
  44d624:	b.ne	44d85c <ferror@plt+0x4ab2c>  // b.any
  44d628:	add	x0, x0, #0x1
  44d62c:	str	x0, [x19, #24]
  44d630:	ldr	x22, [sp, #104]
  44d634:	ldp	x23, x24, [sp, #48]
  44d638:	ldp	x25, x26, [sp, #64]
  44d63c:	ldp	x27, x28, [sp, #80]
  44d640:	b	44d72c <ferror@plt+0x4a9fc>
  44d644:	mov	x22, x23
  44d648:	ldp	x23, x24, [sp, #48]
  44d64c:	ldp	x25, x26, [sp, #64]
  44d650:	ldp	x27, x28, [sp, #80]
  44d654:	b	44d72c <ferror@plt+0x4a9fc>
  44d658:	add	x0, x0, #0x2
  44d65c:	str	x0, [x19, #24]
  44d660:	mov	x0, x19
  44d664:	bl	444ff0 <ferror@plt+0x422c0>
  44d668:	cbz	w0, 44d80c <ferror@plt+0x4aadc>
  44d66c:	mov	w2, #0xe                   	// #14
  44d670:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44d674:	add	x1, x1, #0xc8
  44d678:	mov	x0, x19
  44d67c:	bl	44b0c8 <ferror@plt+0x48398>
  44d680:	mov	x3, x0
  44d684:	b	44d41c <ferror@plt+0x4a6ec>
  44d688:	add	x0, x0, #0x2
  44d68c:	str	x0, [x19, #24]
  44d690:	mov	x0, x19
  44d694:	bl	444ec8 <ferror@plt+0x42198>
  44d698:	mov	w20, w0
  44d69c:	tbnz	w0, #31, 44d814 <ferror@plt+0x4aae4>
  44d6a0:	mov	x0, x19
  44d6a4:	bl	44d324 <ferror@plt+0x4a5f4>
  44d6a8:	mov	x21, x0
  44d6ac:	cbz	x0, 44d6dc <ferror@plt+0x4a9ac>
  44d6b0:	ldr	w0, [x0]
  44d6b4:	sub	w0, w0, #0x46
  44d6b8:	tst	w0, #0xfffffffd
  44d6bc:	b.eq	44d6dc <ferror@plt+0x4a9ac>  // b.none
  44d6c0:	b	44d6cc <ferror@plt+0x4a99c>
  44d6c4:	mov	x21, x3
  44d6c8:	mov	w20, #0xffffffff            	// #-1
  44d6cc:	mov	x0, x19
  44d6d0:	bl	444ff0 <ferror@plt+0x422c0>
  44d6d4:	cbz	w0, 44d81c <ferror@plt+0x4aaec>
  44d6d8:	tbnz	w20, #31, 44d700 <ferror@plt+0x4a9d0>
  44d6dc:	mov	x0, x19
  44d6e0:	bl	444a1c <ferror@plt+0x41cec>
  44d6e4:	mov	x3, x0
  44d6e8:	cbz	x0, 44d41c <ferror@plt+0x4a6ec>
  44d6ec:	mov	w0, #0x47                  	// #71
  44d6f0:	str	w0, [x3]
  44d6f4:	str	w20, [x3, #16]
  44d6f8:	str	x21, [x3, #8]
  44d6fc:	b	44d41c <ferror@plt+0x4a6ec>
  44d700:	mov	x3, x21
  44d704:	b	44d41c <ferror@plt+0x4a6ec>
  44d708:	ldr	x0, [x22, #16]
  44d70c:	ldr	w1, [x0]
  44d710:	cmp	w1, #0x29
  44d714:	b.ne	44d428 <ferror@plt+0x4a6f8>  // b.any
  44d718:	str	xzr, [x0, #8]
  44d71c:	b	44d428 <ferror@plt+0x4a6f8>
  44d720:	mov	x0, x19
  44d724:	bl	44c1d8 <ferror@plt+0x494a8>
  44d728:	mov	x22, x0
  44d72c:	mov	x0, x22
  44d730:	ldp	x19, x20, [sp, #16]
  44d734:	ldp	x21, x22, [sp, #32]
  44d738:	ldp	x29, x30, [sp], #112
  44d73c:	ret
  44d740:	add	x1, x1, #0x2
  44d744:	str	x1, [x19, #24]
  44d748:	mov	w2, #0x3                   	// #3
  44d74c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44d750:	add	x1, x1, #0xd8
  44d754:	mov	x0, x19
  44d758:	bl	44b0c8 <ferror@plt+0x48398>
  44d75c:	mov	x20, x0
  44d760:	mov	x0, x19
  44d764:	bl	44c1d8 <ferror@plt+0x494a8>
  44d768:	mov	x3, x0
  44d76c:	mov	x2, x20
  44d770:	mov	w1, #0x1                   	// #1
  44d774:	mov	x0, x19
  44d778:	bl	444a5c <ferror@plt+0x41d2c>
  44d77c:	mov	x22, x0
  44d780:	ldr	w0, [x19, #72]
  44d784:	add	w0, w0, #0x3
  44d788:	str	w0, [x19, #72]
  44d78c:	ldr	x0, [x19, #24]
  44d790:	ldrb	w0, [x0]
  44d794:	cmp	w0, #0x49
  44d798:	b.ne	44d72c <ferror@plt+0x4a9fc>  // b.any
  44d79c:	mov	x1, x22
  44d7a0:	mov	x0, x19
  44d7a4:	bl	445090 <ferror@plt+0x42360>
  44d7a8:	cbnz	w0, 44d388 <ferror@plt+0x4a658>
  44d7ac:	mov	x22, #0x0                   	// #0
  44d7b0:	b	44d72c <ferror@plt+0x4a9fc>
  44d7b4:	mov	x0, x19
  44d7b8:	bl	44c1d8 <ferror@plt+0x494a8>
  44d7bc:	mov	x22, x0
  44d7c0:	ldr	x0, [x19, #24]
  44d7c4:	ldrb	w0, [x0]
  44d7c8:	cmp	w0, #0x49
  44d7cc:	b.ne	44d72c <ferror@plt+0x4a9fc>  // b.any
  44d7d0:	mov	x1, x22
  44d7d4:	mov	x0, x19
  44d7d8:	bl	445090 <ferror@plt+0x42360>
  44d7dc:	cbz	w0, 44d824 <ferror@plt+0x4aaf4>
  44d7e0:	mov	x0, x19
  44d7e4:	bl	44e490 <ferror@plt+0x4b760>
  44d7e8:	mov	x3, x0
  44d7ec:	mov	x2, x22
  44d7f0:	mov	w1, #0x4                   	// #4
  44d7f4:	mov	x0, x19
  44d7f8:	bl	444a5c <ferror@plt+0x41d2c>
  44d7fc:	mov	x22, x0
  44d800:	b	44d72c <ferror@plt+0x4a9fc>
  44d804:	mov	x22, #0x0                   	// #0
  44d808:	b	44d72c <ferror@plt+0x4a9fc>
  44d80c:	mov	x22, #0x0                   	// #0
  44d810:	b	44d72c <ferror@plt+0x4a9fc>
  44d814:	mov	x22, #0x0                   	// #0
  44d818:	b	44d72c <ferror@plt+0x4a9fc>
  44d81c:	mov	x22, #0x0                   	// #0
  44d820:	b	44d72c <ferror@plt+0x4a9fc>
  44d824:	mov	x22, #0x0                   	// #0
  44d828:	b	44d72c <ferror@plt+0x4a9fc>
  44d82c:	ldp	x23, x24, [sp, #48]
  44d830:	ldp	x25, x26, [sp, #64]
  44d834:	str	xzr, [x22]
  44d838:	mov	x22, #0x0                   	// #0
  44d83c:	ldp	x27, x28, [sp, #80]
  44d840:	b	44d72c <ferror@plt+0x4a9fc>
  44d844:	ldp	x23, x24, [sp, #48]
  44d848:	ldp	x25, x26, [sp, #64]
  44d84c:	b	44d834 <ferror@plt+0x4ab04>
  44d850:	ldp	x23, x24, [sp, #48]
  44d854:	ldp	x25, x26, [sp, #64]
  44d858:	b	44d834 <ferror@plt+0x4ab04>
  44d85c:	ldp	x23, x24, [sp, #48]
  44d860:	ldp	x25, x26, [sp, #64]
  44d864:	ldp	x27, x28, [sp, #80]
  44d868:	b	44d72c <ferror@plt+0x4a9fc>
  44d86c:	stp	x29, x30, [sp, #-96]!
  44d870:	mov	x29, sp
  44d874:	stp	x19, x20, [sp, #16]
  44d878:	mov	x19, x0
  44d87c:	ldr	x0, [x0, #24]
  44d880:	ldrb	w2, [x0]
  44d884:	cmp	w2, #0x47
  44d888:	mov	w3, #0x54                  	// #84
  44d88c:	ccmp	w2, w3, #0x4, ne  // ne = any
  44d890:	b.ne	44deb4 <ferror@plt+0x4b184>  // b.any
  44d894:	ldr	w2, [x19, #72]
  44d898:	add	w1, w2, #0x14
  44d89c:	str	w1, [x19, #72]
  44d8a0:	ldrb	w1, [x0]
  44d8a4:	cmp	w1, w3
  44d8a8:	b.eq	44d958 <ferror@plt+0x4ac28>  // b.none
  44d8ac:	mov	x20, #0x0                   	// #0
  44d8b0:	cmp	w1, #0x47
  44d8b4:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44d8b8:	add	x1, x0, #0x1
  44d8bc:	str	x1, [x19, #24]
  44d8c0:	ldrb	w1, [x0, #1]
  44d8c4:	cbz	w1, 44dfb4 <ferror@plt+0x4b284>
  44d8c8:	add	x1, x0, #0x2
  44d8cc:	str	x1, [x19, #24]
  44d8d0:	ldrb	w1, [x0, #1]
  44d8d4:	cmp	w1, #0x54
  44d8d8:	b.eq	44dd18 <ferror@plt+0x4afe8>  // b.none
  44d8dc:	cmp	w1, #0x54
  44d8e0:	b.ls	44dc88 <ferror@plt+0x4af58>  // b.plast
  44d8e4:	cmp	w1, #0x56
  44d8e8:	b.eq	44dccc <ferror@plt+0x4af9c>  // b.none
  44d8ec:	mov	x20, #0x0                   	// #0
  44d8f0:	cmp	w1, #0x72
  44d8f4:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44d8f8:	mov	x0, x19
  44d8fc:	bl	444c44 <ferror@plt+0x41f14>
  44d900:	cmp	w0, #0x1
  44d904:	b.le	44dfbc <ferror@plt+0x4b28c>
  44d908:	ldr	x1, [x19, #24]
  44d90c:	ldrb	w2, [x1]
  44d910:	cbz	w2, 44dfc4 <ferror@plt+0x4b294>
  44d914:	stp	x21, x22, [sp, #32]
  44d918:	add	x21, x1, #0x1
  44d91c:	str	x21, [x19, #24]
  44d920:	ldrb	w1, [x1]
  44d924:	mov	x20, #0x0                   	// #0
  44d928:	cmp	w1, #0x5f
  44d92c:	b.ne	44e028 <ferror@plt+0x4b2f8>  // b.any
  44d930:	stp	x23, x24, [sp, #48]
  44d934:	stp	x25, x26, [sp, #64]
  44d938:	stp	x27, x28, [sp, #80]
  44d93c:	sub	w22, w0, #0x1
  44d940:	mov	x24, #0x0                   	// #0
  44d944:	mov	w26, #0x41                  	// #65
  44d948:	mov	w28, #0x2f                  	// #47
  44d94c:	mov	w27, #0x2e                  	// #46
  44d950:	mov	w25, #0x40                  	// #64
  44d954:	b	44de04 <ferror@plt+0x4b0d4>
  44d958:	add	x1, x0, #0x1
  44d95c:	str	x1, [x19, #24]
  44d960:	ldrb	w1, [x0, #1]
  44d964:	mov	x20, #0x0                   	// #0
  44d968:	cbz	w1, 44def0 <ferror@plt+0x4b1c0>
  44d96c:	add	x1, x0, #0x2
  44d970:	str	x1, [x19, #24]
  44d974:	ldrb	w0, [x0, #1]
  44d978:	cmp	w0, #0x53
  44d97c:	b.eq	44db44 <ferror@plt+0x4ae14>  // b.none
  44d980:	b.ls	44d9e0 <ferror@plt+0x4acb0>  // b.plast
  44d984:	cmp	w0, #0x63
  44d988:	b.eq	44dba4 <ferror@plt+0x4ae74>  // b.none
  44d98c:	b.ls	44da88 <ferror@plt+0x4ad58>  // b.plast
  44d990:	cmp	w0, #0x68
  44d994:	b.eq	44db68 <ferror@plt+0x4ae38>  // b.none
  44d998:	mov	x20, #0x0                   	// #0
  44d99c:	cmp	w0, #0x76
  44d9a0:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44d9a4:	mov	w1, #0x76                  	// #118
  44d9a8:	mov	x0, x19
  44d9ac:	bl	444d58 <ferror@plt+0x42028>
  44d9b0:	mov	x20, #0x0                   	// #0
  44d9b4:	cbz	w0, 44def0 <ferror@plt+0x4b1c0>
  44d9b8:	mov	w1, #0x0                   	// #0
  44d9bc:	mov	x0, x19
  44d9c0:	bl	44d86c <ferror@plt+0x4ab3c>
  44d9c4:	mov	x3, #0x0                   	// #0
  44d9c8:	mov	x2, x0
  44d9cc:	mov	w1, #0x10                  	// #16
  44d9d0:	mov	x0, x19
  44d9d4:	bl	444a5c <ferror@plt+0x41d2c>
  44d9d8:	mov	x20, x0
  44d9dc:	b	44def0 <ferror@plt+0x4b1c0>
  44d9e0:	cmp	w0, #0x48
  44d9e4:	b.eq	44dc64 <ferror@plt+0x4af34>  // b.none
  44d9e8:	b.ls	44da24 <ferror@plt+0x4acf4>  // b.plast
  44d9ec:	cmp	w0, #0x49
  44d9f0:	b.eq	44db20 <ferror@plt+0x4adf0>  // b.none
  44d9f4:	mov	x20, #0x0                   	// #0
  44d9f8:	cmp	w0, #0x4a
  44d9fc:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44da00:	mov	x0, x19
  44da04:	bl	44b598 <ferror@plt+0x48868>
  44da08:	mov	x3, #0x0                   	// #0
  44da0c:	mov	x2, x0
  44da10:	mov	w1, #0x12                  	// #18
  44da14:	mov	x0, x19
  44da18:	bl	444a5c <ferror@plt+0x41d2c>
  44da1c:	mov	x20, x0
  44da20:	b	44def0 <ferror@plt+0x4b1c0>
  44da24:	cmp	w0, #0x43
  44da28:	b.eq	44dbf0 <ferror@plt+0x4aec0>  // b.none
  44da2c:	cmp	w0, #0x46
  44da30:	b.ne	44da58 <ferror@plt+0x4ad28>  // b.any
  44da34:	mov	x0, x19
  44da38:	bl	44b598 <ferror@plt+0x48868>
  44da3c:	mov	x3, #0x0                   	// #0
  44da40:	mov	x2, x0
  44da44:	mov	w1, #0xe                   	// #14
  44da48:	mov	x0, x19
  44da4c:	bl	444a5c <ferror@plt+0x41d2c>
  44da50:	mov	x20, x0
  44da54:	b	44def0 <ferror@plt+0x4b1c0>
  44da58:	mov	x20, #0x0                   	// #0
  44da5c:	cmp	w0, #0x41
  44da60:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44da64:	mov	x0, x19
  44da68:	bl	44e344 <ferror@plt+0x4b614>
  44da6c:	mov	x3, #0x0                   	// #0
  44da70:	mov	x2, x0
  44da74:	mov	w1, #0x30                  	// #48
  44da78:	mov	x0, x19
  44da7c:	bl	444a5c <ferror@plt+0x41d2c>
  44da80:	mov	x20, x0
  44da84:	b	44def0 <ferror@plt+0x4b1c0>
  44da88:	cmp	w0, #0x56
  44da8c:	b.eq	44daf4 <ferror@plt+0x4adc4>  // b.none
  44da90:	cmp	w0, #0x57
  44da94:	b.ne	44dabc <ferror@plt+0x4ad8c>  // b.any
  44da98:	mov	x0, x19
  44da9c:	bl	44d324 <ferror@plt+0x4a5f4>
  44daa0:	mov	x3, #0x0                   	// #0
  44daa4:	mov	x2, x0
  44daa8:	mov	w1, #0x15                  	// #21
  44daac:	mov	x0, x19
  44dab0:	bl	444a5c <ferror@plt+0x41d2c>
  44dab4:	mov	x20, x0
  44dab8:	b	44def0 <ferror@plt+0x4b1c0>
  44dabc:	mov	x20, #0x0                   	// #0
  44dac0:	cmp	w0, #0x54
  44dac4:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44dac8:	add	w2, w2, #0xa
  44dacc:	str	w2, [x19, #72]
  44dad0:	mov	x0, x19
  44dad4:	bl	44b598 <ferror@plt+0x48868>
  44dad8:	mov	x3, #0x0                   	// #0
  44dadc:	mov	x2, x0
  44dae0:	mov	w1, #0xa                   	// #10
  44dae4:	mov	x0, x19
  44dae8:	bl	444a5c <ferror@plt+0x41d2c>
  44daec:	mov	x20, x0
  44daf0:	b	44def0 <ferror@plt+0x4b1c0>
  44daf4:	add	w2, w2, #0xf
  44daf8:	str	w2, [x19, #72]
  44dafc:	mov	x0, x19
  44db00:	bl	44b598 <ferror@plt+0x48868>
  44db04:	mov	x3, #0x0                   	// #0
  44db08:	mov	x2, x0
  44db0c:	mov	w1, #0x9                   	// #9
  44db10:	mov	x0, x19
  44db14:	bl	444a5c <ferror@plt+0x41d2c>
  44db18:	mov	x20, x0
  44db1c:	b	44def0 <ferror@plt+0x4b1c0>
  44db20:	mov	x0, x19
  44db24:	bl	44b598 <ferror@plt+0x48868>
  44db28:	mov	x3, #0x0                   	// #0
  44db2c:	mov	x2, x0
  44db30:	mov	w1, #0xc                   	// #12
  44db34:	mov	x0, x19
  44db38:	bl	444a5c <ferror@plt+0x41d2c>
  44db3c:	mov	x20, x0
  44db40:	b	44def0 <ferror@plt+0x4b1c0>
  44db44:	mov	x0, x19
  44db48:	bl	44b598 <ferror@plt+0x48868>
  44db4c:	mov	x3, #0x0                   	// #0
  44db50:	mov	x2, x0
  44db54:	mov	w1, #0xd                   	// #13
  44db58:	mov	x0, x19
  44db5c:	bl	444a5c <ferror@plt+0x41d2c>
  44db60:	mov	x20, x0
  44db64:	b	44def0 <ferror@plt+0x4b1c0>
  44db68:	mov	w1, #0x68                  	// #104
  44db6c:	mov	x0, x19
  44db70:	bl	444d58 <ferror@plt+0x42028>
  44db74:	mov	x20, #0x0                   	// #0
  44db78:	cbz	w0, 44def0 <ferror@plt+0x4b1c0>
  44db7c:	mov	w1, #0x0                   	// #0
  44db80:	mov	x0, x19
  44db84:	bl	44d86c <ferror@plt+0x4ab3c>
  44db88:	mov	x3, #0x0                   	// #0
  44db8c:	mov	x2, x0
  44db90:	mov	w1, #0xf                   	// #15
  44db94:	mov	x0, x19
  44db98:	bl	444a5c <ferror@plt+0x41d2c>
  44db9c:	mov	x20, x0
  44dba0:	b	44def0 <ferror@plt+0x4b1c0>
  44dba4:	mov	w1, #0x0                   	// #0
  44dba8:	mov	x0, x19
  44dbac:	bl	444d58 <ferror@plt+0x42028>
  44dbb0:	mov	x20, #0x0                   	// #0
  44dbb4:	cbz	w0, 44def0 <ferror@plt+0x4b1c0>
  44dbb8:	mov	w1, #0x0                   	// #0
  44dbbc:	mov	x0, x19
  44dbc0:	bl	444d58 <ferror@plt+0x42028>
  44dbc4:	cbz	w0, 44def0 <ferror@plt+0x4b1c0>
  44dbc8:	mov	w1, #0x0                   	// #0
  44dbcc:	mov	x0, x19
  44dbd0:	bl	44d86c <ferror@plt+0x4ab3c>
  44dbd4:	mov	x3, #0x0                   	// #0
  44dbd8:	mov	x2, x0
  44dbdc:	mov	w1, #0x11                  	// #17
  44dbe0:	mov	x0, x19
  44dbe4:	bl	444a5c <ferror@plt+0x41d2c>
  44dbe8:	mov	x20, x0
  44dbec:	b	44def0 <ferror@plt+0x4b1c0>
  44dbf0:	stp	x21, x22, [sp, #32]
  44dbf4:	mov	x0, x19
  44dbf8:	bl	44b598 <ferror@plt+0x48868>
  44dbfc:	mov	x21, x0
  44dc00:	mov	x0, x19
  44dc04:	bl	444c44 <ferror@plt+0x41f14>
  44dc08:	tbnz	w0, #31, 44dfa8 <ferror@plt+0x4b278>
  44dc0c:	ldr	x0, [x19, #24]
  44dc10:	ldrb	w1, [x0]
  44dc14:	mov	x20, #0x0                   	// #0
  44dc18:	cmp	w1, #0x5f
  44dc1c:	b.eq	44dc28 <ferror@plt+0x4aef8>  // b.none
  44dc20:	ldp	x21, x22, [sp, #32]
  44dc24:	b	44def0 <ferror@plt+0x4b1c0>
  44dc28:	add	x0, x0, #0x1
  44dc2c:	str	x0, [x19, #24]
  44dc30:	mov	x0, x19
  44dc34:	bl	44b598 <ferror@plt+0x48868>
  44dc38:	ldr	w1, [x19, #72]
  44dc3c:	add	w1, w1, #0x5
  44dc40:	str	w1, [x19, #72]
  44dc44:	mov	x3, x21
  44dc48:	mov	x2, x0
  44dc4c:	mov	w1, #0xb                   	// #11
  44dc50:	mov	x0, x19
  44dc54:	bl	444a5c <ferror@plt+0x41d2c>
  44dc58:	mov	x20, x0
  44dc5c:	ldp	x21, x22, [sp, #32]
  44dc60:	b	44def0 <ferror@plt+0x4b1c0>
  44dc64:	mov	x0, x19
  44dc68:	bl	44d324 <ferror@plt+0x4a5f4>
  44dc6c:	mov	x3, #0x0                   	// #0
  44dc70:	mov	x2, x0
  44dc74:	mov	w1, #0x14                  	// #20
  44dc78:	mov	x0, x19
  44dc7c:	bl	444a5c <ferror@plt+0x41d2c>
  44dc80:	mov	x20, x0
  44dc84:	b	44def0 <ferror@plt+0x4b1c0>
  44dc88:	cmp	w1, #0x41
  44dc8c:	b.eq	44dcf0 <ferror@plt+0x4afc0>  // b.none
  44dc90:	mov	x20, #0x0                   	// #0
  44dc94:	cmp	w1, #0x52
  44dc98:	b.ne	44def0 <ferror@plt+0x4b1c0>  // b.any
  44dc9c:	mov	x0, x19
  44dca0:	bl	44d324 <ferror@plt+0x4a5f4>
  44dca4:	mov	x20, x0
  44dca8:	mov	x0, x19
  44dcac:	bl	444d14 <ferror@plt+0x41fe4>
  44dcb0:	mov	x3, x0
  44dcb4:	mov	x2, x20
  44dcb8:	mov	w1, #0x16                  	// #22
  44dcbc:	mov	x0, x19
  44dcc0:	bl	444a5c <ferror@plt+0x41d2c>
  44dcc4:	mov	x20, x0
  44dcc8:	b	44def0 <ferror@plt+0x4b1c0>
  44dccc:	mov	x0, x19
  44dcd0:	bl	44d324 <ferror@plt+0x4a5f4>
  44dcd4:	mov	x3, #0x0                   	// #0
  44dcd8:	mov	x2, x0
  44dcdc:	mov	w1, #0x13                  	// #19
  44dce0:	mov	x0, x19
  44dce4:	bl	444a5c <ferror@plt+0x41d2c>
  44dce8:	mov	x20, x0
  44dcec:	b	44def0 <ferror@plt+0x4b1c0>
  44dcf0:	mov	w1, #0x0                   	// #0
  44dcf4:	mov	x0, x19
  44dcf8:	bl	44d86c <ferror@plt+0x4ab3c>
  44dcfc:	mov	x3, #0x0                   	// #0
  44dd00:	mov	x2, x0
  44dd04:	mov	w1, #0x17                  	// #23
  44dd08:	mov	x0, x19
  44dd0c:	bl	444a5c <ferror@plt+0x41d2c>
  44dd10:	mov	x20, x0
  44dd14:	b	44def0 <ferror@plt+0x4b1c0>
  44dd18:	ldrb	w1, [x0, #2]
  44dd1c:	cbz	w1, 44dd34 <ferror@plt+0x4b004>
  44dd20:	add	x1, x0, #0x3
  44dd24:	str	x1, [x19, #24]
  44dd28:	ldrb	w0, [x0, #2]
  44dd2c:	cmp	w0, #0x6e
  44dd30:	b.eq	44dd5c <ferror@plt+0x4b02c>  // b.none
  44dd34:	mov	w1, #0x0                   	// #0
  44dd38:	mov	x0, x19
  44dd3c:	bl	44d86c <ferror@plt+0x4ab3c>
  44dd40:	mov	x3, #0x0                   	// #0
  44dd44:	mov	x2, x0
  44dd48:	mov	w1, #0x49                  	// #73
  44dd4c:	mov	x0, x19
  44dd50:	bl	444a5c <ferror@plt+0x41d2c>
  44dd54:	mov	x20, x0
  44dd58:	b	44def0 <ferror@plt+0x4b1c0>
  44dd5c:	mov	w1, #0x0                   	// #0
  44dd60:	mov	x0, x19
  44dd64:	bl	44d86c <ferror@plt+0x4ab3c>
  44dd68:	mov	x3, #0x0                   	// #0
  44dd6c:	mov	x2, x0
  44dd70:	mov	w1, #0x4a                  	// #74
  44dd74:	mov	x0, x19
  44dd78:	bl	444a5c <ferror@plt+0x41d2c>
  44dd7c:	mov	x20, x0
  44dd80:	b	44def0 <ferror@plt+0x4b1c0>
  44dd84:	mov	x0, #0x1                   	// #1
  44dd88:	mov	w23, #0x0                   	// #0
  44dd8c:	cmp	w22, #0x0
  44dd90:	b.le	44ddb4 <ferror@plt+0x4b084>
  44dd94:	mov	w23, w0
  44dd98:	cmp	w22, w0
  44dd9c:	b.le	44ddb4 <ferror@plt+0x4b084>
  44dda0:	ldrb	w1, [x21, x0]
  44dda4:	add	x0, x0, #0x1
  44dda8:	cmp	w1, #0x24
  44ddac:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44ddb0:	b.ne	44dd94 <ferror@plt+0x4b064>  // b.any
  44ddb4:	mov	w2, w23
  44ddb8:	mov	x1, x21
  44ddbc:	mov	x0, x19
  44ddc0:	bl	44b0c8 <ferror@plt+0x48398>
  44ddc4:	mov	x20, x0
  44ddc8:	ldr	x21, [x19, #24]
  44ddcc:	add	x21, x21, w23, sxtw
  44ddd0:	str	x21, [x19, #24]
  44ddd4:	sub	w22, w22, w23
  44ddd8:	cbz	x0, 44e030 <ferror@plt+0x4b300>
  44dddc:	cbz	x24, 44de80 <ferror@plt+0x4b150>
  44dde0:	mov	x3, x20
  44dde4:	mov	x2, x24
  44dde8:	mov	w1, w25
  44ddec:	mov	x0, x19
  44ddf0:	bl	444a5c <ferror@plt+0x41d2c>
  44ddf4:	mov	x24, x0
  44ddf8:	cbz	x0, 44dfe4 <ferror@plt+0x4b2b4>
  44ddfc:	cmp	w22, #0x0
  44de00:	b.le	44de88 <ferror@plt+0x4b158>
  44de04:	ldrb	w0, [x21]
  44de08:	cbz	w0, 44dfcc <ferror@plt+0x4b29c>
  44de0c:	cmp	w0, #0x24
  44de10:	b.ne	44dd84 <ferror@plt+0x4b054>  // b.any
  44de14:	ldrb	w21, [x21, #1]
  44de18:	cmp	w21, #0x53
  44de1c:	b.eq	44de48 <ferror@plt+0x4b118>  // b.none
  44de20:	cmp	w21, #0x5f
  44de24:	b.eq	44de50 <ferror@plt+0x4b120>  // b.none
  44de28:	cmp	w21, #0x24
  44de2c:	b.eq	44de54 <ferror@plt+0x4b124>  // b.none
  44de30:	mov	x20, #0x0                   	// #0
  44de34:	ldp	x21, x22, [sp, #32]
  44de38:	ldp	x23, x24, [sp, #48]
  44de3c:	ldp	x25, x26, [sp, #64]
  44de40:	ldp	x27, x28, [sp, #80]
  44de44:	b	44def0 <ferror@plt+0x4b1c0>
  44de48:	mov	w21, w28
  44de4c:	b	44de54 <ferror@plt+0x4b124>
  44de50:	mov	w21, w27
  44de54:	mov	x0, x19
  44de58:	bl	444a1c <ferror@plt+0x41cec>
  44de5c:	mov	x20, x0
  44de60:	cbz	x0, 44e008 <ferror@plt+0x4b2d8>
  44de64:	str	w26, [x0]
  44de68:	str	w21, [x0, #8]
  44de6c:	ldr	x21, [x19, #24]
  44de70:	add	x21, x21, #0x2
  44de74:	str	x21, [x19, #24]
  44de78:	sub	w22, w22, #0x2
  44de7c:	b	44dddc <ferror@plt+0x4b0ac>
  44de80:	mov	x24, x20
  44de84:	b	44ddfc <ferror@plt+0x4b0cc>
  44de88:	mov	x3, #0x0                   	// #0
  44de8c:	mov	x2, x24
  44de90:	mov	w1, #0x3f                  	// #63
  44de94:	mov	x0, x19
  44de98:	bl	444a5c <ferror@plt+0x41d2c>
  44de9c:	mov	x20, x0
  44dea0:	ldp	x21, x22, [sp, #32]
  44dea4:	ldp	x23, x24, [sp, #48]
  44dea8:	ldp	x25, x26, [sp, #64]
  44deac:	ldp	x27, x28, [sp, #80]
  44deb0:	b	44def0 <ferror@plt+0x4b1c0>
  44deb4:	stp	x21, x22, [sp, #32]
  44deb8:	mov	w21, w1
  44debc:	mov	x0, x19
  44dec0:	bl	44d324 <ferror@plt+0x4a5f4>
  44dec4:	mov	x20, x0
  44dec8:	cbz	x0, 44e044 <ferror@plt+0x4b314>
  44decc:	cbz	w21, 44ded8 <ferror@plt+0x4b1a8>
  44ded0:	ldr	w0, [x19, #16]
  44ded4:	tbz	w0, #0, 44df00 <ferror@plt+0x4b1d0>
  44ded8:	ldr	x0, [x19, #24]
  44dedc:	ldrb	w0, [x0]
  44dee0:	cmp	w0, #0x45
  44dee4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44dee8:	b.ne	44df4c <ferror@plt+0x4b21c>  // b.any
  44deec:	ldp	x21, x22, [sp, #32]
  44def0:	mov	x0, x20
  44def4:	ldp	x19, x20, [sp, #16]
  44def8:	ldp	x29, x30, [sp], #96
  44defc:	ret
  44df00:	ldr	w19, [x20]
  44df04:	mov	w0, w19
  44df08:	bl	4449ec <ferror@plt+0x41cbc>
  44df0c:	cbz	w0, 44df18 <ferror@plt+0x4b1e8>
  44df10:	ldr	x20, [x20, #8]
  44df14:	b	44df00 <ferror@plt+0x4b1d0>
  44df18:	cmp	w19, #0x2
  44df1c:	b.eq	44df28 <ferror@plt+0x4b1f8>  // b.none
  44df20:	ldp	x21, x22, [sp, #32]
  44df24:	b	44def0 <ferror@plt+0x4b1c0>
  44df28:	ldr	x19, [x20, #16]
  44df2c:	ldr	w0, [x19]
  44df30:	bl	4449ec <ferror@plt+0x41cbc>
  44df34:	cbz	w0, 44df44 <ferror@plt+0x4b214>
  44df38:	ldr	x0, [x19, #8]
  44df3c:	str	x0, [x20, #16]
  44df40:	b	44df28 <ferror@plt+0x4b1f8>
  44df44:	ldp	x21, x22, [sp, #32]
  44df48:	b	44def0 <ferror@plt+0x4b1c0>
  44df4c:	mov	x0, x20
  44df50:	bl	444bac <ferror@plt+0x41e7c>
  44df54:	mov	w1, w0
  44df58:	mov	x0, x19
  44df5c:	bl	44c6d0 <ferror@plt+0x499a0>
  44df60:	mov	x3, x0
  44df64:	cbz	x0, 44dffc <ferror@plt+0x4b2cc>
  44df68:	cbnz	w21, 44df78 <ferror@plt+0x4b248>
  44df6c:	ldr	w0, [x20]
  44df70:	cmp	w0, #0x2
  44df74:	b.eq	44df94 <ferror@plt+0x4b264>  // b.none
  44df78:	mov	x2, x20
  44df7c:	mov	w1, #0x3                   	// #3
  44df80:	mov	x0, x19
  44df84:	bl	444a5c <ferror@plt+0x41d2c>
  44df88:	mov	x20, x0
  44df8c:	ldp	x21, x22, [sp, #32]
  44df90:	b	44def0 <ferror@plt+0x4b1c0>
  44df94:	ldr	w0, [x3]
  44df98:	cmp	w0, #0x29
  44df9c:	b.ne	44df78 <ferror@plt+0x4b248>  // b.any
  44dfa0:	str	xzr, [x3, #8]
  44dfa4:	b	44df78 <ferror@plt+0x4b248>
  44dfa8:	mov	x20, #0x0                   	// #0
  44dfac:	ldp	x21, x22, [sp, #32]
  44dfb0:	b	44def0 <ferror@plt+0x4b1c0>
  44dfb4:	mov	x20, #0x0                   	// #0
  44dfb8:	b	44def0 <ferror@plt+0x4b1c0>
  44dfbc:	mov	x20, #0x0                   	// #0
  44dfc0:	b	44def0 <ferror@plt+0x4b1c0>
  44dfc4:	mov	x20, #0x0                   	// #0
  44dfc8:	b	44def0 <ferror@plt+0x4b1c0>
  44dfcc:	mov	x20, #0x0                   	// #0
  44dfd0:	ldp	x21, x22, [sp, #32]
  44dfd4:	ldp	x23, x24, [sp, #48]
  44dfd8:	ldp	x25, x26, [sp, #64]
  44dfdc:	ldp	x27, x28, [sp, #80]
  44dfe0:	b	44def0 <ferror@plt+0x4b1c0>
  44dfe4:	mov	x20, x0
  44dfe8:	ldp	x21, x22, [sp, #32]
  44dfec:	ldp	x23, x24, [sp, #48]
  44dff0:	ldp	x25, x26, [sp, #64]
  44dff4:	ldp	x27, x28, [sp, #80]
  44dff8:	b	44def0 <ferror@plt+0x4b1c0>
  44dffc:	mov	x20, x0
  44e000:	ldp	x21, x22, [sp, #32]
  44e004:	b	44def0 <ferror@plt+0x4b1c0>
  44e008:	ldr	x0, [x19, #24]
  44e00c:	add	x0, x0, #0x2
  44e010:	str	x0, [x19, #24]
  44e014:	ldp	x21, x22, [sp, #32]
  44e018:	ldp	x23, x24, [sp, #48]
  44e01c:	ldp	x25, x26, [sp, #64]
  44e020:	ldp	x27, x28, [sp, #80]
  44e024:	b	44def0 <ferror@plt+0x4b1c0>
  44e028:	ldp	x21, x22, [sp, #32]
  44e02c:	b	44def0 <ferror@plt+0x4b1c0>
  44e030:	ldp	x21, x22, [sp, #32]
  44e034:	ldp	x23, x24, [sp, #48]
  44e038:	ldp	x25, x26, [sp, #64]
  44e03c:	ldp	x27, x28, [sp, #80]
  44e040:	b	44def0 <ferror@plt+0x4b1c0>
  44e044:	ldp	x21, x22, [sp, #32]
  44e048:	b	44def0 <ferror@plt+0x4b1c0>
  44e04c:	stp	x29, x30, [sp, #-48]!
  44e050:	mov	x29, sp
  44e054:	stp	x19, x20, [sp, #16]
  44e058:	str	x21, [sp, #32]
  44e05c:	mov	x19, x0
  44e060:	mov	w21, w1
  44e064:	ldr	x0, [x0, #24]
  44e068:	ldrb	w1, [x0]
  44e06c:	cmp	w1, #0x5f
  44e070:	b.eq	44e0c8 <ferror@plt+0x4b398>  // b.none
  44e074:	cbnz	w21, 44e1dc <ferror@plt+0x4b4ac>
  44e078:	ldr	x0, [x19, #24]
  44e07c:	ldrb	w1, [x0]
  44e080:	mov	x20, #0x0                   	// #0
  44e084:	cmp	w1, #0x5a
  44e088:	b.ne	44e1e0 <ferror@plt+0x4b4b0>  // b.any
  44e08c:	add	x0, x0, #0x1
  44e090:	str	x0, [x19, #24]
  44e094:	mov	w1, w21
  44e098:	mov	x0, x19
  44e09c:	bl	44d86c <ferror@plt+0x4ab3c>
  44e0a0:	mov	x20, x0
  44e0a4:	cbz	w21, 44e1e0 <ferror@plt+0x4b4b0>
  44e0a8:	ldr	w0, [x19, #16]
  44e0ac:	tbz	w0, #0, 44e1e0 <ferror@plt+0x4b4b0>
  44e0b0:	ldr	x1, [x19, #24]
  44e0b4:	ldrb	w0, [x1]
  44e0b8:	mov	w21, #0x4e                  	// #78
  44e0bc:	cmp	w0, #0x2e
  44e0c0:	b.eq	44e19c <ferror@plt+0x4b46c>  // b.none
  44e0c4:	b	44e1e0 <ferror@plt+0x4b4b0>
  44e0c8:	add	x0, x0, #0x1
  44e0cc:	str	x0, [x19, #24]
  44e0d0:	b	44e078 <ferror@plt+0x4b348>
  44e0d4:	add	x3, x1, #0x2
  44e0d8:	ldrb	w2, [x1, #2]
  44e0dc:	sub	w0, w2, #0x61
  44e0e0:	and	w0, w0, #0xff
  44e0e4:	cmp	w2, #0x5f
  44e0e8:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  44e0ec:	b.hi	44e1c8 <ferror@plt+0x4b498>  // b.pmore
  44e0f0:	ldrb	w2, [x3, #1]!
  44e0f4:	sub	w0, w2, #0x61
  44e0f8:	and	w0, w0, #0xff
  44e0fc:	cmp	w2, #0x5f
  44e100:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  44e104:	b.ls	44e0f0 <ferror@plt+0x4b3c0>  // b.plast
  44e108:	b	44e1c8 <ferror@plt+0x4b498>
  44e10c:	ldrb	w0, [x2, #1]!
  44e110:	sub	w0, w0, #0x30
  44e114:	and	w0, w0, #0xff
  44e118:	cmp	w0, #0x9
  44e11c:	b.ls	44e10c <ferror@plt+0x4b3dc>  // b.plast
  44e120:	ldrb	w0, [x2]
  44e124:	cmp	w0, #0x2e
  44e128:	b.ne	44e164 <ferror@plt+0x4b434>  // b.any
  44e12c:	mov	x3, x2
  44e130:	ldrb	w0, [x3, #1]
  44e134:	sub	w0, w0, #0x30
  44e138:	and	w0, w0, #0xff
  44e13c:	cmp	w0, #0x9
  44e140:	b.hi	44e160 <ferror@plt+0x4b430>  // b.pmore
  44e144:	add	x2, x3, #0x2
  44e148:	ldrb	w0, [x3, #2]
  44e14c:	sub	w0, w0, #0x30
  44e150:	and	w0, w0, #0xff
  44e154:	cmp	w0, #0x9
  44e158:	b.ls	44e10c <ferror@plt+0x4b3dc>  // b.plast
  44e15c:	b	44e120 <ferror@plt+0x4b3f0>
  44e160:	mov	x2, x3
  44e164:	str	x2, [x19, #24]
  44e168:	sub	w2, w2, w1
  44e16c:	mov	x0, x19
  44e170:	bl	44b0c8 <ferror@plt+0x48398>
  44e174:	mov	x3, x0
  44e178:	mov	x2, x20
  44e17c:	mov	w1, w21
  44e180:	mov	x0, x19
  44e184:	bl	444a5c <ferror@plt+0x41d2c>
  44e188:	mov	x20, x0
  44e18c:	ldr	x1, [x19, #24]
  44e190:	ldrb	w0, [x1]
  44e194:	cmp	w0, #0x2e
  44e198:	b.ne	44e1e0 <ferror@plt+0x4b4b0>  // b.any
  44e19c:	ldrb	w0, [x1, #1]
  44e1a0:	sub	w2, w0, #0x61
  44e1a4:	and	w2, w2, #0xff
  44e1a8:	cmp	w0, #0x5f
  44e1ac:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  44e1b0:	b.ls	44e0d4 <ferror@plt+0x4b3a4>  // b.plast
  44e1b4:	sub	w0, w0, #0x30
  44e1b8:	and	w0, w0, #0xff
  44e1bc:	cmp	w0, #0x9
  44e1c0:	b.hi	44e1e0 <ferror@plt+0x4b4b0>  // b.pmore
  44e1c4:	mov	x3, x1
  44e1c8:	ldrb	w0, [x3]
  44e1cc:	mov	x2, x3
  44e1d0:	cmp	w0, #0x2e
  44e1d4:	b.eq	44e130 <ferror@plt+0x4b400>  // b.none
  44e1d8:	b	44e164 <ferror@plt+0x4b434>
  44e1dc:	mov	x20, #0x0                   	// #0
  44e1e0:	mov	x0, x20
  44e1e4:	ldp	x19, x20, [sp, #16]
  44e1e8:	ldr	x21, [sp, #32]
  44e1ec:	ldp	x29, x30, [sp], #48
  44e1f0:	ret
  44e1f4:	stp	x29, x30, [sp, #-48]!
  44e1f8:	mov	x29, sp
  44e1fc:	stp	x19, x20, [sp, #16]
  44e200:	mov	x19, x0
  44e204:	ldr	x0, [x0, #24]
  44e208:	ldrb	w1, [x0]
  44e20c:	mov	x20, #0x0                   	// #0
  44e210:	cmp	w1, #0x4c
  44e214:	b.ne	44e25c <ferror@plt+0x4b52c>  // b.any
  44e218:	add	x1, x0, #0x1
  44e21c:	str	x1, [x19, #24]
  44e220:	ldrb	w0, [x0, #1]
  44e224:	cmp	w0, #0x5f
  44e228:	mov	w1, #0x5a                  	// #90
  44e22c:	ccmp	w0, w1, #0x4, ne  // ne = any
  44e230:	b.ne	44e26c <ferror@plt+0x4b53c>  // b.any
  44e234:	mov	w1, #0x0                   	// #0
  44e238:	mov	x0, x19
  44e23c:	bl	44e04c <ferror@plt+0x4b31c>
  44e240:	mov	x20, x0
  44e244:	ldr	x0, [x19, #24]
  44e248:	ldrb	w1, [x0]
  44e24c:	cmp	w1, #0x45
  44e250:	b.ne	44e33c <ferror@plt+0x4b60c>  // b.any
  44e254:	add	x0, x0, #0x1
  44e258:	str	x0, [x19, #24]
  44e25c:	mov	x0, x20
  44e260:	ldp	x19, x20, [sp, #16]
  44e264:	ldp	x29, x30, [sp], #48
  44e268:	ret
  44e26c:	mov	x0, x19
  44e270:	bl	44b598 <ferror@plt+0x48868>
  44e274:	mov	x20, x0
  44e278:	cbz	x0, 44e25c <ferror@plt+0x4b52c>
  44e27c:	str	x21, [sp, #32]
  44e280:	ldr	w0, [x0]
  44e284:	cmp	w0, #0x27
  44e288:	b.eq	44e2f8 <ferror@plt+0x4b5c8>  // b.none
  44e28c:	ldr	x0, [x19, #24]
  44e290:	ldrb	w1, [x0]
  44e294:	mov	w21, #0x3d                  	// #61
  44e298:	cmp	w1, #0x6e
  44e29c:	b.eq	44e318 <ferror@plt+0x4b5e8>  // b.none
  44e2a0:	ldr	x1, [x19, #24]
  44e2a4:	ldrb	w4, [x1]
  44e2a8:	cmp	w4, #0x45
  44e2ac:	b.eq	44e328 <ferror@plt+0x4b5f8>  // b.none
  44e2b0:	add	x3, x1, #0x1
  44e2b4:	cbz	w4, 44e330 <ferror@plt+0x4b600>
  44e2b8:	mov	x2, x3
  44e2bc:	str	x3, [x19, #24]
  44e2c0:	ldrb	w4, [x3], #1
  44e2c4:	cmp	w4, #0x45
  44e2c8:	b.ne	44e2b4 <ferror@plt+0x4b584>  // b.any
  44e2cc:	sub	w2, w2, w1
  44e2d0:	mov	x0, x19
  44e2d4:	bl	44b0c8 <ferror@plt+0x48398>
  44e2d8:	mov	x3, x0
  44e2dc:	mov	x2, x20
  44e2e0:	mov	w1, w21
  44e2e4:	mov	x0, x19
  44e2e8:	bl	444a5c <ferror@plt+0x41d2c>
  44e2ec:	mov	x20, x0
  44e2f0:	ldr	x21, [sp, #32]
  44e2f4:	b	44e244 <ferror@plt+0x4b514>
  44e2f8:	ldr	x0, [x20, #8]
  44e2fc:	ldr	w1, [x0, #28]
  44e300:	cbz	w1, 44e28c <ferror@plt+0x4b55c>
  44e304:	ldr	w1, [x19, #72]
  44e308:	ldr	w0, [x0, #8]
  44e30c:	sub	w0, w1, w0
  44e310:	str	w0, [x19, #72]
  44e314:	b	44e28c <ferror@plt+0x4b55c>
  44e318:	add	x0, x0, #0x1
  44e31c:	str	x0, [x19, #24]
  44e320:	mov	w21, #0x3e                  	// #62
  44e324:	b	44e2a0 <ferror@plt+0x4b570>
  44e328:	mov	x2, x1
  44e32c:	b	44e2cc <ferror@plt+0x4b59c>
  44e330:	mov	x20, #0x0                   	// #0
  44e334:	ldr	x21, [sp, #32]
  44e338:	b	44e25c <ferror@plt+0x4b52c>
  44e33c:	mov	x20, #0x0                   	// #0
  44e340:	b	44e25c <ferror@plt+0x4b52c>
  44e344:	stp	x29, x30, [sp, #-32]!
  44e348:	mov	x29, sp
  44e34c:	str	x19, [sp, #16]
  44e350:	mov	x19, x0
  44e354:	ldr	x0, [x0, #24]
  44e358:	ldrb	w1, [x0]
  44e35c:	cmp	w1, #0x4c
  44e360:	b.eq	44e3b8 <ferror@plt+0x4b688>  // b.none
  44e364:	b.hi	44e384 <ferror@plt+0x4b654>  // b.pmore
  44e368:	sub	w1, w1, #0x49
  44e36c:	and	w1, w1, #0xff
  44e370:	cmp	w1, #0x1
  44e374:	b.hi	44e3cc <ferror@plt+0x4b69c>  // b.pmore
  44e378:	mov	x0, x19
  44e37c:	bl	44e490 <ferror@plt+0x4b760>
  44e380:	b	44e3c0 <ferror@plt+0x4b690>
  44e384:	cmp	w1, #0x58
  44e388:	b.ne	44e3cc <ferror@plt+0x4b69c>  // b.any
  44e38c:	add	x0, x0, #0x1
  44e390:	str	x0, [x19, #24]
  44e394:	mov	x0, x19
  44e398:	bl	44c818 <ferror@plt+0x49ae8>
  44e39c:	ldr	x1, [x19, #24]
  44e3a0:	ldrb	w2, [x1]
  44e3a4:	cmp	w2, #0x45
  44e3a8:	b.ne	44e3d8 <ferror@plt+0x4b6a8>  // b.any
  44e3ac:	add	x1, x1, #0x1
  44e3b0:	str	x1, [x19, #24]
  44e3b4:	b	44e3c0 <ferror@plt+0x4b690>
  44e3b8:	mov	x0, x19
  44e3bc:	bl	44e1f4 <ferror@plt+0x4b4c4>
  44e3c0:	ldr	x19, [sp, #16]
  44e3c4:	ldp	x29, x30, [sp], #32
  44e3c8:	ret
  44e3cc:	mov	x0, x19
  44e3d0:	bl	44b598 <ferror@plt+0x48868>
  44e3d4:	b	44e3c0 <ferror@plt+0x4b690>
  44e3d8:	mov	x0, #0x0                   	// #0
  44e3dc:	b	44e3c0 <ferror@plt+0x4b690>
  44e3e0:	stp	x29, x30, [sp, #-64]!
  44e3e4:	mov	x29, sp
  44e3e8:	stp	x19, x20, [sp, #16]
  44e3ec:	stp	x21, x22, [sp, #32]
  44e3f0:	mov	x19, x0
  44e3f4:	ldr	x22, [x0, #64]
  44e3f8:	ldr	x0, [x0, #24]
  44e3fc:	ldrb	w1, [x0]
  44e400:	cmp	w1, #0x45
  44e404:	b.eq	44e470 <ferror@plt+0x4b740>  // b.none
  44e408:	str	xzr, [sp, #56]
  44e40c:	add	x20, sp, #0x38
  44e410:	mov	w21, #0x2f                  	// #47
  44e414:	mov	x0, x19
  44e418:	bl	44e344 <ferror@plt+0x4b614>
  44e41c:	cbz	x0, 44e460 <ferror@plt+0x4b730>
  44e420:	mov	x3, #0x0                   	// #0
  44e424:	mov	x2, x0
  44e428:	mov	w1, w21
  44e42c:	mov	x0, x19
  44e430:	bl	444a5c <ferror@plt+0x41d2c>
  44e434:	str	x0, [x20]
  44e438:	cbz	x0, 44e460 <ferror@plt+0x4b730>
  44e43c:	add	x20, x0, #0x10
  44e440:	ldr	x0, [x19, #24]
  44e444:	ldrb	w1, [x0]
  44e448:	cmp	w1, #0x45
  44e44c:	b.ne	44e414 <ferror@plt+0x4b6e4>  // b.any
  44e450:	add	x0, x0, #0x1
  44e454:	str	x0, [x19, #24]
  44e458:	str	x22, [x19, #64]
  44e45c:	ldr	x0, [sp, #56]
  44e460:	ldp	x19, x20, [sp, #16]
  44e464:	ldp	x21, x22, [sp, #32]
  44e468:	ldp	x29, x30, [sp], #64
  44e46c:	ret
  44e470:	add	x0, x0, #0x1
  44e474:	str	x0, [x19, #24]
  44e478:	mov	x3, #0x0                   	// #0
  44e47c:	mov	x2, #0x0                   	// #0
  44e480:	mov	w1, #0x2f                  	// #47
  44e484:	mov	x0, x19
  44e488:	bl	444a5c <ferror@plt+0x41d2c>
  44e48c:	b	44e460 <ferror@plt+0x4b730>
  44e490:	ldr	x2, [x0, #24]
  44e494:	ldrb	w1, [x2]
  44e498:	sub	w1, w1, #0x49
  44e49c:	and	w1, w1, #0xff
  44e4a0:	cmp	w1, #0x1
  44e4a4:	b.hi	44e4c4 <ferror@plt+0x4b794>  // b.pmore
  44e4a8:	stp	x29, x30, [sp, #-16]!
  44e4ac:	mov	x29, sp
  44e4b0:	add	x2, x2, #0x1
  44e4b4:	str	x2, [x0, #24]
  44e4b8:	bl	44e3e0 <ferror@plt+0x4b6b0>
  44e4bc:	ldp	x29, x30, [sp], #16
  44e4c0:	ret
  44e4c4:	mov	x0, #0x0                   	// #0
  44e4c8:	ret
  44e4cc:	stp	x29, x30, [sp, #-48]!
  44e4d0:	mov	x29, sp
  44e4d4:	stp	x19, x20, [sp, #16]
  44e4d8:	mov	x19, x0
  44e4dc:	ldr	x0, [x0, #24]
  44e4e0:	ldrb	w1, [x0]
  44e4e4:	cmp	w1, #0x4c
  44e4e8:	b.eq	44e544 <ferror@plt+0x4b814>  // b.none
  44e4ec:	cmp	w1, #0x54
  44e4f0:	b.eq	44e554 <ferror@plt+0x4b824>  // b.none
  44e4f4:	cmp	w1, #0x73
  44e4f8:	b.eq	44e564 <ferror@plt+0x4b834>  // b.none
  44e4fc:	cmp	w1, #0x66
  44e500:	b.eq	44e6a4 <ferror@plt+0x4b974>  // b.none
  44e504:	sub	w2, w1, #0x30
  44e508:	and	w2, w2, #0xff
  44e50c:	cmp	w2, #0x9
  44e510:	b.hi	44e758 <ferror@plt+0x4ba28>  // b.pmore
  44e514:	mov	x0, x19
  44e518:	bl	44c1d8 <ferror@plt+0x494a8>
  44e51c:	mov	x20, x0
  44e520:	cbz	x0, 44e534 <ferror@plt+0x4b804>
  44e524:	ldr	x0, [x19, #24]
  44e528:	ldrb	w0, [x0]
  44e52c:	cmp	w0, #0x49
  44e530:	b.eq	44e778 <ferror@plt+0x4ba48>  // b.none
  44e534:	mov	x0, x20
  44e538:	ldp	x19, x20, [sp, #16]
  44e53c:	ldp	x29, x30, [sp], #48
  44e540:	ret
  44e544:	mov	x0, x19
  44e548:	bl	44e1f4 <ferror@plt+0x4b4c4>
  44e54c:	mov	x20, x0
  44e550:	b	44e534 <ferror@plt+0x4b804>
  44e554:	mov	x0, x19
  44e558:	bl	444f44 <ferror@plt+0x42214>
  44e55c:	mov	x20, x0
  44e560:	b	44e534 <ferror@plt+0x4b804>
  44e564:	ldrb	w2, [x0, #1]
  44e568:	cmp	w2, #0x72
  44e56c:	b.eq	44e5e8 <ferror@plt+0x4b8b8>  // b.none
  44e570:	cmp	w2, #0x70
  44e574:	b.eq	44e678 <ferror@plt+0x4b948>  // b.none
  44e578:	cmp	w1, #0x69
  44e57c:	mov	w2, #0x74                  	// #116
  44e580:	ccmp	w1, w2, #0x4, ne  // ne = any
  44e584:	b.ne	44e6b0 <ferror@plt+0x4b980>  // b.any
  44e588:	ldrb	w2, [x0, #1]
  44e58c:	cmp	w2, #0x6c
  44e590:	b.ne	44e6b0 <ferror@plt+0x4b980>  // b.any
  44e594:	stp	x21, x22, [sp, #32]
  44e598:	add	x0, x0, #0x2
  44e59c:	str	x0, [x19, #24]
  44e5a0:	mov	x21, #0x0                   	// #0
  44e5a4:	cmp	w1, #0x74
  44e5a8:	b.eq	44e79c <ferror@plt+0x4ba6c>  // b.none
  44e5ac:	ldr	x0, [x19, #24]
  44e5b0:	ldrb	w0, [x0, #1]
  44e5b4:	mov	x20, #0x0                   	// #0
  44e5b8:	cbz	w0, 44eca8 <ferror@plt+0x4bf78>
  44e5bc:	mov	w1, #0x45                  	// #69
  44e5c0:	mov	x0, x19
  44e5c4:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44e5c8:	mov	x3, x0
  44e5cc:	mov	x2, x21
  44e5d0:	mov	w1, #0x31                  	// #49
  44e5d4:	mov	x0, x19
  44e5d8:	bl	444a5c <ferror@plt+0x41d2c>
  44e5dc:	mov	x20, x0
  44e5e0:	ldp	x21, x22, [sp, #32]
  44e5e4:	b	44e534 <ferror@plt+0x4b804>
  44e5e8:	stp	x21, x22, [sp, #32]
  44e5ec:	add	x0, x0, #0x2
  44e5f0:	str	x0, [x19, #24]
  44e5f4:	mov	x0, x19
  44e5f8:	bl	44b598 <ferror@plt+0x48868>
  44e5fc:	mov	x20, x0
  44e600:	mov	x0, x19
  44e604:	bl	44c1d8 <ferror@plt+0x494a8>
  44e608:	mov	x21, x0
  44e60c:	ldr	x0, [x19, #24]
  44e610:	ldrb	w0, [x0]
  44e614:	cmp	w0, #0x49
  44e618:	b.eq	44e63c <ferror@plt+0x4b90c>  // b.none
  44e61c:	mov	x3, x21
  44e620:	mov	x2, x20
  44e624:	mov	w1, #0x1                   	// #1
  44e628:	mov	x0, x19
  44e62c:	bl	444a5c <ferror@plt+0x41d2c>
  44e630:	mov	x20, x0
  44e634:	ldp	x21, x22, [sp, #32]
  44e638:	b	44e534 <ferror@plt+0x4b804>
  44e63c:	mov	x0, x19
  44e640:	bl	44e490 <ferror@plt+0x4b760>
  44e644:	mov	x3, x0
  44e648:	mov	x2, x21
  44e64c:	mov	w1, #0x4                   	// #4
  44e650:	mov	x0, x19
  44e654:	bl	444a5c <ferror@plt+0x41d2c>
  44e658:	mov	x3, x0
  44e65c:	mov	x2, x20
  44e660:	mov	w1, #0x1                   	// #1
  44e664:	mov	x0, x19
  44e668:	bl	444a5c <ferror@plt+0x41d2c>
  44e66c:	mov	x20, x0
  44e670:	ldp	x21, x22, [sp, #32]
  44e674:	b	44e534 <ferror@plt+0x4b804>
  44e678:	add	x0, x0, #0x2
  44e67c:	str	x0, [x19, #24]
  44e680:	mov	x0, x19
  44e684:	bl	44e4cc <ferror@plt+0x4b79c>
  44e688:	mov	x3, #0x0                   	// #0
  44e68c:	mov	x2, x0
  44e690:	mov	w1, #0x4b                  	// #75
  44e694:	mov	x0, x19
  44e698:	bl	444a5c <ferror@plt+0x41d2c>
  44e69c:	mov	x20, x0
  44e6a0:	b	44e534 <ferror@plt+0x4b804>
  44e6a4:	ldrb	w1, [x0, #1]
  44e6a8:	cmp	w1, #0x70
  44e6ac:	b.eq	44e6ec <ferror@plt+0x4b9bc>  // b.none
  44e6b0:	mov	x0, x19
  44e6b4:	bl	44c02c <ferror@plt+0x492fc>
  44e6b8:	mov	x20, x0
  44e6bc:	cbz	x0, 44e534 <ferror@plt+0x4b804>
  44e6c0:	stp	x21, x22, [sp, #32]
  44e6c4:	ldr	w0, [x0]
  44e6c8:	cmp	w0, #0x32
  44e6cc:	b.eq	44e7ac <ferror@plt+0x4ba7c>  // b.none
  44e6d0:	cmp	w0, #0x33
  44e6d4:	b.eq	44e8c0 <ferror@plt+0x4bb90>  // b.none
  44e6d8:	cmp	w0, #0x34
  44e6dc:	b.eq	44ec40 <ferror@plt+0x4bf10>  // b.none
  44e6e0:	mov	x20, #0x0                   	// #0
  44e6e4:	ldp	x21, x22, [sp, #32]
  44e6e8:	b	44e534 <ferror@plt+0x4b804>
  44e6ec:	stp	x21, x22, [sp, #32]
  44e6f0:	add	x1, x0, #0x2
  44e6f4:	str	x1, [x19, #24]
  44e6f8:	ldrb	w1, [x0, #2]
  44e6fc:	cmp	w1, #0x54
  44e700:	b.eq	44e748 <ferror@plt+0x4ba18>  // b.none
  44e704:	mov	x0, x19
  44e708:	bl	444ec8 <ferror@plt+0x42198>
  44e70c:	mvn	x1, x0
  44e710:	mov	x20, #0x0                   	// #0
  44e714:	tst	x1, #0x7fffffff
  44e718:	b.eq	44ec98 <ferror@plt+0x4bf68>  // b.none
  44e71c:	add	w21, w0, #0x1
  44e720:	mov	x0, x19
  44e724:	bl	444a1c <ferror@plt+0x41cec>
  44e728:	mov	x20, x0
  44e72c:	cbz	x0, 44eca0 <ferror@plt+0x4bf70>
  44e730:	mov	w0, #0x6                   	// #6
  44e734:	str	w0, [x20]
  44e738:	sxtw	x0, w21
  44e73c:	str	x0, [x20, #8]
  44e740:	ldp	x21, x22, [sp, #32]
  44e744:	b	44e534 <ferror@plt+0x4b804>
  44e748:	add	x0, x0, #0x3
  44e74c:	str	x0, [x19, #24]
  44e750:	mov	w21, #0x0                   	// #0
  44e754:	b	44e720 <ferror@plt+0x4b9f0>
  44e758:	cmp	w1, #0x6f
  44e75c:	b.ne	44e578 <ferror@plt+0x4b848>  // b.any
  44e760:	ldrb	w1, [x0, #1]
  44e764:	cmp	w1, #0x6e
  44e768:	b.ne	44e6b0 <ferror@plt+0x4b980>  // b.any
  44e76c:	add	x0, x0, #0x2
  44e770:	str	x0, [x19, #24]
  44e774:	b	44e514 <ferror@plt+0x4b7e4>
  44e778:	mov	x0, x19
  44e77c:	bl	44e490 <ferror@plt+0x4b760>
  44e780:	mov	x3, x0
  44e784:	mov	x2, x20
  44e788:	mov	w1, #0x4                   	// #4
  44e78c:	mov	x0, x19
  44e790:	bl	444a5c <ferror@plt+0x41d2c>
  44e794:	mov	x20, x0
  44e798:	b	44e534 <ferror@plt+0x4b804>
  44e79c:	mov	x0, x19
  44e7a0:	bl	44b598 <ferror@plt+0x48868>
  44e7a4:	mov	x21, x0
  44e7a8:	b	44e5ac <ferror@plt+0x4b87c>
  44e7ac:	ldr	x0, [x20, #8]
  44e7b0:	ldr	x21, [x0]
  44e7b4:	ldr	w0, [x0, #16]
  44e7b8:	sub	w1, w0, #0x2
  44e7bc:	ldr	w0, [x19, #72]
  44e7c0:	add	w0, w0, w1
  44e7c4:	str	w0, [x19, #72]
  44e7c8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44e7cc:	add	x1, x1, #0x458
  44e7d0:	mov	x0, x21
  44e7d4:	bl	402a20 <strcmp@plt>
  44e7d8:	cbz	w0, 44e804 <ferror@plt+0x4bad4>
  44e7dc:	ldr	w0, [x20]
  44e7e0:	cmp	w0, #0x33
  44e7e4:	b.eq	44e8c4 <ferror@plt+0x4bb94>  // b.none
  44e7e8:	cmp	w0, #0x34
  44e7ec:	b.eq	44e850 <ferror@plt+0x4bb20>  // b.none
  44e7f0:	cmp	w0, #0x32
  44e7f4:	b.eq	44e82c <ferror@plt+0x4bafc>  // b.none
  44e7f8:	mov	x20, #0x0                   	// #0
  44e7fc:	ldp	x21, x22, [sp, #32]
  44e800:	b	44e534 <ferror@plt+0x4b804>
  44e804:	mov	x0, x19
  44e808:	bl	44b598 <ferror@plt+0x48868>
  44e80c:	mov	x3, x0
  44e810:	mov	x2, x20
  44e814:	mov	w1, #0x37                  	// #55
  44e818:	mov	x0, x19
  44e81c:	bl	444a5c <ferror@plt+0x41d2c>
  44e820:	mov	x20, x0
  44e824:	ldp	x21, x22, [sp, #32]
  44e828:	b	44e534 <ferror@plt+0x4b804>
  44e82c:	ldr	x0, [x20, #8]
  44e830:	ldr	w0, [x0, #20]
  44e834:	cmp	w0, #0x2
  44e838:	b.eq	44e9e8 <ferror@plt+0x4bcb8>  // b.none
  44e83c:	b.gt	44e8d8 <ferror@plt+0x4bba8>
  44e840:	cbz	w0, 44e980 <ferror@plt+0x4bc50>
  44e844:	cmp	w0, #0x1
  44e848:	b.ne	44e8cc <ferror@plt+0x4bb9c>  // b.any
  44e84c:	cbz	x21, 44ec40 <ferror@plt+0x4bf10>
  44e850:	ldrb	w0, [x21]
  44e854:	cmp	w0, #0x70
  44e858:	mov	w1, #0x6d                  	// #109
  44e85c:	ccmp	w0, w1, #0x4, ne  // ne = any
  44e860:	b.ne	44e870 <ferror@plt+0x4bb40>  // b.any
  44e864:	ldrb	w1, [x21, #1]
  44e868:	cmp	w1, w0
  44e86c:	b.eq	44e9a0 <ferror@plt+0x4bc70>  // b.none
  44e870:	ldr	w0, [x20]
  44e874:	cmp	w0, #0x34
  44e878:	b.eq	44ec80 <ferror@plt+0x4bf50>  // b.none
  44e87c:	mov	w22, #0x0                   	// #0
  44e880:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44e884:	add	x1, x1, #0xfd0
  44e888:	mov	x0, x21
  44e88c:	bl	402a20 <strcmp@plt>
  44e890:	cbz	w0, 44e9c0 <ferror@plt+0x4bc90>
  44e894:	mov	x0, x19
  44e898:	bl	44e4cc <ferror@plt+0x4b79c>
  44e89c:	mov	x3, x0
  44e8a0:	cbnz	w22, 44e9d0 <ferror@plt+0x4bca0>
  44e8a4:	mov	x2, x20
  44e8a8:	mov	w1, #0x37                  	// #55
  44e8ac:	mov	x0, x19
  44e8b0:	bl	444a5c <ferror@plt+0x41d2c>
  44e8b4:	mov	x20, x0
  44e8b8:	ldp	x21, x22, [sp, #32]
  44e8bc:	b	44e534 <ferror@plt+0x4b804>
  44e8c0:	mov	x21, #0x0                   	// #0
  44e8c4:	ldr	w0, [x20, #8]
  44e8c8:	b	44e834 <ferror@plt+0x4bb04>
  44e8cc:	mov	x20, #0x0                   	// #0
  44e8d0:	ldp	x21, x22, [sp, #32]
  44e8d4:	b	44e534 <ferror@plt+0x4b804>
  44e8d8:	cmp	w0, #0x3
  44e8dc:	b.ne	44e974 <ferror@plt+0x4bc44>  // b.any
  44e8e0:	cbz	x21, 44ec04 <ferror@plt+0x4bed4>
  44e8e4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44e8e8:	add	x1, x1, #0xef8
  44e8ec:	mov	x0, x21
  44e8f0:	bl	402a20 <strcmp@plt>
  44e8f4:	cbz	w0, 44eb04 <ferror@plt+0x4bdd4>
  44e8f8:	ldrb	w0, [x21]
  44e8fc:	cmp	w0, #0x66
  44e900:	b.eq	44eb70 <ferror@plt+0x4be40>  // b.none
  44e904:	cmp	w0, #0x6e
  44e908:	b.ne	44ec1c <ferror@plt+0x4beec>  // b.any
  44e90c:	ldrb	w0, [x21, #1]
  44e910:	cmp	w0, #0x77
  44e914:	mov	w1, #0x61                  	// #97
  44e918:	ccmp	w0, w1, #0x4, ne  // ne = any
  44e91c:	b.ne	44ec28 <ferror@plt+0x4bef8>  // b.any
  44e920:	mov	w1, #0x5f                  	// #95
  44e924:	mov	x0, x19
  44e928:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44e92c:	mov	x21, x0
  44e930:	mov	x0, x19
  44e934:	bl	44b598 <ferror@plt+0x48868>
  44e938:	mov	x22, x0
  44e93c:	ldr	x0, [x19, #24]
  44e940:	ldrb	w1, [x0]
  44e944:	cmp	w1, #0x45
  44e948:	b.eq	44eba4 <ferror@plt+0x4be74>  // b.none
  44e94c:	cmp	w1, #0x70
  44e950:	b.eq	44ebb4 <ferror@plt+0x4be84>  // b.none
  44e954:	cmp	w1, #0x69
  44e958:	b.ne	44ec34 <ferror@plt+0x4bf04>  // b.any
  44e95c:	ldrb	w0, [x0, #1]
  44e960:	cmp	w0, #0x6c
  44e964:	b.eq	44ebe8 <ferror@plt+0x4beb8>  // b.none
  44e968:	mov	x20, #0x0                   	// #0
  44e96c:	ldp	x21, x22, [sp, #32]
  44e970:	b	44e534 <ferror@plt+0x4b804>
  44e974:	mov	x20, #0x0                   	// #0
  44e978:	ldp	x21, x22, [sp, #32]
  44e97c:	b	44e534 <ferror@plt+0x4b804>
  44e980:	mov	x3, #0x0                   	// #0
  44e984:	mov	x2, x20
  44e988:	mov	w1, #0x36                  	// #54
  44e98c:	mov	x0, x19
  44e990:	bl	444a5c <ferror@plt+0x41d2c>
  44e994:	mov	x20, x0
  44e998:	ldp	x21, x22, [sp, #32]
  44e99c:	b	44e534 <ferror@plt+0x4b804>
  44e9a0:	ldr	x0, [x19, #24]
  44e9a4:	ldrb	w1, [x0]
  44e9a8:	mov	w22, #0x1                   	// #1
  44e9ac:	cmp	w1, #0x5f
  44e9b0:	b.ne	44e880 <ferror@plt+0x4bb50>  // b.any
  44e9b4:	add	x0, x0, #0x1
  44e9b8:	str	x0, [x19, #24]
  44e9bc:	b	44e870 <ferror@plt+0x4bb40>
  44e9c0:	mov	x0, x19
  44e9c4:	bl	44e3e0 <ferror@plt+0x4b6b0>
  44e9c8:	mov	x3, x0
  44e9cc:	b	44e8a0 <ferror@plt+0x4bb70>
  44e9d0:	mov	x2, x3
  44e9d4:	mov	w1, #0x39                  	// #57
  44e9d8:	mov	x0, x19
  44e9dc:	bl	444a5c <ferror@plt+0x41d2c>
  44e9e0:	mov	x3, x0
  44e9e4:	b	44e8a4 <ferror@plt+0x4bb74>
  44e9e8:	cbz	x21, 44ebf8 <ferror@plt+0x4bec8>
  44e9ec:	mov	x0, x20
  44e9f0:	bl	444fb0 <ferror@plt+0x42280>
  44e9f4:	cbnz	w0, 44ea9c <ferror@plt+0x4bd6c>
  44e9f8:	ldrb	w0, [x21]
  44e9fc:	cmp	w0, #0x66
  44ea00:	b.eq	44eaac <ferror@plt+0x4bd7c>  // b.none
  44ea04:	mov	x0, x19
  44ea08:	bl	44e4cc <ferror@plt+0x4b79c>
  44ea0c:	mov	x22, x0
  44ea10:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  44ea14:	add	x1, x1, #0xee8
  44ea18:	mov	x0, x21
  44ea1c:	bl	402a20 <strcmp@plt>
  44ea20:	cbz	w0, 44eabc <ferror@plt+0x4bd8c>
  44ea24:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44ea28:	add	x1, x1, #0xb8
  44ea2c:	mov	x0, x21
  44ea30:	bl	402a20 <strcmp@plt>
  44ea34:	cbz	w0, 44ea4c <ferror@plt+0x4bd1c>
  44ea38:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44ea3c:	add	x1, x1, #0xc0
  44ea40:	mov	x0, x21
  44ea44:	bl	402a20 <strcmp@plt>
  44ea48:	cbnz	w0, 44eaf4 <ferror@plt+0x4bdc4>
  44ea4c:	mov	x0, x19
  44ea50:	bl	44c1d8 <ferror@plt+0x494a8>
  44ea54:	mov	x21, x0
  44ea58:	ldr	x0, [x19, #24]
  44ea5c:	ldrb	w0, [x0]
  44ea60:	cmp	w0, #0x49
  44ea64:	b.eq	44ead0 <ferror@plt+0x4bda0>  // b.none
  44ea68:	mov	x3, x21
  44ea6c:	mov	x2, x22
  44ea70:	mov	w1, #0x39                  	// #57
  44ea74:	mov	x0, x19
  44ea78:	bl	444a5c <ferror@plt+0x41d2c>
  44ea7c:	mov	x3, x0
  44ea80:	mov	x2, x20
  44ea84:	mov	w1, #0x38                  	// #56
  44ea88:	mov	x0, x19
  44ea8c:	bl	444a5c <ferror@plt+0x41d2c>
  44ea90:	mov	x20, x0
  44ea94:	ldp	x21, x22, [sp, #32]
  44ea98:	b	44e534 <ferror@plt+0x4b804>
  44ea9c:	mov	x0, x19
  44eaa0:	bl	44b598 <ferror@plt+0x48868>
  44eaa4:	mov	x22, x0
  44eaa8:	b	44ea10 <ferror@plt+0x4bce0>
  44eaac:	mov	x0, x19
  44eab0:	bl	44c02c <ferror@plt+0x492fc>
  44eab4:	mov	x22, x0
  44eab8:	b	44ea10 <ferror@plt+0x4bce0>
  44eabc:	mov	w1, #0x45                  	// #69
  44eac0:	mov	x0, x19
  44eac4:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44eac8:	mov	x21, x0
  44eacc:	b	44ea68 <ferror@plt+0x4bd38>
  44ead0:	mov	x0, x19
  44ead4:	bl	44e490 <ferror@plt+0x4b760>
  44ead8:	mov	x3, x0
  44eadc:	mov	x2, x21
  44eae0:	mov	w1, #0x4                   	// #4
  44eae4:	mov	x0, x19
  44eae8:	bl	444a5c <ferror@plt+0x41d2c>
  44eaec:	mov	x21, x0
  44eaf0:	b	44ea68 <ferror@plt+0x4bd38>
  44eaf4:	mov	x0, x19
  44eaf8:	bl	44e4cc <ferror@plt+0x4b79c>
  44eafc:	mov	x21, x0
  44eb00:	b	44ea68 <ferror@plt+0x4bd38>
  44eb04:	mov	x0, x19
  44eb08:	bl	44e4cc <ferror@plt+0x4b79c>
  44eb0c:	mov	x21, x0
  44eb10:	mov	x0, x19
  44eb14:	bl	44e4cc <ferror@plt+0x4b79c>
  44eb18:	mov	x22, x0
  44eb1c:	mov	x0, x19
  44eb20:	bl	44e4cc <ferror@plt+0x4b79c>
  44eb24:	mov	x3, x0
  44eb28:	cbz	x0, 44ec10 <ferror@plt+0x4bee0>
  44eb2c:	mov	x2, x22
  44eb30:	mov	w1, #0x3c                  	// #60
  44eb34:	mov	x0, x19
  44eb38:	bl	444a5c <ferror@plt+0x41d2c>
  44eb3c:	mov	x3, x0
  44eb40:	mov	x2, x21
  44eb44:	mov	w1, #0x3b                  	// #59
  44eb48:	mov	x0, x19
  44eb4c:	bl	444a5c <ferror@plt+0x41d2c>
  44eb50:	mov	x3, x0
  44eb54:	mov	x2, x20
  44eb58:	mov	w1, #0x3a                  	// #58
  44eb5c:	mov	x0, x19
  44eb60:	bl	444a5c <ferror@plt+0x41d2c>
  44eb64:	mov	x20, x0
  44eb68:	ldp	x21, x22, [sp, #32]
  44eb6c:	b	44e534 <ferror@plt+0x4b804>
  44eb70:	mov	x0, x19
  44eb74:	bl	44c02c <ferror@plt+0x492fc>
  44eb78:	mov	x21, x0
  44eb7c:	mov	x0, x19
  44eb80:	bl	44e4cc <ferror@plt+0x4b79c>
  44eb84:	mov	x22, x0
  44eb88:	mov	x0, x19
  44eb8c:	bl	44e4cc <ferror@plt+0x4b79c>
  44eb90:	mov	x3, x0
  44eb94:	cbnz	x0, 44eb2c <ferror@plt+0x4bdfc>
  44eb98:	mov	x20, x0
  44eb9c:	ldp	x21, x22, [sp, #32]
  44eba0:	b	44e534 <ferror@plt+0x4b804>
  44eba4:	add	x0, x0, #0x1
  44eba8:	str	x0, [x19, #24]
  44ebac:	mov	x3, #0x0                   	// #0
  44ebb0:	b	44eb2c <ferror@plt+0x4bdfc>
  44ebb4:	ldrb	w1, [x0, #1]
  44ebb8:	cmp	w1, #0x69
  44ebbc:	b.eq	44ebcc <ferror@plt+0x4be9c>  // b.none
  44ebc0:	mov	x20, #0x0                   	// #0
  44ebc4:	ldp	x21, x22, [sp, #32]
  44ebc8:	b	44e534 <ferror@plt+0x4b804>
  44ebcc:	add	x0, x0, #0x2
  44ebd0:	str	x0, [x19, #24]
  44ebd4:	mov	w1, #0x45                  	// #69
  44ebd8:	mov	x0, x19
  44ebdc:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44ebe0:	mov	x3, x0
  44ebe4:	b	44eb2c <ferror@plt+0x4bdfc>
  44ebe8:	mov	x0, x19
  44ebec:	bl	44e4cc <ferror@plt+0x4b79c>
  44ebf0:	mov	x3, x0
  44ebf4:	b	44eb2c <ferror@plt+0x4bdfc>
  44ebf8:	mov	x20, x21
  44ebfc:	ldp	x21, x22, [sp, #32]
  44ec00:	b	44e534 <ferror@plt+0x4b804>
  44ec04:	mov	x20, x21
  44ec08:	ldp	x21, x22, [sp, #32]
  44ec0c:	b	44e534 <ferror@plt+0x4b804>
  44ec10:	mov	x20, x0
  44ec14:	ldp	x21, x22, [sp, #32]
  44ec18:	b	44e534 <ferror@plt+0x4b804>
  44ec1c:	mov	x20, #0x0                   	// #0
  44ec20:	ldp	x21, x22, [sp, #32]
  44ec24:	b	44e534 <ferror@plt+0x4b804>
  44ec28:	mov	x20, #0x0                   	// #0
  44ec2c:	ldp	x21, x22, [sp, #32]
  44ec30:	b	44e534 <ferror@plt+0x4b804>
  44ec34:	mov	x20, #0x0                   	// #0
  44ec38:	ldp	x21, x22, [sp, #32]
  44ec3c:	b	44e534 <ferror@plt+0x4b804>
  44ec40:	ldr	w0, [x20]
  44ec44:	mov	w22, #0x0                   	// #0
  44ec48:	cmp	w0, #0x34
  44ec4c:	b.ne	44e894 <ferror@plt+0x4bb64>  // b.any
  44ec50:	ldr	x0, [x19, #24]
  44ec54:	ldrb	w1, [x0]
  44ec58:	mov	w22, #0x0                   	// #0
  44ec5c:	cmp	w1, #0x5f
  44ec60:	b.ne	44e894 <ferror@plt+0x4bb64>  // b.any
  44ec64:	add	x0, x0, #0x1
  44ec68:	str	x0, [x19, #24]
  44ec6c:	mov	w1, #0x45                  	// #69
  44ec70:	mov	x0, x19
  44ec74:	bl	44cfe4 <ferror@plt+0x4a2b4>
  44ec78:	mov	x3, x0
  44ec7c:	b	44e8a4 <ferror@plt+0x4bb74>
  44ec80:	ldr	x0, [x19, #24]
  44ec84:	ldrb	w1, [x0]
  44ec88:	cmp	w1, #0x5f
  44ec8c:	b.eq	44ec64 <ferror@plt+0x4bf34>  // b.none
  44ec90:	mov	w22, #0x0                   	// #0
  44ec94:	b	44e880 <ferror@plt+0x4bb50>
  44ec98:	ldp	x21, x22, [sp, #32]
  44ec9c:	b	44e534 <ferror@plt+0x4b804>
  44eca0:	ldp	x21, x22, [sp, #32]
  44eca4:	b	44e534 <ferror@plt+0x4b804>
  44eca8:	ldp	x21, x22, [sp, #32]
  44ecac:	b	44e534 <ferror@plt+0x4b804>
  44ecb0:	stp	x29, x30, [sp, #-432]!
  44ecb4:	mov	x29, sp
  44ecb8:	stp	x19, x20, [sp, #16]
  44ecbc:	stp	x21, x22, [sp, #32]
  44ecc0:	mov	w20, w0
  44ecc4:	mov	x21, x1
  44ecc8:	str	xzr, [x29, #312]
  44eccc:	strb	wzr, [x29, #320]
  44ecd0:	str	xzr, [x29, #344]
  44ecd4:	str	xzr, [x29, #352]
  44ecd8:	str	wzr, [x29, #372]
  44ecdc:	str	xzr, [x29, #376]
  44ece0:	str	x2, [x29, #328]
  44ece4:	str	x3, [x29, #336]
  44ece8:	str	wzr, [x29, #360]
  44ecec:	str	wzr, [x29, #364]
  44ecf0:	str	wzr, [x29, #368]
  44ecf4:	str	xzr, [x29, #384]
  44ecf8:	str	xzr, [x29, #392]
  44ecfc:	str	wzr, [x29, #400]
  44ed00:	str	wzr, [x29, #404]
  44ed04:	str	xzr, [x29, #408]
  44ed08:	str	wzr, [x29, #416]
  44ed0c:	str	wzr, [x29, #420]
  44ed10:	add	x0, x29, #0x38
  44ed14:	bl	4450d0 <ferror@plt+0x423a0>
  44ed18:	ldr	w0, [x29, #364]
  44ed1c:	cmp	w0, #0x7ff
  44ed20:	b.gt	44ed28 <ferror@plt+0x4bff8>
  44ed24:	str	wzr, [x29, #364]
  44ed28:	ldr	w3, [x29, #404]
  44ed2c:	ldr	w2, [x29, #420]
  44ed30:	mul	w2, w3, w2
  44ed34:	str	w2, [x29, #420]
  44ed38:	str	xzr, [x29, #424]
  44ed3c:	mov	x22, sp
  44ed40:	mov	w0, #0x1                   	// #1
  44ed44:	cmp	w3, #0x0
  44ed48:	csel	w3, w3, w0, gt
  44ed4c:	sub	sp, sp, w3, sxtw #4
  44ed50:	mov	x1, sp
  44ed54:	cmp	w2, #0x0
  44ed58:	csel	w2, w2, w0, gt
  44ed5c:	sub	sp, sp, w2, sxtw #4
  44ed60:	str	x1, [x29, #392]
  44ed64:	mov	x0, sp
  44ed68:	str	x0, [x29, #408]
  44ed6c:	add	x19, x29, #0x38
  44ed70:	mov	x2, x21
  44ed74:	mov	w1, w20
  44ed78:	mov	x0, x19
  44ed7c:	bl	4497d4 <ferror@plt+0x46aa4>
  44ed80:	mov	sp, x22
  44ed84:	ldr	x1, [x29, #312]
  44ed88:	strb	wzr, [x19, x1]
  44ed8c:	ldr	x2, [x29, #336]
  44ed90:	mov	x0, x19
  44ed94:	ldr	x3, [x29, #328]
  44ed98:	blr	x3
  44ed9c:	ldr	w0, [x29, #360]
  44eda0:	cmp	w0, #0x0
  44eda4:	cset	w0, eq  // eq = none
  44eda8:	mov	sp, x29
  44edac:	ldp	x19, x20, [sp, #16]
  44edb0:	ldp	x21, x22, [sp, #32]
  44edb4:	ldp	x29, x30, [sp], #432
  44edb8:	ret
  44edbc:	stp	x29, x30, [sp, #-80]!
  44edc0:	mov	x29, sp
  44edc4:	stp	x19, x20, [sp, #16]
  44edc8:	stp	x21, x22, [sp, #32]
  44edcc:	mov	w19, w0
  44edd0:	mov	x20, x1
  44edd4:	mov	x22, x3
  44edd8:	str	xzr, [sp, #48]
  44eddc:	str	xzr, [sp, #56]
  44ede0:	str	xzr, [sp, #64]
  44ede4:	str	wzr, [sp, #72]
  44ede8:	cbnz	w2, 44ee30 <ferror@plt+0x4c100>
  44edec:	add	x3, sp, #0x30
  44edf0:	adrp	x2, 445000 <ferror@plt+0x422d0>
  44edf4:	add	x2, x2, #0x420
  44edf8:	mov	x1, x20
  44edfc:	mov	w0, w19
  44ee00:	bl	44ecb0 <ferror@plt+0x4bf80>
  44ee04:	cbz	w0, 44ee78 <ferror@plt+0x4c148>
  44ee08:	ldr	w0, [sp, #72]
  44ee0c:	cmp	w0, #0x0
  44ee10:	ldr	x0, [sp, #64]
  44ee14:	csinc	x0, x0, xzr, eq  // eq = none
  44ee18:	str	x0, [x22]
  44ee1c:	ldr	x0, [sp, #48]
  44ee20:	ldp	x19, x20, [sp, #16]
  44ee24:	ldp	x21, x22, [sp, #32]
  44ee28:	ldp	x29, x30, [sp], #80
  44ee2c:	ret
  44ee30:	sxtw	x0, w2
  44ee34:	cmp	x0, #0x2
  44ee38:	b.ls	44ee64 <ferror@plt+0x4c134>  // b.plast
  44ee3c:	mov	x21, #0x2                   	// #2
  44ee40:	lsl	x21, x21, #1
  44ee44:	cmp	x0, x21
  44ee48:	b.hi	44ee40 <ferror@plt+0x4c110>  // b.pmore
  44ee4c:	mov	x0, x21
  44ee50:	bl	4027f0 <malloc@plt>
  44ee54:	cbz	x0, 44ee6c <ferror@plt+0x4c13c>
  44ee58:	str	x0, [sp, #48]
  44ee5c:	str	x21, [sp, #64]
  44ee60:	b	44edec <ferror@plt+0x4c0bc>
  44ee64:	mov	x21, #0x2                   	// #2
  44ee68:	b	44ee4c <ferror@plt+0x4c11c>
  44ee6c:	mov	w0, #0x1                   	// #1
  44ee70:	str	w0, [sp, #72]
  44ee74:	b	44edec <ferror@plt+0x4c0bc>
  44ee78:	ldr	x0, [sp, #48]
  44ee7c:	bl	402a90 <free@plt>
  44ee80:	str	xzr, [x22]
  44ee84:	mov	x0, #0x0                   	// #0
  44ee88:	b	44ee20 <ferror@plt+0x4c0f0>
  44ee8c:	str	x0, [x3]
  44ee90:	add	x4, x0, x2
  44ee94:	str	x4, [x3, #8]
  44ee98:	str	w1, [x3, #16]
  44ee9c:	str	x0, [x3, #24]
  44eea0:	lsl	w0, w2, #1
  44eea4:	str	w0, [x3, #44]
  44eea8:	str	wzr, [x3, #40]
  44eeac:	str	w2, [x3, #60]
  44eeb0:	str	wzr, [x3, #56]
  44eeb4:	str	xzr, [x3, #64]
  44eeb8:	str	wzr, [x3, #72]
  44eebc:	str	wzr, [x3, #76]
  44eec0:	str	wzr, [x3, #80]
  44eec4:	str	wzr, [x3, #84]
  44eec8:	ret
  44eecc:	stp	x29, x30, [sp, #-160]!
  44eed0:	mov	x29, sp
  44eed4:	stp	x19, x20, [sp, #16]
  44eed8:	stp	x21, x22, [sp, #32]
  44eedc:	stp	x23, x24, [sp, #48]
  44eee0:	mov	x20, x0
  44eee4:	mov	w19, w1
  44eee8:	mov	x21, x2
  44eeec:	mov	x22, x3
  44eef0:	ldrb	w0, [x0]
  44eef4:	cmp	w0, #0x5f
  44eef8:	b.eq	44f050 <ferror@plt+0x4c320>  // b.none
  44eefc:	mov	x2, #0x8                   	// #8
  44ef00:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44ef04:	add	x1, x1, #0x78
  44ef08:	mov	x0, x20
  44ef0c:	bl	402830 <strncmp@plt>
  44ef10:	cbnz	w0, 44ef50 <ferror@plt+0x4c220>
  44ef14:	ldrb	w0, [x20, #8]
  44ef18:	cmp	w0, #0x2e
  44ef1c:	mov	w1, #0x5f                  	// #95
  44ef20:	ccmp	w0, w1, #0x4, ne  // ne = any
  44ef24:	mov	w1, #0x24                  	// #36
  44ef28:	ccmp	w0, w1, #0x4, ne  // ne = any
  44ef2c:	b.ne	44ef50 <ferror@plt+0x4c220>  // b.any
  44ef30:	ldrb	w0, [x20, #9]
  44ef34:	cmp	w0, #0x44
  44ef38:	mov	w1, #0x49                  	// #73
  44ef3c:	ccmp	w0, w1, #0x4, ne  // ne = any
  44ef40:	b.ne	44ef50 <ferror@plt+0x4c220>  // b.any
  44ef44:	ldrb	w1, [x20, #10]
  44ef48:	cmp	w1, #0x5f
  44ef4c:	b.eq	44f064 <ferror@plt+0x4c334>  // b.none
  44ef50:	and	w0, w19, #0x10
  44ef54:	mov	w23, #0x0                   	// #0
  44ef58:	tbz	w19, #4, 44f0b8 <ferror@plt+0x4c388>
  44ef5c:	mov	x0, x20
  44ef60:	bl	402680 <strlen@plt>
  44ef64:	add	x3, x29, #0x48
  44ef68:	mov	x2, x0
  44ef6c:	mov	w1, w19
  44ef70:	mov	x0, x20
  44ef74:	bl	44ee8c <ferror@plt+0x4c15c>
  44ef78:	and	w0, w19, #0x40000
  44ef7c:	tbnz	w19, #18, 44ef8c <ferror@plt+0x4c25c>
  44ef80:	ldr	w1, [x29, #116]
  44ef84:	cmp	w1, #0x800
  44ef88:	b.hi	44f0b8 <ferror@plt+0x4c388>  // b.pmore
  44ef8c:	mov	x20, sp
  44ef90:	ldrsw	x0, [x29, #116]
  44ef94:	add	x0, x0, x0, lsl #1
  44ef98:	lsl	x0, x0, #3
  44ef9c:	add	x0, x0, #0xf
  44efa0:	and	x0, x0, #0xfffffffffffffff0
  44efa4:	sub	sp, sp, x0
  44efa8:	mov	x1, sp
  44efac:	ldrsw	x0, [x29, #132]
  44efb0:	lsl	x0, x0, #3
  44efb4:	add	x0, x0, #0xf
  44efb8:	and	x0, x0, #0xfffffffffffffff0
  44efbc:	sub	sp, sp, x0
  44efc0:	str	x1, [x29, #104]
  44efc4:	mov	x0, sp
  44efc8:	str	x0, [x29, #120]
  44efcc:	cmp	w23, #0x1
  44efd0:	b.eq	44f0d0 <ferror@plt+0x4c3a0>  // b.none
  44efd4:	b.ls	44f074 <ferror@plt+0x4c344>  // b.plast
  44efd8:	ldr	x0, [x29, #96]
  44efdc:	add	x24, x0, #0xb
  44efe0:	str	x24, [x29, #96]
  44efe4:	cmp	w23, #0x2
  44efe8:	cset	w1, ne  // ne = any
  44efec:	add	w23, w1, #0x44
  44eff0:	ldrb	w1, [x0, #11]
  44eff4:	cmp	w1, #0x5f
  44eff8:	b.ne	44f008 <ferror@plt+0x4c2d8>  // b.any
  44effc:	ldrb	w1, [x0, #12]
  44f000:	cmp	w1, #0x5a
  44f004:	b.eq	44f0e4 <ferror@plt+0x4c3b4>  // b.none
  44f008:	mov	x0, x24
  44f00c:	bl	402680 <strlen@plt>
  44f010:	mov	w2, w0
  44f014:	mov	x1, x24
  44f018:	add	x0, x29, #0x48
  44f01c:	bl	44b0c8 <ferror@plt+0x48398>
  44f020:	mov	x2, x0
  44f024:	mov	x3, #0x0                   	// #0
  44f028:	mov	w1, w23
  44f02c:	add	x0, x29, #0x48
  44f030:	bl	444a5c <ferror@plt+0x41d2c>
  44f034:	mov	x23, x0
  44f038:	ldr	x24, [x29, #96]
  44f03c:	mov	x0, x24
  44f040:	bl	402680 <strlen@plt>
  44f044:	add	x24, x24, x0
  44f048:	str	x24, [x29, #96]
  44f04c:	b	44f084 <ferror@plt+0x4c354>
  44f050:	ldrb	w0, [x20, #1]
  44f054:	cmp	w0, #0x5a
  44f058:	b.ne	44eefc <ferror@plt+0x4c1cc>  // b.any
  44f05c:	mov	w23, #0x1                   	// #1
  44f060:	b	44ef5c <ferror@plt+0x4c22c>
  44f064:	cmp	w0, #0x49
  44f068:	cset	w23, ne  // ne = any
  44f06c:	add	w23, w23, #0x2
  44f070:	b	44ef5c <ferror@plt+0x4c22c>
  44f074:	cbnz	w23, 44f100 <ferror@plt+0x4c3d0>
  44f078:	add	x0, x29, #0x48
  44f07c:	bl	44b598 <ferror@plt+0x48868>
  44f080:	mov	x23, x0
  44f084:	tbz	w19, #0, 44f098 <ferror@plt+0x4c368>
  44f088:	ldr	x0, [x29, #96]
  44f08c:	ldrb	w1, [x0]
  44f090:	mov	w0, #0x0                   	// #0
  44f094:	cbnz	w1, 44f0b4 <ferror@plt+0x4c384>
  44f098:	mov	w0, #0x0                   	// #0
  44f09c:	cbz	x23, 44f0b4 <ferror@plt+0x4c384>
  44f0a0:	mov	x3, x22
  44f0a4:	mov	x2, x21
  44f0a8:	mov	x1, x23
  44f0ac:	mov	w0, w19
  44f0b0:	bl	44ecb0 <ferror@plt+0x4bf80>
  44f0b4:	mov	sp, x20
  44f0b8:	mov	sp, x29
  44f0bc:	ldp	x19, x20, [sp, #16]
  44f0c0:	ldp	x21, x22, [sp, #32]
  44f0c4:	ldp	x23, x24, [sp, #48]
  44f0c8:	ldp	x29, x30, [sp], #160
  44f0cc:	ret
  44f0d0:	mov	w1, #0x1                   	// #1
  44f0d4:	add	x0, x29, #0x48
  44f0d8:	bl	44e04c <ferror@plt+0x4b31c>
  44f0dc:	mov	x23, x0
  44f0e0:	b	44f084 <ferror@plt+0x4c354>
  44f0e4:	add	x0, x0, #0xd
  44f0e8:	str	x0, [x29, #96]
  44f0ec:	mov	w1, #0x0                   	// #0
  44f0f0:	add	x0, x29, #0x48
  44f0f4:	bl	44d86c <ferror@plt+0x4ab3c>
  44f0f8:	mov	x2, x0
  44f0fc:	b	44f024 <ferror@plt+0x4c2f4>
  44f100:	bl	402990 <abort@plt>
  44f104:	stp	x29, x30, [sp, #-64]!
  44f108:	mov	x29, sp
  44f10c:	str	x19, [sp, #16]
  44f110:	mov	x19, x2
  44f114:	str	xzr, [sp, #32]
  44f118:	str	xzr, [sp, #40]
  44f11c:	str	xzr, [sp, #48]
  44f120:	str	wzr, [sp, #56]
  44f124:	add	x3, sp, #0x20
  44f128:	adrp	x2, 445000 <ferror@plt+0x422d0>
  44f12c:	add	x2, x2, #0x420
  44f130:	bl	44eecc <ferror@plt+0x4c19c>
  44f134:	cbz	w0, 44f15c <ferror@plt+0x4c42c>
  44f138:	ldr	w0, [sp, #56]
  44f13c:	cmp	w0, #0x0
  44f140:	ldr	x0, [sp, #48]
  44f144:	csinc	x0, x0, xzr, eq  // eq = none
  44f148:	str	x0, [x19]
  44f14c:	ldr	x0, [sp, #32]
  44f150:	ldr	x19, [sp, #16]
  44f154:	ldp	x29, x30, [sp], #64
  44f158:	ret
  44f15c:	ldr	x0, [sp, #32]
  44f160:	bl	402a90 <free@plt>
  44f164:	str	xzr, [x19]
  44f168:	mov	x0, #0x0                   	// #0
  44f16c:	b	44f150 <ferror@plt+0x4c420>
  44f170:	stp	x29, x30, [sp, #-144]!
  44f174:	mov	x29, sp
  44f178:	stp	x19, x20, [sp, #16]
  44f17c:	str	x21, [sp, #32]
  44f180:	mov	x21, x0
  44f184:	mov	x20, x1
  44f188:	mov	x19, x2
  44f18c:	str	wzr, [x1]
  44f190:	str	wzr, [x2]
  44f194:	bl	402680 <strlen@plt>
  44f198:	add	x3, x29, #0x38
  44f19c:	mov	x2, x0
  44f1a0:	mov	w1, #0x4000                	// #16384
  44f1a4:	mov	x0, x21
  44f1a8:	bl	44ee8c <ferror@plt+0x4c15c>
  44f1ac:	ldrsw	x0, [x29, #100]
  44f1b0:	add	x0, x0, x0, lsl #1
  44f1b4:	lsl	x0, x0, #3
  44f1b8:	add	x0, x0, #0xf
  44f1bc:	and	x0, x0, #0xfffffffffffffff0
  44f1c0:	sub	sp, sp, x0
  44f1c4:	mov	x1, sp
  44f1c8:	ldrsw	x0, [x29, #116]
  44f1cc:	lsl	x0, x0, #3
  44f1d0:	add	x0, x0, #0xf
  44f1d4:	and	x0, x0, #0xfffffffffffffff0
  44f1d8:	sub	sp, sp, x0
  44f1dc:	str	x1, [x29, #88]
  44f1e0:	mov	x0, sp
  44f1e4:	str	x0, [x29, #104]
  44f1e8:	mov	w1, #0x1                   	// #1
  44f1ec:	add	x0, x29, #0x38
  44f1f0:	bl	44e04c <ferror@plt+0x4b31c>
  44f1f4:	cbz	x0, 44f27c <ferror@plt+0x4c54c>
  44f1f8:	ldr	w3, [x0]
  44f1fc:	cmp	w3, #0x7
  44f200:	b.eq	44f26c <ferror@plt+0x4c53c>  // b.none
  44f204:	b.hi	44f244 <ferror@plt+0x4c514>  // b.pmore
  44f208:	cmp	w3, #0x2
  44f20c:	b.ls	44f228 <ferror@plt+0x4c4f8>  // b.plast
  44f210:	sub	w3, w3, #0x3
  44f214:	cmp	w3, #0x1
  44f218:	b.hi	44f284 <ferror@plt+0x4c554>  // b.pmore
  44f21c:	ldr	x0, [x0, #8]
  44f220:	cbnz	x0, 44f1f8 <ferror@plt+0x4c4c8>
  44f224:	b	44f230 <ferror@plt+0x4c500>
  44f228:	cbnz	w3, 44f264 <ferror@plt+0x4c534>
  44f22c:	mov	w0, #0x0                   	// #0
  44f230:	mov	sp, x29
  44f234:	ldp	x19, x20, [sp, #16]
  44f238:	ldr	x21, [sp, #32]
  44f23c:	ldp	x29, x30, [sp], #144
  44f240:	ret
  44f244:	cmp	w3, #0x8
  44f248:	b.ne	44f25c <ferror@plt+0x4c52c>  // b.any
  44f24c:	ldr	w0, [x0, #8]
  44f250:	str	w0, [x19]
  44f254:	mov	w0, #0x1                   	// #1
  44f258:	b	44f230 <ferror@plt+0x4c500>
  44f25c:	mov	w0, #0x0                   	// #0
  44f260:	b	44f230 <ferror@plt+0x4c500>
  44f264:	ldr	x0, [x0, #16]
  44f268:	b	44f220 <ferror@plt+0x4c4f0>
  44f26c:	ldr	w0, [x0, #8]
  44f270:	str	w0, [x20]
  44f274:	mov	w0, #0x1                   	// #1
  44f278:	b	44f230 <ferror@plt+0x4c500>
  44f27c:	mov	w0, #0x0                   	// #0
  44f280:	b	44f230 <ferror@plt+0x4c500>
  44f284:	mov	w0, #0x0                   	// #0
  44f288:	b	44f230 <ferror@plt+0x4c500>
  44f28c:	stp	x29, x30, [sp, #-32]!
  44f290:	mov	x29, sp
  44f294:	add	x2, sp, #0x18
  44f298:	bl	44f104 <ferror@plt+0x4c3d4>
  44f29c:	ldp	x29, x30, [sp], #32
  44f2a0:	ret
  44f2a4:	stp	x29, x30, [sp, #-16]!
  44f2a8:	mov	x29, sp
  44f2ac:	bl	44eecc <ferror@plt+0x4c19c>
  44f2b0:	ldp	x29, x30, [sp], #16
  44f2b4:	ret
  44f2b8:	stp	x29, x30, [sp, #-32]!
  44f2bc:	mov	x29, sp
  44f2c0:	add	x2, sp, #0x18
  44f2c4:	mov	w1, #0x25                  	// #37
  44f2c8:	bl	44f104 <ferror@plt+0x4c3d4>
  44f2cc:	ldp	x29, x30, [sp], #32
  44f2d0:	ret
  44f2d4:	stp	x29, x30, [sp, #-16]!
  44f2d8:	mov	x29, sp
  44f2dc:	mov	x3, x2
  44f2e0:	mov	x2, x1
  44f2e4:	mov	w1, #0x25                  	// #37
  44f2e8:	bl	44eecc <ferror@plt+0x4c19c>
  44f2ec:	ldp	x29, x30, [sp], #16
  44f2f0:	ret
  44f2f4:	stp	x29, x30, [sp, #-32]!
  44f2f8:	mov	x29, sp
  44f2fc:	add	x2, sp, #0x18
  44f300:	add	x1, sp, #0x1c
  44f304:	bl	44f170 <ferror@plt+0x4c440>
  44f308:	cmp	w0, #0x0
  44f30c:	ldr	w0, [sp, #28]
  44f310:	csel	w0, w0, wzr, ne  // ne = any
  44f314:	ldp	x29, x30, [sp], #32
  44f318:	ret
  44f31c:	stp	x29, x30, [sp, #-32]!
  44f320:	mov	x29, sp
  44f324:	add	x2, sp, #0x18
  44f328:	add	x1, sp, #0x1c
  44f32c:	bl	44f170 <ferror@plt+0x4c440>
  44f330:	cmp	w0, #0x0
  44f334:	ldr	w0, [sp, #24]
  44f338:	csel	w0, w0, wzr, ne  // ne = any
  44f33c:	ldp	x29, x30, [sp], #32
  44f340:	ret
  44f344:	mov	w1, #0x2301                	// #8961
  44f348:	movk	w1, #0x6745, lsl #16
  44f34c:	str	w1, [x0]
  44f350:	mov	w1, #0xab89                	// #43913
  44f354:	movk	w1, #0xefcd, lsl #16
  44f358:	str	w1, [x0, #4]
  44f35c:	mov	w1, #0xdcfe                	// #56574
  44f360:	movk	w1, #0x98ba, lsl #16
  44f364:	str	w1, [x0, #8]
  44f368:	mov	w1, #0x5476                	// #21622
  44f36c:	movk	w1, #0x1032, lsl #16
  44f370:	str	w1, [x0, #12]
  44f374:	str	wzr, [x0, #20]
  44f378:	str	wzr, [x0, #16]
  44f37c:	str	wzr, [x0, #24]
  44f380:	ret
  44f384:	mov	x2, x0
  44f388:	mov	x0, x1
  44f38c:	ldr	w1, [x2]
  44f390:	mov	x3, #0x0                   	// #0
  44f394:	bfxil	x3, x1, #0, #32
  44f398:	ldr	w1, [x2, #4]
  44f39c:	bfi	x3, x1, #32, #32
  44f3a0:	ldr	w4, [x2, #8]
  44f3a4:	mov	x1, #0x0                   	// #0
  44f3a8:	bfxil	x1, x4, #0, #32
  44f3ac:	ldr	w2, [x2, #12]
  44f3b0:	bfi	x1, x2, #32, #32
  44f3b4:	str	x3, [x0]
  44f3b8:	str	x1, [x0, #8]
  44f3bc:	ret
  44f3c0:	stp	x29, x30, [sp, #-96]!
  44f3c4:	mov	x29, sp
  44f3c8:	stp	x21, x22, [sp, #32]
  44f3cc:	stp	x23, x24, [sp, #48]
  44f3d0:	stp	x25, x26, [sp, #64]
  44f3d4:	stp	x27, x28, [sp, #80]
  44f3d8:	and	x27, x1, #0xfffffffffffffffc
  44f3dc:	add	x27, x0, x27
  44f3e0:	ldr	w26, [x2]
  44f3e4:	ldr	w22, [x2, #4]
  44f3e8:	ldr	w24, [x2, #8]
  44f3ec:	ldr	w25, [x2, #12]
  44f3f0:	ldr	w4, [x2, #16]
  44f3f4:	add	w4, w4, w1
  44f3f8:	str	w4, [x2, #16]
  44f3fc:	lsr	x5, x1, #32
  44f400:	ldr	w3, [x2, #20]
  44f404:	add	w3, w3, w5
  44f408:	cmp	x1, w4, uxtw
  44f40c:	cinc	w1, w3, hi  // hi = pmore
  44f410:	str	w1, [x2, #20]
  44f414:	cmp	x0, x27
  44f418:	b.cs	44fdf0 <ferror@plt+0x4d0c0>  // b.hs, b.nlast
  44f41c:	stp	x19, x20, [sp, #16]
  44f420:	mov	w28, #0xa478                	// #42104
  44f424:	movk	w28, #0xd76a, lsl #16
  44f428:	add	w3, w26, w28
  44f42c:	mov	w1, #0xb756                	// #46934
  44f430:	movk	w1, #0xe8c7, lsl #16
  44f434:	add	w4, w25, w1
  44f438:	mov	w1, #0x70db                	// #28891
  44f43c:	movk	w1, #0x2420, lsl #16
  44f440:	add	w1, w24, w1
  44f444:	mov	w5, #0xceee                	// #52974
  44f448:	movk	w5, #0xc1bd, lsl #16
  44f44c:	add	w9, w22, w5
  44f450:	ldr	w8, [x0]
  44f454:	eor	w5, w24, w25
  44f458:	and	w5, w5, w22
  44f45c:	eor	w5, w5, w25
  44f460:	add	w5, w5, w8
  44f464:	add	w5, w5, w3
  44f468:	ror	w5, w5, #25
  44f46c:	add	w5, w5, w22
  44f470:	ldr	w7, [x0, #4]
  44f474:	eor	w3, w22, w24
  44f478:	and	w3, w3, w5
  44f47c:	eor	w3, w3, w24
  44f480:	add	w3, w3, w7
  44f484:	add	w3, w3, w4
  44f488:	ror	w3, w3, #20
  44f48c:	add	w3, w5, w3
  44f490:	ldr	w6, [x0, #8]
  44f494:	eor	w4, w5, w22
  44f498:	and	w4, w4, w3
  44f49c:	eor	w4, w4, w22
  44f4a0:	add	w4, w4, w6
  44f4a4:	add	w4, w4, w1
  44f4a8:	ror	w4, w4, #15
  44f4ac:	add	w4, w3, w4
  44f4b0:	ldr	w14, [x0, #12]
  44f4b4:	eor	w1, w5, w3
  44f4b8:	and	w1, w1, w4
  44f4bc:	eor	w1, w1, w5
  44f4c0:	add	w1, w1, w14
  44f4c4:	add	w1, w1, w9
  44f4c8:	ror	w1, w1, #10
  44f4cc:	add	w1, w4, w1
  44f4d0:	eor	w9, w3, w4
  44f4d4:	and	w9, w9, w1
  44f4d8:	eor	w9, w9, w3
  44f4dc:	add	w5, w9, w5
  44f4e0:	ldr	w9, [x0, #16]
  44f4e4:	mov	w10, #0xfaf                 	// #4015
  44f4e8:	movk	w10, #0xf57c, lsl #16
  44f4ec:	add	w10, w9, w10
  44f4f0:	add	w5, w10, w5
  44f4f4:	ror	w5, w5, #25
  44f4f8:	add	w5, w1, w5
  44f4fc:	eor	w10, w4, w1
  44f500:	and	w10, w10, w5
  44f504:	eor	w10, w10, w4
  44f508:	add	w3, w10, w3
  44f50c:	ldr	w15, [x0, #20]
  44f510:	mov	w10, #0xc62a                	// #50730
  44f514:	movk	w10, #0x4787, lsl #16
  44f518:	add	w10, w15, w10
  44f51c:	add	w3, w10, w3
  44f520:	ror	w3, w3, #20
  44f524:	add	w3, w5, w3
  44f528:	eor	w10, w1, w5
  44f52c:	and	w10, w10, w3
  44f530:	eor	w10, w10, w1
  44f534:	add	w4, w10, w4
  44f538:	ldr	w11, [x0, #24]
  44f53c:	mov	w10, #0x4613                	// #17939
  44f540:	movk	w10, #0xa830, lsl #16
  44f544:	add	w10, w11, w10
  44f548:	add	w4, w10, w4
  44f54c:	ror	w4, w4, #15
  44f550:	add	w4, w3, w4
  44f554:	eor	w10, w5, w3
  44f558:	and	w10, w10, w4
  44f55c:	eor	w10, w10, w5
  44f560:	add	w1, w10, w1
  44f564:	ldr	w17, [x0, #28]
  44f568:	mov	w10, #0x9501                	// #38145
  44f56c:	movk	w10, #0xfd46, lsl #16
  44f570:	add	w10, w17, w10
  44f574:	add	w1, w10, w1
  44f578:	ror	w1, w1, #10
  44f57c:	add	w1, w4, w1
  44f580:	eor	w23, w3, w4
  44f584:	and	w23, w23, w1
  44f588:	eor	w23, w23, w3
  44f58c:	add	w5, w23, w5
  44f590:	ldr	w20, [x0, #32]
  44f594:	mov	w10, #0x98d8                	// #39128
  44f598:	movk	w10, #0x6980, lsl #16
  44f59c:	add	w23, w20, w10
  44f5a0:	add	w5, w23, w5
  44f5a4:	ror	w23, w5, #25
  44f5a8:	add	w23, w1, w23
  44f5ac:	eor	w10, w4, w1
  44f5b0:	and	w10, w10, w23
  44f5b4:	eor	w10, w10, w4
  44f5b8:	add	w3, w10, w3
  44f5bc:	ldr	w5, [x0, #36]
  44f5c0:	mov	w10, #0xf7af                	// #63407
  44f5c4:	movk	w10, #0x8b44, lsl #16
  44f5c8:	add	w10, w5, w10
  44f5cc:	add	w3, w10, w3
  44f5d0:	ror	w10, w3, #20
  44f5d4:	add	w10, w23, w10
  44f5d8:	eor	w16, w1, w23
  44f5dc:	and	w16, w16, w10
  44f5e0:	eor	w16, w16, w1
  44f5e4:	add	w4, w16, w4
  44f5e8:	ldr	w3, [x0, #40]
  44f5ec:	sub	w16, w3, #0xa, lsl #12
  44f5f0:	sub	w16, w16, #0x44f
  44f5f4:	add	w4, w16, w4
  44f5f8:	ror	w16, w4, #15
  44f5fc:	add	w16, w10, w16
  44f600:	eor	w12, w23, w10
  44f604:	and	w12, w12, w16
  44f608:	eor	w12, w12, w23
  44f60c:	add	w1, w12, w1
  44f610:	ldr	w13, [x0, #44]
  44f614:	mov	w4, #0xd7be                	// #55230
  44f618:	movk	w4, #0x895c, lsl #16
  44f61c:	add	w12, w13, w4
  44f620:	add	w1, w12, w1
  44f624:	ror	w12, w1, #10
  44f628:	add	w12, w16, w12
  44f62c:	eor	w1, w10, w16
  44f630:	and	w1, w1, w12
  44f634:	eor	w1, w1, w10
  44f638:	add	w23, w1, w23
  44f63c:	ldr	w4, [x0, #48]
  44f640:	mov	w1, #0x1122                	// #4386
  44f644:	movk	w1, #0x6b90, lsl #16
  44f648:	add	w1, w4, w1
  44f64c:	add	w23, w1, w23
  44f650:	ror	w1, w23, #25
  44f654:	add	w1, w12, w1
  44f658:	eor	w19, w16, w12
  44f65c:	and	w19, w19, w1
  44f660:	eor	w19, w19, w16
  44f664:	add	w19, w19, w10
  44f668:	ldr	w10, [x0, #52]
  44f66c:	mov	w18, #0x7193                	// #29075
  44f670:	movk	w18, #0xfd98, lsl #16
  44f674:	add	w18, w10, w18
  44f678:	add	w19, w18, w19
  44f67c:	ror	w19, w19, #20
  44f680:	add	w19, w1, w19
  44f684:	eor	w21, w12, w1
  44f688:	and	w21, w21, w19
  44f68c:	eor	w21, w21, w12
  44f690:	add	w21, w21, w16
  44f694:	ldr	w16, [x0, #56]
  44f698:	mov	w18, #0x438e                	// #17294
  44f69c:	movk	w18, #0xa679, lsl #16
  44f6a0:	add	w18, w16, w18
  44f6a4:	add	w21, w18, w21
  44f6a8:	ror	w21, w21, #15
  44f6ac:	add	w21, w19, w21
  44f6b0:	eor	w18, w1, w19
  44f6b4:	and	w18, w18, w21
  44f6b8:	eor	w18, w18, w1
  44f6bc:	add	w18, w18, w12
  44f6c0:	ldr	w12, [x0, #60]
  44f6c4:	mov	w23, #0x821                 	// #2081
  44f6c8:	movk	w23, #0x49b4, lsl #16
  44f6cc:	add	w23, w12, w23
  44f6d0:	add	w18, w23, w18
  44f6d4:	add	x0, x0, #0x40
  44f6d8:	ror	w18, w18, #10
  44f6dc:	add	w18, w21, w18
  44f6e0:	eor	w23, w21, w18
  44f6e4:	and	w23, w23, w19
  44f6e8:	eor	w23, w23, w21
  44f6ec:	add	w1, w23, w1
  44f6f0:	mov	w23, #0x2562                	// #9570
  44f6f4:	movk	w23, #0xf61e, lsl #16
  44f6f8:	add	w23, w7, w23
  44f6fc:	add	w1, w23, w1
  44f700:	ror	w1, w1, #27
  44f704:	add	w1, w18, w1
  44f708:	eor	w23, w18, w1
  44f70c:	and	w23, w23, w21
  44f710:	eor	w23, w23, w18
  44f714:	add	w19, w23, w19
  44f718:	mov	w23, #0xb340                	// #45888
  44f71c:	movk	w23, #0xc040, lsl #16
  44f720:	add	w23, w11, w23
  44f724:	add	w19, w23, w19
  44f728:	ror	w19, w19, #23
  44f72c:	add	w19, w1, w19
  44f730:	eor	w23, w1, w19
  44f734:	and	w23, w23, w18
  44f738:	eor	w23, w23, w1
  44f73c:	add	w21, w23, w21
  44f740:	mov	w23, #0x5a51                	// #23121
  44f744:	movk	w23, #0x265e, lsl #16
  44f748:	add	w23, w13, w23
  44f74c:	add	w21, w23, w21
  44f750:	ror	w21, w21, #18
  44f754:	add	w21, w19, w21
  44f758:	eor	w23, w19, w21
  44f75c:	and	w23, w23, w1
  44f760:	eor	w23, w23, w19
  44f764:	add	w18, w23, w18
  44f768:	mov	w23, #0xc7aa                	// #51114
  44f76c:	movk	w23, #0xe9b6, lsl #16
  44f770:	add	w23, w8, w23
  44f774:	add	w18, w23, w18
  44f778:	ror	w18, w18, #12
  44f77c:	add	w18, w21, w18
  44f780:	eor	w23, w21, w18
  44f784:	and	w23, w23, w19
  44f788:	eor	w23, w23, w21
  44f78c:	add	w1, w23, w1
  44f790:	mov	w23, #0x105d                	// #4189
  44f794:	movk	w23, #0xd62f, lsl #16
  44f798:	add	w23, w15, w23
  44f79c:	add	w1, w23, w1
  44f7a0:	ror	w1, w1, #27
  44f7a4:	add	w1, w18, w1
  44f7a8:	eor	w23, w18, w1
  44f7ac:	and	w23, w23, w21
  44f7b0:	eor	w23, w23, w18
  44f7b4:	add	w19, w23, w19
  44f7b8:	mov	w23, #0x1453                	// #5203
  44f7bc:	movk	w23, #0x244, lsl #16
  44f7c0:	add	w23, w3, w23
  44f7c4:	add	w19, w23, w19
  44f7c8:	ror	w19, w19, #23
  44f7cc:	add	w19, w1, w19
  44f7d0:	eor	w23, w1, w19
  44f7d4:	and	w23, w23, w18
  44f7d8:	eor	w23, w23, w1
  44f7dc:	add	w21, w23, w21
  44f7e0:	mov	w23, #0xe681                	// #59009
  44f7e4:	movk	w23, #0xd8a1, lsl #16
  44f7e8:	add	w23, w12, w23
  44f7ec:	add	w21, w23, w21
  44f7f0:	ror	w21, w21, #18
  44f7f4:	add	w21, w19, w21
  44f7f8:	eor	w23, w19, w21
  44f7fc:	and	w23, w23, w1
  44f800:	eor	w23, w23, w19
  44f804:	add	w18, w23, w18
  44f808:	mov	w23, #0xfbc8                	// #64456
  44f80c:	movk	w23, #0xe7d3, lsl #16
  44f810:	add	w23, w9, w23
  44f814:	add	w18, w23, w18
  44f818:	ror	w18, w18, #12
  44f81c:	add	w18, w21, w18
  44f820:	eor	w23, w21, w18
  44f824:	and	w23, w23, w19
  44f828:	eor	w23, w23, w21
  44f82c:	add	w1, w23, w1
  44f830:	mov	w23, #0xcde6                	// #52710
  44f834:	movk	w23, #0x21e1, lsl #16
  44f838:	add	w23, w5, w23
  44f83c:	add	w1, w23, w1
  44f840:	ror	w1, w1, #27
  44f844:	add	w1, w18, w1
  44f848:	eor	w23, w18, w1
  44f84c:	and	w23, w23, w21
  44f850:	eor	w23, w23, w18
  44f854:	add	w19, w23, w19
  44f858:	mov	w23, #0x7d6                 	// #2006
  44f85c:	movk	w23, #0xc337, lsl #16
  44f860:	add	w23, w16, w23
  44f864:	add	w19, w23, w19
  44f868:	ror	w19, w19, #23
  44f86c:	add	w19, w1, w19
  44f870:	eor	w23, w1, w19
  44f874:	and	w23, w23, w18
  44f878:	eor	w23, w23, w1
  44f87c:	add	w23, w23, w21
  44f880:	mov	w21, #0xd87                 	// #3463
  44f884:	movk	w21, #0xf4d5, lsl #16
  44f888:	add	w21, w14, w21
  44f88c:	add	w21, w21, w23
  44f890:	ror	w21, w21, #18
  44f894:	add	w21, w19, w21
  44f898:	eor	w23, w19, w21
  44f89c:	and	w23, w23, w1
  44f8a0:	eor	w23, w23, w19
  44f8a4:	add	w23, w23, w18
  44f8a8:	mov	w18, #0x14ed                	// #5357
  44f8ac:	movk	w18, #0x455a, lsl #16
  44f8b0:	add	w18, w20, w18
  44f8b4:	add	w18, w18, w23
  44f8b8:	ror	w18, w18, #12
  44f8bc:	add	w18, w21, w18
  44f8c0:	eor	w23, w21, w18
  44f8c4:	and	w23, w23, w19
  44f8c8:	eor	w23, w23, w21
  44f8cc:	add	w23, w23, w1
  44f8d0:	mov	w1, #0xe905                	// #59653
  44f8d4:	movk	w1, #0xa9e3, lsl #16
  44f8d8:	add	w1, w10, w1
  44f8dc:	add	w1, w1, w23
  44f8e0:	ror	w1, w1, #27
  44f8e4:	add	w1, w18, w1
  44f8e8:	eor	w23, w18, w1
  44f8ec:	and	w23, w23, w21
  44f8f0:	eor	w23, w23, w18
  44f8f4:	add	w23, w23, w19
  44f8f8:	mov	w19, #0xa3f8                	// #41976
  44f8fc:	movk	w19, #0xfcef, lsl #16
  44f900:	add	w19, w6, w19
  44f904:	add	w19, w19, w23
  44f908:	ror	w19, w19, #23
  44f90c:	add	w19, w1, w19
  44f910:	eor	w23, w1, w19
  44f914:	and	w23, w23, w18
  44f918:	eor	w23, w23, w1
  44f91c:	add	w21, w23, w21
  44f920:	mov	w23, #0x2d9                 	// #729
  44f924:	movk	w23, #0x676f, lsl #16
  44f928:	add	w23, w17, w23
  44f92c:	add	w23, w23, w21
  44f930:	ror	w23, w23, #18
  44f934:	add	w23, w19, w23
  44f938:	eor	w30, w19, w23
  44f93c:	and	w21, w30, w1
  44f940:	eor	w21, w21, w19
  44f944:	add	w21, w21, w18
  44f948:	mov	w18, #0x4c8a                	// #19594
  44f94c:	movk	w18, #0x8d2a, lsl #16
  44f950:	add	w18, w4, w18
  44f954:	add	w18, w18, w21
  44f958:	ror	w18, w18, #12
  44f95c:	add	w18, w23, w18
  44f960:	eor	w30, w30, w18
  44f964:	add	w1, w30, w1
  44f968:	sub	w30, w15, #0x5c, lsl #12
  44f96c:	sub	w30, w30, #0x6be
  44f970:	add	w1, w30, w1
  44f974:	ror	w1, w1, #28
  44f978:	add	w1, w18, w1
  44f97c:	eor	w21, w23, w18
  44f980:	eor	w21, w21, w1
  44f984:	add	w21, w21, w19
  44f988:	mov	w19, #0xf681                	// #63105
  44f98c:	movk	w19, #0x8771, lsl #16
  44f990:	add	w19, w20, w19
  44f994:	add	w19, w19, w21
  44f998:	ror	w19, w19, #21
  44f99c:	add	w19, w1, w19
  44f9a0:	eor	w21, w18, w1
  44f9a4:	eor	w21, w21, w19
  44f9a8:	add	w21, w21, w23
  44f9ac:	mov	w23, #0x6122                	// #24866
  44f9b0:	movk	w23, #0x6d9d, lsl #16
  44f9b4:	add	w23, w13, w23
  44f9b8:	add	w23, w23, w21
  44f9bc:	ror	w23, w23, #16
  44f9c0:	add	w23, w19, w23
  44f9c4:	eor	w21, w1, w19
  44f9c8:	eor	w21, w21, w23
  44f9cc:	add	w18, w21, w18
  44f9d0:	mov	w21, #0x380c                	// #14348
  44f9d4:	movk	w21, #0xfde5, lsl #16
  44f9d8:	add	w21, w16, w21
  44f9dc:	add	w21, w21, w18
  44f9e0:	ror	w21, w21, #9
  44f9e4:	add	w21, w23, w21
  44f9e8:	eor	w18, w19, w23
  44f9ec:	eor	w18, w18, w21
  44f9f0:	add	w18, w18, w1
  44f9f4:	mov	w1, #0xea44                	// #59972
  44f9f8:	movk	w1, #0xa4be, lsl #16
  44f9fc:	add	w1, w7, w1
  44fa00:	add	w1, w1, w18
  44fa04:	ror	w1, w1, #28
  44fa08:	add	w1, w21, w1
  44fa0c:	eor	w18, w23, w21
  44fa10:	eor	w18, w18, w1
  44fa14:	add	w18, w18, w19
  44fa18:	mov	w19, #0xcfa9                	// #53161
  44fa1c:	movk	w19, #0x4bde, lsl #16
  44fa20:	add	w19, w9, w19
  44fa24:	add	w19, w19, w18
  44fa28:	ror	w19, w19, #21
  44fa2c:	add	w19, w1, w19
  44fa30:	eor	w18, w21, w1
  44fa34:	eor	w18, w18, w19
  44fa38:	add	w23, w18, w23
  44fa3c:	mov	w18, #0x4b60                	// #19296
  44fa40:	movk	w18, #0xf6bb, lsl #16
  44fa44:	add	w18, w17, w18
  44fa48:	add	w18, w18, w23
  44fa4c:	ror	w18, w18, #16
  44fa50:	add	w18, w19, w18
  44fa54:	eor	w23, w1, w19
  44fa58:	eor	w23, w23, w18
  44fa5c:	add	w23, w23, w21
  44fa60:	mov	w21, #0xbc70                	// #48240
  44fa64:	movk	w21, #0xbebf, lsl #16
  44fa68:	add	w21, w3, w21
  44fa6c:	add	w21, w21, w23
  44fa70:	ror	w21, w21, #9
  44fa74:	add	w21, w18, w21
  44fa78:	eor	w23, w19, w18
  44fa7c:	eor	w23, w23, w21
  44fa80:	add	w23, w23, w1
  44fa84:	mov	w1, #0x7ec6                	// #32454
  44fa88:	movk	w1, #0x289b, lsl #16
  44fa8c:	add	w1, w10, w1
  44fa90:	add	w1, w1, w23
  44fa94:	ror	w1, w1, #28
  44fa98:	add	w1, w21, w1
  44fa9c:	eor	w23, w18, w21
  44faa0:	eor	w23, w23, w1
  44faa4:	add	w23, w23, w19
  44faa8:	mov	w19, #0x27fa                	// #10234
  44faac:	movk	w19, #0xeaa1, lsl #16
  44fab0:	add	w19, w8, w19
  44fab4:	add	w19, w19, w23
  44fab8:	ror	w19, w19, #21
  44fabc:	add	w19, w1, w19
  44fac0:	eor	w23, w21, w1
  44fac4:	eor	w23, w23, w19
  44fac8:	add	w23, w23, w18
  44facc:	mov	w18, #0x3085                	// #12421
  44fad0:	movk	w18, #0xd4ef, lsl #16
  44fad4:	add	w18, w14, w18
  44fad8:	add	w18, w18, w23
  44fadc:	ror	w18, w18, #16
  44fae0:	add	w18, w19, w18
  44fae4:	eor	w23, w1, w19
  44fae8:	eor	w23, w23, w18
  44faec:	add	w23, w23, w21
  44faf0:	mov	w21, #0x1d05                	// #7429
  44faf4:	movk	w21, #0x488, lsl #16
  44faf8:	add	w21, w11, w21
  44fafc:	add	w21, w21, w23
  44fb00:	ror	w21, w21, #9
  44fb04:	add	w21, w18, w21
  44fb08:	eor	w23, w19, w18
  44fb0c:	eor	w23, w23, w21
  44fb10:	add	w23, w23, w1
  44fb14:	mov	w1, #0xd039                	// #53305
  44fb18:	movk	w1, #0xd9d4, lsl #16
  44fb1c:	add	w1, w5, w1
  44fb20:	add	w1, w1, w23
  44fb24:	ror	w1, w1, #28
  44fb28:	add	w1, w21, w1
  44fb2c:	eor	w23, w18, w21
  44fb30:	eor	w23, w23, w1
  44fb34:	add	w23, w23, w19
  44fb38:	mov	w19, #0x99e5                	// #39397
  44fb3c:	movk	w19, #0xe6db, lsl #16
  44fb40:	add	w19, w4, w19
  44fb44:	add	w19, w19, w23
  44fb48:	ror	w19, w19, #21
  44fb4c:	add	w19, w1, w19
  44fb50:	eor	w23, w21, w1
  44fb54:	eor	w23, w23, w19
  44fb58:	add	w23, w23, w18
  44fb5c:	mov	w18, #0x7cf8                	// #31992
  44fb60:	movk	w18, #0x1fa2, lsl #16
  44fb64:	add	w18, w12, w18
  44fb68:	add	w18, w18, w23
  44fb6c:	ror	w18, w18, #16
  44fb70:	add	w18, w19, w18
  44fb74:	eor	w23, w1, w19
  44fb78:	eor	w23, w23, w18
  44fb7c:	add	w23, w23, w21
  44fb80:	mov	w21, #0x5665                	// #22117
  44fb84:	movk	w21, #0xc4ac, lsl #16
  44fb88:	add	w21, w6, w21
  44fb8c:	add	w21, w21, w23
  44fb90:	ror	w21, w21, #9
  44fb94:	add	w21, w18, w21
  44fb98:	orn	w23, w21, w19
  44fb9c:	eor	w23, w23, w18
  44fba0:	add	w1, w23, w1
  44fba4:	mov	w23, #0x2244                	// #8772
  44fba8:	movk	w23, #0xf429, lsl #16
  44fbac:	add	w8, w8, w23
  44fbb0:	add	w8, w8, w1
  44fbb4:	ror	w8, w8, #26
  44fbb8:	add	w8, w21, w8
  44fbbc:	orn	w1, w8, w18
  44fbc0:	eor	w1, w1, w21
  44fbc4:	add	w1, w1, w19
  44fbc8:	mov	w19, #0xff97                	// #65431
  44fbcc:	movk	w19, #0x432a, lsl #16
  44fbd0:	add	w19, w17, w19
  44fbd4:	add	w19, w19, w1
  44fbd8:	ror	w19, w19, #22
  44fbdc:	add	w19, w8, w19
  44fbe0:	orn	w1, w19, w21
  44fbe4:	eor	w1, w1, w8
  44fbe8:	add	w1, w1, w18
  44fbec:	mov	w18, #0x23a7                	// #9127
  44fbf0:	movk	w18, #0xab94, lsl #16
  44fbf4:	add	w18, w16, w18
  44fbf8:	add	w18, w18, w1
  44fbfc:	ror	w18, w18, #17
  44fc00:	add	w18, w19, w18
  44fc04:	orn	w17, w18, w8
  44fc08:	eor	w17, w17, w19
  44fc0c:	add	w21, w17, w21
  44fc10:	mov	w17, #0xa039                	// #41017
  44fc14:	movk	w17, #0xfc93, lsl #16
  44fc18:	add	w17, w15, w17
  44fc1c:	add	w17, w17, w21
  44fc20:	ror	w17, w17, #11
  44fc24:	add	w17, w18, w17
  44fc28:	orn	w1, w17, w19
  44fc2c:	eor	w1, w1, w18
  44fc30:	add	w8, w1, w8
  44fc34:	mov	w1, #0x59c3                	// #22979
  44fc38:	movk	w1, #0x655b, lsl #16
  44fc3c:	add	w1, w4, w1
  44fc40:	add	w1, w1, w8
  44fc44:	ror	w1, w1, #26
  44fc48:	add	w1, w17, w1
  44fc4c:	orn	w16, w1, w18
  44fc50:	eor	w16, w16, w17
  44fc54:	add	w19, w16, w19
  44fc58:	mov	w16, #0xcc92                	// #52370
  44fc5c:	movk	w16, #0x8f0c, lsl #16
  44fc60:	add	w16, w14, w16
  44fc64:	add	w16, w16, w19
  44fc68:	ror	w16, w16, #22
  44fc6c:	add	w16, w1, w16
  44fc70:	orn	w15, w16, w17
  44fc74:	eor	w15, w15, w1
  44fc78:	add	w18, w15, w18
  44fc7c:	sub	w15, w3, #0x100, lsl #12
  44fc80:	sub	w15, w15, #0xb83
  44fc84:	add	w15, w15, w18
  44fc88:	ror	w15, w15, #17
  44fc8c:	add	w15, w16, w15
  44fc90:	orn	w14, w15, w1
  44fc94:	eor	w14, w14, w16
  44fc98:	add	w17, w14, w17
  44fc9c:	mov	w14, #0x5dd1                	// #24017
  44fca0:	movk	w14, #0x8584, lsl #16
  44fca4:	add	w14, w7, w14
  44fca8:	add	w14, w14, w17
  44fcac:	ror	w14, w14, #11
  44fcb0:	add	w14, w15, w14
  44fcb4:	orn	w8, w14, w16
  44fcb8:	eor	w8, w8, w15
  44fcbc:	add	w1, w8, w1
  44fcc0:	mov	w8, #0x7e4f                	// #32335
  44fcc4:	movk	w8, #0x6fa8, lsl #16
  44fcc8:	add	w8, w20, w8
  44fccc:	add	w8, w8, w1
  44fcd0:	ror	w8, w8, #26
  44fcd4:	add	w8, w14, w8
  44fcd8:	orn	w4, w8, w15
  44fcdc:	eor	w4, w4, w14
  44fce0:	add	w16, w4, w16
  44fce4:	mov	w4, #0xe6e0                	// #59104
  44fce8:	movk	w4, #0xfe2c, lsl #16
  44fcec:	add	w4, w12, w4
  44fcf0:	add	w4, w4, w16
  44fcf4:	ror	w4, w4, #22
  44fcf8:	add	w4, w8, w4
  44fcfc:	orn	w3, w4, w14
  44fd00:	eor	w3, w3, w8
  44fd04:	add	w15, w3, w15
  44fd08:	mov	w3, #0x4314                	// #17172
  44fd0c:	movk	w3, #0xa301, lsl #16
  44fd10:	add	w3, w11, w3
  44fd14:	add	w3, w3, w15
  44fd18:	ror	w3, w3, #17
  44fd1c:	add	w3, w4, w3
  44fd20:	orn	w7, w3, w8
  44fd24:	eor	w7, w7, w4
  44fd28:	add	w14, w7, w14
  44fd2c:	mov	w7, #0x11a1                	// #4513
  44fd30:	movk	w7, #0x4e08, lsl #16
  44fd34:	add	w7, w10, w7
  44fd38:	add	w7, w7, w14
  44fd3c:	ror	w7, w7, #11
  44fd40:	add	w7, w3, w7
  44fd44:	orn	w1, w7, w4
  44fd48:	eor	w1, w1, w3
  44fd4c:	add	w8, w1, w8
  44fd50:	mov	w1, #0x7e82                	// #32386
  44fd54:	movk	w1, #0xf753, lsl #16
  44fd58:	add	w1, w9, w1
  44fd5c:	add	w1, w1, w8
  44fd60:	ror	w1, w1, #26
  44fd64:	add	w1, w7, w1
  44fd68:	orn	w8, w1, w3
  44fd6c:	eor	w8, w8, w7
  44fd70:	add	w8, w8, w4
  44fd74:	mov	w4, #0xf235                	// #62005
  44fd78:	movk	w4, #0xbd3a, lsl #16
  44fd7c:	add	w4, w13, w4
  44fd80:	add	w4, w4, w8
  44fd84:	ror	w4, w4, #22
  44fd88:	add	w4, w1, w4
  44fd8c:	orn	w8, w4, w7
  44fd90:	eor	w8, w8, w1
  44fd94:	add	w8, w8, w3
  44fd98:	mov	w3, #0xd2bb                	// #53947
  44fd9c:	movk	w3, #0x2ad7, lsl #16
  44fda0:	add	w3, w6, w3
  44fda4:	add	w3, w3, w8
  44fda8:	ror	w3, w3, #17
  44fdac:	add	w3, w4, w3
  44fdb0:	orn	w6, w3, w1
  44fdb4:	eor	w6, w6, w4
  44fdb8:	add	w7, w6, w7
  44fdbc:	mov	w6, #0xd391                	// #54161
  44fdc0:	movk	w6, #0xeb86, lsl #16
  44fdc4:	add	w5, w5, w6
  44fdc8:	add	w5, w5, w7
  44fdcc:	ror	w5, w5, #11
  44fdd0:	add	w5, w3, w5
  44fdd4:	add	w26, w26, w1
  44fdd8:	add	w22, w22, w5
  44fddc:	add	w24, w24, w3
  44fde0:	add	w25, w25, w4
  44fde4:	cmp	x27, x0
  44fde8:	b.hi	44f428 <ferror@plt+0x4c6f8>  // b.pmore
  44fdec:	ldp	x19, x20, [sp, #16]
  44fdf0:	str	w26, [x2]
  44fdf4:	str	w22, [x2, #4]
  44fdf8:	str	w24, [x2, #8]
  44fdfc:	str	w25, [x2, #12]
  44fe00:	ldp	x21, x22, [sp, #32]
  44fe04:	ldp	x23, x24, [sp, #48]
  44fe08:	ldp	x25, x26, [sp, #64]
  44fe0c:	ldp	x27, x28, [sp, #80]
  44fe10:	ldp	x29, x30, [sp], #96
  44fe14:	ret
  44fe18:	stp	x29, x30, [sp, #-48]!
  44fe1c:	mov	x29, sp
  44fe20:	stp	x19, x20, [sp, #16]
  44fe24:	stp	x21, x22, [sp, #32]
  44fe28:	mov	x19, x0
  44fe2c:	mov	x22, x1
  44fe30:	ldr	w0, [x0, #24]
  44fe34:	ldr	w2, [x19, #16]
  44fe38:	add	w2, w0, w2
  44fe3c:	str	w2, [x19, #16]
  44fe40:	cmp	w2, w0
  44fe44:	b.cs	44fe54 <ferror@plt+0x4d124>  // b.hs, b.nlast
  44fe48:	ldr	w1, [x19, #20]
  44fe4c:	add	w1, w1, #0x1
  44fe50:	str	w1, [x19, #20]
  44fe54:	mov	w20, #0x78                  	// #120
  44fe58:	sub	w1, w20, w0
  44fe5c:	mov	w20, #0x38                  	// #56
  44fe60:	sub	w20, w20, w0
  44fe64:	cmp	w0, #0x38
  44fe68:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  44fe6c:	mov	w21, w0
  44fe70:	add	x0, x21, #0x1c
  44fe74:	mov	x2, x20
  44fe78:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  44fe7c:	add	x1, x1, #0x640
  44fe80:	add	x0, x19, x0
  44fe84:	bl	402620 <memcpy@plt>
  44fe88:	ldr	w2, [x19, #16]
  44fe8c:	add	x20, x20, x21
  44fe90:	add	x1, x19, x20
  44fe94:	lsl	w0, w2, #3
  44fe98:	str	w0, [x1, #28]
  44fe9c:	ldr	w0, [x19, #20]
  44fea0:	extr	w0, w0, w2, #29
  44fea4:	str	w0, [x1, #32]
  44fea8:	mov	x2, x19
  44feac:	add	x1, x20, #0x8
  44feb0:	add	x0, x19, #0x1c
  44feb4:	bl	44f3c0 <ferror@plt+0x4c690>
  44feb8:	mov	x1, x22
  44febc:	mov	x0, x19
  44fec0:	bl	44f384 <ferror@plt+0x4c654>
  44fec4:	ldp	x19, x20, [sp, #16]
  44fec8:	ldp	x21, x22, [sp, #32]
  44fecc:	ldp	x29, x30, [sp], #48
  44fed0:	ret
  44fed4:	stp	x29, x30, [sp, #-80]!
  44fed8:	mov	x29, sp
  44fedc:	stp	x19, x20, [sp, #16]
  44fee0:	stp	x21, x22, [sp, #32]
  44fee4:	stp	x23, x24, [sp, #48]
  44fee8:	mov	x19, x0
  44feec:	mov	x22, x1
  44fef0:	mov	x21, x2
  44fef4:	ldr	w24, [x2, #24]
  44fef8:	cbnz	w24, 44ff8c <ferror@plt+0x4d25c>
  44fefc:	cmp	x22, #0x40
  44ff00:	b.ls	44ff74 <ferror@plt+0x4d244>  // b.plast
  44ff04:	tst	x19, #0x3
  44ff08:	b.eq	45001c <ferror@plt+0x4d2ec>  // b.none
  44ff0c:	stp	x25, x26, [sp, #64]
  44ff10:	sub	x25, x22, #0x41
  44ff14:	lsr	x25, x25, #6
  44ff18:	add	x23, x25, #0x1
  44ff1c:	add	x23, x19, x23, lsl #6
  44ff20:	add	x20, x21, #0x1c
  44ff24:	mov	x24, #0x40                  	// #64
  44ff28:	ldp	x0, x1, [x19]
  44ff2c:	stp	x0, x1, [x20]
  44ff30:	ldp	x0, x1, [x19, #16]
  44ff34:	stp	x0, x1, [x20, #16]
  44ff38:	ldp	x0, x1, [x19, #32]
  44ff3c:	stp	x0, x1, [x20, #32]
  44ff40:	ldp	x0, x1, [x19, #48]
  44ff44:	stp	x0, x1, [x20, #48]
  44ff48:	mov	x2, x21
  44ff4c:	mov	x1, x24
  44ff50:	mov	x0, x20
  44ff54:	bl	44f3c0 <ferror@plt+0x4c690>
  44ff58:	add	x19, x19, #0x40
  44ff5c:	cmp	x19, x23
  44ff60:	b.ne	44ff28 <ferror@plt+0x4d1f8>  // b.any
  44ff64:	sub	x22, x22, #0x40
  44ff68:	sub	x22, x22, x25, lsl #6
  44ff6c:	mov	x19, x23
  44ff70:	ldp	x25, x26, [sp, #64]
  44ff74:	cbnz	x22, 45003c <ferror@plt+0x4d30c>
  44ff78:	ldp	x19, x20, [sp, #16]
  44ff7c:	ldp	x21, x22, [sp, #32]
  44ff80:	ldp	x23, x24, [sp, #48]
  44ff84:	ldp	x29, x30, [sp], #80
  44ff88:	ret
  44ff8c:	mov	w23, w24
  44ff90:	mov	x20, #0x80                  	// #128
  44ff94:	sub	x20, x20, x23
  44ff98:	cmp	x20, x1
  44ff9c:	csel	x20, x20, x1, ls  // ls = plast
  44ffa0:	add	x0, x23, #0x1c
  44ffa4:	mov	x2, x20
  44ffa8:	mov	x1, x19
  44ffac:	add	x0, x21, x0
  44ffb0:	bl	402620 <memcpy@plt>
  44ffb4:	ldr	w0, [x21, #24]
  44ffb8:	add	w0, w0, w20
  44ffbc:	str	w0, [x21, #24]
  44ffc0:	add	x23, x23, x20
  44ffc4:	cmp	x23, #0x40
  44ffc8:	b.hi	44ffd8 <ferror@plt+0x4d2a8>  // b.pmore
  44ffcc:	add	x19, x19, x20
  44ffd0:	sub	x22, x22, x20
  44ffd4:	b	44fefc <ferror@plt+0x4d1cc>
  44ffd8:	stp	x25, x26, [sp, #64]
  44ffdc:	add	x25, x21, #0x1c
  44ffe0:	and	x26, x23, #0xffffffffffffffc0
  44ffe4:	mov	x2, x21
  44ffe8:	mov	x1, x26
  44ffec:	mov	x0, x25
  44fff0:	bl	44f3c0 <ferror@plt+0x4c690>
  44fff4:	add	x1, x26, #0x1c
  44fff8:	and	x2, x23, #0x3f
  44fffc:	add	x1, x21, x1
  450000:	mov	x0, x25
  450004:	bl	402620 <memcpy@plt>
  450008:	add	w0, w24, w20
  45000c:	and	w0, w0, #0x3f
  450010:	str	w0, [x21, #24]
  450014:	ldp	x25, x26, [sp, #64]
  450018:	b	44ffcc <ferror@plt+0x4d29c>
  45001c:	and	x20, x22, #0xffffffffffffffc0
  450020:	mov	x2, x21
  450024:	mov	x1, x20
  450028:	mov	x0, x19
  45002c:	bl	44f3c0 <ferror@plt+0x4c690>
  450030:	add	x19, x19, x20
  450034:	and	x22, x22, #0x3f
  450038:	b	44ff74 <ferror@plt+0x4d244>
  45003c:	mov	x2, x22
  450040:	mov	x1, x19
  450044:	add	x0, x21, #0x1c
  450048:	bl	402620 <memcpy@plt>
  45004c:	str	w22, [x21, #24]
  450050:	b	44ff78 <ferror@plt+0x4d248>
  450054:	stp	x29, x30, [sp, #-208]!
  450058:	mov	x29, sp
  45005c:	stp	x19, x20, [sp, #16]
  450060:	str	x21, [sp, #32]
  450064:	mov	x20, x0
  450068:	mov	x21, x1
  45006c:	mov	x19, x2
  450070:	add	x0, sp, #0x30
  450074:	bl	44f344 <ferror@plt+0x4c614>
  450078:	add	x2, sp, #0x30
  45007c:	mov	x1, x21
  450080:	mov	x0, x20
  450084:	bl	44fed4 <ferror@plt+0x4d1a4>
  450088:	mov	x1, x19
  45008c:	add	x0, sp, #0x30
  450090:	bl	44fe18 <ferror@plt+0x4d0e8>
  450094:	ldp	x19, x20, [sp, #16]
  450098:	ldr	x21, [sp, #32]
  45009c:	ldp	x29, x30, [sp], #208
  4500a0:	ret
  4500a4:	mov	x12, #0x1130                	// #4400
  4500a8:	sub	sp, sp, x12
  4500ac:	stp	x29, x30, [sp]
  4500b0:	mov	x29, sp
  4500b4:	stp	x19, x20, [sp, #16]
  4500b8:	stp	x21, x22, [sp, #32]
  4500bc:	str	x23, [sp, #48]
  4500c0:	mov	x21, x0
  4500c4:	mov	x23, x1
  4500c8:	add	x0, sp, #0x1, lsl #12
  4500cc:	add	x0, x0, #0x90
  4500d0:	bl	44f344 <ferror@plt+0x4c614>
  4500d4:	mov	x20, #0x1000                	// #4096
  4500d8:	mov	x22, #0x1                   	// #1
  4500dc:	b	450114 <ferror@plt+0x4d3e4>
  4500e0:	add	x2, sp, #0x1, lsl #12
  4500e4:	add	x2, x2, #0x90
  4500e8:	mov	x1, x19
  4500ec:	add	x0, sp, #0x48
  4500f0:	bl	44fed4 <ferror@plt+0x4d1a4>
  4500f4:	b	450158 <ferror@plt+0x4d428>
  4500f8:	mov	w20, #0x1                   	// #1
  4500fc:	b	450168 <ferror@plt+0x4d438>
  450100:	add	x2, sp, #0x1, lsl #12
  450104:	add	x2, x2, #0x90
  450108:	mov	x1, x20
  45010c:	add	x0, sp, #0x48
  450110:	bl	44f3c0 <ferror@plt+0x4c690>
  450114:	mov	x19, #0x0                   	// #0
  450118:	mov	x3, x21
  45011c:	sub	x2, x20, x19
  450120:	mov	x1, x22
  450124:	add	x0, sp, #0x48
  450128:	add	x0, x0, x19
  45012c:	bl	402a60 <fread@plt>
  450130:	add	x19, x19, x0
  450134:	cmp	x19, #0xfff
  450138:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  45013c:	b.ne	450118 <ferror@plt+0x4d3e8>  // b.any
  450140:	cbnz	x0, 450100 <ferror@plt+0x4d3d0>
  450144:	mov	x0, x21
  450148:	bl	402d30 <ferror@plt>
  45014c:	mov	w20, w0
  450150:	cbnz	w0, 4500f8 <ferror@plt+0x4d3c8>
  450154:	cbnz	x19, 4500e0 <ferror@plt+0x4d3b0>
  450158:	mov	x1, x23
  45015c:	add	x0, sp, #0x1, lsl #12
  450160:	add	x0, x0, #0x90
  450164:	bl	44fe18 <ferror@plt+0x4d0e8>
  450168:	mov	w0, w20
  45016c:	ldp	x19, x20, [sp, #16]
  450170:	ldp	x21, x22, [sp, #32]
  450174:	ldr	x23, [sp, #48]
  450178:	ldp	x29, x30, [sp]
  45017c:	mov	x12, #0x1130                	// #4400
  450180:	add	sp, sp, x12
  450184:	ret
  450188:	stp	x29, x30, [sp, #-48]!
  45018c:	mov	x29, sp
  450190:	stp	x19, x20, [sp, #16]
  450194:	str	x21, [sp, #32]
  450198:	mov	x20, x0
  45019c:	cbz	x0, 450218 <ferror@plt+0x4d4e8>
  4501a0:	ldr	x0, [x0]
  4501a4:	cbz	x0, 450208 <ferror@plt+0x4d4d8>
  4501a8:	mov	x1, #0x1                   	// #1
  4501ac:	sub	x3, x20, #0x8
  4501b0:	mov	w0, w1
  4501b4:	add	x1, x1, #0x1
  4501b8:	ldr	x2, [x3, x1, lsl #3]
  4501bc:	cbnz	x2, 4501b0 <ferror@plt+0x4d480>
  4501c0:	add	w0, w0, #0x1
  4501c4:	sbfiz	x0, x0, #3, #32
  4501c8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4501cc:	mov	x21, x0
  4501d0:	ldr	x0, [x20]
  4501d4:	cbz	x0, 450210 <ferror@plt+0x4d4e0>
  4501d8:	mov	x19, #0x0                   	// #0
  4501dc:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  4501e0:	str	x0, [x21, x19]
  4501e4:	add	x19, x19, #0x8
  4501e8:	ldr	x0, [x20, x19]
  4501ec:	cbnz	x0, 4501dc <ferror@plt+0x4d4ac>
  4501f0:	str	xzr, [x21, x19]
  4501f4:	mov	x0, x21
  4501f8:	ldp	x19, x20, [sp, #16]
  4501fc:	ldr	x21, [sp, #32]
  450200:	ldp	x29, x30, [sp], #48
  450204:	ret
  450208:	mov	w0, #0x0                   	// #0
  45020c:	b	4501c0 <ferror@plt+0x4d490>
  450210:	mov	x19, #0x0                   	// #0
  450214:	b	4501f0 <ferror@plt+0x4d4c0>
  450218:	mov	x21, x0
  45021c:	b	4501f4 <ferror@plt+0x4d4c4>
  450220:	cbz	x0, 450260 <ferror@plt+0x4d530>
  450224:	stp	x29, x30, [sp, #-32]!
  450228:	mov	x29, sp
  45022c:	stp	x19, x20, [sp, #16]
  450230:	mov	x20, x0
  450234:	ldr	x0, [x0]
  450238:	cbz	x0, 45024c <ferror@plt+0x4d51c>
  45023c:	mov	x19, x20
  450240:	bl	402a90 <free@plt>
  450244:	ldr	x0, [x19, #8]!
  450248:	cbnz	x0, 450240 <ferror@plt+0x4d510>
  45024c:	mov	x0, x20
  450250:	bl	402a90 <free@plt>
  450254:	ldp	x19, x20, [sp, #16]
  450258:	ldp	x29, x30, [sp], #32
  45025c:	ret
  450260:	ret
  450264:	stp	x29, x30, [sp, #-112]!
  450268:	mov	x29, sp
  45026c:	stp	x19, x20, [sp, #16]
  450270:	stp	x23, x24, [sp, #48]
  450274:	mov	x19, x0
  450278:	mov	x24, x0
  45027c:	cbz	x0, 450448 <ferror@plt+0x4d718>
  450280:	stp	x21, x22, [sp, #32]
  450284:	stp	x25, x26, [sp, #64]
  450288:	stp	x27, x28, [sp, #80]
  45028c:	bl	402680 <strlen@plt>
  450290:	add	x0, x0, #0x1
  450294:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  450298:	str	x0, [sp, #104]
  45029c:	mov	x25, #0x0                   	// #0
  4502a0:	mov	x24, #0x0                   	// #0
  4502a4:	mov	w26, #0x0                   	// #0
  4502a8:	mov	w27, #0x0                   	// #0
  4502ac:	mov	w21, #0x0                   	// #0
  4502b0:	mov	w23, #0x0                   	// #0
  4502b4:	mov	w22, #0x0                   	// #0
  4502b8:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4502bc:	add	x20, x20, #0x28
  4502c0:	mov	x28, x0
  4502c4:	b	450348 <ferror@plt+0x4d618>
  4502c8:	mov	x0, #0x40                  	// #64
  4502cc:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4502d0:	mov	x24, x0
  4502d4:	mov	w26, #0x8                   	// #8
  4502d8:	b	450388 <ferror@plt+0x4d658>
  4502dc:	cbz	w21, 4503a0 <ferror@plt+0x4d670>
  4502e0:	strb	w0, [x1], #1
  4502e4:	mov	w21, w3
  4502e8:	ldrb	w0, [x19, #1]!
  4502ec:	cbz	w0, 450310 <ferror@plt+0x4d5e0>
  4502f0:	ldrh	w2, [x20, w0, sxtw #1]
  4502f4:	tbz	w2, #6, 4502dc <ferror@plt+0x4d5ac>
  4502f8:	orr	w2, w22, w23
  4502fc:	orr	w2, w2, w21
  450300:	cbnz	w2, 4502dc <ferror@plt+0x4d5ac>
  450304:	mov	w21, w2
  450308:	mov	w23, w2
  45030c:	mov	w22, w2
  450310:	strb	wzr, [x1]
  450314:	mov	x0, x28
  450318:	bl	454e60 <_obstack_memory_used@@Base+0xac0>
  45031c:	str	x0, [x24, x25]
  450320:	add	w27, w27, #0x1
  450324:	add	x25, x25, #0x8
  450328:	str	xzr, [x24, x25]
  45032c:	ldrb	w0, [x19]
  450330:	ldrh	w1, [x20, w0, sxtw #1]
  450334:	tbz	w1, #6, 450344 <ferror@plt+0x4d614>
  450338:	ldrb	w0, [x19, #1]!
  45033c:	ldrh	w1, [x20, w0, sxtw #1]
  450340:	tbnz	w1, #6, 450338 <ferror@plt+0x4d608>
  450344:	cbz	w0, 450434 <ferror@plt+0x4d704>
  450348:	ldrb	w0, [x19]
  45034c:	ldrh	w0, [x20, x0, lsl #1]
  450350:	tbz	w0, #6, 450360 <ferror@plt+0x4d630>
  450354:	ldrb	w0, [x19, #1]!
  450358:	ldrh	w0, [x20, x0, lsl #1]
  45035c:	tbnz	w0, #6, 450354 <ferror@plt+0x4d624>
  450360:	cbz	w26, 450370 <ferror@plt+0x4d640>
  450364:	sub	w0, w26, #0x1
  450368:	cmp	w0, w27
  45036c:	b.gt	45038c <ferror@plt+0x4d65c>
  450370:	cbz	x24, 4502c8 <ferror@plt+0x4d598>
  450374:	lsl	w26, w26, #1
  450378:	sbfiz	x1, x26, #3, #32
  45037c:	mov	x0, x24
  450380:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  450384:	mov	x24, x0
  450388:	str	xzr, [x24, x25]
  45038c:	ldrb	w0, [x19]
  450390:	cbz	w0, 45042c <ferror@plt+0x4d6fc>
  450394:	mov	x1, x28
  450398:	mov	w3, #0x0                   	// #0
  45039c:	b	4502f0 <ferror@plt+0x4d5c0>
  4503a0:	cmp	w0, #0x5c
  4503a4:	b.eq	4503f4 <ferror@plt+0x4d6c4>  // b.none
  4503a8:	cbz	w22, 4503bc <ferror@plt+0x4d68c>
  4503ac:	cmp	w0, #0x27
  4503b0:	b.eq	4503fc <ferror@plt+0x4d6cc>  // b.none
  4503b4:	strb	w0, [x1], #1
  4503b8:	b	4502e8 <ferror@plt+0x4d5b8>
  4503bc:	cbz	w23, 4503d4 <ferror@plt+0x4d6a4>
  4503c0:	cmp	w0, #0x22
  4503c4:	b.eq	450404 <ferror@plt+0x4d6d4>  // b.none
  4503c8:	strb	w0, [x1], #1
  4503cc:	mov	w21, w22
  4503d0:	b	4502e8 <ferror@plt+0x4d5b8>
  4503d4:	cmp	w0, #0x27
  4503d8:	b.eq	450410 <ferror@plt+0x4d6e0>  // b.none
  4503dc:	cmp	w0, #0x22
  4503e0:	b.eq	45041c <ferror@plt+0x4d6ec>  // b.none
  4503e4:	strb	w0, [x1], #1
  4503e8:	mov	w21, w23
  4503ec:	mov	w22, w23
  4503f0:	b	4502e8 <ferror@plt+0x4d5b8>
  4503f4:	mov	w21, #0x1                   	// #1
  4503f8:	b	4502e8 <ferror@plt+0x4d5b8>
  4503fc:	mov	w22, w21
  450400:	b	4502e8 <ferror@plt+0x4d5b8>
  450404:	mov	w21, w22
  450408:	mov	w23, w22
  45040c:	b	4502e8 <ferror@plt+0x4d5b8>
  450410:	mov	w21, w23
  450414:	mov	w22, #0x1                   	// #1
  450418:	b	4502e8 <ferror@plt+0x4d5b8>
  45041c:	mov	w21, w23
  450420:	mov	w22, w23
  450424:	mov	w23, #0x1                   	// #1
  450428:	b	4502e8 <ferror@plt+0x4d5b8>
  45042c:	mov	x1, x28
  450430:	b	450310 <ferror@plt+0x4d5e0>
  450434:	ldr	x0, [sp, #104]
  450438:	bl	402a90 <free@plt>
  45043c:	ldp	x21, x22, [sp, #32]
  450440:	ldp	x25, x26, [sp, #64]
  450444:	ldp	x27, x28, [sp, #80]
  450448:	mov	x0, x24
  45044c:	ldp	x19, x20, [sp, #16]
  450450:	ldp	x23, x24, [sp, #48]
  450454:	ldp	x29, x30, [sp], #112
  450458:	ret
  45045c:	cbz	x1, 450528 <ferror@plt+0x4d7f8>
  450460:	stp	x29, x30, [sp, #-80]!
  450464:	mov	x29, sp
  450468:	stp	x19, x20, [sp, #16]
  45046c:	stp	x25, x26, [sp, #64]
  450470:	mov	x26, x0
  450474:	mov	x20, x1
  450478:	ldr	x19, [x0]
  45047c:	cbz	x19, 4504d0 <ferror@plt+0x4d7a0>
  450480:	stp	x21, x22, [sp, #32]
  450484:	stp	x23, x24, [sp, #48]
  450488:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45048c:	add	x22, x22, #0x28
  450490:	mov	w23, #0x5c                  	// #92
  450494:	mov	w25, #0x27                  	// #39
  450498:	ldrb	w2, [x19]
  45049c:	mov	w24, #0x22                  	// #34
  4504a0:	cbnz	w2, 450508 <ferror@plt+0x4d7d8>
  4504a4:	mov	x1, x20
  4504a8:	mov	w0, #0xa                   	// #10
  4504ac:	bl	402750 <fputc@plt>
  4504b0:	cmn	w0, #0x1
  4504b4:	b.eq	45055c <ferror@plt+0x4d82c>  // b.none
  4504b8:	ldr	x19, [x26, #8]!
  4504bc:	cbnz	x19, 450498 <ferror@plt+0x4d768>
  4504c0:	mov	w0, #0x0                   	// #0
  4504c4:	ldp	x21, x22, [sp, #32]
  4504c8:	ldp	x23, x24, [sp, #48]
  4504cc:	b	45054c <ferror@plt+0x4d81c>
  4504d0:	mov	w0, #0x0                   	// #0
  4504d4:	b	45054c <ferror@plt+0x4d81c>
  4504d8:	mov	x1, x20
  4504dc:	mov	w0, w23
  4504e0:	bl	402750 <fputc@plt>
  4504e4:	cmn	w0, #0x1
  4504e8:	b.eq	450530 <ferror@plt+0x4d800>  // b.none
  4504ec:	mov	x1, x20
  4504f0:	mov	w0, w21
  4504f4:	bl	402750 <fputc@plt>
  4504f8:	cmn	w0, #0x1
  4504fc:	b.eq	450540 <ferror@plt+0x4d810>  // b.none
  450500:	ldrb	w2, [x19, #1]!
  450504:	cbz	w2, 4504a4 <ferror@plt+0x4d774>
  450508:	mov	w21, w2
  45050c:	ldrh	w1, [x22, w2, sxtw #1]
  450510:	tbnz	w1, #6, 4504d8 <ferror@plt+0x4d7a8>
  450514:	cmp	w2, #0x5c
  450518:	ccmp	w2, w25, #0x4, ne  // ne = any
  45051c:	ccmp	w2, w24, #0x4, ne  // ne = any
  450520:	b.eq	4504d8 <ferror@plt+0x4d7a8>  // b.none
  450524:	b	4504ec <ferror@plt+0x4d7bc>
  450528:	mov	w0, #0x1                   	// #1
  45052c:	ret
  450530:	mov	w0, #0x1                   	// #1
  450534:	ldp	x21, x22, [sp, #32]
  450538:	ldp	x23, x24, [sp, #48]
  45053c:	b	45054c <ferror@plt+0x4d81c>
  450540:	mov	w0, #0x1                   	// #1
  450544:	ldp	x21, x22, [sp, #32]
  450548:	ldp	x23, x24, [sp, #48]
  45054c:	ldp	x19, x20, [sp, #16]
  450550:	ldp	x25, x26, [sp, #64]
  450554:	ldp	x29, x30, [sp], #80
  450558:	ret
  45055c:	mov	w0, #0x1                   	// #1
  450560:	ldp	x21, x22, [sp, #32]
  450564:	ldp	x23, x24, [sp, #48]
  450568:	b	45054c <ferror@plt+0x4d81c>
  45056c:	stp	x29, x30, [sp, #-272]!
  450570:	mov	x29, sp
  450574:	stp	x25, x26, [sp, #64]
  450578:	mov	x26, x0
  45057c:	ldr	x0, [x1]
  450580:	str	x0, [sp, #136]
  450584:	ldr	w0, [x26]
  450588:	cmp	w0, #0x1
  45058c:	b.le	450848 <ferror@plt+0x4db18>
  450590:	stp	x19, x20, [sp, #16]
  450594:	stp	x21, x22, [sp, #32]
  450598:	stp	x23, x24, [sp, #48]
  45059c:	stp	x27, x28, [sp, #80]
  4505a0:	mov	x25, x1
  4505a4:	mov	w19, #0x1                   	// #1
  4505a8:	mov	w23, #0x7d0                 	// #2000
  4505ac:	mov	w22, #0x0                   	// #0
  4505b0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x23c60>
  4505b4:	add	x0, x0, #0xa48
  4505b8:	str	x0, [sp, #104]
  4505bc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4505c0:	add	x0, x0, #0x28
  4505c4:	str	x0, [sp, #112]
  4505c8:	b	450714 <ferror@plt+0x4d9e4>
  4505cc:	ldr	x2, [x0]
  4505d0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4505d4:	add	x1, x1, #0x680
  4505d8:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  4505dc:	ldr	x0, [x0, #1424]
  4505e0:	bl	402ce0 <fprintf@plt>
  4505e4:	mov	w0, #0x1                   	// #1
  4505e8:	bl	454c58 <_obstack_memory_used@@Base+0x8b8>
  4505ec:	ldr	x0, [x25]
  4505f0:	ldr	x2, [x0]
  4505f4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4505f8:	add	x1, x1, #0x6b0
  4505fc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  450600:	ldr	x0, [x0, #1424]
  450604:	bl	402ce0 <fprintf@plt>
  450608:	mov	w0, #0x1                   	// #1
  45060c:	bl	454c58 <_obstack_memory_used@@Base+0x8b8>
  450610:	cbz	w0, 45080c <ferror@plt+0x4dadc>
  450614:	ldr	x0, [sp, #128]
  450618:	bl	450264 <ferror@plt+0x4d534>
  45061c:	mov	x28, x0
  450620:	ldr	x0, [x25]
  450624:	ldr	x1, [sp, #136]
  450628:	cmp	x0, x1
  45062c:	b.eq	4506ec <ferror@plt+0x4d9bc>  // b.none
  450630:	ldr	x0, [x28]
  450634:	cbz	x0, 4506f4 <ferror@plt+0x4d9c4>
  450638:	mov	x24, #0x0                   	// #0
  45063c:	add	x24, x24, #0x1
  450640:	lsl	x0, x24, #3
  450644:	str	x0, [sp, #120]
  450648:	ldr	x0, [x28, x24, lsl #3]
  45064c:	cbnz	x0, 45063c <ferror@plt+0x4d90c>
  450650:	ldr	x0, [x25]
  450654:	ldr	x0, [x0, x21, lsl #3]
  450658:	bl	402a90 <free@plt>
  45065c:	ldrsw	x1, [x26]
  450660:	add	x1, x1, #0x1
  450664:	add	x1, x1, x24
  450668:	lsl	x1, x1, #3
  45066c:	ldr	x0, [x25]
  450670:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  450674:	str	x0, [x25]
  450678:	ldr	w2, [x26]
  45067c:	sub	w2, w2, w19
  450680:	add	x1, x27, #0x8
  450684:	add	x21, x21, x24
  450688:	sbfiz	x2, x2, #3, #32
  45068c:	add	x1, x0, x1
  450690:	add	x0, x0, x21, lsl #3
  450694:	bl	402630 <memmove@plt>
  450698:	ldr	x0, [x25]
  45069c:	ldr	x2, [sp, #120]
  4506a0:	mov	x1, x28
  4506a4:	add	x0, x0, x27
  4506a8:	bl	402620 <memcpy@plt>
  4506ac:	ldr	w0, [x26]
  4506b0:	sub	w0, w0, #0x1
  4506b4:	add	w24, w0, w24
  4506b8:	str	w24, [x26]
  4506bc:	mov	x0, x28
  4506c0:	bl	402a90 <free@plt>
  4506c4:	ldr	x0, [sp, #128]
  4506c8:	bl	402a90 <free@plt>
  4506cc:	mov	w19, w22
  4506d0:	mov	x0, x20
  4506d4:	bl	4027a0 <fclose@plt>
  4506d8:	mov	w22, w19
  4506dc:	b	450704 <ferror@plt+0x4d9d4>
  4506e0:	mov	x24, #0x0                   	// #0
  4506e4:	str	xzr, [sp, #120]
  4506e8:	b	450650 <ferror@plt+0x4d920>
  4506ec:	mov	x0, x1
  4506f0:	b	45082c <ferror@plt+0x4dafc>
  4506f4:	mov	x24, #0x0                   	// #0
  4506f8:	str	xzr, [sp, #120]
  4506fc:	b	450650 <ferror@plt+0x4d920>
  450700:	mov	w22, w19
  450704:	add	w19, w22, #0x1
  450708:	ldr	w0, [x26]
  45070c:	cmp	w0, w19
  450710:	b.le	450838 <ferror@plt+0x4db08>
  450714:	ldr	x0, [x25]
  450718:	sxtw	x21, w19
  45071c:	sbfiz	x27, x19, #3, #32
  450720:	ldr	x20, [x0, x21, lsl #3]
  450724:	ldrb	w1, [x20]
  450728:	cmp	w1, #0x40
  45072c:	b.ne	450700 <ferror@plt+0x4d9d0>  // b.any
  450730:	subs	w23, w23, #0x1
  450734:	b.eq	4505cc <ferror@plt+0x4d89c>  // b.none
  450738:	add	x20, x20, #0x1
  45073c:	add	x2, sp, #0x90
  450740:	mov	x1, x20
  450744:	mov	w0, #0x0                   	// #0
  450748:	bl	402c70 <__xstat@plt>
  45074c:	tbnz	w0, #31, 450700 <ferror@plt+0x4d9d0>
  450750:	ldr	w0, [sp, #160]
  450754:	and	w0, w0, #0xf000
  450758:	cmp	w0, #0x4, lsl #12
  45075c:	b.eq	4505ec <ferror@plt+0x4d8bc>  // b.none
  450760:	ldr	x1, [sp, #104]
  450764:	mov	x0, x20
  450768:	bl	4027d0 <fopen@plt>
  45076c:	mov	x20, x0
  450770:	cbz	x0, 450700 <ferror@plt+0x4d9d0>
  450774:	mov	w2, #0x2                   	// #2
  450778:	mov	x1, #0x0                   	// #0
  45077c:	bl	402980 <fseek@plt>
  450780:	cmn	w0, #0x1
  450784:	b.eq	4506d0 <ferror@plt+0x4d9a0>  // b.none
  450788:	mov	x0, x20
  45078c:	bl	402710 <ftell@plt>
  450790:	mov	x24, x0
  450794:	cmn	x0, #0x1
  450798:	b.eq	4506d0 <ferror@plt+0x4d9a0>  // b.none
  45079c:	mov	w2, #0x0                   	// #0
  4507a0:	mov	x1, #0x0                   	// #0
  4507a4:	mov	x0, x20
  4507a8:	bl	402980 <fseek@plt>
  4507ac:	cmn	w0, #0x1
  4507b0:	b.eq	4506d0 <ferror@plt+0x4d9a0>  // b.none
  4507b4:	add	x0, x24, #0x1
  4507b8:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  4507bc:	str	x0, [sp, #128]
  4507c0:	mov	x3, x20
  4507c4:	mov	x2, x24
  4507c8:	mov	x1, #0x1                   	// #1
  4507cc:	bl	402a60 <fread@plt>
  4507d0:	mov	x28, x0
  4507d4:	cmp	x24, x0
  4507d8:	b.eq	4507e8 <ferror@plt+0x4dab8>  // b.none
  4507dc:	mov	x0, x20
  4507e0:	bl	402d30 <ferror@plt>
  4507e4:	cbnz	w0, 4506d0 <ferror@plt+0x4d9a0>
  4507e8:	ldr	x1, [sp, #128]
  4507ec:	strb	wzr, [x1, x28]
  4507f0:	ldrb	w0, [x1]
  4507f4:	cbz	w0, 45080c <ferror@plt+0x4dadc>
  4507f8:	ldr	x2, [sp, #112]
  4507fc:	ldrh	w2, [x2, w0, sxtw #1]
  450800:	tbz	w2, #6, 450610 <ferror@plt+0x4d8e0>
  450804:	ldrb	w0, [x1, #1]!
  450808:	cbnz	w0, 4507f8 <ferror@plt+0x4dac8>
  45080c:	mov	x0, #0x8                   	// #8
  450810:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  450814:	mov	x28, x0
  450818:	str	xzr, [x0]
  45081c:	ldr	x0, [x25]
  450820:	ldr	x1, [sp, #136]
  450824:	cmp	x1, x0
  450828:	b.ne	4506e0 <ferror@plt+0x4d9b0>  // b.any
  45082c:	bl	450188 <ferror@plt+0x4d458>
  450830:	str	x0, [x25]
  450834:	b	450630 <ferror@plt+0x4d900>
  450838:	ldp	x19, x20, [sp, #16]
  45083c:	ldp	x21, x22, [sp, #32]
  450840:	ldp	x23, x24, [sp, #48]
  450844:	ldp	x27, x28, [sp, #80]
  450848:	ldp	x25, x26, [sp, #64]
  45084c:	ldp	x29, x30, [sp], #272
  450850:	ret
  450854:	mov	x1, x0
  450858:	cbz	x0, 450884 <ferror@plt+0x4db54>
  45085c:	ldr	x2, [x0]
  450860:	mov	w0, #0x0                   	// #0
  450864:	cbz	x2, 450880 <ferror@plt+0x4db50>
  450868:	mov	x2, #0x1                   	// #1
  45086c:	sub	x1, x1, #0x8
  450870:	mov	w0, w2
  450874:	add	x2, x2, #0x1
  450878:	ldr	x3, [x1, x2, lsl #3]
  45087c:	cbnz	x3, 450870 <ferror@plt+0x4db40>
  450880:	ret
  450884:	mov	w0, #0x0                   	// #0
  450888:	b	450880 <ferror@plt+0x4db50>
  45088c:	ldr	x2, [x0, #8]
  450890:	ldr	x1, [x0]
  450894:	sub	x0, x2, x1
  450898:	cmp	x2, x1
  45089c:	csel	w0, w0, wzr, ne  // ne = any
  4508a0:	ret
  4508a4:	stp	x29, x30, [sp, #-32]!
  4508a8:	mov	x29, sp
  4508ac:	stp	x19, x20, [sp, #16]
  4508b0:	mov	x20, x0
  4508b4:	mov	w19, w1
  4508b8:	bl	45088c <ferror@plt+0x4db5c>
  4508bc:	cmp	w19, w0
  4508c0:	b.mi	4508d0 <ferror@plt+0x4dba0>  // b.first
  4508c4:	ldp	x19, x20, [sp, #16]
  4508c8:	ldp	x29, x30, [sp], #32
  4508cc:	ret
  4508d0:	ldr	x1, [x20]
  4508d4:	add	x19, x1, w19, sxtw
  4508d8:	str	x19, [x20, #8]
  4508dc:	b	4508c4 <ferror@plt+0x4db94>
  4508e0:	cbz	x0, 45094c <ferror@plt+0x4dc1c>
  4508e4:	ldrb	w3, [x0]
  4508e8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4508ec:	add	x2, x2, #0x28
  4508f0:	ldrh	w2, [x2, x3, lsl #1]
  4508f4:	tbz	w2, #2, 450950 <ferror@plt+0x4dc20>
  4508f8:	str	xzr, [x1]
  4508fc:	ldrb	w3, [x0]
  450900:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  450904:	add	x2, x2, #0x28
  450908:	ldrh	w2, [x2, w3, sxtw #1]
  45090c:	tbz	w2, #2, 450958 <ferror@plt+0x4dc28>
  450910:	adrp	x5, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  450914:	add	x5, x5, #0x28
  450918:	ldr	x2, [x1]
  45091c:	add	x2, x2, x2, lsl #2
  450920:	lsl	x2, x2, #1
  450924:	str	x2, [x1]
  450928:	ldrb	w3, [x0]
  45092c:	sub	w3, w3, #0x30
  450930:	add	x2, x2, w3, sxtw
  450934:	str	x2, [x1]
  450938:	ldrb	w3, [x0, #1]!
  45093c:	ldrh	w4, [x5, w3, sxtw #1]
  450940:	tbnz	w4, #2, 450918 <ferror@plt+0x4dbe8>
  450944:	cbz	w3, 45095c <ferror@plt+0x4dc2c>
  450948:	tbnz	x2, #63, 45095c <ferror@plt+0x4dc2c>
  45094c:	ret
  450950:	mov	x0, #0x0                   	// #0
  450954:	b	45094c <ferror@plt+0x4dc1c>
  450958:	cbnz	w3, 45094c <ferror@plt+0x4dc1c>
  45095c:	mov	x0, #0x0                   	// #0
  450960:	b	45094c <ferror@plt+0x4dc1c>
  450964:	ldrb	w0, [x0]
  450968:	sub	w0, w0, #0x46
  45096c:	and	w0, w0, #0xff
  450970:	cmp	w0, #0x13
  450974:	b.hi	450990 <ferror@plt+0x4dc60>  // b.pmore
  450978:	mov	x1, #0x1                   	// #1
  45097c:	lsl	x0, x1, x0
  450980:	add	x1, x1, #0xb9, lsl #12
  450984:	tst	x0, x1
  450988:	cset	w0, ne  // ne = any
  45098c:	b	450994 <ferror@plt+0x4dc64>
  450990:	mov	w0, #0x0                   	// #0
  450994:	ret
  450998:	stp	x29, x30, [sp, #-32]!
  45099c:	mov	x29, sp
  4509a0:	str	x19, [sp, #16]
  4509a4:	mov	x19, x0
  4509a8:	ldr	x0, [x0]
  4509ac:	cbz	x0, 4509c0 <ferror@plt+0x4dc90>
  4509b0:	bl	402a90 <free@plt>
  4509b4:	str	xzr, [x19, #8]
  4509b8:	str	xzr, [x19, #16]
  4509bc:	str	xzr, [x19]
  4509c0:	ldr	x19, [sp, #16]
  4509c4:	ldp	x29, x30, [sp], #32
  4509c8:	ret
  4509cc:	stp	x29, x30, [sp, #-48]!
  4509d0:	mov	x29, sp
  4509d4:	stp	x19, x20, [sp, #16]
  4509d8:	mov	x20, x0
  4509dc:	ldr	x0, [x0]
  4509e0:	cbz	x0, 450a04 <ferror@plt+0x4dcd4>
  4509e4:	ldr	x3, [x20, #8]
  4509e8:	ldr	x2, [x20, #16]
  4509ec:	sub	x2, x2, x3
  4509f0:	cmp	x2, w1, sxtw
  4509f4:	b.lt	450a30 <ferror@plt+0x4dd00>  // b.tstop
  4509f8:	ldp	x19, x20, [sp, #16]
  4509fc:	ldp	x29, x30, [sp], #48
  450a00:	ret
  450a04:	cmp	w1, #0x20
  450a08:	mov	w19, #0x20                  	// #32
  450a0c:	csel	w1, w1, w19, ge  // ge = tcont
  450a10:	sxtw	x19, w1
  450a14:	mov	x0, x19
  450a18:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  450a1c:	str	x0, [x20]
  450a20:	str	x0, [x20, #8]
  450a24:	add	x0, x0, x19
  450a28:	str	x0, [x20, #16]
  450a2c:	b	4509f8 <ferror@plt+0x4dcc8>
  450a30:	str	x21, [sp, #32]
  450a34:	sub	x21, x3, x0
  450a38:	add	w19, w1, w21
  450a3c:	lsl	w19, w19, #1
  450a40:	sxtw	x19, w19
  450a44:	mov	x1, x19
  450a48:	bl	454db8 <_obstack_memory_used@@Base+0xa18>
  450a4c:	str	x0, [x20]
  450a50:	add	x3, x0, w21, sxtw
  450a54:	str	x3, [x20, #8]
  450a58:	add	x0, x0, x19
  450a5c:	str	x0, [x20, #16]
  450a60:	ldr	x21, [sp, #32]
  450a64:	b	4509f8 <ferror@plt+0x4dcc8>
  450a68:	stp	x29, x30, [sp, #-48]!
  450a6c:	mov	x29, sp
  450a70:	stp	x19, x20, [sp, #16]
  450a74:	str	x21, [sp, #32]
  450a78:	mov	x20, x0
  450a7c:	mov	x21, x1
  450a80:	mov	x0, x1
  450a84:	bl	402680 <strlen@plt>
  450a88:	mov	x19, x0
  450a8c:	mov	w1, w0
  450a90:	mov	x0, x20
  450a94:	bl	4509cc <ferror@plt+0x4dc9c>
  450a98:	sxtw	x19, w19
  450a9c:	mov	x2, x19
  450aa0:	mov	x1, x21
  450aa4:	ldr	x0, [x20, #8]
  450aa8:	bl	402620 <memcpy@plt>
  450aac:	ldr	x0, [x20, #8]
  450ab0:	add	x19, x0, x19
  450ab4:	str	x19, [x20, #8]
  450ab8:	ldp	x19, x20, [sp, #16]
  450abc:	ldr	x21, [sp, #32]
  450ac0:	ldp	x29, x30, [sp], #48
  450ac4:	ret
  450ac8:	stp	x29, x30, [sp, #-48]!
  450acc:	mov	x29, sp
  450ad0:	stp	x19, x20, [sp, #16]
  450ad4:	str	x21, [sp, #32]
  450ad8:	mov	x19, x1
  450adc:	cbz	x1, 450b94 <ferror@plt+0x4de64>
  450ae0:	mov	x20, x0
  450ae4:	ldrb	w1, [x1]
  450ae8:	cbz	w1, 450b9c <ferror@plt+0x4de6c>
  450aec:	cmp	w1, #0x78
  450af0:	b.eq	450b4c <ferror@plt+0x4de1c>  // b.none
  450af4:	b.hi	450b2c <ferror@plt+0x4ddfc>  // b.pmore
  450af8:	cmp	w1, #0x4e
  450afc:	b.eq	450b60 <ferror@plt+0x4de30>  // b.none
  450b00:	mov	x21, x19
  450b04:	cmp	w1, #0x4f
  450b08:	b.ne	450ba0 <ferror@plt+0x4de70>  // b.any
  450b0c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450b10:	add	x1, x1, #0x6f0
  450b14:	bl	450a68 <ferror@plt+0x4dd38>
  450b18:	add	x1, x19, #0x1
  450b1c:	mov	x0, x20
  450b20:	bl	450ac8 <ferror@plt+0x4dd98>
  450b24:	mov	x21, x0
  450b28:	b	450ba0 <ferror@plt+0x4de70>
  450b2c:	mov	x21, x19
  450b30:	cmp	w1, #0x79
  450b34:	b.ne	450ba0 <ferror@plt+0x4de70>  // b.any
  450b38:	add	x21, x19, #0x1
  450b3c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450b40:	add	x1, x1, #0x6e0
  450b44:	bl	450a68 <ferror@plt+0x4dd38>
  450b48:	b	450ba0 <ferror@plt+0x4de70>
  450b4c:	add	x21, x19, #0x1
  450b50:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  450b54:	add	x1, x1, #0xff8
  450b58:	bl	450a68 <ferror@plt+0x4dd38>
  450b5c:	b	450ba0 <ferror@plt+0x4de70>
  450b60:	ldrb	w0, [x19, #1]
  450b64:	mov	x21, #0x0                   	// #0
  450b68:	cmp	w0, #0x67
  450b6c:	b.ne	450ba0 <ferror@plt+0x4de70>  // b.any
  450b70:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450b74:	add	x1, x1, #0x6f8
  450b78:	mov	x0, x20
  450b7c:	bl	450a68 <ferror@plt+0x4dd38>
  450b80:	add	x1, x19, #0x2
  450b84:	mov	x0, x20
  450b88:	bl	450ac8 <ferror@plt+0x4dd98>
  450b8c:	mov	x21, x0
  450b90:	b	450ba0 <ferror@plt+0x4de70>
  450b94:	mov	x21, x1
  450b98:	b	450ba0 <ferror@plt+0x4de70>
  450b9c:	mov	x21, #0x0                   	// #0
  450ba0:	mov	x0, x21
  450ba4:	ldp	x19, x20, [sp, #16]
  450ba8:	ldr	x21, [sp, #32]
  450bac:	ldp	x29, x30, [sp], #48
  450bb0:	ret
  450bb4:	stp	x29, x30, [sp, #-32]!
  450bb8:	mov	x29, sp
  450bbc:	str	x19, [sp, #16]
  450bc0:	cbz	x1, 450c68 <ferror@plt+0x4df38>
  450bc4:	ldrb	w2, [x1]
  450bc8:	cbz	w2, 450c70 <ferror@plt+0x4df40>
  450bcc:	cmp	w2, #0x56
  450bd0:	b.eq	450c40 <ferror@plt+0x4df10>  // b.none
  450bd4:	b.hi	450c04 <ferror@plt+0x4ded4>  // b.pmore
  450bd8:	cmp	w2, #0x52
  450bdc:	b.eq	450c54 <ferror@plt+0x4df24>  // b.none
  450be0:	cmp	w2, #0x46
  450be4:	csinc	x19, xzr, x1, ne  // ne = any
  450be8:	cmp	w2, #0x55
  450bec:	b.ne	450c74 <ferror@plt+0x4df44>  // b.any
  450bf0:	add	x19, x1, #0x1
  450bf4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450bf8:	add	x1, x1, #0x700
  450bfc:	bl	450a68 <ferror@plt+0x4dd38>
  450c00:	b	450c74 <ferror@plt+0x4df44>
  450c04:	cmp	w2, #0x57
  450c08:	b.eq	450c2c <ferror@plt+0x4defc>  // b.none
  450c0c:	mov	x19, #0x0                   	// #0
  450c10:	cmp	w2, #0x59
  450c14:	b.ne	450c74 <ferror@plt+0x4df44>  // b.any
  450c18:	add	x19, x1, #0x1
  450c1c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450c20:	add	x1, x1, #0x748
  450c24:	bl	450a68 <ferror@plt+0x4dd38>
  450c28:	b	450c74 <ferror@plt+0x4df44>
  450c2c:	add	x19, x1, #0x1
  450c30:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450c34:	add	x1, x1, #0x710
  450c38:	bl	450a68 <ferror@plt+0x4dd38>
  450c3c:	b	450c74 <ferror@plt+0x4df44>
  450c40:	add	x19, x1, #0x1
  450c44:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450c48:	add	x1, x1, #0x728
  450c4c:	bl	450a68 <ferror@plt+0x4dd38>
  450c50:	b	450c74 <ferror@plt+0x4df44>
  450c54:	add	x19, x1, #0x1
  450c58:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450c5c:	add	x1, x1, #0x738
  450c60:	bl	450a68 <ferror@plt+0x4dd38>
  450c64:	b	450c74 <ferror@plt+0x4df44>
  450c68:	mov	x19, x1
  450c6c:	b	450c74 <ferror@plt+0x4df44>
  450c70:	mov	x19, #0x0                   	// #0
  450c74:	mov	x0, x19
  450c78:	ldr	x19, [sp, #16]
  450c7c:	ldp	x29, x30, [sp], #32
  450c80:	ret
  450c84:	stp	x29, x30, [sp, #-64]!
  450c88:	mov	x29, sp
  450c8c:	stp	x19, x20, [sp, #16]
  450c90:	mov	x19, x1
  450c94:	cbz	x1, 450e50 <ferror@plt+0x4e120>
  450c98:	stp	x21, x22, [sp, #32]
  450c9c:	mov	x21, x0
  450ca0:	ldrb	w0, [x1]
  450ca4:	cbz	w0, 450e58 <ferror@plt+0x4e128>
  450ca8:	cmp	w0, #0x4e
  450cac:	b.ne	450e44 <ferror@plt+0x4e114>  // b.any
  450cb0:	stp	x23, x24, [sp, #48]
  450cb4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450cb8:	add	x23, x1, #0x7a0
  450cbc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450cc0:	add	x22, x1, #0x7b0
  450cc4:	adrp	x24, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450cc8:	b	450da0 <ferror@plt+0x4e070>
  450ccc:	cmp	w1, #0x61
  450cd0:	b.eq	450d7c <ferror@plt+0x4e04c>  // b.none
  450cd4:	cmp	w1, #0x62
  450cd8:	b.ne	450cf4 <ferror@plt+0x4dfc4>  // b.any
  450cdc:	add	x20, x19, #0x2
  450ce0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450ce4:	add	x1, x1, #0x768
  450ce8:	mov	x0, x21
  450cec:	bl	450a68 <ferror@plt+0x4dd38>
  450cf0:	b	450d90 <ferror@plt+0x4e060>
  450cf4:	mov	x20, #0x0                   	// #0
  450cf8:	ldp	x21, x22, [sp, #32]
  450cfc:	ldp	x23, x24, [sp, #48]
  450d00:	b	450e6c <ferror@plt+0x4e13c>
  450d04:	cmp	w1, #0x6a
  450d08:	b.eq	450e24 <ferror@plt+0x4e0f4>  // b.none
  450d0c:	b.ls	450d34 <ferror@plt+0x4e004>  // b.plast
  450d10:	cmp	w1, #0x6b
  450d14:	b.eq	450e7c <ferror@plt+0x4e14c>  // b.none
  450d18:	cmp	w1, #0x6c
  450d1c:	b.ne	450d6c <ferror@plt+0x4e03c>  // b.any
  450d20:	add	x20, x19, #0x2
  450d24:	add	x1, x24, #0x7b8
  450d28:	mov	x0, x21
  450d2c:	bl	450a68 <ferror@plt+0x4dd38>
  450d30:	b	450d90 <ferror@plt+0x4e060>
  450d34:	cmp	w1, #0x68
  450d38:	b.ls	450e64 <ferror@plt+0x4e134>  // b.plast
  450d3c:	cmp	w1, #0x69
  450d40:	b.ne	450d5c <ferror@plt+0x4e02c>  // b.any
  450d44:	add	x20, x19, #0x2
  450d48:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450d4c:	add	x1, x1, #0x7a8
  450d50:	mov	x0, x21
  450d54:	bl	450a68 <ferror@plt+0x4dd38>
  450d58:	b	450d90 <ferror@plt+0x4e060>
  450d5c:	mov	x20, #0x0                   	// #0
  450d60:	ldp	x21, x22, [sp, #32]
  450d64:	ldp	x23, x24, [sp, #48]
  450d68:	b	450e6c <ferror@plt+0x4e13c>
  450d6c:	mov	x20, #0x0                   	// #0
  450d70:	ldp	x21, x22, [sp, #32]
  450d74:	ldp	x23, x24, [sp, #48]
  450d78:	b	450e6c <ferror@plt+0x4e13c>
  450d7c:	add	x20, x19, #0x2
  450d80:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450d84:	add	x1, x1, #0x760
  450d88:	mov	x0, x21
  450d8c:	bl	450a68 <ferror@plt+0x4dd38>
  450d90:	add	x19, x19, #0x2
  450d94:	ldrb	w0, [x20]
  450d98:	cmp	w0, #0x4e
  450d9c:	b.ne	450e38 <ferror@plt+0x4e108>  // b.any
  450da0:	mov	x20, x19
  450da4:	ldrb	w1, [x19, #1]
  450da8:	cmp	w1, #0x66
  450dac:	b.eq	450e10 <ferror@plt+0x4e0e0>  // b.none
  450db0:	b.hi	450d04 <ferror@plt+0x4dfd4>  // b.pmore
  450db4:	cmp	w1, #0x63
  450db8:	b.eq	450de0 <ferror@plt+0x4e0b0>  // b.none
  450dbc:	b.ls	450ccc <ferror@plt+0x4df9c>  // b.plast
  450dc0:	cmp	w1, #0x64
  450dc4:	b.eq	450df8 <ferror@plt+0x4e0c8>  // b.none
  450dc8:	add	x20, x19, #0x2
  450dcc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450dd0:	add	x1, x1, #0x790
  450dd4:	mov	x0, x21
  450dd8:	bl	450a68 <ferror@plt+0x4dd38>
  450ddc:	b	450d90 <ferror@plt+0x4e060>
  450de0:	add	x20, x19, #0x2
  450de4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450de8:	add	x1, x1, #0x778
  450dec:	mov	x0, x21
  450df0:	bl	450a68 <ferror@plt+0x4dd38>
  450df4:	b	450d90 <ferror@plt+0x4e060>
  450df8:	add	x20, x19, #0x2
  450dfc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  450e00:	add	x1, x1, #0x780
  450e04:	mov	x0, x21
  450e08:	bl	450a68 <ferror@plt+0x4dd38>
  450e0c:	b	450d90 <ferror@plt+0x4e060>
  450e10:	add	x20, x19, #0x2
  450e14:	mov	x1, x23
  450e18:	mov	x0, x21
  450e1c:	bl	450a68 <ferror@plt+0x4dd38>
  450e20:	b	450d90 <ferror@plt+0x4e060>
  450e24:	add	x20, x19, #0x2
  450e28:	mov	x1, x22
  450e2c:	mov	x0, x21
  450e30:	bl	450a68 <ferror@plt+0x4dd38>
  450e34:	b	450d90 <ferror@plt+0x4e060>
  450e38:	ldp	x21, x22, [sp, #32]
  450e3c:	ldp	x23, x24, [sp, #48]
  450e40:	b	450e6c <ferror@plt+0x4e13c>
  450e44:	mov	x20, x1
  450e48:	ldp	x21, x22, [sp, #32]
  450e4c:	b	450e6c <ferror@plt+0x4e13c>
  450e50:	mov	x20, x1
  450e54:	b	450e6c <ferror@plt+0x4e13c>
  450e58:	mov	x20, #0x0                   	// #0
  450e5c:	ldp	x21, x22, [sp, #32]
  450e60:	b	450e6c <ferror@plt+0x4e13c>
  450e64:	ldp	x21, x22, [sp, #32]
  450e68:	ldp	x23, x24, [sp, #48]
  450e6c:	mov	x0, x20
  450e70:	ldp	x19, x20, [sp, #16]
  450e74:	ldp	x29, x30, [sp], #64
  450e78:	ret
  450e7c:	ldp	x21, x22, [sp, #32]
  450e80:	ldp	x23, x24, [sp, #48]
  450e84:	b	450e6c <ferror@plt+0x4e13c>
  450e88:	cbz	x1, 450f30 <ferror@plt+0x4e200>
  450e8c:	stp	x29, x30, [sp, #-48]!
  450e90:	mov	x29, sp
  450e94:	stp	x19, x20, [sp, #16]
  450e98:	mov	x20, x0
  450e9c:	mov	x19, x1
  450ea0:	ldrb	w0, [x1]
  450ea4:	cbnz	w0, 450eb4 <ferror@plt+0x4e184>
  450ea8:	ldp	x19, x20, [sp, #16]
  450eac:	ldp	x29, x30, [sp], #48
  450eb0:	ret
  450eb4:	stp	x21, x22, [sp, #32]
  450eb8:	mov	x0, x1
  450ebc:	bl	402680 <strlen@plt>
  450ec0:	mov	x21, x0
  450ec4:	cbnz	w0, 450ed0 <ferror@plt+0x4e1a0>
  450ec8:	ldp	x21, x22, [sp, #32]
  450ecc:	b	450ea8 <ferror@plt+0x4e178>
  450ed0:	mov	w1, w0
  450ed4:	mov	x0, x20
  450ed8:	bl	4509cc <ferror@plt+0x4dc9c>
  450edc:	ldr	x1, [x20, #8]
  450ee0:	sub	x1, x1, #0x1
  450ee4:	ldr	x0, [x20]
  450ee8:	cmp	x1, x0
  450eec:	b.cc	450f0c <ferror@plt+0x4e1dc>  // b.lo, b.ul, b.last
  450ef0:	sxtw	x2, w21
  450ef4:	ldrb	w0, [x1]
  450ef8:	strb	w0, [x1, x2]
  450efc:	sub	x1, x1, #0x1
  450f00:	ldr	x0, [x20]
  450f04:	cmp	x1, x0
  450f08:	b.cs	450ef4 <ferror@plt+0x4e1c4>  // b.hs, b.nlast
  450f0c:	sxtw	x21, w21
  450f10:	mov	x2, x21
  450f14:	mov	x1, x19
  450f18:	bl	402620 <memcpy@plt>
  450f1c:	ldr	x0, [x20, #8]
  450f20:	add	x21, x0, x21
  450f24:	str	x21, [x20, #8]
  450f28:	ldp	x21, x22, [sp, #32]
  450f2c:	b	450ea8 <ferror@plt+0x4e178>
  450f30:	ret
  450f34:	cbnz	w2, 450f3c <ferror@plt+0x4e20c>
  450f38:	ret
  450f3c:	stp	x29, x30, [sp, #-48]!
  450f40:	mov	x29, sp
  450f44:	stp	x19, x20, [sp, #16]
  450f48:	str	x21, [sp, #32]
  450f4c:	mov	x20, x0
  450f50:	mov	x21, x1
  450f54:	mov	w19, w2
  450f58:	mov	w1, w2
  450f5c:	bl	4509cc <ferror@plt+0x4dc9c>
  450f60:	sxtw	x19, w19
  450f64:	mov	x2, x19
  450f68:	mov	x1, x21
  450f6c:	ldr	x0, [x20, #8]
  450f70:	bl	402620 <memcpy@plt>
  450f74:	ldr	x0, [x20, #8]
  450f78:	add	x19, x0, x19
  450f7c:	str	x19, [x20, #8]
  450f80:	ldp	x19, x20, [sp, #16]
  450f84:	ldr	x21, [sp, #32]
  450f88:	ldp	x29, x30, [sp], #48
  450f8c:	ret
  450f90:	stp	x29, x30, [sp, #-80]!
  450f94:	mov	x29, sp
  450f98:	stp	x19, x20, [sp, #16]
  450f9c:	str	x21, [sp, #32]
  450fa0:	mov	x20, x0
  450fa4:	mov	x0, x1
  450fa8:	and	w21, w2, #0xff
  450fac:	and	w1, w21, #0xfffffffd
  450fb0:	and	w1, w1, #0xff
  450fb4:	cmp	w1, #0x75
  450fb8:	mov	w1, #0x61                  	// #97
  450fbc:	ccmp	w21, w1, #0x4, ne  // ne = any
  450fc0:	b.ne	45117c <ferror@plt+0x4e44c>  // b.any
  450fc4:	add	x1, sp, #0x38
  450fc8:	bl	4508e0 <ferror@plt+0x4dbb0>
  450fcc:	mov	x19, x0
  450fd0:	cbz	x0, 451168 <ferror@plt+0x4e438>
  450fd4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  450fd8:	add	x1, x1, #0x1d8
  450fdc:	mov	x0, x20
  450fe0:	bl	450a68 <ferror@plt+0x4dd38>
  450fe4:	cmp	w21, #0x61
  450fe8:	b.eq	451018 <ferror@plt+0x4e2e8>  // b.none
  450fec:	cmp	w21, #0x77
  450ff0:	b.eq	45108c <ferror@plt+0x4e35c>  // b.none
  450ff4:	b.hi	451074 <ferror@plt+0x4e344>  // b.pmore
  450ff8:	cmp	w21, #0x75
  450ffc:	b.ne	451074 <ferror@plt+0x4e344>  // b.any
  451000:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451004:	add	x1, x1, #0x7c8
  451008:	mov	x0, x20
  45100c:	bl	450a68 <ferror@plt+0x4dd38>
  451010:	mov	w1, #0x4                   	// #4
  451014:	b	45103c <ferror@plt+0x4e30c>
  451018:	ldr	x0, [sp, #56]
  45101c:	sub	x1, x0, #0x20
  451020:	cmp	x1, #0x5e
  451024:	b.ls	45105c <ferror@plt+0x4e32c>  // b.plast
  451028:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45102c:	add	x1, x1, #0x7c0
  451030:	mov	x0, x20
  451034:	bl	450a68 <ferror@plt+0x4dd38>
  451038:	mov	w1, #0x2                   	// #2
  45103c:	ldr	x3, [sp, #56]
  451040:	cmp	x3, #0x0
  451044:	b.le	451274 <ferror@plt+0x4e544>
  451048:	mov	w0, w1
  45104c:	mov	w4, #0x9                   	// #9
  451050:	sub	w4, w4, w1
  451054:	add	x5, sp, #0x40
  451058:	b	4510d0 <ferror@plt+0x4e3a0>
  45105c:	strb	w0, [sp, #64]
  451060:	mov	w2, #0x1                   	// #1
  451064:	add	x1, sp, #0x40
  451068:	mov	x0, x20
  45106c:	bl	450f34 <ferror@plt+0x4e204>
  451070:	b	451158 <ferror@plt+0x4e428>
  451074:	ldr	x3, [sp, #56]
  451078:	mov	w1, #0x0                   	// #0
  45107c:	cmp	x3, #0x0
  451080:	b.gt	451048 <ferror@plt+0x4e318>
  451084:	mov	w1, #0xa                   	// #10
  451088:	b	451140 <ferror@plt+0x4e410>
  45108c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451090:	add	x1, x1, #0x7d0
  451094:	mov	x0, x20
  451098:	bl	450a68 <ferror@plt+0x4dd38>
  45109c:	mov	w1, #0x8                   	// #8
  4510a0:	b	45103c <ferror@plt+0x4e30c>
  4510a4:	add	w1, w4, w0
  4510a8:	add	w2, w2, #0x57
  4510ac:	strb	w2, [x5, w1, sxtw]
  4510b0:	add	x2, x3, #0xf
  4510b4:	cmp	x3, #0x0
  4510b8:	csel	x2, x2, x3, lt  // lt = tstop
  4510bc:	asr	x2, x2, #4
  4510c0:	sub	w0, w0, #0x1
  4510c4:	cmp	x3, #0xf
  4510c8:	b.le	4510f8 <ferror@plt+0x4e3c8>
  4510cc:	mov	x3, x2
  4510d0:	negs	x1, x3
  4510d4:	and	x2, x3, #0xf
  4510d8:	and	x1, x1, #0xf
  4510dc:	csneg	x2, x2, x1, mi  // mi = first
  4510e0:	cmp	w2, #0x9
  4510e4:	b.gt	4510a4 <ferror@plt+0x4e374>
  4510e8:	add	w1, w4, w0
  4510ec:	add	w2, w2, #0x30
  4510f0:	strb	w2, [x5, w1, sxtw]
  4510f4:	b	4510b0 <ferror@plt+0x4e380>
  4510f8:	str	x2, [sp, #56]
  4510fc:	cmp	w0, #0x0
  451100:	b.le	451140 <ferror@plt+0x4e410>
  451104:	add	x2, sp, #0x50
  451108:	add	x3, x2, w1, sxtw
  45110c:	sub	x3, x3, #0x11
  451110:	mov	w2, w0
  451114:	mov	w4, #0x30                  	// #48
  451118:	strb	w4, [x3], #-1
  45111c:	sub	w2, w2, #0x1
  451120:	cmp	w2, #0x0
  451124:	b.gt	451118 <ferror@plt+0x4e3e8>
  451128:	sub	w1, w1, #0x1
  45112c:	mov	w2, #0x1                   	// #1
  451130:	cmp	w0, #0x0
  451134:	csel	w0, w0, w2, gt
  451138:	sub	w0, w2, w0
  45113c:	add	w1, w0, w1
  451140:	mov	w2, #0xa                   	// #10
  451144:	sub	w2, w2, w1
  451148:	add	x0, sp, #0x40
  45114c:	add	x1, x0, w1, sxtw
  451150:	mov	x0, x20
  451154:	bl	450f34 <ferror@plt+0x4e204>
  451158:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  45115c:	add	x1, x1, #0x1d8
  451160:	mov	x0, x20
  451164:	bl	450a68 <ferror@plt+0x4dd38>
  451168:	mov	x0, x19
  45116c:	ldp	x19, x20, [sp, #16]
  451170:	ldr	x21, [sp, #32]
  451174:	ldp	x29, x30, [sp], #80
  451178:	ret
  45117c:	cmp	w21, #0x62
  451180:	b.eq	4511f0 <ferror@plt+0x4e4c0>  // b.none
  451184:	ldrb	w2, [x0]
  451188:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45118c:	add	x1, x1, #0x28
  451190:	ldrh	w1, [x1, x2, lsl #1]
  451194:	tbz	w1, #2, 45126c <ferror@plt+0x4e53c>
  451198:	mov	x19, x0
  45119c:	mov	x4, #0x1                   	// #1
  4511a0:	sub	x4, x4, x0
  4511a4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4511a8:	add	x3, x3, #0x28
  4511ac:	add	x2, x19, x4
  4511b0:	ldrb	w1, [x19, #1]!
  4511b4:	ldrh	w1, [x3, x1, lsl #1]
  4511b8:	tbnz	w1, #2, 4511ac <ferror@plt+0x4e47c>
  4511bc:	mov	x1, x0
  4511c0:	mov	x0, x20
  4511c4:	bl	450f34 <ferror@plt+0x4e204>
  4511c8:	cmp	w21, #0x6c
  4511cc:	b.eq	451258 <ferror@plt+0x4e528>  // b.none
  4511d0:	b.ls	451228 <ferror@plt+0x4e4f8>  // b.plast
  4511d4:	cmp	w21, #0x6d
  4511d8:	b.ne	45124c <ferror@plt+0x4e51c>  // b.any
  4511dc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4511e0:	add	x1, x1, #0x7e0
  4511e4:	mov	x0, x20
  4511e8:	bl	450a68 <ferror@plt+0x4dd38>
  4511ec:	b	451168 <ferror@plt+0x4e438>
  4511f0:	add	x1, sp, #0x40
  4511f4:	bl	4508e0 <ferror@plt+0x4dbb0>
  4511f8:	mov	x19, x0
  4511fc:	cbz	x0, 451168 <ferror@plt+0x4e438>
  451200:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451204:	add	x0, x0, #0xe20
  451208:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45120c:	add	x1, x1, #0xe18
  451210:	ldr	x2, [sp, #64]
  451214:	cmp	x2, #0x0
  451218:	csel	x1, x1, x0, ne  // ne = any
  45121c:	mov	x0, x20
  451220:	bl	450a68 <ferror@plt+0x4dd38>
  451224:	b	451168 <ferror@plt+0x4e438>
  451228:	cmp	w21, #0x68
  45122c:	b.eq	451238 <ferror@plt+0x4e508>  // b.none
  451230:	cmp	w21, #0x6b
  451234:	b.ne	451168 <ferror@plt+0x4e438>  // b.any
  451238:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x25c60>
  45123c:	add	x1, x1, #0xa90
  451240:	mov	x0, x20
  451244:	bl	450a68 <ferror@plt+0x4dd38>
  451248:	b	451168 <ferror@plt+0x4e438>
  45124c:	cmp	w21, #0x74
  451250:	b.eq	451238 <ferror@plt+0x4e508>  // b.none
  451254:	b	451168 <ferror@plt+0x4e438>
  451258:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45125c:	add	x1, x1, #0x7d8
  451260:	mov	x0, x20
  451264:	bl	450a68 <ferror@plt+0x4dd38>
  451268:	b	451168 <ferror@plt+0x4e438>
  45126c:	mov	x19, #0x0                   	// #0
  451270:	b	451168 <ferror@plt+0x4e438>
  451274:	mov	w0, w1
  451278:	mov	w1, #0xa                   	// #10
  45127c:	b	451104 <ferror@plt+0x4e3d4>
  451280:	stp	x29, x30, [sp, #-48]!
  451284:	mov	x29, sp
  451288:	stp	x19, x20, [sp, #16]
  45128c:	stp	x21, x22, [sp, #32]
  451290:	mov	x20, x0
  451294:	mov	x21, x1
  451298:	mov	x2, #0x3                   	// #3
  45129c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4512a0:	add	x1, x1, #0x7e8
  4512a4:	mov	x0, x21
  4512a8:	bl	402830 <strncmp@plt>
  4512ac:	cbz	w0, 4513e0 <ferror@plt+0x4e6b0>
  4512b0:	mov	x2, #0x3                   	// #3
  4512b4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4512b8:	add	x1, x1, #0x7f8
  4512bc:	mov	x0, x21
  4512c0:	bl	402830 <strncmp@plt>
  4512c4:	cbz	w0, 451408 <ferror@plt+0x4e6d8>
  4512c8:	mov	x2, #0x4                   	// #4
  4512cc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4512d0:	add	x1, x1, #0x808
  4512d4:	mov	x0, x21
  4512d8:	bl	402830 <strncmp@plt>
  4512dc:	cbz	w0, 451420 <ferror@plt+0x4e6f0>
  4512e0:	ldrb	w0, [x21]
  4512e4:	cmp	w0, #0x4e
  4512e8:	b.eq	451438 <ferror@plt+0x4e708>  // b.none
  4512ec:	ldrb	w1, [x21]
  4512f0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4512f4:	add	x0, x0, #0x28
  4512f8:	ldrh	w0, [x0, x1, lsl #1]
  4512fc:	mov	x22, #0x0                   	// #0
  451300:	tbz	w0, #8, 4513f4 <ferror@plt+0x4e6c4>
  451304:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451308:	add	x1, x1, #0x818
  45130c:	mov	x0, x20
  451310:	bl	450a68 <ferror@plt+0x4dd38>
  451314:	mov	w2, #0x1                   	// #1
  451318:	mov	x1, x21
  45131c:	mov	x0, x20
  451320:	bl	450f34 <ferror@plt+0x4e204>
  451324:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451328:	add	x1, x1, #0x600
  45132c:	mov	x0, x20
  451330:	bl	450a68 <ferror@plt+0x4dd38>
  451334:	add	x19, x21, #0x1
  451338:	ldrb	w0, [x21, #1]
  45133c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  451340:	add	x1, x1, #0x28
  451344:	ldrh	w1, [x1, w0, sxtw #1]
  451348:	tbz	w1, #8, 451374 <ferror@plt+0x4e644>
  45134c:	mov	w22, #0x1                   	// #1
  451350:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  451354:	add	x21, x21, #0x28
  451358:	mov	w2, w22
  45135c:	mov	x1, x19
  451360:	mov	x0, x20
  451364:	bl	450f34 <ferror@plt+0x4e204>
  451368:	ldrb	w0, [x19, #1]!
  45136c:	ldrh	w1, [x21, w0, sxtw #1]
  451370:	tbnz	w1, #8, 451358 <ferror@plt+0x4e628>
  451374:	mov	x22, #0x0                   	// #0
  451378:	cmp	w0, #0x50
  45137c:	b.ne	4513f4 <ferror@plt+0x4e6c4>  // b.any
  451380:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451384:	add	x1, x1, #0xb18
  451388:	mov	x0, x20
  45138c:	bl	450a68 <ferror@plt+0x4dd38>
  451390:	add	x22, x19, #0x1
  451394:	ldrb	w0, [x19, #1]
  451398:	cmp	w0, #0x4e
  45139c:	b.eq	451450 <ferror@plt+0x4e720>  // b.none
  4513a0:	ldrb	w1, [x22]
  4513a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4513a8:	add	x0, x0, #0x28
  4513ac:	ldrh	w0, [x0, x1, lsl #1]
  4513b0:	tbz	w0, #2, 4513f4 <ferror@plt+0x4e6c4>
  4513b4:	mov	w21, #0x1                   	// #1
  4513b8:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4513bc:	add	x19, x19, #0x28
  4513c0:	mov	w2, w21
  4513c4:	mov	x1, x22
  4513c8:	mov	x0, x20
  4513cc:	bl	450f34 <ferror@plt+0x4e204>
  4513d0:	ldrb	w0, [x22, #1]!
  4513d4:	ldrh	w0, [x19, x0, lsl #1]
  4513d8:	tbnz	w0, #2, 4513c0 <ferror@plt+0x4e690>
  4513dc:	b	4513f4 <ferror@plt+0x4e6c4>
  4513e0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4513e4:	add	x1, x1, #0x7f0
  4513e8:	mov	x0, x20
  4513ec:	bl	450a68 <ferror@plt+0x4dd38>
  4513f0:	add	x22, x21, #0x3
  4513f4:	mov	x0, x22
  4513f8:	ldp	x19, x20, [sp, #16]
  4513fc:	ldp	x21, x22, [sp, #32]
  451400:	ldp	x29, x30, [sp], #48
  451404:	ret
  451408:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45140c:	add	x1, x1, #0x800
  451410:	mov	x0, x20
  451414:	bl	450a68 <ferror@plt+0x4dd38>
  451418:	add	x22, x21, #0x3
  45141c:	b	4513f4 <ferror@plt+0x4e6c4>
  451420:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451424:	add	x1, x1, #0x810
  451428:	mov	x0, x20
  45142c:	bl	450a68 <ferror@plt+0x4dd38>
  451430:	add	x22, x21, #0x4
  451434:	b	4513f4 <ferror@plt+0x4e6c4>
  451438:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45143c:	add	x1, x1, #0x60
  451440:	mov	x0, x20
  451444:	bl	450a68 <ferror@plt+0x4dd38>
  451448:	add	x21, x21, #0x1
  45144c:	b	4512ec <ferror@plt+0x4e5bc>
  451450:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451454:	add	x1, x1, #0x60
  451458:	mov	x0, x20
  45145c:	bl	450a68 <ferror@plt+0x4dd38>
  451460:	add	x22, x19, #0x2
  451464:	b	4513a0 <ferror@plt+0x4e670>
  451468:	stp	x29, x30, [sp, #-80]!
  45146c:	mov	x29, sp
  451470:	stp	x19, x20, [sp, #16]
  451474:	mov	x20, x0
  451478:	mov	x0, x1
  45147c:	cbz	x1, 451a74 <ferror@plt+0x4ed44>
  451480:	stp	x21, x22, [sp, #32]
  451484:	mov	x21, x2
  451488:	and	w22, w3, #0xff
  45148c:	ldrb	w3, [x1]
  451490:	cbz	w3, 451a7c <ferror@plt+0x4ed4c>
  451494:	cmp	w3, #0x63
  451498:	b.eq	4516cc <ferror@plt+0x4e99c>  // b.none
  45149c:	b.hi	451604 <ferror@plt+0x4e8d4>  // b.pmore
  4514a0:	cmp	w3, #0x4e
  4514a4:	b.eq	45167c <ferror@plt+0x4e94c>  // b.none
  4514a8:	b.ls	451504 <ferror@plt+0x4e7d4>  // b.plast
  4514ac:	cmp	w3, #0x53
  4514b0:	b.ne	451588 <ferror@plt+0x4e858>  // b.any
  4514b4:	add	x1, sp, #0x48
  4514b8:	add	x0, x0, #0x1
  4514bc:	bl	4508e0 <ferror@plt+0x4dbb0>
  4514c0:	mov	x19, x0
  4514c4:	cbz	x0, 451ac4 <ferror@plt+0x4ed94>
  4514c8:	cbz	x21, 4514d8 <ferror@plt+0x4e7a8>
  4514cc:	mov	x1, x21
  4514d0:	mov	x0, x20
  4514d4:	bl	450a68 <ferror@plt+0x4dd38>
  4514d8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4514dc:	add	x1, x1, #0x860
  4514e0:	mov	x0, x20
  4514e4:	bl	450a68 <ferror@plt+0x4dd38>
  4514e8:	ldr	x0, [sp, #72]
  4514ec:	sub	x1, x0, #0x1
  4514f0:	str	x1, [sp, #72]
  4514f4:	cbz	x0, 451a5c <ferror@plt+0x4ed2c>
  4514f8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4514fc:	add	x21, x21, #0xe10
  451500:	b	451a34 <ferror@plt+0x4ed04>
  451504:	cmp	w3, #0x39
  451508:	b.hi	45152c <ferror@plt+0x4e7fc>  // b.pmore
  45150c:	cmp	w3, #0x2f
  451510:	b.hi	4516b0 <ferror@plt+0x4e980>  // b.pmore
  451514:	mov	x19, #0x0                   	// #0
  451518:	ldp	x21, x22, [sp, #32]
  45151c:	mov	x0, x19
  451520:	ldp	x19, x20, [sp, #16]
  451524:	ldp	x29, x30, [sp], #80
  451528:	ret
  45152c:	cmp	w3, #0x41
  451530:	b.ne	45157c <ferror@plt+0x4e84c>  // b.any
  451534:	add	x0, x1, #0x1
  451538:	cmp	w22, #0x48
  45153c:	b.eq	4518f8 <ferror@plt+0x4ebc8>  // b.none
  451540:	add	x1, sp, #0x48
  451544:	bl	4508e0 <ferror@plt+0x4dbb0>
  451548:	mov	x19, x0
  45154c:	cbz	x0, 451abc <ferror@plt+0x4ed8c>
  451550:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451554:	add	x1, x1, #0xbe8
  451558:	mov	x0, x20
  45155c:	bl	450a68 <ferror@plt+0x4dd38>
  451560:	ldr	x0, [sp, #72]
  451564:	sub	x1, x0, #0x1
  451568:	str	x1, [sp, #72]
  45156c:	cbz	x0, 451a00 <ferror@plt+0x4ecd0>
  451570:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451574:	add	x21, x21, #0xe10
  451578:	b	4519d8 <ferror@plt+0x4eca8>
  45157c:	mov	x19, #0x0                   	// #0
  451580:	ldp	x21, x22, [sp, #32]
  451584:	b	45151c <ferror@plt+0x4e7ec>
  451588:	cmp	w3, #0x61
  45158c:	b.ne	4515f8 <ferror@plt+0x4e8c8>  // b.any
  451590:	strb	w3, [sp, #70]
  451594:	add	x1, sp, #0x48
  451598:	add	x0, x0, #0x1
  45159c:	bl	4508e0 <ferror@plt+0x4dbb0>
  4515a0:	mov	x19, x0
  4515a4:	cbz	x0, 451aac <ferror@plt+0x4ed7c>
  4515a8:	ldrb	w0, [x0]
  4515ac:	cmp	w0, #0x5f
  4515b0:	b.ne	4518ec <ferror@plt+0x4ebbc>  // b.any
  4515b4:	add	x21, x19, #0x1
  4515b8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  4515bc:	add	x1, x1, #0xe20
  4515c0:	mov	x0, x20
  4515c4:	bl	450a68 <ferror@plt+0x4dd38>
  4515c8:	ldr	x0, [sp, #72]
  4515cc:	sub	x1, x0, #0x1
  4515d0:	str	x1, [sp, #72]
  4515d4:	cbz	x0, 4518cc <ferror@plt+0x4eb9c>
  4515d8:	stp	x23, x24, [sp, #48]
  4515dc:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4515e0:	add	x22, x22, #0x28
  4515e4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4515e8:	add	x23, x23, #0xdf8
  4515ec:	adrp	x24, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4515f0:	add	x24, x24, #0x7c0
  4515f4:	b	451794 <ferror@plt+0x4ea64>
  4515f8:	mov	x19, #0x0                   	// #0
  4515fc:	ldp	x21, x22, [sp, #32]
  451600:	b	45151c <ferror@plt+0x4e7ec>
  451604:	cmp	w3, #0x69
  451608:	b.eq	4516ac <ferror@plt+0x4e97c>  // b.none
  45160c:	b.ls	451634 <ferror@plt+0x4e904>  // b.plast
  451610:	cmp	w3, #0x6e
  451614:	b.ne	451668 <ferror@plt+0x4e938>  // b.any
  451618:	add	x19, x1, #0x1
  45161c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451620:	add	x1, x1, #0xe28
  451624:	mov	x0, x20
  451628:	bl	450a68 <ferror@plt+0x4dd38>
  45162c:	ldp	x21, x22, [sp, #32]
  451630:	b	45151c <ferror@plt+0x4e7ec>
  451634:	cmp	w3, #0x64
  451638:	b.eq	451590 <ferror@plt+0x4e860>  // b.none
  45163c:	cmp	w3, #0x65
  451640:	b.ne	45165c <ferror@plt+0x4e92c>  // b.any
  451644:	add	x1, x1, #0x1
  451648:	mov	x0, x20
  45164c:	bl	451280 <ferror@plt+0x4e550>
  451650:	mov	x19, x0
  451654:	ldp	x21, x22, [sp, #32]
  451658:	b	45151c <ferror@plt+0x4e7ec>
  45165c:	mov	x19, #0x0                   	// #0
  451660:	ldp	x21, x22, [sp, #32]
  451664:	b	45151c <ferror@plt+0x4e7ec>
  451668:	cmp	w3, #0x77
  45166c:	b.eq	451590 <ferror@plt+0x4e860>  // b.none
  451670:	mov	x19, #0x0                   	// #0
  451674:	ldp	x21, x22, [sp, #32]
  451678:	b	45151c <ferror@plt+0x4e7ec>
  45167c:	add	x19, x1, #0x1
  451680:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451684:	add	x1, x1, #0x60
  451688:	mov	x0, x20
  45168c:	bl	450a68 <ferror@plt+0x4dd38>
  451690:	mov	w2, w22
  451694:	mov	x1, x19
  451698:	mov	x0, x20
  45169c:	bl	450f90 <ferror@plt+0x4e260>
  4516a0:	mov	x19, x0
  4516a4:	ldp	x21, x22, [sp, #32]
  4516a8:	b	45151c <ferror@plt+0x4e7ec>
  4516ac:	add	x0, x1, #0x1
  4516b0:	mov	w2, w22
  4516b4:	mov	x1, x0
  4516b8:	mov	x0, x20
  4516bc:	bl	450f90 <ferror@plt+0x4e260>
  4516c0:	mov	x19, x0
  4516c4:	ldp	x21, x22, [sp, #32]
  4516c8:	b	45151c <ferror@plt+0x4e7ec>
  4516cc:	add	x1, x1, #0x1
  4516d0:	mov	x0, x20
  4516d4:	bl	451280 <ferror@plt+0x4e550>
  4516d8:	mov	x19, x0
  4516dc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  4516e0:	add	x1, x1, #0x608
  4516e4:	mov	x0, x20
  4516e8:	bl	450a68 <ferror@plt+0x4dd38>
  4516ec:	cbz	x19, 451aa4 <ferror@plt+0x4ed74>
  4516f0:	ldrb	w0, [x19]
  4516f4:	cmp	w0, #0x63
  4516f8:	b.ne	451a88 <ferror@plt+0x4ed58>  // b.any
  4516fc:	add	x1, x19, #0x1
  451700:	mov	x0, x20
  451704:	bl	451280 <ferror@plt+0x4e550>
  451708:	mov	x19, x0
  45170c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451710:	add	x1, x1, #0x820
  451714:	mov	x0, x20
  451718:	bl	450a68 <ferror@plt+0x4dd38>
  45171c:	ldp	x21, x22, [sp, #32]
  451720:	b	45151c <ferror@plt+0x4e7ec>
  451724:	sub	w0, w0, #0x30
  451728:	strb	w0, [sp, #71]
  45172c:	b	4517cc <ferror@plt+0x4ea9c>
  451730:	ldrb	w0, [sp, #71]
  451734:	sub	w1, w1, #0x30
  451738:	orr	w1, w1, w0, lsl #4
  45173c:	strb	w1, [sp, #71]
  451740:	b	4517f8 <ferror@plt+0x4eac8>
  451744:	cmp	w0, #0x9
  451748:	b.ne	451868 <ferror@plt+0x4eb38>  // b.any
  45174c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451750:	add	x1, x1, #0xe08
  451754:	mov	x0, x20
  451758:	bl	450a68 <ferror@plt+0x4dd38>
  45175c:	b	451780 <ferror@plt+0x4ea50>
  451760:	cmp	w0, #0xd
  451764:	b.eq	451844 <ferror@plt+0x4eb14>  // b.none
  451768:	cmp	w0, #0x20
  45176c:	b.ne	451868 <ferror@plt+0x4eb38>  // b.any
  451770:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451774:	add	x1, x1, #0x6e0
  451778:	mov	x0, x20
  45177c:	bl	450a68 <ferror@plt+0x4dd38>
  451780:	ldr	x0, [sp, #72]
  451784:	sub	x1, x0, #0x1
  451788:	str	x1, [sp, #72]
  45178c:	cbz	x0, 4518a4 <ferror@plt+0x4eb74>
  451790:	mov	x21, x19
  451794:	ldrb	w0, [x21]
  451798:	ldrh	w2, [x22, w0, sxtw #1]
  45179c:	tbz	w2, #8, 451a94 <ferror@plt+0x4ed64>
  4517a0:	ldrb	w1, [x21, #1]
  4517a4:	ldrh	w3, [x22, w1, sxtw #1]
  4517a8:	tbz	w3, #8, 451a94 <ferror@plt+0x4ed64>
  4517ac:	tbnz	w2, #2, 451724 <ferror@plt+0x4e9f4>
  4517b0:	tst	x2, #0x80
  4517b4:	mov	w2, #0x41                  	// #65
  4517b8:	mov	w4, #0x61                  	// #97
  4517bc:	csel	w2, w2, w4, ne  // ne = any
  4517c0:	add	w0, w0, #0xa
  4517c4:	sub	w0, w0, w2
  4517c8:	strb	w0, [sp, #71]
  4517cc:	tbnz	w3, #2, 451730 <ferror@plt+0x4ea00>
  4517d0:	ldrb	w0, [sp, #71]
  4517d4:	sbfx	x0, x0, #0, #4
  4517d8:	tst	x3, #0x80
  4517dc:	mov	w2, #0x41                  	// #65
  4517e0:	mov	w3, #0x61                  	// #97
  4517e4:	csel	w2, w2, w3, ne  // ne = any
  4517e8:	add	w1, w1, #0xa
  4517ec:	sub	w1, w1, w2
  4517f0:	orr	w1, w1, w0, lsl #4
  4517f4:	strb	w1, [sp, #71]
  4517f8:	add	x19, x21, #0x2
  4517fc:	ldrb	w0, [sp, #71]
  451800:	cmp	w0, #0xc
  451804:	b.eq	451858 <ferror@plt+0x4eb28>  // b.none
  451808:	b.hi	451760 <ferror@plt+0x4ea30>  // b.pmore
  45180c:	cmp	w0, #0xa
  451810:	b.eq	451830 <ferror@plt+0x4eb00>  // b.none
  451814:	cmp	w0, #0xb
  451818:	b.ne	451744 <ferror@plt+0x4ea14>  // b.any
  45181c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451820:	add	x1, x1, #0x828
  451824:	mov	x0, x20
  451828:	bl	450a68 <ferror@plt+0x4dd38>
  45182c:	b	451780 <ferror@plt+0x4ea50>
  451830:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451834:	add	x1, x1, #0xde8
  451838:	mov	x0, x20
  45183c:	bl	450a68 <ferror@plt+0x4dd38>
  451840:	b	451780 <ferror@plt+0x4ea50>
  451844:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451848:	add	x1, x1, #0xe00
  45184c:	mov	x0, x20
  451850:	bl	450a68 <ferror@plt+0x4dd38>
  451854:	b	451780 <ferror@plt+0x4ea50>
  451858:	mov	x1, x23
  45185c:	mov	x0, x20
  451860:	bl	450a68 <ferror@plt+0x4dd38>
  451864:	b	451780 <ferror@plt+0x4ea50>
  451868:	ldrh	w0, [x22, w0, sxtw #1]
  45186c:	tbz	w0, #4, 451884 <ferror@plt+0x4eb54>
  451870:	mov	w2, #0x1                   	// #1
  451874:	add	x1, sp, #0x47
  451878:	mov	x0, x20
  45187c:	bl	450f34 <ferror@plt+0x4e204>
  451880:	b	451780 <ferror@plt+0x4ea50>
  451884:	mov	x1, x24
  451888:	mov	x0, x20
  45188c:	bl	450a68 <ferror@plt+0x4dd38>
  451890:	mov	w2, #0x2                   	// #2
  451894:	mov	x1, x21
  451898:	mov	x0, x20
  45189c:	bl	450f34 <ferror@plt+0x4e204>
  4518a0:	b	451780 <ferror@plt+0x4ea50>
  4518a4:	ldp	x23, x24, [sp, #48]
  4518a8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x23c60>
  4518ac:	add	x1, x1, #0xe20
  4518b0:	mov	x0, x20
  4518b4:	bl	450a68 <ferror@plt+0x4dd38>
  4518b8:	ldrb	w0, [sp, #70]
  4518bc:	cmp	w0, #0x61
  4518c0:	b.ne	4518d4 <ferror@plt+0x4eba4>  // b.any
  4518c4:	ldp	x21, x22, [sp, #32]
  4518c8:	b	45151c <ferror@plt+0x4e7ec>
  4518cc:	mov	x19, x21
  4518d0:	b	4518a8 <ferror@plt+0x4eb78>
  4518d4:	mov	w2, #0x1                   	// #1
  4518d8:	add	x1, sp, #0x46
  4518dc:	mov	x0, x20
  4518e0:	bl	450f34 <ferror@plt+0x4e204>
  4518e4:	ldp	x21, x22, [sp, #32]
  4518e8:	b	45151c <ferror@plt+0x4e7ec>
  4518ec:	mov	x19, #0x0                   	// #0
  4518f0:	ldp	x21, x22, [sp, #32]
  4518f4:	b	45151c <ferror@plt+0x4e7ec>
  4518f8:	add	x1, sp, #0x48
  4518fc:	bl	4508e0 <ferror@plt+0x4dbb0>
  451900:	mov	x19, x0
  451904:	cbz	x0, 451ab4 <ferror@plt+0x4ed84>
  451908:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  45190c:	add	x1, x1, #0xbe8
  451910:	mov	x0, x20
  451914:	bl	450a68 <ferror@plt+0x4dd38>
  451918:	ldr	x0, [sp, #72]
  45191c:	sub	x1, x0, #0x1
  451920:	str	x1, [sp, #72]
  451924:	cbz	x0, 4519a4 <ferror@plt+0x4ec74>
  451928:	adrp	x21, 470000 <_obstack_memory_used@@Base+0x1bc60>
  45192c:	add	x21, x21, #0x2d0
  451930:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451934:	add	x22, x22, #0xe10
  451938:	b	451958 <ferror@plt+0x4ec28>
  45193c:	mov	x1, x22
  451940:	mov	x0, x20
  451944:	bl	450a68 <ferror@plt+0x4dd38>
  451948:	ldr	x0, [sp, #72]
  45194c:	sub	x1, x0, #0x1
  451950:	str	x1, [sp, #72]
  451954:	cbz	x0, 4519a4 <ferror@plt+0x4ec74>
  451958:	mov	w3, #0x0                   	// #0
  45195c:	mov	x2, #0x0                   	// #0
  451960:	mov	x1, x19
  451964:	mov	x0, x20
  451968:	bl	451468 <ferror@plt+0x4e738>
  45196c:	mov	x19, x0
  451970:	mov	x1, x21
  451974:	mov	x0, x20
  451978:	bl	450a68 <ferror@plt+0x4dd38>
  45197c:	mov	w3, #0x0                   	// #0
  451980:	mov	x2, #0x0                   	// #0
  451984:	mov	x1, x19
  451988:	mov	x0, x20
  45198c:	bl	451468 <ferror@plt+0x4e738>
  451990:	mov	x19, x0
  451994:	ldr	x0, [sp, #72]
  451998:	cbnz	x0, 45193c <ferror@plt+0x4ec0c>
  45199c:	mov	x0, #0xffffffffffffffff    	// #-1
  4519a0:	str	x0, [sp, #72]
  4519a4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  4519a8:	add	x1, x1, #0xbf0
  4519ac:	mov	x0, x20
  4519b0:	bl	450a68 <ferror@plt+0x4dd38>
  4519b4:	ldp	x21, x22, [sp, #32]
  4519b8:	b	45151c <ferror@plt+0x4e7ec>
  4519bc:	mov	x1, x21
  4519c0:	mov	x0, x20
  4519c4:	bl	450a68 <ferror@plt+0x4dd38>
  4519c8:	ldr	x0, [sp, #72]
  4519cc:	sub	x1, x0, #0x1
  4519d0:	str	x1, [sp, #72]
  4519d4:	cbz	x0, 451a00 <ferror@plt+0x4ecd0>
  4519d8:	mov	w3, #0x0                   	// #0
  4519dc:	mov	x2, #0x0                   	// #0
  4519e0:	mov	x1, x19
  4519e4:	mov	x0, x20
  4519e8:	bl	451468 <ferror@plt+0x4e738>
  4519ec:	mov	x19, x0
  4519f0:	ldr	x0, [sp, #72]
  4519f4:	cbnz	x0, 4519bc <ferror@plt+0x4ec8c>
  4519f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4519fc:	str	x0, [sp, #72]
  451a00:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451a04:	add	x1, x1, #0xbf0
  451a08:	mov	x0, x20
  451a0c:	bl	450a68 <ferror@plt+0x4dd38>
  451a10:	ldp	x21, x22, [sp, #32]
  451a14:	b	45151c <ferror@plt+0x4e7ec>
  451a18:	mov	x1, x21
  451a1c:	mov	x0, x20
  451a20:	bl	450a68 <ferror@plt+0x4dd38>
  451a24:	ldr	x0, [sp, #72]
  451a28:	sub	x1, x0, #0x1
  451a2c:	str	x1, [sp, #72]
  451a30:	cbz	x0, 451a5c <ferror@plt+0x4ed2c>
  451a34:	mov	w3, #0x0                   	// #0
  451a38:	mov	x2, #0x0                   	// #0
  451a3c:	mov	x1, x19
  451a40:	mov	x0, x20
  451a44:	bl	451468 <ferror@plt+0x4e738>
  451a48:	mov	x19, x0
  451a4c:	ldr	x0, [sp, #72]
  451a50:	cbnz	x0, 451a18 <ferror@plt+0x4ece8>
  451a54:	mov	x0, #0xffffffffffffffff    	// #-1
  451a58:	str	x0, [sp, #72]
  451a5c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451a60:	add	x1, x1, #0xee0
  451a64:	mov	x0, x20
  451a68:	bl	450a68 <ferror@plt+0x4dd38>
  451a6c:	ldp	x21, x22, [sp, #32]
  451a70:	b	45151c <ferror@plt+0x4e7ec>
  451a74:	mov	x19, x1
  451a78:	b	45151c <ferror@plt+0x4e7ec>
  451a7c:	mov	x19, #0x0                   	// #0
  451a80:	ldp	x21, x22, [sp, #32]
  451a84:	b	45151c <ferror@plt+0x4e7ec>
  451a88:	mov	x19, #0x0                   	// #0
  451a8c:	ldp	x21, x22, [sp, #32]
  451a90:	b	45151c <ferror@plt+0x4e7ec>
  451a94:	mov	x19, #0x0                   	// #0
  451a98:	ldp	x21, x22, [sp, #32]
  451a9c:	ldp	x23, x24, [sp, #48]
  451aa0:	b	45151c <ferror@plt+0x4e7ec>
  451aa4:	ldp	x21, x22, [sp, #32]
  451aa8:	b	45151c <ferror@plt+0x4e7ec>
  451aac:	ldp	x21, x22, [sp, #32]
  451ab0:	b	45151c <ferror@plt+0x4e7ec>
  451ab4:	ldp	x21, x22, [sp, #32]
  451ab8:	b	45151c <ferror@plt+0x4e7ec>
  451abc:	ldp	x21, x22, [sp, #32]
  451ac0:	b	45151c <ferror@plt+0x4e7ec>
  451ac4:	ldp	x21, x22, [sp, #32]
  451ac8:	b	45151c <ferror@plt+0x4e7ec>
  451acc:	stp	x29, x30, [sp, #-80]!
  451ad0:	mov	x29, sp
  451ad4:	stp	x19, x20, [sp, #16]
  451ad8:	stp	x21, x22, [sp, #32]
  451adc:	mov	x19, x1
  451ae0:	cbz	x1, 45213c <ferror@plt+0x4f40c>
  451ae4:	mov	x20, x0
  451ae8:	ldrb	w1, [x1]
  451aec:	cbz	w1, 452144 <ferror@plt+0x4f414>
  451af0:	sub	w1, w1, #0x41
  451af4:	cmp	w1, #0x39
  451af8:	b.hi	45215c <ferror@plt+0x4f42c>  // b.pmore
  451afc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451b00:	add	x2, x2, #0x9f8
  451b04:	ldrh	w0, [x2, w1, uxtw #1]
  451b08:	adr	x1, 451b14 <ferror@plt+0x4ede4>
  451b0c:	add	x0, x1, w0, sxth #2
  451b10:	br	x0
  451b14:	add	x19, x19, #0x1
  451b18:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451b1c:	add	x1, x1, #0x830
  451b20:	mov	x0, x20
  451b24:	bl	450a68 <ferror@plt+0x4dd38>
  451b28:	mov	x1, x19
  451b2c:	mov	x0, x20
  451b30:	bl	451acc <ferror@plt+0x4ed9c>
  451b34:	mov	x22, x0
  451b38:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451b3c:	add	x1, x1, #0xee0
  451b40:	mov	x0, x20
  451b44:	bl	450a68 <ferror@plt+0x4dd38>
  451b48:	b	452148 <ferror@plt+0x4f418>
  451b4c:	add	x19, x19, #0x1
  451b50:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451b54:	add	x1, x1, #0x838
  451b58:	mov	x0, x20
  451b5c:	bl	450a68 <ferror@plt+0x4dd38>
  451b60:	mov	x1, x19
  451b64:	mov	x0, x20
  451b68:	bl	451acc <ferror@plt+0x4ed9c>
  451b6c:	mov	x22, x0
  451b70:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451b74:	add	x1, x1, #0xee0
  451b78:	mov	x0, x20
  451b7c:	bl	450a68 <ferror@plt+0x4dd38>
  451b80:	b	452148 <ferror@plt+0x4f418>
  451b84:	add	x19, x19, #0x1
  451b88:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451b8c:	add	x1, x1, #0x840
  451b90:	mov	x0, x20
  451b94:	bl	450a68 <ferror@plt+0x4dd38>
  451b98:	mov	x1, x19
  451b9c:	mov	x0, x20
  451ba0:	bl	451acc <ferror@plt+0x4ed9c>
  451ba4:	mov	x22, x0
  451ba8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451bac:	add	x1, x1, #0xee0
  451bb0:	mov	x0, x20
  451bb4:	bl	450a68 <ferror@plt+0x4dd38>
  451bb8:	b	452148 <ferror@plt+0x4f418>
  451bbc:	ldrb	w0, [x19, #1]
  451bc0:	cmp	w0, #0x67
  451bc4:	b.eq	451c0c <ferror@plt+0x4eedc>  // b.none
  451bc8:	mov	x22, #0x0                   	// #0
  451bcc:	cmp	w0, #0x68
  451bd0:	b.ne	452148 <ferror@plt+0x4f418>  // b.any
  451bd4:	add	x19, x19, #0x2
  451bd8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451bdc:	add	x1, x1, #0x858
  451be0:	mov	x0, x20
  451be4:	bl	450a68 <ferror@plt+0x4dd38>
  451be8:	mov	x1, x19
  451bec:	mov	x0, x20
  451bf0:	bl	451acc <ferror@plt+0x4ed9c>
  451bf4:	mov	x22, x0
  451bf8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451bfc:	add	x1, x1, #0xee0
  451c00:	mov	x0, x20
  451c04:	bl	450a68 <ferror@plt+0x4dd38>
  451c08:	b	452148 <ferror@plt+0x4f418>
  451c0c:	add	x19, x19, #0x2
  451c10:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451c14:	add	x1, x1, #0x850
  451c18:	mov	x0, x20
  451c1c:	bl	450a68 <ferror@plt+0x4dd38>
  451c20:	mov	x1, x19
  451c24:	mov	x0, x20
  451c28:	bl	451acc <ferror@plt+0x4ed9c>
  451c2c:	mov	x22, x0
  451c30:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451c34:	add	x1, x1, #0xee0
  451c38:	mov	x0, x20
  451c3c:	bl	450a68 <ferror@plt+0x4dd38>
  451c40:	b	452148 <ferror@plt+0x4f418>
  451c44:	add	x1, x19, #0x1
  451c48:	mov	x0, x20
  451c4c:	bl	451acc <ferror@plt+0x4ed9c>
  451c50:	mov	x22, x0
  451c54:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451c58:	add	x1, x1, #0xc10
  451c5c:	mov	x0, x20
  451c60:	bl	450a68 <ferror@plt+0x4dd38>
  451c64:	b	452148 <ferror@plt+0x4f418>
  451c68:	add	x21, x19, #0x1
  451c6c:	ldrb	w1, [x19, #1]
  451c70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  451c74:	add	x0, x0, #0x28
  451c78:	ldrh	w0, [x0, x1, lsl #1]
  451c7c:	tbz	w0, #2, 451ce8 <ferror@plt+0x4efb8>
  451c80:	add	x0, x19, #0x2
  451c84:	mvn	x4, x19
  451c88:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  451c8c:	add	x3, x3, #0x28
  451c90:	add	x19, x4, x0
  451c94:	mov	x1, x0
  451c98:	add	x0, x0, #0x1
  451c9c:	ldrb	w2, [x1]
  451ca0:	ldrh	w2, [x3, x2, lsl #1]
  451ca4:	tbnz	w2, #2, 451c90 <ferror@plt+0x4ef60>
  451ca8:	mov	x0, x20
  451cac:	bl	451acc <ferror@plt+0x4ed9c>
  451cb0:	mov	x22, x0
  451cb4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451cb8:	add	x1, x1, #0xbe8
  451cbc:	mov	x0, x20
  451cc0:	bl	450a68 <ferror@plt+0x4dd38>
  451cc4:	mov	w2, w19
  451cc8:	mov	x1, x21
  451ccc:	mov	x0, x20
  451cd0:	bl	450f34 <ferror@plt+0x4e204>
  451cd4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451cd8:	add	x1, x1, #0xbf0
  451cdc:	mov	x0, x20
  451ce0:	bl	450a68 <ferror@plt+0x4dd38>
  451ce4:	b	452148 <ferror@plt+0x4f418>
  451ce8:	mov	x1, x21
  451cec:	mov	x19, #0x0                   	// #0
  451cf0:	b	451ca8 <ferror@plt+0x4ef78>
  451cf4:	str	xzr, [sp, #72]
  451cf8:	str	xzr, [sp, #64]
  451cfc:	str	xzr, [sp, #56]
  451d00:	add	x1, x19, #0x1
  451d04:	add	x0, sp, #0x38
  451d08:	bl	451acc <ferror@plt+0x4ed9c>
  451d0c:	mov	x21, x0
  451d10:	add	x0, sp, #0x38
  451d14:	bl	45088c <ferror@plt+0x4db5c>
  451d18:	mov	w19, w0
  451d1c:	mov	x1, x21
  451d20:	mov	x0, x20
  451d24:	bl	451acc <ferror@plt+0x4ed9c>
  451d28:	mov	x22, x0
  451d2c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451d30:	add	x1, x1, #0xbe8
  451d34:	mov	x0, x20
  451d38:	bl	450a68 <ferror@plt+0x4dd38>
  451d3c:	mov	w2, w19
  451d40:	ldr	x1, [sp, #56]
  451d44:	mov	x0, x20
  451d48:	bl	450f34 <ferror@plt+0x4e204>
  451d4c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  451d50:	add	x1, x1, #0xbf0
  451d54:	mov	x0, x20
  451d58:	bl	450a68 <ferror@plt+0x4dd38>
  451d5c:	add	x0, sp, #0x38
  451d60:	bl	450998 <ferror@plt+0x4dc68>
  451d64:	b	452148 <ferror@plt+0x4f418>
  451d68:	add	x19, x19, #0x1
  451d6c:	mov	x0, x19
  451d70:	bl	450964 <ferror@plt+0x4dc34>
  451d74:	cbz	w0, 451d9c <ferror@plt+0x4f06c>
  451d78:	mov	x1, x19
  451d7c:	mov	x0, x20
  451d80:	bl	45232c <ferror@plt+0x4f5fc>
  451d84:	mov	x22, x0
  451d88:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451d8c:	add	x1, x1, #0x868
  451d90:	mov	x0, x20
  451d94:	bl	450a68 <ferror@plt+0x4dd38>
  451d98:	b	452148 <ferror@plt+0x4f418>
  451d9c:	mov	x1, x19
  451da0:	mov	x0, x20
  451da4:	bl	451acc <ferror@plt+0x4ed9c>
  451da8:	mov	x22, x0
  451dac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451db0:	add	x1, x1, #0x38
  451db4:	mov	x0, x20
  451db8:	bl	450a68 <ferror@plt+0x4dd38>
  451dbc:	b	452148 <ferror@plt+0x4f418>
  451dc0:	mov	w2, #0x2                   	// #2
  451dc4:	add	x1, x19, #0x1
  451dc8:	mov	x0, x20
  451dcc:	bl	452b24 <ferror@plt+0x4fdf4>
  451dd0:	mov	x22, x0
  451dd4:	b	452148 <ferror@plt+0x4f418>
  451dd8:	str	xzr, [sp, #72]
  451ddc:	str	xzr, [sp, #64]
  451de0:	str	xzr, [sp, #56]
  451de4:	add	x1, x19, #0x1
  451de8:	add	x0, sp, #0x38
  451dec:	bl	450ac8 <ferror@plt+0x4dd98>
  451df0:	mov	x21, x0
  451df4:	add	x0, sp, #0x38
  451df8:	bl	45088c <ferror@plt+0x4db5c>
  451dfc:	mov	w19, w0
  451e00:	mov	x1, x21
  451e04:	mov	x0, x20
  451e08:	bl	45232c <ferror@plt+0x4f5fc>
  451e0c:	mov	x22, x0
  451e10:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451e14:	add	x1, x1, #0x878
  451e18:	mov	x0, x20
  451e1c:	bl	450a68 <ferror@plt+0x4dd38>
  451e20:	mov	w2, w19
  451e24:	ldr	x1, [sp, #56]
  451e28:	mov	x0, x20
  451e2c:	bl	450f34 <ferror@plt+0x4e204>
  451e30:	add	x0, sp, #0x38
  451e34:	bl	450998 <ferror@plt+0x4dc68>
  451e38:	b	452148 <ferror@plt+0x4f418>
  451e3c:	add	x1, sp, #0x38
  451e40:	add	x0, x19, #0x1
  451e44:	bl	4508e0 <ferror@plt+0x4dbb0>
  451e48:	mov	x22, x0
  451e4c:	cbz	x0, 452148 <ferror@plt+0x4f418>
  451e50:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451e54:	add	x1, x1, #0x888
  451e58:	mov	x0, x20
  451e5c:	bl	450a68 <ferror@plt+0x4dd38>
  451e60:	ldr	x0, [sp, #56]
  451e64:	sub	x1, x0, #0x1
  451e68:	str	x1, [sp, #56]
  451e6c:	cbz	x0, 451eb8 <ferror@plt+0x4f188>
  451e70:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  451e74:	add	x19, x19, #0xe10
  451e78:	b	451e98 <ferror@plt+0x4f168>
  451e7c:	mov	x1, x19
  451e80:	mov	x0, x20
  451e84:	bl	450a68 <ferror@plt+0x4dd38>
  451e88:	ldr	x1, [sp, #56]
  451e8c:	sub	x2, x1, #0x1
  451e90:	str	x2, [sp, #56]
  451e94:	cbz	x1, 451eb8 <ferror@plt+0x4f188>
  451e98:	mov	x1, x22
  451e9c:	mov	x0, x20
  451ea0:	bl	451acc <ferror@plt+0x4ed9c>
  451ea4:	mov	x22, x0
  451ea8:	ldr	x1, [sp, #56]
  451eac:	cbnz	x1, 451e7c <ferror@plt+0x4f14c>
  451eb0:	mov	x0, #0xffffffffffffffff    	// #-1
  451eb4:	str	x0, [sp, #56]
  451eb8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  451ebc:	add	x1, x1, #0xee0
  451ec0:	mov	x0, x20
  451ec4:	bl	450a68 <ferror@plt+0x4dd38>
  451ec8:	b	452148 <ferror@plt+0x4f418>
  451ecc:	add	x22, x19, #0x1
  451ed0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  451ed4:	add	x1, x1, #0xa98
  451ed8:	mov	x0, x20
  451edc:	bl	450a68 <ferror@plt+0x4dd38>
  451ee0:	b	452148 <ferror@plt+0x4f418>
  451ee4:	add	x22, x19, #0x1
  451ee8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451eec:	add	x1, x1, #0x368
  451ef0:	mov	x0, x20
  451ef4:	bl	450a68 <ferror@plt+0x4dd38>
  451ef8:	b	452148 <ferror@plt+0x4f418>
  451efc:	add	x22, x19, #0x1
  451f00:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f04:	add	x1, x1, #0x2b0
  451f08:	mov	x0, x20
  451f0c:	bl	450a68 <ferror@plt+0x4dd38>
  451f10:	b	452148 <ferror@plt+0x4f418>
  451f14:	add	x22, x19, #0x1
  451f18:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f1c:	add	x1, x1, #0x890
  451f20:	mov	x0, x20
  451f24:	bl	450a68 <ferror@plt+0x4dd38>
  451f28:	b	452148 <ferror@plt+0x4f418>
  451f2c:	add	x22, x19, #0x1
  451f30:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f34:	add	x1, x1, #0x350
  451f38:	mov	x0, x20
  451f3c:	bl	450a68 <ferror@plt+0x4dd38>
  451f40:	b	452148 <ferror@plt+0x4f418>
  451f44:	add	x22, x19, #0x1
  451f48:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f4c:	add	x1, x1, #0x898
  451f50:	mov	x0, x20
  451f54:	bl	450a68 <ferror@plt+0x4dd38>
  451f58:	b	452148 <ferror@plt+0x4f418>
  451f5c:	add	x22, x19, #0x1
  451f60:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f64:	add	x1, x1, #0x2f8
  451f68:	mov	x0, x20
  451f6c:	bl	450a68 <ferror@plt+0x4dd38>
  451f70:	b	452148 <ferror@plt+0x4f418>
  451f74:	add	x22, x19, #0x1
  451f78:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f7c:	add	x1, x1, #0x8a0
  451f80:	mov	x0, x20
  451f84:	bl	450a68 <ferror@plt+0x4dd38>
  451f88:	b	452148 <ferror@plt+0x4f418>
  451f8c:	add	x22, x19, #0x1
  451f90:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451f94:	add	x1, x1, #0x310
  451f98:	mov	x0, x20
  451f9c:	bl	450a68 <ferror@plt+0x4dd38>
  451fa0:	b	452148 <ferror@plt+0x4f418>
  451fa4:	add	x22, x19, #0x1
  451fa8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451fac:	add	x1, x1, #0x8a8
  451fb0:	mov	x0, x20
  451fb4:	bl	450a68 <ferror@plt+0x4dd38>
  451fb8:	b	452148 <ferror@plt+0x4f418>
  451fbc:	add	x22, x19, #0x1
  451fc0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451fc4:	add	x1, x1, #0x2d0
  451fc8:	mov	x0, x20
  451fcc:	bl	450a68 <ferror@plt+0x4dd38>
  451fd0:	b	452148 <ferror@plt+0x4f418>
  451fd4:	add	x22, x19, #0x1
  451fd8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451fdc:	add	x1, x1, #0x2b8
  451fe0:	mov	x0, x20
  451fe4:	bl	450a68 <ferror@plt+0x4dd38>
  451fe8:	b	452148 <ferror@plt+0x4f418>
  451fec:	add	x22, x19, #0x1
  451ff0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  451ff4:	add	x1, x1, #0x8b0
  451ff8:	mov	x0, x20
  451ffc:	bl	450a68 <ferror@plt+0x4dd38>
  452000:	b	452148 <ferror@plt+0x4f418>
  452004:	add	x22, x19, #0x1
  452008:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45200c:	add	x1, x1, #0x8b8
  452010:	mov	x0, x20
  452014:	bl	450a68 <ferror@plt+0x4dd38>
  452018:	b	452148 <ferror@plt+0x4f418>
  45201c:	add	x22, x19, #0x1
  452020:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452024:	add	x1, x1, #0x8c0
  452028:	mov	x0, x20
  45202c:	bl	450a68 <ferror@plt+0x4dd38>
  452030:	b	452148 <ferror@plt+0x4f418>
  452034:	add	x22, x19, #0x1
  452038:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45203c:	add	x1, x1, #0x8c8
  452040:	mov	x0, x20
  452044:	bl	450a68 <ferror@plt+0x4dd38>
  452048:	b	452148 <ferror@plt+0x4f418>
  45204c:	add	x22, x19, #0x1
  452050:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452054:	add	x1, x1, #0x8d0
  452058:	mov	x0, x20
  45205c:	bl	450a68 <ferror@plt+0x4dd38>
  452060:	b	452148 <ferror@plt+0x4f418>
  452064:	add	x22, x19, #0x1
  452068:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45206c:	add	x1, x1, #0x8d8
  452070:	mov	x0, x20
  452074:	bl	450a68 <ferror@plt+0x4dd38>
  452078:	b	452148 <ferror@plt+0x4f418>
  45207c:	add	x22, x19, #0x1
  452080:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452084:	add	x1, x1, #0x8e0
  452088:	mov	x0, x20
  45208c:	bl	450a68 <ferror@plt+0x4dd38>
  452090:	b	452148 <ferror@plt+0x4f418>
  452094:	add	x22, x19, #0x1
  452098:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45209c:	add	x1, x1, #0x298
  4520a0:	mov	x0, x20
  4520a4:	bl	450a68 <ferror@plt+0x4dd38>
  4520a8:	b	452148 <ferror@plt+0x4f418>
  4520ac:	add	x22, x19, #0x1
  4520b0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4520b4:	add	x1, x1, #0x2a8
  4520b8:	mov	x0, x20
  4520bc:	bl	450a68 <ferror@plt+0x4dd38>
  4520c0:	b	452148 <ferror@plt+0x4f418>
  4520c4:	add	x22, x19, #0x1
  4520c8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4520cc:	add	x1, x1, #0x8e8
  4520d0:	mov	x0, x20
  4520d4:	bl	450a68 <ferror@plt+0x4dd38>
  4520d8:	b	452148 <ferror@plt+0x4f418>
  4520dc:	add	x22, x19, #0x1
  4520e0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4520e4:	add	x1, x1, #0x8f0
  4520e8:	mov	x0, x20
  4520ec:	bl	450a68 <ferror@plt+0x4dd38>
  4520f0:	b	452148 <ferror@plt+0x4f418>
  4520f4:	ldrb	w0, [x19, #1]
  4520f8:	cmp	w0, #0x69
  4520fc:	b.eq	452124 <ferror@plt+0x4f3f4>  // b.none
  452100:	mov	x22, #0x0                   	// #0
  452104:	cmp	w0, #0x6b
  452108:	b.ne	452148 <ferror@plt+0x4f418>  // b.any
  45210c:	add	x22, x19, #0x2
  452110:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452114:	add	x1, x1, #0x900
  452118:	mov	x0, x20
  45211c:	bl	450a68 <ferror@plt+0x4dd38>
  452120:	b	452148 <ferror@plt+0x4f418>
  452124:	add	x22, x19, #0x2
  452128:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45212c:	add	x1, x1, #0x8f8
  452130:	mov	x0, x20
  452134:	bl	450a68 <ferror@plt+0x4dd38>
  452138:	b	452148 <ferror@plt+0x4f418>
  45213c:	mov	x22, x1
  452140:	b	452148 <ferror@plt+0x4f418>
  452144:	mov	x22, #0x0                   	// #0
  452148:	mov	x0, x22
  45214c:	ldp	x19, x20, [sp, #16]
  452150:	ldp	x21, x22, [sp, #32]
  452154:	ldp	x29, x30, [sp], #80
  452158:	ret
  45215c:	mov	x22, #0x0                   	// #0
  452160:	b	452148 <ferror@plt+0x4f418>
  452164:	stp	x29, x30, [sp, #-64]!
  452168:	mov	x29, sp
  45216c:	stp	x19, x20, [sp, #16]
  452170:	mov	x19, x1
  452174:	cbz	x1, 452224 <ferror@plt+0x4f4f4>
  452178:	stp	x21, x22, [sp, #32]
  45217c:	stp	x23, x24, [sp, #48]
  452180:	mov	x20, x0
  452184:	mov	x2, #0x0                   	// #0
  452188:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45218c:	add	x23, x1, #0xe10
  452190:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452194:	add	x21, x1, #0x7b8
  452198:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45219c:	ldrb	w1, [x19]
  4521a0:	cbz	w1, 452314 <ferror@plt+0x4f5e4>
  4521a4:	cmp	w1, #0x59
  4521a8:	b.eq	452234 <ferror@plt+0x4f504>  // b.none
  4521ac:	cmp	w1, #0x5a
  4521b0:	b.eq	45226c <ferror@plt+0x4f53c>  // b.none
  4521b4:	cmp	w1, #0x58
  4521b8:	b.eq	452208 <ferror@plt+0x4f4d8>  // b.none
  4521bc:	add	x24, x2, #0x1
  4521c0:	cbnz	x2, 45227c <ferror@plt+0x4f54c>
  4521c4:	ldrb	w0, [x19]
  4521c8:	cmp	w0, #0x4d
  4521cc:	b.eq	45228c <ferror@plt+0x4f55c>  // b.none
  4521d0:	ldrb	w0, [x19]
  4521d4:	cmp	w0, #0x4e
  4521d8:	b.eq	4522a0 <ferror@plt+0x4f570>  // b.none
  4521dc:	ldrb	w0, [x19]
  4521e0:	cmp	w0, #0x4b
  4521e4:	b.eq	452300 <ferror@plt+0x4f5d0>  // b.none
  4521e8:	cmp	w0, #0x4c
  4521ec:	b.ne	4522e0 <ferror@plt+0x4f5b0>  // b.any
  4521f0:	add	x19, x19, #0x1
  4521f4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4521f8:	add	x1, x1, #0x910
  4521fc:	mov	x0, x20
  452200:	bl	450a68 <ferror@plt+0x4dd38>
  452204:	b	4522ac <ferror@plt+0x4f57c>
  452208:	add	x19, x19, #0x1
  45220c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  452210:	add	x1, x1, #0xc10
  452214:	mov	x0, x20
  452218:	bl	450a68 <ferror@plt+0x4dd38>
  45221c:	ldp	x21, x22, [sp, #32]
  452220:	ldp	x23, x24, [sp, #48]
  452224:	mov	x0, x19
  452228:	ldp	x19, x20, [sp, #16]
  45222c:	ldp	x29, x30, [sp], #64
  452230:	ret
  452234:	add	x19, x19, #0x1
  452238:	cbnz	x2, 452258 <ferror@plt+0x4f528>
  45223c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  452240:	add	x1, x1, #0xc10
  452244:	mov	x0, x20
  452248:	bl	450a68 <ferror@plt+0x4dd38>
  45224c:	ldp	x21, x22, [sp, #32]
  452250:	ldp	x23, x24, [sp, #48]
  452254:	b	452224 <ferror@plt+0x4f4f4>
  452258:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45225c:	add	x1, x1, #0xe10
  452260:	mov	x0, x20
  452264:	bl	450a68 <ferror@plt+0x4dd38>
  452268:	b	45223c <ferror@plt+0x4f50c>
  45226c:	add	x19, x19, #0x1
  452270:	ldp	x21, x22, [sp, #32]
  452274:	ldp	x23, x24, [sp, #48]
  452278:	b	452224 <ferror@plt+0x4f4f4>
  45227c:	mov	x1, x23
  452280:	mov	x0, x20
  452284:	bl	450a68 <ferror@plt+0x4dd38>
  452288:	b	4521c4 <ferror@plt+0x4f494>
  45228c:	add	x19, x19, #0x1
  452290:	mov	x1, x21
  452294:	mov	x0, x20
  452298:	bl	450a68 <ferror@plt+0x4dd38>
  45229c:	b	4521d0 <ferror@plt+0x4f4a0>
  4522a0:	ldrb	w0, [x19, #1]
  4522a4:	cmp	w0, #0x6b
  4522a8:	b.eq	4522c8 <ferror@plt+0x4f598>  // b.none
  4522ac:	mov	x1, x19
  4522b0:	mov	x0, x20
  4522b4:	bl	451acc <ferror@plt+0x4ed9c>
  4522b8:	mov	x19, x0
  4522bc:	cbz	x0, 452320 <ferror@plt+0x4f5f0>
  4522c0:	mov	x2, x24
  4522c4:	b	45219c <ferror@plt+0x4f46c>
  4522c8:	add	x19, x19, #0x2
  4522cc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4522d0:	add	x1, x1, #0x7b0
  4522d4:	mov	x0, x20
  4522d8:	bl	450a68 <ferror@plt+0x4dd38>
  4522dc:	b	4521dc <ferror@plt+0x4f4ac>
  4522e0:	cmp	w0, #0x4a
  4522e4:	b.ne	4522ac <ferror@plt+0x4f57c>  // b.any
  4522e8:	add	x19, x19, #0x1
  4522ec:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4522f0:	add	x1, x1, #0x908
  4522f4:	mov	x0, x20
  4522f8:	bl	450a68 <ferror@plt+0x4dd38>
  4522fc:	b	4522ac <ferror@plt+0x4f57c>
  452300:	add	x19, x19, #0x1
  452304:	add	x1, x22, #0x778
  452308:	mov	x0, x20
  45230c:	bl	450a68 <ferror@plt+0x4dd38>
  452310:	b	4522ac <ferror@plt+0x4f57c>
  452314:	ldp	x21, x22, [sp, #32]
  452318:	ldp	x23, x24, [sp, #48]
  45231c:	b	452224 <ferror@plt+0x4f4f4>
  452320:	ldp	x21, x22, [sp, #32]
  452324:	ldp	x23, x24, [sp, #48]
  452328:	b	452224 <ferror@plt+0x4f4f4>
  45232c:	stp	x29, x30, [sp, #-128]!
  452330:	mov	x29, sp
  452334:	stp	x19, x20, [sp, #16]
  452338:	cbz	x1, 452448 <ferror@plt+0x4f718>
  45233c:	mov	x19, x0
  452340:	ldrb	w0, [x1]
  452344:	mov	x20, #0x0                   	// #0
  452348:	cbz	w0, 452438 <ferror@plt+0x4f708>
  45234c:	stp	x21, x22, [sp, #32]
  452350:	str	xzr, [sp, #120]
  452354:	str	xzr, [sp, #112]
  452358:	str	xzr, [sp, #104]
  45235c:	str	xzr, [sp, #96]
  452360:	str	xzr, [sp, #88]
  452364:	str	xzr, [sp, #80]
  452368:	str	xzr, [sp, #72]
  45236c:	str	xzr, [sp, #64]
  452370:	str	xzr, [sp, #56]
  452374:	mov	x0, x19
  452378:	bl	450bb4 <ferror@plt+0x4de84>
  45237c:	mov	x1, x0
  452380:	add	x0, sp, #0x68
  452384:	bl	450c84 <ferror@plt+0x4df54>
  452388:	mov	x20, x0
  45238c:	add	x0, sp, #0x68
  452390:	bl	45088c <ferror@plt+0x4db5c>
  452394:	mov	w21, w0
  452398:	mov	x1, x20
  45239c:	add	x0, sp, #0x50
  4523a0:	bl	452164 <ferror@plt+0x4f434>
  4523a4:	mov	x20, x0
  4523a8:	add	x0, sp, #0x50
  4523ac:	bl	45088c <ferror@plt+0x4db5c>
  4523b0:	mov	w22, w0
  4523b4:	mov	x1, x20
  4523b8:	add	x0, sp, #0x38
  4523bc:	bl	451acc <ferror@plt+0x4ed9c>
  4523c0:	mov	x20, x0
  4523c4:	add	x0, sp, #0x38
  4523c8:	bl	45088c <ferror@plt+0x4db5c>
  4523cc:	mov	w2, w0
  4523d0:	ldr	x1, [sp, #56]
  4523d4:	mov	x0, x19
  4523d8:	bl	450f34 <ferror@plt+0x4e204>
  4523dc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4523e0:	add	x1, x1, #0x860
  4523e4:	mov	x0, x19
  4523e8:	bl	450a68 <ferror@plt+0x4dd38>
  4523ec:	mov	w2, w22
  4523f0:	ldr	x1, [sp, #80]
  4523f4:	mov	x0, x19
  4523f8:	bl	450f34 <ferror@plt+0x4e204>
  4523fc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452400:	add	x1, x1, #0x708
  452404:	mov	x0, x19
  452408:	bl	450a68 <ferror@plt+0x4dd38>
  45240c:	mov	w2, w21
  452410:	ldr	x1, [sp, #104]
  452414:	mov	x0, x19
  452418:	bl	450f34 <ferror@plt+0x4e204>
  45241c:	add	x0, sp, #0x68
  452420:	bl	450998 <ferror@plt+0x4dc68>
  452424:	add	x0, sp, #0x50
  452428:	bl	450998 <ferror@plt+0x4dc68>
  45242c:	add	x0, sp, #0x38
  452430:	bl	450998 <ferror@plt+0x4dc68>
  452434:	ldp	x21, x22, [sp, #32]
  452438:	mov	x0, x20
  45243c:	ldp	x19, x20, [sp, #16]
  452440:	ldp	x29, x30, [sp], #128
  452444:	ret
  452448:	mov	x20, x1
  45244c:	b	452438 <ferror@plt+0x4f708>
  452450:	stp	x29, x30, [sp, #-80]!
  452454:	mov	x29, sp
  452458:	stp	x19, x20, [sp, #16]
  45245c:	stp	x21, x22, [sp, #32]
  452460:	mov	x20, x0
  452464:	mov	w21, w2
  452468:	mov	w2, #0x0                   	// #0
  45246c:	add	x1, x1, #0x2
  452470:	bl	452b24 <ferror@plt+0x4fdf4>
  452474:	mov	x19, x0
  452478:	cbz	x0, 452594 <ferror@plt+0x4f864>
  45247c:	ldrb	w0, [x0]
  452480:	cmp	w0, #0x5a
  452484:	b.eq	452508 <ferror@plt+0x4f7d8>  // b.none
  452488:	cmp	w0, #0x4d
  45248c:	str	xzr, [sp, #72]
  452490:	str	xzr, [sp, #64]
  452494:	str	xzr, [sp, #56]
  452498:	cinc	x1, x19, eq  // eq = none
  45249c:	add	x0, sp, #0x38
  4524a0:	bl	450ac8 <ferror@plt+0x4dd98>
  4524a4:	mov	x19, x0
  4524a8:	cbz	x0, 4524b4 <ferror@plt+0x4f784>
  4524ac:	bl	450964 <ferror@plt+0x4dc34>
  4524b0:	cbnz	w0, 452514 <ferror@plt+0x4f7e4>
  4524b4:	mov	x0, x20
  4524b8:	bl	45088c <ferror@plt+0x4db5c>
  4524bc:	mov	w22, w0
  4524c0:	mov	x1, x19
  4524c4:	mov	x0, x20
  4524c8:	bl	451acc <ferror@plt+0x4ed9c>
  4524cc:	mov	x19, x0
  4524d0:	mov	w1, w22
  4524d4:	mov	x0, x20
  4524d8:	bl	4508a4 <ferror@plt+0x4db74>
  4524dc:	add	x0, sp, #0x38
  4524e0:	bl	450998 <ferror@plt+0x4dc68>
  4524e4:	cbnz	w21, 4524f4 <ferror@plt+0x4f7c4>
  4524e8:	cbz	x19, 452598 <ferror@plt+0x4f868>
  4524ec:	ldrb	w0, [x19]
  4524f0:	cbnz	w0, 452598 <ferror@plt+0x4f868>
  4524f4:	mov	x0, x19
  4524f8:	ldp	x19, x20, [sp, #16]
  4524fc:	ldp	x21, x22, [sp, #32]
  452500:	ldp	x29, x30, [sp], #80
  452504:	ret
  452508:	add	x19, x19, #0x1
  45250c:	cbnz	w21, 4524f4 <ferror@plt+0x4f7c4>
  452510:	b	4524ec <ferror@plt+0x4f7bc>
  452514:	mov	x0, x20
  452518:	bl	45088c <ferror@plt+0x4db5c>
  45251c:	mov	w22, w0
  452520:	mov	x1, x19
  452524:	mov	x0, x20
  452528:	bl	450bb4 <ferror@plt+0x4de84>
  45252c:	mov	x1, x0
  452530:	mov	x0, x20
  452534:	bl	450c84 <ferror@plt+0x4df54>
  452538:	mov	x19, x0
  45253c:	mov	w1, w22
  452540:	mov	x0, x20
  452544:	bl	4508a4 <ferror@plt+0x4db74>
  452548:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45254c:	add	x1, x1, #0x860
  452550:	mov	x0, x20
  452554:	bl	450a68 <ferror@plt+0x4dd38>
  452558:	mov	x1, x19
  45255c:	mov	x0, x20
  452560:	bl	452164 <ferror@plt+0x4f434>
  452564:	mov	x19, x0
  452568:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  45256c:	add	x1, x1, #0xee0
  452570:	mov	x0, x20
  452574:	bl	450a68 <ferror@plt+0x4dd38>
  452578:	add	x0, sp, #0x38
  45257c:	bl	45088c <ferror@plt+0x4db5c>
  452580:	mov	w2, w0
  452584:	ldr	x1, [sp, #56]
  452588:	mov	x0, x20
  45258c:	bl	450f34 <ferror@plt+0x4e204>
  452590:	b	4524b4 <ferror@plt+0x4f784>
  452594:	cbnz	w21, 4524f4 <ferror@plt+0x4f7c4>
  452598:	mov	x19, #0x0                   	// #0
  45259c:	b	4524f4 <ferror@plt+0x4f7c4>
  4525a0:	stp	x29, x30, [sp, #-128]!
  4525a4:	mov	x29, sp
  4525a8:	stp	x19, x20, [sp, #16]
  4525ac:	stp	x21, x22, [sp, #32]
  4525b0:	stp	x23, x24, [sp, #48]
  4525b4:	mov	x23, x0
  4525b8:	mov	x0, x1
  4525bc:	mov	w20, w2
  4525c0:	add	x1, sp, #0x78
  4525c4:	bl	4508e0 <ferror@plt+0x4dbb0>
  4525c8:	mov	x21, x0
  4525cc:	cbz	x0, 452920 <ferror@plt+0x4fbf0>
  4525d0:	ldr	x19, [sp, #120]
  4525d4:	cbz	x19, 452ae0 <ferror@plt+0x4fdb0>
  4525d8:	cmp	w20, #0x4
  4525dc:	b.eq	452664 <ferror@plt+0x4f934>  // b.none
  4525e0:	bl	402680 <strlen@plt>
  4525e4:	cmp	x0, x19
  4525e8:	b.cc	452af8 <ferror@plt+0x4fdc8>  // b.lo, b.ul, b.last
  4525ec:	cmp	x19, #0x4
  4525f0:	b.le	452600 <ferror@plt+0x4f8d0>
  4525f4:	ldrb	w0, [x21]
  4525f8:	cmp	w0, #0x5f
  4525fc:	b.eq	45273c <ferror@plt+0x4fa0c>  // b.none
  452600:	cmp	x19, #0xa
  452604:	b.eq	452a60 <ferror@plt+0x4fd30>  // b.none
  452608:	b.le	4528e0 <ferror@plt+0x4fbb0>
  45260c:	cmp	x19, #0xb
  452610:	b.eq	452a98 <ferror@plt+0x4fd68>  // b.none
  452614:	cmp	x19, #0xc
  452618:	b.ne	452908 <ferror@plt+0x4fbd8>  // b.any
  45261c:	mov	x2, #0xd                   	// #13
  452620:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452624:	add	x1, x1, #0x9c8
  452628:	mov	x0, x21
  45262c:	bl	402830 <strncmp@plt>
  452630:	cbnz	w0, 452908 <ferror@plt+0x4fbd8>
  452634:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452638:	add	x1, x1, #0x9d8
  45263c:	mov	x0, x23
  452640:	bl	450e88 <ferror@plt+0x4e158>
  452644:	mov	x0, x23
  452648:	bl	45088c <ferror@plt+0x4db5c>
  45264c:	sub	w1, w0, #0x1
  452650:	mov	x0, x23
  452654:	bl	4508a4 <ferror@plt+0x4db74>
  452658:	ldr	x0, [sp, #120]
  45265c:	add	x21, x21, x0
  452660:	b	452920 <ferror@plt+0x4fbf0>
  452664:	stp	x25, x26, [sp, #64]
  452668:	stp	x27, x28, [sp, #80]
  45266c:	mov	x0, x23
  452670:	bl	45088c <ferror@plt+0x4db5c>
  452674:	mov	w25, w0
  452678:	mov	x20, x21
  45267c:	mov	x22, x21
  452680:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  452684:	add	x24, x24, #0x28
  452688:	adrp	x27, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45268c:	add	x27, x27, #0x918
  452690:	mov	x28, #0x2                   	// #2
  452694:	mov	x26, #0x6666666666666666    	// #7378697629483820646
  452698:	movk	x26, #0x6667
  45269c:	b	4526f8 <ferror@plt+0x4f9c8>
  4526a0:	mov	w2, #0x3                   	// #3
  4526a4:	mov	x1, x20
  4526a8:	mov	x0, x23
  4526ac:	bl	452b24 <ferror@plt+0x4fdf4>
  4526b0:	mov	x20, x0
  4526b4:	cbz	x20, 4526c4 <ferror@plt+0x4f994>
  4526b8:	sub	x0, x20, x22
  4526bc:	cmp	x0, x19
  4526c0:	b.eq	452ae8 <ferror@plt+0x4fdb8>  // b.none
  4526c4:	smulh	x0, x19, x26
  4526c8:	asr	x0, x0, #2
  4526cc:	sub	x19, x0, x19, asr #63
  4526d0:	mov	w1, w25
  4526d4:	mov	x0, x23
  4526d8:	bl	4508a4 <ferror@plt+0x4db74>
  4526dc:	sub	x20, x22, #0x1
  4526e0:	cbz	x21, 452730 <ferror@plt+0x4fa00>
  4526e4:	mov	x22, x20
  4526e8:	cbnz	x19, 4526f8 <ferror@plt+0x4f9c8>
  4526ec:	ldr	x19, [sp, #120]
  4526f0:	mov	x22, x21
  4526f4:	mov	x21, #0x0                   	// #0
  4526f8:	ldrb	w0, [x20]
  4526fc:	ldrh	w0, [x24, x0, lsl #1]
  452700:	tbnz	w0, #2, 4526a0 <ferror@plt+0x4f970>
  452704:	mov	x2, x28
  452708:	mov	x1, x27
  45270c:	mov	x0, x20
  452710:	bl	402830 <strncmp@plt>
  452714:	cbnz	w0, 4526b8 <ferror@plt+0x4f988>
  452718:	mov	w2, #0x1                   	// #1
  45271c:	mov	x1, x20
  452720:	mov	x0, x23
  452724:	bl	452450 <ferror@plt+0x4f720>
  452728:	mov	x20, x0
  45272c:	b	4526b4 <ferror@plt+0x4f984>
  452730:	ldp	x25, x26, [sp, #64]
  452734:	ldp	x27, x28, [sp, #80]
  452738:	b	452920 <ferror@plt+0x4fbf0>
  45273c:	ldrb	w0, [x21, #1]
  452740:	cmp	w0, #0x5f
  452744:	b.ne	452600 <ferror@plt+0x4f8d0>  // b.any
  452748:	ldrb	w0, [x21, #2]
  45274c:	sub	w0, w0, #0x54
  452750:	and	w0, w0, #0xff
  452754:	cmp	w0, #0x1
  452758:	b.hi	452600 <ferror@plt+0x4f8d0>  // b.pmore
  45275c:	ldrb	w1, [x21, #3]
  452760:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  452764:	add	x0, x0, #0x28
  452768:	ldrh	w0, [x0, w1, sxtw #1]
  45276c:	and	w0, w0, #0x4
  452770:	cmp	w1, #0x30
  452774:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  452778:	b.eq	452b00 <ferror@plt+0x4fdd0>  // b.none
  45277c:	mov	w2, #0x3                   	// #3
  452780:	add	x1, x21, #0x3
  452784:	mov	x0, x23
  452788:	bl	4525a0 <ferror@plt+0x4f870>
  45278c:	mov	x20, x0
  452790:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452794:	add	x1, x1, #0x920
  452798:	mov	x0, x23
  45279c:	bl	450a68 <ferror@plt+0x4dd38>
  4527a0:	mov	x22, #0x0                   	// #0
  4527a4:	cbz	x20, 452b0c <ferror@plt+0x4fddc>
  4527a8:	stp	x25, x26, [sp, #64]
  4527ac:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4527b0:	add	x24, x24, #0xe10
  4527b4:	mov	w26, #0x1                   	// #1
  4527b8:	mov	w25, #0x4                   	// #4
  4527bc:	b	452814 <ferror@plt+0x4fae4>
  4527c0:	add	x20, x20, #0x1
  4527c4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4527c8:	add	x1, x1, #0xee0
  4527cc:	mov	x0, x23
  4527d0:	bl	450a68 <ferror@plt+0x4dd38>
  4527d4:	sub	x21, x20, x21
  4527d8:	cmp	x19, x21
  4527dc:	csel	x21, x20, xzr, eq  // eq = none
  4527e0:	ldp	x25, x26, [sp, #64]
  4527e4:	b	452920 <ferror@plt+0x4fbf0>
  4527e8:	mov	x1, x24
  4527ec:	mov	x0, x23
  4527f0:	bl	450a68 <ferror@plt+0x4dd38>
  4527f4:	b	452828 <ferror@plt+0x4faf8>
  4527f8:	mov	w2, w25
  4527fc:	add	x1, x20, #0x1
  452800:	mov	x0, x23
  452804:	bl	4525a0 <ferror@plt+0x4f870>
  452808:	mov	x20, x0
  45280c:	add	x22, x22, #0x1
  452810:	cbz	x20, 452b08 <ferror@plt+0x4fdd8>
  452814:	ldrb	w0, [x20]
  452818:	cbz	w0, 4527c4 <ferror@plt+0x4fa94>
  45281c:	cmp	w0, #0x5a
  452820:	b.eq	4527c0 <ferror@plt+0x4fa90>  // b.none
  452824:	cbnz	x22, 4527e8 <ferror@plt+0x4fab8>
  452828:	ldrb	w0, [x20]
  45282c:	cmp	w0, #0x48
  452830:	cinc	x20, x20, eq  // eq = none
  452834:	ldrb	w0, [x20]
  452838:	cmp	w0, #0x54
  45283c:	b.eq	45286c <ferror@plt+0x4fb3c>  // b.none
  452840:	cmp	w0, #0x56
  452844:	b.eq	452880 <ferror@plt+0x4fb50>  // b.none
  452848:	cmp	w0, #0x53
  45284c:	b.eq	4527f8 <ferror@plt+0x4fac8>  // b.none
  452850:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  452854:	add	x1, x1, #0xee0
  452858:	mov	x0, x23
  45285c:	bl	450a68 <ferror@plt+0x4dd38>
  452860:	mov	x21, #0x0                   	// #0
  452864:	ldp	x25, x26, [sp, #64]
  452868:	b	452920 <ferror@plt+0x4fbf0>
  45286c:	add	x1, x20, #0x1
  452870:	mov	x0, x23
  452874:	bl	451acc <ferror@plt+0x4ed9c>
  452878:	mov	x20, x0
  45287c:	b	45280c <ferror@plt+0x4fadc>
  452880:	stp	x27, x28, [sp, #80]
  452884:	ldrb	w27, [x20, #1]
  452888:	str	xzr, [sp, #112]
  45288c:	str	xzr, [sp, #104]
  452890:	str	xzr, [sp, #96]
  452894:	add	x1, x20, #0x1
  452898:	add	x0, sp, #0x60
  45289c:	bl	451acc <ferror@plt+0x4ed9c>
  4528a0:	mov	x20, x0
  4528a4:	mov	w1, w26
  4528a8:	add	x0, sp, #0x60
  4528ac:	bl	4509cc <ferror@plt+0x4dc9c>
  4528b0:	ldr	x0, [sp, #104]
  4528b4:	strb	wzr, [x0]
  4528b8:	mov	w3, w27
  4528bc:	ldr	x2, [sp, #96]
  4528c0:	mov	x1, x20
  4528c4:	mov	x0, x23
  4528c8:	bl	451468 <ferror@plt+0x4e738>
  4528cc:	mov	x20, x0
  4528d0:	add	x0, sp, #0x60
  4528d4:	bl	450998 <ferror@plt+0x4dc68>
  4528d8:	ldp	x27, x28, [sp, #80]
  4528dc:	b	45280c <ferror@plt+0x4fadc>
  4528e0:	cmp	x19, #0x6
  4528e4:	b.eq	452938 <ferror@plt+0x4fc08>  // b.none
  4528e8:	cmp	x19, #0x7
  4528ec:	b.ne	452908 <ferror@plt+0x4fbd8>  // b.any
  4528f0:	mov	x2, #0x8                   	// #8
  4528f4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4528f8:	add	x1, x1, #0x968
  4528fc:	mov	x0, x21
  452900:	bl	402830 <strncmp@plt>
  452904:	cbz	w0, 452a30 <ferror@plt+0x4fd00>
  452908:	mov	w2, w19
  45290c:	mov	x1, x21
  452910:	mov	x0, x23
  452914:	bl	450f34 <ferror@plt+0x4e204>
  452918:	ldr	x0, [sp, #120]
  45291c:	add	x21, x21, x0
  452920:	mov	x0, x21
  452924:	ldp	x19, x20, [sp, #16]
  452928:	ldp	x21, x22, [sp, #32]
  45292c:	ldp	x23, x24, [sp, #48]
  452930:	ldp	x29, x30, [sp], #128
  452934:	ret
  452938:	mov	x2, #0x6                   	// #6
  45293c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452940:	add	x1, x1, #0x928
  452944:	mov	x0, x21
  452948:	bl	402830 <strncmp@plt>
  45294c:	cbz	w0, 4529c8 <ferror@plt+0x4fc98>
  452950:	mov	x2, #0x6                   	// #6
  452954:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452958:	add	x1, x1, #0x930
  45295c:	mov	x0, x21
  452960:	bl	402830 <strncmp@plt>
  452964:	cbz	w0, 4529e4 <ferror@plt+0x4fcb4>
  452968:	mov	x2, #0x7                   	// #7
  45296c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452970:	add	x1, x1, #0x940
  452974:	mov	x0, x21
  452978:	bl	402830 <strncmp@plt>
  45297c:	cbz	w0, 452a00 <ferror@plt+0x4fcd0>
  452980:	mov	x2, #0x7                   	// #7
  452984:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452988:	add	x1, x1, #0x960
  45298c:	mov	x0, x21
  452990:	bl	402830 <strncmp@plt>
  452994:	cbnz	w0, 452908 <ferror@plt+0x4fbd8>
  452998:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  45299c:	add	x1, x1, #0xcf0
  4529a0:	mov	x0, x23
  4529a4:	bl	450e88 <ferror@plt+0x4e158>
  4529a8:	mov	x0, x23
  4529ac:	bl	45088c <ferror@plt+0x4db5c>
  4529b0:	sub	w1, w0, #0x1
  4529b4:	mov	x0, x23
  4529b8:	bl	4508a4 <ferror@plt+0x4db74>
  4529bc:	ldr	x0, [sp, #120]
  4529c0:	add	x21, x21, x0
  4529c4:	b	452920 <ferror@plt+0x4fbf0>
  4529c8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4529cc:	add	x1, x1, #0xf48
  4529d0:	mov	x0, x23
  4529d4:	bl	450a68 <ferror@plt+0x4dd38>
  4529d8:	ldr	x0, [sp, #120]
  4529dc:	add	x21, x21, x0
  4529e0:	b	452920 <ferror@plt+0x4fbf0>
  4529e4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4529e8:	add	x1, x1, #0x938
  4529ec:	mov	x0, x23
  4529f0:	bl	450a68 <ferror@plt+0x4dd38>
  4529f4:	ldr	x0, [sp, #120]
  4529f8:	add	x21, x21, x0
  4529fc:	b	452920 <ferror@plt+0x4fbf0>
  452a00:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452a04:	add	x1, x1, #0x948
  452a08:	mov	x0, x23
  452a0c:	bl	450e88 <ferror@plt+0x4e158>
  452a10:	mov	x0, x23
  452a14:	bl	45088c <ferror@plt+0x4db5c>
  452a18:	sub	w1, w0, #0x1
  452a1c:	mov	x0, x23
  452a20:	bl	4508a4 <ferror@plt+0x4db74>
  452a24:	ldr	x0, [sp, #120]
  452a28:	add	x21, x21, x0
  452a2c:	b	452920 <ferror@plt+0x4fbf0>
  452a30:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452a34:	add	x1, x1, #0x978
  452a38:	mov	x0, x23
  452a3c:	bl	450e88 <ferror@plt+0x4e158>
  452a40:	mov	x0, x23
  452a44:	bl	45088c <ferror@plt+0x4db5c>
  452a48:	sub	w1, w0, #0x1
  452a4c:	mov	x0, x23
  452a50:	bl	4508a4 <ferror@plt+0x4db74>
  452a54:	ldr	x0, [sp, #120]
  452a58:	add	x21, x21, x0
  452a5c:	b	452920 <ferror@plt+0x4fbf0>
  452a60:	mov	x2, #0xd                   	// #13
  452a64:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452a68:	add	x1, x1, #0x988
  452a6c:	mov	x0, x21
  452a70:	bl	402830 <strncmp@plt>
  452a74:	cbnz	w0, 452908 <ferror@plt+0x4fbd8>
  452a78:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452a7c:	add	x1, x1, #0x998
  452a80:	mov	x0, x23
  452a84:	bl	450a68 <ferror@plt+0x4dd38>
  452a88:	ldr	x0, [sp, #120]
  452a8c:	add	x0, x0, #0x3
  452a90:	add	x21, x21, x0
  452a94:	b	452920 <ferror@plt+0x4fbf0>
  452a98:	mov	x2, #0xc                   	// #12
  452a9c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452aa0:	add	x1, x1, #0x9a8
  452aa4:	mov	x0, x21
  452aa8:	bl	402830 <strncmp@plt>
  452aac:	cbnz	w0, 452908 <ferror@plt+0x4fbd8>
  452ab0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452ab4:	add	x1, x1, #0x9b8
  452ab8:	mov	x0, x23
  452abc:	bl	450e88 <ferror@plt+0x4e158>
  452ac0:	mov	x0, x23
  452ac4:	bl	45088c <ferror@plt+0x4db5c>
  452ac8:	sub	w1, w0, #0x1
  452acc:	mov	x0, x23
  452ad0:	bl	4508a4 <ferror@plt+0x4db74>
  452ad4:	ldr	x0, [sp, #120]
  452ad8:	add	x21, x21, x0
  452adc:	b	452920 <ferror@plt+0x4fbf0>
  452ae0:	mov	x21, #0x0                   	// #0
  452ae4:	b	452920 <ferror@plt+0x4fbf0>
  452ae8:	mov	x21, x20
  452aec:	ldp	x25, x26, [sp, #64]
  452af0:	ldp	x27, x28, [sp, #80]
  452af4:	b	452920 <ferror@plt+0x4fbf0>
  452af8:	mov	x21, #0x0                   	// #0
  452afc:	b	452920 <ferror@plt+0x4fbf0>
  452b00:	mov	x21, #0x0                   	// #0
  452b04:	b	452920 <ferror@plt+0x4fbf0>
  452b08:	ldp	x25, x26, [sp, #64]
  452b0c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  452b10:	add	x1, x1, #0xee0
  452b14:	mov	x0, x23
  452b18:	bl	450a68 <ferror@plt+0x4dd38>
  452b1c:	mov	x21, #0x0                   	// #0
  452b20:	b	452920 <ferror@plt+0x4fbf0>
  452b24:	stp	x29, x30, [sp, #-96]!
  452b28:	mov	x29, sp
  452b2c:	stp	x19, x20, [sp, #16]
  452b30:	stp	x21, x22, [sp, #32]
  452b34:	stp	x23, x24, [sp, #48]
  452b38:	stp	x25, x26, [sp, #64]
  452b3c:	str	x27, [sp, #80]
  452b40:	mov	x21, x0
  452b44:	mov	x19, x1
  452b48:	mov	w24, w2
  452b4c:	mov	x22, #0x1                   	// #1
  452b50:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  452b54:	add	x23, x23, #0x28
  452b58:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452b5c:	add	x25, x25, #0x860
  452b60:	adrp	x26, 470000 <_obstack_memory_used@@Base+0x1bc60>
  452b64:	b	452b98 <ferror@plt+0x4fe68>
  452b68:	mov	w1, w27
  452b6c:	mov	x0, x21
  452b70:	bl	4508a4 <ferror@plt+0x4db74>
  452b74:	ldrb	w0, [x19]
  452b78:	ldrh	w0, [x23, x0, lsl #1]
  452b7c:	tbz	w0, #2, 452c84 <ferror@plt+0x4ff54>
  452b80:	cbz	x22, 452b94 <ferror@plt+0x4fe64>
  452b84:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452b88:	add	x1, x1, #0x600
  452b8c:	mov	x0, x21
  452b90:	bl	450a68 <ferror@plt+0x4dd38>
  452b94:	add	x22, x22, #0x1
  452b98:	ldrb	w0, [x19]
  452b9c:	cmp	w0, #0x30
  452ba0:	b.ne	452bb0 <ferror@plt+0x4fe80>  // b.any
  452ba4:	ldrb	w1, [x19, #1]!
  452ba8:	cmp	w1, #0x30
  452bac:	b.eq	452ba4 <ferror@plt+0x4fe74>  // b.none
  452bb0:	mov	w2, w24
  452bb4:	mov	x1, x19
  452bb8:	mov	x0, x21
  452bbc:	bl	4525a0 <ferror@plt+0x4f870>
  452bc0:	mov	x19, x0
  452bc4:	cbz	x0, 452c84 <ferror@plt+0x4ff54>
  452bc8:	ldrb	w0, [x0]
  452bcc:	cmp	w0, #0x4d
  452bd0:	b.eq	452c58 <ferror@plt+0x4ff28>  // b.none
  452bd4:	mov	x0, x19
  452bd8:	bl	450964 <ferror@plt+0x4dc34>
  452bdc:	cbz	w0, 452b74 <ferror@plt+0x4fe44>
  452be0:	mov	x0, x21
  452be4:	bl	45088c <ferror@plt+0x4db5c>
  452be8:	mov	w27, w0
  452bec:	mov	x20, x19
  452bf0:	mov	x1, x20
  452bf4:	mov	x0, x21
  452bf8:	bl	450bb4 <ferror@plt+0x4de84>
  452bfc:	mov	x1, x0
  452c00:	mov	x0, x21
  452c04:	bl	450c84 <ferror@plt+0x4df54>
  452c08:	mov	x20, x0
  452c0c:	mov	w1, w27
  452c10:	mov	x0, x21
  452c14:	bl	4508a4 <ferror@plt+0x4db74>
  452c18:	mov	x1, x25
  452c1c:	mov	x0, x21
  452c20:	bl	450a68 <ferror@plt+0x4dd38>
  452c24:	mov	x1, x20
  452c28:	mov	x0, x21
  452c2c:	bl	452164 <ferror@plt+0x4f434>
  452c30:	mov	x20, x0
  452c34:	add	x1, x26, #0xee0
  452c38:	mov	x0, x21
  452c3c:	bl	450a68 <ferror@plt+0x4dd38>
  452c40:	cbz	x20, 452b68 <ferror@plt+0x4fe38>
  452c44:	ldrb	w0, [x20]
  452c48:	ldrh	w0, [x23, x0, lsl #1]
  452c4c:	tbz	w0, #2, 452b68 <ferror@plt+0x4fe38>
  452c50:	mov	x19, x20
  452c54:	b	452b80 <ferror@plt+0x4fe50>
  452c58:	mov	x0, x21
  452c5c:	bl	45088c <ferror@plt+0x4db5c>
  452c60:	mov	w27, w0
  452c64:	add	x1, x19, #0x1
  452c68:	mov	x0, x21
  452c6c:	bl	450ac8 <ferror@plt+0x4dd98>
  452c70:	mov	x20, x0
  452c74:	mov	w1, w27
  452c78:	mov	x0, x21
  452c7c:	bl	4508a4 <ferror@plt+0x4db74>
  452c80:	b	452bf0 <ferror@plt+0x4fec0>
  452c84:	mov	x0, x19
  452c88:	ldp	x19, x20, [sp, #16]
  452c8c:	ldp	x21, x22, [sp, #32]
  452c90:	ldp	x23, x24, [sp, #48]
  452c94:	ldp	x25, x26, [sp, #64]
  452c98:	ldr	x27, [sp, #80]
  452c9c:	ldp	x29, x30, [sp], #96
  452ca0:	ret
  452ca4:	stp	x29, x30, [sp, #-64]!
  452ca8:	mov	x29, sp
  452cac:	str	x19, [sp, #16]
  452cb0:	mov	x19, x0
  452cb4:	cbz	x0, 452d68 <ferror@plt+0x50038>
  452cb8:	ldrb	w0, [x0]
  452cbc:	cbz	w0, 452d70 <ferror@plt+0x50040>
  452cc0:	mov	x2, #0x2                   	// #2
  452cc4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452cc8:	add	x1, x1, #0x918
  452ccc:	mov	x0, x19
  452cd0:	bl	402830 <strncmp@plt>
  452cd4:	mov	x1, #0x0                   	// #0
  452cd8:	cbnz	w0, 452d38 <ferror@plt+0x50008>
  452cdc:	str	xzr, [sp, #56]
  452ce0:	str	xzr, [sp, #48]
  452ce4:	str	xzr, [sp, #40]
  452ce8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452cec:	add	x1, x1, #0x9e8
  452cf0:	mov	x0, x19
  452cf4:	bl	402a20 <strcmp@plt>
  452cf8:	cbnz	w0, 452d48 <ferror@plt+0x50018>
  452cfc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452d00:	add	x1, x1, #0x9f0
  452d04:	add	x0, sp, #0x28
  452d08:	bl	450a68 <ferror@plt+0x4dd38>
  452d0c:	add	x0, sp, #0x28
  452d10:	bl	45088c <ferror@plt+0x4db5c>
  452d14:	mov	x1, #0x0                   	// #0
  452d18:	cmp	w0, #0x0
  452d1c:	b.le	452d38 <ferror@plt+0x50008>
  452d20:	mov	w1, #0x1                   	// #1
  452d24:	add	x0, sp, #0x28
  452d28:	bl	4509cc <ferror@plt+0x4dc9c>
  452d2c:	ldr	x0, [sp, #48]
  452d30:	strb	wzr, [x0]
  452d34:	ldr	x1, [sp, #40]
  452d38:	mov	x0, x1
  452d3c:	ldr	x19, [sp, #16]
  452d40:	ldp	x29, x30, [sp], #64
  452d44:	ret
  452d48:	mov	w2, #0x0                   	// #0
  452d4c:	mov	x1, x19
  452d50:	add	x0, sp, #0x28
  452d54:	bl	452450 <ferror@plt+0x4f720>
  452d58:	cbnz	x0, 452d0c <ferror@plt+0x4ffdc>
  452d5c:	add	x0, sp, #0x28
  452d60:	bl	450998 <ferror@plt+0x4dc68>
  452d64:	b	452d0c <ferror@plt+0x4ffdc>
  452d68:	mov	x1, x0
  452d6c:	b	452d38 <ferror@plt+0x50008>
  452d70:	mov	x1, #0x0                   	// #0
  452d74:	b	452d38 <ferror@plt+0x50008>
  452d78:	stp	x29, x30, [sp, #-16]!
  452d7c:	mov	x29, sp
  452d80:	bl	402a20 <strcmp@plt>
  452d84:	ldp	x29, x30, [sp], #16
  452d88:	ret
  452d8c:	stp	x29, x30, [sp, #-16]!
  452d90:	mov	x29, sp
  452d94:	bl	402830 <strncmp@plt>
  452d98:	ldp	x29, x30, [sp], #16
  452d9c:	ret
  452da0:	mov	x2, x0
  452da4:	ldrb	w1, [x2], #1
  452da8:	cbz	w1, 452de4 <ferror@plt+0x500b4>
  452dac:	mov	w0, #0x0                   	// #0
  452db0:	mov	w5, #0x2f                  	// #47
  452db4:	mov	w4, #0x43                  	// #67
  452db8:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x29c60>
  452dbc:	add	x3, x3, #0xf28
  452dc0:	cmp	w1, #0x5c
  452dc4:	csel	w1, w1, w5, ne  // ne = any
  452dc8:	mul	w0, w0, w4
  452dcc:	sub	w0, w0, #0x71
  452dd0:	ldrb	w1, [x3, w1, sxtw]
  452dd4:	add	w0, w1, w0
  452dd8:	ldrb	w1, [x2], #1
  452ddc:	cbnz	w1, 452dc0 <ferror@plt+0x50090>
  452de0:	ret
  452de4:	mov	w0, #0x0                   	// #0
  452de8:	b	452de0 <ferror@plt+0x500b0>
  452dec:	stp	x29, x30, [sp, #-16]!
  452df0:	mov	x29, sp
  452df4:	bl	402a20 <strcmp@plt>
  452df8:	cmp	w0, #0x0
  452dfc:	cset	w0, eq  // eq = none
  452e00:	ldp	x29, x30, [sp], #16
  452e04:	ret
  452e08:	stp	x29, x30, [sp, #-48]!
  452e0c:	mov	x29, sp
  452e10:	stp	x19, x20, [sp, #16]
  452e14:	str	x21, [sp, #32]
  452e18:	mov	x19, x1
  452e1c:	bl	453ff0 <ferror@plt+0x512c0>
  452e20:	mov	x20, x0
  452e24:	mov	x0, x19
  452e28:	bl	453ff0 <ferror@plt+0x512c0>
  452e2c:	mov	x19, x0
  452e30:	mov	x1, x0
  452e34:	mov	x0, x20
  452e38:	bl	452dec <ferror@plt+0x500bc>
  452e3c:	mov	w21, w0
  452e40:	mov	x0, x20
  452e44:	bl	402a90 <free@plt>
  452e48:	mov	x0, x19
  452e4c:	bl	402a90 <free@plt>
  452e50:	mov	w0, w21
  452e54:	ldp	x19, x20, [sp, #16]
  452e58:	ldr	x21, [sp, #32]
  452e5c:	ldp	x29, x30, [sp], #48
  452e60:	ret
  452e64:	cbz	x0, 452e80 <ferror@plt+0x50150>
  452e68:	stp	x29, x30, [sp, #-16]!
  452e6c:	mov	x29, sp
  452e70:	mov	w1, #0x2                   	// #2
  452e74:	bl	402c00 <__fsetlocking@plt>
  452e78:	ldp	x29, x30, [sp], #16
  452e7c:	ret
  452e80:	ret
  452e84:	stp	x29, x30, [sp, #-16]!
  452e88:	mov	x29, sp
  452e8c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  452e90:	ldr	x0, [x0, #1456]
  452e94:	cbz	x0, 452ea0 <ferror@plt+0x50170>
  452e98:	mov	w1, #0x2                   	// #2
  452e9c:	bl	402c00 <__fsetlocking@plt>
  452ea0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  452ea4:	ldr	x0, [x0, #1448]
  452ea8:	cbz	x0, 452eb4 <ferror@plt+0x50184>
  452eac:	mov	w1, #0x2                   	// #2
  452eb0:	bl	402c00 <__fsetlocking@plt>
  452eb4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  452eb8:	ldr	x0, [x0, #1424]
  452ebc:	cbz	x0, 452ec8 <ferror@plt+0x50198>
  452ec0:	mov	w1, #0x2                   	// #2
  452ec4:	bl	402c00 <__fsetlocking@plt>
  452ec8:	ldp	x29, x30, [sp], #16
  452ecc:	ret
  452ed0:	stp	x29, x30, [sp, #-32]!
  452ed4:	mov	x29, sp
  452ed8:	str	x19, [sp, #16]
  452edc:	bl	4027d0 <fopen@plt>
  452ee0:	mov	x19, x0
  452ee4:	cbz	x0, 452ef0 <ferror@plt+0x501c0>
  452ee8:	mov	w1, #0x2                   	// #2
  452eec:	bl	402c00 <__fsetlocking@plt>
  452ef0:	mov	x0, x19
  452ef4:	ldr	x19, [sp, #16]
  452ef8:	ldp	x29, x30, [sp], #32
  452efc:	ret
  452f00:	stp	x29, x30, [sp, #-32]!
  452f04:	mov	x29, sp
  452f08:	str	x19, [sp, #16]
  452f0c:	bl	4028a0 <fdopen@plt>
  452f10:	mov	x19, x0
  452f14:	cbz	x0, 452f20 <ferror@plt+0x501f0>
  452f18:	mov	w1, #0x2                   	// #2
  452f1c:	bl	402c00 <__fsetlocking@plt>
  452f20:	mov	x0, x19
  452f24:	ldr	x19, [sp, #16]
  452f28:	ldp	x29, x30, [sp], #32
  452f2c:	ret
  452f30:	stp	x29, x30, [sp, #-32]!
  452f34:	mov	x29, sp
  452f38:	str	x19, [sp, #16]
  452f3c:	bl	402ab0 <freopen@plt>
  452f40:	mov	x19, x0
  452f44:	cbz	x0, 452f50 <ferror@plt+0x50220>
  452f48:	mov	w1, #0x2                   	// #2
  452f4c:	bl	402c00 <__fsetlocking@plt>
  452f50:	mov	x0, x19
  452f54:	ldr	x19, [sp, #16]
  452f58:	ldp	x29, x30, [sp], #32
  452f5c:	ret
  452f60:	cmp	x1, x0
  452f64:	cset	w0, eq  // eq = none
  452f68:	ret
  452f6c:	asr	x1, x0, #32
  452f70:	sub	w1, w1, w0
  452f74:	mov	w2, #0xadcc                	// #44492
  452f78:	movk	w2, #0xbdec, lsl #16
  452f7c:	add	w1, w1, w2
  452f80:	mov	w2, #0x109a                	// #4250
  452f84:	movk	w2, #0x2, lsl #16
  452f88:	eor	w1, w1, w2
  452f8c:	mov	w2, #0x2785                	// #10117
  452f90:	movk	w2, #0x5c24, lsl #16
  452f94:	add	w0, w2, w0
  452f98:	sub	w0, w0, w1
  452f9c:	eor	w0, w0, w1, lsl #8
  452fa0:	mov	w3, #0x5234                	// #21044
  452fa4:	movk	w3, #0x4213, lsl #16
  452fa8:	sub	w3, w3, w1
  452fac:	sub	w3, w3, w0
  452fb0:	eor	w3, w3, w0, lsr #13
  452fb4:	sub	w1, w1, w0
  452fb8:	sub	w1, w1, w3
  452fbc:	eor	w1, w1, w3, lsr #12
  452fc0:	sub	w0, w0, w3
  452fc4:	sub	w0, w0, w1
  452fc8:	eor	w0, w0, w1, lsl #16
  452fcc:	sub	w3, w3, w1
  452fd0:	sub	w3, w3, w0
  452fd4:	eor	w3, w3, w0, lsr #5
  452fd8:	sub	w1, w1, w0
  452fdc:	sub	w1, w1, w3
  452fe0:	eor	w1, w1, w3, lsr #3
  452fe4:	sub	w2, w0, w3
  452fe8:	sub	w2, w2, w1
  452fec:	eor	w2, w2, w1, lsl #10
  452ff0:	sub	w1, w3, w1
  452ff4:	sub	w0, w1, w2
  452ff8:	eor	w0, w0, w2, lsr #15
  452ffc:	ret
  453000:	mov	x2, x0
  453004:	mov	w3, #0x1e                  	// #30
  453008:	mov	w0, #0x0                   	// #0
  45300c:	adrp	x5, 47e000 <_obstack_memory_used@@Base+0x29c60>
  453010:	add	x5, x5, #0xa98
  453014:	cmp	w3, w0
  453018:	b.eq	453044 <ferror@plt+0x50314>  // b.none
  45301c:	sub	w1, w3, w0
  453020:	add	w1, w0, w1, lsr #1
  453024:	ubfiz	x4, x1, #4, #32
  453028:	ldr	w4, [x5, x4]
  45302c:	cmp	x4, x2
  453030:	b.cc	45303c <ferror@plt+0x5030c>  // b.lo, b.ul, b.last
  453034:	mov	w3, w1
  453038:	b	453014 <ferror@plt+0x502e4>
  45303c:	add	w0, w1, #0x1
  453040:	b	453014 <ferror@plt+0x502e4>
  453044:	ubfiz	x1, x0, #4, #32
  453048:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45304c:	add	x3, x3, #0xa98
  453050:	ldr	w1, [x3, x1]
  453054:	cmp	x1, x2
  453058:	b.cc	453060 <ferror@plt+0x50330>  // b.lo, b.ul, b.last
  45305c:	ret
  453060:	stp	x29, x30, [sp, #-16]!
  453064:	mov	x29, sp
  453068:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45306c:	add	x1, x1, #0xa70
  453070:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  453074:	ldr	x0, [x0, #1424]
  453078:	bl	402ce0 <fprintf@plt>
  45307c:	bl	402990 <abort@plt>
  453080:	stp	x29, x30, [sp, #-64]!
  453084:	mov	x29, sp
  453088:	stp	x19, x20, [sp, #16]
  45308c:	stp	x21, x22, [sp, #32]
  453090:	stp	x23, x24, [sp, #48]
  453094:	mov	x19, x0
  453098:	ldr	x24, [x0, #24]
  45309c:	ldr	x20, [x0, #32]
  4530a0:	add	x23, x24, x20, lsl #3
  4530a4:	ldr	x1, [x0, #40]
  4530a8:	ldr	x0, [x0, #48]
  4530ac:	sub	x1, x1, x0
  4530b0:	lsl	x0, x1, #1
  4530b4:	cmp	x20, x1, lsl #1
  4530b8:	b.cc	453124 <ferror@plt+0x503f4>  // b.lo, b.ul, b.last
  4530bc:	lsl	x1, x1, #3
  4530c0:	cmp	x1, #0x20
  4530c4:	mov	x2, #0x20                  	// #32
  4530c8:	csel	x1, x1, x2, cs  // cs = hs, nlast
  4530cc:	cmp	x20, x1
  4530d0:	b.hi	453124 <ferror@plt+0x503f4>  // b.pmore
  4530d4:	ldr	w21, [x19, #104]
  4530d8:	ldr	x3, [x19, #88]
  4530dc:	cbz	x3, 453140 <ferror@plt+0x50410>
  4530e0:	mov	x2, #0x8                   	// #8
  4530e4:	mov	x1, x20
  4530e8:	ldr	x0, [x19, #80]
  4530ec:	blr	x3
  4530f0:	cbz	x0, 45326c <ferror@plt+0x5053c>
  4530f4:	str	x0, [x19, #24]
  4530f8:	str	x20, [x19, #32]
  4530fc:	str	w21, [x19, #104]
  453100:	ldr	x0, [x19, #40]
  453104:	ldr	x1, [x19, #48]
  453108:	sub	x0, x0, x1
  45310c:	str	x0, [x19, #40]
  453110:	str	xzr, [x19, #48]
  453114:	mov	x20, x24
  453118:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45311c:	add	x22, x22, #0xa98
  453120:	b	453168 <ferror@plt+0x50438>
  453124:	bl	453000 <ferror@plt+0x502d0>
  453128:	mov	w21, w0
  45312c:	ubfiz	x1, x21, #4, #32
  453130:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  453134:	add	x0, x0, #0xa98
  453138:	ldr	w20, [x0, x1]
  45313c:	b	4530d8 <ferror@plt+0x503a8>
  453140:	ldr	x2, [x19, #64]
  453144:	mov	x1, #0x8                   	// #8
  453148:	mov	x0, x20
  45314c:	blr	x2
  453150:	b	4530f0 <ferror@plt+0x503c0>
  453154:	bl	402990 <abort@plt>
  453158:	str	x21, [x6]
  45315c:	add	x20, x20, #0x8
  453160:	cmp	x23, x20
  453164:	b.ls	453224 <ferror@plt+0x504f4>  // b.plast
  453168:	ldr	x21, [x20]
  45316c:	cmp	x21, #0x1
  453170:	b.ls	45315c <ferror@plt+0x5042c>  // b.plast
  453174:	ldr	x1, [x19]
  453178:	mov	x0, x21
  45317c:	blr	x1
  453180:	ldr	w3, [x19, #104]
  453184:	ubfiz	x2, x3, #4, #32
  453188:	add	x1, x22, x2
  45318c:	ldr	w5, [x22, x2]
  453190:	ldr	w7, [x1, #12]
  453194:	mov	w8, w0
  453198:	ldr	w1, [x1, #4]
  45319c:	mul	x1, x1, x8
  4531a0:	lsr	x2, x1, #32
  4531a4:	sub	w1, w0, w2
  4531a8:	add	w1, w2, w1, lsr #1
  4531ac:	lsr	w1, w1, w7
  4531b0:	msub	w1, w1, w5, w0
  4531b4:	ldr	x2, [x19, #24]
  4531b8:	add	x6, x2, w1, uxtw #3
  4531bc:	ldr	x4, [x2, w1, uxtw #3]
  4531c0:	cbz	x4, 453158 <ferror@plt+0x50428>
  4531c4:	cmp	x4, #0x1
  4531c8:	b.eq	453154 <ferror@plt+0x50424>  // b.none
  4531cc:	ldr	x4, [x19, #32]
  4531d0:	ubfiz	x3, x3, #4, #32
  4531d4:	add	x3, x22, x3
  4531d8:	ldr	w3, [x3, #8]
  4531dc:	mul	x3, x3, x8
  4531e0:	lsr	x3, x3, #32
  4531e4:	add	w6, w0, #0x1
  4531e8:	sub	w0, w0, w3
  4531ec:	add	w0, w3, w0, lsr #1
  4531f0:	lsr	w0, w0, w7
  4531f4:	sub	w5, w5, #0x2
  4531f8:	msub	w0, w0, w5, w6
  4531fc:	add	w1, w1, w0
  453200:	sub	w3, w1, w4
  453204:	cmp	x4, w1, uxtw
  453208:	csel	w1, w3, w1, ls  // ls = plast
  45320c:	add	x6, x2, w1, uxtw #3
  453210:	ldr	x3, [x2, w1, uxtw #3]
  453214:	cbz	x3, 453158 <ferror@plt+0x50428>
  453218:	cmp	x3, #0x1
  45321c:	b.ne	4531fc <ferror@plt+0x504cc>  // b.any
  453220:	bl	402990 <abort@plt>
  453224:	ldr	x1, [x19, #72]
  453228:	cbz	x1, 45324c <ferror@plt+0x5051c>
  45322c:	mov	x0, x24
  453230:	blr	x1
  453234:	mov	w0, #0x1                   	// #1
  453238:	ldp	x19, x20, [sp, #16]
  45323c:	ldp	x21, x22, [sp, #32]
  453240:	ldp	x23, x24, [sp, #48]
  453244:	ldp	x29, x30, [sp], #64
  453248:	ret
  45324c:	ldr	x2, [x19, #96]
  453250:	mov	w0, #0x1                   	// #1
  453254:	cbz	x2, 453238 <ferror@plt+0x50508>
  453258:	mov	x1, x24
  45325c:	ldr	x0, [x19, #80]
  453260:	blr	x2
  453264:	mov	w0, #0x1                   	// #1
  453268:	b	453238 <ferror@plt+0x50508>
  45326c:	mov	w0, #0x0                   	// #0
  453270:	b	453238 <ferror@plt+0x50508>
  453274:	ldr	x0, [x0, #32]
  453278:	ret
  45327c:	ldr	x1, [x0, #40]
  453280:	ldr	x0, [x0, #48]
  453284:	sub	x0, x1, x0
  453288:	ret
  45328c:	stp	x29, x30, [sp, #-96]!
  453290:	mov	x29, sp
  453294:	stp	x19, x20, [sp, #16]
  453298:	stp	x21, x22, [sp, #32]
  45329c:	stp	x23, x24, [sp, #48]
  4532a0:	stp	x25, x26, [sp, #64]
  4532a4:	stp	x27, x28, [sp, #80]
  4532a8:	mov	x27, x1
  4532ac:	mov	x26, x2
  4532b0:	mov	x25, x3
  4532b4:	mov	x20, x4
  4532b8:	mov	x21, x5
  4532bc:	mov	x24, x6
  4532c0:	bl	453000 <ferror@plt+0x502d0>
  4532c4:	mov	w22, w0
  4532c8:	ubfiz	x1, x22, #4, #32
  4532cc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4532d0:	add	x0, x0, #0xa98
  4532d4:	ldr	w28, [x0, x1]
  4532d8:	mov	x2, #0x70                  	// #112
  4532dc:	mov	x1, #0x1                   	// #1
  4532e0:	mov	x0, x20
  4532e4:	blr	x21
  4532e8:	mov	x19, x0
  4532ec:	cbz	x0, 45332c <ferror@plt+0x505fc>
  4532f0:	mov	x2, #0x8                   	// #8
  4532f4:	mov	x1, x28
  4532f8:	mov	x0, x20
  4532fc:	blr	x21
  453300:	mov	x23, x0
  453304:	str	x0, [x19, #24]
  453308:	cbz	x0, 45334c <ferror@plt+0x5061c>
  45330c:	str	x28, [x19, #32]
  453310:	str	w22, [x19, #104]
  453314:	str	x27, [x19]
  453318:	str	x26, [x19, #8]
  45331c:	str	x25, [x19, #16]
  453320:	str	x20, [x19, #80]
  453324:	str	x21, [x19, #88]
  453328:	str	x24, [x19, #96]
  45332c:	mov	x0, x19
  453330:	ldp	x19, x20, [sp, #16]
  453334:	ldp	x21, x22, [sp, #32]
  453338:	ldp	x23, x24, [sp, #48]
  45333c:	ldp	x25, x26, [sp, #64]
  453340:	ldp	x27, x28, [sp, #80]
  453344:	ldp	x29, x30, [sp], #96
  453348:	ret
  45334c:	cbz	x24, 453364 <ferror@plt+0x50634>
  453350:	mov	x1, x19
  453354:	mov	x0, x20
  453358:	blr	x24
  45335c:	mov	x19, x23
  453360:	b	45332c <ferror@plt+0x505fc>
  453364:	mov	x19, x0
  453368:	b	45332c <ferror@plt+0x505fc>
  45336c:	stp	x29, x30, [sp, #-96]!
  453370:	mov	x29, sp
  453374:	stp	x19, x20, [sp, #16]
  453378:	stp	x21, x22, [sp, #32]
  45337c:	stp	x23, x24, [sp, #48]
  453380:	stp	x25, x26, [sp, #64]
  453384:	str	x27, [sp, #80]
  453388:	mov	x26, x1
  45338c:	mov	x25, x2
  453390:	mov	x24, x3
  453394:	mov	x19, x4
  453398:	mov	x21, x5
  45339c:	mov	x23, x6
  4533a0:	bl	453000 <ferror@plt+0x502d0>
  4533a4:	mov	w20, w0
  4533a8:	ubfiz	x1, x20, #4, #32
  4533ac:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4533b0:	add	x0, x0, #0xa98
  4533b4:	ldr	w27, [x0, x1]
  4533b8:	mov	x1, #0x70                  	// #112
  4533bc:	mov	x0, #0x1                   	// #1
  4533c0:	blr	x19
  4533c4:	mov	x19, x0
  4533c8:	cbz	x0, 453400 <ferror@plt+0x506d0>
  4533cc:	mov	x1, #0x8                   	// #8
  4533d0:	mov	x0, x27
  4533d4:	blr	x21
  4533d8:	mov	x22, x0
  4533dc:	str	x0, [x19, #24]
  4533e0:	cbz	x0, 453420 <ferror@plt+0x506f0>
  4533e4:	str	x27, [x19, #32]
  4533e8:	str	w20, [x19, #104]
  4533ec:	str	x26, [x19]
  4533f0:	str	x25, [x19, #8]
  4533f4:	str	x24, [x19, #16]
  4533f8:	str	x21, [x19, #64]
  4533fc:	str	x23, [x19, #72]
  453400:	mov	x0, x19
  453404:	ldp	x19, x20, [sp, #16]
  453408:	ldp	x21, x22, [sp, #32]
  45340c:	ldp	x23, x24, [sp, #48]
  453410:	ldp	x25, x26, [sp, #64]
  453414:	ldr	x27, [sp, #80]
  453418:	ldp	x29, x30, [sp], #96
  45341c:	ret
  453420:	cbz	x23, 453434 <ferror@plt+0x50704>
  453424:	mov	x0, x19
  453428:	blr	x23
  45342c:	mov	x19, x22
  453430:	b	453400 <ferror@plt+0x506d0>
  453434:	mov	x19, x0
  453438:	b	453400 <ferror@plt+0x506d0>
  45343c:	stp	x29, x30, [sp, #-16]!
  453440:	mov	x29, sp
  453444:	mov	x6, x5
  453448:	mov	x5, x4
  45344c:	bl	45336c <ferror@plt+0x5063c>
  453450:	ldp	x29, x30, [sp], #16
  453454:	ret
  453458:	str	x1, [x0]
  45345c:	str	x2, [x0, #8]
  453460:	str	x3, [x0, #16]
  453464:	str	x4, [x0, #80]
  453468:	str	x5, [x0, #88]
  45346c:	str	x6, [x0, #96]
  453470:	ret
  453474:	stp	x29, x30, [sp, #-16]!
  453478:	mov	x29, sp
  45347c:	adrp	x5, 402000 <_ZGTtnam@plt-0x610>
  453480:	add	x5, x5, #0xa90
  453484:	adrp	x4, 454000 <ferror@plt+0x512d0>
  453488:	add	x4, x4, #0xd6c
  45348c:	bl	45343c <ferror@plt+0x5070c>
  453490:	ldp	x29, x30, [sp], #16
  453494:	ret
  453498:	stp	x29, x30, [sp, #-16]!
  45349c:	mov	x29, sp
  4534a0:	adrp	x5, 402000 <_ZGTtnam@plt-0x610>
  4534a4:	add	x5, x5, #0xa90
  4534a8:	adrp	x4, 402000 <_ZGTtnam@plt-0x610>
  4534ac:	add	x4, x4, #0x8b0
  4534b0:	bl	45343c <ferror@plt+0x5070c>
  4534b4:	ldp	x29, x30, [sp], #16
  4534b8:	ret
  4534bc:	stp	x29, x30, [sp, #-48]!
  4534c0:	mov	x29, sp
  4534c4:	stp	x19, x20, [sp, #16]
  4534c8:	str	x21, [sp, #32]
  4534cc:	mov	x20, x0
  4534d0:	ldr	x21, [x0, #24]
  4534d4:	ldr	x0, [x0, #16]
  4534d8:	cbz	x0, 453510 <ferror@plt+0x507e0>
  4534dc:	ldr	x19, [x20, #32]
  4534e0:	subs	w19, w19, #0x1
  4534e4:	b.mi	453510 <ferror@plt+0x507e0>  // b.first
  4534e8:	sxtw	x19, w19
  4534ec:	b	4534f8 <ferror@plt+0x507c8>
  4534f0:	sub	x19, x19, #0x1
  4534f4:	tbnz	w19, #31, 453510 <ferror@plt+0x507e0>
  4534f8:	ldr	x0, [x21, x19, lsl #3]
  4534fc:	cmp	x0, #0x1
  453500:	b.ls	4534f0 <ferror@plt+0x507c0>  // b.plast
  453504:	ldr	x1, [x20, #16]
  453508:	blr	x1
  45350c:	b	4534f0 <ferror@plt+0x507c0>
  453510:	ldr	x1, [x20, #72]
  453514:	cbz	x1, 45353c <ferror@plt+0x5080c>
  453518:	mov	x0, x21
  45351c:	blr	x1
  453520:	ldr	x1, [x20, #72]
  453524:	mov	x0, x20
  453528:	blr	x1
  45352c:	ldp	x19, x20, [sp, #16]
  453530:	ldr	x21, [sp, #32]
  453534:	ldp	x29, x30, [sp], #48
  453538:	ret
  45353c:	ldr	x2, [x20, #96]
  453540:	cbz	x2, 45352c <ferror@plt+0x507fc>
  453544:	mov	x1, x21
  453548:	ldr	x0, [x20, #80]
  45354c:	blr	x2
  453550:	ldr	x2, [x20, #96]
  453554:	mov	x1, x20
  453558:	ldr	x0, [x20, #80]
  45355c:	blr	x2
  453560:	b	45352c <ferror@plt+0x507fc>
  453564:	stp	x29, x30, [sp, #-48]!
  453568:	mov	x29, sp
  45356c:	stp	x19, x20, [sp, #16]
  453570:	stp	x21, x22, [sp, #32]
  453574:	mov	x20, x0
  453578:	ldr	x22, [x0, #32]
  45357c:	ldr	x21, [x0, #24]
  453580:	ldr	x0, [x0, #16]
  453584:	cbz	x0, 4535b8 <ferror@plt+0x50888>
  453588:	subs	w19, w22, #0x1
  45358c:	b.mi	4535b8 <ferror@plt+0x50888>  // b.first
  453590:	sxtw	x19, w19
  453594:	b	4535a0 <ferror@plt+0x50870>
  453598:	sub	x19, x19, #0x1
  45359c:	tbnz	w19, #31, 4535b8 <ferror@plt+0x50888>
  4535a0:	ldr	x0, [x21, x19, lsl #3]
  4535a4:	cmp	x0, #0x1
  4535a8:	b.ls	453598 <ferror@plt+0x50868>  // b.plast
  4535ac:	ldr	x1, [x20, #16]
  4535b0:	blr	x1
  4535b4:	b	453598 <ferror@plt+0x50868>
  4535b8:	cmp	x22, #0x20, lsl #12
  4535bc:	b.ls	45365c <ferror@plt+0x5092c>  // b.plast
  4535c0:	mov	x0, #0x80                  	// #128
  4535c4:	bl	453000 <ferror@plt+0x502d0>
  4535c8:	mov	w19, w0
  4535cc:	sbfiz	x1, x0, #4, #32
  4535d0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4535d4:	add	x0, x0, #0xa98
  4535d8:	ldr	w21, [x0, x1]
  4535dc:	ldr	x1, [x20, #72]
  4535e0:	cbz	x1, 45362c <ferror@plt+0x508fc>
  4535e4:	ldr	x0, [x20, #24]
  4535e8:	blr	x1
  4535ec:	ldr	x3, [x20, #88]
  4535f0:	cbz	x3, 453644 <ferror@plt+0x50914>
  4535f4:	mov	x2, #0x8                   	// #8
  4535f8:	sxtw	x1, w21
  4535fc:	ldr	x0, [x20, #80]
  453600:	blr	x3
  453604:	str	x0, [x20, #24]
  453608:	sxtw	x21, w21
  45360c:	str	x21, [x20, #32]
  453610:	str	w19, [x20, #104]
  453614:	str	xzr, [x20, #48]
  453618:	str	xzr, [x20, #40]
  45361c:	ldp	x19, x20, [sp, #16]
  453620:	ldp	x21, x22, [sp, #32]
  453624:	ldp	x29, x30, [sp], #48
  453628:	ret
  45362c:	ldr	x2, [x20, #96]
  453630:	cbz	x2, 4535ec <ferror@plt+0x508bc>
  453634:	ldr	x1, [x20, #24]
  453638:	ldr	x0, [x20, #80]
  45363c:	blr	x2
  453640:	b	4535ec <ferror@plt+0x508bc>
  453644:	ldr	x2, [x20, #64]
  453648:	mov	x1, #0x8                   	// #8
  45364c:	sxtw	x0, w21
  453650:	blr	x2
  453654:	str	x0, [x20, #24]
  453658:	b	453608 <ferror@plt+0x508d8>
  45365c:	lsl	x2, x22, #3
  453660:	mov	w1, #0x0                   	// #0
  453664:	mov	x0, x21
  453668:	bl	402890 <memset@plt>
  45366c:	b	453614 <ferror@plt+0x508e4>
  453670:	stp	x29, x30, [sp, #-80]!
  453674:	mov	x29, sp
  453678:	stp	x19, x20, [sp, #16]
  45367c:	stp	x21, x22, [sp, #32]
  453680:	stp	x23, x24, [sp, #48]
  453684:	str	x25, [sp, #64]
  453688:	mov	x20, x0
  45368c:	mov	x24, x1
  453690:	mov	w22, w2
  453694:	ldr	w0, [x0, #56]
  453698:	add	w0, w0, #0x1
  45369c:	str	w0, [x20, #56]
  4536a0:	mov	w25, w2
  4536a4:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4536a8:	add	x2, x2, #0xa98
  4536ac:	ldr	w1, [x20, #104]
  4536b0:	lsl	x1, x1, #4
  4536b4:	add	x3, x2, x1
  4536b8:	ldr	w0, [x3, #4]
  4536bc:	mul	x0, x0, x25
  4536c0:	lsr	x0, x0, #32
  4536c4:	sub	w19, w22, w0
  4536c8:	add	w19, w0, w19, lsr #1
  4536cc:	ldr	w0, [x3, #12]
  4536d0:	lsr	w19, w19, w0
  4536d4:	ldr	w0, [x2, x1]
  4536d8:	msub	w19, w19, w0, w22
  4536dc:	ldr	x0, [x20, #24]
  4536e0:	ldr	x21, [x0, w19, uxtw #3]
  4536e4:	cbz	x21, 45378c <ferror@plt+0x50a5c>
  4536e8:	ldr	x23, [x20, #32]
  4536ec:	cmp	x21, #0x1
  4536f0:	b.eq	453708 <ferror@plt+0x509d8>  // b.none
  4536f4:	ldr	x2, [x20, #8]
  4536f8:	mov	x1, x24
  4536fc:	mov	x0, x21
  453700:	blr	x2
  453704:	cbnz	w0, 45378c <ferror@plt+0x50a5c>
  453708:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45370c:	add	x2, x2, #0xa98
  453710:	ldr	w1, [x20, #104]
  453714:	lsl	x1, x1, #4
  453718:	add	x3, x2, x1
  45371c:	ldr	w0, [x3, #8]
  453720:	mul	x25, x0, x25
  453724:	lsr	x25, x25, #32
  453728:	add	w4, w22, #0x1
  45372c:	sub	w22, w22, w25
  453730:	add	w22, w25, w22, lsr #1
  453734:	ldr	w0, [x3, #12]
  453738:	lsr	w22, w22, w0
  45373c:	ldr	w0, [x2, x1]
  453740:	sub	w0, w0, #0x2
  453744:	msub	w22, w22, w0, w4
  453748:	ldr	w0, [x20, #60]
  45374c:	add	w0, w0, #0x1
  453750:	str	w0, [x20, #60]
  453754:	add	w19, w19, w22
  453758:	sub	w0, w19, w23
  45375c:	cmp	x23, w19, uxtw
  453760:	csel	w19, w0, w19, ls  // ls = plast
  453764:	ldr	x0, [x20, #24]
  453768:	ldr	x21, [x0, w19, uxtw #3]
  45376c:	cbz	x21, 45378c <ferror@plt+0x50a5c>
  453770:	cmp	x21, #0x1
  453774:	b.eq	453748 <ferror@plt+0x50a18>  // b.none
  453778:	ldr	x2, [x20, #8]
  45377c:	mov	x1, x24
  453780:	mov	x0, x21
  453784:	blr	x2
  453788:	cbz	w0, 453748 <ferror@plt+0x50a18>
  45378c:	mov	x0, x21
  453790:	ldp	x19, x20, [sp, #16]
  453794:	ldp	x21, x22, [sp, #32]
  453798:	ldp	x23, x24, [sp, #48]
  45379c:	ldr	x25, [sp, #64]
  4537a0:	ldp	x29, x30, [sp], #80
  4537a4:	ret
  4537a8:	stp	x29, x30, [sp, #-32]!
  4537ac:	mov	x29, sp
  4537b0:	stp	x19, x20, [sp, #16]
  4537b4:	mov	x19, x0
  4537b8:	mov	x20, x1
  4537bc:	ldr	x1, [x0]
  4537c0:	mov	x0, x20
  4537c4:	blr	x1
  4537c8:	mov	w2, w0
  4537cc:	mov	x1, x20
  4537d0:	mov	x0, x19
  4537d4:	bl	453670 <ferror@plt+0x50940>
  4537d8:	ldp	x19, x20, [sp, #16]
  4537dc:	ldp	x29, x30, [sp], #32
  4537e0:	ret
  4537e4:	stp	x29, x30, [sp, #-96]!
  4537e8:	mov	x29, sp
  4537ec:	stp	x19, x20, [sp, #16]
  4537f0:	stp	x21, x22, [sp, #32]
  4537f4:	stp	x23, x24, [sp, #48]
  4537f8:	stp	x25, x26, [sp, #64]
  4537fc:	mov	x20, x0
  453800:	mov	x24, x1
  453804:	mov	w26, w2
  453808:	mov	w25, w3
  45380c:	ldr	x22, [x0, #32]
  453810:	cmp	w3, #0x1
  453814:	b.eq	4538d8 <ferror@plt+0x50ba8>  // b.none
  453818:	str	x27, [sp, #80]
  45381c:	mov	w21, w26
  453820:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  453824:	add	x2, x2, #0xa98
  453828:	ldr	w1, [x20, #104]
  45382c:	lsl	x1, x1, #4
  453830:	add	x3, x2, x1
  453834:	ldr	w0, [x3, #4]
  453838:	mul	x0, x0, x21
  45383c:	lsr	x0, x0, #32
  453840:	sub	w19, w26, w0
  453844:	add	w19, w0, w19, lsr #1
  453848:	ldr	w0, [x3, #12]
  45384c:	lsr	w19, w19, w0
  453850:	ldr	w0, [x2, x1]
  453854:	msub	w19, w19, w0, w26
  453858:	ldr	w0, [x20, #56]
  45385c:	add	w0, w0, #0x1
  453860:	str	w0, [x20, #56]
  453864:	ubfiz	x27, x19, #3, #32
  453868:	ldr	x0, [x20, #24]
  45386c:	add	x23, x0, x27
  453870:	ldr	x0, [x0, w19, uxtw #3]
  453874:	cbz	x0, 4539d0 <ferror@plt+0x50ca0>
  453878:	cmp	x0, #0x1
  45387c:	b.eq	453894 <ferror@plt+0x50b64>  // b.none
  453880:	ldr	x2, [x20, #8]
  453884:	mov	x1, x24
  453888:	blr	x2
  45388c:	mov	x23, #0x0                   	// #0
  453890:	cbnz	w0, 453908 <ferror@plt+0x50bd8>
  453894:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  453898:	add	x2, x2, #0xa98
  45389c:	ldr	w1, [x20, #104]
  4538a0:	lsl	x1, x1, #4
  4538a4:	add	x3, x2, x1
  4538a8:	ldr	w0, [x3, #8]
  4538ac:	mul	x21, x0, x21
  4538b0:	lsr	x0, x21, #32
  4538b4:	add	w4, w26, #0x1
  4538b8:	sub	w21, w26, w0
  4538bc:	add	w21, w0, w21, lsr #1
  4538c0:	ldr	w0, [x3, #12]
  4538c4:	lsr	w21, w21, w0
  4538c8:	ldr	w0, [x2, x1]
  4538cc:	sub	w0, w0, #0x2
  4538d0:	msub	w21, w21, w0, w4
  4538d4:	b	453920 <ferror@plt+0x50bf0>
  4538d8:	add	x0, x22, x22, lsl #1
  4538dc:	ldr	x1, [x20, #40]
  4538e0:	cmp	x0, x1, lsl #2
  4538e4:	b.ls	4538f0 <ferror@plt+0x50bc0>  // b.plast
  4538e8:	str	x27, [sp, #80]
  4538ec:	b	45381c <ferror@plt+0x50aec>
  4538f0:	mov	x0, x20
  4538f4:	bl	453080 <ferror@plt+0x50350>
  4538f8:	cbz	w0, 4539b0 <ferror@plt+0x50c80>
  4538fc:	str	x27, [sp, #80]
  453900:	ldr	x22, [x20, #32]
  453904:	b	45381c <ferror@plt+0x50aec>
  453908:	ldr	x23, [x20, #24]
  45390c:	add	x23, x23, x27
  453910:	ldr	x27, [sp, #80]
  453914:	b	453994 <ferror@plt+0x50c64>
  453918:	cmp	x23, #0x0
  45391c:	csel	x23, x23, x1, ne  // ne = any
  453920:	ldr	w0, [x20, #60]
  453924:	add	w0, w0, #0x1
  453928:	str	w0, [x20, #60]
  45392c:	add	w19, w19, w21
  453930:	sub	w0, w19, w22
  453934:	cmp	x22, w19, uxtw
  453938:	csel	w19, w0, w19, ls  // ls = plast
  45393c:	ubfiz	x26, x19, #3, #32
  453940:	ldr	x0, [x20, #24]
  453944:	add	x1, x0, x26
  453948:	ldr	x0, [x0, w19, uxtw #3]
  45394c:	cbz	x0, 453978 <ferror@plt+0x50c48>
  453950:	cmp	x0, #0x1
  453954:	b.eq	453918 <ferror@plt+0x50be8>  // b.none
  453958:	ldr	x2, [x20, #8]
  45395c:	mov	x1, x24
  453960:	blr	x2
  453964:	cbz	w0, 453920 <ferror@plt+0x50bf0>
  453968:	ldr	x23, [x20, #24]
  45396c:	add	x23, x23, x26
  453970:	ldr	x27, [sp, #80]
  453974:	b	453994 <ferror@plt+0x50c64>
  453978:	cbz	w25, 4539b8 <ferror@plt+0x50c88>
  45397c:	cbz	x23, 4539d4 <ferror@plt+0x50ca4>
  453980:	ldr	x0, [x20, #48]
  453984:	sub	x0, x0, #0x1
  453988:	str	x0, [x20, #48]
  45398c:	str	xzr, [x23]
  453990:	ldr	x27, [sp, #80]
  453994:	mov	x0, x23
  453998:	ldp	x19, x20, [sp, #16]
  45399c:	ldp	x21, x22, [sp, #32]
  4539a0:	ldp	x23, x24, [sp, #48]
  4539a4:	ldp	x25, x26, [sp, #64]
  4539a8:	ldp	x29, x30, [sp], #96
  4539ac:	ret
  4539b0:	mov	x23, #0x0                   	// #0
  4539b4:	b	453994 <ferror@plt+0x50c64>
  4539b8:	mov	x23, x0
  4539bc:	ldr	x27, [sp, #80]
  4539c0:	b	453994 <ferror@plt+0x50c64>
  4539c4:	mov	x23, x0
  4539c8:	ldr	x27, [sp, #80]
  4539cc:	b	453994 <ferror@plt+0x50c64>
  4539d0:	cbz	w25, 4539c4 <ferror@plt+0x50c94>
  4539d4:	ldr	x0, [x20, #40]
  4539d8:	add	x0, x0, #0x1
  4539dc:	str	x0, [x20, #40]
  4539e0:	ldr	x23, [x20, #24]
  4539e4:	add	x23, x23, w19, uxtw #3
  4539e8:	ldr	x27, [sp, #80]
  4539ec:	b	453994 <ferror@plt+0x50c64>
  4539f0:	stp	x29, x30, [sp, #-48]!
  4539f4:	mov	x29, sp
  4539f8:	stp	x19, x20, [sp, #16]
  4539fc:	str	x21, [sp, #32]
  453a00:	mov	x19, x0
  453a04:	mov	x20, x1
  453a08:	mov	w21, w2
  453a0c:	ldr	x1, [x0]
  453a10:	mov	x0, x20
  453a14:	blr	x1
  453a18:	mov	w3, w21
  453a1c:	mov	w2, w0
  453a20:	mov	x1, x20
  453a24:	mov	x0, x19
  453a28:	bl	4537e4 <ferror@plt+0x50ab4>
  453a2c:	ldp	x19, x20, [sp, #16]
  453a30:	ldr	x21, [sp, #32]
  453a34:	ldp	x29, x30, [sp], #48
  453a38:	ret
  453a3c:	stp	x29, x30, [sp, #-32]!
  453a40:	mov	x29, sp
  453a44:	stp	x19, x20, [sp, #16]
  453a48:	mov	x19, x0
  453a4c:	mov	w3, #0x0                   	// #0
  453a50:	bl	4537e4 <ferror@plt+0x50ab4>
  453a54:	cbz	x0, 453a80 <ferror@plt+0x50d50>
  453a58:	mov	x20, x0
  453a5c:	ldr	x1, [x19, #16]
  453a60:	cbz	x1, 453a6c <ferror@plt+0x50d3c>
  453a64:	ldr	x0, [x0]
  453a68:	blr	x1
  453a6c:	mov	x0, #0x1                   	// #1
  453a70:	str	x0, [x20]
  453a74:	ldr	x0, [x19, #48]
  453a78:	add	x0, x0, #0x1
  453a7c:	str	x0, [x19, #48]
  453a80:	ldp	x19, x20, [sp, #16]
  453a84:	ldp	x29, x30, [sp], #32
  453a88:	ret
  453a8c:	stp	x29, x30, [sp, #-32]!
  453a90:	mov	x29, sp
  453a94:	stp	x19, x20, [sp, #16]
  453a98:	mov	x19, x0
  453a9c:	mov	x20, x1
  453aa0:	ldr	x1, [x0]
  453aa4:	mov	x0, x20
  453aa8:	blr	x1
  453aac:	mov	w2, w0
  453ab0:	mov	x1, x20
  453ab4:	mov	x0, x19
  453ab8:	bl	453a3c <ferror@plt+0x50d0c>
  453abc:	ldp	x19, x20, [sp, #16]
  453ac0:	ldp	x29, x30, [sp], #32
  453ac4:	ret
  453ac8:	stp	x29, x30, [sp, #-32]!
  453acc:	mov	x29, sp
  453ad0:	stp	x19, x20, [sp, #16]
  453ad4:	mov	x20, x1
  453ad8:	ldr	x1, [x0, #24]
  453adc:	cmp	x1, x20
  453ae0:	b.hi	453b30 <ferror@plt+0x50e00>  // b.pmore
  453ae4:	mov	x19, x0
  453ae8:	ldr	x0, [x0, #32]
  453aec:	add	x0, x1, x0, lsl #3
  453af0:	cmp	x20, x0
  453af4:	b.cs	453b30 <ferror@plt+0x50e00>  // b.hs, b.nlast
  453af8:	ldr	x0, [x20]
  453afc:	cmp	x0, #0x1
  453b00:	b.ls	453b30 <ferror@plt+0x50e00>  // b.plast
  453b04:	ldr	x1, [x19, #16]
  453b08:	cbz	x1, 453b10 <ferror@plt+0x50de0>
  453b0c:	blr	x1
  453b10:	mov	x0, #0x1                   	// #1
  453b14:	str	x0, [x20]
  453b18:	ldr	x0, [x19, #48]
  453b1c:	add	x0, x0, #0x1
  453b20:	str	x0, [x19, #48]
  453b24:	ldp	x19, x20, [sp, #16]
  453b28:	ldp	x29, x30, [sp], #32
  453b2c:	ret
  453b30:	bl	402990 <abort@plt>
  453b34:	stp	x29, x30, [sp, #-48]!
  453b38:	mov	x29, sp
  453b3c:	stp	x19, x20, [sp, #16]
  453b40:	stp	x21, x22, [sp, #32]
  453b44:	mov	x22, x1
  453b48:	mov	x21, x2
  453b4c:	ldr	x19, [x0, #24]
  453b50:	ldr	x20, [x0, #32]
  453b54:	add	x20, x19, x20, lsl #3
  453b58:	b	453b68 <ferror@plt+0x50e38>
  453b5c:	add	x19, x19, #0x8
  453b60:	cmp	x20, x19
  453b64:	b.ls	453b84 <ferror@plt+0x50e54>  // b.plast
  453b68:	ldr	x0, [x19]
  453b6c:	cmp	x0, #0x1
  453b70:	b.ls	453b5c <ferror@plt+0x50e2c>  // b.plast
  453b74:	mov	x1, x21
  453b78:	mov	x0, x19
  453b7c:	blr	x22
  453b80:	cbnz	w0, 453b5c <ferror@plt+0x50e2c>
  453b84:	ldp	x19, x20, [sp, #16]
  453b88:	ldp	x21, x22, [sp, #32]
  453b8c:	ldp	x29, x30, [sp], #48
  453b90:	ret
  453b94:	stp	x29, x30, [sp, #-48]!
  453b98:	mov	x29, sp
  453b9c:	stp	x19, x20, [sp, #16]
  453ba0:	str	x21, [sp, #32]
  453ba4:	mov	x19, x0
  453ba8:	mov	x20, x1
  453bac:	mov	x21, x2
  453bb0:	ldr	x3, [x0, #40]
  453bb4:	ldr	x0, [x0, #48]
  453bb8:	sub	x3, x3, x0
  453bbc:	lsl	x3, x3, #3
  453bc0:	cmp	x3, #0x20
  453bc4:	mov	x0, #0x20                  	// #32
  453bc8:	csel	x3, x3, x0, cs  // cs = hs, nlast
  453bcc:	ldr	x0, [x19, #32]
  453bd0:	cmp	x0, x3
  453bd4:	b.hi	453bf8 <ferror@plt+0x50ec8>  // b.pmore
  453bd8:	mov	x2, x21
  453bdc:	mov	x1, x20
  453be0:	mov	x0, x19
  453be4:	bl	453b34 <ferror@plt+0x50e04>
  453be8:	ldp	x19, x20, [sp, #16]
  453bec:	ldr	x21, [sp, #32]
  453bf0:	ldp	x29, x30, [sp], #48
  453bf4:	ret
  453bf8:	mov	x0, x19
  453bfc:	bl	453080 <ferror@plt+0x50350>
  453c00:	b	453bd8 <ferror@plt+0x50ea8>
  453c04:	ldr	w1, [x0, #56]
  453c08:	movi	d0, #0x0
  453c0c:	cbz	w1, 453c20 <ferror@plt+0x50ef0>
  453c10:	ldr	w0, [x0, #60]
  453c14:	ucvtf	d0, w0
  453c18:	ucvtf	d1, w1
  453c1c:	fdiv	d0, d0, d1
  453c20:	ret
  453c24:	mov	x2, x0
  453c28:	ldrb	w1, [x2], #1
  453c2c:	cbz	w1, 453c4c <ferror@plt+0x50f1c>
  453c30:	mov	w0, #0x0                   	// #0
  453c34:	mov	w3, #0x43                  	// #67
  453c38:	madd	w0, w0, w3, w1
  453c3c:	sub	w0, w0, #0x71
  453c40:	ldrb	w1, [x2], #1
  453c44:	cbnz	w1, 453c38 <ferror@plt+0x50f08>
  453c48:	ret
  453c4c:	mov	w0, #0x0                   	// #0
  453c50:	b	453c48 <ferror@plt+0x50f18>
  453c54:	tst	x0, #0x3
  453c58:	b.eq	453d70 <ferror@plt+0x51040>  // b.none
  453c5c:	cmp	w1, #0xb
  453c60:	b.ls	453d5c <ferror@plt+0x5102c>  // b.plast
  453c64:	mov	w5, w1
  453c68:	mov	w8, #0x79b9                	// #31161
  453c6c:	movk	w8, #0x9e37, lsl #16
  453c70:	mov	w7, w8
  453c74:	ldrb	w4, [x0, #5]
  453c78:	ldrb	w3, [x0, #6]
  453c7c:	lsl	w3, w3, #16
  453c80:	add	w4, w3, w4, lsl #8
  453c84:	ldrb	w3, [x0, #7]
  453c88:	ldrb	w6, [x0, #4]
  453c8c:	add	w3, w6, w3, lsl #24
  453c90:	add	w4, w4, w3
  453c94:	add	w4, w4, w8
  453c98:	ldrb	w3, [x0, #9]
  453c9c:	ldrb	w6, [x0, #10]
  453ca0:	lsl	w6, w6, #16
  453ca4:	add	w3, w6, w3, lsl #8
  453ca8:	ldrb	w6, [x0, #11]
  453cac:	ldrb	w8, [x0, #8]
  453cb0:	add	w6, w8, w6, lsl #24
  453cb4:	add	w3, w3, w6
  453cb8:	add	w2, w3, w2
  453cbc:	ldrb	w6, [x0, #1]
  453cc0:	ldrb	w3, [x0, #2]
  453cc4:	lsl	w3, w3, #16
  453cc8:	add	w6, w3, w6, lsl #8
  453ccc:	ldrb	w3, [x0, #3]
  453cd0:	ldrb	w8, [x0], #12
  453cd4:	add	w3, w8, w3, lsl #24
  453cd8:	add	w6, w6, w3
  453cdc:	add	w3, w4, w2
  453ce0:	sub	w6, w6, w3
  453ce4:	add	w6, w6, w7
  453ce8:	eor	w6, w6, w2, lsr #13
  453cec:	sub	w4, w4, w2
  453cf0:	sub	w4, w4, w6
  453cf4:	eor	w4, w4, w6, lsl #8
  453cf8:	sub	w2, w2, w6
  453cfc:	sub	w3, w2, w4
  453d00:	eor	w3, w3, w4, lsr #13
  453d04:	sub	w2, w6, w4
  453d08:	sub	w2, w2, w3
  453d0c:	eor	w2, w2, w3, lsr #12
  453d10:	sub	w4, w4, w3
  453d14:	sub	w4, w4, w2
  453d18:	eor	w4, w4, w2, lsl #16
  453d1c:	sub	w3, w3, w2
  453d20:	sub	w3, w3, w4
  453d24:	eor	w3, w3, w4, lsr #5
  453d28:	sub	w2, w2, w4
  453d2c:	sub	w2, w2, w3
  453d30:	eor	w7, w2, w3, lsr #3
  453d34:	sub	w4, w4, w3
  453d38:	sub	w4, w4, w7
  453d3c:	eor	w8, w4, w7, lsl #10
  453d40:	sub	w2, w3, w7
  453d44:	sub	w2, w2, w8
  453d48:	eor	w2, w2, w8, lsr #15
  453d4c:	sub	w5, w5, #0xc
  453d50:	cmp	w5, #0xb
  453d54:	b.hi	453c74 <ferror@plt+0x50f44>  // b.pmore
  453d58:	b	453e1c <ferror@plt+0x510ec>
  453d5c:	mov	w5, w1
  453d60:	mov	w8, #0x79b9                	// #31161
  453d64:	movk	w8, #0x9e37, lsl #16
  453d68:	mov	w7, w8
  453d6c:	b	453e1c <ferror@plt+0x510ec>
  453d70:	cmp	w1, #0xb
  453d74:	b.ls	453e64 <ferror@plt+0x51134>  // b.plast
  453d78:	mov	w5, w1
  453d7c:	mov	w8, #0x79b9                	// #31161
  453d80:	movk	w8, #0x9e37, lsl #16
  453d84:	mov	w7, w8
  453d88:	ldr	w6, [x0]
  453d8c:	add	w6, w7, w6
  453d90:	ldr	w4, [x0, #4]
  453d94:	add	w4, w8, w4
  453d98:	ldr	w3, [x0, #8]
  453d9c:	add	w2, w2, w3
  453da0:	add	w3, w4, w2
  453da4:	sub	w6, w6, w3
  453da8:	eor	w6, w6, w2, lsr #13
  453dac:	sub	w4, w4, w2
  453db0:	sub	w4, w4, w6
  453db4:	eor	w4, w4, w6, lsl #8
  453db8:	sub	w2, w2, w6
  453dbc:	sub	w2, w2, w4
  453dc0:	eor	w2, w2, w4, lsr #13
  453dc4:	sub	w6, w6, w4
  453dc8:	sub	w6, w6, w2
  453dcc:	eor	w6, w6, w2, lsr #12
  453dd0:	sub	w4, w4, w2
  453dd4:	sub	w4, w4, w6
  453dd8:	eor	w4, w4, w6, lsl #16
  453ddc:	sub	w2, w2, w6
  453de0:	sub	w2, w2, w4
  453de4:	eor	w2, w2, w4, lsr #5
  453de8:	sub	w6, w6, w4
  453dec:	sub	w6, w6, w2
  453df0:	eor	w7, w6, w2, lsr #3
  453df4:	sub	w4, w4, w2
  453df8:	sub	w4, w4, w7
  453dfc:	eor	w8, w4, w7, lsl #10
  453e00:	sub	w2, w2, w7
  453e04:	sub	w2, w2, w8
  453e08:	eor	w2, w2, w8, lsr #15
  453e0c:	add	x0, x0, #0xc
  453e10:	sub	w5, w5, #0xc
  453e14:	cmp	w5, #0xb
  453e18:	b.hi	453d88 <ferror@plt+0x51058>  // b.pmore
  453e1c:	add	w2, w2, w1
  453e20:	cmp	w5, #0x6
  453e24:	b.eq	453f58 <ferror@plt+0x51228>  // b.none
  453e28:	b.ls	453e78 <ferror@plt+0x51148>  // b.plast
  453e2c:	cmp	w5, #0x9
  453e30:	b.eq	453e58 <ferror@plt+0x51128>  // b.none
  453e34:	b.ls	453f38 <ferror@plt+0x51208>  // b.plast
  453e38:	cmp	w5, #0xa
  453e3c:	b.eq	453e50 <ferror@plt+0x51120>  // b.none
  453e40:	cmp	w5, #0xb
  453e44:	b.ne	453ec8 <ferror@plt+0x51198>  // b.any
  453e48:	ldrb	w1, [x0, #10]
  453e4c:	add	w2, w2, w1, lsl #24
  453e50:	ldrb	w1, [x0, #9]
  453e54:	add	w2, w2, w1, lsl #16
  453e58:	ldrb	w1, [x0, #8]
  453e5c:	add	w2, w2, w1, lsl #8
  453e60:	b	453f48 <ferror@plt+0x51218>
  453e64:	mov	w5, w1
  453e68:	mov	w8, #0x79b9                	// #31161
  453e6c:	movk	w8, #0x9e37, lsl #16
  453e70:	mov	w7, w8
  453e74:	b	453e1c <ferror@plt+0x510ec>
  453e78:	cmp	w5, #0x3
  453e7c:	b.eq	453e9c <ferror@plt+0x5116c>  // b.none
  453e80:	b.ls	453ea8 <ferror@plt+0x51178>  // b.plast
  453e84:	cmp	w5, #0x4
  453e88:	b.eq	453e94 <ferror@plt+0x51164>  // b.none
  453e8c:	ldrb	w1, [x0, #4]
  453e90:	add	w8, w8, w1
  453e94:	ldrb	w1, [x0, #3]
  453e98:	add	w7, w7, w1, lsl #24
  453e9c:	ldrb	w1, [x0, #2]
  453ea0:	add	w7, w7, w1, lsl #16
  453ea4:	b	453eb8 <ferror@plt+0x51188>
  453ea8:	cmp	w5, #0x1
  453eac:	b.eq	453ec0 <ferror@plt+0x51190>  // b.none
  453eb0:	cmp	w5, #0x2
  453eb4:	b.ne	453ec8 <ferror@plt+0x51198>  // b.any
  453eb8:	ldrb	w1, [x0, #1]
  453ebc:	add	w7, w7, w1, lsl #8
  453ec0:	ldrb	w0, [x0]
  453ec4:	add	w7, w7, w0
  453ec8:	add	w6, w8, w2
  453ecc:	sub	w6, w7, w6
  453ed0:	eor	w6, w6, w2, lsr #13
  453ed4:	sub	w4, w8, w2
  453ed8:	sub	w3, w4, w6
  453edc:	eor	w3, w3, w6, lsl #8
  453ee0:	sub	w2, w2, w6
  453ee4:	sub	w2, w2, w3
  453ee8:	eor	w2, w2, w3, lsr #13
  453eec:	sub	w0, w6, w3
  453ef0:	sub	w0, w0, w2
  453ef4:	eor	w0, w0, w2, lsr #12
  453ef8:	sub	w3, w3, w2
  453efc:	sub	w3, w3, w0
  453f00:	eor	w3, w3, w0, lsl #16
  453f04:	sub	w1, w2, w0
  453f08:	sub	w1, w1, w3
  453f0c:	eor	w1, w1, w3, lsr #5
  453f10:	sub	w2, w0, w3
  453f14:	sub	w2, w2, w1
  453f18:	eor	w2, w2, w1, lsr #3
  453f1c:	sub	w0, w3, w1
  453f20:	sub	w0, w0, w2
  453f24:	eor	w0, w0, w2, lsl #10
  453f28:	sub	w1, w1, w2
  453f2c:	sub	w1, w1, w0
  453f30:	eor	w0, w1, w0, lsr #15
  453f34:	ret
  453f38:	cmp	w5, #0x7
  453f3c:	b.eq	453f50 <ferror@plt+0x51220>  // b.none
  453f40:	cmp	w5, #0x8
  453f44:	b.ne	453ec8 <ferror@plt+0x51198>  // b.any
  453f48:	ldrb	w1, [x0, #7]
  453f4c:	add	w8, w8, w1, lsl #24
  453f50:	ldrb	w1, [x0, #6]
  453f54:	add	w8, w8, w1, lsl #16
  453f58:	ldrb	w1, [x0, #5]
  453f5c:	add	w8, w8, w1, lsl #8
  453f60:	b	453e8c <ferror@plt+0x5115c>
  453f64:	ret
  453f68:	ldrb	w1, [x0]
  453f6c:	cbz	w1, 453f84 <ferror@plt+0x51254>
  453f70:	add	x2, x0, #0x1
  453f74:	cmp	w1, #0x2f
  453f78:	csel	x0, x0, x2, ne  // ne = any
  453f7c:	ldrb	w1, [x2], #1
  453f80:	cbnz	w1, 453f74 <ferror@plt+0x51244>
  453f84:	ret
  453f88:	ldrb	w2, [x0]
  453f8c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  453f90:	add	x1, x1, #0x28
  453f94:	ldrh	w1, [x1, x2, lsl #1]
  453f98:	mov	w2, #0x88                  	// #136
  453f9c:	tst	w2, w1
  453fa0:	b.eq	453fb4 <ferror@plt+0x51284>  // b.none
  453fa4:	ldrb	w2, [x0, #1]
  453fa8:	add	x1, x0, #0x2
  453fac:	cmp	w2, #0x3a
  453fb0:	csel	x0, x1, x0, eq  // eq = none
  453fb4:	ldrb	w1, [x0]
  453fb8:	cbz	w1, 453fd8 <ferror@plt+0x512a8>
  453fbc:	add	x2, x0, #0x1
  453fc0:	mov	w3, #0x5c                  	// #92
  453fc4:	cmp	w1, #0x2f
  453fc8:	ccmp	w1, w3, #0x4, ne  // ne = any
  453fcc:	csel	x0, x0, x2, ne  // ne = any
  453fd0:	ldrb	w1, [x2], #1
  453fd4:	cbnz	w1, 453fc4 <ferror@plt+0x51294>
  453fd8:	ret
  453fdc:	stp	x29, x30, [sp, #-16]!
  453fe0:	mov	x29, sp
  453fe4:	bl	453f68 <ferror@plt+0x51238>
  453fe8:	ldp	x29, x30, [sp], #16
  453fec:	ret
  453ff0:	mov	x12, #0x1020                	// #4128
  453ff4:	sub	sp, sp, x12
  453ff8:	stp	x29, x30, [sp]
  453ffc:	mov	x29, sp
  454000:	str	x19, [sp, #16]
  454004:	mov	x19, x0
  454008:	add	x1, sp, #0x20
  45400c:	bl	402be0 <realpath@plt>
  454010:	cmp	x0, #0x0
  454014:	csel	x0, x0, x19, ne  // ne = any
  454018:	bl	402910 <strdup@plt>
  45401c:	ldr	x19, [sp, #16]
  454020:	ldp	x29, x30, [sp]
  454024:	mov	x12, #0x1020                	// #4128
  454028:	add	sp, sp, x12
  45402c:	ret
  454030:	stp	x29, x30, [sp, #-16]!
  454034:	mov	x29, sp
  454038:	mov	x2, x0
  45403c:	ldrb	w0, [x0, #80]
  454040:	tbz	w0, #0, 454058 <ferror@plt+0x51328>
  454044:	ldr	x3, [x2, #56]
  454048:	ldr	x0, [x2, #72]
  45404c:	blr	x3
  454050:	ldp	x29, x30, [sp], #16
  454054:	ret
  454058:	ldr	x2, [x2, #56]
  45405c:	mov	x0, x1
  454060:	blr	x2
  454064:	b	454050 <ferror@plt+0x51320>
  454068:	stp	x29, x30, [sp, #-16]!
  45406c:	mov	x29, sp
  454070:	mov	x2, x0
  454074:	ldrb	w0, [x0, #80]
  454078:	tbz	w0, #0, 454090 <ferror@plt+0x51360>
  45407c:	ldr	x3, [x2, #64]
  454080:	ldr	x0, [x2, #72]
  454084:	blr	x3
  454088:	ldp	x29, x30, [sp], #16
  45408c:	ret
  454090:	ldr	x2, [x2, #64]
  454094:	mov	x0, x1
  454098:	blr	x2
  45409c:	b	454088 <ferror@plt+0x51358>
  4540a0:	stp	x29, x30, [sp, #-48]!
  4540a4:	mov	x29, sp
  4540a8:	stp	x19, x20, [sp, #16]
  4540ac:	stp	x21, x22, [sp, #32]
  4540b0:	mov	x19, x0
  4540b4:	cmp	x2, #0x0
  4540b8:	mov	x0, #0x10                  	// #16
  4540bc:	csel	x20, x2, x0, ne  // ne = any
  4540c0:	cmp	x1, #0x0
  4540c4:	mov	x0, #0xfe0                 	// #4064
  4540c8:	csel	x1, x1, x0, ne  // ne = any
  4540cc:	str	x1, [x19]
  4540d0:	sub	x22, x20, #0x1
  4540d4:	str	x22, [x19, #48]
  4540d8:	mov	x0, x19
  4540dc:	bl	454030 <ferror@plt+0x51300>
  4540e0:	mov	x21, x0
  4540e4:	cbz	x0, 454138 <ferror@plt+0x51408>
  4540e8:	str	x21, [x19, #8]
  4540ec:	add	x2, x21, #0x10
  4540f0:	add	x2, x2, x22
  4540f4:	neg	x20, x20
  4540f8:	and	x20, x2, x20
  4540fc:	str	x20, [x19, #16]
  454100:	str	x20, [x19, #24]
  454104:	ldr	x0, [x19]
  454108:	add	x0, x21, x0
  45410c:	str	x0, [x21]
  454110:	str	x0, [x19, #32]
  454114:	str	xzr, [x21, #8]
  454118:	ldrb	w0, [x19, #80]
  45411c:	and	w0, w0, #0xfffffff9
  454120:	strb	w0, [x19, #80]
  454124:	mov	w0, #0x1                   	// #1
  454128:	ldp	x19, x20, [sp, #16]
  45412c:	ldp	x21, x22, [sp, #32]
  454130:	ldp	x29, x30, [sp], #48
  454134:	ret
  454138:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  45413c:	ldr	x0, [x0, #1368]
  454140:	blr	x0
  454144:	b	4540e8 <ferror@plt+0x513b8>
  454148:	stp	x29, x30, [sp, #-16]!
  45414c:	mov	x29, sp
  454150:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454154:	add	x2, x2, #0xd78
  454158:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1cc60>
  45415c:	add	x1, x1, #0x420
  454160:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454164:	ldr	x0, [x0, #1424]
  454168:	bl	402ce0 <fprintf@plt>
  45416c:	mov	w0, #0x1                   	// #1
  454170:	bl	4026b0 <exit@plt>

0000000000454174 <_obstack_begin@@Base>:
  454174:	stp	x29, x30, [sp, #-16]!
  454178:	mov	x29, sp
  45417c:	str	x3, [x0, #56]
  454180:	str	x4, [x0, #64]
  454184:	ldrb	w3, [x0, #80]
  454188:	and	w3, w3, #0xfffffffe
  45418c:	strb	w3, [x0, #80]
  454190:	bl	4540a0 <ferror@plt+0x51370>
  454194:	ldp	x29, x30, [sp], #16
  454198:	ret

000000000045419c <_obstack_begin_1@@Base>:
  45419c:	stp	x29, x30, [sp, #-16]!
  4541a0:	mov	x29, sp
  4541a4:	str	x3, [x0, #56]
  4541a8:	str	x4, [x0, #64]
  4541ac:	str	x5, [x0, #72]
  4541b0:	ldrb	w3, [x0, #80]
  4541b4:	orr	w3, w3, #0x1
  4541b8:	strb	w3, [x0, #80]
  4541bc:	bl	4540a0 <ferror@plt+0x51370>
  4541c0:	ldp	x29, x30, [sp], #16
  4541c4:	ret

00000000004541c8 <_obstack_newchunk@@Base>:
  4541c8:	stp	x29, x30, [sp, #-64]!
  4541cc:	mov	x29, sp
  4541d0:	stp	x19, x20, [sp, #16]
  4541d4:	stp	x21, x22, [sp, #32]
  4541d8:	str	x23, [sp, #48]
  4541dc:	mov	x19, x0
  4541e0:	ldr	x22, [x0, #8]
  4541e4:	ldr	x21, [x0, #24]
  4541e8:	ldr	x0, [x0, #16]
  4541ec:	sub	x21, x21, x0
  4541f0:	add	x3, x21, x1
  4541f4:	ldr	x0, [x19, #48]
  4541f8:	add	x0, x3, x0
  4541fc:	lsr	x20, x21, #3
  454200:	add	x20, x20, #0x64
  454204:	add	x1, x20, x0
  454208:	ldr	x2, [x19]
  45420c:	cmp	x2, x0
  454210:	csel	x2, x2, x0, cs  // cs = hs, nlast
  454214:	cmp	x2, x1
  454218:	csel	x20, x2, x1, cs  // cs = hs, nlast
  45421c:	cmp	x21, x3
  454220:	ccmp	x3, x0, #0x2, ls  // ls = plast
  454224:	b.ls	4542bc <_obstack_newchunk@@Base+0xf4>  // b.plast
  454228:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  45422c:	ldr	x0, [x0, #1368]
  454230:	blr	x0
  454234:	mov	x23, #0x0                   	// #0
  454238:	str	x23, [x19, #8]
  45423c:	str	x22, [x23, #8]
  454240:	add	x1, x23, x20
  454244:	str	x1, [x19, #32]
  454248:	mov	x2, x23
  45424c:	str	x1, [x2], #16
  454250:	ldr	x20, [x19, #48]
  454254:	add	x2, x2, x20
  454258:	bic	x20, x2, x20
  45425c:	mov	x2, x21
  454260:	ldr	x1, [x19, #16]
  454264:	mov	x0, x20
  454268:	bl	402620 <memcpy@plt>
  45426c:	ldrb	w0, [x19, #80]
  454270:	tbnz	w0, #1, 454290 <_obstack_newchunk@@Base+0xc8>
  454274:	ldr	x0, [x19, #48]
  454278:	add	x1, x22, #0x10
  45427c:	add	x1, x1, x0
  454280:	bic	x0, x1, x0
  454284:	ldr	x1, [x19, #16]
  454288:	cmp	x1, x0
  45428c:	b.eq	4542d4 <_obstack_newchunk@@Base+0x10c>  // b.none
  454290:	str	x20, [x19, #16]
  454294:	add	x20, x20, x21
  454298:	str	x20, [x19, #24]
  45429c:	ldrb	w0, [x19, #80]
  4542a0:	and	w0, w0, #0xfffffffd
  4542a4:	strb	w0, [x19, #80]
  4542a8:	ldp	x19, x20, [sp, #16]
  4542ac:	ldp	x21, x22, [sp, #32]
  4542b0:	ldr	x23, [sp, #48]
  4542b4:	ldp	x29, x30, [sp], #64
  4542b8:	ret
  4542bc:	mov	x1, x20
  4542c0:	mov	x0, x19
  4542c4:	bl	454030 <ferror@plt+0x51300>
  4542c8:	mov	x23, x0
  4542cc:	cbnz	x0, 454238 <_obstack_newchunk@@Base+0x70>
  4542d0:	b	454228 <_obstack_newchunk@@Base+0x60>
  4542d4:	ldr	x0, [x22, #8]
  4542d8:	str	x0, [x23, #8]
  4542dc:	mov	x1, x22
  4542e0:	mov	x0, x19
  4542e4:	bl	454068 <ferror@plt+0x51338>
  4542e8:	b	454290 <_obstack_newchunk@@Base+0xc8>

00000000004542ec <_obstack_allocated_p@@Base>:
  4542ec:	ldr	x0, [x0, #8]
  4542f0:	cbnz	x0, 454300 <_obstack_allocated_p@@Base+0x14>
  4542f4:	b	454314 <_obstack_allocated_p@@Base+0x28>
  4542f8:	ldr	x0, [x0, #8]
  4542fc:	cbz	x0, 454314 <_obstack_allocated_p@@Base+0x28>
  454300:	cmp	x1, x0
  454304:	b.ls	4542f8 <_obstack_allocated_p@@Base+0xc>  // b.plast
  454308:	ldr	x2, [x0]
  45430c:	cmp	x2, x1
  454310:	b.cc	4542f8 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  454314:	cmp	x0, #0x0
  454318:	cset	w0, ne  // ne = any
  45431c:	ret

0000000000454320 <_obstack_free@@Base>:
  454320:	stp	x29, x30, [sp, #-48]!
  454324:	mov	x29, sp
  454328:	stp	x19, x20, [sp, #16]
  45432c:	str	x21, [sp, #32]
  454330:	mov	x19, x0
  454334:	mov	x21, x1
  454338:	ldr	x1, [x0, #8]
  45433c:	cbnz	x1, 454368 <_obstack_free@@Base+0x48>
  454340:	cbz	x21, 454390 <_obstack_free@@Base+0x70>
  454344:	bl	402990 <abort@plt>
  454348:	ldr	x20, [x1, #8]
  45434c:	mov	x0, x19
  454350:	bl	454068 <ferror@plt+0x51338>
  454354:	ldrb	w2, [x19, #80]
  454358:	orr	w2, w2, #0x2
  45435c:	strb	w2, [x19, #80]
  454360:	cbz	x20, 454340 <_obstack_free@@Base+0x20>
  454364:	mov	x1, x20
  454368:	cmp	x21, x1
  45436c:	b.ls	454348 <_obstack_free@@Base+0x28>  // b.plast
  454370:	ldr	x0, [x1]
  454374:	cmp	x0, x21
  454378:	b.cc	454348 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  45437c:	str	x21, [x19, #24]
  454380:	str	x21, [x19, #16]
  454384:	ldr	x0, [x1]
  454388:	str	x0, [x19, #32]
  45438c:	str	x1, [x19, #8]
  454390:	ldp	x19, x20, [sp, #16]
  454394:	ldr	x21, [sp, #32]
  454398:	ldp	x29, x30, [sp], #48
  45439c:	ret

00000000004543a0 <_obstack_memory_used@@Base>:
  4543a0:	ldr	x1, [x0, #8]
  4543a4:	cbz	x1, 4543c4 <_obstack_memory_used@@Base+0x24>
  4543a8:	mov	x0, #0x0                   	// #0
  4543ac:	ldr	x2, [x1]
  4543b0:	sub	x2, x2, x1
  4543b4:	add	x0, x0, x2
  4543b8:	ldr	x1, [x1, #8]
  4543bc:	cbnz	x1, 4543ac <_obstack_memory_used@@Base+0xc>
  4543c0:	ret
  4543c4:	mov	x0, #0x0                   	// #0
  4543c8:	b	4543c0 <_obstack_memory_used@@Base+0x20>
  4543cc:	stp	x29, x30, [sp, #-64]!
  4543d0:	mov	x29, sp
  4543d4:	stp	x19, x20, [sp, #16]
  4543d8:	stp	x21, x22, [sp, #32]
  4543dc:	str	x23, [sp, #48]
  4543e0:	mov	x19, x0
  4543e4:	mov	x21, x1
  4543e8:	mov	x20, x2
  4543ec:	and	w23, w3, #0xff
  4543f0:	mov	x0, x2
  4543f4:	bl	402680 <strlen@plt>
  4543f8:	mov	x22, x0
  4543fc:	mov	x2, x0
  454400:	mov	x1, x20
  454404:	ldr	x0, [x19]
  454408:	bl	402830 <strncmp@plt>
  45440c:	cbnz	w0, 454448 <_obstack_memory_used@@Base+0xa8>
  454410:	ldr	x0, [x21]
  454414:	strb	w23, [x0]
  454418:	ldr	x0, [x19]
  45441c:	add	x22, x0, x22
  454420:	str	x22, [x19]
  454424:	ldr	x0, [x21]
  454428:	add	x0, x0, #0x1
  45442c:	str	x0, [x21]
  454430:	mov	w0, #0x1                   	// #1
  454434:	ldp	x19, x20, [sp, #16]
  454438:	ldp	x21, x22, [sp, #32]
  45443c:	ldr	x23, [sp, #48]
  454440:	ldp	x29, x30, [sp], #64
  454444:	ret
  454448:	mov	w0, #0x0                   	// #0
  45444c:	b	454434 <_obstack_memory_used@@Base+0x94>
  454450:	stp	x29, x30, [sp, #-160]!
  454454:	mov	x29, sp
  454458:	stp	x19, x20, [sp, #16]
  45445c:	cbz	x0, 454858 <_obstack_memory_used@@Base+0x4b8>
  454460:	stp	x21, x22, [sp, #32]
  454464:	mov	x19, x0
  454468:	bl	402680 <strlen@plt>
  45446c:	mov	x22, x0
  454470:	mov	w20, #0x0                   	// #0
  454474:	cmp	x0, #0x13
  454478:	b.hi	454484 <_obstack_memory_used@@Base+0xe4>  // b.pmore
  45447c:	ldp	x21, x22, [sp, #32]
  454480:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454484:	sub	x21, x0, #0x13
  454488:	add	x21, x19, x21
  45448c:	mov	x2, #0x3                   	// #3
  454490:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454494:	add	x1, x1, #0xd90
  454498:	mov	x0, x21
  45449c:	bl	402830 <strncmp@plt>
  4544a0:	mov	w20, w0
  4544a4:	cbz	w0, 4544b4 <_obstack_memory_used@@Base+0x114>
  4544a8:	mov	w20, #0x0                   	// #0
  4544ac:	ldp	x21, x22, [sp, #32]
  4544b0:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  4544b4:	add	x1, x21, #0x3
  4544b8:	stp	xzr, xzr, [sp, #144]
  4544bc:	add	x0, x21, #0x13
  4544c0:	cmp	x1, x0
  4544c4:	b.cs	45451c <_obstack_memory_used@@Base+0x17c>  // b.hs, b.nlast
  4544c8:	add	x22, x19, x22
  4544cc:	add	x4, sp, #0x90
  4544d0:	mov	w3, #0x1                   	// #1
  4544d4:	b	4544fc <_obstack_memory_used@@Base+0x15c>
  4544d8:	sub	w2, w0, #0x61
  4544dc:	and	w2, w2, #0xff
  4544e0:	cmp	w2, #0x5
  4544e4:	b.hi	4544a8 <_obstack_memory_used@@Base+0x108>  // b.pmore
  4544e8:	sub	w0, w0, #0x57
  4544ec:	strb	w3, [x4, w0, sxtw]
  4544f0:	add	x1, x1, #0x1
  4544f4:	cmp	x22, x1
  4544f8:	b.eq	45451c <_obstack_memory_used@@Base+0x17c>  // b.none
  4544fc:	ldrb	w0, [x1]
  454500:	sub	w2, w0, #0x30
  454504:	and	w2, w2, #0xff
  454508:	cmp	w2, #0x9
  45450c:	b.hi	4544d8 <_obstack_memory_used@@Base+0x138>  // b.pmore
  454510:	sub	w0, w0, #0x30
  454514:	strb	w3, [x4, w0, sxtw]
  454518:	b	4544f0 <_obstack_memory_used@@Base+0x150>
  45451c:	stp	x23, x24, [sp, #48]
  454520:	stp	x25, x26, [sp, #64]
  454524:	stp	x27, x28, [sp, #80]
  454528:	add	x0, sp, #0x90
  45452c:	add	x3, sp, #0xa0
  454530:	mov	w1, w20
  454534:	ldrb	w2, [x0], #1
  454538:	cmp	w2, #0x0
  45453c:	cinc	w1, w1, ne  // ne = any
  454540:	cmp	x0, x3
  454544:	b.ne	454534 <_obstack_memory_used@@Base+0x194>  // b.any
  454548:	sub	w1, w1, #0x5
  45454c:	cmp	w1, #0xa
  454550:	b.hi	454890 <_obstack_memory_used@@Base+0x4f0>  // b.pmore
  454554:	cmp	x21, x19
  454558:	b.ls	454860 <_obstack_memory_used@@Base+0x4c0>  // b.plast
  45455c:	adrp	x24, 479000 <_obstack_memory_used@@Base+0x24c60>
  454560:	add	x24, x24, #0xc10
  454564:	mov	x22, #0xffffffff43ffffff    	// #-3154116609
  454568:	movk	x22, #0x3ff, lsl #48
  45456c:	adrp	x23, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454570:	add	x23, x23, #0xd98
  454574:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454578:	add	x25, x25, #0xda0
  45457c:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454580:	add	x26, x26, #0xda8
  454584:	adrp	x27, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454588:	add	x27, x27, #0xdb0
  45458c:	adrp	x28, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454590:	add	x28, x28, #0xdb8
  454594:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454598:	add	x0, x0, #0xdc0
  45459c:	str	x0, [sp, #96]
  4545a0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4545a4:	add	x0, x0, #0xdc8
  4545a8:	str	x0, [sp, #104]
  4545ac:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4545b0:	add	x0, x0, #0xdd0
  4545b4:	str	x0, [sp, #112]
  4545b8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4545bc:	add	x0, x0, #0xdd8
  4545c0:	str	x0, [sp, #120]
  4545c4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4545c8:	add	x0, x0, #0xde0
  4545cc:	str	x0, [sp, #128]
  4545d0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4545d4:	add	x0, x0, #0xde8
  4545d8:	str	x0, [sp, #136]
  4545dc:	b	45480c <_obstack_memory_used@@Base+0x46c>
  4545e0:	ldp	x21, x22, [sp, #32]
  4545e4:	ldp	x23, x24, [sp, #48]
  4545e8:	ldp	x25, x26, [sp, #64]
  4545ec:	ldp	x27, x28, [sp, #80]
  4545f0:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  4545f4:	cmp	w0, #0x3a
  4545f8:	b.ls	454630 <_obstack_memory_used@@Base+0x290>  // b.plast
  4545fc:	sub	w0, w0, #0x41
  454600:	and	w0, w0, #0xff
  454604:	cmp	w0, #0x39
  454608:	b.hi	454658 <_obstack_memory_used@@Base+0x2b8>  // b.pmore
  45460c:	mov	x1, #0x1                   	// #1
  454610:	lsl	x0, x1, x0
  454614:	tst	x0, x22
  454618:	b.ne	454800 <_obstack_memory_used@@Base+0x460>  // b.any
  45461c:	ldp	x21, x22, [sp, #32]
  454620:	ldp	x23, x24, [sp, #48]
  454624:	ldp	x25, x26, [sp, #64]
  454628:	ldp	x27, x28, [sp, #80]
  45462c:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454630:	cmp	w0, #0x2f
  454634:	b.hi	454800 <_obstack_memory_used@@Base+0x460>  // b.pmore
  454638:	ldp	x21, x22, [sp, #32]
  45463c:	ldp	x23, x24, [sp, #48]
  454640:	ldp	x25, x26, [sp, #64]
  454644:	ldp	x27, x28, [sp, #80]
  454648:	mov	w0, w20
  45464c:	ldp	x19, x20, [sp, #16]
  454650:	ldp	x29, x30, [sp], #160
  454654:	ret
  454658:	ldp	x21, x22, [sp, #32]
  45465c:	ldp	x23, x24, [sp, #48]
  454660:	ldp	x25, x26, [sp, #64]
  454664:	ldp	x27, x28, [sp, #80]
  454668:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  45466c:	mov	x2, #0x4                   	// #4
  454670:	mov	x1, x25
  454674:	mov	x0, x19
  454678:	bl	402830 <strncmp@plt>
  45467c:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  454680:	mov	x2, #0x4                   	// #4
  454684:	mov	x1, x26
  454688:	mov	x0, x19
  45468c:	bl	402830 <strncmp@plt>
  454690:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  454694:	mov	x2, #0x4                   	// #4
  454698:	mov	x1, x27
  45469c:	mov	x0, x19
  4546a0:	bl	402830 <strncmp@plt>
  4546a4:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  4546a8:	mov	x2, #0x4                   	// #4
  4546ac:	mov	x1, x28
  4546b0:	mov	x0, x19
  4546b4:	bl	402830 <strncmp@plt>
  4546b8:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  4546bc:	mov	x2, #0x4                   	// #4
  4546c0:	ldr	x1, [sp, #96]
  4546c4:	mov	x0, x19
  4546c8:	bl	402830 <strncmp@plt>
  4546cc:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  4546d0:	mov	x2, #0x4                   	// #4
  4546d4:	ldr	x1, [sp, #104]
  4546d8:	mov	x0, x19
  4546dc:	bl	402830 <strncmp@plt>
  4546e0:	cbz	w0, 4546f8 <_obstack_memory_used@@Base+0x358>
  4546e4:	mov	x2, #0x4                   	// #4
  4546e8:	ldr	x1, [sp, #112]
  4546ec:	mov	x0, x19
  4546f0:	bl	402830 <strncmp@plt>
  4546f4:	cbnz	w0, 454700 <_obstack_memory_used@@Base+0x360>
  4546f8:	add	x19, x19, #0x4
  4546fc:	b	454804 <_obstack_memory_used@@Base+0x464>
  454700:	mov	x2, #0x5                   	// #5
  454704:	ldr	x1, [sp, #120]
  454708:	mov	x0, x19
  45470c:	bl	402830 <strncmp@plt>
  454710:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  454714:	mov	x2, #0x5                   	// #5
  454718:	ldr	x1, [sp, #128]
  45471c:	mov	x0, x19
  454720:	bl	402830 <strncmp@plt>
  454724:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  454728:	mov	x2, #0x5                   	// #5
  45472c:	ldr	x1, [sp, #136]
  454730:	mov	x0, x19
  454734:	bl	402830 <strncmp@plt>
  454738:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  45473c:	mov	x2, #0x5                   	// #5
  454740:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454744:	add	x1, x1, #0xdf0
  454748:	mov	x0, x19
  45474c:	bl	402830 <strncmp@plt>
  454750:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  454754:	mov	x2, #0x5                   	// #5
  454758:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45475c:	add	x1, x1, #0xdf8
  454760:	mov	x0, x19
  454764:	bl	402830 <strncmp@plt>
  454768:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  45476c:	mov	x2, #0x5                   	// #5
  454770:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454774:	add	x1, x1, #0xe00
  454778:	mov	x0, x19
  45477c:	bl	402830 <strncmp@plt>
  454780:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  454784:	mov	x2, #0x5                   	// #5
  454788:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  45478c:	add	x1, x1, #0xe08
  454790:	mov	x0, x19
  454794:	bl	402830 <strncmp@plt>
  454798:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  45479c:	mov	x2, #0x5                   	// #5
  4547a0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4547a4:	add	x1, x1, #0xe10
  4547a8:	mov	x0, x19
  4547ac:	bl	402830 <strncmp@plt>
  4547b0:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  4547b4:	mov	x2, #0x5                   	// #5
  4547b8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4547bc:	add	x1, x1, #0xe18
  4547c0:	mov	x0, x19
  4547c4:	bl	402830 <strncmp@plt>
  4547c8:	cbz	w0, 4547e4 <_obstack_memory_used@@Base+0x444>
  4547cc:	mov	x2, #0x5                   	// #5
  4547d0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4547d4:	add	x1, x1, #0xe20
  4547d8:	mov	x0, x19
  4547dc:	bl	402830 <strncmp@plt>
  4547e0:	cbnz	w0, 4548a4 <_obstack_memory_used@@Base+0x504>
  4547e4:	add	x19, x19, #0x5
  4547e8:	b	454804 <_obstack_memory_used@@Base+0x464>
  4547ec:	mov	x2, #0x3                   	// #3
  4547f0:	mov	x1, x24
  4547f4:	mov	x0, x19
  4547f8:	bl	402830 <strncmp@plt>
  4547fc:	cbz	w0, 454878 <_obstack_memory_used@@Base+0x4d8>
  454800:	add	x19, x19, #0x1
  454804:	cmp	x21, x19
  454808:	b.ls	454840 <_obstack_memory_used@@Base+0x4a0>  // b.plast
  45480c:	ldrb	w0, [x19]
  454810:	cmp	w0, #0x2e
  454814:	b.eq	4547ec <_obstack_memory_used@@Base+0x44c>  // b.none
  454818:	b.hi	4545f4 <_obstack_memory_used@@Base+0x254>  // b.pmore
  45481c:	cmp	w0, #0x24
  454820:	b.ne	4545e0 <_obstack_memory_used@@Base+0x240>  // b.any
  454824:	mov	x2, #0x3                   	// #3
  454828:	mov	x1, x23
  45482c:	mov	x0, x19
  454830:	bl	402830 <strncmp@plt>
  454834:	cbnz	w0, 45466c <_obstack_memory_used@@Base+0x2cc>
  454838:	add	x19, x19, #0x3
  45483c:	b	454804 <_obstack_memory_used@@Base+0x464>
  454840:	mov	w20, #0x1                   	// #1
  454844:	ldp	x21, x22, [sp, #32]
  454848:	ldp	x23, x24, [sp, #48]
  45484c:	ldp	x25, x26, [sp, #64]
  454850:	ldp	x27, x28, [sp, #80]
  454854:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454858:	mov	w20, #0x0                   	// #0
  45485c:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454860:	mov	w20, #0x1                   	// #1
  454864:	ldp	x21, x22, [sp, #32]
  454868:	ldp	x23, x24, [sp, #48]
  45486c:	ldp	x25, x26, [sp, #64]
  454870:	ldp	x27, x28, [sp, #80]
  454874:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454878:	mov	w20, w0
  45487c:	ldp	x21, x22, [sp, #32]
  454880:	ldp	x23, x24, [sp, #48]
  454884:	ldp	x25, x26, [sp, #64]
  454888:	ldp	x27, x28, [sp, #80]
  45488c:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  454890:	ldp	x21, x22, [sp, #32]
  454894:	ldp	x23, x24, [sp, #48]
  454898:	ldp	x25, x26, [sp, #64]
  45489c:	ldp	x27, x28, [sp, #80]
  4548a0:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  4548a4:	ldp	x21, x22, [sp, #32]
  4548a8:	ldp	x23, x24, [sp, #48]
  4548ac:	ldp	x25, x26, [sp, #64]
  4548b0:	ldp	x27, x28, [sp, #80]
  4548b4:	b	454648 <_obstack_memory_used@@Base+0x2a8>
  4548b8:	cbz	x0, 454c54 <_obstack_memory_used@@Base+0x8b4>
  4548bc:	stp	x29, x30, [sp, #-64]!
  4548c0:	mov	x29, sp
  4548c4:	stp	x19, x20, [sp, #16]
  4548c8:	mov	x19, x0
  4548cc:	str	x0, [sp, #56]
  4548d0:	str	x0, [sp, #48]
  4548d4:	bl	402680 <strlen@plt>
  4548d8:	sub	x20, x0, #0x13
  4548dc:	add	x20, x19, x20
  4548e0:	cmp	x19, x20
  4548e4:	b.cs	454934 <_obstack_memory_used@@Base+0x594>  // b.hs, b.nlast
  4548e8:	stp	x21, x22, [sp, #32]
  4548ec:	mov	x3, x19
  4548f0:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4548f4:	add	x21, x21, #0xd98
  4548f8:	mov	w22, #0x2c                  	// #44
  4548fc:	b	454980 <_obstack_memory_used@@Base+0x5e0>
  454900:	cmp	w1, #0x5f
  454904:	b.eq	454bcc <_obstack_memory_used@@Base+0x82c>  // b.none
  454908:	b.ls	454948 <_obstack_memory_used@@Base+0x5a8>  // b.plast
  45490c:	sub	w1, w1, #0x61
  454910:	and	w1, w1, #0xff
  454914:	cmp	w1, #0x19
  454918:	b.ls	454958 <_obstack_memory_used@@Base+0x5b8>  // b.plast
  45491c:	ldr	x0, [sp, #48]
  454920:	add	x1, x0, #0x1
  454924:	str	x1, [sp, #48]
  454928:	mov	w1, #0x3f                  	// #63
  45492c:	strb	w1, [x0]
  454930:	ldp	x21, x22, [sp, #32]
  454934:	ldr	x0, [sp, #48]
  454938:	strb	wzr, [x0]
  45493c:	ldp	x19, x20, [sp, #16]
  454940:	ldp	x29, x30, [sp], #64
  454944:	ret
  454948:	sub	w1, w1, #0x41
  45494c:	and	w1, w1, #0xff
  454950:	cmp	w1, #0x19
  454954:	b.hi	45491c <_obstack_memory_used@@Base+0x57c>  // b.pmore
  454958:	add	x0, x3, #0x1
  45495c:	str	x0, [sp, #56]
  454960:	ldr	x0, [sp, #48]
  454964:	add	x1, x0, #0x1
  454968:	str	x1, [sp, #48]
  45496c:	ldrb	w1, [x3]
  454970:	strb	w1, [x0]
  454974:	ldr	x3, [sp, #56]
  454978:	cmp	x3, x20
  45497c:	b.cs	454c4c <_obstack_memory_used@@Base+0x8ac>  // b.hs, b.nlast
  454980:	ldrb	w1, [x3]
  454984:	cmp	w1, #0x3a
  454988:	b.hi	454900 <_obstack_memory_used@@Base+0x560>  // b.pmore
  45498c:	cmp	w1, #0x2f
  454990:	b.hi	454958 <_obstack_memory_used@@Base+0x5b8>  // b.pmore
  454994:	cmp	w1, #0x24
  454998:	b.eq	4549d4 <_obstack_memory_used@@Base+0x634>  // b.none
  45499c:	cmp	w1, #0x2e
  4549a0:	b.ne	45491c <_obstack_memory_used@@Base+0x57c>  // b.any
  4549a4:	ldrb	w0, [x3, #1]
  4549a8:	cmp	w0, #0x2e
  4549ac:	b.eq	454c18 <_obstack_memory_used@@Base+0x878>  // b.none
  4549b0:	ldr	x0, [sp, #48]
  4549b4:	add	x1, x0, #0x1
  4549b8:	str	x1, [sp, #48]
  4549bc:	mov	w1, #0x2d                  	// #45
  4549c0:	strb	w1, [x0]
  4549c4:	ldr	x0, [sp, #56]
  4549c8:	add	x0, x0, #0x1
  4549cc:	str	x0, [sp, #56]
  4549d0:	b	454974 <_obstack_memory_used@@Base+0x5d4>
  4549d4:	mov	w3, w22
  4549d8:	mov	x2, x21
  4549dc:	add	x1, sp, #0x30
  4549e0:	add	x0, sp, #0x38
  4549e4:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  4549e8:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  4549ec:	mov	w3, #0x40                  	// #64
  4549f0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4549f4:	add	x2, x2, #0xda0
  4549f8:	add	x1, sp, #0x30
  4549fc:	add	x0, sp, #0x38
  454a00:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a04:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a08:	mov	w3, #0x2a                  	// #42
  454a0c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a10:	add	x2, x2, #0xda8
  454a14:	add	x1, sp, #0x30
  454a18:	add	x0, sp, #0x38
  454a1c:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a20:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a24:	mov	w3, #0x26                  	// #38
  454a28:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a2c:	add	x2, x2, #0xdb0
  454a30:	add	x1, sp, #0x30
  454a34:	add	x0, sp, #0x38
  454a38:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a3c:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a40:	mov	w3, #0x3c                  	// #60
  454a44:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a48:	add	x2, x2, #0xdb8
  454a4c:	add	x1, sp, #0x30
  454a50:	add	x0, sp, #0x38
  454a54:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a58:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a5c:	mov	w3, #0x3e                  	// #62
  454a60:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a64:	add	x2, x2, #0xdc0
  454a68:	add	x1, sp, #0x30
  454a6c:	add	x0, sp, #0x38
  454a70:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a74:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a78:	mov	w3, #0x28                  	// #40
  454a7c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a80:	add	x2, x2, #0xdc8
  454a84:	add	x1, sp, #0x30
  454a88:	add	x0, sp, #0x38
  454a8c:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454a90:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454a94:	mov	w3, #0x29                  	// #41
  454a98:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454a9c:	add	x2, x2, #0xdd0
  454aa0:	add	x1, sp, #0x30
  454aa4:	add	x0, sp, #0x38
  454aa8:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454aac:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454ab0:	mov	w3, #0x20                  	// #32
  454ab4:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454ab8:	add	x2, x2, #0xdd8
  454abc:	add	x1, sp, #0x30
  454ac0:	add	x0, sp, #0x38
  454ac4:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454ac8:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454acc:	mov	w3, #0x22                  	// #34
  454ad0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454ad4:	add	x2, x2, #0xde0
  454ad8:	add	x1, sp, #0x30
  454adc:	add	x0, sp, #0x38
  454ae0:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454ae4:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454ae8:	mov	w3, #0x27                  	// #39
  454aec:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454af0:	add	x2, x2, #0xde8
  454af4:	add	x1, sp, #0x30
  454af8:	add	x0, sp, #0x38
  454afc:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b00:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b04:	mov	w3, #0x2b                  	// #43
  454b08:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b0c:	add	x2, x2, #0xdf0
  454b10:	add	x1, sp, #0x30
  454b14:	add	x0, sp, #0x38
  454b18:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b1c:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b20:	mov	w3, #0x3b                  	// #59
  454b24:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b28:	add	x2, x2, #0xdf8
  454b2c:	add	x1, sp, #0x30
  454b30:	add	x0, sp, #0x38
  454b34:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b38:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b3c:	mov	w3, #0x5b                  	// #91
  454b40:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b44:	add	x2, x2, #0xe00
  454b48:	add	x1, sp, #0x30
  454b4c:	add	x0, sp, #0x38
  454b50:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b54:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b58:	mov	w3, #0x5d                  	// #93
  454b5c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b60:	add	x2, x2, #0xe08
  454b64:	add	x1, sp, #0x30
  454b68:	add	x0, sp, #0x38
  454b6c:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b70:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b74:	mov	w3, #0x7b                  	// #123
  454b78:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b7c:	add	x2, x2, #0xe10
  454b80:	add	x1, sp, #0x30
  454b84:	add	x0, sp, #0x38
  454b88:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454b8c:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454b90:	mov	w3, #0x7d                  	// #125
  454b94:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454b98:	add	x2, x2, #0xe18
  454b9c:	add	x1, sp, #0x30
  454ba0:	add	x0, sp, #0x38
  454ba4:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454ba8:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454bac:	mov	w3, #0x7e                  	// #126
  454bb0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  454bb4:	add	x2, x2, #0xe20
  454bb8:	add	x1, sp, #0x30
  454bbc:	add	x0, sp, #0x38
  454bc0:	bl	4543cc <_obstack_memory_used@@Base+0x2c>
  454bc4:	cbnz	w0, 454974 <_obstack_memory_used@@Base+0x5d4>
  454bc8:	b	45491c <_obstack_memory_used@@Base+0x57c>
  454bcc:	cmp	x19, x3
  454bd0:	b.eq	454c00 <_obstack_memory_used@@Base+0x860>  // b.none
  454bd4:	ldurb	w0, [x3, #-1]
  454bd8:	cmp	w0, #0x3a
  454bdc:	b.eq	454c00 <_obstack_memory_used@@Base+0x860>  // b.none
  454be0:	add	x0, x3, #0x1
  454be4:	str	x0, [sp, #56]
  454be8:	ldr	x0, [sp, #48]
  454bec:	add	x1, x0, #0x1
  454bf0:	str	x1, [sp, #48]
  454bf4:	ldrb	w1, [x3]
  454bf8:	strb	w1, [x0]
  454bfc:	b	454974 <_obstack_memory_used@@Base+0x5d4>
  454c00:	ldrb	w0, [x3, #1]
  454c04:	cmp	w0, #0x24
  454c08:	b.ne	454be0 <_obstack_memory_used@@Base+0x840>  // b.any
  454c0c:	add	x3, x3, #0x1
  454c10:	str	x3, [sp, #56]
  454c14:	b	454974 <_obstack_memory_used@@Base+0x5d4>
  454c18:	ldr	x0, [sp, #48]
  454c1c:	add	x1, x0, #0x1
  454c20:	str	x1, [sp, #48]
  454c24:	mov	w1, #0x3a                  	// #58
  454c28:	strb	w1, [x0]
  454c2c:	ldr	x0, [sp, #48]
  454c30:	add	x2, x0, #0x1
  454c34:	str	x2, [sp, #48]
  454c38:	strb	w1, [x0]
  454c3c:	ldr	x0, [sp, #56]
  454c40:	add	x0, x0, #0x2
  454c44:	str	x0, [sp, #56]
  454c48:	b	454974 <_obstack_memory_used@@Base+0x5d4>
  454c4c:	ldp	x21, x22, [sp, #32]
  454c50:	b	454934 <_obstack_memory_used@@Base+0x594>
  454c54:	ret
  454c58:	stp	x29, x30, [sp, #-32]!
  454c5c:	mov	x29, sp
  454c60:	str	x19, [sp, #16]
  454c64:	mov	w19, w0
  454c68:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454c6c:	ldr	x0, [x0, #3496]
  454c70:	cbz	x0, 454c78 <_obstack_memory_used@@Base+0x8d8>
  454c74:	blr	x0
  454c78:	mov	w0, w19
  454c7c:	bl	4026b0 <exit@plt>
  454c80:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454c84:	str	x0, [x1, #1376]
  454c88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454c8c:	ldr	x0, [x0, #2736]
  454c90:	cbz	x0, 454c98 <_obstack_memory_used@@Base+0x8f8>
  454c94:	ret
  454c98:	stp	x29, x30, [sp, #-16]!
  454c9c:	mov	x29, sp
  454ca0:	bl	4026c0 <sbrk@plt>
  454ca4:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454ca8:	str	x0, [x1, #2736]
  454cac:	ldp	x29, x30, [sp], #16
  454cb0:	ret
  454cb4:	stp	x29, x30, [sp, #-32]!
  454cb8:	mov	x29, sp
  454cbc:	stp	x19, x20, [sp, #16]
  454cc0:	mov	x19, x0
  454cc4:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454cc8:	ldr	x20, [x0, #2736]
  454ccc:	cbz	x20, 454d20 <_obstack_memory_used@@Base+0x980>
  454cd0:	mov	x0, #0x0                   	// #0
  454cd4:	bl	4026c0 <sbrk@plt>
  454cd8:	sub	x5, x0, x20
  454cdc:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454ce0:	ldr	x2, [x0, #1376]
  454ce4:	ldrb	w0, [x2]
  454ce8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  454cec:	add	x1, x1, #0xd70
  454cf0:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1bc60>
  454cf4:	add	x3, x3, #0x258
  454cf8:	cmp	w0, #0x0
  454cfc:	mov	x4, x19
  454d00:	csel	x3, x3, x1, ne  // ne = any
  454d04:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  454d08:	add	x1, x1, #0x228
  454d0c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454d10:	ldr	x0, [x0, #1424]
  454d14:	bl	402ce0 <fprintf@plt>
  454d18:	mov	w0, #0x1                   	// #1
  454d1c:	bl	454c58 <_obstack_memory_used@@Base+0x8b8>
  454d20:	mov	x0, #0x0                   	// #0
  454d24:	bl	4026c0 <sbrk@plt>
  454d28:	adrp	x5, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454d2c:	add	x5, x5, #0x5b8
  454d30:	sub	x5, x0, x5
  454d34:	b	454cdc <_obstack_memory_used@@Base+0x93c>
  454d38:	stp	x29, x30, [sp, #-32]!
  454d3c:	mov	x29, sp
  454d40:	str	x19, [sp, #16]
  454d44:	cmp	x0, #0x0
  454d48:	csinc	x19, x0, xzr, ne  // ne = any
  454d4c:	mov	x0, x19
  454d50:	bl	4027f0 <malloc@plt>
  454d54:	cbz	x0, 454d64 <_obstack_memory_used@@Base+0x9c4>
  454d58:	ldr	x19, [sp, #16]
  454d5c:	ldp	x29, x30, [sp], #32
  454d60:	ret
  454d64:	mov	x0, x19
  454d68:	bl	454cb4 <_obstack_memory_used@@Base+0x914>
  454d6c:	stp	x29, x30, [sp, #-32]!
  454d70:	mov	x29, sp
  454d74:	stp	x19, x20, [sp, #16]
  454d78:	mov	x20, x0
  454d7c:	mov	x19, x1
  454d80:	cmp	x0, #0x0
  454d84:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  454d88:	b.ne	454d94 <_obstack_memory_used@@Base+0x9f4>  // b.any
  454d8c:	mov	x19, #0x1                   	// #1
  454d90:	mov	x20, x19
  454d94:	mov	x1, x19
  454d98:	mov	x0, x20
  454d9c:	bl	4028b0 <calloc@plt>
  454da0:	cbz	x0, 454db0 <_obstack_memory_used@@Base+0xa10>
  454da4:	ldp	x19, x20, [sp, #16]
  454da8:	ldp	x29, x30, [sp], #32
  454dac:	ret
  454db0:	mul	x0, x20, x19
  454db4:	bl	454cb4 <_obstack_memory_used@@Base+0x914>
  454db8:	stp	x29, x30, [sp, #-32]!
  454dbc:	mov	x29, sp
  454dc0:	str	x19, [sp, #16]
  454dc4:	cmp	x1, #0x0
  454dc8:	csinc	x19, x1, xzr, ne  // ne = any
  454dcc:	cbz	x0, 454de8 <_obstack_memory_used@@Base+0xa48>
  454dd0:	mov	x1, x19
  454dd4:	bl	4028f0 <realloc@plt>
  454dd8:	cbz	x0, 454df4 <_obstack_memory_used@@Base+0xa54>
  454ddc:	ldr	x19, [sp, #16]
  454de0:	ldp	x29, x30, [sp], #32
  454de4:	ret
  454de8:	mov	x0, x19
  454dec:	bl	4027f0 <malloc@plt>
  454df0:	b	454dd8 <_obstack_memory_used@@Base+0xa38>
  454df4:	mov	x0, x19
  454df8:	bl	454cb4 <_obstack_memory_used@@Base+0x914>
  454dfc:	stp	x29, x30, [sp, #-48]!
  454e00:	mov	x29, sp
  454e04:	stp	x19, x20, [sp, #16]
  454e08:	stp	x21, x22, [sp, #32]
  454e0c:	mov	x22, x0
  454e10:	mov	x19, x1
  454e14:	mov	x20, x2
  454e18:	mov	x0, x2
  454e1c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  454e20:	mov	x21, x0
  454e24:	cmp	x20, x19
  454e28:	b.hi	454e4c <_obstack_memory_used@@Base+0xaac>  // b.pmore
  454e2c:	mov	x2, x19
  454e30:	mov	x1, x22
  454e34:	mov	x0, x21
  454e38:	bl	402620 <memcpy@plt>
  454e3c:	ldp	x19, x20, [sp, #16]
  454e40:	ldp	x21, x22, [sp, #32]
  454e44:	ldp	x29, x30, [sp], #48
  454e48:	ret
  454e4c:	sub	x2, x20, x19
  454e50:	mov	w1, #0x0                   	// #0
  454e54:	add	x0, x0, x19
  454e58:	bl	402890 <memset@plt>
  454e5c:	b	454e2c <_obstack_memory_used@@Base+0xa8c>
  454e60:	stp	x29, x30, [sp, #-32]!
  454e64:	mov	x29, sp
  454e68:	stp	x19, x20, [sp, #16]
  454e6c:	mov	x20, x0
  454e70:	bl	402680 <strlen@plt>
  454e74:	add	x19, x0, #0x1
  454e78:	mov	x0, x19
  454e7c:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  454e80:	mov	x2, x19
  454e84:	mov	x1, x20
  454e88:	bl	402620 <memcpy@plt>
  454e8c:	ldp	x19, x20, [sp, #16]
  454e90:	ldp	x29, x30, [sp], #32
  454e94:	ret
  454e98:	stp	x29, x30, [sp, #-32]!
  454e9c:	mov	x29, sp
  454ea0:	stp	x19, x20, [sp, #16]
  454ea4:	mov	w20, w0
  454ea8:	bl	402930 <strerror@plt>
  454eac:	cbz	x0, 454ebc <_obstack_memory_used@@Base+0xb1c>
  454eb0:	ldp	x19, x20, [sp, #16]
  454eb4:	ldp	x29, x30, [sp], #32
  454eb8:	ret
  454ebc:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  454ec0:	add	x19, x19, #0xab8
  454ec4:	mov	w2, w20
  454ec8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  454ecc:	add	x1, x1, #0x270
  454ed0:	mov	x0, x19
  454ed4:	bl	402720 <sprintf@plt>
  454ed8:	mov	x0, x19
  454edc:	b	454eb0 <_obstack_memory_used@@Base+0xb10>
  454ee0:	stp	x29, x30, [sp, #-32]!
  454ee4:	mov	x29, sp
  454ee8:	stp	x19, x20, [sp, #16]
  454eec:	mov	x20, x0
  454ef0:	bl	4026d0 <strnlen@plt>
  454ef4:	mov	x19, x0
  454ef8:	add	x0, x0, #0x1
  454efc:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  454f00:	strb	wzr, [x0, x19]
  454f04:	mov	x2, x19
  454f08:	mov	x1, x20
  454f0c:	bl	402620 <memcpy@plt>
  454f10:	ldp	x19, x20, [sp, #16]
  454f14:	ldp	x29, x30, [sp], #32
  454f18:	ret
  454f1c:	stp	x29, x30, [sp, #-80]!
  454f20:	mov	x29, sp
  454f24:	stp	x19, x20, [sp, #16]
  454f28:	str	x21, [sp, #32]
  454f2c:	mov	x21, x0
  454f30:	mov	x19, x1
  454f34:	ldp	x2, x3, [x1]
  454f38:	stp	x2, x3, [sp, #48]
  454f3c:	ldp	x2, x3, [x1, #16]
  454f40:	stp	x2, x3, [sp, #64]
  454f44:	add	x1, sp, #0x30
  454f48:	bl	454f88 <_obstack_memory_used@@Base+0xbe8>
  454f4c:	sxtw	x0, w0
  454f50:	bl	454d38 <_obstack_memory_used@@Base+0x998>
  454f54:	mov	x20, x0
  454f58:	ldp	x2, x3, [x19]
  454f5c:	stp	x2, x3, [sp, #48]
  454f60:	ldp	x2, x3, [x19, #16]
  454f64:	stp	x2, x3, [sp, #64]
  454f68:	add	x2, sp, #0x30
  454f6c:	mov	x1, x21
  454f70:	bl	402b50 <vsprintf@plt>
  454f74:	mov	x0, x20
  454f78:	ldp	x19, x20, [sp, #16]
  454f7c:	ldr	x21, [sp, #32]
  454f80:	ldp	x29, x30, [sp], #80
  454f84:	ret
  454f88:	stp	x29, x30, [sp, #-112]!
  454f8c:	mov	x29, sp
  454f90:	stp	x19, x20, [sp, #16]
  454f94:	stp	x21, x22, [sp, #32]
  454f98:	stp	x23, x24, [sp, #48]
  454f9c:	mov	x19, x1
  454fa0:	str	x0, [sp, #104]
  454fa4:	bl	402680 <strlen@plt>
  454fa8:	add	w23, w0, #0x1
  454fac:	ldp	x0, x1, [x19]
  454fb0:	stp	x0, x1, [sp, #72]
  454fb4:	ldp	x0, x1, [x19, #16]
  454fb8:	stp	x0, x1, [sp, #88]
  454fbc:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  454fc0:	add	x22, x22, #0x288
  454fc4:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  454fc8:	add	x21, x21, #0x290
  454fcc:	ldr	x0, [sp, #104]
  454fd0:	ldrb	w1, [x0]
  454fd4:	cbz	w1, 4552d0 <_obstack_memory_used@@Base+0xf30>
  454fd8:	add	x1, x0, #0x1
  454fdc:	str	x1, [sp, #104]
  454fe0:	ldrb	w0, [x0]
  454fe4:	cmp	w0, #0x25
  454fe8:	b.ne	454fcc <_obstack_memory_used@@Base+0xc2c>  // b.any
  454fec:	ldr	x19, [sp, #104]
  454ff0:	ldrb	w20, [x19]
  454ff4:	mov	w1, w20
  454ff8:	mov	x0, x22
  454ffc:	bl	402ac0 <strchr@plt>
  455000:	cbz	x0, 455010 <_obstack_memory_used@@Base+0xc70>
  455004:	add	x19, x19, #0x1
  455008:	str	x19, [sp, #104]
  45500c:	b	454fec <_obstack_memory_used@@Base+0xc4c>
  455010:	cmp	w20, #0x2a
  455014:	b.ne	4550a8 <_obstack_memory_used@@Base+0xd08>  // b.any
  455018:	add	x19, x19, #0x1
  45501c:	str	x19, [sp, #104]
  455020:	ldr	w1, [sp, #96]
  455024:	ldr	x0, [sp, #72]
  455028:	tbnz	w1, #31, 45507c <_obstack_memory_used@@Base+0xcdc>
  45502c:	add	x1, x0, #0xb
  455030:	and	x1, x1, #0xfffffffffffffff8
  455034:	str	x1, [sp, #72]
  455038:	ldr	w24, [x0]
  45503c:	cmp	w24, #0x0
  455040:	cneg	w24, w24, lt  // lt = tstop
  455044:	add	w24, w24, w23
  455048:	ldr	x1, [sp, #104]
  45504c:	ldrb	w0, [x1]
  455050:	cmp	w0, #0x2e
  455054:	b.eq	4550c0 <_obstack_memory_used@@Base+0xd20>  // b.none
  455058:	ldr	x20, [sp, #104]
  45505c:	ldrb	w19, [x20]
  455060:	mov	w1, w19
  455064:	mov	x0, x21
  455068:	bl	402ac0 <strchr@plt>
  45506c:	cbz	x0, 455148 <_obstack_memory_used@@Base+0xda8>
  455070:	add	x20, x20, #0x1
  455074:	str	x20, [sp, #104]
  455078:	b	455058 <_obstack_memory_used@@Base+0xcb8>
  45507c:	add	w2, w1, #0x8
  455080:	str	w2, [sp, #96]
  455084:	cmp	w2, #0x0
  455088:	b.le	45509c <_obstack_memory_used@@Base+0xcfc>
  45508c:	add	x1, x0, #0xb
  455090:	and	x1, x1, #0xfffffffffffffff8
  455094:	str	x1, [sp, #72]
  455098:	b	455038 <_obstack_memory_used@@Base+0xc98>
  45509c:	ldr	x0, [sp, #80]
  4550a0:	add	x0, x0, w1, sxtw
  4550a4:	b	455038 <_obstack_memory_used@@Base+0xc98>
  4550a8:	mov	w2, #0xa                   	// #10
  4550ac:	add	x1, sp, #0x68
  4550b0:	mov	x0, x19
  4550b4:	bl	402670 <strtoul@plt>
  4550b8:	add	w24, w23, w0
  4550bc:	b	455048 <_obstack_memory_used@@Base+0xca8>
  4550c0:	add	x0, x1, #0x1
  4550c4:	str	x0, [sp, #104]
  4550c8:	ldrb	w2, [x1, #1]
  4550cc:	cmp	w2, #0x2a
  4550d0:	b.ne	455134 <_obstack_memory_used@@Base+0xd94>  // b.any
  4550d4:	add	x1, x1, #0x2
  4550d8:	str	x1, [sp, #104]
  4550dc:	ldr	w1, [sp, #96]
  4550e0:	ldr	x0, [sp, #72]
  4550e4:	tbnz	w1, #31, 455108 <_obstack_memory_used@@Base+0xd68>
  4550e8:	add	x1, x0, #0xb
  4550ec:	and	x1, x1, #0xfffffffffffffff8
  4550f0:	str	x1, [sp, #72]
  4550f4:	ldr	w0, [x0]
  4550f8:	cmp	w0, #0x0
  4550fc:	cneg	w0, w0, lt  // lt = tstop
  455100:	add	w24, w24, w0
  455104:	b	455058 <_obstack_memory_used@@Base+0xcb8>
  455108:	add	w2, w1, #0x8
  45510c:	str	w2, [sp, #96]
  455110:	cmp	w2, #0x0
  455114:	b.le	455128 <_obstack_memory_used@@Base+0xd88>
  455118:	add	x1, x0, #0xb
  45511c:	and	x1, x1, #0xfffffffffffffff8
  455120:	str	x1, [sp, #72]
  455124:	b	4550f4 <_obstack_memory_used@@Base+0xd54>
  455128:	ldr	x0, [sp, #80]
  45512c:	add	x0, x0, w1, sxtw
  455130:	b	4550f4 <_obstack_memory_used@@Base+0xd54>
  455134:	mov	w2, #0xa                   	// #10
  455138:	add	x1, sp, #0x68
  45513c:	bl	402670 <strtoul@plt>
  455140:	add	w24, w24, w0
  455144:	b	455058 <_obstack_memory_used@@Base+0xcb8>
  455148:	add	w23, w24, #0x1e
  45514c:	cmp	w19, #0x67
  455150:	b.ls	4551b0 <_obstack_memory_used@@Base+0xe10>  // b.plast
  455154:	sub	w19, w19, #0x69
  455158:	and	w19, w19, #0xff
  45515c:	cmp	w19, #0xf
  455160:	b.hi	4551b8 <_obstack_memory_used@@Base+0xe18>  // b.pmore
  455164:	mov	x1, #0x1                   	// #1
  455168:	lsl	x1, x1, x19
  45516c:	mov	x0, #0x9041                	// #36929
  455170:	tst	x1, x0
  455174:	b.ne	4551ec <_obstack_memory_used@@Base+0xe4c>  // b.any
  455178:	mov	x0, #0xa0                  	// #160
  45517c:	tst	x1, x0
  455180:	b.ne	455294 <_obstack_memory_used@@Base+0xef4>  // b.any
  455184:	tbz	w1, #10, 4551b8 <_obstack_memory_used@@Base+0xe18>
  455188:	ldr	w1, [sp, #96]
  45518c:	ldr	x0, [sp, #72]
  455190:	tbnz	w1, #31, 455268 <_obstack_memory_used@@Base+0xec8>
  455194:	add	x1, x0, #0xf
  455198:	and	x1, x1, #0xfffffffffffffff8
  45519c:	str	x1, [sp, #72]
  4551a0:	ldr	x0, [x0]
  4551a4:	bl	402680 <strlen@plt>
  4551a8:	add	w23, w23, w0
  4551ac:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  4551b0:	cmp	w19, #0x44
  4551b4:	b.hi	4551c4 <_obstack_memory_used@@Base+0xe24>  // b.pmore
  4551b8:	add	x20, x20, #0x1
  4551bc:	str	x20, [sp, #104]
  4551c0:	b	454fcc <_obstack_memory_used@@Base+0xc2c>
  4551c4:	sub	w19, w19, #0x45
  4551c8:	mov	x0, #0x1                   	// #1
  4551cc:	lsl	x19, x0, x19
  4551d0:	mov	x0, #0x5                   	// #5
  4551d4:	movk	x0, #0x7, lsl #32
  4551d8:	tst	x19, x0
  4551dc:	b.ne	455228 <_obstack_memory_used@@Base+0xe88>  // b.any
  4551e0:	mov	x0, #0xc0080000            	// #3221749760
  4551e4:	tst	x19, x0
  4551e8:	b.eq	4551b8 <_obstack_memory_used@@Base+0xe18>  // b.none
  4551ec:	ldr	w1, [sp, #96]
  4551f0:	ldr	x0, [sp, #72]
  4551f4:	tbnz	w1, #31, 455208 <_obstack_memory_used@@Base+0xe68>
  4551f8:	add	x0, x0, #0xb
  4551fc:	and	x0, x0, #0xfffffffffffffff8
  455200:	str	x0, [sp, #72]
  455204:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  455208:	add	w1, w1, #0x8
  45520c:	str	w1, [sp, #96]
  455210:	cmp	w1, #0x0
  455214:	b.le	4551b8 <_obstack_memory_used@@Base+0xe18>
  455218:	add	x0, x0, #0xb
  45521c:	and	x0, x0, #0xfffffffffffffff8
  455220:	str	x0, [sp, #72]
  455224:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  455228:	ldr	w1, [sp, #100]
  45522c:	ldr	x0, [sp, #72]
  455230:	tbnz	w1, #31, 455248 <_obstack_memory_used@@Base+0xea8>
  455234:	add	x0, x0, #0xf
  455238:	and	x0, x0, #0xfffffffffffffff8
  45523c:	str	x0, [sp, #72]
  455240:	add	w23, w24, #0x151
  455244:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  455248:	add	w1, w1, #0x10
  45524c:	str	w1, [sp, #100]
  455250:	cmp	w1, #0x0
  455254:	b.le	455240 <_obstack_memory_used@@Base+0xea0>
  455258:	add	x0, x0, #0xf
  45525c:	and	x0, x0, #0xfffffffffffffff8
  455260:	str	x0, [sp, #72]
  455264:	b	455240 <_obstack_memory_used@@Base+0xea0>
  455268:	add	w2, w1, #0x8
  45526c:	str	w2, [sp, #96]
  455270:	cmp	w2, #0x0
  455274:	b.le	455288 <_obstack_memory_used@@Base+0xee8>
  455278:	add	x1, x0, #0xf
  45527c:	and	x1, x1, #0xfffffffffffffff8
  455280:	str	x1, [sp, #72]
  455284:	b	4551a0 <_obstack_memory_used@@Base+0xe00>
  455288:	ldr	x0, [sp, #80]
  45528c:	add	x0, x0, w1, sxtw
  455290:	b	4551a0 <_obstack_memory_used@@Base+0xe00>
  455294:	ldr	w1, [sp, #96]
  455298:	ldr	x0, [sp, #72]
  45529c:	tbnz	w1, #31, 4552b0 <_obstack_memory_used@@Base+0xf10>
  4552a0:	add	x0, x0, #0xf
  4552a4:	and	x0, x0, #0xfffffffffffffff8
  4552a8:	str	x0, [sp, #72]
  4552ac:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  4552b0:	add	w1, w1, #0x8
  4552b4:	str	w1, [sp, #96]
  4552b8:	cmp	w1, #0x0
  4552bc:	b.le	4551b8 <_obstack_memory_used@@Base+0xe18>
  4552c0:	add	x0, x0, #0xf
  4552c4:	and	x0, x0, #0xfffffffffffffff8
  4552c8:	str	x0, [sp, #72]
  4552cc:	b	4551b8 <_obstack_memory_used@@Base+0xe18>
  4552d0:	mov	w0, w23
  4552d4:	ldp	x19, x20, [sp, #16]
  4552d8:	ldp	x21, x22, [sp, #32]
  4552dc:	ldp	x23, x24, [sp, #48]
  4552e0:	ldp	x29, x30, [sp], #112
  4552e4:	ret
  4552e8:	b	402a90 <free@plt>
  4552ec:	nop
  4552f0:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  4552f4:	nop
  4552f8:	b	4599d8 <_obstack_memory_used@@Base+0x5638>
  4552fc:	nop
  455300:	stp	x29, x30, [sp, #-64]!
  455304:	mov	x29, sp
  455308:	str	x23, [sp, #48]
  45530c:	mov	x23, x0
  455310:	ldarb	w0, [x0]
  455314:	tst	w0, #0xff
  455318:	b.ne	455374 <_obstack_memory_used@@Base+0xfd4>  // b.any
  45531c:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455320:	ldr	x0, [x0, #3600]
  455324:	cbz	x0, 455384 <_obstack_memory_used@@Base+0xfe4>
  455328:	stp	x19, x20, [sp, #16]
  45532c:	mov	w19, #0x100                 	// #256
  455330:	mov	w20, #0x1                   	// #1
  455334:	stp	x21, x22, [sp, #32]
  455338:	mov	w21, w19
  45533c:	ldaxr	w0, [x23]
  455340:	cbnz	w0, 45534c <_obstack_memory_used@@Base+0xfac>
  455344:	stlxr	w1, w19, [x23]
  455348:	cbnz	w1, 45533c <_obstack_memory_used@@Base+0xf9c>
  45534c:	cmp	w0, #0x0
  455350:	b.ne	4553ac <_obstack_memory_used@@Base+0x100c>  // b.any
  455354:	mov	w0, #0x1                   	// #1
  455358:	ldp	x19, x20, [sp, #16]
  45535c:	ldp	x21, x22, [sp, #32]
  455360:	ldr	x23, [sp, #48]
  455364:	ldp	x29, x30, [sp], #64
  455368:	ret
  45536c:	ldp	x19, x20, [sp, #16]
  455370:	ldp	x21, x22, [sp, #32]
  455374:	mov	w0, #0x0                   	// #0
  455378:	ldr	x23, [sp, #48]
  45537c:	ldp	x29, x30, [sp], #64
  455380:	ret
  455384:	ldrb	w0, [x23]
  455388:	cbnz	w0, 455374 <_obstack_memory_used@@Base+0xfd4>
  45538c:	ldrb	w0, [x23, #1]
  455390:	cbnz	w0, 455424 <_obstack_memory_used@@Base+0x1084>
  455394:	mov	w2, #0x1                   	// #1
  455398:	strb	w2, [x23, #1]
  45539c:	mov	w0, #0x1                   	// #1
  4553a0:	ldr	x23, [sp, #48]
  4553a4:	ldp	x29, x30, [sp], #64
  4553a8:	ret
  4553ac:	orr	w22, w19, #0x10000
  4553b0:	mov	w3, w0
  4553b4:	cmp	w20, w3
  4553b8:	b.eq	45536c <_obstack_memory_used@@Base+0xfcc>  // b.none
  4553bc:	cmp	w19, w3
  4553c0:	b.ne	4553e0 <_obstack_memory_used@@Base+0x1040>  // b.any
  4553c4:	mov	w3, w22
  4553c8:	ldaxr	w2, [x23]
  4553cc:	cmp	w2, w0
  4553d0:	b.ne	4553dc <_obstack_memory_used@@Base+0x103c>  // b.any
  4553d4:	stlxr	w1, w22, [x23]
  4553d8:	cbnz	w1, 4553c8 <_obstack_memory_used@@Base+0x1028>
  4553dc:	b.ne	455414 <_obstack_memory_used@@Base+0x1074>  // b.any
  4553e0:	mov	x1, x23
  4553e4:	mov	w4, #0x0                   	// #0
  4553e8:	mov	w2, #0x0                   	// #0
  4553ec:	mov	x0, #0x62                  	// #98
  4553f0:	bl	402ca0 <syscall@plt>
  4553f4:	ldaxr	w0, [x23]
  4553f8:	cbnz	w0, 455404 <_obstack_memory_used@@Base+0x1064>
  4553fc:	stlxr	w1, w21, [x23]
  455400:	cbnz	w1, 4553f4 <_obstack_memory_used@@Base+0x1054>
  455404:	cmp	w0, #0x0
  455408:	mov	w3, w0
  45540c:	b.eq	455354 <_obstack_memory_used@@Base+0xfb4>  // b.none
  455410:	b	4553b4 <_obstack_memory_used@@Base+0x1014>
  455414:	cmp	w20, w2
  455418:	b.eq	45536c <_obstack_memory_used@@Base+0xfcc>  // b.none
  45541c:	cbnz	w2, 4553e0 <_obstack_memory_used@@Base+0x1040>
  455420:	b	4553f4 <_obstack_memory_used@@Base+0x1054>
  455424:	mov	x0, #0x8                   	// #8
  455428:	stp	x19, x20, [sp, #16]
  45542c:	stp	x21, x22, [sp, #32]
  455430:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  455434:	mov	x19, x0
  455438:	bl	455518 <_obstack_memory_used@@Base+0x1178>
  45543c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455440:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455444:	mov	x0, x19
  455448:	ldr	x2, [x2, #3952]
  45544c:	ldr	x1, [x1, #3640]
  455450:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  455454:	nop
  455458:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45545c:	ldr	x1, [x1, #3600]
  455460:	cbnz	x1, 45546c <_obstack_memory_used@@Base+0x10cc>
  455464:	strb	wzr, [x0, #1]
  455468:	ret
  45546c:	ldaxr	w1, [x0]
  455470:	stlxr	w2, wzr, [x0]
  455474:	cbnz	w2, 45546c <_obstack_memory_used@@Base+0x10cc>
  455478:	tbz	w1, #16, 455468 <_obstack_memory_used@@Base+0x10c8>
  45547c:	mov	x1, x0
  455480:	mov	w3, #0x7fffffff            	// #2147483647
  455484:	mov	w2, #0x1                   	// #1
  455488:	mov	x0, #0x62                  	// #98
  45548c:	b	402ca0 <syscall@plt>
  455490:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455494:	ldr	x1, [x1, #3600]
  455498:	cbz	x1, 4554b4 <_obstack_memory_used@@Base+0x1114>
  45549c:	mov	w2, #0x1                   	// #1
  4554a0:	ldaxr	w1, [x0]
  4554a4:	stlxr	w3, w2, [x0]
  4554a8:	cbnz	w3, 4554a0 <_obstack_memory_used@@Base+0x1100>
  4554ac:	tbnz	w1, #16, 4554c4 <_obstack_memory_used@@Base+0x1124>
  4554b0:	ret
  4554b4:	strb	wzr, [x0, #1]
  4554b8:	mov	w1, #0x1                   	// #1
  4554bc:	stlrb	w1, [x0]
  4554c0:	ret
  4554c4:	mov	x1, x0
  4554c8:	mov	w3, #0x7fffffff            	// #2147483647
  4554cc:	mov	x0, #0x62                  	// #98
  4554d0:	b	402ca0 <syscall@plt>
  4554d4:	nop
  4554d8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4554dc:	ldr	x1, [x1, #4048]
  4554e0:	add	x1, x1, #0x10
  4554e4:	str	x1, [x0]
  4554e8:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  4554ec:	nop
  4554f0:	stp	x29, x30, [sp, #-32]!
  4554f4:	mov	x29, sp
  4554f8:	str	x19, [sp, #16]
  4554fc:	mov	x19, x0
  455500:	bl	4554d8 <_obstack_memory_used@@Base+0x1138>
  455504:	mov	x0, x19
  455508:	mov	x1, #0x8                   	// #8
  45550c:	ldr	x19, [sp, #16]
  455510:	ldp	x29, x30, [sp], #32
  455514:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  455518:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45551c:	ldr	x1, [x1, #4048]
  455520:	add	x1, x1, #0x10
  455524:	str	x1, [x0]
  455528:	ret
  45552c:	nop
  455530:	stp	x29, x30, [sp, #-32]!
  455534:	cmp	x0, #0x0
  455538:	mov	x29, sp
  45553c:	str	x19, [sp, #16]
  455540:	csinc	x19, x0, xzr, ne  // ne = any
  455544:	mov	x0, x19
  455548:	bl	4027f0 <malloc@plt>
  45554c:	cbz	x0, 45555c <_obstack_memory_used@@Base+0x11bc>
  455550:	ldr	x19, [sp, #16]
  455554:	ldp	x29, x30, [sp], #32
  455558:	ret
  45555c:	bl	45ae18 <_obstack_memory_used@@Base+0x6a78>
  455560:	cbz	x0, 45556c <_obstack_memory_used@@Base+0x11cc>
  455564:	blr	x0
  455568:	b	455544 <_obstack_memory_used@@Base+0x11a4>
  45556c:	mov	x0, #0x8                   	// #8
  455570:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  455574:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455578:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45557c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  455580:	ldr	x3, [x3, #3912]
  455584:	ldr	x2, [x2, #3688]
  455588:	add	x3, x3, #0x10
  45558c:	ldr	x1, [x1, #3656]
  455590:	str	x3, [x0]
  455594:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  455598:	b	455530 <_obstack_memory_used@@Base+0x1190>
  45559c:	nop
  4555a0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4555a4:	ldr	x1, [x1, #3944]
  4555a8:	add	x1, x1, #0x10
  4555ac:	str	x1, [x0]
  4555b0:	b	459798 <_obstack_memory_used@@Base+0x53f8>
  4555b4:	nop
  4555b8:	stp	x29, x30, [sp, #-32]!
  4555bc:	mov	x29, sp
  4555c0:	str	x19, [sp, #16]
  4555c4:	mov	x19, x0
  4555c8:	bl	4555a0 <_obstack_memory_used@@Base+0x1200>
  4555cc:	mov	x0, x19
  4555d0:	mov	x1, #0x18                  	// #24
  4555d4:	ldr	x19, [sp, #16]
  4555d8:	ldp	x29, x30, [sp], #32
  4555dc:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  4555e0:	stp	x29, x30, [sp, #-64]!
  4555e4:	cmp	x4, x2
  4555e8:	mov	x29, sp
  4555ec:	stp	x19, x20, [sp, #16]
  4555f0:	mov	x19, x0
  4555f4:	mov	x20, x1
  4555f8:	b.eq	45561c <_obstack_memory_used@@Base+0x127c>  // b.none
  4555fc:	ldr	x0, [x19, #16]
  455600:	mov	x1, x20
  455604:	ldp	x19, x20, [sp, #16]
  455608:	ldr	x5, [x0]
  45560c:	ldr	x5, [x5, #64]
  455610:	ldp	x29, x30, [sp], #64
  455614:	mov	x16, x5
  455618:	br	x16
  45561c:	ldr	x1, [x3, #8]
  455620:	ldr	x0, [x0, #8]
  455624:	cmp	x0, x1
  455628:	b.eq	455650 <_obstack_memory_used@@Base+0x12b0>  // b.none
  45562c:	ldrb	w5, [x0]
  455630:	cmp	w5, #0x2a
  455634:	b.eq	4555fc <_obstack_memory_used@@Base+0x125c>  // b.none
  455638:	stp	x2, x3, [sp, #40]
  45563c:	str	x4, [sp, #56]
  455640:	bl	402a20 <strcmp@plt>
  455644:	ldp	x2, x3, [sp, #40]
  455648:	ldr	x4, [sp, #56]
  45564c:	cbnz	w0, 4555fc <_obstack_memory_used@@Base+0x125c>
  455650:	mov	w0, #0x6                   	// #6
  455654:	ldp	x19, x20, [sp, #16]
  455658:	ldp	x29, x30, [sp], #64
  45565c:	ret
  455660:	stp	x29, x30, [sp, #-96]!
  455664:	mov	x29, sp
  455668:	stp	x21, x22, [sp, #32]
  45566c:	mov	x22, x3
  455670:	mov	x21, x1
  455674:	stp	x25, x26, [sp, #64]
  455678:	mov	w26, w2
  45567c:	ldr	x25, [x0, #8]
  455680:	stp	x19, x20, [sp, #16]
  455684:	mov	x19, x4
  455688:	ldr	x3, [x3, #8]
  45568c:	stp	x23, x24, [sp, #48]
  455690:	mov	x20, x7
  455694:	mov	x23, x6
  455698:	cmp	x25, x3
  45569c:	b.eq	4556cc <_obstack_memory_used@@Base+0x132c>  // b.none
  4556a0:	stp	x27, x28, [sp, #80]
  4556a4:	mov	x24, x5
  4556a8:	mov	x27, x0
  4556ac:	ldrb	w28, [x25]
  4556b0:	cmp	w28, #0x2a
  4556b4:	b.eq	455708 <_obstack_memory_used@@Base+0x1368>  // b.none
  4556b8:	mov	x1, x3
  4556bc:	mov	x0, x25
  4556c0:	bl	402a20 <strcmp@plt>
  4556c4:	cbnz	w0, 455708 <_obstack_memory_used@@Base+0x1368>
  4556c8:	ldp	x27, x28, [sp, #80]
  4556cc:	str	x19, [x20]
  4556d0:	str	w26, [x20, #8]
  4556d4:	tbnz	x21, #63, 455758 <_obstack_memory_used@@Base+0x13b8>
  4556d8:	add	x1, x19, x21
  4556dc:	mov	w2, #0x6                   	// #6
  4556e0:	cmp	x23, x1
  4556e4:	mov	w0, #0x0                   	// #0
  4556e8:	csinc	w2, w2, wzr, eq  // eq = none
  4556ec:	str	w2, [x20, #16]
  4556f0:	ldp	x19, x20, [sp, #16]
  4556f4:	ldp	x21, x22, [sp, #32]
  4556f8:	ldp	x23, x24, [sp, #48]
  4556fc:	ldp	x25, x26, [sp, #64]
  455700:	ldp	x29, x30, [sp], #96
  455704:	ret
  455708:	cmp	x19, x23
  45570c:	b.eq	455770 <_obstack_memory_used@@Base+0x13d0>  // b.none
  455710:	ldr	x0, [x27, #16]
  455714:	mov	x7, x20
  455718:	mov	x6, x23
  45571c:	mov	x5, x24
  455720:	mov	x4, x19
  455724:	mov	x3, x22
  455728:	ldr	x8, [x0]
  45572c:	mov	w2, w26
  455730:	mov	x1, x21
  455734:	ldp	x19, x20, [sp, #16]
  455738:	ldp	x21, x22, [sp, #32]
  45573c:	ldp	x23, x24, [sp, #48]
  455740:	ldp	x25, x26, [sp, #64]
  455744:	ldp	x27, x28, [sp, #80]
  455748:	ldp	x29, x30, [sp], #96
  45574c:	ldr	x8, [x8, #56]
  455750:	mov	x16, x8
  455754:	br	x16
  455758:	cmn	x21, #0x2
  45575c:	mov	w0, #0x0                   	// #0
  455760:	b.ne	4556f0 <_obstack_memory_used@@Base+0x1350>  // b.any
  455764:	mov	w1, #0x1                   	// #1
  455768:	str	w1, [x20, #16]
  45576c:	b	4556f0 <_obstack_memory_used@@Base+0x1350>
  455770:	ldr	x1, [x24, #8]
  455774:	cmp	x25, x1
  455778:	b.eq	455790 <_obstack_memory_used@@Base+0x13f0>  // b.none
  45577c:	cmp	w28, #0x2a
  455780:	b.eq	455710 <_obstack_memory_used@@Base+0x1370>  // b.none
  455784:	mov	x0, x25
  455788:	bl	402a20 <strcmp@plt>
  45578c:	cbnz	w0, 455710 <_obstack_memory_used@@Base+0x1370>
  455790:	mov	w0, #0x0                   	// #0
  455794:	ldp	x27, x28, [sp, #80]
  455798:	str	w26, [x20, #12]
  45579c:	b	4556f0 <_obstack_memory_used@@Base+0x1350>
  4557a0:	stp	x29, x30, [sp, #-48]!
  4557a4:	mov	x29, sp
  4557a8:	stp	x19, x20, [sp, #16]
  4557ac:	mov	x19, x1
  4557b0:	mov	x20, x2
  4557b4:	stp	x21, x22, [sp, #32]
  4557b8:	mov	x22, x0
  4557bc:	mov	x21, x3
  4557c0:	bl	4598b8 <_obstack_memory_used@@Base+0x5518>
  4557c4:	tst	w0, #0xff
  4557c8:	b.ne	4557f8 <_obstack_memory_used@@Base+0x1458>  // b.any
  4557cc:	ldr	x0, [x22, #16]
  4557d0:	mov	x3, x21
  4557d4:	mov	x2, x20
  4557d8:	mov	x1, x19
  4557dc:	ldp	x19, x20, [sp, #16]
  4557e0:	ldr	x4, [x0]
  4557e4:	ldp	x21, x22, [sp, #32]
  4557e8:	ldp	x29, x30, [sp], #48
  4557ec:	ldr	x4, [x4, #48]
  4557f0:	mov	x16, x4
  4557f4:	br	x16
  4557f8:	ldp	x19, x20, [sp, #16]
  4557fc:	ldp	x21, x22, [sp, #32]
  455800:	ldp	x29, x30, [sp], #48
  455804:	ret
  455808:	ret
  45580c:	nop
  455810:	mov	w0, #0x0                   	// #0
  455814:	ret
  455818:	mov	w0, #0x0                   	// #0
  45581c:	ret
  455820:	stp	x29, x30, [sp, #-32]!
  455824:	mov	x29, sp
  455828:	str	x19, [sp, #16]
  45582c:	mov	x19, x0
  455830:	bl	455808 <_obstack_memory_used@@Base+0x1468>
  455834:	mov	x0, x19
  455838:	mov	x1, #0x10                  	// #16
  45583c:	ldr	x19, [sp, #16]
  455840:	ldp	x29, x30, [sp], #32
  455844:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  455848:	ldr	x2, [x0, #8]
  45584c:	ldr	x1, [x1, #8]
  455850:	cmp	x2, x1
  455854:	b.eq	45588c <_obstack_memory_used@@Base+0x14ec>  // b.none
  455858:	ldrb	w3, [x2]
  45585c:	mov	w0, #0x0                   	// #0
  455860:	cmp	w3, #0x2a
  455864:	b.eq	455888 <_obstack_memory_used@@Base+0x14e8>  // b.none
  455868:	stp	x29, x30, [sp, #-16]!
  45586c:	mov	x0, x2
  455870:	mov	x29, sp
  455874:	bl	402a20 <strcmp@plt>
  455878:	cmp	w0, #0x0
  45587c:	cset	w0, eq  // eq = none
  455880:	ldp	x29, x30, [sp], #16
  455884:	ret
  455888:	ret
  45588c:	mov	w0, #0x1                   	// #1
  455890:	ret
  455894:	nop
  455898:	mov	x2, x0
  45589c:	ldr	w0, [x0]
  4558a0:	cbnz	w0, 4558b4 <_obstack_memory_used@@Base+0x1514>
  4558a4:	ldr	x0, [x2, #8]
  4558a8:	ldr	x0, [x0, #8]
  4558ac:	cmp	x0, x2
  4558b0:	b.eq	4558f8 <_obstack_memory_used@@Base+0x1558>  // b.none
  4558b4:	ldr	x1, [x2, #16]
  4558b8:	cbz	x1, 4558d0 <_obstack_memory_used@@Base+0x1530>
  4558bc:	nop
  4558c0:	mov	x0, x1
  4558c4:	ldr	x1, [x1, #24]
  4558c8:	cbnz	x1, 4558c0 <_obstack_memory_used@@Base+0x1520>
  4558cc:	ret
  4558d0:	ldr	x0, [x2, #8]
  4558d4:	ldr	x1, [x0, #16]
  4558d8:	cmp	x2, x1
  4558dc:	b.ne	4558cc <_obstack_memory_used@@Base+0x152c>  // b.any
  4558e0:	mov	x1, x0
  4558e4:	ldr	x0, [x0, #8]
  4558e8:	ldr	x2, [x0, #16]
  4558ec:	cmp	x2, x1
  4558f0:	b.eq	4558e0 <_obstack_memory_used@@Base+0x1540>  // b.none
  4558f4:	ret
  4558f8:	ldr	x0, [x0, #24]
  4558fc:	ret
  455900:	ldr	x1, [x0, #24]
  455904:	cbz	x1, 455918 <_obstack_memory_used@@Base+0x1578>
  455908:	mov	x0, x1
  45590c:	ldr	x1, [x1, #16]
  455910:	cbnz	x1, 455908 <_obstack_memory_used@@Base+0x1568>
  455914:	ret
  455918:	ldr	x1, [x0, #8]
  45591c:	ldr	x2, [x1, #24]
  455920:	cmp	x0, x2
  455924:	b.ne	45594c <_obstack_memory_used@@Base+0x15ac>  // b.any
  455928:	mov	x0, x1
  45592c:	ldr	x1, [x1, #8]
  455930:	ldr	x2, [x1, #24]
  455934:	cmp	x2, x0
  455938:	b.eq	455928 <_obstack_memory_used@@Base+0x1588>  // b.none
  45593c:	ldr	x2, [x0, #24]
  455940:	cmp	x1, x2
  455944:	csel	x0, x0, x1, eq  // eq = none
  455948:	ret
  45594c:	mov	x0, x1
  455950:	ret
  455954:	nop
  455958:	b	455900 <_obstack_memory_used@@Base+0x1560>
  45595c:	nop
  455960:	b	455898 <_obstack_memory_used@@Base+0x14f8>
  455964:	nop
  455968:	b	455898 <_obstack_memory_used@@Base+0x14f8>
  45596c:	nop
  455970:	ldr	x2, [x0, #24]
  455974:	ldr	x3, [x2, #16]
  455978:	str	x3, [x0, #24]
  45597c:	cbz	x3, 455984 <_obstack_memory_used@@Base+0x15e4>
  455980:	str	x0, [x3, #8]
  455984:	ldr	x3, [x0, #8]
  455988:	str	x3, [x2, #8]
  45598c:	ldr	x4, [x1]
  455990:	cmp	x0, x4
  455994:	b.eq	4559c4 <_obstack_memory_used@@Base+0x1624>  // b.none
  455998:	ldr	x1, [x3, #16]
  45599c:	cmp	x0, x1
  4559a0:	b.eq	4559b4 <_obstack_memory_used@@Base+0x1614>  // b.none
  4559a4:	str	x2, [x3, #24]
  4559a8:	str	x0, [x2, #16]
  4559ac:	str	x2, [x0, #8]
  4559b0:	ret
  4559b4:	str	x2, [x3, #16]
  4559b8:	str	x0, [x2, #16]
  4559bc:	str	x2, [x0, #8]
  4559c0:	ret
  4559c4:	str	x2, [x1]
  4559c8:	str	x0, [x2, #16]
  4559cc:	str	x2, [x0, #8]
  4559d0:	ret
  4559d4:	nop
  4559d8:	ldr	x2, [x0, #16]
  4559dc:	ldr	x3, [x2, #24]
  4559e0:	str	x3, [x0, #16]
  4559e4:	cbz	x3, 4559ec <_obstack_memory_used@@Base+0x164c>
  4559e8:	str	x0, [x3, #8]
  4559ec:	ldr	x3, [x0, #8]
  4559f0:	str	x3, [x2, #8]
  4559f4:	ldr	x4, [x1]
  4559f8:	cmp	x0, x4
  4559fc:	b.eq	455a2c <_obstack_memory_used@@Base+0x168c>  // b.none
  455a00:	ldr	x1, [x3, #24]
  455a04:	cmp	x0, x1
  455a08:	b.eq	455a1c <_obstack_memory_used@@Base+0x167c>  // b.none
  455a0c:	str	x2, [x3, #16]
  455a10:	str	x0, [x2, #24]
  455a14:	str	x2, [x0, #8]
  455a18:	ret
  455a1c:	str	x2, [x3, #24]
  455a20:	str	x0, [x2, #24]
  455a24:	str	x2, [x0, #8]
  455a28:	ret
  455a2c:	str	x2, [x1]
  455a30:	str	x0, [x2, #24]
  455a34:	str	x2, [x0, #8]
  455a38:	ret
  455a3c:	nop
  455a40:	str	wzr, [x1]
  455a44:	tst	w0, #0xff
  455a48:	stp	x2, xzr, [x1, #8]
  455a4c:	str	xzr, [x1, #24]
  455a50:	b.eq	455b08 <_obstack_memory_used@@Base+0x1768>  // b.none
  455a54:	str	x1, [x2, #16]
  455a58:	cmp	x3, x2
  455a5c:	b.eq	455cac <_obstack_memory_used@@Base+0x190c>  // b.none
  455a60:	ldr	x0, [x3, #16]
  455a64:	cmp	x0, x2
  455a68:	b.eq	455cc4 <_obstack_memory_used@@Base+0x1924>  // b.none
  455a6c:	ldr	x5, [x3, #8]
  455a70:	mov	x0, x5
  455a74:	cmp	x1, x5
  455a78:	b.eq	455afc <_obstack_memory_used@@Base+0x175c>  // b.none
  455a7c:	mov	w6, #0x1                   	// #1
  455a80:	b	455aac <_obstack_memory_used@@Base+0x170c>
  455a84:	cbz	x4, 455b28 <_obstack_memory_used@@Base+0x1788>
  455a88:	ldr	w7, [x4]
  455a8c:	cbnz	w7, 455b28 <_obstack_memory_used@@Base+0x1788>
  455a90:	str	w6, [x2]
  455a94:	mov	x1, x0
  455a98:	str	w6, [x4]
  455a9c:	str	wzr, [x0]
  455aa0:	mov	x0, x5
  455aa4:	cmp	x5, x1
  455aa8:	b.eq	455af8 <_obstack_memory_used@@Base+0x1758>  // b.none
  455aac:	ldr	x2, [x1, #8]
  455ab0:	ldr	w4, [x2]
  455ab4:	cbnz	w4, 455afc <_obstack_memory_used@@Base+0x175c>
  455ab8:	ldr	x0, [x2, #8]
  455abc:	ldr	x4, [x0, #16]
  455ac0:	cmp	x2, x4
  455ac4:	b.ne	455a84 <_obstack_memory_used@@Base+0x16e4>  // b.any
  455ac8:	ldr	x7, [x0, #24]
  455acc:	cbz	x7, 455b84 <_obstack_memory_used@@Base+0x17e4>
  455ad0:	ldr	w8, [x7]
  455ad4:	cbnz	w8, 455b84 <_obstack_memory_used@@Base+0x17e4>
  455ad8:	str	w6, [x2]
  455adc:	mov	x1, x0
  455ae0:	str	w6, [x7]
  455ae4:	cmp	x5, x1
  455ae8:	str	wzr, [x0]
  455aec:	mov	x0, x5
  455af0:	b.ne	455aac <_obstack_memory_used@@Base+0x170c>  // b.any
  455af4:	nop
  455af8:	mov	x0, x1
  455afc:	mov	w1, #0x1                   	// #1
  455b00:	str	w1, [x0]
  455b04:	ret
  455b08:	str	x1, [x2, #24]
  455b0c:	ldr	x0, [x3, #24]
  455b10:	cmp	x0, x2
  455b14:	b.ne	455a6c <_obstack_memory_used@@Base+0x16cc>  // b.any
  455b18:	ldr	x5, [x3, #8]
  455b1c:	str	x1, [x3, #24]
  455b20:	mov	x0, x5
  455b24:	b	455a74 <_obstack_memory_used@@Base+0x16d4>
  455b28:	ldr	x4, [x2, #16]
  455b2c:	cmp	x4, x1
  455b30:	b.eq	455bdc <_obstack_memory_used@@Base+0x183c>  // b.none
  455b34:	ldr	x4, [x0, #24]
  455b38:	str	w6, [x2]
  455b3c:	ldr	x2, [x4, #16]
  455b40:	str	wzr, [x0]
  455b44:	str	x2, [x0, #24]
  455b48:	cbz	x2, 455b50 <_obstack_memory_used@@Base+0x17b0>
  455b4c:	str	x0, [x2, #8]
  455b50:	ldr	x2, [x0, #8]
  455b54:	str	x2, [x4, #8]
  455b58:	ldr	x5, [x3, #8]
  455b5c:	cmp	x0, x5
  455b60:	b.eq	455c2c <_obstack_memory_used@@Base+0x188c>  // b.none
  455b64:	ldr	x5, [x2, #16]
  455b68:	cmp	x0, x5
  455b6c:	b.eq	455c34 <_obstack_memory_used@@Base+0x1894>  // b.none
  455b70:	str	x4, [x2, #24]
  455b74:	str	x0, [x4, #16]
  455b78:	str	x4, [x0, #8]
  455b7c:	ldr	x5, [x3, #8]
  455b80:	b	455aa0 <_obstack_memory_used@@Base+0x1700>
  455b84:	ldr	x5, [x2, #24]
  455b88:	cmp	x5, x1
  455b8c:	b.eq	455c44 <_obstack_memory_used@@Base+0x18a4>  // b.none
  455b90:	ldr	x5, [x4, #24]
  455b94:	str	w6, [x2]
  455b98:	str	wzr, [x0]
  455b9c:	str	x5, [x0, #16]
  455ba0:	cbz	x5, 455ba8 <_obstack_memory_used@@Base+0x1808>
  455ba4:	str	x0, [x5, #8]
  455ba8:	ldr	x2, [x0, #8]
  455bac:	str	x2, [x4, #8]
  455bb0:	ldr	x5, [x3, #8]
  455bb4:	cmp	x0, x5
  455bb8:	b.eq	455c3c <_obstack_memory_used@@Base+0x189c>  // b.none
  455bbc:	ldr	x5, [x2, #24]
  455bc0:	cmp	x0, x5
  455bc4:	b.eq	455c9c <_obstack_memory_used@@Base+0x18fc>  // b.none
  455bc8:	str	x4, [x2, #16]
  455bcc:	str	x0, [x4, #24]
  455bd0:	str	x4, [x0, #8]
  455bd4:	ldr	x5, [x3, #8]
  455bd8:	b	455aa0 <_obstack_memory_used@@Base+0x1700>
  455bdc:	ldr	x5, [x1, #24]
  455be0:	str	x5, [x2, #16]
  455be4:	mov	x4, x0
  455be8:	cbz	x5, 455bf4 <_obstack_memory_used@@Base+0x1854>
  455bec:	str	x2, [x5, #8]
  455bf0:	ldr	x4, [x2, #8]
  455bf4:	str	x4, [x1, #8]
  455bf8:	ldr	x5, [x3, #8]
  455bfc:	cmp	x2, x5
  455c00:	b.eq	455c94 <_obstack_memory_used@@Base+0x18f4>  // b.none
  455c04:	ldr	x5, [x4, #24]
  455c08:	cmp	x2, x5
  455c0c:	b.eq	455ca4 <_obstack_memory_used@@Base+0x1904>  // b.none
  455c10:	str	x1, [x4, #16]
  455c14:	mov	x4, x1
  455c18:	str	x2, [x1, #24]
  455c1c:	str	x1, [x2, #8]
  455c20:	mov	x1, x2
  455c24:	mov	x2, x4
  455c28:	b	455b34 <_obstack_memory_used@@Base+0x1794>
  455c2c:	str	x4, [x3, #8]
  455c30:	b	455b74 <_obstack_memory_used@@Base+0x17d4>
  455c34:	str	x4, [x2, #16]
  455c38:	b	455b74 <_obstack_memory_used@@Base+0x17d4>
  455c3c:	str	x4, [x3, #8]
  455c40:	b	455bcc <_obstack_memory_used@@Base+0x182c>
  455c44:	ldr	x4, [x1, #16]
  455c48:	str	x4, [x2, #24]
  455c4c:	cbz	x4, 455cd4 <_obstack_memory_used@@Base+0x1934>
  455c50:	str	x2, [x4, #8]
  455c54:	ldr	x4, [x2, #8]
  455c58:	str	x4, [x1, #8]
  455c5c:	ldr	x5, [x3, #8]
  455c60:	cmp	x2, x5
  455c64:	b.eq	455cf0 <_obstack_memory_used@@Base+0x1950>  // b.none
  455c68:	ldr	x5, [x4, #16]
  455c6c:	cmp	x2, x5
  455c70:	b.eq	455ce8 <_obstack_memory_used@@Base+0x1948>  // b.none
  455c74:	str	x1, [x4, #24]
  455c78:	str	x2, [x1, #16]
  455c7c:	mov	x5, x1
  455c80:	ldr	x4, [x0, #16]
  455c84:	str	x1, [x2, #8]
  455c88:	mov	x1, x2
  455c8c:	mov	x2, x5
  455c90:	b	455b90 <_obstack_memory_used@@Base+0x17f0>
  455c94:	str	x1, [x3, #8]
  455c98:	b	455c14 <_obstack_memory_used@@Base+0x1874>
  455c9c:	str	x4, [x2, #24]
  455ca0:	b	455bcc <_obstack_memory_used@@Base+0x182c>
  455ca4:	str	x1, [x4, #24]
  455ca8:	b	455c14 <_obstack_memory_used@@Base+0x1874>
  455cac:	mov	x0, x1
  455cb0:	str	x1, [x3, #8]
  455cb4:	str	x1, [x3, #24]
  455cb8:	mov	w1, #0x1                   	// #1
  455cbc:	str	w1, [x0]
  455cc0:	ret
  455cc4:	ldr	x5, [x3, #8]
  455cc8:	str	x1, [x3, #16]
  455ccc:	mov	x0, x5
  455cd0:	b	455a74 <_obstack_memory_used@@Base+0x16d4>
  455cd4:	str	x0, [x1, #8]
  455cd8:	ldr	x4, [x3, #8]
  455cdc:	cmp	x2, x4
  455ce0:	b.eq	455cf0 <_obstack_memory_used@@Base+0x1950>  // b.none
  455ce4:	mov	x4, x0
  455ce8:	str	x1, [x4, #16]
  455cec:	b	455c78 <_obstack_memory_used@@Base+0x18d8>
  455cf0:	str	x1, [x3, #8]
  455cf4:	b	455c78 <_obstack_memory_used@@Base+0x18d8>
  455cf8:	ldp	x6, x5, [x0, #16]
  455cfc:	cbz	x6, 456028 <_obstack_memory_used@@Base+0x1c88>
  455d00:	cbz	x5, 455e58 <_obstack_memory_used@@Base+0x1ab8>
  455d04:	mov	x2, x5
  455d08:	mov	x3, x2
  455d0c:	ldr	x2, [x2, #16]
  455d10:	cbnz	x2, 455d08 <_obstack_memory_used@@Base+0x1968>
  455d14:	cmp	x3, x0
  455d18:	ldr	x4, [x3, #24]
  455d1c:	b.eq	456024 <_obstack_memory_used@@Base+0x1c84>  // b.none
  455d20:	str	x3, [x6, #8]
  455d24:	cmp	x3, x5
  455d28:	str	x6, [x3, #16]
  455d2c:	mov	x2, x5
  455d30:	b.eq	455d58 <_obstack_memory_used@@Base+0x19b8>  // b.none
  455d34:	ldr	x2, [x3, #8]
  455d38:	mov	x6, x2
  455d3c:	cbz	x4, 455d48 <_obstack_memory_used@@Base+0x19a8>
  455d40:	str	x2, [x4, #8]
  455d44:	ldr	x6, [x3, #8]
  455d48:	str	x4, [x6, #16]
  455d4c:	str	x5, [x3, #24]
  455d50:	ldr	x5, [x0, #24]
  455d54:	str	x3, [x5, #8]
  455d58:	ldr	x5, [x1, #8]
  455d5c:	cmp	x5, x0
  455d60:	b.eq	455fe0 <_obstack_memory_used@@Base+0x1c40>  // b.none
  455d64:	ldr	x5, [x0, #8]
  455d68:	ldr	x6, [x5, #16]
  455d6c:	cmp	x6, x0
  455d70:	b.eq	455ff4 <_obstack_memory_used@@Base+0x1c54>  // b.none
  455d74:	str	x3, [x5, #24]
  455d78:	ldr	w6, [x0]
  455d7c:	str	x5, [x3, #8]
  455d80:	ldr	w5, [x3]
  455d84:	str	w6, [x3]
  455d88:	str	w5, [x0]
  455d8c:	cbz	w5, 455ec4 <_obstack_memory_used@@Base+0x1b24>
  455d90:	ldr	x3, [x1, #8]
  455d94:	cmp	x3, x4
  455d98:	b.eq	455fa0 <_obstack_memory_used@@Base+0x1c00>  // b.none
  455d9c:	mov	w8, #0x1                   	// #1
  455da0:	cbz	x4, 455db0 <_obstack_memory_used@@Base+0x1a10>
  455da4:	ldr	w3, [x4]
  455da8:	cmp	w3, #0x1
  455dac:	b.ne	455fa8 <_obstack_memory_used@@Base+0x1c08>  // b.any
  455db0:	ldr	x3, [x2, #16]
  455db4:	cmp	x3, x4
  455db8:	b.eq	455ec8 <_obstack_memory_used@@Base+0x1b28>  // b.none
  455dbc:	ldr	w6, [x3]
  455dc0:	ldr	x5, [x3, #24]
  455dc4:	cbnz	w6, 455e14 <_obstack_memory_used@@Base+0x1a74>
  455dc8:	str	w8, [x3]
  455dcc:	str	wzr, [x2]
  455dd0:	str	x5, [x2, #16]
  455dd4:	cbz	x5, 455ddc <_obstack_memory_used@@Base+0x1a3c>
  455dd8:	str	x2, [x5, #8]
  455ddc:	ldr	x6, [x2, #8]
  455de0:	str	x6, [x3, #8]
  455de4:	ldr	x7, [x1, #8]
  455de8:	cmp	x2, x7
  455dec:	b.eq	455fb8 <_obstack_memory_used@@Base+0x1c18>  // b.none
  455df0:	ldr	x7, [x6, #24]
  455df4:	cmp	x2, x7
  455df8:	b.eq	455fc4 <_obstack_memory_used@@Base+0x1c24>  // b.none
  455dfc:	str	x3, [x6, #16]
  455e00:	ldr	x5, [x2, #16]
  455e04:	str	x2, [x3, #24]
  455e08:	str	x3, [x2, #8]
  455e0c:	mov	x3, x5
  455e10:	ldr	x5, [x5, #24]
  455e14:	cbz	x5, 455e24 <_obstack_memory_used@@Base+0x1a84>
  455e18:	ldr	w6, [x5]
  455e1c:	cmp	w6, #0x1
  455e20:	b.ne	45603c <_obstack_memory_used@@Base+0x1c9c>  // b.any
  455e24:	ldr	x6, [x3, #16]
  455e28:	cbz	x6, 455e38 <_obstack_memory_used@@Base+0x1a98>
  455e2c:	ldr	w5, [x6]
  455e30:	cmp	w5, #0x1
  455e34:	b.ne	4560b8 <_obstack_memory_used@@Base+0x1d18>  // b.any
  455e38:	ldr	x5, [x2, #8]
  455e3c:	str	wzr, [x3]
  455e40:	ldr	x3, [x1, #8]
  455e44:	mov	x4, x2
  455e48:	cmp	x2, x3
  455e4c:	b.eq	455fac <_obstack_memory_used@@Base+0x1c0c>  // b.none
  455e50:	mov	x2, x5
  455e54:	b	455da0 <_obstack_memory_used@@Base+0x1a00>
  455e58:	ldr	x2, [x0, #8]
  455e5c:	mov	x4, x6
  455e60:	str	x2, [x6, #8]
  455e64:	ldr	x3, [x1, #8]
  455e68:	cmp	x3, x0
  455e6c:	b.eq	455ffc <_obstack_memory_used@@Base+0x1c5c>  // b.none
  455e70:	ldr	x3, [x0, #8]
  455e74:	ldr	x5, [x3, #16]
  455e78:	cmp	x5, x0
  455e7c:	b.eq	455fec <_obstack_memory_used@@Base+0x1c4c>  // b.none
  455e80:	str	x4, [x3, #24]
  455e84:	ldr	x3, [x1, #16]
  455e88:	cmp	x3, x0
  455e8c:	b.eq	456004 <_obstack_memory_used@@Base+0x1c64>  // b.none
  455e90:	ldr	x3, [x1, #24]
  455e94:	ldr	w5, [x0]
  455e98:	cmp	x3, x0
  455e9c:	b.ne	455d8c <_obstack_memory_used@@Base+0x19ec>  // b.any
  455ea0:	ldr	x6, [x0, #16]
  455ea4:	mov	x3, x4
  455ea8:	cbz	x6, 4561a0 <_obstack_memory_used@@Base+0x1e00>
  455eac:	nop
  455eb0:	mov	x6, x3
  455eb4:	ldr	x3, [x3, #24]
  455eb8:	cbnz	x3, 455eb0 <_obstack_memory_used@@Base+0x1b10>
  455ebc:	str	x6, [x1, #24]
  455ec0:	cbnz	w5, 455d90 <_obstack_memory_used@@Base+0x19f0>
  455ec4:	ret
  455ec8:	ldr	x3, [x2, #24]
  455ecc:	ldr	w6, [x3]
  455ed0:	ldr	x5, [x3, #16]
  455ed4:	cbnz	w6, 455f24 <_obstack_memory_used@@Base+0x1b84>
  455ed8:	str	w8, [x3]
  455edc:	str	wzr, [x2]
  455ee0:	str	x5, [x2, #24]
  455ee4:	cbz	x5, 455eec <_obstack_memory_used@@Base+0x1b4c>
  455ee8:	str	x2, [x5, #8]
  455eec:	ldr	x6, [x2, #8]
  455ef0:	str	x6, [x3, #8]
  455ef4:	ldr	x7, [x1, #8]
  455ef8:	cmp	x2, x7
  455efc:	b.eq	455fcc <_obstack_memory_used@@Base+0x1c2c>  // b.none
  455f00:	ldr	x7, [x6, #16]
  455f04:	cmp	x2, x7
  455f08:	b.eq	455fd8 <_obstack_memory_used@@Base+0x1c38>  // b.none
  455f0c:	str	x3, [x6, #24]
  455f10:	ldr	x5, [x2, #24]
  455f14:	str	x2, [x3, #16]
  455f18:	str	x3, [x2, #8]
  455f1c:	mov	x3, x5
  455f20:	ldr	x5, [x5, #16]
  455f24:	cbz	x5, 455f34 <_obstack_memory_used@@Base+0x1b94>
  455f28:	ldr	w6, [x5]
  455f2c:	cmp	w6, #0x1
  455f30:	b.ne	456128 <_obstack_memory_used@@Base+0x1d88>  // b.any
  455f34:	ldr	x6, [x3, #24]
  455f38:	cbz	x6, 455e38 <_obstack_memory_used@@Base+0x1a98>
  455f3c:	ldr	w5, [x6]
  455f40:	cmp	w5, #0x1
  455f44:	b.eq	455e38 <_obstack_memory_used@@Base+0x1a98>  // b.none
  455f48:	ldr	w8, [x2]
  455f4c:	mov	w7, #0x1                   	// #1
  455f50:	ldr	x5, [x2, #24]
  455f54:	str	w8, [x3]
  455f58:	str	w7, [x2]
  455f5c:	mov	w3, #0x1                   	// #1
  455f60:	str	w3, [x6]
  455f64:	ldr	x3, [x5, #16]
  455f68:	str	x3, [x2, #24]
  455f6c:	cbz	x3, 455f74 <_obstack_memory_used@@Base+0x1bd4>
  455f70:	str	x2, [x3, #8]
  455f74:	ldr	x3, [x2, #8]
  455f78:	str	x3, [x5, #8]
  455f7c:	ldr	x6, [x1, #8]
  455f80:	cmp	x2, x6
  455f84:	b.eq	4561c0 <_obstack_memory_used@@Base+0x1e20>  // b.none
  455f88:	ldr	x1, [x3, #16]
  455f8c:	cmp	x2, x1
  455f90:	b.eq	4561d8 <_obstack_memory_used@@Base+0x1e38>  // b.none
  455f94:	str	x5, [x3, #24]
  455f98:	str	x2, [x5, #16]
  455f9c:	str	x5, [x2, #8]
  455fa0:	cbz	x4, 455ec4 <_obstack_memory_used@@Base+0x1b24>
  455fa4:	nop
  455fa8:	mov	x3, x4
  455fac:	mov	w1, #0x1                   	// #1
  455fb0:	str	w1, [x3]
  455fb4:	ret
  455fb8:	str	x3, [x1, #8]
  455fbc:	ldr	x5, [x2, #16]
  455fc0:	b	455e04 <_obstack_memory_used@@Base+0x1a64>
  455fc4:	str	x3, [x6, #24]
  455fc8:	b	455e04 <_obstack_memory_used@@Base+0x1a64>
  455fcc:	str	x3, [x1, #8]
  455fd0:	ldr	x5, [x2, #24]
  455fd4:	b	455f14 <_obstack_memory_used@@Base+0x1b74>
  455fd8:	str	x3, [x6, #16]
  455fdc:	b	455f14 <_obstack_memory_used@@Base+0x1b74>
  455fe0:	str	x3, [x1, #8]
  455fe4:	ldr	x5, [x0, #8]
  455fe8:	b	455d78 <_obstack_memory_used@@Base+0x19d8>
  455fec:	str	x4, [x3, #16]
  455ff0:	b	455e84 <_obstack_memory_used@@Base+0x1ae4>
  455ff4:	str	x3, [x5, #16]
  455ff8:	b	455d78 <_obstack_memory_used@@Base+0x19d8>
  455ffc:	str	x4, [x1, #8]
  456000:	b	455e84 <_obstack_memory_used@@Base+0x1ae4>
  456004:	ldr	x5, [x0, #24]
  456008:	mov	x3, x4
  45600c:	cbz	x5, 4561ac <_obstack_memory_used@@Base+0x1e0c>
  456010:	mov	x5, x3
  456014:	ldr	x3, [x3, #16]
  456018:	cbnz	x3, 456010 <_obstack_memory_used@@Base+0x1c70>
  45601c:	str	x5, [x1, #16]
  456020:	b	455e90 <_obstack_memory_used@@Base+0x1af0>
  456024:	mov	x5, x4
  456028:	mov	x4, #0x0                   	// #0
  45602c:	ldr	x2, [x0, #8]
  456030:	cbz	x5, 455e64 <_obstack_memory_used@@Base+0x1ac4>
  456034:	mov	x6, x5
  456038:	b	455e5c <_obstack_memory_used@@Base+0x1abc>
  45603c:	ldr	x6, [x3, #16]
  456040:	cbnz	x6, 4560ac <_obstack_memory_used@@Base+0x1d0c>
  456044:	ldr	x6, [x5, #16]
  456048:	mov	w7, #0x1                   	// #1
  45604c:	str	w7, [x5]
  456050:	str	wzr, [x3]
  456054:	str	x6, [x3, #24]
  456058:	cbz	x6, 456060 <_obstack_memory_used@@Base+0x1cc0>
  45605c:	str	x3, [x6, #8]
  456060:	ldr	x6, [x3, #8]
  456064:	str	x6, [x5, #8]
  456068:	ldr	x7, [x1, #8]
  45606c:	cmp	x3, x7
  456070:	b.eq	4561b8 <_obstack_memory_used@@Base+0x1e18>  // b.none
  456074:	ldr	x7, [x6, #16]
  456078:	cmp	x3, x7
  45607c:	b.eq	456118 <_obstack_memory_used@@Base+0x1d78>  // b.none
  456080:	str	x5, [x6, #24]
  456084:	str	x3, [x5, #16]
  456088:	mov	w7, #0x1                   	// #1
  45608c:	str	x5, [x3, #8]
  456090:	ldr	x5, [x2, #16]
  456094:	ldr	w3, [x2]
  456098:	ldr	x6, [x5, #16]
  45609c:	str	w3, [x5]
  4560a0:	str	w7, [x2]
  4560a4:	cbz	x6, 4560d4 <_obstack_memory_used@@Base+0x1d34>
  4560a8:	b	4560cc <_obstack_memory_used@@Base+0x1d2c>
  4560ac:	ldr	w7, [x6]
  4560b0:	cmp	w7, #0x1
  4560b4:	b.eq	456044 <_obstack_memory_used@@Base+0x1ca4>  // b.none
  4560b8:	ldr	w8, [x2]
  4560bc:	mov	w7, #0x1                   	// #1
  4560c0:	ldr	x5, [x2, #16]
  4560c4:	str	w8, [x3]
  4560c8:	str	w7, [x2]
  4560cc:	mov	w3, #0x1                   	// #1
  4560d0:	str	w3, [x6]
  4560d4:	ldr	x3, [x5, #24]
  4560d8:	str	x3, [x2, #16]
  4560dc:	cbz	x3, 4560e4 <_obstack_memory_used@@Base+0x1d44>
  4560e0:	str	x2, [x3, #8]
  4560e4:	ldr	x3, [x2, #8]
  4560e8:	str	x3, [x5, #8]
  4560ec:	ldr	x6, [x1, #8]
  4560f0:	cmp	x2, x6
  4560f4:	b.eq	456120 <_obstack_memory_used@@Base+0x1d80>  // b.none
  4560f8:	ldr	x1, [x3, #24]
  4560fc:	cmp	x2, x1
  456100:	b.eq	456198 <_obstack_memory_used@@Base+0x1df8>  // b.none
  456104:	str	x5, [x3, #16]
  456108:	str	x2, [x5, #24]
  45610c:	str	x5, [x2, #8]
  456110:	cbz	x4, 455ec4 <_obstack_memory_used@@Base+0x1b24>
  456114:	b	455fa8 <_obstack_memory_used@@Base+0x1c08>
  456118:	str	x5, [x6, #16]
  45611c:	b	456084 <_obstack_memory_used@@Base+0x1ce4>
  456120:	str	x5, [x1, #8]
  456124:	b	456108 <_obstack_memory_used@@Base+0x1d68>
  456128:	ldr	x6, [x3, #24]
  45612c:	cbnz	x6, 4561c8 <_obstack_memory_used@@Base+0x1e28>
  456130:	ldr	x6, [x5, #24]
  456134:	mov	w7, #0x1                   	// #1
  456138:	str	w7, [x5]
  45613c:	str	wzr, [x3]
  456140:	str	x6, [x3, #16]
  456144:	cbz	x6, 45614c <_obstack_memory_used@@Base+0x1dac>
  456148:	str	x3, [x6, #8]
  45614c:	ldr	x6, [x3, #8]
  456150:	str	x6, [x5, #8]
  456154:	ldr	x7, [x1, #8]
  456158:	cmp	x3, x7
  45615c:	b.eq	4561e0 <_obstack_memory_used@@Base+0x1e40>  // b.none
  456160:	ldr	x7, [x6, #24]
  456164:	cmp	x3, x7
  456168:	b.eq	4561e8 <_obstack_memory_used@@Base+0x1e48>  // b.none
  45616c:	str	x5, [x6, #16]
  456170:	str	x3, [x5, #24]
  456174:	mov	w7, #0x1                   	// #1
  456178:	str	x5, [x3, #8]
  45617c:	ldr	x5, [x2, #24]
  456180:	ldr	w3, [x2]
  456184:	ldr	x6, [x5, #24]
  456188:	str	w3, [x5]
  45618c:	str	w7, [x2]
  456190:	cbz	x6, 455f64 <_obstack_memory_used@@Base+0x1bc4>
  456194:	b	455f5c <_obstack_memory_used@@Base+0x1bbc>
  456198:	str	x5, [x3, #24]
  45619c:	b	456108 <_obstack_memory_used@@Base+0x1d68>
  4561a0:	ldr	x3, [x0, #8]
  4561a4:	str	x3, [x1, #24]
  4561a8:	b	455d8c <_obstack_memory_used@@Base+0x19ec>
  4561ac:	ldr	x3, [x0, #8]
  4561b0:	str	x3, [x1, #16]
  4561b4:	b	455e90 <_obstack_memory_used@@Base+0x1af0>
  4561b8:	str	x5, [x1, #8]
  4561bc:	b	456084 <_obstack_memory_used@@Base+0x1ce4>
  4561c0:	str	x5, [x1, #8]
  4561c4:	b	455f98 <_obstack_memory_used@@Base+0x1bf8>
  4561c8:	ldr	w7, [x6]
  4561cc:	cmp	w7, #0x1
  4561d0:	b.eq	456130 <_obstack_memory_used@@Base+0x1d90>  // b.none
  4561d4:	b	455f48 <_obstack_memory_used@@Base+0x1ba8>
  4561d8:	str	x5, [x3, #16]
  4561dc:	b	455f98 <_obstack_memory_used@@Base+0x1bf8>
  4561e0:	str	x5, [x1, #8]
  4561e4:	b	456170 <_obstack_memory_used@@Base+0x1dd0>
  4561e8:	str	x5, [x6, #24]
  4561ec:	b	456170 <_obstack_memory_used@@Base+0x1dd0>
  4561f0:	mov	x2, x0
  4561f4:	mov	w0, #0x0                   	// #0
  4561f8:	cbnz	x2, 456204 <_obstack_memory_used@@Base+0x1e64>
  4561fc:	b	456218 <_obstack_memory_used@@Base+0x1e78>
  456200:	ldr	x2, [x2, #8]
  456204:	ldr	w3, [x2]
  456208:	cmp	w3, #0x1
  45620c:	cinc	w0, w0, eq  // eq = none
  456210:	cmp	x2, x1
  456214:	b.ne	456200 <_obstack_memory_used@@Base+0x1e60>  // b.any
  456218:	ret
  45621c:	nop
  456220:	stp	x29, x30, [sp, #-288]!
  456224:	mov	x29, sp
  456228:	str	x19, [sp, #16]
  45622c:	mov	x19, x0
  456230:	str	q0, [x29, #96]
  456234:	str	q1, [x29, #112]
  456238:	str	q2, [x29, #128]
  45623c:	str	q3, [x29, #144]
  456240:	str	q4, [x29, #160]
  456244:	str	q5, [x29, #176]
  456248:	str	q6, [x29, #192]
  45624c:	str	q7, [x29, #208]
  456250:	stp	x1, x2, [x29, #232]
  456254:	stp	x3, x4, [x29, #248]
  456258:	stp	x5, x6, [x29, #264]
  45625c:	str	x7, [x29, #280]
  456260:	bl	402680 <strlen@plt>
  456264:	add	x5, x29, #0xe0
  456268:	add	x2, x29, #0x120
  45626c:	mov	w4, #0xffffffc8            	// #-56
  456270:	mov	w3, #0xffffff80            	// #-128
  456274:	stp	x2, x2, [x29, #64]
  456278:	add	x1, x0, #0x20f
  45627c:	and	x1, x1, #0xfffffffffffffff0
  456280:	str	x5, [x29, #80]
  456284:	sub	sp, sp, x1
  456288:	stp	w4, w3, [x29, #88]
  45628c:	add	x1, x0, #0x200
  456290:	ldp	x6, x7, [x29, #64]
  456294:	mov	x2, x19
  456298:	ldp	x4, x5, [x29, #80]
  45629c:	add	x3, x29, #0x20
  4562a0:	mov	x19, sp
  4562a4:	stp	x6, x7, [x29, #32]
  4562a8:	mov	x0, x19
  4562ac:	stp	x4, x5, [x29, #48]
  4562b0:	bl	456430 <_obstack_memory_used@@Base+0x2090>
  4562b4:	mov	x0, #0x10                  	// #16
  4562b8:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  4562bc:	mov	x1, x19
  4562c0:	mov	x19, x0
  4562c4:	bl	45b630 <_obstack_memory_used@@Base+0x7290>
  4562c8:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4562cc:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4562d0:	mov	x0, x19
  4562d4:	ldr	x2, [x2, #3632]
  4562d8:	ldr	x1, [x1, #3664]
  4562dc:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  4562e0:	mov	x1, x0
  4562e4:	mov	x0, x19
  4562e8:	mov	x19, x1
  4562ec:	bl	459db0 <_obstack_memory_used@@Base+0x5a10>
  4562f0:	mov	x0, x19
  4562f4:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  4562f8:	stp	x29, x30, [sp, #-144]!
  4562fc:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  456300:	add	x3, x3, #0x2f8
  456304:	mov	x29, sp
  456308:	stp	x19, x20, [sp, #16]
  45630c:	mov	x20, x1
  456310:	sub	x20, x20, x0
  456314:	mov	x1, x0
  456318:	add	x0, x20, #0x78
  45631c:	and	x0, x0, #0xfffffffffffffff0
  456320:	mov	x2, x20
  456324:	ldp	x14, x15, [x3]
  456328:	sub	sp, sp, x0
  45632c:	ldp	x12, x13, [x3, #16]
  456330:	mov	x19, sp
  456334:	ldp	x10, x11, [x3, #32]
  456338:	add	x20, x19, x20
  45633c:	ldp	x8, x9, [x3, #48]
  456340:	stp	x14, x15, [x19]
  456344:	ldrb	w0, [x3, #104]
  456348:	ldp	x6, x7, [x3, #64]
  45634c:	stp	x12, x13, [x19, #16]
  456350:	ldp	x4, x5, [x3, #80]
  456354:	stp	x14, x15, [x29, #32]
  456358:	ldr	x3, [x3, #96]
  45635c:	stp	x10, x11, [x19, #32]
  456360:	stp	x12, x13, [x29, #48]
  456364:	stp	x8, x9, [x19, #48]
  456368:	stp	x10, x11, [x29, #64]
  45636c:	stp	x6, x7, [x19, #64]
  456370:	stp	x8, x9, [x29, #80]
  456374:	stp	x4, x5, [x19, #80]
  456378:	stp	x6, x7, [x29, #96]
  45637c:	str	x3, [x19, #96]
  456380:	stp	x4, x5, [x29, #112]
  456384:	str	x3, [x29, #128]
  456388:	strb	w0, [x29, #136]
  45638c:	add	x0, x19, #0x68
  456390:	bl	402620 <memcpy@plt>
  456394:	strb	wzr, [x20, #104]
  456398:	mov	x0, x19
  45639c:	bl	402e10 <ferror@plt+0xe0>
  4563a0:	stp	x29, x30, [sp, #-32]!
  4563a4:	adrp	x6, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4563a8:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
  4563ac:	mov	x29, sp
  4563b0:	str	x19, [sp, #16]
  4563b4:	sub	sp, sp, #0x20
  4563b8:	mov	x8, sp
  4563bc:	add	x6, x6, #0x368
  4563c0:	add	x19, x8, #0x18
  4563c4:	movk	x7, #0xcccd
  4563c8:	mov	x5, x19
  4563cc:	nop
  4563d0:	umulh	x3, x2, x7
  4563d4:	cmp	x2, #0x9
  4563d8:	lsr	x3, x3, #3
  4563dc:	add	x4, x3, x3, lsl #2
  4563e0:	sub	x4, x2, x4, lsl #1
  4563e4:	mov	x2, x3
  4563e8:	ldrb	w3, [x6, x4]
  4563ec:	strb	w3, [x5, #-1]!
  4563f0:	b.hi	4563d0 <_obstack_memory_used@@Base+0x2030>  // b.pmore
  4563f4:	sub	x19, x19, x5
  4563f8:	cmp	x19, x1
  4563fc:	b.hi	456424 <_obstack_memory_used@@Base+0x2084>  // b.pmore
  456400:	sub	x1, x8, x19
  456404:	mov	x2, x19
  456408:	add	x1, x1, #0x18
  45640c:	bl	402620 <memcpy@plt>
  456410:	mov	w0, w19
  456414:	mov	sp, x29
  456418:	ldr	x19, [sp, #16]
  45641c:	ldp	x29, x30, [sp], #32
  456420:	ret
  456424:	mov	w0, #0xffffffff            	// #-1
  456428:	b	456414 <_obstack_memory_used@@Base+0x2074>
  45642c:	nop
  456430:	stp	x29, x30, [sp, #-80]!
  456434:	sub	x1, x1, #0x1
  456438:	mov	x29, sp
  45643c:	stp	x19, x20, [sp, #16]
  456440:	mov	x20, x2
  456444:	mov	x19, x0
  456448:	stp	x21, x22, [sp, #32]
  45644c:	add	x21, x0, x1
  456450:	ldr	w22, [x3, #24]
  456454:	stp	x23, x24, [sp, #48]
  456458:	mov	x23, x0
  45645c:	ldr	x24, [x3]
  456460:	str	x25, [sp, #64]
  456464:	ldr	x25, [x3, #8]
  456468:	ldrb	w2, [x2]
  45646c:	cbz	w2, 4565dc <_obstack_memory_used@@Base+0x223c>
  456470:	cmp	x0, x21
  456474:	b.cs	45649c <_obstack_memory_used@@Base+0x20fc>  // b.hs, b.nlast
  456478:	cmp	w2, #0x25
  45647c:	b.eq	4564a8 <_obstack_memory_used@@Base+0x2108>  // b.none
  456480:	ldrb	w1, [x20]
  456484:	add	x20, x20, #0x1
  456488:	strb	w1, [x19], #1
  45648c:	ldrb	w2, [x20]
  456490:	cbz	w2, 456510 <_obstack_memory_used@@Base+0x2170>
  456494:	cmp	x19, x21
  456498:	b.cc	456478 <_obstack_memory_used@@Base+0x20d8>  // b.lo, b.ul, b.last
  45649c:	mov	x1, x19
  4564a0:	mov	x0, x23
  4564a4:	bl	4562f8 <_obstack_memory_used@@Base+0x1f58>
  4564a8:	ldrb	w1, [x20, #1]
  4564ac:	cmp	w1, #0x73
  4564b0:	b.eq	456530 <_obstack_memory_used@@Base+0x2190>  // b.none
  4564b4:	cmp	w1, #0x7a
  4564b8:	b.eq	4564cc <_obstack_memory_used@@Base+0x212c>  // b.none
  4564bc:	cmp	w1, #0x25
  4564c0:	b.ne	456480 <_obstack_memory_used@@Base+0x20e0>  // b.any
  4564c4:	add	x20, x20, #0x1
  4564c8:	b	456484 <_obstack_memory_used@@Base+0x20e4>
  4564cc:	ldrb	w0, [x20, #2]
  4564d0:	cmp	w0, #0x75
  4564d4:	b.ne	456480 <_obstack_memory_used@@Base+0x20e0>  // b.any
  4564d8:	sub	x1, x21, x19
  4564dc:	tbnz	w22, #31, 4565a0 <_obstack_memory_used@@Base+0x2200>
  4564e0:	add	x2, x24, #0xf
  4564e4:	mov	x0, x24
  4564e8:	and	x24, x2, #0xfffffffffffffff8
  4564ec:	ldr	x2, [x0]
  4564f0:	mov	x0, x19
  4564f4:	bl	4563a0 <_obstack_memory_used@@Base+0x2000>
  4564f8:	cmp	w0, #0x0
  4564fc:	b.le	45649c <_obstack_memory_used@@Base+0x20fc>
  456500:	ldrb	w2, [x20, #3]
  456504:	add	x20, x20, #0x3
  456508:	add	x19, x19, w0, sxtw
  45650c:	cbnz	w2, 456494 <_obstack_memory_used@@Base+0x20f4>
  456510:	sub	w0, w19, w23
  456514:	strb	wzr, [x19]
  456518:	ldp	x19, x20, [sp, #16]
  45651c:	ldp	x21, x22, [sp, #32]
  456520:	ldp	x23, x24, [sp, #48]
  456524:	ldr	x25, [sp, #64]
  456528:	ldp	x29, x30, [sp], #80
  45652c:	ret
  456530:	tbnz	w22, #31, 456574 <_obstack_memory_used@@Base+0x21d4>
  456534:	add	x1, x24, #0xf
  456538:	mov	x0, x24
  45653c:	and	x24, x1, #0xfffffffffffffff8
  456540:	ldr	x2, [x0]
  456544:	ldrb	w1, [x2]
  456548:	cbz	w1, 45656c <_obstack_memory_used@@Base+0x21cc>
  45654c:	cmp	x21, x19
  456550:	b.hi	456560 <_obstack_memory_used@@Base+0x21c0>  // b.pmore
  456554:	b	4565c0 <_obstack_memory_used@@Base+0x2220>
  456558:	cmp	x21, x19
  45655c:	b.eq	4565c4 <_obstack_memory_used@@Base+0x2224>  // b.none
  456560:	strb	w1, [x19], #1
  456564:	ldrb	w1, [x2, #1]!
  456568:	cbnz	w1, 456558 <_obstack_memory_used@@Base+0x21b8>
  45656c:	add	x20, x20, #0x2
  456570:	b	45648c <_obstack_memory_used@@Base+0x20ec>
  456574:	add	w1, w22, #0x8
  456578:	cmp	w1, #0x0
  45657c:	b.le	456594 <_obstack_memory_used@@Base+0x21f4>
  456580:	add	x2, x24, #0xf
  456584:	mov	x0, x24
  456588:	mov	w22, w1
  45658c:	and	x24, x2, #0xfffffffffffffff8
  456590:	b	456540 <_obstack_memory_used@@Base+0x21a0>
  456594:	add	x0, x25, w22, sxtw
  456598:	mov	w22, w1
  45659c:	b	456540 <_obstack_memory_used@@Base+0x21a0>
  4565a0:	add	w2, w22, #0x8
  4565a4:	cmp	w2, #0x0
  4565a8:	b.le	4565d0 <_obstack_memory_used@@Base+0x2230>
  4565ac:	add	x3, x24, #0xf
  4565b0:	mov	x0, x24
  4565b4:	mov	w22, w2
  4565b8:	and	x24, x3, #0xfffffffffffffff8
  4565bc:	b	4564ec <_obstack_memory_used@@Base+0x214c>
  4565c0:	mov	x21, x19
  4565c4:	mov	x1, x21
  4565c8:	mov	x0, x23
  4565cc:	bl	4562f8 <_obstack_memory_used@@Base+0x1f58>
  4565d0:	add	x0, x25, w22, sxtw
  4565d4:	mov	w22, w2
  4565d8:	b	4564ec <_obstack_memory_used@@Base+0x214c>
  4565dc:	mov	w0, #0x0                   	// #0
  4565e0:	b	456514 <_obstack_memory_used@@Base+0x2174>
  4565e4:	nop
  4565e8:	str	x1, [x0]
  4565ec:	ret
  4565f0:	str	x1, [x0, #8]
  4565f4:	ret
  4565f8:	ldr	x0, [x0]
  4565fc:	ret
  456600:	add	x0, x0, #0x10
  456604:	ret
  456608:	add	x0, x0, #0x10
  45660c:	ret
  456610:	str	x1, [x0, #16]
  456614:	ret
  456618:	ldr	x2, [x0]
  45661c:	str	x1, [x0, #8]
  456620:	strb	wzr, [x2, x1]
  456624:	ret
  456628:	ldr	x1, [x0], #16
  45662c:	cmp	x1, x0
  456630:	cset	w0, eq  // eq = none
  456634:	ret
  456638:	ldr	x0, [x1]
  45663c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  456640:	cmp	x0, x3
  456644:	b.hi	456680 <_obstack_memory_used@@Base+0x22e0>  // b.pmore
  456648:	cmp	x0, x2
  45664c:	b.ls	456678 <_obstack_memory_used@@Base+0x22d8>  // b.plast
  456650:	cmp	x0, x2, lsl #1
  456654:	lsl	x2, x2, #1
  456658:	b.cs	456678 <_obstack_memory_used@@Base+0x22d8>  // b.hs, b.nlast
  45665c:	cmp	x2, x3
  456660:	b.ls	456670 <_obstack_memory_used@@Base+0x22d0>  // b.plast
  456664:	str	x3, [x1]
  456668:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  45666c:	b	455530 <_obstack_memory_used@@Base+0x1190>
  456670:	mov	x0, x2
  456674:	str	x2, [x1]
  456678:	add	x0, x0, #0x1
  45667c:	b	455530 <_obstack_memory_used@@Base+0x1190>
  456680:	stp	x29, x30, [sp, #-16]!
  456684:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  456688:	add	x0, x0, #0x378
  45668c:	mov	x29, sp
  456690:	bl	402f0c <ferror@plt+0x1dc>
  456694:	nop
  456698:	mov	x1, x0
  45669c:	ldr	x0, [x1], #16
  4566a0:	cmp	x0, x1
  4566a4:	b.eq	4566ac <_obstack_memory_used@@Base+0x230c>  // b.none
  4566a8:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  4566ac:	ret
  4566b0:	ldr	x0, [x0]
  4566b4:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  4566b8:	stp	x29, x30, [sp, #-48]!
  4566bc:	cmp	x1, #0xf
  4566c0:	mov	x29, sp
  4566c4:	stp	x19, x20, [sp, #16]
  4566c8:	and	w20, w2, #0xff
  4566cc:	mov	x19, x0
  4566d0:	str	x1, [sp, #40]
  4566d4:	b.hi	456710 <_obstack_memory_used@@Base+0x2370>  // b.pmore
  4566d8:	ldr	x0, [x0]
  4566dc:	cbz	x1, 4566fc <_obstack_memory_used@@Base+0x235c>
  4566e0:	cmp	x1, #0x1
  4566e4:	b.eq	45672c <_obstack_memory_used@@Base+0x238c>  // b.none
  4566e8:	mov	x2, x1
  4566ec:	mov	w1, w20
  4566f0:	bl	402890 <memset@plt>
  4566f4:	ldr	x0, [x19]
  4566f8:	ldr	x1, [sp, #40]
  4566fc:	str	x1, [x19, #8]
  456700:	strb	wzr, [x0, x1]
  456704:	ldp	x19, x20, [sp, #16]
  456708:	ldp	x29, x30, [sp], #48
  45670c:	ret
  456710:	add	x1, sp, #0x28
  456714:	mov	x2, #0x0                   	// #0
  456718:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  45671c:	str	x0, [x19]
  456720:	ldr	x1, [sp, #40]
  456724:	str	x1, [x19, #16]
  456728:	b	4566dc <_obstack_memory_used@@Base+0x233c>
  45672c:	strb	w20, [x0]
  456730:	ldr	x0, [x19]
  456734:	ldr	x1, [sp, #40]
  456738:	str	x1, [x19, #8]
  45673c:	strb	wzr, [x0, x1]
  456740:	ldp	x19, x20, [sp, #16]
  456744:	ldp	x29, x30, [sp], #48
  456748:	ret
  45674c:	nop
  456750:	b	4566b8 <_obstack_memory_used@@Base+0x2318>
  456754:	nop
  456758:	ret
  45675c:	nop
  456760:	ret
  456764:	nop
  456768:	ldr	x3, [x0, #8]
  45676c:	cmp	x1, x3
  456770:	b.hi	45677c <_obstack_memory_used@@Base+0x23dc>  // b.pmore
  456774:	mov	x0, x1
  456778:	ret
  45677c:	mov	x4, x2
  456780:	stp	x29, x30, [sp, #-16]!
  456784:	mov	x2, x1
  456788:	mov	x29, sp
  45678c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  456790:	mov	x1, x4
  456794:	add	x0, x0, #0x390
  456798:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45679c:	nop
  4567a0:	ldr	x0, [x0, #8]
  4567a4:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
  4567a8:	add	x1, x1, x4
  4567ac:	sub	x1, x1, x0
  4567b0:	cmp	x1, x2
  4567b4:	b.cc	4567bc <_obstack_memory_used@@Base+0x241c>  // b.lo, b.ul, b.last
  4567b8:	ret
  4567bc:	stp	x29, x30, [sp, #-16]!
  4567c0:	mov	x0, x3
  4567c4:	mov	x29, sp
  4567c8:	bl	402f0c <ferror@plt+0x1dc>
  4567cc:	nop
  4567d0:	ldr	x0, [x0, #8]
  4567d4:	sub	x0, x0, x1
  4567d8:	cmp	x0, x2
  4567dc:	csel	x0, x0, x2, ls  // ls = plast
  4567e0:	ret
  4567e4:	nop
  4567e8:	ldr	x2, [x0]
  4567ec:	cmp	x2, x1
  4567f0:	b.hi	456808 <_obstack_memory_used@@Base+0x2468>  // b.pmore
  4567f4:	ldr	x0, [x0, #8]
  4567f8:	add	x2, x2, x0
  4567fc:	cmp	x2, x1
  456800:	cset	w0, cc  // cc = lo, ul, last
  456804:	ret
  456808:	mov	w0, #0x1                   	// #1
  45680c:	ret
  456810:	cmp	x2, #0x1
  456814:	mov	x4, x0
  456818:	b.eq	456828 <_obstack_memory_used@@Base+0x2488>  // b.none
  45681c:	cbnz	x2, 456824 <_obstack_memory_used@@Base+0x2484>
  456820:	ret
  456824:	b	402620 <memcpy@plt>
  456828:	ldrb	w0, [x1]
  45682c:	strb	w0, [x4]
  456830:	ret
  456834:	nop
  456838:	cmp	x2, #0x1
  45683c:	mov	x4, x0
  456840:	b.eq	456850 <_obstack_memory_used@@Base+0x24b0>  // b.none
  456844:	cbnz	x2, 45684c <_obstack_memory_used@@Base+0x24ac>
  456848:	ret
  45684c:	b	402630 <memmove@plt>
  456850:	ldrb	w0, [x1]
  456854:	strb	w0, [x4]
  456858:	ret
  45685c:	nop
  456860:	mov	x3, x1
  456864:	and	w1, w2, #0xff
  456868:	cmp	x3, #0x1
  45686c:	b.eq	456880 <_obstack_memory_used@@Base+0x24e0>  // b.none
  456870:	cbnz	x3, 456878 <_obstack_memory_used@@Base+0x24d8>
  456874:	ret
  456878:	mov	x2, x3
  45687c:	b	402890 <memset@plt>
  456880:	strb	w1, [x0]
  456884:	ret
  456888:	sub	x2, x2, x1
  45688c:	mov	x4, x0
  456890:	cmp	x2, #0x1
  456894:	b.eq	4568a4 <_obstack_memory_used@@Base+0x2504>  // b.none
  456898:	cbnz	x2, 4568a0 <_obstack_memory_used@@Base+0x2500>
  45689c:	ret
  4568a0:	b	402620 <memcpy@plt>
  4568a4:	ldrb	w0, [x1]
  4568a8:	strb	w0, [x4]
  4568ac:	ret
  4568b0:	sub	x2, x2, x1
  4568b4:	mov	x4, x0
  4568b8:	cmp	x2, #0x1
  4568bc:	b.eq	4568cc <_obstack_memory_used@@Base+0x252c>  // b.none
  4568c0:	cbnz	x2, 4568c8 <_obstack_memory_used@@Base+0x2528>
  4568c4:	ret
  4568c8:	b	402620 <memcpy@plt>
  4568cc:	ldrb	w0, [x1]
  4568d0:	strb	w0, [x4]
  4568d4:	ret
  4568d8:	sub	x2, x2, x1
  4568dc:	mov	x4, x0
  4568e0:	cmp	x2, #0x1
  4568e4:	b.eq	4568f4 <_obstack_memory_used@@Base+0x2554>  // b.none
  4568e8:	cbnz	x2, 4568f0 <_obstack_memory_used@@Base+0x2550>
  4568ec:	ret
  4568f0:	b	402620 <memcpy@plt>
  4568f4:	ldrb	w0, [x1]
  4568f8:	strb	w0, [x4]
  4568fc:	ret
  456900:	sub	x2, x2, x1
  456904:	mov	x4, x0
  456908:	cmp	x2, #0x1
  45690c:	b.eq	45691c <_obstack_memory_used@@Base+0x257c>  // b.none
  456910:	cbnz	x2, 456918 <_obstack_memory_used@@Base+0x2578>
  456914:	ret
  456918:	b	402620 <memcpy@plt>
  45691c:	ldrb	w0, [x1]
  456920:	strb	w0, [x4]
  456924:	ret
  456928:	sub	x0, x0, x1
  45692c:	mov	x2, #0x7fffffff            	// #2147483647
  456930:	cmp	x0, x2
  456934:	b.gt	456948 <_obstack_memory_used@@Base+0x25a8>
  456938:	mov	x2, #0xffffffff80000000    	// #-2147483648
  45693c:	cmp	x0, x2
  456940:	csel	w0, w2, w0, lt  // lt = tstop
  456944:	ret
  456948:	mov	w0, w2
  45694c:	ret
  456950:	cmp	x0, x1
  456954:	b.eq	456a0c <_obstack_memory_used@@Base+0x266c>  // b.none
  456958:	stp	x29, x30, [sp, #-80]!
  45695c:	mov	x29, sp
  456960:	stp	x21, x22, [sp, #32]
  456964:	ldr	x21, [x1, #8]
  456968:	str	x23, [sp, #48]
  45696c:	mov	x23, x0
  456970:	stp	x19, x20, [sp, #16]
  456974:	mov	x19, x0
  456978:	mov	x20, x1
  45697c:	ldr	x22, [x23], #16
  456980:	cmp	x23, x22
  456984:	b.eq	456a10 <_obstack_memory_used@@Base+0x2670>  // b.none
  456988:	ldr	x2, [x0, #16]
  45698c:	cmp	x2, x21
  456990:	b.cc	4569d0 <_obstack_memory_used@@Base+0x2630>  // b.lo, b.ul, b.last
  456994:	cbz	x21, 4569b4 <_obstack_memory_used@@Base+0x2614>
  456998:	cmp	x21, #0x1
  45699c:	ldr	x1, [x20]
  4569a0:	b.eq	456a18 <_obstack_memory_used@@Base+0x2678>  // b.none
  4569a4:	mov	x0, x22
  4569a8:	mov	x2, x21
  4569ac:	bl	402620 <memcpy@plt>
  4569b0:	ldr	x22, [x19]
  4569b4:	str	x21, [x19, #8]
  4569b8:	strb	wzr, [x22, x21]
  4569bc:	ldp	x19, x20, [sp, #16]
  4569c0:	ldp	x21, x22, [sp, #32]
  4569c4:	ldr	x23, [sp, #48]
  4569c8:	ldp	x29, x30, [sp], #80
  4569cc:	ret
  4569d0:	add	x1, sp, #0x48
  4569d4:	mov	x0, x19
  4569d8:	str	x21, [sp, #72]
  4569dc:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  4569e0:	ldr	x1, [x19]
  4569e4:	mov	x22, x0
  4569e8:	cmp	x23, x1
  4569ec:	b.eq	4569f8 <_obstack_memory_used@@Base+0x2658>  // b.none
  4569f0:	mov	x0, x1
  4569f4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4569f8:	ldr	x0, [sp, #72]
  4569fc:	str	x22, [x19]
  456a00:	str	x0, [x19, #16]
  456a04:	cbz	x21, 4569b4 <_obstack_memory_used@@Base+0x2614>
  456a08:	b	456998 <_obstack_memory_used@@Base+0x25f8>
  456a0c:	ret
  456a10:	mov	x2, #0xf                   	// #15
  456a14:	b	45698c <_obstack_memory_used@@Base+0x25ec>
  456a18:	ldrb	w0, [x1]
  456a1c:	strb	w0, [x22]
  456a20:	str	x21, [x19, #8]
  456a24:	ldr	x22, [x19]
  456a28:	strb	wzr, [x22, x21]
  456a2c:	ldp	x19, x20, [sp, #16]
  456a30:	ldp	x21, x22, [sp, #32]
  456a34:	ldr	x23, [sp, #48]
  456a38:	ldp	x29, x30, [sp], #80
  456a3c:	ret
  456a40:	stp	x29, x30, [sp, #-96]!
  456a44:	mov	x29, sp
  456a48:	stp	x23, x24, [sp, #48]
  456a4c:	mov	x24, x0
  456a50:	stp	x21, x22, [sp, #32]
  456a54:	mov	x21, x4
  456a58:	ldr	x22, [x0, #8]
  456a5c:	stp	x19, x20, [sp, #16]
  456a60:	mov	x19, x0
  456a64:	sub	x0, x4, x2
  456a68:	stp	x25, x26, [sp, #64]
  456a6c:	add	x0, x0, x22
  456a70:	ldr	x4, [x24], #16
  456a74:	str	x0, [sp, #88]
  456a78:	add	x25, x1, x2
  456a7c:	mov	x20, x1
  456a80:	mov	x26, x3
  456a84:	cmp	x24, x4
  456a88:	sub	x22, x22, x25
  456a8c:	b.eq	456b64 <_obstack_memory_used@@Base+0x27c4>  // b.none
  456a90:	ldr	x2, [x19, #16]
  456a94:	add	x1, sp, #0x58
  456a98:	mov	x0, x19
  456a9c:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  456aa0:	mov	x23, x0
  456aa4:	cbz	x20, 456abc <_obstack_memory_used@@Base+0x271c>
  456aa8:	cmp	x20, #0x1
  456aac:	ldr	x1, [x19]
  456ab0:	b.eq	456b4c <_obstack_memory_used@@Base+0x27ac>  // b.none
  456ab4:	mov	x2, x20
  456ab8:	bl	402620 <memcpy@plt>
  456abc:	cmp	x26, #0x0
  456ac0:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  456ac4:	b.eq	456ae0 <_obstack_memory_used@@Base+0x2740>  // b.none
  456ac8:	cmp	x21, #0x1
  456acc:	add	x0, x23, x20
  456ad0:	b.eq	456b58 <_obstack_memory_used@@Base+0x27b8>  // b.none
  456ad4:	mov	x1, x26
  456ad8:	mov	x2, x21
  456adc:	bl	402620 <memcpy@plt>
  456ae0:	ldr	x0, [x19]
  456ae4:	cbz	x22, 456b0c <_obstack_memory_used@@Base+0x276c>
  456ae8:	add	x4, x20, x21
  456aec:	cmp	x22, #0x1
  456af0:	add	x3, x23, x4
  456af4:	add	x1, x0, x25
  456af8:	b.eq	456b3c <_obstack_memory_used@@Base+0x279c>  // b.none
  456afc:	mov	x2, x22
  456b00:	mov	x0, x3
  456b04:	bl	402620 <memcpy@plt>
  456b08:	ldr	x0, [x19]
  456b0c:	cmp	x24, x0
  456b10:	b.eq	456b18 <_obstack_memory_used@@Base+0x2778>  // b.none
  456b14:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  456b18:	ldr	x0, [sp, #88]
  456b1c:	str	x23, [x19]
  456b20:	str	x0, [x19, #16]
  456b24:	ldp	x19, x20, [sp, #16]
  456b28:	ldp	x21, x22, [sp, #32]
  456b2c:	ldp	x23, x24, [sp, #48]
  456b30:	ldp	x25, x26, [sp, #64]
  456b34:	ldp	x29, x30, [sp], #96
  456b38:	ret
  456b3c:	ldrb	w0, [x0, x25]
  456b40:	strb	w0, [x23, x4]
  456b44:	ldr	x0, [x19]
  456b48:	b	456b0c <_obstack_memory_used@@Base+0x276c>
  456b4c:	ldrb	w0, [x1]
  456b50:	strb	w0, [x23]
  456b54:	b	456abc <_obstack_memory_used@@Base+0x271c>
  456b58:	ldrb	w0, [x26]
  456b5c:	strb	w0, [x23, x20]
  456b60:	b	456ae0 <_obstack_memory_used@@Base+0x2740>
  456b64:	mov	x2, #0xf                   	// #15
  456b68:	b	456a94 <_obstack_memory_used@@Base+0x26f4>
  456b6c:	nop
  456b70:	stp	x29, x30, [sp, #-32]!
  456b74:	add	x6, x1, x2
  456b78:	mov	x29, sp
  456b7c:	ldp	x5, x3, [x0]
  456b80:	stp	x19, x20, [sp, #16]
  456b84:	mov	x20, x2
  456b88:	mov	x19, x0
  456b8c:	subs	x2, x3, x6
  456b90:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  456b94:	b.eq	456bb4 <_obstack_memory_used@@Base+0x2814>  // b.none
  456b98:	mov	x4, x1
  456b9c:	add	x0, x5, x1
  456ba0:	cmp	x2, #0x1
  456ba4:	add	x1, x5, x6
  456ba8:	b.eq	456bcc <_obstack_memory_used@@Base+0x282c>  // b.none
  456bac:	bl	402630 <memmove@plt>
  456bb0:	ldp	x5, x3, [x19]
  456bb4:	sub	x3, x3, x20
  456bb8:	str	x3, [x19, #8]
  456bbc:	strb	wzr, [x5, x3]
  456bc0:	ldp	x19, x20, [sp, #16]
  456bc4:	ldp	x29, x30, [sp], #32
  456bc8:	ret
  456bcc:	ldrb	w0, [x5, x6]
  456bd0:	strb	w0, [x5, x4]
  456bd4:	ldp	x5, x3, [x19]
  456bd8:	sub	x3, x3, x20
  456bdc:	str	x3, [x19, #8]
  456be0:	strb	wzr, [x5, x3]
  456be4:	ldp	x19, x20, [sp, #16]
  456be8:	ldp	x29, x30, [sp], #32
  456bec:	ret
  456bf0:	add	x1, x0, #0x10
  456bf4:	stp	x1, xzr, [x0]
  456bf8:	strb	wzr, [x0, #16]
  456bfc:	ret
  456c00:	add	x1, x0, #0x10
  456c04:	stp	x1, xzr, [x0]
  456c08:	strb	wzr, [x0, #16]
  456c0c:	ret
  456c10:	add	x4, x0, #0x10
  456c14:	str	x4, [x0]
  456c18:	b	4566b8 <_obstack_memory_used@@Base+0x2318>
  456c1c:	nop
  456c20:	mov	x2, x1
  456c24:	add	x3, x0, #0x10
  456c28:	str	x3, [x0]
  456c2c:	ldr	x3, [x2], #16
  456c30:	cmp	x2, x3
  456c34:	b.eq	456c58 <_obstack_memory_used@@Base+0x28b8>  // b.none
  456c38:	str	x3, [x0]
  456c3c:	ldr	x3, [x1, #8]
  456c40:	stp	x2, xzr, [x1]
  456c44:	ldr	x4, [x1, #16]
  456c48:	str	x3, [x0, #8]
  456c4c:	str	x4, [x0, #16]
  456c50:	strb	wzr, [x1, #16]
  456c54:	ret
  456c58:	ldr	x3, [x1, #8]
  456c5c:	stp	x2, xzr, [x1]
  456c60:	ldp	x4, x5, [x1, #16]
  456c64:	str	x3, [x0, #8]
  456c68:	stp	x4, x5, [x0, #16]
  456c6c:	strb	wzr, [x1, #16]
  456c70:	ret
  456c74:	nop
  456c78:	mov	x2, x1
  456c7c:	add	x3, x0, #0x10
  456c80:	ldr	x4, [x1, #8]
  456c84:	str	x3, [x0]
  456c88:	ldr	x3, [x2], #16
  456c8c:	cmp	x2, x3
  456c90:	b.eq	456cac <_obstack_memory_used@@Base+0x290c>  // b.none
  456c94:	ldr	x5, [x1, #16]
  456c98:	stp	x3, x4, [x0]
  456c9c:	str	x5, [x0, #16]
  456ca0:	stp	x2, xzr, [x1]
  456ca4:	strb	wzr, [x1, #16]
  456ca8:	ret
  456cac:	ldp	x2, x3, [x1, #16]
  456cb0:	str	x4, [x0, #8]
  456cb4:	stp	x2, x3, [x0, #16]
  456cb8:	str	xzr, [x1, #8]
  456cbc:	strb	wzr, [x1, #16]
  456cc0:	ret
  456cc4:	nop
  456cc8:	mov	x1, x0
  456ccc:	ldr	x0, [x1], #16
  456cd0:	cmp	x0, x1
  456cd4:	b.eq	456cdc <_obstack_memory_used@@Base+0x293c>  // b.none
  456cd8:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  456cdc:	ret
  456ce0:	stp	x29, x30, [sp, #-32]!
  456ce4:	mov	x29, sp
  456ce8:	str	x19, [sp, #16]
  456cec:	mov	x19, x0
  456cf0:	bl	456950 <_obstack_memory_used@@Base+0x25b0>
  456cf4:	mov	x0, x19
  456cf8:	ldr	x19, [sp, #16]
  456cfc:	ldp	x29, x30, [sp], #32
  456d00:	ret
  456d04:	nop
  456d08:	stp	x29, x30, [sp, #-32]!
  456d0c:	mov	x29, sp
  456d10:	stp	x19, x20, [sp, #16]
  456d14:	mov	x20, x1
  456d18:	mov	x19, x0
  456d1c:	ldr	x3, [x0]
  456d20:	ldr	x0, [x1], #16
  456d24:	ldr	x2, [x20, #8]
  456d28:	cmp	x1, x0
  456d2c:	b.eq	456d98 <_obstack_memory_used@@Base+0x29f8>  // b.none
  456d30:	stp	x0, x2, [x19]
  456d34:	add	x4, x19, #0x10
  456d38:	cmp	x3, x4
  456d3c:	b.eq	456d70 <_obstack_memory_used@@Base+0x29d0>  // b.none
  456d40:	ldr	x2, [x20, #16]
  456d44:	ldr	x0, [x19, #16]
  456d48:	str	x2, [x19, #16]
  456d4c:	cbz	x3, 456d78 <_obstack_memory_used@@Base+0x29d8>
  456d50:	str	x3, [x20]
  456d54:	str	xzr, [x20, #8]
  456d58:	str	x0, [x20, #16]
  456d5c:	mov	x0, x19
  456d60:	strb	wzr, [x3]
  456d64:	ldp	x19, x20, [sp, #16]
  456d68:	ldp	x29, x30, [sp], #32
  456d6c:	ret
  456d70:	ldr	x0, [x20, #16]
  456d74:	str	x0, [x19, #16]
  456d78:	mov	x3, x1
  456d7c:	str	x1, [x20]
  456d80:	str	xzr, [x20, #8]
  456d84:	mov	x0, x19
  456d88:	strb	wzr, [x3]
  456d8c:	ldp	x19, x20, [sp, #16]
  456d90:	ldp	x29, x30, [sp], #32
  456d94:	ret
  456d98:	cbz	x2, 456db4 <_obstack_memory_used@@Base+0x2a14>
  456d9c:	cmp	x2, #0x1
  456da0:	b.eq	456dd8 <_obstack_memory_used@@Base+0x2a38>  // b.none
  456da4:	mov	x0, x3
  456da8:	bl	402620 <memcpy@plt>
  456dac:	ldr	x3, [x19]
  456db0:	ldr	x2, [x20, #8]
  456db4:	str	x2, [x19, #8]
  456db8:	strb	wzr, [x3, x2]
  456dbc:	mov	x0, x19
  456dc0:	str	xzr, [x20, #8]
  456dc4:	ldr	x3, [x20]
  456dc8:	strb	wzr, [x3]
  456dcc:	ldp	x19, x20, [sp, #16]
  456dd0:	ldp	x29, x30, [sp], #32
  456dd4:	ret
  456dd8:	ldrb	w0, [x20, #16]
  456ddc:	strb	w0, [x3]
  456de0:	ldr	x3, [x19]
  456de4:	ldr	x2, [x20, #8]
  456de8:	b	456db4 <_obstack_memory_used@@Base+0x2a14>
  456dec:	nop
  456df0:	ldr	x0, [x0]
  456df4:	ret
  456df8:	ldr	x0, [x0]
  456dfc:	ret
  456e00:	ldp	x1, x0, [x0]
  456e04:	add	x0, x1, x0
  456e08:	ret
  456e0c:	nop
  456e10:	ldp	x1, x0, [x0]
  456e14:	add	x0, x1, x0
  456e18:	ret
  456e1c:	nop
  456e20:	mov	x1, x0
  456e24:	mov	x0, x8
  456e28:	ldp	x2, x1, [x1]
  456e2c:	add	x1, x2, x1
  456e30:	str	x1, [x8]
  456e34:	ret
  456e38:	mov	x1, x0
  456e3c:	mov	x0, x8
  456e40:	ldp	x2, x1, [x1]
  456e44:	add	x1, x2, x1
  456e48:	str	x1, [x8]
  456e4c:	ret
  456e50:	mov	x1, x0
  456e54:	mov	x0, x8
  456e58:	ldr	x1, [x1]
  456e5c:	str	x1, [x8]
  456e60:	ret
  456e64:	nop
  456e68:	mov	x1, x0
  456e6c:	mov	x0, x8
  456e70:	ldr	x1, [x1]
  456e74:	str	x1, [x8]
  456e78:	ret
  456e7c:	nop
  456e80:	ldr	x0, [x0]
  456e84:	ret
  456e88:	ldp	x1, x0, [x0]
  456e8c:	add	x0, x1, x0
  456e90:	ret
  456e94:	nop
  456e98:	mov	x1, x0
  456e9c:	mov	x0, x8
  456ea0:	ldp	x2, x1, [x1]
  456ea4:	add	x1, x2, x1
  456ea8:	str	x1, [x8]
  456eac:	ret
  456eb0:	mov	x1, x0
  456eb4:	mov	x0, x8
  456eb8:	ldr	x1, [x1]
  456ebc:	str	x1, [x8]
  456ec0:	ret
  456ec4:	nop
  456ec8:	ldr	x0, [x0, #8]
  456ecc:	ret
  456ed0:	ldr	x0, [x0, #8]
  456ed4:	ret
  456ed8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  456edc:	ret
  456ee0:	mov	x1, x0
  456ee4:	ldr	x2, [x1], #16
  456ee8:	cmp	x2, x1
  456eec:	b.eq	456ef8 <_obstack_memory_used@@Base+0x2b58>  // b.none
  456ef0:	ldr	x0, [x0, #16]
  456ef4:	ret
  456ef8:	mov	x0, #0xf                   	// #15
  456efc:	ret
  456f00:	stp	x29, x30, [sp, #-64]!
  456f04:	mov	x29, sp
  456f08:	stp	x19, x20, [sp, #16]
  456f0c:	mov	x19, x0
  456f10:	ldr	x0, [x0, #8]
  456f14:	str	x21, [sp, #32]
  456f18:	str	x1, [sp, #56]
  456f1c:	cmp	x1, x0
  456f20:	b.cs	456f2c <_obstack_memory_used@@Base+0x2b8c>  // b.hs, b.nlast
  456f24:	mov	x1, x0
  456f28:	str	x0, [sp, #56]
  456f2c:	mov	x20, x19
  456f30:	ldr	x21, [x20], #16
  456f34:	cmp	x20, x21
  456f38:	b.eq	456ff0 <_obstack_memory_used@@Base+0x2c50>  // b.none
  456f3c:	ldr	x2, [x19, #16]
  456f40:	cmp	x2, x1
  456f44:	b.eq	456f98 <_obstack_memory_used@@Base+0x2bf8>  // b.none
  456f48:	cmp	x2, #0xf
  456f4c:	mov	x3, #0xf                   	// #15
  456f50:	csel	x3, x2, x3, ls  // ls = plast
  456f54:	cmp	x3, x1
  456f58:	b.cs	456fa8 <_obstack_memory_used@@Base+0x2c08>  // b.hs, b.nlast
  456f5c:	add	x1, sp, #0x38
  456f60:	mov	x0, x19
  456f64:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  456f68:	mov	x21, x0
  456f6c:	ldp	x1, x3, [x19]
  456f70:	add	x2, x3, #0x1
  456f74:	cbz	x3, 456ff8 <_obstack_memory_used@@Base+0x2c58>
  456f78:	cbnz	x2, 456fe4 <_obstack_memory_used@@Base+0x2c44>
  456f7c:	cmp	x20, x1
  456f80:	b.eq	456f8c <_obstack_memory_used@@Base+0x2bec>  // b.none
  456f84:	mov	x0, x1
  456f88:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  456f8c:	ldr	x0, [sp, #56]
  456f90:	str	x21, [x19]
  456f94:	str	x0, [x19, #16]
  456f98:	ldp	x19, x20, [sp, #16]
  456f9c:	ldr	x21, [sp, #32]
  456fa0:	ldp	x29, x30, [sp], #64
  456fa4:	ret
  456fa8:	cmp	x20, x21
  456fac:	b.eq	456f98 <_obstack_memory_used@@Base+0x2bf8>  // b.none
  456fb0:	add	x2, x0, #0x1
  456fb4:	cbz	x0, 457008 <_obstack_memory_used@@Base+0x2c68>
  456fb8:	cbz	x2, 456fc8 <_obstack_memory_used@@Base+0x2c28>
  456fbc:	mov	x1, x21
  456fc0:	mov	x0, x20
  456fc4:	bl	402620 <memcpy@plt>
  456fc8:	mov	x0, x21
  456fcc:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  456fd0:	str	x20, [x19]
  456fd4:	ldp	x19, x20, [sp, #16]
  456fd8:	ldr	x21, [sp, #32]
  456fdc:	ldp	x29, x30, [sp], #64
  456fe0:	ret
  456fe4:	bl	402620 <memcpy@plt>
  456fe8:	ldr	x1, [x19]
  456fec:	b	456f7c <_obstack_memory_used@@Base+0x2bdc>
  456ff0:	mov	x2, #0xf                   	// #15
  456ff4:	b	456f40 <_obstack_memory_used@@Base+0x2ba0>
  456ff8:	ldrb	w0, [x1]
  456ffc:	strb	w0, [x21]
  457000:	ldr	x1, [x19]
  457004:	b	456f7c <_obstack_memory_used@@Base+0x2bdc>
  457008:	ldrb	w0, [x21]
  45700c:	strb	w0, [x19, #16]
  457010:	b	456fc8 <_obstack_memory_used@@Base+0x2c28>
  457014:	nop
  457018:	mov	x1, x0
  45701c:	ldr	x2, [x1], #16
  457020:	cmp	x2, x1
  457024:	b.eq	457054 <_obstack_memory_used@@Base+0x2cb4>  // b.none
  457028:	ldr	x2, [x0, #16]
  45702c:	ldr	x1, [x0, #8]
  457030:	cmp	x1, x2
  457034:	b.cc	45703c <_obstack_memory_used@@Base+0x2c9c>  // b.lo, b.ul, b.last
  457038:	ret
  45703c:	stp	x29, x30, [sp, #-16]!
  457040:	mov	x1, #0x0                   	// #0
  457044:	mov	x29, sp
  457048:	bl	456f00 <_obstack_memory_used@@Base+0x2b60>
  45704c:	ldp	x29, x30, [sp], #16
  457050:	ret
  457054:	mov	x2, #0xf                   	// #15
  457058:	b	45702c <_obstack_memory_used@@Base+0x2c8c>
  45705c:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  457060:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  457064:	b	45704c <_obstack_memory_used@@Base+0x2cac>
  457068:	ldr	x1, [x0]
  45706c:	str	xzr, [x0, #8]
  457070:	strb	wzr, [x1]
  457074:	ret
  457078:	ldr	x0, [x0, #8]
  45707c:	cmp	x0, #0x0
  457080:	cset	w0, eq  // eq = none
  457084:	ret
  457088:	ldr	x0, [x0]
  45708c:	add	x0, x0, x1
  457090:	ret
  457094:	nop
  457098:	ldr	x0, [x0]
  45709c:	add	x0, x0, x1
  4570a0:	ret
  4570a4:	nop
  4570a8:	ldr	x2, [x0, #8]
  4570ac:	cmp	x1, x2
  4570b0:	b.cs	4570c0 <_obstack_memory_used@@Base+0x2d20>  // b.hs, b.nlast
  4570b4:	ldr	x0, [x0]
  4570b8:	add	x0, x0, x1
  4570bc:	ret
  4570c0:	stp	x29, x30, [sp, #-16]!
  4570c4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4570c8:	add	x0, x0, #0x3c8
  4570cc:	mov	x29, sp
  4570d0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4570d4:	nop
  4570d8:	ldr	x2, [x0, #8]
  4570dc:	cmp	x1, x2
  4570e0:	b.cs	4570f0 <_obstack_memory_used@@Base+0x2d50>  // b.hs, b.nlast
  4570e4:	ldr	x0, [x0]
  4570e8:	add	x0, x0, x1
  4570ec:	ret
  4570f0:	stp	x29, x30, [sp, #-16]!
  4570f4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4570f8:	add	x0, x0, #0x3c8
  4570fc:	mov	x29, sp
  457100:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457104:	nop
  457108:	ldr	x0, [x0]
  45710c:	ret
  457110:	ldr	x0, [x0]
  457114:	ret
  457118:	ldp	x2, x1, [x0]
  45711c:	sub	x0, x1, #0x1
  457120:	add	x0, x2, x0
  457124:	ret
  457128:	ldp	x2, x1, [x0]
  45712c:	sub	x0, x1, #0x1
  457130:	add	x0, x2, x0
  457134:	ret
  457138:	stp	x29, x30, [sp, #-48]!
  45713c:	mov	x29, sp
  457140:	stp	x19, x20, [sp, #16]
  457144:	mov	x19, x0
  457148:	stp	x21, x22, [sp, #32]
  45714c:	and	w22, w1, #0xff
  457150:	ldr	x21, [x0, #8]
  457154:	ldr	x1, [x0], #16
  457158:	add	x20, x21, #0x1
  45715c:	cmp	x1, x0
  457160:	b.eq	4571b4 <_obstack_memory_used@@Base+0x2e14>  // b.none
  457164:	ldr	x0, [x19, #16]
  457168:	cmp	x20, x0
  45716c:	b.hi	457194 <_obstack_memory_used@@Base+0x2df4>  // b.pmore
  457170:	strb	w22, [x1, x21]
  457174:	mov	x0, x19
  457178:	str	x20, [x19, #8]
  45717c:	ldr	x1, [x19]
  457180:	strb	wzr, [x1, x20]
  457184:	ldp	x19, x20, [sp, #16]
  457188:	ldp	x21, x22, [sp, #32]
  45718c:	ldp	x29, x30, [sp], #48
  457190:	ret
  457194:	mov	x1, x21
  457198:	mov	x0, x19
  45719c:	mov	x4, #0x1                   	// #1
  4571a0:	mov	x3, #0x0                   	// #0
  4571a4:	mov	x2, #0x0                   	// #0
  4571a8:	bl	456a40 <_obstack_memory_used@@Base+0x26a0>
  4571ac:	ldr	x1, [x19]
  4571b0:	b	457170 <_obstack_memory_used@@Base+0x2dd0>
  4571b4:	mov	x0, #0xf                   	// #15
  4571b8:	b	457168 <_obstack_memory_used@@Base+0x2dc8>
  4571bc:	nop
  4571c0:	stp	x29, x30, [sp, #-48]!
  4571c4:	mov	x29, sp
  4571c8:	stp	x19, x20, [sp, #16]
  4571cc:	mov	x19, x0
  4571d0:	stp	x21, x22, [sp, #32]
  4571d4:	and	w22, w1, #0xff
  4571d8:	ldr	x21, [x0, #8]
  4571dc:	ldr	x1, [x0], #16
  4571e0:	add	x20, x21, #0x1
  4571e4:	cmp	x1, x0
  4571e8:	b.eq	457254 <_obstack_memory_used@@Base+0x2eb4>  // b.none
  4571ec:	ldr	x0, [x19, #16]
  4571f0:	cmp	x20, x0
  4571f4:	b.hi	457218 <_obstack_memory_used@@Base+0x2e78>  // b.pmore
  4571f8:	strb	w22, [x1, x21]
  4571fc:	str	x20, [x19, #8]
  457200:	ldr	x0, [x19]
  457204:	strb	wzr, [x0, x20]
  457208:	ldp	x19, x20, [sp, #16]
  45720c:	ldp	x21, x22, [sp, #32]
  457210:	ldp	x29, x30, [sp], #48
  457214:	ret
  457218:	mov	x1, x21
  45721c:	mov	x0, x19
  457220:	mov	x4, #0x1                   	// #1
  457224:	mov	x3, #0x0                   	// #0
  457228:	mov	x2, #0x0                   	// #0
  45722c:	bl	456a40 <_obstack_memory_used@@Base+0x26a0>
  457230:	ldr	x1, [x19]
  457234:	strb	w22, [x1, x21]
  457238:	str	x20, [x19, #8]
  45723c:	ldr	x0, [x19]
  457240:	strb	wzr, [x0, x20]
  457244:	ldp	x19, x20, [sp, #16]
  457248:	ldp	x21, x22, [sp, #32]
  45724c:	ldp	x29, x30, [sp], #48
  457250:	ret
  457254:	mov	x0, #0xf                   	// #15
  457258:	b	4571f0 <_obstack_memory_used@@Base+0x2e50>
  45725c:	nop
  457260:	stp	x29, x30, [sp, #-32]!
  457264:	mov	x29, sp
  457268:	str	x19, [sp, #16]
  45726c:	mov	x19, x0
  457270:	bl	456950 <_obstack_memory_used@@Base+0x25b0>
  457274:	mov	x0, x19
  457278:	ldr	x19, [sp, #16]
  45727c:	ldp	x29, x30, [sp], #32
  457280:	ret
  457284:	nop
  457288:	stp	x29, x30, [sp, #-32]!
  45728c:	mov	x29, sp
  457290:	stp	x19, x20, [sp, #16]
  457294:	mov	x19, x0
  457298:	mov	x0, x1
  45729c:	mov	x20, x1
  4572a0:	ldr	x3, [x19]
  4572a4:	ldr	x1, [x0], #16
  4572a8:	ldr	x2, [x20, #8]
  4572ac:	cmp	x1, x0
  4572b0:	b.eq	45731c <_obstack_memory_used@@Base+0x2f7c>  // b.none
  4572b4:	stp	x1, x2, [x19]
  4572b8:	add	x4, x19, #0x10
  4572bc:	cmp	x3, x4
  4572c0:	b.eq	4572f4 <_obstack_memory_used@@Base+0x2f54>  // b.none
  4572c4:	ldr	x2, [x20, #16]
  4572c8:	ldr	x1, [x19, #16]
  4572cc:	str	x2, [x19, #16]
  4572d0:	cbz	x3, 4572fc <_obstack_memory_used@@Base+0x2f5c>
  4572d4:	str	x3, [x20]
  4572d8:	mov	x0, x19
  4572dc:	str	xzr, [x20, #8]
  4572e0:	str	x1, [x20, #16]
  4572e4:	strb	wzr, [x3]
  4572e8:	ldp	x19, x20, [sp, #16]
  4572ec:	ldp	x29, x30, [sp], #32
  4572f0:	ret
  4572f4:	ldr	x1, [x20, #16]
  4572f8:	str	x1, [x19, #16]
  4572fc:	mov	x3, x0
  457300:	str	x0, [x20]
  457304:	str	xzr, [x20, #8]
  457308:	mov	x0, x19
  45730c:	strb	wzr, [x3]
  457310:	ldp	x19, x20, [sp, #16]
  457314:	ldp	x29, x30, [sp], #32
  457318:	ret
  45731c:	cbz	x2, 457338 <_obstack_memory_used@@Base+0x2f98>
  457320:	cmp	x2, #0x1
  457324:	b.eq	45735c <_obstack_memory_used@@Base+0x2fbc>  // b.none
  457328:	mov	x0, x3
  45732c:	bl	402620 <memcpy@plt>
  457330:	ldr	x3, [x19]
  457334:	ldr	x2, [x20, #8]
  457338:	str	x2, [x19, #8]
  45733c:	strb	wzr, [x3, x2]
  457340:	mov	x0, x19
  457344:	str	xzr, [x20, #8]
  457348:	ldr	x3, [x20]
  45734c:	strb	wzr, [x3]
  457350:	ldp	x19, x20, [sp, #16]
  457354:	ldp	x29, x30, [sp], #32
  457358:	ret
  45735c:	ldrb	w0, [x20, #16]
  457360:	strb	w0, [x3]
  457364:	ldr	x3, [x19]
  457368:	ldr	x2, [x20, #8]
  45736c:	b	457338 <_obstack_memory_used@@Base+0x2f98>
  457370:	stp	x29, x30, [sp, #-32]!
  457374:	mov	x29, sp
  457378:	ldr	x3, [x0, #8]
  45737c:	str	x19, [sp, #16]
  457380:	cmp	x1, x3
  457384:	b.hi	4573e4 <_obstack_memory_used@@Base+0x3044>  // b.pmore
  457388:	mov	x19, x0
  45738c:	cmn	x2, #0x1
  457390:	b.eq	4573c8 <_obstack_memory_used@@Base+0x3028>  // b.none
  457394:	cbnz	x2, 4573a8 <_obstack_memory_used@@Base+0x3008>
  457398:	mov	x0, x19
  45739c:	ldr	x19, [sp, #16]
  4573a0:	ldp	x29, x30, [sp], #32
  4573a4:	ret
  4573a8:	sub	x3, x3, x1
  4573ac:	cmp	x3, x2
  4573b0:	csel	x2, x3, x2, ls  // ls = plast
  4573b4:	bl	456b70 <_obstack_memory_used@@Base+0x27d0>
  4573b8:	mov	x0, x19
  4573bc:	ldr	x19, [sp, #16]
  4573c0:	ldp	x29, x30, [sp], #32
  4573c4:	ret
  4573c8:	ldr	x0, [x0]
  4573cc:	str	x1, [x19, #8]
  4573d0:	strb	wzr, [x0, x1]
  4573d4:	mov	x0, x19
  4573d8:	ldr	x19, [sp, #16]
  4573dc:	ldp	x29, x30, [sp], #32
  4573e0:	ret
  4573e4:	mov	x2, x1
  4573e8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4573ec:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4573f0:	add	x0, x0, #0x390
  4573f4:	add	x1, x1, #0x410
  4573f8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4573fc:	nop
  457400:	stp	x29, x30, [sp, #-32]!
  457404:	mov	x2, #0x1                   	// #1
  457408:	mov	x29, sp
  45740c:	stp	x19, x20, [sp, #16]
  457410:	mov	x20, x0
  457414:	ldr	x19, [x0]
  457418:	sub	x19, x1, x19
  45741c:	mov	x1, x19
  457420:	bl	456b70 <_obstack_memory_used@@Base+0x27d0>
  457424:	ldr	x0, [x20]
  457428:	add	x0, x0, x19
  45742c:	ldp	x19, x20, [sp, #16]
  457430:	ldp	x29, x30, [sp], #32
  457434:	ret
  457438:	stp	x29, x30, [sp, #-32]!
  45743c:	mov	x29, sp
  457440:	ldp	x3, x4, [x0]
  457444:	stp	x19, x20, [sp, #16]
  457448:	mov	x19, x0
  45744c:	sub	x20, x1, x3
  457450:	add	x3, x3, x4
  457454:	cmp	x2, x3
  457458:	b.eq	45747c <_obstack_memory_used@@Base+0x30dc>  // b.none
  45745c:	sub	x2, x2, x1
  457460:	mov	x1, x20
  457464:	bl	456b70 <_obstack_memory_used@@Base+0x27d0>
  457468:	ldr	x0, [x19]
  45746c:	add	x0, x0, x20
  457470:	ldp	x19, x20, [sp, #16]
  457474:	ldp	x29, x30, [sp], #32
  457478:	ret
  45747c:	str	x20, [x0, #8]
  457480:	strb	wzr, [x1]
  457484:	ldr	x0, [x19]
  457488:	add	x0, x0, x20
  45748c:	ldp	x19, x20, [sp, #16]
  457490:	ldp	x29, x30, [sp], #32
  457494:	ret
  457498:	stp	x29, x30, [sp, #-16]!
  45749c:	mov	x2, #0x1                   	// #1
  4574a0:	mov	x29, sp
  4574a4:	ldr	x1, [x0, #8]
  4574a8:	sub	x1, x1, #0x1
  4574ac:	bl	456b70 <_obstack_memory_used@@Base+0x27d0>
  4574b0:	ldp	x29, x30, [sp], #16
  4574b4:	ret
  4574b8:	stp	x29, x30, [sp, #-64]!
  4574bc:	mov	x29, sp
  4574c0:	stp	x19, x20, [sp, #16]
  4574c4:	mov	x19, x0
  4574c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4574cc:	add	x0, x2, x0
  4574d0:	stp	x21, x22, [sp, #32]
  4574d4:	ldr	x5, [x19, #8]
  4574d8:	str	x23, [sp, #48]
  4574dc:	sub	x0, x0, x5
  4574e0:	cmp	x3, x0
  4574e4:	b.hi	4575ec <_obstack_memory_used@@Base+0x324c>  // b.pmore
  4574e8:	mov	x0, x19
  4574ec:	sub	x21, x3, x2
  4574f0:	mov	x20, x3
  4574f4:	mov	x22, x1
  4574f8:	and	w23, w4, #0xff
  4574fc:	add	x21, x21, x5
  457500:	ldr	x3, [x0], #16
  457504:	cmp	x3, x0
  457508:	b.eq	4575a8 <_obstack_memory_used@@Base+0x3208>  // b.none
  45750c:	ldr	x0, [x19, #16]
  457510:	cmp	x0, x21
  457514:	b.cc	457588 <_obstack_memory_used@@Base+0x31e8>  // b.lo, b.ul, b.last
  457518:	add	x0, x2, x22
  45751c:	subs	x5, x5, x0
  457520:	ccmp	x2, x20, #0x4, ne  // ne = any
  457524:	b.eq	457548 <_obstack_memory_used@@Base+0x31a8>  // b.none
  457528:	add	x3, x3, x22
  45752c:	cmp	x5, #0x1
  457530:	add	x0, x3, x20
  457534:	add	x1, x3, x2
  457538:	b.eq	4575d8 <_obstack_memory_used@@Base+0x3238>  // b.none
  45753c:	mov	x2, x5
  457540:	bl	402630 <memmove@plt>
  457544:	ldr	x3, [x19]
  457548:	cbz	x20, 457568 <_obstack_memory_used@@Base+0x31c8>
  45754c:	cmp	x20, #0x1
  457550:	add	x0, x3, x22
  457554:	b.eq	4575b0 <_obstack_memory_used@@Base+0x3210>  // b.none
  457558:	mov	x2, x20
  45755c:	mov	w1, w23
  457560:	bl	402890 <memset@plt>
  457564:	ldr	x3, [x19]
  457568:	str	x21, [x19, #8]
  45756c:	strb	wzr, [x3, x21]
  457570:	mov	x0, x19
  457574:	ldp	x19, x20, [sp, #16]
  457578:	ldp	x21, x22, [sp, #32]
  45757c:	ldr	x23, [sp, #48]
  457580:	ldp	x29, x30, [sp], #64
  457584:	ret
  457588:	mov	x3, #0x0                   	// #0
  45758c:	mov	x4, x20
  457590:	mov	x1, x22
  457594:	mov	x0, x19
  457598:	bl	456a40 <_obstack_memory_used@@Base+0x26a0>
  45759c:	ldr	x3, [x19]
  4575a0:	cbz	x20, 457568 <_obstack_memory_used@@Base+0x31c8>
  4575a4:	b	45754c <_obstack_memory_used@@Base+0x31ac>
  4575a8:	mov	x0, #0xf                   	// #15
  4575ac:	b	457510 <_obstack_memory_used@@Base+0x3170>
  4575b0:	strb	w23, [x3, x22]
  4575b4:	mov	x0, x19
  4575b8:	str	x21, [x19, #8]
  4575bc:	ldr	x3, [x19]
  4575c0:	strb	wzr, [x3, x21]
  4575c4:	ldp	x19, x20, [sp, #16]
  4575c8:	ldp	x21, x22, [sp, #32]
  4575cc:	ldr	x23, [sp, #48]
  4575d0:	ldp	x29, x30, [sp], #64
  4575d4:	ret
  4575d8:	ldrb	w0, [x3, x2]
  4575dc:	strb	w0, [x3, x20]
  4575e0:	ldr	x3, [x19]
  4575e4:	cbz	x20, 457568 <_obstack_memory_used@@Base+0x31c8>
  4575e8:	b	45754c <_obstack_memory_used@@Base+0x31ac>
  4575ec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4575f0:	add	x0, x0, #0x428
  4575f4:	bl	402f0c <ferror@plt+0x1dc>
  4575f8:	mov	x3, x1
  4575fc:	mov	w4, w2
  457600:	ldr	x1, [x0, #8]
  457604:	mov	x2, #0x0                   	// #0
  457608:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  45760c:	nop
  457610:	mov	x3, x1
  457614:	mov	x5, x0
  457618:	ldr	x1, [x0, #8]
  45761c:	and	w4, w2, #0xff
  457620:	cmp	x1, x3
  457624:	b.cc	45763c <_obstack_memory_used@@Base+0x329c>  // b.lo, b.ul, b.last
  457628:	b.ls	457638 <_obstack_memory_used@@Base+0x3298>  // b.plast
  45762c:	ldr	x0, [x0]
  457630:	str	x3, [x5, #8]
  457634:	strb	wzr, [x0, x3]
  457638:	ret
  45763c:	sub	x3, x3, x1
  457640:	mov	x2, #0x0                   	// #0
  457644:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  457648:	mov	w2, #0x0                   	// #0
  45764c:	b	457610 <_obstack_memory_used@@Base+0x3270>
  457650:	mov	w4, w2
  457654:	mov	x3, x1
  457658:	ldr	x2, [x0, #8]
  45765c:	mov	x1, #0x0                   	// #0
  457660:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  457664:	nop
  457668:	stp	x29, x30, [sp, #-32]!
  45766c:	mov	w4, w1
  457670:	mov	x3, #0x1                   	// #1
  457674:	mov	x29, sp
  457678:	ldr	x2, [x0, #8]
  45767c:	mov	x1, #0x0                   	// #0
  457680:	str	x19, [sp, #16]
  457684:	mov	x19, x0
  457688:	bl	4574b8 <_obstack_memory_used@@Base+0x3118>
  45768c:	mov	x0, x19
  457690:	ldr	x19, [sp, #16]
  457694:	ldp	x29, x30, [sp], #32
  457698:	ret
  45769c:	nop
  4576a0:	and	w4, w3, #0xff
  4576a4:	ldr	x3, [x0, #8]
  4576a8:	cmp	x1, x3
  4576ac:	b.hi	4576bc <_obstack_memory_used@@Base+0x331c>  // b.pmore
  4576b0:	mov	x3, x2
  4576b4:	mov	x2, #0x0                   	// #0
  4576b8:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  4576bc:	stp	x29, x30, [sp, #-16]!
  4576c0:	mov	x2, x1
  4576c4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4576c8:	mov	x29, sp
  4576cc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4576d0:	add	x0, x0, #0x390
  4576d4:	add	x1, x1, #0x448
  4576d8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4576dc:	nop
  4576e0:	stp	x29, x30, [sp, #-32]!
  4576e4:	mov	w4, w2
  4576e8:	mov	x3, #0x1                   	// #1
  4576ec:	mov	x29, sp
  4576f0:	stp	x19, x20, [sp, #16]
  4576f4:	mov	x20, x0
  4576f8:	mov	x2, #0x0                   	// #0
  4576fc:	ldr	x19, [x0]
  457700:	sub	x19, x1, x19
  457704:	mov	x1, x19
  457708:	bl	4574b8 <_obstack_memory_used@@Base+0x3118>
  45770c:	ldr	x0, [x20]
  457710:	add	x0, x0, x19
  457714:	ldp	x19, x20, [sp, #16]
  457718:	ldp	x29, x30, [sp], #32
  45771c:	ret
  457720:	ldr	x5, [x0, #8]
  457724:	cmp	x1, x5
  457728:	b.hi	457740 <_obstack_memory_used@@Base+0x33a0>  // b.pmore
  45772c:	sub	x5, x5, x1
  457730:	and	w4, w4, #0xff
  457734:	cmp	x5, x2
  457738:	csel	x2, x5, x2, ls  // ls = plast
  45773c:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  457740:	stp	x29, x30, [sp, #-16]!
  457744:	mov	x2, x1
  457748:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45774c:	mov	x29, sp
  457750:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457754:	mov	x3, x5
  457758:	add	x1, x1, #0x460
  45775c:	add	x0, x0, #0x390
  457760:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457764:	nop
  457768:	ldr	x5, [x0]
  45776c:	sub	x2, x2, x1
  457770:	sub	x1, x1, x5
  457774:	b	4574b8 <_obstack_memory_used@@Base+0x3118>
  457778:	stp	x29, x30, [sp, #-32]!
  45777c:	mov	x5, x2
  457780:	mov	w4, w3
  457784:	mov	x29, sp
  457788:	stp	x19, x20, [sp, #16]
  45778c:	mov	x20, x0
  457790:	mov	x3, x5
  457794:	ldr	x19, [x0]
  457798:	mov	x2, #0x0                   	// #0
  45779c:	sub	x19, x1, x19
  4577a0:	mov	x1, x19
  4577a4:	bl	4574b8 <_obstack_memory_used@@Base+0x3118>
  4577a8:	ldr	x0, [x20]
  4577ac:	add	x0, x0, x19
  4577b0:	ldp	x19, x20, [sp, #16]
  4577b4:	ldp	x29, x30, [sp], #32
  4577b8:	ret
  4577bc:	nop
  4577c0:	stp	x29, x30, [sp, #-112]!
  4577c4:	mov	x29, sp
  4577c8:	stp	x19, x20, [sp, #16]
  4577cc:	mov	x19, x0
  4577d0:	mov	x20, x4
  4577d4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4577d8:	add	x0, x2, x0
  4577dc:	ldr	x4, [x19, #8]
  4577e0:	stp	x21, x22, [sp, #32]
  4577e4:	stp	x23, x24, [sp, #48]
  4577e8:	sub	x0, x0, x4
  4577ec:	cmp	x20, x0
  4577f0:	stp	x25, x26, [sp, #64]
  4577f4:	stp	x27, x28, [sp, #80]
  4577f8:	b.hi	457a2c <_obstack_memory_used@@Base+0x368c>  // b.pmore
  4577fc:	mov	x0, x19
  457800:	sub	x25, x20, x2
  457804:	mov	x28, x2
  457808:	mov	x26, x1
  45780c:	mov	x21, x3
  457810:	add	x27, x4, x25
  457814:	ldr	x23, [x0], #16
  457818:	cmp	x23, x0
  45781c:	b.eq	457984 <_obstack_memory_used@@Base+0x35e4>  // b.none
  457820:	ldr	x0, [x19, #16]
  457824:	cmp	x0, x27
  457828:	b.cc	45794c <_obstack_memory_used@@Base+0x35ac>  // b.lo, b.ul, b.last
  45782c:	cmp	x28, x20
  457830:	add	x0, x28, x26
  457834:	cset	w24, ne  // ne = any
  457838:	subs	x22, x4, x0
  45783c:	csel	w24, w24, wzr, ne  // ne = any
  457840:	add	x3, x23, x26
  457844:	cmp	x23, x21
  457848:	b.ls	4578b8 <_obstack_memory_used@@Base+0x3518>  // b.plast
  45784c:	cbz	w24, 457870 <_obstack_memory_used@@Base+0x34d0>
  457850:	cmp	x22, #0x1
  457854:	add	x0, x3, x20
  457858:	add	x1, x3, x28
  45785c:	b.eq	457974 <_obstack_memory_used@@Base+0x35d4>  // b.none
  457860:	mov	x2, x22
  457864:	str	x3, [sp, #104]
  457868:	bl	402630 <memmove@plt>
  45786c:	ldr	x3, [sp, #104]
  457870:	cbz	x20, 45788c <_obstack_memory_used@@Base+0x34ec>
  457874:	cmp	x20, #0x1
  457878:	b.eq	457968 <_obstack_memory_used@@Base+0x35c8>  // b.none
  45787c:	mov	x2, x20
  457880:	mov	x1, x21
  457884:	mov	x0, x3
  457888:	bl	402620 <memcpy@plt>
  45788c:	ldr	x1, [x19]
  457890:	str	x27, [x19, #8]
  457894:	mov	x0, x19
  457898:	strb	wzr, [x1, x27]
  45789c:	ldp	x19, x20, [sp, #16]
  4578a0:	ldp	x21, x22, [sp, #32]
  4578a4:	ldp	x23, x24, [sp, #48]
  4578a8:	ldp	x25, x26, [sp, #64]
  4578ac:	ldp	x27, x28, [sp, #80]
  4578b0:	ldp	x29, x30, [sp], #112
  4578b4:	ret
  4578b8:	add	x4, x23, x4
  4578bc:	cmp	x21, x4
  4578c0:	b.hi	45784c <_obstack_memory_used@@Base+0x34ac>  // b.pmore
  4578c4:	cmp	x20, #0x0
  4578c8:	ccmp	x28, x20, #0x0, ne  // ne = any
  4578cc:	b.cc	457994 <_obstack_memory_used@@Base+0x35f4>  // b.lo, b.ul, b.last
  4578d0:	cmp	x20, #0x1
  4578d4:	b.eq	45798c <_obstack_memory_used@@Base+0x35ec>  // b.none
  4578d8:	mov	x0, x3
  4578dc:	mov	x2, x20
  4578e0:	mov	x1, x21
  4578e4:	bl	402630 <memmove@plt>
  4578e8:	mov	x3, x0
  4578ec:	cbz	w24, 45788c <_obstack_memory_used@@Base+0x34ec>
  4578f0:	cmp	x22, #0x1
  4578f4:	add	x0, x3, x20
  4578f8:	add	x1, x3, x28
  4578fc:	b.eq	4579b8 <_obstack_memory_used@@Base+0x3618>  // b.none
  457900:	mov	x2, x22
  457904:	str	x3, [sp, #104]
  457908:	bl	402630 <memmove@plt>
  45790c:	ldr	x3, [sp, #104]
  457910:	cmp	x28, x20
  457914:	b.cs	45788c <_obstack_memory_used@@Base+0x34ec>  // b.hs, b.nlast
  457918:	add	x28, x3, x28
  45791c:	add	x0, x21, x20
  457920:	cmp	x28, x0
  457924:	b.cs	45799c <_obstack_memory_used@@Base+0x35fc>  // b.hs, b.nlast
  457928:	cmp	x28, x21
  45792c:	b.hi	4579c4 <_obstack_memory_used@@Base+0x3624>  // b.pmore
  457930:	cmp	x20, #0x1
  457934:	add	x1, x21, x25
  457938:	b.eq	457a20 <_obstack_memory_used@@Base+0x3680>  // b.none
  45793c:	mov	x2, x20
  457940:	mov	x0, x3
  457944:	bl	402620 <memcpy@plt>
  457948:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  45794c:	mov	x4, x20
  457950:	mov	x3, x21
  457954:	mov	x2, x28
  457958:	mov	x1, x26
  45795c:	mov	x0, x19
  457960:	bl	456a40 <_obstack_memory_used@@Base+0x26a0>
  457964:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  457968:	ldrb	w0, [x21]
  45796c:	strb	w0, [x23, x26]
  457970:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  457974:	ldrb	w0, [x3, x28]
  457978:	strb	w0, [x3, x20]
  45797c:	cbz	x20, 45788c <_obstack_memory_used@@Base+0x34ec>
  457980:	b	457874 <_obstack_memory_used@@Base+0x34d4>
  457984:	mov	x0, #0xf                   	// #15
  457988:	b	457824 <_obstack_memory_used@@Base+0x3484>
  45798c:	ldrb	w0, [x21]
  457990:	strb	w0, [x23, x26]
  457994:	cbz	w24, 457910 <_obstack_memory_used@@Base+0x3570>
  457998:	b	4578f0 <_obstack_memory_used@@Base+0x3550>
  45799c:	cmp	x20, #0x1
  4579a0:	b.eq	457968 <_obstack_memory_used@@Base+0x35c8>  // b.none
  4579a4:	mov	x2, x20
  4579a8:	mov	x1, x21
  4579ac:	mov	x0, x3
  4579b0:	bl	402630 <memmove@plt>
  4579b4:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  4579b8:	ldrb	w0, [x3, x28]
  4579bc:	strb	w0, [x3, x20]
  4579c0:	b	457910 <_obstack_memory_used@@Base+0x3570>
  4579c4:	sub	x28, x28, x21
  4579c8:	cmp	x28, #0x1
  4579cc:	b.eq	457a08 <_obstack_memory_used@@Base+0x3668>  // b.none
  4579d0:	cbz	x28, 4579e8 <_obstack_memory_used@@Base+0x3648>
  4579d4:	mov	x0, x3
  4579d8:	mov	x1, x21
  4579dc:	mov	x2, x28
  4579e0:	bl	402630 <memmove@plt>
  4579e4:	mov	x3, x0
  4579e8:	sub	x2, x20, x28
  4579ec:	add	x0, x3, x28
  4579f0:	cmp	x2, #0x1
  4579f4:	add	x1, x3, x20
  4579f8:	b.eq	457a14 <_obstack_memory_used@@Base+0x3674>  // b.none
  4579fc:	cbz	x2, 45788c <_obstack_memory_used@@Base+0x34ec>
  457a00:	bl	402620 <memcpy@plt>
  457a04:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  457a08:	ldrb	w0, [x21]
  457a0c:	strb	w0, [x23, x26]
  457a10:	b	4579e8 <_obstack_memory_used@@Base+0x3648>
  457a14:	ldrb	w0, [x3, x20]
  457a18:	strb	w0, [x3, x28]
  457a1c:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  457a20:	ldrb	w0, [x21, x25]
  457a24:	strb	w0, [x23, x26]
  457a28:	b	45788c <_obstack_memory_used@@Base+0x34ec>
  457a2c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457a30:	add	x0, x0, #0x478
  457a34:	bl	402f0c <ferror@plt+0x1dc>
  457a38:	mov	x4, x3
  457a3c:	ldp	x3, x6, [x1]
  457a40:	ldr	x1, [x0, #8]
  457a44:	cmp	x2, x6
  457a48:	b.hi	457a68 <_obstack_memory_used@@Base+0x36c8>  // b.pmore
  457a4c:	sub	x6, x6, x2
  457a50:	add	x3, x3, x2
  457a54:	cmp	x6, x4
  457a58:	mov	x2, x1
  457a5c:	csel	x4, x6, x4, ls  // ls = plast
  457a60:	mov	x1, #0x0                   	// #0
  457a64:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457a68:	stp	x29, x30, [sp, #-16]!
  457a6c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457a70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457a74:	mov	x29, sp
  457a78:	mov	x3, x6
  457a7c:	add	x1, x1, #0x498
  457a80:	add	x0, x0, #0x390
  457a84:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457a88:	mov	x4, x2
  457a8c:	mov	x3, x1
  457a90:	ldr	x2, [x0, #8]
  457a94:	mov	x1, #0x0                   	// #0
  457a98:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457a9c:	nop
  457aa0:	stp	x29, x30, [sp, #-32]!
  457aa4:	mov	x4, x2
  457aa8:	mov	x3, x1
  457aac:	mov	x29, sp
  457ab0:	ldr	x2, [x0, #8]
  457ab4:	mov	x1, #0x0                   	// #0
  457ab8:	str	x19, [sp, #16]
  457abc:	mov	x19, x0
  457ac0:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  457ac4:	mov	x0, x19
  457ac8:	ldr	x19, [sp, #16]
  457acc:	ldp	x29, x30, [sp], #32
  457ad0:	ret
  457ad4:	nop
  457ad8:	mov	x4, x2
  457adc:	mov	x3, x1
  457ae0:	ldr	x2, [x0, #8]
  457ae4:	mov	x1, #0x0                   	// #0
  457ae8:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457aec:	nop
  457af0:	stp	x29, x30, [sp, #-32]!
  457af4:	mov	x29, sp
  457af8:	stp	x19, x20, [sp, #16]
  457afc:	mov	x19, x0
  457b00:	mov	x20, x1
  457b04:	mov	x0, x1
  457b08:	bl	402680 <strlen@plt>
  457b0c:	mov	x3, x20
  457b10:	mov	x4, x0
  457b14:	mov	x0, x19
  457b18:	mov	x1, #0x0                   	// #0
  457b1c:	ldr	x2, [x19, #8]
  457b20:	ldp	x19, x20, [sp, #16]
  457b24:	ldp	x29, x30, [sp], #32
  457b28:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457b2c:	nop
  457b30:	ldr	x5, [x0, #8]
  457b34:	cmp	x1, x5
  457b38:	b.hi	457b4c <_obstack_memory_used@@Base+0x37ac>  // b.pmore
  457b3c:	sub	x5, x5, x1
  457b40:	cmp	x5, x2
  457b44:	csel	x2, x5, x2, ls  // ls = plast
  457b48:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457b4c:	stp	x29, x30, [sp, #-16]!
  457b50:	mov	x2, x1
  457b54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457b58:	mov	x29, sp
  457b5c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457b60:	mov	x3, x5
  457b64:	add	x1, x1, #0x460
  457b68:	add	x0, x0, #0x390
  457b6c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457b70:	stp	x29, x30, [sp, #-32]!
  457b74:	mov	x29, sp
  457b78:	stp	x19, x20, [sp, #16]
  457b7c:	mov	x19, x0
  457b80:	mov	x20, x1
  457b84:	mov	x0, x1
  457b88:	bl	402680 <strlen@plt>
  457b8c:	mov	x3, x20
  457b90:	mov	x4, x0
  457b94:	mov	x0, x19
  457b98:	mov	x1, #0x0                   	// #0
  457b9c:	ldr	x2, [x19, #8]
  457ba0:	ldp	x19, x20, [sp, #16]
  457ba4:	ldp	x29, x30, [sp], #32
  457ba8:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457bac:	nop
  457bb0:	ldr	x6, [x0, #8]
  457bb4:	cmp	x1, x6
  457bb8:	b.hi	457bcc <_obstack_memory_used@@Base+0x382c>  // b.pmore
  457bbc:	mov	x4, x3
  457bc0:	mov	x3, x2
  457bc4:	mov	x2, #0x0                   	// #0
  457bc8:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457bcc:	stp	x29, x30, [sp, #-16]!
  457bd0:	mov	x2, x1
  457bd4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457bd8:	mov	x29, sp
  457bdc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457be0:	mov	x3, x6
  457be4:	add	x1, x1, #0x460
  457be8:	add	x0, x0, #0x390
  457bec:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457bf0:	mov	x4, x3
  457bf4:	ldr	x5, [x0, #8]
  457bf8:	ldr	x3, [x3]
  457bfc:	cmp	x1, x5
  457c00:	ldr	x4, [x4, #8]
  457c04:	b.hi	457c18 <_obstack_memory_used@@Base+0x3878>  // b.pmore
  457c08:	sub	x5, x5, x1
  457c0c:	cmp	x5, x2
  457c10:	csel	x2, x5, x2, ls  // ls = plast
  457c14:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457c18:	stp	x29, x30, [sp, #-16]!
  457c1c:	mov	x2, x1
  457c20:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457c24:	mov	x29, sp
  457c28:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457c2c:	mov	x3, x5
  457c30:	add	x1, x1, #0x460
  457c34:	add	x0, x0, #0x390
  457c38:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457c3c:	nop
  457c40:	ldr	x6, [x0, #8]
  457c44:	ldp	x3, x4, [x2]
  457c48:	cmp	x1, x6
  457c4c:	b.hi	457c58 <_obstack_memory_used@@Base+0x38b8>  // b.pmore
  457c50:	mov	x2, #0x0                   	// #0
  457c54:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457c58:	stp	x29, x30, [sp, #-16]!
  457c5c:	mov	x2, x1
  457c60:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457c64:	mov	x29, sp
  457c68:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457c6c:	mov	x3, x6
  457c70:	add	x1, x1, #0x460
  457c74:	add	x0, x0, #0x390
  457c78:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457c7c:	nop
  457c80:	stp	x29, x30, [sp, #-48]!
  457c84:	mov	x29, sp
  457c88:	stp	x19, x20, [sp, #16]
  457c8c:	mov	x20, x0
  457c90:	mov	x19, x1
  457c94:	mov	x0, x3
  457c98:	stp	x21, x22, [sp, #32]
  457c9c:	mov	x21, x3
  457ca0:	mov	x22, x2
  457ca4:	bl	402680 <strlen@plt>
  457ca8:	ldr	x1, [x20, #8]
  457cac:	cmp	x19, x1
  457cb0:	b.hi	457ce0 <_obstack_memory_used@@Base+0x3940>  // b.pmore
  457cb4:	sub	x1, x1, x19
  457cb8:	mov	x4, x0
  457cbc:	cmp	x1, x22
  457cc0:	mov	x3, x21
  457cc4:	csel	x2, x1, x22, ls  // ls = plast
  457cc8:	mov	x0, x20
  457ccc:	mov	x1, x19
  457cd0:	ldp	x19, x20, [sp, #16]
  457cd4:	ldp	x21, x22, [sp, #32]
  457cd8:	ldp	x29, x30, [sp], #48
  457cdc:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457ce0:	mov	x3, x1
  457ce4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457ce8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457cec:	mov	x2, x19
  457cf0:	add	x1, x1, #0x460
  457cf4:	add	x0, x0, #0x390
  457cf8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457cfc:	nop
  457d00:	stp	x29, x30, [sp, #-48]!
  457d04:	mov	x29, sp
  457d08:	stp	x19, x20, [sp, #16]
  457d0c:	mov	x20, x0
  457d10:	mov	x19, x1
  457d14:	mov	x0, x2
  457d18:	str	x21, [sp, #32]
  457d1c:	mov	x21, x2
  457d20:	bl	402680 <strlen@plt>
  457d24:	ldr	x3, [x20, #8]
  457d28:	cmp	x19, x3
  457d2c:	b.hi	457d54 <_obstack_memory_used@@Base+0x39b4>  // b.pmore
  457d30:	mov	x4, x0
  457d34:	mov	x3, x21
  457d38:	mov	x1, x19
  457d3c:	mov	x0, x20
  457d40:	ldp	x19, x20, [sp, #16]
  457d44:	mov	x2, #0x0                   	// #0
  457d48:	ldr	x21, [sp, #32]
  457d4c:	ldp	x29, x30, [sp], #48
  457d50:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457d54:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457d58:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457d5c:	mov	x2, x19
  457d60:	add	x1, x1, #0x460
  457d64:	add	x0, x0, #0x390
  457d68:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457d6c:	nop
  457d70:	ldp	x6, x5, [x0]
  457d74:	sub	x2, x2, x1
  457d78:	sub	x1, x1, x6
  457d7c:	cmp	x1, x5
  457d80:	b.hi	457d94 <_obstack_memory_used@@Base+0x39f4>  // b.pmore
  457d84:	sub	x5, x5, x1
  457d88:	cmp	x5, x2
  457d8c:	csel	x2, x5, x2, ls  // ls = plast
  457d90:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457d94:	stp	x29, x30, [sp, #-16]!
  457d98:	mov	x2, x1
  457d9c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457da0:	mov	x29, sp
  457da4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457da8:	mov	x3, x5
  457dac:	add	x1, x1, #0x460
  457db0:	add	x0, x0, #0x390
  457db4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457db8:	ldp	x6, x5, [x0]
  457dbc:	sub	x2, x2, x1
  457dc0:	sub	x4, x4, x3
  457dc4:	sub	x1, x1, x6
  457dc8:	cmp	x1, x5
  457dcc:	b.hi	457de0 <_obstack_memory_used@@Base+0x3a40>  // b.pmore
  457dd0:	sub	x5, x5, x1
  457dd4:	cmp	x5, x2
  457dd8:	csel	x2, x5, x2, ls  // ls = plast
  457ddc:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457de0:	stp	x29, x30, [sp, #-16]!
  457de4:	mov	x2, x1
  457de8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457dec:	mov	x29, sp
  457df0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457df4:	mov	x3, x5
  457df8:	add	x1, x1, #0x460
  457dfc:	add	x0, x0, #0x390
  457e00:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457e04:	nop
  457e08:	ldp	x6, x5, [x0]
  457e0c:	sub	x2, x2, x1
  457e10:	sub	x4, x4, x3
  457e14:	sub	x1, x1, x6
  457e18:	cmp	x1, x5
  457e1c:	b.hi	457e30 <_obstack_memory_used@@Base+0x3a90>  // b.pmore
  457e20:	sub	x5, x5, x1
  457e24:	cmp	x5, x2
  457e28:	csel	x2, x5, x2, ls  // ls = plast
  457e2c:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457e30:	stp	x29, x30, [sp, #-16]!
  457e34:	mov	x2, x1
  457e38:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457e3c:	mov	x29, sp
  457e40:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457e44:	mov	x3, x5
  457e48:	add	x1, x1, #0x460
  457e4c:	add	x0, x0, #0x390
  457e50:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457e54:	nop
  457e58:	mov	x4, x3
  457e5c:	sub	x2, x2, x1
  457e60:	ldp	x3, x5, [x0]
  457e64:	sub	x1, x1, x3
  457e68:	cmp	x1, x5
  457e6c:	ldp	x3, x4, [x4]
  457e70:	b.hi	457e84 <_obstack_memory_used@@Base+0x3ae4>  // b.pmore
  457e74:	sub	x5, x5, x1
  457e78:	cmp	x5, x2
  457e7c:	csel	x2, x5, x2, ls  // ls = plast
  457e80:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457e84:	stp	x29, x30, [sp, #-16]!
  457e88:	mov	x2, x1
  457e8c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457e90:	mov	x29, sp
  457e94:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457e98:	mov	x3, x5
  457e9c:	add	x1, x1, #0x460
  457ea0:	add	x0, x0, #0x390
  457ea4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457ea8:	ldp	x6, x5, [x0]
  457eac:	sub	x2, x2, x1
  457eb0:	sub	x1, x1, x6
  457eb4:	cmp	x1, x5
  457eb8:	b.hi	457ecc <_obstack_memory_used@@Base+0x3b2c>  // b.pmore
  457ebc:	sub	x5, x5, x1
  457ec0:	cmp	x5, x2
  457ec4:	csel	x2, x5, x2, ls  // ls = plast
  457ec8:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457ecc:	stp	x29, x30, [sp, #-16]!
  457ed0:	mov	x2, x1
  457ed4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457ed8:	mov	x29, sp
  457edc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457ee0:	mov	x3, x5
  457ee4:	add	x1, x1, #0x460
  457ee8:	add	x0, x0, #0x390
  457eec:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457ef0:	ldp	x6, x5, [x0]
  457ef4:	sub	x2, x2, x1
  457ef8:	sub	x4, x4, x3
  457efc:	sub	x1, x1, x6
  457f00:	cmp	x1, x5
  457f04:	b.hi	457f18 <_obstack_memory_used@@Base+0x3b78>  // b.pmore
  457f08:	sub	x5, x5, x1
  457f0c:	cmp	x5, x2
  457f10:	csel	x2, x5, x2, ls  // ls = plast
  457f14:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457f18:	stp	x29, x30, [sp, #-16]!
  457f1c:	mov	x2, x1
  457f20:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457f24:	mov	x29, sp
  457f28:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457f2c:	mov	x3, x5
  457f30:	add	x1, x1, #0x460
  457f34:	add	x0, x0, #0x390
  457f38:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457f3c:	nop
  457f40:	ldp	x6, x5, [x0]
  457f44:	sub	x2, x2, x1
  457f48:	sub	x4, x4, x3
  457f4c:	sub	x1, x1, x6
  457f50:	cmp	x1, x5
  457f54:	b.hi	457f68 <_obstack_memory_used@@Base+0x3bc8>  // b.pmore
  457f58:	sub	x5, x5, x1
  457f5c:	cmp	x5, x2
  457f60:	csel	x2, x5, x2, ls  // ls = plast
  457f64:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457f68:	stp	x29, x30, [sp, #-16]!
  457f6c:	mov	x2, x1
  457f70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457f74:	mov	x29, sp
  457f78:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457f7c:	mov	x3, x5
  457f80:	add	x1, x1, #0x460
  457f84:	add	x0, x0, #0x390
  457f88:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  457f8c:	nop
  457f90:	stp	x29, x30, [sp, #-48]!
  457f94:	mov	x29, sp
  457f98:	stp	x21, x22, [sp, #32]
  457f9c:	mov	x21, x0
  457fa0:	mov	x22, x3
  457fa4:	mov	x0, x3
  457fa8:	stp	x19, x20, [sp, #16]
  457fac:	mov	x19, x1
  457fb0:	mov	x20, x2
  457fb4:	bl	402680 <strlen@plt>
  457fb8:	ldp	x1, x5, [x21]
  457fbc:	sub	x20, x20, x19
  457fc0:	sub	x1, x19, x1
  457fc4:	cmp	x1, x5
  457fc8:	b.hi	457ff4 <_obstack_memory_used@@Base+0x3c54>  // b.pmore
  457fcc:	sub	x5, x5, x1
  457fd0:	mov	x4, x0
  457fd4:	cmp	x5, x20
  457fd8:	mov	x3, x22
  457fdc:	csel	x2, x5, x20, ls  // ls = plast
  457fe0:	mov	x0, x21
  457fe4:	ldp	x19, x20, [sp, #16]
  457fe8:	ldp	x21, x22, [sp, #32]
  457fec:	ldp	x29, x30, [sp], #48
  457ff0:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  457ff4:	mov	x2, x1
  457ff8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  457ffc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458000:	mov	x3, x5
  458004:	add	x1, x1, #0x460
  458008:	add	x0, x0, #0x390
  45800c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458010:	mov	x4, x3
  458014:	ldp	x6, x3, [x0]
  458018:	sub	x1, x1, x6
  45801c:	cmp	x1, x3
  458020:	b.hi	458030 <_obstack_memory_used@@Base+0x3c90>  // b.pmore
  458024:	mov	x3, x2
  458028:	mov	x2, #0x0                   	// #0
  45802c:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  458030:	stp	x29, x30, [sp, #-16]!
  458034:	mov	x2, x1
  458038:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45803c:	mov	x29, sp
  458040:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458044:	add	x0, x0, #0x390
  458048:	add	x1, x1, #0x460
  45804c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458050:	stp	x29, x30, [sp, #-16]!
  458054:	mov	x29, sp
  458058:	ldr	x6, [x3, #8]
  45805c:	ldr	x3, [x3]
  458060:	cmp	x4, x6
  458064:	b.hi	458098 <_obstack_memory_used@@Base+0x3cf8>  // b.pmore
  458068:	ldr	x7, [x0, #8]
  45806c:	sub	x6, x6, x4
  458070:	cmp	x6, x5
  458074:	add	x3, x3, x4
  458078:	csel	x4, x6, x5, ls  // ls = plast
  45807c:	cmp	x1, x7
  458080:	b.hi	4580b4 <_obstack_memory_used@@Base+0x3d14>  // b.pmore
  458084:	ldp	x29, x30, [sp], #16
  458088:	sub	x7, x7, x1
  45808c:	cmp	x7, x2
  458090:	csel	x2, x7, x2, ls  // ls = plast
  458094:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  458098:	mov	x3, x6
  45809c:	mov	x2, x4
  4580a0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4580a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4580a8:	add	x1, x1, #0x460
  4580ac:	add	x0, x0, #0x390
  4580b0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4580b4:	mov	x3, x7
  4580b8:	mov	x2, x1
  4580bc:	b	4580a0 <_obstack_memory_used@@Base+0x3d00>
  4580c0:	stp	x29, x30, [sp, #-16]!
  4580c4:	mov	x6, x3
  4580c8:	mov	x29, sp
  4580cc:	ldr	x5, [x2, #8]
  4580d0:	cmp	x3, x5
  4580d4:	ldr	x3, [x2]
  4580d8:	b.hi	458104 <_obstack_memory_used@@Base+0x3d64>  // b.pmore
  4580dc:	ldr	x2, [x0, #8]
  4580e0:	sub	x5, x5, x6
  4580e4:	cmp	x5, x4
  4580e8:	add	x3, x3, x6
  4580ec:	csel	x4, x5, x4, ls  // ls = plast
  4580f0:	cmp	x1, x2
  4580f4:	b.hi	458120 <_obstack_memory_used@@Base+0x3d80>  // b.pmore
  4580f8:	ldp	x29, x30, [sp], #16
  4580fc:	mov	x2, #0x0                   	// #0
  458100:	b	4577c0 <_obstack_memory_used@@Base+0x3420>
  458104:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458108:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45810c:	mov	x3, x5
  458110:	mov	x2, x6
  458114:	add	x1, x1, #0x448
  458118:	add	x0, x0, #0x390
  45811c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458120:	mov	x3, x2
  458124:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458128:	mov	x2, x1
  45812c:	add	x0, x0, #0x390
  458130:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458134:	add	x1, x1, #0x460
  458138:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45813c:	nop
  458140:	stp	x29, x30, [sp, #-32]!
  458144:	mov	x4, x3
  458148:	mov	x29, sp
  45814c:	stp	x19, x20, [sp, #16]
  458150:	ldp	x19, x3, [x0]
  458154:	sub	x19, x1, x19
  458158:	cmp	x19, x3
  45815c:	b.hi	458188 <_obstack_memory_used@@Base+0x3de8>  // b.pmore
  458160:	mov	x20, x0
  458164:	mov	x3, x2
  458168:	mov	x1, x19
  45816c:	mov	x2, #0x0                   	// #0
  458170:	bl	4577c0 <_obstack_memory_used@@Base+0x3420>
  458174:	ldr	x0, [x20]
  458178:	add	x0, x0, x19
  45817c:	ldp	x19, x20, [sp, #16]
  458180:	ldp	x29, x30, [sp], #32
  458184:	ret
  458188:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45818c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458190:	mov	x2, x19
  458194:	add	x1, x1, #0x460
  458198:	add	x0, x0, #0x390
  45819c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4581a0:	stp	x29, x30, [sp, #-32]!
  4581a4:	mov	x29, sp
  4581a8:	stp	x19, x20, [sp, #16]
  4581ac:	mov	x19, x0
  4581b0:	ldr	x5, [x0, #8]
  4581b4:	ldr	x4, [x0], #16
  4581b8:	add	x20, x5, x2
  4581bc:	cmp	x4, x0
  4581c0:	b.eq	458234 <_obstack_memory_used@@Base+0x3e94>  // b.none
  4581c4:	ldr	x0, [x19, #16]
  4581c8:	cmp	x20, x0
  4581cc:	b.hi	458200 <_obstack_memory_used@@Base+0x3e60>  // b.pmore
  4581d0:	cbz	x2, 4581e8 <_obstack_memory_used@@Base+0x3e48>
  4581d4:	cmp	x2, #0x1
  4581d8:	add	x0, x4, x5
  4581dc:	b.eq	45823c <_obstack_memory_used@@Base+0x3e9c>  // b.none
  4581e0:	bl	402620 <memcpy@plt>
  4581e4:	ldr	x4, [x19]
  4581e8:	str	x20, [x19, #8]
  4581ec:	strb	wzr, [x4, x20]
  4581f0:	mov	x0, x19
  4581f4:	ldp	x19, x20, [sp, #16]
  4581f8:	ldp	x29, x30, [sp], #32
  4581fc:	ret
  458200:	mov	x4, x2
  458204:	mov	x3, x1
  458208:	mov	x0, x19
  45820c:	mov	x1, x5
  458210:	mov	x2, #0x0                   	// #0
  458214:	bl	456a40 <_obstack_memory_used@@Base+0x26a0>
  458218:	ldr	x4, [x19]
  45821c:	str	x20, [x19, #8]
  458220:	mov	x0, x19
  458224:	strb	wzr, [x4, x20]
  458228:	ldp	x19, x20, [sp, #16]
  45822c:	ldp	x29, x30, [sp], #32
  458230:	ret
  458234:	mov	x0, #0xf                   	// #15
  458238:	b	4581c8 <_obstack_memory_used@@Base+0x3e28>
  45823c:	ldrb	w0, [x1]
  458240:	strb	w0, [x4, x5]
  458244:	mov	x0, x19
  458248:	str	x20, [x19, #8]
  45824c:	ldr	x4, [x19]
  458250:	strb	wzr, [x4, x20]
  458254:	ldp	x19, x20, [sp, #16]
  458258:	ldp	x29, x30, [sp], #32
  45825c:	ret
  458260:	ldp	x1, x2, [x1]
  458264:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458268:	ldp	x1, x2, [x1]
  45826c:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458270:	ldr	x5, [x1, #8]
  458274:	ldr	x1, [x1]
  458278:	cmp	x2, x5
  45827c:	b.hi	458298 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  458280:	mov	x4, x2
  458284:	sub	x2, x5, x2
  458288:	cmp	x2, x3
  45828c:	add	x1, x1, x4
  458290:	csel	x2, x2, x3, ls  // ls = plast
  458294:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458298:	stp	x29, x30, [sp, #-16]!
  45829c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4582a0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4582a4:	mov	x29, sp
  4582a8:	mov	x3, x5
  4582ac:	add	x1, x1, #0x18
  4582b0:	add	x0, x0, #0x390
  4582b4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4582b8:	ldr	x4, [x0, #8]
  4582bc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  4582c0:	sub	x3, x3, x4
  4582c4:	cmp	x2, x3
  4582c8:	b.hi	4582d0 <_obstack_memory_used@@Base+0x3f30>  // b.pmore
  4582cc:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  4582d0:	stp	x29, x30, [sp, #-16]!
  4582d4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4582d8:	add	x0, x0, #0x18
  4582dc:	mov	x29, sp
  4582e0:	bl	402f0c <ferror@plt+0x1dc>
  4582e4:	nop
  4582e8:	stp	x29, x30, [sp, #-32]!
  4582ec:	mov	x29, sp
  4582f0:	stp	x19, x20, [sp, #16]
  4582f4:	mov	x19, x0
  4582f8:	mov	x20, x1
  4582fc:	mov	x0, x1
  458300:	bl	402680 <strlen@plt>
  458304:	ldr	x3, [x19, #8]
  458308:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  45830c:	sub	x1, x1, x3
  458310:	cmp	x1, x0
  458314:	b.cc	458330 <_obstack_memory_used@@Base+0x3f90>  // b.lo, b.ul, b.last
  458318:	mov	x2, x0
  45831c:	mov	x1, x20
  458320:	mov	x0, x19
  458324:	ldp	x19, x20, [sp, #16]
  458328:	ldp	x29, x30, [sp], #32
  45832c:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458330:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  458334:	add	x0, x0, #0x18
  458338:	bl	402f0c <ferror@plt+0x1dc>
  45833c:	nop
  458340:	stp	x29, x30, [sp, #-32]!
  458344:	mov	x29, sp
  458348:	stp	x19, x20, [sp, #16]
  45834c:	mov	x19, x0
  458350:	mov	x20, x1
  458354:	mov	x0, x1
  458358:	bl	402680 <strlen@plt>
  45835c:	ldr	x3, [x19, #8]
  458360:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  458364:	sub	x1, x1, x3
  458368:	cmp	x0, x1
  45836c:	b.hi	458388 <_obstack_memory_used@@Base+0x3fe8>  // b.pmore
  458370:	mov	x2, x0
  458374:	mov	x1, x20
  458378:	mov	x0, x19
  45837c:	ldp	x19, x20, [sp, #16]
  458380:	ldp	x29, x30, [sp], #32
  458384:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458388:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45838c:	add	x0, x0, #0x18
  458390:	bl	402f0c <ferror@plt+0x1dc>
  458394:	nop
  458398:	ldr	x4, [x0, #8]
  45839c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  4583a0:	sub	x3, x3, x4
  4583a4:	cmp	x2, x3
  4583a8:	b.hi	4583b0 <_obstack_memory_used@@Base+0x4010>  // b.pmore
  4583ac:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  4583b0:	stp	x29, x30, [sp, #-16]!
  4583b4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4583b8:	add	x0, x0, #0x18
  4583bc:	mov	x29, sp
  4583c0:	bl	402f0c <ferror@plt+0x1dc>
  4583c4:	nop
  4583c8:	ldr	x4, [x0, #8]
  4583cc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  4583d0:	sub	x3, x3, x4
  4583d4:	cmp	x2, x3
  4583d8:	b.hi	4583e0 <_obstack_memory_used@@Base+0x4040>  // b.pmore
  4583dc:	b	4581a0 <_obstack_memory_used@@Base+0x3e00>
  4583e0:	stp	x29, x30, [sp, #-16]!
  4583e4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4583e8:	add	x0, x0, #0x18
  4583ec:	mov	x29, sp
  4583f0:	bl	402f0c <ferror@plt+0x1dc>
  4583f4:	nop
  4583f8:	stp	x29, x30, [sp, #-32]!
  4583fc:	mov	x6, x0
  458400:	mov	x5, x3
  458404:	mov	x29, sp
  458408:	ldr	x4, [x0, #8]
  45840c:	str	x19, [sp, #16]
  458410:	cmp	x3, x4
  458414:	b.hi	45846c <_obstack_memory_used@@Base+0x40cc>  // b.pmore
  458418:	sub	x4, x4, x3
  45841c:	cmp	x4, x2
  458420:	csel	x19, x4, x2, ls  // ls = plast
  458424:	cbz	x19, 458444 <_obstack_memory_used@@Base+0x40a4>
  458428:	ldr	x2, [x6]
  45842c:	mov	x0, x1
  458430:	cmp	x19, #0x1
  458434:	add	x1, x2, x3
  458438:	b.eq	458454 <_obstack_memory_used@@Base+0x40b4>  // b.none
  45843c:	mov	x2, x19
  458440:	bl	402620 <memcpy@plt>
  458444:	mov	x0, x19
  458448:	ldr	x19, [sp, #16]
  45844c:	ldp	x29, x30, [sp], #32
  458450:	ret
  458454:	ldrb	w1, [x2, x3]
  458458:	strb	w1, [x0]
  45845c:	mov	x0, x19
  458460:	ldr	x19, [sp, #16]
  458464:	ldp	x29, x30, [sp], #32
  458468:	ret
  45846c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458470:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458474:	mov	x3, x4
  458478:	mov	x2, x5
  45847c:	add	x1, x1, #0x4b0
  458480:	add	x0, x0, #0x390
  458484:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458488:	cmp	x0, x1
  45848c:	b.eq	4584d8 <_obstack_memory_used@@Base+0x4138>  // b.none
  458490:	mov	x2, x0
  458494:	mov	x3, x1
  458498:	ldr	x4, [x2], #16
  45849c:	ldr	x5, [x3], #16
  4584a0:	cmp	x2, x4
  4584a4:	b.eq	4584dc <_obstack_memory_used@@Base+0x413c>  // b.none
  4584a8:	cmp	x3, x5
  4584ac:	ldr	x3, [x0, #16]
  4584b0:	b.eq	458508 <_obstack_memory_used@@Base+0x4168>  // b.none
  4584b4:	str	x5, [x0]
  4584b8:	str	x4, [x1]
  4584bc:	ldr	x2, [x1, #16]
  4584c0:	str	x2, [x0, #16]
  4584c4:	str	x3, [x1, #16]
  4584c8:	ldr	x2, [x1, #8]
  4584cc:	ldr	x3, [x0, #8]
  4584d0:	str	x2, [x0, #8]
  4584d4:	str	x3, [x1, #8]
  4584d8:	ret
  4584dc:	cmp	x3, x5
  4584e0:	b.eq	45851c <_obstack_memory_used@@Base+0x417c>  // b.none
  4584e4:	ldp	x6, x7, [x0, #16]
  4584e8:	ldr	x2, [x1, #16]
  4584ec:	stp	x6, x7, [x1, #16]
  4584f0:	str	x5, [x0]
  4584f4:	str	x3, [x1]
  4584f8:	str	x2, [x0, #16]
  4584fc:	ldr	x3, [x0, #8]
  458500:	ldr	x2, [x1, #8]
  458504:	b	4584d0 <_obstack_memory_used@@Base+0x4130>
  458508:	ldp	x6, x7, [x1, #16]
  45850c:	stp	x6, x7, [x0, #16]
  458510:	str	x4, [x1]
  458514:	str	x2, [x0]
  458518:	b	4584c4 <_obstack_memory_used@@Base+0x4124>
  45851c:	ldr	x3, [x0, #8]
  458520:	ldr	x2, [x1, #8]
  458524:	cbz	x3, 458548 <_obstack_memory_used@@Base+0x41a8>
  458528:	ldp	x4, x5, [x0, #16]
  45852c:	cbz	x2, 45856c <_obstack_memory_used@@Base+0x41cc>
  458530:	ldp	x2, x3, [x1, #16]
  458534:	stp	x4, x5, [x1, #16]
  458538:	stp	x2, x3, [x0, #16]
  45853c:	ldr	x3, [x0, #8]
  458540:	ldr	x2, [x1, #8]
  458544:	b	4584d0 <_obstack_memory_used@@Base+0x4130>
  458548:	mov	x3, #0x0                   	// #0
  45854c:	cbz	x2, 4584d0 <_obstack_memory_used@@Base+0x4130>
  458550:	ldp	x2, x3, [x1, #16]
  458554:	stp	x2, x3, [x0, #16]
  458558:	ldp	x2, x3, [x1]
  45855c:	str	x3, [x0, #8]
  458560:	str	xzr, [x1, #8]
  458564:	strb	wzr, [x2]
  458568:	ret
  45856c:	stp	x4, x5, [x1, #16]
  458570:	ldp	x2, x3, [x0]
  458574:	str	x3, [x1, #8]
  458578:	str	xzr, [x0, #8]
  45857c:	strb	wzr, [x2]
  458580:	ret
  458584:	nop
  458588:	ldr	x0, [x0]
  45858c:	ret
  458590:	ldr	x0, [x0]
  458594:	ret
  458598:	mov	x0, x8
  45859c:	ret
  4585a0:	stp	x29, x30, [sp, #-80]!
  4585a4:	mov	x29, sp
  4585a8:	stp	x21, x22, [sp, #32]
  4585ac:	ldr	x21, [x0, #8]
  4585b0:	stp	x19, x20, [sp, #16]
  4585b4:	cmp	x21, x2
  4585b8:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  4585bc:	cbz	x3, 45864c <_obstack_memory_used@@Base+0x42ac>
  4585c0:	mov	x19, #0xffffffffffffffff    	// #-1
  4585c4:	b.ls	45864c <_obstack_memory_used@@Base+0x42ac>  // b.plast
  4585c8:	stp	x23, x24, [sp, #48]
  4585cc:	sub	x4, x21, x2
  4585d0:	cmp	x3, x4
  4585d4:	ldr	x23, [x0]
  4585d8:	str	x25, [sp, #64]
  4585dc:	mov	x25, x3
  4585e0:	add	x0, x23, x2
  4585e4:	add	x21, x23, x21
  4585e8:	b.hi	458660 <_obstack_memory_used@@Base+0x42c0>  // b.pmore
  4585ec:	mov	x20, #0x1                   	// #1
  4585f0:	sub	x20, x20, x3
  4585f4:	adds	x2, x20, x4
  4585f8:	b.eq	458660 <_obstack_memory_used@@Base+0x42c0>  // b.none
  4585fc:	ldrb	w24, [x1]
  458600:	mov	x22, x1
  458604:	mov	w1, w24
  458608:	bl	402b80 <memchr@plt>
  45860c:	mov	x2, x25
  458610:	mov	x19, x0
  458614:	cbz	x0, 458640 <_obstack_memory_used@@Base+0x42a0>
  458618:	mov	x1, x22
  45861c:	bl	4029e0 <memcmp@plt>
  458620:	mov	w1, w0
  458624:	add	x0, x19, #0x1
  458628:	sub	x2, x21, x0
  45862c:	cbz	w1, 45867c <_obstack_memory_used@@Base+0x42dc>
  458630:	cmp	x25, x2
  458634:	b.hi	458640 <_obstack_memory_used@@Base+0x42a0>  // b.pmore
  458638:	adds	x2, x20, x2
  45863c:	b.ne	458604 <_obstack_memory_used@@Base+0x4264>  // b.any
  458640:	ldp	x23, x24, [sp, #48]
  458644:	mov	x19, #0xffffffffffffffff    	// #-1
  458648:	ldr	x25, [sp, #64]
  45864c:	mov	x0, x19
  458650:	ldp	x19, x20, [sp, #16]
  458654:	ldp	x21, x22, [sp, #32]
  458658:	ldp	x29, x30, [sp], #80
  45865c:	ret
  458660:	mov	x0, x19
  458664:	ldp	x19, x20, [sp, #16]
  458668:	ldp	x21, x22, [sp, #32]
  45866c:	ldp	x23, x24, [sp, #48]
  458670:	ldr	x25, [sp, #64]
  458674:	ldp	x29, x30, [sp], #80
  458678:	ret
  45867c:	sub	x19, x19, x23
  458680:	ldp	x23, x24, [sp, #48]
  458684:	ldr	x25, [sp, #64]
  458688:	b	45864c <_obstack_memory_used@@Base+0x42ac>
  45868c:	nop
  458690:	ldp	x1, x3, [x1]
  458694:	b	4585a0 <_obstack_memory_used@@Base+0x4200>
  458698:	stp	x29, x30, [sp, #-48]!
  45869c:	mov	x29, sp
  4586a0:	stp	x19, x20, [sp, #16]
  4586a4:	mov	x19, x1
  4586a8:	mov	x20, x0
  4586ac:	mov	x0, x1
  4586b0:	str	x21, [sp, #32]
  4586b4:	mov	x21, x2
  4586b8:	bl	402680 <strlen@plt>
  4586bc:	mov	x2, x21
  4586c0:	mov	x3, x0
  4586c4:	mov	x1, x19
  4586c8:	mov	x0, x20
  4586cc:	ldp	x19, x20, [sp, #16]
  4586d0:	ldr	x21, [sp, #32]
  4586d4:	ldp	x29, x30, [sp], #48
  4586d8:	b	4585a0 <_obstack_memory_used@@Base+0x4200>
  4586dc:	nop
  4586e0:	mov	x3, x2
  4586e4:	ldr	x2, [x0, #8]
  4586e8:	cmp	x3, x2
  4586ec:	b.cs	458728 <_obstack_memory_used@@Base+0x4388>  // b.hs, b.nlast
  4586f0:	stp	x29, x30, [sp, #-32]!
  4586f4:	and	w1, w1, #0xff
  4586f8:	sub	x2, x2, x3
  4586fc:	mov	x29, sp
  458700:	str	x19, [sp, #16]
  458704:	ldr	x19, [x0]
  458708:	add	x0, x19, x3
  45870c:	bl	402b80 <memchr@plt>
  458710:	sub	x19, x0, x19
  458714:	cmp	x0, #0x0
  458718:	csinv	x0, x19, xzr, ne  // ne = any
  45871c:	ldr	x19, [sp, #16]
  458720:	ldp	x29, x30, [sp], #32
  458724:	ret
  458728:	mov	x0, #0xffffffffffffffff    	// #-1
  45872c:	ret
  458730:	stp	x29, x30, [sp, #-48]!
  458734:	mov	x29, sp
  458738:	ldr	x4, [x0, #8]
  45873c:	stp	x19, x20, [sp, #16]
  458740:	mov	x19, #0xffffffffffffffff    	// #-1
  458744:	cmp	x3, x4
  458748:	b.hi	458794 <_obstack_memory_used@@Base+0x43f4>  // b.pmore
  45874c:	sub	x4, x4, x3
  458750:	stp	x21, x22, [sp, #32]
  458754:	cmp	x4, x2
  458758:	mov	x20, x3
  45875c:	mov	x21, x1
  458760:	csel	x19, x4, x2, ls  // ls = plast
  458764:	ldr	x22, [x0]
  458768:	cbz	x20, 458790 <_obstack_memory_used@@Base+0x43f0>
  45876c:	mov	x2, x20
  458770:	mov	x1, x21
  458774:	add	x0, x22, x19
  458778:	bl	4029e0 <memcmp@plt>
  45877c:	cbz	w0, 458790 <_obstack_memory_used@@Base+0x43f0>
  458780:	sub	x0, x19, #0x1
  458784:	cbz	x19, 4587a4 <_obstack_memory_used@@Base+0x4404>
  458788:	mov	x19, x0
  45878c:	cbnz	x20, 45876c <_obstack_memory_used@@Base+0x43cc>
  458790:	ldp	x21, x22, [sp, #32]
  458794:	mov	x0, x19
  458798:	ldp	x19, x20, [sp, #16]
  45879c:	ldp	x29, x30, [sp], #48
  4587a0:	ret
  4587a4:	mov	x19, #0xffffffffffffffff    	// #-1
  4587a8:	ldp	x21, x22, [sp, #32]
  4587ac:	b	458794 <_obstack_memory_used@@Base+0x43f4>
  4587b0:	ldp	x1, x3, [x1]
  4587b4:	b	458730 <_obstack_memory_used@@Base+0x4390>
  4587b8:	stp	x29, x30, [sp, #-48]!
  4587bc:	mov	x29, sp
  4587c0:	stp	x19, x20, [sp, #16]
  4587c4:	mov	x19, x1
  4587c8:	mov	x20, x0
  4587cc:	mov	x0, x1
  4587d0:	str	x21, [sp, #32]
  4587d4:	mov	x21, x2
  4587d8:	bl	402680 <strlen@plt>
  4587dc:	mov	x2, x21
  4587e0:	mov	x3, x0
  4587e4:	mov	x1, x19
  4587e8:	mov	x0, x20
  4587ec:	ldp	x19, x20, [sp, #16]
  4587f0:	ldr	x21, [sp, #32]
  4587f4:	ldp	x29, x30, [sp], #48
  4587f8:	b	458730 <_obstack_memory_used@@Base+0x4390>
  4587fc:	nop
  458800:	ldr	x3, [x0, #8]
  458804:	mov	x4, x0
  458808:	and	w1, w1, #0xff
  45880c:	mov	x0, #0xffffffffffffffff    	// #-1
  458810:	cbz	x3, 458840 <_obstack_memory_used@@Base+0x44a0>
  458814:	sub	x3, x3, #0x1
  458818:	cmp	x3, x2
  45881c:	csel	x0, x3, x2, ls  // ls = plast
  458820:	ldr	x3, [x4]
  458824:	nop
  458828:	ldrb	w2, [x3, x0]
  45882c:	cmp	w2, w1
  458830:	b.eq	458840 <_obstack_memory_used@@Base+0x44a0>  // b.none
  458834:	sub	x0, x0, #0x1
  458838:	cmn	x0, #0x1
  45883c:	b.ne	458828 <_obstack_memory_used@@Base+0x4488>  // b.any
  458840:	ret
  458844:	nop
  458848:	cbz	x3, 4588cc <_obstack_memory_used@@Base+0x452c>
  45884c:	stp	x29, x30, [sp, #-64]!
  458850:	mov	x29, sp
  458854:	stp	x19, x20, [sp, #16]
  458858:	mov	x19, x2
  45885c:	mov	x20, x3
  458860:	stp	x21, x22, [sp, #32]
  458864:	mov	x21, x0
  458868:	mov	x22, x1
  45886c:	str	x23, [sp, #48]
  458870:	ldr	x23, [x0, #8]
  458874:	b	458894 <_obstack_memory_used@@Base+0x44f4>
  458878:	ldr	x4, [x21]
  45887c:	mov	x2, x20
  458880:	mov	x0, x22
  458884:	ldrb	w1, [x4, x19]
  458888:	bl	402b80 <memchr@plt>
  45888c:	cbnz	x0, 4588b4 <_obstack_memory_used@@Base+0x4514>
  458890:	add	x19, x19, #0x1
  458894:	cmp	x23, x19
  458898:	b.hi	458878 <_obstack_memory_used@@Base+0x44d8>  // b.pmore
  45889c:	mov	x0, #0xffffffffffffffff    	// #-1
  4588a0:	ldp	x19, x20, [sp, #16]
  4588a4:	ldp	x21, x22, [sp, #32]
  4588a8:	ldr	x23, [sp, #48]
  4588ac:	ldp	x29, x30, [sp], #64
  4588b0:	ret
  4588b4:	mov	x0, x19
  4588b8:	ldp	x19, x20, [sp, #16]
  4588bc:	ldp	x21, x22, [sp, #32]
  4588c0:	ldr	x23, [sp, #48]
  4588c4:	ldp	x29, x30, [sp], #64
  4588c8:	ret
  4588cc:	mov	x0, #0xffffffffffffffff    	// #-1
  4588d0:	ret
  4588d4:	nop
  4588d8:	ldp	x1, x3, [x1]
  4588dc:	b	458848 <_obstack_memory_used@@Base+0x44a8>
  4588e0:	stp	x29, x30, [sp, #-48]!
  4588e4:	mov	x29, sp
  4588e8:	stp	x19, x20, [sp, #16]
  4588ec:	mov	x19, x1
  4588f0:	mov	x20, x0
  4588f4:	mov	x0, x1
  4588f8:	str	x21, [sp, #32]
  4588fc:	mov	x21, x2
  458900:	bl	402680 <strlen@plt>
  458904:	mov	x2, x21
  458908:	mov	x3, x0
  45890c:	mov	x1, x19
  458910:	mov	x0, x20
  458914:	ldp	x19, x20, [sp, #16]
  458918:	ldr	x21, [sp, #32]
  45891c:	ldp	x29, x30, [sp], #48
  458920:	b	458848 <_obstack_memory_used@@Base+0x44a8>
  458924:	nop
  458928:	b	4586e0 <_obstack_memory_used@@Base+0x4340>
  45892c:	nop
  458930:	stp	x29, x30, [sp, #-48]!
  458934:	mov	x29, sp
  458938:	ldr	x4, [x0, #8]
  45893c:	stp	x19, x20, [sp, #16]
  458940:	mov	x19, #0xffffffffffffffff    	// #-1
  458944:	cmp	x4, #0x0
  458948:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  45894c:	b.eq	458994 <_obstack_memory_used@@Base+0x45f4>  // b.none
  458950:	sub	x4, x4, #0x1
  458954:	mov	x20, x3
  458958:	cmp	x4, x2
  45895c:	stp	x21, x22, [sp, #32]
  458960:	csel	x19, x4, x2, ls  // ls = plast
  458964:	mov	x21, x1
  458968:	ldr	x22, [x0]
  45896c:	b	45897c <_obstack_memory_used@@Base+0x45dc>
  458970:	sub	x19, x19, #0x1
  458974:	cmn	x19, #0x1
  458978:	b.eq	458990 <_obstack_memory_used@@Base+0x45f0>  // b.none
  45897c:	ldrb	w1, [x22, x19]
  458980:	mov	x2, x20
  458984:	mov	x0, x21
  458988:	bl	402b80 <memchr@plt>
  45898c:	cbz	x0, 458970 <_obstack_memory_used@@Base+0x45d0>
  458990:	ldp	x21, x22, [sp, #32]
  458994:	mov	x0, x19
  458998:	ldp	x19, x20, [sp, #16]
  45899c:	ldp	x29, x30, [sp], #48
  4589a0:	ret
  4589a4:	nop
  4589a8:	ldp	x1, x3, [x1]
  4589ac:	b	458930 <_obstack_memory_used@@Base+0x4590>
  4589b0:	stp	x29, x30, [sp, #-48]!
  4589b4:	mov	x29, sp
  4589b8:	stp	x19, x20, [sp, #16]
  4589bc:	mov	x19, x1
  4589c0:	mov	x20, x0
  4589c4:	mov	x0, x1
  4589c8:	str	x21, [sp, #32]
  4589cc:	mov	x21, x2
  4589d0:	bl	402680 <strlen@plt>
  4589d4:	mov	x2, x21
  4589d8:	mov	x3, x0
  4589dc:	mov	x1, x19
  4589e0:	mov	x0, x20
  4589e4:	ldp	x19, x20, [sp, #16]
  4589e8:	ldr	x21, [sp, #32]
  4589ec:	ldp	x29, x30, [sp], #48
  4589f0:	b	458930 <_obstack_memory_used@@Base+0x4590>
  4589f4:	nop
  4589f8:	b	458800 <_obstack_memory_used@@Base+0x4460>
  4589fc:	nop
  458a00:	stp	x29, x30, [sp, #-64]!
  458a04:	mov	x29, sp
  458a08:	stp	x21, x22, [sp, #32]
  458a0c:	ldr	x22, [x0, #8]
  458a10:	cmp	x2, x22
  458a14:	b.cs	458a88 <_obstack_memory_used@@Base+0x46e8>  // b.hs, b.nlast
  458a18:	stp	x19, x20, [sp, #16]
  458a1c:	mov	x21, x1
  458a20:	mov	x19, x2
  458a24:	str	x23, [sp, #48]
  458a28:	mov	x20, x3
  458a2c:	ldr	x23, [x0]
  458a30:	cbnz	x3, 458a44 <_obstack_memory_used@@Base+0x46a4>
  458a34:	b	458a58 <_obstack_memory_used@@Base+0x46b8>
  458a38:	add	x19, x19, #0x1
  458a3c:	cmp	x22, x19
  458a40:	b.eq	458a70 <_obstack_memory_used@@Base+0x46d0>  // b.none
  458a44:	ldrb	w1, [x23, x19]
  458a48:	mov	x2, x20
  458a4c:	mov	x0, x21
  458a50:	bl	402b80 <memchr@plt>
  458a54:	cbnz	x0, 458a38 <_obstack_memory_used@@Base+0x4698>
  458a58:	mov	x0, x19
  458a5c:	ldp	x19, x20, [sp, #16]
  458a60:	ldr	x23, [sp, #48]
  458a64:	ldp	x21, x22, [sp, #32]
  458a68:	ldp	x29, x30, [sp], #64
  458a6c:	ret
  458a70:	mov	x0, #0xffffffffffffffff    	// #-1
  458a74:	ldp	x19, x20, [sp, #16]
  458a78:	ldp	x21, x22, [sp, #32]
  458a7c:	ldr	x23, [sp, #48]
  458a80:	ldp	x29, x30, [sp], #64
  458a84:	ret
  458a88:	mov	x0, #0xffffffffffffffff    	// #-1
  458a8c:	b	458a64 <_obstack_memory_used@@Base+0x46c4>
  458a90:	ldp	x1, x3, [x1]
  458a94:	b	458a00 <_obstack_memory_used@@Base+0x4660>
  458a98:	stp	x29, x30, [sp, #-48]!
  458a9c:	mov	x29, sp
  458aa0:	stp	x19, x20, [sp, #16]
  458aa4:	mov	x19, x1
  458aa8:	mov	x20, x0
  458aac:	mov	x0, x1
  458ab0:	str	x21, [sp, #32]
  458ab4:	mov	x21, x2
  458ab8:	bl	402680 <strlen@plt>
  458abc:	mov	x2, x21
  458ac0:	mov	x3, x0
  458ac4:	mov	x1, x19
  458ac8:	mov	x0, x20
  458acc:	ldp	x19, x20, [sp, #16]
  458ad0:	ldr	x21, [sp, #32]
  458ad4:	ldp	x29, x30, [sp], #48
  458ad8:	b	458a00 <_obstack_memory_used@@Base+0x4660>
  458adc:	nop
  458ae0:	mov	x4, x0
  458ae4:	and	w1, w1, #0xff
  458ae8:	mov	x0, x2
  458aec:	ldr	x3, [x4, #8]
  458af0:	cmp	x2, x3
  458af4:	b.cs	458b1c <_obstack_memory_used@@Base+0x477c>  // b.hs, b.nlast
  458af8:	ldr	x4, [x4]
  458afc:	b	458b0c <_obstack_memory_used@@Base+0x476c>
  458b00:	add	x0, x0, #0x1
  458b04:	cmp	x0, x3
  458b08:	b.eq	458b1c <_obstack_memory_used@@Base+0x477c>  // b.none
  458b0c:	ldrb	w2, [x4, x0]
  458b10:	cmp	w2, w1
  458b14:	b.eq	458b00 <_obstack_memory_used@@Base+0x4760>  // b.none
  458b18:	ret
  458b1c:	mov	x0, #0xffffffffffffffff    	// #-1
  458b20:	ret
  458b24:	nop
  458b28:	stp	x29, x30, [sp, #-48]!
  458b2c:	mov	x29, sp
  458b30:	ldr	x4, [x0, #8]
  458b34:	stp	x19, x20, [sp, #16]
  458b38:	mov	x19, #0xffffffffffffffff    	// #-1
  458b3c:	cbz	x4, 458b84 <_obstack_memory_used@@Base+0x47e4>
  458b40:	sub	x4, x4, #0x1
  458b44:	stp	x21, x22, [sp, #32]
  458b48:	cmp	x4, x2
  458b4c:	ldr	x22, [x0]
  458b50:	mov	x21, x1
  458b54:	mov	x20, x3
  458b58:	csel	x19, x4, x2, ls  // ls = plast
  458b5c:	cbz	x20, 458b80 <_obstack_memory_used@@Base+0x47e0>
  458b60:	ldrb	w1, [x22, x19]
  458b64:	mov	x2, x20
  458b68:	mov	x0, x21
  458b6c:	bl	402b80 <memchr@plt>
  458b70:	cbz	x0, 458b80 <_obstack_memory_used@@Base+0x47e0>
  458b74:	sub	x19, x19, #0x1
  458b78:	cmn	x19, #0x1
  458b7c:	b.ne	458b5c <_obstack_memory_used@@Base+0x47bc>  // b.any
  458b80:	ldp	x21, x22, [sp, #32]
  458b84:	mov	x0, x19
  458b88:	ldp	x19, x20, [sp, #16]
  458b8c:	ldp	x29, x30, [sp], #48
  458b90:	ret
  458b94:	nop
  458b98:	ldp	x1, x3, [x1]
  458b9c:	b	458b28 <_obstack_memory_used@@Base+0x4788>
  458ba0:	stp	x29, x30, [sp, #-48]!
  458ba4:	mov	x29, sp
  458ba8:	stp	x19, x20, [sp, #16]
  458bac:	mov	x19, x1
  458bb0:	mov	x20, x0
  458bb4:	mov	x0, x1
  458bb8:	str	x21, [sp, #32]
  458bbc:	mov	x21, x2
  458bc0:	bl	402680 <strlen@plt>
  458bc4:	mov	x2, x21
  458bc8:	mov	x3, x0
  458bcc:	mov	x1, x19
  458bd0:	mov	x0, x20
  458bd4:	ldp	x19, x20, [sp, #16]
  458bd8:	ldr	x21, [sp, #32]
  458bdc:	ldp	x29, x30, [sp], #48
  458be0:	b	458b28 <_obstack_memory_used@@Base+0x4788>
  458be4:	nop
  458be8:	ldr	x3, [x0, #8]
  458bec:	and	w1, w1, #0xff
  458bf0:	cbz	x3, 458c24 <_obstack_memory_used@@Base+0x4884>
  458bf4:	sub	x3, x3, #0x1
  458bf8:	cmp	x3, x2
  458bfc:	ldr	x4, [x0]
  458c00:	csel	x0, x3, x2, ls  // ls = plast
  458c04:	b	458c14 <_obstack_memory_used@@Base+0x4874>
  458c08:	sub	x0, x0, #0x1
  458c0c:	cmn	x0, #0x1
  458c10:	b.eq	458c20 <_obstack_memory_used@@Base+0x4880>  // b.none
  458c14:	ldrb	w2, [x4, x0]
  458c18:	cmp	w2, w1
  458c1c:	b.eq	458c08 <_obstack_memory_used@@Base+0x4868>  // b.none
  458c20:	ret
  458c24:	mov	x0, #0xffffffffffffffff    	// #-1
  458c28:	ret
  458c2c:	nop
  458c30:	stp	x29, x30, [sp, #-32]!
  458c34:	mov	x29, sp
  458c38:	stp	x19, x20, [sp, #16]
  458c3c:	ldr	x19, [x0, #8]
  458c40:	ldr	x20, [x1, #8]
  458c44:	cmp	x20, x19
  458c48:	csel	x2, x20, x19, ls  // ls = plast
  458c4c:	cbz	x2, 458c60 <_obstack_memory_used@@Base+0x48c0>
  458c50:	ldr	x0, [x0]
  458c54:	ldr	x1, [x1]
  458c58:	bl	4029e0 <memcmp@plt>
  458c5c:	cbnz	w0, 458c7c <_obstack_memory_used@@Base+0x48dc>
  458c60:	sub	x19, x19, x20
  458c64:	mov	x0, #0x7fffffff            	// #2147483647
  458c68:	cmp	x19, x0
  458c6c:	b.gt	458c7c <_obstack_memory_used@@Base+0x48dc>
  458c70:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458c74:	cmp	x19, x0
  458c78:	csel	w0, w0, w19, lt  // lt = tstop
  458c7c:	ldp	x19, x20, [sp, #16]
  458c80:	ldp	x29, x30, [sp], #32
  458c84:	ret
  458c88:	stp	x29, x30, [sp, #-32]!
  458c8c:	mov	x29, sp
  458c90:	ldr	x4, [x0, #8]
  458c94:	stp	x19, x20, [sp, #16]
  458c98:	cmp	x1, x4
  458c9c:	b.hi	458cf8 <_obstack_memory_used@@Base+0x4958>  // b.pmore
  458ca0:	sub	x4, x4, x1
  458ca4:	ldr	x20, [x3, #8]
  458ca8:	cmp	x4, x2
  458cac:	csel	x19, x4, x2, ls  // ls = plast
  458cb0:	cmp	x20, x19
  458cb4:	csel	x2, x20, x19, ls  // ls = plast
  458cb8:	cbz	x2, 458cd0 <_obstack_memory_used@@Base+0x4930>
  458cbc:	ldr	x0, [x0]
  458cc0:	add	x0, x0, x1
  458cc4:	ldr	x1, [x3]
  458cc8:	bl	4029e0 <memcmp@plt>
  458ccc:	cbnz	w0, 458cec <_obstack_memory_used@@Base+0x494c>
  458cd0:	sub	x19, x19, x20
  458cd4:	mov	x0, #0x7fffffff            	// #2147483647
  458cd8:	cmp	x19, x0
  458cdc:	b.gt	458cec <_obstack_memory_used@@Base+0x494c>
  458ce0:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458ce4:	cmp	x19, x0
  458ce8:	csel	w0, w0, w19, lt  // lt = tstop
  458cec:	ldp	x19, x20, [sp, #16]
  458cf0:	ldp	x29, x30, [sp], #32
  458cf4:	ret
  458cf8:	mov	x2, x1
  458cfc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458d00:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458d04:	mov	x3, x4
  458d08:	add	x1, x1, #0x4c8
  458d0c:	add	x0, x0, #0x390
  458d10:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458d14:	nop
  458d18:	stp	x29, x30, [sp, #-32]!
  458d1c:	mov	x29, sp
  458d20:	ldr	x6, [x0, #8]
  458d24:	stp	x19, x20, [sp, #16]
  458d28:	cmp	x1, x6
  458d2c:	b.hi	458da0 <_obstack_memory_used@@Base+0x4a00>  // b.pmore
  458d30:	ldr	x7, [x3, #8]
  458d34:	cmp	x4, x7
  458d38:	b.hi	458dbc <_obstack_memory_used@@Base+0x4a1c>  // b.pmore
  458d3c:	sub	x6, x6, x1
  458d40:	sub	x7, x7, x4
  458d44:	cmp	x6, x2
  458d48:	csel	x19, x6, x2, ls  // ls = plast
  458d4c:	cmp	x7, x5
  458d50:	csel	x20, x7, x5, ls  // ls = plast
  458d54:	cmp	x20, x19
  458d58:	csel	x2, x20, x19, ls  // ls = plast
  458d5c:	cbz	x2, 458d78 <_obstack_memory_used@@Base+0x49d8>
  458d60:	ldr	x0, [x0]
  458d64:	add	x0, x0, x1
  458d68:	ldr	x1, [x3]
  458d6c:	add	x1, x1, x4
  458d70:	bl	4029e0 <memcmp@plt>
  458d74:	cbnz	w0, 458d94 <_obstack_memory_used@@Base+0x49f4>
  458d78:	sub	x19, x19, x20
  458d7c:	mov	x0, #0x7fffffff            	// #2147483647
  458d80:	cmp	x19, x0
  458d84:	b.gt	458d94 <_obstack_memory_used@@Base+0x49f4>
  458d88:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458d8c:	cmp	x19, x0
  458d90:	csel	w0, w0, w19, lt  // lt = tstop
  458d94:	ldp	x19, x20, [sp, #16]
  458d98:	ldp	x29, x30, [sp], #32
  458d9c:	ret
  458da0:	mov	x3, x6
  458da4:	mov	x2, x1
  458da8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458dac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458db0:	add	x1, x1, #0x4c8
  458db4:	add	x0, x0, #0x390
  458db8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458dbc:	mov	x3, x7
  458dc0:	mov	x2, x4
  458dc4:	b	458da8 <_obstack_memory_used@@Base+0x4a08>
  458dc8:	stp	x29, x30, [sp, #-48]!
  458dcc:	mov	x29, sp
  458dd0:	stp	x21, x22, [sp, #32]
  458dd4:	mov	x22, x0
  458dd8:	mov	x21, x1
  458ddc:	mov	x0, x1
  458de0:	stp	x19, x20, [sp, #16]
  458de4:	bl	402680 <strlen@plt>
  458de8:	ldr	x19, [x22, #8]
  458dec:	mov	x20, x0
  458df0:	cmp	x0, x19
  458df4:	csel	x2, x0, x19, ls  // ls = plast
  458df8:	cbz	x2, 458e0c <_obstack_memory_used@@Base+0x4a6c>
  458dfc:	ldr	x0, [x22]
  458e00:	mov	x1, x21
  458e04:	bl	4029e0 <memcmp@plt>
  458e08:	cbnz	w0, 458e28 <_obstack_memory_used@@Base+0x4a88>
  458e0c:	sub	x19, x19, x20
  458e10:	mov	x0, #0x7fffffff            	// #2147483647
  458e14:	cmp	x19, x0
  458e18:	b.gt	458e28 <_obstack_memory_used@@Base+0x4a88>
  458e1c:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458e20:	cmp	x19, x0
  458e24:	csel	w0, w0, w19, lt  // lt = tstop
  458e28:	ldp	x19, x20, [sp, #16]
  458e2c:	ldp	x21, x22, [sp, #32]
  458e30:	ldp	x29, x30, [sp], #48
  458e34:	ret
  458e38:	stp	x29, x30, [sp, #-64]!
  458e3c:	mov	x29, sp
  458e40:	ldr	x4, [x0, #8]
  458e44:	stp	x19, x20, [sp, #16]
  458e48:	stp	x21, x22, [sp, #32]
  458e4c:	cmp	x1, x4
  458e50:	mov	x21, x1
  458e54:	str	x23, [sp, #48]
  458e58:	b.hi	458ecc <_obstack_memory_used@@Base+0x4b2c>  // b.pmore
  458e5c:	sub	x4, x4, x1
  458e60:	mov	x22, x0
  458e64:	cmp	x4, x2
  458e68:	mov	x23, x3
  458e6c:	csel	x19, x4, x2, ls  // ls = plast
  458e70:	mov	x0, x3
  458e74:	bl	402680 <strlen@plt>
  458e78:	cmp	x0, x19
  458e7c:	mov	x20, x0
  458e80:	csel	x2, x0, x19, ls  // ls = plast
  458e84:	cbz	x2, 458e9c <_obstack_memory_used@@Base+0x4afc>
  458e88:	ldr	x0, [x22]
  458e8c:	mov	x1, x23
  458e90:	add	x0, x0, x21
  458e94:	bl	4029e0 <memcmp@plt>
  458e98:	cbnz	w0, 458eb8 <_obstack_memory_used@@Base+0x4b18>
  458e9c:	sub	x19, x19, x20
  458ea0:	mov	x0, #0x7fffffff            	// #2147483647
  458ea4:	cmp	x19, x0
  458ea8:	b.gt	458eb8 <_obstack_memory_used@@Base+0x4b18>
  458eac:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458eb0:	cmp	x19, x0
  458eb4:	csel	w0, w0, w19, lt  // lt = tstop
  458eb8:	ldp	x19, x20, [sp, #16]
  458ebc:	ldp	x21, x22, [sp, #32]
  458ec0:	ldr	x23, [sp, #48]
  458ec4:	ldp	x29, x30, [sp], #64
  458ec8:	ret
  458ecc:	mov	x2, x1
  458ed0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458ed4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458ed8:	mov	x3, x4
  458edc:	add	x1, x1, #0x4c8
  458ee0:	add	x0, x0, #0x390
  458ee4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458ee8:	stp	x29, x30, [sp, #-32]!
  458eec:	mov	x6, x1
  458ef0:	mov	x29, sp
  458ef4:	ldr	x5, [x0, #8]
  458ef8:	stp	x19, x20, [sp, #16]
  458efc:	cmp	x1, x5
  458f00:	b.hi	458f5c <_obstack_memory_used@@Base+0x4bbc>  // b.pmore
  458f04:	sub	x5, x5, x1
  458f08:	mov	x20, x4
  458f0c:	cmp	x5, x2
  458f10:	csel	x19, x5, x2, ls  // ls = plast
  458f14:	cmp	x19, x4
  458f18:	csel	x2, x19, x4, ls  // ls = plast
  458f1c:	cbz	x2, 458f34 <_obstack_memory_used@@Base+0x4b94>
  458f20:	ldr	x0, [x0]
  458f24:	mov	x1, x3
  458f28:	add	x0, x0, x6
  458f2c:	bl	4029e0 <memcmp@plt>
  458f30:	cbnz	w0, 458f50 <_obstack_memory_used@@Base+0x4bb0>
  458f34:	sub	x19, x19, x20
  458f38:	mov	x0, #0x7fffffff            	// #2147483647
  458f3c:	cmp	x19, x0
  458f40:	b.gt	458f50 <_obstack_memory_used@@Base+0x4bb0>
  458f44:	mov	x0, #0xffffffff80000000    	// #-2147483648
  458f48:	cmp	x19, x0
  458f4c:	csel	w0, w0, w19, lt  // lt = tstop
  458f50:	ldp	x19, x20, [sp, #16]
  458f54:	ldp	x29, x30, [sp], #32
  458f58:	ret
  458f5c:	mov	x2, x1
  458f60:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458f64:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  458f68:	mov	x3, x5
  458f6c:	add	x1, x1, #0x4c8
  458f70:	add	x0, x0, #0x390
  458f74:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  458f78:	str	x1, [x0]
  458f7c:	ret
  458f80:	str	x1, [x0]
  458f84:	ret
  458f88:	stp	x29, x30, [sp, #-64]!
  458f8c:	mov	x29, sp
  458f90:	stp	x19, x20, [sp, #16]
  458f94:	mov	x19, x8
  458f98:	stp	x21, x22, [sp, #32]
  458f9c:	mov	x21, x1
  458fa0:	mov	x22, x0
  458fa4:	str	x23, [sp, #48]
  458fa8:	add	x23, x8, #0x10
  458fac:	bl	402680 <strlen@plt>
  458fb0:	stp	x23, xzr, [x19]
  458fb4:	mov	x20, x0
  458fb8:	strb	wzr, [x19, #16]
  458fbc:	mov	x0, x19
  458fc0:	ldr	x1, [x21, #8]
  458fc4:	add	x1, x20, x1
  458fc8:	bl	456f00 <_obstack_memory_used@@Base+0x2b60>
  458fcc:	ldr	x0, [x19, #8]
  458fd0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  458fd4:	sub	x1, x1, x0
  458fd8:	cmp	x20, x1
  458fdc:	b.hi	459014 <_obstack_memory_used@@Base+0x4c74>  // b.pmore
  458fe0:	mov	x2, x20
  458fe4:	mov	x1, x22
  458fe8:	mov	x0, x19
  458fec:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458ff0:	ldp	x1, x2, [x21]
  458ff4:	mov	x0, x19
  458ff8:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  458ffc:	mov	x0, x19
  459000:	ldp	x19, x20, [sp, #16]
  459004:	ldp	x21, x22, [sp, #32]
  459008:	ldr	x23, [sp, #48]
  45900c:	ldp	x29, x30, [sp], #64
  459010:	ret
  459014:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  459018:	add	x0, x0, #0x18
  45901c:	bl	402f0c <ferror@plt+0x1dc>
  459020:	ldr	x1, [x19]
  459024:	mov	x19, x0
  459028:	cmp	x23, x1
  45902c:	b.eq	459038 <_obstack_memory_used@@Base+0x4c98>  // b.none
  459030:	mov	x0, x1
  459034:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  459038:	mov	x0, x19
  45903c:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  459040:	stp	x29, x30, [sp, #-48]!
  459044:	mov	x29, sp
  459048:	stp	x19, x20, [sp, #16]
  45904c:	mov	x20, x1
  459050:	mov	x19, x8
  459054:	stp	x21, x22, [sp, #32]
  459058:	add	x21, x8, #0x10
  45905c:	and	w22, w0, #0xff
  459060:	stp	x21, xzr, [x8]
  459064:	mov	x0, x8
  459068:	strb	wzr, [x8, #16]
  45906c:	ldr	x1, [x1, #8]
  459070:	add	x1, x1, #0x1
  459074:	bl	456f00 <_obstack_memory_used@@Base+0x2b60>
  459078:	ldr	x1, [x19, #8]
  45907c:	mov	w4, w22
  459080:	mov	x0, x19
  459084:	mov	x3, #0x1                   	// #1
  459088:	mov	x2, #0x0                   	// #0
  45908c:	bl	4574b8 <_obstack_memory_used@@Base+0x3118>
  459090:	ldp	x1, x2, [x20]
  459094:	mov	x0, x19
  459098:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  45909c:	mov	x0, x19
  4590a0:	ldp	x19, x20, [sp, #16]
  4590a4:	ldp	x21, x22, [sp, #32]
  4590a8:	ldp	x29, x30, [sp], #48
  4590ac:	ret
  4590b0:	ldr	x1, [x19]
  4590b4:	mov	x19, x0
  4590b8:	cmp	x21, x1
  4590bc:	b.eq	4590c8 <_obstack_memory_used@@Base+0x4d28>  // b.none
  4590c0:	mov	x0, x1
  4590c4:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4590c8:	mov	x0, x19
  4590cc:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  4590d0:	stp	x29, x30, [sp, #-64]!
  4590d4:	mov	x29, sp
  4590d8:	stp	x19, x20, [sp, #16]
  4590dc:	sub	x19, x2, x1
  4590e0:	cmp	x19, #0xf
  4590e4:	str	x21, [sp, #32]
  4590e8:	mov	x20, x0
  4590ec:	str	x19, [sp, #56]
  4590f0:	mov	x21, x1
  4590f4:	b.hi	459148 <_obstack_memory_used@@Base+0x4da8>  // b.pmore
  4590f8:	cmp	x19, #0x1
  4590fc:	ldr	x0, [x0]
  459100:	b.ne	45912c <_obstack_memory_used@@Base+0x4d8c>  // b.any
  459104:	ldrb	w1, [x1]
  459108:	strb	w1, [x0]
  45910c:	ldr	x0, [x20]
  459110:	ldr	x19, [sp, #56]
  459114:	str	x19, [x20, #8]
  459118:	strb	wzr, [x0, x19]
  45911c:	ldp	x19, x20, [sp, #16]
  459120:	ldr	x21, [sp, #32]
  459124:	ldp	x29, x30, [sp], #64
  459128:	ret
  45912c:	cbnz	x19, 459160 <_obstack_memory_used@@Base+0x4dc0>
  459130:	str	x19, [x20, #8]
  459134:	strb	wzr, [x0, x19]
  459138:	ldp	x19, x20, [sp, #16]
  45913c:	ldr	x21, [sp, #32]
  459140:	ldp	x29, x30, [sp], #64
  459144:	ret
  459148:	add	x1, sp, #0x38
  45914c:	mov	x2, #0x0                   	// #0
  459150:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  459154:	str	x0, [x20]
  459158:	ldr	x1, [sp, #56]
  45915c:	str	x1, [x20, #16]
  459160:	mov	x2, x19
  459164:	mov	x1, x21
  459168:	bl	402620 <memcpy@plt>
  45916c:	ldr	x0, [x20]
  459170:	ldr	x19, [sp, #56]
  459174:	str	x19, [x20, #8]
  459178:	strb	wzr, [x0, x19]
  45917c:	ldp	x19, x20, [sp, #16]
  459180:	ldr	x21, [sp, #32]
  459184:	ldp	x29, x30, [sp], #64
  459188:	ret
  45918c:	nop
  459190:	add	x5, x0, #0x10
  459194:	str	x5, [x0]
  459198:	mov	w3, #0x0                   	// #0
  45919c:	b	4590d0 <_obstack_memory_used@@Base+0x4d30>
  4591a0:	stp	x29, x30, [sp, #-64]!
  4591a4:	mov	x29, sp
  4591a8:	stp	x19, x20, [sp, #16]
  4591ac:	sub	x19, x2, x1
  4591b0:	cmp	x19, #0xf
  4591b4:	str	x21, [sp, #32]
  4591b8:	mov	x20, x0
  4591bc:	str	x19, [sp, #56]
  4591c0:	mov	x21, x1
  4591c4:	b.hi	459218 <_obstack_memory_used@@Base+0x4e78>  // b.pmore
  4591c8:	cmp	x19, #0x1
  4591cc:	ldr	x0, [x0]
  4591d0:	b.ne	4591fc <_obstack_memory_used@@Base+0x4e5c>  // b.any
  4591d4:	ldrb	w1, [x1]
  4591d8:	strb	w1, [x0]
  4591dc:	ldr	x0, [x20]
  4591e0:	ldr	x19, [sp, #56]
  4591e4:	str	x19, [x20, #8]
  4591e8:	strb	wzr, [x0, x19]
  4591ec:	ldp	x19, x20, [sp, #16]
  4591f0:	ldr	x21, [sp, #32]
  4591f4:	ldp	x29, x30, [sp], #64
  4591f8:	ret
  4591fc:	cbnz	x19, 459230 <_obstack_memory_used@@Base+0x4e90>
  459200:	str	x19, [x20, #8]
  459204:	strb	wzr, [x0, x19]
  459208:	ldp	x19, x20, [sp, #16]
  45920c:	ldr	x21, [sp, #32]
  459210:	ldp	x29, x30, [sp], #64
  459214:	ret
  459218:	add	x1, sp, #0x38
  45921c:	mov	x2, #0x0                   	// #0
  459220:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  459224:	str	x0, [x20]
  459228:	ldr	x1, [sp, #56]
  45922c:	str	x1, [x20, #16]
  459230:	mov	x2, x19
  459234:	mov	x1, x21
  459238:	bl	402620 <memcpy@plt>
  45923c:	ldr	x0, [x20]
  459240:	ldr	x19, [sp, #56]
  459244:	str	x19, [x20, #8]
  459248:	strb	wzr, [x0, x19]
  45924c:	ldp	x19, x20, [sp, #16]
  459250:	ldr	x21, [sp, #32]
  459254:	ldp	x29, x30, [sp], #64
  459258:	ret
  45925c:	nop
  459260:	add	x4, x0, #0x10
  459264:	str	x4, [x0]
  459268:	ldr	x2, [x1, #8]
  45926c:	mov	w3, #0x0                   	// #0
  459270:	ldr	x1, [x1]
  459274:	add	x2, x1, x2
  459278:	b	4591a0 <_obstack_memory_used@@Base+0x4e00>
  45927c:	nop
  459280:	stp	x29, x30, [sp, #-64]!
  459284:	cmp	x2, #0x0
  459288:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  45928c:	mov	x29, sp
  459290:	stp	x19, x20, [sp, #16]
  459294:	str	x21, [sp, #32]
  459298:	b.eq	459348 <_obstack_memory_used@@Base+0x4fa8>  // b.none
  45929c:	sub	x19, x2, x1
  4592a0:	str	x19, [sp, #56]
  4592a4:	mov	x21, x1
  4592a8:	mov	x20, x0
  4592ac:	cmp	x19, #0xf
  4592b0:	b.hi	459304 <_obstack_memory_used@@Base+0x4f64>  // b.pmore
  4592b4:	cmp	x19, #0x1
  4592b8:	ldr	x0, [x0]
  4592bc:	b.ne	4592e8 <_obstack_memory_used@@Base+0x4f48>  // b.any
  4592c0:	ldrb	w1, [x1]
  4592c4:	strb	w1, [x0]
  4592c8:	ldr	x0, [x20]
  4592cc:	ldr	x19, [sp, #56]
  4592d0:	str	x19, [x20, #8]
  4592d4:	strb	wzr, [x0, x19]
  4592d8:	ldp	x19, x20, [sp, #16]
  4592dc:	ldr	x21, [sp, #32]
  4592e0:	ldp	x29, x30, [sp], #64
  4592e4:	ret
  4592e8:	cbnz	x19, 45931c <_obstack_memory_used@@Base+0x4f7c>
  4592ec:	str	x19, [x20, #8]
  4592f0:	strb	wzr, [x0, x19]
  4592f4:	ldp	x19, x20, [sp, #16]
  4592f8:	ldr	x21, [sp, #32]
  4592fc:	ldp	x29, x30, [sp], #64
  459300:	ret
  459304:	add	x1, sp, #0x38
  459308:	mov	x2, #0x0                   	// #0
  45930c:	bl	456638 <_obstack_memory_used@@Base+0x2298>
  459310:	str	x0, [x20]
  459314:	ldr	x1, [sp, #56]
  459318:	str	x1, [x20, #16]
  45931c:	mov	x2, x19
  459320:	mov	x1, x21
  459324:	bl	402620 <memcpy@plt>
  459328:	ldr	x0, [x20]
  45932c:	ldr	x19, [sp, #56]
  459330:	str	x19, [x20, #8]
  459334:	strb	wzr, [x0, x19]
  459338:	ldp	x19, x20, [sp, #16]
  45933c:	ldr	x21, [sp, #32]
  459340:	ldp	x29, x30, [sp], #64
  459344:	ret
  459348:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45934c:	add	x0, x0, #0xdb0
  459350:	bl	402e10 <ferror@plt+0xe0>
  459354:	nop
  459358:	add	x4, x0, #0x10
  45935c:	str	x4, [x0]
  459360:	ldr	x2, [x1, #8]
  459364:	mov	w3, #0x0                   	// #0
  459368:	ldr	x1, [x1]
  45936c:	add	x2, x1, x2
  459370:	b	459280 <_obstack_memory_used@@Base+0x4ee0>
  459374:	nop
  459378:	stp	x29, x30, [sp, #-48]!
  45937c:	mov	x4, x0
  459380:	mov	w3, #0x0                   	// #0
  459384:	mov	x29, sp
  459388:	stp	x19, x20, [sp, #16]
  45938c:	mov	x20, x1
  459390:	mov	x19, x8
  459394:	ldr	x2, [x4, #8]
  459398:	str	x21, [sp, #32]
  45939c:	add	x21, x8, #0x10
  4593a0:	str	x21, [x8]
  4593a4:	mov	x0, x8
  4593a8:	ldr	x1, [x4]
  4593ac:	add	x2, x1, x2
  4593b0:	bl	459280 <_obstack_memory_used@@Base+0x4ee0>
  4593b4:	ldp	x1, x2, [x20]
  4593b8:	mov	x0, x19
  4593bc:	bl	4581a0 <_obstack_memory_used@@Base+0x3e00>
  4593c0:	mov	x0, x19
  4593c4:	ldp	x19, x20, [sp, #16]
  4593c8:	ldr	x21, [sp, #32]
  4593cc:	ldp	x29, x30, [sp], #48
  4593d0:	ret
  4593d4:	ldr	x1, [x19]
  4593d8:	mov	x19, x0
  4593dc:	cmp	x21, x1
  4593e0:	b.eq	4593ec <_obstack_memory_used@@Base+0x504c>  // b.none
  4593e4:	mov	x0, x1
  4593e8:	bl	4552e8 <_obstack_memory_used@@Base+0xf48>
  4593ec:	mov	x0, x19
  4593f0:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  4593f4:	nop
  4593f8:	add	x5, x0, #0x10
  4593fc:	str	x5, [x0]
  459400:	mov	w3, #0x0                   	// #0
  459404:	b	459280 <_obstack_memory_used@@Base+0x4ee0>
  459408:	ldr	x3, [x1, #8]
  45940c:	add	x6, x0, #0x10
  459410:	str	x6, [x0]
  459414:	cmp	x2, x3
  459418:	ldr	x1, [x1]
  45941c:	b.hi	459434 <_obstack_memory_used@@Base+0x5094>  // b.pmore
  459420:	mov	x5, x2
  459424:	add	x2, x1, x3
  459428:	add	x1, x1, x5
  45942c:	mov	w3, #0x0                   	// #0
  459430:	b	40bc30 <ferror@plt+0x8f00>
  459434:	stp	x29, x30, [sp, #-16]!
  459438:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45943c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  459440:	mov	x29, sp
  459444:	add	x1, x1, #0x4e0
  459448:	add	x0, x0, #0x390
  45944c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  459450:	ldr	x4, [x1, #8]
  459454:	add	x7, x0, #0x10
  459458:	str	x7, [x0]
  45945c:	cmp	x2, x4
  459460:	ldr	x1, [x1]
  459464:	b.hi	459484 <_obstack_memory_used@@Base+0x50e4>  // b.pmore
  459468:	sub	x4, x4, x2
  45946c:	add	x1, x1, x2
  459470:	cmp	x4, x3
  459474:	csel	x4, x4, x3, ls  // ls = plast
  459478:	mov	w3, #0x0                   	// #0
  45947c:	add	x2, x1, x4
  459480:	b	40bc30 <ferror@plt+0x8f00>
  459484:	stp	x29, x30, [sp, #-16]!
  459488:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45948c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  459490:	mov	x29, sp
  459494:	mov	x3, x4
  459498:	add	x1, x1, #0x4e0
  45949c:	add	x0, x0, #0x390
  4594a0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4594a4:	nop
  4594a8:	ldr	x4, [x1, #8]
  4594ac:	add	x7, x0, #0x10
  4594b0:	str	x7, [x0]
  4594b4:	cmp	x2, x4
  4594b8:	ldr	x1, [x1]
  4594bc:	b.hi	4594dc <_obstack_memory_used@@Base+0x513c>  // b.pmore
  4594c0:	sub	x4, x4, x2
  4594c4:	add	x1, x1, x2
  4594c8:	cmp	x4, x3
  4594cc:	csel	x4, x4, x3, ls  // ls = plast
  4594d0:	mov	w3, #0x0                   	// #0
  4594d4:	add	x2, x1, x4
  4594d8:	b	40bc30 <ferror@plt+0x8f00>
  4594dc:	stp	x29, x30, [sp, #-16]!
  4594e0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4594e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4594e8:	mov	x29, sp
  4594ec:	mov	x3, x4
  4594f0:	add	x1, x1, #0x500
  4594f4:	add	x0, x0, #0x390
  4594f8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4594fc:	nop
  459500:	add	x5, x0, #0x10
  459504:	str	x5, [x0]
  459508:	add	x2, x1, x2
  45950c:	mov	w3, #0x0                   	// #0
  459510:	b	40bc30 <ferror@plt+0x8f00>
  459514:	nop
  459518:	stp	x29, x30, [sp, #-32]!
  45951c:	mov	x2, #0xffffffffffffffff    	// #-1
  459520:	mov	x29, sp
  459524:	stp	x19, x20, [sp, #16]
  459528:	mov	x20, x0
  45952c:	add	x0, x0, #0x10
  459530:	mov	x19, x1
  459534:	str	x0, [x20]
  459538:	cbz	x1, 459548 <_obstack_memory_used@@Base+0x51a8>
  45953c:	mov	x0, x1
  459540:	bl	402680 <strlen@plt>
  459544:	add	x2, x19, x0
  459548:	mov	x1, x19
  45954c:	mov	x0, x20
  459550:	ldp	x19, x20, [sp, #16]
  459554:	mov	w3, #0x0                   	// #0
  459558:	ldp	x29, x30, [sp], #32
  45955c:	b	40bc30 <ferror@plt+0x8f00>
  459560:	add	x5, x0, #0x10
  459564:	str	x5, [x0]
  459568:	add	x2, x1, x2
  45956c:	mov	w3, #0x0                   	// #0
  459570:	b	40bc30 <ferror@plt+0x8f00>
  459574:	nop
  459578:	add	x5, x0, #0x10
  45957c:	str	x5, [x0]
  459580:	mov	w3, #0x0                   	// #0
  459584:	b	40bc30 <ferror@plt+0x8f00>
  459588:	stp	x29, x30, [sp, #-32]!
  45958c:	mov	x29, sp
  459590:	ldr	x3, [x0, #8]
  459594:	str	x19, [sp, #16]
  459598:	cmp	x1, x3
  45959c:	b.hi	4595e0 <_obstack_memory_used@@Base+0x5240>  // b.pmore
  4595a0:	add	x4, x8, #0x10
  4595a4:	str	x4, [x8]
  4595a8:	sub	x4, x3, x1
  4595ac:	mov	x19, x8
  4595b0:	ldr	x5, [x0]
  4595b4:	cmp	x4, x2
  4595b8:	csel	x2, x4, x2, ls  // ls = plast
  4595bc:	mov	x0, x8
  4595c0:	add	x1, x5, x1
  4595c4:	mov	w3, #0x0                   	// #0
  4595c8:	add	x2, x1, x2
  4595cc:	bl	40bc30 <ferror@plt+0x8f00>
  4595d0:	mov	x0, x19
  4595d4:	ldr	x19, [sp, #16]
  4595d8:	ldp	x29, x30, [sp], #32
  4595dc:	ret
  4595e0:	mov	x2, x1
  4595e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4595e8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4595ec:	add	x0, x0, #0x390
  4595f0:	add	x1, x1, #0x510
  4595f4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  4595f8:	ldr	x2, [x0]
  4595fc:	ldr	x0, [x1]
  459600:	cmp	x2, x0
  459604:	cset	w0, eq  // eq = none
  459608:	ret
  45960c:	nop
  459610:	ldr	x2, [x0]
  459614:	ldr	x0, [x1]
  459618:	cmp	x2, x0
  45961c:	cset	w0, eq  // eq = none
  459620:	ret
  459624:	nop
  459628:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45962c:	add	x0, x0, #0x530
  459630:	ret
  459634:	nop
  459638:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45963c:	ldr	x1, [x1, #3912]
  459640:	add	x1, x1, #0x10
  459644:	str	x1, [x0]
  459648:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45964c:	nop
  459650:	stp	x29, x30, [sp, #-32]!
  459654:	mov	x29, sp
  459658:	str	x19, [sp, #16]
  45965c:	mov	x19, x0
  459660:	bl	459638 <_obstack_memory_used@@Base+0x5298>
  459664:	mov	x0, x19
  459668:	mov	x1, #0x8                   	// #8
  45966c:	ldr	x19, [sp, #16]
  459670:	ldp	x29, x30, [sp], #32
  459674:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  459678:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45967c:	add	x0, x0, #0x550
  459680:	ret
  459684:	nop
  459688:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45968c:	ldr	x1, [x1, #3616]
  459690:	add	x1, x1, #0x10
  459694:	str	x1, [x0]
  459698:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45969c:	nop
  4596a0:	stp	x29, x30, [sp, #-32]!
  4596a4:	mov	x29, sp
  4596a8:	str	x19, [sp, #16]
  4596ac:	mov	x19, x0
  4596b0:	bl	459688 <_obstack_memory_used@@Base+0x52e8>
  4596b4:	mov	x0, x19
  4596b8:	mov	x1, #0x8                   	// #8
  4596bc:	ldr	x19, [sp, #16]
  4596c0:	ldp	x29, x30, [sp], #32
  4596c4:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  4596c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4596cc:	add	x0, x0, #0x570
  4596d0:	ret
  4596d4:	nop
  4596d8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  4596dc:	ldr	x1, [x1, #3728]
  4596e0:	add	x1, x1, #0x10
  4596e4:	str	x1, [x0]
  4596e8:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  4596ec:	nop
  4596f0:	stp	x29, x30, [sp, #-32]!
  4596f4:	mov	x29, sp
  4596f8:	str	x19, [sp, #16]
  4596fc:	mov	x19, x0
  459700:	bl	4596d8 <_obstack_memory_used@@Base+0x5338>
  459704:	mov	x0, x19
  459708:	mov	x1, #0x8                   	// #8
  45970c:	ldr	x19, [sp, #16]
  459710:	ldp	x29, x30, [sp], #32
  459714:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  459718:	stp	x29, x30, [sp, #-64]!
  45971c:	mov	x29, sp
  459720:	ldr	x4, [x0]
  459724:	str	xzr, [sp, #40]
  459728:	str	xzr, [sp, #56]
  45972c:	add	x3, sp, #0x28
  459730:	ldr	x4, [x4, #48]
  459734:	str	x19, [sp, #16]
  459738:	mov	x19, x2
  45973c:	mov	x2, #0x1000000000          	// #68719476736
  459740:	str	x2, [sp, #48]
  459744:	ldr	x2, [x19]
  459748:	blr	x4
  45974c:	ldr	w0, [sp, #48]
  459750:	and	w0, w0, #0x6
  459754:	cmp	w0, #0x6
  459758:	b.ne	459774 <_obstack_memory_used@@Base+0x53d4>  // b.any
  45975c:	ldr	x1, [sp, #40]
  459760:	str	x1, [x19]
  459764:	mov	w0, #0x1                   	// #1
  459768:	ldr	x19, [sp, #16]
  45976c:	ldp	x29, x30, [sp], #64
  459770:	ret
  459774:	mov	w0, #0x0                   	// #0
  459778:	ldr	x19, [sp, #16]
  45977c:	ldp	x29, x30, [sp], #64
  459780:	ret
  459784:	nop
  459788:	cmp	x4, x2
  45978c:	mov	w0, #0x6                   	// #6
  459790:	csinc	w0, w0, wzr, eq  // eq = none
  459794:	ret
  459798:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45979c:	ldr	x1, [x1, #4032]
  4597a0:	add	x1, x1, #0x10
  4597a4:	str	x1, [x0]
  4597a8:	b	455808 <_obstack_memory_used@@Base+0x1468>
  4597ac:	nop
  4597b0:	stp	x29, x30, [sp, #-32]!
  4597b4:	mov	x29, sp
  4597b8:	str	x19, [sp, #16]
  4597bc:	mov	x19, x0
  4597c0:	bl	459798 <_obstack_memory_used@@Base+0x53f8>
  4597c4:	mov	x0, x19
  4597c8:	mov	x1, #0x10                  	// #16
  4597cc:	ldr	x19, [sp, #16]
  4597d0:	ldp	x29, x30, [sp], #32
  4597d4:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  4597d8:	stp	x29, x30, [sp, #-64]!
  4597dc:	cmp	x4, x6
  4597e0:	mov	x29, sp
  4597e4:	stp	x19, x20, [sp, #16]
  4597e8:	mov	x20, x4
  4597ec:	mov	x19, x7
  4597f0:	stp	x21, x22, [sp, #32]
  4597f4:	mov	w21, w2
  4597f8:	ldr	x22, [x0, #8]
  4597fc:	str	x23, [sp, #48]
  459800:	mov	x23, x3
  459804:	b.eq	459854 <_obstack_memory_used@@Base+0x54b4>  // b.none
  459808:	ldr	x1, [x3, #8]
  45980c:	cmp	x1, x22
  459810:	b.eq	45982c <_obstack_memory_used@@Base+0x548c>  // b.none
  459814:	ldrb	w0, [x22]
  459818:	cmp	w0, #0x2a
  45981c:	b.eq	45983c <_obstack_memory_used@@Base+0x549c>  // b.none
  459820:	mov	x0, x22
  459824:	bl	402a20 <strcmp@plt>
  459828:	cbnz	w0, 45983c <_obstack_memory_used@@Base+0x549c>
  45982c:	mov	w0, #0x1                   	// #1
  459830:	str	x20, [x19]
  459834:	str	w21, [x19, #8]
  459838:	str	w0, [x19, #16]
  45983c:	mov	w0, #0x0                   	// #0
  459840:	ldp	x19, x20, [sp, #16]
  459844:	ldp	x21, x22, [sp, #32]
  459848:	ldr	x23, [sp, #48]
  45984c:	ldp	x29, x30, [sp], #64
  459850:	ret
  459854:	ldr	x1, [x5, #8]
  459858:	cmp	x1, x22
  45985c:	b.eq	459898 <_obstack_memory_used@@Base+0x54f8>  // b.none
  459860:	ldrb	w0, [x22]
  459864:	cmp	w0, #0x2a
  459868:	b.eq	459888 <_obstack_memory_used@@Base+0x54e8>  // b.none
  45986c:	mov	x0, x22
  459870:	bl	402a20 <strcmp@plt>
  459874:	cbz	w0, 459898 <_obstack_memory_used@@Base+0x54f8>
  459878:	ldr	x1, [x23, #8]
  45987c:	cmp	x22, x1
  459880:	b.ne	459820 <_obstack_memory_used@@Base+0x5480>  // b.any
  459884:	b	45982c <_obstack_memory_used@@Base+0x548c>
  459888:	ldr	x0, [x3, #8]
  45988c:	cmp	x0, x22
  459890:	b.ne	45983c <_obstack_memory_used@@Base+0x549c>  // b.any
  459894:	b	45982c <_obstack_memory_used@@Base+0x548c>
  459898:	str	w21, [x19, #12]
  45989c:	mov	w0, #0x0                   	// #0
  4598a0:	ldp	x19, x20, [sp, #16]
  4598a4:	ldp	x21, x22, [sp, #32]
  4598a8:	ldr	x23, [sp, #48]
  4598ac:	ldp	x29, x30, [sp], #64
  4598b0:	ret
  4598b4:	nop
  4598b8:	stp	x29, x30, [sp, #-48]!
  4598bc:	mov	x29, sp
  4598c0:	ldr	x0, [x0, #8]
  4598c4:	stp	x19, x20, [sp, #16]
  4598c8:	mov	x20, x2
  4598cc:	ldr	x1, [x1, #8]
  4598d0:	str	x21, [sp, #32]
  4598d4:	mov	x19, x3
  4598d8:	cmp	x0, x1
  4598dc:	b.eq	4598f8 <_obstack_memory_used@@Base+0x5558>  // b.none
  4598e0:	ldrb	w2, [x0]
  4598e4:	mov	w21, #0x0                   	// #0
  4598e8:	cmp	w2, #0x2a
  4598ec:	b.eq	459910 <_obstack_memory_used@@Base+0x5570>  // b.none
  4598f0:	bl	402a20 <strcmp@plt>
  4598f4:	cbnz	w0, 459910 <_obstack_memory_used@@Base+0x5570>
  4598f8:	mov	x0, #0x10                  	// #16
  4598fc:	mov	w1, #0x6                   	// #6
  459900:	mov	w21, #0x1                   	// #1
  459904:	str	x20, [x19]
  459908:	str	w1, [x19, #8]
  45990c:	str	x0, [x19, #16]
  459910:	mov	w0, w21
  459914:	ldp	x19, x20, [sp, #16]
  459918:	ldr	x21, [sp, #32]
  45991c:	ldp	x29, x30, [sp], #48
  459920:	ret
  459924:	nop
  459928:	stp	x29, x30, [sp, #-48]!
  45992c:	mov	x29, sp
  459930:	stp	x19, x20, [sp, #16]
  459934:	mov	x20, x0
  459938:	mov	x19, x1
  45993c:	ldr	x0, [x0, #8]
  459940:	ldr	x1, [x1, #8]
  459944:	cmp	x0, x1
  459948:	b.eq	4599b0 <_obstack_memory_used@@Base+0x5610>  // b.none
  45994c:	stp	x21, x22, [sp, #32]
  459950:	mov	x22, x2
  459954:	mov	w21, w3
  459958:	ldrb	w2, [x0]
  45995c:	cmp	w2, #0x2a
  459960:	b.eq	459980 <_obstack_memory_used@@Base+0x55e0>  // b.none
  459964:	bl	402a20 <strcmp@plt>
  459968:	cbnz	w0, 459980 <_obstack_memory_used@@Base+0x55e0>
  45996c:	mov	w0, #0x1                   	// #1
  459970:	ldp	x19, x20, [sp, #16]
  459974:	ldp	x21, x22, [sp, #32]
  459978:	ldp	x29, x30, [sp], #48
  45997c:	ret
  459980:	cmp	w21, #0x3
  459984:	b.hi	4599c0 <_obstack_memory_used@@Base+0x5620>  // b.pmore
  459988:	ldr	x3, [x19]
  45998c:	mov	x2, x22
  459990:	mov	x1, x20
  459994:	mov	x0, x19
  459998:	ldp	x19, x20, [sp, #16]
  45999c:	ldp	x21, x22, [sp, #32]
  4599a0:	ldp	x29, x30, [sp], #48
  4599a4:	ldr	x3, [x3, #40]
  4599a8:	mov	x16, x3
  4599ac:	br	x16
  4599b0:	mov	w0, #0x1                   	// #1
  4599b4:	ldp	x19, x20, [sp, #16]
  4599b8:	ldp	x29, x30, [sp], #48
  4599bc:	ret
  4599c0:	mov	w0, #0x0                   	// #0
  4599c4:	ldp	x19, x20, [sp, #16]
  4599c8:	ldp	x21, x22, [sp, #32]
  4599cc:	ldp	x29, x30, [sp], #48
  4599d0:	ret
  4599d4:	nop
  4599d8:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  4599dc:	nop
  4599e0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4599e4:	add	x0, x0, #0x5b8
  4599e8:	ret
  4599ec:	nop
  4599f0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4599f4:	add	x0, x0, #0x5e0
  4599f8:	ret
  4599fc:	nop
  459a00:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459a04:	ldr	x1, [x1, #3936]
  459a08:	add	x1, x1, #0x10
  459a0c:	str	x1, [x0]
  459a10:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  459a14:	nop
  459a18:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459a1c:	ldr	x1, [x1, #3856]
  459a20:	add	x1, x1, #0x10
  459a24:	str	x1, [x0]
  459a28:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  459a2c:	nop
  459a30:	stp	x29, x30, [sp, #-32]!
  459a34:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459a38:	mov	x29, sp
  459a3c:	ldr	x1, [x1, #3936]
  459a40:	str	x19, [sp, #16]
  459a44:	mov	x19, x0
  459a48:	add	x1, x1, #0x10
  459a4c:	str	x1, [x0]
  459a50:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  459a54:	mov	x0, x19
  459a58:	mov	x1, #0x8                   	// #8
  459a5c:	ldr	x19, [sp, #16]
  459a60:	ldp	x29, x30, [sp], #32
  459a64:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  459a68:	stp	x29, x30, [sp, #-32]!
  459a6c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459a70:	mov	x29, sp
  459a74:	ldr	x1, [x1, #3856]
  459a78:	str	x19, [sp, #16]
  459a7c:	mov	x19, x0
  459a80:	add	x1, x1, #0x10
  459a84:	str	x1, [x0]
  459a88:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  459a8c:	mov	x0, x19
  459a90:	mov	x1, #0x8                   	// #8
  459a94:	ldr	x19, [sp, #16]
  459a98:	ldp	x29, x30, [sp], #32
  459a9c:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  459aa0:	stp	x29, x30, [sp, #-48]!
  459aa4:	mov	x29, sp
  459aa8:	stp	x19, x20, [sp, #16]
  459aac:	adrp	x20, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459ab0:	mov	x19, x0
  459ab4:	ldr	x0, [x20, #3600]
  459ab8:	str	x21, [sp, #32]
  459abc:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  459ac0:	cbz	x0, 459ad0 <_obstack_memory_used@@Base+0x5730>
  459ac4:	add	x0, x21, #0xae8
  459ac8:	bl	402c90 <pthread_mutex_lock@plt>
  459acc:	cbnz	w0, 459bc8 <_obstack_memory_used@@Base+0x5828>
  459ad0:	add	x0, x21, #0xae8
  459ad4:	sub	x5, x19, #0x10
  459ad8:	ldr	x1, [x0, #48]
  459adc:	cbz	x1, 459b58 <_obstack_memory_used@@Base+0x57b8>
  459ae0:	ldur	x6, [x19, #-16]
  459ae4:	add	x4, x5, x6
  459ae8:	cmp	x1, x4
  459aec:	b.hi	459b58 <_obstack_memory_used@@Base+0x57b8>  // b.pmore
  459af0:	ldr	x2, [x1, #8]
  459af4:	b.eq	459bac <_obstack_memory_used@@Base+0x580c>  // b.none
  459af8:	add	x0, x0, #0x30
  459afc:	cbnz	x2, 459b18 <_obstack_memory_used@@Base+0x5778>
  459b00:	b	459b34 <_obstack_memory_used@@Base+0x5794>
  459b04:	ldr	x3, [x2, #8]
  459b08:	add	x0, x1, #0x8
  459b0c:	cbz	x3, 459b94 <_obstack_memory_used@@Base+0x57f4>
  459b10:	mov	x1, x2
  459b14:	mov	x2, x3
  459b18:	cmp	x4, x2
  459b1c:	b.cc	459b04 <_obstack_memory_used@@Base+0x5764>  // b.lo, b.ul, b.last
  459b20:	b.ne	459bc0 <_obstack_memory_used@@Base+0x5820>  // b.any
  459b24:	ldp	x2, x3, [x4]
  459b28:	str	x3, [x1, #8]
  459b2c:	ldr	x1, [x0]
  459b30:	add	x6, x6, x2
  459b34:	ldr	x2, [x1]
  459b38:	add	x3, x1, x2
  459b3c:	cmp	x5, x3
  459b40:	b.eq	459b88 <_obstack_memory_used@@Base+0x57e8>  // b.none
  459b44:	ldr	x1, [x1, #8]
  459b48:	stp	x6, x1, [x19, #-16]
  459b4c:	ldr	x0, [x0]
  459b50:	str	x5, [x0, #8]
  459b54:	b	459b64 <_obstack_memory_used@@Base+0x57c4>
  459b58:	add	x0, x21, #0xae8
  459b5c:	stur	x1, [x19, #-8]
  459b60:	str	x5, [x0, #48]
  459b64:	ldr	x20, [x20, #3600]
  459b68:	cbz	x20, 459b78 <_obstack_memory_used@@Base+0x57d8>
  459b6c:	add	x0, x21, #0xae8
  459b70:	bl	402cb0 <pthread_mutex_unlock@plt>
  459b74:	cbnz	w0, 459bcc <_obstack_memory_used@@Base+0x582c>
  459b78:	ldp	x19, x20, [sp, #16]
  459b7c:	ldr	x21, [sp, #32]
  459b80:	ldp	x29, x30, [sp], #48
  459b84:	ret
  459b88:	add	x6, x2, x6
  459b8c:	str	x6, [x1]
  459b90:	b	459b64 <_obstack_memory_used@@Base+0x57c4>
  459b94:	ldr	x1, [x1, #8]
  459b98:	ldr	x2, [x1]
  459b9c:	add	x3, x1, x2
  459ba0:	cmp	x5, x3
  459ba4:	b.ne	459b44 <_obstack_memory_used@@Base+0x57a4>  // b.any
  459ba8:	b	459b88 <_obstack_memory_used@@Base+0x57e8>
  459bac:	ldr	x1, [x1]
  459bb0:	add	x6, x1, x6
  459bb4:	stp	x6, x2, [x19, #-16]
  459bb8:	str	x5, [x0, #48]
  459bbc:	b	459b64 <_obstack_memory_used@@Base+0x57c4>
  459bc0:	ldr	x1, [x0]
  459bc4:	b	459b34 <_obstack_memory_used@@Base+0x5794>
  459bc8:	bl	403104 <ferror@plt+0x3d4>
  459bcc:	mov	x0, #0x8                   	// #8
  459bd0:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  459bd4:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459bd8:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459bdc:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459be0:	ldr	x3, [x3, #3856]
  459be4:	ldr	x2, [x2, #4064]
  459be8:	add	x3, x3, #0x10
  459bec:	ldr	x1, [x1, #4016]
  459bf0:	str	x3, [x0]
  459bf4:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  459bf8:	cmn	x1, #0x1
  459bfc:	b.ne	459c04 <_obstack_memory_used@@Base+0x5864>  // b.any
  459c00:	bl	45aac8 <_obstack_memory_used@@Base+0x6728>
  459c04:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  459c08:	stp	x29, x30, [sp, #-48]!
  459c0c:	mov	x29, sp
  459c10:	stp	x19, x20, [sp, #16]
  459c14:	adrp	x20, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459c18:	mov	x19, x0
  459c1c:	ldr	x0, [x20, #3600]
  459c20:	str	x21, [sp, #32]
  459c24:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  459c28:	cbz	x0, 459c38 <_obstack_memory_used@@Base+0x5898>
  459c2c:	add	x0, x21, #0xae8
  459c30:	bl	402c90 <pthread_mutex_lock@plt>
  459c34:	cbnz	w0, 459cd4 <_obstack_memory_used@@Base+0x5934>
  459c38:	add	x3, x21, #0xae8
  459c3c:	adds	x0, x19, #0x10
  459c40:	mov	x19, #0x10                  	// #16
  459c44:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  459c48:	add	x0, x0, #0xf
  459c4c:	ldr	x19, [x3, #48]
  459c50:	and	x0, x0, #0xfffffffffffffff0
  459c54:	cbz	x19, 459ca0 <_obstack_memory_used@@Base+0x5900>
  459c58:	add	x3, x3, #0x30
  459c5c:	b	459c68 <_obstack_memory_used@@Base+0x58c8>
  459c60:	add	x3, x2, #0x8
  459c64:	cbz	x19, 459ca0 <_obstack_memory_used@@Base+0x5900>
  459c68:	mov	x2, x19
  459c6c:	ldp	x1, x19, [x19]
  459c70:	cmp	x0, x1
  459c74:	b.hi	459c60 <_obstack_memory_used@@Base+0x58c0>  // b.pmore
  459c78:	sub	x1, x1, x0
  459c7c:	cmp	x1, #0xf
  459c80:	b.ls	459cc8 <_obstack_memory_used@@Base+0x5928>  // b.plast
  459c84:	add	x4, x2, x0
  459c88:	str	x19, [x4, #8]
  459c8c:	str	x1, [x2, x0]
  459c90:	ldr	x2, [x3]
  459c94:	add	x19, x2, #0x10
  459c98:	str	x0, [x2]
  459c9c:	str	x4, [x3]
  459ca0:	ldr	x20, [x20, #3600]
  459ca4:	cbz	x20, 459cb4 <_obstack_memory_used@@Base+0x5914>
  459ca8:	add	x0, x21, #0xae8
  459cac:	bl	402cb0 <pthread_mutex_unlock@plt>
  459cb0:	cbnz	w0, 459cd8 <_obstack_memory_used@@Base+0x5938>
  459cb4:	mov	x0, x19
  459cb8:	ldp	x19, x20, [sp, #16]
  459cbc:	ldr	x21, [sp, #32]
  459cc0:	ldp	x29, x30, [sp], #48
  459cc4:	ret
  459cc8:	str	x19, [x3]
  459ccc:	add	x19, x2, #0x10
  459cd0:	b	459ca0 <_obstack_memory_used@@Base+0x5900>
  459cd4:	bl	403104 <ferror@plt+0x3d4>
  459cd8:	mov	x0, #0x8                   	// #8
  459cdc:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  459ce0:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459ce4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459ce8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  459cec:	ldr	x3, [x3, #3856]
  459cf0:	ldr	x2, [x2, #4064]
  459cf4:	add	x3, x3, #0x10
  459cf8:	ldr	x1, [x1, #4016]
  459cfc:	str	x3, [x0]
  459d00:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  459d04:	cmn	x1, #0x1
  459d08:	b.ne	459d10 <_obstack_memory_used@@Base+0x5970>  // b.any
  459d0c:	bl	45aac8 <_obstack_memory_used@@Base+0x6728>
  459d10:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  459d14:	nop
  459d18:	stp	x29, x30, [sp, #-32]!
  459d1c:	mov	x29, sp
  459d20:	str	x19, [sp, #16]
  459d24:	adrp	x19, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  459d28:	add	x19, x19, #0xae8
  459d2c:	ldr	x0, [x19, #56]
  459d30:	cbz	x0, 459d3c <_obstack_memory_used@@Base+0x599c>
  459d34:	bl	402a90 <free@plt>
  459d38:	str	xzr, [x19, #56]
  459d3c:	ldr	x19, [sp, #16]
  459d40:	ldp	x29, x30, [sp], #32
  459d44:	ret
  459d48:	stp	x29, x30, [sp, #-32]!
  459d4c:	mov	x29, sp
  459d50:	str	x19, [sp, #16]
  459d54:	add	x19, x0, #0x80
  459d58:	mov	x0, x19
  459d5c:	bl	4027f0 <malloc@plt>
  459d60:	mov	x1, x0
  459d64:	cbz	x0, 459d98 <_obstack_memory_used@@Base+0x59f8>
  459d68:	stp	xzr, xzr, [x1]
  459d6c:	add	x0, x1, #0x80
  459d70:	stp	xzr, xzr, [x1, #16]
  459d74:	stp	xzr, xzr, [x1, #32]
  459d78:	stp	xzr, xzr, [x1, #48]
  459d7c:	stp	xzr, xzr, [x1, #64]
  459d80:	stp	xzr, xzr, [x1, #80]
  459d84:	stp	xzr, xzr, [x1, #96]
  459d88:	stp	xzr, xzr, [x1, #112]
  459d8c:	ldr	x19, [sp, #16]
  459d90:	ldp	x29, x30, [sp], #32
  459d94:	ret
  459d98:	mov	x0, x19
  459d9c:	bl	459c08 <_obstack_memory_used@@Base+0x5868>
  459da0:	mov	x1, x0
  459da4:	cbnz	x0, 459d68 <_obstack_memory_used@@Base+0x59c8>
  459da8:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  459dac:	nop
  459db0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  459db4:	add	x1, x1, #0xae8
  459db8:	sub	x0, x0, #0x80
  459dbc:	ldr	x2, [x1, #56]
  459dc0:	cmp	x0, x2
  459dc4:	b.ls	459dec <_obstack_memory_used@@Base+0x5a4c>  // b.plast
  459dc8:	ldr	x1, [x1, #64]
  459dcc:	add	x2, x2, x1
  459dd0:	cmp	x0, x2
  459dd4:	b.cs	459dec <_obstack_memory_used@@Base+0x5a4c>  // b.hs, b.nlast
  459dd8:	stp	x29, x30, [sp, #-16]!
  459ddc:	mov	x29, sp
  459de0:	bl	459aa0 <_obstack_memory_used@@Base+0x5700>
  459de4:	ldp	x29, x30, [sp], #16
  459de8:	ret
  459dec:	b	402a90 <free@plt>
  459df0:	stp	x29, x30, [sp, #-16]!
  459df4:	mov	x0, #0x70                  	// #112
  459df8:	mov	x29, sp
  459dfc:	bl	4027f0 <malloc@plt>
  459e00:	cbz	x0, 459e28 <_obstack_memory_used@@Base+0x5a88>
  459e04:	stp	xzr, xzr, [x0]
  459e08:	stp	xzr, xzr, [x0, #16]
  459e0c:	stp	xzr, xzr, [x0, #32]
  459e10:	stp	xzr, xzr, [x0, #48]
  459e14:	stp	xzr, xzr, [x0, #64]
  459e18:	stp	xzr, xzr, [x0, #80]
  459e1c:	stp	xzr, xzr, [x0, #96]
  459e20:	ldp	x29, x30, [sp], #16
  459e24:	ret
  459e28:	mov	x0, #0x70                  	// #112
  459e2c:	bl	459c08 <_obstack_memory_used@@Base+0x5868>
  459e30:	cbnz	x0, 459e04 <_obstack_memory_used@@Base+0x5a64>
  459e34:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  459e38:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  459e3c:	add	x2, x2, #0xae8
  459e40:	mov	x1, x0
  459e44:	ldr	x3, [x2, #56]
  459e48:	cmp	x0, x3
  459e4c:	b.ls	459e74 <_obstack_memory_used@@Base+0x5ad4>  // b.plast
  459e50:	ldr	x2, [x2, #64]
  459e54:	add	x3, x3, x2
  459e58:	cmp	x0, x3
  459e5c:	b.cs	459e74 <_obstack_memory_used@@Base+0x5ad4>  // b.hs, b.nlast
  459e60:	stp	x29, x30, [sp, #-16]!
  459e64:	mov	x29, sp
  459e68:	bl	459aa0 <_obstack_memory_used@@Base+0x5700>
  459e6c:	ldp	x29, x30, [sp], #16
  459e70:	ret
  459e74:	mov	x0, x1
  459e78:	b	402a90 <free@plt>
  459e7c:	nop
  459e80:	ldur	x0, [x0, #-8]
  459e84:	ret
  459e88:	stp	x29, x30, [sp, #-32]!
  459e8c:	mov	x29, sp
  459e90:	str	x19, [sp, #16]
  459e94:	mov	x19, x0
  459e98:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  459e9c:	mov	x1, x0
  459ea0:	mov	x2, x19
  459ea4:	mov	x4, #0xd500                	// #54528
  459ea8:	movk	x4, #0xbcd4, lsl #16
  459eac:	movk	x4, #0xaabc, lsl #32
  459eb0:	ldr	x3, [x2], #-80
  459eb4:	movk	x4, #0xb8b1, lsl #48
  459eb8:	ldr	x0, [x0]
  459ebc:	add	x3, x3, x4
  459ec0:	cmp	x3, #0x1
  459ec4:	b.ls	459edc <_obstack_memory_used@@Base+0x5b3c>  // b.plast
  459ec8:	cbnz	x0, 459f20 <_obstack_memory_used@@Base+0x5b80>
  459ecc:	str	x2, [x1]
  459ed0:	ldr	x19, [sp, #16]
  459ed4:	ldp	x29, x30, [sp], #32
  459ed8:	ret
  459edc:	ldur	w3, [x19, #-40]
  459ee0:	mov	w5, #0x1                   	// #1
  459ee4:	ldr	w4, [x1, #8]
  459ee8:	cmp	w3, #0x0
  459eec:	sub	w5, w5, w3
  459ef0:	csinc	w3, w5, w3, lt  // lt = tstop
  459ef4:	stur	w3, [x19, #-40]
  459ef8:	sub	w3, w4, #0x1
  459efc:	str	w3, [x1, #8]
  459f00:	cmp	x0, x2
  459f04:	b.eq	459f10 <_obstack_memory_used@@Base+0x5b70>  // b.none
  459f08:	stur	x0, [x19, #-48]
  459f0c:	str	x2, [x1]
  459f10:	ldur	x0, [x19, #-8]
  459f14:	ldr	x19, [sp, #16]
  459f18:	ldp	x29, x30, [sp], #32
  459f1c:	ret
  459f20:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  459f24:	nop
  459f28:	stp	x29, x30, [sp, #-16]!
  459f2c:	mov	x29, sp
  459f30:	bl	45a108 <_obstack_memory_used@@Base+0x5d68>
  459f34:	ldr	x1, [x0]
  459f38:	cbz	x1, 459f78 <_obstack_memory_used@@Base+0x5bd8>
  459f3c:	mov	x3, #0xd500                	// #54528
  459f40:	ldr	x2, [x1, #80]
  459f44:	movk	x3, #0xbcd4, lsl #16
  459f48:	movk	x3, #0xaabc, lsl #32
  459f4c:	movk	x3, #0xb8b1, lsl #48
  459f50:	add	x2, x2, x3
  459f54:	cmp	x2, #0x1
  459f58:	b.hi	459f98 <_obstack_memory_used@@Base+0x5bf8>  // b.pmore
  459f5c:	ldr	w2, [x1, #40]
  459f60:	tbnz	w2, #31, 459f80 <_obstack_memory_used@@Base+0x5be0>
  459f64:	subs	w2, w2, #0x1
  459f68:	b.eq	459fa8 <_obstack_memory_used@@Base+0x5c08>  // b.none
  459f6c:	cmn	w2, #0x1
  459f70:	b.eq	459fbc <_obstack_memory_used@@Base+0x5c1c>  // b.none
  459f74:	str	w2, [x1, #40]
  459f78:	ldp	x29, x30, [sp], #16
  459f7c:	ret
  459f80:	adds	w2, w2, #0x1
  459f84:	b.ne	459f74 <_obstack_memory_used@@Base+0x5bd4>  // b.any
  459f88:	ldr	x3, [x1, #32]
  459f8c:	str	x3, [x0]
  459f90:	str	w2, [x1, #40]
  459f94:	b	459f78 <_obstack_memory_used@@Base+0x5bd8>
  459f98:	str	xzr, [x0]
  459f9c:	add	x0, x1, #0x50
  459fa0:	ldp	x29, x30, [sp], #16
  459fa4:	b	46c8d0 <_obstack_memory_used@@Base+0x18530>
  459fa8:	ldr	x2, [x1, #32]
  459fac:	str	x2, [x0]
  459fb0:	add	x0, x1, #0x50
  459fb4:	ldp	x29, x30, [sp], #16
  459fb8:	b	46c8d0 <_obstack_memory_used@@Base+0x18530>
  459fbc:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  459fc0:	stp	x29, x30, [sp, #-16]!
  459fc4:	mov	x29, sp
  459fc8:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  459fcc:	ldr	w0, [x0, #8]
  459fd0:	ldp	x29, x30, [sp], #16
  459fd4:	cmp	w0, #0x0
  459fd8:	cset	w0, ne  // ne = any
  459fdc:	ret
  459fe0:	stp	x29, x30, [sp, #-16]!
  459fe4:	mov	x29, sp
  459fe8:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  459fec:	ldr	w0, [x0, #8]
  459ff0:	ldp	x29, x30, [sp], #16
  459ff4:	ret
  459ff8:	ret
  459ffc:	nop
  45a000:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45a004:	ldr	x1, [x1, #3744]
  45a008:	add	x1, x1, #0x10
  45a00c:	str	x1, [x0]
  45a010:	b	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45a014:	nop
  45a018:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45a01c:	add	x0, x0, #0x660
  45a020:	ret
  45a024:	nop
  45a028:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45a02c:	add	x0, x0, #0x670
  45a030:	ret
  45a034:	nop
  45a038:	stp	x29, x30, [sp, #-32]!
  45a03c:	mov	x29, sp
  45a040:	str	x19, [sp, #16]
  45a044:	mov	x19, x0
  45a048:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45a04c:	mov	x0, x19
  45a050:	mov	x1, #0x8                   	// #8
  45a054:	ldr	x19, [sp, #16]
  45a058:	ldp	x29, x30, [sp], #32
  45a05c:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  45a060:	stp	x29, x30, [sp, #-32]!
  45a064:	mov	x29, sp
  45a068:	str	x19, [sp, #16]
  45a06c:	mov	x19, x0
  45a070:	bl	45a000 <_obstack_memory_used@@Base+0x5c60>
  45a074:	mov	x0, x19
  45a078:	mov	x1, #0x8                   	// #8
  45a07c:	ldr	x19, [sp, #16]
  45a080:	ldp	x29, x30, [sp], #32
  45a084:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  45a088:	ret
  45a08c:	nop
  45a090:	stp	x29, x30, [sp, #-32]!
  45a094:	mov	x29, sp
  45a098:	str	x19, [sp, #16]
  45a09c:	mov	x19, x0
  45a0a0:	bl	45a088 <_obstack_memory_used@@Base+0x5ce8>
  45a0a4:	mov	x0, x19
  45a0a8:	mov	x1, #0x8                   	// #8
  45a0ac:	ldr	x19, [sp, #16]
  45a0b0:	ldp	x29, x30, [sp], #32
  45a0b4:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  45a0b8:	ret
  45a0bc:	nop
  45a0c0:	stp	x29, x30, [sp, #-32]!
  45a0c4:	mov	x29, sp
  45a0c8:	str	x19, [sp, #16]
  45a0cc:	mov	x19, x0
  45a0d0:	bl	45a0b8 <_obstack_memory_used@@Base+0x5d18>
  45a0d4:	mov	x0, x19
  45a0d8:	mov	x1, #0x8                   	// #8
  45a0dc:	ldr	x19, [sp, #16]
  45a0e0:	ldp	x29, x30, [sp], #32
  45a0e4:	b	4552f0 <_obstack_memory_used@@Base+0xf50>
  45a0e8:	ret
  45a0ec:	nop
  45a0f0:	b	45a018 <_obstack_memory_used@@Base+0x5c78>
  45a0f4:	nop
  45a0f8:	ret
  45a0fc:	nop
  45a100:	b	45a028 <_obstack_memory_used@@Base+0x5c88>
  45a104:	nop
  45a108:	stp	x29, x30, [sp, #-16]!
  45a10c:	mrs	x1, tpidr_el0
  45a110:	movz	x0, #0x0, lsl #16
  45a114:	movk	x0, #0x10
  45a118:	nop
  45a11c:	nop
  45a120:	mov	x29, sp
  45a124:	add	x0, x1, x0
  45a128:	ldp	x29, x30, [sp], #16
  45a12c:	ret
  45a130:	stp	x29, x30, [sp, #-16]!
  45a134:	mrs	x1, tpidr_el0
  45a138:	movz	x0, #0x0, lsl #16
  45a13c:	movk	x0, #0x10
  45a140:	nop
  45a144:	nop
  45a148:	mov	x29, sp
  45a14c:	add	x0, x1, x0
  45a150:	ldp	x29, x30, [sp], #16
  45a154:	ret
  45a158:	stp	x29, x30, [sp, #-64]!
  45a15c:	mov	x29, sp
  45a160:	stp	x19, x20, [sp, #16]
  45a164:	mov	x19, x1
  45a168:	mov	x20, x0
  45a16c:	mov	x0, x1
  45a170:	ldr	x1, [x1]
  45a174:	ldr	x1, [x1, #16]
  45a178:	str	x21, [sp, #32]
  45a17c:	mov	x21, x2
  45a180:	ldr	x2, [x2]
  45a184:	str	x2, [sp, #56]
  45a188:	blr	x1
  45a18c:	tst	w0, #0xff
  45a190:	b.eq	45a1a0 <_obstack_memory_used@@Base+0x5e00>  // b.none
  45a194:	ldr	x0, [sp, #56]
  45a198:	ldr	x0, [x0]
  45a19c:	str	x0, [sp, #56]
  45a1a0:	ldr	x4, [x20]
  45a1a4:	mov	x1, x19
  45a1a8:	mov	x0, x20
  45a1ac:	add	x2, sp, #0x38
  45a1b0:	mov	w3, #0x1                   	// #1
  45a1b4:	ldr	x4, [x4, #32]
  45a1b8:	blr	x4
  45a1bc:	tst	w0, #0xff
  45a1c0:	b.eq	45a1cc <_obstack_memory_used@@Base+0x5e2c>  // b.none
  45a1c4:	ldr	x1, [sp, #56]
  45a1c8:	str	x1, [x21]
  45a1cc:	ldp	x19, x20, [sp, #16]
  45a1d0:	ldr	x21, [sp, #32]
  45a1d4:	ldp	x29, x30, [sp], #64
  45a1d8:	ret
  45a1dc:	nop
  45a1e0:	and	w5, w0, #0xff
  45a1e4:	cmp	w5, #0x50
  45a1e8:	b.eq	45a300 <_obstack_memory_used@@Base+0x5f60>  // b.none
  45a1ec:	and	w4, w5, #0xf
  45a1f0:	cmp	w4, #0x4
  45a1f4:	b.eq	45a210 <_obstack_memory_used@@Base+0x5e70>  // b.none
  45a1f8:	b.ls	45a224 <_obstack_memory_used@@Base+0x5e84>  // b.plast
  45a1fc:	cmp	w4, #0xb
  45a200:	b.eq	45a324 <_obstack_memory_used@@Base+0x5f84>  // b.none
  45a204:	b.ls	45a280 <_obstack_memory_used@@Base+0x5ee0>  // b.plast
  45a208:	cmp	w4, #0xc
  45a20c:	b.ne	45a334 <_obstack_memory_used@@Base+0x5f94>  // b.any
  45a210:	mov	x0, x2
  45a214:	ldr	x4, [x0], #8
  45a218:	cbnz	x4, 45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a21c:	str	x4, [x3]
  45a220:	ret
  45a224:	cmp	w4, #0x2
  45a228:	b.eq	45a314 <_obstack_memory_used@@Base+0x5f74>  // b.none
  45a22c:	b.ls	45a248 <_obstack_memory_used@@Base+0x5ea8>  // b.plast
  45a230:	cmp	w4, #0x3
  45a234:	b.ne	45a334 <_obstack_memory_used@@Base+0x5f94>  // b.any
  45a238:	mov	x0, x2
  45a23c:	ldr	w4, [x0], #4
  45a240:	cbz	x4, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a244:	b	45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a248:	cbz	w4, 45a210 <_obstack_memory_used@@Base+0x5e70>
  45a24c:	cmp	w4, #0x1
  45a250:	b.ne	45a334 <_obstack_memory_used@@Base+0x5f94>  // b.any
  45a254:	mov	x0, x2
  45a258:	mov	x4, #0x0                   	// #0
  45a25c:	mov	w7, #0x0                   	// #0
  45a260:	ldrb	w8, [x0], #1
  45a264:	and	x6, x8, #0x7f
  45a268:	lsl	x6, x6, x7
  45a26c:	add	w7, w7, #0x7
  45a270:	orr	x4, x4, x6
  45a274:	tbnz	w8, #7, 45a260 <_obstack_memory_used@@Base+0x5ec0>
  45a278:	cbz	x4, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a27c:	b	45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a280:	cmp	w4, #0x9
  45a284:	b.eq	45a2a0 <_obstack_memory_used@@Base+0x5f00>  // b.none
  45a288:	cmp	w4, #0xa
  45a28c:	b.ne	45a334 <_obstack_memory_used@@Base+0x5f94>  // b.any
  45a290:	mov	x0, x2
  45a294:	ldrsh	x4, [x0], #2
  45a298:	cbz	x4, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a29c:	b	45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a2a0:	mov	x0, x2
  45a2a4:	mov	x4, #0x0                   	// #0
  45a2a8:	mov	w7, #0x0                   	// #0
  45a2ac:	ldrb	w8, [x0], #1
  45a2b0:	and	x6, x8, #0x7f
  45a2b4:	lsl	x6, x6, x7
  45a2b8:	add	w7, w7, #0x7
  45a2bc:	orr	x4, x4, x6
  45a2c0:	tbnz	w8, #7, 45a2ac <_obstack_memory_used@@Base+0x5f0c>
  45a2c4:	cmp	w7, #0x3f
  45a2c8:	b.hi	45a218 <_obstack_memory_used@@Base+0x5e78>  // b.pmore
  45a2cc:	tbz	w8, #6, 45a218 <_obstack_memory_used@@Base+0x5e78>
  45a2d0:	mov	x6, #0xffffffffffffffff    	// #-1
  45a2d4:	lsl	x7, x6, x7
  45a2d8:	orr	x4, x4, x7
  45a2dc:	nop
  45a2e0:	and	w6, w5, #0x70
  45a2e4:	cmp	w6, #0x10
  45a2e8:	csel	x1, x2, x1, eq  // eq = none
  45a2ec:	add	x4, x4, x1
  45a2f0:	tbz	w5, #7, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a2f4:	ldr	x4, [x4]
  45a2f8:	str	x4, [x3]
  45a2fc:	ret
  45a300:	add	x0, x2, #0x7
  45a304:	and	x0, x0, #0xfffffffffffffff8
  45a308:	ldr	x4, [x0], #8
  45a30c:	str	x4, [x3]
  45a310:	ret
  45a314:	mov	x0, x2
  45a318:	ldrh	w4, [x0], #2
  45a31c:	cbz	x4, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a320:	b	45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a324:	mov	x0, x2
  45a328:	ldrsw	x4, [x0], #4
  45a32c:	cbz	x4, 45a21c <_obstack_memory_used@@Base+0x5e7c>
  45a330:	b	45a2e0 <_obstack_memory_used@@Base+0x5f40>
  45a334:	stp	x29, x30, [sp, #-16]!
  45a338:	mov	x29, sp
  45a33c:	bl	402990 <abort@plt>
  45a340:	stp	x29, x30, [sp, #-32]!
  45a344:	mov	x3, x0
  45a348:	mov	x29, sp
  45a34c:	ldrb	w0, [x0, #40]
  45a350:	cmp	w0, #0xff
  45a354:	b.eq	45a3e0 <_obstack_memory_used@@Base+0x6040>  // b.none
  45a358:	and	w4, w0, #0x7
  45a35c:	cmp	w4, #0x2
  45a360:	b.eq	45a3c0 <_obstack_memory_used@@Base+0x6020>  // b.none
  45a364:	b.ls	45a390 <_obstack_memory_used@@Base+0x5ff0>  // b.plast
  45a368:	cmp	w4, #0x3
  45a36c:	neg	x2, x1, lsl #2
  45a370:	b.ne	45a3b4 <_obstack_memory_used@@Base+0x6014>  // b.any
  45a374:	ldp	x1, x4, [x3, #16]
  45a378:	add	x3, sp, #0x18
  45a37c:	add	x2, x4, x2
  45a380:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a384:	ldr	x0, [sp, #24]
  45a388:	ldp	x29, x30, [sp], #32
  45a38c:	ret
  45a390:	cbnz	w4, 45a3bc <_obstack_memory_used@@Base+0x601c>
  45a394:	neg	x2, x1, lsl #3
  45a398:	ldp	x1, x4, [x3, #16]
  45a39c:	add	x3, sp, #0x18
  45a3a0:	add	x2, x4, x2
  45a3a4:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a3a8:	ldr	x0, [sp, #24]
  45a3ac:	ldp	x29, x30, [sp], #32
  45a3b0:	ret
  45a3b4:	cmp	w4, #0x4
  45a3b8:	b.eq	45a394 <_obstack_memory_used@@Base+0x5ff4>  // b.none
  45a3bc:	bl	402990 <abort@plt>
  45a3c0:	neg	x2, x1, lsl #1
  45a3c4:	ldp	x1, x4, [x3, #16]
  45a3c8:	add	x3, sp, #0x18
  45a3cc:	add	x2, x4, x2
  45a3d0:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a3d4:	ldr	x0, [sp, #24]
  45a3d8:	ldp	x29, x30, [sp], #32
  45a3dc:	ret
  45a3e0:	ldp	x1, x4, [x3, #16]
  45a3e4:	mov	x2, #0x0                   	// #0
  45a3e8:	add	x3, sp, #0x18
  45a3ec:	add	x2, x4, x2
  45a3f0:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a3f4:	ldr	x0, [sp, #24]
  45a3f8:	ldp	x29, x30, [sp], #32
  45a3fc:	ret
  45a400:	stp	x29, x30, [sp, #-64]!
  45a404:	mov	x29, sp
  45a408:	stp	x21, x22, [sp, #32]
  45a40c:	mov	x22, x0
  45a410:	mvn	x0, x3
  45a414:	stp	x19, x20, [sp, #16]
  45a418:	add	x21, sp, #0x38
  45a41c:	mov	x20, x1
  45a420:	ldr	x19, [x22, #24]
  45a424:	str	x2, [sp, #56]
  45a428:	add	x19, x19, x0
  45a42c:	nop
  45a430:	mov	x1, #0x0                   	// #0
  45a434:	mov	w3, #0x0                   	// #0
  45a438:	ldrb	w4, [x19], #1
  45a43c:	and	x2, x4, #0x7f
  45a440:	lsl	x2, x2, x3
  45a444:	add	w3, w3, #0x7
  45a448:	orr	x1, x1, x2
  45a44c:	tbnz	w4, #7, 45a438 <_obstack_memory_used@@Base+0x6098>
  45a450:	cbz	x1, 45a480 <_obstack_memory_used@@Base+0x60e0>
  45a454:	mov	x0, x22
  45a458:	bl	45a340 <_obstack_memory_used@@Base+0x5fa0>
  45a45c:	mov	x2, x21
  45a460:	mov	x1, x20
  45a464:	bl	45a158 <_obstack_memory_used@@Base+0x5db8>
  45a468:	ands	w0, w0, #0xff
  45a46c:	b.eq	45a430 <_obstack_memory_used@@Base+0x6090>  // b.none
  45a470:	ldp	x19, x20, [sp, #16]
  45a474:	ldp	x21, x22, [sp, #32]
  45a478:	ldp	x29, x30, [sp], #64
  45a47c:	ret
  45a480:	mov	w0, #0x0                   	// #0
  45a484:	ldp	x19, x20, [sp, #16]
  45a488:	ldp	x21, x22, [sp, #32]
  45a48c:	ldp	x29, x30, [sp], #64
  45a490:	ret
  45a494:	nop
  45a498:	and	w3, w0, #0xff
  45a49c:	cmp	w3, #0xff
  45a4a0:	b.eq	45a4f0 <_obstack_memory_used@@Base+0x6150>  // b.none
  45a4a4:	and	w2, w3, #0x70
  45a4a8:	mov	x0, x1
  45a4ac:	cmp	w2, #0x30
  45a4b0:	b.eq	45a4f8 <_obstack_memory_used@@Base+0x6158>  // b.none
  45a4b4:	b.hi	45a4c4 <_obstack_memory_used@@Base+0x6124>  // b.pmore
  45a4b8:	cmp	w2, #0x20
  45a4bc:	b.ne	45a4d0 <_obstack_memory_used@@Base+0x6130>  // b.any
  45a4c0:	b	46c308 <_obstack_memory_used@@Base+0x17f68>
  45a4c4:	cmp	w2, #0x40
  45a4c8:	b.ne	45a4e8 <_obstack_memory_used@@Base+0x6148>  // b.any
  45a4cc:	b	46c2d0 <_obstack_memory_used@@Base+0x17f30>
  45a4d0:	b.hi	45a4dc <_obstack_memory_used@@Base+0x613c>  // b.pmore
  45a4d4:	tst	w3, #0x60
  45a4d8:	b.eq	45a4f0 <_obstack_memory_used@@Base+0x6150>  // b.none
  45a4dc:	stp	x29, x30, [sp, #-16]!
  45a4e0:	mov	x29, sp
  45a4e4:	bl	402990 <abort@plt>
  45a4e8:	cmp	w2, #0x50
  45a4ec:	b.ne	45a4dc <_obstack_memory_used@@Base+0x613c>  // b.any
  45a4f0:	mov	x0, #0x0                   	// #0
  45a4f4:	ret
  45a4f8:	b	46c300 <_obstack_memory_used@@Base+0x17f60>
  45a4fc:	nop
  45a500:	stp	x29, x30, [sp, #-48]!
  45a504:	mov	x29, sp
  45a508:	stp	x19, x20, [sp, #16]
  45a50c:	mov	x19, x1
  45a510:	mov	x20, x2
  45a514:	stp	x21, x22, [sp, #32]
  45a518:	mov	x1, #0x0                   	// #0
  45a51c:	mov	x21, x0
  45a520:	cbz	x0, 45a52c <_obstack_memory_used@@Base+0x618c>
  45a524:	bl	46c2d0 <_obstack_memory_used@@Base+0x17f30>
  45a528:	mov	x1, x0
  45a52c:	str	x1, [x20]
  45a530:	ldrb	w22, [x19], #1
  45a534:	cmp	w22, #0xff
  45a538:	b.ne	45a5c0 <_obstack_memory_used@@Base+0x6220>  // b.any
  45a53c:	mov	x0, x19
  45a540:	str	x1, [x20, #8]
  45a544:	ldrb	w1, [x0], #1
  45a548:	strb	w1, [x20, #40]
  45a54c:	cmp	w1, #0xff
  45a550:	b.eq	45a5f8 <_obstack_memory_used@@Base+0x6258>  // b.none
  45a554:	mov	x5, #0x0                   	// #0
  45a558:	mov	w3, #0x0                   	// #0
  45a55c:	nop
  45a560:	ldrb	w4, [x0], #1
  45a564:	and	x1, x4, #0x7f
  45a568:	lsl	x1, x1, x3
  45a56c:	add	w3, w3, #0x7
  45a570:	orr	x5, x5, x1
  45a574:	tbnz	w4, #7, 45a560 <_obstack_memory_used@@Base+0x61c0>
  45a578:	add	x5, x0, x5
  45a57c:	str	x5, [x20, #24]
  45a580:	ldrb	w1, [x0], #1
  45a584:	mov	x5, #0x0                   	// #0
  45a588:	mov	w3, #0x0                   	// #0
  45a58c:	strb	w1, [x20, #41]
  45a590:	ldrb	w4, [x0], #1
  45a594:	and	x1, x4, #0x7f
  45a598:	lsl	x1, x1, x3
  45a59c:	add	w3, w3, #0x7
  45a5a0:	orr	x5, x5, x1
  45a5a4:	tbnz	w4, #7, 45a590 <_obstack_memory_used@@Base+0x61f0>
  45a5a8:	add	x5, x0, x5
  45a5ac:	ldp	x21, x22, [sp, #32]
  45a5b0:	str	x5, [x20, #32]
  45a5b4:	ldp	x19, x20, [sp, #16]
  45a5b8:	ldp	x29, x30, [sp], #48
  45a5bc:	ret
  45a5c0:	mov	x1, x21
  45a5c4:	mov	w0, w22
  45a5c8:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a5cc:	mov	x1, x0
  45a5d0:	mov	x2, x19
  45a5d4:	mov	w0, w22
  45a5d8:	add	x3, x20, #0x8
  45a5dc:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a5e0:	mov	x19, x0
  45a5e4:	mov	x0, x19
  45a5e8:	ldrb	w1, [x0], #1
  45a5ec:	strb	w1, [x20, #40]
  45a5f0:	cmp	w1, #0xff
  45a5f4:	b.ne	45a554 <_obstack_memory_used@@Base+0x61b4>  // b.any
  45a5f8:	str	xzr, [x20, #24]
  45a5fc:	b	45a580 <_obstack_memory_used@@Base+0x61e0>
  45a600:	stp	x29, x30, [sp, #-240]!
  45a604:	cmp	w0, #0x1
  45a608:	mov	x29, sp
  45a60c:	str	wzr, [sp, #156]
  45a610:	str	xzr, [sp, #160]
  45a614:	b.ne	45a678 <_obstack_memory_used@@Base+0x62d8>  // b.any
  45a618:	stp	x19, x20, [sp, #16]
  45a61c:	mov	x20, #0xd500                	// #54528
  45a620:	movk	x20, #0xbcd4, lsl #16
  45a624:	movk	x20, #0xaabc, lsl #32
  45a628:	stp	x21, x22, [sp, #32]
  45a62c:	movk	x20, #0xb8b1, lsl #48
  45a630:	add	x0, x2, x20
  45a634:	stp	x23, x24, [sp, #48]
  45a638:	cmp	x0, #0x1
  45a63c:	stp	x25, x26, [sp, #64]
  45a640:	mov	w22, w1
  45a644:	mov	x21, x3
  45a648:	stp	x27, x28, [sp, #80]
  45a64c:	mov	x19, x4
  45a650:	str	x0, [sp, #104]
  45a654:	cset	w0, ls  // ls = plast
  45a658:	str	w0, [sp, #128]
  45a65c:	cmp	w1, #0x6
  45a660:	csel	w27, w0, wzr, eq  // eq = none
  45a664:	cbz	w27, 45a684 <_obstack_memory_used@@Base+0x62e4>
  45a668:	ldur	x26, [x3, #-16]
  45a66c:	cbnz	x26, 45a7f8 <_obstack_memory_used@@Base+0x6458>
  45a670:	mov	x0, x21
  45a674:	bl	45fec0 <_obstack_memory_used@@Base+0xbb20>
  45a678:	mov	w0, #0x3                   	// #3
  45a67c:	ldp	x29, x30, [sp], #240
  45a680:	ret
  45a684:	mov	x0, x4
  45a688:	bl	46c2c8 <_obstack_memory_used@@Base+0x17f28>
  45a68c:	str	x0, [sp, #112]
  45a690:	cbz	x0, 45a85c <_obstack_memory_used@@Base+0x64bc>
  45a694:	ldr	x1, [sp, #112]
  45a698:	add	x0, sp, #0xc0
  45a69c:	mov	x2, x0
  45a6a0:	str	x0, [sp, #120]
  45a6a4:	mov	x0, x19
  45a6a8:	bl	45a500 <_obstack_memory_used@@Base+0x6160>
  45a6ac:	mov	x20, x0
  45a6b0:	ldrb	w0, [sp, #232]
  45a6b4:	mov	x1, x19
  45a6b8:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a6bc:	mov	x3, x0
  45a6c0:	add	x1, sp, #0x9c
  45a6c4:	mov	x0, x19
  45a6c8:	str	x3, [sp, #208]
  45a6cc:	bl	46c2a8 <_obstack_memory_used@@Base+0x17f08>
  45a6d0:	ldr	w3, [sp, #156]
  45a6d4:	ldr	x1, [sp, #224]
  45a6d8:	cmp	w3, #0x0
  45a6dc:	cset	x3, eq  // eq = none
  45a6e0:	sub	x23, x0, x3
  45a6e4:	cmp	x20, x1
  45a6e8:	b.cs	45a7c0 <_obstack_memory_used@@Base+0x6420>  // b.hs, b.nlast
  45a6ec:	add	x26, sp, #0xa8
  45a6f0:	add	x25, sp, #0xb0
  45a6f4:	add	x24, sp, #0xb8
  45a6f8:	ldrb	w28, [sp, #233]
  45a6fc:	mov	x1, #0x0                   	// #0
  45a700:	mov	w0, w28
  45a704:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a708:	mov	x2, x20
  45a70c:	mov	x3, x26
  45a710:	mov	x1, x0
  45a714:	mov	w0, w28
  45a718:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a71c:	ldrb	w20, [sp, #233]
  45a720:	mov	x28, x0
  45a724:	mov	x1, #0x0                   	// #0
  45a728:	mov	w0, w20
  45a72c:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a730:	mov	x2, x28
  45a734:	mov	x3, x25
  45a738:	mov	x1, x0
  45a73c:	mov	w0, w20
  45a740:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a744:	ldrb	w20, [sp, #233]
  45a748:	mov	x28, x0
  45a74c:	mov	x1, #0x0                   	// #0
  45a750:	mov	w0, w20
  45a754:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a758:	mov	x3, x24
  45a75c:	mov	x1, x0
  45a760:	mov	x2, x28
  45a764:	mov	w0, w20
  45a768:	bl	45a1e0 <_obstack_memory_used@@Base+0x5e40>
  45a76c:	mov	x20, x0
  45a770:	mov	w3, #0x0                   	// #0
  45a774:	mov	x0, #0x0                   	// #0
  45a778:	ldrb	w4, [x20], #1
  45a77c:	and	x1, x4, #0x7f
  45a780:	lsl	x1, x1, x3
  45a784:	add	w3, w3, #0x7
  45a788:	orr	x0, x0, x1
  45a78c:	tbnz	w4, #7, 45a778 <_obstack_memory_used@@Base+0x63d8>
  45a790:	ldr	x3, [sp, #168]
  45a794:	ldr	x1, [sp, #192]
  45a798:	add	x1, x1, x3
  45a79c:	cmp	x1, x23
  45a7a0:	b.hi	45a7c0 <_obstack_memory_used@@Base+0x6420>  // b.pmore
  45a7a4:	ldr	x3, [sp, #176]
  45a7a8:	add	x1, x1, x3
  45a7ac:	cmp	x1, x23
  45a7b0:	b.hi	45a83c <_obstack_memory_used@@Base+0x649c>  // b.pmore
  45a7b4:	ldr	x0, [sp, #224]
  45a7b8:	cmp	x0, x20
  45a7bc:	b.hi	45a6f8 <_obstack_memory_used@@Base+0x6358>  // b.pmore
  45a7c0:	tbz	w22, #0, 45a87c <_obstack_memory_used@@Base+0x64dc>
  45a7c4:	mov	w24, #0x0                   	// #0
  45a7c8:	mov	x26, #0x0                   	// #0
  45a7cc:	mov	x23, #0x0                   	// #0
  45a7d0:	ldr	x0, [sp, #104]
  45a7d4:	cmp	x0, #0x1
  45a7d8:	mov	w0, #0x6                   	// #6
  45a7dc:	b.hi	45a860 <_obstack_memory_used@@Base+0x64c0>  // b.pmore
  45a7e0:	ldr	x2, [sp, #112]
  45a7e4:	stur	w24, [x21, #-36]
  45a7e8:	ldr	x1, [sp, #160]
  45a7ec:	stp	x23, x2, [x21, #-32]
  45a7f0:	stp	x26, x1, [x21, #-16]
  45a7f4:	b	45a860 <_obstack_memory_used@@Base+0x64c0>
  45a7f8:	ldur	w24, [x3, #-36]
  45a7fc:	ldur	x0, [x3, #-24]
  45a800:	str	x0, [sp, #112]
  45a804:	tbnz	w24, #31, 45a890 <_obstack_memory_used@@Base+0x64f0>
  45a808:	mov	x2, x21
  45a80c:	mov	x0, x19
  45a810:	mov	w1, #0x0                   	// #0
  45a814:	bl	46c248 <_obstack_memory_used@@Base+0x17ea8>
  45a818:	sxtw	x2, w24
  45a81c:	mov	x0, x19
  45a820:	mov	w1, #0x1                   	// #1
  45a824:	bl	46c248 <_obstack_memory_used@@Base+0x17ea8>
  45a828:	mov	x0, x19
  45a82c:	mov	x1, x26
  45a830:	bl	46c2c0 <_obstack_memory_used@@Base+0x17f20>
  45a834:	mov	w0, #0x7                   	// #7
  45a838:	b	45a860 <_obstack_memory_used@@Base+0x64c0>
  45a83c:	ldr	x26, [sp, #184]
  45a840:	cbz	x26, 45a85c <_obstack_memory_used@@Base+0x64bc>
  45a844:	ldr	x1, [sp, #200]
  45a848:	add	x26, x26, x1
  45a84c:	cbnz	x0, 45a8c8 <_obstack_memory_used@@Base+0x6528>
  45a850:	cbz	x26, 45a85c <_obstack_memory_used@@Base+0x64bc>
  45a854:	and	w24, w22, #0x1
  45a858:	tbz	w22, #0, 45a808 <_obstack_memory_used@@Base+0x6468>
  45a85c:	mov	w0, #0x8                   	// #8
  45a860:	ldp	x19, x20, [sp, #16]
  45a864:	ldp	x21, x22, [sp, #32]
  45a868:	ldp	x23, x24, [sp, #48]
  45a86c:	ldp	x25, x26, [sp, #64]
  45a870:	ldp	x27, x28, [sp, #80]
  45a874:	ldp	x29, x30, [sp], #240
  45a878:	ret
  45a87c:	tbnz	w22, #3, 45a88c <_obstack_memory_used@@Base+0x64ec>
  45a880:	ldr	x0, [sp, #104]
  45a884:	cmp	x0, #0x1
  45a888:	b.ls	45a670 <_obstack_memory_used@@Base+0x62d0>  // b.plast
  45a88c:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45a890:	ldr	x1, [sp, #112]
  45a894:	add	x2, sp, #0xc0
  45a898:	mov	x0, x19
  45a89c:	bl	45a500 <_obstack_memory_used@@Base+0x6160>
  45a8a0:	ldrb	w0, [sp, #232]
  45a8a4:	mov	x1, x19
  45a8a8:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a8ac:	mov	x2, x0
  45a8b0:	ldrb	w0, [sp, #232]
  45a8b4:	mov	x1, x19
  45a8b8:	str	x2, [sp, #208]
  45a8bc:	bl	45a498 <_obstack_memory_used@@Base+0x60f8>
  45a8c0:	stur	x0, [x21, #-16]
  45a8c4:	b	45a808 <_obstack_memory_used@@Base+0x6468>
  45a8c8:	ldr	x4, [sp, #224]
  45a8cc:	sub	x0, x0, #0x1
  45a8d0:	add	x23, x4, x0
  45a8d4:	cbz	x26, 45a85c <_obstack_memory_used@@Base+0x64bc>
  45a8d8:	cbz	x23, 45a854 <_obstack_memory_used@@Base+0x64b4>
  45a8dc:	and	w0, w22, #0x8
  45a8e0:	str	w0, [sp, #132]
  45a8e4:	tbnz	w22, #3, 45aa94 <_obstack_memory_used@@Base+0x66f4>
  45a8e8:	ldr	x0, [sp, #104]
  45a8ec:	adrp	x6, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45a8f0:	cmp	x0, #0x1
  45a8f4:	ldr	x6, [x6, #3848]
  45a8f8:	b.ls	45aaa0 <_obstack_memory_used@@Base+0x6700>  // b.plast
  45a8fc:	add	x28, sp, #0xa0
  45a900:	mov	x5, #0x1                   	// #1
  45a904:	nop
  45a908:	mov	x25, x23
  45a90c:	mov	x24, #0x0                   	// #0
  45a910:	mov	w1, #0x0                   	// #0
  45a914:	nop
  45a918:	ldrb	w2, [x25], #1
  45a91c:	and	x0, x2, #0x7f
  45a920:	lsl	x0, x0, x1
  45a924:	add	w1, w1, #0x7
  45a928:	orr	x24, x24, x0
  45a92c:	tbnz	w2, #7, 45a918 <_obstack_memory_used@@Base+0x6578>
  45a930:	cmp	w1, #0x3f
  45a934:	b.hi	45a94c <_obstack_memory_used@@Base+0x65ac>  // b.pmore
  45a938:	lsl	x0, x5, x1
  45a93c:	neg	x0, x0
  45a940:	orr	x0, x24, x0
  45a944:	tst	x2, #0x40
  45a948:	csel	x24, x0, x24, ne  // ne = any
  45a94c:	mov	x8, x25
  45a950:	mov	x20, #0x0                   	// #0
  45a954:	mov	w1, #0x0                   	// #0
  45a958:	ldrb	w2, [x8], #1
  45a95c:	and	x0, x2, #0x7f
  45a960:	lsl	x0, x0, x1
  45a964:	add	w1, w1, #0x7
  45a968:	orr	x20, x20, x0
  45a96c:	tbnz	w2, #7, 45a958 <_obstack_memory_used@@Base+0x65b8>
  45a970:	cmp	w1, #0x3f
  45a974:	b.hi	45a98c <_obstack_memory_used@@Base+0x65ec>  // b.pmore
  45a978:	lsl	x0, x5, x1
  45a97c:	neg	x0, x0
  45a980:	orr	x0, x20, x0
  45a984:	tst	x2, #0x40
  45a988:	csel	x20, x0, x20, ne  // ne = any
  45a98c:	cmp	x24, #0x0
  45a990:	cbz	x24, 45aa54 <_obstack_memory_used@@Base+0x66b4>
  45a994:	b.gt	45a9f8 <_obstack_memory_used@@Base+0x6658>
  45a998:	ldr	w0, [sp, #132]
  45a99c:	cmp	w0, #0x0
  45a9a0:	ldr	w0, [sp, #128]
  45a9a4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  45a9a8:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  45a9ac:	b.ne	45aa5c <_obstack_memory_used@@Base+0x66bc>  // b.any
  45a9b0:	ldr	x0, [sp, #216]
  45a9b4:	mvn	x8, x24
  45a9b8:	mov	x9, #0x0                   	// #0
  45a9bc:	mov	w1, #0x0                   	// #0
  45a9c0:	add	x8, x0, x8
  45a9c4:	nop
  45a9c8:	ldrb	w2, [x8], #1
  45a9cc:	and	x0, x2, #0x7f
  45a9d0:	lsl	x0, x0, x1
  45a9d4:	add	w1, w1, #0x7
  45a9d8:	orr	x9, x9, x0
  45a9dc:	tbnz	w2, #7, 45a9c8 <_obstack_memory_used@@Base+0x6628>
  45a9e0:	cmp	x9, #0x0
  45a9e4:	cset	w0, eq  // eq = none
  45a9e8:	cbnz	w0, 45aa34 <_obstack_memory_used@@Base+0x6694>
  45a9ec:	cbz	x20, 45aa8c <_obstack_memory_used@@Base+0x66ec>
  45a9f0:	add	x23, x25, x20
  45a9f4:	b	45a908 <_obstack_memory_used@@Base+0x6568>
  45a9f8:	ldr	x0, [sp, #120]
  45a9fc:	mov	x1, x24
  45aa00:	str	x6, [sp, #136]
  45aa04:	bl	45a340 <_obstack_memory_used@@Base+0x5fa0>
  45aa08:	cbz	x0, 45aa34 <_obstack_memory_used@@Base+0x6694>
  45aa0c:	ldr	x6, [sp, #136]
  45aa10:	mov	x5, #0x1                   	// #1
  45aa14:	cbz	x6, 45a9ec <_obstack_memory_used@@Base+0x664c>
  45aa18:	mov	x1, x6
  45aa1c:	mov	x2, x28
  45aa20:	bl	45a158 <_obstack_memory_used@@Base+0x5db8>
  45aa24:	tst	w0, #0xff
  45aa28:	mov	x5, #0x1                   	// #1
  45aa2c:	ldr	x6, [sp, #136]
  45aa30:	b.eq	45a9ec <_obstack_memory_used@@Base+0x664c>  // b.none
  45aa34:	tbnz	w22, #0, 45a7d0 <_obstack_memory_used@@Base+0x6430>
  45aa38:	ldr	w0, [sp, #132]
  45aa3c:	cbnz	w0, 45aa4c <_obstack_memory_used@@Base+0x66ac>
  45aa40:	ldr	x0, [sp, #104]
  45aa44:	cmp	x0, #0x1
  45aa48:	b.ls	45a804 <_obstack_memory_used@@Base+0x6464>  // b.plast
  45aa4c:	tbz	w24, #31, 45a808 <_obstack_memory_used@@Base+0x6468>
  45aa50:	bl	45ac50 <_obstack_memory_used@@Base+0x68b0>
  45aa54:	mov	w27, #0x1                   	// #1
  45aa58:	b	45a9ec <_obstack_memory_used@@Base+0x664c>
  45aa5c:	ldr	x0, [sp, #120]
  45aa60:	mov	x1, x6
  45aa64:	ldr	x2, [sp, #160]
  45aa68:	mov	x3, x24
  45aa6c:	str	x6, [sp, #136]
  45aa70:	bl	45a400 <_obstack_memory_used@@Base+0x6060>
  45aa74:	and	w0, w0, #0xff
  45aa78:	eor	w0, w0, #0x1
  45aa7c:	mov	x5, #0x1                   	// #1
  45aa80:	ldr	x6, [sp, #136]
  45aa84:	cbz	w0, 45a9ec <_obstack_memory_used@@Base+0x664c>
  45aa88:	b	45aa34 <_obstack_memory_used@@Base+0x6694>
  45aa8c:	cbnz	w27, 45a854 <_obstack_memory_used@@Base+0x64b4>
  45aa90:	b	45a85c <_obstack_memory_used@@Base+0x64bc>
  45aa94:	adrp	x6, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45aa98:	ldr	x6, [x6, #3784]
  45aa9c:	b	45a8fc <_obstack_memory_used@@Base+0x655c>
  45aaa0:	mov	x0, x21
  45aaa4:	ldr	x1, [x0], #32
  45aaa8:	tbz	w1, #0, 45aab0 <_obstack_memory_used@@Base+0x6710>
  45aaac:	ldur	x0, [x21, #-80]
  45aab0:	ldur	x6, [x0, #-112]
  45aab4:	str	x0, [sp, #160]
  45aab8:	b	45a8fc <_obstack_memory_used@@Base+0x655c>
  45aabc:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45aac0:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45aac4:	nop
  45aac8:	stp	x29, x30, [sp, #-112]!
  45aacc:	mov	x29, sp
  45aad0:	stp	x19, x20, [sp, #16]
  45aad4:	mov	x19, x0
  45aad8:	stp	x21, x22, [sp, #32]
  45aadc:	str	x23, [sp, #48]
  45aae0:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45aae4:	ldp	x0, x21, [x19, #-64]
  45aae8:	ldur	x1, [x19, #-16]
  45aaec:	str	x1, [sp, #80]
  45aaf0:	ldur	w20, [x19, #-36]
  45aaf4:	ldur	x19, [x19, #-24]
  45aaf8:	bl	45ac10 <_obstack_memory_used@@Base+0x6870>
  45aafc:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45ab00:	bl	45a108 <_obstack_memory_used@@Base+0x5d68>
  45ab04:	ldr	x22, [x0]
  45ab08:	ldr	x0, [x22, #80]
  45ab0c:	tbz	w0, #0, 45ab90 <_obstack_memory_used@@Base+0x67f0>
  45ab10:	ldr	x22, [x22]
  45ab14:	add	x23, sp, #0x40
  45ab18:	mov	x1, x19
  45ab1c:	mov	x2, x23
  45ab20:	mov	x0, #0x0                   	// #0
  45ab24:	bl	45a500 <_obstack_memory_used@@Base+0x6160>
  45ab28:	ldur	x1, [x22, #-112]
  45ab2c:	sxtw	x20, w20
  45ab30:	mov	x3, x20
  45ab34:	mov	x2, x22
  45ab38:	mov	x0, x23
  45ab3c:	bl	45a400 <_obstack_memory_used@@Base+0x6060>
  45ab40:	tst	w0, #0xff
  45ab44:	b.ne	45abac <_obstack_memory_used@@Base+0x680c>  // b.any
  45ab48:	adrp	x19, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ab4c:	mov	x3, x20
  45ab50:	mov	x0, x23
  45ab54:	mov	x2, #0x0                   	// #0
  45ab58:	ldr	x1, [x19, #3976]
  45ab5c:	bl	45a400 <_obstack_memory_used@@Base+0x6060>
  45ab60:	tst	w0, #0xff
  45ab64:	b.eq	45abb0 <_obstack_memory_used@@Base+0x6810>  // b.none
  45ab68:	mov	x0, #0x8                   	// #8
  45ab6c:	bl	459d48 <_obstack_memory_used@@Base+0x59a8>
  45ab70:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ab74:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ab78:	ldr	x1, [x19, #3976]
  45ab7c:	ldr	x3, [x3, #3744]
  45ab80:	ldr	x2, [x2, #3704]
  45ab84:	add	x3, x3, #0x10
  45ab88:	str	x3, [x0]
  45ab8c:	bl	45ad28 <_obstack_memory_used@@Base+0x6988>
  45ab90:	add	x22, x22, #0x70
  45ab94:	b	45ab14 <_obstack_memory_used@@Base+0x6774>
  45ab98:	mov	x19, x0
  45ab9c:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  45aba0:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  45aba4:	mov	x0, x19
  45aba8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45abac:	bl	45ad88 <_obstack_memory_used@@Base+0x69e8>
  45abb0:	mov	x0, x21
  45abb4:	bl	45abb8 <_obstack_memory_used@@Base+0x6818>
  45abb8:	stp	x29, x30, [sp, #-16]!
  45abbc:	mov	x29, sp
  45abc0:	blr	x0
  45abc4:	bl	402990 <abort@plt>
  45abc8:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45abcc:	bl	402990 <abort@plt>
  45abd0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45abd4:	mov	x2, x0
  45abd8:	ldr	x1, [x1, #3608]
  45abdc:	ldaxr	x0, [x1]
  45abe0:	stlxr	w3, x2, [x1]
  45abe4:	cbnz	w3, 45abdc <_obstack_memory_used@@Base+0x683c>
  45abe8:	ret
  45abec:	nop
  45abf0:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45abf4:	ldr	x0, [x0, #3608]
  45abf8:	ldar	x0, [x0]
  45abfc:	ret
  45ac00:	stp	x29, x30, [sp, #-16]!
  45ac04:	mov	x29, sp
  45ac08:	bl	45abf0 <_obstack_memory_used@@Base+0x6850>
  45ac0c:	bl	45abb8 <_obstack_memory_used@@Base+0x6818>
  45ac10:	stp	x29, x30, [sp, #-16]!
  45ac14:	mov	x29, sp
  45ac18:	blr	x0
  45ac1c:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45ac20:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ac24:	mov	x2, x0
  45ac28:	ldr	x1, [x1, #3832]
  45ac2c:	ldaxr	x0, [x1]
  45ac30:	stlxr	w3, x2, [x1]
  45ac34:	cbnz	w3, 45ac2c <_obstack_memory_used@@Base+0x688c>
  45ac38:	ret
  45ac3c:	nop
  45ac40:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ac44:	ldr	x0, [x0, #3832]
  45ac48:	ldar	x0, [x0]
  45ac4c:	ret
  45ac50:	stp	x29, x30, [sp, #-16]!
  45ac54:	mov	x29, sp
  45ac58:	bl	45ac40 <_obstack_memory_used@@Base+0x68a0>
  45ac5c:	bl	45ac10 <_obstack_memory_used@@Base+0x6870>
  45ac60:	stp	x29, x30, [sp, #-32]!
  45ac64:	cmp	w0, #0x1
  45ac68:	mov	x29, sp
  45ac6c:	b.hi	45acb8 <_obstack_memory_used@@Base+0x6918>  // b.pmore
  45ac70:	sub	x0, x1, #0x60
  45ac74:	ldaxr	w2, [x0]
  45ac78:	sub	w2, w2, #0x1
  45ac7c:	stlxr	w3, w2, [x0]
  45ac80:	cbnz	w3, 45ac74 <_obstack_memory_used@@Base+0x68d4>
  45ac84:	cbnz	w2, 45acb0 <_obstack_memory_used@@Base+0x6910>
  45ac88:	ldur	x2, [x1, #-72]
  45ac8c:	str	x19, [sp, #16]
  45ac90:	add	x19, x1, #0x20
  45ac94:	cbz	x2, 45aca0 <_obstack_memory_used@@Base+0x6900>
  45ac98:	mov	x0, x19
  45ac9c:	blr	x2
  45aca0:	mov	x0, x19
  45aca4:	ldr	x19, [sp, #16]
  45aca8:	ldp	x29, x30, [sp], #32
  45acac:	b	459db0 <_obstack_memory_used@@Base+0x5a10>
  45acb0:	ldp	x29, x30, [sp], #32
  45acb4:	ret
  45acb8:	ldur	x0, [x1, #-56]
  45acbc:	str	x19, [sp, #16]
  45acc0:	bl	45abb8 <_obstack_memory_used@@Base+0x6818>
  45acc4:	nop
  45acc8:	stp	x29, x30, [sp, #-32]!
  45accc:	mov	x29, sp
  45acd0:	stp	x19, x20, [sp, #16]
  45acd4:	mov	x19, x0
  45acd8:	sub	x20, x0, #0x80
  45acdc:	stur	wzr, [x0, #-128]
  45ace0:	stp	x1, x2, [x0, #-112]
  45ace4:	bl	45ac40 <_obstack_memory_used@@Base+0x68a0>
  45ace8:	stur	x0, [x19, #-96]
  45acec:	bl	45abf0 <_obstack_memory_used@@Base+0x6850>
  45acf0:	mov	x3, x0
  45acf4:	mov	x2, #0x2b00                	// #11008
  45acf8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x5c60>
  45acfc:	movk	x2, #0x432b, lsl #16
  45ad00:	add	x1, x1, #0xc60
  45ad04:	movk	x2, #0x5543, lsl #32
  45ad08:	stur	x3, [x19, #-88]
  45ad0c:	movk	x2, #0x474e, lsl #48
  45ad10:	stp	x2, x1, [x19, #-32]
  45ad14:	mov	x0, x20
  45ad18:	ldp	x19, x20, [sp, #16]
  45ad1c:	ldp	x29, x30, [sp], #32
  45ad20:	ret
  45ad24:	nop
  45ad28:	stp	x29, x30, [sp, #-48]!
  45ad2c:	mov	x29, sp
  45ad30:	stp	x19, x20, [sp, #16]
  45ad34:	mov	x19, x0
  45ad38:	mov	x20, x1
  45ad3c:	str	x21, [sp, #32]
  45ad40:	mov	x21, x2
  45ad44:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  45ad48:	mov	x3, x0
  45ad4c:	mov	x2, x21
  45ad50:	mov	x1, x20
  45ad54:	mov	x0, x19
  45ad58:	ldr	w4, [x3, #8]
  45ad5c:	add	w4, w4, #0x1
  45ad60:	str	w4, [x3, #8]
  45ad64:	bl	45acc8 <_obstack_memory_used@@Base+0x6928>
  45ad68:	mov	x19, x0
  45ad6c:	mov	w0, #0x1                   	// #1
  45ad70:	str	w0, [x19], #96
  45ad74:	mov	x0, x19
  45ad78:	bl	46c428 <_obstack_memory_used@@Base+0x18088>
  45ad7c:	mov	x0, x19
  45ad80:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45ad84:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45ad88:	stp	x29, x30, [sp, #-32]!
  45ad8c:	mov	x29, sp
  45ad90:	str	x19, [sp, #16]
  45ad94:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  45ad98:	ldr	w2, [x0, #8]
  45ad9c:	ldr	x1, [x0]
  45ada0:	add	w2, w2, #0x1
  45ada4:	str	w2, [x0, #8]
  45ada8:	cbz	x1, 45ade4 <_obstack_memory_used@@Base+0x6a44>
  45adac:	mov	x3, #0xd500                	// #54528
  45adb0:	ldr	x2, [x1, #80]
  45adb4:	movk	x3, #0xbcd4, lsl #16
  45adb8:	movk	x3, #0xaabc, lsl #32
  45adbc:	movk	x3, #0xb8b1, lsl #48
  45adc0:	add	x2, x2, x3
  45adc4:	cmp	x2, #0x1
  45adc8:	b.ls	45ade8 <_obstack_memory_used@@Base+0x6a48>  // b.plast
  45adcc:	str	xzr, [x0]
  45add0:	add	x19, x1, #0x50
  45add4:	mov	x0, x19
  45add8:	bl	46c7c8 <_obstack_memory_used@@Base+0x18428>
  45addc:	mov	x0, x19
  45ade0:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45ade4:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45ade8:	ldr	w0, [x1, #40]
  45adec:	neg	w0, w0
  45adf0:	str	w0, [x1, #40]
  45adf4:	b	45add0 <_obstack_memory_used@@Base+0x6a30>
  45adf8:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  45adfc:	mov	x2, x0
  45ae00:	add	x1, x1, #0xb30
  45ae04:	ldaxr	x0, [x1]
  45ae08:	stlxr	w3, x2, [x1]
  45ae0c:	cbnz	w3, 45ae04 <_obstack_memory_used@@Base+0x6a64>
  45ae10:	ret
  45ae14:	nop
  45ae18:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  45ae1c:	add	x0, x0, #0xb30
  45ae20:	ldar	x0, [x0]
  45ae24:	ret
  45ae28:	stp	x29, x30, [sp, #-16]!
  45ae2c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ae30:	add	x1, x1, #0x700
  45ae34:	mov	x2, #0x1b                  	// #27
  45ae38:	mov	x29, sp
  45ae3c:	mov	w0, #0x2                   	// #2
  45ae40:	bl	402970 <write@plt>
  45ae44:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45ae48:	stp	x29, x30, [sp, #-16]!
  45ae4c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ae50:	add	x1, x1, #0x720
  45ae54:	mov	x2, #0x1e                  	// #30
  45ae58:	mov	x29, sp
  45ae5c:	mov	w0, #0x2                   	// #2
  45ae60:	bl	402970 <write@plt>
  45ae64:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45ae68:	ldr	x0, [x0, #8]
  45ae6c:	ret
  45ae70:	ldr	x0, [x0, #8]
  45ae74:	ret
  45ae78:	stp	x29, x30, [sp, #-48]!
  45ae7c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ae80:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ae84:	mov	x29, sp
  45ae88:	ldr	x1, [x1, #3792]
  45ae8c:	ldr	x3, [x0, #8]
  45ae90:	str	x19, [sp, #16]
  45ae94:	ldr	x2, [x2, #3984]
  45ae98:	add	x1, x1, #0x10
  45ae9c:	str	x1, [x0]
  45aea0:	mov	x19, x0
  45aea4:	sub	x0, x3, #0x18
  45aea8:	cmp	x0, x2
  45aeac:	b.ne	45aec4 <_obstack_memory_used@@Base+0x6b24>  // b.any
  45aeb0:	mov	x0, x19
  45aeb4:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45aeb8:	ldr	x19, [sp, #16]
  45aebc:	ldp	x29, x30, [sp], #48
  45aec0:	ret
  45aec4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45aec8:	ldr	x1, [x1, #3600]
  45aecc:	cbz	x1, 45aef8 <_obstack_memory_used@@Base+0x6b58>
  45aed0:	sub	x3, x3, #0x8
  45aed4:	ldaxr	w1, [x3]
  45aed8:	sub	w2, w1, #0x1
  45aedc:	stlxr	w4, w2, [x3]
  45aee0:	cbnz	w4, 45aed4 <_obstack_memory_used@@Base+0x6b34>
  45aee4:	cmp	w1, #0x0
  45aee8:	b.gt	45aeb0 <_obstack_memory_used@@Base+0x6b10>
  45aeec:	add	x1, sp, #0x28
  45aef0:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45aef4:	b	45aeb0 <_obstack_memory_used@@Base+0x6b10>
  45aef8:	ldur	w1, [x3, #-8]
  45aefc:	sub	w2, w1, #0x1
  45af00:	stur	w2, [x3, #-8]
  45af04:	b	45aee4 <_obstack_memory_used@@Base+0x6b44>
  45af08:	stp	x29, x30, [sp, #-32]!
  45af0c:	mov	x29, sp
  45af10:	str	x19, [sp, #16]
  45af14:	mov	x19, x0
  45af18:	bl	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45af1c:	mov	x0, x19
  45af20:	ldr	x19, [sp, #16]
  45af24:	ldp	x29, x30, [sp], #32
  45af28:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45af2c:	nop
  45af30:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45af34:	ldr	x1, [x1, #3824]
  45af38:	add	x1, x1, #0x10
  45af3c:	str	x1, [x0]
  45af40:	b	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45af44:	nop
  45af48:	stp	x29, x30, [sp, #-32]!
  45af4c:	mov	x29, sp
  45af50:	str	x19, [sp, #16]
  45af54:	mov	x19, x0
  45af58:	bl	45af30 <_obstack_memory_used@@Base+0x6b90>
  45af5c:	mov	x0, x19
  45af60:	ldr	x19, [sp, #16]
  45af64:	ldp	x29, x30, [sp], #32
  45af68:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45af6c:	nop
  45af70:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45af74:	ldr	x1, [x1, #3920]
  45af78:	add	x1, x1, #0x10
  45af7c:	str	x1, [x0]
  45af80:	b	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45af84:	nop
  45af88:	stp	x29, x30, [sp, #-32]!
  45af8c:	mov	x29, sp
  45af90:	str	x19, [sp, #16]
  45af94:	mov	x19, x0
  45af98:	bl	45af70 <_obstack_memory_used@@Base+0x6bd0>
  45af9c:	mov	x0, x19
  45afa0:	ldr	x19, [sp, #16]
  45afa4:	ldp	x29, x30, [sp], #32
  45afa8:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45afac:	nop
  45afb0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45afb4:	ldr	x1, [x1, #3864]
  45afb8:	add	x1, x1, #0x10
  45afbc:	str	x1, [x0]
  45afc0:	b	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45afc4:	nop
  45afc8:	stp	x29, x30, [sp, #-32]!
  45afcc:	mov	x29, sp
  45afd0:	str	x19, [sp, #16]
  45afd4:	mov	x19, x0
  45afd8:	bl	45afb0 <_obstack_memory_used@@Base+0x6c10>
  45afdc:	mov	x0, x19
  45afe0:	ldr	x19, [sp, #16]
  45afe4:	ldp	x29, x30, [sp], #32
  45afe8:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45afec:	nop
  45aff0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45aff4:	ldr	x1, [x1, #3880]
  45aff8:	add	x1, x1, #0x10
  45affc:	str	x1, [x0]
  45b000:	b	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45b004:	nop
  45b008:	stp	x29, x30, [sp, #-32]!
  45b00c:	mov	x29, sp
  45b010:	str	x19, [sp, #16]
  45b014:	mov	x19, x0
  45b018:	bl	45aff0 <_obstack_memory_used@@Base+0x6c50>
  45b01c:	mov	x0, x19
  45b020:	ldr	x19, [sp, #16]
  45b024:	ldp	x29, x30, [sp], #32
  45b028:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45b02c:	nop
  45b030:	stp	x29, x30, [sp, #-48]!
  45b034:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b038:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b03c:	mov	x29, sp
  45b040:	ldr	x1, [x1, #3992]
  45b044:	ldr	x3, [x0, #8]
  45b048:	str	x19, [sp, #16]
  45b04c:	ldr	x2, [x2, #3984]
  45b050:	add	x1, x1, #0x10
  45b054:	str	x1, [x0]
  45b058:	mov	x19, x0
  45b05c:	sub	x0, x3, #0x18
  45b060:	cmp	x0, x2
  45b064:	b.ne	45b07c <_obstack_memory_used@@Base+0x6cdc>  // b.any
  45b068:	mov	x0, x19
  45b06c:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45b070:	ldr	x19, [sp, #16]
  45b074:	ldp	x29, x30, [sp], #48
  45b078:	ret
  45b07c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b080:	ldr	x1, [x1, #3600]
  45b084:	cbz	x1, 45b0b0 <_obstack_memory_used@@Base+0x6d10>
  45b088:	sub	x3, x3, #0x8
  45b08c:	ldaxr	w1, [x3]
  45b090:	sub	w2, w1, #0x1
  45b094:	stlxr	w4, w2, [x3]
  45b098:	cbnz	w4, 45b08c <_obstack_memory_used@@Base+0x6cec>
  45b09c:	cmp	w1, #0x0
  45b0a0:	b.gt	45b068 <_obstack_memory_used@@Base+0x6cc8>
  45b0a4:	add	x1, sp, #0x28
  45b0a8:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45b0ac:	b	45b068 <_obstack_memory_used@@Base+0x6cc8>
  45b0b0:	ldur	w1, [x3, #-8]
  45b0b4:	sub	w2, w1, #0x1
  45b0b8:	stur	w2, [x3, #-8]
  45b0bc:	b	45b09c <_obstack_memory_used@@Base+0x6cfc>
  45b0c0:	stp	x29, x30, [sp, #-32]!
  45b0c4:	mov	x29, sp
  45b0c8:	str	x19, [sp, #16]
  45b0cc:	mov	x19, x0
  45b0d0:	bl	45b030 <_obstack_memory_used@@Base+0x6c90>
  45b0d4:	mov	x0, x19
  45b0d8:	ldr	x19, [sp, #16]
  45b0dc:	ldp	x29, x30, [sp], #32
  45b0e0:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45b0e4:	nop
  45b0e8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b0ec:	ldr	x1, [x1, #3872]
  45b0f0:	add	x1, x1, #0x10
  45b0f4:	str	x1, [x0]
  45b0f8:	b	45b030 <_obstack_memory_used@@Base+0x6c90>
  45b0fc:	nop
  45b100:	stp	x29, x30, [sp, #-32]!
  45b104:	mov	x29, sp
  45b108:	str	x19, [sp, #16]
  45b10c:	mov	x19, x0
  45b110:	bl	45b0e8 <_obstack_memory_used@@Base+0x6d48>
  45b114:	mov	x0, x19
  45b118:	ldr	x19, [sp, #16]
  45b11c:	ldp	x29, x30, [sp], #32
  45b120:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45b124:	nop
  45b128:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b12c:	ldr	x1, [x1, #3928]
  45b130:	add	x1, x1, #0x10
  45b134:	str	x1, [x0]
  45b138:	b	45b030 <_obstack_memory_used@@Base+0x6c90>
  45b13c:	nop
  45b140:	stp	x29, x30, [sp, #-32]!
  45b144:	mov	x29, sp
  45b148:	str	x19, [sp, #16]
  45b14c:	mov	x19, x0
  45b150:	bl	45b128 <_obstack_memory_used@@Base+0x6d88>
  45b154:	mov	x0, x19
  45b158:	ldr	x19, [sp, #16]
  45b15c:	ldp	x29, x30, [sp], #32
  45b160:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45b164:	nop
  45b168:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b16c:	ldr	x1, [x1, #4040]
  45b170:	add	x1, x1, #0x10
  45b174:	str	x1, [x0]
  45b178:	b	45b030 <_obstack_memory_used@@Base+0x6c90>
  45b17c:	nop
  45b180:	stp	x29, x30, [sp, #-32]!
  45b184:	mov	x29, sp
  45b188:	str	x19, [sp, #16]
  45b18c:	mov	x19, x0
  45b190:	bl	45b168 <_obstack_memory_used@@Base+0x6dc8>
  45b194:	mov	x0, x19
  45b198:	ldr	x19, [sp, #16]
  45b19c:	ldp	x29, x30, [sp], #32
  45b1a0:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45b1a4:	nop
  45b1a8:	stp	x29, x30, [sp, #-32]!
  45b1ac:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b1b0:	mov	x29, sp
  45b1b4:	ldr	x2, [x2, #3792]
  45b1b8:	str	x19, [sp, #16]
  45b1bc:	mov	x19, x0
  45b1c0:	add	x2, x2, #0x10
  45b1c4:	str	x2, [x0], #8
  45b1c8:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b1cc:	ldr	x19, [sp, #16]
  45b1d0:	ldp	x29, x30, [sp], #32
  45b1d4:	ret
  45b1d8:	mov	x1, x0
  45b1dc:	mov	x0, x19
  45b1e0:	mov	x19, x1
  45b1e4:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45b1e8:	mov	x0, x19
  45b1ec:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45b1f0:	stp	x29, x30, [sp, #-32]!
  45b1f4:	mov	x29, sp
  45b1f8:	str	x19, [sp, #16]
  45b1fc:	mov	x19, x0
  45b200:	bl	45b1a8 <_obstack_memory_used@@Base+0x6e08>
  45b204:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b208:	ldr	x1, [x1, #3824]
  45b20c:	add	x1, x1, #0x10
  45b210:	str	x1, [x19]
  45b214:	ldr	x19, [sp, #16]
  45b218:	ldp	x29, x30, [sp], #32
  45b21c:	ret
  45b220:	stp	x29, x30, [sp, #-32]!
  45b224:	mov	x29, sp
  45b228:	str	x19, [sp, #16]
  45b22c:	mov	x19, x0
  45b230:	bl	45b1a8 <_obstack_memory_used@@Base+0x6e08>
  45b234:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b238:	ldr	x1, [x1, #3920]
  45b23c:	add	x1, x1, #0x10
  45b240:	str	x1, [x19]
  45b244:	ldr	x19, [sp, #16]
  45b248:	ldp	x29, x30, [sp], #32
  45b24c:	ret
  45b250:	stp	x29, x30, [sp, #-32]!
  45b254:	mov	x29, sp
  45b258:	str	x19, [sp, #16]
  45b25c:	mov	x19, x0
  45b260:	bl	45b1a8 <_obstack_memory_used@@Base+0x6e08>
  45b264:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b268:	ldr	x1, [x1, #3864]
  45b26c:	add	x1, x1, #0x10
  45b270:	str	x1, [x19]
  45b274:	ldr	x19, [sp, #16]
  45b278:	ldp	x29, x30, [sp], #32
  45b27c:	ret
  45b280:	stp	x29, x30, [sp, #-32]!
  45b284:	mov	x29, sp
  45b288:	str	x19, [sp, #16]
  45b28c:	mov	x19, x0
  45b290:	bl	45b1a8 <_obstack_memory_used@@Base+0x6e08>
  45b294:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b298:	ldr	x1, [x1, #3880]
  45b29c:	add	x1, x1, #0x10
  45b2a0:	str	x1, [x19]
  45b2a4:	ldr	x19, [sp, #16]
  45b2a8:	ldp	x29, x30, [sp], #32
  45b2ac:	ret
  45b2b0:	stp	x29, x30, [sp, #-32]!
  45b2b4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b2b8:	mov	x29, sp
  45b2bc:	ldr	x2, [x2, #3992]
  45b2c0:	str	x19, [sp, #16]
  45b2c4:	mov	x19, x0
  45b2c8:	add	x2, x2, #0x10
  45b2cc:	str	x2, [x0], #8
  45b2d0:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b2d4:	ldr	x19, [sp, #16]
  45b2d8:	ldp	x29, x30, [sp], #32
  45b2dc:	ret
  45b2e0:	mov	x1, x0
  45b2e4:	mov	x0, x19
  45b2e8:	mov	x19, x1
  45b2ec:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45b2f0:	mov	x0, x19
  45b2f4:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45b2f8:	stp	x29, x30, [sp, #-32]!
  45b2fc:	mov	x29, sp
  45b300:	str	x19, [sp, #16]
  45b304:	mov	x19, x0
  45b308:	bl	45b2b0 <_obstack_memory_used@@Base+0x6f10>
  45b30c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b310:	ldr	x1, [x1, #3872]
  45b314:	add	x1, x1, #0x10
  45b318:	str	x1, [x19]
  45b31c:	ldr	x19, [sp, #16]
  45b320:	ldp	x29, x30, [sp], #32
  45b324:	ret
  45b328:	stp	x29, x30, [sp, #-32]!
  45b32c:	mov	x29, sp
  45b330:	str	x19, [sp, #16]
  45b334:	mov	x19, x0
  45b338:	bl	45b2b0 <_obstack_memory_used@@Base+0x6f10>
  45b33c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b340:	ldr	x1, [x1, #3928]
  45b344:	add	x1, x1, #0x10
  45b348:	str	x1, [x19]
  45b34c:	ldr	x19, [sp, #16]
  45b350:	ldp	x29, x30, [sp], #32
  45b354:	ret
  45b358:	stp	x29, x30, [sp, #-32]!
  45b35c:	mov	x29, sp
  45b360:	str	x19, [sp, #16]
  45b364:	mov	x19, x0
  45b368:	bl	45b2b0 <_obstack_memory_used@@Base+0x6f10>
  45b36c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b370:	ldr	x1, [x1, #4040]
  45b374:	add	x1, x1, #0x10
  45b378:	str	x1, [x19]
  45b37c:	ldr	x19, [sp, #16]
  45b380:	ldp	x29, x30, [sp], #32
  45b384:	ret
  45b388:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b38c:	ldr	x1, [x1, #3984]
  45b390:	cmp	x0, x1
  45b394:	b.ne	45b39c <_obstack_memory_used@@Base+0x6ffc>  // b.any
  45b398:	ret
  45b39c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b3a0:	ldr	x1, [x1, #3600]
  45b3a4:	cbz	x1, 45b3dc <_obstack_memory_used@@Base+0x703c>
  45b3a8:	add	x2, x0, #0x10
  45b3ac:	ldaxr	w1, [x2]
  45b3b0:	sub	w3, w1, #0x1
  45b3b4:	stlxr	w4, w3, [x2]
  45b3b8:	cbnz	w4, 45b3ac <_obstack_memory_used@@Base+0x700c>
  45b3bc:	cmp	w1, #0x0
  45b3c0:	b.gt	45b398 <_obstack_memory_used@@Base+0x6ff8>
  45b3c4:	stp	x29, x30, [sp, #-32]!
  45b3c8:	mov	x29, sp
  45b3cc:	add	x1, sp, #0x18
  45b3d0:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45b3d4:	ldp	x29, x30, [sp], #32
  45b3d8:	ret
  45b3dc:	ldr	w1, [x0, #16]
  45b3e0:	sub	w2, w1, #0x1
  45b3e4:	str	w2, [x0, #16]
  45b3e8:	b	45b3bc <_obstack_memory_used@@Base+0x701c>
  45b3ec:	nop
  45b3f0:	stp	x29, x30, [sp, #-16]!
  45b3f4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b3f8:	add	x1, x1, #0x8
  45b3fc:	mov	x29, sp
  45b400:	ldr	x2, [x2, #3792]
  45b404:	add	x2, x2, #0x10
  45b408:	str	x2, [x0], #8
  45b40c:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b410:	ldp	x29, x30, [sp], #16
  45b414:	ret
  45b418:	stp	x29, x30, [sp, #-32]!
  45b41c:	add	x1, x1, #0x8
  45b420:	mov	x29, sp
  45b424:	str	x19, [sp, #16]
  45b428:	mov	x19, x0
  45b42c:	add	x0, x0, #0x8
  45b430:	bl	45f0d8 <_obstack_memory_used@@Base+0xad38>
  45b434:	mov	x0, x19
  45b438:	ldr	x19, [sp, #16]
  45b43c:	ldp	x29, x30, [sp], #32
  45b440:	ret
  45b444:	nop
  45b448:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b44c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b450:	ldr	x4, [x1, #8]
  45b454:	ldr	x3, [x3, #3792]
  45b458:	ldr	x2, [x2, #3984]
  45b45c:	add	x3, x3, #0x10
  45b460:	stp	x3, x4, [x0]
  45b464:	add	x2, x2, #0x18
  45b468:	str	x2, [x1, #8]
  45b46c:	ret
  45b470:	stp	x29, x30, [sp, #-32]!
  45b474:	add	x1, x1, #0x8
  45b478:	mov	x29, sp
  45b47c:	str	x19, [sp, #16]
  45b480:	mov	x19, x0
  45b484:	add	x0, x0, #0x8
  45b488:	bl	45cad8 <_obstack_memory_used@@Base+0x8738>
  45b48c:	mov	x0, x19
  45b490:	ldr	x19, [sp, #16]
  45b494:	ldp	x29, x30, [sp], #32
  45b498:	ret
  45b49c:	nop
  45b4a0:	stp	x29, x30, [sp, #-16]!
  45b4a4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b4a8:	add	x1, x1, #0x8
  45b4ac:	mov	x29, sp
  45b4b0:	ldr	x2, [x2, #3992]
  45b4b4:	add	x2, x2, #0x10
  45b4b8:	str	x2, [x0], #8
  45b4bc:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b4c0:	ldp	x29, x30, [sp], #16
  45b4c4:	ret
  45b4c8:	stp	x29, x30, [sp, #-32]!
  45b4cc:	add	x1, x1, #0x8
  45b4d0:	mov	x29, sp
  45b4d4:	str	x19, [sp, #16]
  45b4d8:	mov	x19, x0
  45b4dc:	add	x0, x0, #0x8
  45b4e0:	bl	45f0d8 <_obstack_memory_used@@Base+0xad38>
  45b4e4:	mov	x0, x19
  45b4e8:	ldr	x19, [sp, #16]
  45b4ec:	ldp	x29, x30, [sp], #32
  45b4f0:	ret
  45b4f4:	nop
  45b4f8:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b4fc:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b500:	ldr	x4, [x1, #8]
  45b504:	ldr	x3, [x3, #3992]
  45b508:	ldr	x2, [x2, #3984]
  45b50c:	add	x3, x3, #0x10
  45b510:	stp	x3, x4, [x0]
  45b514:	add	x2, x2, #0x18
  45b518:	str	x2, [x1, #8]
  45b51c:	ret
  45b520:	stp	x29, x30, [sp, #-32]!
  45b524:	add	x1, x1, #0x8
  45b528:	mov	x29, sp
  45b52c:	str	x19, [sp, #16]
  45b530:	mov	x19, x0
  45b534:	add	x0, x0, #0x8
  45b538:	bl	45cad8 <_obstack_memory_used@@Base+0x8738>
  45b53c:	mov	x0, x19
  45b540:	ldr	x19, [sp, #16]
  45b544:	ldp	x29, x30, [sp], #32
  45b548:	ret
  45b54c:	nop
  45b550:	stp	x29, x30, [sp, #-48]!
  45b554:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b558:	mov	x29, sp
  45b55c:	ldr	x3, [x3, #3792]
  45b560:	str	x19, [sp, #16]
  45b564:	mov	x19, x0
  45b568:	add	x2, sp, #0x28
  45b56c:	add	x3, x3, #0x10
  45b570:	str	x3, [x0], #8
  45b574:	bl	45fa90 <_obstack_memory_used@@Base+0xb6f0>
  45b578:	ldr	x19, [sp, #16]
  45b57c:	ldp	x29, x30, [sp], #48
  45b580:	ret
  45b584:	mov	x1, x0
  45b588:	mov	x0, x19
  45b58c:	mov	x19, x1
  45b590:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45b594:	mov	x0, x19
  45b598:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45b59c:	nop
  45b5a0:	stp	x29, x30, [sp, #-32]!
  45b5a4:	mov	x29, sp
  45b5a8:	str	x19, [sp, #16]
  45b5ac:	mov	x19, x0
  45b5b0:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45b5b4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b5b8:	ldr	x1, [x1, #3824]
  45b5bc:	add	x1, x1, #0x10
  45b5c0:	str	x1, [x19]
  45b5c4:	ldr	x19, [sp, #16]
  45b5c8:	ldp	x29, x30, [sp], #32
  45b5cc:	ret
  45b5d0:	stp	x29, x30, [sp, #-32]!
  45b5d4:	mov	x29, sp
  45b5d8:	str	x19, [sp, #16]
  45b5dc:	mov	x19, x0
  45b5e0:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45b5e4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b5e8:	ldr	x1, [x1, #3920]
  45b5ec:	add	x1, x1, #0x10
  45b5f0:	str	x1, [x19]
  45b5f4:	ldr	x19, [sp, #16]
  45b5f8:	ldp	x29, x30, [sp], #32
  45b5fc:	ret
  45b600:	stp	x29, x30, [sp, #-32]!
  45b604:	mov	x29, sp
  45b608:	str	x19, [sp, #16]
  45b60c:	mov	x19, x0
  45b610:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45b614:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b618:	ldr	x1, [x1, #3864]
  45b61c:	add	x1, x1, #0x10
  45b620:	str	x1, [x19]
  45b624:	ldr	x19, [sp, #16]
  45b628:	ldp	x29, x30, [sp], #32
  45b62c:	ret
  45b630:	stp	x29, x30, [sp, #-32]!
  45b634:	mov	x29, sp
  45b638:	str	x19, [sp, #16]
  45b63c:	mov	x19, x0
  45b640:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45b644:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b648:	ldr	x1, [x1, #3880]
  45b64c:	add	x1, x1, #0x10
  45b650:	str	x1, [x19]
  45b654:	ldr	x19, [sp, #16]
  45b658:	ldp	x29, x30, [sp], #32
  45b65c:	ret
  45b660:	stp	x29, x30, [sp, #-48]!
  45b664:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b668:	mov	x29, sp
  45b66c:	ldr	x3, [x3, #3992]
  45b670:	str	x19, [sp, #16]
  45b674:	mov	x19, x0
  45b678:	add	x2, sp, #0x28
  45b67c:	add	x3, x3, #0x10
  45b680:	str	x3, [x0], #8
  45b684:	bl	45fa90 <_obstack_memory_used@@Base+0xb6f0>
  45b688:	ldr	x19, [sp, #16]
  45b68c:	ldp	x29, x30, [sp], #48
  45b690:	ret
  45b694:	mov	x1, x0
  45b698:	mov	x0, x19
  45b69c:	mov	x19, x1
  45b6a0:	bl	459ff8 <_obstack_memory_used@@Base+0x5c58>
  45b6a4:	mov	x0, x19
  45b6a8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45b6ac:	nop
  45b6b0:	stp	x29, x30, [sp, #-32]!
  45b6b4:	mov	x29, sp
  45b6b8:	str	x19, [sp, #16]
  45b6bc:	mov	x19, x0
  45b6c0:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  45b6c4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b6c8:	ldr	x1, [x1, #3872]
  45b6cc:	add	x1, x1, #0x10
  45b6d0:	str	x1, [x19]
  45b6d4:	ldr	x19, [sp, #16]
  45b6d8:	ldp	x29, x30, [sp], #32
  45b6dc:	ret
  45b6e0:	stp	x29, x30, [sp, #-32]!
  45b6e4:	mov	x29, sp
  45b6e8:	str	x19, [sp, #16]
  45b6ec:	mov	x19, x0
  45b6f0:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  45b6f4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b6f8:	ldr	x1, [x1, #3928]
  45b6fc:	add	x1, x1, #0x10
  45b700:	str	x1, [x19]
  45b704:	ldr	x19, [sp, #16]
  45b708:	ldp	x29, x30, [sp], #32
  45b70c:	ret
  45b710:	stp	x29, x30, [sp, #-32]!
  45b714:	mov	x29, sp
  45b718:	str	x19, [sp, #16]
  45b71c:	mov	x19, x0
  45b720:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  45b724:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b728:	ldr	x1, [x1, #4040]
  45b72c:	add	x1, x1, #0x10
  45b730:	str	x1, [x19]
  45b734:	ldr	x19, [sp, #16]
  45b738:	ldp	x29, x30, [sp], #32
  45b73c:	ret
  45b740:	ldr	x1, [x1]
  45b744:	ldur	x2, [x1, #-24]
  45b748:	b	45fcf8 <_obstack_memory_used@@Base+0xb958>
  45b74c:	nop
  45b750:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b754:	ldr	x1, [x1, #3984]
  45b758:	add	x1, x1, #0x18
  45b75c:	str	x1, [x0]
  45b760:	ret
  45b764:	nop
  45b768:	b	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b76c:	nop
  45b770:	stp	x29, x30, [sp, #-32]!
  45b774:	mov	x29, sp
  45b778:	add	x3, sp, #0x18
  45b77c:	bl	45f6c0 <_obstack_memory_used@@Base+0xb320>
  45b780:	ldp	x29, x30, [sp], #32
  45b784:	ret
  45b788:	stp	x29, x30, [sp, #-16]!
  45b78c:	mov	x29, sp
  45b790:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45b794:	ldp	x29, x30, [sp], #16
  45b798:	ret
  45b79c:	nop
  45b7a0:	stp	x29, x30, [sp, #-32]!
  45b7a4:	mov	x29, sp
  45b7a8:	str	x19, [sp, #16]
  45b7ac:	mov	x19, x0
  45b7b0:	bl	45f0d8 <_obstack_memory_used@@Base+0xad38>
  45b7b4:	mov	x0, x19
  45b7b8:	ldr	x19, [sp, #16]
  45b7bc:	ldp	x29, x30, [sp], #32
  45b7c0:	ret
  45b7c4:	nop
  45b7c8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b7cc:	ldr	x2, [x0]
  45b7d0:	ldr	x1, [x1, #3984]
  45b7d4:	sub	x0, x2, #0x18
  45b7d8:	cmp	x0, x1
  45b7dc:	b.ne	45b7e4 <_obstack_memory_used@@Base+0x7444>  // b.any
  45b7e0:	ret
  45b7e4:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b7e8:	ldr	x1, [x1, #3600]
  45b7ec:	cbz	x1, 45b824 <_obstack_memory_used@@Base+0x7484>
  45b7f0:	sub	x2, x2, #0x8
  45b7f4:	ldaxr	w1, [x2]
  45b7f8:	sub	w3, w1, #0x1
  45b7fc:	stlxr	w4, w3, [x2]
  45b800:	cbnz	w4, 45b7f4 <_obstack_memory_used@@Base+0x7454>
  45b804:	cmp	w1, #0x0
  45b808:	b.gt	45b7e0 <_obstack_memory_used@@Base+0x7440>
  45b80c:	stp	x29, x30, [sp, #-32]!
  45b810:	mov	x29, sp
  45b814:	add	x1, sp, #0x18
  45b818:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45b81c:	ldp	x29, x30, [sp], #32
  45b820:	ret
  45b824:	ldur	w1, [x2, #-8]
  45b828:	sub	w3, w1, #0x1
  45b82c:	stur	w3, [x2, #-8]
  45b830:	b	45b804 <_obstack_memory_used@@Base+0x7464>
  45b834:	nop
  45b838:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b83c:	ldr	x3, [x1]
  45b840:	str	x3, [x0]
  45b844:	ldr	x2, [x2, #3984]
  45b848:	add	x2, x2, #0x18
  45b84c:	str	x2, [x1]
  45b850:	ret
  45b854:	nop
  45b858:	stp	x29, x30, [sp, #-32]!
  45b85c:	mov	x29, sp
  45b860:	str	x19, [sp, #16]
  45b864:	mov	x19, x0
  45b868:	bl	45cad8 <_obstack_memory_used@@Base+0x8738>
  45b86c:	mov	x0, x19
  45b870:	ldr	x19, [sp, #16]
  45b874:	ldp	x29, x30, [sp], #32
  45b878:	ret
  45b87c:	nop
  45b880:	stp	x29, x30, [sp, #-48]!
  45b884:	mov	x29, sp
  45b888:	ldr	x2, [x0]
  45b88c:	ldr	x2, [x2, #24]
  45b890:	str	x19, [sp, #16]
  45b894:	mov	x19, x8
  45b898:	add	x8, sp, #0x28
  45b89c:	blr	x2
  45b8a0:	ldr	x1, [sp, #40]
  45b8a4:	mov	x0, x19
  45b8a8:	ldur	x2, [x1, #-24]
  45b8ac:	bl	45fcf8 <_obstack_memory_used@@Base+0xb958>
  45b8b0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b8b4:	ldr	x2, [sp, #40]
  45b8b8:	ldr	x1, [x1, #3984]
  45b8bc:	sub	x0, x2, #0x18
  45b8c0:	cmp	x0, x1
  45b8c4:	b.ne	45b8d8 <_obstack_memory_used@@Base+0x7538>  // b.any
  45b8c8:	mov	x0, x19
  45b8cc:	ldr	x19, [sp, #16]
  45b8d0:	ldp	x29, x30, [sp], #48
  45b8d4:	ret
  45b8d8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b8dc:	ldr	x1, [x1, #3600]
  45b8e0:	cbz	x1, 45b90c <_obstack_memory_used@@Base+0x756c>
  45b8e4:	sub	x2, x2, #0x8
  45b8e8:	ldaxr	w1, [x2]
  45b8ec:	sub	w3, w1, #0x1
  45b8f0:	stlxr	w4, w3, [x2]
  45b8f4:	cbnz	w4, 45b8e8 <_obstack_memory_used@@Base+0x7548>
  45b8f8:	cmp	w1, #0x0
  45b8fc:	b.gt	45b8c8 <_obstack_memory_used@@Base+0x7528>
  45b900:	add	x1, sp, #0x20
  45b904:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45b908:	b	45b8c8 <_obstack_memory_used@@Base+0x7528>
  45b90c:	ldur	w1, [x2, #-8]
  45b910:	sub	w3, w1, #0x1
  45b914:	stur	w3, [x2, #-8]
  45b918:	b	45b8f8 <_obstack_memory_used@@Base+0x7558>
  45b91c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b920:	mov	x19, x0
  45b924:	ldr	x1, [sp, #40]
  45b928:	ldr	x2, [x2, #3984]
  45b92c:	sub	x0, x1, #0x18
  45b930:	cmp	x0, x2
  45b934:	b.eq	45b968 <_obstack_memory_used@@Base+0x75c8>  // b.none
  45b938:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45b93c:	ldr	x2, [x2, #3600]
  45b940:	cbz	x2, 45b970 <_obstack_memory_used@@Base+0x75d0>
  45b944:	sub	x1, x1, #0x8
  45b948:	ldaxr	w2, [x1]
  45b94c:	sub	w3, w2, #0x1
  45b950:	stlxr	w4, w3, [x1]
  45b954:	cbnz	w4, 45b948 <_obstack_memory_used@@Base+0x75a8>
  45b958:	cmp	w2, #0x0
  45b95c:	b.gt	45b968 <_obstack_memory_used@@Base+0x75c8>
  45b960:	add	x1, sp, #0x20
  45b964:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45b968:	mov	x0, x19
  45b96c:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45b970:	ldur	w2, [x1, #-8]
  45b974:	sub	w3, w2, #0x1
  45b978:	stur	w3, [x1, #-8]
  45b97c:	b	45b958 <_obstack_memory_used@@Base+0x75b8>
  45b980:	stp	x29, x30, [sp, #-48]!
  45b984:	mov	x29, sp
  45b988:	stp	x19, x20, [sp, #16]
  45b98c:	sub	x20, x1, #0x1
  45b990:	mov	x19, #0x1                   	// #1
  45b994:	stp	x21, x22, [sp, #32]
  45b998:	mov	x21, x1
  45b99c:	mov	x22, x0
  45b9a0:	b	45b9a8 <_obstack_memory_used@@Base+0x7608>
  45b9a4:	add	x19, x19, #0x1
  45b9a8:	add	x0, x20, x19
  45b9ac:	bl	402770 <_ITM_RU1@plt>
  45b9b0:	tst	w0, #0xff
  45b9b4:	b.ne	45b9a4 <_obstack_memory_used@@Base+0x7604>  // b.any
  45b9b8:	add	x0, x19, #0x18
  45b9bc:	bl	402610 <_ZGTtnam@plt>
  45b9c0:	mov	x20, x0
  45b9c4:	sub	x4, x19, #0x1
  45b9c8:	str	x4, [x0, #8]
  45b9cc:	mov	x1, x21
  45b9d0:	str	wzr, [x0, #16]
  45b9d4:	mov	x2, x19
  45b9d8:	str	x4, [x20], #24
  45b9dc:	mov	x0, x20
  45b9e0:	bl	402860 <_ITM_memcpyRtWn@plt>
  45b9e4:	str	x20, [x22]
  45b9e8:	ldp	x19, x20, [sp, #16]
  45b9ec:	ldp	x21, x22, [sp, #32]
  45b9f0:	ldp	x29, x30, [sp], #48
  45b9f4:	ret
  45b9f8:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45b9fc:	bl	45ad88 <_obstack_memory_used@@Base+0x69e8>
  45ba00:	mov	x19, x0
  45ba04:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  45ba08:	mov	x0, x19
  45ba0c:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45ba10:	b	402ad0 <_ITM_RU8@plt>
  45ba14:	nop
  45ba18:	b	402ad0 <_ITM_RU8@plt>
  45ba1c:	nop
  45ba20:	stp	x29, x30, [sp, #-16]!
  45ba24:	mov	x29, sp
  45ba28:	bl	45ba10 <_obstack_memory_used@@Base+0x7670>
  45ba2c:	sub	x2, x0, #0x18
  45ba30:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ba34:	mov	x1, #0x1                   	// #1
  45ba38:	ldp	x29, x30, [sp], #16
  45ba3c:	ldr	x0, [x3, #3760]
  45ba40:	b	402810 <_ITM_addUserCommitAction@plt>
  45ba44:	nop
  45ba48:	add	x0, x0, #0x8
  45ba4c:	ret
  45ba50:	add	x0, x0, #0x8
  45ba54:	ret
  45ba58:	stp	x29, x30, [sp, #-64]!
  45ba5c:	mov	x29, sp
  45ba60:	stp	x19, x20, [sp, #16]
  45ba64:	add	x20, sp, #0x30
  45ba68:	mov	x19, x0
  45ba6c:	mov	x0, x20
  45ba70:	str	x21, [sp, #32]
  45ba74:	mov	x21, x1
  45ba78:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45ba7c:	add	x1, x1, #0xd70
  45ba80:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45ba84:	mov	x0, x19
  45ba88:	mov	x1, x20
  45ba8c:	mov	x2, #0x10                  	// #16
  45ba90:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45ba94:	mov	x0, x19
  45ba98:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45ba9c:	mov	x2, x19
  45baa0:	mov	x1, x21
  45baa4:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45baa8:	mov	x0, x20
  45baac:	bl	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45bab0:	ldp	x19, x20, [sp, #16]
  45bab4:	ldr	x21, [sp, #32]
  45bab8:	ldp	x29, x30, [sp], #64
  45babc:	ret
  45bac0:	mov	x19, x0
  45bac4:	mov	x0, x20
  45bac8:	bl	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45bacc:	mov	x0, x19
  45bad0:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bad4:	nop
  45bad8:	stp	x29, x30, [sp, #-64]!
  45badc:	mov	x29, sp
  45bae0:	stp	x19, x20, [sp, #16]
  45bae4:	add	x20, sp, #0x30
  45bae8:	mov	x19, x0
  45baec:	mov	x0, x20
  45baf0:	stp	x21, x22, [sp, #32]
  45baf4:	mov	x22, x1
  45baf8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bafc:	add	x1, x1, #0xd70
  45bb00:	bl	45b550 <_obstack_memory_used@@Base+0x71b0>
  45bb04:	mov	x0, x19
  45bb08:	mov	x1, x20
  45bb0c:	mov	x2, #0x10                  	// #16
  45bb10:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bb14:	mov	x0, x19
  45bb18:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bb1c:	mov	x21, x0
  45bb20:	mov	x0, x22
  45bb24:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45bb28:	mov	x1, x0
  45bb2c:	mov	x2, x19
  45bb30:	mov	x0, x21
  45bb34:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bb38:	mov	x0, x20
  45bb3c:	bl	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45bb40:	ldp	x19, x20, [sp, #16]
  45bb44:	ldp	x21, x22, [sp, #32]
  45bb48:	ldp	x29, x30, [sp], #64
  45bb4c:	ret
  45bb50:	mov	x19, x0
  45bb54:	mov	x0, x20
  45bb58:	bl	45ae78 <_obstack_memory_used@@Base+0x6ad8>
  45bb5c:	mov	x0, x19
  45bb60:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bb64:	nop
  45bb68:	stp	x29, x30, [sp, #-16]!
  45bb6c:	mov	x29, sp
  45bb70:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bb74:	ldp	x29, x30, [sp], #16
  45bb78:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45bb7c:	nop
  45bb80:	stp	x29, x30, [sp, #-32]!
  45bb84:	mov	x29, sp
  45bb88:	str	x19, [sp, #16]
  45bb8c:	mov	x19, x0
  45bb90:	bl	45bb68 <_obstack_memory_used@@Base+0x77c8>
  45bb94:	mov	x0, x19
  45bb98:	ldr	x19, [sp, #16]
  45bb9c:	ldp	x29, x30, [sp], #32
  45bba0:	b	402c80 <_ZGTtdlPv@plt>
  45bba4:	nop
  45bba8:	stp	x29, x30, [sp, #-16]!
  45bbac:	mov	x29, sp
  45bbb0:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bbb4:	ldp	x29, x30, [sp], #16
  45bbb8:	b	45ba10 <_obstack_memory_used@@Base+0x7670>
  45bbbc:	nop
  45bbc0:	stp	x29, x30, [sp, #-64]!
  45bbc4:	mov	x29, sp
  45bbc8:	stp	x19, x20, [sp, #16]
  45bbcc:	add	x20, sp, #0x30
  45bbd0:	mov	x19, x0
  45bbd4:	mov	x0, x20
  45bbd8:	str	x21, [sp, #32]
  45bbdc:	mov	x21, x1
  45bbe0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bbe4:	add	x1, x1, #0xd70
  45bbe8:	bl	45b5a0 <_obstack_memory_used@@Base+0x7200>
  45bbec:	mov	x0, x19
  45bbf0:	mov	x1, x20
  45bbf4:	mov	x2, #0x10                  	// #16
  45bbf8:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bbfc:	mov	x0, x19
  45bc00:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bc04:	mov	x2, x19
  45bc08:	mov	x1, x21
  45bc0c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bc10:	mov	x0, x20
  45bc14:	bl	45af30 <_obstack_memory_used@@Base+0x6b90>
  45bc18:	ldp	x19, x20, [sp, #16]
  45bc1c:	ldr	x21, [sp, #32]
  45bc20:	ldp	x29, x30, [sp], #64
  45bc24:	ret
  45bc28:	mov	x19, x0
  45bc2c:	mov	x0, x20
  45bc30:	bl	45af30 <_obstack_memory_used@@Base+0x6b90>
  45bc34:	mov	x0, x19
  45bc38:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bc3c:	nop
  45bc40:	stp	x29, x30, [sp, #-64]!
  45bc44:	mov	x29, sp
  45bc48:	stp	x19, x20, [sp, #16]
  45bc4c:	add	x20, sp, #0x30
  45bc50:	mov	x19, x0
  45bc54:	mov	x0, x20
  45bc58:	stp	x21, x22, [sp, #32]
  45bc5c:	mov	x22, x1
  45bc60:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bc64:	add	x1, x1, #0xd70
  45bc68:	bl	45b5a0 <_obstack_memory_used@@Base+0x7200>
  45bc6c:	mov	x0, x19
  45bc70:	mov	x1, x20
  45bc74:	mov	x2, #0x10                  	// #16
  45bc78:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bc7c:	mov	x0, x19
  45bc80:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bc84:	mov	x21, x0
  45bc88:	mov	x0, x22
  45bc8c:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45bc90:	mov	x1, x0
  45bc94:	mov	x2, x19
  45bc98:	mov	x0, x21
  45bc9c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bca0:	mov	x0, x20
  45bca4:	bl	45af30 <_obstack_memory_used@@Base+0x6b90>
  45bca8:	ldp	x19, x20, [sp, #16]
  45bcac:	ldp	x21, x22, [sp, #32]
  45bcb0:	ldp	x29, x30, [sp], #64
  45bcb4:	ret
  45bcb8:	mov	x19, x0
  45bcbc:	mov	x0, x20
  45bcc0:	bl	45af30 <_obstack_memory_used@@Base+0x6b90>
  45bcc4:	mov	x0, x19
  45bcc8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bccc:	nop
  45bcd0:	stp	x29, x30, [sp, #-16]!
  45bcd4:	mov	x29, sp
  45bcd8:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bcdc:	ldp	x29, x30, [sp], #16
  45bce0:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45bce4:	nop
  45bce8:	stp	x29, x30, [sp, #-32]!
  45bcec:	mov	x29, sp
  45bcf0:	str	x19, [sp, #16]
  45bcf4:	mov	x19, x0
  45bcf8:	bl	45bcd0 <_obstack_memory_used@@Base+0x7930>
  45bcfc:	mov	x0, x19
  45bd00:	ldr	x19, [sp, #16]
  45bd04:	ldp	x29, x30, [sp], #32
  45bd08:	b	402c80 <_ZGTtdlPv@plt>
  45bd0c:	nop
  45bd10:	stp	x29, x30, [sp, #-64]!
  45bd14:	mov	x29, sp
  45bd18:	stp	x19, x20, [sp, #16]
  45bd1c:	add	x20, sp, #0x30
  45bd20:	mov	x19, x0
  45bd24:	mov	x0, x20
  45bd28:	str	x21, [sp, #32]
  45bd2c:	mov	x21, x1
  45bd30:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bd34:	add	x1, x1, #0xd70
  45bd38:	bl	45b5d0 <_obstack_memory_used@@Base+0x7230>
  45bd3c:	mov	x0, x19
  45bd40:	mov	x1, x20
  45bd44:	mov	x2, #0x10                  	// #16
  45bd48:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bd4c:	mov	x0, x19
  45bd50:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bd54:	mov	x2, x19
  45bd58:	mov	x1, x21
  45bd5c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bd60:	mov	x0, x20
  45bd64:	bl	45af70 <_obstack_memory_used@@Base+0x6bd0>
  45bd68:	ldp	x19, x20, [sp, #16]
  45bd6c:	ldr	x21, [sp, #32]
  45bd70:	ldp	x29, x30, [sp], #64
  45bd74:	ret
  45bd78:	mov	x19, x0
  45bd7c:	mov	x0, x20
  45bd80:	bl	45af70 <_obstack_memory_used@@Base+0x6bd0>
  45bd84:	mov	x0, x19
  45bd88:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bd8c:	nop
  45bd90:	stp	x29, x30, [sp, #-64]!
  45bd94:	mov	x29, sp
  45bd98:	stp	x19, x20, [sp, #16]
  45bd9c:	add	x20, sp, #0x30
  45bda0:	mov	x19, x0
  45bda4:	mov	x0, x20
  45bda8:	stp	x21, x22, [sp, #32]
  45bdac:	mov	x22, x1
  45bdb0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bdb4:	add	x1, x1, #0xd70
  45bdb8:	bl	45b5d0 <_obstack_memory_used@@Base+0x7230>
  45bdbc:	mov	x0, x19
  45bdc0:	mov	x1, x20
  45bdc4:	mov	x2, #0x10                  	// #16
  45bdc8:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bdcc:	mov	x0, x19
  45bdd0:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bdd4:	mov	x21, x0
  45bdd8:	mov	x0, x22
  45bddc:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45bde0:	mov	x1, x0
  45bde4:	mov	x2, x19
  45bde8:	mov	x0, x21
  45bdec:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bdf0:	mov	x0, x20
  45bdf4:	bl	45af70 <_obstack_memory_used@@Base+0x6bd0>
  45bdf8:	ldp	x19, x20, [sp, #16]
  45bdfc:	ldp	x21, x22, [sp, #32]
  45be00:	ldp	x29, x30, [sp], #64
  45be04:	ret
  45be08:	mov	x19, x0
  45be0c:	mov	x0, x20
  45be10:	bl	45af70 <_obstack_memory_used@@Base+0x6bd0>
  45be14:	mov	x0, x19
  45be18:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45be1c:	nop
  45be20:	stp	x29, x30, [sp, #-16]!
  45be24:	mov	x29, sp
  45be28:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45be2c:	ldp	x29, x30, [sp], #16
  45be30:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45be34:	nop
  45be38:	stp	x29, x30, [sp, #-32]!
  45be3c:	mov	x29, sp
  45be40:	str	x19, [sp, #16]
  45be44:	mov	x19, x0
  45be48:	bl	45be20 <_obstack_memory_used@@Base+0x7a80>
  45be4c:	mov	x0, x19
  45be50:	ldr	x19, [sp, #16]
  45be54:	ldp	x29, x30, [sp], #32
  45be58:	b	402c80 <_ZGTtdlPv@plt>
  45be5c:	nop
  45be60:	stp	x29, x30, [sp, #-64]!
  45be64:	mov	x29, sp
  45be68:	stp	x19, x20, [sp, #16]
  45be6c:	add	x20, sp, #0x30
  45be70:	mov	x19, x0
  45be74:	mov	x0, x20
  45be78:	str	x21, [sp, #32]
  45be7c:	mov	x21, x1
  45be80:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45be84:	add	x1, x1, #0xd70
  45be88:	bl	45b600 <_obstack_memory_used@@Base+0x7260>
  45be8c:	mov	x0, x19
  45be90:	mov	x1, x20
  45be94:	mov	x2, #0x10                  	// #16
  45be98:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45be9c:	mov	x0, x19
  45bea0:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bea4:	mov	x2, x19
  45bea8:	mov	x1, x21
  45beac:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45beb0:	mov	x0, x20
  45beb4:	bl	45afb0 <_obstack_memory_used@@Base+0x6c10>
  45beb8:	ldp	x19, x20, [sp, #16]
  45bebc:	ldr	x21, [sp, #32]
  45bec0:	ldp	x29, x30, [sp], #64
  45bec4:	ret
  45bec8:	mov	x19, x0
  45becc:	mov	x0, x20
  45bed0:	bl	45afb0 <_obstack_memory_used@@Base+0x6c10>
  45bed4:	mov	x0, x19
  45bed8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bedc:	nop
  45bee0:	stp	x29, x30, [sp, #-64]!
  45bee4:	mov	x29, sp
  45bee8:	stp	x19, x20, [sp, #16]
  45beec:	add	x20, sp, #0x30
  45bef0:	mov	x19, x0
  45bef4:	mov	x0, x20
  45bef8:	stp	x21, x22, [sp, #32]
  45befc:	mov	x22, x1
  45bf00:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bf04:	add	x1, x1, #0xd70
  45bf08:	bl	45b600 <_obstack_memory_used@@Base+0x7260>
  45bf0c:	mov	x0, x19
  45bf10:	mov	x1, x20
  45bf14:	mov	x2, #0x10                  	// #16
  45bf18:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bf1c:	mov	x0, x19
  45bf20:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bf24:	mov	x21, x0
  45bf28:	mov	x0, x22
  45bf2c:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45bf30:	mov	x1, x0
  45bf34:	mov	x2, x19
  45bf38:	mov	x0, x21
  45bf3c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45bf40:	mov	x0, x20
  45bf44:	bl	45afb0 <_obstack_memory_used@@Base+0x6c10>
  45bf48:	ldp	x19, x20, [sp, #16]
  45bf4c:	ldp	x21, x22, [sp, #32]
  45bf50:	ldp	x29, x30, [sp], #64
  45bf54:	ret
  45bf58:	mov	x19, x0
  45bf5c:	mov	x0, x20
  45bf60:	bl	45afb0 <_obstack_memory_used@@Base+0x6c10>
  45bf64:	mov	x0, x19
  45bf68:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45bf6c:	nop
  45bf70:	stp	x29, x30, [sp, #-16]!
  45bf74:	mov	x29, sp
  45bf78:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bf7c:	ldp	x29, x30, [sp], #16
  45bf80:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45bf84:	nop
  45bf88:	stp	x29, x30, [sp, #-32]!
  45bf8c:	mov	x29, sp
  45bf90:	str	x19, [sp, #16]
  45bf94:	mov	x19, x0
  45bf98:	bl	45bf70 <_obstack_memory_used@@Base+0x7bd0>
  45bf9c:	mov	x0, x19
  45bfa0:	ldr	x19, [sp, #16]
  45bfa4:	ldp	x29, x30, [sp], #32
  45bfa8:	b	402c80 <_ZGTtdlPv@plt>
  45bfac:	nop
  45bfb0:	stp	x29, x30, [sp, #-64]!
  45bfb4:	mov	x29, sp
  45bfb8:	stp	x19, x20, [sp, #16]
  45bfbc:	add	x20, sp, #0x30
  45bfc0:	mov	x19, x0
  45bfc4:	mov	x0, x20
  45bfc8:	str	x21, [sp, #32]
  45bfcc:	mov	x21, x1
  45bfd0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45bfd4:	add	x1, x1, #0xd70
  45bfd8:	bl	45b630 <_obstack_memory_used@@Base+0x7290>
  45bfdc:	mov	x0, x19
  45bfe0:	mov	x1, x20
  45bfe4:	mov	x2, #0x10                  	// #16
  45bfe8:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45bfec:	mov	x0, x19
  45bff0:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45bff4:	mov	x2, x19
  45bff8:	mov	x1, x21
  45bffc:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c000:	mov	x0, x20
  45c004:	bl	45aff0 <_obstack_memory_used@@Base+0x6c50>
  45c008:	ldp	x19, x20, [sp, #16]
  45c00c:	ldr	x21, [sp, #32]
  45c010:	ldp	x29, x30, [sp], #64
  45c014:	ret
  45c018:	mov	x19, x0
  45c01c:	mov	x0, x20
  45c020:	bl	45aff0 <_obstack_memory_used@@Base+0x6c50>
  45c024:	mov	x0, x19
  45c028:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c02c:	nop
  45c030:	stp	x29, x30, [sp, #-64]!
  45c034:	mov	x29, sp
  45c038:	stp	x19, x20, [sp, #16]
  45c03c:	add	x20, sp, #0x30
  45c040:	mov	x19, x0
  45c044:	mov	x0, x20
  45c048:	stp	x21, x22, [sp, #32]
  45c04c:	mov	x22, x1
  45c050:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c054:	add	x1, x1, #0xd70
  45c058:	bl	45b630 <_obstack_memory_used@@Base+0x7290>
  45c05c:	mov	x0, x19
  45c060:	mov	x1, x20
  45c064:	mov	x2, #0x10                  	// #16
  45c068:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c06c:	mov	x0, x19
  45c070:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45c074:	mov	x21, x0
  45c078:	mov	x0, x22
  45c07c:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45c080:	mov	x1, x0
  45c084:	mov	x2, x19
  45c088:	mov	x0, x21
  45c08c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c090:	mov	x0, x20
  45c094:	bl	45aff0 <_obstack_memory_used@@Base+0x6c50>
  45c098:	ldp	x19, x20, [sp, #16]
  45c09c:	ldp	x21, x22, [sp, #32]
  45c0a0:	ldp	x29, x30, [sp], #64
  45c0a4:	ret
  45c0a8:	mov	x19, x0
  45c0ac:	mov	x0, x20
  45c0b0:	bl	45aff0 <_obstack_memory_used@@Base+0x6c50>
  45c0b4:	mov	x0, x19
  45c0b8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c0bc:	nop
  45c0c0:	stp	x29, x30, [sp, #-16]!
  45c0c4:	mov	x29, sp
  45c0c8:	bl	45ba48 <_obstack_memory_used@@Base+0x76a8>
  45c0cc:	ldp	x29, x30, [sp], #16
  45c0d0:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45c0d4:	nop
  45c0d8:	stp	x29, x30, [sp, #-32]!
  45c0dc:	mov	x29, sp
  45c0e0:	str	x19, [sp, #16]
  45c0e4:	mov	x19, x0
  45c0e8:	bl	45c0c0 <_obstack_memory_used@@Base+0x7d20>
  45c0ec:	mov	x0, x19
  45c0f0:	ldr	x19, [sp, #16]
  45c0f4:	ldp	x29, x30, [sp], #32
  45c0f8:	b	402c80 <_ZGTtdlPv@plt>
  45c0fc:	nop
  45c100:	stp	x29, x30, [sp, #-64]!
  45c104:	mov	x29, sp
  45c108:	stp	x19, x20, [sp, #16]
  45c10c:	add	x20, sp, #0x30
  45c110:	mov	x19, x0
  45c114:	mov	x0, x20
  45c118:	str	x21, [sp, #32]
  45c11c:	mov	x21, x1
  45c120:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c124:	add	x1, x1, #0xd70
  45c128:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  45c12c:	mov	x0, x19
  45c130:	mov	x1, x20
  45c134:	mov	x2, #0x10                  	// #16
  45c138:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c13c:	mov	x0, x19
  45c140:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c144:	mov	x2, x19
  45c148:	mov	x1, x21
  45c14c:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c150:	mov	x0, x20
  45c154:	bl	45b030 <_obstack_memory_used@@Base+0x6c90>
  45c158:	ldp	x19, x20, [sp, #16]
  45c15c:	ldr	x21, [sp, #32]
  45c160:	ldp	x29, x30, [sp], #64
  45c164:	ret
  45c168:	mov	x19, x0
  45c16c:	mov	x0, x20
  45c170:	bl	45b030 <_obstack_memory_used@@Base+0x6c90>
  45c174:	mov	x0, x19
  45c178:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c17c:	nop
  45c180:	stp	x29, x30, [sp, #-64]!
  45c184:	mov	x29, sp
  45c188:	stp	x19, x20, [sp, #16]
  45c18c:	add	x20, sp, #0x30
  45c190:	mov	x19, x0
  45c194:	mov	x0, x20
  45c198:	stp	x21, x22, [sp, #32]
  45c19c:	mov	x22, x1
  45c1a0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c1a4:	add	x1, x1, #0xd70
  45c1a8:	bl	45b660 <_obstack_memory_used@@Base+0x72c0>
  45c1ac:	mov	x0, x19
  45c1b0:	mov	x1, x20
  45c1b4:	mov	x2, #0x10                  	// #16
  45c1b8:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c1bc:	mov	x0, x19
  45c1c0:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c1c4:	mov	x21, x0
  45c1c8:	mov	x0, x22
  45c1cc:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45c1d0:	mov	x1, x0
  45c1d4:	mov	x2, x19
  45c1d8:	mov	x0, x21
  45c1dc:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c1e0:	mov	x0, x20
  45c1e4:	bl	45b030 <_obstack_memory_used@@Base+0x6c90>
  45c1e8:	ldp	x19, x20, [sp, #16]
  45c1ec:	ldp	x21, x22, [sp, #32]
  45c1f0:	ldp	x29, x30, [sp], #64
  45c1f4:	ret
  45c1f8:	mov	x19, x0
  45c1fc:	mov	x0, x20
  45c200:	bl	45b030 <_obstack_memory_used@@Base+0x6c90>
  45c204:	mov	x0, x19
  45c208:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c20c:	nop
  45c210:	stp	x29, x30, [sp, #-16]!
  45c214:	mov	x29, sp
  45c218:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c21c:	ldp	x29, x30, [sp], #16
  45c220:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45c224:	nop
  45c228:	stp	x29, x30, [sp, #-32]!
  45c22c:	mov	x29, sp
  45c230:	str	x19, [sp, #16]
  45c234:	mov	x19, x0
  45c238:	bl	45c210 <_obstack_memory_used@@Base+0x7e70>
  45c23c:	mov	x0, x19
  45c240:	ldr	x19, [sp, #16]
  45c244:	ldp	x29, x30, [sp], #32
  45c248:	b	402c80 <_ZGTtdlPv@plt>
  45c24c:	nop
  45c250:	stp	x29, x30, [sp, #-16]!
  45c254:	mov	x29, sp
  45c258:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c25c:	ldp	x29, x30, [sp], #16
  45c260:	b	45ba10 <_obstack_memory_used@@Base+0x7670>
  45c264:	nop
  45c268:	stp	x29, x30, [sp, #-64]!
  45c26c:	mov	x29, sp
  45c270:	stp	x19, x20, [sp, #16]
  45c274:	add	x20, sp, #0x30
  45c278:	mov	x19, x0
  45c27c:	mov	x0, x20
  45c280:	str	x21, [sp, #32]
  45c284:	mov	x21, x1
  45c288:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c28c:	add	x1, x1, #0xd70
  45c290:	bl	45b6b0 <_obstack_memory_used@@Base+0x7310>
  45c294:	mov	x0, x19
  45c298:	mov	x1, x20
  45c29c:	mov	x2, #0x10                  	// #16
  45c2a0:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c2a4:	mov	x0, x19
  45c2a8:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c2ac:	mov	x2, x19
  45c2b0:	mov	x1, x21
  45c2b4:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c2b8:	mov	x0, x20
  45c2bc:	bl	45b0e8 <_obstack_memory_used@@Base+0x6d48>
  45c2c0:	ldp	x19, x20, [sp, #16]
  45c2c4:	ldr	x21, [sp, #32]
  45c2c8:	ldp	x29, x30, [sp], #64
  45c2cc:	ret
  45c2d0:	mov	x19, x0
  45c2d4:	mov	x0, x20
  45c2d8:	bl	45b0e8 <_obstack_memory_used@@Base+0x6d48>
  45c2dc:	mov	x0, x19
  45c2e0:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c2e4:	nop
  45c2e8:	stp	x29, x30, [sp, #-64]!
  45c2ec:	mov	x29, sp
  45c2f0:	stp	x19, x20, [sp, #16]
  45c2f4:	add	x20, sp, #0x30
  45c2f8:	mov	x19, x0
  45c2fc:	mov	x0, x20
  45c300:	stp	x21, x22, [sp, #32]
  45c304:	mov	x22, x1
  45c308:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c30c:	add	x1, x1, #0xd70
  45c310:	bl	45b6b0 <_obstack_memory_used@@Base+0x7310>
  45c314:	mov	x0, x19
  45c318:	mov	x1, x20
  45c31c:	mov	x2, #0x10                  	// #16
  45c320:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c324:	mov	x0, x19
  45c328:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c32c:	mov	x21, x0
  45c330:	mov	x0, x22
  45c334:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45c338:	mov	x1, x0
  45c33c:	mov	x2, x19
  45c340:	mov	x0, x21
  45c344:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c348:	mov	x0, x20
  45c34c:	bl	45b0e8 <_obstack_memory_used@@Base+0x6d48>
  45c350:	ldp	x19, x20, [sp, #16]
  45c354:	ldp	x21, x22, [sp, #32]
  45c358:	ldp	x29, x30, [sp], #64
  45c35c:	ret
  45c360:	mov	x19, x0
  45c364:	mov	x0, x20
  45c368:	bl	45b0e8 <_obstack_memory_used@@Base+0x6d48>
  45c36c:	mov	x0, x19
  45c370:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c374:	nop
  45c378:	stp	x29, x30, [sp, #-16]!
  45c37c:	mov	x29, sp
  45c380:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c384:	ldp	x29, x30, [sp], #16
  45c388:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45c38c:	nop
  45c390:	stp	x29, x30, [sp, #-32]!
  45c394:	mov	x29, sp
  45c398:	str	x19, [sp, #16]
  45c39c:	mov	x19, x0
  45c3a0:	bl	45c378 <_obstack_memory_used@@Base+0x7fd8>
  45c3a4:	mov	x0, x19
  45c3a8:	ldr	x19, [sp, #16]
  45c3ac:	ldp	x29, x30, [sp], #32
  45c3b0:	b	402c80 <_ZGTtdlPv@plt>
  45c3b4:	nop
  45c3b8:	stp	x29, x30, [sp, #-64]!
  45c3bc:	mov	x29, sp
  45c3c0:	stp	x19, x20, [sp, #16]
  45c3c4:	add	x20, sp, #0x30
  45c3c8:	mov	x19, x0
  45c3cc:	mov	x0, x20
  45c3d0:	str	x21, [sp, #32]
  45c3d4:	mov	x21, x1
  45c3d8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c3dc:	add	x1, x1, #0xd70
  45c3e0:	bl	45b6e0 <_obstack_memory_used@@Base+0x7340>
  45c3e4:	mov	x0, x19
  45c3e8:	mov	x1, x20
  45c3ec:	mov	x2, #0x10                  	// #16
  45c3f0:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c3f4:	mov	x0, x19
  45c3f8:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c3fc:	mov	x2, x19
  45c400:	mov	x1, x21
  45c404:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c408:	mov	x0, x20
  45c40c:	bl	45b128 <_obstack_memory_used@@Base+0x6d88>
  45c410:	ldp	x19, x20, [sp, #16]
  45c414:	ldr	x21, [sp, #32]
  45c418:	ldp	x29, x30, [sp], #64
  45c41c:	ret
  45c420:	mov	x19, x0
  45c424:	mov	x0, x20
  45c428:	bl	45b128 <_obstack_memory_used@@Base+0x6d88>
  45c42c:	mov	x0, x19
  45c430:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c434:	nop
  45c438:	stp	x29, x30, [sp, #-64]!
  45c43c:	mov	x29, sp
  45c440:	stp	x19, x20, [sp, #16]
  45c444:	add	x20, sp, #0x30
  45c448:	mov	x19, x0
  45c44c:	mov	x0, x20
  45c450:	stp	x21, x22, [sp, #32]
  45c454:	mov	x22, x1
  45c458:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c45c:	add	x1, x1, #0xd70
  45c460:	bl	45b6e0 <_obstack_memory_used@@Base+0x7340>
  45c464:	mov	x0, x19
  45c468:	mov	x1, x20
  45c46c:	mov	x2, #0x10                  	// #16
  45c470:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c474:	mov	x0, x19
  45c478:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c47c:	mov	x21, x0
  45c480:	mov	x0, x22
  45c484:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45c488:	mov	x1, x0
  45c48c:	mov	x2, x19
  45c490:	mov	x0, x21
  45c494:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c498:	mov	x0, x20
  45c49c:	bl	45b128 <_obstack_memory_used@@Base+0x6d88>
  45c4a0:	ldp	x19, x20, [sp, #16]
  45c4a4:	ldp	x21, x22, [sp, #32]
  45c4a8:	ldp	x29, x30, [sp], #64
  45c4ac:	ret
  45c4b0:	mov	x19, x0
  45c4b4:	mov	x0, x20
  45c4b8:	bl	45b128 <_obstack_memory_used@@Base+0x6d88>
  45c4bc:	mov	x0, x19
  45c4c0:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c4c4:	nop
  45c4c8:	stp	x29, x30, [sp, #-16]!
  45c4cc:	mov	x29, sp
  45c4d0:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c4d4:	ldp	x29, x30, [sp], #16
  45c4d8:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45c4dc:	nop
  45c4e0:	stp	x29, x30, [sp, #-32]!
  45c4e4:	mov	x29, sp
  45c4e8:	str	x19, [sp, #16]
  45c4ec:	mov	x19, x0
  45c4f0:	bl	45c4c8 <_obstack_memory_used@@Base+0x8128>
  45c4f4:	mov	x0, x19
  45c4f8:	ldr	x19, [sp, #16]
  45c4fc:	ldp	x29, x30, [sp], #32
  45c500:	b	402c80 <_ZGTtdlPv@plt>
  45c504:	nop
  45c508:	stp	x29, x30, [sp, #-64]!
  45c50c:	mov	x29, sp
  45c510:	stp	x19, x20, [sp, #16]
  45c514:	add	x20, sp, #0x30
  45c518:	mov	x19, x0
  45c51c:	mov	x0, x20
  45c520:	str	x21, [sp, #32]
  45c524:	mov	x21, x1
  45c528:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c52c:	add	x1, x1, #0xd70
  45c530:	bl	45b710 <_obstack_memory_used@@Base+0x7370>
  45c534:	mov	x0, x19
  45c538:	mov	x1, x20
  45c53c:	mov	x2, #0x10                  	// #16
  45c540:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c544:	mov	x0, x19
  45c548:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c54c:	mov	x2, x19
  45c550:	mov	x1, x21
  45c554:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c558:	mov	x0, x20
  45c55c:	bl	45b168 <_obstack_memory_used@@Base+0x6dc8>
  45c560:	ldp	x19, x20, [sp, #16]
  45c564:	ldr	x21, [sp, #32]
  45c568:	ldp	x29, x30, [sp], #64
  45c56c:	ret
  45c570:	mov	x19, x0
  45c574:	mov	x0, x20
  45c578:	bl	45b168 <_obstack_memory_used@@Base+0x6dc8>
  45c57c:	mov	x0, x19
  45c580:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c584:	nop
  45c588:	stp	x29, x30, [sp, #-64]!
  45c58c:	mov	x29, sp
  45c590:	stp	x19, x20, [sp, #16]
  45c594:	add	x20, sp, #0x30
  45c598:	mov	x19, x0
  45c59c:	mov	x0, x20
  45c5a0:	stp	x21, x22, [sp, #32]
  45c5a4:	mov	x22, x1
  45c5a8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45c5ac:	add	x1, x1, #0xd70
  45c5b0:	bl	45b710 <_obstack_memory_used@@Base+0x7370>
  45c5b4:	mov	x0, x19
  45c5b8:	mov	x1, x20
  45c5bc:	mov	x2, #0x10                  	// #16
  45c5c0:	bl	402ba0 <_ITM_memcpyRnWt@plt>
  45c5c4:	mov	x0, x19
  45c5c8:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c5cc:	mov	x21, x0
  45c5d0:	mov	x0, x22
  45c5d4:	bl	45ba18 <_obstack_memory_used@@Base+0x7678>
  45c5d8:	mov	x1, x0
  45c5dc:	mov	x2, x19
  45c5e0:	mov	x0, x21
  45c5e4:	bl	45b980 <_obstack_memory_used@@Base+0x75e0>
  45c5e8:	mov	x0, x20
  45c5ec:	bl	45b168 <_obstack_memory_used@@Base+0x6dc8>
  45c5f0:	ldp	x19, x20, [sp, #16]
  45c5f4:	ldp	x21, x22, [sp, #32]
  45c5f8:	ldp	x29, x30, [sp], #64
  45c5fc:	ret
  45c600:	mov	x19, x0
  45c604:	mov	x0, x20
  45c608:	bl	45b168 <_obstack_memory_used@@Base+0x6dc8>
  45c60c:	mov	x0, x19
  45c610:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45c614:	nop
  45c618:	stp	x29, x30, [sp, #-16]!
  45c61c:	mov	x29, sp
  45c620:	bl	45ba50 <_obstack_memory_used@@Base+0x76b0>
  45c624:	ldp	x29, x30, [sp], #16
  45c628:	b	45ba20 <_obstack_memory_used@@Base+0x7680>
  45c62c:	nop
  45c630:	stp	x29, x30, [sp, #-32]!
  45c634:	mov	x29, sp
  45c638:	str	x19, [sp, #16]
  45c63c:	mov	x19, x0
  45c640:	bl	45c618 <_obstack_memory_used@@Base+0x8278>
  45c644:	mov	x0, x19
  45c648:	ldr	x19, [sp, #16]
  45c64c:	ldp	x29, x30, [sp], #32
  45c650:	b	402c80 <_ZGTtdlPv@plt>
  45c654:	nop
  45c658:	ldr	x0, [x0]
  45c65c:	ret
  45c660:	mov	x2, x0
  45c664:	mov	x0, x1
  45c668:	str	x1, [x2]
  45c66c:	ret
  45c670:	ldr	x0, [x0]
  45c674:	sub	x0, x0, #0x18
  45c678:	ret
  45c67c:	nop
  45c680:	ldr	x0, [x0]
  45c684:	ret
  45c688:	ldr	x0, [x0]
  45c68c:	ldur	x1, [x0, #-24]
  45c690:	add	x0, x0, x1
  45c694:	ret
  45c698:	ldr	x0, [x0]
  45c69c:	ldur	x3, [x0, #-24]
  45c6a0:	cmp	x3, x1
  45c6a4:	b.cc	45c6b0 <_obstack_memory_used@@Base+0x8310>  // b.lo, b.ul, b.last
  45c6a8:	mov	x0, x1
  45c6ac:	ret
  45c6b0:	mov	x4, x2
  45c6b4:	stp	x29, x30, [sp, #-16]!
  45c6b8:	mov	x2, x1
  45c6bc:	mov	x29, sp
  45c6c0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45c6c4:	mov	x1, x4
  45c6c8:	add	x0, x0, #0x390
  45c6cc:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45c6d0:	ldr	x0, [x0]
  45c6d4:	mov	x4, #0xfffffffffffffff9    	// #-7
  45c6d8:	movk	x4, #0x3fff, lsl #48
  45c6dc:	add	x1, x1, x4
  45c6e0:	ldur	x0, [x0, #-24]
  45c6e4:	sub	x1, x1, x0
  45c6e8:	cmp	x1, x2
  45c6ec:	b.cc	45c6f4 <_obstack_memory_used@@Base+0x8354>  // b.lo, b.ul, b.last
  45c6f0:	ret
  45c6f4:	stp	x29, x30, [sp, #-16]!
  45c6f8:	mov	x0, x3
  45c6fc:	mov	x29, sp
  45c700:	bl	402f0c <ferror@plt+0x1dc>
  45c704:	nop
  45c708:	ldr	x0, [x0]
  45c70c:	ldur	x0, [x0, #-24]
  45c710:	sub	x0, x0, x1
  45c714:	cmp	x0, x2
  45c718:	csel	x0, x0, x2, ls  // ls = plast
  45c71c:	ret
  45c720:	ldr	x0, [x0]
  45c724:	cmp	x0, x1
  45c728:	b.hi	45c740 <_obstack_memory_used@@Base+0x83a0>  // b.pmore
  45c72c:	ldur	x2, [x0, #-24]
  45c730:	add	x0, x0, x2
  45c734:	cmp	x0, x1
  45c738:	cset	w0, cc  // cc = lo, ul, last
  45c73c:	ret
  45c740:	mov	w0, #0x1                   	// #1
  45c744:	ret
  45c748:	cmp	x2, #0x1
  45c74c:	mov	x4, x0
  45c750:	b.eq	45c760 <_obstack_memory_used@@Base+0x83c0>  // b.none
  45c754:	cbnz	x2, 45c75c <_obstack_memory_used@@Base+0x83bc>
  45c758:	ret
  45c75c:	b	402620 <memcpy@plt>
  45c760:	ldrb	w0, [x1]
  45c764:	strb	w0, [x4]
  45c768:	ret
  45c76c:	nop
  45c770:	cmp	x2, #0x1
  45c774:	mov	x4, x0
  45c778:	b.eq	45c788 <_obstack_memory_used@@Base+0x83e8>  // b.none
  45c77c:	cbnz	x2, 45c784 <_obstack_memory_used@@Base+0x83e4>
  45c780:	ret
  45c784:	b	402630 <memmove@plt>
  45c788:	ldrb	w0, [x1]
  45c78c:	strb	w0, [x4]
  45c790:	ret
  45c794:	nop
  45c798:	mov	x3, x1
  45c79c:	and	w1, w2, #0xff
  45c7a0:	cmp	x3, #0x1
  45c7a4:	b.eq	45c7b8 <_obstack_memory_used@@Base+0x8418>  // b.none
  45c7a8:	cbnz	x3, 45c7b0 <_obstack_memory_used@@Base+0x8410>
  45c7ac:	ret
  45c7b0:	mov	x2, x3
  45c7b4:	b	402890 <memset@plt>
  45c7b8:	strb	w1, [x0]
  45c7bc:	ret
  45c7c0:	sub	x2, x2, x1
  45c7c4:	mov	x4, x0
  45c7c8:	cmp	x2, #0x1
  45c7cc:	b.eq	45c7dc <_obstack_memory_used@@Base+0x843c>  // b.none
  45c7d0:	cbnz	x2, 45c7d8 <_obstack_memory_used@@Base+0x8438>
  45c7d4:	ret
  45c7d8:	b	402620 <memcpy@plt>
  45c7dc:	ldrb	w0, [x1]
  45c7e0:	strb	w0, [x4]
  45c7e4:	ret
  45c7e8:	sub	x2, x2, x1
  45c7ec:	mov	x4, x0
  45c7f0:	cmp	x2, #0x1
  45c7f4:	b.eq	45c804 <_obstack_memory_used@@Base+0x8464>  // b.none
  45c7f8:	cbnz	x2, 45c800 <_obstack_memory_used@@Base+0x8460>
  45c7fc:	ret
  45c800:	b	402620 <memcpy@plt>
  45c804:	ldrb	w0, [x1]
  45c808:	strb	w0, [x4]
  45c80c:	ret
  45c810:	sub	x2, x2, x1
  45c814:	mov	x4, x0
  45c818:	cmp	x2, #0x1
  45c81c:	b.eq	45c82c <_obstack_memory_used@@Base+0x848c>  // b.none
  45c820:	cbnz	x2, 45c828 <_obstack_memory_used@@Base+0x8488>
  45c824:	ret
  45c828:	b	402620 <memcpy@plt>
  45c82c:	ldrb	w0, [x1]
  45c830:	strb	w0, [x4]
  45c834:	ret
  45c838:	sub	x2, x2, x1
  45c83c:	mov	x4, x0
  45c840:	cmp	x2, #0x1
  45c844:	b.eq	45c854 <_obstack_memory_used@@Base+0x84b4>  // b.none
  45c848:	cbnz	x2, 45c850 <_obstack_memory_used@@Base+0x84b0>
  45c84c:	ret
  45c850:	b	402620 <memcpy@plt>
  45c854:	ldrb	w0, [x1]
  45c858:	strb	w0, [x4]
  45c85c:	ret
  45c860:	sub	x0, x0, x1
  45c864:	mov	x2, #0x7fffffff            	// #2147483647
  45c868:	cmp	x0, x2
  45c86c:	b.gt	45c880 <_obstack_memory_used@@Base+0x84e0>
  45c870:	mov	x2, #0xffffffff80000000    	// #-2147483648
  45c874:	cmp	x0, x2
  45c878:	csel	w0, w2, w0, lt  // lt = tstop
  45c87c:	ret
  45c880:	mov	w0, w2
  45c884:	ret
  45c888:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45c88c:	ldr	x0, [x0, #3984]
  45c890:	ret
  45c894:	nop
  45c898:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45c89c:	ldr	x1, [x1, #3984]
  45c8a0:	add	x1, x1, #0x18
  45c8a4:	str	x1, [x0]
  45c8a8:	ret
  45c8ac:	nop
  45c8b0:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45c8b4:	ldr	x3, [x1]
  45c8b8:	str	x3, [x0]
  45c8bc:	ldr	x2, [x2, #3984]
  45c8c0:	add	x2, x2, #0x18
  45c8c4:	str	x2, [x1]
  45c8c8:	ret
  45c8cc:	nop
  45c8d0:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45c8d4:	ldr	x3, [x1]
  45c8d8:	str	x3, [x0]
  45c8dc:	ldr	x2, [x2, #3984]
  45c8e0:	add	x2, x2, #0x18
  45c8e4:	str	x2, [x1]
  45c8e8:	ret
  45c8ec:	nop
  45c8f0:	ldr	x0, [x0]
  45c8f4:	ret
  45c8f8:	ldr	x0, [x0]
  45c8fc:	ldur	x1, [x0, #-24]
  45c900:	add	x0, x0, x1
  45c904:	ret
  45c908:	mov	x1, x0
  45c90c:	mov	x0, x8
  45c910:	ldr	x1, [x1]
  45c914:	ldur	x2, [x1, #-24]
  45c918:	add	x1, x1, x2
  45c91c:	str	x1, [x8]
  45c920:	ret
  45c924:	nop
  45c928:	mov	x1, x0
  45c92c:	mov	x0, x8
  45c930:	ldr	x1, [x1]
  45c934:	str	x1, [x8]
  45c938:	ret
  45c93c:	nop
  45c940:	ldr	x0, [x0]
  45c944:	ret
  45c948:	ldr	x0, [x0]
  45c94c:	ldur	x1, [x0, #-24]
  45c950:	add	x0, x0, x1
  45c954:	ret
  45c958:	mov	x1, x0
  45c95c:	mov	x0, x8
  45c960:	ldr	x1, [x1]
  45c964:	ldur	x2, [x1, #-24]
  45c968:	add	x1, x1, x2
  45c96c:	str	x1, [x8]
  45c970:	ret
  45c974:	nop
  45c978:	mov	x1, x0
  45c97c:	mov	x0, x8
  45c980:	ldr	x1, [x1]
  45c984:	str	x1, [x8]
  45c988:	ret
  45c98c:	nop
  45c990:	ldr	x0, [x0]
  45c994:	ldur	x0, [x0, #-24]
  45c998:	ret
  45c99c:	nop
  45c9a0:	ldr	x0, [x0]
  45c9a4:	ldur	x0, [x0, #-24]
  45c9a8:	ret
  45c9ac:	nop
  45c9b0:	mov	x0, #0xfffffffffffffff9    	// #-7
  45c9b4:	movk	x0, #0x3fff, lsl #48
  45c9b8:	ret
  45c9bc:	nop
  45c9c0:	ldr	x0, [x0]
  45c9c4:	ldur	x0, [x0, #-16]
  45c9c8:	ret
  45c9cc:	nop
  45c9d0:	ldr	x0, [x0]
  45c9d4:	ldur	x0, [x0, #-24]
  45c9d8:	cmp	x0, #0x0
  45c9dc:	cset	w0, eq  // eq = none
  45c9e0:	ret
  45c9e4:	nop
  45c9e8:	ldr	x0, [x0]
  45c9ec:	add	x0, x0, x1
  45c9f0:	ret
  45c9f4:	nop
  45c9f8:	ldr	x0, [x0]
  45c9fc:	ldur	x2, [x0, #-24]
  45ca00:	cmp	x1, x2
  45ca04:	b.cs	45ca10 <_obstack_memory_used@@Base+0x8670>  // b.hs, b.nlast
  45ca08:	add	x0, x0, x1
  45ca0c:	ret
  45ca10:	stp	x29, x30, [sp, #-16]!
  45ca14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ca18:	add	x0, x0, #0x3c8
  45ca1c:	mov	x29, sp
  45ca20:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45ca24:	nop
  45ca28:	ldr	x0, [x0]
  45ca2c:	ret
  45ca30:	ldr	x1, [x0]
  45ca34:	ldur	x0, [x1, #-24]
  45ca38:	sub	x0, x0, #0x1
  45ca3c:	add	x0, x1, x0
  45ca40:	ret
  45ca44:	nop
  45ca48:	stp	x29, x30, [sp, #-32]!
  45ca4c:	mov	x5, x3
  45ca50:	mov	x29, sp
  45ca54:	ldr	x0, [x0]
  45ca58:	ldur	x4, [x0, #-24]
  45ca5c:	str	x19, [sp, #16]
  45ca60:	cmp	x3, x4
  45ca64:	b.hi	45cabc <_obstack_memory_used@@Base+0x871c>  // b.pmore
  45ca68:	sub	x4, x4, x3
  45ca6c:	cmp	x4, x2
  45ca70:	csel	x19, x4, x2, ls  // ls = plast
  45ca74:	cbz	x19, 45ca94 <_obstack_memory_used@@Base+0x86f4>
  45ca78:	mov	x3, x1
  45ca7c:	cmp	x19, #0x1
  45ca80:	add	x1, x0, x5
  45ca84:	b.eq	45caa4 <_obstack_memory_used@@Base+0x8704>  // b.none
  45ca88:	mov	x0, x3
  45ca8c:	mov	x2, x19
  45ca90:	bl	402620 <memcpy@plt>
  45ca94:	mov	x0, x19
  45ca98:	ldr	x19, [sp, #16]
  45ca9c:	ldp	x29, x30, [sp], #32
  45caa0:	ret
  45caa4:	ldrb	w0, [x0, x5]
  45caa8:	strb	w0, [x3]
  45caac:	mov	x0, x19
  45cab0:	ldr	x19, [sp, #16]
  45cab4:	ldp	x29, x30, [sp], #32
  45cab8:	ret
  45cabc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45cac0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45cac4:	mov	x3, x4
  45cac8:	mov	x2, x5
  45cacc:	add	x1, x1, #0x4b0
  45cad0:	add	x0, x0, #0x390
  45cad4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45cad8:	ldr	x2, [x0]
  45cadc:	sub	x3, x2, #0x8
  45cae0:	ldr	w3, [x3]
  45cae4:	tbz	w3, #31, 45caec <_obstack_memory_used@@Base+0x874c>
  45cae8:	stur	wzr, [x2, #-8]
  45caec:	ldr	x3, [x1]
  45caf0:	sub	x4, x3, #0x8
  45caf4:	ldr	w4, [x4]
  45caf8:	tbz	w4, #31, 45cb00 <_obstack_memory_used@@Base+0x8760>
  45cafc:	stur	wzr, [x3, #-8]
  45cb00:	str	x3, [x0]
  45cb04:	str	x2, [x1]
  45cb08:	ret
  45cb0c:	nop
  45cb10:	stp	x29, x30, [sp, #-32]!
  45cb14:	mov	x29, sp
  45cb18:	str	x19, [sp, #16]
  45cb1c:	mov	x19, x0
  45cb20:	bl	45cad8 <_obstack_memory_used@@Base+0x8738>
  45cb24:	mov	x0, x19
  45cb28:	ldr	x19, [sp, #16]
  45cb2c:	ldp	x29, x30, [sp], #32
  45cb30:	ret
  45cb34:	nop
  45cb38:	stp	x29, x30, [sp, #-32]!
  45cb3c:	mov	x29, sp
  45cb40:	str	x19, [sp, #16]
  45cb44:	mov	x19, x0
  45cb48:	bl	45cad8 <_obstack_memory_used@@Base+0x8738>
  45cb4c:	mov	x0, x19
  45cb50:	ldr	x19, [sp, #16]
  45cb54:	ldp	x29, x30, [sp], #32
  45cb58:	ret
  45cb5c:	nop
  45cb60:	ldr	x0, [x0]
  45cb64:	ret
  45cb68:	ldr	x0, [x0]
  45cb6c:	ret
  45cb70:	mov	x0, x8
  45cb74:	ret
  45cb78:	stp	x29, x30, [sp, #-80]!
  45cb7c:	mov	x29, sp
  45cb80:	stp	x23, x24, [sp, #48]
  45cb84:	ldr	x23, [x0]
  45cb88:	stp	x21, x22, [sp, #32]
  45cb8c:	stp	x19, x20, [sp, #16]
  45cb90:	ldur	x21, [x23, #-24]
  45cb94:	cmp	x21, x2
  45cb98:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  45cb9c:	cbz	x3, 45cc20 <_obstack_memory_used@@Base+0x8880>
  45cba0:	mov	x19, #0xffffffffffffffff    	// #-1
  45cba4:	b.ls	45cc20 <_obstack_memory_used@@Base+0x8880>  // b.plast
  45cba8:	str	x25, [sp, #64]
  45cbac:	sub	x4, x21, x2
  45cbb0:	add	x0, x23, x2
  45cbb4:	add	x21, x23, x21
  45cbb8:	mov	x25, x3
  45cbbc:	cmp	x3, x4
  45cbc0:	b.hi	45cc38 <_obstack_memory_used@@Base+0x8898>  // b.pmore
  45cbc4:	mov	x20, #0x1                   	// #1
  45cbc8:	sub	x20, x20, x3
  45cbcc:	adds	x2, x20, x4
  45cbd0:	b.eq	45cc38 <_obstack_memory_used@@Base+0x8898>  // b.none
  45cbd4:	ldrb	w24, [x1]
  45cbd8:	mov	x22, x1
  45cbdc:	mov	w1, w24
  45cbe0:	bl	402b80 <memchr@plt>
  45cbe4:	mov	x2, x25
  45cbe8:	mov	x19, x0
  45cbec:	cbz	x0, 45cc18 <_obstack_memory_used@@Base+0x8878>
  45cbf0:	mov	x1, x22
  45cbf4:	bl	4029e0 <memcmp@plt>
  45cbf8:	mov	w1, w0
  45cbfc:	add	x0, x19, #0x1
  45cc00:	sub	x2, x21, x0
  45cc04:	cbz	w1, 45cc54 <_obstack_memory_used@@Base+0x88b4>
  45cc08:	cmp	x25, x2
  45cc0c:	b.hi	45cc18 <_obstack_memory_used@@Base+0x8878>  // b.pmore
  45cc10:	adds	x2, x20, x2
  45cc14:	b.ne	45cbdc <_obstack_memory_used@@Base+0x883c>  // b.any
  45cc18:	ldr	x25, [sp, #64]
  45cc1c:	mov	x19, #0xffffffffffffffff    	// #-1
  45cc20:	mov	x0, x19
  45cc24:	ldp	x19, x20, [sp, #16]
  45cc28:	ldp	x21, x22, [sp, #32]
  45cc2c:	ldp	x23, x24, [sp, #48]
  45cc30:	ldp	x29, x30, [sp], #80
  45cc34:	ret
  45cc38:	mov	x0, x19
  45cc3c:	ldp	x19, x20, [sp, #16]
  45cc40:	ldp	x21, x22, [sp, #32]
  45cc44:	ldp	x23, x24, [sp, #48]
  45cc48:	ldr	x25, [sp, #64]
  45cc4c:	ldp	x29, x30, [sp], #80
  45cc50:	ret
  45cc54:	sub	x19, x19, x23
  45cc58:	ldr	x25, [sp, #64]
  45cc5c:	b	45cc20 <_obstack_memory_used@@Base+0x8880>
  45cc60:	ldr	x1, [x1]
  45cc64:	ldur	x3, [x1, #-24]
  45cc68:	b	45cb78 <_obstack_memory_used@@Base+0x87d8>
  45cc6c:	nop
  45cc70:	stp	x29, x30, [sp, #-48]!
  45cc74:	mov	x29, sp
  45cc78:	stp	x19, x20, [sp, #16]
  45cc7c:	mov	x19, x1
  45cc80:	mov	x20, x0
  45cc84:	mov	x0, x1
  45cc88:	str	x21, [sp, #32]
  45cc8c:	mov	x21, x2
  45cc90:	bl	402680 <strlen@plt>
  45cc94:	mov	x2, x21
  45cc98:	mov	x3, x0
  45cc9c:	mov	x1, x19
  45cca0:	mov	x0, x20
  45cca4:	ldp	x19, x20, [sp, #16]
  45cca8:	ldr	x21, [sp, #32]
  45ccac:	ldp	x29, x30, [sp], #48
  45ccb0:	b	45cb78 <_obstack_memory_used@@Base+0x87d8>
  45ccb4:	nop
  45ccb8:	stp	x29, x30, [sp, #-32]!
  45ccbc:	mov	x3, x2
  45ccc0:	mov	x29, sp
  45ccc4:	str	x19, [sp, #16]
  45ccc8:	ldr	x19, [x0]
  45cccc:	mov	x0, #0xffffffffffffffff    	// #-1
  45ccd0:	ldur	x2, [x19, #-24]
  45ccd4:	cmp	x3, x2
  45ccd8:	b.cs	45ccf8 <_obstack_memory_used@@Base+0x8958>  // b.hs, b.nlast
  45ccdc:	add	x0, x19, x3
  45cce0:	and	w1, w1, #0xff
  45cce4:	sub	x2, x2, x3
  45cce8:	bl	402b80 <memchr@plt>
  45ccec:	sub	x19, x0, x19
  45ccf0:	cmp	x0, #0x0
  45ccf4:	csinv	x0, x19, xzr, ne  // ne = any
  45ccf8:	ldr	x19, [sp, #16]
  45ccfc:	ldp	x29, x30, [sp], #32
  45cd00:	ret
  45cd04:	nop
  45cd08:	stp	x29, x30, [sp, #-48]!
  45cd0c:	mov	x29, sp
  45cd10:	stp	x21, x22, [sp, #32]
  45cd14:	ldr	x22, [x0]
  45cd18:	stp	x19, x20, [sp, #16]
  45cd1c:	ldur	x0, [x22, #-24]
  45cd20:	cmp	x3, x0
  45cd24:	b.hi	45cd78 <_obstack_memory_used@@Base+0x89d8>  // b.pmore
  45cd28:	sub	x0, x0, x3
  45cd2c:	mov	x20, x3
  45cd30:	cmp	x0, x2
  45cd34:	mov	x21, x1
  45cd38:	csel	x19, x0, x2, ls  // ls = plast
  45cd3c:	cbz	x20, 45cd64 <_obstack_memory_used@@Base+0x89c4>
  45cd40:	mov	x2, x20
  45cd44:	mov	x1, x21
  45cd48:	add	x0, x22, x19
  45cd4c:	bl	4029e0 <memcmp@plt>
  45cd50:	cbz	w0, 45cd64 <_obstack_memory_used@@Base+0x89c4>
  45cd54:	sub	x0, x19, #0x1
  45cd58:	cbz	x19, 45cd78 <_obstack_memory_used@@Base+0x89d8>
  45cd5c:	mov	x19, x0
  45cd60:	cbnz	x20, 45cd40 <_obstack_memory_used@@Base+0x89a0>
  45cd64:	mov	x0, x19
  45cd68:	ldp	x19, x20, [sp, #16]
  45cd6c:	ldp	x21, x22, [sp, #32]
  45cd70:	ldp	x29, x30, [sp], #48
  45cd74:	ret
  45cd78:	mov	x19, #0xffffffffffffffff    	// #-1
  45cd7c:	mov	x0, x19
  45cd80:	ldp	x19, x20, [sp, #16]
  45cd84:	ldp	x21, x22, [sp, #32]
  45cd88:	ldp	x29, x30, [sp], #48
  45cd8c:	ret
  45cd90:	ldr	x1, [x1]
  45cd94:	ldur	x3, [x1, #-24]
  45cd98:	b	45cd08 <_obstack_memory_used@@Base+0x8968>
  45cd9c:	nop
  45cda0:	stp	x29, x30, [sp, #-48]!
  45cda4:	mov	x29, sp
  45cda8:	stp	x19, x20, [sp, #16]
  45cdac:	mov	x19, x1
  45cdb0:	mov	x20, x0
  45cdb4:	mov	x0, x1
  45cdb8:	str	x21, [sp, #32]
  45cdbc:	mov	x21, x2
  45cdc0:	bl	402680 <strlen@plt>
  45cdc4:	mov	x2, x21
  45cdc8:	mov	x3, x0
  45cdcc:	mov	x1, x19
  45cdd0:	mov	x0, x20
  45cdd4:	ldp	x19, x20, [sp, #16]
  45cdd8:	ldr	x21, [sp, #32]
  45cddc:	ldp	x29, x30, [sp], #48
  45cde0:	b	45cd08 <_obstack_memory_used@@Base+0x8968>
  45cde4:	nop
  45cde8:	ldr	x4, [x0]
  45cdec:	and	w1, w1, #0xff
  45cdf0:	mov	x0, #0xffffffffffffffff    	// #-1
  45cdf4:	ldur	x3, [x4, #-24]
  45cdf8:	cbz	x3, 45ce20 <_obstack_memory_used@@Base+0x8a80>
  45cdfc:	sub	x3, x3, #0x1
  45ce00:	cmp	x3, x2
  45ce04:	csel	x0, x3, x2, ls  // ls = plast
  45ce08:	ldrb	w2, [x4, x0]
  45ce0c:	cmp	w2, w1
  45ce10:	b.eq	45ce20 <_obstack_memory_used@@Base+0x8a80>  // b.none
  45ce14:	sub	x0, x0, #0x1
  45ce18:	cmn	x0, #0x1
  45ce1c:	b.ne	45ce08 <_obstack_memory_used@@Base+0x8a68>  // b.any
  45ce20:	ret
  45ce24:	nop
  45ce28:	cbz	x3, 45cea8 <_obstack_memory_used@@Base+0x8b08>
  45ce2c:	stp	x29, x30, [sp, #-64]!
  45ce30:	mov	x29, sp
  45ce34:	stp	x21, x22, [sp, #32]
  45ce38:	mov	x21, x1
  45ce3c:	ldr	x22, [x0]
  45ce40:	stp	x19, x20, [sp, #16]
  45ce44:	mov	x19, x2
  45ce48:	mov	x20, x3
  45ce4c:	str	x23, [sp, #48]
  45ce50:	ldur	x23, [x22, #-24]
  45ce54:	b	45ce70 <_obstack_memory_used@@Base+0x8ad0>
  45ce58:	ldrb	w1, [x22, x19]
  45ce5c:	mov	x2, x20
  45ce60:	mov	x0, x21
  45ce64:	bl	402b80 <memchr@plt>
  45ce68:	cbnz	x0, 45ce90 <_obstack_memory_used@@Base+0x8af0>
  45ce6c:	add	x19, x19, #0x1
  45ce70:	cmp	x23, x19
  45ce74:	b.hi	45ce58 <_obstack_memory_used@@Base+0x8ab8>  // b.pmore
  45ce78:	mov	x0, #0xffffffffffffffff    	// #-1
  45ce7c:	ldp	x19, x20, [sp, #16]
  45ce80:	ldp	x21, x22, [sp, #32]
  45ce84:	ldr	x23, [sp, #48]
  45ce88:	ldp	x29, x30, [sp], #64
  45ce8c:	ret
  45ce90:	mov	x0, x19
  45ce94:	ldp	x19, x20, [sp, #16]
  45ce98:	ldp	x21, x22, [sp, #32]
  45ce9c:	ldr	x23, [sp, #48]
  45cea0:	ldp	x29, x30, [sp], #64
  45cea4:	ret
  45cea8:	mov	x0, #0xffffffffffffffff    	// #-1
  45ceac:	ret
  45ceb0:	ldr	x1, [x1]
  45ceb4:	ldur	x3, [x1, #-24]
  45ceb8:	b	45ce28 <_obstack_memory_used@@Base+0x8a88>
  45cebc:	nop
  45cec0:	stp	x29, x30, [sp, #-48]!
  45cec4:	mov	x29, sp
  45cec8:	stp	x19, x20, [sp, #16]
  45cecc:	mov	x19, x1
  45ced0:	mov	x20, x0
  45ced4:	mov	x0, x1
  45ced8:	str	x21, [sp, #32]
  45cedc:	mov	x21, x2
  45cee0:	bl	402680 <strlen@plt>
  45cee4:	mov	x2, x21
  45cee8:	mov	x3, x0
  45ceec:	mov	x1, x19
  45cef0:	mov	x0, x20
  45cef4:	ldp	x19, x20, [sp, #16]
  45cef8:	ldr	x21, [sp, #32]
  45cefc:	ldp	x29, x30, [sp], #48
  45cf00:	b	45ce28 <_obstack_memory_used@@Base+0x8a88>
  45cf04:	nop
  45cf08:	b	45ccb8 <_obstack_memory_used@@Base+0x8918>
  45cf0c:	nop
  45cf10:	stp	x29, x30, [sp, #-48]!
  45cf14:	mov	x29, sp
  45cf18:	stp	x21, x22, [sp, #32]
  45cf1c:	ldr	x22, [x0]
  45cf20:	stp	x19, x20, [sp, #16]
  45cf24:	mov	x19, #0xffffffffffffffff    	// #-1
  45cf28:	ldur	x0, [x22, #-24]
  45cf2c:	cmp	x0, #0x0
  45cf30:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  45cf34:	b.eq	45cf70 <_obstack_memory_used@@Base+0x8bd0>  // b.none
  45cf38:	sub	x0, x0, #0x1
  45cf3c:	mov	x20, x3
  45cf40:	cmp	x0, x2
  45cf44:	mov	x21, x1
  45cf48:	csel	x19, x0, x2, ls  // ls = plast
  45cf4c:	b	45cf5c <_obstack_memory_used@@Base+0x8bbc>
  45cf50:	sub	x19, x19, #0x1
  45cf54:	cmn	x19, #0x1
  45cf58:	b.eq	45cf70 <_obstack_memory_used@@Base+0x8bd0>  // b.none
  45cf5c:	ldrb	w1, [x22, x19]
  45cf60:	mov	x2, x20
  45cf64:	mov	x0, x21
  45cf68:	bl	402b80 <memchr@plt>
  45cf6c:	cbz	x0, 45cf50 <_obstack_memory_used@@Base+0x8bb0>
  45cf70:	mov	x0, x19
  45cf74:	ldp	x19, x20, [sp, #16]
  45cf78:	ldp	x21, x22, [sp, #32]
  45cf7c:	ldp	x29, x30, [sp], #48
  45cf80:	ret
  45cf84:	nop
  45cf88:	ldr	x1, [x1]
  45cf8c:	ldur	x3, [x1, #-24]
  45cf90:	b	45cf10 <_obstack_memory_used@@Base+0x8b70>
  45cf94:	nop
  45cf98:	stp	x29, x30, [sp, #-48]!
  45cf9c:	mov	x29, sp
  45cfa0:	stp	x19, x20, [sp, #16]
  45cfa4:	mov	x19, x1
  45cfa8:	mov	x20, x0
  45cfac:	mov	x0, x1
  45cfb0:	str	x21, [sp, #32]
  45cfb4:	mov	x21, x2
  45cfb8:	bl	402680 <strlen@plt>
  45cfbc:	mov	x2, x21
  45cfc0:	mov	x3, x0
  45cfc4:	mov	x1, x19
  45cfc8:	mov	x0, x20
  45cfcc:	ldp	x19, x20, [sp, #16]
  45cfd0:	ldr	x21, [sp, #32]
  45cfd4:	ldp	x29, x30, [sp], #48
  45cfd8:	b	45cf10 <_obstack_memory_used@@Base+0x8b70>
  45cfdc:	nop
  45cfe0:	b	45cde8 <_obstack_memory_used@@Base+0x8a48>
  45cfe4:	nop
  45cfe8:	stp	x29, x30, [sp, #-64]!
  45cfec:	mov	x29, sp
  45cff0:	stp	x21, x22, [sp, #32]
  45cff4:	ldr	x22, [x0]
  45cff8:	str	x23, [sp, #48]
  45cffc:	ldur	x23, [x22, #-24]
  45d000:	cmp	x2, x23
  45d004:	b.cs	45d070 <_obstack_memory_used@@Base+0x8cd0>  // b.hs, b.nlast
  45d008:	stp	x19, x20, [sp, #16]
  45d00c:	mov	x21, x1
  45d010:	mov	x19, x2
  45d014:	mov	x20, x3
  45d018:	cbnz	x3, 45d02c <_obstack_memory_used@@Base+0x8c8c>
  45d01c:	b	45d040 <_obstack_memory_used@@Base+0x8ca0>
  45d020:	add	x19, x19, #0x1
  45d024:	cmp	x19, x23
  45d028:	b.eq	45d058 <_obstack_memory_used@@Base+0x8cb8>  // b.none
  45d02c:	ldrb	w1, [x22, x19]
  45d030:	mov	x2, x20
  45d034:	mov	x0, x21
  45d038:	bl	402b80 <memchr@plt>
  45d03c:	cbnz	x0, 45d020 <_obstack_memory_used@@Base+0x8c80>
  45d040:	mov	x0, x19
  45d044:	ldp	x19, x20, [sp, #16]
  45d048:	ldp	x21, x22, [sp, #32]
  45d04c:	ldr	x23, [sp, #48]
  45d050:	ldp	x29, x30, [sp], #64
  45d054:	ret
  45d058:	mov	x0, #0xffffffffffffffff    	// #-1
  45d05c:	ldp	x19, x20, [sp, #16]
  45d060:	ldp	x21, x22, [sp, #32]
  45d064:	ldr	x23, [sp, #48]
  45d068:	ldp	x29, x30, [sp], #64
  45d06c:	ret
  45d070:	mov	x0, #0xffffffffffffffff    	// #-1
  45d074:	b	45d048 <_obstack_memory_used@@Base+0x8ca8>
  45d078:	ldr	x1, [x1]
  45d07c:	ldur	x3, [x1, #-24]
  45d080:	b	45cfe8 <_obstack_memory_used@@Base+0x8c48>
  45d084:	nop
  45d088:	stp	x29, x30, [sp, #-48]!
  45d08c:	mov	x29, sp
  45d090:	stp	x19, x20, [sp, #16]
  45d094:	mov	x19, x1
  45d098:	mov	x20, x0
  45d09c:	mov	x0, x1
  45d0a0:	str	x21, [sp, #32]
  45d0a4:	mov	x21, x2
  45d0a8:	bl	402680 <strlen@plt>
  45d0ac:	mov	x2, x21
  45d0b0:	mov	x3, x0
  45d0b4:	mov	x1, x19
  45d0b8:	mov	x0, x20
  45d0bc:	ldp	x19, x20, [sp, #16]
  45d0c0:	ldr	x21, [sp, #32]
  45d0c4:	ldp	x29, x30, [sp], #48
  45d0c8:	b	45cfe8 <_obstack_memory_used@@Base+0x8c48>
  45d0cc:	nop
  45d0d0:	ldr	x3, [x0]
  45d0d4:	and	w1, w1, #0xff
  45d0d8:	ldur	x4, [x3, #-24]
  45d0dc:	cmp	x2, x4
  45d0e0:	b.cc	45d0f4 <_obstack_memory_used@@Base+0x8d54>  // b.lo, b.ul, b.last
  45d0e4:	b	45d108 <_obstack_memory_used@@Base+0x8d68>
  45d0e8:	add	x2, x2, #0x1
  45d0ec:	cmp	x2, x4
  45d0f0:	b.eq	45d108 <_obstack_memory_used@@Base+0x8d68>  // b.none
  45d0f4:	ldrb	w0, [x3, x2]
  45d0f8:	cmp	w0, w1
  45d0fc:	b.eq	45d0e8 <_obstack_memory_used@@Base+0x8d48>  // b.none
  45d100:	mov	x0, x2
  45d104:	ret
  45d108:	mov	x0, #0xffffffffffffffff    	// #-1
  45d10c:	ret
  45d110:	stp	x29, x30, [sp, #-48]!
  45d114:	mov	x29, sp
  45d118:	stp	x21, x22, [sp, #32]
  45d11c:	ldr	x22, [x0]
  45d120:	stp	x19, x20, [sp, #16]
  45d124:	mov	x19, #0xffffffffffffffff    	// #-1
  45d128:	ldur	x0, [x22, #-24]
  45d12c:	cbz	x0, 45d168 <_obstack_memory_used@@Base+0x8dc8>
  45d130:	sub	x0, x0, #0x1
  45d134:	mov	x21, x1
  45d138:	cmp	x0, x2
  45d13c:	mov	x20, x3
  45d140:	csel	x19, x0, x2, ls  // ls = plast
  45d144:	cbz	x20, 45d168 <_obstack_memory_used@@Base+0x8dc8>
  45d148:	ldrb	w1, [x22, x19]
  45d14c:	mov	x2, x20
  45d150:	mov	x0, x21
  45d154:	bl	402b80 <memchr@plt>
  45d158:	cbz	x0, 45d168 <_obstack_memory_used@@Base+0x8dc8>
  45d15c:	sub	x19, x19, #0x1
  45d160:	cmn	x19, #0x1
  45d164:	b.ne	45d144 <_obstack_memory_used@@Base+0x8da4>  // b.any
  45d168:	mov	x0, x19
  45d16c:	ldp	x19, x20, [sp, #16]
  45d170:	ldp	x21, x22, [sp, #32]
  45d174:	ldp	x29, x30, [sp], #48
  45d178:	ret
  45d17c:	nop
  45d180:	ldr	x1, [x1]
  45d184:	ldur	x3, [x1, #-24]
  45d188:	b	45d110 <_obstack_memory_used@@Base+0x8d70>
  45d18c:	nop
  45d190:	stp	x29, x30, [sp, #-48]!
  45d194:	mov	x29, sp
  45d198:	stp	x19, x20, [sp, #16]
  45d19c:	mov	x19, x1
  45d1a0:	mov	x20, x0
  45d1a4:	mov	x0, x1
  45d1a8:	str	x21, [sp, #32]
  45d1ac:	mov	x21, x2
  45d1b0:	bl	402680 <strlen@plt>
  45d1b4:	mov	x2, x21
  45d1b8:	mov	x3, x0
  45d1bc:	mov	x1, x19
  45d1c0:	mov	x0, x20
  45d1c4:	ldp	x19, x20, [sp, #16]
  45d1c8:	ldr	x21, [sp, #32]
  45d1cc:	ldp	x29, x30, [sp], #48
  45d1d0:	b	45d110 <_obstack_memory_used@@Base+0x8d70>
  45d1d4:	nop
  45d1d8:	ldr	x4, [x0]
  45d1dc:	and	w1, w1, #0xff
  45d1e0:	mov	x0, #0xffffffffffffffff    	// #-1
  45d1e4:	ldur	x3, [x4, #-24]
  45d1e8:	cbz	x3, 45d214 <_obstack_memory_used@@Base+0x8e74>
  45d1ec:	sub	x3, x3, #0x1
  45d1f0:	cmp	x3, x2
  45d1f4:	csel	x0, x3, x2, ls  // ls = plast
  45d1f8:	b	45d208 <_obstack_memory_used@@Base+0x8e68>
  45d1fc:	sub	x0, x0, #0x1
  45d200:	cmn	x0, #0x1
  45d204:	b.eq	45d214 <_obstack_memory_used@@Base+0x8e74>  // b.none
  45d208:	ldrb	w2, [x4, x0]
  45d20c:	cmp	w2, w1
  45d210:	b.eq	45d1fc <_obstack_memory_used@@Base+0x8e5c>  // b.none
  45d214:	ret
  45d218:	stp	x29, x30, [sp, #-32]!
  45d21c:	mov	x29, sp
  45d220:	ldr	x0, [x0]
  45d224:	stp	x19, x20, [sp, #16]
  45d228:	ldr	x1, [x1]
  45d22c:	ldur	x19, [x0, #-24]
  45d230:	ldur	x20, [x1, #-24]
  45d234:	cmp	x20, x19
  45d238:	csel	x2, x20, x19, ls  // ls = plast
  45d23c:	cbz	x2, 45d248 <_obstack_memory_used@@Base+0x8ea8>
  45d240:	bl	4029e0 <memcmp@plt>
  45d244:	cbnz	w0, 45d264 <_obstack_memory_used@@Base+0x8ec4>
  45d248:	sub	x19, x19, x20
  45d24c:	mov	x0, #0x7fffffff            	// #2147483647
  45d250:	cmp	x19, x0
  45d254:	b.gt	45d264 <_obstack_memory_used@@Base+0x8ec4>
  45d258:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d25c:	cmp	x19, x0
  45d260:	csel	w0, w0, w19, lt  // lt = tstop
  45d264:	ldp	x19, x20, [sp, #16]
  45d268:	ldp	x29, x30, [sp], #32
  45d26c:	ret
  45d270:	stp	x29, x30, [sp, #-32]!
  45d274:	mov	x5, x1
  45d278:	mov	x29, sp
  45d27c:	ldr	x0, [x0]
  45d280:	stp	x19, x20, [sp, #16]
  45d284:	ldur	x4, [x0, #-24]
  45d288:	cmp	x1, x4
  45d28c:	b.hi	45d2e4 <_obstack_memory_used@@Base+0x8f44>  // b.pmore
  45d290:	sub	x4, x4, x1
  45d294:	ldr	x1, [x3]
  45d298:	cmp	x4, x2
  45d29c:	csel	x19, x4, x2, ls  // ls = plast
  45d2a0:	ldur	x20, [x1, #-24]
  45d2a4:	cmp	x20, x19
  45d2a8:	csel	x2, x20, x19, ls  // ls = plast
  45d2ac:	cbz	x2, 45d2bc <_obstack_memory_used@@Base+0x8f1c>
  45d2b0:	add	x0, x0, x5
  45d2b4:	bl	4029e0 <memcmp@plt>
  45d2b8:	cbnz	w0, 45d2d8 <_obstack_memory_used@@Base+0x8f38>
  45d2bc:	sub	x19, x19, x20
  45d2c0:	mov	x0, #0x7fffffff            	// #2147483647
  45d2c4:	cmp	x19, x0
  45d2c8:	b.gt	45d2d8 <_obstack_memory_used@@Base+0x8f38>
  45d2cc:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d2d0:	cmp	x19, x0
  45d2d4:	csel	w0, w0, w19, lt  // lt = tstop
  45d2d8:	ldp	x19, x20, [sp, #16]
  45d2dc:	ldp	x29, x30, [sp], #32
  45d2e0:	ret
  45d2e4:	mov	x2, x1
  45d2e8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d2ec:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d2f0:	mov	x3, x4
  45d2f4:	add	x1, x1, #0x4c8
  45d2f8:	add	x0, x0, #0x390
  45d2fc:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45d300:	stp	x29, x30, [sp, #-32]!
  45d304:	mov	x7, x1
  45d308:	mov	x29, sp
  45d30c:	ldr	x0, [x0]
  45d310:	stp	x19, x20, [sp, #16]
  45d314:	ldur	x6, [x0, #-24]
  45d318:	cmp	x1, x6
  45d31c:	b.hi	45d38c <_obstack_memory_used@@Base+0x8fec>  // b.pmore
  45d320:	ldr	x1, [x3]
  45d324:	ldur	x3, [x1, #-24]
  45d328:	cmp	x4, x3
  45d32c:	b.hi	45d3a8 <_obstack_memory_used@@Base+0x9008>  // b.pmore
  45d330:	sub	x6, x6, x7
  45d334:	sub	x3, x3, x4
  45d338:	cmp	x6, x2
  45d33c:	csel	x19, x6, x2, ls  // ls = plast
  45d340:	cmp	x3, x5
  45d344:	csel	x20, x3, x5, ls  // ls = plast
  45d348:	cmp	x20, x19
  45d34c:	csel	x2, x20, x19, ls  // ls = plast
  45d350:	cbz	x2, 45d364 <_obstack_memory_used@@Base+0x8fc4>
  45d354:	add	x1, x1, x4
  45d358:	add	x0, x0, x7
  45d35c:	bl	4029e0 <memcmp@plt>
  45d360:	cbnz	w0, 45d380 <_obstack_memory_used@@Base+0x8fe0>
  45d364:	sub	x19, x19, x20
  45d368:	mov	x0, #0x7fffffff            	// #2147483647
  45d36c:	cmp	x19, x0
  45d370:	b.gt	45d380 <_obstack_memory_used@@Base+0x8fe0>
  45d374:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d378:	cmp	x19, x0
  45d37c:	csel	w0, w0, w19, lt  // lt = tstop
  45d380:	ldp	x19, x20, [sp, #16]
  45d384:	ldp	x29, x30, [sp], #32
  45d388:	ret
  45d38c:	mov	x3, x6
  45d390:	mov	x2, x1
  45d394:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d398:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d39c:	add	x1, x1, #0x4c8
  45d3a0:	add	x0, x0, #0x390
  45d3a4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45d3a8:	mov	x2, x4
  45d3ac:	b	45d394 <_obstack_memory_used@@Base+0x8ff4>
  45d3b0:	stp	x29, x30, [sp, #-48]!
  45d3b4:	mov	x2, x0
  45d3b8:	mov	x0, x1
  45d3bc:	mov	x29, sp
  45d3c0:	stp	x21, x22, [sp, #32]
  45d3c4:	mov	x21, x1
  45d3c8:	ldr	x22, [x2]
  45d3cc:	stp	x19, x20, [sp, #16]
  45d3d0:	bl	402680 <strlen@plt>
  45d3d4:	mov	x20, x0
  45d3d8:	ldur	x19, [x22, #-24]
  45d3dc:	cmp	x0, x19
  45d3e0:	csel	x2, x0, x19, ls  // ls = plast
  45d3e4:	cbz	x2, 45d3f8 <_obstack_memory_used@@Base+0x9058>
  45d3e8:	mov	x1, x21
  45d3ec:	mov	x0, x22
  45d3f0:	bl	4029e0 <memcmp@plt>
  45d3f4:	cbnz	w0, 45d414 <_obstack_memory_used@@Base+0x9074>
  45d3f8:	sub	x19, x19, x20
  45d3fc:	mov	x0, #0x7fffffff            	// #2147483647
  45d400:	cmp	x19, x0
  45d404:	b.gt	45d414 <_obstack_memory_used@@Base+0x9074>
  45d408:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d40c:	cmp	x19, x0
  45d410:	csel	w0, w0, w19, lt  // lt = tstop
  45d414:	ldp	x19, x20, [sp, #16]
  45d418:	ldp	x21, x22, [sp, #32]
  45d41c:	ldp	x29, x30, [sp], #48
  45d420:	ret
  45d424:	nop
  45d428:	stp	x29, x30, [sp, #-64]!
  45d42c:	mov	x29, sp
  45d430:	str	x23, [sp, #48]
  45d434:	ldr	x23, [x0]
  45d438:	stp	x19, x20, [sp, #16]
  45d43c:	stp	x21, x22, [sp, #32]
  45d440:	mov	x21, x1
  45d444:	ldur	x19, [x23, #-24]
  45d448:	cmp	x1, x19
  45d44c:	b.hi	45d4b8 <_obstack_memory_used@@Base+0x9118>  // b.pmore
  45d450:	sub	x19, x19, x1
  45d454:	mov	x22, x3
  45d458:	cmp	x19, x2
  45d45c:	mov	x0, x3
  45d460:	csel	x19, x19, x2, ls  // ls = plast
  45d464:	bl	402680 <strlen@plt>
  45d468:	cmp	x0, x19
  45d46c:	mov	x20, x0
  45d470:	csel	x2, x0, x19, ls  // ls = plast
  45d474:	cbz	x2, 45d488 <_obstack_memory_used@@Base+0x90e8>
  45d478:	mov	x1, x22
  45d47c:	add	x0, x23, x21
  45d480:	bl	4029e0 <memcmp@plt>
  45d484:	cbnz	w0, 45d4a4 <_obstack_memory_used@@Base+0x9104>
  45d488:	sub	x19, x19, x20
  45d48c:	mov	x0, #0x7fffffff            	// #2147483647
  45d490:	cmp	x19, x0
  45d494:	b.gt	45d4a4 <_obstack_memory_used@@Base+0x9104>
  45d498:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d49c:	cmp	x19, x0
  45d4a0:	csel	w0, w0, w19, lt  // lt = tstop
  45d4a4:	ldp	x19, x20, [sp, #16]
  45d4a8:	ldp	x21, x22, [sp, #32]
  45d4ac:	ldr	x23, [sp, #48]
  45d4b0:	ldp	x29, x30, [sp], #64
  45d4b4:	ret
  45d4b8:	mov	x2, x1
  45d4bc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d4c0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d4c4:	mov	x3, x19
  45d4c8:	add	x1, x1, #0x4c8
  45d4cc:	add	x0, x0, #0x390
  45d4d0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45d4d4:	nop
  45d4d8:	stp	x29, x30, [sp, #-32]!
  45d4dc:	mov	x6, x1
  45d4e0:	mov	x29, sp
  45d4e4:	ldr	x0, [x0]
  45d4e8:	stp	x19, x20, [sp, #16]
  45d4ec:	ldur	x5, [x0, #-24]
  45d4f0:	cmp	x1, x5
  45d4f4:	b.hi	45d54c <_obstack_memory_used@@Base+0x91ac>  // b.pmore
  45d4f8:	sub	x5, x5, x1
  45d4fc:	mov	x20, x4
  45d500:	cmp	x5, x2
  45d504:	csel	x19, x5, x2, ls  // ls = plast
  45d508:	cmp	x19, x4
  45d50c:	csel	x2, x19, x4, ls  // ls = plast
  45d510:	cbz	x2, 45d524 <_obstack_memory_used@@Base+0x9184>
  45d514:	mov	x1, x3
  45d518:	add	x0, x0, x6
  45d51c:	bl	4029e0 <memcmp@plt>
  45d520:	cbnz	w0, 45d540 <_obstack_memory_used@@Base+0x91a0>
  45d524:	sub	x19, x19, x20
  45d528:	mov	x0, #0x7fffffff            	// #2147483647
  45d52c:	cmp	x19, x0
  45d530:	b.gt	45d540 <_obstack_memory_used@@Base+0x91a0>
  45d534:	mov	x0, #0xffffffff80000000    	// #-2147483648
  45d538:	cmp	x19, x0
  45d53c:	csel	w0, w0, w19, lt  // lt = tstop
  45d540:	ldp	x19, x20, [sp, #16]
  45d544:	ldp	x29, x30, [sp], #32
  45d548:	ret
  45d54c:	mov	x2, x1
  45d550:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d554:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d558:	mov	x3, x5
  45d55c:	add	x1, x1, #0x4c8
  45d560:	add	x0, x0, #0x390
  45d564:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45d568:	str	x1, [x0]
  45d56c:	ret
  45d570:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d574:	ldr	x0, [x0, #3984]
  45d578:	ret
  45d57c:	nop
  45d580:	add	x0, x0, #0x10
  45d584:	ldr	w0, [x0]
  45d588:	lsr	w0, w0, #31
  45d58c:	ret
  45d590:	add	x0, x0, #0x10
  45d594:	ldar	w0, [x0]
  45d598:	cmp	w0, #0x0
  45d59c:	cset	w0, gt
  45d5a0:	ret
  45d5a4:	nop
  45d5a8:	mov	w1, #0xffffffff            	// #-1
  45d5ac:	str	w1, [x0, #16]
  45d5b0:	ret
  45d5b4:	nop
  45d5b8:	str	wzr, [x0, #16]
  45d5bc:	ret
  45d5c0:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d5c4:	ldr	x2, [x2, #3984]
  45d5c8:	cmp	x0, x2
  45d5cc:	b.ne	45d5d4 <_obstack_memory_used@@Base+0x9234>  // b.any
  45d5d0:	ret
  45d5d4:	add	x2, x0, x1
  45d5d8:	str	x1, [x0]
  45d5dc:	str	wzr, [x0, #16]
  45d5e0:	strb	wzr, [x2, #24]
  45d5e4:	ret
  45d5e8:	add	x0, x0, #0x18
  45d5ec:	ret
  45d5f0:	stp	x29, x30, [sp, #-32]!
  45d5f4:	mov	x29, sp
  45d5f8:	str	x19, [sp, #16]
  45d5fc:	mov	x19, x0
  45d600:	mov	x0, #0xfffffffffffffff9    	// #-7
  45d604:	movk	x0, #0x3fff, lsl #48
  45d608:	cmp	x19, x0
  45d60c:	b.hi	45d68c <_obstack_memory_used@@Base+0x92ec>  // b.pmore
  45d610:	cmp	x19, x1
  45d614:	b.ls	45d664 <_obstack_memory_used@@Base+0x92c4>  // b.plast
  45d618:	lsl	x2, x1, #1
  45d61c:	cmp	x19, x2
  45d620:	csel	x19, x19, x2, cs  // cs = hs, nlast
  45d624:	add	x2, x19, #0x39
  45d628:	cmp	x2, #0x1, lsl #12
  45d62c:	ccmp	x19, x1, #0x0, hi  // hi = pmore
  45d630:	b.ls	45d680 <_obstack_memory_used@@Base+0x92e0>  // b.plast
  45d634:	and	x2, x2, #0xfff
  45d638:	add	x19, x19, #0x1, lsl #12
  45d63c:	sub	x19, x19, x2
  45d640:	cmp	x19, x0
  45d644:	csel	x19, x19, x0, ls  // ls = plast
  45d648:	add	x0, x19, #0x19
  45d64c:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  45d650:	str	x19, [x0, #8]
  45d654:	str	wzr, [x0, #16]
  45d658:	ldr	x19, [sp, #16]
  45d65c:	ldp	x29, x30, [sp], #32
  45d660:	ret
  45d664:	add	x0, x19, #0x19
  45d668:	bl	455530 <_obstack_memory_used@@Base+0x1190>
  45d66c:	str	x19, [x0, #8]
  45d670:	str	wzr, [x0, #16]
  45d674:	ldr	x19, [sp, #16]
  45d678:	ldp	x29, x30, [sp], #32
  45d67c:	ret
  45d680:	adds	x0, x19, #0x19
  45d684:	b.pl	45d668 <_obstack_memory_used@@Base+0x92c8>  // b.nfrst
  45d688:	bl	402d74 <ferror@plt+0x44>
  45d68c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45d690:	add	x0, x0, #0x808
  45d694:	bl	402f0c <ferror@plt+0x1dc>
  45d698:	cbnz	x0, 45d6b0 <_obstack_memory_used@@Base+0x9310>
  45d69c:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d6a0:	ldr	x3, [x3, #3984]
  45d6a4:	add	x3, x3, #0x18
  45d6a8:	mov	x0, x3
  45d6ac:	ret
  45d6b0:	stp	x29, x30, [sp, #-48]!
  45d6b4:	mov	x29, sp
  45d6b8:	stp	x19, x20, [sp, #16]
  45d6bc:	mov	x19, x0
  45d6c0:	str	x21, [sp, #32]
  45d6c4:	and	w21, w1, #0xff
  45d6c8:	mov	x1, #0x0                   	// #0
  45d6cc:	bl	45d5f0 <_obstack_memory_used@@Base+0x9250>
  45d6d0:	cmp	x19, #0x1
  45d6d4:	mov	x20, x0
  45d6d8:	add	x3, x0, #0x18
  45d6dc:	b.eq	45d718 <_obstack_memory_used@@Base+0x9378>  // b.none
  45d6e0:	mov	x0, x3
  45d6e4:	mov	w1, w21
  45d6e8:	mov	x2, x19
  45d6ec:	bl	402890 <memset@plt>
  45d6f0:	mov	x3, x0
  45d6f4:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d6f8:	ldr	x0, [x0, #3984]
  45d6fc:	cmp	x20, x0
  45d700:	b.ne	45d720 <_obstack_memory_used@@Base+0x9380>  // b.any
  45d704:	mov	x0, x3
  45d708:	ldp	x19, x20, [sp, #16]
  45d70c:	ldr	x21, [sp, #32]
  45d710:	ldp	x29, x30, [sp], #48
  45d714:	ret
  45d718:	strb	w21, [x0, #24]
  45d71c:	b	45d6f4 <_obstack_memory_used@@Base+0x9354>
  45d720:	add	x0, x20, x19
  45d724:	str	x19, [x20]
  45d728:	str	wzr, [x20, #16]
  45d72c:	strb	wzr, [x0, #24]
  45d730:	b	45d704 <_obstack_memory_used@@Base+0x9364>
  45d734:	nop
  45d738:	stp	x29, x30, [sp, #-32]!
  45d73c:	mov	x2, x1
  45d740:	mov	w1, #0x0                   	// #0
  45d744:	mov	x29, sp
  45d748:	str	x19, [sp, #16]
  45d74c:	mov	x19, x0
  45d750:	mov	x0, #0x0                   	// #0
  45d754:	bl	45d698 <_obstack_memory_used@@Base+0x92f8>
  45d758:	str	x0, [x19]
  45d75c:	ldr	x19, [sp, #16]
  45d760:	ldp	x29, x30, [sp], #32
  45d764:	ret
  45d768:	stp	x29, x30, [sp, #-32]!
  45d76c:	mov	x29, sp
  45d770:	str	x19, [sp, #16]
  45d774:	mov	x19, x0
  45d778:	mov	x0, x1
  45d77c:	and	w1, w2, #0xff
  45d780:	mov	x2, x3
  45d784:	bl	45d698 <_obstack_memory_used@@Base+0x92f8>
  45d788:	str	x0, [x19]
  45d78c:	ldr	x19, [sp, #16]
  45d790:	ldp	x29, x30, [sp], #32
  45d794:	ret
  45d798:	b	45d698 <_obstack_memory_used@@Base+0x92f8>
  45d79c:	nop
  45d7a0:	stp	x29, x30, [sp, #-48]!
  45d7a4:	mov	x29, sp
  45d7a8:	stp	x19, x20, [sp, #16]
  45d7ac:	mov	x19, x1
  45d7b0:	sub	x19, x19, x0
  45d7b4:	mov	x1, #0x0                   	// #0
  45d7b8:	str	x21, [sp, #32]
  45d7bc:	mov	x21, x0
  45d7c0:	mov	x0, x19
  45d7c4:	bl	45d5f0 <_obstack_memory_used@@Base+0x9250>
  45d7c8:	mov	x20, x0
  45d7cc:	cmp	x19, #0x1
  45d7d0:	add	x3, x0, #0x18
  45d7d4:	b.eq	45d810 <_obstack_memory_used@@Base+0x9470>  // b.none
  45d7d8:	mov	x0, x3
  45d7dc:	mov	x1, x21
  45d7e0:	mov	x2, x19
  45d7e4:	bl	402620 <memcpy@plt>
  45d7e8:	mov	x3, x0
  45d7ec:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d7f0:	ldr	x0, [x0, #3984]
  45d7f4:	cmp	x20, x0
  45d7f8:	b.ne	45d828 <_obstack_memory_used@@Base+0x9488>  // b.any
  45d7fc:	mov	x0, x3
  45d800:	ldp	x19, x20, [sp, #16]
  45d804:	ldr	x21, [sp, #32]
  45d808:	ldp	x29, x30, [sp], #48
  45d80c:	ret
  45d810:	ldrb	w0, [x21]
  45d814:	strb	w0, [x20, #24]
  45d818:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d81c:	ldr	x0, [x0, #3984]
  45d820:	cmp	x20, x0
  45d824:	b.eq	45d7fc <_obstack_memory_used@@Base+0x945c>  // b.none
  45d828:	add	x0, x20, x19
  45d82c:	str	x19, [x20]
  45d830:	str	wzr, [x20, #16]
  45d834:	strb	wzr, [x0, #24]
  45d838:	mov	x0, x3
  45d83c:	ldp	x19, x20, [sp, #16]
  45d840:	ldr	x21, [sp, #32]
  45d844:	ldp	x29, x30, [sp], #48
  45d848:	ret
  45d84c:	nop
  45d850:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45d854:	nop
  45d858:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d85c:	ldr	x2, [x2, #3600]
  45d860:	cbz	x2, 45d884 <_obstack_memory_used@@Base+0x94e4>
  45d864:	add	x3, x0, #0x10
  45d868:	ldaxr	w2, [x3]
  45d86c:	sub	w4, w2, #0x1
  45d870:	stlxr	w5, w4, [x3]
  45d874:	cbnz	w5, 45d868 <_obstack_memory_used@@Base+0x94c8>
  45d878:	cmp	w2, #0x0
  45d87c:	b.le	45d898 <_obstack_memory_used@@Base+0x94f8>
  45d880:	ret
  45d884:	ldr	w2, [x0, #16]
  45d888:	sub	w3, w2, #0x1
  45d88c:	str	w3, [x0, #16]
  45d890:	cmp	w2, #0x0
  45d894:	b.gt	45d880 <_obstack_memory_used@@Base+0x94e0>
  45d898:	b	45d850 <_obstack_memory_used@@Base+0x94b0>
  45d89c:	nop
  45d8a0:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d8a4:	ldr	x2, [x2, #3984]
  45d8a8:	cmp	x0, x2
  45d8ac:	b.ne	45d8b4 <_obstack_memory_used@@Base+0x9514>  // b.any
  45d8b0:	ret
  45d8b4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d8b8:	ldr	x2, [x2, #3600]
  45d8bc:	cbz	x2, 45d8e0 <_obstack_memory_used@@Base+0x9540>
  45d8c0:	add	x3, x0, #0x10
  45d8c4:	ldaxr	w2, [x3]
  45d8c8:	sub	w4, w2, #0x1
  45d8cc:	stlxr	w5, w4, [x3]
  45d8d0:	cbnz	w5, 45d8c4 <_obstack_memory_used@@Base+0x9524>
  45d8d4:	cmp	w2, #0x0
  45d8d8:	b.gt	45d8b0 <_obstack_memory_used@@Base+0x9510>
  45d8dc:	b	45d850 <_obstack_memory_used@@Base+0x94b0>
  45d8e0:	ldr	w2, [x0, #16]
  45d8e4:	sub	w3, w2, #0x1
  45d8e8:	str	w3, [x0, #16]
  45d8ec:	b	45d8d4 <_obstack_memory_used@@Base+0x9534>
  45d8f0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d8f4:	ldr	x2, [x0]
  45d8f8:	ldr	x1, [x1, #3984]
  45d8fc:	sub	x0, x2, #0x18
  45d900:	cmp	x0, x1
  45d904:	b.ne	45d90c <_obstack_memory_used@@Base+0x956c>  // b.any
  45d908:	ret
  45d90c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d910:	ldr	x1, [x1, #3600]
  45d914:	cbz	x1, 45d94c <_obstack_memory_used@@Base+0x95ac>
  45d918:	sub	x2, x2, #0x8
  45d91c:	ldaxr	w1, [x2]
  45d920:	sub	w3, w1, #0x1
  45d924:	stlxr	w4, w3, [x2]
  45d928:	cbnz	w4, 45d91c <_obstack_memory_used@@Base+0x957c>
  45d92c:	cmp	w1, #0x0
  45d930:	b.gt	45d908 <_obstack_memory_used@@Base+0x9568>
  45d934:	stp	x29, x30, [sp, #-32]!
  45d938:	mov	x29, sp
  45d93c:	add	x1, sp, #0x18
  45d940:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45d944:	ldp	x29, x30, [sp], #32
  45d948:	ret
  45d94c:	ldur	w1, [x2, #-8]
  45d950:	sub	w3, w1, #0x1
  45d954:	stur	w3, [x2, #-8]
  45d958:	b	45d92c <_obstack_memory_used@@Base+0x958c>
  45d95c:	nop
  45d960:	stp	x29, x30, [sp, #-48]!
  45d964:	mov	x29, sp
  45d968:	stp	x19, x20, [sp, #16]
  45d96c:	mov	x19, x0
  45d970:	ldr	x0, [x0]
  45d974:	sub	x0, x0, #0x8
  45d978:	ldar	w0, [x0]
  45d97c:	cmp	w0, #0x0
  45d980:	b.le	45d9b4 <_obstack_memory_used@@Base+0x9614>
  45d984:	adrp	x20, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d988:	ldr	x1, [x19]
  45d98c:	ldr	x2, [x20, #3984]
  45d990:	sub	x0, x1, #0x18
  45d994:	cmp	x0, x2
  45d998:	b.ne	45d9dc <_obstack_memory_used@@Base+0x963c>  // b.any
  45d99c:	ldr	x20, [x20, #3984]
  45d9a0:	add	x20, x20, #0x18
  45d9a4:	str	x20, [x19]
  45d9a8:	ldp	x19, x20, [sp, #16]
  45d9ac:	ldp	x29, x30, [sp], #48
  45d9b0:	ret
  45d9b4:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d9b8:	ldr	x1, [x19]
  45d9bc:	ldr	x0, [x0, #3984]
  45d9c0:	sub	x2, x1, #0x18
  45d9c4:	cmp	x2, x0
  45d9c8:	b.eq	45d9a8 <_obstack_memory_used@@Base+0x9608>  // b.none
  45d9cc:	stur	xzr, [x1, #-24]
  45d9d0:	stur	wzr, [x1, #-8]
  45d9d4:	strb	wzr, [x1]
  45d9d8:	b	45d9a8 <_obstack_memory_used@@Base+0x9608>
  45d9dc:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45d9e0:	ldr	x2, [x2, #3600]
  45d9e4:	cbz	x2, 45da10 <_obstack_memory_used@@Base+0x9670>
  45d9e8:	sub	x1, x1, #0x8
  45d9ec:	ldaxr	w2, [x1]
  45d9f0:	sub	w3, w2, #0x1
  45d9f4:	stlxr	w4, w3, [x1]
  45d9f8:	cbnz	w4, 45d9ec <_obstack_memory_used@@Base+0x964c>
  45d9fc:	cmp	w2, #0x0
  45da00:	b.gt	45d99c <_obstack_memory_used@@Base+0x95fc>
  45da04:	add	x1, sp, #0x28
  45da08:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45da0c:	b	45d99c <_obstack_memory_used@@Base+0x95fc>
  45da10:	ldur	w2, [x1, #-8]
  45da14:	sub	w3, w2, #0x1
  45da18:	stur	w3, [x1, #-8]
  45da1c:	b	45d9fc <_obstack_memory_used@@Base+0x965c>
  45da20:	stp	x29, x30, [sp, #-112]!
  45da24:	mov	x29, sp
  45da28:	stp	x19, x20, [sp, #16]
  45da2c:	mov	x20, x0
  45da30:	sub	x0, x3, x2
  45da34:	stp	x21, x22, [sp, #32]
  45da38:	mov	x21, x3
  45da3c:	mov	x19, x1
  45da40:	ldr	x3, [x20]
  45da44:	stp	x23, x24, [sp, #48]
  45da48:	stp	x25, x26, [sp, #64]
  45da4c:	ldur	x4, [x3, #-24]
  45da50:	str	x27, [sp, #80]
  45da54:	add	x27, x2, x1
  45da58:	ldur	x1, [x3, #-16]
  45da5c:	add	x25, x0, x4
  45da60:	sub	x22, x4, x27
  45da64:	cmp	x25, x1
  45da68:	b.hi	45da84 <_obstack_memory_used@@Base+0x96e4>  // b.pmore
  45da6c:	sub	x3, x3, #0x8
  45da70:	ldar	w0, [x3]
  45da74:	cmp	w0, #0x0
  45da78:	b.le	45db28 <_obstack_memory_used@@Base+0x9788>
  45da7c:	ldr	x0, [x20]
  45da80:	ldur	x1, [x0, #-16]
  45da84:	add	x24, sp, #0x68
  45da88:	mov	x2, x24
  45da8c:	mov	x0, x25
  45da90:	bl	45d5f0 <_obstack_memory_used@@Base+0x9250>
  45da94:	mov	x23, x0
  45da98:	add	x26, x0, #0x18
  45da9c:	cbz	x19, 45dabc <_obstack_memory_used@@Base+0x971c>
  45daa0:	cmp	x19, #0x1
  45daa4:	add	x26, x0, #0x18
  45daa8:	ldr	x1, [x20]
  45daac:	b.eq	45dbd4 <_obstack_memory_used@@Base+0x9834>  // b.none
  45dab0:	mov	x2, x19
  45dab4:	mov	x0, x26
  45dab8:	bl	402620 <memcpy@plt>
  45dabc:	ldr	x2, [x20]
  45dac0:	cbz	x22, 45dae8 <_obstack_memory_used@@Base+0x9748>
  45dac4:	add	x19, x19, #0x18
  45dac8:	cmp	x22, #0x1
  45dacc:	add	x19, x19, x21
  45dad0:	add	x1, x2, x27
  45dad4:	add	x0, x23, x19
  45dad8:	b.eq	45dbe8 <_obstack_memory_used@@Base+0x9848>  // b.none
  45dadc:	mov	x2, x22
  45dae0:	bl	402620 <memcpy@plt>
  45dae4:	ldr	x2, [x20]
  45dae8:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45daec:	sub	x0, x2, #0x18
  45daf0:	ldr	x1, [x21, #3984]
  45daf4:	cmp	x0, x1
  45daf8:	b.ne	45dba0 <_obstack_memory_used@@Base+0x9800>  // b.any
  45dafc:	str	x26, [x20]
  45db00:	ldr	x21, [x21, #3984]
  45db04:	cmp	x23, x21
  45db08:	b.ne	45db78 <_obstack_memory_used@@Base+0x97d8>  // b.any
  45db0c:	ldp	x19, x20, [sp, #16]
  45db10:	ldp	x21, x22, [sp, #32]
  45db14:	ldp	x23, x24, [sp, #48]
  45db18:	ldp	x25, x26, [sp, #64]
  45db1c:	ldr	x27, [sp, #80]
  45db20:	ldp	x29, x30, [sp], #112
  45db24:	ret
  45db28:	cmp	x22, #0x0
  45db2c:	ccmp	x21, x2, #0x4, ne  // ne = any
  45db30:	ldr	x26, [x20]
  45db34:	b.eq	45db64 <_obstack_memory_used@@Base+0x97c4>  // b.none
  45db38:	add	x19, x21, x19
  45db3c:	cmp	x22, #0x1
  45db40:	add	x0, x26, x19
  45db44:	add	x1, x26, x27
  45db48:	b.eq	45dc1c <_obstack_memory_used@@Base+0x987c>  // b.none
  45db4c:	mov	x2, x22
  45db50:	bl	402630 <memmove@plt>
  45db54:	ldr	x26, [x20]
  45db58:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45db5c:	sub	x23, x26, #0x18
  45db60:	b	45db00 <_obstack_memory_used@@Base+0x9760>
  45db64:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45db68:	sub	x23, x26, #0x18
  45db6c:	ldr	x21, [x21, #3984]
  45db70:	cmp	x23, x21
  45db74:	b.eq	45db0c <_obstack_memory_used@@Base+0x976c>  // b.none
  45db78:	stur	x25, [x26, #-24]
  45db7c:	stur	wzr, [x26, #-8]
  45db80:	strb	wzr, [x26, x25]
  45db84:	ldp	x19, x20, [sp, #16]
  45db88:	ldp	x21, x22, [sp, #32]
  45db8c:	ldp	x23, x24, [sp, #48]
  45db90:	ldp	x25, x26, [sp, #64]
  45db94:	ldr	x27, [sp, #80]
  45db98:	ldp	x29, x30, [sp], #112
  45db9c:	ret
  45dba0:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45dba4:	ldr	x1, [x1, #3600]
  45dba8:	cbz	x1, 45dc0c <_obstack_memory_used@@Base+0x986c>
  45dbac:	sub	x2, x2, #0x8
  45dbb0:	ldaxr	w1, [x2]
  45dbb4:	sub	w3, w1, #0x1
  45dbb8:	stlxr	w4, w3, [x2]
  45dbbc:	cbnz	w4, 45dbb0 <_obstack_memory_used@@Base+0x9810>
  45dbc0:	cmp	w1, #0x0
  45dbc4:	b.gt	45dafc <_obstack_memory_used@@Base+0x975c>
  45dbc8:	mov	x1, x24
  45dbcc:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45dbd0:	b	45dafc <_obstack_memory_used@@Base+0x975c>
  45dbd4:	ldrb	w0, [x1]
  45dbd8:	strb	w0, [x23, #24]
  45dbdc:	ldr	x2, [x20]
  45dbe0:	cbz	x22, 45dae8 <_obstack_memory_used@@Base+0x9748>
  45dbe4:	b	45dac4 <_obstack_memory_used@@Base+0x9724>
  45dbe8:	ldrb	w0, [x2, x27]
  45dbec:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45dbf0:	strb	w0, [x23, x19]
  45dbf4:	ldr	x1, [x21, #3984]
  45dbf8:	ldr	x2, [x20]
  45dbfc:	sub	x0, x2, #0x18
  45dc00:	cmp	x0, x1
  45dc04:	b.eq	45dafc <_obstack_memory_used@@Base+0x975c>  // b.none
  45dc08:	b	45dba0 <_obstack_memory_used@@Base+0x9800>
  45dc0c:	ldur	w1, [x2, #-8]
  45dc10:	sub	w3, w1, #0x1
  45dc14:	stur	w3, [x2, #-8]
  45dc18:	b	45dbc0 <_obstack_memory_used@@Base+0x9820>
  45dc1c:	ldrb	w0, [x26, x27]
  45dc20:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45dc24:	strb	w0, [x26, x19]
  45dc28:	ldr	x26, [x20]
  45dc2c:	sub	x23, x26, #0x18
  45dc30:	b	45db00 <_obstack_memory_used@@Base+0x9760>
  45dc34:	nop
  45dc38:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45dc3c:	ldr	x2, [x1, #3984]
  45dc40:	ldr	x1, [x0]
  45dc44:	sub	x3, x1, #0x18
  45dc48:	cmp	x3, x2
  45dc4c:	b.eq	45dcb0 <_obstack_memory_used@@Base+0x9910>  // b.none
  45dc50:	stp	x29, x30, [sp, #-32]!
  45dc54:	sub	x1, x1, #0x8
  45dc58:	mov	x29, sp
  45dc5c:	str	x19, [sp, #16]
  45dc60:	mov	x19, x0
  45dc64:	ldar	w1, [x1]
  45dc68:	cmp	w1, #0x0
  45dc6c:	b.gt	45dc88 <_obstack_memory_used@@Base+0x98e8>
  45dc70:	ldr	x0, [x19]
  45dc74:	mov	w1, #0xffffffff            	// #-1
  45dc78:	ldr	x19, [sp, #16]
  45dc7c:	stur	w1, [x0, #-8]
  45dc80:	ldp	x29, x30, [sp], #32
  45dc84:	ret
  45dc88:	mov	x3, #0x0                   	// #0
  45dc8c:	mov	x2, #0x0                   	// #0
  45dc90:	mov	x1, #0x0                   	// #0
  45dc94:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45dc98:	ldr	x0, [x19]
  45dc9c:	mov	w1, #0xffffffff            	// #-1
  45dca0:	ldr	x19, [sp, #16]
  45dca4:	stur	w1, [x0, #-8]
  45dca8:	ldp	x29, x30, [sp], #32
  45dcac:	ret
  45dcb0:	ret
  45dcb4:	nop
  45dcb8:	ldr	x1, [x0]
  45dcbc:	sub	x1, x1, #0x8
  45dcc0:	ldr	w1, [x1]
  45dcc4:	tbz	w1, #31, 45dccc <_obstack_memory_used@@Base+0x992c>
  45dcc8:	ret
  45dccc:	b	45dc38 <_obstack_memory_used@@Base+0x9898>
  45dcd0:	ldr	x1, [x0]
  45dcd4:	sub	x2, x1, #0x8
  45dcd8:	ldr	w2, [x2]
  45dcdc:	tbz	w2, #31, 45dce8 <_obstack_memory_used@@Base+0x9948>
  45dce0:	mov	x0, x1
  45dce4:	ret
  45dce8:	stp	x29, x30, [sp, #-32]!
  45dcec:	mov	x29, sp
  45dcf0:	str	x19, [sp, #16]
  45dcf4:	mov	x19, x0
  45dcf8:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45dcfc:	ldr	x1, [x19]
  45dd00:	ldr	x19, [sp, #16]
  45dd04:	mov	x0, x1
  45dd08:	ldp	x29, x30, [sp], #32
  45dd0c:	ret
  45dd10:	stp	x29, x30, [sp, #-32]!
  45dd14:	mov	x29, sp
  45dd18:	stp	x19, x20, [sp, #16]
  45dd1c:	mov	x20, x1
  45dd20:	ldr	x1, [x0]
  45dd24:	sub	x2, x1, #0x8
  45dd28:	ldr	w2, [x2]
  45dd2c:	tbnz	w2, #31, 45dd3c <_obstack_memory_used@@Base+0x999c>
  45dd30:	mov	x19, x0
  45dd34:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45dd38:	ldr	x1, [x19]
  45dd3c:	add	x0, x1, x20
  45dd40:	ldp	x19, x20, [sp, #16]
  45dd44:	ldp	x29, x30, [sp], #32
  45dd48:	ret
  45dd4c:	nop
  45dd50:	ldr	x1, [x0]
  45dd54:	sub	x2, x1, #0x8
  45dd58:	ldr	w2, [x2]
  45dd5c:	tbz	w2, #31, 45dd68 <_obstack_memory_used@@Base+0x99c8>
  45dd60:	mov	x0, x1
  45dd64:	ret
  45dd68:	stp	x29, x30, [sp, #-32]!
  45dd6c:	mov	x29, sp
  45dd70:	str	x19, [sp, #16]
  45dd74:	mov	x19, x0
  45dd78:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45dd7c:	ldr	x1, [x19]
  45dd80:	ldr	x19, [sp, #16]
  45dd84:	mov	x0, x1
  45dd88:	ldp	x29, x30, [sp], #32
  45dd8c:	ret
  45dd90:	stp	x29, x30, [sp, #-32]!
  45dd94:	mov	x29, sp
  45dd98:	ldr	x1, [x0]
  45dd9c:	stp	x19, x20, [sp, #16]
  45dda0:	mov	x19, x8
  45dda4:	sub	x2, x1, #0x8
  45dda8:	ldr	w2, [x2]
  45ddac:	tbnz	w2, #31, 45ddbc <_obstack_memory_used@@Base+0x9a1c>
  45ddb0:	mov	x20, x0
  45ddb4:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45ddb8:	ldr	x1, [x20]
  45ddbc:	str	x1, [x19]
  45ddc0:	mov	x0, x19
  45ddc4:	ldp	x19, x20, [sp, #16]
  45ddc8:	ldp	x29, x30, [sp], #32
  45ddcc:	ret
  45ddd0:	ldr	x1, [x0]
  45ddd4:	sub	x2, x1, #0x8
  45ddd8:	ldr	w2, [x2]
  45dddc:	tbz	w2, #31, 45ddec <_obstack_memory_used@@Base+0x9a4c>
  45dde0:	ldur	x0, [x1, #-24]
  45dde4:	add	x0, x1, x0
  45dde8:	ret
  45ddec:	stp	x29, x30, [sp, #-32]!
  45ddf0:	mov	x29, sp
  45ddf4:	str	x19, [sp, #16]
  45ddf8:	mov	x19, x0
  45ddfc:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45de00:	ldr	x1, [x19]
  45de04:	ldr	x19, [sp, #16]
  45de08:	ldur	x0, [x1, #-24]
  45de0c:	ldp	x29, x30, [sp], #32
  45de10:	add	x0, x1, x0
  45de14:	ret
  45de18:	stp	x29, x30, [sp, #-32]!
  45de1c:	mov	x29, sp
  45de20:	ldr	x1, [x0]
  45de24:	stp	x19, x20, [sp, #16]
  45de28:	mov	x19, x8
  45de2c:	sub	x2, x1, #0x8
  45de30:	ldr	w2, [x2]
  45de34:	tbnz	w2, #31, 45de44 <_obstack_memory_used@@Base+0x9aa4>
  45de38:	mov	x20, x0
  45de3c:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45de40:	ldr	x1, [x20]
  45de44:	mov	x0, x19
  45de48:	ldur	x2, [x1, #-24]
  45de4c:	add	x1, x1, x2
  45de50:	str	x1, [x19]
  45de54:	ldp	x19, x20, [sp, #16]
  45de58:	ldp	x29, x30, [sp], #32
  45de5c:	ret
  45de60:	stp	x29, x30, [sp, #-32]!
  45de64:	mov	x29, sp
  45de68:	ldr	x1, [x0]
  45de6c:	stp	x19, x20, [sp, #16]
  45de70:	sub	x2, x1, #0x8
  45de74:	ldur	x20, [x1, #-24]
  45de78:	sub	x20, x20, #0x1
  45de7c:	ldr	w2, [x2]
  45de80:	tbnz	w2, #31, 45de90 <_obstack_memory_used@@Base+0x9af0>
  45de84:	mov	x19, x0
  45de88:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45de8c:	ldr	x1, [x19]
  45de90:	add	x0, x1, x20
  45de94:	ldp	x19, x20, [sp, #16]
  45de98:	ldp	x29, x30, [sp], #32
  45de9c:	ret
  45dea0:	stp	x29, x30, [sp, #-32]!
  45dea4:	mov	x29, sp
  45dea8:	ldr	x3, [x0]
  45deac:	stp	x19, x20, [sp, #16]
  45deb0:	ldur	x2, [x3, #-24]
  45deb4:	cmp	x1, x2
  45deb8:	b.cs	45dee8 <_obstack_memory_used@@Base+0x9b48>  // b.hs, b.nlast
  45debc:	mov	x19, x1
  45dec0:	sub	x1, x3, #0x8
  45dec4:	ldr	w1, [x1]
  45dec8:	tbnz	w1, #31, 45ded8 <_obstack_memory_used@@Base+0x9b38>
  45decc:	mov	x20, x0
  45ded0:	bl	45dc38 <_obstack_memory_used@@Base+0x9898>
  45ded4:	ldr	x3, [x20]
  45ded8:	add	x0, x3, x19
  45dedc:	ldp	x19, x20, [sp, #16]
  45dee0:	ldp	x29, x30, [sp], #32
  45dee4:	ret
  45dee8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45deec:	add	x0, x0, #0x3c8
  45def0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45def4:	nop
  45def8:	stp	x29, x30, [sp, #-32]!
  45defc:	mov	x29, sp
  45df00:	ldr	x3, [x0]
  45df04:	ldur	x3, [x3, #-24]
  45df08:	str	x19, [sp, #16]
  45df0c:	cmp	x1, x3
  45df10:	b.hi	45df3c <_obstack_memory_used@@Base+0x9b9c>  // b.pmore
  45df14:	sub	x4, x3, x1
  45df18:	mov	x19, x0
  45df1c:	cmp	x4, x2
  45df20:	mov	x3, #0x0                   	// #0
  45df24:	csel	x2, x4, x2, ls  // ls = plast
  45df28:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45df2c:	mov	x0, x19
  45df30:	ldr	x19, [sp, #16]
  45df34:	ldp	x29, x30, [sp], #32
  45df38:	ret
  45df3c:	mov	x2, x1
  45df40:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45df44:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45df48:	add	x0, x0, #0x390
  45df4c:	add	x1, x1, #0x410
  45df50:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45df54:	nop
  45df58:	stp	x29, x30, [sp, #-32]!
  45df5c:	mov	x3, #0x0                   	// #0
  45df60:	mov	x2, #0x1                   	// #1
  45df64:	mov	x29, sp
  45df68:	stp	x19, x20, [sp, #16]
  45df6c:	mov	x20, x0
  45df70:	ldr	x19, [x0]
  45df74:	sub	x19, x1, x19
  45df78:	mov	x1, x19
  45df7c:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45df80:	ldr	x1, [x20]
  45df84:	mov	w2, #0xffffffff            	// #-1
  45df88:	add	x0, x1, x19
  45df8c:	ldp	x19, x20, [sp, #16]
  45df90:	stur	w2, [x1, #-8]
  45df94:	ldp	x29, x30, [sp], #32
  45df98:	ret
  45df9c:	nop
  45dfa0:	subs	x2, x2, x1
  45dfa4:	b.ne	45dfb0 <_obstack_memory_used@@Base+0x9c10>  // b.any
  45dfa8:	mov	x0, x1
  45dfac:	ret
  45dfb0:	stp	x29, x30, [sp, #-32]!
  45dfb4:	mov	x3, #0x0                   	// #0
  45dfb8:	mov	x29, sp
  45dfbc:	stp	x19, x20, [sp, #16]
  45dfc0:	mov	x20, x0
  45dfc4:	ldr	x19, [x0]
  45dfc8:	sub	x19, x1, x19
  45dfcc:	mov	x1, x19
  45dfd0:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45dfd4:	ldr	x1, [x20]
  45dfd8:	mov	w2, #0xffffffff            	// #-1
  45dfdc:	add	x0, x1, x19
  45dfe0:	ldp	x19, x20, [sp, #16]
  45dfe4:	stur	w2, [x1, #-8]
  45dfe8:	ldp	x29, x30, [sp], #32
  45dfec:	ret
  45dff0:	stp	x29, x30, [sp, #-48]!
  45dff4:	mov	x5, #0xfffffffffffffff9    	// #-7
  45dff8:	movk	x5, #0x3fff, lsl #48
  45dffc:	mov	x29, sp
  45e000:	ldr	x6, [x0]
  45e004:	stp	x21, x22, [sp, #32]
  45e008:	and	w22, w4, #0xff
  45e00c:	add	x5, x2, x5
  45e010:	stp	x19, x20, [sp, #16]
  45e014:	ldur	x4, [x6, #-24]
  45e018:	sub	x5, x5, x4
  45e01c:	cmp	x3, x5
  45e020:	b.hi	45e080 <_obstack_memory_used@@Base+0x9ce0>  // b.pmore
  45e024:	mov	x19, x3
  45e028:	mov	x20, x0
  45e02c:	mov	x21, x1
  45e030:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45e034:	cbz	x19, 45e054 <_obstack_memory_used@@Base+0x9cb4>
  45e038:	ldr	x1, [x20]
  45e03c:	cmp	x19, #0x1
  45e040:	add	x0, x1, x21
  45e044:	b.eq	45e068 <_obstack_memory_used@@Base+0x9cc8>  // b.none
  45e048:	mov	x2, x19
  45e04c:	mov	w1, w22
  45e050:	bl	402890 <memset@plt>
  45e054:	mov	x0, x20
  45e058:	ldp	x19, x20, [sp, #16]
  45e05c:	ldp	x21, x22, [sp, #32]
  45e060:	ldp	x29, x30, [sp], #48
  45e064:	ret
  45e068:	strb	w22, [x1, x21]
  45e06c:	mov	x0, x20
  45e070:	ldp	x19, x20, [sp, #16]
  45e074:	ldp	x21, x22, [sp, #32]
  45e078:	ldp	x29, x30, [sp], #48
  45e07c:	ret
  45e080:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e084:	add	x0, x0, #0x428
  45e088:	bl	402f0c <ferror@plt+0x1dc>
  45e08c:	nop
  45e090:	mov	w4, w2
  45e094:	mov	x3, x1
  45e098:	ldr	x2, [x0]
  45e09c:	mov	x1, #0x0                   	// #0
  45e0a0:	ldur	x2, [x2, #-24]
  45e0a4:	b	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e0a8:	stp	x29, x30, [sp, #-32]!
  45e0ac:	mov	w4, w1
  45e0b0:	mov	x3, #0x1                   	// #1
  45e0b4:	mov	x29, sp
  45e0b8:	ldr	x2, [x0]
  45e0bc:	mov	x1, #0x0                   	// #0
  45e0c0:	str	x19, [sp, #16]
  45e0c4:	mov	x19, x0
  45e0c8:	ldur	x2, [x2, #-24]
  45e0cc:	bl	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e0d0:	mov	x0, x19
  45e0d4:	ldr	x19, [sp, #16]
  45e0d8:	ldp	x29, x30, [sp], #32
  45e0dc:	ret
  45e0e0:	ldr	x6, [x0]
  45e0e4:	and	w4, w3, #0xff
  45e0e8:	ldur	x3, [x6, #-24]
  45e0ec:	cmp	x1, x3
  45e0f0:	b.hi	45e100 <_obstack_memory_used@@Base+0x9d60>  // b.pmore
  45e0f4:	mov	x3, x2
  45e0f8:	mov	x2, #0x0                   	// #0
  45e0fc:	b	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e100:	stp	x29, x30, [sp, #-16]!
  45e104:	mov	x2, x1
  45e108:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e10c:	mov	x29, sp
  45e110:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e114:	add	x0, x0, #0x390
  45e118:	add	x1, x1, #0x448
  45e11c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e120:	stp	x29, x30, [sp, #-32]!
  45e124:	mov	w4, w2
  45e128:	mov	x3, #0x1                   	// #1
  45e12c:	mov	x29, sp
  45e130:	stp	x19, x20, [sp, #16]
  45e134:	mov	x20, x0
  45e138:	mov	x2, #0x0                   	// #0
  45e13c:	ldr	x19, [x0]
  45e140:	sub	x19, x1, x19
  45e144:	mov	x1, x19
  45e148:	bl	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e14c:	ldr	x1, [x20]
  45e150:	mov	w2, #0xffffffff            	// #-1
  45e154:	add	x0, x1, x19
  45e158:	ldp	x19, x20, [sp, #16]
  45e15c:	stur	w2, [x1, #-8]
  45e160:	ldp	x29, x30, [sp], #32
  45e164:	ret
  45e168:	ldr	x5, [x0]
  45e16c:	ldur	x5, [x5, #-24]
  45e170:	cmp	x1, x5
  45e174:	b.hi	45e18c <_obstack_memory_used@@Base+0x9dec>  // b.pmore
  45e178:	sub	x5, x5, x1
  45e17c:	and	w4, w4, #0xff
  45e180:	cmp	x5, x2
  45e184:	csel	x2, x5, x2, ls  // ls = plast
  45e188:	b	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e18c:	stp	x29, x30, [sp, #-16]!
  45e190:	mov	x2, x1
  45e194:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e198:	mov	x29, sp
  45e19c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e1a0:	mov	x3, x5
  45e1a4:	add	x1, x1, #0x460
  45e1a8:	add	x0, x0, #0x390
  45e1ac:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e1b0:	ldr	x5, [x0]
  45e1b4:	sub	x2, x2, x1
  45e1b8:	sub	x1, x1, x5
  45e1bc:	b	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e1c0:	mov	x5, x2
  45e1c4:	mov	w4, w3
  45e1c8:	mov	x3, x5
  45e1cc:	mov	x2, #0x0                   	// #0
  45e1d0:	ldr	x5, [x0]
  45e1d4:	sub	x1, x1, x5
  45e1d8:	b	45dff0 <_obstack_memory_used@@Base+0x9c50>
  45e1dc:	nop
  45e1e0:	stp	x29, x30, [sp, #-48]!
  45e1e4:	mov	x29, sp
  45e1e8:	stp	x19, x20, [sp, #16]
  45e1ec:	mov	x19, x4
  45e1f0:	mov	x20, x0
  45e1f4:	stp	x21, x22, [sp, #32]
  45e1f8:	mov	x22, x3
  45e1fc:	mov	x21, x1
  45e200:	mov	x3, x4
  45e204:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45e208:	cbz	x19, 45e228 <_obstack_memory_used@@Base+0x9e88>
  45e20c:	ldr	x1, [x20]
  45e210:	cmp	x19, #0x1
  45e214:	add	x0, x1, x21
  45e218:	b.eq	45e23c <_obstack_memory_used@@Base+0x9e9c>  // b.none
  45e21c:	mov	x2, x19
  45e220:	mov	x1, x22
  45e224:	bl	402620 <memcpy@plt>
  45e228:	mov	x0, x20
  45e22c:	ldp	x19, x20, [sp, #16]
  45e230:	ldp	x21, x22, [sp, #32]
  45e234:	ldp	x29, x30, [sp], #48
  45e238:	ret
  45e23c:	ldrb	w0, [x22]
  45e240:	strb	w0, [x1, x21]
  45e244:	mov	x0, x20
  45e248:	ldp	x19, x20, [sp, #16]
  45e24c:	ldp	x21, x22, [sp, #32]
  45e250:	ldp	x29, x30, [sp], #48
  45e254:	ret
  45e258:	stp	x29, x30, [sp, #-48]!
  45e25c:	mov	x29, sp
  45e260:	str	x19, [sp, #16]
  45e264:	mov	x19, x0
  45e268:	mov	x0, #0xfffffffffffffff9    	// #-7
  45e26c:	movk	x0, #0x3fff, lsl #48
  45e270:	cmp	x2, x0
  45e274:	ldr	x0, [x19]
  45e278:	ldur	x5, [x0, #-24]
  45e27c:	b.hi	45e35c <_obstack_memory_used@@Base+0x9fbc>  // b.pmore
  45e280:	mov	x4, x2
  45e284:	mov	x3, x1
  45e288:	cmp	x0, x1
  45e28c:	b.hi	45e2b4 <_obstack_memory_used@@Base+0x9f14>  // b.pmore
  45e290:	add	x6, x0, x5
  45e294:	cmp	x6, x1
  45e298:	b.cc	45e2b4 <_obstack_memory_used@@Base+0x9f14>  // b.lo, b.ul, b.last
  45e29c:	sub	x0, x0, #0x8
  45e2a0:	ldar	w0, [x0]
  45e2a4:	cmp	w0, #0x0
  45e2a8:	ldr	x0, [x19]
  45e2ac:	b.le	45e2cc <_obstack_memory_used@@Base+0x9f2c>
  45e2b0:	ldur	x5, [x0, #-24]
  45e2b4:	mov	x0, x19
  45e2b8:	ldr	x19, [sp, #16]
  45e2bc:	mov	x2, x5
  45e2c0:	ldp	x29, x30, [sp], #48
  45e2c4:	mov	x1, #0x0                   	// #0
  45e2c8:	b	45e1e0 <_obstack_memory_used@@Base+0x9e40>
  45e2cc:	sub	x5, x1, x0
  45e2d0:	cmp	x2, x5
  45e2d4:	b.ls	45e31c <_obstack_memory_used@@Base+0x9f7c>  // b.plast
  45e2d8:	cbz	x5, 45e2f8 <_obstack_memory_used@@Base+0x9f58>
  45e2dc:	cmp	x2, #0x1
  45e2e0:	b.eq	45e33c <_obstack_memory_used@@Base+0x9f9c>  // b.none
  45e2e4:	str	x2, [sp, #40]
  45e2e8:	bl	402630 <memmove@plt>
  45e2ec:	ldr	x0, [x19]
  45e2f0:	ldr	x4, [sp, #40]
  45e2f4:	nop
  45e2f8:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e2fc:	sub	x2, x0, #0x18
  45e300:	ldr	x1, [x1, #3984]
  45e304:	cmp	x2, x1
  45e308:	b.ne	45e34c <_obstack_memory_used@@Base+0x9fac>  // b.any
  45e30c:	mov	x0, x19
  45e310:	ldr	x19, [sp, #16]
  45e314:	ldp	x29, x30, [sp], #48
  45e318:	ret
  45e31c:	cmp	x2, #0x1
  45e320:	b.eq	45e33c <_obstack_memory_used@@Base+0x9f9c>  // b.none
  45e324:	cbz	x2, 45e2f8 <_obstack_memory_used@@Base+0x9f58>
  45e328:	str	x2, [sp, #40]
  45e32c:	bl	402620 <memcpy@plt>
  45e330:	ldr	x0, [x19]
  45e334:	ldr	x4, [sp, #40]
  45e338:	b	45e2f8 <_obstack_memory_used@@Base+0x9f58>
  45e33c:	ldrb	w1, [x3]
  45e340:	strb	w1, [x0]
  45e344:	ldr	x0, [x19]
  45e348:	b	45e2f8 <_obstack_memory_used@@Base+0x9f58>
  45e34c:	stur	x4, [x0, #-24]
  45e350:	stur	wzr, [x0, #-8]
  45e354:	strb	wzr, [x0, x4]
  45e358:	b	45e30c <_obstack_memory_used@@Base+0x9f6c>
  45e35c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e360:	add	x0, x0, #0x498
  45e364:	bl	402f0c <ferror@plt+0x1dc>
  45e368:	stp	x29, x30, [sp, #-32]!
  45e36c:	mov	x29, sp
  45e370:	str	x19, [sp, #16]
  45e374:	mov	x19, x0
  45e378:	bl	45e258 <_obstack_memory_used@@Base+0x9eb8>
  45e37c:	mov	x0, x19
  45e380:	ldr	x19, [sp, #16]
  45e384:	ldp	x29, x30, [sp], #32
  45e388:	ret
  45e38c:	nop
  45e390:	ldr	x1, [x1]
  45e394:	ldur	x5, [x1, #-24]
  45e398:	cmp	x2, x5
  45e39c:	b.hi	45e3b8 <_obstack_memory_used@@Base+0xa018>  // b.pmore
  45e3a0:	mov	x4, x2
  45e3a4:	sub	x2, x5, x2
  45e3a8:	cmp	x2, x3
  45e3ac:	add	x1, x1, x4
  45e3b0:	csel	x2, x2, x3, ls  // ls = plast
  45e3b4:	b	45e258 <_obstack_memory_used@@Base+0x9eb8>
  45e3b8:	stp	x29, x30, [sp, #-16]!
  45e3bc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e3c0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e3c4:	mov	x29, sp
  45e3c8:	mov	x3, x5
  45e3cc:	add	x1, x1, #0x498
  45e3d0:	add	x0, x0, #0x390
  45e3d4:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e3d8:	stp	x29, x30, [sp, #-32]!
  45e3dc:	mov	x29, sp
  45e3e0:	stp	x19, x20, [sp, #16]
  45e3e4:	mov	x19, x1
  45e3e8:	mov	x20, x0
  45e3ec:	mov	x0, x1
  45e3f0:	bl	402680 <strlen@plt>
  45e3f4:	mov	x1, x19
  45e3f8:	mov	x2, x0
  45e3fc:	mov	x0, x20
  45e400:	ldp	x19, x20, [sp, #16]
  45e404:	ldp	x29, x30, [sp], #32
  45e408:	b	45e258 <_obstack_memory_used@@Base+0x9eb8>
  45e40c:	nop
  45e410:	stp	x29, x30, [sp, #-32]!
  45e414:	mov	x29, sp
  45e418:	stp	x19, x20, [sp, #16]
  45e41c:	mov	x19, x1
  45e420:	mov	x20, x0
  45e424:	mov	x0, x1
  45e428:	bl	402680 <strlen@plt>
  45e42c:	mov	x1, x19
  45e430:	mov	x2, x0
  45e434:	mov	x0, x20
  45e438:	ldp	x19, x20, [sp, #16]
  45e43c:	ldp	x29, x30, [sp], #32
  45e440:	b	45e258 <_obstack_memory_used@@Base+0x9eb8>
  45e444:	nop
  45e448:	b	45e258 <_obstack_memory_used@@Base+0x9eb8>
  45e44c:	nop
  45e450:	stp	x29, x30, [sp, #-64]!
  45e454:	mov	x5, x2
  45e458:	mov	x29, sp
  45e45c:	ldr	x6, [x0]
  45e460:	stp	x19, x20, [sp, #16]
  45e464:	stp	x21, x22, [sp, #32]
  45e468:	mov	x21, x1
  45e46c:	ldur	x2, [x6, #-24]
  45e470:	cmp	x1, x2
  45e474:	b.hi	45e5e0 <_obstack_memory_used@@Base+0xa240>  // b.pmore
  45e478:	mov	x7, #0xfffffffffffffff9    	// #-7
  45e47c:	mov	x4, x3
  45e480:	movk	x7, #0x3fff, lsl #48
  45e484:	sub	x7, x7, x2
  45e488:	cmp	x3, x7
  45e48c:	b.hi	45e5d4 <_obstack_memory_used@@Base+0xa234>  // b.pmore
  45e490:	mov	x20, x0
  45e494:	cmp	x6, x5
  45e498:	b.hi	45e4b8 <_obstack_memory_used@@Base+0xa118>  // b.pmore
  45e49c:	add	x2, x6, x2
  45e4a0:	cmp	x5, x2
  45e4a4:	b.hi	45e4b8 <_obstack_memory_used@@Base+0xa118>  // b.pmore
  45e4a8:	sub	x6, x6, #0x8
  45e4ac:	ldar	w2, [x6]
  45e4b0:	cmp	w2, #0x0
  45e4b4:	b.le	45e4d8 <_obstack_memory_used@@Base+0xa138>
  45e4b8:	mov	x1, x21
  45e4bc:	mov	x0, x20
  45e4c0:	ldp	x19, x20, [sp, #16]
  45e4c4:	mov	x3, x5
  45e4c8:	ldp	x21, x22, [sp, #32]
  45e4cc:	mov	x2, #0x0                   	// #0
  45e4d0:	ldp	x29, x30, [sp], #64
  45e4d4:	b	45e1e0 <_obstack_memory_used@@Base+0x9e40>
  45e4d8:	ldr	x19, [x0]
  45e4dc:	mov	x2, #0x0                   	// #0
  45e4e0:	str	x3, [sp, #56]
  45e4e4:	sub	x19, x5, x19
  45e4e8:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45e4ec:	ldr	x0, [x20]
  45e4f0:	ldr	x4, [sp, #56]
  45e4f4:	add	x1, x0, x19
  45e4f8:	add	x3, x0, x21
  45e4fc:	add	x5, x1, x4
  45e500:	cmp	x5, x3
  45e504:	b.hi	45e534 <_obstack_memory_used@@Base+0xa194>  // b.pmore
  45e508:	cmp	x4, #0x1
  45e50c:	b.eq	45e5a4 <_obstack_memory_used@@Base+0xa204>  // b.none
  45e510:	cbz	x4, 45e520 <_obstack_memory_used@@Base+0xa180>
  45e514:	mov	x2, x4
  45e518:	mov	x0, x3
  45e51c:	bl	402620 <memcpy@plt>
  45e520:	mov	x0, x20
  45e524:	ldp	x19, x20, [sp, #16]
  45e528:	ldp	x21, x22, [sp, #32]
  45e52c:	ldp	x29, x30, [sp], #64
  45e530:	ret
  45e534:	cmp	x1, x3
  45e538:	b.cc	45e55c <_obstack_memory_used@@Base+0xa1bc>  // b.lo, b.ul, b.last
  45e53c:	cmp	x4, #0x1
  45e540:	b.eq	45e5bc <_obstack_memory_used@@Base+0xa21c>  // b.none
  45e544:	cbz	x4, 45e520 <_obstack_memory_used@@Base+0xa180>
  45e548:	mov	x2, x4
  45e54c:	mov	x1, x5
  45e550:	mov	x0, x3
  45e554:	bl	402620 <memcpy@plt>
  45e558:	b	45e520 <_obstack_memory_used@@Base+0xa180>
  45e55c:	sub	x22, x21, x19
  45e560:	cmp	x22, #0x1
  45e564:	b.eq	45e5b0 <_obstack_memory_used@@Base+0xa210>  // b.none
  45e568:	cbz	x22, 45e584 <_obstack_memory_used@@Base+0xa1e4>
  45e56c:	mov	x0, x3
  45e570:	mov	x2, x22
  45e574:	str	x4, [sp, #56]
  45e578:	bl	402620 <memcpy@plt>
  45e57c:	ldr	x4, [sp, #56]
  45e580:	mov	x3, x0
  45e584:	sub	x2, x4, x22
  45e588:	add	x0, x3, x22
  45e58c:	cmp	x2, #0x1
  45e590:	add	x1, x3, x4
  45e594:	b.eq	45e5c8 <_obstack_memory_used@@Base+0xa228>  // b.none
  45e598:	cbz	x2, 45e520 <_obstack_memory_used@@Base+0xa180>
  45e59c:	bl	402620 <memcpy@plt>
  45e5a0:	b	45e520 <_obstack_memory_used@@Base+0xa180>
  45e5a4:	ldrb	w1, [x0, x19]
  45e5a8:	strb	w1, [x0, x21]
  45e5ac:	b	45e520 <_obstack_memory_used@@Base+0xa180>
  45e5b0:	ldrb	w1, [x0, x19]
  45e5b4:	strb	w1, [x0, x21]
  45e5b8:	b	45e584 <_obstack_memory_used@@Base+0xa1e4>
  45e5bc:	ldrb	w1, [x1, #1]
  45e5c0:	strb	w1, [x0, x21]
  45e5c4:	b	45e520 <_obstack_memory_used@@Base+0xa180>
  45e5c8:	ldrb	w0, [x3, x4]
  45e5cc:	strb	w0, [x3, x22]
  45e5d0:	b	45e520 <_obstack_memory_used@@Base+0xa180>
  45e5d4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e5d8:	add	x0, x0, #0x448
  45e5dc:	bl	402f0c <ferror@plt+0x1dc>
  45e5e0:	mov	x3, x2
  45e5e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e5e8:	mov	x2, x1
  45e5ec:	add	x0, x0, #0x390
  45e5f0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e5f4:	add	x1, x1, #0x448
  45e5f8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e5fc:	nop
  45e600:	ldr	x4, [x0]
  45e604:	sub	x1, x1, x4
  45e608:	b	45e450 <_obstack_memory_used@@Base+0xa0b0>
  45e60c:	nop
  45e610:	ldr	x2, [x2]
  45e614:	mov	x5, x3
  45e618:	ldur	x6, [x2, #-24]
  45e61c:	cmp	x3, x6
  45e620:	b.hi	45e638 <_obstack_memory_used@@Base+0xa298>  // b.pmore
  45e624:	sub	x6, x6, x3
  45e628:	add	x2, x2, x3
  45e62c:	cmp	x6, x4
  45e630:	csel	x3, x6, x4, ls  // ls = plast
  45e634:	b	45e450 <_obstack_memory_used@@Base+0xa0b0>
  45e638:	stp	x29, x30, [sp, #-16]!
  45e63c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e640:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e644:	mov	x29, sp
  45e648:	mov	x3, x6
  45e64c:	mov	x2, x5
  45e650:	add	x1, x1, #0x448
  45e654:	add	x0, x0, #0x390
  45e658:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e65c:	nop
  45e660:	stp	x29, x30, [sp, #-48]!
  45e664:	mov	x29, sp
  45e668:	stp	x19, x20, [sp, #16]
  45e66c:	mov	x19, x2
  45e670:	mov	x20, x0
  45e674:	mov	x0, x2
  45e678:	str	x21, [sp, #32]
  45e67c:	mov	x21, x1
  45e680:	bl	402680 <strlen@plt>
  45e684:	mov	x2, x19
  45e688:	mov	x3, x0
  45e68c:	mov	x1, x21
  45e690:	mov	x0, x20
  45e694:	ldp	x19, x20, [sp, #16]
  45e698:	ldr	x21, [sp, #32]
  45e69c:	ldp	x29, x30, [sp], #48
  45e6a0:	b	45e450 <_obstack_memory_used@@Base+0xa0b0>
  45e6a4:	nop
  45e6a8:	ldr	x2, [x2]
  45e6ac:	ldur	x3, [x2, #-24]
  45e6b0:	b	45e450 <_obstack_memory_used@@Base+0xa0b0>
  45e6b4:	nop
  45e6b8:	ldr	x1, [x0]
  45e6bc:	ldur	x2, [x1, #-24]
  45e6c0:	sub	x1, x2, #0x1
  45e6c4:	cmp	x1, x2
  45e6c8:	b.hi	45e6d8 <_obstack_memory_used@@Base+0xa338>  // b.pmore
  45e6cc:	mov	x3, #0x0                   	// #0
  45e6d0:	mov	x2, #0x1                   	// #1
  45e6d4:	b	45da20 <_obstack_memory_used@@Base+0x9680>
  45e6d8:	stp	x29, x30, [sp, #-16]!
  45e6dc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e6e0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45e6e4:	mov	x29, sp
  45e6e8:	add	x1, x1, #0x410
  45e6ec:	add	x0, x0, #0x390
  45e6f0:	mov	x3, #0x0                   	// #0
  45e6f4:	mov	x2, #0xffffffffffffffff    	// #-1
  45e6f8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45e6fc:	nop
  45e700:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e704:	ldr	x1, [x1, #3984]
  45e708:	cmp	x0, x1
  45e70c:	b.ne	45e718 <_obstack_memory_used@@Base+0xa378>  // b.any
  45e710:	add	x0, x0, #0x18
  45e714:	ret
  45e718:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e71c:	ldr	x1, [x1, #3600]
  45e720:	cbz	x1, 45e740 <_obstack_memory_used@@Base+0xa3a0>
  45e724:	add	x1, x0, #0x10
  45e728:	ldaxr	w2, [x1]
  45e72c:	add	w2, w2, #0x1
  45e730:	stlxr	w3, w2, [x1]
  45e734:	cbnz	w3, 45e728 <_obstack_memory_used@@Base+0xa388>
  45e738:	add	x0, x0, #0x18
  45e73c:	ret
  45e740:	ldr	w1, [x0, #16]
  45e744:	add	w1, w1, #0x1
  45e748:	str	w1, [x0, #16]
  45e74c:	b	45e710 <_obstack_memory_used@@Base+0xa370>
  45e750:	stp	x29, x30, [sp, #-32]!
  45e754:	mov	x3, x2
  45e758:	mov	x2, x1
  45e75c:	mov	x29, sp
  45e760:	ldr	x1, [x0, #8]
  45e764:	stp	x19, x20, [sp, #16]
  45e768:	mov	x19, x0
  45e76c:	ldr	x0, [x0]
  45e770:	add	x0, x3, x0
  45e774:	bl	45d5f0 <_obstack_memory_used@@Base+0x9250>
  45e778:	ldr	x2, [x19]
  45e77c:	mov	x20, x0
  45e780:	add	x3, x0, #0x18
  45e784:	cbz	x2, 45e7a8 <_obstack_memory_used@@Base+0xa408>
  45e788:	cmp	x2, #0x1
  45e78c:	add	x3, x0, #0x18
  45e790:	b.eq	45e7c8 <_obstack_memory_used@@Base+0xa428>  // b.none
  45e794:	mov	x0, x3
  45e798:	add	x1, x19, #0x18
  45e79c:	bl	402620 <memcpy@plt>
  45e7a0:	mov	x3, x0
  45e7a4:	ldr	x2, [x19]
  45e7a8:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e7ac:	ldr	x0, [x0, #3984]
  45e7b0:	cmp	x20, x0
  45e7b4:	b.ne	45e7e4 <_obstack_memory_used@@Base+0xa444>  // b.any
  45e7b8:	mov	x0, x3
  45e7bc:	ldp	x19, x20, [sp, #16]
  45e7c0:	ldp	x29, x30, [sp], #32
  45e7c4:	ret
  45e7c8:	ldrb	w0, [x19, #24]
  45e7cc:	strb	w0, [x20, #24]
  45e7d0:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e7d4:	ldr	x2, [x19]
  45e7d8:	ldr	x0, [x0, #3984]
  45e7dc:	cmp	x20, x0
  45e7e0:	b.eq	45e7b8 <_obstack_memory_used@@Base+0xa418>  // b.none
  45e7e4:	add	x0, x20, x2
  45e7e8:	str	x2, [x20]
  45e7ec:	str	wzr, [x20, #16]
  45e7f0:	strb	wzr, [x0, #24]
  45e7f4:	mov	x0, x3
  45e7f8:	ldp	x19, x20, [sp, #16]
  45e7fc:	ldp	x29, x30, [sp], #32
  45e800:	ret
  45e804:	nop
  45e808:	stp	x29, x30, [sp, #-64]!
  45e80c:	mov	x3, x1
  45e810:	mov	x29, sp
  45e814:	stp	x19, x20, [sp, #16]
  45e818:	mov	x19, x0
  45e81c:	ldr	x0, [x0]
  45e820:	ldur	x1, [x0, #-16]
  45e824:	cmp	x3, x1
  45e828:	b.eq	45e880 <_obstack_memory_used@@Base+0xa4e0>  // b.none
  45e82c:	str	x21, [sp, #32]
  45e830:	ldur	x2, [x0, #-24]
  45e834:	add	x21, sp, #0x38
  45e838:	mov	x1, x21
  45e83c:	sub	x0, x0, #0x18
  45e840:	cmp	x3, x2
  45e844:	csel	x3, x3, x2, cs  // cs = hs, nlast
  45e848:	sub	x2, x3, x2
  45e84c:	bl	45e750 <_obstack_memory_used@@Base+0xa3b0>
  45e850:	mov	x20, x0
  45e854:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e858:	ldr	x3, [x19]
  45e85c:	ldr	x2, [x2, #3984]
  45e860:	sub	x0, x3, #0x18
  45e864:	cmp	x0, x2
  45e868:	b.ne	45e89c <_obstack_memory_used@@Base+0xa4fc>  // b.any
  45e86c:	ldr	x21, [sp, #32]
  45e870:	str	x20, [x19]
  45e874:	ldp	x19, x20, [sp, #16]
  45e878:	ldp	x29, x30, [sp], #64
  45e87c:	ret
  45e880:	sub	x0, x0, #0x8
  45e884:	ldar	w0, [x0]
  45e888:	cmp	w0, #0x0
  45e88c:	b.le	45e874 <_obstack_memory_used@@Base+0xa4d4>
  45e890:	ldr	x0, [x19]
  45e894:	str	x21, [sp, #32]
  45e898:	b	45e830 <_obstack_memory_used@@Base+0xa490>
  45e89c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e8a0:	ldr	x1, [x1, #3600]
  45e8a4:	cbz	x1, 45e8d0 <_obstack_memory_used@@Base+0xa530>
  45e8a8:	sub	x3, x3, #0x8
  45e8ac:	ldaxr	w1, [x3]
  45e8b0:	sub	w2, w1, #0x1
  45e8b4:	stlxr	w4, w2, [x3]
  45e8b8:	cbnz	w4, 45e8ac <_obstack_memory_used@@Base+0xa50c>
  45e8bc:	cmp	w1, #0x0
  45e8c0:	b.gt	45e86c <_obstack_memory_used@@Base+0xa4cc>
  45e8c4:	mov	x1, x21
  45e8c8:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45e8cc:	b	45e86c <_obstack_memory_used@@Base+0xa4cc>
  45e8d0:	ldur	w1, [x3, #-8]
  45e8d4:	sub	w2, w1, #0x1
  45e8d8:	stur	w2, [x3, #-8]
  45e8dc:	b	45e8bc <_obstack_memory_used@@Base+0xa51c>
  45e8e0:	ldr	x1, [x0]
  45e8e4:	ldp	x2, x1, [x1, #-24]
  45e8e8:	cmp	x2, x1
  45e8ec:	b.cc	45e8f4 <_obstack_memory_used@@Base+0xa554>  // b.lo, b.ul, b.last
  45e8f0:	ret
  45e8f4:	stp	x29, x30, [sp, #-16]!
  45e8f8:	mov	x1, #0x0                   	// #0
  45e8fc:	mov	x29, sp
  45e900:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45e904:	ldp	x29, x30, [sp], #16
  45e908:	ret
  45e90c:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45e910:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  45e914:	b	45e904 <_obstack_memory_used@@Base+0xa564>
  45e918:	stp	x29, x30, [sp, #-48]!
  45e91c:	mov	x29, sp
  45e920:	stp	x19, x20, [sp, #16]
  45e924:	mov	x19, x0
  45e928:	ldr	x0, [x1]
  45e92c:	stp	x21, x22, [sp, #32]
  45e930:	ldur	x21, [x0, #-24]
  45e934:	cbz	x21, 45e994 <_obstack_memory_used@@Base+0xa5f4>
  45e938:	ldr	x0, [x19]
  45e93c:	mov	x20, x1
  45e940:	ldp	x22, x1, [x0, #-24]
  45e944:	add	x22, x21, x22
  45e948:	cmp	x22, x1
  45e94c:	b.ls	45e9a8 <_obstack_memory_used@@Base+0xa608>  // b.plast
  45e950:	mov	x1, x22
  45e954:	mov	x0, x19
  45e958:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45e95c:	ldr	x2, [x19]
  45e960:	cmp	x21, #0x1
  45e964:	ldr	x1, [x20]
  45e968:	ldur	x3, [x2, #-24]
  45e96c:	add	x0, x2, x3
  45e970:	b.eq	45e9d0 <_obstack_memory_used@@Base+0xa630>  // b.none
  45e974:	mov	x2, x21
  45e978:	bl	402620 <memcpy@plt>
  45e97c:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45e980:	ldr	x1, [x19]
  45e984:	ldr	x0, [x0, #3984]
  45e988:	sub	x2, x1, #0x18
  45e98c:	cmp	x2, x0
  45e990:	b.ne	45e9dc <_obstack_memory_used@@Base+0xa63c>  // b.any
  45e994:	mov	x0, x19
  45e998:	ldp	x19, x20, [sp, #16]
  45e99c:	ldp	x21, x22, [sp, #32]
  45e9a0:	ldp	x29, x30, [sp], #48
  45e9a4:	ret
  45e9a8:	sub	x0, x0, #0x8
  45e9ac:	ldar	w0, [x0]
  45e9b0:	cmp	w0, #0x0
  45e9b4:	b.gt	45e950 <_obstack_memory_used@@Base+0xa5b0>
  45e9b8:	ldr	x2, [x19]
  45e9bc:	cmp	x21, #0x1
  45e9c0:	ldr	x1, [x20]
  45e9c4:	ldur	x3, [x2, #-24]
  45e9c8:	add	x0, x2, x3
  45e9cc:	b.ne	45e974 <_obstack_memory_used@@Base+0xa5d4>  // b.any
  45e9d0:	ldrb	w0, [x1]
  45e9d4:	strb	w0, [x2, x3]
  45e9d8:	b	45e97c <_obstack_memory_used@@Base+0xa5dc>
  45e9dc:	stur	x22, [x1, #-24]
  45e9e0:	stur	wzr, [x1, #-8]
  45e9e4:	strb	wzr, [x1, x22]
  45e9e8:	b	45e994 <_obstack_memory_used@@Base+0xa5f4>
  45e9ec:	nop
  45e9f0:	b	45e918 <_obstack_memory_used@@Base+0xa578>
  45e9f4:	nop
  45e9f8:	stp	x29, x30, [sp, #-64]!
  45e9fc:	mov	x29, sp
  45ea00:	stp	x19, x20, [sp, #16]
  45ea04:	mov	x20, x0
  45ea08:	ldr	x0, [x1]
  45ea0c:	ldur	x4, [x0, #-24]
  45ea10:	stp	x21, x22, [sp, #32]
  45ea14:	cmp	x2, x4
  45ea18:	b.hi	45eae0 <_obstack_memory_used@@Base+0xa740>  // b.pmore
  45ea1c:	sub	x4, x4, x2
  45ea20:	mov	x21, x2
  45ea24:	cmp	x4, x3
  45ea28:	csel	x19, x4, x3, ls  // ls = plast
  45ea2c:	cbz	x19, 45eaac <_obstack_memory_used@@Base+0xa70c>
  45ea30:	ldr	x0, [x20]
  45ea34:	mov	x22, x1
  45ea38:	ldur	x1, [x0, #-16]
  45ea3c:	str	x23, [sp, #48]
  45ea40:	ldur	x23, [x0, #-24]
  45ea44:	add	x23, x19, x23
  45ea48:	cmp	x1, x23
  45ea4c:	b.cc	45ea60 <_obstack_memory_used@@Base+0xa6c0>  // b.lo, b.ul, b.last
  45ea50:	sub	x0, x0, #0x8
  45ea54:	ldar	w0, [x0]
  45ea58:	cmp	w0, #0x0
  45ea5c:	b.le	45ea6c <_obstack_memory_used@@Base+0xa6cc>
  45ea60:	mov	x1, x23
  45ea64:	mov	x0, x20
  45ea68:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45ea6c:	ldr	x2, [x20]
  45ea70:	cmp	x19, #0x1
  45ea74:	ldr	x4, [x22]
  45ea78:	ldur	x3, [x2, #-24]
  45ea7c:	add	x1, x4, x21
  45ea80:	add	x0, x2, x3
  45ea84:	b.eq	45eac0 <_obstack_memory_used@@Base+0xa720>  // b.none
  45ea88:	mov	x2, x19
  45ea8c:	bl	402620 <memcpy@plt>
  45ea90:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ea94:	ldr	x1, [x20]
  45ea98:	ldr	x0, [x0, #3984]
  45ea9c:	sub	x2, x1, #0x18
  45eaa0:	cmp	x2, x0
  45eaa4:	b.ne	45eacc <_obstack_memory_used@@Base+0xa72c>  // b.any
  45eaa8:	ldr	x23, [sp, #48]
  45eaac:	mov	x0, x20
  45eab0:	ldp	x19, x20, [sp, #16]
  45eab4:	ldp	x21, x22, [sp, #32]
  45eab8:	ldp	x29, x30, [sp], #64
  45eabc:	ret
  45eac0:	ldrb	w0, [x4, x21]
  45eac4:	strb	w0, [x2, x3]
  45eac8:	b	45ea90 <_obstack_memory_used@@Base+0xa6f0>
  45eacc:	stur	x23, [x1, #-24]
  45ead0:	stur	wzr, [x1, #-8]
  45ead4:	strb	wzr, [x1, x23]
  45ead8:	ldr	x23, [sp, #48]
  45eadc:	b	45eaac <_obstack_memory_used@@Base+0xa70c>
  45eae0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45eae4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45eae8:	mov	x3, x4
  45eaec:	add	x1, x1, #0x18
  45eaf0:	add	x0, x0, #0x390
  45eaf4:	str	x23, [sp, #48]
  45eaf8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45eafc:	nop
  45eb00:	stp	x29, x30, [sp, #-48]!
  45eb04:	mov	x29, sp
  45eb08:	stp	x19, x20, [sp, #16]
  45eb0c:	mov	x19, x0
  45eb10:	cbz	x2, 45ebac <_obstack_memory_used@@Base+0xa80c>
  45eb14:	ldr	x0, [x0]
  45eb18:	stp	x21, x22, [sp, #32]
  45eb1c:	mov	x21, x1
  45eb20:	mov	x1, #0xfffffffffffffff9    	// #-7
  45eb24:	mov	x20, x2
  45eb28:	ldur	x22, [x0, #-24]
  45eb2c:	movk	x1, #0x3fff, lsl #48
  45eb30:	sub	x1, x1, x22
  45eb34:	cmp	x2, x1
  45eb38:	b.hi	45ec08 <_obstack_memory_used@@Base+0xa868>  // b.pmore
  45eb3c:	ldur	x1, [x0, #-16]
  45eb40:	add	x22, x2, x22
  45eb44:	cmp	x22, x1
  45eb48:	b.ls	45ebf0 <_obstack_memory_used@@Base+0xa850>  // b.plast
  45eb4c:	cmp	x0, x21
  45eb50:	b.hi	45eb64 <_obstack_memory_used@@Base+0xa7c4>  // b.pmore
  45eb54:	ldur	x1, [x0, #-24]
  45eb58:	add	x1, x0, x1
  45eb5c:	cmp	x21, x1
  45eb60:	b.ls	45ebbc <_obstack_memory_used@@Base+0xa81c>  // b.plast
  45eb64:	mov	x1, x22
  45eb68:	mov	x0, x19
  45eb6c:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45eb70:	ldr	x1, [x19]
  45eb74:	cmp	x20, #0x1
  45eb78:	ldur	x2, [x1, #-24]
  45eb7c:	add	x0, x1, x2
  45eb80:	b.eq	45ebe4 <_obstack_memory_used@@Base+0xa844>  // b.none
  45eb84:	mov	x2, x20
  45eb88:	mov	x1, x21
  45eb8c:	bl	402620 <memcpy@plt>
  45eb90:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45eb94:	ldr	x1, [x19]
  45eb98:	ldr	x0, [x0, #3984]
  45eb9c:	sub	x2, x1, #0x18
  45eba0:	cmp	x2, x0
  45eba4:	b.ne	45ec14 <_obstack_memory_used@@Base+0xa874>  // b.any
  45eba8:	ldp	x21, x22, [sp, #32]
  45ebac:	mov	x0, x19
  45ebb0:	ldp	x19, x20, [sp, #16]
  45ebb4:	ldp	x29, x30, [sp], #48
  45ebb8:	ret
  45ebbc:	sub	x21, x21, x0
  45ebc0:	mov	x1, x22
  45ebc4:	mov	x0, x19
  45ebc8:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45ebcc:	ldr	x1, [x19]
  45ebd0:	cmp	x20, #0x1
  45ebd4:	add	x21, x1, x21
  45ebd8:	ldur	x2, [x1, #-24]
  45ebdc:	add	x0, x1, x2
  45ebe0:	b.ne	45eb84 <_obstack_memory_used@@Base+0xa7e4>  // b.any
  45ebe4:	ldrb	w0, [x21]
  45ebe8:	strb	w0, [x1, x2]
  45ebec:	b	45eb90 <_obstack_memory_used@@Base+0xa7f0>
  45ebf0:	sub	x0, x0, #0x8
  45ebf4:	ldar	w0, [x0]
  45ebf8:	cmp	w0, #0x0
  45ebfc:	b.le	45eb70 <_obstack_memory_used@@Base+0xa7d0>
  45ec00:	ldr	x0, [x19]
  45ec04:	b	45eb4c <_obstack_memory_used@@Base+0xa7ac>
  45ec08:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45ec0c:	add	x0, x0, #0x18
  45ec10:	bl	402f0c <ferror@plt+0x1dc>
  45ec14:	stur	x22, [x1, #-24]
  45ec18:	stur	wzr, [x1, #-8]
  45ec1c:	strb	wzr, [x1, x22]
  45ec20:	ldp	x21, x22, [sp, #32]
  45ec24:	b	45ebac <_obstack_memory_used@@Base+0xa80c>
  45ec28:	b	45eb00 <_obstack_memory_used@@Base+0xa760>
  45ec2c:	nop
  45ec30:	stp	x29, x30, [sp, #-32]!
  45ec34:	mov	x29, sp
  45ec38:	stp	x19, x20, [sp, #16]
  45ec3c:	mov	x19, x1
  45ec40:	mov	x20, x0
  45ec44:	mov	x0, x1
  45ec48:	bl	402680 <strlen@plt>
  45ec4c:	mov	x1, x19
  45ec50:	mov	x2, x0
  45ec54:	mov	x0, x20
  45ec58:	ldp	x19, x20, [sp, #16]
  45ec5c:	ldp	x29, x30, [sp], #32
  45ec60:	b	45eb00 <_obstack_memory_used@@Base+0xa760>
  45ec64:	nop
  45ec68:	stp	x29, x30, [sp, #-32]!
  45ec6c:	mov	x29, sp
  45ec70:	stp	x19, x20, [sp, #16]
  45ec74:	mov	x19, x1
  45ec78:	mov	x20, x0
  45ec7c:	mov	x0, x1
  45ec80:	bl	402680 <strlen@plt>
  45ec84:	mov	x1, x19
  45ec88:	mov	x2, x0
  45ec8c:	mov	x0, x20
  45ec90:	ldp	x19, x20, [sp, #16]
  45ec94:	ldp	x29, x30, [sp], #32
  45ec98:	b	45eb00 <_obstack_memory_used@@Base+0xa760>
  45ec9c:	nop
  45eca0:	b	45eb00 <_obstack_memory_used@@Base+0xa760>
  45eca4:	nop
  45eca8:	stp	x29, x30, [sp, #-48]!
  45ecac:	mov	x29, sp
  45ecb0:	stp	x19, x20, [sp, #16]
  45ecb4:	mov	x19, x0
  45ecb8:	cbz	x1, 45ed4c <_obstack_memory_used@@Base+0xa9ac>
  45ecbc:	ldr	x0, [x0]
  45ecc0:	mov	x20, x1
  45ecc4:	stp	x21, x22, [sp, #32]
  45ecc8:	and	w22, w2, #0xff
  45eccc:	mov	x2, #0xfffffffffffffff9    	// #-7
  45ecd0:	ldur	x1, [x0, #-24]
  45ecd4:	movk	x2, #0x3fff, lsl #48
  45ecd8:	sub	x2, x2, x1
  45ecdc:	cmp	x20, x2
  45ece0:	b.hi	45ed64 <_obstack_memory_used@@Base+0xa9c4>  // b.pmore
  45ece4:	ldur	x2, [x0, #-16]
  45ece8:	add	x21, x20, x1
  45ecec:	cmp	x21, x2
  45ecf0:	b.hi	45ed04 <_obstack_memory_used@@Base+0xa964>  // b.pmore
  45ecf4:	sub	x0, x0, #0x8
  45ecf8:	ldar	w0, [x0]
  45ecfc:	cmp	w0, #0x0
  45ed00:	b.le	45ed10 <_obstack_memory_used@@Base+0xa970>
  45ed04:	mov	x1, x21
  45ed08:	mov	x0, x19
  45ed0c:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45ed10:	ldr	x1, [x19]
  45ed14:	cmp	x20, #0x1
  45ed18:	ldur	x2, [x1, #-24]
  45ed1c:	add	x0, x1, x2
  45ed20:	b.eq	45ed5c <_obstack_memory_used@@Base+0xa9bc>  // b.none
  45ed24:	mov	x2, x20
  45ed28:	mov	w1, w22
  45ed2c:	bl	402890 <memset@plt>
  45ed30:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ed34:	ldr	x1, [x19]
  45ed38:	ldr	x0, [x0, #3984]
  45ed3c:	sub	x2, x1, #0x18
  45ed40:	cmp	x2, x0
  45ed44:	b.ne	45ed70 <_obstack_memory_used@@Base+0xa9d0>  // b.any
  45ed48:	ldp	x21, x22, [sp, #32]
  45ed4c:	mov	x0, x19
  45ed50:	ldp	x19, x20, [sp, #16]
  45ed54:	ldp	x29, x30, [sp], #48
  45ed58:	ret
  45ed5c:	strb	w22, [x1, x2]
  45ed60:	b	45ed30 <_obstack_memory_used@@Base+0xa990>
  45ed64:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  45ed68:	add	x0, x0, #0x18
  45ed6c:	bl	402f0c <ferror@plt+0x1dc>
  45ed70:	stur	x21, [x1, #-24]
  45ed74:	stur	wzr, [x1, #-8]
  45ed78:	strb	wzr, [x1, x21]
  45ed7c:	ldp	x21, x22, [sp, #32]
  45ed80:	b	45ed4c <_obstack_memory_used@@Base+0xa9ac>
  45ed84:	nop
  45ed88:	mov	x4, #0xfffffffffffffff9    	// #-7
  45ed8c:	movk	x4, #0x3fff, lsl #48
  45ed90:	cmp	x1, x4
  45ed94:	ldr	x4, [x0]
  45ed98:	ldur	x4, [x4, #-24]
  45ed9c:	b.hi	45edc8 <_obstack_memory_used@@Base+0xaa28>  // b.pmore
  45eda0:	cmp	x1, x4
  45eda4:	b.hi	45edbc <_obstack_memory_used@@Base+0xaa1c>  // b.pmore
  45eda8:	b.cc	45edb0 <_obstack_memory_used@@Base+0xaa10>  // b.lo, b.ul, b.last
  45edac:	ret
  45edb0:	sub	x2, x4, x1
  45edb4:	mov	x3, #0x0                   	// #0
  45edb8:	b	45da20 <_obstack_memory_used@@Base+0x9680>
  45edbc:	and	w2, w2, #0xff
  45edc0:	sub	x1, x1, x4
  45edc4:	b	45eca8 <_obstack_memory_used@@Base+0xa908>
  45edc8:	stp	x29, x30, [sp, #-16]!
  45edcc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45edd0:	add	x0, x0, #0x820
  45edd4:	mov	x29, sp
  45edd8:	bl	402f0c <ferror@plt+0x1dc>
  45eddc:	nop
  45ede0:	mov	w2, #0x0                   	// #0
  45ede4:	b	45ed88 <_obstack_memory_used@@Base+0xa9e8>
  45ede8:	stp	x29, x30, [sp, #-48]!
  45edec:	mov	x29, sp
  45edf0:	stp	x19, x20, [sp, #16]
  45edf4:	mov	x19, x0
  45edf8:	ldr	x0, [x0]
  45edfc:	stp	x21, x22, [sp, #32]
  45ee00:	and	w22, w1, #0xff
  45ee04:	ldp	x21, x1, [x0, #-24]
  45ee08:	add	x20, x21, #0x1
  45ee0c:	cmp	x20, x1
  45ee10:	b.hi	45ee24 <_obstack_memory_used@@Base+0xaa84>  // b.pmore
  45ee14:	sub	x0, x0, #0x8
  45ee18:	ldar	w0, [x0]
  45ee1c:	cmp	w0, #0x0
  45ee20:	b.le	45ee30 <_obstack_memory_used@@Base+0xaa90>
  45ee24:	mov	x1, x20
  45ee28:	mov	x0, x19
  45ee2c:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45ee30:	ldr	x2, [x19]
  45ee34:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ee38:	ldr	x0, [x0, #3984]
  45ee3c:	ldur	x1, [x2, #-24]
  45ee40:	strb	w22, [x2, x1]
  45ee44:	ldr	x2, [x19]
  45ee48:	sub	x1, x2, #0x18
  45ee4c:	cmp	x1, x0
  45ee50:	b.ne	45ee64 <_obstack_memory_used@@Base+0xaac4>  // b.any
  45ee54:	ldp	x19, x20, [sp, #16]
  45ee58:	ldp	x21, x22, [sp, #32]
  45ee5c:	ldp	x29, x30, [sp], #48
  45ee60:	ret
  45ee64:	add	x1, x1, x21
  45ee68:	stur	x20, [x2, #-24]
  45ee6c:	stur	wzr, [x2, #-8]
  45ee70:	strb	wzr, [x1, #25]
  45ee74:	ldp	x19, x20, [sp, #16]
  45ee78:	ldp	x21, x22, [sp, #32]
  45ee7c:	ldp	x29, x30, [sp], #48
  45ee80:	ret
  45ee84:	nop
  45ee88:	stp	x29, x30, [sp, #-48]!
  45ee8c:	mov	x29, sp
  45ee90:	stp	x19, x20, [sp, #16]
  45ee94:	mov	x19, x0
  45ee98:	ldr	x0, [x0]
  45ee9c:	stp	x21, x22, [sp, #32]
  45eea0:	and	w22, w1, #0xff
  45eea4:	ldp	x21, x1, [x0, #-24]
  45eea8:	add	x20, x21, #0x1
  45eeac:	cmp	x20, x1
  45eeb0:	b.hi	45eec4 <_obstack_memory_used@@Base+0xab24>  // b.pmore
  45eeb4:	sub	x0, x0, #0x8
  45eeb8:	ldar	w0, [x0]
  45eebc:	cmp	w0, #0x0
  45eec0:	b.le	45eed0 <_obstack_memory_used@@Base+0xab30>
  45eec4:	mov	x1, x20
  45eec8:	mov	x0, x19
  45eecc:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45eed0:	ldr	x2, [x19]
  45eed4:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45eed8:	ldr	x0, [x0, #3984]
  45eedc:	ldur	x1, [x2, #-24]
  45eee0:	strb	w22, [x2, x1]
  45eee4:	ldr	x2, [x19]
  45eee8:	sub	x1, x2, #0x18
  45eeec:	cmp	x1, x0
  45eef0:	b.ne	45ef08 <_obstack_memory_used@@Base+0xab68>  // b.any
  45eef4:	mov	x0, x19
  45eef8:	ldp	x19, x20, [sp, #16]
  45eefc:	ldp	x21, x22, [sp, #32]
  45ef00:	ldp	x29, x30, [sp], #48
  45ef04:	ret
  45ef08:	add	x1, x1, x21
  45ef0c:	stur	x20, [x2, #-24]
  45ef10:	stur	wzr, [x2, #-8]
  45ef14:	mov	x0, x19
  45ef18:	strb	wzr, [x1, #25]
  45ef1c:	ldp	x19, x20, [sp, #16]
  45ef20:	ldp	x21, x22, [sp, #32]
  45ef24:	ldp	x29, x30, [sp], #48
  45ef28:	ret
  45ef2c:	nop
  45ef30:	mov	x2, x0
  45ef34:	add	x3, x0, #0x10
  45ef38:	ldr	w4, [x3]
  45ef3c:	tbnz	w4, #31, 45ef58 <_obstack_memory_used@@Base+0xabb8>
  45ef40:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ef44:	ldr	x0, [x0, #3984]
  45ef48:	cmp	x2, x0
  45ef4c:	b.ne	45ef60 <_obstack_memory_used@@Base+0xabc0>  // b.any
  45ef50:	add	x0, x2, #0x18
  45ef54:	ret
  45ef58:	mov	x2, #0x0                   	// #0
  45ef5c:	b	45e750 <_obstack_memory_used@@Base+0xa3b0>
  45ef60:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ef64:	ldr	x0, [x0, #3600]
  45ef68:	cbz	x0, 45ef84 <_obstack_memory_used@@Base+0xabe4>
  45ef6c:	ldaxr	w0, [x3]
  45ef70:	add	w0, w0, #0x1
  45ef74:	stlxr	w1, w0, [x3]
  45ef78:	cbnz	w1, 45ef6c <_obstack_memory_used@@Base+0xabcc>
  45ef7c:	add	x0, x2, #0x18
  45ef80:	ret
  45ef84:	ldr	w0, [x2, #16]
  45ef88:	add	w0, w0, #0x1
  45ef8c:	str	w0, [x2, #16]
  45ef90:	b	45ef50 <_obstack_memory_used@@Base+0xabb0>
  45ef94:	nop
  45ef98:	stp	x29, x30, [sp, #-48]!
  45ef9c:	mov	x29, sp
  45efa0:	ldr	x1, [x1]
  45efa4:	str	x19, [sp, #16]
  45efa8:	mov	x19, x0
  45efac:	sub	x0, x1, #0x18
  45efb0:	add	x3, x0, #0x10
  45efb4:	ldr	w2, [x3]
  45efb8:	tbnz	w2, #31, 45efdc <_obstack_memory_used@@Base+0xac3c>
  45efbc:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45efc0:	ldr	x2, [x2, #3984]
  45efc4:	cmp	x0, x2
  45efc8:	b.ne	45effc <_obstack_memory_used@@Base+0xac5c>  // b.any
  45efcc:	str	x1, [x19]
  45efd0:	ldr	x19, [sp, #16]
  45efd4:	ldp	x29, x30, [sp], #48
  45efd8:	ret
  45efdc:	add	x1, sp, #0x28
  45efe0:	mov	x2, #0x0                   	// #0
  45efe4:	bl	45e750 <_obstack_memory_used@@Base+0xa3b0>
  45efe8:	mov	x1, x0
  45efec:	str	x1, [x19]
  45eff0:	ldr	x19, [sp, #16]
  45eff4:	ldp	x29, x30, [sp], #48
  45eff8:	ret
  45effc:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f000:	ldr	x0, [x0, #3600]
  45f004:	cbz	x0, 45f028 <_obstack_memory_used@@Base+0xac88>
  45f008:	ldaxr	w0, [x3]
  45f00c:	add	w0, w0, #0x1
  45f010:	stlxr	w2, w0, [x3]
  45f014:	cbnz	w2, 45f008 <_obstack_memory_used@@Base+0xac68>
  45f018:	str	x1, [x19]
  45f01c:	ldr	x19, [sp, #16]
  45f020:	ldp	x29, x30, [sp], #48
  45f024:	ret
  45f028:	ldur	w0, [x1, #-8]
  45f02c:	add	w0, w0, #0x1
  45f030:	stur	w0, [x1, #-8]
  45f034:	b	45efcc <_obstack_memory_used@@Base+0xac2c>
  45f038:	stp	x29, x30, [sp, #-32]!
  45f03c:	mov	x29, sp
  45f040:	ldr	x3, [x1]
  45f044:	str	x19, [sp, #16]
  45f048:	mov	x19, x0
  45f04c:	sub	x0, x3, #0x18
  45f050:	add	x4, x0, #0x10
  45f054:	ldr	w1, [x4]
  45f058:	tbnz	w1, #31, 45f07c <_obstack_memory_used@@Base+0xacdc>
  45f05c:	adrp	x1, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f060:	ldr	x1, [x1, #3984]
  45f064:	cmp	x0, x1
  45f068:	b.ne	45f09c <_obstack_memory_used@@Base+0xacfc>  // b.any
  45f06c:	str	x3, [x19]
  45f070:	ldr	x19, [sp, #16]
  45f074:	ldp	x29, x30, [sp], #32
  45f078:	ret
  45f07c:	mov	x1, x2
  45f080:	mov	x2, #0x0                   	// #0
  45f084:	bl	45e750 <_obstack_memory_used@@Base+0xa3b0>
  45f088:	mov	x3, x0
  45f08c:	str	x3, [x19]
  45f090:	ldr	x19, [sp, #16]
  45f094:	ldp	x29, x30, [sp], #32
  45f098:	ret
  45f09c:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f0a0:	ldr	x0, [x0, #3600]
  45f0a4:	cbz	x0, 45f0c8 <_obstack_memory_used@@Base+0xad28>
  45f0a8:	ldaxr	w0, [x4]
  45f0ac:	add	w0, w0, #0x1
  45f0b0:	stlxr	w1, w0, [x4]
  45f0b4:	cbnz	w1, 45f0a8 <_obstack_memory_used@@Base+0xad08>
  45f0b8:	str	x3, [x19]
  45f0bc:	ldr	x19, [sp, #16]
  45f0c0:	ldp	x29, x30, [sp], #32
  45f0c4:	ret
  45f0c8:	ldur	w0, [x3, #-8]
  45f0cc:	add	w0, w0, #0x1
  45f0d0:	stur	w0, [x3, #-8]
  45f0d4:	b	45f06c <_obstack_memory_used@@Base+0xaccc>
  45f0d8:	stp	x29, x30, [sp, #-48]!
  45f0dc:	mov	x29, sp
  45f0e0:	stp	x19, x20, [sp, #16]
  45f0e4:	mov	x19, x0
  45f0e8:	ldr	x20, [x1]
  45f0ec:	ldr	x1, [x0]
  45f0f0:	cmp	x1, x20
  45f0f4:	b.eq	45f12c <_obstack_memory_used@@Base+0xad8c>  // b.none
  45f0f8:	sub	x0, x20, #0x18
  45f0fc:	add	x3, x0, #0x10
  45f100:	ldr	w2, [x3]
  45f104:	tbnz	w2, #31, 45f13c <_obstack_memory_used@@Base+0xad9c>
  45f108:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f10c:	ldr	x4, [x2, #3984]
  45f110:	cmp	x0, x4
  45f114:	b.ne	45f1a0 <_obstack_memory_used@@Base+0xae00>  // b.any
  45f118:	ldr	x2, [x2, #3984]
  45f11c:	sub	x0, x1, #0x18
  45f120:	cmp	x0, x2
  45f124:	b.ne	45f158 <_obstack_memory_used@@Base+0xadb8>  // b.any
  45f128:	str	x20, [x19]
  45f12c:	mov	x0, x19
  45f130:	ldp	x19, x20, [sp, #16]
  45f134:	ldp	x29, x30, [sp], #48
  45f138:	ret
  45f13c:	add	x1, sp, #0x28
  45f140:	mov	x2, #0x0                   	// #0
  45f144:	bl	45e750 <_obstack_memory_used@@Base+0xa3b0>
  45f148:	mov	x20, x0
  45f14c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f150:	ldr	x1, [x19]
  45f154:	b	45f118 <_obstack_memory_used@@Base+0xad78>
  45f158:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f15c:	ldr	x2, [x2, #3600]
  45f160:	cbz	x2, 45f190 <_obstack_memory_used@@Base+0xadf0>
  45f164:	sub	x1, x1, #0x8
  45f168:	ldaxr	w2, [x1]
  45f16c:	sub	w3, w2, #0x1
  45f170:	stlxr	w4, w3, [x1]
  45f174:	cbnz	w4, 45f168 <_obstack_memory_used@@Base+0xadc8>
  45f178:	cmp	w2, #0x0
  45f17c:	b.gt	45f128 <_obstack_memory_used@@Base+0xad88>
  45f180:	add	x1, sp, #0x28
  45f184:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45f188:	str	x20, [x19]
  45f18c:	b	45f12c <_obstack_memory_used@@Base+0xad8c>
  45f190:	ldur	w2, [x1, #-8]
  45f194:	sub	w3, w2, #0x1
  45f198:	stur	w3, [x1, #-8]
  45f19c:	b	45f178 <_obstack_memory_used@@Base+0xadd8>
  45f1a0:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f1a4:	ldr	x0, [x0, #3600]
  45f1a8:	cbz	x0, 45f1c4 <_obstack_memory_used@@Base+0xae24>
  45f1ac:	ldaxr	w0, [x3]
  45f1b0:	add	w0, w0, #0x1
  45f1b4:	stlxr	w1, w0, [x3]
  45f1b8:	cbnz	w1, 45f1ac <_obstack_memory_used@@Base+0xae0c>
  45f1bc:	ldr	x1, [x19]
  45f1c0:	b	45f118 <_obstack_memory_used@@Base+0xad78>
  45f1c4:	ldur	w0, [x20, #-8]
  45f1c8:	add	w0, w0, #0x1
  45f1cc:	stur	w0, [x20, #-8]
  45f1d0:	b	45f118 <_obstack_memory_used@@Base+0xad78>
  45f1d4:	nop
  45f1d8:	b	45f0d8 <_obstack_memory_used@@Base+0xad38>
  45f1dc:	nop
  45f1e0:	stp	x29, x30, [sp, #-80]!
  45f1e4:	mov	x29, sp
  45f1e8:	str	x23, [sp, #48]
  45f1ec:	adrp	x23, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f1f0:	stp	x19, x20, [sp, #16]
  45f1f4:	mov	x19, x8
  45f1f8:	mov	x20, x1
  45f1fc:	stp	x21, x22, [sp, #32]
  45f200:	mov	x22, x0
  45f204:	bl	402680 <strlen@plt>
  45f208:	ldr	x1, [x23, #3984]
  45f20c:	mov	x21, x0
  45f210:	mov	x0, x19
  45f214:	add	x1, x1, #0x18
  45f218:	str	x1, [x19]
  45f21c:	ldr	x1, [x20]
  45f220:	ldur	x1, [x1, #-24]
  45f224:	add	x1, x21, x1
  45f228:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45f22c:	mov	x2, x21
  45f230:	mov	x1, x22
  45f234:	mov	x0, x19
  45f238:	bl	45eb00 <_obstack_memory_used@@Base+0xa760>
  45f23c:	mov	x1, x20
  45f240:	mov	x0, x19
  45f244:	bl	45e918 <_obstack_memory_used@@Base+0xa578>
  45f248:	mov	x0, x19
  45f24c:	ldp	x19, x20, [sp, #16]
  45f250:	ldp	x21, x22, [sp, #32]
  45f254:	ldr	x23, [sp, #48]
  45f258:	ldp	x29, x30, [sp], #80
  45f25c:	ret
  45f260:	ldr	x1, [x19]
  45f264:	mov	x19, x0
  45f268:	ldr	x23, [x23, #3984]
  45f26c:	sub	x0, x1, #0x18
  45f270:	cmp	x0, x23
  45f274:	b.eq	45f280 <_obstack_memory_used@@Base+0xaee0>  // b.none
  45f278:	add	x1, sp, #0x48
  45f27c:	bl	45d858 <_obstack_memory_used@@Base+0x94b8>
  45f280:	mov	x0, x19
  45f284:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45f288:	stp	x29, x30, [sp, #-64]!
  45f28c:	mov	x29, sp
  45f290:	stp	x21, x22, [sp, #32]
  45f294:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f298:	and	w22, w0, #0xff
  45f29c:	ldr	x2, [x21, #3984]
  45f2a0:	stp	x19, x20, [sp, #16]
  45f2a4:	mov	x20, x1
  45f2a8:	add	x2, x2, #0x18
  45f2ac:	str	x2, [x8]
  45f2b0:	mov	x19, x8
  45f2b4:	mov	x0, x8
  45f2b8:	ldr	x1, [x1]
  45f2bc:	ldur	x1, [x1, #-24]
  45f2c0:	add	x1, x1, #0x1
  45f2c4:	bl	45e808 <_obstack_memory_used@@Base+0xa468>
  45f2c8:	mov	w2, w22
  45f2cc:	mov	x0, x19
  45f2d0:	mov	x1, #0x1                   	// #1
  45f2d4:	bl	45eca8 <_obstack_memory_used@@Base+0xa908>
  45f2d8:	mov	x1, x20
  45f2dc:	mov	x0, x19
  45f2e0:	bl	45e918 <_obstack_memory_used@@Base+0xa578>
  45f2e4:	mov	x0, x19
  45f2e8:	ldp	x19, x20, [sp, #16]
  45f2ec:	ldp	x21, x22, [sp, #32]
  45f2f0:	ldp	x29, x30, [sp], #64
  45f2f4:	ret
  45f2f8:	ldr	x1, [x19]
  45f2fc:	mov	x19, x0
  45f300:	ldr	x21, [x21, #3984]
  45f304:	sub	x0, x1, #0x18
  45f308:	cmp	x0, x21
  45f30c:	b.eq	45f318 <_obstack_memory_used@@Base+0xaf78>  // b.none
  45f310:	add	x1, sp, #0x38
  45f314:	bl	45d858 <_obstack_memory_used@@Base+0x94b8>
  45f318:	mov	x0, x19
  45f31c:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45f320:	stp	x29, x30, [sp, #-48]!
  45f324:	mov	x29, sp
  45f328:	stp	x19, x20, [sp, #16]
  45f32c:	mov	x19, x8
  45f330:	mov	x20, x1
  45f334:	mov	x1, x0
  45f338:	mov	x0, x8
  45f33c:	bl	45ef98 <_obstack_memory_used@@Base+0xabf8>
  45f340:	mov	x1, x20
  45f344:	mov	x0, x19
  45f348:	bl	45e918 <_obstack_memory_used@@Base+0xa578>
  45f34c:	mov	x0, x19
  45f350:	ldp	x19, x20, [sp, #16]
  45f354:	ldp	x29, x30, [sp], #48
  45f358:	ret
  45f35c:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f360:	ldr	x1, [x19]
  45f364:	mov	x19, x0
  45f368:	ldr	x2, [x2, #3984]
  45f36c:	sub	x0, x1, #0x18
  45f370:	cmp	x0, x2
  45f374:	b.eq	45f380 <_obstack_memory_used@@Base+0xafe0>  // b.none
  45f378:	add	x1, sp, #0x28
  45f37c:	bl	45d858 <_obstack_memory_used@@Base+0x94b8>
  45f380:	mov	x0, x19
  45f384:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45f388:	cmp	x1, x0
  45f38c:	b.eq	45f3fc <_obstack_memory_used@@Base+0xb05c>  // b.none
  45f390:	stp	x29, x30, [sp, #-48]!
  45f394:	mov	x29, sp
  45f398:	stp	x19, x20, [sp, #16]
  45f39c:	sub	x19, x1, x0
  45f3a0:	mov	x20, x0
  45f3a4:	mov	x1, #0x0                   	// #0
  45f3a8:	mov	x0, x19
  45f3ac:	str	x21, [sp, #32]
  45f3b0:	bl	45d5f0 <_obstack_memory_used@@Base+0x9250>
  45f3b4:	cmp	x19, #0x1
  45f3b8:	mov	x21, x0
  45f3bc:	add	x3, x0, #0x18
  45f3c0:	b.eq	45f410 <_obstack_memory_used@@Base+0xb070>  // b.none
  45f3c4:	mov	x0, x3
  45f3c8:	mov	x1, x20
  45f3cc:	mov	x2, x19
  45f3d0:	bl	402620 <memcpy@plt>
  45f3d4:	mov	x3, x0
  45f3d8:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f3dc:	ldr	x0, [x0, #3984]
  45f3e0:	cmp	x21, x0
  45f3e4:	b.ne	45f41c <_obstack_memory_used@@Base+0xb07c>  // b.any
  45f3e8:	mov	x0, x3
  45f3ec:	ldp	x19, x20, [sp, #16]
  45f3f0:	ldr	x21, [sp, #32]
  45f3f4:	ldp	x29, x30, [sp], #48
  45f3f8:	ret
  45f3fc:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f400:	ldr	x3, [x3, #3984]
  45f404:	add	x3, x3, #0x18
  45f408:	mov	x0, x3
  45f40c:	ret
  45f410:	ldrb	w0, [x20]
  45f414:	strb	w0, [x21, #24]
  45f418:	b	45f3d8 <_obstack_memory_used@@Base+0xb038>
  45f41c:	add	x0, x21, x19
  45f420:	str	x19, [x21]
  45f424:	str	wzr, [x21, #16]
  45f428:	strb	wzr, [x0, #24]
  45f42c:	b	45f3e8 <_obstack_memory_used@@Base+0xb048>
  45f430:	stp	x29, x30, [sp, #-32]!
  45f434:	mov	x29, sp
  45f438:	str	x19, [sp, #16]
  45f43c:	mov	x19, x0
  45f440:	mov	x0, x1
  45f444:	mov	x1, x2
  45f448:	mov	x2, x3
  45f44c:	mov	w3, #0x0                   	// #0
  45f450:	bl	45f388 <_obstack_memory_used@@Base+0xafe8>
  45f454:	str	x0, [x19]
  45f458:	ldr	x19, [sp, #16]
  45f45c:	ldp	x29, x30, [sp], #32
  45f460:	ret
  45f464:	nop
  45f468:	cmp	x0, x1
  45f46c:	b.eq	45f478 <_obstack_memory_used@@Base+0xb0d8>  // b.none
  45f470:	cbz	x0, 45f488 <_obstack_memory_used@@Base+0xb0e8>
  45f474:	b	45d7a0 <_obstack_memory_used@@Base+0x9400>
  45f478:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f47c:	ldr	x0, [x0, #3984]
  45f480:	add	x0, x0, #0x18
  45f484:	ret
  45f488:	stp	x29, x30, [sp, #-16]!
  45f48c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f490:	add	x0, x0, #0x838
  45f494:	mov	x29, sp
  45f498:	bl	402e10 <ferror@plt+0xe0>
  45f49c:	nop
  45f4a0:	stp	x29, x30, [sp, #-32]!
  45f4a4:	mov	x29, sp
  45f4a8:	str	x19, [sp, #16]
  45f4ac:	mov	x19, x0
  45f4b0:	ldr	x0, [x1]
  45f4b4:	ldur	x1, [x0, #-24]
  45f4b8:	cmp	x2, x1
  45f4bc:	b.hi	45f4e8 <_obstack_memory_used@@Base+0xb148>  // b.pmore
  45f4c0:	mov	x4, x2
  45f4c4:	add	x1, x0, x1
  45f4c8:	mov	x2, x3
  45f4cc:	add	x0, x0, x4
  45f4d0:	mov	w3, #0x0                   	// #0
  45f4d4:	bl	45f468 <_obstack_memory_used@@Base+0xb0c8>
  45f4d8:	str	x0, [x19]
  45f4dc:	ldr	x19, [sp, #16]
  45f4e0:	ldp	x29, x30, [sp], #32
  45f4e4:	ret
  45f4e8:	mov	x3, x1
  45f4ec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f4f0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f4f4:	add	x0, x0, #0x390
  45f4f8:	add	x1, x1, #0x4e0
  45f4fc:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f500:	stp	x29, x30, [sp, #-48]!
  45f504:	mov	x29, sp
  45f508:	ldr	x1, [x1]
  45f50c:	ldur	x4, [x1, #-24]
  45f510:	str	x19, [sp, #16]
  45f514:	cmp	x4, x2
  45f518:	b.cc	45f55c <_obstack_memory_used@@Base+0xb1bc>  // b.lo, b.ul, b.last
  45f51c:	sub	x4, x4, x2
  45f520:	mov	x6, x3
  45f524:	cmp	x4, x3
  45f528:	mov	x5, x2
  45f52c:	csel	x4, x4, x6, ls  // ls = plast
  45f530:	mov	x19, x0
  45f534:	add	x4, x4, x5
  45f538:	add	x0, x1, x2
  45f53c:	mov	w3, #0x0                   	// #0
  45f540:	add	x2, sp, #0x28
  45f544:	add	x1, x1, x4
  45f548:	bl	45f468 <_obstack_memory_used@@Base+0xb0c8>
  45f54c:	str	x0, [x19]
  45f550:	ldr	x19, [sp, #16]
  45f554:	ldp	x29, x30, [sp], #48
  45f558:	ret
  45f55c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f560:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f564:	mov	x3, x4
  45f568:	add	x1, x1, #0x4e0
  45f56c:	add	x0, x0, #0x390
  45f570:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f574:	nop
  45f578:	stp	x29, x30, [sp, #-32]!
  45f57c:	mov	x4, x1
  45f580:	mov	x1, x0
  45f584:	mov	x29, sp
  45f588:	ldr	x0, [x0]
  45f58c:	ldur	x0, [x0, #-24]
  45f590:	str	x19, [sp, #16]
  45f594:	cmp	x4, x0
  45f598:	b.hi	45f5c0 <_obstack_memory_used@@Base+0xb220>  // b.pmore
  45f59c:	mov	x19, x8
  45f5a0:	mov	x3, x2
  45f5a4:	mov	x0, x8
  45f5a8:	mov	x2, x4
  45f5ac:	bl	45f500 <_obstack_memory_used@@Base+0xb160>
  45f5b0:	mov	x0, x19
  45f5b4:	ldr	x19, [sp, #16]
  45f5b8:	ldp	x29, x30, [sp], #32
  45f5bc:	ret
  45f5c0:	mov	x3, x0
  45f5c4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f5c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f5cc:	mov	x2, x4
  45f5d0:	add	x1, x1, #0x510
  45f5d4:	add	x0, x0, #0x390
  45f5d8:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f5dc:	nop
  45f5e0:	stp	x29, x30, [sp, #-32]!
  45f5e4:	mov	x29, sp
  45f5e8:	ldr	x1, [x1]
  45f5ec:	ldur	x5, [x1, #-24]
  45f5f0:	str	x19, [sp, #16]
  45f5f4:	cmp	x2, x5
  45f5f8:	b.hi	45f638 <_obstack_memory_used@@Base+0xb298>  // b.pmore
  45f5fc:	sub	x5, x5, x2
  45f600:	mov	x6, x2
  45f604:	cmp	x5, x3
  45f608:	mov	x19, x0
  45f60c:	csel	x5, x5, x3, ls  // ls = plast
  45f610:	add	x0, x1, x6
  45f614:	add	x5, x5, x6
  45f618:	mov	x2, x4
  45f61c:	add	x1, x1, x5
  45f620:	mov	w3, #0x0                   	// #0
  45f624:	bl	45f468 <_obstack_memory_used@@Base+0xb0c8>
  45f628:	str	x0, [x19]
  45f62c:	ldr	x19, [sp, #16]
  45f630:	ldp	x29, x30, [sp], #32
  45f634:	ret
  45f638:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f63c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f640:	mov	x3, x5
  45f644:	add	x1, x1, #0x4e0
  45f648:	add	x0, x0, #0x390
  45f64c:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f650:	stp	x29, x30, [sp, #-32]!
  45f654:	mov	x29, sp
  45f658:	str	x19, [sp, #16]
  45f65c:	mov	x19, x0
  45f660:	mov	x0, x1
  45f664:	mov	x1, x2
  45f668:	mov	x2, x3
  45f66c:	mov	w3, #0x0                   	// #0
  45f670:	bl	45f468 <_obstack_memory_used@@Base+0xb0c8>
  45f674:	str	x0, [x19]
  45f678:	ldr	x19, [sp, #16]
  45f67c:	ldp	x29, x30, [sp], #32
  45f680:	ret
  45f684:	nop
  45f688:	cmp	x0, x1
  45f68c:	b.eq	45f698 <_obstack_memory_used@@Base+0xb2f8>  // b.none
  45f690:	cbz	x0, 45f6a8 <_obstack_memory_used@@Base+0xb308>
  45f694:	b	45d7a0 <_obstack_memory_used@@Base+0x9400>
  45f698:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f69c:	ldr	x0, [x0, #3984]
  45f6a0:	add	x0, x0, #0x18
  45f6a4:	ret
  45f6a8:	stp	x29, x30, [sp, #-16]!
  45f6ac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f6b0:	add	x0, x0, #0x838
  45f6b4:	mov	x29, sp
  45f6b8:	bl	402e10 <ferror@plt+0xe0>
  45f6bc:	nop
  45f6c0:	stp	x29, x30, [sp, #-32]!
  45f6c4:	mov	x29, sp
  45f6c8:	str	x19, [sp, #16]
  45f6cc:	mov	x19, x0
  45f6d0:	mov	x0, x1
  45f6d4:	add	x1, x1, x2
  45f6d8:	mov	x2, x3
  45f6dc:	mov	w3, #0x0                   	// #0
  45f6e0:	bl	45f688 <_obstack_memory_used@@Base+0xb2e8>
  45f6e4:	str	x0, [x19]
  45f6e8:	ldr	x19, [sp, #16]
  45f6ec:	ldp	x29, x30, [sp], #32
  45f6f0:	ret
  45f6f4:	nop
  45f6f8:	stp	x29, x30, [sp, #-80]!
  45f6fc:	mov	x29, sp
  45f700:	ldr	x6, [x0]
  45f704:	stp	x19, x20, [sp, #16]
  45f708:	stp	x21, x22, [sp, #32]
  45f70c:	mov	x22, x1
  45f710:	ldur	x5, [x6, #-24]
  45f714:	cmp	x1, x5
  45f718:	b.hi	45f8b8 <_obstack_memory_used@@Base+0xb518>  // b.pmore
  45f71c:	sub	x20, x5, x1
  45f720:	mov	x19, x0
  45f724:	cmp	x20, x2
  45f728:	mov	x0, #0xfffffffffffffff9    	// #-7
  45f72c:	csel	x20, x20, x2, ls  // ls = plast
  45f730:	movk	x0, #0x3fff, lsl #48
  45f734:	sub	x0, x0, x5
  45f738:	add	x0, x0, x20
  45f73c:	cmp	x4, x0
  45f740:	b.hi	45f8ac <_obstack_memory_used@@Base+0xb50c>  // b.pmore
  45f744:	cmp	x6, x3
  45f748:	b.ls	45f774 <_obstack_memory_used@@Base+0xb3d4>  // b.plast
  45f74c:	mov	x0, x19
  45f750:	mov	x2, x20
  45f754:	mov	x1, x22
  45f758:	bl	45e1e0 <_obstack_memory_used@@Base+0x9e40>
  45f75c:	mov	x19, x0
  45f760:	mov	x0, x19
  45f764:	ldp	x19, x20, [sp, #16]
  45f768:	ldp	x21, x22, [sp, #32]
  45f76c:	ldp	x29, x30, [sp], #80
  45f770:	ret
  45f774:	add	x5, x6, x5
  45f778:	cmp	x3, x5
  45f77c:	b.hi	45f74c <_obstack_memory_used@@Base+0xb3ac>  // b.pmore
  45f780:	sub	x6, x6, #0x8
  45f784:	ldar	w0, [x6]
  45f788:	cmp	w0, #0x0
  45f78c:	b.gt	45f74c <_obstack_memory_used@@Base+0xb3ac>
  45f790:	ldr	x21, [x19]
  45f794:	add	x0, x3, x4
  45f798:	add	x1, x21, x1
  45f79c:	cmp	x0, x1
  45f7a0:	b.ls	45f888 <_obstack_memory_used@@Base+0xb4e8>  // b.plast
  45f7a4:	add	x0, x22, x20
  45f7a8:	add	x0, x21, x0
  45f7ac:	cmp	x3, x0
  45f7b0:	b.cc	45f800 <_obstack_memory_used@@Base+0xb460>  // b.lo, b.ul, b.last
  45f7b4:	sub	x3, x3, x21
  45f7b8:	add	x3, x3, x4
  45f7bc:	sub	x21, x3, x20
  45f7c0:	mov	x2, x20
  45f7c4:	mov	x3, x4
  45f7c8:	mov	x1, x22
  45f7cc:	mov	x0, x19
  45f7d0:	str	x4, [sp, #56]
  45f7d4:	bl	45da20 <_obstack_memory_used@@Base+0x9680>
  45f7d8:	ldr	x2, [x19]
  45f7dc:	ldr	x4, [sp, #56]
  45f7e0:	add	x0, x2, x22
  45f7e4:	add	x1, x2, x21
  45f7e8:	cmp	x4, #0x1
  45f7ec:	b.eq	45f890 <_obstack_memory_used@@Base+0xb4f0>  // b.none
  45f7f0:	cbz	x4, 45f760 <_obstack_memory_used@@Base+0xb3c0>
  45f7f4:	mov	x2, x4
  45f7f8:	bl	402620 <memcpy@plt>
  45f7fc:	b	45f760 <_obstack_memory_used@@Base+0xb3c0>
  45f800:	add	x21, sp, #0x40
  45f804:	mov	x1, x3
  45f808:	mov	x2, x4
  45f80c:	mov	x3, x21
  45f810:	add	x0, sp, #0x48
  45f814:	str	x4, [sp, #56]
  45f818:	bl	45f6c0 <_obstack_memory_used@@Base+0xb320>
  45f81c:	ldr	x4, [sp, #56]
  45f820:	mov	x2, x20
  45f824:	ldr	x3, [sp, #72]
  45f828:	mov	x1, x22
  45f82c:	mov	x0, x19
  45f830:	bl	45e1e0 <_obstack_memory_used@@Base+0x9e40>
  45f834:	mov	x19, x0
  45f838:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f83c:	ldr	x1, [sp, #72]
  45f840:	ldr	x0, [x0, #3984]
  45f844:	sub	x2, x1, #0x18
  45f848:	cmp	x2, x0
  45f84c:	b.eq	45f760 <_obstack_memory_used@@Base+0xb3c0>  // b.none
  45f850:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f854:	ldr	x0, [x0, #3600]
  45f858:	cbz	x0, 45f89c <_obstack_memory_used@@Base+0xb4fc>
  45f85c:	sub	x1, x1, #0x8
  45f860:	ldaxr	w0, [x1]
  45f864:	sub	w3, w0, #0x1
  45f868:	stlxr	w4, w3, [x1]
  45f86c:	cbnz	w4, 45f860 <_obstack_memory_used@@Base+0xb4c0>
  45f870:	cmp	w0, #0x0
  45f874:	b.gt	45f760 <_obstack_memory_used@@Base+0xb3c0>
  45f878:	mov	x1, x21
  45f87c:	mov	x0, x2
  45f880:	bl	45d850 <_obstack_memory_used@@Base+0x94b0>
  45f884:	b	45f760 <_obstack_memory_used@@Base+0xb3c0>
  45f888:	sub	x21, x3, x21
  45f88c:	b	45f7c0 <_obstack_memory_used@@Base+0xb420>
  45f890:	ldrb	w0, [x2, x21]
  45f894:	strb	w0, [x2, x22]
  45f898:	b	45f760 <_obstack_memory_used@@Base+0xb3c0>
  45f89c:	ldur	w0, [x1, #-8]
  45f8a0:	sub	w3, w0, #0x1
  45f8a4:	stur	w3, [x1, #-8]
  45f8a8:	b	45f870 <_obstack_memory_used@@Base+0xb4d0>
  45f8ac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f8b0:	add	x0, x0, #0x460
  45f8b4:	bl	402f0c <ferror@plt+0x1dc>
  45f8b8:	mov	x2, x1
  45f8bc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f8c0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f8c4:	mov	x3, x5
  45f8c8:	add	x1, x1, #0x460
  45f8cc:	add	x0, x0, #0x390
  45f8d0:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f8d4:	adrp	x2, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45f8d8:	mov	x19, x0
  45f8dc:	ldr	x1, [sp, #72]
  45f8e0:	ldr	x2, [x2, #3984]
  45f8e4:	sub	x0, x1, #0x18
  45f8e8:	cmp	x0, x2
  45f8ec:	b.eq	45f8f8 <_obstack_memory_used@@Base+0xb558>  // b.none
  45f8f0:	mov	x1, x21
  45f8f4:	bl	45d858 <_obstack_memory_used@@Base+0x94b8>
  45f8f8:	mov	x0, x19
  45f8fc:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  45f900:	ldr	x3, [x3]
  45f904:	ldur	x4, [x3, #-24]
  45f908:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45f90c:	nop
  45f910:	ldr	x3, [x3]
  45f914:	ldur	x6, [x3, #-24]
  45f918:	cmp	x4, x6
  45f91c:	b.hi	45f934 <_obstack_memory_used@@Base+0xb594>  // b.pmore
  45f920:	sub	x6, x6, x4
  45f924:	add	x3, x3, x4
  45f928:	cmp	x6, x5
  45f92c:	csel	x4, x6, x5, ls  // ls = plast
  45f930:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45f934:	stp	x29, x30, [sp, #-16]!
  45f938:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f93c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45f940:	mov	x29, sp
  45f944:	mov	x3, x6
  45f948:	mov	x2, x4
  45f94c:	add	x1, x1, #0x460
  45f950:	add	x0, x0, #0x390
  45f954:	bl	456220 <_obstack_memory_used@@Base+0x1e80>
  45f958:	stp	x29, x30, [sp, #-48]!
  45f95c:	mov	x29, sp
  45f960:	stp	x19, x20, [sp, #16]
  45f964:	mov	x19, x3
  45f968:	mov	x20, x0
  45f96c:	mov	x0, x3
  45f970:	stp	x21, x22, [sp, #32]
  45f974:	mov	x21, x1
  45f978:	mov	x22, x2
  45f97c:	bl	402680 <strlen@plt>
  45f980:	mov	x3, x19
  45f984:	mov	x4, x0
  45f988:	mov	x2, x22
  45f98c:	mov	x1, x21
  45f990:	mov	x0, x20
  45f994:	ldp	x19, x20, [sp, #16]
  45f998:	ldp	x21, x22, [sp, #32]
  45f99c:	ldp	x29, x30, [sp], #48
  45f9a0:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45f9a4:	nop
  45f9a8:	ldr	x5, [x0]
  45f9ac:	sub	x2, x2, x1
  45f9b0:	sub	x1, x1, x5
  45f9b4:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45f9b8:	ldr	x3, [x3]
  45f9bc:	sub	x2, x2, x1
  45f9c0:	ldr	x5, [x0]
  45f9c4:	ldur	x4, [x3, #-24]
  45f9c8:	sub	x1, x1, x5
  45f9cc:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45f9d0:	stp	x29, x30, [sp, #-48]!
  45f9d4:	mov	x29, sp
  45f9d8:	stp	x19, x20, [sp, #16]
  45f9dc:	mov	x20, x0
  45f9e0:	mov	x19, x1
  45f9e4:	mov	x0, x3
  45f9e8:	stp	x21, x22, [sp, #32]
  45f9ec:	mov	x21, x3
  45f9f0:	mov	x22, x2
  45f9f4:	bl	402680 <strlen@plt>
  45f9f8:	ldr	x1, [x20]
  45f9fc:	sub	x2, x22, x19
  45fa00:	mov	x3, x21
  45fa04:	mov	x4, x0
  45fa08:	sub	x1, x19, x1
  45fa0c:	mov	x0, x20
  45fa10:	ldp	x19, x20, [sp, #16]
  45fa14:	ldp	x21, x22, [sp, #32]
  45fa18:	ldp	x29, x30, [sp], #48
  45fa1c:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa20:	ldr	x5, [x0]
  45fa24:	sub	x2, x2, x1
  45fa28:	sub	x4, x4, x3
  45fa2c:	sub	x1, x1, x5
  45fa30:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa34:	nop
  45fa38:	ldr	x5, [x0]
  45fa3c:	sub	x2, x2, x1
  45fa40:	sub	x4, x4, x3
  45fa44:	sub	x1, x1, x5
  45fa48:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa4c:	nop
  45fa50:	ldr	x5, [x0]
  45fa54:	sub	x2, x2, x1
  45fa58:	sub	x1, x1, x5
  45fa5c:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa60:	ldr	x5, [x0]
  45fa64:	sub	x2, x2, x1
  45fa68:	sub	x4, x4, x3
  45fa6c:	sub	x1, x1, x5
  45fa70:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa74:	nop
  45fa78:	ldr	x5, [x0]
  45fa7c:	sub	x2, x2, x1
  45fa80:	sub	x4, x4, x3
  45fa84:	sub	x1, x1, x5
  45fa88:	b	45f6f8 <_obstack_memory_used@@Base+0xb358>
  45fa8c:	nop
  45fa90:	stp	x29, x30, [sp, #-48]!
  45fa94:	mov	x29, sp
  45fa98:	stp	x19, x20, [sp, #16]
  45fa9c:	mov	x19, x1
  45faa0:	mov	x20, x0
  45faa4:	str	x21, [sp, #32]
  45faa8:	mov	x1, #0xffffffffffffffff    	// #-1
  45faac:	mov	x21, x2
  45fab0:	cbz	x19, 45fac0 <_obstack_memory_used@@Base+0xb720>
  45fab4:	mov	x0, x19
  45fab8:	bl	402680 <strlen@plt>
  45fabc:	add	x1, x19, x0
  45fac0:	mov	x2, x21
  45fac4:	mov	x0, x19
  45fac8:	mov	w3, #0x0                   	// #0
  45facc:	bl	45f688 <_obstack_memory_used@@Base+0xb2e8>
  45fad0:	ldr	x21, [sp, #32]
  45fad4:	str	x0, [x20]
  45fad8:	ldp	x19, x20, [sp, #16]
  45fadc:	ldp	x29, x30, [sp], #48
  45fae0:	ret
  45fae4:	nop
  45fae8:	stp	x29, x30, [sp, #-32]!
  45faec:	mov	x29, sp
  45faf0:	str	x19, [sp, #16]
  45faf4:	mov	x19, x0
  45faf8:	mov	x0, x1
  45fafc:	add	x1, x1, x2
  45fb00:	mov	x2, x3
  45fb04:	mov	w3, #0x0                   	// #0
  45fb08:	bl	45f688 <_obstack_memory_used@@Base+0xb2e8>
  45fb0c:	str	x0, [x19]
  45fb10:	ldr	x19, [sp, #16]
  45fb14:	ldp	x29, x30, [sp], #32
  45fb18:	ret
  45fb1c:	nop
  45fb20:	stp	x29, x30, [sp, #-32]!
  45fb24:	mov	x29, sp
  45fb28:	str	x19, [sp, #16]
  45fb2c:	mov	x19, x0
  45fb30:	mov	x0, x1
  45fb34:	mov	x1, x2
  45fb38:	mov	x2, x3
  45fb3c:	mov	w3, #0x0                   	// #0
  45fb40:	bl	45f688 <_obstack_memory_used@@Base+0xb2e8>
  45fb44:	str	x0, [x19]
  45fb48:	ldr	x19, [sp, #16]
  45fb4c:	ldp	x29, x30, [sp], #32
  45fb50:	ret
  45fb54:	nop
  45fb58:	ldr	x2, [x0]
  45fb5c:	ldr	x0, [x1]
  45fb60:	cmp	x2, x0
  45fb64:	cset	w0, eq  // eq = none
  45fb68:	ret
  45fb6c:	nop
  45fb70:	ldr	x2, [x0]
  45fb74:	ldr	x0, [x1]
  45fb78:	cmp	x2, x0
  45fb7c:	cset	w0, eq  // eq = none
  45fb80:	ret
  45fb84:	nop
  45fb88:	stp	x29, x30, [sp, #-48]!
  45fb8c:	mov	x29, sp
  45fb90:	stp	x19, x20, [sp, #16]
  45fb94:	mov	x19, x1
  45fb98:	ldr	x20, [x1]
  45fb9c:	str	x21, [sp, #32]
  45fba0:	mov	x21, x0
  45fba4:	mov	x0, x1
  45fba8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fbac:	add	x1, x1, #0x878
  45fbb0:	bl	45d3b0 <_obstack_memory_used@@Base+0x9010>
  45fbb4:	cbz	w0, 45fbf4 <_obstack_memory_used@@Base+0xb854>
  45fbb8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fbbc:	mov	x0, x19
  45fbc0:	add	x1, x1, #0x868
  45fbc4:	bl	45d3b0 <_obstack_memory_used@@Base+0x9010>
  45fbc8:	cbnz	w0, 45fc00 <_obstack_memory_used@@Base+0xb860>
  45fbcc:	mov	x0, x20
  45fbd0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x19c60>
  45fbd4:	add	x1, x1, #0xde0
  45fbd8:	bl	4027d0 <fopen@plt>
  45fbdc:	str	x0, [x21]
  45fbe0:	cbz	x0, 45fc14 <_obstack_memory_used@@Base+0xb874>
  45fbe4:	ldp	x19, x20, [sp, #16]
  45fbe8:	ldr	x21, [sp, #32]
  45fbec:	ldp	x29, x30, [sp], #48
  45fbf0:	ret
  45fbf4:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fbf8:	add	x20, x20, #0x868
  45fbfc:	b	45fbcc <_obstack_memory_used@@Base+0xb82c>
  45fc00:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fc04:	mov	x0, x19
  45fc08:	add	x1, x1, #0x880
  45fc0c:	bl	45d3b0 <_obstack_memory_used@@Base+0x9010>
  45fc10:	cbz	w0, 45fbcc <_obstack_memory_used@@Base+0xb82c>
  45fc14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fc18:	add	x0, x0, #0x890
  45fc1c:	bl	402fb4 <ferror@plt+0x284>
  45fc20:	stp	x29, x30, [sp, #-48]!
  45fc24:	mov	x29, sp
  45fc28:	stp	x19, x20, [sp, #16]
  45fc2c:	mov	x20, x1
  45fc30:	mov	x19, x0
  45fc34:	mov	x0, x1
  45fc38:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fc3c:	add	x1, x1, #0x8c8
  45fc40:	bl	45d3b0 <_obstack_memory_used@@Base+0x9010>
  45fc44:	mov	x2, #0x1571                	// #5489
  45fc48:	cbnz	w0, 45fc8c <_obstack_memory_used@@Base+0xb8ec>
  45fc4c:	mov	x0, #0x8965                	// #35173
  45fc50:	mov	x1, #0x1                   	// #1
  45fc54:	movk	x0, #0x6c07, lsl #16
  45fc58:	str	x2, [x19]
  45fc5c:	b	45fc64 <_obstack_memory_used@@Base+0xb8c4>
  45fc60:	add	x1, x1, #0x1
  45fc64:	eor	x2, x2, x2, lsr #30
  45fc68:	cmp	x1, #0x26f
  45fc6c:	madd	w2, w2, w0, w1
  45fc70:	str	x2, [x19, x1, lsl #3]
  45fc74:	b.ne	45fc60 <_obstack_memory_used@@Base+0xb8c0>  // b.any
  45fc78:	mov	x0, #0x270                 	// #624
  45fc7c:	str	x0, [x19, #4992]
  45fc80:	ldp	x19, x20, [sp, #16]
  45fc84:	ldp	x29, x30, [sp], #48
  45fc88:	ret
  45fc8c:	ldr	x20, [x20]
  45fc90:	mov	w2, #0x0                   	// #0
  45fc94:	add	x1, sp, #0x28
  45fc98:	mov	x0, x20
  45fc9c:	bl	402670 <strtoul@plt>
  45fca0:	mov	x2, x0
  45fca4:	ldrb	w0, [x20]
  45fca8:	cbz	w0, 45fcbc <_obstack_memory_used@@Base+0xb91c>
  45fcac:	ldr	x0, [sp, #40]
  45fcb0:	and	x2, x2, #0xffffffff
  45fcb4:	ldrb	w0, [x0]
  45fcb8:	cbz	w0, 45fc4c <_obstack_memory_used@@Base+0xb8ac>
  45fcbc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45fcc0:	add	x0, x0, #0x890
  45fcc4:	bl	402fb4 <ferror@plt+0x284>
  45fcc8:	add	x1, x0, #0x10
  45fccc:	stp	x1, xzr, [x0]
  45fcd0:	strb	wzr, [x0, #16]
  45fcd4:	ret
  45fcd8:	add	x4, x0, #0x10
  45fcdc:	str	x4, [x0]
  45fce0:	ldr	x2, [x1, #8]
  45fce4:	mov	w3, #0x0                   	// #0
  45fce8:	ldr	x1, [x1]
  45fcec:	add	x2, x1, x2
  45fcf0:	b	459280 <_obstack_memory_used@@Base+0x4ee0>
  45fcf4:	nop
  45fcf8:	add	x5, x0, #0x10
  45fcfc:	str	x5, [x0]
  45fd00:	add	x2, x1, x2
  45fd04:	mov	w3, #0x0                   	// #0
  45fd08:	b	40bc30 <ferror@plt+0x8f00>
  45fd0c:	nop
  45fd10:	stp	x29, x30, [sp, #-16]!
  45fd14:	add	x4, x0, #0x10
  45fd18:	mov	w3, #0x0                   	// #0
  45fd1c:	mov	x29, sp
  45fd20:	str	x4, [x0]
  45fd24:	ldr	x2, [x1, #8]
  45fd28:	ldr	x1, [x1]
  45fd2c:	add	x2, x1, x2
  45fd30:	bl	459280 <_obstack_memory_used@@Base+0x4ee0>
  45fd34:	ldp	x29, x30, [sp], #16
  45fd38:	ret
  45fd3c:	nop
  45fd40:	stp	x29, x30, [sp, #-32]!
  45fd44:	mov	x29, sp
  45fd48:	str	x19, [sp, #16]
  45fd4c:	mov	x19, x0
  45fd50:	bl	456950 <_obstack_memory_used@@Base+0x25b0>
  45fd54:	mov	x0, x19
  45fd58:	ldr	x19, [sp, #16]
  45fd5c:	ldp	x29, x30, [sp], #32
  45fd60:	ret
  45fd64:	nop
  45fd68:	mov	x1, x0
  45fd6c:	ldr	x0, [x1], #16
  45fd70:	cmp	x0, x1
  45fd74:	b.eq	45fd7c <_obstack_memory_used@@Base+0xb9dc>  // b.none
  45fd78:	b	4552e8 <_obstack_memory_used@@Base+0xf48>
  45fd7c:	ret
  45fd80:	mov	x2, x1
  45fd84:	add	x3, x0, #0x10
  45fd88:	str	x3, [x0]
  45fd8c:	ldr	x3, [x2], #16
  45fd90:	cmp	x3, x2
  45fd94:	b.eq	45fdb8 <_obstack_memory_used@@Base+0xba18>  // b.none
  45fd98:	str	x3, [x0]
  45fd9c:	ldr	x3, [x1, #8]
  45fda0:	str	x3, [x0, #8]
  45fda4:	ldr	x4, [x1, #16]
  45fda8:	str	x4, [x0, #16]
  45fdac:	stp	x2, xzr, [x1]
  45fdb0:	strb	wzr, [x1, #16]
  45fdb4:	ret
  45fdb8:	ldr	x3, [x1, #8]
  45fdbc:	str	x3, [x0, #8]
  45fdc0:	ldp	x4, x5, [x1, #16]
  45fdc4:	stp	x4, x5, [x0, #16]
  45fdc8:	stp	x2, xzr, [x1]
  45fdcc:	strb	wzr, [x1, #16]
  45fdd0:	ret
  45fdd4:	nop
  45fdd8:	stp	x29, x30, [sp, #-32]!
  45fddc:	mov	x29, sp
  45fde0:	stp	x19, x20, [sp, #16]
  45fde4:	mov	x19, x0
  45fde8:	mov	x0, x1
  45fdec:	mov	x20, x1
  45fdf0:	ldr	x3, [x19]
  45fdf4:	ldr	x1, [x0], #16
  45fdf8:	ldr	x2, [x20, #8]
  45fdfc:	cmp	x1, x0
  45fe00:	b.eq	45fe6c <_obstack_memory_used@@Base+0xbacc>  // b.none
  45fe04:	stp	x1, x2, [x19]
  45fe08:	add	x4, x19, #0x10
  45fe0c:	cmp	x3, x4
  45fe10:	b.eq	45fe44 <_obstack_memory_used@@Base+0xbaa4>  // b.none
  45fe14:	ldr	x2, [x20, #16]
  45fe18:	ldr	x1, [x19, #16]
  45fe1c:	str	x2, [x19, #16]
  45fe20:	cbz	x3, 45fe4c <_obstack_memory_used@@Base+0xbaac>
  45fe24:	str	x3, [x20]
  45fe28:	mov	x0, x19
  45fe2c:	str	xzr, [x20, #8]
  45fe30:	str	x1, [x20, #16]
  45fe34:	strb	wzr, [x3]
  45fe38:	ldp	x19, x20, [sp, #16]
  45fe3c:	ldp	x29, x30, [sp], #32
  45fe40:	ret
  45fe44:	ldr	x1, [x20, #16]
  45fe48:	str	x1, [x19, #16]
  45fe4c:	mov	x3, x0
  45fe50:	str	x0, [x20]
  45fe54:	str	xzr, [x20, #8]
  45fe58:	mov	x0, x19
  45fe5c:	strb	wzr, [x3]
  45fe60:	ldp	x19, x20, [sp, #16]
  45fe64:	ldp	x29, x30, [sp], #32
  45fe68:	ret
  45fe6c:	cbz	x2, 45fe88 <_obstack_memory_used@@Base+0xbae8>
  45fe70:	cmp	x2, #0x1
  45fe74:	b.eq	45feac <_obstack_memory_used@@Base+0xbb0c>  // b.none
  45fe78:	mov	x0, x3
  45fe7c:	bl	402620 <memcpy@plt>
  45fe80:	ldr	x3, [x19]
  45fe84:	ldr	x2, [x20, #8]
  45fe88:	str	x2, [x19, #8]
  45fe8c:	strb	wzr, [x3, x2]
  45fe90:	mov	x0, x19
  45fe94:	str	xzr, [x20, #8]
  45fe98:	ldr	x3, [x20]
  45fe9c:	strb	wzr, [x3]
  45fea0:	ldp	x19, x20, [sp, #16]
  45fea4:	ldp	x29, x30, [sp], #32
  45fea8:	ret
  45feac:	ldrb	w0, [x20, #16]
  45feb0:	strb	w0, [x3]
  45feb4:	ldr	x3, [x19]
  45feb8:	ldr	x2, [x20, #8]
  45febc:	b	45fe88 <_obstack_memory_used@@Base+0xbae8>
  45fec0:	stp	x29, x30, [sp, #-32]!
  45fec4:	mov	x29, sp
  45fec8:	str	x19, [sp, #16]
  45fecc:	cbz	x0, 45fef8 <_obstack_memory_used@@Base+0xbb58>
  45fed0:	mov	x19, x0
  45fed4:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  45fed8:	mov	x1, #0xd500                	// #54528
  45fedc:	movk	x1, #0xbcd4, lsl #16
  45fee0:	ldr	x0, [x19]
  45fee4:	movk	x1, #0xaabc, lsl #32
  45fee8:	movk	x1, #0xb8b1, lsl #48
  45feec:	add	x0, x0, x1
  45fef0:	cmp	x0, #0x1
  45fef4:	b.ls	45fefc <_obstack_memory_used@@Base+0xbb5c>  // b.plast
  45fef8:	bl	45ac00 <_obstack_memory_used@@Base+0x6860>
  45fefc:	ldur	x0, [x19, #-56]
  45ff00:	bl	45abb8 <_obstack_memory_used@@Base+0x6818>
  45ff04:	nop
  45ff08:	stp	x29, x30, [sp, #-64]!
  45ff0c:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  45ff10:	mov	x29, sp
  45ff14:	ldrb	w1, [x0, #2904]
  45ff18:	cbnz	w1, 460000 <_obstack_memory_used@@Base+0xbc60>
  45ff1c:	mov	w1, #0x1                   	// #1
  45ff20:	strb	w1, [x0, #2904]
  45ff24:	bl	46a040 <_obstack_memory_used@@Base+0x15ca0>
  45ff28:	cbz	x0, 45ffd4 <_obstack_memory_used@@Base+0xbc34>
  45ff2c:	stp	x19, x20, [sp, #16]
  45ff30:	mov	w4, #0xffffffff            	// #-1
  45ff34:	add	x3, sp, #0x3c
  45ff38:	ldr	x19, [x0, #8]
  45ff3c:	stp	x21, x22, [sp, #32]
  45ff40:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ff44:	mov	x2, #0x0                   	// #0
  45ff48:	mov	x1, #0x0                   	// #0
  45ff4c:	ldrb	w0, [x19]
  45ff50:	str	w4, [sp, #60]
  45ff54:	cmp	w0, #0x2a
  45ff58:	cinc	x19, x19, eq  // eq = none
  45ff5c:	mov	x0, x19
  45ff60:	bl	469e78 <_obstack_memory_used@@Base+0x15ad8>
  45ff64:	mov	x20, x0
  45ff68:	ldr	x22, [x21, #3680]
  45ff6c:	mov	x1, #0x1                   	// #1
  45ff70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ff74:	mov	x2, #0x30                  	// #48
  45ff78:	add	x0, x0, #0x908
  45ff7c:	ldr	x3, [x22]
  45ff80:	bl	402ae0 <fwrite@plt>
  45ff84:	ldr	w0, [sp, #60]
  45ff88:	ldr	x1, [x22]
  45ff8c:	cbz	w0, 45ffc8 <_obstack_memory_used@@Base+0xbc28>
  45ff90:	mov	x0, x19
  45ff94:	bl	402690 <fputs@plt>
  45ff98:	ldr	x3, [x21, #3680]
  45ff9c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ffa0:	mov	x2, #0x2                   	// #2
  45ffa4:	add	x0, x0, #0x940
  45ffa8:	mov	x1, #0x1                   	// #1
  45ffac:	ldr	x3, [x3]
  45ffb0:	bl	402ae0 <fwrite@plt>
  45ffb4:	ldr	w0, [sp, #60]
  45ffb8:	cbnz	w0, 45ffc4 <_obstack_memory_used@@Base+0xbc24>
  45ffbc:	mov	x0, x20
  45ffc0:	bl	402a90 <free@plt>
  45ffc4:	bl	45ad88 <_obstack_memory_used@@Base+0x69e8>
  45ffc8:	mov	x0, x20
  45ffcc:	bl	402690 <fputs@plt>
  45ffd0:	b	45ff98 <_obstack_memory_used@@Base+0xbbf8>
  45ffd4:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  45ffd8:	mov	x2, #0x2d                  	// #45
  45ffdc:	mov	x1, #0x1                   	// #1
  45ffe0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  45ffe4:	ldr	x3, [x3, #3680]
  45ffe8:	add	x0, x0, #0x948
  45ffec:	ldr	x3, [x3]
  45fff0:	bl	402ae0 <fwrite@plt>
  45fff4:	stp	x19, x20, [sp, #16]
  45fff8:	stp	x21, x22, [sp, #32]
  45fffc:	bl	402990 <abort@plt>
  460000:	adrp	x3, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  460004:	mov	x2, #0x1d                  	// #29
  460008:	mov	x1, #0x1                   	// #1
  46000c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  460010:	ldr	x3, [x3, #3680]
  460014:	add	x0, x0, #0x8e8
  460018:	stp	x19, x20, [sp, #16]
  46001c:	ldr	x3, [x3]
  460020:	stp	x21, x22, [sp, #32]
  460024:	bl	402ae0 <fwrite@plt>
  460028:	bl	402990 <abort@plt>
  46002c:	mov	x19, x1
  460030:	cmp	x1, #0x1
  460034:	b.ne	460090 <_obstack_memory_used@@Base+0xbcf0>  // b.any
  460038:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  46003c:	ldr	x1, [x0]
  460040:	ldr	x1, [x1, #16]
  460044:	blr	x1
  460048:	mov	x20, x0
  46004c:	ldr	x3, [x21, #3680]
  460050:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  460054:	mov	x1, x19
  460058:	add	x0, x0, #0x978
  46005c:	mov	x2, #0xb                   	// #11
  460060:	ldr	x3, [x3]
  460064:	bl	402ae0 <fwrite@plt>
  460068:	ldr	x1, [x21, #3680]
  46006c:	mov	x0, x20
  460070:	ldr	x1, [x1]
  460074:	bl	402690 <fputs@plt>
  460078:	ldr	x21, [x21, #3680]
  46007c:	mov	w0, #0xa                   	// #10
  460080:	ldr	x1, [x21]
  460084:	bl	402750 <fputc@plt>
  460088:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  46008c:	bl	402990 <abort@plt>
  460090:	bl	459e88 <_obstack_memory_used@@Base+0x5ae8>
  460094:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  460098:	bl	402990 <abort@plt>
  46009c:	mov	x19, x0
  4600a0:	bl	459f28 <_obstack_memory_used@@Base+0x5b88>
  4600a4:	mov	x0, x19
  4600a8:	bl	46c6b8 <_obstack_memory_used@@Base+0x18318>
  4600ac:	nop
  4600b0:	sub	w5, w1, #0x1
  4600b4:	mov	x4, x0
  4600b8:	cmp	w5, #0x4f
  4600bc:	b.ls	4600c8 <_obstack_memory_used@@Base+0xbd28>  // b.plast
  4600c0:	mov	x0, #0x0                   	// #0
  4600c4:	ret
  4600c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4600cc:	add	x0, x0, #0x984
  4600d0:	ldrb	w0, [x0, w5, uxtw]
  4600d4:	adr	x5, 4600e0 <_obstack_memory_used@@Base+0xbd40>
  4600d8:	add	x0, x5, w0, sxtb #2
  4600dc:	br	x0
  4600e0:	cbz	x3, 4600c0 <_obstack_memory_used@@Base+0xbd20>
  4600e4:	ldp	w0, w5, [x4, #40]
  4600e8:	cmp	w0, w5
  4600ec:	b.ge	4600c0 <_obstack_memory_used@@Base+0xbd20>  // b.tcont
  4600f0:	mov	w5, #0x18                  	// #24
  4600f4:	add	w7, w0, #0x1
  4600f8:	ldr	x6, [x4, #32]
  4600fc:	smull	x5, w0, w5
  460100:	add	x0, x6, x5
  460104:	str	wzr, [x0, #4]
  460108:	str	w7, [x4, #40]
  46010c:	str	w1, [x6, x5]
  460110:	stp	x2, x3, [x0, #8]
  460114:	ret
  460118:	cbnz	x2, 4600e4 <_obstack_memory_used@@Base+0xbd44>
  46011c:	mov	x0, #0x0                   	// #0
  460120:	b	4600c4 <_obstack_memory_used@@Base+0xbd24>
  460124:	cmp	x2, #0x0
  460128:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  46012c:	b.ne	4600e4 <_obstack_memory_used@@Base+0xbd44>  // b.any
  460130:	mov	x0, #0x0                   	// #0
  460134:	b	4600c4 <_obstack_memory_used@@Base+0xbd24>
  460138:	ldr	x3, [x0, #24]
  46013c:	mov	x2, x1
  460140:	mov	w4, #0x4f                  	// #79
  460144:	ldrb	w1, [x3]
  460148:	cmp	w1, #0x52
  46014c:	ccmp	w1, w4, #0x4, ne  // ne = any
  460150:	b.ne	46017c <_obstack_memory_used@@Base+0xbddc>  // b.any
  460154:	ldr	w5, [x0, #72]
  460158:	cmp	w1, #0x52
  46015c:	mov	w1, #0x20                  	// #32
  460160:	add	w4, w5, #0x3
  460164:	b.eq	460184 <_obstack_memory_used@@Base+0xbde4>  // b.none
  460168:	add	x3, x3, #0x1
  46016c:	str	x3, [x0, #24]
  460170:	str	w4, [x0, #72]
  460174:	mov	x3, #0x0                   	// #0
  460178:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46017c:	mov	x0, x2
  460180:	ret
  460184:	add	w4, w5, #0x2
  460188:	add	x3, x3, #0x1
  46018c:	str	x3, [x0, #24]
  460190:	mov	w1, #0x1f                  	// #31
  460194:	str	w4, [x0, #72]
  460198:	mov	x3, #0x0                   	// #0
  46019c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4601a0:	cbz	x1, 460280 <_obstack_memory_used@@Base+0xbee0>
  4601a4:	stp	x29, x30, [sp, #-32]!
  4601a8:	mov	x29, sp
  4601ac:	stp	x19, x20, [sp, #16]
  4601b0:	mov	x20, x0
  4601b4:	mov	x19, x1
  4601b8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4601bc:	add	x0, x0, #0x9d4
  4601c0:	ldr	w1, [x19]
  4601c4:	sub	w1, w1, #0x1
  4601c8:	cmp	w1, #0x4f
  4601cc:	b.ls	4601dc <_obstack_memory_used@@Base+0xbe3c>  // b.plast
  4601d0:	ldp	x19, x20, [sp, #16]
  4601d4:	ldp	x29, x30, [sp], #32
  4601d8:	ret
  4601dc:	ldrb	w1, [x0, w1, uxtw]
  4601e0:	adr	x2, 4601ec <_obstack_memory_used@@Base+0xbe4c>
  4601e4:	add	x1, x2, w1, sxtb #2
  4601e8:	br	x1
  4601ec:	ldr	x0, [x19, #8]
  4601f0:	ldr	w0, [x0]
  4601f4:	cmp	w0, #0x5
  4601f8:	b.ne	460208 <_obstack_memory_used@@Base+0xbe68>  // b.any
  4601fc:	ldr	w0, [x20, #348]
  460200:	add	w0, w0, #0x1
  460204:	str	w0, [x20, #348]
  460208:	ldr	w0, [x20, #308]
  46020c:	cmp	w0, #0x800
  460210:	b.gt	4601d0 <_obstack_memory_used@@Base+0xbe30>
  460214:	ldr	x1, [x19, #8]
  460218:	add	w0, w0, #0x1
  46021c:	str	w0, [x20, #308]
  460220:	mov	x0, x20
  460224:	bl	4601a0 <_obstack_memory_used@@Base+0xbe00>
  460228:	ldr	x1, [x19, #16]
  46022c:	mov	x0, x20
  460230:	bl	4601a0 <_obstack_memory_used@@Base+0xbe00>
  460234:	ldr	w0, [x20, #308]
  460238:	sub	w0, w0, #0x1
  46023c:	str	w0, [x20, #308]
  460240:	ldp	x19, x20, [sp, #16]
  460244:	ldp	x29, x30, [sp], #32
  460248:	ret
  46024c:	ldr	x19, [x19, #8]
  460250:	cbnz	x19, 4601c0 <_obstack_memory_used@@Base+0xbe20>
  460254:	b	4601d0 <_obstack_memory_used@@Base+0xbe30>
  460258:	ldr	x19, [x19, #16]
  46025c:	cbnz	x19, 4601c0 <_obstack_memory_used@@Base+0xbe20>
  460260:	b	4601d0 <_obstack_memory_used@@Base+0xbe30>
  460264:	ldr	w0, [x20, #364]
  460268:	add	w0, w0, #0x1
  46026c:	str	w0, [x20, #364]
  460270:	ldr	w0, [x20, #308]
  460274:	cmp	w0, #0x800
  460278:	b.gt	4601d0 <_obstack_memory_used@@Base+0xbe30>
  46027c:	b	460214 <_obstack_memory_used@@Base+0xbe74>
  460280:	ret
  460284:	nop
  460288:	cbz	x2, 460328 <_obstack_memory_used@@Base+0xbf88>
  46028c:	stp	x29, x30, [sp, #-48]!
  460290:	mov	x29, sp
  460294:	stp	x19, x20, [sp, #16]
  460298:	mov	x20, x1
  46029c:	mov	x19, x0
  4602a0:	stp	x21, x22, [sp, #32]
  4602a4:	add	x22, x1, x2
  4602a8:	ldr	x1, [x0, #256]
  4602ac:	b	4602d0 <_obstack_memory_used@@Base+0xbf30>
  4602b0:	mov	x0, x1
  4602b4:	add	x1, x1, #0x1
  4602b8:	str	x1, [x19, #256]
  4602bc:	add	x20, x20, #0x1
  4602c0:	cmp	x20, x22
  4602c4:	strb	w21, [x19, x0]
  4602c8:	strb	w21, [x19, #264]
  4602cc:	b.eq	460318 <_obstack_memory_used@@Base+0xbf78>  // b.none
  4602d0:	ldrb	w21, [x20]
  4602d4:	cmp	x1, #0xff
  4602d8:	b.ne	4602b0 <_obstack_memory_used@@Base+0xbf10>  // b.any
  4602dc:	ldp	x3, x2, [x19, #272]
  4602e0:	strb	wzr, [x19, #255]
  4602e4:	mov	x0, x19
  4602e8:	add	x20, x20, #0x1
  4602ec:	blr	x3
  4602f0:	ldr	x2, [x19, #320]
  4602f4:	mov	x0, #0x0                   	// #0
  4602f8:	mov	x1, #0x1                   	// #1
  4602fc:	str	x1, [x19, #256]
  460300:	add	x2, x2, x1
  460304:	str	x2, [x19, #320]
  460308:	strb	w21, [x19, x0]
  46030c:	cmp	x20, x22
  460310:	strb	w21, [x19, #264]
  460314:	b.ne	4602d0 <_obstack_memory_used@@Base+0xbf30>  // b.any
  460318:	ldp	x19, x20, [sp, #16]
  46031c:	ldp	x21, x22, [sp, #32]
  460320:	ldp	x29, x30, [sp], #48
  460324:	ret
  460328:	ret
  46032c:	nop
  460330:	ldr	x3, [x0]
  460334:	mov	x6, x0
  460338:	ldrb	w4, [x3]
  46033c:	cmp	w4, #0x6e
  460340:	b.eq	4603cc <_obstack_memory_used@@Base+0xc02c>  // b.none
  460344:	sub	w0, w4, #0x30
  460348:	and	w0, w0, #0xff
  46034c:	cmp	w0, #0x9
  460350:	b.hi	4603f4 <_obstack_memory_used@@Base+0xc054>  // b.pmore
  460354:	mov	w9, #0x0                   	// #0
  460358:	mov	w8, #0xcccd                	// #52429
  46035c:	add	x3, x3, #0x1
  460360:	mov	w0, #0x0                   	// #0
  460364:	mov	w7, #0x7fffffff            	// #2147483647
  460368:	movk	w8, #0xcccc, lsl #16
  46036c:	b	460380 <_obstack_memory_used@@Base+0xbfe0>
  460370:	umull	x1, w1, w8
  460374:	lsr	x1, x1, #35
  460378:	cmp	w1, w0
  46037c:	b.lt	4603c4 <_obstack_memory_used@@Base+0xc024>  // b.tstop
  460380:	str	x3, [x6]
  460384:	add	w0, w0, w0, lsl #2
  460388:	add	x3, x3, #0x1
  46038c:	ldurb	w1, [x3, #-1]
  460390:	add	w5, w4, w0, lsl #1
  460394:	sub	w0, w5, #0x30
  460398:	sub	w2, w1, #0x30
  46039c:	mov	w4, w1
  4603a0:	sub	w1, w7, w2
  4603a4:	and	w2, w2, #0xff
  4603a8:	cmp	w2, #0x9
  4603ac:	b.ls	460370 <_obstack_memory_used@@Base+0xbfd0>  // b.plast
  4603b0:	cmp	w9, #0x0
  4603b4:	mov	w1, #0x30                  	// #48
  4603b8:	sub	w5, w1, w5
  4603bc:	csel	w0, w5, w0, ne  // ne = any
  4603c0:	ret
  4603c4:	mov	w0, #0xffffffff            	// #-1
  4603c8:	ret
  4603cc:	add	x1, x3, #0x1
  4603d0:	str	x1, [x0]
  4603d4:	ldrb	w4, [x3, #1]
  4603d8:	sub	w0, w4, #0x30
  4603dc:	and	w0, w0, #0xff
  4603e0:	cmp	w0, #0x9
  4603e4:	b.hi	4603f4 <_obstack_memory_used@@Base+0xc054>  // b.pmore
  4603e8:	mov	x3, x1
  4603ec:	mov	w9, #0x1                   	// #1
  4603f0:	b	460358 <_obstack_memory_used@@Base+0xbfb8>
  4603f4:	mov	w0, #0x0                   	// #0
  4603f8:	ret
  4603fc:	nop
  460400:	mov	x1, x0
  460404:	ldr	w0, [x0, #40]
  460408:	ldr	w2, [x1, #44]
  46040c:	cmp	w0, w2
  460410:	b.ge	46045c <_obstack_memory_used@@Base+0xc0bc>  // b.tcont
  460414:	stp	x29, x30, [sp, #-16]!
  460418:	mov	w2, #0x18                  	// #24
  46041c:	add	w5, w0, #0x1
  460420:	mov	x29, sp
  460424:	ldr	x3, [x1, #32]
  460428:	smull	x2, w0, w2
  46042c:	mov	w4, #0x42                  	// #66
  460430:	add	x0, x1, #0x18
  460434:	add	x10, x3, x2
  460438:	str	wzr, [x10, #4]
  46043c:	str	w5, [x1, #40]
  460440:	str	w4, [x3, x2]
  460444:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460448:	sxtw	x0, w0
  46044c:	str	x0, [x10, #8]
  460450:	mov	x0, x10
  460454:	ldp	x29, x30, [sp], #16
  460458:	ret
  46045c:	mov	x10, #0x0                   	// #0
  460460:	mov	x0, x10
  460464:	ret
  460468:	ldr	x1, [x0, #24]
  46046c:	mov	x10, x0
  460470:	ldrb	w0, [x1]
  460474:	cmp	w0, #0x5f
  460478:	b.eq	4604bc <_obstack_memory_used@@Base+0xc11c>  // b.none
  46047c:	cmp	w0, #0x6e
  460480:	b.eq	4604d4 <_obstack_memory_used@@Base+0xc134>  // b.none
  460484:	stp	x29, x30, [sp, #-16]!
  460488:	add	x0, x10, #0x18
  46048c:	mov	x29, sp
  460490:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460494:	adds	w0, w0, #0x1
  460498:	b.mi	4604cc <_obstack_memory_used@@Base+0xc12c>  // b.first
  46049c:	ldr	x1, [x10, #24]
  4604a0:	ldrb	w2, [x1]
  4604a4:	cmp	w2, #0x5f
  4604a8:	b.ne	4604cc <_obstack_memory_used@@Base+0xc12c>  // b.any
  4604ac:	add	x1, x1, #0x1
  4604b0:	str	x1, [x10, #24]
  4604b4:	ldp	x29, x30, [sp], #16
  4604b8:	ret
  4604bc:	add	x1, x1, #0x1
  4604c0:	mov	w0, #0x0                   	// #0
  4604c4:	str	x1, [x10, #24]
  4604c8:	ret
  4604cc:	mov	w0, #0xffffffff            	// #-1
  4604d0:	b	4604b4 <_obstack_memory_used@@Base+0xc114>
  4604d4:	mov	w0, #0xffffffff            	// #-1
  4604d8:	ret
  4604dc:	nop
  4604e0:	ldr	x1, [x0, #24]
  4604e4:	ldrb	w2, [x1]
  4604e8:	cmp	w2, #0x54
  4604ec:	b.ne	460558 <_obstack_memory_used@@Base+0xc1b8>  // b.any
  4604f0:	stp	x29, x30, [sp, #-16]!
  4604f4:	add	x1, x1, #0x1
  4604f8:	mov	x11, x0
  4604fc:	mov	x29, sp
  460500:	str	x1, [x0, #24]
  460504:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  460508:	tbnz	w0, #31, 46054c <_obstack_memory_used@@Base+0xc1ac>
  46050c:	ldp	w1, w2, [x11, #40]
  460510:	cmp	w1, w2
  460514:	b.ge	46054c <_obstack_memory_used@@Base+0xc1ac>  // b.tcont
  460518:	mov	w2, #0x18                  	// #24
  46051c:	add	w5, w1, #0x1
  460520:	ldr	x3, [x11, #32]
  460524:	smull	x2, w1, w2
  460528:	sxtw	x1, w0
  46052c:	mov	w4, #0x5                   	// #5
  460530:	add	x0, x3, x2
  460534:	str	wzr, [x0, #4]
  460538:	str	w5, [x11, #40]
  46053c:	str	w4, [x3, x2]
  460540:	str	x1, [x0, #8]
  460544:	ldp	x29, x30, [sp], #16
  460548:	ret
  46054c:	mov	x0, #0x0                   	// #0
  460550:	ldp	x29, x30, [sp], #16
  460554:	ret
  460558:	mov	x0, #0x0                   	// #0
  46055c:	ret
  460560:	mov	x10, x0
  460564:	stp	x29, x30, [sp, #-16]!
  460568:	add	x0, x0, #0x18
  46056c:	mov	x29, sp
  460570:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460574:	cmp	w0, #0x0
  460578:	b.le	460670 <_obstack_memory_used@@Base+0xc2d0>
  46057c:	mov	w1, w0
  460580:	sxtw	x3, w0
  460584:	ldr	x0, [x10, #8]
  460588:	ldr	x2, [x10, #24]
  46058c:	sub	x0, x0, x2
  460590:	cmp	x0, w1, sxtw
  460594:	b.lt	460668 <_obstack_memory_used@@Base+0xc2c8>  // b.tstop
  460598:	ldr	w0, [x10, #16]
  46059c:	add	x3, x2, x3
  4605a0:	str	x3, [x10, #24]
  4605a4:	tbz	w0, #2, 4605b4 <_obstack_memory_used@@Base+0xc214>
  4605a8:	ldrb	w0, [x2, w1, sxtw]
  4605ac:	cmp	w0, #0x24
  4605b0:	b.eq	46067c <_obstack_memory_used@@Base+0xc2dc>  // b.none
  4605b4:	ldp	w0, w3, [x10, #40]
  4605b8:	cmp	w1, #0x9
  4605bc:	b.gt	4605f8 <_obstack_memory_used@@Base+0xc258>
  4605c0:	cmp	w3, w0
  4605c4:	b.le	460668 <_obstack_memory_used@@Base+0xc2c8>
  4605c8:	ldr	x4, [x10, #32]
  4605cc:	mov	w5, #0x18                  	// #24
  4605d0:	add	w3, w0, #0x1
  4605d4:	smaddl	x0, w0, w5, x4
  4605d8:	str	wzr, [x0, #4]
  4605dc:	str	w3, [x10, #40]
  4605e0:	cbz	x2, 460668 <_obstack_memory_used@@Base+0xc2c8>
  4605e4:	stp	xzr, x2, [x0]
  4605e8:	str	w1, [x0, #16]
  4605ec:	str	x0, [x10, #64]
  4605f0:	ldp	x29, x30, [sp], #16
  4605f4:	ret
  4605f8:	mov	x4, #0x475f                	// #18271
  4605fc:	ldr	x5, [x2]
  460600:	movk	x4, #0x4f4c, lsl #16
  460604:	movk	x4, #0x4142, lsl #32
  460608:	movk	x4, #0x5f4c, lsl #48
  46060c:	cmp	x5, x4
  460610:	b.ne	46063c <_obstack_memory_used@@Base+0xc29c>  // b.any
  460614:	ldrb	w4, [x2, #8]
  460618:	mov	w6, #0x5f                  	// #95
  46061c:	mov	w5, #0x24                  	// #36
  460620:	cmp	w4, #0x2e
  460624:	ccmp	w4, w6, #0x4, ne  // ne = any
  460628:	ccmp	w4, w5, #0x4, ne  // ne = any
  46062c:	b.ne	46063c <_obstack_memory_used@@Base+0xc29c>  // b.any
  460630:	ldrb	w4, [x2, #9]
  460634:	cmp	w4, #0x4e
  460638:	b.eq	460694 <_obstack_memory_used@@Base+0xc2f4>  // b.none
  46063c:	cmp	w3, w0
  460640:	b.le	460668 <_obstack_memory_used@@Base+0xc2c8>
  460644:	ldr	x4, [x10, #32]
  460648:	mov	w5, #0x18                  	// #24
  46064c:	add	w3, w0, #0x1
  460650:	smaddl	x0, w0, w5, x4
  460654:	str	wzr, [x0, #4]
  460658:	str	w3, [x10, #40]
  46065c:	stp	xzr, x2, [x0]
  460660:	str	w1, [x0, #16]
  460664:	b	4605ec <_obstack_memory_used@@Base+0xc24c>
  460668:	mov	x0, #0x0                   	// #0
  46066c:	b	4605ec <_obstack_memory_used@@Base+0xc24c>
  460670:	mov	x0, #0x0                   	// #0
  460674:	ldp	x29, x30, [sp], #16
  460678:	ret
  46067c:	add	x3, x3, #0x1
  460680:	str	x3, [x10, #24]
  460684:	cmp	w1, #0x9
  460688:	ldp	w0, w3, [x10, #40]
  46068c:	b.le	4605c0 <_obstack_memory_used@@Base+0xc220>
  460690:	b	4605f8 <_obstack_memory_used@@Base+0xc258>
  460694:	ldr	w2, [x10, #72]
  460698:	cmp	w3, w0
  46069c:	add	w2, w2, #0x16
  4606a0:	sub	w1, w2, w1
  4606a4:	str	w1, [x10, #72]
  4606a8:	b.le	460668 <_obstack_memory_used@@Base+0xc2c8>
  4606ac:	mov	w1, #0x18                  	// #24
  4606b0:	add	w2, w0, #0x1
  4606b4:	ldr	x3, [x10, #32]
  4606b8:	smull	x1, w0, w1
  4606bc:	str	w2, [x10, #40]
  4606c0:	mov	w4, #0x15                  	// #21
  4606c4:	add	x0, x3, x1
  4606c8:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4606cc:	add	x2, x2, #0x88
  4606d0:	str	xzr, [x3, x1]
  4606d4:	str	x2, [x0, #8]
  4606d8:	str	w4, [x0, #16]
  4606dc:	b	4605ec <_obstack_memory_used@@Base+0xc24c>
  4606e0:	ldr	x3, [x0, #24]
  4606e4:	mov	x11, x0
  4606e8:	ldr	x13, [x0, #64]
  4606ec:	mov	x12, x1
  4606f0:	ldrb	w0, [x3]
  4606f4:	cmp	w0, #0x42
  4606f8:	b.ne	460750 <_obstack_memory_used@@Base+0xc3b0>  // b.any
  4606fc:	stp	x29, x30, [sp, #-16]!
  460700:	mov	x29, sp
  460704:	nop
  460708:	add	x3, x3, #0x1
  46070c:	str	x3, [x11, #24]
  460710:	mov	x0, x11
  460714:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  460718:	mov	x3, x0
  46071c:	mov	x2, x12
  460720:	mov	x0, x11
  460724:	mov	w1, #0x4c                  	// #76
  460728:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46072c:	ldr	x3, [x11, #24]
  460730:	mov	x12, x0
  460734:	ldrb	w0, [x3]
  460738:	cmp	w0, #0x42
  46073c:	b.eq	460708 <_obstack_memory_used@@Base+0xc368>  // b.none
  460740:	str	x13, [x11, #64]
  460744:	mov	x0, x12
  460748:	ldp	x29, x30, [sp], #16
  46074c:	ret
  460750:	mov	x0, x1
  460754:	str	x13, [x11, #64]
  460758:	ret
  46075c:	nop
  460760:	mov	x14, x0
  460764:	ldr	x0, [x0, #24]
  460768:	ldrb	w2, [x0]
  46076c:	cmp	w2, #0x53
  460770:	b.ne	4607e0 <_obstack_memory_used@@Base+0xc440>  // b.any
  460774:	add	x2, x0, #0x1
  460778:	str	x2, [x14, #24]
  46077c:	ldrb	w2, [x0, #1]
  460780:	cbnz	w2, 4607e8 <_obstack_memory_used@@Base+0xc448>
  460784:	ldr	w0, [x14, #16]
  460788:	and	w1, w1, #0x1
  46078c:	ands	w3, w0, #0x8
  460790:	ubfx	x4, x0, #3, #1
  460794:	csel	w1, w1, wzr, eq  // eq = none
  460798:	cbz	w1, 4607b4 <_obstack_memory_used@@Base+0xc414>
  46079c:	ldr	x0, [x14, #24]
  4607a0:	ldrb	w0, [x0]
  4607a4:	sub	w0, w0, #0x43
  4607a8:	and	w0, w0, #0xff
  4607ac:	cmp	w0, #0x1
  4607b0:	csinc	w4, w4, wzr, hi  // hi = pmore
  4607b4:	adrp	x0, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  4607b8:	add	x0, x0, #0xa08
  4607bc:	add	x3, x0, #0x188
  4607c0:	mov	w1, #0x74                  	// #116
  4607c4:	b	4607cc <_obstack_memory_used@@Base+0xc42c>
  4607c8:	ldrb	w1, [x0]
  4607cc:	cmp	w1, w2
  4607d0:	b.eq	4608bc <_obstack_memory_used@@Base+0xc51c>  // b.none
  4607d4:	add	x0, x0, #0x38
  4607d8:	cmp	x0, x3
  4607dc:	b.ne	4607c8 <_obstack_memory_used@@Base+0xc428>  // b.any
  4607e0:	mov	x0, #0x0                   	// #0
  4607e4:	ret
  4607e8:	add	x2, x0, #0x2
  4607ec:	str	x2, [x14, #24]
  4607f0:	ldrb	w2, [x0, #1]
  4607f4:	sub	w5, w2, #0x30
  4607f8:	cmp	w2, #0x5f
  4607fc:	and	w0, w5, #0xff
  460800:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  460804:	b.hi	46082c <_obstack_memory_used@@Base+0xc48c>  // b.pmore
  460808:	cmp	w2, #0x5f
  46080c:	mov	w1, #0x0                   	// #0
  460810:	b.ne	460840 <_obstack_memory_used@@Base+0xc4a0>  // b.any
  460814:	ldr	w0, [x14, #56]
  460818:	cmp	w0, w1
  46081c:	b.ls	4607e0 <_obstack_memory_used@@Base+0xc440>  // b.plast
  460820:	ldr	x0, [x14, #48]
  460824:	ldr	x0, [x0, w1, uxtw #3]
  460828:	ret
  46082c:	sub	w0, w2, #0x41
  460830:	and	w0, w0, #0xff
  460834:	cmp	w0, #0x19
  460838:	b.hi	460784 <_obstack_memory_used@@Base+0xc3e4>  // b.pmore
  46083c:	nop
  460840:	mov	w3, #0x0                   	// #0
  460844:	nop
  460848:	add	w1, w3, w3, lsl #3
  46084c:	sub	w6, w2, #0x41
  460850:	mov	w4, w1
  460854:	and	w5, w5, #0xff
  460858:	add	w1, w2, w1, lsl #2
  46085c:	and	w6, w6, #0xff
  460860:	sub	w1, w1, #0x37
  460864:	add	w2, w2, w4, lsl #2
  460868:	cmp	w5, #0x9
  46086c:	b.hi	4608b0 <_obstack_memory_used@@Base+0xc510>  // b.pmore
  460870:	sub	w1, w2, #0x30
  460874:	cmp	w3, w1
  460878:	b.hi	4607e0 <_obstack_memory_used@@Base+0xc440>  // b.pmore
  46087c:	ldr	x4, [x14, #24]
  460880:	mov	w3, w1
  460884:	add	x0, x4, #0x1
  460888:	ldrb	w2, [x4]
  46088c:	cbz	w2, 4608a0 <_obstack_memory_used@@Base+0xc500>
  460890:	str	x0, [x14, #24]
  460894:	ldrb	w2, [x4]
  460898:	cmp	w2, #0x5f
  46089c:	b.eq	4608a8 <_obstack_memory_used@@Base+0xc508>  // b.none
  4608a0:	sub	w5, w2, #0x30
  4608a4:	b	460848 <_obstack_memory_used@@Base+0xc4a8>
  4608a8:	add	w1, w1, #0x1
  4608ac:	b	460814 <_obstack_memory_used@@Base+0xc474>
  4608b0:	cmp	w6, #0x19
  4608b4:	b.ls	460874 <_obstack_memory_used@@Base+0xc4d4>  // b.plast
  4608b8:	b	4607e0 <_obstack_memory_used@@Base+0xc440>
  4608bc:	ldr	x5, [x0, #40]
  4608c0:	ldp	w1, w3, [x14, #40]
  4608c4:	cbz	x5, 460900 <_obstack_memory_used@@Base+0xc560>
  4608c8:	ldr	w9, [x0, #48]
  4608cc:	cmp	w3, w1
  4608d0:	b.le	4609b8 <_obstack_memory_used@@Base+0xc618>
  4608d4:	mov	w8, #0x18                  	// #24
  4608d8:	ldr	x7, [x14, #32]
  4608dc:	smull	x6, w1, w8
  4608e0:	add	w1, w1, #0x1
  4608e4:	add	x2, x7, x6
  4608e8:	str	wzr, [x2, #4]
  4608ec:	str	w1, [x14, #40]
  4608f0:	str	w8, [x7, x6]
  4608f4:	str	x5, [x2, #8]
  4608f8:	str	w9, [x2, #16]
  4608fc:	str	x2, [x14, #64]
  460900:	cbz	w4, 46095c <_obstack_memory_used@@Base+0xc5bc>
  460904:	ldr	w2, [x0, #32]
  460908:	ldr	x5, [x0, #24]
  46090c:	cmp	w1, w3
  460910:	ldr	w0, [x14, #72]
  460914:	add	w0, w0, w2
  460918:	str	w0, [x14, #72]
  46091c:	b.ge	4609b0 <_obstack_memory_used@@Base+0xc610>  // b.tcont
  460920:	mov	w4, #0x18                  	// #24
  460924:	add	w6, w1, #0x1
  460928:	ldr	x3, [x14, #32]
  46092c:	smull	x1, w1, w4
  460930:	add	x0, x3, x1
  460934:	str	wzr, [x0, #4]
  460938:	str	w6, [x14, #40]
  46093c:	str	w4, [x3, x1]
  460940:	str	x5, [x0, #8]
  460944:	str	w2, [x0, #16]
  460948:	ldr	x1, [x14, #24]
  46094c:	ldrb	w1, [x1]
  460950:	cmp	w1, #0x42
  460954:	b.eq	460968 <_obstack_memory_used@@Base+0xc5c8>  // b.none
  460958:	ret
  46095c:	ldr	w2, [x0, #16]
  460960:	ldr	x5, [x0, #8]
  460964:	b	46090c <_obstack_memory_used@@Base+0xc56c>
  460968:	stp	x29, x30, [sp, #-16]!
  46096c:	mov	x1, x0
  460970:	mov	x0, x14
  460974:	mov	x29, sp
  460978:	bl	4606e0 <_obstack_memory_used@@Base+0xc340>
  46097c:	cbz	x0, 4609a4 <_obstack_memory_used@@Base+0xc604>
  460980:	ldp	w1, w2, [x14, #56]
  460984:	cmp	w1, w2
  460988:	b.ge	4609a4 <_obstack_memory_used@@Base+0xc604>  // b.tcont
  46098c:	ldr	x3, [x14, #48]
  460990:	add	w2, w1, #0x1
  460994:	str	x0, [x3, w1, sxtw #3]
  460998:	str	w2, [x14, #56]
  46099c:	ldp	x29, x30, [sp], #16
  4609a0:	ret
  4609a4:	mov	x0, #0x0                   	// #0
  4609a8:	ldp	x29, x30, [sp], #16
  4609ac:	ret
  4609b0:	mov	x0, #0x0                   	// #0
  4609b4:	b	460948 <_obstack_memory_used@@Base+0xc5a8>
  4609b8:	mov	x2, #0x0                   	// #0
  4609bc:	str	x2, [x14, #64]
  4609c0:	b	460900 <_obstack_memory_used@@Base+0xc560>
  4609c4:	nop
  4609c8:	mov	x10, x0
  4609cc:	cbnz	w1, 4609e8 <_obstack_memory_used@@Base+0xc648>
  4609d0:	ldr	x0, [x0, #24]
  4609d4:	ldrb	w1, [x0]
  4609d8:	cbz	w1, 460a28 <_obstack_memory_used@@Base+0xc688>
  4609dc:	add	x1, x0, #0x1
  4609e0:	str	x1, [x10, #24]
  4609e4:	ldrb	w1, [x0]
  4609e8:	stp	x29, x30, [sp, #-16]!
  4609ec:	cmp	w1, #0x68
  4609f0:	mov	x29, sp
  4609f4:	b.eq	460a64 <_obstack_memory_used@@Base+0xc6c4>  // b.none
  4609f8:	cmp	w1, #0x76
  4609fc:	b.ne	460a1c <_obstack_memory_used@@Base+0xc67c>  // b.any
  460a00:	add	x11, x10, #0x18
  460a04:	mov	x0, x11
  460a08:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460a0c:	ldr	x0, [x10, #24]
  460a10:	ldrb	w1, [x0]
  460a14:	cmp	w1, #0x5f
  460a18:	b.eq	460a30 <_obstack_memory_used@@Base+0xc690>  // b.none
  460a1c:	mov	w0, #0x0                   	// #0
  460a20:	ldp	x29, x30, [sp], #16
  460a24:	ret
  460a28:	mov	w0, #0x0                   	// #0
  460a2c:	ret
  460a30:	add	x0, x0, #0x1
  460a34:	str	x0, [x10, #24]
  460a38:	mov	x0, x11
  460a3c:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460a40:	ldr	x0, [x10, #24]
  460a44:	ldrb	w1, [x0]
  460a48:	cmp	w1, #0x5f
  460a4c:	b.ne	460a1c <_obstack_memory_used@@Base+0xc67c>  // b.any
  460a50:	add	x1, x0, #0x1
  460a54:	str	x1, [x10, #24]
  460a58:	mov	w0, #0x1                   	// #1
  460a5c:	ldp	x29, x30, [sp], #16
  460a60:	ret
  460a64:	add	x0, x10, #0x18
  460a68:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460a6c:	b	460a40 <_obstack_memory_used@@Base+0xc6a0>
  460a70:	mov	x2, x0
  460a74:	mov	w3, #0x56                  	// #86
  460a78:	mov	w0, #0x4b                  	// #75
  460a7c:	ldrb	w1, [x2]
  460a80:	cmp	w1, #0x72
  460a84:	ccmp	w1, w3, #0x4, ne  // ne = any
  460a88:	ccmp	w1, w0, #0x4, ne  // ne = any
  460a8c:	mov	w0, #0x1                   	// #1
  460a90:	b.eq	460aa0 <_obstack_memory_used@@Base+0xc700>  // b.none
  460a94:	cmp	w1, #0x44
  460a98:	mov	w0, #0x0                   	// #0
  460a9c:	b.eq	460aa4 <_obstack_memory_used@@Base+0xc704>  // b.none
  460aa0:	ret
  460aa4:	ldrb	w0, [x2, #1]
  460aa8:	and	w1, w0, #0xffffffdf
  460aac:	sub	w0, w0, #0x77
  460ab0:	cmp	w1, #0x4f
  460ab4:	and	w0, w0, #0xff
  460ab8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  460abc:	cset	w0, ls  // ls = plast
  460ac0:	ret
  460ac4:	nop
  460ac8:	ldr	x1, [x0, #24]
  460acc:	mov	x10, x0
  460ad0:	ldrb	w0, [x1]
  460ad4:	cmp	w0, #0x5f
  460ad8:	b.eq	460ae4 <_obstack_memory_used@@Base+0xc744>  // b.none
  460adc:	mov	w0, #0x1                   	// #1
  460ae0:	ret
  460ae4:	stp	x29, x30, [sp, #-16]!
  460ae8:	add	x0, x1, #0x1
  460aec:	mov	x29, sp
  460af0:	str	x0, [x10, #24]
  460af4:	ldrb	w0, [x1, #1]
  460af8:	cmp	w0, #0x5f
  460afc:	b.eq	460b20 <_obstack_memory_used@@Base+0xc780>  // b.none
  460b00:	add	x0, x10, #0x18
  460b04:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460b08:	mov	w1, w0
  460b0c:	mov	w0, #0x0                   	// #0
  460b10:	tbnz	w1, #31, 460b18 <_obstack_memory_used@@Base+0xc778>
  460b14:	mov	w0, #0x1                   	// #1
  460b18:	ldp	x29, x30, [sp], #16
  460b1c:	ret
  460b20:	mov	x0, x10
  460b24:	add	x1, x1, #0x2
  460b28:	str	x1, [x0, #24]!
  460b2c:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  460b30:	tbnz	w0, #31, 460b60 <_obstack_memory_used@@Base+0xc7c0>
  460b34:	cmp	w0, #0x9
  460b38:	b.le	460b14 <_obstack_memory_used@@Base+0xc774>
  460b3c:	ldr	x1, [x10, #24]
  460b40:	mov	w0, #0x0                   	// #0
  460b44:	ldrb	w2, [x1]
  460b48:	cmp	w2, #0x5f
  460b4c:	b.ne	460b18 <_obstack_memory_used@@Base+0xc778>  // b.any
  460b50:	add	x1, x1, #0x1
  460b54:	mov	w0, #0x1                   	// #1
  460b58:	str	x1, [x10, #24]
  460b5c:	b	460b18 <_obstack_memory_used@@Base+0xc778>
  460b60:	mov	w0, #0x0                   	// #0
  460b64:	b	460b18 <_obstack_memory_used@@Base+0xc778>
  460b68:	cbnz	x0, 460b84 <_obstack_memory_used@@Base+0xc7e4>
  460b6c:	b	460b90 <_obstack_memory_used@@Base+0xc7f0>
  460b70:	cmp	w1, #0x0
  460b74:	b.le	460b98 <_obstack_memory_used@@Base+0xc7f8>
  460b78:	ldr	x0, [x0, #16]
  460b7c:	sub	w1, w1, #0x1
  460b80:	cbz	x0, 460b94 <_obstack_memory_used@@Base+0xc7f4>
  460b84:	ldr	w2, [x0]
  460b88:	cmp	w2, #0x2f
  460b8c:	b.eq	460b70 <_obstack_memory_used@@Base+0xc7d0>  // b.none
  460b90:	mov	x0, #0x0                   	// #0
  460b94:	ret
  460b98:	b.ne	460b90 <_obstack_memory_used@@Base+0xc7f0>  // b.any
  460b9c:	ldr	x0, [x0, #8]
  460ba0:	ret
  460ba4:	nop
  460ba8:	mov	x2, x0
  460bac:	ldr	x0, [x0, #288]
  460bb0:	cbz	x0, 460bc8 <_obstack_memory_used@@Base+0xc828>
  460bb4:	ldr	x1, [x1]
  460bb8:	ldr	x0, [x0, #8]
  460bbc:	ldr	x0, [x0, #16]
  460bc0:	tbnz	w1, #31, 460bd0 <_obstack_memory_used@@Base+0xc830>
  460bc4:	b	460b68 <_obstack_memory_used@@Base+0xc7c8>
  460bc8:	mov	w1, #0x1                   	// #1
  460bcc:	str	w1, [x2, #304]
  460bd0:	ret
  460bd4:	nop
  460bd8:	cbz	x1, 460cac <_obstack_memory_used@@Base+0xc90c>
  460bdc:	stp	x29, x30, [sp, #-48]!
  460be0:	mov	x29, sp
  460be4:	stp	x21, x22, [sp, #32]
  460be8:	mov	x21, #0x8001                	// #32769
  460bec:	movk	x21, #0x410, lsl #16
  460bf0:	movk	x21, #0xc600, lsl #32
  460bf4:	stp	x19, x20, [sp, #16]
  460bf8:	mov	x20, x0
  460bfc:	mov	x19, x1
  460c00:	mov	x22, #0x1                   	// #1
  460c04:	movk	x21, #0x19, lsl #48
  460c08:	ldr	w2, [x19]
  460c0c:	cmp	w2, #0x8
  460c10:	b.eq	460c28 <_obstack_memory_used@@Base+0xc888>  // b.none
  460c14:	b.hi	460c7c <_obstack_memory_used@@Base+0xc8dc>  // b.pmore
  460c18:	cmp	w2, #0x6
  460c1c:	b.eq	460c30 <_obstack_memory_used@@Base+0xc890>  // b.none
  460c20:	cmp	w2, #0x7
  460c24:	b.ne	460c44 <_obstack_memory_used@@Base+0xc8a4>  // b.any
  460c28:	ldr	x19, [x19, #16]
  460c2c:	cbnz	x19, 460c08 <_obstack_memory_used@@Base+0xc868>
  460c30:	mov	x0, #0x0                   	// #0
  460c34:	ldp	x19, x20, [sp, #16]
  460c38:	ldp	x21, x22, [sp, #32]
  460c3c:	ldp	x29, x30, [sp], #48
  460c40:	ret
  460c44:	cbz	w2, 460c30 <_obstack_memory_used@@Base+0xc890>
  460c48:	cmp	w2, #0x5
  460c4c:	b.ne	460c98 <_obstack_memory_used@@Base+0xc8f8>  // b.any
  460c50:	add	x1, x19, #0x8
  460c54:	mov	x0, x20
  460c58:	bl	460ba8 <_obstack_memory_used@@Base+0xc808>
  460c5c:	cbz	x0, 460c30 <_obstack_memory_used@@Base+0xc890>
  460c60:	ldr	w1, [x0]
  460c64:	cmp	w1, #0x2f
  460c68:	b.ne	460c30 <_obstack_memory_used@@Base+0xc890>  // b.any
  460c6c:	ldp	x19, x20, [sp, #16]
  460c70:	ldp	x21, x22, [sp, #32]
  460c74:	ldp	x29, x30, [sp], #48
  460c78:	ret
  460c7c:	sub	w2, w2, #0x18
  460c80:	cmp	w2, #0x34
  460c84:	b.hi	460c98 <_obstack_memory_used@@Base+0xc8f8>  // b.pmore
  460c88:	lsl	x2, x22, x2
  460c8c:	tst	x2, x21
  460c90:	b.ne	460c30 <_obstack_memory_used@@Base+0xc890>  // b.any
  460c94:	tbnz	w2, #27, 460c28 <_obstack_memory_used@@Base+0xc888>
  460c98:	ldr	x1, [x19, #8]
  460c9c:	mov	x0, x20
  460ca0:	bl	460bd8 <_obstack_memory_used@@Base+0xc838>
  460ca4:	cbz	x0, 460c28 <_obstack_memory_used@@Base+0xc888>
  460ca8:	b	460c34 <_obstack_memory_used@@Base+0xc894>
  460cac:	mov	x0, #0x0                   	// #0
  460cb0:	ret
  460cb4:	nop
  460cb8:	stp	x29, x30, [sp, #-48]!
  460cbc:	mov	x29, sp
  460cc0:	stp	x19, x20, [sp, #16]
  460cc4:	mov	x19, x2
  460cc8:	add	x2, x1, #0x1
  460ccc:	stp	x21, x22, [sp, #32]
  460cd0:	mov	x21, x1
  460cd4:	mov	x22, x0
  460cd8:	ldp	x1, x20, [x19, #8]
  460cdc:	add	x1, x2, x1
  460ce0:	ldr	w2, [x19, #24]
  460ce4:	cmp	x1, x20
  460ce8:	b.hi	460d2c <_obstack_memory_used@@Base+0xc98c>  // b.pmore
  460cec:	cbnz	w2, 460d1c <_obstack_memory_used@@Base+0xc97c>
  460cf0:	ldp	x3, x0, [x19]
  460cf4:	mov	x1, x22
  460cf8:	mov	x2, x21
  460cfc:	add	x0, x3, x0
  460d00:	bl	402620 <memcpy@plt>
  460d04:	ldp	x0, x1, [x19]
  460d08:	add	x0, x0, x21
  460d0c:	strb	wzr, [x0, x1]
  460d10:	ldr	x1, [x19, #8]
  460d14:	add	x1, x1, x21
  460d18:	str	x1, [x19, #8]
  460d1c:	ldp	x19, x20, [sp, #16]
  460d20:	ldp	x21, x22, [sp, #32]
  460d24:	ldp	x29, x30, [sp], #48
  460d28:	ret
  460d2c:	cbnz	w2, 460d1c <_obstack_memory_used@@Base+0xc97c>
  460d30:	cbz	x20, 460d68 <_obstack_memory_used@@Base+0xc9c8>
  460d34:	nop
  460d38:	lsl	x20, x20, #1
  460d3c:	cmp	x1, x20
  460d40:	b.hi	460d38 <_obstack_memory_used@@Base+0xc998>  // b.pmore
  460d44:	ldr	x0, [x19]
  460d48:	mov	x1, x20
  460d4c:	bl	4028f0 <realloc@plt>
  460d50:	cbz	x0, 460d78 <_obstack_memory_used@@Base+0xc9d8>
  460d54:	ldr	w2, [x19, #24]
  460d58:	str	x0, [x19]
  460d5c:	str	x20, [x19, #16]
  460d60:	cbz	w2, 460cf0 <_obstack_memory_used@@Base+0xc950>
  460d64:	b	460d1c <_obstack_memory_used@@Base+0xc97c>
  460d68:	cmp	x1, #0x2
  460d6c:	mov	x20, #0x2                   	// #2
  460d70:	b.hi	460d38 <_obstack_memory_used@@Base+0xc998>  // b.pmore
  460d74:	b	460d44 <_obstack_memory_used@@Base+0xc9a4>
  460d78:	ldr	x0, [x19]
  460d7c:	bl	402a90 <free@plt>
  460d80:	stp	xzr, xzr, [x19]
  460d84:	mov	w0, #0x1                   	// #1
  460d88:	str	xzr, [x19, #16]
  460d8c:	str	w0, [x19, #24]
  460d90:	b	460d1c <_obstack_memory_used@@Base+0xc97c>
  460d94:	nop
  460d98:	stp	x29, x30, [sp, #-112]!
  460d9c:	mov	x29, sp
  460da0:	ldr	x2, [x0, #24]
  460da4:	stp	x19, x20, [sp, #16]
  460da8:	mov	x19, x0
  460dac:	str	xzr, [sp, #104]
  460db0:	ldrb	w3, [x2]
  460db4:	cmp	w3, w1, uxtb
  460db8:	b.eq	4614b8 <_obstack_memory_used@@Base+0xd118>  // b.none
  460dbc:	stp	x21, x22, [sp, #32]
  460dc0:	add	x21, sp, #0x68
  460dc4:	mov	w22, #0x1                   	// #1
  460dc8:	stp	x23, x24, [sp, #48]
  460dcc:	and	w23, w1, #0xff
  460dd0:	mov	w24, #0x6d                  	// #109
  460dd4:	stp	x25, x26, [sp, #64]
  460dd8:	ldr	w25, [x19, #76]
  460ddc:	str	w22, [x19, #76]
  460de0:	ldrb	w0, [x2]
  460de4:	cmp	w0, #0x4c
  460de8:	b.eq	460fb8 <_obstack_memory_used@@Base+0xcc18>  // b.none
  460dec:	cmp	w0, #0x54
  460df0:	b.eq	461048 <_obstack_memory_used@@Base+0xcca8>  // b.none
  460df4:	cmp	w0, #0x73
  460df8:	b.eq	460f78 <_obstack_memory_used@@Base+0xcbd8>  // b.none
  460dfc:	cmp	w0, #0x66
  460e00:	b.ne	460e9c <_obstack_memory_used@@Base+0xcafc>  // b.any
  460e04:	ldrb	w0, [x2, #1]
  460e08:	cmp	w0, #0x70
  460e0c:	b.eq	461058 <_obstack_memory_used@@Base+0xccb8>  // b.none
  460e10:	mov	x0, x19
  460e14:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  460e18:	mov	x20, x0
  460e1c:	cbz	x0, 460e7c <_obstack_memory_used@@Base+0xcadc>
  460e20:	ldr	w0, [x0]
  460e24:	cmp	w0, #0x32
  460e28:	b.eq	4610c0 <_obstack_memory_used@@Base+0xcd20>  // b.none
  460e2c:	cmp	w0, #0x34
  460e30:	b.eq	4614d8 <_obstack_memory_used@@Base+0xd138>  // b.none
  460e34:	b.hi	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.pmore
  460e38:	cmp	w0, #0x33
  460e3c:	b.ne	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.any
  460e40:	ldr	w0, [x20, #8]
  460e44:	cmp	w0, #0x2
  460e48:	b.eq	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.none
  460e4c:	b.gt	460e78 <_obstack_memory_used@@Base+0xcad8>
  460e50:	cbnz	w0, 461288 <_obstack_memory_used@@Base+0xcee8>
  460e54:	mov	x2, x20
  460e58:	mov	x0, x19
  460e5c:	mov	x3, #0x0                   	// #0
  460e60:	mov	w1, #0x36                  	// #54
  460e64:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  460e68:	mov	x20, x0
  460e6c:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  460e70:	ldr	x27, [sp, #80]
  460e74:	nop
  460e78:	mov	x20, #0x0                   	// #0
  460e7c:	str	w25, [x19, #76]
  460e80:	mov	x0, x20
  460e84:	ldp	x19, x20, [sp, #16]
  460e88:	ldp	x21, x22, [sp, #32]
  460e8c:	ldp	x23, x24, [sp, #48]
  460e90:	ldp	x25, x26, [sp, #64]
  460e94:	ldp	x29, x30, [sp], #112
  460e98:	ret
  460e9c:	sub	w1, w0, #0x30
  460ea0:	and	w1, w1, #0xff
  460ea4:	cmp	w1, #0x9
  460ea8:	b.hi	460fc8 <_obstack_memory_used@@Base+0xcc28>  // b.pmore
  460eac:	mov	x0, x19
  460eb0:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  460eb4:	mov	x20, x0
  460eb8:	cbz	x0, 460e7c <_obstack_memory_used@@Base+0xcadc>
  460ebc:	ldr	x0, [x19, #24]
  460ec0:	ldrb	w1, [x0]
  460ec4:	cmp	w1, #0x49
  460ec8:	b.eq	460f28 <_obstack_memory_used@@Base+0xcb88>  // b.none
  460ecc:	str	w25, [x19, #76]
  460ed0:	mov	x2, x20
  460ed4:	mov	x0, x19
  460ed8:	mov	x3, #0x0                   	// #0
  460edc:	mov	w1, #0x2e                  	// #46
  460ee0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  460ee4:	str	x0, [x21]
  460ee8:	cbz	x0, 460f58 <_obstack_memory_used@@Base+0xcbb8>
  460eec:	ldr	x2, [x19, #24]
  460ef0:	add	x21, x0, #0x10
  460ef4:	ldrb	w0, [x2]
  460ef8:	cmp	w0, w23
  460efc:	b.ne	460dd8 <_obstack_memory_used@@Base+0xca38>  // b.any
  460f00:	ldr	x20, [sp, #104]
  460f04:	add	x2, x2, #0x1
  460f08:	str	x2, [x19, #24]
  460f0c:	mov	x0, x20
  460f10:	ldp	x19, x20, [sp, #16]
  460f14:	ldp	x21, x22, [sp, #32]
  460f18:	ldp	x23, x24, [sp, #48]
  460f1c:	ldp	x25, x26, [sp, #64]
  460f20:	ldp	x29, x30, [sp], #112
  460f24:	ret
  460f28:	add	x0, x0, #0x1
  460f2c:	str	x0, [x19, #24]
  460f30:	mov	x0, x19
  460f34:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  460f38:	mov	x3, x0
  460f3c:	mov	x2, x20
  460f40:	mov	x0, x19
  460f44:	mov	w1, #0x4                   	// #4
  460f48:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  460f4c:	mov	x20, x0
  460f50:	str	w25, [x19, #76]
  460f54:	cbnz	x20, 460ed0 <_obstack_memory_used@@Base+0xcb30>
  460f58:	mov	x20, #0x0                   	// #0
  460f5c:	mov	x0, x20
  460f60:	ldp	x19, x20, [sp, #16]
  460f64:	ldp	x21, x22, [sp, #32]
  460f68:	ldp	x23, x24, [sp, #48]
  460f6c:	ldp	x25, x26, [sp, #64]
  460f70:	ldp	x29, x30, [sp], #112
  460f74:	ret
  460f78:	ldrb	w0, [x2, #1]
  460f7c:	cmp	w0, #0x72
  460f80:	b.eq	461208 <_obstack_memory_used@@Base+0xce68>  // b.none
  460f84:	cmp	w0, #0x70
  460f88:	b.ne	460e10 <_obstack_memory_used@@Base+0xca70>  // b.any
  460f8c:	add	x2, x2, #0x2
  460f90:	str	x2, [x19, #24]
  460f94:	mov	x0, x19
  460f98:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  460f9c:	mov	x2, x0
  460fa0:	mov	x3, #0x0                   	// #0
  460fa4:	mov	x0, x19
  460fa8:	mov	w1, #0x4b                  	// #75
  460fac:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  460fb0:	mov	x20, x0
  460fb4:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  460fb8:	mov	x0, x19
  460fbc:	bl	464360 <_obstack_memory_used@@Base+0xffc0>
  460fc0:	mov	x20, x0
  460fc4:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  460fc8:	cmp	w0, #0x6f
  460fcc:	b.ne	460fe8 <_obstack_memory_used@@Base+0xcc48>  // b.any
  460fd0:	ldrb	w0, [x2, #1]
  460fd4:	cmp	w0, #0x6e
  460fd8:	b.ne	460e10 <_obstack_memory_used@@Base+0xca70>  // b.any
  460fdc:	add	x2, x2, #0x2
  460fe0:	str	x2, [x19, #24]
  460fe4:	b	460eac <_obstack_memory_used@@Base+0xcb0c>
  460fe8:	cmp	w0, #0x69
  460fec:	mov	w1, #0x74                  	// #116
  460ff0:	ccmp	w0, w1, #0x4, ne  // ne = any
  460ff4:	b.ne	460e10 <_obstack_memory_used@@Base+0xca70>  // b.any
  460ff8:	ldrb	w1, [x2, #1]
  460ffc:	cmp	w1, #0x6c
  461000:	b.ne	460e10 <_obstack_memory_used@@Base+0xca70>  // b.any
  461004:	add	x1, x2, #0x2
  461008:	str	x1, [x19, #24]
  46100c:	cmp	w0, #0x74
  461010:	mov	x20, #0x0                   	// #0
  461014:	b.eq	461358 <_obstack_memory_used@@Base+0xcfb8>  // b.none
  461018:	ldrb	w0, [x1, #1]
  46101c:	cbz	w0, 460e78 <_obstack_memory_used@@Base+0xcad8>
  461020:	mov	w1, #0x45                  	// #69
  461024:	mov	x0, x19
  461028:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  46102c:	mov	x3, x0
  461030:	mov	x2, x20
  461034:	mov	x0, x19
  461038:	mov	w1, #0x31                  	// #49
  46103c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461040:	mov	x20, x0
  461044:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  461048:	mov	x0, x19
  46104c:	bl	4604e0 <_obstack_memory_used@@Base+0xc140>
  461050:	mov	x20, x0
  461054:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  461058:	add	x0, x2, #0x2
  46105c:	str	x0, [x19, #24]
  461060:	ldrb	w0, [x2, #2]
  461064:	cmp	w0, #0x54
  461068:	b.eq	4611f8 <_obstack_memory_used@@Base+0xce58>  // b.none
  46106c:	mov	x0, x19
  461070:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  461074:	mvn	x1, x0
  461078:	tst	x1, #0x7fffffff
  46107c:	b.eq	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.none
  461080:	add	w0, w0, #0x1
  461084:	ldp	w1, w2, [x19, #40]
  461088:	cmp	w1, w2
  46108c:	b.ge	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.tcont
  461090:	mov	w3, #0x18                  	// #24
  461094:	add	w4, w1, #0x1
  461098:	ldr	x2, [x19, #32]
  46109c:	smull	x1, w1, w3
  4610a0:	mov	w3, #0x6                   	// #6
  4610a4:	sxtw	x0, w0
  4610a8:	add	x20, x2, x1
  4610ac:	str	wzr, [x20, #4]
  4610b0:	str	w4, [x19, #40]
  4610b4:	str	w3, [x2, x1]
  4610b8:	str	x0, [x20, #8]
  4610bc:	b	460ecc <_obstack_memory_used@@Base+0xcb2c>
  4610c0:	ldr	x2, [x20, #8]
  4610c4:	ldr	w0, [x19, #72]
  4610c8:	ldr	w1, [x2, #16]
  4610cc:	ldr	x26, [x2]
  4610d0:	sub	w1, w1, #0x2
  4610d4:	add	w0, w0, w1
  4610d8:	str	w0, [x19, #72]
  4610dc:	ldrb	w1, [x26]
  4610e0:	cmp	w1, #0x73
  4610e4:	b.eq	4611d4 <_obstack_memory_used@@Base+0xce34>  // b.none
  4610e8:	str	x27, [sp, #80]
  4610ec:	ldr	w27, [x2, #20]
  4610f0:	cmp	w27, #0x1
  4610f4:	b.eq	4612a0 <_obstack_memory_used@@Base+0xcf00>  // b.none
  4610f8:	b.le	46127c <_obstack_memory_used@@Base+0xcedc>
  4610fc:	cmp	w27, #0x2
  461100:	b.eq	4613c0 <_obstack_memory_used@@Base+0xd020>  // b.none
  461104:	cmp	w27, #0x3
  461108:	b.ne	460e70 <_obstack_memory_used@@Base+0xcad0>  // b.any
  46110c:	cmp	w1, #0x71
  461110:	b.eq	461374 <_obstack_memory_used@@Base+0xcfd4>  // b.none
  461114:	ldrb	w0, [x26]
  461118:	cmp	w0, #0x66
  46111c:	b.eq	461544 <_obstack_memory_used@@Base+0xd1a4>  // b.none
  461120:	cmp	w0, #0x6e
  461124:	b.ne	4613b0 <_obstack_memory_used@@Base+0xd010>  // b.any
  461128:	ldrb	w0, [x26, #1]
  46112c:	mov	w1, #0x61                  	// #97
  461130:	cmp	w0, #0x77
  461134:	ccmp	w0, w1, #0x4, ne  // ne = any
  461138:	b.ne	4613b0 <_obstack_memory_used@@Base+0xd010>  // b.any
  46113c:	mov	w1, #0x5f                  	// #95
  461140:	mov	x0, x19
  461144:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461148:	mov	x26, x0
  46114c:	mov	x0, x19
  461150:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461154:	ldr	x1, [x19, #24]
  461158:	mov	x27, x0
  46115c:	ldrb	w0, [x1]
  461160:	cmp	w0, #0x45
  461164:	b.eq	4615a4 <_obstack_memory_used@@Base+0xd204>  // b.none
  461168:	cmp	w0, #0x70
  46116c:	b.eq	46157c <_obstack_memory_used@@Base+0xd1dc>  // b.none
  461170:	cmp	w0, #0x69
  461174:	b.ne	4613b0 <_obstack_memory_used@@Base+0xd010>  // b.any
  461178:	ldrb	w0, [x1, #1]
  46117c:	cmp	w0, #0x6c
  461180:	b.ne	4613b0 <_obstack_memory_used@@Base+0xd010>  // b.any
  461184:	mov	x0, x19
  461188:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  46118c:	mov	x3, x0
  461190:	mov	x2, x27
  461194:	mov	w1, #0x3c                  	// #60
  461198:	mov	x0, x19
  46119c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4611a0:	mov	x2, x26
  4611a4:	mov	x3, x0
  4611a8:	mov	w1, #0x3b                  	// #59
  4611ac:	mov	x0, x19
  4611b0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4611b4:	mov	x3, x0
  4611b8:	mov	x2, x20
  4611bc:	mov	x0, x19
  4611c0:	mov	w1, #0x3a                  	// #58
  4611c4:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4611c8:	mov	x20, x0
  4611cc:	ldr	x27, [sp, #80]
  4611d0:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  4611d4:	ldrb	w0, [x26, #1]
  4611d8:	cmp	w0, #0x74
  4611dc:	b.ne	4610e8 <_obstack_memory_used@@Base+0xcd48>  // b.any
  4611e0:	ldrb	w0, [x26, #2]
  4611e4:	cbnz	w0, 4610e8 <_obstack_memory_used@@Base+0xcd48>
  4611e8:	mov	x0, x19
  4611ec:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4611f0:	mov	x3, x0
  4611f4:	b	4612e4 <_obstack_memory_used@@Base+0xcf44>
  4611f8:	add	x2, x2, #0x3
  4611fc:	mov	w0, #0x0                   	// #0
  461200:	str	x2, [x19, #24]
  461204:	b	461084 <_obstack_memory_used@@Base+0xcce4>
  461208:	add	x2, x2, #0x2
  46120c:	str	x2, [x19, #24]
  461210:	mov	x0, x19
  461214:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461218:	mov	x20, x0
  46121c:	mov	x0, x19
  461220:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  461224:	ldr	x1, [x19, #24]
  461228:	mov	x26, x0
  46122c:	mov	x3, x26
  461230:	ldrb	w0, [x1]
  461234:	cmp	w0, #0x49
  461238:	b.ne	461264 <_obstack_memory_used@@Base+0xcec4>  // b.any
  46123c:	add	x1, x1, #0x1
  461240:	str	x1, [x19, #24]
  461244:	mov	x0, x19
  461248:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  46124c:	mov	x3, x0
  461250:	mov	x2, x26
  461254:	mov	x0, x19
  461258:	mov	w1, #0x4                   	// #4
  46125c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461260:	mov	x3, x0
  461264:	mov	x2, x20
  461268:	mov	x0, x19
  46126c:	mov	w1, #0x1                   	// #1
  461270:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461274:	mov	x20, x0
  461278:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  46127c:	cbnz	w27, 460e70 <_obstack_memory_used@@Base+0xcad0>
  461280:	ldr	x27, [sp, #80]
  461284:	b	460e54 <_obstack_memory_used@@Base+0xcab4>
  461288:	cmp	w0, #0x1
  46128c:	b.ne	460e78 <_obstack_memory_used@@Base+0xcad8>  // b.any
  461290:	mov	x0, x19
  461294:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461298:	mov	x3, x0
  46129c:	b	4612e4 <_obstack_memory_used@@Base+0xcf44>
  4612a0:	ldrb	w0, [x26]
  4612a4:	cmp	w0, #0x70
  4612a8:	ccmp	w0, w24, #0x4, ne  // ne = any
  4612ac:	b.eq	461328 <_obstack_memory_used@@Base+0xcf88>  // b.none
  4612b0:	mov	w27, #0x0                   	// #0
  4612b4:	cmp	w1, #0x73
  4612b8:	b.ne	4612fc <_obstack_memory_used@@Base+0xcf5c>  // b.any
  4612bc:	ldrb	w0, [x26, #1]
  4612c0:	cmp	w0, #0x50
  4612c4:	b.ne	4612fc <_obstack_memory_used@@Base+0xcf5c>  // b.any
  4612c8:	ldrb	w0, [x26, #2]
  4612cc:	cbnz	w0, 4612fc <_obstack_memory_used@@Base+0xcf5c>
  4612d0:	mov	x0, x19
  4612d4:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  4612d8:	mov	x3, x0
  4612dc:	cbnz	w27, 46130c <_obstack_memory_used@@Base+0xcf6c>
  4612e0:	ldr	x27, [sp, #80]
  4612e4:	mov	x2, x20
  4612e8:	mov	x0, x19
  4612ec:	mov	w1, #0x37                  	// #55
  4612f0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4612f4:	mov	x20, x0
  4612f8:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  4612fc:	mov	x0, x19
  461300:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461304:	mov	x3, x0
  461308:	cbz	w27, 4612e0 <_obstack_memory_used@@Base+0xcf40>
  46130c:	mov	x2, x3
  461310:	mov	x0, x19
  461314:	mov	w1, #0x39                  	// #57
  461318:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46131c:	mov	x3, x0
  461320:	ldr	x27, [sp, #80]
  461324:	b	4612e4 <_obstack_memory_used@@Base+0xcf44>
  461328:	ldrb	w2, [x26, #1]
  46132c:	cmp	w2, w0
  461330:	b.ne	4612b0 <_obstack_memory_used@@Base+0xcf10>  // b.any
  461334:	ldr	x0, [x19, #24]
  461338:	ldrb	w2, [x0]
  46133c:	cmp	w2, #0x5f
  461340:	b.ne	4612b4 <_obstack_memory_used@@Base+0xcf14>  // b.any
  461344:	add	x0, x0, #0x1
  461348:	str	x0, [x19, #24]
  46134c:	mov	w27, #0x0                   	// #0
  461350:	ldrb	w1, [x26]
  461354:	b	4612b4 <_obstack_memory_used@@Base+0xcf14>
  461358:	mov	x0, x19
  46135c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461360:	ldr	x1, [x19, #24]
  461364:	mov	x20, x0
  461368:	ldrb	w0, [x1, #1]
  46136c:	cbnz	w0, 461020 <_obstack_memory_used@@Base+0xcc80>
  461370:	b	460e78 <_obstack_memory_used@@Base+0xcad8>
  461374:	ldrb	w0, [x26, #1]
  461378:	cmp	w0, #0x75
  46137c:	b.ne	461114 <_obstack_memory_used@@Base+0xcd74>  // b.any
  461380:	ldrb	w0, [x26, #2]
  461384:	cbnz	w0, 461114 <_obstack_memory_used@@Base+0xcd74>
  461388:	mov	x0, x19
  46138c:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461390:	mov	x26, x0
  461394:	mov	x0, x19
  461398:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  46139c:	mov	x27, x0
  4613a0:	mov	x0, x19
  4613a4:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4613a8:	mov	x3, x0
  4613ac:	cbnz	x0, 461190 <_obstack_memory_used@@Base+0xcdf0>
  4613b0:	mov	x20, #0x0                   	// #0
  4613b4:	ldr	x27, [sp, #80]
  4613b8:	str	w25, [x19, #76]
  4613bc:	b	460e80 <_obstack_memory_used@@Base+0xcae0>
  4613c0:	ldr	x0, [x20, #8]
  4613c4:	ldr	x0, [x0]
  4613c8:	ldrb	w1, [x0, #1]
  4613cc:	cmp	w1, #0x63
  4613d0:	b.eq	461504 <_obstack_memory_used@@Base+0xd164>  // b.none
  4613d4:	ldrb	w0, [x26]
  4613d8:	cmp	w0, #0x66
  4613dc:	b.eq	461534 <_obstack_memory_used@@Base+0xd194>  // b.none
  4613e0:	mov	x0, x19
  4613e4:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4613e8:	mov	x27, x0
  4613ec:	ldrb	w1, [x26]
  4613f0:	cmp	w1, #0x63
  4613f4:	b.ne	461420 <_obstack_memory_used@@Base+0xd080>  // b.any
  4613f8:	ldrb	w0, [x26, #1]
  4613fc:	cmp	w0, #0x6c
  461400:	b.ne	461420 <_obstack_memory_used@@Base+0xd080>  // b.any
  461404:	ldrb	w0, [x26, #2]
  461408:	cbnz	w0, 461420 <_obstack_memory_used@@Base+0xd080>
  46140c:	mov	x0, x19
  461410:	mov	w1, #0x45                  	// #69
  461414:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461418:	mov	x26, x0
  46141c:	b	461458 <_obstack_memory_used@@Base+0xd0b8>
  461420:	cmp	w1, #0x64
  461424:	b.ne	46148c <_obstack_memory_used@@Base+0xd0ec>  // b.any
  461428:	ldrb	w0, [x26, #1]
  46142c:	cmp	w0, #0x74
  461430:	b.ne	46148c <_obstack_memory_used@@Base+0xd0ec>  // b.any
  461434:	ldrb	w0, [x26, #2]
  461438:	cbnz	w0, 46148c <_obstack_memory_used@@Base+0xd0ec>
  46143c:	mov	x0, x19
  461440:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  461444:	ldr	x1, [x19, #24]
  461448:	mov	x26, x0
  46144c:	ldrb	w0, [x1]
  461450:	cmp	w0, #0x49
  461454:	b.eq	461550 <_obstack_memory_used@@Base+0xd1b0>  // b.none
  461458:	mov	x2, x27
  46145c:	mov	x3, x26
  461460:	mov	w1, #0x39                  	// #57
  461464:	mov	x0, x19
  461468:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46146c:	mov	x3, x0
  461470:	mov	x2, x20
  461474:	mov	x0, x19
  461478:	mov	w1, #0x38                  	// #56
  46147c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461480:	mov	x20, x0
  461484:	ldr	x27, [sp, #80]
  461488:	b	460f50 <_obstack_memory_used@@Base+0xcbb0>
  46148c:	cmp	w1, #0x70
  461490:	b.ne	4614a8 <_obstack_memory_used@@Base+0xd108>  // b.any
  461494:	ldrb	w0, [x26, #1]
  461498:	cmp	w0, #0x74
  46149c:	b.ne	4614a8 <_obstack_memory_used@@Base+0xd108>  // b.any
  4614a0:	ldrb	w0, [x26, #2]
  4614a4:	cbz	w0, 46143c <_obstack_memory_used@@Base+0xd09c>
  4614a8:	mov	x0, x19
  4614ac:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4614b0:	mov	x26, x0
  4614b4:	b	461458 <_obstack_memory_used@@Base+0xd0b8>
  4614b8:	add	x2, x2, #0x1
  4614bc:	str	x2, [x0, #24]
  4614c0:	ldp	x19, x20, [sp, #16]
  4614c4:	mov	x3, #0x0                   	// #0
  4614c8:	ldp	x29, x30, [sp], #112
  4614cc:	mov	w1, #0x2e                  	// #46
  4614d0:	mov	x2, #0x0                   	// #0
  4614d4:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4614d8:	ldr	x0, [x19, #24]
  4614dc:	ldrb	w1, [x0]
  4614e0:	cmp	w1, #0x5f
  4614e4:	b.ne	461290 <_obstack_memory_used@@Base+0xcef0>  // b.any
  4614e8:	add	x0, x0, #0x1
  4614ec:	str	x0, [x19, #24]
  4614f0:	mov	w1, #0x45                  	// #69
  4614f4:	mov	x0, x19
  4614f8:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  4614fc:	mov	x3, x0
  461500:	b	4612e4 <_obstack_memory_used@@Base+0xcf44>
  461504:	ldrb	w0, [x0]
  461508:	sub	w1, w0, #0x72
  46150c:	sub	w0, w0, #0x63
  461510:	and	w1, w1, #0xff
  461514:	and	w0, w0, #0xff
  461518:	cmp	w1, #0x1
  46151c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  461520:	b.hi	4613d4 <_obstack_memory_used@@Base+0xd034>  // b.pmore
  461524:	mov	x0, x19
  461528:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  46152c:	mov	x27, x0
  461530:	b	4613ec <_obstack_memory_used@@Base+0xd04c>
  461534:	mov	x0, x19
  461538:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  46153c:	mov	x27, x0
  461540:	b	4613ec <_obstack_memory_used@@Base+0xd04c>
  461544:	mov	x0, x19
  461548:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  46154c:	b	461390 <_obstack_memory_used@@Base+0xcff0>
  461550:	add	x1, x1, #0x1
  461554:	str	x1, [x19, #24]
  461558:	mov	x0, x19
  46155c:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  461560:	mov	x3, x0
  461564:	mov	x2, x26
  461568:	mov	x0, x19
  46156c:	mov	w1, #0x4                   	// #4
  461570:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461574:	mov	x26, x0
  461578:	b	461458 <_obstack_memory_used@@Base+0xd0b8>
  46157c:	ldrb	w0, [x1, #1]
  461580:	cmp	w0, #0x69
  461584:	b.ne	4613b0 <_obstack_memory_used@@Base+0xd010>  // b.any
  461588:	add	x1, x1, #0x2
  46158c:	str	x1, [x19, #24]
  461590:	mov	x0, x19
  461594:	mov	w1, #0x45                  	// #69
  461598:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  46159c:	mov	x3, x0
  4615a0:	b	461190 <_obstack_memory_used@@Base+0xcdf0>
  4615a4:	add	x1, x1, #0x1
  4615a8:	mov	x3, #0x0                   	// #0
  4615ac:	str	x1, [x19, #24]
  4615b0:	b	461190 <_obstack_memory_used@@Base+0xcdf0>
  4615b4:	nop
  4615b8:	ldr	x2, [x0, #24]
  4615bc:	ldrb	w1, [x2]
  4615c0:	cmp	w1, #0x4c
  4615c4:	b.eq	461754 <_obstack_memory_used@@Base+0xd3b4>  // b.none
  4615c8:	cmp	w1, #0x54
  4615cc:	b.eq	4617d8 <_obstack_memory_used@@Base+0xd438>  // b.none
  4615d0:	stp	x29, x30, [sp, #-48]!
  4615d4:	cmp	w1, #0x73
  4615d8:	mov	x29, sp
  4615dc:	stp	x19, x20, [sp, #16]
  4615e0:	mov	x19, x0
  4615e4:	b.eq	46169c <_obstack_memory_used@@Base+0xd2fc>  // b.none
  4615e8:	cmp	w1, #0x66
  4615ec:	b.eq	461630 <_obstack_memory_used@@Base+0xd290>  // b.none
  4615f0:	sub	w3, w1, #0x30
  4615f4:	and	w3, w3, #0xff
  4615f8:	cmp	w3, #0x9
  4615fc:	b.hi	461758 <_obstack_memory_used@@Base+0xd3b8>  // b.pmore
  461600:	mov	x0, x19
  461604:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  461608:	mov	x20, x0
  46160c:	cbz	x0, 461740 <_obstack_memory_used@@Base+0xd3a0>
  461610:	ldr	x0, [x19, #24]
  461614:	ldrb	w1, [x0]
  461618:	cmp	w1, #0x49
  46161c:	b.eq	4618b0 <_obstack_memory_used@@Base+0xd510>  // b.none
  461620:	mov	x0, x20
  461624:	ldp	x19, x20, [sp, #16]
  461628:	ldp	x29, x30, [sp], #48
  46162c:	ret
  461630:	ldrb	w1, [x2, #1]
  461634:	cmp	w1, #0x70
  461638:	b.eq	4616d8 <_obstack_memory_used@@Base+0xd338>  // b.none
  46163c:	mov	x0, x19
  461640:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  461644:	mov	x20, x0
  461648:	cbz	x0, 461740 <_obstack_memory_used@@Base+0xd3a0>
  46164c:	ldr	w0, [x0]
  461650:	cmp	w0, #0x32
  461654:	b.eq	4617dc <_obstack_memory_used@@Base+0xd43c>  // b.none
  461658:	cmp	w0, #0x34
  46165c:	b.eq	461c08 <_obstack_memory_used@@Base+0xd868>  // b.none
  461660:	b.hi	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.pmore
  461664:	cmp	w0, #0x33
  461668:	b.ne	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.any
  46166c:	ldr	w0, [x20, #8]
  461670:	cmp	w0, #0x2
  461674:	b.eq	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.none
  461678:	b.gt	461740 <_obstack_memory_used@@Base+0xd3a0>
  46167c:	cbnz	w0, 4619a4 <_obstack_memory_used@@Base+0xd604>
  461680:	mov	x2, x20
  461684:	mov	x0, x19
  461688:	ldp	x19, x20, [sp, #16]
  46168c:	mov	x3, #0x0                   	// #0
  461690:	ldp	x29, x30, [sp], #48
  461694:	mov	w1, #0x36                  	// #54
  461698:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46169c:	ldrb	w1, [x2, #1]
  4616a0:	cmp	w1, #0x72
  4616a4:	b.eq	4618dc <_obstack_memory_used@@Base+0xd53c>  // b.none
  4616a8:	cmp	w1, #0x70
  4616ac:	b.ne	46163c <_obstack_memory_used@@Base+0xd29c>  // b.any
  4616b0:	add	x2, x2, #0x2
  4616b4:	str	x2, [x0, #24]
  4616b8:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4616bc:	mov	x2, x0
  4616c0:	mov	x0, x19
  4616c4:	mov	x3, #0x0                   	// #0
  4616c8:	ldp	x19, x20, [sp, #16]
  4616cc:	mov	w1, #0x4b                  	// #75
  4616d0:	ldp	x29, x30, [sp], #48
  4616d4:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4616d8:	add	x1, x2, #0x2
  4616dc:	str	x1, [x0, #24]
  4616e0:	ldrb	w1, [x2, #2]
  4616e4:	cmp	w1, #0x54
  4616e8:	b.eq	461a68 <_obstack_memory_used@@Base+0xd6c8>  // b.none
  4616ec:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  4616f0:	mvn	x1, x0
  4616f4:	add	w0, w0, #0x1
  4616f8:	tst	x1, #0x7fffffff
  4616fc:	b.eq	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.none
  461700:	ldp	w1, w2, [x19, #40]
  461704:	cmp	w1, w2
  461708:	b.ge	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.tcont
  46170c:	mov	w3, #0x18                  	// #24
  461710:	add	w4, w1, #0x1
  461714:	ldr	x2, [x19, #32]
  461718:	smull	x1, w1, w3
  46171c:	mov	w3, #0x6                   	// #6
  461720:	sxtw	x0, w0
  461724:	add	x20, x2, x1
  461728:	str	wzr, [x20, #4]
  46172c:	str	w4, [x19, #40]
  461730:	str	w3, [x2, x1]
  461734:	str	x0, [x20, #8]
  461738:	b	461620 <_obstack_memory_used@@Base+0xd280>
  46173c:	ldp	x21, x22, [sp, #32]
  461740:	mov	x20, #0x0                   	// #0
  461744:	mov	x0, x20
  461748:	ldp	x19, x20, [sp, #16]
  46174c:	ldp	x29, x30, [sp], #48
  461750:	ret
  461754:	b	464360 <_obstack_memory_used@@Base+0xffc0>
  461758:	cmp	w1, #0x6f
  46175c:	b.ne	461778 <_obstack_memory_used@@Base+0xd3d8>  // b.any
  461760:	ldrb	w0, [x2, #1]
  461764:	cmp	w0, #0x6e
  461768:	b.ne	46163c <_obstack_memory_used@@Base+0xd29c>  // b.any
  46176c:	add	x2, x2, #0x2
  461770:	str	x2, [x19, #24]
  461774:	b	461600 <_obstack_memory_used@@Base+0xd260>
  461778:	cmp	w1, #0x69
  46177c:	mov	w3, #0x74                  	// #116
  461780:	ccmp	w1, w3, #0x4, ne  // ne = any
  461784:	b.ne	46163c <_obstack_memory_used@@Base+0xd29c>  // b.any
  461788:	ldrb	w3, [x2, #1]
  46178c:	cmp	w3, #0x6c
  461790:	b.ne	46163c <_obstack_memory_used@@Base+0xd29c>  // b.any
  461794:	add	x3, x2, #0x2
  461798:	str	x3, [x0, #24]
  46179c:	cmp	w1, #0x74
  4617a0:	mov	x20, #0x0                   	// #0
  4617a4:	b.eq	461994 <_obstack_memory_used@@Base+0xd5f4>  // b.none
  4617a8:	ldrb	w0, [x3, #1]
  4617ac:	cbz	w0, 461740 <_obstack_memory_used@@Base+0xd3a0>
  4617b0:	mov	x0, x19
  4617b4:	mov	w1, #0x45                  	// #69
  4617b8:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  4617bc:	mov	x3, x0
  4617c0:	mov	x2, x20
  4617c4:	mov	x0, x19
  4617c8:	ldp	x19, x20, [sp, #16]
  4617cc:	mov	w1, #0x31                  	// #49
  4617d0:	ldp	x29, x30, [sp], #48
  4617d4:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4617d8:	b	4604e0 <_obstack_memory_used@@Base+0xc140>
  4617dc:	ldr	x2, [x20, #8]
  4617e0:	stp	x21, x22, [sp, #32]
  4617e4:	ldr	w0, [x19, #72]
  4617e8:	ldr	w1, [x2, #16]
  4617ec:	ldr	x21, [x2]
  4617f0:	sub	w1, w1, #0x2
  4617f4:	add	w0, w0, w1
  4617f8:	str	w0, [x19, #72]
  4617fc:	ldrb	w1, [x21]
  461800:	cmp	w1, #0x73
  461804:	b.eq	46192c <_obstack_memory_used@@Base+0xd58c>  // b.none
  461808:	ldr	w22, [x2, #20]
  46180c:	cmp	w22, #0x1
  461810:	b.eq	4619dc <_obstack_memory_used@@Base+0xd63c>  // b.none
  461814:	b.le	4619d0 <_obstack_memory_used@@Base+0xd630>
  461818:	cmp	w22, #0x2
  46181c:	b.eq	461a94 <_obstack_memory_used@@Base+0xd6f4>  // b.none
  461820:	cmp	w22, #0x3
  461824:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461828:	cmp	w1, #0x71
  46182c:	b.ne	461b24 <_obstack_memory_used@@Base+0xd784>  // b.any
  461830:	ldrb	w0, [x21, #1]
  461834:	cmp	w0, #0x75
  461838:	b.ne	461b24 <_obstack_memory_used@@Base+0xd784>  // b.any
  46183c:	ldrb	w0, [x21, #2]
  461840:	cbnz	w0, 461b24 <_obstack_memory_used@@Base+0xd784>
  461844:	mov	x0, x19
  461848:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  46184c:	mov	x21, x0
  461850:	mov	x0, x19
  461854:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461858:	mov	x22, x0
  46185c:	mov	x0, x19
  461860:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461864:	mov	x3, x0
  461868:	cbz	x0, 46173c <_obstack_memory_used@@Base+0xd39c>
  46186c:	mov	x2, x22
  461870:	mov	x0, x19
  461874:	mov	w1, #0x3c                  	// #60
  461878:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46187c:	mov	x2, x21
  461880:	mov	x3, x0
  461884:	mov	w1, #0x3b                  	// #59
  461888:	mov	x0, x19
  46188c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461890:	mov	x3, x0
  461894:	mov	x2, x20
  461898:	mov	x0, x19
  46189c:	ldp	x19, x20, [sp, #16]
  4618a0:	mov	w1, #0x3a                  	// #58
  4618a4:	ldp	x21, x22, [sp, #32]
  4618a8:	ldp	x29, x30, [sp], #48
  4618ac:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4618b0:	add	x0, x0, #0x1
  4618b4:	str	x0, [x19, #24]
  4618b8:	mov	x0, x19
  4618bc:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  4618c0:	mov	x3, x0
  4618c4:	mov	x2, x20
  4618c8:	mov	x0, x19
  4618cc:	ldp	x19, x20, [sp, #16]
  4618d0:	mov	w1, #0x4                   	// #4
  4618d4:	ldp	x29, x30, [sp], #48
  4618d8:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4618dc:	add	x2, x2, #0x2
  4618e0:	stp	x21, x22, [sp, #32]
  4618e4:	str	x2, [x0, #24]
  4618e8:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4618ec:	mov	x20, x0
  4618f0:	mov	x0, x19
  4618f4:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  4618f8:	ldr	x1, [x19, #24]
  4618fc:	mov	x21, x0
  461900:	mov	x3, x21
  461904:	ldrb	w0, [x1]
  461908:	cmp	w0, #0x49
  46190c:	b.eq	461968 <_obstack_memory_used@@Base+0xd5c8>  // b.none
  461910:	mov	x2, x20
  461914:	mov	x0, x19
  461918:	ldp	x19, x20, [sp, #16]
  46191c:	mov	w1, #0x1                   	// #1
  461920:	ldp	x21, x22, [sp, #32]
  461924:	ldp	x29, x30, [sp], #48
  461928:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46192c:	ldrb	w0, [x21, #1]
  461930:	cmp	w0, #0x74
  461934:	b.ne	461808 <_obstack_memory_used@@Base+0xd468>  // b.any
  461938:	ldrb	w0, [x21, #2]
  46193c:	cbnz	w0, 461808 <_obstack_memory_used@@Base+0xd468>
  461940:	mov	x0, x19
  461944:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461948:	mov	x2, x20
  46194c:	mov	x3, x0
  461950:	mov	x0, x19
  461954:	mov	w1, #0x37                  	// #55
  461958:	ldp	x19, x20, [sp, #16]
  46195c:	ldp	x21, x22, [sp, #32]
  461960:	ldp	x29, x30, [sp], #48
  461964:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461968:	add	x1, x1, #0x1
  46196c:	str	x1, [x19, #24]
  461970:	mov	x0, x19
  461974:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  461978:	mov	x3, x0
  46197c:	mov	x2, x21
  461980:	mov	x0, x19
  461984:	mov	w1, #0x4                   	// #4
  461988:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46198c:	mov	x3, x0
  461990:	b	461910 <_obstack_memory_used@@Base+0xd570>
  461994:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461998:	mov	x20, x0
  46199c:	ldr	x3, [x19, #24]
  4619a0:	b	4617a8 <_obstack_memory_used@@Base+0xd408>
  4619a4:	cmp	w0, #0x1
  4619a8:	b.ne	461740 <_obstack_memory_used@@Base+0xd3a0>  // b.any
  4619ac:	mov	x0, x19
  4619b0:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4619b4:	mov	x3, x0
  4619b8:	mov	x2, x20
  4619bc:	mov	x0, x19
  4619c0:	ldp	x19, x20, [sp, #16]
  4619c4:	mov	w1, #0x37                  	// #55
  4619c8:	ldp	x29, x30, [sp], #48
  4619cc:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4619d0:	cbnz	w22, 46173c <_obstack_memory_used@@Base+0xd39c>
  4619d4:	ldp	x21, x22, [sp, #32]
  4619d8:	b	461680 <_obstack_memory_used@@Base+0xd2e0>
  4619dc:	ldrb	w0, [x21]
  4619e0:	mov	w2, #0x6d                  	// #109
  4619e4:	cmp	w0, #0x70
  4619e8:	ccmp	w0, w2, #0x4, ne  // ne = any
  4619ec:	b.ne	4619fc <_obstack_memory_used@@Base+0xd65c>  // b.any
  4619f0:	ldrb	w2, [x21, #1]
  4619f4:	cmp	w2, w0
  4619f8:	b.eq	461a34 <_obstack_memory_used@@Base+0xd694>  // b.none
  4619fc:	mov	w22, #0x0                   	// #0
  461a00:	cmp	w1, #0x73
  461a04:	b.ne	461a58 <_obstack_memory_used@@Base+0xd6b8>  // b.any
  461a08:	ldrb	w0, [x21, #1]
  461a0c:	cmp	w0, #0x50
  461a10:	b.ne	461a58 <_obstack_memory_used@@Base+0xd6b8>  // b.any
  461a14:	ldrb	w0, [x21, #2]
  461a18:	cbnz	w0, 461a58 <_obstack_memory_used@@Base+0xd6b8>
  461a1c:	mov	x0, x19
  461a20:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  461a24:	mov	x3, x0
  461a28:	cbnz	w22, 461a78 <_obstack_memory_used@@Base+0xd6d8>
  461a2c:	ldp	x21, x22, [sp, #32]
  461a30:	b	4619b8 <_obstack_memory_used@@Base+0xd618>
  461a34:	ldr	x0, [x19, #24]
  461a38:	ldrb	w2, [x0]
  461a3c:	cmp	w2, #0x5f
  461a40:	b.ne	461a00 <_obstack_memory_used@@Base+0xd660>  // b.any
  461a44:	add	x0, x0, #0x1
  461a48:	str	x0, [x19, #24]
  461a4c:	mov	w22, #0x0                   	// #0
  461a50:	ldrb	w1, [x21]
  461a54:	b	461a00 <_obstack_memory_used@@Base+0xd660>
  461a58:	mov	x0, x19
  461a5c:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461a60:	mov	x3, x0
  461a64:	b	461a28 <_obstack_memory_used@@Base+0xd688>
  461a68:	add	x2, x2, #0x3
  461a6c:	mov	w0, #0x0                   	// #0
  461a70:	str	x2, [x19, #24]
  461a74:	b	461700 <_obstack_memory_used@@Base+0xd360>
  461a78:	mov	x2, x3
  461a7c:	mov	x0, x19
  461a80:	mov	w1, #0x39                  	// #57
  461a84:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461a88:	mov	x3, x0
  461a8c:	ldp	x21, x22, [sp, #32]
  461a90:	b	4619b8 <_obstack_memory_used@@Base+0xd618>
  461a94:	ldr	x0, [x20, #8]
  461a98:	ldr	x0, [x0]
  461a9c:	ldrb	w1, [x0, #1]
  461aa0:	cmp	w1, #0x63
  461aa4:	b.eq	461c4c <_obstack_memory_used@@Base+0xd8ac>  // b.none
  461aa8:	ldrb	w0, [x21]
  461aac:	cmp	w0, #0x66
  461ab0:	b.eq	461c7c <_obstack_memory_used@@Base+0xd8dc>  // b.none
  461ab4:	mov	x0, x19
  461ab8:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461abc:	mov	x22, x0
  461ac0:	ldrb	w1, [x21]
  461ac4:	cmp	w1, #0x63
  461ac8:	b.ne	461ba4 <_obstack_memory_used@@Base+0xd804>  // b.any
  461acc:	ldrb	w0, [x21, #1]
  461ad0:	cmp	w0, #0x6c
  461ad4:	b.ne	461ba4 <_obstack_memory_used@@Base+0xd804>  // b.any
  461ad8:	ldrb	w0, [x21, #2]
  461adc:	cbnz	w0, 461ba4 <_obstack_memory_used@@Base+0xd804>
  461ae0:	mov	x0, x19
  461ae4:	mov	w1, #0x45                  	// #69
  461ae8:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461aec:	mov	x21, x0
  461af0:	mov	x3, x21
  461af4:	mov	x2, x22
  461af8:	mov	x0, x19
  461afc:	mov	w1, #0x39                  	// #57
  461b00:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461b04:	mov	x3, x0
  461b08:	mov	x2, x20
  461b0c:	mov	x0, x19
  461b10:	ldp	x19, x20, [sp, #16]
  461b14:	mov	w1, #0x38                  	// #56
  461b18:	ldp	x21, x22, [sp, #32]
  461b1c:	ldp	x29, x30, [sp], #48
  461b20:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461b24:	ldrb	w0, [x21]
  461b28:	cmp	w0, #0x66
  461b2c:	b.eq	461ca4 <_obstack_memory_used@@Base+0xd904>  // b.none
  461b30:	cmp	w0, #0x6e
  461b34:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461b38:	ldrb	w0, [x21, #1]
  461b3c:	mov	w1, #0x61                  	// #97
  461b40:	cmp	w0, #0x77
  461b44:	ccmp	w0, w1, #0x4, ne  // ne = any
  461b48:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461b4c:	mov	w1, #0x5f                  	// #95
  461b50:	mov	x0, x19
  461b54:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461b58:	mov	x21, x0
  461b5c:	mov	x0, x19
  461b60:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461b64:	ldr	x1, [x19, #24]
  461b68:	mov	x22, x0
  461b6c:	ldrb	w0, [x1]
  461b70:	cmp	w0, #0x45
  461b74:	b.eq	461cd8 <_obstack_memory_used@@Base+0xd938>  // b.none
  461b78:	cmp	w0, #0x70
  461b7c:	b.eq	461cb0 <_obstack_memory_used@@Base+0xd910>  // b.none
  461b80:	cmp	w0, #0x69
  461b84:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461b88:	ldrb	w0, [x1, #1]
  461b8c:	cmp	w0, #0x6c
  461b90:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461b94:	mov	x0, x19
  461b98:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461b9c:	mov	x3, x0
  461ba0:	b	46186c <_obstack_memory_used@@Base+0xd4cc>
  461ba4:	cmp	w1, #0x64
  461ba8:	b.ne	461c34 <_obstack_memory_used@@Base+0xd894>  // b.any
  461bac:	ldrb	w0, [x21, #1]
  461bb0:	cmp	w0, #0x74
  461bb4:	b.ne	461c34 <_obstack_memory_used@@Base+0xd894>  // b.any
  461bb8:	ldrb	w0, [x21, #2]
  461bbc:	cbnz	w0, 461c34 <_obstack_memory_used@@Base+0xd894>
  461bc0:	mov	x0, x19
  461bc4:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  461bc8:	ldr	x1, [x19, #24]
  461bcc:	mov	x21, x0
  461bd0:	ldrb	w0, [x1]
  461bd4:	cmp	w0, #0x49
  461bd8:	b.ne	461af0 <_obstack_memory_used@@Base+0xd750>  // b.any
  461bdc:	add	x1, x1, #0x1
  461be0:	str	x1, [x19, #24]
  461be4:	mov	x0, x19
  461be8:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  461bec:	mov	x3, x0
  461bf0:	mov	x2, x21
  461bf4:	mov	x0, x19
  461bf8:	mov	w1, #0x4                   	// #4
  461bfc:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461c00:	mov	x21, x0
  461c04:	b	461af0 <_obstack_memory_used@@Base+0xd750>
  461c08:	ldr	x0, [x19, #24]
  461c0c:	ldrb	w1, [x0]
  461c10:	cmp	w1, #0x5f
  461c14:	b.ne	4619ac <_obstack_memory_used@@Base+0xd60c>  // b.any
  461c18:	add	x0, x0, #0x1
  461c1c:	str	x0, [x19, #24]
  461c20:	mov	w1, #0x45                  	// #69
  461c24:	mov	x0, x19
  461c28:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461c2c:	mov	x3, x0
  461c30:	b	4619b8 <_obstack_memory_used@@Base+0xd618>
  461c34:	cmp	w1, #0x70
  461c38:	b.eq	461c8c <_obstack_memory_used@@Base+0xd8ec>  // b.none
  461c3c:	mov	x0, x19
  461c40:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461c44:	mov	x21, x0
  461c48:	b	461af0 <_obstack_memory_used@@Base+0xd750>
  461c4c:	ldrb	w0, [x0]
  461c50:	sub	w1, w0, #0x63
  461c54:	sub	w0, w0, #0x72
  461c58:	and	w1, w1, #0xff
  461c5c:	and	w0, w0, #0xff
  461c60:	cmp	w1, #0x1
  461c64:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  461c68:	b.hi	461aa8 <_obstack_memory_used@@Base+0xd708>  // b.pmore
  461c6c:	mov	x0, x19
  461c70:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  461c74:	mov	x22, x0
  461c78:	b	461ac0 <_obstack_memory_used@@Base+0xd720>
  461c7c:	mov	x0, x19
  461c80:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  461c84:	mov	x22, x0
  461c88:	b	461ac0 <_obstack_memory_used@@Base+0xd720>
  461c8c:	ldrb	w0, [x21, #1]
  461c90:	cmp	w0, #0x74
  461c94:	b.ne	461c3c <_obstack_memory_used@@Base+0xd89c>  // b.any
  461c98:	ldrb	w0, [x21, #2]
  461c9c:	cbz	w0, 461bc0 <_obstack_memory_used@@Base+0xd820>
  461ca0:	b	461c3c <_obstack_memory_used@@Base+0xd89c>
  461ca4:	mov	x0, x19
  461ca8:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  461cac:	b	46184c <_obstack_memory_used@@Base+0xd4ac>
  461cb0:	ldrb	w0, [x1, #1]
  461cb4:	cmp	w0, #0x69
  461cb8:	b.ne	46173c <_obstack_memory_used@@Base+0xd39c>  // b.any
  461cbc:	add	x1, x1, #0x2
  461cc0:	str	x1, [x19, #24]
  461cc4:	mov	x0, x19
  461cc8:	mov	w1, #0x45                  	// #69
  461ccc:	bl	460d98 <_obstack_memory_used@@Base+0xc9f8>
  461cd0:	mov	x3, x0
  461cd4:	b	46186c <_obstack_memory_used@@Base+0xd4cc>
  461cd8:	add	x1, x1, #0x1
  461cdc:	mov	x3, #0x0                   	// #0
  461ce0:	str	x1, [x19, #24]
  461ce4:	b	46186c <_obstack_memory_used@@Base+0xd4cc>
  461ce8:	ldr	x2, [x0, #24]
  461cec:	ldrb	w1, [x2]
  461cf0:	cmp	w1, #0x4c
  461cf4:	b.eq	461d80 <_obstack_memory_used@@Base+0xd9e0>  // b.none
  461cf8:	stp	x29, x30, [sp, #-32]!
  461cfc:	mov	x29, sp
  461d00:	stp	x19, x20, [sp, #16]
  461d04:	mov	x19, x0
  461d08:	b.hi	461d28 <_obstack_memory_used@@Base+0xd988>  // b.pmore
  461d0c:	sub	w1, w1, #0x49
  461d10:	and	w1, w1, #0xff
  461d14:	cmp	w1, #0x1
  461d18:	b.hi	461d70 <_obstack_memory_used@@Base+0xd9d0>  // b.pmore
  461d1c:	ldp	x19, x20, [sp, #16]
  461d20:	ldp	x29, x30, [sp], #32
  461d24:	b	461e58 <_obstack_memory_used@@Base+0xdab8>
  461d28:	cmp	w1, #0x58
  461d2c:	b.ne	461d70 <_obstack_memory_used@@Base+0xd9d0>  // b.any
  461d30:	add	x2, x2, #0x1
  461d34:	ldr	w20, [x0, #76]
  461d38:	mov	w1, #0x1                   	// #1
  461d3c:	str	x2, [x0, #24]
  461d40:	str	w1, [x0, #76]
  461d44:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  461d48:	str	w20, [x19, #76]
  461d4c:	ldr	x1, [x19, #24]
  461d50:	ldrb	w2, [x1]
  461d54:	cmp	w2, #0x45
  461d58:	b.ne	461d84 <_obstack_memory_used@@Base+0xd9e4>  // b.any
  461d5c:	add	x1, x1, #0x1
  461d60:	str	x1, [x19, #24]
  461d64:	ldp	x19, x20, [sp, #16]
  461d68:	ldp	x29, x30, [sp], #32
  461d6c:	ret
  461d70:	mov	x0, x19
  461d74:	ldp	x19, x20, [sp, #16]
  461d78:	ldp	x29, x30, [sp], #32
  461d7c:	b	462bd0 <_obstack_memory_used@@Base+0xe830>
  461d80:	b	464360 <_obstack_memory_used@@Base+0xffc0>
  461d84:	mov	x0, #0x0                   	// #0
  461d88:	b	461d64 <_obstack_memory_used@@Base+0xd9c4>
  461d8c:	nop
  461d90:	stp	x29, x30, [sp, #-64]!
  461d94:	mov	x29, sp
  461d98:	ldr	x1, [x0, #24]
  461d9c:	stp	x19, x20, [sp, #16]
  461da0:	mov	x19, x0
  461da4:	str	x21, [sp, #32]
  461da8:	ldr	x21, [x0, #64]
  461dac:	ldrb	w2, [x1]
  461db0:	cmp	w2, #0x45
  461db4:	b.eq	461e34 <_obstack_memory_used@@Base+0xda94>  // b.none
  461db8:	add	x20, sp, #0x38
  461dbc:	str	xzr, [sp, #56]
  461dc0:	b	461de4 <_obstack_memory_used@@Base+0xda44>
  461dc4:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461dc8:	str	x0, [x20]
  461dcc:	add	x20, x0, #0x10
  461dd0:	cbz	x0, 461e00 <_obstack_memory_used@@Base+0xda60>
  461dd4:	ldr	x1, [x19, #24]
  461dd8:	ldrb	w0, [x1]
  461ddc:	cmp	w0, #0x45
  461de0:	b.eq	461e14 <_obstack_memory_used@@Base+0xda74>  // b.none
  461de4:	mov	x0, x19
  461de8:	bl	461ce8 <_obstack_memory_used@@Base+0xd948>
  461dec:	mov	x3, #0x0                   	// #0
  461df0:	mov	x2, x0
  461df4:	mov	w1, #0x2f                  	// #47
  461df8:	mov	x0, x19
  461dfc:	cbnz	x2, 461dc4 <_obstack_memory_used@@Base+0xda24>
  461e00:	mov	x0, #0x0                   	// #0
  461e04:	ldp	x19, x20, [sp, #16]
  461e08:	ldr	x21, [sp, #32]
  461e0c:	ldp	x29, x30, [sp], #64
  461e10:	ret
  461e14:	add	x1, x1, #0x1
  461e18:	str	x1, [x19, #24]
  461e1c:	str	x21, [x19, #64]
  461e20:	ldp	x19, x20, [sp, #16]
  461e24:	ldr	x21, [sp, #32]
  461e28:	ldr	x0, [sp, #56]
  461e2c:	ldp	x29, x30, [sp], #64
  461e30:	ret
  461e34:	add	x1, x1, #0x1
  461e38:	mov	x3, #0x0                   	// #0
  461e3c:	ldr	x21, [sp, #32]
  461e40:	str	x1, [x0, #24]
  461e44:	ldp	x19, x20, [sp, #16]
  461e48:	mov	x2, #0x0                   	// #0
  461e4c:	ldp	x29, x30, [sp], #64
  461e50:	mov	w1, #0x2f                  	// #47
  461e54:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461e58:	ldr	x3, [x0, #24]
  461e5c:	ldrb	w1, [x3]
  461e60:	sub	w1, w1, #0x49
  461e64:	and	w1, w1, #0xff
  461e68:	cmp	w1, #0x1
  461e6c:	b.hi	461e7c <_obstack_memory_used@@Base+0xdadc>  // b.pmore
  461e70:	add	x3, x3, #0x1
  461e74:	str	x3, [x0, #24]
  461e78:	b	461d90 <_obstack_memory_used@@Base+0xd9f0>
  461e7c:	mov	x0, #0x0                   	// #0
  461e80:	ret
  461e84:	nop
  461e88:	stp	x29, x30, [sp, #-48]!
  461e8c:	mov	w3, #0x54                  	// #84
  461e90:	mov	x29, sp
  461e94:	ldr	x2, [x0, #24]
  461e98:	stp	x19, x20, [sp, #16]
  461e9c:	mov	x19, x0
  461ea0:	str	x21, [sp, #32]
  461ea4:	mov	w21, w1
  461ea8:	ldrb	w1, [x2]
  461eac:	cmp	w1, #0x47
  461eb0:	ccmp	w1, w3, #0x4, ne  // ne = any
  461eb4:	b.ne	461f40 <_obstack_memory_used@@Base+0xdba0>  // b.any
  461eb8:	ldr	w3, [x0, #72]
  461ebc:	add	w1, w3, #0x14
  461ec0:	str	w1, [x0, #72]
  461ec4:	ldrb	w1, [x2]
  461ec8:	cmp	w1, #0x54
  461ecc:	b.eq	462064 <_obstack_memory_used@@Base+0xdcc4>  // b.none
  461ed0:	cmp	w1, #0x47
  461ed4:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  461ed8:	add	x1, x2, #0x1
  461edc:	str	x1, [x0, #24]
  461ee0:	ldrb	w1, [x2, #1]
  461ee4:	cbz	w1, 46204c <_obstack_memory_used@@Base+0xdcac>
  461ee8:	add	x1, x2, #0x2
  461eec:	str	x1, [x0, #24]
  461ef0:	ldrb	w1, [x2, #1]
  461ef4:	cmp	w1, #0x54
  461ef8:	b.eq	462400 <_obstack_memory_used@@Base+0xe060>  // b.none
  461efc:	b.hi	4620cc <_obstack_memory_used@@Base+0xdd2c>  // b.pmore
  461f00:	cmp	w1, #0x41
  461f04:	b.eq	462448 <_obstack_memory_used@@Base+0xe0a8>  // b.none
  461f08:	cmp	w1, #0x52
  461f0c:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  461f10:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  461f14:	mov	x11, x0
  461f18:	mov	x0, x19
  461f1c:	bl	460400 <_obstack_memory_used@@Base+0xc060>
  461f20:	mov	x3, x0
  461f24:	mov	x0, x19
  461f28:	mov	x2, x11
  461f2c:	ldp	x19, x20, [sp, #16]
  461f30:	mov	w1, #0x16                  	// #22
  461f34:	ldr	x21, [sp, #32]
  461f38:	ldp	x29, x30, [sp], #48
  461f3c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  461f40:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  461f44:	mov	x20, x0
  461f48:	cbz	x0, 46204c <_obstack_memory_used@@Base+0xdcac>
  461f4c:	cbz	w21, 461f9c <_obstack_memory_used@@Base+0xdbfc>
  461f50:	ldr	w0, [x19, #16]
  461f54:	tbnz	w0, #0, 461f9c <_obstack_memory_used@@Base+0xdbfc>
  461f58:	mov	x1, #0x1f                  	// #31
  461f5c:	mov	x2, #0x1                   	// #1
  461f60:	movk	x1, #0x1a, lsl #48
  461f64:	ldr	w3, [x20]
  461f68:	sub	w0, w3, #0x1c
  461f6c:	cmp	w0, #0x34
  461f70:	b.hi	461f80 <_obstack_memory_used@@Base+0xdbe0>  // b.pmore
  461f74:	lsl	x0, x2, x0
  461f78:	tst	x0, x1
  461f7c:	b.ne	4622b4 <_obstack_memory_used@@Base+0xdf14>  // b.any
  461f80:	cmp	w3, #0x2
  461f84:	b.eq	4622bc <_obstack_memory_used@@Base+0xdf1c>  // b.none
  461f88:	mov	x0, x20
  461f8c:	ldp	x19, x20, [sp, #16]
  461f90:	ldr	x21, [sp, #32]
  461f94:	ldp	x29, x30, [sp], #48
  461f98:	ret
  461f9c:	ldr	x0, [x19, #24]
  461fa0:	ldrb	w0, [x0]
  461fa4:	cmp	w0, #0x45
  461fa8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  461fac:	b.eq	461f88 <_obstack_memory_used@@Base+0xdbe8>  // b.none
  461fb0:	mov	x1, #0x1f                  	// #31
  461fb4:	mov	x4, x20
  461fb8:	mov	x2, #0x1                   	// #1
  461fbc:	movk	x1, #0x1a, lsl #48
  461fc0:	ldr	w3, [x4]
  461fc4:	cmp	w3, #0x4
  461fc8:	b.eq	462330 <_obstack_memory_used@@Base+0xdf90>  // b.none
  461fcc:	sub	w0, w3, #0x1c
  461fd0:	b.hi	4621c0 <_obstack_memory_used@@Base+0xde20>  // b.pmore
  461fd4:	cmp	w3, #0x2
  461fd8:	b.ne	461fe4 <_obstack_memory_used@@Base+0xdc44>  // b.any
  461fdc:	ldr	x4, [x4, #16]
  461fe0:	cbnz	x4, 461fc0 <_obstack_memory_used@@Base+0xdc20>
  461fe4:	mov	w1, #0x0                   	// #0
  461fe8:	mov	x0, x19
  461fec:	bl	463d10 <_obstack_memory_used@@Base+0xf970>
  461ff0:	mov	x3, x0
  461ff4:	cbz	x0, 46204c <_obstack_memory_used@@Base+0xdcac>
  461ff8:	cbnz	w21, 462018 <_obstack_memory_used@@Base+0xdc78>
  461ffc:	ldr	w0, [x20]
  462000:	cmp	w0, #0x2
  462004:	b.ne	462018 <_obstack_memory_used@@Base+0xdc78>  // b.any
  462008:	ldr	w0, [x3]
  46200c:	cmp	w0, #0x29
  462010:	b.ne	462018 <_obstack_memory_used@@Base+0xdc78>  // b.any
  462014:	str	xzr, [x3, #8]
  462018:	mov	x2, x20
  46201c:	mov	x0, x19
  462020:	ldp	x19, x20, [sp, #16]
  462024:	mov	w1, #0x3                   	// #3
  462028:	ldr	x21, [sp, #32]
  46202c:	ldp	x29, x30, [sp], #48
  462030:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462034:	cmp	w1, #0x68
  462038:	b.eq	4625dc <_obstack_memory_used@@Base+0xe23c>  // b.none
  46203c:	cmp	w1, #0x76
  462040:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  462044:	bl	4609c8 <_obstack_memory_used@@Base+0xc628>
  462048:	cbnz	w0, 462304 <_obstack_memory_used@@Base+0xdf64>
  46204c:	mov	x20, #0x0                   	// #0
  462050:	mov	x0, x20
  462054:	ldp	x19, x20, [sp, #16]
  462058:	ldr	x21, [sp, #32]
  46205c:	ldp	x29, x30, [sp], #48
  462060:	ret
  462064:	add	x1, x2, #0x1
  462068:	str	x1, [x0, #24]
  46206c:	ldrb	w1, [x2, #1]
  462070:	cbz	w1, 46204c <_obstack_memory_used@@Base+0xdcac>
  462074:	add	x1, x2, #0x2
  462078:	str	x1, [x0, #24]
  46207c:	ldrb	w1, [x2, #1]
  462080:	cmp	w1, #0x53
  462084:	b.eq	46254c <_obstack_memory_used@@Base+0xe1ac>  // b.none
  462088:	b.hi	462240 <_obstack_memory_used@@Base+0xdea0>  // b.pmore
  46208c:	cmp	w1, #0x48
  462090:	b.eq	462528 <_obstack_memory_used@@Base+0xe188>  // b.none
  462094:	b.hi	46220c <_obstack_memory_used@@Base+0xde6c>  // b.pmore
  462098:	cmp	w1, #0x43
  46209c:	b.eq	4624c8 <_obstack_memory_used@@Base+0xe128>  // b.none
  4620a0:	cmp	w1, #0x46
  4620a4:	b.ne	4621e0 <_obstack_memory_used@@Base+0xde40>  // b.any
  4620a8:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4620ac:	mov	x2, x0
  4620b0:	mov	x0, x19
  4620b4:	mov	x3, #0x0                   	// #0
  4620b8:	ldp	x19, x20, [sp, #16]
  4620bc:	mov	w1, #0xe                   	// #14
  4620c0:	ldr	x21, [sp, #32]
  4620c4:	ldp	x29, x30, [sp], #48
  4620c8:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4620cc:	cmp	w1, #0x56
  4620d0:	b.eq	4623dc <_obstack_memory_used@@Base+0xe03c>  // b.none
  4620d4:	cmp	w1, #0x72
  4620d8:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  4620dc:	add	x0, x0, #0x18
  4620e0:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  4620e4:	cmp	w0, #0x1
  4620e8:	b.le	46204c <_obstack_memory_used@@Base+0xdcac>
  4620ec:	ldr	x1, [x19, #24]
  4620f0:	ldrb	w2, [x1]
  4620f4:	cbz	w2, 46204c <_obstack_memory_used@@Base+0xdcac>
  4620f8:	add	x8, x1, #0x1
  4620fc:	str	x8, [x19, #24]
  462100:	ldrb	w1, [x1]
  462104:	cmp	w1, #0x5f
  462108:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  46210c:	sub	w9, w0, #0x1
  462110:	mov	x2, #0x0                   	// #0
  462114:	mov	w11, #0x18                  	// #24
  462118:	mov	w10, #0x41                  	// #65
  46211c:	ldrb	w0, [x8]
  462120:	cbz	w0, 46204c <_obstack_memory_used@@Base+0xdcac>
  462124:	cmp	w0, #0x24
  462128:	b.ne	462374 <_obstack_memory_used@@Base+0xdfd4>  // b.any
  46212c:	ldrb	w0, [x8, #1]
  462130:	cmp	w0, #0x53
  462134:	b.eq	462480 <_obstack_memory_used@@Base+0xe0e0>  // b.none
  462138:	cmp	w0, #0x5f
  46213c:	b.eq	462478 <_obstack_memory_used@@Base+0xe0d8>  // b.none
  462140:	cmp	w0, #0x24
  462144:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  462148:	ldp	w1, w3, [x19, #40]
  46214c:	ldr	x8, [x19, #24]
  462150:	cmp	w1, w3
  462154:	add	x8, x8, #0x2
  462158:	b.ge	462610 <_obstack_memory_used@@Base+0xe270>  // b.tcont
  46215c:	ldr	x5, [x19, #32]
  462160:	smull	x4, w1, w11
  462164:	add	w1, w1, #0x1
  462168:	sub	w9, w9, #0x2
  46216c:	add	x3, x5, x4
  462170:	str	wzr, [x3, #4]
  462174:	str	w1, [x19, #40]
  462178:	str	w10, [x5, x4]
  46217c:	str	w0, [x3, #8]
  462180:	str	x8, [x19, #24]
  462184:	cbz	x2, 462470 <_obstack_memory_used@@Base+0xe0d0>
  462188:	mov	x0, x19
  46218c:	mov	w1, #0x40                  	// #64
  462190:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462194:	mov	x2, x0
  462198:	cbz	x0, 46204c <_obstack_memory_used@@Base+0xdcac>
  46219c:	cmp	w9, #0x0
  4621a0:	b.gt	46211c <_obstack_memory_used@@Base+0xdd7c>
  4621a4:	mov	x0, x19
  4621a8:	mov	x3, #0x0                   	// #0
  4621ac:	ldp	x19, x20, [sp, #16]
  4621b0:	mov	w1, #0x3f                  	// #63
  4621b4:	ldr	x21, [sp, #32]
  4621b8:	ldp	x29, x30, [sp], #48
  4621bc:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4621c0:	cmp	w0, #0x34
  4621c4:	b.hi	461fe4 <_obstack_memory_used@@Base+0xdc44>  // b.pmore
  4621c8:	lsl	x0, x2, x0
  4621cc:	tst	x0, x1
  4621d0:	b.eq	461fe4 <_obstack_memory_used@@Base+0xdc44>  // b.none
  4621d4:	ldr	x4, [x4, #8]
  4621d8:	cbnz	x4, 461fc0 <_obstack_memory_used@@Base+0xdc20>
  4621dc:	b	461fe4 <_obstack_memory_used@@Base+0xdc44>
  4621e0:	cmp	w1, #0x41
  4621e4:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  4621e8:	bl	461ce8 <_obstack_memory_used@@Base+0xd948>
  4621ec:	mov	x2, x0
  4621f0:	mov	x0, x19
  4621f4:	mov	x3, #0x0                   	// #0
  4621f8:	ldp	x19, x20, [sp, #16]
  4621fc:	mov	w1, #0x30                  	// #48
  462200:	ldr	x21, [sp, #32]
  462204:	ldp	x29, x30, [sp], #48
  462208:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46220c:	cmp	w1, #0x49
  462210:	b.eq	4625b8 <_obstack_memory_used@@Base+0xe218>  // b.none
  462214:	cmp	w1, #0x4a
  462218:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  46221c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462220:	mov	x2, x0
  462224:	mov	x0, x19
  462228:	mov	x3, #0x0                   	// #0
  46222c:	ldp	x19, x20, [sp, #16]
  462230:	mov	w1, #0x12                  	// #18
  462234:	ldr	x21, [sp, #32]
  462238:	ldp	x29, x30, [sp], #48
  46223c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462240:	cmp	w1, #0x63
  462244:	b.eq	462570 <_obstack_memory_used@@Base+0xe1d0>  // b.none
  462248:	b.hi	462034 <_obstack_memory_used@@Base+0xdc94>  // b.pmore
  46224c:	cmp	w1, #0x56
  462250:	b.eq	46249c <_obstack_memory_used@@Base+0xe0fc>  // b.none
  462254:	cmp	w1, #0x57
  462258:	b.ne	462280 <_obstack_memory_used@@Base+0xdee0>  // b.any
  46225c:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  462260:	mov	x2, x0
  462264:	mov	x0, x19
  462268:	mov	x3, #0x0                   	// #0
  46226c:	ldp	x19, x20, [sp, #16]
  462270:	mov	w1, #0x15                  	// #21
  462274:	ldr	x21, [sp, #32]
  462278:	ldp	x29, x30, [sp], #48
  46227c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462280:	cmp	w1, #0x54
  462284:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  462288:	add	w3, w3, #0xa
  46228c:	str	w3, [x0, #72]
  462290:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462294:	mov	x2, x0
  462298:	mov	x0, x19
  46229c:	mov	x3, #0x0                   	// #0
  4622a0:	ldp	x19, x20, [sp, #16]
  4622a4:	mov	w1, #0xa                   	// #10
  4622a8:	ldr	x21, [sp, #32]
  4622ac:	ldp	x29, x30, [sp], #48
  4622b0:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4622b4:	ldr	x20, [x20, #8]
  4622b8:	b	461f64 <_obstack_memory_used@@Base+0xdbc4>
  4622bc:	ldr	x3, [x20, #16]
  4622c0:	mov	x1, #0x1f                  	// #31
  4622c4:	mov	x2, #0x1                   	// #1
  4622c8:	movk	x1, #0x1a, lsl #48
  4622cc:	ldr	w0, [x3]
  4622d0:	sub	w0, w0, #0x1c
  4622d4:	cmp	w0, #0x34
  4622d8:	b.hi	461f88 <_obstack_memory_used@@Base+0xdbe8>  // b.pmore
  4622dc:	lsl	x0, x2, x0
  4622e0:	tst	x0, x1
  4622e4:	b.eq	461f88 <_obstack_memory_used@@Base+0xdbe8>  // b.none
  4622e8:	ldr	x3, [x3, #8]
  4622ec:	str	x3, [x20, #16]
  4622f0:	ldr	w0, [x3]
  4622f4:	sub	w0, w0, #0x1c
  4622f8:	cmp	w0, #0x34
  4622fc:	b.ls	4622dc <_obstack_memory_used@@Base+0xdf3c>  // b.plast
  462300:	b	461f88 <_obstack_memory_used@@Base+0xdbe8>
  462304:	mov	x0, x19
  462308:	mov	w1, #0x0                   	// #0
  46230c:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462310:	mov	x2, x0
  462314:	mov	x0, x19
  462318:	mov	x3, #0x0                   	// #0
  46231c:	ldp	x19, x20, [sp, #16]
  462320:	mov	w1, #0x10                  	// #16
  462324:	ldr	x21, [sp, #32]
  462328:	ldp	x29, x30, [sp], #48
  46232c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462330:	ldr	x1, [x4, #8]
  462334:	cbz	x1, 462360 <_obstack_memory_used@@Base+0xdfc0>
  462338:	ldr	w0, [x1]
  46233c:	sub	w2, w0, #0x1
  462340:	cmp	w0, #0x8
  462344:	b.hi	462368 <_obstack_memory_used@@Base+0xdfc8>  // b.pmore
  462348:	cmp	w0, #0x6
  46234c:	b.hi	461fe4 <_obstack_memory_used@@Base+0xdc44>  // b.pmore
  462350:	cmp	w2, #0x1
  462354:	b.hi	462360 <_obstack_memory_used@@Base+0xdfc0>  // b.pmore
  462358:	ldr	x1, [x1, #16]
  46235c:	cbnz	x1, 462338 <_obstack_memory_used@@Base+0xdf98>
  462360:	mov	w1, #0x1                   	// #1
  462364:	b	461fe8 <_obstack_memory_used@@Base+0xdc48>
  462368:	cmp	w0, #0x35
  46236c:	cset	w1, ne  // ne = any
  462370:	b	461fe8 <_obstack_memory_used@@Base+0xdc48>
  462374:	mov	x1, #0x1                   	// #1
  462378:	b	462380 <_obstack_memory_used@@Base+0xdfe0>
  46237c:	mov	x1, x4
  462380:	cmp	w9, w1
  462384:	mov	w5, w1
  462388:	b.le	4623a0 <_obstack_memory_used@@Base+0xe000>
  46238c:	ldrb	w3, [x8, x1]
  462390:	add	x4, x1, #0x1
  462394:	cmp	w3, #0x24
  462398:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  46239c:	b.ne	46237c <_obstack_memory_used@@Base+0xdfdc>  // b.any
  4623a0:	ldp	w3, w0, [x19, #40]
  4623a4:	cmp	w3, w0
  4623a8:	b.ge	462488 <_obstack_memory_used@@Base+0xe0e8>  // b.tcont
  4623ac:	ldr	x4, [x19, #32]
  4623b0:	add	w0, w3, #0x1
  4623b4:	sub	w9, w9, w5
  4623b8:	smaddl	x3, w3, w11, x4
  4623bc:	str	wzr, [x3, #4]
  4623c0:	str	w0, [x19, #40]
  4623c4:	stp	xzr, x8, [x3]
  4623c8:	ldr	x8, [x19, #24]
  4623cc:	str	w5, [x3, #16]
  4623d0:	add	x8, x8, x1
  4623d4:	str	x8, [x19, #24]
  4623d8:	b	462184 <_obstack_memory_used@@Base+0xdde4>
  4623dc:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  4623e0:	mov	x2, x0
  4623e4:	mov	x0, x19
  4623e8:	mov	x3, #0x0                   	// #0
  4623ec:	ldp	x19, x20, [sp, #16]
  4623f0:	mov	w1, #0x13                  	// #19
  4623f4:	ldr	x21, [sp, #32]
  4623f8:	ldp	x29, x30, [sp], #48
  4623fc:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462400:	ldrb	w1, [x2, #2]
  462404:	cbz	w1, 46241c <_obstack_memory_used@@Base+0xe07c>
  462408:	add	x1, x2, #0x3
  46240c:	str	x1, [x0, #24]
  462410:	ldrb	w1, [x2, #2]
  462414:	cmp	w1, #0x6e
  462418:	b.eq	46261c <_obstack_memory_used@@Base+0xe27c>  // b.none
  46241c:	mov	x0, x19
  462420:	mov	w1, #0x0                   	// #0
  462424:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462428:	mov	x2, x0
  46242c:	mov	x0, x19
  462430:	mov	x3, #0x0                   	// #0
  462434:	ldp	x19, x20, [sp, #16]
  462438:	mov	w1, #0x49                  	// #73
  46243c:	ldr	x21, [sp, #32]
  462440:	ldp	x29, x30, [sp], #48
  462444:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462448:	mov	w1, #0x0                   	// #0
  46244c:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462450:	mov	x2, x0
  462454:	mov	x0, x19
  462458:	ldp	x19, x20, [sp, #16]
  46245c:	mov	x3, #0x0                   	// #0
  462460:	ldr	x21, [sp, #32]
  462464:	mov	w1, #0x17                  	// #23
  462468:	ldp	x29, x30, [sp], #48
  46246c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462470:	mov	x2, x3
  462474:	b	46219c <_obstack_memory_used@@Base+0xddfc>
  462478:	mov	w0, #0x2e                  	// #46
  46247c:	b	462148 <_obstack_memory_used@@Base+0xdda8>
  462480:	mov	w0, #0x2f                  	// #47
  462484:	b	462148 <_obstack_memory_used@@Base+0xdda8>
  462488:	ldr	x0, [x19, #24]
  46248c:	mov	x20, #0x0                   	// #0
  462490:	add	x1, x0, x1
  462494:	str	x1, [x19, #24]
  462498:	b	461f88 <_obstack_memory_used@@Base+0xdbe8>
  46249c:	add	w3, w3, #0xf
  4624a0:	str	w3, [x0, #72]
  4624a4:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4624a8:	mov	x2, x0
  4624ac:	mov	x0, x19
  4624b0:	mov	x3, #0x0                   	// #0
  4624b4:	ldp	x19, x20, [sp, #16]
  4624b8:	mov	w1, #0x9                   	// #9
  4624bc:	ldr	x21, [sp, #32]
  4624c0:	ldp	x29, x30, [sp], #48
  4624c4:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4624c8:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4624cc:	mov	x20, x0
  4624d0:	add	x0, x19, #0x18
  4624d4:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  4624d8:	tbnz	w0, #31, 46204c <_obstack_memory_used@@Base+0xdcac>
  4624dc:	ldr	x0, [x19, #24]
  4624e0:	ldrb	w1, [x0]
  4624e4:	cmp	w1, #0x5f
  4624e8:	b.ne	46204c <_obstack_memory_used@@Base+0xdcac>  // b.any
  4624ec:	add	x0, x0, #0x1
  4624f0:	str	x0, [x19, #24]
  4624f4:	mov	x0, x19
  4624f8:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4624fc:	mov	x2, x0
  462500:	ldr	w1, [x19, #72]
  462504:	mov	x3, x20
  462508:	ldr	x21, [sp, #32]
  46250c:	add	w1, w1, #0x5
  462510:	str	w1, [x19, #72]
  462514:	mov	x0, x19
  462518:	ldp	x19, x20, [sp, #16]
  46251c:	mov	w1, #0xb                   	// #11
  462520:	ldp	x29, x30, [sp], #48
  462524:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462528:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  46252c:	mov	x2, x0
  462530:	mov	x0, x19
  462534:	mov	x3, #0x0                   	// #0
  462538:	ldp	x19, x20, [sp, #16]
  46253c:	mov	w1, #0x14                  	// #20
  462540:	ldr	x21, [sp, #32]
  462544:	ldp	x29, x30, [sp], #48
  462548:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46254c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462550:	mov	x2, x0
  462554:	mov	x0, x19
  462558:	mov	x3, #0x0                   	// #0
  46255c:	ldp	x19, x20, [sp, #16]
  462560:	mov	w1, #0xd                   	// #13
  462564:	ldr	x21, [sp, #32]
  462568:	ldp	x29, x30, [sp], #48
  46256c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462570:	mov	w1, #0x0                   	// #0
  462574:	bl	4609c8 <_obstack_memory_used@@Base+0xc628>
  462578:	cbz	w0, 46204c <_obstack_memory_used@@Base+0xdcac>
  46257c:	mov	x0, x19
  462580:	mov	w1, #0x0                   	// #0
  462584:	bl	4609c8 <_obstack_memory_used@@Base+0xc628>
  462588:	cbz	w0, 46204c <_obstack_memory_used@@Base+0xdcac>
  46258c:	mov	x0, x19
  462590:	mov	w1, #0x0                   	// #0
  462594:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462598:	mov	x2, x0
  46259c:	mov	x0, x19
  4625a0:	mov	x3, #0x0                   	// #0
  4625a4:	ldp	x19, x20, [sp, #16]
  4625a8:	mov	w1, #0x11                  	// #17
  4625ac:	ldr	x21, [sp, #32]
  4625b0:	ldp	x29, x30, [sp], #48
  4625b4:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4625b8:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4625bc:	mov	x2, x0
  4625c0:	mov	x0, x19
  4625c4:	mov	x3, #0x0                   	// #0
  4625c8:	ldp	x19, x20, [sp, #16]
  4625cc:	mov	w1, #0xc                   	// #12
  4625d0:	ldr	x21, [sp, #32]
  4625d4:	ldp	x29, x30, [sp], #48
  4625d8:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4625dc:	bl	4609c8 <_obstack_memory_used@@Base+0xc628>
  4625e0:	cbz	w0, 46204c <_obstack_memory_used@@Base+0xdcac>
  4625e4:	mov	x0, x19
  4625e8:	mov	w1, #0x0                   	// #0
  4625ec:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  4625f0:	mov	x2, x0
  4625f4:	mov	x0, x19
  4625f8:	mov	x3, #0x0                   	// #0
  4625fc:	ldp	x19, x20, [sp, #16]
  462600:	mov	w1, #0xf                   	// #15
  462604:	ldr	x21, [sp, #32]
  462608:	ldp	x29, x30, [sp], #48
  46260c:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462610:	mov	x20, #0x0                   	// #0
  462614:	str	x8, [x19, #24]
  462618:	b	461f88 <_obstack_memory_used@@Base+0xdbe8>
  46261c:	mov	w1, #0x0                   	// #0
  462620:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462624:	mov	x2, x0
  462628:	mov	x0, x19
  46262c:	ldp	x19, x20, [sp, #16]
  462630:	mov	x3, #0x0                   	// #0
  462634:	ldr	x21, [sp, #32]
  462638:	mov	w1, #0x4a                  	// #74
  46263c:	ldp	x29, x30, [sp], #48
  462640:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462644:	nop
  462648:	stp	x29, x30, [sp, #-112]!
  46264c:	mov	x29, sp
  462650:	ldr	x2, [x0, #24]
  462654:	stp	x19, x20, [sp, #16]
  462658:	ldrb	w1, [x2]
  46265c:	cmp	w1, #0x55
  462660:	b.eq	462848 <_obstack_memory_used@@Base+0xe4a8>  // b.none
  462664:	mov	x19, x0
  462668:	b.hi	462718 <_obstack_memory_used@@Base+0xe378>  // b.pmore
  46266c:	cmp	w1, #0x4e
  462670:	b.eq	462860 <_obstack_memory_used@@Base+0xe4c0>  // b.none
  462674:	cmp	w1, #0x53
  462678:	b.ne	4627e8 <_obstack_memory_used@@Base+0xe448>  // b.any
  46267c:	ldrb	w1, [x2, #1]
  462680:	cmp	w1, #0x74
  462684:	b.ne	4627a8 <_obstack_memory_used@@Base+0xe408>  // b.any
  462688:	ldp	w0, w1, [x0, #40]
  46268c:	add	x2, x2, #0x2
  462690:	str	x2, [x19, #24]
  462694:	cmp	w0, w1
  462698:	b.ge	462b1c <_obstack_memory_used@@Base+0xe77c>  // b.tcont
  46269c:	mov	w3, #0x18                  	// #24
  4626a0:	add	w1, w0, #0x1
  4626a4:	ldr	x2, [x19, #32]
  4626a8:	smull	x0, w0, w3
  4626ac:	str	w1, [x19, #40]
  4626b0:	mov	w3, #0x3                   	// #3
  4626b4:	add	x20, x2, x0
  4626b8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4626bc:	add	x1, x1, #0xd8
  4626c0:	str	xzr, [x2, x0]
  4626c4:	str	x1, [x20, #8]
  4626c8:	str	w3, [x20, #16]
  4626cc:	mov	x0, x19
  4626d0:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  4626d4:	mov	x2, x20
  4626d8:	mov	x3, x0
  4626dc:	mov	w1, #0x1                   	// #1
  4626e0:	mov	x0, x19
  4626e4:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4626e8:	mov	x20, x0
  4626ec:	ldr	w1, [x19, #72]
  4626f0:	ldr	x2, [x19, #24]
  4626f4:	add	w1, w1, #0x3
  4626f8:	str	w1, [x19, #72]
  4626fc:	ldrb	w0, [x2]
  462700:	cmp	w0, #0x49
  462704:	b.eq	462ac8 <_obstack_memory_used@@Base+0xe728>  // b.none
  462708:	mov	x0, x20
  46270c:	ldp	x19, x20, [sp, #16]
  462710:	ldp	x29, x30, [sp], #112
  462714:	ret
  462718:	cmp	w1, #0x5a
  46271c:	b.ne	4627e8 <_obstack_memory_used@@Base+0xe448>  // b.any
  462720:	add	x2, x2, #0x1
  462724:	str	x2, [x0, #24]
  462728:	mov	w1, #0x0                   	// #0
  46272c:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  462730:	mov	x20, x0
  462734:	cbz	x0, 4627e0 <_obstack_memory_used@@Base+0xe440>
  462738:	ldr	x0, [x19, #24]
  46273c:	ldrb	w1, [x0]
  462740:	cmp	w1, #0x45
  462744:	b.ne	4627e0 <_obstack_memory_used@@Base+0xe440>  // b.any
  462748:	add	x1, x0, #0x1
  46274c:	str	x1, [x19, #24]
  462750:	ldrb	w1, [x0, #1]
  462754:	cmp	w1, #0x73
  462758:	b.eq	462b44 <_obstack_memory_used@@Base+0xe7a4>  // b.none
  46275c:	cmp	w1, #0x64
  462760:	b.eq	4629ec <_obstack_memory_used@@Base+0xe64c>  // b.none
  462764:	mov	x0, x19
  462768:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  46276c:	mov	x3, x0
  462770:	cbz	x0, 462784 <_obstack_memory_used@@Base+0xe3e4>
  462774:	ldr	w0, [x0]
  462778:	sub	w0, w0, #0x46
  46277c:	tst	w0, #0xfffffffd
  462780:	b.ne	462b98 <_obstack_memory_used@@Base+0xe7f8>  // b.any
  462784:	ldr	w0, [x20]
  462788:	cmp	w0, #0x3
  46278c:	b.eq	462b04 <_obstack_memory_used@@Base+0xe764>  // b.none
  462790:	mov	x2, x20
  462794:	mov	x0, x19
  462798:	mov	w1, #0x2                   	// #2
  46279c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4627a0:	mov	x20, x0
  4627a4:	b	462708 <_obstack_memory_used@@Base+0xe368>
  4627a8:	mov	w1, #0x0                   	// #0
  4627ac:	bl	460760 <_obstack_memory_used@@Base+0xc3c0>
  4627b0:	ldr	x1, [x19, #24]
  4627b4:	mov	x20, x0
  4627b8:	ldrb	w0, [x1]
  4627bc:	cmp	w0, #0x49
  4627c0:	b.ne	462708 <_obstack_memory_used@@Base+0xe368>  // b.any
  4627c4:	mov	x0, x19
  4627c8:	b	462828 <_obstack_memory_used@@Base+0xe488>
  4627cc:	mov	x0, x19
  4627d0:	bl	460ac8 <_obstack_memory_used@@Base+0xc728>
  4627d4:	cbnz	w0, 462a28 <_obstack_memory_used@@Base+0xe688>
  4627d8:	ldp	x21, x22, [sp, #32]
  4627dc:	nop
  4627e0:	mov	x20, #0x0                   	// #0
  4627e4:	b	462708 <_obstack_memory_used@@Base+0xe368>
  4627e8:	mov	x0, x19
  4627ec:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  4627f0:	ldr	x1, [x19, #24]
  4627f4:	mov	x20, x0
  4627f8:	ldrb	w0, [x1]
  4627fc:	cmp	w0, #0x49
  462800:	b.ne	462708 <_obstack_memory_used@@Base+0xe368>  // b.any
  462804:	cbz	x20, 4627e0 <_obstack_memory_used@@Base+0xe440>
  462808:	ldp	w1, w0, [x19, #56]
  46280c:	cmp	w1, w0
  462810:	b.ge	4627e0 <_obstack_memory_used@@Base+0xe440>  // b.tcont
  462814:	ldr	x3, [x19, #48]
  462818:	mov	x0, x19
  46281c:	add	w2, w1, #0x1
  462820:	str	x20, [x3, w1, sxtw #3]
  462824:	str	w2, [x19, #56]
  462828:	bl	461e58 <_obstack_memory_used@@Base+0xdab8>
  46282c:	mov	x3, x0
  462830:	mov	x2, x20
  462834:	mov	x0, x19
  462838:	mov	w1, #0x4                   	// #4
  46283c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462840:	mov	x20, x0
  462844:	b	462708 <_obstack_memory_used@@Base+0xe368>
  462848:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  46284c:	mov	x20, x0
  462850:	mov	x0, x20
  462854:	ldp	x19, x20, [sp, #16]
  462858:	ldp	x29, x30, [sp], #112
  46285c:	ret
  462860:	stp	x21, x22, [sp, #32]
  462864:	add	x2, x2, #0x1
  462868:	add	x1, sp, #0x68
  46286c:	str	x2, [x0, #24]
  462870:	mov	w2, #0x1                   	// #1
  462874:	bl	463a80 <_obstack_memory_used@@Base+0xf6e0>
  462878:	mov	x22, x0
  46287c:	cbz	x0, 462af8 <_obstack_memory_used@@Base+0xe758>
  462880:	mov	x1, #0x0                   	// #0
  462884:	mov	x0, x19
  462888:	stp	x23, x24, [sp, #48]
  46288c:	bl	460138 <_obstack_memory_used@@Base+0xbd98>
  462890:	mov	x23, x0
  462894:	ldr	x1, [x19, #24]
  462898:	ldrb	w20, [x1]
  46289c:	cbz	w20, 462954 <_obstack_memory_used@@Base+0xe5b4>
  4628a0:	mov	x21, #0x0                   	// #0
  4628a4:	mov	w24, #0x4c                  	// #76
  4628a8:	stp	x25, x26, [sp, #64]
  4628ac:	mov	w25, #0x55                  	// #85
  4628b0:	cmp	w20, #0x44
  4628b4:	b.eq	462968 <_obstack_memory_used@@Base+0xe5c8>  // b.none
  4628b8:	sub	w2, w20, #0x30
  4628bc:	sub	w0, w20, #0x61
  4628c0:	and	w2, w2, #0xff
  4628c4:	and	w0, w0, #0xff
  4628c8:	cmp	w2, #0x9
  4628cc:	mov	x26, x21
  4628d0:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  4628d4:	b.ls	4628e8 <_obstack_memory_used@@Base+0xe548>  // b.plast
  4628d8:	cmp	w20, #0x43
  4628dc:	ccmp	w20, w25, #0x4, ne  // ne = any
  4628e0:	ccmp	w20, w24, #0x4, ne  // ne = any
  4628e4:	b.ne	4629b4 <_obstack_memory_used@@Base+0xe614>  // b.any
  4628e8:	mov	x0, x19
  4628ec:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  4628f0:	mov	x21, x0
  4628f4:	cbz	x26, 462910 <_obstack_memory_used@@Base+0xe570>
  4628f8:	mov	w1, #0x1                   	// #1
  4628fc:	mov	x3, x21
  462900:	mov	x2, x26
  462904:	mov	x0, x19
  462908:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46290c:	mov	x21, x0
  462910:	cmp	w20, #0x53
  462914:	ldr	x1, [x19, #24]
  462918:	b.eq	462948 <_obstack_memory_used@@Base+0xe5a8>  // b.none
  46291c:	ldrb	w20, [x1]
  462920:	cmp	w20, #0x45
  462924:	b.eq	46299c <_obstack_memory_used@@Base+0xe5fc>  // b.none
  462928:	cbz	x21, 462950 <_obstack_memory_used@@Base+0xe5b0>
  46292c:	ldp	w0, w2, [x19, #56]
  462930:	cmp	w0, w2
  462934:	b.ge	462950 <_obstack_memory_used@@Base+0xe5b0>  // b.tcont
  462938:	ldr	x3, [x19, #48]
  46293c:	add	w2, w0, #0x1
  462940:	str	x21, [x3, w0, sxtw #3]
  462944:	str	w2, [x19, #56]
  462948:	ldrb	w20, [x1]
  46294c:	cbnz	w20, 4628b0 <_obstack_memory_used@@Base+0xe510>
  462950:	ldp	x25, x26, [sp, #64]
  462954:	mov	x20, #0x0                   	// #0
  462958:	ldp	x23, x24, [sp, #48]
  46295c:	str	xzr, [x22]
  462960:	ldp	x21, x22, [sp, #32]
  462964:	b	462708 <_obstack_memory_used@@Base+0xe368>
  462968:	ldrb	w0, [x1, #1]
  46296c:	and	w0, w0, #0xffffffdf
  462970:	and	w0, w0, #0xff
  462974:	cmp	w0, #0x54
  462978:	mov	x0, x19
  46297c:	b.ne	4629a4 <_obstack_memory_used@@Base+0xe604>  // b.any
  462980:	mov	x26, x21
  462984:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462988:	mov	x21, x0
  46298c:	mov	w1, #0x1                   	// #1
  462990:	cbnz	x26, 4628fc <_obstack_memory_used@@Base+0xe55c>
  462994:	ldr	x1, [x19, #24]
  462998:	b	46291c <_obstack_memory_used@@Base+0xe57c>
  46299c:	mov	x26, x21
  4629a0:	b	4628d8 <_obstack_memory_used@@Base+0xe538>
  4629a4:	mov	x26, x21
  4629a8:	bl	463e80 <_obstack_memory_used@@Base+0xfae0>
  4629ac:	mov	x21, x0
  4629b0:	b	46298c <_obstack_memory_used@@Base+0xe5ec>
  4629b4:	cmp	w20, #0x53
  4629b8:	b.eq	462a68 <_obstack_memory_used@@Base+0xe6c8>  // b.none
  4629bc:	cmp	w20, #0x49
  4629c0:	b.eq	462b24 <_obstack_memory_used@@Base+0xe784>  // b.none
  4629c4:	cmp	w20, #0x54
  4629c8:	b.eq	462bc0 <_obstack_memory_used@@Base+0xe820>  // b.none
  4629cc:	cmp	w20, #0x45
  4629d0:	b.eq	462a84 <_obstack_memory_used@@Base+0xe6e4>  // b.none
  4629d4:	cmp	w20, #0x4d
  4629d8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  4629dc:	b.eq	462950 <_obstack_memory_used@@Base+0xe5b0>  // b.none
  4629e0:	add	x1, x1, #0x1
  4629e4:	str	x1, [x19, #24]
  4629e8:	b	462948 <_obstack_memory_used@@Base+0xe5a8>
  4629ec:	stp	x21, x22, [sp, #32]
  4629f0:	add	x0, x0, #0x2
  4629f4:	str	x0, [x19, #24]
  4629f8:	mov	x0, x19
  4629fc:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  462a00:	mov	w21, w0
  462a04:	tbnz	w0, #31, 4627d8 <_obstack_memory_used@@Base+0xe438>
  462a08:	mov	x0, x19
  462a0c:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  462a10:	mov	x11, x0
  462a14:	cbz	x0, 462a28 <_obstack_memory_used@@Base+0xe688>
  462a18:	ldr	w0, [x0]
  462a1c:	sub	w0, w0, #0x46
  462a20:	tst	w0, #0xfffffffd
  462a24:	b.ne	4627cc <_obstack_memory_used@@Base+0xe42c>  // b.any
  462a28:	ldp	w1, w0, [x19, #40]
  462a2c:	cmp	w1, w0
  462a30:	b.ge	462bb4 <_obstack_memory_used@@Base+0xe814>  // b.tcont
  462a34:	mov	w2, #0x18                  	// #24
  462a38:	add	w4, w1, #0x1
  462a3c:	ldr	x0, [x19, #32]
  462a40:	smull	x1, w1, w2
  462a44:	mov	w2, #0x47                  	// #71
  462a48:	add	x3, x0, x1
  462a4c:	str	wzr, [x3, #4]
  462a50:	str	w4, [x19, #40]
  462a54:	str	w2, [x0, x1]
  462a58:	str	x11, [x3, #8]
  462a5c:	str	w21, [x3, #16]
  462a60:	ldp	x21, x22, [sp, #32]
  462a64:	b	462784 <_obstack_memory_used@@Base+0xe3e4>
  462a68:	mov	x0, x19
  462a6c:	mov	w1, #0x1                   	// #1
  462a70:	bl	460760 <_obstack_memory_used@@Base+0xc3c0>
  462a74:	mov	x21, x0
  462a78:	cbnz	x26, 4628f8 <_obstack_memory_used@@Base+0xe558>
  462a7c:	ldr	x1, [x19, #24]
  462a80:	b	462948 <_obstack_memory_used@@Base+0xe5a8>
  462a84:	str	x21, [x22]
  462a88:	cbz	x21, 462af0 <_obstack_memory_used@@Base+0xe750>
  462a8c:	cbz	x23, 462a9c <_obstack_memory_used@@Base+0xe6fc>
  462a90:	ldr	x0, [sp, #104]
  462a94:	str	x0, [x23, #8]
  462a98:	str	x23, [sp, #104]
  462a9c:	ldr	x0, [x19, #24]
  462aa0:	ldrb	w1, [x0]
  462aa4:	cmp	w1, #0x45
  462aa8:	b.ne	462af0 <_obstack_memory_used@@Base+0xe750>  // b.any
  462aac:	add	x0, x0, #0x1
  462ab0:	ldp	x21, x22, [sp, #32]
  462ab4:	ldp	x23, x24, [sp, #48]
  462ab8:	ldp	x25, x26, [sp, #64]
  462abc:	str	x0, [x19, #24]
  462ac0:	ldr	x20, [sp, #104]
  462ac4:	b	462708 <_obstack_memory_used@@Base+0xe368>
  462ac8:	cbz	x20, 4627e0 <_obstack_memory_used@@Base+0xe440>
  462acc:	ldp	w0, w1, [x19, #56]
  462ad0:	cmp	w0, w1
  462ad4:	b.ge	4627e0 <_obstack_memory_used@@Base+0xe440>  // b.tcont
  462ad8:	ldr	x2, [x19, #48]
  462adc:	add	w1, w0, #0x1
  462ae0:	str	x20, [x2, w0, sxtw #3]
  462ae4:	mov	x0, x19
  462ae8:	str	w1, [x19, #56]
  462aec:	b	462828 <_obstack_memory_used@@Base+0xe488>
  462af0:	ldp	x23, x24, [sp, #48]
  462af4:	ldp	x25, x26, [sp, #64]
  462af8:	mov	x20, #0x0                   	// #0
  462afc:	ldp	x21, x22, [sp, #32]
  462b00:	b	462708 <_obstack_memory_used@@Base+0xe368>
  462b04:	ldr	x0, [x20, #16]
  462b08:	ldr	w1, [x0]
  462b0c:	cmp	w1, #0x29
  462b10:	b.ne	462790 <_obstack_memory_used@@Base+0xe3f0>  // b.any
  462b14:	str	xzr, [x0, #8]
  462b18:	b	462790 <_obstack_memory_used@@Base+0xe3f0>
  462b1c:	mov	x20, #0x0                   	// #0
  462b20:	b	4626cc <_obstack_memory_used@@Base+0xe32c>
  462b24:	cbz	x21, 462950 <_obstack_memory_used@@Base+0xe5b0>
  462b28:	add	x1, x1, #0x1
  462b2c:	str	x1, [x19, #24]
  462b30:	mov	x0, x19
  462b34:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  462b38:	mov	x21, x0
  462b3c:	mov	w1, #0x4                   	// #4
  462b40:	b	4628fc <_obstack_memory_used@@Base+0xe55c>
  462b44:	add	x0, x0, #0x2
  462b48:	str	x0, [x19, #24]
  462b4c:	mov	x0, x19
  462b50:	bl	460ac8 <_obstack_memory_used@@Base+0xc728>
  462b54:	cbz	w0, 4627e0 <_obstack_memory_used@@Base+0xe440>
  462b58:	ldp	w0, w1, [x19, #40]
  462b5c:	cmp	w0, w1
  462b60:	b.ge	462bb8 <_obstack_memory_used@@Base+0xe818>  // b.tcont
  462b64:	mov	w3, #0x18                  	// #24
  462b68:	add	w1, w0, #0x1
  462b6c:	ldr	x2, [x19, #32]
  462b70:	smull	x0, w0, w3
  462b74:	str	w1, [x19, #40]
  462b78:	mov	w4, #0xe                   	// #14
  462b7c:	add	x3, x2, x0
  462b80:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  462b84:	add	x1, x1, #0xc8
  462b88:	str	xzr, [x2, x0]
  462b8c:	str	x1, [x3, #8]
  462b90:	str	w4, [x3, #16]
  462b94:	b	462784 <_obstack_memory_used@@Base+0xe3e4>
  462b98:	mov	x0, x19
  462b9c:	str	x3, [sp, #88]
  462ba0:	bl	460ac8 <_obstack_memory_used@@Base+0xc728>
  462ba4:	ldr	x3, [sp, #88]
  462ba8:	cbnz	w0, 462784 <_obstack_memory_used@@Base+0xe3e4>
  462bac:	mov	x20, #0x0                   	// #0
  462bb0:	b	462708 <_obstack_memory_used@@Base+0xe368>
  462bb4:	ldp	x21, x22, [sp, #32]
  462bb8:	mov	x3, #0x0                   	// #0
  462bbc:	b	462784 <_obstack_memory_used@@Base+0xe3e4>
  462bc0:	mov	x0, x19
  462bc4:	bl	4604e0 <_obstack_memory_used@@Base+0xc140>
  462bc8:	mov	x21, x0
  462bcc:	b	46298c <_obstack_memory_used@@Base+0xe5ec>
  462bd0:	stp	x29, x30, [sp, #-80]!
  462bd4:	mov	x29, sp
  462bd8:	ldr	x4, [x0, #24]
  462bdc:	stp	x19, x20, [sp, #16]
  462be0:	mov	x19, x0
  462be4:	mov	x0, x4
  462be8:	bl	460a70 <_obstack_memory_used@@Base+0xc6d0>
  462bec:	cbnz	w0, 462c2c <_obstack_memory_used@@Base+0xe88c>
  462bf0:	ldrb	w1, [x4]
  462bf4:	sub	w0, w1, #0x30
  462bf8:	cmp	w0, #0x4a
  462bfc:	b.ls	462c14 <_obstack_memory_used@@Base+0xe874>  // b.plast
  462c00:	mov	x20, #0x0                   	// #0
  462c04:	mov	x0, x20
  462c08:	ldp	x19, x20, [sp, #16]
  462c0c:	ldp	x29, x30, [sp], #80
  462c10:	ret
  462c14:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  462c18:	add	x2, x2, #0xa24
  462c1c:	ldrh	w0, [x2, w0, uxtw #1]
  462c20:	adr	x2, 462c2c <_obstack_memory_used@@Base+0xe88c>
  462c24:	add	x0, x2, w0, sxth #2
  462c28:	br	x0
  462c2c:	add	x1, sp, #0x48
  462c30:	mov	x0, x19
  462c34:	mov	w2, #0x0                   	// #0
  462c38:	stp	x21, x22, [sp, #32]
  462c3c:	bl	463a80 <_obstack_memory_used@@Base+0xf6e0>
  462c40:	mov	x21, x0
  462c44:	cbz	x0, 462cd8 <_obstack_memory_used@@Base+0xe938>
  462c48:	ldr	x0, [x19, #24]
  462c4c:	ldrb	w0, [x0]
  462c50:	cmp	w0, #0x46
  462c54:	mov	x0, x19
  462c58:	b.eq	462ccc <_obstack_memory_used@@Base+0xe92c>  // b.none
  462c5c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462c60:	str	x0, [x21]
  462c64:	cbz	x0, 462cd8 <_obstack_memory_used@@Base+0xe938>
  462c68:	ldr	w1, [x0]
  462c6c:	ldr	x20, [sp, #72]
  462c70:	sub	w1, w1, #0x1f
  462c74:	cmp	w1, #0x1
  462c78:	b.ls	462cb0 <_obstack_memory_used@@Base+0xe910>  // b.plast
  462c7c:	cbz	x20, 462cd8 <_obstack_memory_used@@Base+0xe938>
  462c80:	ldp	w0, w1, [x19, #56]
  462c84:	cmp	w0, w1
  462c88:	b.ge	462cd8 <_obstack_memory_used@@Base+0xe938>  // b.tcont
  462c8c:	ldr	x2, [x19, #48]
  462c90:	add	w1, w0, #0x1
  462c94:	ldp	x21, x22, [sp, #32]
  462c98:	str	x20, [x2, w0, sxtw #3]
  462c9c:	mov	x0, x20
  462ca0:	str	w1, [x19, #56]
  462ca4:	ldp	x19, x20, [sp, #16]
  462ca8:	ldp	x29, x30, [sp], #80
  462cac:	ret
  462cb0:	ldr	x1, [x0, #8]
  462cb4:	str	x20, [x0, #8]
  462cb8:	ldr	x0, [x21]
  462cbc:	str	x0, [sp, #72]
  462cc0:	str	x1, [x21]
  462cc4:	ldr	x20, [sp, #72]
  462cc8:	b	462c7c <_obstack_memory_used@@Base+0xe8dc>
  462ccc:	bl	463da0 <_obstack_memory_used@@Base+0xfa00>
  462cd0:	str	x0, [x21]
  462cd4:	b	462c64 <_obstack_memory_used@@Base+0xe8c4>
  462cd8:	ldp	x21, x22, [sp, #32]
  462cdc:	b	462c00 <_obstack_memory_used@@Base+0xe860>
  462ce0:	ldp	w2, w3, [x19, #40]
  462ce4:	sub	w1, w1, #0x61
  462ce8:	adrp	x0, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  462cec:	add	x0, x0, #0xa08
  462cf0:	sbfiz	x1, x1, #5, #32
  462cf4:	add	x0, x0, #0x188
  462cf8:	add	x1, x0, x1
  462cfc:	cmp	w2, w3
  462d00:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  462d04:	mov	w0, #0x18                  	// #24
  462d08:	add	w6, w2, #0x1
  462d0c:	ldr	x3, [x19, #32]
  462d10:	smull	x2, w2, w0
  462d14:	ldr	w7, [x1, #8]
  462d18:	mov	w5, #0x27                  	// #39
  462d1c:	add	x20, x3, x2
  462d20:	ldr	w0, [x19, #72]
  462d24:	add	x4, x4, #0x1
  462d28:	add	w0, w0, w7
  462d2c:	str	wzr, [x20, #4]
  462d30:	str	w6, [x19, #40]
  462d34:	str	w5, [x3, x2]
  462d38:	str	x1, [x20, #8]
  462d3c:	str	x4, [x19, #24]
  462d40:	str	w0, [x19, #72]
  462d44:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  462d48:	mov	x0, x19
  462d4c:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  462d50:	mov	x20, x0
  462d54:	str	x0, [sp, #72]
  462d58:	cbz	x20, 462c00 <_obstack_memory_used@@Base+0xe860>
  462d5c:	ldp	w0, w1, [x19, #56]
  462d60:	cmp	w0, w1
  462d64:	b.ge	462c00 <_obstack_memory_used@@Base+0xe860>  // b.tcont
  462d68:	ldr	x2, [x19, #48]
  462d6c:	add	w1, w0, #0x1
  462d70:	str	x20, [x2, w0, sxtw #3]
  462d74:	str	w1, [x19, #56]
  462d78:	ldr	x20, [sp, #72]
  462d7c:	mov	x0, x20
  462d80:	ldp	x19, x20, [sp, #16]
  462d84:	ldp	x29, x30, [sp], #80
  462d88:	ret
  462d8c:	mov	x0, x19
  462d90:	bl	463da0 <_obstack_memory_used@@Base+0xfa00>
  462d94:	mov	x20, x0
  462d98:	str	x0, [sp, #72]
  462d9c:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462da0:	add	x4, x4, #0x1
  462da4:	str	x4, [x19, #24]
  462da8:	mov	x0, x19
  462dac:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462db0:	mov	x2, x0
  462db4:	mov	x3, #0x0                   	// #0
  462db8:	mov	x0, x19
  462dbc:	mov	w1, #0x26                  	// #38
  462dc0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462dc4:	mov	x20, x0
  462dc8:	str	x0, [sp, #72]
  462dcc:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462dd0:	add	x4, x4, #0x1
  462dd4:	str	x4, [x19, #24]
  462dd8:	mov	x0, x19
  462ddc:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462de0:	mov	x2, x0
  462de4:	mov	x3, #0x0                   	// #0
  462de8:	mov	x0, x19
  462dec:	mov	w1, #0x24                  	// #36
  462df0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462df4:	mov	x20, x0
  462df8:	str	x0, [sp, #72]
  462dfc:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462e00:	add	x4, x4, #0x1
  462e04:	str	x4, [x19, #24]
  462e08:	mov	x0, x19
  462e0c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462e10:	mov	x2, x0
  462e14:	mov	x3, #0x0                   	// #0
  462e18:	mov	x0, x19
  462e1c:	mov	w1, #0x25                  	// #37
  462e20:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462e24:	mov	x20, x0
  462e28:	str	x0, [sp, #72]
  462e2c:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462e30:	add	x0, x4, #0x1
  462e34:	str	x0, [x19, #24]
  462e38:	ldrb	w0, [x4, #1]
  462e3c:	cbz	w0, 462c00 <_obstack_memory_used@@Base+0xe860>
  462e40:	add	x0, x4, #0x2
  462e44:	str	x0, [x19, #24]
  462e48:	ldrb	w0, [x4, #1]
  462e4c:	cmp	w0, #0x68
  462e50:	b.eq	4635c8 <_obstack_memory_used@@Base+0xf228>  // b.none
  462e54:	b.hi	4631ac <_obstack_memory_used@@Base+0xee0c>  // b.pmore
  462e58:	cmp	w0, #0x63
  462e5c:	b.eq	463588 <_obstack_memory_used@@Base+0xf1e8>  // b.none
  462e60:	b.ls	46315c <_obstack_memory_used@@Base+0xedbc>  // b.plast
  462e64:	cmp	w0, #0x65
  462e68:	b.eq	463668 <_obstack_memory_used@@Base+0xf2c8>  // b.none
  462e6c:	cmp	w0, #0x66
  462e70:	b.ne	4633c8 <_obstack_memory_used@@Base+0xf028>  // b.any
  462e74:	ldp	w0, w1, [x19, #40]
  462e78:	cmp	w0, w1
  462e7c:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  462e80:	mov	w1, #0x18                  	// #24
  462e84:	add	w5, w0, #0x1
  462e88:	ldr	x3, [x19, #32]
  462e8c:	smull	x0, w0, w1
  462e90:	ldr	w2, [x19, #72]
  462e94:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  462e98:	add	x1, x1, #0xa08
  462e9c:	add	x20, x3, x0
  462ea0:	add	x1, x1, #0x4c8
  462ea4:	mov	w4, #0x27                  	// #39
  462ea8:	str	wzr, [x20, #4]
  462eac:	add	w2, w2, #0x9
  462eb0:	str	w5, [x19, #40]
  462eb4:	str	w4, [x3, x0]
  462eb8:	str	x1, [x20, #8]
  462ebc:	str	w2, [x19, #72]
  462ec0:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  462ec4:	add	x4, x4, #0x1
  462ec8:	str	x4, [x19, #24]
  462ecc:	mov	x0, x19
  462ed0:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  462ed4:	str	x0, [sp, #72]
  462ed8:	ldr	x1, [x19, #24]
  462edc:	mov	x20, x0
  462ee0:	ldrb	w0, [x1]
  462ee4:	cmp	w0, #0x49
  462ee8:	b.eq	4634a8 <_obstack_memory_used@@Base+0xf108>  // b.none
  462eec:	mov	x0, x19
  462ef0:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462ef4:	ldr	x3, [sp, #72]
  462ef8:	mov	x2, x0
  462efc:	mov	w1, #0x21                  	// #33
  462f00:	mov	x0, x19
  462f04:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462f08:	mov	x20, x0
  462f0c:	str	x0, [sp, #72]
  462f10:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462f14:	add	x4, x4, #0x1
  462f18:	str	x4, [x19, #24]
  462f1c:	mov	x0, x19
  462f20:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  462f24:	mov	x2, x0
  462f28:	mov	x3, #0x0                   	// #0
  462f2c:	mov	x0, x19
  462f30:	mov	w1, #0x22                  	// #34
  462f34:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462f38:	mov	x20, x0
  462f3c:	str	x0, [sp, #72]
  462f40:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462f44:	ldrb	w0, [x4, #1]
  462f48:	sub	w1, w0, #0x30
  462f4c:	cmp	w0, #0x5f
  462f50:	and	w1, w1, #0xff
  462f54:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  462f58:	b.ls	462f6c <_obstack_memory_used@@Base+0xebcc>  // b.plast
  462f5c:	sub	w0, w0, #0x41
  462f60:	and	w0, w0, #0xff
  462f64:	cmp	w0, #0x19
  462f68:	b.hi	463484 <_obstack_memory_used@@Base+0xf0e4>  // b.pmore
  462f6c:	mov	w1, #0x0                   	// #0
  462f70:	mov	x0, x19
  462f74:	bl	460760 <_obstack_memory_used@@Base+0xc3c0>
  462f78:	str	x0, [sp, #72]
  462f7c:	ldr	x1, [x19, #24]
  462f80:	mov	x20, x0
  462f84:	ldrb	w0, [x1]
  462f88:	cmp	w0, #0x49
  462f8c:	b.ne	462c04 <_obstack_memory_used@@Base+0xe864>  // b.any
  462f90:	add	x1, x1, #0x1
  462f94:	str	x1, [x19, #24]
  462f98:	mov	x0, x19
  462f9c:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  462fa0:	mov	x3, x0
  462fa4:	mov	x2, x20
  462fa8:	mov	x0, x19
  462fac:	mov	w1, #0x4                   	// #4
  462fb0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  462fb4:	mov	x20, x0
  462fb8:	str	x0, [sp, #72]
  462fbc:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462fc0:	mov	x0, x19
  462fc4:	stp	x21, x22, [sp, #32]
  462fc8:	bl	4604e0 <_obstack_memory_used@@Base+0xc140>
  462fcc:	ldr	x21, [x19, #24]
  462fd0:	str	x0, [sp, #72]
  462fd4:	mov	x20, x0
  462fd8:	ldrb	w0, [x21]
  462fdc:	cmp	w0, #0x49
  462fe0:	b.eq	463408 <_obstack_memory_used@@Base+0xf068>  // b.none
  462fe4:	ldp	x21, x22, [sp, #32]
  462fe8:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  462fec:	add	x4, x4, #0x1
  462ff0:	str	x4, [x19, #24]
  462ff4:	mov	x0, x19
  462ff8:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  462ffc:	mov	x2, x0
  463000:	mov	x3, #0x0                   	// #0
  463004:	mov	x0, x19
  463008:	mov	w1, #0x28                  	// #40
  46300c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463010:	mov	x20, x0
  463014:	str	x0, [sp, #72]
  463018:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  46301c:	add	x4, x4, #0x1
  463020:	str	x4, [x19, #24]
  463024:	mov	x0, x19
  463028:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  46302c:	mov	x2, x0
  463030:	mov	x3, #0x0                   	// #0
  463034:	mov	x0, x19
  463038:	mov	w1, #0x23                  	// #35
  46303c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463040:	mov	x20, x0
  463044:	str	x0, [sp, #72]
  463048:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  46304c:	add	x3, x4, #0x1
  463050:	str	x3, [x19, #24]
  463054:	ldrb	w0, [x4, #1]
  463058:	cmp	w0, #0x5f
  46305c:	b.eq	46347c <_obstack_memory_used@@Base+0xf0dc>  // b.none
  463060:	sub	w0, w0, #0x30
  463064:	and	w0, w0, #0xff
  463068:	cmp	w0, #0x9
  46306c:	b.hi	4634d4 <_obstack_memory_used@@Base+0xf134>  // b.pmore
  463070:	mov	x1, x3
  463074:	nop
  463078:	mov	x4, x1
  46307c:	add	x1, x1, #0x1
  463080:	str	x1, [x19, #24]
  463084:	ldrb	w0, [x1]
  463088:	sub	w0, w0, #0x30
  46308c:	and	w0, w0, #0xff
  463090:	cmp	w0, #0x9
  463094:	b.ls	463078 <_obstack_memory_used@@Base+0xecd8>  // b.plast
  463098:	ldp	w0, w5, [x19, #40]
  46309c:	sub	x2, x1, x3
  4630a0:	cmp	w0, w5
  4630a4:	b.ge	462c00 <_obstack_memory_used@@Base+0xe860>  // b.tcont
  4630a8:	mov	w7, #0x18                  	// #24
  4630ac:	add	w6, w0, #0x1
  4630b0:	ldr	x5, [x19, #32]
  4630b4:	smull	x0, w0, w7
  4630b8:	cmp	w2, #0x0
  4630bc:	add	x20, x5, x0
  4630c0:	str	wzr, [x20, #4]
  4630c4:	str	w6, [x19, #40]
  4630c8:	b.le	462c00 <_obstack_memory_used@@Base+0xe860>
  4630cc:	str	xzr, [x5, x0]
  4630d0:	str	x3, [x20, #8]
  4630d4:	str	w2, [x20, #16]
  4630d8:	ldrb	w0, [x4, #1]
  4630dc:	mov	x3, x1
  4630e0:	cmp	w0, #0x5f
  4630e4:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  4630e8:	add	x3, x3, #0x1
  4630ec:	str	x3, [x19, #24]
  4630f0:	mov	x0, x19
  4630f4:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4630f8:	mov	x3, x0
  4630fc:	mov	x2, x20
  463100:	mov	x0, x19
  463104:	mov	w1, #0x2a                  	// #42
  463108:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46310c:	mov	x20, x0
  463110:	str	x0, [sp, #72]
  463114:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  463118:	add	x4, x4, #0x1
  46311c:	str	x4, [x19, #24]
  463120:	mov	x0, x19
  463124:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  463128:	mov	x20, x0
  46312c:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  463130:	mov	x0, x19
  463134:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  463138:	mov	x3, x0
  46313c:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  463140:	mov	x2, x20
  463144:	mov	x0, x19
  463148:	mov	w1, #0x2b                  	// #43
  46314c:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463150:	mov	x20, x0
  463154:	str	x0, [sp, #72]
  463158:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  46315c:	cmp	w0, #0x54
  463160:	b.eq	46322c <_obstack_memory_used@@Base+0xee8c>  // b.none
  463164:	cmp	w0, #0x61
  463168:	b.ne	4632c0 <_obstack_memory_used@@Base+0xef20>  // b.any
  46316c:	ldp	w0, w1, [x19, #40]
  463170:	cmp	w0, w1
  463174:	b.ge	462c00 <_obstack_memory_used@@Base+0xe860>  // b.tcont
  463178:	mov	w3, #0x18                  	// #24
  46317c:	add	w1, w0, #0x1
  463180:	ldr	x2, [x19, #32]
  463184:	smull	x0, w0, w3
  463188:	str	w1, [x19, #40]
  46318c:	mov	w3, #0x4                   	// #4
  463190:	add	x20, x2, x0
  463194:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x27c60>
  463198:	add	x1, x1, #0xab8
  46319c:	str	xzr, [x2, x0]
  4631a0:	str	x1, [x20, #8]
  4631a4:	str	w3, [x20, #16]
  4631a8:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  4631ac:	cmp	w0, #0x73
  4631b0:	b.eq	463550 <_obstack_memory_used@@Base+0xf1b0>  // b.none
  4631b4:	b.ls	463288 <_obstack_memory_used@@Base+0xeee8>  // b.plast
  4631b8:	cmp	w0, #0x75
  4631bc:	b.eq	4636b8 <_obstack_memory_used@@Base+0xf318>  // b.none
  4631c0:	cmp	w0, #0x76
  4631c4:	b.ne	463224 <_obstack_memory_used@@Base+0xee84>  // b.any
  4631c8:	ldrb	w0, [x4, #2]
  4631cc:	cmp	w0, #0x5f
  4631d0:	b.eq	463750 <_obstack_memory_used@@Base+0xf3b0>  // b.none
  4631d4:	mov	x0, x19
  4631d8:	bl	460400 <_obstack_memory_used@@Base+0xc060>
  4631dc:	mov	x20, x0
  4631e0:	cbz	x20, 462c00 <_obstack_memory_used@@Base+0xe860>
  4631e4:	ldr	x0, [x19, #24]
  4631e8:	ldrb	w1, [x0]
  4631ec:	cmp	w1, #0x5f
  4631f0:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  4631f4:	add	x0, x0, #0x1
  4631f8:	str	x0, [x19, #24]
  4631fc:	mov	x0, x19
  463200:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  463204:	mov	x3, x0
  463208:	mov	x2, x20
  46320c:	mov	x0, x19
  463210:	mov	w1, #0x2d                  	// #45
  463214:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463218:	mov	x20, x0
  46321c:	str	x0, [sp, #72]
  463220:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  463224:	cmp	w0, #0x74
  463228:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  46322c:	ldr	w20, [x19, #76]
  463230:	mov	w0, #0x1                   	// #1
  463234:	str	w0, [x19, #76]
  463238:	mov	x0, x19
  46323c:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  463240:	str	w20, [x19, #76]
  463244:	mov	x2, x0
  463248:	mov	x3, #0x0                   	// #0
  46324c:	mov	x0, x19
  463250:	mov	w1, #0x43                  	// #67
  463254:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463258:	str	x0, [sp, #72]
  46325c:	mov	x20, x0
  463260:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  463264:	ldr	x0, [x19, #24]
  463268:	ldrb	w1, [x0]
  46326c:	cbz	w1, 462c00 <_obstack_memory_used@@Base+0xe860>
  463270:	add	x1, x0, #0x1
  463274:	str	x1, [x19, #24]
  463278:	ldrb	w0, [x0]
  46327c:	cmp	w0, #0x45
  463280:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  463284:	b	462d5c <_obstack_memory_used@@Base+0xe9bc>
  463288:	cmp	w0, #0x6e
  46328c:	b.eq	463618 <_obstack_memory_used@@Base+0xf278>  // b.none
  463290:	cmp	w0, #0x70
  463294:	b.ne	463370 <_obstack_memory_used@@Base+0xefd0>  // b.any
  463298:	mov	x0, x19
  46329c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4632a0:	mov	x3, #0x0                   	// #0
  4632a4:	mov	x2, x0
  4632a8:	mov	w1, #0x4b                  	// #75
  4632ac:	mov	x0, x19
  4632b0:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4632b4:	mov	x20, x0
  4632b8:	str	x0, [sp, #72]
  4632bc:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  4632c0:	cmp	w0, #0x46
  4632c4:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  4632c8:	ldp	w0, w1, [x19, #40]
  4632cc:	cmp	w0, w1
  4632d0:	b.ge	46378c <_obstack_memory_used@@Base+0xf3ec>  // b.tcont
  4632d4:	mov	w2, #0x18                  	// #24
  4632d8:	add	w3, w0, #0x1
  4632dc:	ldr	x1, [x19, #32]
  4632e0:	smull	x0, w0, w2
  4632e4:	mov	w2, #0x2c                  	// #44
  4632e8:	add	x20, x1, x0
  4632ec:	str	wzr, [x20, #4]
  4632f0:	str	w3, [x19, #40]
  4632f4:	str	x20, [sp, #72]
  4632f8:	str	w2, [x1, x0]
  4632fc:	ldrb	w0, [x4, #2]
  463300:	sub	w0, w0, #0x30
  463304:	and	w0, w0, #0xff
  463308:	cmp	w0, #0x9
  46330c:	cset	w1, ls  // ls = plast
  463310:	strh	w1, [x20, #16]
  463314:	b.hi	463324 <_obstack_memory_used@@Base+0xef84>  // b.pmore
  463318:	add	x0, x19, #0x18
  46331c:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  463320:	ldr	x20, [sp, #72]
  463324:	mov	x0, x19
  463328:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  46332c:	str	x0, [x20, #8]
  463330:	ldr	x1, [sp, #72]
  463334:	ldr	x0, [x1, #8]
  463338:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  46333c:	add	x0, x19, #0x18
  463340:	bl	460330 <_obstack_memory_used@@Base+0xbf90>
  463344:	ldr	x1, [x19, #24]
  463348:	ldrb	w0, [x1]
  46334c:	cbz	w0, 46335c <_obstack_memory_used@@Base+0xefbc>
  463350:	add	x0, x1, #0x1
  463354:	str	x0, [x19, #24]
  463358:	ldrb	w0, [x1]
  46335c:	ldr	x20, [sp, #72]
  463360:	cmp	w0, #0x73
  463364:	cset	w0, eq  // eq = none
  463368:	strh	w0, [x20, #18]
  46336c:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  463370:	cmp	w0, #0x69
  463374:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  463378:	ldp	w0, w1, [x19, #40]
  46337c:	cmp	w0, w1
  463380:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  463384:	mov	w1, #0x18                  	// #24
  463388:	add	w5, w0, #0x1
  46338c:	ldr	x3, [x19, #32]
  463390:	smull	x0, w0, w1
  463394:	ldr	w2, [x19, #72]
  463398:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  46339c:	add	x1, x1, #0xa08
  4633a0:	add	x20, x3, x0
  4633a4:	add	x1, x1, #0x588
  4633a8:	mov	w4, #0x27                  	// #39
  4633ac:	str	wzr, [x20, #4]
  4633b0:	add	w2, w2, #0x8
  4633b4:	str	w5, [x19, #40]
  4633b8:	str	w4, [x3, x0]
  4633bc:	str	x1, [x20, #8]
  4633c0:	str	w2, [x19, #72]
  4633c4:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  4633c8:	cmp	w0, #0x64
  4633cc:	b.ne	462c00 <_obstack_memory_used@@Base+0xe860>  // b.any
  4633d0:	ldp	w0, w1, [x19, #40]
  4633d4:	cmp	w0, w1
  4633d8:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  4633dc:	mov	w1, #0x18                  	// #24
  4633e0:	add	w5, w0, #0x1
  4633e4:	ldr	x3, [x19, #32]
  4633e8:	smull	x0, w0, w1
  4633ec:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  4633f0:	add	x1, x1, #0xa08
  4633f4:	ldr	w2, [x19, #72]
  4633f8:	add	x1, x1, #0x4e8
  4633fc:	add	x20, x3, x0
  463400:	mov	w4, #0x27                  	// #39
  463404:	b	462ea8 <_obstack_memory_used@@Base+0xeb08>
  463408:	ldr	w0, [x19, #80]
  46340c:	cbnz	w0, 463500 <_obstack_memory_used@@Base+0xf160>
  463410:	cbz	x20, 462cd8 <_obstack_memory_used@@Base+0xe938>
  463414:	ldp	w0, w1, [x19, #56]
  463418:	cmp	w0, w1
  46341c:	b.ge	462cd8 <_obstack_memory_used@@Base+0xe938>  // b.tcont
  463420:	ldr	x2, [x19, #48]
  463424:	add	w1, w0, #0x1
  463428:	mov	x3, #0x0                   	// #0
  46342c:	str	x20, [x2, w0, sxtw #3]
  463430:	str	w1, [x19, #56]
  463434:	ldrb	w0, [x21]
  463438:	sub	w0, w0, #0x49
  46343c:	and	w0, w0, #0xff
  463440:	cmp	w0, #0x1
  463444:	b.hi	46345c <_obstack_memory_used@@Base+0xf0bc>  // b.pmore
  463448:	add	x21, x21, #0x1
  46344c:	str	x21, [x19, #24]
  463450:	mov	x0, x19
  463454:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  463458:	mov	x3, x0
  46345c:	mov	x2, x20
  463460:	mov	x0, x19
  463464:	mov	w1, #0x4                   	// #4
  463468:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46346c:	mov	x20, x0
  463470:	str	x0, [sp, #72]
  463474:	ldp	x21, x22, [sp, #32]
  463478:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  46347c:	mov	x20, #0x0                   	// #0
  463480:	b	4630e8 <_obstack_memory_used@@Base+0xed48>
  463484:	mov	x0, x19
  463488:	bl	462648 <_obstack_memory_used@@Base+0xe2a8>
  46348c:	str	x0, [sp, #72]
  463490:	mov	x20, x0
  463494:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  463498:	ldr	w0, [x0]
  46349c:	cmp	w0, #0x18
  4634a0:	b.ne	462d5c <_obstack_memory_used@@Base+0xe9bc>  // b.any
  4634a4:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  4634a8:	add	x1, x1, #0x1
  4634ac:	str	x1, [x19, #24]
  4634b0:	mov	x0, x19
  4634b4:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  4634b8:	mov	x3, x0
  4634bc:	mov	x2, x20
  4634c0:	mov	x0, x19
  4634c4:	mov	w1, #0x4                   	// #4
  4634c8:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4634cc:	str	x0, [sp, #72]
  4634d0:	b	462eec <_obstack_memory_used@@Base+0xeb4c>
  4634d4:	ldr	w20, [x19, #76]
  4634d8:	mov	w0, #0x1                   	// #1
  4634dc:	str	w0, [x19, #76]
  4634e0:	mov	x0, x19
  4634e4:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  4634e8:	str	w20, [x19, #76]
  4634ec:	mov	x20, x0
  4634f0:	cbz	x0, 462c00 <_obstack_memory_used@@Base+0xe860>
  4634f4:	ldr	x1, [x19, #24]
  4634f8:	ldrb	w0, [x1]
  4634fc:	b	4630dc <_obstack_memory_used@@Base+0xed3c>
  463500:	ldr	w22, [x19, #56]
  463504:	add	x0, x21, #0x1
  463508:	ldr	w20, [x19, #72]
  46350c:	str	x23, [sp, #48]
  463510:	str	x0, [x19, #24]
  463514:	mov	x0, x19
  463518:	ldr	w23, [x19, #40]
  46351c:	bl	461d90 <_obstack_memory_used@@Base+0xd9f0>
  463520:	ldr	x1, [x19, #24]
  463524:	ldrb	w1, [x1]
  463528:	cmp	w1, #0x49
  46352c:	b.eq	463708 <_obstack_memory_used@@Base+0xf368>  // b.none
  463530:	str	x21, [x19, #24]
  463534:	str	w23, [x19, #40]
  463538:	str	w22, [x19, #56]
  46353c:	str	w20, [x19, #72]
  463540:	ldp	x21, x22, [sp, #32]
  463544:	ldr	x23, [sp, #48]
  463548:	ldr	x20, [sp, #72]
  46354c:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  463550:	ldp	w0, w1, [x19, #40]
  463554:	cmp	w0, w1
  463558:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  46355c:	mov	w1, #0x18                  	// #24
  463560:	add	w5, w0, #0x1
  463564:	ldr	x3, [x19, #32]
  463568:	smull	x0, w0, w1
  46356c:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  463570:	add	x1, x1, #0xa08
  463574:	ldr	w2, [x19, #72]
  463578:	add	x1, x1, #0x568
  46357c:	add	x20, x3, x0
  463580:	mov	w4, #0x27                  	// #39
  463584:	b	4633ac <_obstack_memory_used@@Base+0xf00c>
  463588:	ldp	w0, w1, [x19, #40]
  46358c:	cmp	w0, w1
  463590:	b.ge	462c00 <_obstack_memory_used@@Base+0xe860>  // b.tcont
  463594:	mov	w3, #0x18                  	// #24
  463598:	add	w1, w0, #0x1
  46359c:	ldr	x2, [x19, #32]
  4635a0:	smull	x0, w0, w3
  4635a4:	str	w1, [x19, #40]
  4635a8:	mov	w3, #0xe                   	// #14
  4635ac:	add	x20, x2, x0
  4635b0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4635b4:	add	x1, x1, #0xa0
  4635b8:	str	xzr, [x2, x0]
  4635bc:	str	x1, [x20, #8]
  4635c0:	str	w3, [x20, #16]
  4635c4:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  4635c8:	ldp	w0, w1, [x19, #40]
  4635cc:	cmp	w0, w1
  4635d0:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  4635d4:	mov	w1, #0x18                  	// #24
  4635d8:	add	w5, w0, #0x1
  4635dc:	ldr	x3, [x19, #32]
  4635e0:	smull	x0, w0, w1
  4635e4:	ldr	w2, [x19, #72]
  4635e8:	mov	w4, #0x27                  	// #39
  4635ec:	add	x20, x3, x0
  4635f0:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  4635f4:	add	x1, x1, #0xa08
  4635f8:	add	w2, w2, #0x4
  4635fc:	add	x1, x1, #0x528
  463600:	str	wzr, [x20, #4]
  463604:	str	w5, [x19, #40]
  463608:	str	w4, [x3, x0]
  46360c:	str	x1, [x20, #8]
  463610:	str	w2, [x19, #72]
  463614:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  463618:	ldp	w0, w1, [x19, #40]
  46361c:	cmp	w0, w1
  463620:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  463624:	mov	w1, #0x18                  	// #24
  463628:	add	w5, w0, #0x1
  46362c:	ldr	x3, [x19, #32]
  463630:	smull	x0, w0, w1
  463634:	ldr	w2, [x19, #72]
  463638:	mov	w4, #0x27                  	// #39
  46363c:	add	x20, x3, x0
  463640:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  463644:	add	x1, x1, #0xa08
  463648:	add	w2, w2, #0x11
  46364c:	add	x1, x1, #0x5a8
  463650:	str	wzr, [x20, #4]
  463654:	str	w5, [x19, #40]
  463658:	str	w4, [x3, x0]
  46365c:	str	x1, [x20, #8]
  463660:	str	w2, [x19, #72]
  463664:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  463668:	ldp	w0, w1, [x19, #40]
  46366c:	cmp	w0, w1
  463670:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  463674:	mov	w1, #0x18                  	// #24
  463678:	add	w5, w0, #0x1
  46367c:	ldr	x3, [x19, #32]
  463680:	smull	x0, w0, w1
  463684:	ldr	w2, [x19, #72]
  463688:	mov	w4, #0x27                  	// #39
  46368c:	add	x20, x3, x0
  463690:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  463694:	add	x1, x1, #0xa08
  463698:	add	w2, w2, #0xa
  46369c:	add	x1, x1, #0x508
  4636a0:	str	wzr, [x20, #4]
  4636a4:	str	w5, [x19, #40]
  4636a8:	str	w4, [x3, x0]
  4636ac:	str	x1, [x20, #8]
  4636b0:	str	w2, [x19, #72]
  4636b4:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  4636b8:	ldp	w0, w1, [x19, #40]
  4636bc:	cmp	w0, w1
  4636c0:	b.ge	4637a0 <_obstack_memory_used@@Base+0xf400>  // b.tcont
  4636c4:	mov	w1, #0x18                  	// #24
  4636c8:	add	w5, w0, #0x1
  4636cc:	ldr	x3, [x19, #32]
  4636d0:	smull	x0, w0, w1
  4636d4:	ldr	w2, [x19, #72]
  4636d8:	mov	w4, #0x27                  	// #39
  4636dc:	add	x20, x3, x0
  4636e0:	adrp	x1, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  4636e4:	add	x1, x1, #0xa08
  4636e8:	add	w2, w2, #0x7
  4636ec:	add	x1, x1, #0x548
  4636f0:	str	wzr, [x20, #4]
  4636f4:	str	w5, [x19, #40]
  4636f8:	str	w4, [x3, x0]
  4636fc:	str	x1, [x20, #8]
  463700:	str	w2, [x19, #72]
  463704:	b	462c04 <_obstack_memory_used@@Base+0xe864>
  463708:	ldr	x2, [sp, #72]
  46370c:	cbz	x2, 463780 <_obstack_memory_used@@Base+0xf3e0>
  463710:	ldp	w4, w1, [x19, #56]
  463714:	cmp	w4, w1
  463718:	b.ge	463780 <_obstack_memory_used@@Base+0xf3e0>  // b.tcont
  46371c:	ldr	x6, [x19, #48]
  463720:	add	w5, w4, #0x1
  463724:	mov	x3, x0
  463728:	mov	w1, #0x4                   	// #4
  46372c:	mov	x0, x19
  463730:	str	x2, [x6, w4, sxtw #3]
  463734:	str	w5, [x19, #56]
  463738:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  46373c:	mov	x20, x0
  463740:	str	x0, [sp, #72]
  463744:	ldp	x21, x22, [sp, #32]
  463748:	ldr	x23, [sp, #48]
  46374c:	b	462d58 <_obstack_memory_used@@Base+0xe9b8>
  463750:	add	x4, x4, #0x3
  463754:	stp	x21, x22, [sp, #32]
  463758:	mov	w1, #0x1                   	// #1
  46375c:	ldr	w21, [x19, #76]
  463760:	mov	x0, x19
  463764:	str	x4, [x19, #24]
  463768:	str	w1, [x19, #76]
  46376c:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  463770:	mov	x20, x0
  463774:	str	w21, [x19, #76]
  463778:	ldp	x21, x22, [sp, #32]
  46377c:	b	4631e0 <_obstack_memory_used@@Base+0xee40>
  463780:	ldp	x21, x22, [sp, #32]
  463784:	ldr	x23, [sp, #48]
  463788:	b	462c00 <_obstack_memory_used@@Base+0xe860>
  46378c:	mov	x0, #0x0                   	// #0
  463790:	stp	x21, x22, [sp, #32]
  463794:	str	x23, [sp, #48]
  463798:	str	wzr, [x0]
  46379c:	brk	#0x3e8
  4637a0:	mov	x0, #0x0                   	// #0
  4637a4:	str	xzr, [sp, #72]
  4637a8:	stp	x21, x22, [sp, #32]
  4637ac:	str	x23, [sp, #48]
  4637b0:	ldr	x0, [x0, #8]
  4637b4:	brk	#0x3e8
  4637b8:	stp	x29, x30, [sp, #-32]!
  4637bc:	mov	x29, sp
  4637c0:	ldr	x1, [x0, #24]
  4637c4:	stp	x19, x20, [sp, #16]
  4637c8:	mov	x19, x0
  4637cc:	ldrb	w10, [x1]
  4637d0:	cbz	w10, 463894 <_obstack_memory_used@@Base+0xf4f4>
  4637d4:	add	x2, x1, #0x1
  4637d8:	str	x2, [x0, #24]
  4637dc:	ldrb	w10, [x1, #1]
  4637e0:	ldrb	w8, [x1]
  4637e4:	cbnz	w10, 46389c <_obstack_memory_used@@Base+0xf4fc>
  4637e8:	adrp	x5, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  4637ec:	add	x5, x5, #0xa08
  4637f0:	add	x5, x5, #0x5c8
  4637f4:	mov	w4, #0x43                  	// #67
  4637f8:	mov	w2, #0x0                   	// #0
  4637fc:	mov	w7, #0x18                  	// #24
  463800:	sub	w1, w4, w2
  463804:	add	w1, w1, w1, lsr #31
  463808:	add	w1, w2, w1, asr #1
  46380c:	smull	x3, w1, w7
  463810:	add	x9, x5, x3
  463814:	ldr	x3, [x5, x3]
  463818:	ldrb	w6, [x3]
  46381c:	cmp	w6, w8
  463820:	b.eq	463844 <_obstack_memory_used@@Base+0xf4a4>  // b.none
  463824:	b.ls	46388c <_obstack_memory_used@@Base+0xf4ec>  // b.plast
  463828:	mov	w4, w1
  46382c:	cmp	w2, w4
  463830:	b.ne	463800 <_obstack_memory_used@@Base+0xf460>  // b.any
  463834:	mov	x0, #0x0                   	// #0
  463838:	ldp	x19, x20, [sp, #16]
  46383c:	ldp	x29, x30, [sp], #32
  463840:	ret
  463844:	ldrb	w3, [x3, #1]
  463848:	cmp	w3, w10
  46384c:	b.ne	463824 <_obstack_memory_used@@Base+0xf484>  // b.any
  463850:	ldp	w0, w1, [x19, #40]
  463854:	cmp	w0, w1
  463858:	b.ge	463834 <_obstack_memory_used@@Base+0xf494>  // b.tcont
  46385c:	ldr	x2, [x19, #32]
  463860:	smull	x7, w0, w7
  463864:	add	w1, w0, #0x1
  463868:	mov	w3, #0x32                  	// #50
  46386c:	add	x0, x2, x7
  463870:	str	wzr, [x0, #4]
  463874:	str	w1, [x19, #40]
  463878:	str	w3, [x2, x7]
  46387c:	str	x9, [x0, #8]
  463880:	ldp	x19, x20, [sp, #16]
  463884:	ldp	x29, x30, [sp], #32
  463888:	ret
  46388c:	add	w2, w1, #0x1
  463890:	b	46382c <_obstack_memory_used@@Base+0xf48c>
  463894:	mov	w8, #0x0                   	// #0
  463898:	b	4637e8 <_obstack_memory_used@@Base+0xf448>
  46389c:	add	x2, x1, #0x2
  4638a0:	str	x2, [x0, #24]
  4638a4:	cmp	w8, #0x76
  4638a8:	ldrb	w10, [x1, #1]
  4638ac:	b.ne	463908 <_obstack_memory_used@@Base+0xf568>  // b.any
  4638b0:	sub	w11, w10, #0x30
  4638b4:	and	w1, w11, #0xff
  4638b8:	cmp	w1, #0x9
  4638bc:	b.hi	4637e8 <_obstack_memory_used@@Base+0xf448>  // b.pmore
  4638c0:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  4638c4:	mov	x2, x0
  4638c8:	ldp	w1, w0, [x19, #40]
  4638cc:	cmp	w1, w0
  4638d0:	b.ge	463834 <_obstack_memory_used@@Base+0xf494>  // b.tcont
  4638d4:	mov	w0, #0x18                  	// #24
  4638d8:	add	w4, w1, #0x1
  4638dc:	ldr	x3, [x19, #32]
  4638e0:	smull	x1, w1, w0
  4638e4:	add	x0, x3, x1
  4638e8:	str	wzr, [x0, #4]
  4638ec:	str	w4, [x19, #40]
  4638f0:	cbz	x2, 463834 <_obstack_memory_used@@Base+0xf494>
  4638f4:	mov	x4, #0x33                  	// #51
  4638f8:	str	x4, [x3, x1]
  4638fc:	str	w11, [x0, #8]
  463900:	str	x2, [x0, #16]
  463904:	b	463838 <_obstack_memory_used@@Base+0xf498>
  463908:	cmp	w10, #0x76
  46390c:	mov	w1, #0x63                  	// #99
  463910:	ccmp	w8, w1, #0x0, eq  // eq = none
  463914:	b.ne	4637e8 <_obstack_memory_used@@Base+0xf448>  // b.any
  463918:	ldp	w1, w20, [x0, #76]
  46391c:	cmp	w1, #0x0
  463920:	cset	w1, eq  // eq = none
  463924:	str	w1, [x0, #80]
  463928:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  46392c:	mov	x2, x0
  463930:	ldr	w1, [x19, #80]
  463934:	mov	x3, #0x0                   	// #0
  463938:	cbz	w1, 463958 <_obstack_memory_used@@Base+0xf5b8>
  46393c:	mov	x0, x19
  463940:	mov	w1, #0x35                  	// #53
  463944:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463948:	str	w20, [x19, #80]
  46394c:	ldp	x19, x20, [sp, #16]
  463950:	ldp	x29, x30, [sp], #32
  463954:	ret
  463958:	mov	x0, x19
  46395c:	mov	w1, #0x34                  	// #52
  463960:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463964:	str	w20, [x19, #80]
  463968:	b	46394c <_obstack_memory_used@@Base+0xf5ac>
  46396c:	nop
  463970:	stp	x29, x30, [sp, #-64]!
  463974:	mov	x29, sp
  463978:	stp	x19, x20, [sp, #16]
  46397c:	mov	x19, x0
  463980:	mov	w0, #0x2e                  	// #46
  463984:	str	xzr, [sp, #56]
  463988:	ldr	x2, [x19, #24]
  46398c:	ldrb	w1, [x2]
  463990:	cmp	w1, #0x45
  463994:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  463998:	ccmp	w1, w0, #0x4, ne  // ne = any
  46399c:	b.eq	463a30 <_obstack_memory_used@@Base+0xf690>  // b.none
  4639a0:	add	x20, sp, #0x38
  4639a4:	stp	x21, x22, [sp, #32]
  4639a8:	mov	w22, w0
  4639ac:	mov	w21, #0x4f                  	// #79
  4639b0:	cmp	w1, #0x52
  4639b4:	mov	x0, x19
  4639b8:	ccmp	w1, w21, #0x4, ne  // ne = any
  4639bc:	b.ne	4639cc <_obstack_memory_used@@Base+0xf62c>  // b.any
  4639c0:	ldrb	w1, [x2, #1]
  4639c4:	cmp	w1, #0x45
  4639c8:	b.eq	463a0c <_obstack_memory_used@@Base+0xf66c>  // b.none
  4639cc:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4639d0:	mov	x2, x0
  4639d4:	mov	x3, #0x0                   	// #0
  4639d8:	mov	x0, x19
  4639dc:	mov	w1, #0x2e                  	// #46
  4639e0:	cbz	x2, 463a2c <_obstack_memory_used@@Base+0xf68c>
  4639e4:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4639e8:	str	x0, [x20]
  4639ec:	add	x20, x0, #0x10
  4639f0:	cbz	x0, 463a2c <_obstack_memory_used@@Base+0xf68c>
  4639f4:	ldr	x2, [x19, #24]
  4639f8:	ldrb	w1, [x2]
  4639fc:	cmp	w1, #0x45
  463a00:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  463a04:	ccmp	w1, w22, #0x4, ne  // ne = any
  463a08:	b.ne	4639b0 <_obstack_memory_used@@Base+0xf610>  // b.any
  463a0c:	ldr	x0, [sp, #56]
  463a10:	cbz	x0, 463a2c <_obstack_memory_used@@Base+0xf68c>
  463a14:	ldr	x1, [x0, #16]
  463a18:	cbz	x1, 463a40 <_obstack_memory_used@@Base+0xf6a0>
  463a1c:	ldp	x21, x22, [sp, #32]
  463a20:	ldp	x19, x20, [sp, #16]
  463a24:	ldp	x29, x30, [sp], #64
  463a28:	ret
  463a2c:	ldp	x21, x22, [sp, #32]
  463a30:	mov	x0, #0x0                   	// #0
  463a34:	ldp	x19, x20, [sp, #16]
  463a38:	ldp	x29, x30, [sp], #64
  463a3c:	ret
  463a40:	ldr	x1, [x0, #8]
  463a44:	ldr	w2, [x1]
  463a48:	cmp	w2, #0x27
  463a4c:	b.ne	463a1c <_obstack_memory_used@@Base+0xf67c>  // b.any
  463a50:	ldr	x1, [x1, #8]
  463a54:	ldr	w2, [x1, #28]
  463a58:	cmp	w2, #0x9
  463a5c:	b.ne	463a1c <_obstack_memory_used@@Base+0xf67c>  // b.any
  463a60:	ldr	w2, [x1, #8]
  463a64:	ldr	w1, [x19, #72]
  463a68:	ldp	x21, x22, [sp, #32]
  463a6c:	sub	w1, w1, w2
  463a70:	str	w1, [x19, #72]
  463a74:	str	xzr, [x0, #8]
  463a78:	b	463a20 <_obstack_memory_used@@Base+0xf680>
  463a7c:	nop
  463a80:	stp	x29, x30, [sp, #-96]!
  463a84:	cmp	w2, #0x0
  463a88:	mov	x29, sp
  463a8c:	stp	x19, x20, [sp, #16]
  463a90:	mov	x19, x0
  463a94:	mov	w0, #0x1b                  	// #27
  463a98:	stp	x21, x22, [sp, #32]
  463a9c:	mov	x20, x1
  463aa0:	mov	w22, #0x1c                  	// #28
  463aa4:	ldr	x4, [x19, #24]
  463aa8:	stp	x23, x24, [sp, #48]
  463aac:	mov	w23, #0x1d                  	// #29
  463ab0:	stp	x25, x26, [sp, #64]
  463ab4:	mov	w25, #0x1e                  	// #30
  463ab8:	csel	w25, w25, w0, ne  // ne = any
  463abc:	ldrb	w5, [x4]
  463ac0:	mov	w0, #0x1a                  	// #26
  463ac4:	csel	w23, w23, w0, ne  // ne = any
  463ac8:	mov	w0, #0x19                  	// #25
  463acc:	mov	w24, w2
  463ad0:	csel	w22, w22, w0, ne  // ne = any
  463ad4:	mov	x21, x1
  463ad8:	mov	x0, x4
  463adc:	mov	w26, #0x1                   	// #1
  463ae0:	bl	460a70 <_obstack_memory_used@@Base+0xc6d0>
  463ae4:	cbz	w0, 463c00 <_obstack_memory_used@@Base+0xf860>
  463ae8:	add	x0, x4, #0x1
  463aec:	str	x0, [x19, #24]
  463af0:	cmp	w5, #0x72
  463af4:	b.eq	463bc0 <_obstack_memory_used@@Base+0xf820>  // b.none
  463af8:	cmp	w5, #0x56
  463afc:	b.eq	463c60 <_obstack_memory_used@@Base+0xf8c0>  // b.none
  463b00:	cmp	w5, #0x4b
  463b04:	b.eq	463c78 <_obstack_memory_used@@Base+0xf8d8>  // b.none
  463b08:	ldrb	w0, [x4, #1]
  463b0c:	cbz	w0, 463ba0 <_obstack_memory_used@@Base+0xf800>
  463b10:	add	x0, x4, #0x2
  463b14:	str	x0, [x19, #24]
  463b18:	ldrb	w0, [x4, #1]
  463b1c:	cmp	w0, #0x78
  463b20:	b.eq	463c90 <_obstack_memory_used@@Base+0xf8f0>  // b.none
  463b24:	and	w1, w0, #0xffffffdf
  463b28:	cmp	w1, #0x4f
  463b2c:	and	w1, w1, #0xff
  463b30:	b.ne	463ca8 <_obstack_memory_used@@Base+0xf908>  // b.any
  463b34:	ldr	w2, [x19, #72]
  463b38:	cmp	w0, #0x4f
  463b3c:	add	w0, w2, #0x9
  463b40:	str	w0, [x19, #72]
  463b44:	b.ne	463cec <_obstack_memory_used@@Base+0xf94c>  // b.any
  463b48:	str	x27, [sp, #80]
  463b4c:	mov	x0, x19
  463b50:	ldr	w27, [x19, #76]
  463b54:	str	w26, [x19, #76]
  463b58:	bl	4615b8 <_obstack_memory_used@@Base+0xd218>
  463b5c:	str	w27, [x19, #76]
  463b60:	mov	x3, x0
  463b64:	cbz	x0, 463d04 <_obstack_memory_used@@Base+0xf964>
  463b68:	ldr	x0, [x19, #24]
  463b6c:	ldrb	w1, [x0]
  463b70:	cmp	w1, #0x45
  463b74:	b.ne	463d04 <_obstack_memory_used@@Base+0xf964>  // b.any
  463b78:	add	x0, x0, #0x1
  463b7c:	mov	w1, #0x4f                  	// #79
  463b80:	ldr	x27, [sp, #80]
  463b84:	str	x0, [x19, #24]
  463b88:	mov	x2, #0x0                   	// #0
  463b8c:	mov	x0, x19
  463b90:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463b94:	str	x0, [x20]
  463b98:	cbnz	x0, 463be8 <_obstack_memory_used@@Base+0xf848>
  463b9c:	nop
  463ba0:	mov	x20, #0x0                   	// #0
  463ba4:	mov	x0, x20
  463ba8:	ldp	x19, x20, [sp, #16]
  463bac:	ldp	x21, x22, [sp, #32]
  463bb0:	ldp	x23, x24, [sp, #48]
  463bb4:	ldp	x25, x26, [sp, #64]
  463bb8:	ldp	x29, x30, [sp], #96
  463bbc:	ret
  463bc0:	ldr	w0, [x19, #72]
  463bc4:	mov	w1, w22
  463bc8:	mov	x3, #0x0                   	// #0
  463bcc:	add	w0, w0, #0x9
  463bd0:	str	w0, [x19, #72]
  463bd4:	mov	x0, x19
  463bd8:	mov	x2, #0x0                   	// #0
  463bdc:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463be0:	str	x0, [x20]
  463be4:	cbz	x0, 463ba0 <_obstack_memory_used@@Base+0xf800>
  463be8:	ldr	x4, [x19, #24]
  463bec:	add	x20, x0, #0x8
  463bf0:	mov	x0, x4
  463bf4:	ldrb	w5, [x4]
  463bf8:	bl	460a70 <_obstack_memory_used@@Base+0xc6d0>
  463bfc:	cbnz	w0, 463ae8 <_obstack_memory_used@@Base+0xf748>
  463c00:	cmp	w5, #0x46
  463c04:	eor	w24, w24, #0x1
  463c08:	cset	w0, eq  // eq = none
  463c0c:	tst	w24, w0
  463c10:	b.eq	463ba4 <_obstack_memory_used@@Base+0xf804>  // b.none
  463c14:	cmp	x20, x21
  463c18:	b.eq	463ba4 <_obstack_memory_used@@Base+0xf804>  // b.none
  463c1c:	mov	w3, #0x1d                  	// #29
  463c20:	mov	w2, #0x1e                  	// #30
  463c24:	mov	w1, #0x1c                  	// #28
  463c28:	b	463c40 <_obstack_memory_used@@Base+0xf8a0>
  463c2c:	cmp	w0, #0x19
  463c30:	b.eq	463cfc <_obstack_memory_used@@Base+0xf95c>  // b.none
  463c34:	add	x21, x21, #0x8
  463c38:	cmp	x20, x21
  463c3c:	b.eq	463ba4 <_obstack_memory_used@@Base+0xf804>  // b.none
  463c40:	ldr	x21, [x21]
  463c44:	ldr	w0, [x21]
  463c48:	cmp	w0, #0x1a
  463c4c:	b.eq	463cf4 <_obstack_memory_used@@Base+0xf954>  // b.none
  463c50:	cmp	w0, #0x1b
  463c54:	b.ne	463c2c <_obstack_memory_used@@Base+0xf88c>  // b.any
  463c58:	str	w2, [x21]
  463c5c:	b	463c34 <_obstack_memory_used@@Base+0xf894>
  463c60:	ldr	w0, [x19, #72]
  463c64:	mov	w1, w23
  463c68:	mov	x3, #0x0                   	// #0
  463c6c:	add	w0, w0, #0x9
  463c70:	str	w0, [x19, #72]
  463c74:	b	463bd4 <_obstack_memory_used@@Base+0xf834>
  463c78:	ldr	w0, [x19, #72]
  463c7c:	mov	w1, w25
  463c80:	mov	x3, #0x0                   	// #0
  463c84:	add	w0, w0, #0x6
  463c88:	str	w0, [x19, #72]
  463c8c:	b	463bd4 <_obstack_memory_used@@Base+0xf834>
  463c90:	ldr	w0, [x19, #72]
  463c94:	mov	x3, #0x0                   	// #0
  463c98:	mov	w1, #0x4d                  	// #77
  463c9c:	add	w0, w0, #0x11
  463ca0:	str	w0, [x19, #72]
  463ca4:	b	463bd4 <_obstack_memory_used@@Base+0xf834>
  463ca8:	cmp	w0, #0x77
  463cac:	b.ne	463ba0 <_obstack_memory_used@@Base+0xf800>  // b.any
  463cb0:	ldr	w1, [x19, #72]
  463cb4:	mov	x0, x19
  463cb8:	add	w1, w1, #0x6
  463cbc:	str	w1, [x19, #72]
  463cc0:	bl	463970 <_obstack_memory_used@@Base+0xf5d0>
  463cc4:	mov	x3, x0
  463cc8:	cbz	x0, 463ba0 <_obstack_memory_used@@Base+0xf800>
  463ccc:	ldr	x0, [x19, #24]
  463cd0:	ldrb	w1, [x0]
  463cd4:	cmp	w1, #0x45
  463cd8:	b.ne	463ba0 <_obstack_memory_used@@Base+0xf800>  // b.any
  463cdc:	add	x0, x0, #0x1
  463ce0:	mov	w1, #0x50                  	// #80
  463ce4:	str	x0, [x19, #24]
  463ce8:	b	463bd4 <_obstack_memory_used@@Base+0xf834>
  463cec:	mov	x3, #0x0                   	// #0
  463cf0:	b	463bd4 <_obstack_memory_used@@Base+0xf834>
  463cf4:	str	w3, [x21]
  463cf8:	b	463c34 <_obstack_memory_used@@Base+0xf894>
  463cfc:	str	w1, [x21]
  463d00:	b	463c34 <_obstack_memory_used@@Base+0xf894>
  463d04:	ldr	x27, [sp, #80]
  463d08:	b	463ba0 <_obstack_memory_used@@Base+0xf800>
  463d0c:	nop
  463d10:	stp	x29, x30, [sp, #-32]!
  463d14:	mov	x29, sp
  463d18:	stp	x19, x20, [sp, #16]
  463d1c:	mov	x19, x0
  463d20:	ldr	x0, [x0, #24]
  463d24:	ldrb	w2, [x0]
  463d28:	cmp	w2, #0x4a
  463d2c:	b.eq	463d90 <_obstack_memory_used@@Base+0xf9f0>  // b.none
  463d30:	cbz	w1, 463d6c <_obstack_memory_used@@Base+0xf9cc>
  463d34:	mov	x0, x19
  463d38:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  463d3c:	mov	x20, x0
  463d40:	cbz	x0, 463d80 <_obstack_memory_used@@Base+0xf9e0>
  463d44:	mov	x0, x19
  463d48:	bl	463970 <_obstack_memory_used@@Base+0xf5d0>
  463d4c:	mov	x3, x0
  463d50:	cbz	x0, 463d80 <_obstack_memory_used@@Base+0xf9e0>
  463d54:	mov	x2, x20
  463d58:	mov	x0, x19
  463d5c:	ldp	x19, x20, [sp, #16]
  463d60:	mov	w1, #0x29                  	// #41
  463d64:	ldp	x29, x30, [sp], #32
  463d68:	b	4600b0 <_obstack_memory_used@@Base+0xbd10>
  463d6c:	mov	x0, x19
  463d70:	mov	x20, #0x0                   	// #0
  463d74:	bl	463970 <_obstack_memory_used@@Base+0xf5d0>
  463d78:	mov	x3, x0
  463d7c:	cbnz	x0, 463d54 <_obstack_memory_used@@Base+0xf9b4>
  463d80:	mov	x0, #0x0                   	// #0
  463d84:	ldp	x19, x20, [sp, #16]
  463d88:	ldp	x29, x30, [sp], #32
  463d8c:	ret
  463d90:	add	x0, x0, #0x1
  463d94:	str	x0, [x19, #24]
  463d98:	b	463d34 <_obstack_memory_used@@Base+0xf994>
  463d9c:	nop
  463da0:	stp	x29, x30, [sp, #-32]!
  463da4:	mov	x29, sp
  463da8:	str	x19, [sp, #16]
  463dac:	mov	x19, x0
  463db0:	ldr	w0, [x0, #16]
  463db4:	tbnz	w0, #18, 463df0 <_obstack_memory_used@@Base+0xfa50>
  463db8:	ldr	w1, [x19, #84]
  463dbc:	cmp	w1, #0x800
  463dc0:	b.hi	463e00 <_obstack_memory_used@@Base+0xfa60>  // b.pmore
  463dc4:	ldr	x2, [x19, #24]
  463dc8:	add	w0, w1, #0x1
  463dcc:	str	w0, [x19, #84]
  463dd0:	mov	x0, #0x0                   	// #0
  463dd4:	ldrb	w3, [x2]
  463dd8:	cmp	w3, #0x46
  463ddc:	b.eq	463e10 <_obstack_memory_used@@Base+0xfa70>  // b.none
  463de0:	str	w1, [x19, #84]
  463de4:	ldr	x19, [sp, #16]
  463de8:	ldp	x29, x30, [sp], #32
  463dec:	ret
  463df0:	ldr	x2, [x19, #24]
  463df4:	ldrb	w0, [x2]
  463df8:	cmp	w0, #0x46
  463dfc:	b.eq	463e10 <_obstack_memory_used@@Base+0xfa70>  // b.none
  463e00:	mov	x0, #0x0                   	// #0
  463e04:	ldr	x19, [sp, #16]
  463e08:	ldp	x29, x30, [sp], #32
  463e0c:	ret
  463e10:	add	x4, x2, #0x1
  463e14:	str	x4, [x19, #24]
  463e18:	add	x3, x2, #0x2
  463e1c:	mov	w1, #0x1                   	// #1
  463e20:	ldrb	w2, [x2, #1]
  463e24:	mov	x0, x19
  463e28:	cmp	w2, #0x59
  463e2c:	csel	x2, x3, x4, eq  // eq = none
  463e30:	str	x2, [x19, #24]
  463e34:	bl	463d10 <_obstack_memory_used@@Base+0xf970>
  463e38:	mov	x1, x0
  463e3c:	mov	x0, x19
  463e40:	bl	460138 <_obstack_memory_used@@Base+0xbd98>
  463e44:	ldr	x1, [x19, #24]
  463e48:	ldrb	w2, [x1]
  463e4c:	cmp	w2, #0x45
  463e50:	b.eq	463e70 <_obstack_memory_used@@Base+0xfad0>  // b.none
  463e54:	mov	x0, #0x0                   	// #0
  463e58:	ldr	w1, [x19, #16]
  463e5c:	tbnz	w1, #18, 463e04 <_obstack_memory_used@@Base+0xfa64>
  463e60:	ldr	w1, [x19, #84]
  463e64:	sub	w1, w1, #0x1
  463e68:	str	w1, [x19, #84]
  463e6c:	b	463de4 <_obstack_memory_used@@Base+0xfa44>
  463e70:	add	x1, x1, #0x1
  463e74:	str	x1, [x19, #24]
  463e78:	b	463e58 <_obstack_memory_used@@Base+0xfab8>
  463e7c:	nop
  463e80:	stp	x29, x30, [sp, #-48]!
  463e84:	mov	x29, sp
  463e88:	ldr	x3, [x0, #24]
  463e8c:	stp	x19, x20, [sp, #16]
  463e90:	mov	x19, x0
  463e94:	ldrb	w2, [x3]
  463e98:	sub	w1, w2, #0x30
  463e9c:	and	w1, w1, #0xff
  463ea0:	cmp	w1, #0x9
  463ea4:	b.ls	463fb4 <_obstack_memory_used@@Base+0xfc14>  // b.plast
  463ea8:	sub	w1, w2, #0x61
  463eac:	and	w1, w1, #0xff
  463eb0:	cmp	w1, #0x19
  463eb4:	b.hi	463efc <_obstack_memory_used@@Base+0xfb5c>  // b.pmore
  463eb8:	cmp	w2, #0x6f
  463ebc:	b.eq	46407c <_obstack_memory_used@@Base+0xfcdc>  // b.none
  463ec0:	mov	x0, x19
  463ec4:	bl	4637b8 <_obstack_memory_used@@Base+0xf418>
  463ec8:	mov	x20, x0
  463ecc:	cbz	x0, 463edc <_obstack_memory_used@@Base+0xfb3c>
  463ed0:	ldr	w0, [x0]
  463ed4:	cmp	w0, #0x32
  463ed8:	b.eq	463fe0 <_obstack_memory_used@@Base+0xfc40>  // b.none
  463edc:	ldr	x0, [x19, #24]
  463ee0:	ldrb	w1, [x0]
  463ee4:	cmp	w1, #0x42
  463ee8:	b.eq	463fcc <_obstack_memory_used@@Base+0xfc2c>  // b.none
  463eec:	mov	x0, x20
  463ef0:	ldp	x19, x20, [sp, #16]
  463ef4:	ldp	x29, x30, [sp], #48
  463ef8:	ret
  463efc:	sub	w1, w2, #0x43
  463f00:	and	w1, w1, #0xff
  463f04:	cmp	w1, #0x1
  463f08:	b.ls	464094 <_obstack_memory_used@@Base+0xfcf4>  // b.plast
  463f0c:	cmp	w2, #0x4c
  463f10:	b.eq	464048 <_obstack_memory_used@@Base+0xfca8>  // b.none
  463f14:	cmp	w2, #0x55
  463f18:	b.ne	464068 <_obstack_memory_used@@Base+0xfcc8>  // b.any
  463f1c:	ldrb	w1, [x3, #1]
  463f20:	cmp	w1, #0x6c
  463f24:	b.eq	464158 <_obstack_memory_used@@Base+0xfdb8>  // b.none
  463f28:	cmp	w1, #0x74
  463f2c:	b.ne	464068 <_obstack_memory_used@@Base+0xfcc8>  // b.any
  463f30:	add	x1, x3, #0x1
  463f34:	str	x1, [x0, #24]
  463f38:	mov	x20, #0x0                   	// #0
  463f3c:	ldrb	w1, [x3, #1]
  463f40:	cmp	w1, #0x74
  463f44:	b.ne	463ee4 <_obstack_memory_used@@Base+0xfb44>  // b.any
  463f48:	add	x3, x3, #0x2
  463f4c:	str	x3, [x0, #24]
  463f50:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  463f54:	tbnz	w0, #31, 463edc <_obstack_memory_used@@Base+0xfb3c>
  463f58:	ldp	w1, w2, [x19, #40]
  463f5c:	cmp	w1, w2
  463f60:	b.ge	464320 <_obstack_memory_used@@Base+0xff80>  // b.tcont
  463f64:	ldp	x7, x3, [x19, #24]
  463f68:	mov	w2, #0x18                  	// #24
  463f6c:	add	w6, w1, #0x1
  463f70:	mov	w4, #0x48                  	// #72
  463f74:	smull	x1, w1, w2
  463f78:	sxtw	x0, w0
  463f7c:	ldp	w2, w5, [x19, #56]
  463f80:	add	x20, x3, x1
  463f84:	cmp	w2, w5
  463f88:	str	wzr, [x20, #4]
  463f8c:	str	w6, [x19, #40]
  463f90:	str	w4, [x3, x1]
  463f94:	str	x0, [x20, #8]
  463f98:	b.ge	464314 <_obstack_memory_used@@Base+0xff74>  // b.tcont
  463f9c:	ldr	x1, [x19, #48]
  463fa0:	add	w0, w2, #0x1
  463fa4:	str	x20, [x1, w2, sxtw #3]
  463fa8:	str	w0, [x19, #56]
  463fac:	ldrb	w1, [x7]
  463fb0:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  463fb4:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  463fb8:	mov	x20, x0
  463fbc:	ldr	x3, [x19, #24]
  463fc0:	ldrb	w1, [x3]
  463fc4:	cmp	w1, #0x42
  463fc8:	b.ne	463eec <_obstack_memory_used@@Base+0xfb4c>  // b.any
  463fcc:	mov	x1, x20
  463fd0:	mov	x0, x19
  463fd4:	ldp	x19, x20, [sp, #16]
  463fd8:	ldp	x29, x30, [sp], #48
  463fdc:	b	4606e0 <_obstack_memory_used@@Base+0xc340>
  463fe0:	ldr	x1, [x20, #8]
  463fe4:	ldr	w0, [x19, #72]
  463fe8:	ldr	x2, [x1]
  463fec:	add	w0, w0, #0x7
  463ff0:	ldr	w1, [x1, #16]
  463ff4:	add	w0, w0, w1
  463ff8:	str	w0, [x19, #72]
  463ffc:	ldrb	w0, [x2]
  464000:	cmp	w0, #0x6c
  464004:	b.ne	463edc <_obstack_memory_used@@Base+0xfb3c>  // b.any
  464008:	ldrb	w0, [x2, #1]
  46400c:	cmp	w0, #0x69
  464010:	b.ne	463edc <_obstack_memory_used@@Base+0xfb3c>  // b.any
  464014:	ldrb	w0, [x2, #2]
  464018:	cbnz	w0, 463edc <_obstack_memory_used@@Base+0xfb3c>
  46401c:	mov	x0, x19
  464020:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  464024:	mov	x2, x20
  464028:	mov	x3, x0
  46402c:	mov	w1, #0x37                  	// #55
  464030:	mov	x0, x19
  464034:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  464038:	mov	x20, x0
  46403c:	ldr	x3, [x19, #24]
  464040:	ldrb	w1, [x3]
  464044:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464048:	add	x3, x3, #0x1
  46404c:	str	x3, [x0, #24]
  464050:	bl	460560 <_obstack_memory_used@@Base+0xc1c0>
  464054:	mov	x20, x0
  464058:	cbz	x0, 464068 <_obstack_memory_used@@Base+0xfcc8>
  46405c:	mov	x0, x19
  464060:	bl	460ac8 <_obstack_memory_used@@Base+0xc728>
  464064:	cbnz	w0, 463edc <_obstack_memory_used@@Base+0xfb3c>
  464068:	mov	x20, #0x0                   	// #0
  46406c:	mov	x0, x20
  464070:	ldp	x19, x20, [sp, #16]
  464074:	ldp	x29, x30, [sp], #48
  464078:	ret
  46407c:	ldrb	w0, [x3, #1]
  464080:	cmp	w0, #0x6e
  464084:	b.ne	463ec0 <_obstack_memory_used@@Base+0xfb20>  // b.any
  464088:	add	x3, x3, #0x2
  46408c:	str	x3, [x19, #24]
  464090:	b	463ec0 <_obstack_memory_used@@Base+0xfb20>
  464094:	ldr	x0, [x0, #64]
  464098:	cbz	x0, 4640ac <_obstack_memory_used@@Base+0xfd0c>
  46409c:	ldr	w1, [x0]
  4640a0:	cbz	w1, 464128 <_obstack_memory_used@@Base+0xfd88>
  4640a4:	cmp	w1, #0x18
  4640a8:	b.eq	464128 <_obstack_memory_used@@Base+0xfd88>  // b.none
  4640ac:	cmp	w2, #0x43
  4640b0:	b.eq	464208 <_obstack_memory_used@@Base+0xfe68>  // b.none
  4640b4:	ldrb	w1, [x3, #1]
  4640b8:	cmp	w1, #0x32
  4640bc:	b.eq	46430c <_obstack_memory_used@@Base+0xff6c>  // b.none
  4640c0:	b.hi	46427c <_obstack_memory_used@@Base+0xfedc>  // b.pmore
  4640c4:	cmp	w1, #0x30
  4640c8:	b.eq	4642a8 <_obstack_memory_used@@Base+0xff08>  // b.none
  4640cc:	cmp	w1, #0x31
  4640d0:	mov	w4, #0x2                   	// #2
  4640d4:	b.ne	464290 <_obstack_memory_used@@Base+0xfef0>  // b.any
  4640d8:	add	x1, x3, #0x2
  4640dc:	ldr	w2, [x19, #44]
  4640e0:	str	x1, [x19, #24]
  4640e4:	ldr	w1, [x19, #40]
  4640e8:	cmp	w1, w2
  4640ec:	b.ge	46429c <_obstack_memory_used@@Base+0xfefc>  // b.tcont
  4640f0:	mov	w6, #0x18                  	// #24
  4640f4:	add	w5, w1, #0x1
  4640f8:	ldr	x2, [x19, #32]
  4640fc:	smull	x1, w1, w6
  464100:	add	x20, x2, x1
  464104:	str	wzr, [x20, #4]
  464108:	str	w5, [x19, #40]
  46410c:	cbz	x0, 46429c <_obstack_memory_used@@Base+0xfefc>
  464110:	mov	x5, #0x8                   	// #8
  464114:	str	x5, [x2, x1]
  464118:	str	w4, [x20, #8]
  46411c:	str	x0, [x20, #16]
  464120:	ldrb	w1, [x3, #2]
  464124:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464128:	ldr	w2, [x0, #16]
  46412c:	ldr	w1, [x19, #72]
  464130:	add	w1, w1, w2
  464134:	str	w1, [x19, #72]
  464138:	ldrb	w1, [x3]
  46413c:	cmp	w1, #0x43
  464140:	mov	w2, w1
  464144:	b.eq	464208 <_obstack_memory_used@@Base+0xfe68>  // b.none
  464148:	cmp	w1, #0x44
  46414c:	b.eq	4640b4 <_obstack_memory_used@@Base+0xfd14>  // b.none
  464150:	mov	x20, #0x0                   	// #0
  464154:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464158:	add	x1, x3, #0x1
  46415c:	str	x1, [x0, #24]
  464160:	mov	x20, #0x0                   	// #0
  464164:	ldrb	w1, [x3, #1]
  464168:	cmp	w1, #0x6c
  46416c:	b.ne	463ee4 <_obstack_memory_used@@Base+0xfb44>  // b.any
  464170:	add	x3, x3, #0x2
  464174:	str	x3, [x0, #24]
  464178:	bl	463970 <_obstack_memory_used@@Base+0xf5d0>
  46417c:	mov	x11, x0
  464180:	ldr	x0, [x19, #24]
  464184:	ldrb	w1, [x0]
  464188:	cbz	x11, 463ee4 <_obstack_memory_used@@Base+0xfb44>
  46418c:	cmp	w1, #0x45
  464190:	b.ne	463ee4 <_obstack_memory_used@@Base+0xfb44>  // b.any
  464194:	add	x0, x0, #0x1
  464198:	str	x0, [x19, #24]
  46419c:	mov	x0, x19
  4641a0:	bl	460468 <_obstack_memory_used@@Base+0xc0c8>
  4641a4:	tbnz	w0, #31, 464320 <_obstack_memory_used@@Base+0xff80>
  4641a8:	ldp	w1, w2, [x19, #40]
  4641ac:	ldr	x4, [x19, #24]
  4641b0:	cmp	w1, w2
  4641b4:	b.ge	464330 <_obstack_memory_used@@Base+0xff90>  // b.tcont
  4641b8:	mov	w2, #0x18                  	// #24
  4641bc:	add	w6, w1, #0x1
  4641c0:	ldr	x3, [x19, #32]
  4641c4:	smull	x1, w1, w2
  4641c8:	ldp	w2, w7, [x19, #56]
  4641cc:	add	x20, x3, x1
  4641d0:	mov	w5, #0x46                  	// #70
  4641d4:	cmp	w2, w7
  4641d8:	str	wzr, [x20, #4]
  4641dc:	str	w6, [x19, #40]
  4641e0:	str	w5, [x3, x1]
  4641e4:	str	x11, [x20, #8]
  4641e8:	str	w0, [x20, #16]
  4641ec:	b.ge	464330 <_obstack_memory_used@@Base+0xff90>  // b.tcont
  4641f0:	ldr	x1, [x19, #48]
  4641f4:	add	w0, w2, #0x1
  4641f8:	str	x20, [x1, w2, sxtw #3]
  4641fc:	str	w0, [x19, #56]
  464200:	ldrb	w1, [x4]
  464204:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464208:	str	x21, [sp, #32]
  46420c:	ldrb	w1, [x3, #1]
  464210:	cmp	w1, #0x49
  464214:	b.eq	4642b8 <_obstack_memory_used@@Base+0xff18>  // b.none
  464218:	sub	w2, w1, #0x31
  46421c:	and	w2, w2, #0xff
  464220:	cmp	w2, #0x4
  464224:	b.hi	464300 <_obstack_memory_used@@Base+0xff60>  // b.pmore
  464228:	sub	w21, w1, #0x30
  46422c:	add	x3, x3, #0x2
  464230:	str	x3, [x19, #24]
  464234:	ldp	w1, w2, [x19, #40]
  464238:	cmp	w1, w2
  46423c:	b.ge	46433c <_obstack_memory_used@@Base+0xff9c>  // b.tcont
  464240:	mov	w4, #0x18                  	// #24
  464244:	add	w3, w1, #0x1
  464248:	smull	x1, w1, w4
  46424c:	ldp	x4, x2, [x19, #24]
  464250:	add	x20, x2, x1
  464254:	str	wzr, [x20, #4]
  464258:	str	w3, [x19, #40]
  46425c:	cbz	x0, 4642f0 <_obstack_memory_used@@Base+0xff50>
  464260:	mov	x3, #0x7                   	// #7
  464264:	str	x3, [x2, x1]
  464268:	str	w21, [x20, #8]
  46426c:	str	x0, [x20, #16]
  464270:	ldr	x21, [sp, #32]
  464274:	ldrb	w1, [x4]
  464278:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  46427c:	cmp	w1, #0x34
  464280:	b.eq	4642b0 <_obstack_memory_used@@Base+0xff10>  // b.none
  464284:	cmp	w1, #0x35
  464288:	mov	w4, #0x5                   	// #5
  46428c:	b.eq	4640d8 <_obstack_memory_used@@Base+0xfd38>  // b.none
  464290:	mov	w1, w2
  464294:	mov	x20, #0x0                   	// #0
  464298:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  46429c:	ldrb	w1, [x3, #2]
  4642a0:	mov	x20, #0x0                   	// #0
  4642a4:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  4642a8:	mov	w4, #0x1                   	// #1
  4642ac:	b	4640d8 <_obstack_memory_used@@Base+0xfd38>
  4642b0:	mov	w4, #0x4                   	// #4
  4642b4:	b	4640d8 <_obstack_memory_used@@Base+0xfd38>
  4642b8:	add	x0, x3, #0x1
  4642bc:	str	x0, [x19, #24]
  4642c0:	ldrb	w1, [x3, #2]
  4642c4:	sub	w0, w1, #0x31
  4642c8:	and	w0, w0, #0xff
  4642cc:	cmp	w0, #0x4
  4642d0:	b.hi	464350 <_obstack_memory_used@@Base+0xffb0>  // b.pmore
  4642d4:	add	x3, x3, #0x3
  4642d8:	str	x3, [x19, #24]
  4642dc:	sub	w21, w1, #0x30
  4642e0:	mov	x0, x19
  4642e4:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4642e8:	ldr	x0, [x19, #64]
  4642ec:	b	464234 <_obstack_memory_used@@Base+0xfe94>
  4642f0:	ldrb	w1, [x4]
  4642f4:	mov	x20, #0x0                   	// #0
  4642f8:	ldr	x21, [sp, #32]
  4642fc:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464300:	mov	x20, #0x0                   	// #0
  464304:	ldr	x21, [sp, #32]
  464308:	b	46406c <_obstack_memory_used@@Base+0xfccc>
  46430c:	mov	w4, #0x3                   	// #3
  464310:	b	4640d8 <_obstack_memory_used@@Base+0xfd38>
  464314:	ldrb	w1, [x7]
  464318:	mov	x20, #0x0                   	// #0
  46431c:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464320:	ldr	x0, [x19, #24]
  464324:	mov	x20, #0x0                   	// #0
  464328:	ldrb	w1, [x0]
  46432c:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464330:	ldrb	w1, [x4]
  464334:	mov	x20, #0x0                   	// #0
  464338:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  46433c:	ldr	x0, [x19, #24]
  464340:	mov	x20, #0x0                   	// #0
  464344:	ldr	x21, [sp, #32]
  464348:	ldrb	w1, [x0]
  46434c:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464350:	ldrb	w1, [x3, #1]
  464354:	mov	x20, #0x0                   	// #0
  464358:	ldr	x21, [sp, #32]
  46435c:	b	463ee4 <_obstack_memory_used@@Base+0xfb44>
  464360:	ldr	x2, [x0, #24]
  464364:	ldrb	w1, [x2]
  464368:	cmp	w1, #0x4c
  46436c:	b.ne	464454 <_obstack_memory_used@@Base+0x100b4>  // b.any
  464370:	stp	x29, x30, [sp, #-32]!
  464374:	add	x1, x2, #0x1
  464378:	mov	w4, #0x5a                  	// #90
  46437c:	mov	x29, sp
  464380:	str	x19, [sp, #16]
  464384:	mov	x19, x0
  464388:	str	x1, [x0, #24]
  46438c:	ldrb	w3, [x2, #1]
  464390:	cmp	w3, #0x5f
  464394:	ccmp	w3, w4, #0x4, ne  // ne = any
  464398:	b.eq	464414 <_obstack_memory_used@@Base+0x10074>  // b.none
  46439c:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  4643a0:	mov	x2, x0
  4643a4:	cbz	x0, 464404 <_obstack_memory_used@@Base+0x10064>
  4643a8:	ldr	w0, [x0]
  4643ac:	cmp	w0, #0x27
  4643b0:	b.eq	4644cc <_obstack_memory_used@@Base+0x1012c>  // b.none
  4643b4:	ldr	x0, [x19, #24]
  4643b8:	mov	w1, #0x3d                  	// #61
  4643bc:	ldrb	w4, [x0]
  4643c0:	cmp	w4, #0x6e
  4643c4:	b.ne	4643dc <_obstack_memory_used@@Base+0x1003c>  // b.any
  4643c8:	add	x3, x0, #0x1
  4643cc:	str	x3, [x19, #24]
  4643d0:	mov	w1, #0x3e                  	// #62
  4643d4:	ldrb	w4, [x0, #1]
  4643d8:	mov	x0, x3
  4643dc:	cmp	w4, #0x45
  4643e0:	b.eq	4644f4 <_obstack_memory_used@@Base+0x10154>  // b.none
  4643e4:	add	x3, x0, #0x1
  4643e8:	b	4643fc <_obstack_memory_used@@Base+0x1005c>
  4643ec:	str	x3, [x19, #24]
  4643f0:	ldrb	w4, [x3], #1
  4643f4:	cmp	w4, #0x45
  4643f8:	b.eq	464478 <_obstack_memory_used@@Base+0x100d8>  // b.none
  4643fc:	mov	x5, x3
  464400:	cbnz	w4, 4643ec <_obstack_memory_used@@Base+0x1004c>
  464404:	mov	x0, #0x0                   	// #0
  464408:	ldr	x19, [sp, #16]
  46440c:	ldp	x29, x30, [sp], #32
  464410:	ret
  464414:	cmp	w3, #0x5f
  464418:	b.eq	46445c <_obstack_memory_used@@Base+0x100bc>  // b.none
  46441c:	add	x1, x1, #0x1
  464420:	str	x1, [x19, #24]
  464424:	mov	x0, x19
  464428:	mov	w1, #0x0                   	// #0
  46442c:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  464430:	ldr	x1, [x19, #24]
  464434:	ldrb	w2, [x1]
  464438:	cmp	w2, #0x45
  46443c:	b.ne	464404 <_obstack_memory_used@@Base+0x10064>  // b.any
  464440:	add	x1, x1, #0x1
  464444:	str	x1, [x19, #24]
  464448:	ldr	x19, [sp, #16]
  46444c:	ldp	x29, x30, [sp], #32
  464450:	ret
  464454:	mov	x0, #0x0                   	// #0
  464458:	ret
  46445c:	add	x1, x2, #0x2
  464460:	str	x1, [x19, #24]
  464464:	mov	x0, #0x0                   	// #0
  464468:	ldrb	w2, [x2, #2]
  46446c:	cmp	w2, w4
  464470:	b.ne	464438 <_obstack_memory_used@@Base+0x10098>  // b.any
  464474:	b	46441c <_obstack_memory_used@@Base+0x1007c>
  464478:	sub	w5, w5, w0
  46447c:	ldp	w3, w4, [x19, #40]
  464480:	cmp	w3, w4
  464484:	b.ge	4644ec <_obstack_memory_used@@Base+0x1014c>  // b.tcont
  464488:	mov	w4, #0x18                  	// #24
  46448c:	add	w7, w3, #0x1
  464490:	ldr	x6, [x19, #32]
  464494:	smull	x4, w3, w4
  464498:	cmp	w5, #0x0
  46449c:	add	x3, x6, x4
  4644a0:	str	wzr, [x3, #4]
  4644a4:	str	w7, [x19, #40]
  4644a8:	b.le	4644ec <_obstack_memory_used@@Base+0x1014c>
  4644ac:	str	xzr, [x6, x4]
  4644b0:	str	x0, [x3, #8]
  4644b4:	str	w5, [x3, #16]
  4644b8:	mov	x0, x19
  4644bc:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  4644c0:	ldr	x1, [x19, #24]
  4644c4:	ldrb	w2, [x1]
  4644c8:	b	464438 <_obstack_memory_used@@Base+0x10098>
  4644cc:	ldr	x0, [x2, #8]
  4644d0:	ldr	w1, [x0, #28]
  4644d4:	cbz	w1, 4643b4 <_obstack_memory_used@@Base+0x10014>
  4644d8:	ldr	w1, [x0, #8]
  4644dc:	ldr	w0, [x19, #72]
  4644e0:	sub	w0, w0, w1
  4644e4:	str	w0, [x19, #72]
  4644e8:	b	4643b4 <_obstack_memory_used@@Base+0x10014>
  4644ec:	mov	x3, #0x0                   	// #0
  4644f0:	b	4644b8 <_obstack_memory_used@@Base+0x10118>
  4644f4:	mov	w5, #0x0                   	// #0
  4644f8:	b	46447c <_obstack_memory_used@@Base+0x100dc>
  4644fc:	nop
  464500:	stp	x29, x30, [sp, #-224]!
  464504:	mov	x29, sp
  464508:	stp	x19, x20, [sp, #16]
  46450c:	mov	x19, x0
  464510:	cbz	x2, 464598 <_obstack_memory_used@@Base+0x101f8>
  464514:	stp	x21, x22, [sp, #32]
  464518:	ldr	w22, [x0, #304]
  46451c:	cbnz	w22, 464560 <_obstack_memory_used@@Base+0x101c0>
  464520:	ldr	w0, [x2]
  464524:	mov	x20, x2
  464528:	cmp	w0, #0x50
  46452c:	b.ls	464540 <_obstack_memory_used@@Base+0x101a0>  // b.plast
  464530:	mov	w0, #0x1                   	// #1
  464534:	ldp	x21, x22, [sp, #32]
  464538:	str	w0, [x19, #304]
  46453c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  464540:	mov	w21, w1
  464544:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  464548:	add	x1, x1, #0xabc
  46454c:	stp	x23, x24, [sp, #48]
  464550:	ldrh	w1, [x1, w0, uxtw #1]
  464554:	adr	x2, 464560 <_obstack_memory_used@@Base+0x101c0>
  464558:	add	x1, x2, w1, sxth #2
  46455c:	br	x1
  464560:	ldp	x21, x22, [sp, #32]
  464564:	ldp	x19, x20, [sp, #16]
  464568:	ldp	x29, x30, [sp], #224
  46456c:	ret
  464570:	ldr	x0, [x20, #16]
  464574:	ldr	w1, [x0]
  464578:	cmp	w1, #0x3b
  46457c:	b.ne	464590 <_obstack_memory_used@@Base+0x101f0>  // b.any
  464580:	ldr	x0, [x0, #16]
  464584:	ldr	w0, [x0]
  464588:	cmp	w0, #0x3c
  46458c:	b.eq	467a78 <_obstack_memory_used@@Base+0x136d8>  // b.none
  464590:	ldp	x21, x22, [sp, #32]
  464594:	ldp	x23, x24, [sp, #48]
  464598:	mov	w0, #0x1                   	// #1
  46459c:	str	w0, [x19, #304]
  4645a0:	ldp	x19, x20, [sp, #16]
  4645a4:	ldp	x29, x30, [sp], #224
  4645a8:	ret
  4645ac:	ldp	x1, x2, [x19, #288]
  4645b0:	add	x0, sp, #0x60
  4645b4:	stp	x2, x20, [sp, #96]
  4645b8:	str	wzr, [sp, #112]
  4645bc:	str	x1, [sp, #120]
  4645c0:	str	x0, [x19, #296]
  4645c4:	ldr	x2, [x20, #8]
  4645c8:	mov	x0, x19
  4645cc:	mov	w1, w21
  4645d0:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4645d4:	ldr	w0, [sp, #112]
  4645d8:	cbz	w0, 466984 <_obstack_memory_used@@Base+0x125e4>
  4645dc:	ldr	x0, [sp, #96]
  4645e0:	str	x0, [x19, #296]
  4645e4:	cbz	w22, 4661b8 <_obstack_memory_used@@Base+0x11e18>
  4645e8:	ldp	x21, x22, [sp, #32]
  4645ec:	str	x23, [x19, #288]
  4645f0:	ldp	x23, x24, [sp, #48]
  4645f4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4645f8:	ldr	x4, [x19, #296]
  4645fc:	cbz	x4, 464738 <_obstack_memory_used@@Base+0x10398>
  464600:	mov	x1, x4
  464604:	nop
  464608:	ldr	w2, [x1, #16]
  46460c:	cbnz	w2, 46462c <_obstack_memory_used@@Base+0x1028c>
  464610:	ldr	x2, [x1, #8]
  464614:	ldr	w2, [x2]
  464618:	sub	w3, w2, #0x19
  46461c:	cmp	w3, #0x2
  464620:	b.hi	4675d8 <_obstack_memory_used@@Base+0x13238>  // b.pmore
  464624:	cmp	w0, w2
  464628:	b.eq	4675f8 <_obstack_memory_used@@Base+0x13258>  // b.none
  46462c:	ldr	x1, [x1]
  464630:	cbnz	x1, 464608 <_obstack_memory_used@@Base+0x10268>
  464634:	b	464738 <_obstack_memory_used@@Base+0x10398>
  464638:	ldp	x23, x24, [sp, #48]
  46463c:	b	464530 <_obstack_memory_used@@Base+0x10190>
  464640:	ldr	x2, [x20, #8]
  464644:	mov	w22, #0x0                   	// #0
  464648:	ldr	w1, [x2]
  46464c:	cmp	w1, #0x27
  464650:	b.eq	466e60 <_obstack_memory_used@@Base+0x12ac0>  // b.none
  464654:	ldr	x1, [x19, #256]
  464658:	add	x0, x1, #0x1
  46465c:	cmp	x1, #0xff
  464660:	b.ne	46468c <_obstack_memory_used@@Base+0x102ec>  // b.any
  464664:	ldp	x3, x2, [x19, #272]
  464668:	strb	wzr, [x19, #255]
  46466c:	mov	x0, x19
  464670:	blr	x3
  464674:	ldr	x3, [x19, #320]
  464678:	mov	x0, #0x1                   	// #1
  46467c:	mov	x1, #0x0                   	// #0
  464680:	add	x3, x3, x0
  464684:	ldr	x2, [x20, #8]
  464688:	str	x3, [x19, #320]
  46468c:	str	x0, [x19, #256]
  464690:	mov	w0, #0x28                  	// #40
  464694:	strb	w0, [x19, x1]
  464698:	mov	w1, w21
  46469c:	strb	w0, [x19, #264]
  4646a0:	mov	x0, x19
  4646a4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4646a8:	ldr	x1, [x19, #256]
  4646ac:	cmp	x1, #0xff
  4646b0:	b.eq	467550 <_obstack_memory_used@@Base+0x131b0>  // b.none
  4646b4:	add	x3, x1, #0x1
  4646b8:	str	x3, [x19, #256]
  4646bc:	mov	w0, #0x29                  	// #41
  4646c0:	strb	w0, [x19, x1]
  4646c4:	strb	w0, [x19, #264]
  4646c8:	ldr	w0, [x20]
  4646cc:	cmp	w0, #0x3e
  4646d0:	b.eq	467614 <_obstack_memory_used@@Base+0x13274>  // b.none
  4646d4:	cmp	w22, #0x8
  4646d8:	b.eq	4673f4 <_obstack_memory_used@@Base+0x13054>  // b.none
  4646dc:	ldr	x2, [x20, #16]
  4646e0:	mov	w1, w21
  4646e4:	mov	x0, x19
  4646e8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4646ec:	ldp	x21, x22, [sp, #32]
  4646f0:	ldp	x23, x24, [sp, #48]
  4646f4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4646f8:	ldr	w2, [x19, #312]
  4646fc:	ldr	x0, [x20, #8]
  464700:	ldr	w1, [x0]
  464704:	cbnz	w2, 464714 <_obstack_memory_used@@Base+0x10374>
  464708:	cmp	w1, #0x5
  46470c:	mov	w22, #0x0                   	// #0
  464710:	b.eq	4679d4 <_obstack_memory_used@@Base+0x13634>  // b.none
  464714:	cmp	w1, #0x23
  464718:	ldr	x4, [x19, #296]
  46471c:	b.eq	466a2c <_obstack_memory_used@@Base+0x1268c>  // b.none
  464720:	ldr	w2, [x20]
  464724:	cmp	w2, w1
  464728:	b.eq	466a2c <_obstack_memory_used@@Base+0x1268c>  // b.none
  46472c:	cmp	w1, #0x24
  464730:	b.eq	466194 <_obstack_memory_used@@Base+0x11df4>  // b.none
  464734:	nop
  464738:	ldr	x1, [x19, #288]
  46473c:	add	x0, sp, #0x60
  464740:	stp	x4, x20, [sp, #96]
  464744:	str	wzr, [sp, #112]
  464748:	str	x1, [sp, #120]
  46474c:	str	x0, [x19, #296]
  464750:	b	4645c4 <_obstack_memory_used@@Base+0x10224>
  464754:	ldr	x2, [x20, #8]
  464758:	mov	w1, w21
  46475c:	mov	x0, x19
  464760:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464764:	tbz	w21, #2, 467398 <_obstack_memory_used@@Base+0x12ff8>
  464768:	ldr	x1, [x19, #256]
  46476c:	add	x0, x1, #0x1
  464770:	cmp	x1, #0xff
  464774:	b.ne	46479c <_obstack_memory_used@@Base+0x103fc>  // b.any
  464778:	ldp	x3, x2, [x19, #272]
  46477c:	strb	wzr, [x19, #255]
  464780:	mov	x0, x19
  464784:	blr	x3
  464788:	ldr	x2, [x19, #320]
  46478c:	mov	x0, #0x1                   	// #1
  464790:	mov	x1, #0x0                   	// #0
  464794:	add	x2, x2, x0
  464798:	str	x2, [x19, #320]
  46479c:	str	x0, [x19, #256]
  4647a0:	mov	w0, #0x2e                  	// #46
  4647a4:	strb	w0, [x19, x1]
  4647a8:	strb	w0, [x19, #264]
  4647ac:	ldr	x23, [x20, #16]
  4647b0:	ldr	w0, [x23]
  4647b4:	cmp	w0, #0x47
  4647b8:	b.eq	467650 <_obstack_memory_used@@Base+0x132b0>  // b.none
  4647bc:	mov	x2, x23
  4647c0:	mov	w1, w21
  4647c4:	mov	x0, x19
  4647c8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4647cc:	ldp	x21, x22, [sp, #32]
  4647d0:	ldp	x23, x24, [sp, #48]
  4647d4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4647d8:	ldp	x3, x4, [x19, #288]
  4647dc:	add	x0, sp, #0x60
  4647e0:	ldr	x2, [x20, #16]
  4647e4:	str	x0, [x19, #296]
  4647e8:	mov	w1, w21
  4647ec:	mov	x0, x19
  4647f0:	stp	x4, x20, [sp, #96]
  4647f4:	str	wzr, [sp, #112]
  4647f8:	str	x3, [sp, #120]
  4647fc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464800:	ldr	w0, [sp, #112]
  464804:	cbz	w0, 467314 <_obstack_memory_used@@Base+0x12f74>
  464808:	ldr	x0, [sp, #96]
  46480c:	ldp	x21, x22, [sp, #32]
  464810:	ldp	x23, x24, [sp, #48]
  464814:	str	x0, [x19, #296]
  464818:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46481c:	ldr	x2, [x20, #8]
  464820:	cbz	x2, 464830 <_obstack_memory_used@@Base+0x10490>
  464824:	mov	w1, w21
  464828:	mov	x0, x19
  46482c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464830:	ldr	x0, [x20, #16]
  464834:	cbz	x0, 4675c0 <_obstack_memory_used@@Base+0x13220>
  464838:	ldr	x22, [x19, #256]
  46483c:	cmp	x22, #0xfd
  464840:	b.ls	46486c <_obstack_memory_used@@Base+0x104cc>  // b.plast
  464844:	strb	wzr, [x19, x22]
  464848:	mov	x1, x22
  46484c:	mov	x0, x19
  464850:	mov	x22, #0x0                   	// #0
  464854:	ldp	x3, x2, [x19, #272]
  464858:	blr	x3
  46485c:	str	xzr, [x19, #256]
  464860:	ldr	x0, [x19, #320]
  464864:	add	x0, x0, #0x1
  464868:	str	x0, [x19, #320]
  46486c:	mov	w23, #0x2c                  	// #44
  464870:	mov	x24, #0x0                   	// #0
  464874:	b	464898 <_obstack_memory_used@@Base+0x104f8>
  464878:	mov	x0, x22
  46487c:	add	x22, x22, #0x1
  464880:	str	x22, [x19, #256]
  464884:	strb	w23, [x19, x0]
  464888:	strb	w23, [x19, #264]
  46488c:	mov	w23, #0x20                  	// #32
  464890:	cbnz	x24, 4669cc <_obstack_memory_used@@Base+0x1262c>
  464894:	mov	x24, #0x1                   	// #1
  464898:	cmp	x22, #0xff
  46489c:	b.ne	464878 <_obstack_memory_used@@Base+0x104d8>  // b.any
  4648a0:	ldp	x3, x2, [x19, #272]
  4648a4:	strb	wzr, [x19, #255]
  4648a8:	mov	x1, x22
  4648ac:	mov	x0, x19
  4648b0:	mov	x22, #0x1                   	// #1
  4648b4:	blr	x3
  4648b8:	ldr	x1, [x19, #320]
  4648bc:	mov	x0, #0x0                   	// #0
  4648c0:	add	x1, x1, x22
  4648c4:	str	x1, [x19, #320]
  4648c8:	b	464880 <_obstack_memory_used@@Base+0x104e0>
  4648cc:	ldr	x2, [x20, #16]
  4648d0:	mov	w1, w21
  4648d4:	mov	x0, x19
  4648d8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4648dc:	ldp	x21, x22, [sp, #32]
  4648e0:	ldp	x23, x24, [sp, #48]
  4648e4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4648e8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4648ec:	add	x24, x24, #0xf78
  4648f0:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4648f4:	add	x24, x24, #0x1c
  4648f8:	add	x22, x22, #0xf79
  4648fc:	mov	w23, #0x67                  	// #103
  464900:	ldr	x1, [x19, #256]
  464904:	b	464928 <_obstack_memory_used@@Base+0x10588>
  464908:	mov	x0, x1
  46490c:	add	x1, x1, #0x1
  464910:	str	x1, [x19, #256]
  464914:	cmp	x22, x24
  464918:	strb	w23, [x19, x0]
  46491c:	strb	w23, [x19, #264]
  464920:	b.eq	4665cc <_obstack_memory_used@@Base+0x1222c>  // b.none
  464924:	ldrb	w23, [x22], #1
  464928:	cmp	x1, #0xff
  46492c:	b.ne	464908 <_obstack_memory_used@@Base+0x10568>  // b.any
  464930:	ldp	x3, x2, [x19, #272]
  464934:	strb	wzr, [x19, #255]
  464938:	mov	x0, x19
  46493c:	blr	x3
  464940:	ldr	x2, [x19, #320]
  464944:	mov	x1, #0x1                   	// #1
  464948:	mov	x0, #0x0                   	// #0
  46494c:	add	x2, x2, x1
  464950:	str	x2, [x19, #320]
  464954:	b	464910 <_obstack_memory_used@@Base+0x10570>
  464958:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46495c:	add	x22, x22, #0xf98
  464960:	add	x24, x22, #0x8
  464964:	mov	w23, #0x7b                  	// #123
  464968:	ldr	x1, [x19, #256]
  46496c:	b	464994 <_obstack_memory_used@@Base+0x105f4>
  464970:	mov	x0, x1
  464974:	add	x1, x1, #0x1
  464978:	str	x1, [x19, #256]
  46497c:	add	x22, x22, #0x1
  464980:	strb	w23, [x19, x0]
  464984:	cmp	x24, x22
  464988:	strb	w23, [x19, #264]
  46498c:	b.eq	4665e8 <_obstack_memory_used@@Base+0x12248>  // b.none
  464990:	ldrb	w23, [x22]
  464994:	cmp	x1, #0xff
  464998:	b.ne	464970 <_obstack_memory_used@@Base+0x105d0>  // b.any
  46499c:	ldp	x3, x2, [x19, #272]
  4649a0:	strb	wzr, [x19, #255]
  4649a4:	mov	x0, x19
  4649a8:	blr	x3
  4649ac:	ldr	x2, [x19, #320]
  4649b0:	mov	x1, #0x1                   	// #1
  4649b4:	mov	x0, #0x0                   	// #0
  4649b8:	add	x2, x2, x1
  4649bc:	str	x2, [x19, #320]
  4649c0:	b	464978 <_obstack_memory_used@@Base+0x105d8>
  4649c4:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4649c8:	add	x23, x23, #0xfb0
  4649cc:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4649d0:	add	x23, x23, #0xe
  4649d4:	add	x21, x21, #0xfb1
  4649d8:	mov	w22, #0x7b                  	// #123
  4649dc:	ldr	x1, [x19, #256]
  4649e0:	b	464a04 <_obstack_memory_used@@Base+0x10664>
  4649e4:	mov	x0, x1
  4649e8:	add	x1, x1, #0x1
  4649ec:	str	x1, [x19, #256]
  4649f0:	cmp	x23, x21
  4649f4:	strb	w22, [x19, x0]
  4649f8:	strb	w22, [x19, #264]
  4649fc:	b.eq	4664dc <_obstack_memory_used@@Base+0x1213c>  // b.none
  464a00:	ldrb	w22, [x21], #1
  464a04:	cmp	x1, #0xff
  464a08:	b.ne	4649e4 <_obstack_memory_used@@Base+0x10644>  // b.any
  464a0c:	ldp	x3, x2, [x19, #272]
  464a10:	strb	wzr, [x19, #255]
  464a14:	mov	x0, x19
  464a18:	blr	x3
  464a1c:	ldr	x2, [x19, #320]
  464a20:	mov	x1, #0x1                   	// #1
  464a24:	mov	x0, #0x0                   	// #0
  464a28:	add	x2, x2, x1
  464a2c:	str	x2, [x19, #320]
  464a30:	b	4649ec <_obstack_memory_used@@Base+0x1064c>
  464a34:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464a38:	add	x24, x24, #0xe58
  464a3c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464a40:	add	x24, x24, #0x16
  464a44:	add	x22, x22, #0xe59
  464a48:	mov	w23, #0x74                  	// #116
  464a4c:	ldr	x1, [x19, #256]
  464a50:	b	464a74 <_obstack_memory_used@@Base+0x106d4>
  464a54:	mov	x0, x1
  464a58:	add	x1, x1, #0x1
  464a5c:	str	x1, [x19, #256]
  464a60:	cmp	x24, x22
  464a64:	strb	w23, [x19, x0]
  464a68:	strb	w23, [x19, #264]
  464a6c:	b.eq	4665b0 <_obstack_memory_used@@Base+0x12210>  // b.none
  464a70:	ldrb	w23, [x22], #1
  464a74:	cmp	x1, #0xff
  464a78:	b.ne	464a54 <_obstack_memory_used@@Base+0x106b4>  // b.any
  464a7c:	ldp	x3, x2, [x19, #272]
  464a80:	strb	wzr, [x19, #255]
  464a84:	mov	x0, x19
  464a88:	blr	x3
  464a8c:	ldr	x2, [x19, #320]
  464a90:	mov	x1, #0x1                   	// #1
  464a94:	mov	x0, #0x0                   	// #0
  464a98:	add	x2, x2, x1
  464a9c:	str	x2, [x19, #320]
  464aa0:	b	464a5c <_obstack_memory_used@@Base+0x106bc>
  464aa4:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464aa8:	add	x24, x24, #0xcd0
  464aac:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464ab0:	add	x24, x24, #0x1e
  464ab4:	add	x22, x22, #0xcd1
  464ab8:	mov	w23, #0x74                  	// #116
  464abc:	ldr	x1, [x19, #256]
  464ac0:	b	464ae4 <_obstack_memory_used@@Base+0x10744>
  464ac4:	mov	x0, x1
  464ac8:	add	x1, x1, #0x1
  464acc:	str	x1, [x19, #256]
  464ad0:	cmp	x24, x22
  464ad4:	strb	w23, [x19, x0]
  464ad8:	strb	w23, [x19, #264]
  464adc:	b.eq	4664c0 <_obstack_memory_used@@Base+0x12120>  // b.none
  464ae0:	ldrb	w23, [x22], #1
  464ae4:	cmp	x1, #0xff
  464ae8:	b.ne	464ac4 <_obstack_memory_used@@Base+0x10724>  // b.any
  464aec:	ldp	x3, x2, [x19, #272]
  464af0:	strb	wzr, [x19, #255]
  464af4:	mov	x0, x19
  464af8:	blr	x3
  464afc:	ldr	x2, [x19, #320]
  464b00:	mov	x1, #0x1                   	// #1
  464b04:	mov	x0, #0x0                   	// #0
  464b08:	add	x2, x2, x1
  464b0c:	str	x2, [x19, #320]
  464b10:	b	464acc <_obstack_memory_used@@Base+0x1072c>
  464b14:	ldp	x2, x20, [x20, #8]
  464b18:	cbz	x2, 464b28 <_obstack_memory_used@@Base+0x10788>
  464b1c:	mov	w1, w21
  464b20:	mov	x0, x19
  464b24:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464b28:	ldr	x1, [x19, #256]
  464b2c:	add	x0, x1, #0x1
  464b30:	cmp	x1, #0xff
  464b34:	b.ne	464b5c <_obstack_memory_used@@Base+0x107bc>  // b.any
  464b38:	ldp	x3, x2, [x19, #272]
  464b3c:	strb	wzr, [x19, #255]
  464b40:	mov	x0, x19
  464b44:	blr	x3
  464b48:	ldr	x2, [x19, #320]
  464b4c:	mov	x0, #0x1                   	// #1
  464b50:	mov	x1, #0x0                   	// #0
  464b54:	add	x2, x2, x0
  464b58:	str	x2, [x19, #320]
  464b5c:	str	x0, [x19, #256]
  464b60:	mov	w0, #0x7b                  	// #123
  464b64:	strb	w0, [x19, x1]
  464b68:	mov	x2, x20
  464b6c:	strb	w0, [x19, #264]
  464b70:	mov	w1, w21
  464b74:	mov	x0, x19
  464b78:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464b7c:	ldr	x1, [x19, #256]
  464b80:	add	x0, x1, #0x1
  464b84:	cmp	x1, #0xff
  464b88:	b.ne	464bb0 <_obstack_memory_used@@Base+0x10810>  // b.any
  464b8c:	ldp	x3, x2, [x19, #272]
  464b90:	strb	wzr, [x19, #255]
  464b94:	mov	x0, x19
  464b98:	blr	x3
  464b9c:	ldr	x2, [x19, #320]
  464ba0:	mov	x0, #0x1                   	// #1
  464ba4:	mov	x1, #0x0                   	// #0
  464ba8:	add	x2, x2, x0
  464bac:	str	x2, [x19, #320]
  464bb0:	str	x0, [x19, #256]
  464bb4:	mov	w0, #0x7d                  	// #125
  464bb8:	strb	w0, [x19, x1]
  464bbc:	strb	w0, [x19, #264]
  464bc0:	ldp	x21, x22, [sp, #32]
  464bc4:	ldp	x23, x24, [sp, #48]
  464bc8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  464bcc:	ldr	x22, [x20, #8]
  464bd0:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464bd4:	add	x20, x20, #0xea8
  464bd8:	mov	w21, #0x6f                  	// #111
  464bdc:	add	x24, x20, #0x8
  464be0:	ldr	w23, [x22, #16]
  464be4:	ldr	x1, [x19, #256]
  464be8:	b	464c10 <_obstack_memory_used@@Base+0x10870>
  464bec:	mov	x0, x1
  464bf0:	add	x1, x1, #0x1
  464bf4:	str	x1, [x19, #256]
  464bf8:	add	x20, x20, #0x1
  464bfc:	strb	w21, [x19, x0]
  464c00:	cmp	x24, x20
  464c04:	strb	w21, [x19, #264]
  464c08:	b.eq	4663e4 <_obstack_memory_used@@Base+0x12044>  // b.none
  464c0c:	ldrb	w21, [x20]
  464c10:	cmp	x1, #0xff
  464c14:	b.ne	464bec <_obstack_memory_used@@Base+0x1084c>  // b.any
  464c18:	ldp	x3, x2, [x19, #272]
  464c1c:	strb	wzr, [x19, #255]
  464c20:	mov	x0, x19
  464c24:	blr	x3
  464c28:	ldr	x2, [x19, #320]
  464c2c:	mov	x1, #0x1                   	// #1
  464c30:	mov	x0, #0x0                   	// #0
  464c34:	add	x2, x2, x1
  464c38:	str	x2, [x19, #320]
  464c3c:	b	464bf4 <_obstack_memory_used@@Base+0x10854>
  464c40:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464c44:	add	x22, x22, #0xeb8
  464c48:	add	x24, x22, #0x9
  464c4c:	mov	w23, #0x6f                  	// #111
  464c50:	ldr	x1, [x19, #256]
  464c54:	b	464c7c <_obstack_memory_used@@Base+0x108dc>
  464c58:	mov	x0, x1
  464c5c:	add	x1, x1, #0x1
  464c60:	str	x1, [x19, #256]
  464c64:	add	x22, x22, #0x1
  464c68:	strb	w23, [x19, x0]
  464c6c:	cmp	x22, x24
  464c70:	strb	w23, [x19, #264]
  464c74:	b.eq	466224 <_obstack_memory_used@@Base+0x11e84>  // b.none
  464c78:	ldrb	w23, [x22]
  464c7c:	cmp	x1, #0xff
  464c80:	b.ne	464c58 <_obstack_memory_used@@Base+0x108b8>  // b.any
  464c84:	ldp	x3, x2, [x19, #272]
  464c88:	strb	wzr, [x19, #255]
  464c8c:	mov	x0, x19
  464c90:	blr	x3
  464c94:	ldr	x2, [x19, #320]
  464c98:	mov	x1, #0x1                   	// #1
  464c9c:	mov	x0, #0x0                   	// #0
  464ca0:	add	x2, x2, x1
  464ca4:	str	x2, [x19, #320]
  464ca8:	b	464c60 <_obstack_memory_used@@Base+0x108c0>
  464cac:	ldr	x2, [x20, #8]
  464cb0:	mov	w1, w21
  464cb4:	mov	x0, x19
  464cb8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464cbc:	add	x22, x22, #0xfc0
  464cc0:	mov	w23, #0x20                  	// #32
  464cc4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464cc8:	add	x24, x22, #0x8
  464ccc:	ldr	x1, [x19, #256]
  464cd0:	b	464cf8 <_obstack_memory_used@@Base+0x10958>
  464cd4:	mov	x0, x1
  464cd8:	add	x1, x1, #0x1
  464cdc:	str	x1, [x19, #256]
  464ce0:	add	x22, x22, #0x1
  464ce4:	strb	w23, [x19, x0]
  464ce8:	cmp	x24, x22
  464cec:	strb	w23, [x19, #264]
  464cf0:	b.eq	4661c4 <_obstack_memory_used@@Base+0x11e24>  // b.none
  464cf4:	ldrb	w23, [x22]
  464cf8:	cmp	x1, #0xff
  464cfc:	b.ne	464cd4 <_obstack_memory_used@@Base+0x10934>  // b.any
  464d00:	ldp	x3, x2, [x19, #272]
  464d04:	strb	wzr, [x19, #255]
  464d08:	mov	x0, x19
  464d0c:	blr	x3
  464d10:	ldr	x2, [x19, #320]
  464d14:	mov	x1, #0x1                   	// #1
  464d18:	mov	x0, #0x0                   	// #0
  464d1c:	add	x2, x2, x1
  464d20:	str	x2, [x19, #320]
  464d24:	b	464cdc <_obstack_memory_used@@Base+0x1093c>
  464d28:	ldr	x2, [x20, #8]
  464d2c:	mov	w1, w21
  464d30:	mov	x0, x19
  464d34:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464d38:	ldp	x21, x22, [sp, #32]
  464d3c:	ldp	x23, x24, [sp, #48]
  464d40:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  464d44:	and	w22, w21, #0xffffff9f
  464d48:	ldr	x3, [x19, #296]
  464d4c:	tbnz	w21, #5, 467520 <_obstack_memory_used@@Base+0x13180>
  464d50:	ldr	x2, [x20, #8]
  464d54:	cbz	x2, 464d5c <_obstack_memory_used@@Base+0x109bc>
  464d58:	tbz	w21, #6, 467854 <_obstack_memory_used@@Base+0x134b4>
  464d5c:	mov	w1, w22
  464d60:	add	x2, x20, #0x10
  464d64:	mov	x0, x19
  464d68:	bl	468ba8 <_obstack_memory_used@@Base+0x14808>
  464d6c:	ldp	x21, x22, [sp, #32]
  464d70:	ldp	x23, x24, [sp, #48]
  464d74:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  464d78:	ldr	x23, [x20, #8]
  464d7c:	ldr	x1, [x19, #256]
  464d80:	cbz	x23, 466bec <_obstack_memory_used@@Base+0x1284c>
  464d84:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464d88:	add	x20, x20, #0xf50
  464d8c:	add	x22, x20, #0x6
  464d90:	mov	w21, #0x7b                  	// #123
  464d94:	b	464dbc <_obstack_memory_used@@Base+0x10a1c>
  464d98:	mov	x0, x1
  464d9c:	add	x1, x1, #0x1
  464da0:	str	x1, [x19, #256]
  464da4:	add	x20, x20, #0x1
  464da8:	strb	w21, [x19, x0]
  464dac:	cmp	x22, x20
  464db0:	strb	w21, [x19, #264]
  464db4:	b.eq	466c60 <_obstack_memory_used@@Base+0x128c0>  // b.none
  464db8:	ldrb	w21, [x20]
  464dbc:	cmp	x1, #0xff
  464dc0:	b.ne	464d98 <_obstack_memory_used@@Base+0x109f8>  // b.any
  464dc4:	ldp	x3, x2, [x19, #272]
  464dc8:	strb	wzr, [x19, #255]
  464dcc:	mov	x0, x19
  464dd0:	blr	x3
  464dd4:	ldr	x2, [x19, #320]
  464dd8:	mov	x1, #0x1                   	// #1
  464ddc:	mov	x0, #0x0                   	// #0
  464de0:	add	x2, x2, x1
  464de4:	str	x2, [x19, #320]
  464de8:	b	464da0 <_obstack_memory_used@@Base+0x10a00>
  464dec:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464df0:	add	x24, x24, #0xe40
  464df4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  464df8:	add	x24, x24, #0x11
  464dfc:	add	x22, x22, #0xe41
  464e00:	mov	w23, #0x68                  	// #104
  464e04:	ldr	x1, [x19, #256]
  464e08:	b	464e2c <_obstack_memory_used@@Base+0x10a8c>
  464e0c:	mov	x0, x1
  464e10:	add	x1, x1, #0x1
  464e14:	str	x1, [x19, #256]
  464e18:	cmp	x22, x24
  464e1c:	strb	w23, [x19, x0]
  464e20:	strb	w23, [x19, #264]
  464e24:	b.eq	46688c <_obstack_memory_used@@Base+0x124ec>  // b.none
  464e28:	ldrb	w23, [x22], #1
  464e2c:	cmp	x1, #0xff
  464e30:	b.ne	464e0c <_obstack_memory_used@@Base+0x10a6c>  // b.any
  464e34:	ldp	x3, x2, [x19, #272]
  464e38:	strb	wzr, [x19, #255]
  464e3c:	mov	x0, x19
  464e40:	blr	x3
  464e44:	ldr	x2, [x19, #320]
  464e48:	mov	x1, #0x1                   	// #1
  464e4c:	mov	x0, #0x0                   	// #0
  464e50:	add	x2, x2, x1
  464e54:	str	x2, [x19, #320]
  464e58:	b	464e14 <_obstack_memory_used@@Base+0x10a74>
  464e5c:	ldrsw	x22, [x20, #16]
  464e60:	ldr	x20, [x20, #8]
  464e64:	cbz	x22, 467d54 <_obstack_memory_used@@Base+0x139b4>
  464e68:	add	x22, x20, x22
  464e6c:	ldr	x1, [x19, #256]
  464e70:	b	464e94 <_obstack_memory_used@@Base+0x10af4>
  464e74:	mov	x0, x1
  464e78:	add	x1, x1, #0x1
  464e7c:	str	x1, [x19, #256]
  464e80:	add	x20, x20, #0x1
  464e84:	strb	w21, [x19, x0]
  464e88:	cmp	x22, x20
  464e8c:	strb	w21, [x19, #264]
  464e90:	b.eq	466998 <_obstack_memory_used@@Base+0x125f8>  // b.none
  464e94:	ldrb	w21, [x20]
  464e98:	cmp	x1, #0xff
  464e9c:	b.ne	464e74 <_obstack_memory_used@@Base+0x10ad4>  // b.any
  464ea0:	ldp	x3, x2, [x19, #272]
  464ea4:	strb	wzr, [x19, #255]
  464ea8:	mov	x0, x19
  464eac:	blr	x3
  464eb0:	ldr	x2, [x19, #320]
  464eb4:	mov	x1, #0x1                   	// #1
  464eb8:	mov	x0, #0x0                   	// #0
  464ebc:	add	x2, x2, x1
  464ec0:	str	x2, [x19, #320]
  464ec4:	b	464e7c <_obstack_memory_used@@Base+0x10adc>
  464ec8:	ldp	x1, x5, [x19, #288]
  464ecc:	add	x23, sp, #0x60
  464ed0:	stp	x5, x20, [sp, #96]
  464ed4:	mov	w22, #0x1                   	// #1
  464ed8:	mov	w6, w22
  464edc:	str	wzr, [sp, #112]
  464ee0:	str	x1, [sp, #120]
  464ee4:	str	x23, [x19, #296]
  464ee8:	mov	x24, x5
  464eec:	mov	x0, x5
  464ef0:	mov	x5, x23
  464ef4:	cbnz	x24, 464f40 <_obstack_memory_used@@Base+0x10ba0>
  464ef8:	b	468084 <_obstack_memory_used@@Base+0x13ce4>
  464efc:	ldr	w1, [x0, #16]
  464f00:	cbnz	w1, 464f38 <_obstack_memory_used@@Base+0x10b98>
  464f04:	cmp	w22, #0x3
  464f08:	b.hi	467840 <_obstack_memory_used@@Base+0x134a0>  // b.pmore
  464f0c:	ubfiz	x1, x22, #5, #32
  464f10:	add	w22, w22, #0x1
  464f14:	add	x4, x23, x1
  464f18:	ldp	x2, x3, [x0]
  464f1c:	stp	x2, x3, [x4]
  464f20:	ldp	x2, x3, [x0, #16]
  464f24:	stp	x2, x3, [x4, #16]
  464f28:	str	x5, [x23, x1]
  464f2c:	mov	x5, x4
  464f30:	str	x4, [x19, #296]
  464f34:	str	w6, [x0, #16]
  464f38:	ldr	x0, [x0]
  464f3c:	cbz	x0, 464f54 <_obstack_memory_used@@Base+0x10bb4>
  464f40:	ldr	x1, [x0, #8]
  464f44:	ldr	w1, [x1]
  464f48:	sub	w1, w1, #0x19
  464f4c:	cmp	w1, #0x2
  464f50:	b.ls	464efc <_obstack_memory_used@@Base+0x10b5c>  // b.plast
  464f54:	ldr	x2, [x20, #16]
  464f58:	mov	x0, x19
  464f5c:	mov	w1, w21
  464f60:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464f64:	str	x24, [x19, #296]
  464f68:	ldr	w0, [sp, #112]
  464f6c:	cbnz	w0, 4675cc <_obstack_memory_used@@Base+0x1322c>
  464f70:	ubfiz	x0, x22, #5, #32
  464f74:	cmp	w22, #0x1
  464f78:	add	x23, x23, x0
  464f7c:	b.eq	464fa0 <_obstack_memory_used@@Base+0x10c00>  // b.none
  464f80:	ldur	x2, [x23, #-24]
  464f84:	sub	w22, w22, #0x1
  464f88:	mov	w1, w21
  464f8c:	mov	x0, x19
  464f90:	sub	x23, x23, #0x20
  464f94:	bl	4683a8 <_obstack_memory_used@@Base+0x14008>
  464f98:	cmp	w22, #0x1
  464f9c:	b.ne	464f80 <_obstack_memory_used@@Base+0x10be0>  // b.any
  464fa0:	ldr	x3, [x19, #296]
  464fa4:	mov	w1, w21
  464fa8:	add	x2, x20, #0x8
  464fac:	mov	x0, x19
  464fb0:	bl	469228 <_obstack_memory_used@@Base+0x14e88>
  464fb4:	ldp	x21, x22, [sp, #32]
  464fb8:	ldp	x23, x24, [sp, #48]
  464fbc:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  464fc0:	ldrsh	w0, [x20, #18]
  464fc4:	cbnz	w0, 467328 <_obstack_memory_used@@Base+0x12f88>
  464fc8:	ldr	x2, [x20, #8]
  464fcc:	adrp	x0, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  464fd0:	add	x0, x0, #0xa08
  464fd4:	add	x0, x0, #0x288
  464fd8:	ldr	x1, [x2, #8]
  464fdc:	cmp	x1, x0
  464fe0:	b.eq	466e1c <_obstack_memory_used@@Base+0x12a7c>  // b.none
  464fe4:	mov	w1, w21
  464fe8:	mov	x0, x19
  464fec:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  464ff0:	ldr	x0, [x19, #256]
  464ff4:	add	x1, x0, #0x1
  464ff8:	cmp	x0, #0xff
  464ffc:	b.ne	465028 <_obstack_memory_used@@Base+0x10c88>  // b.any
  465000:	ldp	x3, x2, [x19, #272]
  465004:	strb	wzr, [x19, #255]
  465008:	mov	x1, x0
  46500c:	mov	x0, x19
  465010:	blr	x3
  465014:	ldr	x2, [x19, #320]
  465018:	mov	x1, #0x1                   	// #1
  46501c:	mov	x0, #0x0                   	// #0
  465020:	add	x2, x2, x1
  465024:	str	x2, [x19, #320]
  465028:	str	x1, [x19, #256]
  46502c:	mov	w2, #0x20                  	// #32
  465030:	strb	w2, [x19, x0]
  465034:	strb	w2, [x19, #264]
  465038:	ldrsh	w0, [x20, #16]
  46503c:	cbnz	w0, 466d30 <_obstack_memory_used@@Base+0x12990>
  465040:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465044:	add	x20, x20, #0xea0
  465048:	add	x22, x20, #0x6
  46504c:	mov	w21, #0x5f                  	// #95
  465050:	b	465078 <_obstack_memory_used@@Base+0x10cd8>
  465054:	mov	x0, x1
  465058:	add	x1, x1, #0x1
  46505c:	str	x1, [x19, #256]
  465060:	add	x20, x20, #0x1
  465064:	strb	w21, [x19, x0]
  465068:	cmp	x20, x22
  46506c:	strb	w21, [x19, #264]
  465070:	b.eq	466da4 <_obstack_memory_used@@Base+0x12a04>  // b.none
  465074:	ldrb	w21, [x20]
  465078:	cmp	x1, #0xff
  46507c:	b.ne	465054 <_obstack_memory_used@@Base+0x10cb4>  // b.any
  465080:	ldp	x3, x2, [x19, #272]
  465084:	strb	wzr, [x19, #255]
  465088:	mov	x0, x19
  46508c:	blr	x3
  465090:	ldr	x2, [x19, #320]
  465094:	mov	x1, #0x1                   	// #1
  465098:	mov	x0, #0x0                   	// #0
  46509c:	add	x2, x2, x1
  4650a0:	str	x2, [x19, #320]
  4650a4:	b	46505c <_obstack_memory_used@@Base+0x10cbc>
  4650a8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4650ac:	add	x24, x24, #0xd78
  4650b0:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4650b4:	add	x24, x24, #0x15
  4650b8:	add	x22, x22, #0xd79
  4650bc:	mov	w23, #0x6e                  	// #110
  4650c0:	ldr	x1, [x19, #256]
  4650c4:	b	4650e8 <_obstack_memory_used@@Base+0x10d48>
  4650c8:	mov	x0, x1
  4650cc:	add	x1, x1, #0x1
  4650d0:	str	x1, [x19, #256]
  4650d4:	cmp	x24, x22
  4650d8:	strb	w23, [x19, x0]
  4650dc:	strb	w23, [x19, #264]
  4650e0:	b.eq	4668a8 <_obstack_memory_used@@Base+0x12508>  // b.none
  4650e4:	ldrb	w23, [x22], #1
  4650e8:	cmp	x1, #0xff
  4650ec:	b.ne	4650c8 <_obstack_memory_used@@Base+0x10d28>  // b.any
  4650f0:	ldp	x3, x2, [x19, #272]
  4650f4:	strb	wzr, [x19, #255]
  4650f8:	mov	x0, x19
  4650fc:	blr	x3
  465100:	ldr	x2, [x19, #320]
  465104:	mov	x1, #0x1                   	// #1
  465108:	mov	x0, #0x0                   	// #0
  46510c:	add	x2, x2, x1
  465110:	str	x2, [x19, #320]
  465114:	b	4650d0 <_obstack_memory_used@@Base+0x10d30>
  465118:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46511c:	add	x24, x24, #0xd90
  465120:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465124:	add	x24, x24, #0x11
  465128:	add	x22, x22, #0xd91
  46512c:	mov	w23, #0x76                  	// #118
  465130:	ldr	x1, [x19, #256]
  465134:	b	465158 <_obstack_memory_used@@Base+0x10db8>
  465138:	mov	x0, x1
  46513c:	add	x1, x1, #0x1
  465140:	str	x1, [x19, #256]
  465144:	cmp	x24, x22
  465148:	strb	w23, [x19, x0]
  46514c:	strb	w23, [x19, #264]
  465150:	b.eq	4668c4 <_obstack_memory_used@@Base+0x12524>  // b.none
  465154:	ldrb	w23, [x22], #1
  465158:	cmp	x1, #0xff
  46515c:	b.ne	465138 <_obstack_memory_used@@Base+0x10d98>  // b.any
  465160:	ldp	x3, x2, [x19, #272]
  465164:	strb	wzr, [x19, #255]
  465168:	mov	x0, x19
  46516c:	blr	x3
  465170:	ldr	x2, [x19, #320]
  465174:	mov	x1, #0x1                   	// #1
  465178:	mov	x0, #0x0                   	// #0
  46517c:	add	x2, x2, x1
  465180:	str	x2, [x19, #320]
  465184:	b	465140 <_obstack_memory_used@@Base+0x10da0>
  465188:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46518c:	add	x24, x24, #0xda8
  465190:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465194:	add	x24, x24, #0x1a
  465198:	add	x22, x22, #0xda9
  46519c:	mov	w23, #0x63                  	// #99
  4651a0:	ldr	x1, [x19, #256]
  4651a4:	b	4651c8 <_obstack_memory_used@@Base+0x10e28>
  4651a8:	mov	x0, x1
  4651ac:	add	x1, x1, #0x1
  4651b0:	str	x1, [x19, #256]
  4651b4:	cmp	x24, x22
  4651b8:	strb	w23, [x19, x0]
  4651bc:	strb	w23, [x19, #264]
  4651c0:	b.eq	4668e0 <_obstack_memory_used@@Base+0x12540>  // b.none
  4651c4:	ldrb	w23, [x22], #1
  4651c8:	cmp	x1, #0xff
  4651cc:	b.ne	4651a8 <_obstack_memory_used@@Base+0x10e08>  // b.any
  4651d0:	ldp	x3, x2, [x19, #272]
  4651d4:	strb	wzr, [x19, #255]
  4651d8:	mov	x0, x19
  4651dc:	blr	x3
  4651e0:	ldr	x2, [x19, #320]
  4651e4:	mov	x1, #0x1                   	// #1
  4651e8:	mov	x0, #0x0                   	// #0
  4651ec:	add	x2, x2, x1
  4651f0:	str	x2, [x19, #320]
  4651f4:	b	4651b0 <_obstack_memory_used@@Base+0x10e10>
  4651f8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4651fc:	add	x24, x24, #0xdc8
  465200:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465204:	add	x24, x24, #0xf
  465208:	add	x22, x22, #0xdc9
  46520c:	mov	w23, #0x6a                  	// #106
  465210:	ldr	x1, [x19, #256]
  465214:	b	465238 <_obstack_memory_used@@Base+0x10e98>
  465218:	mov	x0, x1
  46521c:	add	x1, x1, #0x1
  465220:	str	x1, [x19, #256]
  465224:	cmp	x22, x24
  465228:	strb	w23, [x19, x0]
  46522c:	strb	w23, [x19, #264]
  465230:	b.eq	466240 <_obstack_memory_used@@Base+0x11ea0>  // b.none
  465234:	ldrb	w23, [x22], #1
  465238:	cmp	x1, #0xff
  46523c:	b.ne	465218 <_obstack_memory_used@@Base+0x10e78>  // b.any
  465240:	ldp	x3, x2, [x19, #272]
  465244:	strb	wzr, [x19, #255]
  465248:	mov	x0, x19
  46524c:	blr	x3
  465250:	ldr	x2, [x19, #320]
  465254:	mov	x1, #0x1                   	// #1
  465258:	mov	x0, #0x0                   	// #0
  46525c:	add	x2, x2, x1
  465260:	str	x2, [x19, #320]
  465264:	b	465220 <_obstack_memory_used@@Base+0x10e80>
  465268:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46526c:	add	x24, x24, #0xe28
  465270:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465274:	add	x24, x24, #0x15
  465278:	add	x22, x22, #0xe29
  46527c:	mov	w23, #0x72                  	// #114
  465280:	ldr	x1, [x19, #256]
  465284:	b	4652a8 <_obstack_memory_used@@Base+0x10f08>
  465288:	mov	x0, x1
  46528c:	add	x1, x1, #0x1
  465290:	str	x1, [x19, #256]
  465294:	cmp	x24, x22
  465298:	strb	w23, [x19, x0]
  46529c:	strb	w23, [x19, #264]
  4652a0:	b.eq	466278 <_obstack_memory_used@@Base+0x11ed8>  // b.none
  4652a4:	ldrb	w23, [x22], #1
  4652a8:	cmp	x1, #0xff
  4652ac:	b.ne	465288 <_obstack_memory_used@@Base+0x10ee8>  // b.any
  4652b0:	ldp	x3, x2, [x19, #272]
  4652b4:	strb	wzr, [x19, #255]
  4652b8:	mov	x0, x19
  4652bc:	blr	x3
  4652c0:	ldr	x2, [x19, #320]
  4652c4:	mov	x1, #0x1                   	// #1
  4652c8:	mov	x0, #0x0                   	// #0
  4652cc:	add	x2, x2, x1
  4652d0:	str	x2, [x19, #320]
  4652d4:	b	465290 <_obstack_memory_used@@Base+0x10ef0>
  4652d8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4652dc:	add	x24, x24, #0xdf0
  4652e0:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4652e4:	add	x24, x24, #0x16
  4652e8:	add	x22, x22, #0xdf1
  4652ec:	mov	w23, #0x54                  	// #84
  4652f0:	ldr	x1, [x19, #256]
  4652f4:	b	465318 <_obstack_memory_used@@Base+0x10f78>
  4652f8:	mov	x0, x1
  4652fc:	add	x1, x1, #0x1
  465300:	str	x1, [x19, #256]
  465304:	cmp	x22, x24
  465308:	strb	w23, [x19, x0]
  46530c:	strb	w23, [x19, #264]
  465310:	b.eq	466838 <_obstack_memory_used@@Base+0x12498>  // b.none
  465314:	ldrb	w23, [x22], #1
  465318:	cmp	x1, #0xff
  46531c:	b.ne	4652f8 <_obstack_memory_used@@Base+0x10f58>  // b.any
  465320:	ldp	x3, x2, [x19, #272]
  465324:	strb	wzr, [x19, #255]
  465328:	mov	x0, x19
  46532c:	blr	x3
  465330:	ldr	x2, [x19, #320]
  465334:	mov	x1, #0x1                   	// #1
  465338:	mov	x0, #0x0                   	// #0
  46533c:	add	x2, x2, x1
  465340:	str	x2, [x19, #320]
  465344:	b	465300 <_obstack_memory_used@@Base+0x10f60>
  465348:	ldr	x1, [x20, #8]
  46534c:	mov	x0, x19
  465350:	mov	w24, #0x0                   	// #0
  465354:	bl	460bd8 <_obstack_memory_used@@Base+0xc838>
  465358:	cbz	x0, 467d6c <_obstack_memory_used@@Base+0x139cc>
  46535c:	stp	x25, x26, [sp, #64]
  465360:	ldr	w1, [x0]
  465364:	cmp	w1, #0x2f
  465368:	b.ne	466a14 <_obstack_memory_used@@Base+0x12674>  // b.any
  46536c:	ldr	x1, [x0, #8]
  465370:	cbz	x1, 466a14 <_obstack_memory_used@@Base+0x12674>
  465374:	ldr	x0, [x0, #16]
  465378:	add	w24, w24, #0x1
  46537c:	cbnz	x0, 465360 <_obstack_memory_used@@Base+0x10fc0>
  465380:	ldr	x25, [x20, #8]
  465384:	sub	w26, w24, #0x1
  465388:	b	465398 <_obstack_memory_used@@Base+0x10ff8>
  46538c:	add	w22, w22, #0x1
  465390:	cmp	w22, w24
  465394:	b.ge	4669bc <_obstack_memory_used@@Base+0x1261c>  // b.tcont
  465398:	str	w22, [x19, #316]
  46539c:	mov	x2, x25
  4653a0:	mov	w1, w21
  4653a4:	mov	x0, x19
  4653a8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4653ac:	cmp	w26, w22
  4653b0:	b.le	46538c <_obstack_memory_used@@Base+0x10fec>
  4653b4:	mov	w20, #0x2c                  	// #44
  4653b8:	mov	x23, #0x0                   	// #0
  4653bc:	ldr	x1, [x19, #256]
  4653c0:	b	4653e4 <_obstack_memory_used@@Base+0x11044>
  4653c4:	mov	x0, x1
  4653c8:	add	x1, x1, #0x1
  4653cc:	str	x1, [x19, #256]
  4653d0:	strb	w20, [x19, x0]
  4653d4:	strb	w20, [x19, #264]
  4653d8:	mov	w20, #0x20                  	// #32
  4653dc:	cbnz	x23, 46538c <_obstack_memory_used@@Base+0x10fec>
  4653e0:	mov	x23, #0x1                   	// #1
  4653e4:	cmp	x1, #0xff
  4653e8:	b.ne	4653c4 <_obstack_memory_used@@Base+0x11024>  // b.any
  4653ec:	ldp	x3, x2, [x19, #272]
  4653f0:	strb	wzr, [x19, #255]
  4653f4:	mov	x0, x19
  4653f8:	blr	x3
  4653fc:	ldr	x2, [x19, #320]
  465400:	mov	x1, #0x1                   	// #1
  465404:	mov	x0, #0x0                   	// #0
  465408:	add	x2, x2, x1
  46540c:	str	x2, [x19, #320]
  465410:	b	4653cc <_obstack_memory_used@@Base+0x1102c>
  465414:	ldr	x2, [x20, #8]
  465418:	mov	w1, w21
  46541c:	mov	x0, x19
  465420:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465424:	add	x24, x24, #0xca0
  465428:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46542c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465430:	add	x24, x24, #0x5
  465434:	add	x22, x22, #0xca1
  465438:	mov	w23, #0x5b                  	// #91
  46543c:	ldr	x1, [x19, #256]
  465440:	b	465464 <_obstack_memory_used@@Base+0x110c4>
  465444:	mov	x0, x1
  465448:	add	x1, x1, #0x1
  46544c:	str	x1, [x19, #256]
  465450:	cmp	x24, x22
  465454:	strb	w23, [x19, x0]
  465458:	strb	w23, [x19, #264]
  46545c:	b.eq	466384 <_obstack_memory_used@@Base+0x11fe4>  // b.none
  465460:	ldrb	w23, [x22], #1
  465464:	cmp	x1, #0xff
  465468:	b.ne	465444 <_obstack_memory_used@@Base+0x110a4>  // b.any
  46546c:	ldp	x3, x2, [x19, #272]
  465470:	strb	wzr, [x19, #255]
  465474:	mov	x0, x19
  465478:	blr	x3
  46547c:	ldr	x2, [x19, #320]
  465480:	mov	x1, #0x1                   	// #1
  465484:	mov	x0, #0x0                   	// #0
  465488:	add	x2, x2, x1
  46548c:	str	x2, [x19, #320]
  465490:	b	46544c <_obstack_memory_used@@Base+0x110ac>
  465494:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465498:	add	x24, x24, #0xe70
  46549c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4654a0:	add	x24, x24, #0x1a
  4654a4:	add	x22, x22, #0xe71
  4654a8:	mov	w23, #0x6e                  	// #110
  4654ac:	ldr	x1, [x19, #256]
  4654b0:	b	4654d4 <_obstack_memory_used@@Base+0x11134>
  4654b4:	mov	x0, x1
  4654b8:	add	x1, x1, #0x1
  4654bc:	str	x1, [x19, #256]
  4654c0:	cmp	x24, x22
  4654c4:	strb	w23, [x19, x0]
  4654c8:	strb	w23, [x19, #264]
  4654cc:	b.eq	46634c <_obstack_memory_used@@Base+0x11fac>  // b.none
  4654d0:	ldrb	w23, [x22], #1
  4654d4:	cmp	x1, #0xff
  4654d8:	b.ne	4654b4 <_obstack_memory_used@@Base+0x11114>  // b.any
  4654dc:	ldp	x3, x2, [x19, #272]
  4654e0:	strb	wzr, [x19, #255]
  4654e4:	mov	x0, x19
  4654e8:	blr	x3
  4654ec:	ldr	x2, [x19, #320]
  4654f0:	mov	x1, #0x1                   	// #1
  4654f4:	mov	x0, #0x0                   	// #0
  4654f8:	add	x2, x2, x1
  4654fc:	str	x2, [x19, #320]
  465500:	b	4654bc <_obstack_memory_used@@Base+0x1111c>
  465504:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465508:	add	x24, x24, #0xdd8
  46550c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465510:	add	x24, x24, #0x13
  465514:	add	x22, x22, #0xdd9
  465518:	mov	w23, #0x67                  	// #103
  46551c:	ldr	x1, [x19, #256]
  465520:	b	465544 <_obstack_memory_used@@Base+0x111a4>
  465524:	mov	x0, x1
  465528:	add	x1, x1, #0x1
  46552c:	str	x1, [x19, #256]
  465530:	cmp	x24, x22
  465534:	strb	w23, [x19, x0]
  465538:	strb	w23, [x19, #264]
  46553c:	b.eq	46625c <_obstack_memory_used@@Base+0x11ebc>  // b.none
  465540:	ldrb	w23, [x22], #1
  465544:	cmp	x1, #0xff
  465548:	b.ne	465524 <_obstack_memory_used@@Base+0x11184>  // b.any
  46554c:	ldp	x3, x2, [x19, #272]
  465550:	strb	wzr, [x19, #255]
  465554:	mov	x0, x19
  465558:	blr	x3
  46555c:	ldr	x2, [x19, #320]
  465560:	mov	x1, #0x1                   	// #1
  465564:	mov	x0, #0x0                   	// #0
  465568:	add	x2, x2, x1
  46556c:	str	x2, [x19, #320]
  465570:	b	46552c <_obstack_memory_used@@Base+0x1118c>
  465574:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465578:	add	x24, x24, #0xe08
  46557c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465580:	add	x24, x24, #0x19
  465584:	add	x22, x22, #0xe09
  465588:	mov	w23, #0x54                  	// #84
  46558c:	ldr	x1, [x19, #256]
  465590:	b	4655b4 <_obstack_memory_used@@Base+0x11214>
  465594:	mov	x0, x1
  465598:	add	x1, x1, #0x1
  46559c:	str	x1, [x19, #256]
  4655a0:	cmp	x24, x22
  4655a4:	strb	w23, [x19, x0]
  4655a8:	strb	w23, [x19, #264]
  4655ac:	b.eq	466854 <_obstack_memory_used@@Base+0x124b4>  // b.none
  4655b0:	ldrb	w23, [x22], #1
  4655b4:	cmp	x1, #0xff
  4655b8:	b.ne	465594 <_obstack_memory_used@@Base+0x111f4>  // b.any
  4655bc:	ldp	x3, x2, [x19, #272]
  4655c0:	strb	wzr, [x19, #255]
  4655c4:	mov	x0, x19
  4655c8:	blr	x3
  4655cc:	ldr	x2, [x19, #320]
  4655d0:	mov	x1, #0x1                   	// #1
  4655d4:	mov	x0, #0x0                   	// #0
  4655d8:	add	x2, x2, x1
  4655dc:	str	x2, [x19, #320]
  4655e0:	b	46559c <_obstack_memory_used@@Base+0x111fc>
  4655e4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4655e8:	add	x22, x22, #0xd00
  4655ec:	add	x24, x22, #0x8
  4655f0:	mov	w23, #0x56                  	// #86
  4655f4:	ldr	x1, [x19, #256]
  4655f8:	b	465620 <_obstack_memory_used@@Base+0x11280>
  4655fc:	mov	x0, x1
  465600:	add	x1, x1, #0x1
  465604:	str	x1, [x19, #256]
  465608:	add	x22, x22, #0x1
  46560c:	strb	w23, [x19, x0]
  465610:	cmp	x24, x22
  465614:	strb	w23, [x19, #264]
  465618:	b.eq	4667a0 <_obstack_memory_used@@Base+0x12400>  // b.none
  46561c:	ldrb	w23, [x22]
  465620:	cmp	x1, #0xff
  465624:	b.ne	4655fc <_obstack_memory_used@@Base+0x1125c>  // b.any
  465628:	ldp	x3, x2, [x19, #272]
  46562c:	strb	wzr, [x19, #255]
  465630:	mov	x0, x19
  465634:	blr	x3
  465638:	ldr	x2, [x19, #320]
  46563c:	mov	x1, #0x1                   	// #1
  465640:	mov	x0, #0x0                   	// #0
  465644:	add	x2, x2, x1
  465648:	str	x2, [x19, #320]
  46564c:	b	465604 <_obstack_memory_used@@Base+0x11264>
  465650:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465654:	add	x24, x24, #0xd10
  465658:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46565c:	add	x24, x24, #0x18
  465660:	add	x22, x22, #0xd11
  465664:	mov	w23, #0x63                  	// #99
  465668:	ldr	x1, [x19, #256]
  46566c:	b	465690 <_obstack_memory_used@@Base+0x112f0>
  465670:	mov	x0, x1
  465674:	add	x1, x1, #0x1
  465678:	str	x1, [x19, #256]
  46567c:	cmp	x24, x22
  465680:	strb	w23, [x19, x0]
  465684:	strb	w23, [x19, #264]
  465688:	b.eq	4667bc <_obstack_memory_used@@Base+0x1241c>  // b.none
  46568c:	ldrb	w23, [x22], #1
  465690:	cmp	x1, #0xff
  465694:	b.ne	465670 <_obstack_memory_used@@Base+0x112d0>  // b.any
  465698:	ldp	x3, x2, [x19, #272]
  46569c:	strb	wzr, [x19, #255]
  4656a0:	mov	x0, x19
  4656a4:	blr	x3
  4656a8:	ldr	x2, [x19, #320]
  4656ac:	mov	x1, #0x1                   	// #1
  4656b0:	mov	x0, #0x0                   	// #0
  4656b4:	add	x2, x2, x1
  4656b8:	str	x2, [x19, #320]
  4656bc:	b	465678 <_obstack_memory_used@@Base+0x112d8>
  4656c0:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4656c4:	add	x24, x24, #0xd38
  4656c8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4656cc:	add	x24, x24, #0xd
  4656d0:	add	x22, x22, #0xd39
  4656d4:	mov	w23, #0x74                  	// #116
  4656d8:	ldr	x1, [x19, #256]
  4656dc:	b	465700 <_obstack_memory_used@@Base+0x11360>
  4656e0:	mov	x0, x1
  4656e4:	add	x1, x1, #0x1
  4656e8:	str	x1, [x19, #256]
  4656ec:	cmp	x24, x22
  4656f0:	strb	w23, [x19, x0]
  4656f4:	strb	w23, [x19, #264]
  4656f8:	b.eq	466314 <_obstack_memory_used@@Base+0x11f74>  // b.none
  4656fc:	ldrb	w23, [x22], #1
  465700:	cmp	x1, #0xff
  465704:	b.ne	4656e0 <_obstack_memory_used@@Base+0x11340>  // b.any
  465708:	ldp	x3, x2, [x19, #272]
  46570c:	strb	wzr, [x19, #255]
  465710:	mov	x0, x19
  465714:	blr	x3
  465718:	ldr	x2, [x19, #320]
  46571c:	mov	x1, #0x1                   	// #1
  465720:	mov	x0, #0x0                   	// #0
  465724:	add	x2, x2, x1
  465728:	str	x2, [x19, #320]
  46572c:	b	4656e8 <_obstack_memory_used@@Base+0x11348>
  465730:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465734:	add	x24, x24, #0xd48
  465738:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46573c:	add	x24, x24, #0x12
  465740:	add	x22, x22, #0xd49
  465744:	mov	w23, #0x74                  	// #116
  465748:	ldr	x1, [x19, #256]
  46574c:	b	465770 <_obstack_memory_used@@Base+0x113d0>
  465750:	mov	x0, x1
  465754:	add	x1, x1, #0x1
  465758:	str	x1, [x19, #256]
  46575c:	cmp	x24, x22
  465760:	strb	w23, [x19, x0]
  465764:	strb	w23, [x19, #264]
  465768:	b.eq	466330 <_obstack_memory_used@@Base+0x11f90>  // b.none
  46576c:	ldrb	w23, [x22], #1
  465770:	cmp	x1, #0xff
  465774:	b.ne	465750 <_obstack_memory_used@@Base+0x113b0>  // b.any
  465778:	ldp	x3, x2, [x19, #272]
  46577c:	strb	wzr, [x19, #255]
  465780:	mov	x0, x19
  465784:	blr	x3
  465788:	ldr	x2, [x19, #320]
  46578c:	mov	x1, #0x1                   	// #1
  465790:	mov	x0, #0x0                   	// #0
  465794:	add	x2, x2, x1
  465798:	str	x2, [x19, #320]
  46579c:	b	465758 <_obstack_memory_used@@Base+0x113b8>
  4657a0:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4657a4:	add	x24, x24, #0xd60
  4657a8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4657ac:	add	x24, x24, #0x10
  4657b0:	add	x22, x22, #0xd61
  4657b4:	mov	w23, #0x74                  	// #116
  4657b8:	ldr	x1, [x19, #256]
  4657bc:	b	4657e0 <_obstack_memory_used@@Base+0x11440>
  4657c0:	mov	x0, x1
  4657c4:	add	x1, x1, #0x1
  4657c8:	str	x1, [x19, #256]
  4657cc:	cmp	x24, x22
  4657d0:	strb	w23, [x19, x0]
  4657d4:	strb	w23, [x19, #264]
  4657d8:	b.eq	466784 <_obstack_memory_used@@Base+0x123e4>  // b.none
  4657dc:	ldrb	w23, [x22], #1
  4657e0:	cmp	x1, #0xff
  4657e4:	b.ne	4657c0 <_obstack_memory_used@@Base+0x11420>  // b.any
  4657e8:	ldp	x3, x2, [x19, #272]
  4657ec:	strb	wzr, [x19, #255]
  4657f0:	mov	x0, x19
  4657f4:	blr	x3
  4657f8:	ldr	x2, [x19, #320]
  4657fc:	mov	x1, #0x1                   	// #1
  465800:	mov	x0, #0x0                   	// #0
  465804:	add	x2, x2, x1
  465808:	str	x2, [x19, #320]
  46580c:	b	4657c8 <_obstack_memory_used@@Base+0x11428>
  465810:	stp	x25, x26, [sp, #64]
  465814:	ldr	x25, [x20, #8]
  465818:	ldr	x22, [x19, #296]
  46581c:	str	xzr, [x19, #296]
  465820:	cbz	x25, 4678d8 <_obstack_memory_used@@Base+0x13538>
  465824:	add	x23, sp, #0x60
  465828:	mov	x2, #0x1f                  	// #31
  46582c:	ldr	x6, [x19, #288]
  465830:	mov	x3, x23
  465834:	mov	x0, #0x0                   	// #0
  465838:	mov	w24, #0x0                   	// #0
  46583c:	mov	x1, #0x1                   	// #1
  465840:	movk	x2, #0x1a, lsl #48
  465844:	str	wzr, [x3, #16]
  465848:	add	w24, w24, #0x1
  46584c:	str	x0, [x3]
  465850:	mov	x4, x3
  465854:	ldr	w5, [x25]
  465858:	str	x25, [x3, #8]
  46585c:	str	x6, [x3, #24]
  465860:	sub	w0, w5, #0x1c
  465864:	cmp	w0, #0x34
  465868:	b.hi	465878 <_obstack_memory_used@@Base+0x114d8>  // b.pmore
  46586c:	lsl	x0, x1, x0
  465870:	tst	x0, x2
  465874:	b.ne	4669f8 <_obstack_memory_used@@Base+0x12658>  // b.any
  465878:	str	x3, [x19, #296]
  46587c:	cmp	w5, #0x2
  465880:	b.eq	4677b8 <_obstack_memory_used@@Base+0x13418>  // b.none
  465884:	cmp	w5, #0x4
  465888:	b.ne	465898 <_obstack_memory_used@@Base+0x114f8>  // b.any
  46588c:	add	x0, sp, #0x50
  465890:	stp	x6, x25, [sp, #80]
  465894:	str	x0, [x19, #288]
  465898:	ldr	x2, [x20, #16]
  46589c:	mov	x0, x19
  4658a0:	mov	w1, w21
  4658a4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4658a8:	ldr	w0, [x25]
  4658ac:	cmp	w0, #0x4
  4658b0:	b.ne	4658bc <_obstack_memory_used@@Base+0x1151c>  // b.any
  4658b4:	ldr	x0, [sp, #80]
  4658b8:	str	x0, [x19, #288]
  4658bc:	sub	w20, w24, #0x1
  4658c0:	mov	w24, #0x20                  	// #32
  4658c4:	ubfiz	x0, x20, #5, #32
  4658c8:	add	x23, x23, x0
  4658cc:	b	4658d4 <_obstack_memory_used@@Base+0x11534>
  4658d0:	sub	w20, w20, #0x1
  4658d4:	ldr	w0, [x23, #16]
  4658d8:	cbnz	w0, 465930 <_obstack_memory_used@@Base+0x11590>
  4658dc:	ldr	x0, [x19, #256]
  4658e0:	add	x1, x0, #0x1
  4658e4:	cmp	x0, #0xff
  4658e8:	b.ne	465914 <_obstack_memory_used@@Base+0x11574>  // b.any
  4658ec:	ldp	x3, x2, [x19, #272]
  4658f0:	strb	wzr, [x19, #255]
  4658f4:	mov	x1, x0
  4658f8:	mov	x0, x19
  4658fc:	blr	x3
  465900:	ldr	x2, [x19, #320]
  465904:	mov	x1, #0x1                   	// #1
  465908:	mov	x0, #0x0                   	// #0
  46590c:	add	x2, x2, x1
  465910:	str	x2, [x19, #320]
  465914:	str	x1, [x19, #256]
  465918:	mov	w1, w21
  46591c:	ldr	x2, [x23, #8]
  465920:	strb	w24, [x19, x0]
  465924:	strb	w24, [x19, #264]
  465928:	mov	x0, x19
  46592c:	bl	4683a8 <_obstack_memory_used@@Base+0x14008>
  465930:	sub	x23, x23, #0x20
  465934:	cbnz	w20, 4658d0 <_obstack_memory_used@@Base+0x11530>
  465938:	ldp	x23, x24, [sp, #48]
  46593c:	ldp	x25, x26, [sp, #64]
  465940:	str	x22, [x19, #296]
  465944:	ldp	x21, x22, [sp, #32]
  465948:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46594c:	ldr	x22, [x20, #8]
  465950:	ldr	x24, [x19, #296]
  465954:	str	xzr, [x19, #296]
  465958:	ldr	x23, [x19, #368]
  46595c:	str	x20, [x19, #368]
  465960:	tbz	w21, #2, 465978 <_obstack_memory_used@@Base+0x115d8>
  465964:	ldr	w0, [x22]
  465968:	cbnz	w0, 465978 <_obstack_memory_used@@Base+0x115d8>
  46596c:	ldr	w0, [x22, #16]
  465970:	cmp	w0, #0x6
  465974:	b.eq	467c70 <_obstack_memory_used@@Base+0x138d0>  // b.none
  465978:	mov	x0, x19
  46597c:	mov	x2, x22
  465980:	mov	w1, w21
  465984:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465988:	ldrb	w0, [x19, #264]
  46598c:	cmp	w0, #0x3c
  465990:	b.eq	4674d8 <_obstack_memory_used@@Base+0x13138>  // b.none
  465994:	ldr	x1, [x19, #256]
  465998:	add	x0, x1, #0x1
  46599c:	cmp	x1, #0xff
  4659a0:	b.ne	4659c8 <_obstack_memory_used@@Base+0x11628>  // b.any
  4659a4:	ldp	x3, x2, [x19, #272]
  4659a8:	strb	wzr, [x19, #255]
  4659ac:	mov	x0, x19
  4659b0:	blr	x3
  4659b4:	ldr	x2, [x19, #320]
  4659b8:	mov	x0, #0x1                   	// #1
  4659bc:	mov	x1, #0x0                   	// #0
  4659c0:	add	x2, x2, x0
  4659c4:	str	x2, [x19, #320]
  4659c8:	str	x0, [x19, #256]
  4659cc:	mov	w0, #0x3c                  	// #60
  4659d0:	strb	w0, [x19, x1]
  4659d4:	mov	w1, w21
  4659d8:	strb	w0, [x19, #264]
  4659dc:	mov	x0, x19
  4659e0:	ldr	x2, [x20, #16]
  4659e4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4659e8:	ldrb	w0, [x19, #264]
  4659ec:	cmp	w0, #0x3e
  4659f0:	b.eq	467490 <_obstack_memory_used@@Base+0x130f0>  // b.none
  4659f4:	ldr	x1, [x19, #256]
  4659f8:	add	x0, x1, #0x1
  4659fc:	cmp	x1, #0xff
  465a00:	b.ne	465a28 <_obstack_memory_used@@Base+0x11688>  // b.any
  465a04:	ldp	x3, x2, [x19, #272]
  465a08:	strb	wzr, [x19, #255]
  465a0c:	mov	x0, x19
  465a10:	blr	x3
  465a14:	ldr	x2, [x19, #320]
  465a18:	mov	x0, #0x1                   	// #1
  465a1c:	mov	x1, #0x0                   	// #0
  465a20:	add	x2, x2, x0
  465a24:	str	x2, [x19, #320]
  465a28:	str	x0, [x19, #256]
  465a2c:	mov	w0, #0x3e                  	// #62
  465a30:	strb	w0, [x19, x1]
  465a34:	strb	w0, [x19, #264]
  465a38:	ldp	x21, x22, [sp, #32]
  465a3c:	str	x24, [x19, #296]
  465a40:	str	x23, [x19, #368]
  465a44:	ldp	x23, x24, [sp, #48]
  465a48:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  465a4c:	ldr	w0, [x19, #312]
  465a50:	cbz	w0, 466b1c <_obstack_memory_used@@Base+0x1277c>
  465a54:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465a58:	add	x23, x23, #0xcc8
  465a5c:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465a60:	add	x23, x23, #0x5
  465a64:	add	x21, x21, #0xcc9
  465a68:	mov	w22, #0x61                  	// #97
  465a6c:	ldr	x1, [x19, #256]
  465a70:	b	465a94 <_obstack_memory_used@@Base+0x116f4>
  465a74:	mov	x0, x1
  465a78:	add	x1, x1, #0x1
  465a7c:	str	x1, [x19, #256]
  465a80:	cmp	x23, x21
  465a84:	strb	w22, [x19, x0]
  465a88:	strb	w22, [x19, #264]
  465a8c:	b.eq	466b64 <_obstack_memory_used@@Base+0x127c4>  // b.none
  465a90:	ldrb	w22, [x21], #1
  465a94:	cmp	x1, #0xff
  465a98:	b.ne	465a74 <_obstack_memory_used@@Base+0x116d4>  // b.any
  465a9c:	ldp	x3, x2, [x19, #272]
  465aa0:	strb	wzr, [x19, #255]
  465aa4:	mov	x0, x19
  465aa8:	blr	x3
  465aac:	ldr	x2, [x19, #320]
  465ab0:	mov	x1, #0x1                   	// #1
  465ab4:	mov	x0, #0x0                   	// #0
  465ab8:	add	x2, x2, x1
  465abc:	str	x2, [x19, #320]
  465ac0:	b	465a7c <_obstack_memory_used@@Base+0x116dc>
  465ac4:	ldr	x1, [x19, #256]
  465ac8:	add	x0, x1, #0x1
  465acc:	cmp	x1, #0xff
  465ad0:	b.ne	465af8 <_obstack_memory_used@@Base+0x11758>  // b.any
  465ad4:	ldp	x3, x2, [x19, #272]
  465ad8:	strb	wzr, [x19, #255]
  465adc:	mov	x0, x19
  465ae0:	blr	x3
  465ae4:	ldr	x2, [x19, #320]
  465ae8:	mov	x0, #0x1                   	// #1
  465aec:	mov	x1, #0x0                   	// #0
  465af0:	add	x2, x2, x0
  465af4:	str	x2, [x19, #320]
  465af8:	str	x0, [x19, #256]
  465afc:	mov	w0, #0x7e                  	// #126
  465b00:	strb	w0, [x19, x1]
  465b04:	mov	w1, w21
  465b08:	strb	w0, [x19, #264]
  465b0c:	mov	x0, x19
  465b10:	ldr	x2, [x20, #16]
  465b14:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465b18:	ldp	x21, x22, [sp, #32]
  465b1c:	ldp	x23, x24, [sp, #48]
  465b20:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  465b24:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465b28:	add	x24, x24, #0xcf0
  465b2c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465b30:	add	x24, x24, #0xb
  465b34:	add	x22, x22, #0xcf1
  465b38:	mov	w23, #0x76                  	// #118
  465b3c:	ldr	x1, [x19, #256]
  465b40:	b	465b64 <_obstack_memory_used@@Base+0x117c4>
  465b44:	mov	x0, x1
  465b48:	add	x1, x1, #0x1
  465b4c:	str	x1, [x19, #256]
  465b50:	cmp	x24, x22
  465b54:	strb	w23, [x19, x0]
  465b58:	strb	w23, [x19, #264]
  465b5c:	b.eq	4662f8 <_obstack_memory_used@@Base+0x11f58>  // b.none
  465b60:	ldrb	w23, [x22], #1
  465b64:	cmp	x1, #0xff
  465b68:	b.ne	465b44 <_obstack_memory_used@@Base+0x117a4>  // b.any
  465b6c:	ldp	x3, x2, [x19, #272]
  465b70:	strb	wzr, [x19, #255]
  465b74:	mov	x0, x19
  465b78:	blr	x3
  465b7c:	ldr	x2, [x19, #320]
  465b80:	mov	x1, #0x1                   	// #1
  465b84:	mov	x0, #0x0                   	// #0
  465b88:	add	x2, x2, x1
  465b8c:	str	x2, [x19, #320]
  465b90:	b	465b4c <_obstack_memory_used@@Base+0x117ac>
  465b94:	ldr	x0, [x20, #16]
  465b98:	ldr	w0, [x0]
  465b9c:	cmp	w0, #0x39
  465ba0:	b.ne	464590 <_obstack_memory_used@@Base+0x101f0>  // b.any
  465ba4:	ldr	x2, [x20, #8]
  465ba8:	ldr	x0, [x2, #8]
  465bac:	ldr	x0, [x0]
  465bb0:	ldrb	w1, [x0, #1]
  465bb4:	cmp	w1, #0x63
  465bb8:	b.eq	4678f0 <_obstack_memory_used@@Base+0x13550>  // b.none
  465bbc:	add	x3, x20, #0x10
  465bc0:	mov	w1, w21
  465bc4:	mov	x0, x19
  465bc8:	bl	469660 <_obstack_memory_used@@Base+0x152c0>
  465bcc:	cbnz	w0, 467c58 <_obstack_memory_used@@Base+0x138b8>
  465bd0:	ldr	x0, [x20, #8]
  465bd4:	ldr	w1, [x0]
  465bd8:	cmp	w1, #0x32
  465bdc:	b.eq	467dcc <_obstack_memory_used@@Base+0x13a2c>  // b.none
  465be0:	ldr	x0, [x0, #8]
  465be4:	ldr	x1, [x0]
  465be8:	ldrb	w0, [x1]
  465bec:	subs	w0, w0, #0x63
  465bf0:	b.ne	465c04 <_obstack_memory_used@@Base+0x11864>  // b.any
  465bf4:	ldrb	w0, [x1, #1]
  465bf8:	subs	w0, w0, #0x6c
  465bfc:	b.ne	465c04 <_obstack_memory_used@@Base+0x11864>  // b.any
  465c00:	ldrb	w0, [x1, #2]
  465c04:	ldr	x1, [x20, #16]
  465c08:	ldr	x2, [x1, #8]
  465c0c:	cbnz	w0, 465c1c <_obstack_memory_used@@Base+0x1187c>
  465c10:	ldr	w0, [x2]
  465c14:	cmp	w0, #0x3
  465c18:	b.eq	467e90 <_obstack_memory_used@@Base+0x13af0>  // b.none
  465c1c:	mov	w1, w21
  465c20:	mov	x0, x19
  465c24:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  465c28:	ldr	x2, [x20, #8]
  465c2c:	ldr	x0, [x2, #8]
  465c30:	ldr	x0, [x0]
  465c34:	ldrb	w1, [x0]
  465c38:	cmp	w1, #0x69
  465c3c:	b.ne	467ba8 <_obstack_memory_used@@Base+0x13808>  // b.any
  465c40:	ldrb	w3, [x0, #1]
  465c44:	cmp	w3, #0x78
  465c48:	b.ne	467ba8 <_obstack_memory_used@@Base+0x13808>  // b.any
  465c4c:	ldrb	w3, [x0, #2]
  465c50:	cbnz	w3, 467ba8 <_obstack_memory_used@@Base+0x13808>
  465c54:	ldr	x1, [x19, #256]
  465c58:	cmp	x1, #0xff
  465c5c:	b.ne	465c84 <_obstack_memory_used@@Base+0x118e4>  // b.any
  465c60:	ldp	x3, x2, [x19, #272]
  465c64:	strb	wzr, [x19, #255]
  465c68:	mov	x0, x19
  465c6c:	blr	x3
  465c70:	str	xzr, [x19, #256]
  465c74:	ldr	x0, [x19, #320]
  465c78:	mov	x1, #0x0                   	// #0
  465c7c:	add	x0, x0, #0x1
  465c80:	str	x0, [x19, #320]
  465c84:	add	x0, x1, #0x1
  465c88:	str	x0, [x19, #256]
  465c8c:	mov	w0, #0x5b                  	// #91
  465c90:	strb	w0, [x19, x1]
  465c94:	strb	w0, [x19, #264]
  465c98:	mov	w1, w21
  465c9c:	mov	x0, x19
  465ca0:	ldr	x2, [x20, #16]
  465ca4:	ldr	x2, [x2, #16]
  465ca8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465cac:	ldr	x1, [x19, #256]
  465cb0:	cmp	x1, #0xff
  465cb4:	b.ne	465cdc <_obstack_memory_used@@Base+0x1193c>  // b.any
  465cb8:	ldp	x3, x2, [x19, #272]
  465cbc:	strb	wzr, [x19, #255]
  465cc0:	mov	x0, x19
  465cc4:	blr	x3
  465cc8:	str	xzr, [x19, #256]
  465ccc:	ldr	x0, [x19, #320]
  465cd0:	mov	x1, #0x0                   	// #0
  465cd4:	add	x0, x0, #0x1
  465cd8:	str	x0, [x19, #320]
  465cdc:	add	x0, x1, #0x1
  465ce0:	str	x0, [x19, #256]
  465ce4:	mov	w0, #0x5d                  	// #93
  465ce8:	strb	w0, [x19, x1]
  465cec:	strb	w0, [x19, #264]
  465cf0:	ldr	x0, [x20, #8]
  465cf4:	ldr	w1, [x0]
  465cf8:	cmp	w1, #0x32
  465cfc:	b.eq	467db0 <_obstack_memory_used@@Base+0x13a10>  // b.none
  465d00:	ldp	x21, x22, [sp, #32]
  465d04:	ldp	x23, x24, [sp, #48]
  465d08:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  465d0c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465d10:	add	x24, x24, #0xf28
  465d14:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465d18:	add	x24, x24, #0xe
  465d1c:	add	x22, x22, #0xf29
  465d20:	mov	w23, #0x6a                  	// #106
  465d24:	ldr	x1, [x19, #256]
  465d28:	b	465d4c <_obstack_memory_used@@Base+0x119ac>
  465d2c:	mov	x0, x1
  465d30:	add	x1, x1, #0x1
  465d34:	str	x1, [x19, #256]
  465d38:	cmp	x24, x22
  465d3c:	strb	w23, [x19, x0]
  465d40:	strb	w23, [x19, #264]
  465d44:	b.eq	4668fc <_obstack_memory_used@@Base+0x1255c>  // b.none
  465d48:	ldrb	w23, [x22], #1
  465d4c:	cmp	x1, #0xff
  465d50:	b.ne	465d2c <_obstack_memory_used@@Base+0x1198c>  // b.any
  465d54:	ldp	x3, x2, [x19, #272]
  465d58:	strb	wzr, [x19, #255]
  465d5c:	mov	x0, x19
  465d60:	blr	x3
  465d64:	ldr	x2, [x19, #320]
  465d68:	mov	x1, #0x1                   	// #1
  465d6c:	mov	x0, #0x0                   	// #0
  465d70:	add	x2, x2, x1
  465d74:	str	x2, [x19, #320]
  465d78:	b	465d34 <_obstack_memory_used@@Base+0x11994>
  465d7c:	ldr	x2, [x20, #8]
  465d80:	mov	w1, w21
  465d84:	mov	x0, x19
  465d88:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465d8c:	ldr	x2, [x20, #16]
  465d90:	mov	w1, w21
  465d94:	mov	x0, x19
  465d98:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  465d9c:	ldp	x21, x22, [sp, #32]
  465da0:	ldp	x23, x24, [sp, #48]
  465da4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  465da8:	ldr	x1, [x19, #256]
  465dac:	ldrb	w20, [x20, #8]
  465db0:	add	x0, x1, #0x1
  465db4:	cmp	x1, #0xff
  465db8:	b.ne	465de0 <_obstack_memory_used@@Base+0x11a40>  // b.any
  465dbc:	ldp	x3, x2, [x19, #272]
  465dc0:	strb	wzr, [x19, #255]
  465dc4:	mov	x0, x19
  465dc8:	blr	x3
  465dcc:	ldr	x2, [x19, #320]
  465dd0:	mov	x0, #0x1                   	// #1
  465dd4:	mov	x1, #0x0                   	// #0
  465dd8:	add	x2, x2, x0
  465ddc:	str	x2, [x19, #320]
  465de0:	str	x0, [x19, #256]
  465de4:	strb	w20, [x19, x1]
  465de8:	strb	w20, [x19, #264]
  465dec:	ldp	x21, x22, [sp, #32]
  465df0:	ldp	x23, x24, [sp, #48]
  465df4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  465df8:	ldr	w2, [x20, #8]
  465dfc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  465e00:	add	x1, x1, #0xd08
  465e04:	add	x20, sp, #0x60
  465e08:	mov	x0, x20
  465e0c:	bl	402720 <sprintf@plt>
  465e10:	mov	x0, x20
  465e14:	bl	402680 <strlen@plt>
  465e18:	cbz	x0, 467d48 <_obstack_memory_used@@Base+0x139a8>
  465e1c:	add	x22, x20, x0
  465e20:	ldr	x1, [x19, #256]
  465e24:	b	465e48 <_obstack_memory_used@@Base+0x11aa8>
  465e28:	mov	x0, x1
  465e2c:	add	x1, x1, #0x1
  465e30:	str	x1, [x19, #256]
  465e34:	add	x20, x20, #0x1
  465e38:	strb	w21, [x19, x0]
  465e3c:	cmp	x20, x22
  465e40:	strb	w21, [x19, #264]
  465e44:	b.eq	4669b0 <_obstack_memory_used@@Base+0x12610>  // b.none
  465e48:	ldrb	w21, [x20]
  465e4c:	cmp	x1, #0xff
  465e50:	b.ne	465e28 <_obstack_memory_used@@Base+0x11a88>  // b.any
  465e54:	ldp	x3, x2, [x19, #272]
  465e58:	strb	wzr, [x19, #255]
  465e5c:	mov	x0, x19
  465e60:	blr	x3
  465e64:	ldr	x2, [x19, #320]
  465e68:	mov	x1, #0x1                   	// #1
  465e6c:	mov	x0, #0x0                   	// #0
  465e70:	add	x2, x2, x1
  465e74:	str	x2, [x19, #320]
  465e78:	b	465e30 <_obstack_memory_used@@Base+0x11a90>
  465e7c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465e80:	add	x24, x24, #0xf38
  465e84:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465e88:	add	x24, x24, #0xa
  465e8c:	add	x22, x22, #0xf39
  465e90:	mov	w23, #0x64                  	// #100
  465e94:	ldr	x1, [x19, #256]
  465e98:	b	465ebc <_obstack_memory_used@@Base+0x11b1c>
  465e9c:	mov	x0, x1
  465ea0:	add	x1, x1, #0x1
  465ea4:	str	x1, [x19, #256]
  465ea8:	cmp	x22, x24
  465eac:	strb	w23, [x19, x0]
  465eb0:	strb	w23, [x19, #264]
  465eb4:	b.eq	466724 <_obstack_memory_used@@Base+0x12384>  // b.none
  465eb8:	ldrb	w23, [x22], #1
  465ebc:	cmp	x1, #0xff
  465ec0:	b.ne	465e9c <_obstack_memory_used@@Base+0x11afc>  // b.any
  465ec4:	ldp	x3, x2, [x19, #272]
  465ec8:	strb	wzr, [x19, #255]
  465ecc:	mov	x0, x19
  465ed0:	blr	x3
  465ed4:	ldr	x2, [x19, #320]
  465ed8:	mov	x1, #0x1                   	// #1
  465edc:	mov	x0, #0x0                   	// #0
  465ee0:	add	x2, x2, x1
  465ee4:	str	x2, [x19, #320]
  465ee8:	b	465ea4 <_obstack_memory_used@@Base+0x11b04>
  465eec:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465ef0:	add	x24, x24, #0xf58
  465ef4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465ef8:	add	x24, x24, #0x1d
  465efc:	add	x22, x22, #0xf59
  465f00:	mov	w23, #0x67                  	// #103
  465f04:	ldr	x1, [x19, #256]
  465f08:	b	465f2c <_obstack_memory_used@@Base+0x11b8c>
  465f0c:	mov	x0, x1
  465f10:	add	x1, x1, #0x1
  465f14:	str	x1, [x19, #256]
  465f18:	cmp	x22, x24
  465f1c:	strb	w23, [x19, x0]
  465f20:	strb	w23, [x19, #264]
  465f24:	b.eq	466968 <_obstack_memory_used@@Base+0x125c8>  // b.none
  465f28:	ldrb	w23, [x22], #1
  465f2c:	cmp	x1, #0xff
  465f30:	b.ne	465f0c <_obstack_memory_used@@Base+0x11b6c>  // b.any
  465f34:	ldp	x3, x2, [x19, #272]
  465f38:	strb	wzr, [x19, #255]
  465f3c:	mov	x0, x19
  465f40:	blr	x3
  465f44:	ldr	x2, [x19, #320]
  465f48:	mov	x1, #0x1                   	// #1
  465f4c:	mov	x0, #0x0                   	// #0
  465f50:	add	x2, x2, x1
  465f54:	str	x2, [x19, #320]
  465f58:	b	465f14 <_obstack_memory_used@@Base+0x11b74>
  465f5c:	ldrsw	x22, [x20, #16]
  465f60:	ldr	x20, [x20, #8]
  465f64:	tbnz	w21, #2, 466a34 <_obstack_memory_used@@Base+0x12694>
  465f68:	cbz	x22, 467e78 <_obstack_memory_used@@Base+0x13ad8>
  465f6c:	add	x22, x20, x22
  465f70:	ldr	x1, [x19, #256]
  465f74:	b	465f98 <_obstack_memory_used@@Base+0x11bf8>
  465f78:	mov	x0, x1
  465f7c:	add	x1, x1, #0x1
  465f80:	str	x1, [x19, #256]
  465f84:	add	x20, x20, #0x1
  465f88:	strb	w21, [x19, x0]
  465f8c:	cmp	x22, x20
  465f90:	strb	w21, [x19, #264]
  465f94:	b.eq	466e3c <_obstack_memory_used@@Base+0x12a9c>  // b.none
  465f98:	ldrb	w21, [x20]
  465f9c:	cmp	x1, #0xff
  465fa0:	b.ne	465f78 <_obstack_memory_used@@Base+0x11bd8>  // b.any
  465fa4:	ldp	x3, x2, [x19, #272]
  465fa8:	strb	wzr, [x19, #255]
  465fac:	mov	x0, x19
  465fb0:	blr	x3
  465fb4:	ldr	x2, [x19, #320]
  465fb8:	mov	x1, #0x1                   	// #1
  465fbc:	mov	x0, #0x0                   	// #0
  465fc0:	add	x2, x2, x1
  465fc4:	str	x2, [x19, #320]
  465fc8:	b	465f80 <_obstack_memory_used@@Base+0x11be0>
  465fcc:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  465fd0:	add	x22, x22, #0xeb8
  465fd4:	add	x24, x22, #0x9
  465fd8:	mov	w23, #0x6f                  	// #111
  465fdc:	ldr	x1, [x19, #256]
  465fe0:	b	466008 <_obstack_memory_used@@Base+0x11c68>
  465fe4:	mov	x0, x1
  465fe8:	add	x1, x1, #0x1
  465fec:	str	x1, [x19, #256]
  465ff0:	add	x22, x22, #0x1
  465ff4:	strb	w23, [x19, x0]
  465ff8:	cmp	x22, x24
  465ffc:	strb	w23, [x19, #264]
  466000:	b.eq	466918 <_obstack_memory_used@@Base+0x12578>  // b.none
  466004:	ldrb	w23, [x22]
  466008:	cmp	x1, #0xff
  46600c:	b.ne	465fe4 <_obstack_memory_used@@Base+0x11c44>  // b.any
  466010:	ldp	x3, x2, [x19, #272]
  466014:	strb	wzr, [x19, #255]
  466018:	mov	x0, x19
  46601c:	blr	x3
  466020:	ldr	x2, [x19, #320]
  466024:	mov	x1, #0x1                   	// #1
  466028:	mov	x0, #0x0                   	// #0
  46602c:	add	x2, x2, x1
  466030:	str	x2, [x19, #320]
  466034:	b	465fec <_obstack_memory_used@@Base+0x11c4c>
  466038:	ldr	x2, [x20, #8]
  46603c:	mov	w1, w21
  466040:	mov	x0, x19
  466044:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  466048:	ldp	x21, x22, [sp, #32]
  46604c:	ldp	x23, x24, [sp, #48]
  466050:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466054:	ldp	x22, x20, [x20, #8]
  466058:	ldr	w0, [x22]
  46605c:	cmp	w0, #0x32
  466060:	b.eq	466f84 <_obstack_memory_used@@Base+0x12be4>  // b.none
  466064:	cmp	w0, #0x34
  466068:	b.ne	4682cc <_obstack_memory_used@@Base+0x13f2c>  // b.any
  46606c:	ldr	x1, [x19, #256]
  466070:	add	x0, x1, #0x1
  466074:	cmp	x1, #0xff
  466078:	b.ne	4660a0 <_obstack_memory_used@@Base+0x11d00>  // b.any
  46607c:	ldp	x3, x2, [x19, #272]
  466080:	strb	wzr, [x19, #255]
  466084:	mov	x0, x19
  466088:	blr	x3
  46608c:	ldr	x2, [x19, #320]
  466090:	mov	x0, #0x1                   	// #1
  466094:	mov	x1, #0x0                   	// #0
  466098:	add	x2, x2, x0
  46609c:	str	x2, [x19, #320]
  4660a0:	str	x0, [x19, #256]
  4660a4:	mov	w0, #0x28                  	// #40
  4660a8:	strb	w0, [x19, x1]
  4660ac:	mov	w1, w21
  4660b0:	strb	w0, [x19, #264]
  4660b4:	mov	x0, x19
  4660b8:	ldr	x2, [x22, #8]
  4660bc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4660c0:	ldr	x1, [x19, #256]
  4660c4:	add	x0, x1, #0x1
  4660c8:	cmp	x1, #0xff
  4660cc:	b.ne	4660f4 <_obstack_memory_used@@Base+0x11d54>  // b.any
  4660d0:	ldp	x3, x2, [x19, #272]
  4660d4:	strb	wzr, [x19, #255]
  4660d8:	mov	x0, x19
  4660dc:	blr	x3
  4660e0:	ldr	x2, [x19, #320]
  4660e4:	mov	x0, #0x1                   	// #1
  4660e8:	mov	x1, #0x0                   	// #0
  4660ec:	add	x2, x2, x0
  4660f0:	str	x2, [x19, #320]
  4660f4:	str	x0, [x19, #256]
  4660f8:	mov	w0, #0x29                  	// #41
  4660fc:	strb	w0, [x19, x1]
  466100:	strb	w0, [x19, #264]
  466104:	mov	w1, w21
  466108:	mov	x2, x20
  46610c:	mov	x0, x19
  466110:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  466114:	ldp	x21, x22, [sp, #32]
  466118:	ldp	x23, x24, [sp, #48]
  46611c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466120:	ldr	x0, [x20, #8]
  466124:	tbnz	w21, #2, 466db0 <_obstack_memory_used@@Base+0x12a10>
  466128:	ldrsw	x22, [x0, #8]
  46612c:	ldr	x20, [x0]
  466130:	cbz	x22, 467f98 <_obstack_memory_used@@Base+0x13bf8>
  466134:	add	x22, x20, x22
  466138:	ldr	x1, [x19, #256]
  46613c:	b	466160 <_obstack_memory_used@@Base+0x11dc0>
  466140:	mov	x0, x1
  466144:	add	x1, x1, #0x1
  466148:	str	x1, [x19, #256]
  46614c:	add	x20, x20, #0x1
  466150:	strb	w21, [x19, x0]
  466154:	cmp	x22, x20
  466158:	strb	w21, [x19, #264]
  46615c:	b.eq	466e24 <_obstack_memory_used@@Base+0x12a84>  // b.none
  466160:	ldrb	w21, [x20]
  466164:	cmp	x1, #0xff
  466168:	b.ne	466140 <_obstack_memory_used@@Base+0x11da0>  // b.any
  46616c:	ldp	x3, x2, [x19, #272]
  466170:	strb	wzr, [x19, #255]
  466174:	mov	x0, x19
  466178:	blr	x3
  46617c:	ldr	x2, [x19, #320]
  466180:	mov	x1, #0x1                   	// #1
  466184:	mov	x0, #0x0                   	// #0
  466188:	add	x2, x2, x1
  46618c:	str	x2, [x19, #320]
  466190:	b	466148 <_obstack_memory_used@@Base+0x11da8>
  466194:	ldr	x2, [x0, #8]
  466198:	add	x0, sp, #0x60
  46619c:	ldr	x1, [x19, #288]
  4661a0:	stp	x4, x20, [sp, #96]
  4661a4:	str	wzr, [sp, #112]
  4661a8:	str	x1, [sp, #120]
  4661ac:	str	x0, [x19, #296]
  4661b0:	cbnz	x2, 4645c8 <_obstack_memory_used@@Base+0x10228>
  4661b4:	b	4645c4 <_obstack_memory_used@@Base+0x10224>
  4661b8:	ldp	x21, x22, [sp, #32]
  4661bc:	ldp	x23, x24, [sp, #48]
  4661c0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4661c4:	ldr	x2, [x20, #16]
  4661c8:	mov	w1, w21
  4661cc:	mov	x0, x19
  4661d0:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4661d4:	ldr	x1, [x19, #256]
  4661d8:	add	x0, x1, #0x1
  4661dc:	cmp	x1, #0xff
  4661e0:	b.ne	466208 <_obstack_memory_used@@Base+0x11e68>  // b.any
  4661e4:	ldp	x3, x2, [x19, #272]
  4661e8:	strb	wzr, [x19, #255]
  4661ec:	mov	x0, x19
  4661f0:	blr	x3
  4661f4:	ldr	x2, [x19, #320]
  4661f8:	mov	x0, #0x1                   	// #1
  4661fc:	mov	x1, #0x0                   	// #0
  466200:	add	x2, x2, x0
  466204:	str	x2, [x19, #320]
  466208:	str	x0, [x19, #256]
  46620c:	mov	w0, #0x5d                  	// #93
  466210:	strb	w0, [x19, x1]
  466214:	strb	w0, [x19, #264]
  466218:	ldp	x21, x22, [sp, #32]
  46621c:	ldp	x23, x24, [sp, #48]
  466220:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466224:	ldr	x2, [x20, #16]
  466228:	mov	w1, w21
  46622c:	mov	x0, x19
  466230:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466234:	ldp	x21, x22, [sp, #32]
  466238:	ldp	x23, x24, [sp, #48]
  46623c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466240:	ldr	x2, [x20, #8]
  466244:	mov	w1, w21
  466248:	mov	x0, x19
  46624c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466250:	ldp	x21, x22, [sp, #32]
  466254:	ldp	x23, x24, [sp, #48]
  466258:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46625c:	ldr	x2, [x20, #8]
  466260:	mov	w1, w21
  466264:	mov	x0, x19
  466268:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46626c:	ldp	x21, x22, [sp, #32]
  466270:	ldp	x23, x24, [sp, #48]
  466274:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466278:	ldr	x2, [x20, #16]
  46627c:	mov	w1, w21
  466280:	mov	x0, x19
  466284:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  466288:	add	x24, x24, #0xd40
  46628c:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  466290:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466294:	add	x24, x24, #0x5
  466298:	add	x22, x22, #0xd41
  46629c:	mov	w23, #0x20                  	// #32
  4662a0:	ldr	x1, [x19, #256]
  4662a4:	b	4662c8 <_obstack_memory_used@@Base+0x11f28>
  4662a8:	mov	x0, x1
  4662ac:	add	x1, x1, #0x1
  4662b0:	str	x1, [x19, #256]
  4662b4:	cmp	x22, x24
  4662b8:	strb	w23, [x19, x0]
  4662bc:	strb	w23, [x19, #264]
  4662c0:	b.eq	466368 <_obstack_memory_used@@Base+0x11fc8>  // b.none
  4662c4:	ldrb	w23, [x22], #1
  4662c8:	cmp	x1, #0xff
  4662cc:	b.ne	4662a8 <_obstack_memory_used@@Base+0x11f08>  // b.any
  4662d0:	ldp	x3, x2, [x19, #272]
  4662d4:	strb	wzr, [x19, #255]
  4662d8:	mov	x0, x19
  4662dc:	blr	x3
  4662e0:	ldr	x2, [x19, #320]
  4662e4:	mov	x1, #0x1                   	// #1
  4662e8:	mov	x0, #0x0                   	// #0
  4662ec:	add	x2, x2, x1
  4662f0:	str	x2, [x19, #320]
  4662f4:	b	4662b0 <_obstack_memory_used@@Base+0x11f10>
  4662f8:	ldr	x2, [x20, #8]
  4662fc:	mov	w1, w21
  466300:	mov	x0, x19
  466304:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466308:	ldp	x21, x22, [sp, #32]
  46630c:	ldp	x23, x24, [sp, #48]
  466310:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466314:	ldr	x2, [x20, #8]
  466318:	mov	w1, w21
  46631c:	mov	x0, x19
  466320:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466324:	ldp	x21, x22, [sp, #32]
  466328:	ldp	x23, x24, [sp, #48]
  46632c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466330:	ldr	x2, [x20, #8]
  466334:	mov	w1, w21
  466338:	mov	x0, x19
  46633c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466340:	ldp	x21, x22, [sp, #32]
  466344:	ldp	x23, x24, [sp, #48]
  466348:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46634c:	ldr	x2, [x20, #8]
  466350:	mov	w1, w21
  466354:	mov	x0, x19
  466358:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46635c:	ldp	x21, x22, [sp, #32]
  466360:	ldp	x23, x24, [sp, #48]
  466364:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466368:	ldr	x2, [x20, #8]
  46636c:	mov	w1, w21
  466370:	mov	x0, x19
  466374:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466378:	ldp	x21, x22, [sp, #32]
  46637c:	ldp	x23, x24, [sp, #48]
  466380:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466384:	ldr	x2, [x20, #16]
  466388:	mov	w1, w21
  46638c:	mov	x0, x19
  466390:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466394:	ldr	x1, [x19, #256]
  466398:	add	x0, x1, #0x1
  46639c:	cmp	x1, #0xff
  4663a0:	b.ne	4663c8 <_obstack_memory_used@@Base+0x12028>  // b.any
  4663a4:	ldp	x3, x2, [x19, #272]
  4663a8:	strb	wzr, [x19, #255]
  4663ac:	mov	x0, x19
  4663b0:	blr	x3
  4663b4:	ldr	x2, [x19, #320]
  4663b8:	mov	x0, #0x1                   	// #1
  4663bc:	mov	x1, #0x0                   	// #0
  4663c0:	add	x2, x2, x0
  4663c4:	str	x2, [x19, #320]
  4663c8:	str	x0, [x19, #256]
  4663cc:	mov	w0, #0x5d                  	// #93
  4663d0:	strb	w0, [x19, x1]
  4663d4:	strb	w0, [x19, #264]
  4663d8:	ldp	x21, x22, [sp, #32]
  4663dc:	ldp	x23, x24, [sp, #48]
  4663e0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4663e4:	ldr	x20, [x22, #8]
  4663e8:	ldrb	w0, [x20]
  4663ec:	sub	w0, w0, #0x61
  4663f0:	and	w0, w0, #0xff
  4663f4:	cmp	w0, #0x19
  4663f8:	b.hi	466440 <_obstack_memory_used@@Base+0x120a0>  // b.pmore
  4663fc:	add	x0, x1, #0x1
  466400:	cmp	x1, #0xff
  466404:	b.ne	466430 <_obstack_memory_used@@Base+0x12090>  // b.any
  466408:	ldp	x3, x2, [x19, #272]
  46640c:	strb	wzr, [x19, #255]
  466410:	mov	x0, x19
  466414:	blr	x3
  466418:	ldr	x2, [x19, #320]
  46641c:	mov	x0, #0x1                   	// #1
  466420:	mov	x1, #0x0                   	// #0
  466424:	add	x2, x2, x0
  466428:	ldr	x20, [x22, #8]
  46642c:	str	x2, [x19, #320]
  466430:	str	x0, [x19, #256]
  466434:	mov	w0, #0x20                  	// #32
  466438:	strb	w0, [x19, x1]
  46643c:	strb	w0, [x19, #264]
  466440:	sxtw	x22, w23
  466444:	sub	w0, w23, #0x1
  466448:	add	x1, x20, x22
  46644c:	sxtw	x0, w0
  466450:	ldurb	w1, [x1, #-1]
  466454:	cmp	w1, #0x20
  466458:	csel	x22, x22, x0, ne  // ne = any
  46645c:	cbz	x22, 467d3c <_obstack_memory_used@@Base+0x1399c>
  466460:	add	x22, x20, x22
  466464:	ldr	x1, [x19, #256]
  466468:	b	46648c <_obstack_memory_used@@Base+0x120ec>
  46646c:	mov	x0, x1
  466470:	add	x1, x1, #0x1
  466474:	str	x1, [x19, #256]
  466478:	add	x20, x20, #0x1
  46647c:	strb	w21, [x19, x0]
  466480:	cmp	x22, x20
  466484:	strb	w21, [x19, #264]
  466488:	b.eq	4669a4 <_obstack_memory_used@@Base+0x12604>  // b.none
  46648c:	ldrb	w21, [x20]
  466490:	cmp	x1, #0xff
  466494:	b.ne	46646c <_obstack_memory_used@@Base+0x120cc>  // b.any
  466498:	ldp	x3, x2, [x19, #272]
  46649c:	strb	wzr, [x19, #255]
  4664a0:	mov	x0, x19
  4664a4:	blr	x3
  4664a8:	ldr	x2, [x19, #320]
  4664ac:	mov	x1, #0x1                   	// #1
  4664b0:	mov	x0, #0x0                   	// #0
  4664b4:	add	x2, x2, x1
  4664b8:	str	x2, [x19, #320]
  4664bc:	b	466474 <_obstack_memory_used@@Base+0x120d4>
  4664c0:	ldr	x2, [x20, #8]
  4664c4:	mov	w1, w21
  4664c8:	mov	x0, x19
  4664cc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4664d0:	ldp	x21, x22, [sp, #32]
  4664d4:	ldp	x23, x24, [sp, #48]
  4664d8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4664dc:	ldr	x2, [x20, #8]
  4664e0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4664e4:	add	x1, x1, #0xd08
  4664e8:	add	x20, sp, #0x60
  4664ec:	add	w2, w2, #0x1
  4664f0:	mov	x0, x20
  4664f4:	bl	402720 <sprintf@plt>
  4664f8:	mov	x0, x20
  4664fc:	bl	402680 <strlen@plt>
  466500:	ldr	x1, [x19, #256]
  466504:	cbz	x0, 466564 <_obstack_memory_used@@Base+0x121c4>
  466508:	add	x22, x20, x0
  46650c:	b	466530 <_obstack_memory_used@@Base+0x12190>
  466510:	mov	x0, x1
  466514:	add	x1, x1, #0x1
  466518:	str	x1, [x19, #256]
  46651c:	add	x20, x20, #0x1
  466520:	strb	w21, [x19, x0]
  466524:	cmp	x22, x20
  466528:	strb	w21, [x19, #264]
  46652c:	b.eq	466564 <_obstack_memory_used@@Base+0x121c4>  // b.none
  466530:	ldrb	w21, [x20]
  466534:	cmp	x1, #0xff
  466538:	b.ne	466510 <_obstack_memory_used@@Base+0x12170>  // b.any
  46653c:	ldp	x3, x2, [x19, #272]
  466540:	strb	wzr, [x19, #255]
  466544:	mov	x0, x19
  466548:	blr	x3
  46654c:	ldr	x2, [x19, #320]
  466550:	mov	x1, #0x1                   	// #1
  466554:	mov	x0, #0x0                   	// #0
  466558:	add	x2, x2, x1
  46655c:	str	x2, [x19, #320]
  466560:	b	466518 <_obstack_memory_used@@Base+0x12178>
  466564:	add	x0, x1, #0x1
  466568:	cmp	x1, #0xff
  46656c:	b.ne	466594 <_obstack_memory_used@@Base+0x121f4>  // b.any
  466570:	ldp	x3, x2, [x19, #272]
  466574:	strb	wzr, [x19, #255]
  466578:	mov	x0, x19
  46657c:	blr	x3
  466580:	ldr	x2, [x19, #320]
  466584:	mov	x0, #0x1                   	// #1
  466588:	mov	x1, #0x0                   	// #0
  46658c:	add	x2, x2, x0
  466590:	str	x2, [x19, #320]
  466594:	str	x0, [x19, #256]
  466598:	mov	w0, #0x7d                  	// #125
  46659c:	strb	w0, [x19, x1]
  4665a0:	strb	w0, [x19, #264]
  4665a4:	ldp	x21, x22, [sp, #32]
  4665a8:	ldp	x23, x24, [sp, #48]
  4665ac:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4665b0:	ldr	x2, [x20, #8]
  4665b4:	mov	w1, w21
  4665b8:	mov	x0, x19
  4665bc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4665c0:	ldp	x21, x22, [sp, #32]
  4665c4:	ldp	x23, x24, [sp, #48]
  4665c8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4665cc:	ldr	x2, [x20, #8]
  4665d0:	mov	w1, w21
  4665d4:	mov	x0, x19
  4665d8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4665dc:	ldp	x21, x22, [sp, #32]
  4665e0:	ldp	x23, x24, [sp, #48]
  4665e4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4665e8:	ldr	w3, [x19, #312]
  4665ec:	mov	w1, w21
  4665f0:	ldr	x2, [x20, #8]
  4665f4:	add	w3, w3, #0x1
  4665f8:	str	w3, [x19, #312]
  4665fc:	mov	x0, x19
  466600:	mov	w21, #0x29                  	// #41
  466604:	mov	x22, #0x0                   	// #0
  466608:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46660c:	ldr	w0, [x19, #312]
  466610:	ldr	x1, [x19, #256]
  466614:	sub	w0, w0, #0x1
  466618:	str	w0, [x19, #312]
  46661c:	b	466644 <_obstack_memory_used@@Base+0x122a4>
  466620:	mov	x0, x1
  466624:	add	x1, x1, #0x1
  466628:	str	x1, [x19, #256]
  46662c:	cmp	x22, #0x1
  466630:	strb	w21, [x19, x0]
  466634:	strb	w21, [x19, #264]
  466638:	mov	w21, #0x23                  	// #35
  46663c:	b.eq	466674 <_obstack_memory_used@@Base+0x122d4>  // b.none
  466640:	mov	x22, #0x1                   	// #1
  466644:	cmp	x1, #0xff
  466648:	b.ne	466620 <_obstack_memory_used@@Base+0x12280>  // b.any
  46664c:	ldp	x3, x2, [x19, #272]
  466650:	strb	wzr, [x19, #255]
  466654:	mov	x0, x19
  466658:	blr	x3
  46665c:	ldr	x2, [x19, #320]
  466660:	mov	x1, #0x1                   	// #1
  466664:	mov	x0, #0x0                   	// #0
  466668:	add	x2, x2, x1
  46666c:	str	x2, [x19, #320]
  466670:	b	466628 <_obstack_memory_used@@Base+0x12288>
  466674:	ldr	w2, [x20, #16]
  466678:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  46667c:	add	x1, x1, #0xd08
  466680:	add	x20, sp, #0x60
  466684:	add	w2, w2, #0x1
  466688:	mov	x0, x20
  46668c:	bl	402720 <sprintf@plt>
  466690:	mov	x0, x20
  466694:	bl	402680 <strlen@plt>
  466698:	ldr	x1, [x19, #256]
  46669c:	cbz	x0, 4666fc <_obstack_memory_used@@Base+0x1235c>
  4666a0:	add	x23, x20, x0
  4666a4:	b	4666c8 <_obstack_memory_used@@Base+0x12328>
  4666a8:	mov	x0, x1
  4666ac:	add	x1, x1, #0x1
  4666b0:	str	x1, [x19, #256]
  4666b4:	add	x20, x20, #0x1
  4666b8:	strb	w21, [x19, x0]
  4666bc:	cmp	x23, x20
  4666c0:	strb	w21, [x19, #264]
  4666c4:	b.eq	4666fc <_obstack_memory_used@@Base+0x1235c>  // b.none
  4666c8:	ldrb	w21, [x20]
  4666cc:	cmp	x1, #0xff
  4666d0:	b.ne	4666a8 <_obstack_memory_used@@Base+0x12308>  // b.any
  4666d4:	ldp	x3, x2, [x19, #272]
  4666d8:	strb	wzr, [x19, #255]
  4666dc:	mov	x0, x19
  4666e0:	blr	x3
  4666e4:	ldr	x2, [x19, #320]
  4666e8:	mov	x1, #0x1                   	// #1
  4666ec:	mov	x0, #0x0                   	// #0
  4666f0:	add	x2, x2, x1
  4666f4:	str	x2, [x19, #320]
  4666f8:	b	4666b0 <_obstack_memory_used@@Base+0x12310>
  4666fc:	cmp	x1, #0xff
  466700:	b.eq	466f60 <_obstack_memory_used@@Base+0x12bc0>  // b.none
  466704:	add	x22, x1, #0x1
  466708:	str	x22, [x19, #256]
  46670c:	mov	w0, #0x7d                  	// #125
  466710:	strb	w0, [x19, x1]
  466714:	strb	w0, [x19, #264]
  466718:	ldp	x21, x22, [sp, #32]
  46671c:	ldp	x23, x24, [sp, #48]
  466720:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466724:	ldr	x2, [x20, #8]
  466728:	mov	w1, w21
  46672c:	mov	x0, x19
  466730:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466734:	ldr	x1, [x19, #256]
  466738:	add	x0, x1, #0x1
  46673c:	cmp	x1, #0xff
  466740:	b.ne	466768 <_obstack_memory_used@@Base+0x123c8>  // b.any
  466744:	ldp	x3, x2, [x19, #272]
  466748:	strb	wzr, [x19, #255]
  46674c:	mov	x0, x19
  466750:	blr	x3
  466754:	ldr	x2, [x19, #320]
  466758:	mov	x0, #0x1                   	// #1
  46675c:	mov	x1, #0x0                   	// #0
  466760:	add	x2, x2, x0
  466764:	str	x2, [x19, #320]
  466768:	str	x0, [x19, #256]
  46676c:	mov	w0, #0x29                  	// #41
  466770:	strb	w0, [x19, x1]
  466774:	strb	w0, [x19, #264]
  466778:	ldp	x21, x22, [sp, #32]
  46677c:	ldp	x23, x24, [sp, #48]
  466780:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466784:	ldr	x2, [x20, #8]
  466788:	mov	w1, w21
  46678c:	mov	x0, x19
  466790:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466794:	ldp	x21, x22, [sp, #32]
  466798:	ldp	x23, x24, [sp, #48]
  46679c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4667a0:	ldr	x2, [x20, #8]
  4667a4:	mov	w1, w21
  4667a8:	mov	x0, x19
  4667ac:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4667b0:	ldp	x21, x22, [sp, #32]
  4667b4:	ldp	x23, x24, [sp, #48]
  4667b8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4667bc:	ldr	x2, [x20, #8]
  4667c0:	mov	w1, w21
  4667c4:	mov	x0, x19
  4667c8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4667cc:	add	x22, x22, #0xd30
  4667d0:	mov	w23, #0x2d                  	// #45
  4667d4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4667d8:	add	x24, x22, #0x4
  4667dc:	ldr	x1, [x19, #256]
  4667e0:	b	466808 <_obstack_memory_used@@Base+0x12468>
  4667e4:	mov	x0, x1
  4667e8:	add	x1, x1, #0x1
  4667ec:	str	x1, [x19, #256]
  4667f0:	add	x22, x22, #0x1
  4667f4:	strb	w23, [x19, x0]
  4667f8:	cmp	x24, x22
  4667fc:	strb	w23, [x19, #264]
  466800:	b.eq	466870 <_obstack_memory_used@@Base+0x124d0>  // b.none
  466804:	ldrb	w23, [x22]
  466808:	cmp	x1, #0xff
  46680c:	b.ne	4667e4 <_obstack_memory_used@@Base+0x12444>  // b.any
  466810:	ldp	x3, x2, [x19, #272]
  466814:	strb	wzr, [x19, #255]
  466818:	mov	x0, x19
  46681c:	blr	x3
  466820:	ldr	x2, [x19, #320]
  466824:	mov	x1, #0x1                   	// #1
  466828:	mov	x0, #0x0                   	// #0
  46682c:	add	x2, x2, x1
  466830:	str	x2, [x19, #320]
  466834:	b	4667ec <_obstack_memory_used@@Base+0x1244c>
  466838:	ldr	x2, [x20, #8]
  46683c:	mov	w1, w21
  466840:	mov	x0, x19
  466844:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466848:	ldp	x21, x22, [sp, #32]
  46684c:	ldp	x23, x24, [sp, #48]
  466850:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466854:	ldr	x2, [x20, #8]
  466858:	mov	w1, w21
  46685c:	mov	x0, x19
  466860:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466864:	ldp	x21, x22, [sp, #32]
  466868:	ldp	x23, x24, [sp, #48]
  46686c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466870:	ldr	x2, [x20, #16]
  466874:	mov	w1, w21
  466878:	mov	x0, x19
  46687c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466880:	ldp	x21, x22, [sp, #32]
  466884:	ldp	x23, x24, [sp, #48]
  466888:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46688c:	ldr	x2, [x20, #8]
  466890:	mov	w1, w21
  466894:	mov	x0, x19
  466898:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46689c:	ldp	x21, x22, [sp, #32]
  4668a0:	ldp	x23, x24, [sp, #48]
  4668a4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4668a8:	ldr	x2, [x20, #8]
  4668ac:	mov	w1, w21
  4668b0:	mov	x0, x19
  4668b4:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4668b8:	ldp	x21, x22, [sp, #32]
  4668bc:	ldp	x23, x24, [sp, #48]
  4668c0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4668c4:	ldr	x2, [x20, #8]
  4668c8:	mov	w1, w21
  4668cc:	mov	x0, x19
  4668d0:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4668d4:	ldp	x21, x22, [sp, #32]
  4668d8:	ldp	x23, x24, [sp, #48]
  4668dc:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4668e0:	ldr	x2, [x20, #8]
  4668e4:	mov	w1, w21
  4668e8:	mov	x0, x19
  4668ec:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4668f0:	ldp	x21, x22, [sp, #32]
  4668f4:	ldp	x23, x24, [sp, #48]
  4668f8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4668fc:	ldr	x2, [x20, #8]
  466900:	mov	w1, w21
  466904:	mov	x0, x19
  466908:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46690c:	ldp	x21, x22, [sp, #32]
  466910:	ldp	x23, x24, [sp, #48]
  466914:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466918:	ldr	x1, [x19, #368]
  46691c:	cbz	x1, 466930 <_obstack_memory_used@@Base+0x12590>
  466920:	ldr	x2, [x19, #288]
  466924:	add	x0, sp, #0x60
  466928:	stp	x2, x1, [sp, #96]
  46692c:	str	x0, [x19, #288]
  466930:	ldr	x2, [x20, #8]
  466934:	ldr	w0, [x2]
  466938:	cmp	w0, #0x4
  46693c:	b.eq	467228 <_obstack_memory_used@@Base+0x12e88>  // b.none
  466940:	mov	x0, x19
  466944:	mov	w1, w21
  466948:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46694c:	ldr	x0, [x19, #368]
  466950:	cbz	x0, 467644 <_obstack_memory_used@@Base+0x132a4>
  466954:	ldr	x0, [sp, #96]
  466958:	ldp	x21, x22, [sp, #32]
  46695c:	ldp	x23, x24, [sp, #48]
  466960:	str	x0, [x19, #288]
  466964:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466968:	ldr	x2, [x20, #8]
  46696c:	mov	w1, w21
  466970:	mov	x0, x19
  466974:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466978:	ldp	x21, x22, [sp, #32]
  46697c:	ldp	x23, x24, [sp, #48]
  466980:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466984:	mov	x2, x20
  466988:	mov	w1, w21
  46698c:	mov	x0, x19
  466990:	bl	4683a8 <_obstack_memory_used@@Base+0x14008>
  466994:	b	4645dc <_obstack_memory_used@@Base+0x1023c>
  466998:	ldp	x21, x22, [sp, #32]
  46699c:	ldp	x23, x24, [sp, #48]
  4669a0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4669a4:	ldp	x21, x22, [sp, #32]
  4669a8:	ldp	x23, x24, [sp, #48]
  4669ac:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4669b0:	ldp	x21, x22, [sp, #32]
  4669b4:	ldp	x23, x24, [sp, #48]
  4669b8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4669bc:	ldp	x21, x22, [sp, #32]
  4669c0:	ldp	x23, x24, [sp, #48]
  4669c4:	ldp	x25, x26, [sp, #64]
  4669c8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4669cc:	ldr	x2, [x20, #16]
  4669d0:	mov	x0, x19
  4669d4:	mov	w1, w21
  4669d8:	ldr	x20, [x19, #320]
  4669dc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4669e0:	ldr	x0, [x19, #320]
  4669e4:	cmp	x0, x20
  4669e8:	b.eq	4675e0 <_obstack_memory_used@@Base+0x13240>  // b.none
  4669ec:	ldp	x21, x22, [sp, #32]
  4669f0:	ldp	x23, x24, [sp, #48]
  4669f4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4669f8:	ldr	x25, [x25, #8]
  4669fc:	cbz	x25, 4678d4 <_obstack_memory_used@@Base+0x13534>
  466a00:	add	x3, x3, #0x20
  466a04:	cmp	w24, #0x4
  466a08:	b.eq	4675a8 <_obstack_memory_used@@Base+0x13208>  // b.none
  466a0c:	mov	x0, x4
  466a10:	b	465844 <_obstack_memory_used@@Base+0x114a4>
  466a14:	ldr	x25, [x20, #8]
  466a18:	cbnz	w24, 465384 <_obstack_memory_used@@Base+0x10fe4>
  466a1c:	ldp	x21, x22, [sp, #32]
  466a20:	ldp	x23, x24, [sp, #48]
  466a24:	ldp	x25, x26, [sp, #64]
  466a28:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466a2c:	mov	x20, x0
  466a30:	b	464738 <_obstack_memory_used@@Base+0x10398>
  466a34:	add	x21, x20, x22
  466a38:	cmp	x21, x20
  466a3c:	b.ls	467e84 <_obstack_memory_used@@Base+0x13ae4>  // b.plast
  466a40:	mov	w23, #0x5f                  	// #95
  466a44:	b	466a94 <_obstack_memory_used@@Base+0x126f4>
  466a48:	ldr	x1, [x19, #256]
  466a4c:	add	x0, x1, #0x1
  466a50:	cmp	x1, #0xff
  466a54:	b.ne	466a7c <_obstack_memory_used@@Base+0x126dc>  // b.any
  466a58:	ldp	x3, x2, [x19, #272]
  466a5c:	strb	wzr, [x19, #255]
  466a60:	mov	x0, x19
  466a64:	blr	x3
  466a68:	ldr	x2, [x19, #320]
  466a6c:	mov	x0, #0x1                   	// #1
  466a70:	mov	x1, #0x0                   	// #0
  466a74:	add	x2, x2, x0
  466a78:	str	x2, [x19, #320]
  466a7c:	str	x0, [x19, #256]
  466a80:	strb	w22, [x19, x1]
  466a84:	strb	w22, [x19, #264]
  466a88:	add	x20, x20, #0x1
  466a8c:	cmp	x21, x20
  466a90:	b.ls	466e48 <_obstack_memory_used@@Base+0x12aa8>  // b.plast
  466a94:	sub	x0, x21, x20
  466a98:	ldrb	w22, [x20]
  466a9c:	cmp	x0, #0x3
  466aa0:	b.le	466a48 <_obstack_memory_used@@Base+0x126a8>
  466aa4:	cmp	w22, #0x5f
  466aa8:	b.ne	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.any
  466aac:	ldrb	w0, [x20, #1]
  466ab0:	cmp	w0, #0x5f
  466ab4:	b.ne	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.any
  466ab8:	ldrb	w0, [x20, #2]
  466abc:	cmp	w0, #0x55
  466ac0:	b.ne	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.any
  466ac4:	add	x24, x20, #0x3
  466ac8:	cmp	x21, x24
  466acc:	b.ls	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.plast
  466ad0:	mov	x2, #0x0                   	// #0
  466ad4:	b	466af0 <_obstack_memory_used@@Base+0x12750>
  466ad8:	mov	w0, w1
  466adc:	sxtw	x0, w0
  466ae0:	add	x24, x24, #0x1
  466ae4:	add	x2, x0, x2, lsl #4
  466ae8:	cmp	x21, x24
  466aec:	b.eq	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.none
  466af0:	ldrb	w0, [x24]
  466af4:	sub	w1, w0, #0x30
  466af8:	and	w3, w1, #0xff
  466afc:	cmp	w3, #0x9
  466b00:	b.ls	466ad8 <_obstack_memory_used@@Base+0x12738>  // b.plast
  466b04:	sub	w1, w0, #0x41
  466b08:	and	w1, w1, #0xff
  466b0c:	cmp	w1, #0x5
  466b10:	b.hi	467b14 <_obstack_memory_used@@Base+0x13774>  // b.pmore
  466b14:	sub	w0, w0, #0x37
  466b18:	b	466adc <_obstack_memory_used@@Base+0x1273c>
  466b1c:	add	x1, x20, #0x8
  466b20:	mov	x0, x19
  466b24:	bl	460ba8 <_obstack_memory_used@@Base+0xc808>
  466b28:	mov	x2, x0
  466b2c:	cbz	x0, 464590 <_obstack_memory_used@@Base+0x101f0>
  466b30:	ldr	w1, [x0]
  466b34:	cmp	w1, #0x2f
  466b38:	b.eq	467b90 <_obstack_memory_used@@Base+0x137f0>  // b.none
  466b3c:	ldr	x20, [x19, #288]
  466b40:	mov	w1, w21
  466b44:	mov	x0, x19
  466b48:	ldr	x3, [x20]
  466b4c:	str	x3, [x19, #288]
  466b50:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466b54:	ldp	x21, x22, [sp, #32]
  466b58:	ldp	x23, x24, [sp, #48]
  466b5c:	str	x20, [x19, #288]
  466b60:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466b64:	ldr	x2, [x20, #8]
  466b68:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  466b6c:	add	x1, x1, #0xd08
  466b70:	add	x20, sp, #0x60
  466b74:	add	w2, w2, #0x1
  466b78:	mov	x0, x20
  466b7c:	bl	402720 <sprintf@plt>
  466b80:	mov	x0, x20
  466b84:	bl	402680 <strlen@plt>
  466b88:	cbz	x0, 467f8c <_obstack_memory_used@@Base+0x13bec>
  466b8c:	add	x22, x20, x0
  466b90:	ldr	x1, [x19, #256]
  466b94:	b	466bb8 <_obstack_memory_used@@Base+0x12818>
  466b98:	mov	x0, x1
  466b9c:	add	x1, x1, #0x1
  466ba0:	str	x1, [x19, #256]
  466ba4:	add	x20, x20, #0x1
  466ba8:	strb	w21, [x19, x0]
  466bac:	cmp	x22, x20
  466bb0:	strb	w21, [x19, #264]
  466bb4:	b.eq	466e54 <_obstack_memory_used@@Base+0x12ab4>  // b.none
  466bb8:	ldrb	w21, [x20]
  466bbc:	cmp	x1, #0xff
  466bc0:	b.ne	466b98 <_obstack_memory_used@@Base+0x127f8>  // b.any
  466bc4:	ldp	x3, x2, [x19, #272]
  466bc8:	strb	wzr, [x19, #255]
  466bcc:	mov	x0, x19
  466bd0:	blr	x3
  466bd4:	ldr	x2, [x19, #320]
  466bd8:	mov	x1, #0x1                   	// #1
  466bdc:	mov	x0, #0x0                   	// #0
  466be0:	add	x2, x2, x1
  466be4:	str	x2, [x19, #320]
  466be8:	b	466ba0 <_obstack_memory_used@@Base+0x12800>
  466bec:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  466bf0:	add	x20, x20, #0xf48
  466bf4:	add	x22, x20, #0x4
  466bf8:	mov	w21, #0x74                  	// #116
  466bfc:	b	466c24 <_obstack_memory_used@@Base+0x12884>
  466c00:	mov	x0, x1
  466c04:	add	x1, x1, #0x1
  466c08:	str	x1, [x19, #256]
  466c0c:	add	x20, x20, #0x1
  466c10:	strb	w21, [x19, x0]
  466c14:	cmp	x20, x22
  466c18:	strb	w21, [x19, #264]
  466c1c:	b.eq	466c54 <_obstack_memory_used@@Base+0x128b4>  // b.none
  466c20:	ldrb	w21, [x20]
  466c24:	cmp	x1, #0xff
  466c28:	b.ne	466c00 <_obstack_memory_used@@Base+0x12860>  // b.any
  466c2c:	ldp	x3, x2, [x19, #272]
  466c30:	strb	wzr, [x19, #255]
  466c34:	mov	x0, x19
  466c38:	blr	x3
  466c3c:	ldr	x2, [x19, #320]
  466c40:	mov	x1, #0x1                   	// #1
  466c44:	mov	x0, #0x0                   	// #0
  466c48:	add	x2, x2, x1
  466c4c:	str	x2, [x19, #320]
  466c50:	b	466c08 <_obstack_memory_used@@Base+0x12868>
  466c54:	ldp	x21, x22, [sp, #32]
  466c58:	ldp	x23, x24, [sp, #48]
  466c5c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466c60:	mov	w2, w23
  466c64:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  466c68:	add	x1, x1, #0xd08
  466c6c:	add	x20, sp, #0x60
  466c70:	mov	x0, x20
  466c74:	bl	402720 <sprintf@plt>
  466c78:	mov	x0, x20
  466c7c:	bl	402680 <strlen@plt>
  466c80:	ldr	x1, [x19, #256]
  466c84:	cbz	x0, 466ce4 <_obstack_memory_used@@Base+0x12944>
  466c88:	add	x22, x20, x0
  466c8c:	b	466cb0 <_obstack_memory_used@@Base+0x12910>
  466c90:	mov	x0, x1
  466c94:	add	x1, x1, #0x1
  466c98:	str	x1, [x19, #256]
  466c9c:	add	x20, x20, #0x1
  466ca0:	strb	w21, [x19, x0]
  466ca4:	cmp	x20, x22
  466ca8:	strb	w21, [x19, #264]
  466cac:	b.eq	466ce4 <_obstack_memory_used@@Base+0x12944>  // b.none
  466cb0:	ldrb	w21, [x20]
  466cb4:	cmp	x1, #0xff
  466cb8:	b.ne	466c90 <_obstack_memory_used@@Base+0x128f0>  // b.any
  466cbc:	ldp	x3, x2, [x19, #272]
  466cc0:	strb	wzr, [x19, #255]
  466cc4:	mov	x0, x19
  466cc8:	blr	x3
  466ccc:	ldr	x2, [x19, #320]
  466cd0:	mov	x1, #0x1                   	// #1
  466cd4:	mov	x0, #0x0                   	// #0
  466cd8:	add	x2, x2, x1
  466cdc:	str	x2, [x19, #320]
  466ce0:	b	466c98 <_obstack_memory_used@@Base+0x128f8>
  466ce4:	add	x0, x1, #0x1
  466ce8:	cmp	x1, #0xff
  466cec:	b.ne	466d14 <_obstack_memory_used@@Base+0x12974>  // b.any
  466cf0:	ldp	x3, x2, [x19, #272]
  466cf4:	strb	wzr, [x19, #255]
  466cf8:	mov	x0, x19
  466cfc:	blr	x3
  466d00:	ldr	x2, [x19, #320]
  466d04:	mov	x0, #0x1                   	// #1
  466d08:	mov	x1, #0x0                   	// #0
  466d0c:	add	x2, x2, x0
  466d10:	str	x2, [x19, #320]
  466d14:	str	x0, [x19, #256]
  466d18:	mov	w0, #0x7d                  	// #125
  466d1c:	strb	w0, [x19, x1]
  466d20:	strb	w0, [x19, #264]
  466d24:	ldp	x21, x22, [sp, #32]
  466d28:	ldp	x23, x24, [sp, #48]
  466d2c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466d30:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  466d34:	add	x20, x20, #0xe98
  466d38:	add	x22, x20, #0x6
  466d3c:	mov	w21, #0x5f                  	// #95
  466d40:	b	466d68 <_obstack_memory_used@@Base+0x129c8>
  466d44:	mov	x0, x1
  466d48:	add	x1, x1, #0x1
  466d4c:	str	x1, [x19, #256]
  466d50:	add	x20, x20, #0x1
  466d54:	strb	w21, [x19, x0]
  466d58:	cmp	x20, x22
  466d5c:	strb	w21, [x19, #264]
  466d60:	b.eq	466d98 <_obstack_memory_used@@Base+0x129f8>  // b.none
  466d64:	ldrb	w21, [x20]
  466d68:	cmp	x1, #0xff
  466d6c:	b.ne	466d44 <_obstack_memory_used@@Base+0x129a4>  // b.any
  466d70:	ldp	x3, x2, [x19, #272]
  466d74:	strb	wzr, [x19, #255]
  466d78:	mov	x0, x19
  466d7c:	blr	x3
  466d80:	ldr	x2, [x19, #320]
  466d84:	mov	x1, #0x1                   	// #1
  466d88:	mov	x0, #0x0                   	// #0
  466d8c:	add	x2, x2, x1
  466d90:	str	x2, [x19, #320]
  466d94:	b	466d4c <_obstack_memory_used@@Base+0x129ac>
  466d98:	ldp	x21, x22, [sp, #32]
  466d9c:	ldp	x23, x24, [sp, #48]
  466da0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466da4:	ldp	x21, x22, [sp, #32]
  466da8:	ldp	x23, x24, [sp, #48]
  466dac:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466db0:	ldrsw	x22, [x0, #24]
  466db4:	ldr	x20, [x0, #16]
  466db8:	cbz	x22, 467e6c <_obstack_memory_used@@Base+0x13acc>
  466dbc:	add	x22, x20, x22
  466dc0:	ldr	x1, [x19, #256]
  466dc4:	b	466de8 <_obstack_memory_used@@Base+0x12a48>
  466dc8:	mov	x0, x1
  466dcc:	add	x1, x1, #0x1
  466dd0:	str	x1, [x19, #256]
  466dd4:	add	x20, x20, #0x1
  466dd8:	strb	w21, [x19, x0]
  466ddc:	cmp	x20, x22
  466de0:	strb	w21, [x19, #264]
  466de4:	b.eq	466e30 <_obstack_memory_used@@Base+0x12a90>  // b.none
  466de8:	ldrb	w21, [x20]
  466dec:	cmp	x1, #0xff
  466df0:	b.ne	466dc8 <_obstack_memory_used@@Base+0x12a28>  // b.any
  466df4:	ldp	x3, x2, [x19, #272]
  466df8:	strb	wzr, [x19, #255]
  466dfc:	mov	x0, x19
  466e00:	blr	x3
  466e04:	ldr	x2, [x19, #320]
  466e08:	mov	x1, #0x1                   	// #1
  466e0c:	mov	x0, #0x0                   	// #0
  466e10:	add	x2, x2, x1
  466e14:	str	x2, [x19, #320]
  466e18:	b	466dd0 <_obstack_memory_used@@Base+0x12a30>
  466e1c:	ldr	x1, [x19, #256]
  466e20:	b	465038 <_obstack_memory_used@@Base+0x10c98>
  466e24:	ldp	x21, x22, [sp, #32]
  466e28:	ldp	x23, x24, [sp, #48]
  466e2c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466e30:	ldp	x21, x22, [sp, #32]
  466e34:	ldp	x23, x24, [sp, #48]
  466e38:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466e3c:	ldp	x21, x22, [sp, #32]
  466e40:	ldp	x23, x24, [sp, #48]
  466e44:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466e48:	ldp	x21, x22, [sp, #32]
  466e4c:	ldp	x23, x24, [sp, #48]
  466e50:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466e54:	ldp	x21, x22, [sp, #32]
  466e58:	ldp	x23, x24, [sp, #48]
  466e5c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466e60:	ldr	x1, [x2, #8]
  466e64:	ldr	w22, [x1, #28]
  466e68:	cmp	w22, #0x6
  466e6c:	b.hi	466f04 <_obstack_memory_used@@Base+0x12b64>  // b.pmore
  466e70:	cbz	w22, 464654 <_obstack_memory_used@@Base+0x102b4>
  466e74:	ldr	x1, [x20, #16]
  466e78:	ldr	w1, [x1]
  466e7c:	cbnz	w1, 464654 <_obstack_memory_used@@Base+0x102b4>
  466e80:	cmp	w0, #0x3e
  466e84:	b.eq	468208 <_obstack_memory_used@@Base+0x13e68>  // b.none
  466e88:	ldr	x2, [x20, #16]
  466e8c:	mov	w1, w21
  466e90:	mov	x0, x19
  466e94:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  466e98:	cmp	w22, #0x4
  466e9c:	b.eq	4681e8 <_obstack_memory_used@@Base+0x13e48>  // b.none
  466ea0:	b.hi	4680ac <_obstack_memory_used@@Base+0x13d0c>  // b.pmore
  466ea4:	cmp	w22, #0x2
  466ea8:	b.eq	468198 <_obstack_memory_used@@Base+0x13df8>  // b.none
  466eac:	cmp	w22, #0x3
  466eb0:	b.ne	4682e0 <_obstack_memory_used@@Base+0x13f40>  // b.any
  466eb4:	ldr	x1, [x19, #256]
  466eb8:	cmp	x1, #0xff
  466ebc:	b.ne	466ee4 <_obstack_memory_used@@Base+0x12b44>  // b.any
  466ec0:	ldp	x3, x2, [x19, #272]
  466ec4:	strb	wzr, [x19, #255]
  466ec8:	mov	x0, x19
  466ecc:	blr	x3
  466ed0:	str	xzr, [x19, #256]
  466ed4:	ldr	x0, [x19, #320]
  466ed8:	mov	x1, #0x0                   	// #0
  466edc:	add	x0, x0, #0x1
  466ee0:	str	x0, [x19, #320]
  466ee4:	add	x0, x1, #0x1
  466ee8:	str	x0, [x19, #256]
  466eec:	mov	w0, #0x6c                  	// #108
  466ef0:	strb	w0, [x19, x1]
  466ef4:	strb	w0, [x19, #264]
  466ef8:	ldp	x21, x22, [sp, #32]
  466efc:	ldp	x23, x24, [sp, #48]
  466f00:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466f04:	cmp	w22, #0x7
  466f08:	b.ne	464654 <_obstack_memory_used@@Base+0x102b4>  // b.any
  466f0c:	ldr	x1, [x20, #16]
  466f10:	ldr	w3, [x1]
  466f14:	cbnz	w3, 464654 <_obstack_memory_used@@Base+0x102b4>
  466f18:	ldr	w3, [x1, #16]
  466f1c:	cmp	w0, #0x3d
  466f20:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  466f24:	b.ne	464654 <_obstack_memory_used@@Base+0x102b4>  // b.any
  466f28:	ldr	x0, [x1, #8]
  466f2c:	ldrb	w0, [x0]
  466f30:	cmp	w0, #0x30
  466f34:	b.eq	4682ec <_obstack_memory_used@@Base+0x13f4c>  // b.none
  466f38:	cmp	w0, #0x31
  466f3c:	b.ne	464654 <_obstack_memory_used@@Base+0x102b4>  // b.any
  466f40:	mov	x0, x19
  466f44:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  466f48:	mov	x2, #0x4                   	// #4
  466f4c:	add	x1, x1, #0xe18
  466f50:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  466f54:	ldp	x21, x22, [sp, #32]
  466f58:	ldp	x23, x24, [sp, #48]
  466f5c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  466f60:	ldp	x3, x2, [x19, #272]
  466f64:	strb	wzr, [x19, #255]
  466f68:	mov	x0, x19
  466f6c:	blr	x3
  466f70:	ldr	x0, [x19, #320]
  466f74:	mov	x1, #0x0                   	// #0
  466f78:	add	x0, x0, #0x1
  466f7c:	str	x0, [x19, #320]
  466f80:	b	466708 <_obstack_memory_used@@Base+0x12368>
  466f84:	ldr	x0, [x22, #8]
  466f88:	ldr	x23, [x0]
  466f8c:	ldrb	w0, [x23]
  466f90:	subs	w1, w0, #0x61
  466f94:	b.ne	466fa8 <_obstack_memory_used@@Base+0x12c08>  // b.any
  466f98:	ldrb	w1, [x23, #1]
  466f9c:	subs	w1, w1, #0x64
  466fa0:	b.ne	466fa8 <_obstack_memory_used@@Base+0x12c08>  // b.any
  466fa4:	ldrb	w1, [x23, #2]
  466fa8:	ldr	w2, [x20]
  466fac:	cbnz	w1, 466fb8 <_obstack_memory_used@@Base+0x12c18>
  466fb0:	cmp	w2, #0x3
  466fb4:	b.eq	467fb0 <_obstack_memory_used@@Base+0x13c10>  // b.none
  466fb8:	cmp	w2, #0x39
  466fbc:	b.eq	468058 <_obstack_memory_used@@Base+0x13cb8>  // b.none
  466fc0:	cmp	w0, #0x73
  466fc4:	b.ne	467094 <_obstack_memory_used@@Base+0x12cf4>  // b.any
  466fc8:	ldrb	w1, [x23, #1]
  466fcc:	cmp	w1, #0x5a
  466fd0:	b.ne	4670e0 <_obstack_memory_used@@Base+0x12d40>  // b.any
  466fd4:	ldrb	w3, [x23, #2]
  466fd8:	cbnz	w3, 4670e0 <_obstack_memory_used@@Base+0x12d40>
  466fdc:	mov	x1, x20
  466fe0:	mov	x0, x19
  466fe4:	bl	460bd8 <_obstack_memory_used@@Base+0xc838>
  466fe8:	cbnz	x0, 467004 <_obstack_memory_used@@Base+0x12c64>
  466fec:	b	467010 <_obstack_memory_used@@Base+0x12c70>
  466ff0:	ldr	x1, [x0, #8]
  466ff4:	cbz	x1, 467010 <_obstack_memory_used@@Base+0x12c70>
  466ff8:	ldr	x0, [x0, #16]
  466ffc:	add	w3, w3, #0x1
  467000:	cbz	x0, 467010 <_obstack_memory_used@@Base+0x12c70>
  467004:	ldr	w1, [x0]
  467008:	cmp	w1, #0x2f
  46700c:	b.eq	466ff0 <_obstack_memory_used@@Base+0x12c50>  // b.none
  467010:	mov	w2, w3
  467014:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  467018:	add	x1, x1, #0xd08
  46701c:	add	x20, sp, #0x60
  467020:	mov	x0, x20
  467024:	bl	402720 <sprintf@plt>
  467028:	mov	x0, x20
  46702c:	bl	402680 <strlen@plt>
  467030:	cbz	x0, 468164 <_obstack_memory_used@@Base+0x13dc4>
  467034:	add	x22, x20, x0
  467038:	ldr	x1, [x19, #256]
  46703c:	b	467060 <_obstack_memory_used@@Base+0x12cc0>
  467040:	mov	x0, x1
  467044:	add	x1, x1, #0x1
  467048:	str	x1, [x19, #256]
  46704c:	add	x20, x20, #0x1
  467050:	strb	w21, [x19, x0]
  467054:	cmp	x20, x22
  467058:	strb	w21, [x19, #264]
  46705c:	b.eq	467f68 <_obstack_memory_used@@Base+0x13bc8>  // b.none
  467060:	ldrb	w21, [x20]
  467064:	cmp	x1, #0xff
  467068:	b.ne	467040 <_obstack_memory_used@@Base+0x12ca0>  // b.any
  46706c:	ldp	x3, x2, [x19, #272]
  467070:	strb	wzr, [x19, #255]
  467074:	mov	x0, x19
  467078:	blr	x3
  46707c:	ldr	x2, [x19, #320]
  467080:	mov	x1, #0x1                   	// #1
  467084:	mov	x0, #0x0                   	// #0
  467088:	add	x2, x2, x1
  46708c:	str	x2, [x19, #320]
  467090:	b	467048 <_obstack_memory_used@@Base+0x12ca8>
  467094:	mov	x0, x19
  467098:	mov	x2, x22
  46709c:	mov	w1, w21
  4670a0:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  4670a4:	ldrb	w0, [x23]
  4670a8:	cmp	w0, #0x67
  4670ac:	b.ne	467170 <_obstack_memory_used@@Base+0x12dd0>  // b.any
  4670b0:	ldrb	w1, [x23, #1]
  4670b4:	cmp	w1, #0x73
  4670b8:	b.ne	467170 <_obstack_memory_used@@Base+0x12dd0>  // b.any
  4670bc:	ldrb	w1, [x23, #2]
  4670c0:	cbnz	w1, 467170 <_obstack_memory_used@@Base+0x12dd0>
  4670c4:	mov	w1, w21
  4670c8:	mov	x2, x20
  4670cc:	mov	x0, x19
  4670d0:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4670d4:	ldp	x21, x22, [sp, #32]
  4670d8:	ldp	x23, x24, [sp, #48]
  4670dc:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4670e0:	cmp	w0, #0x73
  4670e4:	b.ne	467094 <_obstack_memory_used@@Base+0x12cf4>  // b.any
  4670e8:	ldrb	w0, [x23, #1]
  4670ec:	cmp	w0, #0x50
  4670f0:	b.ne	467094 <_obstack_memory_used@@Base+0x12cf4>  // b.any
  4670f4:	ldrb	w0, [x23, #2]
  4670f8:	mov	w3, #0x0                   	// #0
  4670fc:	cbz	w0, 467110 <_obstack_memory_used@@Base+0x12d70>
  467100:	b	467094 <_obstack_memory_used@@Base+0x12cf4>
  467104:	add	w3, w3, #0x1
  467108:	ldr	x20, [x20, #16]
  46710c:	cbz	x20, 467bd4 <_obstack_memory_used@@Base+0x13834>
  467110:	ldr	w0, [x20]
  467114:	cmp	w0, #0x2f
  467118:	b.ne	467bd4 <_obstack_memory_used@@Base+0x13834>  // b.any
  46711c:	ldr	x0, [x20, #8]
  467120:	cbz	x0, 467bd4 <_obstack_memory_used@@Base+0x13834>
  467124:	ldr	w1, [x0]
  467128:	cmp	w1, #0x4b
  46712c:	b.ne	467104 <_obstack_memory_used@@Base+0x12d64>  // b.any
  467130:	ldr	x1, [x0, #8]
  467134:	mov	x0, x19
  467138:	bl	460bd8 <_obstack_memory_used@@Base+0xc838>
  46713c:	mov	w1, #0x0                   	// #0
  467140:	cbnz	x0, 46715c <_obstack_memory_used@@Base+0x12dbc>
  467144:	b	467168 <_obstack_memory_used@@Base+0x12dc8>
  467148:	ldr	x2, [x0, #8]
  46714c:	cbz	x2, 467168 <_obstack_memory_used@@Base+0x12dc8>
  467150:	ldr	x0, [x0, #16]
  467154:	add	w1, w1, #0x1
  467158:	cbz	x0, 467168 <_obstack_memory_used@@Base+0x12dc8>
  46715c:	ldr	w2, [x0]
  467160:	cmp	w2, #0x2f
  467164:	b.eq	467148 <_obstack_memory_used@@Base+0x12da8>  // b.none
  467168:	add	w3, w3, w1
  46716c:	b	467108 <_obstack_memory_used@@Base+0x12d68>
  467170:	cmp	w0, #0x73
  467174:	b.ne	466104 <_obstack_memory_used@@Base+0x11d64>  // b.any
  467178:	ldrb	w0, [x23, #1]
  46717c:	cmp	w0, #0x74
  467180:	b.ne	466104 <_obstack_memory_used@@Base+0x11d64>  // b.any
  467184:	ldrb	w0, [x23, #2]
  467188:	cbnz	w0, 466104 <_obstack_memory_used@@Base+0x11d64>
  46718c:	ldr	x1, [x19, #256]
  467190:	cmp	x1, #0xff
  467194:	b.ne	4671b8 <_obstack_memory_used@@Base+0x12e18>  // b.any
  467198:	ldp	x3, x2, [x19, #272]
  46719c:	strb	wzr, [x19, #255]
  4671a0:	mov	x0, x19
  4671a4:	blr	x3
  4671a8:	ldr	x0, [x19, #320]
  4671ac:	mov	x1, #0x0                   	// #0
  4671b0:	add	x0, x0, #0x1
  4671b4:	str	x0, [x19, #320]
  4671b8:	add	x0, x1, #0x1
  4671bc:	str	x0, [x19, #256]
  4671c0:	mov	w0, #0x28                  	// #40
  4671c4:	strb	w0, [x19, x1]
  4671c8:	strb	w0, [x19, #264]
  4671cc:	mov	w1, w21
  4671d0:	mov	x2, x20
  4671d4:	mov	x0, x19
  4671d8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4671dc:	ldr	x1, [x19, #256]
  4671e0:	cmp	x1, #0xff
  4671e4:	b.ne	467208 <_obstack_memory_used@@Base+0x12e68>  // b.any
  4671e8:	ldp	x3, x2, [x19, #272]
  4671ec:	strb	wzr, [x19, #255]
  4671f0:	mov	x0, x19
  4671f4:	blr	x3
  4671f8:	ldr	x0, [x19, #320]
  4671fc:	mov	x1, #0x0                   	// #0
  467200:	add	x0, x0, #0x1
  467204:	str	x0, [x19, #320]
  467208:	add	x0, x1, #0x1
  46720c:	str	x0, [x19, #256]
  467210:	mov	w0, #0x29                  	// #41
  467214:	strb	w0, [x19, x1]
  467218:	strb	w0, [x19, #264]
  46721c:	ldp	x21, x22, [sp, #32]
  467220:	ldp	x23, x24, [sp, #48]
  467224:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467228:	ldr	x2, [x2, #8]
  46722c:	mov	x0, x19
  467230:	mov	w1, w21
  467234:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467238:	ldr	x0, [x19, #368]
  46723c:	cbz	x0, 467248 <_obstack_memory_used@@Base+0x12ea8>
  467240:	ldr	x0, [sp, #96]
  467244:	str	x0, [x19, #288]
  467248:	ldr	x1, [x19, #256]
  46724c:	ldrb	w2, [x19, #264]
  467250:	mov	x0, x1
  467254:	cmp	w2, #0x3c
  467258:	b.eq	467cb0 <_obstack_memory_used@@Base+0x13910>  // b.none
  46725c:	add	x1, x0, #0x1
  467260:	cmp	x0, #0xff
  467264:	b.ne	467290 <_obstack_memory_used@@Base+0x12ef0>  // b.any
  467268:	ldp	x3, x2, [x19, #272]
  46726c:	strb	wzr, [x19, #255]
  467270:	mov	x1, x0
  467274:	mov	x0, x19
  467278:	blr	x3
  46727c:	ldr	x2, [x19, #320]
  467280:	mov	x1, #0x1                   	// #1
  467284:	mov	x0, #0x0                   	// #0
  467288:	add	x2, x2, x1
  46728c:	str	x2, [x19, #320]
  467290:	str	x1, [x19, #256]
  467294:	mov	w2, #0x3c                  	// #60
  467298:	strb	w2, [x19, x0]
  46729c:	mov	w1, w21
  4672a0:	strb	w2, [x19, #264]
  4672a4:	mov	x0, x19
  4672a8:	ldr	x2, [x20, #8]
  4672ac:	ldr	x2, [x2, #16]
  4672b0:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4672b4:	ldrb	w0, [x19, #264]
  4672b8:	cmp	w0, #0x3e
  4672bc:	b.eq	467cf4 <_obstack_memory_used@@Base+0x13954>  // b.none
  4672c0:	ldr	x0, [x19, #256]
  4672c4:	add	x1, x0, #0x1
  4672c8:	cmp	x0, #0xff
  4672cc:	b.ne	4672f8 <_obstack_memory_used@@Base+0x12f58>  // b.any
  4672d0:	ldp	x3, x2, [x19, #272]
  4672d4:	strb	wzr, [x19, #255]
  4672d8:	mov	x1, x0
  4672dc:	mov	x0, x19
  4672e0:	blr	x3
  4672e4:	ldr	x2, [x19, #320]
  4672e8:	mov	x1, #0x1                   	// #1
  4672ec:	mov	x0, #0x0                   	// #0
  4672f0:	add	x2, x2, x1
  4672f4:	str	x2, [x19, #320]
  4672f8:	str	x1, [x19, #256]
  4672fc:	mov	w1, #0x3e                  	// #62
  467300:	strb	w1, [x19, x0]
  467304:	strb	w1, [x19, #264]
  467308:	ldp	x21, x22, [sp, #32]
  46730c:	ldp	x23, x24, [sp, #48]
  467310:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467314:	mov	x2, x20
  467318:	mov	w1, w21
  46731c:	mov	x0, x19
  467320:	bl	4683a8 <_obstack_memory_used@@Base+0x14008>
  467324:	b	464808 <_obstack_memory_used@@Base+0x10468>
  467328:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46732c:	add	x24, x24, #0xe90
  467330:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467334:	add	x24, x24, #0x5
  467338:	add	x22, x22, #0xe91
  46733c:	mov	w23, #0x5f                  	// #95
  467340:	ldr	x1, [x19, #256]
  467344:	b	467368 <_obstack_memory_used@@Base+0x12fc8>
  467348:	mov	x0, x1
  46734c:	add	x1, x1, #0x1
  467350:	str	x1, [x19, #256]
  467354:	cmp	x24, x22
  467358:	strb	w23, [x19, x0]
  46735c:	strb	w23, [x19, #264]
  467360:	b.eq	464fc8 <_obstack_memory_used@@Base+0x10c28>  // b.none
  467364:	ldrb	w23, [x22], #1
  467368:	cmp	x1, #0xff
  46736c:	b.ne	467348 <_obstack_memory_used@@Base+0x12fa8>  // b.any
  467370:	ldp	x3, x2, [x19, #272]
  467374:	strb	wzr, [x19, #255]
  467378:	mov	x0, x19
  46737c:	blr	x3
  467380:	ldr	x2, [x19, #320]
  467384:	mov	x1, #0x1                   	// #1
  467388:	mov	x0, #0x0                   	// #0
  46738c:	add	x2, x2, x1
  467390:	str	x2, [x19, #320]
  467394:	b	467350 <_obstack_memory_used@@Base+0x12fb0>
  467398:	mov	x23, #0x0                   	// #0
  46739c:	mov	w22, #0x3a                  	// #58
  4673a0:	ldr	x1, [x19, #256]
  4673a4:	b	4673c4 <_obstack_memory_used@@Base+0x13024>
  4673a8:	mov	x0, x1
  4673ac:	add	x1, x1, #0x1
  4673b0:	str	x1, [x19, #256]
  4673b4:	strb	w22, [x19, x0]
  4673b8:	strb	w22, [x19, #264]
  4673bc:	cbnz	x23, 4647ac <_obstack_memory_used@@Base+0x1040c>
  4673c0:	mov	x23, #0x1                   	// #1
  4673c4:	cmp	x1, #0xff
  4673c8:	b.ne	4673a8 <_obstack_memory_used@@Base+0x13008>  // b.any
  4673cc:	ldp	x3, x2, [x19, #272]
  4673d0:	strb	wzr, [x19, #255]
  4673d4:	mov	x0, x19
  4673d8:	blr	x3
  4673dc:	ldr	x2, [x19, #320]
  4673e0:	mov	x1, #0x1                   	// #1
  4673e4:	mov	x0, #0x0                   	// #0
  4673e8:	add	x2, x2, x1
  4673ec:	str	x2, [x19, #320]
  4673f0:	b	4673b0 <_obstack_memory_used@@Base+0x13010>
  4673f4:	ldr	x1, [x19, #256]
  4673f8:	cmp	x1, #0xff
  4673fc:	b.ne	467420 <_obstack_memory_used@@Base+0x13080>  // b.any
  467400:	ldp	x3, x2, [x19, #272]
  467404:	strb	wzr, [x19, #255]
  467408:	mov	x0, x19
  46740c:	blr	x3
  467410:	ldr	x0, [x19, #320]
  467414:	mov	x1, #0x0                   	// #0
  467418:	add	x0, x0, #0x1
  46741c:	str	x0, [x19, #320]
  467420:	add	x0, x1, #0x1
  467424:	str	x0, [x19, #256]
  467428:	mov	w0, #0x5b                  	// #91
  46742c:	strb	w0, [x19, x1]
  467430:	strb	w0, [x19, #264]
  467434:	mov	w1, w21
  467438:	mov	x0, x19
  46743c:	ldr	x2, [x20, #16]
  467440:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467444:	ldr	x1, [x19, #256]
  467448:	cmp	x1, #0xff
  46744c:	b.ne	467470 <_obstack_memory_used@@Base+0x130d0>  // b.any
  467450:	ldp	x3, x2, [x19, #272]
  467454:	strb	wzr, [x19, #255]
  467458:	mov	x0, x19
  46745c:	blr	x3
  467460:	ldr	x0, [x19, #320]
  467464:	mov	x1, #0x0                   	// #0
  467468:	add	x0, x0, #0x1
  46746c:	str	x0, [x19, #320]
  467470:	add	x0, x1, #0x1
  467474:	str	x0, [x19, #256]
  467478:	mov	w0, #0x5d                  	// #93
  46747c:	strb	w0, [x19, x1]
  467480:	strb	w0, [x19, #264]
  467484:	ldp	x21, x22, [sp, #32]
  467488:	ldp	x23, x24, [sp, #48]
  46748c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467490:	ldr	x0, [x19, #256]
  467494:	cmp	x0, #0xff
  467498:	b.ne	4674c0 <_obstack_memory_used@@Base+0x13120>  // b.any
  46749c:	ldp	x3, x2, [x19, #272]
  4674a0:	strb	wzr, [x19, #255]
  4674a4:	mov	x1, x0
  4674a8:	mov	x0, x19
  4674ac:	blr	x3
  4674b0:	ldr	x1, [x19, #320]
  4674b4:	mov	x0, #0x0                   	// #0
  4674b8:	add	x1, x1, #0x1
  4674bc:	str	x1, [x19, #320]
  4674c0:	add	x1, x0, #0x1
  4674c4:	str	x1, [x19, #256]
  4674c8:	mov	w2, #0x20                  	// #32
  4674cc:	strb	w2, [x19, x0]
  4674d0:	strb	w2, [x19, #264]
  4674d4:	b	4659f8 <_obstack_memory_used@@Base+0x11658>
  4674d8:	ldr	x0, [x19, #256]
  4674dc:	cmp	x0, #0xff
  4674e0:	b.ne	467508 <_obstack_memory_used@@Base+0x13168>  // b.any
  4674e4:	ldp	x3, x2, [x19, #272]
  4674e8:	strb	wzr, [x19, #255]
  4674ec:	mov	x1, x0
  4674f0:	mov	x0, x19
  4674f4:	blr	x3
  4674f8:	ldr	x1, [x19, #320]
  4674fc:	mov	x0, #0x0                   	// #0
  467500:	add	x1, x1, #0x1
  467504:	str	x1, [x19, #320]
  467508:	add	x1, x0, #0x1
  46750c:	str	x1, [x19, #256]
  467510:	mov	w2, #0x20                  	// #32
  467514:	strb	w2, [x19, x0]
  467518:	strb	w2, [x19, #264]
  46751c:	b	465998 <_obstack_memory_used@@Base+0x115f8>
  467520:	add	x2, x20, #0x10
  467524:	mov	w1, w22
  467528:	mov	x0, x19
  46752c:	bl	468ba8 <_obstack_memory_used@@Base+0x14808>
  467530:	ldr	x2, [x20, #8]
  467534:	cbz	x2, 467d60 <_obstack_memory_used@@Base+0x139c0>
  467538:	mov	w1, w22
  46753c:	mov	x0, x19
  467540:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467544:	ldp	x21, x22, [sp, #32]
  467548:	ldp	x23, x24, [sp, #48]
  46754c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467550:	ldp	x3, x2, [x19, #272]
  467554:	strb	wzr, [x19, #255]
  467558:	mov	x0, x19
  46755c:	blr	x3
  467560:	ldr	x0, [x19, #320]
  467564:	mov	w1, #0x29                  	// #41
  467568:	strb	w1, [x19]
  46756c:	strb	w1, [x19, #264]
  467570:	mov	x1, #0x1                   	// #1
  467574:	add	x0, x0, x1
  467578:	str	x1, [x19, #256]
  46757c:	str	x0, [x19, #320]
  467580:	ldr	w0, [x20]
  467584:	cmp	w0, #0x3e
  467588:	b.ne	4646d4 <_obstack_memory_used@@Base+0x10334>  // b.any
  46758c:	ldr	x1, [x19, #256]
  467590:	mov	w0, #0x2d                  	// #45
  467594:	add	x2, x1, #0x1
  467598:	str	x2, [x19, #256]
  46759c:	strb	w0, [x19, x1]
  4675a0:	strb	w0, [x19, #264]
  4675a4:	b	4646d4 <_obstack_memory_used@@Base+0x10334>
  4675a8:	ldp	x21, x22, [sp, #32]
  4675ac:	ldp	x23, x24, [sp, #48]
  4675b0:	ldp	x25, x26, [sp, #64]
  4675b4:	str	x4, [x19, #296]
  4675b8:	str	w1, [x19, #304]
  4675bc:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4675c0:	ldp	x21, x22, [sp, #32]
  4675c4:	ldp	x23, x24, [sp, #48]
  4675c8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4675cc:	ldp	x21, x22, [sp, #32]
  4675d0:	ldp	x23, x24, [sp, #48]
  4675d4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4675d8:	mov	w22, #0x0                   	// #0
  4675dc:	b	464738 <_obstack_memory_used@@Base+0x10398>
  4675e0:	ldr	x0, [x19, #256]
  4675e4:	cmp	x0, x22
  4675e8:	b.eq	467d9c <_obstack_memory_used@@Base+0x139fc>  // b.none
  4675ec:	ldp	x21, x22, [sp, #32]
  4675f0:	ldp	x23, x24, [sp, #48]
  4675f4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4675f8:	ldr	x2, [x20, #8]
  4675fc:	mov	w1, w21
  467600:	mov	x0, x19
  467604:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467608:	ldp	x21, x22, [sp, #32]
  46760c:	ldp	x23, x24, [sp, #48]
  467610:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467614:	cmp	x3, #0xff
  467618:	b.ne	46758c <_obstack_memory_used@@Base+0x131ec>  // b.any
  46761c:	ldp	x4, x2, [x19, #272]
  467620:	strb	wzr, [x19, #255]
  467624:	mov	x0, x19
  467628:	mov	x1, x3
  46762c:	blr	x4
  467630:	str	xzr, [x19, #256]
  467634:	ldr	x0, [x19, #320]
  467638:	add	x0, x0, #0x1
  46763c:	str	x0, [x19, #320]
  467640:	b	46758c <_obstack_memory_used@@Base+0x131ec>
  467644:	ldp	x21, x22, [sp, #32]
  467648:	ldp	x23, x24, [sp, #48]
  46764c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467650:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467654:	add	x24, x24, #0xca8
  467658:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46765c:	add	x24, x24, #0xd
  467660:	add	x22, x22, #0xca9
  467664:	mov	w20, #0x7b                  	// #123
  467668:	ldr	x1, [x19, #256]
  46766c:	b	467690 <_obstack_memory_used@@Base+0x132f0>
  467670:	mov	x0, x1
  467674:	add	x1, x1, #0x1
  467678:	str	x1, [x19, #256]
  46767c:	cmp	x24, x22
  467680:	strb	w20, [x19, x0]
  467684:	strb	w20, [x19, #264]
  467688:	b.eq	4676c0 <_obstack_memory_used@@Base+0x13320>  // b.none
  46768c:	ldrb	w20, [x22], #1
  467690:	cmp	x1, #0xff
  467694:	b.ne	467670 <_obstack_memory_used@@Base+0x132d0>  // b.any
  467698:	ldp	x3, x2, [x19, #272]
  46769c:	strb	wzr, [x19, #255]
  4676a0:	mov	x0, x19
  4676a4:	blr	x3
  4676a8:	ldr	x2, [x19, #320]
  4676ac:	mov	x1, #0x1                   	// #1
  4676b0:	mov	x0, #0x0                   	// #0
  4676b4:	add	x2, x2, x1
  4676b8:	str	x2, [x19, #320]
  4676bc:	b	467678 <_obstack_memory_used@@Base+0x132d8>
  4676c0:	ldr	w2, [x23, #16]
  4676c4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  4676c8:	add	x1, x1, #0xd08
  4676cc:	add	x20, sp, #0x60
  4676d0:	add	w2, w2, #0x1
  4676d4:	mov	x0, x20
  4676d8:	bl	402720 <sprintf@plt>
  4676dc:	mov	x0, x20
  4676e0:	bl	402680 <strlen@plt>
  4676e4:	ldr	x1, [x19, #256]
  4676e8:	cbz	x0, 467748 <_obstack_memory_used@@Base+0x133a8>
  4676ec:	add	x24, x20, x0
  4676f0:	b	467714 <_obstack_memory_used@@Base+0x13374>
  4676f4:	mov	x0, x1
  4676f8:	add	x1, x1, #0x1
  4676fc:	str	x1, [x19, #256]
  467700:	add	x20, x20, #0x1
  467704:	strb	w22, [x19, x0]
  467708:	cmp	x24, x20
  46770c:	strb	w22, [x19, #264]
  467710:	b.eq	467748 <_obstack_memory_used@@Base+0x133a8>  // b.none
  467714:	ldrb	w22, [x20]
  467718:	cmp	x1, #0xff
  46771c:	b.ne	4676f4 <_obstack_memory_used@@Base+0x13354>  // b.any
  467720:	ldp	x3, x2, [x19, #272]
  467724:	strb	wzr, [x19, #255]
  467728:	mov	x0, x19
  46772c:	blr	x3
  467730:	ldr	x2, [x19, #320]
  467734:	mov	x1, #0x1                   	// #1
  467738:	mov	x0, #0x0                   	// #0
  46773c:	add	x2, x2, x1
  467740:	str	x2, [x19, #320]
  467744:	b	4676fc <_obstack_memory_used@@Base+0x1335c>
  467748:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46774c:	add	x20, x20, #0xcb8
  467750:	add	x24, x20, #0x3
  467754:	mov	w22, #0x7d                  	// #125
  467758:	b	467780 <_obstack_memory_used@@Base+0x133e0>
  46775c:	mov	x0, x1
  467760:	add	x1, x1, #0x1
  467764:	str	x1, [x19, #256]
  467768:	add	x20, x20, #0x1
  46776c:	strb	w22, [x19, x0]
  467770:	cmp	x24, x20
  467774:	strb	w22, [x19, #264]
  467778:	b.eq	4677b0 <_obstack_memory_used@@Base+0x13410>  // b.none
  46777c:	ldrb	w22, [x20]
  467780:	cmp	x1, #0xff
  467784:	b.ne	46775c <_obstack_memory_used@@Base+0x133bc>  // b.any
  467788:	ldp	x3, x2, [x19, #272]
  46778c:	strb	wzr, [x19, #255]
  467790:	mov	x0, x19
  467794:	blr	x3
  467798:	ldr	x2, [x19, #320]
  46779c:	mov	x1, #0x1                   	// #1
  4677a0:	mov	x0, #0x0                   	// #0
  4677a4:	add	x2, x2, x1
  4677a8:	str	x2, [x19, #320]
  4677ac:	b	467764 <_obstack_memory_used@@Base+0x133c4>
  4677b0:	ldr	x23, [x23, #8]
  4677b4:	b	4647bc <_obstack_memory_used@@Base+0x1041c>
  4677b8:	ldr	x25, [x25, #16]
  4677bc:	ldr	w5, [x25]
  4677c0:	cmp	w5, #0x47
  4677c4:	b.eq	467e5c <_obstack_memory_used@@Base+0x13abc>  // b.none
  4677c8:	ubfiz	x3, x24, #5, #32
  4677cc:	sub	w0, w5, #0x1c
  4677d0:	mov	x1, #0x1f                  	// #31
  4677d4:	add	x3, x23, x3
  4677d8:	cmp	w0, #0x34
  4677dc:	mov	x2, #0x1                   	// #1
  4677e0:	movk	x1, #0x1a, lsl #48
  4677e4:	b.hi	465884 <_obstack_memory_used@@Base+0x114e4>  // b.pmore
  4677e8:	lsl	x0, x2, x0
  4677ec:	tst	x0, x1
  4677f0:	b.eq	465884 <_obstack_memory_used@@Base+0x114e4>  // b.none
  4677f4:	cmp	w24, #0x4
  4677f8:	b.eq	4678d8 <_obstack_memory_used@@Base+0x13538>  // b.none
  4677fc:	ldp	x8, x9, [x3, #-32]
  467800:	stur	x25, [x3, #-24]
  467804:	ldp	x4, x5, [x3, #-16]
  467808:	stur	wzr, [x3, #-16]
  46780c:	stp	x8, x9, [x3]
  467810:	sub	x0, x3, #0x20
  467814:	add	w24, w24, #0x1
  467818:	ldr	x25, [x25, #8]
  46781c:	stp	x4, x5, [x3, #16]
  467820:	ldr	w5, [x25]
  467824:	stp	x6, x0, [x3, #-8]
  467828:	sub	w0, w5, #0x1c
  46782c:	str	x3, [x19, #296]
  467830:	cmp	w0, #0x34
  467834:	add	x3, x3, #0x20
  467838:	b.ls	4677e8 <_obstack_memory_used@@Base+0x13448>  // b.plast
  46783c:	b	465884 <_obstack_memory_used@@Base+0x114e4>
  467840:	mov	w0, #0x1                   	// #1
  467844:	ldp	x21, x22, [sp, #32]
  467848:	ldp	x23, x24, [sp, #48]
  46784c:	str	w0, [x19, #304]
  467850:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467854:	ldr	x4, [x19, #288]
  467858:	add	x0, sp, #0x60
  46785c:	str	x0, [x19, #296]
  467860:	mov	w1, w22
  467864:	mov	x0, x19
  467868:	stp	x3, x20, [sp, #96]
  46786c:	str	wzr, [sp, #112]
  467870:	str	x4, [sp, #120]
  467874:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467878:	ldr	w0, [sp, #112]
  46787c:	ldr	x1, [sp, #96]
  467880:	str	x1, [x19, #296]
  467884:	cbnz	w0, 467fa4 <_obstack_memory_used@@Base+0x13c04>
  467888:	ldr	x1, [x19, #256]
  46788c:	cmp	x1, #0xff
  467890:	b.ne	4678b8 <_obstack_memory_used@@Base+0x13518>  // b.any
  467894:	ldp	x3, x2, [x19, #272]
  467898:	strb	wzr, [x19, #255]
  46789c:	mov	x0, x19
  4678a0:	blr	x3
  4678a4:	str	xzr, [x19, #256]
  4678a8:	ldr	x0, [x19, #320]
  4678ac:	mov	x1, #0x0                   	// #0
  4678b0:	add	x0, x0, #0x1
  4678b4:	str	x0, [x19, #320]
  4678b8:	add	x0, x1, #0x1
  4678bc:	str	x0, [x19, #256]
  4678c0:	mov	w0, #0x20                  	// #32
  4678c4:	strb	w0, [x19, x1]
  4678c8:	strb	w0, [x19, #264]
  4678cc:	ldr	x3, [x19, #296]
  4678d0:	b	464d5c <_obstack_memory_used@@Base+0x109bc>
  4678d4:	str	x3, [x19, #296]
  4678d8:	mov	w0, #0x1                   	// #1
  4678dc:	ldp	x21, x22, [sp, #32]
  4678e0:	ldp	x23, x24, [sp, #48]
  4678e4:	ldp	x25, x26, [sp, #64]
  4678e8:	str	w0, [x19, #304]
  4678ec:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4678f0:	ldrb	w0, [x0]
  4678f4:	sub	w1, w0, #0x63
  4678f8:	sub	w0, w0, #0x72
  4678fc:	and	w1, w1, #0xff
  467900:	and	w0, w0, #0xff
  467904:	cmp	w1, #0x1
  467908:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  46790c:	b.hi	465bbc <_obstack_memory_used@@Base+0x1181c>  // b.pmore
  467910:	mov	w1, w21
  467914:	mov	x0, x19
  467918:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  46791c:	ldr	x1, [x19, #256]
  467920:	cmp	x1, #0xff
  467924:	b.ne	46794c <_obstack_memory_used@@Base+0x135ac>  // b.any
  467928:	ldp	x3, x2, [x19, #272]
  46792c:	strb	wzr, [x19, #255]
  467930:	mov	x0, x19
  467934:	blr	x3
  467938:	str	xzr, [x19, #256]
  46793c:	ldr	x0, [x19, #320]
  467940:	mov	x1, #0x0                   	// #0
  467944:	add	x0, x0, #0x1
  467948:	str	x0, [x19, #320]
  46794c:	add	x0, x1, #0x1
  467950:	str	x0, [x19, #256]
  467954:	mov	w0, #0x3c                  	// #60
  467958:	strb	w0, [x19, x1]
  46795c:	strb	w0, [x19, #264]
  467960:	mov	w1, w21
  467964:	mov	x0, x19
  467968:	mov	w22, #0x3e                  	// #62
  46796c:	ldr	x2, [x20, #16]
  467970:	mov	x23, #0x0                   	// #0
  467974:	ldr	x2, [x2, #8]
  467978:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  46797c:	ldr	x1, [x19, #256]
  467980:	b	4679a4 <_obstack_memory_used@@Base+0x13604>
  467984:	mov	x0, x1
  467988:	add	x1, x1, #0x1
  46798c:	str	x1, [x19, #256]
  467990:	strb	w22, [x19, x0]
  467994:	strb	w22, [x19, #264]
  467998:	mov	w22, #0x28                  	// #40
  46799c:	cbnz	x23, 467b2c <_obstack_memory_used@@Base+0x1378c>
  4679a0:	mov	x23, #0x1                   	// #1
  4679a4:	cmp	x1, #0xff
  4679a8:	b.ne	467984 <_obstack_memory_used@@Base+0x135e4>  // b.any
  4679ac:	ldp	x3, x2, [x19, #272]
  4679b0:	strb	wzr, [x19, #255]
  4679b4:	mov	x0, x19
  4679b8:	blr	x3
  4679bc:	ldr	x2, [x19, #320]
  4679c0:	mov	x1, #0x1                   	// #1
  4679c4:	mov	x0, #0x0                   	// #0
  4679c8:	add	x2, x2, x1
  4679cc:	str	x2, [x19, #320]
  4679d0:	b	46798c <_obstack_memory_used@@Base+0x135ec>
  4679d4:	ldr	w4, [x19, #344]
  4679d8:	ldr	x5, [x19, #336]
  4679dc:	cmp	w4, #0x0
  4679e0:	b.le	467fd4 <_obstack_memory_used@@Base+0x13c34>
  4679e4:	sub	w3, w4, #0x1
  4679e8:	add	x1, x5, #0x10
  4679ec:	mov	x2, x5
  4679f0:	add	x3, x1, w3, uxtw #4
  4679f4:	b	467a04 <_obstack_memory_used@@Base+0x13664>
  4679f8:	add	x2, x2, #0x10
  4679fc:	cmp	x3, x2
  467a00:	b.eq	467fd4 <_obstack_memory_used@@Base+0x13c34>  // b.none
  467a04:	ldr	x1, [x2]
  467a08:	cmp	x0, x1
  467a0c:	b.ne	4679f8 <_obstack_memory_used@@Base+0x13658>  // b.any
  467a10:	ldr	x4, [x19, #328]
  467a14:	mov	x1, x4
  467a18:	cbnz	x4, 467a34 <_obstack_memory_used@@Base+0x13694>
  467a1c:	b	467e38 <_obstack_memory_used@@Base+0x13a98>
  467a20:	cmp	x3, x20
  467a24:	ccmp	x4, x1, #0x4, eq  // eq = none
  467a28:	b.ne	467a40 <_obstack_memory_used@@Base+0x136a0>  // b.any
  467a2c:	ldr	x1, [x1, #8]
  467a30:	cbz	x1, 467e38 <_obstack_memory_used@@Base+0x13a98>
  467a34:	ldr	x3, [x1]
  467a38:	cmp	x3, x0
  467a3c:	b.ne	467a20 <_obstack_memory_used@@Base+0x13680>  // b.any
  467a40:	add	x1, x0, #0x8
  467a44:	mov	x0, x19
  467a48:	bl	460ba8 <_obstack_memory_used@@Base+0xc808>
  467a4c:	cbz	x0, 464590 <_obstack_memory_used@@Base+0x101f0>
  467a50:	mov	w22, #0x0                   	// #0
  467a54:	ldr	w1, [x0]
  467a58:	cmp	w1, #0x2f
  467a5c:	b.ne	464714 <_obstack_memory_used@@Base+0x10374>  // b.any
  467a60:	ldr	w1, [x19, #316]
  467a64:	tbnz	w1, #31, 468170 <_obstack_memory_used@@Base+0x13dd0>
  467a68:	bl	460b68 <_obstack_memory_used@@Base+0xc7c8>
  467a6c:	cbz	x0, 468184 <_obstack_memory_used@@Base+0x13de4>
  467a70:	ldr	w1, [x0]
  467a74:	b	464714 <_obstack_memory_used@@Base+0x10374>
  467a78:	ldr	x2, [x20, #8]
  467a7c:	add	x3, x20, #0x10
  467a80:	mov	w1, w21
  467a84:	mov	x0, x19
  467a88:	bl	469660 <_obstack_memory_used@@Base+0x152c0>
  467a8c:	cbnz	w0, 467f5c <_obstack_memory_used@@Base+0x13bbc>
  467a90:	ldp	x24, x3, [x20, #8]
  467a94:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467a98:	add	x1, x1, #0xef8
  467a9c:	ldr	x0, [x24, #8]
  467aa0:	ldp	x22, x2, [x3, #8]
  467aa4:	ldr	x0, [x0]
  467aa8:	ldp	x23, x20, [x2, #8]
  467aac:	bl	402a20 <strcmp@plt>
  467ab0:	cbnz	w0, 467ebc <_obstack_memory_used@@Base+0x13b1c>
  467ab4:	mov	x2, x22
  467ab8:	mov	w1, w21
  467abc:	mov	x0, x19
  467ac0:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467ac4:	mov	x2, x24
  467ac8:	mov	w1, w21
  467acc:	mov	x0, x19
  467ad0:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  467ad4:	mov	x2, x23
  467ad8:	mov	w1, w21
  467adc:	mov	x0, x19
  467ae0:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467ae4:	mov	x0, x19
  467ae8:	mov	x2, #0x3                   	// #3
  467aec:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467af0:	add	x1, x1, #0xf00
  467af4:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  467af8:	mov	w1, w21
  467afc:	mov	x2, x20
  467b00:	mov	x0, x19
  467b04:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467b08:	ldp	x21, x22, [sp, #32]
  467b0c:	ldp	x23, x24, [sp, #48]
  467b10:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467b14:	sub	w1, w0, #0x61
  467b18:	and	w1, w1, #0xff
  467b1c:	cmp	w1, #0x5
  467b20:	b.hi	4680e0 <_obstack_memory_used@@Base+0x13d40>  // b.pmore
  467b24:	sub	w0, w0, #0x57
  467b28:	b	466adc <_obstack_memory_used@@Base+0x1273c>
  467b2c:	ldr	x2, [x20, #16]
  467b30:	mov	w1, w21
  467b34:	mov	x0, x19
  467b38:	ldr	x2, [x2, #16]
  467b3c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467b40:	ldr	x1, [x19, #256]
  467b44:	cmp	x1, #0xff
  467b48:	b.ne	467b70 <_obstack_memory_used@@Base+0x137d0>  // b.any
  467b4c:	ldp	x3, x2, [x19, #272]
  467b50:	strb	wzr, [x19, #255]
  467b54:	mov	x0, x19
  467b58:	blr	x3
  467b5c:	str	xzr, [x19, #256]
  467b60:	ldr	x0, [x19, #320]
  467b64:	mov	x1, #0x0                   	// #0
  467b68:	add	x0, x0, #0x1
  467b6c:	str	x0, [x19, #320]
  467b70:	add	x0, x1, #0x1
  467b74:	str	x0, [x19, #256]
  467b78:	mov	w0, #0x29                  	// #41
  467b7c:	strb	w0, [x19, x1]
  467b80:	strb	w0, [x19, #264]
  467b84:	ldp	x21, x22, [sp, #32]
  467b88:	ldp	x23, x24, [sp, #48]
  467b8c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467b90:	ldr	w1, [x19, #316]
  467b94:	tbnz	w1, #31, 466b3c <_obstack_memory_used@@Base+0x1279c>
  467b98:	bl	460b68 <_obstack_memory_used@@Base+0xc7c8>
  467b9c:	mov	x2, x0
  467ba0:	cbnz	x0, 466b3c <_obstack_memory_used@@Base+0x1279c>
  467ba4:	b	464590 <_obstack_memory_used@@Base+0x101f0>
  467ba8:	cmp	w1, #0x63
  467bac:	b.eq	467f74 <_obstack_memory_used@@Base+0x13bd4>  // b.none
  467bb0:	mov	w1, w21
  467bb4:	mov	x0, x19
  467bb8:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  467bbc:	ldr	x2, [x20, #16]
  467bc0:	mov	w1, w21
  467bc4:	mov	x0, x19
  467bc8:	ldr	x2, [x2, #16]
  467bcc:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467bd0:	b	465cf0 <_obstack_memory_used@@Base+0x11950>
  467bd4:	mov	w2, w3
  467bd8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  467bdc:	add	x1, x1, #0xd08
  467be0:	add	x20, sp, #0x60
  467be4:	mov	x0, x20
  467be8:	bl	402720 <sprintf@plt>
  467bec:	mov	x0, x20
  467bf0:	bl	402680 <strlen@plt>
  467bf4:	cbz	x0, 468250 <_obstack_memory_used@@Base+0x13eb0>
  467bf8:	add	x22, x20, x0
  467bfc:	ldr	x1, [x19, #256]
  467c00:	b	467c24 <_obstack_memory_used@@Base+0x13884>
  467c04:	mov	x0, x1
  467c08:	add	x1, x1, #0x1
  467c0c:	str	x1, [x19, #256]
  467c10:	add	x20, x20, #0x1
  467c14:	strb	w21, [x19, x0]
  467c18:	cmp	x22, x20
  467c1c:	strb	w21, [x19, #264]
  467c20:	b.eq	467c64 <_obstack_memory_used@@Base+0x138c4>  // b.none
  467c24:	ldrb	w21, [x20]
  467c28:	cmp	x1, #0xff
  467c2c:	b.ne	467c04 <_obstack_memory_used@@Base+0x13864>  // b.any
  467c30:	ldp	x3, x2, [x19, #272]
  467c34:	strb	wzr, [x19, #255]
  467c38:	mov	x0, x19
  467c3c:	blr	x3
  467c40:	ldr	x2, [x19, #320]
  467c44:	mov	x1, #0x1                   	// #1
  467c48:	mov	x0, #0x0                   	// #0
  467c4c:	add	x2, x2, x1
  467c50:	str	x2, [x19, #320]
  467c54:	b	467c0c <_obstack_memory_used@@Base+0x1386c>
  467c58:	ldp	x21, x22, [sp, #32]
  467c5c:	ldp	x23, x24, [sp, #48]
  467c60:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467c64:	ldp	x21, x22, [sp, #32]
  467c68:	ldp	x23, x24, [sp, #48]
  467c6c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467c70:	ldr	x0, [x22, #8]
  467c74:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467c78:	mov	x2, #0x6                   	// #6
  467c7c:	add	x1, x1, #0xcc0
  467c80:	bl	402830 <strncmp@plt>
  467c84:	cbnz	w0, 465978 <_obstack_memory_used@@Base+0x115d8>
  467c88:	ldr	x2, [x20, #16]
  467c8c:	mov	w1, w21
  467c90:	mov	x0, x19
  467c94:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467c98:	mov	x0, x19
  467c9c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  467ca0:	mov	x2, #0x2                   	// #2
  467ca4:	add	x1, x1, #0xc10
  467ca8:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  467cac:	b	465a38 <_obstack_memory_used@@Base+0x11698>
  467cb0:	cmp	x1, #0xff
  467cb4:	b.ne	467cdc <_obstack_memory_used@@Base+0x1393c>  // b.any
  467cb8:	ldp	x3, x2, [x19, #272]
  467cbc:	strb	wzr, [x19, #255]
  467cc0:	mov	x0, x19
  467cc4:	blr	x3
  467cc8:	str	xzr, [x19, #256]
  467ccc:	ldr	x0, [x19, #320]
  467cd0:	mov	x1, #0x0                   	// #0
  467cd4:	add	x0, x0, #0x1
  467cd8:	str	x0, [x19, #320]
  467cdc:	add	x0, x1, #0x1
  467ce0:	str	x0, [x19, #256]
  467ce4:	mov	w2, #0x20                  	// #32
  467ce8:	strb	w2, [x19, x1]
  467cec:	strb	w2, [x19, #264]
  467cf0:	b	46725c <_obstack_memory_used@@Base+0x12ebc>
  467cf4:	ldr	x1, [x19, #256]
  467cf8:	cmp	x1, #0xff
  467cfc:	b.ne	467d24 <_obstack_memory_used@@Base+0x13984>  // b.any
  467d00:	ldp	x3, x2, [x19, #272]
  467d04:	strb	wzr, [x19, #255]
  467d08:	mov	x0, x19
  467d0c:	blr	x3
  467d10:	str	xzr, [x19, #256]
  467d14:	ldr	x0, [x19, #320]
  467d18:	mov	x1, #0x0                   	// #0
  467d1c:	add	x0, x0, #0x1
  467d20:	str	x0, [x19, #320]
  467d24:	add	x0, x1, #0x1
  467d28:	str	x0, [x19, #256]
  467d2c:	mov	w2, #0x20                  	// #32
  467d30:	strb	w2, [x19, x1]
  467d34:	strb	w2, [x19, #264]
  467d38:	b	4672c4 <_obstack_memory_used@@Base+0x12f24>
  467d3c:	ldp	x21, x22, [sp, #32]
  467d40:	ldp	x23, x24, [sp, #48]
  467d44:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467d48:	ldp	x21, x22, [sp, #32]
  467d4c:	ldp	x23, x24, [sp, #48]
  467d50:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467d54:	ldp	x21, x22, [sp, #32]
  467d58:	ldp	x23, x24, [sp, #48]
  467d5c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467d60:	ldp	x21, x22, [sp, #32]
  467d64:	ldp	x23, x24, [sp, #48]
  467d68:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467d6c:	ldr	x2, [x20, #8]
  467d70:	mov	w1, w21
  467d74:	mov	x0, x19
  467d78:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467d7c:	mov	x0, x19
  467d80:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x24c60>
  467d84:	mov	x2, #0x3                   	// #3
  467d88:	add	x1, x1, #0xc10
  467d8c:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  467d90:	ldp	x21, x22, [sp, #32]
  467d94:	ldp	x23, x24, [sp, #48]
  467d98:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467d9c:	sub	x22, x22, #0x2
  467da0:	ldp	x23, x24, [sp, #48]
  467da4:	str	x22, [x19, #256]
  467da8:	ldp	x21, x22, [sp, #32]
  467dac:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467db0:	ldr	x0, [x0, #8]
  467db4:	ldr	w1, [x0, #16]
  467db8:	cmp	w1, #0x1
  467dbc:	b.eq	468140 <_obstack_memory_used@@Base+0x13da0>  // b.none
  467dc0:	ldp	x21, x22, [sp, #32]
  467dc4:	ldp	x23, x24, [sp, #48]
  467dc8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467dcc:	ldr	x1, [x0, #8]
  467dd0:	ldr	w2, [x1, #16]
  467dd4:	cmp	w2, #0x1
  467dd8:	b.ne	465be0 <_obstack_memory_used@@Base+0x11840>  // b.any
  467ddc:	ldr	x1, [x1, #8]
  467de0:	ldrb	w1, [x1]
  467de4:	cmp	w1, #0x3e
  467de8:	b.ne	465be0 <_obstack_memory_used@@Base+0x11840>  // b.any
  467dec:	ldr	x1, [x19, #256]
  467df0:	cmp	x1, #0xff
  467df4:	b.ne	467e1c <_obstack_memory_used@@Base+0x13a7c>  // b.any
  467df8:	ldp	x3, x2, [x19, #272]
  467dfc:	strb	wzr, [x19, #255]
  467e00:	mov	x0, x19
  467e04:	blr	x3
  467e08:	str	xzr, [x19, #256]
  467e0c:	ldr	x0, [x19, #320]
  467e10:	mov	x1, #0x0                   	// #0
  467e14:	add	x0, x0, #0x1
  467e18:	str	x0, [x19, #320]
  467e1c:	add	x0, x1, #0x1
  467e20:	str	x0, [x19, #256]
  467e24:	mov	w0, #0x28                  	// #40
  467e28:	strb	w0, [x19, x1]
  467e2c:	strb	w0, [x19, #264]
  467e30:	ldr	x0, [x20, #8]
  467e34:	b	465be0 <_obstack_memory_used@@Base+0x11840>
  467e38:	ldr	x2, [x2, #8]
  467e3c:	add	x1, x0, #0x8
  467e40:	ldr	x23, [x19, #288]
  467e44:	str	x2, [x19, #288]
  467e48:	mov	x0, x19
  467e4c:	bl	460ba8 <_obstack_memory_used@@Base+0xc808>
  467e50:	cbz	x0, 468188 <_obstack_memory_used@@Base+0x13de8>
  467e54:	mov	w22, #0x1                   	// #1
  467e58:	b	467a54 <_obstack_memory_used@@Base+0x136b4>
  467e5c:	ldr	x25, [x25, #8]
  467e60:	cbz	x25, 4678d8 <_obstack_memory_used@@Base+0x13538>
  467e64:	ldr	w5, [x25]
  467e68:	b	4677c8 <_obstack_memory_used@@Base+0x13428>
  467e6c:	ldp	x21, x22, [sp, #32]
  467e70:	ldp	x23, x24, [sp, #48]
  467e74:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467e78:	ldp	x21, x22, [sp, #32]
  467e7c:	ldp	x23, x24, [sp, #48]
  467e80:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467e84:	ldp	x21, x22, [sp, #32]
  467e88:	ldp	x23, x24, [sp, #48]
  467e8c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467e90:	ldr	x0, [x2, #16]
  467e94:	ldr	w0, [x0]
  467e98:	cmp	w0, #0x29
  467e9c:	b.eq	467ea8 <_obstack_memory_used@@Base+0x13b08>  // b.none
  467ea0:	mov	w0, #0x1                   	// #1
  467ea4:	str	w0, [x19, #304]
  467ea8:	ldr	x2, [x2, #8]
  467eac:	mov	w1, w21
  467eb0:	mov	x0, x19
  467eb4:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467eb8:	b	465c28 <_obstack_memory_used@@Base+0x11888>
  467ebc:	mov	x0, x19
  467ec0:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  467ec4:	mov	x2, #0x4                   	// #4
  467ec8:	add	x1, x1, #0xf08
  467ecc:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  467ed0:	ldr	x0, [x22, #8]
  467ed4:	cbz	x0, 467f2c <_obstack_memory_used@@Base+0x13b8c>
  467ed8:	mov	w1, w21
  467edc:	mov	x2, x22
  467ee0:	mov	x0, x19
  467ee4:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467ee8:	ldr	x1, [x19, #256]
  467eec:	cmp	x1, #0xff
  467ef0:	b.ne	467f18 <_obstack_memory_used@@Base+0x13b78>  // b.any
  467ef4:	ldp	x3, x2, [x19, #272]
  467ef8:	strb	wzr, [x19, #255]
  467efc:	mov	x0, x19
  467f00:	blr	x3
  467f04:	str	xzr, [x19, #256]
  467f08:	ldr	x0, [x19, #320]
  467f0c:	mov	x1, #0x0                   	// #0
  467f10:	add	x0, x0, #0x1
  467f14:	str	x0, [x19, #320]
  467f18:	add	x0, x1, #0x1
  467f1c:	str	x0, [x19, #256]
  467f20:	mov	w0, #0x20                  	// #32
  467f24:	strb	w0, [x19, x1]
  467f28:	strb	w0, [x19, #264]
  467f2c:	mov	x2, x23
  467f30:	mov	w1, w21
  467f34:	mov	x0, x19
  467f38:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  467f3c:	cbz	x20, 4680d4 <_obstack_memory_used@@Base+0x13d34>
  467f40:	mov	w1, w21
  467f44:	mov	x2, x20
  467f48:	mov	x0, x19
  467f4c:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  467f50:	ldp	x21, x22, [sp, #32]
  467f54:	ldp	x23, x24, [sp, #48]
  467f58:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467f5c:	ldp	x21, x22, [sp, #32]
  467f60:	ldp	x23, x24, [sp, #48]
  467f64:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467f68:	ldp	x21, x22, [sp, #32]
  467f6c:	ldp	x23, x24, [sp, #48]
  467f70:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467f74:	ldrb	w1, [x0, #1]
  467f78:	cmp	w1, #0x6c
  467f7c:	b.ne	467bb0 <_obstack_memory_used@@Base+0x13810>  // b.any
  467f80:	ldrb	w0, [x0, #2]
  467f84:	cbz	w0, 467bbc <_obstack_memory_used@@Base+0x1381c>
  467f88:	b	467bb0 <_obstack_memory_used@@Base+0x13810>
  467f8c:	ldp	x21, x22, [sp, #32]
  467f90:	ldp	x23, x24, [sp, #48]
  467f94:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467f98:	ldp	x21, x22, [sp, #32]
  467f9c:	ldp	x23, x24, [sp, #48]
  467fa0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467fa4:	ldp	x21, x22, [sp, #32]
  467fa8:	ldp	x23, x24, [sp, #48]
  467fac:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  467fb0:	ldr	x1, [x20, #8]
  467fb4:	ldr	w2, [x1]
  467fb8:	cmp	w2, #0x1
  467fbc:	b.ne	466fc0 <_obstack_memory_used@@Base+0x12c20>  // b.any
  467fc0:	ldr	x2, [x20, #16]
  467fc4:	ldr	w2, [x2]
  467fc8:	cmp	w2, #0x29
  467fcc:	csel	x20, x20, x1, ne  // ne = any
  467fd0:	b	466fc0 <_obstack_memory_used@@Base+0x12c20>
  467fd4:	ldr	w1, [x19, #348]
  467fd8:	cmp	w4, w1
  467fdc:	b.ge	468044 <_obstack_memory_used@@Base+0x13ca4>  // b.tcont
  467fe0:	sbfiz	x1, x4, #4, #32
  467fe4:	add	w2, w4, #0x1
  467fe8:	ldr	x3, [x19, #288]
  467fec:	str	w2, [x19, #344]
  467ff0:	str	x0, [x5, x1]
  467ff4:	add	x1, x5, w4, sxtw #4
  467ff8:	add	x1, x1, #0x8
  467ffc:	cbz	x3, 46815c <_obstack_memory_used@@Base+0x13dbc>
  468000:	ldr	w2, [x19, #360]
  468004:	ldr	w6, [x19, #364]
  468008:	sbfiz	x5, x2, #4, #32
  46800c:	b	46803c <_obstack_memory_used@@Base+0x13c9c>
  468010:	ldr	x4, [x19, #352]
  468014:	add	w2, w2, #0x1
  468018:	ldr	x7, [x3, #8]
  46801c:	add	x4, x4, x5
  468020:	str	w2, [x19, #360]
  468024:	add	x5, x5, #0x10
  468028:	str	x7, [x4, #8]
  46802c:	str	x4, [x1]
  468030:	mov	x1, x4
  468034:	ldr	x3, [x3]
  468038:	cbz	x3, 46815c <_obstack_memory_used@@Base+0x13dbc>
  46803c:	cmp	w6, w2
  468040:	b.gt	468010 <_obstack_memory_used@@Base+0x13c70>
  468044:	mov	w0, #0x1                   	// #1
  468048:	ldp	x21, x22, [sp, #32]
  46804c:	ldp	x23, x24, [sp, #48]
  468050:	str	w0, [x19, #304]
  468054:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  468058:	ldr	x2, [x20, #8]
  46805c:	mov	w1, w21
  468060:	mov	x0, x19
  468064:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  468068:	mov	x2, x22
  46806c:	mov	w1, w21
  468070:	mov	x0, x19
  468074:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  468078:	ldp	x21, x22, [sp, #32]
  46807c:	ldp	x23, x24, [sp, #48]
  468080:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  468084:	ldr	x2, [x20, #16]
  468088:	mov	x0, x19
  46808c:	mov	w1, w21
  468090:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  468094:	str	xzr, [x19, #296]
  468098:	ldr	w0, [sp, #112]
  46809c:	cbz	w0, 464fa0 <_obstack_memory_used@@Base+0x10c00>
  4680a0:	ldp	x21, x22, [sp, #32]
  4680a4:	ldp	x23, x24, [sp, #48]
  4680a8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4680ac:	cmp	w22, #0x5
  4680b0:	b.eq	46825c <_obstack_memory_used@@Base+0x13ebc>  // b.none
  4680b4:	mov	x0, x19
  4680b8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4680bc:	mov	x2, #0x3                   	// #3
  4680c0:	add	x1, x1, #0xf20
  4680c4:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  4680c8:	ldp	x21, x22, [sp, #32]
  4680cc:	ldp	x23, x24, [sp, #48]
  4680d0:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4680d4:	ldp	x21, x22, [sp, #32]
  4680d8:	ldp	x23, x24, [sp, #48]
  4680dc:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4680e0:	cmp	x21, x24
  4680e4:	b.ls	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.plast
  4680e8:	cmp	x2, #0xff
  4680ec:	ccmp	w0, w23, #0x0, ls  // ls = plast
  4680f0:	b.ne	466a48 <_obstack_memory_used@@Base+0x126a8>  // b.any
  4680f4:	ldr	x1, [x19, #256]
  4680f8:	and	w22, w2, #0xff
  4680fc:	cmp	x1, #0xff
  468100:	b.ne	468128 <_obstack_memory_used@@Base+0x13d88>  // b.any
  468104:	ldp	x3, x2, [x19, #272]
  468108:	strb	wzr, [x19, #255]
  46810c:	mov	x0, x19
  468110:	blr	x3
  468114:	str	xzr, [x19, #256]
  468118:	ldr	x0, [x19, #320]
  46811c:	mov	x1, #0x0                   	// #0
  468120:	add	x0, x0, #0x1
  468124:	str	x0, [x19, #320]
  468128:	add	x0, x1, #0x1
  46812c:	str	x0, [x19, #256]
  468130:	strb	w22, [x19, x1]
  468134:	mov	x20, x24
  468138:	strb	w22, [x19, #264]
  46813c:	b	466a88 <_obstack_memory_used@@Base+0x126e8>
  468140:	ldr	x0, [x0, #8]
  468144:	ldrb	w0, [x0]
  468148:	cmp	w0, #0x3e
  46814c:	b.eq	46827c <_obstack_memory_used@@Base+0x13edc>  // b.none
  468150:	ldp	x21, x22, [sp, #32]
  468154:	ldp	x23, x24, [sp, #48]
  468158:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46815c:	str	xzr, [x1]
  468160:	b	467a40 <_obstack_memory_used@@Base+0x136a0>
  468164:	ldp	x21, x22, [sp, #32]
  468168:	ldp	x23, x24, [sp, #48]
  46816c:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  468170:	ldr	w1, [x20]
  468174:	ldr	x4, [x19, #296]
  468178:	cmp	w1, #0x2f
  46817c:	csel	x20, x20, x0, ne  // ne = any
  468180:	b	464738 <_obstack_memory_used@@Base+0x10398>
  468184:	cbz	w22, 464590 <_obstack_memory_used@@Base+0x101f0>
  468188:	ldp	x21, x22, [sp, #32]
  46818c:	str	x23, [x19, #288]
  468190:	ldp	x23, x24, [sp, #48]
  468194:	b	464598 <_obstack_memory_used@@Base+0x101f8>
  468198:	ldr	x1, [x19, #256]
  46819c:	cmp	x1, #0xff
  4681a0:	b.ne	4681c8 <_obstack_memory_used@@Base+0x13e28>  // b.any
  4681a4:	ldp	x3, x2, [x19, #272]
  4681a8:	strb	wzr, [x19, #255]
  4681ac:	mov	x0, x19
  4681b0:	blr	x3
  4681b4:	str	xzr, [x19, #256]
  4681b8:	ldr	x0, [x19, #320]
  4681bc:	mov	x1, #0x0                   	// #0
  4681c0:	add	x0, x0, #0x1
  4681c4:	str	x0, [x19, #320]
  4681c8:	add	x0, x1, #0x1
  4681cc:	str	x0, [x19, #256]
  4681d0:	mov	w0, #0x75                  	// #117
  4681d4:	strb	w0, [x19, x1]
  4681d8:	strb	w0, [x19, #264]
  4681dc:	ldp	x21, x22, [sp, #32]
  4681e0:	ldp	x23, x24, [sp, #48]
  4681e4:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4681e8:	mov	x0, x19
  4681ec:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4681f0:	mov	x2, #0x2                   	// #2
  4681f4:	add	x1, x1, #0xf10
  4681f8:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  4681fc:	ldp	x21, x22, [sp, #32]
  468200:	ldp	x23, x24, [sp, #48]
  468204:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  468208:	ldr	x1, [x19, #256]
  46820c:	cmp	x1, #0xff
  468210:	b.ne	468238 <_obstack_memory_used@@Base+0x13e98>  // b.any
  468214:	ldp	x3, x2, [x19, #272]
  468218:	strb	wzr, [x19, #255]
  46821c:	mov	x0, x19
  468220:	blr	x3
  468224:	str	xzr, [x19, #256]
  468228:	ldr	x0, [x19, #320]
  46822c:	mov	x1, #0x0                   	// #0
  468230:	add	x0, x0, #0x1
  468234:	str	x0, [x19, #320]
  468238:	add	x0, x1, #0x1
  46823c:	str	x0, [x19, #256]
  468240:	mov	w0, #0x2d                  	// #45
  468244:	strb	w0, [x19, x1]
  468248:	strb	w0, [x19, #264]
  46824c:	b	466e88 <_obstack_memory_used@@Base+0x12ae8>
  468250:	ldp	x21, x22, [sp, #32]
  468254:	ldp	x23, x24, [sp, #48]
  468258:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46825c:	mov	x0, x19
  468260:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x28c60>
  468264:	mov	x2, #0x2                   	// #2
  468268:	add	x1, x1, #0xf18
  46826c:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  468270:	ldp	x21, x22, [sp, #32]
  468274:	ldp	x23, x24, [sp, #48]
  468278:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46827c:	ldr	x1, [x19, #256]
  468280:	cmp	x1, #0xff
  468284:	b.ne	4682ac <_obstack_memory_used@@Base+0x13f0c>  // b.any
  468288:	ldp	x3, x2, [x19, #272]
  46828c:	strb	wzr, [x19, #255]
  468290:	mov	x0, x19
  468294:	blr	x3
  468298:	str	xzr, [x19, #256]
  46829c:	ldr	x0, [x19, #320]
  4682a0:	mov	x1, #0x0                   	// #0
  4682a4:	add	x0, x0, #0x1
  4682a8:	str	x0, [x19, #320]
  4682ac:	add	x0, x1, #0x1
  4682b0:	str	x0, [x19, #256]
  4682b4:	mov	w0, #0x29                  	// #41
  4682b8:	strb	w0, [x19, x1]
  4682bc:	strb	w0, [x19, #264]
  4682c0:	ldp	x21, x22, [sp, #32]
  4682c4:	ldp	x23, x24, [sp, #48]
  4682c8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4682cc:	mov	x2, x22
  4682d0:	mov	w1, w21
  4682d4:	mov	x0, x19
  4682d8:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  4682dc:	b	466104 <_obstack_memory_used@@Base+0x11d64>
  4682e0:	ldp	x21, x22, [sp, #32]
  4682e4:	ldp	x23, x24, [sp, #48]
  4682e8:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  4682ec:	mov	x0, x19
  4682f0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1ac60>
  4682f4:	mov	x2, #0x5                   	// #5
  4682f8:	add	x1, x1, #0xe20
  4682fc:	bl	460288 <_obstack_memory_used@@Base+0xbee8>
  468300:	ldp	x21, x22, [sp, #32]
  468304:	ldp	x23, x24, [sp, #48]
  468308:	b	464564 <_obstack_memory_used@@Base+0x101c4>
  46830c:	nop
  468310:	stp	x29, x30, [sp, #-48]!
  468314:	mov	x29, sp
  468318:	stp	x19, x20, [sp, #16]
  46831c:	mov	x20, x0
  468320:	cbz	x2, 468390 <_obstack_memory_used@@Base+0x13ff0>
  468324:	ldr	w3, [x2, #4]
  468328:	mov	x19, x2
  46832c:	cmp	w3, #0x1
  468330:	b.gt	468390 <_obstack_memory_used@@Base+0x13ff0>
  468334:	ldr	w4, [x0, #308]
  468338:	cmp	w4, #0x400
  46833c:	b.gt	468390 <_obstack_memory_used@@Base+0x13ff0>
  468340:	add	w3, w3, #0x1
  468344:	add	w4, w4, #0x1
  468348:	str	w3, [x2, #4]
  46834c:	add	x3, sp, #0x20
  468350:	str	w4, [x0, #308]
  468354:	ldr	x4, [x0, #328]
  468358:	str	x3, [x0, #328]
  46835c:	stp	x2, x4, [sp, #32]
  468360:	bl	464500 <_obstack_memory_used@@Base+0x10160>
  468364:	ldr	w1, [x19, #4]
  468368:	ldr	x0, [sp, #40]
  46836c:	str	x0, [x20, #328]
  468370:	ldr	w0, [x20, #308]
  468374:	sub	w1, w1, #0x1
  468378:	str	w1, [x19, #4]
  46837c:	sub	w0, w0, #0x1
  468380:	str	w0, [x20, #308]
  468384:	ldp	x19, x20, [sp, #16]
  468388:	ldp	x29, x30, [sp], #48
  46838c:	ret
  468390:	mov	w0, #0x1                   	// #1
  468394:	str	w0, [x20, #304]
  468398:	ldp	x19, x20, [sp, #16]
  46839c:	ldp	x29, x30, [sp], #48
  4683a0:	ret
  4683a4:	nop
  4683a8:	stp	x29, x30, [sp, #-64]!
  4683ac:	mov	x29, sp
  4683b0:	stp	x19, x20, [sp, #16]
  4683b4:	mov	x19, x0
  4683b8:	ldr	w0, [x2]
  4683bc:	stp	x21, x22, [sp, #32]
  4683c0:	mov	x20, x2
  4683c4:	sub	w0, w0, #0x3
  4683c8:	mov	w21, w1
  4683cc:	cmp	w0, #0x4d
  4683d0:	b.ls	4683f0 <_obstack_memory_used@@Base+0x14050>  // b.plast
  4683d4:	mov	x2, x20
  4683d8:	mov	w1, w21
  4683dc:	mov	x0, x19
  4683e0:	ldp	x19, x20, [sp, #16]
  4683e4:	ldp	x21, x22, [sp, #32]
  4683e8:	ldp	x29, x30, [sp], #64
  4683ec:	b	468310 <_obstack_memory_used@@Base+0x13f70>
  4683f0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  4683f4:	add	x1, x1, #0xb60
  4683f8:	ldrh	w0, [x1, w0, uxtw #1]
  4683fc:	adr	x1, 468408 <_obstack_memory_used@@Base+0x14068>
  468400:	add	x0, x1, w0, sxth #2
  468404:	br	x0
  468408:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  46840c:	add	x20, x20, #0xfd8
  468410:	add	x22, x20, #0x9
  468414:	mov	w21, #0x20                  	// #32
  468418:	ldr	x1, [x19, #256]
  46841c:	b	468444 <_obstack_memory_used@@Base+0x140a4>
  468420:	mov	x0, x1
  468424:	add	x1, x1, #0x1
  468428:	str	x1, [x19, #256]
  46842c:	add	x20, x20, #0x1
  468430:	strb	w21, [x19, x0]
  468434:	cmp	x22, x20
  468438:	strb	w21, [x19, #264]
  46843c:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  468440:	ldrb	w21, [x20]
  468444:	cmp	x1, #0xff
  468448:	b.ne	468420 <_obstack_memory_used@@Base+0x14080>  // b.any
  46844c:	ldp	x3, x2, [x19, #272]
  468450:	strb	wzr, [x19, #255]
  468454:	mov	x0, x19
  468458:	blr	x3
  46845c:	ldr	x2, [x19, #320]
  468460:	mov	x1, #0x1                   	// #1
  468464:	mov	x0, #0x0                   	// #0
  468468:	add	x2, x2, x1
  46846c:	str	x2, [x19, #320]
  468470:	b	468428 <_obstack_memory_used@@Base+0x14088>
  468474:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  468478:	add	x20, x20, #0xfe8
  46847c:	add	x22, x20, #0x9
  468480:	mov	w21, #0x20                  	// #32
  468484:	ldr	x1, [x19, #256]
  468488:	b	4684b0 <_obstack_memory_used@@Base+0x14110>
  46848c:	mov	x0, x1
  468490:	add	x1, x1, #0x1
  468494:	str	x1, [x19, #256]
  468498:	add	x20, x20, #0x1
  46849c:	strb	w21, [x19, x0]
  4684a0:	cmp	x20, x22
  4684a4:	strb	w21, [x19, #264]
  4684a8:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  4684ac:	ldrb	w21, [x20]
  4684b0:	cmp	x1, #0xff
  4684b4:	b.ne	46848c <_obstack_memory_used@@Base+0x140ec>  // b.any
  4684b8:	ldp	x3, x2, [x19, #272]
  4684bc:	strb	wzr, [x19, #255]
  4684c0:	mov	x0, x19
  4684c4:	blr	x3
  4684c8:	ldr	x2, [x19, #320]
  4684cc:	mov	x1, #0x1                   	// #1
  4684d0:	mov	x0, #0x0                   	// #0
  4684d4:	add	x2, x2, x1
  4684d8:	str	x2, [x19, #320]
  4684dc:	b	468494 <_obstack_memory_used@@Base+0x140f4>
  4684e0:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4684e4:	add	x20, x20, #0xff8
  4684e8:	add	x22, x20, #0x6
  4684ec:	mov	w21, #0x20                  	// #32
  4684f0:	ldr	x1, [x19, #256]
  4684f4:	b	46851c <_obstack_memory_used@@Base+0x1417c>
  4684f8:	mov	x0, x1
  4684fc:	add	x1, x1, #0x1
  468500:	str	x1, [x19, #256]
  468504:	add	x20, x20, #0x1
  468508:	strb	w21, [x19, x0]
  46850c:	cmp	x22, x20
  468510:	strb	w21, [x19, #264]
  468514:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  468518:	ldrb	w21, [x20]
  46851c:	cmp	x1, #0xff
  468520:	b.ne	4684f8 <_obstack_memory_used@@Base+0x14158>  // b.any
  468524:	ldp	x3, x2, [x19, #272]
  468528:	strb	wzr, [x19, #255]
  46852c:	mov	x0, x19
  468530:	blr	x3
  468534:	ldr	x2, [x19, #320]
  468538:	mov	x1, #0x1                   	// #1
  46853c:	mov	x0, #0x0                   	// #0
  468540:	add	x2, x2, x1
  468544:	str	x2, [x19, #320]
  468548:	b	468500 <_obstack_memory_used@@Base+0x14160>
  46854c:	ldr	x2, [x2, #8]
  468550:	b	4683d8 <_obstack_memory_used@@Base+0x14038>
  468554:	ldr	x0, [x19, #256]
  468558:	cmp	x0, #0xff
  46855c:	b.eq	468b18 <_obstack_memory_used@@Base+0x14778>  // b.none
  468560:	add	x1, x0, #0x1
  468564:	str	x1, [x19, #256]
  468568:	mov	w2, #0x20                  	// #32
  46856c:	strb	w2, [x19, x0]
  468570:	strb	w2, [x19, #264]
  468574:	b	468764 <_obstack_memory_used@@Base+0x143c4>
  468578:	ldr	x0, [x19, #256]
  46857c:	add	x1, x0, #0x1
  468580:	cmp	x0, #0xff
  468584:	b.eq	468b70 <_obstack_memory_used@@Base+0x147d0>  // b.none
  468588:	str	x1, [x19, #256]
  46858c:	mov	w2, #0x20                  	// #32
  468590:	strb	w2, [x19, x0]
  468594:	strb	w2, [x19, #264]
  468598:	mov	x21, #0x0                   	// #0
  46859c:	mov	w20, #0x26                  	// #38
  4685a0:	b	4685c0 <_obstack_memory_used@@Base+0x14220>
  4685a4:	mov	x0, x1
  4685a8:	add	x1, x1, #0x1
  4685ac:	str	x1, [x19, #256]
  4685b0:	strb	w20, [x19, x0]
  4685b4:	strb	w20, [x19, #264]
  4685b8:	cbnz	x21, 4685fc <_obstack_memory_used@@Base+0x1425c>
  4685bc:	mov	x21, #0x1                   	// #1
  4685c0:	cmp	x1, #0xff
  4685c4:	b.ne	4685a4 <_obstack_memory_used@@Base+0x14204>  // b.any
  4685c8:	ldp	x3, x2, [x19, #272]
  4685cc:	strb	wzr, [x19, #255]
  4685d0:	mov	x0, x19
  4685d4:	blr	x3
  4685d8:	ldr	x2, [x19, #320]
  4685dc:	mov	x0, #0x0                   	// #0
  4685e0:	mov	x1, #0x1                   	// #1
  4685e4:	str	x1, [x19, #256]
  4685e8:	add	x2, x2, x1
  4685ec:	str	x2, [x19, #320]
  4685f0:	strb	w20, [x19, x0]
  4685f4:	strb	w20, [x19, #264]
  4685f8:	cbz	x21, 4685bc <_obstack_memory_used@@Base+0x1421c>
  4685fc:	ldp	x19, x20, [sp, #16]
  468600:	ldp	x21, x22, [sp, #32]
  468604:	ldp	x29, x30, [sp], #64
  468608:	ret
  46860c:	ldr	x1, [x19, #256]
  468610:	add	x0, x1, #0x1
  468614:	cmp	x1, #0xff
  468618:	b.eq	468b48 <_obstack_memory_used@@Base+0x147a8>  // b.none
  46861c:	str	x0, [x19, #256]
  468620:	mov	w0, #0x20                  	// #32
  468624:	strb	w0, [x19, x1]
  468628:	mov	w1, w21
  46862c:	strb	w0, [x19, #264]
  468630:	mov	x0, x19
  468634:	ldr	x2, [x20, #16]
  468638:	ldp	x19, x20, [sp, #16]
  46863c:	ldp	x21, x22, [sp, #32]
  468640:	ldp	x29, x30, [sp], #64
  468644:	b	468310 <_obstack_memory_used@@Base+0x13f70>
  468648:	tbnz	w21, #2, 4685fc <_obstack_memory_used@@Base+0x1425c>
  46864c:	ldr	x1, [x19, #256]
  468650:	add	x0, x1, #0x1
  468654:	cmp	x1, #0xff
  468658:	b.ne	468680 <_obstack_memory_used@@Base+0x142e0>  // b.any
  46865c:	ldp	x3, x2, [x19, #272]
  468660:	strb	wzr, [x19, #255]
  468664:	mov	x0, x19
  468668:	blr	x3
  46866c:	ldr	x2, [x19, #320]
  468670:	mov	x0, #0x1                   	// #1
  468674:	mov	x1, #0x0                   	// #0
  468678:	add	x2, x2, x0
  46867c:	str	x2, [x19, #320]
  468680:	str	x0, [x19, #256]
  468684:	mov	w0, #0x2a                  	// #42
  468688:	strb	w0, [x19, x1]
  46868c:	strb	w0, [x19, #264]
  468690:	b	4685fc <_obstack_memory_used@@Base+0x1425c>
  468694:	ldrb	w0, [x19, #264]
  468698:	cmp	w0, #0x28
  46869c:	b.eq	4686e4 <_obstack_memory_used@@Base+0x14344>  // b.none
  4686a0:	ldr	x1, [x19, #256]
  4686a4:	add	x0, x1, #0x1
  4686a8:	cmp	x1, #0xff
  4686ac:	b.ne	4686d4 <_obstack_memory_used@@Base+0x14334>  // b.any
  4686b0:	ldp	x3, x2, [x19, #272]
  4686b4:	strb	wzr, [x19, #255]
  4686b8:	mov	x0, x19
  4686bc:	blr	x3
  4686c0:	ldr	x2, [x19, #320]
  4686c4:	mov	x0, #0x1                   	// #1
  4686c8:	mov	x1, #0x0                   	// #0
  4686cc:	add	x2, x2, x0
  4686d0:	str	x2, [x19, #320]
  4686d4:	str	x0, [x19, #256]
  4686d8:	mov	w0, #0x20                  	// #32
  4686dc:	strb	w0, [x19, x1]
  4686e0:	strb	w0, [x19, #264]
  4686e4:	ldr	x2, [x20, #8]
  4686e8:	mov	w1, w21
  4686ec:	mov	x0, x19
  4686f0:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4686f4:	add	x20, x20, #0x50
  4686f8:	mov	w21, #0x3a                  	// #58
  4686fc:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  468700:	add	x22, x20, #0x3
  468704:	ldr	x1, [x19, #256]
  468708:	b	468730 <_obstack_memory_used@@Base+0x14390>
  46870c:	mov	x0, x1
  468710:	add	x1, x1, #0x1
  468714:	str	x1, [x19, #256]
  468718:	add	x20, x20, #0x1
  46871c:	strb	w21, [x19, x0]
  468720:	cmp	x22, x20
  468724:	strb	w21, [x19, #264]
  468728:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  46872c:	ldrb	w21, [x20]
  468730:	cmp	x1, #0xff
  468734:	b.ne	46870c <_obstack_memory_used@@Base+0x1436c>  // b.any
  468738:	ldp	x3, x2, [x19, #272]
  46873c:	strb	wzr, [x19, #255]
  468740:	mov	x0, x19
  468744:	blr	x3
  468748:	ldr	x2, [x19, #320]
  46874c:	mov	x1, #0x1                   	// #1
  468750:	mov	x0, #0x0                   	// #0
  468754:	add	x2, x2, x1
  468758:	str	x2, [x19, #320]
  46875c:	b	468714 <_obstack_memory_used@@Base+0x14374>
  468760:	ldr	x1, [x19, #256]
  468764:	cmp	x1, #0xff
  468768:	b.eq	468af0 <_obstack_memory_used@@Base+0x14750>  // b.none
  46876c:	add	x0, x1, #0x1
  468770:	str	x0, [x19, #256]
  468774:	mov	w0, #0x26                  	// #38
  468778:	strb	w0, [x19, x1]
  46877c:	strb	w0, [x19, #264]
  468780:	ldp	x19, x20, [sp, #16]
  468784:	ldp	x21, x22, [sp, #32]
  468788:	ldp	x29, x30, [sp], #64
  46878c:	ret
  468790:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  468794:	add	x22, x22, #0x28
  468798:	stp	x23, x24, [sp, #48]
  46879c:	add	x24, x22, #0x6
  4687a0:	mov	w23, #0x20                  	// #32
  4687a4:	ldr	x1, [x19, #256]
  4687a8:	b	4687d0 <_obstack_memory_used@@Base+0x14430>
  4687ac:	mov	x0, x1
  4687b0:	add	x1, x1, #0x1
  4687b4:	str	x1, [x19, #256]
  4687b8:	add	x22, x22, #0x1
  4687bc:	strb	w23, [x19, x0]
  4687c0:	cmp	x24, x22
  4687c4:	strb	w23, [x19, #264]
  4687c8:	b.eq	468a38 <_obstack_memory_used@@Base+0x14698>  // b.none
  4687cc:	ldrb	w23, [x22]
  4687d0:	cmp	x1, #0xff
  4687d4:	b.ne	4687ac <_obstack_memory_used@@Base+0x1440c>  // b.any
  4687d8:	ldp	x3, x2, [x19, #272]
  4687dc:	strb	wzr, [x19, #255]
  4687e0:	mov	x0, x19
  4687e4:	blr	x3
  4687e8:	ldr	x2, [x19, #320]
  4687ec:	mov	x1, #0x1                   	// #1
  4687f0:	mov	x0, #0x0                   	// #0
  4687f4:	add	x2, x2, x1
  4687f8:	str	x2, [x19, #320]
  4687fc:	b	4687b4 <_obstack_memory_used@@Base+0x14414>
  468800:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  468804:	add	x22, x22, #0x18
  468808:	stp	x23, x24, [sp, #48]
  46880c:	add	x24, x22, #0x9
  468810:	mov	w23, #0x20                  	// #32
  468814:	ldr	x1, [x19, #256]
  468818:	b	468840 <_obstack_memory_used@@Base+0x144a0>
  46881c:	mov	x0, x1
  468820:	add	x1, x1, #0x1
  468824:	str	x1, [x19, #256]
  468828:	add	x22, x22, #0x1
  46882c:	strb	w23, [x19, x0]
  468830:	cmp	x22, x24
  468834:	strb	w23, [x19, #264]
  468838:	b.eq	468a38 <_obstack_memory_used@@Base+0x14698>  // b.none
  46883c:	ldrb	w23, [x22]
  468840:	cmp	x1, #0xff
  468844:	b.ne	46881c <_obstack_memory_used@@Base+0x1447c>  // b.any
  468848:	ldp	x3, x2, [x19, #272]
  46884c:	strb	wzr, [x19, #255]
  468850:	mov	x0, x19
  468854:	blr	x3
  468858:	ldr	x2, [x19, #320]
  46885c:	mov	x1, #0x1                   	// #1
  468860:	mov	x0, #0x0                   	// #0
  468864:	add	x2, x2, x1
  468868:	str	x2, [x19, #320]
  46886c:	b	468824 <_obstack_memory_used@@Base+0x14484>
  468870:	stp	x23, x24, [sp, #48]
  468874:	adrp	x24, 47e000 <_obstack_memory_used@@Base+0x29c60>
  468878:	add	x24, x24, #0x58
  46887c:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  468880:	add	x24, x24, #0xa
  468884:	add	x22, x22, #0x59
  468888:	mov	w23, #0x20                  	// #32
  46888c:	ldr	x1, [x19, #256]
  468890:	b	4688b4 <_obstack_memory_used@@Base+0x14514>
  468894:	mov	x0, x1
  468898:	add	x1, x1, #0x1
  46889c:	str	x1, [x19, #256]
  4688a0:	cmp	x22, x24
  4688a4:	strb	w23, [x19, x0]
  4688a8:	strb	w23, [x19, #264]
  4688ac:	b.eq	468ae8 <_obstack_memory_used@@Base+0x14748>  // b.none
  4688b0:	ldrb	w23, [x22], #1
  4688b4:	cmp	x1, #0xff
  4688b8:	b.ne	468894 <_obstack_memory_used@@Base+0x144f4>  // b.any
  4688bc:	ldp	x3, x2, [x19, #272]
  4688c0:	strb	wzr, [x19, #255]
  4688c4:	mov	x0, x19
  4688c8:	blr	x3
  4688cc:	ldr	x2, [x19, #320]
  4688d0:	mov	x1, #0x1                   	// #1
  4688d4:	mov	x0, #0x0                   	// #0
  4688d8:	add	x2, x2, x1
  4688dc:	str	x2, [x19, #320]
  4688e0:	b	46889c <_obstack_memory_used@@Base+0x144fc>
  4688e4:	ldr	x1, [x19, #256]
  4688e8:	b	468598 <_obstack_memory_used@@Base+0x141f8>
  4688ec:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4688f0:	add	x20, x20, #0x30
  4688f4:	add	x22, x20, #0x8
  4688f8:	mov	w21, #0x63                  	// #99
  4688fc:	ldr	x1, [x19, #256]
  468900:	b	468928 <_obstack_memory_used@@Base+0x14588>
  468904:	mov	x0, x1
  468908:	add	x1, x1, #0x1
  46890c:	str	x1, [x19, #256]
  468910:	add	x20, x20, #0x1
  468914:	strb	w21, [x19, x0]
  468918:	cmp	x22, x20
  46891c:	strb	w21, [x19, #264]
  468920:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  468924:	ldrb	w21, [x20]
  468928:	cmp	x1, #0xff
  46892c:	b.ne	468904 <_obstack_memory_used@@Base+0x14564>  // b.any
  468930:	ldp	x3, x2, [x19, #272]
  468934:	strb	wzr, [x19, #255]
  468938:	mov	x0, x19
  46893c:	blr	x3
  468940:	ldr	x2, [x19, #320]
  468944:	mov	x1, #0x1                   	// #1
  468948:	mov	x0, #0x0                   	// #0
  46894c:	add	x2, x2, x1
  468950:	str	x2, [x19, #320]
  468954:	b	46890c <_obstack_memory_used@@Base+0x1456c>
  468958:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  46895c:	add	x22, x22, #0x40
  468960:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  468964:	add	x22, x22, #0xa
  468968:	add	x20, x20, #0x41
  46896c:	mov	w21, #0x69                  	// #105
  468970:	ldr	x1, [x19, #256]
  468974:	b	468998 <_obstack_memory_used@@Base+0x145f8>
  468978:	mov	x0, x1
  46897c:	add	x1, x1, #0x1
  468980:	str	x1, [x19, #256]
  468984:	cmp	x20, x22
  468988:	strb	w21, [x19, x0]
  46898c:	strb	w21, [x19, #264]
  468990:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  468994:	ldrb	w21, [x20], #1
  468998:	cmp	x1, #0xff
  46899c:	b.ne	468978 <_obstack_memory_used@@Base+0x145d8>  // b.any
  4689a0:	ldp	x3, x2, [x19, #272]
  4689a4:	strb	wzr, [x19, #255]
  4689a8:	mov	x0, x19
  4689ac:	blr	x3
  4689b0:	ldr	x2, [x19, #320]
  4689b4:	mov	x1, #0x1                   	// #1
  4689b8:	mov	x0, #0x0                   	// #0
  4689bc:	add	x2, x2, x1
  4689c0:	str	x2, [x19, #320]
  4689c4:	b	468980 <_obstack_memory_used@@Base+0x145e0>
  4689c8:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4689cc:	add	x22, x22, #0x0
  4689d0:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  4689d4:	add	x22, x22, #0x11
  4689d8:	add	x20, x20, #0x1
  4689dc:	mov	w21, #0x20                  	// #32
  4689e0:	ldr	x1, [x19, #256]
  4689e4:	b	468a08 <_obstack_memory_used@@Base+0x14668>
  4689e8:	mov	x0, x1
  4689ec:	add	x1, x1, #0x1
  4689f0:	str	x1, [x19, #256]
  4689f4:	cmp	x22, x20
  4689f8:	strb	w21, [x19, x0]
  4689fc:	strb	w21, [x19, #264]
  468a00:	b.eq	4685fc <_obstack_memory_used@@Base+0x1425c>  // b.none
  468a04:	ldrb	w21, [x20], #1
  468a08:	cmp	x1, #0xff
  468a0c:	b.ne	4689e8 <_obstack_memory_used@@Base+0x14648>  // b.any
  468a10:	ldp	x3, x2, [x19, #272]
  468a14:	strb	wzr, [x19, #255]
  468a18:	mov	x0, x19
  468a1c:	blr	x3
  468a20:	ldr	x2, [x19, #320]
  468a24:	mov	x1, #0x1                   	// #1
  468a28:	mov	x0, #0x0                   	// #0
  468a2c:	add	x2, x2, x1
  468a30:	str	x2, [x19, #320]
  468a34:	b	4689f0 <_obstack_memory_used@@Base+0x14650>
  468a38:	ldr	x2, [x20, #16]
  468a3c:	cbz	x2, 468b9c <_obstack_memory_used@@Base+0x147fc>
  468a40:	add	x0, x1, #0x1
  468a44:	cmp	x1, #0xff
  468a48:	b.ne	468a74 <_obstack_memory_used@@Base+0x146d4>  // b.any
  468a4c:	ldp	x3, x2, [x19, #272]
  468a50:	strb	wzr, [x19, #255]
  468a54:	mov	x0, x19
  468a58:	blr	x3
  468a5c:	ldr	x3, [x19, #320]
  468a60:	mov	x0, #0x1                   	// #1
  468a64:	mov	x1, #0x0                   	// #0
  468a68:	add	x3, x3, x0
  468a6c:	ldr	x2, [x20, #16]
  468a70:	str	x3, [x19, #320]
  468a74:	str	x0, [x19, #256]
  468a78:	mov	w0, #0x28                  	// #40
  468a7c:	strb	w0, [x19, x1]
  468a80:	strb	w0, [x19, #264]
  468a84:	mov	w1, w21
  468a88:	mov	x0, x19
  468a8c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  468a90:	ldr	x1, [x19, #256]
  468a94:	add	x0, x1, #0x1
  468a98:	cmp	x1, #0xff
  468a9c:	b.ne	468ac4 <_obstack_memory_used@@Base+0x14724>  // b.any
  468aa0:	ldp	x3, x2, [x19, #272]
  468aa4:	strb	wzr, [x19, #255]
  468aa8:	mov	x0, x19
  468aac:	blr	x3
  468ab0:	ldr	x2, [x19, #320]
  468ab4:	mov	x0, #0x1                   	// #1
  468ab8:	mov	x1, #0x0                   	// #0
  468abc:	add	x2, x2, x0
  468ac0:	str	x2, [x19, #320]
  468ac4:	str	x0, [x19, #256]
  468ac8:	mov	w0, #0x29                  	// #41
  468acc:	strb	w0, [x19, x1]
  468ad0:	strb	w0, [x19, #264]
  468ad4:	ldp	x19, x20, [sp, #16]
  468ad8:	ldp	x21, x22, [sp, #32]
  468adc:	ldp	x23, x24, [sp, #48]
  468ae0:	ldp	x29, x30, [sp], #64
  468ae4:	ret
  468ae8:	ldr	x2, [x20, #8]
  468aec:	b	468a84 <_obstack_memory_used@@Base+0x146e4>
  468af0:	ldp	x3, x2, [x19, #272]
  468af4:	strb	wzr, [x19, #255]
  468af8:	mov	x0, x19
  468afc:	blr	x3
  468b00:	ldr	x2, [x19, #320]
  468b04:	mov	x0, #0x1                   	// #1
  468b08:	mov	x1, #0x0                   	// #0
  468b0c:	add	x2, x2, x0
  468b10:	str	x2, [x19, #320]
  468b14:	b	468770 <_obstack_memory_used@@Base+0x143d0>
  468b18:	ldp	x3, x2, [x19, #272]
  468b1c:	strb	wzr, [x19, #255]
  468b20:	mov	x1, x0
  468b24:	mov	x0, x19
  468b28:	blr	x3
  468b2c:	ldr	x0, [x19, #320]
  468b30:	mov	w2, #0x20                  	// #32
  468b34:	mov	x1, #0x1                   	// #1
  468b38:	strb	w2, [x19]
  468b3c:	add	x0, x0, x1
  468b40:	str	x0, [x19, #320]
  468b44:	b	46876c <_obstack_memory_used@@Base+0x143cc>
  468b48:	ldp	x3, x2, [x19, #272]
  468b4c:	strb	wzr, [x19, #255]
  468b50:	mov	x0, x19
  468b54:	blr	x3
  468b58:	ldr	x2, [x19, #320]
  468b5c:	mov	x0, #0x1                   	// #1
  468b60:	mov	x1, #0x0                   	// #0
  468b64:	add	x2, x2, x0
  468b68:	str	x2, [x19, #320]
  468b6c:	b	46861c <_obstack_memory_used@@Base+0x1427c>
  468b70:	ldp	x3, x2, [x19, #272]
  468b74:	strb	wzr, [x19, #255]
  468b78:	mov	x1, x0
  468b7c:	mov	x0, x19
  468b80:	blr	x3
  468b84:	ldr	x2, [x19, #320]
  468b88:	mov	x1, #0x1                   	// #1
  468b8c:	mov	x0, #0x0                   	// #0
  468b90:	add	x2, x2, x1
  468b94:	str	x2, [x19, #320]
  468b98:	b	468588 <_obstack_memory_used@@Base+0x141e8>
  468b9c:	ldp	x23, x24, [sp, #48]
  468ba0:	b	4685fc <_obstack_memory_used@@Base+0x1425c>
  468ba4:	nop
  468ba8:	stp	x29, x30, [sp, #-64]!
  468bac:	mov	x29, sp
  468bb0:	stp	x19, x20, [sp, #16]
  468bb4:	mov	x19, x0
  468bb8:	mov	x20, x3
  468bbc:	stp	x21, x22, [sp, #32]
  468bc0:	mov	x21, x2
  468bc4:	stp	x23, x24, [sp, #48]
  468bc8:	mov	w23, w1
  468bcc:	cbz	x3, 468c10 <_obstack_memory_used@@Base+0x14870>
  468bd0:	mov	x2, #0xe000000             	// #234881024
  468bd4:	mov	x4, #0x1                   	// #1
  468bd8:	movk	x2, #0x862, lsl #32
  468bdc:	ldr	w0, [x3, #16]
  468be0:	cbnz	w0, 468c10 <_obstack_memory_used@@Base+0x14870>
  468be4:	ldr	x0, [x3, #8]
  468be8:	ldr	w0, [x0]
  468bec:	cmp	w0, #0x2b
  468bf0:	b.hi	468c08 <_obstack_memory_used@@Base+0x14868>  // b.pmore
  468bf4:	lsl	x0, x4, x0
  468bf8:	tst	x0, x2
  468bfc:	b.ne	468cd8 <_obstack_memory_used@@Base+0x14938>  // b.any
  468c00:	tst	x0, #0x1c00000000
  468c04:	b.ne	468da4 <_obstack_memory_used@@Base+0x14a04>  // b.any
  468c08:	ldr	x3, [x3]
  468c0c:	cbnz	x3, 468bdc <_obstack_memory_used@@Base+0x1483c>
  468c10:	ldr	x22, [x19, #296]
  468c14:	str	xzr, [x19, #296]
  468c18:	mov	w1, w23
  468c1c:	mov	x2, x20
  468c20:	mov	x0, x19
  468c24:	mov	w3, #0x0                   	// #0
  468c28:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  468c2c:	ldr	x1, [x19, #256]
  468c30:	cmp	x1, #0xff
  468c34:	b.eq	468d68 <_obstack_memory_used@@Base+0x149c8>  // b.none
  468c38:	add	x0, x1, #0x1
  468c3c:	str	x0, [x19, #256]
  468c40:	mov	w2, #0x28                  	// #40
  468c44:	strb	w2, [x19, x1]
  468c48:	strb	w2, [x19, #264]
  468c4c:	ldr	x2, [x21]
  468c50:	cbz	x2, 468c64 <_obstack_memory_used@@Base+0x148c4>
  468c54:	mov	x0, x19
  468c58:	mov	w1, w23
  468c5c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  468c60:	ldr	x0, [x19, #256]
  468c64:	cmp	x0, #0xff
  468c68:	b.eq	468cac <_obstack_memory_used@@Base+0x1490c>  // b.none
  468c6c:	add	x1, x0, #0x1
  468c70:	str	x1, [x19, #256]
  468c74:	mov	w3, #0x29                  	// #41
  468c78:	strb	w3, [x19, x0]
  468c7c:	mov	x2, x20
  468c80:	strb	w3, [x19, #264]
  468c84:	mov	w1, w23
  468c88:	mov	x0, x19
  468c8c:	mov	w3, #0x1                   	// #1
  468c90:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  468c94:	ldp	x23, x24, [sp, #48]
  468c98:	str	x22, [x19, #296]
  468c9c:	ldp	x19, x20, [sp, #16]
  468ca0:	ldp	x21, x22, [sp, #32]
  468ca4:	ldp	x29, x30, [sp], #64
  468ca8:	ret
  468cac:	ldp	x3, x2, [x19, #272]
  468cb0:	strb	wzr, [x19, #255]
  468cb4:	mov	x1, x0
  468cb8:	mov	x0, x19
  468cbc:	blr	x3
  468cc0:	ldr	x2, [x19, #320]
  468cc4:	mov	x1, #0x1                   	// #1
  468cc8:	mov	x0, #0x0                   	// #0
  468ccc:	add	x2, x2, x1
  468cd0:	str	x2, [x19, #320]
  468cd4:	b	468c70 <_obstack_memory_used@@Base+0x148d0>
  468cd8:	ldrb	w0, [x19, #264]
  468cdc:	ldr	x1, [x19, #256]
  468ce0:	cmp	w0, #0x20
  468ce4:	b.eq	468d08 <_obstack_memory_used@@Base+0x14968>  // b.none
  468ce8:	cmp	x1, #0xff
  468cec:	b.eq	468de8 <_obstack_memory_used@@Base+0x14a48>  // b.none
  468cf0:	add	x2, x1, #0x1
  468cf4:	str	x2, [x19, #256]
  468cf8:	mov	w0, #0x20                  	// #32
  468cfc:	strb	w0, [x19, x1]
  468d00:	mov	x1, x2
  468d04:	strb	w0, [x19, #264]
  468d08:	cmp	x1, #0xff
  468d0c:	b.eq	468dc0 <_obstack_memory_used@@Base+0x14a20>  // b.none
  468d10:	add	x0, x1, #0x1
  468d14:	str	x0, [x19, #256]
  468d18:	mov	w24, #0x28                  	// #40
  468d1c:	strb	w24, [x19, x1]
  468d20:	mov	x0, x19
  468d24:	strb	w24, [x19, #264]
  468d28:	mov	x2, x20
  468d2c:	ldr	x22, [x19, #296]
  468d30:	str	xzr, [x19, #296]
  468d34:	mov	w1, w23
  468d38:	mov	w3, #0x0                   	// #0
  468d3c:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  468d40:	ldr	x0, [x19, #256]
  468d44:	cmp	x0, #0xff
  468d48:	b.eq	468e14 <_obstack_memory_used@@Base+0x14a74>  // b.none
  468d4c:	add	x1, x0, #0x1
  468d50:	str	x1, [x19, #256]
  468d54:	mov	w2, #0x29                  	// #41
  468d58:	strb	w2, [x19, x0]
  468d5c:	strb	w2, [x19, #264]
  468d60:	cmp	x1, #0xff
  468d64:	b.ne	468c38 <_obstack_memory_used@@Base+0x14898>  // b.any
  468d68:	ldp	x3, x2, [x19, #272]
  468d6c:	strb	wzr, [x19, #255]
  468d70:	mov	x0, x19
  468d74:	blr	x3
  468d78:	mov	w1, #0x28                  	// #40
  468d7c:	strb	w1, [x19]
  468d80:	strb	w1, [x19, #264]
  468d84:	mov	x0, #0x1                   	// #1
  468d88:	ldr	x1, [x19, #320]
  468d8c:	ldr	x2, [x21]
  468d90:	add	x1, x1, x0
  468d94:	str	x0, [x19, #256]
  468d98:	str	x1, [x19, #320]
  468d9c:	cbnz	x2, 468c54 <_obstack_memory_used@@Base+0x148b4>
  468da0:	b	468c6c <_obstack_memory_used@@Base+0x148cc>
  468da4:	ldrb	w0, [x19, #264]
  468da8:	ldr	x1, [x19, #256]
  468dac:	and	w2, w0, #0xfffffffd
  468db0:	cmp	w2, #0x28
  468db4:	b.ne	468ce0 <_obstack_memory_used@@Base+0x14940>  // b.any
  468db8:	cmp	x1, #0xff
  468dbc:	b.ne	468d10 <_obstack_memory_used@@Base+0x14970>  // b.any
  468dc0:	ldp	x3, x2, [x19, #272]
  468dc4:	strb	wzr, [x19, #255]
  468dc8:	mov	x0, x19
  468dcc:	blr	x3
  468dd0:	ldr	x2, [x19, #320]
  468dd4:	mov	x0, #0x1                   	// #1
  468dd8:	mov	x1, #0x0                   	// #0
  468ddc:	add	x2, x2, x0
  468de0:	str	x2, [x19, #320]
  468de4:	b	468d14 <_obstack_memory_used@@Base+0x14974>
  468de8:	ldp	x3, x2, [x19, #272]
  468dec:	strb	wzr, [x19, #255]
  468df0:	mov	x0, x19
  468df4:	blr	x3
  468df8:	ldr	x0, [x19, #320]
  468dfc:	mov	w2, #0x20                  	// #32
  468e00:	mov	x1, #0x1                   	// #1
  468e04:	strb	w2, [x19]
  468e08:	add	x0, x0, x1
  468e0c:	str	x0, [x19, #320]
  468e10:	b	468d10 <_obstack_memory_used@@Base+0x14970>
  468e14:	ldp	x3, x2, [x19, #272]
  468e18:	strb	wzr, [x19, #255]
  468e1c:	mov	x1, x0
  468e20:	mov	x0, x19
  468e24:	blr	x3
  468e28:	strb	w24, [x19, #264]
  468e2c:	mov	w0, #0x2829                	// #10281
  468e30:	strh	w0, [x19]
  468e34:	ldr	x1, [x19, #320]
  468e38:	mov	x0, #0x2                   	// #2
  468e3c:	ldr	x2, [x21]
  468e40:	add	x1, x1, #0x1
  468e44:	str	x0, [x19, #256]
  468e48:	str	x1, [x19, #320]
  468e4c:	cbnz	x2, 468c54 <_obstack_memory_used@@Base+0x148b4>
  468e50:	b	468c6c <_obstack_memory_used@@Base+0x148cc>
  468e54:	nop
  468e58:	cbz	x2, 4690b4 <_obstack_memory_used@@Base+0x14d14>
  468e5c:	stp	x29, x30, [sp, #-112]!
  468e60:	mov	x29, sp
  468e64:	stp	x23, x24, [sp, #48]
  468e68:	mov	x24, #0x1f                  	// #31
  468e6c:	movk	x24, #0x1a, lsl #48
  468e70:	stp	x19, x20, [sp, #16]
  468e74:	mov	w20, w1
  468e78:	mov	x19, x2
  468e7c:	stp	x21, x22, [sp, #32]
  468e80:	mov	w21, w3
  468e84:	mov	w22, #0x1                   	// #1
  468e88:	stp	x25, x26, [sp, #64]
  468e8c:	mov	x26, x0
  468e90:	mov	x25, #0x1                   	// #1
  468e94:	b	468ed8 <_obstack_memory_used@@Base+0x14b38>
  468e98:	ldr	x1, [x19, #24]
  468e9c:	cmp	w5, #0x29
  468ea0:	ldr	x23, [x26, #288]
  468ea4:	str	w22, [x19, #16]
  468ea8:	str	x1, [x26, #288]
  468eac:	b.eq	468f24 <_obstack_memory_used@@Base+0x14b84>  // b.none
  468eb0:	cmp	w5, #0x2a
  468eb4:	b.eq	468f54 <_obstack_memory_used@@Base+0x14bb4>  // b.none
  468eb8:	cmp	w5, #0x2
  468ebc:	b.eq	468f84 <_obstack_memory_used@@Base+0x14be4>  // b.none
  468ec0:	mov	w1, w20
  468ec4:	mov	x0, x26
  468ec8:	bl	4683a8 <_obstack_memory_used@@Base+0x14008>
  468ecc:	str	x23, [x26, #288]
  468ed0:	ldr	x19, [x19]
  468ed4:	cbz	x19, 468f3c <_obstack_memory_used@@Base+0x14b9c>
  468ed8:	ldr	w2, [x26, #304]
  468edc:	cbnz	w2, 468f3c <_obstack_memory_used@@Base+0x14b9c>
  468ee0:	ldr	w2, [x19, #16]
  468ee4:	cbnz	w2, 468ed0 <_obstack_memory_used@@Base+0x14b30>
  468ee8:	ldr	x2, [x19, #8]
  468eec:	ldr	w5, [x2]
  468ef0:	cbnz	w21, 468e98 <_obstack_memory_used@@Base+0x14af8>
  468ef4:	sub	w4, w5, #0x1c
  468ef8:	cmp	w4, #0x34
  468efc:	b.hi	468e98 <_obstack_memory_used@@Base+0x14af8>  // b.pmore
  468f00:	lsl	x4, x25, x4
  468f04:	tst	x4, x24
  468f08:	b.ne	468ed0 <_obstack_memory_used@@Base+0x14b30>  // b.any
  468f0c:	ldr	x1, [x19, #24]
  468f10:	cmp	w5, #0x29
  468f14:	ldr	x23, [x26, #288]
  468f18:	str	w22, [x19, #16]
  468f1c:	str	x1, [x26, #288]
  468f20:	b.ne	468eb0 <_obstack_memory_used@@Base+0x14b10>  // b.any
  468f24:	ldr	x3, [x19]
  468f28:	add	x2, x2, #0x10
  468f2c:	mov	w1, w20
  468f30:	mov	x0, x26
  468f34:	bl	468ba8 <_obstack_memory_used@@Base+0x14808>
  468f38:	str	x23, [x26, #288]
  468f3c:	ldp	x19, x20, [sp, #16]
  468f40:	ldp	x21, x22, [sp, #32]
  468f44:	ldp	x23, x24, [sp, #48]
  468f48:	ldp	x25, x26, [sp, #64]
  468f4c:	ldp	x29, x30, [sp], #112
  468f50:	ret
  468f54:	ldr	x3, [x19]
  468f58:	mov	w1, w20
  468f5c:	mov	x0, x26
  468f60:	add	x2, x2, #0x8
  468f64:	bl	469228 <_obstack_memory_used@@Base+0x14e88>
  468f68:	str	x23, [x26, #288]
  468f6c:	ldp	x19, x20, [sp, #16]
  468f70:	ldp	x21, x22, [sp, #32]
  468f74:	ldp	x23, x24, [sp, #48]
  468f78:	ldp	x25, x26, [sp, #64]
  468f7c:	ldp	x29, x30, [sp], #112
  468f80:	ret
  468f84:	ldr	x2, [x2, #8]
  468f88:	mov	w1, w20
  468f8c:	ldr	x21, [x26, #296]
  468f90:	str	xzr, [x26, #296]
  468f94:	mov	x0, x26
  468f98:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  468f9c:	str	x21, [x26, #296]
  468fa0:	tbz	w20, #2, 469058 <_obstack_memory_used@@Base+0x14cb8>
  468fa4:	ldr	x1, [x26, #256]
  468fa8:	add	x0, x1, #0x1
  468fac:	cmp	x1, #0xff
  468fb0:	b.ne	468fd8 <_obstack_memory_used@@Base+0x14c38>  // b.any
  468fb4:	ldp	x3, x2, [x26, #272]
  468fb8:	strb	wzr, [x26, #255]
  468fbc:	mov	x0, x26
  468fc0:	blr	x3
  468fc4:	ldr	x2, [x26, #320]
  468fc8:	mov	x0, #0x1                   	// #1
  468fcc:	mov	x1, #0x0                   	// #0
  468fd0:	add	x2, x2, x0
  468fd4:	str	x2, [x26, #320]
  468fd8:	str	x0, [x26, #256]
  468fdc:	mov	w0, #0x2e                  	// #46
  468fe0:	strb	w0, [x26, x1]
  468fe4:	strb	w0, [x26, #264]
  468fe8:	ldr	x0, [x19, #8]
  468fec:	ldr	x21, [x0, #16]
  468ff0:	ldr	w2, [x21]
  468ff4:	cmp	w2, #0x47
  468ff8:	b.eq	4690b8 <_obstack_memory_used@@Base+0x14d18>  // b.none
  468ffc:	mov	x1, #0x1f                  	// #31
  469000:	mov	x3, #0x1                   	// #1
  469004:	movk	x1, #0x1a, lsl #48
  469008:	sub	w2, w2, #0x1c
  46900c:	cmp	w2, #0x34
  469010:	b.hi	469020 <_obstack_memory_used@@Base+0x14c80>  // b.pmore
  469014:	lsl	x2, x3, x2
  469018:	tst	x2, x1
  46901c:	b.ne	46904c <_obstack_memory_used@@Base+0x14cac>  // b.any
  469020:	mov	x2, x21
  469024:	mov	w1, w20
  469028:	mov	x0, x26
  46902c:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  469030:	str	x23, [x26, #288]
  469034:	ldp	x19, x20, [sp, #16]
  469038:	ldp	x21, x22, [sp, #32]
  46903c:	ldp	x23, x24, [sp, #48]
  469040:	ldp	x25, x26, [sp, #64]
  469044:	ldp	x29, x30, [sp], #112
  469048:	ret
  46904c:	ldr	x21, [x21, #8]
  469050:	ldr	w2, [x21]
  469054:	b	469008 <_obstack_memory_used@@Base+0x14c68>
  469058:	mov	x22, #0x0                   	// #0
  46905c:	mov	w21, #0x3a                  	// #58
  469060:	ldr	x1, [x26, #256]
  469064:	b	469084 <_obstack_memory_used@@Base+0x14ce4>
  469068:	mov	x0, x1
  46906c:	add	x1, x1, #0x1
  469070:	str	x1, [x26, #256]
  469074:	strb	w21, [x26, x0]
  469078:	strb	w21, [x26, #264]
  46907c:	cbnz	x22, 468fe8 <_obstack_memory_used@@Base+0x14c48>
  469080:	mov	x22, #0x1                   	// #1
  469084:	cmp	x1, #0xff
  469088:	b.ne	469068 <_obstack_memory_used@@Base+0x14cc8>  // b.any
  46908c:	ldp	x3, x2, [x26, #272]
  469090:	strb	wzr, [x26, #255]
  469094:	mov	x0, x26
  469098:	blr	x3
  46909c:	ldr	x2, [x26, #320]
  4690a0:	mov	x1, #0x1                   	// #1
  4690a4:	mov	x0, #0x0                   	// #0
  4690a8:	add	x2, x2, x1
  4690ac:	str	x2, [x26, #320]
  4690b0:	b	469070 <_obstack_memory_used@@Base+0x14cd0>
  4690b4:	ret
  4690b8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4690bc:	add	x24, x24, #0xca8
  4690c0:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4690c4:	add	x24, x24, #0xd
  4690c8:	add	x22, x22, #0xca9
  4690cc:	mov	w19, #0x7b                  	// #123
  4690d0:	ldr	x1, [x26, #256]
  4690d4:	b	4690f8 <_obstack_memory_used@@Base+0x14d58>
  4690d8:	mov	x0, x1
  4690dc:	add	x1, x1, #0x1
  4690e0:	str	x1, [x26, #256]
  4690e4:	cmp	x22, x24
  4690e8:	strb	w19, [x26, x0]
  4690ec:	strb	w19, [x26, #264]
  4690f0:	b.eq	469128 <_obstack_memory_used@@Base+0x14d88>  // b.none
  4690f4:	ldrb	w19, [x22], #1
  4690f8:	cmp	x1, #0xff
  4690fc:	b.ne	4690d8 <_obstack_memory_used@@Base+0x14d38>  // b.any
  469100:	ldp	x3, x2, [x26, #272]
  469104:	strb	wzr, [x26, #255]
  469108:	mov	x0, x26
  46910c:	blr	x3
  469110:	ldr	x2, [x26, #320]
  469114:	mov	x1, #0x1                   	// #1
  469118:	mov	x0, #0x0                   	// #0
  46911c:	add	x2, x2, x1
  469120:	str	x2, [x26, #320]
  469124:	b	4690e0 <_obstack_memory_used@@Base+0x14d40>
  469128:	ldr	w2, [x21, #16]
  46912c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1bc60>
  469130:	add	x1, x1, #0xd08
  469134:	add	x19, sp, #0x50
  469138:	add	w2, w2, #0x1
  46913c:	mov	x0, x19
  469140:	bl	402720 <sprintf@plt>
  469144:	mov	x0, x19
  469148:	bl	402680 <strlen@plt>
  46914c:	ldr	x1, [x26, #256]
  469150:	cbz	x0, 4691b0 <_obstack_memory_used@@Base+0x14e10>
  469154:	add	x24, x19, x0
  469158:	b	46917c <_obstack_memory_used@@Base+0x14ddc>
  46915c:	mov	x0, x1
  469160:	add	x1, x1, #0x1
  469164:	str	x1, [x26, #256]
  469168:	add	x19, x19, #0x1
  46916c:	strb	w22, [x26, x0]
  469170:	cmp	x24, x19
  469174:	strb	w22, [x26, #264]
  469178:	b.eq	4691b0 <_obstack_memory_used@@Base+0x14e10>  // b.none
  46917c:	ldrb	w22, [x19]
  469180:	cmp	x1, #0xff
  469184:	b.ne	46915c <_obstack_memory_used@@Base+0x14dbc>  // b.any
  469188:	ldp	x3, x2, [x26, #272]
  46918c:	strb	wzr, [x26, #255]
  469190:	mov	x0, x26
  469194:	blr	x3
  469198:	ldr	x2, [x26, #320]
  46919c:	mov	x1, #0x1                   	// #1
  4691a0:	mov	x0, #0x0                   	// #0
  4691a4:	add	x2, x2, x1
  4691a8:	str	x2, [x26, #320]
  4691ac:	b	469164 <_obstack_memory_used@@Base+0x14dc4>
  4691b0:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x28c60>
  4691b4:	add	x19, x19, #0xcb8
  4691b8:	add	x24, x19, #0x3
  4691bc:	mov	w22, #0x7d                  	// #125
  4691c0:	b	4691e8 <_obstack_memory_used@@Base+0x14e48>
  4691c4:	mov	x0, x1
  4691c8:	add	x1, x1, #0x1
  4691cc:	str	x1, [x26, #256]
  4691d0:	add	x19, x19, #0x1
  4691d4:	strb	w22, [x26, x0]
  4691d8:	cmp	x24, x19
  4691dc:	strb	w22, [x26, #264]
  4691e0:	b.eq	469218 <_obstack_memory_used@@Base+0x14e78>  // b.none
  4691e4:	ldrb	w22, [x19]
  4691e8:	cmp	x1, #0xff
  4691ec:	b.ne	4691c4 <_obstack_memory_used@@Base+0x14e24>  // b.any
  4691f0:	ldp	x3, x2, [x26, #272]
  4691f4:	strb	wzr, [x26, #255]
  4691f8:	mov	x0, x26
  4691fc:	blr	x3
  469200:	ldr	x2, [x26, #320]
  469204:	mov	x1, #0x1                   	// #1
  469208:	mov	x0, #0x0                   	// #0
  46920c:	add	x2, x2, x1
  469210:	str	x2, [x26, #320]
  469214:	b	4691cc <_obstack_memory_used@@Base+0x14e2c>
  469218:	ldr	x21, [x21, #8]
  46921c:	ldr	w2, [x21]
  469220:	b	468ffc <_obstack_memory_used@@Base+0x14c5c>
  469224:	nop
  469228:	stp	x29, x30, [sp, #-64]!
  46922c:	mov	x29, sp
  469230:	stp	x19, x20, [sp, #16]
  469234:	mov	x19, x0
  469238:	mov	x20, x3
  46923c:	stp	x21, x22, [sp, #32]
  469240:	mov	x0, x3
  469244:	mov	w21, w1
  469248:	stp	x23, x24, [sp, #48]
  46924c:	mov	x22, x2
  469250:	cbz	x3, 46927c <_obstack_memory_used@@Base+0x14edc>
  469254:	nop
  469258:	ldr	w4, [x0, #16]
  46925c:	cbz	w4, 469368 <_obstack_memory_used@@Base+0x14fc8>
  469260:	ldr	x0, [x0]
  469264:	cbnz	x0, 469258 <_obstack_memory_used@@Base+0x14eb8>
  469268:	mov	x2, x20
  46926c:	mov	w1, w21
  469270:	mov	x0, x19
  469274:	mov	w3, #0x0                   	// #0
  469278:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  46927c:	ldr	x23, [x19, #256]
  469280:	cmp	x23, #0xff
  469284:	b.eq	469394 <_obstack_memory_used@@Base+0x14ff4>  // b.none
  469288:	add	x1, x23, #0x1
  46928c:	str	x1, [x19, #256]
  469290:	mov	w0, #0x20                  	// #32
  469294:	strb	w0, [x19, x23]
  469298:	strb	w0, [x19, #264]
  46929c:	cmp	x1, #0xff
  4692a0:	b.eq	46932c <_obstack_memory_used@@Base+0x14f8c>  // b.none
  4692a4:	add	x0, x1, #0x1
  4692a8:	str	x0, [x19, #256]
  4692ac:	mov	w2, #0x5b                  	// #91
  4692b0:	strb	w2, [x19, x1]
  4692b4:	strb	w2, [x19, #264]
  4692b8:	ldr	x2, [x22]
  4692bc:	cbz	x2, 4692d0 <_obstack_memory_used@@Base+0x14f30>
  4692c0:	mov	x0, x19
  4692c4:	mov	w1, w21
  4692c8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4692cc:	ldr	x0, [x19, #256]
  4692d0:	cmp	x0, #0xff
  4692d4:	b.eq	469300 <_obstack_memory_used@@Base+0x14f60>  // b.none
  4692d8:	add	x1, x0, #0x1
  4692dc:	str	x1, [x19, #256]
  4692e0:	mov	w1, #0x5d                  	// #93
  4692e4:	strb	w1, [x19, x0]
  4692e8:	strb	w1, [x19, #264]
  4692ec:	ldp	x19, x20, [sp, #16]
  4692f0:	ldp	x21, x22, [sp, #32]
  4692f4:	ldp	x23, x24, [sp, #48]
  4692f8:	ldp	x29, x30, [sp], #64
  4692fc:	ret
  469300:	ldp	x3, x2, [x19, #272]
  469304:	strb	wzr, [x19, #255]
  469308:	mov	x1, x0
  46930c:	mov	x0, x19
  469310:	blr	x3
  469314:	ldr	x2, [x19, #320]
  469318:	mov	x1, #0x1                   	// #1
  46931c:	mov	x0, #0x0                   	// #0
  469320:	add	x2, x2, x1
  469324:	str	x2, [x19, #320]
  469328:	b	4692dc <_obstack_memory_used@@Base+0x14f3c>
  46932c:	ldp	x3, x2, [x19, #272]
  469330:	strb	wzr, [x19, #255]
  469334:	mov	x0, x19
  469338:	blr	x3
  46933c:	mov	w1, #0x5b                  	// #91
  469340:	strb	w1, [x19]
  469344:	strb	w1, [x19, #264]
  469348:	mov	x0, #0x1                   	// #1
  46934c:	ldr	x1, [x19, #320]
  469350:	ldr	x2, [x22]
  469354:	add	x1, x1, x0
  469358:	str	x0, [x19, #256]
  46935c:	str	x1, [x19, #320]
  469360:	cbnz	x2, 4692c0 <_obstack_memory_used@@Base+0x14f20>
  469364:	b	4692d8 <_obstack_memory_used@@Base+0x14f38>
  469368:	ldr	x0, [x0, #8]
  46936c:	ldr	w0, [x0]
  469370:	cmp	w0, #0x2a
  469374:	b.ne	4693d8 <_obstack_memory_used@@Base+0x15038>  // b.any
  469378:	mov	w1, w21
  46937c:	mov	x2, x20
  469380:	mov	x0, x19
  469384:	mov	w3, #0x0                   	// #0
  469388:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  46938c:	ldr	x1, [x19, #256]
  469390:	b	46929c <_obstack_memory_used@@Base+0x14efc>
  469394:	ldp	x3, x2, [x19, #272]
  469398:	strb	wzr, [x19, #255]
  46939c:	mov	x1, x23
  4693a0:	mov	x0, x19
  4693a4:	blr	x3
  4693a8:	mov	w1, #0x5b20                	// #23328
  4693ac:	mov	w0, #0x5b                  	// #91
  4693b0:	strh	w1, [x19]
  4693b4:	strb	w0, [x19, #264]
  4693b8:	mov	x0, #0x2                   	// #2
  4693bc:	ldr	x1, [x19, #320]
  4693c0:	ldr	x2, [x22]
  4693c4:	add	x1, x1, #0x1
  4693c8:	str	x0, [x19, #256]
  4693cc:	str	x1, [x19, #320]
  4693d0:	cbnz	x2, 4692c0 <_obstack_memory_used@@Base+0x14f20>
  4693d4:	b	4692d8 <_obstack_memory_used@@Base+0x14f38>
  4693d8:	mov	w24, #0x20                  	// #32
  4693dc:	mov	x23, #0x0                   	// #0
  4693e0:	ldr	x1, [x19, #256]
  4693e4:	b	46940c <_obstack_memory_used@@Base+0x1506c>
  4693e8:	mov	x0, x1
  4693ec:	add	x1, x1, #0x1
  4693f0:	str	x1, [x19, #256]
  4693f4:	cmp	x23, #0x1
  4693f8:	strb	w24, [x19, x0]
  4693fc:	strb	w24, [x19, #264]
  469400:	mov	w24, #0x28                  	// #40
  469404:	b.eq	469450 <_obstack_memory_used@@Base+0x150b0>  // b.none
  469408:	mov	x23, #0x1                   	// #1
  46940c:	cmp	x1, #0xff
  469410:	b.ne	4693e8 <_obstack_memory_used@@Base+0x15048>  // b.any
  469414:	ldp	x3, x2, [x19, #272]
  469418:	strb	wzr, [x19, #255]
  46941c:	mov	x0, x19
  469420:	blr	x3
  469424:	ldr	x2, [x19, #320]
  469428:	mov	x0, #0x0                   	// #0
  46942c:	mov	x1, #0x1                   	// #1
  469430:	str	x1, [x19, #256]
  469434:	add	x2, x2, x1
  469438:	str	x2, [x19, #320]
  46943c:	strb	w24, [x19, x0]
  469440:	cmp	x23, #0x1
  469444:	strb	w24, [x19, #264]
  469448:	mov	w24, #0x28                  	// #40
  46944c:	b.ne	469408 <_obstack_memory_used@@Base+0x15068>  // b.any
  469450:	mov	w1, w21
  469454:	mov	x2, x20
  469458:	mov	x0, x19
  46945c:	mov	w3, #0x0                   	// #0
  469460:	bl	468e58 <_obstack_memory_used@@Base+0x14ab8>
  469464:	ldr	x1, [x19, #256]
  469468:	cmp	x1, #0xff
  46946c:	b.eq	469488 <_obstack_memory_used@@Base+0x150e8>  // b.none
  469470:	add	x23, x1, #0x1
  469474:	str	x23, [x19, #256]
  469478:	mov	w0, #0x29                  	// #41
  46947c:	strb	w0, [x19, x1]
  469480:	strb	w0, [x19, #264]
  469484:	b	469280 <_obstack_memory_used@@Base+0x14ee0>
  469488:	ldp	x3, x2, [x19, #272]
  46948c:	strb	wzr, [x19, #255]
  469490:	mov	x0, x19
  469494:	blr	x3
  469498:	ldr	x0, [x19, #320]
  46949c:	mov	w1, #0x29                  	// #41
  4694a0:	strb	w1, [x19]
  4694a4:	add	x0, x0, #0x1
  4694a8:	str	x0, [x19, #320]
  4694ac:	b	469288 <_obstack_memory_used@@Base+0x14ee8>
  4694b0:	ldr	w4, [x2]
  4694b4:	cmp	w4, #0x32
  4694b8:	b.eq	4694c0 <_obstack_memory_used@@Base+0x15120>  // b.none
  4694bc:	b	468310 <_obstack_memory_used@@Base+0x13f70>
  4694c0:	stp	x29, x30, [sp, #-48]!
  4694c4:	mov	x29, sp
  4694c8:	stp	x19, x20, [sp, #16]
  4694cc:	mov	x19, x0
  4694d0:	ldr	x0, [x2, #8]
  4694d4:	stp	x21, x22, [sp, #32]
  4694d8:	ldrsw	x22, [x0, #16]
  4694dc:	ldr	x20, [x0, #8]
  4694e0:	cbz	x22, 469558 <_obstack_memory_used@@Base+0x151b8>
  4694e4:	add	x22, x20, x22
  4694e8:	ldr	x1, [x19, #256]
  4694ec:	b	469510 <_obstack_memory_used@@Base+0x15170>
  4694f0:	mov	x2, x1
  4694f4:	add	x1, x1, #0x1
  4694f8:	str	x1, [x19, #256]
  4694fc:	add	x20, x20, #0x1
  469500:	cmp	x20, x22
  469504:	strb	w21, [x19, x2]
  469508:	strb	w21, [x19, #264]
  46950c:	b.eq	469558 <_obstack_memory_used@@Base+0x151b8>  // b.none
  469510:	ldrb	w21, [x20]
  469514:	cmp	x1, #0xff
  469518:	b.ne	4694f0 <_obstack_memory_used@@Base+0x15150>  // b.any
  46951c:	ldp	x3, x2, [x19, #272]
  469520:	strb	wzr, [x19, #255]
  469524:	mov	x0, x19
  469528:	add	x20, x20, #0x1
  46952c:	blr	x3
  469530:	ldr	x0, [x19, #320]
  469534:	mov	x2, #0x0                   	// #0
  469538:	mov	x1, #0x1                   	// #1
  46953c:	str	x1, [x19, #256]
  469540:	add	x0, x0, x1
  469544:	str	x0, [x19, #320]
  469548:	strb	w21, [x19, x2]
  46954c:	cmp	x20, x22
  469550:	strb	w21, [x19, #264]
  469554:	b.ne	469510 <_obstack_memory_used@@Base+0x15170>  // b.any
  469558:	ldp	x19, x20, [sp, #16]
  46955c:	ldp	x21, x22, [sp, #32]
  469560:	ldp	x29, x30, [sp], #48
  469564:	ret
  469568:	stp	x29, x30, [sp, #-48]!
  46956c:	mov	x29, sp
  469570:	str	x21, [sp, #32]
  469574:	mov	w21, w1
  469578:	ldr	w1, [x2]
  46957c:	stp	x19, x20, [sp, #16]
  469580:	mov	x20, x2
  469584:	cmp	w1, #0x31
  469588:	mov	x19, x0
  46958c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  469590:	b.ls	469620 <_obstack_memory_used@@Base+0x15280>  // b.plast
  469594:	cmp	w1, #0x6
  469598:	b.eq	469620 <_obstack_memory_used@@Base+0x15280>  // b.none
  46959c:	ldr	x1, [x0, #256]
  4695a0:	cmp	x1, #0xff
  4695a4:	b.eq	46963c <_obstack_memory_used@@Base+0x1529c>  // b.none
  4695a8:	add	x0, x1, #0x1
  4695ac:	str	x0, [x19, #256]
  4695b0:	mov	w0, #0x28                  	// #40
  4695b4:	strb	w0, [x19, x1]
  4695b8:	mov	x2, x20
  4695bc:	strb	w0, [x19, #264]
  4695c0:	mov	w1, w21
  4695c4:	mov	x0, x19
  4695c8:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  4695cc:	ldr	x1, [x19, #256]
  4695d0:	add	x0, x1, #0x1
  4695d4:	cmp	x1, #0xff
  4695d8:	b.ne	469600 <_obstack_memory_used@@Base+0x15260>  // b.any
  4695dc:	ldp	x3, x2, [x19, #272]
  4695e0:	strb	wzr, [x19, #255]
  4695e4:	mov	x0, x19
  4695e8:	blr	x3
  4695ec:	ldr	x2, [x19, #320]
  4695f0:	mov	x0, #0x1                   	// #1
  4695f4:	mov	x1, #0x0                   	// #0
  4695f8:	add	x2, x2, x0
  4695fc:	str	x2, [x19, #320]
  469600:	str	x0, [x19, #256]
  469604:	mov	w0, #0x29                  	// #41
  469608:	strb	w0, [x19, x1]
  46960c:	strb	w0, [x19, #264]
  469610:	ldp	x19, x20, [sp, #16]
  469614:	ldr	x21, [sp, #32]
  469618:	ldp	x29, x30, [sp], #48
  46961c:	ret
  469620:	mov	x2, x20
  469624:	mov	w1, w21
  469628:	mov	x0, x19
  46962c:	ldp	x19, x20, [sp, #16]
  469630:	ldr	x21, [sp, #32]
  469634:	ldp	x29, x30, [sp], #48
  469638:	b	468310 <_obstack_memory_used@@Base+0x13f70>
  46963c:	ldp	x3, x2, [x0, #272]
  469640:	strb	wzr, [x0, #255]
  469644:	blr	x3
  469648:	ldr	x2, [x19, #320]
  46964c:	mov	x0, #0x1                   	// #1
  469650:	mov	x1, #0x0                   	// #0
  469654:	add	x2, x2, x0
  469658:	str	x2, [x19, #320]
  46965c:	b	4695ac <_obstack_memory_used@@Base+0x1520c>
  469660:	stp	x29, x30, [sp, #-80]!
  469664:	mov	x29, sp
  469668:	stp	x19, x20, [sp, #16]
  46966c:	mov	x19, x0
  469670:	ldr	x0, [x2, #8]
  469674:	stp	x21, x22, [sp, #32]
  469678:	mov	w22, w1
  46967c:	ldr	x0, [x0]
  469680:	ldrb	w1, [x0]
  469684:	cmp	w1, #0x66
  469688:	b.ne	46981c <_obstack_memory_used@@Base+0x1547c>  // b.any
  46968c:	ldr	x1, [x3]
  469690:	stp	x23, x24, [sp, #48]
  469694:	stp	x25, x26, [sp, #64]
  469698:	mov	x25, #0x0                   	// #0
  46969c:	ldp	x23, x26, [x1, #8]
  4696a0:	ldr	w1, [x26]
  4696a4:	cmp	w1, #0x3c
  4696a8:	b.eq	4698e4 <_obstack_memory_used@@Base+0x15544>  // b.none
  4696ac:	ldr	w21, [x19, #316]
  4696b0:	mov	w1, #0xffffffff            	// #-1
  4696b4:	str	w1, [x19, #316]
  4696b8:	ldrb	w0, [x0, #1]
  4696bc:	cmp	w0, #0x6c
  4696c0:	b.eq	469904 <_obstack_memory_used@@Base+0x15564>  // b.none
  4696c4:	b.hi	469830 <_obstack_memory_used@@Base+0x15490>  // b.pmore
  4696c8:	cmp	w0, #0x4c
  4696cc:	b.eq	4696d8 <_obstack_memory_used@@Base+0x15338>  // b.none
  4696d0:	cmp	w0, #0x52
  4696d4:	b.ne	4697fc <_obstack_memory_used@@Base+0x1545c>  // b.any
  4696d8:	ldr	x1, [x19, #256]
  4696dc:	add	x0, x1, #0x1
  4696e0:	cmp	x1, #0xff
  4696e4:	b.eq	4699c4 <_obstack_memory_used@@Base+0x15624>  // b.none
  4696e8:	str	x0, [x19, #256]
  4696ec:	mov	w0, #0x28                  	// #40
  4696f0:	strb	w0, [x19, x1]
  4696f4:	mov	x2, x26
  4696f8:	strb	w0, [x19, #264]
  4696fc:	mov	w1, w22
  469700:	mov	x0, x19
  469704:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x24c60>
  469708:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  46970c:	add	x20, x20, #0xc10
  469710:	mov	w1, w22
  469714:	mov	x2, x23
  469718:	mov	x0, x19
  46971c:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  469720:	add	x26, x20, #0x3
  469724:	mov	w24, #0x2e                  	// #46
  469728:	ldr	x1, [x19, #256]
  46972c:	b	469754 <_obstack_memory_used@@Base+0x153b4>
  469730:	mov	x0, x1
  469734:	add	x1, x1, #0x1
  469738:	str	x1, [x19, #256]
  46973c:	add	x20, x20, #0x1
  469740:	cmp	x26, x20
  469744:	strb	w24, [x19, x0]
  469748:	strb	w24, [x19, #264]
  46974c:	b.eq	469798 <_obstack_memory_used@@Base+0x153f8>  // b.none
  469750:	ldrb	w24, [x20]
  469754:	cmp	x1, #0xff
  469758:	b.ne	469730 <_obstack_memory_used@@Base+0x15390>  // b.any
  46975c:	ldp	x3, x2, [x19, #272]
  469760:	strb	wzr, [x19, #255]
  469764:	mov	x0, x19
  469768:	add	x20, x20, #0x1
  46976c:	blr	x3
  469770:	ldr	x2, [x19, #320]
  469774:	mov	x0, #0x0                   	// #0
  469778:	mov	x1, #0x1                   	// #1
  46977c:	str	x1, [x19, #256]
  469780:	add	x2, x2, x1
  469784:	str	x2, [x19, #320]
  469788:	strb	w24, [x19, x0]
  46978c:	cmp	x26, x20
  469790:	strb	w24, [x19, #264]
  469794:	b.ne	469750 <_obstack_memory_used@@Base+0x153b0>  // b.any
  469798:	mov	x2, x23
  46979c:	mov	w1, w22
  4697a0:	mov	x0, x19
  4697a4:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  4697a8:	mov	x2, x25
  4697ac:	mov	w1, w22
  4697b0:	mov	x0, x19
  4697b4:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  4697b8:	ldr	x1, [x19, #256]
  4697bc:	add	x0, x1, #0x1
  4697c0:	cmp	x1, #0xff
  4697c4:	b.ne	4697ec <_obstack_memory_used@@Base+0x1544c>  // b.any
  4697c8:	ldp	x3, x2, [x19, #272]
  4697cc:	strb	wzr, [x19, #255]
  4697d0:	mov	x0, x19
  4697d4:	blr	x3
  4697d8:	ldr	x2, [x19, #320]
  4697dc:	mov	x0, #0x1                   	// #1
  4697e0:	mov	x1, #0x0                   	// #0
  4697e4:	add	x2, x2, x0
  4697e8:	str	x2, [x19, #320]
  4697ec:	str	x0, [x19, #256]
  4697f0:	mov	w0, #0x29                  	// #41
  4697f4:	strb	w0, [x19, x1]
  4697f8:	strb	w0, [x19, #264]
  4697fc:	ldp	x23, x24, [sp, #48]
  469800:	mov	w0, #0x1                   	// #1
  469804:	ldp	x25, x26, [sp, #64]
  469808:	str	w21, [x19, #316]
  46980c:	ldp	x19, x20, [sp, #16]
  469810:	ldp	x21, x22, [sp, #32]
  469814:	ldp	x29, x30, [sp], #80
  469818:	ret
  46981c:	mov	w0, #0x0                   	// #0
  469820:	ldp	x19, x20, [sp, #16]
  469824:	ldp	x21, x22, [sp, #32]
  469828:	ldp	x29, x30, [sp], #80
  46982c:	ret
  469830:	cmp	w0, #0x72
  469834:	b.ne	4697fc <_obstack_memory_used@@Base+0x1545c>  // b.any
  469838:	ldr	x1, [x19, #256]
  46983c:	add	x0, x1, #0x1
  469840:	cmp	x1, #0xff
  469844:	b.eq	46999c <_obstack_memory_used@@Base+0x155fc>  // b.none
  469848:	str	x0, [x19, #256]
  46984c:	mov	w0, #0x28                  	// #40
  469850:	strb	w0, [x19, x1]
  469854:	mov	x2, x26
  469858:	strb	w0, [x19, #264]
  46985c:	mov	w1, w22
  469860:	mov	x0, x19
  469864:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  469868:	bl	469568 <_obstack_memory_used@@Base+0x151c8>
  46986c:	add	x20, x20, #0x70
  469870:	mov	w1, w22
  469874:	mov	x2, x23
  469878:	mov	x0, x19
  46987c:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  469880:	add	x22, x20, #0x4
  469884:	mov	w24, #0x2e                  	// #46
  469888:	ldr	x1, [x19, #256]
  46988c:	b	4698b4 <_obstack_memory_used@@Base+0x15514>
  469890:	mov	x0, x1
  469894:	add	x1, x1, #0x1
  469898:	str	x1, [x19, #256]
  46989c:	add	x20, x20, #0x1
  4698a0:	strb	w24, [x19, x0]
  4698a4:	cmp	x20, x22
  4698a8:	strb	w24, [x19, #264]
  4698ac:	b.eq	4697fc <_obstack_memory_used@@Base+0x1545c>  // b.none
  4698b0:	ldrb	w24, [x20]
  4698b4:	cmp	x1, #0xff
  4698b8:	b.ne	469890 <_obstack_memory_used@@Base+0x154f0>  // b.any
  4698bc:	ldp	x3, x2, [x19, #272]
  4698c0:	strb	wzr, [x19, #255]
  4698c4:	mov	x0, x19
  4698c8:	blr	x3
  4698cc:	ldr	x2, [x19, #320]
  4698d0:	mov	x1, #0x1                   	// #1
  4698d4:	mov	x0, #0x0                   	// #0
  4698d8:	add	x2, x2, x1
  4698dc:	str	x2, [x19, #320]
  4698e0:	b	469898 <_obstack_memory_used@@Base+0x154f8>
  4698e4:	ldr	w21, [x19, #316]
  4698e8:	mov	w1, #0xffffffff            	// #-1
  4698ec:	ldr	x25, [x26, #16]
  4698f0:	ldr	x26, [x26, #8]
  4698f4:	str	w1, [x19, #316]
  4698f8:	ldrb	w0, [x0, #1]
  4698fc:	cmp	w0, #0x6c
  469900:	b.ne	4696c4 <_obstack_memory_used@@Base+0x15324>  // b.any
  469904:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x29c60>
  469908:	add	x20, x20, #0x68
  46990c:	add	x25, x20, #0x4
  469910:	mov	w24, #0x28                  	// #40
  469914:	ldr	x1, [x19, #256]
  469918:	b	469940 <_obstack_memory_used@@Base+0x155a0>
  46991c:	mov	x0, x1
  469920:	add	x1, x1, #0x1
  469924:	str	x1, [x19, #256]
  469928:	add	x20, x20, #0x1
  46992c:	cmp	x25, x20
  469930:	strb	w24, [x19, x0]
  469934:	strb	w24, [x19, #264]
  469938:	b.eq	469984 <_obstack_memory_used@@Base+0x155e4>  // b.none
  46993c:	ldrb	w24, [x20]
  469940:	cmp	x1, #0xff
  469944:	b.ne	46991c <_obstack_memory_used@@Base+0x1557c>  // b.any
  469948:	ldp	x3, x2, [x19, #272]
  46994c:	strb	wzr, [x19, #255]
  469950:	mov	x0, x19
  469954:	add	x20, x20, #0x1
  469958:	blr	x3
  46995c:	ldr	x2, [x19, #320]
  469960:	mov	x0, #0x0                   	// #0
  469964:	mov	x1, #0x1                   	// #1
  469968:	str	x1, [x19, #256]
  46996c:	add	x2, x2, x1
  469970:	str	x2, [x19, #320]
  469974:	strb	w24, [x19, x0]
  469978:	cmp	x25, x20
  46997c:	strb	w24, [x19, #264]
  469980:	b.ne	46993c <_obstack_memory_used@@Base+0x1559c>  // b.any
  469984:	mov	x2, x23
  469988:	mov	w1, w22
  46998c:	mov	x0, x19
  469990:	bl	4694b0 <_obstack_memory_used@@Base+0x15110>
  469994:	mov	x2, x26
  469998:	b	4697ac <_obstack_memory_used@@Base+0x1540c>
  46999c:	ldp	x3, x2, [x19, #272]
  4699a0:	strb	wzr, [x19, #255]
  4699a4:	mov	x0, x19
  4699a8:	blr	x3
  4699ac:	ldr	x2, [x19, #320]
  4699b0:	mov	x0, #0x1                   	// #1
  4699b4:	mov	x1, #0x0                   	// #0
  4699b8:	add	x2, x2, x0
  4699bc:	str	x2, [x19, #320]
  4699c0:	b	469848 <_obstack_memory_used@@Base+0x154a8>
  4699c4:	ldp	x3, x2, [x19, #272]
  4699c8:	strb	wzr, [x19, #255]
  4699cc:	mov	x0, x19
  4699d0:	blr	x3
  4699d4:	ldr	x2, [x19, #320]
  4699d8:	mov	x0, #0x1                   	// #1
  4699dc:	mov	x1, #0x0                   	// #0
  4699e0:	add	x2, x2, x0
  4699e4:	str	x2, [x19, #320]
  4699e8:	b	4696e8 <_obstack_memory_used@@Base+0x15348>
  4699ec:	nop
  4699f0:	sub	sp, sp, #0x230
  4699f4:	stp	x29, x30, [sp]
  4699f8:	mov	x29, sp
  4699fc:	stp	x19, x20, [sp, #16]
  469a00:	mov	x19, x0
  469a04:	mov	x20, x1
  469a08:	stp	x21, x22, [sp, #32]
  469a0c:	mov	x21, x2
  469a10:	stp	x23, x24, [sp, #48]
  469a14:	stp	x25, x26, [sp, #64]
  469a18:	str	x27, [sp, #80]
  469a1c:	ldrb	w24, [x0]
  469a20:	cmp	w24, #0x5f
  469a24:	b.eq	469bd0 <_obstack_memory_used@@Base+0x15830>  // b.none
  469a28:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x29c60>
  469a2c:	mov	x0, x19
  469a30:	add	x1, x1, #0x78
  469a34:	mov	x2, #0x8                   	// #8
  469a38:	mov	w23, #0x0                   	// #0
  469a3c:	bl	402830 <strncmp@plt>
  469a40:	cbnz	w0, 469a90 <_obstack_memory_used@@Base+0x156f0>
  469a44:	ldrb	w0, [x19, #8]
  469a48:	mov	w2, #0x5f                  	// #95
  469a4c:	mov	w1, #0x24                  	// #36
  469a50:	cmp	w0, #0x2e
  469a54:	ccmp	w0, w2, #0x4, ne  // ne = any
  469a58:	ccmp	w0, w1, #0x4, ne  // ne = any
  469a5c:	b.ne	469a90 <_obstack_memory_used@@Base+0x156f0>  // b.any
  469a60:	ldrb	w0, [x19, #9]
  469a64:	mov	w1, #0x49                  	// #73
  469a68:	cmp	w0, #0x44
  469a6c:	ccmp	w0, w1, #0x4, ne  // ne = any
  469a70:	b.ne	469a90 <_obstack_memory_used@@Base+0x156f0>  // b.any
  469a74:	ldrb	w1, [x19, #10]
  469a78:	cmp	w1, w2
  469a7c:	b.ne	469a90 <_obstack_memory_used@@Base+0x156f0>  // b.any
  469a80:	cmp	w0, #0x49
  469a84:	cset	w23, ne  // ne = any
  469a88:	add	w23, w23, #0x2
  469a8c:	nop
  469a90:	mov	x0, x19
  469a94:	bl	402680 <strlen@plt>
  469a98:	mov	x3, x0
  469a9c:	mov	w1, #0x11                  	// #17
  469aa0:	add	x0, x19, x0
  469aa4:	stp	x19, x0, [x29, #96]
  469aa8:	lsl	w4, w3, #1
  469aac:	str	w1, [x29, #112]
  469ab0:	cmp	w4, #0x800
  469ab4:	str	x19, [x29, #120]
  469ab8:	mov	w0, #0x0                   	// #0
  469abc:	stp	wzr, w4, [x29, #136]
  469ac0:	stp	wzr, w3, [x29, #152]
  469ac4:	stp	xzr, xzr, [x29, #160]
  469ac8:	str	xzr, [x29, #176]
  469acc:	b.hi	469bac <_obstack_memory_used@@Base+0x1580c>  // b.pmore
  469ad0:	mov	x22, sp
  469ad4:	mov	w27, #0x18                  	// #24
  469ad8:	sbfiz	x3, x3, #3, #32
  469adc:	cmp	w23, #0x1
  469ae0:	add	x3, x3, #0xf
  469ae4:	smsubl	x0, w4, w27, x22
  469ae8:	and	x3, x3, #0xfffffffffffffff0
  469aec:	mov	sp, x0
  469af0:	mov	x25, sp
  469af4:	sub	sp, sp, x3
  469af8:	mov	x0, sp
  469afc:	str	x25, [x29, #128]
  469b00:	str	x0, [x29, #144]
  469b04:	b.eq	469c10 <_obstack_memory_used@@Base+0x15870>  // b.none
  469b08:	sub	w0, w23, #0x2
  469b0c:	cmp	w0, #0x1
  469b10:	b.hi	469c54 <_obstack_memory_used@@Base+0x158b4>  // b.pmore
  469b14:	cmp	w23, #0x2
  469b18:	ldrb	w0, [x19, #11]
  469b1c:	add	x24, x19, #0xb
  469b20:	str	x24, [x29, #120]
  469b24:	cset	w1, ne  // ne = any
  469b28:	cmp	w0, #0x5f
  469b2c:	add	w23, w1, #0x44
  469b30:	b.eq	469be4 <_obstack_memory_used@@Base+0x15844>  // b.none
  469b34:	cmp	w4, #0x0
  469b38:	b.le	469d38 <_obstack_memory_used@@Base+0x15998>
  469b3c:	mov	x0, x24
  469b40:	bl	402680 <strlen@plt>
  469b44:	mov	w1, #0x1                   	// #1
  469b48:	str	wzr, [x25, #4]
  469b4c:	str	w1, [x29, #136]
  469b50:	cmp	w0, #0x0
  469b54:	b.le	469d38 <_obstack_memory_used@@Base+0x15998>
  469b58:	add	x26, x29, #0x60
  469b5c:	str	wzr, [x25]
  469b60:	str	x24, [x25, #8]
  469b64:	str	w0, [x25, #16]
  469b68:	mov	w1, w23
  469b6c:	mov	x2, x25
  469b70:	mov	x3, #0x0                   	// #0
  469b74:	mov	x0, x26
  469b78:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  469b7c:	mov	x19, x0
  469b80:	ldr	x23, [x29, #120]
  469b84:	mov	x0, x23
  469b88:	bl	402680 <strlen@plt>
  469b8c:	add	x1, x23, x0
  469b90:	str	x1, [x29, #120]
  469b94:	ldrb	w0, [x23, x0]
  469b98:	cmp	w0, #0x0
  469b9c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  469ba0:	b.ne	469c74 <_obstack_memory_used@@Base+0x158d4>  // b.any
  469ba4:	mov	sp, x22
  469ba8:	mov	w0, #0x0                   	// #0
  469bac:	mov	sp, x29
  469bb0:	ldp	x29, x30, [sp]
  469bb4:	ldp	x19, x20, [sp, #16]
  469bb8:	ldp	x21, x22, [sp, #32]
  469bbc:	ldp	x23, x24, [sp, #48]
  469bc0:	ldp	x25, x26, [sp, #64]
  469bc4:	ldr	x27, [sp, #80]
  469bc8:	add	sp, sp, #0x230
  469bcc:	ret
  469bd0:	ldrb	w0, [x0, #1]
  469bd4:	mov	w23, #0x1                   	// #1
  469bd8:	cmp	w0, #0x5a
  469bdc:	b.ne	469a28 <_obstack_memory_used@@Base+0x15688>  // b.any
  469be0:	b	469a90 <_obstack_memory_used@@Base+0x156f0>
  469be4:	ldrb	w0, [x19, #12]
  469be8:	cmp	w0, #0x5a
  469bec:	b.ne	469b34 <_obstack_memory_used@@Base+0x15794>  // b.any
  469bf0:	add	x26, x29, #0x60
  469bf4:	add	x19, x19, #0xd
  469bf8:	mov	x0, x26
  469bfc:	mov	w1, #0x0                   	// #0
  469c00:	str	x19, [x29, #120]
  469c04:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  469c08:	mov	x25, x0
  469c0c:	b	469b68 <_obstack_memory_used@@Base+0x157c8>
  469c10:	cmp	w24, #0x5f
  469c14:	b.ne	469ba4 <_obstack_memory_used@@Base+0x15804>  // b.any
  469c18:	ldrb	w0, [x19, #1]
  469c1c:	cmp	w0, #0x5a
  469c20:	b.ne	469ba4 <_obstack_memory_used@@Base+0x15804>  // b.any
  469c24:	add	x26, x29, #0x60
  469c28:	add	x19, x19, #0x2
  469c2c:	mov	w1, w23
  469c30:	mov	x0, x26
  469c34:	str	x19, [x29, #120]
  469c38:	bl	461e88 <_obstack_memory_used@@Base+0xdae8>
  469c3c:	ldr	w3, [x29, #112]
  469c40:	mov	x19, x0
  469c44:	tbnz	w3, #0, 469d44 <_obstack_memory_used@@Base+0x159a4>
  469c48:	ldr	x0, [x29, #120]
  469c4c:	ldrb	w0, [x0]
  469c50:	b	469b98 <_obstack_memory_used@@Base+0x157f8>
  469c54:	add	x0, x29, #0x60
  469c58:	bl	462bd0 <_obstack_memory_used@@Base+0xe830>
  469c5c:	ldr	x3, [x29, #120]
  469c60:	mov	x19, x0
  469c64:	ldrb	w0, [x3]
  469c68:	cmp	w0, #0x0
  469c6c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  469c70:	b.eq	469ba4 <_obstack_memory_used@@Base+0x15804>  // b.none
  469c74:	add	x2, x29, #0x208
  469c78:	add	x23, x29, #0xb8
  469c7c:	mov	x0, x23
  469c80:	mov	x1, x19
  469c84:	str	xzr, [x29, #440]
  469c88:	stp	xzr, xzr, [x2]
  469c8c:	stp	xzr, xzr, [x2, #16]
  469c90:	strb	wzr, [x29, #448]
  469c94:	stp	x20, x21, [x29, #456]
  469c98:	stp	xzr, xzr, [x29, #472]
  469c9c:	stp	xzr, xzr, [x29, #488]
  469ca0:	stp	xzr, xzr, [x29, #504]
  469ca4:	bl	4601a0 <_obstack_memory_used@@Base+0xbe00>
  469ca8:	ldr	w0, [x29, #492]
  469cac:	cmp	w0, #0x7ff
  469cb0:	b.gt	469cb8 <_obstack_memory_used@@Base+0x15918>
  469cb4:	str	wzr, [x29, #492]
  469cb8:	ldr	w3, [x29, #532]
  469cbc:	mov	w4, #0x1                   	// #1
  469cc0:	ldr	w6, [x29, #548]
  469cc4:	mov	x20, sp
  469cc8:	cmp	w3, #0x0
  469ccc:	mov	x2, x19
  469cd0:	csel	w5, w3, w4, gt
  469cd4:	mov	x0, x23
  469cd8:	mov	w1, #0x11                  	// #17
  469cdc:	str	xzr, [x29, #552]
  469ce0:	mul	w3, w3, w6
  469ce4:	sub	sp, sp, w5, sxtw #4
  469ce8:	str	w3, [x29, #548]
  469cec:	mov	x5, sp
  469cf0:	cmp	w3, #0x0
  469cf4:	str	x5, [x29, #520]
  469cf8:	csel	w3, w3, w4, gt
  469cfc:	sub	sp, sp, w3, sxtw #4
  469d00:	mov	x3, sp
  469d04:	str	x3, [x29, #536]
  469d08:	bl	468310 <_obstack_memory_used@@Base+0x13f70>
  469d0c:	mov	sp, x20
  469d10:	ldr	x1, [x29, #440]
  469d14:	mov	x0, x23
  469d18:	ldp	x3, x2, [x29, #456]
  469d1c:	strb	wzr, [x23, x1]
  469d20:	blr	x3
  469d24:	ldr	w0, [x29, #488]
  469d28:	mov	sp, x22
  469d2c:	cmp	w0, #0x0
  469d30:	cset	w0, eq  // eq = none
  469d34:	b	469bac <_obstack_memory_used@@Base+0x1580c>
  469d38:	add	x26, x29, #0x60
  469d3c:	mov	x25, #0x0                   	// #0
  469d40:	b	469b68 <_obstack_memory_used@@Base+0x157c8>
  469d44:	ldr	x6, [x29, #120]
  469d48:	ldrb	w0, [x6]
  469d4c:	cmp	w0, #0x2e
  469d50:	b.ne	469b98 <_obstack_memory_used@@Base+0x157f8>  // b.any
  469d54:	nop
  469d58:	ldrb	w0, [x6, #1]
  469d5c:	sub	w1, w0, #0x61
  469d60:	cmp	w0, #0x5f
  469d64:	and	w1, w1, #0xff
  469d68:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  469d6c:	b.ls	469e4c <_obstack_memory_used@@Base+0x15aac>  // b.plast
  469d70:	sub	w0, w0, #0x30
  469d74:	and	w0, w0, #0xff
  469d78:	cmp	w0, #0x9
  469d7c:	ldrb	w0, [x6]
  469d80:	b.hi	469b98 <_obstack_memory_used@@Base+0x157f8>  // b.pmore
  469d84:	mov	x3, x6
  469d88:	cmp	w0, #0x2e
  469d8c:	b.ne	469ddc <_obstack_memory_used@@Base+0x15a3c>  // b.any
  469d90:	ldrb	w4, [x3, #1]
  469d94:	sub	w4, w4, #0x30
  469d98:	and	w4, w4, #0xff
  469d9c:	cmp	w4, #0x9
  469da0:	b.hi	469ddc <_obstack_memory_used@@Base+0x15a3c>  // b.pmore
  469da4:	ldrb	w4, [x3, #2]
  469da8:	add	x3, x3, #0x2
  469dac:	sub	w5, w4, #0x30
  469db0:	and	w5, w5, #0xff
  469db4:	cmp	w5, #0x9
  469db8:	b.hi	469dd4 <_obstack_memory_used@@Base+0x15a34>  // b.pmore
  469dbc:	nop
  469dc0:	ldrb	w4, [x3, #1]!
  469dc4:	sub	w5, w4, #0x30
  469dc8:	and	w5, w5, #0xff
  469dcc:	cmp	w5, #0x9
  469dd0:	b.ls	469dc0 <_obstack_memory_used@@Base+0x15a20>  // b.plast
  469dd4:	cmp	w4, #0x2e
  469dd8:	b.eq	469d90 <_obstack_memory_used@@Base+0x159f0>  // b.none
  469ddc:	ldp	w0, w1, [x29, #136]
  469de0:	str	x3, [x29, #120]
  469de4:	sub	x4, x3, x6
  469de8:	cmp	w0, w1
  469dec:	b.ge	469e44 <_obstack_memory_used@@Base+0x15aa4>  // b.tcont
  469df0:	ldr	x2, [x29, #128]
  469df4:	smull	x1, w0, w27
  469df8:	add	w0, w0, #0x1
  469dfc:	cmp	w4, #0x0
  469e00:	add	x3, x2, x1
  469e04:	str	wzr, [x3, #4]
  469e08:	str	w0, [x29, #136]
  469e0c:	b.le	469e44 <_obstack_memory_used@@Base+0x15aa4>
  469e10:	str	xzr, [x2, x1]
  469e14:	str	x6, [x3, #8]
  469e18:	str	w4, [x3, #16]
  469e1c:	mov	x2, x19
  469e20:	mov	x0, x26
  469e24:	mov	w1, #0x4e                  	// #78
  469e28:	bl	4600b0 <_obstack_memory_used@@Base+0xbd10>
  469e2c:	ldr	x6, [x29, #120]
  469e30:	mov	x19, x0
  469e34:	ldrb	w0, [x6]
  469e38:	cmp	w0, #0x2e
  469e3c:	b.eq	469d58 <_obstack_memory_used@@Base+0x159b8>  // b.none
  469e40:	b	469b98 <_obstack_memory_used@@Base+0x157f8>
  469e44:	mov	x3, #0x0                   	// #0
  469e48:	b	469e1c <_obstack_memory_used@@Base+0x15a7c>
  469e4c:	ldrb	w0, [x6, #2]
  469e50:	add	x3, x6, #0x2
  469e54:	b	469e5c <_obstack_memory_used@@Base+0x15abc>
  469e58:	ldrb	w0, [x3, #1]!
  469e5c:	sub	w1, w0, #0x61
  469e60:	cmp	w0, #0x5f
  469e64:	and	w1, w1, #0xff
  469e68:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  469e6c:	b.ls	469e58 <_obstack_memory_used@@Base+0x15ab8>  // b.plast
  469e70:	b	469d88 <_obstack_memory_used@@Base+0x159e8>
  469e74:	nop
  469e78:	stp	x29, x30, [sp, #-96]!
  469e7c:	mov	x29, sp
  469e80:	stp	x21, x22, [sp, #32]
  469e84:	mov	x21, x3
  469e88:	cbz	x0, 469f58 <_obstack_memory_used@@Base+0x15bb8>
  469e8c:	stp	x19, x20, [sp, #16]
  469e90:	cmp	x1, #0x0
  469e94:	mov	x19, x1
  469e98:	mov	x20, x2
  469e9c:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  469ea0:	b.eq	469f54 <_obstack_memory_used@@Base+0x15bb4>  // b.none
  469ea4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xbc60>
  469ea8:	add	x2, sp, #0x40
  469eac:	add	x1, x1, #0xcb8
  469eb0:	stp	xzr, xzr, [sp, #64]
  469eb4:	str	xzr, [sp, #80]
  469eb8:	str	wzr, [sp, #88]
  469ebc:	bl	4699f0 <_obstack_memory_used@@Base+0x15650>
  469ec0:	cbz	w0, 469fac <_obstack_memory_used@@Base+0x15c0c>
  469ec4:	ldr	w0, [sp, #88]
  469ec8:	str	x23, [sp, #48]
  469ecc:	ldr	x22, [sp, #64]
  469ed0:	cbnz	w0, 469f30 <_obstack_memory_used@@Base+0x15b90>
  469ed4:	ldr	x23, [sp, #80]
  469ed8:	cbz	x22, 469fd0 <_obstack_memory_used@@Base+0x15c30>
  469edc:	cbz	x19, 469fa0 <_obstack_memory_used@@Base+0x15c00>
  469ee0:	mov	x0, x22
  469ee4:	bl	402680 <strlen@plt>
  469ee8:	ldr	x1, [x20]
  469eec:	cmp	x0, x1
  469ef0:	b.cs	469f78 <_obstack_memory_used@@Base+0x15bd8>  // b.hs, b.nlast
  469ef4:	add	x2, x0, #0x1
  469ef8:	mov	x1, x22
  469efc:	mov	x0, x19
  469f00:	bl	402620 <memcpy@plt>
  469f04:	mov	x0, x22
  469f08:	mov	x22, x19
  469f0c:	bl	402a90 <free@plt>
  469f10:	cbz	x21, 469f88 <_obstack_memory_used@@Base+0x15be8>
  469f14:	ldp	x19, x20, [sp, #16]
  469f18:	ldr	x23, [sp, #48]
  469f1c:	str	wzr, [x21]
  469f20:	mov	x0, x22
  469f24:	ldp	x21, x22, [sp, #32]
  469f28:	ldp	x29, x30, [sp], #96
  469f2c:	ret
  469f30:	mov	x23, #0x1                   	// #1
  469f34:	cbnz	x22, 469edc <_obstack_memory_used@@Base+0x15b3c>
  469f38:	cbz	x21, 469ff4 <_obstack_memory_used@@Base+0x15c54>
  469f3c:	mov	w0, #0xffffffff            	// #-1
  469f40:	mov	x22, #0x0                   	// #0
  469f44:	ldp	x19, x20, [sp, #16]
  469f48:	ldr	x23, [sp, #48]
  469f4c:	str	w0, [x21]
  469f50:	b	469f20 <_obstack_memory_used@@Base+0x15b80>
  469f54:	ldp	x19, x20, [sp, #16]
  469f58:	cbz	x21, 469fbc <_obstack_memory_used@@Base+0x15c1c>
  469f5c:	mov	w0, #0xfffffffd            	// #-3
  469f60:	str	w0, [x21]
  469f64:	mov	x22, #0x0                   	// #0
  469f68:	mov	x0, x22
  469f6c:	ldp	x21, x22, [sp, #32]
  469f70:	ldp	x29, x30, [sp], #96
  469f74:	ret
  469f78:	mov	x0, x19
  469f7c:	bl	402a90 <free@plt>
  469f80:	str	x23, [x20]
  469f84:	cbnz	x21, 469f14 <_obstack_memory_used@@Base+0x15b74>
  469f88:	mov	x0, x22
  469f8c:	ldp	x19, x20, [sp, #16]
  469f90:	ldp	x21, x22, [sp, #32]
  469f94:	ldr	x23, [sp, #48]
  469f98:	ldp	x29, x30, [sp], #96
  469f9c:	ret
  469fa0:	cbz	x20, 469f10 <_obstack_memory_used@@Base+0x15b70>
  469fa4:	str	x23, [x20]
  469fa8:	b	469f84 <_obstack_memory_used@@Base+0x15be4>
  469fac:	ldr	x0, [sp, #64]
  469fb0:	bl	402a90 <free@plt>
  469fb4:	cbnz	x21, 469fe0 <_obstack_memory_used@@Base+0x15c40>
  469fb8:	ldp	x19, x20, [sp, #16]
  469fbc:	mov	x22, #0x0                   	// #0
  469fc0:	mov	x0, x22
  469fc4:	ldp	x21, x22, [sp, #32]
  469fc8:	ldp	x29, x30, [sp], #96
  469fcc:	ret
  469fd0:	cbz	x21, 469ff4 <_obstack_memory_used@@Base+0x15c54>
  469fd4:	cmp	x23, #0x1
  469fd8:	b.eq	469f3c <_obstack_memory_used@@Base+0x15b9c>  // b.none
  469fdc:	ldr	x23, [sp, #48]
  469fe0:	mov	w0, #0xfffffffe            	// #-2
  469fe4:	mov	x22, #0x0                   	// #0
  469fe8:	ldp	x19, x20, [sp, #16]
  469fec:	str	w0, [x21]
  469ff0:	b	469f20 <_obstack_memory_used@@Base+0x15b80>
  469ff4:	mov	x22, #0x0                   	// #0
  469ff8:	ldp	x19, x20, [sp, #16]
  469ffc:	ldr	x23, [sp, #48]
  46a000:	b	469fc0 <_obstack_memory_used@@Base+0x15c20>
  46a004:	nop
  46a008:	cmp	x0, #0x0
  46a00c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  46a010:	b.eq	46a034 <_obstack_memory_used@@Base+0x15c94>  // b.none
  46a014:	stp	x29, x30, [sp, #-16]!
  46a018:	mov	x29, sp
  46a01c:	bl	4699f0 <_obstack_memory_used@@Base+0x15650>
  46a020:	cmp	w0, #0x0
  46a024:	ldp	x29, x30, [sp], #16
  46a028:	mov	w0, #0xfffffffe            	// #-2
  46a02c:	csel	w0, wzr, w0, ne  // ne = any
  46a030:	ret
  46a034:	mov	w0, #0xfffffffd            	// #-3
  46a038:	ret
  46a03c:	nop
  46a040:	stp	x29, x30, [sp, #-16]!
  46a044:	mov	x29, sp
  46a048:	bl	45a130 <_obstack_memory_used@@Base+0x5d90>
  46a04c:	ldr	x0, [x0]
  46a050:	cbz	x0, 46a064 <_obstack_memory_used@@Base+0x15cc4>
  46a054:	ldr	x1, [x0, #80]
  46a058:	ldr	x0, [x0]
  46a05c:	tbz	w1, #0, 46a064 <_obstack_memory_used@@Base+0x15cc4>
  46a060:	ldur	x0, [x0, #-112]
  46a064:	ldp	x29, x30, [sp], #16
  46a068:	ret
  46a06c:	nop
  46a070:	and	w5, w0, #0xff
  46a074:	cmp	w5, #0x50
  46a078:	b.eq	46a190 <_obstack_memory_used@@Base+0x15df0>  // b.none
  46a07c:	and	w4, w5, #0xf
  46a080:	cmp	w4, #0x4
  46a084:	b.eq	46a0a0 <_obstack_memory_used@@Base+0x15d00>  // b.none
  46a088:	b.ls	46a0b4 <_obstack_memory_used@@Base+0x15d14>  // b.plast
  46a08c:	cmp	w4, #0xb
  46a090:	b.eq	46a1b4 <_obstack_memory_used@@Base+0x15e14>  // b.none
  46a094:	b.ls	46a110 <_obstack_memory_used@@Base+0x15d70>  // b.plast
  46a098:	cmp	w4, #0xc
  46a09c:	b.ne	46a1c4 <_obstack_memory_used@@Base+0x15e24>  // b.any
  46a0a0:	mov	x0, x2
  46a0a4:	ldr	x4, [x0], #8
  46a0a8:	cbnz	x4, 46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a0ac:	str	x4, [x3]
  46a0b0:	ret
  46a0b4:	cmp	w4, #0x2
  46a0b8:	b.eq	46a1a4 <_obstack_memory_used@@Base+0x15e04>  // b.none
  46a0bc:	b.ls	46a0d8 <_obstack_memory_used@@Base+0x15d38>  // b.plast
  46a0c0:	cmp	w4, #0x3
  46a0c4:	b.ne	46a1c4 <_obstack_memory_used@@Base+0x15e24>  // b.any
  46a0c8:	mov	x0, x2
  46a0cc:	ldr	w4, [x0], #4
  46a0d0:	cbz	x4, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a0d4:	b	46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a0d8:	cbz	w4, 46a0a0 <_obstack_memory_used@@Base+0x15d00>
  46a0dc:	cmp	w4, #0x1
  46a0e0:	b.ne	46a1c4 <_obstack_memory_used@@Base+0x15e24>  // b.any
  46a0e4:	mov	x0, x2
  46a0e8:	mov	x4, #0x0                   	// #0
  46a0ec:	mov	w7, #0x0                   	// #0
  46a0f0:	ldrb	w8, [x0], #1
  46a0f4:	and	x6, x8, #0x7f
  46a0f8:	lsl	x6, x6, x7
  46a0fc:	add	w7, w7, #0x7
  46a100:	orr	x4, x4, x6
  46a104:	tbnz	w8, #7, 46a0f0 <_obstack_memory_used@@Base+0x15d50>
  46a108:	cbz	x4, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a10c:	b	46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a110:	cmp	w4, #0x9
  46a114:	b.eq	46a130 <_obstack_memory_used@@Base+0x15d90>  // b.none
  46a118:	cmp	w4, #0xa
  46a11c:	b.ne	46a1c4 <_obstack_memory_used@@Base+0x15e24>  // b.any
  46a120:	mov	x0, x2
  46a124:	ldrsh	x4, [x0], #2
  46a128:	cbz	x4, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a12c:	b	46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a130:	mov	x0, x2
  46a134:	mov	x4, #0x0                   	// #0
  46a138:	mov	w7, #0x0                   	// #0
  46a13c:	ldrb	w8, [x0], #1
  46a140:	and	x6, x8, #0x7f
  46a144:	lsl	x6, x6, x7
  46a148:	add	w7, w7, #0x7
  46a14c:	orr	x4, x4, x6
  46a150:	tbnz	w8, #7, 46a13c <_obstack_memory_used@@Base+0x15d9c>
  46a154:	cmp	w7, #0x3f
  46a158:	b.hi	46a0a8 <_obstack_memory_used@@Base+0x15d08>  // b.pmore
  46a15c:	tbz	w8, #6, 46a0a8 <_obstack_memory_used@@Base+0x15d08>
  46a160:	mov	x6, #0xffffffffffffffff    	// #-1
  46a164:	lsl	x7, x6, x7
  46a168:	orr	x4, x4, x7
  46a16c:	nop
  46a170:	and	w6, w5, #0x70
  46a174:	cmp	w6, #0x10
  46a178:	csel	x1, x2, x1, eq  // eq = none
  46a17c:	add	x4, x4, x1
  46a180:	tbz	w5, #7, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a184:	ldr	x4, [x4]
  46a188:	str	x4, [x3]
  46a18c:	ret
  46a190:	add	x0, x2, #0x7
  46a194:	and	x0, x0, #0xfffffffffffffff8
  46a198:	ldr	x4, [x0], #8
  46a19c:	str	x4, [x3]
  46a1a0:	ret
  46a1a4:	mov	x0, x2
  46a1a8:	ldrh	w4, [x0], #2
  46a1ac:	cbz	x4, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a1b0:	b	46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a1b4:	mov	x0, x2
  46a1b8:	ldrsw	x4, [x0], #4
  46a1bc:	cbz	x4, 46a0ac <_obstack_memory_used@@Base+0x15d0c>
  46a1c0:	b	46a170 <_obstack_memory_used@@Base+0x15dd0>
  46a1c4:	stp	x29, x30, [sp, #-16]!
  46a1c8:	mov	x29, sp
  46a1cc:	bl	402990 <abort@plt>
  46a1d0:	and	w0, w0, #0xff
  46a1d4:	cmp	w0, #0xff
  46a1d8:	b.eq	46a224 <_obstack_memory_used@@Base+0x15e84>  // b.none
  46a1dc:	and	w2, w0, #0x70
  46a1e0:	cmp	w2, #0x30
  46a1e4:	b.eq	46a23c <_obstack_memory_used@@Base+0x15e9c>  // b.none
  46a1e8:	b.hi	46a1fc <_obstack_memory_used@@Base+0x15e5c>  // b.pmore
  46a1ec:	cmp	w2, #0x20
  46a1f0:	b.ne	46a20c <_obstack_memory_used@@Base+0x15e6c>  // b.any
  46a1f4:	ldr	x0, [x1, #808]
  46a1f8:	ret
  46a1fc:	cmp	w2, #0x40
  46a200:	b.ne	46a22c <_obstack_memory_used@@Base+0x15e8c>  // b.any
  46a204:	ldr	x0, [x1, #824]
  46a208:	ret
  46a20c:	b.hi	46a218 <_obstack_memory_used@@Base+0x15e78>  // b.pmore
  46a210:	tst	w0, #0x60
  46a214:	b.eq	46a224 <_obstack_memory_used@@Base+0x15e84>  // b.none
  46a218:	stp	x29, x30, [sp, #-16]!
  46a21c:	mov	x29, sp
  46a220:	bl	402990 <abort@plt>
  46a224:	mov	x0, #0x0                   	// #0
  46a228:	ret
  46a22c:	cmp	w2, #0x50
  46a230:	mov	x0, #0x0                   	// #0
  46a234:	b.ne	46a218 <_obstack_memory_used@@Base+0x15e78>  // b.any
  46a238:	ret
  46a23c:	ldr	x0, [x1, #816]
  46a240:	ret
  46a244:	nop
  46a248:	str	xzr, [x3, #1568]
  46a24c:	cmp	x0, x1
  46a250:	b.cs	46a9e0 <_obstack_memory_used@@Base+0x16640>  // b.hs, b.nlast
  46a254:	stp	x29, x30, [sp, #-112]!
  46a258:	mov	x29, sp
  46a25c:	stp	x21, x22, [sp, #32]
  46a260:	mov	x21, x2
  46a264:	mov	x22, x1
  46a268:	stp	x19, x20, [sp, #16]
  46a26c:	mov	x20, x3
  46a270:	ldr	x2, [x21, #792]
  46a274:	stp	x23, x24, [sp, #48]
  46a278:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  46a27c:	ldr	x5, [x21, #832]
  46a280:	stp	x25, x26, [sp, #64]
  46a284:	add	x23, x23, #0xbfc
  46a288:	ldr	x1, [x20, #1608]
  46a28c:	stp	x27, x28, [sp, #80]
  46a290:	add	x5, x2, x5, lsr #63
  46a294:	add	x27, x29, #0x68
  46a298:	cmp	x1, x5
  46a29c:	mov	x25, #0x0                   	// #0
  46a2a0:	mov	w24, #0x1                   	// #1
  46a2a4:	mov	w26, #0x5                   	// #5
  46a2a8:	b.cs	46a378 <_obstack_memory_used@@Base+0x15fd8>  // b.hs, b.nlast
  46a2ac:	nop
  46a2b0:	mov	x19, x0
  46a2b4:	ldrb	w4, [x19], #1
  46a2b8:	and	w5, w4, #0xc0
  46a2bc:	cmp	w5, #0x40
  46a2c0:	b.eq	46a874 <_obstack_memory_used@@Base+0x164d4>  // b.none
  46a2c4:	cmp	w5, #0x80
  46a2c8:	b.eq	46a898 <_obstack_memory_used@@Base+0x164f8>  // b.none
  46a2cc:	cmp	w5, #0xc0
  46a2d0:	b.eq	46a888 <_obstack_memory_used@@Base+0x164e8>  // b.none
  46a2d4:	cmp	w4, #0x2f
  46a2d8:	b.hi	46a9f0 <_obstack_memory_used@@Base+0x16650>  // b.pmore
  46a2dc:	ldrh	w2, [x23, w4, uxtw #1]
  46a2e0:	adr	x3, 46a2ec <_obstack_memory_used@@Base+0x15f4c>
  46a2e4:	add	x2, x3, w2, sxth #2
  46a2e8:	br	x2
  46a2ec:	mov	x1, #0x0                   	// #0
  46a2f0:	mov	w0, #0x0                   	// #0
  46a2f4:	ldrb	w3, [x19], #1
  46a2f8:	and	x2, x3, #0x7f
  46a2fc:	lsl	x2, x2, x0
  46a300:	add	w0, w0, #0x7
  46a304:	orr	x1, x1, x2
  46a308:	tbnz	w3, #7, 46a2f4 <_obstack_memory_used@@Base+0x15f54>
  46a30c:	mov	x4, #0x0                   	// #0
  46a310:	mov	w2, #0x0                   	// #0
  46a314:	nop
  46a318:	ldrb	w3, [x19], #1
  46a31c:	and	x0, x3, #0x7f
  46a320:	lsl	x0, x0, x2
  46a324:	add	w2, w2, #0x7
  46a328:	orr	x4, x4, x0
  46a32c:	tbnz	w3, #7, 46a318 <_obstack_memory_used@@Base+0x15f78>
  46a330:	ldr	x0, [x20, #1624]
  46a334:	cmp	x1, #0x61
  46a338:	mul	x4, x4, x0
  46a33c:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a340:	lsl	x1, x1, #4
  46a344:	neg	x4, x4
  46a348:	add	x0, x20, x1
  46a34c:	str	w24, [x0, #8]
  46a350:	str	x4, [x20, x1]
  46a354:	cmp	x22, x19
  46a358:	b.ls	46a378 <_obstack_memory_used@@Base+0x15fd8>  // b.plast
  46a35c:	ldr	x2, [x21, #792]
  46a360:	mov	x0, x19
  46a364:	ldr	x5, [x21, #832]
  46a368:	ldr	x1, [x20, #1608]
  46a36c:	add	x5, x2, x5, lsr #63
  46a370:	cmp	x1, x5
  46a374:	b.cc	46a2b0 <_obstack_memory_used@@Base+0x15f10>  // b.lo, b.ul, b.last
  46a378:	mov	sp, x29
  46a37c:	ldp	x19, x20, [sp, #16]
  46a380:	ldp	x21, x22, [sp, #32]
  46a384:	ldp	x23, x24, [sp, #48]
  46a388:	ldp	x25, x26, [sp, #64]
  46a38c:	ldp	x27, x28, [sp, #80]
  46a390:	ldp	x29, x30, [sp], #112
  46a394:	ret
  46a398:	mov	x1, #0x0                   	// #0
  46a39c:	mov	w0, #0x0                   	// #0
  46a3a0:	ldrb	w3, [x19], #1
  46a3a4:	and	x2, x3, #0x7f
  46a3a8:	lsl	x2, x2, x0
  46a3ac:	add	w0, w0, #0x7
  46a3b0:	orr	x1, x1, x2
  46a3b4:	tbnz	w3, #7, 46a3a0 <_obstack_memory_used@@Base+0x16000>
  46a3b8:	str	x1, [x21, #848]
  46a3bc:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a3c0:	mov	x1, #0x0                   	// #0
  46a3c4:	mov	w0, #0x0                   	// #0
  46a3c8:	ldrb	w3, [x19], #1
  46a3cc:	and	x2, x3, #0x7f
  46a3d0:	lsl	x2, x2, x0
  46a3d4:	add	w0, w0, #0x7
  46a3d8:	orr	x1, x1, x2
  46a3dc:	tbnz	w3, #7, 46a3c8 <_obstack_memory_used@@Base+0x16028>
  46a3e0:	cmp	x1, #0x61
  46a3e4:	b.hi	46a3f8 <_obstack_memory_used@@Base+0x16058>  // b.pmore
  46a3e8:	lsl	x1, x1, #4
  46a3ec:	add	x0, x20, x1
  46a3f0:	str	w26, [x0, #8]
  46a3f4:	str	x19, [x20, x1]
  46a3f8:	mov	x3, #0x0                   	// #0
  46a3fc:	mov	w1, #0x0                   	// #0
  46a400:	ldrb	w2, [x19], #1
  46a404:	and	x0, x2, #0x7f
  46a408:	lsl	x0, x0, x1
  46a40c:	add	w1, w1, #0x7
  46a410:	orr	x3, x3, x0
  46a414:	tbnz	w2, #7, 46a400 <_obstack_memory_used@@Base+0x16060>
  46a418:	add	x19, x19, x3
  46a41c:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a420:	mov	x1, #0x0                   	// #0
  46a424:	mov	w0, #0x0                   	// #0
  46a428:	ldrb	w3, [x19], #1
  46a42c:	and	x2, x3, #0x7f
  46a430:	lsl	x2, x2, x0
  46a434:	add	w0, w0, #0x7
  46a438:	orr	x1, x1, x2
  46a43c:	tbnz	w3, #7, 46a428 <_obstack_memory_used@@Base+0x16088>
  46a440:	mov	x4, #0x0                   	// #0
  46a444:	mov	w2, #0x0                   	// #0
  46a448:	ldrb	w3, [x19], #1
  46a44c:	and	x0, x3, #0x7f
  46a450:	lsl	x0, x0, x2
  46a454:	add	w2, w2, #0x7
  46a458:	orr	x4, x4, x0
  46a45c:	tbnz	w3, #7, 46a448 <_obstack_memory_used@@Base+0x160a8>
  46a460:	cmp	w2, #0x3f
  46a464:	b.hi	46a47c <_obstack_memory_used@@Base+0x160dc>  // b.pmore
  46a468:	mov	x0, #0xffffffffffffffff    	// #-1
  46a46c:	tst	x3, #0x40
  46a470:	lsl	x0, x0, x2
  46a474:	orr	x0, x4, x0
  46a478:	csel	x4, x0, x4, ne  // ne = any
  46a47c:	ldr	x0, [x20, #1624]
  46a480:	cmp	x1, #0x61
  46a484:	mul	x4, x4, x0
  46a488:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a48c:	lsl	x1, x1, #4
  46a490:	mov	w2, #0x4                   	// #4
  46a494:	add	x0, x20, x1
  46a498:	str	w2, [x0, #8]
  46a49c:	str	x4, [x20, x1]
  46a4a0:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a4a4:	mov	x1, #0x0                   	// #0
  46a4a8:	mov	w0, #0x0                   	// #0
  46a4ac:	ldrb	w3, [x19], #1
  46a4b0:	and	x2, x3, #0x7f
  46a4b4:	lsl	x2, x2, x0
  46a4b8:	add	w0, w0, #0x7
  46a4bc:	orr	x1, x1, x2
  46a4c0:	tbnz	w3, #7, 46a4ac <_obstack_memory_used@@Base+0x1610c>
  46a4c4:	mov	x4, #0x0                   	// #0
  46a4c8:	mov	w2, #0x0                   	// #0
  46a4cc:	nop
  46a4d0:	ldrb	w3, [x19], #1
  46a4d4:	and	x0, x3, #0x7f
  46a4d8:	lsl	x0, x0, x2
  46a4dc:	add	w2, w2, #0x7
  46a4e0:	orr	x4, x4, x0
  46a4e4:	tbnz	w3, #7, 46a4d0 <_obstack_memory_used@@Base+0x16130>
  46a4e8:	b	46a47c <_obstack_memory_used@@Base+0x160dc>
  46a4ec:	mov	x1, #0x0                   	// #0
  46a4f0:	mov	w0, #0x0                   	// #0
  46a4f4:	ldrb	w3, [x19], #1
  46a4f8:	and	x2, x3, #0x7f
  46a4fc:	lsl	x2, x2, x0
  46a500:	add	w0, w0, #0x7
  46a504:	orr	x1, x1, x2
  46a508:	tbnz	w3, #7, 46a4f4 <_obstack_memory_used@@Base+0x16154>
  46a50c:	cmp	w0, #0x3f
  46a510:	b.hi	46a528 <_obstack_memory_used@@Base+0x16188>  // b.pmore
  46a514:	mov	x2, #0xffffffffffffffff    	// #-1
  46a518:	tst	x3, #0x40
  46a51c:	lsl	x0, x2, x0
  46a520:	orr	x0, x1, x0
  46a524:	csel	x1, x0, x1, ne  // ne = any
  46a528:	ldr	x0, [x20, #1624]
  46a52c:	mul	x1, x0, x1
  46a530:	str	x1, [x20, #1576]
  46a534:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a538:	mov	x1, #0x0                   	// #0
  46a53c:	mov	w0, #0x0                   	// #0
  46a540:	ldrb	w3, [x19], #1
  46a544:	and	x2, x3, #0x7f
  46a548:	lsl	x2, x2, x0
  46a54c:	add	w0, w0, #0x7
  46a550:	orr	x1, x1, x2
  46a554:	tbnz	w3, #7, 46a540 <_obstack_memory_used@@Base+0x161a0>
  46a558:	mov	x3, #0x0                   	// #0
  46a55c:	mov	w2, #0x0                   	// #0
  46a560:	str	x1, [x20, #1584]
  46a564:	nop
  46a568:	ldrb	w1, [x19], #1
  46a56c:	and	x0, x1, #0x7f
  46a570:	lsl	x0, x0, x2
  46a574:	add	w2, w2, #0x7
  46a578:	orr	x3, x3, x0
  46a57c:	tbnz	w1, #7, 46a568 <_obstack_memory_used@@Base+0x161c8>
  46a580:	cmp	w2, #0x3f
  46a584:	b.hi	46a59c <_obstack_memory_used@@Base+0x161fc>  // b.pmore
  46a588:	mov	x0, #0xffffffffffffffff    	// #-1
  46a58c:	tst	x1, #0x40
  46a590:	lsl	x0, x0, x2
  46a594:	orr	x0, x3, x0
  46a598:	csel	x3, x0, x3, ne  // ne = any
  46a59c:	ldr	x0, [x20, #1624]
  46a5a0:	str	w24, [x20, #1600]
  46a5a4:	mul	x3, x0, x3
  46a5a8:	str	x3, [x20, #1576]
  46a5ac:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a5b0:	mov	x1, #0x0                   	// #0
  46a5b4:	mov	w0, #0x0                   	// #0
  46a5b8:	ldrb	w3, [x19], #1
  46a5bc:	and	x2, x3, #0x7f
  46a5c0:	lsl	x2, x2, x0
  46a5c4:	add	w0, w0, #0x7
  46a5c8:	orr	x1, x1, x2
  46a5cc:	tbnz	w3, #7, 46a5b8 <_obstack_memory_used@@Base+0x16218>
  46a5d0:	mov	x4, #0x0                   	// #0
  46a5d4:	mov	w2, #0x0                   	// #0
  46a5d8:	ldrb	w3, [x19], #1
  46a5dc:	and	x0, x3, #0x7f
  46a5e0:	lsl	x0, x0, x2
  46a5e4:	add	w2, w2, #0x7
  46a5e8:	orr	x4, x4, x0
  46a5ec:	tbnz	w3, #7, 46a5d8 <_obstack_memory_used@@Base+0x16238>
  46a5f0:	cmp	w2, #0x3f
  46a5f4:	b.hi	46a60c <_obstack_memory_used@@Base+0x1626c>  // b.pmore
  46a5f8:	mov	x0, #0xffffffffffffffff    	// #-1
  46a5fc:	tst	x3, #0x40
  46a600:	lsl	x0, x0, x2
  46a604:	orr	x0, x4, x0
  46a608:	csel	x4, x0, x4, ne  // ne = any
  46a60c:	ldr	x0, [x20, #1624]
  46a610:	cmp	x1, #0x61
  46a614:	mul	x4, x4, x0
  46a618:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a61c:	lsl	x1, x1, #4
  46a620:	add	x0, x20, x1
  46a624:	str	w24, [x0, #8]
  46a628:	str	x4, [x20, x1]
  46a62c:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a630:	mov	x1, #0x0                   	// #0
  46a634:	mov	w0, #0x0                   	// #0
  46a638:	ldrb	w3, [x19], #1
  46a63c:	and	x2, x3, #0x7f
  46a640:	lsl	x2, x2, x0
  46a644:	add	w0, w0, #0x7
  46a648:	orr	x1, x1, x2
  46a64c:	tbnz	w3, #7, 46a638 <_obstack_memory_used@@Base+0x16298>
  46a650:	cmp	x1, #0x61
  46a654:	b.hi	46a66c <_obstack_memory_used@@Base+0x162cc>  // b.pmore
  46a658:	lsl	x1, x1, #4
  46a65c:	mov	w2, #0x3                   	// #3
  46a660:	add	x0, x20, x1
  46a664:	str	w2, [x0, #8]
  46a668:	str	x19, [x20, x1]
  46a66c:	mov	x3, #0x0                   	// #0
  46a670:	mov	w1, #0x0                   	// #0
  46a674:	nop
  46a678:	ldrb	w2, [x19], #1
  46a67c:	and	x0, x2, #0x7f
  46a680:	lsl	x0, x0, x1
  46a684:	add	w1, w1, #0x7
  46a688:	orr	x3, x3, x0
  46a68c:	tbnz	w2, #7, 46a678 <_obstack_memory_used@@Base+0x162d8>
  46a690:	add	x19, x19, x3
  46a694:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a698:	mov	x1, #0x0                   	// #0
  46a69c:	mov	w0, #0x0                   	// #0
  46a6a0:	ldrb	w3, [x19], #1
  46a6a4:	and	x2, x3, #0x7f
  46a6a8:	lsl	x2, x2, x0
  46a6ac:	add	w0, w0, #0x7
  46a6b0:	orr	x1, x1, x2
  46a6b4:	tbnz	w3, #7, 46a6a0 <_obstack_memory_used@@Base+0x16300>
  46a6b8:	str	x1, [x20, #1576]
  46a6bc:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a6c0:	mov	x1, #0x0                   	// #0
  46a6c4:	mov	w0, #0x0                   	// #0
  46a6c8:	ldrb	w3, [x19], #1
  46a6cc:	and	x2, x3, #0x7f
  46a6d0:	lsl	x2, x2, x0
  46a6d4:	add	w0, w0, #0x7
  46a6d8:	orr	x1, x1, x2
  46a6dc:	tbnz	w3, #7, 46a6c8 <_obstack_memory_used@@Base+0x16328>
  46a6e0:	str	x1, [x20, #1584]
  46a6e4:	str	w24, [x20, #1600]
  46a6e8:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a6ec:	mov	x1, #0x0                   	// #0
  46a6f0:	mov	w0, #0x0                   	// #0
  46a6f4:	ldrb	w3, [x19], #1
  46a6f8:	and	x2, x3, #0x7f
  46a6fc:	lsl	x2, x2, x0
  46a700:	add	w0, w0, #0x7
  46a704:	orr	x1, x1, x2
  46a708:	tbnz	w3, #7, 46a6f4 <_obstack_memory_used@@Base+0x16354>
  46a70c:	mov	x3, #0x0                   	// #0
  46a710:	mov	w2, #0x0                   	// #0
  46a714:	str	x1, [x20, #1584]
  46a718:	ldrb	w1, [x19], #1
  46a71c:	and	x0, x1, #0x7f
  46a720:	lsl	x0, x0, x2
  46a724:	add	w2, w2, #0x7
  46a728:	orr	x3, x3, x0
  46a72c:	tbnz	w1, #7, 46a718 <_obstack_memory_used@@Base+0x16378>
  46a730:	str	x3, [x20, #1576]
  46a734:	str	w24, [x20, #1600]
  46a738:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a73c:	mov	x1, #0x0                   	// #0
  46a740:	mov	w0, #0x0                   	// #0
  46a744:	ldrb	w3, [x19], #1
  46a748:	and	x2, x3, #0x7f
  46a74c:	lsl	x2, x2, x0
  46a750:	add	w0, w0, #0x7
  46a754:	orr	x1, x1, x2
  46a758:	tbnz	w3, #7, 46a744 <_obstack_memory_used@@Base+0x163a4>
  46a75c:	mov	x4, #0x0                   	// #0
  46a760:	mov	w2, #0x0                   	// #0
  46a764:	nop
  46a768:	ldrb	w3, [x19], #1
  46a76c:	and	x0, x3, #0x7f
  46a770:	lsl	x0, x0, x2
  46a774:	add	w2, w2, #0x7
  46a778:	orr	x4, x4, x0
  46a77c:	tbnz	w3, #7, 46a768 <_obstack_memory_used@@Base+0x163c8>
  46a780:	cmp	x1, #0x61
  46a784:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a788:	lsl	x1, x1, #4
  46a78c:	mov	w2, #0x2                   	// #2
  46a790:	add	x0, x20, x1
  46a794:	str	w2, [x0, #8]
  46a798:	str	x4, [x20, x1]
  46a79c:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a7a0:	mov	x1, #0x0                   	// #0
  46a7a4:	mov	w0, #0x0                   	// #0
  46a7a8:	ldrb	w3, [x19], #1
  46a7ac:	and	x2, x3, #0x7f
  46a7b0:	lsl	x2, x2, x0
  46a7b4:	add	w0, w0, #0x7
  46a7b8:	orr	x1, x1, x2
  46a7bc:	tbnz	w3, #7, 46a7a8 <_obstack_memory_used@@Base+0x16408>
  46a7c0:	cmp	x1, #0x61
  46a7c4:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a7c8:	add	x1, x20, x1, lsl #4
  46a7cc:	str	wzr, [x1, #8]
  46a7d0:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a7d4:	mov	x1, #0x0                   	// #0
  46a7d8:	mov	w0, #0x0                   	// #0
  46a7dc:	ldrb	w3, [x19], #1
  46a7e0:	and	x2, x3, #0x7f
  46a7e4:	lsl	x2, x2, x0
  46a7e8:	add	w0, w0, #0x7
  46a7ec:	orr	x1, x1, x2
  46a7f0:	tbnz	w3, #7, 46a7dc <_obstack_memory_used@@Base+0x1643c>
  46a7f4:	cmp	x1, #0x61
  46a7f8:	b.hi	46a354 <_obstack_memory_used@@Base+0x15fb4>  // b.pmore
  46a7fc:	add	x1, x20, x1, lsl #4
  46a800:	mov	w0, #0x6                   	// #6
  46a804:	str	w0, [x1, #8]
  46a808:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a80c:	mov	x1, #0x0                   	// #0
  46a810:	mov	w0, #0x0                   	// #0
  46a814:	ldrb	w3, [x19], #1
  46a818:	and	x2, x3, #0x7f
  46a81c:	lsl	x2, x2, x0
  46a820:	add	w0, w0, #0x7
  46a824:	orr	x1, x1, x2
  46a828:	tbnz	w3, #7, 46a814 <_obstack_memory_used@@Base+0x16474>
  46a82c:	b	46a7c0 <_obstack_memory_used@@Base+0x16420>
  46a830:	mov	x1, #0x0                   	// #0
  46a834:	mov	w0, #0x0                   	// #0
  46a838:	ldrb	w3, [x19], #1
  46a83c:	and	x2, x3, #0x7f
  46a840:	lsl	x2, x2, x0
  46a844:	add	w0, w0, #0x7
  46a848:	orr	x1, x1, x2
  46a84c:	tbnz	w3, #7, 46a838 <_obstack_memory_used@@Base+0x16498>
  46a850:	mov	x4, #0x0                   	// #0
  46a854:	mov	w2, #0x0                   	// #0
  46a858:	ldrb	w3, [x19], #1
  46a85c:	and	x0, x3, #0x7f
  46a860:	lsl	x0, x0, x2
  46a864:	add	w2, w2, #0x7
  46a868:	orr	x4, x4, x0
  46a86c:	tbnz	w3, #7, 46a858 <_obstack_memory_used@@Base+0x164b8>
  46a870:	b	46a60c <_obstack_memory_used@@Base+0x1626c>
  46a874:	ldr	x0, [x20, #1632]
  46a878:	and	x4, x4, #0x3f
  46a87c:	madd	x4, x4, x0, x1
  46a880:	str	x4, [x20, #1608]
  46a884:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a888:	ubfiz	x4, x4, #4, #6
  46a88c:	add	x4, x20, x4
  46a890:	str	wzr, [x4, #8]
  46a894:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a898:	and	w4, w4, #0x3f
  46a89c:	mov	x1, #0x0                   	// #0
  46a8a0:	mov	w5, #0x0                   	// #0
  46a8a4:	nop
  46a8a8:	ldrb	w6, [x19], #1
  46a8ac:	and	x0, x6, #0x7f
  46a8b0:	lsl	x0, x0, x5
  46a8b4:	add	w5, w5, #0x7
  46a8b8:	orr	x1, x1, x0
  46a8bc:	tbnz	w6, #7, 46a8a8 <_obstack_memory_used@@Base+0x16508>
  46a8c0:	ubfiz	x4, x4, #4, #6
  46a8c4:	ldr	x2, [x20, #1624]
  46a8c8:	add	x0, x20, x4
  46a8cc:	mul	x1, x1, x2
  46a8d0:	str	w24, [x0, #8]
  46a8d4:	str	x1, [x20, x4]
  46a8d8:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a8dc:	ldr	x0, [x20, #544]
  46a8e0:	eor	x0, x0, #0x1
  46a8e4:	str	x0, [x20, #544]
  46a8e8:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a8ec:	ldrb	w28, [x20, #1648]
  46a8f0:	mov	x1, x21
  46a8f4:	mov	w0, w28
  46a8f8:	bl	46a1d0 <_obstack_memory_used@@Base+0x15e30>
  46a8fc:	mov	x2, x19
  46a900:	mov	x1, x0
  46a904:	mov	x3, x27
  46a908:	mov	w0, w28
  46a90c:	bl	46a070 <_obstack_memory_used@@Base+0x15cd0>
  46a910:	mov	x19, x0
  46a914:	ldr	x1, [x29, #104]
  46a918:	str	x1, [x20, #1608]
  46a91c:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a920:	ldrb	w2, [x0, #1]
  46a924:	add	x19, x0, #0x2
  46a928:	ldr	x0, [x20, #1632]
  46a92c:	madd	x1, x2, x0, x1
  46a930:	str	x1, [x20, #1608]
  46a934:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a938:	ldurh	w2, [x0, #1]
  46a93c:	add	x19, x0, #0x3
  46a940:	ldr	x0, [x20, #1632]
  46a944:	madd	x1, x2, x0, x1
  46a948:	str	x1, [x20, #1608]
  46a94c:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a950:	ldur	w2, [x0, #1]
  46a954:	add	x19, x0, #0x5
  46a958:	ldr	x0, [x20, #1632]
  46a95c:	madd	x1, x2, x0, x1
  46a960:	str	x1, [x20, #1608]
  46a964:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a968:	cbz	x25, 46a9e4 <_obstack_memory_used@@Base+0x16644>
  46a96c:	mov	x3, x25
  46a970:	ldr	x25, [x25, #1568]
  46a974:	mov	x1, x20
  46a978:	mov	x0, x3
  46a97c:	mov	x2, #0x648                 	// #1608
  46a980:	bl	402620 <memcpy@plt>
  46a984:	str	x0, [x20, #1568]
  46a988:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a98c:	ldr	x28, [x20, #1568]
  46a990:	mov	x0, x20
  46a994:	mov	x2, #0x648                 	// #1608
  46a998:	mov	x1, x28
  46a99c:	bl	402620 <memcpy@plt>
  46a9a0:	str	x25, [x28, #1568]
  46a9a4:	mov	x25, x28
  46a9a8:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a9ac:	mov	w0, #0x2                   	// #2
  46a9b0:	mov	x3, #0x0                   	// #0
  46a9b4:	mov	w1, #0x0                   	// #0
  46a9b8:	str	x19, [x20, #1592]
  46a9bc:	str	w0, [x20, #1600]
  46a9c0:	ldrb	w2, [x19], #1
  46a9c4:	and	x0, x2, #0x7f
  46a9c8:	lsl	x0, x0, x1
  46a9cc:	add	w1, w1, #0x7
  46a9d0:	orr	x3, x3, x0
  46a9d4:	tbnz	w2, #7, 46a9c0 <_obstack_memory_used@@Base+0x16620>
  46a9d8:	add	x19, x19, x3
  46a9dc:	b	46a354 <_obstack_memory_used@@Base+0x15fb4>
  46a9e0:	ret
  46a9e4:	sub	sp, sp, #0x650
  46a9e8:	mov	x3, sp
  46a9ec:	b	46a974 <_obstack_memory_used@@Base+0x165d4>
  46a9f0:	bl	402990 <abort@plt>
  46a9f4:	nop
  46a9f8:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46a9fc:	add	x1, x2, #0xb60
  46aa00:	mov	w0, #0x8                   	// #8
  46aa04:	strb	w0, [x2, #2912]
  46aa08:	strb	w0, [x1, #1]
  46aa0c:	strb	w0, [x1, #2]
  46aa10:	strb	w0, [x1, #3]
  46aa14:	strb	w0, [x1, #4]
  46aa18:	strb	w0, [x1, #5]
  46aa1c:	strb	w0, [x1, #6]
  46aa20:	strb	w0, [x1, #7]
  46aa24:	strb	w0, [x1, #8]
  46aa28:	strb	w0, [x1, #9]
  46aa2c:	strb	w0, [x1, #10]
  46aa30:	strb	w0, [x1, #11]
  46aa34:	strb	w0, [x1, #12]
  46aa38:	strb	w0, [x1, #13]
  46aa3c:	strb	w0, [x1, #14]
  46aa40:	strb	w0, [x1, #15]
  46aa44:	strb	w0, [x1, #16]
  46aa48:	strb	w0, [x1, #17]
  46aa4c:	strb	w0, [x1, #18]
  46aa50:	strb	w0, [x1, #19]
  46aa54:	strb	w0, [x1, #20]
  46aa58:	strb	w0, [x1, #21]
  46aa5c:	strb	w0, [x1, #22]
  46aa60:	strb	w0, [x1, #23]
  46aa64:	strb	w0, [x1, #24]
  46aa68:	strb	w0, [x1, #25]
  46aa6c:	strb	w0, [x1, #26]
  46aa70:	strb	w0, [x1, #27]
  46aa74:	strb	w0, [x1, #28]
  46aa78:	strb	w0, [x1, #29]
  46aa7c:	strb	w0, [x1, #30]
  46aa80:	strb	w0, [x1, #31]
  46aa84:	strb	w0, [x1, #64]
  46aa88:	strb	w0, [x1, #46]
  46aa8c:	strb	w0, [x1, #65]
  46aa90:	strb	w0, [x1, #66]
  46aa94:	strb	w0, [x1, #67]
  46aa98:	strb	w0, [x1, #68]
  46aa9c:	strb	w0, [x1, #69]
  46aaa0:	strb	w0, [x1, #70]
  46aaa4:	strb	w0, [x1, #71]
  46aaa8:	strb	w0, [x1, #72]
  46aaac:	strb	w0, [x1, #73]
  46aab0:	strb	w0, [x1, #74]
  46aab4:	strb	w0, [x1, #75]
  46aab8:	strb	w0, [x1, #76]
  46aabc:	strb	w0, [x1, #77]
  46aac0:	strb	w0, [x1, #78]
  46aac4:	strb	w0, [x1, #79]
  46aac8:	strb	w0, [x1, #80]
  46aacc:	strb	w0, [x1, #81]
  46aad0:	strb	w0, [x1, #82]
  46aad4:	strb	w0, [x1, #83]
  46aad8:	strb	w0, [x1, #84]
  46aadc:	strb	w0, [x1, #85]
  46aae0:	strb	w0, [x1, #86]
  46aae4:	strb	w0, [x1, #87]
  46aae8:	strb	w0, [x1, #88]
  46aaec:	strb	w0, [x1, #89]
  46aaf0:	strb	w0, [x1, #90]
  46aaf4:	strb	w0, [x1, #91]
  46aaf8:	strb	w0, [x1, #92]
  46aafc:	strb	w0, [x1, #93]
  46ab00:	strb	w0, [x1, #94]
  46ab04:	strb	w0, [x1, #95]
  46ab08:	strb	w0, [x1, #48]
  46ab0c:	strb	w0, [x1, #49]
  46ab10:	strb	w0, [x1, #50]
  46ab14:	strb	w0, [x1, #51]
  46ab18:	strb	w0, [x1, #52]
  46ab1c:	strb	w0, [x1, #53]
  46ab20:	strb	w0, [x1, #54]
  46ab24:	strb	w0, [x1, #55]
  46ab28:	strb	w0, [x1, #56]
  46ab2c:	strb	w0, [x1, #57]
  46ab30:	strb	w0, [x1, #58]
  46ab34:	strb	w0, [x1, #59]
  46ab38:	strb	w0, [x1, #60]
  46ab3c:	strb	w0, [x1, #61]
  46ab40:	strb	w0, [x1, #62]
  46ab44:	strb	w0, [x1, #63]
  46ab48:	strb	w0, [x1, #96]
  46ab4c:	ret
  46ab50:	stp	x29, x30, [sp, #-112]!
  46ab54:	mov	x2, #0x680                 	// #1664
  46ab58:	mov	x29, sp
  46ab5c:	stp	x19, x20, [sp, #16]
  46ab60:	mov	x20, x0
  46ab64:	mov	x19, x1
  46ab68:	mov	x0, x1
  46ab6c:	mov	w1, #0x0                   	// #0
  46ab70:	bl	402890 <memset@plt>
  46ab74:	str	xzr, [x20, #800]
  46ab78:	ldr	x2, [x20, #792]
  46ab7c:	str	xzr, [x20, #848]
  46ab80:	cbz	x2, 46aef4 <_obstack_memory_used@@Base+0x16b54>
  46ab84:	ldr	d0, [x20, #832]
  46ab88:	add	x1, x20, #0x328
  46ab8c:	stp	x21, x22, [sp, #32]
  46ab90:	cmge	d0, d0, #0
  46ab94:	fmov	x0, d0
  46ab98:	add	x0, x2, x0
  46ab9c:	bl	46e290 <_obstack_memory_used@@Base+0x19ef0>
  46aba0:	mov	x22, x0
  46aba4:	cbz	x0, 46af58 <_obstack_memory_used@@Base+0x16bb8>
  46aba8:	ldrsw	x1, [x0, #4]
  46abac:	stp	x23, x24, [sp, #48]
  46abb0:	add	x23, x0, #0x4
  46abb4:	sub	x23, x23, x1
  46abb8:	ldr	x0, [x20, #824]
  46abbc:	str	x0, [x19, #1608]
  46abc0:	add	x21, x23, #0x9
  46abc4:	mov	x0, x21
  46abc8:	bl	402680 <strlen@plt>
  46abcc:	ldrb	w1, [x23, #9]
  46abd0:	add	x2, x0, #0x1
  46abd4:	add	x2, x21, x2
  46abd8:	cmp	w1, #0x65
  46abdc:	b.eq	46adc8 <_obstack_memory_used@@Base+0x16a28>  // b.none
  46abe0:	ldrb	w6, [x23, #8]
  46abe4:	ldrb	w3, [x2]
  46abe8:	cmp	w6, #0x3
  46abec:	b.hi	46b038 <_obstack_memory_used@@Base+0x16c98>  // b.pmore
  46abf0:	stp	x25, x26, [sp, #64]
  46abf4:	stp	x27, x28, [sp, #80]
  46abf8:	mov	x5, #0x0                   	// #0
  46abfc:	mov	w4, #0x0                   	// #0
  46ac00:	b	46ac08 <_obstack_memory_used@@Base+0x16868>
  46ac04:	ldrb	w3, [x2]
  46ac08:	and	x1, x3, #0x7f
  46ac0c:	add	x2, x2, #0x1
  46ac10:	lsl	x1, x1, x4
  46ac14:	add	w4, w4, #0x7
  46ac18:	orr	x5, x5, x1
  46ac1c:	tbnz	w3, #7, 46ac04 <_obstack_memory_used@@Base+0x16864>
  46ac20:	mov	x0, #0x0                   	// #0
  46ac24:	mov	w3, #0x0                   	// #0
  46ac28:	str	x5, [x19, #1632]
  46ac2c:	nop
  46ac30:	mov	x5, x2
  46ac34:	ldrb	w4, [x2], #1
  46ac38:	and	x1, x4, #0x7f
  46ac3c:	lsl	x1, x1, x3
  46ac40:	add	w3, w3, #0x7
  46ac44:	orr	x0, x0, x1
  46ac48:	tbnz	w4, #7, 46ac30 <_obstack_memory_used@@Base+0x16890>
  46ac4c:	cmp	w3, #0x3f
  46ac50:	b.hi	46ac68 <_obstack_memory_used@@Base+0x168c8>  // b.pmore
  46ac54:	mov	x1, #0xffffffffffffffff    	// #-1
  46ac58:	tst	x4, #0x40
  46ac5c:	lsl	x3, x1, x3
  46ac60:	orr	x3, x0, x3
  46ac64:	csel	x0, x3, x0, ne  // ne = any
  46ac68:	str	x0, [x19, #1624]
  46ac6c:	cmp	w6, #0x1
  46ac70:	mov	x4, #0x0                   	// #0
  46ac74:	mov	w3, #0x0                   	// #0
  46ac78:	b.eq	46ade4 <_obstack_memory_used@@Base+0x16a44>  // b.none
  46ac7c:	nop
  46ac80:	ldrb	w0, [x2], #1
  46ac84:	and	x1, x0, #0x7f
  46ac88:	lsl	x1, x1, x3
  46ac8c:	add	w3, w3, #0x7
  46ac90:	orr	x4, x4, x1
  46ac94:	tbnz	w0, #7, 46ac80 <_obstack_memory_used@@Base+0x168e0>
  46ac98:	mov	w0, #0xffffffff            	// #-1
  46ac9c:	str	x4, [x19, #1640]
  46aca0:	strb	w0, [x19, #1649]
  46aca4:	ldrb	w3, [x21]
  46aca8:	cmp	w3, #0x7a
  46acac:	b.eq	46ae04 <_obstack_memory_used@@Base+0x16a64>  // b.none
  46acb0:	mov	x24, #0x0                   	// #0
  46acb4:	cbz	w3, 46b09c <_obstack_memory_used@@Base+0x16cfc>
  46acb8:	add	x21, x21, #0x1
  46acbc:	add	x25, sp, #0x68
  46acc0:	mov	w26, #0x1                   	// #1
  46acc4:	b	46acec <_obstack_memory_used@@Base+0x1694c>
  46acc8:	cmp	w3, #0x52
  46accc:	b.eq	46ae48 <_obstack_memory_used@@Base+0x16aa8>  // b.none
  46acd0:	cmp	w3, #0x50
  46acd4:	b.eq	46ae54 <_obstack_memory_used@@Base+0x16ab4>  // b.none
  46acd8:	cmp	w3, #0x53
  46acdc:	b.ne	46af08 <_obstack_memory_used@@Base+0x16b68>  // b.any
  46ace0:	strb	w26, [x19, #1651]
  46ace4:	ldrb	w3, [x21], #1
  46ace8:	cbz	w3, 46ad04 <_obstack_memory_used@@Base+0x16964>
  46acec:	cmp	w3, #0x4c
  46acf0:	b.ne	46acc8 <_obstack_memory_used@@Base+0x16928>  // b.any
  46acf4:	ldrb	w0, [x2], #1
  46acf8:	strb	w0, [x19, #1649]
  46acfc:	ldrb	w3, [x21], #1
  46ad00:	cbnz	w3, 46acec <_obstack_memory_used@@Base+0x1694c>
  46ad04:	cbz	x24, 46af04 <_obstack_memory_used@@Base+0x16b64>
  46ad08:	ldr	w1, [x23]
  46ad0c:	mov	x0, x24
  46ad10:	mov	x3, x19
  46ad14:	mov	x2, x20
  46ad18:	add	x1, x1, #0x4
  46ad1c:	add	x1, x23, x1
  46ad20:	bl	46a248 <_obstack_memory_used@@Base+0x15ea8>
  46ad24:	ldrb	w0, [x19, #1648]
  46ad28:	cmp	w0, #0xff
  46ad2c:	b.eq	46b030 <_obstack_memory_used@@Base+0x16c90>  // b.none
  46ad30:	and	w0, w0, #0x7
  46ad34:	cmp	w0, #0x2
  46ad38:	b.eq	46b028 <_obstack_memory_used@@Base+0x16c88>  // b.none
  46ad3c:	b.ls	46ae9c <_obstack_memory_used@@Base+0x16afc>  // b.plast
  46ad40:	cmp	w0, #0x3
  46ad44:	mov	x21, #0x10                  	// #16
  46ad48:	b.ne	46ae8c <_obstack_memory_used@@Base+0x16aec>  // b.any
  46ad4c:	ldrb	w0, [x19, #1650]
  46ad50:	add	x21, x22, x21
  46ad54:	ldrb	w24, [x19, #1649]
  46ad58:	cbz	w0, 46aeb4 <_obstack_memory_used@@Base+0x16b14>
  46ad5c:	mov	x0, #0x0                   	// #0
  46ad60:	mov	w2, #0x0                   	// #0
  46ad64:	nop
  46ad68:	ldrb	w3, [x21], #1
  46ad6c:	and	x1, x3, #0x7f
  46ad70:	lsl	x1, x1, x2
  46ad74:	add	w2, w2, #0x7
  46ad78:	orr	x0, x0, x1
  46ad7c:	tbnz	w3, #7, 46ad68 <_obstack_memory_used@@Base+0x169c8>
  46ad80:	add	x23, x21, x0
  46ad84:	cmp	w24, #0xff
  46ad88:	b.ne	46af2c <_obstack_memory_used@@Base+0x16b8c>  // b.any
  46ad8c:	ldr	w1, [x22]
  46ad90:	mov	x0, x23
  46ad94:	mov	x3, x19
  46ad98:	mov	x2, x20
  46ad9c:	add	x1, x1, #0x4
  46ada0:	add	x1, x22, x1
  46ada4:	bl	46a248 <_obstack_memory_used@@Base+0x15ea8>
  46ada8:	ldp	x21, x22, [sp, #32]
  46adac:	mov	w0, #0x0                   	// #0
  46adb0:	ldp	x23, x24, [sp, #48]
  46adb4:	ldp	x25, x26, [sp, #64]
  46adb8:	ldp	x27, x28, [sp, #80]
  46adbc:	ldp	x19, x20, [sp, #16]
  46adc0:	ldp	x29, x30, [sp], #112
  46adc4:	ret
  46adc8:	ldrb	w0, [x23, #10]
  46adcc:	cmp	w0, #0x68
  46add0:	b.ne	46abe0 <_obstack_memory_used@@Base+0x16840>  // b.any
  46add4:	ldr	x0, [x2], #8
  46add8:	add	x21, x23, #0xb
  46addc:	str	x0, [x19, #1656]
  46ade0:	b	46abe0 <_obstack_memory_used@@Base+0x16840>
  46ade4:	ldrb	w0, [x2]
  46ade8:	add	x2, x5, #0x2
  46adec:	str	x0, [x19, #1640]
  46adf0:	mov	w0, #0xffffffff            	// #-1
  46adf4:	strb	w0, [x19, #1649]
  46adf8:	ldrb	w3, [x21]
  46adfc:	cmp	w3, #0x7a
  46ae00:	b.ne	46acb0 <_obstack_memory_used@@Base+0x16910>  // b.any
  46ae04:	mov	x0, #0x0                   	// #0
  46ae08:	mov	w3, #0x0                   	// #0
  46ae0c:	nop
  46ae10:	ldrb	w4, [x2], #1
  46ae14:	and	x1, x4, #0x7f
  46ae18:	lsl	x1, x1, x3
  46ae1c:	add	w3, w3, #0x7
  46ae20:	orr	x0, x0, x1
  46ae24:	tbnz	w4, #7, 46ae10 <_obstack_memory_used@@Base+0x16a70>
  46ae28:	mov	w1, #0x1                   	// #1
  46ae2c:	strb	w1, [x19, #1650]
  46ae30:	add	x24, x2, x0
  46ae34:	add	x0, x21, #0x1
  46ae38:	ldrb	w3, [x21, #1]
  46ae3c:	cbz	w3, 46ad08 <_obstack_memory_used@@Base+0x16968>
  46ae40:	mov	x21, x0
  46ae44:	b	46acb8 <_obstack_memory_used@@Base+0x16918>
  46ae48:	ldrb	w0, [x2], #1
  46ae4c:	strb	w0, [x19, #1648]
  46ae50:	b	46ace4 <_obstack_memory_used@@Base+0x16944>
  46ae54:	mov	x27, x2
  46ae58:	mov	x1, x20
  46ae5c:	ldrb	w28, [x27], #1
  46ae60:	mov	w0, w28
  46ae64:	bl	46a1d0 <_obstack_memory_used@@Base+0x15e30>
  46ae68:	mov	x2, x27
  46ae6c:	mov	x1, x0
  46ae70:	mov	x3, x25
  46ae74:	mov	w0, w28
  46ae78:	bl	46a070 <_obstack_memory_used@@Base+0x15cd0>
  46ae7c:	mov	x2, x0
  46ae80:	ldr	x1, [sp, #104]
  46ae84:	str	x1, [x19, #1616]
  46ae88:	b	46ace4 <_obstack_memory_used@@Base+0x16944>
  46ae8c:	cmp	w0, #0x4
  46ae90:	mov	x21, #0x18                  	// #24
  46ae94:	b.eq	46ad4c <_obstack_memory_used@@Base+0x169ac>  // b.none
  46ae98:	bl	402990 <abort@plt>
  46ae9c:	mov	x21, #0x18                  	// #24
  46aea0:	cbnz	w0, 46ae98 <_obstack_memory_used@@Base+0x16af8>
  46aea4:	ldrb	w0, [x19, #1650]
  46aea8:	add	x21, x22, x21
  46aeac:	ldrb	w24, [x19, #1649]
  46aeb0:	cbnz	w0, 46ad5c <_obstack_memory_used@@Base+0x169bc>
  46aeb4:	mov	x23, x21
  46aeb8:	cmp	w24, #0xff
  46aebc:	b.eq	46ad8c <_obstack_memory_used@@Base+0x169ec>  // b.none
  46aec0:	mov	x1, x20
  46aec4:	mov	w0, w24
  46aec8:	bl	46a1d0 <_obstack_memory_used@@Base+0x15e30>
  46aecc:	mov	x1, x0
  46aed0:	mov	x2, x21
  46aed4:	mov	w0, w24
  46aed8:	add	x3, sp, #0x68
  46aedc:	bl	46a070 <_obstack_memory_used@@Base+0x15cd0>
  46aee0:	ldr	x1, [sp, #104]
  46aee4:	mov	x23, x0
  46aee8:	str	x1, [x20, #800]
  46aeec:	b	46ad8c <_obstack_memory_used@@Base+0x169ec>
  46aef0:	ldp	x21, x22, [sp, #32]
  46aef4:	mov	w0, #0x5                   	// #5
  46aef8:	ldp	x19, x20, [sp, #16]
  46aefc:	ldp	x29, x30, [sp], #112
  46af00:	ret
  46af04:	mov	x24, x2
  46af08:	cbnz	x24, 46ad08 <_obstack_memory_used@@Base+0x16968>
  46af0c:	ldp	x25, x26, [sp, #64]
  46af10:	ldp	x27, x28, [sp, #80]
  46af14:	mov	w0, #0x3                   	// #3
  46af18:	ldp	x19, x20, [sp, #16]
  46af1c:	ldp	x21, x22, [sp, #32]
  46af20:	ldp	x23, x24, [sp, #48]
  46af24:	ldp	x29, x30, [sp], #112
  46af28:	ret
  46af2c:	mov	x1, x20
  46af30:	mov	w0, w24
  46af34:	bl	46a1d0 <_obstack_memory_used@@Base+0x15e30>
  46af38:	mov	x1, x0
  46af3c:	mov	x2, x21
  46af40:	mov	w0, w24
  46af44:	add	x3, sp, #0x68
  46af48:	bl	46a070 <_obstack_memory_used@@Base+0x15cd0>
  46af4c:	ldr	x0, [sp, #104]
  46af50:	str	x0, [x20, #800]
  46af54:	b	46ad8c <_obstack_memory_used@@Base+0x169ec>
  46af58:	ldr	x0, [x20, #792]
  46af5c:	mov	w1, #0x1168                	// #4456
  46af60:	movk	w1, #0xd280, lsl #16
  46af64:	ldr	w2, [x0]
  46af68:	cmp	w2, w1
  46af6c:	b.ne	46aef0 <_obstack_memory_used@@Base+0x16b50>  // b.any
  46af70:	ldr	w1, [x0, #4]
  46af74:	mov	w0, #0x1                   	// #1
  46af78:	movk	w0, #0xd400, lsl #16
  46af7c:	cmp	w1, w0
  46af80:	b.ne	46aef0 <_obstack_memory_used@@Base+0x16b50>  // b.any
  46af84:	ldr	x6, [x20, #784]
  46af88:	mov	w3, #0x1                   	// #1
  46af8c:	mov	x1, x19
  46af90:	mov	w2, w3
  46af94:	add	x8, x6, #0x130
  46af98:	mov	x4, #0x1f                  	// #31
  46af9c:	mov	x5, #0x130                 	// #304
  46afa0:	mov	x0, #0x8                   	// #8
  46afa4:	str	x5, [x19, #1576]
  46afa8:	str	x4, [x19, #1584]
  46afac:	str	w3, [x19, #1600]
  46afb0:	str	w2, [x1, #8]
  46afb4:	str	x0, [x1], #16
  46afb8:	add	x0, x0, #0x8
  46afbc:	cmp	x0, #0x100
  46afc0:	b.ne	46afb0 <_obstack_memory_used@@Base+0x16c10>  // b.any
  46afc4:	ldr	w0, [x6, #592]
  46afc8:	add	x5, x6, #0x250
  46afcc:	cbz	w0, 46b05c <_obstack_memory_used@@Base+0x16cbc>
  46afd0:	mov	w7, #0x8001                	// #32769
  46afd4:	add	x4, x19, #0x600
  46afd8:	add	x9, x6, x19
  46afdc:	movk	w7, #0x4650, lsl #16
  46afe0:	mov	w3, #0x1                   	// #1
  46afe4:	b	46aff8 <_obstack_memory_used@@Base+0x16c58>
  46afe8:	ldr	w0, [x5, #4]
  46afec:	add	x5, x5, x0
  46aff0:	ldr	w0, [x5]
  46aff4:	cbz	w0, 46b05c <_obstack_memory_used@@Base+0x16cbc>
  46aff8:	cmp	w0, w7
  46affc:	b.ne	46afe8 <_obstack_memory_used@@Base+0x16c48>  // b.any
  46b000:	sub	x2, x5, #0x520
  46b004:	add	x0, x19, #0x400
  46b008:	sub	x2, x2, x9
  46b00c:	nop
  46b010:	str	w3, [x0, #8]
  46b014:	add	x1, x2, x0
  46b018:	str	x1, [x0], #16
  46b01c:	cmp	x4, x0
  46b020:	b.ne	46b010 <_obstack_memory_used@@Base+0x16c70>  // b.any
  46b024:	b	46afe8 <_obstack_memory_used@@Base+0x16c48>
  46b028:	mov	x21, #0xc                   	// #12
  46b02c:	b	46ad4c <_obstack_memory_used@@Base+0x169ac>
  46b030:	mov	x21, #0x8                   	// #8
  46b034:	b	46ad4c <_obstack_memory_used@@Base+0x169ac>
  46b038:	cmp	w3, #0x8
  46b03c:	b.ne	46af14 <_obstack_memory_used@@Base+0x16b74>  // b.any
  46b040:	ldrb	w0, [x2, #1]
  46b044:	cbnz	w0, 46af14 <_obstack_memory_used@@Base+0x16b74>
  46b048:	stp	x25, x26, [sp, #64]
  46b04c:	add	x2, x2, #0x2
  46b050:	stp	x27, x28, [sp, #80]
  46b054:	ldrb	w3, [x2]
  46b058:	b	46abf8 <_obstack_memory_used@@Base+0x16858>
  46b05c:	mov	w3, #0x1                   	// #1
  46b060:	strb	w3, [x19, #1651]
  46b064:	add	x1, x6, #0x230
  46b068:	mov	w5, #0x4                   	// #4
  46b06c:	ldr	x2, [x8, #264]
  46b070:	sub	x1, x1, x8
  46b074:	mov	x4, #0x60                  	// #96
  46b078:	mov	w0, #0x0                   	// #0
  46b07c:	sub	x8, x2, x8
  46b080:	ldp	x21, x22, [sp, #32]
  46b084:	str	x1, [x19, #496]
  46b088:	str	w3, [x19, #504]
  46b08c:	str	x8, [x19, #1536]
  46b090:	str	w5, [x19, #1544]
  46b094:	str	x4, [x19, #1640]
  46b098:	b	46adbc <_obstack_memory_used@@Base+0x16a1c>
  46b09c:	mov	x24, x2
  46b0a0:	b	46ad08 <_obstack_memory_used@@Base+0x16968>
  46b0a4:	nop
  46b0a8:	stp	x29, x30, [sp, #-80]!
  46b0ac:	mov	x29, sp
  46b0b0:	stp	x21, x22, [sp, #32]
  46b0b4:	mov	x21, x0
  46b0b8:	ldr	x0, [x1, #832]
  46b0bc:	stp	x19, x20, [sp, #16]
  46b0c0:	mov	x20, x1
  46b0c4:	stp	x23, x24, [sp, #48]
  46b0c8:	tbz	x0, #62, 46b0d4 <_obstack_memory_used@@Base+0x16d34>
  46b0cc:	ldrb	w1, [x1, #887]
  46b0d0:	cbnz	w1, 46b0dc <_obstack_memory_used@@Base+0x16d3c>
  46b0d4:	ldr	x1, [x20, #248]
  46b0d8:	cbz	x1, 46b198 <_obstack_memory_used@@Base+0x16df8>
  46b0dc:	adrp	x24, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b0e0:	add	x23, x21, #0x358
  46b0e4:	add	x24, x24, #0xb60
  46b0e8:	add	x22, x20, #0x358
  46b0ec:	mov	x19, #0x0                   	// #0
  46b0f0:	b	46b114 <_obstack_memory_used@@Base+0x16d74>
  46b0f4:	cbz	x0, 46b108 <_obstack_memory_used@@Base+0x16d68>
  46b0f8:	ldrb	w2, [x19, x24]
  46b0fc:	cmp	w2, #0x8
  46b100:	b.ne	46b204 <_obstack_memory_used@@Base+0x16e64>  // b.any
  46b104:	str	x1, [x0]
  46b108:	add	x19, x19, #0x1
  46b10c:	cmp	x19, #0x61
  46b110:	b.eq	46b150 <_obstack_memory_used@@Base+0x16db0>  // b.none
  46b114:	ldrb	w2, [x23, x19]
  46b118:	ldr	x0, [x21, x19, lsl #3]
  46b11c:	ldr	x1, [x20, x19, lsl #3]
  46b120:	cbnz	w2, 46b204 <_obstack_memory_used@@Base+0x16e64>
  46b124:	ldrb	w2, [x22, x19]
  46b128:	cbnz	w2, 46b0f4 <_obstack_memory_used@@Base+0x16d54>
  46b12c:	cmp	x1, #0x0
  46b130:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  46b134:	ccmp	x0, x1, #0x4, ne  // ne = any
  46b138:	b.eq	46b108 <_obstack_memory_used@@Base+0x16d68>  // b.none
  46b13c:	ldrb	w2, [x24, x19]
  46b140:	add	x19, x19, #0x1
  46b144:	bl	402620 <memcpy@plt>
  46b148:	cmp	x19, #0x61
  46b14c:	b.ne	46b114 <_obstack_memory_used@@Base+0x16d74>  // b.any
  46b150:	ldr	x0, [x21, #832]
  46b154:	tbz	x0, #62, 46b160 <_obstack_memory_used@@Base+0x16dc0>
  46b158:	ldrb	w0, [x21, #887]
  46b15c:	cbnz	w0, 46b180 <_obstack_memory_used@@Base+0x16de0>
  46b160:	ldr	x1, [x21, #248]
  46b164:	mov	x0, #0x0                   	// #0
  46b168:	cbz	x1, 46b1c4 <_obstack_memory_used@@Base+0x16e24>
  46b16c:	ldp	x19, x20, [sp, #16]
  46b170:	ldp	x21, x22, [sp, #32]
  46b174:	ldp	x23, x24, [sp, #48]
  46b178:	ldp	x29, x30, [sp], #80
  46b17c:	ret
  46b180:	mov	x0, #0x0                   	// #0
  46b184:	ldp	x19, x20, [sp, #16]
  46b188:	ldp	x21, x22, [sp, #32]
  46b18c:	ldp	x23, x24, [sp, #48]
  46b190:	ldp	x29, x30, [sp], #80
  46b194:	ret
  46b198:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b19c:	ldr	x2, [x20, #784]
  46b1a0:	ldrb	w1, [x1, #2943]
  46b1a4:	cmp	w1, #0x8
  46b1a8:	b.ne	46b204 <_obstack_memory_used@@Base+0x16e64>  // b.any
  46b1ac:	str	x2, [sp, #72]
  46b1b0:	tbz	x0, #62, 46b1b8 <_obstack_memory_used@@Base+0x16e18>
  46b1b4:	strb	wzr, [x20, #887]
  46b1b8:	add	x0, sp, #0x48
  46b1bc:	str	x0, [x20, #248]
  46b1c0:	b	46b0dc <_obstack_memory_used@@Base+0x16d3c>
  46b1c4:	ldr	x1, [x20, #832]
  46b1c8:	ldr	x0, [x20, #248]
  46b1cc:	tbnz	x1, #62, 46b1f8 <_obstack_memory_used@@Base+0x16e58>
  46b1d0:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b1d4:	ldrb	w1, [x1, #2943]
  46b1d8:	cmp	w1, #0x8
  46b1dc:	b.ne	46b204 <_obstack_memory_used@@Base+0x16e64>  // b.any
  46b1e0:	ldr	x0, [x0]
  46b1e4:	ldr	x2, [x21, #784]
  46b1e8:	ldr	x1, [x20, #848]
  46b1ec:	sub	x0, x0, x2
  46b1f0:	add	x0, x0, x1
  46b1f4:	b	46b16c <_obstack_memory_used@@Base+0x16dcc>
  46b1f8:	ldrb	w1, [x20, #887]
  46b1fc:	cbz	w1, 46b1d0 <_obstack_memory_used@@Base+0x16e30>
  46b200:	b	46b1e4 <_obstack_memory_used@@Base+0x16e44>
  46b204:	bl	402990 <abort@plt>
  46b208:	sub	sp, sp, #0x260
  46b20c:	cmp	x0, x1
  46b210:	stp	x29, x30, [sp]
  46b214:	mov	x29, sp
  46b218:	str	x3, [sp, #96]
  46b21c:	b.cs	46b674 <_obstack_memory_used@@Base+0x172d4>  // b.hs, b.nlast
  46b220:	stp	x19, x20, [sp, #16]
  46b224:	mov	x19, x0
  46b228:	mov	w20, #0x1                   	// #1
  46b22c:	stp	x21, x22, [sp, #32]
  46b230:	mov	x21, x1
  46b234:	add	x22, sp, #0x60
  46b238:	stp	x23, x24, [sp, #48]
  46b23c:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  46b240:	mov	x24, x2
  46b244:	add	x23, x23, #0xc5c
  46b248:	stp	x25, x26, [sp, #64]
  46b24c:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  46b250:	add	x25, x25, #0xe3c
  46b254:	nop
  46b258:	mov	x4, x19
  46b25c:	ldrb	w5, [x4], #1
  46b260:	sub	w0, w5, #0x3
  46b264:	cmp	w0, #0xee
  46b268:	b.ls	46b270 <_obstack_memory_used@@Base+0x16ed0>  // b.plast
  46b26c:	bl	402990 <abort@plt>
  46b270:	ldrh	w0, [x23, w0, uxtw #1]
  46b274:	adr	x1, 46b280 <_obstack_memory_used@@Base+0x16ee0>
  46b278:	add	x0, x1, w0, sxth #2
  46b27c:	br	x0
  46b280:	mov	x3, #0x0                   	// #0
  46b284:	mov	w1, #0x0                   	// #0
  46b288:	ldrb	w2, [x4], #1
  46b28c:	and	x0, x2, #0x7f
  46b290:	lsl	x0, x0, x1
  46b294:	add	w1, w1, #0x7
  46b298:	orr	x3, x3, x0
  46b29c:	tbnz	w2, #7, 46b288 <_obstack_memory_used@@Base+0x16ee8>
  46b2a0:	cmp	w1, #0x3f
  46b2a4:	b.ls	46b608 <_obstack_memory_used@@Base+0x17268>  // b.plast
  46b2a8:	sub	w5, w5, #0x70
  46b2ac:	cmp	w5, #0x61
  46b2b0:	b.gt	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b2b4:	ldr	x2, [x24, #832]
  46b2b8:	sxtw	x1, w5
  46b2bc:	ldr	x0, [x24, x1, lsl #3]
  46b2c0:	tbz	x2, #62, 46b2d0 <_obstack_memory_used@@Base+0x16f30>
  46b2c4:	add	x1, x24, x1
  46b2c8:	ldrb	w1, [x1, #856]
  46b2cc:	cbnz	w1, 46b2f0 <_obstack_memory_used@@Base+0x16f50>
  46b2d0:	cmp	w5, #0x2e
  46b2d4:	b.eq	46b668 <_obstack_memory_used@@Base+0x172c8>  // b.none
  46b2d8:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b2dc:	add	x1, x1, #0xb60
  46b2e0:	ldrb	w1, [x1, w5, sxtw]
  46b2e4:	cmp	w1, #0x8
  46b2e8:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b2ec:	ldr	x0, [x0]
  46b2f0:	add	x0, x3, x0
  46b2f4:	mov	w3, w20
  46b2f8:	mov	x19, x4
  46b2fc:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b300:	mov	w3, w20
  46b304:	add	x19, x19, #0x9
  46b308:	ldur	x0, [x19, #-8]
  46b30c:	nop
  46b310:	cmp	w3, #0x3f
  46b314:	b.gt	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b318:	add	w20, w3, #0x1
  46b31c:	str	x0, [x22, w3, sxtw #3]
  46b320:	cmp	x21, x19
  46b324:	b.hi	46b258 <_obstack_memory_used@@Base+0x16eb8>  // b.pmore
  46b328:	cbz	w20, 46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b32c:	sub	w20, w20, #0x1
  46b330:	add	x0, sp, #0x60
  46b334:	ldp	x29, x30, [sp]
  46b338:	ldr	x0, [x0, w20, sxtw #3]
  46b33c:	ldp	x19, x20, [sp, #16]
  46b340:	ldp	x21, x22, [sp, #32]
  46b344:	ldp	x23, x24, [sp, #48]
  46b348:	ldp	x25, x26, [sp, #64]
  46b34c:	add	sp, sp, #0x260
  46b350:	ret
  46b354:	sub	w5, w5, #0x50
  46b358:	cmp	w5, #0x61
  46b35c:	b.gt	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b360:	ldr	x2, [x24, #832]
  46b364:	sxtw	x1, w5
  46b368:	ldr	x0, [x24, x1, lsl #3]
  46b36c:	tbz	x2, #62, 46b37c <_obstack_memory_used@@Base+0x16fdc>
  46b370:	add	x1, x24, x1
  46b374:	ldrb	w1, [x1, #856]
  46b378:	cbnz	w1, 46b2f4 <_obstack_memory_used@@Base+0x16f54>
  46b37c:	cmp	w5, #0x2e
  46b380:	b.eq	46b654 <_obstack_memory_used@@Base+0x172b4>  // b.none
  46b384:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b388:	add	x1, x1, #0xb60
  46b38c:	ldrb	w1, [x1, w5, sxtw]
  46b390:	cmp	w1, #0x8
  46b394:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b398:	mov	w3, w20
  46b39c:	mov	x19, x4
  46b3a0:	ldr	x0, [x0]
  46b3a4:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b3a8:	sub	w0, w5, #0x30
  46b3ac:	mov	w3, w20
  46b3b0:	mov	x19, x4
  46b3b4:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b3b8:	cmp	w20, #0x1
  46b3bc:	b.le	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b3c0:	sub	w3, w20, #0x2
  46b3c4:	sub	w20, w20, #0x1
  46b3c8:	sub	w5, w5, #0x1a
  46b3cc:	cmp	w5, #0x14
  46b3d0:	ldr	x1, [x22, w20, sxtw #3]
  46b3d4:	ldr	x0, [x22, w3, sxtw #3]
  46b3d8:	b.hi	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.pmore
  46b3dc:	ldrh	w2, [x25, w5, uxtw #1]
  46b3e0:	adr	x5, 46b3ec <_obstack_memory_used@@Base+0x1704c>
  46b3e4:	add	x2, x5, w2, sxth #2
  46b3e8:	br	x2
  46b3ec:	cbz	w20, 46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b3f0:	sub	w3, w20, #0x1
  46b3f4:	cmp	w5, #0x20
  46b3f8:	ldr	x0, [x22, w3, sxtw #3]
  46b3fc:	b.eq	46b950 <_obstack_memory_used@@Base+0x175b0>  // b.none
  46b400:	b.hi	46b420 <_obstack_memory_used@@Base+0x17080>  // b.pmore
  46b404:	cmp	w5, #0x19
  46b408:	b.eq	46b684 <_obstack_memory_used@@Base+0x172e4>  // b.none
  46b40c:	cmp	w5, #0x1f
  46b410:	b.ne	46b5f4 <_obstack_memory_used@@Base+0x17254>  // b.any
  46b414:	neg	x0, x0
  46b418:	mov	x19, x4
  46b41c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b420:	cmp	w5, #0x23
  46b424:	b.eq	46b628 <_obstack_memory_used@@Base+0x17288>  // b.none
  46b428:	cmp	w5, #0x94
  46b42c:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b430:	ldrb	w1, [x19, #1]
  46b434:	add	x19, x19, #0x2
  46b438:	cmp	w1, #0x4
  46b43c:	b.eq	46b840 <_obstack_memory_used@@Base+0x174a0>  // b.none
  46b440:	b.hi	46b96c <_obstack_memory_used@@Base+0x175cc>  // b.pmore
  46b444:	cmp	w1, #0x1
  46b448:	b.ne	46b95c <_obstack_memory_used@@Base+0x175bc>  // b.any
  46b44c:	ldrb	w0, [x0]
  46b450:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b454:	cmp	w20, #0x2
  46b458:	b.le	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b45c:	sub	w1, w20, #0x2
  46b460:	sub	w2, w20, #0x1
  46b464:	sub	w0, w20, #0x3
  46b468:	mov	x19, x4
  46b46c:	sxtw	x1, w1
  46b470:	sxtw	x2, w2
  46b474:	sxtw	x0, w0
  46b478:	ldr	x5, [x22, x1, lsl #3]
  46b47c:	ldr	x3, [x22, x2, lsl #3]
  46b480:	ldr	x4, [x22, x0, lsl #3]
  46b484:	str	x5, [x22, x2, lsl #3]
  46b488:	str	x4, [x22, x1, lsl #3]
  46b48c:	str	x3, [x22, x0, lsl #3]
  46b490:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b494:	cmp	w20, #0x1
  46b498:	b.le	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b49c:	sub	w0, w20, #0x2
  46b4a0:	sub	w1, w20, #0x1
  46b4a4:	mov	x19, x4
  46b4a8:	sxtw	x0, w0
  46b4ac:	sxtw	x1, w1
  46b4b0:	ldr	x3, [x22, x0, lsl #3]
  46b4b4:	ldr	x2, [x22, x1, lsl #3]
  46b4b8:	str	x3, [x22, x1, lsl #3]
  46b4bc:	str	x2, [x22, x0, lsl #3]
  46b4c0:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b4c4:	ldrb	w3, [x19, #1]
  46b4c8:	sub	w1, w20, #0x1
  46b4cc:	add	x19, x19, #0x2
  46b4d0:	sxtw	x2, w1
  46b4d4:	cmp	x3, w1, sxtw
  46b4d8:	b.ge	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.tcont
  46b4dc:	sub	x1, x2, x3
  46b4e0:	mov	w3, w20
  46b4e4:	ldr	x0, [x22, x1, lsl #3]
  46b4e8:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b4ec:	cmp	w20, #0x1
  46b4f0:	b.le	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b4f4:	sub	w0, w20, #0x2
  46b4f8:	mov	x19, x4
  46b4fc:	mov	w3, w20
  46b500:	ldr	x0, [x22, w0, sxtw #3]
  46b504:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b508:	cbz	w20, 46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b50c:	sub	w20, w20, #0x1
  46b510:	mov	x19, x4
  46b514:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b518:	cbz	w20, 46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b51c:	sub	w0, w20, #0x1
  46b520:	mov	x19, x4
  46b524:	mov	w3, w20
  46b528:	ldr	x0, [x22, w0, sxtw #3]
  46b52c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b530:	ldursh	x1, [x19, #1]
  46b534:	add	x19, x19, #0x3
  46b538:	add	x19, x19, x1
  46b53c:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b540:	ldrb	w0, [x19, #1]
  46b544:	mov	w3, w20
  46b548:	add	x19, x19, #0x2
  46b54c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b550:	ldrb	w26, [x19, #1]
  46b554:	mov	x1, x24
  46b558:	mov	w0, w26
  46b55c:	bl	46a1d0 <_obstack_memory_used@@Base+0x15e30>
  46b560:	add	x2, x19, #0x2
  46b564:	mov	x1, x0
  46b568:	add	x3, sp, #0x58
  46b56c:	mov	w0, w26
  46b570:	bl	46a070 <_obstack_memory_used@@Base+0x15cd0>
  46b574:	mov	x19, x0
  46b578:	mov	w3, w20
  46b57c:	ldr	x0, [sp, #88]
  46b580:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b584:	cbz	w20, 46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b588:	sub	w20, w20, #0x1
  46b58c:	add	x1, x19, #0x3
  46b590:	ldr	x0, [x22, w20, sxtw #3]
  46b594:	cbz	x0, 46b620 <_obstack_memory_used@@Base+0x17280>
  46b598:	ldursh	x19, [x19, #1]
  46b59c:	add	x19, x1, x19
  46b5a0:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b5a4:	ldursw	x0, [x19, #1]
  46b5a8:	mov	w3, w20
  46b5ac:	add	x19, x19, #0x5
  46b5b0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b5b4:	ldur	w0, [x19, #1]
  46b5b8:	mov	w3, w20
  46b5bc:	add	x19, x19, #0x5
  46b5c0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b5c4:	ldursh	x0, [x19, #1]
  46b5c8:	mov	w3, w20
  46b5cc:	add	x19, x19, #0x3
  46b5d0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b5d4:	ldurh	w0, [x19, #1]
  46b5d8:	mov	w3, w20
  46b5dc:	add	x19, x19, #0x3
  46b5e0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b5e4:	ldrsb	x0, [x19, #1]
  46b5e8:	mov	w3, w20
  46b5ec:	add	x19, x19, #0x2
  46b5f0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b5f4:	cmp	w5, #0x6
  46b5f8:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b5fc:	mov	x19, x4
  46b600:	ldr	x0, [x0]
  46b604:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b608:	mov	x0, #0xffffffffffffffff    	// #-1
  46b60c:	tst	x2, #0x40
  46b610:	lsl	x0, x0, x1
  46b614:	orr	x0, x3, x0
  46b618:	csel	x3, x0, x3, ne  // ne = any
  46b61c:	b	46b2a8 <_obstack_memory_used@@Base+0x16f08>
  46b620:	mov	x19, x1
  46b624:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b628:	mov	x6, #0x0                   	// #0
  46b62c:	mov	w2, #0x0                   	// #0
  46b630:	ldrb	w5, [x4], #1
  46b634:	and	x1, x5, #0x7f
  46b638:	lsl	x1, x1, x2
  46b63c:	add	w2, w2, #0x7
  46b640:	orr	x6, x6, x1
  46b644:	tbnz	w5, #7, 46b630 <_obstack_memory_used@@Base+0x17290>
  46b648:	add	x0, x0, x6
  46b64c:	mov	x19, x4
  46b650:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b654:	cntd	x0
  46b658:	mov	w3, w20
  46b65c:	mov	x19, x4
  46b660:	sxtw	x0, w0
  46b664:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b668:	cntd	x0
  46b66c:	sxtw	x0, w0
  46b670:	b	46b2f0 <_obstack_memory_used@@Base+0x16f50>
  46b674:	mov	x0, x3
  46b678:	ldp	x29, x30, [sp]
  46b67c:	add	sp, sp, #0x260
  46b680:	ret
  46b684:	cmp	x0, #0x0
  46b688:	mov	x19, x4
  46b68c:	cneg	x0, x0, lt  // lt = tstop
  46b690:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b694:	mov	x19, x4
  46b698:	mov	w1, #0x0                   	// #0
  46b69c:	mov	x4, #0x0                   	// #0
  46b6a0:	ldrb	w2, [x19], #1
  46b6a4:	and	x0, x2, #0x7f
  46b6a8:	lsl	x0, x0, x1
  46b6ac:	add	w1, w1, #0x7
  46b6b0:	orr	x4, x4, x0
  46b6b4:	tbnz	w2, #7, 46b6a0 <_obstack_memory_used@@Base+0x17300>
  46b6b8:	mov	x3, #0x0                   	// #0
  46b6bc:	mov	w1, #0x0                   	// #0
  46b6c0:	ldrb	w2, [x19], #1
  46b6c4:	and	x0, x2, #0x7f
  46b6c8:	lsl	x0, x0, x1
  46b6cc:	add	w1, w1, #0x7
  46b6d0:	orr	x3, x3, x0
  46b6d4:	tbnz	w2, #7, 46b6c0 <_obstack_memory_used@@Base+0x17320>
  46b6d8:	cmp	w1, #0x3f
  46b6dc:	b.hi	46b6f4 <_obstack_memory_used@@Base+0x17354>  // b.pmore
  46b6e0:	mov	x0, #0xffffffffffffffff    	// #-1
  46b6e4:	tst	x2, #0x40
  46b6e8:	lsl	x0, x0, x1
  46b6ec:	orr	x0, x3, x0
  46b6f0:	csel	x3, x0, x3, ne  // ne = any
  46b6f4:	cmp	w4, #0x61
  46b6f8:	mov	w1, w4
  46b6fc:	b.gt	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b700:	ldr	x2, [x24, #832]
  46b704:	sxtw	x4, w4
  46b708:	ldr	x0, [x24, x4, lsl #3]
  46b70c:	tbz	x2, #62, 46b71c <_obstack_memory_used@@Base+0x1737c>
  46b710:	add	x4, x24, x4
  46b714:	ldrb	w2, [x4, #856]
  46b718:	cbnz	w2, 46b73c <_obstack_memory_used@@Base+0x1739c>
  46b71c:	cmp	w1, #0x2e
  46b720:	b.eq	46b930 <_obstack_memory_used@@Base+0x17590>  // b.none
  46b724:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b728:	add	x2, x2, #0xb60
  46b72c:	ldrb	w1, [x2, w1, sxtw]
  46b730:	cmp	w1, #0x8
  46b734:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b738:	ldr	x0, [x0]
  46b73c:	add	x0, x3, x0
  46b740:	mov	w3, w20
  46b744:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b748:	mov	x19, x4
  46b74c:	mov	x0, #0x0                   	// #0
  46b750:	mov	w2, #0x0                   	// #0
  46b754:	nop
  46b758:	ldrb	w4, [x19], #1
  46b75c:	and	x1, x4, #0x7f
  46b760:	lsl	x1, x1, x2
  46b764:	add	w2, w2, #0x7
  46b768:	orr	x0, x0, x1
  46b76c:	tbnz	w4, #7, 46b758 <_obstack_memory_used@@Base+0x173b8>
  46b770:	mov	w3, w20
  46b774:	cmp	w2, #0x3f
  46b778:	b.hi	46b310 <_obstack_memory_used@@Base+0x16f70>  // b.pmore
  46b77c:	tbz	w4, #6, 46b310 <_obstack_memory_used@@Base+0x16f70>
  46b780:	mov	x1, #0xffffffffffffffff    	// #-1
  46b784:	lsl	x2, x1, x2
  46b788:	orr	x0, x0, x2
  46b78c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b790:	mov	x19, x4
  46b794:	mov	x0, #0x0                   	// #0
  46b798:	mov	w2, #0x0                   	// #0
  46b79c:	nop
  46b7a0:	ldrb	w3, [x19], #1
  46b7a4:	and	x1, x3, #0x7f
  46b7a8:	lsl	x1, x1, x2
  46b7ac:	add	w2, w2, #0x7
  46b7b0:	orr	x0, x0, x1
  46b7b4:	tbnz	w3, #7, 46b7a0 <_obstack_memory_used@@Base+0x17400>
  46b7b8:	mov	w3, w20
  46b7bc:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b7c0:	mov	x19, x4
  46b7c4:	mov	x3, #0x0                   	// #0
  46b7c8:	mov	w1, #0x0                   	// #0
  46b7cc:	nop
  46b7d0:	ldrb	w2, [x19], #1
  46b7d4:	and	x0, x2, #0x7f
  46b7d8:	lsl	x0, x0, x1
  46b7dc:	add	w1, w1, #0x7
  46b7e0:	orr	x3, x3, x0
  46b7e4:	tbnz	w2, #7, 46b7d0 <_obstack_memory_used@@Base+0x17430>
  46b7e8:	cmp	w3, #0x61
  46b7ec:	mov	w1, w3
  46b7f0:	b.gt	46b26c <_obstack_memory_used@@Base+0x16ecc>
  46b7f4:	ldr	x2, [x24, #832]
  46b7f8:	sxtw	x3, w3
  46b7fc:	ldr	x0, [x24, x3, lsl #3]
  46b800:	tbz	x2, #62, 46b810 <_obstack_memory_used@@Base+0x17470>
  46b804:	add	x3, x24, x3
  46b808:	ldrb	w2, [x3, #856]
  46b80c:	cbnz	w2, 46b740 <_obstack_memory_used@@Base+0x173a0>
  46b810:	cmp	w1, #0x2e
  46b814:	b.eq	46b940 <_obstack_memory_used@@Base+0x175a0>  // b.none
  46b818:	adrp	x2, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46b81c:	add	x2, x2, #0xb60
  46b820:	ldrb	w1, [x2, w1, sxtw]
  46b824:	cmp	w1, #0x8
  46b828:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b82c:	mov	w3, w20
  46b830:	ldr	x0, [x0]
  46b834:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b838:	mov	x19, x4
  46b83c:	b	46b320 <_obstack_memory_used@@Base+0x16f80>
  46b840:	ldr	w0, [x0]
  46b844:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b848:	cmp	x0, x1
  46b84c:	mov	x19, x4
  46b850:	cset	x0, ne  // ne = any
  46b854:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b858:	cmp	x0, x1
  46b85c:	mov	x19, x4
  46b860:	cset	x0, lt  // lt = tstop
  46b864:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b868:	cmp	x0, x1
  46b86c:	mov	x19, x4
  46b870:	cset	x0, le
  46b874:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b878:	cmp	x0, x1
  46b87c:	mov	x19, x4
  46b880:	cset	x0, gt
  46b884:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b888:	cmp	x0, x1
  46b88c:	mov	x19, x4
  46b890:	cset	x0, ge  // ge = tcont
  46b894:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b898:	cmp	x0, x1
  46b89c:	mov	x19, x4
  46b8a0:	cset	x0, eq  // eq = none
  46b8a4:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8a8:	eor	x0, x0, x1
  46b8ac:	mov	x19, x4
  46b8b0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8b4:	mov	x19, x4
  46b8b8:	asr	x0, x0, x1
  46b8bc:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8c0:	mov	x19, x4
  46b8c4:	lsr	x0, x0, x1
  46b8c8:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8cc:	mov	x19, x4
  46b8d0:	lsl	x0, x0, x1
  46b8d4:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8d8:	add	x0, x0, x1
  46b8dc:	mov	x19, x4
  46b8e0:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8e4:	orr	x0, x0, x1
  46b8e8:	mov	x19, x4
  46b8ec:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8f0:	mul	x0, x0, x1
  46b8f4:	mov	x19, x4
  46b8f8:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b8fc:	udiv	x2, x0, x1
  46b900:	mov	x19, x4
  46b904:	msub	x0, x2, x1, x0
  46b908:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b90c:	sub	x0, x0, x1
  46b910:	mov	x19, x4
  46b914:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b918:	sdiv	x0, x0, x1
  46b91c:	mov	x19, x4
  46b920:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b924:	and	x0, x0, x1
  46b928:	mov	x19, x4
  46b92c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b930:	cntd	x0
  46b934:	sxtw	x0, w0
  46b938:	add	x0, x3, x0
  46b93c:	b	46b740 <_obstack_memory_used@@Base+0x173a0>
  46b940:	cntd	x0
  46b944:	mov	w3, w20
  46b948:	sxtw	x0, w0
  46b94c:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b950:	mvn	x0, x0
  46b954:	mov	x19, x4
  46b958:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b95c:	cmp	w1, #0x2
  46b960:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b964:	ldrh	w0, [x0]
  46b968:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b96c:	cmp	w1, #0x8
  46b970:	b.ne	46b26c <_obstack_memory_used@@Base+0x16ecc>  // b.any
  46b974:	ldr	x0, [x0]
  46b978:	b	46b310 <_obstack_memory_used@@Base+0x16f70>
  46b97c:	nop
  46b980:	sub	sp, sp, #0x440
  46b984:	mov	x2, #0x3c0                 	// #960
  46b988:	stp	x29, x30, [sp]
  46b98c:	mov	x29, sp
  46b990:	stp	x27, x28, [sp, #80]
  46b994:	add	x28, sp, #0x80
  46b998:	mov	x27, x0
  46b99c:	stp	x19, x20, [sp, #16]
  46b9a0:	stp	x21, x22, [sp, #32]
  46b9a4:	stp	x23, x24, [sp, #48]
  46b9a8:	stp	x25, x26, [sp, #64]
  46b9ac:	str	x1, [sp, #104]
  46b9b0:	mov	x1, x0
  46b9b4:	mov	x0, x28
  46b9b8:	bl	402620 <memcpy@plt>
  46b9bc:	ldr	x1, [sp, #960]
  46b9c0:	tbz	x1, #62, 46b9cc <_obstack_memory_used@@Base+0x1762c>
  46b9c4:	ldrb	w0, [sp, #1015]
  46b9c8:	cbnz	w0, 46b9d4 <_obstack_memory_used@@Base+0x17634>
  46b9cc:	ldr	x0, [x28, #248]
  46b9d0:	cbz	x0, 46bca0 <_obstack_memory_used@@Base+0x17900>
  46b9d4:	ldr	x0, [x27, #832]
  46b9d8:	tbz	x0, #62, 46b9e0 <_obstack_memory_used@@Base+0x17640>
  46b9dc:	strb	wzr, [x27, #887]
  46b9e0:	ldr	x0, [sp, #104]
  46b9e4:	ldr	w0, [x0, #1600]
  46b9e8:	str	xzr, [x27, #248]
  46b9ec:	cmp	w0, #0x1
  46b9f0:	b.ne	46ba40 <_obstack_memory_used@@Base+0x176a0>  // b.any
  46b9f4:	ldr	x0, [sp, #104]
  46b9f8:	ldr	x0, [x0, #1584]
  46b9fc:	cmp	w0, #0x61
  46ba00:	b.gt	46bc08 <_obstack_memory_used@@Base+0x17868>
  46ba04:	sxtw	x2, w0
  46ba08:	ldr	x3, [x28, x2, lsl #3]
  46ba0c:	tbnz	x1, #62, 46bc80 <_obstack_memory_used@@Base+0x178e0>
  46ba10:	cmp	w0, #0x2e
  46ba14:	b.eq	46bc94 <_obstack_memory_used@@Base+0x178f4>  // b.none
  46ba18:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46ba1c:	add	x0, x0, #0xb60
  46ba20:	ldrb	w0, [x0, x2]
  46ba24:	cmp	w0, #0x8
  46ba28:	b.ne	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.any
  46ba2c:	ldr	x3, [x3]
  46ba30:	ldr	x0, [sp, #104]
  46ba34:	ldr	x0, [x0, #1576]
  46ba38:	add	x22, x3, x0
  46ba3c:	b	46ba84 <_obstack_memory_used@@Base+0x176e4>
  46ba40:	cmp	w0, #0x2
  46ba44:	b.ne	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.any
  46ba48:	ldr	x0, [sp, #104]
  46ba4c:	mov	x1, #0x0                   	// #0
  46ba50:	mov	w3, #0x0                   	// #0
  46ba54:	ldr	x0, [x0, #1592]
  46ba58:	ldrb	w4, [x0], #1
  46ba5c:	and	x2, x4, #0x7f
  46ba60:	lsl	x2, x2, x3
  46ba64:	add	w3, w3, #0x7
  46ba68:	orr	x1, x1, x2
  46ba6c:	tbnz	w4, #7, 46ba58 <_obstack_memory_used@@Base+0x176b8>
  46ba70:	add	x1, x0, x1
  46ba74:	mov	x2, x28
  46ba78:	mov	x3, #0x0                   	// #0
  46ba7c:	bl	46b208 <_obstack_memory_used@@Base+0x16e68>
  46ba80:	mov	x22, x0
  46ba84:	ldr	x25, [sp, #104]
  46ba88:	adrp	x23, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46ba8c:	add	x26, x27, #0x358
  46ba90:	add	x20, x23, #0xb60
  46ba94:	add	x21, sp, #0x3d8
  46ba98:	mov	x24, #0x0                   	// #0
  46ba9c:	mov	w19, #0x1                   	// #1
  46baa0:	str	x22, [x27, #784]
  46baa4:	nop
  46baa8:	ldr	w2, [x25, #8]
  46baac:	cmp	w2, #0x3
  46bab0:	b.eq	46bb54 <_obstack_memory_used@@Base+0x177b4>  // b.none
  46bab4:	b.hi	46bb98 <_obstack_memory_used@@Base+0x177f8>  // b.pmore
  46bab8:	cmp	w2, #0x1
  46babc:	b.eq	46bc0c <_obstack_memory_used@@Base+0x1786c>  // b.none
  46bac0:	cmp	w2, #0x2
  46bac4:	b.ne	46baec <_obstack_memory_used@@Base+0x1774c>  // b.any
  46bac8:	ldr	x0, [x25]
  46bacc:	ldrb	w2, [x21, w0, sxtw]
  46bad0:	sxtw	x1, w0
  46bad4:	cbnz	w2, 46bc24 <_obstack_memory_used@@Base+0x17884>
  46bad8:	ldr	x2, [x27, #832]
  46badc:	ldr	x0, [x28, x1, lsl #3]
  46bae0:	tbnz	x2, #62, 46bb90 <_obstack_memory_used@@Base+0x177f0>
  46bae4:	nop
  46bae8:	str	x0, [x27, x24, lsl #3]
  46baec:	add	x24, x24, #0x1
  46baf0:	add	x25, x25, #0x10
  46baf4:	cmp	x24, #0x62
  46baf8:	add	x26, x26, #0x1
  46bafc:	b.ne	46baa8 <_obstack_memory_used@@Base+0x17708>  // b.any
  46bb00:	ldr	x3, [sp, #104]
  46bb04:	ldr	x0, [x27, #832]
  46bb08:	ldrb	w2, [x3, #1651]
  46bb0c:	orr	x1, x0, #0x8000000000000000
  46bb10:	and	x0, x0, #0x7fffffffffffffff
  46bb14:	cmp	w2, #0x0
  46bb18:	csel	x0, x0, x1, eq  // eq = none
  46bb1c:	ldp	x29, x30, [sp]
  46bb20:	orr	x1, x0, #0x2000000000000000
  46bb24:	ldp	x19, x20, [sp, #16]
  46bb28:	ldp	x21, x22, [sp, #32]
  46bb2c:	ldp	x23, x24, [sp, #48]
  46bb30:	ldp	x25, x26, [sp, #64]
  46bb34:	str	x0, [x27, #832]
  46bb38:	ldr	x2, [x3, #544]
  46bb3c:	tst	x2, #0x1
  46bb40:	csel	x0, x1, x0, ne  // ne = any
  46bb44:	str	x0, [x27, #832]
  46bb48:	ldp	x27, x28, [sp, #80]
  46bb4c:	add	sp, sp, #0x440
  46bb50:	ret
  46bb54:	ldr	x0, [x25]
  46bb58:	mov	x1, #0x0                   	// #0
  46bb5c:	mov	w4, #0x0                   	// #0
  46bb60:	ldrb	w5, [x0], #1
  46bb64:	and	x2, x5, #0x7f
  46bb68:	lsl	x2, x2, x4
  46bb6c:	add	w4, w4, #0x7
  46bb70:	orr	x1, x1, x2
  46bb74:	tbnz	w5, #7, 46bb60 <_obstack_memory_used@@Base+0x177c0>
  46bb78:	add	x1, x0, x1
  46bb7c:	mov	x3, x22
  46bb80:	mov	x2, x28
  46bb84:	bl	46b208 <_obstack_memory_used@@Base+0x16e68>
  46bb88:	ldr	x1, [x27, #832]
  46bb8c:	tbz	x1, #62, 46bae8 <_obstack_memory_used@@Base+0x17748>
  46bb90:	strb	wzr, [x26]
  46bb94:	b	46bae8 <_obstack_memory_used@@Base+0x17748>
  46bb98:	cmp	w2, #0x4
  46bb9c:	b.eq	46bbf4 <_obstack_memory_used@@Base+0x17854>  // b.none
  46bba0:	cmp	w2, #0x5
  46bba4:	b.ne	46baec <_obstack_memory_used@@Base+0x1774c>  // b.any
  46bba8:	ldr	x0, [x25]
  46bbac:	mov	x1, #0x0                   	// #0
  46bbb0:	mov	w4, #0x0                   	// #0
  46bbb4:	nop
  46bbb8:	ldrb	w5, [x0], #1
  46bbbc:	and	x2, x5, #0x7f
  46bbc0:	lsl	x2, x2, x4
  46bbc4:	add	w4, w4, #0x7
  46bbc8:	orr	x1, x1, x2
  46bbcc:	tbnz	w5, #7, 46bbb8 <_obstack_memory_used@@Base+0x17818>
  46bbd0:	add	x1, x0, x1
  46bbd4:	mov	x3, x22
  46bbd8:	mov	x2, x28
  46bbdc:	bl	46b208 <_obstack_memory_used@@Base+0x16e68>
  46bbe0:	ldrb	w1, [x24, x20]
  46bbe4:	cmp	w1, #0x8
  46bbe8:	b.hi	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.pmore
  46bbec:	strb	w19, [x26]
  46bbf0:	b	46bae8 <_obstack_memory_used@@Base+0x17748>
  46bbf4:	ldr	x0, [x25]
  46bbf8:	ldrb	w1, [x24, x20]
  46bbfc:	add	x0, x22, x0
  46bc00:	cmp	w1, #0x8
  46bc04:	b.ls	46bbec <_obstack_memory_used@@Base+0x1784c>  // b.plast
  46bc08:	bl	402990 <abort@plt>
  46bc0c:	ldr	x1, [x27, #832]
  46bc10:	ldr	x0, [x25]
  46bc14:	add	x0, x22, x0
  46bc18:	tbz	x1, #62, 46bae8 <_obstack_memory_used@@Base+0x17748>
  46bc1c:	strb	wzr, [x26]
  46bc20:	b	46bae8 <_obstack_memory_used@@Base+0x17748>
  46bc24:	cmp	w0, #0x61
  46bc28:	b.gt	46bc08 <_obstack_memory_used@@Base+0x17868>
  46bc2c:	ldr	x4, [sp, #960]
  46bc30:	ldr	x2, [x28, x1, lsl #3]
  46bc34:	tbz	x4, #62, 46bc58 <_obstack_memory_used@@Base+0x178b8>
  46bc38:	mov	x0, x2
  46bc3c:	nop
  46bc40:	add	x1, x23, #0xb60
  46bc44:	ldrb	w1, [x24, x1]
  46bc48:	cmp	w1, #0x8
  46bc4c:	b.hi	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.pmore
  46bc50:	strb	w19, [x26]
  46bc54:	b	46bae8 <_obstack_memory_used@@Base+0x17748>
  46bc58:	cmp	w0, #0x2e
  46bc5c:	b.eq	46bc74 <_obstack_memory_used@@Base+0x178d4>  // b.none
  46bc60:	ldrb	w0, [x20, x1]
  46bc64:	cmp	w0, #0x8
  46bc68:	b.ne	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.any
  46bc6c:	ldr	x0, [x2]
  46bc70:	b	46bc40 <_obstack_memory_used@@Base+0x178a0>
  46bc74:	cntd	x0
  46bc78:	sxtw	x0, w0
  46bc7c:	b	46bc40 <_obstack_memory_used@@Base+0x178a0>
  46bc80:	add	x1, sp, #0x3d8
  46bc84:	ldrb	w1, [x1, x2]
  46bc88:	cbnz	w1, 46ba30 <_obstack_memory_used@@Base+0x17690>
  46bc8c:	cmp	w0, #0x2e
  46bc90:	b.ne	46ba18 <_obstack_memory_used@@Base+0x17678>  // b.any
  46bc94:	cntd	x0
  46bc98:	sxtw	x3, w0
  46bc9c:	b	46ba30 <_obstack_memory_used@@Base+0x17690>
  46bca0:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46bca4:	ldr	x2, [x27, #784]
  46bca8:	ldrb	w0, [x0, #2943]
  46bcac:	cmp	w0, #0x8
  46bcb0:	b.ne	46bc08 <_obstack_memory_used@@Base+0x17868>  // b.any
  46bcb4:	str	x2, [sp, #120]
  46bcb8:	tbz	x1, #62, 46bcc0 <_obstack_memory_used@@Base+0x17920>
  46bcbc:	strb	wzr, [sp, #1015]
  46bcc0:	add	x0, sp, #0x78
  46bcc4:	str	x0, [x28, #248]
  46bcc8:	b	46b9d4 <_obstack_memory_used@@Base+0x17634>
  46bccc:	nop
  46bcd0:	sub	sp, sp, #0x6d0
  46bcd4:	stp	x29, x30, [sp]
  46bcd8:	mov	x29, sp
  46bcdc:	xpaclri
  46bce0:	stp	x19, x20, [sp, #16]
  46bce4:	mov	x19, x0
  46bce8:	mov	x20, x30
  46bcec:	stp	x21, x22, [sp, #32]
  46bcf0:	mov	x22, x1
  46bcf4:	mov	x21, x2
  46bcf8:	mov	w1, #0x0                   	// #0
  46bcfc:	mov	x2, #0x3c0                 	// #960
  46bd00:	str	x23, [sp, #48]
  46bd04:	bl	402890 <memset@plt>
  46bd08:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  46bd0c:	str	x20, [x19, #792]
  46bd10:	str	x0, [x19, #832]
  46bd14:	add	x23, sp, #0x50
  46bd18:	mov	x1, x23
  46bd1c:	mov	x0, x19
  46bd20:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46bd24:	cbnz	w0, 46bf18 <_obstack_memory_used@@Base+0x17b78>
  46bd28:	adrp	x0, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  46bd2c:	adrp	x20, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46bd30:	ldr	x0, [x0, #3600]
  46bd34:	cbz	x0, 46bdbc <_obstack_memory_used@@Base+0x17a1c>
  46bd38:	add	x0, x20, #0xb60
  46bd3c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x15c60>
  46bd40:	add	x0, x0, #0x64
  46bd44:	add	x1, x1, #0x9f8
  46bd48:	bl	4029f0 <pthread_once@plt>
  46bd4c:	cbnz	w0, 46bdbc <_obstack_memory_used@@Base+0x17a1c>
  46bd50:	add	x20, x20, #0xb60
  46bd54:	ldrb	w0, [x20, #31]
  46bd58:	cmp	w0, #0x8
  46bd5c:	b.ne	46bf18 <_obstack_memory_used@@Base+0x17b78>  // b.any
  46bd60:	ldr	x0, [x19, #832]
  46bd64:	str	x22, [sp, #72]
  46bd68:	tbz	x0, #62, 46bd70 <_obstack_memory_used@@Base+0x179d0>
  46bd6c:	strb	wzr, [x19, #887]
  46bd70:	add	x0, sp, #0x48
  46bd74:	mov	x3, #0x1f                  	// #31
  46bd78:	mov	w2, #0x1                   	// #1
  46bd7c:	str	x0, [x19, #248]
  46bd80:	mov	x1, x23
  46bd84:	mov	x0, x19
  46bd88:	str	xzr, [sp, #1656]
  46bd8c:	str	x3, [sp, #1664]
  46bd90:	str	w2, [sp, #1680]
  46bd94:	bl	46b980 <_obstack_memory_used@@Base+0x175e0>
  46bd98:	mov	x30, x21
  46bd9c:	xpaclri
  46bda0:	ldp	x21, x22, [sp, #32]
  46bda4:	ldr	x23, [sp, #48]
  46bda8:	str	x30, [x19, #792]
  46bdac:	ldp	x29, x30, [sp]
  46bdb0:	ldp	x19, x20, [sp, #16]
  46bdb4:	add	sp, sp, #0x6d0
  46bdb8:	ret
  46bdbc:	ldrb	w0, [x20, #2912]
  46bdc0:	add	x3, x20, #0xb60
  46bdc4:	cbnz	w0, 46bd50 <_obstack_memory_used@@Base+0x179b0>
  46bdc8:	mov	w4, #0x8                   	// #8
  46bdcc:	strb	w4, [x20, #2912]
  46bdd0:	strb	w4, [x3, #1]
  46bdd4:	strb	w4, [x3, #2]
  46bdd8:	strb	w4, [x3, #3]
  46bddc:	strb	w4, [x3, #4]
  46bde0:	strb	w4, [x3, #5]
  46bde4:	strb	w4, [x3, #6]
  46bde8:	strb	w4, [x3, #7]
  46bdec:	strb	w4, [x3, #8]
  46bdf0:	strb	w4, [x3, #9]
  46bdf4:	strb	w4, [x3, #10]
  46bdf8:	strb	w4, [x3, #11]
  46bdfc:	strb	w4, [x3, #12]
  46be00:	strb	w4, [x3, #13]
  46be04:	strb	w4, [x3, #14]
  46be08:	strb	w4, [x3, #15]
  46be0c:	strb	w4, [x3, #16]
  46be10:	strb	w4, [x3, #17]
  46be14:	strb	w4, [x3, #18]
  46be18:	strb	w4, [x3, #19]
  46be1c:	strb	w4, [x3, #20]
  46be20:	strb	w4, [x3, #21]
  46be24:	strb	w4, [x3, #22]
  46be28:	strb	w4, [x3, #23]
  46be2c:	strb	w4, [x3, #24]
  46be30:	strb	w4, [x3, #25]
  46be34:	strb	w4, [x3, #26]
  46be38:	strb	w4, [x3, #27]
  46be3c:	strb	w4, [x3, #28]
  46be40:	strb	w4, [x3, #29]
  46be44:	strb	w4, [x3, #30]
  46be48:	strb	w4, [x3, #31]
  46be4c:	strb	w4, [x3, #64]
  46be50:	strb	w4, [x3, #46]
  46be54:	strb	w4, [x3, #65]
  46be58:	strb	w4, [x3, #66]
  46be5c:	strb	w4, [x3, #67]
  46be60:	strb	w4, [x3, #68]
  46be64:	strb	w4, [x3, #69]
  46be68:	strb	w4, [x3, #70]
  46be6c:	strb	w4, [x3, #71]
  46be70:	strb	w4, [x3, #72]
  46be74:	strb	w4, [x3, #73]
  46be78:	strb	w4, [x3, #74]
  46be7c:	strb	w4, [x3, #75]
  46be80:	strb	w4, [x3, #76]
  46be84:	strb	w4, [x3, #77]
  46be88:	strb	w4, [x3, #78]
  46be8c:	strb	w4, [x3, #79]
  46be90:	strb	w4, [x3, #80]
  46be94:	strb	w4, [x3, #81]
  46be98:	strb	w4, [x3, #82]
  46be9c:	strb	w4, [x3, #83]
  46bea0:	strb	w4, [x3, #84]
  46bea4:	strb	w4, [x3, #85]
  46bea8:	strb	w4, [x3, #86]
  46beac:	strb	w4, [x3, #87]
  46beb0:	strb	w4, [x3, #88]
  46beb4:	strb	w4, [x3, #89]
  46beb8:	strb	w4, [x3, #90]
  46bebc:	strb	w4, [x3, #91]
  46bec0:	strb	w4, [x3, #92]
  46bec4:	strb	w4, [x3, #93]
  46bec8:	strb	w4, [x3, #94]
  46becc:	strb	w4, [x3, #95]
  46bed0:	strb	w4, [x3, #48]
  46bed4:	strb	w4, [x3, #49]
  46bed8:	strb	w4, [x3, #50]
  46bedc:	strb	w4, [x3, #51]
  46bee0:	strb	w4, [x3, #52]
  46bee4:	strb	w4, [x3, #53]
  46bee8:	strb	w4, [x3, #54]
  46beec:	strb	w4, [x3, #55]
  46bef0:	strb	w4, [x3, #56]
  46bef4:	strb	w4, [x3, #57]
  46bef8:	strb	w4, [x3, #58]
  46befc:	strb	w4, [x3, #59]
  46bf00:	strb	w4, [x3, #60]
  46bf04:	strb	w4, [x3, #61]
  46bf08:	strb	w4, [x3, #62]
  46bf0c:	strb	w4, [x3, #63]
  46bf10:	strb	w4, [x3, #96]
  46bf14:	b	46bd50 <_obstack_memory_used@@Base+0x179b0>
  46bf18:	bl	402990 <abort@plt>
  46bf1c:	nop
  46bf20:	stp	x29, x30, [sp, #-32]!
  46bf24:	mov	x29, sp
  46bf28:	stp	x19, x20, [sp, #16]
  46bf2c:	mov	x20, x1
  46bf30:	mov	x19, x0
  46bf34:	bl	46b980 <_obstack_memory_used@@Base+0x175e0>
  46bf38:	ldr	x0, [x20, #1640]
  46bf3c:	add	x1, x20, x0, lsl #4
  46bf40:	ldr	w1, [x1, #8]
  46bf44:	cmp	w1, #0x6
  46bf48:	b.ne	46bf5c <_obstack_memory_used@@Base+0x17bbc>  // b.any
  46bf4c:	str	xzr, [x19, #792]
  46bf50:	ldp	x19, x20, [sp, #16]
  46bf54:	ldp	x29, x30, [sp], #32
  46bf58:	ret
  46bf5c:	cmp	w0, #0x61
  46bf60:	b.gt	46bfd0 <_obstack_memory_used@@Base+0x17c30>
  46bf64:	ldr	x2, [x19, #832]
  46bf68:	sxtw	x1, w0
  46bf6c:	ldr	x17, [x19, x1, lsl #3]
  46bf70:	tbz	x2, #62, 46bf80 <_obstack_memory_used@@Base+0x17be0>
  46bf74:	add	x2, x19, x1
  46bf78:	ldrb	w2, [x2, #856]
  46bf7c:	cbnz	w2, 46bfa0 <_obstack_memory_used@@Base+0x17c00>
  46bf80:	cmp	w0, #0x2e
  46bf84:	b.eq	46bfc4 <_obstack_memory_used@@Base+0x17c24>  // b.none
  46bf88:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46bf8c:	add	x0, x0, #0xb60
  46bf90:	ldrb	w0, [x0, x1]
  46bf94:	cmp	w0, #0x8
  46bf98:	b.ne	46bfd0 <_obstack_memory_used@@Base+0x17c30>  // b.any
  46bf9c:	ldr	x17, [x17]
  46bfa0:	ldr	x0, [x20, #544]
  46bfa4:	str	x17, [x19, #792]
  46bfa8:	tbz	w0, #0, 46bfb4 <_obstack_memory_used@@Base+0x17c14>
  46bfac:	ldr	x16, [x19, #784]
  46bfb0:	autia1716
  46bfb4:	str	x17, [x19, #792]
  46bfb8:	ldp	x19, x20, [sp, #16]
  46bfbc:	ldp	x29, x30, [sp], #32
  46bfc0:	ret
  46bfc4:	cntd	x0
  46bfc8:	sxtw	x17, w0
  46bfcc:	b	46bfa0 <_obstack_memory_used@@Base+0x17c00>
  46bfd0:	bl	402990 <abort@plt>
  46bfd4:	nop
  46bfd8:	sub	sp, sp, #0x6c0
  46bfdc:	stp	x29, x30, [sp]
  46bfe0:	mov	x29, sp
  46bfe4:	stp	x19, x20, [sp, #16]
  46bfe8:	mov	x19, x1
  46bfec:	stp	x21, x22, [sp, #32]
  46bff0:	mov	x21, x0
  46bff4:	add	x22, sp, #0x40
  46bff8:	stp	x23, x24, [sp, #48]
  46bffc:	mov	x24, x2
  46c000:	mov	x23, #0x1                   	// #1
  46c004:	nop
  46c008:	mov	x1, x22
  46c00c:	mov	x0, x19
  46c010:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46c014:	ldr	x3, [x19, #784]
  46c018:	ldr	x1, [x19, #832]
  46c01c:	ldr	x2, [x21, #24]
  46c020:	sub	x1, x3, x1, lsr #63
  46c024:	cmp	x2, x1
  46c028:	cset	w20, eq  // eq = none
  46c02c:	lsl	w20, w20, #2
  46c030:	cbnz	w0, 46c07c <_obstack_memory_used@@Base+0x17cdc>
  46c034:	ldr	x5, [sp, #1680]
  46c038:	cbz	x5, 46c064 <_obstack_memory_used@@Base+0x17cc4>
  46c03c:	ldr	x2, [x21]
  46c040:	mov	x4, x19
  46c044:	mov	x3, x21
  46c048:	orr	w1, w20, #0x2
  46c04c:	mov	w0, #0x1                   	// #1
  46c050:	blr	x5
  46c054:	cmp	w0, #0x7
  46c058:	b.eq	46c098 <_obstack_memory_used@@Base+0x17cf8>  // b.none
  46c05c:	cmp	w0, #0x8
  46c060:	b.ne	46c07c <_obstack_memory_used@@Base+0x17cdc>  // b.any
  46c064:	cbnz	w20, 46c0b4 <_obstack_memory_used@@Base+0x17d14>
  46c068:	add	x23, x23, #0x1
  46c06c:	mov	x1, x22
  46c070:	mov	x0, x19
  46c074:	bl	46bf20 <_obstack_memory_used@@Base+0x17b80>
  46c078:	b	46c008 <_obstack_memory_used@@Base+0x17c68>
  46c07c:	mov	w0, #0x2                   	// #2
  46c080:	ldp	x29, x30, [sp]
  46c084:	ldp	x19, x20, [sp, #16]
  46c088:	ldp	x21, x22, [sp, #32]
  46c08c:	ldp	x23, x24, [sp, #48]
  46c090:	add	sp, sp, #0x6c0
  46c094:	ret
  46c098:	str	x23, [x24]
  46c09c:	ldp	x29, x30, [sp]
  46c0a0:	ldp	x19, x20, [sp, #16]
  46c0a4:	ldp	x21, x22, [sp, #32]
  46c0a8:	ldp	x23, x24, [sp, #48]
  46c0ac:	add	sp, sp, #0x6c0
  46c0b0:	ret
  46c0b4:	bl	402990 <abort@plt>
  46c0b8:	sub	sp, sp, #0x6d0
  46c0bc:	stp	x29, x30, [sp]
  46c0c0:	mov	x29, sp
  46c0c4:	stp	x19, x20, [sp, #16]
  46c0c8:	mov	x20, x0
  46c0cc:	stp	x21, x22, [sp, #32]
  46c0d0:	mov	x21, x1
  46c0d4:	add	x22, sp, #0x50
  46c0d8:	stp	x23, x24, [sp, #48]
  46c0dc:	mov	x23, #0x1                   	// #1
  46c0e0:	stp	x25, x26, [sp, #64]
  46c0e4:	mov	x26, x2
  46c0e8:	ldp	x25, x24, [x0, #16]
  46c0ec:	b	46c140 <_obstack_memory_used@@Base+0x17da0>
  46c0f0:	blr	x25
  46c0f4:	mov	w2, w0
  46c0f8:	mov	x4, x21
  46c0fc:	mov	x3, x20
  46c100:	mov	w1, #0xa                   	// #10
  46c104:	mov	w0, #0x1                   	// #1
  46c108:	cbnz	w2, 46c18c <_obstack_memory_used@@Base+0x17dec>
  46c10c:	ldr	x5, [sp, #1696]
  46c110:	cbz	x5, 46c130 <_obstack_memory_used@@Base+0x17d90>
  46c114:	ldr	x2, [x20]
  46c118:	blr	x5
  46c11c:	mov	w19, w0
  46c120:	cmp	w0, #0x7
  46c124:	b.eq	46c1b0 <_obstack_memory_used@@Base+0x17e10>  // b.none
  46c128:	cmp	w0, #0x8
  46c12c:	b.ne	46c18c <_obstack_memory_used@@Base+0x17dec>  // b.any
  46c130:	add	x23, x23, #0x1
  46c134:	mov	x1, x22
  46c138:	mov	x0, x21
  46c13c:	bl	46bf20 <_obstack_memory_used@@Base+0x17b80>
  46c140:	mov	x1, x22
  46c144:	mov	x0, x21
  46c148:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46c14c:	cmp	w0, #0x0
  46c150:	mov	w19, w0
  46c154:	mov	x5, x24
  46c158:	mov	x4, x21
  46c15c:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  46c160:	b.ne	46c18c <_obstack_memory_used@@Base+0x17dec>  // b.any
  46c164:	cmp	w0, #0x5
  46c168:	mov	x3, x20
  46c16c:	mov	w1, #0xa                   	// #10
  46c170:	mov	w0, #0x1                   	// #1
  46c174:	ldr	x2, [x20]
  46c178:	b.ne	46c0f0 <_obstack_memory_used@@Base+0x17d50>  // b.any
  46c17c:	mov	w1, #0x1a                  	// #26
  46c180:	mov	w0, #0x1                   	// #1
  46c184:	blr	x25
  46c188:	cbz	w0, 46c1b0 <_obstack_memory_used@@Base+0x17e10>
  46c18c:	mov	w19, #0x2                   	// #2
  46c190:	mov	w0, w19
  46c194:	ldp	x29, x30, [sp]
  46c198:	ldp	x19, x20, [sp, #16]
  46c19c:	ldp	x21, x22, [sp, #32]
  46c1a0:	ldp	x23, x24, [sp, #48]
  46c1a4:	ldp	x25, x26, [sp, #64]
  46c1a8:	add	sp, sp, #0x6d0
  46c1ac:	ret
  46c1b0:	str	x23, [x26]
  46c1b4:	mov	w0, w19
  46c1b8:	ldp	x29, x30, [sp]
  46c1bc:	ldp	x19, x20, [sp, #16]
  46c1c0:	ldp	x21, x22, [sp, #32]
  46c1c4:	ldp	x23, x24, [sp, #48]
  46c1c8:	ldp	x25, x26, [sp, #64]
  46c1cc:	add	sp, sp, #0x6d0
  46c1d0:	ret
  46c1d4:	nop
  46c1d8:	cmp	w1, #0x61
  46c1dc:	b.gt	46c234 <_obstack_memory_used@@Base+0x17e94>
  46c1e0:	ldr	x4, [x0, #832]
  46c1e4:	sxtw	x3, w1
  46c1e8:	ldr	x2, [x0, x3, lsl #3]
  46c1ec:	tbz	x4, #62, 46c1fc <_obstack_memory_used@@Base+0x17e5c>
  46c1f0:	add	x0, x0, x3
  46c1f4:	ldrb	w0, [x0, #856]
  46c1f8:	cbnz	w0, 46c22c <_obstack_memory_used@@Base+0x17e8c>
  46c1fc:	cmp	w1, #0x2e
  46c200:	b.eq	46c220 <_obstack_memory_used@@Base+0x17e80>  // b.none
  46c204:	adrp	x0, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46c208:	add	x0, x0, #0xb60
  46c20c:	ldrb	w0, [x0, w1, sxtw]
  46c210:	cmp	w0, #0x8
  46c214:	b.ne	46c234 <_obstack_memory_used@@Base+0x17e94>  // b.any
  46c218:	ldr	x0, [x2]
  46c21c:	ret
  46c220:	cntd	x0
  46c224:	sxtw	x0, w0
  46c228:	ret
  46c22c:	mov	x0, x2
  46c230:	ret
  46c234:	stp	x29, x30, [sp, #-16]!
  46c238:	mov	x29, sp
  46c23c:	bl	402990 <abort@plt>
  46c240:	ldr	x0, [x0, #784]
  46c244:	ret
  46c248:	cmp	w1, #0x61
  46c24c:	b.gt	46c290 <_obstack_memory_used@@Base+0x17ef0>
  46c250:	ldr	x5, [x0, #832]
  46c254:	adrp	x3, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46c258:	add	x3, x3, #0xb60
  46c25c:	sxtw	x4, w1
  46c260:	ldrb	w1, [x3, w1, sxtw]
  46c264:	tbz	x5, #62, 46c274 <_obstack_memory_used@@Base+0x17ed4>
  46c268:	add	x3, x0, x4
  46c26c:	ldrb	w3, [x3, #856]
  46c270:	cbnz	w3, 46c288 <_obstack_memory_used@@Base+0x17ee8>
  46c274:	cmp	w1, #0x8
  46c278:	ldr	x0, [x0, x4, lsl #3]
  46c27c:	b.ne	46c290 <_obstack_memory_used@@Base+0x17ef0>  // b.any
  46c280:	str	x2, [x0]
  46c284:	ret
  46c288:	str	x2, [x0, x4, lsl #3]
  46c28c:	ret
  46c290:	stp	x29, x30, [sp, #-16]!
  46c294:	mov	x29, sp
  46c298:	bl	402990 <abort@plt>
  46c29c:	nop
  46c2a0:	ldr	x0, [x0, #792]
  46c2a4:	ret
  46c2a8:	ldr	x2, [x0, #832]
  46c2ac:	ldr	x0, [x0, #792]
  46c2b0:	lsr	x2, x2, #63
  46c2b4:	str	w2, [x1]
  46c2b8:	ret
  46c2bc:	nop
  46c2c0:	str	x1, [x0, #792]
  46c2c4:	ret
  46c2c8:	ldr	x0, [x0, #800]
  46c2cc:	ret
  46c2d0:	ldr	x0, [x0, #824]
  46c2d4:	ret
  46c2d8:	stp	x29, x30, [sp, #-48]!
  46c2dc:	sub	x0, x0, #0x1
  46c2e0:	mov	x29, sp
  46c2e4:	add	x1, sp, #0x18
  46c2e8:	bl	46e290 <_obstack_memory_used@@Base+0x19ef0>
  46c2ec:	ldr	x1, [sp, #40]
  46c2f0:	cmp	x0, #0x0
  46c2f4:	ldp	x29, x30, [sp], #48
  46c2f8:	csel	x0, x1, x0, ne  // ne = any
  46c2fc:	ret
  46c300:	ldr	x0, [x0, #816]
  46c304:	ret
  46c308:	ldr	x0, [x0, #808]
  46c30c:	ret
  46c310:	sub	sp, sp, #0xa70
  46c314:	mov	x2, #0x3c0                 	// #960
  46c318:	add	x3, sp, #0x30
  46c31c:	stp	x29, x30, [sp]
  46c320:	mov	x29, sp
  46c324:	stp	x19, x20, [sp, #16]
  46c328:	mov	x20, x1
  46c32c:	mov	w1, #0x0                   	// #0
  46c330:	str	x21, [sp, #32]
  46c334:	mov	x21, x0
  46c338:	mov	x0, x3
  46c33c:	bl	402890 <memset@plt>
  46c340:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  46c344:	add	x19, sp, #0x3f0
  46c348:	add	x21, x21, #0x1
  46c34c:	mov	x1, x19
  46c350:	str	x21, [sp, #840]
  46c354:	str	x2, [sp, #880]
  46c358:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46c35c:	cbnz	w0, 46c408 <_obstack_memory_used@@Base+0x18068>
  46c360:	ldr	w0, [sp, #2608]
  46c364:	cmp	w0, #0x2
  46c368:	b.eq	46c408 <_obstack_memory_used@@Base+0x18068>  // b.none
  46c36c:	sub	x4, x20, x20, lsl #3
  46c370:	mov	x1, #0xffffffffffffe680    	// #-6528
  46c374:	mov	x0, x19
  46c378:	add	x5, x19, #0x620
  46c37c:	add	x4, x4, x1
  46c380:	add	x2, x20, #0x334
  46c384:	b	46c39c <_obstack_memory_used@@Base+0x17ffc>
  46c388:	str	xzr, [x4, x2, lsl #3]
  46c38c:	add	x0, x0, #0x10
  46c390:	add	x2, x2, #0x1
  46c394:	cmp	x0, x5
  46c398:	b.eq	46c3cc <_obstack_memory_used@@Base+0x1802c>  // b.none
  46c39c:	ldrb	w3, [x0, #8]
  46c3a0:	strb	w3, [x2]
  46c3a4:	cmp	w3, #0x1
  46c3a8:	b.eq	46c3b4 <_obstack_memory_used@@Base+0x18014>  // b.none
  46c3ac:	cmp	w3, #0x2
  46c3b0:	b.ne	46c388 <_obstack_memory_used@@Base+0x17fe8>  // b.any
  46c3b4:	ldr	x3, [x0]
  46c3b8:	str	x3, [x4, x2, lsl #3]
  46c3bc:	add	x0, x0, #0x10
  46c3c0:	add	x2, x2, #0x1
  46c3c4:	cmp	x0, x5
  46c3c8:	b.ne	46c39c <_obstack_memory_used@@Base+0x17ffc>  // b.any
  46c3cc:	ldr	x1, [sp, #896]
  46c3d0:	mov	x0, x20
  46c3d4:	ldr	x2, [sp, #2584]
  46c3d8:	stp	x2, x1, [x20, #16]
  46c3dc:	ldr	x2, [sp, #2592]
  46c3e0:	strh	w2, [x20, #816]
  46c3e4:	ldr	x1, [sp, #2648]
  46c3e8:	strh	w1, [x20, #818]
  46c3ec:	ldr	x2, [sp, #2664]
  46c3f0:	str	x2, [x20, #8]
  46c3f4:	ldp	x29, x30, [sp]
  46c3f8:	ldp	x19, x20, [sp, #16]
  46c3fc:	ldr	x21, [sp, #32]
  46c400:	add	sp, sp, #0xa70
  46c404:	ret
  46c408:	mov	x0, #0x0                   	// #0
  46c40c:	ldp	x29, x30, [sp]
  46c410:	ldp	x19, x20, [sp, #16]
  46c414:	ldr	x21, [sp, #32]
  46c418:	add	sp, sp, #0xa70
  46c41c:	ret
  46c420:	ret
  46c424:	nop
  46c428:	sub	sp, sp, #0xec0
  46c42c:	stp	x29, x30, [sp]
  46c430:	mov	x29, sp
  46c434:	stp	x21, x22, [sp, #64]
  46c438:	add	x21, sp, #0xc0
  46c43c:	add	x22, sp, #0x840
  46c440:	stp	x0, x1, [sp, #16]
  46c444:	add	x1, sp, #0xec0
  46c448:	stp	x2, x3, [sp, #32]
  46c44c:	mov	x2, x30
  46c450:	stp	x19, x20, [sp, #48]
  46c454:	mov	x20, x0
  46c458:	add	x19, sp, #0x480
  46c45c:	mov	x0, x21
  46c460:	stp	x23, x24, [sp, #80]
  46c464:	stp	x25, x26, [sp, #96]
  46c468:	stp	x27, x28, [sp, #112]
  46c46c:	stp	d8, d9, [sp, #128]
  46c470:	stp	d10, d11, [sp, #144]
  46c474:	stp	d12, d13, [sp, #160]
  46c478:	stp	d14, d15, [sp, #176]
  46c47c:	bl	46bcd0 <_obstack_memory_used@@Base+0x17930>
  46c480:	mov	x1, x21
  46c484:	mov	x0, x19
  46c488:	mov	x2, #0x3c0                 	// #960
  46c48c:	bl	402620 <memcpy@plt>
  46c490:	b	46c4c4 <_obstack_memory_used@@Base+0x18124>
  46c494:	cbnz	w2, 46c530 <_obstack_memory_used@@Base+0x18190>
  46c498:	ldr	x5, [sp, #3728]
  46c49c:	cbz	x5, 46c4b8 <_obstack_memory_used@@Base+0x18118>
  46c4a0:	ldr	x2, [x20]
  46c4a4:	blr	x5
  46c4a8:	cmp	w0, #0x6
  46c4ac:	b.eq	46c538 <_obstack_memory_used@@Base+0x18198>  // b.none
  46c4b0:	cmp	w0, #0x8
  46c4b4:	b.ne	46c530 <_obstack_memory_used@@Base+0x18190>  // b.any
  46c4b8:	mov	x1, x22
  46c4bc:	mov	x0, x19
  46c4c0:	bl	46bf20 <_obstack_memory_used@@Base+0x17b80>
  46c4c4:	mov	x1, x22
  46c4c8:	mov	x0, x19
  46c4cc:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46c4d0:	mov	w2, w0
  46c4d4:	mov	w1, #0x1                   	// #1
  46c4d8:	mov	x4, x19
  46c4dc:	mov	x3, x20
  46c4e0:	mov	w0, w1
  46c4e4:	cmp	w2, #0x5
  46c4e8:	b.ne	46c494 <_obstack_memory_used@@Base+0x180f4>  // b.any
  46c4ec:	mov	x4, #0x0                   	// #0
  46c4f0:	mov	w0, w2
  46c4f4:	ldp	x29, x30, [sp]
  46c4f8:	ldp	x0, x1, [sp, #16]
  46c4fc:	ldp	x2, x3, [sp, #32]
  46c500:	ldp	x19, x20, [sp, #48]
  46c504:	ldp	x21, x22, [sp, #64]
  46c508:	ldp	x23, x24, [sp, #80]
  46c50c:	ldp	x25, x26, [sp, #96]
  46c510:	ldp	x27, x28, [sp, #112]
  46c514:	ldp	d8, d9, [sp, #128]
  46c518:	ldp	d10, d11, [sp, #144]
  46c51c:	ldp	d12, d13, [sp, #160]
  46c520:	ldp	d14, d15, [sp, #176]
  46c524:	add	sp, sp, #0xec0
  46c528:	add	sp, sp, x4
  46c52c:	ret
  46c530:	mov	w2, #0x3                   	// #3
  46c534:	b	46c4ec <_obstack_memory_used@@Base+0x1814c>
  46c538:	ldr	x4, [sp, #1936]
  46c53c:	mov	x1, x21
  46c540:	ldr	x3, [sp, #1984]
  46c544:	mov	x2, #0x3c0                 	// #960
  46c548:	mov	x0, x19
  46c54c:	sub	x3, x4, x3, lsr #63
  46c550:	stp	xzr, x3, [x20, #16]
  46c554:	bl	402620 <memcpy@plt>
  46c558:	mov	x2, x22
  46c55c:	mov	x1, x19
  46c560:	mov	x0, x20
  46c564:	bl	46bfd8 <_obstack_memory_used@@Base+0x17c38>
  46c568:	mov	w2, w0
  46c56c:	cmp	w0, #0x7
  46c570:	b.ne	46c4ec <_obstack_memory_used@@Base+0x1814c>  // b.any
  46c574:	mov	x1, x19
  46c578:	mov	x0, x21
  46c57c:	bl	46b0a8 <_obstack_memory_used@@Base+0x16d08>
  46c580:	mov	x4, x0
  46c584:	ldr	x2, [sp, #1024]
  46c588:	ldr	x1, [sp, #1944]
  46c58c:	tbz	x2, #61, 46c5a0 <_obstack_memory_used@@Base+0x18200>
  46c590:	mov	x17, x1
  46c594:	ldr	x16, [sp, #976]
  46c598:	pacia1716
  46c59c:	mov	x1, x17
  46c5a0:	ldr	x0, [sp, #1936]
  46c5a4:	bl	46c420 <_obstack_memory_used@@Base+0x18080>
  46c5a8:	str	x1, [x29, #8]
  46c5ac:	b	46c4f0 <_obstack_memory_used@@Base+0x18150>
  46c5b0:	sub	sp, sp, #0x850
  46c5b4:	stp	x29, x30, [sp]
  46c5b8:	mov	x29, sp
  46c5bc:	stp	x19, x20, [sp, #48]
  46c5c0:	mov	x19, x0
  46c5c4:	mov	x20, x2
  46c5c8:	stp	x21, x22, [sp, #64]
  46c5cc:	add	x22, sp, #0xd0
  46c5d0:	mov	x21, x1
  46c5d4:	stp	x0, x1, [sp, #16]
  46c5d8:	mov	x0, x22
  46c5dc:	add	x1, sp, #0x850
  46c5e0:	stp	x2, x3, [sp, #32]
  46c5e4:	mov	x2, x30
  46c5e8:	stp	x23, x24, [sp, #80]
  46c5ec:	add	x23, sp, #0x490
  46c5f0:	stp	x25, x26, [sp, #96]
  46c5f4:	stp	x27, x28, [sp, #112]
  46c5f8:	stp	d8, d9, [sp, #128]
  46c5fc:	stp	d10, d11, [sp, #144]
  46c600:	stp	d12, d13, [sp, #160]
  46c604:	stp	d14, d15, [sp, #176]
  46c608:	bl	46bcd0 <_obstack_memory_used@@Base+0x17930>
  46c60c:	mov	x1, x22
  46c610:	mov	x2, #0x3c0                 	// #960
  46c614:	mov	x0, x23
  46c618:	bl	402620 <memcpy@plt>
  46c61c:	stp	x21, x20, [x19, #16]
  46c620:	mov	x0, x19
  46c624:	mov	x1, x23
  46c628:	add	x2, sp, #0xc8
  46c62c:	bl	46c0b8 <_obstack_memory_used@@Base+0x17d18>
  46c630:	cmp	w0, #0x7
  46c634:	mov	x4, #0x0                   	// #0
  46c638:	b.eq	46c678 <_obstack_memory_used@@Base+0x182d8>  // b.none
  46c63c:	ldp	x29, x30, [sp]
  46c640:	ldp	x0, x1, [sp, #16]
  46c644:	ldp	x2, x3, [sp, #32]
  46c648:	ldp	x19, x20, [sp, #48]
  46c64c:	ldp	x21, x22, [sp, #64]
  46c650:	ldp	x23, x24, [sp, #80]
  46c654:	ldp	x25, x26, [sp, #96]
  46c658:	ldp	x27, x28, [sp, #112]
  46c65c:	ldp	d8, d9, [sp, #128]
  46c660:	ldp	d10, d11, [sp, #144]
  46c664:	ldp	d12, d13, [sp, #160]
  46c668:	ldp	d14, d15, [sp, #176]
  46c66c:	add	sp, sp, #0x850
  46c670:	add	sp, sp, x4
  46c674:	ret
  46c678:	mov	x1, x23
  46c67c:	mov	x0, x22
  46c680:	bl	46b0a8 <_obstack_memory_used@@Base+0x16d08>
  46c684:	mov	x4, x0
  46c688:	ldr	x2, [sp, #1040]
  46c68c:	ldr	x1, [sp, #1960]
  46c690:	tbz	x2, #61, 46c6a4 <_obstack_memory_used@@Base+0x18304>
  46c694:	mov	x17, x1
  46c698:	ldr	x16, [sp, #992]
  46c69c:	pacia1716
  46c6a0:	mov	x1, x17
  46c6a4:	ldr	x0, [sp, #1952]
  46c6a8:	bl	46c420 <_obstack_memory_used@@Base+0x18080>
  46c6ac:	str	x1, [x29, #8]
  46c6b0:	b	46c63c <_obstack_memory_used@@Base+0x1829c>
  46c6b4:	nop
  46c6b8:	sub	sp, sp, #0x850
  46c6bc:	stp	x29, x30, [sp]
  46c6c0:	mov	x29, sp
  46c6c4:	stp	x19, x20, [sp, #48]
  46c6c8:	mov	x19, x0
  46c6cc:	add	x20, sp, #0xd0
  46c6d0:	stp	x0, x1, [sp, #16]
  46c6d4:	mov	x0, x20
  46c6d8:	add	x1, sp, #0x850
  46c6dc:	stp	x2, x3, [sp, #32]
  46c6e0:	mov	x2, x30
  46c6e4:	stp	x21, x22, [sp, #64]
  46c6e8:	add	x21, sp, #0x490
  46c6ec:	stp	x23, x24, [sp, #80]
  46c6f0:	stp	x25, x26, [sp, #96]
  46c6f4:	stp	x27, x28, [sp, #112]
  46c6f8:	stp	d8, d9, [sp, #128]
  46c6fc:	stp	d10, d11, [sp, #144]
  46c700:	stp	d12, d13, [sp, #160]
  46c704:	stp	d14, d15, [sp, #176]
  46c708:	bl	46bcd0 <_obstack_memory_used@@Base+0x17930>
  46c70c:	mov	x1, x20
  46c710:	mov	x0, x21
  46c714:	mov	x2, #0x3c0                 	// #960
  46c718:	bl	402620 <memcpy@plt>
  46c71c:	ldr	x0, [x19, #16]
  46c720:	cbnz	x0, 46c7b0 <_obstack_memory_used@@Base+0x18410>
  46c724:	mov	x0, x19
  46c728:	add	x2, sp, #0xc8
  46c72c:	mov	x1, x21
  46c730:	bl	46bfd8 <_obstack_memory_used@@Base+0x17c38>
  46c734:	cmp	w0, #0x7
  46c738:	b.ne	46c7c4 <_obstack_memory_used@@Base+0x18424>  // b.any
  46c73c:	mov	x1, x21
  46c740:	mov	x0, x20
  46c744:	bl	46b0a8 <_obstack_memory_used@@Base+0x16d08>
  46c748:	mov	x4, x0
  46c74c:	ldr	x2, [sp, #1040]
  46c750:	ldr	x1, [sp, #1960]
  46c754:	tbz	x2, #61, 46c768 <_obstack_memory_used@@Base+0x183c8>
  46c758:	mov	x17, x1
  46c75c:	ldr	x16, [sp, #992]
  46c760:	pacia1716
  46c764:	mov	x1, x17
  46c768:	ldr	x0, [sp, #1952]
  46c76c:	bl	46c420 <_obstack_memory_used@@Base+0x18080>
  46c770:	str	x1, [x29, #8]
  46c774:	ldp	x29, x30, [sp]
  46c778:	ldp	x0, x1, [sp, #16]
  46c77c:	ldp	x2, x3, [sp, #32]
  46c780:	ldp	x19, x20, [sp, #48]
  46c784:	ldp	x21, x22, [sp, #64]
  46c788:	ldp	x23, x24, [sp, #80]
  46c78c:	ldp	x25, x26, [sp, #96]
  46c790:	ldp	x27, x28, [sp, #112]
  46c794:	ldp	d8, d9, [sp, #128]
  46c798:	ldp	d10, d11, [sp, #144]
  46c79c:	ldp	d12, d13, [sp, #160]
  46c7a0:	ldp	d14, d15, [sp, #176]
  46c7a4:	add	sp, sp, #0x850
  46c7a8:	add	sp, sp, x4
  46c7ac:	ret
  46c7b0:	mov	x0, x19
  46c7b4:	add	x2, sp, #0xc8
  46c7b8:	mov	x1, x21
  46c7bc:	bl	46c0b8 <_obstack_memory_used@@Base+0x17d18>
  46c7c0:	b	46c734 <_obstack_memory_used@@Base+0x18394>
  46c7c4:	bl	402990 <abort@plt>
  46c7c8:	sub	sp, sp, #0x850
  46c7cc:	stp	x29, x30, [sp]
  46c7d0:	mov	x29, sp
  46c7d4:	stp	x0, x1, [sp, #16]
  46c7d8:	ldr	x1, [x0, #16]
  46c7dc:	stp	x2, x3, [sp, #32]
  46c7e0:	stp	x19, x20, [sp, #48]
  46c7e4:	mov	x19, x0
  46c7e8:	stp	x21, x22, [sp, #64]
  46c7ec:	stp	x23, x24, [sp, #80]
  46c7f0:	stp	x25, x26, [sp, #96]
  46c7f4:	stp	x27, x28, [sp, #112]
  46c7f8:	stp	d8, d9, [sp, #128]
  46c7fc:	stp	d10, d11, [sp, #144]
  46c800:	stp	d12, d13, [sp, #160]
  46c804:	stp	d14, d15, [sp, #176]
  46c808:	cbnz	x1, 46c850 <_obstack_memory_used@@Base+0x184b0>
  46c80c:	bl	46c428 <_obstack_memory_used@@Base+0x18088>
  46c810:	mov	x4, #0x0                   	// #0
  46c814:	ldp	x29, x30, [sp]
  46c818:	ldp	x0, x1, [sp, #16]
  46c81c:	ldp	x2, x3, [sp, #32]
  46c820:	ldp	x19, x20, [sp, #48]
  46c824:	ldp	x21, x22, [sp, #64]
  46c828:	ldp	x23, x24, [sp, #80]
  46c82c:	ldp	x25, x26, [sp, #96]
  46c830:	ldp	x27, x28, [sp, #112]
  46c834:	ldp	d8, d9, [sp, #128]
  46c838:	ldp	d10, d11, [sp, #144]
  46c83c:	ldp	d12, d13, [sp, #160]
  46c840:	ldp	d14, d15, [sp, #176]
  46c844:	add	sp, sp, #0x850
  46c848:	add	sp, sp, x4
  46c84c:	ret
  46c850:	add	x20, sp, #0xd0
  46c854:	mov	x2, x30
  46c858:	mov	x0, x20
  46c85c:	add	x1, sp, #0x850
  46c860:	add	x21, sp, #0x490
  46c864:	bl	46bcd0 <_obstack_memory_used@@Base+0x17930>
  46c868:	mov	x1, x20
  46c86c:	mov	x2, #0x3c0                 	// #960
  46c870:	mov	x0, x21
  46c874:	bl	402620 <memcpy@plt>
  46c878:	mov	x0, x19
  46c87c:	mov	x1, x21
  46c880:	add	x2, sp, #0xc8
  46c884:	bl	46c0b8 <_obstack_memory_used@@Base+0x17d18>
  46c888:	cmp	w0, #0x7
  46c88c:	b.ne	46c8cc <_obstack_memory_used@@Base+0x1852c>  // b.any
  46c890:	mov	x1, x21
  46c894:	mov	x0, x20
  46c898:	bl	46b0a8 <_obstack_memory_used@@Base+0x16d08>
  46c89c:	mov	x4, x0
  46c8a0:	ldr	x2, [sp, #1040]
  46c8a4:	ldr	x1, [sp, #1960]
  46c8a8:	tbz	x2, #61, 46c8bc <_obstack_memory_used@@Base+0x1851c>
  46c8ac:	mov	x17, x1
  46c8b0:	ldr	x16, [sp, #992]
  46c8b4:	pacia1716
  46c8b8:	mov	x1, x17
  46c8bc:	ldr	x0, [sp, #1952]
  46c8c0:	bl	46c420 <_obstack_memory_used@@Base+0x18080>
  46c8c4:	str	x1, [x29, #8]
  46c8c8:	b	46c814 <_obstack_memory_used@@Base+0x18474>
  46c8cc:	bl	402990 <abort@plt>
  46c8d0:	ldr	x2, [x0, #8]
  46c8d4:	mov	x1, x0
  46c8d8:	cbz	x2, 46c8e8 <_obstack_memory_used@@Base+0x18548>
  46c8dc:	mov	x16, x2
  46c8e0:	mov	w0, #0x1                   	// #1
  46c8e4:	br	x16
  46c8e8:	ret
  46c8ec:	nop
  46c8f0:	sub	sp, sp, #0xae0
  46c8f4:	mov	x2, x30
  46c8f8:	stp	x29, x30, [sp]
  46c8fc:	mov	x29, sp
  46c900:	stp	x19, x20, [sp, #16]
  46c904:	add	x20, sp, #0xa0
  46c908:	stp	x21, x22, [sp, #32]
  46c90c:	mov	x22, x1
  46c910:	add	x21, sp, #0x460
  46c914:	add	x1, sp, #0xae0
  46c918:	stp	x23, x24, [sp, #48]
  46c91c:	mov	x23, x0
  46c920:	mov	x0, x20
  46c924:	stp	x25, x26, [sp, #64]
  46c928:	stp	x27, x28, [sp, #80]
  46c92c:	stp	d8, d9, [sp, #96]
  46c930:	stp	d10, d11, [sp, #112]
  46c934:	stp	d12, d13, [sp, #128]
  46c938:	stp	d14, d15, [sp, #144]
  46c93c:	bl	46bcd0 <_obstack_memory_used@@Base+0x17930>
  46c940:	b	46c960 <_obstack_memory_used@@Base+0x185c0>
  46c944:	blr	x23
  46c948:	cbnz	w0, 46c984 <_obstack_memory_used@@Base+0x185e4>
  46c94c:	cmp	w19, #0x5
  46c950:	b.eq	46c988 <_obstack_memory_used@@Base+0x185e8>  // b.none
  46c954:	mov	x1, x21
  46c958:	mov	x0, x20
  46c95c:	bl	46bf20 <_obstack_memory_used@@Base+0x17b80>
  46c960:	mov	x1, x21
  46c964:	mov	x0, x20
  46c968:	bl	46ab50 <_obstack_memory_used@@Base+0x167b0>
  46c96c:	mov	w19, w0
  46c970:	cmp	w0, #0x0
  46c974:	mov	x1, x22
  46c978:	mov	x0, x20
  46c97c:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  46c980:	b.eq	46c944 <_obstack_memory_used@@Base+0x185a4>  // b.none
  46c984:	mov	w19, #0x3                   	// #3
  46c988:	mov	w0, w19
  46c98c:	ldp	x29, x30, [sp]
  46c990:	ldp	x19, x20, [sp, #16]
  46c994:	ldp	x21, x22, [sp, #32]
  46c998:	ldp	x23, x24, [sp, #48]
  46c99c:	ldp	x25, x26, [sp, #64]
  46c9a0:	ldp	x27, x28, [sp, #80]
  46c9a4:	ldp	d8, d9, [sp, #96]
  46c9a8:	ldp	d10, d11, [sp, #112]
  46c9ac:	ldp	d12, d13, [sp, #128]
  46c9b0:	ldp	d14, d15, [sp, #144]
  46c9b4:	add	sp, sp, #0xae0
  46c9b8:	ret
  46c9bc:	nop
  46c9c0:	ldr	x3, [x1, #8]
  46c9c4:	mov	w4, #0x1                   	// #1
  46c9c8:	ldr	x1, [x2, #8]
  46c9cc:	cmp	x3, x1
  46c9d0:	csetm	w0, cc  // cc = lo, ul, last
  46c9d4:	csel	w0, w0, w4, ls  // ls = plast
  46c9d8:	ret
  46c9dc:	nop
  46c9e0:	stp	x29, x30, [sp, #-112]!
  46c9e4:	mov	x29, sp
  46c9e8:	stp	x21, x22, [sp, #32]
  46c9ec:	lsl	w21, w3, #1
  46c9f0:	stp	x25, x26, [sp, #64]
  46c9f4:	add	w25, w21, #0x1
  46c9f8:	cmp	w25, w4
  46c9fc:	b.ge	46cad4 <_obstack_memory_used@@Base+0x18734>  // b.tcont
  46ca00:	mov	w22, w3
  46ca04:	stp	x19, x20, [sp, #16]
  46ca08:	mov	x20, x2
  46ca0c:	stp	x23, x24, [sp, #48]
  46ca10:	mov	w23, w4
  46ca14:	mov	x24, x1
  46ca18:	stp	x27, x28, [sp, #80]
  46ca1c:	mov	x27, x0
  46ca20:	b	46ca78 <_obstack_memory_used@@Base+0x186d8>
  46ca24:	ldr	x2, [x20, x26]
  46ca28:	blr	x24
  46ca2c:	ldr	x3, [sp, #104]
  46ca30:	tbnz	w0, #31, 46cae4 <_obstack_memory_used@@Base+0x18744>
  46ca34:	ldr	x1, [x20, x28, lsl #3]
  46ca38:	mov	w21, w25
  46ca3c:	sxtw	x26, w22
  46ca40:	mov	x2, x1
  46ca44:	mov	w22, w21
  46ca48:	mov	x0, x27
  46ca4c:	lsl	w21, w21, #1
  46ca50:	ldr	x1, [x20, x26, lsl #3]
  46ca54:	blr	x24
  46ca58:	tbz	w0, #31, 46cac8 <_obstack_memory_used@@Base+0x18728>
  46ca5c:	ldr	x1, [x19]
  46ca60:	add	w25, w21, #0x1
  46ca64:	ldr	x0, [x20, x26, lsl #3]
  46ca68:	str	x1, [x20, x26, lsl #3]
  46ca6c:	str	x0, [x19]
  46ca70:	cmp	w23, w25
  46ca74:	b.le	46cac8 <_obstack_memory_used@@Base+0x18728>
  46ca78:	sbfiz	x19, x25, #3, #32
  46ca7c:	sxtw	x28, w25
  46ca80:	add	x26, x19, #0x8
  46ca84:	add	w21, w25, #0x1
  46ca88:	add	x3, x20, x26
  46ca8c:	str	x3, [sp, #104]
  46ca90:	cmp	w21, w23
  46ca94:	add	x19, x20, x19
  46ca98:	mov	x0, x27
  46ca9c:	ldr	x1, [x20, x28, lsl #3]
  46caa0:	b.lt	46ca24 <_obstack_memory_used@@Base+0x18684>  // b.tstop
  46caa4:	sxtw	x26, w22
  46caa8:	mov	x2, x1
  46caac:	mov	w21, w25
  46cab0:	mov	x0, x27
  46cab4:	mov	w22, w21
  46cab8:	ldr	x1, [x20, x26, lsl #3]
  46cabc:	lsl	w21, w21, #1
  46cac0:	blr	x24
  46cac4:	tbnz	w0, #31, 46ca5c <_obstack_memory_used@@Base+0x186bc>
  46cac8:	ldp	x19, x20, [sp, #16]
  46cacc:	ldp	x23, x24, [sp, #48]
  46cad0:	ldp	x27, x28, [sp, #80]
  46cad4:	ldp	x21, x22, [sp, #32]
  46cad8:	ldp	x25, x26, [sp, #64]
  46cadc:	ldp	x29, x30, [sp], #112
  46cae0:	ret
  46cae4:	mov	x19, x3
  46cae8:	ldr	x1, [x20, x26]
  46caec:	b	46ca3c <_obstack_memory_used@@Base+0x1869c>
  46caf0:	stp	x29, x30, [sp, #-80]!
  46caf4:	mov	x29, sp
  46caf8:	stp	x19, x20, [sp, #16]
  46cafc:	ldr	x19, [x2, #8]
  46cb00:	stp	x21, x22, [sp, #32]
  46cb04:	mov	x22, x2
  46cb08:	stp	x23, x24, [sp, #48]
  46cb0c:	add	x21, x2, #0x10
  46cb10:	lsr	x20, x19, #1
  46cb14:	mov	x23, x0
  46cb18:	mov	x24, x1
  46cb1c:	subs	w20, w20, #0x1
  46cb20:	b.mi	46cb58 <_obstack_memory_used@@Base+0x187b8>  // b.first
  46cb24:	str	x25, [sp, #64]
  46cb28:	mov	w25, w19
  46cb2c:	nop
  46cb30:	mov	w3, w20
  46cb34:	mov	w4, w25
  46cb38:	mov	x2, x21
  46cb3c:	sub	w20, w20, #0x1
  46cb40:	mov	x1, x24
  46cb44:	mov	x0, x23
  46cb48:	bl	46c9e0 <_obstack_memory_used@@Base+0x18640>
  46cb4c:	cmn	w20, #0x1
  46cb50:	b.ne	46cb30 <_obstack_memory_used@@Base+0x18790>  // b.any
  46cb54:	ldr	x25, [sp, #64]
  46cb58:	sub	w19, w19, #0x1
  46cb5c:	cmp	w19, #0x0
  46cb60:	sxtw	x19, w19
  46cb64:	b.le	46cb9c <_obstack_memory_used@@Base+0x187fc>
  46cb68:	ldr	x1, [x21, x19, lsl #3]
  46cb6c:	mov	w4, w19
  46cb70:	ldr	x0, [x22, #16]
  46cb74:	str	x1, [x22, #16]
  46cb78:	str	x0, [x21, x19, lsl #3]
  46cb7c:	mov	x2, x21
  46cb80:	sub	x19, x19, #0x1
  46cb84:	mov	x1, x24
  46cb88:	mov	x0, x23
  46cb8c:	mov	w3, #0x0                   	// #0
  46cb90:	bl	46c9e0 <_obstack_memory_used@@Base+0x18640>
  46cb94:	cmp	w19, #0x0
  46cb98:	b.gt	46cb68 <_obstack_memory_used@@Base+0x187c8>
  46cb9c:	ldp	x19, x20, [sp, #16]
  46cba0:	ldp	x21, x22, [sp, #32]
  46cba4:	ldp	x23, x24, [sp, #48]
  46cba8:	ldp	x29, x30, [sp], #80
  46cbac:	ret
  46cbb0:	and	w0, w0, #0xff
  46cbb4:	cmp	w0, #0xff
  46cbb8:	b.eq	46cc08 <_obstack_memory_used@@Base+0x18868>  // b.none
  46cbbc:	and	w1, w0, #0x7
  46cbc0:	cmp	w1, #0x2
  46cbc4:	b.eq	46cc00 <_obstack_memory_used@@Base+0x18860>  // b.none
  46cbc8:	b.ls	46cbf4 <_obstack_memory_used@@Base+0x18854>  // b.plast
  46cbcc:	cmp	w1, #0x3
  46cbd0:	mov	w0, #0x4                   	// #4
  46cbd4:	b.ne	46cbdc <_obstack_memory_used@@Base+0x1883c>  // b.any
  46cbd8:	ret
  46cbdc:	cmp	w1, w0
  46cbe0:	mov	w0, #0x8                   	// #8
  46cbe4:	b.eq	46cbd8 <_obstack_memory_used@@Base+0x18838>  // b.none
  46cbe8:	stp	x29, x30, [sp, #-16]!
  46cbec:	mov	x29, sp
  46cbf0:	bl	402990 <abort@plt>
  46cbf4:	mov	w0, #0x8                   	// #8
  46cbf8:	cbnz	w1, 46cbe8 <_obstack_memory_used@@Base+0x18848>
  46cbfc:	ret
  46cc00:	mov	w0, w1
  46cc04:	ret
  46cc08:	mov	w0, #0x0                   	// #0
  46cc0c:	ret
  46cc10:	and	w5, w0, #0xff
  46cc14:	cmp	w5, #0x50
  46cc18:	b.eq	46cd30 <_obstack_memory_used@@Base+0x18990>  // b.none
  46cc1c:	and	w4, w5, #0xf
  46cc20:	cmp	w4, #0x4
  46cc24:	b.eq	46cc40 <_obstack_memory_used@@Base+0x188a0>  // b.none
  46cc28:	b.ls	46cc54 <_obstack_memory_used@@Base+0x188b4>  // b.plast
  46cc2c:	cmp	w4, #0xb
  46cc30:	b.eq	46cd54 <_obstack_memory_used@@Base+0x189b4>  // b.none
  46cc34:	b.ls	46ccb0 <_obstack_memory_used@@Base+0x18910>  // b.plast
  46cc38:	cmp	w4, #0xc
  46cc3c:	b.ne	46cd64 <_obstack_memory_used@@Base+0x189c4>  // b.any
  46cc40:	mov	x0, x2
  46cc44:	ldr	x4, [x0], #8
  46cc48:	cbnz	x4, 46cd10 <_obstack_memory_used@@Base+0x18970>
  46cc4c:	str	x4, [x3]
  46cc50:	ret
  46cc54:	cmp	w4, #0x2
  46cc58:	b.eq	46cd44 <_obstack_memory_used@@Base+0x189a4>  // b.none
  46cc5c:	b.ls	46cc78 <_obstack_memory_used@@Base+0x188d8>  // b.plast
  46cc60:	cmp	w4, #0x3
  46cc64:	b.ne	46cd64 <_obstack_memory_used@@Base+0x189c4>  // b.any
  46cc68:	mov	x0, x2
  46cc6c:	ldr	w4, [x0], #4
  46cc70:	cbz	x4, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46cc74:	b	46cd10 <_obstack_memory_used@@Base+0x18970>
  46cc78:	cbz	w4, 46cc40 <_obstack_memory_used@@Base+0x188a0>
  46cc7c:	cmp	w4, #0x1
  46cc80:	b.ne	46cd64 <_obstack_memory_used@@Base+0x189c4>  // b.any
  46cc84:	mov	x0, x2
  46cc88:	mov	x4, #0x0                   	// #0
  46cc8c:	mov	w7, #0x0                   	// #0
  46cc90:	ldrb	w8, [x0], #1
  46cc94:	and	x6, x8, #0x7f
  46cc98:	lsl	x6, x6, x7
  46cc9c:	add	w7, w7, #0x7
  46cca0:	orr	x4, x4, x6
  46cca4:	tbnz	w8, #7, 46cc90 <_obstack_memory_used@@Base+0x188f0>
  46cca8:	cbz	x4, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46ccac:	b	46cd10 <_obstack_memory_used@@Base+0x18970>
  46ccb0:	cmp	w4, #0x9
  46ccb4:	b.eq	46ccd0 <_obstack_memory_used@@Base+0x18930>  // b.none
  46ccb8:	cmp	w4, #0xa
  46ccbc:	b.ne	46cd64 <_obstack_memory_used@@Base+0x189c4>  // b.any
  46ccc0:	mov	x0, x2
  46ccc4:	ldrsh	x4, [x0], #2
  46ccc8:	cbz	x4, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46cccc:	b	46cd10 <_obstack_memory_used@@Base+0x18970>
  46ccd0:	mov	x0, x2
  46ccd4:	mov	x4, #0x0                   	// #0
  46ccd8:	mov	w7, #0x0                   	// #0
  46ccdc:	ldrb	w8, [x0], #1
  46cce0:	and	x6, x8, #0x7f
  46cce4:	lsl	x6, x6, x7
  46cce8:	add	w7, w7, #0x7
  46ccec:	orr	x4, x4, x6
  46ccf0:	tbnz	w8, #7, 46ccdc <_obstack_memory_used@@Base+0x1893c>
  46ccf4:	cmp	w7, #0x3f
  46ccf8:	b.hi	46cc48 <_obstack_memory_used@@Base+0x188a8>  // b.pmore
  46ccfc:	tbz	w8, #6, 46cc48 <_obstack_memory_used@@Base+0x188a8>
  46cd00:	mov	x6, #0xffffffffffffffff    	// #-1
  46cd04:	lsl	x7, x6, x7
  46cd08:	orr	x4, x4, x7
  46cd0c:	nop
  46cd10:	and	w6, w5, #0x70
  46cd14:	cmp	w6, #0x10
  46cd18:	csel	x1, x2, x1, eq  // eq = none
  46cd1c:	add	x4, x4, x1
  46cd20:	tbz	w5, #7, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46cd24:	ldr	x4, [x4]
  46cd28:	str	x4, [x3]
  46cd2c:	ret
  46cd30:	add	x0, x2, #0x7
  46cd34:	and	x0, x0, #0xfffffffffffffff8
  46cd38:	ldr	x4, [x0], #8
  46cd3c:	str	x4, [x3]
  46cd40:	ret
  46cd44:	mov	x0, x2
  46cd48:	ldrh	w4, [x0], #2
  46cd4c:	cbz	x4, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46cd50:	b	46cd10 <_obstack_memory_used@@Base+0x18970>
  46cd54:	mov	x0, x2
  46cd58:	ldrsw	x4, [x0], #4
  46cd5c:	cbz	x4, 46cc4c <_obstack_memory_used@@Base+0x188ac>
  46cd60:	b	46cd10 <_obstack_memory_used@@Base+0x18970>
  46cd64:	stp	x29, x30, [sp, #-16]!
  46cd68:	mov	x29, sp
  46cd6c:	bl	402990 <abort@plt>
  46cd70:	stp	x29, x30, [sp, #-48]!
  46cd74:	mov	x29, sp
  46cd78:	stp	x19, x20, [sp, #16]
  46cd7c:	mov	x20, x0
  46cd80:	add	x19, x0, #0x9
  46cd84:	mov	x0, x19
  46cd88:	bl	402680 <strlen@plt>
  46cd8c:	ldrb	w3, [x20, #8]
  46cd90:	add	x0, x0, #0x1
  46cd94:	add	x2, x19, x0
  46cd98:	cmp	w3, #0x3
  46cd9c:	b.hi	46ce68 <_obstack_memory_used@@Base+0x18ac8>  // b.pmore
  46cda0:	ldrb	w0, [x20, #9]
  46cda4:	cmp	w0, #0x7a
  46cda8:	b.eq	46cdbc <_obstack_memory_used@@Base+0x18a1c>  // b.none
  46cdac:	mov	w0, #0x0                   	// #0
  46cdb0:	ldp	x19, x20, [sp, #16]
  46cdb4:	ldp	x29, x30, [sp], #48
  46cdb8:	ret
  46cdbc:	ldrsb	w1, [x2], #1
  46cdc0:	tbnz	w1, #31, 46cdbc <_obstack_memory_used@@Base+0x18a1c>
  46cdc4:	nop
  46cdc8:	mov	x0, x2
  46cdcc:	ldrsb	w1, [x2], #1
  46cdd0:	tbnz	w1, #31, 46cdc8 <_obstack_memory_used@@Base+0x18a28>
  46cdd4:	cmp	w3, #0x1
  46cdd8:	b.eq	46ce60 <_obstack_memory_used@@Base+0x18ac0>  // b.none
  46cddc:	nop
  46cde0:	ldrsb	w0, [x2], #1
  46cde4:	tbnz	w0, #31, 46cde0 <_obstack_memory_used@@Base+0x18a40>
  46cde8:	add	x19, x20, #0xa
  46cdec:	nop
  46cdf0:	ldrsb	w1, [x2], #1
  46cdf4:	tbnz	w1, #31, 46cdf0 <_obstack_memory_used@@Base+0x18a50>
  46cdf8:	ldrb	w0, [x20, #10]
  46cdfc:	add	x20, sp, #0x28
  46ce00:	cmp	w0, #0x52
  46ce04:	b.ne	46ce24 <_obstack_memory_used@@Base+0x18a84>  // b.any
  46ce08:	b	46ce50 <_obstack_memory_used@@Base+0x18ab0>
  46ce0c:	add	x2, x2, #0x1
  46ce10:	cmp	w0, #0x4c
  46ce14:	b.ne	46cdac <_obstack_memory_used@@Base+0x18a0c>  // b.any
  46ce18:	ldrb	w0, [x19, #1]!
  46ce1c:	cmp	w0, #0x52
  46ce20:	b.eq	46ce50 <_obstack_memory_used@@Base+0x18ab0>  // b.none
  46ce24:	cmp	w0, #0x50
  46ce28:	b.ne	46ce0c <_obstack_memory_used@@Base+0x18a6c>  // b.any
  46ce2c:	ldrb	w0, [x2], #1
  46ce30:	mov	x3, x20
  46ce34:	mov	x1, #0x0                   	// #0
  46ce38:	and	w0, w0, #0x7f
  46ce3c:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46ce40:	mov	x2, x0
  46ce44:	ldrb	w0, [x19, #1]!
  46ce48:	cmp	w0, #0x52
  46ce4c:	b.ne	46ce24 <_obstack_memory_used@@Base+0x18a84>  // b.any
  46ce50:	ldrb	w0, [x2]
  46ce54:	ldp	x19, x20, [sp, #16]
  46ce58:	ldp	x29, x30, [sp], #48
  46ce5c:	ret
  46ce60:	add	x2, x0, #0x2
  46ce64:	b	46cde8 <_obstack_memory_used@@Base+0x18a48>
  46ce68:	ldrb	w1, [x19, x0]
  46ce6c:	mov	w0, #0xff                  	// #255
  46ce70:	cmp	w1, #0x8
  46ce74:	b.ne	46cdb0 <_obstack_memory_used@@Base+0x18a10>  // b.any
  46ce78:	ldrb	w1, [x2, #1]
  46ce7c:	cbnz	w1, 46cdb0 <_obstack_memory_used@@Base+0x18a10>
  46ce80:	add	x2, x2, #0x2
  46ce84:	b	46cda0 <_obstack_memory_used@@Base+0x18a00>
  46ce88:	and	w0, w0, #0xff
  46ce8c:	cmp	w0, #0xff
  46ce90:	b.eq	46cec8 <_obstack_memory_used@@Base+0x18b28>  // b.none
  46ce94:	and	w3, w0, #0x70
  46ce98:	cmp	w3, #0x20
  46ce9c:	b.eq	46cee0 <_obstack_memory_used@@Base+0x18b40>  // b.none
  46cea0:	b.ls	46ceb4 <_obstack_memory_used@@Base+0x18b14>  // b.plast
  46cea4:	cmp	w3, #0x30
  46cea8:	b.ne	46ced0 <_obstack_memory_used@@Base+0x18b30>  // b.any
  46ceac:	ldr	x0, [x2]
  46ceb0:	ret
  46ceb4:	tst	w0, #0x60
  46ceb8:	b.eq	46cec8 <_obstack_memory_used@@Base+0x18b28>  // b.none
  46cebc:	stp	x29, x30, [sp, #-16]!
  46cec0:	mov	x29, sp
  46cec4:	bl	402990 <abort@plt>
  46cec8:	mov	x0, #0x0                   	// #0
  46cecc:	ret
  46ced0:	cmp	w3, #0x50
  46ced4:	mov	x0, #0x0                   	// #0
  46ced8:	b.ne	46cebc <_obstack_memory_used@@Base+0x18b1c>  // b.any
  46cedc:	ret
  46cee0:	ldr	x0, [x1]
  46cee4:	ret
  46cee8:	stp	x29, x30, [sp, #-64]!
  46ceec:	mov	x29, sp
  46cef0:	stp	x21, x22, [sp, #32]
  46cef4:	mov	x22, x2
  46cef8:	ldrh	w21, [x0, #32]
  46cefc:	add	x2, x0, #0x10
  46cf00:	stp	x19, x20, [sp, #16]
  46cf04:	mov	x19, x0
  46cf08:	ubfx	x21, x21, #3, #8
  46cf0c:	mov	x20, x1
  46cf10:	add	x1, x0, #0x8
  46cf14:	mov	w0, w21
  46cf18:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46cf1c:	add	x2, x20, #0x8
  46cf20:	mov	x20, x0
  46cf24:	mov	x1, x20
  46cf28:	add	x3, sp, #0x30
  46cf2c:	mov	w0, w21
  46cf30:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46cf34:	ldrh	w0, [x19, #32]
  46cf38:	add	x2, x22, #0x8
  46cf3c:	mov	x1, x20
  46cf40:	add	x3, sp, #0x38
  46cf44:	ubfx	x0, x0, #3, #8
  46cf48:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46cf4c:	ldp	x2, x1, [sp, #48]
  46cf50:	mov	w3, #0x1                   	// #1
  46cf54:	ldp	x19, x20, [sp, #16]
  46cf58:	ldp	x21, x22, [sp, #32]
  46cf5c:	cmp	x2, x1
  46cf60:	csetm	w0, cc  // cc = lo, ul, last
  46cf64:	csel	w0, w0, w3, ls  // ls = plast
  46cf68:	ldp	x29, x30, [sp], #64
  46cf6c:	ret
  46cf70:	stp	x29, x30, [sp, #-128]!
  46cf74:	mov	x29, sp
  46cf78:	stp	x21, x22, [sp, #32]
  46cf7c:	add	x22, x0, #0x8
  46cf80:	stp	x23, x24, [sp, #48]
  46cf84:	add	x23, x0, #0x10
  46cf88:	stp	x25, x26, [sp, #64]
  46cf8c:	mov	x26, x0
  46cf90:	ldrh	w0, [x0, #32]
  46cf94:	stp	x19, x20, [sp, #16]
  46cf98:	mov	x19, x1
  46cf9c:	mov	x20, x2
  46cfa0:	ubfx	x24, x0, #3, #8
  46cfa4:	mov	x1, x22
  46cfa8:	mov	x2, x23
  46cfac:	mov	x0, x24
  46cfb0:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46cfb4:	ldr	w1, [x19]
  46cfb8:	cbz	w1, 46d04c <_obstack_memory_used@@Base+0x18cac>
  46cfbc:	stp	x27, x28, [sp, #80]
  46cfc0:	add	x27, sp, #0x70
  46cfc4:	mov	x25, x0
  46cfc8:	mov	x21, #0x0                   	// #0
  46cfcc:	add	x0, sp, #0x78
  46cfd0:	str	x0, [sp, #104]
  46cfd4:	nop
  46cfd8:	ldr	w1, [x19, #4]
  46cfdc:	cbz	w1, 46d034 <_obstack_memory_used@@Base+0x18c94>
  46cfe0:	ldrb	w0, [x26, #32]
  46cfe4:	tbz	w0, #2, 46d018 <_obstack_memory_used@@Base+0x18c78>
  46cfe8:	add	x28, x19, #0x4
  46cfec:	sub	x28, x28, w1, sxtw
  46cff0:	cmp	x28, x21
  46cff4:	b.eq	46d018 <_obstack_memory_used@@Base+0x18c78>  // b.none
  46cff8:	mov	x0, x28
  46cffc:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d000:	mov	x2, x23
  46d004:	mov	w24, w0
  46d008:	mov	x1, x22
  46d00c:	mov	x21, x28
  46d010:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d014:	mov	x25, x0
  46d018:	cbnz	w24, 46d068 <_obstack_memory_used@@Base+0x18cc8>
  46d01c:	ldp	x1, x0, [x19, #8]
  46d020:	stp	x1, x0, [sp, #112]
  46d024:	cbz	x1, 46d034 <_obstack_memory_used@@Base+0x18c94>
  46d028:	sub	x1, x20, x1
  46d02c:	cmp	x1, x0
  46d030:	b.cc	46d0d0 <_obstack_memory_used@@Base+0x18d30>  // b.lo, b.ul, b.last
  46d034:	ldr	w1, [x19]
  46d038:	add	x1, x1, #0x4
  46d03c:	add	x19, x19, x1
  46d040:	ldr	w1, [x19]
  46d044:	cbnz	w1, 46cfd8 <_obstack_memory_used@@Base+0x18c38>
  46d048:	ldp	x27, x28, [sp, #80]
  46d04c:	mov	x0, #0x0                   	// #0
  46d050:	ldp	x19, x20, [sp, #16]
  46d054:	ldp	x21, x22, [sp, #32]
  46d058:	ldp	x23, x24, [sp, #48]
  46d05c:	ldp	x25, x26, [sp, #64]
  46d060:	ldp	x29, x30, [sp], #128
  46d064:	ret
  46d068:	and	w28, w24, #0xff
  46d06c:	mov	x3, x27
  46d070:	add	x2, x19, #0x8
  46d074:	mov	x1, x25
  46d078:	mov	w0, w28
  46d07c:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d080:	ldr	x3, [sp, #104]
  46d084:	mov	x2, x0
  46d088:	mov	x1, #0x0                   	// #0
  46d08c:	and	w0, w28, #0xf
  46d090:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d094:	mov	w0, w28
  46d098:	bl	46cbb0 <_obstack_memory_used@@Base+0x18810>
  46d09c:	lsl	w2, w0, #3
  46d0a0:	cmp	w0, #0x8
  46d0a4:	mov	x0, #0x1                   	// #1
  46d0a8:	ldr	x1, [sp, #112]
  46d0ac:	lsl	x2, x0, x2
  46d0b0:	sub	x2, x2, #0x1
  46d0b4:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46d0b8:	tst	x1, x2
  46d0bc:	b.eq	46d034 <_obstack_memory_used@@Base+0x18c94>  // b.none
  46d0c0:	ldr	x0, [sp, #120]
  46d0c4:	sub	x1, x20, x1
  46d0c8:	cmp	x1, x0
  46d0cc:	b.cs	46d034 <_obstack_memory_used@@Base+0x18c94>  // b.hs, b.nlast
  46d0d0:	mov	x0, x19
  46d0d4:	ldp	x19, x20, [sp, #16]
  46d0d8:	ldp	x21, x22, [sp, #32]
  46d0dc:	ldp	x23, x24, [sp, #48]
  46d0e0:	ldp	x25, x26, [sp, #64]
  46d0e4:	ldp	x27, x28, [sp, #80]
  46d0e8:	ldp	x29, x30, [sp], #128
  46d0ec:	ret
  46d0f0:	stp	x29, x30, [sp, #-80]!
  46d0f4:	add	x3, x1, #0x4
  46d0f8:	mov	x29, sp
  46d0fc:	stp	x21, x22, [sp, #32]
  46d100:	mov	x21, x1
  46d104:	ldrsw	x1, [x1, #4]
  46d108:	stp	x19, x20, [sp, #16]
  46d10c:	mov	x20, x2
  46d110:	add	x19, x0, #0x10
  46d114:	str	x23, [sp, #48]
  46d118:	add	x23, x0, #0x8
  46d11c:	sub	x0, x3, x1
  46d120:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d124:	and	w22, w0, #0xff
  46d128:	mov	x2, x19
  46d12c:	mov	x1, x23
  46d130:	mov	w0, w22
  46d134:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d138:	mov	x1, x0
  46d13c:	add	x3, sp, #0x40
  46d140:	add	x2, x21, #0x8
  46d144:	mov	w0, w22
  46d148:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d14c:	add	x1, x20, #0x4
  46d150:	ldrsw	x0, [x20, #4]
  46d154:	sub	x0, x1, x0
  46d158:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d15c:	mov	x2, x19
  46d160:	and	w19, w0, #0xff
  46d164:	mov	x1, x23
  46d168:	mov	w0, w19
  46d16c:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d170:	mov	x1, x0
  46d174:	add	x2, x20, #0x8
  46d178:	add	x3, sp, #0x48
  46d17c:	mov	w0, w19
  46d180:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d184:	ldp	x2, x1, [sp, #64]
  46d188:	mov	w3, #0x1                   	// #1
  46d18c:	ldp	x19, x20, [sp, #16]
  46d190:	ldp	x21, x22, [sp, #32]
  46d194:	cmp	x2, x1
  46d198:	csetm	w0, cc  // cc = lo, ul, last
  46d19c:	csel	w0, w0, w3, ls  // ls = plast
  46d1a0:	ldr	x23, [sp, #48]
  46d1a4:	ldp	x29, x30, [sp], #80
  46d1a8:	ret
  46d1ac:	nop
  46d1b0:	stp	x29, x30, [sp, #-112]!
  46d1b4:	mov	x29, sp
  46d1b8:	stp	x21, x22, [sp, #32]
  46d1bc:	mov	x21, x0
  46d1c0:	ldr	w0, [x1]
  46d1c4:	cbz	w0, 46d328 <_obstack_memory_used@@Base+0x18f88>
  46d1c8:	stp	x19, x20, [sp, #16]
  46d1cc:	mov	x19, x1
  46d1d0:	mov	w20, #0x0                   	// #0
  46d1d4:	stp	x25, x26, [sp, #64]
  46d1d8:	add	x25, sp, #0x68
  46d1dc:	add	x26, x21, #0x8
  46d1e0:	stp	x27, x28, [sp, #80]
  46d1e4:	add	x27, x21, #0x10
  46d1e8:	mov	x22, #0x0                   	// #0
  46d1ec:	mov	x4, #0x0                   	// #0
  46d1f0:	stp	x23, x24, [sp, #48]
  46d1f4:	mov	x23, #0x0                   	// #0
  46d1f8:	ldr	w2, [x19, #4]
  46d1fc:	cbz	w2, 46d2c4 <_obstack_memory_used@@Base+0x18f24>
  46d200:	add	x28, x19, #0x4
  46d204:	and	w24, w20, #0xff
  46d208:	sub	x28, x28, w2, sxtw
  46d20c:	cmp	x28, x4
  46d210:	b.eq	46d268 <_obstack_memory_used@@Base+0x18ec8>  // b.none
  46d214:	mov	x0, x28
  46d218:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d21c:	mov	w20, w0
  46d220:	cmp	w0, #0xff
  46d224:	b.eq	46d304 <_obstack_memory_used@@Base+0x18f64>  // b.none
  46d228:	and	w24, w0, #0xff
  46d22c:	mov	x2, x27
  46d230:	mov	w0, w24
  46d234:	mov	x1, x26
  46d238:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d23c:	mov	x23, x0
  46d240:	ldrh	w2, [x21, #32]
  46d244:	and	w0, w2, #0x7f8
  46d248:	cmp	w0, #0x7f8
  46d24c:	b.eq	46d2f8 <_obstack_memory_used@@Base+0x18f58>  // b.none
  46d250:	ubfx	x2, x2, #3, #8
  46d254:	cmp	w2, w20
  46d258:	b.eq	46d268 <_obstack_memory_used@@Base+0x18ec8>  // b.none
  46d25c:	ldrb	w0, [x21, #32]
  46d260:	orr	w0, w0, #0x4
  46d264:	strb	w0, [x21, #32]
  46d268:	mov	x3, x25
  46d26c:	add	x2, x19, #0x8
  46d270:	mov	x1, x23
  46d274:	mov	w0, w24
  46d278:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d27c:	mov	w0, w24
  46d280:	bl	46cbb0 <_obstack_memory_used@@Base+0x18810>
  46d284:	lsl	w2, w0, #3
  46d288:	cmp	w0, #0x8
  46d28c:	mov	x0, #0x1                   	// #1
  46d290:	ldr	x3, [sp, #104]
  46d294:	lsl	x2, x0, x2
  46d298:	sub	x2, x2, #0x1
  46d29c:	mov	x4, x28
  46d2a0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46d2a4:	tst	x3, x2
  46d2a8:	b.eq	46d2c4 <_obstack_memory_used@@Base+0x18f24>  // b.none
  46d2ac:	ldr	x0, [x21]
  46d2b0:	add	x22, x22, #0x1
  46d2b4:	cmp	x0, x3
  46d2b8:	b.ls	46d2c0 <_obstack_memory_used@@Base+0x18f20>  // b.plast
  46d2bc:	str	x3, [x21]
  46d2c0:	mov	x4, x28
  46d2c4:	ldr	w2, [x19]
  46d2c8:	add	x2, x2, #0x4
  46d2cc:	add	x19, x19, x2
  46d2d0:	ldr	w0, [x19]
  46d2d4:	cbnz	w0, 46d1f8 <_obstack_memory_used@@Base+0x18e58>
  46d2d8:	ldp	x19, x20, [sp, #16]
  46d2dc:	ldp	x23, x24, [sp, #48]
  46d2e0:	ldp	x25, x26, [sp, #64]
  46d2e4:	ldp	x27, x28, [sp, #80]
  46d2e8:	mov	x0, x22
  46d2ec:	ldp	x21, x22, [sp, #32]
  46d2f0:	ldp	x29, x30, [sp], #112
  46d2f4:	ret
  46d2f8:	bfi	w2, w24, #3, #8
  46d2fc:	strh	w2, [x21, #32]
  46d300:	b	46d268 <_obstack_memory_used@@Base+0x18ec8>
  46d304:	mov	x22, #0xffffffffffffffff    	// #-1
  46d308:	mov	x0, x22
  46d30c:	ldp	x19, x20, [sp, #16]
  46d310:	ldp	x21, x22, [sp, #32]
  46d314:	ldp	x23, x24, [sp, #48]
  46d318:	ldp	x25, x26, [sp, #64]
  46d31c:	ldp	x27, x28, [sp, #80]
  46d320:	ldp	x29, x30, [sp], #112
  46d324:	ret
  46d328:	mov	x22, #0x0                   	// #0
  46d32c:	b	46d2e8 <_obstack_memory_used@@Base+0x18f48>
  46d330:	stp	x29, x30, [sp, #-112]!
  46d334:	mov	x29, sp
  46d338:	stp	x21, x22, [sp, #32]
  46d33c:	add	x21, x0, #0x8
  46d340:	add	x22, x0, #0x10
  46d344:	stp	x27, x28, [sp, #80]
  46d348:	mov	x28, x0
  46d34c:	ldrh	w0, [x0, #32]
  46d350:	stp	x19, x20, [sp, #16]
  46d354:	mov	x19, x2
  46d358:	mov	x20, x1
  46d35c:	stp	x25, x26, [sp, #64]
  46d360:	ubfx	x26, x0, #3, #8
  46d364:	mov	x2, x22
  46d368:	mov	x1, x21
  46d36c:	mov	x0, x26
  46d370:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d374:	ldr	w2, [x19]
  46d378:	cbz	w2, 46d410 <_obstack_memory_used@@Base+0x19070>
  46d37c:	add	x25, sp, #0x68
  46d380:	stp	x23, x24, [sp, #48]
  46d384:	mov	x24, x0
  46d388:	mov	x23, #0x0                   	// #0
  46d38c:	nop
  46d390:	ldr	w2, [x19, #4]
  46d394:	cbz	w2, 46d3f8 <_obstack_memory_used@@Base+0x19058>
  46d398:	ldrb	w0, [x28, #32]
  46d39c:	tbz	w0, #2, 46d3d0 <_obstack_memory_used@@Base+0x19030>
  46d3a0:	add	x27, x19, #0x4
  46d3a4:	sub	x27, x27, w2, sxtw
  46d3a8:	cmp	x27, x23
  46d3ac:	b.eq	46d3d0 <_obstack_memory_used@@Base+0x19030>  // b.none
  46d3b0:	mov	x0, x27
  46d3b4:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d3b8:	mov	x2, x22
  46d3bc:	mov	w26, w0
  46d3c0:	mov	x1, x21
  46d3c4:	mov	x23, x27
  46d3c8:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d3cc:	mov	x24, x0
  46d3d0:	cbnz	w26, 46d428 <_obstack_memory_used@@Base+0x19088>
  46d3d4:	ldr	x0, [x19, #8]
  46d3d8:	cbz	x0, 46d3f8 <_obstack_memory_used@@Base+0x19058>
  46d3dc:	ldr	x2, [x20]
  46d3e0:	cbz	x2, 46d3f8 <_obstack_memory_used@@Base+0x19058>
  46d3e4:	ldr	x3, [x2, #8]
  46d3e8:	add	x0, x3, #0x2
  46d3ec:	add	x3, x3, #0x1
  46d3f0:	str	x3, [x2, #8]
  46d3f4:	str	x19, [x2, x0, lsl #3]
  46d3f8:	ldr	w2, [x19]
  46d3fc:	add	x2, x2, #0x4
  46d400:	add	x19, x19, x2
  46d404:	ldr	w2, [x19]
  46d408:	cbnz	w2, 46d390 <_obstack_memory_used@@Base+0x18ff0>
  46d40c:	ldp	x23, x24, [sp, #48]
  46d410:	ldp	x19, x20, [sp, #16]
  46d414:	ldp	x21, x22, [sp, #32]
  46d418:	ldp	x25, x26, [sp, #64]
  46d41c:	ldp	x27, x28, [sp, #80]
  46d420:	ldp	x29, x30, [sp], #112
  46d424:	ret
  46d428:	mov	x3, x25
  46d42c:	add	x2, x19, #0x8
  46d430:	mov	x1, x24
  46d434:	and	w27, w26, #0xff
  46d438:	mov	w0, w27
  46d43c:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d440:	mov	w0, w27
  46d444:	bl	46cbb0 <_obstack_memory_used@@Base+0x18810>
  46d448:	lsl	w2, w0, #3
  46d44c:	cmp	w0, #0x8
  46d450:	mov	x0, #0x1                   	// #1
  46d454:	ldr	x3, [sp, #104]
  46d458:	lsl	x2, x0, x2
  46d45c:	sub	x2, x2, #0x1
  46d460:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46d464:	tst	x2, x3
  46d468:	b.ne	46d3dc <_obstack_memory_used@@Base+0x1903c>  // b.any
  46d46c:	b	46d3f8 <_obstack_memory_used@@Base+0x19058>
  46d470:	stp	x29, x30, [sp, #-128]!
  46d474:	cmp	x1, #0x2f
  46d478:	mov	x29, sp
  46d47c:	stp	x19, x20, [sp, #16]
  46d480:	mov	x19, x2
  46d484:	ldr	w2, [x2, #40]
  46d488:	ldr	x13, [x0]
  46d48c:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  46d490:	ldr	x3, [x0, #16]
  46d494:	b.ne	46d5d4 <_obstack_memory_used@@Base+0x19234>  // b.any
  46d498:	cmp	x1, #0x19
  46d49c:	b.ls	46d5ac <_obstack_memory_used@@Base+0x1920c>  // b.plast
  46d4a0:	mov	x10, #0x0                   	// #0
  46d4a4:	mov	x15, #0x0                   	// #0
  46d4a8:	ldrh	w4, [x0, #24]
  46d4ac:	cbz	w4, 46d5c4 <_obstack_memory_used@@Base+0x19224>
  46d4b0:	mov	w0, #0x38                  	// #56
  46d4b4:	mov	w7, #0xe550                	// #58704
  46d4b8:	mov	x11, #0x0                   	// #0
  46d4bc:	mov	x12, #0x0                   	// #0
  46d4c0:	umaddl	x4, w4, w0, x3
  46d4c4:	mov	x8, #0x0                   	// #0
  46d4c8:	mov	x6, #0x0                   	// #0
  46d4cc:	mov	x9, #0x0                   	// #0
  46d4d0:	movk	w7, #0x6474, lsl #16
  46d4d4:	mov	x14, #0x1                   	// #1
  46d4d8:	b	46d4f8 <_obstack_memory_used@@Base+0x19158>
  46d4dc:	cmp	w0, w7
  46d4e0:	b.eq	46d5bc <_obstack_memory_used@@Base+0x1921c>  // b.none
  46d4e4:	cmp	w0, #0x2
  46d4e8:	csel	x6, x6, x3, ne  // ne = any
  46d4ec:	add	x3, x3, #0x38
  46d4f0:	cmp	x4, x3
  46d4f4:	b.eq	46d540 <_obstack_memory_used@@Base+0x191a0>  // b.none
  46d4f8:	ldr	w0, [x3]
  46d4fc:	cmp	w0, #0x1
  46d500:	b.ne	46d4dc <_obstack_memory_used@@Base+0x1913c>  // b.any
  46d504:	ldr	x0, [x3, #16]
  46d508:	ldr	x5, [x19]
  46d50c:	add	x0, x13, x0
  46d510:	cmp	x5, x0
  46d514:	b.cc	46d4ec <_obstack_memory_used@@Base+0x1914c>  // b.lo, b.ul, b.last
  46d518:	ldr	x2, [x3, #40]
  46d51c:	add	x3, x3, #0x38
  46d520:	add	x2, x0, x2
  46d524:	cmp	x5, x2
  46d528:	csel	x11, x11, x2, cs  // cs = hs, nlast
  46d52c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  46d530:	csel	x8, x8, x14, cs  // cs = hs, nlast
  46d534:	cmp	x4, x3
  46d538:	b.ne	46d4f8 <_obstack_memory_used@@Base+0x19158>  // b.any
  46d53c:	nop
  46d540:	cbz	x8, 46d5c4 <_obstack_memory_used@@Base+0x19224>
  46d544:	cmp	x1, #0x2f
  46d548:	b.ls	46d584 <_obstack_memory_used@@Base+0x191e4>  // b.plast
  46d54c:	adrp	x1, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46d550:	add	x1, x1, #0xbc8
  46d554:	cmp	x10, #0x0
  46d558:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  46d55c:	ldr	x0, [x1, #8]
  46d560:	b.eq	46d578 <_obstack_memory_used@@Base+0x191d8>  // b.none
  46d564:	ldr	x2, [x10, #40]
  46d568:	str	x2, [x15, #40]
  46d56c:	str	x0, [x10, #40]
  46d570:	mov	x0, x10
  46d574:	str	x10, [x1, #8]
  46d578:	stp	x12, x11, [x0]
  46d57c:	stp	x13, x9, [x0, #16]
  46d580:	str	x6, [x0, #32]
  46d584:	cbz	x9, 46d5c4 <_obstack_memory_used@@Base+0x19224>
  46d588:	ldr	x0, [x9, #16]
  46d58c:	add	x20, x13, x0
  46d590:	ldrb	w0, [x13, x0]
  46d594:	cmp	w0, #0x1
  46d598:	b.eq	46d634 <_obstack_memory_used@@Base+0x19294>  // b.none
  46d59c:	mov	w0, #0x1                   	// #1
  46d5a0:	ldp	x19, x20, [sp, #16]
  46d5a4:	ldp	x29, x30, [sp], #128
  46d5a8:	ret
  46d5ac:	mov	w0, #0xffffffff            	// #-1
  46d5b0:	ldp	x19, x20, [sp, #16]
  46d5b4:	ldp	x29, x30, [sp], #128
  46d5b8:	ret
  46d5bc:	mov	x9, x3
  46d5c0:	b	46d4ec <_obstack_memory_used@@Base+0x1914c>
  46d5c4:	mov	w0, #0x0                   	// #0
  46d5c8:	ldp	x19, x20, [sp, #16]
  46d5cc:	ldp	x29, x30, [sp], #128
  46d5d0:	ret
  46d5d4:	ldp	x6, x7, [x0, #32]
  46d5d8:	adrp	x4, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46d5dc:	adrp	x5, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46d5e0:	ldr	x2, [x4, #1416]
  46d5e4:	cmp	x6, x2
  46d5e8:	b.eq	46d708 <_obstack_memory_used@@Base+0x19368>  // b.none
  46d5ec:	add	x2, x5, #0xbc8
  46d5f0:	str	x6, [x4, #1416]
  46d5f4:	add	x4, x2, #0x40
  46d5f8:	add	x2, x2, #0x1c0
  46d5fc:	str	x7, [x5, #3016]
  46d600:	stp	xzr, xzr, [x4, #-48]
  46d604:	stur	x4, [x4, #-8]
  46d608:	add	x4, x4, #0x30
  46d60c:	cmp	x2, x4
  46d610:	b.ne	46d600 <_obstack_memory_used@@Base+0x19260>  // b.any
  46d614:	add	x5, x5, #0xbc8
  46d618:	mov	x10, #0x0                   	// #0
  46d61c:	add	x2, x5, #0x10
  46d620:	mov	x15, #0x0                   	// #0
  46d624:	str	xzr, [x5, #392]
  46d628:	str	x2, [x5, #8]
  46d62c:	str	wzr, [x19, #40]
  46d630:	b	46d4a8 <_obstack_memory_used@@Base+0x19108>
  46d634:	stp	x21, x22, [sp, #32]
  46d638:	add	x22, x19, #0x8
  46d63c:	mov	x1, x22
  46d640:	stp	x23, x24, [sp, #48]
  46d644:	add	x23, x19, #0x10
  46d648:	mov	x2, x23
  46d64c:	ldrb	w21, [x20, #1]
  46d650:	mov	w0, w21
  46d654:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d658:	add	x3, sp, #0x40
  46d65c:	mov	x1, x0
  46d660:	add	x2, x20, #0x4
  46d664:	mov	w0, w21
  46d668:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d66c:	ldrb	w24, [x20, #2]
  46d670:	mov	x21, x0
  46d674:	cmp	w24, #0xff
  46d678:	b.eq	46d688 <_obstack_memory_used@@Base+0x192e8>  // b.none
  46d67c:	ldrb	w0, [x20, #3]
  46d680:	cmp	w0, #0x3b
  46d684:	b.eq	46d768 <_obstack_memory_used@@Base+0x193c8>  // b.none
  46d688:	ldr	x2, [x19]
  46d68c:	mov	x3, #0x4                   	// #4
  46d690:	ldp	x5, x4, [x19, #8]
  46d694:	add	x0, sp, #0x50
  46d698:	ldr	x1, [sp, #64]
  46d69c:	stp	xzr, x5, [sp, #80]
  46d6a0:	stp	x4, x1, [sp, #96]
  46d6a4:	str	x3, [sp, #112]
  46d6a8:	bl	46cf70 <_obstack_memory_used@@Base+0x18bd0>
  46d6ac:	str	x0, [x19, #32]
  46d6b0:	cbz	x0, 46d880 <_obstack_memory_used@@Base+0x194e0>
  46d6b4:	ldrsw	x1, [x0, #4]
  46d6b8:	add	x0, x0, #0x4
  46d6bc:	sub	x0, x0, x1
  46d6c0:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d6c4:	and	w20, w0, #0xff
  46d6c8:	mov	x2, x23
  46d6cc:	mov	x1, x22
  46d6d0:	mov	w0, w20
  46d6d4:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d6d8:	ldr	x2, [x19, #32]
  46d6dc:	mov	x1, x0
  46d6e0:	add	x3, sp, #0x48
  46d6e4:	mov	w0, w20
  46d6e8:	add	x2, x2, #0x8
  46d6ec:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d6f0:	ldr	x1, [sp, #72]
  46d6f4:	mov	w0, #0x1                   	// #1
  46d6f8:	ldp	x21, x22, [sp, #32]
  46d6fc:	ldp	x23, x24, [sp, #48]
  46d700:	str	x1, [x19, #24]
  46d704:	b	46d5b0 <_obstack_memory_used@@Base+0x19210>
  46d708:	ldr	x2, [x5, #3016]
  46d70c:	add	x8, x5, #0xbc8
  46d710:	cmp	x2, x7
  46d714:	b.ne	46d5ec <_obstack_memory_used@@Base+0x1924c>  // b.any
  46d718:	ldr	x7, [x8, #8]
  46d71c:	cbz	x7, 46d4a0 <_obstack_memory_used@@Base+0x19100>
  46d720:	mov	x10, x7
  46d724:	mov	x15, #0x0                   	// #0
  46d728:	ldr	x6, [x19]
  46d72c:	ldp	x2, x4, [x10]
  46d730:	cmp	x6, x2
  46d734:	b.cc	46d740 <_obstack_memory_used@@Base+0x193a0>  // b.lo, b.ul, b.last
  46d738:	cmp	x6, x4
  46d73c:	b.cc	46d898 <_obstack_memory_used@@Base+0x194f8>  // b.lo, b.ul, b.last
  46d740:	orr	x2, x2, x4
  46d744:	cbz	x2, 46d4a8 <_obstack_memory_used@@Base+0x19108>
  46d748:	ldr	x2, [x10, #40]
  46d74c:	cbz	x2, 46d4a8 <_obstack_memory_used@@Base+0x19108>
  46d750:	mov	x15, x10
  46d754:	mov	x10, x2
  46d758:	ldp	x2, x4, [x10]
  46d75c:	cmp	x6, x2
  46d760:	b.cc	46d740 <_obstack_memory_used@@Base+0x193a0>  // b.lo, b.ul, b.last
  46d764:	b	46d738 <_obstack_memory_used@@Base+0x19398>
  46d768:	mov	x2, x23
  46d76c:	mov	x1, x22
  46d770:	mov	w0, w24
  46d774:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46d778:	add	x3, sp, #0x48
  46d77c:	mov	x1, x0
  46d780:	mov	x2, x21
  46d784:	mov	w0, w24
  46d788:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d78c:	ldr	x3, [sp, #72]
  46d790:	cbz	x3, 46d870 <_obstack_memory_used@@Base+0x194d0>
  46d794:	ands	x5, x0, #0x3
  46d798:	ldr	x2, [x19]
  46d79c:	b.ne	46d68c <_obstack_memory_used@@Base+0x192ec>  // b.any
  46d7a0:	ldrsw	x1, [x0]
  46d7a4:	add	x1, x1, x20
  46d7a8:	cmp	x1, x2
  46d7ac:	b.hi	46d870 <_obstack_memory_used@@Base+0x194d0>  // b.pmore
  46d7b0:	sub	x3, x3, #0x1
  46d7b4:	lsl	x1, x3, #3
  46d7b8:	add	x21, x0, x1
  46d7bc:	ldrsw	x1, [x0, x1]
  46d7c0:	add	x1, x1, x20
  46d7c4:	cmp	x1, x2
  46d7c8:	b.ls	46d80c <_obstack_memory_used@@Base+0x1946c>  // b.plast
  46d7cc:	cmp	x5, x3
  46d7d0:	b.cs	46d8bc <_obstack_memory_used@@Base+0x1951c>  // b.hs, b.nlast
  46d7d4:	add	x1, x5, x3
  46d7d8:	lsr	x1, x1, #1
  46d7dc:	lsl	x4, x1, #3
  46d7e0:	add	x21, x0, x4
  46d7e4:	ldrsw	x4, [x0, x4]
  46d7e8:	add	x4, x4, x20
  46d7ec:	cmp	x4, x2
  46d7f0:	b.hi	46d890 <_obstack_memory_used@@Base+0x194f0>  // b.pmore
  46d7f4:	add	x5, x1, #0x1
  46d7f8:	lsl	x1, x5, #3
  46d7fc:	ldrsw	x1, [x0, x1]
  46d800:	add	x1, x1, x20
  46d804:	cmp	x1, x2
  46d808:	b.ls	46d7cc <_obstack_memory_used@@Base+0x1942c>  // b.plast
  46d80c:	ldrsw	x22, [x21, #4]
  46d810:	add	x22, x22, x20
  46d814:	add	x1, x22, #0x4
  46d818:	ldrsw	x0, [x22, #4]
  46d81c:	sub	x0, x1, x0
  46d820:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46d824:	and	w23, w0, #0xff
  46d828:	mov	w0, w23
  46d82c:	bl	46cbb0 <_obstack_memory_used@@Base+0x18810>
  46d830:	mov	w2, w0
  46d834:	mov	x1, #0x0                   	// #0
  46d838:	add	x2, x2, #0x8
  46d83c:	add	x3, sp, #0x50
  46d840:	add	x2, x22, x2
  46d844:	and	w0, w23, #0xf
  46d848:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46d84c:	ldrsw	x0, [x21]
  46d850:	ldr	x1, [sp, #80]
  46d854:	add	x20, x0, x20
  46d858:	ldr	x2, [x19]
  46d85c:	add	x0, x20, x1
  46d860:	cmp	x2, x0
  46d864:	b.cs	46d86c <_obstack_memory_used@@Base+0x194cc>  // b.hs, b.nlast
  46d868:	str	x22, [x19, #32]
  46d86c:	str	x20, [x19, #24]
  46d870:	mov	w0, #0x1                   	// #1
  46d874:	ldp	x21, x22, [sp, #32]
  46d878:	ldp	x23, x24, [sp, #48]
  46d87c:	b	46d5b0 <_obstack_memory_used@@Base+0x19210>
  46d880:	mov	w0, #0x1                   	// #1
  46d884:	ldp	x21, x22, [sp, #32]
  46d888:	ldp	x23, x24, [sp, #48]
  46d88c:	b	46d5a0 <_obstack_memory_used@@Base+0x19200>
  46d890:	mov	x3, x1
  46d894:	b	46d7cc <_obstack_memory_used@@Base+0x1942c>
  46d898:	cmp	x10, x7
  46d89c:	ldp	x13, x9, [x10, #16]
  46d8a0:	b.eq	46d584 <_obstack_memory_used@@Base+0x191e4>  // b.none
  46d8a4:	add	x5, x5, #0xbc8
  46d8a8:	ldr	x0, [x10, #40]
  46d8ac:	str	x0, [x15, #40]
  46d8b0:	str	x10, [x5, #8]
  46d8b4:	str	x7, [x10, #40]
  46d8b8:	b	46d584 <_obstack_memory_used@@Base+0x191e4>
  46d8bc:	bl	402990 <abort@plt>
  46d8c0:	stp	x29, x30, [sp, #-160]!
  46d8c4:	mov	x29, sp
  46d8c8:	stp	x19, x20, [sp, #16]
  46d8cc:	mov	x19, x1
  46d8d0:	ldrb	w1, [x0, #32]
  46d8d4:	stp	x23, x24, [sp, #48]
  46d8d8:	mov	x24, x0
  46d8dc:	tbz	w1, #0, 46d948 <_obstack_memory_used@@Base+0x195a8>
  46d8e0:	stp	x27, x28, [sp, #80]
  46d8e4:	ldr	x27, [x24, #24]
  46d8e8:	tbnz	w1, #2, 46d9bc <_obstack_memory_used@@Base+0x1961c>
  46d8ec:	ldrh	w0, [x24, #32]
  46d8f0:	tst	w0, #0x7f8
  46d8f4:	b.ne	46db1c <_obstack_memory_used@@Base+0x1977c>  // b.any
  46d8f8:	mov	x2, #0x0                   	// #0
  46d8fc:	ldr	x1, [x27, #8]
  46d900:	b	46d924 <_obstack_memory_used@@Base+0x19584>
  46d904:	add	x0, x1, x2
  46d908:	lsr	x0, x0, #1
  46d90c:	add	x3, x0, #0x2
  46d910:	ldr	x20, [x27, x3, lsl #3]
  46d914:	ldr	x3, [x20, #8]
  46d918:	cmp	x19, x3
  46d91c:	b.cs	46d9a4 <_obstack_memory_used@@Base+0x19604>  // b.hs, b.nlast
  46d920:	mov	x1, x0
  46d924:	cmp	x1, x2
  46d928:	b.hi	46d904 <_obstack_memory_used@@Base+0x19564>  // b.pmore
  46d92c:	ldp	x27, x28, [sp, #80]
  46d930:	mov	x20, #0x0                   	// #0
  46d934:	mov	x0, x20
  46d938:	ldp	x19, x20, [sp, #16]
  46d93c:	ldp	x23, x24, [sp, #48]
  46d940:	ldp	x29, x30, [sp], #160
  46d944:	ret
  46d948:	stp	x25, x26, [sp, #64]
  46d94c:	ldr	w25, [x0, #32]
  46d950:	stp	x21, x22, [sp, #32]
  46d954:	tst	x25, #0xfffff800
  46d958:	lsr	w25, w25, #11
  46d95c:	b.ne	46dbc4 <_obstack_memory_used@@Base+0x19824>  // b.any
  46d960:	ldr	x20, [x0, #24]
  46d964:	tbz	w1, #1, 46da74 <_obstack_memory_used@@Base+0x196d4>
  46d968:	ldr	x1, [x20]
  46d96c:	cbnz	x1, 46d980 <_obstack_memory_used@@Base+0x195e0>
  46d970:	b	46daa0 <_obstack_memory_used@@Base+0x19700>
  46d974:	ldr	x1, [x20, #8]!
  46d978:	add	x25, x25, x0
  46d97c:	cbz	x1, 46da88 <_obstack_memory_used@@Base+0x196e8>
  46d980:	mov	x0, x24
  46d984:	bl	46d1b0 <_obstack_memory_used@@Base+0x18e10>
  46d988:	cmn	x0, #0x1
  46d98c:	b.ne	46d974 <_obstack_memory_used@@Base+0x195d4>  // b.any
  46d990:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x2ac60>
  46d994:	mov	x1, #0x7f8                 	// #2040
  46d998:	add	x0, x0, #0xe68
  46d99c:	stp	x0, x1, [x24, #24]
  46d9a0:	b	46daa0 <_obstack_memory_used@@Base+0x19700>
  46d9a4:	ldr	x2, [x20, #16]
  46d9a8:	add	x3, x3, x2
  46d9ac:	cmp	x19, x3
  46d9b0:	b.cc	46de98 <_obstack_memory_used@@Base+0x19af8>  // b.lo, b.ul, b.last
  46d9b4:	add	x2, x0, #0x1
  46d9b8:	b	46d924 <_obstack_memory_used@@Base+0x19584>
  46d9bc:	ldr	x28, [x27, #8]
  46d9c0:	cbz	x28, 46d92c <_obstack_memory_used@@Base+0x1958c>
  46d9c4:	add	x0, x24, #0x8
  46d9c8:	add	x23, sp, #0x88
  46d9cc:	stp	x21, x22, [sp, #32]
  46d9d0:	add	x22, sp, #0x90
  46d9d4:	stp	x25, x26, [sp, #64]
  46d9d8:	add	x26, x24, #0x10
  46d9dc:	mov	x25, #0x0                   	// #0
  46d9e0:	str	x0, [sp, #96]
  46d9e4:	b	46da04 <_obstack_memory_used@@Base+0x19664>
  46d9e8:	ldr	x1, [sp, #144]
  46d9ec:	add	x0, x0, x1
  46d9f0:	cmp	x0, x19
  46d9f4:	b.hi	46de90 <_obstack_memory_used@@Base+0x19af0>  // b.pmore
  46d9f8:	add	x25, x24, #0x1
  46d9fc:	cmp	x25, x28
  46da00:	b.cs	46db0c <_obstack_memory_used@@Base+0x1976c>  // b.hs, b.nlast
  46da04:	add	x24, x25, x28
  46da08:	lsr	x24, x24, #1
  46da0c:	add	x0, x24, #0x2
  46da10:	ldr	x20, [x27, x0, lsl #3]
  46da14:	add	x1, x20, #0x4
  46da18:	ldrsw	x0, [x20, #4]
  46da1c:	sub	x0, x1, x0
  46da20:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46da24:	ldr	x1, [sp, #96]
  46da28:	and	w21, w0, #0xff
  46da2c:	mov	x2, x26
  46da30:	mov	w0, w21
  46da34:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46da38:	mov	x1, x0
  46da3c:	mov	x3, x23
  46da40:	add	x2, x20, #0x8
  46da44:	mov	w0, w21
  46da48:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46da4c:	mov	x3, x22
  46da50:	mov	x2, x0
  46da54:	mov	x1, #0x0                   	// #0
  46da58:	and	w0, w21, #0xf
  46da5c:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46da60:	ldr	x0, [sp, #136]
  46da64:	cmp	x0, x19
  46da68:	b.ls	46d9e8 <_obstack_memory_used@@Base+0x19648>  // b.plast
  46da6c:	mov	x28, x24
  46da70:	b	46d9fc <_obstack_memory_used@@Base+0x1965c>
  46da74:	mov	x1, x20
  46da78:	bl	46d1b0 <_obstack_memory_used@@Base+0x18e10>
  46da7c:	mov	x25, x0
  46da80:	cmn	x0, #0x1
  46da84:	b.eq	46d990 <_obstack_memory_used@@Base+0x195f0>  // b.none
  46da88:	ldr	w0, [x24, #32]
  46da8c:	tst	x25, #0xffffffffffe00000
  46da90:	b.eq	46ded4 <_obstack_memory_used@@Base+0x19b34>  // b.none
  46da94:	and	w0, w0, #0x7ff
  46da98:	str	w0, [x24, #32]
  46da9c:	cbnz	x25, 46dbc4 <_obstack_memory_used@@Base+0x19824>
  46daa0:	ldr	x0, [x24]
  46daa4:	cmp	x0, x19
  46daa8:	b.hi	46db00 <_obstack_memory_used@@Base+0x19760>  // b.pmore
  46daac:	ldrb	w1, [x24, #32]
  46dab0:	ldr	x21, [x24, #24]
  46dab4:	tbnz	w1, #0, 46df18 <_obstack_memory_used@@Base+0x19b78>
  46dab8:	tbz	w1, #1, 46de70 <_obstack_memory_used@@Base+0x19ad0>
  46dabc:	ldr	x1, [x21]
  46dac0:	cbnz	x1, 46dad0 <_obstack_memory_used@@Base+0x19730>
  46dac4:	b	46db00 <_obstack_memory_used@@Base+0x19760>
  46dac8:	ldr	x1, [x21, #8]!
  46dacc:	cbz	x1, 46db00 <_obstack_memory_used@@Base+0x19760>
  46dad0:	mov	x2, x19
  46dad4:	mov	x0, x24
  46dad8:	bl	46cf70 <_obstack_memory_used@@Base+0x18bd0>
  46dadc:	mov	x20, x0
  46dae0:	cbz	x0, 46dac8 <_obstack_memory_used@@Base+0x19728>
  46dae4:	mov	x0, x20
  46dae8:	ldp	x19, x20, [sp, #16]
  46daec:	ldp	x21, x22, [sp, #32]
  46daf0:	ldp	x23, x24, [sp, #48]
  46daf4:	ldp	x25, x26, [sp, #64]
  46daf8:	ldp	x29, x30, [sp], #160
  46dafc:	ret
  46db00:	ldp	x21, x22, [sp, #32]
  46db04:	ldp	x25, x26, [sp, #64]
  46db08:	b	46d930 <_obstack_memory_used@@Base+0x19590>
  46db0c:	ldp	x21, x22, [sp, #32]
  46db10:	ldp	x25, x26, [sp, #64]
  46db14:	ldp	x27, x28, [sp, #80]
  46db18:	b	46d930 <_obstack_memory_used@@Base+0x19590>
  46db1c:	stp	x25, x26, [sp, #64]
  46db20:	ubfx	x25, x0, #3, #8
  46db24:	add	x2, x24, #0x10
  46db28:	add	x1, x24, #0x8
  46db2c:	mov	x0, x25
  46db30:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46db34:	mov	x24, x0
  46db38:	ldr	x28, [x27, #8]
  46db3c:	cbz	x28, 46db10 <_obstack_memory_used@@Base+0x19770>
  46db40:	and	w0, w25, #0xf
  46db44:	add	x23, sp, #0x88
  46db48:	mov	x26, #0x0                   	// #0
  46db4c:	stp	x21, x22, [sp, #32]
  46db50:	add	x22, sp, #0x90
  46db54:	str	w0, [sp, #96]
  46db58:	b	46db78 <_obstack_memory_used@@Base+0x197d8>
  46db5c:	ldr	x1, [sp, #144]
  46db60:	add	x0, x0, x1
  46db64:	cmp	x0, x19
  46db68:	b.hi	46de90 <_obstack_memory_used@@Base+0x19af0>  // b.pmore
  46db6c:	add	x26, x21, #0x1
  46db70:	cmp	x26, x28
  46db74:	b.cs	46db0c <_obstack_memory_used@@Base+0x1976c>  // b.hs, b.nlast
  46db78:	add	x21, x28, x26
  46db7c:	mov	x3, x23
  46db80:	mov	x1, x24
  46db84:	mov	w0, w25
  46db88:	lsr	x21, x21, #1
  46db8c:	add	x2, x21, #0x2
  46db90:	ldr	x20, [x27, x2, lsl #3]
  46db94:	add	x2, x20, #0x8
  46db98:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46db9c:	mov	x2, x0
  46dba0:	ldrb	w0, [sp, #96]
  46dba4:	mov	x3, x22
  46dba8:	mov	x1, #0x0                   	// #0
  46dbac:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46dbb0:	ldr	x0, [sp, #136]
  46dbb4:	cmp	x0, x19
  46dbb8:	b.ls	46db5c <_obstack_memory_used@@Base+0x197bc>  // b.plast
  46dbbc:	mov	x28, x21
  46dbc0:	b	46db70 <_obstack_memory_used@@Base+0x197d0>
  46dbc4:	add	x20, x25, #0x2
  46dbc8:	lsl	x20, x20, #3
  46dbcc:	mov	x0, x20
  46dbd0:	bl	4027f0 <malloc@plt>
  46dbd4:	str	x0, [sp, #144]
  46dbd8:	mov	x1, x0
  46dbdc:	cbz	x0, 46daa0 <_obstack_memory_used@@Base+0x19700>
  46dbe0:	str	xzr, [x1, #8]
  46dbe4:	mov	x0, x20
  46dbe8:	bl	4027f0 <malloc@plt>
  46dbec:	str	x0, [sp, #152]
  46dbf0:	cbz	x0, 46dbf8 <_obstack_memory_used@@Base+0x19858>
  46dbf4:	str	xzr, [x0, #8]
  46dbf8:	ldrb	w0, [x24, #32]
  46dbfc:	ldr	x20, [x24, #24]
  46dc00:	tbz	w0, #1, 46deac <_obstack_memory_used@@Base+0x19b0c>
  46dc04:	ldr	x2, [x20]
  46dc08:	cbz	x2, 46df10 <_obstack_memory_used@@Base+0x19b70>
  46dc0c:	add	x22, sp, #0x90
  46dc10:	mov	x1, x22
  46dc14:	mov	x0, x24
  46dc18:	bl	46d330 <_obstack_memory_used@@Base+0x18f90>
  46dc1c:	ldr	x2, [x20, #8]!
  46dc20:	cbnz	x2, 46dc10 <_obstack_memory_used@@Base+0x19870>
  46dc24:	ldr	x0, [sp, #144]
  46dc28:	str	x0, [sp, #96]
  46dc2c:	str	x0, [sp, #120]
  46dc30:	cbz	x0, 46dc40 <_obstack_memory_used@@Base+0x198a0>
  46dc34:	ldr	x0, [x0, #8]
  46dc38:	cmp	x0, x25
  46dc3c:	b.ne	46df10 <_obstack_memory_used@@Base+0x19b70>  // b.any
  46dc40:	ldrb	w0, [x24, #32]
  46dc44:	tbnz	w0, #2, 46dea0 <_obstack_memory_used@@Base+0x19b00>
  46dc48:	ldrh	w1, [x24, #32]
  46dc4c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x17c60>
  46dc50:	adrp	x20, 46c000 <_obstack_memory_used@@Base+0x17c60>
  46dc54:	add	x0, x0, #0xee8
  46dc58:	tst	w1, #0x7f8
  46dc5c:	add	x20, x20, #0x9c0
  46dc60:	csel	x20, x20, x0, eq  // eq = none
  46dc64:	ldr	x22, [sp, #152]
  46dc68:	cbz	x22, 46dec0 <_obstack_memory_used@@Base+0x19b20>
  46dc6c:	ldr	x1, [sp, #96]
  46dc70:	stp	x27, x28, [sp, #80]
  46dc74:	ldr	x0, [x1, #8]
  46dc78:	str	x0, [sp, #104]
  46dc7c:	cbz	x0, 46df00 <_obstack_memory_used@@Base+0x19b60>
  46dc80:	adrp	x3, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46dc84:	add	x3, x3, #0xbc8
  46dc88:	add	x0, x0, #0x1
  46dc8c:	add	x28, x1, #0x10
  46dc90:	add	x27, x3, #0x190
  46dc94:	mov	x21, x28
  46dc98:	mov	x23, x27
  46dc9c:	lsl	x0, x0, #3
  46dca0:	mov	x26, #0x10                  	// #16
  46dca4:	str	x0, [sp, #112]
  46dca8:	ldr	x0, [sp, #112]
  46dcac:	str	x27, [x22, x26]
  46dcb0:	cmp	x0, x26
  46dcb4:	b.eq	46dd10 <_obstack_memory_used@@Base+0x19970>  // b.none
  46dcb8:	cmp	x21, x23
  46dcbc:	mov	x27, x21
  46dcc0:	b.ne	46dce0 <_obstack_memory_used@@Base+0x19940>  // b.any
  46dcc4:	b	46dd00 <_obstack_memory_used@@Base+0x19960>
  46dcc8:	sub	x3, x27, x28
  46dccc:	add	x0, x22, x3
  46dcd0:	ldr	x27, [x0, #16]
  46dcd4:	str	xzr, [x0, #16]
  46dcd8:	cmp	x27, x23
  46dcdc:	b.eq	46dd00 <_obstack_memory_used@@Base+0x19960>  // b.none
  46dce0:	ldr	x2, [x27]
  46dce4:	mov	x0, x24
  46dce8:	ldr	x1, [x21, #8]
  46dcec:	blr	x20
  46dcf0:	tbnz	w0, #31, 46dcc8 <_obstack_memory_used@@Base+0x19928>
  46dcf4:	add	x21, x21, #0x8
  46dcf8:	add	x26, x26, #0x8
  46dcfc:	b	46dca8 <_obstack_memory_used@@Base+0x19908>
  46dd00:	mov	x27, x23
  46dd04:	add	x21, x21, #0x8
  46dd08:	add	x26, x26, #0x8
  46dd0c:	b	46dca8 <_obstack_memory_used@@Base+0x19908>
  46dd10:	add	x6, x22, #0x10
  46dd14:	mov	x5, #0x0                   	// #0
  46dd18:	mov	x3, #0x0                   	// #0
  46dd1c:	mov	x0, #0x0                   	// #0
  46dd20:	b	46dd44 <_obstack_memory_used@@Base+0x199a4>
  46dd24:	ldr	x4, [sp, #96]
  46dd28:	add	x1, x3, #0x2
  46dd2c:	add	x3, x3, #0x1
  46dd30:	str	x2, [x4, x1, lsl #3]
  46dd34:	ldr	x1, [sp, #104]
  46dd38:	add	x0, x0, #0x1
  46dd3c:	cmp	x1, x0
  46dd40:	b.eq	46dd60 <_obstack_memory_used@@Base+0x199c0>  // b.none
  46dd44:	ldr	x1, [x6, x0, lsl #3]
  46dd48:	ldr	x2, [x28, x0, lsl #3]
  46dd4c:	cbnz	x1, 46dd24 <_obstack_memory_used@@Base+0x19984>
  46dd50:	add	x1, x5, #0x2
  46dd54:	add	x5, x5, #0x1
  46dd58:	str	x2, [x22, x1, lsl #3]
  46dd5c:	b	46dd34 <_obstack_memory_used@@Base+0x19994>
  46dd60:	ldp	x0, x2, [sp, #144]
  46dd64:	str	x0, [sp, #96]
  46dd68:	ldr	x0, [sp, #120]
  46dd6c:	str	x3, [x0, #8]
  46dd70:	ldr	x0, [sp, #96]
  46dd74:	str	x5, [x22, #8]
  46dd78:	ldr	x1, [x2, #8]
  46dd7c:	ldr	x0, [x0, #8]
  46dd80:	add	x0, x0, x1
  46dd84:	cmp	x0, x25
  46dd88:	b.ne	46df14 <_obstack_memory_used@@Base+0x19b74>  // b.any
  46dd8c:	mov	x1, x20
  46dd90:	mov	x0, x24
  46dd94:	bl	46caf0 <_obstack_memory_used@@Base+0x18750>
  46dd98:	ldr	x25, [sp, #152]
  46dd9c:	ldr	x22, [x25, #8]
  46dda0:	cbz	x22, 46de44 <_obstack_memory_used@@Base+0x19aa4>
  46dda4:	ldr	x0, [sp, #144]
  46dda8:	str	x0, [sp, #96]
  46ddac:	add	x27, x0, #0x10
  46ddb0:	ldr	x28, [x0, #8]
  46ddb4:	nop
  46ddb8:	add	x0, x25, x22, lsl #3
  46ddbc:	sub	x23, x22, #0x1
  46ddc0:	ldr	x26, [x0, #8]
  46ddc4:	cbz	x28, 46dee0 <_obstack_memory_used@@Base+0x19b40>
  46ddc8:	add	x22, x22, x28
  46ddcc:	mov	x21, x28
  46ddd0:	sub	x22, x22, #0x1
  46ddd4:	b	46dde8 <_obstack_memory_used@@Base+0x19a48>
  46ddd8:	ldr	x0, [x27, x21, lsl #3]
  46dddc:	str	x0, [x27, x22, lsl #3]
  46dde0:	sub	x22, x22, #0x1
  46dde4:	cbz	x21, 46de20 <_obstack_memory_used@@Base+0x19a80>
  46dde8:	mov	x28, x21
  46ddec:	sub	x21, x21, #0x1
  46ddf0:	mov	x2, x26
  46ddf4:	mov	x0, x24
  46ddf8:	ldr	x1, [x27, x21, lsl #3]
  46ddfc:	blr	x20
  46de00:	cmp	w0, #0x0
  46de04:	b.gt	46ddd8 <_obstack_memory_used@@Base+0x19a38>
  46de08:	ldr	x0, [sp, #96]
  46de0c:	add	x22, x22, #0x2
  46de10:	str	x26, [x0, x22, lsl #3]
  46de14:	cbz	x23, 46de2c <_obstack_memory_used@@Base+0x19a8c>
  46de18:	mov	x22, x23
  46de1c:	b	46ddb8 <_obstack_memory_used@@Base+0x19a18>
  46de20:	mov	x22, x23
  46de24:	mov	x28, #0x0                   	// #0
  46de28:	b	46de08 <_obstack_memory_used@@Base+0x19a68>
  46de2c:	ldr	x2, [sp, #96]
  46de30:	ldr	x1, [x25, #8]
  46de34:	ldr	x0, [x2, #8]
  46de38:	ldr	x25, [sp, #152]
  46de3c:	add	x0, x0, x1
  46de40:	str	x0, [x2, #8]
  46de44:	mov	x0, x25
  46de48:	bl	402a90 <free@plt>
  46de4c:	ldp	x27, x28, [sp, #80]
  46de50:	ldr	x1, [sp, #144]
  46de54:	ldrb	w0, [x24, #32]
  46de58:	ldr	x2, [x24, #24]
  46de5c:	str	x2, [x1]
  46de60:	orr	w0, w0, #0x1
  46de64:	str	x1, [x24, #24]
  46de68:	strb	w0, [x24, #32]
  46de6c:	b	46daa0 <_obstack_memory_used@@Base+0x19700>
  46de70:	mov	x1, x21
  46de74:	mov	x2, x19
  46de78:	mov	x0, x24
  46de7c:	bl	46cf70 <_obstack_memory_used@@Base+0x18bd0>
  46de80:	mov	x20, x0
  46de84:	ldp	x21, x22, [sp, #32]
  46de88:	ldp	x25, x26, [sp, #64]
  46de8c:	b	46d934 <_obstack_memory_used@@Base+0x19594>
  46de90:	ldp	x21, x22, [sp, #32]
  46de94:	ldp	x25, x26, [sp, #64]
  46de98:	ldp	x27, x28, [sp, #80]
  46de9c:	b	46d934 <_obstack_memory_used@@Base+0x19594>
  46dea0:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x18c60>
  46dea4:	add	x20, x20, #0xf0
  46dea8:	b	46dc64 <_obstack_memory_used@@Base+0x198c4>
  46deac:	mov	x2, x20
  46deb0:	add	x1, sp, #0x90
  46deb4:	mov	x0, x24
  46deb8:	bl	46d330 <_obstack_memory_used@@Base+0x18f90>
  46debc:	b	46dc24 <_obstack_memory_used@@Base+0x19884>
  46dec0:	ldr	x2, [sp, #96]
  46dec4:	mov	x1, x20
  46dec8:	mov	x0, x24
  46decc:	bl	46caf0 <_obstack_memory_used@@Base+0x18750>
  46ded0:	b	46de50 <_obstack_memory_used@@Base+0x19ab0>
  46ded4:	bfi	w0, w25, #11, #21
  46ded8:	str	w0, [x24, #32]
  46dedc:	b	46da9c <_obstack_memory_used@@Base+0x196fc>
  46dee0:	ldr	x2, [sp, #96]
  46dee4:	add	x1, x22, #0x1
  46dee8:	str	x26, [x2, x1, lsl #3]
  46deec:	cbz	x23, 46de2c <_obstack_memory_used@@Base+0x19a8c>
  46def0:	sub	x23, x22, #0x2
  46def4:	mov	x22, x23
  46def8:	ldr	x26, [x0]
  46defc:	b	46de08 <_obstack_memory_used@@Base+0x19a68>
  46df00:	mov	x2, x22
  46df04:	mov	x5, #0x0                   	// #0
  46df08:	mov	x3, #0x0                   	// #0
  46df0c:	b	46dd68 <_obstack_memory_used@@Base+0x199c8>
  46df10:	stp	x27, x28, [sp, #80]
  46df14:	bl	402990 <abort@plt>
  46df18:	ldp	x21, x22, [sp, #32]
  46df1c:	ldp	x25, x26, [sp, #64]
  46df20:	b	46d8e0 <_obstack_memory_used@@Base+0x19540>
  46df24:	nop
  46df28:	stp	x29, x30, [sp, #-48]!
  46df2c:	mov	x5, #0xffffffffffffffff    	// #-1
  46df30:	mov	x4, #0x7f8                 	// #2040
  46df34:	mov	x29, sp
  46df38:	stp	x19, x20, [sp, #16]
  46df3c:	adrp	x20, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  46df40:	mov	x19, x1
  46df44:	ldr	x1, [x20, #3600]
  46df48:	str	x21, [sp, #32]
  46df4c:	stp	x5, x2, [x19]
  46df50:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46df54:	stp	x3, x0, [x19, #16]
  46df58:	str	x4, [x19, #32]
  46df5c:	cbz	x1, 46df6c <_obstack_memory_used@@Base+0x19bcc>
  46df60:	add	x0, x21, #0xbc8
  46df64:	add	x0, x0, #0x198
  46df68:	bl	402c90 <pthread_mutex_lock@plt>
  46df6c:	add	x1, x21, #0xbc8
  46df70:	ldr	w0, [x1, #464]
  46df74:	ldr	x2, [x1, #456]
  46df78:	str	x2, [x19, #40]
  46df7c:	str	x19, [x1, #456]
  46df80:	cbz	w0, 46dfb4 <_obstack_memory_used@@Base+0x19c14>
  46df84:	ldr	x20, [x20, #3600]
  46df88:	cbz	x20, 46dfa4 <_obstack_memory_used@@Base+0x19c04>
  46df8c:	add	x0, x21, #0xbc8
  46df90:	ldp	x19, x20, [sp, #16]
  46df94:	add	x0, x0, #0x198
  46df98:	ldr	x21, [sp, #32]
  46df9c:	ldp	x29, x30, [sp], #48
  46dfa0:	b	402cb0 <pthread_mutex_unlock@plt>
  46dfa4:	ldp	x19, x20, [sp, #16]
  46dfa8:	ldr	x21, [sp, #32]
  46dfac:	ldp	x29, x30, [sp], #48
  46dfb0:	ret
  46dfb4:	add	x1, x1, #0x1d0
  46dfb8:	mov	w0, #0x1                   	// #1
  46dfbc:	str	w0, [x1]
  46dfc0:	b	46df84 <_obstack_memory_used@@Base+0x19be4>
  46dfc4:	nop
  46dfc8:	cbz	x0, 46dfd8 <_obstack_memory_used@@Base+0x19c38>
  46dfcc:	ldr	w4, [x0]
  46dfd0:	cbz	w4, 46dfd8 <_obstack_memory_used@@Base+0x19c38>
  46dfd4:	b	46df28 <_obstack_memory_used@@Base+0x19b88>
  46dfd8:	ret
  46dfdc:	nop
  46dfe0:	cbz	x0, 46dff8 <_obstack_memory_used@@Base+0x19c58>
  46dfe4:	ldr	w2, [x0]
  46dfe8:	cbz	w2, 46dff8 <_obstack_memory_used@@Base+0x19c58>
  46dfec:	mov	x3, #0x0                   	// #0
  46dff0:	mov	x2, #0x0                   	// #0
  46dff4:	b	46df28 <_obstack_memory_used@@Base+0x19b88>
  46dff8:	ret
  46dffc:	nop
  46e000:	stp	x29, x30, [sp, #-32]!
  46e004:	mov	x29, sp
  46e008:	str	x19, [sp, #16]
  46e00c:	mov	x19, x0
  46e010:	ldr	w0, [x0]
  46e014:	cbnz	w0, 46e024 <_obstack_memory_used@@Base+0x19c84>
  46e018:	ldr	x19, [sp, #16]
  46e01c:	ldp	x29, x30, [sp], #32
  46e020:	ret
  46e024:	mov	x0, #0x30                  	// #48
  46e028:	bl	4027f0 <malloc@plt>
  46e02c:	mov	x1, x0
  46e030:	mov	x0, x19
  46e034:	ldr	x19, [sp, #16]
  46e038:	mov	x3, #0x0                   	// #0
  46e03c:	ldp	x29, x30, [sp], #32
  46e040:	mov	x2, #0x0                   	// #0
  46e044:	b	46df28 <_obstack_memory_used@@Base+0x19b88>
  46e048:	stp	x29, x30, [sp, #-48]!
  46e04c:	mov	x5, #0xffffffffffffffff    	// #-1
  46e050:	mov	x4, #0x7fa                 	// #2042
  46e054:	mov	x29, sp
  46e058:	stp	x19, x20, [sp, #16]
  46e05c:	adrp	x20, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  46e060:	mov	x19, x1
  46e064:	ldr	x1, [x20, #3600]
  46e068:	str	x21, [sp, #32]
  46e06c:	stp	x5, x2, [x19]
  46e070:	adrp	x21, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46e074:	stp	x3, x0, [x19, #16]
  46e078:	str	x4, [x19, #32]
  46e07c:	cbz	x1, 46e08c <_obstack_memory_used@@Base+0x19cec>
  46e080:	add	x0, x21, #0xbc8
  46e084:	add	x0, x0, #0x198
  46e088:	bl	402c90 <pthread_mutex_lock@plt>
  46e08c:	add	x1, x21, #0xbc8
  46e090:	ldr	w0, [x1, #464]
  46e094:	ldr	x2, [x1, #456]
  46e098:	str	x2, [x19, #40]
  46e09c:	str	x19, [x1, #456]
  46e0a0:	cbz	w0, 46e0d4 <_obstack_memory_used@@Base+0x19d34>
  46e0a4:	ldr	x20, [x20, #3600]
  46e0a8:	cbz	x20, 46e0c4 <_obstack_memory_used@@Base+0x19d24>
  46e0ac:	add	x0, x21, #0xbc8
  46e0b0:	ldp	x19, x20, [sp, #16]
  46e0b4:	add	x0, x0, #0x198
  46e0b8:	ldr	x21, [sp, #32]
  46e0bc:	ldp	x29, x30, [sp], #48
  46e0c0:	b	402cb0 <pthread_mutex_unlock@plt>
  46e0c4:	ldp	x19, x20, [sp, #16]
  46e0c8:	ldr	x21, [sp, #32]
  46e0cc:	ldp	x29, x30, [sp], #48
  46e0d0:	ret
  46e0d4:	add	x1, x1, #0x1d0
  46e0d8:	mov	w0, #0x1                   	// #1
  46e0dc:	str	w0, [x1]
  46e0e0:	b	46e0a4 <_obstack_memory_used@@Base+0x19d04>
  46e0e4:	nop
  46e0e8:	mov	x3, #0x0                   	// #0
  46e0ec:	mov	x2, #0x0                   	// #0
  46e0f0:	b	46e048 <_obstack_memory_used@@Base+0x19ca8>
  46e0f4:	nop
  46e0f8:	stp	x29, x30, [sp, #-32]!
  46e0fc:	mov	x29, sp
  46e100:	str	x19, [sp, #16]
  46e104:	mov	x19, x0
  46e108:	mov	x0, #0x30                  	// #48
  46e10c:	bl	4027f0 <malloc@plt>
  46e110:	mov	x1, x0
  46e114:	mov	x0, x19
  46e118:	ldr	x19, [sp, #16]
  46e11c:	mov	x3, #0x0                   	// #0
  46e120:	ldp	x29, x30, [sp], #32
  46e124:	mov	x2, #0x0                   	// #0
  46e128:	b	46e048 <_obstack_memory_used@@Base+0x19ca8>
  46e12c:	nop
  46e130:	stp	x29, x30, [sp, #-48]!
  46e134:	mov	x29, sp
  46e138:	stp	x19, x20, [sp, #16]
  46e13c:	cbz	x0, 46e208 <_obstack_memory_used@@Base+0x19e68>
  46e140:	mov	x20, x0
  46e144:	ldr	w0, [x0]
  46e148:	cbz	w0, 46e208 <_obstack_memory_used@@Base+0x19e68>
  46e14c:	stp	x21, x22, [sp, #32]
  46e150:	adrp	x21, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  46e154:	adrp	x22, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46e158:	ldr	x0, [x21, #3600]
  46e15c:	cbz	x0, 46e16c <_obstack_memory_used@@Base+0x19dcc>
  46e160:	add	x0, x22, #0xbc8
  46e164:	add	x0, x0, #0x198
  46e168:	bl	402c90 <pthread_mutex_lock@plt>
  46e16c:	add	x2, x22, #0xbc8
  46e170:	ldr	x1, [x2, #456]
  46e174:	cbz	x1, 46e1bc <_obstack_memory_used@@Base+0x19e1c>
  46e178:	add	x2, x2, #0x1c8
  46e17c:	b	46e188 <_obstack_memory_used@@Base+0x19de8>
  46e180:	add	x2, x19, #0x28
  46e184:	cbz	x1, 46e1bc <_obstack_memory_used@@Base+0x19e1c>
  46e188:	ldr	x0, [x1, #24]
  46e18c:	mov	x19, x1
  46e190:	ldr	x1, [x1, #40]
  46e194:	cmp	x20, x0
  46e198:	b.ne	46e180 <_obstack_memory_used@@Base+0x19de0>  // b.any
  46e19c:	str	x1, [x2]
  46e1a0:	ldr	x21, [x21, #3600]
  46e1a4:	cbnz	x21, 46e21c <_obstack_memory_used@@Base+0x19e7c>
  46e1a8:	mov	x0, x19
  46e1ac:	ldp	x19, x20, [sp, #16]
  46e1b0:	ldp	x21, x22, [sp, #32]
  46e1b4:	ldp	x29, x30, [sp], #48
  46e1b8:	ret
  46e1bc:	add	x2, x22, #0xbc8
  46e1c0:	ldr	x19, [x2, #472]
  46e1c4:	cbz	x19, 46e23c <_obstack_memory_used@@Base+0x19e9c>
  46e1c8:	add	x2, x2, #0x1d8
  46e1cc:	b	46e1e8 <_obstack_memory_used@@Base+0x19e48>
  46e1d0:	ldr	x1, [x0]
  46e1d4:	cmp	x20, x1
  46e1d8:	b.eq	46e254 <_obstack_memory_used@@Base+0x19eb4>  // b.none
  46e1dc:	add	x2, x19, #0x28
  46e1e0:	ldr	x19, [x19, #40]
  46e1e4:	cbz	x19, 46e23c <_obstack_memory_used@@Base+0x19e9c>
  46e1e8:	ldrb	w1, [x19, #32]
  46e1ec:	ldr	x0, [x19, #24]
  46e1f0:	tbnz	w1, #0, 46e1d0 <_obstack_memory_used@@Base+0x19e30>
  46e1f4:	cmp	x20, x0
  46e1f8:	b.ne	46e1dc <_obstack_memory_used@@Base+0x19e3c>  // b.any
  46e1fc:	ldr	x0, [x19, #40]
  46e200:	str	x0, [x2]
  46e204:	b	46e1a0 <_obstack_memory_used@@Base+0x19e00>
  46e208:	mov	x19, #0x0                   	// #0
  46e20c:	mov	x0, x19
  46e210:	ldp	x19, x20, [sp, #16]
  46e214:	ldp	x29, x30, [sp], #48
  46e218:	ret
  46e21c:	add	x0, x22, #0xbc8
  46e220:	add	x0, x0, #0x198
  46e224:	bl	402cb0 <pthread_mutex_unlock@plt>
  46e228:	mov	x0, x19
  46e22c:	ldp	x19, x20, [sp, #16]
  46e230:	ldp	x21, x22, [sp, #32]
  46e234:	ldp	x29, x30, [sp], #48
  46e238:	ret
  46e23c:	ldr	x21, [x21, #3600]
  46e240:	cbz	x21, 46e250 <_obstack_memory_used@@Base+0x19eb0>
  46e244:	add	x0, x22, #0xbc8
  46e248:	add	x0, x0, #0x198
  46e24c:	bl	402cb0 <pthread_mutex_unlock@plt>
  46e250:	bl	402990 <abort@plt>
  46e254:	ldr	x1, [x19, #40]
  46e258:	str	x1, [x2]
  46e25c:	bl	402a90 <free@plt>
  46e260:	b	46e1a0 <_obstack_memory_used@@Base+0x19e00>
  46e264:	nop
  46e268:	b	46e130 <_obstack_memory_used@@Base+0x19d90>
  46e26c:	nop
  46e270:	ldr	w1, [x0]
  46e274:	cbnz	w1, 46e27c <_obstack_memory_used@@Base+0x19edc>
  46e278:	ret
  46e27c:	stp	x29, x30, [sp, #-16]!
  46e280:	mov	x29, sp
  46e284:	bl	46e130 <_obstack_memory_used@@Base+0x19d90>
  46e288:	ldp	x29, x30, [sp], #16
  46e28c:	b	402a90 <free@plt>
  46e290:	stp	x29, x30, [sp, #-128]!
  46e294:	mov	x29, sp
  46e298:	stp	x23, x24, [sp, #48]
  46e29c:	adrp	x23, 4a8000 <_obstack_memory_used@@Base+0x53c60>
  46e2a0:	add	x2, x23, #0xbc8
  46e2a4:	stp	x19, x20, [sp, #16]
  46e2a8:	mov	x20, x0
  46e2ac:	add	x0, x2, #0x1d0
  46e2b0:	stp	x21, x22, [sp, #32]
  46e2b4:	mov	x22, x1
  46e2b8:	ldr	w0, [x0]
  46e2bc:	cbnz	w0, 46e320 <_obstack_memory_used@@Base+0x19f80>
  46e2c0:	mov	w2, #0x1                   	// #1
  46e2c4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x18c60>
  46e2c8:	add	x1, sp, #0x50
  46e2cc:	add	x0, x0, #0x470
  46e2d0:	stp	x20, xzr, [sp, #80]
  46e2d4:	stp	xzr, xzr, [sp, #96]
  46e2d8:	str	xzr, [sp, #112]
  46e2dc:	str	w2, [sp, #120]
  46e2e0:	bl	402a70 <dl_iterate_phdr@plt>
  46e2e4:	tbnz	w0, #31, 46e434 <_obstack_memory_used@@Base+0x1a094>
  46e2e8:	ldr	x21, [sp, #112]
  46e2ec:	cbz	x21, 46e308 <_obstack_memory_used@@Base+0x19f68>
  46e2f0:	ldr	x0, [sp, #88]
  46e2f4:	str	x0, [x22]
  46e2f8:	ldr	x0, [sp, #96]
  46e2fc:	str	x0, [x22, #8]
  46e300:	ldr	x0, [sp, #104]
  46e304:	str	x0, [x22, #16]
  46e308:	mov	x0, x21
  46e30c:	ldp	x19, x20, [sp, #16]
  46e310:	ldp	x21, x22, [sp, #32]
  46e314:	ldp	x23, x24, [sp, #48]
  46e318:	ldp	x29, x30, [sp], #128
  46e31c:	ret
  46e320:	stp	x25, x26, [sp, #64]
  46e324:	adrp	x25, 4a7000 <_obstack_memory_used@@Base+0x52c60>
  46e328:	ldr	x0, [x25, #3600]
  46e32c:	cbz	x0, 46e338 <_obstack_memory_used@@Base+0x19f98>
  46e330:	add	x0, x2, #0x198
  46e334:	bl	402c90 <pthread_mutex_lock@plt>
  46e338:	add	x0, x23, #0xbc8
  46e33c:	ldr	x19, [x0, #472]
  46e340:	cbnz	x19, 46e350 <_obstack_memory_used@@Base+0x19fb0>
  46e344:	b	46e3cc <_obstack_memory_used@@Base+0x1a02c>
  46e348:	ldr	x19, [x19, #40]
  46e34c:	cbz	x19, 46e3cc <_obstack_memory_used@@Base+0x1a02c>
  46e350:	ldr	x0, [x19]
  46e354:	cmp	x20, x0
  46e358:	b.cc	46e348 <_obstack_memory_used@@Base+0x19fa8>  // b.lo, b.ul, b.last
  46e35c:	mov	x1, x20
  46e360:	mov	x0, x19
  46e364:	bl	46d8c0 <_obstack_memory_used@@Base+0x19520>
  46e368:	mov	x21, x0
  46e36c:	cbz	x0, 46e3cc <_obstack_memory_used@@Base+0x1a02c>
  46e370:	ldr	x25, [x25, #3600]
  46e374:	cbnz	x25, 46e43c <_obstack_memory_used@@Base+0x1a09c>
  46e378:	ldrb	w0, [x19, #32]
  46e37c:	ldr	x1, [x19, #8]
  46e380:	str	x1, [x22]
  46e384:	ldr	x1, [x19, #16]
  46e388:	str	x1, [x22, #8]
  46e38c:	tbnz	w0, #2, 46e44c <_obstack_memory_used@@Base+0x1a0ac>
  46e390:	ldrh	w20, [x19, #32]
  46e394:	ubfx	x20, x20, #3, #8
  46e398:	add	x2, x19, #0x10
  46e39c:	add	x1, x19, #0x8
  46e3a0:	mov	w0, w20
  46e3a4:	bl	46ce88 <_obstack_memory_used@@Base+0x18ae8>
  46e3a8:	add	x3, sp, #0x50
  46e3ac:	mov	x1, x0
  46e3b0:	add	x2, x21, #0x8
  46e3b4:	mov	w0, w20
  46e3b8:	bl	46cc10 <_obstack_memory_used@@Base+0x18870>
  46e3bc:	ldr	x0, [sp, #80]
  46e3c0:	ldp	x25, x26, [sp, #64]
  46e3c4:	str	x0, [x22, #16]
  46e3c8:	b	46e308 <_obstack_memory_used@@Base+0x19f68>
  46e3cc:	add	x24, x23, #0xbc8
  46e3d0:	add	x26, x24, #0x1d8
  46e3d4:	nop
  46e3d8:	ldr	x19, [x24, #456]
  46e3dc:	cbz	x19, 46e464 <_obstack_memory_used@@Base+0x1a0c4>
  46e3e0:	ldr	x2, [x19, #40]
  46e3e4:	mov	x1, x20
  46e3e8:	mov	x0, x19
  46e3ec:	str	x2, [x24, #456]
  46e3f0:	bl	46d8c0 <_obstack_memory_used@@Base+0x19520>
  46e3f4:	mov	x21, x0
  46e3f8:	ldr	x2, [x24, #472]
  46e3fc:	cbz	x2, 46e47c <_obstack_memory_used@@Base+0x1a0dc>
  46e400:	mov	x0, x26
  46e404:	ldr	x3, [x19]
  46e408:	b	46e418 <_obstack_memory_used@@Base+0x1a078>
  46e40c:	add	x0, x2, #0x28
  46e410:	ldr	x2, [x2, #40]
  46e414:	cbz	x2, 46e424 <_obstack_memory_used@@Base+0x1a084>
  46e418:	ldr	x1, [x2]
  46e41c:	cmp	x1, x3
  46e420:	b.cs	46e40c <_obstack_memory_used@@Base+0x1a06c>  // b.hs, b.nlast
  46e424:	str	x2, [x19, #40]
  46e428:	str	x19, [x0]
  46e42c:	cbz	x21, 46e3d8 <_obstack_memory_used@@Base+0x1a038>
  46e430:	b	46e370 <_obstack_memory_used@@Base+0x19fd0>
  46e434:	mov	x21, #0x0                   	// #0
  46e438:	b	46e308 <_obstack_memory_used@@Base+0x19f68>
  46e43c:	add	x0, x23, #0xbc8
  46e440:	add	x0, x0, #0x198
  46e444:	bl	402cb0 <pthread_mutex_unlock@plt>
  46e448:	b	46e378 <_obstack_memory_used@@Base+0x19fd8>
  46e44c:	add	x1, x21, #0x4
  46e450:	ldrsw	x0, [x21, #4]
  46e454:	sub	x0, x1, x0
  46e458:	bl	46cd70 <_obstack_memory_used@@Base+0x189d0>
  46e45c:	and	w20, w0, #0xff
  46e460:	b	46e398 <_obstack_memory_used@@Base+0x19ff8>
  46e464:	ldr	x25, [x25, #3600]
  46e468:	cbz	x25, 46e484 <_obstack_memory_used@@Base+0x1a0e4>
  46e46c:	add	x0, x24, #0x198
  46e470:	bl	402cb0 <pthread_mutex_unlock@plt>
  46e474:	ldp	x25, x26, [sp, #64]
  46e478:	b	46e2c0 <_obstack_memory_used@@Base+0x19f20>
  46e47c:	mov	x0, x26
  46e480:	b	46e424 <_obstack_memory_used@@Base+0x1a084>
  46e484:	ldp	x25, x26, [sp, #64]
  46e488:	b	46e2c0 <_obstack_memory_used@@Base+0x19f20>
  46e48c:	nop
  46e490:	stp	x29, x30, [sp, #-64]!
  46e494:	mov	x29, sp
  46e498:	stp	x19, x20, [sp, #16]
  46e49c:	adrp	x20, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  46e4a0:	add	x20, x20, #0x9b0
  46e4a4:	stp	x21, x22, [sp, #32]
  46e4a8:	adrp	x21, 4a6000 <_obstack_memory_used@@Base+0x51c60>
  46e4ac:	add	x21, x21, #0x988
  46e4b0:	sub	x20, x20, x21
  46e4b4:	mov	w22, w0
  46e4b8:	stp	x23, x24, [sp, #48]
  46e4bc:	mov	x23, x1
  46e4c0:	mov	x24, x2
  46e4c4:	bl	4025d0 <_ZGTtnam@plt-0x40>
  46e4c8:	cmp	xzr, x20, asr #3
  46e4cc:	b.eq	46e4f8 <_obstack_memory_used@@Base+0x1a158>  // b.none
  46e4d0:	asr	x20, x20, #3
  46e4d4:	mov	x19, #0x0                   	// #0
  46e4d8:	ldr	x3, [x21, x19, lsl #3]
  46e4dc:	mov	x2, x24
  46e4e0:	add	x19, x19, #0x1
  46e4e4:	mov	x1, x23
  46e4e8:	mov	w0, w22
  46e4ec:	blr	x3
  46e4f0:	cmp	x20, x19
  46e4f4:	b.ne	46e4d8 <_obstack_memory_used@@Base+0x1a138>  // b.any
  46e4f8:	ldp	x19, x20, [sp, #16]
  46e4fc:	ldp	x21, x22, [sp, #32]
  46e500:	ldp	x23, x24, [sp, #48]
  46e504:	ldp	x29, x30, [sp], #64
  46e508:	ret
  46e50c:	nop
  46e510:	ret

Disassembly of section .fini:

000000000046e514 <.fini>:
  46e514:	stp	x29, x30, [sp, #-16]!
  46e518:	mov	x29, sp
  46e51c:	ldp	x29, x30, [sp], #16
  46e520:	ret
