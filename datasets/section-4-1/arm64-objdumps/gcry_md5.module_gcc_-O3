
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_md5.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <md5_init>:
       0:	mov	x2, #0x2301                	// #8961
       4:	mov	x1, #0xdcfe                	// #56574
       8:	movk	x2, #0x6745, lsl #16
       c:	movk	x1, #0x98ba, lsl #16
      10:	movk	x2, #0xab89, lsl #32
      14:	movk	x1, #0x5476, lsl #32
      18:	movk	x2, #0xefcd, lsl #48
      1c:	movk	x1, #0x1032, lsl #48
      20:	stp	x2, x1, [x0]
      24:	str	wzr, [x0, #16]
      28:	str	wzr, [x0, #84]
      2c:	ret

0000000000000030 <md5_read>:
      30:	add	x0, x0, #0x14
      34:	ret

0000000000000038 <transform>:
      38:	stp	x29, x30, [sp, #-144]!
      3c:	mov	x2, #0x40                  	// #64
      40:	mov	x29, sp
      44:	stp	x19, x20, [sp, #16]
      48:	mov	x19, x0
      4c:	add	x0, sp, #0x50
      50:	stp	x21, x22, [sp, #32]
      54:	ldp	w20, w22, [x19, #8]
      58:	stp	x23, x24, [sp, #48]
      5c:	ldp	w24, w21, [x19]
      60:	str	x25, [sp, #64]
      64:	bl	0 <grub_memmove>
      68:	mov	w25, #0xc62a                	// #50730
      6c:	ldp	w23, w17, [sp, #80]
      70:	eor	w1, w20, w22
      74:	and	w1, w1, w21
      78:	mov	w2, #0xa478                	// #42104
      7c:	eor	w1, w1, w22
      80:	movk	w2, #0xd76a, lsl #16
      84:	add	w1, w1, w24
      88:	add	w2, w23, w2
      8c:	add	w2, w2, w1
      90:	eor	w0, w21, w20
      94:	mov	w3, #0xb756                	// #46934
      98:	mov	w9, #0x70db                	// #28891
      9c:	movk	w3, #0xe8c7, lsl #16
      a0:	ror	w2, w2, #25
      a4:	add	w2, w21, w2
      a8:	add	w3, w17, w3
      ac:	and	w0, w0, w2
      b0:	eor	w5, w21, w2
      b4:	eor	w0, w0, w20
      b8:	movk	w9, #0x2420, lsl #16
      bc:	add	w0, w0, w22
      c0:	ldr	w13, [sp, #96]
      c4:	add	w3, w3, w0
      c8:	mov	w0, #0xceee                	// #52974
      cc:	ldp	w11, w18, [sp, #88]
      d0:	ror	w3, w3, #20
      d4:	add	w3, w2, w3
      d8:	movk	w0, #0xc1bd, lsl #16
      dc:	and	w5, w5, w3
      e0:	add	w9, w11, w9
      e4:	eor	w5, w5, w21
      e8:	add	w6, w18, w0
      ec:	add	w5, w5, w20
      f0:	eor	w0, w2, w3
      f4:	add	w9, w9, w5
      f8:	mov	w4, #0xfaf                 	// #4015
      fc:	movk	w4, #0xf57c, lsl #16
     100:	add	w4, w13, w4
     104:	ldr	w20, [sp, #100]
     108:	ror	w9, w9, #15
     10c:	add	w9, w3, w9
     110:	movk	w25, #0x4787, lsl #16
     114:	and	w0, w0, w9
     118:	eor	w1, w3, w9
     11c:	eor	w0, w0, w2
     120:	add	w25, w20, w25
     124:	add	w0, w0, w21
     128:	ldr	w14, [sp, #104]
     12c:	add	w0, w6, w0
     130:	mov	w7, #0x4613                	// #17939
     134:	movk	w7, #0xa830, lsl #16
     138:	add	w7, w14, w7
     13c:	mov	w6, #0xffff5bb1            	// #-42063
     140:	ror	w0, w0, #10
     144:	add	w0, w9, w0
     148:	ldr	w22, [sp, #108]
     14c:	and	w1, w1, w0
     150:	eor	w8, w9, w0
     154:	eor	w1, w1, w3
     158:	mov	w15, #0x9501                	// #38145
     15c:	add	w2, w1, w2
     160:	movk	w15, #0xfd46, lsl #16
     164:	add	w1, w4, w2
     168:	ldr	w2, [sp, #120]
     16c:	add	w15, w22, w15
     170:	mov	w24, #0x98d8                	// #39128
     174:	add	w21, w2, w6
     178:	ror	w1, w1, #25
     17c:	add	w1, w0, w1
     180:	movk	w24, #0x6980, lsl #16
     184:	and	w8, w8, w1
     188:	eor	w5, w0, w1
     18c:	eor	w8, w8, w9
     190:	mov	w4, #0xf7af                	// #63407
     194:	add	w3, w8, w3
     198:	movk	w4, #0x8b44, lsl #16
     19c:	add	w3, w25, w3
     1a0:	mov	w25, #0xd7be                	// #55230
     1a4:	ldp	w16, w10, [sp, #112]
     1a8:	ror	w8, w3, #20
     1ac:	add	w8, w1, w8
     1b0:	movk	w25, #0x895c, lsl #16
     1b4:	and	w3, w5, w8
     1b8:	eor	w6, w1, w8
     1bc:	eor	w3, w3, w0
     1c0:	add	w24, w16, w24
     1c4:	add	w9, w3, w9
     1c8:	add	w4, w10, w4
     1cc:	add	w7, w7, w9
     1d0:	mov	w9, #0x7193                	// #29075
     1d4:	ldp	w12, w30, [sp, #124]
     1d8:	ror	w7, w7, #15
     1dc:	add	w7, w8, w7
     1e0:	movk	w9, #0xfd98, lsl #16
     1e4:	and	w6, w6, w7
     1e8:	eor	w5, w8, w7
     1ec:	eor	w6, w6, w1
     1f0:	add	w25, w12, w25
     1f4:	add	w0, w6, w0
     1f8:	add	w0, w15, w0
     1fc:	mov	w15, #0x1122                	// #4386
     200:	movk	w15, #0x6b90, lsl #16
     204:	add	w15, w30, w15
     208:	ror	w6, w0, #10
     20c:	add	w6, w7, w6
     210:	and	w5, w5, w6
     214:	eor	w0, w7, w6
     218:	eor	w5, w5, w8
     21c:	add	w1, w5, w1
     220:	add	w5, w24, w1
     224:	ror	w5, w5, #25
     228:	add	w5, w6, w5
     22c:	and	w0, w0, w5
     230:	eor	w24, w6, w5
     234:	eor	w0, w0, w7
     238:	add	w8, w0, w8
     23c:	add	w4, w4, w8
     240:	mov	w8, #0x438e                	// #17294
     244:	movk	w8, #0xa679, lsl #16
     248:	ror	w4, w4, #20
     24c:	add	w4, w5, w4
     250:	and	w24, w24, w4
     254:	eor	w3, w5, w4
     258:	eor	w24, w24, w6
     25c:	add	w7, w24, w7
     260:	add	w7, w21, w7
     264:	ldp	w1, w21, [sp, #132]
     268:	ror	w24, w7, #15
     26c:	add	w24, w4, w24
     270:	mov	w7, #0x821                 	// #2081
     274:	and	w3, w3, w24
     278:	eor	w0, w4, w24
     27c:	eor	w3, w3, w5
     280:	add	w9, w1, w9
     284:	add	w6, w3, w6
     288:	add	w8, w21, w8
     28c:	add	w6, w25, w6
     290:	movk	w7, #0x49b4, lsl #16
     294:	ldr	x25, [sp, #64]
     298:	ror	w3, w6, #10
     29c:	add	w3, w24, w3
     2a0:	mov	w6, #0x2562                	// #9570
     2a4:	and	w0, w0, w3
     2a8:	movk	w6, #0xf61e, lsl #16
     2ac:	eor	w0, w0, w4
     2b0:	add	w6, w17, w6
     2b4:	add	w0, w0, w5
     2b8:	eor	w5, w24, w3
     2bc:	add	w0, w15, w0
     2c0:	ldr	w15, [sp, #140]
     2c4:	add	w7, w15, w7
     2c8:	ror	w0, w0, #25
     2cc:	add	w0, w3, w0
     2d0:	and	w5, w5, w0
     2d4:	eor	w5, w5, w24
     2d8:	add	w5, w5, w4
     2dc:	eor	w4, w3, w0
     2e0:	add	w9, w9, w5
     2e4:	mov	w5, #0xb340                	// #45888
     2e8:	movk	w5, #0xc040, lsl #16
     2ec:	add	w5, w14, w5
     2f0:	ror	w9, w9, #20
     2f4:	add	w9, w0, w9
     2f8:	and	w4, w4, w9
     2fc:	eor	w4, w4, w3
     300:	add	w24, w4, w24
     304:	eor	w4, w0, w9
     308:	add	w8, w8, w24
     30c:	sub	w24, w20, #0x5c, lsl #12
     310:	sub	w24, w24, #0x6be
     314:	ror	w8, w8, #15
     318:	add	w8, w9, w8
     31c:	and	w4, w4, w8
     320:	eor	w4, w4, w0
     324:	add	w3, w4, w3
     328:	mov	w4, #0x5a51                	// #23121
     32c:	add	w7, w7, w3
     330:	movk	w4, #0x265e, lsl #16
     334:	add	w4, w12, w4
     338:	ror	w7, w7, #10
     33c:	add	w7, w8, w7
     340:	eor	w3, w8, w7
     344:	and	w3, w3, w9
     348:	eor	w3, w3, w8
     34c:	add	w0, w3, w0
     350:	mov	w3, #0xc7aa                	// #51114
     354:	add	w6, w6, w0
     358:	movk	w3, #0xe9b6, lsl #16
     35c:	add	w3, w23, w3
     360:	ror	w6, w6, #27
     364:	add	w6, w7, w6
     368:	eor	w0, w7, w6
     36c:	and	w0, w0, w8
     370:	eor	w0, w0, w7
     374:	add	w9, w0, w9
     378:	add	w5, w5, w9
     37c:	mov	w9, #0x1453                	// #5203
     380:	movk	w9, #0x244, lsl #16
     384:	add	w9, w2, w9
     388:	ror	w5, w5, #23
     38c:	add	w5, w6, w5
     390:	eor	w0, w6, w5
     394:	and	w0, w0, w7
     398:	eor	w0, w0, w6
     39c:	add	w8, w0, w8
     3a0:	mov	w0, #0x105d                	// #4189
     3a4:	add	w4, w4, w8
     3a8:	movk	w0, #0xd62f, lsl #16
     3ac:	add	w0, w20, w0
     3b0:	ror	w4, w4, #18
     3b4:	add	w4, w5, w4
     3b8:	eor	w8, w5, w4
     3bc:	and	w8, w8, w6
     3c0:	eor	w8, w8, w5
     3c4:	add	w7, w8, w7
     3c8:	mov	w8, #0xe681                	// #59009
     3cc:	add	w3, w3, w7
     3d0:	movk	w8, #0xd8a1, lsl #16
     3d4:	add	w8, w15, w8
     3d8:	ror	w3, w3, #12
     3dc:	add	w3, w4, w3
     3e0:	eor	w7, w4, w3
     3e4:	and	w7, w7, w5
     3e8:	eor	w7, w7, w4
     3ec:	add	w6, w7, w6
     3f0:	mov	w7, #0xfbc8                	// #64456
     3f4:	add	w0, w0, w6
     3f8:	movk	w7, #0xe7d3, lsl #16
     3fc:	add	w7, w13, w7
     400:	ror	w0, w0, #27
     404:	add	w0, w3, w0
     408:	eor	w6, w3, w0
     40c:	and	w6, w6, w4
     410:	eor	w6, w6, w3
     414:	add	w5, w6, w5
     418:	mov	w6, #0xcde6                	// #52710
     41c:	add	w9, w9, w5
     420:	movk	w6, #0x21e1, lsl #16
     424:	add	w6, w10, w6
     428:	ror	w9, w9, #23
     42c:	add	w9, w0, w9
     430:	eor	w5, w0, w9
     434:	and	w5, w5, w3
     438:	eor	w5, w5, w0
     43c:	add	w4, w5, w4
     440:	mov	w5, #0x7d6                 	// #2006
     444:	add	w8, w8, w4
     448:	movk	w5, #0xc337, lsl #16
     44c:	add	w5, w21, w5
     450:	ror	w8, w8, #18
     454:	add	w8, w9, w8
     458:	eor	w4, w9, w8
     45c:	and	w4, w4, w0
     460:	eor	w4, w4, w9
     464:	add	w3, w4, w3
     468:	mov	w4, #0xd87                 	// #3463
     46c:	add	w7, w7, w3
     470:	movk	w4, #0xf4d5, lsl #16
     474:	add	w4, w18, w4
     478:	ror	w7, w7, #12
     47c:	add	w7, w8, w7
     480:	eor	w3, w8, w7
     484:	and	w3, w3, w9
     488:	eor	w3, w3, w8
     48c:	add	w0, w3, w0
     490:	mov	w3, #0x14ed                	// #5357
     494:	add	w6, w6, w0
     498:	movk	w3, #0x455a, lsl #16
     49c:	add	w3, w16, w3
     4a0:	ror	w6, w6, #27
     4a4:	add	w6, w7, w6
     4a8:	eor	w0, w7, w6
     4ac:	and	w0, w0, w8
     4b0:	eor	w0, w0, w7
     4b4:	add	w9, w0, w9
     4b8:	add	w5, w5, w9
     4bc:	mov	w9, #0x2d9                 	// #729
     4c0:	movk	w9, #0x676f, lsl #16
     4c4:	add	w9, w22, w9
     4c8:	ror	w5, w5, #23
     4cc:	add	w5, w6, w5
     4d0:	eor	w0, w6, w5
     4d4:	and	w0, w0, w7
     4d8:	eor	w0, w0, w6
     4dc:	add	w8, w0, w8
     4e0:	mov	w0, #0xe905                	// #59653
     4e4:	add	w4, w4, w8
     4e8:	movk	w0, #0xa9e3, lsl #16
     4ec:	add	w0, w1, w0
     4f0:	ror	w4, w4, #18
     4f4:	add	w4, w5, w4
     4f8:	eor	w8, w5, w4
     4fc:	and	w8, w8, w6
     500:	eor	w8, w8, w5
     504:	add	w7, w8, w7
     508:	mov	w8, #0xa3f8                	// #41976
     50c:	add	w3, w3, w7
     510:	movk	w8, #0xfcef, lsl #16
     514:	add	w8, w11, w8
     518:	ror	w3, w3, #12
     51c:	add	w3, w4, w3
     520:	eor	w7, w4, w3
     524:	and	w7, w7, w5
     528:	eor	w7, w7, w4
     52c:	add	w6, w7, w6
     530:	add	w0, w0, w6
     534:	mov	w6, #0x4c8a                	// #19594
     538:	movk	w6, #0x8d2a, lsl #16
     53c:	add	w6, w30, w6
     540:	ror	w0, w0, #27
     544:	add	w0, w3, w0
     548:	eor	w7, w3, w0
     54c:	and	w7, w7, w4
     550:	eor	w7, w7, w3
     554:	add	w5, w7, w5
     558:	add	w5, w8, w5
     55c:	ror	w7, w5, #23
     560:	add	w7, w0, w7
     564:	eor	w8, w0, w7
     568:	and	w8, w8, w3
     56c:	eor	w8, w8, w0
     570:	add	w4, w8, w4
     574:	add	w4, w9, w4
     578:	mov	w9, #0xcfa9                	// #53161
     57c:	movk	w9, #0x4bde, lsl #16
     580:	add	w9, w13, w9
     584:	ror	w8, w4, #18
     588:	add	w8, w7, w8
     58c:	eor	w4, w7, w8
     590:	and	w5, w4, w0
     594:	eor	w5, w5, w7
     598:	add	w3, w5, w3
     59c:	mov	w5, #0xf681                	// #63105
     5a0:	add	w6, w6, w3
     5a4:	movk	w5, #0x8771, lsl #16
     5a8:	add	w5, w16, w5
     5ac:	ror	w6, w6, #12
     5b0:	add	w6, w8, w6
     5b4:	eor	w4, w4, w6
     5b8:	eor	w3, w8, w6
     5bc:	add	w0, w4, w0
     5c0:	mov	w4, #0x6122                	// #24866
     5c4:	add	w0, w24, w0
     5c8:	movk	w4, #0x6d9d, lsl #16
     5cc:	add	w4, w12, w4
     5d0:	ror	w24, w0, #28
     5d4:	add	w24, w6, w24
     5d8:	eor	w0, w3, w24
     5dc:	mov	w3, #0x380c                	// #14348
     5e0:	add	w7, w0, w7
     5e4:	eor	w0, w6, w24
     5e8:	add	w5, w5, w7
     5ec:	movk	w3, #0xfde5, lsl #16
     5f0:	add	w3, w21, w3
     5f4:	ror	w5, w5, #21
     5f8:	add	w5, w24, w5
     5fc:	eor	w0, w0, w5
     600:	eor	w7, w24, w5
     604:	add	w8, w0, w8
     608:	mov	w0, #0xea44                	// #59972
     60c:	add	w4, w4, w8
     610:	movk	w0, #0xa4be, lsl #16
     614:	add	w0, w17, w0
     618:	mov	w8, #0x4b60                	// #19296
     61c:	movk	w8, #0xf6bb, lsl #16
     620:	ror	w4, w4, #16
     624:	add	w4, w5, w4
     628:	add	w8, w22, w8
     62c:	eor	w7, w7, w4
     630:	add	w7, w7, w6
     634:	eor	w6, w5, w4
     638:	add	w3, w3, w7
     63c:	mov	w7, #0xbc70                	// #48240
     640:	movk	w7, #0xbebf, lsl #16
     644:	add	w7, w2, w7
     648:	sub	w2, w2, #0x100, lsl #12
     64c:	ror	w3, w3, #9
     650:	add	w3, w4, w3
     654:	sub	w2, w2, #0xb83
     658:	eor	w6, w6, w3
     65c:	add	w24, w6, w24
     660:	eor	w6, w4, w3
     664:	add	w0, w0, w24
     668:	ror	w0, w0, #28
     66c:	add	w0, w3, w0
     670:	eor	w6, w6, w0
     674:	add	w6, w6, w5
     678:	eor	w5, w3, w0
     67c:	add	w9, w9, w6
     680:	mov	w6, #0x7ec6                	// #32454
     684:	movk	w6, #0x289b, lsl #16
     688:	add	w6, w1, w6
     68c:	ror	w9, w9, #21
     690:	add	w9, w0, w9
     694:	eor	w5, w5, w9
     698:	add	w5, w5, w4
     69c:	eor	w4, w0, w9
     6a0:	add	w8, w8, w5
     6a4:	mov	w5, #0x27fa                	// #10234
     6a8:	movk	w5, #0xeaa1, lsl #16
     6ac:	add	w5, w23, w5
     6b0:	ror	w8, w8, #16
     6b4:	add	w8, w9, w8
     6b8:	eor	w4, w4, w8
     6bc:	add	w4, w4, w3
     6c0:	eor	w3, w9, w8
     6c4:	add	w7, w7, w4
     6c8:	mov	w4, #0x3085                	// #12421
     6cc:	movk	w4, #0xd4ef, lsl #16
     6d0:	add	w4, w18, w4
     6d4:	ror	w7, w7, #9
     6d8:	add	w7, w8, w7
     6dc:	eor	w3, w3, w7
     6e0:	add	w3, w3, w0
     6e4:	eor	w0, w8, w7
     6e8:	add	w6, w6, w3
     6ec:	mov	w3, #0x1d05                	// #7429
     6f0:	movk	w3, #0x488, lsl #16
     6f4:	add	w3, w14, w3
     6f8:	ror	w6, w6, #28
     6fc:	add	w6, w7, w6
     700:	eor	w0, w0, w6
     704:	add	w9, w0, w9
     708:	eor	w0, w7, w6
     70c:	add	w5, w5, w9
     710:	mov	w9, #0x99e5                	// #39397
     714:	movk	w9, #0xe6db, lsl #16
     718:	add	w9, w30, w9
     71c:	ror	w5, w5, #21
     720:	add	w5, w6, w5
     724:	eor	w0, w0, w5
     728:	add	w0, w0, w8
     72c:	eor	w8, w6, w5
     730:	add	w4, w4, w0
     734:	mov	w0, #0xd039                	// #53305
     738:	movk	w0, #0xd9d4, lsl #16
     73c:	add	w0, w10, w0
     740:	ror	w4, w4, #16
     744:	add	w4, w5, w4
     748:	eor	w8, w8, w4
     74c:	add	w8, w8, w7
     750:	eor	w7, w5, w4
     754:	add	w3, w3, w8
     758:	mov	w8, #0x7cf8                	// #31992
     75c:	movk	w8, #0x1fa2, lsl #16
     760:	add	w8, w15, w8
     764:	ror	w3, w3, #9
     768:	add	w3, w4, w3
     76c:	eor	w7, w7, w3
     770:	add	w7, w7, w6
     774:	eor	w6, w4, w3
     778:	add	w0, w0, w7
     77c:	ror	w0, w0, #28
     780:	add	w0, w3, w0
     784:	eor	w6, w6, w0
     788:	eor	w7, w3, w0
     78c:	add	w5, w6, w5
     790:	mov	w6, #0x5665                	// #22117
     794:	add	w5, w9, w5
     798:	movk	w6, #0xc4ac, lsl #16
     79c:	add	w6, w11, w6
     7a0:	ror	w5, w5, #21
     7a4:	add	w5, w0, w5
     7a8:	eor	w7, w7, w5
     7ac:	add	w4, w7, w4
     7b0:	eor	w7, w0, w5
     7b4:	add	w4, w8, w4
     7b8:	mov	w8, #0x2244                	// #8772
     7bc:	movk	w8, #0xf429, lsl #16
     7c0:	add	w23, w23, w8
     7c4:	mov	w8, #0xff97                	// #65431
     7c8:	ror	w4, w4, #16
     7cc:	add	w4, w5, w4
     7d0:	movk	w8, #0x432a, lsl #16
     7d4:	eor	w7, w7, w4
     7d8:	add	w22, w22, w8
     7dc:	add	w3, w7, w3
     7e0:	mov	w8, #0x23a7                	// #9127
     7e4:	add	w3, w6, w3
     7e8:	mov	w6, #0xa039                	// #41017
     7ec:	movk	w6, #0xfc93, lsl #16
     7f0:	add	w20, w20, w6
     7f4:	mov	w6, #0x59c3                	// #22979
     7f8:	ror	w3, w3, #9
     7fc:	add	w3, w4, w3
     800:	movk	w6, #0x655b, lsl #16
     804:	add	w30, w30, w6
     808:	orn	w6, w3, w5
     80c:	eor	w6, w6, w4
     810:	movk	w8, #0xab94, lsl #16
     814:	add	w0, w6, w0
     818:	add	w21, w21, w8
     81c:	add	w23, w23, w0
     820:	mov	w0, #0x7e4f                	// #32335
     824:	movk	w0, #0x6fa8, lsl #16
     828:	add	w16, w16, w0
     82c:	mov	w7, #0xcc92                	// #52370
     830:	ror	w23, w23, #26
     834:	add	w23, w3, w23
     838:	movk	w7, #0x8f0c, lsl #16
     83c:	orn	w0, w23, w4
     840:	add	w18, w18, w7
     844:	eor	w0, w0, w3
     848:	mov	w6, #0x5dd1                	// #24017
     84c:	add	w5, w0, w5
     850:	movk	w6, #0x8584, lsl #16
     854:	add	w22, w22, w5
     858:	add	w17, w17, w6
     85c:	mov	w6, #0xe6e0                	// #59104
     860:	mov	w0, #0x11a1                	// #4513
     864:	movk	w6, #0xfe2c, lsl #16
     868:	ror	w22, w22, #22
     86c:	add	w22, w23, w22
     870:	add	w15, w15, w6
     874:	orn	w5, w22, w3
     878:	mov	w6, #0x4314                	// #17172
     87c:	eor	w5, w5, w23
     880:	movk	w6, #0xa301, lsl #16
     884:	add	w4, w5, w4
     888:	add	w14, w14, w6
     88c:	add	w21, w21, w4
     890:	mov	w4, #0xd391                	// #54161
     894:	movk	w4, #0xeb86, lsl #16
     898:	add	w10, w10, w4
     89c:	movk	w0, #0x4e08, lsl #16
     8a0:	ror	w21, w21, #17
     8a4:	add	w21, w22, w21
     8a8:	add	w0, w1, w0
     8ac:	orn	w4, w21, w23
     8b0:	mov	w1, #0x7e82                	// #32386
     8b4:	eor	w4, w4, w22
     8b8:	movk	w1, #0xf753, lsl #16
     8bc:	add	w3, w4, w3
     8c0:	add	w1, w13, w1
     8c4:	add	w20, w20, w3
     8c8:	mov	w6, #0xf235                	// #62005
     8cc:	movk	w6, #0xbd3a, lsl #16
     8d0:	add	w12, w12, w6
     8d4:	mov	w5, #0xd2bb                	// #53947
     8d8:	ror	w20, w20, #11
     8dc:	add	w20, w21, w20
     8e0:	movk	w5, #0x2ad7, lsl #16
     8e4:	orn	w3, w20, w22
     8e8:	add	w11, w11, w5
     8ec:	eor	w3, w3, w21
     8f0:	add	w23, w3, w23
     8f4:	add	w30, w30, w23
     8f8:	ldp	w7, w6, [x19]
     8fc:	ror	w30, w30, #26
     900:	add	w30, w20, w30
     904:	orn	w3, w30, w21
     908:	eor	w3, w3, w20
     90c:	add	w22, w3, w22
     910:	add	w18, w18, w22
     914:	ldp	w5, w8, [x19, #8]
     918:	ror	w18, w18, #22
     91c:	add	w18, w30, w18
     920:	orn	w3, w18, w20
     924:	eor	w3, w3, w30
     928:	add	w21, w3, w21
     92c:	add	w2, w2, w21
     930:	ldp	x21, x22, [sp, #32]
     934:	ror	w2, w2, #17
     938:	add	w2, w18, w2
     93c:	orn	w3, w2, w30
     940:	eor	w3, w3, w18
     944:	add	w20, w3, w20
     948:	add	w17, w17, w20
     94c:	ldp	x23, x24, [sp, #48]
     950:	ror	w17, w17, #11
     954:	add	w17, w2, w17
     958:	orn	w3, w17, w18
     95c:	eor	w3, w3, w2
     960:	add	w30, w3, w30
     964:	add	w16, w16, w30
     968:	ror	w16, w16, #26
     96c:	add	w16, w17, w16
     970:	orn	w3, w16, w2
     974:	eor	w3, w3, w17
     978:	add	w18, w3, w18
     97c:	add	w15, w15, w18
     980:	ror	w15, w15, #22
     984:	add	w15, w16, w15
     988:	orn	w3, w15, w17
     98c:	eor	w3, w3, w16
     990:	add	w2, w3, w2
     994:	add	w14, w14, w2
     998:	ror	w14, w14, #17
     99c:	add	w14, w15, w14
     9a0:	orn	w2, w14, w16
     9a4:	eor	w2, w2, w15
     9a8:	add	w17, w2, w17
     9ac:	add	w0, w0, w17
     9b0:	ror	w0, w0, #11
     9b4:	add	w0, w14, w0
     9b8:	orn	w2, w0, w15
     9bc:	eor	w2, w2, w14
     9c0:	add	w16, w2, w16
     9c4:	add	w1, w1, w16
     9c8:	ror	w1, w1, #26
     9cc:	add	w1, w0, w1
     9d0:	orn	w2, w1, w14
     9d4:	add	w7, w7, w1
     9d8:	eor	w2, w2, w0
     9dc:	add	w15, w2, w15
     9e0:	add	w12, w12, w15
     9e4:	ror	w12, w12, #22
     9e8:	add	w12, w1, w12
     9ec:	orn	w2, w12, w0
     9f0:	add	w8, w8, w12
     9f4:	eor	w2, w2, w1
     9f8:	add	w14, w2, w14
     9fc:	add	w11, w11, w14
     a00:	ror	w11, w11, #17
     a04:	add	w11, w12, w11
     a08:	orn	w1, w11, w1
     a0c:	add	w6, w11, w6
     a10:	eor	w1, w1, w12
     a14:	add	w5, w5, w11
     a18:	add	w1, w1, w0
     a1c:	stp	w5, w8, [x19, #8]
     a20:	add	w10, w10, w1
     a24:	ror	w10, w10, #11
     a28:	add	w6, w6, w10
     a2c:	stp	w7, w6, [x19]
     a30:	ldp	x19, x20, [sp, #16]
     a34:	ldp	x29, x30, [sp], #144
     a38:	ret
     a3c:	nop

0000000000000a40 <md5_write>:
     a40:	stp	x29, x30, [sp, #-48]!
     a44:	mov	x29, sp
     a48:	stp	x19, x20, [sp, #16]
     a4c:	mov	x20, x1
     a50:	ldr	w1, [x0, #84]
     a54:	stp	x21, x22, [sp, #32]
     a58:	mov	x19, x0
     a5c:	mov	x21, x2
     a60:	cmp	w1, #0x40
     a64:	b.eq	b74 <md5_write+0x134>  // b.none
     a68:	cbz	x20, b38 <md5_write+0xf8>
     a6c:	cbz	w1, aac <md5_write+0x6c>
     a70:	cbz	x2, b38 <md5_write+0xf8>
     a74:	sxtw	x0, w1
     a78:	add	x1, x19, #0x14
     a7c:	b	a98 <md5_write+0x58>
     a80:	str	w2, [x19, #84]
     a84:	subs	x21, x21, #0x1
     a88:	ldrb	w3, [x20], #1
     a8c:	strb	w3, [x1, x0]
     a90:	add	x0, x0, #0x1
     a94:	b.eq	b48 <md5_write+0x108>  // b.none
     a98:	add	w2, w0, #0x1
     a9c:	cmp	w0, #0x3f
     aa0:	b.le	a80 <md5_write+0x40>
     aa4:	cmp	w0, #0x40
     aa8:	b.eq	bb0 <md5_write+0x170>  // b.none
     aac:	mov	w0, #0x80                  	// #128
     ab0:	bl	0 <_gcry_burn_stack>
     ab4:	cmp	x21, #0x3f
     ab8:	b.ls	ba8 <md5_write+0x168>  // b.plast
     abc:	sub	x22, x21, #0x40
     ac0:	and	x22, x22, #0xffffffffffffffc0
     ac4:	add	x22, x22, #0x40
     ac8:	add	x22, x20, x22
     acc:	nop
     ad0:	mov	x1, x20
     ad4:	mov	x0, x19
     ad8:	bl	38 <transform>
     adc:	str	wzr, [x19, #84]
     ae0:	ldr	w0, [x19, #16]
     ae4:	add	x20, x20, #0x40
     ae8:	cmp	x20, x22
     aec:	add	w0, w0, #0x1
     af0:	str	w0, [x19, #16]
     af4:	b.ne	ad0 <md5_write+0x90>  // b.any
     af8:	and	x21, x21, #0x3f
     afc:	cbz	x21, b38 <md5_write+0xf8>
     b00:	ldrsw	x1, [x19, #84]
     b04:	add	x2, x19, #0x14
     b08:	sub	x22, x22, x1
     b0c:	add	x21, x1, x21
     b10:	b	b2c <md5_write+0xec>
     b14:	str	w0, [x19, #84]
     b18:	ldrb	w0, [x22, x1]
     b1c:	strb	w0, [x2, x1]
     b20:	add	x1, x1, #0x1
     b24:	cmp	x1, x21
     b28:	b.eq	b38 <md5_write+0xf8>  // b.none
     b2c:	add	w0, w1, #0x1
     b30:	cmp	w1, #0x3f
     b34:	b.le	b14 <md5_write+0xd4>
     b38:	ldp	x19, x20, [sp, #16]
     b3c:	ldp	x21, x22, [sp, #32]
     b40:	ldp	x29, x30, [sp], #48
     b44:	ret
     b48:	cmp	w2, #0x40
     b4c:	b.ne	b38 <md5_write+0xf8>  // b.any
     b50:	mov	x0, x19
     b54:	bl	38 <transform>
     b58:	mov	w0, #0x80                  	// #128
     b5c:	bl	0 <_gcry_burn_stack>
     b60:	ldr	w0, [x19, #16]
     b64:	str	wzr, [x19, #84]
     b68:	add	w0, w0, #0x1
     b6c:	str	w0, [x19, #16]
     b70:	b	b38 <md5_write+0xf8>
     b74:	add	x1, x0, #0x14
     b78:	bl	38 <transform>
     b7c:	mov	w0, #0x80                  	// #128
     b80:	bl	0 <_gcry_burn_stack>
     b84:	str	wzr, [x19, #84]
     b88:	ldr	w0, [x19, #16]
     b8c:	add	w0, w0, #0x1
     b90:	str	w0, [x19, #16]
     b94:	cbz	x20, b38 <md5_write+0xf8>
     b98:	mov	w0, #0x80                  	// #128
     b9c:	bl	0 <_gcry_burn_stack>
     ba0:	cmp	x21, #0x3f
     ba4:	b.hi	abc <md5_write+0x7c>  // b.pmore
     ba8:	mov	x22, x20
     bac:	b	afc <md5_write+0xbc>
     bb0:	add	x1, x19, #0x14
     bb4:	mov	x0, x19
     bb8:	bl	38 <transform>
     bbc:	mov	x22, x20
     bc0:	mov	w0, #0x80                  	// #128
     bc4:	bl	0 <_gcry_burn_stack>
     bc8:	str	wzr, [x19, #84]
     bcc:	ldr	w1, [x19, #16]
     bd0:	mov	w0, #0x80                  	// #128
     bd4:	add	w1, w1, #0x1
     bd8:	str	w1, [x19, #16]
     bdc:	bl	0 <_gcry_burn_stack>
     be0:	cmp	x21, #0x3f
     be4:	b.hi	abc <md5_write+0x7c>  // b.pmore
     be8:	b	b00 <md5_write+0xc0>
     bec:	nop

0000000000000bf0 <md5_final>:
     bf0:	stp	x29, x30, [sp, #-48]!
     bf4:	mov	x29, sp
     bf8:	ldr	w1, [x0, #84]
     bfc:	stp	x19, x20, [sp, #16]
     c00:	mov	x19, x0
     c04:	add	x20, x0, #0x14
     c08:	stp	x21, x22, [sp, #32]
     c0c:	cmp	w1, #0x40
     c10:	b.eq	fd0 <md5_final+0x3e0>  // b.none
     c14:	ldr	w2, [x0, #16]
     c18:	add	w3, w1, #0x1
     c1c:	lsl	w0, w2, #6
     c20:	adds	w0, w1, w0
     c24:	cset	w4, cs  // cs = hs, nlast
     c28:	cmp	w1, #0x37
     c2c:	add	w2, w4, w2, lsr #26
     c30:	lsl	w22, w0, #3
     c34:	extr	w21, w2, w0, #29
     c38:	b.le	d5c <md5_final+0x16c>
     c3c:	add	x0, x19, w1, sxtw
     c40:	str	w3, [x19, #84]
     c44:	mov	w2, #0xffffff80            	// #-128
     c48:	cmp	w3, #0x3f
     c4c:	strb	w2, [x0, #20]
     c50:	b.gt	d50 <md5_final+0x160>
     c54:	add	x3, x19, w3, sxtw
     c58:	cmp	w1, #0x3e
     c5c:	add	w0, w1, #0x2
     c60:	strb	wzr, [x3, #20]
     c64:	b.eq	cd4 <md5_final+0xe4>  // b.none
     c68:	add	x0, x19, w0, sxtw
     c6c:	cmp	w1, #0x3d
     c70:	add	w2, w1, #0x3
     c74:	strb	wzr, [x0, #20]
     c78:	b.eq	cd4 <md5_final+0xe4>  // b.none
     c7c:	add	x2, x19, w2, sxtw
     c80:	cmp	w1, #0x3c
     c84:	add	w0, w1, #0x4
     c88:	strb	wzr, [x2, #20]
     c8c:	b.eq	cd4 <md5_final+0xe4>  // b.none
     c90:	add	x0, x19, w0, sxtw
     c94:	cmp	w1, #0x3b
     c98:	add	w2, w1, #0x5
     c9c:	strb	wzr, [x0, #20]
     ca0:	b.eq	cd4 <md5_final+0xe4>  // b.none
     ca4:	add	x2, x19, w2, sxtw
     ca8:	cmp	w1, #0x3a
     cac:	add	w0, w1, #0x6
     cb0:	strb	wzr, [x2, #20]
     cb4:	b.eq	cd4 <md5_final+0xe4>  // b.none
     cb8:	add	x0, x19, w0, sxtw
     cbc:	cmp	w1, #0x39
     cc0:	add	w1, w1, #0x7
     cc4:	strb	wzr, [x0, #20]
     cc8:	b.eq	cd4 <md5_final+0xe4>  // b.none
     ccc:	add	x1, x19, w1, sxtw
     cd0:	strb	wzr, [x1, #20]
     cd4:	mov	w0, #0x40                  	// #64
     cd8:	str	w0, [x19, #84]
     cdc:	mov	x1, x20
     ce0:	mov	x0, x19
     ce4:	bl	38 <transform>
     ce8:	mov	w0, #0x80                  	// #128
     cec:	bl	0 <_gcry_burn_stack>
     cf0:	str	wzr, [x19, #84]
     cf4:	ldr	w0, [x19, #16]
     cf8:	add	w0, w0, #0x1
     cfc:	str	w0, [x19, #16]
     d00:	mov	x0, x20
     d04:	mov	x2, #0x38                  	// #56
     d08:	mov	w1, #0x0                   	// #0
     d0c:	bl	0 <grub_memset>
     d10:	mov	x1, x20
     d14:	str	w22, [x19, #76]
     d18:	strh	w21, [x19, #80]
     d1c:	mov	x0, x19
     d20:	strh	wzr, [x19, #82]
     d24:	bl	38 <transform>
     d28:	mov	w0, #0x80                  	// #128
     d2c:	bl	0 <_gcry_burn_stack>
     d30:	ldr	x0, [x19]
     d34:	ldp	x21, x22, [sp, #32]
     d38:	stur	x0, [x19, #20]
     d3c:	ldr	x0, [x19, #8]
     d40:	stur	x0, [x19, #28]
     d44:	ldp	x19, x20, [sp, #16]
     d48:	ldp	x29, x30, [sp], #48
     d4c:	ret
     d50:	cmp	w3, #0x40
     d54:	b.ne	d00 <md5_final+0x110>  // b.any
     d58:	b	cdc <md5_final+0xec>
     d5c:	sxtw	x5, w1
     d60:	str	w3, [x19, #84]
     d64:	add	x0, x19, x5
     d68:	mov	w2, #0xffffff80            	// #-128
     d6c:	cmp	w3, #0x37
     d70:	strb	w2, [x0, #20]
     d74:	b.gt	d10 <md5_final+0x120>
     d78:	add	x6, x5, #0x15
     d7c:	mov	w7, #0xb                   	// #11
     d80:	add	x2, x19, x6
     d84:	mov	w5, #0x36                  	// #54
     d88:	neg	x2, x2
     d8c:	sub	w5, w5, w1
     d90:	and	w2, w2, #0x7
     d94:	mov	w4, #0x37                  	// #55
     d98:	add	w0, w2, #0x7
     d9c:	sub	w4, w4, w1
     da0:	cmp	w0, w7
     da4:	csel	w0, w0, w7, cs  // cs = hs, nlast
     da8:	cmp	w5, w0
     dac:	b.cc	102c <md5_final+0x43c>  // b.lo, b.ul, b.last
     db0:	cbz	w2, 1024 <md5_final+0x434>
     db4:	add	x5, x19, w3, sxtw
     db8:	cmp	w2, #0x1
     dbc:	add	w0, w3, #0x1
     dc0:	strb	wzr, [x5, #20]
     dc4:	b.eq	e38 <md5_final+0x248>  // b.none
     dc8:	add	x5, x19, w0, sxtw
     dcc:	cmp	w2, #0x2
     dd0:	add	w0, w3, #0x2
     dd4:	strb	wzr, [x5, #20]
     dd8:	b.eq	e38 <md5_final+0x248>  // b.none
     ddc:	add	x5, x19, w0, sxtw
     de0:	cmp	w2, #0x3
     de4:	add	w0, w3, #0x3
     de8:	strb	wzr, [x5, #20]
     dec:	b.eq	e38 <md5_final+0x248>  // b.none
     df0:	add	x5, x19, w0, sxtw
     df4:	cmp	w2, #0x4
     df8:	add	w0, w3, #0x4
     dfc:	strb	wzr, [x5, #20]
     e00:	b.eq	e38 <md5_final+0x248>  // b.none
     e04:	add	x5, x19, w0, sxtw
     e08:	cmp	w2, #0x5
     e0c:	add	w0, w3, #0x5
     e10:	strb	wzr, [x5, #20]
     e14:	b.eq	e38 <md5_final+0x248>  // b.none
     e18:	add	x5, x19, w0, sxtw
     e1c:	cmp	w2, #0x7
     e20:	add	w0, w3, #0x6
     e24:	strb	wzr, [x5, #20]
     e28:	b.ne	e38 <md5_final+0x248>  // b.any
     e2c:	add	x5, x19, w0, sxtw
     e30:	add	w0, w3, #0x7
     e34:	strb	wzr, [x5, #20]
     e38:	mov	w5, w2
     e3c:	sub	w2, w4, w2
     e40:	add	x5, x5, x6
     e44:	lsr	w4, w2, #3
     e48:	add	x6, x19, x5
     e4c:	cmp	w4, #0x1
     e50:	str	xzr, [x19, x5]
     e54:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e58:	str	xzr, [x6, #8]
     e5c:	cmp	w4, #0x2
     e60:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e64:	str	xzr, [x6, #16]
     e68:	cmp	w4, #0x3
     e6c:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e70:	str	xzr, [x6, #24]
     e74:	cmp	w4, #0x4
     e78:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e7c:	str	xzr, [x6, #32]
     e80:	cmp	w4, #0x5
     e84:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e88:	str	xzr, [x6, #40]
     e8c:	cmp	w4, #0x6
     e90:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     e94:	str	xzr, [x6, #48]
     e98:	cmp	w4, #0x7
     e9c:	b.eq	ea4 <md5_final+0x2b4>  // b.none
     ea0:	str	xzr, [x6, #56]
     ea4:	and	w4, w2, #0xfffffff8
     ea8:	add	w0, w4, w0
     eac:	cmp	w4, w2
     eb0:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     eb4:	add	x2, x19, w0, sxtw
     eb8:	cmp	w0, #0x37
     ebc:	add	w4, w0, #0x1
     ec0:	strb	wzr, [x2, #20]
     ec4:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     ec8:	add	x4, x19, w4, sxtw
     ecc:	cmp	w0, #0x36
     ed0:	add	w2, w0, #0x2
     ed4:	strb	wzr, [x4, #20]
     ed8:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     edc:	add	x2, x19, w2, sxtw
     ee0:	cmp	w0, #0x35
     ee4:	add	w4, w0, #0x3
     ee8:	strb	wzr, [x2, #20]
     eec:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     ef0:	add	x4, x19, w4, sxtw
     ef4:	cmp	w0, #0x34
     ef8:	add	w2, w0, #0x4
     efc:	strb	wzr, [x4, #20]
     f00:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f04:	add	x2, x19, w2, sxtw
     f08:	cmp	w0, #0x33
     f0c:	add	w4, w0, #0x5
     f10:	strb	wzr, [x2, #20]
     f14:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f18:	add	x4, x19, w4, sxtw
     f1c:	cmp	w0, #0x32
     f20:	add	w2, w0, #0x6
     f24:	strb	wzr, [x4, #20]
     f28:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f2c:	add	x2, x19, w2, sxtw
     f30:	cmp	w0, #0x31
     f34:	add	w4, w0, #0x7
     f38:	strb	wzr, [x2, #20]
     f3c:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f40:	add	x4, x19, w4, sxtw
     f44:	cmp	w0, #0x30
     f48:	add	w2, w0, #0x8
     f4c:	strb	wzr, [x4, #20]
     f50:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f54:	add	x2, x19, w2, sxtw
     f58:	cmp	w0, #0x2f
     f5c:	add	w4, w0, #0x9
     f60:	strb	wzr, [x2, #20]
     f64:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f68:	add	x4, x19, w4, sxtw
     f6c:	cmp	w0, #0x2e
     f70:	add	w2, w0, #0xa
     f74:	strb	wzr, [x4, #20]
     f78:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f7c:	add	x2, x19, w2, sxtw
     f80:	cmp	w0, #0x2d
     f84:	add	w4, w0, #0xb
     f88:	strb	wzr, [x2, #20]
     f8c:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     f90:	add	x4, x19, w4, sxtw
     f94:	cmp	w0, #0x2c
     f98:	add	w2, w0, #0xc
     f9c:	strb	wzr, [x4, #20]
     fa0:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     fa4:	add	x2, x19, w2, sxtw
     fa8:	cmp	w0, #0x2b
     fac:	add	w0, w0, #0xd
     fb0:	strb	wzr, [x2, #20]
     fb4:	b.eq	fc0 <md5_final+0x3d0>  // b.none
     fb8:	add	x0, x19, w0, sxtw
     fbc:	strb	wzr, [x0, #20]
     fc0:	sub	w1, w3, w1
     fc4:	add	w1, w1, #0x37
     fc8:	str	w1, [x19, #84]
     fcc:	b	d10 <md5_final+0x120>
     fd0:	mov	x1, x20
     fd4:	bl	38 <transform>
     fd8:	mov	w0, #0x80                  	// #128
     fdc:	bl	0 <_gcry_burn_stack>
     fe0:	ldr	w0, [x19, #16]
     fe4:	mov	w5, #0x1                   	// #1
     fe8:	add	x2, x19, #0x15
     fec:	mov	w7, #0xffffff80            	// #-128
     ff0:	add	w0, w0, w5
     ff4:	neg	x2, x2
     ff8:	and	w2, w2, #0x7
     ffc:	mov	w3, w5
    1000:	lsl	w22, w0, #9
    1004:	lsr	w21, w0, #23
    1008:	mov	w4, #0x37                  	// #55
    100c:	mov	w1, #0x0                   	// #0
    1010:	mov	x6, #0x15                  	// #21
    1014:	str	w0, [x19, #16]
    1018:	strb	w7, [x19, #20]
    101c:	str	w5, [x19, #84]
    1020:	b	db0 <md5_final+0x1c0>
    1024:	mov	w0, w3
    1028:	b	e38 <md5_final+0x248>
    102c:	mov	w0, w3
    1030:	b	eb4 <md5_final+0x2c4>
    1034:	nop

0000000000001038 <grub_mod_init>:
    1038:	adrp	x0, 0 <md5_init>
    103c:	ldr	x0, [x0]
    1040:	b	0 <grub_md_register>
    1044:	nop
	...

0000000000001050 <grub_mod_fini>:
    1050:	adrp	x0, 0 <md5_init>
    1054:	ldr	x0, [x0]
    1058:	b	0 <grub_md_unregister>
    105c:	nop
	...
