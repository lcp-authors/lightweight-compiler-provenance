
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libreadline.so.8.0_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000016320 <.init>:
   16320:	stp	x29, x30, [sp, #-16]!
   16324:	mov	x29, sp
   16328:	bl	17a00 <iswlower@plt+0x10>
   1632c:	ldp	x29, x30, [sp], #16
   16330:	ret

Disassembly of section .plt:

0000000000016340 <_rl_set_normal_color@plt-0x20>:
   16340:	stp	x16, x30, [sp, #-16]!
   16344:	adrp	x16, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   16348:	ldr	x17, [x16, #4088]
   1634c:	add	x16, x16, #0xff8
   16350:	br	x17
   16354:	nop
   16358:	nop
   1635c:	nop

0000000000016360 <_rl_set_normal_color@plt>:
   16360:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16364:	ldr	x17, [x16]
   16368:	add	x16, x16, #0x0
   1636c:	br	x17

0000000000016370 <mbrtowc@plt>:
   16370:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16374:	ldr	x17, [x16, #8]
   16378:	add	x16, x16, #0x8
   1637c:	br	x17

0000000000016380 <memcpy@plt>:
   16380:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16384:	ldr	x17, [x16, #16]
   16388:	add	x16, x16, #0x10
   1638c:	br	x17

0000000000016390 <_rl_start_using_history@plt>:
   16390:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16394:	ldr	x17, [x16, #24]
   16398:	add	x16, x16, #0x18
   1639c:	br	x17

00000000000163a0 <sh_get_env_value@plt>:
   163a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163a4:	ldr	x17, [x16, #32]
   163a8:	add	x16, x16, #0x20
   163ac:	br	x17

00000000000163b0 <memmove@plt>:
   163b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163b4:	ldr	x17, [x16, #40]
   163b8:	add	x16, x16, #0x28
   163bc:	br	x17

00000000000163c0 <rl_discard_keymap@plt>:
   163c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163c4:	ldr	x17, [x16, #48]
   163c8:	add	x16, x16, #0x30
   163cc:	br	x17

00000000000163d0 <rl_digit_argument@plt>:
   163d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163d4:	ldr	x17, [x16, #56]
   163d8:	add	x16, x16, #0x38
   163dc:	br	x17

00000000000163e0 <_rl_isearch_dispatch@plt>:
   163e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163e4:	ldr	x17, [x16, #64]
   163e8:	add	x16, x16, #0x40
   163ec:	br	x17

00000000000163f0 <_rl_block_sigint@plt>:
   163f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   163f4:	ldr	x17, [x16, #72]
   163f8:	add	x16, x16, #0x48
   163fc:	br	x17

0000000000016400 <rl_begin_undo_group@plt>:
   16400:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16404:	ldr	x17, [x16, #80]
   16408:	add	x16, x16, #0x50
   1640c:	br	x17

0000000000016410 <_rl_clean_up_for_exit@plt>:
   16410:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16414:	ldr	x17, [x16, #88]
   16418:	add	x16, x16, #0x58
   1641c:	br	x17

0000000000016420 <_hs_history_patsearch@plt>:
   16420:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16424:	ldr	x17, [x16, #96]
   16428:	add	x16, x16, #0x60
   1642c:	br	x17

0000000000016430 <rl_insert_text@plt>:
   16430:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16434:	ldr	x17, [x16, #104]
   16438:	add	x16, x16, #0x68
   1643c:	br	x17

0000000000016440 <strlen@plt>:
   16440:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16444:	ldr	x17, [x16, #112]
   16448:	add	x16, x16, #0x70
   1644c:	br	x17

0000000000016450 <stifle_history@plt>:
   16450:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16454:	ldr	x17, [x16, #120]
   16458:	add	x16, x16, #0x78
   1645c:	br	x17

0000000000016460 <_rl_input_available@plt>:
   16460:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16464:	ldr	x17, [x16, #128]
   16468:	add	x16, x16, #0x80
   1646c:	br	x17

0000000000016470 <rl_tilde_expand@plt>:
   16470:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16474:	ldr	x17, [x16, #136]
   16478:	add	x16, x16, #0x88
   1647c:	br	x17

0000000000016480 <rl_tty_set_default_bindings@plt>:
   16480:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16484:	ldr	x17, [x16, #144]
   16488:	add	x16, x16, #0x90
   1648c:	br	x17

0000000000016490 <fputs@plt>:
   16490:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16494:	ldr	x17, [x16, #152]
   16498:	add	x16, x16, #0x98
   1649c:	br	x17

00000000000164a0 <exit@plt>:
   164a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164a4:	ldr	x17, [x16, #160]
   164a8:	add	x16, x16, #0xa0
   164ac:	br	x17

00000000000164b0 <_rl_free_undo_list@plt>:
   164b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164b4:	ldr	x17, [x16, #168]
   164b8:	add	x16, x16, #0xa8
   164bc:	br	x17

00000000000164c0 <_rl_init_terminal_io@plt>:
   164c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164c4:	ldr	x17, [x16, #176]
   164c8:	add	x16, x16, #0xb0
   164cc:	br	x17

00000000000164d0 <rl_forced_update_display@plt>:
   164d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164d4:	ldr	x17, [x16, #184]
   164d8:	add	x16, x16, #0xb8
   164dc:	br	x17

00000000000164e0 <_rl_backspace@plt>:
   164e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164e4:	ldr	x17, [x16, #192]
   164e8:	add	x16, x16, #0xc0
   164ec:	br	x17

00000000000164f0 <add_history_time@plt>:
   164f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   164f4:	ldr	x17, [x16, #200]
   164f8:	add	x16, x16, #0xc8
   164fc:	br	x17

0000000000016500 <_rl_move_cursor_relative@plt>:
   16500:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16504:	ldr	x17, [x16, #208]
   16508:	add	x16, x16, #0xd0
   1650c:	br	x17

0000000000016510 <rl_unix_line_discard@plt>:
   16510:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16514:	ldr	x17, [x16, #216]
   16518:	add	x16, x16, #0xd8
   1651c:	br	x17

0000000000016520 <_rl_current_display_line@plt>:
   16520:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16524:	ldr	x17, [x16, #224]
   16528:	add	x16, x16, #0xe0
   1652c:	br	x17

0000000000016530 <rl_backward_kill_word@plt>:
   16530:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16534:	ldr	x17, [x16, #232]
   16538:	add	x16, x16, #0xe8
   1653c:	br	x17

0000000000016540 <rl_forward_byte@plt>:
   16540:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16544:	ldr	x17, [x16, #240]
   16548:	add	x16, x16, #0xf0
   1654c:	br	x17

0000000000016550 <rl_noninc_forward_search@plt>:
   16550:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16554:	ldr	x17, [x16, #248]
   16558:	add	x16, x16, #0xf8
   1655c:	br	x17

0000000000016560 <sigprocmask@plt>:
   16560:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16564:	ldr	x17, [x16, #256]
   16568:	add	x16, x16, #0x100
   1656c:	br	x17

0000000000016570 <rl_bind_keyseq_if_unbound@plt>:
   16570:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16574:	ldr	x17, [x16, #264]
   16578:	add	x16, x16, #0x108
   1657c:	br	x17

0000000000016580 <rltty_set_default_bindings@plt>:
   16580:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16584:	ldr	x17, [x16, #272]
   16588:	add	x16, x16, #0x110
   1658c:	br	x17

0000000000016590 <tputs@plt>:
   16590:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16594:	ldr	x17, [x16, #280]
   16598:	add	x16, x16, #0x118
   1659c:	br	x17

00000000000165a0 <where_history@plt>:
   165a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165a4:	ldr	x17, [x16, #288]
   165a8:	add	x16, x16, #0x120
   165ac:	br	x17

00000000000165b0 <__sigsetjmp@plt>:
   165b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165b4:	ldr	x17, [x16, #296]
   165b8:	add	x16, x16, #0x128
   165bc:	br	x17

00000000000165c0 <rl_alphabetic@plt>:
   165c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165c4:	ldr	x17, [x16, #304]
   165c8:	add	x16, x16, #0x130
   165cc:	br	x17

00000000000165d0 <_rl_internal_char_cleanup@plt>:
   165d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165d4:	ldr	x17, [x16, #312]
   165d8:	add	x16, x16, #0x138
   165dc:	br	x17

00000000000165e0 <rl_reset_line_state@plt>:
   165e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165e4:	ldr	x17, [x16, #320]
   165e8:	add	x16, x16, #0x140
   165ec:	br	x17

00000000000165f0 <rl_forward_word@plt>:
   165f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   165f4:	ldr	x17, [x16, #328]
   165f8:	add	x16, x16, #0x148
   165fc:	br	x17

0000000000016600 <setenv@plt>:
   16600:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16604:	ldr	x17, [x16, #336]
   16608:	add	x16, x16, #0x150
   1660c:	br	x17

0000000000016610 <readlink@plt>:
   16610:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16614:	ldr	x17, [x16, #344]
   16618:	add	x16, x16, #0x158
   1661c:	br	x17

0000000000016620 <rl_complete_internal@plt>:
   16620:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16624:	ldr	x17, [x16, #352]
   16628:	add	x16, x16, #0x160
   1662c:	br	x17

0000000000016630 <rl_variable_bind@plt>:
   16630:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16634:	ldr	x17, [x16, #360]
   16638:	add	x16, x16, #0x168
   1663c:	br	x17

0000000000016640 <__cxa_finalize@plt>:
   16640:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16644:	ldr	x17, [x16, #368]
   16648:	add	x16, x16, #0x170
   1664c:	br	x17

0000000000016650 <sprintf@plt>:
   16650:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16654:	ldr	x17, [x16, #376]
   16658:	add	x16, x16, #0x178
   1665c:	br	x17

0000000000016660 <getuid@plt>:
   16660:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16664:	ldr	x17, [x16, #384]
   16668:	add	x16, x16, #0x180
   1666c:	br	x17

0000000000016670 <putc@plt>:
   16670:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16674:	ldr	x17, [x16, #392]
   16678:	add	x16, x16, #0x188
   1667c:	br	x17

0000000000016680 <opendir@plt>:
   16680:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16684:	ldr	x17, [x16, #400]
   16688:	add	x16, x16, #0x190
   1668c:	br	x17

0000000000016690 <rl_completion_matches@plt>:
   16690:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16694:	ldr	x17, [x16, #408]
   16698:	add	x16, x16, #0x198
   1669c:	br	x17

00000000000166a0 <_rl_kill_kbd_macro@plt>:
   166a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166a4:	ldr	x17, [x16, #416]
   166a8:	add	x16, x16, #0x1a0
   166ac:	br	x17

00000000000166b0 <add_history@plt>:
   166b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166b4:	ldr	x17, [x16, #424]
   166b8:	add	x16, x16, #0x1a8
   166bc:	br	x17

00000000000166c0 <_rl_strip_prompt@plt>:
   166c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166c4:	ldr	x17, [x16, #432]
   166c8:	add	x16, x16, #0x1b0
   166cc:	br	x17

00000000000166d0 <fputc@plt>:
   166d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166d4:	ldr	x17, [x16, #440]
   166d8:	add	x16, x16, #0x1b8
   166dc:	br	x17

00000000000166e0 <rl_read_init_file@plt>:
   166e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166e4:	ldr	x17, [x16, #448]
   166e8:	add	x16, x16, #0x1c0
   166ec:	br	x17

00000000000166f0 <rl_funmap_names@plt>:
   166f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   166f4:	ldr	x17, [x16, #456]
   166f8:	add	x16, x16, #0x1c8
   166fc:	br	x17

0000000000016700 <_rl_read_mbstring@plt>:
   16700:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16704:	ldr	x17, [x16, #464]
   16708:	add	x16, x16, #0x1d0
   1670c:	br	x17

0000000000016710 <rl_parse_and_bind@plt>:
   16710:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16714:	ldr	x17, [x16, #472]
   16718:	add	x16, x16, #0x1d8
   1671c:	br	x17

0000000000016720 <qsort@plt>:
   16720:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16724:	ldr	x17, [x16, #480]
   16728:	add	x16, x16, #0x1e0
   1672c:	br	x17

0000000000016730 <rl_vi_put@plt>:
   16730:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16734:	ldr	x17, [x16, #488]
   16738:	add	x16, x16, #0x1e8
   1673c:	br	x17

0000000000016740 <_rl_nsearch_cleanup@plt>:
   16740:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16744:	ldr	x17, [x16, #496]
   16748:	add	x16, x16, #0x1f0
   1674c:	br	x17

0000000000016750 <kill@plt>:
   16750:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16754:	ldr	x17, [x16, #504]
   16758:	add	x16, x16, #0x1f8
   1675c:	br	x17

0000000000016760 <_rl_parse_colors@plt>:
   16760:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16764:	ldr	x17, [x16, #512]
   16768:	add	x16, x16, #0x200
   1676c:	br	x17

0000000000016770 <history_is_stifled@plt>:
   16770:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16774:	ldr	x17, [x16, #520]
   16778:	add	x16, x16, #0x208
   1677c:	br	x17

0000000000016780 <rl_forward_char@plt>:
   16780:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16784:	ldr	x17, [x16, #528]
   16788:	add	x16, x16, #0x210
   1678c:	br	x17

0000000000016790 <readline_internal_teardown@plt>:
   16790:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16794:	ldr	x17, [x16, #536]
   16798:	add	x16, x16, #0x218
   1679c:	br	x17

00000000000167a0 <_rl_isearch_cleanup@plt>:
   167a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167a4:	ldr	x17, [x16, #544]
   167a8:	add	x16, x16, #0x220
   167ac:	br	x17

00000000000167b0 <rl_echo_signal_char@plt>:
   167b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167b4:	ldr	x17, [x16, #552]
   167b8:	add	x16, x16, #0x228
   167bc:	br	x17

00000000000167c0 <_rl_add_macro_char@plt>:
   167c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167c4:	ldr	x17, [x16, #560]
   167c8:	add	x16, x16, #0x230
   167cc:	br	x17

00000000000167d0 <tgoto@plt>:
   167d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167d4:	ldr	x17, [x16, #568]
   167d8:	add	x16, x16, #0x238
   167dc:	br	x17

00000000000167e0 <rl_complete@plt>:
   167e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167e4:	ldr	x17, [x16, #576]
   167e8:	add	x16, x16, #0x240
   167ec:	br	x17

00000000000167f0 <get_history_event@plt>:
   167f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   167f4:	ldr	x17, [x16, #584]
   167f8:	add	x16, x16, #0x248
   167fc:	br	x17

0000000000016800 <_rl_set_insert_mode@plt>:
   16800:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16804:	ldr	x17, [x16, #592]
   16808:	add	x16, x16, #0x250
   1680c:	br	x17

0000000000016810 <__ctype_tolower_loc@plt>:
   16810:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16814:	ldr	x17, [x16, #600]
   16818:	add	x16, x16, #0x258
   1681c:	br	x17

0000000000016820 <snprintf@plt>:
   16820:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16824:	ldr	x17, [x16, #608]
   16828:	add	x16, x16, #0x260
   1682c:	br	x17

0000000000016830 <tcgetattr@plt>:
   16830:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16834:	ldr	x17, [x16, #616]
   16838:	add	x16, x16, #0x268
   1683c:	br	x17

0000000000016840 <_rl_fix_point@plt>:
   16840:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16844:	ldr	x17, [x16, #624]
   16848:	add	x16, x16, #0x270
   1684c:	br	x17

0000000000016850 <rl_vi_eWord@plt>:
   16850:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16854:	ldr	x17, [x16, #632]
   16858:	add	x16, x16, #0x278
   1685c:	br	x17

0000000000016860 <fileno@plt>:
   16860:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16864:	ldr	x17, [x16, #640]
   16868:	add	x16, x16, #0x280
   1686c:	br	x17

0000000000016870 <rl_vi_eword@plt>:
   16870:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16874:	ldr	x17, [x16, #648]
   16878:	add	x16, x16, #0x288
   1687c:	br	x17

0000000000016880 <_rl_arg_getchar@plt>:
   16880:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16884:	ldr	x17, [x16, #656]
   16888:	add	x16, x16, #0x290
   1688c:	br	x17

0000000000016890 <_rl_next_macro_key@plt>:
   16890:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16894:	ldr	x17, [x16, #664]
   16898:	add	x16, x16, #0x298
   1689c:	br	x17

00000000000168a0 <rl_generic_bind@plt>:
   168a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168a4:	ldr	x17, [x16, #672]
   168a8:	add	x16, x16, #0x2a0
   168ac:	br	x17

00000000000168b0 <rl_clear_pending_input@plt>:
   168b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168b4:	ldr	x17, [x16, #680]
   168b8:	add	x16, x16, #0x2a8
   168bc:	br	x17

00000000000168c0 <rl_add_undo@plt>:
   168c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168c4:	ldr	x17, [x16, #688]
   168c8:	add	x16, x16, #0x2b0
   168cc:	br	x17

00000000000168d0 <_rl_scxt_alloc@plt>:
   168d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168d4:	ldr	x17, [x16, #696]
   168d8:	add	x16, x16, #0x2b8
   168dc:	br	x17

00000000000168e0 <_rl_char_search_internal@plt>:
   168e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168e4:	ldr	x17, [x16, #704]
   168e8:	add	x16, x16, #0x2c0
   168ec:	br	x17

00000000000168f0 <_rl_untranslate_macro_value@plt>:
   168f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   168f4:	ldr	x17, [x16, #712]
   168f8:	add	x16, x16, #0x2c8
   168fc:	br	x17

0000000000016900 <rl_callback_sigcleanup@plt>:
   16900:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16904:	ldr	x17, [x16, #720]
   16908:	add	x16, x16, #0x2d0
   1690c:	br	x17

0000000000016910 <_rl_free_history_entry@plt>:
   16910:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16914:	ldr	x17, [x16, #728]
   16918:	add	x16, x16, #0x2d8
   1691c:	br	x17

0000000000016920 <rl_filename_completion_function@plt>:
   16920:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16924:	ldr	x17, [x16, #736]
   16928:	add	x16, x16, #0x2e0
   1692c:	br	x17

0000000000016930 <getpid@plt>:
   16930:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16934:	ldr	x17, [x16, #744]
   16938:	add	x16, x16, #0x2e8
   1693c:	br	x17

0000000000016940 <nl_langinfo@plt>:
   16940:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16944:	ldr	x17, [x16, #752]
   16948:	add	x16, x16, #0x2f0
   1694c:	br	x17

0000000000016950 <tilde_expand_word@plt>:
   16950:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16954:	ldr	x17, [x16, #760]
   16958:	add	x16, x16, #0x2f8
   1695c:	br	x17

0000000000016960 <time@plt>:
   16960:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16964:	ldr	x17, [x16, #768]
   16968:	add	x16, x16, #0x300
   1696c:	br	x17

0000000000016970 <rl_initialize_funmap@plt>:
   16970:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16974:	ldr	x17, [x16, #776]
   16978:	add	x16, x16, #0x308
   1697c:	br	x17

0000000000016980 <malloc@plt>:
   16980:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16984:	ldr	x17, [x16, #784]
   16988:	add	x16, x16, #0x310
   1698c:	br	x17

0000000000016990 <rl_vi_bword@plt>:
   16990:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16994:	ldr	x17, [x16, #792]
   16998:	add	x16, x16, #0x318
   1699c:	br	x17

00000000000169a0 <wcwidth@plt>:
   169a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169a4:	ldr	x17, [x16, #800]
   169a8:	add	x16, x16, #0x320
   169ac:	br	x17

00000000000169b0 <rl_revert_line@plt>:
   169b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169b4:	ldr	x17, [x16, #808]
   169b8:	add	x16, x16, #0x328
   169bc:	br	x17

00000000000169c0 <_rl_make_prompt_for_search@plt>:
   169c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169c4:	ldr	x17, [x16, #816]
   169c8:	add	x16, x16, #0x330
   169cc:	br	x17

00000000000169d0 <_rl_erase_entire_line@plt>:
   169d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169d4:	ldr	x17, [x16, #824]
   169d8:	add	x16, x16, #0x338
   169dc:	br	x17

00000000000169e0 <_rl_unget_char@plt>:
   169e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169e4:	ldr	x17, [x16, #832]
   169e8:	add	x16, x16, #0x340
   169ec:	br	x17

00000000000169f0 <xfree@plt>:
   169f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   169f4:	ldr	x17, [x16, #840]
   169f8:	add	x16, x16, #0x348
   169fc:	br	x17

0000000000016a00 <rl_copy_backward_word@plt>:
   16a00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a04:	ldr	x17, [x16, #848]
   16a08:	add	x16, x16, #0x350
   16a0c:	br	x17

0000000000016a10 <read_history_range@plt>:
   16a10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a14:	ldr	x17, [x16, #856]
   16a18:	add	x16, x16, #0x358
   16a1c:	br	x17

0000000000016a20 <open@plt>:
   16a20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a24:	ldr	x17, [x16, #864]
   16a28:	add	x16, x16, #0x360
   16a2c:	br	x17

0000000000016a30 <rl_vi_check@plt>:
   16a30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a34:	ldr	x17, [x16, #872]
   16a38:	add	x16, x16, #0x368
   16a3c:	br	x17

0000000000016a40 <_rl_clear_screen@plt>:
   16a40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a44:	ldr	x17, [x16, #880]
   16a48:	add	x16, x16, #0x370
   16a4c:	br	x17

0000000000016a50 <xrealloc@plt>:
   16a50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a54:	ldr	x17, [x16, #888]
   16a58:	add	x16, x16, #0x378
   16a5c:	br	x17

0000000000016a60 <current_history@plt>:
   16a60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a64:	ldr	x17, [x16, #896]
   16a68:	add	x16, x16, #0x380
   16a6c:	br	x17

0000000000016a70 <rl_variable_dumper@plt>:
   16a70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a74:	ldr	x17, [x16, #904]
   16a78:	add	x16, x16, #0x388
   16a7c:	br	x17

0000000000016a80 <_rl_erase_at_end_of_line@plt>:
   16a80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a84:	ldr	x17, [x16, #912]
   16a88:	add	x16, x16, #0x390
   16a8c:	br	x17

0000000000016a90 <_rl_prev_macro_key@plt>:
   16a90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16a94:	ldr	x17, [x16, #920]
   16a98:	add	x16, x16, #0x398
   16a9c:	br	x17

0000000000016aa0 <rl_noninc_forward_search_again@plt>:
   16aa0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16aa4:	ldr	x17, [x16, #928]
   16aa8:	add	x16, x16, #0x3a0
   16aac:	br	x17

0000000000016ab0 <_rl_insert_typein@plt>:
   16ab0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ab4:	ldr	x17, [x16, #936]
   16ab8:	add	x16, x16, #0x3a8
   16abc:	br	x17

0000000000016ac0 <rl_backward_kill_line@plt>:
   16ac0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ac4:	ldr	x17, [x16, #944]
   16ac8:	add	x16, x16, #0x3b0
   16acc:	br	x17

0000000000016ad0 <_rl_output_character_function@plt>:
   16ad0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ad4:	ldr	x17, [x16, #952]
   16ad8:	add	x16, x16, #0x3b8
   16adc:	br	x17

0000000000016ae0 <rl_backward_word@plt>:
   16ae0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ae4:	ldr	x17, [x16, #960]
   16ae8:	add	x16, x16, #0x3c0
   16aec:	br	x17

0000000000016af0 <rl_newline@plt>:
   16af0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16af4:	ldr	x17, [x16, #968]
   16af8:	add	x16, x16, #0x3c8
   16afc:	br	x17

0000000000016b00 <rl_delete@plt>:
   16b00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b04:	ldr	x17, [x16, #976]
   16b08:	add	x16, x16, #0x3d0
   16b0c:	br	x17

0000000000016b10 <sigemptyset@plt>:
   16b10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b14:	ldr	x17, [x16, #984]
   16b18:	add	x16, x16, #0x3d8
   16b1c:	br	x17

0000000000016b20 <_rl_prep_non_filename_text@plt>:
   16b20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b24:	ldr	x17, [x16, #992]
   16b28:	add	x16, x16, #0x3e0
   16b2c:	br	x17

0000000000016b30 <rl_vi_fword@plt>:
   16b30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b34:	ldr	x17, [x16, #1000]
   16b38:	add	x16, x16, #0x3e8
   16b3c:	br	x17

0000000000016b40 <strncmp@plt>:
   16b40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b44:	ldr	x17, [x16, #1008]
   16b48:	add	x16, x16, #0x3f0
   16b4c:	br	x17

0000000000016b50 <strcat@plt>:
   16b50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b54:	ldr	x17, [x16, #1016]
   16b58:	add	x16, x16, #0x3f8
   16b5c:	br	x17

0000000000016b60 <rl_noninc_reverse_search_again@plt>:
   16b60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b64:	ldr	x17, [x16, #1024]
   16b68:	add	x16, x16, #0x400
   16b6c:	br	x17

0000000000016b70 <_rl_nsearch_callback@plt>:
   16b70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b74:	ldr	x17, [x16, #1032]
   16b78:	add	x16, x16, #0x408
   16b7c:	br	x17

0000000000016b80 <_rl_arg_overflow@plt>:
   16b80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b84:	ldr	x17, [x16, #1040]
   16b88:	add	x16, x16, #0x410
   16b8c:	br	x17

0000000000016b90 <rl_execute_next@plt>:
   16b90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16b94:	ldr	x17, [x16, #1048]
   16b98:	add	x16, x16, #0x418
   16b9c:	br	x17

0000000000016ba0 <tgetflag@plt>:
   16ba0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ba4:	ldr	x17, [x16, #1056]
   16ba8:	add	x16, x16, #0x420
   16bac:	br	x17

0000000000016bb0 <memset@plt>:
   16bb0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16bb4:	ldr	x17, [x16, #1064]
   16bb8:	add	x16, x16, #0x428
   16bbc:	br	x17

0000000000016bc0 <_rl_is_mbchar_matched@plt>:
   16bc0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16bc4:	ldr	x17, [x16, #1072]
   16bc8:	add	x16, x16, #0x430
   16bcc:	br	x17

0000000000016bd0 <_rl_arg_callback@plt>:
   16bd0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16bd4:	ldr	x17, [x16, #1080]
   16bd8:	add	x16, x16, #0x438
   16bdc:	br	x17

0000000000016be0 <strpbrk@plt>:
   16be0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16be4:	ldr	x17, [x16, #1088]
   16be8:	add	x16, x16, #0x440
   16bec:	br	x17

0000000000016bf0 <xmalloc@plt>:
   16bf0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16bf4:	ldr	x17, [x16, #1096]
   16bf8:	add	x16, x16, #0x448
   16bfc:	br	x17

0000000000016c00 <_rl_find_next_mbchar@plt>:
   16c00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c04:	ldr	x17, [x16, #1104]
   16c08:	add	x16, x16, #0x450
   16c0c:	br	x17

0000000000016c10 <getpwnam@plt>:
   16c10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c14:	ldr	x17, [x16, #1112]
   16c18:	add	x16, x16, #0x458
   16c1c:	br	x17

0000000000016c20 <_rl_find_prev_mbchar@plt>:
   16c20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c24:	ldr	x17, [x16, #1120]
   16c28:	add	x16, x16, #0x460
   16c2c:	br	x17

0000000000016c30 <_rl_dispatch@plt>:
   16c30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c34:	ldr	x17, [x16, #1128]
   16c38:	add	x16, x16, #0x468
   16c3c:	br	x17

0000000000016c40 <_rl_revert_all_lines@plt>:
   16c40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c44:	ldr	x17, [x16, #1136]
   16c48:	add	x16, x16, #0x470
   16c4c:	br	x17

0000000000016c50 <_rl_set_the_line@plt>:
   16c50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c54:	ldr	x17, [x16, #1144]
   16c58:	add	x16, x16, #0x478
   16c5c:	br	x17

0000000000016c60 <rl_vi_prev_word@plt>:
   16c60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c64:	ldr	x17, [x16, #1152]
   16c68:	add	x16, x16, #0x480
   16c6c:	br	x17

0000000000016c70 <rl_yank@plt>:
   16c70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c74:	ldr	x17, [x16, #1160]
   16c78:	add	x16, x16, #0x488
   16c7c:	br	x17

0000000000016c80 <tgetent@plt>:
   16c80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c84:	ldr	x17, [x16, #1168]
   16c88:	add	x16, x16, #0x490
   16c8c:	br	x17

0000000000016c90 <_rl_find_prev_mbchar_internal@plt>:
   16c90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16c94:	ldr	x17, [x16, #1176]
   16c98:	add	x16, x16, #0x498
   16c9c:	br	x17

0000000000016ca0 <_rl_vi_domove_callback@plt>:
   16ca0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ca4:	ldr	x17, [x16, #1184]
   16ca8:	add	x16, x16, #0x4a0
   16cac:	br	x17

0000000000016cb0 <rl_kill_text@plt>:
   16cb0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16cb4:	ldr	x17, [x16, #1192]
   16cb8:	add	x16, x16, #0x4a8
   16cbc:	br	x17

0000000000016cc0 <history_get@plt>:
   16cc0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16cc4:	ldr	x17, [x16, #1200]
   16cc8:	add	x16, x16, #0x4b0
   16ccc:	br	x17

0000000000016cd0 <_rl_input_queued@plt>:
   16cd0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16cd4:	ldr	x17, [x16, #1208]
   16cd8:	add	x16, x16, #0x4b8
   16cdc:	br	x17

0000000000016ce0 <pselect@plt>:
   16ce0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ce4:	ldr	x17, [x16, #1216]
   16ce8:	add	x16, x16, #0x4c0
   16cec:	br	x17

0000000000016cf0 <_rl_read_mbchar@plt>:
   16cf0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16cf4:	ldr	x17, [x16, #1224]
   16cf8:	add	x16, x16, #0x4c8
   16cfc:	br	x17

0000000000016d00 <previous_history@plt>:
   16d00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d04:	ldr	x17, [x16, #1232]
   16d08:	add	x16, x16, #0x4d0
   16d0c:	br	x17

0000000000016d10 <_rl_output_some_chars@plt>:
   16d10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d14:	ldr	x17, [x16, #1240]
   16d18:	add	x16, x16, #0x4d8
   16d1c:	br	x17

0000000000016d20 <_rl_control_keypad@plt>:
   16d20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d24:	ldr	x17, [x16, #1248]
   16d28:	add	x16, x16, #0x4e0
   16d2c:	br	x17

0000000000016d30 <_rl_walphabetic@plt>:
   16d30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d34:	ldr	x17, [x16, #1256]
   16d38:	add	x16, x16, #0x4e8
   16d3c:	br	x17

0000000000016d40 <_rl_insert_char@plt>:
   16d40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d44:	ldr	x17, [x16, #1264]
   16d48:	add	x16, x16, #0x4f0
   16d4c:	br	x17

0000000000016d50 <tgetnum@plt>:
   16d50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d54:	ldr	x17, [x16, #1272]
   16d58:	add	x16, x16, #0x4f8
   16d5c:	br	x17

0000000000016d60 <_rl_with_macro_input@plt>:
   16d60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d64:	ldr	x17, [x16, #1280]
   16d68:	add	x16, x16, #0x500
   16d6c:	br	x17

0000000000016d70 <bcmp@plt>:
   16d70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d74:	ldr	x17, [x16, #1288]
   16d78:	add	x16, x16, #0x508
   16d7c:	br	x17

0000000000016d80 <strcasecmp@plt>:
   16d80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d84:	ldr	x17, [x16, #1296]
   16d88:	add	x16, x16, #0x510
   16d8c:	br	x17

0000000000016d90 <readdir@plt>:
   16d90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16d94:	ldr	x17, [x16, #1304]
   16d98:	add	x16, x16, #0x518
   16d9c:	br	x17

0000000000016da0 <realloc@plt>:
   16da0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16da4:	ldr	x17, [x16, #1312]
   16da8:	add	x16, x16, #0x520
   16dac:	br	x17

0000000000016db0 <rl_expand_prompt@plt>:
   16db0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16db4:	ldr	x17, [x16, #1320]
   16db8:	add	x16, x16, #0x528
   16dbc:	br	x17

0000000000016dc0 <__ctype_toupper_loc@plt>:
   16dc0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16dc4:	ldr	x17, [x16, #1328]
   16dc8:	add	x16, x16, #0x530
   16dcc:	br	x17

0000000000016dd0 <rl_maybe_unsave_line@plt>:
   16dd0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16dd4:	ldr	x17, [x16, #1336]
   16dd8:	add	x16, x16, #0x538
   16ddc:	br	x17

0000000000016de0 <_hs_replace_history_data@plt>:
   16de0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16de4:	ldr	x17, [x16, #1344]
   16de8:	add	x16, x16, #0x540
   16dec:	br	x17

0000000000016df0 <rl_undo_command@plt>:
   16df0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16df4:	ldr	x17, [x16, #1352]
   16df8:	add	x16, x16, #0x548
   16dfc:	br	x17

0000000000016e00 <setpwent@plt>:
   16e00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e04:	ldr	x17, [x16, #1360]
   16e08:	add	x16, x16, #0x550
   16e0c:	br	x17

0000000000016e10 <_rl_vi_domove_motion_cleanup@plt>:
   16e10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e14:	ldr	x17, [x16, #1368]
   16e18:	add	x16, x16, #0x558
   16e1c:	br	x17

0000000000016e20 <rl_call_last_kbd_macro@plt>:
   16e20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e24:	ldr	x17, [x16, #1376]
   16e28:	add	x16, x16, #0x560
   16e2c:	br	x17

0000000000016e30 <rl_extend_line_buffer@plt>:
   16e30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e34:	ldr	x17, [x16, #1384]
   16e38:	add	x16, x16, #0x568
   16e3c:	br	x17

0000000000016e40 <closedir@plt>:
   16e40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e44:	ldr	x17, [x16, #1392]
   16e48:	add	x16, x16, #0x570
   16e4c:	br	x17

0000000000016e50 <rl_message@plt>:
   16e50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e54:	ldr	x17, [x16, #1400]
   16e58:	add	x16, x16, #0x578
   16e5c:	br	x17

0000000000016e60 <rl_read_key@plt>:
   16e60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e64:	ldr	x17, [x16, #1408]
   16e68:	add	x16, x16, #0x580
   16e6c:	br	x17

0000000000016e70 <rl_set_signals@plt>:
   16e70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e74:	ldr	x17, [x16, #1416]
   16e78:	add	x16, x16, #0x588
   16e7c:	br	x17

0000000000016e80 <sh_set_lines_and_columns@plt>:
   16e80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e84:	ldr	x17, [x16, #1424]
   16e88:	add	x16, x16, #0x590
   16e8c:	br	x17

0000000000016e90 <close@plt>:
   16e90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16e94:	ldr	x17, [x16, #1432]
   16e98:	add	x16, x16, #0x598
   16e9c:	br	x17

0000000000016ea0 <rl_unix_word_rubout@plt>:
   16ea0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ea4:	ldr	x17, [x16, #1440]
   16ea8:	add	x16, x16, #0x5a0
   16eac:	br	x17

0000000000016eb0 <rl_vi_append_mode@plt>:
   16eb0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16eb4:	ldr	x17, [x16, #1448]
   16eb8:	add	x16, x16, #0x5a8
   16ebc:	br	x17

0000000000016ec0 <sigaction@plt>:
   16ec0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ec4:	ldr	x17, [x16, #1456]
   16ec8:	add	x16, x16, #0x5b0
   16ecc:	br	x17

0000000000016ed0 <_rl_overwrite_char@plt>:
   16ed0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ed4:	ldr	x17, [x16, #1464]
   16ed8:	add	x16, x16, #0x5b8
   16edc:	br	x17

0000000000016ee0 <strrchr@plt>:
   16ee0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ee4:	ldr	x17, [x16, #1472]
   16ee8:	add	x16, x16, #0x5c0
   16eec:	br	x17

0000000000016ef0 <_rl_update_final@plt>:
   16ef0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ef4:	ldr	x17, [x16, #1480]
   16ef8:	add	x16, x16, #0x5c8
   16efc:	br	x17

0000000000016f00 <_rl_scxt_dispose@plt>:
   16f00:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f04:	ldr	x17, [x16, #1488]
   16f08:	add	x16, x16, #0x5d0
   16f0c:	br	x17

0000000000016f10 <_rl_print_color_indicator@plt>:
   16f10:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f14:	ldr	x17, [x16, #1496]
   16f18:	add	x16, x16, #0x5d8
   16f1c:	br	x17

0000000000016f20 <__gmon_start__@plt>:
   16f20:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f24:	ldr	x17, [x16, #1504]
   16f28:	add	x16, x16, #0x5e0
   16f2c:	br	x17

0000000000016f30 <write@plt>:
   16f30:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f34:	ldr	x17, [x16, #1512]
   16f38:	add	x16, x16, #0x5e8
   16f3c:	br	x17

0000000000016f40 <rl_menu_complete@plt>:
   16f40:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f44:	ldr	x17, [x16, #1520]
   16f48:	add	x16, x16, #0x5f0
   16f4c:	br	x17

0000000000016f50 <abort@plt>:
   16f50:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f54:	ldr	x17, [x16, #1528]
   16f58:	add	x16, x16, #0x5f8
   16f5c:	br	x17

0000000000016f60 <history_search_prefix@plt>:
   16f60:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f64:	ldr	x17, [x16, #1536]
   16f68:	add	x16, x16, #0x600
   16f6c:	br	x17

0000000000016f70 <rl_backward_char@plt>:
   16f70:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f74:	ldr	x17, [x16, #1544]
   16f78:	add	x16, x16, #0x608
   16f7c:	br	x17

0000000000016f80 <_rl_pop_executing_macro@plt>:
   16f80:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f84:	ldr	x17, [x16, #1552]
   16f88:	add	x16, x16, #0x610
   16f8c:	br	x17

0000000000016f90 <rl_do_undo@plt>:
   16f90:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16f94:	ldr	x17, [x16, #1560]
   16f98:	add	x16, x16, #0x618
   16f9c:	br	x17

0000000000016fa0 <_rl_peek_macro_key@plt>:
   16fa0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16fa4:	ldr	x17, [x16, #1568]
   16fa8:	add	x16, x16, #0x620
   16fac:	br	x17

0000000000016fb0 <history_list@plt>:
   16fb0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16fb4:	ldr	x17, [x16, #1576]
   16fb8:	add	x16, x16, #0x628
   16fbc:	br	x17

0000000000016fc0 <_rl_bracketed_text@plt>:
   16fc0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16fc4:	ldr	x17, [x16, #1584]
   16fc8:	add	x16, x16, #0x630
   16fcc:	br	x17

0000000000016fd0 <rl_restart_output@plt>:
   16fd0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16fd4:	ldr	x17, [x16, #1592]
   16fd8:	add	x16, x16, #0x638
   16fdc:	br	x17

0000000000016fe0 <access@plt>:
   16fe0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16fe4:	ldr	x17, [x16, #1600]
   16fe8:	add	x16, x16, #0x640
   16fec:	br	x17

0000000000016ff0 <sh_single_quote@plt>:
   16ff0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   16ff4:	ldr	x17, [x16, #1608]
   16ff8:	add	x16, x16, #0x648
   16ffc:	br	x17

0000000000017000 <__mbrlen@plt>:
   17000:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17004:	ldr	x17, [x16, #1616]
   17008:	add	x16, x16, #0x650
   1700c:	br	x17

0000000000017010 <_rl_init_eightbit@plt>:
   17010:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17014:	ldr	x17, [x16, #1624]
   17018:	add	x16, x16, #0x658
   1701c:	br	x17

0000000000017020 <_rl_get_screen_size@plt>:
   17020:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17024:	ldr	x17, [x16, #1632]
   17028:	add	x16, x16, #0x660
   1702c:	br	x17

0000000000017030 <rl_get_previous_history@plt>:
   17030:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17034:	ldr	x17, [x16, #1640]
   17038:	add	x16, x16, #0x668
   1703c:	br	x17

0000000000017040 <history_search@plt>:
   17040:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17044:	ldr	x17, [x16, #1648]
   17048:	add	x16, x16, #0x670
   1704c:	br	x17

0000000000017050 <rl_translate_keyseq@plt>:
   17050:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17054:	ldr	x17, [x16, #1656]
   17058:	add	x16, x16, #0x678
   1705c:	br	x17

0000000000017060 <rl_set_prompt@plt>:
   17060:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17064:	ldr	x17, [x16, #1664]
   17068:	add	x16, x16, #0x680
   1706c:	br	x17

0000000000017070 <rl_bind_keyseq_if_unbound_in_map@plt>:
   17070:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17074:	ldr	x17, [x16, #1672]
   17078:	add	x16, x16, #0x688
   1707c:	br	x17

0000000000017080 <_hs_append_history_line@plt>:
   17080:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17084:	ldr	x17, [x16, #1680]
   17088:	add	x16, x16, #0x690
   1708c:	br	x17

0000000000017090 <_rl_overwrite_rubout@plt>:
   17090:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17094:	ldr	x17, [x16, #1688]
   17098:	add	x16, x16, #0x698
   1709c:	br	x17

00000000000170a0 <strcmp@plt>:
   170a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170a4:	ldr	x17, [x16, #1696]
   170a8:	add	x16, x16, #0x6a0
   170ac:	br	x17

00000000000170b0 <getpwuid@plt>:
   170b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170b4:	ldr	x17, [x16, #1704]
   170b8:	add	x16, x16, #0x6a8
   170bc:	br	x17

00000000000170c0 <using_history@plt>:
   170c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170c4:	ldr	x17, [x16, #1712]
   170c8:	add	x16, x16, #0x6b0
   170cc:	br	x17

00000000000170d0 <rl_end_of_line@plt>:
   170d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170d4:	ldr	x17, [x16, #1720]
   170d8:	add	x16, x16, #0x6b8
   170dc:	br	x17

00000000000170e0 <rl_vi_insert_mode@plt>:
   170e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170e4:	ldr	x17, [x16, #1728]
   170e8:	add	x16, x16, #0x6c0
   170ec:	br	x17

00000000000170f0 <readline_internal_char@plt>:
   170f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   170f4:	ldr	x17, [x16, #1736]
   170f8:	add	x16, x16, #0x6c8
   170fc:	br	x17

0000000000017100 <__ctype_b_loc@plt>:
   17100:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17104:	ldr	x17, [x16, #1744]
   17108:	add	x16, x16, #0x6d0
   1710c:	br	x17

0000000000017110 <rl_bind_key_in_map@plt>:
   17110:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17114:	ldr	x17, [x16, #1752]
   17118:	add	x16, x16, #0x6d8
   1711c:	br	x17

0000000000017120 <_rl_print_prefix_color@plt>:
   17120:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17124:	ldr	x17, [x16, #1760]
   17128:	add	x16, x16, #0x6e0
   1712c:	br	x17

0000000000017130 <strtol@plt>:
   17130:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17134:	ldr	x17, [x16, #1768]
   17138:	add	x16, x16, #0x6e8
   1713c:	br	x17

0000000000017140 <rl_empty_keymap@plt>:
   17140:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17144:	ldr	x17, [x16, #1776]
   17148:	add	x16, x16, #0x6f0
   1714c:	br	x17

0000000000017150 <_rl_strindex@plt>:
   17150:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17154:	ldr	x17, [x16, #1784]
   17158:	add	x16, x16, #0x6f8
   1715c:	br	x17

0000000000017160 <rl_add_funmap_entry@plt>:
   17160:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17164:	ldr	x17, [x16, #1792]
   17168:	add	x16, x16, #0x700
   1716c:	br	x17

0000000000017170 <_rl_adjust_point@plt>:
   17170:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17174:	ldr	x17, [x16, #1800]
   17178:	add	x16, x16, #0x708
   1717c:	br	x17

0000000000017180 <readline_internal_setup@plt>:
   17180:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17184:	ldr	x17, [x16, #1808]
   17188:	add	x16, x16, #0x710
   1718c:	br	x17

0000000000017190 <_rl_vi_set_last@plt>:
   17190:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17194:	ldr	x17, [x16, #1816]
   17198:	add	x16, x16, #0x718
   1719c:	br	x17

00000000000171a0 <rl_vi_bWord@plt>:
   171a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171a4:	ldr	x17, [x16, #1824]
   171a8:	add	x16, x16, #0x720
   171ac:	br	x17

00000000000171b0 <free@plt>:
   171b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171b4:	ldr	x17, [x16, #1832]
   171b8:	add	x16, x16, #0x728
   171bc:	br	x17

00000000000171c0 <rl_delete_text@plt>:
   171c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171c4:	ldr	x17, [x16, #1840]
   171c8:	add	x16, x16, #0x730
   171cc:	br	x17

00000000000171d0 <rl_modifying@plt>:
   171d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171d4:	ldr	x17, [x16, #1848]
   171d8:	add	x16, x16, #0x738
   171dc:	br	x17

00000000000171e0 <rl_crlf@plt>:
   171e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171e4:	ldr	x17, [x16, #1856]
   171e8:	add	x16, x16, #0x740
   171ec:	br	x17

00000000000171f0 <__ctype_get_mb_cur_max@plt>:
   171f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   171f4:	ldr	x17, [x16, #1864]
   171f8:	add	x16, x16, #0x748
   171fc:	br	x17

0000000000017200 <_rl_ttymsg@plt>:
   17200:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17204:	ldr	x17, [x16, #1872]
   17208:	add	x16, x16, #0x750
   1720c:	br	x17

0000000000017210 <_rl_init_locale@plt>:
   17210:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17214:	ldr	x17, [x16, #1880]
   17218:	add	x16, x16, #0x758
   1721c:	br	x17

0000000000017220 <rl_stuff_char@plt>:
   17220:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17224:	ldr	x17, [x16, #1888]
   17228:	add	x16, x16, #0x760
   1722c:	br	x17

0000000000017230 <rl_yank_nth_arg@plt>:
   17230:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17234:	ldr	x17, [x16, #1896]
   17238:	add	x16, x16, #0x768
   1723c:	br	x17

0000000000017240 <_rl_release_sigint@plt>:
   17240:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17244:	ldr	x17, [x16, #1904]
   17248:	add	x16, x16, #0x770
   1724c:	br	x17

0000000000017250 <_rl_backward_char_internal@plt>:
   17250:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17254:	ldr	x17, [x16, #1912]
   17258:	add	x16, x16, #0x778
   1725c:	br	x17

0000000000017260 <sh_get_home_dir@plt>:
   17260:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17264:	ldr	x17, [x16, #1920]
   17268:	add	x16, x16, #0x780
   1726c:	br	x17

0000000000017270 <rl_untranslate_keyseq@plt>:
   17270:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17274:	ldr	x17, [x16, #1928]
   17278:	add	x16, x16, #0x788
   1727c:	br	x17

0000000000017280 <rl_username_completion_function@plt>:
   17280:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17284:	ldr	x17, [x16, #1936]
   17288:	add	x16, x16, #0x790
   1728c:	br	x17

0000000000017290 <_rl_pushed_input_available@plt>:
   17290:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17294:	ldr	x17, [x16, #1944]
   17298:	add	x16, x16, #0x798
   1729c:	br	x17

00000000000172a0 <rl_on_new_line@plt>:
   172a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172a4:	ldr	x17, [x16, #1952]
   172a8:	add	x16, x16, #0x7a0
   172ac:	br	x17

00000000000172b0 <rl_vi_fWord@plt>:
   172b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172b4:	ldr	x17, [x16, #1960]
   172b8:	add	x16, x16, #0x7a8
   172bc:	br	x17

00000000000172c0 <rl_character_len@plt>:
   172c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172c4:	ldr	x17, [x16, #1968]
   172c8:	add	x16, x16, #0x7b0
   172cc:	br	x17

00000000000172d0 <strncasecmp@plt>:
   172d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172d4:	ldr	x17, [x16, #1976]
   172d8:	add	x16, x16, #0x7b8
   172dc:	br	x17

00000000000172e0 <rl_vi_change_to@plt>:
   172e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172e4:	ldr	x17, [x16, #1984]
   172e8:	add	x16, x16, #0x7c0
   172ec:	br	x17

00000000000172f0 <siglongjmp@plt>:
   172f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   172f4:	ldr	x17, [x16, #1992]
   172f8:	add	x16, x16, #0x7c8
   172fc:	br	x17

0000000000017300 <_rl_redisplay_after_sigwinch@plt>:
   17300:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17304:	ldr	x17, [x16, #2000]
   17308:	add	x16, x16, #0x7d0
   1730c:	br	x17

0000000000017310 <rl_function_dumper@plt>:
   17310:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17314:	ldr	x17, [x16, #2008]
   17318:	add	x16, x16, #0x7d8
   1731c:	br	x17

0000000000017320 <rl_set_keymap_from_edit_mode@plt>:
   17320:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17324:	ldr	x17, [x16, #2016]
   17328:	add	x16, x16, #0x7e0
   1732c:	br	x17

0000000000017330 <rl_get_next_history@plt>:
   17330:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17334:	ldr	x17, [x16, #2024]
   17338:	add	x16, x16, #0x7e8
   1733c:	br	x17

0000000000017340 <_rl_enable_meta_key@plt>:
   17340:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17344:	ldr	x17, [x16, #2032]
   17348:	add	x16, x16, #0x7f0
   1734c:	br	x17

0000000000017350 <rl_on_new_line_with_prompt@plt>:
   17350:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17354:	ldr	x17, [x16, #2040]
   17358:	add	x16, x16, #0x7f8
   1735c:	br	x17

0000000000017360 <_rl_compare_chars@plt>:
   17360:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17364:	ldr	x17, [x16, #2048]
   17368:	add	x16, x16, #0x800
   1736c:	br	x17

0000000000017370 <rl_initialize@plt>:
   17370:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17374:	ldr	x17, [x16, #2056]
   17378:	add	x16, x16, #0x808
   1737c:	br	x17

0000000000017380 <strchr@plt>:
   17380:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17384:	ldr	x17, [x16, #2064]
   17388:	add	x16, x16, #0x810
   1738c:	br	x17

0000000000017390 <rl_ding@plt>:
   17390:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17394:	ldr	x17, [x16, #2072]
   17398:	add	x16, x16, #0x818
   1739c:	br	x17

00000000000173a0 <history_set_pos@plt>:
   173a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173a4:	ldr	x17, [x16, #2080]
   173a8:	add	x16, x16, #0x820
   173ac:	br	x17

00000000000173b0 <_rl_init_line_state@plt>:
   173b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173b4:	ldr	x17, [x16, #2088]
   173b8:	add	x16, x16, #0x828
   173bc:	br	x17

00000000000173c0 <rename@plt>:
   173c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173c4:	ldr	x17, [x16, #2096]
   173c8:	add	x16, x16, #0x830
   173cc:	br	x17

00000000000173d0 <_rl_find_completion_word@plt>:
   173d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173d4:	ldr	x17, [x16, #2104]
   173d8:	add	x16, x16, #0x838
   173dc:	br	x17

00000000000173e0 <fwrite@plt>:
   173e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173e4:	ldr	x17, [x16, #2112]
   173e8:	add	x16, x16, #0x840
   173ec:	br	x17

00000000000173f0 <rl_restore_prompt@plt>:
   173f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   173f4:	ldr	x17, [x16, #2120]
   173f8:	add	x16, x16, #0x848
   173fc:	br	x17

0000000000017400 <fnmatch@plt>:
   17400:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17404:	ldr	x17, [x16, #2128]
   17408:	add	x16, x16, #0x850
   1740c:	br	x17

0000000000017410 <fcntl@plt>:
   17410:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17414:	ldr	x17, [x16, #2136]
   17418:	add	x16, x16, #0x858
   1741c:	br	x17

0000000000017420 <rl_clear_message@plt>:
   17420:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17424:	ldr	x17, [x16, #2144]
   17428:	add	x16, x16, #0x860
   1742c:	br	x17

0000000000017430 <fflush@plt>:
   17430:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17434:	ldr	x17, [x16, #2152]
   17438:	add	x16, x16, #0x868
   1743c:	br	x17

0000000000017440 <_rl_dispatch_subseq@plt>:
   17440:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17444:	ldr	x17, [x16, #2160]
   17448:	add	x16, x16, #0x870
   1744c:	br	x17

0000000000017450 <rl_make_bare_keymap@plt>:
   17450:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17454:	ldr	x17, [x16, #2168]
   17458:	add	x16, x16, #0x878
   1745c:	br	x17

0000000000017460 <_rl_signal_handler@plt>:
   17460:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17464:	ldr	x17, [x16, #2176]
   17468:	add	x16, x16, #0x880
   1746c:	br	x17

0000000000017470 <_rl_disable_tty_signals@plt>:
   17470:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17474:	ldr	x17, [x16, #2184]
   17478:	add	x16, x16, #0x888
   1747c:	br	x17

0000000000017480 <strcpy@plt>:
   17480:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17484:	ldr	x17, [x16, #2192]
   17488:	add	x16, x16, #0x890
   1748c:	br	x17

0000000000017490 <_rl_vi_initialize_line@plt>:
   17490:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17494:	ldr	x17, [x16, #2200]
   17498:	add	x16, x16, #0x898
   1749c:	br	x17

00000000000174a0 <_rl_abort_internal@plt>:
   174a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174a4:	ldr	x17, [x16, #2208]
   174a8:	add	x16, x16, #0x8a0
   174ac:	br	x17

00000000000174b0 <_rl_get_char_len@plt>:
   174b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174b4:	ldr	x17, [x16, #2216]
   174b8:	add	x16, x16, #0x8a8
   174bc:	br	x17

00000000000174c0 <endpwent@plt>:
   174c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174c4:	ldr	x17, [x16, #2224]
   174c8:	add	x16, x16, #0x8b0
   174cc:	br	x17

00000000000174d0 <_rl_search_getchar@plt>:
   174d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174d4:	ldr	x17, [x16, #2232]
   174d8:	add	x16, x16, #0x8b8
   174dc:	br	x17

00000000000174e0 <__lxstat@plt>:
   174e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174e4:	ldr	x17, [x16, #2240]
   174e8:	add	x16, x16, #0x8c0
   174ec:	br	x17

00000000000174f0 <_rl_isearch_callback@plt>:
   174f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   174f4:	ldr	x17, [x16, #2248]
   174f8:	add	x16, x16, #0x8c8
   174fc:	br	x17

0000000000017500 <_rl_reset_argument@plt>:
   17500:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17504:	ldr	x17, [x16, #2256]
   17508:	add	x16, x16, #0x8d0
   1750c:	br	x17

0000000000017510 <rl_redraw_prompt_last_line@plt>:
   17510:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17514:	ldr	x17, [x16, #2264]
   17518:	add	x16, x16, #0x8d8
   1751c:	br	x17

0000000000017520 <read@plt>:
   17520:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17524:	ldr	x17, [x16, #2272]
   17528:	add	x16, x16, #0x8e0
   1752c:	br	x17

0000000000017530 <memchr@plt>:
   17530:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17534:	ldr	x17, [x16, #2280]
   17538:	add	x16, x16, #0x8e8
   1753c:	br	x17

0000000000017540 <rl_vi_rubout@plt>:
   17540:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17544:	ldr	x17, [x16, #2288]
   17548:	add	x16, x16, #0x8f0
   1754c:	br	x17

0000000000017550 <rl_free_undo_list@plt>:
   17550:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17554:	ldr	x17, [x16, #2296]
   17558:	add	x16, x16, #0x8f8
   1755c:	br	x17

0000000000017560 <_rl_disable_meta_key@plt>:
   17560:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17564:	ldr	x17, [x16, #2304]
   17568:	add	x16, x16, #0x900
   1756c:	br	x17

0000000000017570 <tcsetattr@plt>:
   17570:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17574:	ldr	x17, [x16, #2312]
   17578:	add	x16, x16, #0x908
   1757c:	br	x17

0000000000017580 <iswupper@plt>:
   17580:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17584:	ldr	x17, [x16, #2320]
   17588:	add	x16, x16, #0x910
   1758c:	br	x17

0000000000017590 <_rl_put_indicator@plt>:
   17590:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17594:	ldr	x17, [x16, #2328]
   17598:	add	x16, x16, #0x918
   1759c:	br	x17

00000000000175a0 <_rl_char_value@plt>:
   175a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175a4:	ldr	x17, [x16, #2336]
   175a8:	add	x16, x16, #0x920
   175ac:	br	x17

00000000000175b0 <rl_beg_of_line@plt>:
   175b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175b4:	ldr	x17, [x16, #2344]
   175b8:	add	x16, x16, #0x928
   175bc:	br	x17

00000000000175c0 <getpwent@plt>:
   175c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175c4:	ldr	x17, [x16, #2352]
   175c8:	add	x16, x16, #0x930
   175cc:	br	x17

00000000000175d0 <_rl_replace_text@plt>:
   175d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175d4:	ldr	x17, [x16, #2360]
   175d8:	add	x16, x16, #0x938
   175dc:	br	x17

00000000000175e0 <rl_clear_signals@plt>:
   175e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175e4:	ldr	x17, [x16, #2368]
   175e8:	add	x16, x16, #0x940
   175ec:	br	x17

00000000000175f0 <select@plt>:
   175f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   175f4:	ldr	x17, [x16, #2376]
   175f8:	add	x16, x16, #0x948
   175fc:	br	x17

0000000000017600 <rl_replace_line@plt>:
   17600:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17604:	ldr	x17, [x16, #2384]
   17608:	add	x16, x16, #0x950
   1760c:	br	x17

0000000000017610 <tgetstr@plt>:
   17610:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17614:	ldr	x17, [x16, #2392]
   17618:	add	x16, x16, #0x958
   1761c:	br	x17

0000000000017620 <rl_vi_delete@plt>:
   17620:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17624:	ldr	x17, [x16, #2400]
   17628:	add	x16, x16, #0x960
   1762c:	br	x17

0000000000017630 <iswalnum@plt>:
   17630:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17634:	ldr	x17, [x16, #2408]
   17638:	add	x16, x16, #0x968
   1763c:	br	x17

0000000000017640 <_rl_reset_prompt@plt>:
   17640:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17644:	ldr	x17, [x16, #2416]
   17648:	add	x16, x16, #0x970
   1764c:	br	x17

0000000000017650 <__fxstat@plt>:
   17650:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17654:	ldr	x17, [x16, #2424]
   17658:	add	x16, x16, #0x978
   1765c:	br	x17

0000000000017660 <rl_vi_insertion_mode@plt>:
   17660:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17664:	ldr	x17, [x16, #2432]
   17668:	add	x16, x16, #0x980
   1766c:	br	x17

0000000000017670 <_rl_rubout_char@plt>:
   17670:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17674:	ldr	x17, [x16, #2440]
   17678:	add	x16, x16, #0x988
   1767c:	br	x17

0000000000017680 <history_arg_extract@plt>:
   17680:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17684:	ldr	x17, [x16, #2448]
   17688:	add	x16, x16, #0x990
   1768c:	br	x17

0000000000017690 <vsnprintf@plt>:
   17690:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17694:	ldr	x17, [x16, #2456]
   17698:	add	x16, x16, #0x998
   1769c:	br	x17

00000000000176a0 <_rl_restore_tty_signals@plt>:
   176a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176a4:	ldr	x17, [x16, #2464]
   176a8:	add	x16, x16, #0x9a0
   176ac:	br	x17

00000000000176b0 <rl_possible_completions@plt>:
   176b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176b4:	ldr	x17, [x16, #2472]
   176b8:	add	x16, x16, #0x9a8
   176bc:	br	x17

00000000000176c0 <_rl_errmsg@plt>:
   176c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176c4:	ldr	x17, [x16, #2480]
   176c8:	add	x16, x16, #0x9b0
   176cc:	br	x17

00000000000176d0 <_rl_move_vert@plt>:
   176d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176d4:	ldr	x17, [x16, #2488]
   176d8:	add	x16, x16, #0x9b8
   176dc:	br	x17

00000000000176e0 <strcoll@plt>:
   176e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176e4:	ldr	x17, [x16, #2496]
   176e8:	add	x16, x16, #0x9c0
   176ec:	br	x17

00000000000176f0 <tilde_expand@plt>:
   176f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   176f4:	ldr	x17, [x16, #2504]
   176f8:	add	x16, x16, #0x9c8
   176fc:	br	x17

0000000000017700 <_rl_callback_data_alloc@plt>:
   17700:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17704:	ldr	x17, [x16, #2512]
   17708:	add	x16, x16, #0x9d0
   1770c:	br	x17

0000000000017710 <sigdelset@plt>:
   17710:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17714:	ldr	x17, [x16, #2520]
   17718:	add	x16, x16, #0x9d8
   1771c:	br	x17

0000000000017720 <rl_beginning_of_history@plt>:
   17720:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17724:	ldr	x17, [x16, #2528]
   17728:	add	x16, x16, #0x9e0
   1772c:	br	x17

0000000000017730 <strncpy@plt>:
   17730:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17734:	ldr	x17, [x16, #2536]
   17738:	add	x16, x16, #0x9e8
   1773c:	br	x17

0000000000017740 <sh_unset_nodelay_mode@plt>:
   17740:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17744:	ldr	x17, [x16, #2544]
   17748:	add	x16, x16, #0x9f0
   1774c:	br	x17

0000000000017750 <sigaddset@plt>:
   17750:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17754:	ldr	x17, [x16, #2552]
   17758:	add	x16, x16, #0x9f8
   1775c:	br	x17

0000000000017760 <_rl_vi_done_inserting@plt>:
   17760:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17764:	ldr	x17, [x16, #2560]
   17768:	add	x16, x16, #0xa00
   1776c:	br	x17

0000000000017770 <towupper@plt>:
   17770:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17774:	ldr	x17, [x16, #2568]
   17778:	add	x16, x16, #0xa08
   1777c:	br	x17

0000000000017780 <rl_save_prompt@plt>:
   17780:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17784:	ldr	x17, [x16, #2576]
   17788:	add	x16, x16, #0xa10
   1778c:	br	x17

0000000000017790 <unstifle_history@plt>:
   17790:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17794:	ldr	x17, [x16, #2584]
   17798:	add	x16, x16, #0xa18
   1779c:	br	x17

00000000000177a0 <_rl_set_mark_at_pos@plt>:
   177a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177a4:	ldr	x17, [x16, #2592]
   177a8:	add	x16, x16, #0xa20
   177ac:	br	x17

00000000000177b0 <rl_kill_word@plt>:
   177b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177b4:	ldr	x17, [x16, #2600]
   177b8:	add	x16, x16, #0xa28
   177bc:	br	x17

00000000000177c0 <vfprintf@plt>:
   177c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177c4:	ldr	x17, [x16, #2608]
   177c8:	add	x16, x16, #0xa30
   177cc:	br	x17

00000000000177d0 <printf@plt>:
   177d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177d4:	ldr	x17, [x16, #2616]
   177d8:	add	x16, x16, #0xa38
   177dc:	br	x17

00000000000177e0 <rl_copy_forward_word@plt>:
   177e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177e4:	ldr	x17, [x16, #2624]
   177e8:	add	x16, x16, #0xa40
   177ec:	br	x17

00000000000177f0 <__errno_location@plt>:
   177f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   177f4:	ldr	x17, [x16, #2632]
   177f8:	add	x16, x16, #0xa48
   177fc:	br	x17

0000000000017800 <_rl_free_saved_history_line@plt>:
   17800:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17804:	ldr	x17, [x16, #2640]
   17808:	add	x16, x16, #0xa50
   1780c:	br	x17

0000000000017810 <_rl_arg_dispatch@plt>:
   17810:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17814:	ldr	x17, [x16, #2648]
   17818:	add	x16, x16, #0xa58
   1781c:	br	x17

0000000000017820 <rl_bind_keyseq_in_map@plt>:
   17820:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17824:	ldr	x17, [x16, #2656]
   17828:	add	x16, x16, #0xa60
   1782c:	br	x17

0000000000017830 <rl_end_undo_group@plt>:
   17830:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17834:	ldr	x17, [x16, #2664]
   17838:	add	x16, x16, #0xa68
   1783c:	br	x17

0000000000017840 <getenv@plt>:
   17840:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17844:	ldr	x17, [x16, #2672]
   17848:	add	x16, x16, #0xa70
   1784c:	br	x17

0000000000017850 <__xstat@plt>:
   17850:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17854:	ldr	x17, [x16, #2680]
   17858:	add	x16, x16, #0xa78
   1785c:	br	x17

0000000000017860 <rl_callback_read_char@plt>:
   17860:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17864:	ldr	x17, [x16, #2688]
   17868:	add	x16, x16, #0xa80
   1786c:	br	x17

0000000000017870 <_rl_vi_textmod_command@plt>:
   17870:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17874:	ldr	x17, [x16, #2696]
   17878:	add	x16, x16, #0xa88
   1787c:	br	x17

0000000000017880 <chown@plt>:
   17880:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17884:	ldr	x17, [x16, #2704]
   17888:	add	x16, x16, #0xa90
   1788c:	br	x17

0000000000017890 <rl_invoking_keyseqs_in_map@plt>:
   17890:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17894:	ldr	x17, [x16, #2712]
   17898:	add	x16, x16, #0xa98
   1789c:	br	x17

00000000000178a0 <rl_display_match_list@plt>:
   178a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178a4:	ldr	x17, [x16, #2720]
   178a8:	add	x16, x16, #0xaa0
   178ac:	br	x17

00000000000178b0 <rl_noninc_reverse_search@plt>:
   178b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178b4:	ldr	x17, [x16, #2728]
   178b8:	add	x16, x16, #0xaa8
   178bc:	br	x17

00000000000178c0 <_rl_reset_completion_state@plt>:
   178c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178c4:	ldr	x17, [x16, #2736]
   178c8:	add	x16, x16, #0xab0
   178cc:	br	x17

00000000000178d0 <rl_maybe_save_line@plt>:
   178d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178d4:	ldr	x17, [x16, #2744]
   178d8:	add	x16, x16, #0xab8
   178dc:	br	x17

00000000000178e0 <rl_copy_text@plt>:
   178e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178e4:	ldr	x17, [x16, #2752]
   178e8:	add	x16, x16, #0xac0
   178ec:	br	x17

00000000000178f0 <_rl_forward_char_internal@plt>:
   178f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   178f4:	ldr	x17, [x16, #2760]
   178f8:	add	x16, x16, #0xac8
   178fc:	br	x17

0000000000017900 <_rl_dispatch_callback@plt>:
   17900:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17904:	ldr	x17, [x16, #2768]
   17908:	add	x16, x16, #0xad0
   1790c:	br	x17

0000000000017910 <unlink@plt>:
   17910:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17914:	ldr	x17, [x16, #2776]
   17918:	add	x16, x16, #0xad8
   1791c:	br	x17

0000000000017920 <replace_history_entry@plt>:
   17920:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17924:	ldr	x17, [x16, #2784]
   17928:	add	x16, x16, #0xae0
   1792c:	br	x17

0000000000017930 <_rl_enable_paren_matching@plt>:
   17930:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17934:	ldr	x17, [x16, #2792]
   17938:	add	x16, x16, #0xae8
   1793c:	br	x17

0000000000017940 <towlower@plt>:
   17940:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17944:	ldr	x17, [x16, #2800]
   17948:	add	x16, x16, #0xaf0
   1794c:	br	x17

0000000000017950 <fprintf@plt>:
   17950:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17954:	ldr	x17, [x16, #2808]
   17958:	add	x16, x16, #0xaf8
   1795c:	br	x17

0000000000017960 <rl_maybe_replace_line@plt>:
   17960:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17964:	ldr	x17, [x16, #2816]
   17968:	add	x16, x16, #0xb00
   1796c:	br	x17

0000000000017970 <_rl_vi_reset_last@plt>:
   17970:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17974:	ldr	x17, [x16, #2824]
   17978:	add	x16, x16, #0xb08
   1797c:	br	x17

0000000000017980 <tcflow@plt>:
   17980:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17984:	ldr	x17, [x16, #2832]
   17988:	add	x16, x16, #0xb10
   1798c:	br	x17

0000000000017990 <ioctl@plt>:
   17990:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   17994:	ldr	x17, [x16, #2840]
   17998:	add	x16, x16, #0xb18
   1799c:	br	x17

00000000000179a0 <setlocale@plt>:
   179a0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179a4:	ldr	x17, [x16, #2848]
   179a8:	add	x16, x16, #0xb20
   179ac:	br	x17

00000000000179b0 <rl_resize_terminal@plt>:
   179b0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179b4:	ldr	x17, [x16, #2856]
   179b8:	add	x16, x16, #0xb28
   179bc:	br	x17

00000000000179c0 <_rl_clear_to_eol@plt>:
   179c0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179c4:	ldr	x17, [x16, #2864]
   179c8:	add	x16, x16, #0xb30
   179cc:	br	x17

00000000000179d0 <wcrtomb@plt>:
   179d0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179d4:	ldr	x17, [x16, #2872]
   179d8:	add	x16, x16, #0xb38
   179dc:	br	x17

00000000000179e0 <next_history@plt>:
   179e0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179e4:	ldr	x17, [x16, #2880]
   179e8:	add	x16, x16, #0xb40
   179ec:	br	x17

00000000000179f0 <iswlower@plt>:
   179f0:	adrp	x16, 52000 <_rl_set_normal_color@@Base+0x14254>
   179f4:	ldr	x17, [x16, #2888]
   179f8:	add	x16, x16, #0xb48
   179fc:	br	x17

Disassembly of section .text:

0000000000017a00 <rl_set_prompt@@Base-0xd4>:
   17a00:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17a04:	ldr	x0, [x0, #2896]
   17a08:	cbz	x0, 17a10 <iswlower@plt+0x20>
   17a0c:	b	16f20 <__gmon_start__@plt>
   17a10:	ret
   17a14:	nop
   17a18:	adrp	x0, 57000 <rl_insert@@Base+0x20abc>
   17a1c:	add	x0, x0, #0xf30
   17a20:	adrp	x1, 57000 <rl_insert@@Base+0x20abc>
   17a24:	add	x1, x1, #0xf30
   17a28:	cmp	x1, x0
   17a2c:	b.eq	17a44 <iswlower@plt+0x54>  // b.none
   17a30:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17a34:	ldr	x1, [x1, #2048]
   17a38:	cbz	x1, 17a44 <iswlower@plt+0x54>
   17a3c:	mov	x16, x1
   17a40:	br	x16
   17a44:	ret
   17a48:	adrp	x0, 57000 <rl_insert@@Base+0x20abc>
   17a4c:	add	x0, x0, #0xf30
   17a50:	adrp	x1, 57000 <rl_insert@@Base+0x20abc>
   17a54:	add	x1, x1, #0xf30
   17a58:	sub	x1, x1, x0
   17a5c:	lsr	x2, x1, #63
   17a60:	add	x1, x2, x1, asr #3
   17a64:	cmp	xzr, x1, asr #1
   17a68:	asr	x1, x1, #1
   17a6c:	b.eq	17a84 <iswlower@plt+0x94>  // b.none
   17a70:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17a74:	ldr	x2, [x2, #3800]
   17a78:	cbz	x2, 17a84 <iswlower@plt+0x94>
   17a7c:	mov	x16, x2
   17a80:	br	x16
   17a84:	ret
   17a88:	stp	x29, x30, [sp, #-32]!
   17a8c:	mov	x29, sp
   17a90:	str	x19, [sp, #16]
   17a94:	adrp	x19, 57000 <rl_insert@@Base+0x20abc>
   17a98:	ldrb	w0, [x19, #3888]
   17a9c:	cbnz	w0, 17ac4 <iswlower@plt+0xd4>
   17aa0:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17aa4:	ldr	x0, [x0, #2184]
   17aa8:	cbz	x0, 17ab8 <iswlower@plt+0xc8>
   17aac:	adrp	x0, 52000 <_rl_set_normal_color@@Base+0x14254>
   17ab0:	ldr	x0, [x0, #2896]
   17ab4:	bl	16640 <__cxa_finalize@plt>
   17ab8:	bl	17a18 <iswlower@plt+0x28>
   17abc:	mov	w0, #0x1                   	// #1
   17ac0:	strb	w0, [x19, #3888]
   17ac4:	ldr	x19, [sp, #16]
   17ac8:	ldp	x29, x30, [sp], #32
   17acc:	ret
   17ad0:	b	17a48 <iswlower@plt+0x58>

0000000000017ad4 <rl_set_prompt@@Base>:
   17ad4:	stp	x29, x30, [sp, #-32]!
   17ad8:	stp	x20, x19, [sp, #16]
   17adc:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ae0:	ldr	x20, [x20, #2016]
   17ae4:	mov	x19, x0
   17ae8:	mov	x29, sp
   17aec:	ldr	x8, [x20]
   17af0:	cbz	x8, 17afc <rl_set_prompt@@Base+0x28>
   17af4:	mov	x0, x8
   17af8:	bl	171b0 <free@plt>
   17afc:	cbz	x19, 17b1c <rl_set_prompt@@Base+0x48>
   17b00:	mov	x0, x19
   17b04:	bl	16440 <strlen@plt>
   17b08:	add	x0, x0, #0x1
   17b0c:	bl	16bf0 <xmalloc@plt>
   17b10:	mov	x1, x19
   17b14:	bl	17480 <strcpy@plt>
   17b18:	b	17b20 <rl_set_prompt@@Base+0x4c>
   17b1c:	mov	x0, xzr
   17b20:	str	x0, [x20]
   17b24:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17b28:	ldr	x9, [x9, #2384]
   17b2c:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   17b30:	add	x8, x8, #0xec9
   17b34:	cmp	x0, #0x0
   17b38:	csel	x8, x8, x0, eq  // eq = none
   17b3c:	str	x8, [x9]
   17b40:	bl	16db0 <rl_expand_prompt@plt>
   17b44:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17b48:	ldr	x8, [x8, #3424]
   17b4c:	ldp	x20, x19, [sp, #16]
   17b50:	str	w0, [x8]
   17b54:	mov	w0, wzr
   17b58:	ldp	x29, x30, [sp], #32
   17b5c:	ret

0000000000017b60 <readline@@Base>:
   17b60:	stp	x29, x30, [sp, #-32]!
   17b64:	stp	x20, x19, [sp, #16]
   17b68:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17b6c:	ldr	x8, [x8, #3328]
   17b70:	mov	x29, sp
   17b74:	ldr	w8, [x8]
   17b78:	cmn	w8, #0x1
   17b7c:	b.eq	17bb8 <readline@@Base+0x58>  // b.none
   17b80:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17b84:	ldr	x20, [x20, #2016]
   17b88:	mov	x19, x0
   17b8c:	ldr	x0, [x20]
   17b90:	cbz	x0, 17b98 <readline@@Base+0x38>
   17b94:	bl	171b0 <free@plt>
   17b98:	cbz	x19, 17bc4 <readline@@Base+0x64>
   17b9c:	mov	x0, x19
   17ba0:	bl	16440 <strlen@plt>
   17ba4:	add	x0, x0, #0x1
   17ba8:	bl	16bf0 <xmalloc@plt>
   17bac:	mov	x1, x19
   17bb0:	bl	17480 <strcpy@plt>
   17bb4:	b	17bc8 <readline@@Base+0x68>
   17bb8:	bl	168b0 <rl_clear_pending_input@plt>
   17bbc:	mov	x19, xzr
   17bc0:	b	17c74 <readline@@Base+0x114>
   17bc4:	mov	x0, xzr
   17bc8:	str	x0, [x20]
   17bcc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17bd0:	ldr	x9, [x9, #2384]
   17bd4:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   17bd8:	add	x8, x8, #0xec9
   17bdc:	cmp	x0, #0x0
   17be0:	csel	x8, x8, x0, eq  // eq = none
   17be4:	str	x8, [x9]
   17be8:	bl	16db0 <rl_expand_prompt@plt>
   17bec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17bf0:	ldr	x8, [x8, #3424]
   17bf4:	str	w0, [x8]
   17bf8:	bl	17370 <rl_initialize@plt>
   17bfc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17c00:	ldr	x8, [x8, #3560]
   17c04:	ldr	x8, [x8]
   17c08:	cbz	x8, 17c1c <readline@@Base+0xbc>
   17c0c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17c10:	ldr	x9, [x9, #3352]
   17c14:	ldr	w0, [x9]
   17c18:	blr	x8
   17c1c:	bl	16e70 <rl_set_signals@plt>
   17c20:	bl	17180 <readline_internal_setup@plt>
   17c24:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17c28:	ldr	x19, [x19, #3296]
   17c2c:	ldr	w8, [x19]
   17c30:	cbz	w8, 17c3c <readline@@Base+0xdc>
   17c34:	mov	w0, #0x1                   	// #1
   17c38:	b	17c48 <readline@@Base+0xe8>
   17c3c:	bl	170f0 <readline_internal_char@plt>
   17c40:	ldr	w8, [x19]
   17c44:	cbz	w8, 17c3c <readline@@Base+0xdc>
   17c48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17c4c:	ldr	x8, [x8, #3920]
   17c50:	str	w0, [x8]
   17c54:	bl	16790 <readline_internal_teardown@plt>
   17c58:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17c5c:	ldr	x8, [x8, #3840]
   17c60:	mov	x19, x0
   17c64:	ldr	x8, [x8]
   17c68:	cbz	x8, 17c70 <readline@@Base+0x110>
   17c6c:	blr	x8
   17c70:	bl	175e0 <rl_clear_signals@plt>
   17c74:	mov	x0, x19
   17c78:	ldp	x20, x19, [sp, #16]
   17c7c:	ldp	x29, x30, [sp], #32
   17c80:	ret

0000000000017c84 <rl_initialize@@Base>:
   17c84:	stp	x29, x30, [sp, #-80]!
   17c88:	stp	x26, x25, [sp, #16]
   17c8c:	stp	x24, x23, [sp, #32]
   17c90:	stp	x22, x21, [sp, #48]
   17c94:	stp	x20, x19, [sp, #64]
   17c98:	adrp	x24, 57000 <rl_insert@@Base+0x20abc>
   17c9c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ca0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ca4:	ldr	w8, [x24, #4092]
   17ca8:	ldr	x22, [x22, #2984]
   17cac:	ldr	x23, [x23, #2480]
   17cb0:	mov	x29, sp
   17cb4:	cbz	w8, 17cc0 <rl_initialize@@Base+0x3c>
   17cb8:	bl	17210 <_rl_init_locale@plt>
   17cbc:	b	17f0c <rl_initialize@@Base+0x288>
   17cc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17cc4:	ldr	x10, [x22]
   17cc8:	ldr	x9, [x9, #3176]
   17ccc:	orr	x10, x10, #0x1
   17cd0:	ldr	x8, [x9]
   17cd4:	str	x10, [x22]
   17cd8:	cbnz	x8, 17cec <rl_initialize@@Base+0x68>
   17cdc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ce0:	ldr	x8, [x8, #2800]
   17ce4:	ldr	x8, [x8]
   17ce8:	str	x8, [x9]
   17cec:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17cf0:	ldr	x10, [x10, #1928]
   17cf4:	ldr	x9, [x10]
   17cf8:	cbnz	x9, 17d0c <rl_initialize@@Base+0x88>
   17cfc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d00:	ldr	x9, [x9, #2544]
   17d04:	ldr	x9, [x9]
   17d08:	str	x9, [x10]
   17d0c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d10:	ldr	x10, [x23]
   17d14:	ldr	x11, [x11, #3312]
   17d18:	str	x8, [x11]
   17d1c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d20:	ldr	x8, [x8, #3952]
   17d24:	str	x9, [x8]
   17d28:	cbnz	x10, 17d48 <rl_initialize@@Base+0xc4>
   17d2c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d30:	ldr	x8, [x8, #3808]
   17d34:	mov	w9, #0x100                 	// #256
   17d38:	mov	w0, #0x100                 	// #256
   17d3c:	str	w9, [x8]
   17d40:	bl	16bf0 <xmalloc@plt>
   17d44:	str	x0, [x23]
   17d48:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d4c:	ldr	x19, [x19, #2784]
   17d50:	ldr	x0, [x19]
   17d54:	cbnz	x0, 17d68 <rl_initialize@@Base+0xe4>
   17d58:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   17d5c:	add	x0, x0, #0xaa4
   17d60:	bl	163a0 <sh_get_env_value@plt>
   17d64:	str	x0, [x19]
   17d68:	bl	164c0 <_rl_init_terminal_io@plt>
   17d6c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d70:	ldr	x8, [x8, #3816]
   17d74:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17d78:	ldr	w8, [x8]
   17d7c:	ldr	x25, [x25, #1992]
   17d80:	cbz	w8, 17d8c <rl_initialize@@Base+0x108>
   17d84:	ldr	x0, [x25]
   17d88:	bl	16480 <rl_tty_set_default_bindings@plt>
   17d8c:	bl	16970 <rl_initialize_funmap@plt>
   17d90:	bl	17010 <_rl_init_eightbit@plt>
   17d94:	mov	x0, xzr
   17d98:	bl	166e0 <rl_read_init_file@plt>
   17d9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17da0:	ldr	x8, [x8, #2192]
   17da4:	ldr	w8, [x8]
   17da8:	cbz	w8, 17df0 <rl_initialize@@Base+0x16c>
   17dac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17db0:	ldr	x8, [x8, #2240]
   17db4:	ldr	w8, [x8]
   17db8:	cbz	w8, 17df0 <rl_initialize@@Base+0x16c>
   17dbc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17dc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17dc4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17dc8:	ldr	x8, [x8, #3552]
   17dcc:	ldr	x9, [x9, #3520]
   17dd0:	ldr	x10, [x10, #3216]
   17dd4:	ldr	w11, [x8]
   17dd8:	ldr	w9, [x9]
   17ddc:	ldr	w12, [x10]
   17de0:	sub	w11, w11, #0x1
   17de4:	str	w11, [x8]
   17de8:	sub	w9, w12, w9
   17dec:	str	w9, [x10]
   17df0:	bl	17320 <rl_set_keymap_from_edit_mode@plt>
   17df4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17df8:	ldr	x19, [x19, #1984]
   17dfc:	mov	x0, x19
   17e00:	bl	19340 <rl_restore_state@@Base+0x1bc>
   17e04:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e08:	ldr	x20, [x20, #3824]
   17e0c:	mov	x0, x20
   17e10:	bl	19340 <rl_restore_state@@Base+0x1bc>
   17e14:	ldrb	w8, [x20, #432]
   17e18:	cmp	w8, #0x1
   17e1c:	b.ne	17e38 <rl_initialize@@Base+0x1b4>  // b.any
   17e20:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e24:	ldr	x2, [x2, #3824]
   17e28:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   17e2c:	add	x0, x0, #0xaa9
   17e30:	mov	x1, xzr
   17e34:	bl	17820 <rl_bind_keyseq_in_map@plt>
   17e38:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e3c:	ldr	x20, [x20, #4032]
   17e40:	mov	x0, x20
   17e44:	bl	19340 <rl_restore_state@@Base+0x1bc>
   17e48:	ldr	x26, [x25]
   17e4c:	str	x19, [x25]
   17e50:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e54:	ldr	x21, [x21, #2952]
   17e58:	adrp	x19, 3e000 <_rl_print_color_indicator@@Base+0xec>
   17e5c:	add	x19, x19, #0xafe
   17e60:	mov	x0, x19
   17e64:	mov	x1, x21
   17e68:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   17e6c:	mov	x0, x19
   17e70:	mov	x1, x21
   17e74:	str	x20, [x25]
   17e78:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   17e7c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e80:	ldr	x8, [x8, #2856]
   17e84:	str	x26, [x25]
   17e88:	ldr	x9, [x8]
   17e8c:	cbnz	x9, 17ea0 <rl_initialize@@Base+0x21c>
   17e90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17e94:	ldr	x9, [x9, #3960]
   17e98:	ldr	x9, [x9]
   17e9c:	str	x9, [x8]
   17ea0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ea4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ea8:	ldr	x8, [x8, #3112]
   17eac:	ldr	x9, [x9, #2904]
   17eb0:	ldr	w8, [x8]
   17eb4:	ldr	w9, [x9]
   17eb8:	orr	w8, w9, w8
   17ebc:	cbz	w8, 17ec4 <rl_initialize@@Base+0x240>
   17ec0:	bl	16760 <_rl_parse_colors@plt>
   17ec4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ec8:	ldr	x8, [x8, #2080]
   17ecc:	mov	w9, #0x10                  	// #16
   17ed0:	mov	w0, #0x10                  	// #16
   17ed4:	str	w9, [x8]
   17ed8:	bl	16980 <malloc@plt>
   17edc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17ee0:	ldr	x8, [x8, #2888]
   17ee4:	str	x0, [x8]
   17ee8:	cbz	x0, 17ef0 <rl_initialize@@Base+0x26c>
   17eec:	strb	wzr, [x0]
   17ef0:	ldr	x8, [x22]
   17ef4:	ldr	w9, [x24, #4092]
   17ef8:	and	x8, x8, #0xfffffffffffffffc
   17efc:	add	w9, w9, #0x1
   17f00:	orr	x8, x8, #0x2
   17f04:	str	w9, [x24, #4092]
   17f08:	str	x8, [x22]
   17f0c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f10:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f14:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f18:	ldr	x8, [x8, #3272]
   17f1c:	ldr	x9, [x9, #2656]
   17f20:	ldr	x10, [x10, #3512]
   17f24:	ldr	x11, [x23]
   17f28:	adrp	x12, 57000 <rl_insert@@Base+0x20abc>
   17f2c:	str	wzr, [x8]
   17f30:	str	wzr, [x9]
   17f34:	str	wzr, [x10]
   17f38:	str	x11, [x12, #4080]
   17f3c:	strb	wzr, [x11]
   17f40:	ldr	x8, [x22]
   17f44:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f48:	ldr	x9, [x9, #3296]
   17f4c:	and	x8, x8, #0xfffffffffdffffff
   17f50:	str	x8, [x22]
   17f54:	str	wzr, [x9]
   17f58:	bl	16390 <_rl_start_using_history@plt>
   17f5c:	bl	165e0 <rl_reset_line_state@plt>
   17f60:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f64:	ldr	x8, [x8, #3416]
   17f68:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f6c:	ldr	w8, [x8]
   17f70:	ldr	x9, [x9, #2072]
   17f74:	str	xzr, [x9]
   17f78:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17f7c:	ldr	x9, [x9, #2416]
   17f80:	strb	wzr, [x9]
   17f84:	cbnz	w8, 17f8c <rl_initialize@@Base+0x308>
   17f88:	bl	17490 <_rl_vi_initialize_line@plt>
   17f8c:	mov	w0, #0x1                   	// #1
   17f90:	mov	w1, #0x1                   	// #1
   17f94:	bl	16800 <_rl_set_insert_mode@plt>
   17f98:	ldp	x20, x19, [sp, #64]
   17f9c:	ldp	x22, x21, [sp, #48]
   17fa0:	ldp	x24, x23, [sp, #32]
   17fa4:	ldp	x26, x25, [sp, #16]
   17fa8:	mov	w0, wzr
   17fac:	ldp	x29, x30, [sp], #80
   17fb0:	ret

0000000000017fb4 <readline_internal_setup@@Base>:
   17fb4:	stp	x29, x30, [sp, #-32]!
   17fb8:	stp	x20, x19, [sp, #16]
   17fbc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fc4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fc8:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fcc:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fd0:	ldr	x8, [x8, #3176]
   17fd4:	ldr	x9, [x9, #3312]
   17fd8:	ldr	x10, [x10, #1928]
   17fdc:	ldr	x11, [x11, #3896]
   17fe0:	ldr	x12, [x12, #2984]
   17fe4:	ldr	x8, [x8]
   17fe8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   17fec:	ldr	w11, [x11]
   17ff0:	ldr	w12, [x12]
   17ff4:	ldr	x10, [x10]
   17ff8:	ldr	x20, [x20, #3952]
   17ffc:	str	x8, [x9]
   18000:	and	w8, w12, w11
   18004:	mov	x29, sp
   18008:	str	x10, [x20]
   1800c:	tbz	w8, #2, 18014 <readline_internal_setup@@Base+0x60>
   18010:	bl	17340 <_rl_enable_meta_key@plt>
   18014:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18018:	ldr	x8, [x8, #2632]
   1801c:	ldr	x8, [x8]
   18020:	cbz	x8, 18028 <readline_internal_setup@@Base+0x74>
   18024:	blr	x8
   18028:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1802c:	ldr	x8, [x8, #3416]
   18030:	ldr	w8, [x8]
   18034:	cbz	w8, 18050 <readline_internal_setup@@Base+0x9c>
   18038:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1803c:	ldr	x8, [x8, #2008]
   18040:	ldr	w8, [x8]
   18044:	cbz	w8, 1805c <readline_internal_setup@@Base+0xa8>
   18048:	bl	17640 <_rl_reset_prompt@plt>
   1804c:	b	1805c <readline_internal_setup@@Base+0xa8>
   18050:	mov	w0, #0x1                   	// #1
   18054:	mov	w1, #0x69                  	// #105
   18058:	bl	17660 <rl_vi_insertion_mode@plt>
   1805c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18060:	ldr	x8, [x8, #2944]
   18064:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18068:	ldr	x9, [x9, #2016]
   1806c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18070:	ldr	w10, [x8]
   18074:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18078:	ldr	x0, [x9]
   1807c:	ldr	x8, [x8, #2736]
   18080:	ldr	w8, [x8]
   18084:	ldr	x19, [x19, #2664]
   18088:	cbnz	w10, 180cc <readline_internal_setup@@Base+0x118>
   1808c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18090:	ldr	x9, [x19]
   18094:	ldr	x10, [x10, #3344]
   18098:	cmp	x9, x10
   1809c:	b.ne	180cc <readline_internal_setup@@Base+0x118>  // b.any
   180a0:	cbz	x0, 180e8 <readline_internal_setup@@Base+0x134>
   180a4:	cbnz	w8, 180e8 <readline_internal_setup@@Base+0x134>
   180a8:	bl	166c0 <_rl_strip_prompt@plt>
   180ac:	ldr	x1, [x20]
   180b0:	mov	x19, x0
   180b4:	bl	16490 <fputs@plt>
   180b8:	ldr	x0, [x20]
   180bc:	bl	17430 <fflush@plt>
   180c0:	mov	x0, x19
   180c4:	bl	169f0 <xfree@plt>
   180c8:	b	180e8 <readline_internal_setup@@Base+0x134>
   180cc:	cbz	x0, 180dc <readline_internal_setup@@Base+0x128>
   180d0:	cbz	w8, 180dc <readline_internal_setup@@Base+0x128>
   180d4:	bl	17350 <rl_on_new_line_with_prompt@plt>
   180d8:	b	180e0 <readline_internal_setup@@Base+0x12c>
   180dc:	bl	172a0 <rl_on_new_line@plt>
   180e0:	ldr	x8, [x19]
   180e4:	blr	x8
   180e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   180ec:	ldr	x8, [x8, #3016]
   180f0:	ldr	x8, [x8]
   180f4:	cbz	x8, 180fc <readline_internal_setup@@Base+0x148>
   180f8:	blr	x8
   180fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18100:	ldr	x8, [x8, #2808]
   18104:	ldr	w9, [x8]
   18108:	cbz	w9, 1811c <readline_internal_setup@@Base+0x168>
   1810c:	ldr	w0, [x8]
   18110:	ldp	x20, x19, [sp, #16]
   18114:	ldp	x29, x30, [sp], #32
   18118:	b	17460 <_rl_signal_handler@plt>
   1811c:	ldp	x20, x19, [sp, #16]
   18120:	ldp	x29, x30, [sp], #32
   18124:	ret

0000000000018128 <readline_internal_teardown@@Base>:
   18128:	stp	x29, x30, [sp, #-48]!
   1812c:	stp	x22, x21, [sp, #16]
   18130:	stp	x20, x19, [sp, #32]
   18134:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18138:	ldr	x8, [x8, #2808]
   1813c:	mov	w19, w0
   18140:	mov	x29, sp
   18144:	ldr	w9, [x8]
   18148:	cbz	w9, 18154 <readline_internal_teardown@@Base+0x2c>
   1814c:	ldr	w0, [x8]
   18150:	bl	17460 <_rl_signal_handler@plt>
   18154:	bl	16a60 <current_history@plt>
   18158:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1815c:	ldr	x21, [x21, #3040]
   18160:	cbz	x0, 181c0 <readline_internal_teardown@@Base+0x98>
   18164:	ldr	x8, [x21]
   18168:	cbz	x8, 181c0 <readline_internal_teardown@@Base+0x98>
   1816c:	adrp	x22, 57000 <rl_insert@@Base+0x20abc>
   18170:	ldr	x0, [x22, #4080]
   18174:	bl	16440 <strlen@plt>
   18178:	add	x0, x0, #0x1
   1817c:	bl	16bf0 <xmalloc@plt>
   18180:	ldr	x1, [x22, #4080]
   18184:	mov	x20, x0
   18188:	bl	17480 <strcpy@plt>
   1818c:	mov	w0, #0x1                   	// #1
   18190:	mov	w1, wzr
   18194:	bl	169b0 <rl_revert_line@plt>
   18198:	bl	165a0 <where_history@plt>
   1819c:	ldr	x1, [x22, #4080]
   181a0:	mov	x2, xzr
   181a4:	bl	17920 <replace_history_entry@plt>
   181a8:	bl	16910 <_rl_free_history_entry@plt>
   181ac:	ldr	x0, [x22, #4080]
   181b0:	mov	x1, x20
   181b4:	bl	17480 <strcpy@plt>
   181b8:	mov	x0, x20
   181bc:	bl	169f0 <xfree@plt>
   181c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   181c4:	ldr	x8, [x8, #3408]
   181c8:	ldr	w8, [x8]
   181cc:	cbz	w8, 181d4 <readline_internal_teardown@@Base+0xac>
   181d0:	bl	16c40 <_rl_revert_all_lines@plt>
   181d4:	ldr	x8, [x21]
   181d8:	cbz	x8, 181e0 <readline_internal_teardown@@Base+0xb8>
   181dc:	bl	17550 <rl_free_undo_list@plt>
   181e0:	bl	17560 <_rl_disable_meta_key@plt>
   181e4:	mov	w0, #0x1                   	// #1
   181e8:	mov	w1, wzr
   181ec:	bl	16800 <_rl_set_insert_mode@plt>
   181f0:	cbz	w19, 18208 <readline_internal_teardown@@Base+0xe0>
   181f4:	ldp	x20, x19, [sp, #32]
   181f8:	ldp	x22, x21, [sp, #16]
   181fc:	mov	x0, xzr
   18200:	ldp	x29, x30, [sp], #48
   18204:	ret
   18208:	adrp	x19, 57000 <rl_insert@@Base+0x20abc>
   1820c:	ldr	x0, [x19, #4080]
   18210:	bl	16440 <strlen@plt>
   18214:	add	x0, x0, #0x1
   18218:	bl	16bf0 <xmalloc@plt>
   1821c:	ldr	x1, [x19, #4080]
   18220:	ldp	x20, x19, [sp, #32]
   18224:	ldp	x22, x21, [sp, #16]
   18228:	ldp	x29, x30, [sp], #48
   1822c:	b	17480 <strcpy@plt>

0000000000018230 <_rl_internal_char_cleanup@@Base>:
   18230:	stp	x29, x30, [sp, #-32]!
   18234:	stp	x20, x19, [sp, #16]
   18238:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1823c:	ldr	x8, [x8, #3416]
   18240:	mov	x29, sp
   18244:	ldr	w8, [x8]
   18248:	cbnz	w8, 1826c <_rl_internal_char_cleanup@@Base+0x3c>
   1824c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18250:	ldr	x8, [x8, #1992]
   18254:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18258:	ldr	x8, [x8]
   1825c:	ldr	x9, [x9, #3824]
   18260:	cmp	x8, x9
   18264:	b.ne	1826c <_rl_internal_char_cleanup@@Base+0x3c>  // b.any
   18268:	bl	16a30 <rl_vi_check@plt>
   1826c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18270:	ldr	x8, [x8, #2472]
   18274:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18278:	ldr	w8, [x8]
   1827c:	ldr	x19, [x19, #2656]
   18280:	cbz	w8, 182b8 <_rl_internal_char_cleanup@@Base+0x88>
   18284:	ldr	w9, [x19]
   18288:	cmp	w9, w8
   1828c:	b.lt	182b8 <_rl_internal_char_cleanup@@Base+0x88>  // b.tstop
   18290:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18294:	ldr	x8, [x8, #2664]
   18298:	ldr	x8, [x8]
   1829c:	blr	x8
   182a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   182a4:	ldr	x8, [x8, #1976]
   182a8:	mov	w0, #0x1                   	// #1
   182ac:	mov	w1, #0xa                   	// #10
   182b0:	str	wzr, [x8]
   182b4:	bl	16af0 <rl_newline@plt>
   182b8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   182bc:	ldr	x20, [x20, #3296]
   182c0:	ldr	w8, [x20]
   182c4:	cbnz	w8, 182e8 <_rl_internal_char_cleanup@@Base+0xb8>
   182c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   182cc:	ldr	x8, [x8, #2664]
   182d0:	ldr	x8, [x8]
   182d4:	blr	x8
   182d8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   182dc:	ldr	w8, [x20]
   182e0:	ldr	x9, [x9, #1976]
   182e4:	str	wzr, [x9]
   182e8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   182ec:	ldr	x9, [x9, #2624]
   182f0:	ldr	w9, [x9]
   182f4:	cbz	w9, 1833c <_rl_internal_char_cleanup@@Base+0x10c>
   182f8:	cbz	w8, 1833c <_rl_internal_char_cleanup@@Base+0x10c>
   182fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18300:	ldr	x8, [x8, #2072]
   18304:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18308:	ldr	x8, [x8]
   1830c:	ldr	x9, [x9, #2520]
   18310:	cmp	x8, x9
   18314:	b.ne	1833c <_rl_internal_char_cleanup@@Base+0x10c>  // b.any
   18318:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1831c:	ldr	x8, [x8, #3512]
   18320:	ldr	w9, [x19]
   18324:	ldr	w8, [x8]
   18328:	orr	w8, w9, w8
   1832c:	cbnz	w8, 1833c <_rl_internal_char_cleanup@@Base+0x10c>
   18330:	ldp	x20, x19, [sp, #16]
   18334:	ldp	x29, x30, [sp], #32
   18338:	b	169d0 <_rl_erase_entire_line@plt>
   1833c:	ldp	x20, x19, [sp, #16]
   18340:	ldp	x29, x30, [sp], #32
   18344:	ret

0000000000018348 <readline_internal_char@@Base>:
   18348:	stp	x29, x30, [sp, #-80]!
   1834c:	str	x25, [sp, #16]
   18350:	stp	x24, x23, [sp, #32]
   18354:	stp	x22, x21, [sp, #48]
   18358:	stp	x20, x19, [sp, #64]
   1835c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18360:	ldr	x19, [x19, #2344]
   18364:	adrp	x21, 57000 <rl_insert@@Base+0x20abc>
   18368:	mov	w8, #0xffffffff            	// #-1
   1836c:	str	w8, [x21, #4088]
   18370:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18374:	ldr	w20, [x19]
   18378:	ldr	x0, [x0, #2816]
   1837c:	mov	w1, wzr
   18380:	mov	x29, sp
   18384:	bl	165b0 <__sigsetjmp@plt>
   18388:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1838c:	ldr	x22, [x22, #2984]
   18390:	cbz	w0, 183bc <readline_internal_char@@Base+0x74>
   18394:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18398:	ldr	x8, [x8, #2664]
   1839c:	ldr	x8, [x8]
   183a0:	blr	x8
   183a4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   183a8:	ldrb	w8, [x22, #2]
   183ac:	ldr	x9, [x9, #1976]
   183b0:	mov	w0, wzr
   183b4:	str	wzr, [x9]
   183b8:	tbnz	w8, #3, 18544 <readline_internal_char@@Base+0x1fc>
   183bc:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   183c0:	ldr	x23, [x23, #3328]
   183c4:	ldr	w8, [x23]
   183c8:	cbnz	w8, 183ec <readline_internal_char@@Base+0xa4>
   183cc:	bl	17500 <_rl_reset_argument@plt>
   183d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   183d4:	ldr	x8, [x8, #2888]
   183d8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   183dc:	ldr	x8, [x8]
   183e0:	ldr	x9, [x9, #3144]
   183e4:	str	wzr, [x9]
   183e8:	strb	wzr, [x8]
   183ec:	ldr	x8, [x22]
   183f0:	orr	x8, x8, #0x8
   183f4:	str	x8, [x22]
   183f8:	bl	16e60 <rl_read_key@plt>
   183fc:	ldr	x8, [x22]
   18400:	cmn	w0, #0x2
   18404:	and	x8, x8, #0xfffffffffffffff7
   18408:	str	x8, [x22]
   1840c:	b.eq	184c8 <readline_internal_char@@Base+0x180>  // b.none
   18410:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18414:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18418:	ldr	x24, [x24, #2656]
   1841c:	ldr	x25, [x25, #1912]
   18420:	cmn	w0, #0x1
   18424:	b.ne	18494 <readline_internal_char@@Base+0x14c>  // b.any
   18428:	ldr	w9, [x24]
   1842c:	cbz	w9, 18494 <readline_internal_char@@Base+0x14c>
   18430:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18434:	ldr	x8, [x8, #2808]
   18438:	ldr	w9, [x8]
   1843c:	cbz	w9, 18464 <readline_internal_char@@Base+0x11c>
   18440:	ldr	w9, [x8]
   18444:	cbz	w9, 18450 <readline_internal_char@@Base+0x108>
   18448:	ldr	w0, [x8]
   1844c:	bl	17460 <_rl_signal_handler@plt>
   18450:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18454:	ldr	x8, [x8, #2440]
   18458:	ldr	x8, [x8]
   1845c:	cbz	x8, 18464 <readline_internal_char@@Base+0x11c>
   18460:	blr	x8
   18464:	ldr	x8, [x22]
   18468:	tbnz	w8, #2, 18474 <readline_internal_char@@Base+0x12c>
   1846c:	mov	w0, #0xa                   	// #10
   18470:	b	18494 <readline_internal_char@@Base+0x14c>
   18474:	ldr	w9, [x21, #4088]
   18478:	cmn	w9, #0x1
   1847c:	b.eq	1848c <readline_internal_char@@Base+0x144>  // b.none
   18480:	ldr	w0, [x25]
   18484:	cmp	w9, w0
   18488:	b.ne	18494 <readline_internal_char@@Base+0x14c>  // b.any
   1848c:	mov	w0, #0xffffffff            	// #-1
   18490:	str	wzr, [x24]
   18494:	ldr	w9, [x25]
   18498:	ldr	w10, [x21, #4088]
   1849c:	ldr	w12, [x24]
   184a0:	cmp	w0, w9
   184a4:	cset	w9, eq  // eq = none
   184a8:	cmp	w10, w0
   184ac:	cset	w10, ne  // ne = any
   184b0:	cmn	w0, #0x1
   184b4:	cset	w11, eq  // eq = none
   184b8:	cbnz	w12, 184e4 <readline_internal_char@@Base+0x19c>
   184bc:	and	w9, w9, w10
   184c0:	orr	w9, w11, w9
   184c4:	cbz	w9, 184e4 <readline_internal_char@@Base+0x19c>
   184c8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   184cc:	ldr	x9, [x9, #3296]
   184d0:	orr	x8, x8, #0x2000000
   184d4:	mov	w0, #0x1                   	// #1
   184d8:	str	x8, [x22]
   184dc:	str	w0, [x9]
   184e0:	b	18544 <readline_internal_char@@Base+0x1fc>
   184e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   184e8:	ldr	x8, [x8, #1992]
   184ec:	str	w0, [x21, #4088]
   184f0:	and	w0, w0, #0xff
   184f4:	mov	w2, wzr
   184f8:	ldr	x1, [x8]
   184fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18500:	ldr	x8, [x8, #2112]
   18504:	str	x1, [x8]
   18508:	bl	17440 <_rl_dispatch_subseq@plt>
   1850c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18510:	ldr	x8, [x8, #2808]
   18514:	ldr	w9, [x8]
   18518:	cbz	w9, 18524 <readline_internal_char@@Base+0x1dc>
   1851c:	ldr	w0, [x8]
   18520:	bl	17460 <_rl_signal_handler@plt>
   18524:	ldr	w8, [x23]
   18528:	cbnz	w8, 1853c <readline_internal_char@@Base+0x1f4>
   1852c:	ldr	w8, [x19]
   18530:	cmp	w20, w8
   18534:	b.ne	1853c <readline_internal_char@@Base+0x1f4>  // b.any
   18538:	str	wzr, [x19]
   1853c:	bl	165d0 <_rl_internal_char_cleanup@plt>
   18540:	mov	w0, wzr
   18544:	ldp	x20, x19, [sp, #64]
   18548:	ldp	x22, x21, [sp, #48]
   1854c:	ldp	x24, x23, [sp, #32]
   18550:	ldr	x25, [sp, #16]
   18554:	ldp	x29, x30, [sp], #80
   18558:	ret

000000000001855c <_rl_dispatch@@Base>:
   1855c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18560:	ldr	x8, [x8, #2112]
   18564:	mov	w2, wzr
   18568:	str	x1, [x8]
   1856c:	b	17440 <_rl_dispatch_subseq@plt>

0000000000018570 <_rl_init_line_state@@Base>:
   18570:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18574:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18578:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1857c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18580:	ldr	x8, [x8, #3272]
   18584:	ldr	x9, [x9, #2656]
   18588:	ldr	x10, [x10, #3512]
   1858c:	ldr	x11, [x11, #2480]
   18590:	adrp	x12, 57000 <rl_insert@@Base+0x20abc>
   18594:	str	wzr, [x8]
   18598:	str	wzr, [x9]
   1859c:	ldr	x11, [x11]
   185a0:	str	wzr, [x10]
   185a4:	str	x11, [x12, #4080]
   185a8:	strb	wzr, [x11]
   185ac:	ret

00000000000185b0 <_rl_set_the_line@@Base>:
   185b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   185b4:	ldr	x8, [x8, #2480]
   185b8:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   185bc:	ldr	x8, [x8]
   185c0:	str	x8, [x9, #4080]
   185c4:	ret

00000000000185c8 <_rl_keyseq_cxt_alloc@@Base>:
   185c8:	stp	x29, x30, [sp, #-16]!
   185cc:	mov	w0, #0x30                  	// #48
   185d0:	mov	x29, sp
   185d4:	bl	16bf0 <xmalloc@plt>
   185d8:	stp	xzr, xzr, [x0]
   185dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   185e0:	ldr	x8, [x8, #3832]
   185e4:	mov	w9, #0x2a                  	// #42
   185e8:	ldr	x8, [x8]
   185ec:	str	w9, [x0, #40]
   185f0:	str	x8, [x0, #32]
   185f4:	ldp	x29, x30, [sp], #16
   185f8:	ret

00000000000185fc <_rl_keyseq_cxt_dispose@@Base>:
   185fc:	b	169f0 <xfree@plt>

0000000000018600 <_rl_keyseq_chain_dispose@@Base>:
   18600:	stp	x29, x30, [sp, #-32]!
   18604:	str	x19, [sp, #16]
   18608:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1860c:	ldr	x19, [x19, #3832]
   18610:	mov	x29, sp
   18614:	ldr	x0, [x19]
   18618:	cbz	x0, 18630 <_rl_keyseq_chain_dispose@@Base+0x30>
   1861c:	ldr	x8, [x0, #32]
   18620:	str	x8, [x19]
   18624:	bl	169f0 <xfree@plt>
   18628:	ldr	x0, [x19]
   1862c:	cbnz	x0, 1861c <_rl_keyseq_chain_dispose@@Base+0x1c>
   18630:	ldr	x19, [sp, #16]
   18634:	ldp	x29, x30, [sp], #32
   18638:	ret

000000000001863c <_rl_dispatch_callback@@Base>:
   1863c:	stp	x29, x30, [sp, #-48]!
   18640:	str	x21, [sp, #16]
   18644:	stp	x20, x19, [sp, #32]
   18648:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1864c:	ldr	w8, [x0]
   18650:	ldr	x21, [x21, #2984]
   18654:	mov	x19, x0
   18658:	mov	x29, sp
   1865c:	tbnz	w8, #0, 186dc <_rl_dispatch_callback@@Base+0xa0>
   18660:	ldr	w20, [x19, #12]
   18664:	ldr	x8, [x21]
   18668:	cmp	w20, #0x1b
   1866c:	b.ne	18678 <_rl_dispatch_callback@@Base+0x3c>  // b.any
   18670:	orr	x8, x8, #0x10
   18674:	str	x8, [x21]
   18678:	orr	x8, x8, #0x40
   1867c:	str	x8, [x21]
   18680:	bl	16e60 <rl_read_key@plt>
   18684:	ldr	x8, [x21]
   18688:	cmp	w20, #0x1b
   1868c:	mov	x9, #0xffffffffffffffbf    	// #-65
   18690:	mov	x10, #0xffffffffffffffaf    	// #-81
   18694:	csel	x9, x10, x9, eq  // eq = none
   18698:	and	x8, x8, x9
   1869c:	str	x8, [x21]
   186a0:	tbnz	w0, #31, 18780 <_rl_dispatch_callback@@Base+0x144>
   186a4:	ldr	x1, [x19, #16]
   186a8:	ldr	w2, [x19, #4]
   186ac:	bl	17440 <_rl_dispatch_subseq@plt>
   186b0:	ldr	w8, [x19]
   186b4:	orr	w8, w8, #0x1
   186b8:	str	w8, [x19]
   186bc:	cmn	w0, #0x3
   186c0:	b.eq	186e8 <_rl_dispatch_callback@@Base+0xac>  // b.none
   186c4:	ldr	x1, [x19, #24]
   186c8:	ldr	w2, [x19, #12]
   186cc:	and	w3, w8, #0x2
   186d0:	bl	18e78 <_rl_dispatch_subseq@@Base+0x6c4>
   186d4:	mov	w20, w0
   186d8:	b	186ec <_rl_dispatch_callback@@Base+0xb0>
   186dc:	ldr	w0, [x19, #40]
   186e0:	cmn	w0, #0x3
   186e4:	b.ne	186c4 <_rl_dispatch_callback@@Base+0x88>  // b.any
   186e8:	mov	w20, #0xfffffffd            	// #-3
   186ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   186f0:	ldr	x8, [x8, #2808]
   186f4:	ldr	w9, [x8]
   186f8:	cbz	w9, 18704 <_rl_dispatch_callback@@Base+0xc8>
   186fc:	ldr	w0, [x8]
   18700:	bl	17460 <_rl_signal_handler@plt>
   18704:	tbnz	w20, #31, 1873c <_rl_dispatch_callback@@Base+0x100>
   18708:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1870c:	ldr	x19, [x19, #3832]
   18710:	ldr	x0, [x19]
   18714:	cbz	x0, 1872c <_rl_dispatch_callback@@Base+0xf0>
   18718:	ldr	x8, [x0, #32]
   1871c:	str	x8, [x19]
   18720:	bl	169f0 <xfree@plt>
   18724:	ldr	x0, [x19]
   18728:	cbnz	x0, 18718 <_rl_dispatch_callback@@Base+0xdc>
   1872c:	ldr	x8, [x21]
   18730:	and	x8, x8, #0xffffffffffdfffff
   18734:	str	x8, [x21]
   18738:	b	18788 <_rl_dispatch_callback@@Base+0x14c>
   1873c:	cmn	w20, #0x3
   18740:	b.eq	1879c <_rl_dispatch_callback@@Base+0x160>  // b.none
   18744:	cmn	w20, #0x1
   18748:	b.ne	18754 <_rl_dispatch_callback@@Base+0x118>  // b.any
   1874c:	ldrb	w8, [x19]
   18750:	tbz	w8, #1, 18708 <_rl_dispatch_callback@@Base+0xcc>
   18754:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18758:	ldr	x8, [x19, #32]
   1875c:	ldr	x9, [x9, #3832]
   18760:	str	x8, [x9]
   18764:	mov	w9, #0x1                   	// #1
   18768:	cbz	x8, 18770 <_rl_dispatch_callback@@Base+0x134>
   1876c:	str	w20, [x8, #40]
   18770:	cbz	w9, 18788 <_rl_dispatch_callback@@Base+0x14c>
   18774:	mov	x0, x19
   18778:	bl	169f0 <xfree@plt>
   1877c:	b	18788 <_rl_dispatch_callback@@Base+0x14c>
   18780:	bl	174a0 <_rl_abort_internal@plt>
   18784:	mov	w20, #0xffffffff            	// #-1
   18788:	mov	w0, w20
   1878c:	ldp	x20, x19, [sp, #32]
   18790:	ldr	x21, [sp, #16]
   18794:	ldp	x29, x30, [sp], #48
   18798:	ret
   1879c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187a0:	ldr	x8, [x8, #3832]
   187a4:	mov	w9, wzr
   187a8:	ldr	x8, [x8]
   187ac:	cbnz	x8, 1876c <_rl_dispatch_callback@@Base+0x130>
   187b0:	b	18770 <_rl_dispatch_callback@@Base+0x134>

00000000000187b4 <_rl_dispatch_subseq@@Base>:
   187b4:	stp	x29, x30, [sp, #-96]!
   187b8:	stp	x28, x27, [sp, #16]
   187bc:	stp	x26, x25, [sp, #32]
   187c0:	stp	x24, x23, [sp, #48]
   187c4:	stp	x22, x21, [sp, #64]
   187c8:	stp	x20, x19, [sp, #80]
   187cc:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187d0:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187d4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187d8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187dc:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   187e0:	ldr	x28, [x28, #3456]
   187e4:	ldr	x24, [x24, #2984]
   187e8:	ldr	x22, [x22, #3144]
   187ec:	ldr	x23, [x23, #2112]
   187f0:	ldr	x25, [x25, #3000]
   187f4:	mov	w21, w2
   187f8:	mov	x20, x1
   187fc:	mov	w19, w0
   18800:	mov	x29, sp
   18804:	and	w8, w19, #0xffffff80
   18808:	cmp	w8, #0x80
   1880c:	b.ne	18818 <_rl_dispatch_subseq@@Base+0x64>  // b.any
   18810:	ldr	w8, [x28]
   18814:	cbnz	w8, 18884 <_rl_dispatch_subseq@@Base+0xd0>
   18818:	ldrb	w8, [x24, #1]
   1881c:	tbz	w8, #4, 18828 <_rl_dispatch_subseq@@Base+0x74>
   18820:	mov	w0, w19
   18824:	bl	167c0 <_rl_add_macro_char@plt>
   18828:	sbfiz	x8, x19, #4, #32
   1882c:	ldrb	w9, [x20, x8]
   18830:	sxtw	x8, w19
   18834:	cbnz	w9, 18910 <_rl_dispatch_subseq@@Base+0x15c>
   18838:	add	x26, x20, x8, lsl #4
   1883c:	ldr	x27, [x26, #8]!
   18840:	cbz	x27, 18a14 <_rl_dispatch_subseq@@Base+0x260>
   18844:	cmp	x27, x25
   18848:	b.ne	18a34 <_rl_dispatch_subseq@@Base+0x280>  // b.any
   1884c:	bl	17100 <__ctype_b_loc@plt>
   18850:	ldr	x8, [x0]
   18854:	and	w19, w19, #0xff
   18858:	ldrh	w8, [x8, w19, uxtw #1]
   1885c:	tbz	w8, #8, 1886c <_rl_dispatch_subseq@@Base+0xb8>
   18860:	bl	16810 <__ctype_tolower_loc@plt>
   18864:	ldr	x8, [x0]
   18868:	ldr	w19, [x8, x19, lsl #2]
   1886c:	and	w8, w19, #0xffffff80
   18870:	mov	w21, wzr
   18874:	cmp	w8, #0x80
   18878:	str	x20, [x23]
   1887c:	b.eq	18810 <_rl_dispatch_subseq@@Base+0x5c>  // b.none
   18880:	b	18818 <_rl_dispatch_subseq@@Base+0x64>
   18884:	ldrb	w8, [x20, #432]
   18888:	cmp	w8, #0x1
   1888c:	b.ne	18c60 <_rl_dispatch_subseq@@Base+0x4ac>  // b.any
   18890:	ldrb	w8, [x24, #1]
   18894:	tbz	w8, #4, 188a0 <_rl_dispatch_subseq@@Base+0xec>
   18898:	mov	w0, #0x1b                  	// #27
   1889c:	bl	167c0 <_rl_add_macro_char@plt>
   188a0:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   188a4:	ldr	w8, [x22]
   188a8:	ldr	x11, [x11, #2080]
   188ac:	add	w10, w8, #0x2
   188b0:	ldrsw	x9, [x11]
   188b4:	cmp	w10, w9
   188b8:	b.ge	188cc <_rl_dispatch_subseq@@Base+0x118>  // b.tcont
   188bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   188c0:	ldr	x9, [x9, #2888]
   188c4:	ldr	x0, [x9]
   188c8:	b	188ec <_rl_dispatch_subseq@@Base+0x138>
   188cc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   188d0:	ldr	x21, [x21, #2888]
   188d4:	add	x1, x9, #0x10
   188d8:	str	w1, [x11]
   188dc:	ldr	x0, [x21]
   188e0:	bl	16a50 <xrealloc@plt>
   188e4:	ldr	w8, [x22]
   188e8:	str	x0, [x21]
   188ec:	add	w9, w8, #0x1
   188f0:	str	w9, [x22]
   188f4:	mov	w9, #0x1b                  	// #27
   188f8:	strb	w9, [x0, w8, sxtw]
   188fc:	ldr	x20, [x20, #440]
   18900:	and	w19, w19, #0xffffff7f
   18904:	mov	w21, wzr
   18908:	str	x20, [x23]
   1890c:	b	18804 <_rl_dispatch_subseq@@Base+0x50>
   18910:	cmp	w9, #0x1
   18914:	b.ne	18a78 <_rl_dispatch_subseq@@Base+0x2c4>  // b.any
   18918:	add	x26, x20, x8, lsl #4
   1891c:	ldr	x8, [x26, #8]!
   18920:	cbz	x8, 18c58 <_rl_dispatch_subseq@@Base+0x4a4>
   18924:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18928:	ldr	x8, [x8, #4032]
   1892c:	cmp	w19, #0x1b
   18930:	cset	w27, eq  // eq = none
   18934:	cmp	x20, x8
   18938:	b.ne	18994 <_rl_dispatch_subseq@@Base+0x1e0>  // b.any
   1893c:	cmp	w19, #0x1b
   18940:	b.ne	18994 <_rl_dispatch_subseq@@Base+0x1e0>  // b.any
   18944:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18948:	ldr	x8, [x8, #3416]
   1894c:	ldr	w8, [x8]
   18950:	cbnz	w8, 18994 <_rl_dispatch_subseq@@Base+0x1e0>
   18954:	ldr	x8, [x24]
   18958:	mov	w9, #0x800                 	// #2048
   1895c:	movk	w9, #0x2, lsl #16
   18960:	tst	x8, x9
   18964:	b.ne	18994 <_rl_dispatch_subseq@@Base+0x1e0>  // b.any
   18968:	bl	17290 <_rl_pushed_input_available@plt>
   1896c:	cbnz	w0, 18994 <_rl_dispatch_subseq@@Base+0x1e0>
   18970:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18974:	ldr	x8, [x8, #3760]
   18978:	mov	w9, #0x3e8                 	// #1000
   1897c:	ldr	w8, [x8]
   18980:	mul	w9, w8, w9
   18984:	cmp	w8, #0x0
   18988:	csel	w0, w9, wzr, gt
   1898c:	bl	16cd0 <_rl_input_queued@plt>
   18990:	cbz	w0, 18a08 <_rl_dispatch_subseq@@Base+0x254>
   18994:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18998:	ldr	x8, [x8, #4032]
   1899c:	cmp	x20, x8
   189a0:	b.ne	18c98 <_rl_dispatch_subseq@@Base+0x4e4>  // b.any
   189a4:	cmp	w19, #0x1b
   189a8:	b.ne	18c98 <_rl_dispatch_subseq@@Base+0x4e4>  // b.any
   189ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   189b0:	ldr	x8, [x8, #3416]
   189b4:	ldr	w8, [x8]
   189b8:	cbnz	w8, 18c98 <_rl_dispatch_subseq@@Base+0x4e4>
   189bc:	ldr	x8, [x24]
   189c0:	mov	w9, #0x800                 	// #2048
   189c4:	movk	w9, #0x2, lsl #16
   189c8:	and	x8, x8, x9
   189cc:	cmp	x8, #0x800
   189d0:	b.ne	18c94 <_rl_dispatch_subseq@@Base+0x4e0>  // b.any
   189d4:	bl	16fa0 <_rl_peek_macro_key@plt>
   189d8:	cbnz	w0, 18c94 <_rl_dispatch_subseq@@Base+0x4e0>
   189dc:	bl	17290 <_rl_pushed_input_available@plt>
   189e0:	cbnz	w0, 18c94 <_rl_dispatch_subseq@@Base+0x4e0>
   189e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   189e8:	ldr	x8, [x8, #3760]
   189ec:	mov	w9, #0x3e8                 	// #1000
   189f0:	ldr	w8, [x8]
   189f4:	mul	w9, w8, w9
   189f8:	cmp	w8, #0x0
   189fc:	csel	w0, w9, wzr, gt
   18a00:	bl	16cd0 <_rl_input_queued@plt>
   18a04:	cbnz	w0, 18c94 <_rl_dispatch_subseq@@Base+0x4e0>
   18a08:	ldr	x20, [x26]
   18a0c:	mov	w19, #0x100                 	// #256
   18a10:	b	18904 <_rl_dispatch_subseq@@Base+0x150>
   18a14:	ldr	x8, [x20, #4104]
   18a18:	cbz	x8, 18c08 <_rl_dispatch_subseq@@Base+0x454>
   18a1c:	ldrb	w8, [x24, #1]
   18a20:	tbnz	w8, #3, 18c20 <_rl_dispatch_subseq@@Base+0x46c>
   18a24:	mov	w0, w19
   18a28:	bl	169e0 <_rl_unget_char@plt>
   18a2c:	mov	w22, #0xfffffffe            	// #-2
   18a30:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18a34:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18a38:	ldr	x10, [x10, #3688]
   18a3c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18a40:	ldr	w8, [x22]
   18a44:	ldr	x12, [x12, #2080]
   18a48:	str	x20, [x10]
   18a4c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18a50:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18a54:	ldrsw	x9, [x12]
   18a58:	ldr	x10, [x10, #1944]
   18a5c:	add	w11, w8, #0x2
   18a60:	cmp	w11, w9
   18a64:	str	w19, [x10]
   18a68:	ldr	x20, [x20, #2888]
   18a6c:	b.ge	18ac4 <_rl_dispatch_subseq@@Base+0x310>  // b.tcont
   18a70:	ldr	x0, [x20]
   18a74:	b	18adc <_rl_dispatch_subseq@@Base+0x328>
   18a78:	cmp	w9, #0x2
   18a7c:	b.ne	18b94 <_rl_dispatch_subseq@@Base+0x3e0>  // b.any
   18a80:	add	x20, x20, x8, lsl #4
   18a84:	ldr	x8, [x20, #8]!
   18a88:	cbz	x8, 18b94 <_rl_dispatch_subseq@@Base+0x3e0>
   18a8c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18a90:	ldr	x8, [x8, #2888]
   18a94:	ldrsw	x9, [x22]
   18a98:	ldr	x8, [x8]
   18a9c:	strb	wzr, [x8, x9]
   18aa0:	ldr	x0, [x20]
   18aa4:	bl	16440 <strlen@plt>
   18aa8:	add	x0, x0, #0x1
   18aac:	bl	16bf0 <xmalloc@plt>
   18ab0:	ldr	x1, [x20]
   18ab4:	bl	17480 <strcpy@plt>
   18ab8:	bl	16d60 <_rl_with_macro_input@plt>
   18abc:	mov	w22, wzr
   18ac0:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18ac4:	ldr	x0, [x20]
   18ac8:	add	x1, x9, #0x10
   18acc:	str	w1, [x12]
   18ad0:	bl	16a50 <xrealloc@plt>
   18ad4:	ldr	w8, [x22]
   18ad8:	str	x0, [x20]
   18adc:	add	w9, w8, #0x1
   18ae0:	str	w9, [x22]
   18ae4:	strb	w19, [x0, w8, sxtw]
   18ae8:	ldr	x8, [x20]
   18aec:	ldrsw	x9, [x22]
   18af0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18af4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18af8:	ldr	x20, [x20, #3784]
   18afc:	ldr	x11, [x11, #3904]
   18b00:	strb	wzr, [x8, x9]
   18b04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b08:	ldr	x8, [x8, #3720]
   18b0c:	ldr	x9, [x24]
   18b10:	ldr	w11, [x11]
   18b14:	mov	w10, #0x1                   	// #1
   18b18:	ldr	w8, [x8]
   18b1c:	orr	x9, x9, #0x20
   18b20:	mov	w1, w19
   18b24:	str	w10, [x20]
   18b28:	mul	w0, w8, w11
   18b2c:	str	x9, [x24]
   18b30:	blr	x27
   18b34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b38:	ldr	x8, [x24]
   18b3c:	ldr	x9, [x9, #3328]
   18b40:	mov	w22, w0
   18b44:	str	wzr, [x20]
   18b48:	and	x8, x8, #0xffffffffffffffdf
   18b4c:	ldr	w9, [x9]
   18b50:	str	x8, [x24]
   18b54:	cbnz	w9, 18b78 <_rl_dispatch_subseq@@Base+0x3c4>
   18b58:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b5c:	ldr	x8, [x26]
   18b60:	ldr	x9, [x9, #1936]
   18b64:	cmp	x8, x9
   18b68:	b.eq	18b78 <_rl_dispatch_subseq@@Base+0x3c4>  // b.none
   18b6c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b70:	ldr	x9, [x9, #2072]
   18b74:	str	x8, [x9]
   18b78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b7c:	ldr	x8, [x8, #2808]
   18b80:	ldr	w9, [x8]
   18b84:	cbz	w9, 18b98 <_rl_dispatch_subseq@@Base+0x3e4>
   18b88:	ldr	w0, [x8]
   18b8c:	bl	17460 <_rl_signal_handler@plt>
   18b90:	b	18b98 <_rl_dispatch_subseq@@Base+0x3e4>
   18b94:	mov	w22, wzr
   18b98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18b9c:	ldr	x9, [x23]
   18ba0:	ldr	x8, [x8, #3824]
   18ba4:	cmp	x9, x8
   18ba8:	b.ne	18c74 <_rl_dispatch_subseq@@Base+0x4c0>  // b.any
   18bac:	cmp	w19, #0x100
   18bb0:	b.eq	18c74 <_rl_dispatch_subseq@@Base+0x4c0>  // b.none
   18bb4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18bb8:	ldr	x9, [x9, #3416]
   18bbc:	ldr	w9, [x9]
   18bc0:	cbnz	w9, 18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18bc4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18bc8:	ldr	x9, [x9, #1992]
   18bcc:	ldr	x9, [x9]
   18bd0:	cmp	x9, x8
   18bd4:	b.ne	18c74 <_rl_dispatch_subseq@@Base+0x4c0>  // b.any
   18bd8:	mov	w0, w19
   18bdc:	bl	17870 <_rl_vi_textmod_command@plt>
   18be0:	cbz	w0, 18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18be4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18be8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18bec:	ldr	x8, [x8, #3904]
   18bf0:	ldr	x9, [x9, #3720]
   18bf4:	mov	w0, w19
   18bf8:	ldr	w1, [x8]
   18bfc:	ldr	w2, [x9]
   18c00:	bl	17190 <_rl_vi_set_last@plt>
   18c04:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18c08:	ldr	x8, [x24]
   18c0c:	cbz	w21, 18c2c <_rl_dispatch_subseq@@Base+0x478>
   18c10:	tbnz	w8, #11, 18c6c <_rl_dispatch_subseq@@Base+0x4b8>
   18c14:	mov	w0, w19
   18c18:	bl	169e0 <_rl_unget_char@plt>
   18c1c:	b	18c70 <_rl_dispatch_subseq@@Base+0x4bc>
   18c20:	bl	16a90 <_rl_prev_macro_key@plt>
   18c24:	mov	w22, #0xfffffffe            	// #-2
   18c28:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18c2c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18c30:	ldr	x19, [x19, #3832]
   18c34:	and	x8, x8, #0xffffffffffdfffff
   18c38:	str	x8, [x24]
   18c3c:	ldr	x0, [x19]
   18c40:	cbz	x0, 18c58 <_rl_dispatch_subseq@@Base+0x4a4>
   18c44:	ldr	x8, [x0, #32]
   18c48:	str	x8, [x19]
   18c4c:	bl	169f0 <xfree@plt>
   18c50:	ldr	x0, [x19]
   18c54:	cbnz	x0, 18c44 <_rl_dispatch_subseq@@Base+0x490>
   18c58:	bl	174a0 <_rl_abort_internal@plt>
   18c5c:	b	18c70 <_rl_dispatch_subseq@@Base+0x4bc>
   18c60:	bl	17390 <rl_ding@plt>
   18c64:	mov	w22, wzr
   18c68:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18c6c:	bl	16a90 <_rl_prev_macro_key@plt>
   18c70:	mov	w22, #0xffffffff            	// #-1
   18c74:	mov	w0, w22
   18c78:	ldp	x20, x19, [sp, #80]
   18c7c:	ldp	x22, x21, [sp, #64]
   18c80:	ldp	x24, x23, [sp, #48]
   18c84:	ldp	x26, x25, [sp, #32]
   18c88:	ldp	x28, x27, [sp, #16]
   18c8c:	ldp	x29, x30, [sp], #96
   18c90:	ret
   18c94:	mov	w27, #0x1                   	// #1
   18c98:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18c9c:	ldr	w8, [x22]
   18ca0:	ldr	x11, [x11, #2080]
   18ca4:	add	w10, w8, #0x2
   18ca8:	ldrsw	x9, [x11]
   18cac:	cmp	w10, w9
   18cb0:	b.ge	18cc4 <_rl_dispatch_subseq@@Base+0x510>  // b.tcont
   18cb4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18cb8:	ldr	x9, [x9, #2888]
   18cbc:	ldr	x0, [x9]
   18cc0:	b	18ce4 <_rl_dispatch_subseq@@Base+0x530>
   18cc4:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18cc8:	ldr	x25, [x25, #2888]
   18ccc:	add	x1, x9, #0x10
   18cd0:	str	w1, [x11]
   18cd4:	ldr	x0, [x25]
   18cd8:	bl	16a50 <xrealloc@plt>
   18cdc:	ldr	w8, [x22]
   18ce0:	str	x0, [x25]
   18ce4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18ce8:	ldr	x10, [x10, #3576]
   18cec:	add	w9, w8, #0x1
   18cf0:	str	w9, [x22]
   18cf4:	strb	w19, [x0, w8, sxtw]
   18cf8:	ldr	x9, [x26]
   18cfc:	ldr	w10, [x10]
   18d00:	ldr	x8, [x24]
   18d04:	str	x9, [x23]
   18d08:	cbz	w10, 18d20 <_rl_dispatch_subseq@@Base+0x56c>
   18d0c:	tbz	w8, #19, 18d20 <_rl_dispatch_subseq@@Base+0x56c>
   18d10:	ldr	x9, [x20, #4104]
   18d14:	cbz	x9, 18d20 <_rl_dispatch_subseq@@Base+0x56c>
   18d18:	mov	w0, #0xfffffffe            	// #-2
   18d1c:	b	18e24 <_rl_dispatch_subseq@@Base+0x670>
   18d20:	tbnz	w8, #19, 18d9c <_rl_dispatch_subseq@@Base+0x5e8>
   18d24:	mov	w9, #0x800                 	// #2048
   18d28:	movk	w9, #0x2, lsl #16
   18d2c:	tst	x8, x9
   18d30:	b.ne	18d50 <_rl_dispatch_subseq@@Base+0x59c>  // b.any
   18d34:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18d38:	ldr	x8, [x8, #3760]
   18d3c:	ldr	w8, [x8]
   18d40:	cmp	w8, #0x1
   18d44:	b.lt	18d50 <_rl_dispatch_subseq@@Base+0x59c>  // b.tstop
   18d48:	bl	17290 <_rl_pushed_input_available@plt>
   18d4c:	cbz	w0, 18e4c <_rl_dispatch_subseq@@Base+0x698>
   18d50:	ldr	x8, [x24]
   18d54:	cbz	w27, 18d60 <_rl_dispatch_subseq@@Base+0x5ac>
   18d58:	orr	x8, x8, #0x10
   18d5c:	str	x8, [x24]
   18d60:	orr	x8, x8, #0x40
   18d64:	str	x8, [x24]
   18d68:	bl	16e60 <rl_read_key@plt>
   18d6c:	ldr	x8, [x24]
   18d70:	cmp	w27, #0x0
   18d74:	mov	x9, #0xffffffffffffffbf    	// #-65
   18d78:	mov	x10, #0xffffffffffffffaf    	// #-81
   18d7c:	csel	x9, x10, x9, ne  // ne = any
   18d80:	and	x8, x8, x9
   18d84:	str	x8, [x24]
   18d88:	tbnz	w0, #31, 18c58 <_rl_dispatch_subseq@@Base+0x4a4>
   18d8c:	ldr	x1, [x23]
   18d90:	cbz	w21, 18e14 <_rl_dispatch_subseq@@Base+0x660>
   18d94:	mov	w2, #0x1                   	// #1
   18d98:	b	18e20 <_rl_dispatch_subseq@@Base+0x66c>
   18d9c:	tst	x8, #0x200000
   18da0:	mov	w8, #0xfffffffd            	// #-3
   18da4:	mov	w0, #0x30                  	// #48
   18da8:	csel	w22, wzr, w8, eq  // eq = none
   18dac:	bl	16bf0 <xmalloc@plt>
   18db0:	stp	xzr, xzr, [x0]
   18db4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18db8:	ldr	x8, [x8, #3832]
   18dbc:	mov	w10, #0x2a                  	// #42
   18dc0:	ldr	x9, [x8]
   18dc4:	str	w10, [x0, #40]
   18dc8:	str	x9, [x0, #32]
   18dcc:	cbz	w21, 18dd8 <_rl_dispatch_subseq@@Base+0x624>
   18dd0:	mov	w9, #0x2                   	// #2
   18dd4:	str	w9, [x0]
   18dd8:	str	w19, [x0, #12]
   18ddc:	ldr	x9, [x23]
   18de0:	stp	x9, x20, [x0, #16]
   18de4:	cbz	w21, 18df0 <_rl_dispatch_subseq@@Base+0x63c>
   18de8:	mov	w9, #0x1                   	// #1
   18dec:	b	18dfc <_rl_dispatch_subseq@@Base+0x648>
   18df0:	ldr	x9, [x9, #4104]
   18df4:	cmp	x9, #0x0
   18df8:	cset	w9, ne  // ne = any
   18dfc:	str	w9, [x0, #4]
   18e00:	ldr	x9, [x24]
   18e04:	str	x0, [x8]
   18e08:	orr	x9, x9, #0x200000
   18e0c:	str	x9, [x24]
   18e10:	b	18c74 <_rl_dispatch_subseq@@Base+0x4c0>
   18e14:	ldr	x8, [x20, #4104]
   18e18:	cmp	x8, #0x0
   18e1c:	cset	w2, ne  // ne = any
   18e20:	bl	17440 <_rl_dispatch_subseq@plt>
   18e24:	mov	x1, x20
   18e28:	mov	w2, w19
   18e2c:	mov	w3, w21
   18e30:	ldp	x20, x19, [sp, #80]
   18e34:	ldp	x22, x21, [sp, #64]
   18e38:	ldp	x24, x23, [sp, #48]
   18e3c:	ldp	x26, x25, [sp, #32]
   18e40:	ldp	x28, x27, [sp, #16]
   18e44:	ldp	x29, x30, [sp], #96
   18e48:	b	18e78 <_rl_dispatch_subseq@@Base+0x6c4>
   18e4c:	ldr	x8, [x23]
   18e50:	ldr	x8, [x8, #4104]
   18e54:	cbz	x8, 18d50 <_rl_dispatch_subseq@@Base+0x59c>
   18e58:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18e5c:	ldr	x8, [x8, #3760]
   18e60:	mov	w9, #0x3e8                 	// #1000
   18e64:	ldr	w8, [x8]
   18e68:	mul	w0, w8, w9
   18e6c:	bl	16cd0 <_rl_input_queued@plt>
   18e70:	cbnz	w0, 18d50 <_rl_dispatch_subseq@@Base+0x59c>
   18e74:	b	18d18 <_rl_dispatch_subseq@@Base+0x564>
   18e78:	stp	x29, x30, [sp, #-64]!
   18e7c:	stp	x20, x19, [sp, #48]
   18e80:	mov	w20, w2
   18e84:	cmn	w0, #0x2
   18e88:	mov	x19, x1
   18e8c:	stp	x24, x23, [sp, #16]
   18e90:	stp	x22, x21, [sp, #32]
   18e94:	mov	x29, sp
   18e98:	b.ne	18ef8 <_rl_dispatch_subseq@@Base+0x744>  // b.any
   18e9c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18ea0:	ldr	x21, [x21, #2112]
   18ea4:	ldr	x1, [x21]
   18ea8:	add	x8, x1, #0x1, lsl #12
   18eac:	ldrb	w9, [x8]
   18eb0:	ldr	x8, [x8, #8]
   18eb4:	cbnz	w9, 18f20 <_rl_dispatch_subseq@@Base+0x76c>
   18eb8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18ebc:	ldr	x10, [x10, #3000]
   18ec0:	cmp	x8, x10
   18ec4:	b.ne	18f20 <_rl_dispatch_subseq@@Base+0x76c>  // b.any
   18ec8:	bl	17100 <__ctype_b_loc@plt>
   18ecc:	ldr	x8, [x0]
   18ed0:	and	w20, w20, #0xff
   18ed4:	ldrh	w8, [x8, w20, uxtw #1]
   18ed8:	tbz	w8, #8, 18ee8 <_rl_dispatch_subseq@@Base+0x734>
   18edc:	bl	16810 <__ctype_tolower_loc@plt>
   18ee0:	ldr	x8, [x0]
   18ee4:	ldr	w20, [x8, x20, lsl #2]
   18ee8:	str	x19, [x21]
   18eec:	mov	w0, w20
   18ef0:	mov	x1, x19
   18ef4:	b	18f28 <_rl_dispatch_subseq@@Base+0x774>
   18ef8:	tbz	w0, #31, 18fb8 <_rl_dispatch_subseq@@Base+0x804>
   18efc:	ldr	x8, [x19, #4104]
   18f00:	cbz	x8, 18f70 <_rl_dispatch_subseq@@Base+0x7bc>
   18f04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18f08:	ldr	x8, [x8, #2984]
   18f0c:	ldrb	w8, [x8, #1]
   18f10:	tbnz	w8, #3, 18f90 <_rl_dispatch_subseq@@Base+0x7dc>
   18f14:	mov	w0, w20
   18f18:	bl	169e0 <_rl_unget_char@plt>
   18f1c:	b	18f94 <_rl_dispatch_subseq@@Base+0x7e0>
   18f20:	cbz	w9, 18f40 <_rl_dispatch_subseq@@Base+0x78c>
   18f24:	mov	w0, #0x100                 	// #256
   18f28:	ldp	x20, x19, [sp, #48]
   18f2c:	ldp	x22, x21, [sp, #32]
   18f30:	ldp	x24, x23, [sp, #16]
   18f34:	mov	w2, wzr
   18f38:	ldp	x29, x30, [sp], #64
   18f3c:	b	17440 <_rl_dispatch_subseq@plt>
   18f40:	add	x22, x1, w20, sxtw #4
   18f44:	ldrb	w23, [x22]
   18f48:	ldr	x24, [x22, #8]
   18f4c:	mov	w0, w20
   18f50:	mov	w2, wzr
   18f54:	strb	wzr, [x22]
   18f58:	str	x8, [x22, #8]
   18f5c:	str	x19, [x21]
   18f60:	bl	17440 <_rl_dispatch_subseq@plt>
   18f64:	strb	w23, [x22]
   18f68:	str	x24, [x22, #8]
   18f6c:	b	18fb8 <_rl_dispatch_subseq@@Base+0x804>
   18f70:	cbz	w3, 18fb8 <_rl_dispatch_subseq@@Base+0x804>
   18f74:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18f78:	ldr	x8, [x8, #2984]
   18f7c:	ldrb	w8, [x8, #1]
   18f80:	tbnz	w8, #3, 18fa4 <_rl_dispatch_subseq@@Base+0x7f0>
   18f84:	mov	w0, w20
   18f88:	bl	169e0 <_rl_unget_char@plt>
   18f8c:	b	18fa8 <_rl_dispatch_subseq@@Base+0x7f4>
   18f90:	bl	16a90 <_rl_prev_macro_key@plt>
   18f94:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18f98:	ldr	x8, [x8, #2112]
   18f9c:	mov	w0, #0xfffffffe            	// #-2
   18fa0:	b	18fb4 <_rl_dispatch_subseq@@Base+0x800>
   18fa4:	bl	16a90 <_rl_prev_macro_key@plt>
   18fa8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18fac:	ldr	x8, [x8, #2112]
   18fb0:	mov	w0, #0xffffffff            	// #-1
   18fb4:	str	x19, [x8]
   18fb8:	ldp	x20, x19, [sp, #48]
   18fbc:	ldp	x22, x21, [sp, #32]
   18fc0:	ldp	x24, x23, [sp, #16]
   18fc4:	ldp	x29, x30, [sp], #64
   18fc8:	ret

0000000000018fcc <rl_save_state@@Base>:
   18fcc:	cbz	x0, 1917c <rl_save_state@@Base+0x1b0>
   18fd0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18fd4:	ldr	x9, [x9, #3512]
   18fd8:	mov	x8, x0
   18fdc:	mov	w0, wzr
   18fe0:	ldr	w9, [x9]
   18fe4:	str	w9, [x8]
   18fe8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18fec:	ldr	x9, [x9, #2656]
   18ff0:	ldr	w9, [x9]
   18ff4:	str	w9, [x8, #4]
   18ff8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   18ffc:	ldr	x9, [x9, #3272]
   19000:	ldr	w9, [x9]
   19004:	str	w9, [x8, #8]
   19008:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1900c:	ldr	x9, [x9, #2480]
   19010:	ldr	x9, [x9]
   19014:	str	x9, [x8, #16]
   19018:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1901c:	ldr	x9, [x9, #3808]
   19020:	ldr	w9, [x9]
   19024:	str	w9, [x8, #12]
   19028:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1902c:	ldr	x9, [x9, #3040]
   19030:	ldr	x9, [x9]
   19034:	str	x9, [x8, #24]
   19038:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1903c:	ldr	x9, [x9, #2016]
   19040:	ldr	x9, [x9]
   19044:	str	x9, [x8, #32]
   19048:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1904c:	ldr	x9, [x9, #2984]
   19050:	ldr	x9, [x9]
   19054:	str	w9, [x8, #40]
   19058:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1905c:	ldr	x9, [x9, #3296]
   19060:	ldr	w9, [x9]
   19064:	str	w9, [x8, #44]
   19068:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1906c:	ldr	x9, [x9, #1992]
   19070:	ldr	x9, [x9]
   19074:	str	x9, [x8, #48]
   19078:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1907c:	ldr	x9, [x9, #2072]
   19080:	ldr	x9, [x9]
   19084:	str	x9, [x8, #56]
   19088:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1908c:	ldr	x9, [x9, #3976]
   19090:	ldr	w9, [x9]
   19094:	str	w9, [x8, #64]
   19098:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1909c:	ldr	x9, [x9, #3416]
   190a0:	ldr	w9, [x9]
   190a4:	str	w9, [x8, #68]
   190a8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190ac:	ldr	x9, [x9, #2888]
   190b0:	ldr	x9, [x9]
   190b4:	str	x9, [x8, #72]
   190b8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190bc:	ldr	x9, [x9, #3144]
   190c0:	ldr	w9, [x9]
   190c4:	str	w9, [x8, #80]
   190c8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190cc:	ldr	x9, [x9, #3176]
   190d0:	ldr	x9, [x9]
   190d4:	str	x9, [x8, #88]
   190d8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190dc:	ldr	x9, [x9, #1928]
   190e0:	ldr	x9, [x9]
   190e4:	str	x9, [x8, #96]
   190e8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190ec:	ldr	x9, [x9, #3328]
   190f0:	ldr	w9, [x9]
   190f4:	str	w9, [x8, #84]
   190f8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   190fc:	ldr	x9, [x9, #3488]
   19100:	ldr	x9, [x9]
   19104:	str	x9, [x8, #104]
   19108:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1910c:	ldr	x9, [x9, #3872]
   19110:	ldr	w9, [x9]
   19114:	str	w9, [x8, #112]
   19118:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1911c:	ldr	x9, [x9, #3696]
   19120:	ldr	w9, [x9]
   19124:	str	w9, [x8, #116]
   19128:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1912c:	ldr	x9, [x9, #3376]
   19130:	ldr	x9, [x9]
   19134:	str	x9, [x8, #120]
   19138:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1913c:	ldr	x9, [x9, #2728]
   19140:	ldr	x9, [x9]
   19144:	str	x9, [x8, #128]
   19148:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1914c:	ldr	x9, [x9, #3280]
   19150:	ldr	x9, [x9]
   19154:	str	x9, [x8, #136]
   19158:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1915c:	ldr	x9, [x9, #2120]
   19160:	ldr	x9, [x9]
   19164:	str	x9, [x8, #144]
   19168:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1916c:	ldr	x9, [x9, #2856]
   19170:	ldr	x9, [x9]
   19174:	str	x9, [x8, #152]
   19178:	ret
   1917c:	mov	w0, #0xffffffff            	// #-1
   19180:	ret

0000000000019184 <rl_restore_state@@Base>:
   19184:	cbz	x0, 19338 <rl_restore_state@@Base+0x1b4>
   19188:	mov	x8, x0
   1918c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19190:	ldr	w9, [x8]
   19194:	ldr	x10, [x10, #3512]
   19198:	mov	w0, wzr
   1919c:	str	w9, [x10]
   191a0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191a4:	ldr	w9, [x8, #4]
   191a8:	ldr	x10, [x10, #2656]
   191ac:	str	w9, [x10]
   191b0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191b4:	ldr	w9, [x8, #8]
   191b8:	ldr	x10, [x10, #3272]
   191bc:	str	w9, [x10]
   191c0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191c4:	ldr	x9, [x8, #16]
   191c8:	ldr	x10, [x10, #2480]
   191cc:	str	x9, [x10]
   191d0:	adrp	x10, 57000 <rl_insert@@Base+0x20abc>
   191d4:	str	x9, [x10, #4080]
   191d8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191dc:	ldr	w9, [x8, #12]
   191e0:	ldr	x10, [x10, #3808]
   191e4:	str	w9, [x10]
   191e8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191ec:	ldr	x9, [x8, #24]
   191f0:	ldr	x10, [x10, #3040]
   191f4:	str	x9, [x10]
   191f8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   191fc:	ldr	x9, [x8, #32]
   19200:	ldr	x10, [x10, #2016]
   19204:	str	x9, [x10]
   19208:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1920c:	ldrsw	x9, [x8, #40]
   19210:	ldr	x10, [x10, #2984]
   19214:	str	x9, [x10]
   19218:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1921c:	ldr	w9, [x8, #44]
   19220:	ldr	x10, [x10, #3296]
   19224:	str	w9, [x10]
   19228:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1922c:	ldr	x9, [x8, #48]
   19230:	ldr	x10, [x10, #1992]
   19234:	str	x9, [x10]
   19238:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1923c:	ldr	x9, [x8, #56]
   19240:	ldr	x10, [x10, #2072]
   19244:	str	x9, [x10]
   19248:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1924c:	ldr	w9, [x8, #64]
   19250:	ldr	x10, [x10, #3976]
   19254:	str	w9, [x10]
   19258:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1925c:	ldr	w9, [x8, #68]
   19260:	ldr	x10, [x10, #3416]
   19264:	str	w9, [x10]
   19268:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1926c:	ldr	x9, [x8, #72]
   19270:	ldr	x10, [x10, #2888]
   19274:	str	x9, [x10]
   19278:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1927c:	ldr	w9, [x8, #80]
   19280:	ldr	x10, [x10, #3144]
   19284:	str	w9, [x10]
   19288:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1928c:	ldr	x9, [x8, #88]
   19290:	ldr	x10, [x10, #3176]
   19294:	str	x9, [x10]
   19298:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1929c:	ldr	x9, [x8, #96]
   192a0:	ldr	x10, [x10, #1928]
   192a4:	str	x9, [x10]
   192a8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192ac:	ldr	w9, [x8, #84]
   192b0:	ldr	x10, [x10, #3328]
   192b4:	str	w9, [x10]
   192b8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192bc:	ldr	x9, [x8, #104]
   192c0:	ldr	x10, [x10, #3488]
   192c4:	str	x9, [x10]
   192c8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192cc:	ldr	w9, [x8, #112]
   192d0:	ldr	x10, [x10, #3872]
   192d4:	str	w9, [x10]
   192d8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192dc:	ldr	w9, [x8, #116]
   192e0:	ldr	x10, [x10, #3696]
   192e4:	str	w9, [x10]
   192e8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192ec:	ldr	x9, [x8, #120]
   192f0:	ldr	x10, [x10, #3376]
   192f4:	str	x9, [x10]
   192f8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   192fc:	ldr	x9, [x8, #128]
   19300:	ldr	x10, [x10, #2728]
   19304:	str	x9, [x10]
   19308:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1930c:	ldr	x9, [x8, #136]
   19310:	ldr	x10, [x10, #3280]
   19314:	str	x9, [x10]
   19318:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1931c:	ldp	x9, x8, [x8, #144]
   19320:	ldr	x10, [x10, #2120]
   19324:	str	x9, [x10]
   19328:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1932c:	ldr	x9, [x9, #2856]
   19330:	str	x8, [x9]
   19334:	ret
   19338:	mov	w0, #0xffffffff            	// #-1
   1933c:	ret
   19340:	stp	x29, x30, [sp, #-80]!
   19344:	stp	x26, x25, [sp, #16]
   19348:	stp	x24, x23, [sp, #32]
   1934c:	stp	x22, x21, [sp, #48]
   19350:	stp	x20, x19, [sp, #64]
   19354:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19358:	ldr	x25, [x25, #1992]
   1935c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19360:	mov	x29, sp
   19364:	ldr	x26, [x25]
   19368:	str	x0, [x25]
   1936c:	ldr	x19, [x19, #3096]
   19370:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   19374:	add	x0, x0, #0xaab
   19378:	mov	x1, x19
   1937c:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19380:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19384:	ldr	x20, [x20, #3384]
   19388:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1938c:	add	x0, x0, #0xaaf
   19390:	mov	x1, x20
   19394:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19398:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1939c:	ldr	x21, [x21, #2272]
   193a0:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   193a4:	add	x0, x0, #0xab3
   193a8:	mov	x1, x21
   193ac:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   193b0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   193b4:	ldr	x22, [x22, #2976]
   193b8:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   193bc:	add	x0, x0, #0xab7
   193c0:	mov	x1, x22
   193c4:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   193c8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   193cc:	ldr	x23, [x23, #3648]
   193d0:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   193d4:	add	x0, x0, #0xabb
   193d8:	mov	x1, x23
   193dc:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   193e0:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   193e4:	ldr	x24, [x24, #3184]
   193e8:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   193ec:	add	x0, x0, #0xabf
   193f0:	mov	x1, x24
   193f4:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   193f8:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   193fc:	add	x0, x0, #0xac3
   19400:	mov	x1, x19
   19404:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19408:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1940c:	add	x0, x0, #0xac7
   19410:	mov	x1, x20
   19414:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19418:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1941c:	add	x0, x0, #0xacb
   19420:	mov	x1, x21
   19424:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19428:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1942c:	add	x0, x0, #0xacf
   19430:	mov	x1, x22
   19434:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19438:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1943c:	add	x0, x0, #0xad3
   19440:	mov	x1, x23
   19444:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19448:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1944c:	add	x0, x0, #0xad7
   19450:	mov	x1, x24
   19454:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19458:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1945c:	ldr	x19, [x19, #2128]
   19460:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   19464:	add	x0, x0, #0xadb
   19468:	mov	x1, x19
   1946c:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19470:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19474:	ldr	x20, [x20, #2504]
   19478:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1947c:	add	x0, x0, #0xae2
   19480:	mov	x1, x20
   19484:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   19488:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1948c:	ldr	x1, [x1, #3848]
   19490:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   19494:	add	x0, x0, #0xae9
   19498:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   1949c:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   194a0:	add	x0, x0, #0xaf0
   194a4:	mov	x1, x19
   194a8:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   194ac:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   194b0:	add	x0, x0, #0xaf7
   194b4:	mov	x1, x20
   194b8:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   194bc:	str	x26, [x25]
   194c0:	ldp	x20, x19, [sp, #64]
   194c4:	ldp	x22, x21, [sp, #48]
   194c8:	ldp	x24, x23, [sp, #32]
   194cc:	ldp	x26, x25, [sp, #16]
   194d0:	ldp	x29, x30, [sp], #80
   194d4:	ret

00000000000194d8 <_rl_vi_initialize_line@@Base>:
   194d8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   194dc:	ldr	x10, [x10, #2984]
   194e0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   194e4:	add	x8, x8, #0x8
   194e8:	mov	x9, #0xffffffffffffffff    	// #-1
   194ec:	str	x9, [x8, #96]
   194f0:	ldr	x9, [x10]
   194f4:	movi	v0.2d, #0xffffffffffffffff
   194f8:	stp	q0, q0, [x8, #64]
   194fc:	stp	q0, q0, [x8, #32]
   19500:	stp	q0, q0, [x8]
   19504:	and	x8, x9, #0xffffffffffbfffff
   19508:	str	x8, [x10]
   1950c:	ret

0000000000019510 <_rl_vi_reset_last@@Base>:
   19510:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19514:	ldr	x8, [x8, #3640]
   19518:	mov	w9, #0x69                  	// #105
   1951c:	adrp	x10, 52000 <_rl_set_normal_color@@Base+0x14254>
   19520:	mov	w11, #0x1                   	// #1
   19524:	adrp	x12, 52000 <_rl_set_normal_color@@Base+0x14254>
   19528:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   1952c:	str	w9, [x8]
   19530:	str	w11, [x10, #2972]
   19534:	str	w11, [x12, #2976]
   19538:	str	wzr, [x13, #112]
   1953c:	ret

0000000000019540 <_rl_vi_set_last@@Base>:
   19540:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19544:	ldr	x8, [x8, #3640]
   19548:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1954c:	adrp	x10, 52000 <_rl_set_normal_color@@Base+0x14254>
   19550:	str	w1, [x9, #2972]
   19554:	str	w0, [x8]
   19558:	str	w2, [x10, #2976]
   1955c:	ret

0000000000019560 <rl_vi_start_inserting@@Base>:
   19560:	stp	x29, x30, [sp, #-32]!
   19564:	str	x19, [sp, #16]
   19568:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1956c:	ldr	x8, [x8, #3640]
   19570:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   19574:	adrp	x10, 52000 <_rl_set_normal_color@@Base+0x14254>
   19578:	mov	x29, sp
   1957c:	mov	w19, w0
   19580:	str	w0, [x8]
   19584:	str	w1, [x9, #2972]
   19588:	str	w2, [x10, #2976]
   1958c:	bl	16400 <rl_begin_undo_group@plt>
   19590:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19594:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19598:	ldr	x8, [x8, #1992]
   1959c:	ldr	x9, [x9, #2008]
   195a0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   195a4:	ldr	w9, [x9]
   195a8:	ldr	x10, [x10, #4032]
   195ac:	str	x10, [x8]
   195b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   195b4:	str	w19, [x8, #128]
   195b8:	cbz	w9, 195c8 <rl_vi_start_inserting@@Base+0x68>
   195bc:	ldr	x19, [sp, #16]
   195c0:	ldp	x29, x30, [sp], #32
   195c4:	b	17640 <_rl_reset_prompt@plt>
   195c8:	ldr	x19, [sp, #16]
   195cc:	ldp	x29, x30, [sp], #32
   195d0:	ret

00000000000195d4 <rl_vi_insertion_mode@@Base>:
   195d4:	stp	x29, x30, [sp, #-16]!
   195d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   195dc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   195e0:	ldr	x8, [x8, #1992]
   195e4:	ldr	x9, [x9, #2008]
   195e8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   195ec:	mov	x29, sp
   195f0:	ldr	w9, [x9]
   195f4:	ldr	x10, [x10, #4032]
   195f8:	str	x10, [x8]
   195fc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   19600:	str	w1, [x8, #128]
   19604:	cbz	w9, 1960c <rl_vi_insertion_mode@@Base+0x38>
   19608:	bl	17640 <_rl_reset_prompt@plt>
   1960c:	mov	w0, wzr
   19610:	ldp	x29, x30, [sp], #16
   19614:	ret

0000000000019618 <_rl_vi_textmod_command@@Base>:
   19618:	cbz	w0, 19644 <_rl_vi_textmod_command@@Base+0x2c>
   1961c:	stp	x29, x30, [sp, #-16]!
   19620:	mov	w1, w0
   19624:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   19628:	add	x0, x0, #0xc12
   1962c:	mov	w2, #0x17                  	// #23
   19630:	mov	x29, sp
   19634:	bl	17530 <memchr@plt>
   19638:	cmp	x0, #0x0
   1963c:	cset	w0, ne  // ne = any
   19640:	ldp	x29, x30, [sp], #16
   19644:	ret

0000000000019648 <_rl_vi_motion_command@@Base>:
   19648:	cbz	w0, 19674 <_rl_vi_motion_command@@Base+0x2c>
   1964c:	stp	x29, x30, [sp, #-16]!
   19650:	mov	w1, w0
   19654:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   19658:	add	x0, x0, #0xc29
   1965c:	mov	w2, #0x16                  	// #22
   19660:	mov	x29, sp
   19664:	bl	17530 <memchr@plt>
   19668:	cmp	x0, #0x0
   1966c:	cset	w0, ne  // ne = any
   19670:	ldp	x29, x30, [sp], #16
   19674:	ret

0000000000019678 <rl_vi_redo@@Base>:
   19678:	stp	x29, x30, [sp, #-64]!
   1967c:	stp	x24, x23, [sp, #16]
   19680:	stp	x22, x21, [sp, #32]
   19684:	stp	x20, x19, [sp, #48]
   19688:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1968c:	ldr	x8, [x8, #3792]
   19690:	mov	w19, w0
   19694:	mov	x29, sp
   19698:	ldr	w8, [x8]
   1969c:	cbnz	w8, 196c8 <rl_vi_redo@@Base+0x50>
   196a0:	adrp	x8, 52000 <_rl_set_normal_color@@Base+0x14254>
   196a4:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   196a8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   196ac:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   196b0:	ldr	w8, [x8, #2972]
   196b4:	ldr	w9, [x9, #2976]
   196b8:	ldr	x10, [x10, #3904]
   196bc:	ldr	x11, [x11, #3720]
   196c0:	str	w8, [x10]
   196c4:	str	w9, [x11]
   196c8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   196cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   196d0:	ldr	x21, [x21, #3576]
   196d4:	ldr	x8, [x8, #3640]
   196d8:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   196dc:	mov	w9, #0x1                   	// #1
   196e0:	str	w9, [x21]
   196e4:	ldr	w0, [x8]
   196e8:	ldr	x8, [x22, #120]
   196ec:	cmp	w0, #0x69
   196f0:	b.ne	1971c <rl_vi_redo@@Base+0xa4>  // b.any
   196f4:	cbz	x8, 1971c <rl_vi_redo@@Base+0xa4>
   196f8:	ldrb	w8, [x8]
   196fc:	cbz	w8, 198a4 <rl_vi_redo@@Base+0x22c>
   19700:	bl	16400 <rl_begin_undo_group@plt>
   19704:	cbz	w19, 19850 <rl_vi_redo@@Base+0x1d8>
   19708:	ldr	x0, [x22, #120]
   1970c:	sub	w19, w19, #0x1
   19710:	bl	16430 <rl_insert_text@plt>
   19714:	cbnz	w19, 19708 <rl_vi_redo@@Base+0x90>
   19718:	b	19850 <rl_vi_redo@@Base+0x1d8>
   1971c:	cmp	w0, #0x52
   19720:	b.ne	1976c <rl_vi_redo@@Base+0xf4>  // b.any
   19724:	cbz	x8, 1976c <rl_vi_redo@@Base+0xf4>
   19728:	ldrb	w9, [x8]
   1972c:	cbz	w9, 198a4 <rl_vi_redo@@Base+0x22c>
   19730:	mov	x0, x8
   19734:	bl	16440 <strlen@plt>
   19738:	mov	x20, x0
   1973c:	bl	16400 <rl_begin_undo_group@plt>
   19740:	cbz	w19, 19850 <rl_vi_redo@@Base+0x1d8>
   19744:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19748:	ldr	x23, [x23, #3512]
   1974c:	sub	w20, w20, #0x1
   19750:	ldr	w1, [x23]
   19754:	ldr	x0, [x22, #120]
   19758:	sub	w19, w19, #0x1
   1975c:	add	w2, w20, w1
   19760:	bl	175d0 <_rl_replace_text@plt>
   19764:	cbnz	w19, 19750 <rl_vi_redo@@Base+0xd8>
   19768:	b	19850 <rl_vi_redo@@Base+0x1d8>
   1976c:	cmp	w0, #0x49
   19770:	b.ne	197a8 <rl_vi_redo@@Base+0x130>  // b.any
   19774:	cbz	x8, 197a8 <rl_vi_redo@@Base+0x130>
   19778:	ldrb	w8, [x8]
   1977c:	cbz	w8, 198a4 <rl_vi_redo@@Base+0x22c>
   19780:	mov	w0, #0x1                   	// #1
   19784:	mov	w1, #0x49                  	// #73
   19788:	bl	175b0 <rl_beg_of_line@plt>
   1978c:	bl	16400 <rl_begin_undo_group@plt>
   19790:	cbz	w19, 19850 <rl_vi_redo@@Base+0x1d8>
   19794:	ldr	x0, [x22, #120]
   19798:	sub	w19, w19, #0x1
   1979c:	bl	16430 <rl_insert_text@plt>
   197a0:	cbnz	w19, 19794 <rl_vi_redo@@Base+0x11c>
   197a4:	b	19850 <rl_vi_redo@@Base+0x1d8>
   197a8:	cmp	w0, #0x61
   197ac:	b.ne	19818 <rl_vi_redo@@Base+0x1a0>  // b.any
   197b0:	cbz	x8, 19818 <rl_vi_redo@@Base+0x1a0>
   197b4:	ldrb	w8, [x8]
   197b8:	cbz	w8, 198a4 <rl_vi_redo@@Base+0x22c>
   197bc:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   197c0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   197c4:	ldr	x20, [x20, #3512]
   197c8:	ldr	x23, [x23, #2656]
   197cc:	ldr	w8, [x20]
   197d0:	ldr	w9, [x23]
   197d4:	cmp	w8, w9
   197d8:	b.ge	198d4 <rl_vi_redo@@Base+0x25c>  // b.tcont
   197dc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   197e0:	ldr	w24, [x20]
   197e4:	cmp	x0, #0x1
   197e8:	b.eq	198cc <rl_vi_redo@@Base+0x254>  // b.none
   197ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   197f0:	ldr	x8, [x8, #1896]
   197f4:	ldr	w8, [x8]
   197f8:	cbnz	w8, 198cc <rl_vi_redo@@Base+0x254>
   197fc:	mov	w0, #0x1                   	// #1
   19800:	bl	178f0 <_rl_forward_char_internal@plt>
   19804:	ldr	w8, [x23]
   19808:	cmp	w0, w8
   1980c:	ccmp	w24, w0, #0x4, le
   19810:	csel	w8, w8, w0, eq  // eq = none
   19814:	b	198d0 <rl_vi_redo@@Base+0x258>
   19818:	cmp	w0, #0x41
   1981c:	b.ne	198a4 <rl_vi_redo@@Base+0x22c>  // b.any
   19820:	cbz	x8, 198a4 <rl_vi_redo@@Base+0x22c>
   19824:	ldrb	w8, [x8]
   19828:	cbz	w8, 198a4 <rl_vi_redo@@Base+0x22c>
   1982c:	mov	w0, #0x1                   	// #1
   19830:	mov	w1, #0x41                  	// #65
   19834:	bl	170d0 <rl_end_of_line@plt>
   19838:	bl	16400 <rl_begin_undo_group@plt>
   1983c:	cbz	w19, 19850 <rl_vi_redo@@Base+0x1d8>
   19840:	ldr	x0, [x22, #120]
   19844:	sub	w19, w19, #0x1
   19848:	bl	16430 <rl_insert_text@plt>
   1984c:	cbnz	w19, 19840 <rl_vi_redo@@Base+0x1c8>
   19850:	bl	17830 <rl_end_undo_group@plt>
   19854:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19858:	ldr	x19, [x19, #3512]
   1985c:	ldr	w8, [x19]
   19860:	cmp	w8, #0x1
   19864:	b.lt	19938 <rl_vi_redo@@Base+0x2c0>  // b.tstop
   19868:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1986c:	cmp	x0, #0x2
   19870:	b.cc	198b8 <rl_vi_redo@@Base+0x240>  // b.lo, b.ul, b.last
   19874:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19878:	ldr	x8, [x8, #1896]
   1987c:	ldr	w8, [x8]
   19880:	cbnz	w8, 198b8 <rl_vi_redo@@Base+0x240>
   19884:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19888:	ldr	x8, [x8, #2480]
   1988c:	ldr	w1, [x19]
   19890:	mov	w2, #0x1                   	// #1
   19894:	ldr	x0, [x8]
   19898:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1989c:	mov	w8, w0
   198a0:	b	198c0 <rl_vi_redo@@Base+0x248>
   198a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   198a8:	ldr	x8, [x8, #1992]
   198ac:	ldr	x1, [x8]
   198b0:	bl	16c30 <_rl_dispatch@plt>
   198b4:	b	1993c <rl_vi_redo@@Base+0x2c4>
   198b8:	ldr	w8, [x19]
   198bc:	sub	w8, w8, #0x1
   198c0:	mov	w0, wzr
   198c4:	str	w8, [x19]
   198c8:	b	1993c <rl_vi_redo@@Base+0x2c4>
   198cc:	add	w8, w24, #0x1
   198d0:	str	w8, [x20]
   198d4:	bl	16400 <rl_begin_undo_group@plt>
   198d8:	cbz	w19, 198ec <rl_vi_redo@@Base+0x274>
   198dc:	ldr	x0, [x22, #120]
   198e0:	sub	w19, w19, #0x1
   198e4:	bl	16430 <rl_insert_text@plt>
   198e8:	cbnz	w19, 198dc <rl_vi_redo@@Base+0x264>
   198ec:	bl	17830 <rl_end_undo_group@plt>
   198f0:	ldr	w8, [x20]
   198f4:	cmp	w8, #0x1
   198f8:	b.lt	19938 <rl_vi_redo@@Base+0x2c0>  // b.tstop
   198fc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   19900:	cmp	x0, #0x2
   19904:	b.cc	19954 <rl_vi_redo@@Base+0x2dc>  // b.lo, b.ul, b.last
   19908:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1990c:	ldr	x8, [x8, #1896]
   19910:	ldr	w8, [x8]
   19914:	cbnz	w8, 19954 <rl_vi_redo@@Base+0x2dc>
   19918:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1991c:	ldr	x8, [x8, #2480]
   19920:	ldr	w1, [x20]
   19924:	mov	w2, #0x1                   	// #1
   19928:	ldr	x0, [x8]
   1992c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   19930:	mov	w8, w0
   19934:	b	1995c <rl_vi_redo@@Base+0x2e4>
   19938:	mov	w0, wzr
   1993c:	str	wzr, [x21]
   19940:	ldp	x20, x19, [sp, #48]
   19944:	ldp	x22, x21, [sp, #32]
   19948:	ldp	x24, x23, [sp, #16]
   1994c:	ldp	x29, x30, [sp], #64
   19950:	ret
   19954:	ldr	w8, [x20]
   19958:	sub	w8, w8, #0x1
   1995c:	mov	w0, wzr
   19960:	str	w8, [x20]
   19964:	b	1993c <rl_vi_redo@@Base+0x2c4>

0000000000019968 <rl_vi_undo@@Base>:
   19968:	b	16df0 <rl_undo_command@plt>

000000000001996c <rl_vi_yank_arg@@Base>:
   1996c:	stp	x29, x30, [sp, #-16]!
   19970:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19974:	ldr	x8, [x8, #3792]
   19978:	sub	w9, w0, #0x1
   1997c:	mov	w1, wzr
   19980:	mov	x29, sp
   19984:	ldr	w8, [x8]
   19988:	cmp	w8, #0x0
   1998c:	mov	w8, #0x24                  	// #36
   19990:	csel	w0, w8, w9, eq  // eq = none
   19994:	bl	17230 <rl_yank_nth_arg@plt>
   19998:	mov	w0, wzr
   1999c:	ldp	x29, x30, [sp], #16
   199a0:	ret

00000000000199a4 <rl_vi_fetch_history@@Base>:
   199a4:	stp	x29, x30, [sp, #-48]!
   199a8:	str	x21, [sp, #16]
   199ac:	stp	x20, x19, [sp, #32]
   199b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   199b4:	ldr	x8, [x8, #3792]
   199b8:	mov	w20, w0
   199bc:	mov	x29, sp
   199c0:	ldr	w8, [x8]
   199c4:	cbz	w8, 199f8 <rl_vi_fetch_history@@Base+0x54>
   199c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   199cc:	ldr	x8, [x8, #4000]
   199d0:	mov	w19, w1
   199d4:	ldr	w21, [x8]
   199d8:	bl	165a0 <where_history@plt>
   199dc:	sub	w8, w21, w20
   199e0:	add	w0, w8, w0
   199e4:	cmp	w0, #0x0
   199e8:	b.le	19a00 <rl_vi_fetch_history@@Base+0x5c>
   199ec:	mov	w1, w19
   199f0:	bl	17030 <rl_get_previous_history@plt>
   199f4:	b	19a0c <rl_vi_fetch_history@@Base+0x68>
   199f8:	mov	w0, w20
   199fc:	b	19a04 <rl_vi_fetch_history@@Base+0x60>
   19a00:	mov	w0, wzr
   19a04:	mov	w1, wzr
   19a08:	bl	17720 <rl_beginning_of_history@plt>
   19a0c:	ldp	x20, x19, [sp, #32]
   19a10:	ldr	x21, [sp, #16]
   19a14:	mov	w0, wzr
   19a18:	ldp	x29, x30, [sp], #48
   19a1c:	ret

0000000000019a20 <rl_vi_search_again@@Base>:
   19a20:	stp	x29, x30, [sp, #-16]!
   19a24:	cmp	w1, #0x4e
   19a28:	mov	x29, sp
   19a2c:	b.eq	19a40 <rl_vi_search_again@@Base+0x20>  // b.none
   19a30:	cmp	w1, #0x6e
   19a34:	b.ne	19a44 <rl_vi_search_again@@Base+0x24>  // b.any
   19a38:	bl	16b60 <rl_noninc_reverse_search_again@plt>
   19a3c:	b	19a44 <rl_vi_search_again@@Base+0x24>
   19a40:	bl	16aa0 <rl_noninc_forward_search_again@plt>
   19a44:	mov	w0, wzr
   19a48:	ldp	x29, x30, [sp], #16
   19a4c:	ret

0000000000019a50 <rl_vi_search@@Base>:
   19a50:	stp	x29, x30, [sp, #-32]!
   19a54:	str	x19, [sp, #16]
   19a58:	cmp	w1, #0x2f
   19a5c:	mov	w19, w0
   19a60:	mov	x29, sp
   19a64:	b.eq	19a84 <rl_vi_search@@Base+0x34>  // b.none
   19a68:	cmp	w1, #0x3f
   19a6c:	b.ne	19a98 <rl_vi_search@@Base+0x48>  // b.any
   19a70:	bl	17800 <_rl_free_saved_history_line@plt>
   19a74:	mov	w1, #0x3f                  	// #63
   19a78:	mov	w0, w19
   19a7c:	bl	16550 <rl_noninc_forward_search@plt>
   19a80:	b	19a9c <rl_vi_search@@Base+0x4c>
   19a84:	bl	17800 <_rl_free_saved_history_line@plt>
   19a88:	mov	w1, #0x2f                  	// #47
   19a8c:	mov	w0, w19
   19a90:	bl	178b0 <rl_noninc_reverse_search@plt>
   19a94:	b	19a9c <rl_vi_search@@Base+0x4c>
   19a98:	bl	17390 <rl_ding@plt>
   19a9c:	ldr	x19, [sp, #16]
   19aa0:	mov	w0, wzr
   19aa4:	ldp	x29, x30, [sp], #32
   19aa8:	ret

0000000000019aac <rl_vi_complete@@Base>:
   19aac:	stp	x29, x30, [sp, #-48]!
   19ab0:	stp	x22, x21, [sp, #16]
   19ab4:	stp	x20, x19, [sp, #32]
   19ab8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19abc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19ac0:	ldr	x20, [x20, #3512]
   19ac4:	ldr	x21, [x21, #2656]
   19ac8:	mov	w19, w1
   19acc:	mov	x29, sp
   19ad0:	ldrsw	x8, [x20]
   19ad4:	ldr	w9, [x21]
   19ad8:	cmp	w8, w9
   19adc:	b.ge	19b90 <rl_vi_complete@@Base+0xe4>  // b.tcont
   19ae0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19ae4:	ldr	x9, [x9, #2480]
   19ae8:	ldr	x9, [x9]
   19aec:	ldrb	w10, [x9, x8]
   19af0:	cmp	w10, #0x9
   19af4:	b.eq	19b90 <rl_vi_complete@@Base+0xe4>  // b.none
   19af8:	cmp	w10, #0x20
   19afc:	b.eq	19b90 <rl_vi_complete@@Base+0xe4>  // b.none
   19b00:	add	x8, x8, x9
   19b04:	ldrb	w8, [x8, #1]
   19b08:	cmp	w8, #0x9
   19b0c:	b.eq	19b3c <rl_vi_complete@@Base+0x90>  // b.none
   19b10:	cmp	w8, #0x20
   19b14:	b.eq	19b3c <rl_vi_complete@@Base+0x90>  // b.none
   19b18:	bl	17100 <__ctype_b_loc@plt>
   19b1c:	ldr	x8, [x0]
   19b20:	ldrb	w8, [x8, #139]
   19b24:	tbnz	w8, #0, 19b34 <rl_vi_complete@@Base+0x88>
   19b28:	mov	w0, #0x1                   	// #1
   19b2c:	bl	16870 <rl_vi_eword@plt>
   19b30:	b	19b3c <rl_vi_complete@@Base+0x90>
   19b34:	mov	w0, #0x1                   	// #1
   19b38:	bl	16850 <rl_vi_eWord@plt>
   19b3c:	ldr	w8, [x20]
   19b40:	ldr	w9, [x21]
   19b44:	cmp	w8, w9
   19b48:	b.ge	19b90 <rl_vi_complete@@Base+0xe4>  // b.tcont
   19b4c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   19b50:	ldr	w22, [x20]
   19b54:	cmp	x0, #0x1
   19b58:	b.eq	19b88 <rl_vi_complete@@Base+0xdc>  // b.none
   19b5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19b60:	ldr	x8, [x8, #1896]
   19b64:	ldr	w8, [x8]
   19b68:	cbnz	w8, 19b88 <rl_vi_complete@@Base+0xdc>
   19b6c:	mov	w0, #0x1                   	// #1
   19b70:	bl	178f0 <_rl_forward_char_internal@plt>
   19b74:	ldr	w8, [x21]
   19b78:	cmp	w0, w8
   19b7c:	ccmp	w22, w0, #0x4, le
   19b80:	csel	w8, w8, w0, eq  // eq = none
   19b84:	b	19b8c <rl_vi_complete@@Base+0xe0>
   19b88:	add	w8, w22, #0x1
   19b8c:	str	w8, [x20]
   19b90:	cmp	w19, #0x2a
   19b94:	mov	w0, w19
   19b98:	b.eq	19bbc <rl_vi_complete@@Base+0x110>  // b.none
   19b9c:	cmp	w19, #0x5c
   19ba0:	b.eq	19bb8 <rl_vi_complete@@Base+0x10c>  // b.none
   19ba4:	cmp	w19, #0x3d
   19ba8:	b.ne	19c24 <rl_vi_complete@@Base+0x178>  // b.any
   19bac:	mov	w0, #0x3f                  	// #63
   19bb0:	bl	16620 <rl_complete_internal@plt>
   19bb4:	b	19c30 <rl_vi_complete@@Base+0x184>
   19bb8:	mov	w0, #0x9                   	// #9
   19bbc:	bl	16620 <rl_complete_internal@plt>
   19bc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19bc4:	ldr	x8, [x8, #3720]
   19bc8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19bcc:	ldr	x9, [x9, #3640]
   19bd0:	mov	w10, #0x1                   	// #1
   19bd4:	ldr	w8, [x8]
   19bd8:	str	w19, [x9]
   19bdc:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   19be0:	str	w10, [x9, #2972]
   19be4:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   19be8:	str	w8, [x9, #2976]
   19bec:	bl	16400 <rl_begin_undo_group@plt>
   19bf0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19bf4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19bf8:	ldr	x8, [x8, #1992]
   19bfc:	ldr	x9, [x9, #2008]
   19c00:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19c04:	ldr	w9, [x9]
   19c08:	ldr	x10, [x10, #4032]
   19c0c:	str	x10, [x8]
   19c10:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   19c14:	str	w19, [x8, #128]
   19c18:	cbz	w9, 19c30 <rl_vi_complete@@Base+0x184>
   19c1c:	bl	17640 <_rl_reset_prompt@plt>
   19c20:	b	19c30 <rl_vi_complete@@Base+0x184>
   19c24:	mov	w0, wzr
   19c28:	mov	w1, w19
   19c2c:	bl	167e0 <rl_complete@plt>
   19c30:	ldp	x20, x19, [sp, #32]
   19c34:	ldp	x22, x21, [sp, #16]
   19c38:	mov	w0, wzr
   19c3c:	ldp	x29, x30, [sp], #48
   19c40:	ret

0000000000019c44 <rl_vi_end_word@@Base>:
   19c44:	stp	x29, x30, [sp, #-32]!
   19c48:	stp	x20, x19, [sp, #16]
   19c4c:	mov	x29, sp
   19c50:	tbnz	w0, #31, 19c7c <rl_vi_end_word@@Base+0x38>
   19c54:	mov	w20, w1
   19c58:	mov	w19, w0
   19c5c:	bl	17100 <__ctype_b_loc@plt>
   19c60:	ldr	x8, [x0]
   19c64:	and	w9, w20, #0xff
   19c68:	ldrh	w8, [x8, w9, uxtw #1]
   19c6c:	tbnz	w8, #8, 19c88 <rl_vi_end_word@@Base+0x44>
   19c70:	mov	w0, w19
   19c74:	bl	16870 <rl_vi_eword@plt>
   19c78:	b	19c90 <rl_vi_end_word@@Base+0x4c>
   19c7c:	bl	17390 <rl_ding@plt>
   19c80:	mov	w0, #0x1                   	// #1
   19c84:	b	19c94 <rl_vi_end_word@@Base+0x50>
   19c88:	mov	w0, w19
   19c8c:	bl	16850 <rl_vi_eWord@plt>
   19c90:	mov	w0, wzr
   19c94:	ldp	x20, x19, [sp, #16]
   19c98:	ldp	x29, x30, [sp], #32
   19c9c:	ret

0000000000019ca0 <rl_vi_tilde_expand@@Base>:
   19ca0:	stp	x29, x30, [sp, #-32]!
   19ca4:	mov	w0, wzr
   19ca8:	str	x19, [sp, #16]
   19cac:	mov	x29, sp
   19cb0:	mov	w19, w1
   19cb4:	bl	16470 <rl_tilde_expand@plt>
   19cb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19cbc:	ldr	x8, [x8, #3720]
   19cc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19cc4:	ldr	x9, [x9, #3640]
   19cc8:	mov	w10, #0x1                   	// #1
   19ccc:	ldr	w8, [x8]
   19cd0:	str	w19, [x9]
   19cd4:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   19cd8:	str	w10, [x9, #2972]
   19cdc:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   19ce0:	str	w8, [x9, #2976]
   19ce4:	bl	16400 <rl_begin_undo_group@plt>
   19ce8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19cec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19cf0:	ldr	x8, [x8, #1992]
   19cf4:	ldr	x9, [x9, #2008]
   19cf8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19cfc:	ldr	w9, [x9]
   19d00:	ldr	x10, [x10, #4032]
   19d04:	str	x10, [x8]
   19d08:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   19d0c:	str	w19, [x8, #128]
   19d10:	cbz	w9, 19d18 <rl_vi_tilde_expand@@Base+0x78>
   19d14:	bl	17640 <_rl_reset_prompt@plt>
   19d18:	ldr	x19, [sp, #16]
   19d1c:	mov	w0, wzr
   19d20:	ldp	x29, x30, [sp], #32
   19d24:	ret

0000000000019d28 <rl_vi_prev_word@@Base>:
   19d28:	stp	x29, x30, [sp, #-32]!
   19d2c:	stp	x20, x19, [sp, #16]
   19d30:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19d34:	ldr	x8, [x8, #3512]
   19d38:	mov	w20, w1
   19d3c:	mov	w19, w0
   19d40:	mov	x29, sp
   19d44:	tbnz	w0, #31, 19d70 <rl_vi_prev_word@@Base+0x48>
   19d48:	ldr	w8, [x8]
   19d4c:	cbz	w8, 19db0 <rl_vi_prev_word@@Base+0x88>
   19d50:	bl	17100 <__ctype_b_loc@plt>
   19d54:	ldr	x8, [x0]
   19d58:	and	w9, w20, #0xff
   19d5c:	ldrh	w8, [x8, w9, uxtw #1]
   19d60:	tbnz	w8, #8, 19db8 <rl_vi_prev_word@@Base+0x90>
   19d64:	mov	w0, w19
   19d68:	bl	16990 <rl_vi_bword@plt>
   19d6c:	b	19dcc <rl_vi_prev_word@@Base+0xa4>
   19d70:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19d74:	ldr	x9, [x9, #2656]
   19d78:	ldr	w8, [x8]
   19d7c:	ldr	w9, [x9]
   19d80:	sub	w9, w9, #0x1
   19d84:	cmp	w8, w9
   19d88:	b.ge	19db0 <rl_vi_prev_word@@Base+0x88>  // b.tcont
   19d8c:	neg	w19, w19
   19d90:	bl	17100 <__ctype_b_loc@plt>
   19d94:	ldr	x8, [x0]
   19d98:	and	w9, w20, #0xff
   19d9c:	ldrh	w8, [x8, w9, uxtw #1]
   19da0:	tbnz	w8, #8, 19dc4 <rl_vi_prev_word@@Base+0x9c>
   19da4:	mov	w0, w19
   19da8:	bl	16b30 <rl_vi_fword@plt>
   19dac:	b	19dcc <rl_vi_prev_word@@Base+0xa4>
   19db0:	bl	17390 <rl_ding@plt>
   19db4:	b	19dcc <rl_vi_prev_word@@Base+0xa4>
   19db8:	mov	w0, w19
   19dbc:	bl	171a0 <rl_vi_bWord@plt>
   19dc0:	b	19dcc <rl_vi_prev_word@@Base+0xa4>
   19dc4:	mov	w0, w19
   19dc8:	bl	172b0 <rl_vi_fWord@plt>
   19dcc:	ldp	x20, x19, [sp, #16]
   19dd0:	mov	w0, wzr
   19dd4:	ldp	x29, x30, [sp], #32
   19dd8:	ret

0000000000019ddc <rl_vi_next_word@@Base>:
   19ddc:	stp	x29, x30, [sp, #-32]!
   19de0:	stp	x20, x19, [sp, #16]
   19de4:	mov	w20, w1
   19de8:	mov	w19, w0
   19dec:	mov	x29, sp
   19df0:	tbnz	w0, #31, 19e38 <rl_vi_next_word@@Base+0x5c>
   19df4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19df8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19dfc:	ldr	x8, [x8, #3512]
   19e00:	ldr	x9, [x9, #2656]
   19e04:	ldr	w8, [x8]
   19e08:	ldr	w9, [x9]
   19e0c:	sub	w9, w9, #0x1
   19e10:	cmp	w8, w9
   19e14:	b.ge	19e48 <rl_vi_next_word@@Base+0x6c>  // b.tcont
   19e18:	bl	17100 <__ctype_b_loc@plt>
   19e1c:	ldr	x8, [x0]
   19e20:	and	w9, w20, #0xff
   19e24:	ldrh	w8, [x8, w9, uxtw #1]
   19e28:	tbnz	w8, #8, 19e50 <rl_vi_next_word@@Base+0x74>
   19e2c:	mov	w0, w19
   19e30:	bl	16b30 <rl_vi_fword@plt>
   19e34:	b	19e58 <rl_vi_next_word@@Base+0x7c>
   19e38:	neg	w0, w19
   19e3c:	mov	w1, w20
   19e40:	bl	16c60 <rl_vi_prev_word@plt>
   19e44:	b	19e58 <rl_vi_next_word@@Base+0x7c>
   19e48:	bl	17390 <rl_ding@plt>
   19e4c:	b	19e58 <rl_vi_next_word@@Base+0x7c>
   19e50:	mov	w0, w19
   19e54:	bl	172b0 <rl_vi_fWord@plt>
   19e58:	ldp	x20, x19, [sp, #16]
   19e5c:	mov	w0, wzr
   19e60:	ldp	x29, x30, [sp], #32
   19e64:	ret

0000000000019e68 <rl_vi_bWord@@Base>:
   19e68:	stp	x29, x30, [sp, #-48]!
   19e6c:	stp	x22, x21, [sp, #16]
   19e70:	stp	x20, x19, [sp, #32]
   19e74:	mov	x29, sp
   19e78:	cbz	w0, 19fc8 <rl_vi_bWord@@Base+0x160>
   19e7c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19e80:	ldr	x20, [x20, #3512]
   19e84:	mov	w19, w0
   19e88:	ldr	w0, [x20]
   19e8c:	cmp	w0, #0x1
   19e90:	b.lt	19fc8 <rl_vi_bWord@@Base+0x160>  // b.tstop
   19e94:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19e98:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   19e9c:	ldr	x21, [x21, #2480]
   19ea0:	ldr	x22, [x22, #1896]
   19ea4:	ldr	x8, [x21]
   19ea8:	ldrb	w9, [x8, w0, uxtw]
   19eac:	cmp	w9, #0x9
   19eb0:	b.eq	19ee8 <rl_vi_bWord@@Base+0x80>  // b.none
   19eb4:	cmp	w9, #0x20
   19eb8:	b.eq	19ee8 <rl_vi_bWord@@Base+0x80>  // b.none
   19ebc:	sxtw	x9, w0
   19ec0:	sub	x9, x9, #0x1
   19ec4:	ldrb	w10, [x8, x9]
   19ec8:	cmp	w10, #0x20
   19ecc:	b.eq	19ed8 <rl_vi_bWord@@Base+0x70>  // b.none
   19ed0:	cmp	w10, #0x9
   19ed4:	b.ne	19ee8 <rl_vi_bWord@@Base+0x80>  // b.any
   19ed8:	cmp	w0, #0x2
   19edc:	mov	w0, w9
   19ee0:	str	w9, [x20]
   19ee4:	b.lt	19fc8 <rl_vi_bWord@@Base+0x160>  // b.tstop
   19ee8:	sub	w19, w19, #0x1
   19eec:	ldrb	w8, [x8, w0, uxtw]
   19ef0:	cmp	w8, #0x9
   19ef4:	b.eq	19f00 <rl_vi_bWord@@Base+0x98>  // b.none
   19ef8:	cmp	w8, #0x20
   19efc:	b.ne	19f4c <rl_vi_bWord@@Base+0xe4>  // b.any
   19f00:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   19f04:	cmp	x0, #0x1
   19f08:	b.eq	19f30 <rl_vi_bWord@@Base+0xc8>  // b.none
   19f0c:	ldr	w8, [x22]
   19f10:	cbnz	w8, 19f30 <rl_vi_bWord@@Base+0xc8>
   19f14:	mov	w0, #0x1                   	// #1
   19f18:	bl	17250 <_rl_backward_char_internal@plt>
   19f1c:	cmp	w0, #0x0
   19f20:	b.le	19fc4 <rl_vi_bWord@@Base+0x15c>
   19f24:	ldr	x8, [x21]
   19f28:	str	w0, [x20]
   19f2c:	b	19eec <rl_vi_bWord@@Base+0x84>
   19f30:	ldr	w8, [x20]
   19f34:	sub	w0, w8, #0x1
   19f38:	cmp	w8, #0x2
   19f3c:	str	w0, [x20]
   19f40:	b.lt	19fc8 <rl_vi_bWord@@Base+0x160>  // b.tstop
   19f44:	ldr	x8, [x21]
   19f48:	b	19eec <rl_vi_bWord@@Base+0x84>
   19f4c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   19f50:	cmp	x0, #0x1
   19f54:	b.eq	19f7c <rl_vi_bWord@@Base+0x114>  // b.none
   19f58:	ldr	w8, [x22]
   19f5c:	cbnz	w8, 19f7c <rl_vi_bWord@@Base+0x114>
   19f60:	mov	w0, #0x1                   	// #1
   19f64:	bl	17250 <_rl_backward_char_internal@plt>
   19f68:	cmp	w0, #0x0
   19f6c:	b.le	19fc4 <rl_vi_bWord@@Base+0x15c>
   19f70:	mov	w8, w0
   19f74:	str	w0, [x20]
   19f78:	b	19f90 <rl_vi_bWord@@Base+0x128>
   19f7c:	ldr	w9, [x20]
   19f80:	sub	w8, w9, #0x1
   19f84:	cmp	w9, #0x2
   19f88:	str	w8, [x20]
   19f8c:	b.lt	19fbc <rl_vi_bWord@@Base+0x154>  // b.tstop
   19f90:	ldr	x9, [x21]
   19f94:	ldrb	w9, [x9, w8, uxtw]
   19f98:	cmp	w9, #0x9
   19f9c:	b.eq	19fa8 <rl_vi_bWord@@Base+0x140>  // b.none
   19fa0:	cmp	w9, #0x20
   19fa4:	b.ne	19f4c <rl_vi_bWord@@Base+0xe4>  // b.any
   19fa8:	add	w0, w8, #0x1
   19fac:	str	w0, [x20]
   19fb0:	cbz	w19, 19fc8 <rl_vi_bWord@@Base+0x160>
   19fb4:	tbz	w8, #31, 19ea4 <rl_vi_bWord@@Base+0x3c>
   19fb8:	b	19fc8 <rl_vi_bWord@@Base+0x160>
   19fbc:	cmp	w9, #0x1
   19fc0:	b.eq	19fc8 <rl_vi_bWord@@Base+0x160>  // b.none
   19fc4:	str	wzr, [x20]
   19fc8:	ldp	x20, x19, [sp, #32]
   19fcc:	ldp	x22, x21, [sp, #16]
   19fd0:	mov	w0, wzr
   19fd4:	ldp	x29, x30, [sp], #48
   19fd8:	ret

0000000000019fdc <rl_vi_bword@@Base>:
   19fdc:	stp	x29, x30, [sp, #-96]!
   19fe0:	stp	x28, x27, [sp, #16]
   19fe4:	stp	x26, x25, [sp, #32]
   19fe8:	stp	x24, x23, [sp, #48]
   19fec:	stp	x22, x21, [sp, #64]
   19ff0:	stp	x20, x19, [sp, #80]
   19ff4:	mov	x29, sp
   19ff8:	cbz	w0, 1a298 <rl_vi_bword@@Base+0x2bc>
   19ffc:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a000:	ldr	x23, [x23, #3512]
   1a004:	ldr	w21, [x23]
   1a008:	cmp	w21, #0x1
   1a00c:	b.lt	1a298 <rl_vi_bword@@Base+0x2bc>  // b.tstop
   1a010:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a014:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a018:	ldr	x24, [x24, #2480]
   1a01c:	ldr	x25, [x25, #1896]
   1a020:	mov	w19, w0
   1a024:	ldr	x22, [x24]
   1a028:	ldrb	w8, [x22, w21, uxtw]
   1a02c:	cmp	w8, #0x9
   1a030:	b.eq	1a068 <rl_vi_bword@@Base+0x8c>  // b.none
   1a034:	cmp	w8, #0x20
   1a038:	b.eq	1a068 <rl_vi_bword@@Base+0x8c>  // b.none
   1a03c:	sxtw	x8, w21
   1a040:	sub	x26, x8, #0x1
   1a044:	ldrb	w8, [x22, x26]
   1a048:	cmp	w8, #0x20
   1a04c:	b.eq	1a058 <rl_vi_bword@@Base+0x7c>  // b.none
   1a050:	cmp	w8, #0x9
   1a054:	b.ne	1a068 <rl_vi_bword@@Base+0x8c>  // b.any
   1a058:	mov	w21, w26
   1a05c:	str	w26, [x23]
   1a060:	cbnz	w26, 1a06c <rl_vi_bword@@Base+0x90>
   1a064:	b	1a298 <rl_vi_bword@@Base+0x2bc>
   1a068:	mov	w26, w21
   1a06c:	bl	17100 <__ctype_b_loc@plt>
   1a070:	ldr	x8, [x0]
   1a074:	ldrb	w26, [x22, x26]
   1a078:	mov	x20, x0
   1a07c:	ldrh	w27, [x8, x26, lsl #1]
   1a080:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a084:	ldr	w28, [x23]
   1a088:	cmp	x0, #0x1
   1a08c:	b.eq	1a0ac <rl_vi_bword@@Base+0xd0>  // b.none
   1a090:	ldr	w8, [x25]
   1a094:	cbnz	w8, 1a0ac <rl_vi_bword@@Base+0xd0>
   1a098:	mov	w0, #0x1                   	// #1
   1a09c:	bl	17250 <_rl_backward_char_internal@plt>
   1a0a0:	bic	w22, w0, w0, asr #31
   1a0a4:	mov	w21, w28
   1a0a8:	b	1a0b0 <rl_vi_bword@@Base+0xd4>
   1a0ac:	sub	w22, w28, #0x1
   1a0b0:	ldr	x8, [x24]
   1a0b4:	str	w22, [x23]
   1a0b8:	ldr	x9, [x20]
   1a0bc:	cmp	w26, #0x5f
   1a0c0:	ldrb	w10, [x8, w22, sxtw]
   1a0c4:	cset	w11, ne  // ne = any
   1a0c8:	tst	w27, #0x8
   1a0cc:	cset	w12, eq  // eq = none
   1a0d0:	ldrh	w9, [x9, x10, lsl #1]
   1a0d4:	cmp	x10, #0x5f
   1a0d8:	cset	w10, eq  // eq = none
   1a0dc:	and	w9, w9, #0x8
   1a0e0:	orr	w9, w10, w9, lsr #3
   1a0e4:	and	w10, w11, w12
   1a0e8:	eor	w9, w10, w9
   1a0ec:	cmp	w9, #0x1
   1a0f0:	b.ne	1a0fc <rl_vi_bword@@Base+0x120>  // b.any
   1a0f4:	mov	w22, w21
   1a0f8:	str	w21, [x23]
   1a0fc:	cmp	w22, #0x1
   1a100:	b.lt	1a168 <rl_vi_bword@@Base+0x18c>  // b.tstop
   1a104:	ldrb	w8, [x8, w22, uxtw]
   1a108:	cmp	w8, #0x20
   1a10c:	b.eq	1a118 <rl_vi_bword@@Base+0x13c>  // b.none
   1a110:	cmp	w8, #0x9
   1a114:	b.ne	1a170 <rl_vi_bword@@Base+0x194>  // b.any
   1a118:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a11c:	cmp	x0, #0x1
   1a120:	b.eq	1a14c <rl_vi_bword@@Base+0x170>  // b.none
   1a124:	ldr	w8, [x25]
   1a128:	cbnz	w8, 1a14c <rl_vi_bword@@Base+0x170>
   1a12c:	mov	w0, #0x1                   	// #1
   1a130:	bl	17250 <_rl_backward_char_internal@plt>
   1a134:	cmp	w0, #0x0
   1a138:	b.le	1a294 <rl_vi_bword@@Base+0x2b8>
   1a13c:	ldr	x8, [x24]
   1a140:	mov	w22, w0
   1a144:	str	w0, [x23]
   1a148:	b	1a104 <rl_vi_bword@@Base+0x128>
   1a14c:	ldr	w8, [x23]
   1a150:	sub	w22, w8, #0x1
   1a154:	cmp	w8, #0x2
   1a158:	str	w22, [x23]
   1a15c:	b.lt	1a298 <rl_vi_bword@@Base+0x2bc>  // b.tstop
   1a160:	ldr	x8, [x24]
   1a164:	b	1a104 <rl_vi_bword@@Base+0x128>
   1a168:	mov	w21, w22
   1a16c:	b	1a280 <rl_vi_bword@@Base+0x2a4>
   1a170:	cmp	w8, #0x5f
   1a174:	b.eq	1a204 <rl_vi_bword@@Base+0x228>  // b.none
   1a178:	ldr	x9, [x20]
   1a17c:	ldrh	w8, [x9, x8, lsl #1]
   1a180:	tbnz	w8, #3, 1a204 <rl_vi_bword@@Base+0x228>
   1a184:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a188:	ldr	w26, [x23]
   1a18c:	cmp	x0, #0x1
   1a190:	b.eq	1a1bc <rl_vi_bword@@Base+0x1e0>  // b.none
   1a194:	ldr	w8, [x25]
   1a198:	cbnz	w8, 1a1bc <rl_vi_bword@@Base+0x1e0>
   1a19c:	mov	w0, #0x1                   	// #1
   1a1a0:	bl	17250 <_rl_backward_char_internal@plt>
   1a1a4:	cmp	w0, #0x0
   1a1a8:	b.le	1a294 <rl_vi_bword@@Base+0x2b8>
   1a1ac:	mov	w21, w0
   1a1b0:	str	w0, [x23]
   1a1b4:	mov	w22, w26
   1a1b8:	b	1a1cc <rl_vi_bword@@Base+0x1f0>
   1a1bc:	sub	w21, w26, #0x1
   1a1c0:	cmp	w26, #0x2
   1a1c4:	str	w21, [x23]
   1a1c8:	b.lt	1a27c <rl_vi_bword@@Base+0x2a0>  // b.tstop
   1a1cc:	ldr	x8, [x24]
   1a1d0:	ldrb	w9, [x8, w21, uxtw]
   1a1d4:	mov	w8, w22
   1a1d8:	cmp	x9, #0x5f
   1a1dc:	b.eq	1a274 <rl_vi_bword@@Base+0x298>  // b.none
   1a1e0:	ldr	x10, [x20]
   1a1e4:	ldrh	w10, [x10, x9, lsl #1]
   1a1e8:	tbnz	w10, #3, 1a274 <rl_vi_bword@@Base+0x298>
   1a1ec:	cmp	w9, #0x20
   1a1f0:	b.eq	1a274 <rl_vi_bword@@Base+0x298>  // b.none
   1a1f4:	cmp	w9, #0x9
   1a1f8:	mov	w22, w21
   1a1fc:	b.ne	1a184 <rl_vi_bword@@Base+0x1a8>  // b.any
   1a200:	b	1a274 <rl_vi_bword@@Base+0x298>
   1a204:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a208:	ldr	w26, [x23]
   1a20c:	cmp	x0, #0x1
   1a210:	b.eq	1a23c <rl_vi_bword@@Base+0x260>  // b.none
   1a214:	ldr	w8, [x25]
   1a218:	cbnz	w8, 1a23c <rl_vi_bword@@Base+0x260>
   1a21c:	mov	w0, #0x1                   	// #1
   1a220:	bl	17250 <_rl_backward_char_internal@plt>
   1a224:	cmp	w0, #0x0
   1a228:	b.le	1a294 <rl_vi_bword@@Base+0x2b8>
   1a22c:	mov	w21, w0
   1a230:	str	w0, [x23]
   1a234:	mov	w22, w26
   1a238:	b	1a24c <rl_vi_bword@@Base+0x270>
   1a23c:	sub	w21, w26, #0x1
   1a240:	cmp	w26, #0x2
   1a244:	str	w21, [x23]
   1a248:	b.lt	1a27c <rl_vi_bword@@Base+0x2a0>  // b.tstop
   1a24c:	ldr	x8, [x24]
   1a250:	ldrb	w9, [x8, w21, uxtw]
   1a254:	mov	w8, w22
   1a258:	mov	w22, w21
   1a25c:	cmp	x9, #0x5f
   1a260:	b.eq	1a204 <rl_vi_bword@@Base+0x228>  // b.none
   1a264:	ldr	x10, [x20]
   1a268:	mov	w22, w21
   1a26c:	ldrh	w9, [x10, x9, lsl #1]
   1a270:	tbnz	w9, #3, 1a204 <rl_vi_bword@@Base+0x228>
   1a274:	mov	w21, w8
   1a278:	str	w8, [x23]
   1a27c:	tbnz	w21, #31, 1a294 <rl_vi_bword@@Base+0x2b8>
   1a280:	sub	w19, w19, #0x1
   1a284:	cbz	w19, 1a298 <rl_vi_bword@@Base+0x2bc>
   1a288:	cmp	w21, #0x0
   1a28c:	b.gt	1a024 <rl_vi_bword@@Base+0x48>
   1a290:	b	1a298 <rl_vi_bword@@Base+0x2bc>
   1a294:	str	wzr, [x23]
   1a298:	ldp	x20, x19, [sp, #80]
   1a29c:	ldp	x22, x21, [sp, #64]
   1a2a0:	ldp	x24, x23, [sp, #48]
   1a2a4:	ldp	x26, x25, [sp, #32]
   1a2a8:	ldp	x28, x27, [sp, #16]
   1a2ac:	mov	w0, wzr
   1a2b0:	ldp	x29, x30, [sp], #96
   1a2b4:	ret

000000000001a2b8 <rl_vi_fWord@@Base>:
   1a2b8:	stp	x29, x30, [sp, #-64]!
   1a2bc:	stp	x24, x23, [sp, #16]
   1a2c0:	stp	x22, x21, [sp, #32]
   1a2c4:	stp	x20, x19, [sp, #48]
   1a2c8:	mov	x29, sp
   1a2cc:	cbz	w0, 1a3ec <rl_vi_fWord@@Base+0x134>
   1a2d0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a2d4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a2d8:	ldr	x20, [x20, #3512]
   1a2dc:	ldr	x21, [x21, #2656]
   1a2e0:	ldr	w8, [x20]
   1a2e4:	ldr	w9, [x21]
   1a2e8:	sub	w9, w9, #0x1
   1a2ec:	cmp	w8, w9
   1a2f0:	b.ge	1a3ec <rl_vi_fWord@@Base+0x134>  // b.tcont
   1a2f4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a2f8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a2fc:	ldr	x22, [x22, #2480]
   1a300:	ldr	x23, [x23, #1896]
   1a304:	mov	w19, w0
   1a308:	sub	w19, w19, #0x1
   1a30c:	b	1a318 <rl_vi_fWord@@Base+0x60>
   1a310:	add	w8, w24, #0x1
   1a314:	str	w8, [x20]
   1a318:	ldr	x9, [x22]
   1a31c:	ldrb	w9, [x9, w8, sxtw]
   1a320:	cmp	w9, #0x9
   1a324:	b.eq	1a384 <rl_vi_fWord@@Base+0xcc>  // b.none
   1a328:	cmp	w9, #0x20
   1a32c:	b.eq	1a384 <rl_vi_fWord@@Base+0xcc>  // b.none
   1a330:	ldr	w10, [x21]
   1a334:	cmp	w8, w10
   1a338:	b.ge	1a384 <rl_vi_fWord@@Base+0xcc>  // b.tcont
   1a33c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a340:	ldr	w24, [x20]
   1a344:	cmp	x0, #0x1
   1a348:	b.eq	1a310 <rl_vi_fWord@@Base+0x58>  // b.none
   1a34c:	ldr	w8, [x23]
   1a350:	cbnz	w8, 1a310 <rl_vi_fWord@@Base+0x58>
   1a354:	mov	w0, #0x1                   	// #1
   1a358:	bl	178f0 <_rl_forward_char_internal@plt>
   1a35c:	ldr	w8, [x21]
   1a360:	cmp	w0, w8
   1a364:	ccmp	w24, w0, #0x4, le
   1a368:	csel	w8, w8, w0, eq  // eq = none
   1a36c:	str	w8, [x20]
   1a370:	b	1a318 <rl_vi_fWord@@Base+0x60>
   1a374:	add	w8, w24, #0x1
   1a378:	ldr	x9, [x22]
   1a37c:	str	w8, [x20]
   1a380:	ldrb	w9, [x9, w8, sxtw]
   1a384:	and	w9, w9, #0xff
   1a388:	cmp	w9, #0x9
   1a38c:	b.eq	1a398 <rl_vi_fWord@@Base+0xe0>  // b.none
   1a390:	cmp	w9, #0x20
   1a394:	b.ne	1a3d8 <rl_vi_fWord@@Base+0x120>  // b.any
   1a398:	ldr	w9, [x21]
   1a39c:	cmp	w8, w9
   1a3a0:	b.ge	1a3dc <rl_vi_fWord@@Base+0x124>  // b.tcont
   1a3a4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a3a8:	ldr	w24, [x20]
   1a3ac:	cmp	x0, #0x1
   1a3b0:	b.eq	1a374 <rl_vi_fWord@@Base+0xbc>  // b.none
   1a3b4:	ldr	w8, [x23]
   1a3b8:	cbnz	w8, 1a374 <rl_vi_fWord@@Base+0xbc>
   1a3bc:	mov	w0, #0x1                   	// #1
   1a3c0:	bl	178f0 <_rl_forward_char_internal@plt>
   1a3c4:	ldr	w8, [x21]
   1a3c8:	cmp	w0, w8
   1a3cc:	ccmp	w24, w0, #0x4, le
   1a3d0:	csel	w8, w8, w0, eq  // eq = none
   1a3d4:	b	1a378 <rl_vi_fWord@@Base+0xc0>
   1a3d8:	ldr	w9, [x21]
   1a3dc:	cbz	w19, 1a3ec <rl_vi_fWord@@Base+0x134>
   1a3e0:	sub	w9, w9, #0x1
   1a3e4:	cmp	w8, w9
   1a3e8:	b.lt	1a308 <rl_vi_fWord@@Base+0x50>  // b.tstop
   1a3ec:	ldp	x20, x19, [sp, #48]
   1a3f0:	ldp	x22, x21, [sp, #32]
   1a3f4:	ldp	x24, x23, [sp, #16]
   1a3f8:	mov	w0, wzr
   1a3fc:	ldp	x29, x30, [sp], #64
   1a400:	ret

000000000001a404 <rl_vi_fword@@Base>:
   1a404:	stp	x29, x30, [sp, #-80]!
   1a408:	stp	x26, x25, [sp, #16]
   1a40c:	stp	x24, x23, [sp, #32]
   1a410:	stp	x22, x21, [sp, #48]
   1a414:	stp	x20, x19, [sp, #64]
   1a418:	mov	x29, sp
   1a41c:	cbz	w0, 1a600 <rl_vi_fword@@Base+0x1fc>
   1a420:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a424:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a428:	ldr	x21, [x21, #3512]
   1a42c:	ldr	x22, [x22, #2656]
   1a430:	ldr	w25, [x21]
   1a434:	ldr	w26, [x22]
   1a438:	sub	w8, w26, #0x1
   1a43c:	cmp	w25, w8
   1a440:	b.ge	1a600 <rl_vi_fword@@Base+0x1fc>  // b.tcont
   1a444:	mov	w19, w0
   1a448:	bl	17100 <__ctype_b_loc@plt>
   1a44c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a450:	ldr	x23, [x23, #2480]
   1a454:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a458:	mov	x20, x0
   1a45c:	ldr	x8, [x23]
   1a460:	ldr	x24, [x24, #1896]
   1a464:	ldrb	w9, [x8, w25, sxtw]
   1a468:	cmp	x9, #0x5f
   1a46c:	b.eq	1a510 <rl_vi_fword@@Base+0x10c>  // b.none
   1a470:	ldr	x10, [x20]
   1a474:	ldrh	w10, [x10, x9, lsl #1]
   1a478:	tbnz	w10, #3, 1a510 <rl_vi_fword@@Base+0x10c>
   1a47c:	cmp	w25, w26
   1a480:	b.ge	1a584 <rl_vi_fword@@Base+0x180>  // b.tcont
   1a484:	cmp	w9, #0x9
   1a488:	b.eq	1a584 <rl_vi_fword@@Base+0x180>  // b.none
   1a48c:	cmp	w9, #0x20
   1a490:	b.eq	1a584 <rl_vi_fword@@Base+0x180>  // b.none
   1a494:	tbnz	w10, #3, 1a584 <rl_vi_fword@@Base+0x180>
   1a498:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a49c:	ldr	w25, [x21]
   1a4a0:	cmp	x0, #0x1
   1a4a4:	b.eq	1a4cc <rl_vi_fword@@Base+0xc8>  // b.none
   1a4a8:	ldr	w8, [x24]
   1a4ac:	cbnz	w8, 1a4cc <rl_vi_fword@@Base+0xc8>
   1a4b0:	mov	w0, #0x1                   	// #1
   1a4b4:	bl	178f0 <_rl_forward_char_internal@plt>
   1a4b8:	ldr	w9, [x22]
   1a4bc:	cmp	w0, w9
   1a4c0:	ccmp	w25, w0, #0x4, le
   1a4c4:	csel	w25, w9, w0, eq  // eq = none
   1a4c8:	b	1a4d4 <rl_vi_fword@@Base+0xd0>
   1a4cc:	ldr	w9, [x22]
   1a4d0:	add	w25, w25, #0x1
   1a4d4:	ldr	x8, [x23]
   1a4d8:	cmp	w25, w9
   1a4dc:	str	w25, [x21]
   1a4e0:	b.ge	1a584 <rl_vi_fword@@Base+0x180>  // b.tcont
   1a4e4:	ldrb	w9, [x8, w25, sxtw]
   1a4e8:	cmp	w9, #0x9
   1a4ec:	b.eq	1a584 <rl_vi_fword@@Base+0x180>  // b.none
   1a4f0:	cmp	w9, #0x20
   1a4f4:	b.eq	1a584 <rl_vi_fword@@Base+0x180>  // b.none
   1a4f8:	cmp	w9, #0x5f
   1a4fc:	b.eq	1a584 <rl_vi_fword@@Base+0x180>  // b.none
   1a500:	ldr	x10, [x20]
   1a504:	ldrh	w9, [x10, w9, uxtw #1]
   1a508:	tbz	w9, #3, 1a498 <rl_vi_fword@@Base+0x94>
   1a50c:	b	1a584 <rl_vi_fword@@Base+0x180>
   1a510:	cmp	w25, w26
   1a514:	b.ge	1a584 <rl_vi_fword@@Base+0x180>  // b.tcont
   1a518:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a51c:	ldr	w25, [x21]
   1a520:	cmp	x0, #0x1
   1a524:	b.eq	1a54c <rl_vi_fword@@Base+0x148>  // b.none
   1a528:	ldr	w8, [x24]
   1a52c:	cbnz	w8, 1a54c <rl_vi_fword@@Base+0x148>
   1a530:	mov	w0, #0x1                   	// #1
   1a534:	bl	178f0 <_rl_forward_char_internal@plt>
   1a538:	ldr	w9, [x22]
   1a53c:	cmp	w0, w9
   1a540:	ccmp	w25, w0, #0x4, le
   1a544:	csel	w25, w9, w0, eq  // eq = none
   1a548:	b	1a554 <rl_vi_fword@@Base+0x150>
   1a54c:	ldr	w9, [x22]
   1a550:	add	w25, w25, #0x1
   1a554:	ldr	x8, [x23]
   1a558:	str	w25, [x21]
   1a55c:	ldrb	w10, [x8, w25, sxtw]
   1a560:	cmp	x10, #0x5f
   1a564:	cset	w11, eq  // eq = none
   1a568:	cmp	w25, w9
   1a56c:	b.ge	1a584 <rl_vi_fword@@Base+0x180>  // b.tcont
   1a570:	ldr	x9, [x20]
   1a574:	ldrh	w9, [x9, x10, lsl #1]
   1a578:	and	w9, w9, #0x8
   1a57c:	orr	w9, w11, w9, lsr #3
   1a580:	tbnz	w9, #0, 1a518 <rl_vi_fword@@Base+0x114>
   1a584:	sub	w19, w19, #0x1
   1a588:	b	1a598 <rl_vi_fword@@Base+0x194>
   1a58c:	add	w25, w25, #0x1
   1a590:	ldr	x8, [x23]
   1a594:	str	w25, [x21]
   1a598:	ldrb	w9, [x8, w25, sxtw]
   1a59c:	cmp	w9, #0x9
   1a5a0:	b.eq	1a5ac <rl_vi_fword@@Base+0x1a8>  // b.none
   1a5a4:	cmp	w9, #0x20
   1a5a8:	b.ne	1a5ec <rl_vi_fword@@Base+0x1e8>  // b.any
   1a5ac:	ldr	w26, [x22]
   1a5b0:	cmp	w25, w26
   1a5b4:	b.ge	1a5f0 <rl_vi_fword@@Base+0x1ec>  // b.tcont
   1a5b8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a5bc:	ldr	w25, [x21]
   1a5c0:	cmp	x0, #0x1
   1a5c4:	b.eq	1a58c <rl_vi_fword@@Base+0x188>  // b.none
   1a5c8:	ldr	w8, [x24]
   1a5cc:	cbnz	w8, 1a58c <rl_vi_fword@@Base+0x188>
   1a5d0:	mov	w0, #0x1                   	// #1
   1a5d4:	bl	178f0 <_rl_forward_char_internal@plt>
   1a5d8:	ldr	w8, [x22]
   1a5dc:	cmp	w0, w8
   1a5e0:	ccmp	w25, w0, #0x4, le
   1a5e4:	csel	w25, w8, w0, eq  // eq = none
   1a5e8:	b	1a590 <rl_vi_fword@@Base+0x18c>
   1a5ec:	ldr	w26, [x22]
   1a5f0:	cbz	w19, 1a600 <rl_vi_fword@@Base+0x1fc>
   1a5f4:	sub	w9, w26, #0x1
   1a5f8:	cmp	w25, w9
   1a5fc:	b.lt	1a464 <rl_vi_fword@@Base+0x60>  // b.tstop
   1a600:	ldp	x20, x19, [sp, #64]
   1a604:	ldp	x22, x21, [sp, #48]
   1a608:	ldp	x24, x23, [sp, #32]
   1a60c:	ldp	x26, x25, [sp, #16]
   1a610:	mov	w0, wzr
   1a614:	ldp	x29, x30, [sp], #80
   1a618:	ret

000000000001a61c <rl_vi_eWord@@Base>:
   1a61c:	stp	x29, x30, [sp, #-80]!
   1a620:	str	x25, [sp, #16]
   1a624:	stp	x24, x23, [sp, #32]
   1a628:	stp	x22, x21, [sp, #48]
   1a62c:	stp	x20, x19, [sp, #64]
   1a630:	mov	x29, sp
   1a634:	cbz	w0, 1a850 <rl_vi_eWord@@Base+0x234>
   1a638:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a63c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a640:	ldr	x20, [x20, #3512]
   1a644:	ldr	x21, [x21, #2656]
   1a648:	ldr	w24, [x20]
   1a64c:	ldr	w8, [x21]
   1a650:	sub	w9, w8, #0x1
   1a654:	cmp	w24, w9
   1a658:	b.ge	1a850 <rl_vi_eWord@@Base+0x234>  // b.tcont
   1a65c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a660:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a664:	ldr	x22, [x22, #2480]
   1a668:	ldr	x23, [x23, #1896]
   1a66c:	mov	w19, w0
   1a670:	cmp	w24, w8
   1a674:	b.ge	1a6d0 <rl_vi_eWord@@Base+0xb4>  // b.tcont
   1a678:	ldr	x9, [x22]
   1a67c:	ldrb	w9, [x9, w24, sxtw]
   1a680:	cmp	w9, #0x9
   1a684:	b.eq	1a6d0 <rl_vi_eWord@@Base+0xb4>  // b.none
   1a688:	cmp	w9, #0x20
   1a68c:	b.eq	1a6d0 <rl_vi_eWord@@Base+0xb4>  // b.none
   1a690:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a694:	ldr	w24, [x20]
   1a698:	cmp	x0, #0x1
   1a69c:	b.eq	1a6c4 <rl_vi_eWord@@Base+0xa8>  // b.none
   1a6a0:	ldr	w8, [x23]
   1a6a4:	cbnz	w8, 1a6c4 <rl_vi_eWord@@Base+0xa8>
   1a6a8:	mov	w0, #0x1                   	// #1
   1a6ac:	bl	178f0 <_rl_forward_char_internal@plt>
   1a6b0:	ldr	w8, [x21]
   1a6b4:	cmp	w0, w8
   1a6b8:	ccmp	w24, w0, #0x4, le
   1a6bc:	csel	w24, w8, w0, eq  // eq = none
   1a6c0:	b	1a6cc <rl_vi_eWord@@Base+0xb0>
   1a6c4:	ldr	w8, [x21]
   1a6c8:	add	w24, w24, #0x1
   1a6cc:	str	w24, [x20]
   1a6d0:	cmp	w24, w8
   1a6d4:	sub	w19, w19, #0x1
   1a6d8:	b.lt	1a6f4 <rl_vi_eWord@@Base+0xd8>  // b.tstop
   1a6dc:	b	1a7d0 <rl_vi_eWord@@Base+0x1b4>
   1a6e0:	ldr	w8, [x21]
   1a6e4:	add	w24, w24, #0x1
   1a6e8:	cmp	w24, w8
   1a6ec:	str	w24, [x20]
   1a6f0:	b.ge	1a7d0 <rl_vi_eWord@@Base+0x1b4>  // b.tcont
   1a6f4:	ldr	x9, [x22]
   1a6f8:	ldrb	w9, [x9, w24, sxtw]
   1a6fc:	cmp	w9, #0x20
   1a700:	ccmp	w9, #0x9, #0x4, ne  // ne = any
   1a704:	b.ne	1a73c <rl_vi_eWord@@Base+0x120>  // b.any
   1a708:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a70c:	ldr	w24, [x20]
   1a710:	cmp	x0, #0x1
   1a714:	b.eq	1a6e0 <rl_vi_eWord@@Base+0xc4>  // b.none
   1a718:	ldr	w8, [x23]
   1a71c:	cbnz	w8, 1a6e0 <rl_vi_eWord@@Base+0xc4>
   1a720:	mov	w0, #0x1                   	// #1
   1a724:	bl	178f0 <_rl_forward_char_internal@plt>
   1a728:	ldr	w8, [x21]
   1a72c:	cmp	w0, w8
   1a730:	ccmp	w24, w0, #0x4, le
   1a734:	csel	w24, w8, w0, eq  // eq = none
   1a738:	b	1a6e8 <rl_vi_eWord@@Base+0xcc>
   1a73c:	cbz	w24, 1a7d0 <rl_vi_eWord@@Base+0x1b4>
   1a740:	mov	w25, w24
   1a744:	cmp	w24, w8
   1a748:	b.ge	1a7c0 <rl_vi_eWord@@Base+0x1a4>  // b.tcont
   1a74c:	and	w9, w9, #0xff
   1a750:	cmp	w9, #0x20
   1a754:	b.eq	1a760 <rl_vi_eWord@@Base+0x144>  // b.none
   1a758:	cmp	w9, #0x9
   1a75c:	b.ne	1a7c0 <rl_vi_eWord@@Base+0x1a4>  // b.any
   1a760:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a764:	ldr	w25, [x20]
   1a768:	cmp	x0, #0x1
   1a76c:	b.eq	1a794 <rl_vi_eWord@@Base+0x178>  // b.none
   1a770:	ldr	w8, [x23]
   1a774:	cbnz	w8, 1a794 <rl_vi_eWord@@Base+0x178>
   1a778:	mov	w0, #0x1                   	// #1
   1a77c:	bl	178f0 <_rl_forward_char_internal@plt>
   1a780:	ldr	w8, [x21]
   1a784:	cmp	w0, w8
   1a788:	ccmp	w25, w0, #0x4, le
   1a78c:	csel	w10, w8, w0, eq  // eq = none
   1a790:	b	1a7a0 <rl_vi_eWord@@Base+0x184>
   1a794:	ldr	w8, [x21]
   1a798:	add	w10, w25, #0x1
   1a79c:	mov	w25, w24
   1a7a0:	cmp	w10, w8
   1a7a4:	str	w10, [x20]
   1a7a8:	b.ge	1a7bc <rl_vi_eWord@@Base+0x1a0>  // b.tcont
   1a7ac:	ldr	x9, [x22]
   1a7b0:	mov	w24, w10
   1a7b4:	ldrb	w9, [x9, w10, sxtw]
   1a7b8:	b	1a74c <rl_vi_eWord@@Base+0x130>
   1a7bc:	mov	w24, w10
   1a7c0:	cmp	w24, w8
   1a7c4:	b.lt	1a800 <rl_vi_eWord@@Base+0x1e4>  // b.tstop
   1a7c8:	mov	w24, w25
   1a7cc:	str	w25, [x20]
   1a7d0:	cbz	w19, 1a850 <rl_vi_eWord@@Base+0x234>
   1a7d4:	sub	w9, w8, #0x1
   1a7d8:	cmp	w24, w9
   1a7dc:	b.lt	1a670 <rl_vi_eWord@@Base+0x54>  // b.tstop
   1a7e0:	b	1a850 <rl_vi_eWord@@Base+0x234>
   1a7e4:	ldr	w8, [x21]
   1a7e8:	add	w9, w25, #0x1
   1a7ec:	mov	w25, w24
   1a7f0:	cmp	w9, w8
   1a7f4:	mov	w24, w9
   1a7f8:	str	w9, [x20]
   1a7fc:	b.ge	1a7c8 <rl_vi_eWord@@Base+0x1ac>  // b.tcont
   1a800:	ldr	x9, [x22]
   1a804:	ldrb	w9, [x9, w24, sxtw]
   1a808:	cmp	w9, #0x9
   1a80c:	b.eq	1a7c8 <rl_vi_eWord@@Base+0x1ac>  // b.none
   1a810:	cmp	w9, #0x20
   1a814:	b.eq	1a7c8 <rl_vi_eWord@@Base+0x1ac>  // b.none
   1a818:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a81c:	ldr	w25, [x20]
   1a820:	cmp	x0, #0x1
   1a824:	b.eq	1a7e4 <rl_vi_eWord@@Base+0x1c8>  // b.none
   1a828:	ldr	w8, [x23]
   1a82c:	cbnz	w8, 1a7e4 <rl_vi_eWord@@Base+0x1c8>
   1a830:	mov	w0, #0x1                   	// #1
   1a834:	bl	178f0 <_rl_forward_char_internal@plt>
   1a838:	ldr	w8, [x21]
   1a83c:	mov	w24, w25
   1a840:	cmp	w0, w8
   1a844:	ccmp	w25, w0, #0x4, le
   1a848:	csel	w9, w8, w0, eq  // eq = none
   1a84c:	b	1a7ec <rl_vi_eWord@@Base+0x1d0>
   1a850:	ldp	x20, x19, [sp, #64]
   1a854:	ldp	x22, x21, [sp, #48]
   1a858:	ldp	x24, x23, [sp, #32]
   1a85c:	ldr	x25, [sp, #16]
   1a860:	mov	w0, wzr
   1a864:	ldp	x29, x30, [sp], #80
   1a868:	ret

000000000001a86c <rl_vi_eword@@Base>:
   1a86c:	stp	x29, x30, [sp, #-96]!
   1a870:	str	x27, [sp, #16]
   1a874:	stp	x26, x25, [sp, #32]
   1a878:	stp	x24, x23, [sp, #48]
   1a87c:	stp	x22, x21, [sp, #64]
   1a880:	stp	x20, x19, [sp, #80]
   1a884:	mov	x29, sp
   1a888:	cbz	w0, 1aaf4 <rl_vi_eword@@Base+0x288>
   1a88c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a890:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a894:	ldr	x21, [x21, #3512]
   1a898:	ldr	x22, [x22, #2656]
   1a89c:	ldr	w26, [x21]
   1a8a0:	ldr	w25, [x22]
   1a8a4:	sub	w8, w25, #0x1
   1a8a8:	cmp	w26, w8
   1a8ac:	b.ge	1aaf4 <rl_vi_eword@@Base+0x288>  // b.tcont
   1a8b0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a8b4:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1a8b8:	ldr	x23, [x23, #2480]
   1a8bc:	ldr	x24, [x24, #1896]
   1a8c0:	mov	w19, w0
   1a8c4:	cmp	w26, w25
   1a8c8:	b.ge	1a924 <rl_vi_eword@@Base+0xb8>  // b.tcont
   1a8cc:	ldr	x8, [x23]
   1a8d0:	ldrb	w8, [x8, w26, sxtw]
   1a8d4:	cmp	w8, #0x9
   1a8d8:	b.eq	1a924 <rl_vi_eword@@Base+0xb8>  // b.none
   1a8dc:	cmp	w8, #0x20
   1a8e0:	b.eq	1a924 <rl_vi_eword@@Base+0xb8>  // b.none
   1a8e4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a8e8:	ldr	w20, [x21]
   1a8ec:	cmp	x0, #0x1
   1a8f0:	b.eq	1a918 <rl_vi_eword@@Base+0xac>  // b.none
   1a8f4:	ldr	w8, [x24]
   1a8f8:	cbnz	w8, 1a918 <rl_vi_eword@@Base+0xac>
   1a8fc:	mov	w0, #0x1                   	// #1
   1a900:	bl	178f0 <_rl_forward_char_internal@plt>
   1a904:	ldr	w25, [x22]
   1a908:	cmp	w0, w25
   1a90c:	ccmp	w20, w0, #0x4, le
   1a910:	csel	w26, w25, w0, eq  // eq = none
   1a914:	b	1a920 <rl_vi_eword@@Base+0xb4>
   1a918:	ldr	w25, [x22]
   1a91c:	add	w26, w20, #0x1
   1a920:	str	w26, [x21]
   1a924:	cmp	w26, w25
   1a928:	sub	w19, w19, #0x1
   1a92c:	b.lt	1a95c <rl_vi_eword@@Base+0xf0>  // b.tstop
   1a930:	str	w26, [x21]
   1a934:	cbz	w19, 1aaf4 <rl_vi_eword@@Base+0x288>
   1a938:	sub	w8, w25, #0x1
   1a93c:	cmp	w26, w8
   1a940:	b.lt	1a8c4 <rl_vi_eword@@Base+0x58>  // b.tstop
   1a944:	b	1aaf4 <rl_vi_eword@@Base+0x288>
   1a948:	ldr	w25, [x22]
   1a94c:	add	w26, w20, #0x1
   1a950:	cmp	w26, w25
   1a954:	str	w26, [x21]
   1a958:	b.ge	1a930 <rl_vi_eword@@Base+0xc4>  // b.tcont
   1a95c:	ldr	x8, [x23]
   1a960:	ldrb	w27, [x8, w26, sxtw]
   1a964:	cmp	w27, #0x20
   1a968:	ccmp	w27, #0x9, #0x4, ne  // ne = any
   1a96c:	b.ne	1a9a4 <rl_vi_eword@@Base+0x138>  // b.any
   1a970:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a974:	ldr	w20, [x21]
   1a978:	cmp	x0, #0x1
   1a97c:	b.eq	1a948 <rl_vi_eword@@Base+0xdc>  // b.none
   1a980:	ldr	w8, [x24]
   1a984:	cbnz	w8, 1a948 <rl_vi_eword@@Base+0xdc>
   1a988:	mov	w0, #0x1                   	// #1
   1a98c:	bl	178f0 <_rl_forward_char_internal@plt>
   1a990:	ldr	w25, [x22]
   1a994:	cmp	w0, w25
   1a998:	ccmp	w20, w0, #0x4, le
   1a99c:	csel	w26, w25, w0, eq  // eq = none
   1a9a0:	b	1a950 <rl_vi_eword@@Base+0xe4>
   1a9a4:	bl	17100 <__ctype_b_loc@plt>
   1a9a8:	cmp	w27, #0x5f
   1a9ac:	mov	x20, x0
   1a9b0:	b.eq	1aa60 <rl_vi_eword@@Base+0x1f4>  // b.none
   1a9b4:	ldr	x8, [x20]
   1a9b8:	ldrh	w8, [x8, x27, lsl #1]
   1a9bc:	tbnz	w8, #3, 1aa60 <rl_vi_eword@@Base+0x1f4>
   1a9c0:	mov	w27, w26
   1a9c4:	cmp	w27, w25
   1a9c8:	b.ge	1aa0c <rl_vi_eword@@Base+0x1a0>  // b.tcont
   1a9cc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1a9d0:	ldr	w26, [x21]
   1a9d4:	cmp	x0, #0x1
   1a9d8:	b.eq	1aa14 <rl_vi_eword@@Base+0x1a8>  // b.none
   1a9dc:	ldr	w8, [x24]
   1a9e0:	cbnz	w8, 1aa14 <rl_vi_eword@@Base+0x1a8>
   1a9e4:	mov	w0, #0x1                   	// #1
   1a9e8:	bl	178f0 <_rl_forward_char_internal@plt>
   1a9ec:	ldr	w25, [x22]
   1a9f0:	cmp	w0, w25
   1a9f4:	ccmp	w26, w0, #0x4, le
   1a9f8:	csel	w8, w25, w0, eq  // eq = none
   1a9fc:	str	w8, [x21]
   1aa00:	cmp	w8, w25
   1aa04:	b.lt	1aa2c <rl_vi_eword@@Base+0x1c0>  // b.tstop
   1aa08:	b	1a930 <rl_vi_eword@@Base+0xc4>
   1aa0c:	mov	w8, w27
   1aa10:	b	1aa20 <rl_vi_eword@@Base+0x1b4>
   1aa14:	ldr	w25, [x22]
   1aa18:	add	w8, w26, #0x1
   1aa1c:	str	w8, [x21]
   1aa20:	mov	w26, w27
   1aa24:	cmp	w8, w25
   1aa28:	b.ge	1a930 <rl_vi_eword@@Base+0xc4>  // b.tcont
   1aa2c:	ldr	x9, [x23]
   1aa30:	ldrb	w9, [x9, w8, sxtw]
   1aa34:	cmp	x9, #0x5f
   1aa38:	b.eq	1a930 <rl_vi_eword@@Base+0xc4>  // b.none
   1aa3c:	ldr	x10, [x20]
   1aa40:	ldrh	w10, [x10, x9, lsl #1]
   1aa44:	tbnz	w10, #3, 1a930 <rl_vi_eword@@Base+0xc4>
   1aa48:	cmp	w9, #0x20
   1aa4c:	b.eq	1a930 <rl_vi_eword@@Base+0xc4>  // b.none
   1aa50:	cmp	w9, #0x9
   1aa54:	mov	w27, w8
   1aa58:	b.ne	1a9c4 <rl_vi_eword@@Base+0x158>  // b.any
   1aa5c:	b	1a930 <rl_vi_eword@@Base+0xc4>
   1aa60:	mov	w27, w26
   1aa64:	cmp	w27, w25
   1aa68:	b.ge	1aaac <rl_vi_eword@@Base+0x240>  // b.tcont
   1aa6c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1aa70:	ldr	w26, [x21]
   1aa74:	cmp	x0, #0x1
   1aa78:	b.eq	1aab4 <rl_vi_eword@@Base+0x248>  // b.none
   1aa7c:	ldr	w8, [x24]
   1aa80:	cbnz	w8, 1aab4 <rl_vi_eword@@Base+0x248>
   1aa84:	mov	w0, #0x1                   	// #1
   1aa88:	bl	178f0 <_rl_forward_char_internal@plt>
   1aa8c:	ldr	w25, [x22]
   1aa90:	cmp	w0, w25
   1aa94:	ccmp	w26, w0, #0x4, le
   1aa98:	csel	w8, w25, w0, eq  // eq = none
   1aa9c:	str	w8, [x21]
   1aaa0:	cmp	w8, w25
   1aaa4:	b.lt	1aacc <rl_vi_eword@@Base+0x260>  // b.tstop
   1aaa8:	b	1a930 <rl_vi_eword@@Base+0xc4>
   1aaac:	mov	w8, w27
   1aab0:	b	1aac0 <rl_vi_eword@@Base+0x254>
   1aab4:	ldr	w25, [x22]
   1aab8:	add	w8, w26, #0x1
   1aabc:	str	w8, [x21]
   1aac0:	mov	w26, w27
   1aac4:	cmp	w8, w25
   1aac8:	b.ge	1a930 <rl_vi_eword@@Base+0xc4>  // b.tcont
   1aacc:	ldr	x9, [x23]
   1aad0:	mov	w27, w8
   1aad4:	ldrb	w9, [x9, w8, sxtw]
   1aad8:	cmp	x9, #0x5f
   1aadc:	b.eq	1aa64 <rl_vi_eword@@Base+0x1f8>  // b.none
   1aae0:	ldr	x10, [x20]
   1aae4:	mov	w27, w8
   1aae8:	ldrh	w9, [x10, x9, lsl #1]
   1aaec:	tbnz	w9, #3, 1aa64 <rl_vi_eword@@Base+0x1f8>
   1aaf0:	b	1a930 <rl_vi_eword@@Base+0xc4>
   1aaf4:	ldp	x20, x19, [sp, #80]
   1aaf8:	ldp	x22, x21, [sp, #64]
   1aafc:	ldp	x24, x23, [sp, #48]
   1ab00:	ldp	x26, x25, [sp, #32]
   1ab04:	ldr	x27, [sp, #16]
   1ab08:	mov	w0, wzr
   1ab0c:	ldp	x29, x30, [sp], #96
   1ab10:	ret

000000000001ab14 <rl_vi_insert_beg@@Base>:
   1ab14:	stp	x29, x30, [sp, #-32]!
   1ab18:	mov	w0, #0x1                   	// #1
   1ab1c:	stp	x20, x19, [sp, #16]
   1ab20:	mov	x29, sp
   1ab24:	mov	w19, w1
   1ab28:	mov	w20, #0x1                   	// #1
   1ab2c:	bl	175b0 <rl_beg_of_line@plt>
   1ab30:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ab34:	ldr	x8, [x8, #3720]
   1ab38:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ab3c:	ldr	x9, [x9, #3640]
   1ab40:	ldr	w8, [x8]
   1ab44:	str	w19, [x9]
   1ab48:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1ab4c:	str	w20, [x9, #2972]
   1ab50:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1ab54:	str	w8, [x9, #2976]
   1ab58:	bl	16400 <rl_begin_undo_group@plt>
   1ab5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ab60:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ab64:	ldr	x8, [x8, #1992]
   1ab68:	ldr	x9, [x9, #2008]
   1ab6c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ab70:	ldr	w9, [x9]
   1ab74:	ldr	x10, [x10, #4032]
   1ab78:	str	x10, [x8]
   1ab7c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ab80:	str	w19, [x8, #128]
   1ab84:	cbz	w9, 1ab8c <rl_vi_insert_beg@@Base+0x78>
   1ab88:	bl	17640 <_rl_reset_prompt@plt>
   1ab8c:	ldp	x20, x19, [sp, #16]
   1ab90:	mov	w0, wzr
   1ab94:	ldp	x29, x30, [sp], #32
   1ab98:	ret

000000000001ab9c <rl_vi_insert_mode@@Base>:
   1ab9c:	stp	x29, x30, [sp, #-32]!
   1aba0:	str	x19, [sp, #16]
   1aba4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1aba8:	ldr	x8, [x8, #3720]
   1abac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1abb0:	ldr	x9, [x9, #3640]
   1abb4:	mov	w10, #0x1                   	// #1
   1abb8:	ldr	w8, [x8]
   1abbc:	mov	x29, sp
   1abc0:	str	w1, [x9]
   1abc4:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1abc8:	str	w10, [x9, #2972]
   1abcc:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1abd0:	mov	w19, w1
   1abd4:	str	w8, [x9, #2976]
   1abd8:	bl	16400 <rl_begin_undo_group@plt>
   1abdc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1abe0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1abe4:	ldr	x8, [x8, #1992]
   1abe8:	ldr	x9, [x9, #2008]
   1abec:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1abf0:	ldr	w9, [x9]
   1abf4:	ldr	x10, [x10, #4032]
   1abf8:	str	x10, [x8]
   1abfc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ac00:	str	w19, [x8, #128]
   1ac04:	cbz	w9, 1ac0c <rl_vi_insert_mode@@Base+0x70>
   1ac08:	bl	17640 <_rl_reset_prompt@plt>
   1ac0c:	ldr	x19, [sp, #16]
   1ac10:	mov	w0, wzr
   1ac14:	ldp	x29, x30, [sp], #32
   1ac18:	ret

000000000001ac1c <rl_vi_append_mode@@Base>:
   1ac1c:	stp	x29, x30, [sp, #-48]!
   1ac20:	stp	x22, x21, [sp, #16]
   1ac24:	stp	x20, x19, [sp, #32]
   1ac28:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ac2c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ac30:	ldr	x20, [x20, #3512]
   1ac34:	ldr	x21, [x21, #2656]
   1ac38:	mov	w19, w1
   1ac3c:	mov	x29, sp
   1ac40:	ldr	w8, [x20]
   1ac44:	ldr	w9, [x21]
   1ac48:	cmp	w8, w9
   1ac4c:	b.ge	1ac94 <rl_vi_append_mode@@Base+0x78>  // b.tcont
   1ac50:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1ac54:	ldr	w22, [x20]
   1ac58:	cmp	x0, #0x1
   1ac5c:	b.eq	1ac8c <rl_vi_append_mode@@Base+0x70>  // b.none
   1ac60:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ac64:	ldr	x8, [x8, #1896]
   1ac68:	ldr	w8, [x8]
   1ac6c:	cbnz	w8, 1ac8c <rl_vi_append_mode@@Base+0x70>
   1ac70:	mov	w0, #0x1                   	// #1
   1ac74:	bl	178f0 <_rl_forward_char_internal@plt>
   1ac78:	ldr	w8, [x21]
   1ac7c:	cmp	w0, w8
   1ac80:	ccmp	w22, w0, #0x4, le
   1ac84:	csel	w8, w8, w0, eq  // eq = none
   1ac88:	b	1ac90 <rl_vi_append_mode@@Base+0x74>
   1ac8c:	add	w8, w22, #0x1
   1ac90:	str	w8, [x20]
   1ac94:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ac98:	ldr	x8, [x8, #3720]
   1ac9c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1aca0:	ldr	x9, [x9, #3640]
   1aca4:	mov	w10, #0x1                   	// #1
   1aca8:	ldr	w8, [x8]
   1acac:	str	w19, [x9]
   1acb0:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1acb4:	str	w10, [x9, #2972]
   1acb8:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1acbc:	str	w8, [x9, #2976]
   1acc0:	bl	16400 <rl_begin_undo_group@plt>
   1acc4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1acc8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1accc:	ldr	x8, [x8, #1992]
   1acd0:	ldr	x9, [x9, #2008]
   1acd4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1acd8:	ldr	w9, [x9]
   1acdc:	ldr	x10, [x10, #4032]
   1ace0:	str	x10, [x8]
   1ace4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ace8:	str	w19, [x8, #128]
   1acec:	cbz	w9, 1acf4 <rl_vi_append_mode@@Base+0xd8>
   1acf0:	bl	17640 <_rl_reset_prompt@plt>
   1acf4:	ldp	x20, x19, [sp, #32]
   1acf8:	ldp	x22, x21, [sp, #16]
   1acfc:	mov	w0, wzr
   1ad00:	ldp	x29, x30, [sp], #48
   1ad04:	ret

000000000001ad08 <rl_vi_append_eol@@Base>:
   1ad08:	stp	x29, x30, [sp, #-64]!
   1ad0c:	mov	w0, #0x1                   	// #1
   1ad10:	str	x23, [sp, #16]
   1ad14:	stp	x22, x21, [sp, #32]
   1ad18:	stp	x20, x19, [sp, #48]
   1ad1c:	mov	x29, sp
   1ad20:	mov	w19, w1
   1ad24:	mov	w20, #0x1                   	// #1
   1ad28:	bl	170d0 <rl_end_of_line@plt>
   1ad2c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ad30:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ad34:	ldr	x21, [x21, #3512]
   1ad38:	ldr	x22, [x22, #2656]
   1ad3c:	ldr	w8, [x21]
   1ad40:	ldr	w9, [x22]
   1ad44:	cmp	w8, w9
   1ad48:	b.ge	1ad90 <rl_vi_append_eol@@Base+0x88>  // b.tcont
   1ad4c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1ad50:	ldr	w23, [x21]
   1ad54:	cmp	x0, #0x1
   1ad58:	b.eq	1ad88 <rl_vi_append_eol@@Base+0x80>  // b.none
   1ad5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ad60:	ldr	x8, [x8, #1896]
   1ad64:	ldr	w8, [x8]
   1ad68:	cbnz	w8, 1ad88 <rl_vi_append_eol@@Base+0x80>
   1ad6c:	mov	w0, #0x1                   	// #1
   1ad70:	bl	178f0 <_rl_forward_char_internal@plt>
   1ad74:	ldr	w8, [x22]
   1ad78:	cmp	w0, w8
   1ad7c:	ccmp	w23, w0, #0x4, le
   1ad80:	csel	w8, w8, w0, eq  // eq = none
   1ad84:	b	1ad8c <rl_vi_append_eol@@Base+0x84>
   1ad88:	add	w8, w23, #0x1
   1ad8c:	str	w8, [x21]
   1ad90:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ad94:	ldr	x8, [x8, #3720]
   1ad98:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ad9c:	ldr	x9, [x9, #3640]
   1ada0:	ldr	w8, [x8]
   1ada4:	str	w19, [x9]
   1ada8:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1adac:	str	w20, [x9, #2972]
   1adb0:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1adb4:	str	w8, [x9, #2976]
   1adb8:	bl	16400 <rl_begin_undo_group@plt>
   1adbc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1adc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1adc4:	ldr	x8, [x8, #1992]
   1adc8:	ldr	x9, [x9, #2008]
   1adcc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1add0:	ldr	w9, [x9]
   1add4:	ldr	x10, [x10, #4032]
   1add8:	str	x10, [x8]
   1addc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ade0:	str	w19, [x8, #128]
   1ade4:	cbz	w9, 1adec <rl_vi_append_eol@@Base+0xe4>
   1ade8:	bl	17640 <_rl_reset_prompt@plt>
   1adec:	ldp	x20, x19, [sp, #48]
   1adf0:	ldp	x22, x21, [sp, #32]
   1adf4:	ldr	x23, [sp, #16]
   1adf8:	mov	w0, wzr
   1adfc:	ldp	x29, x30, [sp], #64
   1ae00:	ret

000000000001ae04 <rl_vi_eof_maybe@@Base>:
   1ae04:	mov	w0, #0x1                   	// #1
   1ae08:	mov	w1, #0xa                   	// #10
   1ae0c:	b	16af0 <rl_newline@plt>

000000000001ae10 <_rl_vi_done_inserting@@Base>:
   1ae10:	stp	x29, x30, [sp, #-48]!
   1ae14:	stp	x20, x19, [sp, #32]
   1ae18:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1ae1c:	ldrb	w8, [x19, #132]
   1ae20:	str	x21, [sp, #16]
   1ae24:	mov	x29, sp
   1ae28:	cmp	w8, #0x1
   1ae2c:	b.ne	1aea8 <_rl_vi_done_inserting@@Base+0x98>  // b.any
   1ae30:	bl	17830 <rl_end_undo_group@plt>
   1ae34:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ae38:	ldr	w9, [x8, #128]
   1ae3c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ae40:	ldr	x8, [x8, #3040]
   1ae44:	strb	wzr, [x19, #132]
   1ae48:	cmp	w9, #0x52
   1ae4c:	ldr	x8, [x8]
   1ae50:	b.ne	1af18 <_rl_vi_done_inserting@@Base+0x108>  // b.any
   1ae54:	cbz	x8, 1af54 <_rl_vi_done_inserting@@Base+0x144>
   1ae58:	ldr	w8, [x8, #24]
   1ae5c:	cmp	w8, #0x3
   1ae60:	b.ne	1af54 <_rl_vi_done_inserting@@Base+0x144>  // b.any
   1ae64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ae68:	ldr	w19, [x8, #184]
   1ae6c:	cmp	w19, #0x0
   1ae70:	b.le	1af54 <_rl_vi_done_inserting@@Base+0x144>
   1ae74:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ae78:	ldr	x9, [x9, #3512]
   1ae7c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ae80:	add	w10, w19, #0x1
   1ae84:	ldr	w11, [x9]
   1ae88:	ldr	w9, [x8, #200]
   1ae8c:	sub	w11, w11, w19
   1ae90:	cmp	w9, w10
   1ae94:	add	w20, w11, #0x1
   1ae98:	b.le	1b028 <_rl_vi_done_inserting@@Base+0x218>
   1ae9c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1aea0:	ldr	x0, [x8, #120]
   1aea4:	b	1b050 <_rl_vi_done_inserting@@Base+0x240>
   1aea8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1aeac:	ldr	x8, [x8, #3040]
   1aeb0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1aeb4:	ldr	w9, [x9, #128]
   1aeb8:	ldr	x8, [x8]
   1aebc:	cbz	x8, 1af74 <_rl_vi_done_inserting@@Base+0x164>
   1aec0:	sub	w10, w9, #0x41
   1aec4:	ror	w10, w10, #3
   1aec8:	cmp	w10, #0x5
   1aecc:	b.hi	1af74 <_rl_vi_done_inserting@@Base+0x164>  // b.pmore
   1aed0:	mov	w11, #0x1                   	// #1
   1aed4:	lsl	w10, w11, w10
   1aed8:	mov	w11, #0x33                  	// #51
   1aedc:	tst	w10, w11
   1aee0:	b.eq	1af74 <_rl_vi_done_inserting@@Base+0x164>  // b.none
   1aee4:	ldr	w9, [x8, #24]
   1aee8:	cmp	w9, #0x1
   1aeec:	b.ne	1af84 <_rl_vi_done_inserting@@Base+0x174>  // b.any
   1aef0:	ldpsw	x20, x9, [x8, #8]
   1aef4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1aef8:	ldr	w10, [x8, #200]
   1aefc:	sub	x19, x9, x20
   1af00:	add	w9, w19, #0x1
   1af04:	cmp	w10, w9
   1af08:	b.le	1afa4 <_rl_vi_done_inserting@@Base+0x194>
   1af0c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af10:	ldr	x0, [x8, #120]
   1af14:	b	1afdc <_rl_vi_done_inserting@@Base+0x1cc>
   1af18:	ldr	x8, [x8]
   1af1c:	cbz	x8, 1af54 <_rl_vi_done_inserting@@Base+0x144>
   1af20:	ldr	w9, [x8, #24]
   1af24:	cmp	w9, #0x1
   1af28:	b.ne	1af54 <_rl_vi_done_inserting@@Base+0x144>  // b.any
   1af2c:	ldpsw	x20, x9, [x8, #8]
   1af30:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af34:	ldr	w10, [x8, #200]
   1af38:	sub	x19, x9, x20
   1af3c:	add	w9, w19, #0x1
   1af40:	cmp	w10, w9
   1af44:	b.le	1b064 <_rl_vi_done_inserting@@Base+0x254>
   1af48:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af4c:	ldr	x0, [x8, #120]
   1af50:	b	1b09c <_rl_vi_done_inserting@@Base+0x28c>
   1af54:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af58:	ldr	w8, [x8, #200]
   1af5c:	cmp	w8, #0x1
   1af60:	b.lt	1b0c0 <_rl_vi_done_inserting@@Base+0x2b0>  // b.tstop
   1af64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af68:	ldr	x8, [x8, #120]
   1af6c:	strb	wzr, [x8]
   1af70:	b	1b0c0 <_rl_vi_done_inserting@@Base+0x2b0>
   1af74:	cmp	w9, #0x43
   1af78:	b.ne	1b000 <_rl_vi_done_inserting@@Base+0x1f0>  // b.any
   1af7c:	bl	17830 <rl_end_undo_group@plt>
   1af80:	b	1b000 <_rl_vi_done_inserting@@Base+0x1f0>
   1af84:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af88:	ldr	w8, [x8, #200]
   1af8c:	cmp	w8, #0x1
   1af90:	b.lt	1b000 <_rl_vi_done_inserting@@Base+0x1f0>  // b.tstop
   1af94:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1af98:	ldr	x8, [x8, #120]
   1af9c:	strb	wzr, [x8]
   1afa0:	b	1b000 <_rl_vi_done_inserting@@Base+0x1f0>
   1afa4:	add	w11, w9, #0x1f
   1afa8:	cmp	w9, #0x0
   1afac:	csel	w11, w11, w9, lt  // lt = tstop
   1afb0:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1afb4:	and	w11, w11, #0xffffffe0
   1afb8:	add	w10, w19, w10
   1afbc:	ldr	x0, [x21, #120]
   1afc0:	sub	w9, w11, w9
   1afc4:	add	w9, w10, w9
   1afc8:	add	w9, w9, #0x21
   1afcc:	sxtw	x1, w9
   1afd0:	str	w9, [x8, #200]
   1afd4:	bl	16a50 <xrealloc@plt>
   1afd8:	str	x0, [x21, #120]
   1afdc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1afe0:	ldr	x8, [x8, #2480]
   1afe4:	mov	x2, x19
   1afe8:	ldr	x8, [x8]
   1afec:	add	x1, x8, x20
   1aff0:	bl	17730 <strncpy@plt>
   1aff4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1aff8:	ldr	x8, [x8, #120]
   1affc:	strb	wzr, [x8, x19]
   1b000:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b004:	ldr	x19, [x19, #4048]
   1b008:	ldr	w8, [x19]
   1b00c:	cmp	w8, #0x1
   1b010:	b.lt	1b0c0 <_rl_vi_done_inserting@@Base+0x2b0>  // b.tstop
   1b014:	bl	17830 <rl_end_undo_group@plt>
   1b018:	ldr	w8, [x19]
   1b01c:	cmp	w8, #0x0
   1b020:	b.gt	1b014 <_rl_vi_done_inserting@@Base+0x204>
   1b024:	b	1b0c0 <_rl_vi_done_inserting@@Base+0x2b0>
   1b028:	and	w10, w10, #0x1f
   1b02c:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1b030:	sub	w10, w19, w10
   1b034:	ldr	x0, [x21, #120]
   1b038:	add	w9, w10, w9
   1b03c:	add	w9, w9, #0x21
   1b040:	sxtw	x1, w9
   1b044:	str	w9, [x8, #200]
   1b048:	bl	16a50 <xrealloc@plt>
   1b04c:	str	x0, [x21, #120]
   1b050:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b054:	ldr	x8, [x8, #2480]
   1b058:	ldr	x8, [x8]
   1b05c:	add	x1, x8, w20, sxtw
   1b060:	b	1b0ac <_rl_vi_done_inserting@@Base+0x29c>
   1b064:	add	w11, w9, #0x1f
   1b068:	cmp	w9, #0x0
   1b06c:	csel	w11, w11, w9, lt  // lt = tstop
   1b070:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1b074:	and	w11, w11, #0xffffffe0
   1b078:	add	w10, w19, w10
   1b07c:	ldr	x0, [x21, #120]
   1b080:	sub	w9, w11, w9
   1b084:	add	w9, w10, w9
   1b088:	add	w9, w9, #0x21
   1b08c:	sxtw	x1, w9
   1b090:	str	w9, [x8, #200]
   1b094:	bl	16a50 <xrealloc@plt>
   1b098:	str	x0, [x21, #120]
   1b09c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b0a0:	ldr	x8, [x8, #2480]
   1b0a4:	ldr	x8, [x8]
   1b0a8:	add	x1, x8, x20
   1b0ac:	mov	x2, x19
   1b0b0:	bl	17730 <strncpy@plt>
   1b0b4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1b0b8:	ldr	x8, [x8, #120]
   1b0bc:	strb	wzr, [x8, x19]
   1b0c0:	ldp	x20, x19, [sp, #32]
   1b0c4:	ldr	x21, [sp, #16]
   1b0c8:	ldp	x29, x30, [sp], #48
   1b0cc:	ret

000000000001b0d0 <rl_vi_movement_mode@@Base>:
   1b0d0:	stp	x29, x30, [sp, #-32]!
   1b0d4:	str	x19, [sp, #16]
   1b0d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b0dc:	ldr	x8, [x8, #3512]
   1b0e0:	mov	x29, sp
   1b0e4:	ldr	w8, [x8]
   1b0e8:	cmp	w8, #0x1
   1b0ec:	b.lt	1b0f8 <rl_vi_movement_mode@@Base+0x28>  // b.tstop
   1b0f0:	mov	w0, #0x1                   	// #1
   1b0f4:	bl	16f70 <rl_backward_char@plt>
   1b0f8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b0fc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b100:	ldr	x8, [x8, #1992]
   1b104:	ldr	x9, [x9, #3824]
   1b108:	str	x9, [x8]
   1b10c:	bl	17760 <_rl_vi_done_inserting@plt>
   1b110:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b114:	ldr	x19, [x19, #2984]
   1b118:	ldrb	w8, [x19, #2]
   1b11c:	tbnz	w8, #6, 1b124 <rl_vi_movement_mode@@Base+0x54>
   1b120:	bl	17550 <rl_free_undo_list@plt>
   1b124:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b128:	ldr	x8, [x8, #2008]
   1b12c:	ldr	w8, [x8]
   1b130:	cbz	w8, 1b138 <rl_vi_movement_mode@@Base+0x68>
   1b134:	bl	17640 <_rl_reset_prompt@plt>
   1b138:	ldr	x8, [x19]
   1b13c:	mov	w0, wzr
   1b140:	orr	x8, x8, #0x400000
   1b144:	str	x8, [x19]
   1b148:	ldr	x19, [sp, #16]
   1b14c:	ldp	x29, x30, [sp], #32
   1b150:	ret

000000000001b154 <rl_vi_arg_digit@@Base>:
   1b154:	cmp	w1, #0x30
   1b158:	b.ne	1b18c <rl_vi_arg_digit@@Base+0x38>  // b.any
   1b15c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b160:	ldr	x8, [x8, #3904]
   1b164:	ldr	w8, [x8]
   1b168:	cmp	w8, #0x1
   1b16c:	b.ne	1b18c <rl_vi_arg_digit@@Base+0x38>  // b.any
   1b170:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b174:	ldr	x8, [x8, #3792]
   1b178:	ldr	w8, [x8]
   1b17c:	cbnz	w8, 1b18c <rl_vi_arg_digit@@Base+0x38>
   1b180:	mov	w0, #0x1                   	// #1
   1b184:	mov	w1, #0x30                  	// #48
   1b188:	b	175b0 <rl_beg_of_line@plt>
   1b18c:	b	163d0 <rl_digit_argument@plt>

000000000001b190 <rl_vi_change_case@@Base>:
   1b190:	sub	sp, sp, #0x80
   1b194:	stp	x29, x30, [sp, #32]
   1b198:	str	x27, [sp, #48]
   1b19c:	stp	x26, x25, [sp, #64]
   1b1a0:	stp	x24, x23, [sp, #80]
   1b1a4:	stp	x22, x21, [sp, #96]
   1b1a8:	stp	x20, x19, [sp, #112]
   1b1ac:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b1b0:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b1b4:	ldr	x23, [x23, #3512]
   1b1b8:	ldr	x24, [x24, #2656]
   1b1bc:	add	x29, sp, #0x20
   1b1c0:	ldr	w8, [x23]
   1b1c4:	ldr	w9, [x24]
   1b1c8:	cmp	w8, w9
   1b1cc:	b.ge	1b4f8 <rl_vi_change_case@@Base+0x368>  // b.tcont
   1b1d0:	mov	w19, w0
   1b1d4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b1d8:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b1dc:	ldr	x25, [x25, #1896]
   1b1e0:	cmp	x0, #0x2
   1b1e4:	b.cc	1b3c0 <rl_vi_change_case@@Base+0x230>  // b.lo, b.ul, b.last
   1b1e8:	ldr	w8, [x25]
   1b1ec:	cbnz	w8, 1b3c0 <rl_vi_change_case@@Base+0x230>
   1b1f0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b1f4:	ldr	x20, [x20, #2480]
   1b1f8:	ldr	w1, [x23]
   1b1fc:	mov	x2, sp
   1b200:	str	xzr, [sp]
   1b204:	ldr	x0, [x20]
   1b208:	bl	17170 <_rl_adjust_point@plt>
   1b20c:	ldr	w8, [x23]
   1b210:	ldr	w9, [x24]
   1b214:	cmp	w0, #0x0
   1b218:	cset	w11, gt
   1b21c:	csetm	w10, gt
   1b220:	cmp	w9, w8
   1b224:	b.le	1b4f8 <rl_vi_change_case@@Base+0x368>
   1b228:	sub	w11, w19, w11
   1b22c:	cbz	w11, 1b4f8 <rl_vi_change_case@@Base+0x368>
   1b230:	add	w10, w19, w10
   1b234:	sub	w19, w10, #0x1
   1b238:	add	x21, sp, #0xc
   1b23c:	ldr	x10, [x20]
   1b240:	sub	w9, w9, w8
   1b244:	sxtw	x2, w9
   1b248:	add	x0, x29, #0x1c
   1b24c:	add	x1, x10, w8, sxtw
   1b250:	mov	x3, sp
   1b254:	bl	16370 <mbrtowc@plt>
   1b258:	cmn	x0, #0x2
   1b25c:	b.cc	1b274 <rl_vi_change_case@@Base+0xe4>  // b.lo, b.ul, b.last
   1b260:	ldr	x8, [x20]
   1b264:	ldrsw	x9, [x23]
   1b268:	ldrb	w0, [x8, x9]
   1b26c:	str	w0, [x29, #28]
   1b270:	b	1b284 <rl_vi_change_case@@Base+0xf4>
   1b274:	cbz	x0, 1b280 <rl_vi_change_case@@Base+0xf0>
   1b278:	ldr	w0, [x29, #28]
   1b27c:	b	1b284 <rl_vi_change_case@@Base+0xf4>
   1b280:	str	wzr, [x29, #28]
   1b284:	bl	17580 <iswupper@plt>
   1b288:	ldr	w8, [x29, #28]
   1b28c:	cbz	w0, 1b29c <rl_vi_change_case@@Base+0x10c>
   1b290:	mov	w0, w8
   1b294:	bl	17940 <towlower@plt>
   1b298:	b	1b2b0 <rl_vi_change_case@@Base+0x120>
   1b29c:	mov	w0, w8
   1b2a0:	bl	179f0 <iswlower@plt>
   1b2a4:	cbz	w0, 1b338 <rl_vi_change_case@@Base+0x1a8>
   1b2a8:	ldr	w0, [x29, #28]
   1b2ac:	bl	17770 <towupper@plt>
   1b2b0:	mov	w1, w0
   1b2b4:	str	w0, [x29, #28]
   1b2b8:	cbz	w0, 1b330 <rl_vi_change_case@@Base+0x1a0>
   1b2bc:	ldr	w22, [x23]
   1b2c0:	add	x0, sp, #0xc
   1b2c4:	mov	x2, sp
   1b2c8:	bl	179d0 <wcrtomb@plt>
   1b2cc:	tbnz	w0, #31, 1b2d4 <rl_vi_change_case@@Base+0x144>
   1b2d0:	strb	wzr, [x21, w0, sxtw]
   1b2d4:	bl	16400 <rl_begin_undo_group@plt>
   1b2d8:	mov	w0, #0x1                   	// #1
   1b2dc:	mov	w1, wzr
   1b2e0:	bl	17620 <rl_vi_delete@plt>
   1b2e4:	ldr	w8, [x23]
   1b2e8:	cmp	w8, w22
   1b2ec:	b.ge	1b350 <rl_vi_change_case@@Base+0x1c0>  // b.tcont
   1b2f0:	ldr	w9, [x24]
   1b2f4:	cmp	w8, w9
   1b2f8:	b.ge	1b350 <rl_vi_change_case@@Base+0x1c0>  // b.tcont
   1b2fc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b300:	ldr	w22, [x23]
   1b304:	cmp	x0, #0x1
   1b308:	b.eq	1b348 <rl_vi_change_case@@Base+0x1b8>  // b.none
   1b30c:	ldr	w8, [x25]
   1b310:	cbnz	w8, 1b348 <rl_vi_change_case@@Base+0x1b8>
   1b314:	mov	w0, #0x1                   	// #1
   1b318:	bl	178f0 <_rl_forward_char_internal@plt>
   1b31c:	ldr	w8, [x24]
   1b320:	cmp	w0, w8
   1b324:	ccmp	w22, w0, #0x4, le
   1b328:	csel	w8, w8, w0, eq  // eq = none
   1b32c:	b	1b34c <rl_vi_change_case@@Base+0x1bc>
   1b330:	mov	w0, #0x1                   	// #1
   1b334:	b	1b340 <rl_vi_change_case@@Base+0x1b0>
   1b338:	mov	w0, #0x1                   	// #1
   1b33c:	mov	w1, wzr
   1b340:	bl	16780 <rl_forward_char@plt>
   1b344:	b	1b3a4 <rl_vi_change_case@@Base+0x214>
   1b348:	add	w8, w22, #0x1
   1b34c:	str	w8, [x23]
   1b350:	add	x0, sp, #0xc
   1b354:	bl	16430 <rl_insert_text@plt>
   1b358:	bl	17830 <rl_end_undo_group@plt>
   1b35c:	ldr	w8, [x23]
   1b360:	cbz	w8, 1b3a4 <rl_vi_change_case@@Base+0x214>
   1b364:	ldr	w9, [x24]
   1b368:	cmp	w8, w9
   1b36c:	b.ne	1b3a4 <rl_vi_change_case@@Base+0x214>  // b.any
   1b370:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b374:	cmp	x0, #0x2
   1b378:	b.cc	1b398 <rl_vi_change_case@@Base+0x208>  // b.lo, b.ul, b.last
   1b37c:	ldr	w8, [x25]
   1b380:	cbnz	w8, 1b398 <rl_vi_change_case@@Base+0x208>
   1b384:	ldr	x0, [x20]
   1b388:	ldr	w1, [x23]
   1b38c:	mov	w2, #0x1                   	// #1
   1b390:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1b394:	b	1b3a0 <rl_vi_change_case@@Base+0x210>
   1b398:	ldr	w8, [x23]
   1b39c:	sub	w0, w8, #0x1
   1b3a0:	str	w0, [x23]
   1b3a4:	subs	w19, w19, #0x1
   1b3a8:	b.cc	1b4f8 <rl_vi_change_case@@Base+0x368>  // b.lo, b.ul, b.last
   1b3ac:	ldr	w8, [x23]
   1b3b0:	ldr	w9, [x24]
   1b3b4:	cmp	w9, w8
   1b3b8:	b.gt	1b23c <rl_vi_change_case@@Base+0xac>
   1b3bc:	b	1b4f8 <rl_vi_change_case@@Base+0x368>
   1b3c0:	cbz	w19, 1b4f8 <rl_vi_change_case@@Base+0x368>
   1b3c4:	ldr	w22, [x23]
   1b3c8:	ldr	w8, [x24]
   1b3cc:	cmp	w22, w8
   1b3d0:	b.ge	1b4f8 <rl_vi_change_case@@Base+0x368>  // b.tcont
   1b3d4:	bl	17100 <__ctype_b_loc@plt>
   1b3d8:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b3dc:	ldr	x26, [x26, #2480]
   1b3e0:	mov	x20, x0
   1b3e4:	mov	w21, wzr
   1b3e8:	sub	w19, w19, #0x1
   1b3ec:	ldr	x8, [x26]
   1b3f0:	ldr	x9, [x20]
   1b3f4:	ldrb	w27, [x8, w22, sxtw]
   1b3f8:	ldrh	w8, [x9, x27, lsl #1]
   1b3fc:	tbnz	w8, #8, 1b42c <rl_vi_change_case@@Base+0x29c>
   1b400:	tbnz	w8, #9, 1b434 <rl_vi_change_case@@Base+0x2a4>
   1b404:	mov	w0, #0x1                   	// #1
   1b408:	mov	w1, w21
   1b40c:	bl	16780 <rl_forward_char@plt>
   1b410:	subs	w19, w19, #0x1
   1b414:	b.cc	1b4f8 <rl_vi_change_case@@Base+0x368>  // b.lo, b.ul, b.last
   1b418:	ldr	w22, [x23]
   1b41c:	ldr	w8, [x24]
   1b420:	cmp	w22, w8
   1b424:	b.lt	1b3ec <rl_vi_change_case@@Base+0x25c>  // b.tstop
   1b428:	b	1b4f8 <rl_vi_change_case@@Base+0x368>
   1b42c:	bl	16810 <__ctype_tolower_loc@plt>
   1b430:	b	1b438 <rl_vi_change_case@@Base+0x2a8>
   1b434:	bl	16dc0 <__ctype_toupper_loc@plt>
   1b438:	ldr	x8, [x0]
   1b43c:	ldr	w21, [x8, x27, lsl #2]
   1b440:	cbz	w21, 1b4c0 <rl_vi_change_case@@Base+0x330>
   1b444:	bl	16400 <rl_begin_undo_group@plt>
   1b448:	mov	w0, #0x1                   	// #1
   1b44c:	mov	w1, w21
   1b450:	bl	17620 <rl_vi_delete@plt>
   1b454:	ldr	w8, [x23]
   1b458:	cmp	w8, w22
   1b45c:	b.ge	1b468 <rl_vi_change_case@@Base+0x2d8>  // b.tcont
   1b460:	add	w8, w8, #0x1
   1b464:	str	w8, [x23]
   1b468:	mov	w0, #0x1                   	// #1
   1b46c:	mov	w1, w21
   1b470:	bl	16d40 <_rl_insert_char@plt>
   1b474:	bl	17830 <rl_end_undo_group@plt>
   1b478:	ldr	w22, [x23]
   1b47c:	cbz	w22, 1b4d0 <rl_vi_change_case@@Base+0x340>
   1b480:	ldr	w8, [x24]
   1b484:	cmp	w22, w8
   1b488:	b.ne	1b4d0 <rl_vi_change_case@@Base+0x340>  // b.any
   1b48c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b490:	cmp	x0, #0x2
   1b494:	b.cc	1b4e8 <rl_vi_change_case@@Base+0x358>  // b.lo, b.ul, b.last
   1b498:	ldr	w8, [x25]
   1b49c:	cbnz	w8, 1b4e8 <rl_vi_change_case@@Base+0x358>
   1b4a0:	ldr	x0, [x26]
   1b4a4:	ldr	w1, [x23]
   1b4a8:	mov	w2, #0x1                   	// #1
   1b4ac:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1b4b0:	mov	w22, w0
   1b4b4:	str	w0, [x23]
   1b4b8:	cbnz	w19, 1b4d4 <rl_vi_change_case@@Base+0x344>
   1b4bc:	b	1b4f8 <rl_vi_change_case@@Base+0x368>
   1b4c0:	mov	w0, #0x1                   	// #1
   1b4c4:	mov	w1, wzr
   1b4c8:	bl	16780 <rl_forward_char@plt>
   1b4cc:	ldr	w22, [x23]
   1b4d0:	cbz	w19, 1b4f8 <rl_vi_change_case@@Base+0x368>
   1b4d4:	ldr	w8, [x24]
   1b4d8:	cmp	w22, w8
   1b4dc:	b.ge	1b4f8 <rl_vi_change_case@@Base+0x368>  // b.tcont
   1b4e0:	sub	w19, w19, #0x1
   1b4e4:	b	1b3ec <rl_vi_change_case@@Base+0x25c>
   1b4e8:	ldr	w8, [x23]
   1b4ec:	sub	w22, w8, #0x1
   1b4f0:	str	w22, [x23]
   1b4f4:	cbnz	w19, 1b4d4 <rl_vi_change_case@@Base+0x344>
   1b4f8:	ldp	x20, x19, [sp, #112]
   1b4fc:	ldp	x22, x21, [sp, #96]
   1b500:	ldp	x24, x23, [sp, #80]
   1b504:	ldp	x26, x25, [sp, #64]
   1b508:	ldr	x27, [sp, #48]
   1b50c:	ldp	x29, x30, [sp, #32]
   1b510:	mov	w0, wzr
   1b514:	add	sp, sp, #0x80
   1b518:	ret

000000000001b51c <rl_vi_delete@@Base>:
   1b51c:	stp	x29, x30, [sp, #-48]!
   1b520:	stp	x20, x19, [sp, #32]
   1b524:	mov	w19, w1
   1b528:	mov	w20, w0
   1b52c:	stp	x22, x21, [sp, #16]
   1b530:	mov	x29, sp
   1b534:	tbnz	w0, #31, 1b590 <rl_vi_delete@@Base+0x74>
   1b538:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b53c:	ldr	x21, [x21, #2656]
   1b540:	ldr	w8, [x21]
   1b544:	cbz	w8, 1b5a8 <rl_vi_delete@@Base+0x8c>
   1b548:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b54c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b550:	ldr	x22, [x22, #3512]
   1b554:	cmp	x0, #0x2
   1b558:	b.cc	1b5b4 <rl_vi_delete@@Base+0x98>  // b.lo, b.ul, b.last
   1b55c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b560:	ldr	x8, [x8, #1896]
   1b564:	ldr	w8, [x8]
   1b568:	cbnz	w8, 1b5b4 <rl_vi_delete@@Base+0x98>
   1b56c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b570:	ldr	x8, [x8, #2480]
   1b574:	ldr	w1, [x22]
   1b578:	mov	w3, #0x1                   	// #1
   1b57c:	mov	w2, w20
   1b580:	ldr	x0, [x8]
   1b584:	bl	16c00 <_rl_find_next_mbchar@plt>
   1b588:	ldr	w8, [x22]
   1b58c:	b	1b5bc <rl_vi_delete@@Base+0xa0>
   1b590:	neg	w0, w20
   1b594:	mov	w1, w19
   1b598:	ldp	x20, x19, [sp, #32]
   1b59c:	ldp	x22, x21, [sp, #16]
   1b5a0:	ldp	x29, x30, [sp], #48
   1b5a4:	b	17540 <rl_vi_rubout@plt>
   1b5a8:	bl	17390 <rl_ding@plt>
   1b5ac:	mov	w0, #0x1                   	// #1
   1b5b0:	b	1b5fc <rl_vi_delete@@Base+0xe0>
   1b5b4:	ldr	w8, [x22]
   1b5b8:	add	w0, w8, w20
   1b5bc:	ldr	w9, [x21]
   1b5c0:	cmp	w0, w9
   1b5c4:	csel	w1, w0, w9, lt  // lt = tstop
   1b5c8:	mov	w0, w8
   1b5cc:	bl	16cb0 <rl_kill_text@plt>
   1b5d0:	ldr	w8, [x22]
   1b5d4:	mov	w0, wzr
   1b5d8:	cmp	w8, #0x1
   1b5dc:	b.lt	1b5fc <rl_vi_delete@@Base+0xe0>  // b.tstop
   1b5e0:	ldr	w9, [x21]
   1b5e4:	cmp	w8, w9
   1b5e8:	b.ne	1b5fc <rl_vi_delete@@Base+0xe0>  // b.any
   1b5ec:	mov	w0, #0x1                   	// #1
   1b5f0:	mov	w1, w19
   1b5f4:	bl	16f70 <rl_backward_char@plt>
   1b5f8:	mov	w0, wzr
   1b5fc:	ldp	x20, x19, [sp, #32]
   1b600:	ldp	x22, x21, [sp, #16]
   1b604:	ldp	x29, x30, [sp], #48
   1b608:	ret

000000000001b60c <rl_vi_check@@Base>:
   1b60c:	stp	x29, x30, [sp, #-32]!
   1b610:	str	x19, [sp, #16]
   1b614:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b618:	ldr	x19, [x19, #3512]
   1b61c:	mov	x29, sp
   1b620:	ldr	w8, [x19]
   1b624:	cbz	w8, 1b680 <rl_vi_check@@Base+0x74>
   1b628:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b62c:	ldr	x9, [x9, #2656]
   1b630:	ldr	w9, [x9]
   1b634:	cmp	w8, w9
   1b638:	b.ne	1b680 <rl_vi_check@@Base+0x74>  // b.any
   1b63c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b640:	cmp	x0, #0x2
   1b644:	b.cc	1b674 <rl_vi_check@@Base+0x68>  // b.lo, b.ul, b.last
   1b648:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b64c:	ldr	x8, [x8, #1896]
   1b650:	ldr	w8, [x8]
   1b654:	cbnz	w8, 1b674 <rl_vi_check@@Base+0x68>
   1b658:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b65c:	ldr	x8, [x8, #2480]
   1b660:	ldr	w1, [x19]
   1b664:	mov	w2, #0x1                   	// #1
   1b668:	ldr	x0, [x8]
   1b66c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1b670:	b	1b67c <rl_vi_check@@Base+0x70>
   1b674:	ldr	w8, [x19]
   1b678:	sub	w0, w8, #0x1
   1b67c:	str	w0, [x19]
   1b680:	ldr	x19, [sp, #16]
   1b684:	mov	w0, wzr
   1b688:	ldp	x29, x30, [sp], #32
   1b68c:	ret

000000000001b690 <rl_vi_put@@Base>:
   1b690:	stp	x29, x30, [sp, #-48]!
   1b694:	str	x21, [sp, #16]
   1b698:	stp	x20, x19, [sp, #32]
   1b69c:	mov	x29, sp
   1b6a0:	mov	w19, w1
   1b6a4:	mov	w20, w0
   1b6a8:	bl	17100 <__ctype_b_loc@plt>
   1b6ac:	ldr	x8, [x0]
   1b6b0:	and	w9, w19, #0xff
   1b6b4:	ldrh	w8, [x8, w9, uxtw #1]
   1b6b8:	tbnz	w8, #8, 1b6f8 <rl_vi_put@@Base+0x68>
   1b6bc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b6c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b6c4:	ldr	x21, [x21, #3512]
   1b6c8:	ldr	x8, [x8, #2656]
   1b6cc:	ldr	w1, [x21]
   1b6d0:	ldr	w8, [x8]
   1b6d4:	cmp	w1, w8
   1b6d8:	b.ge	1b6f8 <rl_vi_put@@Base+0x68>  // b.tcont
   1b6dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b6e0:	ldr	x8, [x8, #2480]
   1b6e4:	mov	w2, #0x1                   	// #1
   1b6e8:	mov	w3, #0x1                   	// #1
   1b6ec:	ldr	x0, [x8]
   1b6f0:	bl	16c00 <_rl_find_next_mbchar@plt>
   1b6f4:	str	w0, [x21]
   1b6f8:	cbz	w20, 1b710 <rl_vi_put@@Base+0x80>
   1b6fc:	mov	w0, #0x1                   	// #1
   1b700:	mov	w1, w19
   1b704:	sub	w20, w20, #0x1
   1b708:	bl	16c70 <rl_yank@plt>
   1b70c:	cbnz	w20, 1b6fc <rl_vi_put@@Base+0x6c>
   1b710:	mov	w0, #0x1                   	// #1
   1b714:	mov	w1, w19
   1b718:	bl	16f70 <rl_backward_char@plt>
   1b71c:	ldp	x20, x19, [sp, #32]
   1b720:	ldr	x21, [sp, #16]
   1b724:	mov	w0, wzr
   1b728:	ldp	x29, x30, [sp], #48
   1b72c:	ret

000000000001b730 <rl_vi_column@@Base>:
   1b730:	stp	x29, x30, [sp, #-32]!
   1b734:	str	x19, [sp, #16]
   1b738:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b73c:	ldr	x8, [x8, #2656]
   1b740:	mov	x29, sp
   1b744:	ldr	w8, [x8]
   1b748:	cmp	w8, w0
   1b74c:	b.ge	1b75c <rl_vi_column@@Base+0x2c>  // b.tcont
   1b750:	mov	w0, #0x1                   	// #1
   1b754:	bl	170d0 <rl_end_of_line@plt>
   1b758:	b	1b774 <rl_vi_column@@Base+0x44>
   1b75c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b760:	ldr	x19, [x19, #3512]
   1b764:	sub	w0, w0, #0x1
   1b768:	str	wzr, [x19]
   1b76c:	bl	178f0 <_rl_forward_char_internal@plt>
   1b770:	str	w0, [x19]
   1b774:	ldr	x19, [sp, #16]
   1b778:	mov	w0, wzr
   1b77c:	ldp	x29, x30, [sp], #32
   1b780:	ret

000000000001b784 <_rl_vi_domove_motion_cleanup@@Base>:
   1b784:	stp	x29, x30, [sp, #-96]!
   1b788:	stp	x28, x27, [sp, #16]
   1b78c:	stp	x26, x25, [sp, #32]
   1b790:	stp	x24, x23, [sp, #48]
   1b794:	stp	x22, x21, [sp, #64]
   1b798:	stp	x20, x19, [sp, #80]
   1b79c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b7a0:	ldrsw	x8, [x1, #24]
   1b7a4:	ldr	x26, [x26, #2480]
   1b7a8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b7ac:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b7b0:	mov	x19, x1
   1b7b4:	ldr	x9, [x26]
   1b7b8:	ldr	x23, [x23, #2656]
   1b7bc:	ldr	x21, [x21, #3512]
   1b7c0:	mov	w20, w0
   1b7c4:	mov	x29, sp
   1b7c8:	str	w8, [x23]
   1b7cc:	strb	wzr, [x9, x8]
   1b7d0:	ldr	w24, [x21]
   1b7d4:	ldr	w25, [x23]
   1b7d8:	cmp	w24, w25
   1b7dc:	b.le	1b7e8 <_rl_vi_domove_motion_cleanup@@Base+0x64>
   1b7e0:	mov	w24, w25
   1b7e4:	str	w25, [x21]
   1b7e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b7ec:	ldr	x8, [x8, #3272]
   1b7f0:	ldrsw	x27, [x8]
   1b7f4:	cmp	w27, w24
   1b7f8:	b.ne	1b830 <_rl_vi_domove_motion_cleanup@@Base+0xac>  // b.any
   1b7fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b800:	ldr	x8, [x8, #2984]
   1b804:	mov	w0, #0xffffffff            	// #-1
   1b808:	ldr	x9, [x8]
   1b80c:	and	x9, x9, #0xffffffffffefffff
   1b810:	str	x9, [x8]
   1b814:	ldp	x20, x19, [sp, #80]
   1b818:	ldp	x22, x21, [sp, #64]
   1b81c:	ldp	x24, x23, [sp, #48]
   1b820:	ldp	x26, x25, [sp, #32]
   1b824:	ldp	x28, x27, [sp, #16]
   1b828:	ldp	x29, x30, [sp], #96
   1b82c:	ret
   1b830:	bl	17100 <__ctype_b_loc@plt>
   1b834:	ldr	x8, [x0]
   1b838:	and	w28, w20, #0xff
   1b83c:	ldrh	w22, [x8, w28, uxtw #1]
   1b840:	mov	w8, w20
   1b844:	tbz	w22, #9, 1b854 <_rl_vi_domove_motion_cleanup@@Base+0xd0>
   1b848:	bl	16dc0 <__ctype_toupper_loc@plt>
   1b84c:	ldr	x8, [x0]
   1b850:	ldr	w8, [x8, x28, lsl #2]
   1b854:	cmp	w8, #0x57
   1b858:	b.ne	1b88c <_rl_vi_domove_motion_cleanup@@Base+0x108>  // b.any
   1b85c:	cmp	w24, w25
   1b860:	b.ge	1b88c <_rl_vi_domove_motion_cleanup@@Base+0x108>  // b.tcont
   1b864:	cmp	w24, w27
   1b868:	b.le	1b88c <_rl_vi_domove_motion_cleanup@@Base+0x108>
   1b86c:	ldr	x8, [x26]
   1b870:	ldrb	w8, [x8, w24, sxtw]
   1b874:	cmp	w8, #0x9
   1b878:	b.eq	1b88c <_rl_vi_domove_motion_cleanup@@Base+0x108>  // b.none
   1b87c:	cmp	w8, #0x20
   1b880:	b.eq	1b88c <_rl_vi_domove_motion_cleanup@@Base+0x108>  // b.none
   1b884:	sub	w24, w24, #0x1
   1b888:	str	w24, [x21]
   1b88c:	ldr	w8, [x19, #28]
   1b890:	cmp	w8, #0x63
   1b894:	b.ne	1b93c <_rl_vi_domove_motion_cleanup@@Base+0x1b8>  // b.any
   1b898:	cmp	w24, w27
   1b89c:	b.lt	1b93c <_rl_vi_domove_motion_cleanup@@Base+0x1b8>  // b.tstop
   1b8a0:	tbz	w22, #9, 1b8b0 <_rl_vi_domove_motion_cleanup@@Base+0x12c>
   1b8a4:	bl	16dc0 <__ctype_toupper_loc@plt>
   1b8a8:	ldr	x8, [x0]
   1b8ac:	ldr	w20, [x8, x28, lsl #2]
   1b8b0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b8b4:	ldr	x22, [x22, #3272]
   1b8b8:	cmp	w20, #0x57
   1b8bc:	b.ne	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>  // b.any
   1b8c0:	cmp	w24, w27
   1b8c4:	b.le	1b900 <_rl_vi_domove_motion_cleanup@@Base+0x17c>
   1b8c8:	ldr	x8, [x26]
   1b8cc:	sxtw	x24, w24
   1b8d0:	b	1b8ec <_rl_vi_domove_motion_cleanup@@Base+0x168>
   1b8d4:	sub	x9, x24, #0x1
   1b8d8:	sub	w10, w24, #0x1
   1b8dc:	cmp	x9, x27
   1b8e0:	mov	x24, x9
   1b8e4:	str	w10, [x21]
   1b8e8:	b.le	1b998 <_rl_vi_domove_motion_cleanup@@Base+0x214>
   1b8ec:	ldrb	w9, [x8, x24]
   1b8f0:	cmp	w9, #0x20
   1b8f4:	b.eq	1b8d4 <_rl_vi_domove_motion_cleanup@@Base+0x150>  // b.none
   1b8f8:	cmp	w9, #0x9
   1b8fc:	b.eq	1b8d4 <_rl_vi_domove_motion_cleanup@@Base+0x150>  // b.none
   1b900:	cmp	w24, w27
   1b904:	b.eq	1b99c <_rl_vi_domove_motion_cleanup@@Base+0x218>  // b.none
   1b908:	tbnz	w24, #31, 1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>
   1b90c:	sub	w8, w25, #0x1
   1b910:	cmp	w24, w8
   1b914:	b.ge	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>  // b.tcont
   1b918:	ldr	x8, [x26]
   1b91c:	ldrb	w8, [x8, w24, uxtw]
   1b920:	cmp	w8, #0x9
   1b924:	b.eq	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>  // b.none
   1b928:	cmp	w8, #0x20
   1b92c:	b.eq	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>  // b.none
   1b930:	cmp	w24, w25
   1b934:	b.lt	1b9a4 <_rl_vi_domove_motion_cleanup@@Base+0x220>  // b.tstop
   1b938:	b	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>
   1b93c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b940:	ldr	x22, [x22, #3272]
   1b944:	ldr	w8, [x22]
   1b948:	cmp	w8, w24
   1b94c:	b.ge	1b958 <_rl_vi_domove_motion_cleanup@@Base+0x1d4>  // b.tcont
   1b950:	str	w8, [x21]
   1b954:	str	w24, [x22]
   1b958:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b95c:	ldr	x8, [x8, #2984]
   1b960:	ldrb	w8, [x8, #2]
   1b964:	tbz	w8, #3, 1b978 <_rl_vi_domove_motion_cleanup@@Base+0x1f4>
   1b968:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b96c:	ldr	x8, [x8, #2664]
   1b970:	ldr	x8, [x8]
   1b974:	blr	x8
   1b978:	mov	x0, x19
   1b97c:	ldp	x20, x19, [sp, #80]
   1b980:	ldp	x22, x21, [sp, #64]
   1b984:	ldp	x24, x23, [sp, #48]
   1b988:	ldp	x26, x25, [sp, #32]
   1b98c:	ldp	x28, x27, [sp, #16]
   1b990:	ldp	x29, x30, [sp], #96
   1b994:	b	1b9ec <_rl_vi_domove_motion_cleanup@@Base+0x268>
   1b998:	mov	w24, w9
   1b99c:	cmp	w27, w25
   1b9a0:	b.ge	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>  // b.tcont
   1b9a4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1b9a8:	ldr	w20, [x21]
   1b9ac:	cmp	x0, #0x1
   1b9b0:	b.eq	1b9e0 <_rl_vi_domove_motion_cleanup@@Base+0x25c>  // b.none
   1b9b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1b9b8:	ldr	x8, [x8, #1896]
   1b9bc:	ldr	w8, [x8]
   1b9c0:	cbnz	w8, 1b9e0 <_rl_vi_domove_motion_cleanup@@Base+0x25c>
   1b9c4:	mov	w0, #0x1                   	// #1
   1b9c8:	bl	178f0 <_rl_forward_char_internal@plt>
   1b9cc:	ldr	w8, [x23]
   1b9d0:	cmp	w0, w8
   1b9d4:	ccmp	w20, w0, #0x4, le
   1b9d8:	csel	w24, w8, w0, eq  // eq = none
   1b9dc:	b	1b9e4 <_rl_vi_domove_motion_cleanup@@Base+0x260>
   1b9e0:	add	w24, w20, #0x1
   1b9e4:	str	w24, [x21]
   1b9e8:	b	1b944 <_rl_vi_domove_motion_cleanup@@Base+0x1c0>
   1b9ec:	stp	x29, x30, [sp, #-48]!
   1b9f0:	stp	x20, x19, [sp, #32]
   1b9f4:	ldr	w1, [x0]
   1b9f8:	mov	x19, x0
   1b9fc:	str	x21, [sp, #16]
   1ba00:	mov	x29, sp
   1ba04:	cmp	w1, #0x4
   1ba08:	b.eq	1baac <_rl_vi_domove_motion_cleanup@@Base+0x328>  // b.none
   1ba0c:	cmp	w1, #0x2
   1ba10:	b.eq	1bb3c <_rl_vi_domove_motion_cleanup@@Base+0x3b8>  // b.none
   1ba14:	cmp	w1, #0x1
   1ba18:	b.ne	1bbcc <_rl_vi_domove_motion_cleanup@@Base+0x448>  // b.any
   1ba1c:	ldr	w1, [x19, #32]
   1ba20:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1ba24:	add	x0, x0, #0xc66
   1ba28:	mov	w2, #0xc                   	// #12
   1ba2c:	bl	17530 <memchr@plt>
   1ba30:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ba34:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ba38:	ldr	x20, [x20, #3512]
   1ba3c:	ldr	x21, [x21, #3272]
   1ba40:	cbnz	x0, 1bbec <_rl_vi_domove_motion_cleanup@@Base+0x468>
   1ba44:	ldr	w8, [x20]
   1ba48:	ldr	w9, [x19, #20]
   1ba4c:	cmp	w8, w9
   1ba50:	b.lt	1bbec <_rl_vi_domove_motion_cleanup@@Base+0x468>  // b.tstop
   1ba54:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ba58:	ldr	w8, [x21]
   1ba5c:	ldr	x9, [x9, #2656]
   1ba60:	ldr	w9, [x9]
   1ba64:	cmp	w8, w9
   1ba68:	b.ge	1bbec <_rl_vi_domove_motion_cleanup@@Base+0x468>  // b.tcont
   1ba6c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1ba70:	cmp	x0, #0x1
   1ba74:	b.eq	1bbe0 <_rl_vi_domove_motion_cleanup@@Base+0x45c>  // b.none
   1ba78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ba7c:	ldr	x8, [x8, #1896]
   1ba80:	ldr	w8, [x8]
   1ba84:	cbnz	w8, 1bbe0 <_rl_vi_domove_motion_cleanup@@Base+0x45c>
   1ba88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ba8c:	ldr	x8, [x8, #2480]
   1ba90:	ldr	w1, [x21]
   1ba94:	mov	w2, #0x1                   	// #1
   1ba98:	mov	w3, wzr
   1ba9c:	ldr	x0, [x8]
   1baa0:	bl	16c00 <_rl_find_next_mbchar@plt>
   1baa4:	str	w0, [x21]
   1baa8:	b	1bbec <_rl_vi_domove_motion_cleanup@@Base+0x468>
   1baac:	ldr	w1, [x19, #32]
   1bab0:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1bab4:	add	x0, x0, #0xc80
   1bab8:	mov	w2, #0xd                   	// #13
   1babc:	bl	17530 <memchr@plt>
   1bac0:	cbnz	x0, 1bc0c <_rl_vi_domove_motion_cleanup@@Base+0x488>
   1bac4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bac8:	ldr	x8, [x8, #3512]
   1bacc:	ldr	w9, [x19, #20]
   1bad0:	ldr	w8, [x8]
   1bad4:	cmp	w8, w9
   1bad8:	b.lt	1bc0c <_rl_vi_domove_motion_cleanup@@Base+0x488>  // b.tstop
   1badc:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bae0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bae4:	ldr	x20, [x20, #3272]
   1bae8:	ldr	x8, [x8, #2656]
   1baec:	ldr	w9, [x20]
   1baf0:	ldr	w8, [x8]
   1baf4:	cmp	w9, w8
   1baf8:	b.ge	1bc0c <_rl_vi_domove_motion_cleanup@@Base+0x488>  // b.tcont
   1bafc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1bb00:	cmp	x0, #0x1
   1bb04:	b.eq	1bc00 <_rl_vi_domove_motion_cleanup@@Base+0x47c>  // b.none
   1bb08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb0c:	ldr	x8, [x8, #1896]
   1bb10:	ldr	w8, [x8]
   1bb14:	cbnz	w8, 1bc00 <_rl_vi_domove_motion_cleanup@@Base+0x47c>
   1bb18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb1c:	ldr	x8, [x8, #2480]
   1bb20:	ldr	w1, [x20]
   1bb24:	mov	w2, #0x1                   	// #1
   1bb28:	mov	w3, wzr
   1bb2c:	ldr	x0, [x8]
   1bb30:	bl	16c00 <_rl_find_next_mbchar@plt>
   1bb34:	str	w0, [x20]
   1bb38:	b	1bc0c <_rl_vi_domove_motion_cleanup@@Base+0x488>
   1bb3c:	ldr	w1, [x19, #32]
   1bb40:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1bb44:	add	x0, x0, #0xc72
   1bb48:	mov	w2, #0xe                   	// #14
   1bb4c:	bl	17530 <memchr@plt>
   1bb50:	cbnz	x0, 1bc50 <_rl_vi_domove_motion_cleanup@@Base+0x4cc>
   1bb54:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb58:	ldr	x8, [x8, #3512]
   1bb5c:	ldr	w9, [x19, #20]
   1bb60:	ldr	w8, [x8]
   1bb64:	cmp	w8, w9
   1bb68:	b.lt	1bc50 <_rl_vi_domove_motion_cleanup@@Base+0x4cc>  // b.tstop
   1bb6c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb70:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb74:	ldr	x20, [x20, #3272]
   1bb78:	ldr	x8, [x8, #2656]
   1bb7c:	ldr	w9, [x20]
   1bb80:	ldr	w8, [x8]
   1bb84:	cmp	w9, w8
   1bb88:	b.ge	1bc50 <_rl_vi_domove_motion_cleanup@@Base+0x4cc>  // b.tcont
   1bb8c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1bb90:	cmp	x0, #0x1
   1bb94:	b.eq	1bc44 <_rl_vi_domove_motion_cleanup@@Base+0x4c0>  // b.none
   1bb98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bb9c:	ldr	x8, [x8, #1896]
   1bba0:	ldr	w8, [x8]
   1bba4:	cbnz	w8, 1bc44 <_rl_vi_domove_motion_cleanup@@Base+0x4c0>
   1bba8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bbac:	ldr	x8, [x8, #2480]
   1bbb0:	ldr	w1, [x20]
   1bbb4:	mov	w2, #0x1                   	// #1
   1bbb8:	mov	w3, wzr
   1bbbc:	ldr	x0, [x8]
   1bbc0:	bl	16c00 <_rl_find_next_mbchar@plt>
   1bbc4:	str	w0, [x20]
   1bbc8:	b	1bc50 <_rl_vi_domove_motion_cleanup@@Base+0x4cc>
   1bbcc:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1bbd0:	add	x0, x0, #0xc3f
   1bbd4:	bl	176c0 <_rl_errmsg@plt>
   1bbd8:	mov	w0, #0x1                   	// #1
   1bbdc:	b	1bdac <_rl_vi_domove_motion_cleanup@@Base+0x628>
   1bbe0:	ldr	w8, [x21]
   1bbe4:	add	w8, w8, #0x1
   1bbe8:	str	w8, [x21]
   1bbec:	ldr	w0, [x20]
   1bbf0:	ldr	w1, [x21]
   1bbf4:	bl	16cb0 <rl_kill_text@plt>
   1bbf8:	mov	w0, wzr
   1bbfc:	b	1bdac <_rl_vi_domove_motion_cleanup@@Base+0x628>
   1bc00:	ldr	w8, [x20]
   1bc04:	add	w8, w8, #0x1
   1bc08:	str	w8, [x20]
   1bc0c:	bl	16400 <rl_begin_undo_group@plt>
   1bc10:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bc14:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bc18:	ldr	x20, [x20, #3512]
   1bc1c:	ldr	x8, [x8, #3272]
   1bc20:	ldr	w0, [x20]
   1bc24:	ldr	w1, [x8]
   1bc28:	bl	16cb0 <rl_kill_text@plt>
   1bc2c:	bl	17830 <rl_end_undo_group@plt>
   1bc30:	bl	16f90 <rl_do_undo@plt>
   1bc34:	ldr	w8, [x19, #20]
   1bc38:	mov	w0, wzr
   1bc3c:	str	w8, [x20]
   1bc40:	b	1bdac <_rl_vi_domove_motion_cleanup@@Base+0x628>
   1bc44:	ldr	w8, [x20]
   1bc48:	add	w8, w8, #0x1
   1bc4c:	str	w8, [x20]
   1bc50:	bl	17100 <__ctype_b_loc@plt>
   1bc54:	ldr	w8, [x19, #32]
   1bc58:	ldr	x9, [x0]
   1bc5c:	mov	x20, x0
   1bc60:	and	x21, x8, #0xff
   1bc64:	ldrh	w9, [x9, x21, lsl #1]
   1bc68:	tbz	w9, #9, 1bc78 <_rl_vi_domove_motion_cleanup@@Base+0x4f4>
   1bc6c:	bl	16dc0 <__ctype_toupper_loc@plt>
   1bc70:	ldr	x8, [x0]
   1bc74:	ldr	w8, [x8, x21, lsl #2]
   1bc78:	cmp	w8, #0x57
   1bc7c:	b.ne	1bc9c <_rl_vi_domove_motion_cleanup@@Base+0x518>  // b.any
   1bc80:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bc84:	ldr	x8, [x8, #3512]
   1bc88:	ldr	w9, [x19, #20]
   1bc8c:	ldr	w10, [x8]
   1bc90:	cmp	w10, w9
   1bc94:	b.ge	1bc9c <_rl_vi_domove_motion_cleanup@@Base+0x518>  // b.tcont
   1bc98:	str	w9, [x8]
   1bc9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bca0:	ldr	x8, [x8, #3576]
   1bca4:	ldr	w8, [x8]
   1bca8:	cbz	w8, 1bd00 <_rl_vi_domove_motion_cleanup@@Base+0x57c>
   1bcac:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1bcb0:	ldr	x8, [x19, #120]
   1bcb4:	cbz	x8, 1bcc4 <_rl_vi_domove_motion_cleanup@@Base+0x540>
   1bcb8:	ldrb	w8, [x8]
   1bcbc:	cbz	w8, 1bcc4 <_rl_vi_domove_motion_cleanup@@Base+0x540>
   1bcc0:	bl	16400 <rl_begin_undo_group@plt>
   1bcc4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bcc8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bccc:	ldr	x8, [x8, #3512]
   1bcd0:	ldr	x9, [x9, #3272]
   1bcd4:	ldr	w0, [x8]
   1bcd8:	ldr	w1, [x9]
   1bcdc:	bl	171c0 <rl_delete_text@plt>
   1bce0:	ldr	x0, [x19, #120]
   1bce4:	cbz	x0, 1bdac <_rl_vi_domove_motion_cleanup@@Base+0x628>
   1bce8:	ldrb	w8, [x0]
   1bcec:	cbz	w8, 1bda8 <_rl_vi_domove_motion_cleanup@@Base+0x624>
   1bcf0:	bl	16430 <rl_insert_text@plt>
   1bcf4:	bl	17830 <rl_end_undo_group@plt>
   1bcf8:	mov	w0, wzr
   1bcfc:	b	1bdac <_rl_vi_domove_motion_cleanup@@Base+0x628>
   1bd00:	bl	16400 <rl_begin_undo_group@plt>
   1bd04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd0c:	ldr	x8, [x8, #3512]
   1bd10:	ldr	x9, [x9, #3272]
   1bd14:	ldr	w0, [x8]
   1bd18:	ldr	w1, [x9]
   1bd1c:	bl	16cb0 <rl_kill_text@plt>
   1bd20:	ldr	w19, [x19, #28]
   1bd24:	ldr	x8, [x20]
   1bd28:	and	x9, x19, #0xff
   1bd2c:	ldrh	w8, [x8, x9, lsl #1]
   1bd30:	tbnz	w8, #8, 1bd40 <_rl_vi_domove_motion_cleanup@@Base+0x5bc>
   1bd34:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1bd38:	mov	w9, #0x1                   	// #1
   1bd3c:	strb	w9, [x8, #132]
   1bd40:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd44:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd48:	ldr	x8, [x8, #3904]
   1bd4c:	ldr	x9, [x9, #3720]
   1bd50:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd54:	ldr	x10, [x10, #3640]
   1bd58:	ldr	w8, [x8]
   1bd5c:	ldr	w9, [x9]
   1bd60:	adrp	x11, 52000 <_rl_set_normal_color@@Base+0x14254>
   1bd64:	adrp	x12, 52000 <_rl_set_normal_color@@Base+0x14254>
   1bd68:	str	w19, [x10]
   1bd6c:	str	w8, [x11, #2972]
   1bd70:	str	w9, [x12, #2976]
   1bd74:	bl	16400 <rl_begin_undo_group@plt>
   1bd78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd7c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd80:	ldr	x8, [x8, #1992]
   1bd84:	ldr	x9, [x9, #2008]
   1bd88:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bd8c:	ldr	w9, [x9]
   1bd90:	ldr	x10, [x10, #4032]
   1bd94:	str	x10, [x8]
   1bd98:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1bd9c:	str	w19, [x8, #128]
   1bda0:	cbz	w9, 1bda8 <_rl_vi_domove_motion_cleanup@@Base+0x624>
   1bda4:	bl	17640 <_rl_reset_prompt@plt>
   1bda8:	mov	w0, wzr
   1bdac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bdb0:	ldr	x8, [x8, #2984]
   1bdb4:	ldp	x20, x19, [sp, #32]
   1bdb8:	ldr	x21, [sp, #16]
   1bdbc:	ldr	x9, [x8]
   1bdc0:	and	x9, x9, #0xffffffffffefffff
   1bdc4:	str	x9, [x8]
   1bdc8:	ldp	x29, x30, [sp], #48
   1bdcc:	ret

000000000001bdd0 <_rl_vi_domove_callback@@Base>:
   1bdd0:	stp	x29, x30, [sp, #-32]!
   1bdd4:	stp	x20, x19, [sp, #16]
   1bdd8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bddc:	ldr	x20, [x20, #2984]
   1bde0:	mov	x29, sp
   1bde4:	mov	x19, x0
   1bde8:	ldr	x8, [x20]
   1bdec:	orr	x8, x8, #0x40
   1bdf0:	str	x8, [x20]
   1bdf4:	bl	16e60 <rl_read_key@plt>
   1bdf8:	ldr	x8, [x20]
   1bdfc:	and	x8, x8, #0xffffffffffffffbf
   1be00:	str	x8, [x20]
   1be04:	str	w0, [x19, #32]
   1be08:	tbnz	w0, #31, 1be20 <_rl_vi_domove_callback@@Base+0x50>
   1be0c:	mov	x0, x19
   1be10:	bl	1be30 <_rl_vi_domove_callback@@Base+0x60>
   1be14:	cmp	w0, #0x0
   1be18:	cset	w0, ne  // ne = any
   1be1c:	b	1be24 <_rl_vi_domove_callback@@Base+0x54>
   1be20:	mov	w0, #0x1                   	// #1
   1be24:	ldp	x20, x19, [sp, #16]
   1be28:	ldp	x29, x30, [sp], #32
   1be2c:	ret
   1be30:	stp	x29, x30, [sp, #-96]!
   1be34:	stp	x26, x25, [sp, #32]
   1be38:	stp	x24, x23, [sp, #48]
   1be3c:	stp	x22, x21, [sp, #64]
   1be40:	stp	x20, x19, [sp, #80]
   1be44:	ldr	w20, [x0, #32]
   1be48:	mov	x19, x0
   1be4c:	str	x27, [sp, #16]
   1be50:	mov	x29, sp
   1be54:	cbz	w20, 1bf18 <_rl_vi_domove_callback@@Base+0x148>
   1be58:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1be5c:	add	x0, x0, #0xc29
   1be60:	mov	w2, #0x16                  	// #22
   1be64:	mov	w1, w20
   1be68:	bl	17530 <memchr@plt>
   1be6c:	cbz	x0, 1bf18 <_rl_vi_domove_callback@@Base+0x148>
   1be70:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1be74:	ldr	x21, [x21, #2984]
   1be78:	mov	w10, #0x400                 	// #1024
   1be7c:	movk	w10, #0x18, lsl #16
   1be80:	ldr	x8, [x21]
   1be84:	mvn	w9, w8
   1be88:	tst	x9, x10
   1be8c:	b.ne	1be98 <_rl_vi_domove_callback@@Base+0xc8>  // b.any
   1be90:	and	x8, x8, #0xfffffffffffffbff
   1be94:	str	x8, [x21]
   1be98:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1be9c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bea0:	ldr	x9, [x9, #2480]
   1bea4:	ldr	x10, [x10, #2656]
   1bea8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1beac:	mov	w12, #0x20                  	// #32
   1beb0:	ldr	x13, [x9]
   1beb4:	ldrsw	x11, [x10]
   1beb8:	str	w20, [x8, #112]
   1bebc:	mov	w0, w20
   1bec0:	add	w8, w11, #0x1
   1bec4:	str	w8, [x10]
   1bec8:	strb	w12, [x13, x11]
   1becc:	ldr	x8, [x9]
   1bed0:	ldrsw	x9, [x10]
   1bed4:	strb	wzr, [x8, x9]
   1bed8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bedc:	ldr	x8, [x8, #1992]
   1bee0:	ldr	x1, [x8]
   1bee4:	bl	16c30 <_rl_dispatch@plt>
   1bee8:	ldr	x8, [x21]
   1beec:	tbz	w8, #19, 1bef4 <_rl_vi_domove_callback@@Base+0x124>
   1bef0:	tbnz	w8, #23, 1c168 <_rl_vi_domove_callback@@Base+0x398>
   1bef4:	mov	w0, w20
   1bef8:	mov	x1, x19
   1befc:	ldp	x20, x19, [sp, #80]
   1bf00:	ldp	x22, x21, [sp, #64]
   1bf04:	ldp	x24, x23, [sp, #48]
   1bf08:	ldp	x26, x25, [sp, #32]
   1bf0c:	ldr	x27, [sp, #16]
   1bf10:	ldp	x29, x30, [sp], #96
   1bf14:	b	16e10 <_rl_vi_domove_motion_cleanup@plt>
   1bf18:	ldr	w8, [x19, #28]
   1bf1c:	cmp	w8, w20
   1bf20:	b.ne	1bfa8 <_rl_vi_domove_callback@@Base+0x1d8>  // b.any
   1bf24:	sub	w8, w20, #0x63
   1bf28:	cmp	w8, #0x16
   1bf2c:	b.hi	1bfa8 <_rl_vi_domove_callback@@Base+0x1d8>  // b.pmore
   1bf30:	mov	w9, #0x1                   	// #1
   1bf34:	lsl	w8, w9, w8
   1bf38:	mov	w9, #0x3                   	// #3
   1bf3c:	movk	w9, #0x40, lsl #16
   1bf40:	tst	w8, w9
   1bf44:	b.eq	1bfa8 <_rl_vi_domove_callback@@Base+0x1d8>  // b.none
   1bf48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bf4c:	ldr	x8, [x8, #2656]
   1bf50:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bf54:	mov	w0, #0x1                   	// #1
   1bf58:	mov	w1, w20
   1bf5c:	ldr	w8, [x8]
   1bf60:	ldr	x9, [x9, #3272]
   1bf64:	str	w8, [x9]
   1bf68:	bl	175b0 <rl_beg_of_line@plt>
   1bf6c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bf70:	ldr	x8, [x8, #2984]
   1bf74:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   1bf78:	str	w20, [x10, #112]
   1bf7c:	mov	x0, x19
   1bf80:	ldr	x9, [x8]
   1bf84:	ldr	x27, [sp, #16]
   1bf88:	and	x9, x9, #0xffffffffffefffff
   1bf8c:	str	x9, [x8]
   1bf90:	ldp	x20, x19, [sp, #80]
   1bf94:	ldp	x22, x21, [sp, #64]
   1bf98:	ldp	x24, x23, [sp, #48]
   1bf9c:	ldp	x26, x25, [sp, #32]
   1bfa0:	ldp	x29, x30, [sp], #96
   1bfa4:	b	1b9ec <_rl_vi_domove_motion_cleanup@@Base+0x268>
   1bfa8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bfac:	ldr	x21, [x21, #2984]
   1bfb0:	sub	w9, w20, #0x30
   1bfb4:	cmp	w9, #0x9
   1bfb8:	ldr	x8, [x21]
   1bfbc:	b.hi	1c004 <_rl_vi_domove_callback@@Base+0x234>  // b.pmore
   1bfc0:	mov	w10, #0x400                 	// #1024
   1bfc4:	movk	w10, #0x18, lsl #16
   1bfc8:	and	x10, x8, x10
   1bfcc:	cmp	x10, #0x180, lsl #12
   1bfd0:	b.eq	1c01c <_rl_vi_domove_callback@@Base+0x24c>  // b.none
   1bfd4:	mov	w11, #0x400                 	// #1024
   1bfd8:	movk	w11, #0x18, lsl #16
   1bfdc:	cmp	x10, x11
   1bfe0:	b.ne	1c0a0 <_rl_vi_domove_callback@@Base+0x2d0>  // b.any
   1bfe4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1bfe8:	ldr	x8, [x8, #1992]
   1bfec:	lsl	x9, x20, #4
   1bff0:	ldr	x8, [x8]
   1bff4:	ldrb	w9, [x8, x9]
   1bff8:	cbnz	w9, 1c054 <_rl_vi_domove_callback@@Base+0x284>
   1bffc:	add	x8, x8, x20, lsl #4
   1c000:	b	1c040 <_rl_vi_domove_callback@@Base+0x270>
   1c004:	mov	x9, #0xfffffffffffffbff    	// #-1025
   1c008:	movk	x9, #0xffef, lsl #16
   1c00c:	and	x8, x8, x9
   1c010:	str	x8, [x21]
   1c014:	mov	w0, #0x1                   	// #1
   1c018:	b	1c16c <_rl_vi_domove_callback@@Base+0x39c>
   1c01c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c020:	ldr	x9, [x9, #1992]
   1c024:	orr	x8, x8, #0x400
   1c028:	str	x8, [x21]
   1c02c:	lsl	x8, x20, #4
   1c030:	ldr	x9, [x9]
   1c034:	ldrb	w8, [x9, x8]
   1c038:	cbnz	w8, 1c054 <_rl_vi_domove_callback@@Base+0x284>
   1c03c:	add	x8, x9, x20, lsl #4
   1c040:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c044:	ldr	x8, [x8, #8]
   1c048:	ldr	x9, [x9, #3928]
   1c04c:	cmp	x8, x9
   1c050:	b.eq	1c188 <_rl_vi_domove_callback@@Base+0x3b8>  // b.none
   1c054:	and	w8, w20, #0xffffff7f
   1c058:	sub	w8, w8, #0x30
   1c05c:	cmp	w8, #0x9
   1c060:	b.hi	1c15c <_rl_vi_domove_callback@@Base+0x38c>  // b.pmore
   1c064:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c068:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c06c:	ldr	x9, [x9, #3792]
   1c070:	ldr	x10, [x10, #3904]
   1c074:	mov	w0, #0x1                   	// #1
   1c078:	ldr	w12, [x9]
   1c07c:	ldr	w11, [x10]
   1c080:	str	w0, [x9]
   1c084:	cmp	w12, #0x0
   1c088:	add	w11, w11, w11, lsl #2
   1c08c:	lsl	w11, w11, #1
   1c090:	csel	w11, wzr, w11, eq  // eq = none
   1c094:	add	w8, w11, w8
   1c098:	str	w8, [x10]
   1c09c:	b	1c16c <_rl_vi_domove_callback@@Base+0x39c>
   1c0a0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c0a4:	ldr	x22, [x22, #3904]
   1c0a8:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c0ac:	ldr	x24, [x24, #3792]
   1c0b0:	mov	w25, #0x1                   	// #1
   1c0b4:	ldr	w23, [x22]
   1c0b8:	orr	x8, x8, #0x400
   1c0bc:	str	w9, [x22]
   1c0c0:	str	w25, [x24]
   1c0c4:	str	x8, [x21]
   1c0c8:	bl	16b80 <_rl_arg_overflow@plt>
   1c0cc:	cbnz	w0, 1c1b8 <_rl_vi_domove_callback@@Base+0x3e8>
   1c0d0:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c0d4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c0d8:	ldr	x26, [x26, #1992]
   1c0dc:	ldr	x27, [x27, #3928]
   1c0e0:	bl	16880 <_rl_arg_getchar@plt>
   1c0e4:	mov	w20, w0
   1c0e8:	tbnz	w0, #31, 1c110 <_rl_vi_domove_callback@@Base+0x340>
   1c0ec:	ldr	x8, [x26]
   1c0f0:	mov	w9, w20
   1c0f4:	lsl	x10, x9, #4
   1c0f8:	ldrb	w10, [x8, x10]
   1c0fc:	cbnz	w10, 1c110 <_rl_vi_domove_callback@@Base+0x340>
   1c100:	add	x8, x8, x9, lsl #4
   1c104:	ldr	x8, [x8, #8]
   1c108:	cmp	x8, x27
   1c10c:	b.eq	1c150 <_rl_vi_domove_callback@@Base+0x380>  // b.none
   1c110:	and	w8, w20, #0xffffff7f
   1c114:	sub	w8, w8, #0x30
   1c118:	cmp	w8, #0x9
   1c11c:	b.hi	1c1a0 <_rl_vi_domove_callback@@Base+0x3d0>  // b.pmore
   1c120:	ldr	w9, [x22]
   1c124:	ldr	w10, [x24]
   1c128:	str	w25, [x24]
   1c12c:	add	w9, w9, w9, lsl #2
   1c130:	cmp	w10, #0x0
   1c134:	lsl	w9, w9, #1
   1c138:	csel	w9, wzr, w9, eq  // eq = none
   1c13c:	add	w8, w9, w8
   1c140:	str	w8, [x22]
   1c144:	bl	16b80 <_rl_arg_overflow@plt>
   1c148:	cbz	w0, 1c0e0 <_rl_vi_domove_callback@@Base+0x310>
   1c14c:	b	1c1b8 <_rl_vi_domove_callback@@Base+0x3e8>
   1c150:	ldr	w8, [x22]
   1c154:	lsl	w8, w8, #2
   1c158:	b	1c140 <_rl_vi_domove_callback@@Base+0x370>
   1c15c:	bl	17420 <rl_clear_message@plt>
   1c160:	mov	w0, w20
   1c164:	bl	17220 <rl_stuff_char@plt>
   1c168:	mov	w0, wzr
   1c16c:	ldp	x20, x19, [sp, #80]
   1c170:	ldp	x22, x21, [sp, #64]
   1c174:	ldp	x24, x23, [sp, #48]
   1c178:	ldp	x26, x25, [sp, #32]
   1c17c:	ldr	x27, [sp, #16]
   1c180:	ldp	x29, x30, [sp], #96
   1c184:	ret
   1c188:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c18c:	ldr	x8, [x8, #3904]
   1c190:	ldr	w9, [x8]
   1c194:	lsl	w9, w9, #2
   1c198:	str	w9, [x8]
   1c19c:	b	1c014 <_rl_vi_domove_callback@@Base+0x244>
   1c1a0:	bl	17420 <rl_clear_message@plt>
   1c1a4:	mov	w0, w20
   1c1a8:	bl	17220 <rl_stuff_char@plt>
   1c1ac:	ldr	x8, [x21]
   1c1b0:	and	x8, x8, #0xfffffffffffffbff
   1c1b4:	str	x8, [x21]
   1c1b8:	ldr	w8, [x22]
   1c1bc:	ldr	x9, [x21]
   1c1c0:	mul	w8, w8, w23
   1c1c4:	orr	x9, x9, #0x40
   1c1c8:	str	w8, [x22]
   1c1cc:	str	x9, [x21]
   1c1d0:	bl	16e60 <rl_read_key@plt>
   1c1d4:	ldr	x8, [x21]
   1c1d8:	and	x8, x8, #0xffffffffffffffbf
   1c1dc:	str	x8, [x21]
   1c1e0:	tbnz	w0, #31, 1c24c <_rl_vi_domove_callback@@Base+0x47c>
   1c1e4:	str	w0, [x19, #32]
   1c1e8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c1ec:	ldr	x9, [x9, #2656]
   1c1f0:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c1f4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1c1f8:	mov	w20, w0
   1c1fc:	ldrsw	x10, [x9]
   1c200:	ldr	x11, [x11, #2480]
   1c204:	str	w0, [x8, #112]
   1c208:	add	w12, w10, #0x1
   1c20c:	ldr	x8, [x11]
   1c210:	str	w12, [x9]
   1c214:	mov	w12, #0x20                  	// #32
   1c218:	strb	w12, [x8, x10]
   1c21c:	ldr	x8, [x11]
   1c220:	ldrsw	x9, [x9]
   1c224:	strb	wzr, [x8, x9]
   1c228:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c22c:	ldr	x8, [x8, #1992]
   1c230:	ldr	x1, [x8]
   1c234:	bl	16c30 <_rl_dispatch@plt>
   1c238:	ldr	x8, [x21]
   1c23c:	tbz	w8, #19, 1c244 <_rl_vi_domove_callback@@Base+0x474>
   1c240:	tbnz	w8, #23, 1c168 <_rl_vi_domove_callback@@Base+0x398>
   1c244:	mov	w0, w20
   1c248:	b	1bef8 <_rl_vi_domove_callback@@Base+0x128>
   1c24c:	str	wzr, [x19, #32]
   1c250:	mov	w0, #0xffffffff            	// #-1
   1c254:	b	1c16c <_rl_vi_domove_callback@@Base+0x39c>

000000000001c258 <rl_vi_domove@@Base>:
   1c258:	stp	x29, x30, [sp, #-48]!
   1c25c:	str	x21, [sp, #16]
   1c260:	stp	x20, x19, [sp, #32]
   1c264:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c268:	ldr	x21, [x21, #2984]
   1c26c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c270:	mov	x29, sp
   1c274:	mov	x20, x1
   1c278:	ldr	x8, [x21]
   1c27c:	ldr	x9, [x9, #2152]
   1c280:	orr	x8, x8, #0x40
   1c284:	ldr	x19, [x9]
   1c288:	str	x8, [x21]
   1c28c:	bl	16e60 <rl_read_key@plt>
   1c290:	ldr	x8, [x21]
   1c294:	and	x8, x8, #0xffffffffffffffbf
   1c298:	str	x8, [x21]
   1c29c:	str	w0, [x19, #32]
   1c2a0:	str	w0, [x20]
   1c2a4:	ldr	w8, [x19, #32]
   1c2a8:	tbnz	w8, #31, 1c2c0 <rl_vi_domove@@Base+0x68>
   1c2ac:	mov	x0, x19
   1c2b0:	ldp	x20, x19, [sp, #32]
   1c2b4:	ldr	x21, [sp, #16]
   1c2b8:	ldp	x29, x30, [sp], #48
   1c2bc:	b	1be30 <_rl_vi_domove_callback@@Base+0x60>
   1c2c0:	str	wzr, [x19, #32]
   1c2c4:	ldp	x20, x19, [sp, #32]
   1c2c8:	ldr	x21, [sp, #16]
   1c2cc:	mov	w0, #0xffffffff            	// #-1
   1c2d0:	ldp	x29, x30, [sp], #48
   1c2d4:	ret

000000000001c2d8 <rl_vi_delete_to@@Base>:
   1c2d8:	stp	x29, x30, [sp, #-80]!
   1c2dc:	mov	w0, #0x24                  	// #36
   1c2e0:	stp	x26, x25, [sp, #16]
   1c2e4:	stp	x24, x23, [sp, #32]
   1c2e8:	stp	x22, x21, [sp, #48]
   1c2ec:	stp	x20, x19, [sp, #64]
   1c2f0:	mov	x29, sp
   1c2f4:	mov	w20, w1
   1c2f8:	mov	w21, #0x24                  	// #36
   1c2fc:	bl	16bf0 <xmalloc@plt>
   1c300:	adrp	x8, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1c304:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c308:	ldr	q0, [x8, #2832]
   1c30c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c310:	ldr	x10, [x10, #3512]
   1c314:	ldr	x23, [x23, #2656]
   1c318:	mov	w9, #0xffffffff            	// #-1
   1c31c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c320:	ldr	x22, [x22, #2152]
   1c324:	str	w9, [x0, #16]
   1c328:	str	q0, [x0]
   1c32c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c330:	ldr	w24, [x23]
   1c334:	ldr	x26, [x26, #3272]
   1c338:	ldr	w8, [x10]
   1c33c:	mov	x19, x0
   1c340:	stp	w20, w9, [x0, #28]
   1c344:	sxtw	x25, w24
   1c348:	stp	w8, w24, [x0, #20]
   1c34c:	str	x0, [x22]
   1c350:	str	w8, [x26]
   1c354:	bl	17100 <__ctype_b_loc@plt>
   1c358:	ldr	x8, [x0]
   1c35c:	and	w9, w20, #0xff
   1c360:	ldrh	w8, [x8, w9, uxtw #1]
   1c364:	tbnz	w8, #8, 1c3e4 <rl_vi_delete_to@@Base+0x10c>
   1c368:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c36c:	ldr	x8, [x8, #3576]
   1c370:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1c374:	ldr	w21, [x9, #112]
   1c378:	ldr	w8, [x8]
   1c37c:	cbz	w8, 1c458 <rl_vi_delete_to@@Base+0x180>
   1c380:	cmp	w21, #0x64
   1c384:	b.eq	1c458 <rl_vi_delete_to@@Base+0x180>  // b.none
   1c388:	str	w21, [x19, #32]
   1c38c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c390:	ldr	x8, [x8, #2480]
   1c394:	add	w10, w24, #0x1
   1c398:	mov	w11, #0x20                  	// #32
   1c39c:	str	w10, [x23]
   1c3a0:	ldr	x9, [x8]
   1c3a4:	mov	w0, w21
   1c3a8:	strb	w11, [x9, x25]
   1c3ac:	ldr	x8, [x8]
   1c3b0:	ldrsw	x9, [x23]
   1c3b4:	strb	wzr, [x8, x9]
   1c3b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c3bc:	ldr	x8, [x8, #1992]
   1c3c0:	ldr	x1, [x8]
   1c3c4:	bl	16c30 <_rl_dispatch@plt>
   1c3c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c3cc:	ldr	x8, [x8, #2984]
   1c3d0:	ldr	x8, [x8]
   1c3d4:	tbz	w8, #19, 1c3dc <rl_vi_delete_to@@Base+0x104>
   1c3d8:	tbnz	w8, #23, 1c498 <rl_vi_delete_to@@Base+0x1c0>
   1c3dc:	mov	w0, w21
   1c3e0:	b	1c444 <rl_vi_delete_to@@Base+0x16c>
   1c3e4:	str	w21, [x19, #32]
   1c3e8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c3ec:	ldr	x9, [x9, #2480]
   1c3f0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1c3f4:	add	w10, w24, #0x1
   1c3f8:	mov	w12, #0x20                  	// #32
   1c3fc:	ldr	x11, [x9]
   1c400:	str	w21, [x8, #112]
   1c404:	str	w10, [x23]
   1c408:	mov	w0, #0x24                  	// #36
   1c40c:	strb	w12, [x11, x25]
   1c410:	ldr	x8, [x9]
   1c414:	ldrsw	x9, [x23]
   1c418:	strb	wzr, [x8, x9]
   1c41c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c420:	ldr	x8, [x8, #1992]
   1c424:	ldr	x1, [x8]
   1c428:	bl	16c30 <_rl_dispatch@plt>
   1c42c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c430:	ldr	x8, [x8, #2984]
   1c434:	ldr	x8, [x8]
   1c438:	tbz	w8, #19, 1c440 <rl_vi_delete_to@@Base+0x168>
   1c43c:	tbnz	w8, #23, 1c498 <rl_vi_delete_to@@Base+0x1c0>
   1c440:	mov	w0, #0x24                  	// #36
   1c444:	mov	x1, x19
   1c448:	bl	16e10 <_rl_vi_domove_motion_cleanup@plt>
   1c44c:	mov	w19, w0
   1c450:	tbz	w0, #31, 1c500 <rl_vi_delete_to@@Base+0x228>
   1c454:	b	1c4f8 <rl_vi_delete_to@@Base+0x220>
   1c458:	cbz	w8, 1c4a0 <rl_vi_delete_to@@Base+0x1c8>
   1c45c:	mov	w0, #0x1                   	// #1
   1c460:	mov	w1, w20
   1c464:	str	w21, [x19, #32]
   1c468:	str	w24, [x26]
   1c46c:	bl	175b0 <rl_beg_of_line@plt>
   1c470:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c474:	ldr	x8, [x8, #2984]
   1c478:	ldr	x0, [x22]
   1c47c:	ldr	x9, [x8]
   1c480:	and	x9, x9, #0xffffffffffefffff
   1c484:	str	x9, [x8]
   1c488:	bl	1b9ec <_rl_vi_domove_motion_cleanup@@Base+0x268>
   1c48c:	mov	w19, w0
   1c490:	tbz	w0, #31, 1c500 <rl_vi_delete_to@@Base+0x228>
   1c494:	b	1c4f8 <rl_vi_delete_to@@Base+0x220>
   1c498:	mov	w19, wzr
   1c49c:	b	1c500 <rl_vi_delete_to@@Base+0x228>
   1c4a0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c4a4:	ldr	x20, [x20, #2984]
   1c4a8:	ldr	x8, [x20]
   1c4ac:	tbnz	w8, #19, 1c4e4 <rl_vi_delete_to@@Base+0x20c>
   1c4b0:	orr	x8, x8, #0x40
   1c4b4:	str	x8, [x20]
   1c4b8:	bl	16e60 <rl_read_key@plt>
   1c4bc:	ldr	x8, [x20]
   1c4c0:	and	x8, x8, #0xffffffffffffffbf
   1c4c4:	str	x8, [x20]
   1c4c8:	str	w0, [x19, #32]
   1c4cc:	tbnz	w0, #31, 1c4f4 <rl_vi_delete_to@@Base+0x21c>
   1c4d0:	mov	x0, x19
   1c4d4:	bl	1be30 <_rl_vi_domove_callback@@Base+0x60>
   1c4d8:	mov	w19, w0
   1c4dc:	tbz	w0, #31, 1c500 <rl_vi_delete_to@@Base+0x228>
   1c4e0:	b	1c4f8 <rl_vi_delete_to@@Base+0x220>
   1c4e4:	orr	x8, x8, #0x100000
   1c4e8:	mov	w19, wzr
   1c4ec:	str	x8, [x20]
   1c4f0:	b	1c50c <rl_vi_delete_to@@Base+0x234>
   1c4f4:	str	wzr, [x19, #32]
   1c4f8:	bl	17390 <rl_ding@plt>
   1c4fc:	mov	w19, #0xffffffff            	// #-1
   1c500:	ldr	x0, [x22]
   1c504:	bl	169f0 <xfree@plt>
   1c508:	str	xzr, [x22]
   1c50c:	mov	w0, w19
   1c510:	ldp	x20, x19, [sp, #64]
   1c514:	ldp	x22, x21, [sp, #48]
   1c518:	ldp	x24, x23, [sp, #32]
   1c51c:	ldp	x26, x25, [sp, #16]
   1c520:	ldp	x29, x30, [sp], #80
   1c524:	ret

000000000001c528 <rl_vi_change_to@@Base>:
   1c528:	stp	x29, x30, [sp, #-80]!
   1c52c:	mov	w0, #0x24                  	// #36
   1c530:	stp	x26, x25, [sp, #16]
   1c534:	stp	x24, x23, [sp, #32]
   1c538:	stp	x22, x21, [sp, #48]
   1c53c:	stp	x20, x19, [sp, #64]
   1c540:	mov	x29, sp
   1c544:	mov	w20, w1
   1c548:	mov	w21, #0x24                  	// #36
   1c54c:	bl	16bf0 <xmalloc@plt>
   1c550:	adrp	x8, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1c554:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c558:	ldr	q0, [x8, #2848]
   1c55c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c560:	ldr	x10, [x10, #3512]
   1c564:	ldr	x23, [x23, #2656]
   1c568:	mov	w9, #0xffffffff            	// #-1
   1c56c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c570:	ldr	x22, [x22, #2152]
   1c574:	str	w9, [x0, #16]
   1c578:	str	q0, [x0]
   1c57c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c580:	ldr	w24, [x23]
   1c584:	ldr	x26, [x26, #3272]
   1c588:	ldr	w8, [x10]
   1c58c:	mov	x19, x0
   1c590:	stp	w20, w9, [x0, #28]
   1c594:	sxtw	x25, w24
   1c598:	stp	w8, w24, [x0, #20]
   1c59c:	str	x0, [x22]
   1c5a0:	str	w8, [x26]
   1c5a4:	bl	17100 <__ctype_b_loc@plt>
   1c5a8:	ldr	x8, [x0]
   1c5ac:	and	w9, w20, #0xff
   1c5b0:	ldrh	w8, [x8, w9, uxtw #1]
   1c5b4:	tbnz	w8, #8, 1c634 <rl_vi_change_to@@Base+0x10c>
   1c5b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c5bc:	ldr	x8, [x8, #3576]
   1c5c0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1c5c4:	ldr	w21, [x9, #112]
   1c5c8:	ldr	w8, [x8]
   1c5cc:	cbz	w8, 1c6a8 <rl_vi_change_to@@Base+0x180>
   1c5d0:	cmp	w21, #0x63
   1c5d4:	b.eq	1c6a8 <rl_vi_change_to@@Base+0x180>  // b.none
   1c5d8:	str	w21, [x19, #32]
   1c5dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c5e0:	ldr	x8, [x8, #2480]
   1c5e4:	add	w10, w24, #0x1
   1c5e8:	mov	w11, #0x20                  	// #32
   1c5ec:	str	w10, [x23]
   1c5f0:	ldr	x9, [x8]
   1c5f4:	mov	w0, w21
   1c5f8:	strb	w11, [x9, x25]
   1c5fc:	ldr	x8, [x8]
   1c600:	ldrsw	x9, [x23]
   1c604:	strb	wzr, [x8, x9]
   1c608:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c60c:	ldr	x8, [x8, #1992]
   1c610:	ldr	x1, [x8]
   1c614:	bl	16c30 <_rl_dispatch@plt>
   1c618:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c61c:	ldr	x8, [x8, #2984]
   1c620:	ldr	x8, [x8]
   1c624:	tbz	w8, #19, 1c62c <rl_vi_change_to@@Base+0x104>
   1c628:	tbnz	w8, #23, 1c6e8 <rl_vi_change_to@@Base+0x1c0>
   1c62c:	mov	w0, w21
   1c630:	b	1c694 <rl_vi_change_to@@Base+0x16c>
   1c634:	str	w21, [x19, #32]
   1c638:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c63c:	ldr	x9, [x9, #2480]
   1c640:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1c644:	add	w10, w24, #0x1
   1c648:	mov	w12, #0x20                  	// #32
   1c64c:	ldr	x11, [x9]
   1c650:	str	w21, [x8, #112]
   1c654:	str	w10, [x23]
   1c658:	mov	w0, #0x24                  	// #36
   1c65c:	strb	w12, [x11, x25]
   1c660:	ldr	x8, [x9]
   1c664:	ldrsw	x9, [x23]
   1c668:	strb	wzr, [x8, x9]
   1c66c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c670:	ldr	x8, [x8, #1992]
   1c674:	ldr	x1, [x8]
   1c678:	bl	16c30 <_rl_dispatch@plt>
   1c67c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c680:	ldr	x8, [x8, #2984]
   1c684:	ldr	x8, [x8]
   1c688:	tbz	w8, #19, 1c690 <rl_vi_change_to@@Base+0x168>
   1c68c:	tbnz	w8, #23, 1c6e8 <rl_vi_change_to@@Base+0x1c0>
   1c690:	mov	w0, #0x24                  	// #36
   1c694:	mov	x1, x19
   1c698:	bl	16e10 <_rl_vi_domove_motion_cleanup@plt>
   1c69c:	mov	w19, w0
   1c6a0:	tbz	w0, #31, 1c750 <rl_vi_change_to@@Base+0x228>
   1c6a4:	b	1c748 <rl_vi_change_to@@Base+0x220>
   1c6a8:	cbz	w8, 1c6f0 <rl_vi_change_to@@Base+0x1c8>
   1c6ac:	mov	w0, #0x1                   	// #1
   1c6b0:	mov	w1, w20
   1c6b4:	str	w21, [x19, #32]
   1c6b8:	str	w24, [x26]
   1c6bc:	bl	175b0 <rl_beg_of_line@plt>
   1c6c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c6c4:	ldr	x8, [x8, #2984]
   1c6c8:	ldr	x0, [x22]
   1c6cc:	ldr	x9, [x8]
   1c6d0:	and	x9, x9, #0xffffffffffefffff
   1c6d4:	str	x9, [x8]
   1c6d8:	bl	1b9ec <_rl_vi_domove_motion_cleanup@@Base+0x268>
   1c6dc:	mov	w19, w0
   1c6e0:	tbz	w0, #31, 1c750 <rl_vi_change_to@@Base+0x228>
   1c6e4:	b	1c748 <rl_vi_change_to@@Base+0x220>
   1c6e8:	mov	w19, wzr
   1c6ec:	b	1c750 <rl_vi_change_to@@Base+0x228>
   1c6f0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c6f4:	ldr	x20, [x20, #2984]
   1c6f8:	ldr	x8, [x20]
   1c6fc:	tbnz	w8, #19, 1c734 <rl_vi_change_to@@Base+0x20c>
   1c700:	orr	x8, x8, #0x40
   1c704:	str	x8, [x20]
   1c708:	bl	16e60 <rl_read_key@plt>
   1c70c:	ldr	x8, [x20]
   1c710:	and	x8, x8, #0xffffffffffffffbf
   1c714:	str	x8, [x20]
   1c718:	str	w0, [x19, #32]
   1c71c:	tbnz	w0, #31, 1c744 <rl_vi_change_to@@Base+0x21c>
   1c720:	mov	x0, x19
   1c724:	bl	1be30 <_rl_vi_domove_callback@@Base+0x60>
   1c728:	mov	w19, w0
   1c72c:	tbz	w0, #31, 1c750 <rl_vi_change_to@@Base+0x228>
   1c730:	b	1c748 <rl_vi_change_to@@Base+0x220>
   1c734:	orr	x8, x8, #0x100000
   1c738:	mov	w19, wzr
   1c73c:	str	x8, [x20]
   1c740:	b	1c75c <rl_vi_change_to@@Base+0x234>
   1c744:	str	wzr, [x19, #32]
   1c748:	bl	17390 <rl_ding@plt>
   1c74c:	mov	w19, #0xffffffff            	// #-1
   1c750:	ldr	x0, [x22]
   1c754:	bl	169f0 <xfree@plt>
   1c758:	str	xzr, [x22]
   1c75c:	mov	w0, w19
   1c760:	ldp	x20, x19, [sp, #64]
   1c764:	ldp	x22, x21, [sp, #48]
   1c768:	ldp	x24, x23, [sp, #32]
   1c76c:	ldp	x26, x25, [sp, #16]
   1c770:	ldp	x29, x30, [sp], #80
   1c774:	ret

000000000001c778 <rl_vi_yank_to@@Base>:
   1c778:	stp	x29, x30, [sp, #-80]!
   1c77c:	mov	w0, #0x24                  	// #36
   1c780:	stp	x26, x25, [sp, #16]
   1c784:	stp	x24, x23, [sp, #32]
   1c788:	stp	x22, x21, [sp, #48]
   1c78c:	stp	x20, x19, [sp, #64]
   1c790:	mov	x29, sp
   1c794:	mov	w20, w1
   1c798:	mov	w21, #0x24                  	// #36
   1c79c:	bl	16bf0 <xmalloc@plt>
   1c7a0:	adrp	x8, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1c7a4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c7a8:	ldr	q0, [x8, #2864]
   1c7ac:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c7b0:	ldr	x10, [x10, #3512]
   1c7b4:	ldr	x23, [x23, #2656]
   1c7b8:	mov	w9, #0xffffffff            	// #-1
   1c7bc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c7c0:	ldr	x22, [x22, #2152]
   1c7c4:	str	w9, [x0, #16]
   1c7c8:	str	q0, [x0]
   1c7cc:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c7d0:	ldr	w24, [x23]
   1c7d4:	ldr	x26, [x26, #3272]
   1c7d8:	ldr	w8, [x10]
   1c7dc:	mov	x19, x0
   1c7e0:	stp	w20, w9, [x0, #28]
   1c7e4:	sxtw	x25, w24
   1c7e8:	stp	w8, w24, [x0, #20]
   1c7ec:	str	x0, [x22]
   1c7f0:	str	w8, [x26]
   1c7f4:	bl	17100 <__ctype_b_loc@plt>
   1c7f8:	ldr	x8, [x0]
   1c7fc:	and	w9, w20, #0xff
   1c800:	ldrh	w8, [x8, w9, uxtw #1]
   1c804:	tbnz	w8, #8, 1c884 <rl_vi_yank_to@@Base+0x10c>
   1c808:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c80c:	ldr	x8, [x8, #3576]
   1c810:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1c814:	ldr	w21, [x9, #112]
   1c818:	ldr	w8, [x8]
   1c81c:	cbz	w8, 1c8f8 <rl_vi_yank_to@@Base+0x180>
   1c820:	cmp	w21, #0x79
   1c824:	b.eq	1c8f8 <rl_vi_yank_to@@Base+0x180>  // b.none
   1c828:	str	w21, [x19, #32]
   1c82c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c830:	ldr	x8, [x8, #2480]
   1c834:	add	w10, w24, #0x1
   1c838:	mov	w11, #0x20                  	// #32
   1c83c:	str	w10, [x23]
   1c840:	ldr	x9, [x8]
   1c844:	mov	w0, w21
   1c848:	strb	w11, [x9, x25]
   1c84c:	ldr	x8, [x8]
   1c850:	ldrsw	x9, [x23]
   1c854:	strb	wzr, [x8, x9]
   1c858:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c85c:	ldr	x8, [x8, #1992]
   1c860:	ldr	x1, [x8]
   1c864:	bl	16c30 <_rl_dispatch@plt>
   1c868:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c86c:	ldr	x8, [x8, #2984]
   1c870:	ldr	x8, [x8]
   1c874:	tbz	w8, #19, 1c87c <rl_vi_yank_to@@Base+0x104>
   1c878:	tbnz	w8, #23, 1c938 <rl_vi_yank_to@@Base+0x1c0>
   1c87c:	mov	w0, w21
   1c880:	b	1c8e4 <rl_vi_yank_to@@Base+0x16c>
   1c884:	str	w21, [x19, #32]
   1c888:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c88c:	ldr	x9, [x9, #2480]
   1c890:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1c894:	add	w10, w24, #0x1
   1c898:	mov	w12, #0x20                  	// #32
   1c89c:	ldr	x11, [x9]
   1c8a0:	str	w21, [x8, #112]
   1c8a4:	str	w10, [x23]
   1c8a8:	mov	w0, #0x24                  	// #36
   1c8ac:	strb	w12, [x11, x25]
   1c8b0:	ldr	x8, [x9]
   1c8b4:	ldrsw	x9, [x23]
   1c8b8:	strb	wzr, [x8, x9]
   1c8bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c8c0:	ldr	x8, [x8, #1992]
   1c8c4:	ldr	x1, [x8]
   1c8c8:	bl	16c30 <_rl_dispatch@plt>
   1c8cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c8d0:	ldr	x8, [x8, #2984]
   1c8d4:	ldr	x8, [x8]
   1c8d8:	tbz	w8, #19, 1c8e0 <rl_vi_yank_to@@Base+0x168>
   1c8dc:	tbnz	w8, #23, 1c938 <rl_vi_yank_to@@Base+0x1c0>
   1c8e0:	mov	w0, #0x24                  	// #36
   1c8e4:	mov	x1, x19
   1c8e8:	bl	16e10 <_rl_vi_domove_motion_cleanup@plt>
   1c8ec:	mov	w19, w0
   1c8f0:	tbz	w0, #31, 1c9a0 <rl_vi_yank_to@@Base+0x228>
   1c8f4:	b	1c998 <rl_vi_yank_to@@Base+0x220>
   1c8f8:	cbz	w8, 1c940 <rl_vi_yank_to@@Base+0x1c8>
   1c8fc:	mov	w0, #0x1                   	// #1
   1c900:	mov	w1, w20
   1c904:	str	w21, [x19, #32]
   1c908:	str	w24, [x26]
   1c90c:	bl	175b0 <rl_beg_of_line@plt>
   1c910:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c914:	ldr	x8, [x8, #2984]
   1c918:	ldr	x0, [x22]
   1c91c:	ldr	x9, [x8]
   1c920:	and	x9, x9, #0xffffffffffefffff
   1c924:	str	x9, [x8]
   1c928:	bl	1b9ec <_rl_vi_domove_motion_cleanup@@Base+0x268>
   1c92c:	mov	w19, w0
   1c930:	tbz	w0, #31, 1c9a0 <rl_vi_yank_to@@Base+0x228>
   1c934:	b	1c998 <rl_vi_yank_to@@Base+0x220>
   1c938:	mov	w19, wzr
   1c93c:	b	1c9a0 <rl_vi_yank_to@@Base+0x228>
   1c940:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c944:	ldr	x20, [x20, #2984]
   1c948:	ldr	x8, [x20]
   1c94c:	tbnz	w8, #19, 1c984 <rl_vi_yank_to@@Base+0x20c>
   1c950:	orr	x8, x8, #0x40
   1c954:	str	x8, [x20]
   1c958:	bl	16e60 <rl_read_key@plt>
   1c95c:	ldr	x8, [x20]
   1c960:	and	x8, x8, #0xffffffffffffffbf
   1c964:	str	x8, [x20]
   1c968:	str	w0, [x19, #32]
   1c96c:	tbnz	w0, #31, 1c994 <rl_vi_yank_to@@Base+0x21c>
   1c970:	mov	x0, x19
   1c974:	bl	1be30 <_rl_vi_domove_callback@@Base+0x60>
   1c978:	mov	w19, w0
   1c97c:	tbz	w0, #31, 1c9a0 <rl_vi_yank_to@@Base+0x228>
   1c980:	b	1c998 <rl_vi_yank_to@@Base+0x220>
   1c984:	orr	x8, x8, #0x100000
   1c988:	mov	w19, wzr
   1c98c:	str	x8, [x20]
   1c990:	b	1c9ac <rl_vi_yank_to@@Base+0x234>
   1c994:	str	wzr, [x19, #32]
   1c998:	bl	17390 <rl_ding@plt>
   1c99c:	mov	w19, #0xffffffff            	// #-1
   1c9a0:	ldr	x0, [x22]
   1c9a4:	bl	169f0 <xfree@plt>
   1c9a8:	str	xzr, [x22]
   1c9ac:	mov	w0, w19
   1c9b0:	ldp	x20, x19, [sp, #64]
   1c9b4:	ldp	x22, x21, [sp, #48]
   1c9b8:	ldp	x24, x23, [sp, #32]
   1c9bc:	ldp	x26, x25, [sp, #16]
   1c9c0:	ldp	x29, x30, [sp], #80
   1c9c4:	ret

000000000001c9c8 <rl_vi_rubout@@Base>:
   1c9c8:	stp	x29, x30, [sp, #-64]!
   1c9cc:	stp	x22, x21, [sp, #32]
   1c9d0:	stp	x20, x19, [sp, #48]
   1c9d4:	mov	w21, w1
   1c9d8:	mov	w20, w0
   1c9dc:	str	x23, [sp, #16]
   1c9e0:	mov	x29, sp
   1c9e4:	tbnz	w0, #31, 1ca34 <rl_vi_rubout@@Base+0x6c>
   1c9e8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c9ec:	ldr	x22, [x22, #3512]
   1c9f0:	ldr	w19, [x22]
   1c9f4:	cbz	w19, 1ca88 <rl_vi_rubout@@Base+0xc0>
   1c9f8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1c9fc:	ldr	x23, [x23, #1896]
   1ca00:	cmp	w20, #0x2
   1ca04:	b.lt	1ca50 <rl_vi_rubout@@Base+0x88>  // b.tstop
   1ca08:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1ca0c:	cmp	x0, #0x2
   1ca10:	b.cc	1ca50 <rl_vi_rubout@@Base+0x88>  // b.lo, b.ul, b.last
   1ca14:	ldr	w8, [x23]
   1ca18:	cbnz	w8, 1ca50 <rl_vi_rubout@@Base+0x88>
   1ca1c:	mov	w0, w20
   1ca20:	mov	w1, w21
   1ca24:	bl	16f70 <rl_backward_char@plt>
   1ca28:	ldr	w0, [x22]
   1ca2c:	tbz	w0, #31, 1caac <rl_vi_rubout@@Base+0xe4>
   1ca30:	b	1caa4 <rl_vi_rubout@@Base+0xdc>
   1ca34:	neg	w0, w20
   1ca38:	mov	w1, w21
   1ca3c:	ldp	x20, x19, [sp, #48]
   1ca40:	ldp	x22, x21, [sp, #32]
   1ca44:	ldr	x23, [sp, #16]
   1ca48:	ldp	x29, x30, [sp], #64
   1ca4c:	b	17620 <rl_vi_delete@plt>
   1ca50:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1ca54:	cmp	x0, #0x2
   1ca58:	b.cc	1ca94 <rl_vi_rubout@@Base+0xcc>  // b.lo, b.ul, b.last
   1ca5c:	ldr	w8, [x23]
   1ca60:	cbnz	w8, 1ca94 <rl_vi_rubout@@Base+0xcc>
   1ca64:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ca68:	ldr	x8, [x8, #2480]
   1ca6c:	ldr	w1, [x22]
   1ca70:	mov	w2, #0x1                   	// #1
   1ca74:	ldr	x0, [x8]
   1ca78:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1ca7c:	str	w0, [x22]
   1ca80:	tbz	w0, #31, 1caac <rl_vi_rubout@@Base+0xe4>
   1ca84:	b	1caa4 <rl_vi_rubout@@Base+0xdc>
   1ca88:	bl	17390 <rl_ding@plt>
   1ca8c:	mov	w0, #0x1                   	// #1
   1ca90:	b	1cab8 <rl_vi_rubout@@Base+0xf0>
   1ca94:	ldr	w8, [x22]
   1ca98:	sub	w0, w8, w20
   1ca9c:	str	w0, [x22]
   1caa0:	tbz	w0, #31, 1caac <rl_vi_rubout@@Base+0xe4>
   1caa4:	mov	w0, wzr
   1caa8:	str	wzr, [x22]
   1caac:	mov	w1, w19
   1cab0:	bl	16cb0 <rl_kill_text@plt>
   1cab4:	mov	w0, wzr
   1cab8:	ldp	x20, x19, [sp, #48]
   1cabc:	ldp	x22, x21, [sp, #32]
   1cac0:	ldr	x23, [sp, #16]
   1cac4:	ldp	x29, x30, [sp], #64
   1cac8:	ret

000000000001cacc <rl_vi_unix_word_rubout@@Base>:
   1cacc:	stp	x29, x30, [sp, #-96]!
   1cad0:	str	x27, [sp, #16]
   1cad4:	stp	x26, x25, [sp, #32]
   1cad8:	stp	x24, x23, [sp, #48]
   1cadc:	stp	x22, x21, [sp, #64]
   1cae0:	stp	x20, x19, [sp, #80]
   1cae4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cae8:	ldr	x22, [x22, #3512]
   1caec:	mov	x29, sp
   1caf0:	ldr	w19, [x22]
   1caf4:	cbz	w19, 1cd14 <rl_vi_unix_word_rubout@@Base+0x248>
   1caf8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cafc:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cb00:	ldr	x23, [x23, #2480]
   1cb04:	ldr	x25, [x25, #1896]
   1cb08:	cmp	w0, #0x1
   1cb0c:	csinc	w24, w0, wzr, gt
   1cb10:	mov	w20, w19
   1cb14:	b	1cb20 <rl_vi_unix_word_rubout@@Base+0x54>
   1cb18:	mov	w20, wzr
   1cb1c:	cbz	w24, 1cd04 <rl_vi_unix_word_rubout@@Base+0x238>
   1cb20:	cmp	w20, #0x1
   1cb24:	sub	w24, w24, #0x1
   1cb28:	b.lt	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>  // b.tstop
   1cb2c:	ldr	x9, [x23]
   1cb30:	ldrb	w8, [x9, w20, uxtw]
   1cb34:	cbz	w8, 1cc84 <rl_vi_unix_word_rubout@@Base+0x1b8>
   1cb38:	ldr	x21, [x23]
   1cb3c:	ldrb	w26, [x21, w20, uxtw]
   1cb40:	cmp	w26, #0x9
   1cb44:	b.eq	1cb94 <rl_vi_unix_word_rubout@@Base+0xc8>  // b.none
   1cb48:	cmp	w26, #0x20
   1cb4c:	b.eq	1cb94 <rl_vi_unix_word_rubout@@Base+0xc8>  // b.none
   1cb50:	bl	17100 <__ctype_b_loc@plt>
   1cb54:	ldr	x8, [x0]
   1cb58:	ldrh	w9, [x8, x26, lsl #1]
   1cb5c:	tbnz	w9, #2, 1cb94 <rl_vi_unix_word_rubout@@Base+0xc8>
   1cb60:	sxtw	x9, w20
   1cb64:	sub	x9, x9, #0x1
   1cb68:	ldrb	w10, [x21, x9]
   1cb6c:	cmp	w10, #0x9
   1cb70:	b.eq	1cb84 <rl_vi_unix_word_rubout@@Base+0xb8>  // b.none
   1cb74:	cmp	w10, #0x20
   1cb78:	b.eq	1cb84 <rl_vi_unix_word_rubout@@Base+0xb8>  // b.none
   1cb7c:	ldrh	w8, [x8, x10, lsl #1]
   1cb80:	tbz	w8, #2, 1cb94 <rl_vi_unix_word_rubout@@Base+0xc8>
   1cb84:	cmp	w20, #0x2
   1cb88:	mov	w20, w9
   1cb8c:	str	w9, [x22]
   1cb90:	b.lt	1cb18 <rl_vi_unix_word_rubout@@Base+0x4c>  // b.tstop
   1cb94:	ldr	x26, [x23]
   1cb98:	ldrb	w27, [x26, w20, uxtw]
   1cb9c:	cmp	w27, #0x9
   1cba0:	b.eq	1cc3c <rl_vi_unix_word_rubout@@Base+0x170>  // b.none
   1cba4:	cmp	w27, #0x20
   1cba8:	b.eq	1cc3c <rl_vi_unix_word_rubout@@Base+0x170>  // b.none
   1cbac:	bl	17100 <__ctype_b_loc@plt>
   1cbb0:	ldr	x8, [x0]
   1cbb4:	ldrh	w8, [x8, x27, lsl #1]
   1cbb8:	tbnz	w8, #2, 1cc3c <rl_vi_unix_word_rubout@@Base+0x170>
   1cbbc:	cmp	w27, #0x20
   1cbc0:	b.eq	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>  // b.none
   1cbc4:	mov	x21, x0
   1cbc8:	add	x8, x26, w20, sxtw
   1cbcc:	ldurb	w8, [x8, #-1]
   1cbd0:	cmp	w8, #0x9
   1cbd4:	b.eq	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>  // b.none
   1cbd8:	cmp	w8, #0x20
   1cbdc:	b.eq	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>  // b.none
   1cbe0:	ldr	x9, [x21]
   1cbe4:	ldrh	w8, [x9, x8, lsl #1]
   1cbe8:	tbnz	w8, #2, 1cb1c <rl_vi_unix_word_rubout@@Base+0x50>
   1cbec:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1cbf0:	cmp	x0, #0x1
   1cbf4:	b.eq	1cc20 <rl_vi_unix_word_rubout@@Base+0x154>  // b.none
   1cbf8:	ldr	w8, [x25]
   1cbfc:	cbnz	w8, 1cc20 <rl_vi_unix_word_rubout@@Base+0x154>
   1cc00:	mov	w0, #0x1                   	// #1
   1cc04:	bl	17250 <_rl_backward_char_internal@plt>
   1cc08:	cmp	w0, #0x0
   1cc0c:	b.le	1ccf8 <rl_vi_unix_word_rubout@@Base+0x22c>
   1cc10:	ldr	x26, [x23]
   1cc14:	mov	w20, w0
   1cc18:	str	w0, [x22]
   1cc1c:	b	1cbc8 <rl_vi_unix_word_rubout@@Base+0xfc>
   1cc20:	ldr	w8, [x22]
   1cc24:	sub	w20, w8, #0x1
   1cc28:	cmp	w8, #0x2
   1cc2c:	str	w20, [x22]
   1cc30:	b.lt	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>  // b.tstop
   1cc34:	ldr	x26, [x23]
   1cc38:	b	1cbc8 <rl_vi_unix_word_rubout@@Base+0xfc>
   1cc3c:	mov	w20, w20
   1cc40:	sub	x21, x26, #0x1
   1cc44:	b	1cc5c <rl_vi_unix_word_rubout@@Base+0x190>
   1cc48:	sub	x8, x20, #0x1
   1cc4c:	sub	w9, w20, #0x1
   1cc50:	mov	x20, x8
   1cc54:	str	w9, [x22]
   1cc58:	cbz	x8, 1cb1c <rl_vi_unix_word_rubout@@Base+0x50>
   1cc5c:	ldrb	w26, [x21, x20]
   1cc60:	cmp	w26, #0x9
   1cc64:	b.eq	1cc48 <rl_vi_unix_word_rubout@@Base+0x17c>  // b.none
   1cc68:	cmp	w26, #0x20
   1cc6c:	b.eq	1cc48 <rl_vi_unix_word_rubout@@Base+0x17c>  // b.none
   1cc70:	bl	17100 <__ctype_b_loc@plt>
   1cc74:	ldr	x8, [x0]
   1cc78:	ldrh	w8, [x8, x26, lsl #1]
   1cc7c:	tbnz	w8, #2, 1cc48 <rl_vi_unix_word_rubout@@Base+0x17c>
   1cc80:	b	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>
   1cc84:	sxtw	x10, w20
   1cc88:	sub	x8, x10, #0x1
   1cc8c:	ldrb	w11, [x9, x8]
   1cc90:	cmp	w11, #0x20
   1cc94:	b.eq	1cca0 <rl_vi_unix_word_rubout@@Base+0x1d4>  // b.none
   1cc98:	cmp	w11, #0x9
   1cc9c:	b.ne	1cb38 <rl_vi_unix_word_rubout@@Base+0x6c>  // b.any
   1cca0:	cmp	w20, #0x1
   1cca4:	str	w8, [x22]
   1cca8:	b.le	1cce8 <rl_vi_unix_word_rubout@@Base+0x21c>
   1ccac:	add	x8, x9, x10
   1ccb0:	sub	x9, x8, #0x1
   1ccb4:	b	1ccd0 <rl_vi_unix_word_rubout@@Base+0x204>
   1ccb8:	sub	w8, w20, #0x2
   1ccbc:	sub	w20, w20, #0x1
   1ccc0:	str	w8, [x22]
   1ccc4:	subs	w8, w20, #0x1
   1ccc8:	sub	x9, x9, #0x1
   1cccc:	b.le	1cce8 <rl_vi_unix_word_rubout@@Base+0x21c>
   1ccd0:	ldrb	w8, [x9]
   1ccd4:	cmp	w8, #0x20
   1ccd8:	b.eq	1ccb8 <rl_vi_unix_word_rubout@@Base+0x1ec>  // b.none
   1ccdc:	cmp	w8, #0x9
   1cce0:	b.eq	1ccb8 <rl_vi_unix_word_rubout@@Base+0x1ec>  // b.none
   1cce4:	sub	w8, w20, #0x1
   1cce8:	cmp	w8, #0x1
   1ccec:	mov	w20, w8
   1ccf0:	b.ge	1cb38 <rl_vi_unix_word_rubout@@Base+0x6c>  // b.tcont
   1ccf4:	b	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>
   1ccf8:	mov	w20, wzr
   1ccfc:	str	wzr, [x22]
   1cd00:	b	1cb1c <rl_vi_unix_word_rubout@@Base+0x50>
   1cd04:	mov	w0, w19
   1cd08:	mov	w1, w20
   1cd0c:	bl	16cb0 <rl_kill_text@plt>
   1cd10:	b	1cd18 <rl_vi_unix_word_rubout@@Base+0x24c>
   1cd14:	bl	17390 <rl_ding@plt>
   1cd18:	ldp	x20, x19, [sp, #80]
   1cd1c:	ldp	x22, x21, [sp, #64]
   1cd20:	ldp	x24, x23, [sp, #48]
   1cd24:	ldp	x26, x25, [sp, #32]
   1cd28:	ldr	x27, [sp, #16]
   1cd2c:	mov	w0, wzr
   1cd30:	ldp	x29, x30, [sp], #96
   1cd34:	ret

000000000001cd38 <rl_vi_back_to_indent@@Base>:
   1cd38:	stp	x29, x30, [sp, #-16]!
   1cd3c:	mov	w0, #0x1                   	// #1
   1cd40:	mov	x29, sp
   1cd44:	bl	175b0 <rl_beg_of_line@plt>
   1cd48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cd4c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cd50:	ldr	x8, [x8, #3512]
   1cd54:	ldr	x10, [x10, #2656]
   1cd58:	ldrsw	x9, [x8]
   1cd5c:	ldrsw	x10, [x10]
   1cd60:	cmp	w9, w10
   1cd64:	b.ge	1cda4 <rl_vi_back_to_indent@@Base+0x6c>  // b.tcont
   1cd68:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cd6c:	ldr	x11, [x11, #2480]
   1cd70:	add	w12, w9, #0x1
   1cd74:	ldr	x11, [x11]
   1cd78:	b	1cd90 <rl_vi_back_to_indent@@Base+0x58>
   1cd7c:	add	x9, x9, #0x1
   1cd80:	str	w12, [x8]
   1cd84:	cmp	x9, x10
   1cd88:	add	w12, w12, #0x1
   1cd8c:	b.ge	1cda4 <rl_vi_back_to_indent@@Base+0x6c>  // b.tcont
   1cd90:	ldrb	w13, [x11, x9]
   1cd94:	cmp	w13, #0x20
   1cd98:	b.eq	1cd7c <rl_vi_back_to_indent@@Base+0x44>  // b.none
   1cd9c:	cmp	w13, #0x9
   1cda0:	b.eq	1cd7c <rl_vi_back_to_indent@@Base+0x44>  // b.none
   1cda4:	mov	w0, wzr
   1cda8:	ldp	x29, x30, [sp], #16
   1cdac:	ret

000000000001cdb0 <rl_vi_first_print@@Base>:
   1cdb0:	stp	x29, x30, [sp, #-16]!
   1cdb4:	mov	w0, #0x1                   	// #1
   1cdb8:	mov	x29, sp
   1cdbc:	bl	175b0 <rl_beg_of_line@plt>
   1cdc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cdc4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cdc8:	ldr	x8, [x8, #3512]
   1cdcc:	ldr	x9, [x9, #2656]
   1cdd0:	ldrsw	x11, [x8]
   1cdd4:	ldrsw	x9, [x9]
   1cdd8:	cmp	w11, w9
   1cddc:	b.ge	1ce24 <rl_vi_first_print@@Base+0x74>  // b.tcont
   1cde0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cde4:	ldr	x10, [x10, #2480]
   1cde8:	sub	x9, x9, x11
   1cdec:	ldr	x12, [x10]
   1cdf0:	add	w10, w11, #0x1
   1cdf4:	add	x11, x12, x11
   1cdf8:	b	1ce10 <rl_vi_first_print@@Base+0x60>
   1cdfc:	str	w10, [x8]
   1ce00:	subs	x9, x9, #0x1
   1ce04:	add	w10, w10, #0x1
   1ce08:	add	x11, x11, #0x1
   1ce0c:	b.eq	1ce24 <rl_vi_first_print@@Base+0x74>  // b.none
   1ce10:	ldrb	w12, [x11]
   1ce14:	cmp	w12, #0x20
   1ce18:	b.eq	1cdfc <rl_vi_first_print@@Base+0x4c>  // b.none
   1ce1c:	cmp	w12, #0x9
   1ce20:	b.eq	1cdfc <rl_vi_first_print@@Base+0x4c>  // b.none
   1ce24:	mov	w0, wzr
   1ce28:	ldp	x29, x30, [sp], #16
   1ce2c:	ret

000000000001ce30 <rl_vi_char_search@@Base>:
   1ce30:	stp	x29, x30, [sp, #-48]!
   1ce34:	stp	x20, x19, [sp, #32]
   1ce38:	mov	w20, w1
   1ce3c:	cmp	w1, #0x53
   1ce40:	mov	w19, w0
   1ce44:	str	x21, [sp, #16]
   1ce48:	mov	x29, sp
   1ce4c:	b.gt	1ce70 <rl_vi_char_search@@Base+0x40>
   1ce50:	cmp	w20, #0x2c
   1ce54:	b.eq	1ce90 <rl_vi_char_search@@Base+0x60>  // b.none
   1ce58:	cmp	w20, #0x3b
   1ce5c:	b.eq	1ce90 <rl_vi_char_search@@Base+0x60>  // b.none
   1ce60:	cmp	w20, #0x46
   1ce64:	b.ne	1cedc <rl_vi_char_search@@Base+0xac>  // b.any
   1ce68:	mov	w8, #0xfffffffe            	// #-2
   1ce6c:	b	1cecc <rl_vi_char_search@@Base+0x9c>
   1ce70:	cmp	w20, #0x54
   1ce74:	b.eq	1cec0 <rl_vi_char_search@@Base+0x90>  // b.none
   1ce78:	cmp	w20, #0x66
   1ce7c:	b.eq	1cec8 <rl_vi_char_search@@Base+0x98>  // b.none
   1ce80:	cmp	w20, #0x74
   1ce84:	b.ne	1cedc <rl_vi_char_search@@Base+0xac>  // b.any
   1ce88:	mov	w8, #0x1                   	// #1
   1ce8c:	b	1cecc <rl_vi_char_search@@Base+0x9c>
   1ce90:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ce94:	ldr	w8, [x8, #136]
   1ce98:	mov	w0, #0x1                   	// #1
   1ce9c:	cbz	w8, 1cfa0 <rl_vi_char_search@@Base+0x170>
   1cea0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1cea4:	ldr	w3, [x9, #140]
   1cea8:	cbz	w3, 1cfa0 <rl_vi_char_search@@Base+0x170>
   1ceac:	cmp	w20, #0x3b
   1ceb0:	cneg	w8, w8, ne  // ne = any
   1ceb4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1ceb8:	str	w8, [x9, #144]
   1cebc:	b	1cef4 <rl_vi_char_search@@Base+0xc4>
   1cec0:	mov	w8, #0xffffffff            	// #-1
   1cec4:	b	1cecc <rl_vi_char_search@@Base+0x9c>
   1cec8:	mov	w8, #0x2                   	// #2
   1cecc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1ced0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   1ced4:	str	w8, [x9, #144]
   1ced8:	str	w8, [x10, #136]
   1cedc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cee0:	ldr	x8, [x8, #3576]
   1cee4:	ldr	w8, [x8]
   1cee8:	cbz	w8, 1cf18 <rl_vi_char_search@@Base+0xe8>
   1ceec:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1cef0:	ldr	w3, [x8, #140]
   1cef4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1cef8:	ldr	w1, [x8, #144]
   1cefc:	mov	w0, w19
   1cf00:	ldp	x20, x19, [sp, #32]
   1cf04:	ldr	x21, [sp, #16]
   1cf08:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   1cf0c:	add	x2, x2, #0x94
   1cf10:	ldp	x29, x30, [sp], #48
   1cf14:	b	168e0 <_rl_char_search_internal@plt>
   1cf18:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cf1c:	ldr	x21, [x21, #2984]
   1cf20:	ldrb	w8, [x21, #2]
   1cf24:	tbnz	w8, #3, 1cf50 <rl_vi_char_search@@Base+0x120>
   1cf28:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1cf2c:	add	x0, x0, #0x94
   1cf30:	mov	w1, #0x10                  	// #16
   1cf34:	bl	16cf0 <_rl_read_mbchar@plt>
   1cf38:	cmp	w0, #0x1
   1cf3c:	b.lt	1cf9c <rl_vi_char_search@@Base+0x16c>  // b.tstop
   1cf40:	mov	w3, w0
   1cf44:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1cf48:	str	w0, [x8, #140]
   1cf4c:	b	1cef4 <rl_vi_char_search@@Base+0xc4>
   1cf50:	mov	w0, w19
   1cf54:	bl	17700 <_rl_callback_data_alloc@plt>
   1cf58:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1cf5c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cf60:	ldr	w9, [x9, #144]
   1cf64:	ldr	x10, [x10, #2032]
   1cf68:	mov	x8, x0
   1cf6c:	mov	w0, wzr
   1cf70:	str	x8, [x10]
   1cf74:	stp	w9, w20, [x8, #4]
   1cf78:	ldr	x8, [x21]
   1cf7c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cf80:	ldr	x9, [x9, #4016]
   1cf84:	adrp	x10, 1c000 <_rl_vi_domove_callback@@Base+0x230>
   1cf88:	add	x10, x10, #0xfb0
   1cf8c:	orr	x8, x8, #0x800000
   1cf90:	str	x10, [x9]
   1cf94:	str	x8, [x21]
   1cf98:	b	1cfa0 <rl_vi_char_search@@Base+0x170>
   1cf9c:	mov	w0, #0xffffffff            	// #-1
   1cfa0:	ldp	x20, x19, [sp, #32]
   1cfa4:	ldr	x21, [sp, #16]
   1cfa8:	ldp	x29, x30, [sp], #48
   1cfac:	ret
   1cfb0:	stp	x29, x30, [sp, #-32]!
   1cfb4:	str	x19, [sp, #16]
   1cfb8:	mov	x19, x0
   1cfbc:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1cfc0:	add	x0, x0, #0x94
   1cfc4:	mov	w1, #0x10                  	// #16
   1cfc8:	mov	x29, sp
   1cfcc:	bl	16cf0 <_rl_read_mbchar@plt>
   1cfd0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1cfd4:	cmp	w0, #0x0
   1cfd8:	str	w0, [x8, #140]
   1cfdc:	b.le	1d034 <rl_vi_char_search@@Base+0x204>
   1cfe0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cfe4:	ldr	x8, [x8, #2984]
   1cfe8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1cfec:	mov	w11, #0x1                   	// #1
   1cff0:	mov	w3, w0
   1cff4:	ldr	x9, [x8]
   1cff8:	ldr	x10, [x10, #1976]
   1cffc:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   1d000:	add	x2, x2, #0x94
   1d004:	and	x9, x9, #0xffffffffff7fffff
   1d008:	str	w11, [x10]
   1d00c:	str	x9, [x8]
   1d010:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d014:	ldr	x8, [x8, #4016]
   1d018:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1d01c:	ldr	w1, [x9, #144]
   1d020:	str	xzr, [x8]
   1d024:	ldr	w0, [x19]
   1d028:	ldr	x19, [sp, #16]
   1d02c:	ldp	x29, x30, [sp], #32
   1d030:	b	168e0 <_rl_char_search_internal@plt>
   1d034:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d038:	ldr	x8, [x8, #2984]
   1d03c:	ldr	x19, [sp, #16]
   1d040:	mov	w0, #0xffffffff            	// #-1
   1d044:	ldr	x9, [x8]
   1d048:	and	x9, x9, #0xffffffffff7fffff
   1d04c:	str	x9, [x8]
   1d050:	ldp	x29, x30, [sp], #32
   1d054:	ret

000000000001d058 <rl_vi_match@@Base>:
   1d058:	stp	x29, x30, [sp, #-96]!
   1d05c:	str	x27, [sp, #16]
   1d060:	stp	x26, x25, [sp, #32]
   1d064:	stp	x24, x23, [sp, #48]
   1d068:	stp	x22, x21, [sp, #64]
   1d06c:	stp	x20, x19, [sp, #80]
   1d070:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d074:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d078:	ldr	x21, [x21, #3512]
   1d07c:	ldr	x22, [x22, #2480]
   1d080:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d084:	mov	w20, w1
   1d088:	ldrsw	x19, [x21]
   1d08c:	ldr	x8, [x22]
   1d090:	mov	x29, sp
   1d094:	ldrb	w8, [x8, x19]
   1d098:	ldr	x23, [x23, #2656]
   1d09c:	sub	w9, w8, #0x5b
   1d0a0:	cmp	w9, #0x22
   1d0a4:	b.hi	1d0c8 <rl_vi_match@@Base+0x70>  // b.pmore
   1d0a8:	adrp	x8, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d0ac:	add	x8, x8, #0xb40
   1d0b0:	adr	x10, 1d0c0 <rl_vi_match@@Base+0x68>
   1d0b4:	ldrb	w11, [x8, x9]
   1d0b8:	add	x10, x10, x11, lsl #2
   1d0bc:	br	x10
   1d0c0:	mov	w20, #0x2                   	// #2
   1d0c4:	b	1d2c0 <rl_vi_match@@Base+0x268>
   1d0c8:	cmp	w8, #0x28
   1d0cc:	b.eq	1d2bc <rl_vi_match@@Base+0x264>  // b.none
   1d0d0:	cmp	w8, #0x29
   1d0d4:	b.ne	1d0e0 <rl_vi_match@@Base+0x88>  // b.any
   1d0d8:	mov	w20, #0xffffffff            	// #-1
   1d0dc:	b	1d1e0 <rl_vi_match@@Base+0x188>
   1d0e0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d0e4:	cmp	x0, #0x2
   1d0e8:	b.cc	1d128 <rl_vi_match@@Base+0xd0>  // b.lo, b.ul, b.last
   1d0ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d0f0:	ldr	x8, [x8, #1896]
   1d0f4:	ldr	w8, [x8]
   1d0f8:	cbnz	w8, 1d128 <rl_vi_match@@Base+0xd0>
   1d0fc:	ldr	w24, [x21]
   1d100:	adrp	x25, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d104:	add	x25, x25, #0xba9
   1d108:	b	1d188 <rl_vi_match@@Base+0x130>
   1d10c:	ldr	w9, [x23]
   1d110:	sub	w9, w9, #0x1
   1d114:	cmp	w8, w9
   1d118:	b.ge	1d1bc <rl_vi_match@@Base+0x164>  // b.tcont
   1d11c:	mov	w0, #0x1                   	// #1
   1d120:	mov	w1, w20
   1d124:	bl	16780 <rl_forward_char@plt>
   1d128:	ldr	x9, [x22]
   1d12c:	ldrsw	x8, [x21]
   1d130:	ldrb	w9, [x9, x8]
   1d134:	sub	w10, w9, #0x5b
   1d138:	cmp	w10, #0x22
   1d13c:	b.hi	1d158 <rl_vi_match@@Base+0x100>  // b.pmore
   1d140:	adrp	x9, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d144:	add	x9, x9, #0xb86
   1d148:	adr	x11, 1d10c <rl_vi_match@@Base+0xb4>
   1d14c:	ldrb	w12, [x9, x10]
   1d150:	add	x11, x11, x12, lsl #2
   1d154:	br	x11
   1d158:	cmp	w9, #0x28
   1d15c:	b.eq	1d3e8 <rl_vi_match@@Base+0x390>  // b.none
   1d160:	cmp	w9, #0x29
   1d164:	b.ne	1d10c <rl_vi_match@@Base+0xb4>  // b.any
   1d168:	b	1d1bc <rl_vi_match@@Base+0x164>
   1d16c:	mov	w0, #0x1                   	// #1
   1d170:	mov	w1, w20
   1d174:	bl	16780 <rl_forward_char@plt>
   1d178:	ldr	w8, [x21]
   1d17c:	cmp	w24, w8
   1d180:	mov	w24, w8
   1d184:	b.eq	1d1bc <rl_vi_match@@Base+0x164>  // b.none
   1d188:	ldr	x8, [x22]
   1d18c:	ldrb	w8, [x8, w24, sxtw]
   1d190:	sub	w9, w8, #0x5b
   1d194:	cmp	w9, #0x22
   1d198:	b.hi	1d1ac <rl_vi_match@@Base+0x154>  // b.pmore
   1d19c:	adr	x8, 1d16c <rl_vi_match@@Base+0x114>
   1d1a0:	ldrb	w10, [x25, x9]
   1d1a4:	add	x8, x8, x10, lsl #2
   1d1a8:	br	x8
   1d1ac:	cmp	w8, #0x28
   1d1b0:	b.eq	1d3f4 <rl_vi_match@@Base+0x39c>  // b.none
   1d1b4:	cmp	w8, #0x29
   1d1b8:	b.ne	1d16c <rl_vi_match@@Base+0x114>  // b.any
   1d1bc:	str	w19, [x21]
   1d1c0:	bl	17390 <rl_ding@plt>
   1d1c4:	mov	w0, #0x1                   	// #1
   1d1c8:	b	1d3a4 <rl_vi_match@@Base+0x34c>
   1d1cc:	mov	w20, #0xfffffffe            	// #-2
   1d1d0:	b	1d1e0 <rl_vi_match@@Base+0x188>
   1d1d4:	mov	w20, #0x3                   	// #3
   1d1d8:	b	1d2c0 <rl_vi_match@@Base+0x268>
   1d1dc:	mov	w20, #0xfffffffd            	// #-3
   1d1e0:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d1e4:	ldr	x25, [x25, #1896]
   1d1e8:	adrp	x26, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d1ec:	neg	w23, w20
   1d1f0:	mov	w24, #0x1                   	// #1
   1d1f4:	add	x26, x26, #0xb63
   1d1f8:	b	1d218 <rl_vi_match@@Base+0x1c0>
   1d1fc:	mov	w8, wzr
   1d200:	cmp	w8, w20
   1d204:	cset	w9, eq  // eq = none
   1d208:	cmp	w8, w23
   1d20c:	csinv	w8, w9, wzr, ne  // ne = any
   1d210:	adds	w24, w8, w24
   1d214:	b.eq	1d39c <rl_vi_match@@Base+0x344>  // b.none
   1d218:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d21c:	cmp	x0, #0x1
   1d220:	b.eq	1d250 <rl_vi_match@@Base+0x1f8>  // b.none
   1d224:	ldr	w8, [x25]
   1d228:	cbnz	w8, 1d250 <rl_vi_match@@Base+0x1f8>
   1d22c:	ldr	x0, [x22]
   1d230:	mov	w1, w19
   1d234:	mov	w2, wzr
   1d238:	bl	16c20 <_rl_find_prev_mbchar@plt>
   1d23c:	cmp	w19, w0
   1d240:	cset	w8, eq  // eq = none
   1d244:	sub	w19, w0, w8
   1d248:	tbz	w19, #31, 1d258 <rl_vi_match@@Base+0x200>
   1d24c:	b	1d1c0 <rl_vi_match@@Base+0x168>
   1d250:	sub	w19, w19, #0x1
   1d254:	tbnz	w19, #31, 1d1c0 <rl_vi_match@@Base+0x168>
   1d258:	ldr	x8, [x22]
   1d25c:	ldrb	w8, [x8, w19, uxtw]
   1d260:	sub	w9, w8, #0x5b
   1d264:	cmp	w9, #0x22
   1d268:	b.hi	1d284 <rl_vi_match@@Base+0x22c>  // b.pmore
   1d26c:	adr	x8, 1d1fc <rl_vi_match@@Base+0x1a4>
   1d270:	ldrb	w10, [x26, x9]
   1d274:	add	x8, x8, x10, lsl #2
   1d278:	br	x8
   1d27c:	mov	w8, #0x2                   	// #2
   1d280:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d284:	cmp	w8, #0x28
   1d288:	b.eq	1d2b4 <rl_vi_match@@Base+0x25c>  // b.none
   1d28c:	cmp	w8, #0x29
   1d290:	b.ne	1d1fc <rl_vi_match@@Base+0x1a4>  // b.any
   1d294:	mov	w8, #0xffffffff            	// #-1
   1d298:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d29c:	mov	w8, #0xfffffffe            	// #-2
   1d2a0:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d2a4:	mov	w8, #0x3                   	// #3
   1d2a8:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d2ac:	mov	w8, #0xfffffffd            	// #-3
   1d2b0:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d2b4:	mov	w8, #0x1                   	// #1
   1d2b8:	b	1d200 <rl_vi_match@@Base+0x1a8>
   1d2bc:	mov	w20, #0x1                   	// #1
   1d2c0:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d2c4:	ldr	x26, [x26, #1896]
   1d2c8:	adrp	x27, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d2cc:	neg	w24, w20
   1d2d0:	mov	w25, #0x1                   	// #1
   1d2d4:	add	x27, x27, #0xbcc
   1d2d8:	b	1d2f8 <rl_vi_match@@Base+0x2a0>
   1d2dc:	mov	w8, wzr
   1d2e0:	cmp	w8, w20
   1d2e4:	cset	w9, eq  // eq = none
   1d2e8:	cmp	w8, w24
   1d2ec:	csinv	w8, w9, wzr, ne  // ne = any
   1d2f0:	adds	w25, w8, w25
   1d2f4:	b.eq	1d39c <rl_vi_match@@Base+0x344>  // b.none
   1d2f8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d2fc:	cmp	x0, #0x1
   1d300:	b.eq	1d328 <rl_vi_match@@Base+0x2d0>  // b.none
   1d304:	ldr	w8, [x26]
   1d308:	cbnz	w8, 1d328 <rl_vi_match@@Base+0x2d0>
   1d30c:	ldr	x0, [x22]
   1d310:	mov	w2, #0x1                   	// #1
   1d314:	mov	w1, w19
   1d318:	mov	w3, wzr
   1d31c:	bl	16c00 <_rl_find_next_mbchar@plt>
   1d320:	mov	w19, w0
   1d324:	b	1d32c <rl_vi_match@@Base+0x2d4>
   1d328:	add	w19, w19, #0x1
   1d32c:	ldr	w8, [x23]
   1d330:	cmp	w19, w8
   1d334:	b.ge	1d1c0 <rl_vi_match@@Base+0x168>  // b.tcont
   1d338:	ldr	x8, [x22]
   1d33c:	ldrb	w8, [x8, w19, sxtw]
   1d340:	sub	w9, w8, #0x5b
   1d344:	cmp	w9, #0x22
   1d348:	b.hi	1d364 <rl_vi_match@@Base+0x30c>  // b.pmore
   1d34c:	adr	x8, 1d2dc <rl_vi_match@@Base+0x284>
   1d350:	ldrb	w10, [x27, x9]
   1d354:	add	x8, x8, x10, lsl #2
   1d358:	br	x8
   1d35c:	mov	w8, #0x2                   	// #2
   1d360:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d364:	cmp	w8, #0x28
   1d368:	b.eq	1d394 <rl_vi_match@@Base+0x33c>  // b.none
   1d36c:	cmp	w8, #0x29
   1d370:	b.ne	1d2dc <rl_vi_match@@Base+0x284>  // b.any
   1d374:	mov	w8, #0xffffffff            	// #-1
   1d378:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d37c:	mov	w8, #0xfffffffe            	// #-2
   1d380:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d384:	mov	w8, #0x3                   	// #3
   1d388:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d38c:	mov	w8, #0xfffffffd            	// #-3
   1d390:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d394:	mov	w8, #0x1                   	// #1
   1d398:	b	1d2e0 <rl_vi_match@@Base+0x288>
   1d39c:	mov	w0, wzr
   1d3a0:	str	w19, [x21]
   1d3a4:	ldp	x20, x19, [sp, #80]
   1d3a8:	ldp	x22, x21, [sp, #64]
   1d3ac:	ldp	x24, x23, [sp, #48]
   1d3b0:	ldp	x26, x25, [sp, #32]
   1d3b4:	ldr	x27, [sp, #16]
   1d3b8:	ldp	x29, x30, [sp], #96
   1d3bc:	ret
   1d3c0:	mov	w20, #0x2                   	// #2
   1d3c4:	b	1d3ec <rl_vi_match@@Base+0x394>
   1d3c8:	mov	w20, #0x3                   	// #3
   1d3cc:	b	1d3ec <rl_vi_match@@Base+0x394>
   1d3d0:	mov	w20, #0x2                   	// #2
   1d3d4:	mov	w19, w24
   1d3d8:	b	1d2c0 <rl_vi_match@@Base+0x268>
   1d3dc:	mov	w20, #0x3                   	// #3
   1d3e0:	mov	w19, w24
   1d3e4:	b	1d2c0 <rl_vi_match@@Base+0x268>
   1d3e8:	mov	w20, #0x1                   	// #1
   1d3ec:	mov	w19, w8
   1d3f0:	b	1d2c0 <rl_vi_match@@Base+0x268>
   1d3f4:	mov	w20, #0x1                   	// #1
   1d3f8:	mov	w19, w24
   1d3fc:	b	1d2c0 <rl_vi_match@@Base+0x268>

000000000001d400 <rl_vi_bracktype@@Base>:
   1d400:	sub	w8, w0, #0x5b
   1d404:	cmp	w8, #0x22
   1d408:	b.hi	1d42c <rl_vi_bracktype@@Base+0x2c>  // b.pmore
   1d40c:	adrp	x9, 3e000 <_rl_print_color_indicator@@Base+0xec>
   1d410:	add	x9, x9, #0xbef
   1d414:	adr	x10, 1d424 <rl_vi_bracktype@@Base+0x24>
   1d418:	ldrb	w11, [x9, x8]
   1d41c:	add	x10, x10, x11, lsl #2
   1d420:	br	x10
   1d424:	mov	w0, #0x2                   	// #2
   1d428:	ret
   1d42c:	cmp	w0, #0x28
   1d430:	b.eq	1d464 <rl_vi_bracktype@@Base+0x64>  // b.none
   1d434:	cmp	w0, #0x29
   1d438:	b.ne	1d444 <rl_vi_bracktype@@Base+0x44>  // b.any
   1d43c:	mov	w0, #0xffffffff            	// #-1
   1d440:	ret
   1d444:	mov	w0, wzr
   1d448:	ret
   1d44c:	mov	w0, #0xfffffffe            	// #-2
   1d450:	ret
   1d454:	mov	w0, #0x3                   	// #3
   1d458:	ret
   1d45c:	mov	w0, #0xfffffffd            	// #-3
   1d460:	ret
   1d464:	mov	w0, #0x1                   	// #1
   1d468:	ret

000000000001d46c <rl_vi_change_char@@Base>:
   1d46c:	sub	sp, sp, #0x50
   1d470:	stp	x29, x30, [sp, #32]
   1d474:	str	x21, [sp, #48]
   1d478:	stp	x20, x19, [sp, #64]
   1d47c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d480:	ldr	x8, [x8, #3576]
   1d484:	mov	w19, w0
   1d488:	add	x29, sp, #0x20
   1d48c:	ldr	w8, [x8]
   1d490:	cbz	w8, 1d4c8 <rl_vi_change_char@@Base+0x5c>
   1d494:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   1d498:	add	x20, x20, #0xa4
   1d49c:	add	x0, sp, #0xc
   1d4a0:	mov	w2, #0x10                  	// #16
   1d4a4:	mov	x1, x20
   1d4a8:	bl	17730 <strncpy@plt>
   1d4ac:	ldrb	w20, [x20]
   1d4b0:	strb	wzr, [sp, #28]
   1d4b4:	add	x2, sp, #0xc
   1d4b8:	mov	w0, w19
   1d4bc:	mov	w1, w20
   1d4c0:	bl	1d6d4 <rl_vi_change_char@@Base+0x268>
   1d4c4:	b	1d598 <rl_vi_change_char@@Base+0x12c>
   1d4c8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d4cc:	ldr	x21, [x21, #2984]
   1d4d0:	ldr	x8, [x21]
   1d4d4:	tbnz	w8, #19, 1d548 <rl_vi_change_char@@Base+0xdc>
   1d4d8:	orr	x8, x8, #0x40
   1d4dc:	str	x8, [x21]
   1d4e0:	bl	16e60 <rl_read_key@plt>
   1d4e4:	ldr	x8, [x21]
   1d4e8:	and	x8, x8, #0xffffffffffffffbf
   1d4ec:	str	x8, [x21]
   1d4f0:	tbnz	w0, #31, 1d57c <rl_vi_change_char@@Base+0x110>
   1d4f4:	mov	w20, w0
   1d4f8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d4fc:	cmp	x0, #0x2
   1d500:	b.cc	1d5ac <rl_vi_change_char@@Base+0x140>  // b.lo, b.ul, b.last
   1d504:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d508:	ldr	x8, [x8, #1896]
   1d50c:	ldr	w8, [x8]
   1d510:	cbnz	w8, 1d5ac <rl_vi_change_char@@Base+0x140>
   1d514:	add	x1, sp, #0xc
   1d518:	mov	w2, #0x10                  	// #16
   1d51c:	mov	w0, w20
   1d520:	bl	16700 <_rl_read_mbstring@plt>
   1d524:	mov	w20, w0
   1d528:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d52c:	add	x0, x0, #0xa4
   1d530:	add	x1, sp, #0xc
   1d534:	mov	w2, #0x10                  	// #16
   1d538:	bl	17730 <strncpy@plt>
   1d53c:	strb	wzr, [x0, #16]
   1d540:	tbz	w20, #31, 1d4b4 <rl_vi_change_char@@Base+0x48>
   1d544:	b	1d594 <rl_vi_change_char@@Base+0x128>
   1d548:	mov	w0, w19
   1d54c:	bl	17700 <_rl_callback_data_alloc@plt>
   1d550:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d554:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d558:	ldr	x9, [x9, #2032]
   1d55c:	ldr	x10, [x10, #4016]
   1d560:	adrp	x11, 1d000 <rl_vi_char_search@@Base+0x1d0>
   1d564:	mov	x8, x0
   1d568:	add	x11, x11, #0x5c8
   1d56c:	mov	w0, wzr
   1d570:	str	x8, [x9]
   1d574:	str	x11, [x10]
   1d578:	b	1d598 <rl_vi_change_char@@Base+0x12c>
   1d57c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d580:	add	x0, x0, #0xa4
   1d584:	add	x1, sp, #0xc
   1d588:	mov	w2, #0x10                  	// #16
   1d58c:	bl	17730 <strncpy@plt>
   1d590:	strb	wzr, [x0, #16]
   1d594:	mov	w0, #0xffffffff            	// #-1
   1d598:	ldp	x20, x19, [sp, #64]
   1d59c:	ldr	x21, [sp, #48]
   1d5a0:	ldp	x29, x30, [sp, #32]
   1d5a4:	add	sp, sp, #0x50
   1d5a8:	ret
   1d5ac:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d5b0:	add	x0, x0, #0xa4
   1d5b4:	add	x1, sp, #0xc
   1d5b8:	mov	w2, #0x10                  	// #16
   1d5bc:	bl	17730 <strncpy@plt>
   1d5c0:	strb	wzr, [x0, #16]
   1d5c4:	b	1d4b4 <rl_vi_change_char@@Base+0x48>
   1d5c8:	sub	sp, sp, #0x50
   1d5cc:	stp	x29, x30, [sp, #32]
   1d5d0:	str	x21, [sp, #48]
   1d5d4:	stp	x20, x19, [sp, #64]
   1d5d8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d5dc:	ldr	x21, [x21, #2984]
   1d5e0:	add	x29, sp, #0x20
   1d5e4:	mov	x19, x0
   1d5e8:	ldr	x8, [x21]
   1d5ec:	orr	x8, x8, #0x40
   1d5f0:	str	x8, [x21]
   1d5f4:	bl	16e60 <rl_read_key@plt>
   1d5f8:	ldr	x8, [x21]
   1d5fc:	and	x8, x8, #0xffffffffffffffbf
   1d600:	str	x8, [x21]
   1d604:	tbnz	w0, #31, 1d65c <rl_vi_change_char@@Base+0x1f0>
   1d608:	mov	w20, w0
   1d60c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d610:	cmp	x0, #0x2
   1d614:	b.cc	1d67c <rl_vi_change_char@@Base+0x210>  // b.lo, b.ul, b.last
   1d618:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d61c:	ldr	x8, [x8, #1896]
   1d620:	ldr	w8, [x8]
   1d624:	cbnz	w8, 1d67c <rl_vi_change_char@@Base+0x210>
   1d628:	add	x1, sp, #0xc
   1d62c:	mov	w2, #0x10                  	// #16
   1d630:	mov	w0, w20
   1d634:	bl	16700 <_rl_read_mbstring@plt>
   1d638:	mov	w20, w0
   1d63c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d640:	add	x0, x0, #0xa4
   1d644:	add	x1, sp, #0xc
   1d648:	mov	w2, #0x10                  	// #16
   1d64c:	bl	17730 <strncpy@plt>
   1d650:	strb	wzr, [x0, #16]
   1d654:	tbz	w20, #31, 1d694 <rl_vi_change_char@@Base+0x228>
   1d658:	b	1d674 <rl_vi_change_char@@Base+0x208>
   1d65c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d660:	add	x0, x0, #0xa4
   1d664:	add	x1, sp, #0xc
   1d668:	mov	w2, #0x10                  	// #16
   1d66c:	bl	17730 <strncpy@plt>
   1d670:	strb	wzr, [x0, #16]
   1d674:	mov	w0, #0xffffffff            	// #-1
   1d678:	b	1d6c0 <rl_vi_change_char@@Base+0x254>
   1d67c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   1d680:	add	x0, x0, #0xa4
   1d684:	add	x1, sp, #0xc
   1d688:	mov	w2, #0x10                  	// #16
   1d68c:	bl	17730 <strncpy@plt>
   1d690:	strb	wzr, [x0, #16]
   1d694:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d698:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d69c:	ldr	x8, [x8, #4016]
   1d6a0:	ldr	x9, [x9, #1976]
   1d6a4:	mov	w10, #0x1                   	// #1
   1d6a8:	add	x2, sp, #0xc
   1d6ac:	str	xzr, [x8]
   1d6b0:	str	w10, [x9]
   1d6b4:	ldr	w0, [x19]
   1d6b8:	mov	w1, w20
   1d6bc:	bl	1d6d4 <rl_vi_change_char@@Base+0x268>
   1d6c0:	ldp	x20, x19, [sp, #64]
   1d6c4:	ldr	x21, [sp, #48]
   1d6c8:	ldp	x29, x30, [sp, #32]
   1d6cc:	add	sp, sp, #0x50
   1d6d0:	ret
   1d6d4:	stp	x29, x30, [sp, #-80]!
   1d6d8:	stp	x22, x21, [sp, #48]
   1d6dc:	mov	w21, w0
   1d6e0:	cmp	w1, #0x3
   1d6e4:	mov	w0, #0xffffffff            	// #-1
   1d6e8:	str	x25, [sp, #16]
   1d6ec:	stp	x24, x23, [sp, #32]
   1d6f0:	stp	x20, x19, [sp, #64]
   1d6f4:	mov	x29, sp
   1d6f8:	b.eq	1d800 <rl_vi_change_char@@Base+0x394>  // b.none
   1d6fc:	mov	w19, w1
   1d700:	cmp	w1, #0x1b
   1d704:	b.eq	1d800 <rl_vi_change_char@@Base+0x394>  // b.none
   1d708:	mov	x20, x2
   1d70c:	bl	16400 <rl_begin_undo_group@plt>
   1d710:	cbz	w21, 1d7ec <rl_vi_change_char@@Base+0x380>
   1d714:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d718:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d71c:	ldr	x22, [x22, #3512]
   1d720:	ldr	x23, [x23, #2656]
   1d724:	ldr	w25, [x22]
   1d728:	ldr	w8, [x23]
   1d72c:	cmp	w25, w8
   1d730:	b.ge	1d7ec <rl_vi_change_char@@Base+0x380>  // b.tcont
   1d734:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d738:	ldr	x24, [x24, #1896]
   1d73c:	sub	w21, w21, #0x1
   1d740:	mov	w0, #0x1                   	// #1
   1d744:	mov	w1, w19
   1d748:	bl	17620 <rl_vi_delete@plt>
   1d74c:	ldr	w8, [x22]
   1d750:	cmp	w8, w25
   1d754:	b.ge	1d7a0 <rl_vi_change_char@@Base+0x334>  // b.tcont
   1d758:	ldr	w9, [x23]
   1d75c:	cmp	w8, w9
   1d760:	b.ge	1d7a0 <rl_vi_change_char@@Base+0x334>  // b.tcont
   1d764:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d768:	ldr	w25, [x22]
   1d76c:	cmp	x0, #0x1
   1d770:	b.eq	1d798 <rl_vi_change_char@@Base+0x32c>  // b.none
   1d774:	ldr	w8, [x24]
   1d778:	cbnz	w8, 1d798 <rl_vi_change_char@@Base+0x32c>
   1d77c:	mov	w0, #0x1                   	// #1
   1d780:	bl	178f0 <_rl_forward_char_internal@plt>
   1d784:	ldr	w8, [x23]
   1d788:	cmp	w0, w8
   1d78c:	ccmp	w25, w0, #0x4, le
   1d790:	csel	w8, w8, w0, eq  // eq = none
   1d794:	b	1d79c <rl_vi_change_char@@Base+0x330>
   1d798:	add	w8, w25, #0x1
   1d79c:	str	w8, [x22]
   1d7a0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1d7a4:	cmp	x0, #0x2
   1d7a8:	b.cc	1d7c8 <rl_vi_change_char@@Base+0x35c>  // b.lo, b.ul, b.last
   1d7ac:	ldr	w8, [x24]
   1d7b0:	cbnz	w8, 1d7c8 <rl_vi_change_char@@Base+0x35c>
   1d7b4:	mov	x0, x20
   1d7b8:	bl	16430 <rl_insert_text@plt>
   1d7bc:	subs	w21, w21, #0x1
   1d7c0:	b.cs	1d7dc <rl_vi_change_char@@Base+0x370>  // b.hs, b.nlast
   1d7c4:	b	1d7ec <rl_vi_change_char@@Base+0x380>
   1d7c8:	mov	w0, #0x1                   	// #1
   1d7cc:	mov	w1, w19
   1d7d0:	bl	16d40 <_rl_insert_char@plt>
   1d7d4:	subs	w21, w21, #0x1
   1d7d8:	b.cc	1d7ec <rl_vi_change_char@@Base+0x380>  // b.lo, b.ul, b.last
   1d7dc:	ldr	w25, [x22]
   1d7e0:	ldr	w8, [x23]
   1d7e4:	cmp	w25, w8
   1d7e8:	b.lt	1d740 <rl_vi_change_char@@Base+0x2d4>  // b.tstop
   1d7ec:	mov	w0, #0x1                   	// #1
   1d7f0:	mov	w1, w19
   1d7f4:	bl	16f70 <rl_backward_char@plt>
   1d7f8:	bl	17830 <rl_end_undo_group@plt>
   1d7fc:	mov	w0, wzr
   1d800:	ldp	x20, x19, [sp, #64]
   1d804:	ldp	x22, x21, [sp, #48]
   1d808:	ldp	x24, x23, [sp, #32]
   1d80c:	ldr	x25, [sp, #16]
   1d810:	ldp	x29, x30, [sp], #80
   1d814:	ret

000000000001d818 <rl_vi_subst@@Base>:
   1d818:	stp	x29, x30, [sp, #-16]!
   1d81c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d820:	ldr	x8, [x8, #3576]
   1d824:	mov	x29, sp
   1d828:	ldr	w8, [x8]
   1d82c:	cbnz	w8, 1d844 <rl_vi_subst@@Base+0x2c>
   1d830:	cmp	w1, #0x53
   1d834:	mov	w8, #0x6c                  	// #108
   1d838:	mov	w9, #0x63                  	// #99
   1d83c:	csel	w0, w9, w8, eq  // eq = none
   1d840:	bl	17220 <rl_stuff_char@plt>
   1d844:	mov	w1, #0x63                  	// #99
   1d848:	ldp	x29, x30, [sp], #16
   1d84c:	b	172e0 <rl_vi_change_to@plt>

000000000001d850 <rl_vi_overstrike@@Base>:
   1d850:	stp	x29, x30, [sp, #-32]!
   1d854:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1d858:	ldrb	w9, [x8, #132]
   1d85c:	stp	x20, x19, [sp, #16]
   1d860:	mov	w20, w1
   1d864:	mov	w19, w0
   1d868:	mov	x29, sp
   1d86c:	tbnz	w9, #0, 1d87c <rl_vi_overstrike@@Base+0x2c>
   1d870:	mov	w9, #0x1                   	// #1
   1d874:	strb	w9, [x8, #132]
   1d878:	bl	16400 <rl_begin_undo_group@plt>
   1d87c:	cmp	w19, #0x1
   1d880:	b.lt	1d8a0 <rl_vi_overstrike@@Base+0x50>  // b.tstop
   1d884:	mov	w0, w19
   1d888:	mov	w1, w20
   1d88c:	bl	16ed0 <_rl_overwrite_char@plt>
   1d890:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1d894:	ldr	w9, [x8, #184]
   1d898:	add	w9, w9, w19
   1d89c:	str	w9, [x8, #184]
   1d8a0:	ldp	x20, x19, [sp, #16]
   1d8a4:	mov	w0, wzr
   1d8a8:	ldp	x29, x30, [sp], #32
   1d8ac:	ret

000000000001d8b0 <rl_vi_overstrike_delete@@Base>:
   1d8b0:	stp	x29, x30, [sp, #-64]!
   1d8b4:	stp	x22, x21, [sp, #32]
   1d8b8:	cmp	w0, #0x1
   1d8bc:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1d8c0:	str	x23, [sp, #16]
   1d8c4:	stp	x20, x19, [sp, #48]
   1d8c8:	mov	x29, sp
   1d8cc:	b.lt	1d92c <rl_vi_overstrike_delete@@Base+0x7c>  // b.tstop
   1d8d0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d8d4:	ldr	x22, [x22, #3512]
   1d8d8:	mov	w19, w1
   1d8dc:	mov	w20, w0
   1d8e0:	b	1d8ec <rl_vi_overstrike_delete@@Base+0x3c>
   1d8e4:	subs	w20, w20, #0x1
   1d8e8:	b.eq	1d92c <rl_vi_overstrike_delete@@Base+0x7c>  // b.none
   1d8ec:	ldr	w8, [x21, #184]
   1d8f0:	cbz	w8, 1d928 <rl_vi_overstrike_delete@@Base+0x78>
   1d8f4:	ldr	w23, [x22]
   1d8f8:	bl	16f90 <rl_do_undo@plt>
   1d8fc:	cbz	w0, 1d90c <rl_vi_overstrike_delete@@Base+0x5c>
   1d900:	ldr	w8, [x21, #184]
   1d904:	sub	w8, w8, #0x1
   1d908:	str	w8, [x21, #184]
   1d90c:	ldr	w8, [x22]
   1d910:	cmp	w8, w23
   1d914:	b.ne	1d8e4 <rl_vi_overstrike_delete@@Base+0x34>  // b.any
   1d918:	mov	w0, #0x1                   	// #1
   1d91c:	mov	w1, w19
   1d920:	bl	16f70 <rl_backward_char@plt>
   1d924:	b	1d8e4 <rl_vi_overstrike_delete@@Base+0x34>
   1d928:	bl	17390 <rl_ding@plt>
   1d92c:	ldr	w8, [x21, #184]
   1d930:	cbnz	w8, 1d94c <rl_vi_overstrike_delete@@Base+0x9c>
   1d934:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1d938:	ldrb	w8, [x19, #132]
   1d93c:	cbz	w8, 1d94c <rl_vi_overstrike_delete@@Base+0x9c>
   1d940:	bl	17830 <rl_end_undo_group@plt>
   1d944:	bl	16f90 <rl_do_undo@plt>
   1d948:	strb	wzr, [x19, #132]
   1d94c:	ldp	x20, x19, [sp, #48]
   1d950:	ldp	x22, x21, [sp, #32]
   1d954:	ldr	x23, [sp, #16]
   1d958:	mov	w0, wzr
   1d95c:	ldp	x29, x30, [sp], #64
   1d960:	ret

000000000001d964 <rl_vi_replace@@Base>:
   1d964:	stp	x29, x30, [sp, #-48]!
   1d968:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1d96c:	stp	x22, x21, [sp, #16]
   1d970:	stp	x20, x19, [sp, #32]
   1d974:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   1d978:	str	wzr, [x9, #184]
   1d97c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d980:	ldr	x8, [x20, #192]
   1d984:	ldr	x21, [x21, #4032]
   1d988:	mov	w19, w1
   1d98c:	mov	x29, sp
   1d990:	cbnz	x8, 1da48 <rl_vi_replace@@Base+0xe4>
   1d994:	bl	17450 <rl_make_bare_keymap@plt>
   1d998:	mov	x8, xzr
   1d99c:	add	x9, x0, #0x8
   1d9a0:	str	x0, [x20, #192]
   1d9a4:	b	1d9b4 <rl_vi_replace@@Base+0x50>
   1d9a8:	add	x8, x8, #0x10
   1d9ac:	cmp	x8, #0x200
   1d9b0:	b.eq	1d9cc <rl_vi_replace@@Base+0x68>  // b.none
   1d9b4:	ldrb	w10, [x21, x8]
   1d9b8:	cbnz	w10, 1d9a8 <rl_vi_replace@@Base+0x44>
   1d9bc:	add	x10, x21, x8
   1d9c0:	ldr	x10, [x10, #8]
   1d9c4:	str	x10, [x9, x8]
   1d9c8:	b	1d9a8 <rl_vi_replace@@Base+0x44>
   1d9cc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d9d0:	ldr	x9, [x9, #2768]
   1d9d4:	mov	x8, xzr
   1d9d8:	add	x10, x0, x8
   1d9dc:	add	x8, x8, #0x20
   1d9e0:	cmp	x8, #0xe00
   1d9e4:	str	x9, [x10, #520]
   1d9e8:	str	x9, [x10, #536]
   1d9ec:	b.ne	1d9d8 <rl_vi_replace@@Base+0x74>  // b.any
   1d9f0:	str	x9, [x0, #4104]
   1d9f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d9f8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1d9fc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da00:	ldr	x8, [x8, #2512]
   1da04:	ldr	x9, [x9, #2000]
   1da08:	ldr	x10, [x10, #2520]
   1da0c:	str	x8, [x0, #2040]
   1da10:	str	x9, [x0, #440]
   1da14:	str	x10, [x0, #216]
   1da18:	str	x10, [x0, #168]
   1da1c:	ldrb	w9, [x21, #128]
   1da20:	cbnz	w9, 1da3c <rl_vi_replace@@Base+0xd8>
   1da24:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da28:	ldr	x9, [x21, #136]
   1da2c:	ldr	x10, [x10, #2360]
   1da30:	cmp	x9, x10
   1da34:	b.ne	1da3c <rl_vi_replace@@Base+0xd8>  // b.any
   1da38:	str	x8, [x0, #136]
   1da3c:	add	x8, x0, #0x1, lsl #12
   1da40:	strb	wzr, [x8]
   1da44:	str	xzr, [x8, #8]
   1da48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da4c:	ldr	x8, [x8, #3720]
   1da50:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da54:	ldr	x9, [x9, #3640]
   1da58:	mov	w10, #0x1                   	// #1
   1da5c:	ldr	w8, [x8]
   1da60:	str	w19, [x9]
   1da64:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1da68:	str	w10, [x9, #2972]
   1da6c:	adrp	x9, 52000 <_rl_set_normal_color@@Base+0x14254>
   1da70:	str	w8, [x9, #2976]
   1da74:	bl	16400 <rl_begin_undo_group@plt>
   1da78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da7c:	ldr	x8, [x8, #2008]
   1da80:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1da84:	ldr	w8, [x8]
   1da88:	ldr	x22, [x22, #1992]
   1da8c:	str	x21, [x22]
   1da90:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1da94:	str	w19, [x21, #128]
   1da98:	cbz	w8, 1daa0 <rl_vi_replace@@Base+0x13c>
   1da9c:	bl	17640 <_rl_reset_prompt@plt>
   1daa0:	ldr	x8, [x20, #192]
   1daa4:	str	w19, [x21, #128]
   1daa8:	ldp	x20, x19, [sp, #32]
   1daac:	mov	w0, wzr
   1dab0:	str	x8, [x22]
   1dab4:	ldp	x22, x21, [sp, #16]
   1dab8:	ldp	x29, x30, [sp], #48
   1dabc:	ret

000000000001dac0 <rl_vi_set_mark@@Base>:
   1dac0:	stp	x29, x30, [sp, #-32]!
   1dac4:	str	x19, [sp, #16]
   1dac8:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dacc:	ldr	x19, [x19, #2984]
   1dad0:	mov	x29, sp
   1dad4:	ldr	x8, [x19]
   1dad8:	tbnz	w8, #19, 1db0c <rl_vi_set_mark@@Base+0x4c>
   1dadc:	orr	x8, x8, #0x40
   1dae0:	str	x8, [x19]
   1dae4:	bl	16e60 <rl_read_key@plt>
   1dae8:	ldr	x9, [x19]
   1daec:	sub	w8, w0, #0x61
   1daf0:	cmp	w8, #0x1a
   1daf4:	and	x9, x9, #0xffffffffffffffbf
   1daf8:	str	x9, [x19]
   1dafc:	b.cc	1db34 <rl_vi_set_mark@@Base+0x74>  // b.lo, b.ul, b.last
   1db00:	bl	17390 <rl_ding@plt>
   1db04:	mov	w0, #0x1                   	// #1
   1db08:	b	1db50 <rl_vi_set_mark@@Base+0x90>
   1db0c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db10:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db14:	ldr	x8, [x8, #2032]
   1db18:	ldr	x9, [x9, #4016]
   1db1c:	adrp	x10, 1d000 <rl_vi_char_search@@Base+0x1d0>
   1db20:	add	x10, x10, #0xb5c
   1db24:	mov	w0, wzr
   1db28:	str	xzr, [x8]
   1db2c:	str	x10, [x9]
   1db30:	b	1db50 <rl_vi_set_mark@@Base+0x90>
   1db34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db38:	ldr	x9, [x9, #3512]
   1db3c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   1db40:	mov	w0, wzr
   1db44:	add	x10, x10, #0x8
   1db48:	ldr	w9, [x9]
   1db4c:	str	w9, [x10, w8, uxtw #2]
   1db50:	ldr	x19, [sp, #16]
   1db54:	ldp	x29, x30, [sp], #32
   1db58:	ret
   1db5c:	stp	x29, x30, [sp, #-32]!
   1db60:	str	x19, [sp, #16]
   1db64:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db68:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db6c:	ldr	x8, [x8, #4016]
   1db70:	ldr	x19, [x19, #2984]
   1db74:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1db78:	mov	w10, #0x1                   	// #1
   1db7c:	str	xzr, [x8]
   1db80:	ldr	x8, [x19]
   1db84:	ldr	x9, [x9, #1976]
   1db88:	mov	x29, sp
   1db8c:	orr	x8, x8, #0x40
   1db90:	str	w10, [x9]
   1db94:	str	x8, [x19]
   1db98:	bl	16e60 <rl_read_key@plt>
   1db9c:	ldr	x9, [x19]
   1dba0:	sub	w8, w0, #0x61
   1dba4:	cmp	w8, #0x1a
   1dba8:	and	x9, x9, #0xffffffffffffffbf
   1dbac:	str	x9, [x19]
   1dbb0:	b.cc	1dbc0 <rl_vi_set_mark@@Base+0x100>  // b.lo, b.ul, b.last
   1dbb4:	bl	17390 <rl_ding@plt>
   1dbb8:	mov	w0, #0x1                   	// #1
   1dbbc:	b	1dbdc <rl_vi_set_mark@@Base+0x11c>
   1dbc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dbc4:	ldr	x9, [x9, #3512]
   1dbc8:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   1dbcc:	mov	w0, wzr
   1dbd0:	add	x10, x10, #0x8
   1dbd4:	ldr	w9, [x9]
   1dbd8:	str	w9, [x10, w8, uxtw #2]
   1dbdc:	ldr	x19, [sp, #16]
   1dbe0:	ldp	x29, x30, [sp], #32
   1dbe4:	ret

000000000001dbe8 <rl_vi_goto_mark@@Base>:
   1dbe8:	stp	x29, x30, [sp, #-32]!
   1dbec:	str	x19, [sp, #16]
   1dbf0:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dbf4:	ldr	x19, [x19, #2984]
   1dbf8:	mov	x29, sp
   1dbfc:	ldr	x8, [x19]
   1dc00:	tbnz	w8, #19, 1dc38 <rl_vi_goto_mark@@Base+0x50>
   1dc04:	orr	x8, x8, #0x40
   1dc08:	str	x8, [x19]
   1dc0c:	bl	16e60 <rl_read_key@plt>
   1dc10:	ldr	x8, [x19]
   1dc14:	cmp	w0, #0x60
   1dc18:	and	x8, x8, #0xffffffffffffffbf
   1dc1c:	str	x8, [x19]
   1dc20:	b.ne	1dc60 <rl_vi_goto_mark@@Base+0x78>  // b.any
   1dc24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dc28:	ldr	x8, [x8, #3272]
   1dc2c:	mov	w0, wzr
   1dc30:	ldr	w8, [x8]
   1dc34:	b	1dc84 <rl_vi_goto_mark@@Base+0x9c>
   1dc38:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dc3c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dc40:	ldr	x8, [x8, #2032]
   1dc44:	ldr	x9, [x9, #4016]
   1dc48:	adrp	x10, 1d000 <rl_vi_char_search@@Base+0x1d0>
   1dc4c:	add	x10, x10, #0xca8
   1dc50:	mov	w0, wzr
   1dc54:	str	xzr, [x8]
   1dc58:	str	x10, [x9]
   1dc5c:	b	1dc9c <rl_vi_goto_mark@@Base+0xb4>
   1dc60:	sub	w8, w0, #0x61
   1dc64:	cmp	w8, #0x1a
   1dc68:	b.cs	1dc94 <rl_vi_goto_mark@@Base+0xac>  // b.hs, b.nlast
   1dc6c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1dc70:	add	x9, x9, #0x8
   1dc74:	ldr	w8, [x9, w8, uxtw #2]
   1dc78:	cmn	w8, #0x1
   1dc7c:	b.eq	1dc94 <rl_vi_goto_mark@@Base+0xac>  // b.none
   1dc80:	mov	w0, wzr
   1dc84:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dc88:	ldr	x9, [x9, #3512]
   1dc8c:	str	w8, [x9]
   1dc90:	b	1dc9c <rl_vi_goto_mark@@Base+0xb4>
   1dc94:	bl	17390 <rl_ding@plt>
   1dc98:	mov	w0, #0x1                   	// #1
   1dc9c:	ldr	x19, [sp, #16]
   1dca0:	ldp	x29, x30, [sp], #32
   1dca4:	ret
   1dca8:	stp	x29, x30, [sp, #-32]!
   1dcac:	str	x19, [sp, #16]
   1dcb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dcb4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dcb8:	ldr	x8, [x8, #4016]
   1dcbc:	ldr	x19, [x19, #2984]
   1dcc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dcc4:	mov	w10, #0x1                   	// #1
   1dcc8:	str	xzr, [x8]
   1dccc:	ldr	x8, [x19]
   1dcd0:	ldr	x9, [x9, #1976]
   1dcd4:	mov	x29, sp
   1dcd8:	orr	x8, x8, #0x40
   1dcdc:	str	w10, [x9]
   1dce0:	str	x8, [x19]
   1dce4:	bl	16e60 <rl_read_key@plt>
   1dce8:	ldr	x8, [x19]
   1dcec:	cmp	w0, #0x60
   1dcf0:	and	x8, x8, #0xffffffffffffffbf
   1dcf4:	str	x8, [x19]
   1dcf8:	b.ne	1dd10 <rl_vi_goto_mark@@Base+0x128>  // b.any
   1dcfc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dd00:	ldr	x8, [x8, #3272]
   1dd04:	mov	w0, wzr
   1dd08:	ldr	w8, [x8]
   1dd0c:	b	1dd34 <rl_vi_goto_mark@@Base+0x14c>
   1dd10:	sub	w8, w0, #0x61
   1dd14:	cmp	w8, #0x1a
   1dd18:	b.cs	1dd44 <rl_vi_goto_mark@@Base+0x15c>  // b.hs, b.nlast
   1dd1c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1dd20:	add	x9, x9, #0x8
   1dd24:	ldr	w8, [x9, w8, uxtw #2]
   1dd28:	cmn	w8, #0x1
   1dd2c:	b.eq	1dd44 <rl_vi_goto_mark@@Base+0x15c>  // b.none
   1dd30:	mov	w0, wzr
   1dd34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dd38:	ldr	x9, [x9, #3512]
   1dd3c:	str	w8, [x9]
   1dd40:	b	1dd4c <rl_vi_goto_mark@@Base+0x164>
   1dd44:	bl	17390 <rl_ding@plt>
   1dd48:	mov	w0, #0x1                   	// #1
   1dd4c:	ldr	x19, [sp, #16]
   1dd50:	ldp	x29, x30, [sp], #32
   1dd54:	ret

000000000001dd58 <rl_add_funmap_entry@@Base>:
   1dd58:	stp	x29, x30, [sp, #-48]!
   1dd5c:	stp	x22, x21, [sp, #16]
   1dd60:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1dd64:	ldr	w10, [x21, #204]
   1dd68:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1dd6c:	stp	x20, x19, [sp, #32]
   1dd70:	ldr	w9, [x8, #208]
   1dd74:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dd78:	ldr	x22, [x22, #3256]
   1dd7c:	add	w10, w10, #0x2
   1dd80:	mov	x19, x1
   1dd84:	mov	x20, x0
   1dd88:	cmp	w10, w9
   1dd8c:	mov	x29, sp
   1dd90:	b.lt	1ddac <rl_add_funmap_entry@@Base+0x54>  // b.tstop
   1dd94:	ldr	x0, [x22]
   1dd98:	add	w9, w9, #0x40
   1dd9c:	sbfiz	x1, x9, #3, #32
   1dda0:	str	w9, [x8, #208]
   1dda4:	bl	16a50 <xrealloc@plt>
   1dda8:	str	x0, [x22]
   1ddac:	mov	w0, #0x10                  	// #16
   1ddb0:	bl	16bf0 <xmalloc@plt>
   1ddb4:	ldrsw	x8, [x21, #204]
   1ddb8:	ldr	x9, [x22]
   1ddbc:	lsl	x10, x8, #3
   1ddc0:	str	x0, [x9, x10]
   1ddc4:	ldr	x9, [x22]
   1ddc8:	add	x0, x8, #0x1
   1ddcc:	ldr	x9, [x9, x10]
   1ddd0:	str	x20, [x9]
   1ddd4:	ldr	x9, [x22]
   1ddd8:	ldr	x10, [x9, x10]
   1dddc:	str	x19, [x10, #8]
   1dde0:	str	w0, [x21, #204]
   1dde4:	str	xzr, [x9, x0, lsl #3]
   1dde8:	ldp	x20, x19, [sp, #32]
   1ddec:	ldp	x22, x21, [sp, #16]
   1ddf0:	ldp	x29, x30, [sp], #48
   1ddf4:	ret

000000000001ddf8 <rl_initialize_funmap@@Base>:
   1ddf8:	stp	x29, x30, [sp, #-80]!
   1ddfc:	stp	x20, x19, [sp, #64]
   1de00:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1de04:	ldrb	w8, [x19, #212]
   1de08:	stp	x26, x25, [sp, #16]
   1de0c:	stp	x24, x23, [sp, #32]
   1de10:	stp	x22, x21, [sp, #48]
   1de14:	mov	x29, sp
   1de18:	tbnz	w8, #0, 1ded4 <rl_initialize_funmap@@Base+0xdc>
   1de1c:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1de20:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1de24:	ldr	w8, [x21, #204]
   1de28:	ldr	x24, [x24, #3256]
   1de2c:	adrp	x22, 50000 <filename_completion_function@@Base+0x11580>
   1de30:	mov	x20, xzr
   1de34:	add	x22, x22, #0x440
   1de38:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   1de3c:	b	1de88 <rl_initialize_funmap@@Base+0x90>
   1de40:	mov	w0, #0x10                  	// #16
   1de44:	bl	16bf0 <xmalloc@plt>
   1de48:	ldrsw	x8, [x21, #204]
   1de4c:	ldr	x9, [x24]
   1de50:	add	x20, x20, #0x10
   1de54:	cmp	x20, #0x8a0
   1de58:	lsl	x10, x8, #3
   1de5c:	str	x0, [x9, x10]
   1de60:	ldr	x9, [x24]
   1de64:	add	x8, x8, #0x1
   1de68:	ldr	x9, [x9, x10]
   1de6c:	str	x26, [x9]
   1de70:	ldr	x9, [x24]
   1de74:	ldr	x10, [x9, x10]
   1de78:	str	x25, [x10, #8]
   1de7c:	str	w8, [x21, #204]
   1de80:	str	xzr, [x9, x8, lsl #3]
   1de84:	b.eq	1debc <rl_initialize_funmap@@Base+0xc4>  // b.none
   1de88:	add	x10, x22, x20
   1de8c:	ldr	w9, [x23, #208]
   1de90:	ldp	x26, x25, [x10]
   1de94:	add	w8, w8, #0x2
   1de98:	cmp	w8, w9
   1de9c:	b.lt	1de40 <rl_initialize_funmap@@Base+0x48>  // b.tstop
   1dea0:	ldr	x0, [x24]
   1dea4:	add	w8, w9, #0x40
   1dea8:	sbfiz	x1, x8, #3, #32
   1deac:	str	w8, [x23, #208]
   1deb0:	bl	16a50 <xrealloc@plt>
   1deb4:	str	x0, [x24]
   1deb8:	b	1de40 <rl_initialize_funmap@@Base+0x48>
   1debc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dec0:	ldr	x9, [x9, #2744]
   1dec4:	mov	w8, #0x1                   	// #1
   1dec8:	mov	w10, #0x8a                  	// #138
   1decc:	strb	w8, [x19, #212]
   1ded0:	str	w10, [x9]
   1ded4:	ldp	x20, x19, [sp, #64]
   1ded8:	ldp	x22, x21, [sp, #48]
   1dedc:	ldp	x24, x23, [sp, #32]
   1dee0:	ldp	x26, x25, [sp, #16]
   1dee4:	ldp	x29, x30, [sp], #80
   1dee8:	ret

000000000001deec <rl_funmap_names@@Base>:
   1deec:	stp	x29, x30, [sp, #-80]!
   1def0:	stp	x26, x25, [sp, #16]
   1def4:	stp	x24, x23, [sp, #32]
   1def8:	stp	x22, x21, [sp, #48]
   1defc:	stp	x20, x19, [sp, #64]
   1df00:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1df04:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1df08:	ldrb	w8, [x19, #212]
   1df0c:	ldr	x20, [x20, #3256]
   1df10:	mov	x29, sp
   1df14:	tbnz	w8, #0, 1dfc8 <rl_funmap_names@@Base+0xdc>
   1df18:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   1df1c:	ldr	w8, [x22, #204]
   1df20:	adrp	x23, 50000 <filename_completion_function@@Base+0x11580>
   1df24:	mov	x21, xzr
   1df28:	add	x23, x23, #0x440
   1df2c:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   1df30:	b	1df7c <rl_funmap_names@@Base+0x90>
   1df34:	mov	w0, #0x10                  	// #16
   1df38:	bl	16bf0 <xmalloc@plt>
   1df3c:	ldrsw	x8, [x22, #204]
   1df40:	ldr	x9, [x20]
   1df44:	add	x21, x21, #0x10
   1df48:	cmp	x21, #0x8a0
   1df4c:	lsl	x10, x8, #3
   1df50:	str	x0, [x9, x10]
   1df54:	ldr	x9, [x20]
   1df58:	add	x8, x8, #0x1
   1df5c:	ldr	x9, [x9, x10]
   1df60:	str	x26, [x9]
   1df64:	ldr	x9, [x20]
   1df68:	ldr	x10, [x9, x10]
   1df6c:	str	x25, [x10, #8]
   1df70:	str	w8, [x22, #204]
   1df74:	str	xzr, [x9, x8, lsl #3]
   1df78:	b.eq	1dfb0 <rl_funmap_names@@Base+0xc4>  // b.none
   1df7c:	add	x10, x23, x21
   1df80:	ldr	w9, [x24, #208]
   1df84:	ldp	x26, x25, [x10]
   1df88:	add	w8, w8, #0x2
   1df8c:	cmp	w8, w9
   1df90:	b.lt	1df34 <rl_funmap_names@@Base+0x48>  // b.tstop
   1df94:	ldr	x0, [x20]
   1df98:	add	w8, w9, #0x40
   1df9c:	sbfiz	x1, x8, #3, #32
   1dfa0:	str	w8, [x24, #208]
   1dfa4:	bl	16a50 <xrealloc@plt>
   1dfa8:	str	x0, [x20]
   1dfac:	b	1df34 <rl_funmap_names@@Base+0x48>
   1dfb0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1dfb4:	ldr	x9, [x9, #2744]
   1dfb8:	mov	w8, #0x1                   	// #1
   1dfbc:	mov	w10, #0x8a                  	// #138
   1dfc0:	strb	w8, [x19, #212]
   1dfc4:	str	w10, [x9]
   1dfc8:	ldr	x8, [x20]
   1dfcc:	ldr	x9, [x8]
   1dfd0:	cbz	x9, 1e03c <rl_funmap_names@@Base+0x150>
   1dfd4:	mov	x21, xzr
   1dfd8:	mov	w22, wzr
   1dfdc:	mov	x19, xzr
   1dfe0:	b	1e00c <rl_funmap_names@@Base+0x120>
   1dfe4:	lsl	x9, x21, #3
   1dfe8:	ldr	x8, [x8, x9]
   1dfec:	add	x10, x19, x9
   1dff0:	add	x21, x21, #0x1
   1dff4:	ldr	x8, [x8]
   1dff8:	stp	x8, xzr, [x10]
   1dffc:	ldr	x8, [x20]
   1e000:	add	x9, x8, x9
   1e004:	ldr	x9, [x9, #8]
   1e008:	cbz	x9, 1e034 <rl_funmap_names@@Base+0x148>
   1e00c:	add	w9, w21, #0x2
   1e010:	cmp	w9, w22
   1e014:	b.le	1dfe4 <rl_funmap_names@@Base+0xf8>
   1e018:	add	w22, w22, #0x14
   1e01c:	sbfiz	x1, x22, #3, #32
   1e020:	mov	x0, x19
   1e024:	bl	16a50 <xrealloc@plt>
   1e028:	ldr	x8, [x20]
   1e02c:	mov	x19, x0
   1e030:	b	1dfe4 <rl_funmap_names@@Base+0xf8>
   1e034:	and	x1, x21, #0xffffffff
   1e038:	b	1e044 <rl_funmap_names@@Base+0x158>
   1e03c:	mov	x19, xzr
   1e040:	mov	x1, xzr
   1e044:	adrp	x3, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e048:	ldr	x3, [x3, #3544]
   1e04c:	mov	w2, #0x8                   	// #8
   1e050:	mov	x0, x19
   1e054:	bl	16720 <qsort@plt>
   1e058:	mov	x0, x19
   1e05c:	ldp	x20, x19, [sp, #64]
   1e060:	ldp	x22, x21, [sp, #48]
   1e064:	ldp	x24, x23, [sp, #32]
   1e068:	ldp	x26, x25, [sp, #16]
   1e06c:	ldp	x29, x30, [sp], #80
   1e070:	ret

000000000001e074 <rl_make_bare_keymap@@Base>:
   1e074:	stp	x29, x30, [sp, #-16]!
   1e078:	mov	w0, #0x1010                	// #4112
   1e07c:	mov	x29, sp
   1e080:	bl	16bf0 <xmalloc@plt>
   1e084:	mov	x8, xzr
   1e088:	add	x9, x0, x8
   1e08c:	add	x8, x8, #0x20
   1e090:	cmp	x8, #0x1, lsl #12
   1e094:	strb	wzr, [x9]
   1e098:	strb	wzr, [x9, #16]
   1e09c:	str	xzr, [x9, #8]
   1e0a0:	str	xzr, [x9, #24]
   1e0a4:	b.ne	1e088 <rl_make_bare_keymap@@Base+0x14>  // b.any
   1e0a8:	strb	wzr, [x0, x8]
   1e0ac:	str	xzr, [x0, #4104]
   1e0b0:	ldp	x29, x30, [sp], #16
   1e0b4:	ret

000000000001e0b8 <rl_empty_keymap@@Base>:
   1e0b8:	mov	x8, xzr
   1e0bc:	ldrb	w9, [x0, x8]
   1e0c0:	cbnz	w9, 1e0e4 <rl_empty_keymap@@Base+0x2c>
   1e0c4:	add	x9, x0, x8
   1e0c8:	ldr	x9, [x9, #8]
   1e0cc:	cbnz	x9, 1e0e4 <rl_empty_keymap@@Base+0x2c>
   1e0d0:	add	x8, x8, #0x10
   1e0d4:	cmp	x8, #0x1, lsl #12
   1e0d8:	b.ne	1e0bc <rl_empty_keymap@@Base+0x4>  // b.any
   1e0dc:	mov	w0, #0x1                   	// #1
   1e0e0:	ret
   1e0e4:	mov	w0, wzr
   1e0e8:	ret

000000000001e0ec <rl_copy_keymap@@Base>:
   1e0ec:	stp	x29, x30, [sp, #-32]!
   1e0f0:	str	x19, [sp, #16]
   1e0f4:	mov	x19, x0
   1e0f8:	mov	w0, #0x1010                	// #4112
   1e0fc:	mov	x29, sp
   1e100:	bl	16bf0 <xmalloc@plt>
   1e104:	mov	x8, xzr
   1e108:	add	x9, x0, x8
   1e10c:	add	x8, x8, #0x20
   1e110:	cmp	x8, #0x1, lsl #12
   1e114:	strb	wzr, [x9]
   1e118:	strb	wzr, [x9, #16]
   1e11c:	str	xzr, [x9, #8]
   1e120:	str	xzr, [x9, #24]
   1e124:	b.ne	1e108 <rl_copy_keymap@@Base+0x1c>  // b.any
   1e128:	mov	w10, #0x1000                	// #4096
   1e12c:	add	x8, x19, #0x8
   1e130:	add	x9, x0, #0x8
   1e134:	strb	wzr, [x0, x10]
   1e138:	mov	w10, #0x101                 	// #257
   1e13c:	str	xzr, [x0, #4104]
   1e140:	ldurb	w11, [x8, #-8]
   1e144:	subs	x10, x10, #0x1
   1e148:	sturb	w11, [x9, #-8]
   1e14c:	ldr	x11, [x8], #16
   1e150:	str	x11, [x9], #16
   1e154:	b.ne	1e140 <rl_copy_keymap@@Base+0x54>  // b.any
   1e158:	ldr	x19, [sp, #16]
   1e15c:	ldp	x29, x30, [sp], #32
   1e160:	ret

000000000001e164 <rl_make_keymap@@Base>:
   1e164:	stp	x29, x30, [sp, #-16]!
   1e168:	mov	w0, #0x1010                	// #4112
   1e16c:	mov	x29, sp
   1e170:	bl	16bf0 <xmalloc@plt>
   1e174:	mov	x8, xzr
   1e178:	add	x9, x0, x8
   1e17c:	add	x8, x8, #0x20
   1e180:	cmp	x8, #0x1, lsl #12
   1e184:	strb	wzr, [x9]
   1e188:	strb	wzr, [x9, #16]
   1e18c:	str	xzr, [x9, #8]
   1e190:	str	xzr, [x9, #24]
   1e194:	b.ne	1e178 <rl_make_keymap@@Base+0x14>  // b.any
   1e198:	strb	wzr, [x0, x8]
   1e19c:	str	xzr, [x0, #4104]
   1e1a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e1a4:	ldr	x8, [x8, #2552]
   1e1a8:	mov	w9, #0x208                 	// #520
   1e1ac:	str	x8, [x0, x9]
   1e1b0:	add	x9, x9, #0x10
   1e1b4:	cmp	x9, #0x7f8
   1e1b8:	b.ne	1e1ac <rl_make_keymap@@Base+0x48>  // b.any
   1e1bc:	str	x8, [x0, #152]
   1e1c0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e1c4:	ldr	x10, [x10, #2360]
   1e1c8:	mov	x9, xzr
   1e1cc:	str	x10, [x0, #2040]
   1e1d0:	str	x10, [x0, #136]
   1e1d4:	add	x10, x0, x9
   1e1d8:	add	x9, x9, #0x20
   1e1dc:	cmp	x9, #0x800
   1e1e0:	str	x8, [x10, #2056]
   1e1e4:	str	x8, [x10, #2072]
   1e1e8:	b.ne	1e1d4 <rl_make_keymap@@Base+0x70>  // b.any
   1e1ec:	ldp	x29, x30, [sp], #16
   1e1f0:	ret

000000000001e1f4 <rl_discard_keymap@@Base>:
   1e1f4:	stp	x29, x30, [sp, #-48]!
   1e1f8:	stp	x22, x21, [sp, #16]
   1e1fc:	stp	x20, x19, [sp, #32]
   1e200:	mov	x29, sp
   1e204:	cbz	x0, 1e260 <rl_discard_keymap@@Base+0x6c>
   1e208:	mov	x19, x0
   1e20c:	mov	x20, xzr
   1e210:	add	x21, x0, #0x8
   1e214:	mov	w22, #0x101                 	// #257
   1e218:	b	1e23c <rl_discard_keymap@@Base+0x48>
   1e21c:	add	x8, x19, x20, lsl #4
   1e220:	add	x8, x8, #0x8
   1e224:	ldr	x0, [x8]
   1e228:	bl	169f0 <xfree@plt>
   1e22c:	add	x20, x20, #0x1
   1e230:	subs	x22, x22, #0x1
   1e234:	add	x21, x21, #0x10
   1e238:	b.eq	1e260 <rl_discard_keymap@@Base+0x6c>  // b.none
   1e23c:	ldurb	w8, [x21, #-8]
   1e240:	cmp	w8, #0x2
   1e244:	b.eq	1e21c <rl_discard_keymap@@Base+0x28>  // b.none
   1e248:	cmp	w8, #0x1
   1e24c:	b.ne	1e22c <rl_discard_keymap@@Base+0x38>  // b.any
   1e250:	ldr	x0, [x21]
   1e254:	bl	163c0 <rl_discard_keymap@plt>
   1e258:	mov	x8, x21
   1e25c:	b	1e224 <rl_discard_keymap@@Base+0x30>
   1e260:	ldp	x20, x19, [sp, #32]
   1e264:	ldp	x22, x21, [sp, #16]
   1e268:	ldp	x29, x30, [sp], #48
   1e26c:	ret

000000000001e270 <rl_free_keymap@@Base>:
   1e270:	stp	x29, x30, [sp, #-32]!
   1e274:	str	x19, [sp, #16]
   1e278:	mov	x29, sp
   1e27c:	mov	x19, x0
   1e280:	bl	163c0 <rl_discard_keymap@plt>
   1e284:	mov	x0, x19
   1e288:	ldr	x19, [sp, #16]
   1e28c:	ldp	x29, x30, [sp], #32
   1e290:	b	169f0 <xfree@plt>

000000000001e294 <_rl_enable_paren_matching@@Base>:
   1e294:	stp	x29, x30, [sp, #-32]!
   1e298:	stp	x20, x19, [sp, #16]
   1e29c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e2a0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e2a4:	ldr	x8, [x8, #2600]
   1e2a8:	ldr	x9, [x9, #2552]
   1e2ac:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e2b0:	ldr	x20, [x20, #1984]
   1e2b4:	cmp	w0, #0x0
   1e2b8:	csel	x19, x9, x8, eq  // eq = none
   1e2bc:	mov	w0, #0x29                  	// #41
   1e2c0:	mov	x1, x19
   1e2c4:	mov	x2, x20
   1e2c8:	mov	x29, sp
   1e2cc:	bl	17110 <rl_bind_key_in_map@plt>
   1e2d0:	mov	w0, #0x5d                  	// #93
   1e2d4:	mov	x1, x19
   1e2d8:	mov	x2, x20
   1e2dc:	bl	17110 <rl_bind_key_in_map@plt>
   1e2e0:	mov	w0, #0x7d                  	// #125
   1e2e4:	mov	x1, x19
   1e2e8:	mov	x2, x20
   1e2ec:	bl	17110 <rl_bind_key_in_map@plt>
   1e2f0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e2f4:	ldr	x20, [x20, #4032]
   1e2f8:	mov	w0, #0x29                  	// #41
   1e2fc:	mov	x1, x19
   1e300:	mov	x2, x20
   1e304:	bl	17110 <rl_bind_key_in_map@plt>
   1e308:	mov	w0, #0x5d                  	// #93
   1e30c:	mov	x1, x19
   1e310:	mov	x2, x20
   1e314:	bl	17110 <rl_bind_key_in_map@plt>
   1e318:	mov	x1, x19
   1e31c:	mov	x2, x20
   1e320:	ldp	x20, x19, [sp, #16]
   1e324:	mov	w0, #0x7d                  	// #125
   1e328:	ldp	x29, x30, [sp], #32
   1e32c:	b	17110 <rl_bind_key_in_map@plt>

000000000001e330 <rl_insert_close@@Base>:
   1e330:	sub	sp, sp, #0xf0
   1e334:	stp	x29, x30, [sp, #144]
   1e338:	stp	x28, x27, [sp, #160]
   1e33c:	stp	x26, x25, [sp, #176]
   1e340:	stp	x24, x23, [sp, #192]
   1e344:	stp	x22, x21, [sp, #208]
   1e348:	stp	x20, x19, [sp, #224]
   1e34c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e350:	ldr	x8, [x8, #3792]
   1e354:	mov	w19, w1
   1e358:	add	x29, sp, #0x90
   1e35c:	ldr	w8, [x8]
   1e360:	cbnz	w8, 1e3d0 <rl_insert_close@@Base+0xa0>
   1e364:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e368:	ldr	x8, [x8, #2296]
   1e36c:	ldr	w8, [x8]
   1e370:	cbz	w8, 1e3d0 <rl_insert_close@@Base+0xa0>
   1e374:	mov	w0, #0x1                   	// #1
   1e378:	mov	w1, w19
   1e37c:	bl	16d40 <_rl_insert_char@plt>
   1e380:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e384:	ldr	x23, [x23, #2664]
   1e388:	ldr	x8, [x23]
   1e38c:	blr	x8
   1e390:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e394:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e398:	ldr	x8, [x8, #2480]
   1e39c:	ldr	x22, [x22, #3512]
   1e3a0:	cmp	w19, #0x29
   1e3a4:	ldr	x25, [x8]
   1e3a8:	ldr	w8, [x22]
   1e3ac:	b.eq	1e3e0 <rl_insert_close@@Base+0xb0>  // b.none
   1e3b0:	cmp	w19, #0x5d
   1e3b4:	b.eq	1e3f0 <rl_insert_close@@Base+0xc0>  // b.none
   1e3b8:	cmp	w19, #0x7d
   1e3bc:	b.ne	1e4a4 <rl_insert_close@@Base+0x174>  // b.any
   1e3c0:	mov	w26, #0x7b                  	// #123
   1e3c4:	cmp	w8, #0x2
   1e3c8:	b.ge	1e3fc <rl_insert_close@@Base+0xcc>  // b.tcont
   1e3cc:	b	1e4a4 <rl_insert_close@@Base+0x174>
   1e3d0:	mov	w1, w19
   1e3d4:	bl	16d40 <_rl_insert_char@plt>
   1e3d8:	mov	w0, wzr
   1e3dc:	b	1e4a8 <rl_insert_close@@Base+0x178>
   1e3e0:	mov	w26, #0x28                  	// #40
   1e3e4:	cmp	w8, #0x2
   1e3e8:	b.ge	1e3fc <rl_insert_close@@Base+0xcc>  // b.tcont
   1e3ec:	b	1e4a4 <rl_insert_close@@Base+0x174>
   1e3f0:	mov	w26, #0x5b                  	// #91
   1e3f4:	cmp	w8, #0x2
   1e3f8:	b.lt	1e4a4 <rl_insert_close@@Base+0x174>  // b.tstop
   1e3fc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e400:	ldr	x9, [x9, #2616]
   1e404:	sub	w8, w8, #0x2
   1e408:	mov	w28, wzr
   1e40c:	mov	w24, w8
   1e410:	ldr	x20, [x9]
   1e414:	mov	w27, #0x1                   	// #1
   1e418:	b	1e428 <rl_insert_close@@Base+0xf8>
   1e41c:	add	w27, w27, #0x1
   1e420:	cbnz	w27, 1e490 <rl_insert_close@@Base+0x160>
   1e424:	b	1e4c8 <rl_insert_close@@Base+0x198>
   1e428:	cbz	w28, 1e438 <rl_insert_close@@Base+0x108>
   1e42c:	ldrb	w8, [x25, x24]
   1e430:	cmp	w28, w8
   1e434:	b.eq	1e490 <rl_insert_close@@Base+0x160>  // b.none
   1e438:	cbz	x20, 1e468 <rl_insert_close@@Base+0x138>
   1e43c:	ldrb	w21, [x25, x24]
   1e440:	mov	x0, x20
   1e444:	mov	w1, w21
   1e448:	bl	17380 <strchr@plt>
   1e44c:	cmp	x0, #0x0
   1e450:	csel	w8, w21, w28, ne  // ne = any
   1e454:	cbnz	w28, 1e494 <rl_insert_close@@Base+0x164>
   1e458:	cbnz	x0, 1e494 <rl_insert_close@@Base+0x164>
   1e45c:	cmp	w21, w19
   1e460:	b.eq	1e41c <rl_insert_close@@Base+0xec>  // b.none
   1e464:	b	1e480 <rl_insert_close@@Base+0x150>
   1e468:	cbz	w28, 1e474 <rl_insert_close@@Base+0x144>
   1e46c:	mov	w8, w28
   1e470:	b	1e494 <rl_insert_close@@Base+0x164>
   1e474:	ldrb	w21, [x25, x24]
   1e478:	cmp	w21, w19
   1e47c:	b.eq	1e41c <rl_insert_close@@Base+0xec>  // b.none
   1e480:	cmp	w26, w21
   1e484:	b.ne	1e490 <rl_insert_close@@Base+0x160>  // b.any
   1e488:	sub	w27, w27, #0x1
   1e48c:	cbz	w27, 1e4c8 <rl_insert_close@@Base+0x198>
   1e490:	mov	w8, wzr
   1e494:	cmp	x24, #0x0
   1e498:	sub	x24, x24, #0x1
   1e49c:	mov	w28, w8
   1e4a0:	b.gt	1e428 <rl_insert_close@@Base+0xf8>
   1e4a4:	mov	w0, #0x1                   	// #1
   1e4a8:	ldp	x20, x19, [sp, #224]
   1e4ac:	ldp	x22, x21, [sp, #208]
   1e4b0:	ldp	x24, x23, [sp, #192]
   1e4b4:	ldp	x26, x25, [sp, #176]
   1e4b8:	ldp	x28, x27, [sp, #160]
   1e4bc:	ldp	x29, x30, [sp, #144]
   1e4c0:	add	sp, sp, #0xf0
   1e4c4:	ret
   1e4c8:	tbnz	w24, #31, 1e4a4 <rl_insert_close@@Base+0x174>
   1e4cc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e4d0:	ldr	x19, [x19, #3176]
   1e4d4:	movi	v0.2d, #0x0
   1e4d8:	stp	q0, q0, [sp, #96]
   1e4dc:	stp	q0, q0, [sp, #64]
   1e4e0:	ldr	x0, [x19]
   1e4e4:	stp	q0, q0, [sp, #32]
   1e4e8:	stp	q0, q0, [sp]
   1e4ec:	bl	16860 <fileno@plt>
   1e4f0:	ldr	x8, [x19]
   1e4f4:	add	w9, w0, #0x3f
   1e4f8:	cmp	w0, #0x0
   1e4fc:	csel	w9, w9, w0, lt  // lt = tstop
   1e500:	and	w9, w9, #0xffffffc0
   1e504:	sub	w9, w0, w9
   1e508:	mov	w10, #0x1                   	// #1
   1e50c:	mov	x0, x8
   1e510:	lsl	x19, x10, x9
   1e514:	bl	16860 <fileno@plt>
   1e518:	add	w8, w0, #0x3f
   1e51c:	cmp	w0, #0x0
   1e520:	csel	w8, w8, w0, lt  // lt = tstop
   1e524:	asr	w8, w8, #6
   1e528:	mov	x9, sp
   1e52c:	sbfiz	x8, x8, #3, #32
   1e530:	ldr	x10, [x9, x8]
   1e534:	adrp	x11, 57000 <rl_insert@@Base+0x20abc>
   1e538:	ldrsw	x11, [x11, #3064]
   1e53c:	orr	x10, x10, x19
   1e540:	str	x10, [x9, x8]
   1e544:	mov	w8, #0xde83                	// #56963
   1e548:	movk	w8, #0x431b, lsl #16
   1e54c:	mul	x8, x11, x8
   1e550:	lsr	x10, x8, #32
   1e554:	lsr	x8, x8, #63
   1e558:	mov	w9, #0x4240                	// #16960
   1e55c:	add	w8, w8, w10, asr #18
   1e560:	ldr	x10, [x23]
   1e564:	movk	w9, #0xf, lsl #16
   1e568:	ldr	w19, [x22]
   1e56c:	msub	w9, w8, w9, w11
   1e570:	sxtw	x8, w8
   1e574:	sxtw	x9, w9
   1e578:	stp	x8, x9, [x29, #-16]
   1e57c:	str	w24, [x22]
   1e580:	blr	x10
   1e584:	mov	x1, sp
   1e588:	sub	x4, x29, #0x10
   1e58c:	mov	w0, #0x1                   	// #1
   1e590:	mov	x2, xzr
   1e594:	mov	x3, xzr
   1e598:	bl	175f0 <select@plt>
   1e59c:	mov	w0, wzr
   1e5a0:	str	w19, [x22]
   1e5a4:	b	1e4a8 <rl_insert_close@@Base+0x178>

000000000001e5a8 <rl_set_paren_blink_timeout@@Base>:
   1e5a8:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   1e5ac:	ldr	w8, [x9, #3064]
   1e5b0:	cmp	w0, #0x1
   1e5b4:	b.lt	1e5bc <rl_set_paren_blink_timeout@@Base+0x14>  // b.tstop
   1e5b8:	str	w0, [x9, #3064]
   1e5bc:	mov	w0, w8
   1e5c0:	ret

000000000001e5c4 <_rl_nsearch_cleanup@@Base>:
   1e5c4:	stp	x29, x30, [sp, #-32]!
   1e5c8:	str	x19, [sp, #16]
   1e5cc:	mov	w19, w1
   1e5d0:	mov	w1, wzr
   1e5d4:	mov	x29, sp
   1e5d8:	bl	16f00 <_rl_scxt_dispose@plt>
   1e5dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e5e0:	ldr	x8, [x8, #2984]
   1e5e4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e5e8:	cmp	w19, #0x1
   1e5ec:	cset	w0, ne  // ne = any
   1e5f0:	ldr	x9, [x8]
   1e5f4:	ldr	x10, [x10, #2232]
   1e5f8:	ldr	x19, [sp, #16]
   1e5fc:	and	x9, x9, #0xfffffffffffffeff
   1e600:	str	xzr, [x10]
   1e604:	str	x9, [x8]
   1e608:	ldp	x29, x30, [sp], #32
   1e60c:	ret

000000000001e610 <rl_noninc_forward_search@@Base>:
   1e610:	cmp	w1, #0x3f
   1e614:	csel	w1, w1, wzr, eq  // eq = none
   1e618:	mov	w0, #0x1                   	// #1
   1e61c:	b	1e620 <rl_noninc_forward_search@@Base+0x10>
   1e620:	stp	x29, x30, [sp, #-64]!
   1e624:	stp	x22, x21, [sp, #32]
   1e628:	stp	x20, x19, [sp, #48]
   1e62c:	mov	w20, w1
   1e630:	mov	w21, w0
   1e634:	mov	w0, #0x2                   	// #2
   1e638:	mov	w1, wzr
   1e63c:	str	x23, [sp, #16]
   1e640:	mov	x29, sp
   1e644:	bl	168d0 <_rl_scxt_alloc@plt>
   1e648:	mov	x19, x0
   1e64c:	tbz	w21, #31, 1e65c <rl_noninc_forward_search@@Base+0x4c>
   1e650:	ldr	w8, [x19, #4]
   1e654:	orr	w8, w8, #0x1
   1e658:	str	w8, [x19, #4]
   1e65c:	orr	w8, w20, #0x10
   1e660:	cmp	w8, #0x3f
   1e664:	b.ne	1e6a0 <rl_noninc_forward_search@@Base+0x90>  // b.any
   1e668:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e66c:	ldr	x8, [x8, #3416]
   1e670:	ldr	w8, [x8]
   1e674:	cbnz	w8, 1e6a0 <rl_noninc_forward_search@@Base+0x90>
   1e678:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e67c:	ldr	x8, [x8, #1992]
   1e680:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e684:	ldr	x8, [x8]
   1e688:	ldr	x9, [x9, #3824]
   1e68c:	cmp	x8, x9
   1e690:	b.ne	1e6a0 <rl_noninc_forward_search@@Base+0x90>  // b.any
   1e694:	ldr	w8, [x19, #4]
   1e698:	orr	w8, w8, #0x10
   1e69c:	str	w8, [x19, #4]
   1e6a0:	ldr	w8, [x19, #56]
   1e6a4:	stp	w8, w21, [x19, #96]
   1e6a8:	bl	178d0 <rl_maybe_save_line@plt>
   1e6ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e6b0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e6b4:	ldr	x8, [x8, #3040]
   1e6b8:	ldr	x9, [x9, #2480]
   1e6bc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e6c0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e6c4:	ldr	x22, [x22, #3512]
   1e6c8:	ldr	x10, [x10, #2656]
   1e6cc:	ldr	x9, [x9]
   1e6d0:	cmp	w20, #0x0
   1e6d4:	mov	w11, #0x3a                  	// #58
   1e6d8:	csel	w0, w11, w20, eq  // eq = none
   1e6dc:	str	xzr, [x8]
   1e6e0:	strb	wzr, [x9]
   1e6e4:	str	wzr, [x22]
   1e6e8:	str	wzr, [x10]
   1e6ec:	bl	169c0 <_rl_make_prompt_for_search@plt>
   1e6f0:	mov	x20, x0
   1e6f4:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   1e6f8:	add	x0, x0, #0x2d3
   1e6fc:	mov	x1, x20
   1e700:	bl	16e50 <rl_message@plt>
   1e704:	mov	x0, x20
   1e708:	bl	169f0 <xfree@plt>
   1e70c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e710:	ldr	x21, [x21, #2984]
   1e714:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e718:	mov	w0, wzr
   1e71c:	ldr	x8, [x21]
   1e720:	ldr	x23, [x23, #2232]
   1e724:	orr	x9, x8, #0x100
   1e728:	str	x9, [x21]
   1e72c:	str	x19, [x23]
   1e730:	tbnz	w8, #19, 1e7c4 <rl_noninc_forward_search@@Base+0x1b4>
   1e734:	mov	x0, x19
   1e738:	bl	174d0 <_rl_search_getchar@plt>
   1e73c:	tbnz	w0, #31, 1e790 <rl_noninc_forward_search@@Base+0x180>
   1e740:	mov	w1, w0
   1e744:	cbz	w0, 1e758 <rl_noninc_forward_search@@Base+0x148>
   1e748:	mov	x0, x19
   1e74c:	bl	1eab4 <_rl_nsearch_callback@@Base+0xd0>
   1e750:	tbnz	w0, #31, 1e788 <rl_noninc_forward_search@@Base+0x178>
   1e754:	cbnz	w0, 1e734 <rl_noninc_forward_search@@Base+0x124>
   1e758:	mov	x0, x19
   1e75c:	bl	1ebfc <_rl_nsearch_callback@@Base+0x218>
   1e760:	tbnz	w0, #31, 1e788 <rl_noninc_forward_search@@Base+0x178>
   1e764:	mov	w20, w0
   1e768:	mov	x0, x19
   1e76c:	mov	w1, wzr
   1e770:	bl	16f00 <_rl_scxt_dispose@plt>
   1e774:	ldr	x8, [x21]
   1e778:	cmp	w20, #0x1
   1e77c:	cset	w0, ne  // ne = any
   1e780:	str	xzr, [x23]
   1e784:	b	1e7bc <rl_noninc_forward_search@@Base+0x1ac>
   1e788:	mov	w0, #0x1                   	// #1
   1e78c:	b	1e7c4 <rl_noninc_forward_search@@Base+0x1b4>
   1e790:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1e794:	bl	17420 <rl_clear_message@plt>
   1e798:	ldr	w8, [x19, #48]
   1e79c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e7a0:	str	w8, [x22]
   1e7a4:	ldr	w8, [x19, #52]
   1e7a8:	ldr	x9, [x9, #3272]
   1e7ac:	str	w8, [x9]
   1e7b0:	bl	173f0 <rl_restore_prompt@plt>
   1e7b4:	ldr	x8, [x21]
   1e7b8:	mov	w0, #0x1                   	// #1
   1e7bc:	and	x8, x8, #0xfffffffffffffeff
   1e7c0:	str	x8, [x21]
   1e7c4:	ldp	x20, x19, [sp, #48]
   1e7c8:	ldp	x22, x21, [sp, #32]
   1e7cc:	ldr	x23, [sp, #16]
   1e7d0:	ldp	x29, x30, [sp], #64
   1e7d4:	ret

000000000001e7d8 <rl_noninc_reverse_search@@Base>:
   1e7d8:	cmp	w1, #0x2f
   1e7dc:	csel	w1, w1, wzr, eq  // eq = none
   1e7e0:	mov	w0, #0xffffffff            	// #-1
   1e7e4:	b	1e620 <rl_noninc_forward_search@@Base+0x10>

000000000001e7e8 <rl_noninc_forward_search_again@@Base>:
   1e7e8:	stp	x29, x30, [sp, #-16]!
   1e7ec:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1e7f0:	ldr	x0, [x8, #232]
   1e7f4:	mov	x29, sp
   1e7f8:	cbz	x0, 1e84c <rl_noninc_forward_search_again@@Base+0x64>
   1e7fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e800:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e804:	ldr	x8, [x8, #3416]
   1e808:	ldr	x9, [x9, #1992]
   1e80c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e810:	mov	w11, #0x4e                  	// #78
   1e814:	ldr	w8, [x8]
   1e818:	ldr	x9, [x9]
   1e81c:	ldr	x10, [x10, #3824]
   1e820:	cmp	x9, x10
   1e824:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   1e828:	ccmp	w1, w11, #0x0, eq  // eq = none
   1e82c:	mov	w8, #0x10                  	// #16
   1e830:	csel	w2, w8, wzr, eq  // eq = none
   1e834:	mov	w1, #0x1                   	// #1
   1e838:	bl	1e85c <rl_noninc_forward_search_again@@Base+0x74>
   1e83c:	cmp	w0, #0x1
   1e840:	cset	w0, ne  // ne = any
   1e844:	ldp	x29, x30, [sp], #16
   1e848:	ret
   1e84c:	bl	17390 <rl_ding@plt>
   1e850:	mov	w0, #0x1                   	// #1
   1e854:	ldp	x29, x30, [sp], #16
   1e858:	ret
   1e85c:	stp	x29, x30, [sp, #-48]!
   1e860:	str	x21, [sp, #16]
   1e864:	stp	x20, x19, [sp, #32]
   1e868:	mov	x29, sp
   1e86c:	cbz	x0, 1e958 <rl_noninc_forward_search_again@@Base+0x170>
   1e870:	ldrb	w8, [x0]
   1e874:	cbz	w8, 1e958 <rl_noninc_forward_search_again@@Base+0x170>
   1e878:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1e87c:	ldr	w8, [x19, #244]
   1e880:	tbnz	w8, #31, 1e958 <rl_noninc_forward_search_again@@Base+0x170>
   1e884:	mov	w3, w2
   1e888:	mov	w2, w1
   1e88c:	add	w1, w8, w1
   1e890:	mov	x4, xzr
   1e894:	bl	1f1ac <rl_history_substr_search_backward@@Base+0x98>
   1e898:	cmn	w0, #0x1
   1e89c:	b.eq	1e944 <rl_noninc_forward_search_again@@Base+0x15c>  // b.none
   1e8a0:	str	w0, [x19, #244]
   1e8a4:	bl	165a0 <where_history@plt>
   1e8a8:	ldr	w8, [x19, #244]
   1e8ac:	mov	w19, w0
   1e8b0:	mov	w0, w8
   1e8b4:	bl	173a0 <history_set_pos@plt>
   1e8b8:	bl	16a60 <current_history@plt>
   1e8bc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e8c0:	ldr	x21, [x21, #3416]
   1e8c4:	mov	x20, x0
   1e8c8:	ldr	w8, [x21]
   1e8cc:	cbz	w8, 1e8d8 <rl_noninc_forward_search_again@@Base+0xf0>
   1e8d0:	mov	w0, w19
   1e8d4:	bl	173a0 <history_set_pos@plt>
   1e8d8:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e8dc:	ldr	x0, [x20]
   1e8e0:	ldr	x19, [x19, #2656]
   1e8e4:	mov	w1, wzr
   1e8e8:	ldr	w2, [x19]
   1e8ec:	bl	175d0 <_rl_replace_text@plt>
   1e8f0:	mov	w0, #0x1                   	// #1
   1e8f4:	bl	16840 <_rl_fix_point@plt>
   1e8f8:	ldr	w8, [x21]
   1e8fc:	cbnz	w8, 1e904 <rl_noninc_forward_search_again@@Base+0x11c>
   1e900:	bl	17550 <rl_free_undo_list@plt>
   1e904:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e908:	ldr	x20, [x20, #3672]
   1e90c:	ldr	x0, [x20]
   1e910:	cbz	x0, 1e918 <rl_noninc_forward_search_again@@Base+0x130>
   1e914:	bl	16910 <_rl_free_history_entry@plt>
   1e918:	str	xzr, [x20]
   1e91c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e920:	ldr	w8, [x19]
   1e924:	ldr	x9, [x9, #3512]
   1e928:	str	wzr, [x9]
   1e92c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e930:	ldr	x9, [x9, #3272]
   1e934:	str	w8, [x9]
   1e938:	bl	17420 <rl_clear_message@plt>
   1e93c:	mov	w0, #0x1                   	// #1
   1e940:	b	1e960 <rl_noninc_forward_search_again@@Base+0x178>
   1e944:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1e948:	bl	17420 <rl_clear_message@plt>
   1e94c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e950:	ldr	x8, [x8, #3512]
   1e954:	str	wzr, [x8]
   1e958:	bl	17390 <rl_ding@plt>
   1e95c:	mov	w0, wzr
   1e960:	ldp	x20, x19, [sp, #32]
   1e964:	ldr	x21, [sp, #16]
   1e968:	ldp	x29, x30, [sp], #48
   1e96c:	ret

000000000001e970 <rl_noninc_reverse_search_again@@Base>:
   1e970:	stp	x29, x30, [sp, #-16]!
   1e974:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1e978:	ldr	x0, [x8, #232]
   1e97c:	mov	x29, sp
   1e980:	cbz	x0, 1e9d4 <rl_noninc_reverse_search_again@@Base+0x64>
   1e984:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e988:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e98c:	ldr	x8, [x8, #3416]
   1e990:	ldr	x9, [x9, #1992]
   1e994:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1e998:	mov	w11, #0x6e                  	// #110
   1e99c:	ldr	w8, [x8]
   1e9a0:	ldr	x9, [x9]
   1e9a4:	ldr	x10, [x10, #3824]
   1e9a8:	cmp	x9, x10
   1e9ac:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   1e9b0:	ccmp	w1, w11, #0x0, eq  // eq = none
   1e9b4:	mov	w8, #0x10                  	// #16
   1e9b8:	csel	w2, w8, wzr, eq  // eq = none
   1e9bc:	mov	w1, #0xffffffff            	// #-1
   1e9c0:	bl	1e85c <rl_noninc_forward_search_again@@Base+0x74>
   1e9c4:	cmp	w0, #0x1
   1e9c8:	cset	w0, ne  // ne = any
   1e9cc:	ldp	x29, x30, [sp], #16
   1e9d0:	ret
   1e9d4:	bl	17390 <rl_ding@plt>
   1e9d8:	mov	w0, #0x1                   	// #1
   1e9dc:	ldp	x29, x30, [sp], #16
   1e9e0:	ret

000000000001e9e4 <_rl_nsearch_callback@@Base>:
   1e9e4:	stp	x29, x30, [sp, #-32]!
   1e9e8:	stp	x20, x19, [sp, #16]
   1e9ec:	mov	x29, sp
   1e9f0:	mov	x19, x0
   1e9f4:	bl	174d0 <_rl_search_getchar@plt>
   1e9f8:	mov	w1, w0
   1e9fc:	cmp	w0, #0x0
   1ea00:	b.le	1ea58 <_rl_nsearch_callback@@Base+0x74>
   1ea04:	mov	x0, x19
   1ea08:	bl	1eab4 <_rl_nsearch_callback@@Base+0xd0>
   1ea0c:	cbnz	w0, 1ea5c <_rl_nsearch_callback@@Base+0x78>
   1ea10:	mov	x0, x19
   1ea14:	bl	1ebfc <_rl_nsearch_callback@@Base+0x218>
   1ea18:	tbnz	w0, #31, 1ea5c <_rl_nsearch_callback@@Base+0x78>
   1ea1c:	mov	w20, w0
   1ea20:	mov	x0, x19
   1ea24:	mov	w1, wzr
   1ea28:	bl	16f00 <_rl_scxt_dispose@plt>
   1ea2c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ea30:	ldr	x8, [x8, #2984]
   1ea34:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ea38:	cmp	w20, #0x1
   1ea3c:	cset	w0, ne  // ne = any
   1ea40:	ldr	x9, [x8]
   1ea44:	ldr	x10, [x10, #2232]
   1ea48:	and	x9, x9, #0xfffffffffffffeff
   1ea4c:	str	xzr, [x10]
   1ea50:	str	x9, [x8]
   1ea54:	b	1ea60 <_rl_nsearch_callback@@Base+0x7c>
   1ea58:	tbnz	w1, #31, 1ea6c <_rl_nsearch_callback@@Base+0x88>
   1ea5c:	mov	w0, #0x1                   	// #1
   1ea60:	ldp	x20, x19, [sp, #16]
   1ea64:	ldp	x29, x30, [sp], #32
   1ea68:	ret
   1ea6c:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1ea70:	bl	17420 <rl_clear_message@plt>
   1ea74:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ea78:	ldr	w8, [x19, #48]
   1ea7c:	ldr	x9, [x9, #3512]
   1ea80:	str	w8, [x9]
   1ea84:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ea88:	ldr	w8, [x19, #52]
   1ea8c:	ldr	x9, [x9, #3272]
   1ea90:	str	w8, [x9]
   1ea94:	bl	173f0 <rl_restore_prompt@plt>
   1ea98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ea9c:	ldr	x8, [x8, #2984]
   1eaa0:	mov	w0, #0x1                   	// #1
   1eaa4:	ldr	x9, [x8]
   1eaa8:	and	x9, x9, #0xfffffffffffffeff
   1eaac:	str	x9, [x8]
   1eab0:	b	1ea60 <_rl_nsearch_callback@@Base+0x7c>
   1eab4:	stp	x29, x30, [sp, #-48]!
   1eab8:	cmp	w1, #0x0
   1eabc:	mov	w8, #0x3                   	// #3
   1eac0:	stp	x20, x19, [sp, #32]
   1eac4:	csel	w20, w8, w1, lt  // lt = tstop
   1eac8:	sub	w8, w20, #0x3
   1eacc:	cmp	w8, #0x14
   1ead0:	mov	x19, x0
   1ead4:	str	x21, [sp, #16]
   1ead8:	mov	x29, sp
   1eadc:	b.hi	1eb1c <_rl_nsearch_callback@@Base+0x138>  // b.pmore
   1eae0:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   1eae4:	add	x9, x9, #0x47b
   1eae8:	adr	x10, 1eafc <_rl_nsearch_callback@@Base+0x118>
   1eaec:	ldrb	w11, [x9, x8]
   1eaf0:	add	x10, x10, x11, lsl #2
   1eaf4:	mov	w0, wzr
   1eaf8:	br	x10
   1eafc:	bl	17390 <rl_ding@plt>
   1eb00:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1eb04:	bl	17420 <rl_clear_message@plt>
   1eb08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eb0c:	ldr	w8, [x19, #48]
   1eb10:	ldr	x9, [x9, #3512]
   1eb14:	str	w8, [x9]
   1eb18:	b	1eb9c <_rl_nsearch_callback@@Base+0x1b8>
   1eb1c:	cmp	w20, #0x7f
   1eb20:	b.ne	1eb44 <_rl_nsearch_callback@@Base+0x160>  // b.any
   1eb24:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eb28:	ldr	x21, [x21, #3512]
   1eb2c:	ldr	w8, [x21]
   1eb30:	cbz	w8, 1eb8c <_rl_nsearch_callback@@Base+0x1a8>
   1eb34:	mov	w0, #0x1                   	// #1
   1eb38:	mov	w1, w20
   1eb3c:	bl	17670 <_rl_rubout_char@plt>
   1eb40:	b	1ebd8 <_rl_nsearch_callback@@Base+0x1f4>
   1eb44:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   1eb48:	cmp	x0, #0x2
   1eb4c:	b.cc	1ebcc <_rl_nsearch_callback@@Base+0x1e8>  // b.lo, b.ul, b.last
   1eb50:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eb54:	ldr	x8, [x8, #1896]
   1eb58:	ldr	w8, [x8]
   1eb5c:	cbnz	w8, 1ebcc <_rl_nsearch_callback@@Base+0x1e8>
   1eb60:	add	x0, x19, #0x70
   1eb64:	bl	16430 <rl_insert_text@plt>
   1eb68:	b	1ebd8 <_rl_nsearch_callback@@Base+0x1f4>
   1eb6c:	mov	w0, #0x1                   	// #1
   1eb70:	mov	w1, #0x15                  	// #21
   1eb74:	bl	16510 <rl_unix_line_discard@plt>
   1eb78:	b	1ebd8 <_rl_nsearch_callback@@Base+0x1f4>
   1eb7c:	mov	w0, #0x1                   	// #1
   1eb80:	mov	w1, #0x17                  	// #23
   1eb84:	bl	16ea0 <rl_unix_word_rubout@plt>
   1eb88:	b	1ebd8 <_rl_nsearch_callback@@Base+0x1f4>
   1eb8c:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1eb90:	bl	17420 <rl_clear_message@plt>
   1eb94:	ldr	w8, [x19, #48]
   1eb98:	str	w8, [x21]
   1eb9c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eba0:	ldr	w8, [x19, #52]
   1eba4:	ldr	x9, [x9, #3272]
   1eba8:	str	w8, [x9]
   1ebac:	bl	173f0 <rl_restore_prompt@plt>
   1ebb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ebb4:	ldr	x8, [x8, #2984]
   1ebb8:	mov	w0, #0xffffffff            	// #-1
   1ebbc:	ldr	x9, [x8]
   1ebc0:	and	x9, x9, #0xfffffffffffffeff
   1ebc4:	str	x9, [x8]
   1ebc8:	b	1ebec <_rl_nsearch_callback@@Base+0x208>
   1ebcc:	mov	w0, #0x1                   	// #1
   1ebd0:	mov	w1, w20
   1ebd4:	bl	16d40 <_rl_insert_char@plt>
   1ebd8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ebdc:	ldr	x8, [x8, #2664]
   1ebe0:	ldr	x8, [x8]
   1ebe4:	blr	x8
   1ebe8:	mov	w0, #0x1                   	// #1
   1ebec:	ldp	x20, x19, [sp, #32]
   1ebf0:	ldr	x21, [sp, #16]
   1ebf4:	ldp	x29, x30, [sp], #48
   1ebf8:	ret
   1ebfc:	stp	x29, x30, [sp, #-48]!
   1ec00:	str	x21, [sp, #16]
   1ec04:	stp	x20, x19, [sp, #32]
   1ec08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ec0c:	ldr	w8, [x0, #52]
   1ec10:	ldr	x9, [x9, #3512]
   1ec14:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ec18:	mov	x19, x0
   1ec1c:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   1ec20:	ldr	w9, [x9]
   1ec24:	ldr	x10, [x10, #3272]
   1ec28:	mov	x29, sp
   1ec2c:	str	w8, [x10]
   1ec30:	cbz	w9, 1ec78 <_rl_nsearch_callback@@Base+0x294>
   1ec34:	ldr	w8, [x19, #56]
   1ec38:	ldr	x0, [x20, #232]
   1ec3c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1ec40:	str	w8, [x9, #244]
   1ec44:	cbz	x0, 1ec4c <_rl_nsearch_callback@@Base+0x268>
   1ec48:	bl	171b0 <free@plt>
   1ec4c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ec50:	ldr	x21, [x21, #2480]
   1ec54:	ldr	x0, [x21]
   1ec58:	bl	16440 <strlen@plt>
   1ec5c:	add	x0, x0, #0x1
   1ec60:	bl	16bf0 <xmalloc@plt>
   1ec64:	ldr	x1, [x21]
   1ec68:	bl	17480 <strcpy@plt>
   1ec6c:	str	x0, [x20, #232]
   1ec70:	bl	17550 <rl_free_undo_list@plt>
   1ec74:	b	1ec80 <_rl_nsearch_callback@@Base+0x29c>
   1ec78:	ldr	x8, [x20, #232]
   1ec7c:	cbz	x8, 1eca4 <_rl_nsearch_callback@@Base+0x2c0>
   1ec80:	bl	173f0 <rl_restore_prompt@plt>
   1ec84:	ldr	w8, [x19, #4]
   1ec88:	ldr	x0, [x20, #232]
   1ec8c:	ldr	w1, [x19, #100]
   1ec90:	ldp	x20, x19, [sp, #32]
   1ec94:	ldr	x21, [sp, #16]
   1ec98:	and	w2, w8, #0x10
   1ec9c:	ldp	x29, x30, [sp], #48
   1eca0:	b	1e85c <rl_noninc_forward_search_again@@Base+0x74>
   1eca4:	bl	17390 <rl_ding@plt>
   1eca8:	bl	173f0 <rl_restore_prompt@plt>
   1ecac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ecb0:	ldr	x8, [x8, #2984]
   1ecb4:	ldr	x21, [sp, #16]
   1ecb8:	mov	w0, #0xffffffff            	// #-1
   1ecbc:	ldr	x9, [x8]
   1ecc0:	and	x9, x9, #0xfffffffffffffeff
   1ecc4:	str	x9, [x8]
   1ecc8:	ldp	x20, x19, [sp, #32]
   1eccc:	ldp	x29, x30, [sp], #48
   1ecd0:	ret

000000000001ecd4 <rl_history_search_forward@@Base>:
   1ecd4:	stp	x29, x30, [sp, #-32]!
   1ecd8:	stp	x20, x19, [sp, #16]
   1ecdc:	mov	x29, sp
   1ece0:	cbz	w0, 1ed4c <rl_history_search_forward@@Base+0x78>
   1ece4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ece8:	ldr	x8, [x8, #2072]
   1ecec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ecf0:	mov	w20, w1
   1ecf4:	mov	w19, w0
   1ecf8:	ldr	x8, [x8]
   1ecfc:	ldr	x9, [x9, #3152]
   1ed00:	cmp	x8, x9
   1ed04:	b.eq	1ed20 <rl_history_search_forward@@Base+0x4c>  // b.none
   1ed08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ed0c:	ldr	x9, [x9, #2328]
   1ed10:	cmp	x8, x9
   1ed14:	b.eq	1ed20 <rl_history_search_forward@@Base+0x4c>  // b.none
   1ed18:	mov	w0, #0x1                   	// #1
   1ed1c:	bl	1ee04 <rl_history_search_backward@@Base+0x98>
   1ed20:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1ed24:	ldr	w8, [x8, #240]
   1ed28:	cbz	w8, 1ed58 <rl_history_search_forward@@Base+0x84>
   1ed2c:	cmp	w19, #0x0
   1ed30:	cneg	w0, w19, mi  // mi = first
   1ed34:	cmp	w19, #0x1
   1ed38:	ldp	x20, x19, [sp, #16]
   1ed3c:	mov	w8, #0xffffffff            	// #-1
   1ed40:	cneg	w1, w8, ge  // ge = tcont
   1ed44:	ldp	x29, x30, [sp], #32
   1ed48:	b	1eecc <rl_history_search_backward@@Base+0x160>
   1ed4c:	ldp	x20, x19, [sp, #16]
   1ed50:	ldp	x29, x30, [sp], #32
   1ed54:	ret
   1ed58:	mov	w0, w19
   1ed5c:	mov	w1, w20
   1ed60:	ldp	x20, x19, [sp, #16]
   1ed64:	ldp	x29, x30, [sp], #32
   1ed68:	b	17330 <rl_get_next_history@plt>

000000000001ed6c <rl_history_search_backward@@Base>:
   1ed6c:	stp	x29, x30, [sp, #-32]!
   1ed70:	stp	x20, x19, [sp, #16]
   1ed74:	mov	x29, sp
   1ed78:	cbz	w0, 1ede4 <rl_history_search_backward@@Base+0x78>
   1ed7c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ed80:	ldr	x8, [x8, #2072]
   1ed84:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ed88:	mov	w20, w1
   1ed8c:	mov	w19, w0
   1ed90:	ldr	x8, [x8]
   1ed94:	ldr	x9, [x9, #3152]
   1ed98:	cmp	x8, x9
   1ed9c:	b.eq	1edb8 <rl_history_search_backward@@Base+0x4c>  // b.none
   1eda0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eda4:	ldr	x9, [x9, #2328]
   1eda8:	cmp	x8, x9
   1edac:	b.eq	1edb8 <rl_history_search_backward@@Base+0x4c>  // b.none
   1edb0:	mov	w0, #0x1                   	// #1
   1edb4:	bl	1ee04 <rl_history_search_backward@@Base+0x98>
   1edb8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1edbc:	ldr	w8, [x8, #240]
   1edc0:	cbz	w8, 1edf0 <rl_history_search_backward@@Base+0x84>
   1edc4:	cmp	w19, #0x0
   1edc8:	cneg	w0, w19, mi  // mi = first
   1edcc:	cmp	w19, #0x1
   1edd0:	ldp	x20, x19, [sp, #16]
   1edd4:	mov	w8, #0x1                   	// #1
   1edd8:	cneg	w1, w8, ge  // ge = tcont
   1eddc:	ldp	x29, x30, [sp], #32
   1ede0:	b	1eecc <rl_history_search_backward@@Base+0x160>
   1ede4:	ldp	x20, x19, [sp, #16]
   1ede8:	ldp	x29, x30, [sp], #32
   1edec:	ret
   1edf0:	mov	w0, w19
   1edf4:	mov	w1, w20
   1edf8:	ldp	x20, x19, [sp, #16]
   1edfc:	ldp	x29, x30, [sp], #32
   1ee00:	b	17030 <rl_get_previous_history@plt>
   1ee04:	stp	x29, x30, [sp, #-48]!
   1ee08:	str	x21, [sp, #16]
   1ee0c:	stp	x20, x19, [sp, #32]
   1ee10:	mov	x29, sp
   1ee14:	mov	w19, w0
   1ee18:	bl	165a0 <where_history@plt>
   1ee1c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ee20:	ldr	x20, [x20, #3512]
   1ee24:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1ee28:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   1ee2c:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   1ee30:	ldrsw	x8, [x20]
   1ee34:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   1ee38:	str	w0, [x9, #248]
   1ee3c:	str	w19, [x11, #252]
   1ee40:	str	w8, [x10, #240]
   1ee44:	str	xzr, [x12, #256]
   1ee48:	cbz	w8, 1eebc <rl_history_search_backward@@Base+0x150>
   1ee4c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1ee50:	ldr	w10, [x9, #264]
   1ee54:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1ee58:	sub	w10, w10, #0x2
   1ee5c:	cmp	w8, w10
   1ee60:	b.lt	1ee78 <rl_history_search_backward@@Base+0x10c>  // b.tstop
   1ee64:	ldr	x0, [x21, #272]
   1ee68:	add	x1, x8, #0x2
   1ee6c:	str	w1, [x9, #264]
   1ee70:	bl	16a50 <xrealloc@plt>
   1ee74:	str	x0, [x21, #272]
   1ee78:	ldr	x8, [x21, #272]
   1ee7c:	tbnz	w19, #0, 1ee88 <rl_history_search_backward@@Base+0x11c>
   1ee80:	mov	w19, wzr
   1ee84:	b	1ee94 <rl_history_search_backward@@Base+0x128>
   1ee88:	mov	w9, #0x5e                  	// #94
   1ee8c:	mov	w19, #0x1                   	// #1
   1ee90:	strb	w9, [x8]
   1ee94:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ee98:	ldr	x9, [x9, #2480]
   1ee9c:	ldrsw	x2, [x20]
   1eea0:	add	x0, x8, x19
   1eea4:	ldr	x1, [x9]
   1eea8:	bl	17730 <strncpy@plt>
   1eeac:	ldrsw	x8, [x20]
   1eeb0:	ldr	x9, [x21, #272]
   1eeb4:	add	x8, x8, x19
   1eeb8:	strb	wzr, [x9, x8]
   1eebc:	ldp	x20, x19, [sp, #32]
   1eec0:	ldr	x21, [sp, #16]
   1eec4:	ldp	x29, x30, [sp], #48
   1eec8:	b	17800 <_rl_free_saved_history_line@plt>
   1eecc:	stp	x29, x30, [sp, #-96]!
   1eed0:	str	x27, [sp, #16]
   1eed4:	stp	x26, x25, [sp, #32]
   1eed8:	stp	x24, x23, [sp, #48]
   1eedc:	stp	x22, x21, [sp, #64]
   1eee0:	stp	x20, x19, [sp, #80]
   1eee4:	mov	x29, sp
   1eee8:	mov	w19, w1
   1eeec:	mov	w20, w0
   1eef0:	bl	178d0 <rl_maybe_save_line@plt>
   1eef4:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1eef8:	ldr	x23, [x23, #2656]
   1eefc:	cbz	w20, 1f020 <rl_history_search_backward@@Base+0x2b4>
   1ef00:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ef04:	ldr	x24, [x24, #2808]
   1ef08:	mov	x21, xzr
   1ef0c:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   1ef10:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   1ef14:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   1ef18:	b	1ef2c <rl_history_search_backward@@Base+0x1c0>
   1ef1c:	ldr	x22, [x21]
   1ef20:	subs	w20, w20, #0x1
   1ef24:	str	x22, [x27, #256]
   1ef28:	b.eq	1efb8 <rl_history_search_backward@@Base+0x24c>  // b.none
   1ef2c:	ldr	w8, [x24]
   1ef30:	cbz	w8, 1ef3c <rl_history_search_backward@@Base+0x1d0>
   1ef34:	ldr	w0, [x24]
   1ef38:	bl	17460 <_rl_signal_handler@plt>
   1ef3c:	ldr	w8, [x26, #248]
   1ef40:	ldr	x0, [x25, #272]
   1ef44:	add	x4, x29, #0x1c
   1ef48:	mov	w2, w19
   1ef4c:	add	w1, w8, w19
   1ef50:	mov	w3, wzr
   1ef54:	bl	1f1ac <rl_history_substr_search_backward@@Base+0x98>
   1ef58:	cmn	w0, #0x1
   1ef5c:	b.eq	1efb4 <rl_history_search_backward@@Base+0x248>  // b.none
   1ef60:	str	w0, [x26, #248]
   1ef64:	bl	165a0 <where_history@plt>
   1ef68:	ldr	w8, [x26, #248]
   1ef6c:	mov	w22, w0
   1ef70:	mov	w0, w8
   1ef74:	bl	173a0 <history_set_pos@plt>
   1ef78:	bl	16a60 <current_history@plt>
   1ef7c:	mov	x21, x0
   1ef80:	mov	w0, w22
   1ef84:	bl	173a0 <history_set_pos@plt>
   1ef88:	ldr	x0, [x27, #256]
   1ef8c:	cbz	x0, 1ef1c <rl_history_search_backward@@Base+0x1b0>
   1ef90:	ldr	x22, [x21]
   1ef94:	ldrb	w8, [x0]
   1ef98:	ldrb	w9, [x22]
   1ef9c:	cmp	w8, w9
   1efa0:	b.ne	1ef20 <rl_history_search_backward@@Base+0x1b4>  // b.any
   1efa4:	mov	x1, x22
   1efa8:	bl	170a0 <strcmp@plt>
   1efac:	cbz	w0, 1ef2c <rl_history_search_backward@@Base+0x1c0>
   1efb0:	b	1ef20 <rl_history_search_backward@@Base+0x1b4>
   1efb4:	cbz	x21, 1f020 <rl_history_search_backward@@Base+0x2b4>
   1efb8:	ldr	x0, [x21]
   1efbc:	ldr	w2, [x23]
   1efc0:	mov	w1, wzr
   1efc4:	bl	175d0 <_rl_replace_text@plt>
   1efc8:	mov	w0, #0x1                   	// #1
   1efcc:	bl	16840 <_rl_fix_point@plt>
   1efd0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1efd4:	ldr	x8, [x8, #3416]
   1efd8:	ldr	w8, [x8]
   1efdc:	cbnz	w8, 1efe4 <rl_history_search_backward@@Base+0x278>
   1efe0:	bl	17550 <rl_free_undo_list@plt>
   1efe4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1efe8:	ldr	x19, [x19, #3672]
   1efec:	ldr	x0, [x19]
   1eff0:	cbz	x0, 1eff8 <rl_history_search_backward@@Base+0x28c>
   1eff4:	bl	16910 <_rl_free_history_entry@plt>
   1eff8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1effc:	ldrb	w8, [x8, #252]
   1f000:	str	xzr, [x19]
   1f004:	tbnz	w8, #0, 1f038 <rl_history_search_backward@@Base+0x2cc>
   1f008:	ldr	w8, [x29, #28]
   1f00c:	ldr	w9, [x23]
   1f010:	mov	w0, wzr
   1f014:	cmp	w8, #0x0
   1f018:	csel	w8, w8, w9, ge  // ge = tcont
   1f01c:	b	1f044 <rl_history_search_backward@@Base+0x2d8>
   1f020:	bl	16dd0 <rl_maybe_unsave_line@plt>
   1f024:	bl	17390 <rl_ding@plt>
   1f028:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f02c:	ldr	w8, [x8, #240]
   1f030:	mov	w0, #0x1                   	// #1
   1f034:	b	1f044 <rl_history_search_backward@@Base+0x2d8>
   1f038:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f03c:	ldr	w8, [x8, #240]
   1f040:	mov	w0, wzr
   1f044:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f048:	ldr	w9, [x23]
   1f04c:	ldr	x10, [x10, #3512]
   1f050:	str	w8, [x10]
   1f054:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f058:	ldr	x8, [x8, #3272]
   1f05c:	ldp	x20, x19, [sp, #80]
   1f060:	ldp	x22, x21, [sp, #64]
   1f064:	ldp	x24, x23, [sp, #48]
   1f068:	ldp	x26, x25, [sp, #32]
   1f06c:	ldr	x27, [sp, #16]
   1f070:	str	w9, [x8]
   1f074:	ldp	x29, x30, [sp], #96
   1f078:	ret

000000000001f07c <rl_history_substr_search_forward@@Base>:
   1f07c:	stp	x29, x30, [sp, #-32]!
   1f080:	stp	x20, x19, [sp, #16]
   1f084:	mov	x29, sp
   1f088:	cbz	w0, 1f0f4 <rl_history_substr_search_forward@@Base+0x78>
   1f08c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f090:	ldr	x8, [x8, #2072]
   1f094:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f098:	mov	w20, w1
   1f09c:	mov	w19, w0
   1f0a0:	ldr	x8, [x8]
   1f0a4:	ldr	x9, [x9, #3032]
   1f0a8:	cmp	x8, x9
   1f0ac:	b.eq	1f0c8 <rl_history_substr_search_forward@@Base+0x4c>  // b.none
   1f0b0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f0b4:	ldr	x9, [x9, #4064]
   1f0b8:	cmp	x8, x9
   1f0bc:	b.eq	1f0c8 <rl_history_substr_search_forward@@Base+0x4c>  // b.none
   1f0c0:	mov	w0, wzr
   1f0c4:	bl	1ee04 <rl_history_search_backward@@Base+0x98>
   1f0c8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f0cc:	ldr	w8, [x8, #240]
   1f0d0:	cbz	w8, 1f100 <rl_history_substr_search_forward@@Base+0x84>
   1f0d4:	cmp	w19, #0x0
   1f0d8:	cneg	w0, w19, mi  // mi = first
   1f0dc:	cmp	w19, #0x1
   1f0e0:	ldp	x20, x19, [sp, #16]
   1f0e4:	mov	w8, #0xffffffff            	// #-1
   1f0e8:	cneg	w1, w8, ge  // ge = tcont
   1f0ec:	ldp	x29, x30, [sp], #32
   1f0f0:	b	1eecc <rl_history_search_backward@@Base+0x160>
   1f0f4:	ldp	x20, x19, [sp, #16]
   1f0f8:	ldp	x29, x30, [sp], #32
   1f0fc:	ret
   1f100:	mov	w0, w19
   1f104:	mov	w1, w20
   1f108:	ldp	x20, x19, [sp, #16]
   1f10c:	ldp	x29, x30, [sp], #32
   1f110:	b	17330 <rl_get_next_history@plt>

000000000001f114 <rl_history_substr_search_backward@@Base>:
   1f114:	stp	x29, x30, [sp, #-32]!
   1f118:	stp	x20, x19, [sp, #16]
   1f11c:	mov	x29, sp
   1f120:	cbz	w0, 1f18c <rl_history_substr_search_backward@@Base+0x78>
   1f124:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f128:	ldr	x8, [x8, #2072]
   1f12c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f130:	mov	w20, w1
   1f134:	mov	w19, w0
   1f138:	ldr	x8, [x8]
   1f13c:	ldr	x9, [x9, #3032]
   1f140:	cmp	x8, x9
   1f144:	b.eq	1f160 <rl_history_substr_search_backward@@Base+0x4c>  // b.none
   1f148:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f14c:	ldr	x9, [x9, #4064]
   1f150:	cmp	x8, x9
   1f154:	b.eq	1f160 <rl_history_substr_search_backward@@Base+0x4c>  // b.none
   1f158:	mov	w0, wzr
   1f15c:	bl	1ee04 <rl_history_search_backward@@Base+0x98>
   1f160:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f164:	ldr	w8, [x8, #240]
   1f168:	cbz	w8, 1f198 <rl_history_substr_search_backward@@Base+0x84>
   1f16c:	cmp	w19, #0x0
   1f170:	cneg	w0, w19, mi  // mi = first
   1f174:	cmp	w19, #0x1
   1f178:	ldp	x20, x19, [sp, #16]
   1f17c:	mov	w8, #0x1                   	// #1
   1f180:	cneg	w1, w8, ge  // ge = tcont
   1f184:	ldp	x29, x30, [sp], #32
   1f188:	b	1eecc <rl_history_search_backward@@Base+0x160>
   1f18c:	ldp	x20, x19, [sp, #16]
   1f190:	ldp	x29, x30, [sp], #32
   1f194:	ret
   1f198:	mov	w0, w19
   1f19c:	mov	w1, w20
   1f1a0:	ldp	x20, x19, [sp, #16]
   1f1a4:	ldp	x29, x30, [sp], #32
   1f1a8:	b	17030 <rl_get_previous_history@plt>
   1f1ac:	stp	x29, x30, [sp, #-64]!
   1f1b0:	stp	x24, x23, [sp, #16]
   1f1b4:	stp	x22, x21, [sp, #32]
   1f1b8:	stp	x20, x19, [sp, #48]
   1f1bc:	mov	x29, sp
   1f1c0:	tbnz	w1, #31, 1f220 <rl_history_substr_search_backward@@Base+0x10c>
   1f1c4:	mov	x20, x4
   1f1c8:	mov	w23, w3
   1f1cc:	mov	w21, w2
   1f1d0:	mov	w24, w1
   1f1d4:	mov	x22, x0
   1f1d8:	bl	165a0 <where_history@plt>
   1f1dc:	mov	w19, w0
   1f1e0:	mov	w0, w24
   1f1e4:	bl	173a0 <history_set_pos@plt>
   1f1e8:	cbz	w0, 1f220 <rl_history_substr_search_backward@@Base+0x10c>
   1f1ec:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f1f0:	ldr	x24, [x24, #2984]
   1f1f4:	ldr	x8, [x24]
   1f1f8:	orr	x8, x8, #0x200
   1f1fc:	str	x8, [x24]
   1f200:	ldrb	w8, [x22]
   1f204:	cmp	w8, #0x5e
   1f208:	tbnz	w23, #4, 1f228 <rl_history_substr_search_backward@@Base+0x114>
   1f20c:	b.ne	1f23c <rl_history_substr_search_backward@@Base+0x128>  // b.any
   1f210:	add	x0, x22, #0x1
   1f214:	mov	w1, w21
   1f218:	bl	16f60 <history_search_prefix@plt>
   1f21c:	b	1f248 <rl_history_substr_search_backward@@Base+0x134>
   1f220:	mov	w20, #0xffffffff            	// #-1
   1f224:	b	1f27c <rl_history_substr_search_backward@@Base+0x168>
   1f228:	cset	w2, eq  // eq = none
   1f22c:	cinc	x0, x22, eq  // eq = none
   1f230:	mov	w1, w21
   1f234:	bl	16420 <_hs_history_patsearch@plt>
   1f238:	b	1f248 <rl_history_substr_search_backward@@Base+0x134>
   1f23c:	mov	x0, x22
   1f240:	mov	w1, w21
   1f244:	bl	17040 <history_search@plt>
   1f248:	ldr	x8, [x24]
   1f24c:	and	x8, x8, #0xfffffffffffffdff
   1f250:	str	x8, [x24]
   1f254:	cbz	x20, 1f25c <rl_history_substr_search_backward@@Base+0x148>
   1f258:	str	w0, [x20]
   1f25c:	cmn	w0, #0x1
   1f260:	b.eq	1f270 <rl_history_substr_search_backward@@Base+0x15c>  // b.none
   1f264:	bl	165a0 <where_history@plt>
   1f268:	mov	w20, w0
   1f26c:	b	1f274 <rl_history_substr_search_backward@@Base+0x160>
   1f270:	mov	w20, #0xffffffff            	// #-1
   1f274:	mov	w0, w19
   1f278:	bl	173a0 <history_set_pos@plt>
   1f27c:	mov	w0, w20
   1f280:	ldp	x20, x19, [sp, #48]
   1f284:	ldp	x22, x21, [sp, #32]
   1f288:	ldp	x24, x23, [sp, #16]
   1f28c:	ldp	x29, x30, [sp], #64
   1f290:	ret

000000000001f294 <rl_prep_terminal@@Base>:
   1f294:	sub	sp, sp, #0x80
   1f298:	stp	x22, x21, [sp, #96]
   1f29c:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   1f2a0:	ldr	w8, [x22, #280]
   1f2a4:	stp	x29, x30, [sp, #64]
   1f2a8:	str	x23, [sp, #80]
   1f2ac:	stp	x20, x19, [sp, #112]
   1f2b0:	add	x29, sp, #0x40
   1f2b4:	cbnz	w8, 1f7ac <rl_prep_terminal@@Base+0x518>
   1f2b8:	mov	w21, w0
   1f2bc:	bl	163f0 <_rl_block_sigint@plt>
   1f2c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f2c4:	ldr	x8, [x8, #3176]
   1f2c8:	ldr	x0, [x8]
   1f2cc:	cbnz	x0, 1f2dc <rl_prep_terminal@@Base+0x48>
   1f2d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f2d4:	ldr	x8, [x8, #2800]
   1f2d8:	ldr	x0, [x8]
   1f2dc:	bl	16860 <fileno@plt>
   1f2e0:	mov	x2, sp
   1f2e4:	mov	w1, #0x5413                	// #21523
   1f2e8:	mov	w19, w0
   1f2ec:	bl	17990 <ioctl@plt>
   1f2f0:	cbnz	w0, 1f304 <rl_prep_terminal@@Base+0x70>
   1f2f4:	mov	x2, sp
   1f2f8:	mov	w1, #0x5414                	// #21524
   1f2fc:	mov	w0, w19
   1f300:	bl	17990 <ioctl@plt>
   1f304:	bl	177f0 <__errno_location@plt>
   1f308:	mov	x20, x0
   1f30c:	str	wzr, [x0]
   1f310:	mov	x1, sp
   1f314:	mov	w0, w19
   1f318:	bl	16830 <tcgetattr@plt>
   1f31c:	tbz	w0, #31, 1f358 <rl_prep_terminal@@Base+0xc4>
   1f320:	ldr	w8, [x20]
   1f324:	cmp	w8, #0x4
   1f328:	b.eq	1f310 <rl_prep_terminal@@Base+0x7c>  // b.none
   1f32c:	cmp	w8, #0x16
   1f330:	b.eq	1f344 <rl_prep_terminal@@Base+0xb0>  // b.none
   1f334:	cmp	w8, #0x19
   1f338:	b.eq	1f344 <rl_prep_terminal@@Base+0xb0>  // b.none
   1f33c:	cmp	w8, #0x5f
   1f340:	b.ne	1f7a8 <rl_prep_terminal@@Base+0x514>  // b.any
   1f344:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f348:	ldr	x8, [x8, #2944]
   1f34c:	mov	w9, #0x1                   	// #1
   1f350:	str	w9, [x8]
   1f354:	b	1f7a8 <rl_prep_terminal@@Base+0x514>
   1f358:	ldr	w8, [sp, #12]
   1f35c:	tbz	w8, #12, 1f378 <rl_prep_terminal@@Base+0xe4>
   1f360:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   1f364:	add	x0, x0, #0x4a3
   1f368:	bl	176c0 <_rl_errmsg@plt>
   1f36c:	ldr	w8, [sp, #12]
   1f370:	and	w8, w8, #0xffffefff
   1f374:	str	w8, [sp, #12]
   1f378:	ldp	q0, q1, [sp]
   1f37c:	ldr	q2, [sp, #32]
   1f380:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   1f384:	add	x9, x9, #0x11c
   1f388:	stp	q0, q1, [x9]
   1f38c:	str	q2, [x9, #32]
   1f390:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f394:	ldur	q0, [sp, #44]
   1f398:	ldr	x10, [x10, #3816]
   1f39c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f3a0:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   1f3a4:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   1f3a8:	ldr	w11, [x10]
   1f3ac:	ldr	x23, [x23, #2984]
   1f3b0:	stur	q0, [x9, #44]
   1f3b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f3b8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f3bc:	ldr	x9, [x9, #3416]
   1f3c0:	ldr	x10, [x10, #1992]
   1f3c4:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   1f3c8:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   1f3cc:	cbz	w11, 1f3f0 <rl_prep_terminal@@Base+0x15c>
   1f3d0:	ldr	w16, [x9]
   1f3d4:	cbz	w16, 1f3f8 <rl_prep_terminal@@Base+0x164>
   1f3d8:	ldr	x16, [x23]
   1f3dc:	tbz	w16, #18, 1f498 <rl_prep_terminal@@Base+0x204>
   1f3e0:	ldrb	w18, [x15, #468]
   1f3e4:	ldr	x17, [x10]
   1f3e8:	cbnz	x18, 1f410 <rl_prep_terminal@@Base+0x17c>
   1f3ec:	b	1f42c <rl_prep_terminal@@Base+0x198>
   1f3f0:	ldr	x16, [x23]
   1f3f4:	b	1f498 <rl_prep_terminal@@Base+0x204>
   1f3f8:	ldr	x16, [x23]
   1f3fc:	tbz	w16, #18, 1f498 <rl_prep_terminal@@Base+0x204>
   1f400:	adrp	x17, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f404:	ldrb	w18, [x15, #468]
   1f408:	ldr	x17, [x17, #4032]
   1f40c:	cbz	x18, 1f42c <rl_prep_terminal@@Base+0x198>
   1f410:	lsl	x0, x18, #4
   1f414:	ldrb	w0, [x17, x0]
   1f418:	cbnz	w0, 1f42c <rl_prep_terminal@@Base+0x198>
   1f41c:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f420:	ldr	x0, [x0, #2552]
   1f424:	add	x18, x17, x18, lsl #4
   1f428:	str	x0, [x18, #8]
   1f42c:	ldrb	w18, [x13, #476]
   1f430:	cbz	x18, 1f450 <rl_prep_terminal@@Base+0x1bc>
   1f434:	lsl	x0, x18, #4
   1f438:	ldrb	w0, [x17, x0]
   1f43c:	cbnz	w0, 1f450 <rl_prep_terminal@@Base+0x1bc>
   1f440:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f444:	ldr	x0, [x0, #2552]
   1f448:	add	x18, x17, x18, lsl #4
   1f44c:	str	x0, [x18, #8]
   1f450:	ldrb	w18, [x12, #480]
   1f454:	cbz	x18, 1f474 <rl_prep_terminal@@Base+0x1e0>
   1f458:	lsl	x0, x18, #4
   1f45c:	ldrb	w0, [x17, x0]
   1f460:	cbnz	w0, 1f474 <rl_prep_terminal@@Base+0x1e0>
   1f464:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f468:	ldr	x0, [x0, #2552]
   1f46c:	add	x18, x17, x18, lsl #4
   1f470:	str	x0, [x18, #8]
   1f474:	ldrb	w18, [x14, #472]
   1f478:	cbz	x18, 1f498 <rl_prep_terminal@@Base+0x204>
   1f47c:	lsl	x0, x18, #4
   1f480:	ldrb	w0, [x17, x0]
   1f484:	cbnz	w0, 1f498 <rl_prep_terminal@@Base+0x204>
   1f488:	add	x17, x17, x18, lsl #4
   1f48c:	adrp	x18, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f490:	ldr	x18, [x18, #2552]
   1f494:	str	x18, [x17, #8]
   1f498:	adrp	x17, 58000 <_rl_vimvcxt@@Base>
   1f49c:	add	x17, x17, #0x12d
   1f4a0:	ldrb	w18, [x17, #2]
   1f4a4:	ldrb	w0, [x17, #14]
   1f4a8:	orr	x16, x16, #0x40000
   1f4ac:	strb	w18, [x15, #468]
   1f4b0:	ldrb	w15, [x17, #3]
   1f4b4:	strb	w0, [x14, #472]
   1f4b8:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f4bc:	ldr	x14, [x14, #1920]
   1f4c0:	ldrb	w18, [x17]
   1f4c4:	strb	w15, [x13, #476]
   1f4c8:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f4cc:	adrp	x15, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f4d0:	ldr	x13, [x13, #3776]
   1f4d4:	ldr	x15, [x15, #2168]
   1f4d8:	str	w18, [x14]
   1f4dc:	ldrb	w14, [x17, #1]
   1f4e0:	ldrb	w18, [x17, #10]
   1f4e4:	ldrb	w17, [x17, #15]
   1f4e8:	str	x16, [x23]
   1f4ec:	str	w14, [x13]
   1f4f0:	str	w18, [x15]
   1f4f4:	strb	w17, [x12, #480]
   1f4f8:	cbz	w11, 1f648 <rl_prep_terminal@@Base+0x3b4>
   1f4fc:	ldr	w11, [x9]
   1f500:	cbz	w11, 1f598 <rl_prep_terminal@@Base+0x304>
   1f504:	ldr	x11, [x10]
   1f508:	ldrb	w15, [sp, #19]
   1f50c:	ldrb	w14, [sp, #20]
   1f510:	ldrb	w12, [sp, #31]
   1f514:	ldrb	w13, [sp, #32]
   1f518:	cbz	x15, 1f538 <rl_prep_terminal@@Base+0x2a4>
   1f51c:	lsl	x16, x15, #4
   1f520:	ldrb	w16, [x11, x16]
   1f524:	cbnz	w16, 1f538 <rl_prep_terminal@@Base+0x2a4>
   1f528:	adrp	x16, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f52c:	ldr	x16, [x16, #2360]
   1f530:	add	x15, x11, x15, lsl #4
   1f534:	str	x16, [x15, #8]
   1f538:	cbz	w14, 1f558 <rl_prep_terminal@@Base+0x2c4>
   1f53c:	lsl	x15, x14, #4
   1f540:	ldrb	w15, [x11, x15]
   1f544:	cbnz	w15, 1f558 <rl_prep_terminal@@Base+0x2c4>
   1f548:	adrp	x15, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f54c:	ldr	x15, [x15, #2040]
   1f550:	add	x14, x11, x14, lsl #4
   1f554:	str	x15, [x14, #8]
   1f558:	cbz	w13, 1f578 <rl_prep_terminal@@Base+0x2e4>
   1f55c:	lsl	x14, x13, #4
   1f560:	ldrb	w14, [x11, x14]
   1f564:	cbnz	w14, 1f578 <rl_prep_terminal@@Base+0x2e4>
   1f568:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f56c:	ldr	x14, [x14, #3232]
   1f570:	add	x13, x11, x13, lsl #4
   1f574:	str	x14, [x13, #8]
   1f578:	cbz	w12, 1f648 <rl_prep_terminal@@Base+0x3b4>
   1f57c:	lsl	x13, x12, #4
   1f580:	ldrb	w13, [x11, x13]
   1f584:	cbnz	w13, 1f648 <rl_prep_terminal@@Base+0x3b4>
   1f588:	add	x11, x11, x12, lsl #4
   1f58c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f590:	ldr	x12, [x12, #2864]
   1f594:	b	1f644 <rl_prep_terminal@@Base+0x3b0>
   1f598:	ldrb	w14, [sp, #19]
   1f59c:	ldrb	w13, [sp, #20]
   1f5a0:	ldrb	w11, [sp, #31]
   1f5a4:	ldrb	w12, [sp, #32]
   1f5a8:	cbz	x14, 1f5d0 <rl_prep_terminal@@Base+0x33c>
   1f5ac:	adrp	x15, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f5b0:	ldr	x15, [x15, #4032]
   1f5b4:	lsl	x16, x14, #4
   1f5b8:	ldrb	w16, [x15, x16]
   1f5bc:	cbnz	w16, 1f5d0 <rl_prep_terminal@@Base+0x33c>
   1f5c0:	add	x14, x15, x14, lsl #4
   1f5c4:	adrp	x15, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f5c8:	ldr	x15, [x15, #2360]
   1f5cc:	str	x15, [x14, #8]
   1f5d0:	cbz	w13, 1f5f8 <rl_prep_terminal@@Base+0x364>
   1f5d4:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f5d8:	ldr	x14, [x14, #4032]
   1f5dc:	lsl	x15, x13, #4
   1f5e0:	ldrb	w15, [x14, x15]
   1f5e4:	cbnz	w15, 1f5f8 <rl_prep_terminal@@Base+0x364>
   1f5e8:	add	x13, x14, x13, lsl #4
   1f5ec:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f5f0:	ldr	x14, [x14, #2040]
   1f5f4:	str	x14, [x13, #8]
   1f5f8:	cbz	w12, 1f620 <rl_prep_terminal@@Base+0x38c>
   1f5fc:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f600:	ldr	x13, [x13, #4032]
   1f604:	lsl	x14, x12, #4
   1f608:	ldrb	w14, [x13, x14]
   1f60c:	cbnz	w14, 1f620 <rl_prep_terminal@@Base+0x38c>
   1f610:	add	x12, x13, x12, lsl #4
   1f614:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f618:	ldr	x13, [x13, #3232]
   1f61c:	str	x13, [x12, #8]
   1f620:	cbz	w11, 1f648 <rl_prep_terminal@@Base+0x3b4>
   1f624:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f628:	ldr	x12, [x12, #4032]
   1f62c:	lsl	x13, x11, #4
   1f630:	ldrb	w13, [x12, x13]
   1f634:	cbnz	w13, 1f648 <rl_prep_terminal@@Base+0x3b4>
   1f638:	add	x11, x12, x11, lsl #4
   1f63c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f640:	ldr	x12, [x12, #3400]
   1f644:	str	x12, [x11, #8]
   1f648:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   1f64c:	add	x11, x11, #0x128
   1f650:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f654:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f658:	ldr	x13, [x13, #2944]
   1f65c:	ldr	x14, [x14, #2312]
   1f660:	ldr	w15, [x11]
   1f664:	ldrb	w12, [x11, #9]
   1f668:	mov	w16, #0xfffffff5            	// #-11
   1f66c:	and	w11, w8, w16
   1f670:	and	w16, w15, #0x8
   1f674:	and	w15, w15, #0x200
   1f678:	str	w16, [x13]
   1f67c:	str	w15, [x14]
   1f680:	str	w11, [sp, #12]
   1f684:	cbz	w12, 1f694 <rl_prep_terminal@@Base+0x400>
   1f688:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f68c:	ldr	x13, [x13, #1912]
   1f690:	str	w12, [x13]
   1f694:	ldr	w12, [sp]
   1f698:	cbnz	w21, 1f6ac <rl_prep_terminal@@Base+0x418>
   1f69c:	ldr	w13, [sp, #8]
   1f6a0:	and	w13, w13, #0x30
   1f6a4:	cmp	w13, #0x30
   1f6a8:	b.ne	1f6b4 <rl_prep_terminal@@Base+0x420>  // b.any
   1f6ac:	and	w12, w12, #0xffffffcf
   1f6b0:	str	w12, [sp]
   1f6b4:	mov	w13, #0xfffffebf            	// #-321
   1f6b8:	orr	w11, w11, #0x1
   1f6bc:	mov	w14, #0x100                 	// #256
   1f6c0:	and	w12, w12, w13
   1f6c4:	str	w12, [sp]
   1f6c8:	str	w11, [sp, #12]
   1f6cc:	strh	w14, [sp, #22]
   1f6d0:	tbz	w8, #12, 1f6e0 <rl_prep_terminal@@Base+0x44c>
   1f6d4:	mov	w8, #0xffffeff5            	// #-4107
   1f6d8:	and	w8, w11, w8
   1f6dc:	str	w8, [sp, #12]
   1f6e0:	ldrb	w8, [sp, #30]
   1f6e4:	strb	wzr, [sp, #32]
   1f6e8:	cbz	x8, 1f728 <rl_prep_terminal@@Base+0x494>
   1f6ec:	ldr	w9, [x9]
   1f6f0:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f6f4:	ldr	x10, [x10]
   1f6f8:	ldr	x11, [x11, #4032]
   1f6fc:	cmp	w9, #0x0
   1f700:	lsl	x8, x8, #4
   1f704:	csel	x9, x11, x10, eq  // eq = none
   1f708:	ldrb	w8, [x9, x8]
   1f70c:	cbnz	w8, 1f728 <rl_prep_terminal@@Base+0x494>
   1f710:	strb	wzr, [sp, #30]
   1f714:	b	1f728 <rl_prep_terminal@@Base+0x494>
   1f718:	ldr	w8, [x20]
   1f71c:	cmp	w8, #0x4
   1f720:	b.ne	1f7a8 <rl_prep_terminal@@Base+0x514>  // b.any
   1f724:	str	wzr, [x20]
   1f728:	mov	x2, sp
   1f72c:	mov	w1, #0x1                   	// #1
   1f730:	mov	w0, w19
   1f734:	bl	17570 <tcsetattr@plt>
   1f738:	tbnz	w0, #31, 1f718 <rl_prep_terminal@@Base+0x484>
   1f73c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f740:	ldr	x8, [x8, #2840]
   1f744:	ldr	w8, [x8]
   1f748:	cbz	w8, 1f754 <rl_prep_terminal@@Base+0x4c0>
   1f74c:	mov	w0, #0x1                   	// #1
   1f750:	bl	16d20 <_rl_control_keypad@plt>
   1f754:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f758:	ldr	x8, [x8, #3608]
   1f75c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f760:	ldr	w8, [x8]
   1f764:	ldr	x19, [x19, #1928]
   1f768:	cbz	w8, 1f78c <rl_prep_terminal@@Base+0x4f8>
   1f76c:	ldr	x3, [x19]
   1f770:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   1f774:	add	x0, x0, #0x490
   1f778:	mov	w1, #0x8                   	// #8
   1f77c:	mov	w2, #0x1                   	// #1
   1f780:	bl	173e0 <fwrite@plt>
   1f784:	mov	w20, #0x3                   	// #3
   1f788:	b	1f790 <rl_prep_terminal@@Base+0x4fc>
   1f78c:	mov	w20, #0x1                   	// #1
   1f790:	ldr	x0, [x19]
   1f794:	bl	17430 <fflush@plt>
   1f798:	ldr	x8, [x23]
   1f79c:	str	w20, [x22, #280]
   1f7a0:	orr	x8, x8, #0x4
   1f7a4:	str	x8, [x23]
   1f7a8:	bl	17240 <_rl_release_sigint@plt>
   1f7ac:	ldp	x20, x19, [sp, #112]
   1f7b0:	ldp	x22, x21, [sp, #96]
   1f7b4:	ldr	x23, [sp, #80]
   1f7b8:	ldp	x29, x30, [sp, #64]
   1f7bc:	add	sp, sp, #0x80
   1f7c0:	ret

000000000001f7c4 <rl_deprep_terminal@@Base>:
   1f7c4:	stp	x29, x30, [sp, #-48]!
   1f7c8:	stp	x22, x21, [sp, #16]
   1f7cc:	stp	x20, x19, [sp, #32]
   1f7d0:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   1f7d4:	ldr	w8, [x22, #280]
   1f7d8:	mov	x29, sp
   1f7dc:	cbz	w8, 1f8e0 <rl_deprep_terminal@@Base+0x11c>
   1f7e0:	bl	163f0 <_rl_block_sigint@plt>
   1f7e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f7e8:	ldr	x8, [x8, #3176]
   1f7ec:	ldr	x0, [x8]
   1f7f0:	cbnz	x0, 1f800 <rl_deprep_terminal@@Base+0x3c>
   1f7f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f7f8:	ldr	x8, [x8, #2800]
   1f7fc:	ldr	x0, [x8]
   1f800:	bl	16860 <fileno@plt>
   1f804:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f808:	ldrb	w8, [x22, #280]
   1f80c:	ldr	x20, [x20, #1928]
   1f810:	mov	w19, w0
   1f814:	tbz	w8, #1, 1f84c <rl_deprep_terminal@@Base+0x88>
   1f818:	ldr	x3, [x20]
   1f81c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   1f820:	add	x0, x0, #0x499
   1f824:	mov	w1, #0x9                   	// #9
   1f828:	mov	w2, #0x1                   	// #1
   1f82c:	bl	173e0 <fwrite@plt>
   1f830:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f834:	ldr	x8, [x8, #3920]
   1f838:	ldr	w8, [x8]
   1f83c:	cbz	w8, 1f84c <rl_deprep_terminal@@Base+0x88>
   1f840:	ldr	x1, [x20]
   1f844:	mov	w0, #0xa                   	// #10
   1f848:	bl	166d0 <fputc@plt>
   1f84c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f850:	ldr	x8, [x8, #2840]
   1f854:	ldr	w8, [x8]
   1f858:	cbz	w8, 1f864 <rl_deprep_terminal@@Base+0xa0>
   1f85c:	mov	w0, wzr
   1f860:	bl	16d20 <_rl_control_keypad@plt>
   1f864:	ldr	x0, [x20]
   1f868:	bl	17430 <fflush@plt>
   1f86c:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   1f870:	add	x2, x2, #0x11c
   1f874:	mov	w1, #0x1                   	// #1
   1f878:	mov	w0, w19
   1f87c:	bl	17570 <tcsetattr@plt>
   1f880:	tbz	w0, #31, 1f8b8 <rl_deprep_terminal@@Base+0xf4>
   1f884:	bl	177f0 <__errno_location@plt>
   1f888:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1f88c:	mov	x20, x0
   1f890:	add	x21, x21, #0x11c
   1f894:	ldr	w8, [x20]
   1f898:	cmp	w8, #0x4
   1f89c:	b.ne	1f8d0 <rl_deprep_terminal@@Base+0x10c>  // b.any
   1f8a0:	mov	w1, #0x1                   	// #1
   1f8a4:	mov	w0, w19
   1f8a8:	mov	x2, x21
   1f8ac:	str	wzr, [x20]
   1f8b0:	bl	17570 <tcsetattr@plt>
   1f8b4:	tbnz	w0, #31, 1f894 <rl_deprep_terminal@@Base+0xd0>
   1f8b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f8bc:	ldr	x8, [x8, #2984]
   1f8c0:	str	wzr, [x22, #280]
   1f8c4:	ldr	x9, [x8]
   1f8c8:	and	x9, x9, #0xfffffffffffffffb
   1f8cc:	str	x9, [x8]
   1f8d0:	ldp	x20, x19, [sp, #32]
   1f8d4:	ldp	x22, x21, [sp, #16]
   1f8d8:	ldp	x29, x30, [sp], #48
   1f8dc:	b	17240 <_rl_release_sigint@plt>
   1f8e0:	ldp	x20, x19, [sp, #32]
   1f8e4:	ldp	x22, x21, [sp, #16]
   1f8e8:	ldp	x29, x30, [sp], #48
   1f8ec:	ret

000000000001f8f0 <rl_tty_unset_default_bindings@@Base>:
   1f8f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f8f4:	ldr	x8, [x8, #2984]
   1f8f8:	ldrb	w8, [x8, #2]
   1f8fc:	tbz	w8, #2, 1f990 <rl_tty_unset_default_bindings@@Base+0xa0>
   1f900:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f904:	ldrb	w8, [x8, #468]
   1f908:	cbz	x8, 1f928 <rl_tty_unset_default_bindings@@Base+0x38>
   1f90c:	lsl	x9, x8, #4
   1f910:	ldrb	w9, [x0, x9]
   1f914:	cbnz	w9, 1f928 <rl_tty_unset_default_bindings@@Base+0x38>
   1f918:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f91c:	ldr	x9, [x9, #2552]
   1f920:	add	x8, x0, x8, lsl #4
   1f924:	str	x9, [x8, #8]
   1f928:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f92c:	ldrb	w8, [x8, #476]
   1f930:	cbz	x8, 1f950 <rl_tty_unset_default_bindings@@Base+0x60>
   1f934:	lsl	x9, x8, #4
   1f938:	ldrb	w9, [x0, x9]
   1f93c:	cbnz	w9, 1f950 <rl_tty_unset_default_bindings@@Base+0x60>
   1f940:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f944:	ldr	x9, [x9, #2552]
   1f948:	add	x8, x0, x8, lsl #4
   1f94c:	str	x9, [x8, #8]
   1f950:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f954:	ldrb	w8, [x8, #480]
   1f958:	cbz	x8, 1f978 <rl_tty_unset_default_bindings@@Base+0x88>
   1f95c:	lsl	x9, x8, #4
   1f960:	ldrb	w9, [x0, x9]
   1f964:	cbnz	w9, 1f978 <rl_tty_unset_default_bindings@@Base+0x88>
   1f968:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f96c:	ldr	x9, [x9, #2552]
   1f970:	add	x8, x0, x8, lsl #4
   1f974:	str	x9, [x8, #8]
   1f978:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1f97c:	ldrb	w8, [x8, #472]
   1f980:	cbz	x8, 1f990 <rl_tty_unset_default_bindings@@Base+0xa0>
   1f984:	lsl	x9, x8, #4
   1f988:	ldrb	w9, [x0, x9]
   1f98c:	cbz	w9, 1f994 <rl_tty_unset_default_bindings@@Base+0xa4>
   1f990:	ret
   1f994:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f998:	ldr	x9, [x9, #2552]
   1f99c:	add	x8, x0, x8, lsl #4
   1f9a0:	str	x9, [x8, #8]
   1f9a4:	ret

000000000001f9a8 <rl_tty_set_echoing@@Base>:
   1f9a8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f9ac:	ldr	x9, [x9, #2944]
   1f9b0:	ldr	w8, [x9]
   1f9b4:	str	w0, [x9]
   1f9b8:	mov	w0, w8
   1f9bc:	ret

000000000001f9c0 <rl_restart_output@@Base>:
   1f9c0:	stp	x29, x30, [sp, #-16]!
   1f9c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f9c8:	ldr	x8, [x8, #1928]
   1f9cc:	mov	x29, sp
   1f9d0:	ldr	x0, [x8]
   1f9d4:	bl	16860 <fileno@plt>
   1f9d8:	mov	w1, #0x1                   	// #1
   1f9dc:	bl	17980 <tcflow@plt>
   1f9e0:	mov	w0, wzr
   1f9e4:	ldp	x29, x30, [sp], #16
   1f9e8:	ret

000000000001f9ec <rl_stop_output@@Base>:
   1f9ec:	stp	x29, x30, [sp, #-16]!
   1f9f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1f9f4:	ldr	x8, [x8, #3176]
   1f9f8:	mov	x29, sp
   1f9fc:	ldr	x0, [x8]
   1fa00:	bl	16860 <fileno@plt>
   1fa04:	mov	w1, wzr
   1fa08:	bl	17980 <tcflow@plt>
   1fa0c:	mov	w0, wzr
   1fa10:	ldp	x29, x30, [sp], #16
   1fa14:	ret

000000000001fa18 <rltty_set_default_bindings@@Base>:
   1fa18:	sub	sp, sp, #0x70
   1fa1c:	stp	x29, x30, [sp, #64]
   1fa20:	str	x21, [sp, #80]
   1fa24:	stp	x20, x19, [sp, #96]
   1fa28:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fa2c:	ldr	x8, [x8, #3176]
   1fa30:	mov	x19, x0
   1fa34:	add	x29, sp, #0x40
   1fa38:	ldr	x8, [x8]
   1fa3c:	mov	x0, x8
   1fa40:	bl	16860 <fileno@plt>
   1fa44:	mov	x2, sp
   1fa48:	mov	w1, #0x5413                	// #21523
   1fa4c:	mov	w20, w0
   1fa50:	bl	17990 <ioctl@plt>
   1fa54:	cbnz	w0, 1fa68 <rltty_set_default_bindings@@Base+0x50>
   1fa58:	mov	x2, sp
   1fa5c:	mov	w1, #0x5414                	// #21524
   1fa60:	mov	w0, w20
   1fa64:	bl	17990 <ioctl@plt>
   1fa68:	bl	177f0 <__errno_location@plt>
   1fa6c:	mov	x21, x0
   1fa70:	str	wzr, [x0]
   1fa74:	mov	x1, sp
   1fa78:	mov	w0, w20
   1fa7c:	bl	16830 <tcgetattr@plt>
   1fa80:	tbz	w0, #31, 1faa4 <rltty_set_default_bindings@@Base+0x8c>
   1fa84:	ldr	w8, [x21]
   1fa88:	cmp	w8, #0x4
   1fa8c:	b.eq	1fa74 <rltty_set_default_bindings@@Base+0x5c>  // b.none
   1fa90:	ldp	x20, x19, [sp, #96]
   1fa94:	ldr	x21, [sp, #80]
   1fa98:	ldp	x29, x30, [sp, #64]
   1fa9c:	add	sp, sp, #0x70
   1faa0:	ret
   1faa4:	ldrb	w8, [sp, #13]
   1faa8:	tbz	w8, #4, 1fac4 <rltty_set_default_bindings@@Base+0xac>
   1faac:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   1fab0:	add	x0, x0, #0x4a3
   1fab4:	bl	176c0 <_rl_errmsg@plt>
   1fab8:	ldr	w8, [sp, #12]
   1fabc:	and	w8, w8, #0xffffefff
   1fac0:	str	w8, [sp, #12]
   1fac4:	ldrb	w11, [sp, #19]
   1fac8:	ldrb	w10, [sp, #20]
   1facc:	ldrb	w8, [sp, #31]
   1fad0:	ldrb	w9, [sp, #32]
   1fad4:	cbz	x11, 1faf4 <rltty_set_default_bindings@@Base+0xdc>
   1fad8:	lsl	x12, x11, #4
   1fadc:	ldrb	w12, [x19, x12]
   1fae0:	cbnz	w12, 1faf4 <rltty_set_default_bindings@@Base+0xdc>
   1fae4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fae8:	ldr	x12, [x12, #2360]
   1faec:	add	x11, x19, x11, lsl #4
   1faf0:	str	x12, [x11, #8]
   1faf4:	cbz	w10, 1fb14 <rltty_set_default_bindings@@Base+0xfc>
   1faf8:	lsl	x11, x10, #4
   1fafc:	ldrb	w11, [x19, x11]
   1fb00:	cbnz	w11, 1fb14 <rltty_set_default_bindings@@Base+0xfc>
   1fb04:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fb08:	ldr	x11, [x11, #2040]
   1fb0c:	add	x10, x19, x10, lsl #4
   1fb10:	str	x11, [x10, #8]
   1fb14:	cbz	w9, 1fb34 <rltty_set_default_bindings@@Base+0x11c>
   1fb18:	lsl	x10, x9, #4
   1fb1c:	ldrb	w10, [x19, x10]
   1fb20:	cbnz	w10, 1fb34 <rltty_set_default_bindings@@Base+0x11c>
   1fb24:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fb28:	ldr	x10, [x10, #3232]
   1fb2c:	add	x9, x19, x9, lsl #4
   1fb30:	str	x10, [x9, #8]
   1fb34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fb38:	ldr	x9, [x9, #3416]
   1fb3c:	ldr	w9, [x9]
   1fb40:	cbz	w9, 1fb60 <rltty_set_default_bindings@@Base+0x148>
   1fb44:	cbz	w8, 1fa90 <rltty_set_default_bindings@@Base+0x78>
   1fb48:	lsl	x9, x8, #4
   1fb4c:	ldrb	w9, [x19, x9]
   1fb50:	cbnz	w9, 1fa90 <rltty_set_default_bindings@@Base+0x78>
   1fb54:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fb58:	ldr	x9, [x9, #2864]
   1fb5c:	b	1fb78 <rltty_set_default_bindings@@Base+0x160>
   1fb60:	cbz	w8, 1fa90 <rltty_set_default_bindings@@Base+0x78>
   1fb64:	lsl	x9, x8, #4
   1fb68:	ldrb	w9, [x19, x9]
   1fb6c:	cbnz	w9, 1fa90 <rltty_set_default_bindings@@Base+0x78>
   1fb70:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fb74:	ldr	x9, [x9, #3400]
   1fb78:	add	x8, x19, x8, lsl #4
   1fb7c:	str	x9, [x8, #8]
   1fb80:	b	1fa90 <rltty_set_default_bindings@@Base+0x78>

000000000001fb84 <rl_tty_set_default_bindings@@Base>:
   1fb84:	b	16580 <rltty_set_default_bindings@plt>

000000000001fb88 <_rl_disable_tty_signals@@Base>:
   1fb88:	stp	x29, x30, [sp, #-64]!
   1fb8c:	stp	x22, x21, [sp, #32]
   1fb90:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   1fb94:	ldrb	w8, [x22, #344]
   1fb98:	stp	x24, x23, [sp, #16]
   1fb9c:	stp	x20, x19, [sp, #48]
   1fba0:	mov	x29, sp
   1fba4:	tbz	w8, #0, 1fbb0 <_rl_disable_tty_signals@@Base+0x28>
   1fba8:	mov	w0, wzr
   1fbac:	b	1fcb0 <_rl_disable_tty_signals@@Base+0x128>
   1fbb0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fbb4:	ldr	x23, [x23, #3176]
   1fbb8:	ldr	x0, [x23]
   1fbbc:	bl	16860 <fileno@plt>
   1fbc0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   1fbc4:	mov	w20, w0
   1fbc8:	add	x19, x19, #0x15c
   1fbcc:	mov	w0, w20
   1fbd0:	mov	x1, x19
   1fbd4:	bl	16830 <tcgetattr@plt>
   1fbd8:	tbz	w0, #31, 1fbf4 <_rl_disable_tty_signals@@Base+0x6c>
   1fbdc:	bl	177f0 <__errno_location@plt>
   1fbe0:	ldr	w8, [x0]
   1fbe4:	cmp	w8, #0x4
   1fbe8:	b.eq	1fbcc <_rl_disable_tty_signals@@Base+0x44>  // b.none
   1fbec:	mov	w0, #0xffffffff            	// #-1
   1fbf0:	b	1fcb0 <_rl_disable_tty_signals@@Base+0x128>
   1fbf4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1fbf8:	ldrb	w8, [x8, #361]
   1fbfc:	tbz	w8, #4, 1fc1c <_rl_disable_tty_signals@@Base+0x94>
   1fc00:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   1fc04:	add	x0, x0, #0x4a3
   1fc08:	bl	176c0 <_rl_errmsg@plt>
   1fc0c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1fc10:	ldr	w9, [x8, #360]
   1fc14:	and	w9, w9, #0xffffefff
   1fc18:	str	w9, [x8, #360]
   1fc1c:	ldp	q0, q1, [x19]
   1fc20:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1fc24:	add	x21, x21, #0x198
   1fc28:	ldr	q2, [x19, #32]
   1fc2c:	stp	q0, q1, [x21]
   1fc30:	ldr	w8, [x21, #12]
   1fc34:	ldr	w9, [x21]
   1fc38:	ldur	q0, [x19, #44]
   1fc3c:	ldr	x0, [x23]
   1fc40:	and	w8, w8, #0xfffffffe
   1fc44:	str	w8, [x21, #12]
   1fc48:	and	w8, w9, #0xfffffbff
   1fc4c:	str	q2, [x21, #32]
   1fc50:	str	w8, [x21]
   1fc54:	stur	q0, [x21, #44]
   1fc58:	bl	16860 <fileno@plt>
   1fc5c:	mov	w1, #0x1                   	// #1
   1fc60:	mov	x2, x21
   1fc64:	mov	w20, w0
   1fc68:	mov	w24, #0x1                   	// #1
   1fc6c:	bl	17570 <tcsetattr@plt>
   1fc70:	tbz	w0, #31, 1fca8 <_rl_disable_tty_signals@@Base+0x120>
   1fc74:	bl	177f0 <__errno_location@plt>
   1fc78:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1fc7c:	mov	x19, x0
   1fc80:	add	x21, x21, #0x198
   1fc84:	ldr	w8, [x19]
   1fc88:	cmp	w8, #0x4
   1fc8c:	b.ne	1fcc4 <_rl_disable_tty_signals@@Base+0x13c>  // b.any
   1fc90:	mov	w1, #0x1                   	// #1
   1fc94:	mov	w0, w20
   1fc98:	mov	x2, x21
   1fc9c:	str	wzr, [x19]
   1fca0:	bl	17570 <tcsetattr@plt>
   1fca4:	tbnz	w0, #31, 1fc84 <_rl_disable_tty_signals@@Base+0xfc>
   1fca8:	mov	w0, wzr
   1fcac:	strb	w24, [x22, #344]
   1fcb0:	ldp	x20, x19, [sp, #48]
   1fcb4:	ldp	x22, x21, [sp, #32]
   1fcb8:	ldp	x24, x23, [sp, #16]
   1fcbc:	ldp	x29, x30, [sp], #64
   1fcc0:	ret
   1fcc4:	ldr	x0, [x23]
   1fcc8:	bl	16860 <fileno@plt>
   1fccc:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   1fcd0:	add	x2, x2, #0x15c
   1fcd4:	mov	w1, #0x1                   	// #1
   1fcd8:	mov	w20, w0
   1fcdc:	bl	17570 <tcsetattr@plt>
   1fce0:	tbz	w0, #31, 1fba8 <_rl_disable_tty_signals@@Base+0x20>
   1fce4:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1fce8:	add	x21, x21, #0x15c
   1fcec:	ldr	w8, [x19]
   1fcf0:	cmp	w8, #0x4
   1fcf4:	b.ne	1fbec <_rl_disable_tty_signals@@Base+0x64>  // b.any
   1fcf8:	mov	w1, #0x1                   	// #1
   1fcfc:	mov	w0, w20
   1fd00:	mov	x2, x21
   1fd04:	str	wzr, [x19]
   1fd08:	bl	17570 <tcsetattr@plt>
   1fd0c:	mov	w8, w0
   1fd10:	mov	w0, wzr
   1fd14:	tbnz	w8, #31, 1fcec <_rl_disable_tty_signals@@Base+0x164>
   1fd18:	b	1fcb0 <_rl_disable_tty_signals@@Base+0x128>

000000000001fd1c <_rl_restore_tty_signals@@Base>:
   1fd1c:	stp	x29, x30, [sp, #-48]!
   1fd20:	stp	x22, x21, [sp, #16]
   1fd24:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   1fd28:	ldrb	w8, [x22, #344]
   1fd2c:	stp	x20, x19, [sp, #32]
   1fd30:	mov	x29, sp
   1fd34:	cmp	w8, #0x1
   1fd38:	b.ne	1fda4 <_rl_restore_tty_signals@@Base+0x88>  // b.any
   1fd3c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fd40:	ldr	x8, [x8, #3176]
   1fd44:	ldr	x0, [x8]
   1fd48:	bl	16860 <fileno@plt>
   1fd4c:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   1fd50:	add	x2, x2, #0x15c
   1fd54:	mov	w1, #0x1                   	// #1
   1fd58:	mov	w19, w0
   1fd5c:	bl	17570 <tcsetattr@plt>
   1fd60:	tbz	w0, #31, 1fd98 <_rl_restore_tty_signals@@Base+0x7c>
   1fd64:	bl	177f0 <__errno_location@plt>
   1fd68:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   1fd6c:	mov	x20, x0
   1fd70:	add	x21, x21, #0x15c
   1fd74:	ldr	w8, [x20]
   1fd78:	cmp	w8, #0x4
   1fd7c:	b.ne	1fdb8 <_rl_restore_tty_signals@@Base+0x9c>  // b.any
   1fd80:	mov	w1, #0x1                   	// #1
   1fd84:	mov	w0, w19
   1fd88:	mov	x2, x21
   1fd8c:	str	wzr, [x20]
   1fd90:	bl	17570 <tcsetattr@plt>
   1fd94:	tbnz	w0, #31, 1fd74 <_rl_restore_tty_signals@@Base+0x58>
   1fd98:	mov	w0, wzr
   1fd9c:	strb	wzr, [x22, #344]
   1fda0:	b	1fda8 <_rl_restore_tty_signals@@Base+0x8c>
   1fda4:	mov	w0, wzr
   1fda8:	ldp	x20, x19, [sp, #32]
   1fdac:	ldp	x22, x21, [sp, #16]
   1fdb0:	ldp	x29, x30, [sp], #48
   1fdb4:	ret
   1fdb8:	mov	w0, #0xffffffff            	// #-1
   1fdbc:	b	1fda8 <_rl_restore_tty_signals@@Base+0x8c>
   1fdc0:	stp	x29, x30, [sp, #-48]!
   1fdc4:	stp	x22, x21, [sp, #16]
   1fdc8:	stp	x20, x19, [sp, #32]
   1fdcc:	mov	x29, sp
   1fdd0:	mov	x19, x2
   1fdd4:	mov	x21, x0
   1fdd8:	bl	16440 <strlen@plt>
   1fddc:	add	x0, x0, #0x2
   1fde0:	bl	16bf0 <xmalloc@plt>
   1fde4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fde8:	ldr	x22, [x22, #2160]
   1fdec:	mov	x20, x0
   1fdf0:	mov	x1, x21
   1fdf4:	ldr	x8, [x22]
   1fdf8:	ldrb	w8, [x8]
   1fdfc:	strb	w8, [x0], #1
   1fe00:	bl	17480 <strcpy@plt>
   1fe04:	cbz	x19, 1fe14 <_rl_restore_tty_signals@@Base+0xf8>
   1fe08:	ldr	x8, [x22]
   1fe0c:	ldrb	w8, [x8]
   1fe10:	strb	w8, [x19]
   1fe14:	mov	x0, x20
   1fe18:	ldp	x20, x19, [sp, #32]
   1fe1c:	ldp	x22, x21, [sp, #16]
   1fe20:	ldp	x29, x30, [sp], #48
   1fe24:	ret

000000000001fe28 <rl_complete@@Base>:
   1fe28:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe2c:	ldr	x8, [x8, #3120]
   1fe30:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe34:	ldr	w8, [x8]
   1fe38:	ldr	x9, [x9, #3336]
   1fe3c:	str	w1, [x9]
   1fe40:	cbz	w8, 1fe48 <rl_complete@@Base+0x20>
   1fe44:	b	16d40 <_rl_insert_char@plt>
   1fe48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe4c:	ldr	x8, [x8, #2072]
   1fe50:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe54:	ldr	x8, [x8]
   1fe58:	ldr	x9, [x9, #2288]
   1fe5c:	cmp	x8, x9
   1fe60:	b.ne	1fe78 <rl_complete@@Base+0x50>  // b.any
   1fe64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   1fe68:	ldr	w8, [x8, #696]
   1fe6c:	cbnz	w8, 1fe78 <rl_complete@@Base+0x50>
   1fe70:	mov	w0, #0x3f                  	// #63
   1fe74:	b	16620 <rl_complete_internal@plt>
   1fe78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe7c:	ldr	x8, [x8, #3368]
   1fe80:	ldr	w8, [x8]
   1fe84:	cbz	w8, 1fe90 <rl_complete@@Base+0x68>
   1fe88:	mov	w0, #0x21                  	// #33
   1fe8c:	b	16620 <rl_complete_internal@plt>
   1fe90:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fe94:	ldr	x8, [x8, #3464]
   1fe98:	ldr	w8, [x8]
   1fe9c:	cbz	w8, 1fea8 <rl_complete@@Base+0x80>
   1fea0:	mov	w0, #0x40                  	// #64
   1fea4:	b	16620 <rl_complete_internal@plt>
   1fea8:	mov	w0, #0x9                   	// #9
   1feac:	b	16620 <rl_complete_internal@plt>

000000000001feb0 <rl_complete_internal@@Base>:
   1feb0:	sub	sp, sp, #0x80
   1feb4:	stp	x29, x30, [sp, #32]
   1feb8:	stp	x28, x27, [sp, #48]
   1febc:	stp	x26, x25, [sp, #64]
   1fec0:	stp	x24, x23, [sp, #80]
   1fec4:	stp	x22, x21, [sp, #96]
   1fec8:	stp	x20, x19, [sp, #112]
   1fecc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fed0:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fed4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fed8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fedc:	ldr	x11, [x11, #2984]
   1fee0:	ldr	x28, [x28, #3768]
   1fee4:	ldr	x12, [x12, #1904]
   1fee8:	ldr	x8, [x8, #1960]
   1feec:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1fef0:	ldr	x10, [x10, #3320]
   1fef4:	mov	w9, #0x20                  	// #32
   1fef8:	str	w9, [x8]
   1fefc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff00:	ldr	w10, [x10]
   1ff04:	ldr	x9, [x9, #2720]
   1ff08:	mov	w8, #0x1                   	// #1
   1ff0c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff10:	mov	w21, w0
   1ff14:	str	w10, [x9]
   1ff18:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff1c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff20:	ldr	x9, [x9, #2872]
   1ff24:	ldr	x10, [x10, #2432]
   1ff28:	str	w8, [x12]
   1ff2c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff30:	ldr	x8, [x8, #3984]
   1ff34:	str	w0, [x9]
   1ff38:	str	wzr, [x10]
   1ff3c:	ldr	x9, [x11]
   1ff40:	ldr	x19, [x19, #2480]
   1ff44:	str	wzr, [x8]
   1ff48:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   1ff4c:	orr	x8, x9, #0x4000
   1ff50:	ldr	x0, [x19]
   1ff54:	add	x29, sp, #0x20
   1ff58:	str	x8, [x11]
   1ff5c:	str	wzr, [x28]
   1ff60:	strb	wzr, [x26, #700]
   1ff64:	cbz	x0, 1ff84 <rl_complete_internal@@Base+0xd4>
   1ff68:	bl	16440 <strlen@plt>
   1ff6c:	add	x0, x0, #0x1
   1ff70:	bl	16bf0 <xmalloc@plt>
   1ff74:	ldr	x1, [x19]
   1ff78:	mov	x19, x0
   1ff7c:	bl	17480 <strcpy@plt>
   1ff80:	b	1ff88 <rl_complete_internal@@Base+0xd8>
   1ff84:	mov	x19, xzr
   1ff88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff8c:	ldr	x8, [x8, #3376]
   1ff90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff94:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   1ff98:	ldr	x9, [x9, #2424]
   1ff9c:	ldr	x27, [x27, #3512]
   1ffa0:	ldr	x8, [x8]
   1ffa4:	stur	wzr, [x29, #-12]
   1ffa8:	str	wzr, [sp, #16]
   1ffac:	ldr	w24, [x27]
   1ffb0:	cmp	x8, #0x0
   1ffb4:	csel	x23, x9, x8, eq  // eq = none
   1ffb8:	strb	wzr, [sp, #12]
   1ffbc:	cbz	w24, 1ffdc <rl_complete_internal@@Base+0x12c>
   1ffc0:	add	x0, sp, #0x10
   1ffc4:	sub	x1, x29, #0xc
   1ffc8:	bl	173d0 <_rl_find_completion_word@plt>
   1ffcc:	ldr	w22, [x27]
   1ffd0:	mov	w25, w0
   1ffd4:	strb	w0, [sp, #12]
   1ffd8:	b	1ffe4 <rl_complete_internal@@Base+0x134>
   1ffdc:	mov	w25, wzr
   1ffe0:	mov	w22, wzr
   1ffe4:	mov	w0, w22
   1ffe8:	mov	w1, w24
   1ffec:	str	w24, [x27]
   1fff0:	bl	178e0 <rl_copy_text@plt>
   1fff4:	ldr	w4, [sp, #16]
   1fff8:	and	w5, w25, #0xff
   1fffc:	mov	w1, w22
   20000:	mov	w2, w24
   20004:	mov	x3, x23
   20008:	mov	x20, x0
   2000c:	bl	21d44 <rl_filename_completion_function@@Base+0x85c>
   20010:	mov	x25, x0
   20014:	stur	x0, [x29, #-8]
   20018:	cbz	x0, 2003c <rl_complete_internal@@Base+0x18c>
   2001c:	ldr	x1, [x25]
   20020:	mov	x0, x20
   20024:	bl	170a0 <strcmp@plt>
   20028:	cmp	w0, #0x0
   2002c:	cset	w23, ne  // ne = any
   20030:	cmp	w21, #0x40
   20034:	b.ne	20048 <rl_complete_internal@@Base+0x198>  // b.any
   20038:	b	20050 <rl_complete_internal@@Base+0x1a0>
   2003c:	mov	w23, wzr
   20040:	cmp	w21, #0x40
   20044:	b.eq	20050 <rl_complete_internal@@Base+0x1a0>  // b.none
   20048:	cmp	w21, #0x21
   2004c:	b.ne	2005c <rl_complete_internal@@Base+0x1ac>  // b.any
   20050:	mov	x0, x20
   20054:	bl	16440 <strlen@plt>
   20058:	mov	x24, x0
   2005c:	mov	x0, x20
   20060:	bl	169f0 <xfree@plt>
   20064:	cbz	x25, 201a0 <rl_complete_internal@@Base+0x2f0>
   20068:	ldr	w1, [x28]
   2006c:	sub	x0, x29, #0x8
   20070:	bl	21e60 <rl_filename_completion_function@@Base+0x978>
   20074:	cbz	w0, 201a0 <rl_complete_internal@@Base+0x2f0>
   20078:	sub	w8, w21, #0x21
   2007c:	cmp	w8, #0x1f
   20080:	b.hi	201ec <rl_complete_internal@@Base+0x33c>  // b.pmore
   20084:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   20088:	add	x9, x9, #0x4c8
   2008c:	adr	x10, 2009c <rl_complete_internal@@Base+0x1ec>
   20090:	ldrb	w11, [x9, x8]
   20094:	add	x10, x10, x11, lsl #2
   20098:	br	x10
   2009c:	ldur	x20, [x29, #-8]
   200a0:	bl	16400 <rl_begin_undo_group@plt>
   200a4:	cbz	w22, 200d0 <rl_complete_internal@@Base+0x220>
   200a8:	ldrb	w8, [sp, #12]
   200ac:	cbz	w8, 200d0 <rl_complete_internal@@Base+0x220>
   200b0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   200b4:	ldr	x9, [x9, #2480]
   200b8:	sxtw	x10, w22
   200bc:	sub	x10, x10, #0x1
   200c0:	ldr	x9, [x9]
   200c4:	ldrb	w9, [x9, x10]
   200c8:	cmp	w9, w8
   200cc:	csel	w22, w10, w22, eq  // eq = none
   200d0:	ldr	w1, [x27]
   200d4:	mov	w0, w22
   200d8:	bl	171c0 <rl_delete_text@plt>
   200dc:	str	w22, [x27]
   200e0:	ldr	x21, [x20, #8]
   200e4:	cbz	x21, 202e0 <rl_complete_internal@@Base+0x430>
   200e8:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   200ec:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   200f0:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   200f4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   200f8:	ldr	x24, [x24, #2160]
   200fc:	ldr	x25, [x25, #3592]
   20100:	ldr	x26, [x26, #3080]
   20104:	ldr	x27, [x27, #1904]
   20108:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   2010c:	add	x23, x20, #0x10
   20110:	add	x22, x22, #0xf67
   20114:	b	20120 <rl_complete_internal@@Base+0x270>
   20118:	ldr	x21, [x23], #8
   2011c:	cbz	x21, 20388 <rl_complete_internal@@Base+0x4d8>
   20120:	ldr	x0, [x24]
   20124:	cbz	x0, 20178 <rl_complete_internal@@Base+0x2c8>
   20128:	ldr	w8, [x28]
   2012c:	cbz	w8, 20178 <rl_complete_internal@@Base+0x2c8>
   20130:	ldr	w8, [x27]
   20134:	cbz	w8, 20178 <rl_complete_internal@@Base+0x2c8>
   20138:	ldrb	w1, [sp, #12]
   2013c:	cbz	w1, 20148 <rl_complete_internal@@Base+0x298>
   20140:	bl	17380 <strchr@plt>
   20144:	cbz	x0, 20178 <rl_complete_internal@@Base+0x2c8>
   20148:	ldr	x1, [x25]
   2014c:	cbz	x1, 20178 <rl_complete_internal@@Base+0x2c8>
   20150:	mov	x0, x21
   20154:	bl	16be0 <strpbrk@plt>
   20158:	cbz	x0, 20178 <rl_complete_internal@@Base+0x2c8>
   2015c:	ldr	x8, [x26]
   20160:	cbz	x8, 20178 <rl_complete_internal@@Base+0x2c8>
   20164:	add	x2, sp, #0xc
   20168:	mov	w1, #0x1                   	// #1
   2016c:	mov	x0, x21
   20170:	blr	x8
   20174:	mov	x21, x0
   20178:	mov	x0, x21
   2017c:	bl	16430 <rl_insert_text@plt>
   20180:	mov	x0, x22
   20184:	bl	16430 <rl_insert_text@plt>
   20188:	ldur	x8, [x23, #-8]
   2018c:	cmp	x21, x8
   20190:	b.eq	20118 <rl_complete_internal@@Base+0x268>  // b.none
   20194:	mov	x0, x21
   20198:	bl	169f0 <xfree@plt>
   2019c:	b	20118 <rl_complete_internal@@Base+0x268>
   201a0:	bl	17390 <rl_ding@plt>
   201a4:	cbz	x19, 201b0 <rl_complete_internal@@Base+0x300>
   201a8:	mov	x0, x19
   201ac:	bl	171b0 <free@plt>
   201b0:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   201b4:	ldr	x12, [x12, #2984]
   201b8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   201bc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   201c0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   201c4:	ldr	x9, [x12]
   201c8:	ldr	x10, [x10, #3584]
   201cc:	ldr	x11, [x11, #2376]
   201d0:	str	wzr, [x8, #696]
   201d4:	and	x8, x9, #0xffffffffffffbfff
   201d8:	mov	w0, wzr
   201dc:	str	wzr, [x10]
   201e0:	str	x8, [x12]
   201e4:	str	wzr, [x11]
   201e8:	b	20528 <rl_complete_internal@@Base+0x678>
   201ec:	cmp	w21, #0x9
   201f0:	b.ne	2024c <rl_complete_internal@@Base+0x39c>  // b.any
   201f4:	ldur	x20, [x29, #-8]
   201f8:	cmp	w21, #0x9
   201fc:	ldr	x25, [x20]
   20200:	ldrb	w8, [x25]
   20204:	b.ne	20224 <rl_complete_internal@@Base+0x374>  // b.any
   20208:	cbz	w8, 20440 <rl_complete_internal@@Base+0x590>
   2020c:	ldr	x8, [x20, #8]
   20210:	add	x3, sp, #0xc
   20214:	cmp	x8, #0x0
   20218:	mov	w8, #0x1                   	// #1
   2021c:	cinc	w2, w8, ne  // ne = any
   20220:	b	20434 <rl_complete_internal@@Base+0x584>
   20224:	cbz	w8, 20440 <rl_complete_internal@@Base+0x590>
   20228:	ldr	x8, [x20, #8]
   2022c:	cbz	x8, 2042c <rl_complete_internal@@Base+0x57c>
   20230:	mov	x0, x25
   20234:	bl	16440 <strlen@plt>
   20238:	cmp	w24, w0
   2023c:	b.gt	20440 <rl_complete_internal@@Base+0x590>
   20240:	add	x3, sp, #0xc
   20244:	mov	w2, #0x2                   	// #2
   20248:	b	20434 <rl_complete_internal@@Base+0x584>
   2024c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   20250:	add	x0, x0, #0x568
   20254:	mov	w1, w21
   20258:	bl	17200 <_rl_ttymsg@plt>
   2025c:	bl	17390 <rl_ding@plt>
   20260:	cbz	x19, 2026c <rl_complete_internal@@Base+0x3bc>
   20264:	mov	x0, x19
   20268:	bl	171b0 <free@plt>
   2026c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20270:	ldr	x9, [x9, #2984]
   20274:	ldur	x19, [x29, #-8]
   20278:	ldr	x8, [x9]
   2027c:	and	x8, x8, #0xffffffffffffbfff
   20280:	str	x8, [x9]
   20284:	cbz	x19, 202a8 <rl_complete_internal@@Base+0x3f8>
   20288:	ldr	x0, [x19]
   2028c:	cbz	x0, 202a0 <rl_complete_internal@@Base+0x3f0>
   20290:	add	x20, x19, #0x8
   20294:	bl	169f0 <xfree@plt>
   20298:	ldr	x0, [x20], #8
   2029c:	cbnz	x0, 20294 <rl_complete_internal@@Base+0x3e4>
   202a0:	mov	x0, x19
   202a4:	bl	169f0 <xfree@plt>
   202a8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   202ac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   202b0:	ldr	x8, [x8, #3584]
   202b4:	ldr	x9, [x9, #2376]
   202b8:	mov	w0, #0x1                   	// #1
   202bc:	str	wzr, [x8]
   202c0:	str	wzr, [x9]
   202c4:	b	20528 <rl_complete_internal@@Base+0x678>
   202c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   202cc:	ldr	x8, [x8, #2456]
   202d0:	ldr	x8, [x8]
   202d4:	cbz	x8, 20390 <rl_complete_internal@@Base+0x4e0>
   202d8:	ldur	x20, [x29, #-8]
   202dc:	b	203b8 <rl_complete_internal@@Base+0x508>
   202e0:	ldr	x21, [x20]
   202e4:	cbz	x21, 20360 <rl_complete_internal@@Base+0x4b0>
   202e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   202ec:	ldr	x8, [x8, #2160]
   202f0:	ldr	x0, [x8]
   202f4:	cbz	x0, 20360 <rl_complete_internal@@Base+0x4b0>
   202f8:	ldr	w8, [x28]
   202fc:	cbz	w8, 20360 <rl_complete_internal@@Base+0x4b0>
   20300:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20304:	ldr	x8, [x8, #1904]
   20308:	ldr	w8, [x8]
   2030c:	cbz	w8, 20360 <rl_complete_internal@@Base+0x4b0>
   20310:	ldrb	w1, [sp, #12]
   20314:	cbz	w1, 20320 <rl_complete_internal@@Base+0x470>
   20318:	bl	17380 <strchr@plt>
   2031c:	cbz	x0, 20360 <rl_complete_internal@@Base+0x4b0>
   20320:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20324:	ldr	x8, [x8, #3592]
   20328:	ldr	x1, [x8]
   2032c:	cbz	x1, 20360 <rl_complete_internal@@Base+0x4b0>
   20330:	mov	x0, x21
   20334:	bl	16be0 <strpbrk@plt>
   20338:	cbz	x0, 20360 <rl_complete_internal@@Base+0x4b0>
   2033c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20340:	ldr	x8, [x8, #3080]
   20344:	ldr	x8, [x8]
   20348:	cbz	x8, 20360 <rl_complete_internal@@Base+0x4b0>
   2034c:	add	x2, sp, #0xc
   20350:	mov	w1, #0x1                   	// #1
   20354:	mov	x0, x21
   20358:	blr	x8
   2035c:	mov	x21, x0
   20360:	mov	x0, x21
   20364:	bl	16430 <rl_insert_text@plt>
   20368:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2036c:	add	x0, x0, #0xf67
   20370:	bl	16430 <rl_insert_text@plt>
   20374:	ldr	x8, [x20]
   20378:	cmp	x21, x8
   2037c:	b.eq	20388 <rl_complete_internal@@Base+0x4d8>  // b.none
   20380:	mov	x0, x21
   20384:	bl	169f0 <xfree@plt>
   20388:	bl	17830 <rl_end_undo_group@plt>
   2038c:	b	20490 <rl_complete_internal@@Base+0x5e0>
   20390:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20394:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20398:	ldr	x8, [x8, #2640]
   2039c:	ldur	x20, [x29, #-8]
   203a0:	ldr	x10, [x10, #3072]
   203a4:	adrp	x9, 22000 <rl_filename_completion_function@@Base+0xb18>
   203a8:	add	x9, x9, #0x848
   203ac:	str	x9, [x8]
   203b0:	str	x20, [x10]
   203b4:	strb	wzr, [x26, #700]
   203b8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   203bc:	ldr	x22, [x22, #2984]
   203c0:	mov	x0, x20
   203c4:	bl	22358 <rl_filename_completion_function@@Base+0xe70>
   203c8:	ldrb	w8, [x26, #700]
   203cc:	cmp	w8, #0x1
   203d0:	b.ne	2040c <rl_complete_internal@@Base+0x55c>  // b.any
   203d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   203d8:	ldr	x8, [x8, #2440]
   203dc:	stur	xzr, [x29, #-8]
   203e0:	strb	wzr, [x26, #700]
   203e4:	ldr	x8, [x8]
   203e8:	cbz	x8, 203f0 <rl_complete_internal@@Base+0x540>
   203ec:	blr	x8
   203f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   203f4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   203f8:	ldr	x8, [x8, #2640]
   203fc:	ldr	x9, [x9, #3072]
   20400:	str	xzr, [x8]
   20404:	str	xzr, [x9]
   20408:	b	204b8 <rl_complete_internal@@Base+0x608>
   2040c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20410:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20414:	ldr	x8, [x8, #2640]
   20418:	ldr	x9, [x9, #3072]
   2041c:	str	xzr, [x8]
   20420:	str	xzr, [x9]
   20424:	cbnz	x20, 20498 <rl_complete_internal@@Base+0x5e8>
   20428:	b	204b8 <rl_complete_internal@@Base+0x608>
   2042c:	add	x3, sp, #0xc
   20430:	mov	w2, #0x1                   	// #1
   20434:	mov	x0, x25
   20438:	mov	w1, w22
   2043c:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   20440:	ldr	x8, [x20, #8]
   20444:	cbz	x8, 2046c <rl_complete_internal@@Base+0x5bc>
   20448:	cmp	w21, #0x40
   2044c:	b.eq	20484 <rl_complete_internal@@Base+0x5d4>  // b.none
   20450:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20454:	ldr	x22, [x22, #2984]
   20458:	cmp	w21, #0x21
   2045c:	b.ne	20548 <rl_complete_internal@@Base+0x698>  // b.any
   20460:	mov	x0, x20
   20464:	bl	22358 <rl_filename_completion_function@@Base+0xe70>
   20468:	b	20498 <rl_complete_internal@@Base+0x5e8>
   2046c:	ldr	x0, [x20]
   20470:	ldur	w1, [x29, #-12]
   20474:	ldrb	w2, [sp, #12]
   20478:	mov	w3, w23
   2047c:	bl	22600 <rl_filename_completion_function@@Base+0x1118>
   20480:	b	20490 <rl_complete_internal@@Base+0x5e0>
   20484:	tbnz	w23, #0, 20490 <rl_complete_internal@@Base+0x5e0>
   20488:	mov	x0, x20
   2048c:	bl	22358 <rl_filename_completion_function@@Base+0xe70>
   20490:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20494:	ldr	x22, [x22, #2984]
   20498:	ldr	x0, [x20]
   2049c:	cbz	x0, 204b0 <rl_complete_internal@@Base+0x600>
   204a0:	add	x21, x20, #0x8
   204a4:	bl	169f0 <xfree@plt>
   204a8:	ldr	x0, [x21], #8
   204ac:	cbnz	x0, 204a4 <rl_complete_internal@@Base+0x5f4>
   204b0:	mov	x0, x20
   204b4:	bl	169f0 <xfree@plt>
   204b8:	cbz	x19, 204e8 <rl_complete_internal@@Base+0x638>
   204bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   204c0:	ldr	x8, [x8, #2480]
   204c4:	mov	x1, x19
   204c8:	ldr	x0, [x8]
   204cc:	bl	170a0 <strcmp@plt>
   204d0:	cmp	w0, #0x0
   204d4:	cset	w8, ne  // ne = any
   204d8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   204dc:	mov	x0, x19
   204e0:	str	w8, [x9, #696]
   204e4:	bl	169f0 <xfree@plt>
   204e8:	ldr	x8, [x22]
   204ec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   204f0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   204f4:	ldr	x9, [x9, #3584]
   204f8:	ldr	x10, [x10, #2376]
   204fc:	and	x8, x8, #0xffffffffffffbfff
   20500:	str	x8, [x22]
   20504:	str	wzr, [x9]
   20508:	str	wzr, [x10]
   2050c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20510:	ldr	x8, [x8, #2808]
   20514:	ldr	w9, [x8]
   20518:	cbz	w9, 20524 <rl_complete_internal@@Base+0x674>
   2051c:	ldr	w0, [x8]
   20520:	bl	17460 <_rl_signal_handler@plt>
   20524:	mov	w0, wzr
   20528:	ldp	x20, x19, [sp, #112]
   2052c:	ldp	x22, x21, [sp, #96]
   20530:	ldp	x24, x23, [sp, #80]
   20534:	ldp	x26, x25, [sp, #64]
   20538:	ldp	x28, x27, [sp, #48]
   2053c:	ldp	x29, x30, [sp, #32]
   20540:	add	sp, sp, #0x80
   20544:	ret
   20548:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2054c:	ldr	x8, [x8, #3416]
   20550:	ldr	w8, [x8]
   20554:	cbz	w8, 20498 <rl_complete_internal@@Base+0x5e8>
   20558:	bl	17390 <rl_ding@plt>
   2055c:	b	20498 <rl_complete_internal@@Base+0x5e8>

0000000000020560 <rl_possible_completions@@Base>:
   20560:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20564:	ldr	x8, [x8, #3336]
   20568:	mov	w0, #0x3f                  	// #63
   2056c:	str	w1, [x8]
   20570:	b	16620 <rl_complete_internal@plt>

0000000000020574 <rl_insert_completions@@Base>:
   20574:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20578:	ldr	x8, [x8, #3336]
   2057c:	mov	w0, #0x2a                  	// #42
   20580:	str	w1, [x8]
   20584:	b	16620 <rl_complete_internal@plt>

0000000000020588 <rl_completion_mode@@Base>:
   20588:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2058c:	ldr	x8, [x8, #2072]
   20590:	ldr	x8, [x8]
   20594:	cmp	x8, x0
   20598:	b.ne	205b0 <rl_completion_mode@@Base+0x28>  // b.any
   2059c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   205a0:	ldr	w8, [x8, #696]
   205a4:	cbnz	w8, 205b0 <rl_completion_mode@@Base+0x28>
   205a8:	mov	w0, #0x3f                  	// #63
   205ac:	ret
   205b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   205b4:	ldr	x8, [x8, #3368]
   205b8:	ldr	w8, [x8]
   205bc:	cbz	w8, 205c8 <rl_completion_mode@@Base+0x40>
   205c0:	mov	w0, #0x21                  	// #33
   205c4:	ret
   205c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   205cc:	ldr	x8, [x8, #3464]
   205d0:	mov	w9, #0x40                  	// #64
   205d4:	ldr	w8, [x8]
   205d8:	cmp	w8, #0x0
   205dc:	mov	w8, #0x9                   	// #9
   205e0:	csel	w0, w8, w9, eq  // eq = none
   205e4:	ret

00000000000205e8 <_rl_reset_completion_state@@Base>:
   205e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   205ec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   205f0:	ldr	x8, [x8, #3584]
   205f4:	ldr	x9, [x9, #2376]
   205f8:	str	wzr, [x8]
   205fc:	str	wzr, [x9]
   20600:	ret

0000000000020604 <_rl_find_completion_word@@Base>:
   20604:	sub	sp, sp, #0x70
   20608:	stp	x29, x30, [sp, #16]
   2060c:	stp	x28, x27, [sp, #32]
   20610:	stp	x26, x25, [sp, #48]
   20614:	stp	x24, x23, [sp, #64]
   20618:	stp	x22, x21, [sp, #80]
   2061c:	stp	x20, x19, [sp, #96]
   20620:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20624:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20628:	ldr	x26, [x26, #3512]
   2062c:	ldr	x8, [x8, #2760]
   20630:	mov	x19, x1
   20634:	add	x29, sp, #0x10
   20638:	ldr	w27, [x26]
   2063c:	ldr	x8, [x8]
   20640:	str	x0, [sp]
   20644:	cbz	x8, 20650 <_rl_find_completion_word@@Base+0x4c>
   20648:	blr	x8
   2064c:	b	20654 <_rl_find_completion_word@@Base+0x50>
   20650:	mov	x0, xzr
   20654:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20658:	ldr	x8, [x8, #2856]
   2065c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20660:	ldr	x9, [x9, #2160]
   20664:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20668:	ldr	x8, [x8]
   2066c:	cmp	x0, #0x0
   20670:	ldr	x9, [x9]
   20674:	ldr	x28, [x28, #2480]
   20678:	mov	w25, wzr
   2067c:	csel	x22, x8, x0, eq  // eq = none
   20680:	str	x19, [sp, #8]
   20684:	cbz	x9, 207b0 <_rl_find_completion_word@@Base+0x1ac>
   20688:	cmp	w27, #0x1
   2068c:	mov	w21, w25
   20690:	b.lt	207b4 <_rl_find_completion_word@@Base+0x1b0>  // b.tstop
   20694:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20698:	ldr	x20, [x20, #1896]
   2069c:	mov	w21, wzr
   206a0:	mov	w19, wzr
   206a4:	mov	w25, wzr
   206a8:	mov	w23, wzr
   206ac:	b	206bc <_rl_find_completion_word@@Base+0xb8>
   206b0:	add	w23, w23, #0x1
   206b4:	cmp	w23, w27
   206b8:	b.ge	207b4 <_rl_find_completion_word@@Base+0x1b0>  // b.tcont
   206bc:	cbz	w19, 206fc <_rl_find_completion_word@@Base+0xf8>
   206c0:	mov	w19, wzr
   206c4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   206c8:	cmp	x0, #0x2
   206cc:	b.cc	206b0 <_rl_find_completion_word@@Base+0xac>  // b.lo, b.ul, b.last
   206d0:	ldr	w8, [x20]
   206d4:	cbnz	w8, 206b0 <_rl_find_completion_word@@Base+0xac>
   206d8:	ldr	x0, [x28]
   206dc:	mov	w2, #0x1                   	// #1
   206e0:	mov	w1, w23
   206e4:	mov	w3, wzr
   206e8:	bl	16c00 <_rl_find_next_mbchar@plt>
   206ec:	mov	w23, w0
   206f0:	cmp	w23, w27
   206f4:	b.lt	206bc <_rl_find_completion_word@@Base+0xb8>  // b.tstop
   206f8:	b	207b4 <_rl_find_completion_word@@Base+0x1b0>
   206fc:	ldr	x8, [x28]
   20700:	ldrb	w24, [x8, w23, sxtw]
   20704:	and	w8, w21, #0xff
   20708:	cmp	w8, #0x27
   2070c:	b.eq	2072c <_rl_find_completion_word@@Base+0x128>  // b.none
   20710:	cmp	w24, #0x5c
   20714:	b.ne	20724 <_rl_find_completion_word@@Base+0x120>  // b.any
   20718:	orr	w25, w25, #0x4
   2071c:	mov	w19, #0x1                   	// #1
   20720:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   20724:	tst	w21, #0xff
   20728:	b.eq	20744 <_rl_find_completion_word@@Base+0x140>  // b.none
   2072c:	cmp	w24, w21, uxtb
   20730:	b.ne	206c0 <_rl_find_completion_word@@Base+0xbc>  // b.any
   20734:	mov	w19, wzr
   20738:	mov	w21, wzr
   2073c:	str	w27, [x26]
   20740:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   20744:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20748:	ldr	x8, [x8, #2160]
   2074c:	mov	w1, w24
   20750:	ldr	x0, [x8]
   20754:	bl	17380 <strchr@plt>
   20758:	cbz	x0, 20784 <_rl_find_completion_word@@Base+0x180>
   2075c:	add	w8, w23, #0x1
   20760:	cmp	w24, #0x22
   20764:	str	w8, [x26]
   20768:	b.eq	20790 <_rl_find_completion_word@@Base+0x18c>  // b.none
   2076c:	cmp	w24, #0x27
   20770:	b.ne	207a0 <_rl_find_completion_word@@Base+0x19c>  // b.any
   20774:	mov	w19, wzr
   20778:	orr	w25, w25, #0x1
   2077c:	mov	w21, #0x27                  	// #39
   20780:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   20784:	mov	w19, wzr
   20788:	mov	w21, wzr
   2078c:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   20790:	mov	w19, wzr
   20794:	orr	w25, w25, #0x2
   20798:	mov	w21, #0x22                  	// #34
   2079c:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   207a0:	mov	w19, wzr
   207a4:	orr	w25, w25, #0x8
   207a8:	mov	w21, w24
   207ac:	b	206c4 <_rl_find_completion_word@@Base+0xc0>
   207b0:	mov	w21, w25
   207b4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   207b8:	ldr	w24, [x26]
   207bc:	ldr	x19, [x19, #2928]
   207c0:	tst	w21, #0xff
   207c4:	b.ne	20850 <_rl_find_completion_word@@Base+0x24c>  // b.any
   207c8:	cmp	w24, w27
   207cc:	b.ne	20850 <_rl_find_completion_word@@Base+0x24c>  // b.any
   207d0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   207d4:	ldr	x20, [x20, #1896]
   207d8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   207dc:	cmp	x0, #0x2
   207e0:	b.cc	2080c <_rl_find_completion_word@@Base+0x208>  // b.lo, b.ul, b.last
   207e4:	ldr	w8, [x20]
   207e8:	cbnz	w8, 2080c <_rl_find_completion_word@@Base+0x208>
   207ec:	ldr	x0, [x28]
   207f0:	ldr	w1, [x26]
   207f4:	mov	w2, wzr
   207f8:	bl	16c20 <_rl_find_prev_mbchar@plt>
   207fc:	mov	w24, w0
   20800:	str	w24, [x26]
   20804:	cbnz	w24, 2081c <_rl_find_completion_word@@Base+0x218>
   20808:	b	20850 <_rl_find_completion_word@@Base+0x24c>
   2080c:	ldr	w8, [x26]
   20810:	sub	w24, w8, #0x1
   20814:	str	w24, [x26]
   20818:	cbz	w24, 20850 <_rl_find_completion_word@@Base+0x24c>
   2081c:	ldr	x23, [x28]
   20820:	mov	x0, x22
   20824:	ldrb	w1, [x23, w24, sxtw]
   20828:	bl	17380 <strchr@plt>
   2082c:	cbz	x0, 207d8 <_rl_find_completion_word@@Base+0x1d4>
   20830:	cbz	w25, 20850 <_rl_find_completion_word@@Base+0x24c>
   20834:	ldr	x8, [x19]
   20838:	cbz	x8, 20850 <_rl_find_completion_word@@Base+0x24c>
   2083c:	mov	x0, x23
   20840:	mov	w1, w24
   20844:	blr	x8
   20848:	cbnz	w0, 207d8 <_rl_find_completion_word@@Base+0x1d4>
   2084c:	ldr	w24, [x26]
   20850:	ldr	x0, [x28]
   20854:	ldrb	w23, [x0, w24, sxtw]
   20858:	cbz	w23, 208b4 <_rl_find_completion_word@@Base+0x2b0>
   2085c:	ldr	x8, [x19]
   20860:	cbz	x8, 20874 <_rl_find_completion_word@@Base+0x270>
   20864:	cbz	w25, 20874 <_rl_find_completion_word@@Base+0x270>
   20868:	mov	w1, w24
   2086c:	blr	x8
   20870:	cbnz	w0, 208b4 <_rl_find_completion_word@@Base+0x2b0>
   20874:	mov	x0, x22
   20878:	mov	w1, w23
   2087c:	bl	17380 <strchr@plt>
   20880:	cbz	x0, 208b4 <_rl_find_completion_word@@Base+0x2b0>
   20884:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20888:	ldr	x8, [x8, #2616]
   2088c:	ldr	x0, [x8]
   20890:	cbz	x0, 208f0 <_rl_find_completion_word@@Base+0x2ec>
   20894:	mov	w1, w23
   20898:	bl	17380 <strchr@plt>
   2089c:	cbz	x0, 208f0 <_rl_find_completion_word@@Base+0x2ec>
   208a0:	ldr	w8, [x26]
   208a4:	sub	w8, w27, w8
   208a8:	cmp	w8, #0x1
   208ac:	csel	w19, w23, wzr, gt
   208b0:	b	208f4 <_rl_find_completion_word@@Base+0x2f0>
   208b4:	mov	w19, wzr
   208b8:	ldp	x9, x8, [sp]
   208bc:	cbz	x9, 208c4 <_rl_find_completion_word@@Base+0x2c0>
   208c0:	str	w25, [x9]
   208c4:	cbz	x8, 208cc <_rl_find_completion_word@@Base+0x2c8>
   208c8:	str	w19, [x8]
   208cc:	mov	w0, w21
   208d0:	ldp	x20, x19, [sp, #96]
   208d4:	ldp	x22, x21, [sp, #80]
   208d8:	ldp	x24, x23, [sp, #64]
   208dc:	ldp	x26, x25, [sp, #48]
   208e0:	ldp	x28, x27, [sp, #32]
   208e4:	ldp	x29, x30, [sp, #16]
   208e8:	add	sp, sp, #0x70
   208ec:	ret
   208f0:	mov	w19, wzr
   208f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   208f8:	ldr	x8, [x8, #2064]
   208fc:	ldr	x0, [x8]
   20900:	cbz	x0, 20910 <_rl_find_completion_word@@Base+0x30c>
   20904:	mov	w1, w23
   20908:	bl	17380 <strchr@plt>
   2090c:	cbnz	x0, 208b8 <_rl_find_completion_word@@Base+0x2b4>
   20910:	ldr	w8, [x26]
   20914:	add	w8, w8, #0x1
   20918:	str	w8, [x26]
   2091c:	b	208b8 <_rl_find_completion_word@@Base+0x2b4>

0000000000020920 <rl_display_match_list@@Base>:
   20920:	sub	sp, sp, #0x80
   20924:	stp	x29, x30, [sp, #32]
   20928:	stp	x28, x27, [sp, #48]
   2092c:	stp	x26, x25, [sp, #64]
   20930:	stp	x24, x23, [sp, #80]
   20934:	stp	x22, x21, [sp, #96]
   20938:	stp	x20, x19, [sp, #112]
   2093c:	str	x1, [sp, #16]
   20940:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20944:	ldr	x19, [x19, #2848]
   20948:	mov	w22, w2
   2094c:	mov	x27, x0
   20950:	add	x29, sp, #0x20
   20954:	ldr	w8, [x19]
   20958:	cmp	w8, #0x1
   2095c:	b.lt	209d4 <rl_display_match_list@@Base+0xb4>  // b.tstop
   20960:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20964:	ldr	x8, [x8, #3768]
   20968:	ldr	x21, [x27]
   2096c:	ldr	w8, [x8]
   20970:	cbz	w8, 20aa4 <rl_display_match_list@@Base+0x184>
   20974:	mov	w1, #0x2f                  	// #47
   20978:	mov	x0, x21
   2097c:	bl	16ee0 <strrchr@plt>
   20980:	cbz	x0, 20a5c <rl_display_match_list@@Base+0x13c>
   20984:	ldrb	w8, [x0]
   20988:	mov	x23, x21
   2098c:	cbz	w8, 20a7c <rl_display_match_list@@Base+0x15c>
   20990:	mov	x9, x0
   20994:	ldrb	w8, [x9, #1]!
   20998:	cmp	w8, #0x0
   2099c:	ccmp	x0, x21, #0x0, eq  // eq = none
   209a0:	csel	x23, x21, x9, eq  // eq = none
   209a4:	cmp	x0, x21
   209a8:	b.eq	20a7c <rl_display_match_list@@Base+0x15c>  // b.none
   209ac:	cbnz	w8, 20a7c <rl_display_match_list@@Base+0x15c>
   209b0:	sub	x8, x0, #0x1
   209b4:	ldrb	w9, [x8]
   209b8:	cmp	x8, x21
   209bc:	b.ls	20a74 <rl_display_match_list@@Base+0x154>  // b.plast
   209c0:	cmp	w9, #0x2f
   209c4:	sub	x8, x8, #0x1
   209c8:	b.ne	209b4 <rl_display_match_list@@Base+0x94>  // b.any
   209cc:	add	x23, x8, #0x2
   209d0:	b	20a7c <rl_display_match_list@@Base+0x15c>
   209d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   209d8:	ldr	x8, [x8, #2904]
   209dc:	ldr	w8, [x8]
   209e0:	cmp	w8, #0x1
   209e4:	b.lt	20a64 <rl_display_match_list@@Base+0x144>  // b.tstop
   209e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   209ec:	ldr	x8, [x8, #3768]
   209f0:	ldr	x23, [x27]
   209f4:	ldr	w8, [x8]
   209f8:	cbz	w8, 20b50 <rl_display_match_list@@Base+0x230>
   209fc:	mov	w1, #0x2f                  	// #47
   20a00:	mov	x0, x23
   20a04:	bl	16ee0 <strrchr@plt>
   20a08:	cbz	x0, 20a6c <rl_display_match_list@@Base+0x14c>
   20a0c:	ldrb	w8, [x0]
   20a10:	mov	x21, x23
   20a14:	cbz	w8, 20b0c <rl_display_match_list@@Base+0x1ec>
   20a18:	mov	x9, x0
   20a1c:	ldrb	w8, [x9, #1]!
   20a20:	cmp	w8, #0x0
   20a24:	ccmp	x0, x23, #0x0, eq  // eq = none
   20a28:	csel	x21, x23, x9, eq  // eq = none
   20a2c:	cmp	x0, x23
   20a30:	b.eq	20b0c <rl_display_match_list@@Base+0x1ec>  // b.none
   20a34:	cbnz	w8, 20b0c <rl_display_match_list@@Base+0x1ec>
   20a38:	sub	x8, x0, #0x1
   20a3c:	ldrb	w9, [x8]
   20a40:	cmp	x8, x23
   20a44:	b.ls	20b04 <rl_display_match_list@@Base+0x1e4>  // b.plast
   20a48:	cmp	w9, #0x2f
   20a4c:	sub	x8, x8, #0x1
   20a50:	b.ne	20a3c <rl_display_match_list@@Base+0x11c>  // b.any
   20a54:	add	x21, x8, #0x2
   20a58:	b	20b0c <rl_display_match_list@@Base+0x1ec>
   20a5c:	mov	x23, x21
   20a60:	b	20a7c <rl_display_match_list@@Base+0x15c>
   20a64:	stur	wzr, [x29, #-4]
   20a68:	b	20ba8 <rl_display_match_list@@Base+0x288>
   20a6c:	mov	x21, x23
   20a70:	b	20b0c <rl_display_match_list@@Base+0x1ec>
   20a74:	cmp	w9, #0x2f
   20a78:	csinc	x23, x21, x8, ne  // ne = any
   20a7c:	mov	w1, #0x2f                  	// #47
   20a80:	mov	x0, x23
   20a84:	bl	16ee0 <strrchr@plt>
   20a88:	mov	x21, x23
   20a8c:	cbz	x0, 20aa4 <rl_display_match_list@@Base+0x184>
   20a90:	mov	x24, x0
   20a94:	bl	210a4 <rl_display_match_list@@Base+0x784>
   20a98:	mov	w23, w0
   20a9c:	mov	x0, x24
   20aa0:	b	20ab4 <rl_display_match_list@@Base+0x194>
   20aa4:	mov	x0, x21
   20aa8:	bl	210a4 <rl_display_match_list@@Base+0x784>
   20aac:	mov	w23, w0
   20ab0:	mov	x0, x21
   20ab4:	bl	16440 <strlen@plt>
   20ab8:	cmp	w23, w22
   20abc:	cset	w8, gt
   20ac0:	cmp	w0, w22
   20ac4:	cset	w9, gt
   20ac8:	ldr	w10, [x19]
   20acc:	orr	w9, w8, w9
   20ad0:	cmp	w9, #0x0
   20ad4:	csel	w8, wzr, w23, ne  // ne = any
   20ad8:	cmp	w8, w10
   20adc:	stur	wzr, [x29, #-4]
   20ae0:	b.le	20ba8 <rl_display_match_list@@Base+0x288>
   20ae4:	cmp	w8, #0x4
   20ae8:	b.lt	20ba8 <rl_display_match_list@@Base+0x288>  // b.tstop
   20aec:	cmp	w9, #0x0
   20af0:	sub	w8, w22, w8
   20af4:	csel	w9, wzr, w0, ne  // ne = any
   20af8:	stur	w9, [x29, #-4]
   20afc:	add	w22, w8, #0x3
   20b00:	b	20ba8 <rl_display_match_list@@Base+0x288>
   20b04:	cmp	w9, #0x2f
   20b08:	csinc	x21, x23, x8, ne  // ne = any
   20b0c:	mov	w1, #0x2f                  	// #47
   20b10:	mov	x0, x21
   20b14:	bl	16ee0 <strrchr@plt>
   20b18:	mov	x23, x21
   20b1c:	cbz	x0, 20b50 <rl_display_match_list@@Base+0x230>
   20b20:	mov	x24, x0
   20b24:	bl	210a4 <rl_display_match_list@@Base+0x784>
   20b28:	mov	x8, x24
   20b2c:	ldrb	w9, [x8, #1]!
   20b30:	mov	w21, w0
   20b34:	cbz	w9, 20b84 <rl_display_match_list@@Base+0x264>
   20b38:	ldrb	w9, [x24, #2]
   20b3c:	cbz	w9, 20b8c <rl_display_match_list@@Base+0x26c>
   20b40:	ldrb	w9, [x24, #3]
   20b44:	cbz	w9, 20b94 <rl_display_match_list@@Base+0x274>
   20b48:	mov	x0, x8
   20b4c:	b	20b7c <rl_display_match_list@@Base+0x25c>
   20b50:	mov	x0, x23
   20b54:	bl	210a4 <rl_display_match_list@@Base+0x784>
   20b58:	mov	w21, w0
   20b5c:	cbz	x23, 20b84 <rl_display_match_list@@Base+0x264>
   20b60:	ldrb	w8, [x23]
   20b64:	cbz	w8, 20b84 <rl_display_match_list@@Base+0x264>
   20b68:	ldrb	w8, [x23, #1]
   20b6c:	cbz	w8, 20b8c <rl_display_match_list@@Base+0x26c>
   20b70:	ldrb	w8, [x23, #2]
   20b74:	cbz	w8, 20b94 <rl_display_match_list@@Base+0x274>
   20b78:	mov	x0, x23
   20b7c:	bl	16440 <strlen@plt>
   20b80:	b	20b98 <rl_display_match_list@@Base+0x278>
   20b84:	mov	x0, xzr
   20b88:	b	20b98 <rl_display_match_list@@Base+0x278>
   20b8c:	mov	w0, #0x1                   	// #1
   20b90:	b	20b98 <rl_display_match_list@@Base+0x278>
   20b94:	mov	w0, #0x2                   	// #2
   20b98:	cmp	w0, w22
   20b9c:	ccmp	w21, w22, #0x0, le
   20ba0:	csel	w8, wzr, w0, gt
   20ba4:	stur	w8, [x29, #-4]
   20ba8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20bac:	ldr	x8, [x8, #3624]
   20bb0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20bb4:	ldr	w23, [x8]
   20bb8:	ldr	x20, [x20, #3552]
   20bbc:	ldr	w19, [x20]
   20bc0:	tbnz	w23, #31, 20bcc <rl_display_match_list@@Base+0x2ac>
   20bc4:	cmp	w23, w19
   20bc8:	b.le	20c04 <rl_display_match_list@@Base+0x2e4>
   20bcc:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   20bd0:	add	x0, x0, #0x595
   20bd4:	bl	17840 <getenv@plt>
   20bd8:	cbz	x0, 20bf8 <rl_display_match_list@@Base+0x2d8>
   20bdc:	ldrb	w8, [x0]
   20be0:	cbz	w8, 20bf8 <rl_display_match_list@@Base+0x2d8>
   20be4:	mov	w2, #0xa                   	// #10
   20be8:	mov	x1, xzr
   20bec:	bl	17130 <strtol@plt>
   20bf0:	ldr	w19, [x20]
   20bf4:	mov	x23, x0
   20bf8:	cmp	w23, w19
   20bfc:	ccmp	w23, #0x0, #0x8, le
   20c00:	csel	w23, w19, w23, lt  // lt = tstop
   20c04:	add	w10, w22, #0x2
   20c08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20c0c:	sdiv	w9, w23, w10
   20c10:	ldr	x8, [x8, #3240]
   20c14:	stur	w10, [x29, #-8]
   20c18:	mul	w10, w9, w10
   20c1c:	cmp	w10, w23
   20c20:	cset	w10, eq  // eq = none
   20c24:	cmp	w9, #0x1
   20c28:	sub	w9, w9, w10
   20c2c:	csinc	w9, w9, wzr, ne  // ne = any
   20c30:	cmp	w9, #0x0
   20c34:	ldr	w8, [x8]
   20c38:	ccmp	w23, w19, #0x0, lt  // lt = tstop
   20c3c:	csinc	w9, w9, wzr, ge  // ge = tcont
   20c40:	cmp	w9, #0x0
   20c44:	csinc	w25, w9, wzr, ne  // ne = any
   20c48:	cbnz	w8, 20c78 <rl_display_match_list@@Base+0x358>
   20c4c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20c50:	ldr	x8, [x8, #2144]
   20c54:	ldr	w8, [x8]
   20c58:	cbz	w8, 20c78 <rl_display_match_list@@Base+0x358>
   20c5c:	ldr	x8, [sp, #16]
   20c60:	adrp	x3, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20c64:	ldr	x3, [x3, #3544]
   20c68:	add	x0, x27, #0x8
   20c6c:	sxtw	x1, w8
   20c70:	mov	w2, #0x8                   	// #8
   20c74:	bl	16720 <qsort@plt>
   20c78:	bl	171e0 <rl_crlf@plt>
   20c7c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20c80:	ldr	x8, [x8, #2264]
   20c84:	ldr	w8, [x8]
   20c88:	cbz	w8, 20e6c <rl_display_match_list@@Base+0x54c>
   20c8c:	ldr	x22, [x27, #8]
   20c90:	cbz	x22, 20e4c <rl_display_match_list@@Base+0x52c>
   20c94:	mov	x26, x27
   20c98:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20c9c:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20ca0:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20ca4:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20ca8:	ldr	x23, [x23, #3768]
   20cac:	ldr	x24, [x24, #2808]
   20cb0:	ldr	x27, [x27, #3616]
   20cb4:	ldr	x28, [x28, #1928]
   20cb8:	mov	w20, wzr
   20cbc:	mov	w19, #0x1                   	// #1
   20cc0:	b	20ce4 <rl_display_match_list@@Base+0x3c4>
   20cc4:	ldr	x1, [x28]
   20cc8:	mov	w0, #0x20                  	// #32
   20ccc:	bl	16670 <putc@plt>
   20cd0:	mov	w8, w20
   20cd4:	ldr	x22, [x26, x21, lsl #3]
   20cd8:	mov	x19, x21
   20cdc:	mov	w20, w8
   20ce0:	cbz	x22, 20e4c <rl_display_match_list@@Base+0x52c>
   20ce4:	ldr	w8, [x23]
   20ce8:	mov	x0, x22
   20cec:	cbz	w8, 20d60 <rl_display_match_list@@Base+0x440>
   20cf0:	mov	w1, #0x2f                  	// #47
   20cf4:	mov	x0, x22
   20cf8:	bl	16ee0 <strrchr@plt>
   20cfc:	mov	x8, x0
   20d00:	mov	x0, x22
   20d04:	cbz	x8, 20d60 <rl_display_match_list@@Base+0x440>
   20d08:	ldrb	w9, [x8]
   20d0c:	mov	x0, x22
   20d10:	cbz	w9, 20d60 <rl_display_match_list@@Base+0x440>
   20d14:	mov	x10, x8
   20d18:	ldrb	w9, [x10, #1]!
   20d1c:	cmp	w9, #0x0
   20d20:	ccmp	x8, x22, #0x0, eq  // eq = none
   20d24:	csel	x0, x22, x10, eq  // eq = none
   20d28:	cmp	x8, x22
   20d2c:	b.eq	20d60 <rl_display_match_list@@Base+0x440>  // b.none
   20d30:	cbnz	w9, 20d60 <rl_display_match_list@@Base+0x440>
   20d34:	sub	x8, x8, #0x1
   20d38:	ldrb	w9, [x8]
   20d3c:	cmp	x8, x22
   20d40:	b.ls	20d58 <rl_display_match_list@@Base+0x438>  // b.plast
   20d44:	cmp	w9, #0x2f
   20d48:	sub	x8, x8, #0x1
   20d4c:	b.ne	20d38 <rl_display_match_list@@Base+0x418>  // b.any
   20d50:	add	x0, x8, #0x2
   20d54:	b	20d60 <rl_display_match_list@@Base+0x440>
   20d58:	cmp	w9, #0x2f
   20d5c:	csinc	x0, x22, x8, ne  // ne = any
   20d60:	ldur	w2, [x29, #-4]
   20d64:	mov	x1, x22
   20d68:	bl	21174 <rl_display_match_list@@Base+0x854>
   20d6c:	ldr	w8, [x24]
   20d70:	cbz	w8, 20d80 <rl_display_match_list@@Base+0x460>
   20d74:	ldr	w8, [x24]
   20d78:	cmp	w8, #0x1c
   20d7c:	b.ne	21084 <rl_display_match_list@@Base+0x764>  // b.any
   20d80:	add	x21, x19, #0x1
   20d84:	ldr	x8, [x26, x21, lsl #3]
   20d88:	cbz	x8, 20e4c <rl_display_match_list@@Base+0x52c>
   20d8c:	cmp	w25, #0x1
   20d90:	b.ne	20e00 <rl_display_match_list@@Base+0x4e0>  // b.any
   20d94:	bl	171e0 <rl_crlf@plt>
   20d98:	ldr	w9, [x27]
   20d9c:	add	w8, w20, #0x1
   20da0:	cbz	w9, 20cd4 <rl_display_match_list@@Base+0x3b4>
   20da4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20da8:	ldr	x9, [x9, #3520]
   20dac:	ldr	w9, [x9]
   20db0:	sub	w9, w9, #0x1
   20db4:	cmp	w8, w9
   20db8:	b.lt	20cd4 <rl_display_match_list@@Base+0x3b4>  // b.tstop
   20dbc:	ldr	x3, [x28]
   20dc0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   20dc4:	mov	w1, #0x8                   	// #8
   20dc8:	mov	w2, #0x1                   	// #1
   20dcc:	add	x0, x0, #0x5a0
   20dd0:	bl	173e0 <fwrite@plt>
   20dd4:	ldr	x0, [x28]
   20dd8:	bl	17430 <fflush@plt>
   20ddc:	mov	w0, #0x1                   	// #1
   20de0:	bl	23c80 <rl_backward_menu_complete@@Base+0x400>
   20de4:	mov	w22, w0
   20de8:	bl	169d0 <_rl_erase_entire_line@plt>
   20dec:	cmp	w22, #0x2
   20df0:	b.eq	20e40 <rl_display_match_list@@Base+0x520>  // b.none
   20df4:	cbz	w22, 21084 <rl_display_match_list@@Base+0x764>
   20df8:	mov	w8, wzr
   20dfc:	b	20cd4 <rl_display_match_list@@Base+0x3b4>
   20e00:	cmp	w25, #0x2
   20e04:	b.lt	20e14 <rl_display_match_list@@Base+0x4f4>  // b.tstop
   20e08:	sdiv	w8, w19, w25
   20e0c:	msub	w8, w8, w25, w19
   20e10:	cbz	w8, 20d94 <rl_display_match_list@@Base+0x474>
   20e14:	ldur	w8, [x29, #-8]
   20e18:	subs	w19, w8, w0
   20e1c:	b.le	20cc4 <rl_display_match_list@@Base+0x3a4>
   20e20:	cmp	w19, #0x1
   20e24:	b.lt	20cd0 <rl_display_match_list@@Base+0x3b0>  // b.tstop
   20e28:	ldr	x1, [x28]
   20e2c:	mov	w0, #0x20                  	// #32
   20e30:	bl	16670 <putc@plt>
   20e34:	subs	w19, w19, #0x1
   20e38:	b.ne	20e28 <rl_display_match_list@@Base+0x508>  // b.any
   20e3c:	b	20cd0 <rl_display_match_list@@Base+0x3b0>
   20e40:	mov	w8, w20
   20e44:	tbz	w20, #31, 20cd4 <rl_display_match_list@@Base+0x3b4>
   20e48:	b	21084 <rl_display_match_list@@Base+0x764>
   20e4c:	ldp	x20, x19, [sp, #112]
   20e50:	ldp	x22, x21, [sp, #96]
   20e54:	ldp	x24, x23, [sp, #80]
   20e58:	ldp	x26, x25, [sp, #64]
   20e5c:	ldp	x28, x27, [sp, #48]
   20e60:	ldp	x29, x30, [sp, #32]
   20e64:	add	sp, sp, #0x80
   20e68:	b	171e0 <rl_crlf@plt>
   20e6c:	ldr	x8, [sp, #16]
   20e70:	add	w8, w8, w25
   20e74:	sub	w8, w8, #0x1
   20e78:	sdiv	w8, w8, w25
   20e7c:	cmp	w8, #0x1
   20e80:	str	w8, [sp, #4]
   20e84:	b.lt	21084 <rl_display_match_list@@Base+0x764>  // b.tstop
   20e88:	ldr	w9, [sp, #4]
   20e8c:	ldr	x8, [sp, #16]
   20e90:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20e94:	mov	x22, x27
   20e98:	mov	w24, wzr
   20e9c:	sxtw	x28, w8
   20ea0:	add	w8, w9, #0x1
   20ea4:	str	x8, [sp, #8]
   20ea8:	ldr	x26, [x26, #1928]
   20eac:	mov	w27, w9
   20eb0:	mov	w21, #0x1                   	// #1
   20eb4:	b	20ed4 <rl_display_match_list@@Base+0x5b4>
   20eb8:	mov	w8, w24
   20ebc:	tbnz	w24, #31, 21084 <rl_display_match_list@@Base+0x764>
   20ec0:	ldr	x9, [sp, #8]
   20ec4:	add	x21, x21, #0x1
   20ec8:	mov	w24, w8
   20ecc:	cmp	x21, x9
   20ed0:	b.eq	21084 <rl_display_match_list@@Base+0x764>  // b.none
   20ed4:	cmp	w25, #0x1
   20ed8:	b.lt	20fe0 <rl_display_match_list@@Base+0x6c0>  // b.tstop
   20edc:	ldr	x8, [sp, #16]
   20ee0:	cmp	w21, w8
   20ee4:	b.gt	20fe0 <rl_display_match_list@@Base+0x6c0>
   20ee8:	mov	w19, wzr
   20eec:	mov	x20, x21
   20ef0:	ldr	x23, [x22, x20, lsl #3]
   20ef4:	cbz	x23, 20fe0 <rl_display_match_list@@Base+0x6c0>
   20ef8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20efc:	ldr	x8, [x8, #3768]
   20f00:	mov	x0, x23
   20f04:	ldr	w8, [x8]
   20f08:	cbz	w8, 20f7c <rl_display_match_list@@Base+0x65c>
   20f0c:	mov	w1, #0x2f                  	// #47
   20f10:	mov	x0, x23
   20f14:	bl	16ee0 <strrchr@plt>
   20f18:	mov	x8, x0
   20f1c:	mov	x0, x23
   20f20:	cbz	x8, 20f7c <rl_display_match_list@@Base+0x65c>
   20f24:	ldrb	w9, [x8]
   20f28:	mov	x0, x23
   20f2c:	cbz	w9, 20f7c <rl_display_match_list@@Base+0x65c>
   20f30:	mov	x10, x8
   20f34:	ldrb	w9, [x10, #1]!
   20f38:	cmp	w9, #0x0
   20f3c:	ccmp	x8, x23, #0x0, eq  // eq = none
   20f40:	csel	x0, x23, x10, eq  // eq = none
   20f44:	cmp	x8, x23
   20f48:	b.eq	20f7c <rl_display_match_list@@Base+0x65c>  // b.none
   20f4c:	cbnz	w9, 20f7c <rl_display_match_list@@Base+0x65c>
   20f50:	sub	x8, x8, #0x1
   20f54:	ldrb	w9, [x8]
   20f58:	cmp	x8, x23
   20f5c:	b.ls	20f74 <rl_display_match_list@@Base+0x654>  // b.plast
   20f60:	cmp	w9, #0x2f
   20f64:	sub	x8, x8, #0x1
   20f68:	b.ne	20f54 <rl_display_match_list@@Base+0x634>  // b.any
   20f6c:	add	x0, x8, #0x2
   20f70:	b	20f7c <rl_display_match_list@@Base+0x65c>
   20f74:	cmp	w9, #0x2f
   20f78:	csinc	x0, x23, x8, ne  // ne = any
   20f7c:	ldur	w2, [x29, #-4]
   20f80:	mov	x1, x23
   20f84:	bl	21174 <rl_display_match_list@@Base+0x854>
   20f88:	add	w19, w19, #0x1
   20f8c:	cmp	w19, w25
   20f90:	b.ge	20fcc <rl_display_match_list@@Base+0x6ac>  // b.tcont
   20f94:	ldur	w8, [x29, #-8]
   20f98:	subs	w23, w8, w0
   20f9c:	b.le	20fc0 <rl_display_match_list@@Base+0x6a0>
   20fa0:	cmp	w23, #0x1
   20fa4:	b.lt	20fcc <rl_display_match_list@@Base+0x6ac>  // b.tstop
   20fa8:	ldr	x1, [x26]
   20fac:	mov	w0, #0x20                  	// #32
   20fb0:	bl	16670 <putc@plt>
   20fb4:	subs	w23, w23, #0x1
   20fb8:	b.ne	20fa8 <rl_display_match_list@@Base+0x688>  // b.any
   20fbc:	b	20fcc <rl_display_match_list@@Base+0x6ac>
   20fc0:	ldr	x1, [x26]
   20fc4:	mov	w0, #0x20                  	// #32
   20fc8:	bl	16670 <putc@plt>
   20fcc:	cmp	w19, w25
   20fd0:	b.ge	20fe0 <rl_display_match_list@@Base+0x6c0>  // b.tcont
   20fd4:	add	x20, x20, x27
   20fd8:	cmp	x20, x28
   20fdc:	b.le	20ef0 <rl_display_match_list@@Base+0x5d0>
   20fe0:	bl	171e0 <rl_crlf@plt>
   20fe4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20fe8:	ldr	x8, [x8, #2808]
   20fec:	ldr	w8, [x8]
   20ff0:	cbz	w8, 21008 <rl_display_match_list@@Base+0x6e8>
   20ff4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   20ff8:	ldr	x8, [x8, #2808]
   20ffc:	ldr	w8, [x8]
   21000:	cmp	w8, #0x1c
   21004:	b.ne	21084 <rl_display_match_list@@Base+0x764>  // b.any
   21008:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2100c:	ldr	x8, [x8, #3616]
   21010:	ldr	w9, [x8]
   21014:	add	w8, w24, #0x1
   21018:	cbz	w9, 20ec0 <rl_display_match_list@@Base+0x5a0>
   2101c:	ldr	w9, [sp, #4]
   21020:	cmp	w21, w9
   21024:	b.ge	20ec0 <rl_display_match_list@@Base+0x5a0>  // b.tcont
   21028:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2102c:	ldr	x9, [x9, #3520]
   21030:	ldr	w9, [x9]
   21034:	sub	w9, w9, #0x1
   21038:	cmp	w8, w9
   2103c:	b.lt	20ec0 <rl_display_match_list@@Base+0x5a0>  // b.tstop
   21040:	ldr	x3, [x26]
   21044:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   21048:	mov	w1, #0x8                   	// #8
   2104c:	mov	w2, #0x1                   	// #1
   21050:	add	x0, x0, #0x5a0
   21054:	bl	173e0 <fwrite@plt>
   21058:	ldr	x0, [x26]
   2105c:	bl	17430 <fflush@plt>
   21060:	mov	w0, #0x1                   	// #1
   21064:	bl	23c80 <rl_backward_menu_complete@@Base+0x400>
   21068:	mov	w23, w0
   2106c:	bl	169d0 <_rl_erase_entire_line@plt>
   21070:	cmp	w23, #0x2
   21074:	b.eq	20eb8 <rl_display_match_list@@Base+0x598>  // b.none
   21078:	cbz	w23, 21084 <rl_display_match_list@@Base+0x764>
   2107c:	mov	w8, wzr
   21080:	b	20ec0 <rl_display_match_list@@Base+0x5a0>
   21084:	ldp	x20, x19, [sp, #112]
   21088:	ldp	x22, x21, [sp, #96]
   2108c:	ldp	x24, x23, [sp, #80]
   21090:	ldp	x26, x25, [sp, #64]
   21094:	ldp	x28, x27, [sp, #48]
   21098:	ldp	x29, x30, [sp, #32]
   2109c:	add	sp, sp, #0x80
   210a0:	ret
   210a4:	sub	sp, sp, #0x40
   210a8:	stp	x29, x30, [sp, #16]
   210ac:	stp	x22, x21, [sp, #32]
   210b0:	stp	x20, x19, [sp, #48]
   210b4:	add	x29, sp, #0x10
   210b8:	mov	x19, x0
   210bc:	bl	16440 <strlen@plt>
   210c0:	str	xzr, [sp, #8]
   210c4:	ldrb	w8, [x19]
   210c8:	cbz	w8, 21158 <rl_display_match_list@@Base+0x838>
   210cc:	mov	w20, wzr
   210d0:	mov	w21, wzr
   210d4:	add	w22, w0, #0x1
   210d8:	mov	x1, x19
   210dc:	b	210f4 <rl_display_match_list@@Base+0x7d4>
   210e0:	add	w20, w20, #0x2
   210e4:	add	w21, w21, #0x1
   210e8:	add	x1, x19, w21, sxtw
   210ec:	ldrb	w8, [x1]
   210f0:	cbz	w8, 2115c <rl_display_match_list@@Base+0x83c>
   210f4:	and	w8, w8, #0xff
   210f8:	cmp	w8, #0x20
   210fc:	b.cc	210e0 <rl_display_match_list@@Base+0x7c0>  // b.lo, b.ul, b.last
   21100:	cmp	w8, #0x7f
   21104:	b.eq	210e0 <rl_display_match_list@@Base+0x7c0>  // b.none
   21108:	sub	w8, w22, w21
   2110c:	sxtw	x2, w8
   21110:	add	x0, sp, #0x4
   21114:	add	x3, sp, #0x8
   21118:	bl	16370 <mbrtowc@plt>
   2111c:	cmn	x0, #0x2
   21120:	b.cc	21134 <rl_display_match_list@@Base+0x814>  // b.lo, b.ul, b.last
   21124:	add	w20, w20, #0x1
   21128:	add	w21, w21, #0x1
   2112c:	str	xzr, [sp, #8]
   21130:	b	210e8 <rl_display_match_list@@Base+0x7c8>
   21134:	cbz	x0, 2115c <rl_display_match_list@@Base+0x83c>
   21138:	ldr	w8, [sp, #4]
   2113c:	add	w21, w21, w0
   21140:	mov	w0, w8
   21144:	bl	2389c <rl_backward_menu_complete@@Base+0x1c>
   21148:	cmp	w0, #0x0
   2114c:	csinc	w8, w0, wzr, ge  // ge = tcont
   21150:	add	w20, w8, w20
   21154:	b	210e8 <rl_display_match_list@@Base+0x7c8>
   21158:	mov	w20, wzr
   2115c:	mov	w0, w20
   21160:	ldp	x20, x19, [sp, #48]
   21164:	ldp	x22, x21, [sp, #32]
   21168:	ldp	x29, x30, [sp, #16]
   2116c:	add	sp, sp, #0x40
   21170:	ret
   21174:	sub	sp, sp, #0xf0
   21178:	stp	x29, x30, [sp, #144]
   2117c:	stp	x28, x27, [sp, #160]
   21180:	stp	x26, x25, [sp, #176]
   21184:	stp	x24, x23, [sp, #192]
   21188:	stp	x22, x21, [sp, #208]
   2118c:	stp	x20, x19, [sp, #224]
   21190:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21194:	ldr	x24, [x24, #3112]
   21198:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2119c:	mov	w21, w2
   211a0:	mov	x22, x1
   211a4:	ldr	w8, [x24]
   211a8:	ldr	x19, [x19, #3768]
   211ac:	mov	x20, x0
   211b0:	add	x29, sp, #0x90
   211b4:	cbz	w8, 211c4 <rl_display_match_list@@Base+0x8a4>
   211b8:	ldr	w9, [x19]
   211bc:	cbz	w9, 211c4 <rl_display_match_list@@Base+0x8a4>
   211c0:	b	211e4 <rl_display_match_list@@Base+0x8c4>
   211c4:	mov	x0, x20
   211c8:	mov	w1, w21
   211cc:	mov	x2, x20
   211d0:	bl	238cc <rl_backward_menu_complete@@Base+0x4c>
   211d4:	ldr	w8, [x19]
   211d8:	mov	w19, w0
   211dc:	cbz	w8, 2143c <rl_display_match_list@@Base+0xb1c>
   211e0:	ldr	w8, [x24]
   211e4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   211e8:	ldr	x27, [x27, #2696]
   211ec:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   211f0:	ldr	w9, [x27]
   211f4:	ldr	x26, [x26, #3448]
   211f8:	orr	w8, w8, w9
   211fc:	ldr	w10, [x26]
   21200:	orr	w8, w8, w10
   21204:	cbz	w8, 2143c <rl_display_match_list@@Base+0xb1c>
   21208:	cmp	x20, x22
   2120c:	b.eq	212b8 <rl_display_match_list@@Base+0x998>  // b.none
   21210:	ldurb	w25, [x20, #-1]
   21214:	sturb	wzr, [x20, #-1]
   21218:	cbz	x22, 2122c <rl_display_match_list@@Base+0x90c>
   2121c:	ldrb	w8, [x22]
   21220:	cmp	w8, #0x2f
   21224:	b.eq	21460 <rl_display_match_list@@Base+0xb40>  // b.none
   21228:	cbnz	w8, 21234 <rl_display_match_list@@Base+0x914>
   2122c:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   21230:	add	x22, x22, #0x59e
   21234:	mov	x0, x22
   21238:	str	x22, [sp]
   2123c:	bl	176f0 <tilde_expand@plt>
   21240:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21244:	ldr	x28, [x28, #2280]
   21248:	str	x0, [sp, #8]
   2124c:	ldr	x8, [x28]
   21250:	cbz	x8, 21260 <rl_display_match_list@@Base+0x940>
   21254:	add	x0, sp, #0x8
   21258:	blr	x8
   2125c:	ldr	x0, [sp, #8]
   21260:	bl	16440 <strlen@plt>
   21264:	mov	x23, x0
   21268:	mov	x0, x20
   2126c:	bl	16440 <strlen@plt>
   21270:	add	w8, w0, w23
   21274:	add	w8, w8, #0x2
   21278:	sxtw	x0, w8
   2127c:	bl	16bf0 <xmalloc@plt>
   21280:	ldr	x1, [sp, #8]
   21284:	mov	x22, x0
   21288:	bl	17480 <strcpy@plt>
   2128c:	ldr	x9, [sp, #8]
   21290:	lsl	x8, x23, #32
   21294:	mov	x10, #0xffffffff00000000    	// #-4294967296
   21298:	add	x10, x8, x10
   2129c:	asr	x10, x10, #32
   212a0:	ldrb	w9, [x9, x10]
   212a4:	cmp	w9, #0x2f
   212a8:	b.ne	212e8 <rl_display_match_list@@Base+0x9c8>  // b.any
   212ac:	sub	w8, w23, #0x1
   212b0:	sxtw	x8, w8
   212b4:	b	212f4 <rl_display_match_list@@Base+0x9d4>
   212b8:	mov	x0, x20
   212bc:	bl	176f0 <tilde_expand@plt>
   212c0:	ldr	w8, [x27]
   212c4:	mov	x1, x0
   212c8:	str	x0, [sp, #8]
   212cc:	cbz	w8, 213d0 <rl_display_match_list@@Base+0xab0>
   212d0:	mov	x0, x1
   212d4:	bl	23b7c <rl_backward_menu_complete@@Base+0x2fc>
   212d8:	mov	w23, w0
   212dc:	ldr	w8, [x24]
   212e0:	cbnz	w8, 21404 <rl_display_match_list@@Base+0xae4>
   212e4:	b	21418 <rl_display_match_list@@Base+0xaf8>
   212e8:	asr	x8, x8, #32
   212ec:	mov	w9, #0x2f                  	// #47
   212f0:	strb	w9, [x22, x8]
   212f4:	add	x8, x22, x8
   212f8:	add	x0, x8, #0x1
   212fc:	mov	x1, x20
   21300:	bl	17480 <strcpy@plt>
   21304:	ldr	w8, [x27]
   21308:	cbz	w8, 21324 <rl_display_match_list@@Base+0xa04>
   2130c:	mov	x0, x22
   21310:	bl	23b7c <rl_backward_menu_complete@@Base+0x2fc>
   21314:	mov	w23, w0
   21318:	ldr	w8, [x24]
   2131c:	cbnz	w8, 213ac <rl_display_match_list@@Base+0xa8c>
   21320:	b	213c0 <rl_display_match_list@@Base+0xaa0>
   21324:	ldr	w8, [x26]
   21328:	cbz	w8, 2147c <rl_display_match_list@@Base+0xb5c>
   2132c:	ldr	x8, [x28]
   21330:	str	xzr, [sp]
   21334:	cbnz	x8, 2137c <rl_display_match_list@@Base+0xa5c>
   21338:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2133c:	ldr	x23, [x23, #3728]
   21340:	ldr	x8, [x23]
   21344:	cbz	x8, 2137c <rl_display_match_list@@Base+0xa5c>
   21348:	mov	x0, x22
   2134c:	bl	16440 <strlen@plt>
   21350:	add	x0, x0, #0x1
   21354:	bl	16bf0 <xmalloc@plt>
   21358:	mov	x1, x22
   2135c:	bl	17480 <strcpy@plt>
   21360:	ldr	x8, [x23]
   21364:	str	x0, [sp]
   21368:	mov	x0, sp
   2136c:	blr	x8
   21370:	mov	x0, x22
   21374:	bl	169f0 <xfree@plt>
   21378:	ldr	x22, [sp]
   2137c:	add	x2, sp, #0x10
   21380:	mov	w0, wzr
   21384:	mov	x1, x22
   21388:	bl	17850 <__xstat@plt>
   2138c:	ldr	w8, [sp, #32]
   21390:	and	w8, w8, #0xf000
   21394:	cmp	w8, #0x4, lsl #12
   21398:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   2139c:	mov	w8, #0x2f                  	// #47
   213a0:	csel	w23, wzr, w8, ne  // ne = any
   213a4:	ldr	w8, [x24]
   213a8:	cbz	w8, 213c0 <rl_display_match_list@@Base+0xaa0>
   213ac:	mov	x0, x20
   213b0:	mov	w1, w21
   213b4:	mov	x2, x22
   213b8:	bl	238cc <rl_backward_menu_complete@@Base+0x4c>
   213bc:	mov	w19, w0
   213c0:	mov	x0, x22
   213c4:	bl	169f0 <xfree@plt>
   213c8:	sturb	w25, [x20, #-1]
   213cc:	b	21418 <rl_display_match_list@@Base+0xaf8>
   213d0:	ldr	w8, [x26]
   213d4:	cbz	w8, 2148c <rl_display_match_list@@Base+0xb6c>
   213d8:	add	x2, sp, #0x10
   213dc:	mov	w0, wzr
   213e0:	bl	17850 <__xstat@plt>
   213e4:	ldr	w8, [sp, #32]
   213e8:	and	w8, w8, #0xf000
   213ec:	cmp	w8, #0x4, lsl #12
   213f0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   213f4:	mov	w8, #0x2f                  	// #47
   213f8:	csel	w23, wzr, w8, ne  // ne = any
   213fc:	ldr	w8, [x24]
   21400:	cbz	w8, 21418 <rl_display_match_list@@Base+0xaf8>
   21404:	ldr	x2, [sp, #8]
   21408:	mov	x0, x20
   2140c:	mov	w1, w21
   21410:	bl	238cc <rl_backward_menu_complete@@Base+0x4c>
   21414:	mov	w19, w0
   21418:	ldr	x0, [sp, #8]
   2141c:	bl	169f0 <xfree@plt>
   21420:	cbz	w23, 2143c <rl_display_match_list@@Base+0xb1c>
   21424:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21428:	ldr	x8, [x8, #1928]
   2142c:	mov	w0, w23
   21430:	ldr	x1, [x8]
   21434:	bl	16670 <putc@plt>
   21438:	add	w19, w19, #0x1
   2143c:	mov	w0, w19
   21440:	ldp	x20, x19, [sp, #224]
   21444:	ldp	x22, x21, [sp, #208]
   21448:	ldp	x24, x23, [sp, #192]
   2144c:	ldp	x26, x25, [sp, #176]
   21450:	ldp	x28, x27, [sp, #160]
   21454:	ldp	x29, x30, [sp, #144]
   21458:	add	sp, sp, #0xf0
   2145c:	ret
   21460:	ldrb	w8, [x22, #1]
   21464:	cmp	w8, #0x2f
   21468:	b.eq	2149c <rl_display_match_list@@Base+0xb7c>  // b.none
   2146c:	cbnz	w8, 21234 <rl_display_match_list@@Base+0x914>
   21470:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   21474:	add	x22, x22, #0x59d
   21478:	b	21234 <rl_display_match_list@@Base+0x914>
   2147c:	mov	w23, wzr
   21480:	ldr	w8, [x24]
   21484:	cbnz	w8, 213ac <rl_display_match_list@@Base+0xa8c>
   21488:	b	213c0 <rl_display_match_list@@Base+0xaa0>
   2148c:	mov	w23, wzr
   21490:	ldr	w8, [x24]
   21494:	cbnz	w8, 21404 <rl_display_match_list@@Base+0xae4>
   21498:	b	21418 <rl_display_match_list@@Base+0xaf8>
   2149c:	ldrb	w8, [x22, #2]
   214a0:	cbnz	w8, 21234 <rl_display_match_list@@Base+0x914>
   214a4:	b	2122c <rl_display_match_list@@Base+0x90c>

00000000000214a8 <_rl_free_match_list@@Base>:
   214a8:	cbz	x0, 214e4 <_rl_free_match_list@@Base+0x3c>
   214ac:	stp	x29, x30, [sp, #-32]!
   214b0:	stp	x20, x19, [sp, #16]
   214b4:	mov	x19, x0
   214b8:	ldr	x0, [x0]
   214bc:	mov	x29, sp
   214c0:	cbz	x0, 214d4 <_rl_free_match_list@@Base+0x2c>
   214c4:	add	x20, x19, #0x8
   214c8:	bl	169f0 <xfree@plt>
   214cc:	ldr	x0, [x20], #8
   214d0:	cbnz	x0, 214c8 <_rl_free_match_list@@Base+0x20>
   214d4:	mov	x0, x19
   214d8:	ldp	x20, x19, [sp, #16]
   214dc:	ldp	x29, x30, [sp], #32
   214e0:	b	169f0 <xfree@plt>
   214e4:	ret

00000000000214e8 <rl_filename_completion_function@@Base>:
   214e8:	sub	sp, sp, #0x80
   214ec:	stp	x28, x27, [sp, #48]
   214f0:	stp	x26, x25, [sp, #64]
   214f4:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   214f8:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   214fc:	stp	x29, x30, [sp, #32]
   21500:	stp	x24, x23, [sp, #80]
   21504:	stp	x22, x21, [sp, #96]
   21508:	stp	x20, x19, [sp, #112]
   2150c:	add	x29, sp, #0x20
   21510:	cbz	w1, 21520 <rl_filename_completion_function@@Base+0x38>
   21514:	ldr	x0, [x25, #736]
   21518:	cbnz	x0, 21704 <rl_filename_completion_function@@Base+0x21c>
   2151c:	b	21ca0 <rl_filename_completion_function@@Base+0x7b8>
   21520:	mov	x19, x0
   21524:	ldr	x0, [x25, #736]
   21528:	cbz	x0, 21534 <rl_filename_completion_function@@Base+0x4c>
   2152c:	bl	16e40 <closedir@plt>
   21530:	str	xzr, [x25, #736]
   21534:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   21538:	ldr	x0, [x21, #752]
   2153c:	cbz	x0, 21544 <rl_filename_completion_function@@Base+0x5c>
   21540:	bl	171b0 <free@plt>
   21544:	ldr	x0, [x28, #744]
   21548:	cbz	x0, 21550 <rl_filename_completion_function@@Base+0x68>
   2154c:	bl	171b0 <free@plt>
   21550:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   21554:	ldr	x0, [x22, #760]
   21558:	cbz	x0, 21560 <rl_filename_completion_function@@Base+0x78>
   2155c:	bl	171b0 <free@plt>
   21560:	mov	x0, x19
   21564:	bl	16440 <strlen@plt>
   21568:	add	x0, x0, #0x1
   2156c:	bl	16bf0 <xmalloc@plt>
   21570:	mov	x1, x19
   21574:	bl	17480 <strcpy@plt>
   21578:	str	x0, [x28, #744]
   2157c:	ldrb	w8, [x19]
   21580:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   21584:	add	x9, x9, #0x593
   21588:	cmp	w8, #0x0
   2158c:	csel	x20, x9, x19, eq  // eq = none
   21590:	mov	x0, x20
   21594:	bl	16440 <strlen@plt>
   21598:	add	x0, x0, #0x1
   2159c:	bl	16bf0 <xmalloc@plt>
   215a0:	mov	x1, x20
   215a4:	mov	x19, x0
   215a8:	bl	17480 <strcpy@plt>
   215ac:	mov	w1, #0x2f                  	// #47
   215b0:	str	x0, [x21, #752]
   215b4:	bl	16ee0 <strrchr@plt>
   215b8:	cbz	x0, 215d4 <rl_filename_completion_function@@Base+0xec>
   215bc:	ldr	x8, [x28, #744]
   215c0:	add	x19, x0, #0x1
   215c4:	mov	x1, x19
   215c8:	mov	x0, x8
   215cc:	bl	17480 <strcpy@plt>
   215d0:	b	215e4 <rl_filename_completion_function@@Base+0xfc>
   215d4:	mov	w8, #0x2e                  	// #46
   215d8:	strb	w8, [x19]
   215dc:	ldr	x8, [x21, #752]
   215e0:	add	x19, x8, #0x1
   215e4:	strb	wzr, [x19]
   215e8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   215ec:	ldr	x20, [x20, #3584]
   215f0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   215f4:	ldr	x0, [x21, #752]
   215f8:	ldr	w8, [x20]
   215fc:	ldr	x23, [x23, #3752]
   21600:	cbz	w8, 21620 <rl_filename_completion_function@@Base+0x138>
   21604:	ldr	x8, [x23]
   21608:	cbz	x8, 21620 <rl_filename_completion_function@@Base+0x138>
   2160c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21610:	ldr	x9, [x9, #2376]
   21614:	ldr	w1, [x9]
   21618:	blr	x8
   2161c:	b	21634 <rl_filename_completion_function@@Base+0x14c>
   21620:	bl	16440 <strlen@plt>
   21624:	add	x0, x0, #0x1
   21628:	bl	16bf0 <xmalloc@plt>
   2162c:	ldr	x1, [x21, #752]
   21630:	bl	17480 <strcpy@plt>
   21634:	ldr	x8, [x21, #752]
   21638:	str	x0, [x22, #760]
   2163c:	ldrb	w9, [x8]
   21640:	cmp	w9, #0x7e
   21644:	b.ne	2166c <rl_filename_completion_function@@Base+0x184>  // b.any
   21648:	mov	x0, x8
   2164c:	bl	176f0 <tilde_expand@plt>
   21650:	ldr	x8, [x21, #752]
   21654:	mov	x19, x0
   21658:	mov	x0, x8
   2165c:	bl	169f0 <xfree@plt>
   21660:	str	x19, [x21, #752]
   21664:	mov	w19, #0x1                   	// #1
   21668:	b	21670 <rl_filename_completion_function@@Base+0x188>
   2166c:	mov	w19, wzr
   21670:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21674:	ldr	x8, [x8, #3680]
   21678:	ldr	x8, [x8]
   2167c:	cbz	x8, 21c48 <rl_filename_completion_function@@Base+0x760>
   21680:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   21684:	add	x0, x0, #0x2f0
   21688:	blr	x8
   2168c:	ldr	x0, [x21, #752]
   21690:	bl	16680 <opendir@plt>
   21694:	ldr	x19, [x28, #744]
   21698:	str	x0, [x25, #736]
   2169c:	ldrb	w8, [x19]
   216a0:	cbz	w8, 216dc <rl_filename_completion_function@@Base+0x1f4>
   216a4:	ldr	w8, [x20]
   216a8:	cbz	w8, 216dc <rl_filename_completion_function@@Base+0x1f4>
   216ac:	ldr	x8, [x23]
   216b0:	cbz	x8, 216dc <rl_filename_completion_function@@Base+0x1f4>
   216b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   216b8:	ldr	x9, [x9, #2376]
   216bc:	mov	x0, x19
   216c0:	ldr	w1, [x9]
   216c4:	blr	x8
   216c8:	ldr	x8, [x28, #744]
   216cc:	mov	x19, x0
   216d0:	mov	x0, x8
   216d4:	bl	169f0 <xfree@plt>
   216d8:	str	x19, [x28, #744]
   216dc:	mov	x0, x19
   216e0:	bl	16440 <strlen@plt>
   216e4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   216e8:	ldr	x9, [x9, #3768]
   216ec:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   216f0:	mov	w10, #0x1                   	// #1
   216f4:	str	w0, [x8, #768]
   216f8:	str	w10, [x9]
   216fc:	ldr	x0, [x25, #736]
   21700:	cbz	x0, 21ca0 <rl_filename_completion_function@@Base+0x7b8>
   21704:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21708:	ldr	x26, [x26, #2352]
   2170c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   21710:	b	21720 <rl_filename_completion_function@@Base+0x238>
   21714:	b.ne	21b04 <rl_filename_completion_function@@Base+0x61c>  // b.any
   21718:	ldr	x0, [x25, #736]
   2171c:	cbz	x0, 21b04 <rl_filename_completion_function@@Base+0x61c>
   21720:	bl	16d90 <readdir@plt>
   21724:	cbz	x0, 21c90 <rl_filename_completion_function@@Base+0x7a8>
   21728:	add	x19, x0, #0x13
   2172c:	mov	x21, x0
   21730:	mov	x0, x19
   21734:	bl	16440 <strlen@plt>
   21738:	ldr	x8, [x26]
   2173c:	mov	x24, x0
   21740:	cbz	x8, 217d0 <rl_filename_completion_function@@Base+0x2e8>
   21744:	mov	x0, x19
   21748:	mov	w1, w24
   2174c:	blr	x8
   21750:	mov	x20, x0
   21754:	cmp	x0, x19
   21758:	b.eq	21814 <rl_filename_completion_function@@Base+0x32c>  // b.none
   2175c:	mov	x0, x20
   21760:	bl	16440 <strlen@plt>
   21764:	mov	x24, x0
   21768:	ldr	w27, [x23, #768]
   2176c:	cbz	w27, 217dc <rl_filename_completion_function@@Base+0x2f4>
   21770:	ldr	x22, [x28, #744]
   21774:	cmp	w24, w27
   21778:	stur	xzr, [x29, #-8]
   2177c:	str	xzr, [sp, #16]
   21780:	b.lt	21718 <rl_filename_completion_function@@Base+0x230>  // b.tstop
   21784:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21788:	ldr	x8, [x8, #3168]
   2178c:	sxtw	x23, w27
   21790:	ldr	w8, [x8]
   21794:	cbz	w8, 218f8 <rl_filename_completion_function@@Base+0x410>
   21798:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2179c:	ldr	x9, [x9, #3160]
   217a0:	ldr	w9, [x9]
   217a4:	cbz	w9, 218f8 <rl_filename_completion_function@@Base+0x410>
   217a8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   217ac:	cmp	x0, #0x2
   217b0:	b.cc	219c4 <rl_filename_completion_function@@Base+0x4dc>  // b.lo, b.ul, b.last
   217b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   217b8:	ldr	x8, [x8, #1896]
   217bc:	ldr	w8, [x8]
   217c0:	cbnz	w8, 219c4 <rl_filename_completion_function@@Base+0x4dc>
   217c4:	sxtw	x24, w24
   217c8:	mov	x25, x20
   217cc:	b	21830 <rl_filename_completion_function@@Base+0x348>
   217d0:	mov	x20, x19
   217d4:	ldr	w27, [x23, #768]
   217d8:	cbnz	w27, 21770 <rl_filename_completion_function@@Base+0x288>
   217dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   217e0:	ldr	x8, [x8, #4008]
   217e4:	ldr	w9, [x8]
   217e8:	ldrb	w8, [x20]
   217ec:	cmp	w8, #0x2e
   217f0:	cbz	w9, 21714 <rl_filename_completion_function@@Base+0x22c>
   217f4:	b.ne	21b04 <rl_filename_completion_function@@Base+0x61c>  // b.any
   217f8:	ldrb	w8, [x20, #1]
   217fc:	cbz	w8, 21718 <rl_filename_completion_function@@Base+0x230>
   21800:	cmp	w8, #0x2e
   21804:	b.ne	21b04 <rl_filename_completion_function@@Base+0x61c>  // b.any
   21808:	ldrb	w8, [x20, #2]
   2180c:	cbz	w8, 21718 <rl_filename_completion_function@@Base+0x230>
   21810:	b	21b04 <rl_filename_completion_function@@Base+0x61c>
   21814:	sxtw	x24, w24
   21818:	ldr	w27, [x23, #768]
   2181c:	cbnz	w27, 21770 <rl_filename_completion_function@@Base+0x288>
   21820:	b	217dc <rl_filename_completion_function@@Base+0x2f4>
   21824:	cmp	w8, w0
   21828:	b.ne	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.any
   2182c:	cbz	w27, 21b04 <rl_filename_completion_function@@Base+0x61c>
   21830:	add	x0, sp, #0xc
   21834:	sub	x3, x29, #0x8
   21838:	mov	x1, x25
   2183c:	mov	x2, x24
   21840:	bl	16370 <mbrtowc@plt>
   21844:	mov	x26, x0
   21848:	add	x0, sp, #0x8
   2184c:	add	x3, sp, #0x10
   21850:	mov	x1, x22
   21854:	mov	x2, x23
   21858:	bl	16370 <mbrtowc@plt>
   2185c:	orr	x8, x0, x26
   21860:	cbz	x8, 21b04 <rl_filename_completion_function@@Base+0x61c>
   21864:	cmn	x26, #0x3
   21868:	b.hi	218c4 <rl_filename_completion_function@@Base+0x3dc>  // b.pmore
   2186c:	cmn	x0, #0x2
   21870:	b.cs	218c4 <rl_filename_completion_function@@Base+0x3dc>  // b.hs, b.nlast
   21874:	ldr	w0, [sp, #12]
   21878:	bl	17940 <towlower@plt>
   2187c:	ldr	w8, [sp, #8]
   21880:	str	w0, [sp, #12]
   21884:	mov	w0, w8
   21888:	bl	17940 <towlower@plt>
   2188c:	ldr	w8, [sp, #12]
   21890:	add	x25, x25, x26
   21894:	add	x22, x22, x26
   21898:	sub	w27, w27, w26
   2189c:	cmp	w8, #0x5f
   218a0:	str	w0, [sp, #8]
   218a4:	b.eq	218b0 <rl_filename_completion_function@@Base+0x3c8>  // b.none
   218a8:	cmp	w8, #0x2d
   218ac:	b.ne	21824 <rl_filename_completion_function@@Base+0x33c>  // b.any
   218b0:	cmp	w0, #0x2d
   218b4:	b.eq	2182c <rl_filename_completion_function@@Base+0x344>  // b.none
   218b8:	cmp	w0, #0x5f
   218bc:	b.eq	2182c <rl_filename_completion_function@@Base+0x344>  // b.none
   218c0:	b	21824 <rl_filename_completion_function@@Base+0x33c>
   218c4:	ldrb	w8, [x25]
   218c8:	ldrb	w9, [x22]
   218cc:	cmp	w8, w9
   218d0:	b.ne	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.any
   218d4:	cmp	w8, #0x2d
   218d8:	b.eq	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.none
   218dc:	cmp	w8, #0x5f
   218e0:	b.eq	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.none
   218e4:	add	x25, x25, #0x1
   218e8:	add	x22, x22, #0x1
   218ec:	sub	w27, w27, #0x1
   218f0:	cbnz	w27, 21830 <rl_filename_completion_function@@Base+0x348>
   218f4:	b	21b04 <rl_filename_completion_function@@Base+0x61c>
   218f8:	cbz	w8, 21a58 <rl_filename_completion_function@@Base+0x570>
   218fc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   21900:	cmp	x0, #0x2
   21904:	b.cc	21a80 <rl_filename_completion_function@@Base+0x598>  // b.lo, b.ul, b.last
   21908:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2190c:	ldr	x8, [x8, #1896]
   21910:	ldr	w8, [x8]
   21914:	cbnz	w8, 21a80 <rl_filename_completion_function@@Base+0x598>
   21918:	sxtw	x24, w24
   2191c:	mov	x25, x20
   21920:	add	x0, sp, #0xc
   21924:	sub	x3, x29, #0x8
   21928:	mov	x1, x25
   2192c:	mov	x2, x24
   21930:	bl	16370 <mbrtowc@plt>
   21934:	mov	x26, x0
   21938:	add	x0, sp, #0x8
   2193c:	add	x3, sp, #0x10
   21940:	mov	x1, x22
   21944:	mov	x2, x23
   21948:	bl	16370 <mbrtowc@plt>
   2194c:	orr	x8, x0, x26
   21950:	cbz	x8, 21b04 <rl_filename_completion_function@@Base+0x61c>
   21954:	cmn	x26, #0x3
   21958:	b.hi	219a0 <rl_filename_completion_function@@Base+0x4b8>  // b.pmore
   2195c:	cmn	x0, #0x2
   21960:	b.cs	219a0 <rl_filename_completion_function@@Base+0x4b8>  // b.hs, b.nlast
   21964:	ldr	w0, [sp, #12]
   21968:	bl	17940 <towlower@plt>
   2196c:	ldr	w8, [sp, #8]
   21970:	str	w0, [sp, #12]
   21974:	mov	w0, w8
   21978:	bl	17940 <towlower@plt>
   2197c:	ldr	w8, [sp, #12]
   21980:	str	w0, [sp, #8]
   21984:	cmp	w8, w0
   21988:	b.ne	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.any
   2198c:	add	x25, x25, x26
   21990:	sub	w27, w27, w26
   21994:	add	x22, x22, x26
   21998:	cbnz	w27, 21920 <rl_filename_completion_function@@Base+0x438>
   2199c:	b	21b04 <rl_filename_completion_function@@Base+0x61c>
   219a0:	ldrb	w8, [x25]
   219a4:	ldrb	w9, [x22]
   219a8:	cmp	w8, w9
   219ac:	b.ne	21aa0 <rl_filename_completion_function@@Base+0x5b8>  // b.any
   219b0:	add	x25, x25, #0x1
   219b4:	sub	w27, w27, #0x1
   219b8:	add	x22, x22, #0x1
   219bc:	cbnz	w27, 21920 <rl_filename_completion_function@@Base+0x438>
   219c0:	b	21b04 <rl_filename_completion_function@@Base+0x61c>
   219c4:	bl	17100 <__ctype_b_loc@plt>
   219c8:	ldr	x23, [x0]
   219cc:	mov	x24, x20
   219d0:	b	219ec <rl_filename_completion_function@@Base+0x504>
   219d4:	cmp	w26, w8
   219d8:	b.ne	21a9c <rl_filename_completion_function@@Base+0x5b4>  // b.any
   219dc:	add	x24, x24, #0x1
   219e0:	subs	w27, w27, #0x1
   219e4:	add	x22, x22, #0x1
   219e8:	b.eq	21b04 <rl_filename_completion_function@@Base+0x61c>  // b.none
   219ec:	ldrb	w25, [x24]
   219f0:	ldrh	w8, [x23, x25, lsl #1]
   219f4:	tbnz	w8, #8, 21a00 <rl_filename_completion_function@@Base+0x518>
   219f8:	mov	w26, w25
   219fc:	b	21a0c <rl_filename_completion_function@@Base+0x524>
   21a00:	bl	16810 <__ctype_tolower_loc@plt>
   21a04:	ldr	x8, [x0]
   21a08:	ldr	w26, [x8, x25, lsl #2]
   21a0c:	ldrb	w28, [x22]
   21a10:	ldrh	w8, [x23, x28, lsl #1]
   21a14:	tbnz	w8, #8, 21a28 <rl_filename_completion_function@@Base+0x540>
   21a18:	mov	w8, w28
   21a1c:	cmp	w25, #0x5f
   21a20:	b.ne	21a3c <rl_filename_completion_function@@Base+0x554>  // b.any
   21a24:	b	21a44 <rl_filename_completion_function@@Base+0x55c>
   21a28:	bl	16810 <__ctype_tolower_loc@plt>
   21a2c:	ldr	x8, [x0]
   21a30:	ldr	w8, [x8, x28, lsl #2]
   21a34:	cmp	w25, #0x5f
   21a38:	b.eq	21a44 <rl_filename_completion_function@@Base+0x55c>  // b.none
   21a3c:	cmp	w25, #0x2d
   21a40:	b.ne	219d4 <rl_filename_completion_function@@Base+0x4ec>  // b.any
   21a44:	cmp	w28, #0x2d
   21a48:	b.eq	219dc <rl_filename_completion_function@@Base+0x4f4>  // b.none
   21a4c:	cmp	w28, #0x5f
   21a50:	b.eq	219dc <rl_filename_completion_function@@Base+0x4f4>  // b.none
   21a54:	b	219d4 <rl_filename_completion_function@@Base+0x4ec>
   21a58:	ldrb	w8, [x20]
   21a5c:	ldrb	w9, [x22]
   21a60:	cmp	w8, w9
   21a64:	b.ne	21afc <rl_filename_completion_function@@Base+0x614>  // b.any
   21a68:	mov	x0, x22
   21a6c:	mov	x1, x20
   21a70:	mov	x2, x23
   21a74:	bl	16b40 <strncmp@plt>
   21a78:	cbnz	w0, 21afc <rl_filename_completion_function@@Base+0x614>
   21a7c:	b	21b04 <rl_filename_completion_function@@Base+0x61c>
   21a80:	bl	17100 <__ctype_b_loc@plt>
   21a84:	ldr	x25, [x0]
   21a88:	ldrb	w24, [x20]
   21a8c:	ldrh	w8, [x25, x24, lsl #1]
   21a90:	tbnz	w8, #8, 21ab0 <rl_filename_completion_function@@Base+0x5c8>
   21a94:	mov	x27, x26
   21a98:	b	21ac0 <rl_filename_completion_function@@Base+0x5d8>
   21a9c:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   21aa0:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21aa4:	ldr	x26, [x26, #2352]
   21aa8:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   21aac:	b	21afc <rl_filename_completion_function@@Base+0x614>
   21ab0:	mov	x27, x26
   21ab4:	bl	16810 <__ctype_tolower_loc@plt>
   21ab8:	ldr	x8, [x0]
   21abc:	ldr	w24, [x8, x24, lsl #2]
   21ac0:	ldrb	w26, [x22]
   21ac4:	ldrh	w8, [x25, x26, lsl #1]
   21ac8:	tbz	w8, #8, 21ad8 <rl_filename_completion_function@@Base+0x5f0>
   21acc:	bl	16810 <__ctype_tolower_loc@plt>
   21ad0:	ldr	x8, [x0]
   21ad4:	ldr	w26, [x8, x26, lsl #2]
   21ad8:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   21adc:	cmp	w24, w26
   21ae0:	mov	x26, x27
   21ae4:	b.ne	21afc <rl_filename_completion_function@@Base+0x614>  // b.any
   21ae8:	mov	x0, x22
   21aec:	mov	x1, x20
   21af0:	mov	x2, x23
   21af4:	bl	172d0 <strncasecmp@plt>
   21af8:	cbz	w0, 21b04 <rl_filename_completion_function@@Base+0x61c>
   21afc:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   21b00:	b	21718 <rl_filename_completion_function@@Base+0x230>
   21b04:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   21b08:	ldr	x0, [x23, #752]
   21b0c:	cbz	x0, 21bb0 <rl_filename_completion_function@@Base+0x6c8>
   21b10:	ldrb	w8, [x0]
   21b14:	cmp	w8, #0x2e
   21b18:	b.ne	21b24 <rl_filename_completion_function@@Base+0x63c>  // b.any
   21b1c:	ldrb	w8, [x0, #1]
   21b20:	cbz	w8, 21bb0 <rl_filename_completion_function@@Base+0x6c8>
   21b24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21b28:	ldr	x8, [x8, #2176]
   21b2c:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   21b30:	ldr	w9, [x8]
   21b34:	ldr	x8, [x24, #760]
   21b38:	cbz	w9, 21bc8 <rl_filename_completion_function@@Base+0x6e0>
   21b3c:	ldrb	w9, [x8]
   21b40:	cmp	w9, #0x7e
   21b44:	b.ne	21bc8 <rl_filename_completion_function@@Base+0x6e0>  // b.any
   21b48:	bl	16440 <strlen@plt>
   21b4c:	mov	x22, x0
   21b50:	lsl	x24, x0, #32
   21b54:	mov	x8, #0x200000000           	// #8589934592
   21b58:	add	x0, x21, #0x13
   21b5c:	add	x25, x24, x8
   21b60:	bl	16440 <strlen@plt>
   21b64:	add	x0, x0, x25, asr #32
   21b68:	bl	16bf0 <xmalloc@plt>
   21b6c:	ldr	x1, [x23, #752]
   21b70:	mov	x21, x0
   21b74:	bl	17480 <strcpy@plt>
   21b78:	ldr	x8, [x23, #752]
   21b7c:	mov	x9, #0xffffffff00000000    	// #-4294967296
   21b80:	add	x9, x24, x9
   21b84:	asr	x9, x9, #32
   21b88:	ldrb	w8, [x8, x9]
   21b8c:	cmp	w8, #0x2f
   21b90:	b.eq	21c28 <rl_filename_completion_function@@Base+0x740>  // b.none
   21b94:	sxtw	x8, w22
   21b98:	asr	x9, x24, #32
   21b9c:	mov	w10, #0x2f                  	// #47
   21ba0:	add	x22, x8, #0x1
   21ba4:	strb	w10, [x21, x9]
   21ba8:	strb	wzr, [x21, x22]
   21bac:	b	21c28 <rl_filename_completion_function@@Base+0x740>
   21bb0:	mov	x0, x20
   21bb4:	bl	16440 <strlen@plt>
   21bb8:	add	x0, x0, #0x1
   21bbc:	bl	16bf0 <xmalloc@plt>
   21bc0:	mov	x21, x0
   21bc4:	b	21c2c <rl_filename_completion_function@@Base+0x744>
   21bc8:	mov	x0, x8
   21bcc:	bl	16440 <strlen@plt>
   21bd0:	mov	x22, x0
   21bd4:	lsl	x23, x0, #32
   21bd8:	mov	x8, #0x200000000           	// #8589934592
   21bdc:	add	x0, x21, #0x13
   21be0:	add	x25, x23, x8
   21be4:	bl	16440 <strlen@plt>
   21be8:	add	x0, x0, x25, asr #32
   21bec:	bl	16bf0 <xmalloc@plt>
   21bf0:	ldr	x1, [x24, #760]
   21bf4:	mov	x21, x0
   21bf8:	bl	17480 <strcpy@plt>
   21bfc:	ldr	x8, [x24, #760]
   21c00:	mov	x9, #0xffffffff00000000    	// #-4294967296
   21c04:	add	x9, x23, x9
   21c08:	asr	x9, x9, #32
   21c0c:	ldrb	w8, [x8, x9]
   21c10:	cmp	w8, #0x2f
   21c14:	b.eq	21c28 <rl_filename_completion_function@@Base+0x740>  // b.none
   21c18:	add	w22, w22, #0x1
   21c1c:	asr	x8, x23, #32
   21c20:	mov	w9, #0x2f                  	// #47
   21c24:	strb	w9, [x21, x8]
   21c28:	add	x0, x21, w22, sxtw
   21c2c:	mov	x1, x20
   21c30:	bl	17480 <strcpy@plt>
   21c34:	cmp	x20, x19
   21c38:	b.eq	21ce4 <rl_filename_completion_function@@Base+0x7fc>  // b.none
   21c3c:	mov	x0, x20
   21c40:	bl	169f0 <xfree@plt>
   21c44:	b	21ce4 <rl_filename_completion_function@@Base+0x7fc>
   21c48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21c4c:	ldr	x8, [x8, #2280]
   21c50:	ldr	x8, [x8]
   21c54:	cbz	x8, 21d08 <rl_filename_completion_function@@Base+0x820>
   21c58:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   21c5c:	add	x0, x0, #0x2f0
   21c60:	blr	x8
   21c64:	cbz	w0, 21d08 <rl_filename_completion_function@@Base+0x820>
   21c68:	ldr	x0, [x22, #760]
   21c6c:	bl	169f0 <xfree@plt>
   21c70:	ldr	x0, [x21, #752]
   21c74:	bl	16440 <strlen@plt>
   21c78:	add	x0, x0, #0x1
   21c7c:	bl	16bf0 <xmalloc@plt>
   21c80:	ldr	x1, [x21, #752]
   21c84:	bl	17480 <strcpy@plt>
   21c88:	str	x0, [x22, #760]
   21c8c:	b	2168c <rl_filename_completion_function@@Base+0x1a4>
   21c90:	ldr	x0, [x25, #736]
   21c94:	cbz	x0, 21ca0 <rl_filename_completion_function@@Base+0x7b8>
   21c98:	bl	16e40 <closedir@plt>
   21c9c:	str	xzr, [x25, #736]
   21ca0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   21ca4:	ldr	x0, [x19, #752]
   21ca8:	cbz	x0, 21cb4 <rl_filename_completion_function@@Base+0x7cc>
   21cac:	bl	169f0 <xfree@plt>
   21cb0:	str	xzr, [x19, #752]
   21cb4:	ldr	x0, [x28, #744]
   21cb8:	cbz	x0, 21cc4 <rl_filename_completion_function@@Base+0x7dc>
   21cbc:	bl	169f0 <xfree@plt>
   21cc0:	str	xzr, [x28, #744]
   21cc4:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   21cc8:	ldr	x0, [x19, #760]
   21ccc:	cbz	x0, 21ce0 <rl_filename_completion_function@@Base+0x7f8>
   21cd0:	bl	169f0 <xfree@plt>
   21cd4:	mov	x21, xzr
   21cd8:	str	xzr, [x19, #760]
   21cdc:	b	21ce4 <rl_filename_completion_function@@Base+0x7fc>
   21ce0:	mov	x21, xzr
   21ce4:	mov	x0, x21
   21ce8:	ldp	x20, x19, [sp, #112]
   21cec:	ldp	x22, x21, [sp, #96]
   21cf0:	ldp	x24, x23, [sp, #80]
   21cf4:	ldp	x26, x25, [sp, #64]
   21cf8:	ldp	x28, x27, [sp, #48]
   21cfc:	ldp	x29, x30, [sp, #32]
   21d00:	add	sp, sp, #0x80
   21d04:	ret
   21d08:	cbnz	w19, 2168c <rl_filename_completion_function@@Base+0x1a4>
   21d0c:	ldr	w8, [x20]
   21d10:	cbz	w8, 2168c <rl_filename_completion_function@@Base+0x1a4>
   21d14:	ldr	x8, [x23]
   21d18:	cbz	x8, 2168c <rl_filename_completion_function@@Base+0x1a4>
   21d1c:	ldr	x0, [x21, #752]
   21d20:	bl	169f0 <xfree@plt>
   21d24:	ldr	x0, [x22, #760]
   21d28:	bl	16440 <strlen@plt>
   21d2c:	add	x0, x0, #0x1
   21d30:	bl	16bf0 <xmalloc@plt>
   21d34:	ldr	x1, [x22, #760]
   21d38:	bl	17480 <strcpy@plt>
   21d3c:	str	x0, [x21, #752]
   21d40:	b	2168c <rl_filename_completion_function@@Base+0x1a4>
   21d44:	stp	x29, x30, [sp, #-64]!
   21d48:	str	x23, [sp, #16]
   21d4c:	stp	x22, x21, [sp, #32]
   21d50:	stp	x20, x19, [sp, #48]
   21d54:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21d58:	ldr	x9, [x9, #3584]
   21d5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21d60:	ldr	x8, [x8, #2120]
   21d64:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21d68:	str	w4, [x9]
   21d6c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21d70:	ldr	x8, [x8]
   21d74:	ldr	x9, [x9, #2376]
   21d78:	mov	x20, x3
   21d7c:	mov	x21, x0
   21d80:	mov	x29, sp
   21d84:	str	w5, [x9]
   21d88:	ldr	x22, [x22, #2808]
   21d8c:	cbz	x8, 21df0 <rl_filename_completion_function@@Base+0x908>
   21d90:	mov	x0, x21
   21d94:	blr	x8
   21d98:	ldr	w8, [x22]
   21d9c:	mov	x19, x0
   21da0:	cbz	w8, 21ddc <rl_filename_completion_function@@Base+0x8f4>
   21da4:	cbz	x19, 21dc8 <rl_filename_completion_function@@Base+0x8e0>
   21da8:	ldr	x0, [x19]
   21dac:	cbz	x0, 21dc0 <rl_filename_completion_function@@Base+0x8d8>
   21db0:	add	x23, x19, #0x8
   21db4:	bl	169f0 <xfree@plt>
   21db8:	ldr	x0, [x23], #8
   21dbc:	cbnz	x0, 21db4 <rl_filename_completion_function@@Base+0x8cc>
   21dc0:	mov	x0, x19
   21dc4:	bl	169f0 <xfree@plt>
   21dc8:	ldr	w8, [x22]
   21dcc:	cbz	w8, 21dd8 <rl_filename_completion_function@@Base+0x8f0>
   21dd0:	ldr	w0, [x22]
   21dd4:	bl	17460 <_rl_signal_handler@plt>
   21dd8:	mov	x19, xzr
   21ddc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21de0:	ldr	x8, [x8, #3440]
   21de4:	cbnz	x19, 21e44 <rl_filename_completion_function@@Base+0x95c>
   21de8:	ldr	w9, [x8]
   21dec:	cbnz	w9, 21e44 <rl_filename_completion_function@@Base+0x95c>
   21df0:	mov	x0, x21
   21df4:	mov	x1, x20
   21df8:	bl	16690 <rl_completion_matches@plt>
   21dfc:	ldr	w8, [x22]
   21e00:	mov	x19, x0
   21e04:	cbz	w8, 21e48 <rl_filename_completion_function@@Base+0x960>
   21e08:	cbz	x19, 21e2c <rl_filename_completion_function@@Base+0x944>
   21e0c:	ldr	x0, [x19]
   21e10:	cbz	x0, 21e24 <rl_filename_completion_function@@Base+0x93c>
   21e14:	add	x20, x19, #0x8
   21e18:	bl	169f0 <xfree@plt>
   21e1c:	ldr	x0, [x20], #8
   21e20:	cbnz	x0, 21e18 <rl_filename_completion_function@@Base+0x930>
   21e24:	mov	x0, x19
   21e28:	bl	169f0 <xfree@plt>
   21e2c:	ldr	w8, [x22]
   21e30:	cbz	w8, 21e3c <rl_filename_completion_function@@Base+0x954>
   21e34:	ldr	w0, [x22]
   21e38:	bl	17460 <_rl_signal_handler@plt>
   21e3c:	mov	x19, xzr
   21e40:	b	21e48 <rl_filename_completion_function@@Base+0x960>
   21e44:	str	wzr, [x8]
   21e48:	mov	x0, x19
   21e4c:	ldp	x20, x19, [sp, #48]
   21e50:	ldp	x22, x21, [sp, #32]
   21e54:	ldr	x23, [sp, #16]
   21e58:	ldp	x29, x30, [sp], #64
   21e5c:	ret
   21e60:	sub	sp, sp, #0x60
   21e64:	stp	x29, x30, [sp, #16]
   21e68:	stp	x26, x25, [sp, #32]
   21e6c:	stp	x24, x23, [sp, #48]
   21e70:	stp	x22, x21, [sp, #64]
   21e74:	stp	x20, x19, [sp, #80]
   21e78:	ldr	x20, [x0]
   21e7c:	add	x29, sp, #0x10
   21e80:	cbz	x20, 21f4c <rl_filename_completion_function@@Base+0xa64>
   21e84:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21e88:	ldr	x8, [x8, #3240]
   21e8c:	mov	x19, x0
   21e90:	mov	w21, w1
   21e94:	ldr	w8, [x8]
   21e98:	cbz	w8, 21ff4 <rl_filename_completion_function@@Base+0xb0c>
   21e9c:	mov	x9, xzr
   21ea0:	mov	x8, #0xfffffffe00000000    	// #-8589934592
   21ea4:	mov	x10, #0x100000000           	// #4294967296
   21ea8:	ldr	x11, [x20, x9, lsl #3]
   21eac:	add	x9, x9, #0x1
   21eb0:	add	x8, x8, x10
   21eb4:	cbnz	x11, 21ea8 <rl_filename_completion_function@@Base+0x9c0>
   21eb8:	cmp	w9, #0x1
   21ebc:	b.eq	21ee8 <rl_filename_completion_function@@Base+0xa00>  // b.none
   21ec0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21ec4:	ldr	x9, [x9, #2144]
   21ec8:	ldr	w9, [x9]
   21ecc:	cbz	w9, 21ee8 <rl_filename_completion_function@@Base+0xa00>
   21ed0:	adrp	x3, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   21ed4:	ldr	x3, [x3, #3544]
   21ed8:	add	x0, x20, #0x8
   21edc:	asr	x1, x8, #32
   21ee0:	mov	w2, #0x8                   	// #8
   21ee4:	bl	16720 <qsort@plt>
   21ee8:	ldr	x0, [x20]
   21eec:	bl	16440 <strlen@plt>
   21ef0:	add	x0, x0, #0x1
   21ef4:	bl	16bf0 <xmalloc@plt>
   21ef8:	ldr	x1, [x20]
   21efc:	mov	x22, x0
   21f00:	bl	17480 <strcpy@plt>
   21f04:	ldr	x1, [x20, #8]
   21f08:	cbz	x1, 21f54 <rl_filename_completion_function@@Base+0xa6c>
   21f0c:	mov	w24, wzr
   21f10:	sub	x25, x29, #0x4
   21f14:	mov	x26, x20
   21f18:	b	21f2c <rl_filename_completion_function@@Base+0xa44>
   21f1c:	add	w24, w24, #0x1
   21f20:	ldr	x1, [x26, #16]
   21f24:	add	x26, x26, #0x8
   21f28:	cbz	x1, 21f58 <rl_filename_completion_function@@Base+0xa70>
   21f2c:	ldr	x23, [x26]
   21f30:	mov	x0, x23
   21f34:	bl	170a0 <strcmp@plt>
   21f38:	cbnz	w0, 21f1c <rl_filename_completion_function@@Base+0xa34>
   21f3c:	mov	x0, x23
   21f40:	bl	169f0 <xfree@plt>
   21f44:	str	x25, [x26]
   21f48:	b	21f20 <rl_filename_completion_function@@Base+0xa38>
   21f4c:	mov	w0, wzr
   21f50:	b	2208c <rl_filename_completion_function@@Base+0xba4>
   21f54:	mov	w24, wzr
   21f58:	add	w8, w24, #0x3
   21f5c:	sbfiz	x0, x8, #3, #32
   21f60:	bl	16bf0 <xmalloc@plt>
   21f64:	ldr	x10, [x20, #8]
   21f68:	mov	x23, x0
   21f6c:	cbz	x10, 21fa0 <rl_filename_completion_function@@Base+0xab8>
   21f70:	add	x8, x20, #0x10
   21f74:	mov	w24, #0x1                   	// #1
   21f78:	sub	x9, x29, #0x4
   21f7c:	b	21f88 <rl_filename_completion_function@@Base+0xaa0>
   21f80:	ldr	x10, [x8], #8
   21f84:	cbz	x10, 21fa4 <rl_filename_completion_function@@Base+0xabc>
   21f88:	cmp	x10, x9
   21f8c:	b.eq	21f80 <rl_filename_completion_function@@Base+0xa98>  // b.none
   21f90:	add	w11, w24, #0x1
   21f94:	str	x10, [x23, w24, sxtw #3]
   21f98:	mov	w24, w11
   21f9c:	b	21f80 <rl_filename_completion_function@@Base+0xa98>
   21fa0:	mov	w24, #0x1                   	// #1
   21fa4:	str	xzr, [x23, w24, sxtw #3]
   21fa8:	ldr	x0, [x20]
   21fac:	sub	x8, x29, #0x4
   21fb0:	cmp	x0, x8
   21fb4:	b.eq	21fbc <rl_filename_completion_function@@Base+0xad4>  // b.none
   21fb8:	bl	169f0 <xfree@plt>
   21fbc:	cmp	w24, #0x2
   21fc0:	str	x22, [x23]
   21fc4:	b.ne	21fe8 <rl_filename_completion_function@@Base+0xb00>  // b.any
   21fc8:	ldr	x24, [x23, #8]
   21fcc:	mov	x0, x22
   21fd0:	mov	x1, x24
   21fd4:	bl	170a0 <strcmp@plt>
   21fd8:	cbnz	w0, 21fe8 <rl_filename_completion_function@@Base+0xb00>
   21fdc:	mov	x0, x24
   21fe0:	bl	169f0 <xfree@plt>
   21fe4:	str	xzr, [x23, #8]
   21fe8:	mov	x0, x20
   21fec:	bl	169f0 <xfree@plt>
   21ff0:	mov	x20, x23
   21ff4:	mov	w0, #0x1                   	// #1
   21ff8:	cbz	w21, 22088 <rl_filename_completion_function@@Base+0xba0>
   21ffc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22000:	ldr	x8, [x8, #3280]
   22004:	ldr	x8, [x8]
   22008:	cbz	x8, 22088 <rl_filename_completion_function@@Base+0xba0>
   2200c:	mov	x22, xzr
   22010:	add	x9, x20, x22, lsl #3
   22014:	ldr	x9, [x9, #8]
   22018:	add	x22, x22, #0x1
   2201c:	cbnz	x9, 22010 <rl_filename_completion_function@@Base+0xb28>
   22020:	mov	x0, x20
   22024:	blr	x8
   22028:	ldr	x21, [x20]
   2202c:	cbz	x21, 22078 <rl_filename_completion_function@@Base+0xb90>
   22030:	mov	x8, xzr
   22034:	add	x9, x20, x8, lsl #3
   22038:	ldr	x9, [x9, #8]
   2203c:	add	x8, x8, #0x1
   22040:	cbnz	x9, 22034 <rl_filename_completion_function@@Base+0xb4c>
   22044:	cmp	w8, #0x2
   22048:	mov	w0, #0x1                   	// #1
   2204c:	b.cc	22088 <rl_filename_completion_function@@Base+0xba0>  // b.lo, b.ul, b.last
   22050:	cmp	w8, w22
   22054:	b.cs	22088 <rl_filename_completion_function@@Base+0xba0>  // b.hs, b.nlast
   22058:	sub	w1, w8, #0x1
   2205c:	mov	x0, x20
   22060:	mov	x2, x21
   22064:	bl	229dc <rl_completion_matches@@Base+0x140>
   22068:	mov	x0, x21
   2206c:	bl	171b0 <free@plt>
   22070:	mov	w0, #0x1                   	// #1
   22074:	b	22088 <rl_filename_completion_function@@Base+0xba0>
   22078:	mov	x0, x20
   2207c:	bl	171b0 <free@plt>
   22080:	mov	x20, xzr
   22084:	mov	w0, wzr
   22088:	str	x20, [x19]
   2208c:	ldp	x20, x19, [sp, #80]
   22090:	ldp	x22, x21, [sp, #64]
   22094:	ldp	x24, x23, [sp, #48]
   22098:	ldp	x26, x25, [sp, #32]
   2209c:	ldp	x29, x30, [sp, #16]
   220a0:	add	sp, sp, #0x60
   220a4:	ret
   220a8:	stp	x29, x30, [sp, #-64]!
   220ac:	stp	x24, x23, [sp, #16]
   220b0:	stp	x22, x21, [sp, #32]
   220b4:	stp	x20, x19, [sp, #48]
   220b8:	mov	x22, x3
   220bc:	mov	w23, w2
   220c0:	mov	w20, w1
   220c4:	mov	x19, x0
   220c8:	mov	x29, sp
   220cc:	cbz	x3, 220e0 <rl_filename_completion_function@@Base+0xbf8>
   220d0:	ldrb	w24, [x22]
   220d4:	mov	x21, x19
   220d8:	cbnz	x19, 220ec <rl_filename_completion_function@@Base+0xc04>
   220dc:	b	22190 <rl_filename_completion_function@@Base+0xca8>
   220e0:	mov	w24, wzr
   220e4:	mov	x21, x19
   220e8:	cbz	x19, 22190 <rl_filename_completion_function@@Base+0xca8>
   220ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   220f0:	ldr	x8, [x8, #2160]
   220f4:	mov	x21, x19
   220f8:	ldr	x0, [x8]
   220fc:	cbz	x0, 22190 <rl_filename_completion_function@@Base+0xca8>
   22100:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22104:	ldr	x8, [x8, #3768]
   22108:	mov	x21, x19
   2210c:	ldr	w8, [x8]
   22110:	cbz	w8, 22190 <rl_filename_completion_function@@Base+0xca8>
   22114:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22118:	ldr	x8, [x8, #1904]
   2211c:	mov	x21, x19
   22120:	ldr	w8, [x8]
   22124:	cbz	w8, 22190 <rl_filename_completion_function@@Base+0xca8>
   22128:	cbz	x22, 22140 <rl_filename_completion_function@@Base+0xc58>
   2212c:	ldrb	w1, [x22]
   22130:	cbz	w1, 22140 <rl_filename_completion_function@@Base+0xc58>
   22134:	bl	17380 <strchr@plt>
   22138:	mov	x21, x19
   2213c:	cbz	x0, 22194 <rl_filename_completion_function@@Base+0xcac>
   22140:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22144:	ldr	x8, [x8, #3592]
   22148:	mov	x21, x19
   2214c:	ldr	x1, [x8]
   22150:	cbz	x1, 22194 <rl_filename_completion_function@@Base+0xcac>
   22154:	mov	x0, x19
   22158:	bl	16be0 <strpbrk@plt>
   2215c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22160:	ldr	x8, [x8, #3080]
   22164:	cmp	x0, #0x0
   22168:	csel	w1, wzr, w23, eq  // eq = none
   2216c:	mov	x21, x19
   22170:	ldr	x8, [x8]
   22174:	cbz	x8, 22194 <rl_filename_completion_function@@Base+0xcac>
   22178:	mov	x21, x19
   2217c:	cbz	w1, 22194 <rl_filename_completion_function@@Base+0xcac>
   22180:	mov	x0, x19
   22184:	mov	x2, x22
   22188:	blr	x8
   2218c:	mov	x21, x0
   22190:	cbz	x21, 222ec <rl_filename_completion_function@@Base+0xe04>
   22194:	mov	x0, x21
   22198:	bl	16440 <strlen@plt>
   2219c:	cbz	x22, 22260 <rl_filename_completion_function@@Base+0xd78>
   221a0:	ldrb	w8, [x22]
   221a4:	cbz	w20, 221d8 <rl_filename_completion_function@@Base+0xcf0>
   221a8:	cbz	w8, 221d8 <rl_filename_completion_function@@Base+0xcf0>
   221ac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   221b0:	ldr	x9, [x9, #2480]
   221b4:	ldr	x10, [x9]
   221b8:	sxtw	x9, w20
   221bc:	sub	x9, x9, #0x1
   221c0:	ldrb	w10, [x10, x9]
   221c4:	cmp	w10, w8
   221c8:	b.ne	221d8 <rl_filename_completion_function@@Base+0xcf0>  // b.any
   221cc:	ldrb	w10, [x21]
   221d0:	cmp	w10, w8
   221d4:	b.eq	22218 <rl_filename_completion_function@@Base+0xd30>  // b.none
   221d8:	cbz	w20, 22214 <rl_filename_completion_function@@Base+0xd2c>
   221dc:	cmp	w24, w8
   221e0:	b.eq	22214 <rl_filename_completion_function@@Base+0xd2c>  // b.none
   221e4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   221e8:	ldr	x9, [x9, #2480]
   221ec:	ldr	x10, [x9]
   221f0:	sxtw	x9, w20
   221f4:	sub	x9, x9, #0x1
   221f8:	ldrb	w10, [x10, x9]
   221fc:	cmp	w24, w10
   22200:	b.ne	22214 <rl_filename_completion_function@@Base+0xd2c>  // b.any
   22204:	ldrb	w10, [x21]
   22208:	cmp	w24, w10
   2220c:	csel	w9, w20, w9, eq  // eq = none
   22210:	b	22218 <rl_filename_completion_function@@Base+0xd30>
   22214:	mov	w9, w20
   22218:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2221c:	ldr	x10, [x10, #3512]
   22220:	ldrsw	x10, [x10]
   22224:	sub	w2, w10, #0x1
   22228:	cbz	w8, 22258 <rl_filename_completion_function@@Base+0xd70>
   2222c:	cbz	w2, 22258 <rl_filename_completion_function@@Base+0xd70>
   22230:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22234:	ldr	x11, [x11, #2480]
   22238:	ldr	x11, [x11]
   2223c:	ldrb	w11, [x11, x10]
   22240:	cmp	w11, w8
   22244:	b.ne	22258 <rl_filename_completion_function@@Base+0xd70>  // b.any
   22248:	sub	w11, w0, #0x1
   2224c:	ldrb	w11, [x21, w11, sxtw]
   22250:	cmp	w11, w8
   22254:	csel	w2, w10, w2, eq  // eq = none
   22258:	mov	w20, w9
   2225c:	b	22270 <rl_filename_completion_function@@Base+0xd88>
   22260:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22264:	ldr	x8, [x8, #3512]
   22268:	ldr	w8, [x8]
   2226c:	sub	w2, w8, #0x1
   22270:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22274:	ldr	x8, [x8, #2056]
   22278:	ldr	w8, [x8]
   2227c:	cbz	w8, 222d8 <rl_filename_completion_function@@Base+0xdf0>
   22280:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22284:	ldr	x8, [x8, #2656]
   22288:	ldrsw	x8, [x8]
   2228c:	cmp	w20, w8
   22290:	b.ge	22300 <rl_filename_completion_function@@Base+0xe18>  // b.tcont
   22294:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22298:	ldr	x9, [x9, #2480]
   2229c:	sxtw	x20, w20
   222a0:	mov	x22, x21
   222a4:	ldr	x9, [x9]
   222a8:	ldrb	w10, [x22]
   222ac:	cbz	w10, 222cc <rl_filename_completion_function@@Base+0xde4>
   222b0:	ldrb	w11, [x9, x20]
   222b4:	cmp	w11, w10
   222b8:	b.ne	222cc <rl_filename_completion_function@@Base+0xde4>  // b.any
   222bc:	add	x20, x20, #0x1
   222c0:	cmp	x20, x8
   222c4:	add	x22, x22, #0x1
   222c8:	b.lt	222a8 <rl_filename_completion_function@@Base+0xdc0>  // b.tstop
   222cc:	cmp	w20, w2
   222d0:	b.gt	2230c <rl_filename_completion_function@@Base+0xe24>
   222d4:	b	22314 <rl_filename_completion_function@@Base+0xe2c>
   222d8:	mov	x0, x21
   222dc:	mov	w1, w20
   222e0:	bl	175d0 <_rl_replace_text@plt>
   222e4:	cmp	x21, x19
   222e8:	b.ne	22340 <rl_filename_completion_function@@Base+0xe58>  // b.any
   222ec:	ldp	x20, x19, [sp, #48]
   222f0:	ldp	x22, x21, [sp, #32]
   222f4:	ldp	x24, x23, [sp, #16]
   222f8:	ldp	x29, x30, [sp], #64
   222fc:	ret
   22300:	mov	x22, x21
   22304:	cmp	w20, w2
   22308:	b.le	22314 <rl_filename_completion_function@@Base+0xe2c>
   2230c:	ldrb	w8, [x22]
   22310:	cbz	w8, 22320 <rl_filename_completion_function@@Base+0xe38>
   22314:	mov	x0, x22
   22318:	mov	w1, w20
   2231c:	bl	175d0 <_rl_replace_text@plt>
   22320:	mov	x0, x22
   22324:	bl	16440 <strlen@plt>
   22328:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2232c:	ldr	x9, [x9, #3512]
   22330:	add	w8, w20, w0
   22334:	str	w8, [x9]
   22338:	cmp	x21, x19
   2233c:	b.eq	222ec <rl_filename_completion_function@@Base+0xe04>  // b.none
   22340:	mov	x0, x21
   22344:	ldp	x20, x19, [sp, #48]
   22348:	ldp	x22, x21, [sp, #32]
   2234c:	ldp	x24, x23, [sp, #16]
   22350:	ldp	x29, x30, [sp], #64
   22354:	b	169f0 <xfree@plt>
   22358:	stp	x29, x30, [sp, #-64]!
   2235c:	stp	x24, x23, [sp, #16]
   22360:	stp	x22, x21, [sp, #32]
   22364:	stp	x20, x19, [sp, #48]
   22368:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2236c:	ldr	x8, [x8, #3600]
   22370:	mov	x19, x0
   22374:	mov	x29, sp
   22378:	ldr	w8, [x8]
   2237c:	mov	w0, w8
   22380:	bl	176d0 <_rl_move_vert@plt>
   22384:	ldr	x21, [x19, #8]
   22388:	cbz	x21, 22464 <rl_filename_completion_function@@Base+0xf7c>
   2238c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22390:	ldr	x23, [x23, #3768]
   22394:	mov	w20, wzr
   22398:	mov	w22, #0x1                   	// #1
   2239c:	b	223bc <rl_filename_completion_function@@Base+0xed4>
   223a0:	mov	x0, x21
   223a4:	bl	210a4 <rl_display_match_list@@Base+0x784>
   223a8:	add	x22, x22, #0x1
   223ac:	ldr	x21, [x19, x22, lsl #3]
   223b0:	cmp	w0, w20
   223b4:	csel	w20, w0, w20, gt
   223b8:	cbz	x21, 22430 <rl_filename_completion_function@@Base+0xf48>
   223bc:	ldr	w8, [x23]
   223c0:	cbz	w8, 223a0 <rl_filename_completion_function@@Base+0xeb8>
   223c4:	mov	w1, #0x2f                  	// #47
   223c8:	mov	x0, x21
   223cc:	bl	16ee0 <strrchr@plt>
   223d0:	cbz	x0, 223a0 <rl_filename_completion_function@@Base+0xeb8>
   223d4:	ldrb	w9, [x0]
   223d8:	mov	x8, x0
   223dc:	cbz	w9, 223a0 <rl_filename_completion_function@@Base+0xeb8>
   223e0:	mov	x10, x8
   223e4:	ldrb	w9, [x10, #1]!
   223e8:	cmp	w9, #0x0
   223ec:	ccmp	x8, x21, #0x0, eq  // eq = none
   223f0:	csel	x0, x21, x10, eq  // eq = none
   223f4:	cmp	x8, x21
   223f8:	b.eq	223a4 <rl_filename_completion_function@@Base+0xebc>  // b.none
   223fc:	cbnz	w9, 223a4 <rl_filename_completion_function@@Base+0xebc>
   22400:	sub	x8, x8, #0x1
   22404:	ldrb	w9, [x8]
   22408:	cmp	x8, x21
   2240c:	b.ls	22424 <rl_filename_completion_function@@Base+0xf3c>  // b.plast
   22410:	cmp	w9, #0x2f
   22414:	sub	x8, x8, #0x1
   22418:	b.ne	22404 <rl_filename_completion_function@@Base+0xf1c>  // b.any
   2241c:	add	x0, x8, #0x2
   22420:	b	223a4 <rl_filename_completion_function@@Base+0xebc>
   22424:	cmp	w9, #0x2f
   22428:	csinc	x0, x21, x8, ne  // ne = any
   2242c:	b	223a4 <rl_filename_completion_function@@Base+0xebc>
   22430:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22434:	ldr	x8, [x8, #2456]
   22438:	sub	w21, w22, #0x1
   2243c:	ldr	x3, [x8]
   22440:	cbz	x3, 224d8 <rl_filename_completion_function@@Base+0xff0>
   22444:	mov	x0, x19
   22448:	mov	w1, w21
   2244c:	mov	w2, w20
   22450:	ldp	x20, x19, [sp, #48]
   22454:	ldp	x22, x21, [sp, #32]
   22458:	ldp	x24, x23, [sp, #16]
   2245c:	ldp	x29, x30, [sp], #64
   22460:	br	x3
   22464:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22468:	ldr	x8, [x8, #3768]
   2246c:	ldr	x20, [x19]
   22470:	ldr	w8, [x8]
   22474:	cbz	w8, 2259c <rl_filename_completion_function@@Base+0x10b4>
   22478:	mov	w1, #0x2f                  	// #47
   2247c:	mov	x0, x20
   22480:	bl	16ee0 <strrchr@plt>
   22484:	cbz	x0, 2259c <rl_filename_completion_function@@Base+0x10b4>
   22488:	ldrb	w8, [x0]
   2248c:	mov	x21, x20
   22490:	cbz	w8, 225a0 <rl_filename_completion_function@@Base+0x10b8>
   22494:	mov	x9, x0
   22498:	ldrb	w8, [x9, #1]!
   2249c:	cmp	w8, #0x0
   224a0:	ccmp	x0, x20, #0x0, eq  // eq = none
   224a4:	csel	x21, x20, x9, eq  // eq = none
   224a8:	cmp	x0, x20
   224ac:	b.eq	225a0 <rl_filename_completion_function@@Base+0x10b8>  // b.none
   224b0:	cbnz	w8, 225a0 <rl_filename_completion_function@@Base+0x10b8>
   224b4:	sub	x8, x0, #0x1
   224b8:	ldrb	w9, [x8]
   224bc:	cmp	x8, x20
   224c0:	b.ls	225f4 <rl_filename_completion_function@@Base+0x110c>  // b.plast
   224c4:	cmp	w9, #0x2f
   224c8:	sub	x8, x8, #0x1
   224cc:	b.ne	224b8 <rl_filename_completion_function@@Base+0xfd0>  // b.any
   224d0:	add	x21, x8, #0x2
   224d4:	b	225a0 <rl_filename_completion_function@@Base+0x10b8>
   224d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   224dc:	ldr	x8, [x8, #2088]
   224e0:	ldr	w8, [x8]
   224e4:	cmp	w8, #0x1
   224e8:	b.lt	225bc <rl_filename_completion_function@@Base+0x10d4>  // b.tstop
   224ec:	cmp	w8, w22
   224f0:	b.ge	225bc <rl_filename_completion_function@@Base+0x10d4>  // b.tcont
   224f4:	bl	171e0 <rl_crlf@plt>
   224f8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   224fc:	ldr	x22, [x22, #1928]
   22500:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   22504:	add	x1, x1, #0x5a9
   22508:	mov	w2, w21
   2250c:	ldr	x0, [x22]
   22510:	bl	17950 <fprintf@plt>
   22514:	ldr	x0, [x22]
   22518:	bl	17430 <fflush@plt>
   2251c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22520:	ldr	x22, [x22, #2984]
   22524:	ldr	x8, [x22]
   22528:	tbnz	w8, #19, 225bc <rl_filename_completion_function@@Base+0x10d4>
   2252c:	mov	x24, #0x100000001           	// #4294967297
   22530:	mov	w23, #0x1                   	// #1
   22534:	movk	x24, #0x2, lsl #48
   22538:	b	22548 <rl_filename_completion_function@@Base+0x1060>
   2253c:	bl	174a0 <_rl_abort_internal@plt>
   22540:	bl	17390 <rl_ding@plt>
   22544:	ldr	x8, [x22]
   22548:	orr	x8, x8, #0x40
   2254c:	str	x8, [x22]
   22550:	bl	16e60 <rl_read_key@plt>
   22554:	ldr	x9, [x22]
   22558:	sub	w8, w0, #0x4e
   2255c:	cmp	w8, #0x31
   22560:	and	x9, x9, #0xffffffffffffffbf
   22564:	str	x9, [x22]
   22568:	b.hi	22584 <rl_filename_completion_function@@Base+0x109c>  // b.pmore
   2256c:	lsl	x9, x23, x8
   22570:	tst	x9, x24
   22574:	b.ne	225b4 <rl_filename_completion_function@@Base+0x10cc>  // b.any
   22578:	lsl	x8, x23, x8
   2257c:	tst	x8, #0x80000000800
   22580:	b.ne	225bc <rl_filename_completion_function@@Base+0x10d4>  // b.any
   22584:	cmp	w0, #0x20
   22588:	b.eq	225bc <rl_filename_completion_function@@Base+0x10d4>  // b.none
   2258c:	cmp	w0, #0x7
   22590:	b.eq	2253c <rl_filename_completion_function@@Base+0x1054>  // b.none
   22594:	tbz	w0, #31, 22540 <rl_filename_completion_function@@Base+0x1058>
   22598:	b	2253c <rl_filename_completion_function@@Base+0x1054>
   2259c:	mov	x21, x20
   225a0:	bl	171e0 <rl_crlf@plt>
   225a4:	ldr	x1, [x19]
   225a8:	mov	x0, x21
   225ac:	mov	w2, wzr
   225b0:	bl	21174 <rl_display_match_list@@Base+0x854>
   225b4:	bl	171e0 <rl_crlf@plt>
   225b8:	b	225cc <rl_filename_completion_function@@Base+0x10e4>
   225bc:	mov	x0, x19
   225c0:	mov	w1, w21
   225c4:	mov	w2, w20
   225c8:	bl	178a0 <rl_display_match_list@plt>
   225cc:	bl	164d0 <rl_forced_update_display@plt>
   225d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   225d4:	ldr	x8, [x8, #3064]
   225d8:	mov	w9, #0x1                   	// #1
   225dc:	str	w9, [x8]
   225e0:	ldp	x20, x19, [sp, #48]
   225e4:	ldp	x22, x21, [sp, #32]
   225e8:	ldp	x24, x23, [sp, #16]
   225ec:	ldp	x29, x30, [sp], #64
   225f0:	ret
   225f4:	cmp	w9, #0x2f
   225f8:	csinc	x21, x20, x8, ne  // ne = any
   225fc:	b	225a0 <rl_filename_completion_function@@Base+0x10b8>
   22600:	sub	sp, sp, #0x150
   22604:	stp	x29, x30, [sp, #272]
   22608:	str	x28, [sp, #288]
   2260c:	stp	x22, x21, [sp, #304]
   22610:	stp	x20, x19, [sp, #320]
   22614:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22618:	ldr	x21, [x21, #3512]
   2261c:	mov	w20, w3
   22620:	mov	w9, wzr
   22624:	add	x29, sp, #0x110
   22628:	ldr	w10, [x21]
   2262c:	sxtw	x8, w10
   22630:	cbz	w2, 22668 <rl_filename_completion_function@@Base+0x1180>
   22634:	cbz	w10, 22668 <rl_filename_completion_function@@Base+0x1180>
   22638:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2263c:	ldr	x10, [x10, #2432]
   22640:	ldr	w10, [x10]
   22644:	cbnz	w10, 22668 <rl_filename_completion_function@@Base+0x1180>
   22648:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2264c:	ldr	x9, [x9, #2480]
   22650:	ldr	x9, [x9]
   22654:	add	x9, x8, x9
   22658:	ldurb	w9, [x9, #-1]
   2265c:	cmp	w9, w2
   22660:	b.ne	22690 <rl_filename_completion_function@@Base+0x11a8>  // b.any
   22664:	mov	w9, wzr
   22668:	cbnz	w1, 2269c <rl_filename_completion_function@@Base+0x11b4>
   2266c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22670:	ldr	x10, [x10, #3984]
   22674:	ldr	w10, [x10]
   22678:	cbnz	w10, 226ac <rl_filename_completion_function@@Base+0x11c4>
   2267c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22680:	ldr	x10, [x10, #1960]
   22684:	ldr	w1, [x10]
   22688:	cbnz	w1, 2269c <rl_filename_completion_function@@Base+0x11b4>
   2268c:	b	226ac <rl_filename_completion_function@@Base+0x11c4>
   22690:	mov	w9, #0x1                   	// #1
   22694:	strb	w2, [x29, #28]
   22698:	cbz	w1, 2266c <rl_filename_completion_function@@Base+0x1184>
   2269c:	add	x10, x29, #0x1c
   226a0:	orr	x10, x10, x9
   226a4:	add	w9, w9, #0x1
   226a8:	strb	w1, [x10]
   226ac:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   226b0:	ldr	x10, [x10, #3768]
   226b4:	add	x11, x29, #0x1c
   226b8:	orr	x9, x11, x9
   226bc:	strb	wzr, [x9]
   226c0:	ldr	w10, [x10]
   226c4:	cbz	w10, 22740 <rl_filename_completion_function@@Base+0x1258>
   226c8:	bl	176f0 <tilde_expand@plt>
   226cc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   226d0:	ldr	x22, [x22, #3728]
   226d4:	mov	x19, x0
   226d8:	ldr	x8, [x22]
   226dc:	cbz	x8, 22714 <rl_filename_completion_function@@Base+0x122c>
   226e0:	mov	x0, x19
   226e4:	bl	16440 <strlen@plt>
   226e8:	add	x0, x0, #0x1
   226ec:	bl	16bf0 <xmalloc@plt>
   226f0:	mov	x1, x19
   226f4:	bl	17480 <strcpy@plt>
   226f8:	ldr	x8, [x22]
   226fc:	str	x0, [sp, #136]
   22700:	add	x0, sp, #0x88
   22704:	blr	x8
   22708:	mov	x0, x19
   2270c:	bl	169f0 <xfree@plt>
   22710:	ldr	x19, [sp, #136]
   22714:	cbz	w20, 22760 <rl_filename_completion_function@@Base+0x1278>
   22718:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2271c:	ldr	x8, [x8, #2720]
   22720:	ldr	w8, [x8]
   22724:	cbnz	w8, 22760 <rl_filename_completion_function@@Base+0x1278>
   22728:	add	x2, sp, #0x8
   2272c:	mov	w0, wzr
   22730:	mov	x1, x19
   22734:	bl	174e0 <__lxstat@plt>
   22738:	cbnz	w0, 227f0 <rl_filename_completion_function@@Base+0x1308>
   2273c:	b	22774 <rl_filename_completion_function@@Base+0x128c>
   22740:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22744:	ldr	x9, [x9, #2656]
   22748:	ldr	w9, [x9]
   2274c:	cmp	w8, w9
   22750:	b.ne	22818 <rl_filename_completion_function@@Base+0x1330>  // b.any
   22754:	add	x0, x29, #0x1c
   22758:	bl	16430 <rl_insert_text@plt>
   2275c:	b	22818 <rl_filename_completion_function@@Base+0x1330>
   22760:	add	x2, sp, #0x8
   22764:	mov	w0, wzr
   22768:	mov	x1, x19
   2276c:	bl	17850 <__xstat@plt>
   22770:	cbnz	w0, 227f0 <rl_filename_completion_function@@Base+0x1308>
   22774:	ldr	w8, [sp, #24]
   22778:	and	w8, w8, #0xf000
   2277c:	cmp	w8, #0xa, lsl #12
   22780:	b.eq	227cc <rl_filename_completion_function@@Base+0x12e4>  // b.none
   22784:	cmp	w8, #0x4, lsl #12
   22788:	b.ne	227f0 <rl_filename_completion_function@@Base+0x1308>  // b.any
   2278c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22790:	ldr	x8, [x8, #3448]
   22794:	ldr	w8, [x8]
   22798:	cbz	w8, 22810 <rl_filename_completion_function@@Base+0x1328>
   2279c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   227a0:	ldrsw	x8, [x21]
   227a4:	ldr	x9, [x9, #2480]
   227a8:	ldr	x9, [x9]
   227ac:	cbz	w8, 22830 <rl_filename_completion_function@@Base+0x1348>
   227b0:	ldrb	w10, [x9, x8]
   227b4:	cbnz	w10, 22834 <rl_filename_completion_function@@Base+0x134c>
   227b8:	add	x8, x8, x9
   227bc:	ldurb	w8, [x8, #-1]
   227c0:	cmp	w8, #0x2f
   227c4:	b.eq	22810 <rl_filename_completion_function@@Base+0x1328>  // b.none
   227c8:	b	2283c <rl_filename_completion_function@@Base+0x1354>
   227cc:	sub	x2, x29, #0x80
   227d0:	mov	w0, wzr
   227d4:	mov	x1, x19
   227d8:	bl	17850 <__xstat@plt>
   227dc:	cbnz	w0, 227f0 <rl_filename_completion_function@@Base+0x1308>
   227e0:	ldur	w8, [x29, #-112]
   227e4:	and	w8, w8, #0xf000
   227e8:	cmp	w8, #0x4, lsl #12
   227ec:	b.eq	22810 <rl_filename_completion_function@@Base+0x1328>  // b.none
   227f0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   227f4:	ldr	w8, [x21]
   227f8:	ldr	x9, [x9, #2656]
   227fc:	ldr	w9, [x9]
   22800:	cmp	w8, w9
   22804:	b.ne	22810 <rl_filename_completion_function@@Base+0x1328>  // b.any
   22808:	add	x0, x29, #0x1c
   2280c:	bl	16430 <rl_insert_text@plt>
   22810:	mov	x0, x19
   22814:	bl	169f0 <xfree@plt>
   22818:	ldp	x20, x19, [sp, #320]
   2281c:	ldp	x22, x21, [sp, #304]
   22820:	ldr	x28, [sp, #288]
   22824:	ldp	x29, x30, [sp, #272]
   22828:	add	sp, sp, #0x150
   2282c:	ret
   22830:	ldrb	w10, [x9]
   22834:	cmp	w10, #0x2f
   22838:	b.eq	22810 <rl_filename_completion_function@@Base+0x1328>  // b.none
   2283c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   22840:	add	x0, x0, #0x59e
   22844:	b	2280c <rl_filename_completion_function@@Base+0x1324>
   22848:	cmp	w0, #0x2
   2284c:	b.ne	22898 <rl_filename_completion_function@@Base+0x13b0>  // b.any
   22850:	stp	x29, x30, [sp, #-32]!
   22854:	stp	x20, x19, [sp, #16]
   22858:	mov	x19, x1
   2285c:	mov	x29, sp
   22860:	cbz	x1, 22884 <rl_filename_completion_function@@Base+0x139c>
   22864:	ldr	x0, [x19]
   22868:	cbz	x0, 2287c <rl_filename_completion_function@@Base+0x1394>
   2286c:	add	x20, x19, #0x8
   22870:	bl	169f0 <xfree@plt>
   22874:	ldr	x0, [x20], #8
   22878:	cbnz	x0, 22870 <rl_filename_completion_function@@Base+0x1388>
   2287c:	mov	x0, x19
   22880:	bl	169f0 <xfree@plt>
   22884:	ldp	x20, x19, [sp, #16]
   22888:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2288c:	mov	w9, #0x1                   	// #1
   22890:	strb	w9, [x8, #700]
   22894:	ldp	x29, x30, [sp], #32
   22898:	ret

000000000002289c <rl_completion_matches@@Base>:
   2289c:	stp	x29, x30, [sp, #-96]!
   228a0:	stp	x20, x19, [sp, #80]
   228a4:	mov	x19, x0
   228a8:	mov	w0, #0x58                  	// #88
   228ac:	stp	x28, x27, [sp, #16]
   228b0:	stp	x26, x25, [sp, #32]
   228b4:	stp	x24, x23, [sp, #48]
   228b8:	stp	x22, x21, [sp, #64]
   228bc:	mov	x29, sp
   228c0:	mov	x20, x1
   228c4:	bl	16bf0 <xmalloc@plt>
   228c8:	mov	x21, x0
   228cc:	str	xzr, [x0, #8]
   228d0:	mov	x0, x19
   228d4:	mov	w1, wzr
   228d8:	blr	x20
   228dc:	cbz	x0, 229b0 <rl_completion_matches@@Base+0x114>
   228e0:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   228e4:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   228e8:	ldr	x24, [x24, #2808]
   228ec:	ldr	x25, [x25, #2424]
   228f0:	mov	x22, x0
   228f4:	mov	w23, wzr
   228f8:	mov	w26, #0xa                   	// #10
   228fc:	ldr	w8, [x24]
   22900:	cbz	w8, 22948 <rl_completion_matches@@Base+0xac>
   22904:	cmp	x20, x25
   22908:	b.ne	22924 <rl_completion_matches@@Base+0x88>  // b.any
   2290c:	ldr	x0, [x21, #8]
   22910:	cbz	x0, 22924 <rl_completion_matches@@Base+0x88>
   22914:	add	x23, x21, #0x10
   22918:	bl	169f0 <xfree@plt>
   2291c:	ldr	x0, [x23], #8
   22920:	cbnz	x0, 22918 <rl_completion_matches@@Base+0x7c>
   22924:	mov	x0, x21
   22928:	bl	169f0 <xfree@plt>
   2292c:	ldr	w8, [x24]
   22930:	cbz	w8, 2293c <rl_completion_matches@@Base+0xa0>
   22934:	ldr	w0, [x24]
   22938:	bl	17460 <_rl_signal_handler@plt>
   2293c:	mov	w26, wzr
   22940:	mov	x21, xzr
   22944:	mov	w23, wzr
   22948:	sxtw	x27, w23
   2294c:	add	x23, x27, #0x1
   22950:	cmp	w23, w26
   22954:	b.lt	22974 <rl_completion_matches@@Base+0xd8>  // b.tstop
   22958:	add	w8, w26, #0xb
   2295c:	sbfiz	x1, x8, #3, #32
   22960:	mov	x0, x21
   22964:	add	w28, w26, #0xa
   22968:	bl	16a50 <xrealloc@plt>
   2296c:	mov	x21, x0
   22970:	mov	w26, w28
   22974:	cbz	x21, 229bc <rl_completion_matches@@Base+0x120>
   22978:	add	x8, x21, x27, lsl #3
   2297c:	mov	x0, x19
   22980:	mov	w1, w23
   22984:	str	x22, [x21, x23, lsl #3]
   22988:	str	xzr, [x8, #16]
   2298c:	blr	x20
   22990:	mov	x22, x0
   22994:	cbnz	x0, 228fc <rl_completion_matches@@Base+0x60>
   22998:	cbz	w23, 229b0 <rl_completion_matches@@Base+0x114>
   2299c:	mov	x0, x21
   229a0:	mov	w1, w23
   229a4:	mov	x2, x19
   229a8:	bl	229dc <rl_completion_matches@@Base+0x140>
   229ac:	b	229bc <rl_completion_matches@@Base+0x120>
   229b0:	mov	x0, x21
   229b4:	bl	169f0 <xfree@plt>
   229b8:	mov	x21, xzr
   229bc:	mov	x0, x21
   229c0:	ldp	x20, x19, [sp, #80]
   229c4:	ldp	x22, x21, [sp, #64]
   229c8:	ldp	x24, x23, [sp, #48]
   229cc:	ldp	x26, x25, [sp, #32]
   229d0:	ldp	x28, x27, [sp, #16]
   229d4:	ldp	x29, x30, [sp], #96
   229d8:	ret
   229dc:	sub	sp, sp, #0xa0
   229e0:	stp	x20, x19, [sp, #144]
   229e4:	cmp	w1, #0x1
   229e8:	mov	x19, x0
   229ec:	stp	x29, x30, [sp, #64]
   229f0:	stp	x28, x27, [sp, #80]
   229f4:	stp	x26, x25, [sp, #96]
   229f8:	stp	x24, x23, [sp, #112]
   229fc:	stp	x22, x21, [sp, #128]
   22a00:	add	x29, sp, #0x40
   22a04:	b.ne	22a14 <rl_completion_matches@@Base+0x178>  // b.any
   22a08:	ldr	x8, [x19, #8]
   22a0c:	stp	x8, xzr, [x19]
   22a10:	b	22dc4 <rl_completion_matches@@Base+0x528>
   22a14:	mov	w26, #0x86a0                	// #34464
   22a18:	mov	x20, x2
   22a1c:	movk	w26, #0x1, lsl #16
   22a20:	cmp	w1, #0x2
   22a24:	str	x1, [sp, #16]
   22a28:	b.lt	22c90 <rl_completion_matches@@Base+0x3f4>  // b.tstop
   22a2c:	str	x20, [sp, #8]
   22a30:	mov	w8, w1
   22a34:	mov	w20, #0x1                   	// #1
   22a38:	str	x8, [sp, #24]
   22a3c:	b	22a5c <rl_completion_matches@@Base+0x1c0>
   22a40:	mov	w22, wzr
   22a44:	ldr	x8, [sp, #24]
   22a48:	cmp	w26, w22
   22a4c:	csel	w26, w22, w26, gt
   22a50:	mov	x20, x27
   22a54:	cmp	x27, x8
   22a58:	b.eq	22c58 <rl_completion_matches@@Base+0x3bc>  // b.none
   22a5c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   22a60:	cmp	x0, #0x2
   22a64:	b.cc	22a7c <rl_completion_matches@@Base+0x1e0>  // b.lo, b.ul, b.last
   22a68:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22a6c:	ldr	x8, [x8, #1896]
   22a70:	ldr	w8, [x8]
   22a74:	cbnz	w8, 22a7c <rl_completion_matches@@Base+0x1e0>
   22a78:	stp	xzr, xzr, [x29, #-16]
   22a7c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22a80:	ldr	x8, [x8, #3168]
   22a84:	ldr	w8, [x8]
   22a88:	cbz	w8, 22bac <rl_completion_matches@@Base+0x310>
   22a8c:	bl	17100 <__ctype_b_loc@plt>
   22a90:	mov	x23, x0
   22a94:	mov	w22, wzr
   22a98:	add	x27, x20, #0x1
   22a9c:	b	22aac <rl_completion_matches@@Base+0x210>
   22aa0:	cmp	w28, w21
   22aa4:	b.ne	22a44 <rl_completion_matches@@Base+0x1a8>  // b.any
   22aa8:	add	w22, w22, #0x1
   22aac:	ldr	x8, [x19, x20, lsl #3]
   22ab0:	sxtw	x25, w22
   22ab4:	ldr	x24, [x23]
   22ab8:	ldrb	w28, [x8, x25]
   22abc:	ldrh	w8, [x24, x28, lsl #1]
   22ac0:	tbz	w8, #8, 22ad0 <rl_completion_matches@@Base+0x234>
   22ac4:	bl	16810 <__ctype_tolower_loc@plt>
   22ac8:	ldr	x8, [x0]
   22acc:	ldr	w28, [x8, x28, lsl #2]
   22ad0:	cbz	w28, 22a44 <rl_completion_matches@@Base+0x1a8>
   22ad4:	ldr	x8, [x19, x27, lsl #3]
   22ad8:	ldrb	w21, [x8, x25]
   22adc:	ldrh	w8, [x24, x21, lsl #1]
   22ae0:	tbz	w8, #8, 22af0 <rl_completion_matches@@Base+0x254>
   22ae4:	bl	16810 <__ctype_tolower_loc@plt>
   22ae8:	ldr	x8, [x0]
   22aec:	ldr	w21, [x8, x21, lsl #2]
   22af0:	cbz	w21, 22a44 <rl_completion_matches@@Base+0x1a8>
   22af4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   22af8:	cmp	x0, #0x2
   22afc:	b.cc	22aa0 <rl_completion_matches@@Base+0x204>  // b.lo, b.ul, b.last
   22b00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22b04:	ldr	x8, [x8, #1896]
   22b08:	ldr	w8, [x8]
   22b0c:	cbnz	w8, 22aa0 <rl_completion_matches@@Base+0x204>
   22b10:	ldr	x8, [x19, x20, lsl #3]
   22b14:	add	x24, x8, x25
   22b18:	mov	x0, x24
   22b1c:	bl	16440 <strlen@plt>
   22b20:	mov	x2, x0
   22b24:	sub	x0, x29, #0x14
   22b28:	sub	x3, x29, #0x8
   22b2c:	mov	x1, x24
   22b30:	bl	16370 <mbrtowc@plt>
   22b34:	ldr	x8, [x19, x27, lsl #3]
   22b38:	mov	x24, x0
   22b3c:	add	x25, x8, x25
   22b40:	mov	x0, x25
   22b44:	bl	16440 <strlen@plt>
   22b48:	mov	x2, x0
   22b4c:	sub	x0, x29, #0x18
   22b50:	sub	x3, x29, #0x10
   22b54:	mov	x1, x25
   22b58:	bl	16370 <mbrtowc@plt>
   22b5c:	cmn	x24, #0x3
   22b60:	b.hi	22aa0 <rl_completion_matches@@Base+0x204>  // b.pmore
   22b64:	cmn	x0, #0x2
   22b68:	b.cs	22aa0 <rl_completion_matches@@Base+0x204>  // b.hs, b.nlast
   22b6c:	ldur	w0, [x29, #-20]
   22b70:	bl	17940 <towlower@plt>
   22b74:	ldur	w8, [x29, #-24]
   22b78:	stur	w0, [x29, #-20]
   22b7c:	mov	w0, w8
   22b80:	bl	17940 <towlower@plt>
   22b84:	ldur	w8, [x29, #-20]
   22b88:	stur	w0, [x29, #-24]
   22b8c:	cmp	w8, w0
   22b90:	b.ne	22a44 <rl_completion_matches@@Base+0x1a8>  // b.any
   22b94:	cmp	x24, #0x2
   22b98:	b.cc	22aa8 <rl_completion_matches@@Base+0x20c>  // b.lo, b.ul, b.last
   22b9c:	add	w8, w22, w24
   22ba0:	sub	w22, w8, #0x1
   22ba4:	add	w22, w22, #0x1
   22ba8:	b	22aac <rl_completion_matches@@Base+0x210>
   22bac:	ldr	x8, [x19, x20, lsl #3]
   22bb0:	add	x27, x20, #0x1
   22bb4:	ldrb	w23, [x8]
   22bb8:	cbz	w23, 22a40 <rl_completion_matches@@Base+0x1a4>
   22bbc:	mov	x21, xzr
   22bc0:	mov	w22, wzr
   22bc4:	b	22be8 <rl_completion_matches@@Base+0x34c>
   22bc8:	cmp	w24, w23, uxtb
   22bcc:	b.ne	22a44 <rl_completion_matches@@Base+0x1a8>  // b.any
   22bd0:	ldr	x8, [x19, x20, lsl #3]
   22bd4:	sxtw	x9, w22
   22bd8:	add	x22, x9, #0x1
   22bdc:	mov	x21, x22
   22be0:	ldrb	w23, [x8, x22]
   22be4:	cbz	w23, 22a44 <rl_completion_matches@@Base+0x1a8>
   22be8:	ldr	x8, [x19, x27, lsl #3]
   22bec:	ldrb	w24, [x8, x21]
   22bf0:	cbz	w24, 22a44 <rl_completion_matches@@Base+0x1a8>
   22bf4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   22bf8:	cmp	x0, #0x2
   22bfc:	b.cc	22bc8 <rl_completion_matches@@Base+0x32c>  // b.lo, b.ul, b.last
   22c00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22c04:	ldr	x8, [x8, #1896]
   22c08:	ldr	w8, [x8]
   22c0c:	cbnz	w8, 22bc8 <rl_completion_matches@@Base+0x32c>
   22c10:	ldur	x8, [x29, #-8]
   22c14:	sub	x2, x29, #0x8
   22c18:	sub	x5, x29, #0x10
   22c1c:	mov	w1, w22
   22c20:	str	x8, [sp, #32]
   22c24:	ldr	x0, [x19, x20, lsl #3]
   22c28:	ldr	x3, [x19, x27, lsl #3]
   22c2c:	mov	w4, w22
   22c30:	bl	17360 <_rl_compare_chars@plt>
   22c34:	cbz	w0, 22a44 <rl_completion_matches@@Base+0x1a8>
   22c38:	ldr	x8, [x19, x20, lsl #3]
   22c3c:	add	x1, sp, #0x20
   22c40:	add	x0, x8, x21
   22c44:	bl	174b0 <_rl_get_char_len@plt>
   22c48:	subs	w8, w0, #0x1
   22c4c:	csel	w8, w8, wzr, gt
   22c50:	add	w22, w8, w22
   22c54:	b	22bd0 <rl_completion_matches@@Base+0x334>
   22c58:	ldr	x20, [sp, #8]
   22c5c:	cbz	x20, 22c90 <rl_completion_matches@@Base+0x3f4>
   22c60:	cbnz	w26, 22c90 <rl_completion_matches@@Base+0x3f4>
   22c64:	ldrb	w8, [x20]
   22c68:	cbz	w8, 22c8c <rl_completion_matches@@Base+0x3f0>
   22c6c:	mov	x0, x20
   22c70:	bl	16440 <strlen@plt>
   22c74:	add	x0, x0, #0x1
   22c78:	bl	16bf0 <xmalloc@plt>
   22c7c:	mov	x1, x20
   22c80:	str	x0, [x19]
   22c84:	bl	17480 <strcpy@plt>
   22c88:	b	22dc4 <rl_completion_matches@@Base+0x528>
   22c8c:	mov	w26, wzr
   22c90:	add	w8, w26, #0x1
   22c94:	sxtw	x0, w8
   22c98:	bl	16bf0 <xmalloc@plt>
   22c9c:	str	x0, [x19]
   22ca0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22ca4:	ldr	x8, [x8, #3168]
   22ca8:	ldr	w8, [x8]
   22cac:	cbz	w8, 22db0 <rl_completion_matches@@Base+0x514>
   22cb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22cb4:	ldr	x8, [x8, #3768]
   22cb8:	mov	x22, xzr
   22cbc:	ldr	w8, [x8]
   22cc0:	cbz	w8, 22d10 <rl_completion_matches@@Base+0x474>
   22cc4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22cc8:	ldr	x8, [x8, #3752]
   22ccc:	ldr	x8, [x8]
   22cd0:	cbz	x8, 22d10 <rl_completion_matches@@Base+0x474>
   22cd4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22cd8:	ldr	x9, [x9, #3584]
   22cdc:	ldr	w9, [x9]
   22ce0:	cbz	w9, 22d10 <rl_completion_matches@@Base+0x474>
   22ce4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22ce8:	ldr	x9, [x9, #1904]
   22cec:	ldr	w9, [x9]
   22cf0:	cbz	w9, 22d10 <rl_completion_matches@@Base+0x474>
   22cf4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22cf8:	ldr	x9, [x9, #2376]
   22cfc:	mov	x0, x20
   22d00:	ldr	w1, [x9]
   22d04:	blr	x8
   22d08:	mov	x22, x0
   22d0c:	mov	x20, x0
   22d10:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22d14:	ldr	x8, [x8, #2144]
   22d18:	ldr	x21, [sp, #16]
   22d1c:	ldr	w8, [x8]
   22d20:	cbz	w8, 22d3c <rl_completion_matches@@Base+0x4a0>
   22d24:	adrp	x3, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22d28:	ldr	x3, [x3, #3544]
   22d2c:	add	x0, x19, #0x8
   22d30:	sxtw	x1, w21
   22d34:	mov	w2, #0x8                   	// #8
   22d38:	bl	16720 <qsort@plt>
   22d3c:	mov	x0, x20
   22d40:	mov	x25, x20
   22d44:	bl	16440 <strlen@plt>
   22d48:	cmp	w21, #0x1
   22d4c:	b.lt	22d8c <rl_completion_matches@@Base+0x4f0>  // b.tstop
   22d50:	cmp	w26, w0
   22d54:	add	w8, w21, #0x1
   22d58:	csel	w9, w26, w0, lt  // lt = tstop
   22d5c:	add	x20, x19, #0x8
   22d60:	sxtw	x21, w9
   22d64:	sub	x24, x8, #0x1
   22d68:	ldr	x23, [x20]
   22d6c:	mov	x1, x25
   22d70:	mov	x2, x21
   22d74:	mov	x0, x23
   22d78:	bl	16b40 <strncmp@plt>
   22d7c:	cbz	w0, 22d90 <rl_completion_matches@@Base+0x4f4>
   22d80:	subs	x24, x24, #0x1
   22d84:	add	x20, x20, #0x8
   22d88:	b.ne	22d68 <rl_completion_matches@@Base+0x4cc>  // b.any
   22d8c:	ldr	x23, [x19, #8]
   22d90:	ldr	x0, [x19]
   22d94:	sxtw	x2, w26
   22d98:	mov	x1, x23
   22d9c:	bl	17730 <strncpy@plt>
   22da0:	cbz	x22, 22dbc <rl_completion_matches@@Base+0x520>
   22da4:	mov	x0, x22
   22da8:	bl	171b0 <free@plt>
   22dac:	b	22dbc <rl_completion_matches@@Base+0x520>
   22db0:	ldr	x1, [x19, #8]
   22db4:	sxtw	x2, w26
   22db8:	bl	17730 <strncpy@plt>
   22dbc:	ldr	x8, [x19]
   22dc0:	strb	wzr, [x8, w26, sxtw]
   22dc4:	ldp	x20, x19, [sp, #144]
   22dc8:	ldp	x22, x21, [sp, #128]
   22dcc:	ldp	x24, x23, [sp, #112]
   22dd0:	ldp	x26, x25, [sp, #96]
   22dd4:	ldp	x28, x27, [sp, #80]
   22dd8:	ldp	x29, x30, [sp, #64]
   22ddc:	add	sp, sp, #0xa0
   22de0:	ret

0000000000022de4 <rl_username_completion_function@@Base>:
   22de4:	stp	x29, x30, [sp, #-64]!
   22de8:	stp	x22, x21, [sp, #32]
   22dec:	stp	x20, x19, [sp, #48]
   22df0:	mov	x19, x0
   22df4:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   22df8:	str	x23, [sp, #16]
   22dfc:	mov	x29, sp
   22e00:	cbnz	w1, 22e60 <rl_username_completion_function@@Base+0x7c>
   22e04:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   22e08:	ldr	x0, [x20, #704]
   22e0c:	cbz	x0, 22e14 <rl_username_completion_function@@Base+0x30>
   22e10:	bl	171b0 <free@plt>
   22e14:	mov	x8, x19
   22e18:	ldrb	w9, [x8], #1
   22e1c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   22e20:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   22e24:	cmp	w9, #0x7e
   22e28:	str	w9, [x10, #724]
   22e2c:	cset	w9, eq  // eq = none
   22e30:	csel	x0, x19, x8, ne  // ne = any
   22e34:	str	w9, [x22, #728]
   22e38:	bl	16440 <strlen@plt>
   22e3c:	add	x0, x0, #0x1
   22e40:	bl	16bf0 <xmalloc@plt>
   22e44:	ldrsw	x8, [x22, #728]
   22e48:	add	x1, x19, x8
   22e4c:	bl	17480 <strcpy@plt>
   22e50:	str	x0, [x20, #704]
   22e54:	bl	16440 <strlen@plt>
   22e58:	str	w0, [x21, #720]
   22e5c:	bl	16e00 <setpwent@plt>
   22e60:	bl	175c0 <getpwent@plt>
   22e64:	cmp	x0, #0x0
   22e68:	mov	x20, x0
   22e6c:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   22e70:	cset	w8, eq  // eq = none
   22e74:	str	x0, [x22, #712]
   22e78:	cbz	x0, 22ecc <rl_username_completion_function@@Base+0xe8>
   22e7c:	ldr	w9, [x21, #720]
   22e80:	cbz	w9, 22ecc <rl_username_completion_function@@Base+0xe8>
   22e84:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   22e88:	ldr	x0, [x23, #704]
   22e8c:	ldr	x1, [x20]
   22e90:	ldrb	w8, [x0]
   22e94:	ldrb	w10, [x1]
   22e98:	cmp	w8, w10
   22e9c:	b.ne	22eac <rl_username_completion_function@@Base+0xc8>  // b.any
   22ea0:	sxtw	x2, w9
   22ea4:	bl	16b40 <strncmp@plt>
   22ea8:	cbz	w0, 22edc <rl_username_completion_function@@Base+0xf8>
   22eac:	bl	175c0 <getpwent@plt>
   22eb0:	cmp	x0, #0x0
   22eb4:	mov	x20, x0
   22eb8:	cset	w8, eq  // eq = none
   22ebc:	str	x0, [x22, #712]
   22ec0:	cbz	x0, 22ecc <rl_username_completion_function@@Base+0xe8>
   22ec4:	ldr	w9, [x21, #720]
   22ec8:	cbnz	w9, 22e88 <rl_username_completion_function@@Base+0xa4>
   22ecc:	cbz	w8, 22edc <rl_username_completion_function@@Base+0xf8>
   22ed0:	bl	174c0 <endpwent@plt>
   22ed4:	mov	x19, xzr
   22ed8:	b	22f30 <rl_username_completion_function@@Base+0x14c>
   22edc:	ldr	x0, [x20]
   22ee0:	bl	16440 <strlen@plt>
   22ee4:	add	x0, x0, #0x2
   22ee8:	bl	16bf0 <xmalloc@plt>
   22eec:	ldrb	w8, [x19]
   22ef0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   22ef4:	mov	x19, x0
   22ef8:	strb	w8, [x0]
   22efc:	ldr	x8, [x22, #712]
   22f00:	ldrsw	x9, [x9, #728]
   22f04:	ldr	x1, [x8]
   22f08:	add	x0, x0, x9
   22f0c:	bl	17480 <strcpy@plt>
   22f10:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   22f14:	ldr	w8, [x8, #724]
   22f18:	cmp	w8, #0x7e
   22f1c:	b.ne	22f30 <rl_username_completion_function@@Base+0x14c>  // b.any
   22f20:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22f24:	ldr	x8, [x8, #3768]
   22f28:	mov	w9, #0x1                   	// #1
   22f2c:	str	w9, [x8]
   22f30:	mov	x0, x19
   22f34:	ldp	x20, x19, [sp, #48]
   22f38:	ldp	x22, x21, [sp, #32]
   22f3c:	ldr	x23, [sp, #16]
   22f40:	ldp	x29, x30, [sp], #64
   22f44:	ret

0000000000022f48 <rl_old_menu_complete@@Base>:
   22f48:	sub	sp, sp, #0x70
   22f4c:	stp	x29, x30, [sp, #16]
   22f50:	stp	x28, x27, [sp, #32]
   22f54:	stp	x26, x25, [sp, #48]
   22f58:	stp	x24, x23, [sp, #64]
   22f5c:	stp	x22, x21, [sp, #80]
   22f60:	stp	x20, x19, [sp, #96]
   22f64:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22f68:	ldr	x8, [x8, #2072]
   22f6c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22f70:	mov	w24, w0
   22f74:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   22f78:	ldr	x8, [x8]
   22f7c:	ldr	x9, [x9, #2248]
   22f80:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   22f84:	add	x29, sp, #0x10
   22f88:	cmp	x8, x9
   22f8c:	b.eq	23190 <rl_old_menu_complete@@Base+0x248>  // b.none
   22f90:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   22f94:	ldr	x0, [x8, #776]
   22f98:	mov	w20, w1
   22f9c:	cbz	x0, 22fa4 <rl_old_menu_complete@@Base+0x5c>
   22fa0:	bl	171b0 <free@plt>
   22fa4:	ldr	x21, [x22, #784]
   22fa8:	cbz	x21, 22fcc <rl_old_menu_complete@@Base+0x84>
   22fac:	ldr	x0, [x21]
   22fb0:	cbz	x0, 22fc4 <rl_old_menu_complete@@Base+0x7c>
   22fb4:	add	x25, x21, #0x8
   22fb8:	bl	169f0 <xfree@plt>
   22fbc:	ldr	x0, [x25], #8
   22fc0:	cbnz	x0, 22fb8 <rl_old_menu_complete@@Base+0x70>
   22fc4:	mov	x0, x21
   22fc8:	bl	169f0 <xfree@plt>
   22fcc:	str	wzr, [x23, #796]
   22fd0:	str	xzr, [x22, #784]
   22fd4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22fd8:	ldr	x9, [x9, #3336]
   22fdc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22fe0:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22fe4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22fe8:	ldr	x21, [x21, #2984]
   22fec:	ldr	x25, [x25, #3768]
   22ff0:	ldr	x10, [x10, #1904]
   22ff4:	str	w20, [x9]
   22ff8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   22ffc:	ldr	x9, [x9, #2872]
   23000:	mov	w11, #0x1                   	// #1
   23004:	mov	w12, #0x25                  	// #37
   23008:	str	w11, [x10]
   2300c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23010:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23014:	ldr	x10, [x10, #2432]
   23018:	ldr	x11, [x11, #1960]
   2301c:	str	w12, [x9]
   23020:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23024:	ldr	x12, [x12, #3320]
   23028:	mov	w9, #0x20                  	// #32
   2302c:	str	w9, [x11]
   23030:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23034:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23038:	ldr	w12, [x12]
   2303c:	ldr	x9, [x9, #3984]
   23040:	ldr	x11, [x11, #2720]
   23044:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   23048:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2304c:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   23050:	str	w12, [x11]
   23054:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23058:	ldr	x12, [x12, #2728]
   2305c:	str	wzr, [x8, #792]
   23060:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23064:	ldr	x8, [x8, #3376]
   23068:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2306c:	str	wzr, [x10]
   23070:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23074:	ldr	x10, [x10, #2424]
   23078:	str	wzr, [x9]
   2307c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   23080:	strb	wzr, [x11, #700]
   23084:	ldr	x11, [x21]
   23088:	str	wzr, [x9, #812]
   2308c:	ldr	x28, [x28, #3512]
   23090:	ldr	x8, [x8]
   23094:	orr	x9, x11, #0x4000
   23098:	str	x9, [x21]
   2309c:	ldr	x9, [x12]
   230a0:	cmp	x8, #0x0
   230a4:	csel	x8, x10, x8, eq  // eq = none
   230a8:	ldr	w10, [x28]
   230ac:	cmp	x9, #0x0
   230b0:	csel	x20, x8, x9, eq  // eq = none
   230b4:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   230b8:	mov	x19, x23
   230bc:	stur	wzr, [x29, #-4]
   230c0:	str	wzr, [x25]
   230c4:	str	w10, [x26, #804]
   230c8:	strb	wzr, [x27, #808]
   230cc:	cbz	w10, 230f0 <rl_old_menu_complete@@Base+0x1a8>
   230d0:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   230d4:	add	x1, x1, #0x32c
   230d8:	sub	x0, x29, #0x4
   230dc:	bl	173d0 <_rl_find_completion_word@plt>
   230e0:	ldr	w8, [x28]
   230e4:	ldr	w1, [x26, #804]
   230e8:	strb	w0, [x27, #808]
   230ec:	b	230f8 <rl_old_menu_complete@@Base+0x1b0>
   230f0:	mov	w1, wzr
   230f4:	mov	w8, wzr
   230f8:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   230fc:	mov	w0, w8
   23100:	str	w8, [x23, #800]
   23104:	str	w1, [x28]
   23108:	bl	178e0 <rl_copy_text@plt>
   2310c:	ldr	w1, [x23, #800]
   23110:	ldr	w2, [x26, #804]
   23114:	ldur	w4, [x29, #-4]
   23118:	ldrb	w5, [x27, #808]
   2311c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   23120:	mov	x3, x20
   23124:	str	x0, [x23, #776]
   23128:	bl	21d44 <rl_filename_completion_function@@Base+0x85c>
   2312c:	str	x0, [x22, #784]
   23130:	cbz	x0, 231c0 <rl_old_menu_complete@@Base+0x278>
   23134:	ldr	w1, [x25]
   23138:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2313c:	add	x0, x0, #0x310
   23140:	bl	21e60 <rl_filename_completion_function@@Base+0x978>
   23144:	cbz	w0, 231c0 <rl_old_menu_complete@@Base+0x278>
   23148:	ldr	x9, [x21]
   2314c:	ldr	x0, [x22, #784]
   23150:	mov	x8, xzr
   23154:	and	x9, x9, #0xffffffffffffbfff
   23158:	str	x9, [x21]
   2315c:	ldr	x9, [x0, x8, lsl #3]
   23160:	add	x8, x8, #0x1
   23164:	cbnz	x9, 2315c <rl_old_menu_complete@@Base+0x214>
   23168:	sub	w8, w8, #0x1
   2316c:	cmp	w8, #0x2
   23170:	mov	x23, x19
   23174:	str	w8, [x19, #796]
   23178:	b.cc	23190 <rl_old_menu_complete@@Base+0x248>  // b.lo, b.ul, b.last
   2317c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23180:	ldr	x8, [x8, #3368]
   23184:	ldr	w8, [x8]
   23188:	cbz	w8, 23190 <rl_old_menu_complete@@Base+0x248>
   2318c:	bl	22358 <rl_filename_completion_function@@Base+0xe70>
   23190:	ldr	x8, [x22, #784]
   23194:	cbz	x8, 231fc <rl_old_menu_complete@@Base+0x2b4>
   23198:	ldr	w10, [x23, #796]
   2319c:	cbz	w10, 231fc <rl_old_menu_complete@@Base+0x2b4>
   231a0:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   231a4:	ldr	w11, [x20, #792]
   231a8:	adds	w9, w11, w24
   231ac:	str	w9, [x20, #792]
   231b0:	b.mi	2321c <rl_old_menu_complete@@Base+0x2d4>  // b.first
   231b4:	sdiv	w11, w9, w10
   231b8:	msub	w9, w11, w10, w9
   231bc:	b	2325c <rl_old_menu_complete@@Base+0x314>
   231c0:	bl	17390 <rl_ding@plt>
   231c4:	ldr	x0, [x22, #784]
   231c8:	cbz	x0, 231d0 <rl_old_menu_complete@@Base+0x288>
   231cc:	bl	171b0 <free@plt>
   231d0:	ldr	x0, [x23, #776]
   231d4:	str	xzr, [x22, #784]
   231d8:	cbz	x0, 231e0 <rl_old_menu_complete@@Base+0x298>
   231dc:	bl	171b0 <free@plt>
   231e0:	ldr	x8, [x21]
   231e4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   231e8:	str	xzr, [x23, #776]
   231ec:	str	wzr, [x9, #696]
   231f0:	and	x8, x8, #0xffffffffffffbfff
   231f4:	str	x8, [x21]
   231f8:	b	232fc <rl_old_menu_complete@@Base+0x3b4>
   231fc:	bl	17390 <rl_ding@plt>
   23200:	ldr	x0, [x22, #784]
   23204:	cbz	x0, 2320c <rl_old_menu_complete@@Base+0x2c4>
   23208:	bl	171b0 <free@plt>
   2320c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   23210:	str	xzr, [x22, #784]
   23214:	str	wzr, [x8, #696]
   23218:	b	232fc <rl_old_menu_complete@@Base+0x3b4>
   2321c:	add	w11, w11, w24
   23220:	mvn	w11, w11
   23224:	udiv	w11, w11, w10
   23228:	add	w11, w11, #0x1
   2322c:	cmp	w11, #0x2
   23230:	b.cc	23254 <rl_old_menu_complete@@Base+0x30c>  // b.lo, b.ul, b.last
   23234:	and	w12, w11, #0xfffffffe
   23238:	mov	w13, wzr
   2323c:	madd	w9, w12, w10, w9
   23240:	add	w13, w13, #0x2
   23244:	cmp	w13, w12
   23248:	b.ne	23240 <rl_old_menu_complete@@Base+0x2f8>  // b.any
   2324c:	cmp	w11, w12
   23250:	b.eq	2325c <rl_old_menu_complete@@Base+0x314>  // b.none
   23254:	adds	w9, w9, w10
   23258:	b.mi	23254 <rl_old_menu_complete@@Base+0x30c>  // b.first
   2325c:	cmp	w10, #0x2
   23260:	str	w9, [x20, #792]
   23264:	b.lt	23294 <rl_old_menu_complete@@Base+0x34c>  // b.tstop
   23268:	cbnz	w9, 23294 <rl_old_menu_complete@@Base+0x34c>
   2326c:	bl	17390 <rl_ding@plt>
   23270:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   23274:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   23278:	ldr	x0, [x8, #776]
   2327c:	ldr	w1, [x9, #800]
   23280:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   23284:	add	x3, x3, #0x328
   23288:	mov	w2, #0x2                   	// #2
   2328c:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   23290:	b	232f0 <rl_old_menu_complete@@Base+0x3a8>
   23294:	ldr	x0, [x8, w9, uxtw #3]
   23298:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2329c:	ldr	w1, [x8, #800]
   232a0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   232a4:	add	x19, x19, #0x328
   232a8:	mov	w2, #0x1                   	// #1
   232ac:	mov	x3, x19
   232b0:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   232b4:	ldr	x8, [x22, #784]
   232b8:	ldrsw	x9, [x20, #792]
   232bc:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   232c0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   232c4:	ldr	x0, [x11, #776]
   232c8:	ldr	x21, [x8, x9, lsl #3]
   232cc:	ldrb	w19, [x19]
   232d0:	ldr	w20, [x10, #812]
   232d4:	mov	x1, x21
   232d8:	bl	170a0 <strcmp@plt>
   232dc:	mov	w3, w0
   232e0:	mov	x0, x21
   232e4:	mov	w1, w20
   232e8:	mov	w2, w19
   232ec:	bl	22600 <rl_filename_completion_function@@Base+0x1118>
   232f0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   232f4:	mov	w9, #0x1                   	// #1
   232f8:	str	w9, [x8, #696]
   232fc:	ldp	x20, x19, [sp, #96]
   23300:	ldp	x22, x21, [sp, #80]
   23304:	ldp	x24, x23, [sp, #64]
   23308:	ldp	x26, x25, [sp, #48]
   2330c:	ldp	x28, x27, [sp, #32]
   23310:	ldp	x29, x30, [sp, #16]
   23314:	mov	w0, wzr
   23318:	add	sp, sp, #0x70
   2331c:	ret

0000000000023320 <rl_menu_complete@@Base>:
   23320:	sub	sp, sp, #0x70
   23324:	stp	x29, x30, [sp, #16]
   23328:	stp	x28, x27, [sp, #32]
   2332c:	stp	x26, x25, [sp, #48]
   23330:	stp	x24, x23, [sp, #64]
   23334:	stp	x22, x21, [sp, #80]
   23338:	stp	x20, x19, [sp, #96]
   2333c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23340:	ldr	x8, [x8, #2072]
   23344:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23348:	ldr	x9, [x9, #2912]
   2334c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23350:	ldr	x10, [x8]
   23354:	ldr	x11, [x11, #3864]
   23358:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   2335c:	ldrb	w12, [x23, #844]
   23360:	cmp	x10, x9
   23364:	cset	w8, ne  // ne = any
   23368:	cmp	x10, x11
   2336c:	cset	w9, ne  // ne = any
   23370:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   23374:	add	x29, sp, #0x10
   23378:	tbnz	w12, #0, 233b8 <rl_menu_complete@@Base+0x98>
   2337c:	and	w8, w8, w9
   23380:	tbnz	w8, #0, 233b8 <rl_menu_complete@@Base+0x98>
   23384:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   23388:	ldr	w8, [x8, #836]
   2338c:	ldr	x9, [x22, #824]
   23390:	cbz	x9, 23510 <rl_menu_complete@@Base+0x1f0>
   23394:	cbz	w8, 23510 <rl_menu_complete@@Base+0x1f0>
   23398:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   2339c:	ldr	w11, [x20, #832]
   233a0:	adds	w10, w11, w0
   233a4:	str	w10, [x20, #832]
   233a8:	b.mi	23634 <rl_menu_complete@@Base+0x314>  // b.first
   233ac:	sdiv	w11, w10, w8
   233b0:	msub	w10, w11, w8, w10
   233b4:	b	23674 <rl_menu_complete@@Base+0x354>
   233b8:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   233bc:	str	w0, [sp, #8]
   233c0:	ldr	x0, [x24, #816]
   233c4:	cbz	x0, 233cc <rl_menu_complete@@Base+0xac>
   233c8:	bl	171b0 <free@plt>
   233cc:	ldr	x20, [x22, #824]
   233d0:	cbz	x20, 233f4 <rl_menu_complete@@Base+0xd4>
   233d4:	ldr	x0, [x20]
   233d8:	cbz	x0, 233ec <rl_menu_complete@@Base+0xcc>
   233dc:	add	x21, x20, #0x8
   233e0:	bl	169f0 <xfree@plt>
   233e4:	ldr	x0, [x21], #8
   233e8:	cbnz	x0, 233e0 <rl_menu_complete@@Base+0xc0>
   233ec:	mov	x0, x20
   233f0:	bl	169f0 <xfree@plt>
   233f4:	str	xzr, [x22, #824]
   233f8:	strb	wzr, [x23, #844]
   233fc:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23400:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23404:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23408:	ldr	x28, [x28, #2984]
   2340c:	ldr	x25, [x25, #3768]
   23410:	ldr	x8, [x8, #1904]
   23414:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23418:	ldr	x10, [x10, #2872]
   2341c:	mov	w9, #0x1                   	// #1
   23420:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23424:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23428:	mov	w11, #0x25                  	// #37
   2342c:	ldr	x12, [x12, #2432]
   23430:	ldr	x13, [x13, #3984]
   23434:	str	w9, [x8]
   23438:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2343c:	ldr	x8, [x8, #1960]
   23440:	str	w11, [x10]
   23444:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23448:	ldr	x10, [x10, #3320]
   2344c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23450:	ldr	x11, [x11, #2720]
   23454:	mov	w9, #0x20                  	// #32
   23458:	ldr	w10, [x10]
   2345c:	str	w9, [x8]
   23460:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23464:	ldr	x9, [x9, #2728]
   23468:	str	w10, [x11]
   2346c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23470:	ldr	x10, [x10, #3376]
   23474:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23478:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2347c:	ldr	x11, [x11, #2424]
   23480:	str	wzr, [x12]
   23484:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23488:	ldr	x21, [x21, #3512]
   2348c:	strb	wzr, [x8, #700]
   23490:	ldr	x8, [x10]
   23494:	ldr	x9, [x9]
   23498:	ldr	x12, [x28]
   2349c:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   234a0:	cmp	x8, #0x0
   234a4:	csel	x8, x11, x8, eq  // eq = none
   234a8:	cmp	x9, #0x0
   234ac:	csel	x20, x8, x9, eq  // eq = none
   234b0:	ldr	w8, [x21]
   234b4:	orr	x10, x12, #0x4000
   234b8:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   234bc:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   234c0:	str	x10, [x28]
   234c4:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   234c8:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   234cc:	str	wzr, [x13]
   234d0:	stur	wzr, [x29, #-4]
   234d4:	str	wzr, [x14, #836]
   234d8:	str	wzr, [x19, #832]
   234dc:	str	wzr, [x25]
   234e0:	str	wzr, [x10, #860]
   234e4:	str	w8, [x26, #852]
   234e8:	strb	wzr, [x27, #856]
   234ec:	cbz	w8, 23528 <rl_menu_complete@@Base+0x208>
   234f0:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   234f4:	add	x1, x1, #0x35c
   234f8:	sub	x0, x29, #0x4
   234fc:	bl	173d0 <_rl_find_completion_word@plt>
   23500:	ldr	w8, [x21]
   23504:	ldr	w1, [x26, #852]
   23508:	strb	w0, [x27, #856]
   2350c:	b	2352c <rl_menu_complete@@Base+0x20c>
   23510:	bl	17390 <rl_ding@plt>
   23514:	ldr	x0, [x22, #824]
   23518:	cbz	x0, 23520 <rl_menu_complete@@Base+0x200>
   2351c:	bl	171b0 <free@plt>
   23520:	str	xzr, [x22, #824]
   23524:	b	235e4 <rl_menu_complete@@Base+0x2c4>
   23528:	mov	w1, wzr
   2352c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   23530:	mov	w0, w8
   23534:	str	w8, [x23, #848]
   23538:	str	w1, [x21]
   2353c:	bl	178e0 <rl_copy_text@plt>
   23540:	ldr	w1, [x23, #848]
   23544:	ldr	w2, [x26, #852]
   23548:	ldur	w4, [x29, #-4]
   2354c:	ldrb	w5, [x27, #856]
   23550:	mov	x3, x20
   23554:	str	x0, [x24, #816]
   23558:	bl	21d44 <rl_filename_completion_function@@Base+0x85c>
   2355c:	str	x0, [x22, #824]
   23560:	cbz	x0, 235f0 <rl_menu_complete@@Base+0x2d0>
   23564:	ldr	x8, [x24, #816]
   23568:	ldr	x1, [x0]
   2356c:	mov	x0, x8
   23570:	bl	170a0 <strcmp@plt>
   23574:	ldr	w1, [x25]
   23578:	cmp	w0, #0x0
   2357c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   23580:	cset	w8, ne  // ne = any
   23584:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   23588:	add	x0, x0, #0x338
   2358c:	str	w8, [x21, #840]
   23590:	bl	21e60 <rl_filename_completion_function@@Base+0x978>
   23594:	cbz	w0, 235f8 <rl_menu_complete@@Base+0x2d8>
   23598:	ldr	x8, [x28]
   2359c:	ldr	x20, [x22, #824]
   235a0:	mov	x9, xzr
   235a4:	and	x8, x8, #0xffffffffffffbfff
   235a8:	str	x8, [x28]
   235ac:	ldr	x8, [x20, x9, lsl #3]
   235b0:	add	x9, x9, #0x1
   235b4:	cbnz	x8, 235ac <rl_menu_complete@@Base+0x28c>
   235b8:	sub	x8, x9, #0x1
   235bc:	cmp	w9, #0x1
   235c0:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   235c4:	str	w8, [x28, #836]
   235c8:	b.ne	23738 <rl_menu_complete@@Base+0x418>  // b.any
   235cc:	bl	17390 <rl_ding@plt>
   235d0:	ldr	x0, [x22, #824]
   235d4:	cbz	x0, 235dc <rl_menu_complete@@Base+0x2bc>
   235d8:	bl	171b0 <free@plt>
   235dc:	str	xzr, [x22, #824]
   235e0:	str	wzr, [x19, #832]
   235e4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   235e8:	str	wzr, [x8, #696]
   235ec:	b	23714 <rl_menu_complete@@Base+0x3f4>
   235f0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   235f4:	str	wzr, [x8, #840]
   235f8:	bl	17390 <rl_ding@plt>
   235fc:	ldr	x0, [x22, #824]
   23600:	cbz	x0, 23608 <rl_menu_complete@@Base+0x2e8>
   23604:	bl	171b0 <free@plt>
   23608:	ldr	x0, [x24, #816]
   2360c:	str	xzr, [x22, #824]
   23610:	cbz	x0, 23618 <rl_menu_complete@@Base+0x2f8>
   23614:	bl	171b0 <free@plt>
   23618:	ldr	x8, [x28]
   2361c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   23620:	str	xzr, [x24, #816]
   23624:	str	wzr, [x9, #696]
   23628:	and	x8, x8, #0xffffffffffffbfff
   2362c:	str	x8, [x28]
   23630:	b	23714 <rl_menu_complete@@Base+0x3f4>
   23634:	add	w11, w11, w0
   23638:	mvn	w11, w11
   2363c:	udiv	w11, w11, w8
   23640:	add	w11, w11, #0x1
   23644:	cmp	w11, #0x2
   23648:	b.cc	2366c <rl_menu_complete@@Base+0x34c>  // b.lo, b.ul, b.last
   2364c:	and	w12, w11, #0xfffffffe
   23650:	mov	w13, wzr
   23654:	madd	w10, w12, w8, w10
   23658:	add	w13, w13, #0x2
   2365c:	cmp	w13, w12
   23660:	b.ne	23658 <rl_menu_complete@@Base+0x338>  // b.any
   23664:	cmp	w11, w12
   23668:	b.eq	23674 <rl_menu_complete@@Base+0x354>  // b.none
   2366c:	adds	w10, w10, w8
   23670:	b.mi	2366c <rl_menu_complete@@Base+0x34c>  // b.first
   23674:	cmp	w8, #0x2
   23678:	str	w10, [x20, #832]
   2367c:	b.lt	236ac <rl_menu_complete@@Base+0x38c>  // b.tstop
   23680:	cbnz	w10, 236ac <rl_menu_complete@@Base+0x38c>
   23684:	bl	17390 <rl_ding@plt>
   23688:	ldr	x8, [x22, #824]
   2368c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   23690:	ldr	w1, [x9, #848]
   23694:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   23698:	ldr	x0, [x8]
   2369c:	add	x3, x3, #0x358
   236a0:	mov	w2, #0x2                   	// #2
   236a4:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   236a8:	b	23708 <rl_menu_complete@@Base+0x3e8>
   236ac:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   236b0:	ldr	x0, [x9, w10, uxtw #3]
   236b4:	ldr	w1, [x8, #848]
   236b8:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   236bc:	add	x19, x19, #0x358
   236c0:	mov	w2, #0x1                   	// #1
   236c4:	mov	x3, x19
   236c8:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   236cc:	ldr	x8, [x22, #824]
   236d0:	ldrsw	x9, [x20, #832]
   236d4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   236d8:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   236dc:	ldr	x0, [x11, #816]
   236e0:	ldr	x21, [x8, x9, lsl #3]
   236e4:	ldrb	w19, [x19]
   236e8:	ldr	w20, [x10, #860]
   236ec:	mov	x1, x21
   236f0:	bl	170a0 <strcmp@plt>
   236f4:	mov	w3, w0
   236f8:	mov	x0, x21
   236fc:	mov	w1, w20
   23700:	mov	w2, w19
   23704:	bl	22600 <rl_filename_completion_function@@Base+0x1118>
   23708:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2370c:	mov	w9, #0x1                   	// #1
   23710:	str	w9, [x8, #696]
   23714:	ldp	x20, x19, [sp, #96]
   23718:	ldp	x22, x21, [sp, #80]
   2371c:	ldp	x24, x23, [sp, #64]
   23720:	ldp	x26, x25, [sp, #48]
   23724:	ldp	x28, x27, [sp, #32]
   23728:	ldp	x29, x30, [sp, #16]
   2372c:	mov	w0, wzr
   23730:	add	sp, sp, #0x70
   23734:	ret
   23738:	mov	x19, x21
   2373c:	ldr	x21, [x20]
   23740:	ldrb	w9, [x21]
   23744:	cbz	w9, 237bc <rl_menu_complete@@Base+0x49c>
   23748:	ldr	x8, [x20, #8]
   2374c:	ldr	w1, [x23, #848]
   23750:	mov	w25, #0x1                   	// #1
   23754:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   23758:	cmp	x8, #0x0
   2375c:	cinc	w2, w25, ne  // ne = any
   23760:	add	x3, x3, #0x358
   23764:	mov	x0, x21
   23768:	bl	220a8 <rl_filename_completion_function@@Base+0xbc0>
   2376c:	ldr	x20, [x22, #824]
   23770:	ldr	w23, [x23, #848]
   23774:	ldr	x21, [x20]
   23778:	mov	x0, x21
   2377c:	bl	16440 <strlen@plt>
   23780:	mov	x8, x0
   23784:	ldr	x0, [x24, #816]
   23788:	add	w8, w23, w8
   2378c:	str	w8, [x26, #852]
   23790:	ldrb	w9, [x21]
   23794:	ldrb	w8, [x0]
   23798:	cmp	w8, w9
   2379c:	b.ne	237b0 <rl_menu_complete@@Base+0x490>  // b.any
   237a0:	mov	x1, x21
   237a4:	bl	170a0 <strcmp@plt>
   237a8:	cmp	w0, #0x0
   237ac:	cset	w25, ne  // ne = any
   237b0:	ldr	w8, [x28, #836]
   237b4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   237b8:	str	w25, [x9, #696]
   237bc:	cmp	w8, #0x2
   237c0:	b.lt	23814 <rl_menu_complete@@Base+0x4f4>  // b.tstop
   237c4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   237c8:	ldr	x9, [x9, #3368]
   237cc:	ldr	w9, [x9]
   237d0:	cbz	w9, 23814 <rl_menu_complete@@Base+0x4f4>
   237d4:	mov	x0, x20
   237d8:	bl	22358 <rl_filename_completion_function@@Base+0xe70>
   237dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   237e0:	ldr	x8, [x8, #2088]
   237e4:	ldr	w9, [x8]
   237e8:	ldr	w8, [x28, #836]
   237ec:	cmp	w9, #0x1
   237f0:	b.lt	23848 <rl_menu_complete@@Base+0x528>  // b.tstop
   237f4:	cmp	w8, w9
   237f8:	b.lt	23848 <rl_menu_complete@@Base+0x528>  // b.tstop
   237fc:	bl	17390 <rl_ding@plt>
   23800:	ldr	x0, [x22, #824]
   23804:	cbz	x0, 2380c <rl_menu_complete@@Base+0x4ec>
   23808:	bl	171b0 <free@plt>
   2380c:	str	xzr, [x22, #824]
   23810:	b	23838 <rl_menu_complete@@Base+0x518>
   23814:	ldr	w0, [sp, #8]
   23818:	cmp	w8, #0x1
   2381c:	b.gt	23860 <rl_menu_complete@@Base+0x540>
   23820:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   23824:	ldr	w1, [x8, #860]
   23828:	ldrb	w2, [x27, #856]
   2382c:	ldr	w3, [x19, #840]
   23830:	mov	x0, x21
   23834:	bl	22600 <rl_filename_completion_function@@Base+0x1118>
   23838:	mov	w8, #0x1                   	// #1
   2383c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   23840:	strb	w8, [x9, #844]
   23844:	b	23714 <rl_menu_complete@@Base+0x3f4>
   23848:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2384c:	ldr	x9, [x9, #3472]
   23850:	ldr	w9, [x9]
   23854:	cbnz	w9, 23878 <rl_menu_complete@@Base+0x558>
   23858:	ldr	w0, [sp, #8]
   2385c:	b	2338c <rl_menu_complete@@Base+0x6c>
   23860:	cmp	w8, #0x2
   23864:	b.lt	2338c <rl_menu_complete@@Base+0x6c>  // b.tstop
   23868:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2386c:	ldr	x9, [x9, #3472]
   23870:	ldr	w9, [x9]
   23874:	cbz	w9, 2338c <rl_menu_complete@@Base+0x6c>
   23878:	bl	17390 <rl_ding@plt>
   2387c:	b	23714 <rl_menu_complete@@Base+0x3f4>

0000000000023880 <rl_backward_menu_complete@@Base>:
   23880:	stp	x29, x30, [sp, #-16]!
   23884:	neg	w0, w0
   23888:	mov	x29, sp
   2388c:	bl	16f40 <rl_menu_complete@plt>
   23890:	mov	w0, wzr
   23894:	ldp	x29, x30, [sp], #16
   23898:	ret
   2389c:	sub	w8, w0, #0x20
   238a0:	cmp	w8, #0x5e
   238a4:	b.hi	238c8 <rl_backward_menu_complete@@Base+0x48>  // b.pmore
   238a8:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   238ac:	add	x9, x9, #0x4e8
   238b0:	adr	x10, 238c0 <rl_backward_menu_complete@@Base+0x40>
   238b4:	ldrb	w11, [x9, x8]
   238b8:	add	x10, x10, x11, lsl #2
   238bc:	br	x10
   238c0:	mov	w0, #0x1                   	// #1
   238c4:	ret
   238c8:	b	169a0 <wcwidth@plt>
   238cc:	sub	sp, sp, #0x70
   238d0:	stp	x29, x30, [sp, #16]
   238d4:	stp	x28, x27, [sp, #32]
   238d8:	stp	x26, x25, [sp, #48]
   238dc:	stp	x24, x23, [sp, #64]
   238e0:	stp	x22, x21, [sp, #80]
   238e4:	stp	x20, x19, [sp, #96]
   238e8:	add	x29, sp, #0x10
   238ec:	mov	x19, x2
   238f0:	mov	w22, w1
   238f4:	mov	x20, x0
   238f8:	bl	16440 <strlen@plt>
   238fc:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23900:	ldr	x26, [x26, #2848]
   23904:	str	xzr, [sp, #8]
   23908:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2390c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23910:	ldr	w8, [x26]
   23914:	ldr	x9, [x9, #3112]
   23918:	mov	x23, x0
   2391c:	cmp	w8, #0x1
   23920:	ldr	w9, [x9]
   23924:	ldr	x21, [x21, #2904]
   23928:	ccmp	w23, w22, #0x0, ge  // ge = tcont
   2392c:	csel	w24, w22, wzr, gt
   23930:	cbz	w9, 23954 <rl_backward_menu_complete@@Base+0xd4>
   23934:	cbz	w24, 23944 <rl_backward_menu_complete@@Base+0xc4>
   23938:	ldr	w9, [x21]
   2393c:	cmp	w9, #0x0
   23940:	b.gt	23954 <rl_backward_menu_complete@@Base+0xd4>
   23944:	bl	16360 <_rl_set_normal_color@plt>
   23948:	mov	x0, x19
   2394c:	bl	16f10 <_rl_print_color_indicator@plt>
   23950:	ldr	w8, [x26]
   23954:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23958:	ldr	x26, [x26, #1928]
   2395c:	cbz	w24, 239b0 <rl_backward_menu_complete@@Base+0x130>
   23960:	cmp	w8, #0x1
   23964:	b.lt	239b0 <rl_backward_menu_complete@@Base+0x130>  // b.tstop
   23968:	ldrb	w8, [x20, w24, sxtw]
   2396c:	ldr	x1, [x26]
   23970:	mov	w9, #0x2e                  	// #46
   23974:	cmp	w8, #0x2e
   23978:	mov	w8, #0x5f                  	// #95
   2397c:	csel	w21, w8, w9, eq  // eq = none
   23980:	mov	w0, w21
   23984:	bl	16670 <putc@plt>
   23988:	ldr	x1, [x26]
   2398c:	mov	w0, w21
   23990:	bl	16670 <putc@plt>
   23994:	ldr	x1, [x26]
   23998:	mov	w0, w21
   2399c:	bl	16670 <putc@plt>
   239a0:	mov	w28, wzr
   239a4:	mov	w21, #0x3                   	// #3
   239a8:	mov	w24, w22
   239ac:	b	239e4 <rl_backward_menu_complete@@Base+0x164>
   239b0:	mov	w28, wzr
   239b4:	cbz	w24, 239e0 <rl_backward_menu_complete@@Base+0x160>
   239b8:	ldr	w8, [x21]
   239bc:	mov	w21, w28
   239c0:	cmp	w8, #0x1
   239c4:	b.lt	239e4 <rl_backward_menu_complete@@Base+0x164>  // b.tstop
   239c8:	bl	16360 <_rl_set_normal_color@plt>
   239cc:	bl	17120 <_rl_print_prefix_color@plt>
   239d0:	mov	w21, wzr
   239d4:	mov	w24, wzr
   239d8:	mov	w28, w22
   239dc:	b	239e4 <rl_backward_menu_complete@@Base+0x164>
   239e0:	mov	w21, w28
   239e4:	add	x22, x20, w24, sxtw
   239e8:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   239ec:	ldrb	w8, [x22]
   239f0:	ldr	x25, [x25, #2992]
   239f4:	cbz	w8, 23b3c <rl_backward_menu_complete@@Base+0x2bc>
   239f8:	add	x9, x20, w23, sxtw
   239fc:	add	x27, x9, #0x1
   23a00:	add	x23, x25, #0x170
   23a04:	b	23a14 <rl_backward_menu_complete@@Base+0x194>
   23a08:	mov	w28, wzr
   23a0c:	ldrb	w8, [x22]
   23a10:	cbz	w8, 23b3c <rl_backward_menu_complete@@Base+0x2bc>
   23a14:	and	w8, w8, #0xff
   23a18:	cmp	w8, #0x1f
   23a1c:	b.hi	23a5c <rl_backward_menu_complete@@Base+0x1dc>  // b.pmore
   23a20:	ldr	x1, [x26]
   23a24:	mov	w0, #0x5e                  	// #94
   23a28:	bl	16670 <putc@plt>
   23a2c:	bl	17100 <__ctype_b_loc@plt>
   23a30:	ldrb	w8, [x22]
   23a34:	ldr	x9, [x0]
   23a38:	orr	x24, x8, #0x40
   23a3c:	ldrh	w8, [x9, x24, lsl #1]
   23a40:	tbz	w8, #9, 23a50 <rl_backward_menu_complete@@Base+0x1d0>
   23a44:	bl	16dc0 <__ctype_toupper_loc@plt>
   23a48:	ldr	x8, [x0]
   23a4c:	ldr	w24, [x8, x24, lsl #2]
   23a50:	ldr	x1, [x26]
   23a54:	mov	w0, w24
   23a58:	b	23a78 <rl_backward_menu_complete@@Base+0x1f8>
   23a5c:	cmp	w8, #0x7f
   23a60:	b.ne	23a94 <rl_backward_menu_complete@@Base+0x214>  // b.any
   23a64:	ldr	x1, [x26]
   23a68:	mov	w0, #0x5e                  	// #94
   23a6c:	bl	16670 <putc@plt>
   23a70:	ldr	x1, [x26]
   23a74:	mov	w0, #0x3f                  	// #63
   23a78:	bl	16670 <putc@plt>
   23a7c:	add	w21, w21, #0x2
   23a80:	add	x22, x22, #0x1
   23a84:	str	xzr, [sp, #8]
   23a88:	cmp	w28, #0x1
   23a8c:	b.ge	23b04 <rl_backward_menu_complete@@Base+0x284>  // b.tcont
   23a90:	b	23a0c <rl_backward_menu_complete@@Base+0x18c>
   23a94:	sub	x2, x27, x22
   23a98:	add	x0, sp, #0x4
   23a9c:	add	x3, sp, #0x8
   23aa0:	mov	x1, x22
   23aa4:	bl	16370 <mbrtowc@plt>
   23aa8:	cmn	x0, #0x2
   23aac:	b.cc	23ac0 <rl_backward_menu_complete@@Base+0x240>  // b.lo, b.ul, b.last
   23ab0:	str	xzr, [sp, #8]
   23ab4:	mov	w24, #0x1                   	// #1
   23ab8:	mov	w25, #0x1                   	// #1
   23abc:	b	23ad8 <rl_backward_menu_complete@@Base+0x258>
   23ac0:	mov	x24, x0
   23ac4:	cbz	x0, 23b3c <rl_backward_menu_complete@@Base+0x2bc>
   23ac8:	ldr	w0, [sp, #4]
   23acc:	bl	2389c <rl_backward_menu_complete@@Base+0x1c>
   23ad0:	cmp	w0, #0x0
   23ad4:	csinc	w25, w0, wzr, ge  // ge = tcont
   23ad8:	ldr	x3, [x26]
   23adc:	mov	w1, #0x1                   	// #1
   23ae0:	mov	x0, x22
   23ae4:	mov	x2, x24
   23ae8:	bl	173e0 <fwrite@plt>
   23aec:	add	w21, w25, w21
   23af0:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23af4:	ldr	x25, [x25, #2992]
   23af8:	add	x22, x22, x24
   23afc:	cmp	w28, #0x1
   23b00:	b.lt	23a0c <rl_backward_menu_complete@@Base+0x18c>  // b.tstop
   23b04:	sub	x8, x22, x20
   23b08:	cmp	x8, w28, uxtw
   23b0c:	b.lt	23a0c <rl_backward_menu_complete@@Base+0x18c>  // b.tstop
   23b10:	bl	16b20 <_rl_prep_non_filename_text@plt>
   23b14:	mov	x0, x23
   23b18:	bl	17590 <_rl_put_indicator@plt>
   23b1c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23b20:	ldr	x8, [x8, #3112]
   23b24:	ldr	w8, [x8]
   23b28:	cbz	w8, 23a08 <rl_backward_menu_complete@@Base+0x188>
   23b2c:	bl	16360 <_rl_set_normal_color@plt>
   23b30:	mov	x0, x19
   23b34:	bl	16f10 <_rl_print_color_indicator@plt>
   23b38:	b	23a08 <rl_backward_menu_complete@@Base+0x188>
   23b3c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23b40:	ldr	x8, [x8, #3112]
   23b44:	ldr	w8, [x8]
   23b48:	cbz	w8, 23b58 <rl_backward_menu_complete@@Base+0x2d8>
   23b4c:	bl	16b20 <_rl_prep_non_filename_text@plt>
   23b50:	add	x0, x25, #0x170
   23b54:	bl	17590 <_rl_put_indicator@plt>
   23b58:	mov	w0, w21
   23b5c:	ldp	x20, x19, [sp, #96]
   23b60:	ldp	x22, x21, [sp, #80]
   23b64:	ldp	x24, x23, [sp, #64]
   23b68:	ldp	x26, x25, [sp, #48]
   23b6c:	ldp	x28, x27, [sp, #32]
   23b70:	ldp	x29, x30, [sp, #16]
   23b74:	add	sp, sp, #0x70
   23b78:	ret
   23b7c:	sub	sp, sp, #0xb0
   23b80:	stp	x29, x30, [sp, #144]
   23b84:	stp	x20, x19, [sp, #160]
   23b88:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23b8c:	ldr	x20, [x20, #3728]
   23b90:	mov	x19, x0
   23b94:	mov	x1, x0
   23b98:	add	x29, sp, #0x90
   23b9c:	ldr	x8, [x20]
   23ba0:	str	xzr, [sp, #8]
   23ba4:	cbz	x8, 23bd4 <rl_backward_menu_complete@@Base+0x354>
   23ba8:	mov	x0, x19
   23bac:	bl	16440 <strlen@plt>
   23bb0:	add	x0, x0, #0x1
   23bb4:	bl	16bf0 <xmalloc@plt>
   23bb8:	mov	x1, x19
   23bbc:	bl	17480 <strcpy@plt>
   23bc0:	ldr	x8, [x20]
   23bc4:	str	x0, [sp, #8]
   23bc8:	add	x0, sp, #0x8
   23bcc:	blr	x8
   23bd0:	ldr	x1, [sp, #8]
   23bd4:	add	x2, sp, #0x10
   23bd8:	mov	w0, wzr
   23bdc:	bl	174e0 <__lxstat@plt>
   23be0:	cmn	w0, #0x1
   23be4:	b.eq	23c24 <rl_backward_menu_complete@@Base+0x3a4>  // b.none
   23be8:	ldr	w8, [sp, #32]
   23bec:	and	w8, w8, #0xf000
   23bf0:	sub	w8, w8, #0x1, lsl #12
   23bf4:	lsr	w8, w8, #12
   23bf8:	cmp	w8, #0xb
   23bfc:	b.hi	23c24 <rl_backward_menu_complete@@Base+0x3a4>  // b.pmore
   23c00:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   23c04:	add	x9, x9, #0x547
   23c08:	adr	x10, 23c1c <rl_backward_menu_complete@@Base+0x39c>
   23c0c:	ldrb	w11, [x9, x8]
   23c10:	add	x10, x10, x11, lsl #2
   23c14:	mov	w20, #0x2f                  	// #47
   23c18:	br	x10
   23c1c:	mov	w20, #0x7c                  	// #124
   23c20:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c24:	mov	w20, wzr
   23c28:	ldr	x0, [sp, #8]
   23c2c:	bl	169f0 <xfree@plt>
   23c30:	mov	w0, w20
   23c34:	ldp	x20, x19, [sp, #160]
   23c38:	ldp	x29, x30, [sp, #144]
   23c3c:	add	sp, sp, #0xb0
   23c40:	ret
   23c44:	mov	w20, #0x25                  	// #37
   23c48:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c4c:	mov	w20, #0x23                  	// #35
   23c50:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c54:	mov	w1, #0x1                   	// #1
   23c58:	mov	x0, x19
   23c5c:	bl	16fe0 <access@plt>
   23c60:	cmp	w0, #0x0
   23c64:	mov	w8, #0x2a                  	// #42
   23c68:	csel	w20, w8, wzr, eq  // eq = none
   23c6c:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c70:	mov	w20, #0x40                  	// #64
   23c74:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c78:	mov	w20, #0x3d                  	// #61
   23c7c:	b	23c28 <rl_backward_menu_complete@@Base+0x3a8>
   23c80:	stp	x29, x30, [sp, #-64]!
   23c84:	str	x23, [sp, #16]
   23c88:	stp	x22, x21, [sp, #32]
   23c8c:	stp	x20, x19, [sp, #48]
   23c90:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23c94:	ldr	x21, [x21, #2984]
   23c98:	mov	x29, sp
   23c9c:	ldr	x8, [x21]
   23ca0:	tbnz	w8, #19, 23d48 <rl_backward_menu_complete@@Base+0x4c8>
   23ca4:	mov	x23, #0x100000001           	// #4294967297
   23ca8:	mov	w19, w0
   23cac:	mov	w22, #0x1                   	// #1
   23cb0:	movk	x23, #0x2, lsl #48
   23cb4:	b	23cc0 <rl_backward_menu_complete@@Base+0x440>
   23cb8:	bl	17390 <rl_ding@plt>
   23cbc:	ldr	x8, [x21]
   23cc0:	orr	x8, x8, #0x40
   23cc4:	str	x8, [x21]
   23cc8:	bl	16e60 <rl_read_key@plt>
   23ccc:	ldr	x9, [x21]
   23cd0:	sub	w8, w0, #0x4e
   23cd4:	mov	w20, w0
   23cd8:	cmp	w8, #0x31
   23cdc:	and	x9, x9, #0xffffffffffffffbf
   23ce0:	mov	w0, #0x1                   	// #1
   23ce4:	str	x9, [x21]
   23ce8:	b.hi	23d04 <rl_backward_menu_complete@@Base+0x484>  // b.pmore
   23cec:	lsl	x9, x22, x8
   23cf0:	tst	x9, x23
   23cf4:	b.ne	23d40 <rl_backward_menu_complete@@Base+0x4c0>  // b.any
   23cf8:	lsl	x8, x22, x8
   23cfc:	tst	x8, #0x80000000800
   23d00:	b.ne	23d4c <rl_backward_menu_complete@@Base+0x4cc>  // b.any
   23d04:	cmp	w20, #0x20
   23d08:	b.eq	23d4c <rl_backward_menu_complete@@Base+0x4cc>  // b.none
   23d0c:	cmp	w20, #0x7
   23d10:	b.eq	23d18 <rl_backward_menu_complete@@Base+0x498>  // b.none
   23d14:	tbz	w20, #31, 23d1c <rl_backward_menu_complete@@Base+0x49c>
   23d18:	bl	174a0 <_rl_abort_internal@plt>
   23d1c:	cbz	w19, 23cb8 <rl_backward_menu_complete@@Base+0x438>
   23d20:	cmp	w20, #0xa
   23d24:	mov	w0, #0x2                   	// #2
   23d28:	b.eq	23d4c <rl_backward_menu_complete@@Base+0x4cc>  // b.none
   23d2c:	cmp	w20, #0xd
   23d30:	b.eq	23d4c <rl_backward_menu_complete@@Base+0x4cc>  // b.none
   23d34:	orr	w8, w20, #0x20
   23d38:	cmp	w8, #0x71
   23d3c:	b.ne	23cb8 <rl_backward_menu_complete@@Base+0x438>  // b.any
   23d40:	mov	w0, wzr
   23d44:	b	23d4c <rl_backward_menu_complete@@Base+0x4cc>
   23d48:	mov	w0, #0x1                   	// #1
   23d4c:	ldp	x20, x19, [sp, #48]
   23d50:	ldp	x22, x21, [sp, #32]
   23d54:	ldr	x23, [sp, #16]
   23d58:	ldp	x29, x30, [sp], #64
   23d5c:	ret

0000000000023d60 <rl_add_defun@@Base>:
   23d60:	stp	x29, x30, [sp, #-48]!
   23d64:	stp	x20, x19, [sp, #32]
   23d68:	mov	x19, x1
   23d6c:	cmn	w2, #0x1
   23d70:	mov	x20, x0
   23d74:	str	x21, [sp, #16]
   23d78:	mov	x29, sp
   23d7c:	b.eq	23e44 <rl_add_defun@@Base+0xe4>  // b.none
   23d80:	tbnz	w2, #31, 23e44 <rl_add_defun@@Base+0xe4>
   23d84:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23d88:	ldr	x21, [x21, #1992]
   23d8c:	and	w8, w2, #0xffffff80
   23d90:	cmp	w8, #0x80
   23d94:	ldr	x3, [x21]
   23d98:	b.ne	23dd4 <rl_add_defun@@Base+0x74>  // b.any
   23d9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23da0:	ldr	x8, [x8, #3456]
   23da4:	ldr	w8, [x8]
   23da8:	cbz	w8, 23dd4 <rl_add_defun@@Base+0x74>
   23dac:	ldrb	w8, [x3, #432]
   23db0:	cmp	w8, #0x1
   23db4:	b.ne	23e44 <rl_add_defun@@Base+0xe4>  // b.any
   23db8:	ldr	x8, [x3, #440]
   23dbc:	sxtw	x9, w2
   23dc0:	and	x9, x9, #0xffffffffffffff7f
   23dc4:	add	x8, x8, x9, lsl #4
   23dc8:	strb	wzr, [x8]
   23dcc:	str	x19, [x8, #8]
   23dd0:	b	23e44 <rl_add_defun@@Base+0xe4>
   23dd4:	add	x8, x3, w2, uxtw #4
   23dd8:	ldrb	w9, [x8]
   23ddc:	cmp	w9, #0x1
   23de0:	b.ne	23dfc <rl_add_defun@@Base+0x9c>  // b.any
   23de4:	cmp	w2, #0x5c
   23de8:	b.ne	23e10 <rl_add_defun@@Base+0xb0>  // b.any
   23dec:	mov	w8, #0x5c                  	// #92
   23df0:	strb	w8, [x29, #28]
   23df4:	mov	w8, #0x1                   	// #1
   23df8:	b	23e14 <rl_add_defun@@Base+0xb4>
   23dfc:	mov	w9, w2
   23e00:	strb	wzr, [x8]
   23e04:	add	x8, x3, x9, lsl #4
   23e08:	str	x19, [x8, #8]
   23e0c:	b	23e34 <rl_add_defun@@Base+0xd4>
   23e10:	mov	w8, wzr
   23e14:	add	x9, x29, #0x1c
   23e18:	orr	x8, x8, x9
   23e1c:	strb	w2, [x8]
   23e20:	add	x1, x29, #0x1c
   23e24:	mov	w0, wzr
   23e28:	mov	x2, x19
   23e2c:	strb	wzr, [x8, #1]
   23e30:	bl	168a0 <rl_generic_bind@plt>
   23e34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23e38:	ldr	x8, [x21]
   23e3c:	ldr	x9, [x9, #2136]
   23e40:	str	x8, [x9]
   23e44:	mov	x0, x20
   23e48:	mov	x1, x19
   23e4c:	bl	17160 <rl_add_funmap_entry@plt>
   23e50:	ldp	x20, x19, [sp, #32]
   23e54:	ldr	x21, [sp, #16]
   23e58:	mov	w0, wzr
   23e5c:	ldp	x29, x30, [sp], #48
   23e60:	ret

0000000000023e64 <rl_bind_key@@Base>:
   23e64:	stp	x29, x30, [sp, #-32]!
   23e68:	str	x19, [sp, #16]
   23e6c:	mov	x29, sp
   23e70:	tbnz	w0, #31, 23f3c <rl_bind_key@@Base+0xd8>
   23e74:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23e78:	ldr	x19, [x19, #1992]
   23e7c:	and	w8, w0, #0xffffff80
   23e80:	mov	x2, x1
   23e84:	cmp	w8, #0x80
   23e88:	ldr	x3, [x19]
   23e8c:	b.ne	23ecc <rl_bind_key@@Base+0x68>  // b.any
   23e90:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23e94:	ldr	x8, [x8, #3456]
   23e98:	ldr	w8, [x8]
   23e9c:	cbz	w8, 23ecc <rl_bind_key@@Base+0x68>
   23ea0:	ldrb	w8, [x3, #432]
   23ea4:	cmp	w8, #0x1
   23ea8:	b.ne	23f3c <rl_bind_key@@Base+0xd8>  // b.any
   23eac:	ldr	x8, [x3, #440]
   23eb0:	sxtw	x9, w0
   23eb4:	and	x9, x9, #0xffffffffffffff7f
   23eb8:	mov	w0, wzr
   23ebc:	add	x8, x8, x9, lsl #4
   23ec0:	strb	wzr, [x8]
   23ec4:	str	x2, [x8, #8]
   23ec8:	b	23f3c <rl_bind_key@@Base+0xd8>
   23ecc:	add	x8, x3, w0, uxtw #4
   23ed0:	ldrb	w9, [x8]
   23ed4:	cmp	w9, #0x1
   23ed8:	b.ne	23ef4 <rl_bind_key@@Base+0x90>  // b.any
   23edc:	cmp	w0, #0x5c
   23ee0:	b.ne	23f08 <rl_bind_key@@Base+0xa4>  // b.any
   23ee4:	mov	w8, #0x5c                  	// #92
   23ee8:	strb	w8, [x29, #28]
   23eec:	mov	w8, #0x1                   	// #1
   23ef0:	b	23f0c <rl_bind_key@@Base+0xa8>
   23ef4:	mov	w9, w0
   23ef8:	strb	wzr, [x8]
   23efc:	add	x8, x3, x9, lsl #4
   23f00:	str	x2, [x8, #8]
   23f04:	b	23f28 <rl_bind_key@@Base+0xc4>
   23f08:	mov	w8, wzr
   23f0c:	add	x9, x29, #0x1c
   23f10:	orr	x8, x8, x9
   23f14:	strb	w0, [x8]
   23f18:	add	x1, x29, #0x1c
   23f1c:	mov	w0, wzr
   23f20:	strb	wzr, [x8, #1]
   23f24:	bl	168a0 <rl_generic_bind@plt>
   23f28:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23f2c:	ldr	x8, [x19]
   23f30:	ldr	x9, [x9, #2136]
   23f34:	mov	w0, wzr
   23f38:	str	x8, [x9]
   23f3c:	ldr	x19, [sp, #16]
   23f40:	ldp	x29, x30, [sp], #32
   23f44:	ret

0000000000023f48 <rl_bind_keyseq@@Base>:
   23f48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23f4c:	ldr	x8, [x8, #1992]
   23f50:	mov	x2, x1
   23f54:	mov	x1, x0
   23f58:	mov	w0, wzr
   23f5c:	ldr	x3, [x8]
   23f60:	b	168a0 <rl_generic_bind@plt>

0000000000023f64 <rl_bind_key_in_map@@Base>:
   23f64:	sub	sp, sp, #0x30
   23f68:	stp	x29, x30, [sp, #16]
   23f6c:	stp	x20, x19, [sp, #32]
   23f70:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23f74:	ldr	x19, [x19, #1992]
   23f78:	mov	x3, x2
   23f7c:	add	x29, sp, #0x10
   23f80:	ldr	x20, [x19]
   23f84:	str	x2, [x19]
   23f88:	tbnz	w0, #31, 24048 <rl_bind_key_in_map@@Base+0xe4>
   23f8c:	and	w8, w0, #0xffffff80
   23f90:	mov	x2, x1
   23f94:	cmp	w8, #0x80
   23f98:	b.ne	23fd8 <rl_bind_key_in_map@@Base+0x74>  // b.any
   23f9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   23fa0:	ldr	x8, [x8, #3456]
   23fa4:	ldr	w8, [x8]
   23fa8:	cbz	w8, 23fd8 <rl_bind_key_in_map@@Base+0x74>
   23fac:	ldrb	w8, [x3, #432]
   23fb0:	cmp	w8, #0x1
   23fb4:	b.ne	24048 <rl_bind_key_in_map@@Base+0xe4>  // b.any
   23fb8:	ldr	x8, [x3, #440]
   23fbc:	sxtw	x9, w0
   23fc0:	and	x9, x9, #0xffffffffffffff7f
   23fc4:	mov	w0, wzr
   23fc8:	add	x8, x8, x9, lsl #4
   23fcc:	strb	wzr, [x8]
   23fd0:	str	x2, [x8, #8]
   23fd4:	b	24048 <rl_bind_key_in_map@@Base+0xe4>
   23fd8:	add	x8, x3, w0, uxtw #4
   23fdc:	ldrb	w9, [x8]
   23fe0:	cmp	w9, #0x1
   23fe4:	b.ne	24000 <rl_bind_key_in_map@@Base+0x9c>  // b.any
   23fe8:	cmp	w0, #0x5c
   23fec:	b.ne	24014 <rl_bind_key_in_map@@Base+0xb0>  // b.any
   23ff0:	mov	w8, #0x5c                  	// #92
   23ff4:	sturb	w8, [x29, #-4]
   23ff8:	mov	w8, #0x1                   	// #1
   23ffc:	b	24018 <rl_bind_key_in_map@@Base+0xb4>
   24000:	mov	w9, w0
   24004:	strb	wzr, [x8]
   24008:	add	x8, x3, x9, lsl #4
   2400c:	str	x2, [x8, #8]
   24010:	b	24034 <rl_bind_key_in_map@@Base+0xd0>
   24014:	mov	w8, wzr
   24018:	sub	x9, x29, #0x4
   2401c:	orr	x8, x8, x9
   24020:	strb	w0, [x8]
   24024:	sub	x1, x29, #0x4
   24028:	mov	w0, wzr
   2402c:	strb	wzr, [x8, #1]
   24030:	bl	168a0 <rl_generic_bind@plt>
   24034:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24038:	ldr	x8, [x19]
   2403c:	ldr	x9, [x9, #2136]
   24040:	mov	w0, wzr
   24044:	str	x8, [x9]
   24048:	str	x20, [x19]
   2404c:	ldp	x20, x19, [sp, #32]
   24050:	ldp	x29, x30, [sp, #16]
   24054:	add	sp, sp, #0x30
   24058:	ret

000000000002405c <rl_bind_key_if_unbound_in_map@@Base>:
   2405c:	stp	x29, x30, [sp, #-32]!
   24060:	and	w0, w0, #0xff
   24064:	stp	x20, x19, [sp, #16]
   24068:	mov	x29, sp
   2406c:	mov	x19, x2
   24070:	mov	x20, x1
   24074:	bl	17270 <rl_untranslate_keyseq@plt>
   24078:	mov	x1, x20
   2407c:	mov	x2, x19
   24080:	ldp	x20, x19, [sp, #16]
   24084:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   24088:	add	x0, x0, #0x360
   2408c:	ldp	x29, x30, [sp], #32
   24090:	b	17070 <rl_bind_keyseq_if_unbound_in_map@plt>

0000000000024094 <rl_untranslate_keyseq@@Base>:
   24094:	stp	x29, x30, [sp, #-64]!
   24098:	stp	x20, x19, [sp, #48]
   2409c:	and	w8, w0, #0xffffff80
   240a0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   240a4:	mov	w20, w0
   240a8:	cmp	w8, #0x80
   240ac:	add	x19, x19, #0x360
   240b0:	str	x23, [sp, #16]
   240b4:	stp	x22, x21, [sp, #32]
   240b8:	mov	x29, sp
   240bc:	b.ne	24104 <rl_untranslate_keyseq@@Base+0x70>  // b.any
   240c0:	mov	w8, #0x4d5c                	// #19804
   240c4:	mov	w9, #0x2d                  	// #45
   240c8:	and	w20, w20, #0xffffff7f
   240cc:	strh	w8, [x19]
   240d0:	strb	w9, [x19, #2]
   240d4:	mov	w8, #0x3                   	// #3
   240d8:	cmp	w20, #0x5c
   240dc:	b.eq	241b8 <rl_untranslate_keyseq@@Base+0x124>  // b.none
   240e0:	cmp	w20, #0x22
   240e4:	b.eq	241b8 <rl_untranslate_keyseq@@Base+0x124>  // b.none
   240e8:	cmp	w20, #0x1b
   240ec:	b.ne	241c8 <rl_untranslate_keyseq@@Base+0x134>  // b.any
   240f0:	mov	w9, #0x5c                  	// #92
   240f4:	strb	w9, [x19, w8, uxtw]
   240f8:	add	w8, w8, #0x1
   240fc:	mov	w20, #0x65                  	// #101
   24100:	b	241c8 <rl_untranslate_keyseq@@Base+0x134>
   24104:	cmp	w20, #0x1b
   24108:	b.ne	24124 <rl_untranslate_keyseq@@Base+0x90>  // b.any
   2410c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   24110:	mov	w10, #0x5c                  	// #92
   24114:	mov	w8, #0x1                   	// #1
   24118:	strb	w10, [x9, #864]
   2411c:	mov	w20, #0x65                  	// #101
   24120:	b	241c8 <rl_untranslate_keyseq@@Base+0x134>
   24124:	cmp	w20, #0x1f
   24128:	b.gt	24188 <rl_untranslate_keyseq@@Base+0xf4>
   2412c:	tbnz	w20, #7, 24188 <rl_untranslate_keyseq@@Base+0xf4>
   24130:	mov	w8, #0x435c                	// #17244
   24134:	mov	w9, #0x2d                  	// #45
   24138:	strh	w8, [x19]
   2413c:	strb	w9, [x19, #2]
   24140:	bl	17100 <__ctype_b_loc@plt>
   24144:	ldr	x23, [x0]
   24148:	orr	w20, w20, #0x40
   2414c:	and	w21, w20, #0xff
   24150:	mov	x8, x21
   24154:	ldrh	w22, [x23, w21, uxtw #1]
   24158:	tbz	w22, #9, 2416c <rl_untranslate_keyseq@@Base+0xd8>
   2415c:	bl	16dc0 <__ctype_toupper_loc@plt>
   24160:	ldr	x8, [x0]
   24164:	lsl	x9, x21, #2
   24168:	ldrb	w8, [x8, x9]
   2416c:	ldrh	w8, [x23, x8, lsl #1]
   24170:	tbnz	w8, #8, 241ec <rl_untranslate_keyseq@@Base+0x158>
   24174:	tbz	w22, #9, 240d4 <rl_untranslate_keyseq@@Base+0x40>
   24178:	bl	16dc0 <__ctype_toupper_loc@plt>
   2417c:	ldr	x8, [x0]
   24180:	ldr	w20, [x8, x21, lsl #2]
   24184:	b	240d4 <rl_untranslate_keyseq@@Base+0x40>
   24188:	cmp	w20, #0x7f
   2418c:	b.ne	241ac <rl_untranslate_keyseq@@Base+0x118>  // b.any
   24190:	mov	w9, #0x435c                	// #17244
   24194:	mov	w10, #0x2d                  	// #45
   24198:	mov	w8, #0x3                   	// #3
   2419c:	strh	w9, [x19]
   241a0:	strb	w10, [x19, #2]
   241a4:	mov	w20, #0x3f                  	// #63
   241a8:	b	241c8 <rl_untranslate_keyseq@@Base+0x134>
   241ac:	mov	w8, wzr
   241b0:	cmp	w20, #0x5c
   241b4:	b.ne	240e0 <rl_untranslate_keyseq@@Base+0x4c>  // b.any
   241b8:	add	w9, w8, #0x1
   241bc:	mov	w10, #0x5c                  	// #92
   241c0:	strb	w10, [x19, w8, uxtw]
   241c4:	mov	w8, w9
   241c8:	add	x8, x19, x8
   241cc:	strb	w20, [x8]
   241d0:	mov	x0, x19
   241d4:	ldp	x20, x19, [sp, #48]
   241d8:	ldp	x22, x21, [sp, #32]
   241dc:	ldr	x23, [sp, #16]
   241e0:	strb	wzr, [x8, #1]
   241e4:	ldp	x29, x30, [sp], #64
   241e8:	ret
   241ec:	bl	16810 <__ctype_tolower_loc@plt>
   241f0:	ldr	x20, [x0]
   241f4:	tbz	w22, #9, 24208 <rl_untranslate_keyseq@@Base+0x174>
   241f8:	bl	16dc0 <__ctype_toupper_loc@plt>
   241fc:	ldr	x8, [x0]
   24200:	lsl	x9, x21, #2
   24204:	ldrb	w21, [x8, x9]
   24208:	ldr	w20, [x20, x21, lsl #2]
   2420c:	b	240d4 <rl_untranslate_keyseq@@Base+0x40>

0000000000024210 <rl_bind_keyseq_if_unbound_in_map@@Base>:
   24210:	stp	x29, x30, [sp, #-64]!
   24214:	str	x23, [sp, #16]
   24218:	stp	x22, x21, [sp, #32]
   2421c:	stp	x20, x19, [sp, #48]
   24220:	mov	x29, sp
   24224:	cbz	x0, 2435c <rl_bind_keyseq_if_unbound_in_map@@Base+0x14c>
   24228:	mov	x19, x2
   2422c:	mov	x20, x1
   24230:	mov	x21, x0
   24234:	bl	16440 <strlen@plt>
   24238:	mov	w8, #0x1                   	// #1
   2423c:	bfi	x8, x0, #1, #63
   24240:	mov	x0, x8
   24244:	bl	16bf0 <xmalloc@plt>
   24248:	mov	x22, x0
   2424c:	add	x2, x29, #0x1c
   24250:	mov	x0, x21
   24254:	mov	x1, x22
   24258:	bl	17050 <rl_translate_keyseq@plt>
   2425c:	mov	x23, xzr
   24260:	cbz	x22, 24314 <rl_bind_keyseq_if_unbound_in_map@@Base+0x104>
   24264:	ldr	w10, [x29, #28]
   24268:	cbz	w10, 24314 <rl_bind_keyseq_if_unbound_in_map@@Base+0x104>
   2426c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24270:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24274:	ldr	x8, [x8, #1992]
   24278:	ldr	x9, [x9, #3456]
   2427c:	cmp	x19, #0x0
   24280:	sxtw	x10, w10
   24284:	ldr	x12, [x8]
   24288:	ldr	w8, [x9]
   2428c:	mov	x9, x22
   24290:	ldrb	w11, [x9], #1
   24294:	csel	x12, x12, x19, eq  // eq = none
   24298:	cbz	w8, 242b8 <rl_bind_keyseq_if_unbound_in_map@@Base+0xa8>
   2429c:	sxtb	w13, w11
   242a0:	tbz	w13, #31, 242b8 <rl_bind_keyseq_if_unbound_in_map@@Base+0xa8>
   242a4:	ldrb	w13, [x12, #432]
   242a8:	cmp	w13, #0x1
   242ac:	b.ne	24304 <rl_bind_keyseq_if_unbound_in_map@@Base+0xf4>  // b.any
   242b0:	ldr	x12, [x12, #440]
   242b4:	and	w11, w11, #0x7f
   242b8:	and	x13, x11, #0xff
   242bc:	lsl	x11, x13, #4
   242c0:	ldrb	w14, [x12, x11]
   242c4:	ldrb	w11, [x9]
   242c8:	cmp	w14, #0x1
   242cc:	b.ne	242f0 <rl_bind_keyseq_if_unbound_in_map@@Base+0xe0>  // b.any
   242d0:	add	x12, x12, x13, lsl #4
   242d4:	add	x12, x12, #0x8
   242d8:	cbz	w11, 242fc <rl_bind_keyseq_if_unbound_in_map@@Base+0xec>
   242dc:	ldr	x12, [x12]
   242e0:	subs	x10, x10, #0x1
   242e4:	add	x9, x9, #0x1
   242e8:	b.ne	24298 <rl_bind_keyseq_if_unbound_in_map@@Base+0x88>  // b.any
   242ec:	b	242f4 <rl_bind_keyseq_if_unbound_in_map@@Base+0xe4>
   242f0:	cbz	w11, 2430c <rl_bind_keyseq_if_unbound_in_map@@Base+0xfc>
   242f4:	mov	x23, xzr
   242f8:	b	24314 <rl_bind_keyseq_if_unbound_in_map@@Base+0x104>
   242fc:	ldr	x23, [x12]
   24300:	b	24314 <rl_bind_keyseq_if_unbound_in_map@@Base+0x104>
   24304:	ldr	x23, [x12, #440]
   24308:	b	24314 <rl_bind_keyseq_if_unbound_in_map@@Base+0x104>
   2430c:	add	x8, x12, x13, lsl #4
   24310:	ldr	x23, [x8, #8]
   24314:	mov	x0, x22
   24318:	bl	169f0 <xfree@plt>
   2431c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24320:	ldr	x8, [x8, #2000]
   24324:	cmp	x23, x8
   24328:	b.eq	24348 <rl_bind_keyseq_if_unbound_in_map@@Base+0x138>  // b.none
   2432c:	cbz	x23, 24348 <rl_bind_keyseq_if_unbound_in_map@@Base+0x138>
   24330:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24334:	ldr	x8, [x8, #3000]
   24338:	cmp	x23, x8
   2433c:	b.eq	24348 <rl_bind_keyseq_if_unbound_in_map@@Base+0x138>  // b.none
   24340:	mov	w0, #0x1                   	// #1
   24344:	b	2435c <rl_bind_keyseq_if_unbound_in_map@@Base+0x14c>
   24348:	mov	w0, wzr
   2434c:	mov	x1, x21
   24350:	mov	x2, x20
   24354:	mov	x3, x19
   24358:	bl	168a0 <rl_generic_bind@plt>
   2435c:	ldp	x20, x19, [sp, #48]
   24360:	ldp	x22, x21, [sp, #32]
   24364:	ldr	x23, [sp, #16]
   24368:	ldp	x29, x30, [sp], #64
   2436c:	ret

0000000000024370 <rl_bind_key_if_unbound@@Base>:
   24370:	stp	x29, x30, [sp, #-32]!
   24374:	and	w0, w0, #0xff
   24378:	str	x19, [sp, #16]
   2437c:	mov	x29, sp
   24380:	mov	x19, x1
   24384:	bl	17270 <rl_untranslate_keyseq@plt>
   24388:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2438c:	ldr	x8, [x8, #1992]
   24390:	mov	x1, x19
   24394:	ldr	x19, [sp, #16]
   24398:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2439c:	ldr	x2, [x8]
   243a0:	add	x0, x0, #0x360
   243a4:	ldp	x29, x30, [sp], #32
   243a8:	b	17070 <rl_bind_keyseq_if_unbound_in_map@plt>

00000000000243ac <rl_unbind_key@@Base>:
   243ac:	stp	x29, x30, [sp, #-32]!
   243b0:	str	x19, [sp, #16]
   243b4:	mov	x29, sp
   243b8:	tbnz	w0, #31, 24484 <rl_unbind_key@@Base+0xd8>
   243bc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   243c0:	ldr	x19, [x19, #1992]
   243c4:	and	w8, w0, #0xffffff80
   243c8:	cmp	w8, #0x80
   243cc:	ldr	x3, [x19]
   243d0:	b.ne	24410 <rl_unbind_key@@Base+0x64>  // b.any
   243d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   243d8:	ldr	x8, [x8, #3456]
   243dc:	ldr	w8, [x8]
   243e0:	cbz	w8, 24410 <rl_unbind_key@@Base+0x64>
   243e4:	ldrb	w8, [x3, #432]
   243e8:	cmp	w8, #0x1
   243ec:	b.ne	24484 <rl_unbind_key@@Base+0xd8>  // b.any
   243f0:	ldr	x8, [x3, #440]
   243f4:	sxtw	x9, w0
   243f8:	and	x9, x9, #0xffffffffffffff7f
   243fc:	mov	w0, wzr
   24400:	add	x8, x8, x9, lsl #4
   24404:	strb	wzr, [x8]
   24408:	str	xzr, [x8, #8]
   2440c:	b	24484 <rl_unbind_key@@Base+0xd8>
   24410:	add	x8, x3, w0, uxtw #4
   24414:	ldrb	w9, [x8]
   24418:	cmp	w9, #0x1
   2441c:	b.ne	24438 <rl_unbind_key@@Base+0x8c>  // b.any
   24420:	cmp	w0, #0x5c
   24424:	b.ne	2444c <rl_unbind_key@@Base+0xa0>  // b.any
   24428:	mov	w8, #0x5c                  	// #92
   2442c:	strb	w8, [x29, #28]
   24430:	mov	w8, #0x1                   	// #1
   24434:	b	24450 <rl_unbind_key@@Base+0xa4>
   24438:	mov	w9, w0
   2443c:	strb	wzr, [x8]
   24440:	add	x8, x3, x9, lsl #4
   24444:	str	xzr, [x8, #8]
   24448:	b	24470 <rl_unbind_key@@Base+0xc4>
   2444c:	mov	w8, wzr
   24450:	add	x9, x29, #0x1c
   24454:	orr	x8, x8, x9
   24458:	strb	w0, [x8]
   2445c:	add	x1, x29, #0x1c
   24460:	mov	w0, wzr
   24464:	mov	x2, xzr
   24468:	strb	wzr, [x8, #1]
   2446c:	bl	168a0 <rl_generic_bind@plt>
   24470:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24474:	ldr	x8, [x19]
   24478:	ldr	x9, [x9, #2136]
   2447c:	mov	w0, wzr
   24480:	str	x8, [x9]
   24484:	ldr	x19, [sp, #16]
   24488:	ldp	x29, x30, [sp], #32
   2448c:	ret

0000000000024490 <rl_unbind_key_in_map@@Base>:
   24490:	sub	sp, sp, #0x30
   24494:	stp	x29, x30, [sp, #16]
   24498:	stp	x20, x19, [sp, #32]
   2449c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   244a0:	ldr	x19, [x19, #1992]
   244a4:	add	x29, sp, #0x10
   244a8:	ldr	x20, [x19]
   244ac:	str	x1, [x19]
   244b0:	tbnz	w0, #31, 24574 <rl_unbind_key_in_map@@Base+0xe4>
   244b4:	and	w8, w0, #0xffffff80
   244b8:	mov	x3, x1
   244bc:	cmp	w8, #0x80
   244c0:	b.ne	24500 <rl_unbind_key_in_map@@Base+0x70>  // b.any
   244c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   244c8:	ldr	x8, [x8, #3456]
   244cc:	ldr	w8, [x8]
   244d0:	cbz	w8, 24500 <rl_unbind_key_in_map@@Base+0x70>
   244d4:	ldrb	w8, [x3, #432]
   244d8:	cmp	w8, #0x1
   244dc:	b.ne	24574 <rl_unbind_key_in_map@@Base+0xe4>  // b.any
   244e0:	ldr	x8, [x3, #440]
   244e4:	sxtw	x9, w0
   244e8:	and	x9, x9, #0xffffffffffffff7f
   244ec:	mov	w0, wzr
   244f0:	add	x8, x8, x9, lsl #4
   244f4:	strb	wzr, [x8]
   244f8:	str	xzr, [x8, #8]
   244fc:	b	24574 <rl_unbind_key_in_map@@Base+0xe4>
   24500:	add	x8, x3, w0, uxtw #4
   24504:	ldrb	w9, [x8]
   24508:	cmp	w9, #0x1
   2450c:	b.ne	24528 <rl_unbind_key_in_map@@Base+0x98>  // b.any
   24510:	cmp	w0, #0x5c
   24514:	b.ne	2453c <rl_unbind_key_in_map@@Base+0xac>  // b.any
   24518:	mov	w8, #0x5c                  	// #92
   2451c:	sturb	w8, [x29, #-4]
   24520:	mov	w8, #0x1                   	// #1
   24524:	b	24540 <rl_unbind_key_in_map@@Base+0xb0>
   24528:	mov	w9, w0
   2452c:	strb	wzr, [x8]
   24530:	add	x8, x3, x9, lsl #4
   24534:	str	xzr, [x8, #8]
   24538:	b	24560 <rl_unbind_key_in_map@@Base+0xd0>
   2453c:	mov	w8, wzr
   24540:	sub	x9, x29, #0x4
   24544:	orr	x8, x8, x9
   24548:	strb	w0, [x8]
   2454c:	sub	x1, x29, #0x4
   24550:	mov	w0, wzr
   24554:	mov	x2, xzr
   24558:	strb	wzr, [x8, #1]
   2455c:	bl	168a0 <rl_generic_bind@plt>
   24560:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24564:	ldr	x8, [x19]
   24568:	ldr	x9, [x9, #2136]
   2456c:	mov	w0, wzr
   24570:	str	x8, [x9]
   24574:	str	x20, [x19]
   24578:	ldp	x20, x19, [sp, #32]
   2457c:	ldp	x29, x30, [sp, #16]
   24580:	add	sp, sp, #0x30
   24584:	ret

0000000000024588 <rl_unbind_function_in_map@@Base>:
   24588:	mov	w8, wzr
   2458c:	add	x9, x1, #0x8
   24590:	mov	w10, #0x101                 	// #257
   24594:	b	245a4 <rl_unbind_function_in_map@@Base+0x1c>
   24598:	subs	x10, x10, #0x1
   2459c:	add	x9, x9, #0x10
   245a0:	b.eq	245c4 <rl_unbind_function_in_map@@Base+0x3c>  // b.none
   245a4:	ldurb	w11, [x9, #-8]
   245a8:	cbnz	w11, 24598 <rl_unbind_function_in_map@@Base+0x10>
   245ac:	ldr	x11, [x9]
   245b0:	cmp	x11, x0
   245b4:	b.ne	24598 <rl_unbind_function_in_map@@Base+0x10>  // b.any
   245b8:	mov	w8, #0x1                   	// #1
   245bc:	str	xzr, [x9]
   245c0:	b	24598 <rl_unbind_function_in_map@@Base+0x10>
   245c4:	mov	w0, w8
   245c8:	ret

00000000000245cc <rl_unbind_command_in_map@@Base>:
   245cc:	stp	x29, x30, [sp, #-48]!
   245d0:	stp	x22, x21, [sp, #16]
   245d4:	stp	x20, x19, [sp, #32]
   245d8:	mov	x29, sp
   245dc:	mov	x19, x1
   245e0:	mov	x20, x0
   245e4:	bl	16970 <rl_initialize_funmap@plt>
   245e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   245ec:	ldr	x8, [x8, #3256]
   245f0:	ldr	x8, [x8]
   245f4:	ldr	x21, [x8]
   245f8:	cbz	x21, 24660 <rl_unbind_command_in_map@@Base+0x94>
   245fc:	add	x22, x8, #0x8
   24600:	ldr	x0, [x21]
   24604:	mov	x1, x20
   24608:	bl	16d80 <strcasecmp@plt>
   2460c:	cbz	w0, 2461c <rl_unbind_command_in_map@@Base+0x50>
   24610:	ldr	x21, [x22], #8
   24614:	cbnz	x21, 24600 <rl_unbind_command_in_map@@Base+0x34>
   24618:	b	24660 <rl_unbind_command_in_map@@Base+0x94>
   2461c:	ldr	x8, [x21, #8]
   24620:	cbz	x8, 24660 <rl_unbind_command_in_map@@Base+0x94>
   24624:	mov	w0, wzr
   24628:	add	x9, x19, #0x8
   2462c:	mov	w10, #0x101                 	// #257
   24630:	b	24640 <rl_unbind_command_in_map@@Base+0x74>
   24634:	subs	x10, x10, #0x1
   24638:	add	x9, x9, #0x10
   2463c:	b.eq	24664 <rl_unbind_command_in_map@@Base+0x98>  // b.none
   24640:	ldurb	w11, [x9, #-8]
   24644:	cbnz	w11, 24634 <rl_unbind_command_in_map@@Base+0x68>
   24648:	ldr	x11, [x9]
   2464c:	cmp	x11, x8
   24650:	b.ne	24634 <rl_unbind_command_in_map@@Base+0x68>  // b.any
   24654:	mov	w0, #0x1                   	// #1
   24658:	str	xzr, [x9]
   2465c:	b	24634 <rl_unbind_command_in_map@@Base+0x68>
   24660:	mov	w0, wzr
   24664:	ldp	x20, x19, [sp, #32]
   24668:	ldp	x22, x21, [sp, #16]
   2466c:	ldp	x29, x30, [sp], #48
   24670:	ret

0000000000024674 <rl_named_function@@Base>:
   24674:	stp	x29, x30, [sp, #-48]!
   24678:	str	x21, [sp, #16]
   2467c:	stp	x20, x19, [sp, #32]
   24680:	mov	x29, sp
   24684:	mov	x19, x0
   24688:	bl	16970 <rl_initialize_funmap@plt>
   2468c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24690:	ldr	x8, [x8, #3256]
   24694:	ldr	x8, [x8]
   24698:	ldr	x20, [x8]
   2469c:	cbz	x20, 246bc <rl_named_function@@Base+0x48>
   246a0:	add	x21, x8, #0x8
   246a4:	ldr	x0, [x20]
   246a8:	mov	x1, x19
   246ac:	bl	16d80 <strcasecmp@plt>
   246b0:	cbz	w0, 246c4 <rl_named_function@@Base+0x50>
   246b4:	ldr	x20, [x21], #8
   246b8:	cbnz	x20, 246a4 <rl_named_function@@Base+0x30>
   246bc:	mov	x0, xzr
   246c0:	b	246c8 <rl_named_function@@Base+0x54>
   246c4:	ldr	x0, [x20, #8]
   246c8:	ldp	x20, x19, [sp, #32]
   246cc:	ldr	x21, [sp, #16]
   246d0:	ldp	x29, x30, [sp], #48
   246d4:	ret

00000000000246d8 <rl_generic_bind@@Base>:
   246d8:	sub	sp, sp, #0x80
   246dc:	stp	x26, x25, [sp, #64]
   246e0:	stp	x22, x21, [sp, #96]
   246e4:	mov	x21, x2
   246e8:	mov	w25, w0
   246ec:	stp	x29, x30, [sp, #32]
   246f0:	stp	x28, x27, [sp, #48]
   246f4:	stp	x24, x23, [sp, #80]
   246f8:	stp	x20, x19, [sp, #112]
   246fc:	add	x29, sp, #0x20
   24700:	cbz	x1, 24880 <rl_generic_bind@@Base+0x1a8>
   24704:	ldrb	w8, [x1]
   24708:	mov	x22, x1
   2470c:	cbz	w8, 24880 <rl_generic_bind@@Base+0x1a8>
   24710:	mov	x0, x22
   24714:	mov	x20, x3
   24718:	bl	16440 <strlen@plt>
   2471c:	mov	w8, #0x1                   	// #1
   24720:	bfi	x8, x0, #1, #63
   24724:	mov	x0, x8
   24728:	bl	16bf0 <xmalloc@plt>
   2472c:	mov	x19, x0
   24730:	sub	x2, x29, #0x4
   24734:	mov	x0, x22
   24738:	mov	x1, x19
   2473c:	bl	17050 <rl_translate_keyseq@plt>
   24740:	ldur	w28, [x29, #-4]
   24744:	ldrb	w24, [x19]
   24748:	cmp	w28, #0x1
   2474c:	b.lt	2490c <rl_generic_bind@@Base+0x234>  // b.tstop
   24750:	str	w25, [sp, #4]
   24754:	str	x21, [sp, #8]
   24758:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2475c:	ldr	x12, [x12, #2136]
   24760:	mov	x21, xzr
   24764:	mov	w27, #0x1                   	// #1
   24768:	mov	w9, w24
   2476c:	mov	x22, x20
   24770:	b	247a8 <rl_generic_bind@@Base+0xd0>
   24774:	add	x9, x22, #0x1, lsl #12
   24778:	strb	w8, [x9]
   2477c:	ldur	w10, [x29, #-12]
   24780:	ldur	w11, [x29, #-9]
   24784:	mov	w13, #0x1001                	// #4097
   24788:	str	w10, [x22, x13]
   2478c:	str	w11, [x22, #4100]
   24790:	str	x21, [x9, #8]
   24794:	mov	x21, xzr
   24798:	str	x22, [x12]
   2479c:	ldrb	w9, [x19, x27]
   247a0:	add	x27, x27, #0x1
   247a4:	mov	x20, x23
   247a8:	cmp	x27, #0x1
   247ac:	sxtb	w10, w9
   247b0:	csel	w24, w24, w26, eq  // eq = none
   247b4:	and	w26, w9, #0xff
   247b8:	tbz	w10, #31, 247e4 <rl_generic_bind@@Base+0x10c>
   247bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   247c0:	ldr	x9, [x9, #3456]
   247c4:	ldr	w9, [x9]
   247c8:	cbz	w9, 247e4 <rl_generic_bind@@Base+0x10c>
   247cc:	ldrb	w9, [x22, #432]
   247d0:	and	w26, w26, #0x7f
   247d4:	cmp	w9, #0x1
   247d8:	b.ne	247e4 <rl_generic_bind@@Base+0x10c>  // b.any
   247dc:	ldr	x23, [x22, #440]
   247e0:	b	247ec <rl_generic_bind@@Base+0x114>
   247e4:	mov	x23, x22
   247e8:	mov	x22, x20
   247ec:	add	x9, x23, w26, uxtw #4
   247f0:	ldrb	w20, [x9]
   247f4:	cmp	x27, x28
   247f8:	b.cs	24898 <rl_generic_bind@@Base+0x1c0>  // b.hs, b.nlast
   247fc:	cmp	w20, #0x1
   24800:	b.ne	24814 <rl_generic_bind@@Base+0x13c>  // b.any
   24804:	add	x9, x23, x26, lsl #4
   24808:	ldr	x22, [x9, #8]
   2480c:	cbnz	x21, 24850 <rl_generic_bind@@Base+0x178>
   24810:	b	24798 <rl_generic_bind@@Base+0xc0>
   24814:	ldr	w8, [x9, #4]
   24818:	ldur	w10, [x9, #1]
   2481c:	add	x25, x23, x26, lsl #4
   24820:	stur	w8, [x29, #-9]
   24824:	stur	w10, [x29, #-12]
   24828:	ldr	x21, [x25, #8]
   2482c:	mov	w8, #0x1                   	// #1
   24830:	strb	w8, [x9]
   24834:	bl	17450 <rl_make_bare_keymap@plt>
   24838:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2483c:	ldr	x12, [x12, #2136]
   24840:	mov	x22, x0
   24844:	mov	w8, w20
   24848:	str	x0, [x25, #8]
   2484c:	cbz	x21, 24798 <rl_generic_bind@@Base+0xc0>
   24850:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24854:	ldr	x10, [x10, #3000]
   24858:	tst	w8, #0xff
   2485c:	and	w11, w8, #0xff
   24860:	cset	w9, eq  // eq = none
   24864:	cmp	x21, x10
   24868:	cset	w10, ne  // ne = any
   2486c:	cmp	w11, #0x2
   24870:	b.eq	24774 <rl_generic_bind@@Base+0x9c>  // b.none
   24874:	and	w9, w10, w9
   24878:	cbz	w9, 24798 <rl_generic_bind@@Base+0xc0>
   2487c:	b	24774 <rl_generic_bind@@Base+0x9c>
   24880:	cmp	w25, #0x2
   24884:	b.ne	24890 <rl_generic_bind@@Base+0x1b8>  // b.any
   24888:	mov	x0, x21
   2488c:	bl	169f0 <xfree@plt>
   24890:	mov	w0, #0xffffffff            	// #-1
   24894:	b	24988 <rl_generic_bind@@Base+0x2b0>
   24898:	cmp	w20, #0x1
   2489c:	b.eq	248cc <rl_generic_bind@@Base+0x1f4>  // b.none
   248a0:	cmp	w20, #0x2
   248a4:	b.ne	248bc <rl_generic_bind@@Base+0x1e4>  // b.any
   248a8:	add	x8, x23, x26, lsl #4
   248ac:	ldr	x0, [x8, #8]
   248b0:	bl	169f0 <xfree@plt>
   248b4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   248b8:	ldr	x12, [x12, #2136]
   248bc:	ldr	x21, [sp, #8]
   248c0:	ldr	w25, [sp, #4]
   248c4:	mov	x8, x23
   248c8:	b	248f8 <rl_generic_bind@@Base+0x220>
   248cc:	ldr	x21, [sp, #8]
   248d0:	add	x8, x23, x26, lsl #4
   248d4:	ldr	w25, [sp, #4]
   248d8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   248dc:	ldr	x8, [x8, #8]
   248e0:	ldr	x9, [x9, #2688]
   248e4:	cmp	x21, #0x0
   248e8:	ccmp	w25, #0x0, #0x0, eq  // eq = none
   248ec:	mov	w26, #0x100                 	// #256
   248f0:	csel	x21, x9, x21, eq  // eq = none
   248f4:	mov	x22, x23
   248f8:	add	x9, x8, w26, uxtw #4
   248fc:	mov	x20, x22
   24900:	str	x21, [x9, #8]
   24904:	strb	w25, [x9]
   24908:	str	x8, [x12]
   2490c:	cbnz	w25, 2497c <rl_generic_bind@@Base+0x2a4>
   24910:	cbnz	x21, 2497c <rl_generic_bind@@Base+0x2a4>
   24914:	add	x21, x20, w24, sxtw #4
   24918:	ldrb	w8, [x21]
   2491c:	cmp	w8, #0x1
   24920:	b.ne	2497c <rl_generic_bind@@Base+0x2a4>  // b.any
   24924:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24928:	ldr	x22, [x22, #2136]
   2492c:	sxtw	x8, w24
   24930:	add	x23, x20, x8, lsl #4
   24934:	ldr	x0, [x23, #8]!
   24938:	ldr	x8, [x22]
   2493c:	cmp	x0, x8
   24940:	b.ne	2497c <rl_generic_bind@@Base+0x2a4>  // b.any
   24944:	mov	w8, #0x1000                	// #4096
   24948:	ldrb	w8, [x0, x8]
   2494c:	cbnz	w8, 2497c <rl_generic_bind@@Base+0x2a4>
   24950:	bl	17140 <rl_empty_keymap@plt>
   24954:	cbz	w0, 2497c <rl_generic_bind@@Base+0x2a4>
   24958:	ldr	x8, [x22]
   2495c:	add	x8, x8, #0x1, lsl #12
   24960:	ldrb	w9, [x8]
   24964:	strb	w9, [x21]
   24968:	ldr	x8, [x8, #8]
   2496c:	str	x8, [x23]
   24970:	ldr	x0, [x22]
   24974:	bl	163c0 <rl_discard_keymap@plt>
   24978:	str	x20, [x22]
   2497c:	mov	x0, x19
   24980:	bl	169f0 <xfree@plt>
   24984:	mov	w0, wzr
   24988:	ldp	x20, x19, [sp, #112]
   2498c:	ldp	x22, x21, [sp, #96]
   24990:	ldp	x24, x23, [sp, #80]
   24994:	ldp	x26, x25, [sp, #64]
   24998:	ldp	x28, x27, [sp, #48]
   2499c:	ldp	x29, x30, [sp, #32]
   249a0:	add	sp, sp, #0x80
   249a4:	ret

00000000000249a8 <rl_bind_keyseq_in_map@@Base>:
   249a8:	mov	x3, x2
   249ac:	mov	x2, x1
   249b0:	mov	x1, x0
   249b4:	mov	w0, wzr
   249b8:	b	168a0 <rl_generic_bind@plt>

00000000000249bc <rl_set_key@@Base>:
   249bc:	mov	x3, x2
   249c0:	mov	x2, x1
   249c4:	mov	x1, x0
   249c8:	mov	w0, wzr
   249cc:	b	168a0 <rl_generic_bind@plt>

00000000000249d0 <rl_translate_keyseq@@Base>:
   249d0:	sub	sp, sp, #0x70
   249d4:	stp	x26, x25, [sp, #48]
   249d8:	adrp	x25, 3f000 <filename_completion_function@@Base+0x580>
   249dc:	stp	x28, x27, [sp, #32]
   249e0:	stp	x24, x23, [sp, #64]
   249e4:	stp	x22, x21, [sp, #80]
   249e8:	stp	x20, x19, [sp, #96]
   249ec:	mov	x19, x1
   249f0:	mov	x21, x0
   249f4:	mov	w23, wzr
   249f8:	mov	w27, wzr
   249fc:	add	x24, x0, #0x1
   24a00:	add	x25, x25, #0x5d0
   24a04:	stp	x29, x30, [sp, #16]
   24a08:	add	x29, sp, #0x10
   24a0c:	sxtw	x20, w27
   24a10:	ldrb	w8, [x21, x20]
   24a14:	cmp	w8, #0x5c
   24a18:	b.eq	24a28 <rl_translate_keyseq@@Base+0x58>  // b.none
   24a1c:	mov	w22, w27
   24a20:	cbnz	w8, 24aa8 <rl_translate_keyseq@@Base+0xd8>
   24a24:	b	24d70 <rl_translate_keyseq@@Base+0x3a0>
   24a28:	add	x22, x20, #0x1
   24a2c:	add	x0, x21, x22
   24a30:	ldrb	w26, [x0]
   24a34:	cmp	w26, #0x78
   24a38:	b.hi	24b3c <rl_translate_keyseq@@Base+0x16c>  // b.pmore
   24a3c:	adr	x9, 24a50 <rl_translate_keyseq@@Base+0x80>
   24a40:	ldrb	w8, [x25, x26]
   24a44:	add	x9, x9, x8, lsl #2
   24a48:	mov	w8, #0x7                   	// #7
   24a4c:	br	x9
   24a50:	add	w9, w27, #0x2
   24a54:	sxtw	x11, w9
   24a58:	ldrb	w10, [x21, x11]
   24a5c:	and	w8, w10, #0xf8
   24a60:	cmp	w8, #0x30
   24a64:	sub	w8, w26, #0x30
   24a68:	b.ne	24aa4 <rl_translate_keyseq@@Base+0xd4>  // b.any
   24a6c:	mov	x12, xzr
   24a70:	add	x11, x24, x11
   24a74:	lsl	w8, w8, #3
   24a78:	add	w8, w8, w10, uxtb
   24a7c:	cmp	w12, #0x1
   24a80:	sub	w8, w8, #0x30
   24a84:	add	x13, x12, #0x1
   24a88:	b.eq	24aa0 <rl_translate_keyseq@@Base+0xd0>  // b.none
   24a8c:	ldrb	w10, [x11, x12]
   24a90:	and	w12, w10, #0xf8
   24a94:	cmp	w12, #0x30
   24a98:	mov	x12, x13
   24a9c:	b.eq	24a74 <rl_translate_keyseq@@Base+0xa4>  // b.none
   24aa0:	add	w9, w9, w13
   24aa4:	sub	w22, w9, #0x1
   24aa8:	add	w9, w23, #0x1
   24aac:	strb	w8, [x19, w23, sxtw]
   24ab0:	mov	w23, w9
   24ab4:	add	w27, w22, #0x1
   24ab8:	b	24a0c <rl_translate_keyseq@@Base+0x3c>
   24abc:	add	x28, x20, #0x2
   24ac0:	ldrb	w8, [x21, x28]
   24ac4:	cmp	w8, #0x2d
   24ac8:	b.ne	24b3c <rl_translate_keyseq@@Base+0x16c>  // b.any
   24acc:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   24ad0:	str	x24, [sp, #8]
   24ad4:	mov	x24, x2
   24ad8:	mov	w2, #0x5                   	// #5
   24adc:	add	x1, x1, #0x6e2
   24ae0:	bl	16b40 <strncmp@plt>
   24ae4:	cbz	w0, 24c2c <rl_translate_keyseq@@Base+0x25c>
   24ae8:	cmp	w26, #0x43
   24aec:	b.eq	24c6c <rl_translate_keyseq@@Base+0x29c>  // b.none
   24af0:	cmp	w26, #0x4d
   24af4:	b.ne	24c88 <rl_translate_keyseq@@Base+0x2b8>  // b.any
   24af8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24afc:	ldr	x8, [x8, #3456]
   24b00:	mov	x2, x24
   24b04:	ldr	w8, [x8]
   24b08:	cbz	w8, 24c98 <rl_translate_keyseq@@Base+0x2c8>
   24b0c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24b10:	ldr	x8, [x8, #1992]
   24b14:	ldr	x8, [x8]
   24b18:	ldrb	w8, [x8, #432]
   24b1c:	cmp	w8, #0x1
   24b20:	b.ne	24c98 <rl_translate_keyseq@@Base+0x2c8>  // b.any
   24b24:	ldr	x24, [sp, #8]
   24b28:	mov	w8, #0x1b                  	// #27
   24b2c:	mov	w9, #0x1                   	// #1
   24b30:	mov	w27, w23
   24b34:	mov	x22, x28
   24b38:	b	24d48 <rl_translate_keyseq@@Base+0x378>
   24b3c:	mov	w8, w26
   24b40:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b44:	mov	w8, #0x5c                  	// #92
   24b48:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b4c:	mov	w8, #0x8                   	// #8
   24b50:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b54:	mov	w8, #0x7f                  	// #127
   24b58:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b5c:	mov	w8, #0x1b                  	// #27
   24b60:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b64:	mov	w8, #0xc                   	// #12
   24b68:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b6c:	mov	w8, #0xa                   	// #10
   24b70:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b74:	mov	w8, #0xd                   	// #13
   24b78:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b7c:	mov	w8, #0x9                   	// #9
   24b80:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b84:	mov	w8, #0xb                   	// #11
   24b88:	b	24aa8 <rl_translate_keyseq@@Base+0xd8>
   24b8c:	mov	x22, x2
   24b90:	add	w20, w27, #0x2
   24b94:	bl	17100 <__ctype_b_loc@plt>
   24b98:	sxtw	x13, w20
   24b9c:	ldr	x10, [x0]
   24ba0:	ldrb	w12, [x21, x13]
   24ba4:	ldrh	w8, [x10, x12, lsl #1]
   24ba8:	tbnz	w8, #12, 24bbc <rl_translate_keyseq@@Base+0x1ec>
   24bac:	mov	w9, w20
   24bb0:	mov	w8, #0x78                  	// #120
   24bb4:	mov	x2, x22
   24bb8:	b	24aa4 <rl_translate_keyseq@@Base+0xd4>
   24bbc:	mov	x11, xzr
   24bc0:	mov	w8, wzr
   24bc4:	add	w9, w27, #0x4
   24bc8:	add	x13, x24, x13
   24bcc:	mov	w16, #0xffffffd0            	// #-48
   24bd0:	mov	w17, #0xffffffc9            	// #-55
   24bd4:	mov	w18, #0xffffffa9            	// #-87
   24bd8:	cmp	w11, #0x2
   24bdc:	b.eq	24bb4 <rl_translate_keyseq@@Base+0x1e4>  // b.none
   24be0:	sub	w15, w12, #0x41
   24be4:	sub	w14, w12, #0x61
   24be8:	and	w15, w15, #0xff
   24bec:	and	w14, w14, #0xff
   24bf0:	cmp	w15, #0x6
   24bf4:	csel	w15, w17, w16, cc  // cc = lo, ul, last
   24bf8:	cmp	w14, #0x6
   24bfc:	csel	w14, w18, w15, cc  // cc = lo, ul, last
   24c00:	add	w14, w14, w12, uxtb
   24c04:	ldrb	w12, [x13, x11]
   24c08:	add	w8, w14, w8, lsl #4
   24c0c:	add	x11, x11, #0x1
   24c10:	ldrh	w15, [x10, x12, lsl #1]
   24c14:	tbnz	w15, #12, 24bd8 <rl_translate_keyseq@@Base+0x208>
   24c18:	add	x9, x11, w20, uxtw
   24c1c:	mov	x2, x22
   24c20:	cbnz	w11, 24aa4 <rl_translate_keyseq@@Base+0xd4>
   24c24:	mov	w8, #0x78                  	// #120
   24c28:	b	24aa4 <rl_translate_keyseq@@Base+0xd4>
   24c2c:	mov	w8, #0x1b                  	// #27
   24c30:	add	w27, w23, #0x1
   24c34:	strb	w8, [x19, w23, sxtw]
   24c38:	add	x22, x20, #0x6
   24c3c:	bl	17100 <__ctype_b_loc@plt>
   24c40:	ldr	x8, [x0]
   24c44:	ldrb	w20, [x21, x22]
   24c48:	ldrh	w8, [x8, x20, lsl #1]
   24c4c:	tbz	w8, #9, 24c5c <rl_translate_keyseq@@Base+0x28c>
   24c50:	bl	16dc0 <__ctype_toupper_loc@plt>
   24c54:	ldr	x8, [x0]
   24c58:	ldr	w20, [x8, x20, lsl #2]
   24c5c:	mov	x2, x24
   24c60:	and	w8, w20, #0x1f
   24c64:	mov	w9, #0x2                   	// #2
   24c68:	b	24d40 <rl_translate_keyseq@@Base+0x370>
   24c6c:	add	x22, x20, #0x3
   24c70:	ldrb	w20, [x21, x22]
   24c74:	cmp	w20, #0x3f
   24c78:	b.ne	24cdc <rl_translate_keyseq@@Base+0x30c>  // b.any
   24c7c:	mov	w8, #0x7f                  	// #127
   24c80:	mov	x2, x24
   24c84:	b	24d00 <rl_translate_keyseq@@Base+0x330>
   24c88:	mov	x2, x24
   24c8c:	ldr	x24, [sp, #8]
   24c90:	mov	w28, w22
   24c94:	b	24d50 <rl_translate_keyseq@@Base+0x380>
   24c98:	add	x22, x20, #0x3
   24c9c:	ldrb	w8, [x21, x22]
   24ca0:	cmp	w8, #0x5c
   24ca4:	b.ne	24d34 <rl_translate_keyseq@@Base+0x364>  // b.any
   24ca8:	add	x9, x20, x21
   24cac:	ldrb	w10, [x9, #4]
   24cb0:	cmp	w10, #0x43
   24cb4:	b.ne	24d34 <rl_translate_keyseq@@Base+0x364>  // b.any
   24cb8:	ldrb	w9, [x9, #5]
   24cbc:	cmp	w9, #0x2d
   24cc0:	b.ne	24d34 <rl_translate_keyseq@@Base+0x364>  // b.any
   24cc4:	add	x22, x20, #0x6
   24cc8:	ldrb	w20, [x21, x22]
   24ccc:	cmp	w20, #0x3f
   24cd0:	b.ne	24d10 <rl_translate_keyseq@@Base+0x340>  // b.any
   24cd4:	mov	w8, #0x7f                  	// #127
   24cd8:	b	24d34 <rl_translate_keyseq@@Base+0x364>
   24cdc:	bl	17100 <__ctype_b_loc@plt>
   24ce0:	ldr	x8, [x0]
   24ce4:	ldrh	w8, [x8, w20, uxtw #1]
   24ce8:	tbz	w8, #9, 24cf8 <rl_translate_keyseq@@Base+0x328>
   24cec:	bl	16dc0 <__ctype_toupper_loc@plt>
   24cf0:	ldr	x8, [x0]
   24cf4:	ldr	w20, [x8, x20, lsl #2]
   24cf8:	mov	x2, x24
   24cfc:	and	w8, w20, #0x1f
   24d00:	ldr	x24, [sp, #8]
   24d04:	mov	w9, #0x1                   	// #1
   24d08:	mov	w27, w23
   24d0c:	b	24d44 <rl_translate_keyseq@@Base+0x374>
   24d10:	bl	17100 <__ctype_b_loc@plt>
   24d14:	ldr	x8, [x0]
   24d18:	ldrh	w8, [x8, w20, uxtw #1]
   24d1c:	tbz	w8, #9, 24d2c <rl_translate_keyseq@@Base+0x35c>
   24d20:	bl	16dc0 <__ctype_toupper_loc@plt>
   24d24:	ldr	x8, [x0]
   24d28:	ldr	w20, [x8, x20, lsl #2]
   24d2c:	mov	x2, x24
   24d30:	and	w8, w20, #0x1f
   24d34:	orr	w8, w8, #0xffffff80
   24d38:	mov	w9, #0x1                   	// #1
   24d3c:	mov	w27, w23
   24d40:	ldr	x24, [sp, #8]
   24d44:	mov	w28, w22
   24d48:	add	w23, w23, w9
   24d4c:	strb	w8, [x19, w27, sxtw]
   24d50:	ldrb	w8, [x21, x22]
   24d54:	mov	w22, w28
   24d58:	cbnz	w8, 24ab4 <rl_translate_keyseq@@Base+0xe4>
   24d5c:	b	24d70 <rl_translate_keyseq@@Base+0x3a0>
   24d60:	add	w8, w23, #0x1
   24d64:	mov	w9, #0x5c                  	// #92
   24d68:	strb	w9, [x19, w23, sxtw]
   24d6c:	mov	w23, w8
   24d70:	str	w23, [x2]
   24d74:	strb	wzr, [x19, w23, sxtw]
   24d78:	ldp	x20, x19, [sp, #96]
   24d7c:	ldp	x22, x21, [sp, #80]
   24d80:	ldp	x24, x23, [sp, #64]
   24d84:	ldp	x26, x25, [sp, #48]
   24d88:	ldp	x28, x27, [sp, #32]
   24d8c:	ldp	x29, x30, [sp, #16]
   24d90:	mov	w0, wzr
   24d94:	add	sp, sp, #0x70
   24d98:	ret

0000000000024d9c <rl_function_of_keyseq_len@@Base>:
   24d9c:	mov	x8, xzr
   24da0:	cbz	x0, 24e28 <rl_function_of_keyseq_len@@Base+0x8c>
   24da4:	cbz	x1, 24e28 <rl_function_of_keyseq_len@@Base+0x8c>
   24da8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24dac:	ldr	x8, [x8, #1992]
   24db0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24db4:	ldr	x9, [x9, #3456]
   24db8:	cmp	x2, #0x0
   24dbc:	ldr	x8, [x8]
   24dc0:	ldr	w9, [x9]
   24dc4:	ldrb	w10, [x0], #1
   24dc8:	csel	x8, x8, x2, eq  // eq = none
   24dcc:	cbz	w9, 24dec <rl_function_of_keyseq_len@@Base+0x50>
   24dd0:	sxtb	w11, w10
   24dd4:	tbz	w11, #31, 24dec <rl_function_of_keyseq_len@@Base+0x50>
   24dd8:	ldrb	w11, [x8, #432]
   24ddc:	cmp	w11, #0x1
   24de0:	b.ne	24e40 <rl_function_of_keyseq_len@@Base+0xa4>  // b.any
   24de4:	ldr	x8, [x8, #440]
   24de8:	and	w10, w10, #0x7f
   24dec:	and	x11, x10, #0xff
   24df0:	lsl	x10, x11, #4
   24df4:	ldrb	w12, [x8, x10]
   24df8:	ldrb	w10, [x0]
   24dfc:	cmp	w12, #0x1
   24e00:	b.ne	24e20 <rl_function_of_keyseq_len@@Base+0x84>  // b.any
   24e04:	cbz	w10, 24e30 <rl_function_of_keyseq_len@@Base+0x94>
   24e08:	add	x8, x8, x11, lsl #4
   24e0c:	ldr	x8, [x8, #8]
   24e10:	subs	x1, x1, #0x1
   24e14:	add	x0, x0, #0x1
   24e18:	b.ne	24dcc <rl_function_of_keyseq_len@@Base+0x30>  // b.any
   24e1c:	b	24e24 <rl_function_of_keyseq_len@@Base+0x88>
   24e20:	cbz	w10, 24e50 <rl_function_of_keyseq_len@@Base+0xb4>
   24e24:	mov	x8, xzr
   24e28:	mov	x0, x8
   24e2c:	ret
   24e30:	cbz	x3, 24e58 <rl_function_of_keyseq_len@@Base+0xbc>
   24e34:	mov	w9, #0x1                   	// #1
   24e38:	str	w9, [x3]
   24e3c:	b	24e58 <rl_function_of_keyseq_len@@Base+0xbc>
   24e40:	cbz	x3, 24e48 <rl_function_of_keyseq_len@@Base+0xac>
   24e44:	str	w11, [x3]
   24e48:	ldr	x0, [x8, #440]
   24e4c:	ret
   24e50:	cbz	x3, 24e58 <rl_function_of_keyseq_len@@Base+0xbc>
   24e54:	str	w12, [x3]
   24e58:	add	x8, x8, x11, lsl #4
   24e5c:	ldr	x0, [x8, #8]
   24e60:	ret

0000000000024e64 <rl_bind_keyseq_if_unbound@@Base>:
   24e64:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   24e68:	ldr	x8, [x8, #1992]
   24e6c:	ldr	x2, [x8]
   24e70:	b	17070 <rl_bind_keyseq_if_unbound_in_map@plt>

0000000000024e74 <rl_macro_bind@@Base>:
   24e74:	sub	sp, sp, #0x40
   24e78:	stp	x22, x21, [sp, #32]
   24e7c:	mov	x21, x0
   24e80:	mov	x0, x1
   24e84:	stp	x29, x30, [sp, #16]
   24e88:	stp	x20, x19, [sp, #48]
   24e8c:	add	x29, sp, #0x10
   24e90:	mov	x19, x2
   24e94:	mov	x20, x1
   24e98:	bl	16440 <strlen@plt>
   24e9c:	mov	w8, #0x1                   	// #1
   24ea0:	bfi	x8, x0, #1, #63
   24ea4:	mov	x0, x8
   24ea8:	bl	16bf0 <xmalloc@plt>
   24eac:	mov	x22, x0
   24eb0:	sub	x2, x29, #0x4
   24eb4:	mov	x0, x20
   24eb8:	mov	x1, x22
   24ebc:	bl	17050 <rl_translate_keyseq@plt>
   24ec0:	mov	w0, #0x2                   	// #2
   24ec4:	mov	x1, x21
   24ec8:	mov	x2, x22
   24ecc:	mov	x3, x19
   24ed0:	bl	168a0 <rl_generic_bind@plt>
   24ed4:	ldp	x20, x19, [sp, #48]
   24ed8:	ldp	x22, x21, [sp, #32]
   24edc:	ldp	x29, x30, [sp, #16]
   24ee0:	mov	w0, wzr
   24ee4:	add	sp, sp, #0x40
   24ee8:	ret

0000000000024eec <_rl_untranslate_macro_value@@Base>:
   24eec:	stp	x29, x30, [sp, #-96]!
   24ef0:	stp	x28, x27, [sp, #16]
   24ef4:	stp	x26, x25, [sp, #32]
   24ef8:	stp	x24, x23, [sp, #48]
   24efc:	stp	x22, x21, [sp, #64]
   24f00:	stp	x20, x19, [sp, #80]
   24f04:	mov	x29, sp
   24f08:	mov	w19, w1
   24f0c:	mov	x21, x0
   24f10:	bl	16440 <strlen@plt>
   24f14:	lsl	x8, x0, #3
   24f18:	sub	x8, x8, x0
   24f1c:	add	x0, x8, #0x1
   24f20:	bl	16bf0 <xmalloc@plt>
   24f24:	ldrb	w9, [x21]
   24f28:	mov	x26, x0
   24f2c:	mov	x8, x0
   24f30:	cbz	w9, 250c4 <_rl_untranslate_macro_value@@Base+0x1d8>
   24f34:	add	x21, x21, #0x1
   24f38:	mov	w22, #0x4d5c                	// #19804
   24f3c:	mov	w23, #0x2d                  	// #45
   24f40:	mov	w24, #0x5c                  	// #92
   24f44:	mov	x20, x26
   24f48:	b	24f68 <_rl_untranslate_macro_value@@Base+0x7c>
   24f4c:	strb	w24, [x20], #1
   24f50:	mov	w28, #0x65                  	// #101
   24f54:	mov	x8, x20
   24f58:	strb	w28, [x8], #1
   24f5c:	ldrb	w9, [x21], #1
   24f60:	mov	x20, x8
   24f64:	cbz	w9, 250c4 <_rl_untranslate_macro_value@@Base+0x1d8>
   24f68:	sxtb	w8, w9
   24f6c:	and	w28, w9, #0xff
   24f70:	tbnz	w8, #31, 24fcc <_rl_untranslate_macro_value@@Base+0xe0>
   24f74:	cmp	w28, #0x1b
   24f78:	b.eq	24f4c <_rl_untranslate_macro_value@@Base+0x60>  // b.none
   24f7c:	cmp	w28, #0x1f
   24f80:	b.hi	25000 <_rl_untranslate_macro_value@@Base+0x114>  // b.pmore
   24f84:	tbnz	w28, #7, 25000 <_rl_untranslate_macro_value@@Base+0x114>
   24f88:	mov	x8, x20
   24f8c:	strb	w24, [x8], #1
   24f90:	cbz	w19, 25020 <_rl_untranslate_macro_value@@Base+0x134>
   24f94:	sub	w9, w28, #0x7
   24f98:	cmp	w9, #0x6
   24f9c:	b.hi	25020 <_rl_untranslate_macro_value@@Base+0x134>  // b.pmore
   24fa0:	cmp	w9, #0x6
   24fa4:	b.hi	25094 <_rl_untranslate_macro_value@@Base+0x1a8>  // b.pmore
   24fa8:	adrp	x12, 3f000 <filename_completion_function@@Base+0x580>
   24fac:	add	x12, x12, #0x649
   24fb0:	adr	x10, 24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   24fb4:	ldrb	w11, [x12, x9]
   24fb8:	add	x10, x10, x11, lsl #2
   24fbc:	mov	w28, #0x61                  	// #97
   24fc0:	br	x10
   24fc4:	mov	w28, #0x62                  	// #98
   24fc8:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   24fcc:	strh	w22, [x20]
   24fd0:	strb	w23, [x20, #2]
   24fd4:	add	x20, x20, #0x3
   24fd8:	and	w28, w28, #0x7f
   24fdc:	cmp	w28, #0x5c
   24fe0:	b.eq	24ff8 <_rl_untranslate_macro_value@@Base+0x10c>  // b.none
   24fe4:	cmp	w28, #0x22
   24fe8:	b.eq	24ff8 <_rl_untranslate_macro_value@@Base+0x10c>  // b.none
   24fec:	cmp	w28, #0x1b
   24ff0:	b.eq	24f4c <_rl_untranslate_macro_value@@Base+0x60>  // b.none
   24ff4:	b	24f54 <_rl_untranslate_macro_value@@Base+0x68>
   24ff8:	strb	w24, [x20], #1
   24ffc:	b	24f54 <_rl_untranslate_macro_value@@Base+0x68>
   25000:	cmp	w28, #0x7f
   25004:	b.ne	24fdc <_rl_untranslate_macro_value@@Base+0xf0>  // b.any
   25008:	mov	w8, #0x435c                	// #17244
   2500c:	strh	w8, [x20]
   25010:	add	x8, x20, #0x3
   25014:	strb	w23, [x20, #2]
   25018:	mov	w28, #0x3f                  	// #63
   2501c:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   25020:	mov	w8, #0x2d43                	// #11587
   25024:	sturh	w8, [x20, #1]
   25028:	add	x20, x20, #0x3
   2502c:	bl	17100 <__ctype_b_loc@plt>
   25030:	ldr	x27, [x0]
   25034:	orr	w28, w28, #0x40
   25038:	mov	w8, w28
   2503c:	ldrh	w25, [x27, w28, uxtw #1]
   25040:	tbz	w25, #9, 25054 <_rl_untranslate_macro_value@@Base+0x168>
   25044:	bl	16dc0 <__ctype_toupper_loc@plt>
   25048:	ldr	x8, [x0]
   2504c:	lsl	x9, x28, #2
   25050:	ldrb	w8, [x8, x9]
   25054:	ldrh	w8, [x27, w8, uxtw #1]
   25058:	tbnz	w8, #8, 25070 <_rl_untranslate_macro_value@@Base+0x184>
   2505c:	tbz	w25, #9, 24fdc <_rl_untranslate_macro_value@@Base+0xf0>
   25060:	bl	16dc0 <__ctype_toupper_loc@plt>
   25064:	ldr	x8, [x0]
   25068:	ldr	w28, [x8, x28, lsl #2]
   2506c:	b	24fdc <_rl_untranslate_macro_value@@Base+0xf0>
   25070:	bl	16810 <__ctype_tolower_loc@plt>
   25074:	ldr	x27, [x0]
   25078:	tbz	w25, #9, 2508c <_rl_untranslate_macro_value@@Base+0x1a0>
   2507c:	bl	16dc0 <__ctype_toupper_loc@plt>
   25080:	ldr	x8, [x0]
   25084:	lsl	x9, x28, #2
   25088:	ldrb	w28, [x8, x9]
   2508c:	ldr	w28, [x27, w28, uxtw #2]
   25090:	b	24fdc <_rl_untranslate_macro_value@@Base+0xf0>
   25094:	mov	x20, x8
   25098:	b	24fdc <_rl_untranslate_macro_value@@Base+0xf0>
   2509c:	mov	w28, #0x74                  	// #116
   250a0:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   250a4:	mov	w28, #0x6e                  	// #110
   250a8:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   250ac:	mov	w28, #0x76                  	// #118
   250b0:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   250b4:	mov	w28, #0x66                  	// #102
   250b8:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   250bc:	mov	w28, #0x72                  	// #114
   250c0:	b	24f58 <_rl_untranslate_macro_value@@Base+0x6c>
   250c4:	strb	wzr, [x8]
   250c8:	mov	x0, x26
   250cc:	ldp	x20, x19, [sp, #80]
   250d0:	ldp	x22, x21, [sp, #64]
   250d4:	ldp	x24, x23, [sp, #48]
   250d8:	ldp	x26, x25, [sp, #32]
   250dc:	ldp	x28, x27, [sp, #16]
   250e0:	ldp	x29, x30, [sp], #96
   250e4:	ret

00000000000250e8 <rl_function_of_keyseq@@Base>:
   250e8:	stp	x29, x30, [sp, #-48]!
   250ec:	str	x21, [sp, #16]
   250f0:	stp	x20, x19, [sp, #32]
   250f4:	mov	x29, sp
   250f8:	mov	x19, x2
   250fc:	mov	x21, x1
   25100:	mov	x20, x0
   25104:	bl	16440 <strlen@plt>
   25108:	mov	x8, xzr
   2510c:	cbz	x20, 251c8 <rl_function_of_keyseq@@Base+0xe0>
   25110:	cbz	x0, 251c8 <rl_function_of_keyseq@@Base+0xe0>
   25114:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25118:	ldr	x8, [x8, #1992]
   2511c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25120:	ldr	x9, [x9, #3456]
   25124:	cmp	x21, #0x0
   25128:	ldr	x8, [x8]
   2512c:	ldr	w9, [x9]
   25130:	ldrb	w10, [x20], #1
   25134:	csel	x8, x8, x21, eq  // eq = none
   25138:	cbz	w9, 25158 <rl_function_of_keyseq@@Base+0x70>
   2513c:	sxtb	w11, w10
   25140:	tbz	w11, #31, 25158 <rl_function_of_keyseq@@Base+0x70>
   25144:	ldrb	w11, [x8, #432]
   25148:	cmp	w11, #0x1
   2514c:	b.ne	251a8 <rl_function_of_keyseq@@Base+0xc0>  // b.any
   25150:	ldr	x8, [x8, #440]
   25154:	and	w10, w10, #0x7f
   25158:	and	x11, x10, #0xff
   2515c:	lsl	x10, x11, #4
   25160:	ldrb	w12, [x8, x10]
   25164:	ldrb	w10, [x20]
   25168:	cmp	w12, #0x1
   2516c:	b.ne	2518c <rl_function_of_keyseq@@Base+0xa4>  // b.any
   25170:	cbz	w10, 25198 <rl_function_of_keyseq@@Base+0xb0>
   25174:	add	x8, x8, x11, lsl #4
   25178:	ldr	x8, [x8, #8]
   2517c:	subs	x0, x0, #0x1
   25180:	add	x20, x20, #0x1
   25184:	b.ne	25138 <rl_function_of_keyseq@@Base+0x50>  // b.any
   25188:	b	25190 <rl_function_of_keyseq@@Base+0xa8>
   2518c:	cbz	w10, 251b8 <rl_function_of_keyseq@@Base+0xd0>
   25190:	mov	x8, xzr
   25194:	b	251c8 <rl_function_of_keyseq@@Base+0xe0>
   25198:	cbz	x19, 251c0 <rl_function_of_keyseq@@Base+0xd8>
   2519c:	mov	w9, #0x1                   	// #1
   251a0:	str	w9, [x19]
   251a4:	b	251c0 <rl_function_of_keyseq@@Base+0xd8>
   251a8:	cbz	x19, 251b0 <rl_function_of_keyseq@@Base+0xc8>
   251ac:	str	w11, [x19]
   251b0:	ldr	x8, [x8, #440]
   251b4:	b	251c8 <rl_function_of_keyseq@@Base+0xe0>
   251b8:	cbz	x19, 251c0 <rl_function_of_keyseq@@Base+0xd8>
   251bc:	str	w12, [x19]
   251c0:	add	x8, x8, x11, lsl #4
   251c4:	ldr	x8, [x8, #8]
   251c8:	ldp	x20, x19, [sp, #32]
   251cc:	ldr	x21, [sp, #16]
   251d0:	mov	x0, x8
   251d4:	ldp	x29, x30, [sp], #48
   251d8:	ret

00000000000251dc <rl_re_read_init_file@@Base>:
   251dc:	stp	x29, x30, [sp, #-16]!
   251e0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   251e4:	ldr	x0, [x8, #880]
   251e8:	mov	x29, sp
   251ec:	cbnz	x0, 25200 <rl_re_read_init_file@@Base+0x24>
   251f0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   251f4:	add	x0, x0, #0x6e8
   251f8:	bl	163a0 <sh_get_env_value@plt>
   251fc:	cbz	x0, 25208 <rl_re_read_init_file@@Base+0x2c>
   25200:	ldrb	w8, [x0]
   25204:	cbnz	w8, 25224 <rl_re_read_init_file@@Base+0x48>
   25208:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2520c:	add	x0, x0, #0x6f0
   25210:	mov	w1, wzr
   25214:	bl	2530c <rl_set_keymap_from_edit_mode@@Base+0x3c>
   25218:	cbz	w0, 2522c <rl_re_read_init_file@@Base+0x50>
   2521c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   25220:	add	x0, x0, #0x6fb
   25224:	mov	w1, wzr
   25228:	bl	2530c <rl_set_keymap_from_edit_mode@@Base+0x3c>
   2522c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25230:	ldr	x8, [x8, #3416]
   25234:	ldr	w8, [x8]
   25238:	cmp	w8, #0x1
   2523c:	b.eq	25250 <rl_re_read_init_file@@Base+0x74>  // b.none
   25240:	cbnz	w8, 25264 <rl_re_read_init_file@@Base+0x88>
   25244:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25248:	ldr	x8, [x8, #4032]
   2524c:	b	25258 <rl_re_read_init_file@@Base+0x7c>
   25250:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25254:	ldr	x8, [x8, #1984]
   25258:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2525c:	ldr	x9, [x9, #1992]
   25260:	str	x8, [x9]
   25264:	ldp	x29, x30, [sp], #16
   25268:	ret

000000000002526c <rl_read_init_file@@Base>:
   2526c:	stp	x29, x30, [sp, #-16]!
   25270:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   25274:	ldr	x8, [x8, #880]
   25278:	cmp	x0, #0x0
   2527c:	mov	x29, sp
   25280:	csel	x0, x8, x0, eq  // eq = none
   25284:	cbnz	x0, 25298 <rl_read_init_file@@Base+0x2c>
   25288:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2528c:	add	x0, x0, #0x6e8
   25290:	bl	163a0 <sh_get_env_value@plt>
   25294:	cbz	x0, 252a0 <rl_read_init_file@@Base+0x34>
   25298:	ldrb	w8, [x0]
   2529c:	cbnz	w8, 252bc <rl_read_init_file@@Base+0x50>
   252a0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   252a4:	add	x0, x0, #0x6f0
   252a8:	mov	w1, wzr
   252ac:	bl	2530c <rl_set_keymap_from_edit_mode@@Base+0x3c>
   252b0:	cbz	w0, 252c8 <rl_read_init_file@@Base+0x5c>
   252b4:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   252b8:	add	x0, x0, #0x6fb
   252bc:	mov	w1, wzr
   252c0:	ldp	x29, x30, [sp], #16
   252c4:	b	2530c <rl_set_keymap_from_edit_mode@@Base+0x3c>
   252c8:	ldp	x29, x30, [sp], #16
   252cc:	ret

00000000000252d0 <rl_set_keymap_from_edit_mode@@Base>:
   252d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   252d4:	ldr	x8, [x8, #3416]
   252d8:	ldr	w8, [x8]
   252dc:	cmp	w8, #0x1
   252e0:	b.eq	252f4 <rl_set_keymap_from_edit_mode@@Base+0x24>  // b.none
   252e4:	cbnz	w8, 25308 <rl_set_keymap_from_edit_mode@@Base+0x38>
   252e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   252ec:	ldr	x8, [x8, #4032]
   252f0:	b	252fc <rl_set_keymap_from_edit_mode@@Base+0x2c>
   252f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   252f8:	ldr	x8, [x8, #1984]
   252fc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25300:	ldr	x9, [x9, #1992]
   25304:	str	x8, [x9]
   25308:	ret
   2530c:	sub	sp, sp, #0xd0
   25310:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   25314:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   25318:	stp	x29, x30, [sp, #128]
   2531c:	stp	x26, x25, [sp, #144]
   25320:	stp	x24, x23, [sp, #160]
   25324:	stp	x22, x21, [sp, #176]
   25328:	stp	x20, x19, [sp, #192]
   2532c:	add	x29, sp, #0x80
   25330:	mov	w21, w1
   25334:	mov	x20, x0
   25338:	str	x0, [x8, #888]
   2533c:	str	w1, [x9, #896]
   25340:	bl	176f0 <tilde_expand@plt>
   25344:	mov	w2, #0x1b6                 	// #438
   25348:	mov	w1, wzr
   2534c:	mov	x22, x0
   25350:	bl	16a20 <open@plt>
   25354:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25358:	ldr	x25, [x25, #2808]
   2535c:	tbnz	w0, #31, 253fc <rl_set_keymap_from_edit_mode@@Base+0x12c>
   25360:	mov	w23, w0
   25364:	mov	x2, sp
   25368:	mov	w0, wzr
   2536c:	mov	w1, w23
   25370:	bl	17650 <__fxstat@plt>
   25374:	tbnz	w0, #31, 253cc <rl_set_keymap_from_edit_mode@@Base+0xfc>
   25378:	ldr	x24, [sp, #48]
   2537c:	cmn	x24, #0x1
   25380:	b.eq	253d8 <rl_set_keymap_from_edit_mode@@Base+0x108>  // b.none
   25384:	add	x0, x24, #0x1
   25388:	bl	16bf0 <xmalloc@plt>
   2538c:	mov	x19, x0
   25390:	mov	w0, w23
   25394:	mov	x1, x19
   25398:	mov	x2, x24
   2539c:	bl	17520 <read@plt>
   253a0:	mov	x24, x0
   253a4:	mov	w0, w23
   253a8:	bl	16e90 <close@plt>
   253ac:	tbnz	w24, #31, 253f4 <rl_set_keymap_from_edit_mode@@Base+0x124>
   253b0:	ldr	w8, [x25]
   253b4:	cbz	w8, 253c0 <rl_set_keymap_from_edit_mode@@Base+0xf0>
   253b8:	ldr	w0, [x25]
   253bc:	bl	17460 <_rl_signal_handler@plt>
   253c0:	sxtw	x23, w24
   253c4:	strb	wzr, [x19, x23]
   253c8:	b	25400 <rl_set_keymap_from_edit_mode@@Base+0x130>
   253cc:	mov	w0, w23
   253d0:	bl	16e90 <close@plt>
   253d4:	b	253fc <rl_set_keymap_from_edit_mode@@Base+0x12c>
   253d8:	mov	w0, w23
   253dc:	bl	16e90 <close@plt>
   253e0:	bl	177f0 <__errno_location@plt>
   253e4:	mov	w8, #0x1b                  	// #27
   253e8:	mov	x19, xzr
   253ec:	str	w8, [x0]
   253f0:	b	25400 <rl_set_keymap_from_edit_mode@@Base+0x130>
   253f4:	mov	x0, x19
   253f8:	bl	169f0 <xfree@plt>
   253fc:	mov	x19, xzr
   25400:	mov	x0, x22
   25404:	bl	169f0 <xfree@plt>
   25408:	ldr	w8, [x25]
   2540c:	cbz	w8, 25418 <rl_set_keymap_from_edit_mode@@Base+0x148>
   25410:	ldr	w0, [x25]
   25414:	bl	17460 <_rl_signal_handler@plt>
   25418:	cbz	x19, 25538 <rl_set_keymap_from_edit_mode@@Base+0x268>
   2541c:	cbnz	w21, 25454 <rl_set_keymap_from_edit_mode@@Base+0x184>
   25420:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   25424:	ldr	x0, [x21, #880]
   25428:	cmp	x0, x20
   2542c:	b.eq	25454 <rl_set_keymap_from_edit_mode@@Base+0x184>  // b.none
   25430:	cbz	x0, 25438 <rl_set_keymap_from_edit_mode@@Base+0x168>
   25434:	bl	171b0 <free@plt>
   25438:	mov	x0, x20
   2543c:	bl	16440 <strlen@plt>
   25440:	add	x0, x0, #0x1
   25444:	bl	16bf0 <xmalloc@plt>
   25448:	mov	x1, x20
   2544c:	bl	17480 <strcpy@plt>
   25450:	str	x0, [x21, #880]
   25454:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   25458:	mov	w8, #0x1                   	// #1
   2545c:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   25460:	cmp	x23, #0x1
   25464:	strb	w8, [x21, #900]
   25468:	str	w8, [x22, #904]
   2546c:	b.lt	25524 <rl_set_keymap_from_edit_mode@@Base+0x254>  // b.tstop
   25470:	add	x23, x19, x23
   25474:	adrp	x25, 3f000 <filename_completion_function@@Base+0x580>
   25478:	sub	x24, x23, #0x1
   2547c:	add	x25, x25, #0x650
   25480:	mov	x20, x19
   25484:	b	254a8 <rl_set_keymap_from_edit_mode@@Base+0x1d8>
   25488:	mov	x0, x20
   2548c:	bl	16710 <rl_parse_and_bind@plt>
   25490:	ldr	w8, [x22, #904]
   25494:	add	x20, x20, w26, sxtw
   25498:	cmp	x20, x23
   2549c:	add	w8, w8, #0x1
   254a0:	str	w8, [x22, #904]
   254a4:	b.cs	25524 <rl_set_keymap_from_edit_mode@@Base+0x254>  // b.hs, b.nlast
   254a8:	cmp	x20, x23
   254ac:	b.eq	254e0 <rl_set_keymap_from_edit_mode@@Base+0x210>  // b.none
   254b0:	sub	w8, w24, w20
   254b4:	mov	x9, xzr
   254b8:	add	w8, w8, #0x1
   254bc:	sub	x10, x23, x20
   254c0:	ldrb	w11, [x20, x9]
   254c4:	cmp	w11, #0xa
   254c8:	b.eq	254ec <rl_set_keymap_from_edit_mode@@Base+0x21c>  // b.none
   254cc:	add	x9, x9, #0x1
   254d0:	cmp	x10, x9
   254d4:	b.ne	254c0 <rl_set_keymap_from_edit_mode@@Base+0x1f0>  // b.any
   254d8:	mov	x10, x23
   254dc:	b	254f4 <rl_set_keymap_from_edit_mode@@Base+0x224>
   254e0:	mov	w8, wzr
   254e4:	mov	x10, x23
   254e8:	b	254f4 <rl_set_keymap_from_edit_mode@@Base+0x224>
   254ec:	add	x10, x20, x9
   254f0:	mov	w8, w9
   254f4:	add	w26, w8, #0x1
   254f8:	strb	wzr, [x10]
   254fc:	ldrb	w8, [x20]
   25500:	cmp	w8, #0x23
   25504:	b.hi	25488 <rl_set_keymap_from_edit_mode@@Base+0x1b8>  // b.pmore
   25508:	adr	x9, 25488 <rl_set_keymap_from_edit_mode@@Base+0x1b8>
   2550c:	ldrb	w10, [x25, x8]
   25510:	add	x9, x9, x10, lsl #2
   25514:	br	x9
   25518:	add	x20, x20, #0x1
   2551c:	sub	w26, w26, #0x1
   25520:	b	254fc <rl_set_keymap_from_edit_mode@@Base+0x22c>
   25524:	mov	x0, x19
   25528:	bl	169f0 <xfree@plt>
   2552c:	mov	w0, wzr
   25530:	strb	wzr, [x21, #900]
   25534:	b	25540 <rl_set_keymap_from_edit_mode@@Base+0x270>
   25538:	bl	177f0 <__errno_location@plt>
   2553c:	ldr	w0, [x0]
   25540:	ldp	x20, x19, [sp, #192]
   25544:	ldp	x22, x21, [sp, #176]
   25548:	ldp	x24, x23, [sp, #160]
   2554c:	ldp	x26, x25, [sp, #144]
   25550:	ldp	x29, x30, [sp, #128]
   25554:	add	sp, sp, #0xd0
   25558:	ret

000000000002555c <rl_parse_and_bind@@Base>:
   2555c:	sub	sp, sp, #0x60
   25560:	stp	x29, x30, [sp, #16]
   25564:	str	x25, [sp, #32]
   25568:	stp	x24, x23, [sp, #48]
   2556c:	stp	x22, x21, [sp, #64]
   25570:	stp	x20, x19, [sp, #80]
   25574:	add	x29, sp, #0x10
   25578:	cbz	x0, 2573c <rl_parse_and_bind@@Base+0x1e0>
   2557c:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   25580:	mov	x19, x0
   25584:	add	x8, x0, #0x1
   25588:	add	x9, x9, #0x674
   2558c:	ldrb	w10, [x19]
   25590:	cmp	w10, #0x24
   25594:	b.hi	255b4 <rl_parse_and_bind@@Base+0x58>  // b.pmore
   25598:	adr	x11, 255a8 <rl_parse_and_bind@@Base+0x4c>
   2559c:	ldrb	w12, [x9, x10]
   255a0:	add	x11, x11, x12, lsl #2
   255a4:	br	x11
   255a8:	add	x19, x19, #0x1
   255ac:	add	x8, x8, #0x1
   255b0:	b	2558c <rl_parse_and_bind@@Base+0x30>
   255b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   255b8:	ldr	x8, [x8, #2416]
   255bc:	ldrb	w8, [x8]
   255c0:	cbnz	w8, 25738 <rl_parse_and_bind@@Base+0x1dc>
   255c4:	cmp	w10, #0x22
   255c8:	b.ne	25704 <rl_parse_and_bind@@Base+0x1a8>  // b.any
   255cc:	ldrb	w10, [x19, #1]
   255d0:	cbz	w10, 25758 <rl_parse_and_bind@@Base+0x1fc>
   255d4:	mov	w9, wzr
   255d8:	mov	w8, #0x2                   	// #2
   255dc:	b	256dc <rl_parse_and_bind@@Base+0x180>
   255e0:	mov	x10, xzr
   255e4:	add	x9, x19, #0x1
   255e8:	b	255f0 <rl_parse_and_bind@@Base+0x94>
   255ec:	add	x10, x10, #0x1
   255f0:	ldrb	w11, [x8, x10]
   255f4:	cmp	w11, #0x9
   255f8:	b.eq	255ec <rl_parse_and_bind@@Base+0x90>  // b.none
   255fc:	cmp	w11, #0x20
   25600:	b.eq	255ec <rl_parse_and_bind@@Base+0x90>  // b.none
   25604:	and	x10, x10, #0xffffffff
   25608:	add	x19, x9, x10
   2560c:	ldrb	w11, [x8, x10]
   25610:	cbz	w11, 25640 <rl_parse_and_bind@@Base+0xe4>
   25614:	cmp	w11, #0x9
   25618:	b.eq	25634 <rl_parse_and_bind@@Base+0xd8>  // b.none
   2561c:	cmp	w11, #0x20
   25620:	b.eq	25634 <rl_parse_and_bind@@Base+0xd8>  // b.none
   25624:	add	x10, x10, #0x1
   25628:	ldrb	w11, [x8, x10]
   2562c:	cbnz	w11, 25614 <rl_parse_and_bind@@Base+0xb8>
   25630:	b	25640 <rl_parse_and_bind@@Base+0xe4>
   25634:	add	x11, x10, #0x1
   25638:	strb	wzr, [x9, w10, uxtw]
   2563c:	mov	x10, x11
   25640:	add	x20, x8, w10, sxtw
   25644:	b	2564c <rl_parse_and_bind@@Base+0xf0>
   25648:	add	x20, x20, #0x1
   2564c:	ldrb	w8, [x20]
   25650:	cmp	w8, #0x9
   25654:	b.eq	25648 <rl_parse_and_bind@@Base+0xec>  // b.none
   25658:	cmp	w8, #0x20
   2565c:	b.eq	25648 <rl_parse_and_bind@@Base+0xec>  // b.none
   25660:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25664:	add	x1, x1, #0x989
   25668:	mov	x0, x19
   2566c:	bl	16d80 <strcasecmp@plt>
   25670:	cbz	w0, 256f4 <rl_parse_and_bind@@Base+0x198>
   25674:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25678:	add	x1, x1, #0x8b9
   2567c:	mov	x0, x19
   25680:	bl	16d80 <strcasecmp@plt>
   25684:	cbz	w0, 256fc <rl_parse_and_bind@@Base+0x1a0>
   25688:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2568c:	add	x1, x1, #0x8bf
   25690:	mov	x0, x19
   25694:	bl	16d80 <strcasecmp@plt>
   25698:	cbz	w0, 2570c <rl_parse_and_bind@@Base+0x1b0>
   2569c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   256a0:	add	x1, x1, #0x8c4
   256a4:	mov	x0, x19
   256a8:	bl	16d80 <strcasecmp@plt>
   256ac:	cbz	w0, 2571c <rl_parse_and_bind@@Base+0x1c0>
   256b0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   256b4:	add	x0, x0, #0x89c
   256b8:	mov	x1, x19
   256bc:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   256c0:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   256c4:	cmp	w9, #0x22
   256c8:	b.eq	25714 <rl_parse_and_bind@@Base+0x1b8>  // b.none
   256cc:	mov	w9, wzr
   256d0:	ldrb	w10, [x19, x8]
   256d4:	add	x8, x8, #0x1
   256d8:	cbz	w10, 25714 <rl_parse_and_bind@@Base+0x1b8>
   256dc:	cbnz	w9, 256cc <rl_parse_and_bind@@Base+0x170>
   256e0:	and	w9, w10, #0xff
   256e4:	cmp	w9, #0x5c
   256e8:	b.ne	256c4 <rl_parse_and_bind@@Base+0x168>  // b.any
   256ec:	mov	w9, #0x1                   	// #1
   256f0:	b	256d0 <rl_parse_and_bind@@Base+0x174>
   256f4:	mov	x8, xzr
   256f8:	b	25720 <rl_parse_and_bind@@Base+0x1c4>
   256fc:	mov	w8, #0x1                   	// #1
   25700:	b	25720 <rl_parse_and_bind@@Base+0x1c4>
   25704:	mov	w8, wzr
   25708:	b	25768 <rl_parse_and_bind@@Base+0x20c>
   2570c:	mov	w8, #0x2                   	// #2
   25710:	b	25720 <rl_parse_and_bind@@Base+0x1c4>
   25714:	sub	w8, w8, #0x1
   25718:	b	2575c <rl_parse_and_bind@@Base+0x200>
   2571c:	mov	w8, #0x3                   	// #3
   25720:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25724:	add	x9, x9, #0x1a8
   25728:	add	x8, x9, x8, lsl #4
   2572c:	ldr	x8, [x8, #8]
   25730:	mov	x0, x20
   25734:	blr	x8
   25738:	mov	w0, wzr
   2573c:	ldp	x20, x19, [sp, #80]
   25740:	ldp	x22, x21, [sp, #64]
   25744:	ldp	x24, x23, [sp, #48]
   25748:	ldr	x25, [sp, #32]
   2574c:	ldp	x29, x30, [sp, #16]
   25750:	add	sp, sp, #0x60
   25754:	ret
   25758:	mov	w8, #0x1                   	// #1
   2575c:	ldrb	w9, [x19, w8, sxtw]
   25760:	cbz	w9, 258f4 <rl_parse_and_bind@@Base+0x398>
   25764:	add	w8, w8, #0x1
   25768:	mov	x11, #0x201                 	// #513
   2576c:	sxtw	x20, w8
   25770:	mov	x9, #0x100000000           	// #4294967296
   25774:	movk	x11, #0x1, lsl #32
   25778:	mov	w10, #0x1                   	// #1
   2577c:	add	x8, x9, x20, lsl #32
   25780:	movk	x11, #0x400, lsl #48
   25784:	b	25790 <rl_parse_and_bind@@Base+0x234>
   25788:	add	x20, x20, #0x1
   2578c:	add	x8, x8, x9
   25790:	ldrb	w21, [x19, x20]
   25794:	cmp	w21, #0x3a
   25798:	b.hi	25788 <rl_parse_and_bind@@Base+0x22c>  // b.pmore
   2579c:	lsl	x12, x10, x21
   257a0:	tst	x12, x11
   257a4:	b.eq	25788 <rl_parse_and_bind@@Base+0x22c>  // b.none
   257a8:	cbz	w20, 257c8 <rl_parse_and_bind@@Base+0x26c>
   257ac:	cmp	w21, #0x3a
   257b0:	b.ne	257d4 <rl_parse_and_bind@@Base+0x278>  // b.any
   257b4:	asr	x8, x8, #32
   257b8:	ldrb	w8, [x19, x8]
   257bc:	cmp	w8, #0x3d
   257c0:	cset	w24, eq  // eq = none
   257c4:	b	257d8 <rl_parse_and_bind@@Base+0x27c>
   257c8:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   257cc:	add	x0, x0, #0x747
   257d0:	b	258fc <rl_parse_and_bind@@Base+0x3a0>
   257d4:	mov	w24, wzr
   257d8:	cbz	w21, 257e8 <rl_parse_and_bind@@Base+0x28c>
   257dc:	add	w8, w20, #0x1
   257e0:	strb	wzr, [x19, x20]
   257e4:	mov	w20, w8
   257e8:	cbz	w24, 257f8 <rl_parse_and_bind@@Base+0x29c>
   257ec:	add	w8, w20, #0x1
   257f0:	strb	wzr, [x19, w20, sxtw]
   257f4:	mov	w20, w8
   257f8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   257fc:	add	x1, x1, #0x777
   25800:	mov	x0, x19
   25804:	bl	16d80 <strcasecmp@plt>
   25808:	sxtw	x22, w20
   2580c:	cbz	w0, 2584c <rl_parse_and_bind@@Base+0x2f0>
   25810:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   25814:	mov	x23, xzr
   25818:	add	x9, x19, x22
   2581c:	add	x10, x10, #0x699
   25820:	ldrb	w8, [x9, x23]
   25824:	sub	w11, w8, #0x9
   25828:	cmp	w11, #0x1e
   2582c:	b.hi	25974 <rl_parse_and_bind@@Base+0x418>  // b.pmore
   25830:	adr	x12, 25840 <rl_parse_and_bind@@Base+0x2e4>
   25834:	ldrb	w13, [x10, x11]
   25838:	add	x12, x12, x13, lsl #2
   2583c:	br	x12
   25840:	add	x23, x23, #0x1
   25844:	b	25820 <rl_parse_and_bind@@Base+0x2c4>
   25848:	add	x22, x22, #0x1
   2584c:	ldrb	w8, [x19, x22]
   25850:	cmp	w8, #0x9
   25854:	b.eq	25848 <rl_parse_and_bind@@Base+0x2ec>  // b.none
   25858:	cmp	w8, #0x20
   2585c:	b.eq	25848 <rl_parse_and_bind@@Base+0x2ec>  // b.none
   25860:	add	x20, x19, x22
   25864:	ands	w8, w8, #0xff
   25868:	b.eq	25890 <rl_parse_and_bind@@Base+0x334>  // b.none
   2586c:	cmp	w8, #0x9
   25870:	b.eq	2590c <rl_parse_and_bind@@Base+0x3b0>  // b.none
   25874:	cmp	w8, #0x20
   25878:	b.eq	2590c <rl_parse_and_bind@@Base+0x3b0>  // b.none
   2587c:	add	x8, x19, x22
   25880:	ldrb	w8, [x8, #1]
   25884:	add	x22, x22, #0x1
   25888:	ands	w8, w8, #0xff
   2588c:	b.ne	2586c <rl_parse_and_bind@@Base+0x310>  // b.any
   25890:	add	x19, x19, x22
   25894:	b	2591c <rl_parse_and_bind@@Base+0x3c0>
   25898:	add	x9, x23, w22, uxtw
   2589c:	add	x9, x9, #0x1
   258a0:	sxtw	x12, w9
   258a4:	ldrb	w10, [x19, x12]
   258a8:	add	x11, x19, x22
   258ac:	add	x20, x11, x23
   258b0:	cbz	w10, 25964 <rl_parse_and_bind@@Base+0x408>
   258b4:	mov	w11, wzr
   258b8:	b	258d8 <rl_parse_and_bind@@Base+0x37c>
   258bc:	cmp	w8, w10, uxtb
   258c0:	b.eq	25964 <rl_parse_and_bind@@Base+0x408>  // b.none
   258c4:	mov	w11, wzr
   258c8:	add	x10, x19, x9
   258cc:	ldrb	w10, [x10, #1]
   258d0:	add	x12, x9, #0x1
   258d4:	cbz	w10, 25960 <rl_parse_and_bind@@Base+0x404>
   258d8:	mov	x9, x12
   258dc:	cbnz	w11, 258c4 <rl_parse_and_bind@@Base+0x368>
   258e0:	and	w11, w10, #0xff
   258e4:	cmp	w11, #0x5c
   258e8:	b.ne	258bc <rl_parse_and_bind@@Base+0x360>  // b.any
   258ec:	mov	w11, #0x1                   	// #1
   258f0:	b	258c8 <rl_parse_and_bind@@Base+0x36c>
   258f4:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   258f8:	add	x0, x0, #0x725
   258fc:	mov	x1, x19
   25900:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   25904:	mov	w0, #0x1                   	// #1
   25908:	b	2573c <rl_parse_and_bind@@Base+0x1e0>
   2590c:	add	x19, x19, x22
   25910:	strb	wzr, [x19], #1
   25914:	b	2591c <rl_parse_and_bind@@Base+0x3c0>
   25918:	add	x19, x19, #0x1
   2591c:	ldrb	w21, [x19]
   25920:	cmp	w21, #0x9
   25924:	b.eq	25918 <rl_parse_and_bind@@Base+0x3bc>  // b.none
   25928:	cmp	w21, #0x20
   2592c:	b.eq	25918 <rl_parse_and_bind@@Base+0x3bc>  // b.none
   25930:	adrp	x23, 50000 <filename_completion_function@@Base+0x11580>
   25934:	mov	x22, xzr
   25938:	add	x23, x23, #0xd28
   2593c:	ldr	x1, [x23]
   25940:	mov	x0, x20
   25944:	bl	16d80 <strcasecmp@plt>
   25948:	cbz	w0, 25a34 <rl_parse_and_bind@@Base+0x4d8>
   2594c:	add	x22, x22, #0x1
   25950:	cmp	x22, #0x21
   25954:	add	x23, x23, #0x18
   25958:	b.ne	2593c <rl_parse_and_bind@@Base+0x3e0>  // b.any
   2595c:	b	25a38 <rl_parse_and_bind@@Base+0x4dc>
   25960:	mov	w9, w12
   25964:	ldrb	w8, [x19, w9, sxtw]
   25968:	cbz	w8, 25aec <rl_parse_and_bind@@Base+0x590>
   2596c:	add	w8, w9, #0x1
   25970:	b	25980 <rl_parse_and_bind@@Base+0x424>
   25974:	add	x8, x19, x22
   25978:	add	x20, x8, x23
   2597c:	add	w8, w22, w23
   25980:	mov	x10, #0x201                 	// #513
   25984:	sxtw	x8, w8
   25988:	mov	w9, #0x1                   	// #1
   2598c:	movk	x10, #0x1, lsl #32
   25990:	b	25998 <rl_parse_and_bind@@Base+0x43c>
   25994:	add	x8, x8, #0x1
   25998:	ldrb	w11, [x19, x8]
   2599c:	cmp	w11, #0x20
   259a0:	b.hi	25994 <rl_parse_and_bind@@Base+0x438>  // b.pmore
   259a4:	lsl	x11, x9, x11
   259a8:	tst	x11, x10
   259ac:	b.eq	25994 <rl_parse_and_bind@@Base+0x438>  // b.none
   259b0:	mov	w0, wzr
   259b4:	strb	wzr, [x19, x8]
   259b8:	tbnz	w24, #0, 2573c <rl_parse_and_bind@@Base+0x1e0>
   259bc:	cbz	w21, 25afc <rl_parse_and_bind@@Base+0x5a0>
   259c0:	ldrb	w8, [x19]
   259c4:	cmp	w8, #0x22
   259c8:	b.ne	25b08 <rl_parse_and_bind@@Base+0x5ac>  // b.any
   259cc:	mov	x0, x19
   259d0:	bl	16440 <strlen@plt>
   259d4:	add	x0, x0, #0x1
   259d8:	bl	16bf0 <xmalloc@plt>
   259dc:	ldrb	w9, [x19, #1]
   259e0:	mov	x21, x0
   259e4:	cbz	w9, 25c2c <rl_parse_and_bind@@Base+0x6d0>
   259e8:	mov	x8, xzr
   259ec:	mov	w10, wzr
   259f0:	b	25a14 <rl_parse_and_bind@@Base+0x4b8>
   259f4:	cmp	w10, #0x0
   259f8:	cset	w10, eq  // eq = none
   259fc:	strb	w9, [x21, x8]
   25a00:	add	x9, x19, x8
   25a04:	ldrb	w9, [x9, #2]
   25a08:	add	x11, x8, #0x1
   25a0c:	mov	x8, x11
   25a10:	cbz	w9, 25c08 <rl_parse_and_bind@@Base+0x6ac>
   25a14:	cbnz	w10, 259f4 <rl_parse_and_bind@@Base+0x498>
   25a18:	and	w11, w9, #0xff
   25a1c:	cmp	w11, #0x5c
   25a20:	b.eq	259f4 <rl_parse_and_bind@@Base+0x498>  // b.none
   25a24:	cmp	w11, #0x22
   25a28:	b.eq	25c30 <rl_parse_and_bind@@Base+0x6d4>  // b.none
   25a2c:	mov	w10, wzr
   25a30:	b	259fc <rl_parse_and_bind@@Base+0x4a0>
   25a34:	tbz	w22, #31, 25a94 <rl_parse_and_bind@@Base+0x538>
   25a38:	mov	x0, x20
   25a3c:	bl	26114 <rl_parse_and_bind@@Base+0xbb8>
   25a40:	tbnz	w0, #31, 25c1c <rl_parse_and_bind@@Base+0x6c0>
   25a44:	cmp	w21, #0x22
   25a48:	b.ne	25a94 <rl_parse_and_bind@@Base+0x538>  // b.any
   25a4c:	mov	x8, x19
   25a50:	ldrb	w11, [x8, #1]!
   25a54:	cbz	w11, 25c10 <rl_parse_and_bind@@Base+0x6b4>
   25a58:	mov	w10, wzr
   25a5c:	mov	w9, #0x2                   	// #2
   25a60:	b	25a7c <rl_parse_and_bind@@Base+0x520>
   25a64:	cmp	w10, #0x22
   25a68:	b.eq	25c00 <rl_parse_and_bind@@Base+0x6a4>  // b.none
   25a6c:	mov	w10, wzr
   25a70:	ldrb	w11, [x19, x9]
   25a74:	add	x9, x9, #0x1
   25a78:	cbz	w11, 25c00 <rl_parse_and_bind@@Base+0x6a4>
   25a7c:	cbnz	w10, 25a6c <rl_parse_and_bind@@Base+0x510>
   25a80:	and	w10, w11, #0xff
   25a84:	cmp	w10, #0x5c
   25a88:	b.ne	25a64 <rl_parse_and_bind@@Base+0x508>  // b.any
   25a8c:	mov	w10, #0x1                   	// #1
   25a90:	b	25a70 <rl_parse_and_bind@@Base+0x514>
   25a94:	mov	x0, x19
   25a98:	bl	16440 <strlen@plt>
   25a9c:	add	x9, x19, x0
   25aa0:	sub	x8, x9, #0x1
   25aa4:	cmp	x8, x19
   25aa8:	b.cs	25abc <rl_parse_and_bind@@Base+0x560>  // b.hs, b.nlast
   25aac:	b	25ad4 <rl_parse_and_bind@@Base+0x578>
   25ab0:	sub	x8, x8, #0x1
   25ab4:	cmp	x8, x19
   25ab8:	b.cc	25ad0 <rl_parse_and_bind@@Base+0x574>  // b.lo, b.ul, b.last
   25abc:	ldrb	w9, [x8]
   25ac0:	cmp	w9, #0x20
   25ac4:	b.eq	25ab0 <rl_parse_and_bind@@Base+0x554>  // b.none
   25ac8:	cmp	w9, #0x9
   25acc:	b.eq	25ab0 <rl_parse_and_bind@@Base+0x554>  // b.none
   25ad0:	add	x9, x8, #0x1
   25ad4:	cmp	x9, x19
   25ad8:	b.cc	25c1c <rl_parse_and_bind@@Base+0x6c0>  // b.lo, b.ul, b.last
   25adc:	ldrb	w8, [x9]
   25ae0:	cbz	w8, 25c1c <rl_parse_and_bind@@Base+0x6c0>
   25ae4:	strb	wzr, [x9]
   25ae8:	b	25c1c <rl_parse_and_bind@@Base+0x6c0>
   25aec:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   25af0:	add	x0, x0, #0x77b
   25af4:	mov	x1, x20
   25af8:	b	25900 <rl_parse_and_bind@@Base+0x3a4>
   25afc:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   25b00:	add	x0, x0, #0x7a1
   25b04:	b	258fc <rl_parse_and_bind@@Base+0x3a0>
   25b08:	mov	w1, #0x2d                  	// #45
   25b0c:	mov	x0, x19
   25b10:	bl	16ee0 <strrchr@plt>
   25b14:	cmp	x0, #0x0
   25b18:	csinc	x21, x19, x0, eq  // eq = none
   25b1c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b20:	add	x1, x1, #0xd11
   25b24:	mov	x0, x21
   25b28:	bl	16d80 <strcasecmp@plt>
   25b2c:	cbz	w0, 25cc8 <rl_parse_and_bind@@Base+0x76c>
   25b30:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b34:	add	x1, x1, #0xd15
   25b38:	mov	x0, x21
   25b3c:	bl	16d80 <strcasecmp@plt>
   25b40:	cbz	w0, 25d0c <rl_parse_and_bind@@Base+0x7b0>
   25b44:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b48:	add	x1, x1, #0xd19
   25b4c:	mov	x0, x21
   25b50:	bl	16d80 <strcasecmp@plt>
   25b54:	cbz	w0, 25d14 <rl_parse_and_bind@@Base+0x7b8>
   25b58:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b5c:	add	x1, x1, #0xd20
   25b60:	mov	x0, x21
   25b64:	bl	16d80 <strcasecmp@plt>
   25b68:	cbz	w0, 25d44 <rl_parse_and_bind@@Base+0x7e8>
   25b6c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b70:	add	x1, x1, #0xd24
   25b74:	mov	x0, x21
   25b78:	bl	16d80 <strcasecmp@plt>
   25b7c:	cbz	w0, 25d4c <rl_parse_and_bind@@Base+0x7f0>
   25b80:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b84:	add	x1, x1, #0xd2c
   25b88:	mov	x0, x21
   25b8c:	bl	16d80 <strcasecmp@plt>
   25b90:	cbz	w0, 25d54 <rl_parse_and_bind@@Base+0x7f8>
   25b94:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25b98:	add	x1, x1, #0xd30
   25b9c:	mov	x0, x21
   25ba0:	bl	16d80 <strcasecmp@plt>
   25ba4:	cbz	w0, 25d5c <rl_parse_and_bind@@Base+0x800>
   25ba8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25bac:	add	x1, x1, #0xd37
   25bb0:	mov	x0, x21
   25bb4:	bl	16d80 <strcasecmp@plt>
   25bb8:	cbz	w0, 25d64 <rl_parse_and_bind@@Base+0x808>
   25bbc:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25bc0:	add	x1, x1, #0xd3e
   25bc4:	mov	x0, x21
   25bc8:	bl	16d80 <strcasecmp@plt>
   25bcc:	cbz	w0, 25d6c <rl_parse_and_bind@@Base+0x810>
   25bd0:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25bd4:	add	x1, x1, #0xd42
   25bd8:	mov	x0, x21
   25bdc:	bl	16d80 <strcasecmp@plt>
   25be0:	cbz	w0, 25d74 <rl_parse_and_bind@@Base+0x818>
   25be4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25be8:	add	x1, x1, #0xd48
   25bec:	mov	x0, x21
   25bf0:	bl	16d80 <strcasecmp@plt>
   25bf4:	cbz	w0, 25d7c <rl_parse_and_bind@@Base+0x820>
   25bf8:	ldrb	w24, [x21]
   25bfc:	b	25d90 <rl_parse_and_bind@@Base+0x834>
   25c00:	sub	w9, w9, #0x1
   25c04:	b	25c14 <rl_parse_and_bind@@Base+0x6b8>
   25c08:	mov	w8, w11
   25c0c:	b	25c30 <rl_parse_and_bind@@Base+0x6d4>
   25c10:	mov	w9, #0x1                   	// #1
   25c14:	strb	wzr, [x19, w9, sxtw]
   25c18:	mov	x19, x8
   25c1c:	mov	x0, x20
   25c20:	mov	x1, x19
   25c24:	bl	16630 <rl_variable_bind@plt>
   25c28:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   25c2c:	mov	w8, wzr
   25c30:	strb	wzr, [x21, w8, uxtw]
   25c34:	ldrb	w24, [x20]
   25c38:	cmp	w24, #0x27
   25c3c:	b.eq	25c48 <rl_parse_and_bind@@Base+0x6ec>  // b.none
   25c40:	cmp	w24, #0x22
   25c44:	b.ne	25cd0 <rl_parse_and_bind@@Base+0x774>  // b.any
   25c48:	mov	x0, x20
   25c4c:	bl	16440 <strlen@plt>
   25c50:	cbz	w0, 25c70 <rl_parse_and_bind@@Base+0x714>
   25c54:	sub	w8, w0, #0x1
   25c58:	add	x9, x19, x22
   25c5c:	add	x8, x9, w8, sxtw
   25c60:	ldrb	w9, [x8, x23]
   25c64:	cmp	w9, w24
   25c68:	b.ne	25c70 <rl_parse_and_bind@@Base+0x714>  // b.any
   25c6c:	strb	wzr, [x8, x23]
   25c70:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25c74:	ldr	x8, [x8, #1992]
   25c78:	ldr	x20, [x8]
   25c7c:	add	x8, x19, x22
   25c80:	add	x8, x8, x23
   25c84:	add	x19, x8, #0x1
   25c88:	mov	x0, x19
   25c8c:	bl	16440 <strlen@plt>
   25c90:	mov	w8, #0x1                   	// #1
   25c94:	bfi	x8, x0, #1, #63
   25c98:	mov	x0, x8
   25c9c:	bl	16bf0 <xmalloc@plt>
   25ca0:	mov	x22, x0
   25ca4:	sub	x2, x29, #0x4
   25ca8:	mov	x0, x19
   25cac:	mov	x1, x22
   25cb0:	bl	17050 <rl_translate_keyseq@plt>
   25cb4:	mov	w0, #0x2                   	// #2
   25cb8:	mov	x1, x21
   25cbc:	mov	x2, x22
   25cc0:	mov	x3, x20
   25cc4:	b	25d34 <rl_parse_and_bind@@Base+0x7d8>
   25cc8:	mov	x8, xzr
   25ccc:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25cd0:	bl	16970 <rl_initialize_funmap@plt>
   25cd4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25cd8:	ldr	x8, [x8, #3256]
   25cdc:	ldr	x8, [x8]
   25ce0:	ldr	x19, [x8]
   25ce4:	cbz	x19, 25d04 <rl_parse_and_bind@@Base+0x7a8>
   25ce8:	add	x22, x8, #0x8
   25cec:	ldr	x0, [x19]
   25cf0:	mov	x1, x20
   25cf4:	bl	16d80 <strcasecmp@plt>
   25cf8:	cbz	w0, 25d1c <rl_parse_and_bind@@Base+0x7c0>
   25cfc:	ldr	x19, [x22], #8
   25d00:	cbnz	x19, 25cec <rl_parse_and_bind@@Base+0x790>
   25d04:	mov	x2, xzr
   25d08:	b	25d20 <rl_parse_and_bind@@Base+0x7c4>
   25d0c:	mov	w8, #0x1                   	// #1
   25d10:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d14:	mov	w8, #0x2                   	// #2
   25d18:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d1c:	ldr	x2, [x19, #8]
   25d20:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25d24:	ldr	x8, [x8, #1992]
   25d28:	mov	w0, wzr
   25d2c:	mov	x1, x21
   25d30:	ldr	x3, [x8]
   25d34:	bl	168a0 <rl_generic_bind@plt>
   25d38:	mov	x0, x21
   25d3c:	bl	169f0 <xfree@plt>
   25d40:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   25d44:	mov	w8, #0x3                   	// #3
   25d48:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d4c:	mov	w8, #0x4                   	// #4
   25d50:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d54:	mov	w8, #0x5                   	// #5
   25d58:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d5c:	mov	w8, #0x6                   	// #6
   25d60:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d64:	mov	w8, #0x7                   	// #7
   25d68:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d6c:	mov	w8, #0x8                   	// #8
   25d70:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d74:	mov	w8, #0x9                   	// #9
   25d78:	b	25d80 <rl_parse_and_bind@@Base+0x824>
   25d7c:	mov	w8, #0xa                   	// #10
   25d80:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25d84:	add	x9, x9, #0x1f8
   25d88:	add	x8, x9, x8, lsl #4
   25d8c:	ldr	w24, [x8, #8]
   25d90:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25d94:	add	x1, x1, #0x708
   25d98:	mov	x0, x19
   25d9c:	bl	17150 <_rl_strindex@plt>
   25da0:	cbnz	x0, 25dcc <rl_parse_and_bind@@Base+0x870>
   25da4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25da8:	add	x1, x1, #0x711
   25dac:	mov	x0, x19
   25db0:	bl	17150 <_rl_strindex@plt>
   25db4:	cbnz	x0, 25dcc <rl_parse_and_bind@@Base+0x870>
   25db8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25dbc:	add	x1, x1, #0x714
   25dc0:	mov	x0, x19
   25dc4:	bl	17150 <_rl_strindex@plt>
   25dc8:	cbz	x0, 25fd8 <rl_parse_and_bind@@Base+0xa7c>
   25dcc:	bl	17100 <__ctype_b_loc@plt>
   25dd0:	ldr	x8, [x0]
   25dd4:	and	w25, w24, #0xff
   25dd8:	ldrh	w8, [x8, w25, uxtw #1]
   25ddc:	tbz	w8, #9, 25dec <rl_parse_and_bind@@Base+0x890>
   25de0:	bl	16dc0 <__ctype_toupper_loc@plt>
   25de4:	ldr	x8, [x0]
   25de8:	ldr	w24, [x8, x25, lsl #2]
   25dec:	and	w24, w24, #0x1f
   25df0:	mov	w25, #0x1                   	// #1
   25df4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25df8:	add	x1, x1, #0x71a
   25dfc:	mov	x0, x19
   25e00:	bl	17150 <_rl_strindex@plt>
   25e04:	cbnz	x0, 25e1c <rl_parse_and_bind@@Base+0x8c0>
   25e08:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25e0c:	add	x1, x1, #0x6e5
   25e10:	mov	x0, x19
   25e14:	bl	17150 <_rl_strindex@plt>
   25e18:	cbz	x0, 25f14 <rl_parse_and_bind@@Base+0x9b8>
   25e1c:	orr	w24, w24, #0x80
   25e20:	ldrb	w8, [x20]
   25e24:	cmp	w8, #0x27
   25e28:	b.eq	25e34 <rl_parse_and_bind@@Base+0x8d8>  // b.none
   25e2c:	cmp	w8, #0x22
   25e30:	b.ne	25ec4 <rl_parse_and_bind@@Base+0x968>  // b.any
   25e34:	mov	x0, x20
   25e38:	bl	16440 <strlen@plt>
   25e3c:	strb	w24, [sp, #8]
   25e40:	strb	wzr, [sp, #9]
   25e44:	cbz	w0, 25e68 <rl_parse_and_bind@@Base+0x90c>
   25e48:	sub	w8, w0, #0x1
   25e4c:	add	x9, x19, x22
   25e50:	add	x8, x9, w8, sxtw
   25e54:	ldrb	w9, [x8, x23]
   25e58:	ldrb	w10, [x20]
   25e5c:	cmp	w9, w10
   25e60:	b.ne	25e68 <rl_parse_and_bind@@Base+0x90c>  // b.any
   25e64:	strb	wzr, [x8, x23]
   25e68:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25e6c:	ldr	x8, [x8, #1992]
   25e70:	ldr	x20, [x8]
   25e74:	add	x8, x19, x22
   25e78:	add	x8, x8, x23
   25e7c:	add	x19, x8, #0x1
   25e80:	mov	x0, x19
   25e84:	bl	16440 <strlen@plt>
   25e88:	mov	w8, #0x1                   	// #1
   25e8c:	bfi	x8, x0, #1, #63
   25e90:	mov	x0, x8
   25e94:	bl	16bf0 <xmalloc@plt>
   25e98:	mov	x21, x0
   25e9c:	add	x2, x29, #0x18
   25ea0:	mov	x0, x19
   25ea4:	mov	x1, x21
   25ea8:	bl	17050 <rl_translate_keyseq@plt>
   25eac:	add	x1, sp, #0x8
   25eb0:	mov	w0, #0x2                   	// #2
   25eb4:	mov	x2, x21
   25eb8:	mov	x3, x20
   25ebc:	bl	168a0 <rl_generic_bind@plt>
   25ec0:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   25ec4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   25ec8:	add	x1, x1, #0x7d9
   25ecc:	mov	x0, x20
   25ed0:	bl	16d80 <strcasecmp@plt>
   25ed4:	cbz	w0, 25f2c <rl_parse_and_bind@@Base+0x9d0>
   25ed8:	bl	16970 <rl_initialize_funmap@plt>
   25edc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25ee0:	ldr	x8, [x8, #3256]
   25ee4:	ldr	x8, [x8]
   25ee8:	ldr	x19, [x8]
   25eec:	cbz	x19, 25f0c <rl_parse_and_bind@@Base+0x9b0>
   25ef0:	add	x21, x8, #0x8
   25ef4:	ldr	x0, [x19]
   25ef8:	mov	x1, x20
   25efc:	bl	16d80 <strcasecmp@plt>
   25f00:	cbz	w0, 25f58 <rl_parse_and_bind@@Base+0x9fc>
   25f04:	ldr	x19, [x21], #8
   25f08:	cbnz	x19, 25ef4 <rl_parse_and_bind@@Base+0x998>
   25f0c:	mov	x2, xzr
   25f10:	b	25f5c <rl_parse_and_bind@@Base+0xa00>
   25f14:	cmp	x19, x21
   25f18:	b.eq	25e20 <rl_parse_and_bind@@Base+0x8c4>  // b.none
   25f1c:	cbnz	w25, 25e20 <rl_parse_and_bind@@Base+0x8c4>
   25f20:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   25f24:	add	x0, x0, #0x7c0
   25f28:	b	258fc <rl_parse_and_bind@@Base+0x3a0>
   25f2c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25f30:	ldr	x8, [x8, #1992]
   25f34:	strb	w24, [sp, #4]
   25f38:	strb	wzr, [sp, #5]
   25f3c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25f40:	ldr	x3, [x8]
   25f44:	ldr	x2, [x2, #3008]
   25f48:	add	x1, sp, #0x4
   25f4c:	mov	w0, #0x1                   	// #1
   25f50:	bl	168a0 <rl_generic_bind@plt>
   25f54:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   25f58:	ldr	x2, [x19, #8]
   25f5c:	tbnz	w24, #31, 25738 <rl_parse_and_bind@@Base+0x1dc>
   25f60:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25f64:	ldr	x19, [x19, #1992]
   25f68:	and	w8, w24, #0xffffff80
   25f6c:	cmp	w8, #0x80
   25f70:	ldr	x3, [x19]
   25f74:	b.ne	25fb0 <rl_parse_and_bind@@Base+0xa54>  // b.any
   25f78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   25f7c:	ldr	x8, [x8, #3456]
   25f80:	ldr	w8, [x8]
   25f84:	cbz	w8, 25fb0 <rl_parse_and_bind@@Base+0xa54>
   25f88:	ldrb	w8, [x3, #432]
   25f8c:	cmp	w8, #0x1
   25f90:	b.ne	25738 <rl_parse_and_bind@@Base+0x1dc>  // b.any
   25f94:	ldr	x8, [x3, #440]
   25f98:	sxtw	x9, w24
   25f9c:	and	x9, x9, #0xffffffffffffff7f
   25fa0:	add	x8, x8, x9, lsl #4
   25fa4:	strb	wzr, [x8]
   25fa8:	str	x2, [x8, #8]
   25fac:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   25fb0:	add	x8, x3, w24, uxtw #4
   25fb4:	ldrb	w9, [x8]
   25fb8:	cmp	w9, #0x1
   25fbc:	b.ne	25fe0 <rl_parse_and_bind@@Base+0xa84>  // b.any
   25fc0:	cmp	w24, #0x5c
   25fc4:	b.ne	25ff4 <rl_parse_and_bind@@Base+0xa98>  // b.any
   25fc8:	mov	w8, #0x5c                  	// #92
   25fcc:	strb	w8, [x29, #28]
   25fd0:	mov	w8, #0x1                   	// #1
   25fd4:	b	25ff8 <rl_parse_and_bind@@Base+0xa9c>
   25fd8:	mov	w25, wzr
   25fdc:	b	25df4 <rl_parse_and_bind@@Base+0x898>
   25fe0:	mov	w9, w24
   25fe4:	strb	wzr, [x8]
   25fe8:	add	x8, x3, x9, lsl #4
   25fec:	str	x2, [x8, #8]
   25ff0:	b	26014 <rl_parse_and_bind@@Base+0xab8>
   25ff4:	mov	w8, wzr
   25ff8:	add	x9, x29, #0x1c
   25ffc:	orr	x8, x8, x9
   26000:	add	x1, x29, #0x1c
   26004:	mov	w0, wzr
   26008:	strb	w24, [x8]
   2600c:	strb	wzr, [x8, #1]
   26010:	bl	168a0 <rl_generic_bind@plt>
   26014:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26018:	ldr	x8, [x19]
   2601c:	ldr	x9, [x9, #2136]
   26020:	str	x8, [x9]
   26024:	b	25738 <rl_parse_and_bind@@Base+0x1dc>
   26028:	sub	sp, sp, #0x130
   2602c:	stp	x29, x30, [sp, #256]
   26030:	add	x29, sp, #0x100
   26034:	str	x28, [sp, #272]
   26038:	stp	x20, x19, [sp, #288]
   2603c:	stp	x1, x2, [x29, #-120]
   26040:	stp	x3, x4, [x29, #-104]
   26044:	stp	x5, x6, [x29, #-88]
   26048:	stur	x7, [x29, #-72]
   2604c:	stp	q0, q1, [sp]
   26050:	stp	q2, q3, [sp, #32]
   26054:	stp	q4, q5, [sp, #64]
   26058:	stp	q6, q7, [sp, #96]
   2605c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26060:	ldr	x20, [x20, #2208]
   26064:	mov	x8, #0xffffffffffffffc8    	// #-56
   26068:	mov	x9, sp
   2606c:	mov	x19, x0
   26070:	ldr	x3, [x20]
   26074:	movk	x8, #0xff80, lsl #32
   26078:	sub	x10, x29, #0x78
   2607c:	add	x9, x9, #0x80
   26080:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   26084:	add	x10, x10, #0x38
   26088:	stp	x9, x8, [x29, #-16]
   2608c:	add	x8, x29, #0x30
   26090:	add	x0, x0, #0x98c
   26094:	mov	w1, #0xa                   	// #10
   26098:	mov	w2, #0x1                   	// #1
   2609c:	stp	x8, x10, [x29, #-32]
   260a0:	bl	173e0 <fwrite@plt>
   260a4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   260a8:	ldrb	w8, [x8, #900]
   260ac:	cmp	w8, #0x1
   260b0:	b.ne	260d4 <rl_parse_and_bind@@Base+0xb78>  // b.any
   260b4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   260b8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   260bc:	ldr	x0, [x20]
   260c0:	ldr	x2, [x8, #888]
   260c4:	ldr	w3, [x9, #904]
   260c8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   260cc:	add	x1, x1, #0x997
   260d0:	bl	17950 <fprintf@plt>
   260d4:	ldp	q0, q1, [x29, #-32]
   260d8:	ldr	x0, [x20]
   260dc:	sub	x2, x29, #0x40
   260e0:	mov	x1, x19
   260e4:	stp	q0, q1, [x29, #-64]
   260e8:	bl	177c0 <vfprintf@plt>
   260ec:	ldr	x1, [x20]
   260f0:	mov	w0, #0xa                   	// #10
   260f4:	bl	166d0 <fputc@plt>
   260f8:	ldr	x0, [x20]
   260fc:	bl	17430 <fflush@plt>
   26100:	ldp	x20, x19, [sp, #288]
   26104:	ldr	x28, [sp, #272]
   26108:	ldp	x29, x30, [sp, #256]
   2610c:	add	sp, sp, #0x130
   26110:	ret
   26114:	stp	x29, x30, [sp, #-32]!
   26118:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2611c:	add	x1, x1, #0xc28
   26120:	str	x19, [sp, #16]
   26124:	mov	x29, sp
   26128:	mov	x19, x0
   2612c:	bl	16d80 <strcasecmp@plt>
   26130:	cbz	w0, 26284 <rl_parse_and_bind@@Base+0xd28>
   26134:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26138:	add	x1, x1, #0xc33
   2613c:	mov	x0, x19
   26140:	bl	16d80 <strcasecmp@plt>
   26144:	cbz	w0, 26230 <rl_parse_and_bind@@Base+0xcd4>
   26148:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2614c:	add	x1, x1, #0xc41
   26150:	mov	x0, x19
   26154:	bl	16d80 <strcasecmp@plt>
   26158:	cbz	w0, 26238 <rl_parse_and_bind@@Base+0xcdc>
   2615c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26160:	add	x1, x1, #0xc5a
   26164:	mov	x0, x19
   26168:	bl	16d80 <strcasecmp@plt>
   2616c:	cbz	w0, 26240 <rl_parse_and_bind@@Base+0xce4>
   26170:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26174:	add	x1, x1, #0xc7b
   26178:	mov	x0, x19
   2617c:	bl	16d80 <strcasecmp@plt>
   26180:	cbz	w0, 26248 <rl_parse_and_bind@@Base+0xcec>
   26184:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26188:	add	x1, x1, #0x2ca
   2618c:	mov	x0, x19
   26190:	bl	16d80 <strcasecmp@plt>
   26194:	cbz	w0, 26250 <rl_parse_and_bind@@Base+0xcf4>
   26198:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2619c:	add	x1, x1, #0xc92
   261a0:	mov	x0, x19
   261a4:	bl	16d80 <strcasecmp@plt>
   261a8:	cbz	w0, 26258 <rl_parse_and_bind@@Base+0xcfc>
   261ac:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   261b0:	add	x1, x1, #0xca4
   261b4:	mov	x0, x19
   261b8:	bl	16d80 <strcasecmp@plt>
   261bc:	cbz	w0, 26260 <rl_parse_and_bind@@Base+0xd04>
   261c0:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   261c4:	add	x1, x1, #0xcb1
   261c8:	mov	x0, x19
   261cc:	bl	16d80 <strcasecmp@plt>
   261d0:	cbz	w0, 26268 <rl_parse_and_bind@@Base+0xd0c>
   261d4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   261d8:	add	x1, x1, #0xcc5
   261dc:	mov	x0, x19
   261e0:	bl	16d80 <strcasecmp@plt>
   261e4:	cbz	w0, 26270 <rl_parse_and_bind@@Base+0xd14>
   261e8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   261ec:	add	x1, x1, #0xccc
   261f0:	mov	x0, x19
   261f4:	bl	16d80 <strcasecmp@plt>
   261f8:	cbz	w0, 26278 <rl_parse_and_bind@@Base+0xd1c>
   261fc:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26200:	add	x1, x1, #0xcdb
   26204:	mov	x0, x19
   26208:	bl	16d80 <strcasecmp@plt>
   2620c:	cbz	w0, 26280 <rl_parse_and_bind@@Base+0xd24>
   26210:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26214:	add	x1, x1, #0xcee
   26218:	mov	x0, x19
   2621c:	bl	16d80 <strcasecmp@plt>
   26220:	cmp	w0, #0x0
   26224:	mov	w8, #0xc                   	// #12
   26228:	csinv	w0, w8, wzr, eq  // eq = none
   2622c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26230:	mov	w0, #0x1                   	// #1
   26234:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26238:	mov	w0, #0x2                   	// #2
   2623c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26240:	mov	w0, #0x3                   	// #3
   26244:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26248:	mov	w0, #0x4                   	// #4
   2624c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26250:	mov	w0, #0x5                   	// #5
   26254:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26258:	mov	w0, #0x6                   	// #6
   2625c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26260:	mov	w0, #0x7                   	// #7
   26264:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26268:	mov	w0, #0x8                   	// #8
   2626c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26270:	mov	w0, #0x9                   	// #9
   26274:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26278:	mov	w0, #0xa                   	// #10
   2627c:	b	26284 <rl_parse_and_bind@@Base+0xd28>
   26280:	mov	w0, #0xb                   	// #11
   26284:	ldr	x19, [sp, #16]
   26288:	ldp	x29, x30, [sp], #32
   2628c:	ret

0000000000026290 <rl_variable_bind@@Base>:
   26290:	stp	x29, x30, [sp, #-48]!
   26294:	stp	x22, x21, [sp, #16]
   26298:	adrp	x21, 50000 <filename_completion_function@@Base+0x11580>
   2629c:	stp	x20, x19, [sp, #32]
   262a0:	mov	x19, x1
   262a4:	mov	x20, x0
   262a8:	mov	x22, xzr
   262ac:	add	x21, x21, #0xd28
   262b0:	mov	x29, sp
   262b4:	ldr	x1, [x21]
   262b8:	mov	x0, x20
   262bc:	bl	16d80 <strcasecmp@plt>
   262c0:	cbz	w0, 262d8 <rl_variable_bind@@Base+0x48>
   262c4:	add	x22, x22, #0x1
   262c8:	cmp	x22, #0x21
   262cc:	add	x21, x21, #0x18
   262d0:	b.ne	262b4 <rl_variable_bind@@Base+0x24>  // b.any
   262d4:	b	26314 <rl_variable_bind@@Base+0x84>
   262d8:	tbnz	w22, #31, 26314 <rl_variable_bind@@Base+0x84>
   262dc:	cbz	x19, 26368 <rl_variable_bind@@Base+0xd8>
   262e0:	ldrb	w20, [x19]
   262e4:	cbz	w20, 26368 <rl_variable_bind@@Base+0xd8>
   262e8:	adrp	x1, 3e000 <_rl_print_color_indicator@@Base+0xec>
   262ec:	add	x1, x1, #0xf84
   262f0:	mov	x0, x19
   262f4:	bl	16d80 <strcasecmp@plt>
   262f8:	cbz	w0, 26368 <rl_variable_bind@@Base+0xd8>
   262fc:	cmp	w20, #0x31
   26300:	b.ne	263fc <rl_variable_bind@@Base+0x16c>  // b.any
   26304:	ldrb	w8, [x19, #1]
   26308:	cmp	w8, #0x0
   2630c:	cset	w8, eq  // eq = none
   26310:	b	2636c <rl_variable_bind@@Base+0xdc>
   26314:	mov	x0, x20
   26318:	bl	26114 <rl_parse_and_bind@@Base+0xbb8>
   2631c:	tbnz	w0, #31, 26350 <rl_variable_bind@@Base+0xc0>
   26320:	cmp	w0, #0xd
   26324:	b.eq	26350 <rl_variable_bind@@Base+0xc0>  // b.none
   26328:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2632c:	add	x8, x8, #0x58
   26330:	mov	w9, #0x18                  	// #24
   26334:	umaddl	x8, w0, w9, x8
   26338:	ldr	x1, [x8, #16]
   2633c:	mov	x0, x19
   26340:	ldp	x20, x19, [sp, #32]
   26344:	ldp	x22, x21, [sp, #16]
   26348:	ldp	x29, x30, [sp], #48
   2634c:	br	x1
   26350:	tbz	w0, #31, 26414 <rl_variable_bind@@Base+0x184>
   26354:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   26358:	add	x0, x0, #0x7e9
   2635c:	mov	x1, x20
   26360:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   26364:	b	26414 <rl_variable_bind@@Base+0x184>
   26368:	mov	w8, #0x1                   	// #1
   2636c:	ldr	x9, [x21, #8]
   26370:	cmp	w22, #0x19
   26374:	str	w8, [x9]
   26378:	b.eq	26384 <rl_variable_bind@@Base+0xf4>  // b.none
   2637c:	cmp	w22, #0x1
   26380:	b.ne	26414 <rl_variable_bind@@Base+0x184>  // b.any
   26384:	ldr	x19, [x21]
   26388:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2638c:	add	x1, x1, #0x9bc
   26390:	mov	x0, x19
   26394:	bl	16d80 <strcasecmp@plt>
   26398:	cbz	w0, 263cc <rl_variable_bind@@Base+0x13c>
   2639c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   263a0:	add	x1, x1, #0xb7c
   263a4:	mov	x0, x19
   263a8:	bl	16d80 <strcasecmp@plt>
   263ac:	cbz	w0, 263e0 <rl_variable_bind@@Base+0x150>
   263b0:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   263b4:	add	x1, x1, #0xbf2
   263b8:	mov	x0, x19
   263bc:	bl	16d80 <strcasecmp@plt>
   263c0:	cbnz	w0, 26414 <rl_variable_bind@@Base+0x184>
   263c4:	bl	17640 <_rl_reset_prompt@plt>
   263c8:	b	26414 <rl_variable_bind@@Base+0x184>
   263cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   263d0:	ldr	x8, [x8, #2296]
   263d4:	ldr	w0, [x8]
   263d8:	bl	17930 <_rl_enable_paren_matching@plt>
   263dc:	b	26414 <rl_variable_bind@@Base+0x184>
   263e0:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   263e4:	ldr	w8, [x8, #3312]
   263e8:	cbz	w8, 26404 <rl_variable_bind@@Base+0x174>
   263ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   263f0:	ldr	x8, [x8, #3288]
   263f4:	mov	w9, #0x2                   	// #2
   263f8:	b	26410 <rl_variable_bind@@Base+0x180>
   263fc:	mov	w8, wzr
   26400:	b	2636c <rl_variable_bind@@Base+0xdc>
   26404:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26408:	ldr	x8, [x8, #3288]
   2640c:	mov	w9, #0x1                   	// #1
   26410:	str	w9, [x8]
   26414:	ldp	x20, x19, [sp, #32]
   26418:	ldp	x22, x21, [sp, #16]
   2641c:	mov	w0, wzr
   26420:	ldp	x29, x30, [sp], #48
   26424:	ret

0000000000026428 <rl_variable_value@@Base>:
   26428:	stp	x29, x30, [sp, #-48]!
   2642c:	stp	x20, x19, [sp, #32]
   26430:	adrp	x20, 50000 <filename_completion_function@@Base+0x11580>
   26434:	str	x21, [sp, #16]
   26438:	mov	x19, x0
   2643c:	mov	x21, xzr
   26440:	add	x20, x20, #0xd30
   26444:	mov	x29, sp
   26448:	ldur	x1, [x20, #-8]
   2644c:	mov	x0, x19
   26450:	bl	16d80 <strcasecmp@plt>
   26454:	cbz	w0, 2646c <rl_variable_value@@Base+0x44>
   26458:	add	x21, x21, #0x1
   2645c:	cmp	x21, #0x21
   26460:	add	x20, x20, #0x18
   26464:	b.ne	26448 <rl_variable_value@@Base+0x20>  // b.any
   26468:	b	26494 <rl_variable_value@@Base+0x6c>
   2646c:	tbnz	w21, #31, 26494 <rl_variable_value@@Base+0x6c>
   26470:	ldr	x8, [x20]
   26474:	adrp	x9, 3e000 <_rl_print_color_indicator@@Base+0xec>
   26478:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   2647c:	add	x9, x9, #0xf84
   26480:	ldr	w8, [x8]
   26484:	add	x10, x10, #0x7e5
   26488:	cmp	w8, #0x0
   2648c:	csel	x0, x10, x9, eq  // eq = none
   26490:	b	264c8 <rl_variable_value@@Base+0xa0>
   26494:	mov	x0, x19
   26498:	bl	26114 <rl_parse_and_bind@@Base+0xbb8>
   2649c:	tbnz	w0, #31, 264c4 <rl_variable_value@@Base+0x9c>
   264a0:	mov	w8, #0x18                  	// #24
   264a4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   264a8:	umull	x8, w0, w8
   264ac:	add	x9, x9, #0x58
   264b0:	ldr	x0, [x9, x8]
   264b4:	ldp	x20, x19, [sp, #32]
   264b8:	ldr	x21, [sp, #16]
   264bc:	ldp	x29, x30, [sp], #48
   264c0:	b	264d8 <rl_variable_value@@Base+0xb0>
   264c4:	mov	x0, xzr
   264c8:	ldp	x20, x19, [sp, #32]
   264cc:	ldr	x21, [sp, #16]
   264d0:	ldp	x29, x30, [sp], #48
   264d4:	ret
   264d8:	stp	x29, x30, [sp, #-32]!
   264dc:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   264e0:	add	x1, x1, #0xc28
   264e4:	stp	x20, x19, [sp, #16]
   264e8:	mov	x29, sp
   264ec:	mov	x19, x0
   264f0:	bl	16d80 <strcasecmp@plt>
   264f4:	cbz	w0, 265fc <rl_variable_value@@Base+0x1d4>
   264f8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   264fc:	add	x1, x1, #0xc33
   26500:	mov	x0, x19
   26504:	bl	16d80 <strcasecmp@plt>
   26508:	cbz	w0, 26634 <rl_variable_value@@Base+0x20c>
   2650c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26510:	add	x1, x1, #0xc41
   26514:	mov	x0, x19
   26518:	bl	16d80 <strcasecmp@plt>
   2651c:	cbz	w0, 26654 <rl_variable_value@@Base+0x22c>
   26520:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26524:	add	x1, x1, #0xc5a
   26528:	mov	x0, x19
   2652c:	bl	16d80 <strcasecmp@plt>
   26530:	cbz	w0, 26660 <rl_variable_value@@Base+0x238>
   26534:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26538:	add	x1, x1, #0xc7b
   2653c:	mov	x0, x19
   26540:	bl	16d80 <strcasecmp@plt>
   26544:	cbz	w0, 2666c <rl_variable_value@@Base+0x244>
   26548:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2654c:	add	x1, x1, #0x2ca
   26550:	mov	x0, x19
   26554:	bl	16d80 <strcasecmp@plt>
   26558:	cbz	w0, 266a0 <rl_variable_value@@Base+0x278>
   2655c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26560:	add	x1, x1, #0xca4
   26564:	mov	x0, x19
   26568:	bl	16d80 <strcasecmp@plt>
   2656c:	cbz	w0, 266d8 <rl_variable_value@@Base+0x2b0>
   26570:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26574:	add	x1, x1, #0xcb1
   26578:	mov	x0, x19
   2657c:	bl	16d80 <strcasecmp@plt>
   26580:	cbz	w0, 266f4 <rl_variable_value@@Base+0x2cc>
   26584:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26588:	add	x1, x1, #0xcc5
   2658c:	mov	x0, x19
   26590:	bl	16d80 <strcasecmp@plt>
   26594:	cbz	w0, 2673c <rl_variable_value@@Base+0x314>
   26598:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2659c:	add	x1, x1, #0xccc
   265a0:	mov	x0, x19
   265a4:	bl	16d80 <strcasecmp@plt>
   265a8:	cbz	w0, 2678c <rl_variable_value@@Base+0x364>
   265ac:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   265b0:	add	x1, x1, #0xc92
   265b4:	mov	x0, x19
   265b8:	bl	16d80 <strcasecmp@plt>
   265bc:	cbz	w0, 26798 <rl_variable_value@@Base+0x370>
   265c0:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   265c4:	add	x1, x1, #0xcdb
   265c8:	mov	x0, x19
   265cc:	bl	16d80 <strcasecmp@plt>
   265d0:	cbz	w0, 26808 <rl_variable_value@@Base+0x3e0>
   265d4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   265d8:	add	x1, x1, #0xcee
   265dc:	mov	x0, x19
   265e0:	bl	16d80 <strcasecmp@plt>
   265e4:	cbnz	w0, 26784 <rl_variable_value@@Base+0x35c>
   265e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   265ec:	ldr	x8, [x8, #2704]
   265f0:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   265f4:	add	x9, x9, #0xdb7
   265f8:	b	26644 <rl_variable_value@@Base+0x21c>
   265fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26600:	ldr	x8, [x8, #3288]
   26604:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   26608:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   2660c:	add	x9, x9, #0xd01
   26610:	ldr	w8, [x8]
   26614:	add	x10, x10, #0xd09
   26618:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   2661c:	add	x11, x11, #0x80c
   26620:	cmp	w8, #0x2
   26624:	csel	x9, x10, x9, eq  // eq = none
   26628:	cmp	w8, #0x0
   2662c:	csel	x19, x11, x9, eq  // eq = none
   26630:	b	26690 <rl_variable_value@@Base+0x268>
   26634:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26638:	ldr	x8, [x8, #2448]
   2663c:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   26640:	add	x9, x9, #0xdad
   26644:	ldr	x8, [x8]
   26648:	cmp	x8, #0x0
   2664c:	csel	x19, x9, x8, eq  // eq = none
   26650:	b	26690 <rl_variable_value@@Base+0x268>
   26654:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26658:	ldr	x8, [x8, #3624]
   2665c:	b	26674 <rl_variable_value@@Base+0x24c>
   26660:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26664:	ldr	x8, [x8, #2848]
   26668:	b	26674 <rl_variable_value@@Base+0x24c>
   2666c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26670:	ldr	x8, [x8, #2088]
   26674:	ldr	w2, [x8]
   26678:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2667c:	add	x19, x19, #0x3a0
   26680:	adrp	x1, 3e000 <_rl_print_color_indicator@@Base+0xec>
   26684:	add	x1, x1, #0xc63
   26688:	mov	x0, x19
   2668c:	bl	16650 <sprintf@plt>
   26690:	mov	x0, x19
   26694:	ldp	x20, x19, [sp, #16]
   26698:	ldp	x29, x30, [sp], #32
   2669c:	ret
   266a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   266a4:	ldr	x8, [x8, #3416]
   266a8:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   266ac:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   266b0:	add	x9, x9, #0x80c
   266b4:	ldr	w8, [x8]
   266b8:	add	x10, x10, #0x809
   266bc:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   266c0:	add	x11, x11, #0x803
   266c4:	cmp	w8, #0x0
   266c8:	csel	x9, x10, x9, eq  // eq = none
   266cc:	cmp	w8, #0x1
   266d0:	csel	x19, x11, x9, eq  // eq = none
   266d4:	b	26690 <rl_variable_value@@Base+0x268>
   266d8:	bl	16770 <history_is_stifled@plt>
   266dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   266e0:	ldr	x8, [x8, #2256]
   266e4:	cmp	w0, #0x0
   266e8:	ldr	w8, [x8]
   266ec:	csel	w2, wzr, w8, eq  // eq = none
   266f0:	b	26678 <rl_variable_value@@Base+0x250>
   266f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   266f8:	ldr	x8, [x8, #4040]
   266fc:	ldr	x0, [x8]
   26700:	cbz	x0, 26784 <rl_variable_value@@Base+0x35c>
   26704:	mov	w1, wzr
   26708:	bl	168f0 <_rl_untranslate_macro_value@plt>
   2670c:	cbz	x0, 267ac <rl_variable_value@@Base+0x384>
   26710:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   26714:	mov	x20, x0
   26718:	add	x19, x19, #0x3a0
   2671c:	mov	w2, #0x1f                  	// #31
   26720:	mov	x0, x19
   26724:	mov	x1, x20
   26728:	bl	17730 <strncpy@plt>
   2672c:	mov	x0, x20
   26730:	bl	169f0 <xfree@plt>
   26734:	strb	wzr, [x19, #31]
   26738:	b	26690 <rl_variable_value@@Base+0x268>
   2673c:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   26740:	ldr	x9, [x8, #3160]
   26744:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   26748:	add	x8, x8, #0x80c
   2674c:	ldr	x10, [x9]
   26750:	cbz	x10, 267d0 <rl_variable_value@@Base+0x3a8>
   26754:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26758:	ldr	x11, [x11, #1992]
   2675c:	mov	x10, xzr
   26760:	add	x12, x9, #0x10
   26764:	ldr	x11, [x11]
   26768:	ldur	x13, [x12, #-8]
   2676c:	cmp	x13, x11
   26770:	b.eq	267bc <rl_variable_value@@Base+0x394>  // b.none
   26774:	ldr	x13, [x12], #16
   26778:	add	x10, x10, #0x1
   2677c:	cbnz	x13, 26768 <rl_variable_value@@Base+0x340>
   26780:	b	267d0 <rl_variable_value@@Base+0x3a8>
   26784:	mov	x19, xzr
   26788:	b	26690 <rl_variable_value@@Base+0x268>
   2678c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26790:	ldr	x8, [x8, #3760]
   26794:	b	26674 <rl_variable_value@@Base+0x24c>
   26798:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2679c:	ldr	x8, [x8, #3496]
   267a0:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   267a4:	add	x9, x9, #0xdaf
   267a8:	b	26644 <rl_variable_value@@Base+0x21c>
   267ac:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   267b0:	add	x19, x19, #0x3a0
   267b4:	strb	wzr, [x19]
   267b8:	b	26690 <rl_variable_value@@Base+0x268>
   267bc:	tbnz	w10, #31, 267d0 <rl_variable_value@@Base+0x3a8>
   267c0:	and	x10, x10, #0xffffffff
   267c4:	lsl	x10, x10, #4
   267c8:	ldr	x9, [x9, x10]
   267cc:	cbnz	x9, 267fc <rl_variable_value@@Base+0x3d4>
   267d0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   267d4:	ldr	x9, [x9, #3416]
   267d8:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   267dc:	add	x10, x10, #0x809
   267e0:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   267e4:	ldr	w9, [x9]
   267e8:	add	x11, x11, #0x803
   267ec:	cmp	w9, #0x0
   267f0:	csel	x10, x10, x8, eq  // eq = none
   267f4:	cmp	w9, #0x1
   267f8:	csel	x9, x11, x10, eq  // eq = none
   267fc:	cmp	x9, #0x0
   26800:	csel	x19, x8, x9, eq  // eq = none
   26804:	b	26690 <rl_variable_value@@Base+0x268>
   26808:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2680c:	ldr	x8, [x8, #2792]
   26810:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   26814:	add	x9, x9, #0xdb1
   26818:	b	26644 <rl_variable_value@@Base+0x21c>

000000000002681c <rl_get_keymap_by_name@@Base>:
   2681c:	stp	x29, x30, [sp, #-48]!
   26820:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   26824:	stp	x20, x19, [sp, #32]
   26828:	ldr	x20, [x8, #3160]
   2682c:	stp	x22, x21, [sp, #16]
   26830:	mov	x29, sp
   26834:	ldr	x1, [x20]
   26838:	cbz	x1, 26874 <rl_get_keymap_by_name@@Base+0x58>
   2683c:	mov	x19, x0
   26840:	mov	x21, xzr
   26844:	add	x22, x20, #0x10
   26848:	mov	x0, x19
   2684c:	bl	16d80 <strcasecmp@plt>
   26850:	cbz	w0, 26864 <rl_get_keymap_by_name@@Base+0x48>
   26854:	ldr	x1, [x22], #16
   26858:	add	x21, x21, #0x1
   2685c:	cbnz	x1, 26848 <rl_get_keymap_by_name@@Base+0x2c>
   26860:	b	26874 <rl_get_keymap_by_name@@Base+0x58>
   26864:	tbnz	w21, #31, 26874 <rl_get_keymap_by_name@@Base+0x58>
   26868:	add	x8, x20, w21, uxtw #4
   2686c:	ldr	x0, [x8, #8]
   26870:	b	26878 <rl_get_keymap_by_name@@Base+0x5c>
   26874:	mov	x0, xzr
   26878:	ldp	x20, x19, [sp, #32]
   2687c:	ldp	x22, x21, [sp, #16]
   26880:	ldp	x29, x30, [sp], #48
   26884:	ret

0000000000026888 <rl_get_keymap_name@@Base>:
   26888:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2688c:	ldr	x8, [x8, #3160]
   26890:	ldr	x9, [x8]
   26894:	cbz	x9, 268d0 <rl_get_keymap_name@@Base+0x48>
   26898:	mov	x9, xzr
   2689c:	add	x10, x8, #0x10
   268a0:	ldur	x11, [x10, #-8]
   268a4:	cmp	x11, x0
   268a8:	b.eq	268bc <rl_get_keymap_name@@Base+0x34>  // b.none
   268ac:	ldr	x11, [x10], #16
   268b0:	add	x9, x9, #0x1
   268b4:	cbnz	x11, 268a0 <rl_get_keymap_name@@Base+0x18>
   268b8:	b	268d0 <rl_get_keymap_name@@Base+0x48>
   268bc:	tbnz	w9, #31, 268d0 <rl_get_keymap_name@@Base+0x48>
   268c0:	and	x9, x9, #0xffffffff
   268c4:	lsl	x9, x9, #4
   268c8:	ldr	x0, [x8, x9]
   268cc:	ret
   268d0:	mov	x0, xzr
   268d4:	ret

00000000000268d8 <rl_set_keymap_name@@Base>:
   268d8:	stp	x29, x30, [sp, #-80]!
   268dc:	stp	x24, x23, [sp, #32]
   268e0:	adrp	x23, 57000 <rl_insert@@Base+0x20abc>
   268e4:	stp	x22, x21, [sp, #48]
   268e8:	ldr	x22, [x23, #3160]
   268ec:	stp	x26, x25, [sp, #16]
   268f0:	stp	x20, x19, [sp, #64]
   268f4:	mov	x21, x1
   268f8:	ldr	x1, [x22]
   268fc:	mov	x20, x0
   26900:	mov	x29, sp
   26904:	cbz	x1, 26934 <rl_set_keymap_name@@Base+0x5c>
   26908:	mov	w19, wzr
   2690c:	add	x8, x22, #0x10
   26910:	ldur	x9, [x8, #-8]
   26914:	cmp	x9, x21
   26918:	b.eq	26968 <rl_set_keymap_name@@Base+0x90>  // b.none
   2691c:	ldr	x9, [x8], #16
   26920:	add	w19, w19, #0x1
   26924:	cbnz	x9, 26910 <rl_set_keymap_name@@Base+0x38>
   26928:	mov	w24, wzr
   2692c:	mov	w19, #0xffffffff            	// #-1
   26930:	b	26978 <rl_set_keymap_name@@Base+0xa0>
   26934:	mov	x19, xzr
   26938:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2693c:	add	x8, x8, #0xc60
   26940:	cmp	x22, x8
   26944:	lsl	x8, x19, #4
   26948:	and	x24, x19, #0xffffffff
   2694c:	add	x8, x8, #0x20
   26950:	b.eq	269e4 <rl_set_keymap_name@@Base+0x10c>  // b.none
   26954:	and	x1, x8, #0xffffffff0
   26958:	mov	x0, x22
   2695c:	bl	16a50 <xrealloc@plt>
   26960:	str	x0, [x23, #3160]
   26964:	b	26a00 <rl_set_keymap_name@@Base+0x128>
   26968:	cmp	w19, #0x8
   2696c:	b.cc	269dc <rl_set_keymap_name@@Base+0x104>  // b.lo, b.ul, b.last
   26970:	mvn	w8, w19
   26974:	lsr	w24, w8, #31
   26978:	mov	w25, wzr
   2697c:	add	x26, x22, #0x10
   26980:	mov	x0, x20
   26984:	bl	16d80 <strcasecmp@plt>
   26988:	cbz	w0, 269d4 <rl_set_keymap_name@@Base+0xfc>
   2698c:	ldr	x1, [x26], #16
   26990:	add	w25, w25, #0x1
   26994:	cbnz	x1, 26980 <rl_set_keymap_name@@Base+0xa8>
   26998:	mov	w8, wzr
   2699c:	mov	w25, #0xffffffff            	// #-1
   269a0:	cbz	w24, 26a58 <rl_set_keymap_name@@Base+0x180>
   269a4:	sbfiz	x21, x19, #4, #32
   269a8:	ldr	x0, [x22, x21]
   269ac:	bl	169f0 <xfree@plt>
   269b0:	mov	x0, x20
   269b4:	bl	16440 <strlen@plt>
   269b8:	add	x0, x0, #0x1
   269bc:	bl	16bf0 <xmalloc@plt>
   269c0:	mov	x1, x20
   269c4:	bl	17480 <strcpy@plt>
   269c8:	ldr	x8, [x23, #3160]
   269cc:	str	x0, [x8, x21]
   269d0:	b	26a30 <rl_set_keymap_name@@Base+0x158>
   269d4:	cmp	w25, #0x8
   269d8:	b.cs	26a4c <rl_set_keymap_name@@Base+0x174>  // b.hs, b.nlast
   269dc:	mov	w19, #0xffffffff            	// #-1
   269e0:	b	26a30 <rl_set_keymap_name@@Base+0x158>
   269e4:	and	x0, x8, #0xffffffff0
   269e8:	bl	16bf0 <xmalloc@plt>
   269ec:	adrp	x1, 57000 <rl_insert@@Base+0x20abc>
   269f0:	lsl	x2, x24, #4
   269f4:	add	x1, x1, #0xc60
   269f8:	str	x0, [x23, #3160]
   269fc:	bl	16380 <memcpy@plt>
   26a00:	mov	x0, x20
   26a04:	bl	16440 <strlen@plt>
   26a08:	add	x0, x0, #0x1
   26a0c:	bl	16bf0 <xmalloc@plt>
   26a10:	mov	x1, x20
   26a14:	bl	17480 <strcpy@plt>
   26a18:	ldr	x8, [x23, #3160]
   26a1c:	add	w9, w19, #0x1
   26a20:	add	x10, x8, x24, lsl #4
   26a24:	add	x8, x8, w9, uxtw #4
   26a28:	stp	x0, x21, [x10]
   26a2c:	stp	xzr, xzr, [x8]
   26a30:	mov	w0, w19
   26a34:	ldp	x20, x19, [sp, #64]
   26a38:	ldp	x22, x21, [sp, #48]
   26a3c:	ldp	x24, x23, [sp, #32]
   26a40:	ldp	x26, x25, [sp, #16]
   26a44:	ldp	x29, x30, [sp], #80
   26a48:	ret
   26a4c:	mvn	w8, w25
   26a50:	lsr	w8, w8, #31
   26a54:	cbnz	w24, 269a4 <rl_set_keymap_name@@Base+0xcc>
   26a58:	tbz	w8, #0, 26a6c <rl_set_keymap_name@@Base+0x194>
   26a5c:	add	x8, x22, w25, sxtw #4
   26a60:	str	x21, [x8, #8]
   26a64:	mov	w19, w25
   26a68:	b	26a30 <rl_set_keymap_name@@Base+0x158>
   26a6c:	mov	x19, xzr
   26a70:	add	x8, x22, #0x10
   26a74:	ldr	x9, [x8], #16
   26a78:	add	x19, x19, #0x1
   26a7c:	cbnz	x9, 26a74 <rl_set_keymap_name@@Base+0x19c>
   26a80:	b	26938 <rl_set_keymap_name@@Base+0x60>

0000000000026a84 <rl_set_keymap@@Base>:
   26a84:	cbz	x0, 26a94 <rl_set_keymap@@Base+0x10>
   26a88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26a8c:	ldr	x8, [x8, #1992]
   26a90:	str	x0, [x8]
   26a94:	ret

0000000000026a98 <rl_get_keymap@@Base>:
   26a98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26a9c:	ldr	x8, [x8, #1992]
   26aa0:	ldr	x0, [x8]
   26aa4:	ret

0000000000026aa8 <rl_get_keymap_name_from_edit_mode@@Base>:
   26aa8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26aac:	ldr	x8, [x8, #3416]
   26ab0:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   26ab4:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   26ab8:	add	x9, x9, #0x80c
   26abc:	ldr	w8, [x8]
   26ac0:	add	x10, x10, #0x809
   26ac4:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   26ac8:	add	x11, x11, #0x803
   26acc:	cmp	w8, #0x0
   26ad0:	csel	x9, x10, x9, eq  // eq = none
   26ad4:	cmp	w8, #0x1
   26ad8:	csel	x0, x11, x9, eq  // eq = none
   26adc:	ret

0000000000026ae0 <rl_list_funmap_names@@Base>:
   26ae0:	stp	x29, x30, [sp, #-48]!
   26ae4:	stp	x22, x21, [sp, #16]
   26ae8:	stp	x20, x19, [sp, #32]
   26aec:	mov	x29, sp
   26af0:	bl	166f0 <rl_funmap_names@plt>
   26af4:	cbz	x0, 26b40 <rl_list_funmap_names@@Base+0x60>
   26af8:	ldr	x2, [x0]
   26afc:	mov	x19, x0
   26b00:	cbz	x2, 26b2c <rl_list_funmap_names@@Base+0x4c>
   26b04:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26b08:	ldr	x22, [x22, #1928]
   26b0c:	adrp	x20, 3f000 <filename_completion_function@@Base+0x580>
   26b10:	add	x21, x19, #0x8
   26b14:	add	x20, x20, #0x837
   26b18:	ldr	x0, [x22]
   26b1c:	mov	x1, x20
   26b20:	bl	17950 <fprintf@plt>
   26b24:	ldr	x2, [x21], #8
   26b28:	cbnz	x2, 26b18 <rl_list_funmap_names@@Base+0x38>
   26b2c:	mov	x0, x19
   26b30:	ldp	x20, x19, [sp, #32]
   26b34:	ldp	x22, x21, [sp, #16]
   26b38:	ldp	x29, x30, [sp], #48
   26b3c:	b	169f0 <xfree@plt>
   26b40:	ldp	x20, x19, [sp, #32]
   26b44:	ldp	x22, x21, [sp, #16]
   26b48:	ldp	x29, x30, [sp], #48
   26b4c:	ret

0000000000026b50 <rl_invoking_keyseqs_in_map@@Base>:
   26b50:	sub	sp, sp, #0x90
   26b54:	stp	x29, x30, [sp, #48]
   26b58:	stp	x28, x27, [sp, #64]
   26b5c:	stp	x26, x25, [sp, #80]
   26b60:	stp	x24, x23, [sp, #96]
   26b64:	stp	x22, x21, [sp, #112]
   26b68:	stp	x20, x19, [sp, #128]
   26b6c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26b70:	ldr	x23, [x23, #3456]
   26b74:	add	x29, sp, #0x30
   26b78:	mov	x19, x1
   26b7c:	mov	x20, x0
   26b80:	mov	x21, xzr
   26b84:	mov	x22, xzr
   26b88:	mov	w25, wzr
   26b8c:	mov	w26, wzr
   26b90:	str	x0, [sp, #8]
   26b94:	stur	x1, [x29, #-16]
   26b98:	b	26bb8 <rl_invoking_keyseqs_in_map@@Base+0x68>
   26b9c:	add	x8, x19, x21, lsl #4
   26ba0:	ldr	x8, [x8, #8]
   26ba4:	cmp	x8, x20
   26ba8:	b.eq	26db0 <rl_invoking_keyseqs_in_map@@Base+0x260>  // b.none
   26bac:	add	x21, x21, #0x1
   26bb0:	cmp	x21, #0x101
   26bb4:	b.eq	26e00 <rl_invoking_keyseqs_in_map@@Base+0x2b0>  // b.none
   26bb8:	lsl	x8, x21, #4
   26bbc:	ldrb	w8, [x19, x8]
   26bc0:	cmp	w8, #0x2
   26bc4:	b.eq	26b9c <rl_invoking_keyseqs_in_map@@Base+0x4c>  // b.none
   26bc8:	cmp	w8, #0x1
   26bcc:	b.eq	26bd8 <rl_invoking_keyseqs_in_map@@Base+0x88>  // b.none
   26bd0:	cbz	w8, 26b9c <rl_invoking_keyseqs_in_map@@Base+0x4c>
   26bd4:	b	26bac <rl_invoking_keyseqs_in_map@@Base+0x5c>
   26bd8:	add	x8, x19, x21, lsl #4
   26bdc:	ldr	x1, [x8, #8]
   26be0:	cbz	x1, 26bac <rl_invoking_keyseqs_in_map@@Base+0x5c>
   26be4:	mov	x0, x20
   26be8:	bl	17890 <rl_invoking_keyseqs_in_map@plt>
   26bec:	cbz	x0, 26bac <rl_invoking_keyseqs_in_map@@Base+0x5c>
   26bf0:	mov	x24, x0
   26bf4:	ldr	x0, [x0]
   26bf8:	cbz	x0, 26df4 <rl_invoking_keyseqs_in_map@@Base+0x2a4>
   26bfc:	orr	w9, w21, #0x40
   26c00:	and	w28, w21, #0x7fffffe0
   26c04:	stur	w9, [x29, #-20]
   26c08:	and	w9, w9, #0xff
   26c0c:	sxtw	x20, w25
   26c10:	stur	x9, [x29, #-8]
   26c14:	str	x24, [sp, #16]
   26c18:	b	26c34 <rl_invoking_keyseqs_in_map@@Base+0xe4>
   26c1c:	add	x8, x22, x20, lsl #3
   26c20:	stp	x25, xzr, [x8]
   26c24:	ldr	x0, [x24, #8]!
   26c28:	add	x25, x20, #0x1
   26c2c:	mov	x20, x25
   26c30:	cbz	x0, 26df0 <rl_invoking_keyseqs_in_map@@Base+0x2a0>
   26c34:	bl	16440 <strlen@plt>
   26c38:	add	x0, x0, #0x6
   26c3c:	bl	16bf0 <xmalloc@plt>
   26c40:	cmp	x21, #0x1b
   26c44:	mov	x25, x0
   26c48:	b.ne	26c70 <rl_invoking_keyseqs_in_map@@Base+0x120>  // b.any
   26c4c:	ldr	w8, [x23]
   26c50:	cbz	w8, 26ca0 <rl_invoking_keyseqs_in_map@@Base+0x150>
   26c54:	ldrb	w8, [x19, #432]
   26c58:	cmp	w8, #0x1
   26c5c:	b.ne	26ca0 <rl_invoking_keyseqs_in_map@@Base+0x150>  // b.any
   26c60:	mov	w8, #0x4d5c                	// #19804
   26c64:	movk	w8, #0x2d, lsl #16
   26c68:	str	w8, [x25]
   26c6c:	b	26d78 <rl_invoking_keyseqs_in_map@@Base+0x228>
   26c70:	cbz	w28, 26cb0 <rl_invoking_keyseqs_in_map@@Base+0x160>
   26c74:	cmp	w21, #0x22
   26c78:	b.eq	26d10 <rl_invoking_keyseqs_in_map@@Base+0x1c0>  // b.none
   26c7c:	cmp	w21, #0x5c
   26c80:	b.eq	26d10 <rl_invoking_keyseqs_in_map@@Base+0x1c0>  // b.none
   26c84:	cmp	w21, #0x7f
   26c88:	b.ne	26d70 <rl_invoking_keyseqs_in_map@@Base+0x220>  // b.any
   26c8c:	mov	w8, #0x435c                	// #17244
   26c90:	movk	w8, #0x3f2d, lsl #16
   26c94:	strb	wzr, [x25, #4]
   26c98:	str	w8, [x25]
   26c9c:	b	26d78 <rl_invoking_keyseqs_in_map@@Base+0x228>
   26ca0:	mov	w8, #0x655c                	// #25948
   26ca4:	strb	wzr, [x25, #2]
   26ca8:	strh	w8, [x25]
   26cac:	b	26d78 <rl_invoking_keyseqs_in_map@@Base+0x228>
   26cb0:	mov	w19, w28
   26cb4:	mov	x28, x23
   26cb8:	bl	17100 <__ctype_b_loc@plt>
   26cbc:	ldr	x23, [x0]
   26cc0:	ldur	x8, [x29, #-8]
   26cc4:	ldrh	w27, [x23, x8, lsl #1]
   26cc8:	tbz	w27, #9, 26ce0 <rl_invoking_keyseqs_in_map@@Base+0x190>
   26ccc:	bl	16dc0 <__ctype_toupper_loc@plt>
   26cd0:	ldur	x9, [x29, #-8]
   26cd4:	ldr	x8, [x0]
   26cd8:	lsl	x9, x9, #2
   26cdc:	ldrb	w8, [x8, x9]
   26ce0:	ldrh	w8, [x23, x8, lsl #1]
   26ce4:	tbnz	w8, #8, 26d24 <rl_invoking_keyseqs_in_map@@Base+0x1d4>
   26ce8:	ldur	w2, [x29, #-20]
   26cec:	mov	x23, x28
   26cf0:	mov	w28, w19
   26cf4:	ldur	x19, [x29, #-16]
   26cf8:	tbz	w27, #9, 26d5c <rl_invoking_keyseqs_in_map@@Base+0x20c>
   26cfc:	bl	16dc0 <__ctype_toupper_loc@plt>
   26d00:	ldr	x8, [x0]
   26d04:	ldur	x9, [x29, #-8]
   26d08:	add	x8, x8, x9, lsl #2
   26d0c:	b	26d58 <rl_invoking_keyseqs_in_map@@Base+0x208>
   26d10:	mov	w8, #0x5c                  	// #92
   26d14:	strb	w8, [x25]
   26d18:	strb	w21, [x25, #1]
   26d1c:	strb	wzr, [x25, #2]
   26d20:	b	26d78 <rl_invoking_keyseqs_in_map@@Base+0x228>
   26d24:	bl	16810 <__ctype_tolower_loc@plt>
   26d28:	ldr	x23, [x0]
   26d2c:	ldur	x8, [x29, #-8]
   26d30:	tbz	w27, #9, 26d48 <rl_invoking_keyseqs_in_map@@Base+0x1f8>
   26d34:	bl	16dc0 <__ctype_toupper_loc@plt>
   26d38:	ldur	x9, [x29, #-8]
   26d3c:	ldr	x8, [x0]
   26d40:	lsl	x9, x9, #2
   26d44:	ldrb	w8, [x8, x9]
   26d48:	add	x8, x23, x8, lsl #2
   26d4c:	mov	x23, x28
   26d50:	mov	w28, w19
   26d54:	ldur	x19, [x29, #-16]
   26d58:	ldr	w2, [x8]
   26d5c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   26d60:	mov	x0, x25
   26d64:	add	x1, x1, #0x814
   26d68:	bl	16650 <sprintf@plt>
   26d6c:	b	26d78 <rl_invoking_keyseqs_in_map@@Base+0x228>
   26d70:	strb	w21, [x25]
   26d74:	strb	wzr, [x25, #1]
   26d78:	ldr	x1, [x24]
   26d7c:	mov	x0, x25
   26d80:	bl	16b50 <strcat@plt>
   26d84:	ldr	x0, [x24]
   26d88:	bl	169f0 <xfree@plt>
   26d8c:	add	x8, x20, #0x2
   26d90:	cmp	x8, w26, sxtw
   26d94:	b.le	26c1c <rl_invoking_keyseqs_in_map@@Base+0xcc>
   26d98:	add	w26, w26, #0xa
   26d9c:	sbfiz	x1, x26, #3, #32
   26da0:	mov	x0, x22
   26da4:	bl	16a50 <xrealloc@plt>
   26da8:	mov	x22, x0
   26dac:	b	26c1c <rl_invoking_keyseqs_in_map@@Base+0xcc>
   26db0:	mov	w0, w21
   26db4:	bl	26e24 <rl_invoking_keyseqs_in_map@@Base+0x2d4>
   26db8:	add	w8, w25, #0x2
   26dbc:	cmp	w8, w26
   26dc0:	mov	x24, x0
   26dc4:	b.le	26ddc <rl_invoking_keyseqs_in_map@@Base+0x28c>
   26dc8:	add	w26, w26, #0xa
   26dcc:	sbfiz	x1, x26, #3, #32
   26dd0:	mov	x0, x22
   26dd4:	bl	16a50 <xrealloc@plt>
   26dd8:	mov	x22, x0
   26ddc:	sxtw	x8, w25
   26de0:	str	x24, [x22, w25, sxtw #3]
   26de4:	add	x25, x8, #0x1
   26de8:	str	xzr, [x22, x25, lsl #3]
   26dec:	b	26bac <rl_invoking_keyseqs_in_map@@Base+0x5c>
   26df0:	ldp	x20, x24, [sp, #8]
   26df4:	mov	x0, x24
   26df8:	bl	169f0 <xfree@plt>
   26dfc:	b	26bac <rl_invoking_keyseqs_in_map@@Base+0x5c>
   26e00:	mov	x0, x22
   26e04:	ldp	x20, x19, [sp, #128]
   26e08:	ldp	x22, x21, [sp, #112]
   26e0c:	ldp	x24, x23, [sp, #96]
   26e10:	ldp	x26, x25, [sp, #80]
   26e14:	ldp	x28, x27, [sp, #64]
   26e18:	ldp	x29, x30, [sp, #48]
   26e1c:	add	sp, sp, #0x90
   26e20:	ret
   26e24:	stp	x29, x30, [sp, #-64]!
   26e28:	stp	x20, x19, [sp, #48]
   26e2c:	mov	w20, w0
   26e30:	mov	w0, #0x8                   	// #8
   26e34:	str	x23, [sp, #16]
   26e38:	stp	x22, x21, [sp, #32]
   26e3c:	mov	x29, sp
   26e40:	bl	16bf0 <xmalloc@plt>
   26e44:	cmp	w20, #0x7f
   26e48:	mov	x19, x0
   26e4c:	b.eq	26e68 <rl_invoking_keyseqs_in_map@@Base+0x318>  // b.none
   26e50:	cmp	w20, #0x1b
   26e54:	b.ne	26e7c <rl_invoking_keyseqs_in_map@@Base+0x32c>  // b.any
   26e58:	mov	w8, #0x655c                	// #25948
   26e5c:	strh	w8, [x19]
   26e60:	mov	w9, #0x2                   	// #2
   26e64:	b	26f74 <rl_invoking_keyseqs_in_map@@Base+0x424>
   26e68:	mov	w8, #0x435c                	// #17244
   26e6c:	movk	w8, #0x3f2d, lsl #16
   26e70:	str	w8, [x19]
   26e74:	mov	w9, #0x4                   	// #4
   26e78:	b	26f74 <rl_invoking_keyseqs_in_map@@Base+0x424>
   26e7c:	cmp	w20, #0x1f
   26e80:	mov	w8, wzr
   26e84:	b.gt	26f08 <rl_invoking_keyseqs_in_map@@Base+0x3b8>
   26e88:	tbnz	w20, #7, 26f08 <rl_invoking_keyseqs_in_map@@Base+0x3b8>
   26e8c:	mov	w8, #0x435c                	// #17244
   26e90:	mov	w9, #0x2d                  	// #45
   26e94:	strh	w8, [x19]
   26e98:	strb	w9, [x19, #2]
   26e9c:	bl	17100 <__ctype_b_loc@plt>
   26ea0:	ldr	x23, [x0]
   26ea4:	orr	w20, w20, #0x40
   26ea8:	and	w21, w20, #0xff
   26eac:	mov	x8, x21
   26eb0:	ldrh	w22, [x23, w21, uxtw #1]
   26eb4:	tbz	w22, #9, 26ec8 <rl_invoking_keyseqs_in_map@@Base+0x378>
   26eb8:	bl	16dc0 <__ctype_toupper_loc@plt>
   26ebc:	ldr	x8, [x0]
   26ec0:	lsl	x9, x21, #2
   26ec4:	ldrb	w8, [x8, x9]
   26ec8:	ldrh	w8, [x23, x8, lsl #1]
   26ecc:	tbnz	w8, #8, 26ee4 <rl_invoking_keyseqs_in_map@@Base+0x394>
   26ed0:	tbz	w22, #9, 26f04 <rl_invoking_keyseqs_in_map@@Base+0x3b4>
   26ed4:	bl	16dc0 <__ctype_toupper_loc@plt>
   26ed8:	ldr	x8, [x0]
   26edc:	ldr	w20, [x8, x21, lsl #2]
   26ee0:	b	26f04 <rl_invoking_keyseqs_in_map@@Base+0x3b4>
   26ee4:	bl	16810 <__ctype_tolower_loc@plt>
   26ee8:	ldr	x20, [x0]
   26eec:	tbz	w22, #9, 26f00 <rl_invoking_keyseqs_in_map@@Base+0x3b0>
   26ef0:	bl	16dc0 <__ctype_toupper_loc@plt>
   26ef4:	ldr	x8, [x0]
   26ef8:	lsl	x9, x21, #2
   26efc:	ldrb	w21, [x8, x9]
   26f00:	ldr	w20, [x20, x21, lsl #2]
   26f04:	mov	w8, #0x3                   	// #3
   26f08:	and	w9, w20, #0xffffffe0
   26f0c:	cmp	w9, #0x80
   26f10:	b.ne	26f4c <rl_invoking_keyseqs_in_map@@Base+0x3fc>  // b.any
   26f14:	sub	w11, w20, #0x80
   26f18:	add	x9, x19, x8
   26f1c:	mov	w10, #0x325c                	// #12892
   26f20:	sub	w12, w20, #0x79
   26f24:	cmp	w11, #0x0
   26f28:	strh	w10, [x9]
   26f2c:	csel	w10, w12, w11, lt  // lt = tstop
   26f30:	lsr	w12, w10, #3
   26f34:	and	w10, w10, #0xfffffff8
   26f38:	sub	w10, w11, w10
   26f3c:	add	w8, w8, #0x3
   26f40:	add	w12, w12, #0x30
   26f44:	add	w20, w10, #0x30
   26f48:	strb	w12, [x9, #2]
   26f4c:	cmp	w20, #0x5c
   26f50:	b.eq	26f5c <rl_invoking_keyseqs_in_map@@Base+0x40c>  // b.none
   26f54:	cmp	w20, #0x22
   26f58:	b.ne	26f6c <rl_invoking_keyseqs_in_map@@Base+0x41c>  // b.any
   26f5c:	add	w9, w8, #0x1
   26f60:	mov	w10, #0x5c                  	// #92
   26f64:	strb	w10, [x19, w8, uxtw]
   26f68:	mov	w8, w9
   26f6c:	add	w9, w8, #0x1
   26f70:	strb	w20, [x19, w8, uxtw]
   26f74:	strb	wzr, [x19, x9]
   26f78:	mov	x0, x19
   26f7c:	ldp	x20, x19, [sp, #48]
   26f80:	ldp	x22, x21, [sp, #32]
   26f84:	ldr	x23, [sp, #16]
   26f88:	ldp	x29, x30, [sp], #64
   26f8c:	ret

0000000000026f90 <rl_invoking_keyseqs@@Base>:
   26f90:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26f94:	ldr	x8, [x8, #1992]
   26f98:	ldr	x1, [x8]
   26f9c:	b	17890 <rl_invoking_keyseqs_in_map@plt>

0000000000026fa0 <rl_function_dumper@@Base>:
   26fa0:	sub	sp, sp, #0x70
   26fa4:	stp	x29, x30, [sp, #16]
   26fa8:	stp	x28, x27, [sp, #32]
   26fac:	stp	x26, x25, [sp, #48]
   26fb0:	stp	x24, x23, [sp, #64]
   26fb4:	stp	x22, x21, [sp, #80]
   26fb8:	stp	x20, x19, [sp, #96]
   26fbc:	add	x29, sp, #0x10
   26fc0:	mov	w20, w0
   26fc4:	bl	166f0 <rl_funmap_names@plt>
   26fc8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   26fcc:	ldr	x23, [x23, #1928]
   26fd0:	mov	x19, x0
   26fd4:	mov	w0, #0xa                   	// #10
   26fd8:	ldr	x1, [x23]
   26fdc:	bl	166d0 <fputc@plt>
   26fe0:	ldr	x27, [x19]
   26fe4:	str	x19, [sp, #8]
   26fe8:	cbz	x27, 2717c <rl_function_dumper@@Base+0x1dc>
   26fec:	adrp	x21, 3f000 <filename_completion_function@@Base+0x580>
   26ff0:	adrp	x26, 3f000 <filename_completion_function@@Base+0x580>
   26ff4:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   26ff8:	adrp	x25, 3f000 <filename_completion_function@@Base+0x580>
   26ffc:	mov	x24, xzr
   27000:	add	x21, x21, #0x873
   27004:	add	x26, x26, #0x878
   27008:	add	x22, x22, #0x86c
   2700c:	add	x25, x25, #0x831
   27010:	str	w20, [sp, #4]
   27014:	b	27030 <rl_function_dumper@@Base+0x90>
   27018:	mov	x0, x28
   2701c:	bl	169f0 <xfree@plt>
   27020:	ldr	x8, [sp, #8]
   27024:	add	x24, x24, #0x1
   27028:	ldr	x27, [x8, x24, lsl #3]
   2702c:	cbz	x27, 2717c <rl_function_dumper@@Base+0x1dc>
   27030:	bl	16970 <rl_initialize_funmap@plt>
   27034:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27038:	ldr	x8, [x8, #3256]
   2703c:	ldr	x8, [x8]
   27040:	ldr	x19, [x8]
   27044:	cbz	x19, 27064 <rl_function_dumper@@Base+0xc4>
   27048:	add	x28, x8, #0x8
   2704c:	ldr	x0, [x19]
   27050:	mov	x1, x27
   27054:	bl	16d80 <strcasecmp@plt>
   27058:	cbz	w0, 2706c <rl_function_dumper@@Base+0xcc>
   2705c:	ldr	x19, [x28], #8
   27060:	cbnz	x19, 2704c <rl_function_dumper@@Base+0xac>
   27064:	mov	x0, xzr
   27068:	b	27070 <rl_function_dumper@@Base+0xd0>
   2706c:	ldr	x0, [x19, #8]
   27070:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27074:	ldr	x8, [x8, #1992]
   27078:	ldr	x1, [x8]
   2707c:	bl	17890 <rl_invoking_keyseqs_in_map@plt>
   27080:	mov	x28, x0
   27084:	cbz	w20, 270bc <rl_function_dumper@@Base+0x11c>
   27088:	cbz	x28, 27158 <rl_function_dumper@@Base+0x1b8>
   2708c:	ldr	x2, [x28]
   27090:	cbz	x2, 27018 <rl_function_dumper@@Base+0x78>
   27094:	add	x19, x28, #0x8
   27098:	ldr	x0, [x23]
   2709c:	mov	x1, x25
   270a0:	mov	x3, x27
   270a4:	bl	17950 <fprintf@plt>
   270a8:	ldur	x0, [x19, #-8]
   270ac:	bl	169f0 <xfree@plt>
   270b0:	ldr	x2, [x19], #8
   270b4:	cbnz	x2, 27098 <rl_function_dumper@@Base+0xf8>
   270b8:	b	27018 <rl_function_dumper@@Base+0x78>
   270bc:	ldr	x0, [x23]
   270c0:	cbz	x28, 27168 <rl_function_dumper@@Base+0x1c8>
   270c4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   270c8:	add	x1, x1, #0x858
   270cc:	mov	x2, x27
   270d0:	bl	17950 <fprintf@plt>
   270d4:	ldr	x2, [x28]
   270d8:	cbz	x2, 27018 <rl_function_dumper@@Base+0x78>
   270dc:	mov	x19, xzr
   270e0:	add	x20, x28, x19, lsl #3
   270e4:	ldr	x8, [x20, #8]
   270e8:	ldr	x0, [x23]
   270ec:	mov	x1, x22
   270f0:	mov	x27, x19
   270f4:	cmp	x8, #0x0
   270f8:	csel	x3, x26, x21, eq  // eq = none
   270fc:	add	x19, x19, #0x1
   27100:	bl	17950 <fprintf@plt>
   27104:	ldr	x2, [x20, #8]
   27108:	cmp	x27, #0x3
   2710c:	b.hi	27114 <rl_function_dumper@@Base+0x174>  // b.pmore
   27110:	cbnz	x2, 270e0 <rl_function_dumper@@Base+0x140>
   27114:	cmp	w19, #0x5
   27118:	b.ne	27138 <rl_function_dumper@@Base+0x198>  // b.any
   2711c:	cbz	x2, 27138 <rl_function_dumper@@Base+0x198>
   27120:	ldr	x3, [x23]
   27124:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27128:	mov	w1, #0x4                   	// #4
   2712c:	mov	w2, #0x1                   	// #1
   27130:	add	x0, x0, #0x876
   27134:	bl	173e0 <fwrite@plt>
   27138:	ldr	x0, [x28]
   2713c:	ldr	w20, [sp, #4]
   27140:	cbz	x0, 27018 <rl_function_dumper@@Base+0x78>
   27144:	add	x19, x28, #0x8
   27148:	bl	169f0 <xfree@plt>
   2714c:	ldr	x0, [x19], #8
   27150:	cbnz	x0, 27148 <rl_function_dumper@@Base+0x1a8>
   27154:	b	27018 <rl_function_dumper@@Base+0x78>
   27158:	ldr	x0, [x23]
   2715c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27160:	add	x1, x1, #0x81f
   27164:	b	27170 <rl_function_dumper@@Base+0x1d0>
   27168:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2716c:	add	x1, x1, #0x83b
   27170:	mov	x2, x27
   27174:	bl	17950 <fprintf@plt>
   27178:	b	27020 <rl_function_dumper@@Base+0x80>
   2717c:	ldr	x0, [sp, #8]
   27180:	ldp	x20, x19, [sp, #96]
   27184:	ldp	x22, x21, [sp, #80]
   27188:	ldp	x24, x23, [sp, #64]
   2718c:	ldp	x26, x25, [sp, #48]
   27190:	ldp	x28, x27, [sp, #32]
   27194:	ldp	x29, x30, [sp, #16]
   27198:	add	sp, sp, #0x70
   2719c:	b	169f0 <xfree@plt>

00000000000271a0 <rl_dump_functions@@Base>:
   271a0:	stp	x29, x30, [sp, #-16]!
   271a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   271a8:	ldr	x8, [x8, #3784]
   271ac:	mov	x29, sp
   271b0:	ldr	w8, [x8]
   271b4:	cbz	w8, 271d8 <rl_dump_functions@@Base+0x38>
   271b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   271bc:	ldr	x8, [x8, #1928]
   271c0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   271c4:	add	x0, x0, #0x87b
   271c8:	mov	w1, #0x2                   	// #2
   271cc:	ldr	x3, [x8]
   271d0:	mov	w2, #0x1                   	// #1
   271d4:	bl	173e0 <fwrite@plt>
   271d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   271dc:	ldr	x8, [x8, #3792]
   271e0:	ldr	w0, [x8]
   271e4:	bl	17310 <rl_function_dumper@plt>
   271e8:	bl	172a0 <rl_on_new_line@plt>
   271ec:	mov	w0, wzr
   271f0:	ldp	x29, x30, [sp], #16
   271f4:	ret

00000000000271f8 <rl_macro_dumper@@Base>:
   271f8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   271fc:	ldr	x8, [x8, #1992]
   27200:	mov	x2, xzr
   27204:	ldr	x1, [x8]
   27208:	b	2720c <rl_macro_dumper@@Base+0x14>
   2720c:	stp	x29, x30, [sp, #-96]!
   27210:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   27214:	add	x10, x10, #0xec9
   27218:	cmp	x2, #0x0
   2721c:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   27220:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   27224:	stp	x22, x21, [sp, #64]
   27228:	add	x8, x8, #0xd8e
   2722c:	add	x9, x9, #0xd9c
   27230:	csel	x22, x10, x2, eq  // eq = none
   27234:	cmp	w0, #0x0
   27238:	stp	x28, x27, [sp, #16]
   2723c:	stp	x24, x23, [sp, #48]
   27240:	stp	x20, x19, [sp, #80]
   27244:	mov	x19, x2
   27248:	mov	w20, w0
   2724c:	mov	x21, xzr
   27250:	add	x27, x1, #0x8
   27254:	mov	x28, x10
   27258:	csel	x23, x9, x8, eq  // eq = none
   2725c:	stp	x26, x25, [sp, #32]
   27260:	mov	x29, sp
   27264:	b	272c0 <rl_macro_dumper@@Base+0xc8>
   27268:	mov	x9, #0x100000000           	// #4294967296
   2726c:	mov	x10, #0x200000000           	// #8589934592
   27270:	asr	x8, x25, #32
   27274:	add	x9, x25, x9
   27278:	add	x10, x25, x10
   2727c:	mov	w11, #0x5c                  	// #92
   27280:	strb	w11, [x24, x8]
   27284:	asr	x8, x9, #32
   27288:	asr	x9, x10, #32
   2728c:	mov	w10, #0x65                  	// #101
   27290:	strb	w10, [x24, x8]
   27294:	strb	wzr, [x24, x9]
   27298:	ldr	x1, [x27]
   2729c:	mov	w0, w20
   272a0:	mov	x2, x24
   272a4:	bl	2720c <rl_macro_dumper@@Base+0x14>
   272a8:	mov	x0, x24
   272ac:	bl	169f0 <xfree@plt>
   272b0:	add	x21, x21, #0x1
   272b4:	cmp	x21, #0x101
   272b8:	add	x27, x27, #0x10
   272bc:	b.eq	273c8 <rl_macro_dumper@@Base+0x1d0>  // b.none
   272c0:	ldurb	w8, [x27, #-8]
   272c4:	cmp	w8, #0x1
   272c8:	b.eq	27328 <rl_macro_dumper@@Base+0x130>  // b.none
   272cc:	cmp	w8, #0x2
   272d0:	b.ne	272b0 <rl_macro_dumper@@Base+0xb8>  // b.any
   272d4:	mov	w0, w21
   272d8:	bl	26e24 <rl_invoking_keyseqs_in_map@@Base+0x2d4>
   272dc:	ldr	x8, [x27]
   272e0:	mov	x25, x0
   272e4:	mov	w1, wzr
   272e8:	mov	x0, x8
   272ec:	bl	168f0 <_rl_untranslate_macro_value@plt>
   272f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   272f4:	ldr	x8, [x8, #1928]
   272f8:	cmp	x0, #0x0
   272fc:	mov	x24, x0
   27300:	csel	x4, x28, x0, eq  // eq = none
   27304:	ldr	x8, [x8]
   27308:	mov	x1, x23
   2730c:	mov	x2, x22
   27310:	mov	x3, x25
   27314:	mov	x0, x8
   27318:	bl	17950 <fprintf@plt>
   2731c:	mov	x0, x25
   27320:	bl	169f0 <xfree@plt>
   27324:	b	272a8 <rl_macro_dumper@@Base+0xb0>
   27328:	cbz	x19, 2736c <rl_macro_dumper@@Base+0x174>
   2732c:	mov	x0, x19
   27330:	bl	16440 <strlen@plt>
   27334:	mov	x25, x0
   27338:	cmp	x21, #0x1b
   2733c:	b.ne	27378 <rl_macro_dumper@@Base+0x180>  // b.any
   27340:	lsl	x25, x25, #32
   27344:	mov	x8, #0x300000000           	// #12884901888
   27348:	add	x8, x25, x8
   2734c:	asr	x0, x8, #32
   27350:	bl	16bf0 <xmalloc@plt>
   27354:	mov	x24, x0
   27358:	cbz	x19, 27268 <rl_macro_dumper@@Base+0x70>
   2735c:	mov	x0, x24
   27360:	mov	x1, x19
   27364:	bl	17480 <strcpy@plt>
   27368:	b	27268 <rl_macro_dumper@@Base+0x70>
   2736c:	mov	x25, xzr
   27370:	cmp	x21, #0x1b
   27374:	b.eq	27340 <rl_macro_dumper@@Base+0x148>  // b.none
   27378:	mov	w0, w21
   2737c:	bl	26e24 <rl_invoking_keyseqs_in_map@@Base+0x2d4>
   27380:	mov	x24, x0
   27384:	cbz	x19, 27298 <rl_macro_dumper@@Base+0xa0>
   27388:	mov	x0, x24
   2738c:	bl	16440 <strlen@plt>
   27390:	sxtw	x26, w25
   27394:	add	x8, x26, x0
   27398:	add	x0, x8, #0x1
   2739c:	bl	16bf0 <xmalloc@plt>
   273a0:	mov	x1, x19
   273a4:	mov	x25, x0
   273a8:	bl	17480 <strcpy@plt>
   273ac:	add	x0, x0, x26
   273b0:	mov	x1, x24
   273b4:	bl	17480 <strcpy@plt>
   273b8:	mov	x0, x24
   273bc:	bl	169f0 <xfree@plt>
   273c0:	mov	x24, x25
   273c4:	b	27298 <rl_macro_dumper@@Base+0xa0>
   273c8:	ldp	x20, x19, [sp, #80]
   273cc:	ldp	x22, x21, [sp, #64]
   273d0:	ldp	x24, x23, [sp, #48]
   273d4:	ldp	x26, x25, [sp, #32]
   273d8:	ldp	x28, x27, [sp, #16]
   273dc:	ldp	x29, x30, [sp], #96
   273e0:	ret

00000000000273e4 <rl_dump_macros@@Base>:
   273e4:	stp	x29, x30, [sp, #-16]!
   273e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   273ec:	ldr	x8, [x8, #3784]
   273f0:	mov	x29, sp
   273f4:	ldr	w8, [x8]
   273f8:	cbz	w8, 2741c <rl_dump_macros@@Base+0x38>
   273fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27400:	ldr	x8, [x8, #1928]
   27404:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27408:	add	x0, x0, #0x87b
   2740c:	mov	w1, #0x2                   	// #2
   27410:	ldr	x3, [x8]
   27414:	mov	w2, #0x1                   	// #1
   27418:	bl	173e0 <fwrite@plt>
   2741c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27420:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27424:	ldr	x8, [x8, #3792]
   27428:	ldr	x9, [x9, #1992]
   2742c:	mov	x2, xzr
   27430:	ldr	w0, [x8]
   27434:	ldr	x1, [x9]
   27438:	bl	2720c <rl_macro_dumper@@Base+0x14>
   2743c:	bl	172a0 <rl_on_new_line@plt>
   27440:	mov	w0, wzr
   27444:	ldp	x29, x30, [sp], #16
   27448:	ret

000000000002744c <rl_variable_dumper@@Base>:
   2744c:	stp	x29, x30, [sp, #-96]!
   27450:	stp	x28, x27, [sp, #16]
   27454:	stp	x26, x25, [sp, #32]
   27458:	stp	x24, x23, [sp, #48]
   2745c:	stp	x22, x21, [sp, #64]
   27460:	stp	x20, x19, [sp, #80]
   27464:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27468:	ldr	x21, [x21, #1928]
   2746c:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   27470:	adrp	x23, 3f000 <filename_completion_function@@Base+0x580>
   27474:	add	x22, x22, #0x87e
   27478:	add	x23, x23, #0x889
   2747c:	cmp	w0, #0x0
   27480:	adrp	x2, 3f000 <filename_completion_function@@Base+0x580>
   27484:	adrp	x25, 50000 <filename_completion_function@@Base+0x11580>
   27488:	adrp	x26, 3e000 <_rl_print_color_indicator@@Base+0xec>
   2748c:	adrp	x27, 3f000 <filename_completion_function@@Base+0x580>
   27490:	mov	w19, w0
   27494:	mov	x24, xzr
   27498:	add	x2, x2, #0x9a5
   2749c:	add	x25, x25, #0xd28
   274a0:	add	x26, x26, #0xf84
   274a4:	csel	x20, x23, x22, eq  // eq = none
   274a8:	add	x27, x27, #0x7e5
   274ac:	mov	x29, sp
   274b0:	add	x28, x25, x24
   274b4:	ldr	x8, [x28, #8]
   274b8:	ldr	x0, [x21]
   274bc:	mov	x1, x20
   274c0:	ldr	w8, [x8]
   274c4:	cmp	w8, #0x0
   274c8:	csel	x3, x27, x26, eq  // eq = none
   274cc:	bl	17950 <fprintf@plt>
   274d0:	ldr	x2, [x28, #24]
   274d4:	add	x24, x24, #0x18
   274d8:	cmp	x24, #0x318
   274dc:	b.ne	274b0 <rl_variable_dumper@@Base+0x64>  // b.any
   274e0:	cmp	w19, #0x0
   274e4:	csel	x19, x23, x22, eq  // eq = none
   274e8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   274ec:	mov	x24, xzr
   274f0:	add	x22, x22, #0x58
   274f4:	b	27504 <rl_variable_dumper@@Base+0xb8>
   274f8:	add	x24, x24, #0x18
   274fc:	cmp	x24, #0x138
   27500:	b.eq	2752c <rl_variable_dumper@@Base+0xe0>  // b.none
   27504:	ldr	x20, [x22, x24]
   27508:	mov	x0, x20
   2750c:	bl	264d8 <rl_variable_value@@Base+0xb0>
   27510:	cbz	x0, 274f8 <rl_variable_dumper@@Base+0xac>
   27514:	mov	x3, x0
   27518:	ldr	x0, [x21]
   2751c:	mov	x1, x19
   27520:	mov	x2, x20
   27524:	bl	17950 <fprintf@plt>
   27528:	b	274f8 <rl_variable_dumper@@Base+0xac>
   2752c:	ldp	x20, x19, [sp, #80]
   27530:	ldp	x22, x21, [sp, #64]
   27534:	ldp	x24, x23, [sp, #48]
   27538:	ldp	x26, x25, [sp, #32]
   2753c:	ldp	x28, x27, [sp, #16]
   27540:	ldp	x29, x30, [sp], #96
   27544:	ret

0000000000027548 <rl_dump_variables@@Base>:
   27548:	stp	x29, x30, [sp, #-16]!
   2754c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27550:	ldr	x8, [x8, #3784]
   27554:	mov	x29, sp
   27558:	ldr	w8, [x8]
   2755c:	cbz	w8, 27580 <rl_dump_variables@@Base+0x38>
   27560:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27564:	ldr	x8, [x8, #1928]
   27568:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2756c:	add	x0, x0, #0x87b
   27570:	mov	w1, #0x2                   	// #2
   27574:	ldr	x3, [x8]
   27578:	mov	w2, #0x1                   	// #1
   2757c:	bl	173e0 <fwrite@plt>
   27580:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27584:	ldr	x8, [x8, #3792]
   27588:	ldr	w0, [x8]
   2758c:	bl	16a70 <rl_variable_dumper@plt>
   27590:	bl	172a0 <rl_on_new_line@plt>
   27594:	mov	w0, wzr
   27598:	ldp	x29, x30, [sp], #16
   2759c:	ret
   275a0:	stp	x29, x30, [sp, #-80]!
   275a4:	stp	x20, x19, [sp, #64]
   275a8:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   275ac:	ldr	w11, [x20, #908]
   275b0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   275b4:	stp	x22, x21, [sp, #48]
   275b8:	ldrsw	x10, [x9, #912]
   275bc:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   275c0:	ldr	x8, [x21, #920]
   275c4:	add	w11, w11, #0x1
   275c8:	cmp	w11, w10
   275cc:	mov	x19, x0
   275d0:	stp	x26, x25, [sp, #16]
   275d4:	stp	x24, x23, [sp, #32]
   275d8:	mov	x29, sp
   275dc:	b.lt	27610 <rl_dump_variables@@Base+0xc8>  // b.tstop
   275e0:	cbz	x8, 275f8 <rl_dump_variables@@Base+0xb0>
   275e4:	add	x1, x10, #0x14
   275e8:	mov	x0, x8
   275ec:	str	w1, [x9, #912]
   275f0:	bl	16a50 <xrealloc@plt>
   275f4:	b	27608 <rl_dump_variables@@Base+0xc0>
   275f8:	mov	w8, #0x14                  	// #20
   275fc:	mov	w0, #0x14                  	// #20
   27600:	str	w8, [x9, #912]
   27604:	bl	16bf0 <xmalloc@plt>
   27608:	mov	x8, x0
   2760c:	str	x0, [x21, #920]
   27610:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27614:	ldrsw	x9, [x20, #908]
   27618:	ldr	x22, [x22, #2416]
   2761c:	add	w11, w9, #0x1
   27620:	ldrb	w10, [x22]
   27624:	str	w11, [x20, #908]
   27628:	strb	w10, [x8, x9]
   2762c:	ldrb	w8, [x22]
   27630:	cbz	w8, 27650 <rl_dump_variables@@Base+0x108>
   27634:	ldp	x20, x19, [sp, #64]
   27638:	ldp	x22, x21, [sp, #48]
   2763c:	ldp	x24, x23, [sp, #32]
   27640:	ldp	x26, x25, [sp, #16]
   27644:	mov	w0, wzr
   27648:	ldp	x29, x30, [sp], #80
   2764c:	ret
   27650:	mov	x0, x19
   27654:	bl	16440 <strlen@plt>
   27658:	mov	x20, x0
   2765c:	mov	x8, xzr
   27660:	ldrb	w9, [x19, x8]
   27664:	cbz	w9, 27684 <rl_dump_variables@@Base+0x13c>
   27668:	cmp	w9, #0x9
   2766c:	b.eq	2768c <rl_dump_variables@@Base+0x144>  // b.none
   27670:	cmp	w9, #0x20
   27674:	b.eq	2768c <rl_dump_variables@@Base+0x144>  // b.none
   27678:	add	x8, x8, #0x1
   2767c:	ldrb	w9, [x19, x8]
   27680:	cbnz	w9, 27668 <rl_dump_variables@@Base+0x120>
   27684:	mov	w23, w8
   27688:	b	27694 <rl_dump_variables@@Base+0x14c>
   2768c:	add	w23, w8, #0x1
   27690:	strb	wzr, [x19, w8, uxtw]
   27694:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27698:	ldr	x24, [x24, #2784]
   2769c:	ldr	x21, [x24]
   276a0:	cbz	x21, 276bc <rl_dump_variables@@Base+0x174>
   276a4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   276a8:	add	x1, x1, #0x8cc
   276ac:	mov	w2, #0x5                   	// #5
   276b0:	mov	x0, x19
   276b4:	bl	172d0 <strncasecmp@plt>
   276b8:	cbz	w0, 27768 <rl_dump_variables@@Base+0x220>
   276bc:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   276c0:	add	x1, x1, #0x8d2
   276c4:	mov	w2, #0x5                   	// #5
   276c8:	mov	x0, x19
   276cc:	bl	172d0 <strncasecmp@plt>
   276d0:	cbz	w0, 27734 <rl_dump_variables@@Base+0x1ec>
   276d4:	adrp	x1, 3e000 <_rl_print_color_indicator@@Base+0xec>
   276d8:	add	x1, x1, #0xe0c
   276dc:	mov	w2, #0x7                   	// #7
   276e0:	mov	x0, x19
   276e4:	bl	172d0 <strncasecmp@plt>
   276e8:	cbz	w0, 277c0 <rl_dump_variables@@Base+0x278>
   276ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   276f0:	ldr	x8, [x8, #3392]
   276f4:	mov	x0, x19
   276f8:	ldr	x1, [x8]
   276fc:	bl	16d80 <strcasecmp@plt>
   27700:	cbz	w0, 27860 <rl_dump_variables@@Base+0x318>
   27704:	adrp	x21, 50000 <filename_completion_function@@Base+0x11580>
   27708:	mov	x24, xzr
   2770c:	add	x21, x21, #0xd28
   27710:	ldr	x1, [x21]
   27714:	mov	x0, x19
   27718:	bl	16d80 <strcasecmp@plt>
   2771c:	cbz	w0, 27888 <rl_dump_variables@@Base+0x340>
   27720:	add	x24, x24, #0x1
   27724:	cmp	x24, #0x21
   27728:	add	x21, x21, #0x18
   2772c:	b.ne	27710 <rl_dump_variables@@Base+0x1c8>  // b.any
   27730:	b	27898 <rl_dump_variables@@Base+0x350>
   27734:	add	x19, x19, #0x5
   27738:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2773c:	add	x1, x1, #0x803
   27740:	mov	x0, x19
   27744:	bl	16d80 <strcasecmp@plt>
   27748:	cbz	w0, 27868 <rl_dump_variables@@Base+0x320>
   2774c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27750:	add	x1, x1, #0x809
   27754:	mov	x0, x19
   27758:	bl	16d80 <strcasecmp@plt>
   2775c:	cmp	w0, #0x0
   27760:	csetm	w8, ne  // ne = any
   27764:	b	2786c <rl_dump_variables@@Base+0x324>
   27768:	mov	x0, x21
   2776c:	bl	16440 <strlen@plt>
   27770:	add	x0, x0, #0x1
   27774:	bl	16bf0 <xmalloc@plt>
   27778:	ldr	x1, [x24]
   2777c:	mov	x20, x0
   27780:	bl	17480 <strcpy@plt>
   27784:	mov	w1, #0x2d                  	// #45
   27788:	bl	17380 <strchr@plt>
   2778c:	cbz	x0, 27794 <rl_dump_variables@@Base+0x24c>
   27790:	strb	wzr, [x0]
   27794:	add	x19, x19, #0x5
   27798:	mov	x0, x19
   2779c:	mov	x1, x20
   277a0:	bl	16d80 <strcasecmp@plt>
   277a4:	cbz	w0, 27950 <rl_dump_variables@@Base+0x408>
   277a8:	ldr	x1, [x24]
   277ac:	mov	x0, x19
   277b0:	bl	16d80 <strcasecmp@plt>
   277b4:	cmp	w0, #0x0
   277b8:	cset	w8, ne  // ne = any
   277bc:	b	27954 <rl_dump_variables@@Base+0x40c>
   277c0:	mov	w8, #0x1                   	// #1
   277c4:	cmp	w23, #0x1
   277c8:	strb	w8, [x22]
   277cc:	b.lt	277f0 <rl_dump_variables@@Base+0x2a8>  // b.tstop
   277d0:	cmp	w23, w20
   277d4:	b.gt	277f0 <rl_dump_variables@@Base+0x2a8>
   277d8:	sxtw	x8, w23
   277dc:	sub	x8, x8, #0x1
   277e0:	ldrb	w9, [x19, x8]
   277e4:	cbnz	w9, 277f0 <rl_dump_variables@@Base+0x2a8>
   277e8:	mov	w9, #0x20                  	// #32
   277ec:	strb	w9, [x19, x8]
   277f0:	mov	x11, #0x200                 	// #512
   277f4:	mov	w9, #0x7                   	// #7
   277f8:	mov	w10, #0x1                   	// #1
   277fc:	movk	x11, #0x1, lsl #32
   27800:	strb	wzr, [x19, w20, sxtw]
   27804:	ldrb	w8, [x19, x9]
   27808:	cmp	w8, #0x3e
   2780c:	b.hi	279f4 <rl_dump_variables@@Base+0x4ac>  // b.pmore
   27810:	lsl	x12, x10, x8
   27814:	tst	x12, x11
   27818:	b.eq	27824 <rl_dump_variables@@Base+0x2dc>  // b.none
   2781c:	add	x9, x9, #0x1
   27820:	b	27804 <rl_dump_variables@@Base+0x2bc>
   27824:	mov	w10, #0x1                   	// #1
   27828:	mov	x11, #0x200000000           	// #8589934592
   2782c:	lsl	x10, x10, x8
   27830:	movk	x11, #0x7000, lsl #48
   27834:	tst	x10, x11
   27838:	b.eq	279f4 <rl_dump_variables@@Base+0x4ac>  // b.none
   2783c:	add	x10, x9, #0x1
   27840:	ldrb	w11, [x19, w10, sxtw]
   27844:	cmp	w8, #0x3d
   27848:	b.ne	27964 <rl_dump_variables@@Base+0x41c>  // b.any
   2784c:	cmp	w11, #0x3d
   27850:	cinc	w8, w9, eq  // eq = none
   27854:	add	w10, w8, #0x1
   27858:	mov	w8, #0x1                   	// #1
   2785c:	b	27b20 <rl_dump_variables@@Base+0x5d8>
   27860:	strb	wzr, [x22]
   27864:	b	27634 <rl_dump_variables@@Base+0xec>
   27868:	mov	w8, #0x1                   	// #1
   2786c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27870:	ldr	x9, [x9, #3416]
   27874:	ldr	w9, [x9]
   27878:	cmp	w8, w9
   2787c:	cset	w8, ne  // ne = any
   27880:	strb	w8, [x22]
   27884:	b	27634 <rl_dump_variables@@Base+0xec>
   27888:	tbnz	w24, #31, 27898 <rl_dump_variables@@Base+0x350>
   2788c:	mov	w8, #0x1                   	// #1
   27890:	strb	w8, [x22]
   27894:	b	278bc <rl_dump_variables@@Base+0x374>
   27898:	mov	x0, x19
   2789c:	bl	26114 <rl_parse_and_bind@@Base+0xbb8>
   278a0:	mov	w8, #0x1                   	// #1
   278a4:	strb	w8, [x22]
   278a8:	tbnz	w0, #31, 27634 <rl_dump_variables@@Base+0xec>
   278ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   278b0:	add	x8, x8, #0x58
   278b4:	mov	w9, #0x18                  	// #24
   278b8:	umaddl	x21, w0, w9, x8
   278bc:	ldr	x21, [x21]
   278c0:	mov	x0, x21
   278c4:	bl	16440 <strlen@plt>
   278c8:	cmp	w23, #0x1
   278cc:	b.lt	278f0 <rl_dump_variables@@Base+0x3a8>  // b.tstop
   278d0:	cmp	w23, w20
   278d4:	b.gt	278f0 <rl_dump_variables@@Base+0x3a8>
   278d8:	sxtw	x8, w23
   278dc:	sub	x8, x8, #0x1
   278e0:	ldrb	w9, [x19, x8]
   278e4:	cbnz	w9, 278f0 <rl_dump_variables@@Base+0x3a8>
   278e8:	mov	w9, #0x20                  	// #32
   278ec:	strb	w9, [x19, x8]
   278f0:	add	x1, x19, w0, sxtw
   278f4:	add	w8, w0, #0x1
   278f8:	strb	wzr, [x19, w20, sxtw]
   278fc:	b	27910 <rl_dump_variables@@Base+0x3c8>
   27900:	cmp	w9, #0x9
   27904:	b.ne	27980 <rl_dump_variables@@Base+0x438>  // b.any
   27908:	add	x1, x1, #0x1
   2790c:	add	w8, w8, #0x1
   27910:	ldrb	w9, [x1]
   27914:	cmp	w9, #0x1f
   27918:	b.le	27900 <rl_dump_variables@@Base+0x3b8>
   2791c:	cmp	w9, #0x20
   27920:	b.eq	27908 <rl_dump_variables@@Base+0x3c0>  // b.none
   27924:	cmp	w9, #0x21
   27928:	b.eq	27934 <rl_dump_variables@@Base+0x3ec>  // b.none
   2792c:	cmp	w9, #0x3d
   27930:	b.ne	27980 <rl_dump_variables@@Base+0x438>  // b.any
   27934:	ldrb	w10, [x19, w8, sxtw]
   27938:	cmp	w9, #0x3d
   2793c:	b.ne	279a0 <rl_dump_variables@@Base+0x458>  // b.any
   27940:	cmp	w10, #0x3d
   27944:	cinc	w8, w8, eq  // eq = none
   27948:	mov	w23, #0x1                   	// #1
   2794c:	b	279b8 <rl_dump_variables@@Base+0x470>
   27950:	mov	w8, wzr
   27954:	mov	x0, x20
   27958:	strb	w8, [x22]
   2795c:	bl	169f0 <xfree@plt>
   27960:	b	27634 <rl_dump_variables@@Base+0xec>
   27964:	cmp	w8, #0x21
   27968:	b.ne	27a18 <rl_dump_variables@@Base+0x4d0>  // b.any
   2796c:	cmp	w11, #0x3d
   27970:	b.ne	27a18 <rl_dump_variables@@Base+0x4d0>  // b.any
   27974:	add	w10, w9, #0x2
   27978:	mov	w8, #0x2                   	// #2
   2797c:	b	27b20 <rl_dump_variables@@Base+0x5d8>
   27980:	adrp	x8, 3e000 <_rl_print_color_indicator@@Base+0xec>
   27984:	add	x8, x8, #0xe7c
   27988:	cmp	w9, #0x0
   2798c:	csel	x1, x8, x1, eq  // eq = none
   27990:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27994:	add	x0, x0, #0x91d
   27998:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   2799c:	b	27634 <rl_dump_variables@@Base+0xec>
   279a0:	cmp	w9, #0x21
   279a4:	b.ne	27990 <rl_dump_variables@@Base+0x448>  // b.any
   279a8:	cmp	w10, #0x3d
   279ac:	b.ne	27990 <rl_dump_variables@@Base+0x448>  // b.any
   279b0:	add	w8, w8, #0x1
   279b4:	mov	w23, #0x2                   	// #2
   279b8:	add	x20, x19, w8, sxtw
   279bc:	b	279c8 <rl_dump_variables@@Base+0x480>
   279c0:	add	w8, w8, #0x1
   279c4:	add	x20, x20, #0x1
   279c8:	ldrb	w9, [x20]
   279cc:	cmp	w9, #0x9
   279d0:	b.eq	279c0 <rl_dump_variables@@Base+0x478>  // b.none
   279d4:	cmp	w9, #0x20
   279d8:	b.eq	279c0 <rl_dump_variables@@Base+0x478>  // b.none
   279dc:	cbnz	w9, 27a34 <rl_dump_variables@@Base+0x4ec>
   279e0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   279e4:	add	x0, x0, #0x8e0
   279e8:	mov	x1, x20
   279ec:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   279f0:	b	27634 <rl_dump_variables@@Base+0xec>
   279f4:	adrp	x10, 3e000 <_rl_print_color_indicator@@Base+0xec>
   279f8:	add	x9, x19, w9, uxtw
   279fc:	add	x10, x10, #0xe7c
   27a00:	cmp	w8, #0x0
   27a04:	csel	x1, x10, x9, eq  // eq = none
   27a08:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27a0c:	add	x0, x0, #0x926
   27a10:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   27a14:	b	27634 <rl_dump_variables@@Base+0xec>
   27a18:	cmp	w8, #0x3c
   27a1c:	b.ne	27a98 <rl_dump_variables@@Base+0x550>  // b.any
   27a20:	cmp	w11, #0x3d
   27a24:	b.ne	27a98 <rl_dump_variables@@Base+0x550>  // b.any
   27a28:	add	w10, w9, #0x2
   27a2c:	mov	w8, #0x6                   	// #6
   27a30:	b	27b20 <rl_dump_variables@@Base+0x5d8>
   27a34:	mov	x9, #0x201                 	// #513
   27a38:	add	x19, x19, w8, sxtw
   27a3c:	mov	w8, #0x1                   	// #1
   27a40:	movk	x9, #0x1, lsl #32
   27a44:	b	27a4c <rl_dump_variables@@Base+0x504>
   27a48:	add	x19, x19, #0x1
   27a4c:	ldrb	w24, [x19]
   27a50:	cmp	w24, #0x20
   27a54:	b.hi	27a48 <rl_dump_variables@@Base+0x500>  // b.pmore
   27a58:	lsl	x10, x8, x24
   27a5c:	tst	x10, x9
   27a60:	b.eq	27a48 <rl_dump_variables@@Base+0x500>  // b.none
   27a64:	adrp	x26, 50000 <filename_completion_function@@Base+0x11580>
   27a68:	mov	x25, xzr
   27a6c:	add	x26, x26, #0xd30
   27a70:	strb	wzr, [x19]
   27a74:	ldur	x1, [x26, #-8]
   27a78:	mov	x0, x21
   27a7c:	bl	16d80 <strcasecmp@plt>
   27a80:	cbz	w0, 27ab4 <rl_dump_variables@@Base+0x56c>
   27a84:	add	x25, x25, #0x1
   27a88:	cmp	x25, #0x21
   27a8c:	add	x26, x26, #0x18
   27a90:	b.ne	27a74 <rl_dump_variables@@Base+0x52c>  // b.any
   27a94:	b	27adc <rl_dump_variables@@Base+0x594>
   27a98:	cmp	w8, #0x3e
   27a9c:	b.ne	27b04 <rl_dump_variables@@Base+0x5bc>  // b.any
   27aa0:	cmp	w11, #0x3d
   27aa4:	b.ne	27b04 <rl_dump_variables@@Base+0x5bc>  // b.any
   27aa8:	add	w10, w9, #0x2
   27aac:	mov	w8, #0x4                   	// #4
   27ab0:	b	27b20 <rl_dump_variables@@Base+0x5d8>
   27ab4:	tbnz	w25, #31, 27adc <rl_dump_variables@@Base+0x594>
   27ab8:	ldr	x8, [x26]
   27abc:	adrp	x9, 3e000 <_rl_print_color_indicator@@Base+0xec>
   27ac0:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   27ac4:	add	x9, x9, #0xf84
   27ac8:	ldr	w8, [x8]
   27acc:	add	x10, x10, #0x7e5
   27ad0:	cmp	w8, #0x0
   27ad4:	csel	x0, x10, x9, eq  // eq = none
   27ad8:	b	27c9c <rl_dump_variables@@Base+0x754>
   27adc:	mov	x0, x21
   27ae0:	bl	26114 <rl_parse_and_bind@@Base+0xbb8>
   27ae4:	tbnz	w0, #31, 27c98 <rl_dump_variables@@Base+0x750>
   27ae8:	mov	w8, #0x18                  	// #24
   27aec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27af0:	umull	x8, w0, w8
   27af4:	add	x9, x9, #0x58
   27af8:	ldr	x0, [x9, x8]
   27afc:	bl	264d8 <rl_variable_value@@Base+0xb0>
   27b00:	b	27c9c <rl_dump_variables@@Base+0x754>
   27b04:	cmp	w8, #0x3c
   27b08:	mov	w11, #0x3                   	// #3
   27b0c:	mov	w12, #0x5                   	// #5
   27b10:	orr	w13, w8, #0x2
   27b14:	csel	w8, w12, w11, eq  // eq = none
   27b18:	cmp	w13, #0x3e
   27b1c:	b.ne	27cf0 <rl_dump_variables@@Base+0x7a8>  // b.any
   27b20:	sxtw	x9, w10
   27b24:	sbfiz	x10, x10, #32, #32
   27b28:	mov	x11, #0x100000000           	// #4294967296
   27b2c:	b	27b38 <rl_dump_variables@@Base+0x5f0>
   27b30:	add	x9, x9, #0x1
   27b34:	add	x10, x10, x11
   27b38:	ldrb	w12, [x19, x9]
   27b3c:	cmp	w12, #0x9
   27b40:	b.eq	27b30 <rl_dump_variables@@Base+0x5e8>  // b.none
   27b44:	cmp	w12, #0x20
   27b48:	b.eq	27b30 <rl_dump_variables@@Base+0x5e8>  // b.none
   27b4c:	cbnz	w12, 27b58 <rl_dump_variables@@Base+0x610>
   27b50:	add	x1, x19, x9
   27b54:	b	27b68 <rl_dump_variables@@Base+0x620>
   27b58:	sub	w11, w12, #0x30
   27b5c:	cmp	w11, #0x9
   27b60:	add	x1, x19, x9
   27b64:	b.ls	27b78 <rl_dump_variables@@Base+0x630>  // b.plast
   27b68:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27b6c:	add	x0, x0, #0x8d8
   27b70:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   27b74:	b	27634 <rl_dump_variables@@Base+0xec>
   27b78:	asr	x12, x10, #32
   27b7c:	ldrb	w11, [x19, x12]
   27b80:	sub	w10, w11, #0x30
   27b84:	cmp	w10, #0x9
   27b88:	b.hi	27bc0 <rl_dump_variables@@Base+0x678>  // b.pmore
   27b8c:	mov	w10, wzr
   27b90:	add	x13, x19, #0x1
   27b94:	mov	w14, #0xa                   	// #10
   27b98:	add	w9, w10, w11, uxtb
   27b9c:	ldrb	w11, [x13, x12]
   27ba0:	mul	w10, w9, w14
   27ba4:	add	x9, x12, #0x1
   27ba8:	sub	w10, w10, #0x1e0
   27bac:	sub	w12, w11, #0x30
   27bb0:	cmp	w12, #0xa
   27bb4:	mov	x12, x9
   27bb8:	b.cc	27b98 <rl_dump_variables@@Base+0x650>  // b.lo, b.ul, b.last
   27bbc:	b	27bc4 <rl_dump_variables@@Base+0x67c>
   27bc0:	mov	w10, wzr
   27bc4:	cmp	w11, #0x2e
   27bc8:	b.ne	27c2c <rl_dump_variables@@Base+0x6e4>  // b.any
   27bcc:	add	w9, w9, #0x1
   27bd0:	sxtw	x13, w9
   27bd4:	ldrb	w12, [x19, x13]
   27bd8:	sub	w11, w12, #0x30
   27bdc:	cbz	w12, 27bec <rl_dump_variables@@Base+0x6a4>
   27be0:	and	w14, w11, #0xff
   27be4:	cmp	w14, #0x9
   27be8:	b.hi	27b68 <rl_dump_variables@@Base+0x620>  // b.pmore
   27bec:	and	w11, w11, #0xff
   27bf0:	cmp	w11, #0x9
   27bf4:	b.hi	27c2c <rl_dump_variables@@Base+0x6e4>  // b.pmore
   27bf8:	add	x13, x13, x19
   27bfc:	mov	w11, wzr
   27c00:	add	x13, x13, #0x1
   27c04:	mov	w14, #0xa                   	// #10
   27c08:	mul	w11, w11, w14
   27c0c:	add	w11, w11, w12, uxtb
   27c10:	ldrb	w12, [x13], #1
   27c14:	sub	w11, w11, #0x30
   27c18:	add	w9, w9, #0x1
   27c1c:	sub	w15, w12, #0x30
   27c20:	cmp	w15, #0xa
   27c24:	b.cc	27c08 <rl_dump_variables@@Base+0x6c0>  // b.lo, b.ul, b.last
   27c28:	b	27c30 <rl_dump_variables@@Base+0x6e8>
   27c2c:	mov	w11, wzr
   27c30:	sxtw	x9, w9
   27c34:	adrp	x13, 3f000 <filename_completion_function@@Base+0x580>
   27c38:	add	x12, x19, x9
   27c3c:	add	x13, x13, #0x6b8
   27c40:	ldrb	w14, [x12]
   27c44:	cmp	w14, #0x23
   27c48:	b.hi	27cdc <rl_dump_variables@@Base+0x794>  // b.pmore
   27c4c:	adr	x15, 27c5c <rl_dump_variables@@Base+0x714>
   27c50:	ldrb	w16, [x13, x14]
   27c54:	add	x15, x15, x16, lsl #2
   27c58:	br	x15
   27c5c:	add	x12, x12, #0x1
   27c60:	b	27c40 <rl_dump_variables@@Base+0x6f8>
   27c64:	sub	w8, w8, #0x1
   27c68:	cmp	w8, #0x5
   27c6c:	b.hi	27634 <rl_dump_variables@@Base+0xec>  // b.pmore
   27c70:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   27c74:	add	x9, x9, #0x6dc
   27c78:	adr	x12, 27c8c <rl_dump_variables@@Base+0x744>
   27c7c:	ldrb	w13, [x9, x8]
   27c80:	add	x12, x12, x13, lsl #2
   27c84:	add	w8, w11, w10
   27c88:	br	x12
   27c8c:	cmp	w8, #0x50
   27c90:	cset	w8, eq  // eq = none
   27c94:	b	27880 <rl_dump_variables@@Base+0x338>
   27c98:	mov	x0, xzr
   27c9c:	cmp	w23, #0x2
   27ca0:	b.eq	27cc0 <rl_dump_variables@@Base+0x778>  // b.none
   27ca4:	cmp	w23, #0x1
   27ca8:	b.ne	27cd4 <rl_dump_variables@@Base+0x78c>  // b.any
   27cac:	mov	x1, x20
   27cb0:	bl	16d80 <strcasecmp@plt>
   27cb4:	cmp	w0, #0x0
   27cb8:	cset	w8, ne  // ne = any
   27cbc:	b	27cd0 <rl_dump_variables@@Base+0x788>
   27cc0:	mov	x1, x20
   27cc4:	bl	16d80 <strcasecmp@plt>
   27cc8:	cmp	w0, #0x0
   27ccc:	cset	w8, eq  // eq = none
   27cd0:	strb	w8, [x22]
   27cd4:	strb	w24, [x19]
   27cd8:	b	27634 <rl_dump_variables@@Base+0xec>
   27cdc:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27ce0:	add	x1, x19, x9
   27ce4:	add	x0, x0, #0x8fe
   27ce8:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   27cec:	b	27634 <rl_dump_variables@@Base+0xec>
   27cf0:	add	x1, x19, w9, uxtw
   27cf4:	b	27a08 <rl_dump_variables@@Base+0x4c0>
   27cf8:	cmp	w8, #0x50
   27cfc:	b	2787c <rl_dump_variables@@Base+0x334>
   27d00:	cmp	w8, #0x50
   27d04:	b	27d0c <rl_dump_variables@@Base+0x7c4>
   27d08:	cmp	w8, #0x51
   27d0c:	cset	w8, lt  // lt = tstop
   27d10:	b	27880 <rl_dump_variables@@Base+0x338>
   27d14:	cmp	w8, #0x50
   27d18:	b	27d20 <rl_dump_variables@@Base+0x7d8>
   27d1c:	cmp	w8, #0x4f
   27d20:	cset	w8, gt
   27d24:	b	27880 <rl_dump_variables@@Base+0x338>
   27d28:	stp	x29, x30, [sp, #-16]!
   27d2c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   27d30:	ldrsw	x9, [x8, #908]
   27d34:	mov	x29, sp
   27d38:	cbz	w9, 27d60 <rl_dump_variables@@Base+0x818>
   27d3c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   27d40:	ldr	x10, [x10, #920]
   27d44:	sub	x9, x9, #0x1
   27d48:	str	w9, [x8, #908]
   27d4c:	ldrb	w8, [x10, x9]
   27d50:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27d54:	ldr	x9, [x9, #2416]
   27d58:	strb	w8, [x9]
   27d5c:	b	27d6c <rl_dump_variables@@Base+0x824>
   27d60:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27d64:	add	x0, x0, #0x94f
   27d68:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   27d6c:	mov	w0, wzr
   27d70:	ldp	x29, x30, [sp], #16
   27d74:	ret
   27d78:	stp	x29, x30, [sp, #-16]!
   27d7c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   27d80:	ldr	w8, [x8, #908]
   27d84:	mov	x29, sp
   27d88:	cbz	w8, 27dd0 <rl_dump_variables@@Base+0x888>
   27d8c:	cmp	w8, #0x1
   27d90:	b.lt	27db4 <rl_dump_variables@@Base+0x86c>  // b.tstop
   27d94:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   27d98:	ldr	x9, [x9, #920]
   27d9c:	ldrb	w10, [x9]
   27da0:	cmp	w10, #0x1
   27da4:	b.eq	27ddc <rl_dump_variables@@Base+0x894>  // b.none
   27da8:	subs	x8, x8, #0x1
   27dac:	add	x9, x9, #0x1
   27db0:	b.ne	27d9c <rl_dump_variables@@Base+0x854>  // b.any
   27db4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27db8:	ldr	x8, [x8, #2416]
   27dbc:	ldrb	w9, [x8]
   27dc0:	cmp	w9, #0x0
   27dc4:	cset	w9, eq  // eq = none
   27dc8:	strb	w9, [x8]
   27dcc:	b	27ddc <rl_dump_variables@@Base+0x894>
   27dd0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   27dd4:	add	x0, x0, #0x96b
   27dd8:	bl	26028 <rl_parse_and_bind@@Base+0xacc>
   27ddc:	mov	w0, wzr
   27de0:	ldp	x29, x30, [sp], #16
   27de4:	ret
   27de8:	stp	x29, x30, [sp, #-80]!
   27dec:	str	x25, [sp, #16]
   27df0:	stp	x24, x23, [sp, #32]
   27df4:	stp	x22, x21, [sp, #48]
   27df8:	stp	x20, x19, [sp, #64]
   27dfc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27e00:	ldr	x8, [x8, #2416]
   27e04:	mov	x29, sp
   27e08:	ldrb	w8, [x8]
   27e0c:	cbz	w8, 27e18 <rl_dump_variables@@Base+0x8d0>
   27e10:	mov	w0, wzr
   27e14:	b	27e5c <rl_dump_variables@@Base+0x914>
   27e18:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   27e1c:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   27e20:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   27e24:	ldr	x25, [x20, #888]
   27e28:	ldr	w24, [x21, #904]
   27e2c:	ldr	w23, [x22, #896]
   27e30:	mov	w1, #0xa                   	// #10
   27e34:	mov	x19, x0
   27e38:	bl	17380 <strchr@plt>
   27e3c:	cbz	x0, 27e44 <rl_dump_variables@@Base+0x8fc>
   27e40:	strb	wzr, [x0]
   27e44:	add	w1, w23, #0x1
   27e48:	mov	x0, x19
   27e4c:	bl	2530c <rl_set_keymap_from_edit_mode@@Base+0x3c>
   27e50:	str	x25, [x20, #888]
   27e54:	str	w24, [x21, #904]
   27e58:	str	w23, [x22, #896]
   27e5c:	ldp	x20, x19, [sp, #64]
   27e60:	ldp	x22, x21, [sp, #48]
   27e64:	ldp	x24, x23, [sp, #32]
   27e68:	ldr	x25, [sp, #16]
   27e6c:	ldp	x29, x30, [sp], #80
   27e70:	ret
   27e74:	stp	x29, x30, [sp, #-32]!
   27e78:	str	x19, [sp, #16]
   27e7c:	mov	x29, sp
   27e80:	cbz	x0, 27efc <rl_dump_variables@@Base+0x9b4>
   27e84:	ldrb	w8, [x0]
   27e88:	mov	x19, x0
   27e8c:	cbz	w8, 27efc <rl_dump_variables@@Base+0x9b4>
   27e90:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27e94:	add	x1, x1, #0x80c
   27e98:	mov	x0, x19
   27e9c:	bl	16d80 <strcasecmp@plt>
   27ea0:	cbz	w0, 27f04 <rl_dump_variables@@Base+0x9bc>
   27ea4:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27ea8:	add	x1, x1, #0x7e5
   27eac:	mov	x0, x19
   27eb0:	bl	16d80 <strcasecmp@plt>
   27eb4:	cbz	w0, 27f04 <rl_dump_variables@@Base+0x9bc>
   27eb8:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27ebc:	add	x1, x1, #0xd01
   27ec0:	mov	x0, x19
   27ec4:	bl	16d80 <strcasecmp@plt>
   27ec8:	cbz	w0, 27efc <rl_dump_variables@@Base+0x9b4>
   27ecc:	adrp	x1, 3e000 <_rl_print_color_indicator@@Base+0xec>
   27ed0:	add	x1, x1, #0xf84
   27ed4:	mov	x0, x19
   27ed8:	bl	16d80 <strcasecmp@plt>
   27edc:	cbz	w0, 27efc <rl_dump_variables@@Base+0x9b4>
   27ee0:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   27ee4:	add	x1, x1, #0xd09
   27ee8:	mov	x0, x19
   27eec:	bl	16d80 <strcasecmp@plt>
   27ef0:	cbz	w0, 27f24 <rl_dump_variables@@Base+0x9dc>
   27ef4:	mov	w0, #0x1                   	// #1
   27ef8:	b	27f18 <rl_dump_variables@@Base+0x9d0>
   27efc:	mov	w8, #0x1                   	// #1
   27f00:	b	27f08 <rl_dump_variables@@Base+0x9c0>
   27f04:	mov	w8, wzr
   27f08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27f0c:	ldr	x9, [x9, #3288]
   27f10:	mov	w0, wzr
   27f14:	str	w8, [x9]
   27f18:	ldr	x19, [sp, #16]
   27f1c:	ldp	x29, x30, [sp], #32
   27f20:	ret
   27f24:	mov	w8, #0x2                   	// #2
   27f28:	b	27f08 <rl_dump_variables@@Base+0x9c0>
   27f2c:	stp	x29, x30, [sp, #-48]!
   27f30:	str	x21, [sp, #16]
   27f34:	stp	x20, x19, [sp, #32]
   27f38:	mov	x29, sp
   27f3c:	cbz	x0, 27f88 <rl_dump_variables@@Base+0xa40>
   27f40:	ldrb	w8, [x0]
   27f44:	mov	x19, x0
   27f48:	cbz	w8, 27f88 <rl_dump_variables@@Base+0xa40>
   27f4c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27f50:	ldr	x21, [x21, #2448]
   27f54:	ldr	x0, [x21]
   27f58:	cbz	x0, 27f60 <rl_dump_variables@@Base+0xa18>
   27f5c:	bl	171b0 <free@plt>
   27f60:	mov	x0, x19
   27f64:	bl	16440 <strlen@plt>
   27f68:	add	x0, x0, #0x1
   27f6c:	bl	16bf0 <xmalloc@plt>
   27f70:	mov	x1, x19
   27f74:	mov	x20, x0
   27f78:	bl	17480 <strcpy@plt>
   27f7c:	mov	w0, wzr
   27f80:	str	x20, [x21]
   27f84:	b	27f8c <rl_dump_variables@@Base+0xa44>
   27f88:	mov	w0, #0x1                   	// #1
   27f8c:	ldp	x20, x19, [sp, #32]
   27f90:	ldr	x21, [sp, #16]
   27f94:	ldp	x29, x30, [sp], #48
   27f98:	ret
   27f9c:	stp	x29, x30, [sp, #-16]!
   27fa0:	mov	x29, sp
   27fa4:	cbz	x0, 27fc0 <rl_dump_variables@@Base+0xa78>
   27fa8:	ldrb	w8, [x0]
   27fac:	cbz	w8, 27fc0 <rl_dump_variables@@Base+0xa78>
   27fb0:	mov	w2, #0xa                   	// #10
   27fb4:	mov	x1, xzr
   27fb8:	bl	17130 <strtol@plt>
   27fbc:	b	27fc4 <rl_dump_variables@@Base+0xa7c>
   27fc0:	mov	w0, #0xffffffff            	// #-1
   27fc4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   27fc8:	ldr	x8, [x8, #3624]
   27fcc:	str	w0, [x8]
   27fd0:	mov	w0, wzr
   27fd4:	ldp	x29, x30, [sp], #16
   27fd8:	ret
   27fdc:	stp	x29, x30, [sp, #-16]!
   27fe0:	mov	x29, sp
   27fe4:	cbz	x0, 28004 <rl_dump_variables@@Base+0xabc>
   27fe8:	ldrb	w8, [x0]
   27fec:	cbz	w8, 28008 <rl_dump_variables@@Base+0xac0>
   27ff0:	mov	w2, #0xa                   	// #10
   27ff4:	mov	x1, xzr
   27ff8:	bl	17130 <strtol@plt>
   27ffc:	bic	w8, w0, w0, asr #31
   28000:	b	28008 <rl_dump_variables@@Base+0xac0>
   28004:	mov	w8, wzr
   28008:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2800c:	ldr	x9, [x9, #2848]
   28010:	mov	w0, wzr
   28014:	str	w8, [x9]
   28018:	ldp	x29, x30, [sp], #16
   2801c:	ret
   28020:	stp	x29, x30, [sp, #-16]!
   28024:	mov	x29, sp
   28028:	cbz	x0, 28048 <rl_dump_variables@@Base+0xb00>
   2802c:	ldrb	w8, [x0]
   28030:	cbz	w8, 28048 <rl_dump_variables@@Base+0xb00>
   28034:	mov	w2, #0xa                   	// #10
   28038:	mov	x1, xzr
   2803c:	bl	17130 <strtol@plt>
   28040:	bic	w8, w0, w0, asr #31
   28044:	b	2804c <rl_dump_variables@@Base+0xb04>
   28048:	mov	w8, #0x64                  	// #100
   2804c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28050:	ldr	x9, [x9, #2088]
   28054:	mov	w0, wzr
   28058:	str	w8, [x9]
   2805c:	ldp	x29, x30, [sp], #16
   28060:	ret
   28064:	stp	x29, x30, [sp, #-32]!
   28068:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2806c:	add	x1, x1, #0x809
   28070:	mov	w2, #0x2                   	// #2
   28074:	str	x19, [sp, #16]
   28078:	mov	x29, sp
   2807c:	mov	x19, x0
   28080:	bl	172d0 <strncasecmp@plt>
   28084:	cbz	w0, 280b4 <rl_dump_variables@@Base+0xb6c>
   28088:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   2808c:	add	x1, x1, #0x803
   28090:	mov	w2, #0x5                   	// #5
   28094:	mov	x0, x19
   28098:	bl	172d0 <strncasecmp@plt>
   2809c:	mov	w8, w0
   280a0:	mov	w0, #0x1                   	// #1
   280a4:	cbnz	w8, 280d8 <rl_dump_variables@@Base+0xb90>
   280a8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   280ac:	ldr	x8, [x8, #1984]
   280b0:	b	280bc <rl_dump_variables@@Base+0xb74>
   280b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   280b8:	ldr	x8, [x8, #4032]
   280bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   280c0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   280c4:	ldr	x9, [x9, #1992]
   280c8:	ldr	x10, [x10, #3416]
   280cc:	str	x8, [x9]
   280d0:	str	w0, [x10]
   280d4:	mov	w0, wzr
   280d8:	ldr	x19, [sp, #16]
   280dc:	ldp	x29, x30, [sp], #32
   280e0:	ret
   280e4:	stp	x29, x30, [sp, #-48]!
   280e8:	str	x21, [sp, #16]
   280ec:	stp	x20, x19, [sp, #32]
   280f0:	mov	x29, sp
   280f4:	cbz	x0, 2815c <rl_dump_variables@@Base+0xc14>
   280f8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   280fc:	ldrb	w8, [x0]
   28100:	ldr	x21, [x21, #3496]
   28104:	mov	x19, x0
   28108:	ldr	x0, [x21]
   2810c:	cbz	w8, 28184 <rl_dump_variables@@Base+0xc3c>
   28110:	cbz	x0, 28118 <rl_dump_variables@@Base+0xbd0>
   28114:	bl	171b0 <free@plt>
   28118:	mov	x0, x19
   2811c:	bl	16440 <strlen@plt>
   28120:	mov	w8, #0x1                   	// #1
   28124:	bfi	x8, x0, #1, #63
   28128:	mov	x0, x8
   2812c:	bl	16bf0 <xmalloc@plt>
   28130:	str	x0, [x21]
   28134:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28138:	ldr	x20, [x20, #3432]
   2813c:	mov	x1, x0
   28140:	mov	x0, x19
   28144:	mov	x2, x20
   28148:	bl	17050 <rl_translate_keyseq@plt>
   2814c:	ldr	x8, [x21]
   28150:	ldrsw	x9, [x20]
   28154:	strb	wzr, [x8, x9]
   28158:	b	281a8 <rl_dump_variables@@Base+0xc60>
   2815c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28160:	ldr	x19, [x19, #3496]
   28164:	ldr	x0, [x19]
   28168:	cbz	x0, 28170 <rl_dump_variables@@Base+0xc28>
   2816c:	bl	171b0 <free@plt>
   28170:	str	xzr, [x19]
   28174:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28178:	ldr	x8, [x8, #3432]
   2817c:	str	wzr, [x8]
   28180:	b	281a8 <rl_dump_variables@@Base+0xc60>
   28184:	cbz	x0, 2818c <rl_dump_variables@@Base+0xc44>
   28188:	bl	171b0 <free@plt>
   2818c:	mov	w0, #0x1                   	// #1
   28190:	bl	16bf0 <xmalloc@plt>
   28194:	str	x0, [x21]
   28198:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2819c:	ldr	x8, [x8, #3432]
   281a0:	str	wzr, [x8]
   281a4:	strb	wzr, [x0]
   281a8:	ldp	x20, x19, [sp, #32]
   281ac:	ldr	x21, [sp, #16]
   281b0:	mov	w0, wzr
   281b4:	ldp	x29, x30, [sp], #48
   281b8:	ret
   281bc:	stp	x29, x30, [sp, #-16]!
   281c0:	mov	x29, sp
   281c4:	cbz	x0, 281e8 <rl_dump_variables@@Base+0xca0>
   281c8:	ldrb	w8, [x0]
   281cc:	cbz	w8, 281e8 <rl_dump_variables@@Base+0xca0>
   281d0:	mov	w2, #0xa                   	// #10
   281d4:	mov	x1, xzr
   281d8:	bl	17130 <strtol@plt>
   281dc:	tbz	w0, #31, 281ec <rl_dump_variables@@Base+0xca4>
   281e0:	bl	17790 <unstifle_history@plt>
   281e4:	b	281f0 <rl_dump_variables@@Base+0xca8>
   281e8:	mov	w0, #0x1f4                 	// #500
   281ec:	bl	16450 <stifle_history@plt>
   281f0:	mov	w0, wzr
   281f4:	ldp	x29, x30, [sp], #16
   281f8:	ret
   281fc:	cbz	x0, 28278 <rl_dump_variables@@Base+0xd30>
   28200:	stp	x29, x30, [sp, #-48]!
   28204:	str	x21, [sp, #16]
   28208:	stp	x20, x19, [sp, #32]
   2820c:	mov	x29, sp
   28210:	mov	x20, x0
   28214:	bl	16440 <strlen@plt>
   28218:	add	x0, x0, #0x1
   2821c:	bl	16bf0 <xmalloc@plt>
   28220:	mov	x1, x20
   28224:	mov	x19, x0
   28228:	bl	17480 <strcpy@plt>
   2822c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28230:	ldr	x20, [x20, #4040]
   28234:	ldr	x0, [x20]
   28238:	cbz	x0, 28240 <rl_dump_variables@@Base+0xcf8>
   2823c:	bl	171b0 <free@plt>
   28240:	ldrb	w9, [x19]
   28244:	cmp	w9, #0x27
   28248:	b.eq	28254 <rl_dump_variables@@Base+0xd0c>  // b.none
   2824c:	cmp	w9, #0x22
   28250:	b.ne	28280 <rl_dump_variables@@Base+0xd38>  // b.any
   28254:	mov	x8, xzr
   28258:	add	x10, x19, #0x1
   2825c:	mov	w21, #0x1                   	// #1
   28260:	ldrb	w11, [x10, x8]
   28264:	add	x8, x8, #0x1
   28268:	cbz	w11, 282c0 <rl_dump_variables@@Base+0xd78>
   2826c:	cmp	w11, w9
   28270:	b.ne	28260 <rl_dump_variables@@Base+0xd18>  // b.any
   28274:	b	282c0 <rl_dump_variables@@Base+0xd78>
   28278:	mov	w0, #0x1                   	// #1
   2827c:	ret
   28280:	mov	x12, #0x201                 	// #513
   28284:	mov	x8, xzr
   28288:	add	x10, x19, #0x1
   2828c:	mov	w11, #0x1                   	// #1
   28290:	movk	x12, #0x1, lsl #32
   28294:	b	282a0 <rl_dump_variables@@Base+0xd58>
   28298:	ldrb	w9, [x10, x8]
   2829c:	add	x8, x8, #0x1
   282a0:	and	w13, w9, #0xff
   282a4:	cmp	w13, #0x20
   282a8:	and	x9, x9, #0xff
   282ac:	b.hi	28298 <rl_dump_variables@@Base+0xd50>  // b.pmore
   282b0:	lsl	x9, x11, x9
   282b4:	tst	x9, x12
   282b8:	b.eq	28298 <rl_dump_variables@@Base+0xd50>  // b.none
   282bc:	mov	x21, xzr
   282c0:	mov	x0, x19
   282c4:	str	w8, [x29, #28]
   282c8:	strb	wzr, [x19, w8, uxtw]
   282cc:	bl	16440 <strlen@plt>
   282d0:	mov	w8, #0x1                   	// #1
   282d4:	bfi	x8, x0, #1, #63
   282d8:	mov	x0, x8
   282dc:	bl	16bf0 <xmalloc@plt>
   282e0:	mov	x1, x0
   282e4:	str	x0, [x20]
   282e8:	add	x0, x19, x21
   282ec:	add	x2, x29, #0x1c
   282f0:	bl	17050 <rl_translate_keyseq@plt>
   282f4:	ldr	x8, [x20]
   282f8:	ldrsw	x9, [x29, #28]
   282fc:	mov	x0, x19
   28300:	strb	wzr, [x8, x9]
   28304:	bl	169f0 <xfree@plt>
   28308:	ldp	x20, x19, [sp, #32]
   2830c:	ldr	x21, [sp, #16]
   28310:	mov	w0, wzr
   28314:	ldp	x29, x30, [sp], #48
   28318:	ret
   2831c:	stp	x29, x30, [sp, #-48]!
   28320:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   28324:	stp	x20, x19, [sp, #32]
   28328:	ldr	x20, [x8, #3160]
   2832c:	stp	x22, x21, [sp, #16]
   28330:	mov	x29, sp
   28334:	ldr	x1, [x20]
   28338:	cbz	x1, 28388 <rl_dump_variables@@Base+0xe40>
   2833c:	mov	x19, x0
   28340:	mov	x21, xzr
   28344:	add	x22, x20, #0x10
   28348:	mov	x0, x19
   2834c:	bl	16d80 <strcasecmp@plt>
   28350:	cbz	w0, 28364 <rl_dump_variables@@Base+0xe1c>
   28354:	ldr	x1, [x22], #16
   28358:	add	x21, x21, #0x1
   2835c:	cbnz	x1, 28348 <rl_dump_variables@@Base+0xe00>
   28360:	b	28388 <rl_dump_variables@@Base+0xe40>
   28364:	tbnz	w21, #31, 28388 <rl_dump_variables@@Base+0xe40>
   28368:	add	x8, x20, w21, uxtw #4
   2836c:	ldr	x8, [x8, #8]
   28370:	cbz	x8, 28388 <rl_dump_variables@@Base+0xe40>
   28374:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28378:	ldr	x9, [x9, #1992]
   2837c:	mov	w0, wzr
   28380:	str	x8, [x9]
   28384:	b	2838c <rl_dump_variables@@Base+0xe44>
   28388:	mov	w0, #0x1                   	// #1
   2838c:	ldp	x20, x19, [sp, #32]
   28390:	ldp	x22, x21, [sp, #16]
   28394:	ldp	x29, x30, [sp], #48
   28398:	ret
   2839c:	stp	x29, x30, [sp, #-16]!
   283a0:	mov	x29, sp
   283a4:	cbz	x0, 283c4 <rl_dump_variables@@Base+0xe7c>
   283a8:	ldrb	w8, [x0]
   283ac:	cbz	w8, 283c8 <rl_dump_variables@@Base+0xe80>
   283b0:	mov	w2, #0xa                   	// #10
   283b4:	mov	x1, xzr
   283b8:	bl	17130 <strtol@plt>
   283bc:	bic	w8, w0, w0, asr #31
   283c0:	b	283c8 <rl_dump_variables@@Base+0xe80>
   283c4:	mov	w8, wzr
   283c8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   283cc:	ldr	x9, [x9, #3760]
   283d0:	mov	w0, wzr
   283d4:	str	w8, [x9]
   283d8:	ldp	x29, x30, [sp], #16
   283dc:	ret
   283e0:	stp	x29, x30, [sp, #-48]!
   283e4:	str	x21, [sp, #16]
   283e8:	stp	x20, x19, [sp, #32]
   283ec:	mov	x29, sp
   283f0:	cbz	x0, 28458 <rl_dump_variables@@Base+0xf10>
   283f4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   283f8:	ldrb	w8, [x0]
   283fc:	ldr	x21, [x21, #2792]
   28400:	mov	x19, x0
   28404:	ldr	x0, [x21]
   28408:	cbz	w8, 28480 <rl_dump_variables@@Base+0xf38>
   2840c:	cbz	x0, 28414 <rl_dump_variables@@Base+0xecc>
   28410:	bl	171b0 <free@plt>
   28414:	mov	x0, x19
   28418:	bl	16440 <strlen@plt>
   2841c:	mov	w8, #0x1                   	// #1
   28420:	bfi	x8, x0, #1, #63
   28424:	mov	x0, x8
   28428:	bl	16bf0 <xmalloc@plt>
   2842c:	str	x0, [x21]
   28430:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28434:	ldr	x20, [x20, #2200]
   28438:	mov	x1, x0
   2843c:	mov	x0, x19
   28440:	mov	x2, x20
   28444:	bl	17050 <rl_translate_keyseq@plt>
   28448:	ldr	x8, [x21]
   2844c:	ldrsw	x9, [x20]
   28450:	strb	wzr, [x8, x9]
   28454:	b	284a4 <rl_dump_variables@@Base+0xf5c>
   28458:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2845c:	ldr	x19, [x19, #2792]
   28460:	ldr	x0, [x19]
   28464:	cbz	x0, 2846c <rl_dump_variables@@Base+0xf24>
   28468:	bl	171b0 <free@plt>
   2846c:	str	xzr, [x19]
   28470:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28474:	ldr	x8, [x8, #2200]
   28478:	str	wzr, [x8]
   2847c:	b	284a4 <rl_dump_variables@@Base+0xf5c>
   28480:	cbz	x0, 28488 <rl_dump_variables@@Base+0xf40>
   28484:	bl	171b0 <free@plt>
   28488:	mov	w0, #0x1                   	// #1
   2848c:	bl	16bf0 <xmalloc@plt>
   28490:	str	x0, [x21]
   28494:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28498:	ldr	x8, [x8, #2200]
   2849c:	str	wzr, [x8]
   284a0:	strb	wzr, [x0]
   284a4:	ldp	x20, x19, [sp, #32]
   284a8:	ldr	x21, [sp, #16]
   284ac:	mov	w0, wzr
   284b0:	ldp	x29, x30, [sp], #48
   284b4:	ret
   284b8:	stp	x29, x30, [sp, #-48]!
   284bc:	str	x21, [sp, #16]
   284c0:	stp	x20, x19, [sp, #32]
   284c4:	mov	x29, sp
   284c8:	cbz	x0, 28530 <rl_dump_variables@@Base+0xfe8>
   284cc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   284d0:	ldrb	w8, [x0]
   284d4:	ldr	x21, [x21, #2704]
   284d8:	mov	x19, x0
   284dc:	ldr	x0, [x21]
   284e0:	cbz	w8, 28558 <rl_dump_variables@@Base+0x1010>
   284e4:	cbz	x0, 284ec <rl_dump_variables@@Base+0xfa4>
   284e8:	bl	171b0 <free@plt>
   284ec:	mov	x0, x19
   284f0:	bl	16440 <strlen@plt>
   284f4:	mov	w8, #0x1                   	// #1
   284f8:	bfi	x8, x0, #1, #63
   284fc:	mov	x0, x8
   28500:	bl	16bf0 <xmalloc@plt>
   28504:	str	x0, [x21]
   28508:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2850c:	ldr	x20, [x20, #2672]
   28510:	mov	x1, x0
   28514:	mov	x0, x19
   28518:	mov	x2, x20
   2851c:	bl	17050 <rl_translate_keyseq@plt>
   28520:	ldr	x8, [x21]
   28524:	ldrsw	x9, [x20]
   28528:	strb	wzr, [x8, x9]
   2852c:	b	2857c <rl_dump_variables@@Base+0x1034>
   28530:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28534:	ldr	x19, [x19, #2704]
   28538:	ldr	x0, [x19]
   2853c:	cbz	x0, 28544 <rl_dump_variables@@Base+0xffc>
   28540:	bl	171b0 <free@plt>
   28544:	str	xzr, [x19]
   28548:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2854c:	ldr	x8, [x8, #2672]
   28550:	str	wzr, [x8]
   28554:	b	2857c <rl_dump_variables@@Base+0x1034>
   28558:	cbz	x0, 28560 <rl_dump_variables@@Base+0x1018>
   2855c:	bl	171b0 <free@plt>
   28560:	mov	w0, #0x1                   	// #1
   28564:	bl	16bf0 <xmalloc@plt>
   28568:	str	x0, [x21]
   2856c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28570:	ldr	x8, [x8, #2672]
   28574:	str	wzr, [x8]
   28578:	strb	wzr, [x0]
   2857c:	ldp	x20, x19, [sp, #32]
   28580:	ldr	x21, [sp, #16]
   28584:	mov	w0, wzr
   28588:	ldp	x29, x30, [sp], #48
   2858c:	ret

0000000000028590 <_rl_scxt_alloc@@Base>:
   28590:	stp	x29, x30, [sp, #-48]!
   28594:	stp	x20, x19, [sp, #32]
   28598:	mov	w20, w0
   2859c:	mov	w0, #0xa8                  	// #168
   285a0:	str	x21, [sp, #16]
   285a4:	mov	x29, sp
   285a8:	mov	w19, w1
   285ac:	bl	16bf0 <xmalloc@plt>
   285b0:	stp	w20, w19, [x0]
   285b4:	str	xzr, [x0, #40]
   285b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   285bc:	ldr	x8, [x8, #3512]
   285c0:	movi	v0.2d, #0x0
   285c4:	stur	q0, [x0, #8]
   285c8:	stur	q0, [x0, #24]
   285cc:	ldr	w8, [x8]
   285d0:	mov	x21, x0
   285d4:	str	w8, [x0, #48]
   285d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   285dc:	ldr	x8, [x8, #3272]
   285e0:	ldr	w8, [x8]
   285e4:	str	w8, [x0, #52]
   285e8:	bl	165a0 <where_history@plt>
   285ec:	stp	w0, w0, [x21, #56]
   285f0:	stp	xzr, xzr, [x21, #64]
   285f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   285f8:	ldr	x8, [x8, #1992]
   285fc:	mov	x0, x21
   28600:	ldr	x8, [x8]
   28604:	stp	xzr, xzr, [x21, #96]
   28608:	stp	xzr, xzr, [x21, #152]
   2860c:	str	xzr, [x21, #144]
   28610:	stp	x8, x8, [x21, #80]
   28614:	ldp	x20, x19, [sp, #32]
   28618:	ldr	x21, [sp, #16]
   2861c:	ldp	x29, x30, [sp], #48
   28620:	ret

0000000000028624 <_rl_scxt_dispose@@Base>:
   28624:	stp	x29, x30, [sp, #-32]!
   28628:	str	x19, [sp, #16]
   2862c:	mov	x19, x0
   28630:	ldr	x0, [x0, #8]
   28634:	mov	x29, sp
   28638:	cbz	x0, 28640 <_rl_scxt_dispose@@Base+0x1c>
   2863c:	bl	171b0 <free@plt>
   28640:	ldr	x0, [x19, #32]
   28644:	cbz	x0, 2864c <_rl_scxt_dispose@@Base+0x28>
   28648:	bl	171b0 <free@plt>
   2864c:	ldr	x0, [x19, #24]
   28650:	cbz	x0, 28658 <_rl_scxt_dispose@@Base+0x34>
   28654:	bl	171b0 <free@plt>
   28658:	mov	x0, x19
   2865c:	ldr	x19, [sp, #16]
   28660:	ldp	x29, x30, [sp], #32
   28664:	b	169f0 <xfree@plt>

0000000000028668 <rl_reverse_search_history@@Base>:
   28668:	neg	w0, w0
   2866c:	b	28670 <rl_reverse_search_history@@Base+0x8>
   28670:	stp	x29, x30, [sp, #-64]!
   28674:	stp	x24, x23, [sp, #16]
   28678:	stp	x22, x21, [sp, #32]
   2867c:	stp	x20, x19, [sp, #48]
   28680:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28684:	ldr	x22, [x22, #2984]
   28688:	mov	w20, w0
   2868c:	mov	w0, #0xa8                  	// #168
   28690:	mov	x29, sp
   28694:	ldr	x8, [x22]
   28698:	orr	x8, x8, #0x80
   2869c:	str	x8, [x22]
   286a0:	bl	16bf0 <xmalloc@plt>
   286a4:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   286a8:	ldr	x23, [x23, #3512]
   286ac:	mov	w8, #0x1                   	// #1
   286b0:	movi	v0.2d, #0x0
   286b4:	mov	x21, x0
   286b8:	str	w8, [x0]
   286bc:	str	q0, [x21, #4]!
   286c0:	stur	q0, [x0, #20]
   286c4:	str	q0, [x0, #32]
   286c8:	ldr	w8, [x23]
   286cc:	mov	x19, x0
   286d0:	str	w8, [x0, #48]
   286d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   286d8:	ldr	x8, [x8, #3272]
   286dc:	ldr	w8, [x8]
   286e0:	str	w8, [x0, #52]
   286e4:	bl	165a0 <where_history@plt>
   286e8:	stp	w0, w0, [x19, #56]
   286ec:	stp	xzr, xzr, [x19, #64]
   286f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   286f4:	ldr	x8, [x8, #1992]
   286f8:	ldr	x8, [x8]
   286fc:	stp	xzr, xzr, [x19, #96]
   28700:	stp	xzr, xzr, [x19, #152]
   28704:	str	xzr, [x19, #144]
   28708:	stp	x8, x8, [x19, #80]
   2870c:	tbz	w20, #31, 2871c <rl_reverse_search_history@@Base+0xb4>
   28710:	ldr	w8, [x21]
   28714:	orr	w8, w8, #0x1
   28718:	str	w8, [x21]
   2871c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28720:	ldr	x8, [x8, #4040]
   28724:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   28728:	add	x9, x9, #0xdd8
   2872c:	ldr	x8, [x8]
   28730:	cmp	x8, #0x0
   28734:	csel	x8, x9, x8, eq  // eq = none
   28738:	str	x8, [x19, #160]
   2873c:	bl	16fb0 <history_list@plt>
   28740:	mov	x21, x0
   28744:	bl	17960 <rl_maybe_replace_line@plt>
   28748:	cbz	x21, 28764 <rl_reverse_search_history@@Base+0xfc>
   2874c:	mov	w8, #0xffffffff            	// #-1
   28750:	mov	x9, x21
   28754:	ldr	x10, [x9], #8
   28758:	add	w8, w8, #0x1
   2875c:	cbnz	x10, 28754 <rl_reverse_search_history@@Base+0xec>
   28760:	b	28768 <rl_reverse_search_history@@Base+0x100>
   28764:	mov	w8, wzr
   28768:	str	w8, [x19, #40]
   2876c:	add	w8, w8, #0x1
   28770:	lsl	x0, x8, #3
   28774:	bl	16bf0 <xmalloc@plt>
   28778:	ldr	w8, [x19, #40]
   2877c:	str	x0, [x19, #24]
   28780:	cmp	w8, #0x1
   28784:	b.lt	287a4 <rl_reverse_search_history@@Base+0x13c>  // b.tstop
   28788:	ldr	x9, [x21]
   2878c:	cmp	w8, #0x1
   28790:	ldr	x9, [x9]
   28794:	str	x9, [x0]
   28798:	b.ne	287ac <rl_reverse_search_history@@Base+0x144>  // b.any
   2879c:	mov	w24, #0x1                   	// #1
   287a0:	b	287d4 <rl_reverse_search_history@@Base+0x16c>
   287a4:	mov	x24, xzr
   287a8:	b	287d4 <rl_reverse_search_history@@Base+0x16c>
   287ac:	mov	w9, #0x1                   	// #1
   287b0:	lsl	x10, x9, #3
   287b4:	ldr	x11, [x21, x10]
   287b8:	ldr	x12, [x19, #24]
   287bc:	add	x9, x9, #0x1
   287c0:	cmp	x8, x9
   287c4:	ldr	x11, [x11]
   287c8:	str	x11, [x12, x10]
   287cc:	b.ne	287b0 <rl_reverse_search_history@@Base+0x148>  // b.any
   287d0:	mov	x24, x8
   287d4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   287d8:	ldr	x9, [x9, #3672]
   287dc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   287e0:	ldr	x9, [x9]
   287e4:	ldr	x21, [x21, #2480]
   287e8:	cbz	x9, 287fc <rl_reverse_search_history@@Base+0x194>
   287ec:	ldr	x9, [x9]
   287f0:	ldr	x10, [x19, #24]
   287f4:	str	x9, [x10, x24, lsl #3]
   287f8:	b	28824 <rl_reverse_search_history@@Base+0x1bc>
   287fc:	ldr	x0, [x21]
   28800:	bl	16440 <strlen@plt>
   28804:	add	x0, x0, #0x1
   28808:	bl	16bf0 <xmalloc@plt>
   2880c:	str	x0, [x19, #32]
   28810:	ldr	x1, [x21]
   28814:	bl	17480 <strcpy@plt>
   28818:	ldp	x9, x8, [x19, #24]
   2881c:	str	x8, [x9, x24, lsl #3]
   28820:	ldr	w8, [x19, #40]
   28824:	ldr	w9, [x19, #56]
   28828:	add	w8, w8, #0x1
   2882c:	str	w8, [x19, #40]
   28830:	str	w9, [x19, #96]
   28834:	bl	17780 <rl_save_prompt@plt>
   28838:	mov	w8, #0x80                  	// #128
   2883c:	mov	w0, #0x80                  	// #128
   28840:	str	w8, [x19, #20]
   28844:	bl	16bf0 <xmalloc@plt>
   28848:	cmp	w20, #0x0
   2884c:	mov	w8, #0x1                   	// #1
   28850:	cneg	w8, w8, lt  // lt = tstop
   28854:	str	x0, [x19, #8]
   28858:	str	wzr, [x19, #16]
   2885c:	strb	wzr, [x0]
   28860:	str	w8, [x19, #100]
   28864:	ldr	x0, [x21]
   28868:	str	x0, [x19, #144]
   2886c:	bl	16440 <strlen@plt>
   28870:	str	w0, [x19, #152]
   28874:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28878:	ldr	w8, [x23]
   2887c:	ldr	x9, [x9, #3944]
   28880:	str	w8, [x19, #156]
   28884:	str	x19, [x9]
   28888:	ldr	x0, [x19, #8]
   2888c:	ldr	w1, [x19, #4]
   28890:	bl	294d0 <_rl_isearch_dispatch@@Base+0xad8>
   28894:	ldr	x8, [x22]
   28898:	tbnz	w8, #19, 28920 <rl_reverse_search_history@@Base+0x2b8>
   2889c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   288a0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   288a4:	ldr	x21, [x21, #1896]
   288a8:	ldr	x23, [x23, #2808]
   288ac:	add	x20, x19, #0x70
   288b0:	orr	x8, x8, #0x40
   288b4:	str	x8, [x22]
   288b8:	bl	16e60 <rl_read_key@plt>
   288bc:	str	w0, [x19, #108]
   288c0:	ldr	x8, [x22]
   288c4:	and	x8, x8, #0xffffffffffffffbf
   288c8:	str	x8, [x22]
   288cc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   288d0:	cmp	x0, #0x2
   288d4:	b.cc	288f4 <rl_reverse_search_history@@Base+0x28c>  // b.lo, b.ul, b.last
   288d8:	ldr	w8, [x21]
   288dc:	cbnz	w8, 288f4 <rl_reverse_search_history@@Base+0x28c>
   288e0:	ldr	w0, [x19, #108]
   288e4:	mov	w2, #0x10                  	// #16
   288e8:	mov	x1, x20
   288ec:	bl	16700 <_rl_read_mbstring@plt>
   288f0:	str	w0, [x19, #108]
   288f4:	ldr	w8, [x23]
   288f8:	cbz	w8, 28904 <rl_reverse_search_history@@Base+0x29c>
   288fc:	ldr	w0, [x23]
   28900:	bl	17460 <_rl_signal_handler@plt>
   28904:	ldr	w1, [x19, #108]
   28908:	mov	x0, x19
   2890c:	bl	163e0 <_rl_isearch_dispatch@plt>
   28910:	cmp	w0, #0x1
   28914:	b.lt	28938 <rl_reverse_search_history@@Base+0x2d0>  // b.tstop
   28918:	ldr	x8, [x22]
   2891c:	b	288b0 <rl_reverse_search_history@@Base+0x248>
   28920:	ldp	x20, x19, [sp, #48]
   28924:	ldp	x22, x21, [sp, #32]
   28928:	ldp	x24, x23, [sp, #16]
   2892c:	mov	w0, wzr
   28930:	ldp	x29, x30, [sp], #64
   28934:	ret
   28938:	mov	w1, w0
   2893c:	mov	x0, x19
   28940:	ldp	x20, x19, [sp, #48]
   28944:	ldp	x22, x21, [sp, #32]
   28948:	ldp	x24, x23, [sp, #16]
   2894c:	ldp	x29, x30, [sp], #64
   28950:	b	167a0 <_rl_isearch_cleanup@plt>

0000000000028954 <rl_forward_search_history@@Base>:
   28954:	b	28670 <rl_reverse_search_history@@Base+0x8>

0000000000028958 <_rl_search_getchar@@Base>:
   28958:	stp	x29, x30, [sp, #-48]!
   2895c:	str	x21, [sp, #16]
   28960:	stp	x20, x19, [sp, #32]
   28964:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28968:	ldr	x21, [x21, #2984]
   2896c:	mov	x29, sp
   28970:	mov	x19, x0
   28974:	ldr	x8, [x21]
   28978:	orr	x8, x8, #0x40
   2897c:	str	x8, [x21]
   28980:	bl	16e60 <rl_read_key@plt>
   28984:	str	w0, [x19, #108]
   28988:	ldr	x8, [x21]
   2898c:	mov	w20, w0
   28990:	and	x8, x8, #0xffffffffffffffbf
   28994:	str	x8, [x21]
   28998:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2899c:	cmp	x0, #0x2
   289a0:	b.cc	289cc <_rl_search_getchar@@Base+0x74>  // b.lo, b.ul, b.last
   289a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   289a8:	ldr	x8, [x8, #1896]
   289ac:	ldr	w8, [x8]
   289b0:	cbnz	w8, 289cc <_rl_search_getchar@@Base+0x74>
   289b4:	ldr	w0, [x19, #108]
   289b8:	add	x1, x19, #0x70
   289bc:	mov	w2, #0x10                  	// #16
   289c0:	bl	16700 <_rl_read_mbstring@plt>
   289c4:	mov	w20, w0
   289c8:	str	w0, [x19, #108]
   289cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   289d0:	ldr	x8, [x8, #2808]
   289d4:	ldr	w9, [x8]
   289d8:	cbz	w9, 289e4 <_rl_search_getchar@@Base+0x8c>
   289dc:	ldr	w0, [x8]
   289e0:	bl	17460 <_rl_signal_handler@plt>
   289e4:	mov	w0, w20
   289e8:	ldp	x20, x19, [sp, #32]
   289ec:	ldr	x21, [sp, #16]
   289f0:	ldp	x29, x30, [sp], #48
   289f4:	ret

00000000000289f8 <_rl_isearch_dispatch@@Base>:
   289f8:	sub	sp, sp, #0x60
   289fc:	stp	x20, x19, [sp, #80]
   28a00:	mov	x19, x0
   28a04:	stp	x29, x30, [sp, #16]
   28a08:	stp	x26, x25, [sp, #32]
   28a0c:	stp	x24, x23, [sp, #48]
   28a10:	stp	x22, x21, [sp, #64]
   28a14:	add	x29, sp, #0x10
   28a18:	tbnz	w1, #31, 28ad4 <_rl_isearch_dispatch@@Base+0xdc>
   28a1c:	ldr	x8, [x19, #80]
   28a20:	mov	w21, w1
   28a24:	lsl	x22, x21, #4
   28a28:	mov	w20, w1
   28a2c:	ldrb	w9, [x8, x22]
   28a30:	cmp	w9, #0x1
   28a34:	b.ne	28b2c <_rl_isearch_dispatch@@Base+0x134>  // b.any
   28a38:	ldr	x0, [x19, #160]
   28a3c:	ldr	w1, [x19, #108]
   28a40:	bl	17380 <strchr@plt>
   28a44:	cbnz	x0, 28b30 <_rl_isearch_dispatch@@Base+0x138>
   28a48:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28a4c:	ldr	x23, [x23, #3760]
   28a50:	ldr	w8, [x23]
   28a54:	cmp	w8, #0x1
   28a58:	b.lt	28a7c <_rl_isearch_dispatch@@Base+0x84>  // b.tstop
   28a5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28a60:	ldr	x8, [x8, #2984]
   28a64:	mov	w9, #0xa                   	// #10
   28a68:	ldrb	w8, [x8, #2]
   28a6c:	tst	w8, w9
   28a70:	b.ne	28a7c <_rl_isearch_dispatch@@Base+0x84>  // b.any
   28a74:	bl	17290 <_rl_pushed_input_available@plt>
   28a78:	cbz	w0, 28afc <_rl_isearch_dispatch@@Base+0x104>
   28a7c:	ldr	x8, [x19, #80]
   28a80:	ldr	w9, [x19, #4]
   28a84:	str	x8, [x19, #88]
   28a88:	add	x8, x8, x21, lsl #4
   28a8c:	ldr	x8, [x8, #8]
   28a90:	orr	w9, w9, #0x8
   28a94:	str	w9, [x19, #4]
   28a98:	str	w20, [x19, #104]
   28a9c:	str	x8, [x19, #80]
   28aa0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   28aa4:	cmp	x0, #0x2
   28aa8:	mov	w0, #0x1                   	// #1
   28aac:	b.cc	293f0 <_rl_isearch_dispatch@@Base+0x9f8>  // b.lo, b.ul, b.last
   28ab0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28ab4:	ldr	x8, [x8, #1896]
   28ab8:	ldr	w8, [x8]
   28abc:	cbnz	w8, 293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   28ac0:	ldrb	w8, [x19, #113]
   28ac4:	cbz	w8, 28af0 <_rl_isearch_dispatch@@Base+0xf8>
   28ac8:	ldr	q0, [x19, #112]
   28acc:	str	q0, [x19, #128]
   28ad0:	b	293ec <_rl_isearch_dispatch@@Base+0x9f4>
   28ad4:	ldr	w8, [x19, #4]
   28ad8:	ldr	w9, [x19, #60]
   28adc:	mov	w0, #0xffffffff            	// #-1
   28ae0:	orr	w8, w8, #0x4
   28ae4:	str	w9, [x19, #96]
   28ae8:	str	w8, [x19, #4]
   28aec:	b	293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   28af0:	strb	w20, [x19, #128]
   28af4:	strb	wzr, [x19, #129]
   28af8:	b	293ec <_rl_isearch_dispatch@@Base+0x9f4>
   28afc:	ldr	x8, [x19, #80]
   28b00:	add	x8, x8, x21, lsl #4
   28b04:	ldr	x8, [x8, #8]
   28b08:	ldr	x8, [x8, #4104]
   28b0c:	cbz	x8, 28a7c <_rl_isearch_dispatch@@Base+0x84>
   28b10:	ldr	w8, [x23]
   28b14:	mov	w9, #0x3e8                 	// #1000
   28b18:	mul	w0, w8, w9
   28b1c:	bl	16cd0 <_rl_input_queued@plt>
   28b20:	cbnz	w0, 28a7c <_rl_isearch_dispatch@@Base+0x84>
   28b24:	ldr	x8, [x19, #80]
   28b28:	ldrb	w9, [x8, x22]
   28b2c:	cbz	w9, 28b74 <_rl_isearch_dispatch@@Base+0x17c>
   28b30:	mov	x8, xzr
   28b34:	ldr	w10, [x19, #4]
   28b38:	tbz	w10, #3, 28cf4 <_rl_isearch_dispatch@@Base+0x2fc>
   28b3c:	ldr	w0, [x19, #108]
   28b40:	ldr	x9, [x19, #88]
   28b44:	and	w10, w10, #0xfffffff7
   28b48:	str	w10, [x19, #4]
   28b4c:	cmp	w0, #0x1
   28b50:	str	x9, [x19, #80]
   28b54:	b.lt	28cf4 <_rl_isearch_dispatch@@Base+0x2fc>  // b.tstop
   28b58:	ldr	w10, [x19, #104]
   28b5c:	cmp	w10, #0x1f
   28b60:	b.gt	28c18 <_rl_isearch_dispatch@@Base+0x220>
   28b64:	tbnz	w10, #7, 28c18 <_rl_isearch_dispatch@@Base+0x220>
   28b68:	cmp	w10, #0x7
   28b6c:	b.eq	28c34 <_rl_isearch_dispatch@@Base+0x23c>  // b.none
   28b70:	b	28c64 <_rl_isearch_dispatch@@Base+0x26c>
   28b74:	add	x8, x8, x21, lsl #4
   28b78:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28b7c:	ldr	x8, [x8, #8]
   28b80:	ldr	x9, [x9, #2568]
   28b84:	cmp	x8, x9
   28b88:	b.eq	28c70 <_rl_isearch_dispatch@@Base+0x278>  // b.none
   28b8c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28b90:	ldr	x9, [x9, #2320]
   28b94:	cmp	x8, x9
   28b98:	b.eq	28c88 <_rl_isearch_dispatch@@Base+0x290>  // b.none
   28b9c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28ba0:	ldr	x9, [x9, #2360]
   28ba4:	cmp	x8, x9
   28ba8:	b.eq	28ca4 <_rl_isearch_dispatch@@Base+0x2ac>  // b.none
   28bac:	cmp	w20, #0x7
   28bb0:	b.eq	290e0 <_rl_isearch_dispatch@@Base+0x6e8>  // b.none
   28bb4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28bb8:	ldr	x9, [x9, #3744]
   28bbc:	cmp	x8, x9
   28bc0:	b.eq	290e0 <_rl_isearch_dispatch@@Base+0x6e8>  // b.none
   28bc4:	cmp	w20, #0x17
   28bc8:	b.eq	2916c <_rl_isearch_dispatch@@Base+0x774>  // b.none
   28bcc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28bd0:	ldr	x9, [x9, #2864]
   28bd4:	cmp	x8, x9
   28bd8:	b.eq	2916c <_rl_isearch_dispatch@@Base+0x774>  // b.none
   28bdc:	cmp	w20, #0x19
   28be0:	b.eq	291f0 <_rl_isearch_dispatch@@Base+0x7f8>  // b.none
   28be4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28be8:	ldr	x9, [x9, #2608]
   28bec:	cmp	x8, x9
   28bf0:	b.eq	291f0 <_rl_isearch_dispatch@@Base+0x7f8>  // b.none
   28bf4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28bf8:	ldr	x9, [x9, #2952]
   28bfc:	cmp	x8, x9
   28c00:	b.ne	28b34 <_rl_isearch_dispatch@@Base+0x13c>  // b.any
   28c04:	mov	w8, #0xfffffff9            	// #-7
   28c08:	str	w8, [x19, #108]
   28c0c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28c10:	ldr	x8, [x8, #2952]
   28c14:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   28c18:	cmp	w10, #0x7f
   28c1c:	b.eq	28c64 <_rl_isearch_dispatch@@Base+0x26c>  // b.none
   28c20:	and	w11, w10, #0xffffff80
   28c24:	cmp	w11, #0x80
   28c28:	b.eq	28c64 <_rl_isearch_dispatch@@Base+0x26c>  // b.none
   28c2c:	cmp	w10, #0x1
   28c30:	b.lt	28cf4 <_rl_isearch_dispatch@@Base+0x2fc>  // b.tstop
   28c34:	lsl	x10, x10, #4
   28c38:	ldrb	w9, [x9, x10]
   28c3c:	cmp	w9, #0x1
   28c40:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28c44:	ldr	x9, [x9, #2552]
   28c48:	b.ne	28c58 <_rl_isearch_dispatch@@Base+0x260>  // b.any
   28c4c:	cbz	x8, 28cb8 <_rl_isearch_dispatch@@Base+0x2c0>
   28c50:	cmp	x8, x9
   28c54:	b.eq	28cb8 <_rl_isearch_dispatch@@Base+0x2c0>  // b.none
   28c58:	cmp	x8, x9
   28c5c:	b.eq	28cf4 <_rl_isearch_dispatch@@Base+0x2fc>  // b.none
   28c60:	cbz	x8, 28cf4 <_rl_isearch_dispatch@@Base+0x2fc>
   28c64:	bl	17220 <rl_stuff_char@plt>
   28c68:	ldr	w0, [x19, #104]
   28c6c:	b	28e08 <_rl_isearch_dispatch@@Base+0x410>
   28c70:	ldr	w8, [x19, #4]
   28c74:	orr	w8, w8, #0xfffffffe
   28c78:	str	w8, [x19, #108]
   28c7c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28c80:	ldr	x8, [x8, #2568]
   28c84:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   28c88:	ldr	w8, [x19, #4]
   28c8c:	mvn	w8, w8
   28c90:	orr	w8, w8, #0xfffffffe
   28c94:	str	w8, [x19, #108]
   28c98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28c9c:	ldr	x8, [x8, #2320]
   28ca0:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   28ca4:	mov	w8, #0xfffffffd            	// #-3
   28ca8:	str	w8, [x19, #108]
   28cac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28cb0:	ldr	x8, [x8, #2360]
   28cb4:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   28cb8:	bl	16b90 <rl_execute_next@plt>
   28cbc:	ldr	w8, [x19, #104]
   28cc0:	str	w8, [x19, #108]
   28cc4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   28cc8:	cmp	x0, #0x2
   28ccc:	b.cc	28cf0 <_rl_isearch_dispatch@@Base+0x2f8>  // b.lo, b.ul, b.last
   28cd0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28cd4:	ldr	x8, [x8, #1896]
   28cd8:	ldr	w8, [x8]
   28cdc:	cbnz	w8, 28cf0 <_rl_isearch_dispatch@@Base+0x2f8>
   28ce0:	ldrb	w8, [x19, #129]
   28ce4:	cbz	w8, 29204 <_rl_isearch_dispatch@@Base+0x80c>
   28ce8:	ldr	q0, [x19, #128]
   28cec:	str	q0, [x19, #112]
   28cf0:	str	wzr, [x19, #104]
   28cf4:	ldr	w20, [x19, #108]
   28cf8:	cmp	w20, #0x1
   28cfc:	b.lt	28d30 <_rl_isearch_dispatch@@Base+0x338>  // b.tstop
   28d00:	ldr	x0, [x19, #160]
   28d04:	mov	w1, w20
   28d08:	bl	17380 <strchr@plt>
   28d0c:	cbz	x0, 28d30 <_rl_isearch_dispatch@@Base+0x338>
   28d10:	cmp	w20, #0x1b
   28d14:	b.ne	28d8c <_rl_isearch_dispatch@@Base+0x394>  // b.any
   28d18:	bl	17290 <_rl_pushed_input_available@plt>
   28d1c:	cbnz	w0, 28d28 <_rl_isearch_dispatch@@Base+0x330>
   28d20:	bl	16460 <_rl_input_available@plt>
   28d24:	cbz	w0, 293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   28d28:	mov	w0, #0x1b                  	// #27
   28d2c:	b	28e08 <_rl_isearch_dispatch@@Base+0x410>
   28d30:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   28d34:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28d38:	ldr	w8, [x19, #108]
   28d3c:	ldr	x22, [x22, #1896]
   28d40:	cmp	x0, #0x2
   28d44:	b.cc	28d70 <_rl_isearch_dispatch@@Base+0x378>  // b.lo, b.ul, b.last
   28d48:	ldr	w9, [x22]
   28d4c:	cbnz	w9, 28d70 <_rl_isearch_dispatch@@Base+0x378>
   28d50:	tbnz	w8, #31, 28da8 <_rl_isearch_dispatch@@Base+0x3b0>
   28d54:	ldrb	w9, [x19, #112]
   28d58:	cbz	w9, 28da8 <_rl_isearch_dispatch@@Base+0x3b0>
   28d5c:	ldrb	w9, [x19, #113]
   28d60:	cbnz	w9, 28da8 <_rl_isearch_dispatch@@Base+0x3b0>
   28d64:	cmp	w8, #0x1f
   28d68:	b.le	28d7c <_rl_isearch_dispatch@@Base+0x384>
   28d6c:	b	28d94 <_rl_isearch_dispatch@@Base+0x39c>
   28d70:	tbnz	w8, #31, 28da8 <_rl_isearch_dispatch@@Base+0x3b0>
   28d74:	cmp	w8, #0x1f
   28d78:	b.gt	28d94 <_rl_isearch_dispatch@@Base+0x39c>
   28d7c:	tbnz	w8, #7, 28d94 <_rl_isearch_dispatch@@Base+0x39c>
   28d80:	cmp	w8, #0x7
   28d84:	b.eq	28e14 <_rl_isearch_dispatch@@Base+0x41c>  // b.none
   28d88:	b	28e04 <_rl_isearch_dispatch@@Base+0x40c>
   28d8c:	mov	w0, wzr
   28d90:	b	293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   28d94:	cmp	w8, #0x7f
   28d98:	b.eq	28e04 <_rl_isearch_dispatch@@Base+0x40c>  // b.none
   28d9c:	and	w9, w8, #0xffffff80
   28da0:	cmp	w9, #0x80
   28da4:	b.eq	28e04 <_rl_isearch_dispatch@@Base+0x40c>  // b.none
   28da8:	add	w8, w8, #0x7
   28dac:	cmp	w8, #0x6
   28db0:	b.hi	28e14 <_rl_isearch_dispatch@@Base+0x41c>  // b.pmore
   28db4:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   28db8:	add	x9, x9, #0xdbd
   28dbc:	adr	x10, 28dcc <_rl_isearch_dispatch@@Base+0x3d4>
   28dc0:	ldrb	w11, [x9, x8]
   28dc4:	add	x10, x10, x11, lsl #2
   28dc8:	br	x10
   28dcc:	add	x0, sp, #0x8
   28dd0:	bl	16fc0 <_rl_bracketed_text@plt>
   28dd4:	mov	x20, x0
   28dd8:	cbz	x0, 291e4 <_rl_isearch_dispatch@@Base+0x7ec>
   28ddc:	ldrb	w8, [x20]
   28de0:	cbz	w8, 291e4 <_rl_isearch_dispatch@@Base+0x7ec>
   28de4:	ldr	x9, [sp, #8]
   28de8:	ldpsw	x8, x10, [x19, #16]
   28dec:	add	x11, x8, x9
   28df0:	add	x11, x11, #0x1
   28df4:	cmp	x11, x10
   28df8:	b.cs	291a8 <_rl_isearch_dispatch@@Base+0x7b0>  // b.hs, b.nlast
   28dfc:	ldr	x0, [x19, #8]
   28e00:	b	291c8 <_rl_isearch_dispatch@@Base+0x7d0>
   28e04:	mov	w0, w8
   28e08:	bl	16b90 <rl_execute_next@plt>
   28e0c:	mov	w0, wzr
   28e10:	b	293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   28e14:	mov	x21, x19
   28e18:	ldrb	w8, [x21, #112]!
   28e1c:	cbz	w8, 28e40 <_rl_isearch_dispatch@@Base+0x448>
   28e20:	ldrb	w8, [x19, #113]
   28e24:	cbz	w8, 28e40 <_rl_isearch_dispatch@@Base+0x448>
   28e28:	ldrb	w8, [x19, #114]
   28e2c:	cbz	w8, 291a0 <_rl_isearch_dispatch@@Base+0x7a8>
   28e30:	mov	x0, x21
   28e34:	bl	16440 <strlen@plt>
   28e38:	mov	x20, x0
   28e3c:	b	28e44 <_rl_isearch_dispatch@@Base+0x44c>
   28e40:	mov	w20, #0x1                   	// #1
   28e44:	ldp	w9, w8, [x19, #16]
   28e48:	sxtw	x8, w8
   28e4c:	add	w9, w20, w9
   28e50:	add	w9, w9, #0x1
   28e54:	cmp	w9, w8
   28e58:	b.lt	28e70 <_rl_isearch_dispatch@@Base+0x478>  // b.tstop
   28e5c:	ldr	x0, [x19, #8]
   28e60:	add	x1, x8, #0x80
   28e64:	str	w1, [x19, #20]
   28e68:	bl	16a50 <xrealloc@plt>
   28e6c:	str	x0, [x19, #8]
   28e70:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   28e74:	cmp	x0, #0x2
   28e78:	b.cc	28ee8 <_rl_isearch_dispatch@@Base+0x4f0>  // b.lo, b.ul, b.last
   28e7c:	ldr	w8, [x22]
   28e80:	cbnz	w8, 28ee8 <_rl_isearch_dispatch@@Base+0x4f0>
   28e84:	ldrb	w8, [x21]
   28e88:	cbz	w8, 290ec <_rl_isearch_dispatch@@Base+0x6f4>
   28e8c:	ldrb	w9, [x19, #113]
   28e90:	cbz	w9, 290ec <_rl_isearch_dispatch@@Base+0x6f4>
   28e94:	cmp	w20, #0x1
   28e98:	b.lt	29100 <_rl_isearch_dispatch@@Base+0x708>  // b.tstop
   28e9c:	ldrsw	x9, [x19, #16]
   28ea0:	ldr	x10, [x19, #8]
   28ea4:	cmp	w20, #0x1
   28ea8:	add	w11, w9, #0x1
   28eac:	str	w11, [x19, #16]
   28eb0:	strb	w8, [x10, x9]
   28eb4:	b.eq	29100 <_rl_isearch_dispatch@@Base+0x708>  // b.none
   28eb8:	mov	w8, w20
   28ebc:	sub	x8, x8, #0x1
   28ec0:	add	x9, x19, #0x71
   28ec4:	ldrb	w10, [x9], #1
   28ec8:	ldrsw	x11, [x19, #16]
   28ecc:	ldr	x12, [x19, #8]
   28ed0:	subs	x8, x8, #0x1
   28ed4:	add	w13, w11, #0x1
   28ed8:	str	w13, [x19, #16]
   28edc:	strb	w10, [x12, x11]
   28ee0:	b.ne	28ec4 <_rl_isearch_dispatch@@Base+0x4cc>  // b.any
   28ee4:	b	29100 <_rl_isearch_dispatch@@Base+0x708>
   28ee8:	ldrsw	x8, [x19, #16]
   28eec:	ldr	w9, [x19, #108]
   28ef0:	ldr	x10, [x19, #8]
   28ef4:	add	w11, w8, #0x1
   28ef8:	str	w11, [x19, #16]
   28efc:	strb	w9, [x10, x8]
   28f00:	b	29100 <_rl_isearch_dispatch@@Base+0x708>
   28f04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28f08:	ldr	x8, [x8, #3512]
   28f0c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28f10:	ldr	w10, [x19, #16]
   28f14:	ldr	w9, [x8]
   28f18:	ldr	x20, [x20, #2656]
   28f1c:	add	w21, w10, w9
   28f20:	ldr	w8, [x20]
   28f24:	subs	w9, w8, w21
   28f28:	b.le	29228 <_rl_isearch_dispatch@@Base+0x830>
   28f2c:	ldr	w11, [x19, #20]
   28f30:	add	w10, w10, w9
   28f34:	add	w10, w10, #0x2
   28f38:	cmp	w10, w11
   28f3c:	b.lt	28f60 <_rl_isearch_dispatch@@Base+0x568>  // b.tstop
   28f40:	ldr	x0, [x19, #8]
   28f44:	add	w8, w9, w11
   28f48:	add	w8, w8, #0x2
   28f4c:	sxtw	x1, w8
   28f50:	str	w8, [x19, #20]
   28f54:	bl	16a50 <xrealloc@plt>
   28f58:	str	x0, [x19, #8]
   28f5c:	ldr	w8, [x20]
   28f60:	cmp	w21, w8
   28f64:	b.ge	29100 <_rl_isearch_dispatch@@Base+0x708>  // b.tcont
   28f68:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28f6c:	ldr	x9, [x9, #2480]
   28f70:	sxtw	x8, w21
   28f74:	ldr	x10, [x9]
   28f78:	ldrsw	x11, [x19, #16]
   28f7c:	ldr	x12, [x19, #8]
   28f80:	ldrb	w10, [x10, x8]
   28f84:	add	w13, w11, #0x1
   28f88:	str	w13, [x19, #16]
   28f8c:	add	x8, x8, #0x1
   28f90:	strb	w10, [x12, x11]
   28f94:	ldrsw	x10, [x20]
   28f98:	cmp	x8, x10
   28f9c:	b.lt	28f74 <_rl_isearch_dispatch@@Base+0x57c>  // b.tstop
   28fa0:	b	29100 <_rl_isearch_dispatch@@Base+0x708>
   28fa4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28fa8:	ldr	x8, [x8, #3512]
   28fac:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28fb0:	ldr	w9, [x19, #16]
   28fb4:	ldr	w8, [x8]
   28fb8:	ldr	x24, [x24, #2656]
   28fbc:	add	w20, w9, w8
   28fc0:	ldr	w10, [x24]
   28fc4:	cmp	w20, w10
   28fc8:	b.ge	29228 <_rl_isearch_dispatch@@Base+0x830>  // b.tcont
   28fcc:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   28fd0:	ldr	x23, [x23, #2480]
   28fd4:	mov	w1, w20
   28fd8:	ldr	x0, [x23]
   28fdc:	bl	175a0 <_rl_char_value@plt>
   28fe0:	bl	16d30 <_rl_walphabetic@plt>
   28fe4:	cbz	w0, 29228 <_rl_isearch_dispatch@@Base+0x830>
   28fe8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   28fec:	cmp	x0, #0x2
   28ff0:	b.cc	291fc <_rl_isearch_dispatch@@Base+0x804>  // b.lo, b.ul, b.last
   28ff4:	ldr	w8, [x22]
   28ff8:	cbnz	w8, 291fc <_rl_isearch_dispatch@@Base+0x804>
   28ffc:	ldr	x0, [x23]
   29000:	mov	w2, #0x1                   	// #1
   29004:	mov	w3, #0x1                   	// #1
   29008:	mov	w1, w20
   2900c:	b	2940c <_rl_isearch_dispatch@@Base+0xa14>
   29010:	ldr	x8, [x19, #24]
   29014:	ldrsw	x9, [x19, #56]
   29018:	mov	w1, wzr
   2901c:	ldr	x0, [x8, x9, lsl #3]
   29020:	bl	17600 <rl_replace_line@plt>
   29024:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29028:	ldr	w8, [x19, #48]
   2902c:	ldr	x9, [x9, #3512]
   29030:	str	w8, [x9]
   29034:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29038:	ldr	w8, [x19, #52]
   2903c:	ldr	x9, [x9, #3272]
   29040:	str	w8, [x9]
   29044:	bl	173f0 <rl_restore_prompt@plt>
   29048:	bl	17420 <rl_clear_message@plt>
   2904c:	mov	w0, #0xffffffff            	// #-1
   29050:	b	293f0 <_rl_isearch_dispatch@@Base+0x9f8>
   29054:	ldr	w8, [x19, #16]
   29058:	cbz	w8, 29110 <_rl_isearch_dispatch@@Base+0x718>
   2905c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   29060:	ldr	x8, [x19, #8]
   29064:	ldrsw	x1, [x19, #16]
   29068:	cmp	x0, #0x1
   2906c:	b.eq	29178 <_rl_isearch_dispatch@@Base+0x780>  // b.none
   29070:	ldr	w9, [x22]
   29074:	cbnz	w9, 29178 <_rl_isearch_dispatch@@Base+0x780>
   29078:	mov	w2, #0x1                   	// #1
   2907c:	mov	x0, x8
   29080:	bl	16c20 <_rl_find_prev_mbchar@plt>
   29084:	ldr	x8, [x19, #8]
   29088:	tbnz	w0, #31, 29218 <_rl_isearch_dispatch@@Base+0x820>
   2908c:	str	w0, [x19, #16]
   29090:	strb	wzr, [x8, w0, uxtw]
   29094:	b	29220 <_rl_isearch_dispatch@@Base+0x828>
   29098:	ldr	w9, [x19, #100]
   2909c:	ldr	w8, [x19, #4]
   290a0:	neg	w10, w9
   290a4:	cmp	w9, #0x1
   290a8:	str	w10, [x19, #100]
   290ac:	b.lt	29118 <_rl_isearch_dispatch@@Base+0x720>  // b.tstop
   290b0:	orr	w8, w8, #0x1
   290b4:	str	w8, [x19, #4]
   290b8:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   290bc:	ldr	w8, [x19, #16]
   290c0:	cbz	w8, 29124 <_rl_isearch_dispatch@@Base+0x72c>
   290c4:	ldrb	w9, [x19, #4]
   290c8:	ldr	w8, [x19, #156]
   290cc:	tbz	w9, #0, 29188 <_rl_isearch_dispatch@@Base+0x790>
   290d0:	tbnz	w8, #31, 29188 <_rl_isearch_dispatch@@Base+0x790>
   290d4:	sub	w8, w8, #0x1
   290d8:	str	w8, [x19, #156]
   290dc:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   290e0:	mov	w9, #0xfffffffc            	// #-4
   290e4:	str	w9, [x19, #108]
   290e8:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   290ec:	ldrsw	x9, [x19, #16]
   290f0:	ldr	x10, [x19, #8]
   290f4:	add	w11, w9, #0x1
   290f8:	str	w11, [x19, #16]
   290fc:	strb	w8, [x10, x9]
   29100:	ldr	x8, [x19, #8]
   29104:	ldrsw	x9, [x19, #16]
   29108:	strb	wzr, [x8, x9]
   2910c:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   29110:	bl	17390 <rl_ding@plt>
   29114:	b	29220 <_rl_isearch_dispatch@@Base+0x828>
   29118:	and	w8, w8, #0xfffffffe
   2911c:	str	w8, [x19, #4]
   29120:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   29124:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   29128:	ldr	x8, [x20, #976]
   2912c:	cbz	x8, 293ec <_rl_isearch_dispatch@@Base+0x9f4>
   29130:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   29134:	ldrsw	x8, [x21, #984]
   29138:	ldr	x0, [x19, #8]
   2913c:	add	x1, x8, #0x40
   29140:	str	w1, [x19, #20]
   29144:	bl	16a50 <xrealloc@plt>
   29148:	str	x0, [x19, #8]
   2914c:	ldr	x1, [x20, #976]
   29150:	bl	17480 <strcpy@plt>
   29154:	ldr	w8, [x21, #984]
   29158:	ldr	x0, [x19, #8]
   2915c:	ldr	w1, [x19, #4]
   29160:	str	w8, [x19, #16]
   29164:	bl	294d0 <_rl_isearch_dispatch@@Base+0xad8>
   29168:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   2916c:	mov	w9, #0xfffffffb            	// #-5
   29170:	str	w9, [x19, #108]
   29174:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   29178:	sub	x9, x1, #0x1
   2917c:	str	w9, [x19, #16]
   29180:	strb	wzr, [x8, x9]
   29184:	b	29220 <_rl_isearch_dispatch@@Base+0x828>
   29188:	ldr	w9, [x19, #152]
   2918c:	cmp	w8, w9
   29190:	b.eq	29228 <_rl_isearch_dispatch@@Base+0x830>  // b.none
   29194:	add	w8, w8, #0x1
   29198:	str	w8, [x19, #156]
   2919c:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   291a0:	mov	w20, #0x2                   	// #2
   291a4:	b	28e44 <_rl_isearch_dispatch@@Base+0x44c>
   291a8:	ldr	x0, [x19, #8]
   291ac:	add	w8, w9, w10
   291b0:	add	w8, w8, #0x2
   291b4:	sxtw	x1, w8
   291b8:	str	w8, [x19, #20]
   291bc:	bl	16a50 <xrealloc@plt>
   291c0:	ldrsw	x8, [x19, #16]
   291c4:	str	x0, [x19, #8]
   291c8:	add	x0, x0, x8
   291cc:	mov	x1, x20
   291d0:	bl	17480 <strcpy@plt>
   291d4:	ldr	w8, [sp, #8]
   291d8:	ldr	w9, [x19, #16]
   291dc:	add	w8, w9, w8
   291e0:	str	w8, [x19, #16]
   291e4:	mov	x0, x20
   291e8:	bl	171b0 <free@plt>
   291ec:	b	2922c <_rl_isearch_dispatch@@Base+0x834>
   291f0:	mov	w9, #0xfffffffa            	// #-6
   291f4:	str	w9, [x19, #108]
   291f8:	b	28b34 <_rl_isearch_dispatch@@Base+0x13c>
   291fc:	add	w21, w20, #0x1
   29200:	b	29414 <_rl_isearch_dispatch@@Base+0xa1c>
   29204:	ldr	w8, [x19, #108]
   29208:	strb	wzr, [x19, #113]
   2920c:	str	wzr, [x19, #104]
   29210:	strb	w8, [x19, #112]
   29214:	b	28cf4 <_rl_isearch_dispatch@@Base+0x2fc>
   29218:	str	wzr, [x19, #16]
   2921c:	strb	wzr, [x8]
   29220:	ldr	w8, [x19, #16]
   29224:	cbnz	w8, 2922c <_rl_isearch_dispatch@@Base+0x834>
   29228:	bl	17390 <rl_ding@plt>
   2922c:	ldr	w8, [x19, #4]
   29230:	ldrsw	x20, [x19, #16]
   29234:	and	w22, w8, #0xfffffff9
   29238:	str	w22, [x19, #4]
   2923c:	cbz	w20, 293c8 <_rl_isearch_dispatch@@Base+0x9d0>
   29240:	ldp	w21, w23, [x19, #152]
   29244:	mov	w24, w21
   29248:	b	29270 <_rl_isearch_dispatch@@Base+0x878>
   2924c:	orr	w22, w22, #0x4
   29250:	str	w22, [x19, #4]
   29254:	tbnz	w22, #2, 29374 <_rl_isearch_dispatch@@Base+0x97c>
   29258:	sbfx	w8, w22, #0, #1
   2925c:	sub	w9, w21, w20
   29260:	tst	w22, #0x1
   29264:	and	w23, w8, w9
   29268:	csel	w24, w24, w21, eq  // eq = none
   2926c:	str	w23, [x19, #156]
   29270:	sub	w25, w24, w20
   29274:	b	29288 <_rl_isearch_dispatch@@Base+0x890>
   29278:	ldr	w8, [x19, #100]
   2927c:	adds	w23, w8, w23
   29280:	str	w23, [x19, #156]
   29284:	b.mi	292dc <_rl_isearch_dispatch@@Base+0x8e4>  // b.first
   29288:	cmp	w23, #0x0
   2928c:	cset	w8, ge  // ge = tcont
   29290:	cmp	w23, w25
   29294:	cset	w9, le
   29298:	tst	w22, #0x1
   2929c:	csel	w8, w9, w8, eq  // eq = none
   292a0:	cmp	w8, #0x1
   292a4:	b.ne	292e4 <_rl_isearch_dispatch@@Base+0x8ec>  // b.any
   292a8:	ldr	x8, [x19, #144]
   292ac:	ldr	x0, [x19, #8]
   292b0:	add	x1, x8, w23, sxtw
   292b4:	ldrb	w9, [x0]
   292b8:	ldrb	w8, [x1]
   292bc:	cmp	w9, w8
   292c0:	b.ne	29278 <_rl_isearch_dispatch@@Base+0x880>  // b.any
   292c4:	mov	x2, x20
   292c8:	bl	16b40 <strncmp@plt>
   292cc:	cbnz	w0, 29278 <_rl_isearch_dispatch@@Base+0x880>
   292d0:	orr	w22, w22, #0x2
   292d4:	str	w22, [x19, #4]
   292d8:	b	292e4 <_rl_isearch_dispatch@@Base+0x8ec>
   292dc:	mov	w23, wzr
   292e0:	str	wzr, [x19, #156]
   292e4:	tbnz	w22, #1, 2937c <_rl_isearch_dispatch@@Base+0x984>
   292e8:	ldp	w8, w25, [x19, #96]
   292ec:	add	w26, w8, w25
   292f0:	b	29304 <_rl_isearch_dispatch@@Base+0x90c>
   292f4:	cmp	w20, w21
   292f8:	b.le	2936c <_rl_isearch_dispatch@@Base+0x974>
   292fc:	add	w26, w26, w25
   29300:	mov	w24, w21
   29304:	str	w26, [x19, #96]
   29308:	tbnz	w22, #0, 2931c <_rl_isearch_dispatch@@Base+0x924>
   2930c:	ldr	w8, [x19, #40]
   29310:	cmp	w26, w8
   29314:	b.ne	29320 <_rl_isearch_dispatch@@Base+0x928>  // b.any
   29318:	b	2924c <_rl_isearch_dispatch@@Base+0x854>
   2931c:	tbnz	w26, #31, 2924c <_rl_isearch_dispatch@@Base+0x854>
   29320:	ldr	x24, [x19, #24]
   29324:	ldr	x0, [x24, w26, sxtw #3]
   29328:	str	x0, [x19, #144]
   2932c:	bl	16440 <strlen@plt>
   29330:	ldr	x8, [x19, #64]
   29334:	mov	x21, x0
   29338:	str	w21, [x19, #152]
   2933c:	cbz	x8, 292f4 <_rl_isearch_dispatch@@Base+0x8fc>
   29340:	sxtw	x9, w26
   29344:	ldr	x1, [x24, x9, lsl #3]
   29348:	ldrb	w9, [x8]
   2934c:	ldrb	w10, [x1]
   29350:	cmp	w9, w10
   29354:	b.ne	292f4 <_rl_isearch_dispatch@@Base+0x8fc>  // b.any
   29358:	mov	x0, x8
   2935c:	bl	170a0 <strcmp@plt>
   29360:	cmp	w20, w21
   29364:	b.gt	292fc <_rl_isearch_dispatch@@Base+0x904>
   29368:	cbz	w0, 292fc <_rl_isearch_dispatch@@Base+0x904>
   2936c:	mov	w24, w21
   29370:	tbz	w22, #2, 29258 <_rl_isearch_dispatch@@Base+0x860>
   29374:	tbz	w23, #31, 2937c <_rl_isearch_dispatch@@Base+0x984>
   29378:	str	wzr, [x19, #156]
   2937c:	tbnz	w22, #2, 293d4 <_rl_isearch_dispatch@@Base+0x9dc>
   29380:	tbz	w22, #1, 293ec <_rl_isearch_dispatch@@Base+0x9f4>
   29384:	ldrsw	x8, [x19, #96]
   29388:	ldr	x9, [x19, #24]
   2938c:	mov	w1, wzr
   29390:	lsl	x8, x8, #3
   29394:	ldr	x10, [x9, x8]
   29398:	str	x10, [x19, #64]
   2939c:	ldr	x0, [x9, x8]
   293a0:	bl	17600 <rl_replace_line@plt>
   293a4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   293a8:	ldr	w8, [x19, #156]
   293ac:	ldr	x9, [x9, #3512]
   293b0:	str	w8, [x9]
   293b4:	ldr	w8, [x19, #96]
   293b8:	ldr	x0, [x19, #8]
   293bc:	ldr	w1, [x19, #4]
   293c0:	str	w8, [x19, #60]
   293c4:	b	293e8 <_rl_isearch_dispatch@@Base+0x9f0>
   293c8:	orr	w22, w22, #0x4
   293cc:	str	w22, [x19, #4]
   293d0:	tbz	w22, #2, 29380 <_rl_isearch_dispatch@@Base+0x988>
   293d4:	bl	17390 <rl_ding@plt>
   293d8:	ldr	w8, [x19, #60]
   293dc:	ldr	x0, [x19, #8]
   293e0:	ldr	w1, [x19, #4]
   293e4:	str	w8, [x19, #96]
   293e8:	bl	294d0 <_rl_isearch_dispatch@@Base+0xad8>
   293ec:	mov	w0, #0x1                   	// #1
   293f0:	ldp	x20, x19, [sp, #80]
   293f4:	ldp	x22, x21, [sp, #64]
   293f8:	ldp	x24, x23, [sp, #48]
   293fc:	ldp	x26, x25, [sp, #32]
   29400:	ldp	x29, x30, [sp, #16]
   29404:	add	sp, sp, #0x60
   29408:	ret
   2940c:	bl	16c00 <_rl_find_next_mbchar@plt>
   29410:	mov	w21, w0
   29414:	ldr	w8, [x24]
   29418:	cmp	w21, w8
   2941c:	b.ge	29464 <_rl_isearch_dispatch@@Base+0xa6c>  // b.tcont
   29420:	ldr	x0, [x23]
   29424:	mov	w1, w21
   29428:	bl	175a0 <_rl_char_value@plt>
   2942c:	bl	16d30 <_rl_walphabetic@plt>
   29430:	cbz	w0, 29464 <_rl_isearch_dispatch@@Base+0xa6c>
   29434:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   29438:	cmp	x0, #0x2
   2943c:	b.cc	29448 <_rl_isearch_dispatch@@Base+0xa50>  // b.lo, b.ul, b.last
   29440:	ldr	w8, [x22]
   29444:	cbz	w8, 29450 <_rl_isearch_dispatch@@Base+0xa58>
   29448:	add	w21, w21, #0x1
   2944c:	b	29414 <_rl_isearch_dispatch@@Base+0xa1c>
   29450:	ldr	x0, [x23]
   29454:	mov	w2, #0x1                   	// #1
   29458:	mov	w3, #0x1                   	// #1
   2945c:	mov	w1, w21
   29460:	b	2940c <_rl_isearch_dispatch@@Base+0xa14>
   29464:	ldp	w10, w8, [x19, #16]
   29468:	sub	w9, w21, w20
   2946c:	add	w9, w9, #0x2
   29470:	add	w10, w9, w10
   29474:	cmp	w10, w8
   29478:	b.lt	29494 <_rl_isearch_dispatch@@Base+0xa9c>  // b.tstop
   2947c:	ldr	x0, [x19, #8]
   29480:	add	w8, w9, w8
   29484:	sxtw	x1, w8
   29488:	str	w8, [x19, #20]
   2948c:	bl	16a50 <xrealloc@plt>
   29490:	str	x0, [x19, #8]
   29494:	cmp	w21, w20
   29498:	b.le	29100 <_rl_isearch_dispatch@@Base+0x708>
   2949c:	sxtw	x8, w20
   294a0:	sxtw	x9, w21
   294a4:	ldr	x10, [x23]
   294a8:	ldrsw	x11, [x19, #16]
   294ac:	ldr	x12, [x19, #8]
   294b0:	ldrb	w10, [x10, x8]
   294b4:	add	x8, x8, #0x1
   294b8:	add	w13, w11, #0x1
   294bc:	cmp	x9, x8
   294c0:	str	w13, [x19, #16]
   294c4:	strb	w10, [x12, x11]
   294c8:	b.ne	294a4 <_rl_isearch_dispatch@@Base+0xaac>  // b.any
   294cc:	b	29100 <_rl_isearch_dispatch@@Base+0x708>
   294d0:	stp	x29, x30, [sp, #-48]!
   294d4:	stp	x22, x21, [sp, #16]
   294d8:	stp	x20, x19, [sp, #32]
   294dc:	mov	w22, w1
   294e0:	mov	x19, x0
   294e4:	mov	x29, sp
   294e8:	cbz	x0, 29504 <_rl_isearch_dispatch@@Base+0xb0c>
   294ec:	ldrb	w8, [x19]
   294f0:	cbz	w8, 29504 <_rl_isearch_dispatch@@Base+0xb0c>
   294f4:	mov	x0, x19
   294f8:	bl	16440 <strlen@plt>
   294fc:	mov	x21, x0
   29500:	b	29508 <_rl_isearch_dispatch@@Base+0xb10>
   29504:	mov	w21, wzr
   29508:	add	w8, w21, #0x40
   2950c:	sxtw	x0, w8
   29510:	bl	16bf0 <xmalloc@plt>
   29514:	mov	x20, x0
   29518:	mov	w8, #0x28                  	// #40
   2951c:	strb	w8, [x0]
   29520:	tbnz	w22, #2, 29530 <_rl_isearch_dispatch@@Base+0xb38>
   29524:	mov	w8, #0x1                   	// #1
   29528:	tbnz	w22, #0, 2954c <_rl_isearch_dispatch@@Base+0xb54>
   2952c:	b	29568 <_rl_isearch_dispatch@@Base+0xb70>
   29530:	mov	x8, #0x6166                	// #24934
   29534:	movk	x8, #0x6c69, lsl #16
   29538:	movk	x8, #0x6465, lsl #32
   2953c:	movk	x8, #0x20, lsl #48
   29540:	stur	x8, [x20, #1]
   29544:	mov	w8, #0x8                   	// #8
   29548:	tbz	w22, #0, 29568 <_rl_isearch_dispatch@@Base+0xb70>
   2954c:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   29550:	add	x9, x9, #0xdc4
   29554:	ldr	x9, [x9]
   29558:	add	x10, x20, x8
   2955c:	add	w8, w8, #0x8
   29560:	strb	wzr, [x10, #8]
   29564:	str	x9, [x10]
   29568:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   2956c:	add	x9, x9, #0xdcd
   29570:	ldr	x9, [x9]
   29574:	mov	w11, #0x2968                	// #10600
   29578:	add	x10, x20, x8
   2957c:	movk	w11, #0x60, lsl #16
   29580:	add	w22, w8, #0xa
   29584:	str	x9, [x10]
   29588:	stur	w11, [x10, #7]
   2958c:	cbz	x19, 295a0 <_rl_isearch_dispatch@@Base+0xba8>
   29590:	add	x0, x20, x22
   29594:	mov	x1, x19
   29598:	bl	17480 <strcpy@plt>
   2959c:	add	w22, w22, w21
   295a0:	mov	w8, #0x3a27                	// #14887
   295a4:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   295a8:	movk	w8, #0x20, lsl #16
   295ac:	add	x0, x0, #0x2d3
   295b0:	mov	x1, x20
   295b4:	str	w8, [x20, w22, sxtw]
   295b8:	bl	16e50 <rl_message@plt>
   295bc:	mov	x0, x20
   295c0:	bl	169f0 <xfree@plt>
   295c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   295c8:	ldr	x8, [x8, #2664]
   295cc:	ldp	x20, x19, [sp, #32]
   295d0:	ldp	x22, x21, [sp, #16]
   295d4:	ldr	x0, [x8]
   295d8:	ldp	x29, x30, [sp], #48
   295dc:	br	x0

00000000000295e0 <_rl_isearch_cleanup@@Base>:
   295e0:	stp	x29, x30, [sp, #-48]!
   295e4:	stp	x20, x19, [sp, #32]
   295e8:	mov	w19, w1
   295ec:	mov	x20, x0
   295f0:	str	x21, [sp, #16]
   295f4:	mov	x29, sp
   295f8:	tbnz	w1, #31, 296c0 <_rl_isearch_cleanup@@Base+0xe0>
   295fc:	ldr	x8, [x20, #24]
   29600:	ldrsw	x9, [x20, #56]
   29604:	mov	w1, wzr
   29608:	ldr	x0, [x8, x9, lsl #3]
   2960c:	bl	17600 <rl_replace_line@plt>
   29610:	bl	173f0 <rl_restore_prompt@plt>
   29614:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   29618:	ldr	x0, [x21, #976]
   2961c:	cbz	x0, 29624 <_rl_isearch_cleanup@@Base+0x44>
   29620:	bl	171b0 <free@plt>
   29624:	ldr	x8, [x20, #8]
   29628:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2962c:	str	x8, [x21, #976]
   29630:	ldr	w8, [x20, #16]
   29634:	str	w8, [x9, #984]
   29638:	ldp	w9, w8, [x20, #56]
   2963c:	str	xzr, [x20, #8]
   29640:	subs	w0, w8, w9
   29644:	b.ge	29660 <_rl_isearch_cleanup@@Base+0x80>  // b.tcont
   29648:	sub	w0, w9, w8
   2964c:	mov	w1, wzr
   29650:	bl	17030 <rl_get_previous_history@plt>
   29654:	ldr	w0, [x20, #156]
   29658:	tbz	w0, #31, 296a8 <_rl_isearch_cleanup@@Base+0xc8>
   2965c:	b	29670 <_rl_isearch_cleanup@@Base+0x90>
   29660:	mov	w1, wzr
   29664:	bl	17330 <rl_get_next_history@plt>
   29668:	ldr	w0, [x20, #156]
   2966c:	tbz	w0, #31, 296a8 <_rl_isearch_cleanup@@Base+0xc8>
   29670:	ldp	w9, w8, [x20, #56]
   29674:	cmp	w8, w9
   29678:	b.ne	29684 <_rl_isearch_cleanup@@Base+0xa4>  // b.any
   2967c:	ldr	w0, [x20, #48]
   29680:	b	29694 <_rl_isearch_cleanup@@Base+0xb4>
   29684:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29688:	ldr	x8, [x8, #2480]
   2968c:	ldr	x0, [x8]
   29690:	bl	16440 <strlen@plt>
   29694:	str	w0, [x20, #156]
   29698:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2969c:	ldr	w8, [x20, #52]
   296a0:	ldr	x9, [x9, #3272]
   296a4:	str	w8, [x9]
   296a8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   296ac:	ldr	x8, [x8, #3512]
   296b0:	str	w0, [x8]
   296b4:	mov	w0, wzr
   296b8:	bl	16840 <_rl_fix_point@plt>
   296bc:	bl	17420 <rl_clear_message@plt>
   296c0:	ldr	x0, [x20, #8]
   296c4:	cbz	x0, 296cc <_rl_isearch_cleanup@@Base+0xec>
   296c8:	bl	171b0 <free@plt>
   296cc:	ldr	x0, [x20, #32]
   296d0:	cbz	x0, 296d8 <_rl_isearch_cleanup@@Base+0xf8>
   296d4:	bl	171b0 <free@plt>
   296d8:	ldr	x0, [x20, #24]
   296dc:	cbz	x0, 296e4 <_rl_isearch_cleanup@@Base+0x104>
   296e0:	bl	171b0 <free@plt>
   296e4:	mov	x0, x20
   296e8:	bl	169f0 <xfree@plt>
   296ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   296f0:	ldr	x8, [x8, #2984]
   296f4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   296f8:	cmp	w19, #0x0
   296fc:	cset	w0, ne  // ne = any
   29700:	ldr	x9, [x8]
   29704:	ldr	x10, [x10, #3944]
   29708:	ldp	x20, x19, [sp, #32]
   2970c:	ldr	x21, [sp, #16]
   29710:	and	x9, x9, #0xffffffffffffff7f
   29714:	str	xzr, [x10]
   29718:	str	x9, [x8]
   2971c:	ldp	x29, x30, [sp], #48
   29720:	ret

0000000000029724 <_rl_isearch_callback@@Base>:
   29724:	stp	x29, x30, [sp, #-32]!
   29728:	stp	x20, x19, [sp, #16]
   2972c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29730:	ldr	x20, [x20, #2984]
   29734:	mov	x29, sp
   29738:	mov	x19, x0
   2973c:	ldr	x8, [x20]
   29740:	orr	x8, x8, #0x40
   29744:	str	x8, [x20]
   29748:	bl	16e60 <rl_read_key@plt>
   2974c:	str	w0, [x19, #108]
   29750:	ldr	x8, [x20]
   29754:	and	x8, x8, #0xffffffffffffffbf
   29758:	str	x8, [x20]
   2975c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   29760:	cmp	x0, #0x2
   29764:	b.cc	2978c <_rl_isearch_callback@@Base+0x68>  // b.lo, b.ul, b.last
   29768:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2976c:	ldr	x8, [x8, #1896]
   29770:	ldr	w8, [x8]
   29774:	cbnz	w8, 2978c <_rl_isearch_callback@@Base+0x68>
   29778:	ldr	w0, [x19, #108]
   2977c:	add	x1, x19, #0x70
   29780:	mov	w2, #0x10                  	// #16
   29784:	bl	16700 <_rl_read_mbstring@plt>
   29788:	str	w0, [x19, #108]
   2978c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29790:	ldr	x8, [x8, #2808]
   29794:	ldr	w9, [x8]
   29798:	cbz	w9, 297a4 <_rl_isearch_callback@@Base+0x80>
   2979c:	ldr	w0, [x8]
   297a0:	bl	17460 <_rl_signal_handler@plt>
   297a4:	ldr	w1, [x19, #108]
   297a8:	mov	x0, x19
   297ac:	bl	163e0 <_rl_isearch_dispatch@plt>
   297b0:	cmp	w0, #0x0
   297b4:	b.le	297c8 <_rl_isearch_callback@@Base+0xa4>
   297b8:	ldp	x20, x19, [sp, #16]
   297bc:	mov	w0, wzr
   297c0:	ldp	x29, x30, [sp], #32
   297c4:	ret
   297c8:	mov	w1, w0
   297cc:	mov	x0, x19
   297d0:	ldp	x20, x19, [sp, #16]
   297d4:	ldp	x29, x30, [sp], #32
   297d8:	b	167a0 <_rl_isearch_cleanup@plt>

00000000000297dc <rl_redisplay@@Base>:
   297dc:	sub	sp, sp, #0xa0
   297e0:	stp	x29, x30, [sp, #64]
   297e4:	stp	x28, x27, [sp, #80]
   297e8:	stp	x26, x25, [sp, #96]
   297ec:	stp	x24, x23, [sp, #112]
   297f0:	stp	x22, x21, [sp, #128]
   297f4:	stp	x20, x19, [sp, #144]
   297f8:	add	x29, sp, #0x40
   297fc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   29800:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29804:	ldr	x8, [x8, #2944]
   29808:	ldr	w8, [x8]
   2980c:	cbz	w8, 2b358 <rl_redisplay@@Base+0x1b7c>
   29810:	mov	x21, x0
   29814:	bl	163f0 <_rl_block_sigint@plt>
   29818:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2981c:	ldr	x10, [x10, #2984]
   29820:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29824:	ldr	x8, [x10]
   29828:	ldr	x19, [x19, #2384]
   2982c:	orr	x8, x8, #0x1000000
   29830:	ldr	x9, [x19]
   29834:	str	x8, [x10]
   29838:	cbnz	x9, 29848 <rl_redisplay@@Base+0x6c>
   2983c:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   29840:	add	x8, x8, #0xec9
   29844:	str	x8, [x19]
   29848:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2984c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29850:	ldrb	w8, [x8, #1072]
   29854:	ldr	x22, [x22, #2408]
   29858:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   2985c:	tbnz	w8, #0, 298b0 <rl_redisplay@@Base+0xd4>
   29860:	mov	w0, wzr
   29864:	bl	2bbf0 <rl_expand_prompt@@Base+0x180>
   29868:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2986c:	ldr	x8, [x8, #3336]
   29870:	ldr	x9, [x8]
   29874:	cbz	x9, 2987c <rl_redisplay@@Base+0xa0>
   29878:	strb	wzr, [x9]
   2987c:	str	wzr, [x22]
   29880:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29884:	ldr	x9, [x9, #1952]
   29888:	str	wzr, [x20, #1128]
   2988c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29890:	ldr	x10, [x10, #3600]
   29894:	str	wzr, [x9]
   29898:	str	wzr, [x10]
   2989c:	ldr	x8, [x8, #8]
   298a0:	cbz	x8, 298a8 <rl_redisplay@@Base+0xcc>
   298a4:	str	xzr, [x8]
   298a8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   298ac:	str	wzr, [x8, #1120]
   298b0:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   298b4:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   298b8:	ldr	w9, [x23, #1064]
   298bc:	ldr	w10, [x27, #1060]
   298c0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   298c4:	mov	w8, #0xffffffff            	// #-1
   298c8:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   298cc:	str	w8, [x11, #1076]
   298d0:	sub	w9, w9, w10
   298d4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   298d8:	ldr	x8, [x28, #3328]
   298dc:	ldr	x10, [x10, #4056]
   298e0:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   298e4:	str	w9, [x25, #1080]
   298e8:	ldr	x20, [x8]
   298ec:	ldr	w9, [x10]
   298f0:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   298f4:	strb	wzr, [x22, #1084]
   298f8:	str	x21, [sp, #24]
   298fc:	cbz	w9, 29930 <rl_redisplay@@Base+0x154>
   29900:	bl	16a60 <current_history@plt>
   29904:	mov	w26, wzr
   29908:	cbz	x0, 29934 <rl_redisplay@@Base+0x158>
   2990c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29910:	ldr	x8, [x8, #3040]
   29914:	ldr	x8, [x8]
   29918:	cbz	x8, 29934 <rl_redisplay@@Base+0x158>
   2991c:	mov	w8, #0x2a                  	// #42
   29920:	mov	w26, #0x1                   	// #1
   29924:	strh	w8, [x20]
   29928:	strb	w26, [x22, #1084]
   2992c:	b	29934 <rl_redisplay@@Base+0x158>
   29930:	mov	w26, wzr
   29934:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   29938:	ldr	x8, [x8, #3336]
   2993c:	ldr	x9, [x28, #3328]
   29940:	str	x20, [sp, #32]
   29944:	ldr	x8, [x8]
   29948:	ldr	x9, [x9]
   2994c:	ldrb	w8, [x8]
   29950:	ldrb	w9, [x9]
   29954:	cmp	w8, w9
   29958:	b.eq	29968 <rl_redisplay@@Base+0x18c>  // b.none
   2995c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29960:	ldr	x8, [x8, #3064]
   29964:	str	wzr, [x8]
   29968:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2996c:	ldr	x20, [x19]
   29970:	ldr	x8, [x8, #2016]
   29974:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29978:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2997c:	ldr	x8, [x8]
   29980:	cmp	x20, x8
   29984:	b.eq	29a04 <rl_redisplay@@Base+0x228>  // b.none
   29988:	ldr	x8, [x9, #1032]
   2998c:	cbnz	x8, 29a04 <rl_redisplay@@Base+0x228>
   29990:	mov	w1, #0xa                   	// #10
   29994:	mov	x0, x20
   29998:	bl	16ee0 <strrchr@plt>
   2999c:	cbz	x0, 29ac8 <rl_redisplay@@Base+0x2ec>
   299a0:	ldr	w8, [x19, #1088]
   299a4:	mov	x23, x0
   299a8:	add	x21, x0, #0x1
   299ac:	cbz	w8, 29acc <rl_redisplay@@Base+0x2f0>
   299b0:	sub	w24, w21, w20
   299b4:	mov	x0, x20
   299b8:	mov	w1, w24
   299bc:	bl	16d10 <_rl_output_some_chars@plt>
   299c0:	cmp	w24, #0x2
   299c4:	b.lt	299d4 <rl_redisplay@@Base+0x1f8>  // b.tstop
   299c8:	ldurb	w8, [x23, #-1]
   299cc:	cmp	w8, #0xd
   299d0:	b.eq	29acc <rl_redisplay@@Base+0x2f0>  // b.none
   299d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   299d8:	ldr	x8, [x8, #3264]
   299dc:	ldr	x0, [x8]
   299e0:	cbz	x0, 29acc <rl_redisplay@@Base+0x2f0>
   299e4:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   299e8:	ldr	x2, [x2, #2496]
   299ec:	mov	w1, #0x1                   	// #1
   299f0:	bl	16590 <tputs@plt>
   299f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   299f8:	ldr	x8, [x8, #1952]
   299fc:	str	wzr, [x8]
   29a00:	b	29acc <rl_redisplay@@Base+0x2f0>
   29a04:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29a08:	ldr	x20, [x8, #1040]
   29a0c:	cbz	x20, 29a2c <rl_redisplay@@Base+0x250>
   29a10:	ldr	w8, [x19, #1088]
   29a14:	cbz	w8, 29a2c <rl_redisplay@@Base+0x250>
   29a18:	mov	x0, x20
   29a1c:	bl	16440 <strlen@plt>
   29a20:	mov	x1, x0
   29a24:	mov	x0, x20
   29a28:	bl	16d10 <_rl_output_some_chars@plt>
   29a2c:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   29a30:	ldr	w8, [x19, #1048]
   29a34:	cmp	w8, #0x1
   29a38:	b.lt	29b78 <rl_redisplay@@Base+0x39c>  // b.tstop
   29a3c:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   29a40:	ldr	w11, [x9, #3344]
   29a44:	ldr	x20, [sp, #32]
   29a48:	add	w9, w8, w26
   29a4c:	add	w10, w9, #0x2
   29a50:	cmp	w10, w11
   29a54:	b.lt	29aa8 <rl_redisplay@@Base+0x2cc>  // b.tstop
   29a58:	adrp	x20, 57000 <rl_insert@@Base+0x20abc>
   29a5c:	and	w8, w10, #0x3ff
   29a60:	ldr	x10, [x20, #3336]
   29a64:	sub	w8, w9, w8
   29a68:	add	w8, w8, #0x402
   29a6c:	adrp	x21, 57000 <rl_insert@@Base+0x20abc>
   29a70:	str	w8, [x21, #3344]
   29a74:	ldr	x0, [x10]
   29a78:	sxtw	x1, w8
   29a7c:	bl	16a50 <xrealloc@plt>
   29a80:	ldr	x8, [x20, #3336]
   29a84:	str	x0, [x8]
   29a88:	ldr	x8, [x28, #3328]
   29a8c:	ldrsw	x1, [x21, #3344]
   29a90:	ldr	x0, [x8]
   29a94:	bl	16a50 <xrealloc@plt>
   29a98:	ldr	x8, [x28, #3328]
   29a9c:	mov	x20, x0
   29aa0:	str	x0, [x8]
   29aa4:	ldr	w8, [x19, #1048]
   29aa8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29aac:	ldr	x1, [x9, #1032]
   29ab0:	add	x0, x20, x26
   29ab4:	sxtw	x2, w8
   29ab8:	bl	17730 <strncpy@plt>
   29abc:	ldr	w8, [x19, #1048]
   29ac0:	add	w26, w8, w26
   29ac4:	b	29b7c <rl_redisplay@@Base+0x3a0>
   29ac8:	mov	x21, x20
   29acc:	mov	x0, x21
   29ad0:	bl	16440 <strlen@plt>
   29ad4:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   29ad8:	ldr	w9, [x8, #3344]
   29adc:	mov	x23, x0
   29ae0:	add	w20, w26, w23
   29ae4:	add	w8, w20, #0x2
   29ae8:	cmp	w8, w9
   29aec:	str	w23, [x27, #1060]
   29af0:	b.lt	29b50 <rl_redisplay@@Base+0x374>  // b.tstop
   29af4:	add	w9, w8, #0x3ff
   29af8:	cmp	w8, #0x0
   29afc:	csel	w9, w9, w8, lt  // lt = tstop
   29b00:	and	w9, w9, #0xfffffc00
   29b04:	adrp	x19, 57000 <rl_insert@@Base+0x20abc>
   29b08:	sub	w8, w9, w8
   29b0c:	ldr	x9, [x19, #3336]
   29b10:	add	w8, w20, w8
   29b14:	add	w8, w8, #0x402
   29b18:	adrp	x24, 57000 <rl_insert@@Base+0x20abc>
   29b1c:	str	w8, [x24, #3344]
   29b20:	ldr	x0, [x9]
   29b24:	sxtw	x1, w8
   29b28:	bl	16a50 <xrealloc@plt>
   29b2c:	ldr	x8, [x19, #3336]
   29b30:	str	x0, [x8]
   29b34:	ldr	x8, [x28, #3328]
   29b38:	ldrsw	x1, [x24, #3344]
   29b3c:	ldr	x0, [x8]
   29b40:	bl	16a50 <xrealloc@plt>
   29b44:	ldr	x8, [x28, #3328]
   29b48:	str	x0, [sp, #32]
   29b4c:	str	x0, [x8]
   29b50:	ldr	x19, [sp, #32]
   29b54:	sxtw	x2, w23
   29b58:	mov	x1, x21
   29b5c:	add	x0, x19, x26
   29b60:	bl	17730 <strncpy@plt>
   29b64:	mov	w8, wzr
   29b68:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29b6c:	strb	wzr, [x19, w20, sxtw]
   29b70:	str	wzr, [x9, #1052]
   29b74:	b	29b90 <rl_redisplay@@Base+0x3b4>
   29b78:	ldr	x20, [sp, #32]
   29b7c:	strb	wzr, [x20, w26, sxtw]
   29b80:	ldr	w9, [x23, #1064]
   29b84:	str	x20, [sp, #32]
   29b88:	mov	w20, w26
   29b8c:	sub	w8, w8, w9
   29b90:	ldr	x19, [x28, #3328]
   29b94:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29b98:	str	w8, [x9, #1092]
   29b9c:	ldr	x26, [sp, #24]
   29ba0:	ldr	x8, [x19, #8]
   29ba4:	mov	w1, wzr
   29ba8:	str	wzr, [x8]
   29bac:	ldrsw	x10, [x19, #20]
   29bb0:	ldr	w8, [x27, #1060]
   29bb4:	ldrb	w9, [x22, #1084]
   29bb8:	ldr	x0, [x19, #24]
   29bbc:	lsl	x2, x10, #2
   29bc0:	add	w27, w8, w9
   29bc4:	bl	16bb0 <memset@plt>
   29bc8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29bcc:	ldr	x8, [x8, #3552]
   29bd0:	ldr	w8, [x8]
   29bd4:	cmp	w27, w8
   29bd8:	b.ge	29be4 <rl_redisplay@@Base+0x408>  // b.tcont
   29bdc:	mov	w21, wzr
   29be0:	b	29ca0 <rl_redisplay@@Base+0x4c4>
   29be4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29be8:	ldr	x10, [x8, #1096]
   29bec:	ldr	w8, [x10, #4]
   29bf0:	cmn	w8, #0x1
   29bf4:	b.eq	29c30 <rl_redisplay@@Base+0x454>  // b.none
   29bf8:	ldr	x9, [x19, #8]
   29bfc:	mov	x21, xzr
   29c00:	add	x10, x10, #0x8
   29c04:	add	x9, x9, #0x4
   29c08:	mov	w1, w8
   29c0c:	lsl	x8, x21, #2
   29c10:	str	w1, [x9, x8]
   29c14:	ldr	w8, [x10, x8]
   29c18:	add	x21, x21, #0x1
   29c1c:	cmn	w8, #0x1
   29c20:	b.ne	29c08 <rl_redisplay@@Base+0x42c>  // b.any
   29c24:	cmp	w26, #0x2
   29c28:	b.ge	29c40 <rl_redisplay@@Base+0x464>  // b.tcont
   29c2c:	b	29c90 <rl_redisplay@@Base+0x4b4>
   29c30:	mov	w1, wzr
   29c34:	mov	w21, wzr
   29c38:	cmp	w26, #0x2
   29c3c:	b.lt	29c90 <rl_redisplay@@Base+0x4b4>  // b.tstop
   29c40:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29c44:	ldr	x8, [x8, #1896]
   29c48:	ldr	w8, [x8]
   29c4c:	cbnz	w8, 29c90 <rl_redisplay@@Base+0x4b4>
   29c50:	ldr	w8, [x25, #1080]
   29c54:	cmp	w8, #0x1
   29c58:	b.lt	29c90 <rl_redisplay@@Base+0x4b4>  // b.tstop
   29c5c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29c60:	ldr	x0, [x8, #1032]
   29c64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29c68:	ldr	w2, [x8, #1048]
   29c6c:	mov	w3, #0x1                   	// #1
   29c70:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   29c74:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29c78:	ldr	w8, [x8, #1092]
   29c7c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29c80:	ldr	w9, [x9, #1052]
   29c84:	sub	w8, w0, w8
   29c88:	add	w27, w8, w9
   29c8c:	b	29ca0 <rl_redisplay@@Base+0x4c4>
   29c90:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29c94:	ldr	x8, [x8, #3552]
   29c98:	ldr	w8, [x8]
   29c9c:	msub	w27, w8, w21, w27
   29ca0:	mov	w9, #0x1                   	// #1
   29ca4:	stur	x9, [x29, #-24]
   29ca8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29cac:	ldr	x23, [x23, #2480]
   29cb0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   29cb4:	cmp	w26, #0x1
   29cb8:	str	w21, [x8, #1104]
   29cbc:	b.le	29d1c <rl_redisplay@@Base+0x540>
   29cc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29cc4:	ldr	x8, [x8, #1896]
   29cc8:	ldr	w8, [x8]
   29ccc:	cbnz	w8, 29d1c <rl_redisplay@@Base+0x540>
   29cd0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29cd4:	ldr	x8, [x8, #3088]
   29cd8:	ldr	x1, [x23]
   29cdc:	stur	xzr, [x29, #-16]
   29ce0:	ldr	w8, [x8]
   29ce4:	cbz	w8, 29d00 <rl_redisplay@@Base+0x524>
   29ce8:	ldrb	w8, [x1]
   29cec:	tbnz	w8, #7, 29d00 <rl_redisplay@@Base+0x524>
   29cf0:	stur	w8, [x29, #-4]
   29cf4:	mov	w8, #0x1                   	// #1
   29cf8:	stur	x8, [x29, #-24]
   29cfc:	b	29d1c <rl_redisplay@@Base+0x540>
   29d00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29d04:	ldr	x8, [x8, #2656]
   29d08:	sub	x0, x29, #0x4
   29d0c:	sub	x3, x29, #0x10
   29d10:	ldrsw	x2, [x8]
   29d14:	bl	16370 <mbrtowc@plt>
   29d18:	stur	x0, [x29, #-24]
   29d1c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29d20:	ldr	x8, [x8, #2656]
   29d24:	ldr	w8, [x8]
   29d28:	cmp	w8, #0x1
   29d2c:	b.lt	2a754 <rl_redisplay@@Base+0xf78>  // b.tstop
   29d30:	str	wzr, [sp, #12]
   29d34:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29d38:	ldr	x24, [x24, #3512]
   29d3c:	mov	w19, wzr
   29d40:	mov	w22, wzr
   29d44:	b	29d60 <rl_redisplay@@Base+0x584>
   29d48:	add	w19, w25, #0x1
   29d4c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29d50:	ldr	x8, [x8, #2656]
   29d54:	ldr	w8, [x8]
   29d58:	cmp	w19, w8
   29d5c:	b.ge	2a75c <rl_redisplay@@Base+0xf80>  // b.tcont
   29d60:	ldr	x8, [x23]
   29d64:	sxtw	x25, w19
   29d68:	cmp	w26, #0x2
   29d6c:	ldrb	w2, [x8, x25]
   29d70:	b.lt	29dc4 <rl_redisplay@@Base+0x5e8>  // b.tstop
   29d74:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29d78:	ldr	x8, [x8, #1896]
   29d7c:	ldr	w8, [x8]
   29d80:	cbnz	w8, 29dc4 <rl_redisplay@@Base+0x5e8>
   29d84:	ldur	x8, [x29, #-24]
   29d88:	cmn	x8, #0x2
   29d8c:	b.cs	29db4 <rl_redisplay@@Base+0x5d8>  // b.hs, b.nlast
   29d90:	ldur	x8, [x29, #-24]
   29d94:	cbz	x8, 2a75c <rl_redisplay@@Base+0xf80>
   29d98:	ldur	w0, [x29, #-4]
   29d9c:	mov	x19, x2
   29da0:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   29da4:	cmp	w0, #0x0
   29da8:	mov	x2, x19
   29dac:	csinc	w8, w0, wzr, ge  // ge = tcont
   29db0:	b	29dc0 <rl_redisplay@@Base+0x5e4>
   29db4:	mov	w8, #0x1                   	// #1
   29db8:	stp	x8, xzr, [x29, #-24]
   29dbc:	mov	w8, #0x1                   	// #1
   29dc0:	str	w8, [sp, #8]
   29dc4:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   29dc8:	ldrsw	x8, [x8, #3344]
   29dcc:	add	w11, w20, #0x8
   29dd0:	cmp	w11, w8
   29dd4:	b.lt	29e58 <rl_redisplay@@Base+0x67c>  // b.tstop
   29dd8:	adrp	x26, 57000 <rl_insert@@Base+0x20abc>
   29ddc:	ldr	x9, [x26, #3336]
   29de0:	lsl	x1, x8, #1
   29de4:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   29de8:	str	w1, [x8, #3344]
   29dec:	ldr	x0, [x9]
   29df0:	mov	x10, x24
   29df4:	mov	w24, w27
   29df8:	mov	x27, x20
   29dfc:	mov	x20, x25
   29e00:	mov	x25, x10
   29e04:	mov	x19, x2
   29e08:	str	w11, [sp, #16]
   29e0c:	bl	16a50 <xrealloc@plt>
   29e10:	ldr	x8, [x26, #3336]
   29e14:	ldr	x26, [sp, #24]
   29e18:	str	x0, [x8]
   29e1c:	ldr	x8, [x28, #3328]
   29e20:	ldr	x0, [x8]
   29e24:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   29e28:	ldrsw	x1, [x8, #3344]
   29e2c:	mov	x8, x25
   29e30:	mov	x25, x20
   29e34:	mov	x20, x27
   29e38:	mov	w27, w24
   29e3c:	mov	x24, x8
   29e40:	bl	16a50 <xrealloc@plt>
   29e44:	ldr	w11, [sp, #16]
   29e48:	ldr	x8, [x28, #3328]
   29e4c:	mov	x2, x19
   29e50:	str	x0, [sp, #32]
   29e54:	str	x0, [x8]
   29e58:	ldr	w8, [x24]
   29e5c:	cmp	w25, w8
   29e60:	b.ne	29e74 <rl_redisplay@@Base+0x698>  // b.any
   29e64:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   29e68:	str	w20, [x9, #1076]
   29e6c:	mov	w9, w21
   29e70:	str	w21, [sp, #12]
   29e74:	sxtb	w9, w2
   29e78:	tbz	w9, #31, 29f04 <rl_redisplay@@Base+0x728>
   29e7c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29e80:	ldr	x9, [x9, #2400]
   29e84:	ldr	w9, [x9]
   29e88:	cbnz	w9, 29f04 <rl_redisplay@@Base+0x728>
   29e8c:	ldr	x8, [sp, #32]
   29e90:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   29e94:	add	x1, x1, #0xe3a
   29e98:	add	x0, x8, w20, sxtw
   29e9c:	bl	16650 <sprintf@plt>
   29ea0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29ea4:	ldr	x8, [x8, #3552]
   29ea8:	ldr	w19, [x8]
   29eac:	add	w8, w27, #0x4
   29eb0:	cmp	w8, w19
   29eb4:	b.lt	2a1c8 <rl_redisplay@@Base+0x9ec>  // b.tstop
   29eb8:	ldr	x8, [x28, #3328]
   29ebc:	ldrsw	x9, [x8, #16]
   29ec0:	sub	w10, w9, #0x2
   29ec4:	cmp	w21, w10
   29ec8:	b.lt	29ee8 <rl_redisplay@@Base+0x70c>  // b.tstop
   29ecc:	ldr	x0, [x8, #8]
   29ed0:	lsl	w10, w9, #1
   29ed4:	lsl	x1, x9, #3
   29ed8:	str	w10, [x8, #16]
   29edc:	bl	16a50 <xrealloc@plt>
   29ee0:	ldr	x8, [x28, #3328]
   29ee4:	str	x0, [x8, #8]
   29ee8:	ldrsw	x9, [x8, #20]
   29eec:	sub	w19, w19, w27
   29ef0:	sub	w10, w9, #0x2
   29ef4:	cmp	w21, w10
   29ef8:	b.ge	2a188 <rl_redisplay@@Base+0x9ac>  // b.tcont
   29efc:	ldr	x0, [x8, #24]
   29f00:	b	2a1a4 <rl_redisplay@@Base+0x9c8>
   29f04:	cmp	w2, #0x9
   29f08:	b.ne	29fb8 <rl_redisplay@@Base+0x7dc>  // b.any
   29f0c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29f10:	ldr	x9, [x9, #3552]
   29f14:	add	w8, w27, #0x7
   29f18:	cmp	w27, #0x0
   29f1c:	csel	w8, w8, w27, lt  // lt = tstop
   29f20:	and	w8, w8, #0xfffffff8
   29f24:	sub	w8, w8, w27
   29f28:	ldr	w28, [x9]
   29f2c:	add	w19, w11, w8
   29f30:	mov	x24, x25
   29f34:	sub	w25, w19, w20
   29f38:	add	w26, w25, w27
   29f3c:	cmp	w26, w28
   29f40:	mov	w10, w27
   29f44:	b.ge	2a1d4 <rl_redisplay@@Base+0x9f8>  // b.tcont
   29f48:	cmp	w19, w20
   29f4c:	b.le	2a278 <rl_redisplay@@Base+0xa9c>
   29f50:	ldr	x8, [sp, #32]
   29f54:	sxtw	x20, w20
   29f58:	sxtw	x19, w19
   29f5c:	mov	w1, #0x20                  	// #32
   29f60:	add	x0, x8, x20
   29f64:	add	x8, x20, #0x1
   29f68:	cmp	x8, x19
   29f6c:	csinc	x8, x19, x20, lt  // lt = tstop
   29f70:	sub	x25, x8, x20
   29f74:	mov	x2, x25
   29f78:	bl	16bb0 <memset@plt>
   29f7c:	cmp	x25, #0x1
   29f80:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   29f84:	b.ls	29fa4 <rl_redisplay@@Base+0x7c8>  // b.plast
   29f88:	and	x8, x25, #0xfffffffffffffffe
   29f8c:	add	x20, x8, x20
   29f90:	mov	x9, x8
   29f94:	subs	x9, x9, #0x2
   29f98:	b.ne	29f94 <rl_redisplay@@Base+0x7b8>  // b.any
   29f9c:	cmp	x25, x8
   29fa0:	b.eq	29fb0 <rl_redisplay@@Base+0x7d4>  // b.none
   29fa4:	add	x20, x20, #0x1
   29fa8:	cmp	x20, x19
   29fac:	b.lt	29fa4 <rl_redisplay@@Base+0x7c8>  // b.tstop
   29fb0:	mov	w27, w26
   29fb4:	b	2a334 <rl_redisplay@@Base+0xb58>
   29fb8:	cmp	w2, #0xa
   29fbc:	b.ne	2a03c <rl_redisplay@@Base+0x860>  // b.any
   29fc0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29fc4:	ldr	x9, [x9, #2192]
   29fc8:	ldr	w9, [x9]
   29fcc:	cbnz	w9, 2a03c <rl_redisplay@@Base+0x860>
   29fd0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   29fd4:	ldr	x9, [x9, #3912]
   29fd8:	ldr	x9, [x9]
   29fdc:	cbz	x9, 2a03c <rl_redisplay@@Base+0x860>
   29fe0:	ldrb	w9, [x9]
   29fe4:	cbz	w9, 2a03c <rl_redisplay@@Base+0x860>
   29fe8:	ldr	x8, [sp, #32]
   29fec:	add	w19, w20, #0x1
   29ff0:	strb	wzr, [x8, w20, sxtw]
   29ff4:	ldr	x8, [x28, #3328]
   29ff8:	ldrsw	x9, [x8, #16]
   29ffc:	sub	w10, w9, #0x2
   2a000:	cmp	w21, w10
   2a004:	b.lt	2a024 <rl_redisplay@@Base+0x848>  // b.tstop
   2a008:	ldr	x0, [x8, #8]
   2a00c:	lsl	w10, w9, #1
   2a010:	lsl	x1, x9, #3
   2a014:	str	w10, [x8, #16]
   2a018:	bl	16a50 <xrealloc@plt>
   2a01c:	ldr	x8, [x28, #3328]
   2a020:	str	x0, [x8, #8]
   2a024:	ldrsw	x9, [x8, #20]
   2a028:	sub	w10, w9, #0x2
   2a02c:	cmp	w21, w10
   2a030:	b.ge	2a378 <rl_redisplay@@Base+0xb9c>  // b.tcont
   2a034:	ldr	x0, [x8, #24]
   2a038:	b	2a394 <rl_redisplay@@Base+0xbb8>
   2a03c:	cmp	w2, #0x20
   2a040:	cset	w9, cc  // cc = lo, ul, last
   2a044:	tst	w2, #0x80
   2a048:	cset	w10, eq  // eq = none
   2a04c:	cmp	w2, #0x7f
   2a050:	and	w28, w9, w10
   2a054:	b.eq	2a228 <rl_redisplay@@Base+0xa4c>  // b.none
   2a058:	cbnz	w28, 2a228 <rl_redisplay@@Base+0xa4c>
   2a05c:	cmp	w26, #0x2
   2a060:	b.lt	2a348 <rl_redisplay@@Base+0xb6c>  // b.tstop
   2a064:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a068:	ldr	x9, [x9, #1896]
   2a06c:	ldr	w9, [x9]
   2a070:	cbnz	w9, 2a348 <rl_redisplay@@Base+0xb6c>
   2a074:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a078:	ldr	x9, [x9, #3552]
   2a07c:	ldr	w10, [sp, #8]
   2a080:	mov	w22, wzr
   2a084:	ldr	w9, [x9]
   2a088:	add	w10, w10, w27
   2a08c:	cmp	w9, w10
   2a090:	b.ge	2a3c8 <rl_redisplay@@Base+0xbec>  // b.tcont
   2a094:	cmp	w27, w9
   2a098:	b.ge	2a3c8 <rl_redisplay@@Base+0xbec>  // b.tcont
   2a09c:	ldr	x8, [sp, #32]
   2a0a0:	str	x25, [sp, #16]
   2a0a4:	mov	x26, xzr
   2a0a8:	mov	w24, w20
   2a0ac:	add	x25, x8, w20, sxtw
   2a0b0:	mov	w19, w27
   2a0b4:	b	2a0fc <rl_redisplay@@Base+0x920>
   2a0b8:	ldr	x0, [x8, #24]
   2a0bc:	lsl	w10, w9, #1
   2a0c0:	lsl	x1, x9, #3
   2a0c4:	str	w10, [x8, #20]
   2a0c8:	bl	16a50 <xrealloc@plt>
   2a0cc:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2a0d0:	ldr	x8, [x8, #3328]
   2a0d4:	str	x0, [x8, #24]
   2a0d8:	str	w22, [x0, x26, lsl #2]
   2a0dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a0e0:	ldr	x8, [x8, #3552]
   2a0e4:	mov	w27, wzr
   2a0e8:	ldr	w8, [x8]
   2a0ec:	add	w9, w19, w22
   2a0f0:	cmp	w9, w8
   2a0f4:	mov	x26, x22
   2a0f8:	b.ge	2a3b4 <rl_redisplay@@Base+0xbd8>  // b.tcont
   2a0fc:	mov	w8, #0x20                  	// #32
   2a100:	strb	w8, [x25, x26]
   2a104:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a108:	ldr	x8, [x8, #3552]
   2a10c:	add	w27, w27, #0x1
   2a110:	add	x22, x26, #0x1
   2a114:	ldr	w8, [x8]
   2a118:	cmp	w27, w8
   2a11c:	b.lt	2a0ec <rl_redisplay@@Base+0x910>  // b.tstop
   2a120:	adrp	x27, 57000 <rl_insert@@Base+0x20abc>
   2a124:	ldr	x8, [x27, #3328]
   2a128:	ldrsw	x9, [x8, #16]
   2a12c:	sub	w10, w9, #0x2
   2a130:	cmp	w21, w10
   2a134:	b.ge	2a140 <rl_redisplay@@Base+0x964>  // b.tcont
   2a138:	ldr	x0, [x8, #8]
   2a13c:	b	2a15c <rl_redisplay@@Base+0x980>
   2a140:	ldr	x0, [x8, #8]
   2a144:	lsl	w10, w9, #1
   2a148:	lsl	x1, x9, #3
   2a14c:	str	w10, [x8, #16]
   2a150:	bl	16a50 <xrealloc@plt>
   2a154:	ldr	x8, [x27, #3328]
   2a158:	str	x0, [x8, #8]
   2a15c:	add	w9, w24, w26
   2a160:	add	w21, w21, #0x1
   2a164:	add	w9, w9, #0x1
   2a168:	str	w9, [x0, w21, sxtw #2]
   2a16c:	ldrsw	x9, [x8, #20]
   2a170:	sxtw	x26, w21
   2a174:	sub	w10, w9, #0x2
   2a178:	cmp	w21, w10
   2a17c:	b.ge	2a0b8 <rl_redisplay@@Base+0x8dc>  // b.tcont
   2a180:	ldr	x0, [x8, #24]
   2a184:	b	2a0d8 <rl_redisplay@@Base+0x8fc>
   2a188:	ldr	x0, [x8, #24]
   2a18c:	lsl	w10, w9, #1
   2a190:	lsl	x1, x9, #3
   2a194:	str	w10, [x8, #20]
   2a198:	bl	16a50 <xrealloc@plt>
   2a19c:	ldr	x8, [x28, #3328]
   2a1a0:	str	x0, [x8, #24]
   2a1a4:	ldr	x8, [x8, #8]
   2a1a8:	sxtw	x10, w21
   2a1ac:	add	x21, x10, #0x1
   2a1b0:	add	w9, w19, w20
   2a1b4:	lsl	x10, x21, #2
   2a1b8:	str	w9, [x8, x10]
   2a1bc:	mov	w8, #0x4                   	// #4
   2a1c0:	sub	w8, w8, w19
   2a1c4:	str	w22, [x0, x10]
   2a1c8:	add	w20, w20, #0x4
   2a1cc:	mov	w27, w8
   2a1d0:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a1d4:	adrp	x26, 57000 <rl_insert@@Base+0x20abc>
   2a1d8:	ldr	x8, [x26, #3328]
   2a1dc:	ldrsw	x9, [x8, #16]
   2a1e0:	sub	w10, w9, #0x2
   2a1e4:	cmp	w21, w10
   2a1e8:	b.lt	2a208 <rl_redisplay@@Base+0xa2c>  // b.tstop
   2a1ec:	ldr	x0, [x8, #8]
   2a1f0:	lsl	w10, w9, #1
   2a1f4:	lsl	x1, x9, #3
   2a1f8:	str	w10, [x8, #16]
   2a1fc:	bl	16a50 <xrealloc@plt>
   2a200:	ldr	x8, [x26, #3328]
   2a204:	str	x0, [x8, #8]
   2a208:	ldrsw	x9, [x8, #20]
   2a20c:	sub	w26, w28, w27
   2a210:	sub	w10, w9, #0x2
   2a214:	cmp	w21, w10
   2a218:	b.ge	2a288 <rl_redisplay@@Base+0xaac>  // b.tcont
   2a21c:	ldr	x0, [x8, #24]
   2a220:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a224:	b	2a2a8 <rl_redisplay@@Base+0xacc>
   2a228:	ldr	x9, [sp, #32]
   2a22c:	sxtw	x8, w20
   2a230:	mov	w10, #0x5e                  	// #94
   2a234:	add	w26, w27, #0x1
   2a238:	strb	w10, [x9, x8]
   2a23c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a240:	ldr	x9, [x9, #3552]
   2a244:	add	x19, x8, #0x1
   2a248:	ldr	w9, [x9]
   2a24c:	cmp	w26, w9
   2a250:	b.lt	2a56c <rl_redisplay@@Base+0xd90>  // b.tstop
   2a254:	adrp	x26, 57000 <rl_insert@@Base+0x20abc>
   2a258:	ldr	x8, [x26, #3328]
   2a25c:	mov	x27, x2
   2a260:	ldrsw	x9, [x8, #16]
   2a264:	sub	w10, w9, #0x2
   2a268:	cmp	w21, w10
   2a26c:	b.ge	2a4e0 <rl_redisplay@@Base+0xd04>  // b.tcont
   2a270:	ldr	x0, [x8, #8]
   2a274:	b	2a4fc <rl_redisplay@@Base+0xd20>
   2a278:	mov	w27, w26
   2a27c:	ldr	x26, [sp, #24]
   2a280:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a284:	b	2a338 <rl_redisplay@@Base+0xb5c>
   2a288:	ldr	x0, [x8, #24]
   2a28c:	lsl	w10, w9, #1
   2a290:	lsl	x1, x9, #3
   2a294:	str	w10, [x8, #20]
   2a298:	bl	16a50 <xrealloc@plt>
   2a29c:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a2a0:	ldr	x8, [x28, #3328]
   2a2a4:	str	x0, [x8, #24]
   2a2a8:	ldr	x8, [x8, #8]
   2a2ac:	sxtw	x10, w21
   2a2b0:	add	x21, x10, #0x1
   2a2b4:	add	w9, w26, w20
   2a2b8:	cmp	w19, w20
   2a2bc:	lsl	x10, x21, #2
   2a2c0:	sub	w27, w25, w26
   2a2c4:	str	w9, [x8, x10]
   2a2c8:	str	w22, [x0, x10]
   2a2cc:	b.le	2a334 <rl_redisplay@@Base+0xb58>
   2a2d0:	ldr	x8, [sp, #32]
   2a2d4:	sxtw	x20, w20
   2a2d8:	sxtw	x19, w19
   2a2dc:	mov	w1, #0x20                  	// #32
   2a2e0:	add	x0, x8, x20
   2a2e4:	add	x8, x20, #0x1
   2a2e8:	cmp	x8, x19
   2a2ec:	csinc	x8, x19, x20, lt  // lt = tstop
   2a2f0:	sub	x25, x8, x20
   2a2f4:	mov	x2, x25
   2a2f8:	bl	16bb0 <memset@plt>
   2a2fc:	ldr	x26, [sp, #24]
   2a300:	cmp	x25, #0x2
   2a304:	b.cc	2a324 <rl_redisplay@@Base+0xb48>  // b.lo, b.ul, b.last
   2a308:	and	x8, x25, #0xfffffffffffffffe
   2a30c:	add	x20, x8, x20
   2a310:	mov	x9, x8
   2a314:	subs	x9, x9, #0x2
   2a318:	b.ne	2a314 <rl_redisplay@@Base+0xb38>  // b.any
   2a31c:	cmp	x25, x8
   2a320:	b.eq	2a338 <rl_redisplay@@Base+0xb5c>  // b.none
   2a324:	add	x20, x20, #0x1
   2a328:	cmp	x20, x19
   2a32c:	b.lt	2a324 <rl_redisplay@@Base+0xb48>  // b.tstop
   2a330:	b	2a338 <rl_redisplay@@Base+0xb5c>
   2a334:	ldr	x26, [sp, #24]
   2a338:	mov	x25, x24
   2a33c:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a340:	ldr	x24, [x24, #3512]
   2a344:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a348:	ldr	x8, [sp, #32]
   2a34c:	add	w27, w27, #0x1
   2a350:	add	w19, w20, #0x1
   2a354:	strb	w2, [x8, w20, sxtw]
   2a358:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a35c:	ldr	x8, [x8, #3552]
   2a360:	ldr	w8, [x8]
   2a364:	cmp	w27, w8
   2a368:	b.ge	2a520 <rl_redisplay@@Base+0xd44>  // b.tcont
   2a36c:	mov	w20, w19
   2a370:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a374:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a378:	ldr	x0, [x8, #24]
   2a37c:	lsl	w10, w9, #1
   2a380:	lsl	x1, x9, #3
   2a384:	str	w10, [x8, #20]
   2a388:	bl	16a50 <xrealloc@plt>
   2a38c:	ldr	x8, [x28, #3328]
   2a390:	str	x0, [x8, #24]
   2a394:	ldr	x8, [x8, #8]
   2a398:	sxtw	x9, w21
   2a39c:	add	x21, x9, #0x1
   2a3a0:	lsl	x9, x21, #2
   2a3a4:	mov	w27, wzr
   2a3a8:	str	w19, [x8, x9]
   2a3ac:	str	w22, [x0, x9]
   2a3b0:	b	2a6d8 <rl_redisplay@@Base+0xefc>
   2a3b4:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a3b8:	ldr	x24, [x24, #3512]
   2a3bc:	ldp	x25, x26, [sp, #16]
   2a3c0:	add	w20, w20, w22
   2a3c4:	ldr	w8, [x24]
   2a3c8:	cmp	w25, w8
   2a3cc:	b.ne	2a3e0 <rl_redisplay@@Base+0xc04>  // b.any
   2a3d0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2a3d4:	str	w20, [x8, #1076]
   2a3d8:	mov	w8, w21
   2a3dc:	str	w21, [sp, #12]
   2a3e0:	ldur	x8, [x29, #-24]
   2a3e4:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a3e8:	add	x8, x8, x25
   2a3ec:	cmp	x8, x25
   2a3f0:	b.ls	2a41c <rl_redisplay@@Base+0xc40>  // b.plast
   2a3f4:	ldr	x9, [sp, #32]
   2a3f8:	mov	x10, x25
   2a3fc:	add	x9, x9, w20, sxtw
   2a400:	ldr	x11, [x23]
   2a404:	add	w20, w20, #0x1
   2a408:	ldrb	w11, [x11, x10]
   2a40c:	add	x10, x10, #0x1
   2a410:	cmp	x8, x10
   2a414:	strb	w11, [x9], #1
   2a418:	b.hi	2a400 <rl_redisplay@@Base+0xc24>  // b.pmore
   2a41c:	ldr	w19, [sp, #8]
   2a420:	cmp	w19, #0x1
   2a424:	b.ge	2a464 <rl_redisplay@@Base+0xc88>  // b.tcont
   2a428:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a42c:	ldr	x0, [x8, #24]
   2a430:	lsl	w10, w9, #1
   2a434:	lsl	x1, x9, #3
   2a438:	str	w10, [x8, #20]
   2a43c:	bl	16a50 <xrealloc@plt>
   2a440:	ldr	x8, [x28, #3328]
   2a444:	str	x0, [x8, #24]
   2a448:	str	w22, [x0, x25, lsl #2]
   2a44c:	mov	x25, x24
   2a450:	mov	x24, x27
   2a454:	mov	w27, wzr
   2a458:	mov	w8, wzr
   2a45c:	subs	w19, w19, #0x1
   2a460:	b.eq	2a6dc <rl_redisplay@@Base+0xf00>  // b.none
   2a464:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a468:	ldr	x8, [x8, #3552]
   2a46c:	add	w27, w27, #0x1
   2a470:	ldr	w8, [x8]
   2a474:	cmp	w27, w8
   2a478:	b.lt	2a45c <rl_redisplay@@Base+0xc80>  // b.tstop
   2a47c:	ldr	x8, [x28, #3328]
   2a480:	mov	x27, x24
   2a484:	mov	x24, x25
   2a488:	ldrsw	x9, [x8, #16]
   2a48c:	sub	w10, w9, #0x2
   2a490:	cmp	w21, w10
   2a494:	b.ge	2a4a0 <rl_redisplay@@Base+0xcc4>  // b.tcont
   2a498:	ldr	x0, [x8, #8]
   2a49c:	b	2a4bc <rl_redisplay@@Base+0xce0>
   2a4a0:	ldr	x0, [x8, #8]
   2a4a4:	lsl	w10, w9, #1
   2a4a8:	lsl	x1, x9, #3
   2a4ac:	str	w10, [x8, #16]
   2a4b0:	bl	16a50 <xrealloc@plt>
   2a4b4:	ldr	x8, [x28, #3328]
   2a4b8:	str	x0, [x8, #8]
   2a4bc:	add	w21, w21, #0x1
   2a4c0:	str	w20, [x0, w21, sxtw #2]
   2a4c4:	ldrsw	x9, [x8, #20]
   2a4c8:	sxtw	x25, w21
   2a4cc:	sub	w10, w9, #0x2
   2a4d0:	cmp	w21, w10
   2a4d4:	b.ge	2a42c <rl_redisplay@@Base+0xc50>  // b.tcont
   2a4d8:	ldr	x0, [x8, #24]
   2a4dc:	b	2a448 <rl_redisplay@@Base+0xc6c>
   2a4e0:	ldr	x0, [x8, #8]
   2a4e4:	lsl	w10, w9, #1
   2a4e8:	lsl	x1, x9, #3
   2a4ec:	str	w10, [x8, #16]
   2a4f0:	bl	16a50 <xrealloc@plt>
   2a4f4:	ldr	x8, [x26, #3328]
   2a4f8:	str	x0, [x8, #8]
   2a4fc:	sxtw	x9, w21
   2a500:	add	x21, x9, #0x1
   2a504:	str	w19, [x0, x21, lsl #2]
   2a508:	ldrsw	x9, [x8, #20]
   2a50c:	sub	w10, w9, #0x2
   2a510:	cmp	w21, w10
   2a514:	b.ge	2a540 <rl_redisplay@@Base+0xd64>  // b.tcont
   2a518:	ldr	x0, [x8, #24]
   2a51c:	b	2a560 <rl_redisplay@@Base+0xd84>
   2a520:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a524:	ldr	x8, [x28, #3328]
   2a528:	ldrsw	x9, [x8, #16]
   2a52c:	sub	w10, w9, #0x2
   2a530:	cmp	w21, w10
   2a534:	b.ge	2a674 <rl_redisplay@@Base+0xe98>  // b.tcont
   2a538:	ldr	x0, [x8, #8]
   2a53c:	b	2a690 <rl_redisplay@@Base+0xeb4>
   2a540:	ldr	x0, [x8, #24]
   2a544:	lsl	w10, w9, #1
   2a548:	lsl	x1, x9, #3
   2a54c:	str	w10, [x8, #20]
   2a550:	bl	16a50 <xrealloc@plt>
   2a554:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2a558:	ldr	x8, [x8, #3328]
   2a55c:	str	x0, [x8, #24]
   2a560:	mov	x2, x27
   2a564:	mov	w26, wzr
   2a568:	str	w22, [x0, x21, lsl #2]
   2a56c:	mov	x27, x24
   2a570:	mov	x24, x25
   2a574:	cbz	w28, 2a5a4 <rl_redisplay@@Base+0xdc8>
   2a578:	mov	x25, x2
   2a57c:	bl	17100 <__ctype_b_loc@plt>
   2a580:	ldr	x8, [x0]
   2a584:	orr	x25, x25, #0x40
   2a588:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a58c:	ldrh	w8, [x8, x25, lsl #1]
   2a590:	tbz	w8, #9, 2a5ac <rl_redisplay@@Base+0xdd0>
   2a594:	bl	16dc0 <__ctype_toupper_loc@plt>
   2a598:	ldr	x8, [x0]
   2a59c:	ldr	w25, [x8, x25, lsl #2]
   2a5a0:	b	2a5ac <rl_redisplay@@Base+0xdd0>
   2a5a4:	mov	w25, #0x3f                  	// #63
   2a5a8:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2a5ac:	ldr	x8, [sp, #32]
   2a5b0:	add	w9, w26, #0x1
   2a5b4:	add	w20, w20, #0x2
   2a5b8:	strb	w25, [x8, x19]
   2a5bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a5c0:	ldr	x8, [x8, #3552]
   2a5c4:	ldr	w8, [x8]
   2a5c8:	cmp	w9, w8
   2a5cc:	b.ge	2a5e4 <rl_redisplay@@Base+0xe08>  // b.tcont
   2a5d0:	ldr	x26, [sp, #24]
   2a5d4:	mov	x25, x24
   2a5d8:	mov	x24, x27
   2a5dc:	mov	w27, w9
   2a5e0:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a5e4:	ldr	x8, [x28, #3328]
   2a5e8:	ldrsw	x9, [x8, #16]
   2a5ec:	sub	w10, w9, #0x2
   2a5f0:	cmp	w21, w10
   2a5f4:	b.ge	2a600 <rl_redisplay@@Base+0xe24>  // b.tcont
   2a5f8:	ldr	x0, [x8, #8]
   2a5fc:	b	2a61c <rl_redisplay@@Base+0xe40>
   2a600:	ldr	x0, [x8, #8]
   2a604:	lsl	w10, w9, #1
   2a608:	lsl	x1, x9, #3
   2a60c:	str	w10, [x8, #16]
   2a610:	bl	16a50 <xrealloc@plt>
   2a614:	ldr	x8, [x28, #3328]
   2a618:	str	x0, [x8, #8]
   2a61c:	add	w21, w21, #0x1
   2a620:	str	w20, [x0, w21, sxtw #2]
   2a624:	ldrsw	x9, [x8, #20]
   2a628:	ldr	x26, [sp, #24]
   2a62c:	sxtw	x19, w21
   2a630:	mov	x25, x24
   2a634:	sub	w10, w9, #0x2
   2a638:	cmp	w21, w10
   2a63c:	b.ge	2a648 <rl_redisplay@@Base+0xe6c>  // b.tcont
   2a640:	ldr	x0, [x8, #24]
   2a644:	b	2a664 <rl_redisplay@@Base+0xe88>
   2a648:	ldr	x0, [x8, #24]
   2a64c:	lsl	w10, w9, #1
   2a650:	lsl	x1, x9, #3
   2a654:	str	w10, [x8, #20]
   2a658:	bl	16a50 <xrealloc@plt>
   2a65c:	ldr	x8, [x28, #3328]
   2a660:	str	x0, [x8, #24]
   2a664:	mov	x24, x27
   2a668:	mov	w27, wzr
   2a66c:	str	w22, [x0, x19, lsl #2]
   2a670:	b	2a6dc <rl_redisplay@@Base+0xf00>
   2a674:	ldr	x0, [x8, #8]
   2a678:	lsl	w10, w9, #1
   2a67c:	lsl	x1, x9, #3
   2a680:	str	w10, [x8, #16]
   2a684:	bl	16a50 <xrealloc@plt>
   2a688:	ldr	x8, [x28, #3328]
   2a68c:	str	x0, [x8, #8]
   2a690:	sxtw	x9, w21
   2a694:	add	x21, x9, #0x1
   2a698:	str	w19, [x0, x21, lsl #2]
   2a69c:	ldrsw	x9, [x8, #20]
   2a6a0:	sub	w10, w9, #0x2
   2a6a4:	cmp	w21, w10
   2a6a8:	b.ge	2a6b4 <rl_redisplay@@Base+0xed8>  // b.tcont
   2a6ac:	ldr	x0, [x8, #24]
   2a6b0:	b	2a6d0 <rl_redisplay@@Base+0xef4>
   2a6b4:	ldr	x0, [x8, #24]
   2a6b8:	lsl	w10, w9, #1
   2a6bc:	lsl	x1, x9, #3
   2a6c0:	str	w10, [x8, #20]
   2a6c4:	bl	16a50 <xrealloc@plt>
   2a6c8:	ldr	x8, [x28, #3328]
   2a6cc:	str	x0, [x8, #24]
   2a6d0:	mov	w27, wzr
   2a6d4:	str	w22, [x0, x21, lsl #2]
   2a6d8:	mov	w20, w19
   2a6dc:	cmp	w26, #0x1
   2a6e0:	b.le	29d48 <rl_redisplay@@Base+0x56c>
   2a6e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a6e8:	ldr	x8, [x8, #1896]
   2a6ec:	ldr	w8, [x8]
   2a6f0:	cbnz	w8, 29d48 <rl_redisplay@@Base+0x56c>
   2a6f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a6f8:	ldr	x8, [x8, #3088]
   2a6fc:	ldur	x9, [x29, #-24]
   2a700:	ldr	w10, [x8]
   2a704:	ldr	x8, [x23]
   2a708:	add	w19, w25, w9
   2a70c:	sxtw	x9, w19
   2a710:	cbz	w10, 2a72c <rl_redisplay@@Base+0xf50>
   2a714:	ldrb	w10, [x8, x9]
   2a718:	tbnz	w10, #7, 2a72c <rl_redisplay@@Base+0xf50>
   2a71c:	mov	w8, #0x1                   	// #1
   2a720:	stur	w10, [x29, #-4]
   2a724:	stp	x8, xzr, [x29, #-24]
   2a728:	b	29d4c <rl_redisplay@@Base+0x570>
   2a72c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a730:	ldr	x10, [x10, #2656]
   2a734:	add	x1, x8, x9
   2a738:	sub	x0, x29, #0x4
   2a73c:	sub	x3, x29, #0x10
   2a740:	ldrsw	x10, [x10]
   2a744:	sub	x2, x10, w19, sxtw
   2a748:	bl	16370 <mbrtowc@plt>
   2a74c:	stur	x0, [x29, #-24]
   2a750:	b	29d4c <rl_redisplay@@Base+0x570>
   2a754:	mov	w22, wzr
   2a758:	str	wzr, [sp, #12]
   2a75c:	ldr	x8, [sp, #32]
   2a760:	strb	wzr, [x8, w20, sxtw]
   2a764:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2a768:	ldr	w8, [x8, #1076]
   2a76c:	tbz	w8, #31, 2a780 <rl_redisplay@@Base+0xfa4>
   2a770:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2a774:	str	w20, [x8, #1076]
   2a778:	mov	w8, w21
   2a77c:	str	w21, [sp, #12]
   2a780:	ldr	x8, [x28, #3328]
   2a784:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2a788:	str	w21, [x9, #1108]
   2a78c:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   2a790:	ldrsw	x9, [x8, #16]
   2a794:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2a798:	sub	w10, w9, #0x2
   2a79c:	cmp	w21, w10
   2a7a0:	b.lt	2a7c0 <rl_redisplay@@Base+0xfe4>  // b.tstop
   2a7a4:	ldr	x0, [x8, #8]
   2a7a8:	lsl	w10, w9, #1
   2a7ac:	lsl	x1, x9, #3
   2a7b0:	str	w10, [x8, #16]
   2a7b4:	bl	16a50 <xrealloc@plt>
   2a7b8:	ldr	x8, [x28, #3328]
   2a7bc:	str	x0, [x8, #8]
   2a7c0:	ldrsw	x9, [x8, #20]
   2a7c4:	sub	w10, w9, #0x2
   2a7c8:	cmp	w21, w10
   2a7cc:	b.ge	2a7d8 <rl_redisplay@@Base+0xffc>  // b.tcont
   2a7d0:	ldr	x0, [x8, #24]
   2a7d4:	b	2a7f4 <rl_redisplay@@Base+0x1018>
   2a7d8:	ldr	x0, [x8, #24]
   2a7dc:	lsl	w10, w9, #1
   2a7e0:	lsl	x1, x9, #3
   2a7e4:	str	w10, [x8, #20]
   2a7e8:	bl	16a50 <xrealloc@plt>
   2a7ec:	ldr	x8, [x28, #3328]
   2a7f0:	str	x0, [x8, #24]
   2a7f4:	ldr	x9, [x8, #8]
   2a7f8:	add	w10, w21, #0x1
   2a7fc:	stur	x10, [x29, #-24]
   2a800:	sbfiz	x10, x10, #2, #32
   2a804:	str	w20, [x9, x10]
   2a808:	str	w22, [x0, x10]
   2a80c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a810:	ldr	x9, [x9, #2192]
   2a814:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   2a818:	mov	w10, #0x1                   	// #1
   2a81c:	str	w10, [x23, #1112]
   2a820:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a824:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a828:	ldr	w9, [x9]
   2a82c:	ldr	x24, [x24, #1928]
   2a830:	ldr	x10, [x10, #3912]
   2a834:	cbnz	w9, 2a8ac <rl_redisplay@@Base+0x10d0>
   2a838:	ldr	x9, [x10]
   2a83c:	cbz	x9, 2a8ac <rl_redisplay@@Base+0x10d0>
   2a840:	ldrb	w9, [x9]
   2a844:	cbz	w9, 2a8ac <rl_redisplay@@Base+0x10d0>
   2a848:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a84c:	ldr	x8, [x8, #3064]
   2a850:	ldr	w8, [x8]
   2a854:	cbz	w8, 2a860 <rl_redisplay@@Base+0x1084>
   2a858:	ldr	w8, [x19, #1088]
   2a85c:	cbz	w8, 2b2ec <rl_redisplay@@Base+0x1b10>
   2a860:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a864:	ldr	x8, [x8, #3216]
   2a868:	str	wzr, [x19, #1088]
   2a86c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a870:	ldr	w1, [x8]
   2a874:	ldr	x23, [x23, #2408]
   2a878:	cmp	w20, w1
   2a87c:	b.lt	2ab30 <rl_redisplay@@Base+0x1354>  // b.tstop
   2a880:	cmp	w26, #0x2
   2a884:	b.lt	2ab2c <rl_redisplay@@Base+0x1350>  // b.tstop
   2a888:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a88c:	ldr	x8, [x8, #1896]
   2a890:	ldr	w8, [x8]
   2a894:	cbnz	w8, 2ab2c <rl_redisplay@@Base+0x1350>
   2a898:	ldr	x0, [sp, #32]
   2a89c:	mov	w2, wzr
   2a8a0:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2a8a4:	mov	w20, w0
   2a8a8:	b	2ab30 <rl_redisplay@@Base+0x1354>
   2a8ac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a8b0:	ldr	x9, [x9, #2408]
   2a8b4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a8b8:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2a8bc:	mov	w14, #0x5556                	// #21846
   2a8c0:	str	wzr, [x9]
   2a8c4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2a8c8:	ldr	w13, [x9, #1076]
   2a8cc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2a8d0:	ldr	w10, [x9, #1092]
   2a8d4:	ldr	w9, [x27, #1128]
   2a8d8:	ldr	x11, [x11, #3552]
   2a8dc:	ldr	w12, [x12, #1064]
   2a8e0:	movk	w14, #0x5555, lsl #16
   2a8e4:	cmp	w9, #0x0
   2a8e8:	ldrsw	x11, [x11]
   2a8ec:	csel	w15, w10, w9, eq  // eq = none
   2a8f0:	sub	w15, w13, w15
   2a8f4:	add	w12, w12, w10
   2a8f8:	mul	x14, x11, x14
   2a8fc:	lsr	x16, x14, #63
   2a900:	lsr	x14, x14, #32
   2a904:	add	w14, w14, w16
   2a908:	sub	w16, w11, #0x2
   2a90c:	cmp	w15, w16
   2a910:	b.le	2a930 <rl_redisplay@@Base+0x1154>
   2a914:	sub	w13, w13, w14, lsl #1
   2a918:	bic	w14, w13, w13, asr #31
   2a91c:	cmp	w14, w12
   2a920:	ccmp	w13, #0x0, #0x4, lt  // lt = tstop
   2a924:	ccmp	w10, #0x0, #0x4, gt
   2a928:	csel	w21, w12, w14, ne  // ne = any
   2a92c:	b	2a978 <rl_redisplay@@Base+0x119c>
   2a930:	sub	w17, w13, w10
   2a934:	cmp	w17, w16
   2a938:	b.ge	2a950 <rl_redisplay@@Base+0x1174>  // b.tcont
   2a93c:	cmp	w12, #0x0
   2a940:	cset	w12, gt
   2a944:	mov	w21, wzr
   2a948:	str	w12, [x23, #1112]
   2a94c:	b	2a9a4 <rl_redisplay@@Base+0x11c8>
   2a950:	cmp	w15, #0x0
   2a954:	mov	w21, w9
   2a958:	b.gt	2a978 <rl_redisplay@@Base+0x119c>
   2a95c:	sub	w13, w13, #0x1
   2a960:	sdiv	w13, w13, w14
   2a964:	mul	w13, w13, w14
   2a968:	cmp	w13, #0x0
   2a96c:	ccmp	w10, #0x0, #0x4, gt
   2a970:	ccmp	w13, w12, #0x0, ne  // ne = any
   2a974:	csel	w21, w12, w13, lt  // lt = tstop
   2a978:	cmp	w21, w12
   2a97c:	cset	w12, lt  // lt = tstop
   2a980:	cmp	w21, #0x1
   2a984:	str	w12, [x23, #1112]
   2a988:	b.lt	2a9a4 <rl_redisplay@@Base+0x11c8>  // b.tstop
   2a98c:	ldr	x12, [sp, #32]
   2a990:	mov	w11, #0x3c                  	// #60
   2a994:	strb	w11, [x12, w21, uxtw]
   2a998:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a99c:	ldr	x11, [x11, #3552]
   2a9a0:	ldr	w11, [x11]
   2a9a4:	cmp	w21, #0x0
   2a9a8:	csel	w10, w10, wzr, eq  // eq = none
   2a9ac:	add	w12, w10, w21
   2a9b0:	add	w11, w12, w11
   2a9b4:	cmp	w11, #0x1
   2a9b8:	b.lt	2a9d4 <rl_redisplay@@Base+0x11f8>  // b.tstop
   2a9bc:	cmp	w11, w20
   2a9c0:	b.ge	2a9d4 <rl_redisplay@@Base+0x11f8>  // b.tcont
   2a9c4:	ldr	x12, [sp, #32]
   2a9c8:	add	x11, x12, w11, sxtw
   2a9cc:	mov	w12, #0x3e                  	// #62
   2a9d0:	sturb	w12, [x11, #-1]
   2a9d4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a9d8:	ldr	x11, [x11, #3064]
   2a9dc:	ldr	w11, [x11]
   2a9e0:	cbz	w11, 2a9f4 <rl_redisplay@@Base+0x1218>
   2a9e4:	ldr	w11, [x19, #1088]
   2a9e8:	cbnz	w11, 2a9f4 <rl_redisplay@@Base+0x1218>
   2a9ec:	cmp	w21, w9
   2a9f0:	b.eq	2b2ec <rl_redisplay@@Base+0x1b10>  // b.none
   2a9f4:	str	wzr, [x19, #1088]
   2a9f8:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2a9fc:	adrp	x11, 57000 <rl_insert@@Base+0x20abc>
   2aa00:	ldr	x27, [x27, #1952]
   2aa04:	ldr	x11, [x11, #3336]
   2aa08:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   2aa0c:	strb	wzr, [x25, #1116]
   2aa10:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2aa14:	ldr	x11, [x11]
   2aa18:	ldr	x12, [x12, #3552]
   2aa1c:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2aa20:	ldr	w13, [x13, #1120]
   2aa24:	ldr	x8, [x8]
   2aa28:	ldr	w12, [x12]
   2aa2c:	ldr	w19, [x27]
   2aa30:	sxtw	x9, w9
   2aa34:	sxtw	x22, w21
   2aa38:	add	x0, x11, x9
   2aa3c:	add	w3, w13, w12
   2aa40:	add	x1, x8, x22
   2aa44:	add	w4, w10, w12
   2aa48:	mov	w2, wzr
   2aa4c:	mov	w5, wzr
   2aa50:	bl	2c04c <rl_on_new_line@@Base+0x2e4>
   2aa54:	ldr	w9, [x23, #1112]
   2aa58:	ldr	w8, [x27]
   2aa5c:	mov	x12, x27
   2aa60:	cmp	w26, #0x2
   2aa64:	b.lt	2aac4 <rl_redisplay@@Base+0x12e8>  // b.tstop
   2aa68:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2aa6c:	ldr	x10, [x10, #1896]
   2aa70:	ldr	w10, [x10]
   2aa74:	cbnz	w10, 2aac4 <rl_redisplay@@Base+0x12e8>
   2aa78:	cbz	w9, 2aac4 <rl_redisplay@@Base+0x12e8>
   2aa7c:	ldrb	w10, [x25, #1116]
   2aa80:	cbnz	w10, 2aac4 <rl_redisplay@@Base+0x12e8>
   2aa84:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2aa88:	ldr	w10, [x10, #1092]
   2aa8c:	cmp	w8, w19
   2aa90:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   2aa94:	b.eq	2aad0 <rl_redisplay@@Base+0x12f4>  // b.none
   2aa98:	cmp	w8, w10
   2aa9c:	b.le	2aad0 <rl_redisplay@@Base+0x12f4>
   2aaa0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2aaa4:	ldr	w11, [x11, #1056]
   2aaa8:	cmp	w19, w11
   2aaac:	b.ge	2aad0 <rl_redisplay@@Base+0x12f4>  // b.tcont
   2aab0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2aab4:	ldr	w11, [x11, #1052]
   2aab8:	sub	w8, w8, w11
   2aabc:	str	w8, [x12]
   2aac0:	b	2aad0 <rl_redisplay@@Base+0x12f4>
   2aac4:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2aac8:	ldr	w10, [x10, #1092]
   2aacc:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   2aad0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2aad4:	ldr	w11, [x11, #1120]
   2aad8:	cmp	w21, #0x0
   2aadc:	csel	w10, w10, wzr, eq  // eq = none
   2aae0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2aae4:	cmp	w10, w11
   2aae8:	b.le	2b1c0 <rl_redisplay@@Base+0x19e4>
   2aaec:	cbz	w9, 2b1c0 <rl_redisplay@@Base+0x19e4>
   2aaf0:	cmp	w8, w20
   2aaf4:	b.ne	2b1c0 <rl_redisplay@@Base+0x19e4>  // b.any
   2aaf8:	ldr	w9, [x19, #1124]
   2aafc:	sub	w11, w8, w10
   2ab00:	cmp	w11, w9
   2ab04:	b.ge	2b1c0 <rl_redisplay@@Base+0x19e4>  // b.tcont
   2ab08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ab0c:	ldr	x9, [x9, #3704]
   2ab10:	ldr	x0, [x9]
   2ab14:	cbz	x0, 2b170 <rl_redisplay@@Base+0x1994>
   2ab18:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ab1c:	ldr	x2, [x2, #2496]
   2ab20:	mov	w1, #0x1                   	// #1
   2ab24:	bl	16590 <tputs@plt>
   2ab28:	b	2b1c0 <rl_redisplay@@Base+0x19e4>
   2ab2c:	sub	w20, w1, #0x1
   2ab30:	tbnz	w21, #31, 2add8 <rl_redisplay@@Base+0x15fc>
   2ab34:	ldur	x8, [x29, #-24]
   2ab38:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ab3c:	ldr	x27, [x27, #1952]
   2ab40:	mov	x23, xzr
   2ab44:	mov	w26, w8
   2ab48:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   2ab4c:	b	2ab70 <rl_redisplay@@Base+0x1394>
   2ab50:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ab54:	ldr	x2, [x2, #2496]
   2ab58:	mov	w1, #0x1                   	// #1
   2ab5c:	bl	16590 <tputs@plt>
   2ab60:	cbz	x23, 2ad98 <rl_redisplay@@Base+0x15bc>
   2ab64:	cmp	x22, x26
   2ab68:	mov	x23, x22
   2ab6c:	b.eq	2adc8 <rl_redisplay@@Base+0x15ec>  // b.none
   2ab70:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ab74:	ldr	x8, [x8, #3600]
   2ab78:	ldr	w19, [x27]
   2ab7c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2ab80:	add	x0, x0, #0xec9
   2ab84:	ldrsw	x10, [x8]
   2ab88:	strb	wzr, [x28, #1116]
   2ab8c:	cmp	x23, x10
   2ab90:	b.gt	2aba8 <rl_redisplay@@Base+0x13cc>
   2ab94:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2ab98:	ldr	x8, [x8, #3336]
   2ab9c:	ldp	x8, x9, [x8]
   2aba0:	ldrsw	x9, [x9, x23, lsl #2]
   2aba4:	add	x0, x8, x9
   2aba8:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2abac:	ldr	x9, [x8, #3328]
   2abb0:	cmp	x23, x10
   2abb4:	ldp	x11, x8, [x9]
   2abb8:	ldrsw	x9, [x8, x23, lsl #2]
   2abbc:	add	x1, x11, x9
   2abc0:	b.le	2abd0 <rl_redisplay@@Base+0x13f4>
   2abc4:	mov	w3, wzr
   2abc8:	add	x22, x23, #0x1
   2abcc:	b	2abec <rl_redisplay@@Base+0x1410>
   2abd0:	adrp	x10, 57000 <rl_insert@@Base+0x20abc>
   2abd4:	ldr	x10, [x10, #3336]
   2abd8:	add	x22, x23, #0x1
   2abdc:	ldr	x10, [x10, #8]
   2abe0:	ldr	w11, [x10, x22, lsl #2]
   2abe4:	ldr	w10, [x10, x23, lsl #2]
   2abe8:	sub	w3, w11, w10
   2abec:	ldr	w8, [x8, x22, lsl #2]
   2abf0:	mov	w2, w23
   2abf4:	mov	w5, w21
   2abf8:	sub	w4, w8, w9
   2abfc:	bl	2c04c <rl_on_new_line@@Base+0x2e4>
   2ac00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ac04:	ldrb	w9, [x28, #1116]
   2ac08:	ldr	x8, [x8, #1896]
   2ac0c:	ldr	x10, [sp, #24]
   2ac10:	eor	w9, w9, #0x1
   2ac14:	ldr	w8, [x8]
   2ac18:	cmp	w10, #0x2
   2ac1c:	b.lt	2ac6c <rl_redisplay@@Base+0x1490>  // b.tstop
   2ac20:	orr	w10, w8, w23
   2ac24:	cbnz	w10, 2ac6c <rl_redisplay@@Base+0x1490>
   2ac28:	tbz	w9, #0, 2ac6c <rl_redisplay@@Base+0x1490>
   2ac2c:	ldr	w10, [x27]
   2ac30:	cmp	w10, w19
   2ac34:	b.eq	2ac6c <rl_redisplay@@Base+0x1490>  // b.none
   2ac38:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2ac3c:	ldr	w11, [x11, #1092]
   2ac40:	cmp	w10, w11
   2ac44:	b.le	2ac6c <rl_redisplay@@Base+0x1490>
   2ac48:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2ac4c:	ldr	w11, [x11, #1056]
   2ac50:	cmp	w19, w11
   2ac54:	b.ge	2ac6c <rl_redisplay@@Base+0x1490>  // b.tcont
   2ac58:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ac5c:	ldr	w9, [x9, #1052]
   2ac60:	sub	w9, w10, w9
   2ac64:	str	w9, [x27]
   2ac68:	b	2acf0 <rl_redisplay@@Base+0x1514>
   2ac6c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ac70:	ldr	w10, [x10, #1104]
   2ac74:	cmp	x23, x10
   2ac78:	cset	w10, ne  // ne = any
   2ac7c:	orn	w9, w10, w9
   2ac80:	tbnz	w9, #0, 2acf0 <rl_redisplay@@Base+0x1514>
   2ac84:	cbnz	w8, 2acf0 <rl_redisplay@@Base+0x1514>
   2ac88:	ldr	x9, [sp, #24]
   2ac8c:	cmp	w9, #0x2
   2ac90:	b.lt	2acf0 <rl_redisplay@@Base+0x1514>  // b.tstop
   2ac94:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ac98:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ac9c:	ldr	w9, [x9, #1060]
   2aca0:	ldr	x10, [x10, #3552]
   2aca4:	ldr	w10, [x10]
   2aca8:	cmp	w9, w10
   2acac:	b.le	2acf0 <rl_redisplay@@Base+0x1514>
   2acb0:	ldr	w9, [x27]
   2acb4:	cmp	w9, w19
   2acb8:	b.eq	2acf0 <rl_redisplay@@Base+0x1514>  // b.none
   2acbc:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2acc0:	ldr	w12, [x11, #1056]
   2acc4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2acc8:	ldr	w11, [x11, #1052]
   2accc:	sub	w10, w12, w10
   2acd0:	sub	w10, w10, w11
   2acd4:	cmp	w9, w10
   2acd8:	b.le	2acf0 <rl_redisplay@@Base+0x1514>
   2acdc:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ace0:	ldr	w10, [x10, #1092]
   2ace4:	add	w9, w11, w9
   2ace8:	sub	w9, w9, w10
   2acec:	b	2ac64 <rl_redisplay@@Base+0x1488>
   2acf0:	orr	w9, w21, w23
   2acf4:	cbnz	w9, 2ab60 <rl_redisplay@@Base+0x1384>
   2acf8:	ldr	w9, [x27]
   2acfc:	cmp	w9, w20
   2ad00:	b.ne	2ab60 <rl_redisplay@@Base+0x1384>  // b.any
   2ad04:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ad08:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ad0c:	ldr	w9, [x9, #1092]
   2ad10:	ldr	w10, [x10, #1120]
   2ad14:	cmp	w9, w10
   2ad18:	b.le	2ab60 <rl_redisplay@@Base+0x1384>
   2ad1c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ad20:	ldr	w10, [x10, #1124]
   2ad24:	cmp	w20, w10
   2ad28:	b.ge	2ab60 <rl_redisplay@@Base+0x1384>  // b.tcont
   2ad2c:	cmp	w8, #0x0
   2ad30:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ad34:	ldr	x8, [x8, #3552]
   2ad38:	ldr	x10, [sp, #24]
   2ad3c:	ldr	w8, [x8]
   2ad40:	ccmp	w10, #0x1, #0x4, eq  // eq = none
   2ad44:	csel	w9, wzr, w9, gt
   2ad48:	sub	w9, w9, w20
   2ad4c:	adds	w25, w9, w8
   2ad50:	b.eq	2ab60 <rl_redisplay@@Base+0x1384>  // b.none
   2ad54:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ad58:	ldr	x8, [x8, #3704]
   2ad5c:	ldr	x0, [x8]
   2ad60:	cbnz	x0, 2ab50 <rl_redisplay@@Base+0x1374>
   2ad64:	cmp	w25, #0x1
   2ad68:	mov	w8, w20
   2ad6c:	b.lt	2ad8c <rl_redisplay@@Base+0x15b0>  // b.tstop
   2ad70:	mov	w19, w25
   2ad74:	ldr	x1, [x24]
   2ad78:	mov	w0, #0x20                  	// #32
   2ad7c:	bl	16670 <putc@plt>
   2ad80:	subs	w19, w19, #0x1
   2ad84:	b.ne	2ad74 <rl_redisplay@@Base+0x1598>  // b.any
   2ad88:	ldr	w8, [x27]
   2ad8c:	add	w8, w8, w25
   2ad90:	str	w8, [x27]
   2ad94:	b	2ab60 <rl_redisplay@@Base+0x1384>
   2ad98:	cbz	w21, 2adb0 <rl_redisplay@@Base+0x15d4>
   2ad9c:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2ada0:	ldr	x8, [x8, #3328]
   2ada4:	ldr	x8, [x8, #8]
   2ada8:	ldr	w8, [x8, #4]
   2adac:	b	2adbc <rl_redisplay@@Base+0x15e0>
   2adb0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2adb4:	ldr	w8, [x8, #1092]
   2adb8:	sub	w8, w20, w8
   2adbc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2adc0:	str	w8, [x9, #1124]
   2adc4:	b	2ab64 <rl_redisplay@@Base+0x1388>
   2adc8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2adcc:	ldr	x23, [x23, #2408]
   2add0:	ldur	x9, [x29, #-24]
   2add4:	b	2addc <rl_redisplay@@Base+0x1600>
   2add8:	mov	w9, wzr
   2addc:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ade0:	ldr	x26, [x26, #3600]
   2ade4:	ldr	w8, [x26]
   2ade8:	cmp	w8, w21
   2adec:	b.le	2af84 <rl_redisplay@@Base+0x17a8>
   2adf0:	cmp	w9, w8
   2adf4:	b.gt	2af84 <rl_redisplay@@Base+0x17a8>
   2adf8:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2adfc:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ae00:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ae04:	ldr	x27, [x27, #3704]
   2ae08:	ldr	x28, [x28, #1952]
   2ae0c:	ldr	x20, [x20, #2496]
   2ae10:	mov	w25, w9
   2ae14:	b	2ae48 <rl_redisplay@@Base+0x166c>
   2ae18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ae1c:	ldr	x8, [x8, #3552]
   2ae20:	ldrsw	x22, [x8]
   2ae24:	ldr	x0, [x27]
   2ae28:	cbz	x0, 2aef0 <rl_redisplay@@Base+0x1714>
   2ae2c:	mov	w1, #0x1                   	// #1
   2ae30:	mov	x2, x20
   2ae34:	bl	16590 <tputs@plt>
   2ae38:	ldr	w8, [x26]
   2ae3c:	cmp	w8, w25
   2ae40:	add	x25, x25, #0x1
   2ae44:	b.le	2af84 <rl_redisplay@@Base+0x17a8>
   2ae48:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2ae4c:	ldr	x8, [x8, #3336]
   2ae50:	ldp	x10, x9, [x8]
   2ae54:	ldr	w8, [x23]
   2ae58:	ldrsw	x9, [x9, x25, lsl #2]
   2ae5c:	cmp	x25, x8
   2ae60:	add	x22, x10, x9
   2ae64:	b.eq	2aec4 <rl_redisplay@@Base+0x16e8>  // b.none
   2ae68:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ae6c:	ldr	x9, [x9, #3520]
   2ae70:	ldr	w9, [x9]
   2ae74:	cmp	w9, w25
   2ae78:	b.lt	2aec4 <rl_redisplay@@Base+0x16e8>  // b.tstop
   2ae7c:	sub	w19, w25, w8
   2ae80:	cmp	w19, #0x1
   2ae84:	b.lt	2af24 <rl_redisplay@@Base+0x1748>  // b.tstop
   2ae88:	ldr	x1, [x24]
   2ae8c:	mov	w0, #0xa                   	// #10
   2ae90:	bl	16670 <putc@plt>
   2ae94:	subs	w19, w19, #0x1
   2ae98:	b.ne	2ae88 <rl_redisplay@@Base+0x16ac>  // b.any
   2ae9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2aea0:	ldr	x8, [x8, #3264]
   2aea4:	mov	w1, #0x1                   	// #1
   2aea8:	mov	x2, x20
   2aeac:	ldr	x0, [x8]
   2aeb0:	bl	16590 <tputs@plt>
   2aeb4:	str	wzr, [x28]
   2aeb8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2aebc:	ldr	x23, [x23, #2408]
   2aec0:	str	w25, [x23]
   2aec4:	mov	w0, wzr
   2aec8:	mov	x1, x22
   2aecc:	bl	16500 <_rl_move_cursor_relative@plt>
   2aed0:	ldr	w8, [x26]
   2aed4:	cmp	x25, x8
   2aed8:	b.ne	2ae18 <rl_redisplay@@Base+0x163c>  // b.any
   2aedc:	mov	x0, x22
   2aee0:	bl	16440 <strlen@plt>
   2aee4:	mov	x22, x0
   2aee8:	ldr	x0, [x27]
   2aeec:	cbnz	x0, 2ae2c <rl_redisplay@@Base+0x1650>
   2aef0:	cbz	w22, 2ae38 <rl_redisplay@@Base+0x165c>
   2aef4:	cmp	w22, #0x1
   2aef8:	b.lt	2af14 <rl_redisplay@@Base+0x1738>  // b.tstop
   2aefc:	mov	w19, w22
   2af00:	ldr	x1, [x24]
   2af04:	mov	w0, #0x20                  	// #32
   2af08:	bl	16670 <putc@plt>
   2af0c:	subs	w19, w19, #0x1
   2af10:	b.ne	2af00 <rl_redisplay@@Base+0x1724>  // b.any
   2af14:	ldr	w8, [x28]
   2af18:	add	w8, w8, w22
   2af1c:	str	w8, [x28]
   2af20:	b	2ae38 <rl_redisplay@@Base+0x165c>
   2af24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2af28:	ldr	x8, [x8, #3912]
   2af2c:	ldr	x0, [x8]
   2af30:	cbz	x0, 2aeb8 <rl_redisplay@@Base+0x16dc>
   2af34:	ldrb	w8, [x0]
   2af38:	cbz	w8, 2aeb8 <rl_redisplay@@Base+0x16dc>
   2af3c:	tbz	w19, #31, 2aeb8 <rl_redisplay@@Base+0x16dc>
   2af40:	mov	w1, #0x1                   	// #1
   2af44:	mov	x2, x20
   2af48:	bl	16590 <tputs@plt>
   2af4c:	cmn	w19, #0x1
   2af50:	b.eq	2aeb8 <rl_redisplay@@Base+0x16dc>  // b.none
   2af54:	neg	w19, w19
   2af58:	mov	w23, #0x1                   	// #1
   2af5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2af60:	ldr	x8, [x8, #3912]
   2af64:	mov	w1, #0x1                   	// #1
   2af68:	mov	x2, x20
   2af6c:	ldr	x0, [x8]
   2af70:	bl	16590 <tputs@plt>
   2af74:	add	w23, w23, #0x1
   2af78:	cmp	w23, w19
   2af7c:	b.lt	2af5c <rl_redisplay@@Base+0x1780>  // b.tstop
   2af80:	b	2aeb8 <rl_redisplay@@Base+0x16dc>
   2af84:	ldr	w8, [x23]
   2af88:	ldr	w25, [sp, #12]
   2af8c:	adrp	x28, 57000 <rl_insert@@Base+0x20abc>
   2af90:	str	w21, [x26]
   2af94:	subs	w19, w25, w8
   2af98:	b.ne	2afb0 <rl_redisplay@@Base+0x17d4>  // b.any
   2af9c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2afa0:	ldr	w19, [x8, #1092]
   2afa4:	ldr	x23, [sp, #24]
   2afa8:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   2afac:	b	2b064 <rl_redisplay@@Base+0x1888>
   2afb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2afb4:	ldr	x8, [x8, #3520]
   2afb8:	ldr	x23, [sp, #24]
   2afbc:	ldr	w8, [x8]
   2afc0:	cmp	w8, w25
   2afc4:	b.lt	2b018 <rl_redisplay@@Base+0x183c>  // b.tstop
   2afc8:	cmp	w19, #0x1
   2afcc:	b.lt	2b378 <rl_redisplay@@Base+0x1b9c>  // b.tstop
   2afd0:	ldr	x1, [x24]
   2afd4:	mov	w0, #0xa                   	// #10
   2afd8:	bl	16670 <putc@plt>
   2afdc:	subs	w19, w19, #0x1
   2afe0:	b.ne	2afd0 <rl_redisplay@@Base+0x17f4>  // b.any
   2afe4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2afe8:	ldr	x8, [x8, #3264]
   2afec:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2aff0:	mov	w1, #0x1                   	// #1
   2aff4:	ldr	x0, [x8]
   2aff8:	ldr	x2, [x2, #2496]
   2affc:	bl	16590 <tputs@plt>
   2b000:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b004:	ldr	x8, [x8, #1952]
   2b008:	str	wzr, [x8]
   2b00c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b010:	ldr	x8, [x8, #2408]
   2b014:	str	w25, [x8]
   2b018:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b01c:	ldr	x8, [x8, #1896]
   2b020:	cmp	w23, #0x1
   2b024:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   2b028:	ldr	w9, [x8]
   2b02c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b030:	ldr	w19, [x8, #1092]
   2b034:	cset	w8, eq  // eq = none
   2b038:	cmp	w9, #0x0
   2b03c:	cset	w9, ne  // ne = any
   2b040:	cbz	w19, 2b064 <rl_redisplay@@Base+0x1888>
   2b044:	cbnz	w25, 2b064 <rl_redisplay@@Base+0x1888>
   2b048:	orr	w8, w8, w9
   2b04c:	cbz	w8, 2b064 <rl_redisplay@@Base+0x1888>
   2b050:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b054:	ldr	x8, [x8, #1952]
   2b058:	ldr	w9, [x8]
   2b05c:	add	w9, w9, w19
   2b060:	str	w9, [x8]
   2b064:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b068:	ldr	x21, [x21, #1952]
   2b06c:	ldr	w22, [x21]
   2b070:	cbnz	w25, 2b220 <rl_redisplay@@Base+0x1a44>
   2b074:	cmp	w19, #0x1
   2b078:	b.lt	2b220 <rl_redisplay@@Base+0x1a44>  // b.tstop
   2b07c:	cmp	w22, #0x1
   2b080:	b.lt	2b220 <rl_redisplay@@Base+0x1a44>  // b.tstop
   2b084:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b088:	ldr	w20, [x8, #1064]
   2b08c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2b090:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b094:	ldr	x8, [x8, #1896]
   2b098:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2b09c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2b0a0:	ldr	w9, [x9, #1060]
   2b0a4:	ldr	w8, [x8]
   2b0a8:	ldr	w10, [x10, #1056]
   2b0ac:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2b0b0:	ldr	x11, [x11, #1032]
   2b0b4:	cmp	w8, #0x0
   2b0b8:	ccmp	x0, #0x1, #0x0, eq  // eq = none
   2b0bc:	csinc	w8, w9, w10, hi  // hi = pmore
   2b0c0:	cbz	x11, 2b168 <rl_redisplay@@Base+0x198c>
   2b0c4:	cmp	w22, w8
   2b0c8:	b.ge	2b168 <rl_redisplay@@Base+0x198c>  // b.tcont
   2b0cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b0d0:	ldr	x8, [x8, #3264]
   2b0d4:	add	w20, w19, w20
   2b0d8:	ldr	x0, [x8]
   2b0dc:	cbz	x0, 2b0f0 <rl_redisplay@@Base+0x1914>
   2b0e0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b0e4:	ldr	x2, [x2, #2496]
   2b0e8:	mov	w1, #0x1                   	// #1
   2b0ec:	bl	16590 <tputs@plt>
   2b0f0:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2b0f4:	ldrb	w8, [x19, #1084]
   2b0f8:	cmp	w8, #0x1
   2b0fc:	b.ne	2b110 <rl_redisplay@@Base+0x1934>  // b.any
   2b100:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   2b104:	add	x0, x0, #0x10a
   2b108:	mov	w1, #0x1                   	// #1
   2b10c:	bl	16d10 <_rl_output_some_chars@plt>
   2b110:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b114:	ldr	x0, [x8, #1032]
   2b118:	mov	w1, w20
   2b11c:	bl	16d10 <_rl_output_some_chars@plt>
   2b120:	cmp	w23, #0x2
   2b124:	b.lt	2b214 <rl_redisplay@@Base+0x1a38>  // b.tstop
   2b128:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b12c:	ldr	x8, [x8, #1896]
   2b130:	ldr	w8, [x8]
   2b134:	cbnz	w8, 2b214 <rl_redisplay@@Base+0x1a38>
   2b138:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b13c:	ldr	x0, [x8, #1032]
   2b140:	mov	w3, #0x1                   	// #1
   2b144:	mov	w1, wzr
   2b148:	mov	w2, w20
   2b14c:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2b150:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b154:	ldr	w8, [x8, #1092]
   2b158:	ldrb	w9, [x19, #1084]
   2b15c:	sub	w8, w0, w8
   2b160:	add	w22, w8, w9
   2b164:	b	2b21c <rl_redisplay@@Base+0x1a40>
   2b168:	ldr	w22, [x21]
   2b16c:	b	2b220 <rl_redisplay@@Base+0x1a44>
   2b170:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b174:	ldr	x9, [x9, #3552]
   2b178:	ldr	w9, [x9]
   2b17c:	sub	w23, w9, w11
   2b180:	cbz	w23, 2b1c0 <rl_redisplay@@Base+0x19e4>
   2b184:	cmp	w23, #0x1
   2b188:	mov	w11, w20
   2b18c:	b.lt	2b1b8 <rl_redisplay@@Base+0x19dc>  // b.tstop
   2b190:	add	w9, w10, w9
   2b194:	mov	x25, x12
   2b198:	sub	w26, w9, w8
   2b19c:	ldr	x1, [x24]
   2b1a0:	mov	w0, #0x20                  	// #32
   2b1a4:	bl	16670 <putc@plt>
   2b1a8:	subs	w26, w26, #0x1
   2b1ac:	b.ne	2b19c <rl_redisplay@@Base+0x19c0>  // b.any
   2b1b0:	ldr	w11, [x25]
   2b1b4:	mov	x12, x25
   2b1b8:	add	w8, w11, w23
   2b1bc:	str	w8, [x12]
   2b1c0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2b1c4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b1c8:	ldr	w9, [x9, #1092]
   2b1cc:	ldr	x10, [x10, #3552]
   2b1d0:	cmp	w21, #0x0
   2b1d4:	sub	w8, w20, w21
   2b1d8:	csneg	w9, wzr, w9, ne  // ne = any
   2b1dc:	ldr	w10, [x10]
   2b1e0:	ldr	x11, [x28, #3328]
   2b1e4:	add	w8, w9, w8
   2b1e8:	cmp	w8, w10
   2b1ec:	csel	w8, w10, w8, gt
   2b1f0:	str	w8, [x19, #1124]
   2b1f4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b1f8:	ldr	w8, [x8, #1076]
   2b1fc:	ldr	x9, [x11]
   2b200:	sub	w0, w8, w21
   2b204:	add	x1, x9, x22
   2b208:	bl	16500 <_rl_move_cursor_relative@plt>
   2b20c:	str	w21, [x27, #1128]
   2b210:	b	2b2ec <rl_redisplay@@Base+0x1b10>
   2b214:	ldrb	w8, [x19, #1084]
   2b218:	add	w22, w20, w8
   2b21c:	str	w22, [x21]
   2b220:	ldr	x8, [x28, #3328]
   2b224:	ldr	x8, [x8, #8]
   2b228:	ldrsw	x19, [x8, w25, sxtw #2]
   2b22c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b230:	ldr	w8, [x8, #1076]
   2b234:	sub	w20, w8, w19
   2b238:	cbnz	w25, 2b2b4 <rl_redisplay@@Base+0x1ad8>
   2b23c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b240:	ldr	w8, [x8, #1092]
   2b244:	cbz	w8, 2b2b4 <rl_redisplay@@Base+0x1ad8>
   2b248:	cmp	w20, w22
   2b24c:	b.ge	2b2b4 <rl_redisplay@@Base+0x1ad8>  // b.tcont
   2b250:	cmp	w23, #0x2
   2b254:	mov	w22, w20
   2b258:	b.lt	2b29c <rl_redisplay@@Base+0x1ac0>  // b.tstop
   2b25c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b260:	ldr	x8, [x8, #1896]
   2b264:	mov	w22, w20
   2b268:	ldr	w8, [x8]
   2b26c:	cbnz	w8, 2b29c <rl_redisplay@@Base+0x1ac0>
   2b270:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2b274:	ldr	x8, [x8, #3336]
   2b278:	mov	w3, #0x1                   	// #1
   2b27c:	mov	w1, wzr
   2b280:	mov	w2, w20
   2b284:	ldr	x8, [x8]
   2b288:	add	x0, x8, x19
   2b28c:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2b290:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b294:	ldr	w8, [x8, #1120]
   2b298:	sub	w22, w0, w8
   2b29c:	tbnz	w22, #31, 2b2b4 <rl_redisplay@@Base+0x1ad8>
   2b2a0:	ldr	w8, [x21]
   2b2a4:	subs	w0, w8, w22
   2b2a8:	b.le	2b2b4 <rl_redisplay@@Base+0x1ad8>
   2b2ac:	bl	164e0 <_rl_backspace@plt>
   2b2b0:	str	w22, [x21]
   2b2b4:	cmp	w23, #0x2
   2b2b8:	b.lt	2b2cc <rl_redisplay@@Base+0x1af0>  // b.tstop
   2b2bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b2c0:	ldr	x8, [x8, #1896]
   2b2c4:	ldr	w8, [x8]
   2b2c8:	cbz	w8, 2b2d8 <rl_redisplay@@Base+0x1afc>
   2b2cc:	ldr	w8, [x21]
   2b2d0:	cmp	w20, w8
   2b2d4:	b.eq	2b2ec <rl_redisplay@@Base+0x1b10>  // b.none
   2b2d8:	ldr	x8, [x28, #3328]
   2b2dc:	mov	w0, w20
   2b2e0:	ldr	x8, [x8]
   2b2e4:	add	x1, x8, x19
   2b2e8:	bl	16500 <_rl_move_cursor_relative@plt>
   2b2ec:	ldr	x0, [x24]
   2b2f0:	bl	17430 <fflush@plt>
   2b2f4:	adrp	x15, 57000 <rl_insert@@Base+0x20abc>
   2b2f8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b2fc:	ldr	x8, [x15, #3336]
   2b300:	ldr	x9, [x28, #3328]
   2b304:	ldr	x10, [x10, #3064]
   2b308:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2b30c:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b310:	str	wzr, [x10]
   2b314:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b318:	ldr	x10, [x10, #2192]
   2b31c:	ldr	w11, [x27, #1128]
   2b320:	ldr	w12, [x12, #1092]
   2b324:	ldr	w10, [x10]
   2b328:	ldr	x14, [x14, #2984]
   2b32c:	cmp	w11, #0x0
   2b330:	str	x9, [x15, #3336]
   2b334:	ccmp	w10, #0x0, #0x4, ne  // ne = any
   2b338:	ldr	x13, [x14]
   2b33c:	str	x8, [x28, #3328]
   2b340:	csel	w9, wzr, w12, ne  // ne = any
   2b344:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2b348:	and	x8, x13, #0xfffffffffeffffff
   2b34c:	str	w9, [x10, #1120]
   2b350:	str	x8, [x14]
   2b354:	bl	17240 <_rl_release_sigint@plt>
   2b358:	ldp	x20, x19, [sp, #144]
   2b35c:	ldp	x22, x21, [sp, #128]
   2b360:	ldp	x24, x23, [sp, #112]
   2b364:	ldp	x26, x25, [sp, #96]
   2b368:	ldp	x28, x27, [sp, #80]
   2b36c:	ldp	x29, x30, [sp, #64]
   2b370:	add	sp, sp, #0xa0
   2b374:	ret
   2b378:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b37c:	ldr	x22, [x22, #3912]
   2b380:	ldr	x0, [x22]
   2b384:	cbz	x0, 2b00c <rl_redisplay@@Base+0x1830>
   2b388:	ldrb	w8, [x0]
   2b38c:	cbz	w8, 2b00c <rl_redisplay@@Base+0x1830>
   2b390:	tbz	w19, #31, 2b00c <rl_redisplay@@Base+0x1830>
   2b394:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b398:	ldr	x2, [x2, #2496]
   2b39c:	mov	w1, #0x1                   	// #1
   2b3a0:	bl	16590 <tputs@plt>
   2b3a4:	cmn	w19, #0x1
   2b3a8:	b.eq	2b00c <rl_redisplay@@Base+0x1830>  // b.none
   2b3ac:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b3b0:	ldr	x20, [x20, #2496]
   2b3b4:	neg	w19, w19
   2b3b8:	mov	w21, #0x1                   	// #1
   2b3bc:	ldr	x0, [x22]
   2b3c0:	mov	w1, #0x1                   	// #1
   2b3c4:	mov	x2, x20
   2b3c8:	bl	16590 <tputs@plt>
   2b3cc:	add	w21, w21, #0x1
   2b3d0:	cmp	w21, w19
   2b3d4:	b.lt	2b3bc <rl_redisplay@@Base+0x1be0>  // b.tstop
   2b3d8:	b	2b00c <rl_redisplay@@Base+0x1830>

000000000002b3dc <_rl_strip_prompt@@Base>:
   2b3dc:	mov	w1, wzr
   2b3e0:	mov	x2, xzr
   2b3e4:	mov	x3, xzr
   2b3e8:	mov	x4, xzr
   2b3ec:	mov	x5, xzr
   2b3f0:	b	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2b3f4:	sub	sp, sp, #0xc0
   2b3f8:	stp	x29, x30, [sp, #96]
   2b3fc:	stp	x28, x27, [sp, #112]
   2b400:	stp	x26, x25, [sp, #128]
   2b404:	stp	x24, x23, [sp, #144]
   2b408:	stp	x22, x21, [sp, #160]
   2b40c:	stp	x20, x19, [sp, #176]
   2b410:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b414:	ldr	x8, [x8, #2016]
   2b418:	and	w9, w1, #0x1
   2b41c:	mov	x20, x5
   2b420:	mov	x21, x4
   2b424:	ldr	x8, [x8]
   2b428:	mov	x22, x3
   2b42c:	mov	x28, x2
   2b430:	mov	x23, x0
   2b434:	cmp	x8, x0
   2b438:	cset	w8, eq  // eq = none
   2b43c:	cmp	w9, w8
   2b440:	mov	x24, x0
   2b444:	add	x29, sp, #0x60
   2b448:	b.eq	2b550 <_rl_strip_prompt@@Base+0x174>  // b.none
   2b44c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b450:	ldr	x8, [x8, #2008]
   2b454:	mov	x24, x23
   2b458:	ldr	w8, [x8]
   2b45c:	cbz	w8, 2b550 <_rl_strip_prompt@@Base+0x174>
   2b460:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b464:	ldr	x8, [x8, #3416]
   2b468:	ldr	w8, [x8]
   2b46c:	cmp	w8, #0x1
   2b470:	b.ne	2b4a4 <_rl_strip_prompt@@Base+0xc8>  // b.any
   2b474:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b478:	ldr	x8, [x8, #3496]
   2b47c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b480:	ldr	x9, [x9, #3432]
   2b484:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   2b488:	ldr	x8, [x8]
   2b48c:	add	x10, x10, #0xdaf
   2b490:	ldr	w9, [x9]
   2b494:	cmp	x8, #0x0
   2b498:	csel	x25, x10, x8, eq  // eq = none
   2b49c:	csinc	w19, w9, wzr, ne  // ne = any
   2b4a0:	b	2b518 <_rl_strip_prompt@@Base+0x13c>
   2b4a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4a8:	ldr	x8, [x8, #1992]
   2b4ac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4b0:	ldr	x8, [x8]
   2b4b4:	ldr	x9, [x9, #4032]
   2b4b8:	cmp	x8, x9
   2b4bc:	b.eq	2b4e8 <_rl_strip_prompt@@Base+0x10c>  // b.none
   2b4c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4c4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4c8:	ldr	x8, [x8, #2792]
   2b4cc:	ldr	x9, [x9, #2200]
   2b4d0:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   2b4d4:	mov	w10, #0x5                   	// #5
   2b4d8:	ldr	x8, [x8]
   2b4dc:	ldr	w9, [x9]
   2b4e0:	add	x11, x11, #0xdb1
   2b4e4:	b	2b50c <_rl_strip_prompt@@Base+0x130>
   2b4e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4ec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b4f0:	ldr	x8, [x8, #2704]
   2b4f4:	ldr	x9, [x9, #2672]
   2b4f8:	adrp	x11, 3f000 <filename_completion_function@@Base+0x580>
   2b4fc:	mov	w10, #0x5                   	// #5
   2b500:	ldr	x8, [x8]
   2b504:	ldr	w9, [x9]
   2b508:	add	x11, x11, #0xdb7
   2b50c:	cmp	x8, #0x0
   2b510:	csel	w19, w10, w9, eq  // eq = none
   2b514:	csel	x25, x11, x8, eq  // eq = none
   2b518:	mov	x0, x23
   2b51c:	bl	16440 <strlen@plt>
   2b520:	add	w8, w19, w0
   2b524:	add	w8, w8, #0x1
   2b528:	sxtw	x0, w8
   2b52c:	bl	16bf0 <xmalloc@plt>
   2b530:	sxtw	x26, w19
   2b534:	mov	x1, x25
   2b538:	mov	x2, x26
   2b53c:	mov	x24, x0
   2b540:	bl	16380 <memcpy@plt>
   2b544:	add	x0, x24, x26
   2b548:	mov	x1, x23
   2b54c:	bl	17480 <strcpy@plt>
   2b550:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2b554:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b558:	ldr	x8, [x8, #3552]
   2b55c:	stur	x0, [x29, #-24]
   2b560:	ldr	w8, [x8]
   2b564:	cbz	w8, 2b574 <_rl_strip_prompt@@Base+0x198>
   2b568:	cmp	w0, #0x2
   2b56c:	b.ge	2b58c <_rl_strip_prompt@@Base+0x1b0>  // b.tcont
   2b570:	b	2b59c <_rl_strip_prompt@@Base+0x1c0>
   2b574:	mov	w0, wzr
   2b578:	mov	w1, wzr
   2b57c:	bl	17020 <_rl_get_screen_size@plt>
   2b580:	ldur	x0, [x29, #-24]
   2b584:	cmp	w0, #0x2
   2b588:	b.lt	2b59c <_rl_strip_prompt@@Base+0x1c0>  // b.tstop
   2b58c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b590:	ldr	x8, [x8, #1896]
   2b594:	ldr	w8, [x8]
   2b598:	cbz	w8, 2b63c <_rl_strip_prompt@@Base+0x260>
   2b59c:	mov	w1, #0x1                   	// #1
   2b5a0:	mov	x0, x24
   2b5a4:	bl	17380 <strchr@plt>
   2b5a8:	cbnz	x0, 2b63c <_rl_strip_prompt@@Base+0x260>
   2b5ac:	mov	x0, x24
   2b5b0:	bl	16440 <strlen@plt>
   2b5b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b5b8:	ldr	x8, [x8, #3552]
   2b5bc:	mov	w9, #0x50                  	// #80
   2b5c0:	mov	x25, x0
   2b5c4:	ldr	w8, [x8]
   2b5c8:	cmp	w8, #0x0
   2b5cc:	csel	w8, w8, w9, gt
   2b5d0:	cmp	w8, w25
   2b5d4:	b.le	2b63c <_rl_strip_prompt@@Base+0x260>
   2b5d8:	cmp	x24, x23
   2b5dc:	b.ne	2b5fc <_rl_strip_prompt@@Base+0x220>  // b.any
   2b5e0:	mov	x0, x23
   2b5e4:	bl	16440 <strlen@plt>
   2b5e8:	add	x0, x0, #0x1
   2b5ec:	bl	16bf0 <xmalloc@plt>
   2b5f0:	mov	x1, x23
   2b5f4:	mov	x24, x0
   2b5f8:	bl	17480 <strcpy@plt>
   2b5fc:	cbz	x28, 2b604 <_rl_strip_prompt@@Base+0x228>
   2b600:	str	w25, [x28]
   2b604:	cbz	x22, 2b60c <_rl_strip_prompt@@Base+0x230>
   2b608:	str	wzr, [x22]
   2b60c:	cbz	x21, 2b614 <_rl_strip_prompt@@Base+0x238>
   2b610:	str	wzr, [x21]
   2b614:	cbz	x20, 2b61c <_rl_strip_prompt@@Base+0x240>
   2b618:	str	w25, [x20]
   2b61c:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2b620:	ldr	x0, [x19, #1096]
   2b624:	mov	w1, #0x8                   	// #8
   2b628:	bl	16a50 <xrealloc@plt>
   2b62c:	movi	d0, #0xffffffff00000000
   2b630:	str	x0, [x19, #1096]
   2b634:	str	d0, [x0]
   2b638:	b	2ba20 <_rl_strip_prompt@@Base+0x644>
   2b63c:	mov	x0, x24
   2b640:	bl	16440 <strlen@plt>
   2b644:	mov	x27, x0
   2b648:	add	w8, w27, #0x1
   2b64c:	sxtw	x0, w8
   2b650:	bl	16bf0 <xmalloc@plt>
   2b654:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b658:	ldr	x8, [x8, #3552]
   2b65c:	stur	x0, [x29, #-16]
   2b660:	ldr	w8, [x8]
   2b664:	cmp	w8, #0x1
   2b668:	b.lt	2b680 <_rl_strip_prompt@@Base+0x2a4>  // b.tstop
   2b66c:	cmp	w8, w27
   2b670:	b.gt	2b688 <_rl_strip_prompt@@Base+0x2ac>
   2b674:	sdiv	w8, w27, w8
   2b678:	add	w19, w8, #0x1
   2b67c:	b	2b6a4 <_rl_strip_prompt@@Base+0x2c8>
   2b680:	cmp	w27, #0x50
   2b684:	b.ge	2b690 <_rl_strip_prompt@@Base+0x2b4>  // b.tcont
   2b688:	mov	w19, #0x1                   	// #1
   2b68c:	b	2b6a4 <_rl_strip_prompt@@Base+0x2c8>
   2b690:	mov	w8, #0xcccd                	// #52429
   2b694:	movk	w8, #0xcccc, lsl #16
   2b698:	umull	x8, w27, w8
   2b69c:	lsr	x8, x8, #38
   2b6a0:	add	w19, w8, #0x1
   2b6a4:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   2b6a8:	ldr	x0, [x25, #1096]
   2b6ac:	add	w8, w19, #0x1
   2b6b0:	sbfiz	x1, x8, #2, #32
   2b6b4:	bl	16a50 <xrealloc@plt>
   2b6b8:	cmp	w19, #0x1
   2b6bc:	str	x0, [x25, #1096]
   2b6c0:	str	wzr, [x0]
   2b6c4:	b.lt	2b6dc <_rl_strip_prompt@@Base+0x300>  // b.tstop
   2b6c8:	mov	w8, w19
   2b6cc:	add	x0, x0, #0x4
   2b6d0:	lsl	x2, x8, #2
   2b6d4:	mov	w1, #0xff                  	// #255
   2b6d8:	bl	16bb0 <memset@plt>
   2b6dc:	stp	x21, x20, [sp, #32]
   2b6e0:	stp	x23, x22, [sp, #16]
   2b6e4:	str	x28, [sp, #8]
   2b6e8:	cbz	x24, 2b9ac <_rl_strip_prompt@@Base+0x5d0>
   2b6ec:	ldrb	w8, [x24]
   2b6f0:	cbz	w8, 2b9ac <_rl_strip_prompt@@Base+0x5d0>
   2b6f4:	ldur	x25, [x29, #-16]
   2b6f8:	ldur	x11, [x29, #-24]
   2b6fc:	mov	w13, wzr
   2b700:	mov	w22, wzr
   2b704:	eor	x9, x25, #0xffffffff
   2b708:	mov	w12, wzr
   2b70c:	mov	w19, wzr
   2b710:	mov	w14, wzr
   2b714:	mov	x20, xzr
   2b718:	mov	w21, wzr
   2b71c:	mov	w26, wzr
   2b720:	str	x9, [sp, #48]
   2b724:	sub	w9, w24, #0x1
   2b728:	mov	x23, x24
   2b72c:	stur	wzr, [x29, #-4]
   2b730:	str	w9, [sp, #4]
   2b734:	b	2b758 <_rl_strip_prompt@@Base+0x37c>
   2b738:	mov	w22, #0x1                   	// #1
   2b73c:	mov	x20, x23
   2b740:	mov	w27, w26
   2b744:	mov	x28, x25
   2b748:	ldrb	w8, [x23, #1]!
   2b74c:	mov	w26, w27
   2b750:	mov	x25, x28
   2b754:	cbz	w8, 2b9c4 <_rl_strip_prompt@@Base+0x5e8>
   2b758:	cbnz	w22, 2b768 <_rl_strip_prompt@@Base+0x38c>
   2b75c:	and	w9, w8, #0xff
   2b760:	cmp	w9, #0x1
   2b764:	b.eq	2b738 <_rl_strip_prompt@@Base+0x35c>  // b.none
   2b768:	cbz	w22, 2b794 <_rl_strip_prompt@@Base+0x3b8>
   2b76c:	and	w9, w8, #0xff
   2b770:	cmp	w9, #0x2
   2b774:	b.ne	2b794 <_rl_strip_prompt@@Base+0x3b8>  // b.any
   2b778:	add	x8, x20, #0x1
   2b77c:	cmp	x23, x8
   2b780:	b.eq	2b850 <_rl_strip_prompt@@Base+0x474>  // b.none
   2b784:	ldr	x8, [sp, #48]
   2b788:	mov	w22, wzr
   2b78c:	add	w13, w8, w25
   2b790:	b	2b740 <_rl_strip_prompt@@Base+0x364>
   2b794:	cmp	w11, #0x2
   2b798:	b.lt	2b83c <_rl_strip_prompt@@Base+0x460>  // b.tstop
   2b79c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b7a0:	ldr	x9, [x9, #1896]
   2b7a4:	ldr	w9, [x9]
   2b7a8:	cbnz	w9, 2b83c <_rl_strip_prompt@@Base+0x460>
   2b7ac:	sub	w27, w23, w24
   2b7b0:	mov	w2, #0x1                   	// #1
   2b7b4:	mov	w3, #0x1                   	// #1
   2b7b8:	mov	x0, x24
   2b7bc:	mov	w1, w27
   2b7c0:	stp	w14, w12, [x29, #-36]
   2b7c4:	stur	w13, [x29, #-28]
   2b7c8:	bl	16c00 <_rl_find_next_mbchar@plt>
   2b7cc:	mov	w2, w0
   2b7d0:	subs	w8, w0, w27
   2b7d4:	b.eq	2b858 <_rl_strip_prompt@@Base+0x47c>  // b.none
   2b7d8:	ldr	w9, [sp, #4]
   2b7dc:	add	w10, w9, w2
   2b7e0:	sub	w9, w10, w23
   2b7e4:	cmp	w9, #0x1f
   2b7e8:	b.cc	2b810 <_rl_strip_prompt@@Base+0x434>  // b.lo, b.ul, b.last
   2b7ec:	sub	w10, w10, w23
   2b7f0:	add	x11, x23, x10
   2b7f4:	add	x11, x11, #0x1
   2b7f8:	cmp	x25, x11
   2b7fc:	b.cs	2b954 <_rl_strip_prompt@@Base+0x578>  // b.hs, b.nlast
   2b800:	add	x10, x25, x10
   2b804:	add	x10, x10, #0x1
   2b808:	cmp	x23, x10
   2b80c:	b.cs	2b954 <_rl_strip_prompt@@Base+0x578>  // b.hs, b.nlast
   2b810:	mov	x28, x25
   2b814:	mov	w9, w8
   2b818:	ldrb	w10, [x23], #1
   2b81c:	subs	w9, w9, #0x1
   2b820:	strb	w10, [x28], #1
   2b824:	b.ne	2b818 <_rl_strip_prompt@@Base+0x43c>  // b.any
   2b828:	cbz	w22, 2b860 <_rl_strip_prompt@@Base+0x484>
   2b82c:	ldp	w12, w13, [x29, #-32]
   2b830:	ldur	x11, [x29, #-24]
   2b834:	add	w12, w8, w12
   2b838:	b	2b888 <_rl_strip_prompt@@Base+0x4ac>
   2b83c:	strb	w8, [x25], #1
   2b840:	mov	x28, x25
   2b844:	cbz	w22, 2b894 <_rl_strip_prompt@@Base+0x4b8>
   2b848:	add	w12, w12, #0x1
   2b84c:	b	2b8a4 <_rl_strip_prompt@@Base+0x4c8>
   2b850:	mov	w22, wzr
   2b854:	b	2b740 <_rl_strip_prompt@@Base+0x364>
   2b858:	mov	x28, x25
   2b85c:	cbnz	w22, 2b82c <_rl_strip_prompt@@Base+0x450>
   2b860:	ldur	w9, [x29, #-4]
   2b864:	mov	x0, x24
   2b868:	mov	w1, w27
   2b86c:	mov	w3, wzr
   2b870:	add	w9, w8, w9
   2b874:	stur	w9, [x29, #-4]
   2b878:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2b87c:	ldur	x11, [x29, #-24]
   2b880:	ldp	w12, w13, [x29, #-32]
   2b884:	add	w21, w0, w21
   2b888:	ldur	w14, [x29, #-36]
   2b88c:	sub	x23, x23, #0x1
   2b890:	b	2b8a4 <_rl_strip_prompt@@Base+0x4c8>
   2b894:	ldur	w8, [x29, #-4]
   2b898:	add	w21, w21, #0x1
   2b89c:	add	w8, w8, #0x1
   2b8a0:	stur	w8, [x29, #-4]
   2b8a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b8a8:	ldr	x8, [x8, #3552]
   2b8ac:	add	w27, w26, #0x1
   2b8b0:	ldr	w8, [x8]
   2b8b4:	cmp	w21, w8
   2b8b8:	mul	w8, w8, w27
   2b8bc:	cset	w9, ge  // ge = tcont
   2b8c0:	csel	w10, w19, w12, lt  // lt = tstop
   2b8c4:	cmp	w14, #0x0
   2b8c8:	csel	w19, w10, w19, eq  // eq = none
   2b8cc:	csel	w14, w9, w14, eq  // eq = none
   2b8d0:	cmp	w8, w21
   2b8d4:	b.gt	2b8ec <_rl_strip_prompt@@Base+0x510>
   2b8d8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2b8dc:	ldr	x9, [x9, #1096]
   2b8e0:	ldr	w9, [x9, w27, sxtw #2]
   2b8e4:	cmn	w9, #0x1
   2b8e8:	b.eq	2b8f4 <_rl_strip_prompt@@Base+0x518>  // b.none
   2b8ec:	mov	w27, w26
   2b8f0:	b	2b748 <_rl_strip_prompt@@Base+0x36c>
   2b8f4:	subs	w8, w8, w21
   2b8f8:	sxtw	x25, w27
   2b8fc:	b.ge	2b948 <_rl_strip_prompt@@Base+0x56c>  // b.tcont
   2b900:	ldur	x9, [x29, #-16]
   2b904:	cmp	w11, #0x2
   2b908:	strb	wzr, [x28]
   2b90c:	sub	w1, w28, w9
   2b910:	b.lt	2b998 <_rl_strip_prompt@@Base+0x5bc>  // b.tstop
   2b914:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b918:	ldr	x9, [x9, #1896]
   2b91c:	ldr	w9, [x9]
   2b920:	cbnz	w9, 2b998 <_rl_strip_prompt@@Base+0x5bc>
   2b924:	ldur	x0, [x29, #-16]
   2b928:	mov	w2, wzr
   2b92c:	stp	w12, w13, [x29, #-32]
   2b930:	mov	w26, w14
   2b934:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2b938:	ldp	w12, w13, [x29, #-32]
   2b93c:	ldur	x11, [x29, #-24]
   2b940:	mov	w14, w26
   2b944:	b	2b99c <_rl_strip_prompt@@Base+0x5c0>
   2b948:	ldur	x8, [x29, #-16]
   2b94c:	sub	w0, w28, w8
   2b950:	b	2b99c <_rl_strip_prompt@@Base+0x5c0>
   2b954:	add	x10, x9, #0x1
   2b958:	and	x11, x10, #0x1ffffffe0
   2b95c:	add	x12, x23, #0x10
   2b960:	add	x28, x25, x11
   2b964:	add	x23, x23, x11
   2b968:	sub	w9, w8, w11
   2b96c:	add	x13, x25, #0x10
   2b970:	mov	x14, x11
   2b974:	ldp	q0, q1, [x12, #-16]
   2b978:	add	x12, x12, #0x20
   2b97c:	subs	x14, x14, #0x20
   2b980:	stp	q0, q1, [x13, #-16]
   2b984:	add	x13, x13, #0x20
   2b988:	b.ne	2b974 <_rl_strip_prompt@@Base+0x598>  // b.any
   2b98c:	cmp	x10, x11
   2b990:	b.ne	2b818 <_rl_strip_prompt@@Base+0x43c>  // b.any
   2b994:	b	2b828 <_rl_strip_prompt@@Base+0x44c>
   2b998:	add	w0, w8, w1
   2b99c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2b9a0:	ldr	x8, [x8, #1096]
   2b9a4:	str	w0, [x8, x25, lsl #2]
   2b9a8:	b	2b748 <_rl_strip_prompt@@Base+0x36c>
   2b9ac:	ldur	x28, [x29, #-16]
   2b9b0:	stur	wzr, [x29, #-4]
   2b9b4:	mov	w13, wzr
   2b9b8:	mov	w12, wzr
   2b9bc:	mov	w19, wzr
   2b9c0:	mov	w21, wzr
   2b9c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2b9c8:	ldr	x8, [x8, #3552]
   2b9cc:	ldur	w10, [x29, #-4]
   2b9d0:	ldr	x9, [sp, #8]
   2b9d4:	ldr	w8, [x8]
   2b9d8:	strb	wzr, [x28]
   2b9dc:	cmp	w10, w8
   2b9e0:	csel	w8, w12, w19, lt  // lt = tstop
   2b9e4:	cbz	x9, 2b9ec <_rl_strip_prompt@@Base+0x610>
   2b9e8:	str	w10, [x9]
   2b9ec:	ldp	x10, x9, [sp, #32]
   2b9f0:	ldp	x12, x11, [sp, #16]
   2b9f4:	cbz	x11, 2b9fc <_rl_strip_prompt@@Base+0x620>
   2b9f8:	str	w13, [x11]
   2b9fc:	cbz	x10, 2ba04 <_rl_strip_prompt@@Base+0x628>
   2ba00:	str	w8, [x10]
   2ba04:	cbz	x9, 2ba0c <_rl_strip_prompt@@Base+0x630>
   2ba08:	str	w21, [x9]
   2ba0c:	cmp	x24, x12
   2ba10:	b.eq	2ba1c <_rl_strip_prompt@@Base+0x640>  // b.none
   2ba14:	mov	x0, x24
   2ba18:	bl	171b0 <free@plt>
   2ba1c:	ldur	x24, [x29, #-16]
   2ba20:	mov	x0, x24
   2ba24:	ldp	x20, x19, [sp, #176]
   2ba28:	ldp	x22, x21, [sp, #160]
   2ba2c:	ldp	x24, x23, [sp, #144]
   2ba30:	ldp	x26, x25, [sp, #128]
   2ba34:	ldp	x28, x27, [sp, #112]
   2ba38:	ldp	x29, x30, [sp, #96]
   2ba3c:	add	sp, sp, #0xc0
   2ba40:	ret

000000000002ba44 <_rl_reset_prompt@@Base>:
   2ba44:	stp	x29, x30, [sp, #-16]!
   2ba48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ba4c:	ldr	x8, [x8, #2016]
   2ba50:	mov	x29, sp
   2ba54:	ldr	x0, [x8]
   2ba58:	bl	16db0 <rl_expand_prompt@plt>
   2ba5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ba60:	ldr	x8, [x8, #3424]
   2ba64:	str	w0, [x8]
   2ba68:	ldp	x29, x30, [sp], #16
   2ba6c:	ret

000000000002ba70 <rl_expand_prompt@@Base>:
   2ba70:	stp	x29, x30, [sp, #-64]!
   2ba74:	stp	x22, x21, [sp, #32]
   2ba78:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   2ba7c:	ldr	x8, [x22, #1032]
   2ba80:	stp	x20, x19, [sp, #48]
   2ba84:	mov	x19, x0
   2ba88:	stp	x24, x23, [sp, #16]
   2ba8c:	mov	x29, sp
   2ba90:	cbz	x8, 2ba9c <rl_expand_prompt@@Base+0x2c>
   2ba94:	mov	x0, x8
   2ba98:	bl	171b0 <free@plt>
   2ba9c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   2baa0:	ldr	x0, [x23, #1040]
   2baa4:	cbz	x0, 2baac <rl_expand_prompt@@Base+0x3c>
   2baa8:	bl	171b0 <free@plt>
   2baac:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2bab0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2bab4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2bab8:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2babc:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   2bac0:	str	xzr, [x23, #1040]
   2bac4:	str	xzr, [x22, #1032]
   2bac8:	str	wzr, [x21, #1048]
   2bacc:	str	wzr, [x8, #1052]
   2bad0:	str	wzr, [x9, #1056]
   2bad4:	str	wzr, [x10, #1060]
   2bad8:	str	wzr, [x24, #1064]
   2badc:	cbz	x19, 2bb70 <rl_expand_prompt@@Base+0x100>
   2bae0:	ldrb	w8, [x19]
   2bae4:	cbz	w8, 2bb70 <rl_expand_prompt@@Base+0x100>
   2bae8:	mov	w1, #0xa                   	// #10
   2baec:	mov	x0, x19
   2baf0:	bl	16ee0 <strrchr@plt>
   2baf4:	cbz	x0, 2bb78 <rl_expand_prompt@@Base+0x108>
   2baf8:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2bafc:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   2bb00:	adrp	x4, 58000 <_rl_vimvcxt@@Base>
   2bb04:	adrp	x5, 58000 <_rl_vimvcxt@@Base>
   2bb08:	mov	x20, x0
   2bb0c:	add	x0, x0, #0x1
   2bb10:	add	x2, x2, #0x428
   2bb14:	add	x3, x3, #0x420
   2bb18:	add	x4, x4, #0x41c
   2bb1c:	add	x5, x5, #0x424
   2bb20:	mov	w1, #0x1                   	// #1
   2bb24:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2bb28:	str	x0, [x22, #1032]
   2bb2c:	ldrb	w24, [x20, #1]
   2bb30:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2bb34:	add	x2, x2, #0x42c
   2bb38:	mov	w1, #0x1                   	// #1
   2bb3c:	mov	x0, x19
   2bb40:	mov	x3, xzr
   2bb44:	mov	x4, xzr
   2bb48:	mov	x5, xzr
   2bb4c:	strb	wzr, [x20, #1]
   2bb50:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2bb54:	str	x0, [x23, #1040]
   2bb58:	strb	w24, [x20, #1]
   2bb5c:	ldr	x0, [x22, #1032]
   2bb60:	cbz	x0, 2bbc0 <rl_expand_prompt@@Base+0x150>
   2bb64:	bl	16440 <strlen@plt>
   2bb68:	mov	x8, x0
   2bb6c:	b	2bbc4 <rl_expand_prompt@@Base+0x154>
   2bb70:	mov	w0, wzr
   2bb74:	b	2bbd0 <rl_expand_prompt@@Base+0x160>
   2bb78:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2bb7c:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   2bb80:	adrp	x4, 58000 <_rl_vimvcxt@@Base>
   2bb84:	adrp	x5, 58000 <_rl_vimvcxt@@Base>
   2bb88:	add	x2, x2, #0x428
   2bb8c:	add	x3, x3, #0x420
   2bb90:	add	x4, x4, #0x41c
   2bb94:	add	x5, x5, #0x424
   2bb98:	mov	x0, x19
   2bb9c:	mov	w1, wzr
   2bba0:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2bba4:	str	x0, [x22, #1032]
   2bba8:	str	xzr, [x23, #1040]
   2bbac:	cbz	x0, 2bbe4 <rl_expand_prompt@@Base+0x174>
   2bbb0:	bl	16440 <strlen@plt>
   2bbb4:	mov	x8, x0
   2bbb8:	ldr	w0, [x24, #1064]
   2bbbc:	b	2bbcc <rl_expand_prompt@@Base+0x15c>
   2bbc0:	mov	w8, wzr
   2bbc4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2bbc8:	ldr	w0, [x9, #1068]
   2bbcc:	str	w8, [x21, #1048]
   2bbd0:	ldp	x20, x19, [sp, #48]
   2bbd4:	ldp	x22, x21, [sp, #32]
   2bbd8:	ldp	x24, x23, [sp, #16]
   2bbdc:	ldp	x29, x30, [sp], #64
   2bbe0:	ret
   2bbe4:	ldr	w0, [x24, #1064]
   2bbe8:	mov	w8, wzr
   2bbec:	b	2bbcc <rl_expand_prompt@@Base+0x15c>
   2bbf0:	stp	x29, x30, [sp, #-48]!
   2bbf4:	stp	x20, x19, [sp, #32]
   2bbf8:	adrp	x20, 57000 <rl_insert@@Base+0x20abc>
   2bbfc:	ldr	x8, [x20, #3328]
   2bc00:	stp	x22, x21, [sp, #16]
   2bc04:	adrp	x22, 57000 <rl_insert@@Base+0x20abc>
   2bc08:	ldr	w9, [x22, #3344]
   2bc0c:	ldr	x10, [x8]
   2bc10:	mov	w19, w0
   2bc14:	adrp	x21, 57000 <rl_insert@@Base+0x20abc>
   2bc18:	cmp	w9, w0
   2bc1c:	mov	x29, sp
   2bc20:	cbz	x10, 2bc64 <rl_expand_prompt@@Base+0x1f4>
   2bc24:	b.ge	2bc90 <rl_expand_prompt@@Base+0x220>  // b.tcont
   2bc28:	lsl	w8, w9, #1
   2bc2c:	ldr	x9, [x21, #3336]
   2bc30:	cmp	w8, w19
   2bc34:	csel	w8, w19, w8, lt  // lt = tstop
   2bc38:	str	w8, [x22, #3344]
   2bc3c:	ldr	x0, [x9]
   2bc40:	sxtw	x1, w8
   2bc44:	bl	16a50 <xrealloc@plt>
   2bc48:	ldr	x8, [x21, #3336]
   2bc4c:	str	x0, [x8]
   2bc50:	ldr	x8, [x20, #3328]
   2bc54:	ldrsw	x1, [x22, #3344]
   2bc58:	ldr	x0, [x8]
   2bc5c:	bl	16a50 <xrealloc@plt>
   2bc60:	b	2bc88 <rl_expand_prompt@@Base+0x218>
   2bc64:	b.ge	2bc70 <rl_expand_prompt@@Base+0x200>  // b.tcont
   2bc68:	mov	w9, w19
   2bc6c:	str	w19, [x22, #3344]
   2bc70:	sxtw	x0, w9
   2bc74:	bl	16bf0 <xmalloc@plt>
   2bc78:	ldr	x8, [x21, #3336]
   2bc7c:	str	x0, [x8]
   2bc80:	ldrsw	x0, [x22, #3344]
   2bc84:	bl	16bf0 <xmalloc@plt>
   2bc88:	ldr	x8, [x20, #3328]
   2bc8c:	str	x0, [x8]
   2bc90:	ldrsw	x10, [x22, #3344]
   2bc94:	ldr	x9, [x21, #3336]
   2bc98:	cmp	w10, w19
   2bc9c:	b.le	2bcc4 <rl_expand_prompt@@Base+0x254>
   2bca0:	sxtw	x11, w19
   2bca4:	mov	w12, #0x1                   	// #1
   2bca8:	ldr	x13, [x9]
   2bcac:	strb	wzr, [x13, x11]
   2bcb0:	ldr	x13, [x8]
   2bcb4:	strb	w12, [x13, x11]
   2bcb8:	add	x11, x11, #0x1
   2bcbc:	cmp	x11, x10
   2bcc0:	b.lt	2bca8 <rl_expand_prompt@@Base+0x238>  // b.tstop
   2bcc4:	ldr	x8, [x9, #8]
   2bcc8:	cbnz	x8, 2bd4c <rl_expand_prompt@@Base+0x2dc>
   2bccc:	mov	w8, #0x100                 	// #256
   2bcd0:	str	w8, [x9, #16]
   2bcd4:	ldr	x10, [x20, #3328]
   2bcd8:	str	w8, [x10, #16]
   2bcdc:	ldrsw	x8, [x9, #16]
   2bce0:	lsl	x0, x8, #2
   2bce4:	str	w8, [x9, #20]
   2bce8:	bl	16bf0 <xmalloc@plt>
   2bcec:	ldr	x8, [x21, #3336]
   2bcf0:	str	x0, [x8, #24]
   2bcf4:	ldr	x8, [x20, #3328]
   2bcf8:	ldrsw	x9, [x8, #16]
   2bcfc:	lsl	x0, x9, #2
   2bd00:	str	w9, [x8, #20]
   2bd04:	bl	16bf0 <xmalloc@plt>
   2bd08:	ldr	x8, [x20, #3328]
   2bd0c:	ldrsw	x9, [x8, #16]
   2bd10:	str	x0, [x8, #24]
   2bd14:	lsl	x0, x9, #2
   2bd18:	bl	16bf0 <xmalloc@plt>
   2bd1c:	ldr	x8, [x20, #3328]
   2bd20:	str	x0, [x8, #8]
   2bd24:	ldr	x8, [x21, #3336]
   2bd28:	ldrsw	x8, [x8, #16]
   2bd2c:	lsl	x0, x8, #2
   2bd30:	bl	16bf0 <xmalloc@plt>
   2bd34:	ldr	x8, [x21, #3336]
   2bd38:	str	x0, [x8, #8]
   2bd3c:	str	wzr, [x0]
   2bd40:	ldr	x8, [x20, #3328]
   2bd44:	ldr	x8, [x8, #8]
   2bd48:	str	wzr, [x8]
   2bd4c:	ldp	x20, x19, [sp, #32]
   2bd50:	ldp	x22, x21, [sp, #16]
   2bd54:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2bd58:	mov	w9, #0x1                   	// #1
   2bd5c:	strb	w9, [x8, #1072]
   2bd60:	ldp	x29, x30, [sp], #48
   2bd64:	ret

000000000002bd68 <rl_on_new_line@@Base>:
   2bd68:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2bd6c:	ldr	x8, [x8, #3336]
   2bd70:	ldr	x9, [x8]
   2bd74:	cbz	x9, 2bd7c <rl_on_new_line@@Base+0x14>
   2bd78:	strb	wzr, [x9]
   2bd7c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2bd80:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2bd84:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2bd88:	ldr	x9, [x9, #2408]
   2bd8c:	ldr	x10, [x10, #1952]
   2bd90:	ldr	x12, [x12, #3600]
   2bd94:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2bd98:	str	wzr, [x9]
   2bd9c:	str	wzr, [x10]
   2bda0:	str	wzr, [x11, #1128]
   2bda4:	str	wzr, [x12]
   2bda8:	ldr	x8, [x8, #8]
   2bdac:	cbz	x8, 2bdb4 <rl_on_new_line@@Base+0x4c>
   2bdb0:	str	xzr, [x8]
   2bdb4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2bdb8:	mov	w0, wzr
   2bdbc:	str	wzr, [x8, #1120]
   2bdc0:	ret
   2bdc4:	sub	sp, sp, #0x60
   2bdc8:	stp	x24, x23, [sp, #48]
   2bdcc:	subs	w23, w2, w1
   2bdd0:	stp	x29, x30, [sp, #16]
   2bdd4:	str	x25, [sp, #32]
   2bdd8:	stp	x22, x21, [sp, #64]
   2bddc:	stp	x20, x19, [sp, #80]
   2bde0:	add	x29, sp, #0x10
   2bde4:	b.le	2bea8 <rl_on_new_line@@Base+0x140>
   2bde8:	mov	w22, w3
   2bdec:	mov	w19, w2
   2bdf0:	mov	w21, w1
   2bdf4:	mov	x20, x0
   2bdf8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2bdfc:	cmp	x0, #0x1
   2be00:	b.eq	2bfe4 <rl_on_new_line@@Base+0x27c>  // b.none
   2be04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2be08:	ldr	x8, [x8, #1896]
   2be0c:	ldr	w8, [x8]
   2be10:	cbnz	w8, 2bfe4 <rl_on_new_line@@Base+0x27c>
   2be14:	str	xzr, [sp, #8]
   2be18:	cbnz	w21, 2beb0 <rl_on_new_line@@Base+0x148>
   2be1c:	cbz	w22, 2beb0 <rl_on_new_line@@Base+0x148>
   2be20:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2be24:	ldr	w23, [x8, #1048]
   2be28:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   2be2c:	cmp	w23, w19
   2be30:	b.ne	2be48 <rl_on_new_line@@Base+0xe0>  // b.any
   2be34:	ldr	x1, [x25, #1032]
   2be38:	sxtw	x2, w19
   2be3c:	mov	x0, x20
   2be40:	bl	16d70 <bcmp@plt>
   2be44:	cbz	w0, 2c004 <rl_on_new_line@@Base+0x29c>
   2be48:	cmp	w23, #0x1
   2be4c:	b.lt	2bf38 <rl_on_new_line@@Base+0x1d0>  // b.tstop
   2be50:	cmp	w23, w19
   2be54:	mov	w24, wzr
   2be58:	b.ge	2bf3c <rl_on_new_line@@Base+0x1d4>  // b.tcont
   2be5c:	ldr	x1, [x25, #1032]
   2be60:	mov	w25, w19
   2be64:	cbz	x1, 2bf40 <rl_on_new_line@@Base+0x1d8>
   2be68:	mov	x0, x20
   2be6c:	mov	x2, x23
   2be70:	bl	16d70 <bcmp@plt>
   2be74:	cbnz	w0, 2bf38 <rl_on_new_line@@Base+0x1d0>
   2be78:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2be7c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2be80:	ldr	w8, [x8, #1060]
   2be84:	ldr	w9, [x9, #1092]
   2be88:	mov	x0, x20
   2be8c:	mov	w1, w23
   2be90:	mov	w2, w19
   2be94:	mov	w3, w22
   2be98:	add	w21, w9, w8
   2be9c:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2bea0:	add	w23, w21, w0
   2bea4:	b	2bfe4 <rl_on_new_line@@Base+0x27c>
   2bea8:	mov	w23, wzr
   2beac:	b	2bfe4 <rl_on_new_line@@Base+0x27c>
   2beb0:	cmp	w21, #0x1
   2beb4:	b.lt	2bf38 <rl_on_new_line@@Base+0x1d0>  // b.tstop
   2beb8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2bebc:	ldr	x22, [x22, #3088]
   2bec0:	mov	w24, wzr
   2bec4:	mov	w25, w19
   2bec8:	b	2bf00 <rl_on_new_line@@Base+0x198>
   2becc:	add	x1, x20, x8
   2bed0:	sxtw	x2, w25
   2bed4:	add	x3, sp, #0x8
   2bed8:	mov	x0, xzr
   2bedc:	bl	16370 <mbrtowc@plt>
   2bee0:	add	w8, w0, #0x2
   2bee4:	cmp	w8, #0x2
   2bee8:	b.cs	2bf20 <rl_on_new_line@@Base+0x1b8>  // b.hs, b.nlast
   2beec:	add	w24, w24, #0x1
   2bef0:	sub	w25, w25, #0x1
   2bef4:	str	xzr, [sp, #8]
   2bef8:	cmp	w24, w21
   2befc:	b.ge	2bf40 <rl_on_new_line@@Base+0x1d8>  // b.tcont
   2bf00:	ldr	w9, [x22]
   2bf04:	sxtw	x8, w24
   2bf08:	cbz	w9, 2becc <rl_on_new_line@@Base+0x164>
   2bf0c:	ldrsb	w9, [x20, x8]
   2bf10:	tbnz	w9, #31, 2becc <rl_on_new_line@@Base+0x164>
   2bf14:	str	xzr, [sp, #8]
   2bf18:	mov	w0, #0x1                   	// #1
   2bf1c:	b	2bf24 <rl_on_new_line@@Base+0x1bc>
   2bf20:	cbz	w0, 2bf40 <rl_on_new_line@@Base+0x1d8>
   2bf24:	add	w24, w0, w24
   2bf28:	sub	w25, w25, w0
   2bf2c:	cmp	w24, w21
   2bf30:	b.lt	2bf00 <rl_on_new_line@@Base+0x198>  // b.tstop
   2bf34:	b	2bf40 <rl_on_new_line@@Base+0x1d8>
   2bf38:	mov	w24, wzr
   2bf3c:	mov	w25, w19
   2bf40:	cmp	w24, w19
   2bf44:	sub	w21, w24, w21
   2bf48:	b.ge	2bfdc <rl_on_new_line@@Base+0x274>  // b.tcont
   2bf4c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2bf50:	ldr	x22, [x22, #3088]
   2bf54:	b	2bf90 <rl_on_new_line@@Base+0x228>
   2bf58:	add	x1, x20, x9
   2bf5c:	sxtw	x2, w25
   2bf60:	add	x0, x29, #0x1c
   2bf64:	add	x3, sp, #0x8
   2bf68:	bl	16370 <mbrtowc@plt>
   2bf6c:	add	w8, w0, #0x2
   2bf70:	cmp	w8, #0x2
   2bf74:	b.cs	2bfb0 <rl_on_new_line@@Base+0x248>  // b.hs, b.nlast
   2bf78:	add	w24, w24, #0x1
   2bf7c:	sub	w25, w25, #0x1
   2bf80:	add	w21, w21, #0x1
   2bf84:	str	xzr, [sp, #8]
   2bf88:	cmp	w24, w19
   2bf8c:	b.ge	2bfdc <rl_on_new_line@@Base+0x274>  // b.tcont
   2bf90:	ldr	w8, [x22]
   2bf94:	sxtw	x9, w24
   2bf98:	cbz	w8, 2bf58 <rl_on_new_line@@Base+0x1f0>
   2bf9c:	ldrb	w8, [x20, x9]
   2bfa0:	tbnz	w8, #7, 2bf58 <rl_on_new_line@@Base+0x1f0>
   2bfa4:	str	w8, [x29, #28]
   2bfa8:	mov	w0, #0x1                   	// #1
   2bfac:	b	2bfb8 <rl_on_new_line@@Base+0x250>
   2bfb0:	cbz	w0, 2bfdc <rl_on_new_line@@Base+0x274>
   2bfb4:	ldr	w8, [x29, #28]
   2bfb8:	add	w24, w0, w24
   2bfbc:	sub	w25, w25, w0
   2bfc0:	mov	w0, w8
   2bfc4:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2bfc8:	cmp	w0, #0x0
   2bfcc:	csinc	w8, w0, wzr, ge  // ge = tcont
   2bfd0:	add	w21, w8, w21
   2bfd4:	cmp	w24, w19
   2bfd8:	b.lt	2bf90 <rl_on_new_line@@Base+0x228>  // b.tstop
   2bfdc:	sub	w8, w24, w19
   2bfe0:	add	w23, w8, w21
   2bfe4:	mov	w0, w23
   2bfe8:	ldp	x20, x19, [sp, #80]
   2bfec:	ldp	x22, x21, [sp, #64]
   2bff0:	ldp	x24, x23, [sp, #48]
   2bff4:	ldr	x25, [sp, #32]
   2bff8:	ldp	x29, x30, [sp, #16]
   2bffc:	add	sp, sp, #0x60
   2c000:	ret
   2c004:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2c008:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2c00c:	ldr	w8, [x8, #1060]
   2c010:	ldr	w9, [x9, #1092]
   2c014:	add	w23, w9, w8
   2c018:	b	2bfe4 <rl_on_new_line@@Base+0x27c>
   2c01c:	sub	w8, w0, #0x20
   2c020:	cmp	w8, #0x5e
   2c024:	b.hi	2c048 <rl_on_new_line@@Base+0x2e0>  // b.pmore
   2c028:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   2c02c:	add	x9, x9, #0xddb
   2c030:	adr	x10, 2c040 <rl_on_new_line@@Base+0x2d8>
   2c034:	ldrb	w11, [x9, x8]
   2c038:	add	x10, x10, x11, lsl #2
   2c03c:	br	x10
   2c040:	mov	w0, #0x1                   	// #1
   2c044:	ret
   2c048:	b	169a0 <wcwidth@plt>
   2c04c:	sub	sp, sp, #0xd0
   2c050:	stp	x29, x30, [sp, #112]
   2c054:	stp	x28, x27, [sp, #128]
   2c058:	stp	x26, x25, [sp, #144]
   2c05c:	stp	x24, x23, [sp, #160]
   2c060:	stp	x22, x21, [sp, #176]
   2c064:	stp	x20, x19, [sp, #192]
   2c068:	add	x29, sp, #0x70
   2c06c:	mov	w23, w5
   2c070:	str	x4, [sp, #56]
   2c074:	mov	w27, w3
   2c078:	mov	w25, w2
   2c07c:	mov	x26, x1
   2c080:	mov	x24, x0
   2c084:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2c088:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c08c:	ldr	x8, [x8, #1896]
   2c090:	stur	x0, [x29, #-48]
   2c094:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c098:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c09c:	ldr	w8, [x8]
   2c0a0:	ldr	x9, [x9, #1952]
   2c0a4:	cmp	w0, #0x1
   2c0a8:	cset	w10, gt
   2c0ac:	cmp	w8, #0x0
   2c0b0:	ldr	w9, [x9]
   2c0b4:	ldr	x28, [x28, #3552]
   2c0b8:	cset	w8, eq  // eq = none
   2c0bc:	and	w8, w10, w8
   2c0c0:	tbnz	w8, #0, 2c134 <rl_on_new_line@@Base+0x3cc>
   2c0c4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c0c8:	ldr	x10, [x10, #2408]
   2c0cc:	ldr	w10, [x10]
   2c0d0:	cbz	w10, 2c0fc <rl_on_new_line@@Base+0x394>
   2c0d4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2c0d8:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2c0dc:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2c0e0:	ldr	w12, [x12, #1092]
   2c0e4:	ldr	w13, [x13, #1052]
   2c0e8:	ldr	w11, [x11, #1104]
   2c0ec:	sub	w12, w12, w13
   2c0f0:	cmp	w10, w11
   2c0f4:	csel	w10, w12, wzr, eq  // eq = none
   2c0f8:	b	2c130 <rl_on_new_line@@Base+0x3c8>
   2c0fc:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2c100:	ldr	w10, [x10, #1120]
   2c104:	cbz	w10, 2c130 <rl_on_new_line@@Base+0x3c8>
   2c108:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2c10c:	ldr	w10, [x10, #1060]
   2c110:	ldr	w11, [x28]
   2c114:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2c118:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2c11c:	add	x12, x12, #0x41c
   2c120:	add	x13, x13, #0x444
   2c124:	cmp	w10, w11
   2c128:	csel	x10, x12, x13, gt
   2c12c:	ldr	w10, [x10]
   2c130:	sub	w9, w9, w10
   2c134:	ldr	w10, [x28]
   2c138:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c13c:	ldr	x11, [x11, #2240]
   2c140:	cmp	w9, w10
   2c144:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c148:	ldr	x10, [x10, #2192]
   2c14c:	str	x25, [sp, #40]
   2c150:	stur	x26, [x29, #-40]
   2c154:	str	x23, [sp, #32]
   2c158:	b.ne	2c558 <rl_on_new_line@@Base+0x7f0>  // b.any
   2c15c:	ldr	w9, [x11]
   2c160:	cbz	w9, 2c558 <rl_on_new_line@@Base+0x7f0>
   2c164:	ldr	w9, [x10]
   2c168:	cbnz	w9, 2c558 <rl_on_new_line@@Base+0x7f0>
   2c16c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c170:	ldr	x20, [x20, #2408]
   2c174:	sub	w10, w25, #0x1
   2c178:	ldr	w9, [x20]
   2c17c:	cmp	w9, w10
   2c180:	b.ne	2c558 <rl_on_new_line@@Base+0x7f0>  // b.any
   2c184:	cbz	w8, 2c1d0 <rl_on_new_line@@Base+0x468>
   2c188:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2c18c:	ldr	x8, [x8, #3328]
   2c190:	ldr	w9, [x8, #20]
   2c194:	cmp	w9, w25
   2c198:	b.le	2c258 <rl_on_new_line@@Base+0x4f0>
   2c19c:	ldr	x8, [x8, #24]
   2c1a0:	ldr	w19, [x8, w25, sxtw #2]
   2c1a4:	cmp	w19, #0x1
   2c1a8:	b.lt	2c258 <rl_on_new_line@@Base+0x4f0>  // b.tstop
   2c1ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c1b0:	ldr	x8, [x8, #3704]
   2c1b4:	ldr	x0, [x8]
   2c1b8:	cbz	x0, 2c224 <rl_on_new_line@@Base+0x4bc>
   2c1bc:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c1c0:	ldr	x2, [x2, #2496]
   2c1c4:	mov	w1, #0x1                   	// #1
   2c1c8:	bl	16590 <tputs@plt>
   2c1cc:	b	2c258 <rl_on_new_line@@Base+0x4f0>
   2c1d0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c1d4:	ldrb	w8, [x26]
   2c1d8:	ldr	x9, [x9, #1928]
   2c1dc:	cmp	w8, #0x0
   2c1e0:	ldr	x1, [x9]
   2c1e4:	mov	w9, #0x20                  	// #32
   2c1e8:	csel	w0, w9, w8, eq  // eq = none
   2c1ec:	bl	16670 <putc@plt>
   2c1f0:	ldr	w8, [x20]
   2c1f4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c1f8:	ldr	x10, [x10, #1952]
   2c1fc:	mov	w9, #0x1                   	// #1
   2c200:	add	w8, w8, #0x1
   2c204:	str	w8, [x20]
   2c208:	str	w9, [x10]
   2c20c:	ldrb	w8, [x24]
   2c210:	ldr	x25, [sp, #56]
   2c214:	cbz	w8, 2c55c <rl_on_new_line@@Base+0x7f4>
   2c218:	ldrb	w8, [x26]
   2c21c:	cbnz	w8, 2c54c <rl_on_new_line@@Base+0x7e4>
   2c220:	b	2c55c <rl_on_new_line@@Base+0x7f4>
   2c224:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c228:	ldr	x21, [x21, #1928]
   2c22c:	mov	w22, w19
   2c230:	ldr	x1, [x21]
   2c234:	mov	w0, #0x20                  	// #32
   2c238:	bl	16670 <putc@plt>
   2c23c:	subs	w22, w22, #0x1
   2c240:	b.ne	2c230 <rl_on_new_line@@Base+0x4c8>  // b.any
   2c244:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c248:	ldr	x9, [x9, #1952]
   2c24c:	ldr	w8, [x9]
   2c250:	add	w8, w8, w19
   2c254:	str	w8, [x9]
   2c258:	ldur	x8, [x29, #-48]
   2c25c:	str	x27, [sp, #48]
   2c260:	sub	x0, x29, #0x10
   2c264:	sub	x3, x29, #0x8
   2c268:	sxtw	x27, w8
   2c26c:	mov	x1, x24
   2c270:	mov	x2, x27
   2c274:	stur	xzr, [x29, #-8]
   2c278:	bl	16370 <mbrtowc@plt>
   2c27c:	cmn	x0, #0x3
   2c280:	b.ls	2c290 <rl_on_new_line@@Base+0x528>  // b.plast
   2c284:	mov	w26, #0x1                   	// #1
   2c288:	mov	w22, #0x1                   	// #1
   2c28c:	b	2c2b0 <rl_on_new_line@@Base+0x548>
   2c290:	mov	x26, x0
   2c294:	cbz	x0, 2c2ac <rl_on_new_line@@Base+0x544>
   2c298:	ldur	w0, [x29, #-16]
   2c29c:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2c2a0:	cmp	w0, #0x0
   2c2a4:	csinc	w22, w0, wzr, ge  // ge = tcont
   2c2a8:	b	2c2b0 <rl_on_new_line@@Base+0x548>
   2c2ac:	mov	w22, wzr
   2c2b0:	ldur	x1, [x29, #-40]
   2c2b4:	sub	x0, x29, #0x10
   2c2b8:	sub	x3, x29, #0x8
   2c2bc:	mov	x2, x27
   2c2c0:	stur	xzr, [x29, #-8]
   2c2c4:	bl	16370 <mbrtowc@plt>
   2c2c8:	cmn	x0, #0x3
   2c2cc:	b.ls	2c2e4 <rl_on_new_line@@Base+0x57c>  // b.plast
   2c2d0:	mov	w21, #0x1                   	// #1
   2c2d4:	mov	w23, #0x1                   	// #1
   2c2d8:	cmp	w23, w22
   2c2dc:	b.lt	2c458 <rl_on_new_line@@Base+0x6f0>  // b.tstop
   2c2e0:	b	2c314 <rl_on_new_line@@Base+0x5ac>
   2c2e4:	mov	x21, x0
   2c2e8:	cbz	x0, 2c308 <rl_on_new_line@@Base+0x5a0>
   2c2ec:	ldur	w0, [x29, #-16]
   2c2f0:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2c2f4:	cmp	w0, #0x0
   2c2f8:	csinc	w23, w0, wzr, ge  // ge = tcont
   2c2fc:	cmp	w23, w22
   2c300:	b.lt	2c458 <rl_on_new_line@@Base+0x6f0>  // b.tstop
   2c304:	b	2c314 <rl_on_new_line@@Base+0x5ac>
   2c308:	mov	w23, wzr
   2c30c:	cmp	w23, w22
   2c310:	b.lt	2c458 <rl_on_new_line@@Base+0x6f0>  // b.tstop
   2c314:	cmp	w22, w23
   2c318:	b.lt	2c4b8 <rl_on_new_line@@Base+0x750>  // b.tstop
   2c31c:	cmp	w23, #0x1
   2c320:	b.lt	2c500 <rl_on_new_line@@Base+0x798>  // b.tstop
   2c324:	ldur	x19, [x29, #-40]
   2c328:	mov	w1, w21
   2c32c:	mov	x0, x19
   2c330:	bl	16d10 <_rl_output_some_chars@plt>
   2c334:	ldr	w8, [x20]
   2c338:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c33c:	ldr	x9, [x9, #1952]
   2c340:	cmp	w23, w22
   2c344:	add	w8, w8, #0x1
   2c348:	str	w8, [x20]
   2c34c:	str	w23, [x9]
   2c350:	b.ne	2ccc0 <rl_on_new_line@@Base+0xf58>  // b.any
   2c354:	ldr	x27, [sp, #48]
   2c358:	cbz	w21, 2c554 <rl_on_new_line@@Base+0x7ec>
   2c35c:	ldr	x23, [sp, #32]
   2c360:	cbz	w26, 2c554 <rl_on_new_line@@Base+0x7ec>
   2c364:	add	x27, x24, w26, sxtw
   2c368:	sxtw	x19, w21
   2c36c:	mov	x0, x27
   2c370:	add	x20, x24, x19
   2c374:	bl	16440 <strlen@plt>
   2c378:	mov	x1, x27
   2c37c:	ldr	x27, [sp, #48]
   2c380:	add	x2, x0, #0x1
   2c384:	mov	x0, x20
   2c388:	bl	163b0 <memmove@plt>
   2c38c:	ldur	x1, [x29, #-40]
   2c390:	mov	x0, x24
   2c394:	mov	x2, x19
   2c398:	bl	16380 <memcpy@plt>
   2c39c:	sub	w8, w21, w26
   2c3a0:	cmp	w25, w23
   2c3a4:	add	w27, w8, w27
   2c3a8:	b.gt	2c554 <rl_on_new_line@@Base+0x7ec>
   2c3ac:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   2c3b0:	ldr	x10, [x9, #3336]
   2c3b4:	sxtw	x14, w25
   2c3b8:	sxtw	x9, w23
   2c3bc:	cmp	x9, x14
   2c3c0:	csel	x12, x9, x14, gt
   2c3c4:	ldr	x11, [x10, #8]
   2c3c8:	ldur	x26, [x29, #-40]
   2c3cc:	ldr	x25, [sp, #56]
   2c3d0:	sub	x10, x12, x14
   2c3d4:	add	x12, x10, #0x1
   2c3d8:	cmp	x12, #0x8
   2c3dc:	mov	x10, x14
   2c3e0:	b.cc	2c420 <rl_on_new_line@@Base+0x6b8>  // b.lo, b.ul, b.last
   2c3e4:	and	x13, x12, #0xfffffffffffffff8
   2c3e8:	add	x15, x11, x14, lsl #2
   2c3ec:	dup	v0.4s, w8
   2c3f0:	add	x10, x13, x14
   2c3f4:	add	x14, x15, #0x14
   2c3f8:	mov	x15, x13
   2c3fc:	ldp	q1, q2, [x14, #-16]
   2c400:	subs	x15, x15, #0x8
   2c404:	add	v1.4s, v1.4s, v0.4s
   2c408:	add	v2.4s, v2.4s, v0.4s
   2c40c:	stp	q1, q2, [x14, #-16]
   2c410:	add	x14, x14, #0x20
   2c414:	b.ne	2c3fc <rl_on_new_line@@Base+0x694>  // b.any
   2c418:	cmp	x12, x13
   2c41c:	b.eq	2c55c <rl_on_new_line@@Base+0x7f4>  // b.none
   2c420:	add	x11, x11, #0x4
   2c424:	lsl	x12, x10, #2
   2c428:	ldr	w13, [x11, x12]
   2c42c:	cmp	x10, x9
   2c430:	add	x10, x10, #0x1
   2c434:	add	w13, w13, w8
   2c438:	str	w13, [x11, x12]
   2c43c:	b.lt	2c424 <rl_on_new_line@@Base+0x6bc>  // b.tstop
   2c440:	b	2c55c <rl_on_new_line@@Base+0x7f4>
   2c444:	add	w23, w23, #0x1
   2c448:	mov	w19, #0x1                   	// #1
   2c44c:	cmp	w23, w22
   2c450:	add	w21, w21, w19
   2c454:	b.ge	2c314 <rl_on_new_line@@Base+0x5ac>  // b.tcont
   2c458:	ldr	x8, [sp, #56]
   2c45c:	cmp	w21, w8
   2c460:	b.ge	2c314 <rl_on_new_line@@Base+0x5ac>  // b.tcont
   2c464:	ldur	x8, [x29, #-40]
   2c468:	sub	x0, x29, #0x10
   2c46c:	sub	x3, x29, #0x8
   2c470:	mov	x2, x27
   2c474:	add	x1, x8, w21, sxtw
   2c478:	bl	16370 <mbrtowc@plt>
   2c47c:	cmn	x0, #0x2
   2c480:	b.cs	2c444 <rl_on_new_line@@Base+0x6dc>  // b.hs, b.nlast
   2c484:	mov	x19, x0
   2c488:	cbz	x0, 2c314 <rl_on_new_line@@Base+0x5ac>
   2c48c:	ldur	w0, [x29, #-16]
   2c490:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2c494:	cmp	w0, #0x0
   2c498:	csinc	w8, w0, wzr, ge  // ge = tcont
   2c49c:	add	w23, w8, w23
   2c4a0:	b	2c44c <rl_on_new_line@@Base+0x6e4>
   2c4a4:	add	w22, w22, #0x1
   2c4a8:	mov	w19, #0x1                   	// #1
   2c4ac:	cmp	w22, w23
   2c4b0:	add	w26, w26, w19
   2c4b4:	b.ge	2c31c <rl_on_new_line@@Base+0x5b4>  // b.tcont
   2c4b8:	ldr	x8, [sp, #48]
   2c4bc:	cmp	w26, w8
   2c4c0:	b.ge	2c31c <rl_on_new_line@@Base+0x5b4>  // b.tcont
   2c4c4:	add	x1, x24, w26, sxtw
   2c4c8:	sub	x0, x29, #0x10
   2c4cc:	sub	x3, x29, #0x8
   2c4d0:	mov	x2, x27
   2c4d4:	bl	16370 <mbrtowc@plt>
   2c4d8:	cmn	x0, #0x2
   2c4dc:	b.cs	2c4a4 <rl_on_new_line@@Base+0x73c>  // b.hs, b.nlast
   2c4e0:	mov	x19, x0
   2c4e4:	cbz	x0, 2c31c <rl_on_new_line@@Base+0x5b4>
   2c4e8:	ldur	w0, [x29, #-16]
   2c4ec:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2c4f0:	cmp	w0, #0x0
   2c4f4:	csinc	w8, w0, wzr, ge  // ge = tcont
   2c4f8:	add	w22, w8, w22
   2c4fc:	b	2c4ac <rl_on_new_line@@Base+0x744>
   2c500:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c504:	ldr	x8, [x8, #1928]
   2c508:	mov	w0, #0x20                  	// #32
   2c50c:	ldr	x1, [x8]
   2c510:	bl	16670 <putc@plt>
   2c514:	ldr	w8, [x20]
   2c518:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c51c:	ldr	x10, [x10, #1952]
   2c520:	mov	w9, #0x1                   	// #1
   2c524:	add	w8, w8, #0x1
   2c528:	str	w8, [x20]
   2c52c:	str	w9, [x10]
   2c530:	ldrb	w8, [x24]
   2c534:	ldr	x27, [sp, #48]
   2c538:	cbz	w8, 2c554 <rl_on_new_line@@Base+0x7ec>
   2c53c:	ldur	x26, [x29, #-40]
   2c540:	ldr	x25, [sp, #56]
   2c544:	ldrb	w8, [x26]
   2c548:	cbz	w8, 2c55c <rl_on_new_line@@Base+0x7f4>
   2c54c:	strb	w8, [x24]
   2c550:	b	2c55c <rl_on_new_line@@Base+0x7f4>
   2c554:	ldur	x26, [x29, #-40]
   2c558:	ldr	x25, [sp, #56]
   2c55c:	ldur	x8, [x29, #-48]
   2c560:	cmp	w8, #0x1
   2c564:	b.le	2c66c <rl_on_new_line@@Base+0x904>
   2c568:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c56c:	ldr	x8, [x8, #1896]
   2c570:	ldr	w8, [x8]
   2c574:	cbnz	w8, 2c66c <rl_on_new_line@@Base+0x904>
   2c578:	cmp	w27, w25
   2c57c:	csel	w8, w27, w25, lt  // lt = tstop
   2c580:	sxtw	x19, w8
   2c584:	mov	x0, x24
   2c588:	mov	x1, x26
   2c58c:	mov	x2, x19
   2c590:	bl	16d70 <bcmp@plt>
   2c594:	cbz	w0, 2c6b8 <rl_on_new_line@@Base+0x950>
   2c598:	cmp	w27, w25
   2c59c:	stp	xzr, xzr, [x29, #-16]
   2c5a0:	b.ne	2c5d0 <rl_on_new_line@@Base+0x868>  // b.any
   2c5a4:	cbz	w25, 2c6b4 <rl_on_new_line@@Base+0x94c>
   2c5a8:	ldrb	w8, [x26]
   2c5ac:	ldrb	w9, [x24]
   2c5b0:	cmp	w8, w9
   2c5b4:	b.ne	2c5d0 <rl_on_new_line@@Base+0x868>  // b.any
   2c5b8:	sxtw	x19, w25
   2c5bc:	mov	x0, x26
   2c5c0:	mov	x1, x24
   2c5c4:	mov	x2, x19
   2c5c8:	bl	16b40 <strncmp@plt>
   2c5cc:	cbz	w0, 2c6b8 <rl_on_new_line@@Base+0x950>
   2c5d0:	cmp	w27, #0x1
   2c5d4:	mov	x22, x26
   2c5d8:	mov	x23, x24
   2c5dc:	b.lt	2c6c0 <rl_on_new_line@@Base+0x958>  // b.tstop
   2c5e0:	ldrb	w8, [x24]
   2c5e4:	mov	x22, x26
   2c5e8:	mov	x23, x24
   2c5ec:	cbz	w8, 2c6c0 <rl_on_new_line@@Base+0x958>
   2c5f0:	mov	w19, wzr
   2c5f4:	mov	w20, wzr
   2c5f8:	mov	x22, x26
   2c5fc:	mov	x23, x24
   2c600:	sub	x2, x29, #0x10
   2c604:	sub	x5, x29, #0x8
   2c608:	mov	x0, x24
   2c60c:	mov	w1, w20
   2c610:	mov	x3, x26
   2c614:	mov	w4, w19
   2c618:	bl	17360 <_rl_compare_chars@plt>
   2c61c:	cbz	w0, 2c6c0 <rl_on_new_line@@Base+0x958>
   2c620:	mov	w2, #0x1                   	// #1
   2c624:	mov	x0, x24
   2c628:	mov	w1, w20
   2c62c:	mov	w3, wzr
   2c630:	bl	16c00 <_rl_find_next_mbchar@plt>
   2c634:	mov	w20, w0
   2c638:	mov	w2, #0x1                   	// #1
   2c63c:	mov	x0, x26
   2c640:	mov	w1, w19
   2c644:	mov	w3, wzr
   2c648:	bl	16c00 <_rl_find_next_mbchar@plt>
   2c64c:	add	x23, x24, w20, sxtw
   2c650:	cmp	w20, w27
   2c654:	add	x22, x26, w0, sxtw
   2c658:	b.ge	2c6c0 <rl_on_new_line@@Base+0x958>  // b.tcont
   2c65c:	ldrb	w8, [x23]
   2c660:	mov	w19, w0
   2c664:	cbnz	w8, 2c600 <rl_on_new_line@@Base+0x898>
   2c668:	b	2c6c0 <rl_on_new_line@@Base+0x958>
   2c66c:	cmp	w27, #0x1
   2c670:	mov	x22, x26
   2c674:	mov	x23, x24
   2c678:	b.lt	2c6c0 <rl_on_new_line@@Base+0x958>  // b.tstop
   2c67c:	sxtw	x8, w27
   2c680:	mov	x23, x24
   2c684:	mov	x22, x26
   2c688:	ldrb	w9, [x23]
   2c68c:	cbz	w9, 2c6c0 <rl_on_new_line@@Base+0x958>
   2c690:	ldrb	w10, [x22]
   2c694:	cmp	w9, w10
   2c698:	b.ne	2c6c0 <rl_on_new_line@@Base+0x958>  // b.any
   2c69c:	add	x23, x23, #0x1
   2c6a0:	sub	x9, x23, x24
   2c6a4:	cmp	x9, x8
   2c6a8:	add	x22, x22, #0x1
   2c6ac:	b.lt	2c688 <rl_on_new_line@@Base+0x920>  // b.tstop
   2c6b0:	b	2c6c0 <rl_on_new_line@@Base+0x958>
   2c6b4:	mov	x19, xzr
   2c6b8:	add	x23, x24, x19
   2c6bc:	add	x22, x26, x19
   2c6c0:	sub	w21, w23, w24
   2c6c4:	str	x27, [sp, #48]
   2c6c8:	cmp	w27, w21
   2c6cc:	mov	x27, x23
   2c6d0:	b.le	2c70c <rl_on_new_line@@Base+0x9a4>
   2c6d4:	ldr	x8, [sp, #48]
   2c6d8:	mov	x27, x23
   2c6dc:	add	w9, w8, w24
   2c6e0:	mvn	w8, w23
   2c6e4:	add	w8, w9, w8
   2c6e8:	add	x8, x8, x23
   2c6ec:	add	x8, x8, #0x1
   2c6f0:	sub	w9, w9, w23
   2c6f4:	ldrb	w10, [x27]
   2c6f8:	cbz	w10, 2c70c <rl_on_new_line@@Base+0x9a4>
   2c6fc:	subs	w9, w9, #0x1
   2c700:	add	x27, x27, #0x1
   2c704:	b.ne	2c6f4 <rl_on_new_line@@Base+0x98c>  // b.any
   2c708:	mov	x27, x8
   2c70c:	sub	w19, w22, w26
   2c710:	cmp	w19, w25
   2c714:	mov	x26, x22
   2c718:	b.ge	2c754 <rl_on_new_line@@Base+0x9ec>  // b.tcont
   2c71c:	ldur	x8, [x29, #-40]
   2c720:	mov	x26, x22
   2c724:	add	w9, w8, w25
   2c728:	mvn	w8, w22
   2c72c:	add	w8, w9, w8
   2c730:	add	x8, x8, x22
   2c734:	add	x8, x8, #0x1
   2c738:	sub	w9, w9, w22
   2c73c:	ldrb	w10, [x26]
   2c740:	cbz	w10, 2c754 <rl_on_new_line@@Base+0x9ec>
   2c744:	subs	w9, w9, #0x1
   2c748:	add	x26, x26, #0x1
   2c74c:	b.ne	2c73c <rl_on_new_line@@Base+0x9d4>  // b.any
   2c750:	mov	x26, x8
   2c754:	cmp	x23, x27
   2c758:	b.ne	2c784 <rl_on_new_line@@Base+0xa1c>  // b.any
   2c75c:	cmp	x22, x26
   2c760:	b.ne	2c784 <rl_on_new_line@@Base+0xa1c>  // b.any
   2c764:	ldp	x20, x19, [sp, #192]
   2c768:	ldp	x22, x21, [sp, #176]
   2c76c:	ldp	x24, x23, [sp, #160]
   2c770:	ldp	x26, x25, [sp, #144]
   2c774:	ldp	x28, x27, [sp, #128]
   2c778:	ldp	x29, x30, [sp, #112]
   2c77c:	add	sp, sp, #0xd0
   2c780:	ret
   2c784:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c788:	ldr	x8, [x8, #1896]
   2c78c:	ldur	x9, [x29, #-48]
   2c790:	ldr	w8, [x8]
   2c794:	cmp	w9, #0x2
   2c798:	b.lt	2c828 <rl_on_new_line@@Base+0xac0>  // b.tstop
   2c79c:	cbnz	w8, 2c828 <rl_on_new_line@@Base+0xac0>
   2c7a0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c7a4:	ldr	x9, [x9, #3088]
   2c7a8:	ldr	w9, [x9]
   2c7ac:	cbz	w9, 2c828 <rl_on_new_line@@Base+0xac0>
   2c7b0:	ldur	x8, [x29, #-48]
   2c7b4:	sub	x0, x29, #0x14
   2c7b8:	sub	x3, x29, #0x20
   2c7bc:	mov	x1, x23
   2c7c0:	sxtw	x2, w8
   2c7c4:	stur	xzr, [x29, #-32]
   2c7c8:	bl	16370 <mbrtowc@plt>
   2c7cc:	cmp	w0, #0x1
   2c7d0:	b.lt	2c81c <rl_on_new_line@@Base+0xab4>  // b.tstop
   2c7d4:	ldur	w0, [x29, #-20]
   2c7d8:	sub	w8, w0, #0x300
   2c7dc:	cmp	w8, #0x6f
   2c7e0:	b.hi	2c81c <rl_on_new_line@@Base+0xab4>  // b.pmore
   2c7e4:	bl	2c01c <rl_on_new_line@@Base+0x2b4>
   2c7e8:	cbnz	w0, 2c81c <rl_on_new_line@@Base+0xab4>
   2c7ec:	mov	x0, x24
   2c7f0:	mov	w1, w21
   2c7f4:	mov	w2, wzr
   2c7f8:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c7fc:	ldur	x21, [x29, #-40]
   2c800:	mov	w20, w0
   2c804:	mov	w1, w19
   2c808:	mov	w2, wzr
   2c80c:	mov	x0, x21
   2c810:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c814:	add	x23, x24, w20, sxtw
   2c818:	add	x22, x21, w0, sxtw
   2c81c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c820:	ldr	x8, [x8, #1896]
   2c824:	ldr	w8, [x8]
   2c828:	ldur	x9, [x29, #-48]
   2c82c:	cmp	w9, #0x2
   2c830:	b.lt	2c92c <rl_on_new_line@@Base+0xbc4>  // b.tstop
   2c834:	cbnz	w8, 2c92c <rl_on_new_line@@Base+0xbc4>
   2c838:	sub	w1, w27, w24
   2c83c:	mov	x0, x24
   2c840:	mov	w2, wzr
   2c844:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c848:	ldur	x21, [x29, #-40]
   2c84c:	mov	w19, w0
   2c850:	mov	w2, wzr
   2c854:	sub	w1, w26, w21
   2c858:	mov	x0, x21
   2c85c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c860:	add	x21, x21, w0, sxtw
   2c864:	cmp	x21, x22
   2c868:	mov	x11, x26
   2c86c:	mov	x9, x27
   2c870:	b.ls	2c9bc <rl_on_new_line@@Base+0xc54>  // b.plast
   2c874:	add	x28, x24, w19, sxtw
   2c878:	cmp	x28, x23
   2c87c:	mov	x11, x26
   2c880:	mov	x9, x27
   2c884:	b.ls	2c9bc <rl_on_new_line@@Base+0xc54>  // b.plast
   2c888:	ldur	x3, [x29, #-40]
   2c88c:	mov	w20, w0
   2c890:	sub	x2, x29, #0x10
   2c894:	sub	x5, x29, #0x8
   2c898:	mov	x0, x24
   2c89c:	mov	w1, w19
   2c8a0:	mov	w4, w20
   2c8a4:	stp	xzr, xzr, [x29, #-16]
   2c8a8:	bl	17360 <_rl_compare_chars@plt>
   2c8ac:	mov	w25, #0x1                   	// #1
   2c8b0:	cbz	w0, 2c988 <rl_on_new_line@@Base+0xc20>
   2c8b4:	ldrb	w8, [x28]
   2c8b8:	mov	x0, x24
   2c8bc:	mov	w1, w19
   2c8c0:	mov	w2, wzr
   2c8c4:	cmp	w8, #0x20
   2c8c8:	csel	w25, wzr, w25, eq  // eq = none
   2c8cc:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c8d0:	ldur	x21, [x29, #-40]
   2c8d4:	mov	w19, w0
   2c8d8:	mov	w1, w20
   2c8dc:	mov	w2, wzr
   2c8e0:	mov	x0, x21
   2c8e4:	bl	16c20 <_rl_find_prev_mbchar@plt>
   2c8e8:	add	x21, x21, w0, sxtw
   2c8ec:	cmp	x21, x22
   2c8f0:	add	x28, x24, w19, sxtw
   2c8f4:	b.ls	2c988 <rl_on_new_line@@Base+0xc20>  // b.plast
   2c8f8:	cmp	x28, x23
   2c8fc:	b.ls	2c988 <rl_on_new_line@@Base+0xc20>  // b.plast
   2c900:	ldur	x3, [x29, #-40]
   2c904:	mov	w20, w0
   2c908:	sub	x2, x29, #0x10
   2c90c:	sub	x5, x29, #0x8
   2c910:	mov	x0, x24
   2c914:	mov	w1, w19
   2c918:	mov	w4, w20
   2c91c:	stp	xzr, xzr, [x29, #-16]
   2c920:	bl	17360 <_rl_compare_chars@plt>
   2c924:	cbnz	w0, 2c8b4 <rl_on_new_line@@Base+0xb4c>
   2c928:	b	2c988 <rl_on_new_line@@Base+0xc20>
   2c92c:	sub	x21, x26, #0x1
   2c930:	cmp	x21, x22
   2c934:	mov	x11, x26
   2c938:	mov	x9, x27
   2c93c:	b.ls	2c9bc <rl_on_new_line@@Base+0xc54>  // b.plast
   2c940:	sub	x28, x27, #0x1
   2c944:	cmp	x28, x23
   2c948:	mov	x11, x26
   2c94c:	mov	x9, x27
   2c950:	b.ls	2c9bc <rl_on_new_line@@Base+0xc54>  // b.plast
   2c954:	mov	w25, #0x1                   	// #1
   2c958:	ldrb	w8, [x28]
   2c95c:	ldrb	w9, [x21]
   2c960:	cmp	w8, w9
   2c964:	b.ne	2c988 <rl_on_new_line@@Base+0xc20>  // b.any
   2c968:	cmp	w8, #0x20
   2c96c:	sub	x21, x21, #0x1
   2c970:	csel	w25, w25, wzr, eq  // eq = none
   2c974:	cmp	x21, x22
   2c978:	sub	x28, x28, #0x1
   2c97c:	b.ls	2c988 <rl_on_new_line@@Base+0xc20>  // b.plast
   2c980:	cmp	x28, x23
   2c984:	b.hi	2c958 <rl_on_new_line@@Base+0xbf0>  // b.pmore
   2c988:	mov	x11, x26
   2c98c:	mov	x9, x27
   2c990:	cbnz	w25, 2c9bc <rl_on_new_line@@Base+0xc54>
   2c994:	mov	x0, x28
   2c998:	mov	w1, wzr
   2c99c:	mov	x2, xzr
   2c9a0:	mov	x3, x21
   2c9a4:	mov	w4, wzr
   2c9a8:	mov	x5, xzr
   2c9ac:	bl	17360 <_rl_compare_chars@plt>
   2c9b0:	cbz	w0, 2cccc <rl_on_new_line@@Base+0xf64>
   2c9b4:	mov	x11, x21
   2c9b8:	mov	x9, x28
   2c9bc:	str	x9, [sp, #16]
   2c9c0:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c9c4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2c9c8:	ldr	x21, [x21, #2408]
   2c9cc:	ldr	x25, [sp, #40]
   2c9d0:	ldr	w9, [x8, #1092]
   2c9d4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c9d8:	ldr	w8, [x21]
   2c9dc:	cmp	w25, #0x0
   2c9e0:	csel	w9, w9, wzr, eq  // eq = none
   2c9e4:	str	w9, [sp, #12]
   2c9e8:	ldr	x20, [x20, #3264]
   2c9ec:	cmp	w8, w25
   2c9f0:	b.eq	2cac4 <rl_on_new_line@@Base+0xd5c>  // b.none
   2c9f4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2c9f8:	ldr	x9, [x9, #3520]
   2c9fc:	ldr	w9, [x9]
   2ca00:	cmp	w9, w25
   2ca04:	b.lt	2ca60 <rl_on_new_line@@Base+0xcf8>  // b.tstop
   2ca08:	sub	w19, w25, w8
   2ca0c:	cmp	w19, #0x1
   2ca10:	str	x11, [sp]
   2ca14:	b.lt	2cc4c <rl_on_new_line@@Base+0xee4>  // b.tstop
   2ca18:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ca1c:	ldr	x25, [x25, #1928]
   2ca20:	ldr	x1, [x25]
   2ca24:	mov	w0, #0xa                   	// #10
   2ca28:	bl	16670 <putc@plt>
   2ca2c:	subs	w19, w19, #0x1
   2ca30:	b.ne	2ca20 <rl_on_new_line@@Base+0xcb8>  // b.any
   2ca34:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ca38:	ldr	x0, [x20]
   2ca3c:	ldr	x2, [x2, #2496]
   2ca40:	mov	w1, #0x1                   	// #1
   2ca44:	bl	16590 <tputs@plt>
   2ca48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ca4c:	ldr	x8, [x8, #1952]
   2ca50:	str	wzr, [x8]
   2ca54:	ldr	x25, [sp, #40]
   2ca58:	ldr	x11, [sp]
   2ca5c:	str	w25, [x21]
   2ca60:	cbz	w25, 2ca70 <rl_on_new_line@@Base+0xd08>
   2ca64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ca68:	ldr	w8, [x8, #1120]
   2ca6c:	b	2ca80 <rl_on_new_line@@Base+0xd18>
   2ca70:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ca74:	ldr	w8, [x8, #1052]
   2ca78:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ca7c:	str	w8, [x9, #1120]
   2ca80:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ca84:	ldr	x9, [x9, #1896]
   2ca88:	ldr	w10, [x9]
   2ca8c:	ldur	x9, [x29, #-48]
   2ca90:	cmp	w9, #0x1
   2ca94:	cset	w9, eq  // eq = none
   2ca98:	cmp	w10, #0x0
   2ca9c:	cset	w10, ne  // ne = any
   2caa0:	cbz	w8, 2cac4 <rl_on_new_line@@Base+0xd5c>
   2caa4:	cbnz	w25, 2cac4 <rl_on_new_line@@Base+0xd5c>
   2caa8:	orr	w9, w9, w10
   2caac:	cbz	w9, 2cac4 <rl_on_new_line@@Base+0xd5c>
   2cab0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cab4:	ldr	x10, [x10, #1952]
   2cab8:	ldr	w9, [x10]
   2cabc:	add	w8, w9, w8
   2cac0:	str	w8, [x10]
   2cac4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2cac8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cacc:	ldr	x9, [x9, #2192]
   2cad0:	ldr	w8, [x8, #1048]
   2cad4:	ldr	x10, [sp, #56]
   2cad8:	sub	w28, w23, w24
   2cadc:	ldr	w9, [x9]
   2cae0:	cmp	w8, w10
   2cae4:	csel	w21, w10, w8, gt
   2cae8:	ldur	x8, [x29, #-40]
   2caec:	orr	w9, w9, w25
   2caf0:	sub	x8, x22, x8
   2caf4:	str	x8, [sp, #24]
   2caf8:	cbnz	w9, 2cd80 <rl_on_new_line@@Base+0x1018>
   2cafc:	ldr	x0, [x20]
   2cb00:	cbz	x0, 2cd80 <rl_on_new_line@@Base+0x1018>
   2cb04:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2cb08:	ldr	w8, [x8, #1064]
   2cb0c:	cmp	w21, w8
   2cb10:	b.le	2cd80 <rl_on_new_line@@Base+0x1018>
   2cb14:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cb18:	ldr	x8, [x8, #1952]
   2cb1c:	ldr	w19, [x8]
   2cb20:	cmp	w19, #0x1
   2cb24:	b.lt	2cd80 <rl_on_new_line@@Base+0x1018>  // b.tstop
   2cb28:	ldr	x8, [sp, #24]
   2cb2c:	cmp	w8, #0x0
   2cb30:	b.gt	2cb3c <rl_on_new_line@@Base+0xdd4>
   2cb34:	cmp	w28, #0x1
   2cb38:	b.lt	2cb58 <rl_on_new_line@@Base+0xdf0>  // b.tstop
   2cb3c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2cb40:	ldr	w8, [x8, #1056]
   2cb44:	cmp	w8, w28
   2cb48:	b.ge	2cba8 <rl_on_new_line@@Base+0xe40>  // b.tcont
   2cb4c:	ldr	x9, [sp, #24]
   2cb50:	cmp	w8, w9
   2cb54:	b.ge	2cba8 <rl_on_new_line@@Base+0xe40>  // b.tcont
   2cb58:	cmp	w21, w28
   2cb5c:	b.gt	2cd80 <rl_on_new_line@@Base+0x1018>
   2cb60:	mov	x20, x11
   2cb64:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2cb68:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cb6c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cb70:	ldr	x12, [x12, #3264]
   2cb74:	ldr	x8, [x8, #1896]
   2cb78:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2cb7c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2cb80:	ldr	w9, [x9, #1060]
   2cb84:	ldr	w8, [x8]
   2cb88:	ldr	w10, [x10, #1056]
   2cb8c:	mov	x11, x20
   2cb90:	cmp	w8, #0x0
   2cb94:	ccmp	x0, #0x1, #0x0, eq  // eq = none
   2cb98:	csinc	w8, w9, w10, hi  // hi = pmore
   2cb9c:	cmp	w19, w8
   2cba0:	b.ge	2cd80 <rl_on_new_line@@Base+0x1018>  // b.tcont
   2cba4:	ldr	x0, [x12]
   2cba8:	str	x11, [sp]
   2cbac:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cbb0:	ldr	x2, [x2, #2496]
   2cbb4:	mov	w1, #0x1                   	// #1
   2cbb8:	bl	16590 <tputs@plt>
   2cbbc:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   2cbc0:	ldrb	w8, [x20, #1084]
   2cbc4:	cmp	w8, #0x1
   2cbc8:	b.ne	2cbdc <rl_on_new_line@@Base+0xe74>  // b.any
   2cbcc:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   2cbd0:	add	x0, x0, #0x10a
   2cbd4:	mov	w1, #0x1                   	// #1
   2cbd8:	bl	16d10 <_rl_output_some_chars@plt>
   2cbdc:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2cbe0:	ldr	x0, [x19, #1032]
   2cbe4:	mov	w1, w21
   2cbe8:	bl	16d10 <_rl_output_some_chars@plt>
   2cbec:	ldur	x8, [x29, #-48]
   2cbf0:	ldr	x25, [sp, #56]
   2cbf4:	cmp	w8, #0x2
   2cbf8:	b.lt	2cd0c <rl_on_new_line@@Base+0xfa4>  // b.tstop
   2cbfc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc00:	ldr	x8, [x8, #1896]
   2cc04:	ldr	w8, [x8]
   2cc08:	cbnz	w8, 2cd0c <rl_on_new_line@@Base+0xfa4>
   2cc0c:	ldr	x0, [x19, #1032]
   2cc10:	mov	w3, #0x1                   	// #1
   2cc14:	mov	w1, wzr
   2cc18:	mov	w2, w21
   2cc1c:	mov	w19, #0x1                   	// #1
   2cc20:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2cc24:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2cc28:	ldr	w8, [x8, #1092]
   2cc2c:	ldrb	w9, [x20, #1084]
   2cc30:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2cc34:	sub	w8, w0, w8
   2cc38:	add	w8, w8, w9
   2cc3c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc40:	ldr	x9, [x9, #1952]
   2cc44:	strb	w19, [x10, #1116]
   2cc48:	b	2cd1c <rl_on_new_line@@Base+0xfb4>
   2cc4c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc50:	ldr	x8, [x8, #3912]
   2cc54:	ldr	x0, [x8]
   2cc58:	cbz	x0, 2ca54 <rl_on_new_line@@Base+0xcec>
   2cc5c:	ldrb	w8, [x0]
   2cc60:	cbz	w8, 2ca54 <rl_on_new_line@@Base+0xcec>
   2cc64:	tbz	w19, #31, 2ca54 <rl_on_new_line@@Base+0xcec>
   2cc68:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc6c:	ldr	x2, [x2, #2496]
   2cc70:	mov	w1, #0x1                   	// #1
   2cc74:	bl	16590 <tputs@plt>
   2cc78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc7c:	ldr	x8, [x8, #3912]
   2cc80:	cmn	w19, #0x1
   2cc84:	b.eq	2ca54 <rl_on_new_line@@Base+0xcec>  // b.none
   2cc88:	neg	w28, w19
   2cc8c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cc90:	ldr	x19, [x19, #2496]
   2cc94:	mov	w25, #0x1                   	// #1
   2cc98:	ldr	x0, [x8]
   2cc9c:	mov	w1, #0x1                   	// #1
   2cca0:	mov	x2, x19
   2cca4:	bl	16590 <tputs@plt>
   2cca8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ccac:	ldr	x8, [x8, #3912]
   2ccb0:	add	w25, w25, #0x1
   2ccb4:	cmp	w25, w28
   2ccb8:	b.lt	2cc98 <rl_on_new_line@@Base+0xf30>  // b.tstop
   2ccbc:	b	2ca54 <rl_on_new_line@@Base+0xcec>
   2ccc0:	ldr	x8, [sp, #56]
   2ccc4:	add	x26, x19, w8, sxtw
   2ccc8:	b	2d324 <rl_on_new_line@@Base+0x15bc>
   2cccc:	ldrb	w8, [x28]
   2ccd0:	cbz	w8, 2d534 <rl_on_new_line@@Base+0x17cc>
   2ccd4:	ldur	x8, [x29, #-48]
   2ccd8:	cmp	w8, #0x2
   2ccdc:	b.lt	2d53c <rl_on_new_line@@Base+0x17d4>  // b.tstop
   2cce0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cce4:	ldr	x8, [x8, #1896]
   2cce8:	ldr	w8, [x8]
   2ccec:	cbnz	w8, 2d53c <rl_on_new_line@@Base+0x17d4>
   2ccf0:	sub	w1, w28, w24
   2ccf4:	mov	w2, #0x1                   	// #1
   2ccf8:	mov	x0, x24
   2ccfc:	mov	w3, wzr
   2cd00:	bl	16c00 <_rl_find_next_mbchar@plt>
   2cd04:	add	x9, x24, w0, sxtw
   2cd08:	b	2d540 <rl_on_new_line@@Base+0x17d8>
   2cd0c:	ldrb	w8, [x20, #1084]
   2cd10:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cd14:	ldr	x9, [x9, #1952]
   2cd18:	add	w8, w21, w8
   2cd1c:	str	w8, [x9]
   2cd20:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2cd24:	ldr	w8, [x8, #1056]
   2cd28:	ldr	x10, [sp, #24]
   2cd2c:	ldr	x11, [sp]
   2cd30:	cmp	w8, w28
   2cd34:	cset	w9, lt  // lt = tstop
   2cd38:	cmp	w8, w10
   2cd3c:	ldr	x10, [sp, #48]
   2cd40:	cset	w8, lt  // lt = tstop
   2cd44:	and	w8, w9, w8
   2cd48:	cmp	w10, w25
   2cd4c:	b.ne	2cd78 <rl_on_new_line@@Base+0x1010>  // b.any
   2cd50:	cbnz	w8, 2cd78 <rl_on_new_line@@Base+0x1010>
   2cd54:	ldr	x10, [sp, #16]
   2cd58:	sxtw	x9, w21
   2cd5c:	sub	x10, x10, x24
   2cd60:	cmp	x10, x9
   2cd64:	b.ge	2cd78 <rl_on_new_line@@Base+0x1010>  // b.tcont
   2cd68:	ldur	x10, [x29, #-40]
   2cd6c:	sub	x10, x11, x10
   2cd70:	cmp	x10, x9
   2cd74:	b.lt	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tstop
   2cd78:	ldr	x25, [sp, #40]
   2cd7c:	tbz	w8, #0, 2d318 <rl_on_new_line@@Base+0x15b0>
   2cd80:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cd84:	ldr	x8, [x8, #1952]
   2cd88:	mov	w0, w28
   2cd8c:	mov	x1, x24
   2cd90:	mov	x21, x11
   2cd94:	ldr	w19, [x8]
   2cd98:	bl	16500 <_rl_move_cursor_relative@plt>
   2cd9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cda0:	ldr	x8, [x8, #1896]
   2cda4:	ldur	x9, [x29, #-48]
   2cda8:	ldr	w8, [x8]
   2cdac:	cmp	w9, #0x1
   2cdb0:	b.le	2cdfc <rl_on_new_line@@Base+0x1094>
   2cdb4:	orr	w9, w8, w25
   2cdb8:	cbnz	w9, 2cdfc <rl_on_new_line@@Base+0x1094>
   2cdbc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cdc0:	ldr	x9, [x9, #1952]
   2cdc4:	ldr	w9, [x9]
   2cdc8:	cmp	w9, #0x1
   2cdcc:	cset	w10, lt  // lt = tstop
   2cdd0:	cmp	w19, #0x1
   2cdd4:	cset	w11, lt  // lt = tstop
   2cdd8:	and	w10, w11, w10
   2cddc:	tbnz	w10, #0, 2cdfc <rl_on_new_line@@Base+0x1094>
   2cde0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2cde4:	ldr	w10, [x10, #1060]
   2cde8:	cmp	w9, w10
   2cdec:	b.ne	2cdfc <rl_on_new_line@@Base+0x1094>  // b.any
   2cdf0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2cdf4:	mov	w10, #0x1                   	// #1
   2cdf8:	strb	w10, [x9, #1116]
   2cdfc:	ldr	x9, [sp, #16]
   2ce00:	sub	x10, x21, x22
   2ce04:	mov	x11, x21
   2ce08:	str	x10, [sp, #56]
   2ce0c:	sub	w9, w23, w9
   2ce10:	add	w23, w9, w10
   2ce14:	ldur	x9, [x29, #-48]
   2ce18:	mov	w21, w23
   2ce1c:	cmp	w9, #0x2
   2ce20:	b.lt	2ce60 <rl_on_new_line@@Base+0x10f8>  // b.tstop
   2ce24:	mov	w21, w23
   2ce28:	cbnz	w8, 2ce60 <rl_on_new_line@@Base+0x10f8>
   2ce2c:	ldur	x0, [x29, #-40]
   2ce30:	mov	w3, #0x1                   	// #1
   2ce34:	ldr	x1, [sp, #24]
   2ce38:	sub	w2, w11, w0
   2ce3c:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2ce40:	ldr	x8, [sp, #16]
   2ce44:	mov	w19, w0
   2ce48:	mov	w3, #0x1                   	// #1
   2ce4c:	mov	x0, x24
   2ce50:	sub	w2, w8, w24
   2ce54:	mov	w1, w28
   2ce58:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2ce5c:	sub	w21, w19, w0
   2ce60:	cbnz	w25, 2ce9c <rl_on_new_line@@Base+0x1134>
   2ce64:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ce68:	ldr	w8, [x8, #1120]
   2ce6c:	ldr	w9, [sp, #12]
   2ce70:	subs	w8, w8, w9
   2ce74:	b.eq	2ce9c <rl_on_new_line@@Base+0x1134>  // b.none
   2ce78:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ce7c:	ldr	x9, [x9, #1896]
   2ce80:	add	w23, w8, w23
   2ce84:	add	w8, w8, w21
   2ce88:	ldr	w9, [x9]
   2ce8c:	cmp	w9, #0x0
   2ce90:	ldur	x9, [x29, #-48]
   2ce94:	ccmp	w9, #0x1, #0x4, eq  // eq = none
   2ce98:	csel	w21, w8, w23, gt
   2ce9c:	ldur	x8, [x29, #-48]
   2cea0:	sub	w25, w26, w22
   2cea4:	mov	w19, w25
   2cea8:	cmp	w8, #0x1
   2ceac:	b.le	2cedc <rl_on_new_line@@Base+0x1174>
   2ceb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ceb4:	ldr	x8, [x8, #1896]
   2ceb8:	mov	w19, w25
   2cebc:	ldr	w8, [x8]
   2cec0:	cbnz	w8, 2cedc <rl_on_new_line@@Base+0x1174>
   2cec4:	ldur	x0, [x29, #-40]
   2cec8:	mov	w3, #0x1                   	// #1
   2cecc:	ldr	x1, [sp, #24]
   2ced0:	sub	w2, w26, w0
   2ced4:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2ced8:	mov	w19, w0
   2cedc:	subs	w28, w21, #0x1
   2cee0:	b.lt	2d018 <rl_on_new_line@@Base+0x12b0>  // b.tstop
   2cee4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cee8:	ldr	x8, [x8, #3600]
   2ceec:	ldp	x10, x24, [sp, #32]
   2cef0:	ldr	w9, [x8]
   2cef4:	cmp	w9, w24
   2cef8:	cset	w8, le
   2cefc:	cmp	w9, w10
   2cf00:	cset	w9, lt  // lt = tstop
   2cf04:	tbnz	w23, #31, 2d0d0 <rl_on_new_line@@Base+0x1368>
   2cf08:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cf0c:	ldr	x10, [x10, #2368]
   2cf10:	ldr	w10, [x10]
   2cf14:	cbz	w10, 2cf50 <rl_on_new_line@@Base+0x11e8>
   2cf18:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cf1c:	ldr	x10, [x10, #3304]
   2cf20:	cmp	w21, w19, lsl #1
   2cf24:	ldr	x0, [x10]
   2cf28:	b.le	2cf30 <rl_on_new_line@@Base+0x11c8>
   2cf2c:	cbz	x0, 2cf50 <rl_on_new_line@@Base+0x11e8>
   2cf30:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cf34:	ldr	x10, [x10, #2240]
   2cf38:	and	w8, w9, w8
   2cf3c:	ldr	w10, [x10]
   2cf40:	cmp	w10, #0x0
   2cf44:	cset	w9, ne  // ne = any
   2cf48:	and	w8, w8, w9
   2cf4c:	tbz	w8, #0, 2d218 <rl_on_new_line@@Base+0x14b0>
   2cf50:	mov	x0, x22
   2cf54:	mov	w1, w25
   2cf58:	bl	16d10 <_rl_output_some_chars@plt>
   2cf5c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cf60:	ldr	x9, [x9, #1952]
   2cf64:	ldur	x10, [x29, #-48]
   2cf68:	ldr	w8, [x9]
   2cf6c:	cmp	w10, #0x2
   2cf70:	add	w8, w8, w19
   2cf74:	str	w8, [x9]
   2cf78:	b.lt	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tstop
   2cf7c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cf80:	ldr	x9, [x9, #1896]
   2cf84:	ldr	w9, [x9]
   2cf88:	cbnz	w9, 2c764 <rl_on_new_line@@Base+0x9fc>
   2cf8c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2cf90:	ldr	w9, [x9, #1104]
   2cf94:	ldr	x10, [sp, #40]
   2cf98:	cmp	w9, w10
   2cf9c:	b.ne	2c764 <rl_on_new_line@@Base+0x9fc>  // b.any
   2cfa0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2cfa4:	ldr	w9, [x9, #1092]
   2cfa8:	cbz	w9, 2c764 <rl_on_new_line@@Base+0x9fc>
   2cfac:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2cfb0:	ldr	w10, [x10, #1112]
   2cfb4:	cbz	w10, 2c764 <rl_on_new_line@@Base+0x9fc>
   2cfb8:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2cfbc:	ldr	w10, [x10, #1052]
   2cfc0:	cmp	w10, w9
   2cfc4:	b.eq	2c764 <rl_on_new_line@@Base+0x9fc>  // b.none
   2cfc8:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2cfcc:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2cfd0:	ldr	w11, [x11, #1056]
   2cfd4:	ldr	x12, [x12, #3552]
   2cfd8:	ldr	x13, [sp, #40]
   2cfdc:	sub	w11, w11, w10
   2cfe0:	ldr	w12, [x12]
   2cfe4:	msub	w11, w12, w13, w11
   2cfe8:	ldr	x12, [sp, #24]
   2cfec:	cmp	x12, w11, sxtw
   2cff0:	b.ge	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tcont
   2cff4:	sub	w8, w8, w9
   2cff8:	add	w8, w8, w10
   2cffc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d000:	ldr	x10, [x10, #1952]
   2d004:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d008:	mov	w11, #0x1                   	// #1
   2d00c:	strb	w11, [x9, #1116]
   2d010:	str	w8, [x10]
   2d014:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d018:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d01c:	ldr	x28, [x28, #3536]
   2d020:	ldr	x0, [x28]
   2d024:	cbz	x0, 2d034 <rl_on_new_line@@Base+0x12cc>
   2d028:	neg	w8, w21
   2d02c:	cmp	w8, w19, lsl #1
   2d030:	b.le	2d140 <rl_on_new_line@@Base+0x13d8>
   2d034:	cmp	w25, #0x1
   2d038:	b.lt	2d608 <rl_on_new_line@@Base+0x18a0>  // b.tstop
   2d03c:	mov	x0, x22
   2d040:	mov	w1, w25
   2d044:	bl	16d10 <_rl_output_some_chars@plt>
   2d048:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d04c:	ldr	x9, [x9, #1952]
   2d050:	ldur	x10, [x29, #-48]
   2d054:	ldr	w8, [x9]
   2d058:	cmp	w10, #0x2
   2d05c:	add	w8, w8, w19
   2d060:	str	w8, [x9]
   2d064:	b.lt	2d608 <rl_on_new_line@@Base+0x18a0>  // b.tstop
   2d068:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d06c:	ldr	x9, [x9, #1896]
   2d070:	ldr	w9, [x9]
   2d074:	cbnz	w9, 2d608 <rl_on_new_line@@Base+0x18a0>
   2d078:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d07c:	ldr	w9, [x9, #1092]
   2d080:	subs	w8, w8, w9
   2d084:	b.le	2d608 <rl_on_new_line@@Base+0x18a0>
   2d088:	ldr	x10, [sp, #40]
   2d08c:	cbnz	w10, 2d608 <rl_on_new_line@@Base+0x18a0>
   2d090:	cbz	w9, 2d608 <rl_on_new_line@@Base+0x18a0>
   2d094:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d098:	ldr	w9, [x9, #1112]
   2d09c:	cbz	w9, 2d608 <rl_on_new_line@@Base+0x18a0>
   2d0a0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d0a4:	ldrsw	x9, [x9, #1056]
   2d0a8:	ldr	x10, [sp, #24]
   2d0ac:	cmp	x10, x9
   2d0b0:	b.gt	2d608 <rl_on_new_line@@Base+0x18a0>
   2d0b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d0b8:	ldr	x9, [x9, #1952]
   2d0bc:	str	w8, [x9]
   2d0c0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d0c4:	mov	w9, #0x1                   	// #1
   2d0c8:	strb	w9, [x8, #1116]
   2d0cc:	b	2d608 <rl_on_new_line@@Base+0x18a0>
   2d0d0:	mov	x0, x22
   2d0d4:	mov	w1, w25
   2d0d8:	bl	16d10 <_rl_output_some_chars@plt>
   2d0dc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d0e0:	ldr	x9, [x9, #1952]
   2d0e4:	ldr	w8, [x9]
   2d0e8:	add	w8, w8, w19
   2d0ec:	str	w8, [x9]
   2d0f0:	cbnz	w24, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d0f4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d0f8:	ldr	w9, [x9, #1112]
   2d0fc:	cbz	w9, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d100:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d104:	ldr	w9, [x9, #1092]
   2d108:	cbz	w9, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d10c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2d110:	ldrsw	x10, [x10, #1056]
   2d114:	ldr	x11, [sp, #24]
   2d118:	cmp	x11, x10
   2d11c:	b.gt	2c764 <rl_on_new_line@@Base+0x9fc>
   2d120:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d124:	ldr	x11, [x11, #1952]
   2d128:	sub	w8, w8, w9
   2d12c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d130:	mov	w10, #0x1                   	// #1
   2d134:	str	w8, [x11]
   2d138:	strb	w10, [x9, #1116]
   2d13c:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d140:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d144:	ldr	x8, [x8, #2192]
   2d148:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d14c:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   2d150:	ldr	w8, [x8]
   2d154:	ldr	x9, [x9, #1952]
   2d158:	ldr	w10, [x25, #1112]
   2d15c:	ldr	x20, [sp, #56]
   2d160:	cmp	w8, #0x0
   2d164:	ldr	w11, [x9]
   2d168:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d16c:	ldr	w9, [x9, #1120]
   2d170:	cset	w8, ne  // ne = any
   2d174:	cmp	w11, #0x0
   2d178:	cset	w12, eq  // eq = none
   2d17c:	cmn	w9, w23
   2d180:	cset	w13, eq  // eq = none
   2d184:	cmp	w10, #0x0
   2d188:	and	w12, w8, w12
   2d18c:	cset	w10, ne  // ne = any
   2d190:	and	w10, w12, w10
   2d194:	cset	w9, eq  // eq = none
   2d198:	tst	w10, w13
   2d19c:	csel	w21, wzr, w21, ne  // ne = any
   2d1a0:	cmp	w21, #0x0
   2d1a4:	neg	w19, w21
   2d1a8:	cset	w10, ne  // ne = any
   2d1ac:	cmp	w11, w19
   2d1b0:	cset	w11, lt  // lt = tstop
   2d1b4:	cbz	w21, 2d454 <rl_on_new_line@@Base+0x16ec>
   2d1b8:	and	w8, w8, w9
   2d1bc:	and	w8, w8, w10
   2d1c0:	and	w8, w11, w8
   2d1c4:	tbnz	w8, #0, 2d454 <rl_on_new_line@@Base+0x16ec>
   2d1c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d1cc:	ldr	x8, [x8, #3552]
   2d1d0:	ldr	w8, [x8]
   2d1d4:	cmp	w8, w19
   2d1d8:	b.lt	2d454 <rl_on_new_line@@Base+0x16ec>  // b.tstop
   2d1dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d1e0:	ldr	x8, [x8, #2880]
   2d1e4:	ldr	x8, [x8]
   2d1e8:	cbz	x8, 2d410 <rl_on_new_line@@Base+0x16a8>
   2d1ec:	ldrb	w9, [x8]
   2d1f0:	cbz	w9, 2d410 <rl_on_new_line@@Base+0x16a8>
   2d1f4:	mov	x0, x8
   2d1f8:	mov	w1, w19
   2d1fc:	mov	w2, w19
   2d200:	bl	167d0 <tgoto@plt>
   2d204:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d208:	ldr	x2, [x2, #2496]
   2d20c:	mov	w1, w19
   2d210:	bl	16590 <tputs@plt>
   2d214:	b	2d454 <rl_on_new_line@@Base+0x16ec>
   2d218:	ldr	x8, [sp, #16]
   2d21c:	ldrb	w24, [x8]
   2d220:	cbz	w24, 2d2c0 <rl_on_new_line@@Base+0x1558>
   2d224:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d228:	ldr	w9, [sp, #12]
   2d22c:	ldr	w8, [x8, #1064]
   2d230:	cmp	w9, #0x1
   2d234:	b.lt	2d260 <rl_on_new_line@@Base+0x14f8>  // b.tstop
   2d238:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d23c:	ldr	x9, [x9, #2192]
   2d240:	ldr	w9, [x9]
   2d244:	cbz	w9, 2d260 <rl_on_new_line@@Base+0x14f8>
   2d248:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d24c:	ldr	x9, [x9, #1952]
   2d250:	ldr	w9, [x9]
   2d254:	cbnz	w9, 2d260 <rl_on_new_line@@Base+0x14f8>
   2d258:	cmp	w23, w8
   2d25c:	b.gt	2d2c0 <rl_on_new_line@@Base+0x1558>
   2d260:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d264:	ldr	w9, [x9, #1092]
   2d268:	cbz	w9, 2d2ac <rl_on_new_line@@Base+0x1544>
   2d26c:	ldur	x9, [x29, #-48]
   2d270:	cmp	w9, #0x2
   2d274:	b.lt	2d2ac <rl_on_new_line@@Base+0x1544>  // b.tstop
   2d278:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d27c:	ldr	x9, [x9, #1896]
   2d280:	ldr	x10, [sp, #40]
   2d284:	ldr	w9, [x9]
   2d288:	orr	w9, w9, w10
   2d28c:	cbnz	w9, 2d2ac <rl_on_new_line@@Base+0x1544>
   2d290:	cmp	w21, w8
   2d294:	b.ge	2d2ac <rl_on_new_line@@Base+0x1544>  // b.tcont
   2d298:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d29c:	ldrsw	x8, [x8, #1056]
   2d2a0:	ldr	x9, [sp, #24]
   2d2a4:	cmp	x9, x8
   2d2a8:	b.le	2d2c0 <rl_on_new_line@@Base+0x1558>
   2d2ac:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d2b0:	ldr	w8, [x8, #1120]
   2d2b4:	ldr	w9, [sp, #12]
   2d2b8:	cmp	w8, w9
   2d2bc:	b.ge	2d750 <rl_on_new_line@@Base+0x19e8>  // b.tcont
   2d2c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d2c4:	ldr	x8, [x8, #1896]
   2d2c8:	ldur	x9, [x29, #-48]
   2d2cc:	mov	x0, x22
   2d2d0:	mov	w1, w25
   2d2d4:	ldr	w8, [x8]
   2d2d8:	cmp	w9, #0x1
   2d2dc:	cset	w20, eq  // eq = none
   2d2e0:	cmp	w8, #0x0
   2d2e4:	cset	w21, ne  // ne = any
   2d2e8:	bl	16d10 <_rl_output_some_chars@plt>
   2d2ec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d2f0:	ldr	x9, [x9, #1952]
   2d2f4:	cmp	w23, #0x1
   2d2f8:	ldr	w8, [x9]
   2d2fc:	add	w8, w8, w19
   2d300:	str	w8, [x9]
   2d304:	b.lt	2d7d4 <rl_on_new_line@@Base+0x1a6c>  // b.tstop
   2d308:	cbnz	w24, 2d7d4 <rl_on_new_line@@Base+0x1a6c>
   2d30c:	orr	w9, w20, w21
   2d310:	tbnz	w9, #0, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d314:	b	2d7d4 <rl_on_new_line@@Base+0x1a6c>
   2d318:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d31c:	ldr	x28, [x28, #3552]
   2d320:	ldur	x19, [x29, #-40]
   2d324:	add	x0, x19, w21, sxtw
   2d328:	sub	w19, w26, w0
   2d32c:	cmp	w19, #0x1
   2d330:	b.lt	2d400 <rl_on_new_line@@Base+0x1698>  // b.tstop
   2d334:	mov	w1, w19
   2d338:	bl	16d10 <_rl_output_some_chars@plt>
   2d33c:	ldur	x8, [x29, #-48]
   2d340:	cmp	w8, #0x2
   2d344:	b.lt	2d3ec <rl_on_new_line@@Base+0x1684>  // b.tstop
   2d348:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d34c:	ldr	x8, [x8, #1896]
   2d350:	ldr	w8, [x8]
   2d354:	cbnz	w8, 2d3ec <rl_on_new_line@@Base+0x1684>
   2d358:	ldur	x0, [x29, #-40]
   2d35c:	mov	w3, #0x1                   	// #1
   2d360:	mov	w1, w21
   2d364:	sub	w2, w26, w0
   2d368:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2d36c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d370:	ldr	x12, [x12, #1952]
   2d374:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d378:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2d37c:	ldr	w9, [x8, #1092]
   2d380:	ldr	w10, [x12]
   2d384:	ldr	w8, [x11, #1052]
   2d388:	add	w10, w10, w0
   2d38c:	cmp	w8, w9
   2d390:	str	w10, [x12]
   2d394:	b.ge	2d400 <rl_on_new_line@@Base+0x1698>  // b.tcont
   2d398:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2d39c:	ldr	w11, [x11, #1104]
   2d3a0:	cmp	w11, w25
   2d3a4:	b.ne	2d400 <rl_on_new_line@@Base+0x1698>  // b.any
   2d3a8:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2d3ac:	ldr	w11, [x11, #1060]
   2d3b0:	ldr	w12, [x28]
   2d3b4:	cmp	w11, w12
   2d3b8:	b.le	2d400 <rl_on_new_line@@Base+0x1698>
   2d3bc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d3c0:	ldr	x11, [x11, #2192]
   2d3c4:	ldr	w11, [x11]
   2d3c8:	cbnz	w11, 2d400 <rl_on_new_line@@Base+0x1698>
   2d3cc:	sub	w9, w10, w9
   2d3d0:	add	w8, w9, w8
   2d3d4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d3d8:	ldr	x9, [x9, #1952]
   2d3dc:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2d3e0:	mov	w11, #0x1                   	// #1
   2d3e4:	strb	w11, [x10, #1116]
   2d3e8:	b	2d3fc <rl_on_new_line@@Base+0x1694>
   2d3ec:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d3f0:	ldr	x9, [x9, #1952]
   2d3f4:	ldr	w8, [x9]
   2d3f8:	add	w8, w8, w19
   2d3fc:	str	w8, [x9]
   2d400:	ldp	x9, x8, [sp, #48]
   2d404:	cmp	w9, w8
   2d408:	b.gt	2d608 <rl_on_new_line@@Base+0x18a0>
   2d40c:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d410:	ldrb	w8, [x0]
   2d414:	cbz	w8, 2d454 <rl_on_new_line@@Base+0x16ec>
   2d418:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d41c:	ldr	x2, [x2, #2496]
   2d420:	mov	w1, #0x1                   	// #1
   2d424:	bl	16590 <tputs@plt>
   2d428:	cmn	w21, #0x1
   2d42c:	b.eq	2d454 <rl_on_new_line@@Base+0x16ec>  // b.none
   2d430:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d434:	ldr	x19, [x19, #2496]
   2d438:	add	w21, w21, #0x1
   2d43c:	ldr	x0, [x28]
   2d440:	mov	w1, #0x1                   	// #1
   2d444:	mov	x2, x19
   2d448:	bl	16590 <tputs@plt>
   2d44c:	adds	w21, w21, #0x1
   2d450:	b.cc	2d43c <rl_on_new_line@@Base+0x16d4>  // b.lo, b.ul, b.last
   2d454:	cmp	w20, #0x1
   2d458:	b.lt	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tstop
   2d45c:	mov	x0, x22
   2d460:	mov	w1, w20
   2d464:	bl	16d10 <_rl_output_some_chars@plt>
   2d468:	ldur	x8, [x29, #-48]
   2d46c:	cmp	w8, #0x2
   2d470:	b.lt	2d514 <rl_on_new_line@@Base+0x17ac>  // b.tstop
   2d474:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d478:	ldr	x8, [x8, #1896]
   2d47c:	ldr	w8, [x8]
   2d480:	cbnz	w8, 2d514 <rl_on_new_line@@Base+0x17ac>
   2d484:	mov	w3, #0x1                   	// #1
   2d488:	mov	x0, x22
   2d48c:	mov	w1, wzr
   2d490:	mov	w2, w20
   2d494:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2d498:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d49c:	ldr	x11, [x11, #1952]
   2d4a0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d4a4:	ldr	w10, [x9, #1092]
   2d4a8:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d4ac:	ldr	w8, [x11]
   2d4b0:	add	w8, w8, w0
   2d4b4:	str	w8, [x11]
   2d4b8:	ldr	x13, [x13, #2192]
   2d4bc:	subs	w9, w8, w10
   2d4c0:	b.lt	2d59c <rl_on_new_line@@Base+0x1834>  // b.tstop
   2d4c4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d4c8:	ldr	x11, [sp, #40]
   2d4cc:	ldr	x12, [x12, #3552]
   2d4d0:	cbnz	w11, 2d5a4 <rl_on_new_line@@Base+0x183c>
   2d4d4:	cbz	w10, 2d5a4 <rl_on_new_line@@Base+0x183c>
   2d4d8:	ldr	w10, [x25, #1112]
   2d4dc:	cbz	w10, 2d5a4 <rl_on_new_line@@Base+0x183c>
   2d4e0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2d4e4:	ldrsw	x10, [x10, #1056]
   2d4e8:	ldr	x11, [sp, #24]
   2d4ec:	cmp	x11, x10
   2d4f0:	b.gt	2d5a4 <rl_on_new_line@@Base+0x183c>
   2d4f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d4f8:	ldr	x8, [x8, #1952]
   2d4fc:	mov	w10, #0x1                   	// #1
   2d500:	str	w9, [x8]
   2d504:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2d508:	strb	w10, [x8, #1116]
   2d50c:	mov	w8, w9
   2d510:	b	2d5a4 <rl_on_new_line@@Base+0x183c>
   2d514:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d518:	ldr	x9, [x9, #1952]
   2d51c:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d520:	ldr	w8, [x9]
   2d524:	add	w8, w8, w20
   2d528:	str	w8, [x9]
   2d52c:	ldr	x13, [x13, #2192]
   2d530:	b	2d5e4 <rl_on_new_line@@Base+0x187c>
   2d534:	mov	x9, x28
   2d538:	b	2d540 <rl_on_new_line@@Base+0x17d8>
   2d53c:	add	x9, x28, #0x1
   2d540:	ldrb	w8, [x21]
   2d544:	cbz	w8, 2d58c <rl_on_new_line@@Base+0x1824>
   2d548:	ldur	x8, [x29, #-48]
   2d54c:	cmp	w8, #0x2
   2d550:	b.lt	2d594 <rl_on_new_line@@Base+0x182c>  // b.tstop
   2d554:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d558:	ldr	x8, [x8, #1896]
   2d55c:	ldr	w8, [x8]
   2d560:	cbnz	w8, 2d594 <rl_on_new_line@@Base+0x182c>
   2d564:	ldur	x19, [x29, #-40]
   2d568:	mov	w2, #0x1                   	// #1
   2d56c:	mov	w3, wzr
   2d570:	mov	x20, x9
   2d574:	sub	w1, w21, w19
   2d578:	mov	x0, x19
   2d57c:	bl	16c00 <_rl_find_next_mbchar@plt>
   2d580:	mov	x9, x20
   2d584:	add	x11, x19, w0, sxtw
   2d588:	b	2c9bc <rl_on_new_line@@Base+0xc54>
   2d58c:	mov	x11, x21
   2d590:	b	2c9bc <rl_on_new_line@@Base+0xc54>
   2d594:	add	x11, x21, #0x1
   2d598:	b	2c9bc <rl_on_new_line@@Base+0xc54>
   2d59c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d5a0:	ldr	x12, [x12, #3552]
   2d5a4:	ldr	w9, [x12]
   2d5a8:	cmp	w8, w9
   2d5ac:	b.ne	2d5e4 <rl_on_new_line@@Base+0x187c>  // b.any
   2d5b0:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2d5b4:	ldr	x8, [x8, #3328]
   2d5b8:	ldr	x9, [sp, #40]
   2d5bc:	ldr	x8, [x8, #24]
   2d5c0:	sxtw	x9, w9
   2d5c4:	add	x9, x9, #0x1
   2d5c8:	ldr	w10, [x8, x9, lsl #2]
   2d5cc:	cbz	w10, 2d5e4 <rl_on_new_line@@Base+0x187c>
   2d5d0:	sub	w10, w20, #0x1
   2d5d4:	ldrb	w10, [x22, w10, sxtw]
   2d5d8:	cmp	w10, #0x20
   2d5dc:	b.eq	2d5e4 <rl_on_new_line@@Base+0x187c>  // b.none
   2d5e0:	str	wzr, [x8, x9, lsl #2]
   2d5e4:	ldr	w8, [x13]
   2d5e8:	cbz	w8, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d5ec:	ldur	x9, [x29, #-40]
   2d5f0:	sub	x8, x27, x24
   2d5f4:	sub	x0, x26, x9
   2d5f8:	cmp	x8, x0
   2d5fc:	b.le	2c764 <rl_on_new_line@@Base+0x9fc>
   2d600:	ldur	x1, [x29, #-40]
   2d604:	bl	16500 <_rl_move_cursor_relative@plt>
   2d608:	ldp	x8, x21, [x29, #-48]
   2d60c:	sub	x2, x27, x24
   2d610:	cmp	w8, #0x1
   2d614:	sub	x19, x26, x21
   2d618:	b.le	2d660 <rl_on_new_line@@Base+0x18f8>
   2d61c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d620:	ldr	x8, [x8, #1896]
   2d624:	ldr	w8, [x8]
   2d628:	cbnz	w8, 2d660 <rl_on_new_line@@Base+0x18f8>
   2d62c:	mov	w3, #0x1                   	// #1
   2d630:	mov	x0, x24
   2d634:	mov	w1, wzr
   2d638:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2d63c:	mov	w20, w0
   2d640:	mov	w3, #0x1                   	// #1
   2d644:	mov	x0, x21
   2d648:	mov	w1, wzr
   2d64c:	mov	w2, w19
   2d650:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2d654:	sub	w19, w20, w0
   2d658:	cbnz	w19, 2d668 <rl_on_new_line@@Base+0x1900>
   2d65c:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d660:	sub	w19, w2, w19
   2d664:	cbz	w19, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d668:	ldur	x8, [x29, #-48]
   2d66c:	cmp	w8, #0x1
   2d670:	b.eq	2d6a4 <rl_on_new_line@@Base+0x193c>  // b.none
   2d674:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d678:	ldr	x8, [x8, #1896]
   2d67c:	ldr	w8, [x8]
   2d680:	cbnz	w8, 2d6a4 <rl_on_new_line@@Base+0x193c>
   2d684:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d688:	ldr	x8, [x8, #1952]
   2d68c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d690:	ldr	w8, [x8]
   2d694:	ldr	x9, [x9, #3552]
   2d698:	ldr	w9, [x9]
   2d69c:	cmp	w8, w9
   2d6a0:	b.ge	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tcont
   2d6a4:	ldp	x9, x8, [sp, #32]
   2d6a8:	cmp	w8, w9
   2d6ac:	b.ge	2d6ec <rl_on_new_line@@Base+0x1984>  // b.tcont
   2d6b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d6b4:	ldr	x8, [x8, #2240]
   2d6b8:	ldr	w8, [x8]
   2d6bc:	cbz	w8, 2d6ec <rl_on_new_line@@Base+0x1984>
   2d6c0:	cmp	w19, #0x1
   2d6c4:	b.lt	2d738 <rl_on_new_line@@Base+0x19d0>  // b.tstop
   2d6c8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d6cc:	ldr	x20, [x20, #1928]
   2d6d0:	mov	w21, w19
   2d6d4:	ldr	x1, [x20]
   2d6d8:	mov	w0, #0x20                  	// #32
   2d6dc:	bl	16670 <putc@plt>
   2d6e0:	subs	w21, w21, #0x1
   2d6e4:	b.ne	2d6d4 <rl_on_new_line@@Base+0x196c>  // b.any
   2d6e8:	b	2d738 <rl_on_new_line@@Base+0x19d0>
   2d6ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d6f0:	ldr	x8, [x8, #3704]
   2d6f4:	ldr	x0, [x8]
   2d6f8:	cbz	x0, 2d710 <rl_on_new_line@@Base+0x19a8>
   2d6fc:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d700:	ldr	x2, [x2, #2496]
   2d704:	mov	w1, #0x1                   	// #1
   2d708:	bl	16590 <tputs@plt>
   2d70c:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d710:	cmp	w19, #0x1
   2d714:	b.lt	2d738 <rl_on_new_line@@Base+0x19d0>  // b.tstop
   2d718:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d71c:	ldr	x20, [x20, #1928]
   2d720:	mov	w21, w19
   2d724:	ldr	x1, [x20]
   2d728:	mov	w0, #0x20                  	// #32
   2d72c:	bl	16670 <putc@plt>
   2d730:	subs	w21, w21, #0x1
   2d734:	b.ne	2d724 <rl_on_new_line@@Base+0x19bc>  // b.any
   2d738:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d73c:	ldr	x9, [x9, #1952]
   2d740:	ldr	w8, [x9]
   2d744:	add	w8, w8, w19
   2d748:	str	w8, [x9]
   2d74c:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d750:	cbz	x0, 2d814 <rl_on_new_line@@Base+0x1aac>
   2d754:	mov	w1, wzr
   2d758:	mov	w2, w21
   2d75c:	bl	167d0 <tgoto@plt>
   2d760:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d764:	ldr	x2, [x2, #2496]
   2d768:	mov	w1, #0x1                   	// #1
   2d76c:	bl	16590 <tputs@plt>
   2d770:	ldr	x20, [sp, #56]
   2d774:	mov	x0, x22
   2d778:	mov	w1, w20
   2d77c:	bl	16d10 <_rl_output_some_chars@plt>
   2d780:	ldur	x8, [x29, #-48]
   2d784:	mov	w0, w20
   2d788:	cmp	w8, #0x2
   2d78c:	b.lt	2d7b8 <rl_on_new_line@@Base+0x1a50>  // b.tstop
   2d790:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d794:	ldr	x8, [x8, #1896]
   2d798:	mov	w0, w20
   2d79c:	ldr	w8, [x8]
   2d7a0:	cbnz	w8, 2d7b8 <rl_on_new_line@@Base+0x1a50>
   2d7a4:	mov	w3, #0x1                   	// #1
   2d7a8:	mov	x0, x22
   2d7ac:	mov	w1, wzr
   2d7b0:	mov	w2, w20
   2d7b4:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2d7b8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d7bc:	ldr	x9, [x9, #1952]
   2d7c0:	cmp	w23, w20
   2d7c4:	ldr	w8, [x9]
   2d7c8:	add	w8, w8, w0
   2d7cc:	str	w8, [x9]
   2d7d0:	b.ge	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tcont
   2d7d4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2d7d8:	ldr	w9, [x9, #1092]
   2d7dc:	cbz	w9, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d7e0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2d7e4:	ldr	w10, [x10, #1112]
   2d7e8:	cbz	w10, 2c764 <rl_on_new_line@@Base+0x9fc>
   2d7ec:	ldur	x10, [x29, #-48]
   2d7f0:	cmp	w10, #0x2
   2d7f4:	b.lt	2c764 <rl_on_new_line@@Base+0x9fc>  // b.tstop
   2d7f8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d7fc:	ldr	x10, [x10, #1896]
   2d800:	ldr	x11, [sp, #40]
   2d804:	ldr	w10, [x10]
   2d808:	orr	w10, w10, w11
   2d80c:	cbz	w10, 2d10c <rl_on_new_line@@Base+0x13a4>
   2d810:	b	2c764 <rl_on_new_line@@Base+0x9fc>
   2d814:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d818:	ldr	x8, [x8, #3968]
   2d81c:	ldr	x20, [sp, #56]
   2d820:	ldr	x0, [x8]
   2d824:	cbz	x0, 2d888 <rl_on_new_line@@Base+0x1b20>
   2d828:	ldrb	w8, [x0]
   2d82c:	cbz	w8, 2d888 <rl_on_new_line@@Base+0x1b20>
   2d830:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d834:	ldr	x2, [x2, #2496]
   2d838:	mov	w1, #0x1                   	// #1
   2d83c:	bl	16590 <tputs@plt>
   2d840:	mov	w19, w21
   2d844:	mov	w0, #0x20                  	// #32
   2d848:	sub	w19, w19, #0x1
   2d84c:	bl	16ad0 <_rl_output_character_function@plt>
   2d850:	cbnz	w19, 2d844 <rl_on_new_line@@Base+0x1adc>
   2d854:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d858:	ldr	x8, [x8, #2576]
   2d85c:	ldr	x0, [x8]
   2d860:	cbz	x0, 2d87c <rl_on_new_line@@Base+0x1b14>
   2d864:	ldrb	w8, [x0]
   2d868:	cbz	w8, 2d87c <rl_on_new_line@@Base+0x1b14>
   2d86c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d870:	ldr	x2, [x2, #2496]
   2d874:	mov	w1, #0x1                   	// #1
   2d878:	bl	16590 <tputs@plt>
   2d87c:	mov	w0, w21
   2d880:	bl	164e0 <_rl_backspace@plt>
   2d884:	b	2d774 <rl_on_new_line@@Base+0x1a0c>
   2d888:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d88c:	ldr	x21, [x21, #3936]
   2d890:	ldr	x0, [x21]
   2d894:	cbz	x0, 2d774 <rl_on_new_line@@Base+0x1a0c>
   2d898:	ldrb	w8, [x0]
   2d89c:	cbz	w8, 2d774 <rl_on_new_line@@Base+0x1a0c>
   2d8a0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d8a4:	ldr	x2, [x2, #2496]
   2d8a8:	mov	w1, #0x1                   	// #1
   2d8ac:	bl	16590 <tputs@plt>
   2d8b0:	cbz	w28, 2d774 <rl_on_new_line@@Base+0x1a0c>
   2d8b4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d8b8:	ldr	x19, [x19, #2496]
   2d8bc:	ldr	x0, [x21]
   2d8c0:	mov	w1, #0x1                   	// #1
   2d8c4:	mov	x2, x19
   2d8c8:	sub	w28, w28, #0x1
   2d8cc:	bl	16590 <tputs@plt>
   2d8d0:	cbnz	w28, 2d8bc <rl_on_new_line@@Base+0x1b54>
   2d8d4:	b	2d774 <rl_on_new_line@@Base+0x1a0c>

000000000002d8d8 <_rl_clear_to_eol@@Base>:
   2d8d8:	stp	x29, x30, [sp, #-48]!
   2d8dc:	str	x21, [sp, #16]
   2d8e0:	stp	x20, x19, [sp, #32]
   2d8e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d8e8:	ldr	x8, [x8, #3704]
   2d8ec:	mov	x29, sp
   2d8f0:	ldr	x8, [x8]
   2d8f4:	cbz	x8, 2d918 <_rl_clear_to_eol@@Base+0x40>
   2d8f8:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d8fc:	ldr	x2, [x2, #2496]
   2d900:	ldp	x20, x19, [sp, #32]
   2d904:	ldr	x21, [sp, #16]
   2d908:	mov	w1, #0x1                   	// #1
   2d90c:	mov	x0, x8
   2d910:	ldp	x29, x30, [sp], #48
   2d914:	b	16590 <tputs@plt>
   2d918:	mov	w19, w0
   2d91c:	cbz	w0, 2d95c <_rl_clear_to_eol@@Base+0x84>
   2d920:	cmp	w19, #0x1
   2d924:	b.lt	2d948 <_rl_clear_to_eol@@Base+0x70>  // b.tstop
   2d928:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d92c:	ldr	x20, [x20, #1928]
   2d930:	mov	w21, w19
   2d934:	ldr	x1, [x20]
   2d938:	mov	w0, #0x20                  	// #32
   2d93c:	bl	16670 <putc@plt>
   2d940:	subs	w21, w21, #0x1
   2d944:	b.ne	2d934 <_rl_clear_to_eol@@Base+0x5c>  // b.any
   2d948:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d94c:	ldr	x8, [x8, #1952]
   2d950:	ldr	w9, [x8]
   2d954:	add	w9, w9, w19
   2d958:	str	w9, [x8]
   2d95c:	ldp	x20, x19, [sp, #32]
   2d960:	ldr	x21, [sp, #16]
   2d964:	ldp	x29, x30, [sp], #48
   2d968:	ret

000000000002d96c <_rl_move_vert@@Base>:
   2d96c:	stp	x29, x30, [sp, #-64]!
   2d970:	stp	x24, x23, [sp, #16]
   2d974:	stp	x22, x21, [sp, #32]
   2d978:	stp	x20, x19, [sp, #48]
   2d97c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d980:	ldr	x21, [x21, #2408]
   2d984:	mov	x29, sp
   2d988:	ldr	w8, [x21]
   2d98c:	cmp	w8, w0
   2d990:	b.eq	2da00 <_rl_move_vert@@Base+0x94>  // b.none
   2d994:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d998:	ldr	x9, [x9, #3520]
   2d99c:	mov	w19, w0
   2d9a0:	ldr	w9, [x9]
   2d9a4:	cmp	w9, w0
   2d9a8:	b.lt	2da00 <_rl_move_vert@@Base+0x94>  // b.tstop
   2d9ac:	sub	w20, w19, w8
   2d9b0:	cmp	w20, #0x1
   2d9b4:	b.lt	2da14 <_rl_move_vert@@Base+0xa8>  // b.tstop
   2d9b8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d9bc:	ldr	x22, [x22, #1928]
   2d9c0:	ldr	x1, [x22]
   2d9c4:	mov	w0, #0xa                   	// #10
   2d9c8:	bl	16670 <putc@plt>
   2d9cc:	subs	w20, w20, #0x1
   2d9d0:	b.ne	2d9c0 <_rl_move_vert@@Base+0x54>  // b.any
   2d9d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d9d8:	ldr	x8, [x8, #3264]
   2d9dc:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d9e0:	mov	w1, #0x1                   	// #1
   2d9e4:	ldr	x0, [x8]
   2d9e8:	ldr	x2, [x2, #2496]
   2d9ec:	bl	16590 <tputs@plt>
   2d9f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2d9f4:	ldr	x8, [x8, #1952]
   2d9f8:	str	wzr, [x8]
   2d9fc:	str	w19, [x21]
   2da00:	ldp	x20, x19, [sp, #48]
   2da04:	ldp	x22, x21, [sp, #32]
   2da08:	ldp	x24, x23, [sp, #16]
   2da0c:	ldp	x29, x30, [sp], #64
   2da10:	ret
   2da14:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2da18:	ldr	x22, [x22, #3912]
   2da1c:	ldr	x0, [x22]
   2da20:	cbz	x0, 2d9fc <_rl_move_vert@@Base+0x90>
   2da24:	ldrb	w8, [x0]
   2da28:	cbz	w8, 2d9fc <_rl_move_vert@@Base+0x90>
   2da2c:	tbz	w20, #31, 2d9fc <_rl_move_vert@@Base+0x90>
   2da30:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2da34:	ldr	x2, [x2, #2496]
   2da38:	mov	w1, #0x1                   	// #1
   2da3c:	bl	16590 <tputs@plt>
   2da40:	cmn	w20, #0x1
   2da44:	b.eq	2d9fc <_rl_move_vert@@Base+0x90>  // b.none
   2da48:	neg	w23, w20
   2da4c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2da50:	ldr	x20, [x20, #2496]
   2da54:	mov	w24, #0x1                   	// #1
   2da58:	ldr	x0, [x22]
   2da5c:	mov	w1, #0x1                   	// #1
   2da60:	mov	x2, x20
   2da64:	bl	16590 <tputs@plt>
   2da68:	add	w24, w24, #0x1
   2da6c:	cmp	w24, w23
   2da70:	b.lt	2da58 <_rl_move_vert@@Base+0xec>  // b.tstop
   2da74:	b	2d9fc <_rl_move_vert@@Base+0x90>

000000000002da78 <_rl_move_cursor_relative@@Base>:
   2da78:	sub	sp, sp, #0x70
   2da7c:	stp	x29, x30, [sp, #16]
   2da80:	stp	x28, x27, [sp, #32]
   2da84:	stp	x26, x25, [sp, #48]
   2da88:	stp	x24, x23, [sp, #64]
   2da8c:	stp	x22, x21, [sp, #80]
   2da90:	stp	x20, x19, [sp, #96]
   2da94:	add	x29, sp, #0x10
   2da98:	mov	x19, x1
   2da9c:	mov	w20, w0
   2daa0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2daa4:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2daa8:	ldr	x26, [x26, #2408]
   2daac:	mov	x22, x0
   2dab0:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   2dab4:	ldr	w8, [x26]
   2dab8:	cbz	w8, 2dae0 <_rl_move_cursor_relative@@Base+0x68>
   2dabc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2dac0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2dac4:	ldr	w10, [x28, #1092]
   2dac8:	ldr	w11, [x11, #1052]
   2dacc:	ldr	w9, [x9, #1104]
   2dad0:	sub	w10, w10, w11
   2dad4:	cmp	w8, w9
   2dad8:	csel	w27, w10, wzr, eq  // eq = none
   2dadc:	b	2db14 <_rl_move_cursor_relative@@Base+0x9c>
   2dae0:	ldr	w8, [x28, #1092]
   2dae4:	cbz	w8, 2db10 <_rl_move_cursor_relative@@Base+0x98>
   2dae8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2daec:	ldr	x10, [x10, #3552]
   2daf0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2daf4:	ldr	w9, [x9, #1060]
   2daf8:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2dafc:	ldr	w10, [x10]
   2db00:	ldr	w11, [x11, #1052]
   2db04:	cmp	w9, w10
   2db08:	csel	w27, w11, w8, gt
   2db0c:	b	2db14 <_rl_move_cursor_relative@@Base+0x9c>
   2db10:	mov	w27, wzr
   2db14:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2db18:	ldr	x24, [x24, #1952]
   2db1c:	ldr	w25, [x24]
   2db20:	orr	w8, w25, w20
   2db24:	cbz	w8, 2de80 <_rl_move_cursor_relative@@Base+0x408>
   2db28:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2db2c:	ldr	x23, [x23, #1896]
   2db30:	cmp	w22, #0x2
   2db34:	mov	w21, w20
   2db38:	b.lt	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.tstop
   2db3c:	ldr	w8, [x23]
   2db40:	mov	w21, w20
   2db44:	cbnz	w8, 2dcfc <_rl_move_cursor_relative@@Base+0x284>
   2db48:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2db4c:	ldrsw	x21, [x8, #1048]
   2db50:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2db54:	ldr	x23, [x8, #1032]
   2db58:	cmp	w21, w20
   2db5c:	b.ne	2db74 <_rl_move_cursor_relative@@Base+0xfc>  // b.any
   2db60:	sxtw	x2, w20
   2db64:	mov	x0, x19
   2db68:	mov	x1, x23
   2db6c:	bl	16d70 <bcmp@plt>
   2db70:	cbz	w0, 2dbb4 <_rl_move_cursor_relative@@Base+0x13c>
   2db74:	cmp	w21, w20
   2db78:	b.ge	2db94 <_rl_move_cursor_relative@@Base+0x11c>  // b.tcont
   2db7c:	cbz	x23, 2db94 <_rl_move_cursor_relative@@Base+0x11c>
   2db80:	mov	x0, x19
   2db84:	mov	x1, x23
   2db88:	mov	x2, x21
   2db8c:	bl	16d70 <bcmp@plt>
   2db90:	cbz	w0, 2dbc4 <_rl_move_cursor_relative@@Base+0x14c>
   2db94:	mov	w3, #0x1                   	// #1
   2db98:	mov	x0, x19
   2db9c:	mov	w1, wzr
   2dba0:	mov	w2, w20
   2dba4:	mov	w23, #0x1                   	// #1
   2dba8:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2dbac:	mov	w21, w0
   2dbb0:	b	2dbfc <_rl_move_cursor_relative@@Base+0x184>
   2dbb4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dbb8:	ldr	w21, [x8, #1060]
   2dbbc:	mov	w23, wzr
   2dbc0:	b	2dbf0 <_rl_move_cursor_relative@@Base+0x178>
   2dbc4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dbc8:	ldr	w8, [x8, #1060]
   2dbcc:	mov	w3, #0x1                   	// #1
   2dbd0:	mov	x0, x19
   2dbd4:	mov	w1, w21
   2dbd8:	mov	w2, w20
   2dbdc:	stur	w8, [x29, #-4]
   2dbe0:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2dbe4:	ldur	w8, [x29, #-4]
   2dbe8:	mov	w23, wzr
   2dbec:	add	w21, w0, w8
   2dbf0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dbf4:	mov	w9, #0x1                   	// #1
   2dbf8:	strb	w9, [x8, #1116]
   2dbfc:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2dc00:	ldr	x10, [x8, #3328]
   2dc04:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dc08:	ldr	w8, [x8, #1112]
   2dc0c:	ldr	x9, [x10]
   2dc10:	cmp	x9, x19
   2dc14:	b.cs	2dc4c <_rl_move_cursor_relative@@Base+0x1d4>  // b.hs, b.nlast
   2dc18:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2dc1c:	ldr	x10, [x10, #8]
   2dc20:	ldrsw	x11, [x11, #1108]
   2dc24:	add	x10, x10, x11, lsl #2
   2dc28:	ldrsw	x10, [x10, #4]
   2dc2c:	add	x10, x9, x10
   2dc30:	cmp	x10, x19
   2dc34:	b.ls	2dc4c <_rl_move_cursor_relative@@Base+0x1d4>  // b.plast
   2dc38:	sub	w9, w19, w9
   2dc3c:	cbnz	w23, 2dc54 <_rl_move_cursor_relative@@Base+0x1dc>
   2dc40:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dc44:	ldr	x23, [x23, #1896]
   2dc48:	b	2dcfc <_rl_move_cursor_relative@@Base+0x284>
   2dc4c:	mov	w9, wzr
   2dc50:	cbz	w23, 2dc40 <_rl_move_cursor_relative@@Base+0x1c8>
   2dc54:	cbz	w8, 2ddf4 <_rl_move_cursor_relative@@Base+0x37c>
   2dc58:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dc5c:	ldr	w8, [x8, #1056]
   2dc60:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dc64:	ldr	x23, [x23, #1896]
   2dc68:	cmp	w8, w20
   2dc6c:	b.lt	2dce0 <_rl_move_cursor_relative@@Base+0x268>  // b.tstop
   2dc70:	add	w9, w9, w20
   2dc74:	cmp	w9, w8
   2dc78:	b.gt	2dce0 <_rl_move_cursor_relative@@Base+0x268>
   2dc7c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dc80:	ldr	x10, [x10, #3552]
   2dc84:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2dc88:	ldr	w9, [x9, #1060]
   2dc8c:	ldr	w10, [x10]
   2dc90:	cmp	w9, w10
   2dc94:	b.lt	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.tstop
   2dc98:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2dc9c:	ldrsw	x9, [x26]
   2dca0:	ldr	w10, [x10, #1104]
   2dca4:	cmp	w9, w10
   2dca8:	b.ne	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.any
   2dcac:	cmp	w21, w27
   2dcb0:	b.lt	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.tstop
   2dcb4:	ldr	w10, [x28, #1092]
   2dcb8:	cmp	w10, w27
   2dcbc:	b.lt	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.tstop
   2dcc0:	adrp	x11, 57000 <rl_insert@@Base+0x20abc>
   2dcc4:	ldr	x11, [x11, #3336]
   2dcc8:	sub	w8, w8, w10
   2dccc:	ldr	x11, [x11, #8]
   2dcd0:	ldr	w9, [x11, x9, lsl #2]
   2dcd4:	sub	w8, w8, w9
   2dcd8:	cmp	w8, w20
   2dcdc:	b.ge	2dcfc <_rl_move_cursor_relative@@Base+0x284>  // b.tcont
   2dce0:	sub	w21, w21, w27
   2dce4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2dce8:	mov	w9, #0x1                   	// #1
   2dcec:	strb	w9, [x8, #1116]
   2dcf0:	cmp	w25, w21
   2dcf4:	b.eq	2de80 <_rl_move_cursor_relative@@Base+0x408>  // b.none
   2dcf8:	b	2dd04 <_rl_move_cursor_relative@@Base+0x28c>
   2dcfc:	cmp	w25, w21
   2dd00:	b.eq	2de80 <_rl_move_cursor_relative@@Base+0x408>  // b.none
   2dd04:	ldr	w8, [x23]
   2dd08:	cmp	w8, #0x0
   2dd0c:	ccmp	w22, #0x1, #0x4, eq  // eq = none
   2dd10:	csel	w8, wzr, w27, gt
   2dd14:	cbz	w21, 2dd54 <_rl_move_cursor_relative@@Base+0x2dc>
   2dd18:	ldr	w9, [x24]
   2dd1c:	add	w10, w21, #0x1
   2dd20:	sub	w11, w9, w21
   2dd24:	cmp	w10, w11
   2dd28:	b.lt	2dd54 <_rl_move_cursor_relative@@Base+0x2dc>  // b.tstop
   2dd2c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dd30:	ldr	x10, [x10, #2240]
   2dd34:	ldr	w10, [x10]
   2dd38:	cbz	w10, 2dd78 <_rl_move_cursor_relative@@Base+0x300>
   2dd3c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dd40:	ldr	x10, [x10, #3552]
   2dd44:	sub	w8, w9, w8
   2dd48:	ldr	w10, [x10]
   2dd4c:	cmp	w8, w10
   2dd50:	b.ne	2dd78 <_rl_move_cursor_relative@@Base+0x300>  // b.any
   2dd54:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dd58:	ldr	x8, [x8, #3264]
   2dd5c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dd60:	mov	w1, #0x1                   	// #1
   2dd64:	ldr	x0, [x8]
   2dd68:	ldr	x2, [x2, #2496]
   2dd6c:	bl	16590 <tputs@plt>
   2dd70:	mov	w25, wzr
   2dd74:	str	wzr, [x24]
   2dd78:	subs	w0, w25, w21
   2dd7c:	b.ge	2dde8 <_rl_move_cursor_relative@@Base+0x370>  // b.tcont
   2dd80:	cmp	w22, #0x2
   2dd84:	b.lt	2de08 <_rl_move_cursor_relative@@Base+0x390>  // b.tstop
   2dd88:	ldr	w8, [x23]
   2dd8c:	cbnz	w8, 2de08 <_rl_move_cursor_relative@@Base+0x390>
   2dd90:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dd94:	ldr	x22, [x22, #2392]
   2dd98:	ldr	x0, [x22]
   2dd9c:	cbz	x0, 2de38 <_rl_move_cursor_relative@@Base+0x3c0>
   2dda0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dda4:	ldr	x2, [x2, #2496]
   2dda8:	mov	w1, #0x1                   	// #1
   2ddac:	bl	16590 <tputs@plt>
   2ddb0:	add	w8, w25, #0x1
   2ddb4:	cmp	w8, w21
   2ddb8:	b.eq	2de7c <_rl_move_cursor_relative@@Base+0x404>  // b.none
   2ddbc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ddc0:	ldr	x19, [x19, #2496]
   2ddc4:	mvn	w8, w25
   2ddc8:	add	w20, w8, w21
   2ddcc:	ldr	x0, [x22]
   2ddd0:	mov	w1, #0x1                   	// #1
   2ddd4:	mov	x2, x19
   2ddd8:	bl	16590 <tputs@plt>
   2dddc:	subs	w20, w20, #0x1
   2dde0:	b.ne	2ddcc <_rl_move_cursor_relative@@Base+0x354>  // b.any
   2dde4:	b	2de7c <_rl_move_cursor_relative@@Base+0x404>
   2dde8:	b.le	2de7c <_rl_move_cursor_relative@@Base+0x404>
   2ddec:	bl	164e0 <_rl_backspace@plt>
   2ddf0:	b	2de7c <_rl_move_cursor_relative@@Base+0x404>
   2ddf4:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ddf8:	ldr	x23, [x23, #1896]
   2ddfc:	cmp	w25, w21
   2de00:	b.ne	2dd04 <_rl_move_cursor_relative@@Base+0x28c>  // b.any
   2de04:	b	2de80 <_rl_move_cursor_relative@@Base+0x408>
   2de08:	cmp	w25, w20
   2de0c:	b.ge	2de7c <_rl_move_cursor_relative@@Base+0x404>  // b.tcont
   2de10:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2de14:	ldr	x22, [x22, #1928]
   2de18:	add	x19, x19, w25, sxtw
   2de1c:	sub	w20, w20, w25
   2de20:	ldrb	w0, [x19], #1
   2de24:	ldr	x1, [x22]
   2de28:	bl	16670 <putc@plt>
   2de2c:	subs	w20, w20, #0x1
   2de30:	b.ne	2de20 <_rl_move_cursor_relative@@Base+0x3a8>  // b.any
   2de34:	b	2de7c <_rl_move_cursor_relative@@Base+0x404>
   2de38:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2de3c:	ldr	x8, [x8, #3264]
   2de40:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2de44:	mov	w1, #0x1                   	// #1
   2de48:	ldr	x0, [x8]
   2de4c:	ldr	x2, [x2, #2496]
   2de50:	bl	16590 <tputs@plt>
   2de54:	cmp	w20, #0x1
   2de58:	b.lt	2de7c <_rl_move_cursor_relative@@Base+0x404>  // b.tstop
   2de5c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2de60:	ldr	x22, [x22, #1928]
   2de64:	mov	w20, w20
   2de68:	ldrb	w0, [x19], #1
   2de6c:	ldr	x1, [x22]
   2de70:	bl	16670 <putc@plt>
   2de74:	subs	x20, x20, #0x1
   2de78:	b.ne	2de68 <_rl_move_cursor_relative@@Base+0x3f0>  // b.any
   2de7c:	str	w21, [x24]
   2de80:	ldp	x20, x19, [sp, #96]
   2de84:	ldp	x22, x21, [sp, #80]
   2de88:	ldp	x24, x23, [sp, #64]
   2de8c:	ldp	x26, x25, [sp, #48]
   2de90:	ldp	x28, x27, [sp, #32]
   2de94:	ldp	x29, x30, [sp, #16]
   2de98:	add	sp, sp, #0x70
   2de9c:	ret

000000000002dea0 <rl_clear_visible_line@@Base>:
   2dea0:	stp	x29, x30, [sp, #-96]!
   2dea4:	stp	x28, x27, [sp, #16]
   2dea8:	stp	x26, x25, [sp, #32]
   2deac:	stp	x24, x23, [sp, #48]
   2deb0:	stp	x22, x21, [sp, #64]
   2deb4:	stp	x20, x19, [sp, #80]
   2deb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2debc:	ldr	x8, [x8, #3264]
   2dec0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dec4:	mov	w1, #0x1                   	// #1
   2dec8:	mov	x29, sp
   2decc:	ldr	x0, [x8]
   2ded0:	ldr	x2, [x2, #2496]
   2ded4:	bl	16590 <tputs@plt>
   2ded8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dedc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dee0:	ldr	x8, [x8, #3600]
   2dee4:	ldr	x21, [x21, #2408]
   2dee8:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2deec:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2def0:	ldr	w8, [x8]
   2def4:	ldr	w24, [x21]
   2def8:	ldr	x22, [x22, #1952]
   2defc:	subs	w19, w8, w24
   2df00:	str	wzr, [x22]
   2df04:	ldr	x23, [x23, #3520]
   2df08:	b.eq	2df64 <rl_clear_visible_line@@Base+0xc4>  // b.none
   2df0c:	ldr	w9, [x23]
   2df10:	cmp	w9, w8
   2df14:	b.lt	2df64 <rl_clear_visible_line@@Base+0xc4>  // b.tstop
   2df18:	cmp	w19, #0x1
   2df1c:	mov	w24, w8
   2df20:	b.lt	2e07c <rl_clear_visible_line@@Base+0x1dc>  // b.tstop
   2df24:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df28:	ldr	x20, [x20, #1928]
   2df2c:	ldr	x1, [x20]
   2df30:	mov	w0, #0xa                   	// #10
   2df34:	bl	16670 <putc@plt>
   2df38:	subs	w19, w19, #0x1
   2df3c:	b.ne	2df2c <rl_clear_visible_line@@Base+0x8c>  // b.any
   2df40:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df44:	ldr	x8, [x8, #3264]
   2df48:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df4c:	mov	w1, #0x1                   	// #1
   2df50:	ldr	x0, [x8]
   2df54:	ldr	x2, [x2, #2496]
   2df58:	bl	16590 <tputs@plt>
   2df5c:	str	wzr, [x22]
   2df60:	str	w24, [x21]
   2df64:	tbnz	w24, #31, 2e05c <rl_clear_visible_line@@Base+0x1bc>
   2df68:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df6c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df70:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df74:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2df78:	ldr	x25, [x25, #3704]
   2df7c:	ldr	x19, [x19, #2496]
   2df80:	ldr	x26, [x26, #1928]
   2df84:	ldr	x27, [x27, #3912]
   2df88:	mov	w28, w24
   2df8c:	subs	w20, w28, w24
   2df90:	b.eq	2dfe0 <rl_clear_visible_line@@Base+0x140>  // b.none
   2df94:	ldr	w8, [x23]
   2df98:	cmp	w8, w28
   2df9c:	b.lt	2dfe0 <rl_clear_visible_line@@Base+0x140>  // b.tstop
   2dfa0:	cmp	w20, #0x1
   2dfa4:	b.lt	2e00c <rl_clear_visible_line@@Base+0x16c>  // b.tstop
   2dfa8:	ldr	x1, [x26]
   2dfac:	mov	w0, #0xa                   	// #10
   2dfb0:	bl	16670 <putc@plt>
   2dfb4:	add	w24, w24, #0x1
   2dfb8:	cmp	w28, w24
   2dfbc:	b.ne	2dfa8 <rl_clear_visible_line@@Base+0x108>  // b.any
   2dfc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2dfc4:	ldr	x8, [x8, #3264]
   2dfc8:	mov	w1, #0x1                   	// #1
   2dfcc:	mov	x2, x19
   2dfd0:	ldr	x0, [x8]
   2dfd4:	bl	16590 <tputs@plt>
   2dfd8:	str	wzr, [x22]
   2dfdc:	str	w28, [x21]
   2dfe0:	ldr	x0, [x25]
   2dfe4:	cbz	x0, 2dff4 <rl_clear_visible_line@@Base+0x154>
   2dfe8:	mov	w1, #0x1                   	// #1
   2dfec:	mov	x2, x19
   2dff0:	bl	16590 <tputs@plt>
   2dff4:	subs	w28, w28, #0x1
   2dff8:	b.lt	2e05c <rl_clear_visible_line@@Base+0x1bc>  // b.tstop
   2dffc:	ldr	w24, [x21]
   2e000:	subs	w20, w28, w24
   2e004:	b.ne	2df94 <rl_clear_visible_line@@Base+0xf4>  // b.any
   2e008:	b	2dfe0 <rl_clear_visible_line@@Base+0x140>
   2e00c:	ldr	x0, [x27]
   2e010:	cbz	x0, 2dfdc <rl_clear_visible_line@@Base+0x13c>
   2e014:	ldrb	w8, [x0]
   2e018:	cbz	w8, 2dfdc <rl_clear_visible_line@@Base+0x13c>
   2e01c:	tbz	w20, #31, 2dfdc <rl_clear_visible_line@@Base+0x13c>
   2e020:	mov	w1, #0x1                   	// #1
   2e024:	mov	x2, x19
   2e028:	bl	16590 <tputs@plt>
   2e02c:	cmn	w20, #0x1
   2e030:	b.eq	2dfdc <rl_clear_visible_line@@Base+0x13c>  // b.none
   2e034:	neg	w20, w20
   2e038:	mov	w24, #0x1                   	// #1
   2e03c:	ldr	x0, [x27]
   2e040:	mov	w1, #0x1                   	// #1
   2e044:	mov	x2, x19
   2e048:	bl	16590 <tputs@plt>
   2e04c:	add	w24, w24, #0x1
   2e050:	cmp	w24, w20
   2e054:	b.lt	2e03c <rl_clear_visible_line@@Base+0x19c>  // b.tstop
   2e058:	b	2dfdc <rl_clear_visible_line@@Base+0x13c>
   2e05c:	ldp	x20, x19, [sp, #80]
   2e060:	ldp	x22, x21, [sp, #64]
   2e064:	ldp	x24, x23, [sp, #48]
   2e068:	ldp	x26, x25, [sp, #32]
   2e06c:	ldp	x28, x27, [sp, #16]
   2e070:	mov	w0, wzr
   2e074:	ldp	x29, x30, [sp], #96
   2e078:	ret
   2e07c:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e080:	ldr	x25, [x25, #3912]
   2e084:	ldr	x0, [x25]
   2e088:	cbz	x0, 2df60 <rl_clear_visible_line@@Base+0xc0>
   2e08c:	ldrb	w8, [x0]
   2e090:	cbz	w8, 2df60 <rl_clear_visible_line@@Base+0xc0>
   2e094:	tbz	w19, #31, 2df60 <rl_clear_visible_line@@Base+0xc0>
   2e098:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e09c:	ldr	x2, [x2, #2496]
   2e0a0:	mov	w1, #0x1                   	// #1
   2e0a4:	bl	16590 <tputs@plt>
   2e0a8:	cmn	w19, #0x1
   2e0ac:	b.eq	2df60 <rl_clear_visible_line@@Base+0xc0>  // b.none
   2e0b0:	neg	w20, w19
   2e0b4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e0b8:	ldr	x19, [x19, #2496]
   2e0bc:	mov	w26, #0x1                   	// #1
   2e0c0:	ldr	x0, [x25]
   2e0c4:	mov	w1, #0x1                   	// #1
   2e0c8:	mov	x2, x19
   2e0cc:	bl	16590 <tputs@plt>
   2e0d0:	add	w26, w26, #0x1
   2e0d4:	cmp	w26, w20
   2e0d8:	b.lt	2e0c0 <rl_clear_visible_line@@Base+0x220>  // b.tstop
   2e0dc:	b	2df60 <rl_clear_visible_line@@Base+0xc0>

000000000002e0e0 <rl_on_new_line_with_prompt@@Base>:
   2e0e0:	stp	x29, x30, [sp, #-48]!
   2e0e4:	stp	x22, x21, [sp, #16]
   2e0e8:	stp	x20, x19, [sp, #32]
   2e0ec:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e0f0:	ldr	x21, [x21, #2016]
   2e0f4:	mov	x29, sp
   2e0f8:	ldr	x0, [x21]
   2e0fc:	bl	16440 <strlen@plt>
   2e100:	add	w0, w0, #0x1
   2e104:	bl	2bbf0 <rl_expand_prompt@@Base+0x180>
   2e108:	adrp	x22, 57000 <rl_insert@@Base+0x20abc>
   2e10c:	ldr	x8, [x22, #3336]
   2e110:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e114:	ldr	x9, [x9, #1032]
   2e118:	ldr	x10, [x21]
   2e11c:	ldr	x0, [x8]
   2e120:	cmp	x9, #0x0
   2e124:	csel	x19, x10, x9, eq  // eq = none
   2e128:	mov	x1, x19
   2e12c:	bl	17480 <strcpy@plt>
   2e130:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2e134:	ldr	x8, [x8, #3328]
   2e138:	mov	x1, x19
   2e13c:	ldr	x0, [x8]
   2e140:	bl	17480 <strcpy@plt>
   2e144:	ldr	x19, [x21]
   2e148:	mov	w1, #0xa                   	// #10
   2e14c:	mov	x0, x19
   2e150:	bl	16ee0 <strrchr@plt>
   2e154:	cmp	x0, #0x0
   2e158:	csel	x20, x19, x0, eq  // eq = none
   2e15c:	mov	x0, x20
   2e160:	bl	16440 <strlen@plt>
   2e164:	mov	x19, x0
   2e168:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   2e16c:	cmp	x0, #0x2
   2e170:	mov	w0, w19
   2e174:	b.cc	2e1a0 <rl_on_new_line_with_prompt@@Base+0xc0>  // b.lo, b.ul, b.last
   2e178:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e17c:	ldr	x8, [x8, #1896]
   2e180:	mov	w0, w19
   2e184:	ldr	w8, [x8]
   2e188:	cbnz	w8, 2e1a0 <rl_on_new_line_with_prompt@@Base+0xc0>
   2e18c:	mov	w3, #0x1                   	// #1
   2e190:	mov	x0, x20
   2e194:	mov	w1, wzr
   2e198:	mov	w2, w19
   2e19c:	bl	2bdc4 <rl_on_new_line@@Base+0x5c>
   2e1a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e1a4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e1a8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e1ac:	ldr	x8, [x8, #1952]
   2e1b0:	ldr	x9, [x9, #3552]
   2e1b4:	ldr	x10, [x10, #2240]
   2e1b8:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e1bc:	ldr	w9, [x9]
   2e1c0:	ldr	w10, [x10]
   2e1c4:	ldr	x11, [x11, #2408]
   2e1c8:	str	w0, [x8]
   2e1cc:	cmp	w10, #0x0
   2e1d0:	cinc	w20, w9, eq  // eq = none
   2e1d4:	sdiv	w8, w19, w20
   2e1d8:	cmp	w19, #0x1
   2e1dc:	str	w8, [x11]
   2e1e0:	b.lt	2e208 <rl_on_new_line_with_prompt@@Base+0x128>  // b.tstop
   2e1e4:	msub	w8, w8, w20, w19
   2e1e8:	cbnz	w8, 2e1fc <rl_on_new_line_with_prompt@@Base+0x11c>
   2e1ec:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2e1f0:	add	x0, x0, #0x87c
   2e1f4:	mov	w1, #0x1                   	// #1
   2e1f8:	bl	16d10 <_rl_output_some_chars@plt>
   2e1fc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e200:	str	wzr, [x8, #1128]
   2e204:	b	2e214 <rl_on_new_line_with_prompt@@Base+0x134>
   2e208:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e20c:	str	wzr, [x8, #1128]
   2e210:	tbnz	w19, #31, 2e27c <rl_on_new_line_with_prompt@@Base+0x19c>
   2e214:	ldr	x8, [x22, #3336]
   2e218:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e21c:	mov	x10, xzr
   2e220:	mov	w9, wzr
   2e224:	ldr	x8, [x8, #8]
   2e228:	ldr	x11, [x11, #3600]
   2e22c:	str	w10, [x11]
   2e230:	add	x12, x10, #0x1
   2e234:	str	w9, [x8, x10, lsl #2]
   2e238:	add	w9, w9, w20
   2e23c:	cmp	w9, w19
   2e240:	mov	x10, x12
   2e244:	b.le	2e22c <rl_on_new_line_with_prompt@@Base+0x14c>
   2e248:	and	x9, x12, #0xffffffff
   2e24c:	str	w19, [x8, x9, lsl #2]
   2e250:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e254:	str	wzr, [x9, #1120]
   2e258:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e25c:	ldr	x8, [x21]
   2e260:	ldr	x9, [x9, #2384]
   2e264:	ldp	x20, x19, [sp, #32]
   2e268:	ldp	x22, x21, [sp, #16]
   2e26c:	mov	w0, wzr
   2e270:	str	x8, [x9]
   2e274:	ldp	x29, x30, [sp], #48
   2e278:	ret
   2e27c:	ldr	x8, [x22, #3336]
   2e280:	mov	x9, xzr
   2e284:	ldr	x8, [x8, #8]
   2e288:	b	2e24c <rl_on_new_line_with_prompt@@Base+0x16c>

000000000002e28c <rl_forced_update_display@@Base>:
   2e28c:	stp	x29, x30, [sp, #-16]!
   2e290:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2e294:	ldr	x8, [x8, #3336]
   2e298:	mov	x29, sp
   2e29c:	ldr	x9, [x8]
   2e2a0:	cbz	x9, 2e2cc <rl_forced_update_display@@Base+0x40>
   2e2a4:	ldrb	w10, [x9]
   2e2a8:	cbz	w10, 2e2c8 <rl_forced_update_display@@Base+0x3c>
   2e2ac:	add	x9, x9, #0x1
   2e2b0:	ldrb	w10, [x9]
   2e2b4:	sturb	wzr, [x9, #-1]
   2e2b8:	add	x9, x9, #0x1
   2e2bc:	cbnz	w10, 2e2b0 <rl_forced_update_display@@Base+0x24>
   2e2c0:	ldr	x9, [x8]
   2e2c4:	cbz	x9, 2e2cc <rl_forced_update_display@@Base+0x40>
   2e2c8:	strb	wzr, [x9]
   2e2cc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e2d0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e2d4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e2d8:	ldr	x9, [x9, #2408]
   2e2dc:	ldr	x10, [x10, #1952]
   2e2e0:	ldr	x12, [x12, #3600]
   2e2e4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e2e8:	str	wzr, [x9]
   2e2ec:	str	wzr, [x10]
   2e2f0:	str	wzr, [x11, #1128]
   2e2f4:	str	wzr, [x12]
   2e2f8:	ldr	x8, [x8, #8]
   2e2fc:	cbz	x8, 2e304 <rl_forced_update_display@@Base+0x78>
   2e300:	str	xzr, [x8]
   2e304:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e308:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e30c:	ldr	w10, [x9, #1088]
   2e310:	ldr	x11, [x11, #2664]
   2e314:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e318:	str	wzr, [x8, #1120]
   2e31c:	add	w8, w10, #0x1
   2e320:	ldr	x11, [x11]
   2e324:	str	w8, [x9, #1088]
   2e328:	blr	x11
   2e32c:	mov	w0, wzr
   2e330:	ldp	x29, x30, [sp], #16
   2e334:	ret

000000000002e338 <rl_redraw_prompt_last_line@@Base>:
   2e338:	stp	x29, x30, [sp, #-64]!
   2e33c:	str	x23, [sp, #16]
   2e340:	stp	x22, x21, [sp, #32]
   2e344:	stp	x20, x19, [sp, #48]
   2e348:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e34c:	ldr	x20, [x20, #2384]
   2e350:	mov	w1, #0xa                   	// #10
   2e354:	mov	x29, sp
   2e358:	ldr	x19, [x20]
   2e35c:	mov	x0, x19
   2e360:	bl	16ee0 <strrchr@plt>
   2e364:	cbz	x0, 2e500 <rl_redraw_prompt_last_line@@Base+0x1c8>
   2e368:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   2e36c:	ldr	x12, [x22, #1032]
   2e370:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e374:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2e378:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   2e37c:	str	x12, [x8, #1152]
   2e380:	ldr	w12, [x10, #1068]
   2e384:	ldr	x14, [x23, #1040]
   2e388:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   2e38c:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e390:	add	x3, x3, #0x420
   2e394:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e398:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2e39c:	str	w12, [x11, #1176]
   2e3a0:	ldr	w12, [x3]
   2e3a4:	str	x14, [x9, #1168]
   2e3a8:	ldr	w9, [x21, #1048]
   2e3ac:	adrp	x4, 58000 <_rl_vimvcxt@@Base>
   2e3b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e3b4:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2e3b8:	add	x4, x4, #0x41c
   2e3bc:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2e3c0:	add	x2, x2, #0x428
   2e3c4:	str	w12, [x8, #1184]
   2e3c8:	ldr	w12, [x4]
   2e3cc:	str	w9, [x13, #1180]
   2e3d0:	ldr	w9, [x2]
   2e3d4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e3d8:	adrp	x5, 58000 <_rl_vimvcxt@@Base>
   2e3dc:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e3e0:	add	x5, x5, #0x424
   2e3e4:	str	w12, [x8, #1192]
   2e3e8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e3ec:	str	w9, [x11, #1188]
   2e3f0:	ldr	x11, [x8, #1096]
   2e3f4:	str	wzr, [x10, #1068]
   2e3f8:	ldr	w10, [x5]
   2e3fc:	add	x0, x0, #0x1
   2e400:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e404:	str	xzr, [x8, #1096]
   2e408:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e40c:	mov	w1, #0x1                   	// #1
   2e410:	str	xzr, [x23, #1040]
   2e414:	str	xzr, [x22, #1032]
   2e418:	str	wzr, [x21, #1048]
   2e41c:	str	wzr, [x2]
   2e420:	str	wzr, [x3]
   2e424:	str	wzr, [x5]
   2e428:	str	wzr, [x4]
   2e42c:	str	w10, [x9, #1196]
   2e430:	str	x11, [x8, #1200]
   2e434:	str	x0, [x20]
   2e438:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2e43c:	str	x0, [x22, #1032]
   2e440:	str	xzr, [x23, #1040]
   2e444:	cbz	x0, 2e44c <rl_redraw_prompt_last_line@@Base+0x114>
   2e448:	bl	16440 <strlen@plt>
   2e44c:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2e450:	ldr	x8, [x8, #3336]
   2e454:	str	w0, [x21, #1048]
   2e458:	ldr	x9, [x8]
   2e45c:	cbz	x9, 2e488 <rl_redraw_prompt_last_line@@Base+0x150>
   2e460:	ldrb	w10, [x9]
   2e464:	cbz	w10, 2e484 <rl_redraw_prompt_last_line@@Base+0x14c>
   2e468:	add	x9, x9, #0x1
   2e46c:	ldrb	w10, [x9]
   2e470:	sturb	wzr, [x9, #-1]
   2e474:	add	x9, x9, #0x1
   2e478:	cbnz	w10, 2e46c <rl_redraw_prompt_last_line@@Base+0x134>
   2e47c:	ldr	x9, [x8]
   2e480:	cbz	x9, 2e488 <rl_redraw_prompt_last_line@@Base+0x150>
   2e484:	strb	wzr, [x9]
   2e488:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e48c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e490:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e494:	ldr	x9, [x9, #2408]
   2e498:	ldr	x10, [x10, #1952]
   2e49c:	ldr	x12, [x12, #3600]
   2e4a0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e4a4:	str	wzr, [x9]
   2e4a8:	str	wzr, [x10]
   2e4ac:	str	wzr, [x11, #1128]
   2e4b0:	str	wzr, [x12]
   2e4b4:	ldr	x8, [x8, #8]
   2e4b8:	cbz	x8, 2e4c0 <rl_redraw_prompt_last_line@@Base+0x188>
   2e4bc:	str	xzr, [x8]
   2e4c0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e4c4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e4c8:	ldr	w10, [x9, #1088]
   2e4cc:	ldr	x11, [x11, #2664]
   2e4d0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e4d4:	str	wzr, [x8, #1120]
   2e4d8:	add	w8, w10, #0x1
   2e4dc:	ldr	x11, [x11]
   2e4e0:	str	w8, [x9, #1088]
   2e4e4:	blr	x11
   2e4e8:	str	x19, [x20]
   2e4ec:	ldp	x20, x19, [sp, #48]
   2e4f0:	ldp	x22, x21, [sp, #32]
   2e4f4:	ldr	x23, [sp, #16]
   2e4f8:	ldp	x29, x30, [sp], #64
   2e4fc:	b	173f0 <rl_restore_prompt@plt>
   2e500:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2e504:	ldr	x8, [x8, #3336]
   2e508:	ldr	x9, [x8]
   2e50c:	cbz	x9, 2e538 <rl_redraw_prompt_last_line@@Base+0x200>
   2e510:	ldrb	w10, [x9]
   2e514:	cbz	w10, 2e534 <rl_redraw_prompt_last_line@@Base+0x1fc>
   2e518:	add	x9, x9, #0x1
   2e51c:	ldrb	w10, [x9]
   2e520:	sturb	wzr, [x9, #-1]
   2e524:	add	x9, x9, #0x1
   2e528:	cbnz	w10, 2e51c <rl_redraw_prompt_last_line@@Base+0x1e4>
   2e52c:	ldr	x9, [x8]
   2e530:	cbz	x9, 2e538 <rl_redraw_prompt_last_line@@Base+0x200>
   2e534:	strb	wzr, [x9]
   2e538:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e53c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e540:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e544:	ldr	x9, [x9, #2408]
   2e548:	ldr	x10, [x10, #1952]
   2e54c:	ldr	x12, [x12, #3600]
   2e550:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e554:	str	wzr, [x9]
   2e558:	str	wzr, [x10]
   2e55c:	str	wzr, [x11, #1128]
   2e560:	str	wzr, [x12]
   2e564:	ldr	x8, [x8, #8]
   2e568:	cbz	x8, 2e570 <rl_redraw_prompt_last_line@@Base+0x238>
   2e56c:	str	xzr, [x8]
   2e570:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e574:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e578:	ldr	w9, [x8, #1088]
   2e57c:	ldr	x10, [x10, #2664]
   2e580:	ldr	x23, [sp, #16]
   2e584:	add	w9, w9, #0x1
   2e588:	ldr	x0, [x10]
   2e58c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2e590:	str	wzr, [x10, #1120]
   2e594:	str	w9, [x8, #1088]
   2e598:	ldp	x20, x19, [sp, #48]
   2e59c:	ldp	x22, x21, [sp, #32]
   2e5a0:	ldp	x29, x30, [sp], #64
   2e5a4:	br	x0

000000000002e5a8 <rl_show_char@@Base>:
   2e5a8:	stp	x29, x30, [sp, #-48]!
   2e5ac:	stp	x22, x21, [sp, #16]
   2e5b0:	stp	x20, x19, [sp, #32]
   2e5b4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e5b8:	ldr	x21, [x21, #1928]
   2e5bc:	and	w8, w0, #0xffffff80
   2e5c0:	mov	w20, w0
   2e5c4:	mov	w19, #0x1                   	// #1
   2e5c8:	cmp	w8, #0x80
   2e5cc:	mov	x29, sp
   2e5d0:	b.ne	2e604 <rl_show_char@@Base+0x5c>  // b.any
   2e5d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e5d8:	ldr	x8, [x8, #2400]
   2e5dc:	ldr	w8, [x8]
   2e5e0:	cbnz	w8, 2e604 <rl_show_char@@Base+0x5c>
   2e5e4:	ldr	x3, [x21]
   2e5e8:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2e5ec:	add	x0, x0, #0x6e5
   2e5f0:	mov	w1, #0x2                   	// #2
   2e5f4:	mov	w2, #0x1                   	// #1
   2e5f8:	bl	173e0 <fwrite@plt>
   2e5fc:	and	w20, w20, #0xffffff7f
   2e600:	mov	w19, #0x3                   	// #3
   2e604:	cmp	w20, #0x1f
   2e608:	b.gt	2e620 <rl_show_char@@Base+0x78>
   2e60c:	cmp	w20, #0x9
   2e610:	b.eq	2e684 <rl_show_char@@Base+0xdc>  // b.none
   2e614:	tbnz	w20, #7, 2e684 <rl_show_char@@Base+0xdc>
   2e618:	mov	w22, #0x1                   	// #1
   2e61c:	b	2e630 <rl_show_char@@Base+0x88>
   2e620:	cmp	w20, #0x7f
   2e624:	b.ne	2e684 <rl_show_char@@Base+0xdc>  // b.any
   2e628:	tst	w20, #0x80
   2e62c:	cset	w22, eq  // eq = none
   2e630:	ldr	x3, [x21]
   2e634:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   2e638:	add	x0, x0, #0x711
   2e63c:	mov	w1, #0x2                   	// #2
   2e640:	mov	w2, #0x1                   	// #1
   2e644:	bl	173e0 <fwrite@plt>
   2e648:	cmp	w20, #0x1f
   2e64c:	add	w19, w19, #0x2
   2e650:	b.gt	2e680 <rl_show_char@@Base+0xd8>
   2e654:	cbz	w22, 2e680 <rl_show_char@@Base+0xd8>
   2e658:	bl	17100 <__ctype_b_loc@plt>
   2e65c:	ldr	x8, [x0]
   2e660:	orr	w20, w20, #0x40
   2e664:	and	w22, w20, #0xff
   2e668:	ldrh	w8, [x8, w22, uxtw #1]
   2e66c:	tbz	w8, #9, 2e684 <rl_show_char@@Base+0xdc>
   2e670:	bl	16dc0 <__ctype_toupper_loc@plt>
   2e674:	ldr	x8, [x0]
   2e678:	ldr	w20, [x8, x22, lsl #2]
   2e67c:	b	2e684 <rl_show_char@@Base+0xdc>
   2e680:	mov	w20, #0x3f                  	// #63
   2e684:	ldr	x1, [x21]
   2e688:	mov	w0, w20
   2e68c:	bl	16670 <putc@plt>
   2e690:	ldr	x0, [x21]
   2e694:	bl	17430 <fflush@plt>
   2e698:	mov	w0, w19
   2e69c:	ldp	x20, x19, [sp, #32]
   2e6a0:	ldp	x22, x21, [sp, #16]
   2e6a4:	ldp	x29, x30, [sp], #48
   2e6a8:	ret

000000000002e6ac <rl_character_len@@Base>:
   2e6ac:	stp	x29, x30, [sp, #-32]!
   2e6b0:	str	x19, [sp, #16]
   2e6b4:	and	w19, w0, #0xff
   2e6b8:	cmp	w19, #0x80
   2e6bc:	mov	x29, sp
   2e6c0:	b.cc	2e6e0 <rl_character_len@@Base+0x34>  // b.lo, b.ul, b.last
   2e6c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e6c8:	ldr	x8, [x8, #2400]
   2e6cc:	ldr	w8, [x8]
   2e6d0:	cmp	w8, #0x0
   2e6d4:	mov	w8, #0x4                   	// #4
   2e6d8:	csinc	w0, w8, wzr, eq  // eq = none
   2e6dc:	b	2e734 <rl_character_len@@Base+0x88>
   2e6e0:	cmp	w19, #0x9
   2e6e4:	b.ne	2e6f8 <rl_character_len@@Base+0x4c>  // b.any
   2e6e8:	orr	w8, w1, #0x7
   2e6ec:	sub	w8, w8, w1
   2e6f0:	add	w0, w8, #0x1
   2e6f4:	b	2e734 <rl_character_len@@Base+0x88>
   2e6f8:	cmp	w0, #0x20
   2e6fc:	cset	w8, lt  // lt = tstop
   2e700:	tst	w0, #0x80
   2e704:	cset	w9, eq  // eq = none
   2e708:	cmp	w0, #0x7f
   2e70c:	mov	w0, #0x2                   	// #2
   2e710:	b.eq	2e734 <rl_character_len@@Base+0x88>  // b.none
   2e714:	and	w8, w8, w9
   2e718:	tbnz	w8, #0, 2e734 <rl_character_len@@Base+0x88>
   2e71c:	bl	17100 <__ctype_b_loc@plt>
   2e720:	ldr	x8, [x0]
   2e724:	ldrh	w8, [x8, w19, uxtw #1]
   2e728:	tst	w8, #0x4000
   2e72c:	mov	w8, #0x1                   	// #1
   2e730:	cinc	w0, w8, eq  // eq = none
   2e734:	ldr	x19, [sp, #16]
   2e738:	ldp	x29, x30, [sp], #32
   2e73c:	ret

000000000002e740 <rl_message@@Base>:
   2e740:	sub	sp, sp, #0x140
   2e744:	stp	x20, x19, [sp, #304]
   2e748:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   2e74c:	mov	x19, x0
   2e750:	ldr	x0, [x20, #1136]
   2e754:	stp	x29, x30, [sp, #256]
   2e758:	add	x29, sp, #0x100
   2e75c:	mov	x8, #0xffffffffffffffc8    	// #-56
   2e760:	mov	x9, sp
   2e764:	movk	x8, #0xff80, lsl #32
   2e768:	sub	x10, x29, #0x78
   2e76c:	add	x9, x9, #0x80
   2e770:	stp	x22, x21, [sp, #288]
   2e774:	add	x10, x10, #0x38
   2e778:	stp	x9, x8, [x29, #-16]
   2e77c:	add	x8, x29, #0x40
   2e780:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2e784:	str	x28, [sp, #272]
   2e788:	stp	x1, x2, [x29, #-120]
   2e78c:	stp	x3, x4, [x29, #-104]
   2e790:	stp	x5, x6, [x29, #-88]
   2e794:	stur	x7, [x29, #-72]
   2e798:	stp	q0, q1, [sp]
   2e79c:	stp	q2, q3, [sp, #32]
   2e7a0:	stp	q4, q5, [sp, #64]
   2e7a4:	stp	q6, q7, [sp, #96]
   2e7a8:	stp	x8, x10, [x29, #-32]
   2e7ac:	cbnz	x0, 2e7c4 <rl_message@@Base+0x84>
   2e7b0:	mov	w8, #0x80                  	// #128
   2e7b4:	mov	w0, #0x80                  	// #128
   2e7b8:	str	w8, [x21, #1144]
   2e7bc:	bl	16bf0 <xmalloc@plt>
   2e7c0:	str	x0, [x20, #1136]
   2e7c4:	ldp	q0, q1, [x29, #-32]
   2e7c8:	ldrsw	x1, [x21, #1144]
   2e7cc:	sub	x3, x29, #0x40
   2e7d0:	mov	x2, x19
   2e7d4:	stp	q0, q1, [x29, #-64]
   2e7d8:	bl	17690 <vsnprintf@plt>
   2e7dc:	ldr	w8, [x21, #1144]
   2e7e0:	sub	w8, w8, #0x1
   2e7e4:	cmp	w0, w8
   2e7e8:	b.lt	2e848 <rl_message@@Base+0x108>  // b.tstop
   2e7ec:	ldr	x8, [x20, #1136]
   2e7f0:	add	w9, w0, #0x1
   2e7f4:	sxtw	x1, w9
   2e7f8:	str	w9, [x21, #1144]
   2e7fc:	mov	x0, x8
   2e800:	bl	16a50 <xrealloc@plt>
   2e804:	sub	x9, x29, #0x78
   2e808:	add	x8, x29, #0x40
   2e80c:	add	x9, x9, #0x38
   2e810:	mov	x10, sp
   2e814:	stp	x8, x9, [x29, #-32]
   2e818:	mov	x8, #0xffffffffffffffc8    	// #-56
   2e81c:	movk	x8, #0xff80, lsl #32
   2e820:	add	x10, x10, #0x80
   2e824:	ldrsw	x9, [x21, #1144]
   2e828:	stp	x10, x8, [x29, #-16]
   2e82c:	ldp	q0, q1, [x29, #-32]
   2e830:	sub	x3, x29, #0x40
   2e834:	sub	x1, x9, #0x1
   2e838:	mov	x2, x19
   2e83c:	str	x0, [x20, #1136]
   2e840:	stp	q0, q1, [x29, #-64]
   2e844:	bl	17690 <vsnprintf@plt>
   2e848:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e84c:	ldr	x9, [x8, #1152]
   2e850:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   2e854:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2e858:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2e85c:	cbz	x9, 2e888 <rl_message@@Base+0x148>
   2e860:	ldr	x0, [x22, #1032]
   2e864:	cmp	x0, x9
   2e868:	b.eq	2e938 <rl_message@@Base+0x1f8>  // b.none
   2e86c:	cbz	x0, 2e874 <rl_message@@Base+0x134>
   2e870:	bl	171b0 <free@plt>
   2e874:	ldr	x0, [x21, #1040]
   2e878:	cbz	x0, 2e880 <rl_message@@Base+0x140>
   2e87c:	bl	171b0 <free@plt>
   2e880:	str	xzr, [x22, #1032]
   2e884:	b	2e938 <rl_message@@Base+0x1f8>
   2e888:	ldr	x10, [x21, #1040]
   2e88c:	ldr	x9, [x22, #1032]
   2e890:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e894:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2e898:	ldr	w14, [x19, #1048]
   2e89c:	str	x10, [x11, #1168]
   2e8a0:	ldr	w11, [x12, #1068]
   2e8a4:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2e8a8:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2e8ac:	str	x9, [x8, #1152]
   2e8b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e8b4:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2e8b8:	str	w14, [x15, #1180]
   2e8bc:	ldr	w15, [x8, #1056]
   2e8c0:	str	w11, [x13, #1176]
   2e8c4:	ldr	w13, [x10, #1064]
   2e8c8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e8cc:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   2e8d0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e8d4:	str	w15, [x9, #1184]
   2e8d8:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2e8dc:	str	w13, [x14, #1188]
   2e8e0:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2e8e4:	ldr	x14, [x13, #1096]
   2e8e8:	str	wzr, [x10, #1064]
   2e8ec:	ldr	w10, [x11, #1052]
   2e8f0:	str	wzr, [x8, #1056]
   2e8f4:	ldr	w8, [x15, #1060]
   2e8f8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e8fc:	str	xzr, [x13, #1096]
   2e900:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2e904:	str	wzr, [x12, #1068]
   2e908:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2e90c:	str	wzr, [x15, #1060]
   2e910:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2e914:	str	wzr, [x11, #1052]
   2e918:	mov	w11, #0x1                   	// #1
   2e91c:	str	xzr, [x21, #1040]
   2e920:	str	xzr, [x22, #1032]
   2e924:	str	wzr, [x19, #1048]
   2e928:	str	w10, [x9, #1192]
   2e92c:	str	w8, [x13, #1196]
   2e930:	str	x14, [x12, #1200]
   2e934:	strb	w11, [x15, #1160]
   2e938:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e93c:	ldr	x0, [x20, #1136]
   2e940:	ldr	x8, [x8, #2384]
   2e944:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2e948:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   2e94c:	adrp	x4, 58000 <_rl_vimvcxt@@Base>
   2e950:	adrp	x5, 58000 <_rl_vimvcxt@@Base>
   2e954:	add	x2, x2, #0x428
   2e958:	add	x3, x3, #0x420
   2e95c:	add	x4, x4, #0x41c
   2e960:	add	x5, x5, #0x424
   2e964:	mov	w1, wzr
   2e968:	str	x0, [x8]
   2e96c:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2e970:	str	x0, [x22, #1032]
   2e974:	str	xzr, [x21, #1040]
   2e978:	cbz	x0, 2e980 <rl_message@@Base+0x240>
   2e97c:	bl	16440 <strlen@plt>
   2e980:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2e984:	ldr	x8, [x8, #2664]
   2e988:	str	w0, [x19, #1048]
   2e98c:	ldr	x8, [x8]
   2e990:	blr	x8
   2e994:	ldp	x20, x19, [sp, #304]
   2e998:	ldp	x22, x21, [sp, #288]
   2e99c:	ldr	x28, [sp, #272]
   2e9a0:	ldp	x29, x30, [sp, #256]
   2e9a4:	mov	w0, wzr
   2e9a8:	add	sp, sp, #0x140
   2e9ac:	ret

000000000002e9b0 <rl_save_prompt@@Base>:
   2e9b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2e9b4:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2e9b8:	ldr	x15, [x8, #1032]
   2e9bc:	ldr	x18, [x10, #1040]
   2e9c0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2e9c4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e9c8:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2e9cc:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   2e9d0:	str	x15, [x9, #1152]
   2e9d4:	ldr	w15, [x12, #1068]
   2e9d8:	str	x18, [x11, #1168]
   2e9dc:	ldr	w18, [x14, #1048]
   2e9e0:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2e9e4:	adrp	x16, 58000 <_rl_vimvcxt@@Base>
   2e9e8:	adrp	x17, 58000 <_rl_vimvcxt@@Base>
   2e9ec:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2e9f0:	str	w15, [x13, #1176]
   2e9f4:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2e9f8:	str	w18, [x16, #1180]
   2e9fc:	adrp	x18, 58000 <_rl_vimvcxt@@Base>
   2ea00:	str	xzr, [x8, #1032]
   2ea04:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ea08:	str	wzr, [x14, #1048]
   2ea0c:	ldr	x14, [x8, #1096]
   2ea10:	str	xzr, [x8, #1096]
   2ea14:	ldr	w8, [x17, #1056]
   2ea18:	str	wzr, [x12, #1068]
   2ea1c:	ldr	w12, [x11, #1064]
   2ea20:	str	wzr, [x11, #1064]
   2ea24:	ldr	w11, [x15, #1052]
   2ea28:	str	wzr, [x17, #1056]
   2ea2c:	ldr	w17, [x18, #1060]
   2ea30:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ea34:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2ea38:	adrp	x16, 58000 <_rl_vimvcxt@@Base>
   2ea3c:	str	xzr, [x10, #1040]
   2ea40:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ea44:	str	wzr, [x18, #1060]
   2ea48:	adrp	x18, 58000 <_rl_vimvcxt@@Base>
   2ea4c:	str	w8, [x9, #1184]
   2ea50:	str	w12, [x13, #1188]
   2ea54:	str	w11, [x16, #1192]
   2ea58:	str	w17, [x10, #1196]
   2ea5c:	str	x14, [x18, #1200]
   2ea60:	str	wzr, [x15, #1052]
   2ea64:	ret

000000000002ea68 <rl_clear_message@@Base>:
   2ea68:	stp	x29, x30, [sp, #-32]!
   2ea6c:	str	x19, [sp, #16]
   2ea70:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ea74:	ldr	x8, [x8, #2016]
   2ea78:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2ea7c:	ldrb	w9, [x19, #1160]
   2ea80:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ea84:	ldr	x8, [x8]
   2ea88:	ldr	x10, [x10, #2384]
   2ea8c:	cmp	w9, #0x1
   2ea90:	mov	x29, sp
   2ea94:	str	x8, [x10]
   2ea98:	b.ne	2eaa4 <rl_clear_message@@Base+0x3c>  // b.any
   2ea9c:	bl	173f0 <rl_restore_prompt@plt>
   2eaa0:	strb	wzr, [x19, #1160]
   2eaa4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2eaa8:	ldr	x8, [x8, #2664]
   2eaac:	ldr	x8, [x8]
   2eab0:	blr	x8
   2eab4:	ldr	x19, [sp, #16]
   2eab8:	mov	w0, wzr
   2eabc:	ldp	x29, x30, [sp], #32
   2eac0:	ret

000000000002eac4 <rl_restore_prompt@@Base>:
   2eac4:	stp	x29, x30, [sp, #-48]!
   2eac8:	stp	x20, x19, [sp, #32]
   2eacc:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2ead0:	ldr	x0, [x19, #1032]
   2ead4:	str	x21, [sp, #16]
   2ead8:	mov	x29, sp
   2eadc:	cbz	x0, 2eae4 <rl_restore_prompt@@Base+0x20>
   2eae0:	bl	171b0 <free@plt>
   2eae4:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   2eae8:	ldr	x0, [x20, #1040]
   2eaec:	cbz	x0, 2eaf4 <rl_restore_prompt@@Base+0x30>
   2eaf0:	bl	171b0 <free@plt>
   2eaf4:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2eaf8:	ldr	x0, [x21, #1096]
   2eafc:	cbz	x0, 2eb04 <rl_restore_prompt@@Base+0x40>
   2eb00:	bl	171b0 <free@plt>
   2eb04:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2eb08:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2eb0c:	ldr	x15, [x9, #1168]
   2eb10:	ldr	w16, [x10, #1180]
   2eb14:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2eb18:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2eb1c:	ldr	x12, [x8, #1152]
   2eb20:	ldr	x17, [x13, #1200]
   2eb24:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2eb28:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   2eb2c:	str	x15, [x20, #1040]
   2eb30:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2eb34:	str	w16, [x11, #1048]
   2eb38:	adrp	x16, 58000 <_rl_vimvcxt@@Base>
   2eb3c:	adrp	x18, 58000 <_rl_vimvcxt@@Base>
   2eb40:	str	xzr, [x8, #1152]
   2eb44:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2eb48:	str	wzr, [x10, #1180]
   2eb4c:	ldr	w10, [x14, #1176]
   2eb50:	str	wzr, [x14, #1176]
   2eb54:	ldr	w14, [x16, #1188]
   2eb58:	str	wzr, [x16, #1188]
   2eb5c:	ldr	w16, [x15, #1184]
   2eb60:	str	wzr, [x15, #1184]
   2eb64:	ldr	w15, [x8, #1196]
   2eb68:	str	wzr, [x8, #1196]
   2eb6c:	ldr	w8, [x18, #1192]
   2eb70:	str	x12, [x19, #1032]
   2eb74:	str	x17, [x21, #1096]
   2eb78:	ldp	x20, x19, [sp, #32]
   2eb7c:	ldr	x21, [sp, #16]
   2eb80:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2eb84:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2eb88:	adrp	x17, 58000 <_rl_vimvcxt@@Base>
   2eb8c:	str	xzr, [x9, #1168]
   2eb90:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2eb94:	str	wzr, [x18, #1192]
   2eb98:	adrp	x18, 58000 <_rl_vimvcxt@@Base>
   2eb9c:	str	w10, [x12, #1068]
   2eba0:	str	w16, [x11, #1056]
   2eba4:	str	w14, [x17, #1064]
   2eba8:	str	w8, [x9, #1052]
   2ebac:	str	w15, [x18, #1060]
   2ebb0:	str	xzr, [x13, #1200]
   2ebb4:	ldp	x29, x30, [sp], #48
   2ebb8:	ret

000000000002ebbc <rl_reset_line_state@@Base>:
   2ebbc:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2ebc0:	ldr	x8, [x8, #3336]
   2ebc4:	ldr	x9, [x8]
   2ebc8:	cbz	x9, 2ebd0 <rl_reset_line_state@@Base+0x14>
   2ebcc:	strb	wzr, [x9]
   2ebd0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ebd4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ebd8:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ebdc:	ldr	x9, [x9, #2408]
   2ebe0:	ldr	x10, [x10, #1952]
   2ebe4:	ldr	x12, [x12, #3600]
   2ebe8:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2ebec:	str	wzr, [x9]
   2ebf0:	str	wzr, [x10]
   2ebf4:	str	wzr, [x11, #1128]
   2ebf8:	str	wzr, [x12]
   2ebfc:	ldr	x8, [x8, #8]
   2ec00:	cbz	x8, 2ec08 <rl_reset_line_state@@Base+0x4c>
   2ec04:	str	xzr, [x8]
   2ec08:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ec0c:	ldr	x9, [x9, #2016]
   2ec10:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ec14:	ldr	x11, [x11, #2384]
   2ec18:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   2ec1c:	ldr	x9, [x9]
   2ec20:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ec24:	add	x10, x10, #0xec9
   2ec28:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2ec2c:	cmp	x9, #0x0
   2ec30:	mov	w13, #0x1                   	// #1
   2ec34:	str	wzr, [x8, #1120]
   2ec38:	csel	x8, x10, x9, eq  // eq = none
   2ec3c:	mov	w0, wzr
   2ec40:	str	x8, [x11]
   2ec44:	str	w13, [x12, #1088]
   2ec48:	ret

000000000002ec4c <_rl_make_prompt_for_search@@Base>:
   2ec4c:	stp	x29, x30, [sp, #-64]!
   2ec50:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ec54:	ldr	x16, [x8, #1032]
   2ec58:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ec5c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ec60:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2ec64:	stp	x20, x19, [sp, #48]
   2ec68:	mov	w19, w0
   2ec6c:	ldr	x0, [x10, #1040]
   2ec70:	str	x16, [x9, #1152]
   2ec74:	ldr	w16, [x12, #1068]
   2ec78:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2ec7c:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2ec80:	adrp	x14, 58000 <_rl_vimvcxt@@Base>
   2ec84:	adrp	x17, 58000 <_rl_vimvcxt@@Base>
   2ec88:	str	x0, [x11, #1168]
   2ec8c:	ldr	w0, [x14, #1048]
   2ec90:	str	w16, [x13, #1176]
   2ec94:	ldr	w16, [x17, #1056]
   2ec98:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2ec9c:	adrp	x18, 58000 <_rl_vimvcxt@@Base>
   2eca0:	stp	x24, x23, [sp, #16]
   2eca4:	stp	x22, x21, [sp, #32]
   2eca8:	str	w0, [x15, #1180]
   2ecac:	str	w16, [x18, #1184]
   2ecb0:	str	xzr, [x10, #1040]
   2ecb4:	str	xzr, [x8, #1032]
   2ecb8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ecbc:	ldr	x21, [x21, #2016]
   2ecc0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2ecc4:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2ecc8:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   2eccc:	adrp	x16, 58000 <_rl_vimvcxt@@Base>
   2ecd0:	str	wzr, [x14, #1048]
   2ecd4:	ldr	x8, [x16, #1096]
   2ecd8:	ldr	w14, [x9, #1064]
   2ecdc:	str	wzr, [x12, #1068]
   2ece0:	ldr	w12, [x13, #1052]
   2ece4:	str	wzr, [x9, #1064]
   2ece8:	ldr	w9, [x22, #1060]
   2ecec:	ldr	x20, [x21]
   2ecf0:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2ecf4:	adrp	x15, 58000 <_rl_vimvcxt@@Base>
   2ecf8:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   2ecfc:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2ed00:	mov	x29, sp
   2ed04:	str	xzr, [x16, #1096]
   2ed08:	str	wzr, [x17, #1056]
   2ed0c:	str	wzr, [x22, #1060]
   2ed10:	str	w14, [x11, #1188]
   2ed14:	str	w12, [x15, #1192]
   2ed18:	str	w9, [x23, #1196]
   2ed1c:	str	x8, [x10, #1200]
   2ed20:	str	wzr, [x13, #1052]
   2ed24:	cbz	x20, 2ed9c <_rl_make_prompt_for_search@@Base+0x150>
   2ed28:	mov	w1, #0xa                   	// #10
   2ed2c:	mov	x0, x20
   2ed30:	bl	16ee0 <strrchr@plt>
   2ed34:	cbz	x0, 2ed80 <_rl_make_prompt_for_search@@Base+0x134>
   2ed38:	add	x20, x0, #0x1
   2ed3c:	mov	x0, x20
   2ed40:	bl	16440 <strlen@plt>
   2ed44:	lsl	x24, x0, #32
   2ed48:	mov	x8, #0x200000000           	// #8589934592
   2ed4c:	add	x8, x24, x8
   2ed50:	mov	x21, x0
   2ed54:	asr	x0, x8, #32
   2ed58:	bl	16bf0 <xmalloc@plt>
   2ed5c:	cbz	w21, 2ed68 <_rl_make_prompt_for_search@@Base+0x11c>
   2ed60:	mov	x1, x20
   2ed64:	bl	17480 <strcpy@plt>
   2ed68:	asr	x8, x24, #32
   2ed6c:	mov	x9, #0x100000000           	// #4294967296
   2ed70:	strb	w19, [x0, x8]
   2ed74:	add	x8, x24, x9
   2ed78:	add	x8, x0, x8, asr #32
   2ed7c:	b	2edbc <_rl_make_prompt_for_search@@Base+0x170>
   2ed80:	ldrb	w8, [x20]
   2ed84:	cbz	w8, 2ed98 <_rl_make_prompt_for_search@@Base+0x14c>
   2ed88:	mov	x0, x20
   2ed8c:	bl	16440 <strlen@plt>
   2ed90:	mov	x20, x0
   2ed94:	b	2ed9c <_rl_make_prompt_for_search@@Base+0x150>
   2ed98:	mov	w20, wzr
   2ed9c:	add	w8, w20, #0x2
   2eda0:	sxtw	x0, w8
   2eda4:	bl	16bf0 <xmalloc@plt>
   2eda8:	cbz	w20, 2edb4 <_rl_make_prompt_for_search@@Base+0x168>
   2edac:	ldr	x1, [x21]
   2edb0:	bl	17480 <strcpy@plt>
   2edb4:	add	x8, x0, w20, sxtw
   2edb8:	strb	w19, [x8], #1
   2edbc:	strb	wzr, [x8]
   2edc0:	ldr	w8, [x23, #1196]
   2edc4:	ldp	x20, x19, [sp, #48]
   2edc8:	ldp	x24, x23, [sp, #16]
   2edcc:	add	w8, w8, #0x1
   2edd0:	str	w8, [x22, #1060]
   2edd4:	ldp	x22, x21, [sp, #32]
   2edd8:	ldp	x29, x30, [sp], #64
   2eddc:	ret

000000000002ede0 <_rl_erase_at_end_of_line@@Base>:
   2ede0:	stp	x29, x30, [sp, #-48]!
   2ede4:	str	x21, [sp, #16]
   2ede8:	stp	x20, x19, [sp, #32]
   2edec:	mov	x29, sp
   2edf0:	mov	w19, w0
   2edf4:	bl	164e0 <_rl_backspace@plt>
   2edf8:	cmp	w19, #0x1
   2edfc:	b.lt	2ee60 <_rl_erase_at_end_of_line@@Base+0x80>  // b.tstop
   2ee00:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ee04:	ldr	x20, [x20, #1928]
   2ee08:	mov	w21, w19
   2ee0c:	ldr	x1, [x20]
   2ee10:	mov	w0, #0x20                  	// #32
   2ee14:	bl	16670 <putc@plt>
   2ee18:	subs	w21, w21, #0x1
   2ee1c:	b.ne	2ee0c <_rl_erase_at_end_of_line@@Base+0x2c>  // b.any
   2ee20:	mov	w0, w19
   2ee24:	bl	164e0 <_rl_backspace@plt>
   2ee28:	cmp	w19, #0x1
   2ee2c:	b.lt	2ee68 <_rl_erase_at_end_of_line@@Base+0x88>  // b.tstop
   2ee30:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2ee34:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ee38:	ldr	x8, [x8, #3336]
   2ee3c:	ldr	x9, [x9, #1952]
   2ee40:	ldrsw	x10, [x9]
   2ee44:	ldr	x11, [x8]
   2ee48:	subs	w19, w19, #0x1
   2ee4c:	sub	x10, x10, #0x1
   2ee50:	str	w10, [x9]
   2ee54:	strb	wzr, [x11, x10]
   2ee58:	b.ne	2ee40 <_rl_erase_at_end_of_line@@Base+0x60>  // b.any
   2ee5c:	b	2ee68 <_rl_erase_at_end_of_line@@Base+0x88>
   2ee60:	mov	w0, w19
   2ee64:	bl	164e0 <_rl_backspace@plt>
   2ee68:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ee6c:	ldr	x8, [x8, #3064]
   2ee70:	ldp	x20, x19, [sp, #32]
   2ee74:	ldr	x21, [sp, #16]
   2ee78:	ldr	w9, [x8]
   2ee7c:	add	w9, w9, #0x1
   2ee80:	str	w9, [x8]
   2ee84:	ldp	x29, x30, [sp], #48
   2ee88:	ret

000000000002ee8c <_rl_clear_screen@@Base>:
   2ee8c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ee90:	ldr	x8, [x8, #3656]
   2ee94:	ldr	x0, [x8]
   2ee98:	cbz	x0, 2eeac <_rl_clear_screen@@Base+0x20>
   2ee9c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2eea0:	ldr	x2, [x2, #2496]
   2eea4:	mov	w1, #0x1                   	// #1
   2eea8:	b	16590 <tputs@plt>
   2eeac:	b	171e0 <rl_crlf@plt>

000000000002eeb0 <_rl_update_final@@Base>:
   2eeb0:	stp	x29, x30, [sp, #-96]!
   2eeb4:	stp	x28, x27, [sp, #16]
   2eeb8:	stp	x26, x25, [sp, #32]
   2eebc:	stp	x24, x23, [sp, #48]
   2eec0:	stp	x22, x21, [sp, #64]
   2eec4:	stp	x20, x19, [sp, #80]
   2eec8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2eecc:	ldr	x21, [x21, #3600]
   2eed0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2eed4:	mov	w25, wzr
   2eed8:	adrp	x24, 57000 <rl_insert@@Base+0x20abc>
   2eedc:	ldr	w23, [x21]
   2eee0:	ldr	x20, [x20, #1952]
   2eee4:	mov	x29, sp
   2eee8:	cbz	w23, 2ef20 <_rl_update_final@@Base+0x70>
   2eeec:	ldr	w8, [x20]
   2eef0:	cbnz	w8, 2ef20 <_rl_update_final@@Base+0x70>
   2eef4:	ldr	x8, [x24, #3336]
   2eef8:	sxtw	x10, w23
   2eefc:	ldp	x8, x9, [x8]
   2ef00:	ldrsw	x9, [x9, x10, lsl #2]
   2ef04:	ldrb	w8, [x8, x9]
   2ef08:	cbz	w8, 2ef14 <_rl_update_final@@Base+0x64>
   2ef0c:	mov	w25, wzr
   2ef10:	b	2ef20 <_rl_update_final@@Base+0x70>
   2ef14:	sub	w23, w23, #0x1
   2ef18:	mov	w25, #0x1                   	// #1
   2ef1c:	str	w23, [x21]
   2ef20:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ef24:	ldr	x26, [x26, #2408]
   2ef28:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ef2c:	ldr	w8, [x26]
   2ef30:	ldr	x22, [x22, #1928]
   2ef34:	subs	w19, w23, w8
   2ef38:	b.eq	2ef9c <_rl_update_final@@Base+0xec>  // b.none
   2ef3c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ef40:	ldr	x8, [x8, #3520]
   2ef44:	ldr	w8, [x8]
   2ef48:	cmp	w8, w23
   2ef4c:	b.lt	2ef9c <_rl_update_final@@Base+0xec>  // b.tstop
   2ef50:	cmp	w19, #0x1
   2ef54:	b.lt	2f09c <_rl_update_final@@Base+0x1ec>  // b.tstop
   2ef58:	ldr	x1, [x22]
   2ef5c:	mov	w0, #0xa                   	// #10
   2ef60:	bl	16670 <putc@plt>
   2ef64:	subs	w19, w19, #0x1
   2ef68:	b.ne	2ef58 <_rl_update_final@@Base+0xa8>  // b.any
   2ef6c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ef70:	ldr	x8, [x8, #3264]
   2ef74:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2ef78:	mov	w1, #0x1                   	// #1
   2ef7c:	ldr	x0, [x8]
   2ef80:	ldr	x2, [x2, #2496]
   2ef84:	bl	16590 <tputs@plt>
   2ef88:	mov	x27, x20
   2ef8c:	str	wzr, [x20]
   2ef90:	str	w23, [x26]
   2ef94:	ldr	w23, [x21]
   2ef98:	mov	x20, x27
   2ef9c:	ldr	x11, [x24, #3336]
   2efa0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2efa4:	ldr	w9, [x9, #1092]
   2efa8:	cmp	w23, #0x0
   2efac:	ldr	x8, [x11, #8]
   2efb0:	csel	w9, w9, wzr, eq  // eq = none
   2efb4:	add	x8, x8, w23, sxtw #2
   2efb8:	ldp	w8, w10, [x8]
   2efbc:	sxtw	x8, w8
   2efc0:	sub	w10, w10, w8
   2efc4:	sub	w23, w10, w9
   2efc8:	cbz	w25, 2f048 <_rl_update_final@@Base+0x198>
   2efcc:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2efd0:	ldr	x12, [x12, #2240]
   2efd4:	ldr	w12, [x12]
   2efd8:	cbz	w12, 2f048 <_rl_update_final@@Base+0x198>
   2efdc:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2efe0:	ldr	x24, [x24, #3552]
   2efe4:	ldr	w12, [x24]
   2efe8:	cmp	w23, w12
   2efec:	b.ne	2f048 <_rl_update_final@@Base+0x198>  // b.any
   2eff0:	ldr	x11, [x11]
   2eff4:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   2eff8:	mov	w13, #0xffffffff            	// #-1
   2effc:	sub	w0, w10, #0x1
   2f000:	add	x19, x11, x8
   2f004:	mov	x1, x19
   2f008:	sub	w25, w9, #0x1
   2f00c:	str	w13, [x12, #1076]
   2f010:	bl	16500 <_rl_move_cursor_relative@plt>
   2f014:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f018:	ldr	x8, [x8, #3704]
   2f01c:	ldr	x0, [x8]
   2f020:	cbz	x0, 2f034 <_rl_update_final@@Base+0x184>
   2f024:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f028:	ldr	x2, [x2, #2496]
   2f02c:	mov	w1, #0x1                   	// #1
   2f030:	bl	16590 <tputs@plt>
   2f034:	ldr	w8, [x24]
   2f038:	ldr	x1, [x22]
   2f03c:	add	w8, w25, w8
   2f040:	ldrb	w0, [x19, w8, sxtw]
   2f044:	bl	16670 <putc@plt>
   2f048:	cmp	w23, #0x0
   2f04c:	str	wzr, [x21]
   2f050:	b.gt	2f060 <_rl_update_final@@Base+0x1b0>
   2f054:	ldr	w8, [x20]
   2f058:	cmp	w8, #0x1
   2f05c:	b.lt	2f064 <_rl_update_final@@Base+0x1b4>  // b.tstop
   2f060:	bl	171e0 <rl_crlf@plt>
   2f064:	ldr	x0, [x22]
   2f068:	bl	17430 <fflush@plt>
   2f06c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f070:	ldr	x8, [x8, #3064]
   2f074:	ldp	x20, x19, [sp, #80]
   2f078:	ldp	x22, x21, [sp, #64]
   2f07c:	ldp	x24, x23, [sp, #48]
   2f080:	ldr	w9, [x8]
   2f084:	ldp	x26, x25, [sp, #32]
   2f088:	ldp	x28, x27, [sp, #16]
   2f08c:	add	w9, w9, #0x1
   2f090:	str	w9, [x8]
   2f094:	ldp	x29, x30, [sp], #96
   2f098:	ret
   2f09c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f0a0:	ldr	x8, [x8, #3912]
   2f0a4:	mov	x27, x20
   2f0a8:	ldr	x0, [x8]
   2f0ac:	cbz	x0, 2ef90 <_rl_update_final@@Base+0xe0>
   2f0b0:	ldrb	w8, [x0]
   2f0b4:	cbz	w8, 2ef90 <_rl_update_final@@Base+0xe0>
   2f0b8:	tbz	w19, #31, 2ef90 <_rl_update_final@@Base+0xe0>
   2f0bc:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f0c0:	ldr	x2, [x2, #2496]
   2f0c4:	mov	w1, #0x1                   	// #1
   2f0c8:	bl	16590 <tputs@plt>
   2f0cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f0d0:	ldr	x8, [x8, #3912]
   2f0d4:	cmn	w19, #0x1
   2f0d8:	b.eq	2ef90 <_rl_update_final@@Base+0xe0>  // b.none
   2f0dc:	neg	w28, w19
   2f0e0:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f0e4:	ldr	x19, [x19, #2496]
   2f0e8:	mov	w20, #0x1                   	// #1
   2f0ec:	ldr	x0, [x8]
   2f0f0:	mov	w1, #0x1                   	// #1
   2f0f4:	mov	x2, x19
   2f0f8:	bl	16590 <tputs@plt>
   2f0fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f100:	ldr	x8, [x8, #3912]
   2f104:	add	w20, w20, #0x1
   2f108:	cmp	w20, w28
   2f10c:	b.lt	2f0ec <_rl_update_final@@Base+0x23c>  // b.tstop
   2f110:	b	2ef90 <_rl_update_final@@Base+0xe0>

000000000002f114 <_rl_redisplay_after_sigwinch@@Base>:
   2f114:	stp	x29, x30, [sp, #-96]!
   2f118:	stp	x28, x27, [sp, #16]
   2f11c:	stp	x26, x25, [sp, #32]
   2f120:	stp	x24, x23, [sp, #48]
   2f124:	stp	x22, x21, [sp, #64]
   2f128:	stp	x20, x19, [sp, #80]
   2f12c:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f130:	ldr	x24, [x24, #3264]
   2f134:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f138:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f13c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f140:	ldr	x0, [x24]
   2f144:	ldr	x22, [x22, #2408]
   2f148:	ldr	x21, [x21, #1952]
   2f14c:	ldr	x20, [x20, #3600]
   2f150:	mov	x29, sp
   2f154:	cbz	x0, 2f220 <_rl_redisplay_after_sigwinch@@Base+0x10c>
   2f158:	ldr	w25, [x20]
   2f15c:	ldr	w8, [x22]
   2f160:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f164:	ldr	x23, [x23, #3520]
   2f168:	subs	w19, w25, w8
   2f16c:	b.eq	2f1c0 <_rl_redisplay_after_sigwinch@@Base+0xac>  // b.none
   2f170:	ldr	w8, [x23]
   2f174:	cmp	w8, w25
   2f178:	b.lt	2f1c0 <_rl_redisplay_after_sigwinch@@Base+0xac>  // b.tstop
   2f17c:	cmp	w19, #0x1
   2f180:	b.lt	2f228 <_rl_redisplay_after_sigwinch@@Base+0x114>  // b.tstop
   2f184:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f188:	ldr	x26, [x26, #1928]
   2f18c:	ldr	x1, [x26]
   2f190:	mov	w0, #0xa                   	// #10
   2f194:	bl	16670 <putc@plt>
   2f198:	subs	w19, w19, #0x1
   2f19c:	b.ne	2f18c <_rl_redisplay_after_sigwinch@@Base+0x78>  // b.any
   2f1a0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f1a4:	ldr	x0, [x24]
   2f1a8:	ldr	x2, [x2, #2496]
   2f1ac:	mov	w1, #0x1                   	// #1
   2f1b0:	bl	16590 <tputs@plt>
   2f1b4:	str	wzr, [x21]
   2f1b8:	ldr	x0, [x24]
   2f1bc:	str	w25, [x22]
   2f1c0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f1c4:	ldr	x2, [x2, #2496]
   2f1c8:	mov	w1, #0x1                   	// #1
   2f1cc:	bl	16590 <tputs@plt>
   2f1d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f1d4:	ldr	x8, [x8, #3704]
   2f1d8:	str	wzr, [x21]
   2f1dc:	ldr	x0, [x8]
   2f1e0:	cbnz	x0, 2f29c <_rl_redisplay_after_sigwinch@@Base+0x188>
   2f1e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f1e8:	ldr	x8, [x8, #3552]
   2f1ec:	ldr	w19, [x8]
   2f1f0:	cmp	w19, #0x1
   2f1f4:	b.lt	2f28c <_rl_redisplay_after_sigwinch@@Base+0x178>  // b.tstop
   2f1f8:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f1fc:	ldr	x25, [x25, #1928]
   2f200:	mov	w26, w19
   2f204:	ldr	x1, [x25]
   2f208:	mov	w0, #0x20                  	// #32
   2f20c:	bl	16670 <putc@plt>
   2f210:	subs	w26, w26, #0x1
   2f214:	b.ne	2f204 <_rl_redisplay_after_sigwinch@@Base+0xf0>  // b.any
   2f218:	ldr	w8, [x21]
   2f21c:	b	2f290 <_rl_redisplay_after_sigwinch@@Base+0x17c>
   2f220:	bl	171e0 <rl_crlf@plt>
   2f224:	b	2f314 <_rl_redisplay_after_sigwinch@@Base+0x200>
   2f228:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f22c:	ldr	x26, [x26, #3912]
   2f230:	ldr	x0, [x26]
   2f234:	cbz	x0, 2f1b8 <_rl_redisplay_after_sigwinch@@Base+0xa4>
   2f238:	ldrb	w8, [x0]
   2f23c:	cbz	w8, 2f1b8 <_rl_redisplay_after_sigwinch@@Base+0xa4>
   2f240:	tbz	w19, #31, 2f1b8 <_rl_redisplay_after_sigwinch@@Base+0xa4>
   2f244:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f248:	ldr	x2, [x2, #2496]
   2f24c:	mov	w1, #0x1                   	// #1
   2f250:	bl	16590 <tputs@plt>
   2f254:	cmn	w19, #0x1
   2f258:	b.eq	2f1b8 <_rl_redisplay_after_sigwinch@@Base+0xa4>  // b.none
   2f25c:	neg	w27, w19
   2f260:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f264:	ldr	x19, [x19, #2496]
   2f268:	mov	w28, #0x1                   	// #1
   2f26c:	ldr	x0, [x26]
   2f270:	mov	w1, #0x1                   	// #1
   2f274:	mov	x2, x19
   2f278:	bl	16590 <tputs@plt>
   2f27c:	add	w28, w28, #0x1
   2f280:	cmp	w28, w27
   2f284:	b.lt	2f26c <_rl_redisplay_after_sigwinch@@Base+0x158>  // b.tstop
   2f288:	b	2f1b8 <_rl_redisplay_after_sigwinch@@Base+0xa4>
   2f28c:	mov	w8, wzr
   2f290:	ldr	x0, [x24]
   2f294:	add	w8, w8, w19
   2f298:	str	w8, [x21]
   2f29c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f2a0:	ldr	x2, [x2, #2496]
   2f2a4:	mov	w1, #0x1                   	// #1
   2f2a8:	bl	16590 <tputs@plt>
   2f2ac:	ldr	w19, [x22]
   2f2b0:	subs	w24, w19, #0x1
   2f2b4:	b.lt	2f314 <_rl_redisplay_after_sigwinch@@Base+0x200>  // b.tstop
   2f2b8:	ldr	w8, [x23]
   2f2bc:	tbnz	w8, #31, 2f314 <_rl_redisplay_after_sigwinch@@Base+0x200>
   2f2c0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f2c4:	ldr	x23, [x23, #3912]
   2f2c8:	ldr	x0, [x23]
   2f2cc:	cbz	x0, 2f310 <_rl_redisplay_after_sigwinch@@Base+0x1fc>
   2f2d0:	ldrb	w8, [x0]
   2f2d4:	cbz	w8, 2f310 <_rl_redisplay_after_sigwinch@@Base+0x1fc>
   2f2d8:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f2dc:	ldr	x2, [x2, #2496]
   2f2e0:	mov	w1, #0x1                   	// #1
   2f2e4:	bl	16590 <tputs@plt>
   2f2e8:	cmp	w19, #0x2
   2f2ec:	b.lt	2f310 <_rl_redisplay_after_sigwinch@@Base+0x1fc>  // b.tstop
   2f2f0:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f2f4:	ldr	x19, [x19, #2496]
   2f2f8:	ldr	x0, [x23]
   2f2fc:	mov	w1, #0x1                   	// #1
   2f300:	mov	x2, x19
   2f304:	bl	16590 <tputs@plt>
   2f308:	subs	w24, w24, #0x1
   2f30c:	b.ne	2f2f8 <_rl_redisplay_after_sigwinch@@Base+0x1e4>  // b.any
   2f310:	str	wzr, [x22]
   2f314:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f318:	ldr	x23, [x23, #2384]
   2f31c:	mov	w1, #0xa                   	// #10
   2f320:	ldr	x19, [x23]
   2f324:	mov	x0, x19
   2f328:	bl	16ee0 <strrchr@plt>
   2f32c:	cbz	x0, 2f4b8 <_rl_redisplay_after_sigwinch@@Base+0x3a4>
   2f330:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   2f334:	ldr	x12, [x25, #1032]
   2f338:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f33c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2f340:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   2f344:	str	x12, [x8, #1152]
   2f348:	ldr	w12, [x10, #1068]
   2f34c:	ldr	x14, [x26, #1040]
   2f350:	adrp	x3, 58000 <_rl_vimvcxt@@Base>
   2f354:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2f358:	add	x3, x3, #0x420
   2f35c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2f360:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   2f364:	str	w12, [x11, #1176]
   2f368:	ldr	w12, [x3]
   2f36c:	str	x14, [x9, #1168]
   2f370:	ldr	w9, [x24, #1048]
   2f374:	adrp	x4, 58000 <_rl_vimvcxt@@Base>
   2f378:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f37c:	adrp	x2, 58000 <_rl_vimvcxt@@Base>
   2f380:	add	x4, x4, #0x41c
   2f384:	adrp	x13, 58000 <_rl_vimvcxt@@Base>
   2f388:	add	x2, x2, #0x428
   2f38c:	str	w12, [x8, #1184]
   2f390:	ldr	w12, [x4]
   2f394:	str	w9, [x13, #1180]
   2f398:	ldr	w9, [x2]
   2f39c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f3a0:	adrp	x5, 58000 <_rl_vimvcxt@@Base>
   2f3a4:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   2f3a8:	add	x5, x5, #0x424
   2f3ac:	str	w12, [x8, #1192]
   2f3b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f3b4:	str	w9, [x11, #1188]
   2f3b8:	ldr	x11, [x8, #1096]
   2f3bc:	str	wzr, [x10, #1068]
   2f3c0:	ldr	w10, [x5]
   2f3c4:	add	x0, x0, #0x1
   2f3c8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2f3cc:	str	xzr, [x8, #1096]
   2f3d0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f3d4:	mov	w1, #0x1                   	// #1
   2f3d8:	str	xzr, [x26, #1040]
   2f3dc:	str	xzr, [x25, #1032]
   2f3e0:	str	wzr, [x24, #1048]
   2f3e4:	str	wzr, [x2]
   2f3e8:	str	wzr, [x3]
   2f3ec:	str	wzr, [x5]
   2f3f0:	str	wzr, [x4]
   2f3f4:	str	w10, [x9, #1196]
   2f3f8:	str	x11, [x8, #1200]
   2f3fc:	str	x0, [x23]
   2f400:	bl	2b3f4 <_rl_strip_prompt@@Base+0x18>
   2f404:	str	x0, [x25, #1032]
   2f408:	str	xzr, [x26, #1040]
   2f40c:	cbz	x0, 2f414 <_rl_redisplay_after_sigwinch@@Base+0x300>
   2f410:	bl	16440 <strlen@plt>
   2f414:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2f418:	ldr	x8, [x8, #3336]
   2f41c:	str	w0, [x24, #1048]
   2f420:	ldr	x9, [x8]
   2f424:	cbz	x9, 2f450 <_rl_redisplay_after_sigwinch@@Base+0x33c>
   2f428:	ldrb	w10, [x9]
   2f42c:	cbz	w10, 2f44c <_rl_redisplay_after_sigwinch@@Base+0x338>
   2f430:	add	x9, x9, #0x1
   2f434:	ldrb	w10, [x9]
   2f438:	sturb	wzr, [x9, #-1]
   2f43c:	add	x9, x9, #0x1
   2f440:	cbnz	w10, 2f434 <_rl_redisplay_after_sigwinch@@Base+0x320>
   2f444:	ldr	x9, [x8]
   2f448:	cbz	x9, 2f450 <_rl_redisplay_after_sigwinch@@Base+0x33c>
   2f44c:	strb	wzr, [x9]
   2f450:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2f454:	str	wzr, [x22]
   2f458:	str	wzr, [x21]
   2f45c:	str	wzr, [x9, #1128]
   2f460:	str	wzr, [x20]
   2f464:	ldr	x8, [x8, #8]
   2f468:	cbz	x8, 2f470 <_rl_redisplay_after_sigwinch@@Base+0x35c>
   2f46c:	str	xzr, [x8]
   2f470:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2f474:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f478:	ldr	w10, [x9, #1088]
   2f47c:	ldr	x11, [x11, #2664]
   2f480:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f484:	str	wzr, [x8, #1120]
   2f488:	add	w8, w10, #0x1
   2f48c:	ldr	x11, [x11]
   2f490:	str	w8, [x9, #1088]
   2f494:	blr	x11
   2f498:	str	x19, [x23]
   2f49c:	ldp	x20, x19, [sp, #80]
   2f4a0:	ldp	x22, x21, [sp, #64]
   2f4a4:	ldp	x24, x23, [sp, #48]
   2f4a8:	ldp	x26, x25, [sp, #32]
   2f4ac:	ldp	x28, x27, [sp, #16]
   2f4b0:	ldp	x29, x30, [sp], #96
   2f4b4:	b	173f0 <rl_restore_prompt@plt>
   2f4b8:	adrp	x8, 57000 <rl_insert@@Base+0x20abc>
   2f4bc:	ldr	x8, [x8, #3336]
   2f4c0:	ldr	x9, [x8]
   2f4c4:	cbz	x9, 2f4f0 <_rl_redisplay_after_sigwinch@@Base+0x3dc>
   2f4c8:	ldrb	w10, [x9]
   2f4cc:	cbz	w10, 2f4ec <_rl_redisplay_after_sigwinch@@Base+0x3d8>
   2f4d0:	add	x9, x9, #0x1
   2f4d4:	ldrb	w10, [x9]
   2f4d8:	sturb	wzr, [x9, #-1]
   2f4dc:	add	x9, x9, #0x1
   2f4e0:	cbnz	w10, 2f4d4 <_rl_redisplay_after_sigwinch@@Base+0x3c0>
   2f4e4:	ldr	x9, [x8]
   2f4e8:	cbz	x9, 2f4f0 <_rl_redisplay_after_sigwinch@@Base+0x3dc>
   2f4ec:	strb	wzr, [x9]
   2f4f0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   2f4f4:	str	wzr, [x22]
   2f4f8:	str	wzr, [x21]
   2f4fc:	str	wzr, [x9, #1128]
   2f500:	str	wzr, [x20]
   2f504:	ldr	x8, [x8, #8]
   2f508:	cbz	x8, 2f510 <_rl_redisplay_after_sigwinch@@Base+0x3fc>
   2f50c:	str	xzr, [x8]
   2f510:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2f514:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f518:	ldr	w9, [x8, #1088]
   2f51c:	ldr	x10, [x10, #2664]
   2f520:	add	w9, w9, #0x1
   2f524:	ldr	x0, [x10]
   2f528:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   2f52c:	str	wzr, [x10, #1120]
   2f530:	str	w9, [x8, #1088]
   2f534:	ldp	x20, x19, [sp, #80]
   2f538:	ldp	x22, x21, [sp, #64]
   2f53c:	ldp	x24, x23, [sp, #48]
   2f540:	ldp	x26, x25, [sp, #32]
   2f544:	ldp	x28, x27, [sp, #16]
   2f548:	ldp	x29, x30, [sp], #96
   2f54c:	br	x0

000000000002f550 <_rl_clean_up_for_exit@@Base>:
   2f550:	stp	x29, x30, [sp, #-80]!
   2f554:	stp	x26, x25, [sp, #16]
   2f558:	stp	x24, x23, [sp, #32]
   2f55c:	stp	x22, x21, [sp, #48]
   2f560:	stp	x20, x19, [sp, #64]
   2f564:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f568:	ldr	x8, [x8, #2944]
   2f56c:	mov	x29, sp
   2f570:	ldr	w8, [x8]
   2f574:	cbz	w8, 2f630 <_rl_clean_up_for_exit@@Base+0xe0>
   2f578:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f57c:	ldr	x20, [x20, #3600]
   2f580:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f584:	ldr	w22, [x20]
   2f588:	ldr	x21, [x21, #1928]
   2f58c:	cmp	w22, #0x1
   2f590:	b.lt	2f604 <_rl_clean_up_for_exit@@Base+0xb4>  // b.tstop
   2f594:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f598:	ldr	x23, [x23, #2408]
   2f59c:	ldr	w8, [x23]
   2f5a0:	subs	w19, w22, w8
   2f5a4:	b.eq	2f604 <_rl_clean_up_for_exit@@Base+0xb4>  // b.none
   2f5a8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f5ac:	ldr	x8, [x8, #3520]
   2f5b0:	ldr	w8, [x8]
   2f5b4:	cmp	w8, w22
   2f5b8:	b.lt	2f604 <_rl_clean_up_for_exit@@Base+0xb4>  // b.tstop
   2f5bc:	cmp	w19, #0x1
   2f5c0:	b.lt	2f648 <_rl_clean_up_for_exit@@Base+0xf8>  // b.tstop
   2f5c4:	ldr	x1, [x21]
   2f5c8:	mov	w0, #0xa                   	// #10
   2f5cc:	bl	16670 <putc@plt>
   2f5d0:	subs	w19, w19, #0x1
   2f5d4:	b.ne	2f5c4 <_rl_clean_up_for_exit@@Base+0x74>  // b.any
   2f5d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f5dc:	ldr	x8, [x8, #3264]
   2f5e0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f5e4:	mov	w1, #0x1                   	// #1
   2f5e8:	ldr	x0, [x8]
   2f5ec:	ldr	x2, [x2, #2496]
   2f5f0:	bl	16590 <tputs@plt>
   2f5f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f5f8:	ldr	x8, [x8, #1952]
   2f5fc:	str	wzr, [x8]
   2f600:	str	w22, [x23]
   2f604:	ldr	x0, [x21]
   2f608:	str	wzr, [x20]
   2f60c:	bl	17430 <fflush@plt>
   2f610:	ldp	x20, x19, [sp, #64]
   2f614:	ldp	x22, x21, [sp, #48]
   2f618:	ldp	x24, x23, [sp, #32]
   2f61c:	ldp	x26, x25, [sp, #16]
   2f620:	mov	w0, #0x1                   	// #1
   2f624:	mov	w1, wzr
   2f628:	ldp	x29, x30, [sp], #80
   2f62c:	b	16fd0 <rl_restart_output@plt>
   2f630:	ldp	x20, x19, [sp, #64]
   2f634:	ldp	x22, x21, [sp, #48]
   2f638:	ldp	x24, x23, [sp, #32]
   2f63c:	ldp	x26, x25, [sp, #16]
   2f640:	ldp	x29, x30, [sp], #80
   2f644:	ret
   2f648:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f64c:	ldr	x24, [x24, #3912]
   2f650:	ldr	x0, [x24]
   2f654:	cbz	x0, 2f600 <_rl_clean_up_for_exit@@Base+0xb0>
   2f658:	ldrb	w8, [x0]
   2f65c:	cbz	w8, 2f600 <_rl_clean_up_for_exit@@Base+0xb0>
   2f660:	tbz	w19, #31, 2f600 <_rl_clean_up_for_exit@@Base+0xb0>
   2f664:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f668:	ldr	x2, [x2, #2496]
   2f66c:	mov	w1, #0x1                   	// #1
   2f670:	bl	16590 <tputs@plt>
   2f674:	cmn	w19, #0x1
   2f678:	b.eq	2f600 <_rl_clean_up_for_exit@@Base+0xb0>  // b.none
   2f67c:	neg	w25, w19
   2f680:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f684:	ldr	x19, [x19, #2496]
   2f688:	mov	w26, #0x1                   	// #1
   2f68c:	ldr	x0, [x24]
   2f690:	mov	w1, #0x1                   	// #1
   2f694:	mov	x2, x19
   2f698:	bl	16590 <tputs@plt>
   2f69c:	add	w26, w26, #0x1
   2f6a0:	cmp	w26, w25
   2f6a4:	b.lt	2f68c <_rl_clean_up_for_exit@@Base+0x13c>  // b.tstop
   2f6a8:	b	2f600 <_rl_clean_up_for_exit@@Base+0xb0>

000000000002f6ac <_rl_erase_entire_line@@Base>:
   2f6ac:	stp	x29, x30, [sp, #-32]!
   2f6b0:	stp	x20, x19, [sp, #16]
   2f6b4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f6b8:	ldr	x20, [x20, #3264]
   2f6bc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f6c0:	mov	x29, sp
   2f6c4:	ldr	x0, [x20]
   2f6c8:	ldr	x19, [x19, #1952]
   2f6cc:	cbz	x0, 2f6e4 <_rl_erase_entire_line@@Base+0x38>
   2f6d0:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f6d4:	ldr	x2, [x2, #2496]
   2f6d8:	mov	w1, #0x1                   	// #1
   2f6dc:	bl	16590 <tputs@plt>
   2f6e0:	str	wzr, [x19]
   2f6e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f6e8:	ldr	x8, [x8, #3704]
   2f6ec:	ldr	x0, [x8]
   2f6f0:	cbz	x0, 2f704 <_rl_erase_entire_line@@Base+0x58>
   2f6f4:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f6f8:	ldr	x2, [x2, #2496]
   2f6fc:	mov	w1, #0x1                   	// #1
   2f700:	bl	16590 <tputs@plt>
   2f704:	ldr	x0, [x20]
   2f708:	cbz	x0, 2f720 <_rl_erase_entire_line@@Base+0x74>
   2f70c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f710:	ldr	x2, [x2, #2496]
   2f714:	mov	w1, #0x1                   	// #1
   2f718:	bl	16590 <tputs@plt>
   2f71c:	str	wzr, [x19]
   2f720:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f724:	ldr	x8, [x8, #1928]
   2f728:	ldp	x20, x19, [sp, #16]
   2f72c:	ldr	x0, [x8]
   2f730:	ldp	x29, x30, [sp], #32
   2f734:	b	17430 <fflush@plt>

000000000002f738 <_rl_ttyflush@@Base>:
   2f738:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f73c:	ldr	x8, [x8, #1928]
   2f740:	ldr	x0, [x8]
   2f744:	b	17430 <fflush@plt>

000000000002f748 <_rl_current_display_line@@Base>:
   2f748:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f74c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f750:	ldr	x8, [x8, #2384]
   2f754:	ldr	x9, [x9, #2016]
   2f758:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f75c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f760:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f764:	ldr	x10, [x10, #1952]
   2f768:	ldr	x11, [x11, #3552]
   2f76c:	ldr	x12, [x12, #3424]
   2f770:	ldr	x13, [x8]
   2f774:	ldr	x9, [x9]
   2f778:	ldr	w10, [x10]
   2f77c:	ldr	w8, [x11]
   2f780:	ldr	w11, [x12]
   2f784:	cmp	x13, x9
   2f788:	sub	w10, w10, w8
   2f78c:	csneg	w9, wzr, w11, ne  // ne = any
   2f790:	add	w9, w9, w10
   2f794:	cmp	w9, #0x1
   2f798:	b.lt	2f7a8 <_rl_current_display_line@@Base+0x60>  // b.tstop
   2f79c:	sdiv	w8, w9, w8
   2f7a0:	add	w0, w8, #0x1
   2f7a4:	ret
   2f7a8:	mov	w0, wzr
   2f7ac:	ret

000000000002f7b0 <_rl_signal_handler@@Base>:
   2f7b0:	stp	x29, x30, [sp, #-16]!
   2f7b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f7b8:	ldr	x8, [x8, #2808]
   2f7bc:	cmp	w0, #0x1c
   2f7c0:	mov	x29, sp
   2f7c4:	str	wzr, [x8]
   2f7c8:	b.ne	2f7e8 <_rl_signal_handler@@Base+0x38>  // b.any
   2f7cc:	bl	179b0 <rl_resize_terminal@plt>
   2f7d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f7d4:	ldr	x8, [x8, #2440]
   2f7d8:	ldr	x0, [x8]
   2f7dc:	cbz	x0, 2f7f0 <_rl_signal_handler@@Base+0x40>
   2f7e0:	ldp	x29, x30, [sp], #16
   2f7e4:	br	x0
   2f7e8:	ldp	x29, x30, [sp], #16
   2f7ec:	b	2f7f8 <_rl_signal_handler@@Base+0x48>
   2f7f0:	ldp	x29, x30, [sp], #16
   2f7f4:	ret
   2f7f8:	sub	sp, sp, #0xb0
   2f7fc:	stp	x29, x30, [sp, #128]
   2f800:	stp	x22, x21, [sp, #144]
   2f804:	stp	x20, x19, [sp, #160]
   2f808:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f80c:	ldr	x20, [x20, #2984]
   2f810:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f814:	mov	w19, w0
   2f818:	add	x29, sp, #0x80
   2f81c:	ldr	x9, [x20]
   2f820:	ldr	x21, [x21, #2640]
   2f824:	orr	x9, x9, #0x8000
   2f828:	ldr	x8, [x21]
   2f82c:	str	x9, [x20]
   2f830:	cbz	x8, 2f850 <_rl_signal_handler@@Base+0xa0>
   2f834:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f838:	ldr	x22, [x22, #3072]
   2f83c:	mov	w0, w19
   2f840:	ldr	x1, [x22]
   2f844:	blr	x8
   2f848:	str	xzr, [x21]
   2f84c:	str	xzr, [x22]
   2f850:	cmp	w19, #0x16
   2f854:	b.hi	2f970 <_rl_signal_handler@@Base+0x1c0>  // b.pmore
   2f858:	mov	w8, #0x1                   	// #1
   2f85c:	mov	w9, #0xc00a                	// #49162
   2f860:	lsl	w8, w8, w19
   2f864:	movk	w9, #0x40, lsl #16
   2f868:	tst	w8, w9
   2f86c:	b.ne	2f8c8 <_rl_signal_handler@@Base+0x118>  // b.any
   2f870:	tst	w8, #0x300000
   2f874:	b.ne	2f8a4 <_rl_signal_handler@@Base+0xf4>  // b.any
   2f878:	cmp	w19, #0x2
   2f87c:	b.ne	2f970 <_rl_signal_handler@@Base+0x1c0>  // b.any
   2f880:	bl	178c0 <_rl_reset_completion_state@plt>
   2f884:	bl	17550 <rl_free_undo_list@plt>
   2f888:	bl	16a60 <current_history@plt>
   2f88c:	cbz	x0, 2f894 <_rl_signal_handler@@Base+0xe4>
   2f890:	str	xzr, [x0, #16]
   2f894:	bl	166a0 <_rl_kill_kbd_macro@plt>
   2f898:	bl	17420 <rl_clear_message@plt>
   2f89c:	bl	17500 <_rl_reset_argument@plt>
   2f8a0:	bl	16900 <rl_callback_sigcleanup@plt>
   2f8a4:	mov	x0, sp
   2f8a8:	bl	16b10 <sigemptyset@plt>
   2f8ac:	mov	x0, sp
   2f8b0:	mov	w1, #0x16                  	// #22
   2f8b4:	bl	17750 <sigaddset@plt>
   2f8b8:	mov	x1, sp
   2f8bc:	mov	w0, wzr
   2f8c0:	mov	x2, xzr
   2f8c4:	bl	16560 <sigprocmask@plt>
   2f8c8:	mov	w0, w19
   2f8cc:	bl	167b0 <rl_echo_signal_char@plt>
   2f8d0:	bl	16410 <_rl_clean_up_for_exit@plt>
   2f8d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f8d8:	ldr	x8, [x8, #3840]
   2f8dc:	ldr	x8, [x8]
   2f8e0:	cbz	x8, 2f8e8 <_rl_signal_handler@@Base+0x138>
   2f8e4:	blr	x8
   2f8e8:	bl	168b0 <rl_clear_pending_input@plt>
   2f8ec:	bl	175e0 <rl_clear_signals@plt>
   2f8f0:	orr	w8, w19, #0x1
   2f8f4:	cmp	w8, #0x15
   2f8f8:	b.ne	2f90c <_rl_signal_handler@@Base+0x15c>  // b.any
   2f8fc:	mov	x1, sp
   2f900:	mov	w0, #0x1                   	// #1
   2f904:	mov	x2, xzr
   2f908:	bl	16560 <sigprocmask@plt>
   2f90c:	mov	x0, sp
   2f910:	bl	16b10 <sigemptyset@plt>
   2f914:	mov	x2, sp
   2f918:	mov	w0, wzr
   2f91c:	mov	x1, xzr
   2f920:	bl	16560 <sigprocmask@plt>
   2f924:	mov	x0, sp
   2f928:	mov	w1, w19
   2f92c:	bl	17710 <sigdelset@plt>
   2f930:	bl	16930 <getpid@plt>
   2f934:	mov	w1, w19
   2f938:	bl	16750 <kill@plt>
   2f93c:	mov	x1, sp
   2f940:	mov	w0, #0x2                   	// #2
   2f944:	mov	x2, xzr
   2f948:	bl	16560 <sigprocmask@plt>
   2f94c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f950:	ldr	x8, [x8, #3560]
   2f954:	ldr	x8, [x8]
   2f958:	cbz	x8, 2f96c <_rl_signal_handler@@Base+0x1bc>
   2f95c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f960:	ldr	x9, [x9, #3352]
   2f964:	ldr	w0, [x9]
   2f968:	blr	x8
   2f96c:	bl	16e70 <rl_set_signals@plt>
   2f970:	ldr	x8, [x20]
   2f974:	ldp	x22, x21, [sp, #144]
   2f978:	ldp	x29, x30, [sp, #128]
   2f97c:	and	x8, x8, #0xffffffffffff7fff
   2f980:	str	x8, [x20]
   2f984:	ldp	x20, x19, [sp, #160]
   2f988:	add	sp, sp, #0xb0
   2f98c:	ret

000000000002f990 <rl_set_signals@@Base>:
   2f990:	stp	x29, x30, [sp, #-64]!
   2f994:	str	x28, [sp, #16]
   2f998:	stp	x22, x21, [sp, #32]
   2f99c:	stp	x20, x19, [sp, #48]
   2f9a0:	mov	x29, sp
   2f9a4:	sub	sp, sp, #0x260
   2f9a8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2f9ac:	ldr	x20, [x20, #3872]
   2f9b0:	ldr	w8, [x20]
   2f9b4:	cbz	w8, 2fa40 <rl_set_signals@@Base+0xb0>
   2f9b8:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2f9bc:	ldrb	w9, [x21, #1296]
   2f9c0:	cbnz	w9, 2fa40 <rl_set_signals@@Base+0xb0>
   2f9c4:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   2f9c8:	add	x19, x19, #0x518
   2f9cc:	mov	x0, x19
   2f9d0:	bl	16b10 <sigemptyset@plt>
   2f9d4:	mov	w1, #0x2                   	// #2
   2f9d8:	mov	x0, x19
   2f9dc:	bl	17750 <sigaddset@plt>
   2f9e0:	mov	w1, #0xf                   	// #15
   2f9e4:	mov	x0, x19
   2f9e8:	bl	17750 <sigaddset@plt>
   2f9ec:	mov	w1, #0x1                   	// #1
   2f9f0:	mov	x0, x19
   2f9f4:	mov	w22, #0x1                   	// #1
   2f9f8:	bl	17750 <sigaddset@plt>
   2f9fc:	mov	w1, #0x3                   	// #3
   2fa00:	mov	x0, x19
   2fa04:	bl	17750 <sigaddset@plt>
   2fa08:	mov	w1, #0xe                   	// #14
   2fa0c:	mov	x0, x19
   2fa10:	bl	17750 <sigaddset@plt>
   2fa14:	mov	w1, #0x14                  	// #20
   2fa18:	mov	x0, x19
   2fa1c:	bl	17750 <sigaddset@plt>
   2fa20:	mov	w1, #0x15                  	// #21
   2fa24:	mov	x0, x19
   2fa28:	bl	17750 <sigaddset@plt>
   2fa2c:	mov	w1, #0x16                  	// #22
   2fa30:	mov	x0, x19
   2fa34:	bl	17750 <sigaddset@plt>
   2fa38:	ldr	w8, [x20]
   2fa3c:	strb	w22, [x21, #1296]
   2fa40:	sub	x20, x29, #0x98
   2fa44:	cbz	w8, 30010 <rl_set_signals@@Base+0x680>
   2fa48:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   2fa4c:	ldrb	w9, [x21, #1432]
   2fa50:	cbnz	w9, 30010 <rl_set_signals@@Base+0x680>
   2fa54:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   2fa58:	ldr	x19, [x19, #2224]
   2fa5c:	mov	x0, x19
   2fa60:	bl	16b10 <sigemptyset@plt>
   2fa64:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fa68:	add	x1, x1, #0x518
   2fa6c:	mov	w0, wzr
   2fa70:	mov	x2, x19
   2fa74:	bl	16560 <sigprocmask@plt>
   2fa78:	add	x8, sp, #0x98
   2fa7c:	add	x0, x8, #0x8
   2fa80:	bl	16b10 <sigemptyset@plt>
   2fa84:	adrp	x19, 30000 <rl_set_signals@@Base+0x670>
   2fa88:	add	x8, sp, #0x130
   2fa8c:	add	x19, x19, #0x118
   2fa90:	add	x0, x8, #0x8
   2fa94:	str	wzr, [sp, #288]
   2fa98:	str	wzr, [sp, #440]
   2fa9c:	str	x19, [sp, #304]
   2faa0:	bl	16b10 <sigemptyset@plt>
   2faa4:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2faa8:	add	x0, x0, #0x5a8
   2faac:	bl	16b10 <sigemptyset@plt>
   2fab0:	add	x1, sp, #0x130
   2fab4:	sub	x2, x29, #0x98
   2fab8:	mov	w0, #0x2                   	// #2
   2fabc:	bl	16ec0 <sigaction@plt>
   2fac0:	ldur	x8, [x29, #-152]
   2fac4:	cmp	x8, x19
   2fac8:	b.eq	2fb08 <rl_set_signals@@Base+0x178>  // b.none
   2facc:	ldp	q0, q1, [x20, #96]
   2fad0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fad4:	add	x8, x8, #0x5a0
   2fad8:	ldr	q2, [x20, #128]
   2fadc:	stp	q0, q1, [x8, #96]
   2fae0:	ldp	q0, q3, [x20, #32]
   2fae4:	ldur	x9, [x29, #-8]
   2fae8:	str	q2, [x8, #128]
   2faec:	stp	q0, q3, [x8, #32]
   2faf0:	ldp	q0, q1, [x20, #64]
   2faf4:	str	x9, [x8, #144]
   2faf8:	str	q0, [x8, #64]
   2fafc:	ldp	q2, q0, [x20]
   2fb00:	str	q1, [x8, #80]
   2fb04:	stp	q2, q0, [x8]
   2fb08:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fb0c:	ldr	x8, [x8, #1440]
   2fb10:	cmp	x8, #0x1
   2fb14:	b.ne	2fb2c <rl_set_signals@@Base+0x19c>  // b.any
   2fb18:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fb1c:	add	x1, x1, #0x5a0
   2fb20:	add	x2, sp, #0x98
   2fb24:	mov	w0, #0x2                   	// #2
   2fb28:	bl	16ec0 <sigaction@plt>
   2fb2c:	add	x8, sp, #0x98
   2fb30:	add	x0, x8, #0x8
   2fb34:	bl	16b10 <sigemptyset@plt>
   2fb38:	add	x8, sp, #0x130
   2fb3c:	add	x0, x8, #0x8
   2fb40:	str	wzr, [sp, #288]
   2fb44:	str	x19, [sp, #304]
   2fb48:	str	wzr, [sp, #440]
   2fb4c:	bl	16b10 <sigemptyset@plt>
   2fb50:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fb54:	add	x0, x0, #0x640
   2fb58:	bl	16b10 <sigemptyset@plt>
   2fb5c:	add	x1, sp, #0x130
   2fb60:	sub	x2, x29, #0x98
   2fb64:	mov	w0, #0xf                   	// #15
   2fb68:	bl	16ec0 <sigaction@plt>
   2fb6c:	ldur	x8, [x29, #-152]
   2fb70:	cmp	x8, x19
   2fb74:	b.eq	2fbb4 <rl_set_signals@@Base+0x224>  // b.none
   2fb78:	ldp	q0, q1, [x20, #96]
   2fb7c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fb80:	add	x8, x8, #0x638
   2fb84:	ldr	q2, [x20, #128]
   2fb88:	stp	q0, q1, [x8, #96]
   2fb8c:	ldp	q0, q3, [x20, #32]
   2fb90:	ldur	x9, [x29, #-8]
   2fb94:	str	q2, [x8, #128]
   2fb98:	stp	q0, q3, [x8, #32]
   2fb9c:	ldp	q0, q1, [x20, #64]
   2fba0:	str	x9, [x8, #144]
   2fba4:	str	q0, [x8, #64]
   2fba8:	ldp	q2, q0, [x20]
   2fbac:	str	q1, [x8, #80]
   2fbb0:	stp	q2, q0, [x8]
   2fbb4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fbb8:	ldr	x8, [x8, #1592]
   2fbbc:	cmp	x8, #0x1
   2fbc0:	b.ne	2fbd8 <rl_set_signals@@Base+0x248>  // b.any
   2fbc4:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fbc8:	add	x1, x1, #0x638
   2fbcc:	add	x2, sp, #0x98
   2fbd0:	mov	w0, #0xf                   	// #15
   2fbd4:	bl	16ec0 <sigaction@plt>
   2fbd8:	add	x8, sp, #0x98
   2fbdc:	add	x0, x8, #0x8
   2fbe0:	bl	16b10 <sigemptyset@plt>
   2fbe4:	add	x8, sp, #0x130
   2fbe8:	add	x0, x8, #0x8
   2fbec:	str	wzr, [sp, #288]
   2fbf0:	str	x19, [sp, #304]
   2fbf4:	str	wzr, [sp, #440]
   2fbf8:	bl	16b10 <sigemptyset@plt>
   2fbfc:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fc00:	add	x0, x0, #0x6d8
   2fc04:	bl	16b10 <sigemptyset@plt>
   2fc08:	add	x1, sp, #0x130
   2fc0c:	sub	x2, x29, #0x98
   2fc10:	mov	w0, #0x1                   	// #1
   2fc14:	bl	16ec0 <sigaction@plt>
   2fc18:	ldur	x8, [x29, #-152]
   2fc1c:	cmp	x8, x19
   2fc20:	b.eq	2fc60 <rl_set_signals@@Base+0x2d0>  // b.none
   2fc24:	ldp	q0, q1, [x20, #96]
   2fc28:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fc2c:	add	x8, x8, #0x6d0
   2fc30:	ldr	q2, [x20, #128]
   2fc34:	stp	q0, q1, [x8, #96]
   2fc38:	ldp	q0, q3, [x20, #32]
   2fc3c:	ldur	x9, [x29, #-8]
   2fc40:	str	q2, [x8, #128]
   2fc44:	stp	q0, q3, [x8, #32]
   2fc48:	ldp	q0, q1, [x20, #64]
   2fc4c:	str	x9, [x8, #144]
   2fc50:	str	q0, [x8, #64]
   2fc54:	ldp	q2, q0, [x20]
   2fc58:	str	q1, [x8, #80]
   2fc5c:	stp	q2, q0, [x8]
   2fc60:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fc64:	ldr	x8, [x8, #1744]
   2fc68:	cmp	x8, #0x1
   2fc6c:	b.ne	2fc84 <rl_set_signals@@Base+0x2f4>  // b.any
   2fc70:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fc74:	add	x1, x1, #0x6d0
   2fc78:	add	x2, sp, #0x98
   2fc7c:	mov	w0, #0x1                   	// #1
   2fc80:	bl	16ec0 <sigaction@plt>
   2fc84:	add	x8, sp, #0x98
   2fc88:	add	x0, x8, #0x8
   2fc8c:	bl	16b10 <sigemptyset@plt>
   2fc90:	add	x8, sp, #0x130
   2fc94:	add	x0, x8, #0x8
   2fc98:	str	wzr, [sp, #288]
   2fc9c:	str	x19, [sp, #304]
   2fca0:	str	wzr, [sp, #440]
   2fca4:	bl	16b10 <sigemptyset@plt>
   2fca8:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fcac:	add	x0, x0, #0x770
   2fcb0:	bl	16b10 <sigemptyset@plt>
   2fcb4:	add	x1, sp, #0x130
   2fcb8:	sub	x2, x29, #0x98
   2fcbc:	mov	w0, #0x3                   	// #3
   2fcc0:	bl	16ec0 <sigaction@plt>
   2fcc4:	ldur	x8, [x29, #-152]
   2fcc8:	cmp	x8, x19
   2fccc:	b.eq	2fd0c <rl_set_signals@@Base+0x37c>  // b.none
   2fcd0:	ldp	q0, q1, [x20, #96]
   2fcd4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fcd8:	add	x8, x8, #0x768
   2fcdc:	ldr	q2, [x20, #128]
   2fce0:	stp	q0, q1, [x8, #96]
   2fce4:	ldp	q0, q3, [x20, #32]
   2fce8:	ldur	x9, [x29, #-8]
   2fcec:	str	q2, [x8, #128]
   2fcf0:	stp	q0, q3, [x8, #32]
   2fcf4:	ldp	q0, q1, [x20, #64]
   2fcf8:	str	x9, [x8, #144]
   2fcfc:	str	q0, [x8, #64]
   2fd00:	ldp	q2, q0, [x20]
   2fd04:	str	q1, [x8, #80]
   2fd08:	stp	q2, q0, [x8]
   2fd0c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fd10:	ldr	x8, [x8, #1896]
   2fd14:	cmp	x8, #0x1
   2fd18:	b.ne	2fd30 <rl_set_signals@@Base+0x3a0>  // b.any
   2fd1c:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fd20:	add	x1, x1, #0x768
   2fd24:	add	x2, sp, #0x98
   2fd28:	mov	w0, #0x3                   	// #3
   2fd2c:	bl	16ec0 <sigaction@plt>
   2fd30:	add	x8, sp, #0x130
   2fd34:	add	x0, x8, #0x8
   2fd38:	str	x19, [sp, #304]
   2fd3c:	str	wzr, [sp, #440]
   2fd40:	bl	16b10 <sigemptyset@plt>
   2fd44:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fd48:	add	x0, x0, #0x808
   2fd4c:	bl	16b10 <sigemptyset@plt>
   2fd50:	add	x1, sp, #0x130
   2fd54:	sub	x2, x29, #0x98
   2fd58:	mov	w0, #0xe                   	// #14
   2fd5c:	bl	16ec0 <sigaction@plt>
   2fd60:	ldur	x8, [x29, #-152]
   2fd64:	cmp	x8, x19
   2fd68:	b.eq	2fda8 <rl_set_signals@@Base+0x418>  // b.none
   2fd6c:	ldp	q0, q1, [x20, #96]
   2fd70:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fd74:	add	x8, x8, #0x800
   2fd78:	ldr	q2, [x20, #128]
   2fd7c:	stp	q0, q1, [x8, #96]
   2fd80:	ldp	q0, q3, [x20, #32]
   2fd84:	ldur	x9, [x29, #-8]
   2fd88:	str	q2, [x8, #128]
   2fd8c:	stp	q0, q3, [x8, #32]
   2fd90:	ldp	q0, q1, [x20, #64]
   2fd94:	str	x9, [x8, #144]
   2fd98:	str	q0, [x8, #64]
   2fd9c:	ldp	q2, q0, [x20]
   2fda0:	str	q1, [x8, #80]
   2fda4:	stp	q2, q0, [x8]
   2fda8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fdac:	ldr	x8, [x8, #2048]
   2fdb0:	cbz	x8, 2fdf0 <rl_set_signals@@Base+0x460>
   2fdb4:	cmp	x8, #0x1
   2fdb8:	b.ne	2fdd0 <rl_set_signals@@Base+0x440>  // b.any
   2fdbc:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fdc0:	add	x1, x1, #0x800
   2fdc4:	mov	x2, sp
   2fdc8:	mov	w0, #0xe                   	// #14
   2fdcc:	bl	16ec0 <sigaction@plt>
   2fdd0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fdd4:	ldrb	w8, [x8, #2187]
   2fdd8:	tbz	w8, #4, 2fdf0 <rl_set_signals@@Base+0x460>
   2fddc:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fde0:	add	x1, x1, #0x800
   2fde4:	mov	x2, sp
   2fde8:	mov	w0, #0xe                   	// #14
   2fdec:	bl	16ec0 <sigaction@plt>
   2fdf0:	add	x8, sp, #0x98
   2fdf4:	add	x0, x8, #0x8
   2fdf8:	bl	16b10 <sigemptyset@plt>
   2fdfc:	add	x8, sp, #0x130
   2fe00:	add	x0, x8, #0x8
   2fe04:	str	wzr, [sp, #288]
   2fe08:	str	x19, [sp, #304]
   2fe0c:	str	wzr, [sp, #440]
   2fe10:	bl	16b10 <sigemptyset@plt>
   2fe14:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fe18:	add	x0, x0, #0x8a0
   2fe1c:	bl	16b10 <sigemptyset@plt>
   2fe20:	add	x1, sp, #0x130
   2fe24:	sub	x2, x29, #0x98
   2fe28:	mov	w0, #0x14                  	// #20
   2fe2c:	bl	16ec0 <sigaction@plt>
   2fe30:	ldur	x8, [x29, #-152]
   2fe34:	cmp	x8, x19
   2fe38:	b.eq	2fe78 <rl_set_signals@@Base+0x4e8>  // b.none
   2fe3c:	ldp	q0, q1, [x20, #96]
   2fe40:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fe44:	add	x8, x8, #0x898
   2fe48:	ldr	q2, [x20, #128]
   2fe4c:	stp	q0, q1, [x8, #96]
   2fe50:	ldp	q0, q3, [x20, #32]
   2fe54:	ldur	x9, [x29, #-8]
   2fe58:	str	q2, [x8, #128]
   2fe5c:	stp	q0, q3, [x8, #32]
   2fe60:	ldp	q0, q1, [x20, #64]
   2fe64:	str	x9, [x8, #144]
   2fe68:	str	q0, [x8, #64]
   2fe6c:	ldp	q2, q0, [x20]
   2fe70:	str	q1, [x8, #80]
   2fe74:	stp	q2, q0, [x8]
   2fe78:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fe7c:	ldr	x8, [x8, #2200]
   2fe80:	cmp	x8, #0x1
   2fe84:	b.ne	2fe9c <rl_set_signals@@Base+0x50c>  // b.any
   2fe88:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2fe8c:	add	x1, x1, #0x898
   2fe90:	add	x2, sp, #0x98
   2fe94:	mov	w0, #0x14                  	// #20
   2fe98:	bl	16ec0 <sigaction@plt>
   2fe9c:	add	x8, sp, #0x98
   2fea0:	add	x0, x8, #0x8
   2fea4:	bl	16b10 <sigemptyset@plt>
   2fea8:	add	x8, sp, #0x130
   2feac:	add	x0, x8, #0x8
   2feb0:	str	wzr, [sp, #288]
   2feb4:	str	x19, [sp, #304]
   2feb8:	str	wzr, [sp, #440]
   2febc:	bl	16b10 <sigemptyset@plt>
   2fec0:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2fec4:	add	x0, x0, #0x938
   2fec8:	bl	16b10 <sigemptyset@plt>
   2fecc:	add	x1, sp, #0x130
   2fed0:	sub	x2, x29, #0x98
   2fed4:	mov	w0, #0x16                  	// #22
   2fed8:	bl	16ec0 <sigaction@plt>
   2fedc:	ldur	x8, [x29, #-152]
   2fee0:	cmp	x8, x19
   2fee4:	b.eq	2ff24 <rl_set_signals@@Base+0x594>  // b.none
   2fee8:	ldp	q0, q1, [x20, #96]
   2feec:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2fef0:	add	x8, x8, #0x930
   2fef4:	ldr	q2, [x20, #128]
   2fef8:	stp	q0, q1, [x8, #96]
   2fefc:	ldp	q0, q3, [x20, #32]
   2ff00:	ldur	x9, [x29, #-8]
   2ff04:	str	q2, [x8, #128]
   2ff08:	stp	q0, q3, [x8, #32]
   2ff0c:	ldp	q0, q1, [x20, #64]
   2ff10:	str	x9, [x8, #144]
   2ff14:	str	q0, [x8, #64]
   2ff18:	ldp	q2, q0, [x20]
   2ff1c:	str	q1, [x8, #80]
   2ff20:	stp	q2, q0, [x8]
   2ff24:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ff28:	ldr	x8, [x8, #2352]
   2ff2c:	cmp	x8, #0x1
   2ff30:	b.ne	2ff48 <rl_set_signals@@Base+0x5b8>  // b.any
   2ff34:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2ff38:	add	x1, x1, #0x930
   2ff3c:	add	x2, sp, #0x98
   2ff40:	mov	w0, #0x16                  	// #22
   2ff44:	bl	16ec0 <sigaction@plt>
   2ff48:	add	x8, sp, #0x98
   2ff4c:	add	x0, x8, #0x8
   2ff50:	bl	16b10 <sigemptyset@plt>
   2ff54:	add	x8, sp, #0x130
   2ff58:	add	x0, x8, #0x8
   2ff5c:	str	wzr, [sp, #288]
   2ff60:	str	x19, [sp, #304]
   2ff64:	str	wzr, [sp, #440]
   2ff68:	bl	16b10 <sigemptyset@plt>
   2ff6c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   2ff70:	add	x0, x0, #0x9d0
   2ff74:	bl	16b10 <sigemptyset@plt>
   2ff78:	add	x1, sp, #0x130
   2ff7c:	sub	x2, x29, #0x98
   2ff80:	mov	w0, #0x15                  	// #21
   2ff84:	bl	16ec0 <sigaction@plt>
   2ff88:	ldur	x8, [x29, #-152]
   2ff8c:	cmp	x8, x19
   2ff90:	b.eq	2ffd0 <rl_set_signals@@Base+0x640>  // b.none
   2ff94:	ldp	q0, q1, [x20, #96]
   2ff98:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ff9c:	add	x8, x8, #0x9c8
   2ffa0:	ldr	q2, [x20, #128]
   2ffa4:	stp	q0, q1, [x8, #96]
   2ffa8:	ldp	q0, q3, [x20, #32]
   2ffac:	ldur	x9, [x29, #-8]
   2ffb0:	str	q2, [x8, #128]
   2ffb4:	stp	q0, q3, [x8, #32]
   2ffb8:	ldp	q0, q1, [x20, #64]
   2ffbc:	str	x9, [x8, #144]
   2ffc0:	str	q0, [x8, #64]
   2ffc4:	ldp	q2, q0, [x20]
   2ffc8:	str	q1, [x8, #80]
   2ffcc:	stp	q2, q0, [x8]
   2ffd0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   2ffd4:	ldr	x8, [x8, #2504]
   2ffd8:	cmp	x8, #0x1
   2ffdc:	b.ne	2fff4 <rl_set_signals@@Base+0x664>  // b.any
   2ffe0:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   2ffe4:	add	x1, x1, #0x9c8
   2ffe8:	add	x2, sp, #0x98
   2ffec:	mov	w0, #0x15                  	// #21
   2fff0:	bl	16ec0 <sigaction@plt>
   2fff4:	mov	w8, #0x1                   	// #1
   2fff8:	strb	w8, [x21, #1432]
   2fffc:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30000:	ldr	x1, [x1, #2224]
   30004:	mov	w0, #0x2                   	// #2
   30008:	mov	x2, xzr
   3000c:	b	30030 <rl_set_signals@@Base+0x6a0>
   30010:	cbnz	w8, 30034 <rl_set_signals@@Base+0x6a4>
   30014:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30018:	ldr	x19, [x19, #2224]
   3001c:	mov	x0, x19
   30020:	bl	16b10 <sigemptyset@plt>
   30024:	mov	w0, wzr
   30028:	mov	x1, xzr
   3002c:	mov	x2, x19
   30030:	bl	16560 <sigprocmask@plt>
   30034:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30038:	ldr	x8, [x8, #3696]
   3003c:	ldr	w8, [x8]
   30040:	cbz	w8, 300fc <rl_set_signals@@Base+0x76c>
   30044:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   30048:	ldrb	w8, [x19, #2656]
   3004c:	cbnz	w8, 300fc <rl_set_signals@@Base+0x76c>
   30050:	add	x8, sp, #0x98
   30054:	add	x0, x8, #0x8
   30058:	bl	16b10 <sigemptyset@plt>
   3005c:	adrp	x8, 30000 <rl_set_signals@@Base+0x670>
   30060:	add	x10, sp, #0x130
   30064:	add	x8, x8, #0x140
   30068:	mov	w9, #0x10000000            	// #268435456
   3006c:	add	x0, x10, #0x8
   30070:	str	wzr, [sp, #288]
   30074:	str	x8, [sp, #304]
   30078:	str	w9, [sp, #440]
   3007c:	bl	16b10 <sigemptyset@plt>
   30080:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   30084:	add	x21, x21, #0xa68
   30088:	add	x0, x21, #0x8
   3008c:	bl	16b10 <sigemptyset@plt>
   30090:	add	x1, sp, #0x130
   30094:	sub	x2, x29, #0x98
   30098:	mov	w0, #0x1c                  	// #28
   3009c:	bl	16ec0 <sigaction@plt>
   300a0:	ldp	q0, q1, [x20, #96]
   300a4:	ldr	q2, [x20, #128]
   300a8:	ldur	x8, [x29, #-8]
   300ac:	stp	q0, q1, [x21, #96]
   300b0:	ldp	q0, q3, [x20, #32]
   300b4:	str	q2, [x21, #128]
   300b8:	str	x8, [x21, #144]
   300bc:	str	q0, [x21, #32]
   300c0:	ldp	q1, q0, [x20]
   300c4:	stp	q1, q0, [x21]
   300c8:	ldr	x9, [x21]
   300cc:	ldp	q1, q2, [x20, #64]
   300d0:	cmp	x9, #0x1
   300d4:	stp	q3, q1, [x21, #48]
   300d8:	str	q2, [x21, #80]
   300dc:	b.ne	300f4 <rl_set_signals@@Base+0x764>  // b.any
   300e0:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   300e4:	add	x1, x1, #0xa68
   300e8:	add	x2, sp, #0x98
   300ec:	mov	w0, #0x1c                  	// #28
   300f0:	bl	16ec0 <sigaction@plt>
   300f4:	mov	w8, #0x1                   	// #1
   300f8:	strb	w8, [x19, #2656]
   300fc:	mov	w0, wzr
   30100:	add	sp, sp, #0x260
   30104:	ldp	x20, x19, [sp, #48]
   30108:	ldp	x22, x21, [sp, #32]
   3010c:	ldr	x28, [sp, #16]
   30110:	ldp	x29, x30, [sp], #64
   30114:	ret
   30118:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3011c:	ldr	x8, [x8, #2096]
   30120:	ldr	w9, [x8]
   30124:	cbz	w9, 30130 <rl_set_signals@@Base+0x7a0>
   30128:	str	wzr, [x8]
   3012c:	b	2f7f8 <_rl_signal_handler@@Base+0x48>
   30130:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30134:	ldr	x8, [x8, #2808]
   30138:	str	w0, [x8]
   3013c:	ret
   30140:	stp	x29, x30, [sp, #-32]!
   30144:	str	x19, [sp, #16]
   30148:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3014c:	ldr	x19, [x19, #2984]
   30150:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30154:	mov	x29, sp
   30158:	ldr	x8, [x19]
   3015c:	ldr	x9, [x9, #2808]
   30160:	orr	x8, x8, #0x8000
   30164:	str	x8, [x19]
   30168:	str	w0, [x9]
   3016c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   30170:	ldr	x9, [x9, #2664]
   30174:	cmp	x9, #0x2
   30178:	b.cc	30184 <rl_set_signals@@Base+0x7f4>  // b.lo, b.ul, b.last
   3017c:	blr	x9
   30180:	ldr	x8, [x19]
   30184:	and	x8, x8, #0xffffffffffff7fff
   30188:	str	x8, [x19]
   3018c:	ldr	x19, [sp, #16]
   30190:	ldp	x29, x30, [sp], #32
   30194:	ret

0000000000030198 <rl_clear_signals@@Base>:
   30198:	sub	sp, sp, #0xc0
   3019c:	stp	x29, x30, [sp, #160]
   301a0:	stp	x20, x19, [sp, #176]
   301a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   301a8:	ldr	x8, [x8, #3872]
   301ac:	add	x29, sp, #0xa0
   301b0:	ldr	w8, [x8]
   301b4:	cbz	w8, 30368 <rl_clear_signals@@Base+0x1d0>
   301b8:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   301bc:	ldrb	w8, [x20, #1432]
   301c0:	cbz	w8, 30368 <rl_clear_signals@@Base+0x1d0>
   301c4:	add	x8, sp, #0x8
   301c8:	add	x19, x8, #0x8
   301cc:	mov	x0, x19
   301d0:	bl	16b10 <sigemptyset@plt>
   301d4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   301d8:	ldr	x8, [x8, #1440]
   301dc:	str	wzr, [sp, #144]
   301e0:	cmp	x8, #0x1
   301e4:	b.eq	301fc <rl_clear_signals@@Base+0x64>  // b.none
   301e8:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   301ec:	add	x1, x1, #0x5a0
   301f0:	add	x2, sp, #0x8
   301f4:	mov	w0, #0x2                   	// #2
   301f8:	bl	16ec0 <sigaction@plt>
   301fc:	mov	x0, x19
   30200:	bl	16b10 <sigemptyset@plt>
   30204:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30208:	ldr	x8, [x8, #1592]
   3020c:	str	wzr, [sp, #144]
   30210:	cmp	x8, #0x1
   30214:	b.eq	3022c <rl_clear_signals@@Base+0x94>  // b.none
   30218:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   3021c:	add	x1, x1, #0x638
   30220:	add	x2, sp, #0x8
   30224:	mov	w0, #0xf                   	// #15
   30228:	bl	16ec0 <sigaction@plt>
   3022c:	add	x8, sp, #0x8
   30230:	add	x19, x8, #0x8
   30234:	mov	x0, x19
   30238:	bl	16b10 <sigemptyset@plt>
   3023c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30240:	ldr	x8, [x8, #1744]
   30244:	str	wzr, [sp, #144]
   30248:	cmp	x8, #0x1
   3024c:	b.eq	30264 <rl_clear_signals@@Base+0xcc>  // b.none
   30250:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   30254:	add	x1, x1, #0x6d0
   30258:	add	x2, sp, #0x8
   3025c:	mov	w0, #0x1                   	// #1
   30260:	bl	16ec0 <sigaction@plt>
   30264:	mov	x0, x19
   30268:	bl	16b10 <sigemptyset@plt>
   3026c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30270:	ldr	x8, [x8, #1896]
   30274:	str	wzr, [sp, #144]
   30278:	cmp	x8, #0x1
   3027c:	b.eq	30294 <rl_clear_signals@@Base+0xfc>  // b.none
   30280:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   30284:	add	x1, x1, #0x768
   30288:	add	x2, sp, #0x8
   3028c:	mov	w0, #0x3                   	// #3
   30290:	bl	16ec0 <sigaction@plt>
   30294:	add	x8, sp, #0x8
   30298:	add	x19, x8, #0x8
   3029c:	mov	x0, x19
   302a0:	bl	16b10 <sigemptyset@plt>
   302a4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   302a8:	ldr	x8, [x8, #2048]
   302ac:	str	wzr, [sp, #144]
   302b0:	cmp	x8, #0x1
   302b4:	b.eq	302cc <rl_clear_signals@@Base+0x134>  // b.none
   302b8:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   302bc:	add	x1, x1, #0x800
   302c0:	add	x2, sp, #0x8
   302c4:	mov	w0, #0xe                   	// #14
   302c8:	bl	16ec0 <sigaction@plt>
   302cc:	mov	x0, x19
   302d0:	bl	16b10 <sigemptyset@plt>
   302d4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   302d8:	ldr	x8, [x8, #2200]
   302dc:	str	wzr, [sp, #144]
   302e0:	cmp	x8, #0x1
   302e4:	b.eq	302fc <rl_clear_signals@@Base+0x164>  // b.none
   302e8:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   302ec:	add	x1, x1, #0x898
   302f0:	add	x2, sp, #0x8
   302f4:	mov	w0, #0x14                  	// #20
   302f8:	bl	16ec0 <sigaction@plt>
   302fc:	add	x8, sp, #0x8
   30300:	add	x19, x8, #0x8
   30304:	mov	x0, x19
   30308:	bl	16b10 <sigemptyset@plt>
   3030c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30310:	ldr	x8, [x8, #2352]
   30314:	str	wzr, [sp, #144]
   30318:	cmp	x8, #0x1
   3031c:	b.eq	30334 <rl_clear_signals@@Base+0x19c>  // b.none
   30320:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   30324:	add	x1, x1, #0x930
   30328:	add	x2, sp, #0x8
   3032c:	mov	w0, #0x16                  	// #22
   30330:	bl	16ec0 <sigaction@plt>
   30334:	mov	x0, x19
   30338:	bl	16b10 <sigemptyset@plt>
   3033c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30340:	ldr	x8, [x8, #2504]
   30344:	str	wzr, [sp, #144]
   30348:	cmp	x8, #0x1
   3034c:	b.eq	30364 <rl_clear_signals@@Base+0x1cc>  // b.none
   30350:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   30354:	add	x1, x1, #0x9c8
   30358:	add	x2, sp, #0x8
   3035c:	mov	w0, #0x15                  	// #21
   30360:	bl	16ec0 <sigaction@plt>
   30364:	strb	wzr, [x20, #1432]
   30368:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3036c:	ldr	x8, [x8, #3696]
   30370:	ldr	w8, [x8]
   30374:	cbz	w8, 303a8 <rl_clear_signals@@Base+0x210>
   30378:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   3037c:	ldrb	w8, [x19, #2656]
   30380:	cbz	w8, 303a8 <rl_clear_signals@@Base+0x210>
   30384:	add	x8, sp, #0x8
   30388:	add	x0, x8, #0x8
   3038c:	bl	16b10 <sigemptyset@plt>
   30390:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   30394:	add	x1, x1, #0xa68
   30398:	add	x2, sp, #0x8
   3039c:	mov	w0, #0x1c                  	// #28
   303a0:	bl	16ec0 <sigaction@plt>
   303a4:	strb	wzr, [x19, #2656]
   303a8:	ldp	x20, x19, [sp, #176]
   303ac:	ldp	x29, x30, [sp, #160]
   303b0:	mov	w0, wzr
   303b4:	add	sp, sp, #0xc0
   303b8:	ret

00000000000303bc <rl_cleanup_after_signal@@Base>:
   303bc:	stp	x29, x30, [sp, #-16]!
   303c0:	mov	x29, sp
   303c4:	bl	16410 <_rl_clean_up_for_exit@plt>
   303c8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   303cc:	ldr	x8, [x8, #3840]
   303d0:	ldr	x8, [x8]
   303d4:	cbz	x8, 303dc <rl_cleanup_after_signal@@Base+0x20>
   303d8:	blr	x8
   303dc:	bl	168b0 <rl_clear_pending_input@plt>
   303e0:	ldp	x29, x30, [sp], #16
   303e4:	b	175e0 <rl_clear_signals@plt>

00000000000303e8 <rl_reset_after_signal@@Base>:
   303e8:	stp	x29, x30, [sp, #-16]!
   303ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   303f0:	ldr	x8, [x8, #3560]
   303f4:	mov	x29, sp
   303f8:	ldr	x8, [x8]
   303fc:	cbz	x8, 30410 <rl_reset_after_signal@@Base+0x28>
   30400:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30404:	ldr	x9, [x9, #3352]
   30408:	ldr	w0, [x9]
   3040c:	blr	x8
   30410:	ldp	x29, x30, [sp], #16
   30414:	b	16e70 <rl_set_signals@plt>

0000000000030418 <rl_free_line_state@@Base>:
   30418:	stp	x29, x30, [sp, #-16]!
   3041c:	mov	x29, sp
   30420:	bl	17550 <rl_free_undo_list@plt>
   30424:	bl	16a60 <current_history@plt>
   30428:	cbz	x0, 30430 <rl_free_line_state@@Base+0x18>
   3042c:	str	xzr, [x0, #16]
   30430:	bl	166a0 <_rl_kill_kbd_macro@plt>
   30434:	bl	17420 <rl_clear_message@plt>
   30438:	ldp	x29, x30, [sp], #16
   3043c:	b	17500 <_rl_reset_argument@plt>

0000000000030440 <rl_pending_signal@@Base>:
   30440:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30444:	ldr	x8, [x8, #2808]
   30448:	ldr	w0, [x8]
   3044c:	ret

0000000000030450 <rl_check_signals@@Base>:
   30450:	stp	x29, x30, [sp, #-16]!
   30454:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30458:	ldr	x8, [x8, #2808]
   3045c:	mov	x29, sp
   30460:	ldr	w9, [x8]
   30464:	cbz	w9, 30494 <rl_check_signals@@Base+0x44>
   30468:	ldr	w0, [x8]
   3046c:	str	wzr, [x8]
   30470:	cmp	w0, #0x1c
   30474:	b.ne	3049c <rl_check_signals@@Base+0x4c>  // b.any
   30478:	bl	179b0 <rl_resize_terminal@plt>
   3047c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30480:	ldr	x8, [x8, #2440]
   30484:	ldr	x0, [x8]
   30488:	cbz	x0, 30494 <rl_check_signals@@Base+0x44>
   3048c:	ldp	x29, x30, [sp], #16
   30490:	br	x0
   30494:	ldp	x29, x30, [sp], #16
   30498:	ret
   3049c:	ldp	x29, x30, [sp], #16
   304a0:	b	2f7f8 <_rl_signal_handler@@Base+0x48>

00000000000304a4 <_rl_block_sigint@@Base>:
   304a4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   304a8:	ldrb	w9, [x8, #2816]
   304ac:	tbnz	w9, #0, 304b8 <_rl_block_sigint@@Base+0x14>
   304b0:	mov	w9, #0x1                   	// #1
   304b4:	strb	w9, [x8, #2816]
   304b8:	ret

00000000000304bc <_rl_release_sigint@@Base>:
   304bc:	stp	x29, x30, [sp, #-16]!
   304c0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   304c4:	ldrb	w9, [x8, #2816]
   304c8:	mov	x29, sp
   304cc:	cmp	w9, #0x1
   304d0:	b.ne	30514 <_rl_release_sigint@@Base+0x58>  // b.any
   304d4:	strb	wzr, [x8, #2816]
   304d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   304dc:	ldr	x8, [x8, #2808]
   304e0:	ldr	w9, [x8]
   304e4:	cbz	w9, 30514 <_rl_release_sigint@@Base+0x58>
   304e8:	ldr	w0, [x8]
   304ec:	str	wzr, [x8]
   304f0:	cmp	w0, #0x1c
   304f4:	b.ne	3051c <_rl_release_sigint@@Base+0x60>  // b.any
   304f8:	bl	179b0 <rl_resize_terminal@plt>
   304fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30500:	ldr	x8, [x8, #2440]
   30504:	ldr	x0, [x8]
   30508:	cbz	x0, 30514 <_rl_release_sigint@@Base+0x58>
   3050c:	ldp	x29, x30, [sp], #16
   30510:	br	x0
   30514:	ldp	x29, x30, [sp], #16
   30518:	ret
   3051c:	ldp	x29, x30, [sp], #16
   30520:	b	2f7f8 <_rl_signal_handler@@Base+0x48>

0000000000030524 <_rl_block_sigwinch@@Base>:
   30524:	stp	x29, x30, [sp, #-48]!
   30528:	str	x21, [sp, #16]
   3052c:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   30530:	ldrb	w8, [x21, #2820]
   30534:	stp	x20, x19, [sp, #32]
   30538:	mov	x29, sp
   3053c:	tbnz	w8, #0, 30584 <_rl_block_sigwinch@@Base+0x60>
   30540:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   30544:	add	x19, x19, #0xb08
   30548:	mov	x0, x19
   3054c:	bl	16b10 <sigemptyset@plt>
   30550:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   30554:	add	x20, x20, #0xb88
   30558:	mov	x0, x20
   3055c:	bl	16b10 <sigemptyset@plt>
   30560:	mov	w1, #0x1c                  	// #28
   30564:	mov	x0, x19
   30568:	bl	17750 <sigaddset@plt>
   3056c:	mov	w0, wzr
   30570:	mov	x1, x19
   30574:	mov	x2, x20
   30578:	bl	16560 <sigprocmask@plt>
   3057c:	mov	w8, #0x1                   	// #1
   30580:	strb	w8, [x21, #2820]
   30584:	ldp	x20, x19, [sp, #32]
   30588:	ldr	x21, [sp, #16]
   3058c:	ldp	x29, x30, [sp], #48
   30590:	ret

0000000000030594 <_rl_release_sigwinch@@Base>:
   30594:	stp	x29, x30, [sp, #-32]!
   30598:	str	x19, [sp, #16]
   3059c:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   305a0:	ldrb	w8, [x19, #2820]
   305a4:	mov	x29, sp
   305a8:	cmp	w8, #0x1
   305ac:	b.ne	305c8 <_rl_release_sigwinch@@Base+0x34>  // b.any
   305b0:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   305b4:	add	x1, x1, #0xb88
   305b8:	mov	w0, #0x2                   	// #2
   305bc:	mov	x2, xzr
   305c0:	bl	16560 <sigprocmask@plt>
   305c4:	strb	wzr, [x19, #2820]
   305c8:	ldr	x19, [sp, #16]
   305cc:	ldp	x29, x30, [sp], #32
   305d0:	ret

00000000000305d4 <rl_echo_signal_char@@Base>:
   305d4:	stp	x29, x30, [sp, #-32]!
   305d8:	str	x19, [sp, #16]
   305dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   305e0:	ldr	x8, [x8, #2312]
   305e4:	mov	x29, sp
   305e8:	ldr	w8, [x8]
   305ec:	cbz	w8, 306b8 <rl_echo_signal_char@@Base+0xe4>
   305f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   305f4:	ldr	x8, [x8, #3712]
   305f8:	ldr	w8, [x8]
   305fc:	cbz	w8, 306b8 <rl_echo_signal_char@@Base+0xe4>
   30600:	cmp	w0, #0x2
   30604:	b.eq	30624 <rl_echo_signal_char@@Base+0x50>  // b.none
   30608:	cmp	w0, #0x14
   3060c:	b.eq	30630 <rl_echo_signal_char@@Base+0x5c>  // b.none
   30610:	cmp	w0, #0x3
   30614:	b.ne	306b8 <rl_echo_signal_char@@Base+0xe4>  // b.any
   30618:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3061c:	ldr	x8, [x8, #3776]
   30620:	b	30638 <rl_echo_signal_char@@Base+0x64>
   30624:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30628:	ldr	x8, [x8, #1920]
   3062c:	b	30638 <rl_echo_signal_char@@Base+0x64>
   30630:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30634:	ldr	x8, [x8, #2168]
   30638:	ldr	w19, [x8]
   3063c:	cmp	w19, #0x20
   30640:	cset	w8, lt  // lt = tstop
   30644:	tst	w19, #0x80
   30648:	cset	w9, eq  // eq = none
   3064c:	cmp	w19, #0x7f
   30650:	and	w8, w8, w9
   30654:	b.eq	3066c <rl_echo_signal_char@@Base+0x98>  // b.none
   30658:	cbnz	w8, 3066c <rl_echo_signal_char@@Base+0x98>
   3065c:	mov	w1, #0x1                   	// #1
   30660:	strb	w19, [x29, #28]
   30664:	strb	wzr, [x29, #29]
   30668:	b	306b0 <rl_echo_signal_char@@Base+0xdc>
   3066c:	mov	w9, #0x5e                  	// #94
   30670:	strb	w9, [x29, #28]
   30674:	cbz	w8, 306a0 <rl_echo_signal_char@@Base+0xcc>
   30678:	bl	17100 <__ctype_b_loc@plt>
   3067c:	ldr	x9, [x0]
   30680:	orr	x8, x19, #0x40
   30684:	and	x19, x8, #0xff
   30688:	ldrh	w9, [x9, x19, lsl #1]
   3068c:	tbz	w9, #9, 306a4 <rl_echo_signal_char@@Base+0xd0>
   30690:	bl	16dc0 <__ctype_toupper_loc@plt>
   30694:	ldr	x8, [x0]
   30698:	ldr	w8, [x8, x19, lsl #2]
   3069c:	b	306a4 <rl_echo_signal_char@@Base+0xd0>
   306a0:	mov	w8, #0x3f                  	// #63
   306a4:	strb	w8, [x29, #29]
   306a8:	strb	wzr, [x29, #30]
   306ac:	mov	w1, #0x2                   	// #2
   306b0:	add	x0, x29, #0x1c
   306b4:	bl	16d10 <_rl_output_some_chars@plt>
   306b8:	ldr	x19, [sp, #16]
   306bc:	ldp	x29, x30, [sp], #32
   306c0:	ret

00000000000306c4 <rl_alphabetic@@Base>:
   306c4:	stp	x29, x30, [sp, #-32]!
   306c8:	str	x19, [sp, #16]
   306cc:	mov	x29, sp
   306d0:	mov	w19, w0
   306d4:	bl	17100 <__ctype_b_loc@plt>
   306d8:	ldr	x8, [x0]
   306dc:	and	w9, w19, #0xff
   306e0:	ldrh	w8, [x8, w9, uxtw #1]
   306e4:	tbnz	w8, #3, 30718 <rl_alphabetic@@Base+0x54>
   306e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   306ec:	ldr	x8, [x8, #2712]
   306f0:	ldr	w8, [x8]
   306f4:	cbz	w8, 30720 <rl_alphabetic@@Base+0x5c>
   306f8:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   306fc:	add	x0, x0, #0xe3e
   30700:	mov	w2, #0x9                   	// #9
   30704:	mov	w1, w19
   30708:	bl	17530 <memchr@plt>
   3070c:	cmp	x0, #0x0
   30710:	cset	w0, ne  // ne = any
   30714:	b	30724 <rl_alphabetic@@Base+0x60>
   30718:	mov	w0, #0x1                   	// #1
   3071c:	b	30724 <rl_alphabetic@@Base+0x60>
   30720:	mov	w0, wzr
   30724:	ldr	x19, [sp, #16]
   30728:	ldp	x29, x30, [sp], #32
   3072c:	ret

0000000000030730 <_rl_walphabetic@@Base>:
   30730:	stp	x29, x30, [sp, #-32]!
   30734:	str	x19, [sp, #16]
   30738:	mov	x29, sp
   3073c:	mov	w19, w0
   30740:	bl	17630 <iswalnum@plt>
   30744:	cbz	w0, 30750 <_rl_walphabetic@@Base+0x20>
   30748:	mov	w0, #0x1                   	// #1
   3074c:	b	30784 <_rl_walphabetic@@Base+0x54>
   30750:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30754:	ldr	x8, [x8, #2712]
   30758:	ldr	w8, [x8]
   3075c:	cbz	w8, 30780 <_rl_walphabetic@@Base+0x50>
   30760:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   30764:	and	w1, w19, #0x7f
   30768:	add	x0, x0, #0xe3e
   3076c:	mov	w2, #0x9                   	// #9
   30770:	bl	17530 <memchr@plt>
   30774:	cmp	x0, #0x0
   30778:	cset	w0, ne  // ne = any
   3077c:	b	30784 <_rl_walphabetic@@Base+0x54>
   30780:	mov	w0, wzr
   30784:	ldr	x19, [sp, #16]
   30788:	ldp	x29, x30, [sp], #32
   3078c:	ret

0000000000030790 <_rl_abort_internal@@Base>:
   30790:	stp	x29, x30, [sp, #-32]!
   30794:	stp	x20, x19, [sp, #16]
   30798:	mov	x29, sp
   3079c:	bl	17390 <rl_ding@plt>
   307a0:	bl	17420 <rl_clear_message@plt>
   307a4:	bl	17500 <_rl_reset_argument@plt>
   307a8:	bl	168b0 <rl_clear_pending_input@plt>
   307ac:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   307b0:	ldr	x19, [x19, #2984]
   307b4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   307b8:	ldr	x8, [x19]
   307bc:	ldr	x20, [x20, #3488]
   307c0:	and	x8, x8, #0xffffffffffffefff
   307c4:	ldr	x9, [x20]
   307c8:	str	x8, [x19]
   307cc:	cbz	x9, 307e0 <_rl_abort_internal@@Base+0x50>
   307d0:	bl	16f80 <_rl_pop_executing_macro@plt>
   307d4:	ldr	x8, [x20]
   307d8:	cbnz	x8, 307d0 <_rl_abort_internal@@Base+0x40>
   307dc:	ldr	x8, [x19]
   307e0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   307e4:	ldr	x9, [x9, #2072]
   307e8:	and	x8, x8, #0xffffffffffdfffff
   307ec:	str	x8, [x19]
   307f0:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   307f4:	str	xzr, [x9]
   307f8:	ldr	x0, [x0, #2816]
   307fc:	mov	w1, #0x1                   	// #1
   30800:	bl	172f0 <siglongjmp@plt>

0000000000030804 <rl_abort@@Base>:
   30804:	stp	x29, x30, [sp, #-16]!
   30808:	mov	x29, sp
   3080c:	bl	174a0 <_rl_abort_internal@plt>

0000000000030810 <_rl_null_function@@Base>:
   30810:	mov	w0, wzr
   30814:	ret

0000000000030818 <rl_tty_status@@Base>:
   30818:	stp	x29, x30, [sp, #-16]!
   3081c:	mov	x29, sp
   30820:	bl	17390 <rl_ding@plt>
   30824:	mov	w0, wzr
   30828:	ldp	x29, x30, [sp], #16
   3082c:	ret

0000000000030830 <rl_copy_text@@Base>:
   30830:	stp	x29, x30, [sp, #-32]!
   30834:	cmp	w0, w1
   30838:	csel	w8, w0, w1, gt
   3083c:	csel	w9, w1, w0, gt
   30840:	stp	x20, x19, [sp, #16]
   30844:	sxtw	x8, w8
   30848:	sxtw	x20, w9
   3084c:	sub	x19, x8, x20
   30850:	add	w8, w19, #0x1
   30854:	sxtw	x0, w8
   30858:	mov	x29, sp
   3085c:	bl	16bf0 <xmalloc@plt>
   30860:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30864:	ldr	x8, [x8, #2480]
   30868:	mov	x2, x19
   3086c:	ldr	x8, [x8]
   30870:	add	x1, x8, x20
   30874:	bl	17730 <strncpy@plt>
   30878:	strb	wzr, [x0, x19]
   3087c:	ldp	x20, x19, [sp, #16]
   30880:	ldp	x29, x30, [sp], #32
   30884:	ret

0000000000030888 <rl_extend_line_buffer@@Base>:
   30888:	stp	x29, x30, [sp, #-48]!
   3088c:	str	x21, [sp, #16]
   30890:	stp	x20, x19, [sp, #32]
   30894:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30898:	ldr	x20, [x20, #3808]
   3089c:	mov	x29, sp
   308a0:	ldr	w8, [x20]
   308a4:	cmp	w8, w0
   308a8:	b.gt	308dc <rl_extend_line_buffer@@Base+0x54>
   308ac:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   308b0:	ldr	x21, [x21, #2480]
   308b4:	mov	w19, w0
   308b8:	ldr	x0, [x21]
   308bc:	add	w8, w8, #0x100
   308c0:	sxtw	x1, w8
   308c4:	str	w8, [x20]
   308c8:	bl	16a50 <xrealloc@plt>
   308cc:	ldr	w8, [x20]
   308d0:	str	x0, [x21]
   308d4:	cmp	w8, w19
   308d8:	b.le	308bc <rl_extend_line_buffer@@Base+0x34>
   308dc:	ldp	x20, x19, [sp, #32]
   308e0:	ldr	x21, [sp, #16]
   308e4:	ldp	x29, x30, [sp], #48
   308e8:	b	16c50 <_rl_set_the_line@plt>

00000000000308ec <rl_tilde_expand@@Base>:
   308ec:	stp	x29, x30, [sp, #-64]!
   308f0:	stp	x24, x23, [sp, #16]
   308f4:	stp	x22, x21, [sp, #32]
   308f8:	stp	x20, x19, [sp, #48]
   308fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30900:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30904:	ldr	x8, [x8, #3512]
   30908:	ldr	x9, [x9, #2656]
   3090c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30910:	mov	x29, sp
   30914:	ldr	w19, [x8]
   30918:	ldrsw	x8, [x9]
   3091c:	ldr	x21, [x21, #2480]
   30920:	sub	w20, w19, #0x1
   30924:	cmp	w19, w8
   30928:	b.ne	30958 <rl_tilde_expand@@Base+0x6c>  // b.any
   3092c:	ldr	x9, [x21]
   30930:	sxtw	x10, w19
   30934:	ldrb	w9, [x9, x10]
   30938:	cmp	w9, #0x7e
   3093c:	b.ne	30958 <rl_tilde_expand@@Base+0x6c>  // b.any
   30940:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   30944:	add	x0, x0, #0x182
   30948:	bl	176f0 <tilde_expand@plt>
   3094c:	mov	x21, x0
   30950:	mov	w1, w20
   30954:	b	30a08 <rl_tilde_expand@@Base+0x11c>
   30958:	ldr	x9, [x21]
   3095c:	cmp	w19, #0x1
   30960:	b.lt	30970 <rl_tilde_expand@@Base+0x84>  // b.tstop
   30964:	ldrb	w10, [x9, w20, sxtw]
   30968:	cmp	w10, #0x7e
   3096c:	b.ne	30a30 <rl_tilde_expand@@Base+0x144>  // b.any
   30970:	cmp	w19, #0x0
   30974:	csel	w19, w20, wzr, gt
   30978:	sxtw	x23, w19
   3097c:	add	x11, x23, #0x1
   30980:	mov	x13, xzr
   30984:	mov	w20, w19
   30988:	add	x12, x9, x11
   3098c:	mov	x10, x13
   30990:	add	x13, x11, x13
   30994:	cmp	x13, x8
   30998:	b.ge	309b4 <rl_tilde_expand@@Base+0xc8>  // b.tcont
   3099c:	ldrb	w13, [x12, x10]
   309a0:	cmp	w13, #0x20
   309a4:	b.eq	309b4 <rl_tilde_expand@@Base+0xc8>  // b.none
   309a8:	cmp	w13, #0x9
   309ac:	add	x13, x10, #0x1
   309b0:	b.ne	3098c <rl_tilde_expand@@Base+0xa0>  // b.any
   309b4:	ldrb	w8, [x9, x23]
   309b8:	cmp	w8, #0x7e
   309bc:	b.ne	30a18 <rl_tilde_expand@@Base+0x12c>  // b.any
   309c0:	add	w8, w10, #0x2
   309c4:	sxtw	x0, w8
   309c8:	add	x19, x20, x10
   309cc:	add	w24, w10, #0x1
   309d0:	bl	16bf0 <xmalloc@plt>
   309d4:	ldr	x8, [x21]
   309d8:	sxtw	x21, w24
   309dc:	mov	x2, x21
   309e0:	mov	x22, x0
   309e4:	add	x1, x8, x23
   309e8:	bl	17730 <strncpy@plt>
   309ec:	strb	wzr, [x0, x21]
   309f0:	bl	176f0 <tilde_expand@plt>
   309f4:	mov	x21, x0
   309f8:	mov	x0, x22
   309fc:	bl	169f0 <xfree@plt>
   30a00:	mov	x0, x21
   30a04:	mov	w1, w20
   30a08:	mov	w2, w19
   30a0c:	bl	175d0 <_rl_replace_text@plt>
   30a10:	mov	x0, x21
   30a14:	bl	169f0 <xfree@plt>
   30a18:	ldp	x20, x19, [sp, #48]
   30a1c:	ldp	x22, x21, [sp, #32]
   30a20:	ldp	x24, x23, [sp, #16]
   30a24:	mov	w0, wzr
   30a28:	ldp	x29, x30, [sp], #64
   30a2c:	ret
   30a30:	mov	w10, w20
   30a34:	ldrb	w11, [x9, x10]
   30a38:	cmp	w11, #0x9
   30a3c:	b.eq	30978 <rl_tilde_expand@@Base+0x8c>  // b.none
   30a40:	cmp	w11, #0x20
   30a44:	b.eq	30978 <rl_tilde_expand@@Base+0x8c>  // b.none
   30a48:	cmp	x10, #0x0
   30a4c:	sub	x10, x10, #0x1
   30a50:	sub	w19, w19, #0x1
   30a54:	b.gt	30a34 <rl_tilde_expand@@Base+0x148>
   30a58:	mov	w19, wzr
   30a5c:	b	30978 <rl_tilde_expand@@Base+0x8c>

0000000000030a60 <_rl_ttymsg@@Base>:
   30a60:	sub	sp, sp, #0x130
   30a64:	stp	x29, x30, [sp, #256]
   30a68:	add	x29, sp, #0x100
   30a6c:	str	x28, [sp, #272]
   30a70:	stp	x20, x19, [sp, #288]
   30a74:	stp	x1, x2, [x29, #-120]
   30a78:	stp	x3, x4, [x29, #-104]
   30a7c:	stp	x5, x6, [x29, #-88]
   30a80:	stur	x7, [x29, #-72]
   30a84:	stp	q0, q1, [sp]
   30a88:	stp	q2, q3, [sp, #32]
   30a8c:	stp	q4, q5, [sp, #64]
   30a90:	stp	q6, q7, [sp, #96]
   30a94:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30a98:	ldr	x20, [x20, #2208]
   30a9c:	mov	x8, #0xffffffffffffffc8    	// #-56
   30aa0:	mov	x9, sp
   30aa4:	mov	x19, x0
   30aa8:	ldr	x3, [x20]
   30aac:	movk	x8, #0xff80, lsl #32
   30ab0:	sub	x10, x29, #0x78
   30ab4:	add	x9, x9, #0x80
   30ab8:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   30abc:	add	x10, x10, #0x38
   30ac0:	stp	x9, x8, [x29, #-16]
   30ac4:	add	x8, x29, #0x30
   30ac8:	add	x0, x0, #0x98c
   30acc:	mov	w1, #0xa                   	// #10
   30ad0:	mov	w2, #0x1                   	// #1
   30ad4:	stp	x8, x10, [x29, #-32]
   30ad8:	bl	173e0 <fwrite@plt>
   30adc:	ldp	q0, q1, [x29, #-32]
   30ae0:	ldr	x0, [x20]
   30ae4:	sub	x2, x29, #0x40
   30ae8:	mov	x1, x19
   30aec:	stp	q0, q1, [x29, #-64]
   30af0:	bl	177c0 <vfprintf@plt>
   30af4:	ldr	x1, [x20]
   30af8:	mov	w0, #0xa                   	// #10
   30afc:	bl	166d0 <fputc@plt>
   30b00:	ldr	x0, [x20]
   30b04:	bl	17430 <fflush@plt>
   30b08:	bl	164d0 <rl_forced_update_display@plt>
   30b0c:	ldp	x20, x19, [sp, #288]
   30b10:	ldr	x28, [sp, #272]
   30b14:	ldp	x29, x30, [sp, #256]
   30b18:	add	sp, sp, #0x130
   30b1c:	ret

0000000000030b20 <_rl_errmsg@@Base>:
   30b20:	sub	sp, sp, #0x130
   30b24:	stp	x29, x30, [sp, #256]
   30b28:	add	x29, sp, #0x100
   30b2c:	str	x28, [sp, #272]
   30b30:	stp	x20, x19, [sp, #288]
   30b34:	stp	x1, x2, [x29, #-120]
   30b38:	stp	x3, x4, [x29, #-104]
   30b3c:	stp	x5, x6, [x29, #-88]
   30b40:	stur	x7, [x29, #-72]
   30b44:	stp	q0, q1, [sp]
   30b48:	stp	q2, q3, [sp, #32]
   30b4c:	stp	q4, q5, [sp, #64]
   30b50:	stp	q6, q7, [sp, #96]
   30b54:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30b58:	ldr	x20, [x20, #2208]
   30b5c:	mov	x8, #0xffffffffffffffc8    	// #-56
   30b60:	mov	x9, sp
   30b64:	mov	x19, x0
   30b68:	ldr	x3, [x20]
   30b6c:	movk	x8, #0xff80, lsl #32
   30b70:	sub	x10, x29, #0x78
   30b74:	add	x9, x9, #0x80
   30b78:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   30b7c:	add	x10, x10, #0x38
   30b80:	stp	x9, x8, [x29, #-16]
   30b84:	add	x8, x29, #0x30
   30b88:	add	x0, x0, #0x98c
   30b8c:	mov	w1, #0xa                   	// #10
   30b90:	mov	w2, #0x1                   	// #1
   30b94:	stp	x8, x10, [x29, #-32]
   30b98:	bl	173e0 <fwrite@plt>
   30b9c:	ldp	q0, q1, [x29, #-32]
   30ba0:	ldr	x0, [x20]
   30ba4:	sub	x2, x29, #0x40
   30ba8:	mov	x1, x19
   30bac:	stp	q0, q1, [x29, #-64]
   30bb0:	bl	177c0 <vfprintf@plt>
   30bb4:	ldr	x1, [x20]
   30bb8:	mov	w0, #0xa                   	// #10
   30bbc:	bl	166d0 <fputc@plt>
   30bc0:	ldr	x0, [x20]
   30bc4:	bl	17430 <fflush@plt>
   30bc8:	ldp	x20, x19, [sp, #288]
   30bcc:	ldr	x28, [sp, #272]
   30bd0:	ldp	x29, x30, [sp, #256]
   30bd4:	add	sp, sp, #0x130
   30bd8:	ret

0000000000030bdc <_rl_strindex@@Base>:
   30bdc:	stp	x29, x30, [sp, #-64]!
   30be0:	stp	x20, x19, [sp, #48]
   30be4:	mov	x19, x0
   30be8:	mov	x0, x1
   30bec:	str	x23, [sp, #16]
   30bf0:	stp	x22, x21, [sp, #32]
   30bf4:	mov	x29, sp
   30bf8:	mov	x20, x1
   30bfc:	bl	16440 <strlen@plt>
   30c00:	mov	x21, x0
   30c04:	mov	x0, x19
   30c08:	bl	16440 <strlen@plt>
   30c0c:	mov	x22, x0
   30c10:	cmp	w22, w21
   30c14:	b.lt	30c40 <_rl_strindex@@Base+0x64>  // b.tstop
   30c18:	sxtw	x23, w21
   30c1c:	mov	x0, x19
   30c20:	mov	x1, x20
   30c24:	mov	x2, x23
   30c28:	bl	172d0 <strncasecmp@plt>
   30c2c:	cbz	w0, 30c44 <_rl_strindex@@Base+0x68>
   30c30:	sub	w22, w22, #0x1
   30c34:	cmp	w22, w21
   30c38:	add	x19, x19, #0x1
   30c3c:	b.ge	30c1c <_rl_strindex@@Base+0x40>  // b.tcont
   30c40:	mov	x19, xzr
   30c44:	mov	x0, x19
   30c48:	ldp	x20, x19, [sp, #48]
   30c4c:	ldp	x22, x21, [sp, #32]
   30c50:	ldr	x23, [sp, #16]
   30c54:	ldp	x29, x30, [sp], #64
   30c58:	ret

0000000000030c5c <_rl_qsort_string_compare@@Base>:
   30c5c:	ldr	x0, [x0]
   30c60:	ldr	x1, [x1]
   30c64:	b	176e0 <strcoll@plt>

0000000000030c68 <_rl_digit_p@@Base>:
   30c68:	sub	w8, w0, #0x30
   30c6c:	cmp	w8, #0xa
   30c70:	cset	w0, cc  // cc = lo, ul, last
   30c74:	ret

0000000000030c78 <_rl_digit_value@@Base>:
   30c78:	sub	w0, w0, #0x30
   30c7c:	ret

0000000000030c80 <_rl_lowercase_p@@Base>:
   30c80:	stp	x29, x30, [sp, #-32]!
   30c84:	str	x19, [sp, #16]
   30c88:	mov	x29, sp
   30c8c:	mov	w19, w0
   30c90:	bl	17100 <__ctype_b_loc@plt>
   30c94:	ldr	x8, [x0]
   30c98:	and	w9, w19, #0xff
   30c9c:	ldr	x19, [sp, #16]
   30ca0:	ldrh	w8, [x8, w9, uxtw #1]
   30ca4:	ubfx	w0, w8, #9, #1
   30ca8:	ldp	x29, x30, [sp], #32
   30cac:	ret

0000000000030cb0 <_rl_pure_alphabetic@@Base>:
   30cb0:	stp	x29, x30, [sp, #-32]!
   30cb4:	str	x19, [sp, #16]
   30cb8:	mov	x29, sp
   30cbc:	mov	w19, w0
   30cc0:	bl	17100 <__ctype_b_loc@plt>
   30cc4:	ldr	x8, [x0]
   30cc8:	and	w9, w19, #0xff
   30ccc:	ldr	x19, [sp, #16]
   30cd0:	ldrh	w8, [x8, w9, uxtw #1]
   30cd4:	ubfx	w0, w8, #10, #1
   30cd8:	ldp	x29, x30, [sp], #32
   30cdc:	ret

0000000000030ce0 <_rl_to_lower@@Base>:
   30ce0:	stp	x29, x30, [sp, #-32]!
   30ce4:	stp	x20, x19, [sp, #16]
   30ce8:	mov	x29, sp
   30cec:	mov	w19, w0
   30cf0:	bl	17100 <__ctype_b_loc@plt>
   30cf4:	ldr	x8, [x0]
   30cf8:	and	w20, w19, #0xff
   30cfc:	ldrh	w8, [x8, w20, uxtw #1]
   30d00:	tbz	w8, #8, 30d10 <_rl_to_lower@@Base+0x30>
   30d04:	bl	16810 <__ctype_tolower_loc@plt>
   30d08:	ldr	x8, [x0]
   30d0c:	ldr	w19, [x8, x20, lsl #2]
   30d10:	mov	w0, w19
   30d14:	ldp	x20, x19, [sp, #16]
   30d18:	ldp	x29, x30, [sp], #32
   30d1c:	ret

0000000000030d20 <_rl_to_upper@@Base>:
   30d20:	stp	x29, x30, [sp, #-32]!
   30d24:	stp	x20, x19, [sp, #16]
   30d28:	mov	x29, sp
   30d2c:	mov	w19, w0
   30d30:	bl	17100 <__ctype_b_loc@plt>
   30d34:	ldr	x8, [x0]
   30d38:	and	w20, w19, #0xff
   30d3c:	ldrh	w8, [x8, w20, uxtw #1]
   30d40:	tbz	w8, #9, 30d50 <_rl_to_upper@@Base+0x30>
   30d44:	bl	16dc0 <__ctype_toupper_loc@plt>
   30d48:	ldr	x8, [x0]
   30d4c:	ldr	w19, [x8, x20, lsl #2]
   30d50:	mov	w0, w19
   30d54:	ldp	x20, x19, [sp, #16]
   30d58:	ldp	x29, x30, [sp], #32
   30d5c:	ret

0000000000030d60 <_rl_uppercase_p@@Base>:
   30d60:	stp	x29, x30, [sp, #-32]!
   30d64:	str	x19, [sp, #16]
   30d68:	mov	x29, sp
   30d6c:	mov	w19, w0
   30d70:	bl	17100 <__ctype_b_loc@plt>
   30d74:	ldr	x8, [x0]
   30d78:	and	w9, w19, #0xff
   30d7c:	ldr	x19, [sp, #16]
   30d80:	ldrh	w8, [x8, w9, uxtw #1]
   30d84:	ubfx	w0, w8, #8, #1
   30d88:	ldp	x29, x30, [sp], #32
   30d8c:	ret

0000000000030d90 <rl_free@@Base>:
   30d90:	cbz	x0, 30d98 <rl_free@@Base+0x8>
   30d94:	b	171b0 <free@plt>
   30d98:	ret

0000000000030d9c <_rl_savestring@@Base>:
   30d9c:	stp	x29, x30, [sp, #-32]!
   30da0:	str	x19, [sp, #16]
   30da4:	mov	x29, sp
   30da8:	mov	x19, x0
   30dac:	bl	16440 <strlen@plt>
   30db0:	add	w8, w0, #0x1
   30db4:	sxtw	x0, w8
   30db8:	bl	16bf0 <xmalloc@plt>
   30dbc:	mov	x1, x19
   30dc0:	ldr	x19, [sp, #16]
   30dc4:	ldp	x29, x30, [sp], #32
   30dc8:	b	17480 <strcpy@plt>

0000000000030dcc <rl_set_retained_kills@@Base>:
   30dcc:	mov	w0, wzr
   30dd0:	ret

0000000000030dd4 <rl_kill_text@@Base>:
   30dd4:	stp	x29, x30, [sp, #-48]!
   30dd8:	cmp	w0, w1
   30ddc:	str	x21, [sp, #16]
   30de0:	stp	x20, x19, [sp, #32]
   30de4:	mov	x29, sp
   30de8:	b.eq	30e18 <rl_kill_text@@Base+0x44>  // b.none
   30dec:	mov	w19, w1
   30df0:	mov	w20, w0
   30df4:	bl	178e0 <rl_copy_text@plt>
   30df8:	mov	x21, x0
   30dfc:	mov	w0, w20
   30e00:	mov	w1, w19
   30e04:	bl	171c0 <rl_delete_text@plt>
   30e08:	cmp	w20, w19
   30e0c:	cset	w1, lt  // lt = tstop
   30e10:	mov	x0, x21
   30e14:	bl	30e40 <rl_kill_text@@Base+0x6c>
   30e18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30e1c:	ldr	x8, [x8, #2344]
   30e20:	ldp	x20, x19, [sp, #32]
   30e24:	ldr	x21, [sp, #16]
   30e28:	mov	w0, wzr
   30e2c:	ldr	w9, [x8]
   30e30:	add	w9, w9, #0x1
   30e34:	str	w9, [x8]
   30e38:	ldp	x29, x30, [sp], #48
   30e3c:	ret
   30e40:	stp	x29, x30, [sp, #-80]!
   30e44:	str	x25, [sp, #16]
   30e48:	stp	x24, x23, [sp, #32]
   30e4c:	stp	x22, x21, [sp, #48]
   30e50:	stp	x20, x19, [sp, #64]
   30e54:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30e58:	ldr	x21, [x21, #2344]
   30e5c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   30e60:	ldr	x8, [x23, #3088]
   30e64:	mov	w20, w1
   30e68:	ldr	w9, [x21]
   30e6c:	mov	x19, x0
   30e70:	mov	x29, sp
   30e74:	cbz	w9, 30e8c <rl_kill_text@@Base+0xb8>
   30e78:	cbz	x8, 30e8c <rl_kill_text@@Base+0xb8>
   30e7c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   30e80:	ldr	w9, [x9, #3100]
   30e84:	sub	w24, w9, #0x1
   30e88:	b	30f24 <rl_kill_text@@Base+0x150>
   30e8c:	cbz	x8, 30ed8 <rl_kill_text@@Base+0x104>
   30e90:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   30e94:	ldr	w24, [x9, #3100]
   30e98:	cmp	w24, #0xa
   30e9c:	b.ne	30f00 <rl_kill_text@@Base+0x12c>  // b.any
   30ea0:	ldr	x0, [x8]
   30ea4:	bl	169f0 <xfree@plt>
   30ea8:	ldr	x8, [x23, #3088]
   30eac:	mov	w24, #0x9                   	// #9
   30eb0:	ldur	q0, [x8, #8]
   30eb4:	ldur	q1, [x8, #24]
   30eb8:	ldur	q2, [x8, #40]
   30ebc:	ldur	q3, [x8, #56]
   30ec0:	ldur	q4, [x8, #72]
   30ec4:	stp	q0, q1, [x8]
   30ec8:	stp	q2, q3, [x8, #32]
   30ecc:	str	q4, [x8, #64]
   30ed0:	str	xzr, [x8, w24, sxtw #3]
   30ed4:	b	30f24 <rl_kill_text@@Base+0x150>
   30ed8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30edc:	mov	w9, #0x1                   	// #1
   30ee0:	mov	w0, #0x10                  	// #16
   30ee4:	str	w9, [x8, #3100]
   30ee8:	bl	16bf0 <xmalloc@plt>
   30eec:	mov	x8, x0
   30ef0:	mov	w24, wzr
   30ef4:	str	x0, [x23, #3088]
   30ef8:	str	xzr, [x0]
   30efc:	b	30f24 <rl_kill_text@@Base+0x150>
   30f00:	add	w11, w24, #0x2
   30f04:	add	w10, w24, #0x1
   30f08:	sbfiz	x1, x11, #3, #32
   30f0c:	mov	x0, x8
   30f10:	str	w10, [x9, #3100]
   30f14:	bl	16a50 <xrealloc@plt>
   30f18:	mov	x8, x0
   30f1c:	str	x0, [x23, #3088]
   30f20:	str	xzr, [x0, w24, sxtw #3]
   30f24:	ldr	w9, [x21]
   30f28:	sxtw	x25, w24
   30f2c:	cbz	w9, 30f80 <rl_kill_text@@Base+0x1ac>
   30f30:	ldr	x21, [x8, x25, lsl #3]
   30f34:	cbz	x21, 30f80 <rl_kill_text@@Base+0x1ac>
   30f38:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30f3c:	ldr	x9, [x9, #3416]
   30f40:	ldr	w9, [x9]
   30f44:	cbz	w9, 30f80 <rl_kill_text@@Base+0x1ac>
   30f48:	mov	x0, x21
   30f4c:	bl	16440 <strlen@plt>
   30f50:	mov	x22, x0
   30f54:	mov	x0, x19
   30f58:	bl	16440 <strlen@plt>
   30f5c:	add	x8, x22, x0
   30f60:	add	x0, x8, #0x1
   30f64:	bl	16bf0 <xmalloc@plt>
   30f68:	mov	x22, x0
   30f6c:	cbz	w20, 30f88 <rl_kill_text@@Base+0x1b4>
   30f70:	mov	x1, x21
   30f74:	bl	17480 <strcpy@plt>
   30f78:	mov	x1, x19
   30f7c:	b	30f94 <rl_kill_text@@Base+0x1c0>
   30f80:	mov	x22, x19
   30f84:	b	30fac <rl_kill_text@@Base+0x1d8>
   30f88:	mov	x1, x19
   30f8c:	bl	17480 <strcpy@plt>
   30f90:	mov	x1, x21
   30f94:	bl	16b50 <strcat@plt>
   30f98:	mov	x0, x21
   30f9c:	bl	169f0 <xfree@plt>
   30fa0:	mov	x0, x19
   30fa4:	bl	169f0 <xfree@plt>
   30fa8:	ldr	x8, [x23, #3088]
   30fac:	str	x22, [x8, x25, lsl #3]
   30fb0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   30fb4:	str	w24, [x8, #3096]
   30fb8:	ldp	x20, x19, [sp, #64]
   30fbc:	ldp	x22, x21, [sp, #48]
   30fc0:	ldp	x24, x23, [sp, #32]
   30fc4:	ldr	x25, [sp, #16]
   30fc8:	ldp	x29, x30, [sp], #80
   30fcc:	ret

0000000000030fd0 <rl_kill_word@@Base>:
   30fd0:	stp	x29, x30, [sp, #-48]!
   30fd4:	stp	x22, x21, [sp, #16]
   30fd8:	stp	x20, x19, [sp, #32]
   30fdc:	mov	x29, sp
   30fe0:	tbnz	w0, #31, 31068 <rl_kill_word@@Base+0x98>
   30fe4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   30fe8:	ldr	x22, [x22, #3512]
   30fec:	ldr	w19, [x22]
   30ff0:	bl	165f0 <rl_forward_word@plt>
   30ff4:	ldr	w20, [x22]
   30ff8:	cmp	w20, w19
   30ffc:	b.eq	31040 <rl_kill_word@@Base+0x70>  // b.none
   31000:	mov	w0, w19
   31004:	mov	w1, w20
   31008:	bl	178e0 <rl_copy_text@plt>
   3100c:	mov	x21, x0
   31010:	mov	w0, w19
   31014:	mov	w1, w20
   31018:	bl	171c0 <rl_delete_text@plt>
   3101c:	cmp	w19, w20
   31020:	cset	w1, lt  // lt = tstop
   31024:	mov	x0, x21
   31028:	bl	30e40 <rl_kill_text@@Base+0x6c>
   3102c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31030:	ldr	x8, [x8, #2344]
   31034:	ldr	w9, [x8]
   31038:	add	w9, w9, #0x1
   3103c:	str	w9, [x8]
   31040:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31044:	ldr	x8, [x8, #3416]
   31048:	str	w19, [x22]
   3104c:	ldr	w8, [x8]
   31050:	cmp	w8, #0x1
   31054:	b.ne	31070 <rl_kill_word@@Base+0xa0>  // b.any
   31058:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3105c:	ldr	x8, [x8, #3272]
   31060:	str	w19, [x8]
   31064:	b	31070 <rl_kill_word@@Base+0xa0>
   31068:	neg	w0, w0
   3106c:	bl	16530 <rl_backward_kill_word@plt>
   31070:	ldp	x20, x19, [sp, #32]
   31074:	ldp	x22, x21, [sp, #16]
   31078:	mov	w0, wzr
   3107c:	ldp	x29, x30, [sp], #48
   31080:	ret

0000000000031084 <rl_backward_kill_word@@Base>:
   31084:	stp	x29, x30, [sp, #-48]!
   31088:	stp	x22, x21, [sp, #16]
   3108c:	stp	x20, x19, [sp, #32]
   31090:	mov	x29, sp
   31094:	tbnz	w0, #31, 3111c <rl_backward_kill_word@@Base+0x98>
   31098:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3109c:	ldr	x22, [x22, #3512]
   310a0:	ldr	w19, [x22]
   310a4:	bl	16ae0 <rl_backward_word@plt>
   310a8:	ldr	w20, [x22]
   310ac:	cmp	w20, w19
   310b0:	b.eq	310f4 <rl_backward_kill_word@@Base+0x70>  // b.none
   310b4:	mov	w0, w19
   310b8:	mov	w1, w20
   310bc:	bl	178e0 <rl_copy_text@plt>
   310c0:	mov	x21, x0
   310c4:	mov	w0, w19
   310c8:	mov	w1, w20
   310cc:	bl	171c0 <rl_delete_text@plt>
   310d0:	cmp	w19, w20
   310d4:	cset	w1, lt  // lt = tstop
   310d8:	mov	x0, x21
   310dc:	bl	30e40 <rl_kill_text@@Base+0x6c>
   310e0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   310e4:	ldr	x8, [x8, #2344]
   310e8:	ldr	w9, [x8]
   310ec:	add	w9, w9, #0x1
   310f0:	str	w9, [x8]
   310f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   310f8:	ldr	x8, [x8, #3416]
   310fc:	ldr	w8, [x8]
   31100:	cmp	w8, #0x1
   31104:	b.ne	31124 <rl_backward_kill_word@@Base+0xa0>  // b.any
   31108:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3110c:	ldr	w8, [x22]
   31110:	ldr	x9, [x9, #3272]
   31114:	str	w8, [x9]
   31118:	b	31124 <rl_backward_kill_word@@Base+0xa0>
   3111c:	neg	w0, w0
   31120:	bl	177b0 <rl_kill_word@plt>
   31124:	ldp	x20, x19, [sp, #32]
   31128:	ldp	x22, x21, [sp, #16]
   3112c:	mov	w0, wzr
   31130:	ldp	x29, x30, [sp], #48
   31134:	ret

0000000000031138 <rl_kill_line@@Base>:
   31138:	stp	x29, x30, [sp, #-48]!
   3113c:	stp	x22, x21, [sp, #16]
   31140:	stp	x20, x19, [sp, #32]
   31144:	mov	x29, sp
   31148:	tbnz	w0, #31, 311d4 <rl_kill_line@@Base+0x9c>
   3114c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31150:	ldr	x22, [x22, #3512]
   31154:	mov	w0, #0x1                   	// #1
   31158:	ldr	w19, [x22]
   3115c:	bl	170d0 <rl_end_of_line@plt>
   31160:	ldr	w20, [x22]
   31164:	cmp	w19, w20
   31168:	b.eq	311ac <rl_kill_line@@Base+0x74>  // b.none
   3116c:	mov	w0, w19
   31170:	mov	w1, w20
   31174:	bl	178e0 <rl_copy_text@plt>
   31178:	mov	x21, x0
   3117c:	mov	w0, w19
   31180:	mov	w1, w20
   31184:	bl	171c0 <rl_delete_text@plt>
   31188:	cmp	w19, w20
   3118c:	cset	w1, lt  // lt = tstop
   31190:	mov	x0, x21
   31194:	bl	30e40 <rl_kill_text@@Base+0x6c>
   31198:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3119c:	ldr	x8, [x8, #2344]
   311a0:	ldr	w9, [x8]
   311a4:	add	w9, w9, #0x1
   311a8:	str	w9, [x8]
   311ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   311b0:	ldr	x8, [x8, #3416]
   311b4:	str	w19, [x22]
   311b8:	ldr	w8, [x8]
   311bc:	cmp	w8, #0x1
   311c0:	b.ne	311dc <rl_kill_line@@Base+0xa4>  // b.any
   311c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   311c8:	ldr	x8, [x8, #3272]
   311cc:	str	w19, [x8]
   311d0:	b	311dc <rl_kill_line@@Base+0xa4>
   311d4:	mov	w0, #0x1                   	// #1
   311d8:	bl	16ac0 <rl_backward_kill_line@plt>
   311dc:	ldp	x20, x19, [sp, #32]
   311e0:	ldp	x22, x21, [sp, #16]
   311e4:	mov	w0, wzr
   311e8:	ldp	x29, x30, [sp], #48
   311ec:	ret

00000000000311f0 <rl_backward_kill_line@@Base>:
   311f0:	stp	x29, x30, [sp, #-48]!
   311f4:	stp	x22, x21, [sp, #16]
   311f8:	stp	x20, x19, [sp, #32]
   311fc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31200:	ldr	x22, [x22, #3512]
   31204:	mov	x29, sp
   31208:	ldr	w19, [x22]
   3120c:	tbnz	w0, #31, 31290 <rl_backward_kill_line@@Base+0xa0>
   31210:	cbz	w19, 3130c <rl_backward_kill_line@@Base+0x11c>
   31214:	mov	w0, #0x1                   	// #1
   31218:	bl	175b0 <rl_beg_of_line@plt>
   3121c:	ldr	w20, [x22]
   31220:	cmp	w20, w19
   31224:	b.eq	31268 <rl_backward_kill_line@@Base+0x78>  // b.none
   31228:	mov	w0, w19
   3122c:	mov	w1, w20
   31230:	bl	178e0 <rl_copy_text@plt>
   31234:	mov	x21, x0
   31238:	mov	w0, w19
   3123c:	mov	w1, w20
   31240:	bl	171c0 <rl_delete_text@plt>
   31244:	cmp	w19, w20
   31248:	cset	w1, lt  // lt = tstop
   3124c:	mov	x0, x21
   31250:	bl	30e40 <rl_kill_text@@Base+0x6c>
   31254:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31258:	ldr	x8, [x8, #2344]
   3125c:	ldr	w9, [x8]
   31260:	add	w9, w9, #0x1
   31264:	str	w9, [x8]
   31268:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3126c:	ldr	x8, [x8, #3416]
   31270:	ldr	w8, [x8]
   31274:	cmp	w8, #0x1
   31278:	b.ne	31310 <rl_backward_kill_line@@Base+0x120>  // b.any
   3127c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31280:	ldr	w8, [x22]
   31284:	ldr	x9, [x9, #3272]
   31288:	str	w8, [x9]
   3128c:	b	31310 <rl_backward_kill_line@@Base+0x120>
   31290:	mov	w0, #0x1                   	// #1
   31294:	bl	170d0 <rl_end_of_line@plt>
   31298:	ldr	w20, [x22]
   3129c:	cmp	w19, w20
   312a0:	b.eq	312e4 <rl_backward_kill_line@@Base+0xf4>  // b.none
   312a4:	mov	w0, w19
   312a8:	mov	w1, w20
   312ac:	bl	178e0 <rl_copy_text@plt>
   312b0:	mov	x21, x0
   312b4:	mov	w0, w19
   312b8:	mov	w1, w20
   312bc:	bl	171c0 <rl_delete_text@plt>
   312c0:	cmp	w19, w20
   312c4:	cset	w1, lt  // lt = tstop
   312c8:	mov	x0, x21
   312cc:	bl	30e40 <rl_kill_text@@Base+0x6c>
   312d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   312d4:	ldr	x8, [x8, #2344]
   312d8:	ldr	w9, [x8]
   312dc:	add	w9, w9, #0x1
   312e0:	str	w9, [x8]
   312e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   312e8:	ldr	x8, [x8, #3416]
   312ec:	str	w19, [x22]
   312f0:	ldr	w8, [x8]
   312f4:	cmp	w8, #0x1
   312f8:	b.ne	31310 <rl_backward_kill_line@@Base+0x120>  // b.any
   312fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31300:	ldr	x8, [x8, #3272]
   31304:	str	w19, [x8]
   31308:	b	31310 <rl_backward_kill_line@@Base+0x120>
   3130c:	bl	17390 <rl_ding@plt>
   31310:	ldp	x20, x19, [sp, #32]
   31314:	ldp	x22, x21, [sp, #16]
   31318:	mov	w0, wzr
   3131c:	ldp	x29, x30, [sp], #48
   31320:	ret

0000000000031324 <rl_kill_full_line@@Base>:
   31324:	stp	x29, x30, [sp, #-32]!
   31328:	stp	x20, x19, [sp, #16]
   3132c:	mov	x29, sp
   31330:	bl	16400 <rl_begin_undo_group@plt>
   31334:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31338:	ldr	x8, [x8, #2656]
   3133c:	ldr	w19, [x8]
   31340:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31344:	ldr	x8, [x8, #3512]
   31348:	str	wzr, [x8]
   3134c:	cbz	w19, 3137c <rl_kill_full_line@@Base+0x58>
   31350:	mov	w0, wzr
   31354:	mov	w1, w19
   31358:	bl	178e0 <rl_copy_text@plt>
   3135c:	mov	x20, x0
   31360:	mov	w0, wzr
   31364:	mov	w1, w19
   31368:	bl	171c0 <rl_delete_text@plt>
   3136c:	cmp	w19, #0x0
   31370:	cset	w1, gt
   31374:	mov	x0, x20
   31378:	bl	30e40 <rl_kill_text@@Base+0x6c>
   3137c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31380:	ldr	x8, [x8, #2344]
   31384:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31388:	ldr	w9, [x8]
   3138c:	ldr	x10, [x10, #3272]
   31390:	add	w9, w9, #0x1
   31394:	str	w9, [x8]
   31398:	str	wzr, [x10]
   3139c:	bl	17830 <rl_end_undo_group@plt>
   313a0:	ldp	x20, x19, [sp, #16]
   313a4:	mov	w0, wzr
   313a8:	ldp	x29, x30, [sp], #32
   313ac:	ret

00000000000313b0 <rl_unix_word_rubout@@Base>:
   313b0:	stp	x29, x30, [sp, #-48]!
   313b4:	stp	x22, x21, [sp, #16]
   313b8:	stp	x20, x19, [sp, #32]
   313bc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   313c0:	ldr	x22, [x22, #3512]
   313c4:	mov	x29, sp
   313c8:	ldr	w19, [x22]
   313cc:	cbz	w19, 314e0 <rl_unix_word_rubout@@Base+0x130>
   313d0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   313d4:	ldr	x8, [x8, #2480]
   313d8:	cmp	w0, #0x1
   313dc:	mov	w20, w19
   313e0:	ldr	x9, [x8]
   313e4:	csinc	w8, w0, wzr, gt
   313e8:	sub	x9, x9, #0x1
   313ec:	b	313f8 <rl_unix_word_rubout@@Base+0x48>
   313f0:	mov	w20, wzr
   313f4:	cbz	w8, 31470 <rl_unix_word_rubout@@Base+0xc0>
   313f8:	sub	w8, w8, #0x1
   313fc:	cbz	w20, 313f4 <rl_unix_word_rubout@@Base+0x44>
   31400:	sxtw	x10, w20
   31404:	b	31420 <rl_unix_word_rubout@@Base+0x70>
   31408:	sub	x11, x10, #0x1
   3140c:	sub	w10, w10, #0x1
   31410:	str	w10, [x22]
   31414:	sub	w20, w20, #0x1
   31418:	mov	x10, x11
   3141c:	cbz	x11, 313f0 <rl_unix_word_rubout@@Base+0x40>
   31420:	ldrb	w11, [x9, x10]
   31424:	cmp	w11, #0x20
   31428:	b.eq	31408 <rl_unix_word_rubout@@Base+0x58>  // b.none
   3142c:	cmp	w11, #0x9
   31430:	b.eq	31408 <rl_unix_word_rubout@@Base+0x58>  // b.none
   31434:	cbz	w10, 31468 <rl_unix_word_rubout@@Base+0xb8>
   31438:	sxtw	x20, w10
   3143c:	ldrb	w10, [x9, x20]
   31440:	cmp	w10, #0x9
   31444:	b.eq	313f4 <rl_unix_word_rubout@@Base+0x44>  // b.none
   31448:	cmp	w10, #0x20
   3144c:	b.eq	313f4 <rl_unix_word_rubout@@Base+0x44>  // b.none
   31450:	sub	x10, x20, #0x1
   31454:	sub	w11, w20, #0x1
   31458:	mov	x20, x10
   3145c:	str	w11, [x22]
   31460:	cbnz	x10, 3143c <rl_unix_word_rubout@@Base+0x8c>
   31464:	b	313f4 <rl_unix_word_rubout@@Base+0x44>
   31468:	mov	w20, w10
   3146c:	b	313f4 <rl_unix_word_rubout@@Base+0x44>
   31470:	cmp	w19, w20
   31474:	b.eq	314a4 <rl_unix_word_rubout@@Base+0xf4>  // b.none
   31478:	mov	w0, w19
   3147c:	mov	w1, w20
   31480:	bl	178e0 <rl_copy_text@plt>
   31484:	mov	x21, x0
   31488:	mov	w0, w19
   3148c:	mov	w1, w20
   31490:	bl	171c0 <rl_delete_text@plt>
   31494:	cmp	w19, w20
   31498:	cset	w1, lt  // lt = tstop
   3149c:	mov	x0, x21
   314a0:	bl	30e40 <rl_kill_text@@Base+0x6c>
   314a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   314a8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   314ac:	ldr	x8, [x8, #2344]
   314b0:	ldr	x9, [x9, #3416]
   314b4:	ldr	w10, [x8]
   314b8:	ldr	w9, [x9]
   314bc:	add	w10, w10, #0x1
   314c0:	cmp	w9, #0x1
   314c4:	str	w10, [x8]
   314c8:	b.ne	314e4 <rl_unix_word_rubout@@Base+0x134>  // b.any
   314cc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   314d0:	ldr	w8, [x22]
   314d4:	ldr	x9, [x9, #3272]
   314d8:	str	w8, [x9]
   314dc:	b	314e4 <rl_unix_word_rubout@@Base+0x134>
   314e0:	bl	17390 <rl_ding@plt>
   314e4:	ldp	x20, x19, [sp, #32]
   314e8:	ldp	x22, x21, [sp, #16]
   314ec:	mov	w0, wzr
   314f0:	ldp	x29, x30, [sp], #48
   314f4:	ret

00000000000314f8 <rl_unix_filename_rubout@@Base>:
   314f8:	stp	x29, x30, [sp, #-48]!
   314fc:	stp	x22, x21, [sp, #16]
   31500:	stp	x20, x19, [sp, #32]
   31504:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31508:	ldr	x22, [x22, #3512]
   3150c:	mov	x29, sp
   31510:	ldr	w19, [x22]
   31514:	cbz	w19, 31658 <rl_unix_filename_rubout@@Base+0x160>
   31518:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3151c:	ldr	x8, [x8, #2480]
   31520:	cmp	w0, #0x1
   31524:	mov	x12, #0x200                 	// #512
   31528:	mov	w9, #0x1                   	// #1
   3152c:	ldr	x8, [x8]
   31530:	csinc	w10, w0, wzr, gt
   31534:	movk	x12, #0x8001, lsl #32
   31538:	mov	w20, w19
   3153c:	sub	x11, x8, #0x2
   31540:	mov	w13, w19
   31544:	b	31550 <rl_unix_filename_rubout@@Base+0x58>
   31548:	mov	w20, wzr
   3154c:	cbz	w10, 315e8 <rl_unix_filename_rubout@@Base+0xf0>
   31550:	sxtw	x15, w13
   31554:	add	x14, x15, x8
   31558:	ldurb	w14, [x14, #-1]
   3155c:	sub	w10, w10, #0x1
   31560:	cbz	w13, 315a0 <rl_unix_filename_rubout@@Base+0xa8>
   31564:	add	x16, x11, x15
   31568:	and	w17, w14, #0xff
   3156c:	cmp	w17, #0x2f
   31570:	b.hi	315a0 <rl_unix_filename_rubout@@Base+0xa8>  // b.pmore
   31574:	and	x17, x14, #0xff
   31578:	lsl	x17, x9, x17
   3157c:	tst	x17, x12
   31580:	b.eq	315a0 <rl_unix_filename_rubout@@Base+0xa8>  // b.none
   31584:	subs	w13, w13, #0x1
   31588:	str	w13, [x22]
   3158c:	ldrb	w14, [x16], #-1
   31590:	sub	x20, x15, #0x1
   31594:	mov	x15, x20
   31598:	b.ne	31568 <rl_unix_filename_rubout@@Base+0x70>  // b.any
   3159c:	b	31548 <rl_unix_filename_rubout@@Base+0x50>
   315a0:	cbz	w13, 3154c <rl_unix_filename_rubout@@Base+0x54>
   315a4:	sxtw	x16, w13
   315a8:	add	x15, x11, x16
   315ac:	b	315c8 <rl_unix_filename_rubout@@Base+0xd0>
   315b0:	subs	w13, w13, #0x1
   315b4:	str	w13, [x22]
   315b8:	ldrb	w14, [x15], #-1
   315bc:	sub	x20, x16, #0x1
   315c0:	mov	x16, x20
   315c4:	b.eq	31548 <rl_unix_filename_rubout@@Base+0x50>  // b.none
   315c8:	and	w17, w14, #0xff
   315cc:	cmp	w17, #0x2f
   315d0:	b.hi	315b0 <rl_unix_filename_rubout@@Base+0xb8>  // b.pmore
   315d4:	and	x14, x14, #0xff
   315d8:	lsl	x14, x9, x14
   315dc:	tst	x14, x12
   315e0:	b.eq	315b0 <rl_unix_filename_rubout@@Base+0xb8>  // b.none
   315e4:	b	3154c <rl_unix_filename_rubout@@Base+0x54>
   315e8:	cmp	w19, w20
   315ec:	b.eq	3161c <rl_unix_filename_rubout@@Base+0x124>  // b.none
   315f0:	mov	w0, w19
   315f4:	mov	w1, w20
   315f8:	bl	178e0 <rl_copy_text@plt>
   315fc:	mov	x21, x0
   31600:	mov	w0, w19
   31604:	mov	w1, w20
   31608:	bl	171c0 <rl_delete_text@plt>
   3160c:	cmp	w19, w20
   31610:	cset	w1, lt  // lt = tstop
   31614:	mov	x0, x21
   31618:	bl	30e40 <rl_kill_text@@Base+0x6c>
   3161c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31620:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31624:	ldr	x8, [x8, #2344]
   31628:	ldr	x9, [x9, #3416]
   3162c:	ldr	w10, [x8]
   31630:	ldr	w9, [x9]
   31634:	add	w10, w10, #0x1
   31638:	cmp	w9, #0x1
   3163c:	str	w10, [x8]
   31640:	b.ne	3165c <rl_unix_filename_rubout@@Base+0x164>  // b.any
   31644:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31648:	ldr	w8, [x22]
   3164c:	ldr	x9, [x9, #3272]
   31650:	str	w8, [x9]
   31654:	b	3165c <rl_unix_filename_rubout@@Base+0x164>
   31658:	bl	17390 <rl_ding@plt>
   3165c:	ldp	x20, x19, [sp, #32]
   31660:	ldp	x22, x21, [sp, #16]
   31664:	mov	w0, wzr
   31668:	ldp	x29, x30, [sp], #48
   3166c:	ret

0000000000031670 <rl_unix_line_discard@@Base>:
   31670:	stp	x29, x30, [sp, #-48]!
   31674:	str	x21, [sp, #16]
   31678:	stp	x20, x19, [sp, #32]
   3167c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31680:	ldr	x21, [x21, #3512]
   31684:	mov	x29, sp
   31688:	ldr	w19, [x21]
   3168c:	cbz	w19, 316f4 <rl_unix_line_discard@@Base+0x84>
   31690:	mov	w0, w19
   31694:	mov	w1, wzr
   31698:	bl	178e0 <rl_copy_text@plt>
   3169c:	mov	x20, x0
   316a0:	mov	w0, w19
   316a4:	mov	w1, wzr
   316a8:	bl	171c0 <rl_delete_text@plt>
   316ac:	lsr	w1, w19, #31
   316b0:	mov	x0, x20
   316b4:	bl	30e40 <rl_kill_text@@Base+0x6c>
   316b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   316bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   316c0:	ldr	x8, [x8, #2344]
   316c4:	ldr	x9, [x9, #3416]
   316c8:	str	wzr, [x21]
   316cc:	ldr	w10, [x8]
   316d0:	ldr	w9, [x9]
   316d4:	add	w10, w10, #0x1
   316d8:	cmp	w9, #0x1
   316dc:	str	w10, [x8]
   316e0:	b.ne	316f8 <rl_unix_line_discard@@Base+0x88>  // b.any
   316e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   316e8:	ldr	x8, [x8, #3272]
   316ec:	str	wzr, [x8]
   316f0:	b	316f8 <rl_unix_line_discard@@Base+0x88>
   316f4:	bl	17390 <rl_ding@plt>
   316f8:	ldp	x20, x19, [sp, #32]
   316fc:	ldr	x21, [sp, #16]
   31700:	mov	w0, wzr
   31704:	ldp	x29, x30, [sp], #48
   31708:	ret

000000000003170c <rl_copy_region_to_kill@@Base>:
   3170c:	stp	x29, x30, [sp, #-32]!
   31710:	stp	x20, x19, [sp, #16]
   31714:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31718:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3171c:	ldr	x19, [x19, #3272]
   31720:	ldr	x20, [x20, #3512]
   31724:	mov	x29, sp
   31728:	ldr	w1, [x19]
   3172c:	ldr	w0, [x20]
   31730:	cmp	w1, w0
   31734:	b.eq	31750 <rl_copy_region_to_kill@@Base+0x44>  // b.none
   31738:	bl	178e0 <rl_copy_text@plt>
   3173c:	ldr	w8, [x20]
   31740:	ldr	w9, [x19]
   31744:	cmp	w8, w9
   31748:	cset	w1, lt  // lt = tstop
   3174c:	bl	30e40 <rl_kill_text@@Base+0x6c>
   31750:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31754:	ldr	x8, [x8, #2344]
   31758:	ldp	x20, x19, [sp, #16]
   3175c:	mov	w0, wzr
   31760:	ldr	w9, [x8]
   31764:	add	w9, w9, #0x1
   31768:	str	w9, [x8]
   3176c:	ldp	x29, x30, [sp], #32
   31770:	ret

0000000000031774 <rl_kill_region@@Base>:
   31774:	stp	x29, x30, [sp, #-48]!
   31778:	stp	x22, x21, [sp, #16]
   3177c:	stp	x20, x19, [sp, #32]
   31780:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31784:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31788:	ldr	x20, [x20, #3512]
   3178c:	ldr	x22, [x22, #3272]
   31790:	mov	x29, sp
   31794:	ldr	w0, [x20]
   31798:	ldr	w1, [x22]
   3179c:	cmp	w0, w1
   317a0:	csel	w21, w0, w1, lt  // lt = tstop
   317a4:	cmp	w1, w0
   317a8:	b.eq	317dc <rl_kill_region@@Base+0x68>  // b.none
   317ac:	bl	178e0 <rl_copy_text@plt>
   317b0:	ldr	w8, [x20]
   317b4:	ldr	w1, [x22]
   317b8:	mov	x19, x0
   317bc:	mov	w0, w8
   317c0:	bl	171c0 <rl_delete_text@plt>
   317c4:	ldr	w8, [x20]
   317c8:	ldr	w9, [x22]
   317cc:	mov	x0, x19
   317d0:	cmp	w8, w9
   317d4:	cset	w1, lt  // lt = tstop
   317d8:	bl	30e40 <rl_kill_text@@Base+0x6c>
   317dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   317e0:	ldr	x8, [x8, #2344]
   317e4:	mov	w0, #0x1                   	// #1
   317e8:	ldr	w9, [x8]
   317ec:	add	w9, w9, #0x1
   317f0:	str	w9, [x8]
   317f4:	bl	16840 <_rl_fix_point@plt>
   317f8:	str	w21, [x20]
   317fc:	ldp	x20, x19, [sp, #32]
   31800:	ldp	x22, x21, [sp, #16]
   31804:	mov	w0, wzr
   31808:	ldp	x29, x30, [sp], #48
   3180c:	ret

0000000000031810 <rl_copy_forward_word@@Base>:
   31810:	stp	x29, x30, [sp, #-64]!
   31814:	stp	x20, x19, [sp, #48]
   31818:	mov	w19, w0
   3181c:	str	x23, [sp, #16]
   31820:	stp	x22, x21, [sp, #32]
   31824:	mov	x29, sp
   31828:	tbnz	w0, #31, 318c0 <rl_copy_forward_word@@Base+0xb0>
   3182c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31830:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31834:	ldr	x20, [x20, #3272]
   31838:	ldr	x21, [x21, #3512]
   3183c:	mov	w0, w19
   31840:	mov	w1, wzr
   31844:	ldr	w23, [x20]
   31848:	ldr	w22, [x21]
   3184c:	bl	165f0 <rl_forward_word@plt>
   31850:	ldr	w8, [x21]
   31854:	mov	w0, w19
   31858:	mov	w1, wzr
   3185c:	str	w8, [x20]
   31860:	bl	16ae0 <rl_backward_word@plt>
   31864:	ldr	w1, [x20]
   31868:	ldr	w0, [x21]
   3186c:	cmp	w1, w0
   31870:	b.eq	3188c <rl_copy_forward_word@@Base+0x7c>  // b.none
   31874:	bl	178e0 <rl_copy_text@plt>
   31878:	ldr	w8, [x21]
   3187c:	ldr	w9, [x20]
   31880:	cmp	w8, w9
   31884:	cset	w1, lt  // lt = tstop
   31888:	bl	30e40 <rl_kill_text@@Base+0x6c>
   3188c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31890:	ldr	x8, [x8, #2344]
   31894:	str	w23, [x20]
   31898:	str	w22, [x21]
   3189c:	ldr	x23, [sp, #16]
   318a0:	ldr	w9, [x8]
   318a4:	mov	w0, wzr
   318a8:	add	w9, w9, #0x1
   318ac:	str	w9, [x8]
   318b0:	ldp	x20, x19, [sp, #48]
   318b4:	ldp	x22, x21, [sp, #32]
   318b8:	ldp	x29, x30, [sp], #64
   318bc:	ret
   318c0:	neg	w0, w19
   318c4:	ldp	x20, x19, [sp, #48]
   318c8:	ldp	x22, x21, [sp, #32]
   318cc:	ldr	x23, [sp, #16]
   318d0:	ldp	x29, x30, [sp], #64
   318d4:	b	16a00 <rl_copy_backward_word@plt>

00000000000318d8 <rl_copy_backward_word@@Base>:
   318d8:	stp	x29, x30, [sp, #-64]!
   318dc:	stp	x20, x19, [sp, #48]
   318e0:	mov	w19, w0
   318e4:	str	x23, [sp, #16]
   318e8:	stp	x22, x21, [sp, #32]
   318ec:	mov	x29, sp
   318f0:	tbnz	w0, #31, 31988 <rl_copy_backward_word@@Base+0xb0>
   318f4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   318f8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   318fc:	ldr	x20, [x20, #3272]
   31900:	ldr	x21, [x21, #3512]
   31904:	mov	w0, w19
   31908:	mov	w1, wzr
   3190c:	ldr	w23, [x20]
   31910:	ldr	w22, [x21]
   31914:	bl	16ae0 <rl_backward_word@plt>
   31918:	ldr	w8, [x21]
   3191c:	mov	w0, w19
   31920:	mov	w1, wzr
   31924:	str	w8, [x20]
   31928:	bl	165f0 <rl_forward_word@plt>
   3192c:	ldr	w1, [x20]
   31930:	ldr	w0, [x21]
   31934:	cmp	w1, w0
   31938:	b.eq	31954 <rl_copy_backward_word@@Base+0x7c>  // b.none
   3193c:	bl	178e0 <rl_copy_text@plt>
   31940:	ldr	w8, [x21]
   31944:	ldr	w9, [x20]
   31948:	cmp	w8, w9
   3194c:	cset	w1, lt  // lt = tstop
   31950:	bl	30e40 <rl_kill_text@@Base+0x6c>
   31954:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31958:	ldr	x8, [x8, #2344]
   3195c:	str	w23, [x20]
   31960:	str	w22, [x21]
   31964:	ldr	x23, [sp, #16]
   31968:	ldr	w9, [x8]
   3196c:	mov	w0, wzr
   31970:	add	w9, w9, #0x1
   31974:	str	w9, [x8]
   31978:	ldp	x20, x19, [sp, #48]
   3197c:	ldp	x22, x21, [sp, #32]
   31980:	ldp	x29, x30, [sp], #64
   31984:	ret
   31988:	neg	w0, w19
   3198c:	ldp	x20, x19, [sp, #48]
   31990:	ldp	x22, x21, [sp, #32]
   31994:	ldr	x23, [sp, #16]
   31998:	ldp	x29, x30, [sp], #64
   3199c:	b	177e0 <rl_copy_forward_word@plt>

00000000000319a0 <rl_yank@@Base>:
   319a0:	stp	x29, x30, [sp, #-32]!
   319a4:	str	x19, [sp, #16]
   319a8:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   319ac:	ldr	x8, [x19, #3088]
   319b0:	mov	x29, sp
   319b4:	cbz	x8, 319e4 <rl_yank@@Base+0x44>
   319b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   319bc:	ldr	x8, [x8, #3512]
   319c0:	ldr	w0, [x8]
   319c4:	bl	177a0 <_rl_set_mark_at_pos@plt>
   319c8:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   319cc:	ldr	x8, [x19, #3088]
   319d0:	ldrsw	x9, [x9, #3096]
   319d4:	ldr	x0, [x8, x9, lsl #3]
   319d8:	bl	16430 <rl_insert_text@plt>
   319dc:	mov	w0, wzr
   319e0:	b	319ec <rl_yank@@Base+0x4c>
   319e4:	bl	174a0 <_rl_abort_internal@plt>
   319e8:	mov	w0, #0x1                   	// #1
   319ec:	ldr	x19, [sp, #16]
   319f0:	ldp	x29, x30, [sp], #32
   319f4:	ret

00000000000319f8 <rl_yank_pop@@Base>:
   319f8:	stp	x29, x30, [sp, #-64]!
   319fc:	stp	x24, x23, [sp, #16]
   31a00:	stp	x22, x21, [sp, #32]
   31a04:	stp	x20, x19, [sp, #48]
   31a08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31a0c:	ldr	x8, [x8, #2072]
   31a10:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31a14:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31a18:	mov	x29, sp
   31a1c:	ldr	x8, [x8]
   31a20:	ldr	x9, [x9, #2920]
   31a24:	ldr	x10, [x10, #2608]
   31a28:	cmp	x8, x9
   31a2c:	cset	w9, ne  // ne = any
   31a30:	cmp	x8, x10
   31a34:	cset	w8, ne  // ne = any
   31a38:	and	w8, w8, w9
   31a3c:	tbnz	w8, #0, 31aac <rl_yank_pop@@Base+0xb4>
   31a40:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   31a44:	ldr	x8, [x22, #3088]
   31a48:	cbz	x8, 31aac <rl_yank_pop@@Base+0xb4>
   31a4c:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   31a50:	ldrsw	x9, [x23, #3096]
   31a54:	ldr	x21, [x8, x9, lsl #3]
   31a58:	mov	x0, x21
   31a5c:	bl	16440 <strlen@plt>
   31a60:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31a64:	ldr	x24, [x24, #3512]
   31a68:	ldr	w20, [x24]
   31a6c:	subs	w19, w20, w0
   31a70:	b.mi	31aac <rl_yank_pop@@Base+0xb4>  // b.first
   31a74:	cbz	w0, 31ac8 <rl_yank_pop@@Base+0xd0>
   31a78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31a7c:	ldr	x8, [x8, #2480]
   31a80:	ldrb	w10, [x21]
   31a84:	ldr	x8, [x8]
   31a88:	add	x8, x8, w19, uxtw
   31a8c:	ldrb	w9, [x8]
   31a90:	cmp	w9, w10
   31a94:	b.ne	31aac <rl_yank_pop@@Base+0xb4>  // b.any
   31a98:	sxtw	x2, w0
   31a9c:	mov	x0, x8
   31aa0:	mov	x1, x21
   31aa4:	bl	16b40 <strncmp@plt>
   31aa8:	cbz	w0, 31ac8 <rl_yank_pop@@Base+0xd0>
   31aac:	bl	174a0 <_rl_abort_internal@plt>
   31ab0:	mov	w0, #0x1                   	// #1
   31ab4:	ldp	x20, x19, [sp, #48]
   31ab8:	ldp	x22, x21, [sp, #32]
   31abc:	ldp	x24, x23, [sp, #16]
   31ac0:	ldp	x29, x30, [sp], #64
   31ac4:	ret
   31ac8:	mov	w0, w19
   31acc:	mov	w1, w20
   31ad0:	bl	171c0 <rl_delete_text@plt>
   31ad4:	ldr	w8, [x23, #3096]
   31ad8:	str	w19, [x24]
   31adc:	sub	w9, w8, #0x1
   31ae0:	cmp	w8, #0x0
   31ae4:	str	w9, [x23, #3096]
   31ae8:	b.le	31b14 <rl_yank_pop@@Base+0x11c>
   31aec:	ldr	x8, [x22, #3088]
   31af0:	cbz	x8, 31b2c <rl_yank_pop@@Base+0x134>
   31af4:	mov	w0, w19
   31af8:	bl	177a0 <_rl_set_mark_at_pos@plt>
   31afc:	ldr	x8, [x22, #3088]
   31b00:	ldrsw	x9, [x23, #3096]
   31b04:	ldr	x0, [x8, x9, lsl #3]
   31b08:	bl	16430 <rl_insert_text@plt>
   31b0c:	mov	w0, wzr
   31b10:	b	31ab4 <rl_yank_pop@@Base+0xbc>
   31b14:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   31b18:	ldr	w8, [x8, #3100]
   31b1c:	sub	w8, w8, #0x1
   31b20:	str	w8, [x23, #3096]
   31b24:	ldr	x8, [x22, #3088]
   31b28:	cbnz	x8, 31af4 <rl_yank_pop@@Base+0xfc>
   31b2c:	bl	174a0 <_rl_abort_internal@plt>
   31b30:	mov	w0, wzr
   31b34:	b	31ab4 <rl_yank_pop@@Base+0xbc>

0000000000031b38 <rl_vi_yank_pop@@Base>:
   31b38:	stp	x29, x30, [sp, #-64]!
   31b3c:	str	x23, [sp, #16]
   31b40:	stp	x22, x21, [sp, #32]
   31b44:	stp	x20, x19, [sp, #48]
   31b48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31b4c:	ldr	x8, [x8, #2072]
   31b50:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31b54:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31b58:	mov	x29, sp
   31b5c:	ldr	x8, [x8]
   31b60:	ldr	x9, [x9, #3224]
   31b64:	ldr	x10, [x10, #2216]
   31b68:	cmp	x8, x9
   31b6c:	cset	w9, ne  // ne = any
   31b70:	cmp	x8, x10
   31b74:	cset	w8, ne  // ne = any
   31b78:	and	w8, w8, w9
   31b7c:	tbnz	w8, #0, 31bec <rl_vi_yank_pop@@Base+0xb4>
   31b80:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   31b84:	ldr	x8, [x8, #3088]
   31b88:	cbz	x8, 31bec <rl_vi_yank_pop@@Base+0xb4>
   31b8c:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   31b90:	ldrsw	x9, [x22, #3096]
   31b94:	ldr	x21, [x8, x9, lsl #3]
   31b98:	mov	x0, x21
   31b9c:	bl	16440 <strlen@plt>
   31ba0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31ba4:	ldr	x23, [x23, #3512]
   31ba8:	ldr	w20, [x23]
   31bac:	subs	w19, w20, w0
   31bb0:	b.mi	31bec <rl_vi_yank_pop@@Base+0xb4>  // b.first
   31bb4:	cbz	w0, 31c08 <rl_vi_yank_pop@@Base+0xd0>
   31bb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31bbc:	ldr	x8, [x8, #2480]
   31bc0:	ldrb	w10, [x21]
   31bc4:	ldr	x8, [x8]
   31bc8:	add	x8, x8, w19, uxtw
   31bcc:	ldrb	w9, [x8]
   31bd0:	cmp	w9, w10
   31bd4:	b.ne	31bec <rl_vi_yank_pop@@Base+0xb4>  // b.any
   31bd8:	sxtw	x2, w0
   31bdc:	mov	x0, x8
   31be0:	mov	x1, x21
   31be4:	bl	16b40 <strncmp@plt>
   31be8:	cbz	w0, 31c08 <rl_vi_yank_pop@@Base+0xd0>
   31bec:	bl	174a0 <_rl_abort_internal@plt>
   31bf0:	mov	w0, #0x1                   	// #1
   31bf4:	ldp	x20, x19, [sp, #48]
   31bf8:	ldp	x22, x21, [sp, #32]
   31bfc:	ldr	x23, [sp, #16]
   31c00:	ldp	x29, x30, [sp], #64
   31c04:	ret
   31c08:	mov	w0, w19
   31c0c:	mov	w1, w20
   31c10:	bl	171c0 <rl_delete_text@plt>
   31c14:	ldr	w8, [x22, #3096]
   31c18:	str	w19, [x23]
   31c1c:	sub	w9, w8, #0x1
   31c20:	cmp	w8, #0x0
   31c24:	str	w9, [x22, #3096]
   31c28:	b.gt	31c3c <rl_vi_yank_pop@@Base+0x104>
   31c2c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   31c30:	ldr	w8, [x8, #3100]
   31c34:	sub	w8, w8, #0x1
   31c38:	str	w8, [x22, #3096]
   31c3c:	mov	w0, #0x1                   	// #1
   31c40:	mov	w1, #0x70                  	// #112
   31c44:	bl	16730 <rl_vi_put@plt>
   31c48:	mov	w0, wzr
   31c4c:	b	31bf4 <rl_vi_yank_pop@@Base+0xbc>

0000000000031c50 <rl_yank_nth_arg@@Base>:
   31c50:	mov	w2, wzr
   31c54:	b	31c58 <rl_yank_nth_arg@@Base+0x8>
   31c58:	stp	x29, x30, [sp, #-48]!
   31c5c:	stp	x22, x21, [sp, #16]
   31c60:	stp	x20, x19, [sp, #32]
   31c64:	mov	x29, sp
   31c68:	mov	w21, w2
   31c6c:	mov	w19, w1
   31c70:	mov	w20, w0
   31c74:	bl	165a0 <where_history@plt>
   31c78:	cmp	w21, #0x1
   31c7c:	mov	w22, w0
   31c80:	b.lt	31c90 <rl_yank_nth_arg@@Base+0x40>  // b.tstop
   31c84:	bl	16d00 <previous_history@plt>
   31c88:	subs	w21, w21, #0x1
   31c8c:	b.ne	31c84 <rl_yank_nth_arg@@Base+0x34>  // b.any
   31c90:	bl	16d00 <previous_history@plt>
   31c94:	mov	x21, x0
   31c98:	mov	w0, w22
   31c9c:	bl	173a0 <history_set_pos@plt>
   31ca0:	cbz	x21, 31d1c <rl_yank_nth_arg@@Base+0xcc>
   31ca4:	ldr	x2, [x21]
   31ca8:	mov	w0, w20
   31cac:	mov	w1, w20
   31cb0:	bl	17680 <history_arg_extract@plt>
   31cb4:	cbz	x0, 31d1c <rl_yank_nth_arg@@Base+0xcc>
   31cb8:	ldrb	w8, [x0]
   31cbc:	mov	x20, x0
   31cc0:	cbz	w8, 31d34 <rl_yank_nth_arg@@Base+0xe4>
   31cc4:	bl	16400 <rl_begin_undo_group@plt>
   31cc8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31ccc:	ldr	x8, [x8, #3512]
   31cd0:	ldr	w0, [x8]
   31cd4:	bl	177a0 <_rl_set_mark_at_pos@plt>
   31cd8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31cdc:	ldr	x8, [x8, #3416]
   31ce0:	ldr	w8, [x8]
   31ce4:	cbnz	w8, 31d00 <rl_yank_nth_arg@@Base+0xb0>
   31ce8:	mov	w0, #0x1                   	// #1
   31cec:	mov	w1, w19
   31cf0:	bl	16eb0 <rl_vi_append_mode@plt>
   31cf4:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   31cf8:	add	x0, x0, #0xf67
   31cfc:	bl	16430 <rl_insert_text@plt>
   31d00:	mov	x0, x20
   31d04:	bl	16430 <rl_insert_text@plt>
   31d08:	mov	x0, x20
   31d0c:	bl	169f0 <xfree@plt>
   31d10:	bl	17830 <rl_end_undo_group@plt>
   31d14:	mov	w0, wzr
   31d18:	b	31d24 <rl_yank_nth_arg@@Base+0xd4>
   31d1c:	bl	17390 <rl_ding@plt>
   31d20:	mov	w0, #0x1                   	// #1
   31d24:	ldp	x20, x19, [sp, #32]
   31d28:	ldp	x22, x21, [sp, #16]
   31d2c:	ldp	x29, x30, [sp], #48
   31d30:	ret
   31d34:	bl	17390 <rl_ding@plt>
   31d38:	mov	x0, x20
   31d3c:	bl	171b0 <free@plt>
   31d40:	b	31d20 <rl_yank_nth_arg@@Base+0xd0>

0000000000031d44 <rl_yank_last_arg@@Base>:
   31d44:	stp	x29, x30, [sp, #-48]!
   31d48:	stp	x22, x21, [sp, #16]
   31d4c:	stp	x20, x19, [sp, #32]
   31d50:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31d54:	ldr	x8, [x8, #2072]
   31d58:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31d5c:	mov	w19, w1
   31d60:	mov	w20, w0
   31d64:	ldr	x8, [x8]
   31d68:	ldr	x9, [x9, #2304]
   31d6c:	adrp	x22, 57000 <rl_insert@@Base+0x20abc>
   31d70:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   31d74:	mov	x29, sp
   31d78:	cmp	x8, x9
   31d7c:	b.eq	31db4 <rl_yank_last_arg@@Base+0x70>  // b.none
   31d80:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31d84:	ldr	x9, [x9, #3792]
   31d88:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   31d8c:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   31d90:	adrp	x11, 57000 <rl_insert@@Base+0x20abc>
   31d94:	ldr	w9, [x9]
   31d98:	mov	w12, #0x1                   	// #1
   31d9c:	mov	w2, wzr
   31da0:	str	w20, [x22, #3356]
   31da4:	str	wzr, [x8, #3104]
   31da8:	str	w9, [x10, #3108]
   31dac:	str	w12, [x11, #3360]
   31db0:	b	31df0 <rl_yank_last_arg@@Base+0xac>
   31db4:	ldr	w8, [x21, #3112]
   31db8:	cbz	w8, 31dc0 <rl_yank_last_arg@@Base+0x7c>
   31dbc:	bl	16f90 <rl_do_undo@plt>
   31dc0:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   31dc4:	ldr	w8, [x9, #3360]
   31dc8:	tbz	w20, #31, 31dd4 <rl_yank_last_arg@@Base+0x90>
   31dcc:	neg	w8, w8
   31dd0:	str	w8, [x9, #3360]
   31dd4:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   31dd8:	ldr	w11, [x10, #3104]
   31ddc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   31de0:	ldr	w9, [x9, #3108]
   31de4:	add	w8, w11, w8
   31de8:	bic	w2, w8, w8, asr #31
   31dec:	str	w2, [x10, #3104]
   31df0:	ldr	w8, [x22, #3356]
   31df4:	cmp	w9, #0x0
   31df8:	mov	w9, #0x24                  	// #36
   31dfc:	mov	w1, w19
   31e00:	csel	w0, w9, w8, eq  // eq = none
   31e04:	bl	31c58 <rl_yank_nth_arg@@Base+0x8>
   31e08:	cmp	w0, #0x0
   31e0c:	cset	w8, eq  // eq = none
   31e10:	str	w8, [x21, #3112]
   31e14:	ldp	x20, x19, [sp, #32]
   31e18:	ldp	x22, x21, [sp, #16]
   31e1c:	ldp	x29, x30, [sp], #48
   31e20:	ret

0000000000031e24 <_rl_bracketed_text@@Base>:
   31e24:	stp	x29, x30, [sp, #-96]!
   31e28:	stp	x20, x19, [sp, #80]
   31e2c:	mov	x19, x0
   31e30:	mov	w0, #0x40                  	// #64
   31e34:	str	x27, [sp, #16]
   31e38:	stp	x26, x25, [sp, #32]
   31e3c:	stp	x24, x23, [sp, #48]
   31e40:	stp	x22, x21, [sp, #64]
   31e44:	mov	x29, sp
   31e48:	bl	16bf0 <xmalloc@plt>
   31e4c:	strb	wzr, [x0]
   31e50:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   31e54:	ldr	x25, [x25, #2984]
   31e58:	mov	x20, x0
   31e5c:	ldr	x8, [x25]
   31e60:	orr	x8, x8, #0x40
   31e64:	str	x8, [x25]
   31e68:	bl	16e60 <rl_read_key@plt>
   31e6c:	ldr	x8, [x25]
   31e70:	tbnz	w0, #31, 31f4c <_rl_bracketed_text@@Base+0x128>
   31e74:	adrp	x22, 3f000 <filename_completion_function@@Base+0x580>
   31e78:	mov	w23, w0
   31e7c:	mov	x24, #0xfffffffffffffffb    	// #-5
   31e80:	mov	w21, #0x40                  	// #64
   31e84:	mov	w26, #0xa                   	// #10
   31e88:	add	x22, x22, #0xe47
   31e8c:	b	31ea4 <_rl_bracketed_text@@Base+0x80>
   31e90:	bl	16e60 <rl_read_key@plt>
   31e94:	ldr	x8, [x25]
   31e98:	mov	w23, w0
   31e9c:	add	x24, x24, #0x1
   31ea0:	tbnz	w0, #31, 31f44 <_rl_bracketed_text@@Base+0x120>
   31ea4:	add	x27, x24, #0x5
   31ea8:	tbz	w8, #12, 31eb4 <_rl_bracketed_text@@Base+0x90>
   31eac:	mov	w0, w23
   31eb0:	bl	167c0 <_rl_add_macro_char@plt>
   31eb4:	cmp	w23, #0xd
   31eb8:	csel	w23, w26, w23, eq  // eq = none
   31ebc:	cmp	x27, x21
   31ec0:	b.ne	31ed8 <_rl_bracketed_text@@Base+0xb4>  // b.any
   31ec4:	lsl	x21, x21, #1
   31ec8:	mov	x0, x20
   31ecc:	mov	x1, x21
   31ed0:	bl	16a50 <xrealloc@plt>
   31ed4:	mov	x20, x0
   31ed8:	add	x8, x24, #0x6
   31edc:	add	x9, x20, x24
   31ee0:	cmp	x8, #0x6
   31ee4:	strb	w23, [x9, #5]
   31ee8:	b.cc	31e90 <_rl_bracketed_text@@Base+0x6c>  // b.lo, b.ul, b.last
   31eec:	cmp	w23, #0x7e
   31ef0:	b.ne	31e90 <_rl_bracketed_text@@Base+0x6c>  // b.any
   31ef4:	add	x0, x20, x24
   31ef8:	ldrb	w8, [x0]
   31efc:	cmp	w8, #0x1b
   31f00:	b.ne	31e90 <_rl_bracketed_text@@Base+0x6c>  // b.any
   31f04:	mov	w2, #0x6                   	// #6
   31f08:	mov	x1, x22
   31f0c:	bl	16b40 <strncmp@plt>
   31f10:	cbnz	w0, 31e90 <_rl_bracketed_text@@Base+0x6c>
   31f14:	ldr	x8, [x25]
   31f18:	cmp	x24, x21
   31f1c:	and	x8, x8, #0xffffffffffffffbf
   31f20:	str	x8, [x25]
   31f24:	b.ne	31f38 <_rl_bracketed_text@@Base+0x114>  // b.any
   31f28:	add	x1, x21, #0x1
   31f2c:	mov	x0, x20
   31f30:	bl	16a50 <xrealloc@plt>
   31f34:	mov	x20, x0
   31f38:	strb	wzr, [x20, x24]
   31f3c:	cbnz	x19, 31f5c <_rl_bracketed_text@@Base+0x138>
   31f40:	b	31f60 <_rl_bracketed_text@@Base+0x13c>
   31f44:	add	x24, x24, #0x5
   31f48:	b	31f50 <_rl_bracketed_text@@Base+0x12c>
   31f4c:	mov	x24, xzr
   31f50:	and	x8, x8, #0xffffffffffffffbf
   31f54:	str	x8, [x25]
   31f58:	cbz	x19, 31f60 <_rl_bracketed_text@@Base+0x13c>
   31f5c:	str	x24, [x19]
   31f60:	mov	x0, x20
   31f64:	ldp	x20, x19, [sp, #80]
   31f68:	ldp	x22, x21, [sp, #64]
   31f6c:	ldp	x24, x23, [sp, #48]
   31f70:	ldp	x26, x25, [sp, #32]
   31f74:	ldr	x27, [sp, #16]
   31f78:	ldp	x29, x30, [sp], #96
   31f7c:	ret

0000000000031f80 <rl_bracketed_paste_begin@@Base>:
   31f80:	sub	sp, sp, #0x30
   31f84:	add	x0, sp, #0x8
   31f88:	stp	x29, x30, [sp, #16]
   31f8c:	stp	x20, x19, [sp, #32]
   31f90:	add	x29, sp, #0x10
   31f94:	bl	16fc0 <_rl_bracketed_text@plt>
   31f98:	mov	x19, x0
   31f9c:	bl	16430 <rl_insert_text@plt>
   31fa0:	ldr	x8, [sp, #8]
   31fa4:	cmp	x8, w0, sxtw
   31fa8:	mov	x0, x19
   31fac:	cset	w20, ne  // ne = any
   31fb0:	bl	169f0 <xfree@plt>
   31fb4:	mov	w0, w20
   31fb8:	ldp	x20, x19, [sp, #32]
   31fbc:	ldp	x29, x30, [sp, #16]
   31fc0:	add	sp, sp, #0x30
   31fc4:	ret

0000000000031fc8 <rl_add_undo@@Base>:
   31fc8:	stp	x29, x30, [sp, #-48]!
   31fcc:	stp	x22, x21, [sp, #16]
   31fd0:	mov	w22, w0
   31fd4:	mov	w0, #0x20                  	// #32
   31fd8:	stp	x20, x19, [sp, #32]
   31fdc:	mov	x29, sp
   31fe0:	mov	x19, x3
   31fe4:	mov	w20, w2
   31fe8:	mov	w21, w1
   31fec:	bl	16bf0 <xmalloc@plt>
   31ff0:	str	w22, [x0, #24]
   31ff4:	stp	w21, w20, [x0, #8]
   31ff8:	str	x19, [x0, #16]
   31ffc:	str	xzr, [x0]
   32000:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32004:	ldr	x8, [x8, #3040]
   32008:	ldr	x9, [x8]
   3200c:	str	x9, [x0]
   32010:	ldp	x20, x19, [sp, #32]
   32014:	ldp	x22, x21, [sp, #16]
   32018:	str	x0, [x8]
   3201c:	ldp	x29, x30, [sp], #48
   32020:	ret

0000000000032024 <_rl_free_undo_list@@Base>:
   32024:	stp	x29, x30, [sp, #-32]!
   32028:	stp	x20, x19, [sp, #16]
   3202c:	mov	x29, sp
   32030:	cbz	x0, 32064 <_rl_free_undo_list@@Base+0x40>
   32034:	mov	x19, x0
   32038:	b	3204c <_rl_free_undo_list@@Base+0x28>
   3203c:	mov	x0, x19
   32040:	bl	169f0 <xfree@plt>
   32044:	mov	x19, x20
   32048:	cbz	x20, 32064 <_rl_free_undo_list@@Base+0x40>
   3204c:	ldr	w8, [x19, #24]
   32050:	ldr	x20, [x19]
   32054:	cbnz	w8, 3203c <_rl_free_undo_list@@Base+0x18>
   32058:	ldr	x0, [x19, #16]
   3205c:	bl	169f0 <xfree@plt>
   32060:	b	3203c <_rl_free_undo_list@@Base+0x18>
   32064:	ldp	x20, x19, [sp, #16]
   32068:	ldp	x29, x30, [sp], #32
   3206c:	ret

0000000000032070 <rl_free_undo_list@@Base>:
   32070:	stp	x29, x30, [sp, #-48]!
   32074:	stp	x22, x21, [sp, #16]
   32078:	stp	x20, x19, [sp, #32]
   3207c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32080:	ldr	x21, [x21, #3040]
   32084:	mov	x29, sp
   32088:	ldr	x19, [x21]
   3208c:	cbz	x19, 320c0 <rl_free_undo_list@@Base+0x50>
   32090:	mov	x20, x19
   32094:	b	320a8 <rl_free_undo_list@@Base+0x38>
   32098:	mov	x0, x20
   3209c:	bl	169f0 <xfree@plt>
   320a0:	mov	x20, x22
   320a4:	cbz	x22, 320c0 <rl_free_undo_list@@Base+0x50>
   320a8:	ldr	w8, [x20, #24]
   320ac:	ldr	x22, [x20]
   320b0:	cbnz	w8, 32098 <rl_free_undo_list@@Base+0x28>
   320b4:	ldr	x0, [x20, #16]
   320b8:	bl	169f0 <xfree@plt>
   320bc:	b	32098 <rl_free_undo_list@@Base+0x28>
   320c0:	str	xzr, [x21]
   320c4:	mov	x1, x19
   320c8:	ldp	x20, x19, [sp, #32]
   320cc:	ldp	x22, x21, [sp, #16]
   320d0:	mov	w0, #0xffffffff            	// #-1
   320d4:	mov	x2, xzr
   320d8:	ldp	x29, x30, [sp], #48
   320dc:	b	16de0 <_hs_replace_history_data@plt>

00000000000320e0 <_rl_copy_undo_entry@@Base>:
   320e0:	stp	x29, x30, [sp, #-48]!
   320e4:	stp	x22, x21, [sp, #16]
   320e8:	stp	x20, x19, [sp, #32]
   320ec:	ldr	w21, [x0, #24]
   320f0:	ldr	x22, [x0, #8]
   320f4:	mov	x20, x0
   320f8:	mov	w0, #0x20                  	// #32
   320fc:	mov	x29, sp
   32100:	bl	16bf0 <xmalloc@plt>
   32104:	str	w21, [x0, #24]
   32108:	stp	x22, xzr, [x0, #8]
   3210c:	str	xzr, [x0]
   32110:	mov	x19, x0
   32114:	ldr	x0, [x20, #16]
   32118:	cbz	x0, 32130 <_rl_copy_undo_entry@@Base+0x50>
   3211c:	bl	16440 <strlen@plt>
   32120:	add	x0, x0, #0x1
   32124:	bl	16bf0 <xmalloc@plt>
   32128:	ldr	x1, [x20, #16]
   3212c:	bl	17480 <strcpy@plt>
   32130:	str	x0, [x19, #16]
   32134:	mov	x0, x19
   32138:	ldp	x20, x19, [sp, #32]
   3213c:	ldp	x22, x21, [sp, #16]
   32140:	ldp	x29, x30, [sp], #48
   32144:	ret

0000000000032148 <_rl_copy_undo_list@@Base>:
   32148:	stp	x29, x30, [sp, #-64]!
   3214c:	stp	x24, x23, [sp, #16]
   32150:	stp	x22, x21, [sp, #32]
   32154:	stp	x20, x19, [sp, #48]
   32158:	mov	x29, sp
   3215c:	cbz	x0, 321d0 <_rl_copy_undo_list@@Base+0x88>
   32160:	mov	x20, x0
   32164:	mov	x19, xzr
   32168:	b	3217c <_rl_copy_undo_list@@Base+0x34>
   3216c:	str	x21, [x22]
   32170:	ldr	x20, [x20]
   32174:	mov	x22, x21
   32178:	cbz	x20, 321c8 <_rl_copy_undo_list@@Base+0x80>
   3217c:	ldr	w23, [x20, #24]
   32180:	ldr	x24, [x20, #8]
   32184:	mov	w0, #0x20                  	// #32
   32188:	bl	16bf0 <xmalloc@plt>
   3218c:	str	w23, [x0, #24]
   32190:	stp	x24, xzr, [x0, #8]
   32194:	str	xzr, [x0]
   32198:	mov	x21, x0
   3219c:	ldr	x0, [x20, #16]
   321a0:	cbz	x0, 321b8 <_rl_copy_undo_list@@Base+0x70>
   321a4:	bl	16440 <strlen@plt>
   321a8:	add	x0, x0, #0x1
   321ac:	bl	16bf0 <xmalloc@plt>
   321b0:	ldr	x1, [x20, #16]
   321b4:	bl	17480 <strcpy@plt>
   321b8:	str	x0, [x21, #16]
   321bc:	cbnz	x19, 3216c <_rl_copy_undo_list@@Base+0x24>
   321c0:	mov	x19, x21
   321c4:	b	32170 <_rl_copy_undo_list@@Base+0x28>
   321c8:	str	xzr, [x21]
   321cc:	b	321d4 <_rl_copy_undo_list@@Base+0x8c>
   321d0:	mov	x19, xzr
   321d4:	mov	x0, x19
   321d8:	ldp	x20, x19, [sp, #48]
   321dc:	ldp	x22, x21, [sp, #32]
   321e0:	ldp	x24, x23, [sp, #16]
   321e4:	ldp	x29, x30, [sp], #64
   321e8:	ret

00000000000321ec <rl_do_undo@@Base>:
   321ec:	stp	x29, x30, [sp, #-96]!
   321f0:	stp	x28, x27, [sp, #16]
   321f4:	stp	x26, x25, [sp, #32]
   321f8:	stp	x24, x23, [sp, #48]
   321fc:	stp	x22, x21, [sp, #64]
   32200:	stp	x20, x19, [sp, #80]
   32204:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32208:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3220c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32210:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32214:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32218:	ldr	x23, [x23, #3040]
   3221c:	ldr	x24, [x24, #3248]
   32220:	ldr	x26, [x26, #2984]
   32224:	ldr	x22, [x22, #3512]
   32228:	ldr	x28, [x28, #3672]
   3222c:	mov	w27, wzr
   32230:	mov	w19, wzr
   32234:	mov	w20, wzr
   32238:	mov	w25, #0x1                   	// #1
   3223c:	mov	x29, sp
   32240:	b	32258 <rl_do_undo@@Base+0x6c>
   32244:	ldr	x8, [x23]
   32248:	str	x8, [x9, #16]
   3224c:	mov	x0, x21
   32250:	bl	169f0 <xfree@plt>
   32254:	cbz	w27, 32404 <rl_do_undo@@Base+0x218>
   32258:	ldr	x8, [x23]
   3225c:	cbz	x8, 3240c <rl_do_undo@@Base+0x220>
   32260:	ldr	x9, [x26]
   32264:	str	w25, [x24]
   32268:	orr	x9, x9, #0x10000
   3226c:	str	x9, [x26]
   32270:	ldr	w9, [x8, #24]
   32274:	cmp	w9, #0x1
   32278:	b.hi	322bc <rl_do_undo@@Base+0xd0>  // b.pmore
   3227c:	ldr	w19, [x8, #8]
   32280:	cmn	w19, #0x2
   32284:	b.eq	32298 <rl_do_undo@@Base+0xac>  // b.none
   32288:	cmn	w19, #0x1
   3228c:	b.ne	322a4 <rl_do_undo@@Base+0xb8>  // b.any
   32290:	ldr	w19, [x22]
   32294:	b	322a4 <rl_do_undo@@Base+0xb8>
   32298:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3229c:	ldr	x10, [x10, #2656]
   322a0:	ldr	w19, [x10]
   322a4:	ldr	w20, [x8, #12]
   322a8:	cmn	w20, #0x2
   322ac:	b.eq	32324 <rl_do_undo@@Base+0x138>  // b.none
   322b0:	cmn	w20, #0x1
   322b4:	b.ne	322bc <rl_do_undo@@Base+0xd0>  // b.any
   322b8:	ldr	w20, [x22]
   322bc:	cmp	w9, #0x3
   322c0:	b.hi	32340 <rl_do_undo@@Base+0x154>  // b.pmore
   322c4:	adrp	x12, 3f000 <filename_completion_function@@Base+0x580>
   322c8:	mov	w9, w9
   322cc:	add	x12, x12, #0xe4e
   322d0:	adr	x10, 322e0 <rl_do_undo@@Base+0xf4>
   322d4:	ldrb	w11, [x12, x9]
   322d8:	add	x10, x10, x11, lsl #2
   322dc:	br	x10
   322e0:	str	w19, [x22]
   322e4:	ldr	x0, [x8, #16]
   322e8:	bl	16430 <rl_insert_text@plt>
   322ec:	ldr	x8, [x23]
   322f0:	ldr	x0, [x8, #16]
   322f4:	bl	169f0 <xfree@plt>
   322f8:	b	32340 <rl_do_undo@@Base+0x154>
   322fc:	mov	w0, w19
   32300:	mov	w1, w20
   32304:	bl	171c0 <rl_delete_text@plt>
   32308:	str	w19, [x22]
   3230c:	b	32340 <rl_do_undo@@Base+0x154>
   32310:	cbz	w27, 3233c <rl_do_undo@@Base+0x150>
   32314:	sub	w27, w27, #0x1
   32318:	b	32340 <rl_do_undo@@Base+0x154>
   3231c:	add	w27, w27, #0x1
   32320:	b	32340 <rl_do_undo@@Base+0x154>
   32324:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32328:	ldr	x10, [x10, #2656]
   3232c:	ldr	w20, [x10]
   32330:	cmp	w9, #0x3
   32334:	b.ls	322c4 <rl_do_undo@@Base+0xd8>  // b.plast
   32338:	b	32340 <rl_do_undo@@Base+0x154>
   3233c:	bl	17390 <rl_ding@plt>
   32340:	ldr	x8, [x26]
   32344:	ldr	x21, [x23]
   32348:	str	wzr, [x24]
   3234c:	and	x8, x8, #0xfffffffffffeffff
   32350:	str	x8, [x26]
   32354:	ldr	x8, [x21]
   32358:	str	x8, [x23]
   3235c:	str	xzr, [x21]
   32360:	bl	16a60 <current_history@plt>
   32364:	cbz	x0, 323bc <rl_do_undo@@Base+0x1d0>
   32368:	ldr	x8, [x0, #16]
   3236c:	cbz	x8, 323bc <rl_do_undo@@Base+0x1d0>
   32370:	cmp	x21, x8
   32374:	b.ne	323bc <rl_do_undo@@Base+0x1d0>  // b.any
   32378:	mov	x25, x22
   3237c:	bl	165a0 <where_history@plt>
   32380:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32384:	ldr	x8, [x8, #2480]
   32388:	ldr	x2, [x23]
   3238c:	ldr	x1, [x8]
   32390:	bl	17920 <replace_history_entry@plt>
   32394:	mov	x22, x0
   32398:	ldr	x0, [x0]
   3239c:	bl	169f0 <xfree@plt>
   323a0:	ldr	x0, [x22, #8]
   323a4:	cbz	x0, 323ac <rl_do_undo@@Base+0x1c0>
   323a8:	bl	171b0 <free@plt>
   323ac:	mov	x0, x22
   323b0:	bl	169f0 <xfree@plt>
   323b4:	mov	x22, x25
   323b8:	mov	w25, #0x1                   	// #1
   323bc:	ldr	x2, [x23]
   323c0:	mov	w0, #0xffffffff            	// #-1
   323c4:	mov	x1, x21
   323c8:	bl	16de0 <_hs_replace_history_data@plt>
   323cc:	ldr	x9, [x28]
   323d0:	cbz	x9, 3224c <rl_do_undo@@Base+0x60>
   323d4:	ldr	x8, [x9, #16]
   323d8:	cbz	x8, 3224c <rl_do_undo@@Base+0x60>
   323dc:	cmp	x21, x8
   323e0:	b.eq	32244 <rl_do_undo@@Base+0x58>  // b.none
   323e4:	mov	x9, x8
   323e8:	ldr	x8, [x8]
   323ec:	cbz	x8, 3224c <rl_do_undo@@Base+0x60>
   323f0:	cmp	x8, x21
   323f4:	b.ne	323e4 <rl_do_undo@@Base+0x1f8>  // b.any
   323f8:	ldr	x8, [x23]
   323fc:	str	x8, [x9]
   32400:	b	3224c <rl_do_undo@@Base+0x60>
   32404:	mov	w0, #0x1                   	// #1
   32408:	b	32410 <rl_do_undo@@Base+0x224>
   3240c:	mov	w0, wzr
   32410:	ldp	x20, x19, [sp, #80]
   32414:	ldp	x22, x21, [sp, #64]
   32418:	ldp	x24, x23, [sp, #48]
   3241c:	ldp	x26, x25, [sp, #32]
   32420:	ldp	x28, x27, [sp, #16]
   32424:	ldp	x29, x30, [sp], #96
   32428:	ret

000000000003242c <_rl_fix_last_undo_of_type@@Base>:
   3242c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32430:	ldr	x8, [x8, #3040]
   32434:	ldr	x8, [x8]
   32438:	cbz	x8, 32454 <_rl_fix_last_undo_of_type@@Base+0x28>
   3243c:	ldr	w9, [x8, #24]
   32440:	cmp	w9, w0
   32444:	b.ne	32434 <_rl_fix_last_undo_of_type@@Base+0x8>  // b.any
   32448:	mov	w0, wzr
   3244c:	stp	w1, w2, [x8, #8]
   32450:	ret
   32454:	mov	w0, #0x1                   	// #1
   32458:	ret

000000000003245c <rl_begin_undo_group@@Base>:
   3245c:	stp	x29, x30, [sp, #-16]!
   32460:	mov	w0, #0x20                  	// #32
   32464:	mov	x29, sp
   32468:	bl	16bf0 <xmalloc@plt>
   3246c:	stp	xzr, xzr, [x0, #8]
   32470:	str	xzr, [x0]
   32474:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32478:	ldr	x9, [x9, #3040]
   3247c:	mov	w8, #0x2                   	// #2
   32480:	str	w8, [x0, #24]
   32484:	ldr	x8, [x9]
   32488:	str	x8, [x0]
   3248c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32490:	ldr	x8, [x8, #4048]
   32494:	str	x0, [x9]
   32498:	mov	w0, wzr
   3249c:	ldr	w10, [x8]
   324a0:	add	w9, w10, #0x1
   324a4:	str	w9, [x8]
   324a8:	ldp	x29, x30, [sp], #16
   324ac:	ret

00000000000324b0 <rl_end_undo_group@@Base>:
   324b0:	stp	x29, x30, [sp, #-16]!
   324b4:	mov	w0, #0x20                  	// #32
   324b8:	mov	x29, sp
   324bc:	bl	16bf0 <xmalloc@plt>
   324c0:	stp	xzr, xzr, [x0, #8]
   324c4:	str	xzr, [x0]
   324c8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   324cc:	ldr	x9, [x9, #3040]
   324d0:	mov	w8, #0x3                   	// #3
   324d4:	str	w8, [x0, #24]
   324d8:	ldr	x8, [x9]
   324dc:	str	x8, [x0]
   324e0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   324e4:	ldr	x8, [x8, #4048]
   324e8:	str	x0, [x9]
   324ec:	mov	w0, wzr
   324f0:	ldr	w10, [x8]
   324f4:	sub	w9, w10, #0x1
   324f8:	str	w9, [x8]
   324fc:	ldp	x29, x30, [sp], #16
   32500:	ret

0000000000032504 <rl_modifying@@Base>:
   32504:	stp	x29, x30, [sp, #-64]!
   32508:	cmp	w0, w1
   3250c:	stp	x20, x19, [sp, #48]
   32510:	csel	w19, w0, w1, gt
   32514:	csel	w20, w1, w0, gt
   32518:	cmp	w20, w19
   3251c:	str	x23, [sp, #16]
   32520:	stp	x22, x21, [sp, #32]
   32524:	mov	x29, sp
   32528:	b.eq	325f8 <rl_modifying@@Base+0xf4>  // b.none
   3252c:	mov	w0, w20
   32530:	mov	w1, w19
   32534:	bl	178e0 <rl_copy_text@plt>
   32538:	mov	x21, x0
   3253c:	mov	w0, #0x20                  	// #32
   32540:	bl	16bf0 <xmalloc@plt>
   32544:	stp	xzr, xzr, [x0, #8]
   32548:	str	xzr, [x0]
   3254c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32550:	ldr	x22, [x22, #3040]
   32554:	mov	w8, #0x2                   	// #2
   32558:	str	w8, [x0, #24]
   3255c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32560:	ldr	x8, [x22]
   32564:	str	x8, [x0]
   32568:	ldr	x23, [x23, #4048]
   3256c:	str	x0, [x22]
   32570:	mov	w0, #0x20                  	// #32
   32574:	ldr	w8, [x23]
   32578:	add	w8, w8, #0x1
   3257c:	str	w8, [x23]
   32580:	bl	16bf0 <xmalloc@plt>
   32584:	str	wzr, [x0, #24]
   32588:	stp	w20, w19, [x0, #8]
   3258c:	str	x21, [x0, #16]
   32590:	str	xzr, [x0]
   32594:	ldr	x8, [x22]
   32598:	str	x8, [x0]
   3259c:	str	x0, [x22]
   325a0:	mov	w0, #0x20                  	// #32
   325a4:	bl	16bf0 <xmalloc@plt>
   325a8:	mov	w8, #0x1                   	// #1
   325ac:	stp	w20, w19, [x0, #8]
   325b0:	str	xzr, [x0, #16]
   325b4:	str	xzr, [x0]
   325b8:	str	w8, [x0, #24]
   325bc:	ldr	x8, [x22]
   325c0:	str	x8, [x0]
   325c4:	str	x0, [x22]
   325c8:	mov	w0, #0x20                  	// #32
   325cc:	bl	16bf0 <xmalloc@plt>
   325d0:	mov	w8, #0x3                   	// #3
   325d4:	stp	xzr, xzr, [x0, #8]
   325d8:	str	w8, [x0, #24]
   325dc:	str	xzr, [x0]
   325e0:	ldr	x8, [x22]
   325e4:	str	x8, [x0]
   325e8:	ldr	w8, [x23]
   325ec:	str	x0, [x22]
   325f0:	sub	w8, w8, #0x1
   325f4:	str	w8, [x23]
   325f8:	ldp	x20, x19, [sp, #48]
   325fc:	ldp	x22, x21, [sp, #32]
   32600:	ldr	x23, [sp, #16]
   32604:	mov	w0, wzr
   32608:	ldp	x29, x30, [sp], #64
   3260c:	ret

0000000000032610 <rl_revert_line@@Base>:
   32610:	stp	x29, x30, [sp, #-32]!
   32614:	str	x19, [sp, #16]
   32618:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3261c:	ldr	x19, [x19, #3040]
   32620:	mov	x29, sp
   32624:	ldr	x8, [x19]
   32628:	cbz	x8, 32664 <rl_revert_line@@Base+0x54>
   3262c:	bl	16f90 <rl_do_undo@plt>
   32630:	ldr	x8, [x19]
   32634:	cbnz	x8, 3262c <rl_revert_line@@Base+0x1c>
   32638:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3263c:	ldr	x8, [x8, #3416]
   32640:	ldr	w8, [x8]
   32644:	cbnz	w8, 32668 <rl_revert_line@@Base+0x58>
   32648:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3264c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32650:	ldr	x8, [x8, #3272]
   32654:	ldr	x9, [x9, #3512]
   32658:	str	wzr, [x8]
   3265c:	str	wzr, [x9]
   32660:	b	32668 <rl_revert_line@@Base+0x58>
   32664:	bl	17390 <rl_ding@plt>
   32668:	ldr	x19, [sp, #16]
   3266c:	mov	w0, wzr
   32670:	ldp	x29, x30, [sp], #32
   32674:	ret

0000000000032678 <rl_undo_command@@Base>:
   32678:	stp	x29, x30, [sp, #-32]!
   3267c:	cmp	w0, #0x1
   32680:	str	x19, [sp, #16]
   32684:	mov	x29, sp
   32688:	b.lt	326a8 <rl_undo_command@@Base+0x30>  // b.tstop
   3268c:	mov	w19, w0
   32690:	bl	16f90 <rl_do_undo@plt>
   32694:	cbz	w0, 326a4 <rl_undo_command@@Base+0x2c>
   32698:	sub	w19, w19, #0x1
   3269c:	cbnz	w19, 32690 <rl_undo_command@@Base+0x18>
   326a0:	b	326a8 <rl_undo_command@@Base+0x30>
   326a4:	bl	17390 <rl_ding@plt>
   326a8:	ldr	x19, [sp, #16]
   326ac:	mov	w0, wzr
   326b0:	ldp	x29, x30, [sp], #32
   326b4:	ret

00000000000326b8 <_rl_with_macro_input@@Base>:
   326b8:	stp	x29, x30, [sp, #-32]!
   326bc:	stp	x20, x19, [sp, #16]
   326c0:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   326c4:	ldr	w8, [x20, #3144]
   326c8:	mov	x29, sp
   326cc:	cmp	w8, #0x11
   326d0:	b.lt	326ec <_rl_with_macro_input@@Base+0x34>  // b.tstop
   326d4:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   326d8:	add	x0, x0, #0xe52
   326dc:	bl	176c0 <_rl_errmsg@plt>
   326e0:	ldp	x20, x19, [sp, #16]
   326e4:	ldp	x29, x30, [sp], #32
   326e8:	b	174a0 <_rl_abort_internal@plt>
   326ec:	mov	x19, x0
   326f0:	mov	w0, #0x18                  	// #24
   326f4:	bl	16bf0 <xmalloc@plt>
   326f8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   326fc:	ldr	x9, [x8, #3152]
   32700:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32704:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32708:	str	x9, [x0]
   3270c:	ldr	w9, [x10, #3148]
   32710:	ldr	x11, [x11, #3488]
   32714:	str	w9, [x0, #16]
   32718:	ldr	x9, [x11]
   3271c:	str	x9, [x0, #8]
   32720:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32724:	ldr	x9, [x9, #2984]
   32728:	str	x0, [x8, #3152]
   3272c:	ldr	w8, [x20, #3144]
   32730:	str	wzr, [x10, #3148]
   32734:	ldr	x12, [x9]
   32738:	str	x19, [x11]
   3273c:	add	w8, w8, #0x1
   32740:	str	w8, [x20, #3144]
   32744:	orr	x10, x12, #0x800
   32748:	str	x10, [x9]
   3274c:	ldp	x20, x19, [sp, #16]
   32750:	ldp	x29, x30, [sp], #32
   32754:	ret

0000000000032758 <_rl_push_executing_macro@@Base>:
   32758:	stp	x29, x30, [sp, #-16]!
   3275c:	mov	w0, #0x18                  	// #24
   32760:	mov	x29, sp
   32764:	bl	16bf0 <xmalloc@plt>
   32768:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   3276c:	ldr	x9, [x8, #3152]
   32770:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32774:	str	x9, [x0]
   32778:	ldr	w9, [x10, #3148]
   3277c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32780:	ldr	x10, [x10, #3488]
   32784:	str	w9, [x0, #16]
   32788:	ldr	x9, [x10]
   3278c:	str	x9, [x0, #8]
   32790:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   32794:	ldr	w10, [x9, #3144]
   32798:	str	x0, [x8, #3152]
   3279c:	add	w8, w10, #0x1
   327a0:	str	w8, [x9, #3144]
   327a4:	ldp	x29, x30, [sp], #16
   327a8:	ret

00000000000327ac <_rl_next_macro_key@@Base>:
   327ac:	stp	x29, x30, [sp, #-64]!
   327b0:	stp	x24, x23, [sp, #16]
   327b4:	stp	x22, x21, [sp, #32]
   327b8:	stp	x20, x19, [sp, #48]
   327bc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   327c0:	ldr	x21, [x21, #3488]
   327c4:	mov	x29, sp
   327c8:	ldr	x0, [x21]
   327cc:	cbz	x0, 32830 <_rl_next_macro_key@@Base+0x84>
   327d0:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   327d4:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   327d8:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   327dc:	ldrsw	x8, [x23, #3148]
   327e0:	ldrb	w19, [x0, x8]
   327e4:	cbnz	w19, 32838 <_rl_next_macro_key@@Base+0x8c>
   327e8:	bl	171b0 <free@plt>
   327ec:	ldr	x0, [x22, #3152]
   327f0:	str	xzr, [x21]
   327f4:	str	wzr, [x23, #3148]
   327f8:	cbz	x0, 328ac <_rl_next_macro_key@@Base+0x100>
   327fc:	ldr	x8, [x0, #8]
   32800:	str	x8, [x21]
   32804:	ldr	w8, [x0, #16]
   32808:	str	w8, [x23, #3148]
   3280c:	ldr	x8, [x0]
   32810:	str	x8, [x22, #3152]
   32814:	bl	169f0 <xfree@plt>
   32818:	ldr	w8, [x20, #3144]
   3281c:	ldr	x0, [x21]
   32820:	sub	w8, w8, #0x1
   32824:	str	w8, [x20, #3144]
   32828:	cbnz	x0, 327dc <_rl_next_macro_key@@Base+0x30>
   3282c:	b	328b8 <_rl_next_macro_key@@Base+0x10c>
   32830:	mov	w19, wzr
   32834:	b	328d0 <_rl_next_macro_key@@Base+0x124>
   32838:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3283c:	ldr	x24, [x24, #2984]
   32840:	add	x8, x8, #0x1
   32844:	str	w8, [x23, #3148]
   32848:	ldr	x9, [x24]
   3284c:	tbz	w9, #19, 328d0 <_rl_next_macro_key@@Base+0x124>
   32850:	mov	w10, #0x48                  	// #72
   32854:	and	x9, x9, x10
   32858:	cbz	x9, 328d0 <_rl_next_macro_key@@Base+0x124>
   3285c:	ldrb	w8, [x0, x8]
   32860:	cbnz	w8, 328d0 <_rl_next_macro_key@@Base+0x124>
   32864:	bl	171b0 <free@plt>
   32868:	ldr	x0, [x22, #3152]
   3286c:	str	xzr, [x21]
   32870:	str	wzr, [x23, #3148]
   32874:	cbz	x0, 328e8 <_rl_next_macro_key@@Base+0x13c>
   32878:	ldr	x8, [x0, #8]
   3287c:	str	x8, [x21]
   32880:	ldr	w8, [x0, #16]
   32884:	str	w8, [x23, #3148]
   32888:	ldr	x8, [x0]
   3288c:	str	x8, [x22, #3152]
   32890:	bl	169f0 <xfree@plt>
   32894:	ldr	w8, [x20, #3144]
   32898:	ldr	x9, [x21]
   3289c:	sub	w8, w8, #0x1
   328a0:	str	w8, [x20, #3144]
   328a4:	cbnz	x9, 328d0 <_rl_next_macro_key@@Base+0x124>
   328a8:	b	328f4 <_rl_next_macro_key@@Base+0x148>
   328ac:	ldr	w8, [x20, #3144]
   328b0:	sub	w8, w8, #0x1
   328b4:	str	w8, [x20, #3144]
   328b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   328bc:	ldr	x8, [x8, #2984]
   328c0:	mov	w19, wzr
   328c4:	ldr	x9, [x8]
   328c8:	and	x9, x9, #0xfffffffffffff7ff
   328cc:	str	x9, [x8]
   328d0:	mov	w0, w19
   328d4:	ldp	x20, x19, [sp, #48]
   328d8:	ldp	x22, x21, [sp, #32]
   328dc:	ldp	x24, x23, [sp, #16]
   328e0:	ldp	x29, x30, [sp], #64
   328e4:	ret
   328e8:	ldr	w8, [x20, #3144]
   328ec:	sub	w8, w8, #0x1
   328f0:	str	w8, [x20, #3144]
   328f4:	ldr	x8, [x24]
   328f8:	and	x8, x8, #0xfffffffffffff7ff
   328fc:	str	x8, [x24]
   32900:	b	328d0 <_rl_next_macro_key@@Base+0x124>

0000000000032904 <_rl_pop_executing_macro@@Base>:
   32904:	stp	x29, x30, [sp, #-32]!
   32908:	str	x19, [sp, #16]
   3290c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32910:	ldr	x19, [x19, #3488]
   32914:	mov	x29, sp
   32918:	ldr	x0, [x19]
   3291c:	cbz	x0, 32924 <_rl_pop_executing_macro@@Base+0x20>
   32920:	bl	171b0 <free@plt>
   32924:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32928:	ldr	x0, [x8, #3152]
   3292c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   32930:	str	xzr, [x19]
   32934:	str	wzr, [x9, #3148]
   32938:	cbz	x0, 32974 <_rl_pop_executing_macro@@Base+0x70>
   3293c:	ldr	x10, [x0, #8]
   32940:	str	x10, [x19]
   32944:	ldr	w10, [x0, #16]
   32948:	str	w10, [x9, #3148]
   3294c:	ldr	x9, [x0]
   32950:	str	x9, [x8, #3152]
   32954:	bl	169f0 <xfree@plt>
   32958:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   3295c:	ldr	w9, [x8, #3144]
   32960:	ldr	x10, [x19]
   32964:	sub	w9, w9, #0x1
   32968:	str	w9, [x8, #3144]
   3296c:	cbnz	x10, 32998 <_rl_pop_executing_macro@@Base+0x94>
   32970:	b	32984 <_rl_pop_executing_macro@@Base+0x80>
   32974:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32978:	ldr	w9, [x8, #3144]
   3297c:	sub	w9, w9, #0x1
   32980:	str	w9, [x8, #3144]
   32984:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32988:	ldr	x8, [x8, #2984]
   3298c:	ldr	x9, [x8]
   32990:	and	x9, x9, #0xfffffffffffff7ff
   32994:	str	x9, [x8]
   32998:	ldr	x19, [sp, #16]
   3299c:	ldp	x29, x30, [sp], #32
   329a0:	ret

00000000000329a4 <_rl_peek_macro_key@@Base>:
   329a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   329a8:	ldr	x8, [x8, #3488]
   329ac:	ldr	x8, [x8]
   329b0:	cbz	x8, 329e4 <_rl_peek_macro_key@@Base+0x40>
   329b4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   329b8:	ldrsw	x9, [x9, #3148]
   329bc:	ldrb	w0, [x8, x9]
   329c0:	cbz	w0, 329c8 <_rl_peek_macro_key@@Base+0x24>
   329c4:	ret
   329c8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   329cc:	ldr	x8, [x8, #3152]
   329d0:	cbz	x8, 329e4 <_rl_peek_macro_key@@Base+0x40>
   329d4:	ldr	x8, [x8, #8]
   329d8:	cbz	x8, 329e4 <_rl_peek_macro_key@@Base+0x40>
   329dc:	ldrb	w0, [x8]
   329e0:	ret
   329e4:	mov	w0, wzr
   329e8:	ret

00000000000329ec <_rl_prev_macro_key@@Base>:
   329ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   329f0:	ldr	x8, [x8, #3488]
   329f4:	ldr	x8, [x8]
   329f8:	cbz	x8, 32a18 <_rl_prev_macro_key@@Base+0x2c>
   329fc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   32a00:	ldrsw	x10, [x9, #3148]
   32a04:	cbz	w10, 32a18 <_rl_prev_macro_key@@Base+0x2c>
   32a08:	sub	x10, x10, #0x1
   32a0c:	str	w10, [x9, #3148]
   32a10:	ldrb	w0, [x8, x10]
   32a14:	ret
   32a18:	mov	w0, wzr
   32a1c:	ret

0000000000032a20 <_rl_add_macro_char@@Base>:
   32a20:	stp	x29, x30, [sp, #-48]!
   32a24:	stp	x20, x19, [sp, #32]
   32a28:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   32a2c:	ldr	w11, [x20, #3160]
   32a30:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   32a34:	str	x21, [sp, #16]
   32a38:	ldrsw	x10, [x9, #3164]
   32a3c:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   32a40:	ldr	x8, [x21, #3168]
   32a44:	add	w11, w11, #0x1
   32a48:	cmp	w11, w10
   32a4c:	mov	w19, w0
   32a50:	mov	x29, sp
   32a54:	b.lt	32a88 <_rl_add_macro_char@@Base+0x68>  // b.tstop
   32a58:	cbz	x8, 32a70 <_rl_add_macro_char@@Base+0x50>
   32a5c:	add	x1, x10, #0x19
   32a60:	mov	x0, x8
   32a64:	str	w1, [x9, #3164]
   32a68:	bl	16a50 <xrealloc@plt>
   32a6c:	b	32a80 <_rl_add_macro_char@@Base+0x60>
   32a70:	mov	w8, #0x19                  	// #25
   32a74:	mov	w0, #0x19                  	// #25
   32a78:	str	w8, [x9, #3164]
   32a7c:	bl	16bf0 <xmalloc@plt>
   32a80:	mov	x8, x0
   32a84:	str	x0, [x21, #3168]
   32a88:	ldrsw	x9, [x20, #3160]
   32a8c:	ldr	x21, [sp, #16]
   32a90:	add	x10, x9, #0x1
   32a94:	str	w10, [x20, #3160]
   32a98:	strb	w19, [x8, x9]
   32a9c:	strb	wzr, [x8, x10]
   32aa0:	ldp	x20, x19, [sp, #32]
   32aa4:	ldp	x29, x30, [sp], #48
   32aa8:	ret

0000000000032aac <_rl_kill_kbd_macro@@Base>:
   32aac:	stp	x29, x30, [sp, #-32]!
   32ab0:	str	x19, [sp, #16]
   32ab4:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   32ab8:	ldr	x0, [x19, #3168]
   32abc:	mov	x29, sp
   32ac0:	cbz	x0, 32acc <_rl_kill_kbd_macro@@Base+0x20>
   32ac4:	bl	169f0 <xfree@plt>
   32ac8:	str	xzr, [x19, #3168]
   32acc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32ad0:	ldr	x19, [x19, #3488]
   32ad4:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32ad8:	str	wzr, [x8, #3160]
   32adc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32ae0:	ldr	x0, [x19]
   32ae4:	str	wzr, [x8, #3164]
   32ae8:	cbz	x0, 32af0 <_rl_kill_kbd_macro@@Base+0x44>
   32aec:	bl	171b0 <free@plt>
   32af0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32af4:	ldr	x8, [x8, #2984]
   32af8:	str	xzr, [x19]
   32afc:	ldr	x19, [sp, #16]
   32b00:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32b04:	ldr	x9, [x8]
   32b08:	str	wzr, [x10, #3148]
   32b0c:	and	x9, x9, #0xffffffffffffefff
   32b10:	str	x9, [x8]
   32b14:	ldp	x29, x30, [sp], #32
   32b18:	ret

0000000000032b1c <rl_start_kbd_macro@@Base>:
   32b1c:	stp	x29, x30, [sp, #-48]!
   32b20:	str	x21, [sp, #16]
   32b24:	stp	x20, x19, [sp, #32]
   32b28:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32b2c:	ldr	x20, [x20, #2984]
   32b30:	mov	x29, sp
   32b34:	ldr	x8, [x20]
   32b38:	tbnz	w8, #12, 32b98 <rl_start_kbd_macro@@Base+0x7c>
   32b3c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32b40:	ldr	x9, [x9, #3792]
   32b44:	ldr	w9, [x9]
   32b48:	cbz	w9, 32ba4 <rl_start_kbd_macro@@Base+0x88>
   32b4c:	adrp	x19, 58000 <_rl_vimvcxt@@Base>
   32b50:	ldr	x0, [x19, #3168]
   32b54:	cbz	x0, 32c04 <rl_start_kbd_macro@@Base+0xe8>
   32b58:	bl	16440 <strlen@plt>
   32b5c:	add	x0, x0, #0x1
   32b60:	bl	16bf0 <xmalloc@plt>
   32b64:	ldr	x1, [x19, #3168]
   32b68:	mov	x19, x0
   32b6c:	bl	17480 <strcpy@plt>
   32b70:	adrp	x21, 58000 <_rl_vimvcxt@@Base>
   32b74:	ldr	w8, [x21, #3144]
   32b78:	cmp	w8, #0x11
   32b7c:	b.lt	32bb0 <rl_start_kbd_macro@@Base+0x94>  // b.tstop
   32b80:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   32b84:	add	x0, x0, #0xe52
   32b88:	bl	176c0 <_rl_errmsg@plt>
   32b8c:	bl	174a0 <_rl_abort_internal@plt>
   32b90:	ldr	x8, [x20]
   32b94:	b	32c04 <rl_start_kbd_macro@@Base+0xe8>
   32b98:	bl	174a0 <_rl_abort_internal@plt>
   32b9c:	mov	w0, #0x1                   	// #1
   32ba0:	b	32c10 <rl_start_kbd_macro@@Base+0xf4>
   32ba4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   32ba8:	str	wzr, [x9, #3160]
   32bac:	b	32c04 <rl_start_kbd_macro@@Base+0xe8>
   32bb0:	mov	w0, #0x18                  	// #24
   32bb4:	bl	16bf0 <xmalloc@plt>
   32bb8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32bbc:	ldr	x9, [x8, #3152]
   32bc0:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32bc4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32bc8:	str	x9, [x0]
   32bcc:	ldr	w9, [x10, #3148]
   32bd0:	ldr	x11, [x11, #3488]
   32bd4:	str	w9, [x0, #16]
   32bd8:	ldr	x9, [x11]
   32bdc:	str	x9, [x0, #8]
   32be0:	str	x0, [x8, #3152]
   32be4:	ldr	w8, [x21, #3144]
   32be8:	ldr	x9, [x20]
   32bec:	str	wzr, [x10, #3148]
   32bf0:	str	x19, [x11]
   32bf4:	add	w10, w8, #0x1
   32bf8:	orr	x8, x9, #0x800
   32bfc:	str	w10, [x21, #3144]
   32c00:	str	x8, [x20]
   32c04:	mov	w0, wzr
   32c08:	orr	x8, x8, #0x1000
   32c0c:	str	x8, [x20]
   32c10:	ldp	x20, x19, [sp, #32]
   32c14:	ldr	x21, [sp, #16]
   32c18:	ldp	x29, x30, [sp], #48
   32c1c:	ret

0000000000032c20 <rl_end_kbd_macro@@Base>:
   32c20:	stp	x29, x30, [sp, #-16]!
   32c24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32c28:	ldr	x8, [x8, #2984]
   32c2c:	mov	x29, sp
   32c30:	ldrb	w9, [x8, #1]
   32c34:	tbnz	w9, #4, 32c48 <rl_end_kbd_macro@@Base+0x28>
   32c38:	bl	174a0 <_rl_abort_internal@plt>
   32c3c:	mov	w0, #0x1                   	// #1
   32c40:	ldp	x29, x30, [sp], #16
   32c44:	ret
   32c48:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32c4c:	ldr	x9, [x9, #3144]
   32c50:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32c54:	ldrsw	x11, [x10, #3160]
   32c58:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   32c5c:	ldrsw	x9, [x9]
   32c60:	ldr	x12, [x12, #3168]
   32c64:	sub	w0, w0, #0x1
   32c68:	sub	x9, x11, x9
   32c6c:	str	w9, [x10, #3160]
   32c70:	strb	wzr, [x12, x9]
   32c74:	ldr	x9, [x8]
   32c78:	and	x9, x9, #0xffffffffffffefff
   32c7c:	str	x9, [x8]
   32c80:	bl	16e20 <rl_call_last_kbd_macro@plt>
   32c84:	mov	w0, wzr
   32c88:	ldp	x29, x30, [sp], #16
   32c8c:	ret

0000000000032c90 <rl_call_last_kbd_macro@@Base>:
   32c90:	stp	x29, x30, [sp, #-96]!
   32c94:	stp	x22, x21, [sp, #64]
   32c98:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   32c9c:	ldr	x8, [x22, #3168]
   32ca0:	stp	x20, x19, [sp, #80]
   32ca4:	mov	w19, w0
   32ca8:	str	x27, [sp, #16]
   32cac:	stp	x26, x25, [sp, #32]
   32cb0:	stp	x24, x23, [sp, #48]
   32cb4:	mov	x29, sp
   32cb8:	cbnz	x8, 32cc0 <rl_call_last_kbd_macro@@Base+0x30>
   32cbc:	bl	174a0 <_rl_abort_internal@plt>
   32cc0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32cc4:	ldr	x23, [x23, #2984]
   32cc8:	ldrb	w8, [x23, #1]
   32ccc:	tbnz	w8, #4, 32d7c <rl_call_last_kbd_macro@@Base+0xec>
   32cd0:	cbz	w19, 32d98 <rl_call_last_kbd_macro@@Base+0x108>
   32cd4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32cd8:	ldr	x27, [x27, #3488]
   32cdc:	adrp	x20, 3f000 <filename_completion_function@@Base+0x580>
   32ce0:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   32ce4:	add	x20, x20, #0xe52
   32ce8:	adrp	x25, 58000 <_rl_vimvcxt@@Base>
   32cec:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   32cf0:	b	32d3c <rl_call_last_kbd_macro@@Base+0xac>
   32cf4:	mov	w0, #0x18                  	// #24
   32cf8:	bl	16bf0 <xmalloc@plt>
   32cfc:	ldr	x8, [x25, #3152]
   32d00:	str	x8, [x0]
   32d04:	ldr	w8, [x26, #3148]
   32d08:	str	w8, [x0, #16]
   32d0c:	ldr	x8, [x27]
   32d10:	str	x8, [x0, #8]
   32d14:	ldr	w8, [x24, #3144]
   32d18:	ldr	x9, [x23]
   32d1c:	str	x0, [x25, #3152]
   32d20:	str	x21, [x27]
   32d24:	add	w8, w8, #0x1
   32d28:	orr	x9, x9, #0x800
   32d2c:	str	wzr, [x26, #3148]
   32d30:	str	w8, [x24, #3144]
   32d34:	str	x9, [x23]
   32d38:	cbz	w19, 32d98 <rl_call_last_kbd_macro@@Base+0x108>
   32d3c:	ldr	x0, [x22, #3168]
   32d40:	sub	w19, w19, #0x1
   32d44:	bl	16440 <strlen@plt>
   32d48:	add	x0, x0, #0x1
   32d4c:	bl	16bf0 <xmalloc@plt>
   32d50:	ldr	x1, [x22, #3168]
   32d54:	mov	x21, x0
   32d58:	bl	17480 <strcpy@plt>
   32d5c:	ldr	w8, [x24, #3144]
   32d60:	cmp	w8, #0x11
   32d64:	b.lt	32cf4 <rl_call_last_kbd_macro@@Base+0x64>  // b.tstop
   32d68:	mov	x0, x20
   32d6c:	bl	176c0 <_rl_errmsg@plt>
   32d70:	bl	174a0 <_rl_abort_internal@plt>
   32d74:	cbnz	w19, 32d3c <rl_call_last_kbd_macro@@Base+0xac>
   32d78:	b	32d98 <rl_call_last_kbd_macro@@Base+0x108>
   32d7c:	bl	17390 <rl_ding@plt>
   32d80:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32d84:	ldrsw	x9, [x8, #3160]
   32d88:	ldr	x10, [x22, #3168]
   32d8c:	sub	x9, x9, #0x1
   32d90:	str	w9, [x8, #3160]
   32d94:	strb	wzr, [x10, x9]
   32d98:	ldp	x20, x19, [sp, #80]
   32d9c:	ldp	x22, x21, [sp, #64]
   32da0:	ldp	x24, x23, [sp, #48]
   32da4:	ldp	x26, x25, [sp, #32]
   32da8:	ldr	x27, [sp, #16]
   32dac:	mov	w0, wzr
   32db0:	ldp	x29, x30, [sp], #96
   32db4:	ret

0000000000032db8 <rl_print_last_kbd_macro@@Base>:
   32db8:	stp	x29, x30, [sp, #-32]!
   32dbc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32dc0:	ldr	x0, [x8, #3168]
   32dc4:	stp	x20, x19, [sp, #16]
   32dc8:	mov	x29, sp
   32dcc:	cbz	x0, 32e28 <rl_print_last_kbd_macro@@Base+0x70>
   32dd0:	mov	w1, #0x1                   	// #1
   32dd4:	mov	w20, #0x1                   	// #1
   32dd8:	bl	168f0 <_rl_untranslate_macro_value@plt>
   32ddc:	mov	x19, x0
   32de0:	bl	171e0 <rl_crlf@plt>
   32de4:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   32de8:	add	x0, x0, #0x2d3
   32dec:	mov	x1, x19
   32df0:	bl	177d0 <printf@plt>
   32df4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32df8:	ldr	x8, [x8, #2544]
   32dfc:	ldr	x0, [x8]
   32e00:	bl	17430 <fflush@plt>
   32e04:	bl	171e0 <rl_crlf@plt>
   32e08:	cbz	x19, 32e14 <rl_print_last_kbd_macro@@Base+0x5c>
   32e0c:	mov	x0, x19
   32e10:	bl	171b0 <free@plt>
   32e14:	bl	164d0 <rl_forced_update_display@plt>
   32e18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32e1c:	ldr	x8, [x8, #3064]
   32e20:	str	w20, [x8]
   32e24:	b	32e2c <rl_print_last_kbd_macro@@Base+0x74>
   32e28:	bl	17390 <rl_ding@plt>
   32e2c:	ldp	x20, x19, [sp, #16]
   32e30:	mov	w0, wzr
   32e34:	ldp	x29, x30, [sp], #32
   32e38:	ret

0000000000032e3c <rl_push_macro_input@@Base>:
   32e3c:	stp	x29, x30, [sp, #-32]!
   32e40:	stp	x20, x19, [sp, #16]
   32e44:	adrp	x20, 58000 <_rl_vimvcxt@@Base>
   32e48:	ldr	w8, [x20, #3144]
   32e4c:	mov	x29, sp
   32e50:	cmp	w8, #0x11
   32e54:	b.lt	32e70 <rl_push_macro_input@@Base+0x34>  // b.tstop
   32e58:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   32e5c:	add	x0, x0, #0xe52
   32e60:	bl	176c0 <_rl_errmsg@plt>
   32e64:	ldp	x20, x19, [sp, #16]
   32e68:	ldp	x29, x30, [sp], #32
   32e6c:	b	174a0 <_rl_abort_internal@plt>
   32e70:	mov	x19, x0
   32e74:	mov	w0, #0x18                  	// #24
   32e78:	bl	16bf0 <xmalloc@plt>
   32e7c:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   32e80:	ldr	x9, [x8, #3152]
   32e84:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   32e88:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32e8c:	str	x9, [x0]
   32e90:	ldr	w9, [x10, #3148]
   32e94:	ldr	x11, [x11, #3488]
   32e98:	str	w9, [x0, #16]
   32e9c:	ldr	x9, [x11]
   32ea0:	str	x9, [x0, #8]
   32ea4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32ea8:	ldr	x9, [x9, #2984]
   32eac:	str	x0, [x8, #3152]
   32eb0:	ldr	w8, [x20, #3144]
   32eb4:	str	wzr, [x10, #3148]
   32eb8:	ldr	x12, [x9]
   32ebc:	str	x19, [x11]
   32ec0:	add	w8, w8, #0x1
   32ec4:	str	w8, [x20, #3144]
   32ec8:	orr	x10, x12, #0x800
   32ecc:	str	x10, [x9]
   32ed0:	ldp	x20, x19, [sp, #16]
   32ed4:	ldp	x29, x30, [sp], #32
   32ed8:	ret

0000000000032edc <rl_getc@@Base>:
   32edc:	sub	sp, sp, #0xd0
   32ee0:	stp	x29, x30, [sp, #128]
   32ee4:	str	x25, [sp, #144]
   32ee8:	stp	x24, x23, [sp, #160]
   32eec:	stp	x22, x21, [sp, #176]
   32ef0:	stp	x20, x19, [sp, #192]
   32ef4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32ef8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32efc:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   32f00:	ldr	x21, [x21, #2808]
   32f04:	ldr	x20, [x20, #2224]
   32f08:	ldr	x24, [x24, #2440]
   32f0c:	mov	x19, x0
   32f10:	mov	w22, #0x1                   	// #1
   32f14:	mov	x23, sp
   32f18:	add	x29, sp, #0x80
   32f1c:	ldr	w8, [x21]
   32f20:	cbz	w8, 32f2c <rl_getc@@Base+0x50>
   32f24:	ldr	w0, [x21]
   32f28:	bl	17460 <_rl_signal_handler@plt>
   32f2c:	movi	v0.2d, #0x0
   32f30:	mov	x0, x19
   32f34:	stp	q0, q0, [sp, #96]
   32f38:	stp	q0, q0, [sp, #64]
   32f3c:	stp	q0, q0, [sp, #32]
   32f40:	stp	q0, q0, [sp]
   32f44:	bl	16860 <fileno@plt>
   32f48:	add	w8, w0, #0x3f
   32f4c:	cmp	w0, #0x0
   32f50:	csel	w8, w8, w0, lt  // lt = tstop
   32f54:	and	w8, w8, #0xffffffc0
   32f58:	sub	w8, w0, w8
   32f5c:	mov	x0, x19
   32f60:	lsl	x25, x22, x8
   32f64:	bl	16860 <fileno@plt>
   32f68:	add	w8, w0, #0x3f
   32f6c:	cmp	w0, #0x0
   32f70:	csel	w8, w8, w0, lt  // lt = tstop
   32f74:	asr	w8, w8, #6
   32f78:	sbfiz	x8, x8, #3, #32
   32f7c:	ldr	x9, [x23, x8]
   32f80:	mov	x0, x19
   32f84:	orr	x9, x25, x9
   32f88:	str	x9, [x23, x8]
   32f8c:	bl	16860 <fileno@plt>
   32f90:	add	w0, w0, #0x1
   32f94:	mov	x1, sp
   32f98:	mov	x2, xzr
   32f9c:	mov	x3, xzr
   32fa0:	mov	x4, xzr
   32fa4:	mov	x5, x20
   32fa8:	bl	16ce0 <pselect@plt>
   32fac:	tbnz	w0, #31, 32fc4 <rl_getc@@Base+0xe8>
   32fb0:	mov	x0, x19
   32fb4:	bl	16860 <fileno@plt>
   32fb8:	add	x1, x29, #0x1c
   32fbc:	mov	w2, #0x1                   	// #1
   32fc0:	bl	17520 <read@plt>
   32fc4:	cbz	w0, 33098 <rl_getc@@Base+0x1bc>
   32fc8:	cmp	w0, #0x1
   32fcc:	b.eq	330a0 <rl_getc@@Base+0x1c4>  // b.none
   32fd0:	bl	177f0 <__errno_location@plt>
   32fd4:	ldr	w8, [x0]
   32fd8:	cmp	w8, #0x4
   32fdc:	b.eq	32ffc <rl_getc@@Base+0x120>  // b.none
   32fe0:	cmp	w8, #0xb
   32fe4:	b.ne	3307c <rl_getc@@Base+0x1a0>  // b.any
   32fe8:	mov	x0, x19
   32fec:	bl	16860 <fileno@plt>
   32ff0:	bl	17740 <sh_unset_nodelay_mode@plt>
   32ff4:	tbz	w0, #31, 32f1c <rl_getc@@Base+0x40>
   32ff8:	b	33098 <rl_getc@@Base+0x1bc>
   32ffc:	ldr	w8, [x21]
   33000:	cmp	w8, #0x1
   33004:	b.eq	3307c <rl_getc@@Base+0x1a0>  // b.none
   33008:	ldr	w8, [x21]
   3300c:	cmp	w8, #0xf
   33010:	b.eq	3307c <rl_getc@@Base+0x1a0>  // b.none
   33014:	ldr	w8, [x21]
   33018:	cmp	w8, #0x2
   3301c:	b.eq	3302c <rl_getc@@Base+0x150>  // b.none
   33020:	ldr	w8, [x21]
   33024:	cmp	w8, #0x3
   33028:	b.ne	3304c <rl_getc@@Base+0x170>  // b.any
   3302c:	ldr	w8, [x21]
   33030:	cbz	w8, 3303c <rl_getc@@Base+0x160>
   33034:	ldr	w0, [x21]
   33038:	bl	17460 <_rl_signal_handler@plt>
   3303c:	ldr	x8, [x24]
   33040:	cbz	x8, 32f1c <rl_getc@@Base+0x40>
   33044:	blr	x8
   33048:	b	32f1c <rl_getc@@Base+0x40>
   3304c:	ldr	w9, [x21]
   33050:	ldr	w8, [x21]
   33054:	cmp	w9, #0x1c
   33058:	b.ne	33064 <rl_getc@@Base+0x188>  // b.any
   3305c:	cbnz	w8, 33034 <rl_getc@@Base+0x158>
   33060:	b	3303c <rl_getc@@Base+0x160>
   33064:	cmp	w8, #0xe
   33068:	b.eq	3302c <rl_getc@@Base+0x150>  // b.none
   3306c:	ldr	w8, [x21]
   33070:	cmp	w8, #0x1a
   33074:	b.eq	3302c <rl_getc@@Base+0x150>  // b.none
   33078:	b	3303c <rl_getc@@Base+0x160>
   3307c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33080:	ldr	x8, [x8, #2984]
   33084:	ldrb	w8, [x8]
   33088:	tst	w8, #0x8
   3308c:	mov	w8, #0xfffffffe            	// #-2
   33090:	cinc	w0, w8, eq  // eq = none
   33094:	b	330a4 <rl_getc@@Base+0x1c8>
   33098:	mov	w0, #0xffffffff            	// #-1
   3309c:	b	330a4 <rl_getc@@Base+0x1c8>
   330a0:	ldrb	w0, [x29, #28]
   330a4:	ldp	x20, x19, [sp, #192]
   330a8:	ldp	x22, x21, [sp, #176]
   330ac:	ldp	x24, x23, [sp, #160]
   330b0:	ldr	x25, [sp, #144]
   330b4:	ldp	x29, x30, [sp, #128]
   330b8:	add	sp, sp, #0xd0
   330bc:	ret

00000000000330c0 <_rl_any_typein@@Base>:
   330c0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   330c4:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   330c8:	ldr	w8, [x8, #3200]
   330cc:	ldr	w9, [x9, #3204]
   330d0:	cmp	w8, w9
   330d4:	cset	w0, ne  // ne = any
   330d8:	ret

00000000000330dc <_rl_pushed_input_available@@Base>:
   330dc:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   330e0:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   330e4:	ldr	w8, [x8, #3200]
   330e8:	ldr	w9, [x9, #3204]
   330ec:	cmp	w8, w9
   330f0:	cset	w0, ne  // ne = any
   330f4:	ret

00000000000330f8 <_rl_unget_char@@Base>:
   330f8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   330fc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   33100:	ldr	w10, [x9, #3200]
   33104:	ldr	w9, [x8, #3204]
   33108:	mvn	w11, w10
   3310c:	subs	w10, w9, w10
   33110:	add	w11, w9, w11
   33114:	add	w10, w10, #0x1ff
   33118:	csel	w10, w11, w10, gt
   3311c:	cbz	w10, 33144 <_rl_unget_char@@Base+0x4c>
   33120:	subs	w9, w9, #0x1
   33124:	mov	w10, #0x1ff                 	// #511
   33128:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   3312c:	add	x11, x11, #0xc88
   33130:	csel	w9, w10, w9, lt  // lt = tstop
   33134:	strb	w0, [x11, w9, sxtw]
   33138:	mov	w0, #0x1                   	// #1
   3313c:	str	w9, [x8, #3204]
   33140:	ret
   33144:	mov	w0, wzr
   33148:	ret

000000000003314c <rl_set_keyboard_input_timeout@@Base>:
   3314c:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   33150:	ldr	w8, [x9, #3376]
   33154:	tbnz	w0, #31, 3315c <rl_set_keyboard_input_timeout@@Base+0x10>
   33158:	str	w0, [x9, #3376]
   3315c:	mov	w0, w8
   33160:	ret

0000000000033164 <_rl_input_available@@Base>:
   33164:	sub	sp, sp, #0x130
   33168:	stp	x29, x30, [sp, #272]
   3316c:	str	x28, [sp, #288]
   33170:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33174:	ldr	x8, [x8, #1968]
   33178:	add	x29, sp, #0x110
   3317c:	ldr	x8, [x8]
   33180:	cbz	x8, 3318c <_rl_input_available@@Base+0x28>
   33184:	blr	x8
   33188:	b	33230 <_rl_input_available@@Base+0xcc>
   3318c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33190:	ldr	x8, [x8, #3176]
   33194:	ldr	x0, [x8]
   33198:	bl	16860 <fileno@plt>
   3319c:	add	w8, w0, #0x3f
   331a0:	cmp	w0, #0x0
   331a4:	csel	w8, w8, w0, lt  // lt = tstop
   331a8:	movi	v0.2d, #0x0
   331ac:	asr	w13, w8, #6
   331b0:	and	w8, w8, #0xffffffc0
   331b4:	mov	w9, #0x1                   	// #1
   331b8:	sub	x10, x29, #0x80
   331bc:	add	x11, sp, #0x10
   331c0:	stp	q0, q0, [x29, #-128]
   331c4:	stp	q0, q0, [x29, #-96]
   331c8:	stp	q0, q0, [x29, #-64]
   331cc:	stp	q0, q0, [x29, #-32]
   331d0:	stp	q0, q0, [sp, #16]
   331d4:	stp	q0, q0, [sp, #48]
   331d8:	stp	q0, q0, [sp, #80]
   331dc:	stp	q0, q0, [sp, #112]
   331e0:	sbfiz	x13, x13, #3, #32
   331e4:	sub	w8, w0, w8
   331e8:	adrp	x12, 57000 <rl_insert@@Base+0x20abc>
   331ec:	ldr	x14, [x10, x13]
   331f0:	lsl	x8, x9, x8
   331f4:	ldr	x9, [x11, x13]
   331f8:	ldrsw	x12, [x12, #3376]
   331fc:	orr	x14, x14, x8
   33200:	add	w0, w0, #0x1
   33204:	orr	x8, x9, x8
   33208:	sub	x1, x29, #0x80
   3320c:	add	x3, sp, #0x10
   33210:	mov	x4, sp
   33214:	mov	x2, xzr
   33218:	str	x14, [x10, x13]
   3321c:	stp	xzr, x12, [sp]
   33220:	str	x8, [x11, x13]
   33224:	bl	175f0 <select@plt>
   33228:	cmp	w0, #0x0
   3322c:	cset	w0, gt
   33230:	ldr	x28, [sp, #288]
   33234:	ldp	x29, x30, [sp, #272]
   33238:	add	sp, sp, #0x130
   3323c:	ret

0000000000033240 <_rl_input_queued@@Base>:
   33240:	sub	sp, sp, #0x140
   33244:	stp	x20, x19, [sp, #304]
   33248:	adrp	x19, 57000 <rl_insert@@Base+0x20abc>
   3324c:	ldr	w20, [x19, #3376]
   33250:	stp	x29, x30, [sp, #272]
   33254:	str	x28, [sp, #288]
   33258:	add	x29, sp, #0x110
   3325c:	tbnz	w0, #31, 33264 <_rl_input_queued@@Base+0x24>
   33260:	str	w0, [x19, #3376]
   33264:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33268:	ldr	x8, [x8, #1968]
   3326c:	ldr	x8, [x8]
   33270:	cbz	x8, 33294 <_rl_input_queued@@Base+0x54>
   33274:	blr	x8
   33278:	tbnz	w20, #31, 33280 <_rl_input_queued@@Base+0x40>
   3327c:	str	w20, [x19, #3376]
   33280:	ldp	x20, x19, [sp, #304]
   33284:	ldr	x28, [sp, #288]
   33288:	ldp	x29, x30, [sp, #272]
   3328c:	add	sp, sp, #0x140
   33290:	ret
   33294:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33298:	ldr	x8, [x8, #3176]
   3329c:	ldr	x0, [x8]
   332a0:	bl	16860 <fileno@plt>
   332a4:	add	w8, w0, #0x3f
   332a8:	cmp	w0, #0x0
   332ac:	csel	w8, w8, w0, lt  // lt = tstop
   332b0:	movi	v0.2d, #0x0
   332b4:	asr	w13, w8, #6
   332b8:	and	w8, w8, #0xffffffc0
   332bc:	mov	w9, #0x1                   	// #1
   332c0:	sub	x10, x29, #0x80
   332c4:	add	x11, sp, #0x10
   332c8:	stp	q0, q0, [x29, #-128]
   332cc:	stp	q0, q0, [x29, #-96]
   332d0:	stp	q0, q0, [x29, #-64]
   332d4:	stp	q0, q0, [x29, #-32]
   332d8:	stp	q0, q0, [sp, #16]
   332dc:	stp	q0, q0, [sp, #48]
   332e0:	stp	q0, q0, [sp, #80]
   332e4:	stp	q0, q0, [sp, #112]
   332e8:	sbfiz	x13, x13, #3, #32
   332ec:	sub	w8, w0, w8
   332f0:	ldr	x14, [x10, x13]
   332f4:	lsl	x8, x9, x8
   332f8:	ldr	x9, [x11, x13]
   332fc:	ldrsw	x12, [x19, #3376]
   33300:	orr	x14, x14, x8
   33304:	add	w0, w0, #0x1
   33308:	orr	x8, x9, x8
   3330c:	sub	x1, x29, #0x80
   33310:	add	x3, sp, #0x10
   33314:	mov	x4, sp
   33318:	mov	x2, xzr
   3331c:	str	x14, [x10, x13]
   33320:	stp	xzr, x12, [sp]
   33324:	str	x8, [x11, x13]
   33328:	bl	175f0 <select@plt>
   3332c:	cmp	w0, #0x0
   33330:	cset	w0, gt
   33334:	tbz	w20, #31, 3327c <_rl_input_queued@@Base+0x3c>
   33338:	b	33280 <_rl_input_queued@@Base+0x40>

000000000003333c <_rl_insert_typein@@Base>:
   3333c:	stp	x29, x30, [sp, #-32]!
   33340:	stp	x20, x19, [sp, #16]
   33344:	mov	w20, w0
   33348:	mov	w0, #0x200                 	// #512
   3334c:	mov	x29, sp
   33350:	bl	16bf0 <xmalloc@plt>
   33354:	strb	w20, [x0]
   33358:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   3335c:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   33360:	ldr	w11, [x8, #3200]
   33364:	ldr	w10, [x9, #3204]
   33368:	mov	x19, x0
   3336c:	mov	w8, #0x1                   	// #1
   33370:	cmp	w11, w10
   33374:	b.eq	33408 <_rl_insert_typein@@Base+0xcc>  // b.none
   33378:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3337c:	adrp	x15, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33380:	ldr	x14, [x14, #1992]
   33384:	ldr	x15, [x15, #2552]
   33388:	adrp	x12, 58000 <_rl_vimvcxt@@Base>
   3338c:	add	x12, x12, #0xc88
   33390:	ldrb	w13, [x12, w10, sxtw]
   33394:	ldr	x16, [x14]
   33398:	cmp	w10, #0x1fe
   3339c:	csinc	w10, wzr, w10, gt
   333a0:	lsl	x17, x13, #4
   333a4:	ldrb	w17, [x16, x17]
   333a8:	cbnz	w17, 333dc <_rl_insert_typein@@Base+0xa0>
   333ac:	add	x16, x16, x13, lsl #4
   333b0:	ldr	x16, [x16, #8]
   333b4:	cmp	x16, x15
   333b8:	b.ne	333dc <_rl_insert_typein@@Base+0xa0>  // b.any
   333bc:	add	x16, x8, #0x1
   333c0:	cmp	w11, w10
   333c4:	strb	w13, [x19, x8]
   333c8:	mov	x8, x16
   333cc:	b.ne	33390 <_rl_insert_typein@@Base+0x54>  // b.any
   333d0:	str	w11, [x9, #3204]
   333d4:	mov	x8, x16
   333d8:	b	33408 <_rl_insert_typein@@Base+0xcc>
   333dc:	mov	w14, #0x1ff                 	// #511
   333e0:	sub	w15, w14, w11
   333e4:	cmp	w10, w11
   333e8:	csinv	w11, w15, w11, le
   333ec:	cmn	w10, w11
   333f0:	str	w10, [x9, #3204]
   333f4:	b.eq	33408 <_rl_insert_typein@@Base+0xcc>  // b.none
   333f8:	subs	w10, w10, #0x1
   333fc:	csel	w10, w14, w10, lt  // lt = tstop
   33400:	str	w10, [x9, #3204]
   33404:	strb	w13, [x12, w10, sxtw]
   33408:	mov	x0, x19
   3340c:	strb	wzr, [x19, w8, uxtw]
   33410:	bl	16430 <rl_insert_text@plt>
   33414:	mov	x0, x19
   33418:	ldp	x20, x19, [sp, #16]
   3341c:	ldp	x29, x30, [sp], #32
   33420:	b	169f0 <xfree@plt>

0000000000033424 <rl_stuff_char@@Base>:
   33424:	adrp	x10, 58000 <_rl_vimvcxt@@Base>
   33428:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   3342c:	ldrsw	x9, [x8, #3200]
   33430:	ldr	w10, [x10, #3204]
   33434:	mvn	w11, w9
   33438:	subs	w12, w10, w9
   3343c:	add	w10, w10, w11
   33440:	add	w11, w12, #0x1ff
   33444:	csel	w10, w10, w11, gt
   33448:	cbz	w10, 334a4 <rl_stuff_char@@Base+0x80>
   3344c:	cmn	w0, #0x1
   33450:	b.ne	3347c <rl_stuff_char@@Base+0x58>  // b.any
   33454:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33458:	ldr	x10, [x10, #2984]
   3345c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33460:	mov	w13, #0xffffffff            	// #-1
   33464:	mov	w0, #0xa                   	// #10
   33468:	ldr	x11, [x10]
   3346c:	ldr	x12, [x12, #3328]
   33470:	orr	x11, x11, #0x20000
   33474:	str	w13, [x12]
   33478:	str	x11, [x10]
   3347c:	adrp	x11, 58000 <_rl_vimvcxt@@Base>
   33480:	add	w10, w9, #0x1
   33484:	add	x11, x11, #0xc88
   33488:	cmp	w9, #0x1ff
   3348c:	str	w10, [x8, #3200]
   33490:	strb	w0, [x11, x9]
   33494:	b.lt	3349c <rl_stuff_char@@Base+0x78>  // b.tstop
   33498:	str	wzr, [x8, #3200]
   3349c:	mov	w0, #0x1                   	// #1
   334a0:	ret
   334a4:	mov	w0, wzr
   334a8:	ret

00000000000334ac <rl_execute_next@@Base>:
   334ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   334b0:	ldr	x8, [x8, #2984]
   334b4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   334b8:	ldr	x9, [x8]
   334bc:	ldr	x10, [x10, #3328]
   334c0:	orr	x9, x9, #0x20000
   334c4:	str	w0, [x10]
   334c8:	mov	w0, wzr
   334cc:	str	x9, [x8]
   334d0:	ret

00000000000334d4 <rl_clear_pending_input@@Base>:
   334d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   334d8:	ldr	x8, [x8, #2984]
   334dc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   334e0:	mov	w0, wzr
   334e4:	ldr	x9, [x8]
   334e8:	ldr	x10, [x10, #3328]
   334ec:	and	x9, x9, #0xfffffffffffdffff
   334f0:	str	wzr, [x10]
   334f4:	str	x9, [x8]
   334f8:	ret

00000000000334fc <rl_read_key@@Base>:
   334fc:	sub	sp, sp, #0x180
   33500:	stp	x29, x30, [sp, #288]
   33504:	stp	x28, x27, [sp, #304]
   33508:	stp	x26, x25, [sp, #320]
   3350c:	stp	x24, x23, [sp, #336]
   33510:	stp	x22, x21, [sp, #352]
   33514:	stp	x20, x19, [sp, #368]
   33518:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3351c:	ldr	x10, [x10, #3328]
   33520:	add	x29, sp, #0x120
   33524:	ldr	w19, [x10]
   33528:	cbz	w19, 33548 <rl_read_key@@Base+0x4c>
   3352c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33530:	ldr	x8, [x8, #2984]
   33534:	str	wzr, [x10]
   33538:	ldr	x9, [x8]
   3353c:	and	x9, x9, #0xfffffffffffdffff
   33540:	str	x9, [x8]
   33544:	b	33554 <rl_read_key@@Base+0x58>
   33548:	bl	16890 <_rl_next_macro_key@plt>
   3354c:	cbz	w0, 33578 <rl_read_key@@Base+0x7c>
   33550:	and	w19, w0, #0xff
   33554:	mov	w0, w19
   33558:	ldp	x20, x19, [sp, #368]
   3355c:	ldp	x22, x21, [sp, #352]
   33560:	ldp	x24, x23, [sp, #336]
   33564:	ldp	x26, x25, [sp, #320]
   33568:	ldp	x28, x27, [sp, #304]
   3356c:	ldp	x29, x30, [sp, #288]
   33570:	add	sp, sp, #0x180
   33574:	ret
   33578:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3357c:	ldr	x8, [x8, #3632]
   33580:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33584:	adrp	x26, 58000 <_rl_vimvcxt@@Base>
   33588:	adrp	x24, 58000 <_rl_vimvcxt@@Base>
   3358c:	ldr	x8, [x8]
   33590:	ldr	x23, [x23, #2808]
   33594:	cbz	x8, 33978 <rl_read_key@@Base+0x47c>
   33598:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3359c:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   335a0:	ldr	x21, [x21, #3176]
   335a4:	ldr	x27, [x27, #2464]
   335a8:	mov	w22, #0x4240                	// #16960
   335ac:	adrp	x28, 58000 <_rl_vimvcxt@@Base>
   335b0:	movk	w22, #0xf, lsl #16
   335b4:	add	x28, x28, #0xc88
   335b8:	b	335d0 <rl_read_key@@Base+0xd4>
   335bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   335c0:	ldr	x8, [x8, #3632]
   335c4:	mov	w19, wzr
   335c8:	ldr	x8, [x8]
   335cc:	cbz	x8, 33554 <rl_read_key@@Base+0x58>
   335d0:	ldr	w9, [x26, #3200]
   335d4:	ldrsw	x8, [x24, #3204]
   335d8:	cmp	w9, w8
   335dc:	b.ne	339ac <rl_read_key@@Base+0x4b0>  // b.any
   335e0:	ldr	x0, [x21]
   335e4:	stur	wzr, [x29, #-12]
   335e8:	sturb	wzr, [x29, #-16]
   335ec:	bl	16860 <fileno@plt>
   335f0:	adrp	x9, 57000 <rl_insert@@Base+0x20abc>
   335f4:	ldr	w9, [x9, #3376]
   335f8:	add	w8, w0, #0x3f
   335fc:	cmp	w0, #0x0
   33600:	csel	w8, w8, w0, lt  // lt = tstop
   33604:	sdiv	w12, w9, w22
   33608:	movi	v0.2d, #0x0
   3360c:	asr	w10, w8, #6
   33610:	msub	w9, w12, w22, w9
   33614:	stp	q0, q0, [sp, #144]
   33618:	stp	q0, q0, [sp, #176]
   3361c:	stp	q0, q0, [sp, #208]
   33620:	stp	q0, q0, [sp, #240]
   33624:	stp	q0, q0, [sp, #16]
   33628:	stp	q0, q0, [sp, #48]
   3362c:	stp	q0, q0, [sp, #80]
   33630:	stp	q0, q0, [sp, #112]
   33634:	sbfiz	x10, x10, #3, #32
   33638:	add	x13, sp, #0x90
   3363c:	sxtw	x12, w12
   33640:	sxtw	x9, w9
   33644:	add	x14, sp, #0x10
   33648:	ldr	x11, [x13, x10]
   3364c:	stp	x12, x9, [sp]
   33650:	ldr	x9, [x14, x10]
   33654:	and	w8, w8, #0xffffffc0
   33658:	sub	w8, w0, w8
   3365c:	mov	w12, #0x1                   	// #1
   33660:	lsl	x8, x12, x8
   33664:	mov	w19, w0
   33668:	orr	x11, x11, x8
   3366c:	orr	x8, x9, x8
   33670:	add	w0, w0, #0x1
   33674:	add	x1, sp, #0x90
   33678:	add	x3, sp, #0x10
   3367c:	mov	x4, sp
   33680:	mov	x2, xzr
   33684:	str	x11, [x13, x10]
   33688:	str	x8, [x14, x10]
   3368c:	bl	175f0 <select@plt>
   33690:	cmp	w0, #0x1
   33694:	b.lt	337cc <rl_read_key@@Base+0x2d0>  // b.tstop
   33698:	mov	x25, x23
   3369c:	mov	x23, x21
   336a0:	bl	177f0 <__errno_location@plt>
   336a4:	mov	x21, x0
   336a8:	str	wzr, [x0]
   336ac:	sub	x2, x29, #0xc
   336b0:	mov	w1, #0x541b                	// #21531
   336b4:	mov	w0, w19
   336b8:	bl	17990 <ioctl@plt>
   336bc:	mov	w20, w0
   336c0:	cmn	w0, #0x1
   336c4:	b.eq	337d4 <rl_read_key@@Base+0x2d8>  // b.none
   336c8:	ldur	w9, [x29, #-12]
   336cc:	cmp	w9, #0x1
   336d0:	b.lt	33920 <rl_read_key@@Base+0x424>  // b.tstop
   336d4:	ldrsw	x10, [x26, #3200]
   336d8:	ldr	w8, [x24, #3204]
   336dc:	mvn	w11, w10
   336e0:	subs	w12, w8, w10
   336e4:	add	w8, w8, w11
   336e8:	add	w11, w12, #0x1ff
   336ec:	csel	w11, w8, w11, gt
   336f0:	cmp	w9, w11
   336f4:	b.gt	337e8 <rl_read_key@@Base+0x2ec>
   336f8:	cmp	w11, #0x1fe
   336fc:	b.le	337e8 <rl_read_key@@Base+0x2ec>
   33700:	cmn	w20, #0x1
   33704:	b.eq	337fc <rl_read_key@@Base+0x300>  // b.none
   33708:	sub	w8, w9, #0x1
   3370c:	stur	w8, [x29, #-12]
   33710:	cbz	w9, 338a8 <rl_read_key@@Base+0x3ac>
   33714:	mov	x21, x23
   33718:	mov	x23, x25
   3371c:	ldr	w8, [x23]
   33720:	cbz	w8, 3372c <rl_read_key@@Base+0x230>
   33724:	ldr	w0, [x23]
   33728:	bl	17460 <_rl_signal_handler@plt>
   3372c:	ldr	x8, [x27]
   33730:	ldr	x0, [x21]
   33734:	blr	x8
   33738:	ldrsw	x8, [x26, #3200]
   3373c:	ldr	w9, [x24, #3204]
   33740:	mvn	w10, w8
   33744:	subs	w11, w9, w8
   33748:	add	w9, w9, w10
   3374c:	add	w10, w11, #0x1ff
   33750:	csel	w9, w9, w10, gt
   33754:	cbz	w9, 3382c <rl_read_key@@Base+0x330>
   33758:	cmn	w0, #0x1
   3375c:	mov	w9, w0
   33760:	b.ne	3378c <rl_read_key@@Base+0x290>  // b.any
   33764:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33768:	ldr	x10, [x10, #2984]
   3376c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33770:	mov	w12, #0xffffffff            	// #-1
   33774:	ldr	x9, [x10]
   33778:	ldr	x11, [x11, #3328]
   3377c:	orr	x9, x9, #0x20000
   33780:	str	x9, [x10]
   33784:	mov	w9, #0xa                   	// #10
   33788:	str	w12, [x11]
   3378c:	add	w10, w8, #0x1
   33790:	cmp	w8, #0x1ff
   33794:	str	w10, [x26, #3200]
   33798:	strb	w9, [x28, x8]
   3379c:	b.lt	337a4 <rl_read_key@@Base+0x2a8>  // b.tstop
   337a0:	str	wzr, [x26, #3200]
   337a4:	cmp	w0, #0xa
   337a8:	mov	w8, #0x1                   	// #1
   337ac:	b.eq	3392c <rl_read_key@@Base+0x430>  // b.none
   337b0:	cmp	w0, #0xd
   337b4:	b.eq	3392c <rl_read_key@@Base+0x430>  // b.none
   337b8:	ldur	w8, [x29, #-12]
   337bc:	sub	w9, w8, #0x1
   337c0:	stur	w9, [x29, #-12]
   337c4:	cbnz	w8, 3371c <rl_read_key@@Base+0x220>
   337c8:	b	3382c <rl_read_key@@Base+0x330>
   337cc:	mov	w8, wzr
   337d0:	b	3392c <rl_read_key@@Base+0x430>
   337d4:	ldr	w8, [x21]
   337d8:	cmp	w8, #0x5
   337dc:	b.ne	33834 <rl_read_key@@Base+0x338>  // b.any
   337e0:	mov	w8, #0xffffffff            	// #-1
   337e4:	b	33924 <rl_read_key@@Base+0x428>
   337e8:	cmp	w11, #0x1ff
   337ec:	csel	w9, wzr, w11, lt  // lt = tstop
   337f0:	stur	w9, [x29, #-12]
   337f4:	cmn	w20, #0x1
   337f8:	b.ne	33708 <rl_read_key@@Base+0x20c>  // b.any
   337fc:	mov	w8, #0x1                   	// #1
   33800:	cbz	w11, 33924 <rl_read_key@@Base+0x428>
   33804:	mov	x21, x23
   33808:	mov	x23, x25
   3380c:	cbz	w9, 3392c <rl_read_key@@Base+0x430>
   33810:	ldurb	w8, [x29, #-16]
   33814:	add	w9, w10, #0x1
   33818:	cmp	w10, #0x1ff
   3381c:	str	w9, [x26, #3200]
   33820:	strb	w8, [x28, x10]
   33824:	b.lt	3382c <rl_read_key@@Base+0x330>  // b.tstop
   33828:	str	wzr, [x26, #3200]
   3382c:	mov	w8, #0x1                   	// #1
   33830:	b	3392c <rl_read_key@@Base+0x430>
   33834:	mov	w1, #0x3                   	// #3
   33838:	mov	w0, w19
   3383c:	mov	w2, wzr
   33840:	stur	wzr, [x29, #-12]
   33844:	bl	17410 <fcntl@plt>
   33848:	mov	w22, w0
   3384c:	orr	w2, w0, #0x800
   33850:	mov	w1, #0x4                   	// #4
   33854:	mov	w0, w19
   33858:	bl	17410 <fcntl@plt>
   3385c:	sub	x1, x29, #0x10
   33860:	mov	w2, #0x1                   	// #1
   33864:	mov	w0, w19
   33868:	bl	17520 <read@plt>
   3386c:	stur	w0, [x29, #-12]
   33870:	mov	w1, #0x4                   	// #4
   33874:	mov	w0, w19
   33878:	mov	w2, w22
   3387c:	bl	17410 <fcntl@plt>
   33880:	ldur	w9, [x29, #-12]
   33884:	cbz	w9, 338b0 <rl_read_key@@Base+0x3b4>
   33888:	mov	w22, #0x4240                	// #16960
   3388c:	cmn	w9, #0x1
   33890:	movk	w22, #0xf, lsl #16
   33894:	b.ne	336cc <rl_read_key@@Base+0x1d0>  // b.any
   33898:	ldr	w8, [x21]
   3389c:	cmp	w8, #0x5
   338a0:	csetm	w8, eq  // eq = none
   338a4:	b	33924 <rl_read_key@@Base+0x428>
   338a8:	mov	w8, #0x1                   	// #1
   338ac:	b	33924 <rl_read_key@@Base+0x428>
   338b0:	ldrsw	x8, [x26, #3200]
   338b4:	ldr	w9, [x24, #3204]
   338b8:	mvn	w10, w8
   338bc:	subs	w11, w9, w8
   338c0:	add	w9, w9, w10
   338c4:	add	w10, w11, #0x1ff
   338c8:	csel	w9, w9, w10, gt
   338cc:	cbz	w9, 33968 <rl_read_key@@Base+0x46c>
   338d0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   338d4:	ldr	x9, [x9, #3328]
   338d8:	mov	w10, #0xffffffff            	// #-1
   338dc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   338e0:	mov	w22, #0x4240                	// #16960
   338e4:	str	w10, [x9]
   338e8:	ldr	x11, [x11, #2984]
   338ec:	add	w10, w8, #0x1
   338f0:	cmp	w8, #0x1ff
   338f4:	movk	w22, #0xf, lsl #16
   338f8:	ldr	x9, [x11]
   338fc:	str	w10, [x26, #3200]
   33900:	orr	x9, x9, #0x20000
   33904:	str	x9, [x11]
   33908:	mov	w9, #0xa                   	// #10
   3390c:	strb	w9, [x28, x8]
   33910:	b.lt	33920 <rl_read_key@@Base+0x424>  // b.tstop
   33914:	mov	w8, wzr
   33918:	str	wzr, [x26, #3200]
   3391c:	b	33924 <rl_read_key@@Base+0x428>
   33920:	mov	w8, wzr
   33924:	mov	x21, x23
   33928:	mov	x23, x25
   3392c:	tbnz	w8, #31, 339c0 <rl_read_key@@Base+0x4c4>
   33930:	cbnz	w8, 335bc <rl_read_key@@Base+0xc0>
   33934:	ldr	w8, [x23]
   33938:	cbz	w8, 33944 <rl_read_key@@Base+0x448>
   3393c:	ldr	w0, [x23]
   33940:	bl	17460 <_rl_signal_handler@plt>
   33944:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33948:	ldr	x8, [x8, #3296]
   3394c:	ldr	w8, [x8]
   33950:	cbnz	w8, 33a2c <rl_read_key@@Base+0x530>
   33954:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33958:	ldr	x8, [x8, #3632]
   3395c:	ldr	x8, [x8]
   33960:	blr	x8
   33964:	b	335bc <rl_read_key@@Base+0xc0>
   33968:	mov	w22, #0x4240                	// #16960
   3396c:	mov	w8, wzr
   33970:	movk	w22, #0xf, lsl #16
   33974:	b	33924 <rl_read_key@@Base+0x428>
   33978:	ldr	w9, [x26, #3200]
   3397c:	ldrsw	x8, [x24, #3204]
   33980:	cmp	w9, w8
   33984:	b.ne	33a00 <rl_read_key@@Base+0x504>  // b.any
   33988:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3398c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33990:	ldr	x8, [x8, #2464]
   33994:	ldr	x9, [x9, #3176]
   33998:	ldr	x8, [x8]
   3399c:	ldr	x0, [x9]
   339a0:	blr	x8
   339a4:	mov	w19, w0
   339a8:	b	33a18 <rl_read_key@@Base+0x51c>
   339ac:	ldrb	w0, [x28, x8]
   339b0:	cmp	w8, #0x1fe
   339b4:	csinc	w8, wzr, w8, gt
   339b8:	str	w8, [x24, #3204]
   339bc:	b	33558 <rl_read_key@@Base+0x5c>
   339c0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   339c4:	ldr	x9, [x9, #3296]
   339c8:	mov	w8, #0x1                   	// #1
   339cc:	str	w8, [x9]
   339d0:	bl	177f0 <__errno_location@plt>
   339d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   339d8:	ldr	x8, [x8, #2984]
   339dc:	ldr	w9, [x0]
   339e0:	mov	w10, #0xfffffffe            	// #-2
   339e4:	ldrb	w8, [x8]
   339e8:	tst	w8, #0x8
   339ec:	cinc	w8, w10, eq  // eq = none
   339f0:	cmp	w9, #0x5
   339f4:	mov	w9, #0xa                   	// #10
   339f8:	csel	w19, w8, w9, eq  // eq = none
   339fc:	b	33554 <rl_read_key@@Base+0x58>
   33a00:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   33a04:	add	x9, x9, #0xc88
   33a08:	ldrb	w19, [x9, x8]
   33a0c:	cmp	w8, #0x1fe
   33a10:	csinc	w8, wzr, w8, gt
   33a14:	str	w8, [x24, #3204]
   33a18:	ldr	w8, [x23]
   33a1c:	cbz	w8, 33554 <rl_read_key@@Base+0x58>
   33a20:	ldr	w0, [x23]
   33a24:	bl	17460 <_rl_signal_handler@plt>
   33a28:	b	33554 <rl_read_key@@Base+0x58>
   33a2c:	mov	w19, #0xa                   	// #10
   33a30:	b	33554 <rl_read_key@@Base+0x58>

0000000000033a34 <_rl_read_mbchar@@Base>:
   33a34:	sub	sp, sp, #0x50
   33a38:	stp	x29, x30, [sp, #16]
   33a3c:	str	x23, [sp, #32]
   33a40:	stp	x22, x21, [sp, #48]
   33a44:	stp	x20, x19, [sp, #64]
   33a48:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33a4c:	ldr	x23, [x23, #2984]
   33a50:	mov	x19, x0
   33a54:	mov	x20, xzr
   33a58:	sxtw	x22, w1
   33a5c:	add	x29, sp, #0x10
   33a60:	cmp	x20, x22
   33a64:	str	xzr, [sp, #8]
   33a68:	b.ge	33ac8 <_rl_read_mbchar@@Base+0x94>  // b.tcont
   33a6c:	ldr	x8, [x23]
   33a70:	orr	x8, x8, #0x40
   33a74:	str	x8, [x23]
   33a78:	bl	16e60 <rl_read_key@plt>
   33a7c:	ldr	x8, [x23]
   33a80:	and	x8, x8, #0xffffffffffffffbf
   33a84:	str	x8, [x23]
   33a88:	tbnz	w0, #31, 33ac8 <_rl_read_mbchar@@Base+0x94>
   33a8c:	add	x21, x20, #0x1
   33a90:	strb	w0, [x19, x20]
   33a94:	add	x0, x29, #0x1c
   33a98:	add	x3, sp, #0x8
   33a9c:	mov	x1, x19
   33aa0:	mov	x2, x21
   33aa4:	bl	16370 <mbrtowc@plt>
   33aa8:	cmn	x0, #0x2
   33aac:	mov	x20, x21
   33ab0:	b.eq	33a60 <_rl_read_mbchar@@Base+0x2c>  // b.none
   33ab4:	cbnz	x0, 33ac4 <_rl_read_mbchar@@Base+0x90>
   33ab8:	strb	wzr, [x19]
   33abc:	mov	w20, #0x1                   	// #1
   33ac0:	b	33ac8 <_rl_read_mbchar@@Base+0x94>
   33ac4:	mov	w20, w21
   33ac8:	mov	w0, w20
   33acc:	ldp	x20, x19, [sp, #64]
   33ad0:	ldp	x22, x21, [sp, #48]
   33ad4:	ldr	x23, [sp, #32]
   33ad8:	ldp	x29, x30, [sp, #16]
   33adc:	add	sp, sp, #0x50
   33ae0:	ret

0000000000033ae4 <_rl_read_mbstring@@Base>:
   33ae4:	stp	x29, x30, [sp, #-64]!
   33ae8:	stp	x22, x21, [sp, #32]
   33aec:	mov	w22, w2
   33af0:	sxtw	x21, w22
   33af4:	stp	x20, x19, [sp, #48]
   33af8:	mov	x20, x1
   33afc:	mov	w19, w0
   33b00:	mov	x0, x1
   33b04:	mov	w1, wzr
   33b08:	mov	x2, x21
   33b0c:	str	x23, [sp, #16]
   33b10:	mov	x29, sp
   33b14:	bl	16bb0 <memset@plt>
   33b18:	tbnz	w19, #31, 33b7c <_rl_read_mbstring@@Base+0x98>
   33b1c:	cmp	w22, #0x1
   33b20:	b.lt	33b7c <_rl_read_mbstring@@Base+0x98>  // b.tstop
   33b24:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33b28:	ldr	x23, [x23, #2984]
   33b2c:	mov	x22, xzr
   33b30:	add	x1, x29, #0x18
   33b34:	mov	x0, x20
   33b38:	strb	w19, [x20, x22]
   33b3c:	str	xzr, [x29, #24]
   33b40:	bl	174b0 <_rl_get_char_len@plt>
   33b44:	cmn	w0, #0x2
   33b48:	b.ne	33b7c <_rl_read_mbstring@@Base+0x98>  // b.any
   33b4c:	ldr	x8, [x23]
   33b50:	orr	x8, x8, #0x40
   33b54:	str	x8, [x23]
   33b58:	bl	16e60 <rl_read_key@plt>
   33b5c:	ldr	x8, [x23]
   33b60:	mov	w19, w0
   33b64:	and	x8, x8, #0xffffffffffffffbf
   33b68:	str	x8, [x23]
   33b6c:	tbnz	w0, #31, 33b7c <_rl_read_mbstring@@Base+0x98>
   33b70:	add	x22, x22, #0x1
   33b74:	cmp	x22, x21
   33b78:	b.lt	33b30 <_rl_read_mbstring@@Base+0x4c>  // b.tstop
   33b7c:	mov	w0, w19
   33b80:	ldp	x20, x19, [sp, #48]
   33b84:	ldp	x22, x21, [sp, #32]
   33b88:	ldr	x23, [sp, #16]
   33b8c:	ldp	x29, x30, [sp], #64
   33b90:	ret

0000000000033b94 <rl_callback_handler_install@@Base>:
   33b94:	stp	x29, x30, [sp, #-32]!
   33b98:	str	x19, [sp, #16]
   33b9c:	mov	x29, sp
   33ba0:	mov	x19, x1
   33ba4:	bl	17060 <rl_set_prompt@plt>
   33ba8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33bac:	ldr	x8, [x8, #2984]
   33bb0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33bb4:	ldr	x9, [x8]
   33bb8:	ldr	x10, [x10, #2648]
   33bbc:	orr	x9, x9, #0x80000
   33bc0:	str	x9, [x8]
   33bc4:	str	x19, [x10]
   33bc8:	bl	17370 <rl_initialize@plt>
   33bcc:	adrp	x9, 58000 <_rl_vimvcxt@@Base>
   33bd0:	ldrb	w8, [x9, #4056]
   33bd4:	tbnz	w8, #0, 33c14 <rl_callback_handler_install@@Base+0x80>
   33bd8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33bdc:	ldr	x8, [x8, #3560]
   33be0:	mov	w10, #0x1                   	// #1
   33be4:	strb	w10, [x9, #4056]
   33be8:	ldr	x8, [x8]
   33bec:	cbz	x8, 33c00 <rl_callback_handler_install@@Base+0x6c>
   33bf0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33bf4:	ldr	x9, [x9, #3352]
   33bf8:	ldr	w0, [x9]
   33bfc:	blr	x8
   33c00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33c04:	ldr	x8, [x8, #3192]
   33c08:	ldr	w8, [x8]
   33c0c:	cbz	w8, 33c14 <rl_callback_handler_install@@Base+0x80>
   33c10:	bl	16e70 <rl_set_signals@plt>
   33c14:	bl	17180 <readline_internal_setup@plt>
   33c18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33c1c:	ldr	x8, [x8, #2808]
   33c20:	ldr	w9, [x8]
   33c24:	cbz	w9, 33c38 <rl_callback_handler_install@@Base+0xa4>
   33c28:	ldr	w0, [x8]
   33c2c:	ldr	x19, [sp, #16]
   33c30:	ldp	x29, x30, [sp], #32
   33c34:	b	17460 <_rl_signal_handler@plt>
   33c38:	ldr	x19, [sp, #16]
   33c3c:	ldp	x29, x30, [sp], #32
   33c40:	ret

0000000000033c44 <rl_callback_read_char@@Base>:
   33c44:	sub	sp, sp, #0x70
   33c48:	stp	x29, x30, [sp, #16]
   33c4c:	stp	x28, x27, [sp, #32]
   33c50:	stp	x26, x25, [sp, #48]
   33c54:	stp	x24, x23, [sp, #64]
   33c58:	stp	x22, x21, [sp, #80]
   33c5c:	stp	x20, x19, [sp, #96]
   33c60:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33c64:	ldr	x22, [x22, #2648]
   33c68:	add	x29, sp, #0x10
   33c6c:	ldr	x8, [x22]
   33c70:	cbz	x8, 34030 <rl_callback_read_char@@Base+0x3ec>
   33c74:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33c78:	ldr	x19, [x19, #2816]
   33c7c:	adrp	x0, 58000 <_rl_vimvcxt@@Base>
   33c80:	add	x0, x0, #0xea0
   33c84:	mov	w2, #0x138                 	// #312
   33c88:	mov	x1, x19
   33c8c:	bl	16380 <memcpy@plt>
   33c90:	mov	x0, x19
   33c94:	mov	w1, wzr
   33c98:	bl	165b0 <__sigsetjmp@plt>
   33c9c:	cbz	w0, 33d08 <rl_callback_read_char@@Base+0xc4>
   33ca0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33ca4:	ldr	x8, [x8, #2664]
   33ca8:	ldr	x8, [x8]
   33cac:	blr	x8
   33cb0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33cb4:	ldr	x8, [x8, #1976]
   33cb8:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33cbc:	adrp	x1, 58000 <_rl_vimvcxt@@Base>
   33cc0:	add	x1, x1, #0xea0
   33cc4:	str	wzr, [x8]
   33cc8:	ldr	x0, [x0, #2816]
   33ccc:	mov	w2, #0x138                 	// #312
   33cd0:	bl	16380 <memcpy@plt>
   33cd4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33cd8:	ldr	x8, [x8, #3192]
   33cdc:	ldr	w8, [x8]
   33ce0:	cbnz	w8, 33ce8 <rl_callback_read_char@@Base+0xa4>
   33ce4:	bl	175e0 <rl_clear_signals@plt>
   33ce8:	ldp	x20, x19, [sp, #96]
   33cec:	ldp	x22, x21, [sp, #80]
   33cf0:	ldp	x24, x23, [sp, #64]
   33cf4:	ldp	x26, x25, [sp, #48]
   33cf8:	ldp	x28, x27, [sp, #32]
   33cfc:	ldp	x29, x30, [sp, #16]
   33d00:	add	sp, sp, #0x70
   33d04:	ret
   33d08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d0c:	ldr	x8, [x8, #3192]
   33d10:	ldr	w8, [x8]
   33d14:	cbnz	w8, 33d1c <rl_callback_read_char@@Base+0xd8>
   33d18:	bl	16e70 <rl_set_signals@plt>
   33d1c:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d20:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d24:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d28:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d2c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d30:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d34:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d38:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33d3c:	ldr	x24, [x24, #2808]
   33d40:	ldr	x23, [x23, #2984]
   33d44:	ldr	x19, [x19, #4016]
   33d48:	ldr	x26, [x26, #2032]
   33d4c:	ldr	x20, [x20, #3832]
   33d50:	ldr	x28, [x28, #1976]
   33d54:	ldr	x21, [x21, #3296]
   33d58:	ldr	x25, [x25, #3328]
   33d5c:	adrp	x27, 58000 <_rl_vimvcxt@@Base>
   33d60:	ldr	w8, [x24]
   33d64:	cbz	w8, 33d70 <rl_callback_read_char@@Base+0x12c>
   33d68:	ldr	w0, [x24]
   33d6c:	bl	17460 <_rl_signal_handler@plt>
   33d70:	ldr	x8, [x23]
   33d74:	tbnz	w8, #7, 33f70 <rl_callback_read_char@@Base+0x32c>
   33d78:	tbnz	w8, #8, 33fa0 <rl_callback_read_char@@Base+0x35c>
   33d7c:	tbnz	w8, #23, 33dbc <rl_callback_read_char@@Base+0x178>
   33d80:	tbnz	w8, #20, 33fb4 <rl_callback_read_char@@Base+0x370>
   33d84:	tbnz	w8, #10, 33fec <rl_callback_read_char@@Base+0x3a8>
   33d88:	tbnz	w8, #21, 33f10 <rl_callback_read_char@@Base+0x2cc>
   33d8c:	ldr	x8, [x19]
   33d90:	cbz	x8, 33f64 <rl_callback_read_char@@Base+0x320>
   33d94:	ldr	x0, [x26]
   33d98:	blr	x8
   33d9c:	ldr	x8, [x19]
   33da0:	mov	w19, w0
   33da4:	cbnz	x8, 33df8 <rl_callback_read_char@@Base+0x1b4>
   33da8:	ldr	x0, [x26]
   33dac:	cbz	x0, 33df4 <rl_callback_read_char@@Base+0x1b0>
   33db0:	bl	169f0 <xfree@plt>
   33db4:	str	xzr, [x26]
   33db8:	b	33df4 <rl_callback_read_char@@Base+0x1b0>
   33dbc:	ldr	x0, [x26]
   33dc0:	ldr	w8, [x0, #8]
   33dc4:	stur	w8, [x29, #-4]
   33dc8:	ldr	x8, [x19]
   33dcc:	blr	x8
   33dd0:	ldr	x8, [x19]
   33dd4:	mov	w19, w0
   33dd8:	cbnz	x8, 33dec <rl_callback_read_char@@Base+0x1a8>
   33ddc:	ldr	x0, [x26]
   33de0:	cbz	x0, 33dec <rl_callback_read_char@@Base+0x1a8>
   33de4:	bl	169f0 <xfree@plt>
   33de8:	str	xzr, [x26]
   33dec:	ldrb	w8, [x23, #2]
   33df0:	tbnz	w8, #4, 33fd0 <rl_callback_read_char@@Base+0x38c>
   33df4:	bl	165d0 <_rl_internal_char_cleanup@plt>
   33df8:	ldr	w8, [x24]
   33dfc:	cbz	w8, 33e08 <rl_callback_read_char@@Base+0x1c4>
   33e00:	ldr	w0, [x24]
   33e04:	bl	17460 <_rl_signal_handler@plt>
   33e08:	ldr	w8, [x21]
   33e0c:	cbnz	w8, 33e30 <rl_callback_read_char@@Base+0x1ec>
   33e10:	ldr	w9, [x28]
   33e14:	cbz	w9, 33e30 <rl_callback_read_char@@Base+0x1ec>
   33e18:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33e1c:	ldr	x8, [x8, #2664]
   33e20:	ldr	x8, [x8]
   33e24:	blr	x8
   33e28:	ldr	w8, [x21]
   33e2c:	str	wzr, [x28]
   33e30:	cbz	w8, 33eec <rl_callback_read_char@@Base+0x2a8>
   33e34:	mov	w0, w19
   33e38:	bl	16790 <readline_internal_teardown@plt>
   33e3c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33e40:	ldr	x8, [x8, #3840]
   33e44:	mov	x19, x0
   33e48:	ldr	x8, [x8]
   33e4c:	cbz	x8, 33e54 <rl_callback_read_char@@Base+0x210>
   33e50:	blr	x8
   33e54:	bl	175e0 <rl_clear_signals@plt>
   33e58:	ldr	x8, [x22]
   33e5c:	mov	x0, x19
   33e60:	strb	wzr, [x27, #4056]
   33e64:	blr	x8
   33e68:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33e6c:	ldr	x8, [x8, #2480]
   33e70:	ldr	x8, [x8]
   33e74:	ldrb	w8, [x8]
   33e78:	cbz	w8, 33e80 <rl_callback_read_char@@Base+0x23c>
   33e7c:	bl	173b0 <_rl_init_line_state@plt>
   33e80:	ldr	x8, [x22]
   33e84:	cbz	x8, 33eec <rl_callback_read_char@@Base+0x2a8>
   33e88:	ldrb	w8, [x27, #4056]
   33e8c:	cbnz	w8, 33eec <rl_callback_read_char@@Base+0x2a8>
   33e90:	bl	17370 <rl_initialize@plt>
   33e94:	ldrb	w8, [x27, #4056]
   33e98:	tbnz	w8, #0, 33ed8 <rl_callback_read_char@@Base+0x294>
   33e9c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33ea0:	ldr	x8, [x8, #3560]
   33ea4:	mov	w9, #0x1                   	// #1
   33ea8:	strb	w9, [x27, #4056]
   33eac:	ldr	x8, [x8]
   33eb0:	cbz	x8, 33ec4 <rl_callback_read_char@@Base+0x280>
   33eb4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33eb8:	ldr	x9, [x9, #3352]
   33ebc:	ldr	w0, [x9]
   33ec0:	blr	x8
   33ec4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33ec8:	ldr	x8, [x8, #3192]
   33ecc:	ldr	w8, [x8]
   33ed0:	cbz	w8, 33ed8 <rl_callback_read_char@@Base+0x294>
   33ed4:	bl	16e70 <rl_set_signals@plt>
   33ed8:	bl	17180 <readline_internal_setup@plt>
   33edc:	ldr	w8, [x24]
   33ee0:	cbz	w8, 33eec <rl_callback_read_char@@Base+0x2a8>
   33ee4:	ldr	w0, [x24]
   33ee8:	bl	17460 <_rl_signal_handler@plt>
   33eec:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33ef0:	ldr	w8, [x25]
   33ef4:	ldr	x19, [x19, #4016]
   33ef8:	cbnz	w8, 33d60 <rl_callback_read_char@@Base+0x11c>
   33efc:	bl	17290 <_rl_pushed_input_available@plt>
   33f00:	cbnz	w0, 33d60 <rl_callback_read_char@@Base+0x11c>
   33f04:	ldrb	w8, [x23, #1]
   33f08:	tbnz	w8, #3, 33d60 <rl_callback_read_char@@Base+0x11c>
   33f0c:	b	33cd4 <rl_callback_read_char@@Base+0x90>
   33f10:	ldr	x0, [x20]
   33f14:	bl	17900 <_rl_dispatch_callback@plt>
   33f18:	mov	w19, w0
   33f1c:	cmn	w0, #0x2
   33f20:	b.cc	33f4c <rl_callback_read_char@@Base+0x308>  // b.lo, b.ul, b.last
   33f24:	ldrb	w8, [x23, #2]
   33f28:	tbz	w8, #5, 33f4c <rl_callback_read_char@@Base+0x308>
   33f2c:	ldr	x0, [x20]
   33f30:	cbz	x0, 33f4c <rl_callback_read_char@@Base+0x308>
   33f34:	ldrb	w8, [x0]
   33f38:	tbz	w8, #0, 33f4c <rl_callback_read_char@@Base+0x308>
   33f3c:	bl	17900 <_rl_dispatch_callback@plt>
   33f40:	mov	w19, w0
   33f44:	cmn	w0, #0x3
   33f48:	b.hi	33f24 <rl_callback_read_char@@Base+0x2e0>  // b.pmore
   33f4c:	ldrb	w8, [x23, #2]
   33f50:	tbnz	w8, #5, 33df8 <rl_callback_read_char@@Base+0x1b4>
   33f54:	bl	165d0 <_rl_internal_char_cleanup@plt>
   33f58:	mov	w8, #0x1                   	// #1
   33f5c:	str	w8, [x28]
   33f60:	b	33df8 <rl_callback_read_char@@Base+0x1b4>
   33f64:	bl	170f0 <readline_internal_char@plt>
   33f68:	mov	w19, w0
   33f6c:	b	33df8 <rl_callback_read_char@@Base+0x1b4>
   33f70:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33f74:	ldr	x8, [x8, #3944]
   33f78:	ldr	x0, [x8]
   33f7c:	bl	174f0 <_rl_isearch_callback@plt>
   33f80:	cbnz	w0, 33cd4 <rl_callback_read_char@@Base+0x90>
   33f84:	ldr	x8, [x23]
   33f88:	mov	w9, #0x80                  	// #128
   33f8c:	movk	w9, #0x2, lsl #16
   33f90:	and	x8, x8, x9
   33f94:	cmp	x8, #0x20, lsl #12
   33f98:	b.ne	33cd4 <rl_callback_read_char@@Base+0x90>  // b.any
   33f9c:	b	3401c <rl_callback_read_char@@Base+0x3d8>
   33fa0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33fa4:	ldr	x8, [x8, #2232]
   33fa8:	ldr	x0, [x8]
   33fac:	bl	16b70 <_rl_nsearch_callback@plt>
   33fb0:	b	33cd4 <rl_callback_read_char@@Base+0x90>
   33fb4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33fb8:	ldr	x8, [x8, #2152]
   33fbc:	ldr	x0, [x8]
   33fc0:	bl	16ca0 <_rl_vi_domove_callback@plt>
   33fc4:	ldrb	w8, [x23, #1]
   33fc8:	tbnz	w8, #2, 33cd4 <rl_callback_read_char@@Base+0x90>
   33fcc:	b	34028 <rl_callback_read_char@@Base+0x3e4>
   33fd0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33fd4:	ldr	x8, [x8, #2152]
   33fd8:	ldur	w0, [x29, #-4]
   33fdc:	ldr	x1, [x8]
   33fe0:	bl	16e10 <_rl_vi_domove_motion_cleanup@plt>
   33fe4:	bl	165d0 <_rl_internal_char_cleanup@plt>
   33fe8:	b	33cd4 <rl_callback_read_char@@Base+0x90>
   33fec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   33ff0:	ldr	x8, [x8, #2680]
   33ff4:	ldr	w0, [x8]
   33ff8:	bl	16bd0 <_rl_arg_callback@plt>
   33ffc:	ldr	x8, [x23]
   34000:	cbnz	w0, 34024 <rl_callback_read_char@@Base+0x3e0>
   34004:	mov	w9, #0x80                  	// #128
   34008:	movk	w9, #0x2, lsl #16
   3400c:	add	x9, x9, #0x380
   34010:	and	x9, x8, x9
   34014:	cmp	x9, #0x20, lsl #12
   34018:	b.ne	34024 <rl_callback_read_char@@Base+0x3e0>  // b.any
   3401c:	bl	17860 <rl_callback_read_char@plt>
   34020:	b	33cd4 <rl_callback_read_char@@Base+0x90>
   34024:	tbnz	w8, #10, 33cd4 <rl_callback_read_char@@Base+0x90>
   34028:	bl	165d0 <_rl_internal_char_cleanup@plt>
   3402c:	b	33cd4 <rl_callback_read_char@@Base+0x90>
   34030:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   34034:	add	x0, x0, #0xe81
   34038:	bl	176c0 <_rl_errmsg@plt>
   3403c:	bl	16f50 <abort@plt>

0000000000034040 <_rl_callback_data_dispose@@Base>:
   34040:	b	169f0 <xfree@plt>

0000000000034044 <rl_callback_handler_remove@@Base>:
   34044:	stp	x29, x30, [sp, #-16]!
   34048:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3404c:	ldr	x8, [x8, #2984]
   34050:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34054:	mov	x29, sp
   34058:	ldr	x9, [x8]
   3405c:	ldr	x10, [x10, #2648]
   34060:	and	x9, x9, #0xfffffffffff7ffff
   34064:	str	xzr, [x10]
   34068:	str	x9, [x8]
   3406c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34070:	ldr	x8, [x8, #2808]
   34074:	ldr	w9, [x8]
   34078:	cbz	w9, 34084 <rl_callback_handler_remove@@Base+0x40>
   3407c:	ldr	w0, [x8]
   34080:	bl	17460 <_rl_signal_handler@plt>
   34084:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   34088:	ldrb	w9, [x8, #4056]
   3408c:	cmp	w9, #0x1
   34090:	b.ne	340b4 <rl_callback_handler_remove@@Base+0x70>  // b.any
   34094:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34098:	ldr	x9, [x9, #3840]
   3409c:	strb	wzr, [x8, #4056]
   340a0:	ldr	x9, [x9]
   340a4:	cbz	x9, 340ac <rl_callback_handler_remove@@Base+0x68>
   340a8:	blr	x9
   340ac:	ldp	x29, x30, [sp], #16
   340b0:	b	175e0 <rl_clear_signals@plt>
   340b4:	ldp	x29, x30, [sp], #16
   340b8:	ret

00000000000340bc <_rl_callback_data_alloc@@Base>:
   340bc:	stp	x29, x30, [sp, #-32]!
   340c0:	str	x19, [sp, #16]
   340c4:	mov	w19, w0
   340c8:	mov	w0, #0xc                   	// #12
   340cc:	mov	x29, sp
   340d0:	bl	16bf0 <xmalloc@plt>
   340d4:	stp	wzr, wzr, [x0, #4]
   340d8:	str	w19, [x0]
   340dc:	ldr	x19, [sp, #16]
   340e0:	ldp	x29, x30, [sp], #32
   340e4:	ret

00000000000340e8 <rl_callback_sigcleanup@@Base>:
   340e8:	stp	x29, x30, [sp, #-32]!
   340ec:	str	x19, [sp, #16]
   340f0:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   340f4:	ldr	x19, [x19, #2984]
   340f8:	mov	x29, sp
   340fc:	ldr	x8, [x19]
   34100:	tbz	w8, #19, 34170 <rl_callback_sigcleanup@@Base+0x88>
   34104:	tbnz	w8, #7, 34120 <rl_callback_sigcleanup@@Base+0x38>
   34108:	tbnz	w8, #8, 34140 <rl_callback_sigcleanup@@Base+0x58>
   3410c:	tbnz	w8, #20, 3417c <rl_callback_sigcleanup@@Base+0x94>
   34110:	tbnz	w8, #10, 34184 <rl_callback_sigcleanup@@Base+0x9c>
   34114:	tbz	w8, #21, 34154 <rl_callback_sigcleanup@@Base+0x6c>
   34118:	and	x8, x8, #0xffffffffffdfffff
   3411c:	b	34194 <rl_callback_sigcleanup@@Base+0xac>
   34120:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34124:	ldr	x8, [x8, #3944]
   34128:	mov	w1, wzr
   3412c:	ldr	x0, [x8]
   34130:	bl	167a0 <_rl_isearch_cleanup@plt>
   34134:	ldr	x8, [x19]
   34138:	tbnz	w8, #23, 3415c <rl_callback_sigcleanup@@Base+0x74>
   3413c:	b	34164 <rl_callback_sigcleanup@@Base+0x7c>
   34140:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34144:	ldr	x8, [x8, #2232]
   34148:	mov	w1, wzr
   3414c:	ldr	x0, [x8]
   34150:	bl	16740 <_rl_nsearch_cleanup@plt>
   34154:	ldr	x8, [x19]
   34158:	tbz	w8, #23, 34164 <rl_callback_sigcleanup@@Base+0x7c>
   3415c:	and	x8, x8, #0xffffffffff7fffff
   34160:	str	x8, [x19]
   34164:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34168:	ldr	x8, [x8, #4016]
   3416c:	str	xzr, [x8]
   34170:	ldr	x19, [sp, #16]
   34174:	ldp	x29, x30, [sp], #32
   34178:	ret
   3417c:	and	x8, x8, #0xffffffffffefffff
   34180:	b	34194 <rl_callback_sigcleanup@@Base+0xac>
   34184:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34188:	ldr	x9, [x9, #2680]
   3418c:	and	x8, x8, #0xfffffffffffffbff
   34190:	str	wzr, [x9]
   34194:	str	x8, [x19]
   34198:	ldr	x8, [x19]
   3419c:	tbnz	w8, #23, 3415c <rl_callback_sigcleanup@@Base+0x74>
   341a0:	b	34164 <rl_callback_sigcleanup@@Base+0x7c>

00000000000341a4 <_rl_get_screen_size@@Base>:
   341a4:	stp	x29, x30, [sp, #-64]!
   341a8:	mov	x29, sp
   341ac:	stp	x20, x19, [sp, #48]
   341b0:	mov	w19, w1
   341b4:	add	x2, x29, #0x18
   341b8:	mov	w1, #0x5413                	// #21523
   341bc:	str	x23, [sp, #16]
   341c0:	stp	x22, x21, [sp, #32]
   341c4:	bl	17990 <ioctl@plt>
   341c8:	ldrh	w8, [x29, #24]
   341cc:	ldrh	w9, [x29, #26]
   341d0:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   341d4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   341d8:	ldr	x21, [x21, #3552]
   341dc:	ldr	x20, [x20, #3520]
   341e0:	cmp	w0, #0x0
   341e4:	csinv	w22, w8, wzr, eq  // eq = none
   341e8:	csinv	w23, w9, wzr, eq  // eq = none
   341ec:	cbnz	w19, 34238 <_rl_get_screen_size@@Base+0x94>
   341f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   341f4:	ldr	x8, [x8, #3200]
   341f8:	ldr	w8, [x8]
   341fc:	cbz	w8, 34238 <_rl_get_screen_size@@Base+0x94>
   34200:	mov	w8, #0xffffffff            	// #-1
   34204:	str	w8, [x20]
   34208:	str	w8, [x21]
   3420c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   34210:	add	x0, x0, #0x595
   34214:	bl	163a0 <sh_get_env_value@plt>
   34218:	cbz	x0, 34258 <_rl_get_screen_size@@Base+0xb4>
   3421c:	mov	w2, #0xa                   	// #10
   34220:	mov	x1, xzr
   34224:	bl	17130 <strtol@plt>
   34228:	str	w0, [x21]
   3422c:	cmp	w0, #0x0
   34230:	b.gt	34294 <_rl_get_screen_size@@Base+0xf0>
   34234:	b	3426c <_rl_get_screen_size@@Base+0xc8>
   34238:	cmp	w23, #0x0
   3423c:	mov	w0, w22
   34240:	str	w23, [x21]
   34244:	str	w22, [x20]
   34248:	b.le	34268 <_rl_get_screen_size@@Base+0xc4>
   3424c:	cmp	w0, #0x1
   34250:	b.ge	34314 <_rl_get_screen_size@@Base+0x170>  // b.tcont
   34254:	b	342a0 <_rl_get_screen_size@@Base+0xfc>
   34258:	ldr	w0, [x21]
   3425c:	cmp	w0, #0x0
   34260:	b.gt	34294 <_rl_get_screen_size@@Base+0xf0>
   34264:	b	3426c <_rl_get_screen_size@@Base+0xc8>
   34268:	cbz	w19, 3420c <_rl_get_screen_size@@Base+0x68>
   3426c:	cmp	w23, #0x0
   34270:	str	w23, [x21]
   34274:	b.gt	34294 <_rl_get_screen_size@@Base+0xf0>
   34278:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   3427c:	ldr	x8, [x8, #4072]
   34280:	cbz	x8, 34294 <_rl_get_screen_size@@Base+0xf0>
   34284:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   34288:	add	x0, x0, #0xeb7
   3428c:	bl	16d50 <tgetnum@plt>
   34290:	str	w0, [x21]
   34294:	ldr	w0, [x20]
   34298:	cmp	w0, #0x1
   3429c:	b.ge	34314 <_rl_get_screen_size@@Base+0x170>  // b.tcont
   342a0:	cbz	w19, 342d4 <_rl_get_screen_size@@Base+0x130>
   342a4:	cmp	w22, #0x1
   342a8:	str	w22, [x20]
   342ac:	b.ge	34300 <_rl_get_screen_size@@Base+0x15c>  // b.tcont
   342b0:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   342b4:	ldr	x8, [x8, #4072]
   342b8:	mov	w0, w22
   342bc:	cbz	x8, 34314 <_rl_get_screen_size@@Base+0x170>
   342c0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   342c4:	add	x0, x0, #0xec0
   342c8:	bl	16d50 <tgetnum@plt>
   342cc:	str	w0, [x20]
   342d0:	b	34314 <_rl_get_screen_size@@Base+0x170>
   342d4:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   342d8:	add	x0, x0, #0xeba
   342dc:	bl	163a0 <sh_get_env_value@plt>
   342e0:	cbz	x0, 34308 <_rl_get_screen_size@@Base+0x164>
   342e4:	mov	w2, #0xa                   	// #10
   342e8:	mov	x1, xzr
   342ec:	bl	17130 <strtol@plt>
   342f0:	str	w0, [x20]
   342f4:	cmp	w0, #0x1
   342f8:	b.ge	34314 <_rl_get_screen_size@@Base+0x170>  // b.tcont
   342fc:	b	342a4 <_rl_get_screen_size@@Base+0x100>
   34300:	mov	w0, w22
   34304:	b	34314 <_rl_get_screen_size@@Base+0x170>
   34308:	ldr	w0, [x20]
   3430c:	cmp	w0, #0x1
   34310:	b.lt	342a4 <_rl_get_screen_size@@Base+0x100>  // b.tstop
   34314:	ldr	w1, [x21]
   34318:	cmp	w1, #0x1
   3431c:	b.gt	34328 <_rl_get_screen_size@@Base+0x184>
   34320:	mov	w1, #0x50                  	// #80
   34324:	str	w1, [x21]
   34328:	cmp	w0, #0x1
   3432c:	b.ge	34338 <_rl_get_screen_size@@Base+0x194>  // b.tcont
   34330:	mov	w0, #0x18                  	// #24
   34334:	str	w0, [x20]
   34338:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3433c:	ldr	x8, [x8, #2752]
   34340:	ldr	w8, [x8]
   34344:	cbz	w8, 3434c <_rl_get_screen_size@@Base+0x1a8>
   34348:	bl	16e80 <sh_set_lines_and_columns@plt>
   3434c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34350:	ldr	x8, [x8, #2240]
   34354:	ldr	w9, [x8]
   34358:	ldr	w8, [x21]
   3435c:	cbnz	w9, 34368 <_rl_get_screen_size@@Base+0x1c4>
   34360:	sub	w8, w8, #0x1
   34364:	str	w8, [x21]
   34368:	ldr	w9, [x20]
   3436c:	mul	w8, w9, w8
   34370:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34374:	ldr	x9, [x9, #3216]
   34378:	ldp	x20, x19, [sp, #48]
   3437c:	ldp	x22, x21, [sp, #32]
   34380:	ldr	x23, [sp, #16]
   34384:	str	w8, [x9]
   34388:	ldp	x29, x30, [sp], #64
   3438c:	ret

0000000000034390 <_rl_set_screen_size@@Base>:
   34390:	stp	x29, x30, [sp, #-48]!
   34394:	str	x21, [sp, #16]
   34398:	stp	x20, x19, [sp, #32]
   3439c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   343a0:	ldr	x21, [x21, #2240]
   343a4:	mov	w19, w1
   343a8:	mov	w20, w0
   343ac:	mov	x29, sp
   343b0:	ldr	w8, [x21]
   343b4:	cmn	w8, #0x1
   343b8:	b.ne	343cc <_rl_set_screen_size@@Base+0x3c>  // b.any
   343bc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   343c0:	ldr	x8, [x8, #2784]
   343c4:	ldr	x0, [x8]
   343c8:	bl	164c0 <_rl_init_terminal_io@plt>
   343cc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   343d0:	ldr	x8, [x8, #3520]
   343d4:	cmp	w20, #0x1
   343d8:	b.lt	343e0 <_rl_set_screen_size@@Base+0x50>  // b.tstop
   343dc:	str	w20, [x8]
   343e0:	subs	w9, w19, #0x1
   343e4:	b.lt	34408 <_rl_set_screen_size@@Base+0x78>  // b.tstop
   343e8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   343ec:	ldr	w11, [x21]
   343f0:	ldr	x10, [x10, #3552]
   343f4:	str	w19, [x10]
   343f8:	cbnz	w11, 3441c <_rl_set_screen_size@@Base+0x8c>
   343fc:	str	w9, [x10]
   34400:	mov	w19, w9
   34404:	b	3441c <_rl_set_screen_size@@Base+0x8c>
   34408:	cmp	w20, #0x1
   3440c:	b.lt	34430 <_rl_set_screen_size@@Base+0xa0>  // b.tstop
   34410:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34414:	ldr	x9, [x9, #3552]
   34418:	ldr	w19, [x9]
   3441c:	ldr	w8, [x8]
   34420:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34424:	ldr	x9, [x9, #3216]
   34428:	mul	w8, w8, w19
   3442c:	str	w8, [x9]
   34430:	ldp	x20, x19, [sp, #32]
   34434:	ldr	x21, [sp, #16]
   34438:	ldp	x29, x30, [sp], #48
   3443c:	ret

0000000000034440 <_rl_init_terminal_io@@Base>:
   34440:	stp	x29, x30, [sp, #-64]!
   34444:	stp	x20, x19, [sp, #48]
   34448:	mov	x20, x0
   3444c:	str	x23, [sp, #16]
   34450:	stp	x22, x21, [sp, #32]
   34454:	mov	x29, sp
   34458:	cbnz	x0, 3446c <_rl_init_terminal_io@@Base+0x2c>
   3445c:	adrp	x0, 3e000 <_rl_print_color_indicator@@Base+0xec>
   34460:	add	x0, x0, #0xaa4
   34464:	bl	163a0 <sh_get_env_value@plt>
   34468:	mov	x20, x0
   3446c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34470:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34474:	ldr	x8, [x8, #2560]
   34478:	ldr	x9, [x9, #3704]
   3447c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34480:	ldr	x10, [x10, #3176]
   34484:	str	xzr, [x8]
   34488:	str	xzr, [x9]
   3448c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34490:	ldr	x0, [x10]
   34494:	ldr	x21, [x21, #3264]
   34498:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3449c:	str	xzr, [x21]
   344a0:	ldr	x8, [x8, #3656]
   344a4:	str	xzr, [x8]
   344a8:	cbz	x0, 344b8 <_rl_init_terminal_io@@Base+0x78>
   344ac:	bl	16860 <fileno@plt>
   344b0:	mov	w19, w0
   344b4:	b	344bc <_rl_init_terminal_io@@Base+0x7c>
   344b8:	mov	w19, wzr
   344bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   344c0:	ldr	x9, [x9, #2664]
   344c4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   344c8:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   344cc:	add	x8, x8, #0xec3
   344d0:	ldr	x9, [x9]
   344d4:	ldr	x10, [x10, #3344]
   344d8:	cmp	x20, #0x0
   344dc:	csel	x20, x8, x20, eq  // eq = none
   344e0:	adrp	x22, 58000 <_rl_vimvcxt@@Base>
   344e4:	cmp	x9, x10
   344e8:	adrp	x23, 58000 <_rl_vimvcxt@@Base>
   344ec:	b.eq	346c8 <_rl_init_terminal_io@@Base+0x288>  // b.none
   344f0:	ldr	x0, [x22, #4072]
   344f4:	cbz	x0, 344fc <_rl_init_terminal_io@@Base+0xbc>
   344f8:	bl	171b0 <free@plt>
   344fc:	ldr	x0, [x23, #4080]
   34500:	cbz	x0, 34508 <_rl_init_terminal_io@@Base+0xc8>
   34504:	bl	171b0 <free@plt>
   34508:	str	xzr, [x22, #4072]
   3450c:	str	xzr, [x23, #4080]
   34510:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34514:	ldr	x20, [x20, #3552]
   34518:	str	xzr, [x29, #24]
   3451c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34520:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34524:	ldr	w8, [x20]
   34528:	ldr	x9, [x9, #2240]
   3452c:	cmp	w8, #0x1
   34530:	str	wzr, [x9]
   34534:	ldr	x22, [x22, #3520]
   34538:	b.lt	34548 <_rl_init_terminal_io@@Base+0x108>  // b.tstop
   3453c:	ldr	w9, [x22]
   34540:	cmp	w9, #0x0
   34544:	b.gt	3455c <_rl_init_terminal_io@@Base+0x11c>
   34548:	mov	w0, w19
   3454c:	mov	w1, wzr
   34550:	bl	17020 <_rl_get_screen_size@plt>
   34554:	ldr	w8, [x20]
   34558:	ldr	w9, [x22]
   3455c:	cmp	w8, #0x1
   34560:	b.lt	3456c <_rl_init_terminal_io@@Base+0x12c>  // b.tstop
   34564:	cmp	w9, #0x0
   34568:	b.gt	3457c <_rl_init_terminal_io@@Base+0x13c>
   3456c:	mov	w8, #0x4f                  	// #79
   34570:	mov	w9, #0x18                  	// #24
   34574:	str	w8, [x20]
   34578:	str	w9, [x22]
   3457c:	mul	w8, w9, w8
   34580:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34584:	ldr	x9, [x9, #3216]
   34588:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3458c:	str	w8, [x9]
   34590:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34594:	ldr	x9, [x9, #3304]
   34598:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   3459c:	add	x8, x8, #0x4a1
   345a0:	str	x8, [x21]
   345a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   345a8:	ldr	x8, [x8, #3936]
   345ac:	ldr	x10, [x10, #2576]
   345b0:	str	xzr, [x9]
   345b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   345b8:	ldr	x9, [x9, #3968]
   345bc:	str	xzr, [x8]
   345c0:	str	xzr, [x10]
   345c4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   345c8:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   345cc:	ldr	x10, [x10, #2880]
   345d0:	str	xzr, [x9]
   345d4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   345d8:	ldr	x9, [x9, #3536]
   345dc:	str	xzr, [x8, #4088]
   345e0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   345e4:	ldr	x8, [x8, #3912]
   345e8:	str	xzr, [x10]
   345ec:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   345f0:	str	xzr, [x9]
   345f4:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   345f8:	str	xzr, [x8]
   345fc:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34600:	str	xzr, [x10]
   34604:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34608:	str	xzr, [x9, #8]
   3460c:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34610:	str	xzr, [x8, #16]
   34614:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34618:	str	xzr, [x10, #24]
   3461c:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34620:	str	xzr, [x9, #32]
   34624:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34628:	str	xzr, [x8, #40]
   3462c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34630:	str	xzr, [x10, #48]
   34634:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34638:	str	xzr, [x9, #56]
   3463c:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34640:	str	xzr, [x8, #64]
   34644:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34648:	str	xzr, [x10, #72]
   3464c:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34650:	str	xzr, [x9, #80]
   34654:	str	xzr, [x8, #88]
   34658:	str	xzr, [x10, #96]
   3465c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34660:	ldr	x10, [x10, #2392]
   34664:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34668:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3466c:	str	xzr, [x9, #104]
   34670:	str	xzr, [x8, #112]
   34674:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34678:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3467c:	ldr	x8, [x8, #2368]
   34680:	str	xzr, [x10]
   34684:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34688:	ldr	x10, [x10, #3480]
   3468c:	str	wzr, [x9, #120]
   34690:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34694:	ldr	x9, [x9, #3048]
   34698:	str	wzr, [x8]
   3469c:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   346a0:	add	x8, x8, #0xec8
   346a4:	strb	wzr, [x10]
   346a8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   346ac:	ldr	x10, [x10, #4024]
   346b0:	str	x8, [x9]
   346b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   346b8:	ldr	x9, [x9, #2592]
   346bc:	str	x8, [x10]
   346c0:	str	xzr, [x9]
   346c4:	b	348b8 <_rl_init_terminal_io@@Base+0x478>
   346c8:	ldr	x8, [x22, #4072]
   346cc:	cbz	x8, 347b4 <_rl_init_terminal_io@@Base+0x374>
   346d0:	ldr	x0, [x23, #4080]
   346d4:	cbz	x0, 347cc <_rl_init_terminal_io@@Base+0x38c>
   346d8:	mov	x1, x20
   346dc:	str	x8, [x29, #24]
   346e0:	bl	16c80 <tgetent@plt>
   346e4:	cmp	w0, #0x1
   346e8:	b.lt	344f0 <_rl_init_terminal_io@@Base+0xb0>  // b.tstop
   346ec:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   346f0:	mov	x20, xzr
   346f4:	add	x22, x22, #0x2b8
   346f8:	add	x23, x22, x20
   346fc:	ldr	x0, [x23]
   34700:	add	x1, x29, #0x18
   34704:	bl	17610 <tgetstr@plt>
   34708:	ldr	x8, [x23, #8]
   3470c:	add	x20, x20, #0x10
   34710:	cmp	x20, #0x1e0
   34714:	str	x0, [x8]
   34718:	b.ne	346f8 <_rl_init_terminal_io@@Base+0x2b8>  // b.any
   3471c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34720:	ldr	x8, [x8, #2584]
   34724:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34728:	mov	w10, #0x1                   	// #1
   3472c:	strb	w10, [x9, #124]
   34730:	ldr	x8, [x8]
   34734:	cbz	x8, 3473c <_rl_init_terminal_io@@Base+0x2fc>
   34738:	ldrb	w8, [x8]
   3473c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34740:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34744:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34748:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3474c:	ldr	x9, [x9, #3480]
   34750:	ldr	x10, [x10, #3048]
   34754:	ldr	x11, [x11, #4024]
   34758:	ldr	x12, [x12, #3912]
   3475c:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34760:	ldr	x13, [x21]
   34764:	ldr	x10, [x10]
   34768:	ldr	x12, [x12]
   3476c:	ldr	x14, [x14, #2592]
   34770:	strb	w8, [x9]
   34774:	str	x10, [x11]
   34778:	str	x12, [x14]
   3477c:	cbnz	x13, 3478c <_rl_init_terminal_io@@Base+0x34c>
   34780:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   34784:	add	x8, x8, #0x4a1
   34788:	str	x8, [x21]
   3478c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   34790:	add	x0, x0, #0xeca
   34794:	bl	16ba0 <tgetflag@plt>
   34798:	cbz	w0, 347e0 <_rl_init_terminal_io@@Base+0x3a0>
   3479c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   347a0:	add	x0, x0, #0xecd
   347a4:	bl	16ba0 <tgetflag@plt>
   347a8:	cmp	w0, #0x0
   347ac:	cset	w8, ne  // ne = any
   347b0:	b	347e4 <_rl_init_terminal_io@@Base+0x3a4>
   347b4:	mov	w0, #0x7f0                 	// #2032
   347b8:	bl	16bf0 <xmalloc@plt>
   347bc:	mov	x8, x0
   347c0:	str	x0, [x22, #4072]
   347c4:	ldr	x0, [x23, #4080]
   347c8:	cbnz	x0, 346d8 <_rl_init_terminal_io@@Base+0x298>
   347cc:	mov	w0, #0xff0                 	// #4080
   347d0:	bl	16bf0 <xmalloc@plt>
   347d4:	ldr	x8, [x22, #4072]
   347d8:	str	x0, [x23, #4080]
   347dc:	b	346d8 <_rl_init_terminal_io@@Base+0x298>
   347e0:	mov	w8, wzr
   347e4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   347e8:	ldr	x9, [x9, #3552]
   347ec:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   347f0:	ldr	w9, [x9]
   347f4:	ldr	x10, [x10, #2240]
   347f8:	cmp	w9, #0x1
   347fc:	str	w8, [x10]
   34800:	b.lt	34818 <_rl_init_terminal_io@@Base+0x3d8>  // b.tstop
   34804:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34808:	ldr	x8, [x8, #3520]
   3480c:	ldr	w8, [x8]
   34810:	cmp	w8, #0x0
   34814:	b.gt	34824 <_rl_init_terminal_io@@Base+0x3e4>
   34818:	mov	w0, w19
   3481c:	mov	w1, wzr
   34820:	bl	17020 <_rl_get_screen_size@plt>
   34824:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34828:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3482c:	ldr	x8, [x8, #3304]
   34830:	ldr	x9, [x9, #3968]
   34834:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34838:	ldr	x10, [x10, #3936]
   3483c:	ldr	x8, [x8]
   34840:	ldr	x9, [x9]
   34844:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   34848:	ldr	x10, [x10]
   3484c:	add	x0, x0, #0xed0
   34850:	orr	x8, x8, x9
   34854:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34858:	ldr	x9, [x9, #2368]
   3485c:	orr	x8, x8, x10
   34860:	cmp	x8, #0x0
   34864:	cset	w8, ne  // ne = any
   34868:	str	w8, [x9]
   3486c:	bl	16ba0 <tgetflag@plt>
   34870:	cmp	w0, #0x0
   34874:	cset	w8, ne  // ne = any
   34878:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3487c:	str	w8, [x9, #120]
   34880:	cbnz	w0, 34894 <_rl_init_terminal_io@@Base+0x454>
   34884:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34888:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3488c:	str	xzr, [x8, #88]
   34890:	str	xzr, [x9, #96]
   34894:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34898:	ldr	x0, [x0, #1984]
   3489c:	bl	34a68 <rl_resize_terminal@@Base+0x74>
   348a0:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   348a4:	ldr	x0, [x0, #3824]
   348a8:	bl	34a68 <rl_resize_terminal@@Base+0x74>
   348ac:	adrp	x0, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   348b0:	ldr	x0, [x0, #4032]
   348b4:	bl	34a68 <rl_resize_terminal@@Base+0x74>
   348b8:	ldp	x20, x19, [sp, #48]
   348bc:	ldp	x22, x21, [sp, #32]
   348c0:	ldr	x23, [sp, #16]
   348c4:	mov	w0, wzr
   348c8:	ldp	x29, x30, [sp], #64
   348cc:	ret

00000000000348d0 <rl_set_screen_size@@Base>:
   348d0:	stp	x29, x30, [sp, #-48]!
   348d4:	str	x21, [sp, #16]
   348d8:	stp	x20, x19, [sp, #32]
   348dc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   348e0:	ldr	x21, [x21, #2240]
   348e4:	mov	w19, w1
   348e8:	mov	w20, w0
   348ec:	mov	x29, sp
   348f0:	ldr	w8, [x21]
   348f4:	cmn	w8, #0x1
   348f8:	b.ne	3490c <rl_set_screen_size@@Base+0x3c>  // b.any
   348fc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34900:	ldr	x8, [x8, #2784]
   34904:	ldr	x0, [x8]
   34908:	bl	164c0 <_rl_init_terminal_io@plt>
   3490c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34910:	ldr	x8, [x8, #3520]
   34914:	cmp	w20, #0x1
   34918:	b.lt	34920 <rl_set_screen_size@@Base+0x50>  // b.tstop
   3491c:	str	w20, [x8]
   34920:	subs	w9, w19, #0x1
   34924:	b.lt	34948 <rl_set_screen_size@@Base+0x78>  // b.tstop
   34928:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3492c:	ldr	w11, [x21]
   34930:	ldr	x10, [x10, #3552]
   34934:	str	w19, [x10]
   34938:	cbnz	w11, 3495c <rl_set_screen_size@@Base+0x8c>
   3493c:	str	w9, [x10]
   34940:	mov	w19, w9
   34944:	b	3495c <rl_set_screen_size@@Base+0x8c>
   34948:	cmp	w20, #0x1
   3494c:	b.lt	34970 <rl_set_screen_size@@Base+0xa0>  // b.tstop
   34950:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34954:	ldr	x9, [x9, #3552]
   34958:	ldr	w19, [x9]
   3495c:	ldr	w8, [x8]
   34960:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34964:	ldr	x9, [x9, #3216]
   34968:	mul	w8, w8, w19
   3496c:	str	w8, [x9]
   34970:	ldp	x20, x19, [sp, #32]
   34974:	ldr	x21, [sp, #16]
   34978:	ldp	x29, x30, [sp], #48
   3497c:	ret

0000000000034980 <rl_get_screen_size@@Base>:
   34980:	cbz	x0, 34994 <rl_get_screen_size@@Base+0x14>
   34984:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34988:	ldr	x8, [x8, #3520]
   3498c:	ldr	w8, [x8]
   34990:	str	w8, [x0]
   34994:	cbz	x1, 349a8 <rl_get_screen_size@@Base+0x28>
   34998:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3499c:	ldr	x8, [x8, #3552]
   349a0:	ldr	w8, [x8]
   349a4:	str	w8, [x1]
   349a8:	ret

00000000000349ac <rl_reset_screen_size@@Base>:
   349ac:	stp	x29, x30, [sp, #-16]!
   349b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   349b4:	ldr	x8, [x8, #3176]
   349b8:	mov	x29, sp
   349bc:	ldr	x0, [x8]
   349c0:	bl	16860 <fileno@plt>
   349c4:	mov	w1, wzr
   349c8:	ldp	x29, x30, [sp], #16
   349cc:	b	17020 <_rl_get_screen_size@plt>

00000000000349d0 <_rl_sigwinch_resize_terminal@@Base>:
   349d0:	stp	x29, x30, [sp, #-16]!
   349d4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   349d8:	ldr	x8, [x8, #3176]
   349dc:	mov	x29, sp
   349e0:	ldr	x0, [x8]
   349e4:	bl	16860 <fileno@plt>
   349e8:	mov	w1, #0x1                   	// #1
   349ec:	ldp	x29, x30, [sp], #16
   349f0:	b	17020 <_rl_get_screen_size@plt>

00000000000349f4 <rl_resize_terminal@@Base>:
   349f4:	stp	x29, x30, [sp, #-16]!
   349f8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   349fc:	ldr	x8, [x8, #3176]
   34a00:	mov	x29, sp
   34a04:	ldr	x0, [x8]
   34a08:	bl	16860 <fileno@plt>
   34a0c:	mov	w1, #0x1                   	// #1
   34a10:	bl	17020 <_rl_get_screen_size@plt>
   34a14:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a18:	ldr	x8, [x8, #2944]
   34a1c:	ldr	w8, [x8]
   34a20:	cbz	w8, 34a60 <rl_resize_terminal@@Base+0x6c>
   34a24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a28:	ldr	x8, [x8, #2664]
   34a2c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a30:	ldr	x8, [x8]
   34a34:	ldr	x9, [x9, #3344]
   34a38:	cmp	x8, x9
   34a3c:	b.eq	34a48 <rl_resize_terminal@@Base+0x54>  // b.none
   34a40:	ldp	x29, x30, [sp], #16
   34a44:	b	164d0 <rl_forced_update_display@plt>
   34a48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a4c:	ldr	x8, [x8, #2984]
   34a50:	ldrb	w8, [x8, #3]
   34a54:	tbnz	w8, #0, 34a60 <rl_resize_terminal@@Base+0x6c>
   34a58:	ldp	x29, x30, [sp], #16
   34a5c:	b	17300 <_rl_redisplay_after_sigwinch@plt>
   34a60:	ldp	x29, x30, [sp], #16
   34a64:	ret
   34a68:	stp	x29, x30, [sp, #-32]!
   34a6c:	stp	x20, x19, [sp, #16]
   34a70:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a74:	ldr	x19, [x19, #1992]
   34a78:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34a7c:	ldr	x8, [x8, #24]
   34a80:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34a84:	ldr	x20, [x19]
   34a88:	str	x0, [x19]
   34a8c:	ldr	x1, [x1, #3096]
   34a90:	mov	x0, x8
   34a94:	mov	x29, sp
   34a98:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34a9c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34aa0:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34aa4:	ldr	x0, [x8, #16]
   34aa8:	ldr	x1, [x1, #3384]
   34aac:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34ab0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34ab4:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ab8:	ldr	x0, [x8]
   34abc:	ldr	x1, [x1, #2272]
   34ac0:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34ac4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34ac8:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34acc:	ldr	x0, [x8, #8]
   34ad0:	ldr	x1, [x1, #2976]
   34ad4:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34ad8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34adc:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ae0:	ldr	x0, [x8, #56]
   34ae4:	ldr	x1, [x1, #3648]
   34ae8:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34aec:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34af0:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34af4:	ldr	x0, [x8, #64]
   34af8:	ldr	x1, [x1, #3184]
   34afc:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34b00:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34b04:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34b08:	ldr	x0, [x8, #32]
   34b0c:	ldr	x1, [x1, #2528]
   34b10:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34b14:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34b18:	adrp	x1, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34b1c:	ldr	x0, [x8, #40]
   34b20:	ldr	x1, [x1, #2776]
   34b24:	bl	16570 <rl_bind_keyseq_if_unbound@plt>
   34b28:	str	x20, [x19]
   34b2c:	ldp	x20, x19, [sp, #16]
   34b30:	ldp	x29, x30, [sp], #32
   34b34:	ret

0000000000034b38 <rl_get_termcap@@Base>:
   34b38:	stp	x29, x30, [sp, #-48]!
   34b3c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34b40:	ldrb	w8, [x8, #124]
   34b44:	stp	x22, x21, [sp, #16]
   34b48:	stp	x20, x19, [sp, #32]
   34b4c:	mov	x29, sp
   34b50:	cmp	w8, #0x1
   34b54:	b.ne	34ba8 <rl_get_termcap@@Base+0x70>  // b.any
   34b58:	ldrb	w21, [x0]
   34b5c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34b60:	mov	x19, x0
   34b64:	mov	x20, xzr
   34b68:	add	x22, x22, #0x2b8
   34b6c:	b	34b7c <rl_get_termcap@@Base+0x44>
   34b70:	add	x20, x20, #0x10
   34b74:	cmp	x20, #0x1e0
   34b78:	b.eq	34ba8 <rl_get_termcap@@Base+0x70>  // b.none
   34b7c:	ldr	x0, [x22, x20]
   34b80:	ldrb	w8, [x0]
   34b84:	cmp	w8, w21
   34b88:	b.ne	34b70 <rl_get_termcap@@Base+0x38>  // b.any
   34b8c:	mov	x1, x19
   34b90:	bl	170a0 <strcmp@plt>
   34b94:	cbnz	w0, 34b70 <rl_get_termcap@@Base+0x38>
   34b98:	add	x8, x22, x20
   34b9c:	ldr	x8, [x8, #8]
   34ba0:	ldr	x0, [x8]
   34ba4:	b	34bac <rl_get_termcap@@Base+0x74>
   34ba8:	mov	x0, xzr
   34bac:	ldp	x20, x19, [sp, #32]
   34bb0:	ldp	x22, x21, [sp, #16]
   34bb4:	ldp	x29, x30, [sp], #48
   34bb8:	ret

0000000000034bbc <rl_reset_terminal@@Base>:
   34bbc:	stp	x29, x30, [sp, #-16]!
   34bc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34bc4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34bc8:	ldr	x8, [x8, #3520]
   34bcc:	ldr	x9, [x9, #3552]
   34bd0:	mov	x29, sp
   34bd4:	str	wzr, [x8]
   34bd8:	str	wzr, [x9]
   34bdc:	bl	164c0 <_rl_init_terminal_io@plt>
   34be0:	mov	w0, wzr
   34be4:	ldp	x29, x30, [sp], #16
   34be8:	ret

0000000000034bec <_rl_output_character_function@@Base>:
   34bec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34bf0:	ldr	x8, [x8, #3952]
   34bf4:	ldr	x1, [x8]
   34bf8:	b	16670 <putc@plt>

0000000000034bfc <_rl_output_some_chars@@Base>:
   34bfc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34c00:	ldr	x8, [x8, #3952]
   34c04:	sxtw	x2, w1
   34c08:	mov	w1, #0x1                   	// #1
   34c0c:	ldr	x3, [x8]
   34c10:	b	173e0 <fwrite@plt>

0000000000034c14 <_rl_backspace@@Base>:
   34c14:	stp	x29, x30, [sp, #-48]!
   34c18:	str	x21, [sp, #16]
   34c1c:	stp	x20, x19, [sp, #32]
   34c20:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34c24:	ldr	x20, [x20, #3048]
   34c28:	mov	w19, w0
   34c2c:	cmp	w0, #0x1
   34c30:	mov	x29, sp
   34c34:	ldr	x8, [x20]
   34c38:	cbz	x8, 34c80 <_rl_backspace@@Base+0x6c>
   34c3c:	b.lt	34ca0 <_rl_backspace@@Base+0x8c>  // b.tstop
   34c40:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34c44:	ldr	x2, [x2, #2496]
   34c48:	mov	w1, #0x1                   	// #1
   34c4c:	mov	x0, x8
   34c50:	bl	16590 <tputs@plt>
   34c54:	subs	w21, w19, #0x1
   34c58:	b.eq	34ca0 <_rl_backspace@@Base+0x8c>  // b.none
   34c5c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34c60:	ldr	x19, [x19, #2496]
   34c64:	ldr	x0, [x20]
   34c68:	mov	w1, #0x1                   	// #1
   34c6c:	mov	x2, x19
   34c70:	bl	16590 <tputs@plt>
   34c74:	subs	w21, w21, #0x1
   34c78:	b.ne	34c64 <_rl_backspace@@Base+0x50>  // b.any
   34c7c:	b	34ca0 <_rl_backspace@@Base+0x8c>
   34c80:	b.lt	34ca0 <_rl_backspace@@Base+0x8c>  // b.tstop
   34c84:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34c88:	ldr	x20, [x20, #3952]
   34c8c:	ldr	x1, [x20]
   34c90:	mov	w0, #0x8                   	// #8
   34c94:	bl	16670 <putc@plt>
   34c98:	subs	w19, w19, #0x1
   34c9c:	b.ne	34c8c <_rl_backspace@@Base+0x78>  // b.any
   34ca0:	ldp	x20, x19, [sp, #32]
   34ca4:	ldr	x21, [sp, #16]
   34ca8:	mov	w0, wzr
   34cac:	ldp	x29, x30, [sp], #48
   34cb0:	ret

0000000000034cb4 <rl_crlf@@Base>:
   34cb4:	stp	x29, x30, [sp, #-16]!
   34cb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34cbc:	ldr	x8, [x8, #3952]
   34cc0:	mov	w0, #0xa                   	// #10
   34cc4:	mov	x29, sp
   34cc8:	ldr	x1, [x8]
   34ccc:	bl	16670 <putc@plt>
   34cd0:	mov	w0, wzr
   34cd4:	ldp	x29, x30, [sp], #16
   34cd8:	ret

0000000000034cdc <rl_ding@@Base>:
   34cdc:	stp	x29, x30, [sp, #-32]!
   34ce0:	str	x19, [sp, #16]
   34ce4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ce8:	ldr	x8, [x8, #2944]
   34cec:	mov	x29, sp
   34cf0:	ldr	w8, [x8]
   34cf4:	cbz	w8, 34d18 <rl_ding@@Base+0x3c>
   34cf8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34cfc:	ldr	x8, [x8, #3288]
   34d00:	ldr	w8, [x8]
   34d04:	cmp	w8, #0x2
   34d08:	b.eq	34d20 <rl_ding@@Base+0x44>  // b.none
   34d0c:	cmp	w8, #0x1
   34d10:	b.ne	34d3c <rl_ding@@Base+0x60>  // b.any
   34d14:	b	34d4c <rl_ding@@Base+0x70>
   34d18:	mov	w0, #0xffffffff            	// #-1
   34d1c:	b	34d40 <rl_ding@@Base+0x64>
   34d20:	adrp	x8, 58000 <_rl_vimvcxt@@Base>
   34d24:	ldr	x0, [x8, #4088]
   34d28:	cbz	x0, 34d4c <rl_ding@@Base+0x70>
   34d2c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34d30:	ldr	x2, [x2, #2496]
   34d34:	mov	w1, #0x1                   	// #1
   34d38:	bl	16590 <tputs@plt>
   34d3c:	mov	w0, wzr
   34d40:	ldr	x19, [sp, #16]
   34d44:	ldp	x29, x30, [sp], #32
   34d48:	ret
   34d4c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34d50:	ldr	x19, [x19, #2208]
   34d54:	mov	w0, #0x7                   	// #7
   34d58:	ldr	x1, [x19]
   34d5c:	bl	166d0 <fputc@plt>
   34d60:	ldr	x0, [x19]
   34d64:	bl	17430 <fflush@plt>
   34d68:	b	34d3c <rl_ding@@Base+0x60>

0000000000034d6c <_rl_enable_meta_key@@Base>:
   34d6c:	stp	x29, x30, [sp, #-32]!
   34d70:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34d74:	ldr	w8, [x8, #120]
   34d78:	str	x19, [sp, #16]
   34d7c:	mov	x29, sp
   34d80:	cbz	w8, 34dac <_rl_enable_meta_key@@Base+0x40>
   34d84:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34d88:	ldr	x0, [x8, #96]
   34d8c:	cbz	x0, 34dac <_rl_enable_meta_key@@Base+0x40>
   34d90:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34d94:	ldr	x2, [x2, #2496]
   34d98:	mov	w1, #0x1                   	// #1
   34d9c:	mov	w19, #0x1                   	// #1
   34da0:	bl	16590 <tputs@plt>
   34da4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34da8:	strb	w19, [x8, #128]
   34dac:	ldr	x19, [sp, #16]
   34db0:	ldp	x29, x30, [sp], #32
   34db4:	ret

0000000000034db8 <_rl_disable_meta_key@@Base>:
   34db8:	stp	x29, x30, [sp, #-32]!
   34dbc:	str	x19, [sp, #16]
   34dc0:	adrp	x19, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34dc4:	ldrb	w8, [x19, #128]
   34dc8:	mov	x29, sp
   34dcc:	cmp	w8, #0x1
   34dd0:	b.ne	34e00 <_rl_disable_meta_key@@Base+0x48>  // b.any
   34dd4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34dd8:	ldr	w8, [x8, #120]
   34ddc:	cbz	w8, 34e00 <_rl_disable_meta_key@@Base+0x48>
   34de0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34de4:	ldr	x0, [x8, #88]
   34de8:	cbz	x0, 34e00 <_rl_disable_meta_key@@Base+0x48>
   34dec:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34df0:	ldr	x2, [x2, #2496]
   34df4:	mov	w1, #0x1                   	// #1
   34df8:	bl	16590 <tputs@plt>
   34dfc:	strb	wzr, [x19, #128]
   34e00:	ldr	x19, [sp, #16]
   34e04:	ldp	x29, x30, [sp], #32
   34e08:	ret

0000000000034e0c <_rl_control_keypad@@Base>:
   34e0c:	mov	w8, w0
   34e10:	cbz	w0, 34e20 <_rl_control_keypad@@Base+0x14>
   34e14:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34e18:	ldr	x0, [x9, #80]
   34e1c:	cbnz	x0, 34e30 <_rl_control_keypad@@Base+0x24>
   34e20:	cbnz	w8, 34e40 <_rl_control_keypad@@Base+0x34>
   34e24:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34e28:	ldr	x0, [x8, #72]
   34e2c:	cbz	x0, 34e40 <_rl_control_keypad@@Base+0x34>
   34e30:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34e34:	ldr	x2, [x2, #2496]
   34e38:	mov	w1, #0x1                   	// #1
   34e3c:	b	16590 <tputs@plt>
   34e40:	ret

0000000000034e44 <_rl_set_cursor@@Base>:
   34e44:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34e48:	ldr	x8, [x8, #112]
   34e4c:	cbz	x8, 34e78 <_rl_set_cursor@@Base+0x34>
   34e50:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   34e54:	mov	w9, w0
   34e58:	ldr	x0, [x10, #104]
   34e5c:	cbz	x0, 34e78 <_rl_set_cursor@@Base+0x34>
   34e60:	cbnz	w1, 34e7c <_rl_set_cursor@@Base+0x38>
   34e64:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34e68:	ldr	x10, [x10, #3976]
   34e6c:	ldr	w10, [x10]
   34e70:	cmp	w10, w9
   34e74:	b.ne	34e7c <_rl_set_cursor@@Base+0x38>  // b.any
   34e78:	ret
   34e7c:	adrp	x2, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34e80:	ldr	x2, [x2, #2496]
   34e84:	mov	w1, #0x1                   	// #1
   34e88:	cbz	w9, 34e90 <_rl_set_cursor@@Base+0x4c>
   34e8c:	mov	x0, x8
   34e90:	b	16590 <tputs@plt>

0000000000034e94 <rl_insert_text@@Base>:
   34e94:	stp	x29, x30, [sp, #-64]!
   34e98:	str	x23, [sp, #16]
   34e9c:	stp	x22, x21, [sp, #32]
   34ea0:	stp	x20, x19, [sp, #48]
   34ea4:	mov	x29, sp
   34ea8:	cbz	x0, 34fa8 <rl_insert_text@@Base+0x114>
   34eac:	ldrb	w8, [x0]
   34eb0:	mov	x20, x0
   34eb4:	cbz	w8, 34fa8 <rl_insert_text@@Base+0x114>
   34eb8:	mov	x0, x20
   34ebc:	bl	16440 <strlen@plt>
   34ec0:	mov	x19, x0
   34ec4:	cbz	w19, 34fe4 <rl_insert_text@@Base+0x150>
   34ec8:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ecc:	ldr	x21, [x21, #2656]
   34ed0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ed4:	ldr	w10, [x21]
   34ed8:	ldr	x8, [x8, #3808]
   34edc:	add	w0, w10, w19
   34ee0:	ldr	w8, [x8]
   34ee4:	cmp	w0, w8
   34ee8:	b.lt	34ef4 <rl_insert_text@@Base+0x60>  // b.tstop
   34eec:	bl	16e30 <rl_extend_line_buffer@plt>
   34ef0:	ldr	w10, [x21]
   34ef4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34ef8:	ldr	x22, [x22, #3512]
   34efc:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34f00:	sxtw	x2, w19
   34f04:	ldr	w9, [x22]
   34f08:	ldr	x23, [x23, #2480]
   34f0c:	cmp	w10, w9
   34f10:	ldr	x8, [x23]
   34f14:	b.lt	34f3c <rl_insert_text@@Base+0xa8>  // b.tstop
   34f18:	sxtw	x10, w10
   34f1c:	ldrb	w9, [x8, x10]
   34f20:	add	x8, x8, x2
   34f24:	strb	w9, [x8, x10]
   34f28:	ldrsw	x9, [x22]
   34f2c:	ldr	x8, [x23]
   34f30:	cmp	x10, x9
   34f34:	sub	x10, x10, #0x1
   34f38:	b.gt	34f1c <rl_insert_text@@Base+0x88>
   34f3c:	add	x0, x8, w9, sxtw
   34f40:	mov	x1, x20
   34f44:	bl	17730 <strncpy@plt>
   34f48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34f4c:	ldr	x8, [x8, #3248]
   34f50:	ldr	w8, [x8]
   34f54:	cbnz	w8, 34fc4 <rl_insert_text@@Base+0x130>
   34f58:	cmp	w19, #0x1
   34f5c:	b.ne	34fb0 <rl_insert_text@@Base+0x11c>  // b.any
   34f60:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   34f64:	ldr	x8, [x8, #3040]
   34f68:	ldr	x8, [x8]
   34f6c:	cbz	x8, 34fb0 <rl_insert_text@@Base+0x11c>
   34f70:	ldr	w9, [x8, #24]
   34f74:	cmp	w9, #0x1
   34f78:	b.ne	34fb0 <rl_insert_text@@Base+0x11c>  // b.any
   34f7c:	ldr	w9, [x8, #12]
   34f80:	ldr	w10, [x22]
   34f84:	cmp	w9, w10
   34f88:	b.ne	34fb0 <rl_insert_text@@Base+0x11c>  // b.any
   34f8c:	ldr	w10, [x8, #8]
   34f90:	sub	w10, w9, w10
   34f94:	cmp	w10, #0x13
   34f98:	b.gt	34fb0 <rl_insert_text@@Base+0x11c>
   34f9c:	add	w9, w9, #0x1
   34fa0:	str	w9, [x8, #12]
   34fa4:	b	34fc4 <rl_insert_text@@Base+0x130>
   34fa8:	mov	w19, wzr
   34fac:	b	34fe4 <rl_insert_text@@Base+0x150>
   34fb0:	ldr	w1, [x22]
   34fb4:	mov	w0, #0x1                   	// #1
   34fb8:	mov	x3, xzr
   34fbc:	add	w2, w1, w19
   34fc0:	bl	168c0 <rl_add_undo@plt>
   34fc4:	ldr	w8, [x22]
   34fc8:	ldrsw	x9, [x21]
   34fcc:	ldr	x10, [x23]
   34fd0:	add	w8, w8, w19
   34fd4:	add	x9, x9, w19, sxtw
   34fd8:	str	w8, [x22]
   34fdc:	str	w9, [x21]
   34fe0:	strb	wzr, [x10, x9]
   34fe4:	mov	w0, w19
   34fe8:	ldp	x20, x19, [sp, #48]
   34fec:	ldp	x22, x21, [sp, #32]
   34ff0:	ldr	x23, [sp, #16]
   34ff4:	ldp	x29, x30, [sp], #64
   34ff8:	ret

0000000000034ffc <rl_delete_text@@Base>:
   34ffc:	stp	x29, x30, [sp, #-64]!
   35000:	str	x23, [sp, #16]
   35004:	stp	x22, x21, [sp, #32]
   35008:	stp	x20, x19, [sp, #48]
   3500c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35010:	ldr	x22, [x22, #2656]
   35014:	cmp	w0, w1
   35018:	csel	w9, w0, w1, gt
   3501c:	csel	w10, w1, w0, gt
   35020:	ldr	w8, [x22]
   35024:	mov	x29, sp
   35028:	cmp	w9, w8
   3502c:	csel	w20, w8, w9, gt
   35030:	cmp	w10, w8
   35034:	ccmp	w9, w8, #0x4, gt
   35038:	csel	w8, w8, w10, gt
   3503c:	bic	w21, w8, w8, asr #31
   35040:	mov	w0, w21
   35044:	mov	w1, w20
   35048:	bl	178e0 <rl_copy_text@plt>
   3504c:	ldr	w8, [x22]
   35050:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35054:	ldr	x23, [x23, #2480]
   35058:	sub	w19, w20, w21
   3505c:	sub	w8, w8, w19
   35060:	mov	x3, x0
   35064:	cmp	w21, w8
   35068:	b.ge	35098 <rl_delete_text@@Base+0x9c>  // b.tcont
   3506c:	mov	w8, w21
   35070:	mov	w9, w20
   35074:	ldr	x10, [x23]
   35078:	ldrb	w11, [x10, w9, sxtw]
   3507c:	add	w9, w9, #0x1
   35080:	strb	w11, [x10, x8]
   35084:	ldrsw	x10, [x22]
   35088:	add	x8, x8, #0x1
   3508c:	sub	x10, x10, w19, sxtw
   35090:	cmp	x8, x10
   35094:	b.lt	35074 <rl_delete_text@@Base+0x78>  // b.tstop
   35098:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3509c:	ldr	x8, [x8, #3248]
   350a0:	ldr	w8, [x8]
   350a4:	cbz	w8, 350b4 <rl_delete_text@@Base+0xb8>
   350a8:	mov	x0, x3
   350ac:	bl	169f0 <xfree@plt>
   350b0:	b	350c4 <rl_delete_text@@Base+0xc8>
   350b4:	mov	w0, wzr
   350b8:	mov	w1, w21
   350bc:	mov	w2, w20
   350c0:	bl	168c0 <rl_add_undo@plt>
   350c4:	ldrsw	x8, [x22]
   350c8:	ldr	x9, [x23]
   350cc:	mov	w0, w19
   350d0:	ldr	x23, [sp, #16]
   350d4:	sub	x8, x8, w19, sxtw
   350d8:	str	w8, [x22]
   350dc:	strb	wzr, [x9, x8]
   350e0:	ldp	x20, x19, [sp, #48]
   350e4:	ldp	x22, x21, [sp, #32]
   350e8:	ldp	x29, x30, [sp], #64
   350ec:	ret

00000000000350f0 <_rl_fix_point@@Base>:
   350f0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   350f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   350f8:	ldr	x9, [x9, #3512]
   350fc:	ldr	x8, [x8, #2656]
   35100:	ldr	w10, [x9]
   35104:	ldr	w8, [x8]
   35108:	cmp	w10, w8
   3510c:	mov	w11, w8
   35110:	b.gt	35124 <_rl_fix_point@@Base+0x34>
   35114:	tbnz	w10, #31, 35120 <_rl_fix_point@@Base+0x30>
   35118:	cbnz	w0, 3512c <_rl_fix_point@@Base+0x3c>
   3511c:	ret
   35120:	mov	w11, wzr
   35124:	str	w11, [x9]
   35128:	cbz	w0, 3511c <_rl_fix_point@@Base+0x2c>
   3512c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35130:	ldr	x9, [x9, #3272]
   35134:	ldr	w10, [x9]
   35138:	cmp	w10, w8
   3513c:	b.le	35148 <_rl_fix_point@@Base+0x58>
   35140:	str	w8, [x9]
   35144:	ret
   35148:	tbz	w10, #31, 3511c <_rl_fix_point@@Base+0x2c>
   3514c:	str	wzr, [x9]
   35150:	ret

0000000000035154 <_rl_replace_text@@Base>:
   35154:	stp	x29, x30, [sp, #-48]!
   35158:	str	x21, [sp, #16]
   3515c:	stp	x20, x19, [sp, #32]
   35160:	mov	x29, sp
   35164:	mov	w21, w2
   35168:	mov	w20, w1
   3516c:	mov	x19, x0
   35170:	bl	16400 <rl_begin_undo_group@plt>
   35174:	cmp	w20, w21
   35178:	b.gt	35188 <_rl_replace_text@@Base+0x34>
   3517c:	add	w1, w21, #0x1
   35180:	mov	w0, w20
   35184:	bl	171c0 <rl_delete_text@plt>
   35188:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3518c:	ldr	x8, [x8, #3512]
   35190:	str	w20, [x8]
   35194:	ldrb	w8, [x19]
   35198:	cbz	w8, 351ac <_rl_replace_text@@Base+0x58>
   3519c:	mov	x0, x19
   351a0:	bl	16430 <rl_insert_text@plt>
   351a4:	mov	w19, w0
   351a8:	b	351b0 <_rl_replace_text@@Base+0x5c>
   351ac:	mov	w19, wzr
   351b0:	bl	17830 <rl_end_undo_group@plt>
   351b4:	mov	w0, w19
   351b8:	ldp	x20, x19, [sp, #32]
   351bc:	ldr	x21, [sp, #16]
   351c0:	ldp	x29, x30, [sp], #48
   351c4:	ret

00000000000351c8 <rl_replace_line@@Base>:
   351c8:	stp	x29, x30, [sp, #-48]!
   351cc:	str	x21, [sp, #16]
   351d0:	stp	x20, x19, [sp, #32]
   351d4:	mov	x29, sp
   351d8:	mov	w20, w1
   351dc:	mov	x21, x0
   351e0:	bl	16440 <strlen@plt>
   351e4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   351e8:	ldr	x8, [x8, #3808]
   351ec:	mov	x19, x0
   351f0:	ldr	w8, [x8]
   351f4:	cmp	w8, w19
   351f8:	b.gt	35204 <rl_replace_line@@Base+0x3c>
   351fc:	mov	w0, w19
   35200:	bl	16e30 <rl_extend_line_buffer@plt>
   35204:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35208:	ldr	x8, [x8, #2480]
   3520c:	mov	x1, x21
   35210:	ldr	x0, [x8]
   35214:	bl	17480 <strcpy@plt>
   35218:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3521c:	ldr	x21, [x21, #2656]
   35220:	str	w19, [x21]
   35224:	cbz	w20, 35230 <rl_replace_line@@Base+0x68>
   35228:	bl	17550 <rl_free_undo_list@plt>
   3522c:	ldr	w19, [x21]
   35230:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35234:	ldr	x8, [x8, #3512]
   35238:	mov	w10, w19
   3523c:	ldr	w9, [x8]
   35240:	cmp	w9, w19
   35244:	b.gt	35250 <rl_replace_line@@Base+0x88>
   35248:	tbz	w9, #31, 35254 <rl_replace_line@@Base+0x8c>
   3524c:	mov	w10, wzr
   35250:	str	w10, [x8]
   35254:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35258:	ldr	x8, [x8, #3272]
   3525c:	ldr	w9, [x8]
   35260:	cmp	w9, w19
   35264:	b.gt	35270 <rl_replace_line@@Base+0xa8>
   35268:	tbz	w9, #31, 35274 <rl_replace_line@@Base+0xac>
   3526c:	mov	w19, wzr
   35270:	str	w19, [x8]
   35274:	ldp	x20, x19, [sp, #32]
   35278:	ldr	x21, [sp, #16]
   3527c:	ldp	x29, x30, [sp], #48
   35280:	ret

0000000000035284 <rl_forward_byte@@Base>:
   35284:	stp	x29, x30, [sp, #-32]!
   35288:	str	x19, [sp, #16]
   3528c:	mov	x29, sp
   35290:	tbnz	w0, #31, 35320 <rl_forward_byte@@Base+0x9c>
   35294:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35298:	ldr	x19, [x19, #2656]
   3529c:	cbz	w0, 35304 <rl_forward_byte@@Base+0x80>
   352a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   352a4:	ldr	x8, [x8, #3512]
   352a8:	ldr	w9, [x19]
   352ac:	ldr	w10, [x8]
   352b0:	cmp	w9, #0x1
   352b4:	add	w10, w10, w0
   352b8:	b.lt	352f4 <rl_forward_byte@@Base+0x70>  // b.tstop
   352bc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   352c0:	ldr	x11, [x11, #3416]
   352c4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   352c8:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   352cc:	ldr	w11, [x11]
   352d0:	ldr	x12, [x12, #1992]
   352d4:	cmp	w11, #0x0
   352d8:	ldr	x12, [x12]
   352dc:	ldr	x13, [x13, #3824]
   352e0:	cset	w11, eq  // eq = none
   352e4:	cmp	x12, x13
   352e8:	cset	w12, eq  // eq = none
   352ec:	and	w11, w11, w12
   352f0:	sub	w9, w9, w11
   352f4:	cmp	w10, w9
   352f8:	b.le	3534c <rl_forward_byte@@Base+0xc8>
   352fc:	str	w9, [x8]
   35300:	bl	17390 <rl_ding@plt>
   35304:	ldr	w8, [x19]
   35308:	tbz	w8, #31, 35310 <rl_forward_byte@@Base+0x8c>
   3530c:	str	wzr, [x19]
   35310:	ldr	x19, [sp, #16]
   35314:	mov	w0, wzr
   35318:	ldp	x29, x30, [sp], #32
   3531c:	ret
   35320:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35324:	ldr	x19, [x19, #3512]
   35328:	neg	w9, w0
   3532c:	ldr	w8, [x19]
   35330:	cmp	w8, w9
   35334:	b.ge	3535c <rl_forward_byte@@Base+0xd8>  // b.tcont
   35338:	str	wzr, [x19]
   3533c:	bl	17390 <rl_ding@plt>
   35340:	ldr	w8, [x19]
   35344:	tbz	w8, #31, 35310 <rl_forward_byte@@Base+0x8c>
   35348:	b	3530c <rl_forward_byte@@Base+0x88>
   3534c:	str	w10, [x8]
   35350:	ldr	w8, [x19]
   35354:	tbz	w8, #31, 35310 <rl_forward_byte@@Base+0x8c>
   35358:	b	3530c <rl_forward_byte@@Base+0x88>
   3535c:	add	w8, w8, w0
   35360:	str	w8, [x19]
   35364:	tbz	w8, #31, 35310 <rl_forward_byte@@Base+0x8c>
   35368:	b	3530c <rl_forward_byte@@Base+0x88>

000000000003536c <rl_backward_byte@@Base>:
   3536c:	stp	x29, x30, [sp, #-32]!
   35370:	str	x19, [sp, #16]
   35374:	mov	x29, sp
   35378:	tbnz	w0, #31, 353a8 <rl_backward_byte@@Base+0x3c>
   3537c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35380:	ldr	x19, [x19, #3512]
   35384:	cbz	w0, 3539c <rl_backward_byte@@Base+0x30>
   35388:	ldr	w8, [x19]
   3538c:	subs	w8, w8, w0
   35390:	b.ge	353b4 <rl_backward_byte@@Base+0x48>  // b.tcont
   35394:	str	wzr, [x19]
   35398:	bl	17390 <rl_ding@plt>
   3539c:	ldr	w8, [x19]
   353a0:	tbz	w8, #31, 353c0 <rl_backward_byte@@Base+0x54>
   353a4:	b	353bc <rl_backward_byte@@Base+0x50>
   353a8:	neg	w0, w0
   353ac:	bl	16540 <rl_forward_byte@plt>
   353b0:	b	353c0 <rl_backward_byte@@Base+0x54>
   353b4:	str	w8, [x19]
   353b8:	tbz	w8, #31, 353c0 <rl_backward_byte@@Base+0x54>
   353bc:	str	wzr, [x19]
   353c0:	ldr	x19, [sp, #16]
   353c4:	mov	w0, wzr
   353c8:	ldp	x29, x30, [sp], #32
   353cc:	ret

00000000000353d0 <_rl_forward_char_internal@@Base>:
   353d0:	stp	x29, x30, [sp, #-32]!
   353d4:	stp	x20, x19, [sp, #16]
   353d8:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   353dc:	ldr	x20, [x20, #2480]
   353e0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   353e4:	ldr	x9, [x9, #3512]
   353e8:	mov	w2, w0
   353ec:	ldr	x8, [x20]
   353f0:	mov	w3, #0x1                   	// #1
   353f4:	ldr	w1, [x9]
   353f8:	mov	x29, sp
   353fc:	mov	x0, x8
   35400:	bl	16c00 <_rl_find_next_mbchar@plt>
   35404:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35408:	ldr	x19, [x19, #2656]
   3540c:	ldr	w1, [x19]
   35410:	cmp	w0, w1
   35414:	b.lt	35454 <_rl_forward_char_internal@@Base+0x84>  // b.tstop
   35418:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3541c:	ldr	x8, [x8, #3416]
   35420:	ldr	w8, [x8]
   35424:	cbnz	w8, 35454 <_rl_forward_char_internal@@Base+0x84>
   35428:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3542c:	ldr	x8, [x8, #1992]
   35430:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35434:	ldr	x8, [x8]
   35438:	ldr	x9, [x9, #3824]
   3543c:	cmp	x8, x9
   35440:	b.ne	35454 <_rl_forward_char_internal@@Base+0x84>  // b.any
   35444:	ldr	x0, [x20]
   35448:	mov	w2, #0x1                   	// #1
   3544c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   35450:	ldr	w1, [x19]
   35454:	tbz	w1, #31, 35460 <_rl_forward_char_internal@@Base+0x90>
   35458:	mov	w1, wzr
   3545c:	str	wzr, [x19]
   35460:	ldp	x20, x19, [sp, #16]
   35464:	cmp	w0, w1
   35468:	csel	w0, w1, w0, gt
   3546c:	ldp	x29, x30, [sp], #32
   35470:	ret

0000000000035474 <_rl_backward_char_internal@@Base>:
   35474:	stp	x29, x30, [sp, #-32]!
   35478:	stp	x20, x19, [sp, #16]
   3547c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35480:	ldr	x8, [x8, #3512]
   35484:	cmp	w0, #0x1
   35488:	mov	x29, sp
   3548c:	ldr	w1, [x8]
   35490:	b.lt	354dc <_rl_backward_char_internal@@Base+0x68>  // b.tstop
   35494:	cmp	w1, #0x1
   35498:	b.lt	354d4 <_rl_backward_char_internal@@Base+0x60>  // b.tstop
   3549c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   354a0:	ldr	x19, [x19, #2480]
   354a4:	mov	w8, w0
   354a8:	ldr	x0, [x19]
   354ac:	mov	w2, #0x1                   	// #1
   354b0:	mov	w20, w8
   354b4:	bl	16c20 <_rl_find_prev_mbchar@plt>
   354b8:	subs	w8, w20, #0x1
   354bc:	mov	w1, w0
   354c0:	b.le	354cc <_rl_backward_char_internal@@Base+0x58>
   354c4:	cmp	w1, #0x1
   354c8:	b.ge	354a8 <_rl_backward_char_internal@@Base+0x34>  // b.tcont
   354cc:	cmp	w20, #0x1
   354d0:	b.le	354dc <_rl_backward_char_internal@@Base+0x68>
   354d4:	mov	w0, wzr
   354d8:	b	354e0 <_rl_backward_char_internal@@Base+0x6c>
   354dc:	bic	w0, w1, w1, asr #31
   354e0:	ldp	x20, x19, [sp, #16]
   354e4:	ldp	x29, x30, [sp], #32
   354e8:	ret

00000000000354ec <rl_forward_char@@Base>:
   354ec:	stp	x29, x30, [sp, #-64]!
   354f0:	str	x23, [sp, #16]
   354f4:	stp	x22, x21, [sp, #32]
   354f8:	stp	x20, x19, [sp, #48]
   354fc:	mov	x29, sp
   35500:	mov	w20, w1
   35504:	mov	w19, w0
   35508:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3550c:	cmp	x0, #0x1
   35510:	b.eq	35568 <rl_forward_char@@Base+0x7c>  // b.none
   35514:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35518:	ldr	x8, [x8, #1896]
   3551c:	ldr	w8, [x8]
   35520:	cbnz	w8, 35568 <rl_forward_char@@Base+0x7c>
   35524:	tbnz	w19, #31, 355e0 <rl_forward_char@@Base+0xf4>
   35528:	cbz	w19, 356cc <rl_forward_char@@Base+0x1e0>
   3552c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35530:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35534:	ldr	x20, [x20, #3512]
   35538:	ldr	x21, [x21, #2656]
   3553c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35540:	ldr	w1, [x20]
   35544:	ldr	w8, [x21]
   35548:	ldr	x22, [x22, #3416]
   3554c:	cmp	w1, w8
   35550:	b.ne	3561c <rl_forward_char@@Base+0x130>  // b.any
   35554:	ldr	w8, [x22]
   35558:	cmp	w8, #0x1
   3555c:	b.ne	3561c <rl_forward_char@@Base+0x130>  // b.any
   35560:	bl	17390 <rl_ding@plt>
   35564:	b	356cc <rl_forward_char@@Base+0x1e0>
   35568:	tbnz	w19, #31, 355f0 <rl_forward_char@@Base+0x104>
   3556c:	cbz	w19, 356a4 <rl_forward_char@@Base+0x1b8>
   35570:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35574:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35578:	ldr	x8, [x8, #3512]
   3557c:	ldr	x9, [x9, #2656]
   35580:	ldr	w10, [x8]
   35584:	ldr	w9, [x9]
   35588:	add	w10, w10, w19
   3558c:	cmp	w9, #0x1
   35590:	b.lt	355cc <rl_forward_char@@Base+0xe0>  // b.tstop
   35594:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35598:	ldr	x11, [x11, #3416]
   3559c:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   355a0:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   355a4:	ldr	w11, [x11]
   355a8:	ldr	x12, [x12, #1992]
   355ac:	cmp	w11, #0x0
   355b0:	ldr	x12, [x12]
   355b4:	ldr	x13, [x13, #3824]
   355b8:	cset	w11, eq  // eq = none
   355bc:	cmp	x12, x13
   355c0:	cset	w12, eq  // eq = none
   355c4:	and	w11, w11, w12
   355c8:	sub	w9, w9, w11
   355cc:	cmp	w10, w9
   355d0:	b.le	356a0 <rl_forward_char@@Base+0x1b4>
   355d4:	str	w9, [x8]
   355d8:	bl	17390 <rl_ding@plt>
   355dc:	b	356a4 <rl_forward_char@@Base+0x1b8>
   355e0:	neg	w0, w19
   355e4:	mov	w1, w20
   355e8:	bl	16f70 <rl_backward_char@plt>
   355ec:	b	356cc <rl_forward_char@@Base+0x1e0>
   355f0:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   355f4:	ldr	x20, [x20, #3512]
   355f8:	neg	w9, w19
   355fc:	ldr	w8, [x20]
   35600:	cmp	w8, w9
   35604:	b.ge	356bc <rl_forward_char@@Base+0x1d0>  // b.tcont
   35608:	str	wzr, [x20]
   3560c:	bl	17390 <rl_ding@plt>
   35610:	ldr	w8, [x20]
   35614:	tbz	w8, #31, 356cc <rl_forward_char@@Base+0x1e0>
   35618:	b	356c8 <rl_forward_char@@Base+0x1dc>
   3561c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35620:	ldr	x23, [x23, #2480]
   35624:	mov	w3, #0x1                   	// #1
   35628:	mov	w2, w19
   3562c:	ldr	x0, [x23]
   35630:	bl	16c00 <_rl_find_next_mbchar@plt>
   35634:	ldr	w1, [x21]
   35638:	cmp	w0, w1
   3563c:	b.lt	35674 <rl_forward_char@@Base+0x188>  // b.tstop
   35640:	ldr	w8, [x22]
   35644:	cbnz	w8, 35674 <rl_forward_char@@Base+0x188>
   35648:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3564c:	ldr	x8, [x8, #1992]
   35650:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35654:	ldr	x8, [x8]
   35658:	ldr	x9, [x9, #3824]
   3565c:	cmp	x8, x9
   35660:	b.ne	35674 <rl_forward_char@@Base+0x188>  // b.any
   35664:	ldr	x0, [x23]
   35668:	mov	w2, #0x1                   	// #1
   3566c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   35670:	ldr	w1, [x21]
   35674:	tbz	w1, #31, 35680 <rl_forward_char@@Base+0x194>
   35678:	mov	w1, wzr
   3567c:	str	wzr, [x21]
   35680:	ldr	w8, [x20]
   35684:	cmp	w0, w1
   35688:	csel	w19, w1, w0, gt
   3568c:	cmp	w8, w19
   35690:	b.ne	35698 <rl_forward_char@@Base+0x1ac>  // b.any
   35694:	bl	17390 <rl_ding@plt>
   35698:	str	w19, [x20]
   3569c:	b	356cc <rl_forward_char@@Base+0x1e0>
   356a0:	str	w10, [x8]
   356a4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   356a8:	ldr	x8, [x8, #2656]
   356ac:	ldr	w9, [x8]
   356b0:	tbz	w9, #31, 356cc <rl_forward_char@@Base+0x1e0>
   356b4:	str	wzr, [x8]
   356b8:	b	356cc <rl_forward_char@@Base+0x1e0>
   356bc:	add	w8, w8, w19
   356c0:	str	w8, [x20]
   356c4:	tbz	w8, #31, 356cc <rl_forward_char@@Base+0x1e0>
   356c8:	str	wzr, [x20]
   356cc:	ldp	x20, x19, [sp, #48]
   356d0:	ldp	x22, x21, [sp, #32]
   356d4:	ldr	x23, [sp, #16]
   356d8:	mov	w0, wzr
   356dc:	ldp	x29, x30, [sp], #64
   356e0:	ret

00000000000356e4 <rl_backward_char@@Base>:
   356e4:	stp	x29, x30, [sp, #-48]!
   356e8:	str	x21, [sp, #16]
   356ec:	stp	x20, x19, [sp, #32]
   356f0:	mov	x29, sp
   356f4:	mov	w20, w1
   356f8:	mov	w19, w0
   356fc:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35700:	cmp	x0, #0x1
   35704:	b.eq	35770 <rl_backward_char@@Base+0x8c>  // b.none
   35708:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3570c:	ldr	x8, [x8, #1896]
   35710:	ldr	w8, [x8]
   35714:	cbnz	w8, 35770 <rl_backward_char@@Base+0x8c>
   35718:	tbnz	w19, #31, 357a8 <rl_backward_char@@Base+0xc4>
   3571c:	cbz	w19, 35868 <rl_backward_char@@Base+0x184>
   35720:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35724:	ldr	x20, [x20, #3512]
   35728:	ldr	w1, [x20]
   3572c:	cmp	w1, #0x1
   35730:	b.lt	3585c <rl_backward_char@@Base+0x178>  // b.tstop
   35734:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35738:	ldr	x21, [x21, #2480]
   3573c:	ldr	x0, [x21]
   35740:	mov	w2, #0x1                   	// #1
   35744:	bl	16c20 <_rl_find_prev_mbchar@plt>
   35748:	subs	w19, w19, #0x1
   3574c:	mov	w1, w0
   35750:	cset	w8, gt
   35754:	b.le	35760 <rl_backward_char@@Base+0x7c>
   35758:	cmp	w1, #0x1
   3575c:	b.ge	3573c <rl_backward_char@@Base+0x58>  // b.tcont
   35760:	cbz	w8, 35864 <rl_backward_char@@Base+0x180>
   35764:	str	wzr, [x20]
   35768:	bl	17390 <rl_ding@plt>
   3576c:	b	35868 <rl_backward_char@@Base+0x184>
   35770:	tbnz	w19, #31, 357b8 <rl_backward_char@@Base+0xd4>
   35774:	cbz	w19, 35794 <rl_backward_char@@Base+0xb0>
   35778:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3577c:	ldr	x9, [x9, #3512]
   35780:	ldr	w8, [x9]
   35784:	subs	w8, w8, w19
   35788:	b.ge	35834 <rl_backward_char@@Base+0x150>  // b.tcont
   3578c:	str	wzr, [x9]
   35790:	bl	17390 <rl_ding@plt>
   35794:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35798:	ldr	x8, [x8, #3512]
   3579c:	ldr	w8, [x8]
   357a0:	tbz	w8, #31, 35868 <rl_backward_char@@Base+0x184>
   357a4:	b	3583c <rl_backward_char@@Base+0x158>
   357a8:	neg	w0, w19
   357ac:	mov	w1, w20
   357b0:	bl	16780 <rl_forward_char@plt>
   357b4:	b	35868 <rl_backward_char@@Base+0x184>
   357b8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   357bc:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   357c0:	ldr	x9, [x9, #3512]
   357c4:	ldr	x20, [x20, #2656]
   357c8:	ldr	w10, [x9]
   357cc:	ldr	w8, [x20]
   357d0:	sub	w10, w10, w19
   357d4:	cmp	w8, #0x1
   357d8:	mov	w11, w8
   357dc:	b.lt	35818 <rl_backward_char@@Base+0x134>  // b.tstop
   357e0:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   357e4:	ldr	x11, [x11, #3416]
   357e8:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   357ec:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   357f0:	ldr	w11, [x11]
   357f4:	ldr	x12, [x12, #1992]
   357f8:	cmp	w11, #0x0
   357fc:	ldr	x12, [x12]
   35800:	ldr	x13, [x13, #3824]
   35804:	cset	w11, eq  // eq = none
   35808:	cmp	x12, x13
   3580c:	cset	w12, eq  // eq = none
   35810:	and	w11, w11, w12
   35814:	sub	w11, w8, w11
   35818:	cmp	w10, w11
   3581c:	b.le	3584c <rl_backward_char@@Base+0x168>
   35820:	str	w11, [x9]
   35824:	bl	17390 <rl_ding@plt>
   35828:	ldr	w8, [x20]
   3582c:	tbz	w8, #31, 35868 <rl_backward_char@@Base+0x184>
   35830:	b	35854 <rl_backward_char@@Base+0x170>
   35834:	str	w8, [x9]
   35838:	tbz	w8, #31, 35868 <rl_backward_char@@Base+0x184>
   3583c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35840:	ldr	x8, [x8, #3512]
   35844:	str	wzr, [x8]
   35848:	b	35868 <rl_backward_char@@Base+0x184>
   3584c:	str	w10, [x9]
   35850:	tbz	w8, #31, 35868 <rl_backward_char@@Base+0x184>
   35854:	str	wzr, [x20]
   35858:	b	35868 <rl_backward_char@@Base+0x184>
   3585c:	mov	w8, #0x1                   	// #1
   35860:	cbnz	w8, 35764 <rl_backward_char@@Base+0x80>
   35864:	str	w1, [x20]
   35868:	ldp	x20, x19, [sp, #32]
   3586c:	ldr	x21, [sp, #16]
   35870:	mov	w0, wzr
   35874:	ldp	x29, x30, [sp], #48
   35878:	ret

000000000003587c <rl_forward@@Base>:
   3587c:	stp	x29, x30, [sp, #-16]!
   35880:	mov	x29, sp
   35884:	bl	16780 <rl_forward_char@plt>
   35888:	mov	w0, wzr
   3588c:	ldp	x29, x30, [sp], #16
   35890:	ret

0000000000035894 <rl_backward@@Base>:
   35894:	stp	x29, x30, [sp, #-16]!
   35898:	mov	x29, sp
   3589c:	bl	16f70 <rl_backward_char@plt>
   358a0:	mov	w0, wzr
   358a4:	ldp	x29, x30, [sp], #16
   358a8:	ret

00000000000358ac <rl_beg_of_line@@Base>:
   358ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   358b0:	ldr	x8, [x8, #3512]
   358b4:	mov	w0, wzr
   358b8:	str	wzr, [x8]
   358bc:	ret

00000000000358c0 <rl_end_of_line@@Base>:
   358c0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   358c4:	ldr	x8, [x8, #2656]
   358c8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   358cc:	mov	w0, wzr
   358d0:	ldr	w8, [x8]
   358d4:	ldr	x9, [x9, #3512]
   358d8:	str	w8, [x9]
   358dc:	ret

00000000000358e0 <rl_forward_word@@Base>:
   358e0:	stp	x29, x30, [sp, #-64]!
   358e4:	stp	x20, x19, [sp, #48]
   358e8:	mov	w19, w0
   358ec:	str	x23, [sp, #16]
   358f0:	stp	x22, x21, [sp, #32]
   358f4:	mov	x29, sp
   358f8:	tbnz	w0, #31, 35a04 <rl_forward_word@@Base+0x124>
   358fc:	cbz	w19, 35a0c <rl_forward_word@@Base+0x12c>
   35900:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35904:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35908:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3590c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35910:	ldr	x20, [x20, #3512]
   35914:	ldr	x21, [x21, #2656]
   35918:	ldr	x22, [x22, #2480]
   3591c:	ldr	x23, [x23, #1896]
   35920:	b	3592c <rl_forward_word@@Base+0x4c>
   35924:	subs	w19, w19, #0x1
   35928:	b.eq	35a0c <rl_forward_word@@Base+0x12c>  // b.none
   3592c:	ldr	w1, [x20]
   35930:	ldr	w8, [x21]
   35934:	cmp	w1, w8
   35938:	b.ne	35958 <rl_forward_word@@Base+0x78>  // b.any
   3593c:	b	35a0c <rl_forward_word@@Base+0x12c>
   35940:	ldr	w8, [x20]
   35944:	add	w1, w8, #0x1
   35948:	ldr	w8, [x21]
   3594c:	str	w1, [x20]
   35950:	cmp	w1, w8
   35954:	b.ge	35998 <rl_forward_word@@Base+0xb8>  // b.tcont
   35958:	ldr	x0, [x22]
   3595c:	bl	175a0 <_rl_char_value@plt>
   35960:	bl	16d30 <_rl_walphabetic@plt>
   35964:	cbnz	w0, 35998 <rl_forward_word@@Base+0xb8>
   35968:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3596c:	cmp	x0, #0x2
   35970:	b.cc	35940 <rl_forward_word@@Base+0x60>  // b.lo, b.ul, b.last
   35974:	ldr	w8, [x23]
   35978:	cbnz	w8, 35940 <rl_forward_word@@Base+0x60>
   3597c:	ldr	x0, [x22]
   35980:	ldr	w1, [x20]
   35984:	mov	w2, #0x1                   	// #1
   35988:	mov	w3, #0x1                   	// #1
   3598c:	bl	16c00 <_rl_find_next_mbchar@plt>
   35990:	mov	w1, w0
   35994:	b	35948 <rl_forward_word@@Base+0x68>
   35998:	ldr	w8, [x20]
   3599c:	ldr	w9, [x21]
   359a0:	cmp	w8, w9
   359a4:	b.eq	35a0c <rl_forward_word@@Base+0x12c>  // b.none
   359a8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   359ac:	cmp	x0, #0x2
   359b0:	b.cc	359d8 <rl_forward_word@@Base+0xf8>  // b.lo, b.ul, b.last
   359b4:	ldr	w8, [x23]
   359b8:	cbnz	w8, 359d8 <rl_forward_word@@Base+0xf8>
   359bc:	ldr	x0, [x22]
   359c0:	ldr	w1, [x20]
   359c4:	mov	w2, #0x1                   	// #1
   359c8:	mov	w3, #0x1                   	// #1
   359cc:	bl	16c00 <_rl_find_next_mbchar@plt>
   359d0:	mov	w1, w0
   359d4:	b	359e0 <rl_forward_word@@Base+0x100>
   359d8:	ldr	w8, [x20]
   359dc:	add	w1, w8, #0x1
   359e0:	ldr	w8, [x21]
   359e4:	str	w1, [x20]
   359e8:	cmp	w1, w8
   359ec:	b.ge	35924 <rl_forward_word@@Base+0x44>  // b.tcont
   359f0:	ldr	x0, [x22]
   359f4:	bl	175a0 <_rl_char_value@plt>
   359f8:	bl	16d30 <_rl_walphabetic@plt>
   359fc:	cbnz	w0, 359a8 <rl_forward_word@@Base+0xc8>
   35a00:	b	35924 <rl_forward_word@@Base+0x44>
   35a04:	neg	w0, w19
   35a08:	bl	16ae0 <rl_backward_word@plt>
   35a0c:	ldp	x20, x19, [sp, #48]
   35a10:	ldp	x22, x21, [sp, #32]
   35a14:	ldr	x23, [sp, #16]
   35a18:	mov	w0, wzr
   35a1c:	ldp	x29, x30, [sp], #64
   35a20:	ret

0000000000035a24 <rl_backward_word@@Base>:
   35a24:	stp	x29, x30, [sp, #-64]!
   35a28:	stp	x20, x19, [sp, #48]
   35a2c:	mov	w19, w0
   35a30:	str	x23, [sp, #16]
   35a34:	stp	x22, x21, [sp, #32]
   35a38:	mov	x29, sp
   35a3c:	tbnz	w0, #31, 35b30 <rl_backward_word@@Base+0x10c>
   35a40:	cbz	w19, 35b38 <rl_backward_word@@Base+0x114>
   35a44:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35a48:	ldr	x21, [x21, #3512]
   35a4c:	ldr	w8, [x21]
   35a50:	cbz	w8, 35b38 <rl_backward_word@@Base+0x114>
   35a54:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35a58:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35a5c:	ldr	x22, [x22, #1896]
   35a60:	ldr	x23, [x23, #2480]
   35a64:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35a68:	cmp	x0, #0x2
   35a6c:	b.cc	35a90 <rl_backward_word@@Base+0x6c>  // b.lo, b.ul, b.last
   35a70:	ldr	w8, [x22]
   35a74:	cbnz	w8, 35a90 <rl_backward_word@@Base+0x6c>
   35a78:	ldr	x0, [x23]
   35a7c:	ldr	w1, [x21]
   35a80:	mov	w2, #0x1                   	// #1
   35a84:	bl	16c20 <_rl_find_prev_mbchar@plt>
   35a88:	mov	w20, w0
   35a8c:	b	35a98 <rl_backward_word@@Base+0x74>
   35a90:	ldr	w8, [x21]
   35a94:	sub	w20, w8, #0x1
   35a98:	ldr	x0, [x23]
   35a9c:	mov	w1, w20
   35aa0:	bl	175a0 <_rl_char_value@plt>
   35aa4:	bl	16d30 <_rl_walphabetic@plt>
   35aa8:	cbnz	w0, 35ac0 <rl_backward_word@@Base+0x9c>
   35aac:	cmp	w20, #0x1
   35ab0:	str	w20, [x21]
   35ab4:	b.ge	35a64 <rl_backward_word@@Base+0x40>  // b.tcont
   35ab8:	cbnz	w20, 35ac8 <rl_backward_word@@Base+0xa4>
   35abc:	b	35b38 <rl_backward_word@@Base+0x114>
   35ac0:	ldr	w20, [x21]
   35ac4:	cbz	w20, 35b38 <rl_backward_word@@Base+0x114>
   35ac8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35acc:	cmp	x0, #0x2
   35ad0:	b.cc	35af4 <rl_backward_word@@Base+0xd0>  // b.lo, b.ul, b.last
   35ad4:	ldr	w8, [x22]
   35ad8:	cbnz	w8, 35af4 <rl_backward_word@@Base+0xd0>
   35adc:	ldr	x0, [x23]
   35ae0:	ldr	w1, [x21]
   35ae4:	mov	w2, #0x1                   	// #1
   35ae8:	bl	16c20 <_rl_find_prev_mbchar@plt>
   35aec:	mov	w20, w0
   35af0:	b	35afc <rl_backward_word@@Base+0xd8>
   35af4:	ldr	w8, [x21]
   35af8:	sub	w20, w8, #0x1
   35afc:	ldr	x0, [x23]
   35b00:	mov	w1, w20
   35b04:	bl	175a0 <_rl_char_value@plt>
   35b08:	bl	16d30 <_rl_walphabetic@plt>
   35b0c:	cbz	w0, 35b1c <rl_backward_word@@Base+0xf8>
   35b10:	str	w20, [x21]
   35b14:	cbnz	w20, 35ac8 <rl_backward_word@@Base+0xa4>
   35b18:	b	35b38 <rl_backward_word@@Base+0x114>
   35b1c:	subs	w19, w19, #0x1
   35b20:	b.eq	35b38 <rl_backward_word@@Base+0x114>  // b.none
   35b24:	ldr	w8, [x21]
   35b28:	cbnz	w8, 35a64 <rl_backward_word@@Base+0x40>
   35b2c:	b	35b38 <rl_backward_word@@Base+0x114>
   35b30:	neg	w0, w19
   35b34:	bl	165f0 <rl_forward_word@plt>
   35b38:	ldp	x20, x19, [sp, #48]
   35b3c:	ldp	x22, x21, [sp, #32]
   35b40:	ldr	x23, [sp, #16]
   35b44:	mov	w0, wzr
   35b48:	ldp	x29, x30, [sp], #64
   35b4c:	ret

0000000000035b50 <rl_refresh_line@@Base>:
   35b50:	stp	x29, x30, [sp, #-16]!
   35b54:	mov	x29, sp
   35b58:	bl	16520 <_rl_current_display_line@plt>
   35b5c:	bl	176d0 <_rl_move_vert@plt>
   35b60:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35b64:	ldr	x8, [x8, #2480]
   35b68:	mov	w0, wzr
   35b6c:	ldr	x1, [x8]
   35b70:	bl	16500 <_rl_move_cursor_relative@plt>
   35b74:	mov	w0, wzr
   35b78:	bl	179c0 <_rl_clear_to_eol@plt>
   35b7c:	bl	17510 <rl_redraw_prompt_last_line@plt>
   35b80:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35b84:	ldr	x8, [x8, #3064]
   35b88:	mov	w9, #0x1                   	// #1
   35b8c:	mov	w0, wzr
   35b90:	str	w9, [x8]
   35b94:	ldp	x29, x30, [sp], #16
   35b98:	ret

0000000000035b9c <rl_clear_screen@@Base>:
   35b9c:	stp	x29, x30, [sp, #-16]!
   35ba0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ba4:	ldr	x8, [x8, #3792]
   35ba8:	mov	x29, sp
   35bac:	ldr	w8, [x8]
   35bb0:	cbz	w8, 35be0 <rl_clear_screen@@Base+0x44>
   35bb4:	bl	16520 <_rl_current_display_line@plt>
   35bb8:	bl	176d0 <_rl_move_vert@plt>
   35bbc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35bc0:	ldr	x8, [x8, #2480]
   35bc4:	mov	w0, wzr
   35bc8:	ldr	x1, [x8]
   35bcc:	bl	16500 <_rl_move_cursor_relative@plt>
   35bd0:	mov	w0, wzr
   35bd4:	bl	179c0 <_rl_clear_to_eol@plt>
   35bd8:	bl	17510 <rl_redraw_prompt_last_line@plt>
   35bdc:	b	35be8 <rl_clear_screen@@Base+0x4c>
   35be0:	bl	16a40 <_rl_clear_screen@plt>
   35be4:	bl	164d0 <rl_forced_update_display@plt>
   35be8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35bec:	ldr	x8, [x8, #3064]
   35bf0:	mov	w9, #0x1                   	// #1
   35bf4:	mov	w0, wzr
   35bf8:	str	w9, [x8]
   35bfc:	ldp	x29, x30, [sp], #16
   35c00:	ret

0000000000035c04 <rl_previous_screen_line@@Base>:
   35c04:	stp	x29, x30, [sp, #-16]!
   35c08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35c0c:	ldr	x8, [x8, #2240]
   35c10:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35c14:	mov	x29, sp
   35c18:	ldr	w8, [x8]
   35c1c:	ldr	x9, [x9, #3552]
   35c20:	cmp	w8, #0x0
   35c24:	ldr	w9, [x9]
   35c28:	cinc	w0, w9, eq  // eq = none
   35c2c:	bl	16f70 <rl_backward_char@plt>
   35c30:	mov	w0, wzr
   35c34:	ldp	x29, x30, [sp], #16
   35c38:	ret

0000000000035c3c <rl_next_screen_line@@Base>:
   35c3c:	stp	x29, x30, [sp, #-16]!
   35c40:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35c44:	ldr	x8, [x8, #2240]
   35c48:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35c4c:	mov	x29, sp
   35c50:	ldr	w8, [x8]
   35c54:	ldr	x9, [x9, #3552]
   35c58:	cmp	w8, #0x0
   35c5c:	ldr	w9, [x9]
   35c60:	cinc	w0, w9, eq  // eq = none
   35c64:	bl	16780 <rl_forward_char@plt>
   35c68:	mov	w0, wzr
   35c6c:	ldp	x29, x30, [sp], #16
   35c70:	ret

0000000000035c74 <rl_skip_csi_sequence@@Base>:
   35c74:	stp	x29, x30, [sp, #-32]!
   35c78:	str	x19, [sp, #16]
   35c7c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35c80:	ldr	x19, [x19, #2984]
   35c84:	mov	x29, sp
   35c88:	ldr	x8, [x19]
   35c8c:	orr	x8, x8, #0x40
   35c90:	str	x8, [x19]
   35c94:	bl	16e60 <rl_read_key@plt>
   35c98:	and	w8, w0, #0xffffffe0
   35c9c:	cmp	w8, #0x20
   35ca0:	b.eq	35c94 <rl_skip_csi_sequence@@Base+0x20>  // b.none
   35ca4:	ldr	x8, [x19]
   35ca8:	lsr	w0, w0, #31
   35cac:	and	x8, x8, #0xffffffffffffffbf
   35cb0:	str	x8, [x19]
   35cb4:	ldr	x19, [sp, #16]
   35cb8:	ldp	x29, x30, [sp], #32
   35cbc:	ret

0000000000035cc0 <rl_arrow_keys@@Base>:
   35cc0:	stp	x29, x30, [sp, #-48]!
   35cc4:	str	x21, [sp, #16]
   35cc8:	stp	x20, x19, [sp, #32]
   35ccc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35cd0:	ldr	x21, [x21, #2984]
   35cd4:	mov	x29, sp
   35cd8:	mov	w19, w0
   35cdc:	ldr	x8, [x21]
   35ce0:	orr	x8, x8, #0x40
   35ce4:	str	x8, [x21]
   35ce8:	bl	16e60 <rl_read_key@plt>
   35cec:	ldr	x8, [x21]
   35cf0:	and	x8, x8, #0xffffffffffffffbf
   35cf4:	str	x8, [x21]
   35cf8:	tbnz	w0, #31, 35d58 <rl_arrow_keys@@Base+0x98>
   35cfc:	mov	w20, w0
   35d00:	bl	17100 <__ctype_b_loc@plt>
   35d04:	ldr	x8, [x0]
   35d08:	and	w21, w20, #0xff
   35d0c:	ldrh	w9, [x8, w21, uxtw #1]
   35d10:	mov	w8, w20
   35d14:	tbz	w9, #9, 35d24 <rl_arrow_keys@@Base+0x64>
   35d18:	bl	16dc0 <__ctype_toupper_loc@plt>
   35d1c:	ldr	x8, [x0]
   35d20:	ldr	w8, [x8, x21, lsl #2]
   35d24:	sub	w8, w8, #0x41
   35d28:	cmp	w8, #0x3
   35d2c:	b.hi	35d60 <rl_arrow_keys@@Base+0xa0>  // b.pmore
   35d30:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   35d34:	add	x9, x9, #0xf1e
   35d38:	adr	x10, 35d48 <rl_arrow_keys@@Base+0x88>
   35d3c:	ldrb	w11, [x9, x8]
   35d40:	add	x10, x10, x11, lsl #2
   35d44:	br	x10
   35d48:	mov	w0, w19
   35d4c:	mov	w1, w20
   35d50:	bl	17030 <rl_get_previous_history@plt>
   35d54:	b	35f54 <rl_arrow_keys@@Base+0x294>
   35d58:	mov	w0, #0x1                   	// #1
   35d5c:	b	35f58 <rl_arrow_keys@@Base+0x298>
   35d60:	bl	17390 <rl_ding@plt>
   35d64:	b	35f54 <rl_arrow_keys@@Base+0x294>
   35d68:	mov	w0, w19
   35d6c:	mov	w1, w20
   35d70:	bl	17330 <rl_get_next_history@plt>
   35d74:	b	35f54 <rl_arrow_keys@@Base+0x294>
   35d78:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35d7c:	cmp	x0, #0x2
   35d80:	b.cc	35dd0 <rl_arrow_keys@@Base+0x110>  // b.lo, b.ul, b.last
   35d84:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35d88:	ldr	x8, [x8, #1896]
   35d8c:	ldr	w8, [x8]
   35d90:	cbnz	w8, 35dd0 <rl_arrow_keys@@Base+0x110>
   35d94:	mov	w0, w19
   35d98:	mov	w1, w20
   35d9c:	bl	16780 <rl_forward_char@plt>
   35da0:	b	35f54 <rl_arrow_keys@@Base+0x294>
   35da4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35da8:	cmp	x0, #0x2
   35dac:	b.cc	35e48 <rl_arrow_keys@@Base+0x188>  // b.lo, b.ul, b.last
   35db0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35db4:	ldr	x8, [x8, #1896]
   35db8:	ldr	w8, [x8]
   35dbc:	cbnz	w8, 35e48 <rl_arrow_keys@@Base+0x188>
   35dc0:	mov	w0, w19
   35dc4:	mov	w1, w20
   35dc8:	bl	16f70 <rl_backward_char@plt>
   35dcc:	b	35f54 <rl_arrow_keys@@Base+0x294>
   35dd0:	tbnz	w19, #31, 35e78 <rl_arrow_keys@@Base+0x1b8>
   35dd4:	cbz	w19, 35f20 <rl_arrow_keys@@Base+0x260>
   35dd8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ddc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35de0:	ldr	x8, [x8, #3512]
   35de4:	ldr	x9, [x9, #2656]
   35de8:	ldr	w10, [x8]
   35dec:	ldr	w9, [x9]
   35df0:	add	w10, w10, w19
   35df4:	cmp	w9, #0x1
   35df8:	b.lt	35e34 <rl_arrow_keys@@Base+0x174>  // b.tstop
   35dfc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35e00:	ldr	x11, [x11, #3416]
   35e04:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35e08:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35e0c:	ldr	w11, [x11]
   35e10:	ldr	x12, [x12, #1992]
   35e14:	cmp	w11, #0x0
   35e18:	ldr	x12, [x12]
   35e1c:	ldr	x13, [x13, #3824]
   35e20:	cset	w11, eq  // eq = none
   35e24:	cmp	x12, x13
   35e28:	cset	w12, eq  // eq = none
   35e2c:	and	w11, w11, w12
   35e30:	sub	w9, w9, w11
   35e34:	cmp	w10, w9
   35e38:	b.le	35f1c <rl_arrow_keys@@Base+0x25c>
   35e3c:	str	w9, [x8]
   35e40:	bl	17390 <rl_ding@plt>
   35e44:	b	35f20 <rl_arrow_keys@@Base+0x260>
   35e48:	tbnz	w19, #31, 35ea0 <rl_arrow_keys@@Base+0x1e0>
   35e4c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35e50:	ldr	x20, [x20, #3512]
   35e54:	cbz	w19, 35e6c <rl_arrow_keys@@Base+0x1ac>
   35e58:	ldr	w8, [x20]
   35e5c:	subs	w8, w8, w19
   35e60:	b.ge	35f3c <rl_arrow_keys@@Base+0x27c>  // b.tcont
   35e64:	str	wzr, [x20]
   35e68:	bl	17390 <rl_ding@plt>
   35e6c:	ldr	w8, [x20]
   35e70:	tbz	w8, #31, 35f54 <rl_arrow_keys@@Base+0x294>
   35e74:	b	35f70 <rl_arrow_keys@@Base+0x2b0>
   35e78:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35e7c:	ldr	x20, [x20, #3512]
   35e80:	neg	w9, w19
   35e84:	ldr	w8, [x20]
   35e88:	cmp	w8, w9
   35e8c:	b.ge	35f48 <rl_arrow_keys@@Base+0x288>  // b.tcont
   35e90:	str	wzr, [x20]
   35e94:	bl	17390 <rl_ding@plt>
   35e98:	ldr	w8, [x20]
   35e9c:	b	35f50 <rl_arrow_keys@@Base+0x290>
   35ea0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ea4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ea8:	ldr	x9, [x9, #3512]
   35eac:	ldr	x20, [x20, #2656]
   35eb0:	ldr	w10, [x9]
   35eb4:	ldr	w8, [x20]
   35eb8:	sub	w10, w10, w19
   35ebc:	cmp	w8, #0x1
   35ec0:	mov	w11, w8
   35ec4:	b.lt	35f00 <rl_arrow_keys@@Base+0x240>  // b.tstop
   35ec8:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ecc:	ldr	x11, [x11, #3416]
   35ed0:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ed4:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35ed8:	ldr	w11, [x11]
   35edc:	ldr	x12, [x12, #1992]
   35ee0:	cmp	w11, #0x0
   35ee4:	ldr	x12, [x12]
   35ee8:	ldr	x13, [x13, #3824]
   35eec:	cset	w11, eq  // eq = none
   35ef0:	cmp	x12, x13
   35ef4:	cset	w12, eq  // eq = none
   35ef8:	and	w11, w11, w12
   35efc:	sub	w11, w8, w11
   35f00:	cmp	w10, w11
   35f04:	b.le	35f68 <rl_arrow_keys@@Base+0x2a8>
   35f08:	str	w11, [x9]
   35f0c:	bl	17390 <rl_ding@plt>
   35f10:	ldr	w8, [x20]
   35f14:	tbz	w8, #31, 35f54 <rl_arrow_keys@@Base+0x294>
   35f18:	b	35f70 <rl_arrow_keys@@Base+0x2b0>
   35f1c:	str	w10, [x8]
   35f20:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35f24:	ldr	x8, [x8, #2656]
   35f28:	ldr	w9, [x8]
   35f2c:	tbz	w9, #31, 35f54 <rl_arrow_keys@@Base+0x294>
   35f30:	mov	w0, wzr
   35f34:	str	wzr, [x8]
   35f38:	b	35f58 <rl_arrow_keys@@Base+0x298>
   35f3c:	str	w8, [x20]
   35f40:	tbz	w8, #31, 35f54 <rl_arrow_keys@@Base+0x294>
   35f44:	b	35f70 <rl_arrow_keys@@Base+0x2b0>
   35f48:	add	w8, w8, w19
   35f4c:	str	w8, [x20]
   35f50:	tbnz	w8, #31, 35f70 <rl_arrow_keys@@Base+0x2b0>
   35f54:	mov	w0, wzr
   35f58:	ldp	x20, x19, [sp, #32]
   35f5c:	ldr	x21, [sp, #16]
   35f60:	ldp	x29, x30, [sp], #48
   35f64:	ret
   35f68:	str	w10, [x9]
   35f6c:	tbz	w8, #31, 35f54 <rl_arrow_keys@@Base+0x294>
   35f70:	mov	w0, wzr
   35f74:	str	wzr, [x20]
   35f78:	b	35f58 <rl_arrow_keys@@Base+0x298>

0000000000035f7c <_rl_insert_char@@Base>:
   35f7c:	sub	sp, sp, #0x70
   35f80:	cmp	w0, #0x1
   35f84:	stp	x29, x30, [sp, #32]
   35f88:	str	x25, [sp, #48]
   35f8c:	stp	x24, x23, [sp, #64]
   35f90:	stp	x22, x21, [sp, #80]
   35f94:	stp	x20, x19, [sp, #96]
   35f98:	add	x29, sp, #0x20
   35f9c:	b.lt	35fe8 <_rl_insert_char@@Base+0x6c>  // b.tstop
   35fa0:	mov	w20, w0
   35fa4:	mov	w19, w1
   35fa8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   35fac:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35fb0:	ldr	x21, [x21, #1896]
   35fb4:	cmp	x0, #0x1
   35fb8:	b.eq	35fd8 <_rl_insert_char@@Base+0x5c>  // b.none
   35fbc:	ldr	w8, [x21]
   35fc0:	cbnz	w8, 35fd8 <_rl_insert_char@@Base+0x5c>
   35fc4:	tbnz	w19, #7, 35ff0 <_rl_insert_char@@Base+0x74>
   35fc8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   35fcc:	ldr	x8, [x8, #3088]
   35fd0:	ldr	w8, [x8]
   35fd4:	cbz	w8, 35ff0 <_rl_insert_char@@Base+0x74>
   35fd8:	strb	w19, [sp, #12]
   35fdc:	strb	wzr, [sp, #13]
   35fe0:	mov	w22, #0x1                   	// #1
   35fe4:	b	3610c <_rl_insert_char@@Base+0x190>
   35fe8:	mov	w0, wzr
   35fec:	b	3626c <_rl_insert_char@@Base+0x2f0>
   35ff0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   35ff4:	ldr	w23, [x8, #136]
   35ff8:	cmp	w23, #0x0
   35ffc:	b.gt	36008 <_rl_insert_char@@Base+0x8c>
   36000:	mov	w23, w20
   36004:	str	w20, [x8, #136]
   36008:	adrp	x24, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3600c:	ldrsw	x8, [x24, #168]
   36010:	adrp	x3, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   36014:	add	x3, x3, #0x90
   36018:	adrp	x20, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3601c:	ldr	x22, [x3]
   36020:	add	x20, x20, #0x98
   36024:	add	x2, x8, #0x1
   36028:	add	x0, x29, #0x1c
   3602c:	mov	x1, x20
   36030:	str	w2, [x24, #168]
   36034:	strb	w19, [x20, x8]
   36038:	bl	16370 <mbrtowc@plt>
   3603c:	add	x8, x0, #0x2
   36040:	cmp	x8, #0x3
   36044:	b.hi	36070 <_rl_insert_char@@Base+0xf4>  // b.pmore
   36048:	adrp	x9, 3f000 <filename_completion_function@@Base+0x580>
   3604c:	add	x9, x9, #0xf22
   36050:	adr	x10, 36060 <_rl_insert_char@@Base+0xe4>
   36054:	ldrb	w11, [x9, x8]
   36058:	add	x10, x10, x11, lsl #2
   3605c:	br	x10
   36060:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   36064:	str	x22, [x8, #144]
   36068:	mov	w0, #0x1                   	// #1
   3606c:	b	3626c <_rl_insert_char@@Base+0x2f0>
   36070:	ldr	w22, [x24, #168]
   36074:	adrp	x1, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   36078:	add	x1, x1, #0x98
   3607c:	add	x0, sp, #0xc
   36080:	sxtw	x20, w22
   36084:	mov	x2, x20
   36088:	add	x25, sp, #0xc
   3608c:	bl	16380 <memcpy@plt>
   36090:	strb	wzr, [x25, x20]
   36094:	str	wzr, [x24, #168]
   36098:	b	36108 <_rl_insert_char@@Base+0x18c>
   3609c:	mov	x1, x20
   360a0:	ldrb	w8, [x1], #1
   360a4:	ldrsw	x9, [x24, #168]
   360a8:	mov	x0, x20
   360ac:	strb	wzr, [sp, #13]
   360b0:	strb	w8, [sp, #12]
   360b4:	sub	x2, x9, #0x1
   360b8:	str	w2, [x24, #168]
   360bc:	bl	163b0 <memmove@plt>
   360c0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   360c4:	str	xzr, [x8, #144]
   360c8:	mov	w22, #0x1                   	// #1
   360cc:	b	36108 <_rl_insert_char@@Base+0x18c>
   360d0:	ldr	w8, [x24, #168]
   360d4:	mov	w22, wzr
   360d8:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   360dc:	strb	wzr, [sp, #12]
   360e0:	sub	w8, w8, #0x1
   360e4:	str	w8, [x24, #168]
   360e8:	str	xzr, [x9, #144]
   360ec:	b	36108 <_rl_insert_char@@Base+0x18c>
   360f0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   360f4:	ldrb	w8, [x8, #152]
   360f8:	strb	wzr, [sp, #13]
   360fc:	str	wzr, [x24, #168]
   36100:	mov	w22, #0x1                   	// #1
   36104:	strb	w8, [sp, #12]
   36108:	mov	w20, w23
   3610c:	sub	w8, w20, #0x2
   36110:	cmp	w8, #0x3fe
   36114:	b.hi	361a0 <_rl_insert_char@@Base+0x224>  // b.pmore
   36118:	mul	w21, w20, w22
   3611c:	add	w8, w21, #0x1
   36120:	sxtw	x0, w8
   36124:	bl	16bf0 <xmalloc@plt>
   36128:	cmp	w21, #0x1
   3612c:	mov	x19, x0
   36130:	mov	w23, wzr
   36134:	b.lt	3617c <_rl_insert_char@@Base+0x200>  // b.tstop
   36138:	sxtw	x20, w22
   3613c:	b	3615c <_rl_insert_char@@Base+0x1e0>
   36140:	add	x0, x19, w23, sxtw
   36144:	add	x1, sp, #0xc
   36148:	mov	x2, x20
   3614c:	bl	17730 <strncpy@plt>
   36150:	add	w23, w23, w22
   36154:	cmp	w23, w21
   36158:	b.ge	3617c <_rl_insert_char@@Base+0x200>  // b.tcont
   3615c:	cmp	w22, #0x1
   36160:	b.ne	36140 <_rl_insert_char@@Base+0x1c4>  // b.any
   36164:	ldrb	w8, [sp, #12]
   36168:	add	w9, w23, #0x1
   3616c:	strb	w8, [x19, w23, sxtw]
   36170:	mov	w23, w9
   36174:	cmp	w23, w21
   36178:	b.lt	3615c <_rl_insert_char@@Base+0x1e0>  // b.tstop
   3617c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   36180:	mov	x0, x19
   36184:	str	wzr, [x8, #136]
   36188:	strb	wzr, [x19, w23, sxtw]
   3618c:	bl	16430 <rl_insert_text@plt>
   36190:	mov	x0, x19
   36194:	bl	169f0 <xfree@plt>
   36198:	mov	w0, wzr
   3619c:	b	3626c <_rl_insert_char@@Base+0x2f0>
   361a0:	cmp	w20, #0x401
   361a4:	b.lt	36244 <_rl_insert_char@@Base+0x2c8>  // b.tstop
   361a8:	mov	w8, #0x1                   	// #1
   361ac:	bfi	w8, w22, #10, #22
   361b0:	sxtw	x0, w8
   361b4:	bl	16bf0 <xmalloc@plt>
   361b8:	cmp	w22, #0x1
   361bc:	mov	x19, x0
   361c0:	b.lt	36214 <_rl_insert_char@@Base+0x298>  // b.tstop
   361c4:	mov	w24, wzr
   361c8:	lsl	w23, w22, #10
   361cc:	mov	w21, w22
   361d0:	b	361f0 <_rl_insert_char@@Base+0x274>
   361d4:	add	x0, x19, w24, sxtw
   361d8:	add	x1, sp, #0xc
   361dc:	mov	x2, x21
   361e0:	bl	17730 <strncpy@plt>
   361e4:	add	w24, w24, w22
   361e8:	cmp	w24, w23
   361ec:	b.ge	36210 <_rl_insert_char@@Base+0x294>  // b.tcont
   361f0:	cmp	w22, #0x1
   361f4:	b.ne	361d4 <_rl_insert_char@@Base+0x258>  // b.any
   361f8:	ldrb	w8, [sp, #12]
   361fc:	add	w9, w24, #0x1
   36200:	strb	w8, [x19, w24, sxtw]
   36204:	mov	w24, w9
   36208:	cmp	w24, w23
   3620c:	b.lt	361f0 <_rl_insert_char@@Base+0x274>  // b.tstop
   36210:	cbz	w20, 36238 <_rl_insert_char@@Base+0x2bc>
   36214:	cmp	w20, #0x400
   36218:	mov	w8, #0x400                 	// #1024
   3621c:	csel	w21, w20, w8, lt  // lt = tstop
   36220:	mul	w8, w21, w22
   36224:	mov	x0, x19
   36228:	strb	wzr, [x19, w8, sxtw]
   3622c:	bl	16430 <rl_insert_text@plt>
   36230:	subs	w20, w20, w21
   36234:	b.ne	36214 <_rl_insert_char@@Base+0x298>  // b.any
   36238:	mov	x0, x19
   3623c:	bl	169f0 <xfree@plt>
   36240:	b	36260 <_rl_insert_char@@Base+0x2e4>
   36244:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   36248:	cmp	x0, #0x1
   3624c:	b.eq	36288 <_rl_insert_char@@Base+0x30c>  // b.none
   36250:	ldr	w8, [x21]
   36254:	cbnz	w8, 36288 <_rl_insert_char@@Base+0x30c>
   36258:	add	x0, sp, #0xc
   3625c:	bl	16430 <rl_insert_text@plt>
   36260:	mov	w0, wzr
   36264:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   36268:	str	wzr, [x8, #136]
   3626c:	ldp	x20, x19, [sp, #96]
   36270:	ldp	x22, x21, [sp, #80]
   36274:	ldp	x24, x23, [sp, #64]
   36278:	ldr	x25, [sp, #48]
   3627c:	ldp	x29, x30, [sp, #32]
   36280:	add	sp, sp, #0x70
   36284:	ret
   36288:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3628c:	ldr	x8, [x8, #2984]
   36290:	ldrb	w8, [x8, #1]
   36294:	tbnz	w8, #3, 362b0 <_rl_insert_char@@Base+0x334>
   36298:	bl	17290 <_rl_pushed_input_available@plt>
   3629c:	cbz	w0, 362b0 <_rl_insert_char@@Base+0x334>
   362a0:	mov	w0, w19
   362a4:	bl	16ab0 <_rl_insert_typein@plt>
   362a8:	mov	w0, wzr
   362ac:	b	3626c <_rl_insert_char@@Base+0x2f0>
   362b0:	add	x0, x29, #0x1c
   362b4:	strb	wzr, [x29, #29]
   362b8:	strb	w19, [x29, #28]
   362bc:	bl	16430 <rl_insert_text@plt>
   362c0:	mov	w0, wzr
   362c4:	b	3626c <_rl_insert_char@@Base+0x2f0>

00000000000362c8 <_rl_overwrite_char@@Base>:
   362c8:	sub	sp, sp, #0x50
   362cc:	cmp	w0, #0x1
   362d0:	stp	x29, x30, [sp, #16]
   362d4:	str	x23, [sp, #32]
   362d8:	stp	x22, x21, [sp, #48]
   362dc:	stp	x20, x19, [sp, #64]
   362e0:	add	x29, sp, #0x10
   362e4:	b.lt	36388 <_rl_overwrite_char@@Base+0xc0>  // b.tstop
   362e8:	mov	w19, w0
   362ec:	mov	w20, w1
   362f0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   362f4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   362f8:	ldr	x21, [x21, #1896]
   362fc:	cmp	x0, #0x2
   36300:	b.cc	3631c <_rl_overwrite_char@@Base+0x54>  // b.lo, b.ul, b.last
   36304:	ldr	w8, [x21]
   36308:	cbnz	w8, 3631c <_rl_overwrite_char@@Base+0x54>
   3630c:	mov	x1, sp
   36310:	mov	w2, #0x10                  	// #16
   36314:	mov	w0, w20
   36318:	bl	16700 <_rl_read_mbstring@plt>
   3631c:	bl	16400 <rl_begin_undo_group@plt>
   36320:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36324:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36328:	ldr	x22, [x22, #3512]
   3632c:	ldr	x23, [x23, #2656]
   36330:	b	3633c <_rl_overwrite_char@@Base+0x74>
   36334:	subs	w19, w19, #0x1
   36338:	b.eq	3638c <_rl_overwrite_char@@Base+0xc4>  // b.none
   3633c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   36340:	cmp	x0, #0x2
   36344:	b.cc	3635c <_rl_overwrite_char@@Base+0x94>  // b.lo, b.ul, b.last
   36348:	ldr	w8, [x21]
   3634c:	cbnz	w8, 3635c <_rl_overwrite_char@@Base+0x94>
   36350:	mov	x0, sp
   36354:	bl	16430 <rl_insert_text@plt>
   36358:	b	36368 <_rl_overwrite_char@@Base+0xa0>
   3635c:	mov	w0, #0x1                   	// #1
   36360:	mov	w1, w20
   36364:	bl	16d40 <_rl_insert_char@plt>
   36368:	ldr	w8, [x22]
   3636c:	ldr	w9, [x23]
   36370:	cmp	w8, w9
   36374:	b.ge	36334 <_rl_overwrite_char@@Base+0x6c>  // b.tcont
   36378:	mov	w0, #0x1                   	// #1
   3637c:	mov	w1, w20
   36380:	bl	16b00 <rl_delete@plt>
   36384:	b	36334 <_rl_overwrite_char@@Base+0x6c>
   36388:	bl	16400 <rl_begin_undo_group@plt>
   3638c:	bl	17830 <rl_end_undo_group@plt>
   36390:	ldp	x20, x19, [sp, #64]
   36394:	ldp	x22, x21, [sp, #48]
   36398:	ldr	x23, [sp, #32]
   3639c:	ldp	x29, x30, [sp, #16]
   363a0:	mov	w0, wzr
   363a4:	add	sp, sp, #0x50
   363a8:	ret

00000000000363ac <rl_delete@@Base>:
   363ac:	stp	x29, x30, [sp, #-64]!
   363b0:	stp	x22, x21, [sp, #32]
   363b4:	stp	x20, x19, [sp, #48]
   363b8:	mov	w21, w1
   363bc:	mov	w20, w0
   363c0:	stp	x24, x23, [sp, #16]
   363c4:	mov	x29, sp
   363c8:	tbnz	w0, #31, 363f8 <rl_delete@@Base+0x4c>
   363cc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   363d0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   363d4:	ldr	x22, [x22, #3512]
   363d8:	ldr	x23, [x23, #2656]
   363dc:	ldr	w19, [x22]
   363e0:	ldr	w8, [x23]
   363e4:	cmp	w19, w8
   363e8:	b.ne	36414 <rl_delete@@Base+0x68>  // b.any
   363ec:	bl	17390 <rl_ding@plt>
   363f0:	mov	w0, #0x1                   	// #1
   363f4:	b	36530 <rl_delete@@Base+0x184>
   363f8:	neg	w0, w20
   363fc:	mov	w1, w21
   36400:	ldp	x20, x19, [sp, #48]
   36404:	ldp	x22, x21, [sp, #32]
   36408:	ldp	x24, x23, [sp, #16]
   3640c:	ldp	x29, x30, [sp], #64
   36410:	b	17670 <_rl_rubout_char@plt>
   36414:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36418:	ldr	x8, [x8, #3792]
   3641c:	ldr	w24, [x8]
   36420:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   36424:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36428:	ldr	x8, [x8, #1896]
   3642c:	cmp	x0, #0x1
   36430:	cset	w9, hi  // hi = pmore
   36434:	ldr	w8, [x8]
   36438:	cmp	w8, #0x0
   3643c:	cset	w8, eq  // eq = none
   36440:	cmp	w20, #0x1
   36444:	and	w8, w9, w8
   36448:	b.gt	3647c <rl_delete@@Base+0xd0>
   3644c:	cbnz	w24, 3647c <rl_delete@@Base+0xd0>
   36450:	cbz	w8, 36490 <rl_delete@@Base+0xe4>
   36454:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36458:	ldr	x8, [x8, #2480]
   3645c:	ldr	w1, [x22]
   36460:	mov	w2, #0x1                   	// #1
   36464:	mov	w3, #0x1                   	// #1
   36468:	ldr	x0, [x8]
   3646c:	bl	16c00 <_rl_find_next_mbchar@plt>
   36470:	ldr	w8, [x22]
   36474:	mov	w1, w0
   36478:	b	36498 <rl_delete@@Base+0xec>
   3647c:	cbz	w8, 364a8 <rl_delete@@Base+0xfc>
   36480:	mov	w0, w20
   36484:	mov	w1, w21
   36488:	bl	16780 <rl_forward_char@plt>
   3648c:	b	3651c <rl_delete@@Base+0x170>
   36490:	ldr	w8, [x22]
   36494:	add	w1, w8, #0x1
   36498:	mov	w0, w8
   3649c:	bl	171c0 <rl_delete_text@plt>
   364a0:	mov	w0, wzr
   364a4:	b	36530 <rl_delete@@Base+0x184>
   364a8:	cbz	w20, 36510 <rl_delete@@Base+0x164>
   364ac:	ldr	w8, [x23]
   364b0:	ldr	w9, [x22]
   364b4:	cmp	w8, #0x1
   364b8:	add	w9, w9, w20
   364bc:	b.lt	364f8 <rl_delete@@Base+0x14c>  // b.tstop
   364c0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   364c4:	ldr	x10, [x10, #3416]
   364c8:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   364cc:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   364d0:	ldr	w10, [x10]
   364d4:	ldr	x11, [x11, #1992]
   364d8:	cmp	w10, #0x0
   364dc:	ldr	x11, [x11]
   364e0:	ldr	x12, [x12, #3824]
   364e4:	cset	w10, eq  // eq = none
   364e8:	cmp	x11, x12
   364ec:	cset	w11, eq  // eq = none
   364f0:	and	w10, w10, w11
   364f4:	sub	w8, w8, w10
   364f8:	cmp	w9, w8
   364fc:	b.le	3650c <rl_delete@@Base+0x160>
   36500:	str	w8, [x22]
   36504:	bl	17390 <rl_ding@plt>
   36508:	b	36510 <rl_delete@@Base+0x164>
   3650c:	str	w9, [x22]
   36510:	ldr	w8, [x23]
   36514:	tbz	w8, #31, 3651c <rl_delete@@Base+0x170>
   36518:	str	wzr, [x23]
   3651c:	ldr	w1, [x22]
   36520:	mov	w0, w19
   36524:	bl	16cb0 <rl_kill_text@plt>
   36528:	mov	w0, wzr
   3652c:	str	w19, [x22]
   36530:	ldp	x20, x19, [sp, #48]
   36534:	ldp	x22, x21, [sp, #32]
   36538:	ldp	x24, x23, [sp, #16]
   3653c:	ldp	x29, x30, [sp], #64
   36540:	ret

0000000000036544 <rl_insert@@Base>:
   36544:	stp	x29, x30, [sp, #-96]!
   36548:	stp	x28, x27, [sp, #16]
   3654c:	stp	x26, x25, [sp, #32]
   36550:	stp	x24, x23, [sp, #48]
   36554:	stp	x22, x21, [sp, #64]
   36558:	stp	x20, x19, [sp, #80]
   3655c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36560:	ldr	x21, [x21, #3976]
   36564:	mov	x29, sp
   36568:	ldr	w8, [x21]
   3656c:	cmp	w8, #0x1
   36570:	b.ne	36580 <rl_insert@@Base+0x3c>  // b.any
   36574:	bl	16d40 <_rl_insert_char@plt>
   36578:	mov	w19, w0
   3657c:	b	36588 <rl_insert@@Base+0x44>
   36580:	bl	16ed0 <_rl_overwrite_char@plt>
   36584:	mov	w19, wzr
   36588:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3658c:	ldr	x22, [x22, #3136]
   36590:	ldr	w8, [x22]
   36594:	cbz	w8, 36688 <rl_insert@@Base+0x144>
   36598:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3659c:	ldr	x24, [x24, #2472]
   365a0:	ldr	w8, [x24]
   365a4:	cbnz	w8, 36688 <rl_insert@@Base+0x144>
   365a8:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   365ac:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   365b0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   365b4:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   365b8:	ldr	x25, [x25, #2984]
   365bc:	ldr	x27, [x27, #1992]
   365c0:	ldr	x23, [x23, #2552]
   365c4:	ldr	x28, [x28, #3296]
   365c8:	mov	w26, #0x800                 	// #2048
   365cc:	movk	w26, #0x2, lsl #16
   365d0:	ldr	w8, [x25]
   365d4:	tst	w8, w26
   365d8:	b.ne	36688 <rl_insert@@Base+0x144>  // b.any
   365dc:	bl	17290 <_rl_pushed_input_available@plt>
   365e0:	cbnz	w0, 36688 <rl_insert@@Base+0x144>
   365e4:	bl	16cd0 <_rl_input_queued@plt>
   365e8:	cbz	w0, 36688 <rl_insert@@Base+0x144>
   365ec:	bl	16e60 <rl_read_key@plt>
   365f0:	mov	w20, w0
   365f4:	cmp	w0, #0x1
   365f8:	b.lt	366a8 <rl_insert@@Base+0x164>  // b.tstop
   365fc:	ldr	x8, [x27]
   36600:	and	w9, w20, #0xff
   36604:	lsl	x10, x9, #4
   36608:	ldrb	w10, [x8, x10]
   3660c:	cbnz	w10, 3667c <rl_insert@@Base+0x138>
   36610:	add	x8, x8, x9, lsl #4
   36614:	ldr	x8, [x8, #8]
   36618:	cmp	x8, x23
   3661c:	b.ne	3667c <rl_insert@@Base+0x138>  // b.any
   36620:	ldr	w8, [x21]
   36624:	mov	w0, #0x1                   	// #1
   36628:	cmp	w8, #0x1
   3662c:	b.ne	36648 <rl_insert@@Base+0x104>  // b.any
   36630:	mov	w1, w20
   36634:	mov	w19, #0x1                   	// #1
   36638:	bl	16d40 <_rl_insert_char@plt>
   3663c:	cmp	w0, #0x1
   36640:	b.ne	36654 <rl_insert@@Base+0x110>  // b.any
   36644:	b	36668 <rl_insert@@Base+0x124>
   36648:	mov	w1, w20
   3664c:	bl	16ed0 <_rl_overwrite_char@plt>
   36650:	mov	w0, wzr
   36654:	ldr	w8, [x28]
   36658:	mov	w19, w0
   3665c:	orr	w8, w8, w0
   36660:	cbnz	w8, 36688 <rl_insert@@Base+0x144>
   36664:	mov	w19, wzr
   36668:	ldr	w8, [x22]
   3666c:	cbz	w8, 36688 <rl_insert@@Base+0x144>
   36670:	ldr	w8, [x24]
   36674:	cbz	w8, 365d0 <rl_insert@@Base+0x8c>
   36678:	b	36688 <rl_insert@@Base+0x144>
   3667c:	mov	w8, #0xfffe                	// #65534
   36680:	cmp	w20, w8
   36684:	b.ne	366a8 <rl_insert@@Base+0x164>  // b.any
   36688:	mov	w0, w19
   3668c:	ldp	x20, x19, [sp, #80]
   36690:	ldp	x22, x21, [sp, #64]
   36694:	ldp	x24, x23, [sp, #48]
   36698:	ldp	x26, x25, [sp, #32]
   3669c:	ldp	x28, x27, [sp, #16]
   366a0:	ldp	x29, x30, [sp], #96
   366a4:	ret
   366a8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   366ac:	ldr	x8, [x8, #2072]
   366b0:	str	x23, [x8]
   366b4:	bl	17500 <_rl_reset_argument@plt>
   366b8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   366bc:	ldr	x8, [x8, #2888]
   366c0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   366c4:	mov	w0, w20
   366c8:	ldr	x8, [x8]
   366cc:	ldr	x9, [x9, #3144]
   366d0:	str	wzr, [x9]
   366d4:	strb	wzr, [x8]
   366d8:	ldp	x20, x19, [sp, #80]
   366dc:	ldp	x22, x21, [sp, #64]
   366e0:	ldp	x24, x23, [sp, #48]
   366e4:	ldp	x26, x25, [sp, #32]
   366e8:	ldp	x28, x27, [sp, #16]
   366ec:	ldp	x29, x30, [sp], #96
   366f0:	b	16b90 <rl_execute_next@plt>

00000000000366f4 <rl_quoted_insert@@Base>:
   366f4:	stp	x29, x30, [sp, #-48]!
   366f8:	str	x21, [sp, #16]
   366fc:	stp	x20, x19, [sp, #32]
   36700:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36704:	ldr	x21, [x21, #2984]
   36708:	mov	w20, w0
   3670c:	mov	x29, sp
   36710:	ldr	x8, [x21]
   36714:	tbnz	w8, #19, 36720 <rl_quoted_insert@@Base+0x2c>
   36718:	bl	17470 <_rl_disable_tty_signals@plt>
   3671c:	ldr	x8, [x21]
   36720:	tbnz	w8, #19, 36778 <rl_quoted_insert@@Base+0x84>
   36724:	orr	x8, x8, #0x40
   36728:	str	x8, [x21]
   3672c:	bl	16e60 <rl_read_key@plt>
   36730:	ldr	x9, [x21]
   36734:	mov	w19, w0
   36738:	and	x8, x9, #0xffffffffffffffbf
   3673c:	str	x8, [x21]
   36740:	tbnz	w20, #31, 367ac <rl_quoted_insert@@Base+0xb8>
   36744:	tbnz	w19, #31, 3680c <rl_quoted_insert@@Base+0x118>
   36748:	tbz	w9, #12, 36758 <rl_quoted_insert@@Base+0x64>
   3674c:	mov	w0, w19
   36750:	bl	167c0 <_rl_add_macro_char@plt>
   36754:	ldr	x8, [x21]
   36758:	tbnz	w8, #19, 36760 <rl_quoted_insert@@Base+0x6c>
   3675c:	bl	176a0 <_rl_restore_tty_signals@plt>
   36760:	mov	w0, w20
   36764:	mov	w1, w19
   36768:	ldp	x20, x19, [sp, #32]
   3676c:	ldr	x21, [sp, #16]
   36770:	ldp	x29, x30, [sp], #48
   36774:	b	16d40 <_rl_insert_char@plt>
   36778:	mov	w0, w20
   3677c:	bl	17700 <_rl_callback_data_alloc@plt>
   36780:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36784:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36788:	ldr	x9, [x9, #2032]
   3678c:	ldr	x10, [x10, #4016]
   36790:	adrp	x11, 36000 <_rl_insert_char@@Base+0x84>
   36794:	mov	x8, x0
   36798:	mov	w0, wzr
   3679c:	add	x11, x11, #0x828
   367a0:	str	x8, [x9]
   367a4:	str	x11, [x10]
   367a8:	b	36810 <rl_quoted_insert@@Base+0x11c>
   367ac:	tbnz	w19, #31, 3680c <rl_quoted_insert@@Base+0x118>
   367b0:	sub	w20, w20, #0x1
   367b4:	tbz	w9, #12, 367c4 <rl_quoted_insert@@Base+0xd0>
   367b8:	mov	w0, w19
   367bc:	bl	167c0 <_rl_add_macro_char@plt>
   367c0:	ldr	x8, [x21]
   367c4:	tbnz	w8, #19, 367cc <rl_quoted_insert@@Base+0xd8>
   367c8:	bl	176a0 <_rl_restore_tty_signals@plt>
   367cc:	mov	w0, #0x1                   	// #1
   367d0:	mov	w1, w19
   367d4:	bl	16d40 <_rl_insert_char@plt>
   367d8:	cbnz	w0, 36810 <rl_quoted_insert@@Base+0x11c>
   367dc:	add	w20, w20, #0x1
   367e0:	cmn	w20, #0x2
   367e4:	b.gt	36820 <rl_quoted_insert@@Base+0x12c>
   367e8:	ldr	x8, [x21]
   367ec:	orr	x8, x8, #0x40
   367f0:	str	x8, [x21]
   367f4:	bl	16e60 <rl_read_key@plt>
   367f8:	ldr	x9, [x21]
   367fc:	mov	w19, w0
   36800:	and	x8, x9, #0xffffffffffffffbf
   36804:	str	x8, [x21]
   36808:	tbz	w0, #31, 367b4 <rl_quoted_insert@@Base+0xc0>
   3680c:	mov	w0, #0x1                   	// #1
   36810:	ldp	x20, x19, [sp, #32]
   36814:	ldr	x21, [sp, #16]
   36818:	ldp	x29, x30, [sp], #48
   3681c:	ret
   36820:	mov	w0, wzr
   36824:	b	36810 <rl_quoted_insert@@Base+0x11c>
   36828:	stp	x29, x30, [sp, #-48]!
   3682c:	stp	x20, x19, [sp, #32]
   36830:	ldr	w20, [x0]
   36834:	str	x21, [sp, #16]
   36838:	mov	x29, sp
   3683c:	tbnz	w20, #31, 368bc <rl_quoted_insert@@Base+0x1c8>
   36840:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36844:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36848:	ldr	x8, [x8, #4016]
   3684c:	ldr	x9, [x9, #1976]
   36850:	mov	w10, #0x1                   	// #1
   36854:	str	xzr, [x8]
   36858:	str	w10, [x9]
   3685c:	cbz	w20, 36934 <rl_quoted_insert@@Base+0x240>
   36860:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36864:	ldr	x21, [x21, #2984]
   36868:	ldr	x8, [x21]
   3686c:	orr	x8, x8, #0x40
   36870:	str	x8, [x21]
   36874:	bl	16e60 <rl_read_key@plt>
   36878:	ldr	x9, [x21]
   3687c:	and	x8, x9, #0xffffffffffffffbf
   36880:	str	x8, [x21]
   36884:	tbnz	w0, #31, 3693c <rl_quoted_insert@@Base+0x248>
   36888:	mov	w19, w0
   3688c:	tbz	w9, #12, 3689c <rl_quoted_insert@@Base+0x1a8>
   36890:	mov	w0, w19
   36894:	bl	167c0 <_rl_add_macro_char@plt>
   36898:	ldr	x8, [x21]
   3689c:	tbnz	w8, #19, 368a4 <rl_quoted_insert@@Base+0x1b0>
   368a0:	bl	176a0 <_rl_restore_tty_signals@plt>
   368a4:	mov	w0, w20
   368a8:	mov	w1, w19
   368ac:	ldp	x20, x19, [sp, #32]
   368b0:	ldr	x21, [sp, #16]
   368b4:	ldp	x29, x30, [sp], #48
   368b8:	b	16d40 <_rl_insert_char@plt>
   368bc:	add	w8, w20, #0x1
   368c0:	str	w8, [x0]
   368c4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   368c8:	ldr	x21, [x21, #2984]
   368cc:	mov	x19, x0
   368d0:	ldr	x8, [x21]
   368d4:	orr	x8, x8, #0x40
   368d8:	str	x8, [x21]
   368dc:	bl	16e60 <rl_read_key@plt>
   368e0:	ldr	x9, [x21]
   368e4:	and	x8, x9, #0xffffffffffffffbf
   368e8:	str	x8, [x21]
   368ec:	tbnz	w0, #31, 36944 <rl_quoted_insert@@Base+0x250>
   368f0:	mov	w20, w0
   368f4:	tbz	w9, #12, 36904 <rl_quoted_insert@@Base+0x210>
   368f8:	mov	w0, w20
   368fc:	bl	167c0 <_rl_add_macro_char@plt>
   36900:	ldr	x8, [x21]
   36904:	tbnz	w8, #19, 3690c <rl_quoted_insert@@Base+0x218>
   36908:	bl	176a0 <_rl_restore_tty_signals@plt>
   3690c:	mov	w0, #0x1                   	// #1
   36910:	mov	w1, w20
   36914:	mov	w21, #0x1                   	// #1
   36918:	bl	16d40 <_rl_insert_char@plt>
   3691c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36920:	ldr	x8, [x8, #1976]
   36924:	str	w21, [x8]
   36928:	cbnz	w0, 36954 <rl_quoted_insert@@Base+0x260>
   3692c:	ldr	w8, [x19]
   36930:	tbz	w8, #31, 36954 <rl_quoted_insert@@Base+0x260>
   36934:	mov	w0, wzr
   36938:	b	36970 <rl_quoted_insert@@Base+0x27c>
   3693c:	mov	w0, #0x1                   	// #1
   36940:	b	36970 <rl_quoted_insert@@Base+0x27c>
   36944:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36948:	ldr	x8, [x8, #1976]
   3694c:	mov	w0, #0x1                   	// #1
   36950:	str	w0, [x8]
   36954:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36958:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3695c:	ldr	x8, [x8, #4016]
   36960:	ldr	x9, [x9, #1976]
   36964:	mov	w10, #0x1                   	// #1
   36968:	str	xzr, [x8]
   3696c:	str	w10, [x9]
   36970:	ldp	x20, x19, [sp, #32]
   36974:	ldr	x21, [sp, #16]
   36978:	ldp	x29, x30, [sp], #48
   3697c:	ret

0000000000036980 <rl_tab_insert@@Base>:
   36980:	mov	w1, #0x9                   	// #9
   36984:	b	16d40 <_rl_insert_char@plt>

0000000000036988 <rl_newline@@Base>:
   36988:	stp	x29, x30, [sp, #-32]!
   3698c:	stp	x20, x19, [sp, #16]
   36990:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36994:	ldr	x8, [x8, #3296]
   36998:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3699c:	ldr	x9, [x9, #3128]
   369a0:	mov	w10, #0x1                   	// #1
   369a4:	str	w10, [x8]
   369a8:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   369ac:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   369b0:	ldr	w9, [x9]
   369b4:	ldr	x19, [x19, #3512]
   369b8:	ldr	x20, [x20, #2656]
   369bc:	mov	x29, sp
   369c0:	cbz	w9, 369e0 <rl_newline@@Base+0x58>
   369c4:	ldr	w8, [x19]
   369c8:	ldr	w9, [x20]
   369cc:	cmp	w8, w9
   369d0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   369d4:	ldr	x9, [x9, #3528]
   369d8:	csinv	w8, w8, wzr, ne  // ne = any
   369dc:	str	w8, [x9]
   369e0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   369e4:	ldr	x8, [x8, #2984]
   369e8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   369ec:	ldr	x9, [x8]
   369f0:	ldr	x10, [x10, #3416]
   369f4:	orr	x9, x9, #0x2000000
   369f8:	ldr	w10, [x10]
   369fc:	str	x9, [x8]
   36a00:	cbnz	w10, 36a20 <rl_newline@@Base+0x98>
   36a04:	bl	17760 <_rl_vi_done_inserting@plt>
   36a08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36a0c:	ldr	x8, [x8, #3640]
   36a10:	ldr	w0, [x8]
   36a14:	bl	17870 <_rl_vi_textmod_command@plt>
   36a18:	cbnz	w0, 36a20 <rl_newline@@Base+0x98>
   36a1c:	bl	17970 <_rl_vi_reset_last@plt>
   36a20:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36a24:	ldr	x8, [x8, #2624]
   36a28:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36a2c:	ldr	w9, [x19]
   36a30:	ldr	w10, [x20]
   36a34:	ldr	w8, [x8]
   36a38:	ldr	x11, [x11, #2944]
   36a3c:	orr	w9, w10, w9
   36a40:	cmp	w8, #0x0
   36a44:	ldr	w11, [x11]
   36a48:	cset	w8, ne  // ne = any
   36a4c:	cmp	w9, #0x0
   36a50:	cset	w9, eq  // eq = none
   36a54:	cbz	w11, 36a64 <rl_newline@@Base+0xdc>
   36a58:	and	w8, w8, w9
   36a5c:	tbnz	w8, #0, 36a64 <rl_newline@@Base+0xdc>
   36a60:	bl	16ef0 <_rl_update_final@plt>
   36a64:	ldp	x20, x19, [sp, #16]
   36a68:	mov	w0, wzr
   36a6c:	ldp	x29, x30, [sp], #32
   36a70:	ret

0000000000036a74 <rl_do_lowercase_version@@Base>:
   36a74:	mov	w0, wzr
   36a78:	ret

0000000000036a7c <_rl_overwrite_rubout@@Base>:
   36a7c:	stp	x29, x30, [sp, #-80]!
   36a80:	str	x25, [sp, #16]
   36a84:	stp	x24, x23, [sp, #32]
   36a88:	stp	x22, x21, [sp, #48]
   36a8c:	stp	x20, x19, [sp, #64]
   36a90:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36a94:	ldr	x23, [x23, #3512]
   36a98:	mov	x29, sp
   36a9c:	ldr	w20, [x23]
   36aa0:	cbz	w20, 36af0 <_rl_overwrite_rubout@@Base+0x74>
   36aa4:	mov	w21, w0
   36aa8:	cmp	w0, #0x1
   36aac:	b.lt	36afc <_rl_overwrite_rubout@@Base+0x80>  // b.tstop
   36ab0:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36ab4:	ldr	x24, [x24, #2480]
   36ab8:	mov	w22, w1
   36abc:	mov	w19, wzr
   36ac0:	mov	w25, w21
   36ac4:	mov	w0, #0x1                   	// #1
   36ac8:	mov	w1, w22
   36acc:	bl	16f70 <rl_backward_char@plt>
   36ad0:	ldr	x8, [x24]
   36ad4:	ldrsw	x1, [x23]
   36ad8:	ldrb	w0, [x8, x1]
   36adc:	bl	172c0 <rl_character_len@plt>
   36ae0:	subs	w25, w25, #0x1
   36ae4:	add	w19, w0, w19
   36ae8:	b.ne	36ac4 <_rl_overwrite_rubout@@Base+0x48>  // b.any
   36aec:	b	36b00 <_rl_overwrite_rubout@@Base+0x84>
   36af0:	bl	17390 <rl_ding@plt>
   36af4:	mov	w0, #0x1                   	// #1
   36af8:	b	36b64 <_rl_overwrite_rubout@@Base+0xe8>
   36afc:	mov	w19, wzr
   36b00:	bl	16400 <rl_begin_undo_group@plt>
   36b04:	ldr	w1, [x23]
   36b08:	cmp	w21, #0x1
   36b0c:	b.gt	36b2c <_rl_overwrite_rubout@@Base+0xb0>
   36b10:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36b14:	ldr	x8, [x8, #3792]
   36b18:	ldr	w8, [x8]
   36b1c:	cbnz	w8, 36b2c <_rl_overwrite_rubout@@Base+0xb0>
   36b20:	mov	w0, w20
   36b24:	bl	171c0 <rl_delete_text@plt>
   36b28:	b	36b34 <_rl_overwrite_rubout@@Base+0xb8>
   36b2c:	mov	w0, w20
   36b30:	bl	16cb0 <rl_kill_text@plt>
   36b34:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36b38:	ldr	w20, [x23]
   36b3c:	ldr	x8, [x8, #2656]
   36b40:	ldr	w8, [x8]
   36b44:	cmp	w20, w8
   36b48:	b.ge	36b5c <_rl_overwrite_rubout@@Base+0xe0>  // b.tcont
   36b4c:	mov	w1, #0x20                  	// #32
   36b50:	mov	w0, w19
   36b54:	bl	16d40 <_rl_insert_char@plt>
   36b58:	str	w20, [x23]
   36b5c:	bl	17830 <rl_end_undo_group@plt>
   36b60:	mov	w0, wzr
   36b64:	ldp	x20, x19, [sp, #64]
   36b68:	ldp	x22, x21, [sp, #48]
   36b6c:	ldp	x24, x23, [sp, #32]
   36b70:	ldr	x25, [sp, #16]
   36b74:	ldp	x29, x30, [sp], #80
   36b78:	ret

0000000000036b7c <rl_rubout@@Base>:
   36b7c:	stp	x29, x30, [sp, #-16]!
   36b80:	mov	x29, sp
   36b84:	tbnz	w0, #31, 36bb0 <rl_rubout@@Base+0x34>
   36b88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36b8c:	ldr	x8, [x8, #3512]
   36b90:	ldr	w8, [x8]
   36b94:	cbz	w8, 36bbc <rl_rubout@@Base+0x40>
   36b98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36b9c:	ldr	x8, [x8, #3976]
   36ba0:	ldr	w8, [x8]
   36ba4:	cbz	w8, 36bcc <rl_rubout@@Base+0x50>
   36ba8:	ldp	x29, x30, [sp], #16
   36bac:	b	17670 <_rl_rubout_char@plt>
   36bb0:	neg	w0, w0
   36bb4:	ldp	x29, x30, [sp], #16
   36bb8:	b	16b00 <rl_delete@plt>
   36bbc:	bl	17390 <rl_ding@plt>
   36bc0:	mov	w0, #0x1                   	// #1
   36bc4:	ldp	x29, x30, [sp], #16
   36bc8:	ret
   36bcc:	ldp	x29, x30, [sp], #16
   36bd0:	b	17090 <_rl_overwrite_rubout@plt>

0000000000036bd4 <_rl_rubout_char@@Base>:
   36bd4:	tbnz	w0, #31, 36c58 <_rl_rubout_char@@Base+0x84>
   36bd8:	stp	x29, x30, [sp, #-48]!
   36bdc:	str	x21, [sp, #16]
   36be0:	stp	x20, x19, [sp, #32]
   36be4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36be8:	ldr	x21, [x21, #3512]
   36bec:	mov	x29, sp
   36bf0:	ldr	w19, [x21]
   36bf4:	cbz	w19, 36c60 <_rl_rubout_char@@Base+0x8c>
   36bf8:	cmp	w0, #0x1
   36bfc:	b.gt	36c6c <_rl_rubout_char@@Base+0x98>
   36c00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36c04:	ldr	x8, [x8, #3792]
   36c08:	ldr	w8, [x8]
   36c0c:	cbnz	w8, 36c6c <_rl_rubout_char@@Base+0x98>
   36c10:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   36c14:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36c18:	ldr	x8, [x8, #2480]
   36c1c:	ldrsw	x1, [x21]
   36c20:	cmp	x0, #0x1
   36c24:	ldr	x8, [x8]
   36c28:	b.eq	36c80 <_rl_rubout_char@@Base+0xac>  // b.none
   36c2c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36c30:	ldr	x9, [x9, #1896]
   36c34:	ldr	w9, [x9]
   36c38:	cbnz	w9, 36c80 <_rl_rubout_char@@Base+0xac>
   36c3c:	mov	w2, #0x1                   	// #1
   36c40:	mov	x0, x8
   36c44:	bl	16c20 <_rl_find_prev_mbchar@plt>
   36c48:	mov	w1, w19
   36c4c:	str	w0, [x21]
   36c50:	bl	171c0 <rl_delete_text@plt>
   36c54:	b	36ce0 <_rl_rubout_char@@Base+0x10c>
   36c58:	neg	w0, w0
   36c5c:	b	16b00 <rl_delete@plt>
   36c60:	bl	17390 <rl_ding@plt>
   36c64:	mov	w0, #0x1                   	// #1
   36c68:	b	36ce4 <_rl_rubout_char@@Base+0x110>
   36c6c:	bl	16f70 <rl_backward_char@plt>
   36c70:	ldr	w1, [x21]
   36c74:	mov	w0, w19
   36c78:	bl	16cb0 <rl_kill_text@plt>
   36c7c:	b	36ce0 <_rl_rubout_char@@Base+0x10c>
   36c80:	sub	x0, x1, #0x1
   36c84:	str	w0, [x21]
   36c88:	ldrb	w20, [x8, x0]
   36c8c:	mov	w1, w19
   36c90:	bl	171c0 <rl_delete_text@plt>
   36c94:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36c98:	ldr	w19, [x21]
   36c9c:	ldr	x8, [x8, #2656]
   36ca0:	ldr	w8, [x8]
   36ca4:	cmp	w19, w8
   36ca8:	b.ne	36ce0 <_rl_rubout_char@@Base+0x10c>  // b.any
   36cac:	bl	17100 <__ctype_b_loc@plt>
   36cb0:	ldr	x8, [x0]
   36cb4:	mov	w0, wzr
   36cb8:	ldrh	w8, [x8, x20, lsl #1]
   36cbc:	tbz	w8, #14, 36ce4 <_rl_rubout_char@@Base+0x110>
   36cc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36cc4:	ldr	x8, [x8, #1952]
   36cc8:	ldr	w8, [x8]
   36ccc:	cbz	w8, 36ce4 <_rl_rubout_char@@Base+0x110>
   36cd0:	mov	w0, w20
   36cd4:	mov	w1, w19
   36cd8:	bl	172c0 <rl_character_len@plt>
   36cdc:	bl	16a80 <_rl_erase_at_end_of_line@plt>
   36ce0:	mov	w0, wzr
   36ce4:	ldp	x20, x19, [sp, #32]
   36ce8:	ldr	x21, [sp, #16]
   36cec:	ldp	x29, x30, [sp], #48
   36cf0:	ret

0000000000036cf4 <rl_rubout_or_delete@@Base>:
   36cf4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36cf8:	ldr	x8, [x8, #2656]
   36cfc:	ldr	w8, [x8]
   36d00:	cbz	w8, 36d1c <rl_rubout_or_delete@@Base+0x28>
   36d04:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36d08:	ldr	x9, [x9, #3512]
   36d0c:	ldr	w9, [x9]
   36d10:	cmp	w9, w8
   36d14:	b.ne	36d1c <rl_rubout_or_delete@@Base+0x28>  // b.any
   36d18:	b	17670 <_rl_rubout_char@plt>
   36d1c:	b	16b00 <rl_delete@plt>

0000000000036d20 <rl_delete_horizontal_space@@Base>:
   36d20:	stp	x29, x30, [sp, #-32]!
   36d24:	stp	x20, x19, [sp, #16]
   36d28:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36d2c:	ldr	x20, [x20, #3512]
   36d30:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36d34:	mov	x29, sp
   36d38:	ldrsw	x19, [x20]
   36d3c:	ldr	x8, [x8, #2480]
   36d40:	cbz	w19, 36d78 <rl_delete_horizontal_space@@Base+0x58>
   36d44:	ldr	x9, [x8]
   36d48:	sub	x9, x9, #0x1
   36d4c:	b	36d64 <rl_delete_horizontal_space@@Base+0x44>
   36d50:	sub	x10, x19, #0x1
   36d54:	sub	w11, w19, #0x1
   36d58:	mov	x19, x10
   36d5c:	str	w11, [x20]
   36d60:	cbz	x10, 36d78 <rl_delete_horizontal_space@@Base+0x58>
   36d64:	ldrb	w10, [x9, x19]
   36d68:	cmp	w10, #0x9
   36d6c:	b.eq	36d50 <rl_delete_horizontal_space@@Base+0x30>  // b.none
   36d70:	cmp	w10, #0x20
   36d74:	b.eq	36d50 <rl_delete_horizontal_space@@Base+0x30>  // b.none
   36d78:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36d7c:	ldr	x9, [x9, #2656]
   36d80:	ldrsw	x9, [x9]
   36d84:	cmp	w19, w9
   36d88:	b.ge	36dcc <rl_delete_horizontal_space@@Base+0xac>  // b.tcont
   36d8c:	ldr	x10, [x8]
   36d90:	sxtw	x8, w19
   36d94:	b	36da8 <rl_delete_horizontal_space@@Base+0x88>
   36d98:	add	x8, x8, #0x1
   36d9c:	cmp	x8, x9
   36da0:	str	w8, [x20]
   36da4:	b.ge	36dbc <rl_delete_horizontal_space@@Base+0x9c>  // b.tcont
   36da8:	ldrb	w11, [x10, x8]
   36dac:	cmp	w11, #0x20
   36db0:	b.eq	36d98 <rl_delete_horizontal_space@@Base+0x78>  // b.none
   36db4:	cmp	w11, #0x9
   36db8:	b.eq	36d98 <rl_delete_horizontal_space@@Base+0x78>  // b.none
   36dbc:	mov	w1, w8
   36dc0:	cmp	w19, w1
   36dc4:	b.ne	36ddc <rl_delete_horizontal_space@@Base+0xbc>  // b.any
   36dc8:	b	36dec <rl_delete_horizontal_space@@Base+0xcc>
   36dcc:	mov	w8, w19
   36dd0:	mov	w1, w19
   36dd4:	cmp	w19, w1
   36dd8:	b.eq	36dec <rl_delete_horizontal_space@@Base+0xcc>  // b.none
   36ddc:	mov	w0, w19
   36de0:	bl	171c0 <rl_delete_text@plt>
   36de4:	mov	w8, w19
   36de8:	str	w19, [x20]
   36dec:	tbz	w8, #31, 36df4 <rl_delete_horizontal_space@@Base+0xd4>
   36df0:	str	wzr, [x20]
   36df4:	ldp	x20, x19, [sp, #16]
   36df8:	mov	w0, wzr
   36dfc:	ldp	x29, x30, [sp], #32
   36e00:	ret

0000000000036e04 <rl_delete_or_show_completions@@Base>:
   36e04:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e08:	ldr	x8, [x8, #2656]
   36e0c:	ldr	w8, [x8]
   36e10:	cbz	w8, 36e2c <rl_delete_or_show_completions@@Base+0x28>
   36e14:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e18:	ldr	x9, [x9, #3512]
   36e1c:	ldr	w9, [x9]
   36e20:	cmp	w9, w8
   36e24:	b.ne	36e2c <rl_delete_or_show_completions@@Base+0x28>  // b.any
   36e28:	b	176b0 <rl_possible_completions@plt>
   36e2c:	b	16b00 <rl_delete@plt>

0000000000036e30 <rl_insert_comment@@Base>:
   36e30:	stp	x29, x30, [sp, #-32]!
   36e34:	stp	x20, x19, [sp, #16]
   36e38:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e3c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e40:	ldr	x8, [x8, #3512]
   36e44:	ldr	x9, [x9, #2448]
   36e48:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e4c:	mov	x29, sp
   36e50:	ldr	x9, [x9]
   36e54:	ldr	x10, [x10, #3792]
   36e58:	str	wzr, [x8]
   36e5c:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   36e60:	add	x8, x8, #0xdad
   36e64:	ldr	w10, [x10]
   36e68:	cmp	x9, #0x0
   36e6c:	csel	x19, x8, x9, eq  // eq = none
   36e70:	cbz	w10, 36eb0 <rl_insert_comment@@Base+0x80>
   36e74:	mov	x0, x19
   36e78:	bl	16440 <strlen@plt>
   36e7c:	mov	x20, x0
   36e80:	cbz	w20, 36ebc <rl_insert_comment@@Base+0x8c>
   36e84:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36e88:	ldr	x8, [x8, #2480]
   36e8c:	ldr	x1, [x8]
   36e90:	ldrb	w8, [x19]
   36e94:	ldrb	w9, [x1]
   36e98:	cmp	w8, w9
   36e9c:	b.ne	36eb0 <rl_insert_comment@@Base+0x80>  // b.any
   36ea0:	sxtw	x2, w20
   36ea4:	mov	x0, x19
   36ea8:	bl	16b40 <strncmp@plt>
   36eac:	cbz	w0, 36ebc <rl_insert_comment@@Base+0x8c>
   36eb0:	mov	x0, x19
   36eb4:	bl	16430 <rl_insert_text@plt>
   36eb8:	b	36ec8 <rl_insert_comment@@Base+0x98>
   36ebc:	mov	w0, wzr
   36ec0:	mov	w1, w20
   36ec4:	bl	171c0 <rl_delete_text@plt>
   36ec8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36ecc:	ldr	x8, [x8, #2664]
   36ed0:	ldr	x8, [x8]
   36ed4:	blr	x8
   36ed8:	bl	16af0 <rl_newline@plt>
   36edc:	ldp	x20, x19, [sp, #16]
   36ee0:	mov	w0, wzr
   36ee4:	ldp	x29, x30, [sp], #32
   36ee8:	ret

0000000000036eec <rl_upcase_word@@Base>:
   36eec:	mov	w1, #0x1                   	// #1
   36ef0:	b	36ef4 <rl_upcase_word@@Base+0x8>
   36ef4:	sub	sp, sp, #0x80
   36ef8:	stp	x29, x30, [sp, #32]
   36efc:	stp	x28, x27, [sp, #48]
   36f00:	stp	x26, x25, [sp, #64]
   36f04:	stp	x24, x23, [sp, #80]
   36f08:	stp	x22, x21, [sp, #96]
   36f0c:	stp	x20, x19, [sp, #112]
   36f10:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36f14:	ldr	x22, [x22, #3512]
   36f18:	mov	w19, w1
   36f1c:	mov	w1, wzr
   36f20:	add	x29, sp, #0x20
   36f24:	ldr	w21, [x22]
   36f28:	mov	w20, w0
   36f2c:	bl	165f0 <rl_forward_word@plt>
   36f30:	sub	w8, w19, #0x1
   36f34:	cmp	w8, #0x3
   36f38:	b.cs	371e0 <rl_upcase_word@@Base+0x2f4>  // b.hs, b.nlast
   36f3c:	ldr	w8, [x22]
   36f40:	cmp	w20, #0x0
   36f44:	str	xzr, [sp]
   36f48:	csel	w20, w21, w8, lt  // lt = tstop
   36f4c:	csel	w21, w8, w21, lt  // lt = tstop
   36f50:	mov	w0, w21
   36f54:	mov	w1, w20
   36f58:	bl	171d0 <rl_modifying@plt>
   36f5c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36f60:	ldr	x26, [x26, #2480]
   36f64:	mov	w25, wzr
   36f68:	b	36f7c <rl_upcase_word@@Base+0x90>
   36f6c:	ldr	x8, [x0]
   36f70:	ldr	w23, [x8, x24, lsl #2]
   36f74:	ldr	x8, [x26]
   36f78:	strb	w23, [x8, w22, sxtw]
   36f7c:	subs	w28, w20, w21
   36f80:	b.le	371ec <rl_upcase_word@@Base+0x300>
   36f84:	ldr	x0, [x26]
   36f88:	mov	w1, w21
   36f8c:	mov	w22, w21
   36f90:	mov	w24, w25
   36f94:	bl	175a0 <_rl_char_value@plt>
   36f98:	mov	w23, w0
   36f9c:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   36fa0:	cmp	x0, #0x2
   36fa4:	b.cc	36fd4 <rl_upcase_word@@Base+0xe8>  // b.lo, b.ul, b.last
   36fa8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   36fac:	ldr	x8, [x8, #1896]
   36fb0:	ldr	w8, [x8]
   36fb4:	cbnz	w8, 36fd4 <rl_upcase_word@@Base+0xe8>
   36fb8:	ldr	x0, [x26]
   36fbc:	mov	w2, #0x1                   	// #1
   36fc0:	mov	w3, #0x1                   	// #1
   36fc4:	mov	w1, w22
   36fc8:	bl	16c00 <_rl_find_next_mbchar@plt>
   36fcc:	mov	w21, w0
   36fd0:	b	36fd8 <rl_upcase_word@@Base+0xec>
   36fd4:	add	w21, w22, #0x1
   36fd8:	mov	w0, w23
   36fdc:	bl	16d30 <_rl_walphabetic@plt>
   36fe0:	mov	w25, wzr
   36fe4:	cbz	w0, 36f7c <rl_upcase_word@@Base+0x90>
   36fe8:	cmp	w24, #0x0
   36fec:	mov	w8, #0x1                   	// #1
   36ff0:	cinc	w8, w8, ne  // ne = any
   36ff4:	cmp	w19, #0x3
   36ff8:	csel	w27, w8, w19, eq  // eq = none
   36ffc:	csinc	w25, w24, wzr, ne  // ne = any
   37000:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   37004:	cmp	x0, #0x1
   37008:	b.eq	3705c <rl_upcase_word@@Base+0x170>  // b.none
   3700c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37010:	ldr	x8, [x8, #1896]
   37014:	ldr	w8, [x8]
   37018:	cbnz	w8, 3705c <rl_upcase_word@@Base+0x170>
   3701c:	ldr	x8, [x26]
   37020:	sxtw	x24, w22
   37024:	sxtw	x2, w28
   37028:	sub	x0, x29, #0x4
   3702c:	add	x1, x8, x24
   37030:	mov	x3, sp
   37034:	bl	16370 <mbrtowc@plt>
   37038:	mov	x22, x0
   3703c:	cmn	x0, #0x2
   37040:	b.cc	37080 <rl_upcase_word@@Base+0x194>  // b.lo, b.ul, b.last
   37044:	ldr	x8, [x26]
   37048:	ldrb	w0, [x8, x24]
   3704c:	stur	w0, [x29, #-4]
   37050:	cmp	w27, #0x1
   37054:	b.eq	37090 <rl_upcase_word@@Base+0x1a4>  // b.none
   37058:	b	370c4 <rl_upcase_word@@Base+0x1d8>
   3705c:	bl	17100 <__ctype_b_loc@plt>
   37060:	ldr	x8, [x0]
   37064:	and	w24, w23, #0xff
   37068:	cmp	w27, #0x1
   3706c:	ldrh	w8, [x8, w24, uxtw #1]
   37070:	b.ne	370a8 <rl_upcase_word@@Base+0x1bc>  // b.any
   37074:	tbz	w8, #9, 36f74 <rl_upcase_word@@Base+0x88>
   37078:	bl	16dc0 <__ctype_toupper_loc@plt>
   3707c:	b	36f6c <rl_upcase_word@@Base+0x80>
   37080:	cbz	x22, 370b4 <rl_upcase_word@@Base+0x1c8>
   37084:	ldur	w0, [x29, #-4]
   37088:	cmp	w27, #0x1
   3708c:	b.ne	370c4 <rl_upcase_word@@Base+0x1d8>  // b.any
   37090:	bl	179f0 <iswlower@plt>
   37094:	ldur	w1, [x29, #-4]
   37098:	cbz	w0, 370dc <rl_upcase_word@@Base+0x1f0>
   3709c:	mov	w0, w1
   370a0:	bl	17770 <towupper@plt>
   370a4:	b	370d8 <rl_upcase_word@@Base+0x1ec>
   370a8:	tbz	w8, #8, 36f74 <rl_upcase_word@@Base+0x88>
   370ac:	bl	16810 <__ctype_tolower_loc@plt>
   370b0:	b	36f6c <rl_upcase_word@@Base+0x80>
   370b4:	mov	w0, wzr
   370b8:	stur	wzr, [x29, #-4]
   370bc:	cmp	w27, #0x1
   370c0:	b.eq	37090 <rl_upcase_word@@Base+0x1a4>  // b.none
   370c4:	bl	17580 <iswupper@plt>
   370c8:	ldur	w1, [x29, #-4]
   370cc:	cbz	w0, 370dc <rl_upcase_word@@Base+0x1f0>
   370d0:	mov	w0, w1
   370d4:	bl	17940 <towlower@plt>
   370d8:	mov	w1, w0
   370dc:	ldur	w8, [x29, #-4]
   370e0:	cmp	w1, w8
   370e4:	b.eq	36f7c <rl_upcase_word@@Base+0x90>  // b.none
   370e8:	add	x0, sp, #0x8
   370ec:	mov	x2, sp
   370f0:	bl	179d0 <wcrtomb@plt>
   370f4:	cmp	w0, #0x1
   370f8:	sxtw	x23, w0
   370fc:	b.lt	37108 <rl_upcase_word@@Base+0x21c>  // b.tstop
   37100:	add	x8, sp, #0x8
   37104:	strb	wzr, [x8, x23]
   37108:	ldr	x8, [x26]
   3710c:	cmp	x22, x23
   37110:	add	x24, x8, x24
   37114:	b.ne	3712c <rl_upcase_word@@Base+0x240>  // b.any
   37118:	add	x1, sp, #0x8
   3711c:	mov	x0, x24
   37120:	mov	x2, x22
   37124:	bl	16380 <memcpy@plt>
   37128:	b	36f7c <rl_upcase_word@@Base+0x90>
   3712c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37130:	ldr	x9, [x9, #2656]
   37134:	ldrsw	x9, [x9]
   37138:	b.hi	37190 <rl_upcase_word@@Base+0x2a4>  // b.pmore
   3713c:	cmp	x22, x23
   37140:	b.cs	36f7c <rl_upcase_word@@Base+0x90>  // b.hs, b.nlast
   37144:	sub	w28, w23, w22
   37148:	add	w0, w28, #0x1
   3714c:	add	x27, x8, x9
   37150:	bl	16e30 <rl_extend_line_buffer@plt>
   37154:	add	x1, x24, x22
   37158:	add	x0, x24, x23
   3715c:	sub	x2, x27, x1
   37160:	bl	163b0 <memmove@plt>
   37164:	add	x1, sp, #0x8
   37168:	mov	x0, x24
   3716c:	mov	x2, x23
   37170:	bl	16380 <memcpy@plt>
   37174:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37178:	ldr	x10, [x10, #2656]
   3717c:	add	w21, w21, w28
   37180:	add	w20, w20, w28
   37184:	ldr	w8, [x10]
   37188:	add	w8, w8, w28
   3718c:	b	371d0 <rl_upcase_word@@Base+0x2e4>
   37190:	add	x1, sp, #0x8
   37194:	mov	x0, x24
   37198:	mov	x2, x23
   3719c:	add	x27, x8, x9
   371a0:	bl	16380 <memcpy@plt>
   371a4:	add	x1, x24, x22
   371a8:	add	x0, x24, x23
   371ac:	sub	x2, x27, x1
   371b0:	bl	163b0 <memmove@plt>
   371b4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   371b8:	ldr	x10, [x10, #2656]
   371bc:	sub	w9, w22, w23
   371c0:	sub	w21, w21, w9
   371c4:	sub	w20, w20, w9
   371c8:	ldr	w8, [x10]
   371cc:	sub	w8, w8, w9
   371d0:	ldr	x9, [x26]
   371d4:	str	w8, [x10]
   371d8:	strb	wzr, [x9, w8, sxtw]
   371dc:	b	36f7c <rl_upcase_word@@Base+0x90>
   371e0:	bl	17390 <rl_ding@plt>
   371e4:	mov	w0, #0x1                   	// #1
   371e8:	b	371fc <rl_upcase_word@@Base+0x310>
   371ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   371f0:	ldr	x8, [x8, #3512]
   371f4:	mov	w0, wzr
   371f8:	str	w20, [x8]
   371fc:	ldp	x20, x19, [sp, #112]
   37200:	ldp	x22, x21, [sp, #96]
   37204:	ldp	x24, x23, [sp, #80]
   37208:	ldp	x26, x25, [sp, #64]
   3720c:	ldp	x28, x27, [sp, #48]
   37210:	ldp	x29, x30, [sp, #32]
   37214:	add	sp, sp, #0x80
   37218:	ret

000000000003721c <rl_downcase_word@@Base>:
   3721c:	mov	w1, #0x2                   	// #2
   37220:	b	36ef4 <rl_upcase_word@@Base+0x8>

0000000000037224 <rl_capitalize_word@@Base>:
   37224:	mov	w1, #0x3                   	// #3
   37228:	b	36ef4 <rl_upcase_word@@Base+0x8>

000000000003722c <rl_transpose_words@@Base>:
   3722c:	stp	x29, x30, [sp, #-80]!
   37230:	str	x25, [sp, #16]
   37234:	stp	x24, x23, [sp, #32]
   37238:	stp	x22, x21, [sp, #48]
   3723c:	stp	x20, x19, [sp, #64]
   37240:	mov	x29, sp
   37244:	cbz	w0, 37324 <rl_transpose_words@@Base+0xf8>
   37248:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3724c:	ldr	x25, [x25, #3512]
   37250:	mov	w22, w1
   37254:	mov	w20, w0
   37258:	ldr	w23, [x25]
   3725c:	bl	165f0 <rl_forward_word@plt>
   37260:	ldr	w19, [x25]
   37264:	mov	w0, #0x1                   	// #1
   37268:	mov	w1, w22
   3726c:	bl	16ae0 <rl_backward_word@plt>
   37270:	ldr	w21, [x25]
   37274:	mov	w0, w20
   37278:	mov	w1, w22
   3727c:	bl	16ae0 <rl_backward_word@plt>
   37280:	ldr	w20, [x25]
   37284:	mov	w0, #0x1                   	// #1
   37288:	mov	w1, w22
   3728c:	bl	165f0 <rl_forward_word@plt>
   37290:	cmp	w20, w21
   37294:	b.eq	37318 <rl_transpose_words@@Base+0xec>  // b.none
   37298:	ldr	w22, [x25]
   3729c:	cmp	w21, w22
   372a0:	b.lt	37318 <rl_transpose_words@@Base+0xec>  // b.tstop
   372a4:	mov	w0, w20
   372a8:	mov	w1, w22
   372ac:	bl	178e0 <rl_copy_text@plt>
   372b0:	mov	x23, x0
   372b4:	mov	w0, w21
   372b8:	mov	w1, w19
   372bc:	bl	178e0 <rl_copy_text@plt>
   372c0:	mov	x24, x0
   372c4:	bl	16400 <rl_begin_undo_group@plt>
   372c8:	mov	w0, w21
   372cc:	mov	w1, w19
   372d0:	str	w21, [x25]
   372d4:	bl	171c0 <rl_delete_text@plt>
   372d8:	mov	x0, x23
   372dc:	bl	16430 <rl_insert_text@plt>
   372e0:	mov	w0, w20
   372e4:	mov	w1, w22
   372e8:	str	w20, [x25]
   372ec:	bl	171c0 <rl_delete_text@plt>
   372f0:	mov	x0, x24
   372f4:	bl	16430 <rl_insert_text@plt>
   372f8:	str	w19, [x25]
   372fc:	bl	17830 <rl_end_undo_group@plt>
   37300:	mov	x0, x23
   37304:	bl	169f0 <xfree@plt>
   37308:	mov	x0, x24
   3730c:	bl	169f0 <xfree@plt>
   37310:	mov	w0, wzr
   37314:	b	37324 <rl_transpose_words@@Base+0xf8>
   37318:	bl	17390 <rl_ding@plt>
   3731c:	str	w23, [x25]
   37320:	mov	w0, #0x1                   	// #1
   37324:	ldp	x20, x19, [sp, #64]
   37328:	ldp	x22, x21, [sp, #48]
   3732c:	ldp	x24, x23, [sp, #32]
   37330:	ldr	x25, [sp, #16]
   37334:	ldp	x29, x30, [sp], #80
   37338:	ret

000000000003733c <rl_transpose_chars@@Base>:
   3733c:	stp	x29, x30, [sp, #-64]!
   37340:	stp	x24, x23, [sp, #16]
   37344:	stp	x22, x21, [sp, #32]
   37348:	stp	x20, x19, [sp, #48]
   3734c:	mov	x29, sp
   37350:	cbz	w0, 374c0 <rl_transpose_chars@@Base+0x184>
   37354:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37358:	ldr	x21, [x21, #3512]
   3735c:	ldr	w8, [x21]
   37360:	cbz	w8, 373cc <rl_transpose_chars@@Base+0x90>
   37364:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37368:	ldr	x22, [x22, #2656]
   3736c:	ldr	w8, [x22]
   37370:	cmp	w8, #0x1
   37374:	b.le	373cc <rl_transpose_chars@@Base+0x90>
   37378:	mov	w19, w0
   3737c:	bl	16400 <rl_begin_undo_group@plt>
   37380:	ldr	w20, [x21]
   37384:	ldr	w8, [x22]
   37388:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3738c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37390:	ldr	x24, [x24, #1896]
   37394:	ldr	x23, [x23, #2480]
   37398:	cmp	w20, w8
   3739c:	b.ne	373e8 <rl_transpose_chars@@Base+0xac>  // b.any
   373a0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   373a4:	cmp	x0, #0x2
   373a8:	b.cc	373d8 <rl_transpose_chars@@Base+0x9c>  // b.lo, b.ul, b.last
   373ac:	ldr	w8, [x24]
   373b0:	cbnz	w8, 373d8 <rl_transpose_chars@@Base+0x9c>
   373b4:	ldr	x0, [x23]
   373b8:	ldr	w1, [x21]
   373bc:	mov	w2, #0x1                   	// #1
   373c0:	bl	16c20 <_rl_find_prev_mbchar@plt>
   373c4:	mov	w20, w0
   373c8:	b	373e0 <rl_transpose_chars@@Base+0xa4>
   373cc:	bl	17390 <rl_ding@plt>
   373d0:	mov	w0, #0x1                   	// #1
   373d4:	b	374c0 <rl_transpose_chars@@Base+0x184>
   373d8:	ldr	w8, [x21]
   373dc:	sub	w20, w8, #0x1
   373e0:	mov	w19, #0x1                   	// #1
   373e4:	str	w20, [x21]
   373e8:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   373ec:	cmp	x0, #0x2
   373f0:	b.cc	37410 <rl_transpose_chars@@Base+0xd4>  // b.lo, b.ul, b.last
   373f4:	ldr	w8, [x24]
   373f8:	cbnz	w8, 37410 <rl_transpose_chars@@Base+0xd4>
   373fc:	ldr	x0, [x23]
   37400:	ldr	w1, [x21]
   37404:	mov	w2, #0x1                   	// #1
   37408:	bl	16c20 <_rl_find_prev_mbchar@plt>
   3740c:	b	37418 <rl_transpose_chars@@Base+0xdc>
   37410:	ldr	w8, [x21]
   37414:	sub	w0, w8, #0x1
   37418:	sub	w24, w20, w0
   3741c:	add	w8, w24, #0x1
   37420:	str	w0, [x21]
   37424:	sxtw	x0, w8
   37428:	bl	16bf0 <xmalloc@plt>
   3742c:	cmp	w24, #0x1
   37430:	mov	x20, x0
   37434:	b.lt	37464 <rl_transpose_chars@@Base+0x128>  // b.tstop
   37438:	mov	x9, xzr
   3743c:	mov	w8, w24
   37440:	ldr	w10, [x21]
   37444:	ldr	x11, [x23]
   37448:	add	w10, w9, w10
   3744c:	ldrb	w10, [x11, w10, sxtw]
   37450:	strb	w10, [x20, x9]
   37454:	add	x9, x9, #0x1
   37458:	cmp	x8, x9
   3745c:	b.ne	37440 <rl_transpose_chars@@Base+0x104>  // b.any
   37460:	b	37468 <rl_transpose_chars@@Base+0x12c>
   37464:	mov	x8, xzr
   37468:	strb	wzr, [x20, x8]
   3746c:	ldr	w0, [x21]
   37470:	add	w1, w0, w24
   37474:	bl	171c0 <rl_delete_text@plt>
   37478:	ldr	x0, [x23]
   3747c:	ldr	w1, [x21]
   37480:	mov	w3, #0x1                   	// #1
   37484:	mov	w2, w19
   37488:	bl	16c00 <_rl_find_next_mbchar@plt>
   3748c:	ldr	w8, [x22]
   37490:	str	w0, [x21]
   37494:	cmp	w0, w8
   37498:	b.gt	374a4 <rl_transpose_chars@@Base+0x168>
   3749c:	tbz	w0, #31, 374a8 <rl_transpose_chars@@Base+0x16c>
   374a0:	mov	w8, wzr
   374a4:	str	w8, [x21]
   374a8:	mov	x0, x20
   374ac:	bl	16430 <rl_insert_text@plt>
   374b0:	bl	17830 <rl_end_undo_group@plt>
   374b4:	mov	x0, x20
   374b8:	bl	169f0 <xfree@plt>
   374bc:	mov	w0, wzr
   374c0:	ldp	x20, x19, [sp, #48]
   374c4:	ldp	x22, x21, [sp, #32]
   374c8:	ldp	x24, x23, [sp, #16]
   374cc:	ldp	x29, x30, [sp], #64
   374d0:	ret

00000000000374d4 <_rl_char_search_internal@@Base>:
   374d4:	stp	x29, x30, [sp, #-80]!
   374d8:	stp	x26, x25, [sp, #16]
   374dc:	stp	x24, x23, [sp, #32]
   374e0:	stp	x22, x21, [sp, #48]
   374e4:	stp	x20, x19, [sp, #64]
   374e8:	mov	x29, sp
   374ec:	cbz	w1, 3762c <_rl_char_search_internal@@Base+0x158>
   374f0:	mov	w22, w0
   374f4:	cbz	w0, 37620 <_rl_char_search_internal@@Base+0x14c>
   374f8:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   374fc:	ldr	x24, [x24, #3512]
   37500:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37504:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37508:	mov	w19, w3
   3750c:	ldr	w23, [x24]
   37510:	ldr	x25, [x25, #2656]
   37514:	ldr	x26, [x26, #2480]
   37518:	mov	x20, x2
   3751c:	mov	w21, w1
   37520:	b	37538 <_rl_char_search_internal@@Base+0x64>
   37524:	cmn	w21, #0x1
   37528:	mov	w0, w23
   3752c:	b.eq	37608 <_rl_char_search_internal@@Base+0x134>  // b.none
   37530:	str	w0, [x24]
   37534:	cbz	w22, 37620 <_rl_char_search_internal@@Base+0x14c>
   37538:	tbz	w21, #31, 37544 <_rl_char_search_internal@@Base+0x70>
   3753c:	cmp	w23, #0x1
   37540:	b.lt	37628 <_rl_char_search_internal@@Base+0x154>  // b.tstop
   37544:	cmp	w21, #0x1
   37548:	b.lt	37558 <_rl_char_search_internal@@Base+0x84>  // b.tstop
   3754c:	ldr	w8, [x25]
   37550:	cmp	w23, w8
   37554:	b.ge	37628 <_rl_char_search_internal@@Base+0x154>  // b.tcont
   37558:	ldr	x0, [x26]
   3755c:	tbnz	w21, #31, 37574 <_rl_char_search_internal@@Base+0xa0>
   37560:	mov	w2, #0x1                   	// #1
   37564:	mov	w1, w23
   37568:	mov	w3, wzr
   3756c:	bl	16c00 <_rl_find_next_mbchar@plt>
   37570:	b	37598 <_rl_char_search_internal@@Base+0xc4>
   37574:	mov	w1, w23
   37578:	mov	w2, wzr
   3757c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   37580:	b	37598 <_rl_char_search_internal@@Base+0xc4>
   37584:	mov	w1, w23
   37588:	mov	w2, wzr
   3758c:	bl	16c20 <_rl_find_prev_mbchar@plt>
   37590:	cmp	w0, w23
   37594:	b.eq	37534 <_rl_char_search_internal@@Base+0x60>  // b.none
   37598:	ldr	x8, [x26]
   3759c:	ldr	w2, [x25]
   375a0:	mov	w23, w0
   375a4:	mov	w1, w23
   375a8:	mov	x0, x8
   375ac:	mov	x3, x20
   375b0:	mov	w4, w19
   375b4:	bl	16bc0 <_rl_is_mbchar_matched@plt>
   375b8:	cbnz	w0, 375e0 <_rl_char_search_internal@@Base+0x10c>
   375bc:	ldr	x0, [x26]
   375c0:	tbnz	w21, #31, 37584 <_rl_char_search_internal@@Base+0xb0>
   375c4:	mov	w2, #0x1                   	// #1
   375c8:	mov	w1, w23
   375cc:	mov	w3, wzr
   375d0:	bl	16c00 <_rl_find_next_mbchar@plt>
   375d4:	cmp	w0, w23
   375d8:	b.ne	37598 <_rl_char_search_internal@@Base+0xc4>  // b.any
   375dc:	b	37534 <_rl_char_search_internal@@Base+0x60>
   375e0:	sub	w22, w22, #0x1
   375e4:	tbnz	w21, #31, 37524 <_rl_char_search_internal@@Base+0x50>
   375e8:	cmp	w21, #0x1
   375ec:	mov	w0, w23
   375f0:	b.ne	37530 <_rl_char_search_internal@@Base+0x5c>  // b.any
   375f4:	ldr	x0, [x26]
   375f8:	mov	w1, w23
   375fc:	mov	w2, wzr
   37600:	bl	16c20 <_rl_find_prev_mbchar@plt>
   37604:	b	37530 <_rl_char_search_internal@@Base+0x5c>
   37608:	ldr	x0, [x26]
   3760c:	mov	w2, #0x1                   	// #1
   37610:	mov	w1, w23
   37614:	mov	w3, wzr
   37618:	bl	16c00 <_rl_find_next_mbchar@plt>
   3761c:	b	37530 <_rl_char_search_internal@@Base+0x5c>
   37620:	mov	w0, wzr
   37624:	b	37630 <_rl_char_search_internal@@Base+0x15c>
   37628:	bl	17390 <rl_ding@plt>
   3762c:	mov	w0, #0x1                   	// #1
   37630:	ldp	x20, x19, [sp, #64]
   37634:	ldp	x22, x21, [sp, #48]
   37638:	ldp	x24, x23, [sp, #32]
   3763c:	ldp	x26, x25, [sp, #16]
   37640:	ldp	x29, x30, [sp], #80
   37644:	ret

0000000000037648 <rl_char_search@@Base>:
   37648:	sub	sp, sp, #0x50
   3764c:	stp	x29, x30, [sp, #16]
   37650:	stp	x24, x23, [sp, #32]
   37654:	stp	x22, x21, [sp, #48]
   37658:	stp	x20, x19, [sp, #64]
   3765c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37660:	ldr	x8, [x8, #2984]
   37664:	mov	w21, w0
   37668:	add	x29, sp, #0x10
   3766c:	ldrb	w8, [x8, #2]
   37670:	tbnz	w8, #3, 376a8 <rl_char_search@@Base+0x60>
   37674:	mov	x0, sp
   37678:	mov	w1, #0x10                  	// #16
   3767c:	bl	16cf0 <_rl_read_mbchar@plt>
   37680:	cmp	w0, #0x1
   37684:	b.lt	376e8 <rl_char_search@@Base+0xa0>  // b.tstop
   37688:	mov	w19, w0
   3768c:	tbnz	w21, #31, 376f0 <rl_char_search@@Base+0xa8>
   37690:	mov	x2, sp
   37694:	mov	w1, #0x2                   	// #2
   37698:	mov	w0, w21
   3769c:	mov	w3, w19
   376a0:	bl	168e0 <_rl_char_search_internal@plt>
   376a4:	b	37788 <rl_char_search@@Base+0x140>
   376a8:	mov	w0, w21
   376ac:	bl	17700 <_rl_callback_data_alloc@plt>
   376b0:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   376b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   376b8:	ldr	d0, [x10, #3880]
   376bc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   376c0:	ldr	x9, [x9, #2032]
   376c4:	ldr	x10, [x10, #4016]
   376c8:	adrp	x11, 37000 <rl_upcase_word@@Base+0x114>
   376cc:	mov	x8, x0
   376d0:	add	x11, x11, #0x7a0
   376d4:	mov	w0, wzr
   376d8:	str	x8, [x9]
   376dc:	stur	d0, [x8, #4]
   376e0:	str	x11, [x10]
   376e4:	b	37788 <rl_char_search@@Base+0x140>
   376e8:	mov	w0, #0x1                   	// #1
   376ec:	b	37788 <rl_char_search@@Base+0x140>
   376f0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   376f4:	ldr	x22, [x22, #3512]
   376f8:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   376fc:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37700:	neg	w21, w21
   37704:	ldr	w20, [x22]
   37708:	ldr	x23, [x23, #2480]
   3770c:	ldr	x24, [x24, #2656]
   37710:	b	37720 <rl_char_search@@Base+0xd8>
   37714:	sub	w21, w21, #0x1
   37718:	str	w20, [x22]
   3771c:	cbz	w21, 37784 <rl_char_search@@Base+0x13c>
   37720:	cmp	w20, #0x1
   37724:	b.lt	37778 <rl_char_search@@Base+0x130>  // b.tstop
   37728:	ldr	x0, [x23]
   3772c:	mov	w1, w20
   37730:	mov	w2, wzr
   37734:	bl	16c20 <_rl_find_prev_mbchar@plt>
   37738:	ldr	x8, [x23]
   3773c:	ldr	w2, [x24]
   37740:	mov	w20, w0
   37744:	mov	x3, sp
   37748:	mov	x0, x8
   3774c:	mov	w1, w20
   37750:	mov	w4, w19
   37754:	bl	16bc0 <_rl_is_mbchar_matched@plt>
   37758:	cbnz	w0, 37714 <rl_char_search@@Base+0xcc>
   3775c:	ldr	x0, [x23]
   37760:	mov	w1, w20
   37764:	mov	w2, wzr
   37768:	bl	16c20 <_rl_find_prev_mbchar@plt>
   3776c:	cmp	w0, w20
   37770:	b.ne	37738 <rl_char_search@@Base+0xf0>  // b.any
   37774:	b	3771c <rl_char_search@@Base+0xd4>
   37778:	bl	17390 <rl_ding@plt>
   3777c:	mov	w0, #0x1                   	// #1
   37780:	b	37788 <rl_char_search@@Base+0x140>
   37784:	mov	w0, wzr
   37788:	ldp	x20, x19, [sp, #64]
   3778c:	ldp	x22, x21, [sp, #48]
   37790:	ldp	x24, x23, [sp, #32]
   37794:	ldp	x29, x30, [sp, #16]
   37798:	add	sp, sp, #0x50
   3779c:	ret
   377a0:	sub	sp, sp, #0x40
   377a4:	stp	x29, x30, [sp, #16]
   377a8:	stp	x22, x21, [sp, #32]
   377ac:	stp	x20, x19, [sp, #48]
   377b0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   377b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   377b8:	ldr	x8, [x8, #4016]
   377bc:	ldr	x9, [x9, #1976]
   377c0:	mov	w19, #0x1                   	// #1
   377c4:	mov	w1, #0x10                  	// #16
   377c8:	str	xzr, [x8]
   377cc:	str	w19, [x9]
   377d0:	ldp	w20, w22, [x0]
   377d4:	ldr	w21, [x0, #8]
   377d8:	mov	x0, sp
   377dc:	add	x29, sp, #0x10
   377e0:	bl	16cf0 <_rl_read_mbchar@plt>
   377e4:	cmp	w0, #0x1
   377e8:	b.lt	37818 <rl_char_search@@Base+0x1d0>  // b.tstop
   377ec:	mov	w3, w0
   377f0:	tbnz	w20, #31, 37804 <rl_char_search@@Base+0x1bc>
   377f4:	mov	x2, sp
   377f8:	mov	w0, w20
   377fc:	mov	w1, w22
   37800:	b	37810 <rl_char_search@@Base+0x1c8>
   37804:	neg	w0, w20
   37808:	mov	x2, sp
   3780c:	mov	w1, w21
   37810:	bl	168e0 <_rl_char_search_internal@plt>
   37814:	mov	w19, w0
   37818:	mov	w0, w19
   3781c:	ldp	x20, x19, [sp, #48]
   37820:	ldp	x22, x21, [sp, #32]
   37824:	ldp	x29, x30, [sp, #16]
   37828:	add	sp, sp, #0x40
   3782c:	ret

0000000000037830 <rl_backward_char_search@@Base>:
   37830:	sub	sp, sp, #0x50
   37834:	stp	x29, x30, [sp, #16]
   37838:	stp	x24, x23, [sp, #32]
   3783c:	stp	x22, x21, [sp, #48]
   37840:	stp	x20, x19, [sp, #64]
   37844:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37848:	ldr	x8, [x8, #2984]
   3784c:	mov	w19, w0
   37850:	add	x29, sp, #0x10
   37854:	ldrb	w8, [x8, #2]
   37858:	tbnz	w8, #3, 37900 <rl_backward_char_search@@Base+0xd0>
   3785c:	mov	x0, sp
   37860:	mov	w1, #0x10                  	// #16
   37864:	bl	16cf0 <_rl_read_mbchar@plt>
   37868:	cmp	w0, #0x1
   3786c:	b.lt	37964 <rl_backward_char_search@@Base+0x134>  // b.tstop
   37870:	mov	w20, w0
   37874:	tbnz	w19, #31, 37948 <rl_backward_char_search@@Base+0x118>
   37878:	cbz	w19, 37940 <rl_backward_char_search@@Base+0x110>
   3787c:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37880:	ldr	x22, [x22, #3512]
   37884:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37888:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3788c:	ldr	w21, [x22]
   37890:	ldr	x23, [x23, #2480]
   37894:	ldr	x24, [x24, #2656]
   37898:	b	378a8 <rl_backward_char_search@@Base+0x78>
   3789c:	sub	w19, w19, #0x1
   378a0:	str	w21, [x22]
   378a4:	cbz	w19, 37940 <rl_backward_char_search@@Base+0x110>
   378a8:	cmp	w21, #0x1
   378ac:	b.lt	37960 <rl_backward_char_search@@Base+0x130>  // b.tstop
   378b0:	ldr	x0, [x23]
   378b4:	mov	w1, w21
   378b8:	mov	w2, wzr
   378bc:	bl	16c20 <_rl_find_prev_mbchar@plt>
   378c0:	ldr	x8, [x23]
   378c4:	ldr	w2, [x24]
   378c8:	mov	w21, w0
   378cc:	mov	x3, sp
   378d0:	mov	x0, x8
   378d4:	mov	w1, w21
   378d8:	mov	w4, w20
   378dc:	bl	16bc0 <_rl_is_mbchar_matched@plt>
   378e0:	cbnz	w0, 3789c <rl_backward_char_search@@Base+0x6c>
   378e4:	ldr	x0, [x23]
   378e8:	mov	w1, w21
   378ec:	mov	w2, wzr
   378f0:	bl	16c20 <_rl_find_prev_mbchar@plt>
   378f4:	cmp	w0, w21
   378f8:	b.ne	378c0 <rl_backward_char_search@@Base+0x90>  // b.any
   378fc:	b	378a4 <rl_backward_char_search@@Base+0x74>
   37900:	mov	w0, w19
   37904:	bl	17700 <_rl_callback_data_alloc@plt>
   37908:	adrp	x10, 3f000 <filename_completion_function@@Base+0x580>
   3790c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37910:	ldr	d0, [x10, #3888]
   37914:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37918:	ldr	x9, [x9, #2032]
   3791c:	ldr	x10, [x10, #4016]
   37920:	adrp	x11, 37000 <rl_upcase_word@@Base+0x114>
   37924:	mov	x8, x0
   37928:	add	x11, x11, #0x7a0
   3792c:	mov	w0, wzr
   37930:	str	x8, [x9]
   37934:	stur	d0, [x8, #4]
   37938:	str	x11, [x10]
   3793c:	b	37968 <rl_backward_char_search@@Base+0x138>
   37940:	mov	w0, wzr
   37944:	b	37968 <rl_backward_char_search@@Base+0x138>
   37948:	neg	w0, w19
   3794c:	mov	x2, sp
   37950:	mov	w1, #0x2                   	// #2
   37954:	mov	w3, w20
   37958:	bl	168e0 <_rl_char_search_internal@plt>
   3795c:	b	37968 <rl_backward_char_search@@Base+0x138>
   37960:	bl	17390 <rl_ding@plt>
   37964:	mov	w0, #0x1                   	// #1
   37968:	ldp	x20, x19, [sp, #64]
   3796c:	ldp	x22, x21, [sp, #48]
   37970:	ldp	x24, x23, [sp, #32]
   37974:	ldp	x29, x30, [sp, #16]
   37978:	add	sp, sp, #0x50
   3797c:	ret

0000000000037980 <_rl_set_mark_at_pos@@Base>:
   37980:	mov	w8, w0
   37984:	mov	w0, #0x1                   	// #1
   37988:	tbnz	w8, #31, 379b0 <_rl_set_mark_at_pos@@Base+0x30>
   3798c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37990:	ldr	x9, [x9, #2656]
   37994:	ldr	w9, [x9]
   37998:	cmp	w9, w8
   3799c:	b.lt	379b0 <_rl_set_mark_at_pos@@Base+0x30>  // b.tstop
   379a0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   379a4:	ldr	x9, [x9, #3272]
   379a8:	mov	w0, wzr
   379ac:	str	w8, [x9]
   379b0:	ret

00000000000379b4 <rl_set_mark@@Base>:
   379b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   379b8:	ldr	x8, [x8, #3792]
   379bc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   379c0:	ldr	w8, [x8]
   379c4:	ldr	x9, [x9, #3512]
   379c8:	cmp	w8, #0x0
   379cc:	ldr	w9, [x9]
   379d0:	csel	w8, w9, w0, eq  // eq = none
   379d4:	mov	w0, #0x1                   	// #1
   379d8:	tbnz	w8, #31, 37a00 <rl_set_mark@@Base+0x4c>
   379dc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   379e0:	ldr	x9, [x9, #2656]
   379e4:	ldr	w9, [x9]
   379e8:	cmp	w9, w8
   379ec:	b.lt	37a00 <rl_set_mark@@Base+0x4c>  // b.tstop
   379f0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   379f4:	ldr	x9, [x9, #3272]
   379f8:	mov	w0, wzr
   379fc:	str	w8, [x9]
   37a00:	ret

0000000000037a04 <rl_exchange_point_and_mark@@Base>:
   37a04:	stp	x29, x30, [sp, #-32]!
   37a08:	str	x19, [sp, #16]
   37a0c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37a10:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37a14:	ldr	x19, [x19, #3272]
   37a18:	ldr	x8, [x8, #2656]
   37a1c:	mov	x29, sp
   37a20:	ldr	w9, [x19]
   37a24:	ldr	w8, [x8]
   37a28:	cmp	w9, w8
   37a2c:	b.le	37a3c <rl_exchange_point_and_mark@@Base+0x38>
   37a30:	mov	w8, #0xffffffff            	// #-1
   37a34:	str	w8, [x19]
   37a38:	b	37a58 <rl_exchange_point_and_mark@@Base+0x54>
   37a3c:	tbnz	w9, #31, 37a58 <rl_exchange_point_and_mark@@Base+0x54>
   37a40:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37a44:	ldr	x10, [x10, #3512]
   37a48:	mov	w0, wzr
   37a4c:	ldr	w8, [x10]
   37a50:	str	w9, [x10]
   37a54:	b	37a64 <rl_exchange_point_and_mark@@Base+0x60>
   37a58:	bl	17390 <rl_ding@plt>
   37a5c:	mov	w8, wzr
   37a60:	mov	w0, #0x1                   	// #1
   37a64:	str	w8, [x19]
   37a68:	ldr	x19, [sp, #16]
   37a6c:	ldp	x29, x30, [sp], #32
   37a70:	ret

0000000000037a74 <_rl_init_locale@@Base>:
   37a74:	stp	x29, x30, [sp, #-32]!
   37a78:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   37a7c:	add	x0, x0, #0xf47
   37a80:	str	x19, [sp, #16]
   37a84:	mov	x29, sp
   37a88:	bl	163a0 <sh_get_env_value@plt>
   37a8c:	cbz	x0, 37a98 <_rl_init_locale@@Base+0x24>
   37a90:	ldrb	w8, [x0]
   37a94:	cbnz	w8, 37ad4 <_rl_init_locale@@Base+0x60>
   37a98:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   37a9c:	add	x0, x0, #0xf38
   37aa0:	bl	163a0 <sh_get_env_value@plt>
   37aa4:	cbz	x0, 37ab0 <_rl_init_locale@@Base+0x3c>
   37aa8:	ldrb	w8, [x0]
   37aac:	cbnz	w8, 37ad4 <_rl_init_locale@@Base+0x60>
   37ab0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   37ab4:	add	x0, x0, #0xf4e
   37ab8:	bl	163a0 <sh_get_env_value@plt>
   37abc:	cbz	x0, 37ac8 <_rl_init_locale@@Base+0x54>
   37ac0:	ldrb	w8, [x0]
   37ac4:	cbnz	w8, 37ad4 <_rl_init_locale@@Base+0x60>
   37ac8:	mov	w0, wzr
   37acc:	mov	x1, xzr
   37ad0:	bl	179a0 <setlocale@plt>
   37ad4:	adrp	x8, 3f000 <filename_completion_function@@Base+0x580>
   37ad8:	add	x8, x8, #0xec9
   37adc:	cmp	x0, #0x0
   37ae0:	csel	x1, x8, x0, eq  // eq = none
   37ae4:	mov	w0, wzr
   37ae8:	bl	179a0 <setlocale@plt>
   37aec:	mov	x19, x0
   37af0:	cbz	x0, 37b24 <_rl_init_locale@@Base+0xb0>
   37af4:	ldrb	w8, [x19]
   37af8:	cbz	w8, 37b40 <_rl_init_locale@@Base+0xcc>
   37afc:	mov	w0, #0xe                   	// #14
   37b00:	bl	16940 <nl_langinfo@plt>
   37b04:	ldrb	w8, [x0]
   37b08:	cmp	w8, #0x75
   37b0c:	b.eq	37b2c <_rl_init_locale@@Base+0xb8>  // b.none
   37b10:	cmp	w8, #0x55
   37b14:	b.ne	37b24 <_rl_init_locale@@Base+0xb0>  // b.any
   37b18:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   37b1c:	add	x1, x1, #0xf53
   37b20:	b	37b34 <_rl_init_locale@@Base+0xc0>
   37b24:	mov	w8, wzr
   37b28:	b	37b40 <_rl_init_locale@@Base+0xcc>
   37b2c:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   37b30:	add	x1, x1, #0xf59
   37b34:	bl	170a0 <strcmp@plt>
   37b38:	cmp	w0, #0x0
   37b3c:	cset	w8, eq  // eq = none
   37b40:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37b44:	ldr	x9, [x9, #3088]
   37b48:	mov	x0, x19
   37b4c:	ldr	x19, [sp, #16]
   37b50:	str	w8, [x9]
   37b54:	ldp	x29, x30, [sp], #32
   37b58:	ret

0000000000037b5c <_rl_init_eightbit@@Base>:
   37b5c:	stp	x29, x30, [sp, #-16]!
   37b60:	mov	x29, sp
   37b64:	bl	17210 <_rl_init_locale@plt>
   37b68:	cbz	x0, 37bd0 <_rl_init_eightbit@@Base+0x74>
   37b6c:	ldrb	w8, [x0]
   37b70:	cbz	w8, 37b8c <_rl_init_eightbit@@Base+0x30>
   37b74:	cmp	w8, #0x50
   37b78:	b.eq	37b98 <_rl_init_eightbit@@Base+0x3c>  // b.none
   37b7c:	cmp	w8, #0x43
   37b80:	b.ne	37ba8 <_rl_init_eightbit@@Base+0x4c>  // b.any
   37b84:	ldrb	w8, [x0, #1]
   37b88:	cbnz	w8, 37ba8 <_rl_init_eightbit@@Base+0x4c>
   37b8c:	mov	w0, wzr
   37b90:	ldp	x29, x30, [sp], #16
   37b94:	ret
   37b98:	adrp	x1, 3f000 <filename_completion_function@@Base+0x580>
   37b9c:	add	x1, x1, #0xf41
   37ba0:	bl	170a0 <strcmp@plt>
   37ba4:	cbz	w0, 37bd0 <_rl_init_eightbit@@Base+0x74>
   37ba8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37bac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37bb0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37bb4:	ldr	x8, [x8, #3352]
   37bb8:	ldr	x9, [x9, #3456]
   37bbc:	ldr	x10, [x10, #2400]
   37bc0:	mov	w0, #0x1                   	// #1
   37bc4:	str	w0, [x8]
   37bc8:	str	wzr, [x9]
   37bcc:	str	w0, [x10]
   37bd0:	ldp	x29, x30, [sp], #16
   37bd4:	ret

0000000000037bd8 <_rl_arg_overflow@@Base>:
   37bd8:	stp	x29, x30, [sp, #-16]!
   37bdc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37be0:	ldr	x8, [x8, #3904]
   37be4:	mov	w10, #0x4241                	// #16961
   37be8:	movk	w10, #0xf, lsl #16
   37bec:	mov	x29, sp
   37bf0:	ldr	w9, [x8]
   37bf4:	cmp	w9, w10
   37bf8:	b.lt	37c44 <_rl_arg_overflow@@Base+0x6c>  // b.tstop
   37bfc:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c00:	ldr	x9, [x9, #2680]
   37c04:	str	wzr, [x8]
   37c08:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c0c:	ldr	x8, [x8, #3792]
   37c10:	str	wzr, [x9]
   37c14:	str	wzr, [x8]
   37c18:	bl	17390 <rl_ding@plt>
   37c1c:	bl	173f0 <rl_restore_prompt@plt>
   37c20:	bl	17420 <rl_clear_message@plt>
   37c24:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c28:	ldr	x8, [x8, #2984]
   37c2c:	mov	w0, #0x1                   	// #1
   37c30:	ldr	x9, [x8]
   37c34:	and	x9, x9, #0xfffffffffffffbff
   37c38:	str	x9, [x8]
   37c3c:	ldp	x29, x30, [sp], #16
   37c40:	ret
   37c44:	mov	w0, wzr
   37c48:	ldp	x29, x30, [sp], #16
   37c4c:	ret

0000000000037c50 <_rl_arg_init@@Base>:
   37c50:	stp	x29, x30, [sp, #-16]!
   37c54:	mov	x29, sp
   37c58:	bl	17780 <rl_save_prompt@plt>
   37c5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c60:	ldr	x8, [x8, #2984]
   37c64:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c68:	ldr	x9, [x8]
   37c6c:	ldr	x10, [x10, #2680]
   37c70:	orr	x9, x9, #0x400
   37c74:	str	wzr, [x10]
   37c78:	str	x9, [x8]
   37c7c:	ldp	x29, x30, [sp], #16
   37c80:	ret

0000000000037c84 <_rl_arg_getchar@@Base>:
   37c84:	stp	x29, x30, [sp, #-32]!
   37c88:	str	x19, [sp, #16]
   37c8c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37c94:	ldr	x8, [x8, #3720]
   37c98:	ldr	x9, [x9, #3904]
   37c9c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   37ca0:	add	x0, x0, #0xf5e
   37ca4:	ldr	w8, [x8]
   37ca8:	ldr	w9, [x9]
   37cac:	mov	x29, sp
   37cb0:	mul	w1, w9, w8
   37cb4:	bl	16e50 <rl_message@plt>
   37cb8:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37cbc:	ldr	x19, [x19, #2984]
   37cc0:	ldr	x8, [x19]
   37cc4:	orr	x8, x8, #0x40
   37cc8:	str	x8, [x19]
   37ccc:	bl	16e60 <rl_read_key@plt>
   37cd0:	ldr	x8, [x19]
   37cd4:	and	x8, x8, #0xffffffffffffffbf
   37cd8:	str	x8, [x19]
   37cdc:	ldr	x19, [sp, #16]
   37ce0:	ldp	x29, x30, [sp], #32
   37ce4:	ret

0000000000037ce8 <_rl_arg_dispatch@@Base>:
   37ce8:	stp	x29, x30, [sp, #-48]!
   37cec:	stp	x20, x19, [sp, #32]
   37cf0:	mov	w19, w1
   37cf4:	str	x21, [sp, #16]
   37cf8:	mov	x29, sp
   37cfc:	tbnz	w1, #31, 37d34 <_rl_arg_dispatch@@Base+0x4c>
   37d00:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d04:	ldr	x20, [x20, #1992]
   37d08:	mov	w9, w19
   37d0c:	lsl	x10, x9, #4
   37d10:	ldr	x8, [x20]
   37d14:	ldrb	w10, [x8, x10]
   37d18:	cbnz	w10, 37d34 <_rl_arg_dispatch@@Base+0x4c>
   37d1c:	add	x8, x8, x9, lsl #4
   37d20:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d24:	ldr	x8, [x8, #8]
   37d28:	ldr	x9, [x9, #3928]
   37d2c:	cmp	x8, x9
   37d30:	b.eq	37e70 <_rl_arg_dispatch@@Base+0x188>  // b.none
   37d34:	and	w9, w19, #0xffffff7f
   37d38:	sub	w8, w9, #0x30
   37d3c:	cmp	w8, #0x9
   37d40:	b.hi	37d94 <_rl_arg_dispatch@@Base+0xac>  // b.pmore
   37d44:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d48:	ldr	x9, [x9, #3792]
   37d4c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d50:	ldr	x10, [x10, #3904]
   37d54:	mov	w0, #0x1                   	// #1
   37d58:	ldr	w11, [x9]
   37d5c:	str	w0, [x9]
   37d60:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d64:	ldr	w12, [x10]
   37d68:	ldr	x9, [x9, #2680]
   37d6c:	cmp	w11, #0x0
   37d70:	add	w12, w12, w12, lsl #2
   37d74:	ldr	w11, [x9]
   37d78:	lsl	w12, w12, #1
   37d7c:	csel	w12, wzr, w12, eq  // eq = none
   37d80:	add	w8, w12, w8
   37d84:	orr	w11, w11, #0x2
   37d88:	str	w8, [x10]
   37d8c:	str	w11, [x9]
   37d90:	b	37f0c <_rl_arg_dispatch@@Base+0x224>
   37d94:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37d98:	ldr	x8, [x8, #3792]
   37d9c:	cmp	w9, #0x2d
   37da0:	ldr	w10, [x8]
   37da4:	b.ne	37de4 <_rl_arg_dispatch@@Base+0xfc>  // b.any
   37da8:	cbnz	w10, 37de4 <_rl_arg_dispatch@@Base+0xfc>
   37dac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37db0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37db4:	ldr	x8, [x8, #3904]
   37db8:	ldr	x9, [x9, #2680]
   37dbc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37dc0:	mov	w0, #0x1                   	// #1
   37dc4:	mov	w12, #0xffffffff            	// #-1
   37dc8:	ldr	w10, [x9]
   37dcc:	ldr	x11, [x11, #3720]
   37dd0:	str	w0, [x8]
   37dd4:	orr	w8, w10, #0x1
   37dd8:	str	w8, [x9]
   37ddc:	str	w12, [x11]
   37de0:	b	37f0c <_rl_arg_dispatch@@Base+0x224>
   37de4:	cbnz	w10, 37e10 <_rl_arg_dispatch@@Base+0x128>
   37de8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37dec:	ldr	x9, [x9, #2680]
   37df0:	ldr	w9, [x9]
   37df4:	tbz	w9, #0, 37e10 <_rl_arg_dispatch@@Base+0x128>
   37df8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37dfc:	ldr	x9, [x9, #3904]
   37e00:	ldr	w9, [x9]
   37e04:	cmp	w9, #0x1
   37e08:	b.ne	37e10 <_rl_arg_dispatch@@Base+0x128>  // b.any
   37e0c:	str	w9, [x8]
   37e10:	bl	173f0 <rl_restore_prompt@plt>
   37e14:	bl	17420 <rl_clear_message@plt>
   37e18:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e1c:	ldr	x20, [x20, #2984]
   37e20:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e24:	mov	w0, w19
   37e28:	ldr	x8, [x20]
   37e2c:	ldr	x9, [x9, #1992]
   37e30:	and	x8, x8, #0xfffffffffffffbff
   37e34:	ldr	x1, [x9]
   37e38:	str	x8, [x20]
   37e3c:	bl	16c30 <_rl_dispatch@plt>
   37e40:	ldrb	w8, [x20, #2]
   37e44:	tbz	w8, #3, 37f0c <_rl_arg_dispatch@@Base+0x224>
   37e48:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e4c:	ldr	x8, [x8, #3296]
   37e50:	ldr	w8, [x8]
   37e54:	cbnz	w8, 37e68 <_rl_arg_dispatch@@Base+0x180>
   37e58:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e5c:	ldr	x8, [x8, #2664]
   37e60:	ldr	x8, [x8]
   37e64:	blr	x8
   37e68:	mov	w0, wzr
   37e6c:	b	37f0c <_rl_arg_dispatch@@Base+0x224>
   37e70:	tbnz	w0, #1, 37e90 <_rl_arg_dispatch@@Base+0x1a8>
   37e74:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e78:	ldr	x8, [x8, #3904]
   37e7c:	mov	w0, #0x1                   	// #1
   37e80:	ldr	w9, [x8]
   37e84:	lsl	w9, w9, #2
   37e88:	str	w9, [x8]
   37e8c:	b	37f0c <_rl_arg_dispatch@@Base+0x224>
   37e90:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37e94:	ldr	x21, [x21, #2984]
   37e98:	ldr	x8, [x21]
   37e9c:	tbnz	w8, #19, 37eec <_rl_arg_dispatch@@Base+0x204>
   37ea0:	orr	x8, x8, #0x40
   37ea4:	str	x8, [x21]
   37ea8:	bl	16e60 <rl_read_key@plt>
   37eac:	ldr	x8, [x21]
   37eb0:	mov	w19, w0
   37eb4:	and	x8, x8, #0xffffffffffffffbf
   37eb8:	str	x8, [x21]
   37ebc:	bl	173f0 <rl_restore_prompt@plt>
   37ec0:	bl	17420 <rl_clear_message@plt>
   37ec4:	ldr	x8, [x21]
   37ec8:	and	x8, x8, #0xfffffffffffffbff
   37ecc:	str	x8, [x21]
   37ed0:	tbnz	w19, #31, 37f08 <_rl_arg_dispatch@@Base+0x220>
   37ed4:	ldr	x1, [x20]
   37ed8:	mov	w0, w19
   37edc:	ldp	x20, x19, [sp, #32]
   37ee0:	ldr	x21, [sp, #16]
   37ee4:	ldp	x29, x30, [sp], #48
   37ee8:	b	16c30 <_rl_dispatch@plt>
   37eec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37ef0:	ldr	x8, [x8, #2680]
   37ef4:	mov	w0, wzr
   37ef8:	ldr	w9, [x8]
   37efc:	orr	w9, w9, #0x4
   37f00:	str	w9, [x8]
   37f04:	b	37f0c <_rl_arg_dispatch@@Base+0x224>
   37f08:	mov	w0, #0xffffffff            	// #-1
   37f0c:	ldp	x20, x19, [sp, #32]
   37f10:	ldr	x21, [sp, #16]
   37f14:	ldp	x29, x30, [sp], #48
   37f18:	ret

0000000000037f1c <rl_universal_argument@@Base>:
   37f1c:	stp	x29, x30, [sp, #-64]!
   37f20:	stp	x24, x23, [sp, #16]
   37f24:	stp	x22, x21, [sp, #32]
   37f28:	stp	x20, x19, [sp, #48]
   37f2c:	mov	x29, sp
   37f30:	bl	17780 <rl_save_prompt@plt>
   37f34:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37f38:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37f3c:	ldr	x20, [x20, #2984]
   37f40:	ldr	x21, [x21, #3904]
   37f44:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37f48:	mov	w0, wzr
   37f4c:	ldr	x10, [x20]
   37f50:	ldr	w9, [x21]
   37f54:	ldr	x22, [x22, #2680]
   37f58:	orr	x11, x10, #0x400
   37f5c:	lsl	w8, w9, #2
   37f60:	str	wzr, [x22]
   37f64:	str	x11, [x20]
   37f68:	str	w8, [x21]
   37f6c:	tbnz	w10, #19, 37fb0 <rl_universal_argument@@Base+0x94>
   37f70:	mov	w10, #0xd090                	// #53392
   37f74:	movk	w10, #0x3, lsl #16
   37f78:	cmp	w9, w10
   37f7c:	b.le	37fc4 <rl_universal_argument@@Base+0xa8>
   37f80:	str	wzr, [x22]
   37f84:	str	wzr, [x21]
   37f88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37f8c:	ldr	x8, [x8, #3792]
   37f90:	str	wzr, [x8]
   37f94:	bl	17390 <rl_ding@plt>
   37f98:	bl	173f0 <rl_restore_prompt@plt>
   37f9c:	bl	17420 <rl_clear_message@plt>
   37fa0:	ldr	x8, [x20]
   37fa4:	mov	w0, #0x1                   	// #1
   37fa8:	and	x8, x8, #0xfffffffffffffbff
   37fac:	str	x8, [x20]
   37fb0:	ldp	x20, x19, [sp, #48]
   37fb4:	ldp	x22, x21, [sp, #32]
   37fb8:	ldp	x24, x23, [sp, #16]
   37fbc:	ldp	x29, x30, [sp], #64
   37fc0:	ret
   37fc4:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   37fc8:	ldr	x23, [x23, #3720]
   37fcc:	adrp	x19, 3f000 <filename_completion_function@@Base+0x580>
   37fd0:	mov	w24, #0x4241                	// #16961
   37fd4:	add	x19, x19, #0xf5e
   37fd8:	movk	w24, #0xf, lsl #16
   37fdc:	ldr	w9, [x23]
   37fe0:	mov	x0, x19
   37fe4:	mul	w1, w8, w9
   37fe8:	bl	16e50 <rl_message@plt>
   37fec:	ldr	x8, [x20]
   37ff0:	orr	x8, x8, #0x40
   37ff4:	str	x8, [x20]
   37ff8:	bl	16e60 <rl_read_key@plt>
   37ffc:	ldr	x8, [x20]
   38000:	and	x8, x8, #0xffffffffffffffbf
   38004:	str	x8, [x20]
   38008:	tbnz	w0, #31, 38038 <rl_universal_argument@@Base+0x11c>
   3800c:	mov	w1, w0
   38010:	ldr	w0, [x22]
   38014:	bl	17810 <_rl_arg_dispatch@plt>
   38018:	cmp	w0, #0x1
   3801c:	b.lt	37fb0 <rl_universal_argument@@Base+0x94>  // b.tstop
   38020:	ldrb	w8, [x20, #1]
   38024:	tbz	w8, #2, 37fb0 <rl_universal_argument@@Base+0x94>
   38028:	ldr	w8, [x21]
   3802c:	cmp	w8, w24
   38030:	b.lt	37fdc <rl_universal_argument@@Base+0xc0>  // b.tstop
   38034:	b	37f80 <rl_universal_argument@@Base+0x64>
   38038:	bl	174a0 <_rl_abort_internal@plt>
   3803c:	mov	w0, #0xffffffff            	// #-1
   38040:	b	37fb0 <rl_universal_argument@@Base+0x94>

0000000000038044 <_rl_reset_argument@@Base>:
   38044:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38048:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3804c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38050:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38054:	ldr	x8, [x8, #3720]
   38058:	ldr	x10, [x10, #3904]
   3805c:	ldr	x11, [x11, #3792]
   38060:	ldr	x12, [x12, #2680]
   38064:	mov	w9, #0x1                   	// #1
   38068:	str	w9, [x8]
   3806c:	str	w9, [x10]
   38070:	str	wzr, [x11]
   38074:	str	wzr, [x12]
   38078:	ret

000000000003807c <rl_digit_argument@@Base>:
   3807c:	stp	x29, x30, [sp, #-64]!
   38080:	stp	x24, x23, [sp, #16]
   38084:	stp	x22, x21, [sp, #32]
   38088:	stp	x20, x19, [sp, #48]
   3808c:	mov	x29, sp
   38090:	mov	w19, w1
   38094:	bl	17780 <rl_save_prompt@plt>
   38098:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3809c:	ldr	x20, [x20, #2984]
   380a0:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   380a4:	ldr	x8, [x20]
   380a8:	ldr	x21, [x21, #2680]
   380ac:	orr	x9, x8, #0x400
   380b0:	str	wzr, [x21]
   380b4:	str	x9, [x20]
   380b8:	tbnz	w8, #19, 38140 <rl_digit_argument@@Base+0xc4>
   380bc:	mov	w0, w19
   380c0:	bl	16b90 <rl_execute_next@plt>
   380c4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   380c8:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   380cc:	ldr	x22, [x22, #3904]
   380d0:	ldr	x24, [x24, #3720]
   380d4:	mov	w23, #0x4241                	// #16961
   380d8:	adrp	x19, 3f000 <filename_completion_function@@Base+0x580>
   380dc:	movk	w23, #0xf, lsl #16
   380e0:	add	x19, x19, #0xf5e
   380e4:	ldr	w8, [x22]
   380e8:	cmp	w8, w23
   380ec:	b.ge	3817c <rl_digit_argument@@Base+0x100>  // b.tcont
   380f0:	ldr	w9, [x24]
   380f4:	mov	x0, x19
   380f8:	mul	w1, w8, w9
   380fc:	bl	16e50 <rl_message@plt>
   38100:	ldr	x8, [x20]
   38104:	orr	x8, x8, #0x40
   38108:	str	x8, [x20]
   3810c:	bl	16e60 <rl_read_key@plt>
   38110:	ldr	x8, [x20]
   38114:	and	x8, x8, #0xffffffffffffffbf
   38118:	str	x8, [x20]
   3811c:	tbnz	w0, #31, 381b0 <rl_digit_argument@@Base+0x134>
   38120:	mov	w1, w0
   38124:	ldr	w0, [x21]
   38128:	bl	17810 <_rl_arg_dispatch@plt>
   3812c:	cmp	w0, #0x1
   38130:	b.lt	381b8 <rl_digit_argument@@Base+0x13c>  // b.tstop
   38134:	ldrb	w8, [x20, #1]
   38138:	tbnz	w8, #2, 380e4 <rl_digit_argument@@Base+0x68>
   3813c:	b	381b8 <rl_digit_argument@@Base+0x13c>
   38140:	mov	w0, wzr
   38144:	mov	w1, w19
   38148:	bl	17810 <_rl_arg_dispatch@plt>
   3814c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38150:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38154:	ldr	x8, [x8, #3720]
   38158:	ldr	x9, [x9, #3904]
   3815c:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   38160:	add	x0, x0, #0xf5e
   38164:	ldr	w8, [x8]
   38168:	ldr	w9, [x9]
   3816c:	mul	w1, w9, w8
   38170:	bl	16e50 <rl_message@plt>
   38174:	mov	w0, wzr
   38178:	b	381b8 <rl_digit_argument@@Base+0x13c>
   3817c:	str	wzr, [x21]
   38180:	str	wzr, [x22]
   38184:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38188:	ldr	x8, [x8, #3792]
   3818c:	str	wzr, [x8]
   38190:	bl	17390 <rl_ding@plt>
   38194:	bl	173f0 <rl_restore_prompt@plt>
   38198:	bl	17420 <rl_clear_message@plt>
   3819c:	ldr	x8, [x20]
   381a0:	mov	w0, #0x1                   	// #1
   381a4:	and	x8, x8, #0xfffffffffffffbff
   381a8:	str	x8, [x20]
   381ac:	b	381b8 <rl_digit_argument@@Base+0x13c>
   381b0:	bl	174a0 <_rl_abort_internal@plt>
   381b4:	mov	w0, #0xffffffff            	// #-1
   381b8:	ldp	x20, x19, [sp, #48]
   381bc:	ldp	x22, x21, [sp, #32]
   381c0:	ldp	x24, x23, [sp, #16]
   381c4:	ldp	x29, x30, [sp], #64
   381c8:	ret

00000000000381cc <_rl_arg_callback@@Base>:
   381cc:	stp	x29, x30, [sp, #-64]!
   381d0:	str	x23, [sp, #16]
   381d4:	stp	x22, x21, [sp, #32]
   381d8:	stp	x20, x19, [sp, #48]
   381dc:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   381e0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   381e4:	ldr	x21, [x21, #3720]
   381e8:	ldr	x22, [x22, #3904]
   381ec:	mov	w19, w0
   381f0:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   381f4:	ldr	w8, [x21]
   381f8:	ldr	w9, [x22]
   381fc:	add	x0, x0, #0xf5e
   38200:	mov	x29, sp
   38204:	mul	w1, w9, w8
   38208:	bl	16e50 <rl_message@plt>
   3820c:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38210:	ldr	x23, [x23, #2984]
   38214:	ldr	x8, [x23]
   38218:	orr	x8, x8, #0x40
   3821c:	str	x8, [x23]
   38220:	bl	16e60 <rl_read_key@plt>
   38224:	ldr	x8, [x23]
   38228:	and	x8, x8, #0xffffffffffffffbf
   3822c:	str	x8, [x23]
   38230:	tbnz	w0, #31, 38284 <_rl_arg_callback@@Base+0xb8>
   38234:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38238:	ldr	x8, [x8, #2680]
   3823c:	mov	w20, w0
   38240:	ldr	w9, [x8]
   38244:	tbnz	w9, #2, 3828c <_rl_arg_callback@@Base+0xc0>
   38248:	mov	w0, w19
   3824c:	mov	w1, w20
   38250:	bl	17810 <_rl_arg_dispatch@plt>
   38254:	mov	w19, w0
   38258:	cmp	w0, #0x1
   3825c:	b.lt	38278 <_rl_arg_callback@@Base+0xac>  // b.tstop
   38260:	ldr	w8, [x21]
   38264:	ldr	w9, [x22]
   38268:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   3826c:	add	x0, x0, #0xf5e
   38270:	mul	w1, w9, w8
   38274:	bl	16e50 <rl_message@plt>
   38278:	cmp	w19, #0x1
   3827c:	cset	w0, ne  // ne = any
   38280:	b	382b4 <_rl_arg_callback@@Base+0xe8>
   38284:	mov	w0, #0x1                   	// #1
   38288:	b	382b4 <_rl_arg_callback@@Base+0xe8>
   3828c:	and	w9, w9, #0xfffffffb
   38290:	str	w9, [x8]
   38294:	bl	173f0 <rl_restore_prompt@plt>
   38298:	bl	17420 <rl_clear_message@plt>
   3829c:	ldr	x8, [x23]
   382a0:	mov	w0, w20
   382a4:	and	x8, x8, #0xfffffffffffffbff
   382a8:	str	x8, [x23]
   382ac:	bl	16b90 <rl_execute_next@plt>
   382b0:	mov	w0, wzr
   382b4:	ldp	x20, x19, [sp, #48]
   382b8:	ldp	x22, x21, [sp, #32]
   382bc:	ldr	x23, [sp, #16]
   382c0:	ldp	x29, x30, [sp], #64
   382c4:	ret

00000000000382c8 <rl_discard_argument@@Base>:
   382c8:	stp	x29, x30, [sp, #-16]!
   382cc:	mov	x29, sp
   382d0:	bl	17390 <rl_ding@plt>
   382d4:	bl	17420 <rl_clear_message@plt>
   382d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   382dc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   382e0:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   382e4:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   382e8:	ldr	x8, [x8, #3720]
   382ec:	ldr	x10, [x10, #3904]
   382f0:	ldr	x11, [x11, #3792]
   382f4:	ldr	x12, [x12, #2680]
   382f8:	mov	w9, #0x1                   	// #1
   382fc:	str	w9, [x8]
   38300:	str	w9, [x10]
   38304:	str	wzr, [x11]
   38308:	str	wzr, [x12]
   3830c:	mov	w0, wzr
   38310:	ldp	x29, x30, [sp], #16
   38314:	ret

0000000000038318 <_rl_start_using_history@@Base>:
   38318:	stp	x29, x30, [sp, #-32]!
   3831c:	stp	x20, x19, [sp, #16]
   38320:	mov	x29, sp
   38324:	bl	170c0 <using_history@plt>
   38328:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3832c:	ldr	x20, [x20, #3672]
   38330:	ldr	x19, [x20]
   38334:	cbz	x19, 38358 <_rl_start_using_history@@Base+0x40>
   38338:	ldr	x0, [x19]
   3833c:	cbz	x0, 38344 <_rl_start_using_history@@Base+0x2c>
   38340:	bl	171b0 <free@plt>
   38344:	ldr	x0, [x19, #8]
   38348:	cbz	x0, 38350 <_rl_start_using_history@@Base+0x38>
   3834c:	bl	171b0 <free@plt>
   38350:	mov	x0, x19
   38354:	bl	169f0 <xfree@plt>
   38358:	str	xzr, [x20]
   3835c:	ldp	x20, x19, [sp, #16]
   38360:	ldp	x29, x30, [sp], #32
   38364:	ret

0000000000038368 <_rl_free_history_entry@@Base>:
   38368:	cbz	x0, 383a4 <_rl_free_history_entry@@Base+0x3c>
   3836c:	stp	x29, x30, [sp, #-32]!
   38370:	str	x19, [sp, #16]
   38374:	mov	x19, x0
   38378:	ldr	x0, [x0]
   3837c:	mov	x29, sp
   38380:	cbz	x0, 38388 <_rl_free_history_entry@@Base+0x20>
   38384:	bl	171b0 <free@plt>
   38388:	ldr	x0, [x19, #8]
   3838c:	cbz	x0, 38394 <_rl_free_history_entry@@Base+0x2c>
   38390:	bl	171b0 <free@plt>
   38394:	mov	x0, x19
   38398:	ldr	x19, [sp, #16]
   3839c:	ldp	x29, x30, [sp], #32
   383a0:	b	169f0 <xfree@plt>
   383a4:	ret

00000000000383a8 <rl_maybe_replace_line@@Base>:
   383a8:	stp	x29, x30, [sp, #-32]!
   383ac:	str	x19, [sp, #16]
   383b0:	mov	x29, sp
   383b4:	bl	16a60 <current_history@plt>
   383b8:	cbz	x0, 3840c <rl_maybe_replace_line@@Base+0x64>
   383bc:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   383c0:	ldr	x8, [x0, #16]
   383c4:	ldr	x19, [x19, #3040]
   383c8:	ldr	x9, [x19]
   383cc:	cmp	x8, x9
   383d0:	b.eq	3840c <rl_maybe_replace_line@@Base+0x64>  // b.none
   383d4:	bl	165a0 <where_history@plt>
   383d8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   383dc:	ldr	x8, [x8, #2480]
   383e0:	ldr	x2, [x19]
   383e4:	ldr	x1, [x8]
   383e8:	bl	17920 <replace_history_entry@plt>
   383ec:	mov	x19, x0
   383f0:	ldr	x0, [x0]
   383f4:	bl	169f0 <xfree@plt>
   383f8:	ldr	x0, [x19, #8]
   383fc:	cbz	x0, 38404 <rl_maybe_replace_line@@Base+0x5c>
   38400:	bl	171b0 <free@plt>
   38404:	mov	x0, x19
   38408:	bl	169f0 <xfree@plt>
   3840c:	ldr	x19, [sp, #16]
   38410:	mov	w0, wzr
   38414:	ldp	x29, x30, [sp], #32
   38418:	ret

000000000003841c <rl_maybe_unsave_line@@Base>:
   3841c:	stp	x29, x30, [sp, #-32]!
   38420:	stp	x20, x19, [sp, #16]
   38424:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38428:	ldr	x20, [x20, #3672]
   3842c:	mov	x29, sp
   38430:	ldr	x8, [x20]
   38434:	cbz	x8, 3849c <rl_maybe_unsave_line@@Base+0x80>
   38438:	ldr	x0, [x8]
   3843c:	mov	w1, wzr
   38440:	bl	17600 <rl_replace_line@plt>
   38444:	ldr	x19, [x20]
   38448:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3844c:	ldr	x8, [x19, #16]
   38450:	ldr	x9, [x9, #3040]
   38454:	str	x8, [x9]
   38458:	cbz	x19, 3847c <rl_maybe_unsave_line@@Base+0x60>
   3845c:	ldr	x0, [x19]
   38460:	cbz	x0, 38468 <rl_maybe_unsave_line@@Base+0x4c>
   38464:	bl	171b0 <free@plt>
   38468:	ldr	x0, [x19, #8]
   3846c:	cbz	x0, 38474 <rl_maybe_unsave_line@@Base+0x58>
   38470:	bl	171b0 <free@plt>
   38474:	mov	x0, x19
   38478:	bl	169f0 <xfree@plt>
   3847c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38480:	ldr	x8, [x8, #2656]
   38484:	str	xzr, [x20]
   38488:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3848c:	ldr	w8, [x8]
   38490:	ldr	x9, [x9, #3512]
   38494:	str	w8, [x9]
   38498:	b	384a0 <rl_maybe_unsave_line@@Base+0x84>
   3849c:	bl	17390 <rl_ding@plt>
   384a0:	ldp	x20, x19, [sp, #16]
   384a4:	mov	w0, wzr
   384a8:	ldp	x29, x30, [sp], #32
   384ac:	ret

00000000000384b0 <rl_maybe_save_line@@Base>:
   384b0:	stp	x29, x30, [sp, #-32]!
   384b4:	stp	x20, x19, [sp, #16]
   384b8:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   384bc:	ldr	x19, [x19, #3672]
   384c0:	mov	x29, sp
   384c4:	ldr	x8, [x19]
   384c8:	cbnz	x8, 3851c <rl_maybe_save_line@@Base+0x6c>
   384cc:	mov	w0, #0x18                  	// #24
   384d0:	bl	16bf0 <xmalloc@plt>
   384d4:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   384d8:	ldr	x20, [x20, #2480]
   384dc:	str	x0, [x19]
   384e0:	ldr	x8, [x20]
   384e4:	mov	x0, x8
   384e8:	bl	16440 <strlen@plt>
   384ec:	add	x0, x0, #0x1
   384f0:	bl	16bf0 <xmalloc@plt>
   384f4:	ldr	x1, [x20]
   384f8:	bl	17480 <strcpy@plt>
   384fc:	ldr	x8, [x19]
   38500:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38504:	str	x0, [x8]
   38508:	ldr	x8, [x19]
   3850c:	str	xzr, [x8, #8]
   38510:	ldr	x9, [x9, #3040]
   38514:	ldr	x9, [x9]
   38518:	str	x9, [x8, #16]
   3851c:	ldp	x20, x19, [sp, #16]
   38520:	mov	w0, wzr
   38524:	ldp	x29, x30, [sp], #32
   38528:	ret

000000000003852c <_rl_free_saved_history_line@@Base>:
   3852c:	stp	x29, x30, [sp, #-32]!
   38530:	stp	x20, x19, [sp, #16]
   38534:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38538:	ldr	x20, [x20, #3672]
   3853c:	mov	x29, sp
   38540:	ldr	x19, [x20]
   38544:	cbz	x19, 3856c <_rl_free_saved_history_line@@Base+0x40>
   38548:	ldr	x0, [x19]
   3854c:	cbz	x0, 38554 <_rl_free_saved_history_line@@Base+0x28>
   38550:	bl	171b0 <free@plt>
   38554:	ldr	x0, [x19, #8]
   38558:	cbz	x0, 38560 <_rl_free_saved_history_line@@Base+0x34>
   3855c:	bl	171b0 <free@plt>
   38560:	mov	x0, x19
   38564:	bl	169f0 <xfree@plt>
   38568:	str	xzr, [x20]
   3856c:	ldp	x20, x19, [sp, #16]
   38570:	mov	w0, wzr
   38574:	ldp	x29, x30, [sp], #32
   38578:	ret

000000000003857c <rl_replace_from_history@@Base>:
   3857c:	stp	x29, x30, [sp, #-32]!
   38580:	str	x19, [sp, #16]
   38584:	mov	x19, x0
   38588:	ldr	x0, [x0]
   3858c:	mov	w1, wzr
   38590:	mov	x29, sp
   38594:	bl	17600 <rl_replace_line@plt>
   38598:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3859c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   385a0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   385a4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   385a8:	ldr	x11, [x19, #16]
   385ac:	ldr	x12, [x12, #3040]
   385b0:	ldr	x9, [x9, #2656]
   385b4:	ldr	x8, [x8, #3512]
   385b8:	ldr	x10, [x10, #3416]
   385bc:	ldr	w9, [x9]
   385c0:	ldr	w13, [x10]
   385c4:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   385c8:	ldr	x10, [x10, #3272]
   385cc:	str	x11, [x12]
   385d0:	str	w9, [x8]
   385d4:	str	wzr, [x10]
   385d8:	cbnz	w13, 385e4 <rl_replace_from_history@@Base+0x68>
   385dc:	str	wzr, [x8]
   385e0:	str	w9, [x10]
   385e4:	ldr	x19, [sp, #16]
   385e8:	ldp	x29, x30, [sp], #32
   385ec:	ret

00000000000385f0 <_rl_revert_all_lines@@Base>:
   385f0:	stp	x29, x30, [sp, #-96]!
   385f4:	stp	x28, x27, [sp, #16]
   385f8:	stp	x26, x25, [sp, #32]
   385fc:	stp	x24, x23, [sp, #48]
   38600:	stp	x22, x21, [sp, #64]
   38604:	stp	x20, x19, [sp, #80]
   38608:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3860c:	ldr	x22, [x22, #2480]
   38610:	mov	x29, sp
   38614:	ldr	x0, [x22]
   38618:	bl	16440 <strlen@plt>
   3861c:	add	x0, x0, #0x1
   38620:	bl	16bf0 <xmalloc@plt>
   38624:	ldr	x1, [x22]
   38628:	mov	x19, x0
   3862c:	bl	17480 <strcpy@plt>
   38630:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38634:	ldr	x23, [x23, #3040]
   38638:	ldr	x24, [x23]
   3863c:	bl	165a0 <where_history@plt>
   38640:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38644:	ldr	x8, [x8, #3056]
   38648:	mov	w20, w0
   3864c:	ldr	w8, [x8]
   38650:	cmp	w0, w8
   38654:	b.ne	38668 <_rl_revert_all_lines@@Base+0x78>  // b.any
   38658:	bl	16d00 <previous_history@plt>
   3865c:	mov	x21, x0
   38660:	cbnz	x0, 38674 <_rl_revert_all_lines@@Base+0x84>
   38664:	b	38730 <_rl_revert_all_lines@@Base+0x140>
   38668:	bl	16a60 <current_history@plt>
   3866c:	mov	x21, x0
   38670:	cbz	x0, 38730 <_rl_revert_all_lines@@Base+0x140>
   38674:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38678:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3867c:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38680:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38684:	ldr	x25, [x25, #2656]
   38688:	ldr	x26, [x26, #3512]
   3868c:	ldr	x27, [x27, #3272]
   38690:	ldr	x28, [x28, #3416]
   38694:	b	386c0 <_rl_revert_all_lines@@Base+0xd0>
   38698:	ldr	x0, [x22]
   3869c:	bl	16440 <strlen@plt>
   386a0:	add	x0, x0, #0x1
   386a4:	bl	16bf0 <xmalloc@plt>
   386a8:	ldr	x1, [x22]
   386ac:	bl	17480 <strcpy@plt>
   386b0:	str	x0, [x21]
   386b4:	bl	16d00 <previous_history@plt>
   386b8:	mov	x21, x0
   386bc:	cbz	x0, 38730 <_rl_revert_all_lines@@Base+0x140>
   386c0:	ldr	x8, [x21, #16]
   386c4:	cbz	x8, 386b4 <_rl_revert_all_lines@@Base+0xc4>
   386c8:	ldr	x0, [x21]
   386cc:	cmp	x8, x24
   386d0:	mov	w1, wzr
   386d4:	csel	x24, xzr, x24, eq  // eq = none
   386d8:	bl	17600 <rl_replace_line@plt>
   386dc:	ldr	x8, [x21, #16]
   386e0:	ldr	w9, [x25]
   386e4:	ldr	w10, [x28]
   386e8:	str	wzr, [x27]
   386ec:	str	x8, [x23]
   386f0:	str	w9, [x26]
   386f4:	cbz	w10, 3871c <_rl_revert_all_lines@@Base+0x12c>
   386f8:	str	xzr, [x21, #16]
   386fc:	cbz	x8, 3870c <_rl_revert_all_lines@@Base+0x11c>
   38700:	bl	16f90 <rl_do_undo@plt>
   38704:	ldr	x8, [x23]
   38708:	cbnz	x8, 38700 <_rl_revert_all_lines@@Base+0x110>
   3870c:	ldr	x0, [x21]
   38710:	cbz	x0, 38698 <_rl_revert_all_lines@@Base+0xa8>
   38714:	bl	171b0 <free@plt>
   38718:	b	38698 <_rl_revert_all_lines@@Base+0xa8>
   3871c:	str	wzr, [x26]
   38720:	str	w9, [x27]
   38724:	str	xzr, [x21, #16]
   38728:	cbnz	x8, 38700 <_rl_revert_all_lines@@Base+0x110>
   3872c:	b	3870c <_rl_revert_all_lines@@Base+0x11c>
   38730:	mov	w0, w20
   38734:	str	x24, [x23]
   38738:	bl	173a0 <history_set_pos@plt>
   3873c:	mov	x0, x19
   38740:	mov	w1, wzr
   38744:	bl	17600 <rl_replace_line@plt>
   38748:	bl	16c50 <_rl_set_the_line@plt>
   3874c:	mov	x0, x19
   38750:	ldp	x20, x19, [sp, #80]
   38754:	ldp	x22, x21, [sp, #64]
   38758:	ldp	x24, x23, [sp, #48]
   3875c:	ldp	x26, x25, [sp, #32]
   38760:	ldp	x28, x27, [sp, #16]
   38764:	ldp	x29, x30, [sp], #96
   38768:	b	169f0 <xfree@plt>

000000000003876c <rl_clear_history@@Base>:
   3876c:	stp	x29, x30, [sp, #-64]!
   38770:	stp	x24, x23, [sp, #16]
   38774:	stp	x22, x21, [sp, #32]
   38778:	stp	x20, x19, [sp, #48]
   3877c:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38780:	ldr	x21, [x21, #3040]
   38784:	mov	x29, sp
   38788:	ldr	x22, [x21]
   3878c:	bl	16fb0 <history_list@plt>
   38790:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38794:	ldr	x23, [x23, #3056]
   38798:	ldr	w8, [x23]
   3879c:	cmp	w8, #0x1
   387a0:	b.lt	38808 <rl_clear_history@@Base+0x9c>  // b.tstop
   387a4:	mov	x19, x0
   387a8:	mov	x24, xzr
   387ac:	b	387c8 <rl_clear_history@@Base+0x5c>
   387b0:	mov	x0, x20
   387b4:	bl	169f0 <xfree@plt>
   387b8:	ldr	w8, [x23]
   387bc:	add	x24, x24, #0x1
   387c0:	cmp	x24, w8, sxtw
   387c4:	b.ge	38808 <rl_clear_history@@Base+0x9c>  // b.tcont
   387c8:	ldr	x20, [x19, x24, lsl #3]
   387cc:	ldr	x0, [x20, #16]
   387d0:	cbz	x0, 387e8 <rl_clear_history@@Base+0x7c>
   387d4:	cmp	x0, x22
   387d8:	csel	x22, xzr, x22, eq  // eq = none
   387dc:	bl	164b0 <_rl_free_undo_list@plt>
   387e0:	str	xzr, [x20, #16]
   387e4:	b	387ec <rl_clear_history@@Base+0x80>
   387e8:	cbz	x20, 387bc <rl_clear_history@@Base+0x50>
   387ec:	ldr	x0, [x20]
   387f0:	cbz	x0, 387f8 <rl_clear_history@@Base+0x8c>
   387f4:	bl	171b0 <free@plt>
   387f8:	ldr	x0, [x20, #8]
   387fc:	cbz	x0, 387b0 <rl_clear_history@@Base+0x44>
   38800:	bl	171b0 <free@plt>
   38804:	b	387b0 <rl_clear_history@@Base+0x44>
   38808:	str	wzr, [x23]
   3880c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38810:	ldr	x8, [x8, #2536]
   38814:	str	x22, [x21]
   38818:	ldp	x20, x19, [sp, #48]
   3881c:	ldp	x22, x21, [sp, #32]
   38820:	ldp	x24, x23, [sp, #16]
   38824:	str	wzr, [x8]
   38828:	ldp	x29, x30, [sp], #64
   3882c:	ret

0000000000038830 <rl_beginning_of_history@@Base>:
   38830:	stp	x29, x30, [sp, #-32]!
   38834:	str	x19, [sp, #16]
   38838:	mov	x29, sp
   3883c:	mov	w19, w1
   38840:	bl	165a0 <where_history@plt>
   38844:	add	w0, w0, #0x1
   38848:	mov	w1, w19
   3884c:	bl	17030 <rl_get_previous_history@plt>
   38850:	ldr	x19, [sp, #16]
   38854:	mov	w0, wzr
   38858:	ldp	x29, x30, [sp], #32
   3885c:	ret

0000000000038860 <rl_get_previous_history@@Base>:
   38860:	stp	x29, x30, [sp, #-48]!
   38864:	stp	x20, x19, [sp, #32]
   38868:	mov	w19, w0
   3886c:	stp	x22, x21, [sp, #16]
   38870:	mov	x29, sp
   38874:	tbnz	w0, #31, 38948 <rl_get_previous_history@@Base+0xe8>
   38878:	cbz	w19, 38950 <rl_get_previous_history@@Base+0xf0>
   3887c:	bl	16fb0 <history_list@plt>
   38880:	cbz	x0, 38950 <rl_get_previous_history@@Base+0xf0>
   38884:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38888:	ldr	x20, [x20, #3528]
   3888c:	ldr	w8, [x20]
   38890:	cmn	w8, #0x1
   38894:	b.ne	388c4 <rl_get_previous_history@@Base+0x64>  // b.any
   38898:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3889c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   388a0:	ldr	x8, [x8, #3512]
   388a4:	ldr	x9, [x9, #2656]
   388a8:	ldr	w8, [x8]
   388ac:	ldr	w9, [x9]
   388b0:	orr	w10, w9, w8
   388b4:	cbz	w10, 388c4 <rl_get_previous_history@@Base+0x64>
   388b8:	cmp	w8, w9
   388bc:	csinv	w8, w8, wzr, ne  // ne = any
   388c0:	str	w8, [x20]
   388c4:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   388c8:	ldr	x21, [x21, #3672]
   388cc:	ldr	x8, [x21]
   388d0:	cbnz	x8, 38924 <rl_get_previous_history@@Base+0xc4>
   388d4:	mov	w0, #0x18                  	// #24
   388d8:	bl	16bf0 <xmalloc@plt>
   388dc:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   388e0:	ldr	x22, [x22, #2480]
   388e4:	str	x0, [x21]
   388e8:	ldr	x8, [x22]
   388ec:	mov	x0, x8
   388f0:	bl	16440 <strlen@plt>
   388f4:	add	x0, x0, #0x1
   388f8:	bl	16bf0 <xmalloc@plt>
   388fc:	ldr	x1, [x22]
   38900:	bl	17480 <strcpy@plt>
   38904:	ldr	x8, [x21]
   38908:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3890c:	str	x0, [x8]
   38910:	ldr	x8, [x21]
   38914:	str	xzr, [x8, #8]
   38918:	ldr	x9, [x9, #3040]
   3891c:	ldr	x9, [x9]
   38920:	str	x9, [x8, #16]
   38924:	bl	17960 <rl_maybe_replace_line@plt>
   38928:	bl	16d00 <previous_history@plt>
   3892c:	cbz	x0, 38964 <rl_get_previous_history@@Base+0x104>
   38930:	subs	w19, w19, #0x1
   38934:	mov	x21, x0
   38938:	b.eq	3896c <rl_get_previous_history@@Base+0x10c>  // b.none
   3893c:	bl	16d00 <previous_history@plt>
   38940:	cbnz	x0, 38930 <rl_get_previous_history@@Base+0xd0>
   38944:	b	38970 <rl_get_previous_history@@Base+0x110>
   38948:	neg	w0, w19
   3894c:	bl	17330 <rl_get_next_history@plt>
   38950:	ldp	x20, x19, [sp, #32]
   38954:	ldp	x22, x21, [sp, #16]
   38958:	mov	w0, wzr
   3895c:	ldp	x29, x30, [sp], #48
   38960:	ret
   38964:	mov	x21, xzr
   38968:	b	38970 <rl_get_previous_history@@Base+0x110>
   3896c:	mov	x0, x21
   38970:	cmp	x0, #0x0
   38974:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   38978:	csel	x19, x21, x0, ne  // ne = any
   3897c:	cbz	x19, 38a38 <rl_get_previous_history@@Base+0x1d8>
   38980:	ldr	x0, [x19]
   38984:	mov	w1, wzr
   38988:	bl	17600 <rl_replace_line@plt>
   3898c:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38990:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38994:	ldr	x12, [x19, #16]
   38998:	ldr	x13, [x13, #3040]
   3899c:	ldr	x8, [x8, #2656]
   389a0:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389a4:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389a8:	ldr	x10, [x10, #3512]
   389ac:	ldr	x11, [x11, #3416]
   389b0:	ldr	w9, [x8]
   389b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389b8:	ldr	w11, [x11]
   389bc:	ldr	x8, [x8, #3272]
   389c0:	str	x12, [x13]
   389c4:	str	w9, [x10]
   389c8:	str	wzr, [x8]
   389cc:	cbnz	w11, 389d8 <rl_get_previous_history@@Base+0x178>
   389d0:	str	wzr, [x10]
   389d4:	str	w9, [x8]
   389d8:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389dc:	ldr	x12, [x12, #3128]
   389e0:	ldr	w13, [x20]
   389e4:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389e8:	ldr	w12, [x12]
   389ec:	ldr	x14, [x14, #1992]
   389f0:	cmn	w13, #0x1
   389f4:	ccmp	w12, #0x0, #0x4, ne  // ne = any
   389f8:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   389fc:	ldr	x12, [x12, #4032]
   38a00:	ldr	x14, [x14]
   38a04:	csel	w13, w13, w9, ne  // ne = any
   38a08:	cmp	w13, w9
   38a0c:	csel	w13, w9, w13, gt
   38a10:	cmp	x14, x12
   38a14:	ccmp	w11, #0x0, #0x0, ne  // ne = any
   38a18:	csel	w12, wzr, w13, eq  // eq = none
   38a1c:	cmp	w11, #0x1
   38a20:	str	w12, [x10]
   38a24:	b.ne	38950 <rl_get_previous_history@@Base+0xf0>  // b.any
   38a28:	cmp	w12, w9
   38a2c:	csel	w9, wzr, w9, eq  // eq = none
   38a30:	str	w9, [x8]
   38a34:	b	38950 <rl_get_previous_history@@Base+0xf0>
   38a38:	bl	16dd0 <rl_maybe_unsave_line@plt>
   38a3c:	bl	17390 <rl_ding@plt>
   38a40:	b	38950 <rl_get_previous_history@@Base+0xf0>

0000000000038a44 <rl_end_of_history@@Base>:
   38a44:	stp	x29, x30, [sp, #-16]!
   38a48:	mov	x29, sp
   38a4c:	bl	17960 <rl_maybe_replace_line@plt>
   38a50:	bl	170c0 <using_history@plt>
   38a54:	bl	16dd0 <rl_maybe_unsave_line@plt>
   38a58:	mov	w0, wzr
   38a5c:	ldp	x29, x30, [sp], #16
   38a60:	ret

0000000000038a64 <rl_get_next_history@@Base>:
   38a64:	stp	x29, x30, [sp, #-48]!
   38a68:	stp	x20, x19, [sp, #32]
   38a6c:	mov	w19, w0
   38a70:	str	x21, [sp, #16]
   38a74:	mov	x29, sp
   38a78:	tbnz	w0, #31, 38b90 <rl_get_next_history@@Base+0x12c>
   38a7c:	cbz	w19, 38ba0 <rl_get_next_history@@Base+0x13c>
   38a80:	bl	17960 <rl_maybe_replace_line@plt>
   38a84:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38a88:	ldr	x21, [x21, #3528]
   38a8c:	ldr	w8, [x21]
   38a90:	cmn	w8, #0x1
   38a94:	b.ne	38ac4 <rl_get_next_history@@Base+0x60>  // b.any
   38a98:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38a9c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38aa0:	ldr	x8, [x8, #3512]
   38aa4:	ldr	x9, [x9, #2656]
   38aa8:	ldr	w8, [x8]
   38aac:	ldr	w9, [x9]
   38ab0:	orr	w10, w9, w8
   38ab4:	cbz	w10, 38ac4 <rl_get_next_history@@Base+0x60>
   38ab8:	cmp	w8, w9
   38abc:	csinv	w8, w8, wzr, ne  // ne = any
   38ac0:	str	w8, [x21]
   38ac4:	bl	179e0 <next_history@plt>
   38ac8:	cbz	x0, 38b9c <rl_get_next_history@@Base+0x138>
   38acc:	mov	x20, x0
   38ad0:	sub	w19, w19, #0x1
   38ad4:	cbnz	w19, 38ac4 <rl_get_next_history@@Base+0x60>
   38ad8:	ldr	x0, [x20]
   38adc:	mov	w1, wzr
   38ae0:	bl	17600 <rl_replace_line@plt>
   38ae4:	adrp	x13, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38ae8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38aec:	ldr	x12, [x20, #16]
   38af0:	ldr	x13, [x13, #3040]
   38af4:	ldr	x8, [x8, #2656]
   38af8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38afc:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38b00:	ldr	x10, [x10, #3512]
   38b04:	ldr	x11, [x11, #3416]
   38b08:	ldr	w9, [x8]
   38b0c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38b10:	ldr	w11, [x11]
   38b14:	ldr	x8, [x8, #3272]
   38b18:	str	x12, [x13]
   38b1c:	str	w9, [x10]
   38b20:	str	wzr, [x8]
   38b24:	cbnz	w11, 38b30 <rl_get_next_history@@Base+0xcc>
   38b28:	str	wzr, [x10]
   38b2c:	str	w9, [x8]
   38b30:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38b34:	ldr	x12, [x12, #3128]
   38b38:	ldr	w13, [x21]
   38b3c:	adrp	x14, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38b40:	ldr	w12, [x12]
   38b44:	ldr	x14, [x14, #1992]
   38b48:	cmn	w13, #0x1
   38b4c:	ccmp	w12, #0x0, #0x4, ne  // ne = any
   38b50:	adrp	x12, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38b54:	ldr	x12, [x12, #4032]
   38b58:	ldr	x14, [x14]
   38b5c:	csel	w13, w13, w9, ne  // ne = any
   38b60:	cmp	w13, w9
   38b64:	csel	w13, w9, w13, gt
   38b68:	cmp	x14, x12
   38b6c:	ccmp	w11, #0x0, #0x0, ne  // ne = any
   38b70:	csel	w12, wzr, w13, eq  // eq = none
   38b74:	cmp	w11, #0x1
   38b78:	str	w12, [x10]
   38b7c:	b.ne	38ba0 <rl_get_next_history@@Base+0x13c>  // b.any
   38b80:	cmp	w12, w9
   38b84:	csel	w9, wzr, w9, eq  // eq = none
   38b88:	str	w9, [x8]
   38b8c:	b	38ba0 <rl_get_next_history@@Base+0x13c>
   38b90:	neg	w0, w19
   38b94:	bl	17030 <rl_get_previous_history@plt>
   38b98:	b	38ba0 <rl_get_next_history@@Base+0x13c>
   38b9c:	bl	16dd0 <rl_maybe_unsave_line@plt>
   38ba0:	ldp	x20, x19, [sp, #32]
   38ba4:	ldr	x21, [sp, #16]
   38ba8:	mov	w0, wzr
   38bac:	ldp	x29, x30, [sp], #48
   38bb0:	ret

0000000000038bb4 <rl_vi_editing_mode@@Base>:
   38bb4:	stp	x29, x30, [sp, #-16]!
   38bb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38bbc:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38bc0:	ldr	x8, [x8, #3976]
   38bc4:	ldr	x10, [x10, #3416]
   38bc8:	mov	w9, #0x1                   	// #1
   38bcc:	mov	w0, #0x1                   	// #1
   38bd0:	mov	x29, sp
   38bd4:	str	w9, [x8]
   38bd8:	str	wzr, [x10]
   38bdc:	bl	170e0 <rl_vi_insert_mode@plt>
   38be0:	mov	w0, wzr
   38be4:	ldp	x29, x30, [sp], #16
   38be8:	ret

0000000000038bec <_rl_set_insert_mode@@Base>:
   38bec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38bf0:	ldr	x8, [x8, #3976]
   38bf4:	str	w0, [x8]
   38bf8:	ret

0000000000038bfc <rl_emacs_editing_mode@@Base>:
   38bfc:	stp	x29, x30, [sp, #-16]!
   38c00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c04:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c08:	ldr	x8, [x8, #3416]
   38c0c:	ldr	x10, [x10, #3976]
   38c10:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c14:	ldr	x11, [x11, #2008]
   38c18:	mov	w9, #0x1                   	// #1
   38c1c:	str	w9, [x8]
   38c20:	str	w9, [x10]
   38c24:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c28:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c2c:	ldr	w8, [x11]
   38c30:	ldr	x9, [x9, #1992]
   38c34:	ldr	x10, [x10, #1984]
   38c38:	mov	x29, sp
   38c3c:	str	x10, [x9]
   38c40:	cbz	w8, 38c48 <rl_emacs_editing_mode@@Base+0x4c>
   38c44:	bl	17640 <_rl_reset_prompt@plt>
   38c48:	mov	w0, wzr
   38c4c:	ldp	x29, x30, [sp], #16
   38c50:	ret

0000000000038c54 <rl_overwrite_mode@@Base>:
   38c54:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c58:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38c5c:	ldr	x8, [x8, #3792]
   38c60:	ldr	x9, [x9, #3976]
   38c64:	cmp	w0, #0x1
   38c68:	cset	w11, lt  // lt = tstop
   38c6c:	ldr	w8, [x8]
   38c70:	ldr	w10, [x9]
   38c74:	mov	w0, wzr
   38c78:	cmp	w8, #0x0
   38c7c:	eor	w10, w10, #0x1
   38c80:	csel	w8, w10, w11, eq  // eq = none
   38c84:	str	w8, [x9]
   38c88:	ret

0000000000038c8c <history_get_history_state@@Base>:
   38c8c:	stp	x29, x30, [sp, #-16]!
   38c90:	mov	w0, #0x18                  	// #24
   38c94:	mov	x29, sp
   38c98:	bl	16bf0 <xmalloc@plt>
   38c9c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38ca0:	ldr	x8, [x8, #192]
   38ca4:	str	x8, [x0]
   38ca8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38cac:	ldr	x8, [x8, #2536]
   38cb0:	ldr	w8, [x8]
   38cb4:	str	w8, [x0, #8]
   38cb8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38cbc:	ldr	x8, [x8, #3056]
   38cc0:	ldr	w8, [x8]
   38cc4:	str	w8, [x0, #12]
   38cc8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38ccc:	ldr	w8, [x8, #200]
   38cd0:	str	w8, [x0, #16]
   38cd4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38cd8:	ldrb	w8, [x8, #204]
   38cdc:	str	w8, [x0, #20]
   38ce0:	ldp	x29, x30, [sp], #16
   38ce4:	ret

0000000000038ce8 <history_set_history_state@@Base>:
   38ce8:	ldr	x8, [x0]
   38cec:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38cf0:	str	x8, [x9, #192]
   38cf4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38cf8:	ldr	w8, [x0, #8]
   38cfc:	ldr	x9, [x9, #2536]
   38d00:	str	w8, [x9]
   38d04:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38d08:	ldr	w8, [x0, #12]
   38d0c:	ldr	x9, [x9, #3056]
   38d10:	str	w8, [x9]
   38d14:	ldr	w8, [x0, #16]
   38d18:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38d1c:	str	w8, [x9, #200]
   38d20:	ldrb	w8, [x0, #20]
   38d24:	tbz	w8, #0, 38d34 <history_set_history_state@@Base+0x4c>
   38d28:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38d2c:	mov	w9, #0x1                   	// #1
   38d30:	strb	w9, [x8, #204]
   38d34:	ret

0000000000038d38 <using_history@@Base>:
   38d38:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38d3c:	ldr	x8, [x8, #3056]
   38d40:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38d44:	ldr	w8, [x8]
   38d48:	ldr	x9, [x9, #2536]
   38d4c:	str	w8, [x9]
   38d50:	ret

0000000000038d54 <history_total_bytes@@Base>:
   38d54:	stp	x29, x30, [sp, #-48]!
   38d58:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38d5c:	ldr	x8, [x8, #192]
   38d60:	stp	x22, x21, [sp, #16]
   38d64:	stp	x20, x19, [sp, #32]
   38d68:	mov	x29, sp
   38d6c:	cbz	x8, 38dac <history_total_bytes@@Base+0x58>
   38d70:	ldr	x22, [x8]
   38d74:	cbz	x22, 38dac <history_total_bytes@@Base+0x58>
   38d78:	mov	w19, wzr
   38d7c:	add	x21, x8, #0x8
   38d80:	ldr	x0, [x22]
   38d84:	bl	16440 <strlen@plt>
   38d88:	ldr	x8, [x22, #8]
   38d8c:	mov	x20, x0
   38d90:	mov	x0, x8
   38d94:	bl	16440 <strlen@plt>
   38d98:	ldr	x22, [x21], #8
   38d9c:	add	w8, w0, w20
   38da0:	add	w19, w19, w8
   38da4:	cbnz	x22, 38d80 <history_total_bytes@@Base+0x2c>
   38da8:	b	38db0 <history_total_bytes@@Base+0x5c>
   38dac:	mov	w19, wzr
   38db0:	mov	w0, w19
   38db4:	ldp	x20, x19, [sp, #32]
   38db8:	ldp	x22, x21, [sp, #16]
   38dbc:	ldp	x29, x30, [sp], #48
   38dc0:	ret

0000000000038dc4 <where_history@@Base>:
   38dc4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38dc8:	ldr	x8, [x8, #2536]
   38dcc:	ldr	w0, [x8]
   38dd0:	ret

0000000000038dd4 <history_set_pos@@Base>:
   38dd4:	mov	w8, w0
   38dd8:	mov	w0, wzr
   38ddc:	tbnz	w8, #31, 38e10 <history_set_pos@@Base+0x3c>
   38de0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38de4:	ldr	x9, [x9, #3056]
   38de8:	ldr	w9, [x9]
   38dec:	cmp	w9, w8
   38df0:	b.lt	38e10 <history_set_pos@@Base+0x3c>  // b.tstop
   38df4:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38df8:	ldr	x9, [x9, #192]
   38dfc:	cbz	x9, 38e10 <history_set_pos@@Base+0x3c>
   38e00:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e04:	ldr	x9, [x9, #2536]
   38e08:	mov	w0, #0x1                   	// #1
   38e0c:	str	w8, [x9]
   38e10:	ret

0000000000038e14 <history_list@@Base>:
   38e14:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38e18:	ldr	x0, [x8, #192]
   38e1c:	ret

0000000000038e20 <current_history@@Base>:
   38e20:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e24:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e28:	ldr	x8, [x8, #2536]
   38e2c:	ldr	x9, [x9, #3056]
   38e30:	mov	x0, xzr
   38e34:	ldrsw	x8, [x8]
   38e38:	ldr	w9, [x9]
   38e3c:	cmp	w8, w9
   38e40:	b.eq	38e54 <current_history@@Base+0x34>  // b.none
   38e44:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38e48:	ldr	x9, [x9, #192]
   38e4c:	cbz	x9, 38e54 <current_history@@Base+0x34>
   38e50:	ldr	x0, [x9, x8, lsl #3]
   38e54:	ret

0000000000038e58 <previous_history@@Base>:
   38e58:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e5c:	ldr	x8, [x8, #2536]
   38e60:	ldr	w9, [x8]
   38e64:	cbz	w9, 38e80 <previous_history@@Base+0x28>
   38e68:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38e6c:	ldr	x10, [x10, #192]
   38e70:	sub	w9, w9, #0x1
   38e74:	str	w9, [x8]
   38e78:	ldr	x0, [x10, w9, sxtw #3]
   38e7c:	ret
   38e80:	mov	x0, xzr
   38e84:	ret

0000000000038e88 <next_history@@Base>:
   38e88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e8c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38e90:	ldr	x8, [x8, #2536]
   38e94:	ldr	x10, [x10, #3056]
   38e98:	ldr	w9, [x8]
   38e9c:	ldr	w10, [x10]
   38ea0:	cmp	w9, w10
   38ea4:	b.ne	38eb0 <next_history@@Base+0x28>  // b.any
   38ea8:	mov	x0, xzr
   38eac:	ret
   38eb0:	adrp	x10, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38eb4:	ldr	x10, [x10, #192]
   38eb8:	add	w9, w9, #0x1
   38ebc:	str	w9, [x8]
   38ec0:	ldr	x0, [x10, w9, sxtw #3]
   38ec4:	ret

0000000000038ec8 <history_get@@Base>:
   38ec8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38ecc:	ldr	x8, [x8, #4000]
   38ed0:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38ed4:	ldr	w8, [x8]
   38ed8:	ldr	x9, [x9, #3056]
   38edc:	sub	w8, w0, w8
   38ee0:	ldr	w9, [x9]
   38ee4:	mov	x0, xzr
   38ee8:	cmp	w8, w9
   38eec:	b.ge	38f04 <history_get@@Base+0x3c>  // b.tcont
   38ef0:	tbnz	w8, #31, 38f04 <history_get@@Base+0x3c>
   38ef4:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38ef8:	ldr	x9, [x9, #192]
   38efc:	cbz	x9, 38f04 <history_get@@Base+0x3c>
   38f00:	ldr	x0, [x9, w8, uxtw #3]
   38f04:	ret

0000000000038f08 <alloc_history_entry@@Base>:
   38f08:	stp	x29, x30, [sp, #-48]!
   38f0c:	str	x21, [sp, #16]
   38f10:	mov	x21, x0
   38f14:	mov	w0, #0x18                  	// #24
   38f18:	stp	x20, x19, [sp, #32]
   38f1c:	mov	x29, sp
   38f20:	mov	x19, x1
   38f24:	bl	16bf0 <xmalloc@plt>
   38f28:	mov	x20, x0
   38f2c:	cbz	x21, 38f4c <alloc_history_entry@@Base+0x44>
   38f30:	mov	x0, x21
   38f34:	bl	16440 <strlen@plt>
   38f38:	add	x0, x0, #0x1
   38f3c:	bl	16bf0 <xmalloc@plt>
   38f40:	mov	x1, x21
   38f44:	bl	17480 <strcpy@plt>
   38f48:	b	38f50 <alloc_history_entry@@Base+0x48>
   38f4c:	mov	x0, xzr
   38f50:	stp	x19, xzr, [x20, #8]
   38f54:	str	x0, [x20]
   38f58:	mov	x0, x20
   38f5c:	ldp	x20, x19, [sp, #32]
   38f60:	ldr	x21, [sp, #16]
   38f64:	ldp	x29, x30, [sp], #48
   38f68:	ret

0000000000038f6c <history_get_time@@Base>:
   38f6c:	stp	x29, x30, [sp, #-32]!
   38f70:	stp	x20, x19, [sp, #16]
   38f74:	mov	x29, sp
   38f78:	cbz	x0, 38fcc <history_get_time@@Base+0x60>
   38f7c:	ldr	x20, [x0, #8]
   38f80:	cbz	x20, 38fc8 <history_get_time@@Base+0x5c>
   38f84:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38f88:	ldrb	w8, [x20]
   38f8c:	ldr	x9, [x9, #3568]
   38f90:	ldrb	w9, [x9]
   38f94:	cmp	w8, w9
   38f98:	b.ne	38fc8 <history_get_time@@Base+0x5c>  // b.any
   38f9c:	bl	177f0 <__errno_location@plt>
   38fa0:	mov	x19, x0
   38fa4:	str	wzr, [x0]
   38fa8:	add	x0, x20, #0x1
   38fac:	mov	w2, #0xa                   	// #10
   38fb0:	mov	x1, xzr
   38fb4:	bl	17130 <strtol@plt>
   38fb8:	ldr	w8, [x19]
   38fbc:	cmp	w8, #0x22
   38fc0:	csel	x0, xzr, x0, eq  // eq = none
   38fc4:	b	38fcc <history_get_time@@Base+0x60>
   38fc8:	mov	x0, xzr
   38fcc:	ldp	x20, x19, [sp, #16]
   38fd0:	ldp	x29, x30, [sp], #32
   38fd4:	ret

0000000000038fd8 <add_history@@Base>:
   38fd8:	sub	sp, sp, #0x80
   38fdc:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   38fe0:	stp	x29, x30, [sp, #64]
   38fe4:	stp	x24, x23, [sp, #80]
   38fe8:	stp	x22, x21, [sp, #96]
   38fec:	stp	x20, x19, [sp, #112]
   38ff0:	ldrb	w8, [x8, #204]
   38ff4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   38ff8:	ldr	x22, [x22, #3056]
   38ffc:	mov	x19, x0
   39000:	cmp	w8, #0x1
   39004:	adrp	x23, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39008:	add	x29, sp, #0x40
   3900c:	b.ne	39088 <add_history@@Base+0xb0>  // b.any
   39010:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39014:	ldr	w9, [x22]
   39018:	ldr	x10, [x10, #2256]
   3901c:	ldr	w10, [x10]
   39020:	cmp	w9, w10
   39024:	b.ne	39088 <add_history@@Base+0xb0>  // b.any
   39028:	cbz	w9, 391a0 <add_history@@Base+0x1c8>
   3902c:	ldr	x0, [x23, #192]
   39030:	ldr	x20, [x0]
   39034:	cbz	x20, 39060 <add_history@@Base+0x88>
   39038:	ldr	x0, [x20]
   3903c:	cbz	x0, 39044 <add_history@@Base+0x6c>
   39040:	bl	171b0 <free@plt>
   39044:	ldr	x0, [x20, #8]
   39048:	cbz	x0, 39050 <add_history@@Base+0x78>
   3904c:	bl	171b0 <free@plt>
   39050:	mov	x0, x20
   39054:	bl	169f0 <xfree@plt>
   39058:	ldr	x0, [x23, #192]
   3905c:	ldr	w9, [x22]
   39060:	add	x1, x0, #0x8
   39064:	sbfiz	x2, x9, #3, #32
   39068:	bl	163b0 <memmove@plt>
   3906c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39070:	ldr	x8, [x8, #4000]
   39074:	ldr	w24, [x22]
   39078:	ldr	w9, [x8]
   3907c:	add	w9, w9, #0x1
   39080:	str	w9, [x8]
   39084:	b	3910c <add_history@@Base+0x134>
   39088:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3908c:	ldr	w10, [x9, #200]
   39090:	cbz	w10, 390c8 <add_history@@Base+0xf0>
   39094:	ldr	w8, [x22]
   39098:	sub	w11, w10, #0x1
   3909c:	cmp	w8, w11
   390a0:	b.ne	390c0 <add_history@@Base+0xe8>  // b.any
   390a4:	ldr	x0, [x23, #192]
   390a8:	add	w8, w10, #0x32
   390ac:	sbfiz	x1, x8, #3, #32
   390b0:	str	w8, [x9, #200]
   390b4:	bl	16a50 <xrealloc@plt>
   390b8:	ldr	w8, [x22]
   390bc:	str	x0, [x23, #192]
   390c0:	add	w24, w8, #0x1
   390c4:	b	3910c <add_history@@Base+0x134>
   390c8:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   390cc:	ldr	x10, [x10, #2256]
   390d0:	mov	w11, #0x2000                	// #8192
   390d4:	mov	w12, #0x1f6                 	// #502
   390d8:	ldr	w10, [x10]
   390dc:	cmp	w10, #0x0
   390e0:	add	w13, w10, #0x2
   390e4:	cset	w14, gt
   390e8:	cmp	w10, #0x2, lsl #12
   390ec:	csel	w10, w11, w13, gt
   390f0:	tst	w8, w14
   390f4:	csel	w8, w10, w12, ne  // ne = any
   390f8:	sbfiz	x0, x8, #3, #32
   390fc:	str	w8, [x9, #200]
   39100:	bl	16bf0 <xmalloc@plt>
   39104:	str	x0, [x23, #192]
   39108:	mov	w24, #0x1                   	// #1
   3910c:	mov	x0, xzr
   39110:	bl	16960 <time@plt>
   39114:	adrp	x2, 3f000 <filename_completion_function@@Base+0x580>
   39118:	mov	x3, x0
   3911c:	add	x2, x2, #0xf69
   39120:	mov	x0, sp
   39124:	mov	w1, #0x3f                  	// #63
   39128:	bl	16820 <snprintf@plt>
   3912c:	mov	x0, sp
   39130:	bl	16440 <strlen@plt>
   39134:	add	x0, x0, #0x1
   39138:	bl	16bf0 <xmalloc@plt>
   3913c:	mov	x1, sp
   39140:	mov	x20, x0
   39144:	bl	17480 <strcpy@plt>
   39148:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3914c:	ldr	x8, [x8, #3568]
   39150:	ldrb	w8, [x8]
   39154:	strb	w8, [x0]
   39158:	mov	w0, #0x18                  	// #24
   3915c:	bl	16bf0 <xmalloc@plt>
   39160:	mov	x21, x0
   39164:	cbz	x19, 39184 <add_history@@Base+0x1ac>
   39168:	mov	x0, x19
   3916c:	bl	16440 <strlen@plt>
   39170:	add	x0, x0, #0x1
   39174:	bl	16bf0 <xmalloc@plt>
   39178:	mov	x1, x19
   3917c:	bl	17480 <strcpy@plt>
   39180:	b	39188 <add_history@@Base+0x1b0>
   39184:	mov	x0, xzr
   39188:	stp	x20, xzr, [x21, #8]
   3918c:	str	x0, [x21]
   39190:	ldr	x8, [x23, #192]
   39194:	add	x8, x8, w24, sxtw #3
   39198:	stp	x21, xzr, [x8, #-8]
   3919c:	str	w24, [x22]
   391a0:	ldp	x20, x19, [sp, #112]
   391a4:	ldp	x22, x21, [sp, #96]
   391a8:	ldp	x24, x23, [sp, #80]
   391ac:	ldp	x29, x30, [sp, #64]
   391b0:	add	sp, sp, #0x80
   391b4:	ret

00000000000391b8 <free_history_entry@@Base>:
   391b8:	stp	x29, x30, [sp, #-32]!
   391bc:	stp	x20, x19, [sp, #16]
   391c0:	mov	x29, sp
   391c4:	cbz	x0, 391f4 <free_history_entry@@Base+0x3c>
   391c8:	mov	x19, x0
   391cc:	ldr	x0, [x0]
   391d0:	cbz	x0, 391d8 <free_history_entry@@Base+0x20>
   391d4:	bl	171b0 <free@plt>
   391d8:	ldr	x0, [x19, #8]
   391dc:	cbz	x0, 391e4 <free_history_entry@@Base+0x2c>
   391e0:	bl	171b0 <free@plt>
   391e4:	ldr	x20, [x19, #16]
   391e8:	mov	x0, x19
   391ec:	bl	169f0 <xfree@plt>
   391f0:	b	391f8 <free_history_entry@@Base+0x40>
   391f4:	mov	x20, xzr
   391f8:	mov	x0, x20
   391fc:	ldp	x20, x19, [sp, #16]
   39200:	ldp	x29, x30, [sp], #32
   39204:	ret

0000000000039208 <add_history_time@@Base>:
   39208:	stp	x29, x30, [sp, #-32]!
   3920c:	stp	x20, x19, [sp, #16]
   39210:	mov	x29, sp
   39214:	cbz	x0, 39264 <add_history_time@@Base+0x5c>
   39218:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3921c:	ldr	x8, [x8, #3056]
   39220:	ldr	w8, [x8]
   39224:	subs	w8, w8, #0x1
   39228:	b.lt	39264 <add_history_time@@Base+0x5c>  // b.tstop
   3922c:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39230:	ldr	x9, [x9, #192]
   39234:	mov	x19, x0
   39238:	ldr	x20, [x9, w8, sxtw #3]
   3923c:	ldr	x0, [x20, #8]
   39240:	cbz	x0, 39248 <add_history_time@@Base+0x40>
   39244:	bl	171b0 <free@plt>
   39248:	mov	x0, x19
   3924c:	bl	16440 <strlen@plt>
   39250:	add	x0, x0, #0x1
   39254:	bl	16bf0 <xmalloc@plt>
   39258:	mov	x1, x19
   3925c:	bl	17480 <strcpy@plt>
   39260:	str	x0, [x20, #8]
   39264:	ldp	x20, x19, [sp, #16]
   39268:	ldp	x29, x30, [sp], #32
   3926c:	ret

0000000000039270 <copy_history_entry@@Base>:
   39270:	stp	x29, x30, [sp, #-48]!
   39274:	str	x21, [sp, #16]
   39278:	stp	x20, x19, [sp, #32]
   3927c:	mov	x29, sp
   39280:	cbz	x0, 392b8 <copy_history_entry@@Base+0x48>
   39284:	ldr	x21, [x0]
   39288:	mov	x19, x0
   3928c:	mov	w0, #0x18                  	// #24
   39290:	bl	16bf0 <xmalloc@plt>
   39294:	mov	x20, x0
   39298:	cbz	x21, 392c0 <copy_history_entry@@Base+0x50>
   3929c:	mov	x0, x21
   392a0:	bl	16440 <strlen@plt>
   392a4:	add	x0, x0, #0x1
   392a8:	bl	16bf0 <xmalloc@plt>
   392ac:	mov	x1, x21
   392b0:	bl	17480 <strcpy@plt>
   392b4:	b	392c4 <copy_history_entry@@Base+0x54>
   392b8:	mov	x20, xzr
   392bc:	b	392f4 <copy_history_entry@@Base+0x84>
   392c0:	mov	x0, xzr
   392c4:	stp	xzr, xzr, [x20, #8]
   392c8:	str	x0, [x20]
   392cc:	ldr	x0, [x19, #8]
   392d0:	cbz	x0, 392e8 <copy_history_entry@@Base+0x78>
   392d4:	bl	16440 <strlen@plt>
   392d8:	add	x0, x0, #0x1
   392dc:	bl	16bf0 <xmalloc@plt>
   392e0:	ldr	x1, [x19, #8]
   392e4:	bl	17480 <strcpy@plt>
   392e8:	str	x0, [x20, #8]
   392ec:	ldr	x8, [x19, #16]
   392f0:	str	x8, [x20, #16]
   392f4:	mov	x0, x20
   392f8:	ldp	x20, x19, [sp, #32]
   392fc:	ldr	x21, [sp, #16]
   39300:	ldp	x29, x30, [sp], #48
   39304:	ret

0000000000039308 <replace_history_entry@@Base>:
   39308:	stp	x29, x30, [sp, #-64]!
   3930c:	stp	x20, x19, [sp, #48]
   39310:	mov	x19, xzr
   39314:	stp	x24, x23, [sp, #16]
   39318:	stp	x22, x21, [sp, #32]
   3931c:	mov	x29, sp
   39320:	tbnz	w0, #31, 393a8 <replace_history_entry@@Base+0xa0>
   39324:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39328:	ldr	x8, [x8, #3056]
   3932c:	mov	w22, w0
   39330:	ldr	w8, [x8]
   39334:	cmp	w8, w0
   39338:	b.le	393a8 <replace_history_entry@@Base+0xa0>
   3933c:	mov	w0, #0x18                  	// #24
   39340:	mov	x20, x2
   39344:	mov	x21, x1
   39348:	bl	16bf0 <xmalloc@plt>
   3934c:	adrp	x23, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39350:	ldr	x8, [x23, #192]
   39354:	mov	w9, w22
   39358:	lsl	x24, x9, #3
   3935c:	mov	x22, x0
   39360:	ldr	x19, [x8, x24]
   39364:	mov	x0, x21
   39368:	bl	16440 <strlen@plt>
   3936c:	add	x0, x0, #0x1
   39370:	bl	16bf0 <xmalloc@plt>
   39374:	mov	x1, x21
   39378:	bl	17480 <strcpy@plt>
   3937c:	str	x0, [x22]
   39380:	str	x20, [x22, #16]
   39384:	ldr	x0, [x19, #8]
   39388:	bl	16440 <strlen@plt>
   3938c:	add	x0, x0, #0x1
   39390:	bl	16bf0 <xmalloc@plt>
   39394:	ldr	x1, [x19, #8]
   39398:	bl	17480 <strcpy@plt>
   3939c:	str	x0, [x22, #8]
   393a0:	ldr	x8, [x23, #192]
   393a4:	str	x22, [x8, x24]
   393a8:	mov	x0, x19
   393ac:	ldp	x20, x19, [sp, #48]
   393b0:	ldp	x22, x21, [sp, #32]
   393b4:	ldp	x24, x23, [sp, #16]
   393b8:	ldp	x29, x30, [sp], #64
   393bc:	ret

00000000000393c0 <_hs_append_history_line@@Base>:
   393c0:	stp	x29, x30, [sp, #-48]!
   393c4:	stp	x22, x21, [sp, #16]
   393c8:	stp	x20, x19, [sp, #32]
   393cc:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   393d0:	ldr	x8, [x8, #192]
   393d4:	mov	x29, sp
   393d8:	mov	x19, x1
   393dc:	ldr	x22, [x8, w0, sxtw #3]
   393e0:	ldr	x21, [x22]
   393e4:	mov	x0, x21
   393e8:	bl	16440 <strlen@plt>
   393ec:	mov	x20, x0
   393f0:	mov	x0, x19
   393f4:	bl	16440 <strlen@plt>
   393f8:	add	x8, x20, x0
   393fc:	add	x8, x8, #0x2
   39400:	cmp	x20, #0x101
   39404:	mov	x1, x8
   39408:	b.cc	39420 <_hs_append_history_line@@Base+0x60>  // b.lo, b.ul, b.last
   3940c:	mov	w9, #0x200                 	// #512
   39410:	mov	x1, x9
   39414:	cmp	x9, x8
   39418:	lsl	x9, x9, #1
   3941c:	b.cc	39410 <_hs_append_history_line@@Base+0x50>  // b.lo, b.ul, b.last
   39420:	mov	x0, x21
   39424:	bl	16da0 <realloc@plt>
   39428:	cbz	x0, 39458 <_hs_append_history_line@@Base+0x98>
   3942c:	mov	w8, #0xa                   	// #10
   39430:	str	x0, [x22]
   39434:	strb	w8, [x0, x20]
   39438:	ldr	x8, [x22]
   3943c:	mov	x1, x19
   39440:	ldp	x22, x21, [sp, #16]
   39444:	add	x8, x20, x8
   39448:	ldp	x20, x19, [sp, #32]
   3944c:	add	x0, x8, #0x1
   39450:	ldp	x29, x30, [sp], #48
   39454:	b	17480 <strcpy@plt>
   39458:	ldp	x20, x19, [sp, #32]
   3945c:	ldp	x22, x21, [sp, #16]
   39460:	ldp	x29, x30, [sp], #48
   39464:	ret

0000000000039468 <_hs_replace_history_data@@Base>:
   39468:	cmn	w0, #0x2
   3946c:	b.lt	394ac <_hs_replace_history_data@@Base+0x44>  // b.tstop
   39470:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39474:	ldr	x8, [x8, #3056]
   39478:	ldr	w8, [x8]
   3947c:	cmp	w8, w0
   39480:	b.le	394ac <_hs_replace_history_data@@Base+0x44>
   39484:	cbz	w8, 394ac <_hs_replace_history_data@@Base+0x44>
   39488:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3948c:	ldr	x9, [x9, #192]
   39490:	cbz	x9, 394ac <_hs_replace_history_data@@Base+0x44>
   39494:	tbnz	w0, #31, 394b0 <_hs_replace_history_data@@Base+0x48>
   39498:	ldr	x8, [x9, w0, uxtw #3]
   3949c:	cbz	x8, 394ac <_hs_replace_history_data@@Base+0x44>
   394a0:	ldr	x9, [x8, #16]
   394a4:	cmp	x9, x1
   394a8:	b.eq	3950c <_hs_replace_history_data@@Base+0xa4>  // b.none
   394ac:	ret
   394b0:	cmp	w8, #0x1
   394b4:	b.lt	394ac <_hs_replace_history_data@@Base+0x44>  // b.tstop
   394b8:	mov	x11, xzr
   394bc:	mov	w10, #0xffffffff            	// #-1
   394c0:	b	394d0 <_hs_replace_history_data@@Base+0x68>
   394c4:	add	x11, x11, #0x1
   394c8:	cmp	x8, x11
   394cc:	b.eq	394fc <_hs_replace_history_data@@Base+0x94>  // b.none
   394d0:	ldr	x12, [x9, x11, lsl #3]
   394d4:	cbz	x12, 394c4 <_hs_replace_history_data@@Base+0x5c>
   394d8:	ldr	x13, [x12, #16]
   394dc:	cmp	x13, x1
   394e0:	csel	w10, w10, w11, ne  // ne = any
   394e4:	b.ne	394c4 <_hs_replace_history_data@@Base+0x5c>  // b.any
   394e8:	cmn	w0, #0x1
   394ec:	b.ne	394c4 <_hs_replace_history_data@@Base+0x5c>  // b.any
   394f0:	mov	w10, w11
   394f4:	str	x2, [x12, #16]
   394f8:	b	394c4 <_hs_replace_history_data@@Base+0x5c>
   394fc:	cmn	w0, #0x2
   39500:	b.ne	394ac <_hs_replace_history_data@@Base+0x44>  // b.any
   39504:	tbnz	w10, #31, 394ac <_hs_replace_history_data@@Base+0x44>
   39508:	ldr	x8, [x9, w10, uxtw #3]
   3950c:	str	x2, [x8, #16]
   39510:	ret

0000000000039514 <remove_history@@Base>:
   39514:	stp	x29, x30, [sp, #-32]!
   39518:	stp	x20, x19, [sp, #16]
   3951c:	mov	x29, sp
   39520:	tbnz	w0, #31, 39570 <remove_history@@Base+0x5c>
   39524:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39528:	ldr	x20, [x20, #3056]
   3952c:	mov	x19, xzr
   39530:	ldr	w9, [x20]
   39534:	subs	w8, w9, w0
   39538:	b.le	39574 <remove_history@@Base+0x60>
   3953c:	cbz	w9, 39574 <remove_history@@Base+0x60>
   39540:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39544:	ldr	x9, [x9, #192]
   39548:	cbz	x9, 39574 <remove_history@@Base+0x60>
   3954c:	add	x0, x9, w0, uxtw #3
   39550:	mov	x1, x0
   39554:	ldr	x19, [x1], #8
   39558:	sbfiz	x2, x8, #3, #32
   3955c:	bl	163b0 <memmove@plt>
   39560:	ldr	w8, [x20]
   39564:	sub	w8, w8, #0x1
   39568:	str	w8, [x20]
   3956c:	b	39574 <remove_history@@Base+0x60>
   39570:	mov	x19, xzr
   39574:	mov	x0, x19
   39578:	ldp	x20, x19, [sp, #16]
   3957c:	ldp	x29, x30, [sp], #32
   39580:	ret

0000000000039584 <remove_history_range@@Base>:
   39584:	stp	x29, x30, [sp, #-96]!
   39588:	stp	x20, x19, [sp, #80]
   3958c:	mov	x19, xzr
   39590:	str	x27, [sp, #16]
   39594:	stp	x26, x25, [sp, #32]
   39598:	stp	x24, x23, [sp, #48]
   3959c:	stp	x22, x21, [sp, #64]
   395a0:	mov	x29, sp
   395a4:	tbnz	w0, #31, 3969c <remove_history_range@@Base+0x118>
   395a8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   395ac:	ldr	x23, [x8, #192]
   395b0:	cbz	x23, 3969c <remove_history_range@@Base+0x118>
   395b4:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   395b8:	ldr	x22, [x22, #3056]
   395bc:	ldr	w8, [x22]
   395c0:	cbz	w8, 3969c <remove_history_range@@Base+0x118>
   395c4:	mov	w21, w1
   395c8:	mov	w20, w0
   395cc:	subs	w24, w1, w0
   395d0:	mov	x19, xzr
   395d4:	b.lt	3969c <remove_history_range@@Base+0x118>  // b.tstop
   395d8:	subs	w25, w8, w21
   395dc:	b.le	3969c <remove_history_range@@Base+0x118>
   395e0:	tbnz	w21, #31, 3969c <remove_history_range@@Base+0x118>
   395e4:	cmp	w8, w20
   395e8:	b.le	3969c <remove_history_range@@Base+0x118>
   395ec:	add	w8, w24, #0x2
   395f0:	sbfiz	x0, x8, #3, #32
   395f4:	bl	16980 <malloc@plt>
   395f8:	mov	x19, x0
   395fc:	cbz	x0, 3969c <remove_history_range@@Base+0x118>
   39600:	subs	w8, w21, w20
   39604:	csel	w8, w8, wzr, gt
   39608:	lsl	x8, x8, #3
   3960c:	add	x1, x23, w20, uxtw #3
   39610:	add	x2, x8, #0x8
   39614:	mov	x0, x19
   39618:	mov	w26, w20
   3961c:	sxtw	x27, w21
   39620:	bl	16380 <memcpy@plt>
   39624:	cmp	x27, x26
   39628:	csel	x8, x27, x26, gt
   3962c:	sub	x8, x8, x26
   39630:	add	x9, x8, #0x1
   39634:	cmp	x9, #0x2
   39638:	mov	x8, x26
   3963c:	b.cc	3965c <remove_history_range@@Base+0xd8>  // b.lo, b.ul, b.last
   39640:	and	x10, x9, #0xfffffffffffffffe
   39644:	add	x8, x10, x26
   39648:	mov	x11, x10
   3964c:	subs	x11, x11, #0x2
   39650:	b.ne	3964c <remove_history_range@@Base+0xc8>  // b.any
   39654:	cmp	x9, x10
   39658:	b.eq	39670 <remove_history_range@@Base+0xec>  // b.none
   3965c:	mov	x9, x8
   39660:	add	x8, x9, #0x1
   39664:	cmp	x9, x27
   39668:	mov	x9, x8
   3966c:	b.lt	39660 <remove_history_range@@Base+0xdc>  // b.tstop
   39670:	add	x9, x23, x27, lsl #3
   39674:	sub	w8, w8, w20
   39678:	add	x0, x23, x26, lsl #3
   3967c:	add	x1, x9, #0x8
   39680:	sbfiz	x2, x25, #3, #32
   39684:	str	xzr, [x19, w8, sxtw #3]
   39688:	bl	163b0 <memmove@plt>
   3968c:	ldr	w8, [x22]
   39690:	mvn	w9, w24
   39694:	add	w8, w8, w9
   39698:	str	w8, [x22]
   3969c:	mov	x0, x19
   396a0:	ldp	x20, x19, [sp, #80]
   396a4:	ldp	x22, x21, [sp, #64]
   396a8:	ldp	x24, x23, [sp, #48]
   396ac:	ldp	x26, x25, [sp, #32]
   396b0:	ldr	x27, [sp, #16]
   396b4:	ldp	x29, x30, [sp], #96
   396b8:	ret

00000000000396bc <stifle_history@@Base>:
   396bc:	stp	x29, x30, [sp, #-80]!
   396c0:	str	x25, [sp, #16]
   396c4:	stp	x24, x23, [sp, #32]
   396c8:	stp	x22, x21, [sp, #48]
   396cc:	stp	x20, x19, [sp, #64]
   396d0:	adrp	x22, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   396d4:	ldr	x22, [x22, #3056]
   396d8:	bic	w21, w0, w0, asr #31
   396dc:	mov	x29, sp
   396e0:	ldr	w8, [x22]
   396e4:	subs	w8, w8, w21
   396e8:	b.le	39810 <stifle_history@@Base+0x154>
   396ec:	mov	w19, w0
   396f0:	cmp	w8, #0x1
   396f4:	adrp	x23, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   396f8:	b.lt	39744 <stifle_history@@Base+0x88>  // b.tstop
   396fc:	mov	x24, xzr
   39700:	mov	w25, w8
   39704:	b	3971c <stifle_history@@Base+0x60>
   39708:	mov	x0, x20
   3970c:	bl	169f0 <xfree@plt>
   39710:	add	x24, x24, #0x1
   39714:	cmp	x24, x25
   39718:	b.cs	39748 <stifle_history@@Base+0x8c>  // b.hs, b.nlast
   3971c:	ldr	x8, [x23, #192]
   39720:	ldr	x20, [x8, x24, lsl #3]
   39724:	cbz	x20, 39710 <stifle_history@@Base+0x54>
   39728:	ldr	x0, [x20]
   3972c:	cbz	x0, 39734 <stifle_history@@Base+0x78>
   39730:	bl	171b0 <free@plt>
   39734:	ldr	x0, [x20, #8]
   39738:	cbz	x0, 39708 <stifle_history@@Base+0x4c>
   3973c:	bl	171b0 <free@plt>
   39740:	b	39708 <stifle_history@@Base+0x4c>
   39744:	mov	w24, wzr
   39748:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3974c:	ldr	x8, [x23, #192]
   39750:	ldr	x9, [x9, #4000]
   39754:	cmp	w19, #0x1
   39758:	str	w24, [x9]
   3975c:	b.lt	397d0 <stifle_history@@Base+0x114>  // b.tstop
   39760:	ldr	w10, [x22]
   39764:	mov	w9, w21
   39768:	cmp	w21, #0x1
   3976c:	csinc	x11, x9, xzr, hi  // hi = pmore
   39770:	sub	w10, w10, w21
   39774:	cmp	x11, #0x4
   39778:	sxtw	x13, w10
   3977c:	b.cc	397a8 <stifle_history@@Base+0xec>  // b.lo, b.ul, b.last
   39780:	cmp	x9, #0x1
   39784:	csinc	x10, x9, xzr, hi  // hi = pmore
   39788:	add	x12, x10, x13
   3978c:	add	x12, x8, x12, lsl #3
   39790:	cmp	x8, x12
   39794:	b.cs	397d8 <stifle_history@@Base+0x11c>  // b.hs, b.nlast
   39798:	add	x10, x8, x10, lsl #3
   3979c:	add	x12, x8, x13, lsl #3
   397a0:	cmp	x12, x10
   397a4:	b.cs	397d8 <stifle_history@@Base+0x11c>  // b.hs, b.nlast
   397a8:	mov	x10, xzr
   397ac:	mov	x12, x13
   397b0:	lsl	x11, x12, #3
   397b4:	ldr	x12, [x8, x11]
   397b8:	add	x11, x11, #0x8
   397bc:	str	x12, [x8, x10, lsl #3]
   397c0:	add	x10, x10, #0x1
   397c4:	cmp	x10, x9
   397c8:	b.cc	397b4 <stifle_history@@Base+0xf8>  // b.lo, b.ul, b.last
   397cc:	b	39808 <stifle_history@@Base+0x14c>
   397d0:	mov	w10, wzr
   397d4:	b	39808 <stifle_history@@Base+0x14c>
   397d8:	and	x10, x11, #0x7ffffffc
   397dc:	add	x12, x10, x13
   397e0:	lsl	x13, x13, #3
   397e4:	mov	x14, x10
   397e8:	mov	x15, x8
   397ec:	add	x16, x15, x13
   397f0:	ldp	q0, q1, [x16]
   397f4:	subs	x14, x14, #0x4
   397f8:	stp	q0, q1, [x15], #32
   397fc:	b.ne	397ec <stifle_history@@Base+0x130>  // b.any
   39800:	cmp	x11, x10
   39804:	b.ne	397b0 <stifle_history@@Base+0xf4>  // b.any
   39808:	str	xzr, [x8, w10, uxtw #3]
   3980c:	str	w10, [x22]
   39810:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39814:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39818:	ldr	x10, [x10, #2256]
   3981c:	ldr	x11, [x11, #2104]
   39820:	ldp	x20, x19, [sp, #64]
   39824:	ldp	x24, x23, [sp, #32]
   39828:	str	w21, [x10]
   3982c:	str	w21, [x11]
   39830:	ldp	x22, x21, [sp, #48]
   39834:	ldr	x25, [sp, #16]
   39838:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3983c:	mov	w9, #0x1                   	// #1
   39840:	strb	w9, [x8, #204]
   39844:	ldp	x29, x30, [sp], #80
   39848:	ret

000000000003984c <unstifle_history@@Base>:
   3984c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39850:	ldrb	w9, [x8, #204]
   39854:	cmp	w9, #0x1
   39858:	b.ne	39870 <unstifle_history@@Base+0x24>  // b.any
   3985c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39860:	ldr	x9, [x9, #2256]
   39864:	strb	wzr, [x8, #204]
   39868:	ldr	w0, [x9]
   3986c:	ret
   39870:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39874:	ldr	x8, [x8, #2256]
   39878:	ldr	w8, [x8]
   3987c:	neg	w0, w8
   39880:	ret

0000000000039884 <history_is_stifled@@Base>:
   39884:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39888:	ldrb	w0, [x8, #204]
   3988c:	ret

0000000000039890 <clear_history@@Base>:
   39890:	stp	x29, x30, [sp, #-48]!
   39894:	stp	x22, x21, [sp, #16]
   39898:	stp	x20, x19, [sp, #32]
   3989c:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   398a0:	ldr	x20, [x20, #3056]
   398a4:	mov	x29, sp
   398a8:	ldr	w8, [x20]
   398ac:	cmp	w8, #0x1
   398b0:	b.lt	39908 <clear_history@@Base+0x78>  // b.tstop
   398b4:	adrp	x21, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   398b8:	ldr	x9, [x21, #192]
   398bc:	mov	x22, xzr
   398c0:	b	398e4 <clear_history@@Base+0x54>
   398c4:	mov	x0, x19
   398c8:	bl	169f0 <xfree@plt>
   398cc:	ldr	x9, [x21, #192]
   398d0:	ldr	w8, [x20]
   398d4:	str	xzr, [x9, x22, lsl #3]
   398d8:	add	x22, x22, #0x1
   398dc:	cmp	x22, w8, sxtw
   398e0:	b.ge	39908 <clear_history@@Base+0x78>  // b.tcont
   398e4:	ldr	x19, [x9, x22, lsl #3]
   398e8:	cbz	x19, 398d4 <clear_history@@Base+0x44>
   398ec:	ldr	x0, [x19]
   398f0:	cbz	x0, 398f8 <clear_history@@Base+0x68>
   398f4:	bl	171b0 <free@plt>
   398f8:	ldr	x0, [x19, #8]
   398fc:	cbz	x0, 398c4 <clear_history@@Base+0x34>
   39900:	bl	171b0 <free@plt>
   39904:	b	398c4 <clear_history@@Base+0x34>
   39908:	str	wzr, [x20]
   3990c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39910:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39914:	ldr	x8, [x8, #2536]
   39918:	ldr	x9, [x9, #4000]
   3991c:	ldp	x20, x19, [sp, #32]
   39920:	ldp	x22, x21, [sp, #16]
   39924:	mov	w10, #0x1                   	// #1
   39928:	str	wzr, [x8]
   3992c:	str	w10, [x9]
   39930:	ldp	x29, x30, [sp], #48
   39934:	ret

0000000000039938 <get_history_event@@Base>:
   39938:	sub	sp, sp, #0x70
   3993c:	stp	x29, x30, [sp, #16]
   39940:	stp	x28, x27, [sp, #32]
   39944:	stp	x26, x25, [sp, #48]
   39948:	stp	x24, x23, [sp, #64]
   3994c:	stp	x22, x21, [sp, #80]
   39950:	stp	x20, x19, [sp, #96]
   39954:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39958:	ldrsw	x9, [x1]
   3995c:	ldr	x8, [x8, #3880]
   39960:	add	x29, sp, #0x10
   39964:	ldrb	w11, [x0, x9]
   39968:	ldrb	w8, [x8]
   3996c:	cmp	w11, w8
   39970:	b.ne	39d68 <get_history_event@@Base+0x430>  // b.any
   39974:	add	x10, x9, #0x1
   39978:	ldrb	w8, [x0, x10]
   3997c:	mov	x19, x1
   39980:	mov	x20, x0
   39984:	cmp	w8, w11
   39988:	b.ne	399c0 <get_history_event@@Base+0x88>  // b.any
   3998c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39990:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39994:	ldr	x8, [x8, #4000]
   39998:	ldr	x10, [x10, #3056]
   3999c:	add	w9, w9, #0x2
   399a0:	ldr	w8, [x8]
   399a4:	ldr	w10, [x10]
   399a8:	str	w9, [x19]
   399ac:	add	w8, w8, w10
   399b0:	sub	w0, w8, #0x1
   399b4:	bl	16cc0 <history_get@plt>
   399b8:	cbnz	x0, 39a44 <get_history_event@@Base+0x10c>
   399bc:	b	39d6c <get_history_event@@Base+0x434>
   399c0:	add	w9, w9, #0x2
   399c4:	cmp	w8, #0x2d
   399c8:	csel	w9, w9, w10, eq  // eq = none
   399cc:	sxtw	x11, w9
   399d0:	ldrb	w26, [x20, x11]
   399d4:	sub	w10, w26, #0x30
   399d8:	cmp	w10, #0x9
   399dc:	b.hi	39a4c <get_history_event@@Base+0x114>  // b.pmore
   399e0:	add	x11, x11, x20
   399e4:	mov	w10, wzr
   399e8:	add	x11, x11, #0x1
   399ec:	mov	w12, #0xa                   	// #10
   399f0:	mul	w10, w10, w12
   399f4:	add	w10, w10, w26, uxtb
   399f8:	ldrb	w26, [x11], #1
   399fc:	sub	w10, w10, #0x30
   39a00:	add	w9, w9, #0x1
   39a04:	sub	w13, w26, #0x30
   39a08:	cmp	w13, #0xa
   39a0c:	b.cc	399f0 <get_history_event@@Base+0xb8>  // b.lo, b.ul, b.last
   39a10:	str	w9, [x19]
   39a14:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39a18:	ldr	x9, [x9, #3056]
   39a1c:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39a20:	ldr	x11, [x11, #4000]
   39a24:	cmp	w8, #0x2d
   39a28:	ldr	w9, [x9]
   39a2c:	ldr	w11, [x11]
   39a30:	sub	w9, w9, w10
   39a34:	add	w9, w9, w11
   39a38:	csel	w0, w9, w10, eq  // eq = none
   39a3c:	bl	16cc0 <history_get@plt>
   39a40:	cbz	x0, 39d6c <get_history_event@@Base+0x434>
   39a44:	ldr	x0, [x0]
   39a48:	b	39d6c <get_history_event@@Base+0x434>
   39a4c:	cmp	w26, #0x3f
   39a50:	cinc	x27, x11, eq  // eq = none
   39a54:	add	x22, x20, x27
   39a58:	ldrb	w24, [x22]
   39a5c:	mov	w21, w27
   39a60:	cbz	w24, 39b70 <get_history_event@@Base+0x238>
   39a64:	adrp	x28, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39a68:	ldr	x28, [x28, #1896]
   39a6c:	mov	w23, w2
   39a70:	mov	x25, x22
   39a74:	mov	w21, w27
   39a78:	b	39a90 <get_history_event@@Base+0x158>
   39a7c:	sxtw	x8, w21
   39a80:	add	x21, x8, #0x1
   39a84:	add	x25, x20, x21
   39a88:	ldrb	w24, [x25]
   39a8c:	cbz	w24, 39b70 <get_history_event@@Base+0x238>
   39a90:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   39a94:	cmp	x0, #0x2
   39a98:	b.cc	39ad4 <get_history_event@@Base+0x19c>  // b.lo, b.ul, b.last
   39a9c:	ldr	w8, [x28]
   39aa0:	cbnz	w8, 39ad4 <get_history_event@@Base+0x19c>
   39aa4:	mov	x2, sp
   39aa8:	mov	x0, x20
   39aac:	mov	w1, w21
   39ab0:	str	xzr, [sp]
   39ab4:	bl	17170 <_rl_adjust_point@plt>
   39ab8:	mov	x1, sp
   39abc:	mov	x0, x25
   39ac0:	bl	174b0 <_rl_get_char_len@plt>
   39ac4:	subs	w8, w0, #0x1
   39ac8:	csel	w8, w8, wzr, gt
   39acc:	add	w21, w8, w21
   39ad0:	b.gt	39a7c <get_history_event@@Base+0x144>
   39ad4:	cmp	w26, #0x3f
   39ad8:	b.ne	39ae4 <get_history_event@@Base+0x1ac>  // b.any
   39adc:	ldrb	w8, [x20, w21, sxtw]
   39ae0:	b	39b50 <get_history_event@@Base+0x218>
   39ae4:	and	w25, w24, #0xff
   39ae8:	cmp	w25, #0x3a
   39aec:	b.hi	39b10 <get_history_event@@Base+0x1d8>  // b.pmore
   39af0:	and	x8, x24, #0xff
   39af4:	mov	w9, #0x1                   	// #1
   39af8:	lsl	x8, x9, x8
   39afc:	mov	x9, #0x200                 	// #512
   39b00:	movk	x9, #0x1, lsl #32
   39b04:	movk	x9, #0x400, lsl #48
   39b08:	tst	x8, x9
   39b0c:	b.ne	39b70 <get_history_event@@Base+0x238>  // b.any
   39b10:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   39b14:	mov	w2, #0x6                   	// #6
   39b18:	add	x0, x0, #0x7f
   39b1c:	mov	w1, w25
   39b20:	bl	17530 <memchr@plt>
   39b24:	cbnz	x0, 39b70 <get_history_event@@Base+0x238>
   39b28:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39b2c:	ldr	x8, [x8, #3024]
   39b30:	ldr	x0, [x8]
   39b34:	cbz	x0, 39b44 <get_history_event@@Base+0x20c>
   39b38:	mov	w1, w25
   39b3c:	bl	17380 <strchr@plt>
   39b40:	cbnz	x0, 39b70 <get_history_event@@Base+0x238>
   39b44:	ldrb	w8, [x20, w21, sxtw]
   39b48:	cmp	w8, w23
   39b4c:	b.eq	39b70 <get_history_event@@Base+0x238>  // b.none
   39b50:	cmp	w26, #0x3f
   39b54:	cset	w9, eq  // eq = none
   39b58:	cmp	w8, #0x3f
   39b5c:	cset	w10, eq  // eq = none
   39b60:	cmp	w8, #0xa
   39b64:	b.eq	39b70 <get_history_event@@Base+0x238>  // b.none
   39b68:	and	w8, w9, w10
   39b6c:	tbz	w8, #0, 39a7c <get_history_event@@Base+0x144>
   39b70:	sub	w24, w21, w27
   39b74:	add	w8, w24, #0x1
   39b78:	sxtw	x0, w8
   39b7c:	bl	16bf0 <xmalloc@plt>
   39b80:	mov	x23, x0
   39b84:	cbz	w24, 39ba0 <get_history_event@@Base+0x268>
   39b88:	sxtw	x24, w24
   39b8c:	mov	x0, x23
   39b90:	mov	x1, x22
   39b94:	mov	x2, x24
   39b98:	bl	17730 <strncpy@plt>
   39b9c:	b	39ba4 <get_history_event@@Base+0x26c>
   39ba0:	mov	x24, xzr
   39ba4:	cmp	w26, #0x3f
   39ba8:	strb	wzr, [x23, x24]
   39bac:	b.ne	39bfc <get_history_event@@Base+0x2c4>  // b.any
   39bb0:	ldrb	w8, [x20, w21, sxtw]
   39bb4:	cmp	w8, #0x3f
   39bb8:	cinc	w8, w21, eq  // eq = none
   39bbc:	str	w8, [x19]
   39bc0:	ldrb	w8, [x23]
   39bc4:	cbnz	w8, 39c00 <get_history_event@@Base+0x2c8>
   39bc8:	adrp	x19, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39bcc:	ldr	x8, [x19, #224]
   39bd0:	cbz	x8, 39c64 <get_history_event@@Base+0x32c>
   39bd4:	mov	x0, x23
   39bd8:	bl	169f0 <xfree@plt>
   39bdc:	ldr	x0, [x19, #224]
   39be0:	bl	16440 <strlen@plt>
   39be4:	add	x0, x0, #0x1
   39be8:	bl	16bf0 <xmalloc@plt>
   39bec:	ldr	x1, [x19, #224]
   39bf0:	mov	x23, x0
   39bf4:	bl	17480 <strcpy@plt>
   39bf8:	b	39c00 <get_history_event@@Base+0x2c8>
   39bfc:	str	w21, [x19]
   39c00:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c04:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c08:	ldr	x8, [x8, #2968]
   39c0c:	ldr	x9, [x9, #3104]
   39c10:	cmp	w26, #0x3f
   39c14:	mov	w1, #0xffffffff            	// #-1
   39c18:	mov	x0, x23
   39c1c:	csel	x19, x9, x8, eq  // eq = none
   39c20:	blr	x19
   39c24:	tbnz	w0, #31, 39c64 <get_history_event@@Base+0x32c>
   39c28:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c2c:	ldr	x21, [x21, #2536]
   39c30:	mov	w20, w0
   39c34:	cmp	w26, #0x3f
   39c38:	b.eq	39c80 <get_history_event@@Base+0x348>  // b.none
   39c3c:	cbz	w20, 39c80 <get_history_event@@Base+0x348>
   39c40:	ldr	w8, [x21]
   39c44:	cbz	w8, 39d50 <get_history_event@@Base+0x418>
   39c48:	sub	w8, w8, #0x1
   39c4c:	mov	w1, #0xffffffff            	// #-1
   39c50:	mov	x0, x23
   39c54:	str	w8, [x21]
   39c58:	blr	x19
   39c5c:	mov	w20, w0
   39c60:	tbz	w0, #31, 39c34 <get_history_event@@Base+0x2fc>
   39c64:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c68:	ldr	x8, [x8, #3056]
   39c6c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c70:	ldr	w8, [x8]
   39c74:	ldr	x9, [x9, #2536]
   39c78:	str	w8, [x9]
   39c7c:	b	39d60 <get_history_event@@Base+0x428>
   39c80:	bl	16a60 <current_history@plt>
   39c84:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39c88:	ldr	x8, [x8, #3056]
   39c8c:	ldr	w8, [x8]
   39c90:	str	w8, [x21]
   39c94:	cbz	x0, 39d60 <get_history_event@@Base+0x428>
   39c98:	mov	x19, x0
   39c9c:	cmp	w26, #0x3f
   39ca0:	b.ne	39d8c <get_history_event@@Base+0x454>  // b.any
   39ca4:	adrp	x22, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39ca8:	ldr	x0, [x22, #224]
   39cac:	cbz	x0, 39cb4 <get_history_event@@Base+0x37c>
   39cb0:	bl	171b0 <free@plt>
   39cb4:	adrp	x21, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   39cb8:	ldr	x0, [x21, #232]
   39cbc:	str	x23, [x22, #224]
   39cc0:	cbz	x0, 39cc8 <get_history_event@@Base+0x390>
   39cc4:	bl	171b0 <free@plt>
   39cc8:	ldr	x0, [x19]
   39ccc:	sub	x2, x29, #0x4
   39cd0:	mov	w1, w20
   39cd4:	bl	3b788 <history_tokenize@@Base+0xc>
   39cd8:	mov	x20, x0
   39cdc:	cbz	x0, 39d9c <get_history_event@@Base+0x464>
   39ce0:	ldur	w8, [x29, #-4]
   39ce4:	cmn	w8, #0x1
   39ce8:	b.eq	39d9c <get_history_event@@Base+0x464>  // b.none
   39cec:	sxtw	x9, w8
   39cf0:	ldr	x22, [x20, x9, lsl #3]
   39cf4:	cmp	w8, #0x1
   39cf8:	b.lt	39d18 <get_history_event@@Base+0x3e0>  // b.tstop
   39cfc:	mov	x23, xzr
   39d00:	ldr	x0, [x20, x23, lsl #3]
   39d04:	bl	169f0 <xfree@plt>
   39d08:	ldursw	x8, [x29, #-4]
   39d0c:	add	x23, x23, #0x1
   39d10:	cmp	x23, x8
   39d14:	b.lt	39d00 <get_history_event@@Base+0x3c8>  // b.tstop
   39d18:	add	w8, w8, #0x1
   39d1c:	ldr	x0, [x20, w8, sxtw #3]
   39d20:	cbz	x0, 39d3c <get_history_event@@Base+0x404>
   39d24:	sxtw	x8, w8
   39d28:	add	x8, x20, x8, lsl #3
   39d2c:	add	x23, x8, #0x8
   39d30:	bl	169f0 <xfree@plt>
   39d34:	ldr	x0, [x23], #8
   39d38:	cbnz	x0, 39d30 <get_history_event@@Base+0x3f8>
   39d3c:	mov	x0, x20
   39d40:	bl	169f0 <xfree@plt>
   39d44:	str	x22, [x21, #232]
   39d48:	ldr	x0, [x19]
   39d4c:	b	39d6c <get_history_event@@Base+0x434>
   39d50:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39d54:	ldr	x8, [x8, #3056]
   39d58:	ldr	w8, [x8]
   39d5c:	str	w8, [x21]
   39d60:	mov	x0, x23
   39d64:	bl	169f0 <xfree@plt>
   39d68:	mov	x0, xzr
   39d6c:	ldp	x20, x19, [sp, #96]
   39d70:	ldp	x22, x21, [sp, #80]
   39d74:	ldp	x24, x23, [sp, #64]
   39d78:	ldp	x26, x25, [sp, #48]
   39d7c:	ldp	x28, x27, [sp, #32]
   39d80:	ldp	x29, x30, [sp, #16]
   39d84:	add	sp, sp, #0x70
   39d88:	ret
   39d8c:	mov	x0, x23
   39d90:	bl	169f0 <xfree@plt>
   39d94:	ldr	x0, [x19]
   39d98:	b	39d6c <get_history_event@@Base+0x434>
   39d9c:	cbz	x20, 39dc0 <get_history_event@@Base+0x488>
   39da0:	ldr	x0, [x20]
   39da4:	cbz	x0, 39db8 <get_history_event@@Base+0x480>
   39da8:	add	x22, x20, #0x8
   39dac:	bl	169f0 <xfree@plt>
   39db0:	ldr	x0, [x22], #8
   39db4:	cbnz	x0, 39dac <get_history_event@@Base+0x474>
   39db8:	mov	x0, x20
   39dbc:	bl	171b0 <free@plt>
   39dc0:	str	xzr, [x21, #232]
   39dc4:	ldr	x0, [x19]
   39dc8:	mov	x22, xzr
   39dcc:	b	39d6c <get_history_event@@Base+0x434>

0000000000039dd0 <history_expand@@Base>:
   39dd0:	sub	sp, sp, #0x120
   39dd4:	stp	x29, x30, [sp, #192]
   39dd8:	stp	x28, x27, [sp, #208]
   39ddc:	stp	x26, x25, [sp, #224]
   39de0:	stp	x24, x23, [sp, #240]
   39de4:	stp	x22, x21, [sp, #256]
   39de8:	stp	x20, x19, [sp, #272]
   39dec:	add	x29, sp, #0xc0
   39df0:	cbz	x1, 39e84 <history_expand@@Base+0xb4>
   39df4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39df8:	ldr	x8, [x8, #3880]
   39dfc:	mov	x27, x1
   39e00:	mov	x22, x0
   39e04:	ldrb	w8, [x8]
   39e08:	cbz	w8, 3a1dc <history_expand@@Base+0x40c>
   39e0c:	mov	w0, #0x100                 	// #256
   39e10:	bl	16bf0 <xmalloc@plt>
   39e14:	stur	x0, [x29, #-64]
   39e18:	strb	wzr, [x0]
   39e1c:	mov	x0, x22
   39e20:	bl	16440 <strlen@plt>
   39e24:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39e28:	ldrb	w8, [x22]
   39e2c:	ldr	x9, [x9, #3664]
   39e30:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39e34:	mov	x23, x0
   39e38:	ldrb	w9, [x9]
   39e3c:	ldr	x19, [x19, #2024]
   39e40:	cmp	w8, w9
   39e44:	b.ne	39e8c <history_expand@@Base+0xbc>  // b.any
   39e48:	add	w8, w23, #0x5
   39e4c:	sxtw	x0, w8
   39e50:	bl	16bf0 <xmalloc@plt>
   39e54:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39e58:	ldr	x8, [x8, #3880]
   39e5c:	mov	w9, #0x733a                	// #29498
   39e60:	mov	x25, x0
   39e64:	mov	x1, x22
   39e68:	ldrb	w8, [x8]
   39e6c:	strh	w9, [x0, #2]
   39e70:	strb	w8, [x0, #1]
   39e74:	strb	w8, [x0], #4
   39e78:	bl	17480 <strcpy@plt>
   39e7c:	add	w23, w23, #0x4
   39e80:	b	3a120 <history_expand@@Base+0x350>
   39e84:	mov	w0, wzr
   39e88:	b	3b36c <history_expand@@Base+0x159c>
   39e8c:	ldr	w9, [x19]
   39e90:	stp	x27, x23, [sp, #56]
   39e94:	mov	w27, wzr
   39e98:	stur	xzr, [x29, #-56]
   39e9c:	cmp	w9, #0x22
   39ea0:	cset	w28, eq  // eq = none
   39ea4:	cmp	w9, #0x27
   39ea8:	b.ne	39eec <history_expand@@Base+0x11c>  // b.any
   39eac:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39eb0:	ldr	x9, [x9, #3360]
   39eb4:	ldr	w9, [x9]
   39eb8:	cbz	w9, 39eec <history_expand@@Base+0x11c>
   39ebc:	mov	x27, xzr
   39ec0:	add	x9, x22, #0x1
   39ec4:	ands	w8, w8, #0xff
   39ec8:	b.eq	39eec <history_expand@@Base+0x11c>  // b.none
   39ecc:	cmp	w8, #0x27
   39ed0:	b.eq	39ee8 <history_expand@@Base+0x118>  // b.none
   39ed4:	ldrb	w8, [x9, x27]
   39ed8:	add	x27, x27, #0x1
   39edc:	ands	w8, w8, #0xff
   39ee0:	b.ne	39ecc <history_expand@@Base+0xfc>  // b.any
   39ee4:	b	39eec <history_expand@@Base+0x11c>
   39ee8:	add	w27, w27, #0x1
   39eec:	add	x19, x22, w27, sxtw
   39ef0:	ldrb	w8, [x19]
   39ef4:	cbz	w8, 3a0f8 <history_expand@@Base+0x328>
   39ef8:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39efc:	ldr	x25, [x25, #3568]
   39f00:	b	39f20 <history_expand@@Base+0x150>
   39f04:	add	w8, w27, w0
   39f08:	sub	w27, w8, #0x1
   39f0c:	sxtw	x8, w27
   39f10:	add	x27, x8, #0x1
   39f14:	add	x19, x22, x27
   39f18:	ldrb	w8, [x19]
   39f1c:	cbz	w8, 3a0f8 <history_expand@@Base+0x328>
   39f20:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   39f24:	cmp	x0, #0x2
   39f28:	b.cc	39f50 <history_expand@@Base+0x180>  // b.lo, b.ul, b.last
   39f2c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39f30:	ldr	x8, [x8, #1896]
   39f34:	ldr	w8, [x8]
   39f38:	cbnz	w8, 39f50 <history_expand@@Base+0x180>
   39f3c:	sub	x1, x29, #0x38
   39f40:	mov	x0, x19
   39f44:	bl	174b0 <_rl_get_char_len@plt>
   39f48:	cmp	w0, #0x2
   39f4c:	b.ge	39f04 <history_expand@@Base+0x134>  // b.tcont
   39f50:	sxtw	x20, w27
   39f54:	mov	x8, x22
   39f58:	add	x23, x20, #0x1
   39f5c:	ldrb	w26, [x25]
   39f60:	ldrb	w24, [x22, x23]
   39f64:	ldrb	w8, [x19]
   39f68:	cbz	w26, 39fa8 <history_expand@@Base+0x1d8>
   39f6c:	cbnz	w28, 39fa8 <history_expand@@Base+0x1d8>
   39f70:	cmp	w8, w26
   39f74:	b.ne	39fa8 <history_expand@@Base+0x1d8>  // b.any
   39f78:	cbz	w27, 3a0e4 <history_expand@@Base+0x314>
   39f7c:	add	x8, x20, x22
   39f80:	ldurb	w1, [x8, #-1]
   39f84:	cbz	w1, 39fa4 <history_expand@@Base+0x1d4>
   39f88:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39f8c:	ldr	x8, [x8, #2824]
   39f90:	ldr	x0, [x8]
   39f94:	bl	17380 <strchr@plt>
   39f98:	mov	w8, w26
   39f9c:	cbz	x0, 39fa8 <history_expand@@Base+0x1d8>
   39fa0:	b	3a0e4 <history_expand@@Base+0x314>
   39fa4:	mov	w8, w26
   39fa8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39fac:	ldr	x9, [x9, #3880]
   39fb0:	ldrb	w9, [x9]
   39fb4:	cmp	w8, w9
   39fb8:	b.ne	3a008 <history_expand@@Base+0x238>  // b.any
   39fbc:	cbz	w24, 39f0c <history_expand@@Base+0x13c>
   39fc0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39fc4:	ldr	x8, [x8, #3208]
   39fc8:	mov	w1, w24
   39fcc:	ldr	x0, [x8]
   39fd0:	bl	17380 <strchr@plt>
   39fd4:	cbnz	x0, 39f0c <history_expand@@Base+0x13c>
   39fd8:	cbz	w28, 39fe4 <history_expand@@Base+0x214>
   39fdc:	cmp	w24, #0x22
   39fe0:	b.eq	39f0c <history_expand@@Base+0x13c>  // b.none
   39fe4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   39fe8:	ldr	x8, [x8, #2336]
   39fec:	ldr	x8, [x8]
   39ff0:	cbz	x8, 3a0f8 <history_expand@@Base+0x328>
   39ff4:	mov	x0, x22
   39ff8:	mov	w1, w27
   39ffc:	blr	x8
   3a000:	cbnz	w0, 39f0c <history_expand@@Base+0x13c>
   3a004:	b	3a0f8 <history_expand@@Base+0x328>
   3a008:	cbz	w28, 3a01c <history_expand@@Base+0x24c>
   3a00c:	cmp	w24, #0x22
   3a010:	b.ne	3a01c <history_expand@@Base+0x24c>  // b.any
   3a014:	cmp	w8, #0x5c
   3a018:	b.eq	3a0dc <history_expand@@Base+0x30c>  // b.none
   3a01c:	adrp	x10, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a020:	ldr	x10, [x10, #3360]
   3a024:	ldr	w10, [x10]
   3a028:	cbz	w10, 39f0c <history_expand@@Base+0x13c>
   3a02c:	cmp	w8, #0x22
   3a030:	b.ne	3a040 <history_expand@@Base+0x270>  // b.any
   3a034:	mov	w8, #0x1                   	// #1
   3a038:	sub	w28, w8, w28
   3a03c:	b	39f0c <history_expand@@Base+0x13c>
   3a040:	cbnz	w28, 3a068 <history_expand@@Base+0x298>
   3a044:	cmp	w8, #0x27
   3a048:	b.ne	3a068 <history_expand@@Base+0x298>  // b.any
   3a04c:	cmp	w27, #0x1
   3a050:	b.lt	3a084 <history_expand@@Base+0x2b4>  // b.tstop
   3a054:	add	x8, x20, x22
   3a058:	ldurb	w8, [x8, #-1]
   3a05c:	cmp	w8, #0x24
   3a060:	cset	w8, eq  // eq = none
   3a064:	b	3a098 <history_expand@@Base+0x2c8>
   3a068:	cmp	w8, #0x5c
   3a06c:	b.ne	39f0c <history_expand@@Base+0x13c>  // b.any
   3a070:	cmp	w24, w9
   3a074:	mov	w8, #0x27                  	// #39
   3a078:	ccmp	w24, w8, #0x4, ne  // ne = any
   3a07c:	csel	w27, w23, w27, eq  // eq = none
   3a080:	b	39f0c <history_expand@@Base+0x13c>
   3a084:	mov	w8, wzr
   3a088:	b	3a098 <history_expand@@Base+0x2c8>
   3a08c:	sxtw	x9, w23
   3a090:	add	x23, x9, #0x1
   3a094:	ldrb	w24, [x22, x23]
   3a098:	ands	w9, w24, #0xff
   3a09c:	b.eq	3a0d8 <history_expand@@Base+0x308>  // b.none
   3a0a0:	cmp	w9, #0x27
   3a0a4:	b.eq	3a0d8 <history_expand@@Base+0x308>  // b.none
   3a0a8:	and	w9, w24, #0xff
   3a0ac:	cmp	w9, #0x5c
   3a0b0:	cset	w9, ne  // ne = any
   3a0b4:	eor	w10, w8, #0x1
   3a0b8:	orr	w9, w10, w9
   3a0bc:	tbnz	w9, #0, 3a08c <history_expand@@Base+0x2bc>
   3a0c0:	sxtw	x9, w23
   3a0c4:	add	x9, x9, #0x1
   3a0c8:	ldrb	w10, [x22, x9]
   3a0cc:	cmp	w10, #0x0
   3a0d0:	csel	w23, w23, w9, eq  // eq = none
   3a0d4:	b	3a08c <history_expand@@Base+0x2bc>
   3a0d8:	mov	w28, wzr
   3a0dc:	mov	w27, w23
   3a0e0:	b	39f0c <history_expand@@Base+0x13c>
   3a0e4:	sub	w27, w27, #0x1
   3a0e8:	add	x8, x22, x20
   3a0ec:	ldrb	w9, [x8], #1
   3a0f0:	add	w27, w27, #0x1
   3a0f4:	cbnz	w9, 3a0ec <history_expand@@Base+0x31c>
   3a0f8:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a0fc:	ldrb	w8, [x22, w27, sxtw]
   3a100:	ldr	x9, [x9, #3880]
   3a104:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a108:	ldp	x27, x23, [sp, #56]
   3a10c:	mov	x25, x22
   3a110:	ldrb	w9, [x9]
   3a114:	ldr	x19, [x19, #2024]
   3a118:	cmp	w8, w9
   3a11c:	b.ne	3a1d4 <history_expand@@Base+0x404>  // b.any
   3a120:	ldr	w8, [x19]
   3a124:	mov	w28, wzr
   3a128:	mov	w24, #0x100                 	// #256
   3a12c:	str	x22, [sp, #72]
   3a130:	cmp	w8, #0x22
   3a134:	cset	w9, eq  // eq = none
   3a138:	cmp	w8, #0x27
   3a13c:	cset	w8, eq  // eq = none
   3a140:	stur	w9, [x29, #-88]
   3a144:	str	w8, [sp, #88]
   3a148:	b.ne	3a248 <history_expand@@Base+0x478>  // b.any
   3a14c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a150:	ldr	x8, [x8, #3360]
   3a154:	ldr	w8, [x8]
   3a158:	cbz	w8, 3a248 <history_expand@@Base+0x478>
   3a15c:	mov	x20, xzr
   3a160:	ldrb	w8, [x25, x20]
   3a164:	cbz	w8, 3a17c <history_expand@@Base+0x3ac>
   3a168:	cmp	w8, #0x27
   3a16c:	b.eq	3a17c <history_expand@@Base+0x3ac>  // b.none
   3a170:	add	x20, x20, #0x1
   3a174:	ldrb	w8, [x25, x20]
   3a178:	cbnz	w8, 3a168 <history_expand@@Base+0x398>
   3a17c:	and	x19, x20, #0xffffffff
   3a180:	cbz	w20, 3a204 <history_expand@@Base+0x434>
   3a184:	mov	x22, xzr
   3a188:	mov	w24, #0x100                 	// #256
   3a18c:	b	3a1b0 <history_expand@@Base+0x3e0>
   3a190:	ldur	x9, [x29, #-64]
   3a194:	ldrb	w8, [x25, x22]
   3a198:	add	x9, x9, x22
   3a19c:	add	x22, x22, #0x1
   3a1a0:	cmp	x19, x22
   3a1a4:	strb	w8, [x9]
   3a1a8:	strb	wzr, [x9, #1]
   3a1ac:	b.eq	3a208 <history_expand@@Base+0x438>  // b.none
   3a1b0:	sub	w8, w24, #0x1
   3a1b4:	cmp	x22, w8, sxtw
   3a1b8:	b.lt	3a190 <history_expand@@Base+0x3c0>  // b.tstop
   3a1bc:	ldur	x0, [x29, #-64]
   3a1c0:	add	w24, w24, #0x40
   3a1c4:	sxtw	x1, w24
   3a1c8:	bl	16a50 <xrealloc@plt>
   3a1cc:	stur	x0, [x29, #-64]
   3a1d0:	b	3a190 <history_expand@@Base+0x3c0>
   3a1d4:	ldur	x0, [x29, #-64]
   3a1d8:	bl	169f0 <xfree@plt>
   3a1dc:	mov	x0, x22
   3a1e0:	bl	16440 <strlen@plt>
   3a1e4:	add	x0, x0, #0x1
   3a1e8:	bl	16bf0 <xmalloc@plt>
   3a1ec:	mov	x1, x22
   3a1f0:	mov	x19, x0
   3a1f4:	bl	17480 <strcpy@plt>
   3a1f8:	mov	w0, wzr
   3a1fc:	str	x19, [x27]
   3a200:	b	3b36c <history_expand@@Base+0x159c>
   3a204:	mov	w24, #0x100                 	// #256
   3a208:	ldrb	w8, [x25, x19]
   3a20c:	cbz	w8, 3b31c <history_expand@@Base+0x154c>
   3a210:	sub	w9, w24, #0x1
   3a214:	cmp	w9, w20
   3a218:	b.gt	3a234 <history_expand@@Base+0x464>
   3a21c:	ldur	x0, [x29, #-64]
   3a220:	add	w24, w24, #0x40
   3a224:	sxtw	x1, w24
   3a228:	bl	16a50 <xrealloc@plt>
   3a22c:	ldrb	w8, [x25, x19]
   3a230:	stur	x0, [x29, #-64]
   3a234:	ldur	x9, [x29, #-64]
   3a238:	add	x28, x20, #0x1
   3a23c:	str	wzr, [sp, #88]
   3a240:	strb	w8, [x9, w20, uxtw]
   3a244:	strb	wzr, [x9, w28, uxtw]
   3a248:	mov	w20, w28
   3a24c:	cmp	w28, w23
   3a250:	b.ge	3b32c <history_expand@@Base+0x155c>  // b.tcont
   3a254:	add	x9, x25, #0x2
   3a258:	str	x9, [sp, #40]
   3a25c:	add	w9, w23, #0x1
   3a260:	mov	w8, wzr
   3a264:	stp	w9, wzr, [sp, #48]
   3a268:	add	x9, x25, #0x1
   3a26c:	str	wzr, [sp, #84]
   3a270:	str	x9, [sp, #96]
   3a274:	stur	x25, [x29, #-72]
   3a278:	b	3a2a0 <history_expand@@Base+0x4d0>
   3a27c:	ldur	x10, [x29, #-64]
   3a280:	sxtw	x9, w20
   3a284:	add	x20, x9, #0x1
   3a288:	mov	w8, wzr
   3a28c:	strb	w22, [x10, x9]
   3a290:	strb	wzr, [x10, x20]
   3a294:	add	w28, w28, #0x1
   3a298:	cmp	w28, w23
   3a29c:	b.ge	3b334 <history_expand@@Base+0x1564>  // b.tcont
   3a2a0:	sxtw	x26, w28
   3a2a4:	ldrb	w22, [x25, x26]
   3a2a8:	cbz	w8, 3a2d0 <history_expand@@Base+0x500>
   3a2ac:	sub	w8, w24, #0x1
   3a2b0:	cmp	w20, w8
   3a2b4:	b.lt	3a27c <history_expand@@Base+0x4ac>  // b.tstop
   3a2b8:	ldur	x0, [x29, #-64]
   3a2bc:	add	w24, w24, #0x40
   3a2c0:	sxtw	x1, w24
   3a2c4:	bl	16a50 <xrealloc@plt>
   3a2c8:	stur	x0, [x29, #-64]
   3a2cc:	b	3a27c <history_expand@@Base+0x4ac>
   3a2d0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3a2d4:	cmp	x0, #0x2
   3a2d8:	b.cc	3a3ac <history_expand@@Base+0x5dc>  // b.lo, b.ul, b.last
   3a2dc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a2e0:	ldr	x8, [x8, #1896]
   3a2e4:	ldr	w8, [x8]
   3a2e8:	cbnz	w8, 3a3ac <history_expand@@Base+0x5dc>
   3a2ec:	ldr	x8, [sp, #96]
   3a2f0:	mov	x19, xzr
   3a2f4:	add	w25, w28, #0x10
   3a2f8:	stp	xzr, xzr, [x29, #-48]
   3a2fc:	add	x26, x8, x26
   3a300:	mov	w8, w22
   3a304:	sub	x9, x29, #0x30
   3a308:	sub	x0, x29, #0x30
   3a30c:	sub	x1, x29, #0x38
   3a310:	strb	w8, [x9, x19]
   3a314:	stur	xzr, [x29, #-56]
   3a318:	bl	174b0 <_rl_get_char_len@plt>
   3a31c:	cmn	w0, #0x2
   3a320:	b.ne	3a33c <history_expand@@Base+0x56c>  // b.any
   3a324:	ldrb	w8, [x26, x19]
   3a328:	add	x19, x19, #0x1
   3a32c:	cmp	x19, #0x10
   3a330:	b.ne	3a304 <history_expand@@Base+0x534>  // b.any
   3a334:	mov	w28, w25
   3a338:	b	3a340 <history_expand@@Base+0x570>
   3a33c:	add	w28, w28, w19
   3a340:	sub	x0, x29, #0x30
   3a344:	bl	16440 <strlen@plt>
   3a348:	ldur	x25, [x29, #-72]
   3a34c:	cmp	x0, #0x2
   3a350:	b.cc	3a3ac <history_expand@@Base+0x5dc>  // b.lo, b.ul, b.last
   3a354:	mov	x19, x0
   3a358:	sxtw	x8, w20
   3a35c:	add	x20, x8, w19, sxtw
   3a360:	cmp	w20, w24
   3a364:	b.lt	3a390 <history_expand@@Base+0x5c0>  // b.tstop
   3a368:	sxtw	x8, w24
   3a36c:	add	x8, x8, #0x80
   3a370:	sub	w9, w8, #0x80
   3a374:	cmp	w20, w9
   3a378:	b.ge	3a36c <history_expand@@Base+0x59c>  // b.tcont
   3a37c:	ldur	x0, [x29, #-64]
   3a380:	sub	x24, x8, #0x80
   3a384:	mov	x1, x24
   3a388:	bl	16a50 <xrealloc@plt>
   3a38c:	stur	x0, [x29, #-64]
   3a390:	ldur	x8, [x29, #-64]
   3a394:	sub	x1, x29, #0x30
   3a398:	add	x8, x8, x20
   3a39c:	sub	x0, x8, w19, sxtw
   3a3a0:	bl	17480 <strcpy@plt>
   3a3a4:	mov	w8, wzr
   3a3a8:	b	3a294 <history_expand@@Base+0x4c4>
   3a3ac:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a3b0:	ldr	x8, [x8, #3568]
   3a3b4:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a3b8:	ldrb	w8, [x8]
   3a3bc:	ldr	x9, [x9, #3880]
   3a3c0:	cmp	w22, w8
   3a3c4:	ldrb	w9, [x9]
   3a3c8:	mov	w8, #0xfffffffe            	// #-2
   3a3cc:	csel	w8, w8, w22, eq  // eq = none
   3a3d0:	cmp	w22, w9
   3a3d4:	mov	w9, #0xfffffffd            	// #-3
   3a3d8:	csel	w8, w9, w8, eq  // eq = none
   3a3dc:	cmp	w8, #0x21
   3a3e0:	b.le	3a438 <history_expand@@Base+0x668>
   3a3e4:	cmp	w8, #0x22
   3a3e8:	b.eq	3a48c <history_expand@@Base+0x6bc>  // b.none
   3a3ec:	cmp	w8, #0x27
   3a3f0:	b.eq	3a4cc <history_expand@@Base+0x6fc>  // b.none
   3a3f4:	cmp	w8, #0x5c
   3a3f8:	b.ne	3a460 <history_expand@@Base+0x690>  // b.any
   3a3fc:	sub	w8, w24, #0x1
   3a400:	cmp	w20, w8
   3a404:	b.lt	3a41c <history_expand@@Base+0x64c>  // b.tstop
   3a408:	ldur	x0, [x29, #-64]
   3a40c:	add	w24, w24, #0x40
   3a410:	sxtw	x1, w24
   3a414:	bl	16a50 <xrealloc@plt>
   3a418:	stur	x0, [x29, #-64]
   3a41c:	ldur	x9, [x29, #-64]
   3a420:	mov	w8, #0x5c                  	// #92
   3a424:	strh	w8, [x9, w20, sxtw]
   3a428:	add	w9, w20, #0x1
   3a42c:	mov	w8, #0x1                   	// #1
   3a430:	mov	w20, w9
   3a434:	b	3a294 <history_expand@@Base+0x4c4>
   3a438:	cmn	w8, #0x3
   3a43c:	b.eq	3a514 <history_expand@@Base+0x744>  // b.none
   3a440:	cmn	w8, #0x2
   3a444:	b.ne	3a460 <history_expand@@Base+0x690>  // b.any
   3a448:	ldur	w8, [x29, #-88]
   3a44c:	cbz	w8, 3a5b4 <history_expand@@Base+0x7e4>
   3a450:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a454:	ldr	x8, [x8, #3360]
   3a458:	ldr	w8, [x8]
   3a45c:	cbz	w8, 3a5b4 <history_expand@@Base+0x7e4>
   3a460:	sub	w8, w24, #0x1
   3a464:	cmp	w20, w8
   3a468:	b.lt	3a480 <history_expand@@Base+0x6b0>  // b.tstop
   3a46c:	ldur	x0, [x29, #-64]
   3a470:	add	w24, w24, #0x40
   3a474:	sxtw	x1, w24
   3a478:	bl	16a50 <xrealloc@plt>
   3a47c:	stur	x0, [x29, #-64]
   3a480:	ldrb	w9, [x25, w28, sxtw]
   3a484:	mov	w8, wzr
   3a488:	b	3a59c <history_expand@@Base+0x7cc>
   3a48c:	sub	w8, w24, #0x1
   3a490:	cmp	w20, w8
   3a494:	ldur	w8, [x29, #-88]
   3a498:	mov	w9, #0x1                   	// #1
   3a49c:	sub	w8, w9, w8
   3a4a0:	stur	w8, [x29, #-88]
   3a4a4:	b.lt	3a4bc <history_expand@@Base+0x6ec>  // b.tstop
   3a4a8:	ldur	x0, [x29, #-64]
   3a4ac:	add	w24, w24, #0x40
   3a4b0:	sxtw	x1, w24
   3a4b4:	bl	16a50 <xrealloc@plt>
   3a4b8:	stur	x0, [x29, #-64]
   3a4bc:	mov	w8, wzr
   3a4c0:	add	w9, w20, #0x1
   3a4c4:	mov	w10, #0x22                  	// #34
   3a4c8:	b	3a504 <history_expand@@Base+0x734>
   3a4cc:	ldr	w8, [sp, #88]
   3a4d0:	cbz	w8, 3a65c <history_expand@@Base+0x88c>
   3a4d4:	sub	w8, w24, #0x1
   3a4d8:	cmp	w20, w8
   3a4dc:	b.lt	3a4f4 <history_expand@@Base+0x724>  // b.tstop
   3a4e0:	ldur	x0, [x29, #-64]
   3a4e4:	add	w24, w24, #0x40
   3a4e8:	sxtw	x1, w24
   3a4ec:	bl	16a50 <xrealloc@plt>
   3a4f0:	stur	x0, [x29, #-64]
   3a4f4:	str	wzr, [sp, #88]
   3a4f8:	mov	w8, wzr
   3a4fc:	add	w9, w20, #0x1
   3a500:	mov	w10, #0x27                  	// #39
   3a504:	ldur	x11, [x29, #-64]
   3a508:	strh	w10, [x11, w20, sxtw]
   3a50c:	mov	w20, w9
   3a510:	b	3a294 <history_expand@@Base+0x4c4>
   3a514:	sxtw	x26, w28
   3a518:	mov	x8, x25
   3a51c:	add	x25, x26, #0x1
   3a520:	ldrb	w19, [x8, x25]
   3a524:	cbz	w19, 3a570 <history_expand@@Base+0x7a0>
   3a528:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a52c:	ldr	x8, [x8, #3208]
   3a530:	mov	w1, w19
   3a534:	ldr	x0, [x8]
   3a538:	bl	17380 <strchr@plt>
   3a53c:	cbnz	x0, 3a570 <history_expand@@Base+0x7a0>
   3a540:	ldur	w8, [x29, #-88]
   3a544:	cbz	w8, 3a550 <history_expand@@Base+0x780>
   3a548:	cmp	w19, #0x22
   3a54c:	b.eq	3a570 <history_expand@@Base+0x7a0>  // b.none
   3a550:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a554:	ldr	x8, [x8, #2336]
   3a558:	ldr	x8, [x8]
   3a55c:	cbz	x8, 3a6c4 <history_expand@@Base+0x8f4>
   3a560:	ldur	x0, [x29, #-72]
   3a564:	mov	w1, w28
   3a568:	blr	x8
   3a56c:	cbz	w0, 3a6c4 <history_expand@@Base+0x8f4>
   3a570:	sub	w8, w24, #0x1
   3a574:	cmp	w20, w8
   3a578:	b.lt	3a590 <history_expand@@Base+0x7c0>  // b.tstop
   3a57c:	ldur	x0, [x29, #-64]
   3a580:	add	w24, w24, #0x40
   3a584:	sxtw	x1, w24
   3a588:	bl	16a50 <xrealloc@plt>
   3a58c:	stur	x0, [x29, #-64]
   3a590:	ldur	x25, [x29, #-72]
   3a594:	mov	w8, wzr
   3a598:	ldrb	w9, [x25, x26]
   3a59c:	ldur	x11, [x29, #-64]
   3a5a0:	sxtw	x10, w20
   3a5a4:	add	x20, x10, #0x1
   3a5a8:	strb	w9, [x11, x10]
   3a5ac:	strb	wzr, [x11, x20]
   3a5b0:	b	3a294 <history_expand@@Base+0x4c4>
   3a5b4:	cbz	w28, 3a5d8 <history_expand@@Base+0x808>
   3a5b8:	add	x8, x25, w28, sxtw
   3a5bc:	ldurb	w1, [x8, #-1]
   3a5c0:	cbz	w1, 3a460 <history_expand@@Base+0x690>
   3a5c4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a5c8:	ldr	x8, [x8, #2824]
   3a5cc:	ldr	x0, [x8]
   3a5d0:	bl	17380 <strchr@plt>
   3a5d4:	cbz	x0, 3a460 <history_expand@@Base+0x690>
   3a5d8:	ldr	w8, [sp, #48]
   3a5dc:	sub	w8, w8, w28
   3a5e0:	sxtw	x0, w8
   3a5e4:	bl	16bf0 <xmalloc@plt>
   3a5e8:	add	x1, x25, w28, sxtw
   3a5ec:	mov	x19, x0
   3a5f0:	bl	17480 <strcpy@plt>
   3a5f4:	bl	16440 <strlen@plt>
   3a5f8:	mov	x22, x0
   3a5fc:	sxtw	x8, w20
   3a600:	add	x20, x8, w22, sxtw
   3a604:	cmp	w20, w24
   3a608:	b.lt	3a634 <history_expand@@Base+0x864>  // b.tstop
   3a60c:	sxtw	x8, w24
   3a610:	add	x8, x8, #0x80
   3a614:	sub	w9, w8, #0x80
   3a618:	cmp	w20, w9
   3a61c:	b.ge	3a610 <history_expand@@Base+0x840>  // b.tcont
   3a620:	ldur	x0, [x29, #-64]
   3a624:	sub	x24, x8, #0x80
   3a628:	mov	x1, x24
   3a62c:	bl	16a50 <xrealloc@plt>
   3a630:	stur	x0, [x29, #-64]
   3a634:	ldur	x8, [x29, #-64]
   3a638:	mov	x1, x19
   3a63c:	add	x8, x8, x20
   3a640:	sub	x0, x8, w22, sxtw
   3a644:	bl	17480 <strcpy@plt>
   3a648:	mov	x0, x19
   3a64c:	bl	169f0 <xfree@plt>
   3a650:	mov	w8, wzr
   3a654:	mov	w28, w23
   3a658:	b	3a294 <history_expand@@Base+0x4c4>
   3a65c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a660:	ldr	x8, [x8, #3360]
   3a664:	ldur	w9, [x29, #-88]
   3a668:	ldr	w8, [x8]
   3a66c:	cbnz	w9, 3a690 <history_expand@@Base+0x8c0>
   3a670:	cbz	w8, 3a690 <history_expand@@Base+0x8c0>
   3a674:	cmp	w28, #0x1
   3a678:	b.lt	3a74c <history_expand@@Base+0x97c>  // b.tstop
   3a67c:	add	x8, x25, w28, sxtw
   3a680:	ldurb	w8, [x8, #-1]
   3a684:	cmp	w8, #0x24
   3a688:	cset	w8, eq  // eq = none
   3a68c:	b	3a750 <history_expand@@Base+0x980>
   3a690:	ldur	w9, [x29, #-88]
   3a694:	orr	w9, w8, w9
   3a698:	sub	w8, w24, #0x1
   3a69c:	cmp	w20, w8
   3a6a0:	cbz	w9, 3a864 <history_expand@@Base+0xa94>
   3a6a4:	b.lt	3a6bc <history_expand@@Base+0x8ec>  // b.tstop
   3a6a8:	ldur	x0, [x29, #-64]
   3a6ac:	add	w24, w24, #0x40
   3a6b0:	sxtw	x1, w24
   3a6b4:	bl	16a50 <xrealloc@plt>
   3a6b8:	stur	x0, [x29, #-64]
   3a6bc:	str	wzr, [sp, #88]
   3a6c0:	b	3a480 <history_expand@@Base+0x6b0>
   3a6c4:	ldur	w8, [x29, #-88]
   3a6c8:	ldr	w9, [sp, #88]
   3a6cc:	mov	w0, #0x80                  	// #128
   3a6d0:	stur	xzr, [x29, #-24]
   3a6d4:	cmp	w8, #0x0
   3a6d8:	mov	w8, #0x22                  	// #34
   3a6dc:	csel	w8, w8, wzr, ne  // ne = any
   3a6e0:	cmp	w9, #0x0
   3a6e4:	mov	w9, #0x27                  	// #39
   3a6e8:	csel	w19, w8, w9, eq  // eq = none
   3a6ec:	bl	16bf0 <xmalloc@plt>
   3a6f0:	ldur	x8, [x29, #-72]
   3a6f4:	stur	w28, [x29, #-12]
   3a6f8:	str	x0, [sp, #32]
   3a6fc:	ldrb	w22, [x8, x25]
   3a700:	cbz	w22, 3a8bc <history_expand@@Base+0xaec>
   3a704:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3a708:	mov	w2, #0x6                   	// #6
   3a70c:	add	x0, x0, #0x85
   3a710:	mov	w1, w22
   3a714:	bl	17530 <memchr@plt>
   3a718:	cbz	x0, 3a8a4 <history_expand@@Base+0xad4>
   3a71c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3a720:	ldr	x8, [x8, #3880]
   3a724:	stur	wzr, [x29, #-32]
   3a728:	stur	w25, [x29, #-12]
   3a72c:	sturb	wzr, [x29, #-26]
   3a730:	ldrb	w8, [x8]
   3a734:	sub	x0, x29, #0x1c
   3a738:	sub	x1, x29, #0x20
   3a73c:	mov	w2, wzr
   3a740:	sturb	w8, [x29, #-27]
   3a744:	sturb	w8, [x29, #-28]
   3a748:	b	3a8c8 <history_expand@@Base+0xaf8>
   3a74c:	mov	w8, wzr
   3a750:	mov	w25, w28
   3a754:	ldur	x10, [x29, #-72]
   3a758:	sxtw	x9, w25
   3a75c:	add	x25, x9, #0x1
   3a760:	ldrb	w10, [x10, x25]
   3a764:	cbz	w10, 3a79c <history_expand@@Base+0x9cc>
   3a768:	cmp	w10, #0x27
   3a76c:	b.eq	3a79c <history_expand@@Base+0x9cc>  // b.none
   3a770:	cmp	w10, #0x5c
   3a774:	cset	w10, ne  // ne = any
   3a778:	eor	w11, w8, #0x1
   3a77c:	orr	w10, w11, w10
   3a780:	tbnz	w10, #0, 3a754 <history_expand@@Base+0x984>
   3a784:	ldur	x10, [x29, #-72]
   3a788:	add	x9, x9, #0x2
   3a78c:	ldrb	w10, [x10, x9]
   3a790:	cmp	w10, #0x0
   3a794:	csel	w25, w25, w9, eq  // eq = none
   3a798:	b	3a754 <history_expand@@Base+0x984>
   3a79c:	sxtw	x8, w25
   3a7a0:	sxtw	x26, w28
   3a7a4:	str	x23, [sp, #64]
   3a7a8:	mov	x23, x27
   3a7ac:	sub	x27, x8, x26
   3a7b0:	add	w8, w27, #0x2
   3a7b4:	sxtw	x22, w8
   3a7b8:	mov	x0, x22
   3a7bc:	bl	16bf0 <xmalloc@plt>
   3a7c0:	ldur	x8, [x29, #-72]
   3a7c4:	mov	x2, x22
   3a7c8:	mov	x19, x0
   3a7cc:	add	x1, x8, x26
   3a7d0:	bl	17730 <strncpy@plt>
   3a7d4:	add	x8, x27, x0
   3a7d8:	strb	wzr, [x8, #1]
   3a7dc:	bl	16440 <strlen@plt>
   3a7e0:	mov	x22, x0
   3a7e4:	sxtw	x8, w20
   3a7e8:	add	x20, x8, w22, sxtw
   3a7ec:	cmp	w20, w24
   3a7f0:	b.ge	3a800 <history_expand@@Base+0xa30>  // b.tcont
   3a7f4:	mov	x27, x23
   3a7f8:	ldr	x23, [sp, #64]
   3a7fc:	b	3a830 <history_expand@@Base+0xa60>
   3a800:	mov	x27, x23
   3a804:	ldr	x23, [sp, #64]
   3a808:	sxtw	x8, w24
   3a80c:	add	x8, x8, #0x80
   3a810:	sub	w9, w8, #0x80
   3a814:	cmp	w20, w9
   3a818:	b.ge	3a80c <history_expand@@Base+0xa3c>  // b.tcont
   3a81c:	ldur	x0, [x29, #-64]
   3a820:	sub	x24, x8, #0x80
   3a824:	mov	x1, x24
   3a828:	bl	16a50 <xrealloc@plt>
   3a82c:	stur	x0, [x29, #-64]
   3a830:	ldur	x8, [x29, #-64]
   3a834:	mov	x1, x19
   3a838:	add	x8, x8, x20
   3a83c:	sub	x0, x8, w22, sxtw
   3a840:	bl	17480 <strcpy@plt>
   3a844:	mov	x0, x19
   3a848:	bl	169f0 <xfree@plt>
   3a84c:	mov	w28, w25
   3a850:	ldur	x25, [x29, #-72]
   3a854:	str	wzr, [sp, #88]
   3a858:	stur	wzr, [x29, #-88]
   3a85c:	mov	w8, wzr
   3a860:	b	3a294 <history_expand@@Base+0x4c4>
   3a864:	b.lt	3a87c <history_expand@@Base+0xaac>  // b.tstop
   3a868:	ldur	x0, [x29, #-64]
   3a86c:	add	w24, w24, #0x40
   3a870:	sxtw	x1, w24
   3a874:	bl	16a50 <xrealloc@plt>
   3a878:	stur	x0, [x29, #-64]
   3a87c:	ldrb	w9, [x25, w28, sxtw]
   3a880:	ldur	x11, [x29, #-64]
   3a884:	sxtw	x10, w20
   3a888:	add	x20, x10, #0x1
   3a88c:	mov	w8, wzr
   3a890:	strb	w9, [x11, x10]
   3a894:	mov	w9, #0x1                   	// #1
   3a898:	strb	wzr, [x11, x20]
   3a89c:	str	w9, [sp, #88]
   3a8a0:	b	3a294 <history_expand@@Base+0x4c4>
   3a8a4:	cmp	w22, #0x23
   3a8a8:	b.ne	3a8bc <history_expand@@Base+0xaec>  // b.any
   3a8ac:	ldur	x25, [x29, #-64]
   3a8b0:	add	w8, w28, #0x2
   3a8b4:	stur	w8, [x29, #-12]
   3a8b8:	b	3a8d0 <history_expand@@Base+0xb00>
   3a8bc:	ldur	x0, [x29, #-72]
   3a8c0:	sub	x1, x29, #0xc
   3a8c4:	mov	w2, w19
   3a8c8:	bl	167f0 <get_history_event@plt>
   3a8cc:	mov	x25, x0
   3a8d0:	ldursw	x22, [x29, #-12]
   3a8d4:	mov	w15, #0xa                   	// #10
   3a8d8:	adrp	x19, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3a8dc:	cbz	x25, 3b534 <history_expand@@Base+0x1764>
   3a8e0:	ldur	x9, [x29, #-72]
   3a8e4:	ldrb	w11, [x9, x22]
   3a8e8:	cmp	w11, #0x3a
   3a8ec:	cinc	w8, w22, eq  // eq = none
   3a8f0:	sxtw	x10, w8
   3a8f4:	ldrb	w9, [x9, x10]
   3a8f8:	sub	w12, w9, #0x24
   3a8fc:	cmp	w12, #0x9
   3a900:	b.hi	3a940 <history_expand@@Base+0xb70>  // b.pmore
   3a904:	adrp	x16, 3f000 <filename_completion_function@@Base+0x580>
   3a908:	add	x16, x16, #0xf6e
   3a90c:	adr	x13, 3a920 <history_expand@@Base+0xb50>
   3a910:	ldrb	w14, [x16, x12]
   3a914:	add	x13, x13, x14, lsl #2
   3a918:	mov	w0, wzr
   3a91c:	br	x13
   3a920:	add	w8, w8, #0x1
   3a924:	mov	w0, #0x24                  	// #36
   3a928:	mov	w1, #0x24                  	// #36
   3a92c:	mov	x2, x25
   3a930:	stur	w8, [x29, #-12]
   3a934:	bl	17680 <history_arg_extract@plt>
   3a938:	mov	x26, x0
   3a93c:	b	3aabc <history_expand@@Base+0xcec>
   3a940:	cmp	w9, #0x5e
   3a944:	b.ne	3a954 <history_expand@@Base+0xb84>  // b.any
   3a948:	add	w8, w8, #0x1
   3a94c:	mov	w0, #0x1                   	// #1
   3a950:	b	3a998 <history_expand@@Base+0xbc8>
   3a954:	cmp	w11, #0x3a
   3a958:	b.ne	3aaf8 <history_expand@@Base+0xd28>  // b.any
   3a95c:	sub	w11, w9, #0x30
   3a960:	and	w11, w11, #0xff
   3a964:	cmp	w11, #0x9
   3a968:	b.hi	3aaf8 <history_expand@@Base+0xd28>  // b.pmore
   3a96c:	ldr	x11, [sp, #96]
   3a970:	mov	w0, wzr
   3a974:	add	x10, x11, x10
   3a978:	mul	w11, w0, w15
   3a97c:	add	w11, w11, w9, uxtb
   3a980:	ldrb	w9, [x10], #1
   3a984:	sub	w0, w11, #0x30
   3a988:	add	w8, w8, #0x1
   3a98c:	sub	w11, w9, #0x30
   3a990:	cmp	w11, #0xa
   3a994:	b.cc	3a978 <history_expand@@Base+0xba8>  // b.lo, b.ul, b.last
   3a998:	ldur	x9, [x29, #-72]
   3a99c:	ldrb	w9, [x9, w8, sxtw]
   3a9a0:	cmp	w9, #0x2a
   3a9a4:	b.eq	3a9b8 <history_expand@@Base+0xbe8>  // b.none
   3a9a8:	cmp	w9, #0x2d
   3a9ac:	b.eq	3aa2c <history_expand@@Base+0xc5c>  // b.none
   3a9b0:	cmp	w9, #0x5e
   3a9b4:	b.ne	3aa78 <history_expand@@Base+0xca8>  // b.any
   3a9b8:	cmp	w9, #0x5e
   3a9bc:	mov	w9, #0x24                  	// #36
   3a9c0:	csinc	w1, w9, wzr, ne  // ne = any
   3a9c4:	add	w9, w8, #0x1
   3a9c8:	b	3aa94 <history_expand@@Base+0xcc4>
   3a9cc:	ldr	x0, [x19, #232]
   3a9d0:	add	w8, w8, #0x1
   3a9d4:	stur	w8, [x29, #-12]
   3a9d8:	cbz	x0, 3aa18 <history_expand@@Base+0xc48>
   3a9dc:	bl	16440 <strlen@plt>
   3a9e0:	add	x0, x0, #0x1
   3a9e4:	bl	16bf0 <xmalloc@plt>
   3a9e8:	ldr	x1, [x19, #232]
   3a9ec:	mov	x26, x0
   3a9f0:	bl	17480 <strcpy@plt>
   3a9f4:	b	3aabc <history_expand@@Base+0xcec>
   3a9f8:	add	w8, w8, #0x1
   3a9fc:	mov	w0, #0x1                   	// #1
   3aa00:	mov	w1, #0x24                  	// #36
   3aa04:	mov	x2, x25
   3aa08:	stur	w8, [x29, #-12]
   3aa0c:	bl	17680 <history_arg_extract@plt>
   3aa10:	mov	x26, x0
   3aa14:	cbnz	x0, 3aabc <history_expand@@Base+0xcec>
   3aa18:	mov	w0, #0x1                   	// #1
   3aa1c:	bl	16bf0 <xmalloc@plt>
   3aa20:	mov	x26, x0
   3aa24:	strb	wzr, [x0]
   3aa28:	b	3aabc <history_expand@@Base+0xcec>
   3aa2c:	ldur	x10, [x29, #-72]
   3aa30:	add	w9, w8, #0x1
   3aa34:	sxtw	x11, w9
   3aa38:	ldrb	w10, [x10, x11]
   3aa3c:	sub	w12, w10, #0x30
   3aa40:	cmp	w12, #0x9
   3aa44:	b.hi	3aa84 <history_expand@@Base+0xcb4>  // b.pmore
   3aa48:	ldr	x8, [sp, #96]
   3aa4c:	mov	w1, wzr
   3aa50:	add	x8, x8, x11
   3aa54:	mul	w11, w1, w15
   3aa58:	add	w11, w11, w10, uxtb
   3aa5c:	ldrb	w10, [x8], #1
   3aa60:	sub	w1, w11, #0x30
   3aa64:	add	w9, w9, #0x1
   3aa68:	sub	w11, w10, #0x30
   3aa6c:	cmp	w11, #0xa
   3aa70:	b.cc	3aa54 <history_expand@@Base+0xc84>  // b.lo, b.ul, b.last
   3aa74:	b	3aa94 <history_expand@@Base+0xcc4>
   3aa78:	stur	w8, [x29, #-12]
   3aa7c:	mov	w1, w0
   3aa80:	b	3aaac <history_expand@@Base+0xcdc>
   3aa84:	add	w8, w8, #0x2
   3aa88:	cmp	w10, #0x24
   3aa8c:	csel	w9, w8, w9, eq  // eq = none
   3aa90:	csinv	w1, w10, wzr, eq  // eq = none
   3aa94:	stur	w9, [x29, #-12]
   3aa98:	tbnz	w1, #31, 3aaac <history_expand@@Base+0xcdc>
   3aa9c:	cmp	w1, w0
   3aaa0:	b.ge	3aaac <history_expand@@Base+0xcdc>  // b.tcont
   3aaa4:	cmp	w1, #0x24
   3aaa8:	b.ne	3b4d4 <history_expand@@Base+0x1704>  // b.any
   3aaac:	mov	x2, x25
   3aab0:	bl	17680 <history_arg_extract@plt>
   3aab4:	mov	x26, x0
   3aab8:	cbz	x0, 3b4d4 <history_expand@@Base+0x1704>
   3aabc:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3aac0:	add	x8, x8, #0xf0
   3aac4:	cmp	x26, x8
   3aac8:	b.eq	3b4d4 <history_expand@@Base+0x1704>  // b.none
   3aacc:	cbz	x26, 3aaf8 <history_expand@@Base+0xd28>
   3aad0:	mov	x0, x26
   3aad4:	bl	16440 <strlen@plt>
   3aad8:	add	x0, x0, #0x1
   3aadc:	bl	16bf0 <xmalloc@plt>
   3aae0:	mov	x1, x26
   3aae4:	mov	x19, x0
   3aae8:	bl	17480 <strcpy@plt>
   3aaec:	mov	x0, x26
   3aaf0:	bl	171b0 <free@plt>
   3aaf4:	b	3ab14 <history_expand@@Base+0xd44>
   3aaf8:	mov	x0, x25
   3aafc:	bl	16440 <strlen@plt>
   3ab00:	add	x0, x0, #0x1
   3ab04:	bl	16bf0 <xmalloc@plt>
   3ab08:	mov	x1, x25
   3ab0c:	mov	x19, x0
   3ab10:	bl	17480 <strcpy@plt>
   3ab14:	ldur	w8, [x29, #-12]
   3ab18:	ldur	x25, [x29, #-72]
   3ab1c:	sxtw	x9, w8
   3ab20:	str	x9, [sp, #16]
   3ab24:	ldrb	w9, [x25, x9]
   3ab28:	cmp	w9, #0x3a
   3ab2c:	b.ne	3b0f4 <history_expand@@Base+0x1324>  // b.any
   3ab30:	stur	xzr, [x29, #-80]
   3ab34:	str	wzr, [sp, #12]
   3ab38:	str	wzr, [sp, #28]
   3ab3c:	stp	x27, x23, [sp, #56]
   3ab40:	b	3ab64 <history_expand@@Base+0xd94>
   3ab44:	ldp	x27, x23, [sp, #56]
   3ab48:	ldur	x25, [x29, #-72]
   3ab4c:	ldr	w8, [sp, #92]
   3ab50:	cbnz	w8, 3b438 <history_expand@@Base+0x1668>
   3ab54:	ldursw	x8, [x29, #-12]
   3ab58:	ldrb	w9, [x25, x8]
   3ab5c:	cmp	w9, #0x3a
   3ab60:	b.ne	3b1e8 <history_expand@@Base+0x1418>  // b.any
   3ab64:	sxtw	x11, w8
   3ab68:	add	x9, x11, #0x1
   3ab6c:	ldrb	w10, [x25, x9]
   3ab70:	cmp	w10, #0x67
   3ab74:	b.eq	3ab94 <history_expand@@Base+0xdc4>  // b.none
   3ab78:	cmp	w10, #0x61
   3ab7c:	b.eq	3ab94 <history_expand@@Base+0xdc4>  // b.none
   3ab80:	cmp	w10, #0x47
   3ab84:	b.ne	3abac <history_expand@@Base+0xddc>  // b.any
   3ab88:	mov	w8, #0x1                   	// #1
   3ab8c:	stur	w8, [x29, #-76]
   3ab90:	b	3ab9c <history_expand@@Base+0xdcc>
   3ab94:	mov	w8, #0x1                   	// #1
   3ab98:	stur	w8, [x29, #-80]
   3ab9c:	stur	w9, [x29, #-12]
   3aba0:	add	x8, x11, x25
   3aba4:	ldrb	w10, [x8, #2]
   3aba8:	mov	w8, w9
   3abac:	sub	w9, w10, #0x26
   3abb0:	cmp	w9, #0x52
   3abb4:	b.hi	3b588 <history_expand@@Base+0x17b8>  // b.pmore
   3abb8:	adrp	x13, 3f000 <filename_completion_function@@Base+0x580>
   3abbc:	add	x13, x13, #0xf78
   3abc0:	adr	x11, 3abd4 <history_expand@@Base+0xe04>
   3abc4:	ldrh	w12, [x13, x9, lsl #1]
   3abc8:	add	x11, x11, x12, lsl #2
   3abcc:	mov	w9, #0x71                  	// #113
   3abd0:	br	x11
   3abd4:	cmp	w10, #0x73
   3abd8:	add	w22, w8, #0x2
   3abdc:	b.ne	3ac4c <history_expand@@Base+0xe7c>  // b.any
   3abe0:	mov	x0, x25
   3abe4:	bl	16440 <strlen@plt>
   3abe8:	cmp	w22, w0
   3abec:	b.ge	3b0c8 <history_expand@@Base+0x12f8>  // b.tcont
   3abf0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3abf4:	ldur	w8, [x29, #-12]
   3abf8:	cmp	x0, #0x2
   3abfc:	add	w1, w8, #0x2
   3ac00:	b.cc	3ac58 <history_expand@@Base+0xe88>  // b.lo, b.ul, b.last
   3ac04:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3ac08:	ldr	x9, [x9, #1896]
   3ac0c:	ldr	w9, [x9]
   3ac10:	cbnz	w9, 3ac58 <history_expand@@Base+0xe88>
   3ac14:	sub	x2, x29, #0x18
   3ac18:	mov	x0, x25
   3ac1c:	bl	17170 <_rl_adjust_point@plt>
   3ac20:	ldursw	x8, [x29, #-12]
   3ac24:	ldr	x9, [sp, #40]
   3ac28:	sub	x1, x29, #0x18
   3ac2c:	add	x0, x9, x8
   3ac30:	bl	174b0 <_rl_get_char_len@plt>
   3ac34:	ldur	w8, [x29, #-12]
   3ac38:	cmp	w0, #0x1
   3ac3c:	b.le	3ac54 <history_expand@@Base+0xe84>
   3ac40:	mov	x0, x25
   3ac44:	mov	w25, wzr
   3ac48:	b	3ac60 <history_expand@@Base+0xe90>
   3ac4c:	stur	w22, [x29, #-12]
   3ac50:	b	3ae5c <history_expand@@Base+0x108c>
   3ac54:	add	w1, w8, #0x2
   3ac58:	mov	x0, x25
   3ac5c:	ldrb	w25, [x25, w1, sxtw]
   3ac60:	adrp	x4, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ac64:	add	w8, w8, #0x3
   3ac68:	sub	x1, x29, #0xc
   3ac6c:	mov	w2, w25
   3ac70:	mov	w3, wzr
   3ac74:	add	x4, x4, #0xf4
   3ac78:	stur	w8, [x29, #-12]
   3ac7c:	bl	3b96c <history_tokenize@@Base+0x1f0>
   3ac80:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ac84:	ldr	x8, [x8, #248]
   3ac88:	cbz	x0, 3aca8 <history_expand@@Base+0xed8>
   3ac8c:	mov	x22, x0
   3ac90:	cbz	x8, 3ac9c <history_expand@@Base+0xecc>
   3ac94:	mov	x0, x8
   3ac98:	bl	171b0 <free@plt>
   3ac9c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3aca0:	str	x22, [x8, #248]
   3aca4:	b	3ad00 <history_expand@@Base+0xf30>
   3aca8:	cbnz	x8, 3ad00 <history_expand@@Base+0xf30>
   3acac:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3acb0:	ldr	x0, [x8, #224]
   3acb4:	cbz	x0, 3acf0 <history_expand@@Base+0xf20>
   3acb8:	ldrb	w8, [x0]
   3acbc:	cbz	w8, 3acf0 <history_expand@@Base+0xf20>
   3acc0:	bl	16440 <strlen@plt>
   3acc4:	add	x0, x0, #0x1
   3acc8:	bl	16bf0 <xmalloc@plt>
   3accc:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3acd0:	ldr	x1, [x8, #224]
   3acd4:	bl	17480 <strcpy@plt>
   3acd8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3acdc:	str	x0, [x8, #248]
   3ace0:	bl	16440 <strlen@plt>
   3ace4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ace8:	str	w0, [x8, #244]
   3acec:	b	3ad00 <history_expand@@Base+0xf30>
   3acf0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3acf4:	str	xzr, [x8, #248]
   3acf8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3acfc:	str	wzr, [x8, #244]
   3ad00:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad04:	ldr	x0, [x8, #256]
   3ad08:	cbz	x0, 3ad10 <history_expand@@Base+0xf40>
   3ad0c:	bl	171b0 <free@plt>
   3ad10:	ldur	x0, [x29, #-72]
   3ad14:	adrp	x4, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad18:	sub	x1, x29, #0xc
   3ad1c:	mov	w3, #0x1                   	// #1
   3ad20:	mov	w2, w25
   3ad24:	add	x4, x4, #0x108
   3ad28:	bl	3b96c <history_tokenize@@Base+0x1f0>
   3ad2c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad30:	mov	w1, #0x26                  	// #38
   3ad34:	str	x0, [x8, #256]
   3ad38:	bl	17380 <strchr@plt>
   3ad3c:	cbz	x0, 3ae5c <history_expand@@Base+0x108c>
   3ad40:	adrp	x22, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad44:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad48:	ldrsw	x8, [x22, #264]
   3ad4c:	ldrsw	x9, [x9, #244]
   3ad50:	mov	x23, x27
   3ad54:	add	x25, x9, x8
   3ad58:	mov	x0, x25
   3ad5c:	bl	16bf0 <xmalloc@plt>
   3ad60:	ldr	w8, [x22, #264]
   3ad64:	mov	x26, x0
   3ad68:	mov	w22, wzr
   3ad6c:	cmp	w8, #0x1
   3ad70:	b.lt	3ae3c <history_expand@@Base+0x106c>  // b.tstop
   3ad74:	mov	w27, wzr
   3ad78:	b	3ada0 <history_expand@@Base+0xfd0>
   3ad7c:	ldrb	w8, [x8, w27, sxtw]
   3ad80:	strb	w8, [x26, w22, sxtw]
   3ad84:	mov	w8, #0x1                   	// #1
   3ad88:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ad8c:	ldr	w9, [x9, #264]
   3ad90:	add	w27, w27, #0x1
   3ad94:	add	w22, w8, w22
   3ad98:	cmp	w27, w9
   3ad9c:	b.ge	3ae3c <history_expand@@Base+0x106c>  // b.tcont
   3ada0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ada4:	ldr	x8, [x8, #256]
   3ada8:	sxtw	x9, w27
   3adac:	ldrb	w10, [x8, x9]
   3adb0:	cmp	w10, #0x5c
   3adb4:	b.eq	3ae04 <history_expand@@Base+0x1034>  // b.none
   3adb8:	cmp	w10, #0x26
   3adbc:	b.ne	3ae14 <history_expand@@Base+0x1044>  // b.any
   3adc0:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3adc4:	ldr	w8, [x8, #244]
   3adc8:	add	w9, w8, w22
   3adcc:	cmp	w9, w25
   3add0:	b.lt	3ade8 <history_expand@@Base+0x1018>  // b.tstop
   3add4:	add	w25, w8, w25, lsl #1
   3add8:	sxtw	x1, w25
   3addc:	mov	x0, x26
   3ade0:	bl	16a50 <xrealloc@plt>
   3ade4:	mov	x26, x0
   3ade8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3adec:	ldr	x1, [x8, #248]
   3adf0:	add	x0, x26, w22, sxtw
   3adf4:	bl	17480 <strcpy@plt>
   3adf8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3adfc:	ldr	w8, [x8, #244]
   3ae00:	b	3ad88 <history_expand@@Base+0xfb8>
   3ae04:	add	x9, x9, #0x1
   3ae08:	ldrb	w10, [x8, x9]
   3ae0c:	cmp	w10, #0x26
   3ae10:	csel	w27, w9, w27, eq  // eq = none
   3ae14:	cmp	w22, w25
   3ae18:	b.lt	3ad7c <history_expand@@Base+0xfac>  // b.tstop
   3ae1c:	lsl	w25, w25, #1
   3ae20:	sxtw	x1, w25
   3ae24:	mov	x0, x26
   3ae28:	bl	16a50 <xrealloc@plt>
   3ae2c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ae30:	ldr	x8, [x8, #256]
   3ae34:	mov	x26, x0
   3ae38:	b	3ad7c <history_expand@@Base+0xfac>
   3ae3c:	strb	wzr, [x26, w22, sxtw]
   3ae40:	adrp	x25, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ae44:	ldr	x0, [x25, #256]
   3ae48:	bl	169f0 <xfree@plt>
   3ae4c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ae50:	str	x26, [x25, #256]
   3ae54:	str	w22, [x8, #264]
   3ae58:	mov	x27, x23
   3ae5c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ae60:	ldr	w28, [x8, #244]
   3ae64:	cbz	w28, 3b38c <history_expand@@Base+0x15bc>
   3ae68:	mov	x0, x19
   3ae6c:	bl	16440 <strlen@plt>
   3ae70:	mov	x26, x0
   3ae74:	cmp	w28, w26
   3ae78:	b.gt	3b3f4 <history_expand@@Base+0x1624>
   3ae7c:	mov	x27, #0x600                 	// #1536
   3ae80:	mov	w21, wzr
   3ae84:	mov	w25, wzr
   3ae88:	mov	w8, #0x1                   	// #1
   3ae8c:	adrp	x23, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3ae90:	movk	x27, #0x1, lsl #32
   3ae94:	str	w8, [sp, #92]
   3ae98:	b	3af64 <history_expand@@Base+0x1194>
   3ae9c:	ldr	w8, [x23, #264]
   3aea0:	stur	w21, [x29, #-84]
   3aea4:	sub	w8, w8, w28
   3aea8:	add	w21, w8, w26
   3aeac:	add	w8, w21, #0x1
   3aeb0:	sxtw	x0, w8
   3aeb4:	bl	16bf0 <xmalloc@plt>
   3aeb8:	mov	x1, x19
   3aebc:	mov	x2, x22
   3aec0:	mov	x28, x0
   3aec4:	bl	17730 <strncpy@plt>
   3aec8:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3aecc:	ldr	x1, [x8, #256]
   3aed0:	ldrsw	x2, [x23, #264]
   3aed4:	add	x0, x0, x22
   3aed8:	bl	17730 <strncpy@plt>
   3aedc:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3aee0:	ldrsw	x8, [x23, #264]
   3aee4:	ldrsw	x9, [x9, #244]
   3aee8:	sub	w11, w26, w25
   3aeec:	add	x10, x19, x22
   3aef0:	add	x0, x0, x8
   3aef4:	sub	w8, w11, w9
   3aef8:	add	x1, x10, x9
   3aefc:	sxtw	x2, w8
   3af00:	bl	17730 <strncpy@plt>
   3af04:	mov	x0, x19
   3af08:	strb	wzr, [x28, w21, sxtw]
   3af0c:	bl	169f0 <xfree@plt>
   3af10:	ldur	w19, [x29, #-80]
   3af14:	cbz	w19, 3afe0 <history_expand@@Base+0x1210>
   3af18:	ldr	w8, [x23, #264]
   3af1c:	mov	x0, x28
   3af20:	add	w8, w25, w8
   3af24:	sub	w25, w8, #0x1
   3af28:	bl	16440 <strlen@plt>
   3af2c:	ldur	w21, [x29, #-84]
   3af30:	add	w19, w19, #0x1
   3af34:	mov	x27, #0x600                 	// #1536
   3af38:	mov	x26, x0
   3af3c:	str	wzr, [sp, #92]
   3af40:	stur	w19, [x29, #-80]
   3af44:	mov	x19, x28
   3af48:	movk	x27, #0x1, lsl #32
   3af4c:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3af50:	ldr	w28, [x8, #244]
   3af54:	add	w25, w25, #0x1
   3af58:	add	w8, w28, w25
   3af5c:	cmp	w8, w26
   3af60:	b.gt	3b014 <history_expand@@Base+0x1244>
   3af64:	ldur	w8, [x29, #-76]
   3af68:	cbz	w8, 3afac <history_expand@@Base+0x11dc>
   3af6c:	cmp	w25, w21
   3af70:	b.le	3afac <history_expand@@Base+0x11dc>
   3af74:	sxtw	x25, w25
   3af78:	mov	w9, #0x1                   	// #1
   3af7c:	ldrb	w8, [x19, x25]
   3af80:	cmp	w8, #0x20
   3af84:	b.hi	3af9c <history_expand@@Base+0x11cc>  // b.pmore
   3af88:	lsl	x8, x9, x8
   3af8c:	tst	x8, x27
   3af90:	b.eq	3af9c <history_expand@@Base+0x11cc>  // b.none
   3af94:	add	x25, x25, #0x1
   3af98:	b	3af7c <history_expand@@Base+0x11ac>
   3af9c:	mov	x0, x19
   3afa0:	mov	w1, w25
   3afa4:	bl	3bb00 <history_tokenize@@Base+0x384>
   3afa8:	mov	w21, w0
   3afac:	sxtw	x22, w25
   3afb0:	cbz	w28, 3ae9c <history_expand@@Base+0x10cc>
   3afb4:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3afb8:	ldr	x1, [x8, #248]
   3afbc:	add	x0, x19, x22
   3afc0:	ldrb	w8, [x0]
   3afc4:	ldrb	w9, [x1]
   3afc8:	cmp	w8, w9
   3afcc:	b.ne	3af4c <history_expand@@Base+0x117c>  // b.any
   3afd0:	sxtw	x2, w28
   3afd4:	bl	16b40 <strncmp@plt>
   3afd8:	cbnz	w0, 3af4c <history_expand@@Base+0x117c>
   3afdc:	b	3ae9c <history_expand@@Base+0x10cc>
   3afe0:	ldur	w8, [x29, #-76]
   3afe4:	cbz	w8, 3b028 <history_expand@@Base+0x1258>
   3afe8:	mov	x0, x28
   3afec:	bl	16440 <strlen@plt>
   3aff0:	ldur	w21, [x29, #-84]
   3aff4:	mov	x27, #0x600                 	// #1536
   3aff8:	mov	x26, x0
   3affc:	mov	x19, x28
   3b000:	mov	w25, w21
   3b004:	movk	x27, #0x1, lsl #32
   3b008:	stur	wzr, [x29, #-80]
   3b00c:	str	wzr, [sp, #92]
   3b010:	b	3af4c <history_expand@@Base+0x117c>
   3b014:	ldur	w8, [x29, #-80]
   3b018:	cmp	w8, #0x1
   3b01c:	b.le	3ab44 <history_expand@@Base+0xd74>
   3b020:	stur	wzr, [x29, #-80]
   3b024:	b	3b030 <history_expand@@Base+0x1260>
   3b028:	stur	wzr, [x29, #-80]
   3b02c:	mov	x19, x28
   3b030:	ldp	x27, x23, [sp, #56]
   3b034:	ldur	x25, [x29, #-72]
   3b038:	b	3ab54 <history_expand@@Base+0xd84>
   3b03c:	mov	w1, #0x2e                  	// #46
   3b040:	mov	x0, x19
   3b044:	bl	16ee0 <strrchr@plt>
   3b048:	cbz	x0, 3b0c8 <history_expand@@Base+0x12f8>
   3b04c:	mov	x22, x0
   3b050:	b	3b09c <history_expand@@Base+0x12cc>
   3b054:	mov	w1, #0x2f                  	// #47
   3b058:	b	3b074 <history_expand@@Base+0x12a4>
   3b05c:	ldr	w8, [sp, #28]
   3b060:	ldr	w9, [sp, #12]
   3b064:	add	w8, w8, #0x1
   3b068:	str	w8, [sp, #28]
   3b06c:	b	3b0cc <history_expand@@Base+0x12fc>
   3b070:	mov	w1, #0x2e                  	// #46
   3b074:	mov	x0, x19
   3b078:	bl	16ee0 <strrchr@plt>
   3b07c:	cbz	x0, 3b0c8 <history_expand@@Base+0x12f8>
   3b080:	strb	wzr, [x0]
   3b084:	b	3b0c8 <history_expand@@Base+0x12f8>
   3b088:	mov	w1, #0x2f                  	// #47
   3b08c:	mov	x0, x19
   3b090:	bl	16ee0 <strrchr@plt>
   3b094:	cbz	x0, 3b0c8 <history_expand@@Base+0x12f8>
   3b098:	add	x22, x0, #0x1
   3b09c:	mov	x0, x22
   3b0a0:	bl	16440 <strlen@plt>
   3b0a4:	add	x0, x0, #0x1
   3b0a8:	bl	16bf0 <xmalloc@plt>
   3b0ac:	mov	x1, x22
   3b0b0:	mov	x25, x0
   3b0b4:	bl	17480 <strcpy@plt>
   3b0b8:	mov	x0, x19
   3b0bc:	bl	169f0 <xfree@plt>
   3b0c0:	mov	x19, x25
   3b0c4:	ldur	x25, [x29, #-72]
   3b0c8:	ldr	w9, [sp, #12]
   3b0cc:	ldursw	x8, [x29, #-12]
   3b0d0:	str	w9, [sp, #12]
   3b0d4:	add	x8, x8, #0x2
   3b0d8:	stur	w8, [x29, #-12]
   3b0dc:	ldrb	w10, [x25, x8]
   3b0e0:	cmp	w10, #0x3a
   3b0e4:	b.eq	3ab64 <history_expand@@Base+0xd94>  // b.none
   3b0e8:	b	3b1ec <history_expand@@Base+0x141c>
   3b0ec:	mov	w9, #0x78                  	// #120
   3b0f0:	b	3b0cc <history_expand@@Base+0x12fc>
   3b0f4:	sub	w8, w8, #0x1
   3b0f8:	str	wzr, [sp, #28]
   3b0fc:	stur	w8, [x29, #-12]
   3b100:	mov	x0, x19
   3b104:	bl	16440 <strlen@plt>
   3b108:	cmp	w0, #0x80
   3b10c:	b.lt	3b128 <history_expand@@Base+0x1358>  // b.tstop
   3b110:	add	w8, w0, #0x2
   3b114:	ldr	x0, [sp, #32]
   3b118:	sxtw	x1, w8
   3b11c:	bl	16a50 <xrealloc@plt>
   3b120:	mov	x22, x0
   3b124:	b	3b12c <history_expand@@Base+0x135c>
   3b128:	ldr	x22, [sp, #32]
   3b12c:	mov	x0, x22
   3b130:	mov	x1, x19
   3b134:	bl	17480 <strcpy@plt>
   3b138:	mov	x0, x19
   3b13c:	bl	169f0 <xfree@plt>
   3b140:	ldr	w19, [sp, #28]
   3b144:	tbnz	w19, #31, 3b4ac <history_expand@@Base+0x16dc>
   3b148:	ldur	w28, [x29, #-12]
   3b14c:	cbz	x22, 3b1d0 <history_expand@@Base+0x1400>
   3b150:	ldr	w9, [sp, #52]
   3b154:	ldrb	w8, [x22]
   3b158:	mov	x0, x22
   3b15c:	add	w9, w9, #0x1
   3b160:	str	w9, [sp, #52]
   3b164:	cbz	w8, 3b1cc <history_expand@@Base+0x13fc>
   3b168:	mov	x22, x0
   3b16c:	bl	16440 <strlen@plt>
   3b170:	mov	x19, x0
   3b174:	sxtw	x8, w20
   3b178:	add	x20, x8, w19, sxtw
   3b17c:	cmp	w20, w24
   3b180:	b.lt	3b1ac <history_expand@@Base+0x13dc>  // b.tstop
   3b184:	sxtw	x8, w24
   3b188:	add	x8, x8, #0x80
   3b18c:	sub	w9, w8, #0x80
   3b190:	cmp	w20, w9
   3b194:	b.ge	3b188 <history_expand@@Base+0x13b8>  // b.tcont
   3b198:	ldur	x0, [x29, #-64]
   3b19c:	sub	x24, x8, #0x80
   3b1a0:	mov	x1, x24
   3b1a4:	bl	16a50 <xrealloc@plt>
   3b1a8:	stur	x0, [x29, #-64]
   3b1ac:	ldur	x8, [x29, #-64]
   3b1b0:	mov	x1, x22
   3b1b4:	add	x8, x8, x20
   3b1b8:	sub	x0, x8, w19, sxtw
   3b1bc:	mov	x19, x22
   3b1c0:	bl	17480 <strcpy@plt>
   3b1c4:	ldr	w19, [sp, #28]
   3b1c8:	mov	x0, x22
   3b1cc:	bl	169f0 <xfree@plt>
   3b1d0:	ldr	w9, [sp, #84]
   3b1d4:	cmp	w19, #0x1
   3b1d8:	mov	w8, wzr
   3b1dc:	cinc	w9, w9, eq  // eq = none
   3b1e0:	str	w9, [sp, #84]
   3b1e4:	b	3a294 <history_expand@@Base+0x4c4>
   3b1e8:	ldr	w9, [sp, #12]
   3b1ec:	sub	w8, w8, #0x1
   3b1f0:	stur	w8, [x29, #-12]
   3b1f4:	cbz	w9, 3b100 <history_expand@@Base+0x1330>
   3b1f8:	cmp	w9, #0x78
   3b1fc:	b.eq	3b218 <history_expand@@Base+0x1448>  // b.none
   3b200:	mov	x0, x19
   3b204:	cmp	w9, #0x71
   3b208:	b.ne	3b260 <history_expand@@Base+0x1490>  // b.any
   3b20c:	bl	16ff0 <sh_single_quote@plt>
   3b210:	mov	x25, x0
   3b214:	b	3b308 <history_expand@@Base+0x1538>
   3b218:	adrp	x13, 40000 <filename_completion_function@@Base+0x1580>
   3b21c:	add	x13, x13, #0x1e
   3b220:	mov	w8, #0x3                   	// #3
   3b224:	cbz	x19, 3b27c <history_expand@@Base+0x14ac>
   3b228:	mov	x9, x19
   3b22c:	b	3b23c <history_expand@@Base+0x146c>
   3b230:	add	w8, w8, #0x2
   3b234:	add	x9, x9, #0x1
   3b238:	add	w8, w8, #0x1
   3b23c:	ldrb	w10, [x9]
   3b240:	cmp	w10, #0x27
   3b244:	b.hi	3b234 <history_expand@@Base+0x1464>  // b.pmore
   3b248:	adr	x11, 3b230 <history_expand@@Base+0x1460>
   3b24c:	ldrb	w12, [x13, x10]
   3b250:	add	x11, x11, x12, lsl #2
   3b254:	br	x11
   3b258:	add	w8, w8, #0x3
   3b25c:	b	3b234 <history_expand@@Base+0x1464>
   3b260:	bl	16440 <strlen@plt>
   3b264:	add	x0, x0, #0x1
   3b268:	bl	16bf0 <xmalloc@plt>
   3b26c:	mov	x1, x19
   3b270:	mov	x25, x0
   3b274:	bl	17480 <strcpy@plt>
   3b278:	b	3b308 <history_expand@@Base+0x1538>
   3b27c:	sxtw	x0, w8
   3b280:	bl	16bf0 <xmalloc@plt>
   3b284:	mov	x8, x0
   3b288:	mov	w9, #0x27                  	// #39
   3b28c:	mov	x25, x0
   3b290:	strb	w9, [x8], #1
   3b294:	cbz	x19, 3b300 <history_expand@@Base+0x1530>
   3b298:	mov	x9, x19
   3b29c:	b	3b2bc <history_expand@@Base+0x14ec>
   3b2a0:	mov	w11, #0x27                  	// #39
   3b2a4:	strb	w11, [x8]
   3b2a8:	ldrb	w10, [x9], #1
   3b2ac:	strb	w11, [x8, #2]
   3b2b0:	strb	w10, [x8, #1]
   3b2b4:	add	x10, x8, #0x3
   3b2b8:	mov	x8, x10
   3b2bc:	ldrb	w10, [x9]
   3b2c0:	cmp	w10, #0x27
   3b2c4:	b.hi	3b2f4 <history_expand@@Base+0x1524>  // b.pmore
   3b2c8:	adrp	x13, 40000 <filename_completion_function@@Base+0x1580>
   3b2cc:	add	x13, x13, #0x46
   3b2d0:	adr	x11, 3b2a0 <history_expand@@Base+0x14d0>
   3b2d4:	ldrb	w12, [x13, x10]
   3b2d8:	add	x11, x11, x12, lsl #2
   3b2dc:	br	x11
   3b2e0:	mov	w10, #0x5c27                	// #23591
   3b2e4:	movk	w10, #0x2727, lsl #16
   3b2e8:	str	w10, [x8], #4
   3b2ec:	add	x9, x9, #0x1
   3b2f0:	b	3b2bc <history_expand@@Base+0x14ec>
   3b2f4:	strb	w10, [x8], #1
   3b2f8:	add	x9, x9, #0x1
   3b2fc:	b	3b2bc <history_expand@@Base+0x14ec>
   3b300:	mov	w9, #0x27                  	// #39
   3b304:	strh	w9, [x8]
   3b308:	mov	x0, x19
   3b30c:	bl	169f0 <xfree@plt>
   3b310:	mov	x19, x25
   3b314:	ldur	x25, [x29, #-72]
   3b318:	b	3b100 <history_expand@@Base+0x1330>
   3b31c:	str	wzr, [sp, #88]
   3b320:	mov	w28, w20
   3b324:	cmp	w28, w23
   3b328:	b.lt	3a254 <history_expand@@Base+0x484>  // b.tstop
   3b32c:	str	wzr, [sp, #84]
   3b330:	str	wzr, [sp, #52]
   3b334:	ldr	x8, [sp, #72]
   3b338:	cmp	x25, x8
   3b33c:	ldur	x8, [x29, #-64]
   3b340:	str	x8, [x27]
   3b344:	b.eq	3b350 <history_expand@@Base+0x1580>  // b.none
   3b348:	mov	x0, x25
   3b34c:	bl	169f0 <xfree@plt>
   3b350:	ldr	w8, [sp, #84]
   3b354:	cbz	w8, 3b360 <history_expand@@Base+0x1590>
   3b358:	mov	w0, #0x2                   	// #2
   3b35c:	b	3b36c <history_expand@@Base+0x159c>
   3b360:	ldr	w8, [sp, #52]
   3b364:	cmp	w8, #0x0
   3b368:	cset	w0, ne  // ne = any
   3b36c:	ldp	x20, x19, [sp, #272]
   3b370:	ldp	x22, x21, [sp, #256]
   3b374:	ldp	x24, x23, [sp, #240]
   3b378:	ldp	x26, x25, [sp, #224]
   3b37c:	ldp	x28, x27, [sp, #208]
   3b380:	ldp	x29, x30, [sp, #192]
   3b384:	add	sp, sp, #0x120
   3b388:	ret
   3b38c:	ldursw	x8, [x29, #-12]
   3b390:	ldr	x9, [sp, #16]
   3b394:	ldur	x20, [x29, #-72]
   3b398:	sub	x25, x8, x9
   3b39c:	add	w8, w25, #0x1b
   3b3a0:	sxtw	x0, w8
   3b3a4:	add	x24, x20, x9
   3b3a8:	bl	16bf0 <xmalloc@plt>
   3b3ac:	mov	x1, x24
   3b3b0:	mov	x2, x25
   3b3b4:	mov	x22, x0
   3b3b8:	bl	17730 <strncpy@plt>
   3b3bc:	adrp	x12, 40000 <filename_completion_function@@Base+0x1580>
   3b3c0:	add	x12, x12, #0xe0
   3b3c4:	ldur	q0, [x12, #9]
   3b3c8:	ldr	q1, [x12]
   3b3cc:	add	x8, x0, x25
   3b3d0:	mov	w9, #0x3a                  	// #58
   3b3d4:	add	x10, x0, w25, sxtw
   3b3d8:	mov	w11, #0x20                  	// #32
   3b3dc:	mov	x25, x20
   3b3e0:	strb	w9, [x8]
   3b3e4:	strb	w11, [x10, #1]
   3b3e8:	stur	q0, [x8, #11]
   3b3ec:	stur	q1, [x8, #2]
   3b3f0:	b	3b49c <history_expand@@Base+0x16cc>
   3b3f4:	ldursw	x8, [x29, #-12]
   3b3f8:	ldr	x9, [sp, #16]
   3b3fc:	ldur	x20, [x29, #-72]
   3b400:	sub	x25, x8, x9
   3b404:	add	w8, w25, #0x16
   3b408:	sxtw	x0, w8
   3b40c:	add	x24, x20, x9
   3b410:	bl	16bf0 <xmalloc@plt>
   3b414:	mov	x1, x24
   3b418:	mov	x2, x25
   3b41c:	mov	x22, x0
   3b420:	bl	17730 <strncpy@plt>
   3b424:	add	x8, x0, x25
   3b428:	mov	w9, #0x3a                  	// #58
   3b42c:	add	x10, x0, w25, sxtw
   3b430:	mov	x25, x20
   3b434:	b	3b474 <history_expand@@Base+0x16a4>
   3b438:	ldursw	x8, [x29, #-12]
   3b43c:	ldr	x9, [sp, #16]
   3b440:	add	x24, x25, x9
   3b444:	sub	x25, x8, x9
   3b448:	add	w8, w25, #0x16
   3b44c:	sxtw	x0, w8
   3b450:	bl	16bf0 <xmalloc@plt>
   3b454:	mov	x1, x24
   3b458:	mov	x2, x25
   3b45c:	mov	x22, x0
   3b460:	bl	17730 <strncpy@plt>
   3b464:	add	x8, x0, x25
   3b468:	add	x10, x0, w25, sxtw
   3b46c:	ldur	x25, [x29, #-72]
   3b470:	mov	w9, #0x3a                  	// #58
   3b474:	adrp	x12, 40000 <filename_completion_function@@Base+0x1580>
   3b478:	add	x12, x12, #0xae
   3b47c:	ldr	q0, [x12]
   3b480:	strb	w9, [x8]
   3b484:	mov	w9, #0x656c                	// #25964
   3b488:	mov	w11, #0x20                  	// #32
   3b48c:	movk	w9, #0x64, lsl #16
   3b490:	strb	w11, [x10, #1]
   3b494:	stur	w9, [x8, #18]
   3b498:	stur	q0, [x8, #2]
   3b49c:	ldr	x0, [sp, #32]
   3b4a0:	bl	169f0 <xfree@plt>
   3b4a4:	mov	x0, x19
   3b4a8:	bl	169f0 <xfree@plt>
   3b4ac:	ldur	x0, [x29, #-64]
   3b4b0:	ldr	x19, [sp, #72]
   3b4b4:	str	x22, [x27]
   3b4b8:	bl	169f0 <xfree@plt>
   3b4bc:	cmp	x25, x19
   3b4c0:	b.eq	3b4cc <history_expand@@Base+0x16fc>  // b.none
   3b4c4:	mov	x0, x25
   3b4c8:	bl	169f0 <xfree@plt>
   3b4cc:	mov	w0, #0xffffffff            	// #-1
   3b4d0:	b	3b36c <history_expand@@Base+0x159c>
   3b4d4:	ldursw	x8, [x29, #-12]
   3b4d8:	ldur	x25, [x29, #-72]
   3b4dc:	sub	x24, x8, x22
   3b4e0:	add	w8, w24, #0x15
   3b4e4:	sxtw	x0, w8
   3b4e8:	add	x19, x25, x22
   3b4ec:	bl	16bf0 <xmalloc@plt>
   3b4f0:	mov	x1, x19
   3b4f4:	mov	x2, x24
   3b4f8:	mov	x22, x0
   3b4fc:	bl	17730 <strncpy@plt>
   3b500:	adrp	x12, 40000 <filename_completion_function@@Base+0x1580>
   3b504:	add	x12, x12, #0x9b
   3b508:	add	x8, x0, x24
   3b50c:	mov	w9, #0x3a                  	// #58
   3b510:	ldr	q0, [x12]
   3b514:	strb	w9, [x8]
   3b518:	mov	w9, #0x6569                	// #25961
   3b51c:	add	x10, x0, w24, sxtw
   3b520:	mov	w11, #0x20                  	// #32
   3b524:	movk	w9, #0x72, lsl #16
   3b528:	strb	w11, [x10, #1]
   3b52c:	stur	w9, [x8, #17]
   3b530:	b	3b57c <history_expand@@Base+0x17ac>
   3b534:	sub	x19, x22, x26
   3b538:	add	w8, w19, #0x12
   3b53c:	sxtw	x0, w8
   3b540:	bl	16bf0 <xmalloc@plt>
   3b544:	ldur	x25, [x29, #-72]
   3b548:	mov	x2, x19
   3b54c:	mov	x22, x0
   3b550:	add	x1, x25, x26
   3b554:	bl	17730 <strncpy@plt>
   3b558:	adrp	x10, 40000 <filename_completion_function@@Base+0x1580>
   3b55c:	add	x10, x10, #0x8b
   3b560:	ldr	q0, [x10]
   3b564:	add	x8, x0, x19
   3b568:	mov	w9, #0x3a                  	// #58
   3b56c:	strb	w9, [x8]
   3b570:	add	x9, x0, w19, sxtw
   3b574:	mov	w10, #0x20                  	// #32
   3b578:	strb	w10, [x9, #1]
   3b57c:	stur	q0, [x8, #2]
   3b580:	ldr	x0, [sp, #32]
   3b584:	b	3b4a8 <history_expand@@Base+0x16d8>
   3b588:	mov	w0, #0x21                  	// #33
   3b58c:	add	w20, w8, #0x1
   3b590:	bl	16bf0 <xmalloc@plt>
   3b594:	add	x1, x25, w20, sxtw
   3b598:	mov	w2, #0x1                   	// #1
   3b59c:	mov	x22, x0
   3b5a0:	bl	17730 <strncpy@plt>
   3b5a4:	adrp	x8, 40000 <filename_completion_function@@Base+0x1580>
   3b5a8:	add	x8, x8, #0xc2
   3b5ac:	ldur	q0, [x8, #14]
   3b5b0:	ldr	q1, [x8]
   3b5b4:	mov	w8, #0x203a                	// #8250
   3b5b8:	sturh	w8, [x0, #1]
   3b5bc:	stur	q0, [x0, #17]
   3b5c0:	stur	q1, [x0, #3]
   3b5c4:	b	3b49c <history_expand@@Base+0x16cc>

000000000003b5c8 <history_arg_extract@@Base>:
   3b5c8:	stp	x29, x30, [sp, #-96]!
   3b5cc:	stp	x22, x21, [sp, #64]
   3b5d0:	stp	x20, x19, [sp, #80]
   3b5d4:	mov	w20, w1
   3b5d8:	mov	w21, w0
   3b5dc:	mov	w1, #0xffffffff            	// #-1
   3b5e0:	mov	x0, x2
   3b5e4:	mov	x2, xzr
   3b5e8:	str	x27, [sp, #16]
   3b5ec:	stp	x26, x25, [sp, #32]
   3b5f0:	stp	x24, x23, [sp, #48]
   3b5f4:	mov	x29, sp
   3b5f8:	bl	3b788 <history_tokenize@@Base+0xc>
   3b5fc:	cbz	x0, 3b684 <history_arg_extract@@Base+0xbc>
   3b600:	mov	x19, x0
   3b604:	mov	w22, #0xffffffff            	// #-1
   3b608:	mov	x8, x0
   3b60c:	ldr	x9, [x8], #8
   3b610:	add	w22, w22, #0x1
   3b614:	cbnz	x9, 3b60c <history_arg_extract@@Base+0x44>
   3b618:	sub	w8, w22, #0x1
   3b61c:	and	w9, w8, w20, asr #31
   3b620:	and	w10, w8, w21, asr #31
   3b624:	add	w9, w9, w20
   3b628:	add	w10, w10, w21
   3b62c:	cmp	w9, #0x24
   3b630:	csel	w21, w8, w9, eq  // eq = none
   3b634:	cmp	w10, #0x24
   3b638:	csel	w23, w8, w10, eq  // eq = none
   3b63c:	cmp	w23, w22
   3b640:	b.ge	3b68c <history_arg_extract@@Base+0xc4>  // b.tcont
   3b644:	add	w8, w21, #0x1
   3b648:	cmp	w23, w8
   3b64c:	mov	x20, xzr
   3b650:	b.gt	3b690 <history_arg_extract@@Base+0xc8>
   3b654:	cmn	w21, #0x1
   3b658:	b.lt	3b690 <history_arg_extract@@Base+0xc8>  // b.tstop
   3b65c:	cmp	w21, w22
   3b660:	b.ge	3b690 <history_arg_extract@@Base+0xc8>  // b.tcont
   3b664:	tbnz	w23, #31, 3b690 <history_arg_extract@@Base+0xc8>
   3b668:	cmp	w23, w21
   3b66c:	b.le	3b6d4 <history_arg_extract@@Base+0x10c>
   3b670:	mov	w0, #0x1                   	// #1
   3b674:	bl	16bf0 <xmalloc@plt>
   3b678:	mov	x20, x0
   3b67c:	strb	wzr, [x0]
   3b680:	b	3b690 <history_arg_extract@@Base+0xc8>
   3b684:	mov	x20, xzr
   3b688:	b	3b6b4 <history_arg_extract@@Base+0xec>
   3b68c:	mov	x20, xzr
   3b690:	cbz	w22, 3b6ac <history_arg_extract@@Base+0xe4>
   3b694:	mov	w21, w22
   3b698:	mov	x22, x19
   3b69c:	ldr	x0, [x22], #8
   3b6a0:	bl	169f0 <xfree@plt>
   3b6a4:	subs	x21, x21, #0x1
   3b6a8:	b.ne	3b69c <history_arg_extract@@Base+0xd4>  // b.any
   3b6ac:	mov	x0, x19
   3b6b0:	bl	169f0 <xfree@plt>
   3b6b4:	mov	x0, x20
   3b6b8:	ldp	x20, x19, [sp, #80]
   3b6bc:	ldp	x22, x21, [sp, #64]
   3b6c0:	ldp	x24, x23, [sp, #48]
   3b6c4:	ldp	x26, x25, [sp, #32]
   3b6c8:	ldr	x27, [sp, #16]
   3b6cc:	ldp	x29, x30, [sp], #96
   3b6d0:	ret
   3b6d4:	mov	w25, wzr
   3b6d8:	mov	w20, w23
   3b6dc:	sxtw	x24, w21
   3b6e0:	ldr	x0, [x19, x20, lsl #3]
   3b6e4:	bl	16440 <strlen@plt>
   3b6e8:	add	w8, w25, w0
   3b6ec:	cmp	x20, x24
   3b6f0:	add	x20, x20, #0x1
   3b6f4:	add	w25, w8, #0x1
   3b6f8:	b.lt	3b6e0 <history_arg_extract@@Base+0x118>  // b.tstop
   3b6fc:	add	w8, w25, #0x1
   3b700:	sxtw	x0, w8
   3b704:	bl	16bf0 <xmalloc@plt>
   3b708:	mov	x20, x0
   3b70c:	cmp	w23, w21
   3b710:	strb	wzr, [x0]
   3b714:	b.gt	3b690 <history_arg_extract@@Base+0xc8>
   3b718:	ldr	x1, [x19, w23, sxtw #3]
   3b71c:	mov	x0, x20
   3b720:	bl	17480 <strcpy@plt>
   3b724:	cmp	w23, w21
   3b728:	b.ge	3b690 <history_arg_extract@@Base+0xc8>  // b.tcont
   3b72c:	sxtw	x25, w23
   3b730:	ldr	x0, [x19, x25, lsl #3]
   3b734:	sxtw	x21, w21
   3b738:	bl	16440 <strlen@plt>
   3b73c:	add	x23, x19, #0x8
   3b740:	mov	w24, #0x20                  	// #32
   3b744:	sxtw	x8, w0
   3b748:	strh	w24, [x20, x8]
   3b74c:	lsl	x26, x25, #3
   3b750:	ldr	x1, [x23, x26]
   3b754:	add	x27, x8, #0x1
   3b758:	add	x0, x20, w27, sxtw
   3b75c:	add	x25, x25, #0x1
   3b760:	bl	17480 <strcpy@plt>
   3b764:	ldr	x0, [x23, x26]
   3b768:	bl	16440 <strlen@plt>
   3b76c:	cmp	x25, x21
   3b770:	add	w0, w27, w0
   3b774:	b.lt	3b744 <history_arg_extract@@Base+0x17c>  // b.tstop
   3b778:	b	3b690 <history_arg_extract@@Base+0xc8>

000000000003b77c <history_tokenize@@Base>:
   3b77c:	mov	w1, #0xffffffff            	// #-1
   3b780:	mov	x2, xzr
   3b784:	b	3b788 <history_tokenize@@Base+0xc>
   3b788:	sub	sp, sp, #0x80
   3b78c:	cmp	x2, #0x0
   3b790:	cset	w8, ne  // ne = any
   3b794:	cmn	w1, #0x1
   3b798:	cset	w9, ne  // ne = any
   3b79c:	and	w8, w9, w8
   3b7a0:	stp	x29, x30, [sp, #32]
   3b7a4:	stp	x22, x21, [sp, #96]
   3b7a8:	add	x29, sp, #0x20
   3b7ac:	cmp	w8, #0x1
   3b7b0:	mov	x21, x0
   3b7b4:	stp	x28, x27, [sp, #48]
   3b7b8:	stp	x26, x25, [sp, #64]
   3b7bc:	stp	x24, x23, [sp, #80]
   3b7c0:	stp	x20, x19, [sp, #112]
   3b7c4:	str	x2, [sp, #8]
   3b7c8:	stur	w1, [x29, #-12]
   3b7cc:	b.ne	3b7dc <history_tokenize@@Base+0x60>  // b.any
   3b7d0:	ldr	x10, [sp, #8]
   3b7d4:	mov	w9, #0xffffffff            	// #-1
   3b7d8:	str	w9, [x10]
   3b7dc:	ldrb	w9, [x21]
   3b7e0:	cbz	w9, 3b944 <history_tokenize@@Base+0x1c8>
   3b7e4:	mov	x27, #0x600                 	// #1536
   3b7e8:	mov	x28, xzr
   3b7ec:	mov	w26, wzr
   3b7f0:	mov	w23, wzr
   3b7f4:	mov	x22, xzr
   3b7f8:	add	x9, x21, #0x1
   3b7fc:	eor	w8, w8, #0x1
   3b800:	mov	w19, #0x1                   	// #1
   3b804:	movk	x27, #0x1, lsl #32
   3b808:	str	x9, [sp]
   3b80c:	str	w8, [sp, #16]
   3b810:	b	3b84c <history_tokenize@@Base+0xd0>
   3b814:	sxtw	x20, w23
   3b818:	sub	x24, x20, w24, sxtw
   3b81c:	add	w8, w24, #0x1
   3b820:	sxtw	x0, w8
   3b824:	bl	16bf0 <xmalloc@plt>
   3b828:	mov	x1, x25
   3b82c:	mov	x2, x24
   3b830:	bl	17730 <strncpy@plt>
   3b834:	strb	wzr, [x0, x24]
   3b838:	str	x0, [x22, x28, lsl #3]
   3b83c:	add	x28, x28, #0x1
   3b840:	str	xzr, [x22, x28, lsl #3]
   3b844:	ldrb	w8, [x21, x20]
   3b848:	cbz	w8, 3b948 <history_tokenize@@Base+0x1cc>
   3b84c:	stur	x26, [x29, #-8]
   3b850:	sxtw	x24, w23
   3b854:	add	w20, w23, #0x1
   3b858:	mov	w26, w23
   3b85c:	ldrb	w8, [x21, x24]
   3b860:	cmp	w8, #0x20
   3b864:	b.hi	3b884 <history_tokenize@@Base+0x108>  // b.pmore
   3b868:	lsl	x9, x19, x8
   3b86c:	tst	x9, x27
   3b870:	b.eq	3b884 <history_tokenize@@Base+0x108>  // b.none
   3b874:	add	x24, x24, #0x1
   3b878:	add	w20, w20, #0x1
   3b87c:	add	w26, w26, #0x1
   3b880:	b	3b85c <history_tokenize@@Base+0xe0>
   3b884:	cbz	w8, 3b948 <history_tokenize@@Base+0x1cc>
   3b888:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3b88c:	ldr	x9, [x9, #3568]
   3b890:	ldrb	w9, [x9]
   3b894:	cmp	w8, w9
   3b898:	b.eq	3b948 <history_tokenize@@Base+0x1cc>  // b.none
   3b89c:	mov	x0, x21
   3b8a0:	mov	w1, w24
   3b8a4:	bl	3bb00 <history_tokenize@@Base+0x384>
   3b8a8:	mov	w23, w0
   3b8ac:	cmp	w24, w0
   3b8b0:	b.ne	3b8ec <history_tokenize@@Base+0x170>  // b.any
   3b8b4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3b8b8:	ldr	x8, [x8, #2824]
   3b8bc:	ldr	x25, [x8]
   3b8c0:	cbz	x25, 3b8ec <history_tokenize@@Base+0x170>
   3b8c4:	ldr	x8, [sp]
   3b8c8:	add	x26, x8, w26, sxtw
   3b8cc:	ldrb	w1, [x26]
   3b8d0:	mov	w23, w20
   3b8d4:	cbz	w1, 3b8ec <history_tokenize@@Base+0x170>
   3b8d8:	mov	x0, x25
   3b8dc:	bl	17380 <strchr@plt>
   3b8e0:	add	w20, w23, #0x1
   3b8e4:	add	x26, x26, #0x1
   3b8e8:	cbnz	x0, 3b8cc <history_tokenize@@Base+0x150>
   3b8ec:	ldur	w8, [x29, #-12]
   3b8f0:	ldr	w9, [sp, #16]
   3b8f4:	add	x25, x21, x24
   3b8f8:	cmp	w24, w8
   3b8fc:	cset	w8, gt
   3b900:	orr	w8, w9, w8
   3b904:	tbnz	w8, #0, 3b91c <history_tokenize@@Base+0x1a0>
   3b908:	ldur	w8, [x29, #-12]
   3b90c:	cmp	w23, w8
   3b910:	b.le	3b91c <history_tokenize@@Base+0x1a0>
   3b914:	ldr	x8, [sp, #8]
   3b918:	str	w28, [x8]
   3b91c:	ldur	x26, [x29, #-8]
   3b920:	add	w8, w28, #0x2
   3b924:	cmp	w8, w26
   3b928:	b.lt	3b814 <history_tokenize@@Base+0x98>  // b.tstop
   3b92c:	add	w26, w26, #0xa
   3b930:	sbfiz	x1, x26, #3, #32
   3b934:	mov	x0, x22
   3b938:	bl	16a50 <xrealloc@plt>
   3b93c:	mov	x22, x0
   3b940:	b	3b814 <history_tokenize@@Base+0x98>
   3b944:	mov	x22, xzr
   3b948:	mov	x0, x22
   3b94c:	ldp	x20, x19, [sp, #112]
   3b950:	ldp	x22, x21, [sp, #96]
   3b954:	ldp	x24, x23, [sp, #80]
   3b958:	ldp	x26, x25, [sp, #64]
   3b95c:	ldp	x28, x27, [sp, #48]
   3b960:	ldp	x29, x30, [sp, #32]
   3b964:	add	sp, sp, #0x80
   3b968:	ret
   3b96c:	stp	x29, x30, [sp, #-96]!
   3b970:	stp	x26, x25, [sp, #32]
   3b974:	stp	x24, x23, [sp, #48]
   3b978:	stp	x22, x21, [sp, #64]
   3b97c:	stp	x20, x19, [sp, #80]
   3b980:	ldrsw	x23, [x1]
   3b984:	mov	x29, sp
   3b988:	mov	w21, w2
   3b98c:	mov	x19, x1
   3b990:	add	x2, x29, #0x18
   3b994:	mov	w1, w23
   3b998:	str	x27, [sp, #16]
   3b99c:	mov	x20, x4
   3b9a0:	mov	w25, w3
   3b9a4:	mov	x22, x0
   3b9a8:	str	xzr, [x29, #24]
   3b9ac:	bl	17170 <_rl_adjust_point@plt>
   3b9b0:	add	x24, x22, x23
   3b9b4:	ldrb	w8, [x24]
   3b9b8:	cbz	w8, 3ba44 <history_tokenize@@Base+0x2c8>
   3b9bc:	cmp	w8, w21
   3b9c0:	b.eq	3ba50 <history_tokenize@@Base+0x2d4>  // b.none
   3b9c4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3b9c8:	ldr	x27, [x27, #1896]
   3b9cc:	mov	w26, w23
   3b9d0:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3b9d4:	cmp	x0, #0x2
   3b9d8:	b.cc	3ba04 <history_tokenize@@Base+0x288>  // b.lo, b.ul, b.last
   3b9dc:	ldr	w8, [x27]
   3b9e0:	cbnz	w8, 3ba04 <history_tokenize@@Base+0x288>
   3b9e4:	add	x1, x29, #0x18
   3b9e8:	mov	x0, x24
   3b9ec:	bl	174b0 <_rl_get_char_len@plt>
   3b9f0:	cmp	w0, #0x2
   3b9f4:	b.lt	3ba04 <history_tokenize@@Base+0x288>  // b.tstop
   3b9f8:	add	w8, w26, w0
   3b9fc:	sub	w26, w8, #0x1
   3ba00:	b	3ba24 <history_tokenize@@Base+0x2a8>
   3ba04:	ldrb	w8, [x24]
   3ba08:	cmp	w8, #0x5c
   3ba0c:	b.ne	3ba24 <history_tokenize@@Base+0x2a8>  // b.any
   3ba10:	sxtw	x8, w26
   3ba14:	add	x8, x8, #0x1
   3ba18:	ldrb	w9, [x22, x8]
   3ba1c:	cmp	w9, w21
   3ba20:	csel	w26, w8, w26, eq  // eq = none
   3ba24:	sxtw	x8, w26
   3ba28:	add	x26, x8, #0x1
   3ba2c:	add	x24, x22, x26
   3ba30:	ldrb	w8, [x24]
   3ba34:	cbz	w8, 3ba48 <history_tokenize@@Base+0x2cc>
   3ba38:	cmp	w8, w21
   3ba3c:	b.ne	3b9d0 <history_tokenize@@Base+0x254>  // b.any
   3ba40:	b	3ba48 <history_tokenize@@Base+0x2cc>
   3ba44:	mov	w26, w23
   3ba48:	cbz	w25, 3ba58 <history_tokenize@@Base+0x2dc>
   3ba4c:	b	3ba68 <history_tokenize@@Base+0x2ec>
   3ba50:	mov	w26, w23
   3ba54:	cbnz	w25, 3ba68 <history_tokenize@@Base+0x2ec>
   3ba58:	cmp	w26, w23
   3ba5c:	b.gt	3ba68 <history_tokenize@@Base+0x2ec>
   3ba60:	mov	x0, xzr
   3ba64:	b	3bad4 <history_tokenize@@Base+0x358>
   3ba68:	subs	w8, w26, w23
   3ba6c:	add	w8, w8, #0x1
   3ba70:	sxtw	x0, w8
   3ba74:	bl	16bf0 <xmalloc@plt>
   3ba78:	cmp	w26, w23
   3ba7c:	b.le	3bac4 <history_tokenize@@Base+0x348>
   3ba80:	mov	x8, xzr
   3ba84:	b	3ba9c <history_tokenize@@Base+0x320>
   3ba88:	add	w23, w23, #0x1
   3ba8c:	strb	w9, [x0, x8]
   3ba90:	cmp	w23, w26
   3ba94:	add	x8, x8, #0x1
   3ba98:	b.ge	3bac8 <history_tokenize@@Base+0x34c>  // b.tcont
   3ba9c:	sxtw	x10, w23
   3baa0:	ldrb	w9, [x22, x10]
   3baa4:	cmp	w9, #0x5c
   3baa8:	b.ne	3ba88 <history_tokenize@@Base+0x30c>  // b.any
   3baac:	add	x9, x10, #0x1
   3bab0:	ldrb	w10, [x22, x9]
   3bab4:	cmp	w10, w21
   3bab8:	csel	w23, w9, w23, eq  // eq = none
   3babc:	ldrb	w9, [x22, w23, sxtw]
   3bac0:	b	3ba88 <history_tokenize@@Base+0x30c>
   3bac4:	mov	w8, wzr
   3bac8:	strb	wzr, [x0, w8, uxtw]
   3bacc:	cbz	x20, 3bad4 <history_tokenize@@Base+0x358>
   3bad0:	str	w8, [x20]
   3bad4:	ldrb	w8, [x24]
   3bad8:	ldr	x27, [sp, #16]
   3badc:	cmp	w8, #0x0
   3bae0:	cinc	w8, w26, ne  // ne = any
   3bae4:	str	w8, [x19]
   3bae8:	ldp	x20, x19, [sp, #80]
   3baec:	ldp	x22, x21, [sp, #64]
   3baf0:	ldp	x24, x23, [sp, #48]
   3baf4:	ldp	x26, x25, [sp, #32]
   3baf8:	ldp	x29, x30, [sp], #96
   3bafc:	ret
   3bb00:	stp	x29, x30, [sp, #-96]!
   3bb04:	stp	x20, x19, [sp, #80]
   3bb08:	mov	w20, w1
   3bb0c:	stp	x26, x25, [sp, #32]
   3bb10:	stp	x24, x23, [sp, #48]
   3bb14:	stp	x22, x21, [sp, #64]
   3bb18:	sxtw	x24, w20
   3bb1c:	ldrb	w23, [x0, x24]
   3bb20:	mov	x19, x0
   3bb24:	str	x27, [sp, #16]
   3bb28:	mov	x29, sp
   3bb2c:	mov	w21, w23
   3bb30:	cbz	x23, 3bb5c <history_tokenize@@Base+0x3e0>
   3bb34:	cmp	w21, #0x3f
   3bb38:	b.hi	3bb5c <history_tokenize@@Base+0x3e0>  // b.pmore
   3bb3c:	mov	w8, #0x1                   	// #1
   3bb40:	mov	x9, #0x401                 	// #1025
   3bb44:	lsl	x8, x8, x23
   3bb48:	movk	x9, #0x300, lsl #32
   3bb4c:	and	x8, x8, x9
   3bb50:	cbz	x8, 3bb5c <history_tokenize@@Base+0x3e0>
   3bb54:	add	w20, w20, #0x1
   3bb58:	b	3be0c <history_tokenize@@Base+0x690>
   3bb5c:	bl	17100 <__ctype_b_loc@plt>
   3bb60:	ldr	x22, [x0]
   3bb64:	ldrh	w8, [x22, x23, lsl #1]
   3bb68:	tbnz	w8, #11, 3bb74 <history_tokenize@@Base+0x3f8>
   3bb6c:	mov	w24, w20
   3bb70:	b	3bba8 <history_tokenize@@Base+0x42c>
   3bb74:	cbz	w21, 3be0c <history_tokenize@@Base+0x690>
   3bb78:	tbz	w8, #11, 3bb9c <history_tokenize@@Base+0x420>
   3bb7c:	add	w20, w20, #0x1
   3bb80:	add	x8, x19, #0x1
   3bb84:	ldrb	w21, [x8, x24]
   3bb88:	cbz	x21, 3be0c <history_tokenize@@Base+0x690>
   3bb8c:	ldrh	w9, [x22, x21, lsl #1]
   3bb90:	add	x24, x24, #0x1
   3bb94:	add	w20, w20, #0x1
   3bb98:	tbnz	w9, #11, 3bb84 <history_tokenize@@Base+0x408>
   3bb9c:	orr	w8, w21, #0x2
   3bba0:	cmp	w8, #0x3e
   3bba4:	b.ne	3bc34 <history_tokenize@@Base+0x4b8>  // b.any
   3bba8:	sxtw	x23, w24
   3bbac:	ldrb	w21, [x19, x23]
   3bbb0:	cbz	w21, 3bc64 <history_tokenize@@Base+0x4e8>
   3bbb4:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3bbb8:	add	x0, x0, #0xf9
   3bbbc:	mov	w2, #0x6                   	// #6
   3bbc0:	mov	w1, w21
   3bbc4:	bl	17530 <memchr@plt>
   3bbc8:	cbz	x0, 3bc3c <history_tokenize@@Base+0x4c0>
   3bbcc:	add	x20, x23, #0x1
   3bbd0:	ldrb	w8, [x19, x20]
   3bbd4:	cmp	w8, w21
   3bbd8:	b.ne	3bc00 <history_tokenize@@Base+0x484>  // b.any
   3bbdc:	cmp	w21, #0x3c
   3bbe0:	b.ne	3be08 <history_tokenize@@Base+0x68c>  // b.any
   3bbe4:	add	x8, x23, x19
   3bbe8:	ldrb	w8, [x8, #2]
   3bbec:	cmp	w8, #0x2d
   3bbf0:	b.ne	3bdb4 <history_tokenize@@Base+0x638>  // b.any
   3bbf4:	mov	w24, w20
   3bbf8:	add	w20, w24, #0x2
   3bbfc:	b	3be0c <history_tokenize@@Base+0x690>
   3bc00:	cmp	w8, #0x3d
   3bc04:	b.gt	3bd98 <history_tokenize@@Base+0x61c>
   3bc08:	cmp	w8, #0x26
   3bc0c:	b.eq	3bdc0 <history_tokenize@@Base+0x644>  // b.none
   3bc10:	cmp	w8, #0x28
   3bc14:	b.ne	3be0c <history_tokenize@@Base+0x690>  // b.any
   3bc18:	orr	w8, w21, #0x2
   3bc1c:	cmp	w8, #0x3e
   3bc20:	b.ne	3be0c <history_tokenize@@Base+0x690>  // b.any
   3bc24:	add	w24, w24, #0x2
   3bc28:	mov	w26, #0x29                  	// #41
   3bc2c:	mov	w25, #0x1                   	// #1
   3bc30:	b	3bc6c <history_tokenize@@Base+0x4f0>
   3bc34:	ldrb	w21, [x19, w24, sxtw]
   3bc38:	cbz	w21, 3bc64 <history_tokenize@@Base+0x4e8>
   3bc3c:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3bc40:	add	x0, x0, #0xff
   3bc44:	mov	w2, #0x4                   	// #4
   3bc48:	mov	w1, w21
   3bc4c:	bl	17530 <memchr@plt>
   3bc50:	cmp	x0, #0x0
   3bc54:	mov	w25, wzr
   3bc58:	cinc	w24, w24, ne  // ne = any
   3bc5c:	csel	w26, wzr, w21, eq  // eq = none
   3bc60:	b	3bc6c <history_tokenize@@Base+0x4f0>
   3bc64:	mov	w25, wzr
   3bc68:	mov	w26, wzr
   3bc6c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3bc70:	ldr	x8, [x8, #2824]
   3bc74:	adrp	x22, 40000 <filename_completion_function@@Base+0x1580>
   3bc78:	adrp	x23, 40000 <filename_completion_function@@Base+0x1580>
   3bc7c:	add	x22, x22, #0xff
   3bc80:	ldr	x21, [x8]
   3bc84:	add	x23, x23, #0x103
   3bc88:	mov	w20, w24
   3bc8c:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bc90:	add	w25, w25, #0x1
   3bc94:	add	w20, w20, #0x1
   3bc98:	sxtw	x27, w20
   3bc9c:	ldrb	w24, [x19, x27]
   3bca0:	cmp	w24, #0x5c
   3bca4:	b.eq	3bcb0 <history_tokenize@@Base+0x534>  // b.none
   3bca8:	cbnz	w24, 3bcc8 <history_tokenize@@Base+0x54c>
   3bcac:	b	3be0c <history_tokenize@@Base+0x690>
   3bcb0:	add	x8, x27, #0x1
   3bcb4:	ldrb	w9, [x19, x8]
   3bcb8:	cmp	w9, #0xa
   3bcbc:	b.eq	3bd80 <history_tokenize@@Base+0x604>  // b.none
   3bcc0:	cmp	w26, #0x27
   3bcc4:	b.ne	3bd8c <history_tokenize@@Base+0x610>  // b.any
   3bcc8:	cbz	w25, 3bcec <history_tokenize@@Base+0x570>
   3bccc:	cmp	w24, #0x28
   3bcd0:	b.eq	3bc90 <history_tokenize@@Base+0x514>  // b.none
   3bcd4:	cmp	w26, w24
   3bcd8:	b.ne	3bcec <history_tokenize@@Base+0x570>  // b.any
   3bcdc:	subs	w25, w25, #0x1
   3bce0:	csel	w26, wzr, w26, eq  // eq = none
   3bce4:	add	w20, w20, #0x1
   3bce8:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bcec:	cmp	w26, w24
   3bcf0:	b.ne	3bd04 <history_tokenize@@Base+0x588>  // b.any
   3bcf4:	cbz	w26, 3bd04 <history_tokenize@@Base+0x588>
   3bcf8:	mov	w26, wzr
   3bcfc:	add	w20, w20, #0x1
   3bd00:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bd04:	orr	w8, w25, w26
   3bd08:	cbnz	w8, 3bd48 <history_tokenize@@Base+0x5cc>
   3bd0c:	cbz	w24, 3bd48 <history_tokenize@@Base+0x5cc>
   3bd10:	mov	w2, #0x9                   	// #9
   3bd14:	mov	x0, x23
   3bd18:	mov	w1, w24
   3bd1c:	bl	17530 <memchr@plt>
   3bd20:	cbz	x0, 3bd48 <history_tokenize@@Base+0x5cc>
   3bd24:	add	x8, x27, x19
   3bd28:	ldrb	w8, [x8, #1]
   3bd2c:	cmp	w8, #0x28
   3bd30:	b.ne	3bd48 <history_tokenize@@Base+0x5cc>  // b.any
   3bd34:	add	w20, w20, #0x2
   3bd38:	mov	w25, #0x1                   	// #1
   3bd3c:	mov	w26, #0x29                  	// #41
   3bd40:	add	w20, w20, #0x1
   3bd44:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bd48:	cbz	w24, 3bd78 <history_tokenize@@Base+0x5fc>
   3bd4c:	cbnz	w26, 3bd78 <history_tokenize@@Base+0x5fc>
   3bd50:	mov	x0, x21
   3bd54:	mov	w1, w24
   3bd58:	bl	17380 <strchr@plt>
   3bd5c:	cbnz	x0, 3be0c <history_tokenize@@Base+0x690>
   3bd60:	mov	w2, #0x4                   	// #4
   3bd64:	mov	x0, x22
   3bd68:	mov	w1, w24
   3bd6c:	bl	17530 <memchr@plt>
   3bd70:	cmp	x0, #0x0
   3bd74:	csel	w26, wzr, w24, eq  // eq = none
   3bd78:	add	w20, w20, #0x1
   3bd7c:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bd80:	mov	w20, w8
   3bd84:	add	w20, w20, #0x1
   3bd88:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bd8c:	mov	w20, w8
   3bd90:	add	w20, w20, #0x1
   3bd94:	b	3bc98 <history_tokenize@@Base+0x51c>
   3bd98:	cmp	w8, #0x3e
   3bd9c:	b.eq	3be00 <history_tokenize@@Base+0x684>  // b.none
   3bda0:	cmp	w8, #0x7c
   3bda4:	b.ne	3be0c <history_tokenize@@Base+0x690>  // b.any
   3bda8:	cmp	w21, #0x3e
   3bdac:	b.eq	3be08 <history_tokenize@@Base+0x68c>  // b.none
   3bdb0:	b	3be0c <history_tokenize@@Base+0x690>
   3bdb4:	cmp	w8, #0x3c
   3bdb8:	csel	w24, w20, w24, eq  // eq = none
   3bdbc:	b	3be08 <history_tokenize@@Base+0x68c>
   3bdc0:	orr	w8, w21, #0x2
   3bdc4:	cmp	w8, #0x3e
   3bdc8:	b.ne	3be0c <history_tokenize@@Base+0x690>  // b.any
   3bdcc:	add	w9, w24, #0x2
   3bdd0:	sxtw	x10, w9
   3bdd4:	ldrb	w8, [x19, x10]
   3bdd8:	cbz	w8, 3be30 <history_tokenize@@Base+0x6b4>
   3bddc:	add	x11, x19, #0x1
   3bde0:	and	x9, x8, #0xff
   3bde4:	ldrh	w9, [x22, x9, lsl #1]
   3bde8:	tbz	w9, #11, 3be2c <history_tokenize@@Base+0x6b0>
   3bdec:	ldrb	w8, [x11, x10]
   3bdf0:	add	x9, x10, #0x1
   3bdf4:	mov	x10, x9
   3bdf8:	cbnz	w8, 3bde0 <history_tokenize@@Base+0x664>
   3bdfc:	b	3be30 <history_tokenize@@Base+0x6b4>
   3be00:	cmp	w21, #0x26
   3be04:	b.ne	3be0c <history_tokenize@@Base+0x690>  // b.any
   3be08:	add	w20, w24, #0x2
   3be0c:	mov	w0, w20
   3be10:	ldp	x20, x19, [sp, #80]
   3be14:	ldp	x22, x21, [sp, #64]
   3be18:	ldp	x24, x23, [sp, #48]
   3be1c:	ldp	x26, x25, [sp, #32]
   3be20:	ldr	x27, [sp, #16]
   3be24:	ldp	x29, x30, [sp], #96
   3be28:	ret
   3be2c:	mov	w9, w10
   3be30:	and	w8, w8, #0xff
   3be34:	cmp	w8, #0x2d
   3be38:	cinc	w20, w9, eq  // eq = none
   3be3c:	b	3be0c <history_tokenize@@Base+0x690>

000000000003be40 <read_history@@Base>:
   3be40:	mov	w2, #0xffffffff            	// #-1
   3be44:	mov	w1, wzr
   3be48:	b	16a10 <read_history_range@plt>

000000000003be4c <read_history_range@@Base>:
   3be4c:	sub	sp, sp, #0xf0
   3be50:	stp	x29, x30, [sp, #144]
   3be54:	stp	x28, x27, [sp, #160]
   3be58:	stp	x26, x25, [sp, #176]
   3be5c:	stp	x24, x23, [sp, #192]
   3be60:	stp	x22, x21, [sp, #208]
   3be64:	stp	x20, x19, [sp, #224]
   3be68:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3be6c:	ldr	x25, [x25, #3992]
   3be70:	add	x29, sp, #0x90
   3be74:	mov	w23, w2
   3be78:	mov	w21, w1
   3be7c:	str	wzr, [x25]
   3be80:	bl	3c224 <read_history_range@@Base+0x3d8>
   3be84:	mov	x19, x0
   3be88:	cbz	x0, 3bef0 <read_history_range@@Base+0xa4>
   3be8c:	mov	w2, #0x1b6                 	// #438
   3be90:	mov	x0, x19
   3be94:	mov	w1, wzr
   3be98:	bl	16a20 <open@plt>
   3be9c:	mov	w22, w0
   3bea0:	tbnz	w0, #31, 3bee8 <read_history_range@@Base+0x9c>
   3bea4:	add	x2, sp, #0x10
   3bea8:	mov	w0, wzr
   3beac:	mov	w1, w22
   3beb0:	bl	17650 <__fxstat@plt>
   3beb4:	cmn	w0, #0x1
   3beb8:	b.eq	3bee8 <read_history_range@@Base+0x9c>  // b.none
   3bebc:	ldr	w8, [sp, #32]
   3bec0:	and	w8, w8, #0xf000
   3bec4:	cmp	w8, #0x8, lsl #12
   3bec8:	b.ne	3befc <read_history_range@@Base+0xb0>  // b.any
   3becc:	ldr	x24, [sp, #64]
   3bed0:	cbz	x24, 3bf0c <read_history_range@@Base+0xc0>
   3bed4:	cmn	x24, #0x1
   3bed8:	b.ne	3bf14 <read_history_range@@Base+0xc8>  // b.any
   3bedc:	bl	177f0 <__errno_location@plt>
   3bee0:	mov	x20, xzr
   3bee4:	b	3bfa0 <read_history_range@@Base+0x154>
   3bee8:	mov	x20, xzr
   3beec:	b	3bfa8 <read_history_range@@Base+0x15c>
   3bef0:	mov	x20, xzr
   3bef4:	mov	w22, #0xffffffff            	// #-1
   3bef8:	b	3bfa8 <read_history_range@@Base+0x15c>
   3befc:	bl	177f0 <__errno_location@plt>
   3bf00:	mov	w8, #0x16                  	// #22
   3bf04:	mov	x20, xzr
   3bf08:	b	3bfa4 <read_history_range@@Base+0x158>
   3bf0c:	mov	x0, x19
   3bf10:	b	3c218 <read_history_range@@Base+0x3cc>
   3bf14:	add	x0, x24, #0x1
   3bf18:	bl	16980 <malloc@plt>
   3bf1c:	mov	x20, x0
   3bf20:	cbz	x0, 3bf9c <read_history_range@@Base+0x150>
   3bf24:	mov	w0, w22
   3bf28:	mov	x1, x20
   3bf2c:	mov	x2, x24
   3bf30:	bl	17520 <read@plt>
   3bf34:	mov	x24, x0
   3bf38:	tbnz	w24, #31, 3bfa8 <read_history_range@@Base+0x15c>
   3bf3c:	mov	w0, w22
   3bf40:	bl	16e90 <close@plt>
   3bf44:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3bf48:	ldr	x8, [x8, #3568]
   3bf4c:	add	x27, x20, w24, sxtw
   3bf50:	strb	wzr, [x27]
   3bf54:	ldrb	w26, [x20]
   3bf58:	ldrb	w22, [x8]
   3bf5c:	cmp	w23, #0x0
   3bf60:	csel	w8, w24, w23, lt  // lt = tstop
   3bf64:	lsl	x23, x24, #32
   3bf68:	str	w8, [sp, #12]
   3bf6c:	cbnz	w22, 3c004 <read_history_range@@Base+0x1b8>
   3bf70:	cmp	w26, #0x23
   3bf74:	b.ne	3c004 <read_history_range@@Base+0x1b8>  // b.any
   3bf78:	bl	17100 <__ctype_b_loc@plt>
   3bf7c:	ldr	x8, [x0]
   3bf80:	ldrb	w9, [x20, #1]
   3bf84:	ldrh	w8, [x8, x9, lsl #1]
   3bf88:	tbnz	w8, #11, 3c01c <read_history_range@@Base+0x1d0>
   3bf8c:	mov	w9, wzr
   3bf90:	mov	w22, wzr
   3bf94:	mov	w8, wzr
   3bf98:	b	3c048 <read_history_range@@Base+0x1fc>
   3bf9c:	bl	177f0 <__errno_location@plt>
   3bfa0:	mov	w8, #0x1b                  	// #27
   3bfa4:	str	w8, [x0]
   3bfa8:	bl	177f0 <__errno_location@plt>
   3bfac:	ldr	w8, [x0]
   3bfb0:	mov	w9, #0x5                   	// #5
   3bfb4:	cmp	w8, #0x0
   3bfb8:	csel	w21, w9, w8, eq  // eq = none
   3bfbc:	tbnz	w22, #31, 3bfc8 <read_history_range@@Base+0x17c>
   3bfc0:	mov	w0, w22
   3bfc4:	bl	16e90 <close@plt>
   3bfc8:	cbz	x19, 3bfd4 <read_history_range@@Base+0x188>
   3bfcc:	mov	x0, x19
   3bfd0:	bl	171b0 <free@plt>
   3bfd4:	cbz	x20, 3bfe0 <read_history_range@@Base+0x194>
   3bfd8:	mov	x0, x20
   3bfdc:	bl	171b0 <free@plt>
   3bfe0:	mov	w0, w21
   3bfe4:	ldp	x20, x19, [sp, #224]
   3bfe8:	ldp	x22, x21, [sp, #208]
   3bfec:	ldp	x24, x23, [sp, #192]
   3bff0:	ldp	x26, x25, [sp, #176]
   3bff4:	ldp	x28, x27, [sp, #160]
   3bff8:	ldp	x29, x30, [sp, #144]
   3bffc:	add	sp, sp, #0xf0
   3c000:	ret
   3c004:	mov	w24, wzr
   3c008:	mov	w9, wzr
   3c00c:	cmp	w26, w22
   3c010:	mov	w8, wzr
   3c014:	b.eq	3c030 <read_history_range@@Base+0x1e4>  // b.none
   3c018:	b	3c048 <read_history_range@@Base+0x1fc>
   3c01c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c020:	ldr	x8, [x8, #3568]
   3c024:	mov	w24, #0x1                   	// #1
   3c028:	mov	w22, #0x23                  	// #35
   3c02c:	strb	w26, [x8]
   3c030:	bl	17100 <__ctype_b_loc@plt>
   3c034:	ldr	x8, [x0]
   3c038:	ldrb	w9, [x20, #1]
   3c03c:	ldrh	w8, [x8, x9, lsl #1]
   3c040:	mov	w9, w24
   3c044:	ubfx	w8, w8, #11, #1
   3c048:	str	w9, [sp, #8]
   3c04c:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c050:	ldr	x9, [x9, #3888]
   3c054:	adrp	x11, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c058:	mov	w28, wzr
   3c05c:	ldr	w9, [x9]
   3c060:	ldr	x11, [x11, #2488]
   3c064:	cmp	w9, #0x0
   3c068:	ldr	w10, [x11]
   3c06c:	cset	w9, ne  // ne = any
   3c070:	and	w8, w8, w9
   3c074:	cmp	x23, #0x1
   3c078:	add	w8, w10, w8
   3c07c:	str	w8, [x11]
   3c080:	b.lt	3c0f8 <read_history_range@@Base+0x2ac>  // b.tstop
   3c084:	cmp	w21, #0x1
   3c088:	b.lt	3c0f8 <read_history_range@@Base+0x2ac>  // b.tstop
   3c08c:	mov	w28, wzr
   3c090:	add	x23, x20, #0x1
   3c094:	mov	w8, w26
   3c098:	mov	x24, x20
   3c09c:	and	w8, w8, #0xff
   3c0a0:	cmp	w8, #0xa
   3c0a4:	b.ne	3c0e0 <read_history_range@@Base+0x294>  // b.any
   3c0a8:	ldrb	w26, [x23]
   3c0ac:	cmp	w26, w22
   3c0b0:	b.ne	3c0d8 <read_history_range@@Base+0x28c>  // b.any
   3c0b4:	bl	17100 <__ctype_b_loc@plt>
   3c0b8:	ldr	x8, [x0]
   3c0bc:	ldrb	w9, [x23, #1]
   3c0c0:	mov	w26, w22
   3c0c4:	ldrh	w8, [x8, x9, lsl #1]
   3c0c8:	mov	w9, #0x1                   	// #1
   3c0cc:	bic	w8, w9, w8, lsr #11
   3c0d0:	add	w28, w28, w8
   3c0d4:	b	3c0dc <read_history_range@@Base+0x290>
   3c0d8:	add	w28, w28, #0x1
   3c0dc:	mov	x24, x23
   3c0e0:	cmp	x23, x27
   3c0e4:	b.cs	3c0fc <read_history_range@@Base+0x2b0>  // b.hs, b.nlast
   3c0e8:	cmp	w28, w21
   3c0ec:	b.ge	3c0fc <read_history_range@@Base+0x2b0>  // b.tcont
   3c0f0:	ldrb	w8, [x23], #1
   3c0f4:	b	3c09c <read_history_range@@Base+0x250>
   3c0f8:	mov	x24, x20
   3c0fc:	cmp	x24, x27
   3c100:	b.cs	3c1f4 <read_history_range@@Base+0x3a8>  // b.hs, b.nlast
   3c104:	mov	x21, xzr
   3c108:	add	x22, x24, #0x1
   3c10c:	mov	x23, x24
   3c110:	and	w8, w26, #0xff
   3c114:	cmp	w8, #0xa
   3c118:	b.ne	3c1e0 <read_history_range@@Base+0x394>  // b.any
   3c11c:	sub	x8, x22, #0x1
   3c120:	cmp	x8, x24
   3c124:	b.ls	3c138 <read_history_range@@Base+0x2ec>  // b.plast
   3c128:	ldurb	w9, [x22, #-2]
   3c12c:	cmp	w9, #0xd
   3c130:	b.ne	3c138 <read_history_range@@Base+0x2ec>  // b.any
   3c134:	sub	x8, x23, #0x1
   3c138:	strb	wzr, [x8]
   3c13c:	ldrb	w8, [x24]
   3c140:	cbz	w8, 3c1a0 <read_history_range@@Base+0x354>
   3c144:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c148:	ldr	x9, [x9, #3568]
   3c14c:	ldrb	w9, [x9]
   3c150:	cmp	w8, w9
   3c154:	b.ne	3c16c <read_history_range@@Base+0x320>  // b.any
   3c158:	bl	17100 <__ctype_b_loc@plt>
   3c15c:	ldr	x8, [x0]
   3c160:	ldrb	w9, [x24, #1]
   3c164:	ldrh	w8, [x8, x9, lsl #1]
   3c168:	tbnz	w8, #11, 3c1c4 <read_history_range@@Base+0x378>
   3c16c:	cbnz	x21, 3c1a8 <read_history_range@@Base+0x35c>
   3c170:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c174:	ldr	x8, [x8, #3056]
   3c178:	ldr	w8, [x8]
   3c17c:	subs	w0, w8, #0x1
   3c180:	b.lt	3c1a8 <read_history_range@@Base+0x35c>  // b.tstop
   3c184:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c188:	ldr	x8, [x8, #2488]
   3c18c:	ldr	w8, [x8]
   3c190:	cbz	w8, 3c1a8 <read_history_range@@Base+0x35c>
   3c194:	mov	x1, x24
   3c198:	bl	17080 <_hs_append_history_line@plt>
   3c19c:	b	3c1b0 <read_history_range@@Base+0x364>
   3c1a0:	mov	x24, x21
   3c1a4:	b	3c1c8 <read_history_range@@Base+0x37c>
   3c1a8:	mov	x0, x24
   3c1ac:	bl	166b0 <add_history@plt>
   3c1b0:	cbz	x21, 3c1bc <read_history_range@@Base+0x370>
   3c1b4:	mov	x0, x21
   3c1b8:	bl	164f0 <add_history_time@plt>
   3c1bc:	mov	x24, xzr
   3c1c0:	b	3c1c8 <read_history_range@@Base+0x37c>
   3c1c4:	sub	w28, w28, #0x1
   3c1c8:	ldr	w8, [sp, #12]
   3c1cc:	add	w28, w28, #0x1
   3c1d0:	mov	x21, x24
   3c1d4:	mov	x24, x22
   3c1d8:	cmp	w28, w8
   3c1dc:	b.ge	3c1f4 <read_history_range@@Base+0x3a8>  // b.tcont
   3c1e0:	cmp	x27, x22
   3c1e4:	b.eq	3c1f4 <read_history_range@@Base+0x3a8>  // b.none
   3c1e8:	ldrb	w26, [x22], #1
   3c1ec:	add	x23, x23, #0x1
   3c1f0:	b	3c110 <read_history_range@@Base+0x2c4>
   3c1f4:	ldr	w8, [sp, #8]
   3c1f8:	str	w28, [x25]
   3c1fc:	cbz	w8, 3c20c <read_history_range@@Base+0x3c0>
   3c200:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c204:	ldr	x8, [x8, #3568]
   3c208:	strb	wzr, [x8]
   3c20c:	mov	x0, x19
   3c210:	bl	171b0 <free@plt>
   3c214:	mov	x0, x20
   3c218:	bl	171b0 <free@plt>
   3c21c:	mov	w21, wzr
   3c220:	b	3bfe0 <read_history_range@@Base+0x194>
   3c224:	stp	x29, x30, [sp, #-32]!
   3c228:	stp	x20, x19, [sp, #16]
   3c22c:	mov	x29, sp
   3c230:	cbz	x0, 3c250 <read_history_range@@Base+0x404>
   3c234:	mov	x19, x0
   3c238:	bl	16440 <strlen@plt>
   3c23c:	add	x0, x0, #0x1
   3c240:	bl	16bf0 <xmalloc@plt>
   3c244:	mov	x1, x19
   3c248:	bl	17480 <strcpy@plt>
   3c24c:	cbnz	x0, 3c2a0 <read_history_range@@Base+0x454>
   3c250:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3c254:	add	x0, x0, #0x10c
   3c258:	bl	163a0 <sh_get_env_value@plt>
   3c25c:	cbz	x0, 3c2a0 <read_history_range@@Base+0x454>
   3c260:	mov	x19, x0
   3c264:	bl	16440 <strlen@plt>
   3c268:	mov	x20, x0
   3c26c:	add	w8, w20, #0xa
   3c270:	sxtw	x0, w8
   3c274:	bl	16bf0 <xmalloc@plt>
   3c278:	mov	x1, x19
   3c27c:	bl	17480 <strcpy@plt>
   3c280:	adrp	x9, 40000 <filename_completion_function@@Base+0x1580>
   3c284:	add	x9, x9, #0x111
   3c288:	ldr	x9, [x9]
   3c28c:	add	x8, x0, w20, sxtw
   3c290:	mov	w10, #0x2f                  	// #47
   3c294:	strb	w10, [x8]
   3c298:	strb	wzr, [x8, #9]
   3c29c:	stur	x9, [x8, #1]
   3c2a0:	ldp	x20, x19, [sp, #16]
   3c2a4:	ldp	x29, x30, [sp], #32
   3c2a8:	ret

000000000003c2ac <history_truncate_file@@Base>:
   3c2ac:	stp	x29, x30, [sp, #-96]!
   3c2b0:	stp	x28, x27, [sp, #16]
   3c2b4:	stp	x26, x25, [sp, #32]
   3c2b8:	stp	x24, x23, [sp, #48]
   3c2bc:	stp	x22, x21, [sp, #64]
   3c2c0:	stp	x20, x19, [sp, #80]
   3c2c4:	mov	x29, sp
   3c2c8:	sub	sp, sp, #0x1, lsl #12
   3c2cc:	sub	sp, sp, #0x90
   3c2d0:	adrp	x25, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c2d4:	ldr	x25, [x25, #3504]
   3c2d8:	mov	w20, w1
   3c2dc:	str	wzr, [x25]
   3c2e0:	bl	3c224 <read_history_range@@Base+0x3d8>
   3c2e4:	mov	x19, x0
   3c2e8:	cbz	x0, 3c408 <history_truncate_file@@Base+0x15c>
   3c2ec:	mov	w2, #0x1b6                 	// #438
   3c2f0:	mov	x0, x19
   3c2f4:	mov	w1, wzr
   3c2f8:	bl	16a20 <open@plt>
   3c2fc:	cmn	w0, #0x1
   3c300:	b.eq	3c408 <history_truncate_file@@Base+0x15c>  // b.none
   3c304:	mov	w22, w0
   3c308:	mov	x2, sp
   3c30c:	mov	w0, wzr
   3c310:	mov	w1, w22
   3c314:	bl	17650 <__fxstat@plt>
   3c318:	cmn	w0, #0x1
   3c31c:	b.eq	3c470 <history_truncate_file@@Base+0x1c4>  // b.none
   3c320:	ldr	w8, [sp, #16]
   3c324:	and	w8, w8, #0xf000
   3c328:	cmp	w8, #0x8, lsl #12
   3c32c:	b.ne	3c4c0 <history_truncate_file@@Base+0x214>  // b.any
   3c330:	ldr	x23, [sp, #48]
   3c334:	cmn	x23, #0x1
   3c338:	b.eq	3c4d4 <history_truncate_file@@Base+0x228>  // b.none
   3c33c:	add	x0, x23, #0x1
   3c340:	bl	16980 <malloc@plt>
   3c344:	cbz	x0, 3c4f0 <history_truncate_file@@Base+0x244>
   3c348:	mov	x21, x0
   3c34c:	mov	w0, w22
   3c350:	mov	x1, x21
   3c354:	mov	x2, x23
   3c358:	bl	17520 <read@plt>
   3c35c:	mov	x23, x0
   3c360:	mov	w0, w22
   3c364:	bl	16e90 <close@plt>
   3c368:	cmp	w23, #0x0
   3c36c:	b.le	3c508 <history_truncate_file@@Base+0x25c>
   3c370:	sxtw	x28, w23
   3c374:	add	x8, x21, x28
   3c378:	sub	x27, x8, #0x1
   3c37c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c380:	ldr	x8, [x8, #3568]
   3c384:	cmp	x27, x21
   3c388:	b.ls	3c514 <history_truncate_file@@Base+0x268>  // b.plast
   3c38c:	cbz	w20, 3c514 <history_truncate_file@@Base+0x268>
   3c390:	mov	x23, x28
   3c394:	ldrb	w28, [x8]
   3c398:	mov	w26, w20
   3c39c:	mov	x22, x27
   3c3a0:	ldrb	w8, [x22]
   3c3a4:	cmp	w8, #0xa
   3c3a8:	b.ne	3c3dc <history_truncate_file@@Base+0x130>  // b.any
   3c3ac:	ldrb	w8, [x27]
   3c3b0:	cmp	w8, w28
   3c3b4:	b.ne	3c3d8 <history_truncate_file@@Base+0x12c>  // b.any
   3c3b8:	bl	17100 <__ctype_b_loc@plt>
   3c3bc:	ldr	x8, [x0]
   3c3c0:	ldrb	w9, [x27, #1]
   3c3c4:	ldrh	w8, [x8, x9, lsl #1]
   3c3c8:	ubfx	w8, w8, #11, #1
   3c3cc:	add	w8, w8, w26
   3c3d0:	sub	w26, w8, #0x1
   3c3d4:	b	3c3dc <history_truncate_file@@Base+0x130>
   3c3d8:	sub	w26, w26, #0x1
   3c3dc:	sub	x24, x22, #0x1
   3c3e0:	cmp	x24, x21
   3c3e4:	b.ls	3c3f4 <history_truncate_file@@Base+0x148>  // b.plast
   3c3e8:	mov	x27, x22
   3c3ec:	mov	x22, x24
   3c3f0:	cbnz	w26, 3c3a0 <history_truncate_file@@Base+0xf4>
   3c3f4:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c3f8:	ldr	x8, [x8, #3568]
   3c3fc:	add	x27, x24, #0x1
   3c400:	mov	x28, x23
   3c404:	b	3c51c <history_truncate_file@@Base+0x270>
   3c408:	bl	177f0 <__errno_location@plt>
   3c40c:	ldr	w23, [x0]
   3c410:	mov	w8, wzr
   3c414:	mov	w20, wzr
   3c418:	mov	x22, xzr
   3c41c:	str	wzr, [x25]
   3c420:	cbz	w23, 3c440 <history_truncate_file@@Base+0x194>
   3c424:	cbz	w20, 3c460 <history_truncate_file@@Base+0x1b4>
   3c428:	mov	x0, x22
   3c42c:	bl	17910 <unlink@plt>
   3c430:	mov	x0, x19
   3c434:	str	wzr, [x25]
   3c438:	bl	169f0 <xfree@plt>
   3c43c:	b	3c490 <history_truncate_file@@Base+0x1e4>
   3c440:	cbz	w8, 3c484 <history_truncate_file@@Base+0x1d8>
   3c444:	ldp	w1, w2, [sp, #24]
   3c448:	mov	x0, x19
   3c44c:	bl	17880 <chown@plt>
   3c450:	mov	x0, x19
   3c454:	bl	169f0 <xfree@plt>
   3c458:	tbnz	w20, #0, 3c490 <history_truncate_file@@Base+0x1e4>
   3c45c:	b	3c498 <history_truncate_file@@Base+0x1ec>
   3c460:	mov	x0, x19
   3c464:	str	wzr, [x25]
   3c468:	bl	169f0 <xfree@plt>
   3c46c:	b	3c498 <history_truncate_file@@Base+0x1ec>
   3c470:	bl	177f0 <__errno_location@plt>
   3c474:	ldr	w23, [x0]
   3c478:	mov	w0, w22
   3c47c:	bl	16e90 <close@plt>
   3c480:	b	3c410 <history_truncate_file@@Base+0x164>
   3c484:	mov	x0, x19
   3c488:	bl	169f0 <xfree@plt>
   3c48c:	cbz	w20, 3c498 <history_truncate_file@@Base+0x1ec>
   3c490:	mov	x0, x22
   3c494:	bl	171b0 <free@plt>
   3c498:	mov	w0, w23
   3c49c:	add	sp, sp, #0x1, lsl #12
   3c4a0:	add	sp, sp, #0x90
   3c4a4:	ldp	x20, x19, [sp, #80]
   3c4a8:	ldp	x22, x21, [sp, #64]
   3c4ac:	ldp	x24, x23, [sp, #48]
   3c4b0:	ldp	x26, x25, [sp, #32]
   3c4b4:	ldp	x28, x27, [sp, #16]
   3c4b8:	ldp	x29, x30, [sp], #96
   3c4bc:	ret
   3c4c0:	mov	w0, w22
   3c4c4:	bl	16e90 <close@plt>
   3c4c8:	mov	w8, #0x1                   	// #1
   3c4cc:	mov	w23, #0x16                  	// #22
   3c4d0:	b	3c414 <history_truncate_file@@Base+0x168>
   3c4d4:	mov	w0, w22
   3c4d8:	bl	16e90 <close@plt>
   3c4dc:	bl	177f0 <__errno_location@plt>
   3c4e0:	mov	w23, #0x1b                  	// #27
   3c4e4:	str	w23, [x0]
   3c4e8:	mov	w8, #0x1                   	// #1
   3c4ec:	b	3c414 <history_truncate_file@@Base+0x168>
   3c4f0:	bl	177f0 <__errno_location@plt>
   3c4f4:	ldr	w23, [x0]
   3c4f8:	mov	w0, w22
   3c4fc:	bl	16e90 <close@plt>
   3c500:	mov	w8, #0x1                   	// #1
   3c504:	b	3c414 <history_truncate_file@@Base+0x168>
   3c508:	tbnz	w23, #31, 3c5d4 <history_truncate_file@@Base+0x328>
   3c50c:	mov	w23, wzr
   3c510:	b	3c5dc <history_truncate_file@@Base+0x330>
   3c514:	mov	x24, x27
   3c518:	mov	w26, w20
   3c51c:	cmp	x24, x21
   3c520:	b.ls	3c574 <history_truncate_file@@Base+0x2c8>  // b.plast
   3c524:	ldrb	w22, [x8]
   3c528:	b	3c540 <history_truncate_file@@Base+0x294>
   3c52c:	sub	x23, x24, #0x1
   3c530:	cmp	x23, x21
   3c534:	mov	x27, x24
   3c538:	mov	x24, x23
   3c53c:	b.ls	3c578 <history_truncate_file@@Base+0x2cc>  // b.plast
   3c540:	ldrb	w8, [x24]
   3c544:	cmp	w8, #0xa
   3c548:	b.ne	3c52c <history_truncate_file@@Base+0x280>  // b.any
   3c54c:	ldrb	w8, [x27]
   3c550:	cmp	w8, w22
   3c554:	b.ne	3c56c <history_truncate_file@@Base+0x2c0>  // b.any
   3c558:	bl	17100 <__ctype_b_loc@plt>
   3c55c:	ldr	x8, [x0]
   3c560:	ldrb	w9, [x27, #1]
   3c564:	ldrh	w8, [x8, x9, lsl #1]
   3c568:	tbnz	w8, #11, 3c52c <history_truncate_file@@Base+0x280>
   3c56c:	add	x23, x24, #0x1
   3c570:	b	3c578 <history_truncate_file@@Base+0x2cc>
   3c574:	mov	x23, x24
   3c578:	cmp	x23, x21
   3c57c:	b.ls	3c5c0 <history_truncate_file@@Base+0x314>  // b.plast
   3c580:	mov	x0, x19
   3c584:	bl	3c66c <history_truncate_file@@Base+0x3c0>
   3c588:	mov	w1, #0x241                 	// #577
   3c58c:	mov	w2, #0x180                 	// #384
   3c590:	mov	x22, x0
   3c594:	bl	16a20 <open@plt>
   3c598:	cmn	w0, #0x1
   3c59c:	b.eq	3c600 <history_truncate_file@@Base+0x354>  // b.none
   3c5a0:	add	x8, x28, x21
   3c5a4:	sub	x2, x8, x23
   3c5a8:	mov	x1, x23
   3c5ac:	mov	w24, w0
   3c5b0:	bl	16f30 <write@plt>
   3c5b4:	tbnz	x0, #63, 3c5e8 <history_truncate_file@@Base+0x33c>
   3c5b8:	mov	w23, wzr
   3c5bc:	b	3c5f0 <history_truncate_file@@Base+0x344>
   3c5c0:	sub	w8, w20, w26
   3c5c4:	mov	w23, wzr
   3c5c8:	mov	x22, xzr
   3c5cc:	str	w8, [x25]
   3c5d0:	b	3c608 <history_truncate_file@@Base+0x35c>
   3c5d4:	bl	177f0 <__errno_location@plt>
   3c5d8:	ldr	w23, [x0]
   3c5dc:	mov	x22, xzr
   3c5e0:	mov	w26, w20
   3c5e4:	b	3c608 <history_truncate_file@@Base+0x35c>
   3c5e8:	bl	177f0 <__errno_location@plt>
   3c5ec:	ldr	w23, [x0]
   3c5f0:	mov	w0, w24
   3c5f4:	bl	16e90 <close@plt>
   3c5f8:	cbnz	w23, 3c608 <history_truncate_file@@Base+0x35c>
   3c5fc:	tbz	w0, #31, 3c608 <history_truncate_file@@Base+0x35c>
   3c600:	bl	177f0 <__errno_location@plt>
   3c604:	ldr	w23, [x0]
   3c608:	mov	x0, x21
   3c60c:	bl	171b0 <free@plt>
   3c610:	sub	w8, w20, w26
   3c614:	cmp	x22, #0x0
   3c618:	str	w8, [x25]
   3c61c:	cset	w20, ne  // ne = any
   3c620:	mov	w8, #0x1                   	// #1
   3c624:	cbnz	w23, 3c420 <history_truncate_file@@Base+0x174>
   3c628:	cbz	x22, 3c420 <history_truncate_file@@Base+0x174>
   3c62c:	add	x1, sp, #0x84
   3c630:	mov	w2, #0x1000                	// #4096
   3c634:	mov	x0, x19
   3c638:	add	x20, sp, #0x84
   3c63c:	bl	16610 <readlink@plt>
   3c640:	cmp	x0, #0x1
   3c644:	mov	x1, x19
   3c648:	b.lt	3c654 <history_truncate_file@@Base+0x3a8>  // b.tstop
   3c64c:	add	x1, sp, #0x84
   3c650:	strb	wzr, [x20, x0]
   3c654:	mov	x0, x22
   3c658:	bl	173c0 <rename@plt>
   3c65c:	mov	w23, w0
   3c660:	mov	w20, #0x1                   	// #1
   3c664:	mov	w8, #0x1                   	// #1
   3c668:	b	3c420 <history_truncate_file@@Base+0x174>
   3c66c:	stp	x29, x30, [sp, #-48]!
   3c670:	stp	x28, x21, [sp, #16]
   3c674:	stp	x20, x19, [sp, #32]
   3c678:	mov	x29, sp
   3c67c:	sub	sp, sp, #0x1, lsl #12
   3c680:	sub	sp, sp, #0x10
   3c684:	add	x1, sp, #0xc
   3c688:	mov	w2, #0x1000                	// #4096
   3c68c:	mov	x20, x0
   3c690:	add	x19, sp, #0xc
   3c694:	bl	16610 <readlink@plt>
   3c698:	cmp	x0, #0x1
   3c69c:	b.lt	3c6a8 <history_truncate_file@@Base+0x3fc>  // b.tstop
   3c6a0:	add	x20, sp, #0xc
   3c6a4:	strb	wzr, [x19, x0]
   3c6a8:	mov	x0, x20
   3c6ac:	bl	16440 <strlen@plt>
   3c6b0:	mov	x21, x0
   3c6b4:	add	x0, x0, #0xb
   3c6b8:	bl	16bf0 <xmalloc@plt>
   3c6bc:	mov	x1, x20
   3c6c0:	mov	x19, x0
   3c6c4:	bl	17480 <strcpy@plt>
   3c6c8:	bl	16930 <getpid@plt>
   3c6cc:	mov	w11, #0x8bad                	// #35757
   3c6d0:	add	x8, x19, x21
   3c6d4:	mov	w10, #0x2d                  	// #45
   3c6d8:	movk	w11, #0x68db, lsl #16
   3c6dc:	mov	w12, #0x4dd3                	// #19923
   3c6e0:	mov	w14, #0x742e                	// #29742
   3c6e4:	mov	w9, #0x6667                	// #26215
   3c6e8:	movk	w12, #0x1062, lsl #16
   3c6ec:	mov	w13, #0x851f                	// #34079
   3c6f0:	movk	w14, #0x706d, lsl #16
   3c6f4:	strb	w10, [x8]
   3c6f8:	smull	x10, w0, w11
   3c6fc:	movk	w9, #0x6666, lsl #16
   3c700:	movk	w13, #0x51eb, lsl #16
   3c704:	smull	x11, w0, w12
   3c708:	stur	w14, [x8, #6]
   3c70c:	lsr	x14, x10, #63
   3c710:	asr	x10, x10, #44
   3c714:	smull	x12, w0, w13
   3c718:	smull	x13, w0, w9
   3c71c:	lsr	x15, x11, #63
   3c720:	asr	x11, x11, #38
   3c724:	add	w10, w10, w14
   3c728:	lsr	x16, x12, #63
   3c72c:	asr	x12, x12, #37
   3c730:	lsr	x17, x13, #63
   3c734:	asr	x13, x13, #34
   3c738:	add	w11, w11, w15
   3c73c:	smull	x14, w10, w9
   3c740:	add	w12, w12, w16
   3c744:	add	w13, w13, w17
   3c748:	smull	x15, w11, w9
   3c74c:	lsr	x17, x14, #63
   3c750:	lsr	x14, x14, #34
   3c754:	smull	x16, w12, w9
   3c758:	add	w14, w14, w17
   3c75c:	lsr	x17, x15, #63
   3c760:	lsr	x15, x15, #34
   3c764:	smull	x9, w13, w9
   3c768:	add	w15, w15, w17
   3c76c:	lsr	x17, x16, #63
   3c770:	lsr	x16, x16, #34
   3c774:	add	w16, w16, w17
   3c778:	lsr	x17, x9, #63
   3c77c:	lsr	x9, x9, #34
   3c780:	add	w9, w9, w17
   3c784:	mov	w17, #0xa                   	// #10
   3c788:	msub	w18, w13, w17, w0
   3c78c:	msub	w10, w14, w17, w10
   3c790:	msub	w11, w15, w17, w11
   3c794:	msub	w12, w16, w17, w12
   3c798:	msub	w9, w9, w17, w13
   3c79c:	add	w18, w18, #0x30
   3c7a0:	add	w10, w10, #0x30
   3c7a4:	add	w11, w11, #0x30
   3c7a8:	add	w12, w12, #0x30
   3c7ac:	add	w9, w9, #0x30
   3c7b0:	strb	w18, [x8, #5]
   3c7b4:	strb	w10, [x8, #1]
   3c7b8:	strb	w11, [x8, #2]
   3c7bc:	strb	w12, [x8, #3]
   3c7c0:	strb	w9, [x8, #4]
   3c7c4:	strb	wzr, [x8, #10]
   3c7c8:	mov	x0, x19
   3c7cc:	add	sp, sp, #0x1, lsl #12
   3c7d0:	add	sp, sp, #0x10
   3c7d4:	ldp	x20, x19, [sp, #32]
   3c7d8:	ldp	x28, x21, [sp, #16]
   3c7dc:	ldp	x29, x30, [sp], #48
   3c7e0:	ret

000000000003c7e4 <append_history@@Base>:
   3c7e4:	mov	w8, w0
   3c7e8:	mov	x0, x1
   3c7ec:	mov	w1, w8
   3c7f0:	mov	w2, wzr
   3c7f4:	b	3c7f8 <append_history@@Base+0x14>
   3c7f8:	stp	x29, x30, [sp, #-96]!
   3c7fc:	stp	x28, x27, [sp, #16]
   3c800:	stp	x26, x25, [sp, #32]
   3c804:	stp	x24, x23, [sp, #48]
   3c808:	stp	x22, x21, [sp, #64]
   3c80c:	stp	x20, x19, [sp, #80]
   3c810:	mov	x29, sp
   3c814:	sub	sp, sp, #0x1, lsl #12
   3c818:	sub	sp, sp, #0xb0
   3c81c:	cmp	w2, #0x0
   3c820:	mov	w8, #0x401                 	// #1025
   3c824:	mov	w9, #0x241                 	// #577
   3c828:	mov	w23, w2
   3c82c:	mov	w22, w1
   3c830:	csel	w21, w9, w8, ne  // ne = any
   3c834:	bl	3c224 <read_history_range@@Base+0x3d8>
   3c838:	mov	x19, x0
   3c83c:	cbz	x0, 3c884 <append_history@@Base+0xa0>
   3c840:	add	x2, sp, #0x20
   3c844:	mov	w0, wzr
   3c848:	mov	x1, x19
   3c84c:	bl	17850 <__xstat@plt>
   3c850:	cmp	w0, #0x0
   3c854:	mov	x20, xzr
   3c858:	cset	w24, eq  // eq = none
   3c85c:	cbz	w23, 3c898 <append_history@@Base+0xb4>
   3c860:	cbnz	w0, 3c898 <append_history@@Base+0xb4>
   3c864:	ldr	w8, [sp, #48]
   3c868:	and	w8, w8, #0xf000
   3c86c:	cmp	w8, #0x8, lsl #12
   3c870:	b.ne	3c890 <append_history@@Base+0xac>  // b.any
   3c874:	mov	x0, x19
   3c878:	bl	3c66c <history_truncate_file@@Base+0x3c0>
   3c87c:	mov	x20, x0
   3c880:	b	3c894 <append_history@@Base+0xb0>
   3c884:	mov	w24, wzr
   3c888:	mov	x20, xzr
   3c88c:	b	3c898 <append_history@@Base+0xb4>
   3c890:	mov	x20, xzr
   3c894:	mov	w24, #0x1                   	// #1
   3c898:	cmp	x20, #0x0
   3c89c:	csel	x0, x20, x19, ne  // ne = any
   3c8a0:	cbz	x0, 3c948 <append_history@@Base+0x164>
   3c8a4:	mov	w2, #0x180                 	// #384
   3c8a8:	mov	w1, w21
   3c8ac:	bl	16a20 <open@plt>
   3c8b0:	cmn	w0, #0x1
   3c8b4:	b.eq	3c948 <append_history@@Base+0x164>  // b.none
   3c8b8:	stp	w24, w0, [sp, #24]
   3c8bc:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c8c0:	ldr	x27, [x27, #3056]
   3c8c4:	ldr	w8, [x27]
   3c8c8:	cmp	w8, w22
   3c8cc:	csel	w21, w8, w22, lt  // lt = tstop
   3c8d0:	bl	16fb0 <history_list@plt>
   3c8d4:	ldrsw	x25, [x27]
   3c8d8:	mov	x22, x0
   3c8dc:	cmp	w21, #0x1
   3c8e0:	str	w21, [sp, #20]
   3c8e4:	sub	w28, w25, w21
   3c8e8:	b.lt	3c998 <append_history@@Base+0x1b4>  // b.tstop
   3c8ec:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c8f0:	ldr	x8, [x8, #3888]
   3c8f4:	mov	w23, wzr
   3c8f8:	sxtw	x24, w28
   3c8fc:	ldr	w21, [x8]
   3c900:	b	3c920 <append_history@@Base+0x13c>
   3c904:	ldr	x0, [x26]
   3c908:	bl	16440 <strlen@plt>
   3c90c:	add	w8, w23, w0
   3c910:	add	x24, x24, #0x1
   3c914:	cmp	x24, x25
   3c918:	add	w23, w8, #0x1
   3c91c:	b.ge	3c990 <append_history@@Base+0x1ac>  // b.tcont
   3c920:	ldr	x26, [x22, x24, lsl #3]
   3c924:	cbz	w21, 3c904 <append_history@@Base+0x120>
   3c928:	ldr	x0, [x26, #8]
   3c92c:	cbz	x0, 3c904 <append_history@@Base+0x120>
   3c930:	ldrb	w8, [x0]
   3c934:	cbz	w8, 3c904 <append_history@@Base+0x120>
   3c938:	bl	16440 <strlen@plt>
   3c93c:	add	w8, w23, w0
   3c940:	add	w23, w8, #0x1
   3c944:	b	3c904 <append_history@@Base+0x120>
   3c948:	bl	177f0 <__errno_location@plt>
   3c94c:	ldr	w22, [x0]
   3c950:	cbz	x19, 3c95c <append_history@@Base+0x178>
   3c954:	mov	x0, x19
   3c958:	bl	171b0 <free@plt>
   3c95c:	cbz	x20, 3c968 <append_history@@Base+0x184>
   3c960:	mov	x0, x20
   3c964:	bl	171b0 <free@plt>
   3c968:	mov	w0, w22
   3c96c:	add	sp, sp, #0x1, lsl #12
   3c970:	add	sp, sp, #0xb0
   3c974:	ldp	x20, x19, [sp, #80]
   3c978:	ldp	x22, x21, [sp, #64]
   3c97c:	ldp	x24, x23, [sp, #48]
   3c980:	ldp	x26, x25, [sp, #32]
   3c984:	ldp	x28, x27, [sp, #16]
   3c988:	ldp	x29, x30, [sp], #96
   3c98c:	ret
   3c990:	sxtw	x21, w23
   3c994:	b	3c99c <append_history@@Base+0x1b8>
   3c998:	mov	x21, xzr
   3c99c:	mov	x0, x21
   3c9a0:	bl	16980 <malloc@plt>
   3c9a4:	cbz	x0, 3ca6c <append_history@@Base+0x288>
   3c9a8:	mov	x23, x0
   3c9ac:	cmp	w28, w25
   3c9b0:	str	x21, [sp, #8]
   3c9b4:	b.ge	3ca4c <append_history@@Base+0x268>  // b.tcont
   3c9b8:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3c9bc:	ldr	x26, [x26, #3888]
   3c9c0:	mov	w25, wzr
   3c9c4:	sxtw	x28, w28
   3c9c8:	mov	w21, #0xa                   	// #10
   3c9cc:	b	3ca0c <append_history@@Base+0x228>
   3c9d0:	lsl	x24, x28, #3
   3c9d4:	ldr	x8, [x22, x24]
   3c9d8:	add	x0, x23, w25, sxtw
   3c9dc:	ldr	x1, [x8]
   3c9e0:	bl	17480 <strcpy@plt>
   3c9e4:	ldr	x8, [x22, x24]
   3c9e8:	ldr	x0, [x8]
   3c9ec:	bl	16440 <strlen@plt>
   3c9f0:	ldrsw	x8, [x27]
   3c9f4:	add	w9, w25, w0
   3c9f8:	add	x28, x28, #0x1
   3c9fc:	add	w25, w9, #0x1
   3ca00:	cmp	x28, x8
   3ca04:	strb	w21, [x23, w9, sxtw]
   3ca08:	b.ge	3ca4c <append_history@@Base+0x268>  // b.tcont
   3ca0c:	ldr	w8, [x26]
   3ca10:	cbz	w8, 3c9d0 <append_history@@Base+0x1ec>
   3ca14:	ldr	x8, [x22, x28, lsl #3]
   3ca18:	ldr	x1, [x8, #8]
   3ca1c:	cbz	x1, 3c9d0 <append_history@@Base+0x1ec>
   3ca20:	ldrb	w8, [x1]
   3ca24:	cbz	w8, 3c9d0 <append_history@@Base+0x1ec>
   3ca28:	add	x0, x23, w25, sxtw
   3ca2c:	bl	17480 <strcpy@plt>
   3ca30:	ldr	x8, [x22, x28, lsl #3]
   3ca34:	ldr	x0, [x8, #8]
   3ca38:	bl	16440 <strlen@plt>
   3ca3c:	add	w8, w25, w0
   3ca40:	add	w25, w8, #0x1
   3ca44:	strb	w21, [x23, w8, sxtw]
   3ca48:	b	3c9d0 <append_history@@Base+0x1ec>
   3ca4c:	ldr	w21, [sp, #28]
   3ca50:	ldr	x2, [sp, #8]
   3ca54:	mov	x1, x23
   3ca58:	mov	w0, w21
   3ca5c:	bl	16f30 <write@plt>
   3ca60:	tbnz	x0, #63, 3ca8c <append_history@@Base+0x2a8>
   3ca64:	mov	w22, wzr
   3ca68:	b	3ca94 <append_history@@Base+0x2b0>
   3ca6c:	bl	177f0 <__errno_location@plt>
   3ca70:	ldr	w22, [x0]
   3ca74:	ldr	w0, [sp, #28]
   3ca78:	bl	16e90 <close@plt>
   3ca7c:	cbz	x20, 3cb30 <append_history@@Base+0x34c>
   3ca80:	mov	x0, x20
   3ca84:	bl	17910 <unlink@plt>
   3ca88:	b	3cb30 <append_history@@Base+0x34c>
   3ca8c:	bl	177f0 <__errno_location@plt>
   3ca90:	ldr	w22, [x0]
   3ca94:	ldr	w24, [sp, #24]
   3ca98:	mov	x0, x23
   3ca9c:	bl	169f0 <xfree@plt>
   3caa0:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3caa4:	ldr	x23, [x23, #3504]
   3caa8:	ldr	w8, [sp, #20]
   3caac:	mov	w0, w21
   3cab0:	str	w8, [x23]
   3cab4:	bl	16e90 <close@plt>
   3cab8:	cbnz	w22, 3cac8 <append_history@@Base+0x2e4>
   3cabc:	tbz	w0, #31, 3cac8 <append_history@@Base+0x2e4>
   3cac0:	bl	177f0 <__errno_location@plt>
   3cac4:	ldr	w22, [x0]
   3cac8:	cbz	x20, 3cb08 <append_history@@Base+0x324>
   3cacc:	cbz	x19, 3cb08 <append_history@@Base+0x324>
   3cad0:	cbnz	w22, 3cb08 <append_history@@Base+0x324>
   3cad4:	add	x1, sp, #0xa4
   3cad8:	mov	w2, #0x1000                	// #4096
   3cadc:	mov	x0, x19
   3cae0:	add	x21, sp, #0xa4
   3cae4:	bl	16610 <readlink@plt>
   3cae8:	cmp	x0, #0x1
   3caec:	mov	x1, x19
   3caf0:	b.lt	3cafc <append_history@@Base+0x318>  // b.tstop
   3caf4:	add	x1, sp, #0xa4
   3caf8:	strb	wzr, [x21, x0]
   3cafc:	mov	x0, x20
   3cb00:	bl	173c0 <rename@plt>
   3cb04:	mov	w22, w0
   3cb08:	cbz	w22, 3cb20 <append_history@@Base+0x33c>
   3cb0c:	cbz	x20, 3cb18 <append_history@@Base+0x334>
   3cb10:	mov	x0, x20
   3cb14:	bl	17910 <unlink@plt>
   3cb18:	str	wzr, [x23]
   3cb1c:	b	3cb30 <append_history@@Base+0x34c>
   3cb20:	cbz	w24, 3cb30 <append_history@@Base+0x34c>
   3cb24:	ldp	w1, w2, [sp, #56]
   3cb28:	mov	x0, x19
   3cb2c:	bl	17880 <chown@plt>
   3cb30:	cbnz	x19, 3c954 <append_history@@Base+0x170>
   3cb34:	b	3c95c <append_history@@Base+0x178>

000000000003cb38 <write_history@@Base>:
   3cb38:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3cb3c:	ldr	x8, [x8, #3056]
   3cb40:	mov	w2, #0x1                   	// #1
   3cb44:	ldr	w1, [x8]
   3cb48:	b	3c7f8 <append_history@@Base+0x14>

000000000003cb4c <_hs_history_patsearch@@Base>:
   3cb4c:	stp	x29, x30, [sp, #-64]!
   3cb50:	str	x23, [sp, #16]
   3cb54:	stp	x22, x21, [sp, #32]
   3cb58:	stp	x20, x19, [sp, #48]
   3cb5c:	mov	x29, sp
   3cb60:	mov	w21, w2
   3cb64:	mov	w20, w1
   3cb68:	mov	x19, x0
   3cb6c:	bl	16440 <strlen@plt>
   3cb70:	mov	x22, x0
   3cb74:	sub	w8, w22, #0x1
   3cb78:	sxtw	x8, w8
   3cb7c:	ldrb	w9, [x19, x8]
   3cb80:	cmp	w9, #0x5c
   3cb84:	b.ne	3cbc8 <_hs_history_patsearch@@Base+0x7c>  // b.any
   3cb88:	cmp	w8, #0x1
   3cb8c:	b.lt	3cbc0 <_hs_history_patsearch@@Base+0x74>  // b.tstop
   3cb90:	sub	x10, x19, #0x1
   3cb94:	mov	w11, #0x1                   	// #1
   3cb98:	mov	w9, #0x1                   	// #1
   3cb9c:	ldrb	w12, [x10, x8]
   3cba0:	cmp	w12, #0x5c
   3cba4:	b.ne	3cbbc <_hs_history_patsearch@@Base+0x70>  // b.any
   3cba8:	sub	x8, x8, #0x1
   3cbac:	add	x12, x8, #0x1
   3cbb0:	cmp	x12, #0x1
   3cbb4:	sub	w9, w11, w9
   3cbb8:	b.gt	3cb9c <_hs_history_patsearch@@Base+0x50>
   3cbbc:	cbz	w9, 3cbc8 <_hs_history_patsearch@@Base+0x7c>
   3cbc0:	mov	w19, #0xffffffff            	// #-1
   3cbc4:	b	3cc44 <_hs_history_patsearch@@Base+0xf8>
   3cbc8:	add	x0, x22, #0x3
   3cbcc:	bl	16bf0 <xmalloc@plt>
   3cbd0:	mov	x23, x0
   3cbd4:	tbnz	w21, #0, 3cbe4 <_hs_history_patsearch@@Base+0x98>
   3cbd8:	ldrb	w8, [x19]
   3cbdc:	cmp	w8, #0x2a
   3cbe0:	b.ne	3cbec <_hs_history_patsearch@@Base+0xa0>  // b.any
   3cbe4:	mov	x8, xzr
   3cbe8:	b	3cbfc <_hs_history_patsearch@@Base+0xb0>
   3cbec:	mov	w8, #0x2a                  	// #42
   3cbf0:	add	x22, x22, #0x1
   3cbf4:	strb	w8, [x23]
   3cbf8:	mov	w8, #0x1                   	// #1
   3cbfc:	add	x0, x23, x8
   3cc00:	mov	x1, x19
   3cc04:	bl	17480 <strcpy@plt>
   3cc08:	add	x8, x22, x23
   3cc0c:	ldurb	w8, [x8, #-1]
   3cc10:	cmp	w8, #0x2a
   3cc14:	b.eq	3cc20 <_hs_history_patsearch@@Base+0xd4>  // b.none
   3cc18:	mov	w8, #0x2a                  	// #42
   3cc1c:	strh	w8, [x23, x22]
   3cc20:	orr	w2, w21, #0x2
   3cc24:	mov	x0, x23
   3cc28:	mov	w1, w20
   3cc2c:	bl	3cc5c <_hs_history_patsearch@@Base+0x110>
   3cc30:	cmp	x23, x19
   3cc34:	mov	w19, w0
   3cc38:	b.eq	3cc44 <_hs_history_patsearch@@Base+0xf8>  // b.none
   3cc3c:	mov	x0, x23
   3cc40:	bl	171b0 <free@plt>
   3cc44:	mov	w0, w19
   3cc48:	ldp	x20, x19, [sp, #48]
   3cc4c:	ldp	x22, x21, [sp, #32]
   3cc50:	ldr	x23, [sp, #16]
   3cc54:	ldp	x29, x30, [sp], #64
   3cc58:	ret
   3cc5c:	sub	sp, sp, #0x80
   3cc60:	stp	x29, x30, [sp, #32]
   3cc64:	stp	x28, x27, [sp, #48]
   3cc68:	stp	x26, x25, [sp, #64]
   3cc6c:	stp	x24, x23, [sp, #80]
   3cc70:	stp	x22, x21, [sp, #96]
   3cc74:	stp	x20, x19, [sp, #112]
   3cc78:	add	x29, sp, #0x20
   3cc7c:	cbz	x0, 3ceb0 <_hs_history_patsearch@@Base+0x364>
   3cc80:	ldrb	w8, [x0]
   3cc84:	mov	x21, x0
   3cc88:	cbz	w8, 3ceb0 <_hs_history_patsearch@@Base+0x364>
   3cc8c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3cc90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3cc94:	ldr	x8, [x8, #2536]
   3cc98:	ldr	x9, [x9, #3056]
   3cc9c:	cmp	w1, #0x0
   3cca0:	cset	w10, lt  // lt = tstop
   3cca4:	ldr	w8, [x8]
   3cca8:	ldr	w9, [x9]
   3ccac:	mov	w20, w1
   3ccb0:	mov	w25, #0xffffffff            	// #-1
   3ccb4:	cmp	w8, w9
   3ccb8:	cset	w11, lt  // lt = tstop
   3ccbc:	cbz	w9, 3ceb4 <_hs_history_patsearch@@Base+0x368>
   3ccc0:	orr	w10, w10, w11
   3ccc4:	cbz	w10, 3ceb4 <_hs_history_patsearch@@Base+0x368>
   3ccc8:	cmn	w20, #0x1
   3cccc:	sub	w10, w9, #0x1
   3ccd0:	ccmp	w8, w9, #0x8, le
   3ccd4:	mov	w19, w2
   3ccd8:	csel	w27, w8, w10, lt  // lt = tstop
   3ccdc:	bl	16fb0 <history_list@plt>
   3cce0:	mov	x22, x0
   3cce4:	mov	x0, x21
   3cce8:	bl	16440 <strlen@plt>
   3ccec:	tst	w27, w20
   3ccf0:	mov	w25, #0xffffffff            	// #-1
   3ccf4:	b.lt	3ceb4 <_hs_history_patsearch@@Base+0x368>  // b.tstop
   3ccf8:	mvn	w8, w20
   3ccfc:	sxtw	x9, w0
   3cd00:	cmp	w20, #0x0
   3cd04:	str	x9, [sp, #16]
   3cd08:	mov	w9, #0x1                   	// #1
   3cd0c:	lsr	w24, w8, #31
   3cd10:	cneg	w8, w25, ge  // ge = tcont
   3cd14:	mov	x23, x0
   3cd18:	stur	w8, [x29, #-4]
   3cd1c:	tst	w19, #0x2
   3cd20:	sub	x8, x9, x0
   3cd24:	str	x8, [sp]
   3cd28:	csinc	w8, w23, wzr, eq  // eq = none
   3cd2c:	str	w8, [sp, #12]
   3cd30:	b	3cd5c <_hs_history_patsearch@@Base+0x210>
   3cd34:	mov	x0, x21
   3cd38:	mov	x1, x26
   3cd3c:	mov	w2, wzr
   3cd40:	bl	17400 <fnmatch@plt>
   3cd44:	cbz	w0, 3ced8 <_hs_history_patsearch@@Base+0x38c>
   3cd48:	ldur	w8, [x29, #-4]
   3cd4c:	mov	w25, #0xffffffff            	// #-1
   3cd50:	add	w27, w27, w8
   3cd54:	tst	w27, w20
   3cd58:	b.lt	3ceb4 <_hs_history_patsearch@@Base+0x368>  // b.tstop
   3cd5c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3cd60:	ldr	x8, [x8, #3056]
   3cd64:	ldr	w8, [x8]
   3cd68:	cmp	w27, w8
   3cd6c:	cset	w8, eq  // eq = none
   3cd70:	and	w8, w8, w24
   3cd74:	tbnz	w8, #0, 3ceb0 <_hs_history_patsearch@@Base+0x364>
   3cd78:	ldr	x8, [x22, w27, sxtw #3]
   3cd7c:	ldr	x26, [x8]
   3cd80:	mov	x0, x26
   3cd84:	bl	16440 <strlen@plt>
   3cd88:	tbnz	w19, #1, 3cd94 <_hs_history_patsearch@@Base+0x248>
   3cd8c:	cmp	w0, w23
   3cd90:	b.lt	3cd48 <_hs_history_patsearch@@Base+0x1fc>  // b.tstop
   3cd94:	tbnz	w19, #0, 3ce04 <_hs_history_patsearch@@Base+0x2b8>
   3cd98:	tbnz	w20, #31, 3ce34 <_hs_history_patsearch@@Base+0x2e8>
   3cd9c:	cmp	w0, w23
   3cda0:	b.lt	3cd48 <_hs_history_patsearch@@Base+0x1fc>  // b.tstop
   3cda4:	ldr	x8, [sp]
   3cda8:	mov	x25, xzr
   3cdac:	add	w28, w8, w0
   3cdb0:	b	3cdd4 <_hs_history_patsearch@@Base+0x288>
   3cdb4:	add	x1, x26, x25
   3cdb8:	mov	x0, x21
   3cdbc:	mov	w2, wzr
   3cdc0:	bl	17400 <fnmatch@plt>
   3cdc4:	cbz	w0, 3cedc <_hs_history_patsearch@@Base+0x390>
   3cdc8:	add	x25, x25, #0x1
   3cdcc:	cmp	x28, x25
   3cdd0:	b.eq	3cd48 <_hs_history_patsearch@@Base+0x1fc>  // b.none
   3cdd4:	tbnz	w19, #1, 3cdb4 <_hs_history_patsearch@@Base+0x268>
   3cdd8:	cbz	w23, 3cedc <_hs_history_patsearch@@Base+0x390>
   3cddc:	add	x1, x26, x25
   3cde0:	ldrb	w8, [x21]
   3cde4:	ldrb	w9, [x1]
   3cde8:	cmp	w8, w9
   3cdec:	b.ne	3cdc8 <_hs_history_patsearch@@Base+0x27c>  // b.any
   3cdf0:	ldr	x2, [sp, #16]
   3cdf4:	mov	x0, x21
   3cdf8:	bl	16b40 <strncmp@plt>
   3cdfc:	cbnz	w0, 3cdc8 <_hs_history_patsearch@@Base+0x27c>
   3ce00:	b	3cedc <_hs_history_patsearch@@Base+0x390>
   3ce04:	tbnz	w19, #1, 3cd34 <_hs_history_patsearch@@Base+0x1e8>
   3ce08:	cbz	w23, 3ced8 <_hs_history_patsearch@@Base+0x38c>
   3ce0c:	ldrb	w8, [x21]
   3ce10:	ldrb	w9, [x26]
   3ce14:	cmp	w8, w9
   3ce18:	b.ne	3cd48 <_hs_history_patsearch@@Base+0x1fc>  // b.any
   3ce1c:	ldr	x2, [sp, #16]
   3ce20:	mov	x0, x21
   3ce24:	mov	x1, x26
   3ce28:	bl	16b40 <strncmp@plt>
   3ce2c:	cbnz	w0, 3cd48 <_hs_history_patsearch@@Base+0x1fc>
   3ce30:	b	3ced8 <_hs_history_patsearch@@Base+0x38c>
   3ce34:	ldr	w8, [sp, #12]
   3ce38:	cmp	w8, w0
   3ce3c:	b.gt	3cd48 <_hs_history_patsearch@@Base+0x1fc>
   3ce40:	ldr	w8, [sp, #12]
   3ce44:	sub	w25, w0, w8
   3ce48:	lsl	x28, x25, #32
   3ce4c:	b	3ce7c <_hs_history_patsearch@@Base+0x330>
   3ce50:	add	x1, x26, x25
   3ce54:	mov	x0, x21
   3ce58:	mov	w2, wzr
   3ce5c:	bl	17400 <fnmatch@plt>
   3ce60:	cbz	w0, 3cedc <_hs_history_patsearch@@Base+0x390>
   3ce64:	mov	w8, w25
   3ce68:	cmp	w8, #0x0
   3ce6c:	mov	x8, #0xffffffff00000000    	// #-4294967296
   3ce70:	sub	x25, x25, #0x1
   3ce74:	add	x28, x28, x8
   3ce78:	b.le	3cd48 <_hs_history_patsearch@@Base+0x1fc>
   3ce7c:	tbnz	w19, #1, 3ce50 <_hs_history_patsearch@@Base+0x304>
   3ce80:	cbz	w23, 3cedc <_hs_history_patsearch@@Base+0x390>
   3ce84:	add	x1, x26, x28, asr #32
   3ce88:	ldrb	w8, [x21]
   3ce8c:	ldrb	w9, [x1]
   3ce90:	cmp	w8, w9
   3ce94:	b.ne	3ce64 <_hs_history_patsearch@@Base+0x318>  // b.any
   3ce98:	ldr	x2, [sp, #16]
   3ce9c:	mov	x0, x21
   3cea0:	bl	16b40 <strncmp@plt>
   3cea4:	mov	w8, w25
   3cea8:	cbnz	w0, 3ce68 <_hs_history_patsearch@@Base+0x31c>
   3ceac:	b	3cedc <_hs_history_patsearch@@Base+0x390>
   3ceb0:	mov	w25, #0xffffffff            	// #-1
   3ceb4:	mov	w0, w25
   3ceb8:	ldp	x20, x19, [sp, #112]
   3cebc:	ldp	x22, x21, [sp, #96]
   3cec0:	ldp	x24, x23, [sp, #80]
   3cec4:	ldp	x26, x25, [sp, #64]
   3cec8:	ldp	x28, x27, [sp, #48]
   3cecc:	ldp	x29, x30, [sp, #32]
   3ced0:	add	sp, sp, #0x80
   3ced4:	ret
   3ced8:	mov	w25, wzr
   3cedc:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3cee0:	ldr	x8, [x8, #2536]
   3cee4:	str	w27, [x8]
   3cee8:	b	3ceb4 <_hs_history_patsearch@@Base+0x368>

000000000003ceec <history_search@@Base>:
   3ceec:	mov	w2, wzr
   3cef0:	b	3cc5c <_hs_history_patsearch@@Base+0x110>

000000000003cef4 <history_search_prefix@@Base>:
   3cef4:	mov	w2, #0x1                   	// #1
   3cef8:	b	3cc5c <_hs_history_patsearch@@Base+0x110>

000000000003cefc <history_search_pos@@Base>:
   3cefc:	stp	x29, x30, [sp, #-48]!
   3cf00:	stp	x22, x21, [sp, #16]
   3cf04:	stp	x20, x19, [sp, #32]
   3cf08:	mov	x29, sp
   3cf0c:	mov	w20, w2
   3cf10:	mov	w21, w1
   3cf14:	mov	x22, x0
   3cf18:	bl	165a0 <where_history@plt>
   3cf1c:	mov	w19, w0
   3cf20:	mov	w0, w20
   3cf24:	bl	173a0 <history_set_pos@plt>
   3cf28:	mov	x0, x22
   3cf2c:	mov	w1, w21
   3cf30:	mov	w2, wzr
   3cf34:	bl	3cc5c <_hs_history_patsearch@@Base+0x110>
   3cf38:	cmn	w0, #0x1
   3cf3c:	b.eq	3cf4c <history_search_pos@@Base+0x50>  // b.none
   3cf40:	bl	165a0 <where_history@plt>
   3cf44:	mov	w20, w0
   3cf48:	b	3cf50 <history_search_pos@@Base+0x54>
   3cf4c:	mov	w20, #0xffffffff            	// #-1
   3cf50:	mov	w0, w19
   3cf54:	bl	173a0 <history_set_pos@plt>
   3cf58:	mov	w0, w20
   3cf5c:	ldp	x20, x19, [sp, #32]
   3cf60:	ldp	x22, x21, [sp, #16]
   3cf64:	ldp	x29, x30, [sp], #48
   3cf68:	ret

000000000003cf6c <sh_single_quote@@Base>:
   3cf6c:	stp	x29, x30, [sp, #-32]!
   3cf70:	str	x19, [sp, #16]
   3cf74:	mov	x29, sp
   3cf78:	mov	x19, x0
   3cf7c:	bl	16440 <strlen@plt>
   3cf80:	mov	w8, #0x3                   	// #3
   3cf84:	bfi	x8, x0, #2, #62
   3cf88:	mov	x0, x8
   3cf8c:	bl	16bf0 <xmalloc@plt>
   3cf90:	mov	w8, #0x27                  	// #39
   3cf94:	mov	x9, x0
   3cf98:	strb	w8, [x9], #1
   3cf9c:	cbz	x19, 3cff0 <sh_single_quote@@Base+0x84>
   3cfa0:	ldrb	w13, [x19]
   3cfa4:	cbz	w13, 3cff0 <sh_single_quote@@Base+0x84>
   3cfa8:	add	x10, x19, #0x1
   3cfac:	mov	w11, #0x275c                	// #10076
   3cfb0:	mov	w12, #0x27                  	// #39
   3cfb4:	b	3cfd0 <sh_single_quote@@Base+0x64>
   3cfb8:	add	x13, x9, #0x4
   3cfbc:	sturh	w11, [x9, #1]
   3cfc0:	strb	w12, [x9, #3]
   3cfc4:	mov	x9, x13
   3cfc8:	ldrb	w13, [x10], #1
   3cfcc:	cbz	w13, 3cff0 <sh_single_quote@@Base+0x84>
   3cfd0:	mov	x14, x9
   3cfd4:	and	w15, w13, #0xff
   3cfd8:	cmp	w15, #0x27
   3cfdc:	strb	w13, [x14], #1
   3cfe0:	b.eq	3cfb8 <sh_single_quote@@Base+0x4c>  // b.none
   3cfe4:	mov	x9, x14
   3cfe8:	ldrb	w13, [x10], #1
   3cfec:	cbnz	w13, 3cfd0 <sh_single_quote@@Base+0x64>
   3cff0:	ldr	x19, [sp, #16]
   3cff4:	strh	w8, [x9]
   3cff8:	ldp	x29, x30, [sp], #32
   3cffc:	ret

000000000003d000 <sh_set_lines_and_columns@@Base>:
   3d000:	stp	x29, x30, [sp, #-48]!
   3d004:	str	x21, [sp, #16]
   3d008:	stp	x20, x19, [sp, #32]
   3d00c:	adrp	x20, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3d010:	adrp	x21, 3e000 <_rl_print_color_indicator@@Base+0xec>
   3d014:	add	x20, x20, #0x128
   3d018:	add	x21, x21, #0xc63
   3d01c:	mov	w19, w1
   3d020:	mov	w2, w0
   3d024:	mov	x0, x20
   3d028:	mov	x1, x21
   3d02c:	mov	x29, sp
   3d030:	bl	16650 <sprintf@plt>
   3d034:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   3d038:	add	x0, x0, #0xeba
   3d03c:	mov	w2, #0x1                   	// #1
   3d040:	mov	x1, x20
   3d044:	bl	16600 <setenv@plt>
   3d048:	mov	x0, x20
   3d04c:	mov	x1, x21
   3d050:	mov	w2, w19
   3d054:	bl	16650 <sprintf@plt>
   3d058:	mov	x1, x20
   3d05c:	ldp	x20, x19, [sp, #32]
   3d060:	ldr	x21, [sp, #16]
   3d064:	adrp	x0, 3f000 <filename_completion_function@@Base+0x580>
   3d068:	add	x0, x0, #0x595
   3d06c:	mov	w2, #0x1                   	// #1
   3d070:	ldp	x29, x30, [sp], #48
   3d074:	b	16600 <setenv@plt>

000000000003d078 <sh_get_env_value@@Base>:
   3d078:	b	17840 <getenv@plt>

000000000003d07c <sh_get_home_dir@@Base>:
   3d07c:	stp	x29, x30, [sp, #-32]!
   3d080:	stp	x20, x19, [sp, #16]
   3d084:	adrp	x20, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3d088:	ldr	x0, [x20, #312]
   3d08c:	mov	x29, sp
   3d090:	cbnz	x0, 3d0cc <sh_get_home_dir@@Base+0x50>
   3d094:	str	xzr, [x20, #312]
   3d098:	bl	16660 <getuid@plt>
   3d09c:	bl	170b0 <getpwuid@plt>
   3d0a0:	cbz	x0, 3d0c4 <sh_get_home_dir@@Base+0x48>
   3d0a4:	mov	x19, x0
   3d0a8:	ldr	x0, [x0, #32]
   3d0ac:	bl	16440 <strlen@plt>
   3d0b0:	add	x0, x0, #0x1
   3d0b4:	bl	16bf0 <xmalloc@plt>
   3d0b8:	ldr	x1, [x19, #32]
   3d0bc:	bl	17480 <strcpy@plt>
   3d0c0:	str	x0, [x20, #312]
   3d0c4:	bl	174c0 <endpwent@plt>
   3d0c8:	ldr	x0, [x20, #312]
   3d0cc:	ldp	x20, x19, [sp, #16]
   3d0d0:	ldp	x29, x30, [sp], #32
   3d0d4:	ret

000000000003d0d8 <sh_unset_nodelay_mode@@Base>:
   3d0d8:	stp	x29, x30, [sp, #-32]!
   3d0dc:	mov	w1, #0x3                   	// #3
   3d0e0:	mov	w2, wzr
   3d0e4:	str	x19, [sp, #16]
   3d0e8:	mov	x29, sp
   3d0ec:	mov	w19, w0
   3d0f0:	bl	17410 <fcntl@plt>
   3d0f4:	tbnz	w0, #31, 3d104 <sh_unset_nodelay_mode@@Base+0x2c>
   3d0f8:	tbnz	w0, #11, 3d114 <sh_unset_nodelay_mode@@Base+0x3c>
   3d0fc:	mov	w0, wzr
   3d100:	b	3d108 <sh_unset_nodelay_mode@@Base+0x30>
   3d104:	mov	w0, #0xffffffff            	// #-1
   3d108:	ldr	x19, [sp, #16]
   3d10c:	ldp	x29, x30, [sp], #32
   3d110:	ret
   3d114:	and	w2, w0, #0xfffff7ff
   3d118:	mov	w0, w19
   3d11c:	ldr	x19, [sp, #16]
   3d120:	mov	w1, #0x4                   	// #4
   3d124:	ldp	x29, x30, [sp], #32
   3d128:	b	17410 <fcntl@plt>

000000000003d12c <_rl_find_prev_mbchar_internal@@Base>:
   3d12c:	sub	sp, sp, #0x60
   3d130:	stp	x29, x30, [sp, #16]
   3d134:	stp	x26, x25, [sp, #32]
   3d138:	stp	x24, x23, [sp, #48]
   3d13c:	stp	x22, x21, [sp, #64]
   3d140:	stp	x20, x19, [sp, #80]
   3d144:	add	x29, sp, #0x10
   3d148:	mov	w19, w2
   3d14c:	mov	w20, w1
   3d150:	mov	x21, x0
   3d154:	str	xzr, [sp, #8]
   3d158:	bl	16440 <strlen@plt>
   3d15c:	tbnz	w20, #31, 3d214 <_rl_find_prev_mbchar_internal@@Base+0xe8>
   3d160:	mov	x22, x0
   3d164:	cmp	w22, w20
   3d168:	b.ge	3d174 <_rl_find_prev_mbchar_internal@@Base+0x48>  // b.tcont
   3d16c:	mov	w23, w22
   3d170:	b	3d218 <_rl_find_prev_mbchar_internal@@Base+0xec>
   3d174:	cmp	w20, #0x1
   3d178:	b.lt	3d214 <_rl_find_prev_mbchar_internal@@Base+0xe8>  // b.tstop
   3d17c:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d180:	ldr	x26, [x26, #3088]
   3d184:	mov	w25, wzr
   3d188:	mov	w23, wzr
   3d18c:	b	3d1a8 <_rl_find_prev_mbchar_internal@@Base+0x7c>
   3d190:	str	xzr, [sp, #8]
   3d194:	mov	w23, w25
   3d198:	mov	w24, #0x1                   	// #1
   3d19c:	add	w25, w25, w24
   3d1a0:	cmp	w25, w20
   3d1a4:	b.ge	3d218 <_rl_find_prev_mbchar_internal@@Base+0xec>  // b.tcont
   3d1a8:	ldr	w9, [x26]
   3d1ac:	sxtw	x8, w25
   3d1b0:	cbz	w9, 3d1cc <_rl_find_prev_mbchar_internal@@Base+0xa0>
   3d1b4:	ldrb	w9, [x21, x8]
   3d1b8:	tbnz	w9, #7, 3d1cc <_rl_find_prev_mbchar_internal@@Base+0xa0>
   3d1bc:	str	w9, [sp, #4]
   3d1c0:	str	xzr, [sp, #8]
   3d1c4:	mov	w24, #0x1                   	// #1
   3d1c8:	b	3d1f4 <_rl_find_prev_mbchar_internal@@Base+0xc8>
   3d1cc:	add	x1, x21, x8
   3d1d0:	sub	w8, w22, w25
   3d1d4:	sxtw	x2, w8
   3d1d8:	add	x0, sp, #0x4
   3d1dc:	add	x3, sp, #0x8
   3d1e0:	bl	16370 <mbrtowc@plt>
   3d1e4:	cmn	x0, #0x2
   3d1e8:	b.cs	3d190 <_rl_find_prev_mbchar_internal@@Base+0x64>  // b.hs, b.nlast
   3d1ec:	mov	x24, x0
   3d1f0:	cbz	x0, 3d218 <_rl_find_prev_mbchar_internal@@Base+0xec>
   3d1f4:	cbz	w19, 3d20c <_rl_find_prev_mbchar_internal@@Base+0xe0>
   3d1f8:	ldr	w0, [sp, #4]
   3d1fc:	bl	3d238 <_rl_find_prev_mbchar_internal@@Base+0x10c>
   3d200:	cmp	w0, #0x0
   3d204:	csel	w23, w23, w25, eq  // eq = none
   3d208:	b	3d19c <_rl_find_prev_mbchar_internal@@Base+0x70>
   3d20c:	mov	w23, w25
   3d210:	b	3d19c <_rl_find_prev_mbchar_internal@@Base+0x70>
   3d214:	mov	w23, wzr
   3d218:	mov	w0, w23
   3d21c:	ldp	x20, x19, [sp, #80]
   3d220:	ldp	x22, x21, [sp, #64]
   3d224:	ldp	x24, x23, [sp, #48]
   3d228:	ldp	x26, x25, [sp, #32]
   3d22c:	ldp	x29, x30, [sp, #16]
   3d230:	add	sp, sp, #0x60
   3d234:	ret
   3d238:	sub	w8, w0, #0x20
   3d23c:	cmp	w8, #0x5e
   3d240:	b.hi	3d264 <_rl_find_prev_mbchar_internal@@Base+0x138>  // b.pmore
   3d244:	adrp	x9, 40000 <filename_completion_function@@Base+0x1580>
   3d248:	add	x9, x9, #0x11f
   3d24c:	adr	x10, 3d25c <_rl_find_prev_mbchar_internal@@Base+0x130>
   3d250:	ldrb	w11, [x9, x8]
   3d254:	add	x10, x10, x11, lsl #2
   3d258:	br	x10
   3d25c:	mov	w0, #0x1                   	// #1
   3d260:	ret
   3d264:	b	169a0 <wcwidth@plt>

000000000003d268 <_rl_get_char_len@@Base>:
   3d268:	stp	x29, x30, [sp, #-48]!
   3d26c:	str	x21, [sp, #16]
   3d270:	stp	x20, x19, [sp, #32]
   3d274:	mov	x29, sp
   3d278:	mov	x19, x1
   3d27c:	mov	x20, x0
   3d280:	bl	16440 <strlen@plt>
   3d284:	mov	x21, x0
   3d288:	cbz	x0, 3d2b4 <_rl_get_char_len@@Base+0x4c>
   3d28c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d290:	ldr	x8, [x8, #3088]
   3d294:	ldr	w8, [x8]
   3d298:	cbz	w8, 3d2b4 <_rl_get_char_len@@Base+0x4c>
   3d29c:	ldrsb	w8, [x20]
   3d2a0:	tbnz	w8, #31, 3d2b4 <_rl_get_char_len@@Base+0x4c>
   3d2a4:	cmp	w8, #0x0
   3d2a8:	cset	w0, ne  // ne = any
   3d2ac:	cbnz	x0, 3d2f4 <_rl_get_char_len@@Base+0x8c>
   3d2b0:	b	3d320 <_rl_get_char_len@@Base+0xb8>
   3d2b4:	bl	171f0 <__ctype_get_mb_cur_max@plt>
   3d2b8:	sxtw	x8, w0
   3d2bc:	cmp	x21, x8
   3d2c0:	csel	x2, x21, x8, cc  // cc = lo, ul, last
   3d2c4:	cbz	x19, 3d2e0 <_rl_get_char_len@@Base+0x78>
   3d2c8:	mov	x0, xzr
   3d2cc:	mov	x1, x20
   3d2d0:	mov	x3, x19
   3d2d4:	bl	16370 <mbrtowc@plt>
   3d2d8:	cbnz	x0, 3d2f4 <_rl_get_char_len@@Base+0x8c>
   3d2dc:	b	3d320 <_rl_get_char_len@@Base+0xb8>
   3d2e0:	mov	x0, x20
   3d2e4:	mov	x1, x2
   3d2e8:	mov	x2, xzr
   3d2ec:	bl	17000 <__mbrlen@plt>
   3d2f0:	cbz	x0, 3d320 <_rl_get_char_len@@Base+0xb8>
   3d2f4:	cmn	x0, #0x1
   3d2f8:	b.eq	3d314 <_rl_get_char_len@@Base+0xac>  // b.none
   3d2fc:	cmn	x0, #0x2
   3d300:	b.ne	3d320 <_rl_get_char_len@@Base+0xb8>  // b.any
   3d304:	cbz	x19, 3d30c <_rl_get_char_len@@Base+0xa4>
   3d308:	str	xzr, [x19]
   3d30c:	mov	w0, #0xfffffffe            	// #-2
   3d310:	b	3d320 <_rl_get_char_len@@Base+0xb8>
   3d314:	cbz	x19, 3d31c <_rl_get_char_len@@Base+0xb4>
   3d318:	str	xzr, [x19]
   3d31c:	mov	w0, #0xffffffff            	// #-1
   3d320:	ldp	x20, x19, [sp, #32]
   3d324:	ldr	x21, [sp, #16]
   3d328:	ldp	x29, x30, [sp], #48
   3d32c:	ret

000000000003d330 <_rl_compare_chars@@Base>:
   3d330:	stp	x29, x30, [sp, #-80]!
   3d334:	stp	x26, x25, [sp, #16]
   3d338:	sxtw	x25, w1
   3d33c:	stp	x22, x21, [sp, #48]
   3d340:	add	x22, x0, x25
   3d344:	stp	x20, x19, [sp, #64]
   3d348:	mov	x20, x0
   3d34c:	mov	x0, x22
   3d350:	mov	x1, x2
   3d354:	stp	x24, x23, [sp, #32]
   3d358:	mov	x29, sp
   3d35c:	mov	x23, x5
   3d360:	mov	w24, w4
   3d364:	mov	x19, x3
   3d368:	bl	174b0 <_rl_get_char_len@plt>
   3d36c:	cmp	w0, #0x1
   3d370:	b.lt	3d3fc <_rl_compare_chars@@Base+0xcc>  // b.tstop
   3d374:	sxtw	x26, w24
   3d378:	add	x24, x19, x26
   3d37c:	mov	w21, w0
   3d380:	mov	x0, x24
   3d384:	mov	x1, x23
   3d388:	bl	174b0 <_rl_get_char_len@plt>
   3d38c:	mov	w8, w0
   3d390:	cmp	w0, #0x1
   3d394:	mov	w0, wzr
   3d398:	b.lt	3d400 <_rl_compare_chars@@Base+0xd0>  // b.tstop
   3d39c:	cmp	w21, w8
   3d3a0:	b.ne	3d400 <_rl_compare_chars@@Base+0xd0>  // b.any
   3d3a4:	ldrb	w8, [x22]
   3d3a8:	ldrb	w9, [x24]
   3d3ac:	cmp	w8, w9
   3d3b0:	b.ne	3d3fc <_rl_compare_chars@@Base+0xcc>  // b.any
   3d3b4:	cmp	w21, #0x2
   3d3b8:	b.lt	3d3f4 <_rl_compare_chars@@Base+0xc4>  // b.tstop
   3d3bc:	mov	w10, w21
   3d3c0:	add	x8, x25, x20
   3d3c4:	add	x9, x26, x19
   3d3c8:	add	x8, x8, #0x1
   3d3cc:	add	x9, x9, #0x1
   3d3d0:	sub	x10, x10, #0x1
   3d3d4:	ldrb	w11, [x8]
   3d3d8:	ldrb	w12, [x9]
   3d3dc:	cmp	w11, w12
   3d3e0:	b.ne	3d3fc <_rl_compare_chars@@Base+0xcc>  // b.any
   3d3e4:	add	x8, x8, #0x1
   3d3e8:	subs	x10, x10, #0x1
   3d3ec:	add	x9, x9, #0x1
   3d3f0:	b.ne	3d3d4 <_rl_compare_chars@@Base+0xa4>  // b.any
   3d3f4:	mov	w0, #0x1                   	// #1
   3d3f8:	b	3d400 <_rl_compare_chars@@Base+0xd0>
   3d3fc:	mov	w0, wzr
   3d400:	ldp	x20, x19, [sp, #64]
   3d404:	ldp	x22, x21, [sp, #48]
   3d408:	ldp	x24, x23, [sp, #32]
   3d40c:	ldp	x26, x25, [sp, #16]
   3d410:	ldp	x29, x30, [sp], #80
   3d414:	ret

000000000003d418 <_rl_adjust_point@@Base>:
   3d418:	stp	x29, x30, [sp, #-64]!
   3d41c:	stp	x24, x23, [sp, #16]
   3d420:	stp	x22, x21, [sp, #32]
   3d424:	stp	x20, x19, [sp, #48]
   3d428:	mov	x29, sp
   3d42c:	mov	x20, x2
   3d430:	mov	w19, w1
   3d434:	mov	x21, x0
   3d438:	bl	16440 <strlen@plt>
   3d43c:	mov	x22, x0
   3d440:	mov	w0, #0xffffffff            	// #-1
   3d444:	tbnz	w19, #31, 3d4ec <_rl_adjust_point@@Base+0xd4>
   3d448:	cmp	w22, w19
   3d44c:	b.lt	3d4ec <_rl_adjust_point@@Base+0xd4>  // b.tstop
   3d450:	cmp	w19, #0x1
   3d454:	b.lt	3d4e4 <_rl_adjust_point@@Base+0xcc>  // b.tstop
   3d458:	adrp	x23, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d45c:	ldr	x23, [x23, #3088]
   3d460:	mov	w8, wzr
   3d464:	b	3d478 <_rl_adjust_point@@Base+0x60>
   3d468:	mov	w0, #0x1                   	// #1
   3d46c:	add	w8, w24, w0
   3d470:	cmp	w8, w19
   3d474:	b.ge	3d4e8 <_rl_adjust_point@@Base+0xd0>  // b.tcont
   3d478:	ldr	w9, [x23]
   3d47c:	sxtw	x24, w8
   3d480:	cbz	w9, 3d48c <_rl_adjust_point@@Base+0x74>
   3d484:	ldrsb	w8, [x21, x24]
   3d488:	tbz	w8, #31, 3d468 <_rl_adjust_point@@Base+0x50>
   3d48c:	sub	w8, w22, w24
   3d490:	add	x1, x21, x24
   3d494:	sxtw	x2, w8
   3d498:	cbz	x20, 3d4c0 <_rl_adjust_point@@Base+0xa8>
   3d49c:	mov	x0, xzr
   3d4a0:	mov	x3, x20
   3d4a4:	bl	16370 <mbrtowc@plt>
   3d4a8:	cmn	x0, #0x2
   3d4ac:	b.cc	3d4d8 <_rl_adjust_point@@Base+0xc0>  // b.lo, b.ul, b.last
   3d4b0:	add	w8, w24, #0x1
   3d4b4:	cbz	x20, 3d470 <_rl_adjust_point@@Base+0x58>
   3d4b8:	str	xzr, [x20]
   3d4bc:	b	3d470 <_rl_adjust_point@@Base+0x58>
   3d4c0:	mov	x0, x1
   3d4c4:	mov	x1, x2
   3d4c8:	mov	x2, xzr
   3d4cc:	bl	17000 <__mbrlen@plt>
   3d4d0:	cmn	x0, #0x2
   3d4d4:	b.cs	3d4b0 <_rl_adjust_point@@Base+0x98>  // b.hs, b.nlast
   3d4d8:	cbnz	x0, 3d46c <_rl_adjust_point@@Base+0x54>
   3d4dc:	add	w8, w24, #0x1
   3d4e0:	b	3d470 <_rl_adjust_point@@Base+0x58>
   3d4e4:	mov	w8, wzr
   3d4e8:	sub	w0, w8, w19
   3d4ec:	ldp	x20, x19, [sp, #48]
   3d4f0:	ldp	x22, x21, [sp, #32]
   3d4f4:	ldp	x24, x23, [sp, #16]
   3d4f8:	ldp	x29, x30, [sp], #64
   3d4fc:	ret

000000000003d500 <_rl_is_mbchar_matched@@Base>:
   3d500:	sub	w8, w2, w1
   3d504:	cmp	w8, w4
   3d508:	b.ge	3d514 <_rl_is_mbchar_matched@@Base+0x14>  // b.tcont
   3d50c:	mov	w0, wzr
   3d510:	ret
   3d514:	cmp	w4, #0x1
   3d518:	b.lt	3d544 <_rl_is_mbchar_matched@@Base+0x44>  // b.tstop
   3d51c:	mov	w8, w4
   3d520:	add	x9, x0, w1, sxtw
   3d524:	ldrb	w10, [x9]
   3d528:	ldrb	w11, [x3]
   3d52c:	cmp	w10, w11
   3d530:	b.ne	3d50c <_rl_is_mbchar_matched@@Base+0xc>  // b.any
   3d534:	add	x3, x3, #0x1
   3d538:	subs	x8, x8, #0x1
   3d53c:	add	x9, x9, #0x1
   3d540:	b.ne	3d524 <_rl_is_mbchar_matched@@Base+0x24>  // b.any
   3d544:	mov	w0, #0x1                   	// #1
   3d548:	ret

000000000003d54c <_rl_char_value@@Base>:
   3d54c:	sub	sp, sp, #0x40
   3d550:	stp	x29, x30, [sp, #16]
   3d554:	str	x21, [sp, #32]
   3d558:	stp	x20, x19, [sp, #48]
   3d55c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d560:	ldr	x8, [x8, #1896]
   3d564:	mov	w19, w1
   3d568:	mov	x20, x0
   3d56c:	add	x29, sp, #0x10
   3d570:	ldr	w8, [x8]
   3d574:	cbz	w8, 3d590 <_rl_char_value@@Base+0x44>
   3d578:	ldrb	w0, [x20, w19, sxtw]
   3d57c:	ldp	x20, x19, [sp, #48]
   3d580:	ldr	x21, [sp, #32]
   3d584:	ldp	x29, x30, [sp, #16]
   3d588:	add	sp, sp, #0x40
   3d58c:	ret
   3d590:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d594:	ldr	x8, [x8, #3088]
   3d598:	ldr	w8, [x8]
   3d59c:	cbz	w8, 3d5a8 <_rl_char_value@@Base+0x5c>
   3d5a0:	ldrb	w0, [x20, w19, sxtw]
   3d5a4:	tbz	w0, #7, 3d57c <_rl_char_value@@Base+0x30>
   3d5a8:	mov	x0, x20
   3d5ac:	bl	16440 <strlen@plt>
   3d5b0:	sub	w8, w0, #0x1
   3d5b4:	cmp	w8, w19
   3d5b8:	b.le	3d578 <_rl_char_value@@Base+0x2c>
   3d5bc:	cmp	w0, w19
   3d5c0:	sxtw	x21, w19
   3d5c4:	b.ge	3d5d0 <_rl_char_value@@Base+0x84>  // b.tcont
   3d5c8:	add	x0, x20, x21
   3d5cc:	bl	16440 <strlen@plt>
   3d5d0:	add	x20, x20, x21
   3d5d4:	sub	w8, w0, w19
   3d5d8:	sxtw	x2, w8
   3d5dc:	add	x0, x29, #0x1c
   3d5e0:	add	x3, sp, #0x8
   3d5e4:	mov	x1, x20
   3d5e8:	str	xzr, [sp, #8]
   3d5ec:	bl	16370 <mbrtowc@plt>
   3d5f0:	sub	x8, x0, #0x1
   3d5f4:	cmn	x8, #0x3
   3d5f8:	b.cc	3d604 <_rl_char_value@@Base+0xb8>  // b.lo, b.ul, b.last
   3d5fc:	ldrb	w0, [x20]
   3d600:	b	3d57c <_rl_char_value@@Base+0x30>
   3d604:	ldr	w0, [x29, #28]
   3d608:	b	3d57c <_rl_char_value@@Base+0x30>

000000000003d60c <_rl_find_next_mbchar@@Base>:
   3d60c:	sub	sp, sp, #0x60
   3d610:	stp	x26, x25, [sp, #32]
   3d614:	cmp	w2, #0x1
   3d618:	bic	w25, w1, w1, asr #31
   3d61c:	stp	x29, x30, [sp, #16]
   3d620:	stp	x24, x23, [sp, #48]
   3d624:	stp	x22, x21, [sp, #64]
   3d628:	stp	x20, x19, [sp, #80]
   3d62c:	add	x29, sp, #0x10
   3d630:	str	xzr, [sp, #8]
   3d634:	b.lt	3d774 <_rl_find_next_mbchar@@Base+0x168>  // b.tstop
   3d638:	mov	w20, w3
   3d63c:	mov	w22, w2
   3d640:	mov	w21, w1
   3d644:	mov	x19, x0
   3d648:	bl	16440 <strlen@plt>
   3d64c:	mov	x23, x0
   3d650:	cmp	w25, w23
   3d654:	b.gt	3d76c <_rl_find_next_mbchar@@Base+0x160>
   3d658:	adrp	x24, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d65c:	ldr	x24, [x24, #3088]
   3d660:	cmp	w21, #0x1
   3d664:	mov	w21, wzr
   3d668:	b.ge	3d71c <_rl_find_next_mbchar@@Base+0x110>  // b.tcont
   3d66c:	sub	w8, w21, w25
   3d670:	cmn	w8, #0x1
   3d674:	b.eq	3d76c <_rl_find_next_mbchar@@Base+0x160>  // b.none
   3d678:	cmp	w8, #0x0
   3d67c:	cset	w8, gt
   3d680:	sub	w25, w22, w8
   3d684:	mov	w23, w21
   3d688:	subs	w26, w25, #0x1
   3d68c:	b.lt	3d79c <_rl_find_next_mbchar@@Base+0x190>  // b.tstop
   3d690:	add	x22, x19, w23, sxtw
   3d694:	mov	x0, x22
   3d698:	bl	16440 <strlen@plt>
   3d69c:	cbz	x0, 3d798 <_rl_find_next_mbchar@@Base+0x18c>
   3d6a0:	ldr	w8, [x24]
   3d6a4:	mov	x2, x0
   3d6a8:	cbz	w8, 3d6c4 <_rl_find_next_mbchar@@Base+0xb8>
   3d6ac:	ldrb	w8, [x22]
   3d6b0:	tbnz	w8, #7, 3d6c4 <_rl_find_next_mbchar@@Base+0xb8>
   3d6b4:	mov	w0, #0x1                   	// #1
   3d6b8:	str	w8, [sp, #4]
   3d6bc:	str	xzr, [sp, #8]
   3d6c0:	b	3d6e0 <_rl_find_next_mbchar@@Base+0xd4>
   3d6c4:	add	x0, sp, #0x4
   3d6c8:	add	x3, sp, #0x8
   3d6cc:	mov	x1, x22
   3d6d0:	bl	16370 <mbrtowc@plt>
   3d6d4:	cmn	x0, #0x2
   3d6d8:	b.cs	3d6f8 <_rl_find_next_mbchar@@Base+0xec>  // b.hs, b.nlast
   3d6dc:	cbz	x0, 3d798 <_rl_find_next_mbchar@@Base+0x18c>
   3d6e0:	add	w23, w23, w0
   3d6e4:	cbz	w20, 3d700 <_rl_find_next_mbchar@@Base+0xf4>
   3d6e8:	ldr	w0, [sp, #4]
   3d6ec:	bl	3d238 <_rl_find_prev_mbchar_internal@@Base+0x10c>
   3d6f0:	cbz	w0, 3d688 <_rl_find_next_mbchar@@Base+0x7c>
   3d6f4:	b	3d700 <_rl_find_next_mbchar@@Base+0xf4>
   3d6f8:	add	w23, w23, #0x1
   3d6fc:	str	xzr, [sp, #8]
   3d700:	mov	w25, w26
   3d704:	mov	w21, w23
   3d708:	b	3d684 <_rl_find_next_mbchar@@Base+0x78>
   3d70c:	add	w21, w21, #0x1
   3d710:	str	xzr, [sp, #8]
   3d714:	cmp	w21, w25
   3d718:	b.ge	3d66c <_rl_find_next_mbchar@@Base+0x60>  // b.tcont
   3d71c:	ldr	w8, [x24]
   3d720:	sxtw	x21, w21
   3d724:	cbz	w8, 3d738 <_rl_find_next_mbchar@@Base+0x12c>
   3d728:	ldrsb	w8, [x19, x21]
   3d72c:	tbnz	w8, #31, 3d738 <_rl_find_next_mbchar@@Base+0x12c>
   3d730:	mov	w0, #0x1                   	// #1
   3d734:	b	3d75c <_rl_find_next_mbchar@@Base+0x150>
   3d738:	sub	w8, w23, w21
   3d73c:	add	x1, x19, x21
   3d740:	sxtw	x2, w8
   3d744:	add	x3, sp, #0x8
   3d748:	mov	x0, xzr
   3d74c:	bl	16370 <mbrtowc@plt>
   3d750:	cmn	x0, #0x2
   3d754:	b.cs	3d70c <_rl_find_next_mbchar@@Base+0x100>  // b.hs, b.nlast
   3d758:	cbz	x0, 3d764 <_rl_find_next_mbchar@@Base+0x158>
   3d75c:	add	w21, w21, w0
   3d760:	b	3d714 <_rl_find_next_mbchar@@Base+0x108>
   3d764:	add	w21, w21, #0x1
   3d768:	b	3d714 <_rl_find_next_mbchar@@Base+0x108>
   3d76c:	add	w21, w25, #0x1
   3d770:	b	3d778 <_rl_find_next_mbchar@@Base+0x16c>
   3d774:	mov	w21, w25
   3d778:	mov	w0, w21
   3d77c:	ldp	x20, x19, [sp, #80]
   3d780:	ldp	x22, x21, [sp, #64]
   3d784:	ldp	x24, x23, [sp, #48]
   3d788:	ldp	x26, x25, [sp, #32]
   3d78c:	ldp	x29, x30, [sp, #16]
   3d790:	add	sp, sp, #0x60
   3d794:	ret
   3d798:	mov	w21, w23
   3d79c:	cbz	w20, 3d778 <_rl_find_next_mbchar@@Base+0x16c>
   3d7a0:	add	x20, x19, w21, sxtw
   3d7a4:	mov	x0, x20
   3d7a8:	bl	16440 <strlen@plt>
   3d7ac:	mov	x2, x0
   3d7b0:	add	x0, sp, #0x4
   3d7b4:	add	x3, sp, #0x8
   3d7b8:	mov	x1, x20
   3d7bc:	bl	16370 <mbrtowc@plt>
   3d7c0:	add	x8, x0, #0x2
   3d7c4:	cmp	x8, #0x3
   3d7c8:	b.cc	3d778 <_rl_find_next_mbchar@@Base+0x16c>  // b.lo, b.ul, b.last
   3d7cc:	mov	x20, x0
   3d7d0:	ldr	w0, [sp, #4]
   3d7d4:	bl	3d238 <_rl_find_prev_mbchar_internal@@Base+0x10c>
   3d7d8:	cbnz	w0, 3d778 <_rl_find_next_mbchar@@Base+0x16c>
   3d7dc:	add	w21, w21, w20
   3d7e0:	b	3d7a0 <_rl_find_next_mbchar@@Base+0x194>

000000000003d7e4 <_rl_find_prev_mbchar@@Base>:
   3d7e4:	b	16c90 <_rl_find_prev_mbchar_internal@plt>

000000000003d7e8 <tilde_expand@@Base>:
   3d7e8:	sub	sp, sp, #0x80
   3d7ec:	mov	w1, #0x7e                  	// #126
   3d7f0:	stp	x29, x30, [sp, #32]
   3d7f4:	stp	x28, x27, [sp, #48]
   3d7f8:	stp	x26, x25, [sp, #64]
   3d7fc:	stp	x24, x23, [sp, #80]
   3d800:	stp	x22, x21, [sp, #96]
   3d804:	stp	x20, x19, [sp, #112]
   3d808:	add	x29, sp, #0x20
   3d80c:	mov	x20, x0
   3d810:	bl	17380 <strchr@plt>
   3d814:	mov	x19, x0
   3d818:	mov	x0, x20
   3d81c:	bl	16440 <strlen@plt>
   3d820:	add	w8, w0, #0x10
   3d824:	cmp	x19, #0x0
   3d828:	csinc	w24, w8, w0, ne  // ne = any
   3d82c:	sxtw	x0, w24
   3d830:	bl	16bf0 <xmalloc@plt>
   3d834:	mov	x25, x0
   3d838:	mov	w26, wzr
   3d83c:	b	3d854 <tilde_expand@@Base+0x6c>
   3d840:	add	x0, x25, x28
   3d844:	mov	x1, x21
   3d848:	bl	17480 <strcpy@plt>
   3d84c:	mov	x0, x21
   3d850:	bl	169f0 <xfree@plt>
   3d854:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d858:	ldr	x8, [x8, #2960]
   3d85c:	mov	x0, x20
   3d860:	ldr	x27, [x8]
   3d864:	bl	16440 <strlen@plt>
   3d868:	ldrb	w9, [x20]
   3d86c:	mov	w8, wzr
   3d870:	cbz	w9, 3d90c <tilde_expand@@Base+0x124>
   3d874:	cmp	w9, #0x7e
   3d878:	b.eq	3d90c <tilde_expand@@Base+0x124>  // b.none
   3d87c:	mov	x21, x0
   3d880:	cbz	x27, 3d8f4 <tilde_expand@@Base+0x10c>
   3d884:	cmp	w21, #0x1
   3d888:	b.lt	3d8f4 <tilde_expand@@Base+0x10c>  // b.tstop
   3d88c:	str	x25, [sp, #16]
   3d890:	stur	x24, [x29, #-8]
   3d894:	ldr	x25, [x27], #8
   3d898:	mov	x19, xzr
   3d89c:	and	x8, x21, #0xffffffff
   3d8a0:	str	x8, [sp, #8]
   3d8a4:	b	3d8b8 <tilde_expand@@Base+0xd0>
   3d8a8:	ldr	x8, [sp, #8]
   3d8ac:	add	x19, x19, #0x1
   3d8b0:	cmp	x19, x8
   3d8b4:	b.eq	3da74 <tilde_expand@@Base+0x28c>  // b.none
   3d8b8:	cbz	x25, 3d8a8 <tilde_expand@@Base+0xc0>
   3d8bc:	add	x22, x20, x19
   3d8c0:	mov	x28, x27
   3d8c4:	mov	x23, x25
   3d8c8:	mov	x0, x23
   3d8cc:	bl	16440 <strlen@plt>
   3d8d0:	mov	x24, x0
   3d8d4:	mov	x0, x22
   3d8d8:	mov	x1, x23
   3d8dc:	mov	x2, x24
   3d8e0:	bl	16b40 <strncmp@plt>
   3d8e4:	cbz	w0, 3d8fc <tilde_expand@@Base+0x114>
   3d8e8:	ldr	x23, [x28], #8
   3d8ec:	cbnz	x23, 3d8c8 <tilde_expand@@Base+0xe0>
   3d8f0:	b	3d8a8 <tilde_expand@@Base+0xc0>
   3d8f4:	mov	w8, w21
   3d8f8:	b	3d90c <tilde_expand@@Base+0x124>
   3d8fc:	add	w8, w19, w24
   3d900:	sub	w8, w8, #0x1
   3d904:	ldur	x24, [x29, #-8]
   3d908:	ldr	x25, [sp, #16]
   3d90c:	sxtw	x21, w8
   3d910:	sxtw	x19, w26
   3d914:	add	x28, x21, x19
   3d918:	cmp	w28, w24
   3d91c:	b.lt	3d93c <tilde_expand@@Base+0x154>  // b.tstop
   3d920:	add	w8, w24, w21
   3d924:	add	w24, w8, #0x14
   3d928:	add	w8, w8, #0x15
   3d92c:	sxtw	x1, w8
   3d930:	mov	x0, x25
   3d934:	bl	16a50 <xrealloc@plt>
   3d938:	mov	x25, x0
   3d93c:	add	x0, x25, x19
   3d940:	mov	x1, x20
   3d944:	mov	x2, x21
   3d948:	bl	17730 <strncpy@plt>
   3d94c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3d950:	ldr	x8, [x8, #3856]
   3d954:	add	x20, x20, x21
   3d958:	mov	x0, x20
   3d95c:	ldr	x26, [x8]
   3d960:	bl	16440 <strlen@plt>
   3d964:	mov	x27, x0
   3d968:	cmp	w27, #0x1
   3d96c:	b.lt	3d9f4 <tilde_expand@@Base+0x20c>  // b.tstop
   3d970:	stp	x28, x25, [sp, #8]
   3d974:	mov	x22, xzr
   3d978:	and	x25, x27, #0xffffffff
   3d97c:	add	x28, x26, #0x8
   3d980:	stur	x24, [x29, #-8]
   3d984:	b	3d994 <tilde_expand@@Base+0x1ac>
   3d988:	add	x22, x22, #0x1
   3d98c:	cmp	x22, x25
   3d990:	b.eq	3d9e0 <tilde_expand@@Base+0x1f8>  // b.none
   3d994:	add	x23, x20, x22
   3d998:	ldrb	w8, [x23]
   3d99c:	cmp	w8, #0x2f
   3d9a0:	b.eq	3d9dc <tilde_expand@@Base+0x1f4>  // b.none
   3d9a4:	cbz	x26, 3d988 <tilde_expand@@Base+0x1a0>
   3d9a8:	ldr	x24, [x26]
   3d9ac:	cbz	x24, 3d988 <tilde_expand@@Base+0x1a0>
   3d9b0:	mov	x19, x28
   3d9b4:	mov	x0, x24
   3d9b8:	bl	16440 <strlen@plt>
   3d9bc:	mov	x2, x0
   3d9c0:	mov	x0, x23
   3d9c4:	mov	x1, x24
   3d9c8:	bl	16b40 <strncmp@plt>
   3d9cc:	cbz	w0, 3d9dc <tilde_expand@@Base+0x1f4>
   3d9d0:	ldr	x24, [x19], #8
   3d9d4:	cbnz	x24, 3d9b4 <tilde_expand@@Base+0x1cc>
   3d9d8:	b	3d988 <tilde_expand@@Base+0x1a0>
   3d9dc:	mov	w27, w22
   3d9e0:	ldur	x24, [x29, #-8]
   3d9e4:	ldp	x28, x25, [sp, #8]
   3d9e8:	orr	w8, w27, w21
   3d9ec:	cbnz	w8, 3da00 <tilde_expand@@Base+0x218>
   3d9f0:	b	3da7c <tilde_expand@@Base+0x294>
   3d9f4:	mov	w27, wzr
   3d9f8:	orr	w8, w27, w21
   3d9fc:	cbz	w8, 3da7c <tilde_expand@@Base+0x294>
   3da00:	add	w8, w27, #0x1
   3da04:	sxtw	x0, w8
   3da08:	bl	16bf0 <xmalloc@plt>
   3da0c:	sxtw	x22, w27
   3da10:	mov	x1, x20
   3da14:	mov	x2, x22
   3da18:	mov	x21, x0
   3da1c:	bl	17730 <strncpy@plt>
   3da20:	strb	wzr, [x0, x22]
   3da24:	bl	16950 <tilde_expand_word@plt>
   3da28:	cbz	x0, 3da3c <tilde_expand@@Base+0x254>
   3da2c:	mov	x23, x0
   3da30:	mov	x0, x21
   3da34:	bl	169f0 <xfree@plt>
   3da38:	mov	x21, x23
   3da3c:	mov	x0, x21
   3da40:	add	x20, x20, x22
   3da44:	bl	16440 <strlen@plt>
   3da48:	add	w26, w28, w0
   3da4c:	cmp	w26, w24
   3da50:	b.lt	3d840 <tilde_expand@@Base+0x58>  // b.tstop
   3da54:	add	w8, w24, w0
   3da58:	add	w24, w8, #0x14
   3da5c:	add	w8, w8, #0x15
   3da60:	sxtw	x1, w8
   3da64:	mov	x0, x25
   3da68:	bl	16a50 <xrealloc@plt>
   3da6c:	mov	x25, x0
   3da70:	b	3d840 <tilde_expand@@Base+0x58>
   3da74:	mov	w8, w21
   3da78:	b	3d904 <tilde_expand@@Base+0x11c>
   3da7c:	strb	wzr, [x25, x28]
   3da80:	mov	x0, x25
   3da84:	ldp	x20, x19, [sp, #112]
   3da88:	ldp	x22, x21, [sp, #96]
   3da8c:	ldp	x24, x23, [sp, #80]
   3da90:	ldp	x26, x25, [sp, #64]
   3da94:	ldp	x28, x27, [sp, #48]
   3da98:	ldp	x29, x30, [sp, #32]
   3da9c:	add	sp, sp, #0x80
   3daa0:	ret

000000000003daa4 <tilde_expand_word@@Base>:
   3daa4:	stp	x29, x30, [sp, #-64]!
   3daa8:	stp	x24, x23, [sp, #16]
   3daac:	stp	x22, x21, [sp, #32]
   3dab0:	stp	x20, x19, [sp, #48]
   3dab4:	mov	x29, sp
   3dab8:	cbz	x0, 3db18 <tilde_expand_word@@Base+0x74>
   3dabc:	ldrb	w8, [x0]
   3dac0:	mov	x20, x0
   3dac4:	cmp	w8, #0x7e
   3dac8:	b.ne	3db20 <tilde_expand_word@@Base+0x7c>  // b.any
   3dacc:	mov	x19, x20
   3dad0:	ldrb	w8, [x19, #1]!
   3dad4:	cmp	w8, #0x2f
   3dad8:	b.eq	3dae0 <tilde_expand_word@@Base+0x3c>  // b.none
   3dadc:	cbnz	w8, 3db48 <tilde_expand_word@@Base+0xa4>
   3dae0:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3dae4:	add	x0, x0, #0x10c
   3dae8:	bl	163a0 <sh_get_env_value@plt>
   3daec:	mov	x20, x0
   3daf0:	cbnz	x0, 3db00 <tilde_expand_word@@Base+0x5c>
   3daf4:	bl	17260 <sh_get_home_dir@plt>
   3daf8:	mov	x20, x0
   3dafc:	cbz	x0, 3dbd0 <tilde_expand_word@@Base+0x12c>
   3db00:	ldrb	w8, [x20]
   3db04:	cbz	w8, 3dbd0 <tilde_expand_word@@Base+0x12c>
   3db08:	mov	x0, x20
   3db0c:	bl	16440 <strlen@plt>
   3db10:	mov	x22, x0
   3db14:	b	3dbd4 <tilde_expand_word@@Base+0x130>
   3db18:	mov	x21, xzr
   3db1c:	b	3dd78 <tilde_expand_word@@Base+0x2d4>
   3db20:	mov	x0, x20
   3db24:	bl	16440 <strlen@plt>
   3db28:	add	x0, x0, #0x1
   3db2c:	bl	16bf0 <xmalloc@plt>
   3db30:	mov	x1, x20
   3db34:	ldp	x20, x19, [sp, #48]
   3db38:	ldp	x22, x21, [sp, #32]
   3db3c:	ldp	x24, x23, [sp, #16]
   3db40:	ldp	x29, x30, [sp], #64
   3db44:	b	17480 <strcpy@plt>
   3db48:	mov	x0, x20
   3db4c:	bl	16440 <strlen@plt>
   3db50:	bl	16bf0 <xmalloc@plt>
   3db54:	mov	x19, x0
   3db58:	mov	x9, xzr
   3db5c:	mov	x8, xzr
   3db60:	mov	x10, #0x100000000           	// #4294967296
   3db64:	add	x11, x20, x9
   3db68:	ldrb	w11, [x11, #1]
   3db6c:	cbz	w11, 3db88 <tilde_expand_word@@Base+0xe4>
   3db70:	cmp	w11, #0x2f
   3db74:	b.eq	3db88 <tilde_expand_word@@Base+0xe4>  // b.none
   3db78:	strb	w11, [x19, x9]
   3db7c:	add	x8, x8, x10
   3db80:	add	x9, x9, #0x1
   3db84:	b	3db64 <tilde_expand_word@@Base+0xc0>
   3db88:	asr	x9, x8, #32
   3db8c:	strb	wzr, [x19, x9]
   3db90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3db94:	ldr	x9, [x9, #2832]
   3db98:	mov	x10, #0x100000000           	// #4294967296
   3db9c:	add	x21, x8, x10
   3dba0:	ldr	x9, [x9]
   3dba4:	cbz	x9, 3dc10 <tilde_expand_word@@Base+0x16c>
   3dba8:	mov	x0, x19
   3dbac:	blr	x9
   3dbb0:	cbz	x0, 3dc10 <tilde_expand_word@@Base+0x16c>
   3dbb4:	ldrb	w8, [x0]
   3dbb8:	mov	x22, x0
   3dbbc:	cbz	w8, 3dcb0 <tilde_expand_word@@Base+0x20c>
   3dbc0:	mov	x0, x22
   3dbc4:	bl	16440 <strlen@plt>
   3dbc8:	mov	x23, x0
   3dbcc:	b	3dcb4 <tilde_expand_word@@Base+0x210>
   3dbd0:	mov	w22, wzr
   3dbd4:	mov	x0, x19
   3dbd8:	bl	16440 <strlen@plt>
   3dbdc:	add	w8, w22, w0
   3dbe0:	add	w8, w8, #0x1
   3dbe4:	sxtw	x0, w8
   3dbe8:	bl	16bf0 <xmalloc@plt>
   3dbec:	mov	x21, x0
   3dbf0:	cbz	w22, 3dc00 <tilde_expand_word@@Base+0x15c>
   3dbf4:	mov	x0, x21
   3dbf8:	mov	x1, x20
   3dbfc:	bl	17480 <strcpy@plt>
   3dc00:	add	x0, x21, w22, sxtw
   3dc04:	mov	x1, x19
   3dc08:	bl	17480 <strcpy@plt>
   3dc0c:	b	3dd78 <tilde_expand_word@@Base+0x2d4>
   3dc10:	mov	x0, x19
   3dc14:	bl	16c10 <getpwnam@plt>
   3dc18:	cbz	x0, 3dc78 <tilde_expand_word@@Base+0x1d4>
   3dc1c:	ldr	x22, [x0, #32]
   3dc20:	cbz	x22, 3dc3c <tilde_expand_word@@Base+0x198>
   3dc24:	ldrb	w8, [x22]
   3dc28:	cbz	w8, 3dc3c <tilde_expand_word@@Base+0x198>
   3dc2c:	mov	x0, x22
   3dc30:	bl	16440 <strlen@plt>
   3dc34:	mov	x23, x0
   3dc38:	b	3dc40 <tilde_expand_word@@Base+0x19c>
   3dc3c:	mov	w23, wzr
   3dc40:	add	x20, x20, x21, asr #32
   3dc44:	mov	x0, x20
   3dc48:	bl	16440 <strlen@plt>
   3dc4c:	add	w8, w23, w0
   3dc50:	add	w8, w8, #0x1
   3dc54:	sxtw	x0, w8
   3dc58:	bl	16bf0 <xmalloc@plt>
   3dc5c:	mov	x21, x0
   3dc60:	cbz	w23, 3dc70 <tilde_expand_word@@Base+0x1cc>
   3dc64:	mov	x0, x21
   3dc68:	mov	x1, x22
   3dc6c:	bl	17480 <strcpy@plt>
   3dc70:	add	x0, x21, w23, sxtw
   3dc74:	b	3dd64 <tilde_expand_word@@Base+0x2c0>
   3dc78:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3dc7c:	ldr	x8, [x8, #2936]
   3dc80:	ldr	x8, [x8]
   3dc84:	cbz	x8, 3dd50 <tilde_expand_word@@Base+0x2ac>
   3dc88:	mov	x0, x19
   3dc8c:	blr	x8
   3dc90:	cbz	x0, 3dd50 <tilde_expand_word@@Base+0x2ac>
   3dc94:	ldrb	w8, [x0]
   3dc98:	mov	x22, x0
   3dc9c:	cbz	w8, 3dd04 <tilde_expand_word@@Base+0x260>
   3dca0:	mov	x0, x22
   3dca4:	bl	16440 <strlen@plt>
   3dca8:	mov	x23, x0
   3dcac:	b	3dd08 <tilde_expand_word@@Base+0x264>
   3dcb0:	mov	w23, wzr
   3dcb4:	add	x20, x20, x21, asr #32
   3dcb8:	mov	x0, x20
   3dcbc:	bl	16440 <strlen@plt>
   3dcc0:	add	w8, w23, w0
   3dcc4:	add	w8, w8, #0x1
   3dcc8:	sxtw	x0, w8
   3dccc:	bl	16bf0 <xmalloc@plt>
   3dcd0:	mov	x21, x0
   3dcd4:	cbz	w23, 3dce4 <tilde_expand_word@@Base+0x240>
   3dcd8:	mov	x0, x21
   3dcdc:	mov	x1, x22
   3dce0:	bl	17480 <strcpy@plt>
   3dce4:	add	x0, x21, w23, sxtw
   3dce8:	mov	x1, x20
   3dcec:	bl	17480 <strcpy@plt>
   3dcf0:	mov	x0, x19
   3dcf4:	bl	169f0 <xfree@plt>
   3dcf8:	mov	x0, x22
   3dcfc:	bl	169f0 <xfree@plt>
   3dd00:	b	3dd78 <tilde_expand_word@@Base+0x2d4>
   3dd04:	mov	w23, wzr
   3dd08:	add	x24, x20, x21, asr #32
   3dd0c:	mov	x0, x24
   3dd10:	bl	16440 <strlen@plt>
   3dd14:	add	w8, w23, w0
   3dd18:	add	w8, w8, #0x1
   3dd1c:	sxtw	x0, w8
   3dd20:	bl	16bf0 <xmalloc@plt>
   3dd24:	mov	x21, x0
   3dd28:	cbz	w23, 3dd38 <tilde_expand_word@@Base+0x294>
   3dd2c:	mov	x0, x21
   3dd30:	mov	x1, x22
   3dd34:	bl	17480 <strcpy@plt>
   3dd38:	add	x0, x21, w23, sxtw
   3dd3c:	mov	x1, x24
   3dd40:	bl	17480 <strcpy@plt>
   3dd44:	mov	x0, x22
   3dd48:	bl	169f0 <xfree@plt>
   3dd4c:	cbnz	x21, 3dd6c <tilde_expand_word@@Base+0x2c8>
   3dd50:	mov	x0, x20
   3dd54:	bl	16440 <strlen@plt>
   3dd58:	add	x0, x0, #0x1
   3dd5c:	bl	16bf0 <xmalloc@plt>
   3dd60:	mov	x21, x0
   3dd64:	mov	x1, x20
   3dd68:	bl	17480 <strcpy@plt>
   3dd6c:	mov	x0, x19
   3dd70:	bl	169f0 <xfree@plt>
   3dd74:	bl	174c0 <endpwent@plt>
   3dd78:	mov	x0, x21
   3dd7c:	ldp	x20, x19, [sp, #48]
   3dd80:	ldp	x22, x21, [sp, #32]
   3dd84:	ldp	x24, x23, [sp, #16]
   3dd88:	ldp	x29, x30, [sp], #64
   3dd8c:	ret

000000000003dd90 <_rl_put_indicator@@Base>:
   3dd90:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3dd94:	ldp	x1, x8, [x0]
   3dd98:	ldr	x9, [x9, #1928]
   3dd9c:	mov	w2, #0x1                   	// #1
   3dda0:	mov	x0, x8
   3dda4:	ldr	x3, [x9]
   3dda8:	b	173e0 <fwrite@plt>

000000000003ddac <_rl_set_normal_color@@Base>:
   3ddac:	stp	x29, x30, [sp, #-32]!
   3ddb0:	stp	x20, x19, [sp, #16]
   3ddb4:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3ddb8:	ldr	x19, [x19, #2992]
   3ddbc:	mov	x29, sp
   3ddc0:	ldr	x8, [x19, #64]
   3ddc4:	cbz	x8, 3dde8 <_rl_set_normal_color@@Base+0x3c>
   3ddc8:	ldr	x0, [x19, #72]
   3ddcc:	cmp	x8, #0x2
   3ddd0:	b.eq	3ddf4 <_rl_set_normal_color@@Base+0x48>  // b.none
   3ddd4:	cmp	x8, #0x1
   3ddd8:	b.ne	3de08 <_rl_set_normal_color@@Base+0x5c>  // b.any
   3dddc:	ldrb	w8, [x0]
   3dde0:	cmp	w8, #0x30
   3dde4:	b.ne	3de08 <_rl_set_normal_color@@Base+0x5c>  // b.any
   3dde8:	ldp	x20, x19, [sp, #16]
   3ddec:	ldp	x29, x30, [sp], #32
   3ddf0:	ret
   3ddf4:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3ddf8:	add	x1, x1, #0x197
   3ddfc:	mov	w2, #0x2                   	// #2
   3de00:	bl	16b40 <strncmp@plt>
   3de04:	cbz	w0, 3dde8 <_rl_set_normal_color@@Base+0x3c>
   3de08:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3de0c:	ldp	x1, x0, [x19]
   3de10:	ldr	x20, [x20, #1928]
   3de14:	mov	w2, #0x1                   	// #1
   3de18:	ldr	x3, [x20]
   3de1c:	bl	173e0 <fwrite@plt>
   3de20:	ldp	x1, x0, [x19, #64]
   3de24:	ldr	x3, [x20]
   3de28:	mov	w2, #0x1                   	// #1
   3de2c:	bl	173e0 <fwrite@plt>
   3de30:	ldp	x1, x0, [x19, #16]
   3de34:	ldr	x3, [x20]
   3de38:	ldp	x20, x19, [sp, #16]
   3de3c:	mov	w2, #0x1                   	// #1
   3de40:	ldp	x29, x30, [sp], #32
   3de44:	b	173e0 <fwrite@plt>

000000000003de48 <_rl_print_prefix_color@@Base>:
   3de48:	stp	x29, x30, [sp, #-32]!
   3de4c:	stp	x20, x19, [sp, #16]
   3de50:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3de54:	ldr	x19, [x19, #2992]
   3de58:	mov	x29, sp
   3de5c:	ldr	x8, [x19, #152]
   3de60:	cbz	x8, 3de98 <_rl_print_prefix_color@@Base+0x50>
   3de64:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3de68:	ldr	x8, [x19, #64]
   3de6c:	ldr	x20, [x20, #1928]
   3de70:	cbz	x8, 3ded4 <_rl_print_prefix_color@@Base+0x8c>
   3de74:	ldr	x0, [x19, #72]
   3de78:	cmp	x8, #0x2
   3de7c:	b.eq	3dea0 <_rl_print_prefix_color@@Base+0x58>  // b.none
   3de80:	cmp	x8, #0x1
   3de84:	b.ne	3deb4 <_rl_print_prefix_color@@Base+0x6c>  // b.any
   3de88:	ldrb	w8, [x0]
   3de8c:	cmp	w8, #0x30
   3de90:	b.ne	3deb4 <_rl_print_prefix_color@@Base+0x6c>  // b.any
   3de94:	b	3ded4 <_rl_print_prefix_color@@Base+0x8c>
   3de98:	mov	w0, #0x1                   	// #1
   3de9c:	b	3df08 <_rl_print_prefix_color@@Base+0xc0>
   3dea0:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3dea4:	add	x1, x1, #0x197
   3dea8:	mov	w2, #0x2                   	// #2
   3deac:	bl	16b40 <strncmp@plt>
   3deb0:	cbz	w0, 3ded4 <_rl_print_prefix_color@@Base+0x8c>
   3deb4:	ldp	x1, x0, [x19]
   3deb8:	ldr	x3, [x20]
   3debc:	mov	w2, #0x1                   	// #1
   3dec0:	bl	173e0 <fwrite@plt>
   3dec4:	ldp	x1, x0, [x19, #16]
   3dec8:	ldr	x3, [x20]
   3decc:	mov	w2, #0x1                   	// #1
   3ded0:	bl	173e0 <fwrite@plt>
   3ded4:	ldp	x1, x0, [x19]
   3ded8:	ldr	x3, [x20]
   3dedc:	mov	w2, #0x1                   	// #1
   3dee0:	bl	173e0 <fwrite@plt>
   3dee4:	ldp	x1, x0, [x19, #144]
   3dee8:	ldr	x3, [x20]
   3deec:	mov	w2, #0x1                   	// #1
   3def0:	bl	173e0 <fwrite@plt>
   3def4:	ldp	x1, x0, [x19, #16]
   3def8:	ldr	x3, [x20]
   3defc:	mov	w2, #0x1                   	// #1
   3df00:	bl	173e0 <fwrite@plt>
   3df04:	mov	w0, wzr
   3df08:	ldp	x20, x19, [sp, #16]
   3df0c:	ldp	x29, x30, [sp], #32
   3df10:	ret

000000000003df14 <_rl_print_color_indicator@@Base>:
   3df14:	sub	sp, sp, #0x150
   3df18:	stp	x29, x30, [sp, #272]
   3df1c:	stp	x28, x23, [sp, #288]
   3df20:	stp	x22, x21, [sp, #304]
   3df24:	stp	x20, x19, [sp, #320]
   3df28:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3df2c:	ldr	x20, [x20, #3728]
   3df30:	add	x29, sp, #0x110
   3df34:	mov	x19, x0
   3df38:	stur	xzr, [x29, #-8]
   3df3c:	ldr	x8, [x20]
   3df40:	cbz	x8, 3df70 <_rl_print_color_indicator@@Base+0x5c>
   3df44:	mov	x0, x19
   3df48:	bl	16440 <strlen@plt>
   3df4c:	add	x0, x0, #0x1
   3df50:	bl	16bf0 <xmalloc@plt>
   3df54:	mov	x1, x19
   3df58:	bl	17480 <strcpy@plt>
   3df5c:	ldr	x8, [x20]
   3df60:	stur	x0, [x29, #-8]
   3df64:	sub	x0, x29, #0x8
   3df68:	blr	x8
   3df6c:	ldur	x19, [x29, #-8]
   3df70:	add	x2, sp, #0x88
   3df74:	mov	w0, wzr
   3df78:	mov	x1, x19
   3df7c:	bl	174e0 <__lxstat@plt>
   3df80:	adrp	x21, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3df84:	ldr	x21, [x21, #2992]
   3df88:	cbz	w0, 3dfa0 <_rl_print_color_indicator@@Base+0x8c>
   3df8c:	ldr	x8, [x21, #200]
   3df90:	cbz	x8, 3e15c <_rl_print_color_indicator@@Base+0x248>
   3df94:	mov	x22, xzr
   3df98:	mov	w23, #0xc                   	// #12
   3df9c:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3dfa0:	ldr	w20, [sp, #152]
   3dfa4:	and	w8, w20, #0xf000
   3dfa8:	cmp	w8, #0xa, lsl #12
   3dfac:	b.ne	3dfec <_rl_print_color_indicator@@Base+0xd8>  // b.any
   3dfb0:	add	x2, sp, #0x8
   3dfb4:	mov	w0, wzr
   3dfb8:	mov	x1, x19
   3dfbc:	bl	17850 <__xstat@plt>
   3dfc0:	cbz	w0, 3dfd0 <_rl_print_color_indicator@@Base+0xbc>
   3dfc4:	ldr	x8, [x21, #216]
   3dfc8:	cbnz	x8, 3e02c <_rl_print_color_indicator@@Base+0x118>
   3dfcc:	b	3dfec <_rl_print_color_indicator@@Base+0xd8>
   3dfd0:	ldr	x0, [x21, #120]
   3dfd4:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3dfd8:	add	x1, x1, #0x190
   3dfdc:	mov	w2, #0x6                   	// #6
   3dfe0:	bl	16b40 <strncmp@plt>
   3dfe4:	cbnz	w0, 3dfec <_rl_print_color_indicator@@Base+0xd8>
   3dfe8:	ldr	w20, [sp, #24]
   3dfec:	and	w8, w20, #0xf000
   3dff0:	sub	w8, w8, #0x1, lsl #12
   3dff4:	lsr	w8, w8, #12
   3dff8:	cmp	w8, #0xb
   3dffc:	b.hi	3e02c <_rl_print_color_indicator@@Base+0x118>  // b.pmore
   3e000:	adrp	x9, 40000 <filename_completion_function@@Base+0x1580>
   3e004:	add	x9, x9, #0x184
   3e008:	adr	x10, 3e020 <_rl_print_color_indicator@@Base+0x10c>
   3e00c:	ldrb	w11, [x9, x8]
   3e010:	add	x10, x10, x11, lsl #2
   3e014:	mov	x22, xzr
   3e018:	mov	w23, #0x7                   	// #7
   3e01c:	br	x10
   3e020:	mov	x22, xzr
   3e024:	mov	w23, #0x8                   	// #8
   3e028:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e02c:	mov	x22, xzr
   3e030:	mov	w23, #0xd                   	// #13
   3e034:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e038:	mov	x22, xzr
   3e03c:	mov	w23, #0xb                   	// #11
   3e040:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e044:	tst	w20, #0x200
   3e048:	cset	w19, eq  // eq = none
   3e04c:	tbz	w20, #1, 3e07c <_rl_print_color_indicator@@Base+0x168>
   3e050:	tbnz	w19, #0, 3e07c <_rl_print_color_indicator@@Base+0x168>
   3e054:	ldr	x8, [x21, #320]
   3e058:	cbz	x8, 3e07c <_rl_print_color_indicator@@Base+0x168>
   3e05c:	ldr	x0, [x21, #328]
   3e060:	cmp	x8, #0x2
   3e064:	b.eq	3e22c <_rl_print_color_indicator@@Base+0x318>  // b.none
   3e068:	cmp	x8, #0x1
   3e06c:	b.ne	3e240 <_rl_print_color_indicator@@Base+0x32c>  // b.any
   3e070:	ldrb	w8, [x0]
   3e074:	cmp	w8, #0x30
   3e078:	b.ne	3e240 <_rl_print_color_indicator@@Base+0x32c>  // b.any
   3e07c:	tbnz	w20, #1, 3e1c0 <_rl_print_color_indicator@@Base+0x2ac>
   3e080:	tbz	w20, #9, 3e0ac <_rl_print_color_indicator@@Base+0x198>
   3e084:	ldr	x8, [x21, #288]
   3e088:	cbz	x8, 3e0ac <_rl_print_color_indicator@@Base+0x198>
   3e08c:	ldr	x0, [x21, #296]
   3e090:	cmp	x8, #0x2
   3e094:	b.eq	3e2cc <_rl_print_color_indicator@@Base+0x3b8>  // b.none
   3e098:	cmp	x8, #0x1
   3e09c:	b.ne	3e2e0 <_rl_print_color_indicator@@Base+0x3cc>  // b.any
   3e0a0:	ldrb	w8, [x0]
   3e0a4:	cmp	w8, #0x30
   3e0a8:	b.ne	3e2e0 <_rl_print_color_indicator@@Base+0x3cc>  // b.any
   3e0ac:	mov	x22, xzr
   3e0b0:	mov	w23, #0x6                   	// #6
   3e0b4:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e0b8:	mov	x22, xzr
   3e0bc:	mov	w23, #0xa                   	// #10
   3e0c0:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e0c4:	tbz	w20, #11, 3e0f0 <_rl_print_color_indicator@@Base+0x1dc>
   3e0c8:	ldr	x8, [x21, #256]
   3e0cc:	cbz	x8, 3e0f0 <_rl_print_color_indicator@@Base+0x1dc>
   3e0d0:	ldr	x0, [x21, #264]
   3e0d4:	cmp	x8, #0x2
   3e0d8:	b.eq	3e24c <_rl_print_color_indicator@@Base+0x338>  // b.none
   3e0dc:	cmp	x8, #0x1
   3e0e0:	b.ne	3e260 <_rl_print_color_indicator@@Base+0x34c>  // b.any
   3e0e4:	ldrb	w8, [x0]
   3e0e8:	cmp	w8, #0x30
   3e0ec:	b.ne	3e260 <_rl_print_color_indicator@@Base+0x34c>  // b.any
   3e0f0:	tbnz	w20, #10, 3e200 <_rl_print_color_indicator@@Base+0x2ec>
   3e0f4:	mov	w8, #0x49                  	// #73
   3e0f8:	tst	w20, w8
   3e0fc:	b.eq	3e128 <_rl_print_color_indicator@@Base+0x214>  // b.none
   3e100:	ldr	x8, [x21, #224]
   3e104:	cbz	x8, 3e128 <_rl_print_color_indicator@@Base+0x214>
   3e108:	ldr	x0, [x21, #232]
   3e10c:	cmp	x8, #0x2
   3e110:	b.eq	3e2ec <_rl_print_color_indicator@@Base+0x3d8>  // b.none
   3e114:	cmp	x8, #0x1
   3e118:	b.ne	3e300 <_rl_print_color_indicator@@Base+0x3ec>  // b.any
   3e11c:	ldrb	w8, [x0]
   3e120:	cmp	w8, #0x30
   3e124:	b.ne	3e300 <_rl_print_color_indicator@@Base+0x3ec>  // b.any
   3e128:	ldr	w8, [sp, #156]
   3e12c:	cmp	w8, #0x2
   3e130:	b.cc	3e15c <_rl_print_color_indicator@@Base+0x248>  // b.lo, b.ul, b.last
   3e134:	ldr	x8, [x21, #352]
   3e138:	cbz	x8, 3e15c <_rl_print_color_indicator@@Base+0x248>
   3e13c:	ldr	x0, [x21, #360]
   3e140:	cmp	x8, #0x2
   3e144:	b.eq	3e30c <_rl_print_color_indicator@@Base+0x3f8>  // b.none
   3e148:	cmp	x8, #0x1
   3e14c:	b.ne	3e320 <_rl_print_color_indicator@@Base+0x40c>  // b.any
   3e150:	ldrb	w8, [x0]
   3e154:	cmp	w8, #0x30
   3e158:	b.ne	3e320 <_rl_print_color_indicator@@Base+0x40c>  // b.any
   3e15c:	mov	x0, x19
   3e160:	bl	16440 <strlen@plt>
   3e164:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e168:	ldr	x8, [x8, #3736]
   3e16c:	ldr	x22, [x8]
   3e170:	cbz	x22, 3e1ac <_rl_print_color_indicator@@Base+0x298>
   3e174:	mov	x20, x0
   3e178:	add	x19, x19, x0
   3e17c:	mov	w23, #0x5                   	// #5
   3e180:	b	3e18c <_rl_print_color_indicator@@Base+0x278>
   3e184:	ldr	x22, [x22, #32]
   3e188:	cbz	x22, 3e328 <_rl_print_color_indicator@@Base+0x414>
   3e18c:	ldr	x2, [x22]
   3e190:	cmp	x2, x20
   3e194:	b.hi	3e184 <_rl_print_color_indicator@@Base+0x270>  // b.pmore
   3e198:	ldr	x1, [x22, #8]
   3e19c:	sub	x0, x19, x2
   3e1a0:	bl	16b40 <strncmp@plt>
   3e1a4:	cbnz	w0, 3e184 <_rl_print_color_indicator@@Base+0x270>
   3e1a8:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e1ac:	mov	w23, #0x5                   	// #5
   3e1b0:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e1b4:	mov	x22, xzr
   3e1b8:	mov	w23, #0x9                   	// #9
   3e1bc:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e1c0:	ldr	x8, [x21, #304]
   3e1c4:	cbz	x8, 3e080 <_rl_print_color_indicator@@Base+0x16c>
   3e1c8:	ldr	x0, [x21, #312]
   3e1cc:	cmp	x8, #0x2
   3e1d0:	b.eq	3e26c <_rl_print_color_indicator@@Base+0x358>  // b.none
   3e1d4:	cmp	x8, #0x1
   3e1d8:	b.ne	3e2a0 <_rl_print_color_indicator@@Base+0x38c>  // b.any
   3e1dc:	ldrb	w8, [x0]
   3e1e0:	mov	w9, #0x13                  	// #19
   3e1e4:	mov	w10, #0x6                   	// #6
   3e1e8:	cmp	w8, #0x30
   3e1ec:	cset	w8, ne  // ne = any
   3e1f0:	orr	w8, w19, w8
   3e1f4:	csel	x23, x10, x9, eq  // eq = none
   3e1f8:	tbz	w8, #0, 3e084 <_rl_print_color_indicator@@Base+0x170>
   3e1fc:	b	3e298 <_rl_print_color_indicator@@Base+0x384>
   3e200:	ldr	x8, [x21, #272]
   3e204:	cbz	x8, 3e0f4 <_rl_print_color_indicator@@Base+0x1e0>
   3e208:	ldr	x0, [x21, #280]
   3e20c:	cmp	x8, #0x2
   3e210:	b.eq	3e2ac <_rl_print_color_indicator@@Base+0x398>  // b.none
   3e214:	cmp	x8, #0x1
   3e218:	b.ne	3e2c0 <_rl_print_color_indicator@@Base+0x3ac>  // b.any
   3e21c:	ldrb	w8, [x0]
   3e220:	cmp	w8, #0x30
   3e224:	b.eq	3e0f4 <_rl_print_color_indicator@@Base+0x1e0>  // b.none
   3e228:	b	3e2c0 <_rl_print_color_indicator@@Base+0x3ac>
   3e22c:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e230:	add	x1, x1, #0x197
   3e234:	mov	w2, #0x2                   	// #2
   3e238:	bl	16b40 <strncmp@plt>
   3e23c:	cbz	w0, 3e07c <_rl_print_color_indicator@@Base+0x168>
   3e240:	mov	x22, xzr
   3e244:	mov	w23, #0x14                  	// #20
   3e248:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e24c:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e250:	add	x1, x1, #0x197
   3e254:	mov	w2, #0x2                   	// #2
   3e258:	bl	16b40 <strncmp@plt>
   3e25c:	cbz	w0, 3e0f0 <_rl_print_color_indicator@@Base+0x1dc>
   3e260:	mov	x22, xzr
   3e264:	mov	w23, #0x10                  	// #16
   3e268:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e26c:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e270:	add	x1, x1, #0x197
   3e274:	mov	w2, #0x2                   	// #2
   3e278:	bl	16b40 <strncmp@plt>
   3e27c:	cmp	w0, #0x0
   3e280:	mov	w8, #0x6                   	// #6
   3e284:	cset	w9, ne  // ne = any
   3e288:	mov	w10, #0x13                  	// #19
   3e28c:	orr	w9, w9, w19
   3e290:	csel	x23, x10, x8, ne  // ne = any
   3e294:	tbz	w9, #0, 3e084 <_rl_print_color_indicator@@Base+0x170>
   3e298:	mov	x22, xzr
   3e29c:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e2a0:	mov	x22, xzr
   3e2a4:	mov	w23, #0x13                  	// #19
   3e2a8:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e2ac:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e2b0:	add	x1, x1, #0x197
   3e2b4:	mov	w2, #0x2                   	// #2
   3e2b8:	bl	16b40 <strncmp@plt>
   3e2bc:	cbz	w0, 3e0f4 <_rl_print_color_indicator@@Base+0x1e0>
   3e2c0:	mov	x22, xzr
   3e2c4:	mov	w23, #0x11                  	// #17
   3e2c8:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e2cc:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e2d0:	add	x1, x1, #0x197
   3e2d4:	mov	w2, #0x2                   	// #2
   3e2d8:	bl	16b40 <strncmp@plt>
   3e2dc:	cbz	w0, 3e0ac <_rl_print_color_indicator@@Base+0x198>
   3e2e0:	mov	x22, xzr
   3e2e4:	mov	w23, #0x12                  	// #18
   3e2e8:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e2ec:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e2f0:	add	x1, x1, #0x197
   3e2f4:	mov	w2, #0x2                   	// #2
   3e2f8:	bl	16b40 <strncmp@plt>
   3e2fc:	cbz	w0, 3e128 <_rl_print_color_indicator@@Base+0x214>
   3e300:	mov	x22, xzr
   3e304:	mov	w23, #0xe                   	// #14
   3e308:	b	3e328 <_rl_print_color_indicator@@Base+0x414>
   3e30c:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e310:	add	x1, x1, #0x197
   3e314:	mov	w2, #0x2                   	// #2
   3e318:	bl	16b40 <strncmp@plt>
   3e31c:	cbz	w0, 3e15c <_rl_print_color_indicator@@Base+0x248>
   3e320:	mov	x22, xzr
   3e324:	mov	w23, #0x16                  	// #22
   3e328:	ldur	x0, [x29, #-8]
   3e32c:	bl	171b0 <free@plt>
   3e330:	add	x8, x22, #0x10
   3e334:	add	x9, x21, x23, lsl #4
   3e338:	cmp	x22, #0x0
   3e33c:	csel	x20, x9, x8, eq  // eq = none
   3e340:	ldr	x8, [x20, #8]
   3e344:	cbz	x8, 3e37c <_rl_print_color_indicator@@Base+0x468>
   3e348:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e34c:	ldr	x8, [x21, #64]
   3e350:	ldr	x19, [x19, #1928]
   3e354:	cbz	x8, 3e3b8 <_rl_print_color_indicator@@Base+0x4a4>
   3e358:	ldr	x0, [x21, #72]
   3e35c:	cmp	x8, #0x2
   3e360:	b.eq	3e384 <_rl_print_color_indicator@@Base+0x470>  // b.none
   3e364:	cmp	x8, #0x1
   3e368:	b.ne	3e398 <_rl_print_color_indicator@@Base+0x484>  // b.any
   3e36c:	ldrb	w8, [x0]
   3e370:	cmp	w8, #0x30
   3e374:	b.ne	3e398 <_rl_print_color_indicator@@Base+0x484>  // b.any
   3e378:	b	3e3b8 <_rl_print_color_indicator@@Base+0x4a4>
   3e37c:	mov	w0, #0x1                   	// #1
   3e380:	b	3e3ec <_rl_print_color_indicator@@Base+0x4d8>
   3e384:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e388:	add	x1, x1, #0x197
   3e38c:	mov	w2, #0x2                   	// #2
   3e390:	bl	16b40 <strncmp@plt>
   3e394:	cbz	w0, 3e3b8 <_rl_print_color_indicator@@Base+0x4a4>
   3e398:	ldp	x1, x0, [x21]
   3e39c:	ldr	x3, [x19]
   3e3a0:	mov	w2, #0x1                   	// #1
   3e3a4:	bl	173e0 <fwrite@plt>
   3e3a8:	ldp	x1, x0, [x21, #16]
   3e3ac:	ldr	x3, [x19]
   3e3b0:	mov	w2, #0x1                   	// #1
   3e3b4:	bl	173e0 <fwrite@plt>
   3e3b8:	ldp	x1, x0, [x21]
   3e3bc:	ldr	x3, [x19]
   3e3c0:	mov	w2, #0x1                   	// #1
   3e3c4:	bl	173e0 <fwrite@plt>
   3e3c8:	ldp	x1, x0, [x20]
   3e3cc:	ldr	x3, [x19]
   3e3d0:	mov	w2, #0x1                   	// #1
   3e3d4:	bl	173e0 <fwrite@plt>
   3e3d8:	ldp	x1, x0, [x21, #16]
   3e3dc:	ldr	x3, [x19]
   3e3e0:	mov	w2, #0x1                   	// #1
   3e3e4:	bl	173e0 <fwrite@plt>
   3e3e8:	mov	w0, wzr
   3e3ec:	ldp	x20, x19, [sp, #320]
   3e3f0:	ldp	x22, x21, [sp, #304]
   3e3f4:	ldp	x28, x23, [sp, #288]
   3e3f8:	ldp	x29, x30, [sp, #272]
   3e3fc:	add	sp, sp, #0x150
   3e400:	ret

000000000003e404 <_rl_prep_non_filename_text@@Base>:
   3e404:	stp	x29, x30, [sp, #-32]!
   3e408:	stp	x20, x19, [sp, #16]
   3e40c:	adrp	x19, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e410:	ldr	x19, [x19, #2992]
   3e414:	mov	x29, sp
   3e418:	ldr	x0, [x19, #40]
   3e41c:	cbz	x0, 3e434 <_rl_prep_non_filename_text@@Base+0x30>
   3e420:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e424:	ldr	x1, [x19, #32]
   3e428:	ldr	x8, [x8, #1928]
   3e42c:	ldr	x3, [x8]
   3e430:	b	3e464 <_rl_prep_non_filename_text@@Base+0x60>
   3e434:	adrp	x20, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e438:	ldp	x1, x0, [x19]
   3e43c:	ldr	x20, [x20, #1928]
   3e440:	mov	w2, #0x1                   	// #1
   3e444:	ldr	x3, [x20]
   3e448:	bl	173e0 <fwrite@plt>
   3e44c:	ldp	x1, x0, [x19, #48]
   3e450:	ldr	x3, [x20]
   3e454:	mov	w2, #0x1                   	// #1
   3e458:	bl	173e0 <fwrite@plt>
   3e45c:	ldp	x1, x0, [x19, #16]
   3e460:	ldr	x3, [x20]
   3e464:	ldp	x20, x19, [sp, #16]
   3e468:	mov	w2, #0x1                   	// #1
   3e46c:	ldp	x29, x30, [sp], #32
   3e470:	b	173e0 <fwrite@plt>

000000000003e474 <_rl_parse_colors@@Base>:
   3e474:	sub	sp, sp, #0x80
   3e478:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3e47c:	add	x0, x0, #0x28a
   3e480:	stp	x29, x30, [sp, #32]
   3e484:	stp	x28, x27, [sp, #48]
   3e488:	stp	x26, x25, [sp, #64]
   3e48c:	stp	x24, x23, [sp, #80]
   3e490:	stp	x22, x21, [sp, #96]
   3e494:	stp	x20, x19, [sp, #112]
   3e498:	add	x29, sp, #0x20
   3e49c:	bl	163a0 <sh_get_env_value@plt>
   3e4a0:	stur	x0, [x29, #-8]
   3e4a4:	cbz	x0, 3e6e8 <_rl_parse_colors@@Base+0x274>
   3e4a8:	ldrb	w8, [x0]
   3e4ac:	mov	x19, x0
   3e4b0:	cbz	w8, 3e6e8 <_rl_parse_colors@@Base+0x274>
   3e4b4:	mov	w8, #0x3f3f                	// #16191
   3e4b8:	mov	x0, x19
   3e4bc:	strb	wzr, [sp, #14]
   3e4c0:	strh	w8, [sp, #12]
   3e4c4:	bl	16440 <strlen@plt>
   3e4c8:	add	x0, x0, #0x1
   3e4cc:	bl	16bf0 <xmalloc@plt>
   3e4d0:	mov	x1, x19
   3e4d4:	bl	17480 <strcpy@plt>
   3e4d8:	str	x0, [sp, #16]
   3e4dc:	adrp	x26, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e4e0:	ldr	x26, [x26, #2992]
   3e4e4:	adrp	x9, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3e4e8:	adrp	x24, 40000 <filename_completion_function@@Base+0x1580>
   3e4ec:	adrp	x25, 40000 <filename_completion_function@@Base+0x1580>
   3e4f0:	adrp	x20, 40000 <filename_completion_function@@Base+0x1580>
   3e4f4:	adrp	x27, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e4f8:	mov	x19, xzr
   3e4fc:	mov	w8, #0x1                   	// #1
   3e500:	add	x24, x24, #0x19a
   3e504:	add	x25, x25, #0x30a
   3e508:	add	x20, x20, #0x297
   3e50c:	str	x0, [x9, #352]
   3e510:	add	x27, x27, #0x498
   3e514:	sub	w9, w8, #0x1
   3e518:	cmp	w9, #0x3
   3e51c:	b.hi	3e514 <_rl_parse_colors@@Base+0xa0>  // b.pmore
   3e520:	adr	x8, 3e530 <_rl_parse_colors@@Base+0xbc>
   3e524:	ldrb	w10, [x24, x9]
   3e528:	add	x8, x8, x10, lsl #2
   3e52c:	br	x8
   3e530:	ldur	x21, [x29, #-8]
   3e534:	ldrb	w8, [x21]
   3e538:	cmp	w8, #0x2a
   3e53c:	b.eq	3e688 <_rl_parse_colors@@Base+0x214>  // b.none
   3e540:	cmp	w8, #0x3a
   3e544:	b.eq	3e6d8 <_rl_parse_colors@@Base+0x264>  // b.none
   3e548:	cbz	w8, 3e6f4 <_rl_parse_colors@@Base+0x280>
   3e54c:	add	x9, x21, #0x1
   3e550:	strb	w8, [sp, #12]
   3e554:	stur	x9, [x29, #-8]
   3e558:	mov	w8, #0x2                   	// #2
   3e55c:	b	3e514 <_rl_parse_colors@@Base+0xa0>
   3e560:	ldur	x9, [x29, #-8]
   3e564:	ldrb	w8, [x9]
   3e568:	cbz	w8, 3e728 <_rl_parse_colors@@Base+0x2b4>
   3e56c:	add	x9, x9, #0x1
   3e570:	strb	w8, [sp, #13]
   3e574:	stur	x9, [x29, #-8]
   3e578:	mov	w8, #0x3                   	// #3
   3e57c:	b	3e514 <_rl_parse_colors@@Base+0xa0>
   3e580:	ldur	x8, [x29, #-8]
   3e584:	add	x28, x8, #0x1
   3e588:	stur	x28, [x29, #-8]
   3e58c:	ldrb	w8, [x8]
   3e590:	cmp	w8, #0x3d
   3e594:	b.ne	3e728 <_rl_parse_colors@@Base+0x2b4>  // b.any
   3e598:	ldrb	w23, [sp, #12]
   3e59c:	mov	w22, #0x8                   	// #8
   3e5a0:	mov	x21, x26
   3e5a4:	mov	x1, x25
   3e5a8:	b	3e5c0 <_rl_parse_colors@@Base+0x14c>
   3e5ac:	ldr	x1, [x27, x22]
   3e5b0:	add	x22, x22, #0x8
   3e5b4:	cmp	x22, #0xc8
   3e5b8:	add	x21, x21, #0x10
   3e5bc:	b.eq	3e654 <_rl_parse_colors@@Base+0x1e0>  // b.none
   3e5c0:	ldrb	w8, [x1]
   3e5c4:	cmp	w23, w8
   3e5c8:	b.ne	3e5ac <_rl_parse_colors@@Base+0x138>  // b.any
   3e5cc:	add	x0, sp, #0xc
   3e5d0:	bl	170a0 <strcmp@plt>
   3e5d4:	cbnz	w0, 3e5ac <_rl_parse_colors@@Base+0x138>
   3e5d8:	ldr	x8, [sp, #16]
   3e5dc:	add	x0, sp, #0x10
   3e5e0:	sub	x1, x29, #0x8
   3e5e4:	mov	w2, wzr
   3e5e8:	mov	x3, x21
   3e5ec:	str	x8, [x21, #8]
   3e5f0:	bl	3e77c <_rl_parse_colors@@Base+0x308>
   3e5f4:	mov	w8, #0x1                   	// #1
   3e5f8:	tbnz	w0, #0, 3e514 <_rl_parse_colors@@Base+0xa0>
   3e5fc:	ldur	x28, [x29, #-8]
   3e600:	add	x1, sp, #0xc
   3e604:	mov	x0, x20
   3e608:	bl	176c0 <_rl_errmsg@plt>
   3e60c:	cbnz	x28, 3e660 <_rl_parse_colors@@Base+0x1ec>
   3e610:	b	3e728 <_rl_parse_colors@@Base+0x2b4>
   3e614:	ldur	x8, [x29, #-8]
   3e618:	add	x9, x8, #0x1
   3e61c:	stur	x9, [x29, #-8]
   3e620:	ldrb	w8, [x8]
   3e624:	cmp	w8, #0x3d
   3e628:	b.ne	3e714 <_rl_parse_colors@@Base+0x2a0>  // b.any
   3e62c:	ldr	x8, [sp, #16]
   3e630:	add	x3, x19, #0x10
   3e634:	add	x0, sp, #0x10
   3e638:	sub	x1, x29, #0x8
   3e63c:	mov	w2, wzr
   3e640:	str	x8, [x19, #24]
   3e644:	bl	3e77c <_rl_parse_colors@@Base+0x308>
   3e648:	mov	w8, #0x1                   	// #1
   3e64c:	tbnz	w0, #0, 3e514 <_rl_parse_colors@@Base+0xa0>
   3e650:	b	3e714 <_rl_parse_colors@@Base+0x2a0>
   3e654:	add	x1, sp, #0xc
   3e658:	mov	x0, x20
   3e65c:	bl	176c0 <_rl_errmsg@plt>
   3e660:	add	x8, x28, #0x1
   3e664:	ldurb	w9, [x8, #-1]
   3e668:	cbz	w9, 3e6f4 <_rl_parse_colors@@Base+0x280>
   3e66c:	cmp	w9, #0x3a
   3e670:	b.eq	3e6e0 <_rl_parse_colors@@Base+0x26c>  // b.none
   3e674:	stur	x8, [x29, #-8]
   3e678:	add	x8, x8, #0x1
   3e67c:	ldurb	w9, [x8, #-1]
   3e680:	cbnz	w9, 3e66c <_rl_parse_colors@@Base+0x1f8>
   3e684:	b	3e6f4 <_rl_parse_colors@@Base+0x280>
   3e688:	mov	w0, #0x28                  	// #40
   3e68c:	bl	16bf0 <xmalloc@plt>
   3e690:	adrp	x9, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e694:	ldr	x9, [x9, #3736]
   3e698:	mov	x19, x0
   3e69c:	sub	x1, x29, #0x8
   3e6a0:	mov	w2, #0x1                   	// #1
   3e6a4:	ldr	x8, [x9]
   3e6a8:	mov	x3, x19
   3e6ac:	str	x8, [x0, #32]
   3e6b0:	ldr	x8, [sp, #16]
   3e6b4:	str	x0, [x9]
   3e6b8:	add	x9, x21, #0x1
   3e6bc:	stur	x9, [x29, #-8]
   3e6c0:	str	x8, [x0, #8]
   3e6c4:	add	x0, sp, #0x10
   3e6c8:	bl	3e77c <_rl_parse_colors@@Base+0x308>
   3e6cc:	mov	w8, #0x4                   	// #4
   3e6d0:	tbnz	w0, #0, 3e514 <_rl_parse_colors@@Base+0xa0>
   3e6d4:	b	3e728 <_rl_parse_colors@@Base+0x2b4>
   3e6d8:	add	x8, x21, #0x1
   3e6dc:	stur	x8, [x29, #-8]
   3e6e0:	mov	w8, #0x1                   	// #1
   3e6e4:	b	3e514 <_rl_parse_colors@@Base+0xa0>
   3e6e8:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e6ec:	ldr	x8, [x8, #3736]
   3e6f0:	str	xzr, [x8]
   3e6f4:	ldp	x20, x19, [sp, #112]
   3e6f8:	ldp	x22, x21, [sp, #96]
   3e6fc:	ldp	x24, x23, [sp, #80]
   3e700:	ldp	x26, x25, [sp, #64]
   3e704:	ldp	x28, x27, [sp, #48]
   3e708:	ldp	x29, x30, [sp, #32]
   3e70c:	add	sp, sp, #0x80
   3e710:	ret
   3e714:	ldr	x1, [x19, #8]
   3e718:	cbz	x1, 3e728 <_rl_parse_colors@@Base+0x2b4>
   3e71c:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3e720:	add	x0, x0, #0x2ba
   3e724:	bl	176c0 <_rl_errmsg@plt>
   3e728:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3e72c:	add	x0, x0, #0x2d6
   3e730:	bl	176c0 <_rl_errmsg@plt>
   3e734:	adrp	x8, 59000 <_rl_terminal_can_insert@@Base+0x1c>
   3e738:	ldr	x0, [x8, #352]
   3e73c:	bl	171b0 <free@plt>
   3e740:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e744:	ldr	x8, [x8, #3736]
   3e748:	ldr	x0, [x8]
   3e74c:	cbz	x0, 3e760 <_rl_parse_colors@@Base+0x2ec>
   3e750:	ldr	x19, [x0, #32]
   3e754:	bl	171b0 <free@plt>
   3e758:	mov	x0, x19
   3e75c:	cbnz	x19, 3e750 <_rl_parse_colors@@Base+0x2dc>
   3e760:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e764:	ldr	x8, [x8, #3736]
   3e768:	str	xzr, [x8]
   3e76c:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e770:	ldr	x8, [x8, #3112]
   3e774:	str	wzr, [x8]
   3e778:	b	3e6f4 <_rl_parse_colors@@Base+0x280>
   3e77c:	ldr	x9, [x1]
   3e780:	ldr	x10, [x0]
   3e784:	adrp	x11, 40000 <filename_completion_function@@Base+0x1580>
   3e788:	adrp	x12, 40000 <filename_completion_function@@Base+0x1580>
   3e78c:	adrp	x13, 40000 <filename_completion_function@@Base+0x1580>
   3e790:	mov	w17, wzr
   3e794:	mov	x8, xzr
   3e798:	mov	w16, wzr
   3e79c:	add	x11, x11, #0x19e
   3e7a0:	add	x12, x12, #0x21c
   3e7a4:	add	x13, x13, #0x1a3
   3e7a8:	mov	w14, #0x1                   	// #1
   3e7ac:	mov	w15, #0x7f                  	// #127
   3e7b0:	b	3e7c8 <_rl_parse_colors@@Base+0x354>
   3e7b4:	mov	w17, wzr
   3e7b8:	strb	w16, [x10], #1
   3e7bc:	add	x8, x8, #0x1
   3e7c0:	cmp	w17, #0x5
   3e7c4:	b.cs	3e9a8 <_rl_parse_colors@@Base+0x534>  // b.hs, b.nlast
   3e7c8:	cmp	w17, #0x4
   3e7cc:	b.hi	3e9a4 <_rl_parse_colors@@Base+0x530>  // b.pmore
   3e7d0:	mov	w17, w17
   3e7d4:	adr	x18, 3e7e4 <_rl_parse_colors@@Base+0x370>
   3e7d8:	ldrb	w4, [x11, x17]
   3e7dc:	add	x18, x18, x4, lsl #2
   3e7e0:	br	x18
   3e7e4:	ldrb	w18, [x9]
   3e7e8:	mov	w17, #0x5                   	// #5
   3e7ec:	sub	w4, w18, #0x3a
   3e7f0:	cmp	w4, #0x24
   3e7f4:	b.hi	3e91c <_rl_parse_colors@@Base+0x4a8>  // b.pmore
   3e7f8:	adr	x5, 3e808 <_rl_parse_colors@@Base+0x394>
   3e7fc:	ldrb	w6, [x12, x4]
   3e800:	add	x5, x5, x6, lsl #2
   3e804:	br	x5
   3e808:	tbz	w2, #0, 3e920 <_rl_parse_colors@@Base+0x4ac>
   3e80c:	b	3e9c0 <_rl_parse_colors@@Base+0x54c>
   3e810:	ldrb	w5, [x9]
   3e814:	cmp	w5, #0x78
   3e818:	b.hi	3e93c <_rl_parse_colors@@Base+0x4c8>  // b.pmore
   3e81c:	adr	x6, 3e838 <_rl_parse_colors@@Base+0x3c4>
   3e820:	ldrb	w17, [x13, x5]
   3e824:	add	x6, x6, x17, lsl #2
   3e828:	mov	w4, wzr
   3e82c:	mov	w18, #0x7                   	// #7
   3e830:	mov	w17, #0x3                   	// #3
   3e834:	br	x6
   3e838:	sub	w4, w5, #0x30
   3e83c:	mov	w17, #0x2                   	// #2
   3e840:	b	3e998 <_rl_parse_colors@@Base+0x524>
   3e844:	ldrb	w17, [x9]
   3e848:	and	w18, w17, #0xf8
   3e84c:	cmp	w18, #0x30
   3e850:	b.ne	3e7b4 <_rl_parse_colors@@Base+0x340>  // b.any
   3e854:	add	w16, w17, w16, lsl #3
   3e858:	add	x9, x9, #0x1
   3e85c:	sub	w16, w16, #0x30
   3e860:	mov	w17, #0x2                   	// #2
   3e864:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e868:	ldrb	w17, [x9]
   3e86c:	sub	w18, w17, #0x30
   3e870:	cmp	w18, #0x36
   3e874:	b.hi	3e7b4 <_rl_parse_colors@@Base+0x340>  // b.pmore
   3e878:	lsl	x4, x14, x18
   3e87c:	tst	x4, #0x3ff
   3e880:	b.ne	3e8dc <_rl_parse_colors@@Base+0x468>  // b.any
   3e884:	lsl	x4, x14, x18
   3e888:	tst	x4, #0x7e0000
   3e88c:	b.ne	3e8f0 <_rl_parse_colors@@Base+0x47c>  // b.any
   3e890:	lsl	x18, x14, x18
   3e894:	tst	x18, #0x7e000000000000
   3e898:	b.eq	3e7b4 <_rl_parse_colors@@Base+0x340>  // b.none
   3e89c:	add	w16, w17, w16, lsl #4
   3e8a0:	add	x9, x9, #0x1
   3e8a4:	sub	w16, w16, #0x57
   3e8a8:	mov	w17, #0x3                   	// #3
   3e8ac:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e8b0:	ldrb	w18, [x9]
   3e8b4:	sub	w17, w18, #0x40
   3e8b8:	cmp	w17, #0x3e
   3e8bc:	b.hi	3e8c8 <_rl_parse_colors@@Base+0x454>  // b.pmore
   3e8c0:	and	w18, w18, #0x1f
   3e8c4:	b	3e920 <_rl_parse_colors@@Base+0x4ac>
   3e8c8:	cmp	w18, #0x3f
   3e8cc:	b.ne	3e9a4 <_rl_parse_colors@@Base+0x530>  // b.any
   3e8d0:	mov	w17, wzr
   3e8d4:	strb	w15, [x10], #1
   3e8d8:	b	3e7bc <_rl_parse_colors@@Base+0x348>
   3e8dc:	add	w16, w17, w16, lsl #4
   3e8e0:	add	x9, x9, #0x1
   3e8e4:	sub	w16, w16, #0x30
   3e8e8:	mov	w17, #0x3                   	// #3
   3e8ec:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e8f0:	add	w16, w17, w16, lsl #4
   3e8f4:	add	x9, x9, #0x1
   3e8f8:	sub	w16, w16, #0x37
   3e8fc:	mov	w17, #0x3                   	// #3
   3e900:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e904:	add	x9, x9, #0x1
   3e908:	mov	w17, #0x1                   	// #1
   3e90c:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e910:	add	x9, x9, #0x1
   3e914:	mov	w17, #0x4                   	// #4
   3e918:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e91c:	cbz	w18, 3e9a8 <_rl_parse_colors@@Base+0x534>
   3e920:	mov	w17, wzr
   3e924:	add	x9, x9, #0x1
   3e928:	strb	w18, [x10], #1
   3e92c:	b	3e7bc <_rl_parse_colors@@Base+0x348>
   3e930:	mov	w17, #0x6                   	// #6
   3e934:	mov	w4, w16
   3e938:	b	3e998 <_rl_parse_colors@@Base+0x524>
   3e93c:	mov	w18, w5
   3e940:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e944:	mov	w18, #0x7f                  	// #127
   3e948:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e94c:	mov	w18, #0x20                  	// #32
   3e950:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e954:	mov	w18, #0x8                   	// #8
   3e958:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e95c:	mov	w18, #0x1b                  	// #27
   3e960:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e964:	mov	w18, #0xc                   	// #12
   3e968:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e96c:	mov	w18, #0xa                   	// #10
   3e970:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e974:	mov	w18, #0xd                   	// #13
   3e978:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e97c:	mov	w18, #0x9                   	// #9
   3e980:	b	3e988 <_rl_parse_colors@@Base+0x514>
   3e984:	mov	w18, #0xb                   	// #11
   3e988:	mov	w17, wzr
   3e98c:	strb	w18, [x10], #1
   3e990:	add	x8, x8, #0x1
   3e994:	mov	w4, w18
   3e998:	add	x9, x9, #0x1
   3e99c:	mov	w16, w4
   3e9a0:	b	3e7c0 <_rl_parse_colors@@Base+0x34c>
   3e9a4:	mov	w17, #0x6                   	// #6
   3e9a8:	cmp	w17, #0x6
   3e9ac:	str	x10, [x0]
   3e9b0:	cset	w0, ne  // ne = any
   3e9b4:	str	x9, [x1]
   3e9b8:	str	x8, [x3]
   3e9bc:	ret
   3e9c0:	mov	w17, #0x5                   	// #5
   3e9c4:	b	3e9a8 <_rl_parse_colors@@Base+0x534>

000000000003e9c8 <xmalloc@@Base>:
   3e9c8:	stp	x29, x30, [sp, #-16]!
   3e9cc:	mov	x29, sp
   3e9d0:	bl	16980 <malloc@plt>
   3e9d4:	cbz	x0, 3e9e0 <xmalloc@@Base+0x18>
   3e9d8:	ldp	x29, x30, [sp], #16
   3e9dc:	ret
   3e9e0:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3e9e4:	add	x0, x0, #0x340
   3e9e8:	bl	3e9ec <xmalloc@@Base+0x24>
   3e9ec:	stp	x29, x30, [sp, #-16]!
   3e9f0:	adrp	x8, 51000 <_rl_show_mode_in_prompt@@Base-0x6fe0>
   3e9f4:	ldr	x8, [x8, #2208]
   3e9f8:	adrp	x1, 40000 <filename_completion_function@@Base+0x1580>
   3e9fc:	mov	x2, x0
   3ea00:	add	x1, x1, #0x351
   3ea04:	ldr	x8, [x8]
   3ea08:	mov	x29, sp
   3ea0c:	mov	x0, x8
   3ea10:	bl	17950 <fprintf@plt>
   3ea14:	mov	w0, #0x2                   	// #2
   3ea18:	bl	164a0 <exit@plt>

000000000003ea1c <xrealloc@@Base>:
   3ea1c:	stp	x29, x30, [sp, #-16]!
   3ea20:	mov	x29, sp
   3ea24:	cbz	x0, 3ea38 <xrealloc@@Base+0x1c>
   3ea28:	bl	16da0 <realloc@plt>
   3ea2c:	cbz	x0, 3ea44 <xrealloc@@Base+0x28>
   3ea30:	ldp	x29, x30, [sp], #16
   3ea34:	ret
   3ea38:	mov	x0, x1
   3ea3c:	bl	16980 <malloc@plt>
   3ea40:	cbnz	x0, 3ea30 <xrealloc@@Base+0x14>
   3ea44:	adrp	x0, 40000 <filename_completion_function@@Base+0x1580>
   3ea48:	add	x0, x0, #0x348
   3ea4c:	bl	3e9ec <xmalloc@@Base+0x24>

000000000003ea50 <xfree@@Base>:
   3ea50:	cbz	x0, 3ea58 <xfree@@Base+0x8>
   3ea54:	b	171b0 <free@plt>
   3ea58:	ret

000000000003ea5c <free_undo_list@@Base>:
   3ea5c:	b	17550 <rl_free_undo_list@plt>

000000000003ea60 <maybe_replace_line@@Base>:
   3ea60:	b	17960 <rl_maybe_replace_line@plt>

000000000003ea64 <maybe_save_line@@Base>:
   3ea64:	b	178d0 <rl_maybe_save_line@plt>

000000000003ea68 <maybe_unsave_line@@Base>:
   3ea68:	b	16dd0 <rl_maybe_unsave_line@plt>

000000000003ea6c <ding@@Base>:
   3ea6c:	b	17390 <rl_ding@plt>

000000000003ea70 <crlf@@Base>:
   3ea70:	b	171e0 <rl_crlf@plt>

000000000003ea74 <alphabetic@@Base>:
   3ea74:	b	165c0 <rl_alphabetic@plt>

000000000003ea78 <completion_matches@@Base>:
   3ea78:	b	16690 <rl_completion_matches@plt>

000000000003ea7c <username_completion_function@@Base>:
   3ea7c:	b	17280 <rl_username_completion_function@plt>

000000000003ea80 <filename_completion_function@@Base>:
   3ea80:	b	16920 <rl_filename_completion_function@plt>

Disassembly of section .fini:

000000000003ea84 <.fini>:
   3ea84:	stp	x29, x30, [sp, #-16]!
   3ea88:	mov	x29, sp
   3ea8c:	ldp	x29, x30, [sp], #16
   3ea90:	ret
