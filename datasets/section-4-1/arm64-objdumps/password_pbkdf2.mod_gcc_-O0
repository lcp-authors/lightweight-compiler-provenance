
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//password_pbkdf2.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x6b8>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	mov	w4, #0x0                   	// #0
  1c:	ldr	x3, [sp, #16]
  20:	ldr	x2, [sp, #24]
  24:	ldr	x1, [sp, #32]
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <grub_register_command_prio>
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	stp	x29, x30, [sp, #-80]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #40]
  44:	str	x1, [sp, #32]
  48:	str	x2, [sp, #24]
  4c:	ldr	x0, [sp, #24]
  50:	str	x0, [sp, #64]
  54:	ldr	x0, [sp, #64]
  58:	ldr	x0, [x0, #32]
  5c:	bl	0 <grub_malloc>
  60:	str	x0, [sp, #56]
  64:	ldr	x0, [sp, #56]
  68:	cmp	x0, #0x0
  6c:	b.ne	7c <grub_mod_init-0x63c>  // b.any
  70:	mov	w0, #0x22                  	// #34
  74:	bl	0 <grub_crypto_gcry_error>
  78:	b	14c <grub_mod_init-0x56c>
  7c:	ldr	x0, [sp, #32]
  80:	bl	0 <grub_strlen>
  84:	mov	x8, x0
  88:	ldr	x0, [sp, #64]
  8c:	ldr	x1, [x0]
  90:	ldr	x0, [sp, #64]
  94:	ldr	x2, [x0, #8]
  98:	ldr	x0, [sp, #64]
  9c:	ldr	w3, [x0, #16]
  a0:	ldr	x0, [sp, #64]
  a4:	ldr	x0, [x0, #32]
  a8:	mov	x7, x0
  ac:	ldr	x6, [sp, #56]
  b0:	mov	w5, w3
  b4:	mov	x4, x2
  b8:	mov	x3, x1
  bc:	mov	x2, x8
  c0:	ldr	x1, [sp, #32]
  c4:	adrp	x0, 0 <grub_mod_init-0x6b8>
  c8:	add	x0, x0, #0x0
  cc:	ldr	x0, [x0]
  d0:	bl	0 <grub_crypto_pbkdf2>
  d4:	str	w0, [sp, #52]
  d8:	ldr	w0, [sp, #52]
  dc:	cmp	w0, #0x0
  e0:	b.eq	f4 <grub_mod_init-0x5c4>  // b.none
  e4:	ldr	w0, [sp, #52]
  e8:	bl	0 <grub_crypto_gcry_error>
  ec:	str	w0, [sp, #76]
  f0:	b	140 <grub_mod_init-0x578>
  f4:	ldr	x0, [sp, #64]
  f8:	ldr	x1, [x0, #24]
  fc:	ldr	x0, [sp, #64]
 100:	ldr	x0, [x0, #32]
 104:	mov	x2, x0
 108:	ldr	x0, [sp, #56]
 10c:	bl	0 <grub_crypto_memcmp>
 110:	cmp	w0, #0x0
 114:	b.eq	134 <grub_mod_init-0x584>  // b.none
 118:	adrp	x0, 0 <grub_mod_init-0x6b8>
 11c:	add	x0, x0, #0x0
 120:	ldr	x1, [x0]
 124:	mov	w0, #0x1e                  	// #30
 128:	bl	0 <grub_error>
 12c:	str	w0, [sp, #76]
 130:	b	140 <grub_mod_init-0x578>
 134:	ldr	x0, [sp, #40]
 138:	bl	0 <grub_auth_authenticate>
 13c:	str	wzr, [sp, #76]
 140:	ldr	x0, [sp, #56]
 144:	bl	0 <grub_free>
 148:	ldr	w0, [sp, #76]
 14c:	ldp	x29, x30, [sp], #80
 150:	ret
 154:	nop
	...
 168:	sub	sp, sp, #0x10
 16c:	strb	w0, [sp, #15]
 170:	ldrb	w0, [sp, #15]
 174:	cmp	w0, #0x2f
 178:	b.ls	194 <grub_mod_init-0x524>  // b.plast
 17c:	ldrb	w0, [sp, #15]
 180:	cmp	w0, #0x39
 184:	b.hi	194 <grub_mod_init-0x524>  // b.pmore
 188:	ldrb	w0, [sp, #15]
 18c:	sub	w0, w0, #0x30
 190:	b	1e0 <grub_mod_init-0x4d8>
 194:	ldrb	w0, [sp, #15]
 198:	cmp	w0, #0x60
 19c:	b.ls	1b8 <grub_mod_init-0x500>  // b.plast
 1a0:	ldrb	w0, [sp, #15]
 1a4:	cmp	w0, #0x66
 1a8:	b.hi	1b8 <grub_mod_init-0x500>  // b.pmore
 1ac:	ldrb	w0, [sp, #15]
 1b0:	sub	w0, w0, #0x57
 1b4:	b	1e0 <grub_mod_init-0x4d8>
 1b8:	ldrb	w0, [sp, #15]
 1bc:	cmp	w0, #0x40
 1c0:	b.ls	1dc <grub_mod_init-0x4dc>  // b.plast
 1c4:	ldrb	w0, [sp, #15]
 1c8:	cmp	w0, #0x46
 1cc:	b.hi	1dc <grub_mod_init-0x4dc>  // b.pmore
 1d0:	ldrb	w0, [sp, #15]
 1d4:	sub	w0, w0, #0x37
 1d8:	b	1e0 <grub_mod_init-0x4d8>
 1dc:	mov	w0, #0xffffffff            	// #-1
 1e0:	add	sp, sp, #0x10
 1e4:	ret
 1e8:	stp	x29, x30, [sp, #-112]!
 1ec:	mov	x29, sp
 1f0:	str	x0, [sp, #40]
 1f4:	str	w1, [sp, #36]
 1f8:	str	x2, [sp, #24]
 1fc:	ldr	w0, [sp, #36]
 200:	cmp	w0, #0x2
 204:	b.eq	220 <grub_mod_init-0x498>  // b.none
 208:	adrp	x0, 0 <grub_mod_init-0x6b8>
 20c:	add	x0, x0, #0x0
 210:	ldr	x1, [x0]
 214:	mov	w0, #0x12                  	// #18
 218:	bl	0 <grub_error>
 21c:	b	680 <grub_mod_init-0x38>
 220:	ldr	x0, [sp, #24]
 224:	add	x0, x0, #0x8
 228:	ldr	x3, [x0]
 22c:	mov	x2, #0x13                  	// #19
 230:	adrp	x0, 0 <grub_mod_init-0x6b8>
 234:	add	x0, x0, #0x0
 238:	ldr	x1, [x0]
 23c:	mov	x0, x3
 240:	bl	0 <grub_memcmp>
 244:	cmp	w0, #0x0
 248:	b.eq	264 <grub_mod_init-0x454>  // b.none
 24c:	adrp	x0, 0 <grub_mod_init-0x6b8>
 250:	add	x0, x0, #0x0
 254:	ldr	x1, [x0]
 258:	mov	w0, #0x12                  	// #18
 25c:	bl	0 <grub_error>
 260:	b	680 <grub_mod_init-0x38>
 264:	ldr	x0, [sp, #24]
 268:	add	x0, x0, #0x8
 26c:	ldr	x0, [x0]
 270:	add	x0, x0, #0x13
 274:	str	x0, [sp, #56]
 278:	mov	x0, #0x28                  	// #40
 27c:	bl	0 <grub_malloc>
 280:	str	x0, [sp, #96]
 284:	ldr	x0, [sp, #96]
 288:	cmp	x0, #0x0
 28c:	b.ne	2a4 <grub_mod_init-0x414>  // b.any
 290:	adrp	x0, 0 <grub_mod_init-0x6b8>
 294:	add	x0, x0, #0x0
 298:	ldr	x0, [x0]
 29c:	ldr	w0, [x0]
 2a0:	b	680 <grub_mod_init-0x38>
 2a4:	ldr	x0, [sp, #56]
 2a8:	add	x1, sp, #0x38
 2ac:	mov	w2, #0x0                   	// #0
 2b0:	bl	0 <grub_strtoul>
 2b4:	mov	w1, w0
 2b8:	ldr	x0, [sp, #96]
 2bc:	str	w1, [x0, #16]
 2c0:	adrp	x0, 0 <grub_mod_init-0x6b8>
 2c4:	add	x0, x0, #0x0
 2c8:	ldr	x0, [x0]
 2cc:	ldr	w0, [x0]
 2d0:	cmp	w0, #0x0
 2d4:	b.eq	2f4 <grub_mod_init-0x3c4>  // b.none
 2d8:	ldr	x0, [sp, #96]
 2dc:	bl	0 <grub_free>
 2e0:	adrp	x0, 0 <grub_mod_init-0x6b8>
 2e4:	add	x0, x0, #0x0
 2e8:	ldr	x0, [x0]
 2ec:	ldr	w0, [x0]
 2f0:	b	680 <grub_mod_init-0x38>
 2f4:	ldr	x0, [sp, #56]
 2f8:	ldrb	w0, [x0]
 2fc:	cmp	w0, #0x2e
 300:	b.eq	324 <grub_mod_init-0x394>  // b.none
 304:	ldr	x0, [sp, #96]
 308:	bl	0 <grub_free>
 30c:	adrp	x0, 0 <grub_mod_init-0x6b8>
 310:	add	x0, x0, #0x0
 314:	ldr	x1, [x0]
 318:	mov	w0, #0x12                  	// #18
 31c:	bl	0 <grub_error>
 320:	b	680 <grub_mod_init-0x38>
 324:	ldr	x0, [sp, #56]
 328:	add	x0, x0, #0x1
 32c:	str	x0, [sp, #56]
 330:	ldr	x0, [sp, #56]
 334:	mov	w1, #0x2e                  	// #46
 338:	bl	0 <grub_strchr>
 33c:	str	x0, [sp, #88]
 340:	ldr	x0, [sp, #88]
 344:	cmp	x0, #0x0
 348:	b.eq	37c <grub_mod_init-0x33c>  // b.none
 34c:	ldr	x0, [sp, #56]
 350:	ldr	x1, [sp, #88]
 354:	sub	x0, x1, x0
 358:	and	x0, x0, #0x1
 35c:	cmp	x0, #0x0
 360:	b.ne	37c <grub_mod_init-0x33c>  // b.any
 364:	ldr	x0, [sp, #88]
 368:	add	x0, x0, #0x1
 36c:	bl	0 <grub_strlen>
 370:	and	x0, x0, #0x1
 374:	cmp	x0, #0x0
 378:	b.eq	39c <grub_mod_init-0x31c>  // b.none
 37c:	ldr	x0, [sp, #96]
 380:	bl	0 <grub_free>
 384:	adrp	x0, 0 <grub_mod_init-0x6b8>
 388:	add	x0, x0, #0x0
 38c:	ldr	x1, [x0]
 390:	mov	w0, #0x12                  	// #18
 394:	bl	0 <grub_error>
 398:	b	680 <grub_mod_init-0x38>
 39c:	ldr	x0, [sp, #56]
 3a0:	ldr	x1, [sp, #88]
 3a4:	sub	x0, x1, x0
 3a8:	asr	x0, x0, #1
 3ac:	mov	x1, x0
 3b0:	ldr	x0, [sp, #96]
 3b4:	str	x1, [x0, #8]
 3b8:	ldr	x0, [sp, #88]
 3bc:	add	x0, x0, #0x1
 3c0:	bl	0 <grub_strlen>
 3c4:	lsr	x1, x0, #1
 3c8:	ldr	x0, [sp, #96]
 3cc:	str	x1, [x0, #32]
 3d0:	ldr	x0, [sp, #96]
 3d4:	ldr	x0, [x0, #8]
 3d8:	bl	0 <grub_malloc>
 3dc:	mov	x1, x0
 3e0:	ldr	x0, [sp, #96]
 3e4:	str	x1, [x0]
 3e8:	ldr	x0, [sp, #96]
 3ec:	ldr	x0, [x0]
 3f0:	str	x0, [sp, #104]
 3f4:	ldr	x0, [sp, #104]
 3f8:	cmp	x0, #0x0
 3fc:	b.ne	4cc <grub_mod_init-0x1ec>  // b.any
 400:	ldr	x0, [sp, #96]
 404:	bl	0 <grub_free>
 408:	adrp	x0, 0 <grub_mod_init-0x6b8>
 40c:	add	x0, x0, #0x0
 410:	ldr	x0, [x0]
 414:	ldr	w0, [x0]
 418:	b	680 <grub_mod_init-0x38>
 41c:	ldr	x0, [sp, #56]
 420:	ldrb	w0, [x0]
 424:	bl	168 <grub_mod_init-0x550>
 428:	str	w0, [sp, #72]
 42c:	ldr	x0, [sp, #56]
 430:	add	x0, x0, #0x1
 434:	str	x0, [sp, #56]
 438:	ldr	x0, [sp, #56]
 43c:	ldrb	w0, [x0]
 440:	bl	168 <grub_mod_init-0x550>
 444:	str	w0, [sp, #68]
 448:	ldr	x0, [sp, #56]
 44c:	add	x0, x0, #0x1
 450:	str	x0, [sp, #56]
 454:	ldr	w0, [sp, #72]
 458:	cmp	w0, #0x0
 45c:	b.lt	46c <grub_mod_init-0x24c>  // b.tstop
 460:	ldr	w0, [sp, #68]
 464:	cmp	w0, #0x0
 468:	b.ge	498 <grub_mod_init-0x220>  // b.tcont
 46c:	ldr	x0, [sp, #96]
 470:	ldr	x0, [x0]
 474:	bl	0 <grub_free>
 478:	ldr	x0, [sp, #96]
 47c:	bl	0 <grub_free>
 480:	adrp	x0, 0 <grub_mod_init-0x6b8>
 484:	add	x0, x0, #0x0
 488:	ldr	x1, [x0]
 48c:	mov	w0, #0x12                  	// #18
 490:	bl	0 <grub_error>
 494:	b	680 <grub_mod_init-0x38>
 498:	ldr	w0, [sp, #72]
 49c:	lsl	w0, w0, #4
 4a0:	sxtb	w1, w0
 4a4:	ldr	w0, [sp, #68]
 4a8:	sxtb	w0, w0
 4ac:	orr	w0, w1, w0
 4b0:	sxtb	w0, w0
 4b4:	and	w1, w0, #0xff
 4b8:	ldr	x0, [sp, #104]
 4bc:	strb	w1, [x0]
 4c0:	ldr	x0, [sp, #104]
 4c4:	add	x0, x0, #0x1
 4c8:	str	x0, [sp, #104]
 4cc:	ldr	x0, [sp, #56]
 4d0:	ldr	x1, [sp, #88]
 4d4:	cmp	x1, x0
 4d8:	b.hi	41c <grub_mod_init-0x29c>  // b.pmore
 4dc:	ldr	x0, [sp, #96]
 4e0:	ldr	x0, [x0, #32]
 4e4:	bl	0 <grub_malloc>
 4e8:	mov	x1, x0
 4ec:	ldr	x0, [sp, #96]
 4f0:	str	x1, [x0, #24]
 4f4:	ldr	x0, [sp, #96]
 4f8:	ldr	x0, [x0, #24]
 4fc:	str	x0, [sp, #104]
 500:	ldr	x0, [sp, #104]
 504:	cmp	x0, #0x0
 508:	b.ne	534 <grub_mod_init-0x184>  // b.any
 50c:	ldr	x0, [sp, #96]
 510:	ldr	x0, [x0]
 514:	bl	0 <grub_free>
 518:	ldr	x0, [sp, #96]
 51c:	bl	0 <grub_free>
 520:	adrp	x0, 0 <grub_mod_init-0x6b8>
 524:	add	x0, x0, #0x0
 528:	ldr	x0, [x0]
 52c:	ldr	w0, [x0]
 530:	b	680 <grub_mod_init-0x38>
 534:	ldr	x0, [sp, #88]
 538:	add	x0, x0, #0x1
 53c:	str	x0, [sp, #56]
 540:	ldr	x0, [sp, #88]
 544:	bl	0 <grub_strlen>
 548:	mov	x1, x0
 54c:	ldr	x0, [sp, #88]
 550:	add	x0, x0, x1
 554:	str	x0, [sp, #88]
 558:	b	618 <grub_mod_init-0xa0>
 55c:	ldr	x0, [sp, #56]
 560:	ldrb	w0, [x0]
 564:	bl	168 <grub_mod_init-0x550>
 568:	str	w0, [sp, #80]
 56c:	ldr	x0, [sp, #56]
 570:	add	x0, x0, #0x1
 574:	str	x0, [sp, #56]
 578:	ldr	x0, [sp, #56]
 57c:	ldrb	w0, [x0]
 580:	bl	168 <grub_mod_init-0x550>
 584:	str	w0, [sp, #76]
 588:	ldr	x0, [sp, #56]
 58c:	add	x0, x0, #0x1
 590:	str	x0, [sp, #56]
 594:	ldr	w0, [sp, #80]
 598:	cmp	w0, #0x0
 59c:	b.lt	5ac <grub_mod_init-0x10c>  // b.tstop
 5a0:	ldr	w0, [sp, #76]
 5a4:	cmp	w0, #0x0
 5a8:	b.ge	5e4 <grub_mod_init-0xd4>  // b.tcont
 5ac:	ldr	x0, [sp, #96]
 5b0:	ldr	x0, [x0, #24]
 5b4:	bl	0 <grub_free>
 5b8:	ldr	x0, [sp, #96]
 5bc:	ldr	x0, [x0]
 5c0:	bl	0 <grub_free>
 5c4:	ldr	x0, [sp, #96]
 5c8:	bl	0 <grub_free>
 5cc:	adrp	x0, 0 <grub_mod_init-0x6b8>
 5d0:	add	x0, x0, #0x0
 5d4:	ldr	x1, [x0]
 5d8:	mov	w0, #0x12                  	// #18
 5dc:	bl	0 <grub_error>
 5e0:	b	680 <grub_mod_init-0x38>
 5e4:	ldr	w0, [sp, #80]
 5e8:	lsl	w0, w0, #4
 5ec:	sxtb	w1, w0
 5f0:	ldr	w0, [sp, #76]
 5f4:	sxtb	w0, w0
 5f8:	orr	w0, w1, w0
 5fc:	sxtb	w0, w0
 600:	and	w1, w0, #0xff
 604:	ldr	x0, [sp, #104]
 608:	strb	w1, [x0]
 60c:	ldr	x0, [sp, #104]
 610:	add	x0, x0, #0x1
 614:	str	x0, [sp, #104]
 618:	ldr	x0, [sp, #56]
 61c:	ldr	x1, [sp, #88]
 620:	cmp	x1, x0
 624:	b.hi	55c <grub_mod_init-0x15c>  // b.pmore
 628:	ldr	x0, [sp, #24]
 62c:	ldr	x3, [x0]
 630:	ldr	x2, [sp, #96]
 634:	adrp	x0, 0 <grub_mod_init-0x6b8>
 638:	add	x0, x0, #0x0
 63c:	ldr	x1, [x0]
 640:	mov	x0, x3
 644:	bl	0 <grub_auth_register_authentication>
 648:	str	w0, [sp, #84]
 64c:	ldr	w0, [sp, #84]
 650:	cmp	w0, #0x0
 654:	b.eq	668 <grub_mod_init-0x50>  // b.none
 658:	ldr	x0, [sp, #96]
 65c:	bl	0 <grub_free>
 660:	ldr	w0, [sp, #84]
 664:	b	680 <grub_mod_init-0x38>
 668:	adrp	x0, 0 <grub_mod_init-0x6b8>
 66c:	add	x0, x0, #0x0
 670:	ldr	x0, [x0]
 674:	ldr	x0, [x0]
 678:	bl	0 <grub_dl_ref>
 67c:	mov	w0, #0x0                   	// #0
 680:	ldp	x29, x30, [sp], #112
 684:	ret
	...

00000000000006b8 <grub_mod_init>:
 6b8:	stp	x29, x30, [sp, #-32]!
 6bc:	mov	x29, sp
 6c0:	str	x0, [sp, #24]
 6c4:	adrp	x0, 0 <grub_mod_init-0x6b8>
 6c8:	add	x0, x0, #0x0
 6cc:	ldr	x0, [x0]
 6d0:	ldr	x1, [sp, #24]
 6d4:	str	x1, [x0]
 6d8:	adrp	x0, 0 <grub_mod_init-0x6b8>
 6dc:	add	x0, x0, #0x0
 6e0:	ldr	x3, [x0]
 6e4:	adrp	x0, 0 <grub_mod_init-0x6b8>
 6e8:	add	x0, x0, #0x0
 6ec:	ldr	x2, [x0]
 6f0:	adrp	x0, 0 <grub_mod_init-0x6b8>
 6f4:	add	x0, x0, #0x0
 6f8:	ldr	x1, [x0]
 6fc:	adrp	x0, 0 <grub_mod_init-0x6b8>
 700:	add	x0, x0, #0x0
 704:	ldr	x0, [x0]
 708:	bl	0 <grub_mod_init-0x6b8>
 70c:	mov	x1, x0
 710:	adrp	x0, 0 <grub_mod_init-0x6b8>
 714:	add	x0, x0, #0x0
 718:	ldr	x0, [x0]
 71c:	str	x1, [x0]
 720:	nop
 724:	ldp	x29, x30, [sp], #32
 728:	ret
 72c:	nop
	...

0000000000000760 <grub_mod_fini>:
 760:	stp	x29, x30, [sp, #-16]!
 764:	mov	x29, sp
 768:	adrp	x0, 0 <grub_mod_init-0x6b8>
 76c:	add	x0, x0, #0x0
 770:	ldr	x0, [x0]
 774:	ldr	x0, [x0]
 778:	bl	0 <grub_unregister_command>
 77c:	nop
 780:	ldp	x29, x30, [sp], #16
 784:	ret
	...
