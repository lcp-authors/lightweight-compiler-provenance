
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004d60 <.init>:
    4d60:	stp	x29, x30, [sp, #-16]!
    4d64:	mov	x29, sp
    4d68:	bl	52a0 <bcmp@plt+0x10>
    4d6c:	ldp	x29, x30, [sp], #16
    4d70:	ret

Disassembly of section .plt:

0000000000004d80 <_Znam@plt-0x20>:
    4d80:	stp	x16, x30, [sp, #-16]!
    4d84:	adrp	x16, 2a000 <xexit@@Base+0x13b84>
    4d88:	ldr	x17, [x16, #4088]
    4d8c:	add	x16, x16, #0xff8
    4d90:	br	x17
    4d94:	nop
    4d98:	nop
    4d9c:	nop

0000000000004da0 <_Znam@plt>:
    4da0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4da4:	ldr	x17, [x16]
    4da8:	add	x16, x16, #0x0
    4dac:	br	x17

0000000000004db0 <memcpy@plt>:
    4db0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4db4:	ldr	x17, [x16, #8]
    4db8:	add	x16, x16, #0x8
    4dbc:	br	x17

0000000000004dc0 <select@plt>:
    4dc0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4dc4:	ldr	x17, [x16, #16]
    4dc8:	add	x16, x16, #0x10
    4dcc:	br	x17

0000000000004dd0 <xregcomp@plt>:
    4dd0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4dd4:	ldr	x17, [x16, #24]
    4dd8:	add	x16, x16, #0x18
    4ddc:	br	x17

0000000000004de0 <execvp@plt>:
    4de0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4de4:	ldr	x17, [x16, #32]
    4de8:	add	x16, x16, #0x20
    4dec:	br	x17

0000000000004df0 <socketpair@plt>:
    4df0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4df4:	ldr	x17, [x16, #40]
    4df8:	add	x16, x16, #0x28
    4dfc:	br	x17

0000000000004e00 <calloc@plt>:
    4e00:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e04:	ldr	x17, [x16, #48]
    4e08:	add	x16, x16, #0x30
    4e0c:	br	x17

0000000000004e10 <pipe@plt>:
    4e10:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e14:	ldr	x17, [x16, #56]
    4e18:	add	x16, x16, #0x38
    4e1c:	br	x17

0000000000004e20 <dup2@plt>:
    4e20:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e24:	ldr	x17, [x16, #64]
    4e28:	add	x16, x16, #0x40
    4e2c:	br	x17

0000000000004e30 <_ZSt9terminatev@plt>:
    4e30:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e34:	ldr	x17, [x16, #72]
    4e38:	add	x16, x16, #0x48
    4e3c:	br	x17

0000000000004e40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    4e40:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e44:	ldr	x17, [x16, #80]
    4e48:	add	x16, x16, #0x50
    4e4c:	br	x17

0000000000004e50 <strlen@plt>:
    4e50:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e54:	ldr	x17, [x16, #88]
    4e58:	add	x16, x16, #0x58
    4e5c:	br	x17

0000000000004e60 <fprintf@plt>:
    4e60:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e64:	ldr	x17, [x16, #96]
    4e68:	add	x16, x16, #0x60
    4e6c:	br	x17

0000000000004e70 <xregfree@plt>:
    4e70:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e74:	ldr	x17, [x16, #104]
    4e78:	add	x16, x16, #0x68
    4e7c:	br	x17

0000000000004e80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
    4e80:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e84:	ldr	x17, [x16, #112]
    4e88:	add	x16, x16, #0x70
    4e8c:	br	x17

0000000000004e90 <_ZNSt8ios_baseD2Ev@plt>:
    4e90:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4e94:	ldr	x17, [x16, #120]
    4e98:	add	x16, x16, #0x78
    4e9c:	br	x17

0000000000004ea0 <waitpid@plt>:
    4ea0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ea4:	ldr	x17, [x16, #128]
    4ea8:	add	x16, x16, #0x80
    4eac:	br	x17

0000000000004eb0 <htab_create_alloc@plt>:
    4eb0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4eb4:	ldr	x17, [x16, #136]
    4eb8:	add	x16, x16, #0x88
    4ebc:	br	x17

0000000000004ec0 <__cxa_begin_catch@plt>:
    4ec0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ec4:	ldr	x17, [x16, #144]
    4ec8:	add	x16, x16, #0x90
    4ecc:	br	x17

0000000000004ed0 <xstrdup@plt>:
    4ed0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ed4:	ldr	x17, [x16, #152]
    4ed8:	add	x16, x16, #0x98
    4edc:	br	x17

0000000000004ee0 <_ZSt20__throw_length_errorPKc@plt>:
    4ee0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ee4:	ldr	x17, [x16, #160]
    4ee8:	add	x16, x16, #0xa0
    4eec:	br	x17

0000000000004ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    4ef0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ef4:	ldr	x17, [x16, #168]
    4ef8:	add	x16, x16, #0xa8
    4efc:	br	x17

0000000000004f00 <free@plt>:
    4f00:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f04:	ldr	x17, [x16, #176]
    4f08:	add	x16, x16, #0xb0
    4f0c:	br	x17

0000000000004f10 <memset@plt>:
    4f10:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f14:	ldr	x17, [x16, #184]
    4f18:	add	x16, x16, #0xb8
    4f1c:	br	x17

0000000000004f20 <__cxa_finalize@plt>:
    4f20:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f24:	ldr	x17, [x16, #192]
    4f28:	add	x16, x16, #0xc0
    4f2c:	br	x17

0000000000004f30 <realloc@plt>:
    4f30:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f34:	ldr	x17, [x16, #200]
    4f38:	add	x16, x16, #0xc8
    4f3c:	br	x17

0000000000004f40 <xregexec@plt>:
    4f40:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f44:	ldr	x17, [x16, #208]
    4f48:	add	x16, x16, #0xd0
    4f4c:	br	x17

0000000000004f50 <_exit@plt>:
    4f50:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f54:	ldr	x17, [x16, #216]
    4f58:	add	x16, x16, #0xd8
    4f5c:	br	x17

0000000000004f60 <htab_find_slot_with_hash@plt>:
    4f60:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f64:	ldr	x17, [x16, #224]
    4f68:	add	x16, x16, #0xe0
    4f6c:	br	x17

0000000000004f70 <read@plt>:
    4f70:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f74:	ldr	x17, [x16, #232]
    4f78:	add	x16, x16, #0xe8
    4f7c:	br	x17

0000000000004f80 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4f80:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f84:	ldr	x17, [x16, #240]
    4f88:	add	x16, x16, #0xf0
    4f8c:	br	x17

0000000000004f90 <_ZSt19__throw_logic_errorPKc@plt>:
    4f90:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4f94:	ldr	x17, [x16, #248]
    4f98:	add	x16, x16, #0xf8
    4f9c:	br	x17

0000000000004fa0 <htab_find@plt>:
    4fa0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fa4:	ldr	x17, [x16, #256]
    4fa8:	add	x16, x16, #0x100
    4fac:	br	x17

0000000000004fb0 <closedir@plt>:
    4fb0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fb4:	ldr	x17, [x16, #264]
    4fb8:	add	x16, x16, #0x108
    4fbc:	br	x17

0000000000004fc0 <concat@plt>:
    4fc0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fc4:	ldr	x17, [x16, #272]
    4fc8:	add	x16, x16, #0x110
    4fcc:	br	x17

0000000000004fd0 <xmalloc_failed@plt>:
    4fd0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fd4:	ldr	x17, [x16, #280]
    4fd8:	add	x16, x16, #0x118
    4fdc:	br	x17

0000000000004fe0 <htab_hash_string@plt>:
    4fe0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fe4:	ldr	x17, [x16, #288]
    4fe8:	add	x16, x16, #0x120
    4fec:	br	x17

0000000000004ff0 <_ZdlPv@plt>:
    4ff0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ff4:	ldr	x17, [x16, #296]
    4ff8:	add	x16, x16, #0x128
    4ffc:	br	x17

0000000000005000 <_Znwm@plt>:
    5000:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5004:	ldr	x17, [x16, #304]
    5008:	add	x16, x16, #0x130
    500c:	br	x17

0000000000005010 <readdir@plt>:
    5010:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5014:	ldr	x17, [x16, #312]
    5018:	add	x16, x16, #0x138
    501c:	br	x17

0000000000005020 <opendir@plt>:
    5020:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5024:	ldr	x17, [x16, #320]
    5028:	add	x16, x16, #0x140
    502c:	br	x17

0000000000005030 <__ctype_b_loc@plt>:
    5030:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5034:	ldr	x17, [x16, #328]
    5038:	add	x16, x16, #0x148
    503c:	br	x17

0000000000005040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    5040:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5044:	ldr	x17, [x16, #336]
    5048:	add	x16, x16, #0x150
    504c:	br	x17

0000000000005050 <snprintf@plt>:
    5050:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5054:	ldr	x17, [x16, #344]
    5058:	add	x16, x16, #0x158
    505c:	br	x17

0000000000005060 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5060:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5064:	ldr	x17, [x16, #352]
    5068:	add	x16, x16, #0x160
    506c:	br	x17

0000000000005070 <sbrk@plt>:
    5070:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5074:	ldr	x17, [x16, #360]
    5078:	add	x16, x16, #0x168
    507c:	br	x17

0000000000005080 <htab_find_slot@plt>:
    5080:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5084:	ldr	x17, [x16, #368]
    5088:	add	x16, x16, #0x170
    508c:	br	x17

0000000000005090 <_ZdaPv@plt>:
    5090:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5094:	ldr	x17, [x16, #376]
    5098:	add	x16, x16, #0x178
    509c:	br	x17

00000000000050a0 <__errno_location@plt>:
    50a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50a4:	ldr	x17, [x16, #384]
    50a8:	add	x16, x16, #0x180
    50ac:	br	x17

00000000000050b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    50b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50b4:	ldr	x17, [x16, #392]
    50b8:	add	x16, x16, #0x188
    50bc:	br	x17

00000000000050c0 <__ctype_tolower_loc@plt>:
    50c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50c4:	ldr	x17, [x16, #400]
    50c8:	add	x16, x16, #0x190
    50cc:	br	x17

00000000000050d0 <xmalloc@plt>:
    50d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50d4:	ldr	x17, [x16, #408]
    50d8:	add	x16, x16, #0x198
    50dc:	br	x17

00000000000050e0 <fork@plt>:
    50e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50e4:	ldr	x17, [x16, #416]
    50e8:	add	x16, x16, #0x1a0
    50ec:	br	x17

00000000000050f0 <_ZNSt6localeD1Ev@plt>:
    50f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50f4:	ldr	x17, [x16, #424]
    50f8:	add	x16, x16, #0x1a8
    50fc:	br	x17

0000000000005100 <close@plt>:
    5100:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5104:	ldr	x17, [x16, #432]
    5108:	add	x16, x16, #0x1b0
    510c:	br	x17

0000000000005110 <strcmp@plt>:
    5110:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5114:	ldr	x17, [x16, #440]
    5118:	add	x16, x16, #0x1b8
    511c:	br	x17

0000000000005120 <__cxa_rethrow@plt>:
    5120:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5124:	ldr	x17, [x16, #448]
    5128:	add	x16, x16, #0x1c0
    512c:	br	x17

0000000000005130 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5130:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5134:	ldr	x17, [x16, #456]
    5138:	add	x16, x16, #0x1c8
    513c:	br	x17

0000000000005140 <write@plt>:
    5140:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5144:	ldr	x17, [x16, #464]
    5148:	add	x16, x16, #0x1d0
    514c:	br	x17

0000000000005150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    5150:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5154:	ldr	x17, [x16, #472]
    5158:	add	x16, x16, #0x1d8
    515c:	br	x17

0000000000005160 <malloc@plt>:
    5160:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5164:	ldr	x17, [x16, #480]
    5168:	add	x16, x16, #0x1e0
    516c:	br	x17

0000000000005170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5170:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5174:	ldr	x17, [x16, #488]
    5178:	add	x16, x16, #0x1e8
    517c:	br	x17

0000000000005180 <xexit@plt>:
    5180:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5184:	ldr	x17, [x16, #496]
    5188:	add	x16, x16, #0x1f0
    518c:	br	x17

0000000000005190 <abort@plt>:
    5190:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5194:	ldr	x17, [x16, #504]
    5198:	add	x16, x16, #0x1f8
    519c:	br	x17

00000000000051a0 <getenv@plt>:
    51a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51a4:	ldr	x17, [x16, #512]
    51a8:	add	x16, x16, #0x200
    51ac:	br	x17

00000000000051b0 <__cxa_end_catch@plt>:
    51b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51b4:	ldr	x17, [x16, #520]
    51b8:	add	x16, x16, #0x208
    51bc:	br	x17

00000000000051c0 <_ZnamRKSt9nothrow_t@plt>:
    51c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51c4:	ldr	x17, [x16, #528]
    51c8:	add	x16, x16, #0x210
    51cc:	br	x17

00000000000051d0 <xcalloc@plt>:
    51d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51d4:	ldr	x17, [x16, #536]
    51d8:	add	x16, x16, #0x218
    51dc:	br	x17

00000000000051e0 <__gxx_personality_v0@plt>:
    51e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51e4:	ldr	x17, [x16, #544]
    51e8:	add	x16, x16, #0x220
    51ec:	br	x17

00000000000051f0 <htab_find_with_hash@plt>:
    51f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51f4:	ldr	x17, [x16, #552]
    51f8:	add	x16, x16, #0x228
    51fc:	br	x17

0000000000005200 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    5200:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5204:	ldr	x17, [x16, #560]
    5208:	add	x16, x16, #0x230
    520c:	br	x17

0000000000005210 <xregerror@plt>:
    5210:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5214:	ldr	x17, [x16, #568]
    5218:	add	x16, x16, #0x238
    521c:	br	x17

0000000000005220 <exit@plt>:
    5220:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5224:	ldr	x17, [x16, #576]
    5228:	add	x16, x16, #0x240
    522c:	br	x17

0000000000005230 <htab_delete@plt>:
    5230:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5234:	ldr	x17, [x16, #584]
    5238:	add	x16, x16, #0x248
    523c:	br	x17

0000000000005240 <_Unwind_Resume@plt>:
    5240:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5244:	ldr	x17, [x16, #592]
    5248:	add	x16, x16, #0x250
    524c:	br	x17

0000000000005250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    5250:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5254:	ldr	x17, [x16, #600]
    5258:	add	x16, x16, #0x258
    525c:	br	x17

0000000000005260 <xre_search_2@plt>:
    5260:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5264:	ldr	x17, [x16, #608]
    5268:	add	x16, x16, #0x260
    526c:	br	x17

0000000000005270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    5270:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5274:	ldr	x17, [x16, #616]
    5278:	add	x16, x16, #0x268
    527c:	br	x17

0000000000005280 <__gmon_start__@plt>:
    5280:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5284:	ldr	x17, [x16, #624]
    5288:	add	x16, x16, #0x270
    528c:	br	x17

0000000000005290 <bcmp@plt>:
    5290:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5294:	ldr	x17, [x16, #632]
    5298:	add	x16, x16, #0x278
    529c:	br	x17

Disassembly of section .text:

00000000000052a0 <gcc_c_fe_context@@Base-0xdc0>:
    52a0:	adrp	x0, 2a000 <xexit@@Base+0x13b84>
    52a4:	ldr	x0, [x0, #3960]
    52a8:	cbz	x0, 52b0 <bcmp@plt+0x20>
    52ac:	b	5280 <__gmon_start__@plt>
    52b0:	ret
    52b4:	nop
    52b8:	adrp	x0, 2b000 <xexit@@Base+0x14b84>
    52bc:	add	x0, x0, #0x598
    52c0:	adrp	x1, 2b000 <xexit@@Base+0x14b84>
    52c4:	add	x1, x1, #0x598
    52c8:	cmp	x1, x0
    52cc:	b.eq	52e4 <bcmp@plt+0x54>  // b.none
    52d0:	adrp	x1, 2a000 <xexit@@Base+0x13b84>
    52d4:	ldr	x1, [x1, #3904]
    52d8:	cbz	x1, 52e4 <bcmp@plt+0x54>
    52dc:	mov	x16, x1
    52e0:	br	x16
    52e4:	ret
    52e8:	adrp	x0, 2b000 <xexit@@Base+0x14b84>
    52ec:	add	x0, x0, #0x598
    52f0:	adrp	x1, 2b000 <xexit@@Base+0x14b84>
    52f4:	add	x1, x1, #0x598
    52f8:	sub	x1, x1, x0
    52fc:	lsr	x2, x1, #63
    5300:	add	x1, x2, x1, asr #3
    5304:	cmp	xzr, x1, asr #1
    5308:	asr	x1, x1, #1
    530c:	b.eq	5324 <bcmp@plt+0x94>  // b.none
    5310:	adrp	x2, 2a000 <xexit@@Base+0x13b84>
    5314:	ldr	x2, [x2, #3992]
    5318:	cbz	x2, 5324 <bcmp@plt+0x94>
    531c:	mov	x16, x2
    5320:	br	x16
    5324:	ret
    5328:	stp	x29, x30, [sp, #-32]!
    532c:	mov	x29, sp
    5330:	str	x19, [sp, #16]
    5334:	adrp	x19, 2b000 <xexit@@Base+0x14b84>
    5338:	ldrb	w0, [x19, #1432]
    533c:	cbnz	w0, 5364 <bcmp@plt+0xd4>
    5340:	adrp	x0, 2a000 <xexit@@Base+0x13b84>
    5344:	ldr	x0, [x0, #3416]
    5348:	cbz	x0, 5358 <bcmp@plt+0xc8>
    534c:	adrp	x0, 2b000 <xexit@@Base+0x14b84>
    5350:	ldr	x0, [x0, #640]
    5354:	bl	4f20 <__cxa_finalize@plt>
    5358:	bl	52b8 <bcmp@plt+0x28>
    535c:	mov	w0, #0x1                   	// #1
    5360:	strb	w0, [x19, #1432]
    5364:	ldr	x19, [sp, #16]
    5368:	ldp	x29, x30, [sp], #32
    536c:	ret
    5370:	b	52e8 <bcmp@plt+0x58>
    5374:	sub	sp, sp, #0x100
    5378:	stp	x29, x30, [sp, #160]
    537c:	stp	x28, x27, [sp, #176]
    5380:	stp	x26, x25, [sp, #192]
    5384:	stp	x24, x23, [sp, #208]
    5388:	stp	x22, x21, [sp, #224]
    538c:	stp	x20, x19, [sp, #240]
    5390:	add	x29, sp, #0xa0
    5394:	mov	x20, x0
    5398:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    539c:	add	x0, x0, #0x4b8
    53a0:	mov	x19, x1
    53a4:	bl	51a0 <getenv@plt>
    53a8:	cbz	x0, 540c <bcmp@plt+0x17c>
    53ac:	add	x8, sp, #0x30
    53b0:	add	x23, x8, #0x10
    53b4:	mov	x21, x0
    53b8:	str	x23, [sp, #48]
    53bc:	bl	4e50 <strlen@plt>
    53c0:	mov	x22, x0
    53c4:	cmp	x0, #0x10
    53c8:	stur	x0, [x29, #-40]
    53cc:	mov	x0, x23
    53d0:	str	x23, [sp, #8]
    53d4:	b.cc	53f4 <bcmp@plt+0x164>  // b.lo, b.ul, b.last
    53d8:	add	x0, sp, #0x30
    53dc:	sub	x1, x29, #0x28
    53e0:	mov	x2, xzr
    53e4:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    53e8:	ldur	x8, [x29, #-40]
    53ec:	str	x0, [sp, #48]
    53f0:	str	x8, [sp, #64]
    53f4:	cbz	x22, 5420 <bcmp@plt+0x190>
    53f8:	cmp	x22, #0x1
    53fc:	b.ne	5414 <bcmp@plt+0x184>  // b.any
    5400:	ldrb	w8, [x21]
    5404:	strb	w8, [x0]
    5408:	b	5420 <bcmp@plt+0x190>
    540c:	mov	w19, wzr
    5410:	b	56b4 <bcmp@plt+0x424>
    5414:	mov	x1, x21
    5418:	mov	x2, x22
    541c:	bl	4db0 <memcpy@plt>
    5420:	ldur	x8, [x29, #-40]
    5424:	ldr	x9, [sp, #48]
    5428:	sub	x10, x29, #0x48
    542c:	sub	x11, x29, #0x28
    5430:	add	x12, sp, #0x10
    5434:	add	x26, x19, #0x10
    5438:	add	x28, x10, #0x10
    543c:	add	x22, x11, #0x10
    5440:	add	x27, x12, #0x10
    5444:	str	x8, [sp, #56]
    5448:	strb	wzr, [x9, x8]
    544c:	str	xzr, [sp, #80]
    5450:	add	x8, sp, #0x10
    5454:	add	x0, sp, #0x30
    5458:	bl	5794 <bcmp@plt+0x504>
    545c:	ldr	x0, [sp, #16]
    5460:	bl	5020 <opendir@plt>
    5464:	cbz	x0, 54ec <bcmp@plt+0x25c>
    5468:	mov	x21, x0
    546c:	mov	x0, x21
    5470:	bl	5010 <readdir@plt>
    5474:	cbz	x0, 5500 <bcmp@plt+0x270>
    5478:	add	x23, x0, #0x13
    547c:	mov	x0, x20
    5480:	mov	x1, x23
    5484:	mov	x2, xzr
    5488:	mov	x3, xzr
    548c:	mov	w4, wzr
    5490:	bl	4f40 <xregexec@plt>
    5494:	cbnz	w0, 546c <bcmp@plt+0x1dc>
    5498:	ldp	x24, x25, [sp, #16]
    549c:	stur	x28, [x29, #-72]
    54a0:	cbnz	x24, 54a8 <bcmp@plt+0x218>
    54a4:	cbnz	x25, 56d8 <bcmp@plt+0x448>
    54a8:	cmp	x25, #0x10
    54ac:	mov	x0, x28
    54b0:	stur	x25, [x29, #-8]
    54b4:	b.cc	54d4 <bcmp@plt+0x244>  // b.lo, b.ul, b.last
    54b8:	sub	x0, x29, #0x48
    54bc:	sub	x1, x29, #0x8
    54c0:	mov	x2, xzr
    54c4:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    54c8:	ldur	x8, [x29, #-8]
    54cc:	stur	x0, [x29, #-72]
    54d0:	stur	x8, [x29, #-56]
    54d4:	cbz	x25, 5514 <bcmp@plt+0x284>
    54d8:	cmp	x25, #0x1
    54dc:	b.ne	5508 <bcmp@plt+0x278>  // b.any
    54e0:	ldrb	w8, [x24]
    54e4:	strb	w8, [x0]
    54e8:	b	5514 <bcmp@plt+0x284>
    54ec:	mov	w23, #0x1                   	// #1
    54f0:	ldr	x0, [sp, #16]
    54f4:	cmp	x0, x27
    54f8:	b.ne	5670 <bcmp@plt+0x3e0>  // b.any
    54fc:	b	5674 <bcmp@plt+0x3e4>
    5500:	mov	w23, #0x1                   	// #1
    5504:	b	565c <bcmp@plt+0x3cc>
    5508:	mov	x1, x24
    550c:	mov	x2, x25
    5510:	bl	4db0 <memcpy@plt>
    5514:	ldur	x8, [x29, #-8]
    5518:	ldur	x9, [x29, #-72]
    551c:	stur	x8, [x29, #-64]
    5520:	strb	wzr, [x9, x8]
    5524:	ldur	x1, [x29, #-64]
    5528:	sub	x0, x29, #0x48
    552c:	mov	w3, #0x1                   	// #1
    5530:	mov	w4, #0x2f                  	// #47
    5534:	mov	x2, xzr
    5538:	bl	5270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    553c:	mov	x0, x23
    5540:	bl	4e50 <strlen@plt>
    5544:	ldur	x8, [x29, #-64]
    5548:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    554c:	sub	x8, x9, x8
    5550:	cmp	x8, x0
    5554:	b.cc	56e4 <bcmp@plt+0x454>  // b.lo, b.ul, b.last
    5558:	mov	x2, x0
    555c:	sub	x0, x29, #0x48
    5560:	mov	x1, x23
    5564:	bl	4e80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
    5568:	stur	x22, [x29, #-40]
    556c:	mov	x8, x0
    5570:	ldr	x9, [x8], #16
    5574:	cmp	x9, x8
    5578:	b.eq	558c <bcmp@plt+0x2fc>  // b.none
    557c:	stur	x9, [x29, #-40]
    5580:	ldr	x9, [x0, #16]
    5584:	stur	x9, [x29, #-24]
    5588:	b	5594 <bcmp@plt+0x304>
    558c:	ldr	q0, [x9]
    5590:	str	q0, [x22]
    5594:	ldr	x9, [x0, #8]
    5598:	stur	x9, [x29, #-32]
    559c:	stp	x8, xzr, [x0]
    55a0:	strb	wzr, [x0, #16]
    55a4:	ldur	x9, [x29, #-40]
    55a8:	cmp	x9, x22
    55ac:	b.eq	55dc <bcmp@plt+0x34c>  // b.none
    55b0:	ldr	x8, [x19]
    55b4:	cmp	x8, x26
    55b8:	b.eq	55fc <bcmp@plt+0x36c>  // b.none
    55bc:	str	x9, [x19]
    55c0:	ldur	q0, [x29, #-32]
    55c4:	ldr	x9, [x19, #16]
    55c8:	stur	q0, [x19, #8]
    55cc:	cbz	x8, 5608 <bcmp@plt+0x378>
    55d0:	stur	x8, [x29, #-40]
    55d4:	stur	x9, [x29, #-24]
    55d8:	b	5630 <bcmp@plt+0x3a0>
    55dc:	ldur	x2, [x29, #-32]
    55e0:	cbz	x2, 561c <bcmp@plt+0x38c>
    55e4:	ldr	x0, [x19]
    55e8:	cmp	x2, #0x1
    55ec:	b.ne	5614 <bcmp@plt+0x384>  // b.any
    55f0:	ldurb	w8, [x29, #-24]
    55f4:	strb	w8, [x0]
    55f8:	b	561c <bcmp@plt+0x38c>
    55fc:	str	x9, [x19]
    5600:	ldur	q0, [x29, #-32]
    5604:	stur	q0, [x19, #8]
    5608:	stur	x22, [x29, #-40]
    560c:	mov	x8, x22
    5610:	b	5630 <bcmp@plt+0x3a0>
    5614:	mov	x1, x22
    5618:	bl	4db0 <memcpy@plt>
    561c:	ldur	x8, [x29, #-32]
    5620:	ldr	x9, [x19]
    5624:	str	x8, [x19, #8]
    5628:	strb	wzr, [x9, x8]
    562c:	ldur	x8, [x29, #-40]
    5630:	stur	xzr, [x29, #-32]
    5634:	strb	wzr, [x8]
    5638:	ldur	x0, [x29, #-40]
    563c:	cmp	x0, x22
    5640:	b.eq	5648 <bcmp@plt+0x3b8>  // b.none
    5644:	bl	4ff0 <_ZdlPv@plt>
    5648:	ldur	x0, [x29, #-72]
    564c:	cmp	x0, x28
    5650:	b.eq	5658 <bcmp@plt+0x3c8>  // b.none
    5654:	bl	4ff0 <_ZdlPv@plt>
    5658:	mov	w23, wzr
    565c:	mov	x0, x21
    5660:	bl	4fb0 <closedir@plt>
    5664:	ldr	x0, [sp, #16]
    5668:	cmp	x0, x27
    566c:	b.eq	5674 <bcmp@plt+0x3e4>  // b.none
    5670:	bl	4ff0 <_ZdlPv@plt>
    5674:	tbz	w23, #0, 569c <bcmp@plt+0x40c>
    5678:	ldr	x8, [sp, #80]
    567c:	cmn	x8, #0x1
    5680:	b.ne	5450 <bcmp@plt+0x1c0>  // b.any
    5684:	mov	w19, wzr
    5688:	ldr	x0, [sp, #48]
    568c:	ldr	x8, [sp, #8]
    5690:	cmp	x0, x8
    5694:	b.ne	56b0 <bcmp@plt+0x420>  // b.any
    5698:	b	56b4 <bcmp@plt+0x424>
    569c:	mov	w19, #0x1                   	// #1
    56a0:	ldr	x0, [sp, #48]
    56a4:	ldr	x8, [sp, #8]
    56a8:	cmp	x0, x8
    56ac:	b.eq	56b4 <bcmp@plt+0x424>  // b.none
    56b0:	bl	4ff0 <_ZdlPv@plt>
    56b4:	mov	w0, w19
    56b8:	ldp	x20, x19, [sp, #240]
    56bc:	ldp	x22, x21, [sp, #224]
    56c0:	ldp	x24, x23, [sp, #208]
    56c4:	ldp	x26, x25, [sp, #192]
    56c8:	ldp	x28, x27, [sp, #176]
    56cc:	ldp	x29, x30, [sp, #160]
    56d0:	add	sp, sp, #0x100
    56d4:	ret
    56d8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    56dc:	add	x0, x0, #0x4bd
    56e0:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    56e4:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    56e8:	add	x0, x0, #0x535
    56ec:	bl	4ee0 <_ZSt20__throw_length_errorPKc@plt>
    56f0:	b	56fc <bcmp@plt+0x46c>
    56f4:	b	5744 <bcmp@plt+0x4b4>
    56f8:	b	5744 <bcmp@plt+0x4b4>
    56fc:	mov	x19, x0
    5700:	ldur	x0, [x29, #-72]
    5704:	cmp	x0, x28
    5708:	b.ne	5724 <bcmp@plt+0x494>  // b.any
    570c:	b	5748 <bcmp@plt+0x4b8>
    5710:	ldur	x8, [x29, #-72]
    5714:	mov	x19, x0
    5718:	cmp	x8, x28
    571c:	b.eq	5748 <bcmp@plt+0x4b8>  // b.none
    5720:	mov	x0, x8
    5724:	bl	4ff0 <_ZdlPv@plt>
    5728:	b	5748 <bcmp@plt+0x4b8>
    572c:	mov	x19, x0
    5730:	ldr	x0, [sp, #48]
    5734:	ldr	x8, [sp, #8]
    5738:	cmp	x0, x8
    573c:	b.eq	576c <bcmp@plt+0x4dc>  // b.none
    5740:	b	5788 <bcmp@plt+0x4f8>
    5744:	mov	x19, x0
    5748:	mov	x0, x21
    574c:	bl	4fb0 <closedir@plt>
    5750:	ldr	x0, [sp, #16]
    5754:	cmp	x0, x27
    5758:	b.ne	5774 <bcmp@plt+0x4e4>  // b.any
    575c:	ldr	x0, [sp, #48]
    5760:	ldr	x8, [sp, #8]
    5764:	cmp	x0, x8
    5768:	b.ne	5788 <bcmp@plt+0x4f8>  // b.any
    576c:	mov	x0, x19
    5770:	bl	5240 <_Unwind_Resume@plt>
    5774:	bl	4ff0 <_ZdlPv@plt>
    5778:	ldr	x0, [sp, #48]
    577c:	ldr	x8, [sp, #8]
    5780:	cmp	x0, x8
    5784:	b.eq	576c <bcmp@plt+0x4dc>  // b.none
    5788:	bl	4ff0 <_ZdlPv@plt>
    578c:	mov	x0, x19
    5790:	bl	5240 <_Unwind_Resume@plt>
    5794:	sub	sp, sp, #0x70
    5798:	stp	x29, x30, [sp, #48]
    579c:	stp	x24, x23, [sp, #64]
    57a0:	stp	x22, x21, [sp, #80]
    57a4:	stp	x20, x19, [sp, #96]
    57a8:	add	x29, sp, #0x30
    57ac:	ldr	x20, [x0, #32]
    57b0:	mov	w1, #0x3a                  	// #58
    57b4:	mov	x22, x0
    57b8:	mov	x19, x8
    57bc:	mov	x2, x20
    57c0:	bl	50b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    57c4:	mov	x23, x19
    57c8:	cmn	x0, #0x1
    57cc:	strb	wzr, [x23, #16]!
    57d0:	stp	x23, xzr, [x19]
    57d4:	b.eq	5834 <bcmp@plt+0x5a4>  // b.none
    57d8:	ldr	x3, [x22, #8]
    57dc:	add	x9, x0, #0x1
    57e0:	str	x9, [x22, #32]
    57e4:	subs	x8, x3, x20
    57e8:	b.cc	59a4 <bcmp@plt+0x714>  // b.lo, b.ul, b.last
    57ec:	add	x10, sp, #0x8
    57f0:	add	x21, x10, #0x10
    57f4:	str	x21, [sp, #8]
    57f8:	ldr	x24, [x22]
    57fc:	sub	x9, x0, x20
    5800:	cmp	x8, x9
    5804:	csel	x22, x9, x8, hi  // hi = pmore
    5808:	cbz	x22, 5810 <bcmp@plt+0x580>
    580c:	cbz	x24, 59bc <bcmp@plt+0x72c>
    5810:	cmp	x22, #0x10
    5814:	mov	x0, x21
    5818:	stur	x22, [x29, #-8]
    581c:	b.cc	5890 <bcmp@plt+0x600>  // b.lo, b.ul, b.last
    5820:	add	x0, sp, #0x8
    5824:	sub	x1, x29, #0x8
    5828:	mov	x2, xzr
    582c:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5830:	b	5884 <bcmp@plt+0x5f4>
    5834:	ldr	x3, [x22, #8]
    5838:	mov	x8, #0xffffffffffffffff    	// #-1
    583c:	str	x8, [x22, #32]
    5840:	cmp	x3, x20
    5844:	b.cc	59c8 <bcmp@plt+0x738>  // b.lo, b.ul, b.last
    5848:	add	x8, sp, #0x8
    584c:	add	x21, x8, #0x10
    5850:	str	x21, [sp, #8]
    5854:	ldr	x24, [x22]
    5858:	subs	x22, x3, x20
    585c:	b.eq	5864 <bcmp@plt+0x5d4>  // b.none
    5860:	cbz	x24, 59e0 <bcmp@plt+0x750>
    5864:	cmp	x22, #0x10
    5868:	mov	x0, x21
    586c:	stur	x22, [x29, #-8]
    5870:	b.cc	5890 <bcmp@plt+0x600>  // b.lo, b.ul, b.last
    5874:	add	x0, sp, #0x8
    5878:	sub	x1, x29, #0x8
    587c:	mov	x2, xzr
    5880:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5884:	ldur	x8, [x29, #-8]
    5888:	str	x0, [sp, #8]
    588c:	str	x8, [sp, #24]
    5890:	cbz	x22, 58b4 <bcmp@plt+0x624>
    5894:	cmp	x22, #0x1
    5898:	add	x1, x24, x20
    589c:	b.ne	58ac <bcmp@plt+0x61c>  // b.any
    58a0:	ldrb	w8, [x1]
    58a4:	strb	w8, [x0]
    58a8:	b	58b4 <bcmp@plt+0x624>
    58ac:	mov	x2, x22
    58b0:	bl	4db0 <memcpy@plt>
    58b4:	ldur	x8, [x29, #-8]
    58b8:	ldr	x9, [sp, #8]
    58bc:	str	x8, [sp, #16]
    58c0:	strb	wzr, [x9, x8]
    58c4:	ldr	x9, [sp, #8]
    58c8:	cmp	x9, x21
    58cc:	b.eq	58fc <bcmp@plt+0x66c>  // b.none
    58d0:	ldr	x8, [x19]
    58d4:	ldr	x10, [x19, #16]
    58d8:	ldur	q0, [sp, #16]
    58dc:	str	x9, [x19]
    58e0:	cmp	x8, x23
    58e4:	csel	x8, xzr, x8, eq  // eq = none
    58e8:	stur	q0, [x19, #8]
    58ec:	cbz	x8, 591c <bcmp@plt+0x68c>
    58f0:	str	x8, [sp, #8]
    58f4:	str	x10, [sp, #24]
    58f8:	b	5944 <bcmp@plt+0x6b4>
    58fc:	ldr	x2, [sp, #16]
    5900:	cbz	x2, 5930 <bcmp@plt+0x6a0>
    5904:	ldr	x0, [x19]
    5908:	cmp	x2, #0x1
    590c:	b.ne	5928 <bcmp@plt+0x698>  // b.any
    5910:	ldrb	w8, [sp, #24]
    5914:	strb	w8, [x0]
    5918:	b	5930 <bcmp@plt+0x6a0>
    591c:	mov	x8, x21
    5920:	str	x21, [sp, #8]
    5924:	b	5944 <bcmp@plt+0x6b4>
    5928:	mov	x1, x21
    592c:	bl	4db0 <memcpy@plt>
    5930:	ldr	x8, [sp, #16]
    5934:	ldr	x9, [x19]
    5938:	str	x8, [x19, #8]
    593c:	strb	wzr, [x9, x8]
    5940:	ldr	x8, [sp, #8]
    5944:	str	xzr, [sp, #16]
    5948:	strb	wzr, [x8]
    594c:	ldr	x0, [sp, #8]
    5950:	cmp	x0, x21
    5954:	b.eq	595c <bcmp@plt+0x6cc>  // b.none
    5958:	bl	4ff0 <_ZdlPv@plt>
    595c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    5960:	add	x1, x1, #0x722
    5964:	mov	x0, x19
    5968:	bl	4e40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    596c:	cbnz	w0, 598c <bcmp@plt+0x6fc>
    5970:	ldr	x2, [x19, #8]
    5974:	adrp	x3, 16000 <htab_collisions@@Base+0x8>
    5978:	add	x3, x3, #0x4e7
    597c:	mov	w4, #0x1                   	// #1
    5980:	mov	x0, x19
    5984:	mov	x1, xzr
    5988:	bl	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    598c:	ldp	x20, x19, [sp, #96]
    5990:	ldp	x22, x21, [sp, #80]
    5994:	ldp	x24, x23, [sp, #64]
    5998:	ldp	x29, x30, [sp, #48]
    599c:	add	sp, sp, #0x70
    59a0:	ret
    59a4:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    59a8:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    59ac:	add	x0, x0, #0x4fe
    59b0:	add	x1, x1, #0x4e9
    59b4:	mov	x2, x20
    59b8:	bl	5130 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    59bc:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    59c0:	add	x0, x0, #0x4bd
    59c4:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    59c8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    59cc:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    59d0:	add	x0, x0, #0x4fe
    59d4:	add	x1, x1, #0x4e9
    59d8:	mov	x2, x20
    59dc:	bl	5130 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    59e0:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    59e4:	add	x0, x0, #0x4bd
    59e8:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    59ec:	b	59f4 <bcmp@plt+0x764>
    59f0:	b	59f4 <bcmp@plt+0x764>
    59f4:	mov	x20, x0
    59f8:	ldr	x0, [x19]
    59fc:	cmp	x0, x23
    5a00:	b.eq	5a08 <bcmp@plt+0x778>  // b.none
    5a04:	bl	4ff0 <_ZdlPv@plt>
    5a08:	mov	x0, x20
    5a0c:	bl	5240 <_Unwind_Resume@plt>
    5a10:	stp	x29, x30, [sp, #-32]!
    5a14:	str	x19, [sp, #16]
    5a18:	mov	x29, sp
    5a1c:	mov	x19, x1
    5a20:	add	x1, x29, #0x18
    5a24:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    5a28:	cbz	w0, 5a38 <bcmp@plt+0x7a8>
    5a2c:	ldr	x8, [x29, #24]
    5a30:	mov	w0, #0x1                   	// #1
    5a34:	str	w8, [x19]
    5a38:	ldr	x19, [sp, #16]
    5a3c:	ldp	x29, x30, [sp], #32
    5a40:	ret
    5a44:	stp	x29, x30, [sp, #-32]!
    5a48:	str	x19, [sp, #16]
    5a4c:	mov	x29, sp
    5a50:	mov	x19, x1
    5a54:	add	x1, x29, #0x18
    5a58:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    5a5c:	cbz	w0, 5a6c <bcmp@plt+0x7dc>
    5a60:	ldr	x8, [x29, #24]
    5a64:	mov	w0, #0x1                   	// #1
    5a68:	str	w8, [x19]
    5a6c:	ldr	x19, [sp, #16]
    5a70:	ldp	x29, x30, [sp], #32
    5a74:	ret
    5a78:	stp	x29, x30, [sp, #-32]!
    5a7c:	str	x19, [sp, #16]
    5a80:	mov	x29, sp
    5a84:	mov	x19, x1
    5a88:	add	x1, x29, #0x18
    5a8c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    5a90:	cbz	w0, 5aa0 <bcmp@plt+0x810>
    5a94:	ldr	x8, [x29, #24]
    5a98:	mov	w0, #0x1                   	// #1
    5a9c:	str	w8, [x19]
    5aa0:	ldr	x19, [sp, #16]
    5aa4:	ldp	x29, x30, [sp], #32
    5aa8:	ret
    5aac:	stp	x29, x30, [sp, #-48]!
    5ab0:	str	x21, [sp, #16]
    5ab4:	stp	x20, x19, [sp, #32]
    5ab8:	mov	x29, sp
    5abc:	movi	v0.2d, #0x0
    5ac0:	mov	x8, x0
    5ac4:	stp	q0, q0, [x0, #48]
    5ac8:	stp	q0, q0, [x0, #16]
    5acc:	strb	wzr, [x8, #104]!
    5ad0:	mov	x21, x0
    5ad4:	stp	xzr, x8, [x0, #80]
    5ad8:	str	xzr, [x0, #96]
    5adc:	strb	wzr, [x0, #120]
    5ae0:	mov	w0, #0x10                  	// #16
    5ae4:	mov	x19, x2
    5ae8:	mov	x20, x1
    5aec:	bl	5000 <_Znwm@plt>
    5af0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5af4:	add	x8, x8, #0x538
    5af8:	stp	x8, x21, [x0]
    5afc:	str	x0, [x21, #128]
    5b00:	stp	x20, x19, [x21]
    5b04:	ldp	x20, x19, [sp, #32]
    5b08:	ldr	x21, [sp, #16]
    5b0c:	ldp	x29, x30, [sp], #48
    5b10:	ret
    5b14:	stp	x29, x30, [sp, #-48]!
    5b18:	str	x21, [sp, #16]
    5b1c:	stp	x20, x19, [sp, #32]
    5b20:	mov	x29, sp
    5b24:	mov	x19, x0
    5b28:	ldr	x0, [x0, #16]
    5b2c:	cbz	x0, 5b3c <bcmp@plt+0x8ac>
    5b30:	ldr	x8, [x0]
    5b34:	ldr	x8, [x8, #8]
    5b38:	blr	x8
    5b3c:	ldr	x0, [x19, #128]
    5b40:	cbz	x0, 5b50 <bcmp@plt+0x8c0>
    5b44:	ldr	x8, [x0]
    5b48:	ldr	x8, [x8, #16]
    5b4c:	blr	x8
    5b50:	ldr	x0, [x19, #88]
    5b54:	add	x8, x19, #0x68
    5b58:	cmp	x0, x8
    5b5c:	b.eq	5b64 <bcmp@plt+0x8d4>  // b.none
    5b60:	bl	4ff0 <_ZdlPv@plt>
    5b64:	ldp	x20, x21, [x19, #64]
    5b68:	cmp	x20, x21
    5b6c:	b.ne	5b94 <bcmp@plt+0x904>  // b.any
    5b70:	cbz	x20, 5bb0 <bcmp@plt+0x920>
    5b74:	mov	x0, x20
    5b78:	ldp	x20, x19, [sp, #32]
    5b7c:	ldr	x21, [sp, #16]
    5b80:	ldp	x29, x30, [sp], #48
    5b84:	b	4ff0 <_ZdlPv@plt>
    5b88:	add	x20, x20, #0x10
    5b8c:	cmp	x20, x21
    5b90:	b.eq	5ba8 <bcmp@plt+0x918>  // b.none
    5b94:	ldr	x0, [x20], #16
    5b98:	cmp	x0, x20
    5b9c:	b.eq	5b88 <bcmp@plt+0x8f8>  // b.none
    5ba0:	bl	4ff0 <_ZdlPv@plt>
    5ba4:	b	5b88 <bcmp@plt+0x8f8>
    5ba8:	ldr	x20, [x19, #64]
    5bac:	cbnz	x20, 5b74 <bcmp@plt+0x8e4>
    5bb0:	ldp	x20, x19, [sp, #32]
    5bb4:	ldr	x21, [sp, #16]
    5bb8:	ldp	x29, x30, [sp], #48
    5bbc:	ret
    5bc0:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    5bc4:	add	x0, x0, #0x621
    5bc8:	b	4ed0 <xstrdup@plt>
    5bcc:	stp	x29, x30, [sp, #-80]!
    5bd0:	stp	x28, x25, [sp, #16]
    5bd4:	stp	x24, x23, [sp, #32]
    5bd8:	stp	x22, x21, [sp, #48]
    5bdc:	stp	x20, x19, [sp, #64]
    5be0:	mov	x29, sp
    5be4:	sub	sp, sp, #0x1b0
    5be8:	mov	x19, sp
    5bec:	ldr	x23, [x0, #16]
    5bf0:	mov	x21, x0
    5bf4:	add	x0, x19, #0x20
    5bf8:	mov	x20, x1
    5bfc:	add	x22, x19, #0x20
    5c00:	bl	4f80 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    5c04:	add	x22, x22, #0x10
    5c08:	adrp	x1, 17000 <xexit@@Base+0xb84>
    5c0c:	add	x1, x1, #0x23b
    5c10:	mov	w2, #0x1                   	// #1
    5c14:	mov	x0, x22
    5c18:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5c1c:	cbz	x23, 5c3c <bcmp@plt+0x9ac>
    5c20:	mov	x0, x23
    5c24:	bl	4e50 <strlen@plt>
    5c28:	mov	x2, x0
    5c2c:	mov	x0, x22
    5c30:	mov	x1, x23
    5c34:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5c38:	b	5c54 <bcmp@plt+0x9c4>
    5c3c:	ldr	x8, [x19, #48]
    5c40:	ldur	x8, [x8, #-24]
    5c44:	add	x0, x22, x8
    5c48:	ldr	w8, [x0, #32]
    5c4c:	orr	w1, w8, #0x1
    5c50:	bl	5200 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    5c54:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    5c58:	add	x1, x1, #0x6eb
    5c5c:	mov	w2, #0x1                   	// #1
    5c60:	mov	x0, x22
    5c64:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5c68:	adrp	x23, 16000 <htab_collisions@@Base+0x8>
    5c6c:	adrp	x24, 16000 <htab_collisions@@Base+0x8>
    5c70:	add	x23, x23, #0x641
    5c74:	add	x24, x24, #0x54a
    5c78:	mov	w25, #0x5c                  	// #92
    5c7c:	ldrb	w8, [x23]
    5c80:	cmp	w8, #0x7c
    5c84:	b.hi	5cb0 <bcmp@plt+0xa20>  // b.pmore
    5c88:	adr	x9, 5c98 <bcmp@plt+0xa08>
    5c8c:	ldrb	w10, [x24, x8]
    5c90:	add	x9, x9, x10, lsl #2
    5c94:	br	x9
    5c98:	sturb	w25, [x29, #-4]
    5c9c:	sub	x1, x29, #0x4
    5ca0:	mov	w2, #0x1                   	// #1
    5ca4:	mov	x0, x22
    5ca8:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5cac:	ldrb	w8, [x23]
    5cb0:	sturb	w8, [x29, #-4]
    5cb4:	sub	x1, x29, #0x4
    5cb8:	mov	w2, #0x1                   	// #1
    5cbc:	mov	x0, x22
    5cc0:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5cc4:	ldrb	w8, [x23, #1]!
    5cc8:	cmp	w8, #0x7c
    5ccc:	b.ls	5c88 <bcmp@plt+0x9f8>  // b.plast
    5cd0:	b	5cb0 <bcmp@plt+0xa20>
    5cd4:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    5cd8:	add	x1, x1, #0x6ed
    5cdc:	mov	w2, #0x1                   	// #1
    5ce0:	mov	x0, x22
    5ce4:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5ce8:	ldr	x8, [x19, #96]
    5cec:	add	x9, x19, #0x0
    5cf0:	add	x23, x9, #0x10
    5cf4:	stp	x23, xzr, [x19]
    5cf8:	strb	wzr, [x19, #16]
    5cfc:	cbz	x8, 5d24 <bcmp@plt+0xa94>
    5d00:	ldp	x9, x3, [x19, #80]
    5d04:	cmp	x8, x9
    5d08:	b.ls	5d38 <bcmp@plt+0xaa8>  // b.plast
    5d0c:	sub	x4, x8, x3
    5d10:	add	x0, x19, #0x0
    5d14:	mov	x1, xzr
    5d18:	mov	x2, xzr
    5d1c:	bl	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5d20:	b	5d4c <bcmp@plt+0xabc>
    5d24:	add	x8, x19, #0x20
    5d28:	add	x1, x8, #0x60
    5d2c:	add	x0, x19, #0x0
    5d30:	bl	4ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    5d34:	b	5d4c <bcmp@plt+0xabc>
    5d38:	sub	x4, x9, x3
    5d3c:	add	x0, x19, #0x0
    5d40:	mov	x1, xzr
    5d44:	mov	x2, xzr
    5d48:	bl	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5d4c:	adrp	x22, 2a000 <xexit@@Base+0x13b84>
    5d50:	ldr	x22, [x22, #3304]
    5d54:	add	x24, x19, #0x20
    5d58:	ldr	x8, [x22]
    5d5c:	ldp	x9, x10, [x22, #64]
    5d60:	str	x8, [x19, #32]
    5d64:	ldur	x8, [x8, #-24]
    5d68:	str	x9, [x24, x8]
    5d6c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5d70:	ldr	x0, [x19, #128]
    5d74:	ldr	x8, [x8, #4048]
    5d78:	add	x9, x24, #0x70
    5d7c:	cmp	x0, x9
    5d80:	add	x8, x8, #0x10
    5d84:	stp	x10, x8, [x19, #48]
    5d88:	b.eq	5d90 <bcmp@plt+0xb00>  // b.none
    5d8c:	bl	4ff0 <_ZdlPv@plt>
    5d90:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5d94:	ldr	x8, [x8, #3440]
    5d98:	add	x0, x24, #0x50
    5d9c:	add	x8, x8, #0x10
    5da0:	str	x8, [x19, #56]
    5da4:	bl	50f0 <_ZNSt6localeD1Ev@plt>
    5da8:	ldp	x8, x9, [x22, #16]
    5dac:	add	x0, x24, #0x80
    5db0:	str	x8, [x19, #32]
    5db4:	ldur	x8, [x8, #-24]
    5db8:	str	x9, [x24, x8]
    5dbc:	str	xzr, [x19, #40]
    5dc0:	bl	4e90 <_ZNSt8ios_baseD2Ev@plt>
    5dc4:	ldr	x8, [x21, #8]
    5dc8:	ldrb	w8, [x8, #120]
    5dcc:	cbnz	w8, 5ef0 <bcmp@plt+0xc60>
    5dd0:	ldr	x1, [x19]
    5dd4:	add	x0, x19, #0x20
    5dd8:	mov	w2, #0x9                   	// #9
    5ddc:	bl	4dd0 <xregcomp@plt>
    5de0:	mov	w22, w0
    5de4:	cbz	w0, 5e60 <bcmp@plt+0xbd0>
    5de8:	add	x1, x19, #0x20
    5dec:	mov	w0, w22
    5df0:	mov	x2, xzr
    5df4:	mov	x3, xzr
    5df8:	bl	5210 <xregerror@plt>
    5dfc:	add	x9, x0, #0xf
    5e00:	mov	x8, sp
    5e04:	and	x9, x9, #0xfffffffffffffff0
    5e08:	mov	x21, sp
    5e0c:	sub	x20, x8, x9
    5e10:	mov	x3, x0
    5e14:	mov	sp, x20
    5e18:	add	x1, x19, #0x20
    5e1c:	mov	w0, w22
    5e20:	mov	x2, x20
    5e24:	bl	5210 <xregerror@plt>
    5e28:	ldr	x1, [x19]
    5e2c:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    5e30:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    5e34:	add	x0, x0, #0x66f
    5e38:	add	x2, x2, #0x68a
    5e3c:	mov	x3, x20
    5e40:	mov	x4, xzr
    5e44:	bl	4fc0 <concat@plt>
    5e48:	mov	x20, x0
    5e4c:	mov	sp, x21
    5e50:	ldr	x0, [x19]
    5e54:	cmp	x0, x23
    5e58:	b.ne	5e94 <bcmp@plt+0xc04>  // b.any
    5e5c:	b	5e98 <bcmp@plt+0xc08>
    5e60:	add	x0, x19, #0x20
    5e64:	mov	x1, x20
    5e68:	bl	5374 <bcmp@plt+0xe4>
    5e6c:	tbz	w0, #0, 5eb8 <bcmp@plt+0xc28>
    5e70:	add	x0, x19, #0x20
    5e74:	bl	4e70 <xregfree@plt>
    5e78:	ldr	x8, [x21, #8]
    5e7c:	ldrb	w8, [x8, #120]
    5e80:	cbnz	w8, 5f10 <bcmp@plt+0xc80>
    5e84:	mov	x20, xzr
    5e88:	ldr	x0, [x19]
    5e8c:	cmp	x0, x23
    5e90:	b.eq	5e98 <bcmp@plt+0xc08>  // b.none
    5e94:	bl	4ff0 <_ZdlPv@plt>
    5e98:	mov	x0, x20
    5e9c:	mov	sp, x29
    5ea0:	ldp	x20, x19, [sp, #64]
    5ea4:	ldp	x22, x21, [sp, #48]
    5ea8:	ldp	x24, x23, [sp, #32]
    5eac:	ldp	x28, x25, [sp, #16]
    5eb0:	ldp	x29, x30, [sp], #80
    5eb4:	ret
    5eb8:	add	x0, x19, #0x20
    5ebc:	bl	4e70 <xregfree@plt>
    5ec0:	ldr	x1, [x19]
    5ec4:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    5ec8:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    5ecc:	add	x0, x0, #0x68e
    5ed0:	add	x2, x2, #0x6b1
    5ed4:	mov	x3, xzr
    5ed8:	bl	4fc0 <concat@plt>
    5edc:	mov	x20, x0
    5ee0:	ldr	x0, [x19]
    5ee4:	cmp	x0, x23
    5ee8:	b.ne	5e94 <bcmp@plt+0xc04>  // b.any
    5eec:	b	5e98 <bcmp@plt+0xc08>
    5ef0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5ef4:	ldr	x8, [x8, #3968]
    5ef8:	ldr	x2, [x19]
    5efc:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    5f00:	add	x1, x1, #0x645
    5f04:	ldr	x0, [x8]
    5f08:	bl	4e60 <fprintf@plt>
    5f0c:	b	5dd0 <bcmp@plt+0xb40>
    5f10:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5f14:	ldr	x8, [x8, #3968]
    5f18:	ldr	x2, [x20]
    5f1c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    5f20:	add	x1, x1, #0x6b3
    5f24:	ldr	x0, [x8]
    5f28:	bl	4e60 <fprintf@plt>
    5f2c:	mov	x20, xzr
    5f30:	ldr	x0, [x19]
    5f34:	cmp	x0, x23
    5f38:	b.ne	5e94 <bcmp@plt+0xc04>  // b.any
    5f3c:	b	5e98 <bcmp@plt+0xc08>
    5f40:	ldr	x8, [x19]
    5f44:	mov	x20, x0
    5f48:	cmp	x8, x23
    5f4c:	b.eq	5f84 <bcmp@plt+0xcf4>  // b.none
    5f50:	mov	x0, x8
    5f54:	bl	4ff0 <_ZdlPv@plt>
    5f58:	b	5f84 <bcmp@plt+0xcf4>
    5f5c:	b	5f60 <bcmp@plt+0xcd0>
    5f60:	mov	x20, x0
    5f64:	ldr	x0, [x19]
    5f68:	cmp	x0, x23
    5f6c:	b.eq	5f74 <bcmp@plt+0xce4>  // b.none
    5f70:	bl	4ff0 <_ZdlPv@plt>
    5f74:	mov	x0, x20
    5f78:	bl	5240 <_Unwind_Resume@plt>
    5f7c:	b	5f80 <bcmp@plt+0xcf0>
    5f80:	mov	x20, x0
    5f84:	adrp	x21, 2a000 <xexit@@Base+0x13b84>
    5f88:	ldr	x21, [x21, #3304]
    5f8c:	add	x22, x19, #0x20
    5f90:	ldr	x8, [x21]
    5f94:	ldp	x9, x10, [x21, #64]
    5f98:	str	x8, [x19, #32]
    5f9c:	ldur	x8, [x8, #-24]
    5fa0:	str	x9, [x22, x8]
    5fa4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5fa8:	ldr	x0, [x19, #128]
    5fac:	ldr	x8, [x8, #4048]
    5fb0:	add	x9, x22, #0x70
    5fb4:	cmp	x0, x9
    5fb8:	add	x8, x8, #0x10
    5fbc:	stp	x10, x8, [x19, #48]
    5fc0:	b.eq	5fc8 <bcmp@plt+0xd38>  // b.none
    5fc4:	bl	4ff0 <_ZdlPv@plt>
    5fc8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    5fcc:	ldr	x8, [x8, #3440]
    5fd0:	add	x0, x22, #0x50
    5fd4:	add	x8, x8, #0x10
    5fd8:	str	x8, [x19, #56]
    5fdc:	bl	50f0 <_ZNSt6localeD1Ev@plt>
    5fe0:	ldp	x8, x9, [x21, #16]
    5fe4:	add	x0, x22, #0x80
    5fe8:	str	x8, [x19, #32]
    5fec:	ldur	x8, [x8, #-24]
    5ff0:	str	x9, [x22, x8]
    5ff4:	str	xzr, [x19, #40]
    5ff8:	bl	4e90 <_ZNSt8ios_baseD2Ev@plt>
    5ffc:	mov	x0, x20
    6000:	bl	5240 <_Unwind_Resume@plt>
    6004:	stp	x29, x30, [sp, #-32]!
    6008:	stp	x20, x19, [sp, #16]
    600c:	mov	x29, sp
    6010:	ldr	x8, [x0, #8]
    6014:	mov	x19, x0
    6018:	mov	x20, x1
    601c:	ldrb	w8, [x8, #120]
    6020:	cbnz	w8, 6040 <bcmp@plt+0xdb0>
    6024:	add	x1, x19, #0x10
    6028:	mov	x0, x20
    602c:	bl	4ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    6030:	ldp	x20, x19, [sp, #16]
    6034:	mov	x0, xzr
    6038:	ldp	x29, x30, [sp], #32
    603c:	ret
    6040:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    6044:	ldr	x8, [x8, #3968]
    6048:	ldr	x2, [x19, #16]
    604c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    6050:	add	x1, x1, #0x6c6
    6054:	ldr	x0, [x8]
    6058:	bl	4e60 <fprintf@plt>
    605c:	b	6024 <bcmp@plt+0xd94>

0000000000006060 <gcc_c_fe_context@@Base>:
    6060:	stp	x29, x30, [sp, #-32]!
    6064:	stp	x20, x19, [sp, #16]
    6068:	mov	x29, sp
    606c:	orr	w8, w1, w0
    6070:	cmp	w8, #0x1
    6074:	b.ls	608c <gcc_c_fe_context@@Base+0x2c>  // b.plast
    6078:	mov	x19, xzr
    607c:	mov	x0, x19
    6080:	ldp	x20, x19, [sp, #16]
    6084:	ldp	x29, x30, [sp], #32
    6088:	ret
    608c:	mov	w0, #0x88                  	// #136
    6090:	bl	5000 <_Znwm@plt>
    6094:	movi	v0.2d, #0x0
    6098:	mov	x8, x0
    609c:	mov	x19, x0
    60a0:	stp	q0, q0, [x0, #16]
    60a4:	stp	q0, q0, [x0, #48]
    60a8:	strb	wzr, [x8, #104]!
    60ac:	stp	xzr, x8, [x0, #80]
    60b0:	str	xzr, [x0, #96]
    60b4:	strb	wzr, [x0, #120]
    60b8:	mov	w0, #0x10                  	// #16
    60bc:	bl	5000 <_Znwm@plt>
    60c0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    60c4:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    60c8:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    60cc:	add	x8, x8, #0x538
    60d0:	add	x9, x9, #0x3f0
    60d4:	add	x10, x10, #0x448
    60d8:	str	x0, [x19, #128]
    60dc:	stp	x8, x19, [x0]
    60e0:	stp	x9, x10, [x19]
    60e4:	mov	x0, x19
    60e8:	ldp	x20, x19, [sp, #16]
    60ec:	ldp	x29, x30, [sp], #32
    60f0:	ret
    60f4:	mov	x20, x0
    60f8:	mov	x0, x19
    60fc:	bl	4ff0 <_ZdlPv@plt>
    6100:	mov	x0, x20
    6104:	bl	5240 <_Unwind_Resume@plt>
    6108:	stp	x29, x30, [sp, #-48]!
    610c:	str	x21, [sp, #16]
    6110:	stp	x20, x19, [sp, #32]
    6114:	mov	x29, sp
    6118:	mov	x19, x3
    611c:	mov	w20, w2
    6120:	mov	x21, x0
    6124:	bl	6d34 <gcc_c_fe_context@@Base+0xcd4>
    6128:	mov	x0, x21
    612c:	mov	w1, w20
    6130:	mov	x2, x19
    6134:	ldp	x20, x19, [sp, #32]
    6138:	ldr	x21, [sp, #16]
    613c:	ldp	x29, x30, [sp], #48
    6140:	b	6a7c <gcc_c_fe_context@@Base+0xa1c>
    6144:	stp	x29, x30, [sp, #-48]!
    6148:	str	x21, [sp, #16]
    614c:	stp	x20, x19, [sp, #32]
    6150:	mov	x29, sp
    6154:	ldr	x20, [x0, #96]
    6158:	add	x21, x0, #0x58
    615c:	mov	x0, x1
    6160:	mov	x19, x1
    6164:	bl	4e50 <strlen@plt>
    6168:	mov	x4, x0
    616c:	mov	x0, x21
    6170:	mov	x2, x20
    6174:	mov	x3, x19
    6178:	ldp	x20, x19, [sp, #32]
    617c:	ldr	x21, [sp, #16]
    6180:	mov	x1, xzr
    6184:	ldp	x29, x30, [sp], #48
    6188:	b	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    618c:	stp	x1, x2, [x0, #48]
    6190:	ret
    6194:	cmp	w2, #0x0
    6198:	cset	w8, ne  // ne = any
    619c:	strb	w8, [x0, #120]
    61a0:	b	6260 <gcc_c_fe_context@@Base+0x200>
    61a4:	cbz	x0, 6228 <gcc_c_fe_context@@Base+0x1c8>
    61a8:	stp	x29, x30, [sp, #-48]!
    61ac:	str	x21, [sp, #16]
    61b0:	stp	x20, x19, [sp, #32]
    61b4:	mov	x29, sp
    61b8:	mov	x19, x0
    61bc:	ldr	x0, [x0, #16]
    61c0:	cbz	x0, 61d0 <gcc_c_fe_context@@Base+0x170>
    61c4:	ldr	x8, [x0]
    61c8:	ldr	x8, [x8, #8]
    61cc:	blr	x8
    61d0:	ldr	x0, [x19, #128]
    61d4:	cbz	x0, 61e4 <gcc_c_fe_context@@Base+0x184>
    61d8:	ldr	x8, [x0]
    61dc:	ldr	x8, [x8, #16]
    61e0:	blr	x8
    61e4:	ldr	x0, [x19, #88]
    61e8:	add	x8, x19, #0x68
    61ec:	cmp	x0, x8
    61f0:	b.eq	61f8 <gcc_c_fe_context@@Base+0x198>  // b.none
    61f4:	bl	4ff0 <_ZdlPv@plt>
    61f8:	ldp	x20, x21, [x19, #64]
    61fc:	cmp	x20, x21
    6200:	b.ne	6214 <gcc_c_fe_context@@Base+0x1b4>  // b.any
    6204:	b	6230 <gcc_c_fe_context@@Base+0x1d0>
    6208:	add	x20, x20, #0x10
    620c:	cmp	x20, x21
    6210:	b.eq	622c <gcc_c_fe_context@@Base+0x1cc>  // b.none
    6214:	ldr	x0, [x20], #16
    6218:	cmp	x0, x20
    621c:	b.eq	6208 <gcc_c_fe_context@@Base+0x1a8>  // b.none
    6220:	bl	4ff0 <_ZdlPv@plt>
    6224:	b	6208 <gcc_c_fe_context@@Base+0x1a8>
    6228:	ret
    622c:	ldr	x20, [x19, #64]
    6230:	cbz	x20, 623c <gcc_c_fe_context@@Base+0x1dc>
    6234:	mov	x0, x20
    6238:	bl	4ff0 <_ZdlPv@plt>
    623c:	mov	x0, x19
    6240:	ldp	x20, x19, [sp, #32]
    6244:	ldr	x21, [sp, #16]
    6248:	ldp	x29, x30, [sp], #48
    624c:	b	4ff0 <_ZdlPv@plt>
    6250:	cmp	w1, #0x0
    6254:	cset	w8, ne  // ne = any
    6258:	strb	w8, [x0, #120]
    625c:	ret
    6260:	sub	sp, sp, #0xe0
    6264:	stp	x29, x30, [sp, #160]
    6268:	stp	x24, x23, [sp, #176]
    626c:	stp	x22, x21, [sp, #192]
    6270:	stp	x20, x19, [sp, #208]
    6274:	add	x29, sp, #0xa0
    6278:	mov	x21, x1
    627c:	mov	x19, x0
    6280:	sub	x3, x29, #0x10
    6284:	mov	w0, #0x1                   	// #1
    6288:	mov	w1, #0x1                   	// #1
    628c:	mov	w2, wzr
    6290:	bl	4df0 <socketpair@plt>
    6294:	cbz	w0, 62ac <gcc_c_fe_context@@Base+0x24c>
    6298:	ldp	x8, x0, [x19, #48]
    629c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    62a0:	add	x1, x1, #0x6ef
    62a4:	blr	x8
    62a8:	b	62d8 <gcc_c_fe_context@@Base+0x278>
    62ac:	sub	x0, x29, #0x18
    62b0:	bl	4e10 <pipe@plt>
    62b4:	cbz	w0, 62f4 <gcc_c_fe_context@@Base+0x294>
    62b8:	ldp	x8, x0, [x19, #48]
    62bc:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    62c0:	add	x1, x1, #0x70c
    62c4:	blr	x8
    62c8:	ldur	w0, [x29, #-16]
    62cc:	bl	5100 <close@plt>
    62d0:	ldur	w0, [x29, #-12]
    62d4:	bl	5100 <close@plt>
    62d8:	mov	w0, wzr
    62dc:	ldp	x20, x19, [sp, #208]
    62e0:	ldp	x22, x21, [sp, #192]
    62e4:	ldp	x24, x23, [sp, #176]
    62e8:	ldp	x29, x30, [sp, #160]
    62ec:	add	sp, sp, #0xe0
    62f0:	ret
    62f4:	add	x8, sp, #0x20
    62f8:	mov	w9, #0x15                  	// #21
    62fc:	add	x22, x8, #0x10
    6300:	str	x22, [sp, #32]
    6304:	str	x9, [sp]
    6308:	add	x0, sp, #0x20
    630c:	mov	x1, sp
    6310:	mov	x2, xzr
    6314:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6318:	adrp	x9, 16000 <htab_collisions@@Base+0x8>
    631c:	add	x9, x9, #0x723
    6320:	ldr	x8, [sp]
    6324:	ldur	x10, [x9, #13]
    6328:	ldr	q0, [x9]
    632c:	str	x0, [sp, #32]
    6330:	str	x8, [sp, #48]
    6334:	stur	x10, [x0, #13]
    6338:	str	q0, [x0]
    633c:	ldr	x9, [sp, #32]
    6340:	str	x8, [sp, #40]
    6344:	add	x20, x19, #0x40
    6348:	strb	wzr, [x9, x8]
    634c:	ldp	x1, x8, [x19, #72]
    6350:	cmp	x1, x8
    6354:	b.eq	637c <gcc_c_fe_context@@Base+0x31c>  // b.none
    6358:	add	x8, x1, #0x10
    635c:	str	x8, [x1]
    6360:	ldr	x9, [sp, #32]
    6364:	cmp	x9, x22
    6368:	b.eq	639c <gcc_c_fe_context@@Base+0x33c>  // b.none
    636c:	str	x9, [x1]
    6370:	ldr	x8, [sp, #48]
    6374:	str	x8, [x1, #16]
    6378:	b	63a4 <gcc_c_fe_context@@Base+0x344>
    637c:	add	x2, sp, #0x20
    6380:	mov	x0, x20
    6384:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6388:	ldr	x0, [sp, #32]
    638c:	cmp	x0, x22
    6390:	b.eq	63c0 <gcc_c_fe_context@@Base+0x360>  // b.none
    6394:	bl	4ff0 <_ZdlPv@plt>
    6398:	b	63c0 <gcc_c_fe_context@@Base+0x360>
    639c:	ldr	q0, [x22]
    63a0:	str	q0, [x8]
    63a4:	ldr	x8, [sp, #40]
    63a8:	str	x8, [x1, #8]
    63ac:	stp	x22, xzr, [sp, #32]
    63b0:	strb	wzr, [sp, #48]
    63b4:	ldr	x8, [x19, #72]
    63b8:	add	x8, x8, #0x20
    63bc:	str	x8, [x19, #72]
    63c0:	ldur	w3, [x29, #-12]
    63c4:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    63c8:	add	x2, x2, #0x739
    63cc:	add	x0, sp, #0x20
    63d0:	mov	w1, #0x64                  	// #100
    63d4:	bl	5050 <snprintf@plt>
    63d8:	cmp	w0, #0x64
    63dc:	b.ge	69b8 <gcc_c_fe_context@@Base+0x958>  // b.tcont
    63e0:	mov	x8, sp
    63e4:	add	x23, x8, #0x10
    63e8:	add	x0, sp, #0x20
    63ec:	str	x23, [sp]
    63f0:	bl	4e50 <strlen@plt>
    63f4:	mov	x22, x0
    63f8:	cmp	x0, #0x10
    63fc:	stur	x0, [x29, #-8]
    6400:	mov	x0, x23
    6404:	b.cc	6424 <gcc_c_fe_context@@Base+0x3c4>  // b.lo, b.ul, b.last
    6408:	mov	x0, sp
    640c:	sub	x1, x29, #0x8
    6410:	mov	x2, xzr
    6414:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6418:	ldur	x8, [x29, #-8]
    641c:	str	x0, [sp]
    6420:	str	x8, [sp, #16]
    6424:	cbz	x22, 6448 <gcc_c_fe_context@@Base+0x3e8>
    6428:	cmp	x22, #0x1
    642c:	b.ne	643c <gcc_c_fe_context@@Base+0x3dc>  // b.any
    6430:	ldrb	w8, [sp, #32]
    6434:	strb	w8, [x0]
    6438:	b	6448 <gcc_c_fe_context@@Base+0x3e8>
    643c:	add	x1, sp, #0x20
    6440:	mov	x2, x22
    6444:	bl	4db0 <memcpy@plt>
    6448:	ldur	x8, [x29, #-8]
    644c:	ldr	x9, [sp]
    6450:	str	x8, [sp, #8]
    6454:	strb	wzr, [x9, x8]
    6458:	ldp	x1, x8, [x19, #72]
    645c:	cmp	x1, x8
    6460:	b.eq	6488 <gcc_c_fe_context@@Base+0x428>  // b.none
    6464:	add	x8, x1, #0x10
    6468:	str	x8, [x1]
    646c:	ldr	x9, [sp]
    6470:	cmp	x9, x23
    6474:	b.eq	64a8 <gcc_c_fe_context@@Base+0x448>  // b.none
    6478:	str	x9, [x1]
    647c:	ldr	x8, [sp, #16]
    6480:	str	x8, [x1, #16]
    6484:	b	64b0 <gcc_c_fe_context@@Base+0x450>
    6488:	mov	x2, sp
    648c:	mov	x0, x20
    6490:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6494:	ldr	x0, [sp]
    6498:	cmp	x0, x23
    649c:	b.eq	64cc <gcc_c_fe_context@@Base+0x46c>  // b.none
    64a0:	bl	4ff0 <_ZdlPv@plt>
    64a4:	b	64cc <gcc_c_fe_context@@Base+0x46c>
    64a8:	ldr	q0, [x23]
    64ac:	str	q0, [x8]
    64b0:	ldr	x8, [sp, #8]
    64b4:	str	x8, [x1, #8]
    64b8:	stp	x23, xzr, [sp]
    64bc:	strb	wzr, [sp, #16]
    64c0:	ldr	x8, [x19, #72]
    64c4:	add	x8, x8, #0x20
    64c8:	str	x8, [x19, #72]
    64cc:	ldp	x22, x8, [x19, #72]
    64d0:	cmp	x22, x8
    64d4:	b.eq	652c <gcc_c_fe_context@@Base+0x4cc>  // b.none
    64d8:	add	x0, x22, #0x10
    64dc:	str	x0, [x22]
    64e0:	ldp	x23, x24, [x19, #88]
    64e4:	cbnz	x23, 64ec <gcc_c_fe_context@@Base+0x48c>
    64e8:	cbnz	x24, 69c8 <gcc_c_fe_context@@Base+0x968>
    64ec:	cmp	x24, #0x10
    64f0:	str	x24, [sp]
    64f4:	b.cc	6514 <gcc_c_fe_context@@Base+0x4b4>  // b.lo, b.ul, b.last
    64f8:	mov	x1, sp
    64fc:	mov	x0, x22
    6500:	mov	x2, xzr
    6504:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6508:	str	x0, [x22]
    650c:	ldr	x8, [sp]
    6510:	str	x8, [x22, #16]
    6514:	cbz	x24, 6550 <gcc_c_fe_context@@Base+0x4f0>
    6518:	cmp	x24, #0x1
    651c:	b.ne	6544 <gcc_c_fe_context@@Base+0x4e4>  // b.any
    6520:	ldrb	w8, [x23]
    6524:	strb	w8, [x0]
    6528:	b	6550 <gcc_c_fe_context@@Base+0x4f0>
    652c:	add	x2, x19, #0x58
    6530:	mov	x0, x20
    6534:	mov	x1, x22
    6538:	bl	5060 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    653c:	ldr	x1, [x19, #72]
    6540:	b	656c <gcc_c_fe_context@@Base+0x50c>
    6544:	mov	x1, x23
    6548:	mov	x2, x24
    654c:	bl	4db0 <memcpy@plt>
    6550:	ldr	x8, [sp]
    6554:	ldr	x9, [x22]
    6558:	str	x8, [x22, #8]
    655c:	strb	wzr, [x9, x8]
    6560:	ldr	x8, [x19, #72]
    6564:	add	x1, x8, #0x20
    6568:	str	x1, [x19, #72]
    656c:	mov	x8, sp
    6570:	mov	w9, #0x632d                	// #25389
    6574:	mov	w10, #0x2                   	// #2
    6578:	add	x22, x8, #0x10
    657c:	strh	w9, [sp, #16]
    6580:	stp	x22, x10, [sp]
    6584:	strb	wzr, [sp, #18]
    6588:	ldr	x8, [x19, #80]
    658c:	cmp	x1, x8
    6590:	b.eq	65b8 <gcc_c_fe_context@@Base+0x558>  // b.none
    6594:	add	x8, x1, #0x10
    6598:	str	x8, [x1]
    659c:	ldr	x9, [sp]
    65a0:	cmp	x9, x22
    65a4:	b.eq	65d8 <gcc_c_fe_context@@Base+0x578>  // b.none
    65a8:	str	x9, [x1]
    65ac:	ldr	x8, [sp, #16]
    65b0:	str	x8, [x1, #16]
    65b4:	b	65e0 <gcc_c_fe_context@@Base+0x580>
    65b8:	mov	x2, sp
    65bc:	mov	x0, x20
    65c0:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    65c4:	ldr	x0, [sp]
    65c8:	cmp	x0, x22
    65cc:	b.eq	65fc <gcc_c_fe_context@@Base+0x59c>  // b.none
    65d0:	bl	4ff0 <_ZdlPv@plt>
    65d4:	b	65fc <gcc_c_fe_context@@Base+0x59c>
    65d8:	ldr	q0, [x22]
    65dc:	str	q0, [x8]
    65e0:	mov	w8, #0x2                   	// #2
    65e4:	str	x8, [x1, #8]
    65e8:	stp	x22, xzr, [sp]
    65ec:	strb	wzr, [sp, #16]
    65f0:	ldr	x8, [x19, #72]
    65f4:	add	x8, x8, #0x20
    65f8:	str	x8, [x19, #72]
    65fc:	mov	x8, sp
    6600:	mov	w9, #0x6f2d                	// #28461
    6604:	mov	w10, #0x2                   	// #2
    6608:	add	x22, x8, #0x10
    660c:	strb	wzr, [sp, #18]
    6610:	strh	w9, [sp, #16]
    6614:	stp	x22, x10, [sp]
    6618:	ldp	x1, x8, [x19, #72]
    661c:	cmp	x1, x8
    6620:	b.eq	6648 <gcc_c_fe_context@@Base+0x5e8>  // b.none
    6624:	add	x8, x1, #0x10
    6628:	str	x8, [x1]
    662c:	ldr	x9, [sp]
    6630:	cmp	x9, x22
    6634:	b.eq	6668 <gcc_c_fe_context@@Base+0x608>  // b.none
    6638:	str	x9, [x1]
    663c:	ldr	x8, [sp, #16]
    6640:	str	x8, [x1, #16]
    6644:	b	6670 <gcc_c_fe_context@@Base+0x610>
    6648:	mov	x2, sp
    664c:	mov	x0, x20
    6650:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6654:	ldr	x0, [sp]
    6658:	cmp	x0, x22
    665c:	b.eq	668c <gcc_c_fe_context@@Base+0x62c>  // b.none
    6660:	bl	4ff0 <_ZdlPv@plt>
    6664:	b	668c <gcc_c_fe_context@@Base+0x62c>
    6668:	ldr	q0, [x22]
    666c:	str	q0, [x8]
    6670:	mov	w8, #0x2                   	// #2
    6674:	str	x8, [x1, #8]
    6678:	stp	x22, xzr, [sp]
    667c:	strb	wzr, [sp, #16]
    6680:	ldr	x8, [x19, #72]
    6684:	add	x8, x8, #0x20
    6688:	str	x8, [x19, #72]
    668c:	mov	x8, sp
    6690:	add	x23, x8, #0x10
    6694:	str	x23, [sp]
    6698:	cbz	x21, 69bc <gcc_c_fe_context@@Base+0x95c>
    669c:	mov	x0, x21
    66a0:	bl	4e50 <strlen@plt>
    66a4:	mov	x22, x0
    66a8:	cmp	x0, #0xf
    66ac:	stur	x0, [x29, #-8]
    66b0:	mov	x0, x23
    66b4:	b.ls	66d4 <gcc_c_fe_context@@Base+0x674>  // b.plast
    66b8:	mov	x0, sp
    66bc:	sub	x1, x29, #0x8
    66c0:	mov	x2, xzr
    66c4:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    66c8:	ldur	x8, [x29, #-8]
    66cc:	str	x0, [sp]
    66d0:	str	x8, [sp, #16]
    66d4:	cbz	x22, 66f8 <gcc_c_fe_context@@Base+0x698>
    66d8:	cmp	x22, #0x1
    66dc:	b.ne	66ec <gcc_c_fe_context@@Base+0x68c>  // b.any
    66e0:	ldrb	w8, [x21]
    66e4:	strb	w8, [x0]
    66e8:	b	66f8 <gcc_c_fe_context@@Base+0x698>
    66ec:	mov	x1, x21
    66f0:	mov	x2, x22
    66f4:	bl	4db0 <memcpy@plt>
    66f8:	ldur	x8, [x29, #-8]
    66fc:	ldr	x9, [sp]
    6700:	str	x8, [sp, #8]
    6704:	strb	wzr, [x9, x8]
    6708:	ldp	x1, x8, [x19, #72]
    670c:	cmp	x1, x8
    6710:	b.eq	6738 <gcc_c_fe_context@@Base+0x6d8>  // b.none
    6714:	add	x8, x1, #0x10
    6718:	str	x8, [x1]
    671c:	ldr	x9, [sp]
    6720:	cmp	x9, x23
    6724:	b.eq	6758 <gcc_c_fe_context@@Base+0x6f8>  // b.none
    6728:	str	x9, [x1]
    672c:	ldr	x8, [sp, #16]
    6730:	str	x8, [x1, #16]
    6734:	b	6760 <gcc_c_fe_context@@Base+0x700>
    6738:	mov	x2, sp
    673c:	mov	x0, x20
    6740:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6744:	ldr	x0, [sp]
    6748:	cmp	x0, x23
    674c:	b.eq	677c <gcc_c_fe_context@@Base+0x71c>  // b.none
    6750:	bl	4ff0 <_ZdlPv@plt>
    6754:	b	677c <gcc_c_fe_context@@Base+0x71c>
    6758:	ldr	q0, [x23]
    675c:	str	q0, [x8]
    6760:	ldr	x8, [sp, #8]
    6764:	str	x8, [x1, #8]
    6768:	stp	x23, xzr, [sp]
    676c:	strb	wzr, [sp, #16]
    6770:	ldr	x8, [x19, #72]
    6774:	add	x8, x8, #0x20
    6778:	str	x8, [x19, #72]
    677c:	ldrb	w8, [x19, #120]
    6780:	cbz	w8, 6814 <gcc_c_fe_context@@Base+0x7b4>
    6784:	mov	x8, sp
    6788:	mov	w9, #0x762d                	// #30253
    678c:	mov	w10, #0x2                   	// #2
    6790:	add	x21, x8, #0x10
    6794:	strb	wzr, [sp, #18]
    6798:	strh	w9, [sp, #16]
    679c:	stp	x21, x10, [sp]
    67a0:	ldp	x1, x8, [x19, #72]
    67a4:	cmp	x1, x8
    67a8:	b.eq	67d0 <gcc_c_fe_context@@Base+0x770>  // b.none
    67ac:	add	x8, x1, #0x10
    67b0:	str	x8, [x1]
    67b4:	ldr	x9, [sp]
    67b8:	cmp	x9, x21
    67bc:	b.eq	67f0 <gcc_c_fe_context@@Base+0x790>  // b.none
    67c0:	str	x9, [x1]
    67c4:	ldr	x8, [sp, #16]
    67c8:	str	x8, [x1, #16]
    67cc:	b	67f8 <gcc_c_fe_context@@Base+0x798>
    67d0:	mov	x2, sp
    67d4:	mov	x0, x20
    67d8:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    67dc:	ldr	x0, [sp]
    67e0:	cmp	x0, x21
    67e4:	b.eq	6814 <gcc_c_fe_context@@Base+0x7b4>  // b.none
    67e8:	bl	4ff0 <_ZdlPv@plt>
    67ec:	b	6814 <gcc_c_fe_context@@Base+0x7b4>
    67f0:	ldr	q0, [x21]
    67f4:	str	q0, [x8]
    67f8:	mov	w8, #0x2                   	// #2
    67fc:	str	x8, [x1, #8]
    6800:	stp	x21, xzr, [sp]
    6804:	strb	wzr, [sp, #16]
    6808:	ldr	x8, [x19, #72]
    680c:	add	x8, x8, #0x20
    6810:	str	x8, [x19, #72]
    6814:	mov	w0, #0x20                  	// #32
    6818:	bl	5000 <_Znwm@plt>
    681c:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    6820:	ldur	w8, [x29, #-16]
    6824:	ldur	w9, [x29, #-24]
    6828:	ldr	x10, [x10, #3352]
    682c:	mov	x20, x0
    6830:	add	x21, x0, #0x10
    6834:	stp	w8, w9, [x0, #8]
    6838:	add	x10, x10, #0x10
    683c:	str	x10, [x0]
    6840:	mov	x0, x21
    6844:	bl	dff0 <gcc_cp_fe_context@@Base+0x4684>
    6848:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    684c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    6850:	adrp	x2, 7000 <gcc_c_fe_context@@Base+0xfa0>
    6854:	add	x8, x8, #0x5f0
    6858:	add	x1, x1, #0x759
    685c:	add	x2, x2, #0xcc
    6860:	mov	x0, x21
    6864:	str	x19, [x20, #24]
    6868:	str	x8, [x20]
    686c:	str	x20, [x19, #16]
    6870:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    6874:	ldr	x8, [x19, #16]
    6878:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    687c:	adrp	x2, 7000 <gcc_c_fe_context@@Base+0xfa0>
    6880:	add	x1, x1, #0x768
    6884:	add	x0, x8, #0x10
    6888:	add	x2, x2, #0x198
    688c:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    6890:	ldp	x22, x8, [x19, #64]
    6894:	adrp	x1, 2a000 <xexit@@Base+0x13b84>
    6898:	ldr	x1, [x1, #3264]
    689c:	sub	x23, x8, x22
    68a0:	asr	x21, x23, #5
    68a4:	add	x8, x21, #0x1
    68a8:	lsl	x9, x8, #3
    68ac:	cmp	xzr, x8, lsr #61
    68b0:	csinv	x0, x9, xzr, eq  // eq = none
    68b4:	bl	51c0 <_ZnamRKSt9nothrow_t@plt>
    68b8:	cbz	x0, 62dc <gcc_c_fe_context@@Base+0x27c>
    68bc:	mov	x20, x0
    68c0:	cbz	x23, 68e8 <gcc_c_fe_context@@Base+0x888>
    68c4:	mov	x8, xzr
    68c8:	mov	w9, #0x1                   	// #1
    68cc:	lsl	x10, x8, #5
    68d0:	ldr	x10, [x22, x10]
    68d4:	str	x10, [x20, x8, lsl #3]
    68d8:	mov	w8, w9
    68dc:	cmp	x21, x8
    68e0:	add	w9, w9, #0x1
    68e4:	b.hi	68cc <gcc_c_fe_context@@Base+0x86c>  // b.pmore
    68e8:	str	xzr, [x20, x21, lsl #3]
    68ec:	bl	50e0 <fork@plt>
    68f0:	cmn	w0, #0x1
    68f4:	b.eq	6944 <gcc_c_fe_context@@Base+0x8e4>  // b.none
    68f8:	mov	w21, w0
    68fc:	cbz	w0, 69d4 <gcc_c_fe_context@@Base+0x974>
    6900:	ldur	w0, [x29, #-12]
    6904:	bl	5100 <close@plt>
    6908:	ldur	w0, [x29, #-20]
    690c:	bl	5100 <close@plt>
    6910:	ldr	x0, [x19, #16]
    6914:	mov	w1, #0x48                  	// #72
    6918:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    691c:	cbz	w0, 6964 <gcc_c_fe_context@@Base+0x904>
    6920:	ldr	x0, [x19, #16]
    6924:	mov	w1, #0x1                   	// #1
    6928:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    692c:	cbz	w0, 6964 <gcc_c_fe_context@@Base+0x904>
    6930:	ldr	x0, [x19, #16]
    6934:	mov	w1, wzr
    6938:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    693c:	mov	w19, w0
    6940:	b	6968 <gcc_c_fe_context@@Base+0x908>
    6944:	ldur	w0, [x29, #-16]
    6948:	bl	5100 <close@plt>
    694c:	ldur	w0, [x29, #-12]
    6950:	bl	5100 <close@plt>
    6954:	ldur	w0, [x29, #-24]
    6958:	bl	5100 <close@plt>
    695c:	ldur	w0, [x29, #-20]
    6960:	b	62d4 <gcc_c_fe_context@@Base+0x274>
    6964:	mov	w19, wzr
    6968:	ldur	w0, [x29, #-16]
    696c:	bl	5100 <close@plt>
    6970:	ldur	w0, [x29, #-24]
    6974:	bl	5100 <close@plt>
    6978:	mov	x1, sp
    697c:	mov	w0, w21
    6980:	mov	w2, wzr
    6984:	bl	4ea0 <waitpid@plt>
    6988:	cmn	w0, #0x1
    698c:	b.ne	69a0 <gcc_c_fe_context@@Base+0x940>  // b.any
    6990:	bl	50a0 <__errno_location@plt>
    6994:	ldr	w8, [x0]
    6998:	cmp	w8, #0x4
    699c:	b.ne	62d8 <gcc_c_fe_context@@Base+0x278>  // b.any
    69a0:	ldrh	w8, [sp]
    69a4:	tst	w8, #0xffffff7f
    69a8:	b.ne	62d8 <gcc_c_fe_context@@Base+0x278>  // b.any
    69ac:	cmp	w19, #0x0
    69b0:	cset	w0, ne  // ne = any
    69b4:	b	62dc <gcc_c_fe_context@@Base+0x27c>
    69b8:	bl	5190 <abort@plt>
    69bc:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    69c0:	add	x0, x0, #0x4bd
    69c4:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    69c8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    69cc:	add	x0, x0, #0x4bd
    69d0:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    69d4:	ldur	w0, [x29, #-20]
    69d8:	mov	w1, #0x1                   	// #1
    69dc:	bl	4e20 <dup2@plt>
    69e0:	ldur	w0, [x29, #-20]
    69e4:	mov	w1, #0x2                   	// #2
    69e8:	bl	4e20 <dup2@plt>
    69ec:	ldur	w0, [x29, #-24]
    69f0:	bl	5100 <close@plt>
    69f4:	ldur	w0, [x29, #-20]
    69f8:	bl	5100 <close@plt>
    69fc:	ldur	w0, [x29, #-16]
    6a00:	bl	5100 <close@plt>
    6a04:	ldr	x0, [x20]
    6a08:	mov	x1, x20
    6a0c:	bl	4de0 <execvp@plt>
    6a10:	mov	w0, #0x7f                  	// #127
    6a14:	bl	4f50 <_exit@plt>
    6a18:	ldr	x8, [sp]
    6a1c:	cmp	x8, x21
    6a20:	b	6a4c <gcc_c_fe_context@@Base+0x9ec>
    6a24:	b	6a38 <gcc_c_fe_context@@Base+0x9d8>
    6a28:	ldr	x8, [sp]
    6a2c:	b	6a48 <gcc_c_fe_context@@Base+0x9e8>
    6a30:	ldr	x8, [sp]
    6a34:	b	6a48 <gcc_c_fe_context@@Base+0x9e8>
    6a38:	ldr	x8, [sp]
    6a3c:	cmp	x8, x23
    6a40:	b	6a4c <gcc_c_fe_context@@Base+0x9ec>
    6a44:	ldr	x8, [sp, #32]
    6a48:	cmp	x8, x22
    6a4c:	mov	x19, x0
    6a50:	b.eq	6a70 <gcc_c_fe_context@@Base+0xa10>  // b.none
    6a54:	mov	x0, x8
    6a58:	b	6a6c <gcc_c_fe_context@@Base+0xa0c>
    6a5c:	bl	5240 <_Unwind_Resume@plt>
    6a60:	bl	5240 <_Unwind_Resume@plt>
    6a64:	mov	x19, x0
    6a68:	mov	x0, x20
    6a6c:	bl	4ff0 <_ZdlPv@plt>
    6a70:	mov	x0, x19
    6a74:	bl	5240 <_Unwind_Resume@plt>
    6a78:	bl	5240 <_Unwind_Resume@plt>
    6a7c:	sub	sp, sp, #0xa0
    6a80:	stp	x29, x30, [sp, #80]
    6a84:	stp	x26, x25, [sp, #96]
    6a88:	stp	x24, x23, [sp, #112]
    6a8c:	stp	x22, x21, [sp, #128]
    6a90:	stp	x20, x19, [sp, #144]
    6a94:	add	x29, sp, #0x50
    6a98:	add	x8, sp, #0x28
    6a9c:	add	x26, x8, #0x10
    6aa0:	stp	x26, xzr, [sp, #40]
    6aa4:	strb	wzr, [sp, #56]
    6aa8:	mov	x20, x0
    6aac:	ldr	x0, [x0, #128]
    6ab0:	mov	x19, x2
    6ab4:	mov	w22, w1
    6ab8:	ldr	x8, [x0]
    6abc:	ldr	x8, [x8]
    6ac0:	add	x1, sp, #0x28
    6ac4:	blr	x8
    6ac8:	mov	x21, x0
    6acc:	cbnz	x0, 6c8c <gcc_c_fe_context@@Base+0xc2c>
    6ad0:	ldp	x23, x8, [x20, #72]
    6ad4:	add	x21, x20, #0x40
    6ad8:	cmp	x23, x8
    6adc:	b.eq	6b34 <gcc_c_fe_context@@Base+0xad4>  // b.none
    6ae0:	add	x0, x23, #0x10
    6ae4:	str	x0, [x23]
    6ae8:	ldp	x24, x25, [sp, #40]
    6aec:	cbnz	x24, 6af4 <gcc_c_fe_context@@Base+0xa94>
    6af0:	cbnz	x25, 6cc8 <gcc_c_fe_context@@Base+0xc68>
    6af4:	cmp	x25, #0x10
    6af8:	str	x25, [sp, #8]
    6afc:	b.cc	6b1c <gcc_c_fe_context@@Base+0xabc>  // b.lo, b.ul, b.last
    6b00:	add	x1, sp, #0x8
    6b04:	mov	x0, x23
    6b08:	mov	x2, xzr
    6b0c:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6b10:	str	x0, [x23]
    6b14:	ldr	x8, [sp, #8]
    6b18:	str	x8, [x23, #16]
    6b1c:	cbz	x25, 6b5c <gcc_c_fe_context@@Base+0xafc>
    6b20:	cmp	x25, #0x1
    6b24:	b.ne	6b50 <gcc_c_fe_context@@Base+0xaf0>  // b.any
    6b28:	ldrb	w8, [x24]
    6b2c:	strb	w8, [x0]
    6b30:	b	6b5c <gcc_c_fe_context@@Base+0xafc>
    6b34:	add	x2, sp, #0x28
    6b38:	mov	x0, x21
    6b3c:	mov	x1, x23
    6b40:	bl	5060 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6b44:	cmp	w22, #0x1
    6b48:	b.ge	6b80 <gcc_c_fe_context@@Base+0xb20>  // b.tcont
    6b4c:	b	6c88 <gcc_c_fe_context@@Base+0xc28>
    6b50:	mov	x1, x24
    6b54:	mov	x2, x25
    6b58:	bl	4db0 <memcpy@plt>
    6b5c:	ldr	x8, [sp, #8]
    6b60:	ldr	x9, [x23]
    6b64:	str	x8, [x23, #8]
    6b68:	strb	wzr, [x9, x8]
    6b6c:	ldr	x8, [x20, #72]
    6b70:	add	x8, x8, #0x20
    6b74:	str	x8, [x20, #72]
    6b78:	cmp	w22, #0x1
    6b7c:	b.lt	6c88 <gcc_c_fe_context@@Base+0xc28>  // b.tstop
    6b80:	add	x8, sp, #0x8
    6b84:	add	x24, x8, #0x10
    6b88:	mov	w25, w22
    6b8c:	b	6bc4 <gcc_c_fe_context@@Base+0xb64>
    6b90:	str	x9, [x1]
    6b94:	ldr	x8, [sp, #24]
    6b98:	str	x8, [x1, #16]
    6b9c:	ldr	x8, [sp, #16]
    6ba0:	str	x8, [x1, #8]
    6ba4:	stp	x24, xzr, [sp, #8]
    6ba8:	strb	wzr, [sp, #24]
    6bac:	ldr	x8, [x20, #72]
    6bb0:	add	x8, x8, #0x20
    6bb4:	str	x8, [x20, #72]
    6bb8:	subs	x25, x25, #0x1
    6bbc:	add	x19, x19, #0x8
    6bc0:	b.eq	6c88 <gcc_c_fe_context@@Base+0xc28>  // b.none
    6bc4:	ldr	x22, [x19]
    6bc8:	str	x24, [sp, #8]
    6bcc:	cbz	x22, 6cbc <gcc_c_fe_context@@Base+0xc5c>
    6bd0:	mov	x0, x22
    6bd4:	bl	4e50 <strlen@plt>
    6bd8:	mov	x23, x0
    6bdc:	cmp	x0, #0xf
    6be0:	stur	x0, [x29, #-8]
    6be4:	mov	x0, x24
    6be8:	b.ls	6c08 <gcc_c_fe_context@@Base+0xba8>  // b.plast
    6bec:	add	x0, sp, #0x8
    6bf0:	sub	x1, x29, #0x8
    6bf4:	mov	x2, xzr
    6bf8:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6bfc:	ldur	x8, [x29, #-8]
    6c00:	str	x0, [sp, #8]
    6c04:	str	x8, [sp, #24]
    6c08:	cbz	x23, 6c2c <gcc_c_fe_context@@Base+0xbcc>
    6c0c:	cmp	x23, #0x1
    6c10:	b.ne	6c20 <gcc_c_fe_context@@Base+0xbc0>  // b.any
    6c14:	ldrb	w8, [x22]
    6c18:	strb	w8, [x0]
    6c1c:	b	6c2c <gcc_c_fe_context@@Base+0xbcc>
    6c20:	mov	x1, x22
    6c24:	mov	x2, x23
    6c28:	bl	4db0 <memcpy@plt>
    6c2c:	ldur	x8, [x29, #-8]
    6c30:	ldr	x9, [sp, #8]
    6c34:	str	x8, [sp, #16]
    6c38:	strb	wzr, [x9, x8]
    6c3c:	ldp	x1, x8, [x20, #72]
    6c40:	cmp	x1, x8
    6c44:	b.eq	6c68 <gcc_c_fe_context@@Base+0xc08>  // b.none
    6c48:	add	x8, x1, #0x10
    6c4c:	str	x8, [x1]
    6c50:	ldr	x9, [sp, #8]
    6c54:	cmp	x9, x24
    6c58:	b.ne	6b90 <gcc_c_fe_context@@Base+0xb30>  // b.any
    6c5c:	ldr	q0, [x24]
    6c60:	str	q0, [x8]
    6c64:	b	6b9c <gcc_c_fe_context@@Base+0xb3c>
    6c68:	add	x2, sp, #0x8
    6c6c:	mov	x0, x21
    6c70:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6c74:	ldr	x0, [sp, #8]
    6c78:	cmp	x0, x24
    6c7c:	b.eq	6bb8 <gcc_c_fe_context@@Base+0xb58>  // b.none
    6c80:	bl	4ff0 <_ZdlPv@plt>
    6c84:	b	6bb8 <gcc_c_fe_context@@Base+0xb58>
    6c88:	mov	x21, xzr
    6c8c:	ldr	x0, [sp, #40]
    6c90:	cmp	x0, x26
    6c94:	b.eq	6c9c <gcc_c_fe_context@@Base+0xc3c>  // b.none
    6c98:	bl	4ff0 <_ZdlPv@plt>
    6c9c:	mov	x0, x21
    6ca0:	ldp	x20, x19, [sp, #144]
    6ca4:	ldp	x22, x21, [sp, #128]
    6ca8:	ldp	x24, x23, [sp, #112]
    6cac:	ldp	x26, x25, [sp, #96]
    6cb0:	ldp	x29, x30, [sp, #80]
    6cb4:	add	sp, sp, #0xa0
    6cb8:	ret
    6cbc:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    6cc0:	add	x0, x0, #0x4bd
    6cc4:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    6cc8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    6ccc:	add	x0, x0, #0x4bd
    6cd0:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    6cd4:	b	6d18 <gcc_c_fe_context@@Base+0xcb8>
    6cd8:	b	6d18 <gcc_c_fe_context@@Base+0xcb8>
    6cdc:	ldr	x8, [sp, #8]
    6ce0:	mov	x19, x0
    6ce4:	cmp	x8, x24
    6ce8:	b.ne	6d00 <gcc_c_fe_context@@Base+0xca0>  // b.any
    6cec:	ldr	x0, [sp, #40]
    6cf0:	cmp	x0, x26
    6cf4:	b.ne	6d28 <gcc_c_fe_context@@Base+0xcc8>  // b.any
    6cf8:	mov	x0, x19
    6cfc:	bl	5240 <_Unwind_Resume@plt>
    6d00:	mov	x0, x8
    6d04:	bl	4ff0 <_ZdlPv@plt>
    6d08:	ldr	x0, [sp, #40]
    6d0c:	cmp	x0, x26
    6d10:	b.eq	6cf8 <gcc_c_fe_context@@Base+0xc98>  // b.none
    6d14:	b	6d28 <gcc_c_fe_context@@Base+0xcc8>
    6d18:	mov	x19, x0
    6d1c:	ldr	x0, [sp, #40]
    6d20:	cmp	x0, x26
    6d24:	b.eq	6cf8 <gcc_c_fe_context@@Base+0xc98>  // b.none
    6d28:	bl	4ff0 <_ZdlPv@plt>
    6d2c:	mov	x0, x19
    6d30:	bl	5240 <_Unwind_Resume@plt>
    6d34:	sub	sp, sp, #0x70
    6d38:	stp	x29, x30, [sp, #32]
    6d3c:	str	x25, [sp, #48]
    6d40:	stp	x24, x23, [sp, #64]
    6d44:	stp	x22, x21, [sp, #80]
    6d48:	stp	x20, x19, [sp, #96]
    6d4c:	add	x29, sp, #0x20
    6d50:	mov	x20, x0
    6d54:	ldr	x0, [x0, #128]
    6d58:	mov	x21, x1
    6d5c:	cbz	x0, 6d6c <gcc_c_fe_context@@Base+0xd0c>
    6d60:	ldr	x8, [x0]
    6d64:	ldr	x8, [x8, #16]
    6d68:	blr	x8
    6d6c:	mov	w0, #0x30                  	// #48
    6d70:	bl	5000 <_Znwm@plt>
    6d74:	mov	x8, sp
    6d78:	mov	x19, x0
    6d7c:	add	x25, x8, #0x10
    6d80:	str	x25, [sp]
    6d84:	cbz	x21, 6eb8 <gcc_c_fe_context@@Base+0xe58>
    6d88:	mov	x0, x21
    6d8c:	bl	4e50 <strlen@plt>
    6d90:	mov	x22, x0
    6d94:	cmp	x0, #0xf
    6d98:	str	x0, [x29, #24]
    6d9c:	b.ls	6dc4 <gcc_c_fe_context@@Base+0xd64>  // b.plast
    6da0:	mov	x0, sp
    6da4:	add	x1, x29, #0x18
    6da8:	mov	x2, xzr
    6dac:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6db0:	ldr	x8, [x29, #24]
    6db4:	str	x0, [sp]
    6db8:	str	x8, [sp, #16]
    6dbc:	cbnz	x22, 6dcc <gcc_c_fe_context@@Base+0xd6c>
    6dc0:	b	6dec <gcc_c_fe_context@@Base+0xd8c>
    6dc4:	mov	x0, x25
    6dc8:	cbz	x22, 6dec <gcc_c_fe_context@@Base+0xd8c>
    6dcc:	cmp	x22, #0x1
    6dd0:	b.ne	6de0 <gcc_c_fe_context@@Base+0xd80>  // b.any
    6dd4:	ldrb	w8, [x21]
    6dd8:	strb	w8, [x0]
    6ddc:	b	6dec <gcc_c_fe_context@@Base+0xd8c>
    6de0:	mov	x1, x21
    6de4:	mov	x2, x22
    6de8:	bl	4db0 <memcpy@plt>
    6dec:	ldr	x8, [x29, #24]
    6df0:	ldr	x9, [sp]
    6df4:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    6df8:	add	x10, x10, #0x570
    6dfc:	str	x8, [sp, #8]
    6e00:	strb	wzr, [x9, x8]
    6e04:	ldp	x21, x22, [sp]
    6e08:	add	x23, x19, #0x20
    6e0c:	mov	x24, x19
    6e10:	stp	x10, x20, [x19]
    6e14:	str	x23, [x24, #16]!
    6e18:	cbnz	x21, 6e20 <gcc_c_fe_context@@Base+0xdc0>
    6e1c:	cbnz	x22, 6ec4 <gcc_c_fe_context@@Base+0xe64>
    6e20:	cmp	x22, #0x10
    6e24:	str	x22, [x29, #24]
    6e28:	b.cc	6e4c <gcc_c_fe_context@@Base+0xdec>  // b.lo, b.ul, b.last
    6e2c:	add	x1, x29, #0x18
    6e30:	mov	x0, x24
    6e34:	mov	x2, xzr
    6e38:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6e3c:	ldr	x8, [x29, #24]
    6e40:	str	x0, [x24]
    6e44:	str	x8, [x23]
    6e48:	mov	x23, x0
    6e4c:	cbz	x22, 6e74 <gcc_c_fe_context@@Base+0xe14>
    6e50:	cmp	x22, #0x1
    6e54:	b.ne	6e64 <gcc_c_fe_context@@Base+0xe04>  // b.any
    6e58:	ldrb	w8, [x21]
    6e5c:	strb	w8, [x23]
    6e60:	b	6e74 <gcc_c_fe_context@@Base+0xe14>
    6e64:	mov	x0, x23
    6e68:	mov	x1, x21
    6e6c:	mov	x2, x22
    6e70:	bl	4db0 <memcpy@plt>
    6e74:	ldr	x8, [x29, #24]
    6e78:	ldr	x9, [x19, #16]
    6e7c:	str	x8, [x19, #24]
    6e80:	strb	wzr, [x9, x8]
    6e84:	str	x19, [x20, #128]
    6e88:	ldr	x0, [sp]
    6e8c:	cmp	x0, x25
    6e90:	b.eq	6e98 <gcc_c_fe_context@@Base+0xe38>  // b.none
    6e94:	bl	4ff0 <_ZdlPv@plt>
    6e98:	ldp	x20, x19, [sp, #96]
    6e9c:	ldp	x22, x21, [sp, #80]
    6ea0:	ldp	x24, x23, [sp, #64]
    6ea4:	ldr	x25, [sp, #48]
    6ea8:	ldp	x29, x30, [sp, #32]
    6eac:	mov	x0, xzr
    6eb0:	add	sp, sp, #0x70
    6eb4:	ret
    6eb8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    6ebc:	add	x0, x0, #0x4bd
    6ec0:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    6ec4:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    6ec8:	add	x0, x0, #0x4bd
    6ecc:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    6ed0:	ldr	x8, [sp]
    6ed4:	mov	x20, x0
    6ed8:	cmp	x8, x25
    6edc:	b.eq	6ef0 <gcc_c_fe_context@@Base+0xe90>  // b.none
    6ee0:	mov	x0, x8
    6ee4:	bl	4ff0 <_ZdlPv@plt>
    6ee8:	b	6ef0 <gcc_c_fe_context@@Base+0xe90>
    6eec:	mov	x20, x0
    6ef0:	mov	x0, x19
    6ef4:	bl	4ff0 <_ZdlPv@plt>
    6ef8:	mov	x0, x20
    6efc:	bl	5240 <_Unwind_Resume@plt>
    6f00:	sub	sp, sp, #0x70
    6f04:	stp	x29, x30, [sp, #32]
    6f08:	str	x25, [sp, #48]
    6f0c:	stp	x24, x23, [sp, #64]
    6f10:	stp	x22, x21, [sp, #80]
    6f14:	stp	x20, x19, [sp, #96]
    6f18:	add	x29, sp, #0x20
    6f1c:	mov	x20, x0
    6f20:	ldr	x0, [x0, #128]
    6f24:	mov	x21, x1
    6f28:	cbz	x0, 6f38 <gcc_c_fe_context@@Base+0xed8>
    6f2c:	ldr	x8, [x0]
    6f30:	ldr	x8, [x8, #16]
    6f34:	blr	x8
    6f38:	mov	w0, #0x30                  	// #48
    6f3c:	bl	5000 <_Znwm@plt>
    6f40:	mov	x8, sp
    6f44:	mov	x19, x0
    6f48:	add	x25, x8, #0x10
    6f4c:	str	x25, [sp]
    6f50:	cbz	x21, 7084 <gcc_c_fe_context@@Base+0x1024>
    6f54:	mov	x0, x21
    6f58:	bl	4e50 <strlen@plt>
    6f5c:	mov	x22, x0
    6f60:	cmp	x0, #0xf
    6f64:	str	x0, [x29, #24]
    6f68:	b.ls	6f90 <gcc_c_fe_context@@Base+0xf30>  // b.plast
    6f6c:	mov	x0, sp
    6f70:	add	x1, x29, #0x18
    6f74:	mov	x2, xzr
    6f78:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6f7c:	ldr	x8, [x29, #24]
    6f80:	str	x0, [sp]
    6f84:	str	x8, [sp, #16]
    6f88:	cbnz	x22, 6f98 <gcc_c_fe_context@@Base+0xf38>
    6f8c:	b	6fb8 <gcc_c_fe_context@@Base+0xf58>
    6f90:	mov	x0, x25
    6f94:	cbz	x22, 6fb8 <gcc_c_fe_context@@Base+0xf58>
    6f98:	cmp	x22, #0x1
    6f9c:	b.ne	6fac <gcc_c_fe_context@@Base+0xf4c>  // b.any
    6fa0:	ldrb	w8, [x21]
    6fa4:	strb	w8, [x0]
    6fa8:	b	6fb8 <gcc_c_fe_context@@Base+0xf58>
    6fac:	mov	x1, x21
    6fb0:	mov	x2, x22
    6fb4:	bl	4db0 <memcpy@plt>
    6fb8:	ldr	x8, [x29, #24]
    6fbc:	ldr	x9, [sp]
    6fc0:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    6fc4:	add	x10, x10, #0x5b0
    6fc8:	str	x8, [sp, #8]
    6fcc:	strb	wzr, [x9, x8]
    6fd0:	ldp	x21, x22, [sp]
    6fd4:	add	x23, x19, #0x20
    6fd8:	mov	x24, x19
    6fdc:	stp	x10, x20, [x19]
    6fe0:	str	x23, [x24, #16]!
    6fe4:	cbnz	x21, 6fec <gcc_c_fe_context@@Base+0xf8c>
    6fe8:	cbnz	x22, 7090 <gcc_c_fe_context@@Base+0x1030>
    6fec:	cmp	x22, #0x10
    6ff0:	str	x22, [x29, #24]
    6ff4:	b.cc	7018 <gcc_c_fe_context@@Base+0xfb8>  // b.lo, b.ul, b.last
    6ff8:	add	x1, x29, #0x18
    6ffc:	mov	x0, x24
    7000:	mov	x2, xzr
    7004:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7008:	ldr	x8, [x29, #24]
    700c:	str	x0, [x24]
    7010:	str	x8, [x23]
    7014:	mov	x23, x0
    7018:	cbz	x22, 7040 <gcc_c_fe_context@@Base+0xfe0>
    701c:	cmp	x22, #0x1
    7020:	b.ne	7030 <gcc_c_fe_context@@Base+0xfd0>  // b.any
    7024:	ldrb	w8, [x21]
    7028:	strb	w8, [x23]
    702c:	b	7040 <gcc_c_fe_context@@Base+0xfe0>
    7030:	mov	x0, x23
    7034:	mov	x1, x21
    7038:	mov	x2, x22
    703c:	bl	4db0 <memcpy@plt>
    7040:	ldr	x8, [x29, #24]
    7044:	ldr	x9, [x19, #16]
    7048:	str	x8, [x19, #24]
    704c:	strb	wzr, [x9, x8]
    7050:	str	x19, [x20, #128]
    7054:	ldr	x0, [sp]
    7058:	cmp	x0, x25
    705c:	b.eq	7064 <gcc_c_fe_context@@Base+0x1004>  // b.none
    7060:	bl	4ff0 <_ZdlPv@plt>
    7064:	ldp	x20, x19, [sp, #96]
    7068:	ldp	x22, x21, [sp, #80]
    706c:	ldp	x24, x23, [sp, #64]
    7070:	ldr	x25, [sp, #48]
    7074:	ldp	x29, x30, [sp, #32]
    7078:	mov	x0, xzr
    707c:	add	sp, sp, #0x70
    7080:	ret
    7084:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    7088:	add	x0, x0, #0x4bd
    708c:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    7090:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    7094:	add	x0, x0, #0x4bd
    7098:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    709c:	ldr	x8, [sp]
    70a0:	mov	x20, x0
    70a4:	cmp	x8, x25
    70a8:	b.eq	70bc <gcc_c_fe_context@@Base+0x105c>  // b.none
    70ac:	mov	x0, x8
    70b0:	bl	4ff0 <_ZdlPv@plt>
    70b4:	b	70bc <gcc_c_fe_context@@Base+0x105c>
    70b8:	mov	x20, x0
    70bc:	mov	x0, x19
    70c0:	bl	4ff0 <_ZdlPv@plt>
    70c4:	mov	x0, x20
    70c8:	bl	5240 <_Unwind_Resume@plt>
    70cc:	sub	sp, sp, #0x30
    70d0:	stp	x29, x30, [sp, #16]
    70d4:	stp	x20, x19, [sp, #32]
    70d8:	add	x29, sp, #0x10
    70dc:	mov	x19, x0
    70e0:	str	xzr, [sp]
    70e4:	mov	w1, #0x2                   	// #2
    70e8:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    70ec:	cbz	w0, 7158 <gcc_c_fe_context@@Base+0x10f8>
    70f0:	add	x1, sp, #0x8
    70f4:	mov	x0, x19
    70f8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    70fc:	cbz	w0, 7158 <gcc_c_fe_context@@Base+0x10f8>
    7100:	ldr	w20, [sp, #8]
    7104:	mov	x1, sp
    7108:	mov	x0, x19
    710c:	bl	e580 <gcc_cp_fe_context@@Base+0x4c14>
    7110:	cbz	w0, 7158 <gcc_c_fe_context@@Base+0x10f8>
    7114:	ldr	x1, [x19, #24]
    7118:	ldr	x3, [sp]
    711c:	ldr	x0, [x1, #40]
    7120:	ldr	x8, [x1, #24]
    7124:	mov	w2, w20
    7128:	blr	x8
    712c:	mov	w1, #0x52                  	// #82
    7130:	mov	x0, x19
    7134:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    7138:	cbz	w0, 7158 <gcc_c_fe_context@@Base+0x10f8>
    713c:	mov	w1, #0x1                   	// #1
    7140:	mov	x0, x19
    7144:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    7148:	mov	w19, w0
    714c:	ldr	x0, [sp]
    7150:	cbnz	x0, 7164 <gcc_c_fe_context@@Base+0x1104>
    7154:	b	7168 <gcc_c_fe_context@@Base+0x1108>
    7158:	mov	w19, wzr
    715c:	ldr	x0, [sp]
    7160:	cbz	x0, 7168 <gcc_c_fe_context@@Base+0x1108>
    7164:	bl	5090 <_ZdaPv@plt>
    7168:	mov	w0, w19
    716c:	ldp	x20, x19, [sp, #32]
    7170:	ldp	x29, x30, [sp, #16]
    7174:	add	sp, sp, #0x30
    7178:	ret
    717c:	ldr	x8, [sp]
    7180:	mov	x19, x0
    7184:	cbz	x8, 7190 <gcc_c_fe_context@@Base+0x1130>
    7188:	mov	x0, x8
    718c:	bl	5090 <_ZdaPv@plt>
    7190:	mov	x0, x19
    7194:	bl	5240 <_Unwind_Resume@plt>
    7198:	sub	sp, sp, #0x30
    719c:	stp	x29, x30, [sp, #16]
    71a0:	stp	x20, x19, [sp, #32]
    71a4:	add	x29, sp, #0x10
    71a8:	mov	x19, x0
    71ac:	str	xzr, [sp, #8]
    71b0:	mov	w1, #0x1                   	// #1
    71b4:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    71b8:	cbz	w0, 720c <gcc_c_fe_context@@Base+0x11ac>
    71bc:	add	x1, sp, #0x8
    71c0:	mov	x0, x19
    71c4:	bl	e580 <gcc_cp_fe_context@@Base+0x4c14>
    71c8:	cbz	w0, 720c <gcc_c_fe_context@@Base+0x11ac>
    71cc:	ldr	x1, [x19, #24]
    71d0:	ldr	x2, [sp, #8]
    71d4:	ldp	x8, x0, [x1, #32]
    71d8:	blr	x8
    71dc:	mov	x20, x0
    71e0:	mov	w1, #0x52                  	// #82
    71e4:	mov	x0, x19
    71e8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    71ec:	cbz	w0, 720c <gcc_c_fe_context@@Base+0x11ac>
    71f0:	mov	x0, x19
    71f4:	mov	x1, x20
    71f8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    71fc:	mov	w19, w0
    7200:	ldr	x0, [sp, #8]
    7204:	cbnz	x0, 7218 <gcc_c_fe_context@@Base+0x11b8>
    7208:	b	721c <gcc_c_fe_context@@Base+0x11bc>
    720c:	mov	w19, wzr
    7210:	ldr	x0, [sp, #8]
    7214:	cbz	x0, 721c <gcc_c_fe_context@@Base+0x11bc>
    7218:	bl	5090 <_ZdaPv@plt>
    721c:	mov	w0, w19
    7220:	ldp	x20, x19, [sp, #32]
    7224:	ldp	x29, x30, [sp, #16]
    7228:	add	sp, sp, #0x30
    722c:	ret
    7230:	ldr	x8, [sp, #8]
    7234:	mov	x19, x0
    7238:	cbz	x8, 7244 <gcc_c_fe_context@@Base+0x11e4>
    723c:	mov	x0, x8
    7240:	bl	5090 <_ZdaPv@plt>
    7244:	mov	x0, x19
    7248:	bl	5240 <_Unwind_Resume@plt>
    724c:	stp	x1, x2, [x0, #24]
    7250:	str	x3, [x0, #40]
    7254:	ret
    7258:	ret
    725c:	b	4ff0 <_ZdlPv@plt>
    7260:	mov	x8, x0
    7264:	ldr	x0, [x0, #16]
    7268:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    726c:	add	x10, x8, #0x20
    7270:	add	x9, x9, #0x570
    7274:	cmp	x0, x10
    7278:	str	x9, [x8]
    727c:	b.eq	7284 <gcc_c_fe_context@@Base+0x1224>  // b.none
    7280:	b	4ff0 <_ZdlPv@plt>
    7284:	ret
    7288:	stp	x29, x30, [sp, #-32]!
    728c:	str	x19, [sp, #16]
    7290:	mov	x29, sp
    7294:	mov	x19, x0
    7298:	ldr	x0, [x0, #16]
    729c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    72a0:	add	x9, x19, #0x20
    72a4:	add	x8, x8, #0x570
    72a8:	cmp	x0, x9
    72ac:	str	x8, [x19]
    72b0:	b.eq	72b8 <gcc_c_fe_context@@Base+0x1258>  // b.none
    72b4:	bl	4ff0 <_ZdlPv@plt>
    72b8:	mov	x0, x19
    72bc:	ldr	x19, [sp, #16]
    72c0:	ldp	x29, x30, [sp], #32
    72c4:	b	4ff0 <_ZdlPv@plt>
    72c8:	mov	x8, x0
    72cc:	ldr	x0, [x0, #16]
    72d0:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    72d4:	add	x10, x8, #0x20
    72d8:	add	x9, x9, #0x5b0
    72dc:	cmp	x0, x10
    72e0:	str	x9, [x8]
    72e4:	b.eq	72ec <gcc_c_fe_context@@Base+0x128c>  // b.none
    72e8:	b	4ff0 <_ZdlPv@plt>
    72ec:	ret
    72f0:	stp	x29, x30, [sp, #-32]!
    72f4:	str	x19, [sp, #16]
    72f8:	mov	x29, sp
    72fc:	mov	x19, x0
    7300:	ldr	x0, [x0, #16]
    7304:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7308:	add	x9, x19, #0x20
    730c:	add	x8, x8, #0x5b0
    7310:	cmp	x0, x9
    7314:	str	x8, [x19]
    7318:	b.eq	7320 <gcc_c_fe_context@@Base+0x12c0>  // b.none
    731c:	bl	4ff0 <_ZdlPv@plt>
    7320:	mov	x0, x19
    7324:	ldr	x19, [sp, #16]
    7328:	ldp	x29, x30, [sp], #32
    732c:	b	4ff0 <_ZdlPv@plt>
    7330:	str	x30, [sp, #-16]!
    7334:	bl	4ec0 <__cxa_begin_catch@plt>
    7338:	bl	4e30 <_ZSt9terminatev@plt>

000000000000733c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    733c:	stp	x29, x30, [sp, #-80]!
    7340:	stp	x26, x25, [sp, #16]
    7344:	stp	x24, x23, [sp, #32]
    7348:	stp	x22, x21, [sp, #48]
    734c:	stp	x20, x19, [sp, #64]
    7350:	mov	x29, sp
    7354:	ldp	x20, x24, [x0]
    7358:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
    735c:	sub	x8, x24, x20
    7360:	cmp	x8, x9
    7364:	b.eq	7514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d8>  // b.none
    7368:	asr	x9, x8, #5
    736c:	cmp	x8, #0x0
    7370:	csinc	x10, x9, xzr, ne  // ne = any
    7374:	adds	x9, x10, x9
    7378:	lsr	x11, x9, #58
    737c:	cset	w10, cs  // cs = hs, nlast
    7380:	cmp	x11, #0x0
    7384:	cset	w11, ne  // ne = any
    7388:	orr	w10, w10, w11
    738c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    7390:	cmp	w10, #0x0
    7394:	csel	x25, x8, x9, ne  // ne = any
    7398:	sub	x8, x1, x20
    739c:	mov	x23, x2
    73a0:	mov	x19, x0
    73a4:	mov	x21, x1
    73a8:	asr	x26, x8, #5
    73ac:	cbz	x25, 73c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x84>
    73b0:	lsl	x0, x25, #5
    73b4:	bl	5000 <_Znwm@plt>
    73b8:	mov	x22, x0
    73bc:	b	73c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x88>
    73c0:	mov	x22, xzr
    73c4:	add	x9, x22, x26, lsl #5
    73c8:	add	x10, x9, #0x10
    73cc:	str	x10, [x9]
    73d0:	mov	x8, x23
    73d4:	ldr	x11, [x8], #16
    73d8:	cmp	x11, x8
    73dc:	b.eq	73f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb4>  // b.none
    73e0:	str	x11, [x9]
    73e4:	ldr	x10, [x23, #16]
    73e8:	str	x10, [x9, #16]
    73ec:	b	73f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc>
    73f0:	ldr	q0, [x11]
    73f4:	str	q0, [x10]
    73f8:	ldr	x9, [x23, #8]
    73fc:	add	x10, x22, x26, lsl #5
    7400:	cmp	x20, x21
    7404:	str	x9, [x10, #8]
    7408:	stp	x8, xzr, [x23]
    740c:	mov	x8, x22
    7410:	strb	wzr, [x23, #16]
    7414:	b.eq	7470 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x134>  // b.none
    7418:	add	x8, x22, #0x10
    741c:	add	x9, x20, #0x10
    7420:	b	7450 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x114>
    7424:	stur	x10, [x8, #-16]
    7428:	ldr	x10, [x9]
    742c:	str	x10, [x8]
    7430:	ldur	x10, [x9, #-8]
    7434:	add	x11, x9, #0x10
    7438:	cmp	x11, x21
    743c:	stur	x10, [x8, #-8]
    7440:	stp	x9, xzr, [x9, #-16]
    7444:	strb	wzr, [x9], #32
    7448:	add	x8, x8, #0x20
    744c:	b.eq	746c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130>  // b.none
    7450:	stur	x8, [x8, #-16]
    7454:	ldur	x10, [x9, #-16]
    7458:	cmp	x10, x9
    745c:	b.ne	7424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe8>  // b.any
    7460:	ldr	q0, [x10]
    7464:	str	q0, [x8]
    7468:	b	7430 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>
    746c:	sub	x8, x8, #0x10
    7470:	cmp	x24, x21
    7474:	b.eq	74e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a4>  // b.none
    7478:	mov	x9, xzr
    747c:	b	74b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x174>
    7480:	str	x13, [x11, #32]
    7484:	ldr	x12, [x12, #16]
    7488:	str	x12, [x11, #48]
    748c:	ldur	x11, [x10, #-8]
    7490:	add	x13, x10, #0x10
    7494:	add	x12, x8, x9
    7498:	cmp	x13, x24
    749c:	add	x9, x9, #0x20
    74a0:	str	x11, [x12, #40]
    74a4:	stp	x10, xzr, [x10, #-16]
    74a8:	strb	wzr, [x10]
    74ac:	b.eq	74dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a0>  // b.none
    74b0:	add	x11, x8, x9
    74b4:	add	x10, x11, #0x30
    74b8:	add	x12, x21, x9
    74bc:	str	x10, [x11, #32]
    74c0:	mov	x10, x12
    74c4:	ldr	x13, [x10], #16
    74c8:	cmp	x13, x10
    74cc:	b.ne	7480 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144>  // b.any
    74d0:	ldr	q0, [x13]
    74d4:	str	q0, [x11, #48]
    74d8:	b	748c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x150>
    74dc:	add	x8, x8, x9
    74e0:	add	x21, x8, #0x20
    74e4:	cbz	x20, 74f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b4>
    74e8:	mov	x0, x20
    74ec:	bl	4ff0 <_ZdlPv@plt>
    74f0:	add	x8, x22, x25, lsl #5
    74f4:	stp	x22, x21, [x19]
    74f8:	str	x8, [x19, #16]
    74fc:	ldp	x20, x19, [sp, #64]
    7500:	ldp	x22, x21, [sp, #48]
    7504:	ldp	x24, x23, [sp, #32]
    7508:	ldp	x26, x25, [sp, #16]
    750c:	ldp	x29, x30, [sp], #80
    7510:	ret
    7514:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    7518:	add	x0, x0, #0x777
    751c:	bl	4ee0 <_ZSt20__throw_length_errorPKc@plt>

0000000000007520 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    7520:	sub	sp, sp, #0x70
    7524:	stp	x29, x30, [sp, #16]
    7528:	stp	x28, x27, [sp, #32]
    752c:	stp	x26, x25, [sp, #48]
    7530:	stp	x24, x23, [sp, #64]
    7534:	stp	x22, x21, [sp, #80]
    7538:	stp	x20, x19, [sp, #96]
    753c:	add	x29, sp, #0x10
    7540:	ldp	x20, x27, [x0]
    7544:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
    7548:	sub	x8, x27, x20
    754c:	cmp	x8, x9
    7550:	b.eq	7758 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x238>  // b.none
    7554:	asr	x9, x8, #5
    7558:	cmp	x8, #0x0
    755c:	csinc	x10, x9, xzr, ne  // ne = any
    7560:	adds	x9, x10, x9
    7564:	lsr	x11, x9, #58
    7568:	cset	w10, cs  // cs = hs, nlast
    756c:	cmp	x11, #0x0
    7570:	cset	w11, ne  // ne = any
    7574:	orr	w10, w10, w11
    7578:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    757c:	cmp	w10, #0x0
    7580:	csel	x9, x8, x9, ne  // ne = any
    7584:	sub	x8, x1, x20
    7588:	mov	x26, x2
    758c:	mov	x19, x0
    7590:	mov	x22, x1
    7594:	asr	x28, x8, #5
    7598:	str	x9, [sp]
    759c:	cbz	x9, 75b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x90>
    75a0:	lsl	x0, x9, #5
    75a4:	bl	5000 <_Znwm@plt>
    75a8:	mov	x21, x0
    75ac:	b	75b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x94>
    75b0:	mov	x21, xzr
    75b4:	add	x23, x21, x28, lsl #5
    75b8:	add	x24, x23, #0x10
    75bc:	str	x24, [x23]
    75c0:	ldp	x25, x26, [x26]
    75c4:	cbnz	x25, 75cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac>
    75c8:	cbnz	x26, 774c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22c>
    75cc:	cmp	x26, #0x10
    75d0:	str	x26, [sp, #8]
    75d4:	b.cc	75fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdc>  // b.lo, b.ul, b.last
    75d8:	add	x1, sp, #0x8
    75dc:	mov	x0, x23
    75e0:	mov	x2, xzr
    75e4:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    75e8:	str	x0, [x23]
    75ec:	ldr	x8, [sp, #8]
    75f0:	add	x9, x21, x28, lsl #5
    75f4:	mov	x24, x0
    75f8:	str	x8, [x9, #16]
    75fc:	cbz	x26, 7624 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>
    7600:	cmp	x26, #0x1
    7604:	b.ne	7614 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>  // b.any
    7608:	ldrb	w8, [x25]
    760c:	strb	w8, [x24]
    7610:	b	7624 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>
    7614:	mov	x0, x24
    7618:	mov	x1, x25
    761c:	mov	x2, x26
    7620:	bl	4db0 <memcpy@plt>
    7624:	ldr	x8, [sp, #8]
    7628:	add	x9, x21, x28, lsl #5
    762c:	cmp	x20, x22
    7630:	str	x8, [x9, #8]
    7634:	ldr	x9, [x23]
    7638:	strb	wzr, [x9, x8]
    763c:	mov	x8, x21
    7640:	b.eq	769c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17c>  // b.none
    7644:	add	x8, x21, #0x10
    7648:	add	x9, x20, #0x10
    764c:	b	7678 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>
    7650:	ldr	q0, [x10]
    7654:	str	q0, [x8]
    7658:	ldur	x10, [x9, #-8]
    765c:	add	x11, x9, #0x10
    7660:	cmp	x11, x22
    7664:	stur	x10, [x8, #-8]
    7668:	stp	x9, xzr, [x9, #-16]
    766c:	strb	wzr, [x9], #32
    7670:	add	x8, x8, #0x20
    7674:	b.eq	7698 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x178>  // b.none
    7678:	stur	x8, [x8, #-16]
    767c:	ldur	x10, [x9, #-16]
    7680:	cmp	x10, x9
    7684:	b.eq	7650 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130>  // b.none
    7688:	stur	x10, [x8, #-16]
    768c:	ldr	x10, [x9]
    7690:	str	x10, [x8]
    7694:	b	7658 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>
    7698:	sub	x8, x8, #0x10
    769c:	cmp	x27, x22
    76a0:	b.eq	770c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ec>  // b.none
    76a4:	mov	x9, xzr
    76a8:	b	76d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b8>
    76ac:	ldr	q0, [x13]
    76b0:	str	q0, [x11, #48]
    76b4:	ldur	x11, [x10, #-8]
    76b8:	add	x13, x10, #0x10
    76bc:	add	x12, x8, x9
    76c0:	cmp	x13, x27
    76c4:	add	x9, x9, #0x20
    76c8:	str	x11, [x12, #40]
    76cc:	stp	x10, xzr, [x10, #-16]
    76d0:	strb	wzr, [x10]
    76d4:	b.eq	7708 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e8>  // b.none
    76d8:	add	x11, x8, x9
    76dc:	add	x10, x11, #0x30
    76e0:	add	x12, x22, x9
    76e4:	str	x10, [x11, #32]
    76e8:	mov	x10, x12
    76ec:	ldr	x13, [x10], #16
    76f0:	cmp	x13, x10
    76f4:	b.eq	76ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18c>  // b.none
    76f8:	str	x13, [x11, #32]
    76fc:	ldr	x12, [x12, #16]
    7700:	str	x12, [x11, #48]
    7704:	b	76b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x194>
    7708:	add	x8, x8, x9
    770c:	add	x22, x8, #0x20
    7710:	cbz	x20, 771c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fc>
    7714:	mov	x0, x20
    7718:	bl	4ff0 <_ZdlPv@plt>
    771c:	stp	x21, x22, [x19]
    7720:	ldr	x8, [sp]
    7724:	add	x8, x21, x8, lsl #5
    7728:	str	x8, [x19, #16]
    772c:	ldp	x20, x19, [sp, #96]
    7730:	ldp	x22, x21, [sp, #80]
    7734:	ldp	x24, x23, [sp, #64]
    7738:	ldp	x26, x25, [sp, #48]
    773c:	ldp	x28, x27, [sp, #32]
    7740:	ldp	x29, x30, [sp, #16]
    7744:	add	sp, sp, #0x70
    7748:	ret
    774c:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    7750:	add	x0, x0, #0x4bd
    7754:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    7758:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    775c:	add	x0, x0, #0x777
    7760:	bl	4ee0 <_ZSt20__throw_length_errorPKc@plt>
    7764:	bl	4ec0 <__cxa_begin_catch@plt>
    7768:	cbnz	x21, 777c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x25c>
    776c:	ldr	x0, [x23]
    7770:	cmp	x0, x24
    7774:	b.ne	7780 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x260>  // b.any
    7778:	b	7784 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x264>
    777c:	mov	x0, x21
    7780:	bl	4ff0 <_ZdlPv@plt>
    7784:	bl	5120 <__cxa_rethrow@plt>
    7788:	mov	x19, x0
    778c:	bl	51b0 <__cxa_end_catch@plt>
    7790:	mov	x0, x19
    7794:	bl	5240 <_Unwind_Resume@plt>
    7798:	bl	7330 <gcc_c_fe_context@@Base+0x12d0>
    779c:	stp	x29, x30, [sp, #-32]!
    77a0:	str	x19, [sp, #16]
    77a4:	mov	x29, sp
    77a8:	mov	x19, x0
    77ac:	bl	e100 <gcc_cp_fe_context@@Base+0x4794>
    77b0:	mov	x0, x19
    77b4:	ldr	x19, [sp, #16]
    77b8:	ldp	x29, x30, [sp], #32
    77bc:	b	4ff0 <_ZdlPv@plt>
    77c0:	ldr	x8, [x0, #24]
    77c4:	ldp	x2, x0, [x8, #48]
    77c8:	br	x2
    77cc:	sub	sp, sp, #0x30
    77d0:	stp	x29, x30, [sp, #32]
    77d4:	add	x29, sp, #0x20
    77d8:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    77dc:	ldr	x0, [x0, #16]
    77e0:	ldr	x10, [x10, #3296]
    77e4:	mov	x8, x5
    77e8:	mov	x9, x4
    77ec:	mov	x5, x3
    77f0:	ldr	x10, [x10]
    77f4:	mov	w4, w2
    77f8:	mov	x3, x1
    77fc:	str	w7, [sp, #8]
    7800:	sub	x2, x29, #0x8
    7804:	str	x6, [sp]
    7808:	mov	x1, x10
    780c:	mov	x6, x9
    7810:	mov	x7, x8
    7814:	bl	80dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbbc>
    7818:	ldur	x8, [x29, #-8]
    781c:	ldp	x29, x30, [sp, #32]
    7820:	cmp	w0, #0x0
    7824:	csel	x0, xzr, x8, eq  // eq = none
    7828:	add	sp, sp, #0x30
    782c:	ret
    7830:	sub	sp, sp, #0x20
    7834:	stp	x29, x30, [sp, #16]
    7838:	add	x29, sp, #0x10
    783c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7840:	ldr	x0, [x0, #16]
    7844:	ldr	x8, [x8, #4040]
    7848:	mov	w4, w2
    784c:	mov	x3, x1
    7850:	sub	x2, x29, #0x4
    7854:	ldr	x8, [x8]
    7858:	mov	x1, x8
    785c:	bl	8200 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xce0>
    7860:	ldur	w8, [x29, #-4]
    7864:	ldp	x29, x30, [sp, #16]
    7868:	cmp	w0, #0x0
    786c:	csel	w0, wzr, w8, eq  // eq = none
    7870:	add	sp, sp, #0x20
    7874:	ret
    7878:	sub	sp, sp, #0x20
    787c:	stp	x29, x30, [sp, #16]
    7880:	add	x29, sp, #0x10
    7884:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7888:	ldr	x0, [x0, #16]
    788c:	ldr	x8, [x8, #3624]
    7890:	mov	w6, w4
    7894:	mov	x5, x3
    7898:	mov	x4, x2
    789c:	ldr	x8, [x8]
    78a0:	mov	x3, x1
    78a4:	sub	x2, x29, #0x4
    78a8:	mov	x1, x8
    78ac:	bl	82b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd94>
    78b0:	ldur	w8, [x29, #-4]
    78b4:	ldp	x29, x30, [sp, #16]
    78b8:	cmp	w0, #0x0
    78bc:	csel	w0, wzr, w8, eq  // eq = none
    78c0:	add	sp, sp, #0x20
    78c4:	ret
    78c8:	sub	sp, sp, #0x20
    78cc:	stp	x29, x30, [sp, #16]
    78d0:	add	x29, sp, #0x10
    78d4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    78d8:	ldr	x0, [x0, #16]
    78dc:	ldr	x8, [x8, #3528]
    78e0:	mov	x3, x1
    78e4:	add	x2, sp, #0x8
    78e8:	ldr	x8, [x8]
    78ec:	mov	x1, x8
    78f0:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    78f4:	ldr	x8, [sp, #8]
    78f8:	ldp	x29, x30, [sp, #16]
    78fc:	cmp	w0, #0x0
    7900:	csel	x0, xzr, x8, eq  // eq = none
    7904:	add	sp, sp, #0x20
    7908:	ret
    790c:	sub	sp, sp, #0x30
    7910:	stp	x29, x30, [sp, #16]
    7914:	stp	x20, x19, [sp, #32]
    7918:	add	x29, sp, #0x10
    791c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7920:	ldr	x19, [x0, #16]
    7924:	ldr	x8, [x8, #3920]
    7928:	mov	w1, #0x51                  	// #81
    792c:	mov	x0, x19
    7930:	ldr	x20, [x8]
    7934:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    7938:	cbz	w0, 7990 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x470>
    793c:	mov	x0, x19
    7940:	mov	x1, x20
    7944:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    7948:	cbz	w0, 7990 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x470>
    794c:	mov	x0, x19
    7950:	mov	x1, xzr
    7954:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    7958:	cbz	w0, 7990 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x470>
    795c:	mov	w1, #0x1                   	// #1
    7960:	mov	x0, x19
    7964:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    7968:	cbz	w0, 7990 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x470>
    796c:	add	x1, sp, #0x8
    7970:	mov	x0, x19
    7974:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    7978:	cbz	w0, 7990 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x470>
    797c:	ldr	x0, [sp, #8]
    7980:	ldp	x20, x19, [sp, #32]
    7984:	ldp	x29, x30, [sp, #16]
    7988:	add	sp, sp, #0x30
    798c:	ret
    7990:	mov	x0, xzr
    7994:	ldp	x20, x19, [sp, #32]
    7998:	ldp	x29, x30, [sp, #16]
    799c:	add	sp, sp, #0x30
    79a0:	ret
    79a4:	sub	sp, sp, #0x30
    79a8:	stp	x29, x30, [sp, #16]
    79ac:	stp	x20, x19, [sp, #32]
    79b0:	add	x29, sp, #0x10
    79b4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    79b8:	ldr	x19, [x0, #16]
    79bc:	ldr	x8, [x8, #3216]
    79c0:	mov	w1, #0x51                  	// #81
    79c4:	mov	x0, x19
    79c8:	ldr	x20, [x8]
    79cc:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    79d0:	cbz	w0, 7a28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    79d4:	mov	x0, x19
    79d8:	mov	x1, x20
    79dc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    79e0:	cbz	w0, 7a28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    79e4:	mov	x0, x19
    79e8:	mov	x1, xzr
    79ec:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    79f0:	cbz	w0, 7a28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    79f4:	mov	w1, #0x1                   	// #1
    79f8:	mov	x0, x19
    79fc:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    7a00:	cbz	w0, 7a28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    7a04:	add	x1, sp, #0x8
    7a08:	mov	x0, x19
    7a0c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    7a10:	cbz	w0, 7a28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    7a14:	ldr	x0, [sp, #8]
    7a18:	ldp	x20, x19, [sp, #32]
    7a1c:	ldp	x29, x30, [sp, #16]
    7a20:	add	sp, sp, #0x30
    7a24:	ret
    7a28:	mov	x0, xzr
    7a2c:	ldp	x20, x19, [sp, #32]
    7a30:	ldp	x29, x30, [sp, #16]
    7a34:	add	sp, sp, #0x30
    7a38:	ret
    7a3c:	sub	sp, sp, #0x20
    7a40:	stp	x29, x30, [sp, #16]
    7a44:	add	x29, sp, #0x10
    7a48:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7a4c:	ldr	x0, [x0, #16]
    7a50:	ldr	x8, [x8, #3376]
    7a54:	mov	x7, x5
    7a58:	mov	x6, x4
    7a5c:	mov	x5, x3
    7a60:	ldr	x8, [x8]
    7a64:	mov	x4, x2
    7a68:	mov	x3, x1
    7a6c:	sub	x2, x29, #0x4
    7a70:	mov	x1, x8
    7a74:	bl	8438 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf18>
    7a78:	ldur	w8, [x29, #-4]
    7a7c:	ldp	x29, x30, [sp, #16]
    7a80:	cmp	w0, #0x0
    7a84:	csel	w0, wzr, w8, eq  // eq = none
    7a88:	add	sp, sp, #0x20
    7a8c:	ret
    7a90:	sub	sp, sp, #0x20
    7a94:	stp	x29, x30, [sp, #16]
    7a98:	add	x29, sp, #0x10
    7a9c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7aa0:	ldr	x0, [x0, #16]
    7aa4:	ldr	x8, [x8, #4056]
    7aa8:	mov	x4, x2
    7aac:	mov	x3, x1
    7ab0:	sub	x2, x29, #0x4
    7ab4:	ldr	x8, [x8]
    7ab8:	mov	x1, x8
    7abc:	bl	8538 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1018>
    7ac0:	ldur	w8, [x29, #-4]
    7ac4:	ldp	x29, x30, [sp, #16]
    7ac8:	cmp	w0, #0x0
    7acc:	csel	w0, wzr, w8, eq  // eq = none
    7ad0:	add	sp, sp, #0x20
    7ad4:	ret
    7ad8:	sub	sp, sp, #0x20
    7adc:	stp	x29, x30, [sp, #16]
    7ae0:	add	x29, sp, #0x10
    7ae4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7ae8:	ldr	x0, [x0, #16]
    7aec:	ldr	x8, [x8, #3936]
    7af0:	mov	x3, x1
    7af4:	add	x2, sp, #0x8
    7af8:	ldr	x8, [x8]
    7afc:	mov	x1, x8
    7b00:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    7b04:	ldr	x8, [sp, #8]
    7b08:	ldp	x29, x30, [sp, #16]
    7b0c:	cmp	w0, #0x0
    7b10:	csel	x0, xzr, x8, eq  // eq = none
    7b14:	add	sp, sp, #0x20
    7b18:	ret
    7b1c:	sub	sp, sp, #0x20
    7b20:	stp	x29, x30, [sp, #16]
    7b24:	add	x29, sp, #0x10
    7b28:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7b2c:	ldr	x0, [x0, #16]
    7b30:	ldr	x8, [x8, #3432]
    7b34:	mov	x5, x3
    7b38:	mov	x4, x2
    7b3c:	mov	x3, x1
    7b40:	ldr	x8, [x8]
    7b44:	sub	x2, x29, #0x4
    7b48:	mov	x1, x8
    7b4c:	bl	85ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10cc>
    7b50:	ldur	w8, [x29, #-4]
    7b54:	ldp	x29, x30, [sp, #16]
    7b58:	cmp	w0, #0x0
    7b5c:	csel	w0, wzr, w8, eq  // eq = none
    7b60:	add	sp, sp, #0x20
    7b64:	ret
    7b68:	sub	sp, sp, #0x20
    7b6c:	stp	x29, x30, [sp, #16]
    7b70:	add	x29, sp, #0x10
    7b74:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7b78:	ldr	x0, [x0, #16]
    7b7c:	ldr	x8, [x8, #3648]
    7b80:	mov	x3, x1
    7b84:	sub	x2, x29, #0x4
    7b88:	ldr	x8, [x8]
    7b8c:	mov	x1, x8
    7b90:	bl	86bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x119c>
    7b94:	ldur	w8, [x29, #-4]
    7b98:	ldp	x29, x30, [sp, #16]
    7b9c:	cmp	w0, #0x0
    7ba0:	csel	w0, wzr, w8, eq  // eq = none
    7ba4:	add	sp, sp, #0x20
    7ba8:	ret
    7bac:	sub	sp, sp, #0x20
    7bb0:	stp	x29, x30, [sp, #16]
    7bb4:	add	x29, sp, #0x10
    7bb8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7bbc:	ldr	x0, [x0, #16]
    7bc0:	ldr	x8, [x8, #3944]
    7bc4:	mov	w5, w3
    7bc8:	mov	x4, x2
    7bcc:	mov	x3, x1
    7bd0:	ldr	x8, [x8]
    7bd4:	add	x2, sp, #0x8
    7bd8:	mov	x1, x8
    7bdc:	bl	875c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x123c>
    7be0:	ldr	x8, [sp, #8]
    7be4:	ldp	x29, x30, [sp, #16]
    7be8:	cmp	w0, #0x0
    7bec:	csel	x0, xzr, x8, eq  // eq = none
    7bf0:	add	sp, sp, #0x20
    7bf4:	ret
    7bf8:	sub	sp, sp, #0x20
    7bfc:	stp	x29, x30, [sp, #16]
    7c00:	add	x29, sp, #0x10
    7c04:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7c08:	ldr	x0, [x0, #16]
    7c0c:	ldr	x8, [x8, #3464]
    7c10:	mov	x4, x2
    7c14:	mov	w3, w1
    7c18:	add	x2, sp, #0x8
    7c1c:	ldr	x8, [x8]
    7c20:	mov	x1, x8
    7c24:	bl	882c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130c>
    7c28:	ldr	x8, [sp, #8]
    7c2c:	ldp	x29, x30, [sp, #16]
    7c30:	cmp	w0, #0x0
    7c34:	csel	x0, xzr, x8, eq  // eq = none
    7c38:	add	sp, sp, #0x20
    7c3c:	ret
    7c40:	sub	sp, sp, #0x20
    7c44:	stp	x29, x30, [sp, #16]
    7c48:	add	x29, sp, #0x10
    7c4c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7c50:	ldr	x0, [x0, #16]
    7c54:	ldr	x8, [x8, #3520]
    7c58:	mov	x3, x1
    7c5c:	add	x2, sp, #0x8
    7c60:	ldr	x8, [x8]
    7c64:	mov	x1, x8
    7c68:	bl	88e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13c0>
    7c6c:	ldr	x8, [sp, #8]
    7c70:	ldp	x29, x30, [sp, #16]
    7c74:	cmp	w0, #0x0
    7c78:	csel	x0, xzr, x8, eq  // eq = none
    7c7c:	add	sp, sp, #0x20
    7c80:	ret
    7c84:	sub	sp, sp, #0x30
    7c88:	stp	x29, x30, [sp, #16]
    7c8c:	stp	x20, x19, [sp, #32]
    7c90:	add	x29, sp, #0x10
    7c94:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7c98:	ldr	x19, [x0, #16]
    7c9c:	ldr	x8, [x8, #3312]
    7ca0:	mov	w1, #0x51                  	// #81
    7ca4:	mov	x0, x19
    7ca8:	ldr	x20, [x8]
    7cac:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    7cb0:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7e8>
    7cb4:	mov	x0, x19
    7cb8:	mov	x1, x20
    7cbc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    7cc0:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7e8>
    7cc4:	mov	x0, x19
    7cc8:	mov	x1, xzr
    7ccc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    7cd0:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7e8>
    7cd4:	mov	w1, #0x1                   	// #1
    7cd8:	mov	x0, x19
    7cdc:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    7ce0:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7e8>
    7ce4:	add	x1, sp, #0x8
    7ce8:	mov	x0, x19
    7cec:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    7cf0:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7e8>
    7cf4:	ldr	x0, [sp, #8]
    7cf8:	ldp	x20, x19, [sp, #32]
    7cfc:	ldp	x29, x30, [sp, #16]
    7d00:	add	sp, sp, #0x30
    7d04:	ret
    7d08:	mov	x0, xzr
    7d0c:	ldp	x20, x19, [sp, #32]
    7d10:	ldp	x29, x30, [sp, #16]
    7d14:	add	sp, sp, #0x30
    7d18:	ret
    7d1c:	sub	sp, sp, #0x30
    7d20:	stp	x29, x30, [sp, #16]
    7d24:	stp	x20, x19, [sp, #32]
    7d28:	add	x29, sp, #0x10
    7d2c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7d30:	ldr	x19, [x0, #16]
    7d34:	ldr	x8, [x8, #3856]
    7d38:	mov	w1, #0x51                  	// #81
    7d3c:	mov	x0, x19
    7d40:	ldr	x20, [x8]
    7d44:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    7d48:	cbz	w0, 7da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x880>
    7d4c:	mov	x0, x19
    7d50:	mov	x1, x20
    7d54:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    7d58:	cbz	w0, 7da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x880>
    7d5c:	mov	x0, x19
    7d60:	mov	x1, xzr
    7d64:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    7d68:	cbz	w0, 7da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x880>
    7d6c:	mov	w1, #0x1                   	// #1
    7d70:	mov	x0, x19
    7d74:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    7d78:	cbz	w0, 7da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x880>
    7d7c:	add	x1, sp, #0x8
    7d80:	mov	x0, x19
    7d84:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    7d88:	cbz	w0, 7da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x880>
    7d8c:	ldr	x0, [sp, #8]
    7d90:	ldp	x20, x19, [sp, #32]
    7d94:	ldp	x29, x30, [sp, #16]
    7d98:	add	sp, sp, #0x30
    7d9c:	ret
    7da0:	mov	x0, xzr
    7da4:	ldp	x20, x19, [sp, #32]
    7da8:	ldp	x29, x30, [sp, #16]
    7dac:	add	sp, sp, #0x30
    7db0:	ret
    7db4:	sub	sp, sp, #0x20
    7db8:	stp	x29, x30, [sp, #16]
    7dbc:	add	x29, sp, #0x10
    7dc0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7dc4:	ldr	x0, [x0, #16]
    7dc8:	ldr	x8, [x8, #3600]
    7dcc:	mov	w4, w2
    7dd0:	mov	x3, x1
    7dd4:	add	x2, sp, #0x8
    7dd8:	ldr	x8, [x8]
    7ddc:	mov	x1, x8
    7de0:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    7de4:	ldr	x8, [sp, #8]
    7de8:	ldp	x29, x30, [sp, #16]
    7dec:	cmp	w0, #0x0
    7df0:	csel	x0, xzr, x8, eq  // eq = none
    7df4:	add	sp, sp, #0x20
    7df8:	ret
    7dfc:	sub	sp, sp, #0x20
    7e00:	stp	x29, x30, [sp, #16]
    7e04:	add	x29, sp, #0x10
    7e08:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7e0c:	ldr	x0, [x0, #16]
    7e10:	ldr	x8, [x8, #3200]
    7e14:	mov	x4, x2
    7e18:	mov	x3, x1
    7e1c:	add	x2, sp, #0x8
    7e20:	ldr	x8, [x8]
    7e24:	mov	x1, x8
    7e28:	bl	8a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1514>
    7e2c:	ldr	x8, [sp, #8]
    7e30:	ldp	x29, x30, [sp, #16]
    7e34:	cmp	w0, #0x0
    7e38:	csel	x0, xzr, x8, eq  // eq = none
    7e3c:	add	sp, sp, #0x20
    7e40:	ret
    7e44:	sub	sp, sp, #0x20
    7e48:	stp	x29, x30, [sp, #16]
    7e4c:	add	x29, sp, #0x10
    7e50:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7e54:	ldr	x0, [x0, #16]
    7e58:	ldr	x8, [x8, #3672]
    7e5c:	mov	w4, w2
    7e60:	mov	x3, x1
    7e64:	add	x2, sp, #0x8
    7e68:	ldr	x8, [x8]
    7e6c:	mov	x1, x8
    7e70:	bl	8ae8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15c8>
    7e74:	ldr	x8, [sp, #8]
    7e78:	ldp	x29, x30, [sp, #16]
    7e7c:	cmp	w0, #0x0
    7e80:	csel	x0, xzr, x8, eq  // eq = none
    7e84:	add	sp, sp, #0x20
    7e88:	ret
    7e8c:	sub	sp, sp, #0x20
    7e90:	stp	x29, x30, [sp, #16]
    7e94:	add	x29, sp, #0x10
    7e98:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7e9c:	ldr	x0, [x0, #16]
    7ea0:	ldr	x8, [x8, #3752]
    7ea4:	mov	x3, x1
    7ea8:	add	x2, sp, #0x8
    7eac:	ldr	x8, [x8]
    7eb0:	mov	x1, x8
    7eb4:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    7eb8:	ldr	x8, [sp, #8]
    7ebc:	ldp	x29, x30, [sp, #16]
    7ec0:	cmp	w0, #0x0
    7ec4:	csel	x0, xzr, x8, eq  // eq = none
    7ec8:	add	sp, sp, #0x20
    7ecc:	ret
    7ed0:	sub	sp, sp, #0x20
    7ed4:	stp	x29, x30, [sp, #16]
    7ed8:	add	x29, sp, #0x10
    7edc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7ee0:	ldr	x0, [x0, #16]
    7ee4:	ldr	x8, [x8, #3816]
    7ee8:	mov	w4, w2
    7eec:	mov	x3, x1
    7ef0:	add	x2, sp, #0x8
    7ef4:	ldr	x8, [x8]
    7ef8:	mov	x1, x8
    7efc:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    7f00:	ldr	x8, [sp, #8]
    7f04:	ldp	x29, x30, [sp, #16]
    7f08:	cmp	w0, #0x0
    7f0c:	csel	x0, xzr, x8, eq  // eq = none
    7f10:	add	sp, sp, #0x20
    7f14:	ret
    7f18:	sub	sp, sp, #0x20
    7f1c:	stp	x29, x30, [sp, #16]
    7f20:	add	x29, sp, #0x10
    7f24:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7f28:	ldr	x0, [x0, #16]
    7f2c:	ldr	x8, [x8, #3392]
    7f30:	mov	w7, w5
    7f34:	mov	x6, x4
    7f38:	mov	x5, x3
    7f3c:	ldr	x8, [x8]
    7f40:	mov	x4, x2
    7f44:	mov	x3, x1
    7f48:	sub	x2, x29, #0x4
    7f4c:	mov	x1, x8
    7f50:	bl	8b9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x167c>
    7f54:	ldur	w8, [x29, #-4]
    7f58:	ldp	x29, x30, [sp, #16]
    7f5c:	cmp	w0, #0x0
    7f60:	csel	w0, wzr, w8, eq  // eq = none
    7f64:	add	sp, sp, #0x20
    7f68:	ret
    7f6c:	sub	sp, sp, #0x20
    7f70:	stp	x29, x30, [sp, #16]
    7f74:	add	x29, sp, #0x10
    7f78:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7f7c:	ldr	x0, [x0, #16]
    7f80:	ldr	x8, [x8, #3208]
    7f84:	mov	x3, x1
    7f88:	add	x2, sp, #0x8
    7f8c:	ldr	x8, [x8]
    7f90:	mov	x1, x8
    7f94:	bl	8c9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x177c>
    7f98:	ldr	x8, [sp, #8]
    7f9c:	ldp	x29, x30, [sp, #16]
    7fa0:	cmp	w0, #0x0
    7fa4:	csel	x0, xzr, x8, eq  // eq = none
    7fa8:	add	sp, sp, #0x20
    7fac:	ret
    7fb0:	sub	sp, sp, #0x20
    7fb4:	stp	x29, x30, [sp, #16]
    7fb8:	add	x29, sp, #0x10
    7fbc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    7fc0:	ldr	x0, [x0, #16]
    7fc4:	ldr	x8, [x8, #3832]
    7fc8:	mov	x5, x3
    7fcc:	mov	x4, x2
    7fd0:	mov	w3, w1
    7fd4:	ldr	x8, [x8]
    7fd8:	add	x2, sp, #0x8
    7fdc:	mov	x1, x8
    7fe0:	bl	8d3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x181c>
    7fe4:	ldr	x8, [sp, #8]
    7fe8:	ldp	x29, x30, [sp, #16]
    7fec:	cmp	w0, #0x0
    7ff0:	csel	x0, xzr, x8, eq  // eq = none
    7ff4:	add	sp, sp, #0x20
    7ff8:	ret
    7ffc:	sub	sp, sp, #0x30
    8000:	stp	x29, x30, [sp, #16]
    8004:	stp	x20, x19, [sp, #32]
    8008:	add	x29, sp, #0x10
    800c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    8010:	ldr	x19, [x0, #16]
    8014:	ldr	x8, [x8, #3576]
    8018:	mov	w1, #0x51                  	// #81
    801c:	mov	x0, x19
    8020:	ldr	x20, [x8]
    8024:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8028:	cbz	w0, 8080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    802c:	mov	x0, x19
    8030:	mov	x1, x20
    8034:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8038:	cbz	w0, 8080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    803c:	mov	x0, x19
    8040:	mov	x1, xzr
    8044:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8048:	cbz	w0, 8080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    804c:	mov	w1, #0x1                   	// #1
    8050:	mov	x0, x19
    8054:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8058:	cbz	w0, 8080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    805c:	add	x1, sp, #0x8
    8060:	mov	x0, x19
    8064:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8068:	cbz	w0, 8080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    806c:	ldr	x0, [sp, #8]
    8070:	ldp	x20, x19, [sp, #32]
    8074:	ldp	x29, x30, [sp, #16]
    8078:	add	sp, sp, #0x30
    807c:	ret
    8080:	mov	x0, xzr
    8084:	ldp	x20, x19, [sp, #32]
    8088:	ldp	x29, x30, [sp, #16]
    808c:	add	sp, sp, #0x30
    8090:	ret
    8094:	sub	sp, sp, #0x20
    8098:	stp	x29, x30, [sp, #16]
    809c:	add	x29, sp, #0x10
    80a0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    80a4:	ldr	x0, [x0, #16]
    80a8:	ldr	x8, [x8, #3232]
    80ac:	mov	x4, x2
    80b0:	mov	x3, x1
    80b4:	add	x2, sp, #0x8
    80b8:	ldr	x8, [x8]
    80bc:	mov	x1, x8
    80c0:	bl	8e0c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18ec>
    80c4:	ldr	x8, [sp, #8]
    80c8:	ldp	x29, x30, [sp, #16]
    80cc:	cmp	w0, #0x0
    80d0:	csel	x0, xzr, x8, eq  // eq = none
    80d4:	add	sp, sp, #0x20
    80d8:	ret
    80dc:	sub	sp, sp, #0x60
    80e0:	stp	x29, x30, [sp, #16]
    80e4:	stp	x26, x25, [sp, #32]
    80e8:	stp	x24, x23, [sp, #48]
    80ec:	stp	x22, x21, [sp, #64]
    80f0:	stp	x20, x19, [sp, #80]
    80f4:	add	x29, sp, #0x10
    80f8:	mov	x26, x1
    80fc:	mov	w1, #0x51                  	// #81
    8100:	mov	x21, x7
    8104:	mov	x22, x6
    8108:	mov	x23, x5
    810c:	mov	w24, w4
    8110:	mov	x25, x3
    8114:	mov	x19, x2
    8118:	mov	x20, x0
    811c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8120:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8124:	mov	x0, x20
    8128:	mov	x1, x26
    812c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8130:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8134:	mov	w1, #0x7                   	// #7
    8138:	mov	x0, x20
    813c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8140:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8144:	mov	x0, x20
    8148:	mov	x1, x25
    814c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8150:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8154:	mov	w1, w24
    8158:	mov	x0, x20
    815c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8160:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8164:	mov	x0, x20
    8168:	mov	x1, x23
    816c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8170:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8174:	mov	x0, x20
    8178:	mov	x1, x22
    817c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8180:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8184:	mov	x0, x20
    8188:	mov	x1, x21
    818c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8190:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    8194:	ldr	x1, [x29, #80]
    8198:	mov	x0, x20
    819c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    81a0:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    81a4:	ldr	w8, [x29, #88]
    81a8:	mov	x0, x20
    81ac:	mov	w1, w8
    81b0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    81b4:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    81b8:	mov	w1, #0x1                   	// #1
    81bc:	mov	x0, x20
    81c0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    81c4:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    81c8:	add	x1, sp, #0x8
    81cc:	mov	x0, x20
    81d0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    81d4:	cbz	w0, 81e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc4>
    81d8:	ldr	x8, [sp, #8]
    81dc:	mov	w0, #0x1                   	// #1
    81e0:	str	x8, [x19]
    81e4:	ldp	x20, x19, [sp, #80]
    81e8:	ldp	x22, x21, [sp, #64]
    81ec:	ldp	x24, x23, [sp, #48]
    81f0:	ldp	x26, x25, [sp, #32]
    81f4:	ldp	x29, x30, [sp, #16]
    81f8:	add	sp, sp, #0x60
    81fc:	ret
    8200:	stp	x29, x30, [sp, #-64]!
    8204:	str	x23, [sp, #16]
    8208:	stp	x22, x21, [sp, #32]
    820c:	stp	x20, x19, [sp, #48]
    8210:	mov	x29, sp
    8214:	mov	x23, x1
    8218:	mov	w1, #0x51                  	// #81
    821c:	mov	w21, w4
    8220:	mov	x22, x3
    8224:	mov	x19, x2
    8228:	mov	x20, x0
    822c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8230:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8234:	mov	x0, x20
    8238:	mov	x1, x23
    823c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8240:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8244:	mov	w1, #0x2                   	// #2
    8248:	mov	x0, x20
    824c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8250:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8254:	mov	x0, x20
    8258:	mov	x1, x22
    825c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8260:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8264:	sxtw	x1, w21
    8268:	mov	x0, x20
    826c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8270:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8274:	mov	w1, #0x1                   	// #1
    8278:	mov	x0, x20
    827c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8280:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8284:	add	x1, x29, #0x18
    8288:	mov	x0, x20
    828c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8290:	cbz	w0, 82a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd80>
    8294:	ldr	x8, [x29, #24]
    8298:	mov	w0, #0x1                   	// #1
    829c:	str	w8, [x19]
    82a0:	ldp	x20, x19, [sp, #48]
    82a4:	ldp	x22, x21, [sp, #32]
    82a8:	ldr	x23, [sp, #16]
    82ac:	ldp	x29, x30, [sp], #64
    82b0:	ret
    82b4:	stp	x29, x30, [sp, #-80]!
    82b8:	str	x25, [sp, #16]
    82bc:	stp	x24, x23, [sp, #32]
    82c0:	stp	x22, x21, [sp, #48]
    82c4:	stp	x20, x19, [sp, #64]
    82c8:	mov	x29, sp
    82cc:	mov	x25, x1
    82d0:	mov	w1, #0x51                  	// #81
    82d4:	mov	w21, w6
    82d8:	mov	x22, x5
    82dc:	mov	x23, x4
    82e0:	mov	x24, x3
    82e4:	mov	x19, x2
    82e8:	mov	x20, x0
    82ec:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    82f0:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    82f4:	mov	x0, x20
    82f8:	mov	x1, x25
    82fc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8300:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8304:	mov	w1, #0x4                   	// #4
    8308:	mov	x0, x20
    830c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8310:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8314:	mov	x0, x20
    8318:	mov	x1, x24
    831c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8320:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8324:	mov	x0, x20
    8328:	mov	x1, x23
    832c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8330:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8334:	mov	x0, x20
    8338:	mov	x1, x22
    833c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8340:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8344:	mov	w1, w21
    8348:	mov	x0, x20
    834c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8350:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8354:	mov	w1, #0x1                   	// #1
    8358:	mov	x0, x20
    835c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8360:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8364:	add	x1, x29, #0x18
    8368:	mov	x0, x20
    836c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8370:	cbz	w0, 8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe60>
    8374:	ldr	x8, [x29, #24]
    8378:	mov	w0, #0x1                   	// #1
    837c:	str	w8, [x19]
    8380:	ldp	x20, x19, [sp, #64]
    8384:	ldp	x22, x21, [sp, #48]
    8388:	ldp	x24, x23, [sp, #32]
    838c:	ldr	x25, [sp, #16]
    8390:	ldp	x29, x30, [sp], #80
    8394:	ret
    8398:	sub	sp, sp, #0x40
    839c:	stp	x29, x30, [sp, #16]
    83a0:	stp	x22, x21, [sp, #32]
    83a4:	stp	x20, x19, [sp, #48]
    83a8:	add	x29, sp, #0x10
    83ac:	mov	x22, x1
    83b0:	mov	w1, #0x51                  	// #81
    83b4:	mov	x21, x3
    83b8:	mov	x19, x2
    83bc:	mov	x20, x0
    83c0:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    83c4:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    83c8:	mov	x0, x20
    83cc:	mov	x1, x22
    83d0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    83d4:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    83d8:	mov	w1, #0x1                   	// #1
    83dc:	mov	x0, x20
    83e0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    83e4:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    83e8:	mov	x0, x20
    83ec:	mov	x1, x21
    83f0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    83f4:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    83f8:	mov	w1, #0x1                   	// #1
    83fc:	mov	x0, x20
    8400:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8404:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    8408:	add	x1, sp, #0x8
    840c:	mov	x0, x20
    8410:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8414:	cbz	w0, 8424 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf04>
    8418:	ldr	x8, [sp, #8]
    841c:	mov	w0, #0x1                   	// #1
    8420:	str	x8, [x19]
    8424:	ldp	x20, x19, [sp, #48]
    8428:	ldp	x22, x21, [sp, #32]
    842c:	ldp	x29, x30, [sp, #16]
    8430:	add	sp, sp, #0x40
    8434:	ret
    8438:	sub	sp, sp, #0x60
    843c:	stp	x29, x30, [sp, #16]
    8440:	stp	x26, x25, [sp, #32]
    8444:	stp	x24, x23, [sp, #48]
    8448:	stp	x22, x21, [sp, #64]
    844c:	stp	x20, x19, [sp, #80]
    8450:	add	x29, sp, #0x10
    8454:	mov	x26, x1
    8458:	mov	w1, #0x51                  	// #81
    845c:	mov	x21, x7
    8460:	mov	x22, x6
    8464:	mov	x23, x5
    8468:	mov	x24, x4
    846c:	mov	x25, x3
    8470:	mov	x19, x2
    8474:	mov	x20, x0
    8478:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    847c:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    8480:	mov	x0, x20
    8484:	mov	x1, x26
    8488:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    848c:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    8490:	mov	w1, #0x5                   	// #5
    8494:	mov	x0, x20
    8498:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    849c:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84a0:	mov	x0, x20
    84a4:	mov	x1, x25
    84a8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    84ac:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84b0:	mov	x0, x20
    84b4:	mov	x1, x24
    84b8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    84bc:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84c0:	mov	x0, x20
    84c4:	mov	x1, x23
    84c8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    84cc:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84d0:	mov	x0, x20
    84d4:	mov	x1, x22
    84d8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    84dc:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84e0:	mov	x0, x20
    84e4:	mov	x1, x21
    84e8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    84ec:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    84f0:	mov	w1, #0x1                   	// #1
    84f4:	mov	x0, x20
    84f8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    84fc:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    8500:	add	x1, sp, #0x8
    8504:	mov	x0, x20
    8508:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    850c:	cbz	w0, 851c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xffc>
    8510:	ldr	x8, [sp, #8]
    8514:	mov	w0, #0x1                   	// #1
    8518:	str	w8, [x19]
    851c:	ldp	x20, x19, [sp, #80]
    8520:	ldp	x22, x21, [sp, #64]
    8524:	ldp	x24, x23, [sp, #48]
    8528:	ldp	x26, x25, [sp, #32]
    852c:	ldp	x29, x30, [sp, #16]
    8530:	add	sp, sp, #0x60
    8534:	ret
    8538:	stp	x29, x30, [sp, #-64]!
    853c:	str	x23, [sp, #16]
    8540:	stp	x22, x21, [sp, #32]
    8544:	stp	x20, x19, [sp, #48]
    8548:	mov	x29, sp
    854c:	mov	x23, x1
    8550:	mov	w1, #0x51                  	// #81
    8554:	mov	x21, x4
    8558:	mov	x22, x3
    855c:	mov	x19, x2
    8560:	mov	x20, x0
    8564:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8568:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    856c:	mov	x0, x20
    8570:	mov	x1, x23
    8574:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8578:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    857c:	mov	w1, #0x2                   	// #2
    8580:	mov	x0, x20
    8584:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8588:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    858c:	mov	x0, x20
    8590:	mov	x1, x22
    8594:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8598:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    859c:	mov	x0, x20
    85a0:	mov	x1, x21
    85a4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    85a8:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    85ac:	mov	w1, #0x1                   	// #1
    85b0:	mov	x0, x20
    85b4:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    85b8:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    85bc:	add	x1, x29, #0x18
    85c0:	mov	x0, x20
    85c4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    85c8:	cbz	w0, 85d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10b8>
    85cc:	ldr	x8, [x29, #24]
    85d0:	mov	w0, #0x1                   	// #1
    85d4:	str	w8, [x19]
    85d8:	ldp	x20, x19, [sp, #48]
    85dc:	ldp	x22, x21, [sp, #32]
    85e0:	ldr	x23, [sp, #16]
    85e4:	ldp	x29, x30, [sp], #64
    85e8:	ret
    85ec:	sub	sp, sp, #0x50
    85f0:	stp	x29, x30, [sp, #16]
    85f4:	stp	x24, x23, [sp, #32]
    85f8:	stp	x22, x21, [sp, #48]
    85fc:	stp	x20, x19, [sp, #64]
    8600:	add	x29, sp, #0x10
    8604:	mov	x24, x1
    8608:	mov	w1, #0x51                  	// #81
    860c:	mov	x21, x5
    8610:	mov	x22, x4
    8614:	mov	x23, x3
    8618:	mov	x19, x2
    861c:	mov	x20, x0
    8620:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8624:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8628:	mov	x0, x20
    862c:	mov	x1, x24
    8630:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8634:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8638:	mov	w1, #0x3                   	// #3
    863c:	mov	x0, x20
    8640:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8644:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8648:	mov	x0, x20
    864c:	mov	x1, x23
    8650:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8654:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8658:	mov	x0, x20
    865c:	mov	x1, x22
    8660:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8664:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8668:	mov	x0, x20
    866c:	mov	x1, x21
    8670:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8674:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8678:	mov	w1, #0x1                   	// #1
    867c:	mov	x0, x20
    8680:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8684:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8688:	add	x1, sp, #0x8
    868c:	mov	x0, x20
    8690:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8694:	cbz	w0, 86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1184>
    8698:	ldr	x8, [sp, #8]
    869c:	mov	w0, #0x1                   	// #1
    86a0:	str	w8, [x19]
    86a4:	ldp	x20, x19, [sp, #64]
    86a8:	ldp	x22, x21, [sp, #48]
    86ac:	ldp	x24, x23, [sp, #32]
    86b0:	ldp	x29, x30, [sp, #16]
    86b4:	add	sp, sp, #0x50
    86b8:	ret
    86bc:	sub	sp, sp, #0x40
    86c0:	stp	x29, x30, [sp, #16]
    86c4:	stp	x22, x21, [sp, #32]
    86c8:	stp	x20, x19, [sp, #48]
    86cc:	add	x29, sp, #0x10
    86d0:	mov	x22, x1
    86d4:	mov	w1, #0x51                  	// #81
    86d8:	mov	x21, x3
    86dc:	mov	x19, x2
    86e0:	mov	x20, x0
    86e4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    86e8:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    86ec:	mov	x0, x20
    86f0:	mov	x1, x22
    86f4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    86f8:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    86fc:	mov	w1, #0x1                   	// #1
    8700:	mov	x0, x20
    8704:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8708:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    870c:	mov	x0, x20
    8710:	mov	x1, x21
    8714:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8718:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    871c:	mov	w1, #0x1                   	// #1
    8720:	mov	x0, x20
    8724:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8728:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    872c:	add	x1, sp, #0x8
    8730:	mov	x0, x20
    8734:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8738:	cbz	w0, 8748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1228>
    873c:	ldr	x8, [sp, #8]
    8740:	mov	w0, #0x1                   	// #1
    8744:	str	w8, [x19]
    8748:	ldp	x20, x19, [sp, #48]
    874c:	ldp	x22, x21, [sp, #32]
    8750:	ldp	x29, x30, [sp, #16]
    8754:	add	sp, sp, #0x40
    8758:	ret
    875c:	sub	sp, sp, #0x50
    8760:	stp	x29, x30, [sp, #16]
    8764:	stp	x24, x23, [sp, #32]
    8768:	stp	x22, x21, [sp, #48]
    876c:	stp	x20, x19, [sp, #64]
    8770:	add	x29, sp, #0x10
    8774:	mov	x24, x1
    8778:	mov	w1, #0x51                  	// #81
    877c:	mov	w21, w5
    8780:	mov	x22, x4
    8784:	mov	x23, x3
    8788:	mov	x19, x2
    878c:	mov	x20, x0
    8790:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8794:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    8798:	mov	x0, x20
    879c:	mov	x1, x24
    87a0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    87a4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87a8:	mov	w1, #0x3                   	// #3
    87ac:	mov	x0, x20
    87b0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    87b4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87b8:	mov	x0, x20
    87bc:	mov	x1, x23
    87c0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    87c4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87c8:	mov	x0, x20
    87cc:	mov	x1, x22
    87d0:	bl	e6ec <gcc_cp_fe_context@@Base+0x4d80>
    87d4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87d8:	sxtw	x1, w21
    87dc:	mov	x0, x20
    87e0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    87e4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87e8:	mov	w1, #0x1                   	// #1
    87ec:	mov	x0, x20
    87f0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    87f4:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    87f8:	add	x1, sp, #0x8
    87fc:	mov	x0, x20
    8800:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8804:	cbz	w0, 8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12f4>
    8808:	ldr	x8, [sp, #8]
    880c:	mov	w0, #0x1                   	// #1
    8810:	str	x8, [x19]
    8814:	ldp	x20, x19, [sp, #64]
    8818:	ldp	x22, x21, [sp, #48]
    881c:	ldp	x24, x23, [sp, #32]
    8820:	ldp	x29, x30, [sp, #16]
    8824:	add	sp, sp, #0x50
    8828:	ret
    882c:	stp	x29, x30, [sp, #-64]!
    8830:	str	x23, [sp, #16]
    8834:	stp	x22, x21, [sp, #32]
    8838:	stp	x20, x19, [sp, #48]
    883c:	mov	x29, sp
    8840:	mov	x23, x1
    8844:	mov	w1, #0x51                  	// #81
    8848:	mov	x21, x4
    884c:	mov	w22, w3
    8850:	mov	x19, x2
    8854:	mov	x20, x0
    8858:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    885c:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    8860:	mov	x0, x20
    8864:	mov	x1, x23
    8868:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    886c:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    8870:	mov	w1, #0x2                   	// #2
    8874:	mov	x0, x20
    8878:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    887c:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    8880:	sxtw	x1, w22
    8884:	mov	x0, x20
    8888:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    888c:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    8890:	mov	x0, x20
    8894:	mov	x1, x21
    8898:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    889c:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    88a0:	mov	w1, #0x1                   	// #1
    88a4:	mov	x0, x20
    88a8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    88ac:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    88b0:	add	x1, x29, #0x18
    88b4:	mov	x0, x20
    88b8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    88bc:	cbz	w0, 88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13ac>
    88c0:	ldr	x8, [x29, #24]
    88c4:	mov	w0, #0x1                   	// #1
    88c8:	str	x8, [x19]
    88cc:	ldp	x20, x19, [sp, #48]
    88d0:	ldp	x22, x21, [sp, #32]
    88d4:	ldr	x23, [sp, #16]
    88d8:	ldp	x29, x30, [sp], #64
    88dc:	ret
    88e0:	sub	sp, sp, #0x40
    88e4:	stp	x29, x30, [sp, #16]
    88e8:	stp	x22, x21, [sp, #32]
    88ec:	stp	x20, x19, [sp, #48]
    88f0:	add	x29, sp, #0x10
    88f4:	mov	x22, x1
    88f8:	mov	w1, #0x51                  	// #81
    88fc:	mov	x21, x3
    8900:	mov	x19, x2
    8904:	mov	x20, x0
    8908:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    890c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8910:	mov	x0, x20
    8914:	mov	x1, x22
    8918:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    891c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8920:	mov	w1, #0x1                   	// #1
    8924:	mov	x0, x20
    8928:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    892c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8930:	mov	x0, x20
    8934:	mov	x1, x21
    8938:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    893c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8940:	mov	w1, #0x1                   	// #1
    8944:	mov	x0, x20
    8948:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    894c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8950:	add	x1, sp, #0x8
    8954:	mov	x0, x20
    8958:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    895c:	cbz	w0, 896c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144c>
    8960:	ldr	x8, [sp, #8]
    8964:	mov	w0, #0x1                   	// #1
    8968:	str	x8, [x19]
    896c:	ldp	x20, x19, [sp, #48]
    8970:	ldp	x22, x21, [sp, #32]
    8974:	ldp	x29, x30, [sp, #16]
    8978:	add	sp, sp, #0x40
    897c:	ret
    8980:	stp	x29, x30, [sp, #-64]!
    8984:	str	x23, [sp, #16]
    8988:	stp	x22, x21, [sp, #32]
    898c:	stp	x20, x19, [sp, #48]
    8990:	mov	x29, sp
    8994:	mov	x23, x1
    8998:	mov	w1, #0x51                  	// #81
    899c:	mov	w21, w4
    89a0:	mov	x22, x3
    89a4:	mov	x19, x2
    89a8:	mov	x20, x0
    89ac:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    89b0:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    89b4:	mov	x0, x20
    89b8:	mov	x1, x23
    89bc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    89c0:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    89c4:	mov	w1, #0x2                   	// #2
    89c8:	mov	x0, x20
    89cc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    89d0:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    89d4:	mov	x0, x20
    89d8:	mov	x1, x22
    89dc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    89e0:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    89e4:	sxtw	x1, w21
    89e8:	mov	x0, x20
    89ec:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    89f0:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    89f4:	mov	w1, #0x1                   	// #1
    89f8:	mov	x0, x20
    89fc:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8a00:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    8a04:	add	x1, x29, #0x18
    8a08:	mov	x0, x20
    8a0c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8a10:	cbz	w0, 8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1500>
    8a14:	ldr	x8, [x29, #24]
    8a18:	mov	w0, #0x1                   	// #1
    8a1c:	str	x8, [x19]
    8a20:	ldp	x20, x19, [sp, #48]
    8a24:	ldp	x22, x21, [sp, #32]
    8a28:	ldr	x23, [sp, #16]
    8a2c:	ldp	x29, x30, [sp], #64
    8a30:	ret
    8a34:	stp	x29, x30, [sp, #-64]!
    8a38:	str	x23, [sp, #16]
    8a3c:	stp	x22, x21, [sp, #32]
    8a40:	stp	x20, x19, [sp, #48]
    8a44:	mov	x29, sp
    8a48:	mov	x23, x1
    8a4c:	mov	w1, #0x51                  	// #81
    8a50:	mov	x21, x4
    8a54:	mov	x22, x3
    8a58:	mov	x19, x2
    8a5c:	mov	x20, x0
    8a60:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8a64:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8a68:	mov	x0, x20
    8a6c:	mov	x1, x23
    8a70:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8a74:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8a78:	mov	w1, #0x2                   	// #2
    8a7c:	mov	x0, x20
    8a80:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8a84:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8a88:	mov	x0, x20
    8a8c:	mov	x1, x22
    8a90:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8a94:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8a98:	mov	x0, x20
    8a9c:	mov	x1, x21
    8aa0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8aa4:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8aa8:	mov	w1, #0x1                   	// #1
    8aac:	mov	x0, x20
    8ab0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8ab4:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8ab8:	add	x1, x29, #0x18
    8abc:	mov	x0, x20
    8ac0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8ac4:	cbz	w0, 8ad4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15b4>
    8ac8:	ldr	x8, [x29, #24]
    8acc:	mov	w0, #0x1                   	// #1
    8ad0:	str	x8, [x19]
    8ad4:	ldp	x20, x19, [sp, #48]
    8ad8:	ldp	x22, x21, [sp, #32]
    8adc:	ldr	x23, [sp, #16]
    8ae0:	ldp	x29, x30, [sp], #64
    8ae4:	ret
    8ae8:	stp	x29, x30, [sp, #-64]!
    8aec:	str	x23, [sp, #16]
    8af0:	stp	x22, x21, [sp, #32]
    8af4:	stp	x20, x19, [sp, #48]
    8af8:	mov	x29, sp
    8afc:	mov	x23, x1
    8b00:	mov	w1, #0x51                  	// #81
    8b04:	mov	w21, w4
    8b08:	mov	x22, x3
    8b0c:	mov	x19, x2
    8b10:	mov	x20, x0
    8b14:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8b18:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b1c:	mov	x0, x20
    8b20:	mov	x1, x23
    8b24:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8b28:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b2c:	mov	w1, #0x2                   	// #2
    8b30:	mov	x0, x20
    8b34:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8b38:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b3c:	mov	x0, x20
    8b40:	mov	x1, x22
    8b44:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8b48:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b4c:	mov	w1, w21
    8b50:	mov	x0, x20
    8b54:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8b58:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b5c:	mov	w1, #0x1                   	// #1
    8b60:	mov	x0, x20
    8b64:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8b68:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b6c:	add	x1, x29, #0x18
    8b70:	mov	x0, x20
    8b74:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8b78:	cbz	w0, 8b88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1668>
    8b7c:	ldr	x8, [x29, #24]
    8b80:	mov	w0, #0x1                   	// #1
    8b84:	str	x8, [x19]
    8b88:	ldp	x20, x19, [sp, #48]
    8b8c:	ldp	x22, x21, [sp, #32]
    8b90:	ldr	x23, [sp, #16]
    8b94:	ldp	x29, x30, [sp], #64
    8b98:	ret
    8b9c:	sub	sp, sp, #0x60
    8ba0:	stp	x29, x30, [sp, #16]
    8ba4:	stp	x26, x25, [sp, #32]
    8ba8:	stp	x24, x23, [sp, #48]
    8bac:	stp	x22, x21, [sp, #64]
    8bb0:	stp	x20, x19, [sp, #80]
    8bb4:	add	x29, sp, #0x10
    8bb8:	mov	x26, x1
    8bbc:	mov	w1, #0x51                  	// #81
    8bc0:	mov	w21, w7
    8bc4:	mov	x22, x6
    8bc8:	mov	x23, x5
    8bcc:	mov	x24, x4
    8bd0:	mov	x25, x3
    8bd4:	mov	x19, x2
    8bd8:	mov	x20, x0
    8bdc:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8be0:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8be4:	mov	x0, x20
    8be8:	mov	x1, x26
    8bec:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8bf0:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8bf4:	mov	w1, #0x5                   	// #5
    8bf8:	mov	x0, x20
    8bfc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8c00:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c04:	mov	x0, x20
    8c08:	mov	x1, x25
    8c0c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8c10:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c14:	mov	x0, x20
    8c18:	mov	x1, x24
    8c1c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8c20:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c24:	mov	x0, x20
    8c28:	mov	x1, x23
    8c2c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8c30:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c34:	mov	x0, x20
    8c38:	mov	x1, x22
    8c3c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8c40:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c44:	mov	w1, w21
    8c48:	mov	x0, x20
    8c4c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8c50:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c54:	mov	w1, #0x1                   	// #1
    8c58:	mov	x0, x20
    8c5c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8c60:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c64:	add	x1, sp, #0x8
    8c68:	mov	x0, x20
    8c6c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8c70:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1760>
    8c74:	ldr	x8, [sp, #8]
    8c78:	mov	w0, #0x1                   	// #1
    8c7c:	str	w8, [x19]
    8c80:	ldp	x20, x19, [sp, #80]
    8c84:	ldp	x22, x21, [sp, #64]
    8c88:	ldp	x24, x23, [sp, #48]
    8c8c:	ldp	x26, x25, [sp, #32]
    8c90:	ldp	x29, x30, [sp, #16]
    8c94:	add	sp, sp, #0x60
    8c98:	ret
    8c9c:	sub	sp, sp, #0x40
    8ca0:	stp	x29, x30, [sp, #16]
    8ca4:	stp	x22, x21, [sp, #32]
    8ca8:	stp	x20, x19, [sp, #48]
    8cac:	add	x29, sp, #0x10
    8cb0:	mov	x22, x1
    8cb4:	mov	w1, #0x51                  	// #81
    8cb8:	mov	x21, x3
    8cbc:	mov	x19, x2
    8cc0:	mov	x20, x0
    8cc4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8cc8:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8ccc:	mov	x0, x20
    8cd0:	mov	x1, x22
    8cd4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8cd8:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8cdc:	mov	w1, #0x1                   	// #1
    8ce0:	mov	x0, x20
    8ce4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8ce8:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8cec:	mov	x0, x20
    8cf0:	mov	x1, x21
    8cf4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8cf8:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8cfc:	mov	w1, #0x1                   	// #1
    8d00:	mov	x0, x20
    8d04:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8d08:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8d0c:	add	x1, sp, #0x8
    8d10:	mov	x0, x20
    8d14:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8d18:	cbz	w0, 8d28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1808>
    8d1c:	ldr	x8, [sp, #8]
    8d20:	mov	w0, #0x1                   	// #1
    8d24:	str	x8, [x19]
    8d28:	ldp	x20, x19, [sp, #48]
    8d2c:	ldp	x22, x21, [sp, #32]
    8d30:	ldp	x29, x30, [sp, #16]
    8d34:	add	sp, sp, #0x40
    8d38:	ret
    8d3c:	sub	sp, sp, #0x50
    8d40:	stp	x29, x30, [sp, #16]
    8d44:	stp	x24, x23, [sp, #32]
    8d48:	stp	x22, x21, [sp, #48]
    8d4c:	stp	x20, x19, [sp, #64]
    8d50:	add	x29, sp, #0x10
    8d54:	mov	x24, x1
    8d58:	mov	w1, #0x51                  	// #81
    8d5c:	mov	x21, x5
    8d60:	mov	x22, x4
    8d64:	mov	w23, w3
    8d68:	mov	x19, x2
    8d6c:	mov	x20, x0
    8d70:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8d74:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8d78:	mov	x0, x20
    8d7c:	mov	x1, x24
    8d80:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8d84:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8d88:	mov	w1, #0x3                   	// #3
    8d8c:	mov	x0, x20
    8d90:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8d94:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8d98:	sxtw	x1, w23
    8d9c:	mov	x0, x20
    8da0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8da4:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8da8:	mov	x0, x20
    8dac:	mov	x1, x22
    8db0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8db4:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8db8:	mov	x0, x20
    8dbc:	mov	x1, x21
    8dc0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8dc4:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8dc8:	mov	w1, #0x1                   	// #1
    8dcc:	mov	x0, x20
    8dd0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8dd4:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8dd8:	add	x1, sp, #0x8
    8ddc:	mov	x0, x20
    8de0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8de4:	cbz	w0, 8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8de8:	ldr	x8, [sp, #8]
    8dec:	mov	w0, #0x1                   	// #1
    8df0:	str	x8, [x19]
    8df4:	ldp	x20, x19, [sp, #64]
    8df8:	ldp	x22, x21, [sp, #48]
    8dfc:	ldp	x24, x23, [sp, #32]
    8e00:	ldp	x29, x30, [sp, #16]
    8e04:	add	sp, sp, #0x50
    8e08:	ret
    8e0c:	stp	x29, x30, [sp, #-64]!
    8e10:	str	x23, [sp, #16]
    8e14:	stp	x22, x21, [sp, #32]
    8e18:	stp	x20, x19, [sp, #48]
    8e1c:	mov	x29, sp
    8e20:	mov	x23, x1
    8e24:	mov	w1, #0x51                  	// #81
    8e28:	mov	x21, x4
    8e2c:	mov	x22, x3
    8e30:	mov	x19, x2
    8e34:	mov	x20, x0
    8e38:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    8e3c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e40:	mov	x0, x20
    8e44:	mov	x1, x23
    8e48:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8e4c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e50:	mov	w1, #0x2                   	// #2
    8e54:	mov	x0, x20
    8e58:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8e5c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e60:	mov	x0, x20
    8e64:	mov	x1, x22
    8e68:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    8e6c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e70:	mov	x0, x20
    8e74:	mov	x1, x21
    8e78:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    8e7c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e80:	mov	w1, #0x1                   	// #1
    8e84:	mov	x0, x20
    8e88:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    8e8c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8e90:	add	x1, x29, #0x18
    8e94:	mov	x0, x20
    8e98:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8e9c:	cbz	w0, 8eac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8ea0:	ldr	x8, [x29, #24]
    8ea4:	mov	w0, #0x1                   	// #1
    8ea8:	str	x8, [x19]
    8eac:	ldp	x20, x19, [sp, #48]
    8eb0:	ldp	x22, x21, [sp, #32]
    8eb4:	ldr	x23, [sp, #16]
    8eb8:	ldp	x29, x30, [sp], #64
    8ebc:	ret
    8ec0:	stp	x29, x30, [sp, #-32]!
    8ec4:	str	x19, [sp, #16]
    8ec8:	mov	x29, sp
    8ecc:	mov	x19, x1
    8ed0:	add	x1, x29, #0x18
    8ed4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8ed8:	cbz	w0, 8ee8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19c8>
    8edc:	ldr	x8, [x29, #24]
    8ee0:	mov	w0, #0x1                   	// #1
    8ee4:	str	w8, [x19]
    8ee8:	ldr	x19, [sp, #16]
    8eec:	ldp	x29, x30, [sp], #32
    8ef0:	ret
    8ef4:	stp	x29, x30, [sp, #-32]!
    8ef8:	str	x19, [sp, #16]
    8efc:	mov	x29, sp
    8f00:	mov	x19, x1
    8f04:	add	x1, x29, #0x18
    8f08:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8f0c:	cbz	w0, 8f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19fc>
    8f10:	ldr	x8, [x29, #24]
    8f14:	mov	w0, #0x1                   	// #1
    8f18:	str	w8, [x19]
    8f1c:	ldr	x19, [sp, #16]
    8f20:	ldp	x29, x30, [sp], #32
    8f24:	ret
    8f28:	stp	x29, x30, [sp, #-32]!
    8f2c:	str	x19, [sp, #16]
    8f30:	mov	x29, sp
    8f34:	mov	x19, x1
    8f38:	add	x1, x29, #0x18
    8f3c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8f40:	cbz	w0, 8f50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a30>
    8f44:	ldr	x8, [x29, #24]
    8f48:	mov	w0, #0x1                   	// #1
    8f4c:	str	w8, [x19]
    8f50:	ldr	x19, [sp, #16]
    8f54:	ldp	x29, x30, [sp], #32
    8f58:	ret
    8f5c:	stp	x29, x30, [sp, #-32]!
    8f60:	str	x19, [sp, #16]
    8f64:	mov	x29, sp
    8f68:	mov	x19, x1
    8f6c:	add	x1, x29, #0x18
    8f70:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    8f74:	cbz	w0, 8f84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a64>
    8f78:	ldr	x8, [x29, #24]
    8f7c:	mov	w0, #0x1                   	// #1
    8f80:	str	w8, [x19]
    8f84:	ldr	x19, [sp, #16]
    8f88:	ldp	x29, x30, [sp], #32
    8f8c:	ret
    8f90:	stp	x29, x30, [sp, #-48]!
    8f94:	str	x21, [sp, #16]
    8f98:	stp	x20, x19, [sp, #32]
    8f9c:	mov	x29, sp
    8fa0:	mov	x20, x1
    8fa4:	mov	x19, x0
    8fa8:	cbz	x1, 8fb4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a94>
    8fac:	ldrsw	x21, [x20]
    8fb0:	b	8fb8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a98>
    8fb4:	mov	x21, #0xffffffffffffffff    	// #-1
    8fb8:	mov	w1, #0x76                  	// #118
    8fbc:	mov	x0, x19
    8fc0:	mov	x2, x21
    8fc4:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    8fc8:	cmp	w0, #0x0
    8fcc:	mov	w8, w0
    8fd0:	cset	w0, ne  // ne = any
    8fd4:	cbz	w8, 900c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1aec>
    8fd8:	cbz	x20, 900c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1aec>
    8fdc:	ldr	x2, [x20, #8]
    8fe0:	lsl	x1, x21, #3
    8fe4:	mov	x0, x19
    8fe8:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    8fec:	cbz	w0, 900c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1aec>
    8ff0:	ldr	x2, [x20, #16]
    8ff4:	lsl	x1, x21, #2
    8ff8:	mov	x0, x19
    8ffc:	ldp	x20, x19, [sp, #32]
    9000:	ldr	x21, [sp, #16]
    9004:	ldp	x29, x30, [sp], #48
    9008:	b	e67c <gcc_cp_fe_context@@Base+0x4d10>
    900c:	ldp	x20, x19, [sp, #32]
    9010:	ldr	x21, [sp, #16]
    9014:	ldp	x29, x30, [sp], #48
    9018:	ret
    901c:	stp	x29, x30, [sp, #-64]!
    9020:	str	x23, [sp, #16]
    9024:	stp	x22, x21, [sp, #32]
    9028:	stp	x20, x19, [sp, #48]
    902c:	mov	x29, sp
    9030:	mov	x20, x1
    9034:	add	x2, x29, #0x18
    9038:	mov	w1, #0x76                  	// #118
    903c:	mov	x21, x0
    9040:	bl	e68c <gcc_cp_fe_context@@Base+0x4d20>
    9044:	cbz	w0, 90fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bdc>
    9048:	ldr	x22, [x29, #24]
    904c:	cmn	x22, #0x1
    9050:	b.eq	90c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ba4>  // b.none
    9054:	mov	w0, #0x18                  	// #24
    9058:	bl	5000 <_Znwm@plt>
    905c:	cmp	xzr, x22, lsr #61
    9060:	lsl	x23, x22, #3
    9064:	mov	x19, x0
    9068:	str	w22, [x0]
    906c:	csinv	x0, x23, xzr, eq  // eq = none
    9070:	bl	4da0 <_Znam@plt>
    9074:	mov	x22, x0
    9078:	str	x0, [x19, #8]
    907c:	mov	x0, x21
    9080:	mov	x1, x23
    9084:	mov	x2, x22
    9088:	bl	e6dc <gcc_cp_fe_context@@Base+0x4d70>
    908c:	cbz	w0, 90d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bb0>
    9090:	ldr	x8, [x29, #24]
    9094:	cmp	xzr, x8, lsr #62
    9098:	lsl	x22, x8, #2
    909c:	csinv	x0, x22, xzr, eq  // eq = none
    90a0:	bl	4da0 <_Znam@plt>
    90a4:	mov	x2, x0
    90a8:	str	x0, [x19, #16]
    90ac:	mov	x0, x21
    90b0:	mov	x1, x22
    90b4:	bl	e6dc <gcc_cp_fe_context@@Base+0x4d70>
    90b8:	cbz	w0, 90d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bb8>
    90bc:	str	x19, [x20]
    90c0:	b	90c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ba8>
    90c4:	str	xzr, [x20]
    90c8:	mov	w0, #0x1                   	// #1
    90cc:	b	90fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bdc>
    90d0:	mov	x0, x22
    90d4:	b	90ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bcc>
    90d8:	ldr	x0, [x19, #16]
    90dc:	cbz	x0, 90e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bc4>
    90e0:	bl	5090 <_ZdaPv@plt>
    90e4:	ldr	x0, [x19, #8]
    90e8:	cbz	x0, 90f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bd0>
    90ec:	bl	5090 <_ZdaPv@plt>
    90f0:	mov	x0, x19
    90f4:	bl	4ff0 <_ZdlPv@plt>
    90f8:	mov	w0, wzr
    90fc:	ldp	x20, x19, [sp, #48]
    9100:	ldp	x22, x21, [sp, #32]
    9104:	ldr	x23, [sp, #16]
    9108:	ldp	x29, x30, [sp], #64
    910c:	ret
    9110:	stp	x29, x30, [sp, #-48]!
    9114:	str	x21, [sp, #16]
    9118:	stp	x20, x19, [sp, #32]
    911c:	mov	x29, sp
    9120:	mov	x20, x1
    9124:	mov	x19, x0
    9128:	cbz	x1, 9134 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c14>
    912c:	ldrsw	x21, [x20]
    9130:	b	9138 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c18>
    9134:	mov	x21, #0xffffffffffffffff    	// #-1
    9138:	mov	w1, #0x74                  	// #116
    913c:	mov	x0, x19
    9140:	mov	x2, x21
    9144:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    9148:	cmp	w0, #0x0
    914c:	mov	w8, w0
    9150:	cset	w0, ne  // ne = any
    9154:	cbz	w8, 918c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c6c>
    9158:	cbz	x20, 918c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c6c>
    915c:	ldr	x2, [x20, #8]
    9160:	mov	x0, x19
    9164:	mov	x1, x21
    9168:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    916c:	cbz	w0, 918c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c6c>
    9170:	ldr	x2, [x20, #16]
    9174:	lsl	x1, x21, #3
    9178:	mov	x0, x19
    917c:	ldp	x20, x19, [sp, #32]
    9180:	ldr	x21, [sp, #16]
    9184:	ldp	x29, x30, [sp], #48
    9188:	b	e67c <gcc_cp_fe_context@@Base+0x4d10>
    918c:	ldp	x20, x19, [sp, #32]
    9190:	ldr	x21, [sp, #16]
    9194:	ldp	x29, x30, [sp], #48
    9198:	ret
    919c:	stp	x29, x30, [sp, #-64]!
    91a0:	str	x23, [sp, #16]
    91a4:	stp	x22, x21, [sp, #32]
    91a8:	stp	x20, x19, [sp, #48]
    91ac:	mov	x29, sp
    91b0:	mov	x20, x1
    91b4:	add	x2, x29, #0x18
    91b8:	mov	w1, #0x74                  	// #116
    91bc:	mov	x21, x0
    91c0:	bl	e68c <gcc_cp_fe_context@@Base+0x4d20>
    91c4:	cbz	w0, 9274 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d54>
    91c8:	ldr	x22, [x29, #24]
    91cc:	cmn	x22, #0x1
    91d0:	b.eq	923c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d1c>  // b.none
    91d4:	mov	w0, #0x18                  	// #24
    91d8:	bl	5000 <_Znwm@plt>
    91dc:	mov	x19, x0
    91e0:	str	w22, [x0]
    91e4:	mov	x0, x22
    91e8:	bl	4da0 <_Znam@plt>
    91ec:	mov	x23, x0
    91f0:	str	x0, [x19, #8]
    91f4:	mov	x0, x21
    91f8:	mov	x1, x22
    91fc:	mov	x2, x23
    9200:	bl	e6dc <gcc_cp_fe_context@@Base+0x4d70>
    9204:	cbz	w0, 9248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d28>
    9208:	ldr	x8, [x29, #24]
    920c:	cmp	xzr, x8, lsr #61
    9210:	lsl	x22, x8, #3
    9214:	csinv	x0, x22, xzr, eq  // eq = none
    9218:	bl	4da0 <_Znam@plt>
    921c:	mov	x2, x0
    9220:	str	x0, [x19, #16]
    9224:	mov	x0, x21
    9228:	mov	x1, x22
    922c:	bl	e6dc <gcc_cp_fe_context@@Base+0x4d70>
    9230:	cbz	w0, 9250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d30>
    9234:	str	x19, [x20]
    9238:	b	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d20>
    923c:	str	xzr, [x20]
    9240:	mov	w0, #0x1                   	// #1
    9244:	b	9274 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d54>
    9248:	mov	x0, x23
    924c:	b	9264 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d44>
    9250:	ldr	x0, [x19, #16]
    9254:	cbz	x0, 925c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d3c>
    9258:	bl	5090 <_ZdaPv@plt>
    925c:	ldr	x0, [x19, #8]
    9260:	cbz	x0, 9268 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d48>
    9264:	bl	5090 <_ZdaPv@plt>
    9268:	mov	x0, x19
    926c:	bl	4ff0 <_ZdlPv@plt>
    9270:	mov	w0, wzr
    9274:	ldp	x20, x19, [sp, #48]
    9278:	ldp	x22, x21, [sp, #32]
    927c:	ldr	x23, [sp, #16]
    9280:	ldp	x29, x30, [sp], #64
    9284:	ret
    9288:	stp	x29, x30, [sp, #-48]!
    928c:	str	x21, [sp, #16]
    9290:	stp	x20, x19, [sp, #32]
    9294:	mov	x29, sp
    9298:	mov	x20, x1
    929c:	mov	x19, x0
    92a0:	cbz	x1, 92ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d8c>
    92a4:	ldrsw	x21, [x20]
    92a8:	b	92b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d90>
    92ac:	mov	x21, #0xffffffffffffffff    	// #-1
    92b0:	mov	w1, #0x64                  	// #100
    92b4:	mov	x0, x19
    92b8:	mov	x2, x21
    92bc:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    92c0:	cmp	w0, #0x0
    92c4:	mov	w8, w0
    92c8:	cset	w0, ne  // ne = any
    92cc:	cbz	w8, 92f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd0>
    92d0:	cbz	x20, 92f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd0>
    92d4:	ldr	x2, [x20, #8]
    92d8:	lsl	x1, x21, #3
    92dc:	mov	x0, x19
    92e0:	ldp	x20, x19, [sp, #32]
    92e4:	ldr	x21, [sp, #16]
    92e8:	ldp	x29, x30, [sp], #48
    92ec:	b	e67c <gcc_cp_fe_context@@Base+0x4d10>
    92f0:	ldp	x20, x19, [sp, #32]
    92f4:	ldr	x21, [sp, #16]
    92f8:	ldp	x29, x30, [sp], #48
    92fc:	ret
    9300:	stp	x29, x30, [sp, #-64]!
    9304:	str	x23, [sp, #16]
    9308:	stp	x22, x21, [sp, #32]
    930c:	stp	x20, x19, [sp, #48]
    9310:	mov	x29, sp
    9314:	mov	x19, x1
    9318:	add	x2, x29, #0x18
    931c:	mov	w1, #0x64                  	// #100
    9320:	mov	x20, x0
    9324:	bl	e68c <gcc_cp_fe_context@@Base+0x4d20>
    9328:	cbz	w0, 939c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e7c>
    932c:	ldr	x22, [x29, #24]
    9330:	cmn	x22, #0x1
    9334:	b.eq	937c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e5c>  // b.none
    9338:	mov	w0, #0x10                  	// #16
    933c:	bl	5000 <_Znwm@plt>
    9340:	cmp	xzr, x22, lsr #61
    9344:	lsl	x23, x22, #3
    9348:	mov	x21, x0
    934c:	str	w22, [x0]
    9350:	csinv	x0, x23, xzr, eq  // eq = none
    9354:	bl	4da0 <_Znam@plt>
    9358:	mov	x22, x0
    935c:	str	x0, [x21, #8]
    9360:	mov	x0, x20
    9364:	mov	x1, x23
    9368:	mov	x2, x22
    936c:	bl	e6dc <gcc_cp_fe_context@@Base+0x4d70>
    9370:	cbz	w0, 9388 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e68>
    9374:	str	x21, [x19]
    9378:	b	9380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e60>
    937c:	str	xzr, [x19]
    9380:	mov	w0, #0x1                   	// #1
    9384:	b	939c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e7c>
    9388:	mov	x0, x22
    938c:	bl	5090 <_ZdaPv@plt>
    9390:	mov	x0, x21
    9394:	bl	4ff0 <_ZdlPv@plt>
    9398:	mov	w0, wzr
    939c:	ldp	x20, x19, [sp, #48]
    93a0:	ldp	x22, x21, [sp, #32]
    93a4:	ldr	x23, [sp, #16]
    93a8:	ldp	x29, x30, [sp], #64
    93ac:	ret
    93b0:	stp	x29, x30, [sp, #-48]!
    93b4:	str	x21, [sp, #16]
    93b8:	stp	x20, x19, [sp, #32]
    93bc:	mov	x29, sp
    93c0:	movi	v0.2d, #0x0
    93c4:	mov	x8, x0
    93c8:	stp	xzr, xzr, [x0, #16]
    93cc:	str	xzr, [x0, #32]
    93d0:	stur	q0, [x0, #56]
    93d4:	stur	q0, [x0, #72]
    93d8:	stur	q0, [x0, #88]
    93dc:	strb	wzr, [x8, #120]!
    93e0:	mov	x21, x0
    93e4:	stp	x8, xzr, [x0, #104]
    93e8:	strb	wzr, [x0, #136]
    93ec:	mov	w0, #0x10                  	// #16
    93f0:	mov	x19, x2
    93f4:	mov	x20, x1
    93f8:	bl	5000 <_Znwm@plt>
    93fc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    9400:	add	x8, x8, #0x8b0
    9404:	stp	x8, x21, [x0]
    9408:	str	x0, [x21, #144]
    940c:	stp	x20, x19, [x21]
    9410:	ldp	x20, x19, [sp, #32]
    9414:	ldr	x21, [sp, #16]
    9418:	ldp	x29, x30, [sp], #48
    941c:	ret
    9420:	stp	x29, x30, [sp, #-48]!
    9424:	str	x21, [sp, #16]
    9428:	stp	x20, x19, [sp, #32]
    942c:	mov	x29, sp
    9430:	mov	x19, x0
    9434:	ldr	x0, [x0, #16]
    9438:	cbz	x0, 9448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f28>
    943c:	ldr	x8, [x0]
    9440:	ldr	x8, [x8, #8]
    9444:	blr	x8
    9448:	ldr	x0, [x19, #144]
    944c:	cbz	x0, 945c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f3c>
    9450:	ldr	x8, [x0]
    9454:	ldr	x8, [x8, #16]
    9458:	blr	x8
    945c:	ldr	x0, [x19, #104]
    9460:	add	x8, x19, #0x78
    9464:	cmp	x0, x8
    9468:	b.eq	9470 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f50>  // b.none
    946c:	bl	4ff0 <_ZdlPv@plt>
    9470:	ldp	x20, x21, [x19, #80]
    9474:	cmp	x20, x21
    9478:	b.ne	94a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f80>  // b.any
    947c:	cbz	x20, 94bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f9c>
    9480:	mov	x0, x20
    9484:	ldp	x20, x19, [sp, #32]
    9488:	ldr	x21, [sp, #16]
    948c:	ldp	x29, x30, [sp], #48
    9490:	b	4ff0 <_ZdlPv@plt>
    9494:	add	x20, x20, #0x10
    9498:	cmp	x20, x21
    949c:	b.eq	94b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f94>  // b.none
    94a0:	ldr	x0, [x20], #16
    94a4:	cmp	x0, x20
    94a8:	b.eq	9494 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f74>  // b.none
    94ac:	bl	4ff0 <_ZdlPv@plt>
    94b0:	b	9494 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f74>
    94b4:	ldr	x20, [x19, #80]
    94b8:	cbnz	x20, 9480 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f60>
    94bc:	ldp	x20, x19, [sp, #32]
    94c0:	ldr	x21, [sp, #16]
    94c4:	ldp	x29, x30, [sp], #48
    94c8:	ret
    94cc:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    94d0:	add	x0, x0, #0x621
    94d4:	b	4ed0 <xstrdup@plt>
    94d8:	stp	x29, x30, [sp, #-80]!
    94dc:	stp	x28, x25, [sp, #16]
    94e0:	stp	x24, x23, [sp, #32]
    94e4:	stp	x22, x21, [sp, #48]
    94e8:	stp	x20, x19, [sp, #64]
    94ec:	mov	x29, sp
    94f0:	sub	sp, sp, #0x1b0
    94f4:	mov	x19, sp
    94f8:	ldr	x23, [x0, #16]
    94fc:	mov	x21, x0
    9500:	add	x0, x19, #0x20
    9504:	mov	x20, x1
    9508:	add	x22, x19, #0x20
    950c:	bl	4f80 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    9510:	add	x22, x22, #0x10
    9514:	adrp	x1, 17000 <xexit@@Base+0xb84>
    9518:	add	x1, x1, #0x23b
    951c:	mov	w2, #0x1                   	// #1
    9520:	mov	x0, x22
    9524:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9528:	cbz	x23, 9548 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2028>
    952c:	mov	x0, x23
    9530:	bl	4e50 <strlen@plt>
    9534:	mov	x2, x0
    9538:	mov	x0, x22
    953c:	mov	x1, x23
    9540:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9544:	b	9560 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2040>
    9548:	ldr	x8, [x19, #48]
    954c:	ldur	x8, [x8, #-24]
    9550:	add	x0, x22, x8
    9554:	ldr	w8, [x0, #32]
    9558:	orr	w1, w8, #0x1
    955c:	bl	5200 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    9560:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    9564:	add	x1, x1, #0x6eb
    9568:	mov	w2, #0x1                   	// #1
    956c:	mov	x0, x22
    9570:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9574:	adrp	x23, 16000 <htab_collisions@@Base+0x8>
    9578:	adrp	x24, 16000 <htab_collisions@@Base+0x8>
    957c:	add	x23, x23, #0x87c
    9580:	add	x24, x24, #0x7a5
    9584:	mov	w25, #0x5c                  	// #92
    9588:	ldrb	w8, [x23]
    958c:	cmp	w8, #0x7c
    9590:	b.hi	95bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x209c>  // b.pmore
    9594:	adr	x9, 95a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2084>
    9598:	ldrb	w10, [x24, x8]
    959c:	add	x9, x9, x10, lsl #2
    95a0:	br	x9
    95a4:	sturb	w25, [x29, #-4]
    95a8:	sub	x1, x29, #0x4
    95ac:	mov	w2, #0x1                   	// #1
    95b0:	mov	x0, x22
    95b4:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95b8:	ldrb	w8, [x23]
    95bc:	sturb	w8, [x29, #-4]
    95c0:	sub	x1, x29, #0x4
    95c4:	mov	w2, #0x1                   	// #1
    95c8:	mov	x0, x22
    95cc:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95d0:	ldrb	w8, [x23, #1]!
    95d4:	cmp	w8, #0x7c
    95d8:	b.ls	9594 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2074>  // b.plast
    95dc:	b	95bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x209c>
    95e0:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    95e4:	add	x1, x1, #0x6ed
    95e8:	mov	w2, #0x1                   	// #1
    95ec:	mov	x0, x22
    95f0:	bl	5040 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95f4:	ldr	x8, [x19, #96]
    95f8:	add	x9, x19, #0x0
    95fc:	add	x23, x9, #0x10
    9600:	stp	x23, xzr, [x19]
    9604:	strb	wzr, [x19, #16]
    9608:	cbz	x8, 9630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2110>
    960c:	ldp	x9, x3, [x19, #80]
    9610:	cmp	x8, x9
    9614:	b.ls	9644 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2124>  // b.plast
    9618:	sub	x4, x8, x3
    961c:	add	x0, x19, #0x0
    9620:	mov	x1, xzr
    9624:	mov	x2, xzr
    9628:	bl	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    962c:	b	9658 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2138>
    9630:	add	x8, x19, #0x20
    9634:	add	x1, x8, #0x60
    9638:	add	x0, x19, #0x0
    963c:	bl	4ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    9640:	b	9658 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2138>
    9644:	sub	x4, x9, x3
    9648:	add	x0, x19, #0x0
    964c:	mov	x1, xzr
    9650:	mov	x2, xzr
    9654:	bl	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    9658:	adrp	x22, 2a000 <xexit@@Base+0x13b84>
    965c:	ldr	x22, [x22, #3304]
    9660:	add	x24, x19, #0x20
    9664:	ldr	x8, [x22]
    9668:	ldp	x9, x10, [x22, #64]
    966c:	str	x8, [x19, #32]
    9670:	ldur	x8, [x8, #-24]
    9674:	str	x9, [x24, x8]
    9678:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    967c:	ldr	x0, [x19, #128]
    9680:	ldr	x8, [x8, #4048]
    9684:	add	x9, x24, #0x70
    9688:	cmp	x0, x9
    968c:	add	x8, x8, #0x10
    9690:	stp	x10, x8, [x19, #48]
    9694:	b.eq	969c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x217c>  // b.none
    9698:	bl	4ff0 <_ZdlPv@plt>
    969c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    96a0:	ldr	x8, [x8, #3440]
    96a4:	add	x0, x24, #0x50
    96a8:	add	x8, x8, #0x10
    96ac:	str	x8, [x19, #56]
    96b0:	bl	50f0 <_ZNSt6localeD1Ev@plt>
    96b4:	ldp	x8, x9, [x22, #16]
    96b8:	add	x0, x24, #0x80
    96bc:	str	x8, [x19, #32]
    96c0:	ldur	x8, [x8, #-24]
    96c4:	str	x9, [x24, x8]
    96c8:	str	xzr, [x19, #40]
    96cc:	bl	4e90 <_ZNSt8ios_baseD2Ev@plt>
    96d0:	ldr	x8, [x21, #8]
    96d4:	ldrb	w8, [x8, #136]
    96d8:	cbnz	w8, 97fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22dc>
    96dc:	ldr	x1, [x19]
    96e0:	add	x0, x19, #0x20
    96e4:	mov	w2, #0x9                   	// #9
    96e8:	bl	4dd0 <xregcomp@plt>
    96ec:	mov	w22, w0
    96f0:	cbz	w0, 976c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x224c>
    96f4:	add	x1, x19, #0x20
    96f8:	mov	w0, w22
    96fc:	mov	x2, xzr
    9700:	mov	x3, xzr
    9704:	bl	5210 <xregerror@plt>
    9708:	add	x9, x0, #0xf
    970c:	mov	x8, sp
    9710:	and	x9, x9, #0xfffffffffffffff0
    9714:	mov	x21, sp
    9718:	sub	x20, x8, x9
    971c:	mov	x3, x0
    9720:	mov	sp, x20
    9724:	add	x1, x19, #0x20
    9728:	mov	w0, w22
    972c:	mov	x2, x20
    9730:	bl	5210 <xregerror@plt>
    9734:	ldr	x1, [x19]
    9738:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    973c:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    9740:	add	x0, x0, #0x66f
    9744:	add	x2, x2, #0x68a
    9748:	mov	x3, x20
    974c:	mov	x4, xzr
    9750:	bl	4fc0 <concat@plt>
    9754:	mov	x20, x0
    9758:	mov	sp, x21
    975c:	ldr	x0, [x19]
    9760:	cmp	x0, x23
    9764:	b.ne	97a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2280>  // b.any
    9768:	b	97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2284>
    976c:	add	x0, x19, #0x20
    9770:	mov	x1, x20
    9774:	bl	5374 <bcmp@plt+0xe4>
    9778:	tbz	w0, #0, 97c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22a4>
    977c:	add	x0, x19, #0x20
    9780:	bl	4e70 <xregfree@plt>
    9784:	ldr	x8, [x21, #8]
    9788:	ldrb	w8, [x8, #136]
    978c:	cbnz	w8, 981c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22fc>
    9790:	mov	x20, xzr
    9794:	ldr	x0, [x19]
    9798:	cmp	x0, x23
    979c:	b.eq	97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2284>  // b.none
    97a0:	bl	4ff0 <_ZdlPv@plt>
    97a4:	mov	x0, x20
    97a8:	mov	sp, x29
    97ac:	ldp	x20, x19, [sp, #64]
    97b0:	ldp	x22, x21, [sp, #48]
    97b4:	ldp	x24, x23, [sp, #32]
    97b8:	ldp	x28, x25, [sp, #16]
    97bc:	ldp	x29, x30, [sp], #80
    97c0:	ret
    97c4:	add	x0, x19, #0x20
    97c8:	bl	4e70 <xregfree@plt>
    97cc:	ldr	x1, [x19]
    97d0:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    97d4:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    97d8:	add	x0, x0, #0x68e
    97dc:	add	x2, x2, #0x6b1
    97e0:	mov	x3, xzr
    97e4:	bl	4fc0 <concat@plt>
    97e8:	mov	x20, x0
    97ec:	ldr	x0, [x19]
    97f0:	cmp	x0, x23
    97f4:	b.ne	97a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2280>  // b.any
    97f8:	b	97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2284>
    97fc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    9800:	ldr	x8, [x8, #3968]
    9804:	ldr	x2, [x19]
    9808:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    980c:	add	x1, x1, #0x645
    9810:	ldr	x0, [x8]
    9814:	bl	4e60 <fprintf@plt>
    9818:	b	96dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21bc>
    981c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    9820:	ldr	x8, [x8, #3968]
    9824:	ldr	x2, [x20]
    9828:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    982c:	add	x1, x1, #0x6b3
    9830:	ldr	x0, [x8]
    9834:	bl	4e60 <fprintf@plt>
    9838:	mov	x20, xzr
    983c:	ldr	x0, [x19]
    9840:	cmp	x0, x23
    9844:	b.ne	97a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2280>  // b.any
    9848:	b	97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2284>
    984c:	ldr	x8, [x19]
    9850:	mov	x20, x0
    9854:	cmp	x8, x23
    9858:	b.eq	9890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2370>  // b.none
    985c:	mov	x0, x8
    9860:	bl	4ff0 <_ZdlPv@plt>
    9864:	b	9890 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2370>
    9868:	b	986c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x234c>
    986c:	mov	x20, x0
    9870:	ldr	x0, [x19]
    9874:	cmp	x0, x23
    9878:	b.eq	9880 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2360>  // b.none
    987c:	bl	4ff0 <_ZdlPv@plt>
    9880:	mov	x0, x20
    9884:	bl	5240 <_Unwind_Resume@plt>
    9888:	b	988c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x236c>
    988c:	mov	x20, x0
    9890:	adrp	x21, 2a000 <xexit@@Base+0x13b84>
    9894:	ldr	x21, [x21, #3304]
    9898:	add	x22, x19, #0x20
    989c:	ldr	x8, [x21]
    98a0:	ldp	x9, x10, [x21, #64]
    98a4:	str	x8, [x19, #32]
    98a8:	ldur	x8, [x8, #-24]
    98ac:	str	x9, [x22, x8]
    98b0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    98b4:	ldr	x0, [x19, #128]
    98b8:	ldr	x8, [x8, #4048]
    98bc:	add	x9, x22, #0x70
    98c0:	cmp	x0, x9
    98c4:	add	x8, x8, #0x10
    98c8:	stp	x10, x8, [x19, #48]
    98cc:	b.eq	98d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x23b4>  // b.none
    98d0:	bl	4ff0 <_ZdlPv@plt>
    98d4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    98d8:	ldr	x8, [x8, #3440]
    98dc:	add	x0, x22, #0x50
    98e0:	add	x8, x8, #0x10
    98e4:	str	x8, [x19, #56]
    98e8:	bl	50f0 <_ZNSt6localeD1Ev@plt>
    98ec:	ldp	x8, x9, [x21, #16]
    98f0:	add	x0, x22, #0x80
    98f4:	str	x8, [x19, #32]
    98f8:	ldur	x8, [x8, #-24]
    98fc:	str	x9, [x22, x8]
    9900:	str	xzr, [x19, #40]
    9904:	bl	4e90 <_ZNSt8ios_baseD2Ev@plt>
    9908:	mov	x0, x20
    990c:	bl	5240 <_Unwind_Resume@plt>
    9910:	stp	x29, x30, [sp, #-32]!
    9914:	stp	x20, x19, [sp, #16]
    9918:	mov	x29, sp
    991c:	ldr	x8, [x0, #8]
    9920:	mov	x19, x0
    9924:	mov	x20, x1
    9928:	ldrb	w8, [x8, #136]
    992c:	cbnz	w8, 994c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x242c>
    9930:	add	x1, x19, #0x10
    9934:	mov	x0, x20
    9938:	bl	4ef0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    993c:	ldp	x20, x19, [sp, #16]
    9940:	mov	x0, xzr
    9944:	ldp	x29, x30, [sp], #32
    9948:	ret
    994c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    9950:	ldr	x8, [x8, #3968]
    9954:	ldr	x2, [x19, #16]
    9958:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    995c:	add	x1, x1, #0x6c6
    9960:	ldr	x0, [x8]
    9964:	bl	4e60 <fprintf@plt>
    9968:	b	9930 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2410>

000000000000996c <gcc_cp_fe_context@@Base>:
    996c:	stp	x29, x30, [sp, #-32]!
    9970:	stp	x20, x19, [sp, #16]
    9974:	mov	x29, sp
    9978:	cmp	w0, #0x1
    997c:	mov	x19, xzr
    9980:	b.hi	99e8 <gcc_cp_fe_context@@Base+0x7c>  // b.pmore
    9984:	cbnz	w1, 99e8 <gcc_cp_fe_context@@Base+0x7c>
    9988:	mov	w0, #0x98                  	// #152
    998c:	bl	5000 <_Znwm@plt>
    9990:	movi	v0.2d, #0x0
    9994:	mov	x8, x0
    9998:	mov	x19, x0
    999c:	stp	xzr, xzr, [x0, #24]
    99a0:	str	xzr, [x0, #16]
    99a4:	stur	q0, [x0, #56]
    99a8:	stur	q0, [x0, #72]
    99ac:	stur	q0, [x0, #88]
    99b0:	strb	wzr, [x8, #120]!
    99b4:	stp	x8, xzr, [x0, #104]
    99b8:	strb	wzr, [x0, #136]
    99bc:	mov	w0, #0x10                  	// #16
    99c0:	bl	5000 <_Znwm@plt>
    99c4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    99c8:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    99cc:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    99d0:	add	x8, x8, #0x8b0
    99d4:	add	x9, x9, #0x620
    99d8:	add	x10, x10, #0x678
    99dc:	str	x0, [x19, #144]
    99e0:	stp	x8, x19, [x0]
    99e4:	stp	x9, x10, [x19]
    99e8:	mov	x0, x19
    99ec:	ldp	x20, x19, [sp, #16]
    99f0:	ldp	x29, x30, [sp], #32
    99f4:	ret
    99f8:	mov	x20, x0
    99fc:	mov	x0, x19
    9a00:	bl	4ff0 <_ZdlPv@plt>
    9a04:	mov	x0, x20
    9a08:	bl	5240 <_Unwind_Resume@plt>
    9a0c:	stp	x29, x30, [sp, #-48]!
    9a10:	str	x21, [sp, #16]
    9a14:	stp	x20, x19, [sp, #32]
    9a18:	mov	x29, sp
    9a1c:	mov	x19, x3
    9a20:	mov	w20, w2
    9a24:	mov	x21, x0
    9a28:	bl	a670 <gcc_cp_fe_context@@Base+0xd04>
    9a2c:	mov	x0, x21
    9a30:	mov	w1, w20
    9a34:	mov	x2, x19
    9a38:	ldp	x20, x19, [sp, #32]
    9a3c:	ldr	x21, [sp, #16]
    9a40:	ldp	x29, x30, [sp], #48
    9a44:	b	a3b8 <gcc_cp_fe_context@@Base+0xa4c>
    9a48:	stp	x29, x30, [sp, #-48]!
    9a4c:	str	x21, [sp, #16]
    9a50:	stp	x20, x19, [sp, #32]
    9a54:	mov	x29, sp
    9a58:	ldr	x20, [x0, #112]
    9a5c:	add	x21, x0, #0x68
    9a60:	mov	x0, x1
    9a64:	mov	x19, x1
    9a68:	bl	4e50 <strlen@plt>
    9a6c:	mov	x4, x0
    9a70:	mov	x0, x21
    9a74:	mov	x2, x20
    9a78:	mov	x3, x19
    9a7c:	ldp	x20, x19, [sp, #32]
    9a80:	ldr	x21, [sp, #16]
    9a84:	mov	x1, xzr
    9a88:	ldp	x29, x30, [sp], #48
    9a8c:	b	5150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    9a90:	stp	x1, x2, [x0, #64]
    9a94:	ret
    9a98:	cmp	w2, #0x0
    9a9c:	cset	w8, ne  // ne = any
    9aa0:	strb	w8, [x0, #136]
    9aa4:	b	9b64 <gcc_cp_fe_context@@Base+0x1f8>
    9aa8:	cbz	x0, 9b2c <gcc_cp_fe_context@@Base+0x1c0>
    9aac:	stp	x29, x30, [sp, #-48]!
    9ab0:	str	x21, [sp, #16]
    9ab4:	stp	x20, x19, [sp, #32]
    9ab8:	mov	x29, sp
    9abc:	mov	x19, x0
    9ac0:	ldr	x0, [x0, #16]
    9ac4:	cbz	x0, 9ad4 <gcc_cp_fe_context@@Base+0x168>
    9ac8:	ldr	x8, [x0]
    9acc:	ldr	x8, [x8, #8]
    9ad0:	blr	x8
    9ad4:	ldr	x0, [x19, #144]
    9ad8:	cbz	x0, 9ae8 <gcc_cp_fe_context@@Base+0x17c>
    9adc:	ldr	x8, [x0]
    9ae0:	ldr	x8, [x8, #16]
    9ae4:	blr	x8
    9ae8:	ldr	x0, [x19, #104]
    9aec:	add	x8, x19, #0x78
    9af0:	cmp	x0, x8
    9af4:	b.eq	9afc <gcc_cp_fe_context@@Base+0x190>  // b.none
    9af8:	bl	4ff0 <_ZdlPv@plt>
    9afc:	ldp	x20, x21, [x19, #80]
    9b00:	cmp	x20, x21
    9b04:	b.ne	9b18 <gcc_cp_fe_context@@Base+0x1ac>  // b.any
    9b08:	b	9b34 <gcc_cp_fe_context@@Base+0x1c8>
    9b0c:	add	x20, x20, #0x10
    9b10:	cmp	x20, x21
    9b14:	b.eq	9b30 <gcc_cp_fe_context@@Base+0x1c4>  // b.none
    9b18:	ldr	x0, [x20], #16
    9b1c:	cmp	x0, x20
    9b20:	b.eq	9b0c <gcc_cp_fe_context@@Base+0x1a0>  // b.none
    9b24:	bl	4ff0 <_ZdlPv@plt>
    9b28:	b	9b0c <gcc_cp_fe_context@@Base+0x1a0>
    9b2c:	ret
    9b30:	ldr	x20, [x19, #80]
    9b34:	cbz	x20, 9b40 <gcc_cp_fe_context@@Base+0x1d4>
    9b38:	mov	x0, x20
    9b3c:	bl	4ff0 <_ZdlPv@plt>
    9b40:	mov	x0, x19
    9b44:	ldp	x20, x19, [sp, #32]
    9b48:	ldr	x21, [sp, #16]
    9b4c:	ldp	x29, x30, [sp], #48
    9b50:	b	4ff0 <_ZdlPv@plt>
    9b54:	cmp	w1, #0x0
    9b58:	cset	w8, ne  // ne = any
    9b5c:	strb	w8, [x0, #136]
    9b60:	ret
    9b64:	sub	sp, sp, #0xe0
    9b68:	stp	x29, x30, [sp, #160]
    9b6c:	stp	x24, x23, [sp, #176]
    9b70:	stp	x22, x21, [sp, #192]
    9b74:	stp	x20, x19, [sp, #208]
    9b78:	add	x29, sp, #0xa0
    9b7c:	mov	x21, x1
    9b80:	mov	x19, x0
    9b84:	sub	x3, x29, #0x10
    9b88:	mov	w0, #0x1                   	// #1
    9b8c:	mov	w1, #0x1                   	// #1
    9b90:	mov	w2, wzr
    9b94:	bl	4df0 <socketpair@plt>
    9b98:	cbz	w0, 9bb0 <gcc_cp_fe_context@@Base+0x244>
    9b9c:	ldp	x8, x0, [x19, #64]
    9ba0:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    9ba4:	add	x1, x1, #0x6ef
    9ba8:	blr	x8
    9bac:	b	9bdc <gcc_cp_fe_context@@Base+0x270>
    9bb0:	sub	x0, x29, #0x18
    9bb4:	bl	4e10 <pipe@plt>
    9bb8:	cbz	w0, 9bf8 <gcc_cp_fe_context@@Base+0x28c>
    9bbc:	ldp	x8, x0, [x19, #64]
    9bc0:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    9bc4:	add	x1, x1, #0x70c
    9bc8:	blr	x8
    9bcc:	ldur	w0, [x29, #-16]
    9bd0:	bl	5100 <close@plt>
    9bd4:	ldur	w0, [x29, #-12]
    9bd8:	bl	5100 <close@plt>
    9bdc:	mov	w0, wzr
    9be0:	ldp	x20, x19, [sp, #208]
    9be4:	ldp	x22, x21, [sp, #192]
    9be8:	ldp	x24, x23, [sp, #176]
    9bec:	ldp	x29, x30, [sp, #160]
    9bf0:	add	sp, sp, #0xe0
    9bf4:	ret
    9bf8:	add	x8, sp, #0x20
    9bfc:	mov	w9, #0x15                  	// #21
    9c00:	add	x22, x8, #0x10
    9c04:	str	x22, [sp, #32]
    9c08:	str	x9, [sp]
    9c0c:	add	x0, sp, #0x20
    9c10:	mov	x1, sp
    9c14:	mov	x2, xzr
    9c18:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9c1c:	adrp	x9, 16000 <htab_collisions@@Base+0x8>
    9c20:	add	x9, x9, #0x880
    9c24:	ldr	x8, [sp]
    9c28:	ldur	x10, [x9, #13]
    9c2c:	ldr	q0, [x9]
    9c30:	str	x0, [sp, #32]
    9c34:	str	x8, [sp, #48]
    9c38:	stur	x10, [x0, #13]
    9c3c:	str	q0, [x0]
    9c40:	ldr	x9, [sp, #32]
    9c44:	str	x8, [sp, #40]
    9c48:	add	x20, x19, #0x50
    9c4c:	strb	wzr, [x9, x8]
    9c50:	ldp	x1, x8, [x19, #88]
    9c54:	cmp	x1, x8
    9c58:	b.eq	9c80 <gcc_cp_fe_context@@Base+0x314>  // b.none
    9c5c:	add	x8, x1, #0x10
    9c60:	str	x8, [x1]
    9c64:	ldr	x9, [sp, #32]
    9c68:	cmp	x9, x22
    9c6c:	b.eq	9ca0 <gcc_cp_fe_context@@Base+0x334>  // b.none
    9c70:	str	x9, [x1]
    9c74:	ldr	x8, [sp, #48]
    9c78:	str	x8, [x1, #16]
    9c7c:	b	9ca8 <gcc_cp_fe_context@@Base+0x33c>
    9c80:	add	x2, sp, #0x20
    9c84:	mov	x0, x20
    9c88:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9c8c:	ldr	x0, [sp, #32]
    9c90:	cmp	x0, x22
    9c94:	b.eq	9cc4 <gcc_cp_fe_context@@Base+0x358>  // b.none
    9c98:	bl	4ff0 <_ZdlPv@plt>
    9c9c:	b	9cc4 <gcc_cp_fe_context@@Base+0x358>
    9ca0:	ldr	q0, [x22]
    9ca4:	str	q0, [x8]
    9ca8:	ldr	x8, [sp, #40]
    9cac:	str	x8, [x1, #8]
    9cb0:	stp	x22, xzr, [sp, #32]
    9cb4:	strb	wzr, [sp, #48]
    9cb8:	ldr	x8, [x19, #88]
    9cbc:	add	x8, x8, #0x20
    9cc0:	str	x8, [x19, #88]
    9cc4:	ldur	w3, [x29, #-12]
    9cc8:	adrp	x2, 16000 <htab_collisions@@Base+0x8>
    9ccc:	add	x2, x2, #0x896
    9cd0:	add	x0, sp, #0x20
    9cd4:	mov	w1, #0x64                  	// #100
    9cd8:	bl	5050 <snprintf@plt>
    9cdc:	cmp	w0, #0x64
    9ce0:	b.ge	a2f4 <gcc_cp_fe_context@@Base+0x988>  // b.tcont
    9ce4:	mov	x8, sp
    9ce8:	add	x23, x8, #0x10
    9cec:	add	x0, sp, #0x20
    9cf0:	str	x23, [sp]
    9cf4:	bl	4e50 <strlen@plt>
    9cf8:	mov	x22, x0
    9cfc:	cmp	x0, #0x10
    9d00:	stur	x0, [x29, #-8]
    9d04:	mov	x0, x23
    9d08:	b.cc	9d28 <gcc_cp_fe_context@@Base+0x3bc>  // b.lo, b.ul, b.last
    9d0c:	mov	x0, sp
    9d10:	sub	x1, x29, #0x8
    9d14:	mov	x2, xzr
    9d18:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9d1c:	ldur	x8, [x29, #-8]
    9d20:	str	x0, [sp]
    9d24:	str	x8, [sp, #16]
    9d28:	cbz	x22, 9d4c <gcc_cp_fe_context@@Base+0x3e0>
    9d2c:	cmp	x22, #0x1
    9d30:	b.ne	9d40 <gcc_cp_fe_context@@Base+0x3d4>  // b.any
    9d34:	ldrb	w8, [sp, #32]
    9d38:	strb	w8, [x0]
    9d3c:	b	9d4c <gcc_cp_fe_context@@Base+0x3e0>
    9d40:	add	x1, sp, #0x20
    9d44:	mov	x2, x22
    9d48:	bl	4db0 <memcpy@plt>
    9d4c:	ldur	x8, [x29, #-8]
    9d50:	ldr	x9, [sp]
    9d54:	str	x8, [sp, #8]
    9d58:	strb	wzr, [x9, x8]
    9d5c:	ldp	x1, x8, [x19, #88]
    9d60:	cmp	x1, x8
    9d64:	b.eq	9d8c <gcc_cp_fe_context@@Base+0x420>  // b.none
    9d68:	add	x8, x1, #0x10
    9d6c:	str	x8, [x1]
    9d70:	ldr	x9, [sp]
    9d74:	cmp	x9, x23
    9d78:	b.eq	9dac <gcc_cp_fe_context@@Base+0x440>  // b.none
    9d7c:	str	x9, [x1]
    9d80:	ldr	x8, [sp, #16]
    9d84:	str	x8, [x1, #16]
    9d88:	b	9db4 <gcc_cp_fe_context@@Base+0x448>
    9d8c:	mov	x2, sp
    9d90:	mov	x0, x20
    9d94:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9d98:	ldr	x0, [sp]
    9d9c:	cmp	x0, x23
    9da0:	b.eq	9dd0 <gcc_cp_fe_context@@Base+0x464>  // b.none
    9da4:	bl	4ff0 <_ZdlPv@plt>
    9da8:	b	9dd0 <gcc_cp_fe_context@@Base+0x464>
    9dac:	ldr	q0, [x23]
    9db0:	str	q0, [x8]
    9db4:	ldr	x8, [sp, #8]
    9db8:	str	x8, [x1, #8]
    9dbc:	stp	x23, xzr, [sp]
    9dc0:	strb	wzr, [sp, #16]
    9dc4:	ldr	x8, [x19, #88]
    9dc8:	add	x8, x8, #0x20
    9dcc:	str	x8, [x19, #88]
    9dd0:	ldp	x22, x8, [x19, #88]
    9dd4:	cmp	x22, x8
    9dd8:	b.eq	9e30 <gcc_cp_fe_context@@Base+0x4c4>  // b.none
    9ddc:	add	x0, x22, #0x10
    9de0:	str	x0, [x22]
    9de4:	ldp	x23, x24, [x19, #104]
    9de8:	cbnz	x23, 9df0 <gcc_cp_fe_context@@Base+0x484>
    9dec:	cbnz	x24, a304 <gcc_cp_fe_context@@Base+0x998>
    9df0:	cmp	x24, #0x10
    9df4:	str	x24, [sp]
    9df8:	b.cc	9e18 <gcc_cp_fe_context@@Base+0x4ac>  // b.lo, b.ul, b.last
    9dfc:	mov	x1, sp
    9e00:	mov	x0, x22
    9e04:	mov	x2, xzr
    9e08:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9e0c:	str	x0, [x22]
    9e10:	ldr	x8, [sp]
    9e14:	str	x8, [x22, #16]
    9e18:	cbz	x24, 9e54 <gcc_cp_fe_context@@Base+0x4e8>
    9e1c:	cmp	x24, #0x1
    9e20:	b.ne	9e48 <gcc_cp_fe_context@@Base+0x4dc>  // b.any
    9e24:	ldrb	w8, [x23]
    9e28:	strb	w8, [x0]
    9e2c:	b	9e54 <gcc_cp_fe_context@@Base+0x4e8>
    9e30:	add	x2, x19, #0x68
    9e34:	mov	x0, x20
    9e38:	mov	x1, x22
    9e3c:	bl	5060 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9e40:	ldr	x1, [x19, #88]
    9e44:	b	9e70 <gcc_cp_fe_context@@Base+0x504>
    9e48:	mov	x1, x23
    9e4c:	mov	x2, x24
    9e50:	bl	4db0 <memcpy@plt>
    9e54:	ldr	x8, [sp]
    9e58:	ldr	x9, [x22]
    9e5c:	str	x8, [x22, #8]
    9e60:	strb	wzr, [x9, x8]
    9e64:	ldr	x8, [x19, #88]
    9e68:	add	x1, x8, #0x20
    9e6c:	str	x1, [x19, #88]
    9e70:	mov	x8, sp
    9e74:	mov	w9, #0x632d                	// #25389
    9e78:	mov	w10, #0x2                   	// #2
    9e7c:	add	x22, x8, #0x10
    9e80:	strh	w9, [sp, #16]
    9e84:	stp	x22, x10, [sp]
    9e88:	strb	wzr, [sp, #18]
    9e8c:	ldr	x8, [x19, #96]
    9e90:	cmp	x1, x8
    9e94:	b.eq	9ebc <gcc_cp_fe_context@@Base+0x550>  // b.none
    9e98:	add	x8, x1, #0x10
    9e9c:	str	x8, [x1]
    9ea0:	ldr	x9, [sp]
    9ea4:	cmp	x9, x22
    9ea8:	b.eq	9edc <gcc_cp_fe_context@@Base+0x570>  // b.none
    9eac:	str	x9, [x1]
    9eb0:	ldr	x8, [sp, #16]
    9eb4:	str	x8, [x1, #16]
    9eb8:	b	9ee4 <gcc_cp_fe_context@@Base+0x578>
    9ebc:	mov	x2, sp
    9ec0:	mov	x0, x20
    9ec4:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9ec8:	ldr	x0, [sp]
    9ecc:	cmp	x0, x22
    9ed0:	b.eq	9f00 <gcc_cp_fe_context@@Base+0x594>  // b.none
    9ed4:	bl	4ff0 <_ZdlPv@plt>
    9ed8:	b	9f00 <gcc_cp_fe_context@@Base+0x594>
    9edc:	ldr	q0, [x22]
    9ee0:	str	q0, [x8]
    9ee4:	mov	w8, #0x2                   	// #2
    9ee8:	str	x8, [x1, #8]
    9eec:	stp	x22, xzr, [sp]
    9ef0:	strb	wzr, [sp, #16]
    9ef4:	ldr	x8, [x19, #88]
    9ef8:	add	x8, x8, #0x20
    9efc:	str	x8, [x19, #88]
    9f00:	mov	x8, sp
    9f04:	mov	w9, #0x6f2d                	// #28461
    9f08:	mov	w10, #0x2                   	// #2
    9f0c:	add	x22, x8, #0x10
    9f10:	strb	wzr, [sp, #18]
    9f14:	strh	w9, [sp, #16]
    9f18:	stp	x22, x10, [sp]
    9f1c:	ldp	x1, x8, [x19, #88]
    9f20:	cmp	x1, x8
    9f24:	b.eq	9f4c <gcc_cp_fe_context@@Base+0x5e0>  // b.none
    9f28:	add	x8, x1, #0x10
    9f2c:	str	x8, [x1]
    9f30:	ldr	x9, [sp]
    9f34:	cmp	x9, x22
    9f38:	b.eq	9f6c <gcc_cp_fe_context@@Base+0x600>  // b.none
    9f3c:	str	x9, [x1]
    9f40:	ldr	x8, [sp, #16]
    9f44:	str	x8, [x1, #16]
    9f48:	b	9f74 <gcc_cp_fe_context@@Base+0x608>
    9f4c:	mov	x2, sp
    9f50:	mov	x0, x20
    9f54:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9f58:	ldr	x0, [sp]
    9f5c:	cmp	x0, x22
    9f60:	b.eq	9f90 <gcc_cp_fe_context@@Base+0x624>  // b.none
    9f64:	bl	4ff0 <_ZdlPv@plt>
    9f68:	b	9f90 <gcc_cp_fe_context@@Base+0x624>
    9f6c:	ldr	q0, [x22]
    9f70:	str	q0, [x8]
    9f74:	mov	w8, #0x2                   	// #2
    9f78:	str	x8, [x1, #8]
    9f7c:	stp	x22, xzr, [sp]
    9f80:	strb	wzr, [sp, #16]
    9f84:	ldr	x8, [x19, #88]
    9f88:	add	x8, x8, #0x20
    9f8c:	str	x8, [x19, #88]
    9f90:	mov	x8, sp
    9f94:	add	x23, x8, #0x10
    9f98:	str	x23, [sp]
    9f9c:	cbz	x21, a2f8 <gcc_cp_fe_context@@Base+0x98c>
    9fa0:	mov	x0, x21
    9fa4:	bl	4e50 <strlen@plt>
    9fa8:	mov	x22, x0
    9fac:	cmp	x0, #0xf
    9fb0:	stur	x0, [x29, #-8]
    9fb4:	mov	x0, x23
    9fb8:	b.ls	9fd8 <gcc_cp_fe_context@@Base+0x66c>  // b.plast
    9fbc:	mov	x0, sp
    9fc0:	sub	x1, x29, #0x8
    9fc4:	mov	x2, xzr
    9fc8:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9fcc:	ldur	x8, [x29, #-8]
    9fd0:	str	x0, [sp]
    9fd4:	str	x8, [sp, #16]
    9fd8:	cbz	x22, 9ffc <gcc_cp_fe_context@@Base+0x690>
    9fdc:	cmp	x22, #0x1
    9fe0:	b.ne	9ff0 <gcc_cp_fe_context@@Base+0x684>  // b.any
    9fe4:	ldrb	w8, [x21]
    9fe8:	strb	w8, [x0]
    9fec:	b	9ffc <gcc_cp_fe_context@@Base+0x690>
    9ff0:	mov	x1, x21
    9ff4:	mov	x2, x22
    9ff8:	bl	4db0 <memcpy@plt>
    9ffc:	ldur	x8, [x29, #-8]
    a000:	ldr	x9, [sp]
    a004:	str	x8, [sp, #8]
    a008:	strb	wzr, [x9, x8]
    a00c:	ldp	x1, x8, [x19, #88]
    a010:	cmp	x1, x8
    a014:	b.eq	a03c <gcc_cp_fe_context@@Base+0x6d0>  // b.none
    a018:	add	x8, x1, #0x10
    a01c:	str	x8, [x1]
    a020:	ldr	x9, [sp]
    a024:	cmp	x9, x23
    a028:	b.eq	a05c <gcc_cp_fe_context@@Base+0x6f0>  // b.none
    a02c:	str	x9, [x1]
    a030:	ldr	x8, [sp, #16]
    a034:	str	x8, [x1, #16]
    a038:	b	a064 <gcc_cp_fe_context@@Base+0x6f8>
    a03c:	mov	x2, sp
    a040:	mov	x0, x20
    a044:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a048:	ldr	x0, [sp]
    a04c:	cmp	x0, x23
    a050:	b.eq	a080 <gcc_cp_fe_context@@Base+0x714>  // b.none
    a054:	bl	4ff0 <_ZdlPv@plt>
    a058:	b	a080 <gcc_cp_fe_context@@Base+0x714>
    a05c:	ldr	q0, [x23]
    a060:	str	q0, [x8]
    a064:	ldr	x8, [sp, #8]
    a068:	str	x8, [x1, #8]
    a06c:	stp	x23, xzr, [sp]
    a070:	strb	wzr, [sp, #16]
    a074:	ldr	x8, [x19, #88]
    a078:	add	x8, x8, #0x20
    a07c:	str	x8, [x19, #88]
    a080:	ldrb	w8, [x19, #136]
    a084:	cbz	w8, a118 <gcc_cp_fe_context@@Base+0x7ac>
    a088:	mov	x8, sp
    a08c:	mov	w9, #0x762d                	// #30253
    a090:	mov	w10, #0x2                   	// #2
    a094:	add	x21, x8, #0x10
    a098:	strb	wzr, [sp, #18]
    a09c:	strh	w9, [sp, #16]
    a0a0:	stp	x21, x10, [sp]
    a0a4:	ldp	x1, x8, [x19, #88]
    a0a8:	cmp	x1, x8
    a0ac:	b.eq	a0d4 <gcc_cp_fe_context@@Base+0x768>  // b.none
    a0b0:	add	x8, x1, #0x10
    a0b4:	str	x8, [x1]
    a0b8:	ldr	x9, [sp]
    a0bc:	cmp	x9, x21
    a0c0:	b.eq	a0f4 <gcc_cp_fe_context@@Base+0x788>  // b.none
    a0c4:	str	x9, [x1]
    a0c8:	ldr	x8, [sp, #16]
    a0cc:	str	x8, [x1, #16]
    a0d0:	b	a0fc <gcc_cp_fe_context@@Base+0x790>
    a0d4:	mov	x2, sp
    a0d8:	mov	x0, x20
    a0dc:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a0e0:	ldr	x0, [sp]
    a0e4:	cmp	x0, x21
    a0e8:	b.eq	a118 <gcc_cp_fe_context@@Base+0x7ac>  // b.none
    a0ec:	bl	4ff0 <_ZdlPv@plt>
    a0f0:	b	a118 <gcc_cp_fe_context@@Base+0x7ac>
    a0f4:	ldr	q0, [x21]
    a0f8:	str	q0, [x8]
    a0fc:	mov	w8, #0x2                   	// #2
    a100:	str	x8, [x1, #8]
    a104:	stp	x21, xzr, [sp]
    a108:	strb	wzr, [sp, #16]
    a10c:	ldr	x8, [x19, #88]
    a110:	add	x8, x8, #0x20
    a114:	str	x8, [x19, #88]
    a118:	mov	w0, #0x20                  	// #32
    a11c:	bl	5000 <_Znwm@plt>
    a120:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    a124:	ldur	w8, [x29, #-16]
    a128:	ldur	w9, [x29, #-24]
    a12c:	ldr	x10, [x10, #3352]
    a130:	mov	x20, x0
    a134:	add	x21, x0, #0x10
    a138:	stp	w8, w9, [x0, #8]
    a13c:	add	x10, x10, #0x10
    a140:	str	x10, [x0]
    a144:	mov	x0, x21
    a148:	bl	dff0 <gcc_cp_fe_context@@Base+0x4684>
    a14c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    a150:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    a154:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x694>
    a158:	add	x8, x8, #0x968
    a15c:	add	x1, x1, #0x759
    a160:	add	x2, x2, #0xa08
    a164:	mov	x0, x21
    a168:	str	x19, [x20, #24]
    a16c:	str	x8, [x20]
    a170:	str	x20, [x19, #16]
    a174:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    a178:	ldr	x8, [x19, #16]
    a17c:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    a180:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x694>
    a184:	add	x1, x1, #0x768
    a188:	add	x0, x8, #0x10
    a18c:	add	x2, x2, #0xad4
    a190:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    a194:	ldr	x8, [x19, #16]
    a198:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    a19c:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x694>
    a1a0:	add	x1, x1, #0x8b6
    a1a4:	add	x0, x8, #0x10
    a1a8:	add	x2, x2, #0xb8c
    a1ac:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    a1b0:	ldr	x8, [x19, #16]
    a1b4:	adrp	x1, 16000 <htab_collisions@@Base+0x8>
    a1b8:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x694>
    a1bc:	add	x1, x1, #0x8c2
    a1c0:	add	x0, x8, #0x10
    a1c4:	add	x2, x2, #0xbec
    a1c8:	bl	e084 <gcc_cp_fe_context@@Base+0x4718>
    a1cc:	ldp	x22, x8, [x19, #80]
    a1d0:	adrp	x1, 2a000 <xexit@@Base+0x13b84>
    a1d4:	ldr	x1, [x1, #3264]
    a1d8:	sub	x23, x8, x22
    a1dc:	asr	x21, x23, #5
    a1e0:	add	x8, x21, #0x1
    a1e4:	lsl	x9, x8, #3
    a1e8:	cmp	xzr, x8, lsr #61
    a1ec:	csinv	x0, x9, xzr, eq  // eq = none
    a1f0:	bl	51c0 <_ZnamRKSt9nothrow_t@plt>
    a1f4:	cbz	x0, 9be0 <gcc_cp_fe_context@@Base+0x274>
    a1f8:	mov	x20, x0
    a1fc:	cbz	x23, a224 <gcc_cp_fe_context@@Base+0x8b8>
    a200:	mov	x8, xzr
    a204:	mov	w9, #0x1                   	// #1
    a208:	lsl	x10, x8, #5
    a20c:	ldr	x10, [x22, x10]
    a210:	str	x10, [x20, x8, lsl #3]
    a214:	mov	w8, w9
    a218:	cmp	x21, x8
    a21c:	add	w9, w9, #0x1
    a220:	b.hi	a208 <gcc_cp_fe_context@@Base+0x89c>  // b.pmore
    a224:	str	xzr, [x20, x21, lsl #3]
    a228:	bl	50e0 <fork@plt>
    a22c:	cmn	w0, #0x1
    a230:	b.eq	a280 <gcc_cp_fe_context@@Base+0x914>  // b.none
    a234:	mov	w21, w0
    a238:	cbz	w0, a310 <gcc_cp_fe_context@@Base+0x9a4>
    a23c:	ldur	w0, [x29, #-12]
    a240:	bl	5100 <close@plt>
    a244:	ldur	w0, [x29, #-20]
    a248:	bl	5100 <close@plt>
    a24c:	ldr	x0, [x19, #16]
    a250:	mov	w1, #0x48                  	// #72
    a254:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    a258:	cbz	w0, a2a0 <gcc_cp_fe_context@@Base+0x934>
    a25c:	ldr	x0, [x19, #16]
    a260:	mov	x1, xzr
    a264:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    a268:	cbz	w0, a2a0 <gcc_cp_fe_context@@Base+0x934>
    a26c:	ldr	x0, [x19, #16]
    a270:	mov	w1, wzr
    a274:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    a278:	mov	w19, w0
    a27c:	b	a2a4 <gcc_cp_fe_context@@Base+0x938>
    a280:	ldur	w0, [x29, #-16]
    a284:	bl	5100 <close@plt>
    a288:	ldur	w0, [x29, #-12]
    a28c:	bl	5100 <close@plt>
    a290:	ldur	w0, [x29, #-24]
    a294:	bl	5100 <close@plt>
    a298:	ldur	w0, [x29, #-20]
    a29c:	b	9bd8 <gcc_cp_fe_context@@Base+0x26c>
    a2a0:	mov	w19, wzr
    a2a4:	ldur	w0, [x29, #-16]
    a2a8:	bl	5100 <close@plt>
    a2ac:	ldur	w0, [x29, #-24]
    a2b0:	bl	5100 <close@plt>
    a2b4:	mov	x1, sp
    a2b8:	mov	w0, w21
    a2bc:	mov	w2, wzr
    a2c0:	bl	4ea0 <waitpid@plt>
    a2c4:	cmn	w0, #0x1
    a2c8:	b.ne	a2dc <gcc_cp_fe_context@@Base+0x970>  // b.any
    a2cc:	bl	50a0 <__errno_location@plt>
    a2d0:	ldr	w8, [x0]
    a2d4:	cmp	w8, #0x4
    a2d8:	b.ne	9bdc <gcc_cp_fe_context@@Base+0x270>  // b.any
    a2dc:	ldrh	w8, [sp]
    a2e0:	tst	w8, #0xffffff7f
    a2e4:	b.ne	9bdc <gcc_cp_fe_context@@Base+0x270>  // b.any
    a2e8:	cmp	w19, #0x0
    a2ec:	cset	w0, ne  // ne = any
    a2f0:	b	9be0 <gcc_cp_fe_context@@Base+0x274>
    a2f4:	bl	5190 <abort@plt>
    a2f8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a2fc:	add	x0, x0, #0x4bd
    a300:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a304:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a308:	add	x0, x0, #0x4bd
    a30c:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a310:	ldur	w0, [x29, #-20]
    a314:	mov	w1, #0x1                   	// #1
    a318:	bl	4e20 <dup2@plt>
    a31c:	ldur	w0, [x29, #-20]
    a320:	mov	w1, #0x2                   	// #2
    a324:	bl	4e20 <dup2@plt>
    a328:	ldur	w0, [x29, #-24]
    a32c:	bl	5100 <close@plt>
    a330:	ldur	w0, [x29, #-20]
    a334:	bl	5100 <close@plt>
    a338:	ldur	w0, [x29, #-16]
    a33c:	bl	5100 <close@plt>
    a340:	ldr	x0, [x20]
    a344:	mov	x1, x20
    a348:	bl	4de0 <execvp@plt>
    a34c:	mov	w0, #0x7f                  	// #127
    a350:	bl	4f50 <_exit@plt>
    a354:	ldr	x8, [sp]
    a358:	cmp	x8, x21
    a35c:	b	a388 <gcc_cp_fe_context@@Base+0xa1c>
    a360:	b	a374 <gcc_cp_fe_context@@Base+0xa08>
    a364:	ldr	x8, [sp]
    a368:	b	a384 <gcc_cp_fe_context@@Base+0xa18>
    a36c:	ldr	x8, [sp]
    a370:	b	a384 <gcc_cp_fe_context@@Base+0xa18>
    a374:	ldr	x8, [sp]
    a378:	cmp	x8, x23
    a37c:	b	a388 <gcc_cp_fe_context@@Base+0xa1c>
    a380:	ldr	x8, [sp, #32]
    a384:	cmp	x8, x22
    a388:	mov	x19, x0
    a38c:	b.eq	a3ac <gcc_cp_fe_context@@Base+0xa40>  // b.none
    a390:	mov	x0, x8
    a394:	b	a3a8 <gcc_cp_fe_context@@Base+0xa3c>
    a398:	bl	5240 <_Unwind_Resume@plt>
    a39c:	bl	5240 <_Unwind_Resume@plt>
    a3a0:	mov	x19, x0
    a3a4:	mov	x0, x20
    a3a8:	bl	4ff0 <_ZdlPv@plt>
    a3ac:	mov	x0, x19
    a3b0:	bl	5240 <_Unwind_Resume@plt>
    a3b4:	bl	5240 <_Unwind_Resume@plt>
    a3b8:	sub	sp, sp, #0xa0
    a3bc:	stp	x29, x30, [sp, #80]
    a3c0:	stp	x26, x25, [sp, #96]
    a3c4:	stp	x24, x23, [sp, #112]
    a3c8:	stp	x22, x21, [sp, #128]
    a3cc:	stp	x20, x19, [sp, #144]
    a3d0:	add	x29, sp, #0x50
    a3d4:	add	x8, sp, #0x28
    a3d8:	add	x26, x8, #0x10
    a3dc:	stp	x26, xzr, [sp, #40]
    a3e0:	strb	wzr, [sp, #56]
    a3e4:	mov	x20, x0
    a3e8:	ldr	x0, [x0, #144]
    a3ec:	mov	x19, x2
    a3f0:	mov	w22, w1
    a3f4:	ldr	x8, [x0]
    a3f8:	ldr	x8, [x8]
    a3fc:	add	x1, sp, #0x28
    a400:	blr	x8
    a404:	mov	x21, x0
    a408:	cbnz	x0, a5c8 <gcc_cp_fe_context@@Base+0xc5c>
    a40c:	ldp	x23, x8, [x20, #88]
    a410:	add	x21, x20, #0x50
    a414:	cmp	x23, x8
    a418:	b.eq	a470 <gcc_cp_fe_context@@Base+0xb04>  // b.none
    a41c:	add	x0, x23, #0x10
    a420:	str	x0, [x23]
    a424:	ldp	x24, x25, [sp, #40]
    a428:	cbnz	x24, a430 <gcc_cp_fe_context@@Base+0xac4>
    a42c:	cbnz	x25, a604 <gcc_cp_fe_context@@Base+0xc98>
    a430:	cmp	x25, #0x10
    a434:	str	x25, [sp, #8]
    a438:	b.cc	a458 <gcc_cp_fe_context@@Base+0xaec>  // b.lo, b.ul, b.last
    a43c:	add	x1, sp, #0x8
    a440:	mov	x0, x23
    a444:	mov	x2, xzr
    a448:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a44c:	str	x0, [x23]
    a450:	ldr	x8, [sp, #8]
    a454:	str	x8, [x23, #16]
    a458:	cbz	x25, a498 <gcc_cp_fe_context@@Base+0xb2c>
    a45c:	cmp	x25, #0x1
    a460:	b.ne	a48c <gcc_cp_fe_context@@Base+0xb20>  // b.any
    a464:	ldrb	w8, [x24]
    a468:	strb	w8, [x0]
    a46c:	b	a498 <gcc_cp_fe_context@@Base+0xb2c>
    a470:	add	x2, sp, #0x28
    a474:	mov	x0, x21
    a478:	mov	x1, x23
    a47c:	bl	5060 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a480:	cmp	w22, #0x1
    a484:	b.ge	a4bc <gcc_cp_fe_context@@Base+0xb50>  // b.tcont
    a488:	b	a5c4 <gcc_cp_fe_context@@Base+0xc58>
    a48c:	mov	x1, x24
    a490:	mov	x2, x25
    a494:	bl	4db0 <memcpy@plt>
    a498:	ldr	x8, [sp, #8]
    a49c:	ldr	x9, [x23]
    a4a0:	str	x8, [x23, #8]
    a4a4:	strb	wzr, [x9, x8]
    a4a8:	ldr	x8, [x20, #88]
    a4ac:	add	x8, x8, #0x20
    a4b0:	str	x8, [x20, #88]
    a4b4:	cmp	w22, #0x1
    a4b8:	b.lt	a5c4 <gcc_cp_fe_context@@Base+0xc58>  // b.tstop
    a4bc:	add	x8, sp, #0x8
    a4c0:	add	x24, x8, #0x10
    a4c4:	mov	w25, w22
    a4c8:	b	a500 <gcc_cp_fe_context@@Base+0xb94>
    a4cc:	str	x9, [x1]
    a4d0:	ldr	x8, [sp, #24]
    a4d4:	str	x8, [x1, #16]
    a4d8:	ldr	x8, [sp, #16]
    a4dc:	str	x8, [x1, #8]
    a4e0:	stp	x24, xzr, [sp, #8]
    a4e4:	strb	wzr, [sp, #24]
    a4e8:	ldr	x8, [x20, #88]
    a4ec:	add	x8, x8, #0x20
    a4f0:	str	x8, [x20, #88]
    a4f4:	subs	x25, x25, #0x1
    a4f8:	add	x19, x19, #0x8
    a4fc:	b.eq	a5c4 <gcc_cp_fe_context@@Base+0xc58>  // b.none
    a500:	ldr	x22, [x19]
    a504:	str	x24, [sp, #8]
    a508:	cbz	x22, a5f8 <gcc_cp_fe_context@@Base+0xc8c>
    a50c:	mov	x0, x22
    a510:	bl	4e50 <strlen@plt>
    a514:	mov	x23, x0
    a518:	cmp	x0, #0xf
    a51c:	stur	x0, [x29, #-8]
    a520:	mov	x0, x24
    a524:	b.ls	a544 <gcc_cp_fe_context@@Base+0xbd8>  // b.plast
    a528:	add	x0, sp, #0x8
    a52c:	sub	x1, x29, #0x8
    a530:	mov	x2, xzr
    a534:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a538:	ldur	x8, [x29, #-8]
    a53c:	str	x0, [sp, #8]
    a540:	str	x8, [sp, #24]
    a544:	cbz	x23, a568 <gcc_cp_fe_context@@Base+0xbfc>
    a548:	cmp	x23, #0x1
    a54c:	b.ne	a55c <gcc_cp_fe_context@@Base+0xbf0>  // b.any
    a550:	ldrb	w8, [x22]
    a554:	strb	w8, [x0]
    a558:	b	a568 <gcc_cp_fe_context@@Base+0xbfc>
    a55c:	mov	x1, x22
    a560:	mov	x2, x23
    a564:	bl	4db0 <memcpy@plt>
    a568:	ldur	x8, [x29, #-8]
    a56c:	ldr	x9, [sp, #8]
    a570:	str	x8, [sp, #16]
    a574:	strb	wzr, [x9, x8]
    a578:	ldp	x1, x8, [x20, #88]
    a57c:	cmp	x1, x8
    a580:	b.eq	a5a4 <gcc_cp_fe_context@@Base+0xc38>  // b.none
    a584:	add	x8, x1, #0x10
    a588:	str	x8, [x1]
    a58c:	ldr	x9, [sp, #8]
    a590:	cmp	x9, x24
    a594:	b.ne	a4cc <gcc_cp_fe_context@@Base+0xb60>  // b.any
    a598:	ldr	q0, [x24]
    a59c:	str	q0, [x8]
    a5a0:	b	a4d8 <gcc_cp_fe_context@@Base+0xb6c>
    a5a4:	add	x2, sp, #0x8
    a5a8:	mov	x0, x21
    a5ac:	bl	5170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a5b0:	ldr	x0, [sp, #8]
    a5b4:	cmp	x0, x24
    a5b8:	b.eq	a4f4 <gcc_cp_fe_context@@Base+0xb88>  // b.none
    a5bc:	bl	4ff0 <_ZdlPv@plt>
    a5c0:	b	a4f4 <gcc_cp_fe_context@@Base+0xb88>
    a5c4:	mov	x21, xzr
    a5c8:	ldr	x0, [sp, #40]
    a5cc:	cmp	x0, x26
    a5d0:	b.eq	a5d8 <gcc_cp_fe_context@@Base+0xc6c>  // b.none
    a5d4:	bl	4ff0 <_ZdlPv@plt>
    a5d8:	mov	x0, x21
    a5dc:	ldp	x20, x19, [sp, #144]
    a5e0:	ldp	x22, x21, [sp, #128]
    a5e4:	ldp	x24, x23, [sp, #112]
    a5e8:	ldp	x26, x25, [sp, #96]
    a5ec:	ldp	x29, x30, [sp, #80]
    a5f0:	add	sp, sp, #0xa0
    a5f4:	ret
    a5f8:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a5fc:	add	x0, x0, #0x4bd
    a600:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a604:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a608:	add	x0, x0, #0x4bd
    a60c:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a610:	b	a654 <gcc_cp_fe_context@@Base+0xce8>
    a614:	b	a654 <gcc_cp_fe_context@@Base+0xce8>
    a618:	ldr	x8, [sp, #8]
    a61c:	mov	x19, x0
    a620:	cmp	x8, x24
    a624:	b.ne	a63c <gcc_cp_fe_context@@Base+0xcd0>  // b.any
    a628:	ldr	x0, [sp, #40]
    a62c:	cmp	x0, x26
    a630:	b.ne	a664 <gcc_cp_fe_context@@Base+0xcf8>  // b.any
    a634:	mov	x0, x19
    a638:	bl	5240 <_Unwind_Resume@plt>
    a63c:	mov	x0, x8
    a640:	bl	4ff0 <_ZdlPv@plt>
    a644:	ldr	x0, [sp, #40]
    a648:	cmp	x0, x26
    a64c:	b.eq	a634 <gcc_cp_fe_context@@Base+0xcc8>  // b.none
    a650:	b	a664 <gcc_cp_fe_context@@Base+0xcf8>
    a654:	mov	x19, x0
    a658:	ldr	x0, [sp, #40]
    a65c:	cmp	x0, x26
    a660:	b.eq	a634 <gcc_cp_fe_context@@Base+0xcc8>  // b.none
    a664:	bl	4ff0 <_ZdlPv@plt>
    a668:	mov	x0, x19
    a66c:	bl	5240 <_Unwind_Resume@plt>
    a670:	sub	sp, sp, #0x70
    a674:	stp	x29, x30, [sp, #32]
    a678:	str	x25, [sp, #48]
    a67c:	stp	x24, x23, [sp, #64]
    a680:	stp	x22, x21, [sp, #80]
    a684:	stp	x20, x19, [sp, #96]
    a688:	add	x29, sp, #0x20
    a68c:	mov	x20, x0
    a690:	ldr	x0, [x0, #144]
    a694:	mov	x21, x1
    a698:	cbz	x0, a6a8 <gcc_cp_fe_context@@Base+0xd3c>
    a69c:	ldr	x8, [x0]
    a6a0:	ldr	x8, [x8, #16]
    a6a4:	blr	x8
    a6a8:	mov	w0, #0x30                  	// #48
    a6ac:	bl	5000 <_Znwm@plt>
    a6b0:	mov	x8, sp
    a6b4:	mov	x19, x0
    a6b8:	add	x25, x8, #0x10
    a6bc:	str	x25, [sp]
    a6c0:	cbz	x21, a7f4 <gcc_cp_fe_context@@Base+0xe88>
    a6c4:	mov	x0, x21
    a6c8:	bl	4e50 <strlen@plt>
    a6cc:	mov	x22, x0
    a6d0:	cmp	x0, #0xf
    a6d4:	str	x0, [x29, #24]
    a6d8:	b.ls	a700 <gcc_cp_fe_context@@Base+0xd94>  // b.plast
    a6dc:	mov	x0, sp
    a6e0:	add	x1, x29, #0x18
    a6e4:	mov	x2, xzr
    a6e8:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a6ec:	ldr	x8, [x29, #24]
    a6f0:	str	x0, [sp]
    a6f4:	str	x8, [sp, #16]
    a6f8:	cbnz	x22, a708 <gcc_cp_fe_context@@Base+0xd9c>
    a6fc:	b	a728 <gcc_cp_fe_context@@Base+0xdbc>
    a700:	mov	x0, x25
    a704:	cbz	x22, a728 <gcc_cp_fe_context@@Base+0xdbc>
    a708:	cmp	x22, #0x1
    a70c:	b.ne	a71c <gcc_cp_fe_context@@Base+0xdb0>  // b.any
    a710:	ldrb	w8, [x21]
    a714:	strb	w8, [x0]
    a718:	b	a728 <gcc_cp_fe_context@@Base+0xdbc>
    a71c:	mov	x1, x21
    a720:	mov	x2, x22
    a724:	bl	4db0 <memcpy@plt>
    a728:	ldr	x8, [x29, #24]
    a72c:	ldr	x9, [sp]
    a730:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    a734:	add	x10, x10, #0x8e8
    a738:	str	x8, [sp, #8]
    a73c:	strb	wzr, [x9, x8]
    a740:	ldp	x21, x22, [sp]
    a744:	add	x23, x19, #0x20
    a748:	mov	x24, x19
    a74c:	stp	x10, x20, [x19]
    a750:	str	x23, [x24, #16]!
    a754:	cbnz	x21, a75c <gcc_cp_fe_context@@Base+0xdf0>
    a758:	cbnz	x22, a800 <gcc_cp_fe_context@@Base+0xe94>
    a75c:	cmp	x22, #0x10
    a760:	str	x22, [x29, #24]
    a764:	b.cc	a788 <gcc_cp_fe_context@@Base+0xe1c>  // b.lo, b.ul, b.last
    a768:	add	x1, x29, #0x18
    a76c:	mov	x0, x24
    a770:	mov	x2, xzr
    a774:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a778:	ldr	x8, [x29, #24]
    a77c:	str	x0, [x24]
    a780:	str	x8, [x23]
    a784:	mov	x23, x0
    a788:	cbz	x22, a7b0 <gcc_cp_fe_context@@Base+0xe44>
    a78c:	cmp	x22, #0x1
    a790:	b.ne	a7a0 <gcc_cp_fe_context@@Base+0xe34>  // b.any
    a794:	ldrb	w8, [x21]
    a798:	strb	w8, [x23]
    a79c:	b	a7b0 <gcc_cp_fe_context@@Base+0xe44>
    a7a0:	mov	x0, x23
    a7a4:	mov	x1, x21
    a7a8:	mov	x2, x22
    a7ac:	bl	4db0 <memcpy@plt>
    a7b0:	ldr	x8, [x29, #24]
    a7b4:	ldr	x9, [x19, #16]
    a7b8:	str	x8, [x19, #24]
    a7bc:	strb	wzr, [x9, x8]
    a7c0:	str	x19, [x20, #144]
    a7c4:	ldr	x0, [sp]
    a7c8:	cmp	x0, x25
    a7cc:	b.eq	a7d4 <gcc_cp_fe_context@@Base+0xe68>  // b.none
    a7d0:	bl	4ff0 <_ZdlPv@plt>
    a7d4:	ldp	x20, x19, [sp, #96]
    a7d8:	ldp	x22, x21, [sp, #80]
    a7dc:	ldp	x24, x23, [sp, #64]
    a7e0:	ldr	x25, [sp, #48]
    a7e4:	ldp	x29, x30, [sp, #32]
    a7e8:	mov	x0, xzr
    a7ec:	add	sp, sp, #0x70
    a7f0:	ret
    a7f4:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a7f8:	add	x0, x0, #0x4bd
    a7fc:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a800:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a804:	add	x0, x0, #0x4bd
    a808:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a80c:	ldr	x8, [sp]
    a810:	mov	x20, x0
    a814:	cmp	x8, x25
    a818:	b.eq	a82c <gcc_cp_fe_context@@Base+0xec0>  // b.none
    a81c:	mov	x0, x8
    a820:	bl	4ff0 <_ZdlPv@plt>
    a824:	b	a82c <gcc_cp_fe_context@@Base+0xec0>
    a828:	mov	x20, x0
    a82c:	mov	x0, x19
    a830:	bl	4ff0 <_ZdlPv@plt>
    a834:	mov	x0, x20
    a838:	bl	5240 <_Unwind_Resume@plt>
    a83c:	sub	sp, sp, #0x70
    a840:	stp	x29, x30, [sp, #32]
    a844:	str	x25, [sp, #48]
    a848:	stp	x24, x23, [sp, #64]
    a84c:	stp	x22, x21, [sp, #80]
    a850:	stp	x20, x19, [sp, #96]
    a854:	add	x29, sp, #0x20
    a858:	mov	x20, x0
    a85c:	ldr	x0, [x0, #144]
    a860:	mov	x21, x1
    a864:	cbz	x0, a874 <gcc_cp_fe_context@@Base+0xf08>
    a868:	ldr	x8, [x0]
    a86c:	ldr	x8, [x8, #16]
    a870:	blr	x8
    a874:	mov	w0, #0x30                  	// #48
    a878:	bl	5000 <_Znwm@plt>
    a87c:	mov	x8, sp
    a880:	mov	x19, x0
    a884:	add	x25, x8, #0x10
    a888:	str	x25, [sp]
    a88c:	cbz	x21, a9c0 <gcc_cp_fe_context@@Base+0x1054>
    a890:	mov	x0, x21
    a894:	bl	4e50 <strlen@plt>
    a898:	mov	x22, x0
    a89c:	cmp	x0, #0xf
    a8a0:	str	x0, [x29, #24]
    a8a4:	b.ls	a8cc <gcc_cp_fe_context@@Base+0xf60>  // b.plast
    a8a8:	mov	x0, sp
    a8ac:	add	x1, x29, #0x18
    a8b0:	mov	x2, xzr
    a8b4:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a8b8:	ldr	x8, [x29, #24]
    a8bc:	str	x0, [sp]
    a8c0:	str	x8, [sp, #16]
    a8c4:	cbnz	x22, a8d4 <gcc_cp_fe_context@@Base+0xf68>
    a8c8:	b	a8f4 <gcc_cp_fe_context@@Base+0xf88>
    a8cc:	mov	x0, x25
    a8d0:	cbz	x22, a8f4 <gcc_cp_fe_context@@Base+0xf88>
    a8d4:	cmp	x22, #0x1
    a8d8:	b.ne	a8e8 <gcc_cp_fe_context@@Base+0xf7c>  // b.any
    a8dc:	ldrb	w8, [x21]
    a8e0:	strb	w8, [x0]
    a8e4:	b	a8f4 <gcc_cp_fe_context@@Base+0xf88>
    a8e8:	mov	x1, x21
    a8ec:	mov	x2, x22
    a8f0:	bl	4db0 <memcpy@plt>
    a8f4:	ldr	x8, [x29, #24]
    a8f8:	ldr	x9, [sp]
    a8fc:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    a900:	add	x10, x10, #0x928
    a904:	str	x8, [sp, #8]
    a908:	strb	wzr, [x9, x8]
    a90c:	ldp	x21, x22, [sp]
    a910:	add	x23, x19, #0x20
    a914:	mov	x24, x19
    a918:	stp	x10, x20, [x19]
    a91c:	str	x23, [x24, #16]!
    a920:	cbnz	x21, a928 <gcc_cp_fe_context@@Base+0xfbc>
    a924:	cbnz	x22, a9cc <gcc_cp_fe_context@@Base+0x1060>
    a928:	cmp	x22, #0x10
    a92c:	str	x22, [x29, #24]
    a930:	b.cc	a954 <gcc_cp_fe_context@@Base+0xfe8>  // b.lo, b.ul, b.last
    a934:	add	x1, x29, #0x18
    a938:	mov	x0, x24
    a93c:	mov	x2, xzr
    a940:	bl	5250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a944:	ldr	x8, [x29, #24]
    a948:	str	x0, [x24]
    a94c:	str	x8, [x23]
    a950:	mov	x23, x0
    a954:	cbz	x22, a97c <gcc_cp_fe_context@@Base+0x1010>
    a958:	cmp	x22, #0x1
    a95c:	b.ne	a96c <gcc_cp_fe_context@@Base+0x1000>  // b.any
    a960:	ldrb	w8, [x21]
    a964:	strb	w8, [x23]
    a968:	b	a97c <gcc_cp_fe_context@@Base+0x1010>
    a96c:	mov	x0, x23
    a970:	mov	x1, x21
    a974:	mov	x2, x22
    a978:	bl	4db0 <memcpy@plt>
    a97c:	ldr	x8, [x29, #24]
    a980:	ldr	x9, [x19, #16]
    a984:	str	x8, [x19, #24]
    a988:	strb	wzr, [x9, x8]
    a98c:	str	x19, [x20, #144]
    a990:	ldr	x0, [sp]
    a994:	cmp	x0, x25
    a998:	b.eq	a9a0 <gcc_cp_fe_context@@Base+0x1034>  // b.none
    a99c:	bl	4ff0 <_ZdlPv@plt>
    a9a0:	ldp	x20, x19, [sp, #96]
    a9a4:	ldp	x22, x21, [sp, #80]
    a9a8:	ldp	x24, x23, [sp, #64]
    a9ac:	ldr	x25, [sp, #48]
    a9b0:	ldp	x29, x30, [sp, #32]
    a9b4:	mov	x0, xzr
    a9b8:	add	sp, sp, #0x70
    a9bc:	ret
    a9c0:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a9c4:	add	x0, x0, #0x4bd
    a9c8:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a9cc:	adrp	x0, 16000 <htab_collisions@@Base+0x8>
    a9d0:	add	x0, x0, #0x4bd
    a9d4:	bl	4f90 <_ZSt19__throw_logic_errorPKc@plt>
    a9d8:	ldr	x8, [sp]
    a9dc:	mov	x20, x0
    a9e0:	cmp	x8, x25
    a9e4:	b.eq	a9f8 <gcc_cp_fe_context@@Base+0x108c>  // b.none
    a9e8:	mov	x0, x8
    a9ec:	bl	4ff0 <_ZdlPv@plt>
    a9f0:	b	a9f8 <gcc_cp_fe_context@@Base+0x108c>
    a9f4:	mov	x20, x0
    a9f8:	mov	x0, x19
    a9fc:	bl	4ff0 <_ZdlPv@plt>
    aa00:	mov	x0, x20
    aa04:	bl	5240 <_Unwind_Resume@plt>
    aa08:	sub	sp, sp, #0x30
    aa0c:	stp	x29, x30, [sp, #16]
    aa10:	stp	x20, x19, [sp, #32]
    aa14:	add	x29, sp, #0x10
    aa18:	mov	x19, x0
    aa1c:	str	xzr, [sp]
    aa20:	mov	w1, #0x2                   	// #2
    aa24:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    aa28:	cbz	w0, aa94 <gcc_cp_fe_context@@Base+0x1128>
    aa2c:	add	x1, sp, #0x8
    aa30:	mov	x0, x19
    aa34:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    aa38:	cbz	w0, aa94 <gcc_cp_fe_context@@Base+0x1128>
    aa3c:	ldr	w20, [sp, #8]
    aa40:	mov	x1, sp
    aa44:	mov	x0, x19
    aa48:	bl	e580 <gcc_cp_fe_context@@Base+0x4c14>
    aa4c:	cbz	w0, aa94 <gcc_cp_fe_context@@Base+0x1128>
    aa50:	ldr	x1, [x19, #24]
    aa54:	ldr	x3, [sp]
    aa58:	ldr	x0, [x1, #56]
    aa5c:	ldr	x8, [x1, #24]
    aa60:	mov	w2, w20
    aa64:	blr	x8
    aa68:	mov	w1, #0x52                  	// #82
    aa6c:	mov	x0, x19
    aa70:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    aa74:	cbz	w0, aa94 <gcc_cp_fe_context@@Base+0x1128>
    aa78:	mov	w1, #0x1                   	// #1
    aa7c:	mov	x0, x19
    aa80:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    aa84:	mov	w19, w0
    aa88:	ldr	x0, [sp]
    aa8c:	cbnz	x0, aaa0 <gcc_cp_fe_context@@Base+0x1134>
    aa90:	b	aaa4 <gcc_cp_fe_context@@Base+0x1138>
    aa94:	mov	w19, wzr
    aa98:	ldr	x0, [sp]
    aa9c:	cbz	x0, aaa4 <gcc_cp_fe_context@@Base+0x1138>
    aaa0:	bl	5090 <_ZdaPv@plt>
    aaa4:	mov	w0, w19
    aaa8:	ldp	x20, x19, [sp, #32]
    aaac:	ldp	x29, x30, [sp, #16]
    aab0:	add	sp, sp, #0x30
    aab4:	ret
    aab8:	ldr	x8, [sp]
    aabc:	mov	x19, x0
    aac0:	cbz	x8, aacc <gcc_cp_fe_context@@Base+0x1160>
    aac4:	mov	x0, x8
    aac8:	bl	5090 <_ZdaPv@plt>
    aacc:	mov	x0, x19
    aad0:	bl	5240 <_Unwind_Resume@plt>
    aad4:	sub	sp, sp, #0x30
    aad8:	stp	x29, x30, [sp, #16]
    aadc:	stp	x20, x19, [sp, #32]
    aae0:	add	x29, sp, #0x10
    aae4:	mov	x19, x0
    aae8:	str	xzr, [sp, #8]
    aaec:	mov	w1, #0x1                   	// #1
    aaf0:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    aaf4:	cbz	w0, ab4c <gcc_cp_fe_context@@Base+0x11e0>
    aaf8:	add	x1, sp, #0x8
    aafc:	mov	x0, x19
    ab00:	bl	e580 <gcc_cp_fe_context@@Base+0x4c14>
    ab04:	cbz	w0, ab4c <gcc_cp_fe_context@@Base+0x11e0>
    ab08:	ldr	x1, [x19, #24]
    ab0c:	ldr	x2, [sp, #8]
    ab10:	ldr	x0, [x1, #56]
    ab14:	ldr	x8, [x1, #32]
    ab18:	blr	x8
    ab1c:	mov	x20, x0
    ab20:	mov	w1, #0x52                  	// #82
    ab24:	mov	x0, x19
    ab28:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    ab2c:	cbz	w0, ab4c <gcc_cp_fe_context@@Base+0x11e0>
    ab30:	mov	x0, x19
    ab34:	mov	x1, x20
    ab38:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ab3c:	mov	w19, w0
    ab40:	ldr	x0, [sp, #8]
    ab44:	cbnz	x0, ab58 <gcc_cp_fe_context@@Base+0x11ec>
    ab48:	b	ab5c <gcc_cp_fe_context@@Base+0x11f0>
    ab4c:	mov	w19, wzr
    ab50:	ldr	x0, [sp, #8]
    ab54:	cbz	x0, ab5c <gcc_cp_fe_context@@Base+0x11f0>
    ab58:	bl	5090 <_ZdaPv@plt>
    ab5c:	mov	w0, w19
    ab60:	ldp	x20, x19, [sp, #32]
    ab64:	ldp	x29, x30, [sp, #16]
    ab68:	add	sp, sp, #0x30
    ab6c:	ret
    ab70:	ldr	x8, [sp, #8]
    ab74:	mov	x19, x0
    ab78:	cbz	x8, ab84 <gcc_cp_fe_context@@Base+0x1218>
    ab7c:	mov	x0, x8
    ab80:	bl	5090 <_ZdaPv@plt>
    ab84:	mov	x0, x19
    ab88:	bl	5240 <_Unwind_Resume@plt>
    ab8c:	stp	x29, x30, [sp, #-32]!
    ab90:	str	x19, [sp, #16]
    ab94:	mov	x29, sp
    ab98:	mov	x1, xzr
    ab9c:	mov	x19, x0
    aba0:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    aba4:	cbz	w0, abdc <gcc_cp_fe_context@@Base+0x1270>
    aba8:	ldr	x1, [x19, #24]
    abac:	ldr	x8, [x1, #40]
    abb0:	ldr	x0, [x1, #56]
    abb4:	blr	x8
    abb8:	mov	w1, #0x52                  	// #82
    abbc:	mov	x0, x19
    abc0:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    abc4:	cbz	w0, abdc <gcc_cp_fe_context@@Base+0x1270>
    abc8:	mov	x0, x19
    abcc:	ldr	x19, [sp, #16]
    abd0:	mov	w1, #0x1                   	// #1
    abd4:	ldp	x29, x30, [sp], #32
    abd8:	b	e480 <gcc_cp_fe_context@@Base+0x4b14>
    abdc:	ldr	x19, [sp, #16]
    abe0:	mov	w0, wzr
    abe4:	ldp	x29, x30, [sp], #32
    abe8:	ret
    abec:	stp	x29, x30, [sp, #-32]!
    abf0:	str	x19, [sp, #16]
    abf4:	mov	x29, sp
    abf8:	mov	x1, xzr
    abfc:	mov	x19, x0
    ac00:	bl	e418 <gcc_cp_fe_context@@Base+0x4aac>
    ac04:	cbz	w0, ac38 <gcc_cp_fe_context@@Base+0x12cc>
    ac08:	ldr	x1, [x19, #24]
    ac0c:	ldp	x8, x0, [x1, #48]
    ac10:	blr	x8
    ac14:	mov	w1, #0x52                  	// #82
    ac18:	mov	x0, x19
    ac1c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    ac20:	cbz	w0, ac38 <gcc_cp_fe_context@@Base+0x12cc>
    ac24:	mov	x0, x19
    ac28:	ldr	x19, [sp, #16]
    ac2c:	mov	w1, #0x1                   	// #1
    ac30:	ldp	x29, x30, [sp], #32
    ac34:	b	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ac38:	ldr	x19, [sp, #16]
    ac3c:	mov	w0, wzr
    ac40:	ldp	x29, x30, [sp], #32
    ac44:	ret
    ac48:	stp	x1, x2, [x0, #24]
    ac4c:	stp	x3, x4, [x0, #40]
    ac50:	str	x5, [x0, #56]
    ac54:	ret
    ac58:	ret
    ac5c:	b	4ff0 <_ZdlPv@plt>
    ac60:	mov	x8, x0
    ac64:	ldr	x0, [x0, #16]
    ac68:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    ac6c:	add	x10, x8, #0x20
    ac70:	add	x9, x9, #0x8e8
    ac74:	cmp	x0, x10
    ac78:	str	x9, [x8]
    ac7c:	b.eq	ac84 <gcc_cp_fe_context@@Base+0x1318>  // b.none
    ac80:	b	4ff0 <_ZdlPv@plt>
    ac84:	ret
    ac88:	stp	x29, x30, [sp, #-32]!
    ac8c:	str	x19, [sp, #16]
    ac90:	mov	x29, sp
    ac94:	mov	x19, x0
    ac98:	ldr	x0, [x0, #16]
    ac9c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    aca0:	add	x9, x19, #0x20
    aca4:	add	x8, x8, #0x8e8
    aca8:	cmp	x0, x9
    acac:	str	x8, [x19]
    acb0:	b.eq	acb8 <gcc_cp_fe_context@@Base+0x134c>  // b.none
    acb4:	bl	4ff0 <_ZdlPv@plt>
    acb8:	mov	x0, x19
    acbc:	ldr	x19, [sp, #16]
    acc0:	ldp	x29, x30, [sp], #32
    acc4:	b	4ff0 <_ZdlPv@plt>
    acc8:	mov	x8, x0
    accc:	ldr	x0, [x0, #16]
    acd0:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    acd4:	add	x10, x8, #0x20
    acd8:	add	x9, x9, #0x928
    acdc:	cmp	x0, x10
    ace0:	str	x9, [x8]
    ace4:	b.eq	acec <gcc_cp_fe_context@@Base+0x1380>  // b.none
    ace8:	b	4ff0 <_ZdlPv@plt>
    acec:	ret
    acf0:	stp	x29, x30, [sp, #-32]!
    acf4:	str	x19, [sp, #16]
    acf8:	mov	x29, sp
    acfc:	mov	x19, x0
    ad00:	ldr	x0, [x0, #16]
    ad04:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ad08:	add	x9, x19, #0x20
    ad0c:	add	x8, x8, #0x928
    ad10:	cmp	x0, x9
    ad14:	str	x8, [x19]
    ad18:	b.eq	ad20 <gcc_cp_fe_context@@Base+0x13b4>  // b.none
    ad1c:	bl	4ff0 <_ZdlPv@plt>
    ad20:	mov	x0, x19
    ad24:	ldr	x19, [sp, #16]
    ad28:	ldp	x29, x30, [sp], #32
    ad2c:	b	4ff0 <_ZdlPv@plt>
    ad30:	stp	x29, x30, [sp, #-32]!
    ad34:	str	x19, [sp, #16]
    ad38:	mov	x29, sp
    ad3c:	mov	x19, x0
    ad40:	bl	e100 <gcc_cp_fe_context@@Base+0x4794>
    ad44:	mov	x0, x19
    ad48:	ldr	x19, [sp, #16]
    ad4c:	ldp	x29, x30, [sp], #32
    ad50:	b	4ff0 <_ZdlPv@plt>
    ad54:	ldr	x8, [x0, #24]
    ad58:	ldp	x2, x0, [x8, #64]
    ad5c:	br	x2
    ad60:	sub	sp, sp, #0x20
    ad64:	stp	x29, x30, [sp, #16]
    ad68:	add	x29, sp, #0x10
    ad6c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ad70:	ldr	x0, [x0, #16]
    ad74:	ldr	x8, [x8, #3456]
    ad78:	mov	x3, x1
    ad7c:	sub	x2, x29, #0x4
    ad80:	ldr	x8, [x8]
    ad84:	mov	x1, x8
    ad88:	bl	c374 <gcc_cp_fe_context@@Base+0x2a08>
    ad8c:	ldur	w8, [x29, #-4]
    ad90:	ldp	x29, x30, [sp, #16]
    ad94:	cmp	w0, #0x0
    ad98:	csel	w0, wzr, w8, eq  // eq = none
    ad9c:	add	sp, sp, #0x20
    ada0:	ret
    ada4:	sub	sp, sp, #0x20
    ada8:	stp	x29, x30, [sp, #16]
    adac:	add	x29, sp, #0x10
    adb0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    adb4:	ldr	x0, [x0, #16]
    adb8:	ldr	x8, [x8, #3584]
    adbc:	mov	x3, x1
    adc0:	sub	x2, x29, #0x4
    adc4:	ldr	x8, [x8]
    adc8:	mov	x1, x8
    adcc:	bl	86bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x119c>
    add0:	ldur	w8, [x29, #-4]
    add4:	ldp	x29, x30, [sp, #16]
    add8:	cmp	w0, #0x0
    addc:	csel	w0, wzr, w8, eq  // eq = none
    ade0:	add	sp, sp, #0x20
    ade4:	ret
    ade8:	sub	sp, sp, #0x20
    adec:	stp	x29, x30, [sp, #16]
    adf0:	add	x29, sp, #0x10
    adf4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    adf8:	ldr	x0, [x0, #16]
    adfc:	ldr	x8, [x8, #3496]
    ae00:	mov	x3, x1
    ae04:	sub	x2, x29, #0x4
    ae08:	ldr	x8, [x8]
    ae0c:	mov	x1, x8
    ae10:	bl	86bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x119c>
    ae14:	ldur	w8, [x29, #-4]
    ae18:	ldp	x29, x30, [sp, #16]
    ae1c:	cmp	w0, #0x0
    ae20:	csel	w0, wzr, w8, eq  // eq = none
    ae24:	add	sp, sp, #0x20
    ae28:	ret
    ae2c:	sub	sp, sp, #0x20
    ae30:	stp	x29, x30, [sp, #16]
    ae34:	add	x29, sp, #0x10
    ae38:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ae3c:	ldr	x0, [x0, #16]
    ae40:	ldr	x8, [x8, #3488]
    ae44:	mov	x4, x2
    ae48:	mov	x3, x1
    ae4c:	sub	x2, x29, #0x4
    ae50:	ldr	x8, [x8]
    ae54:	mov	x1, x8
    ae58:	bl	c414 <gcc_cp_fe_context@@Base+0x2aa8>
    ae5c:	ldur	w8, [x29, #-4]
    ae60:	ldp	x29, x30, [sp, #16]
    ae64:	cmp	w0, #0x0
    ae68:	csel	w0, wzr, w8, eq  // eq = none
    ae6c:	add	sp, sp, #0x20
    ae70:	ret
    ae74:	sub	sp, sp, #0x30
    ae78:	stp	x29, x30, [sp, #16]
    ae7c:	stp	x20, x19, [sp, #32]
    ae80:	add	x29, sp, #0x10
    ae84:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ae88:	ldr	x19, [x0, #16]
    ae8c:	ldr	x8, [x8, #3608]
    ae90:	mov	w1, #0x51                  	// #81
    ae94:	mov	x0, x19
    ae98:	ldr	x20, [x8]
    ae9c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    aea0:	cbz	w0, aee8 <gcc_cp_fe_context@@Base+0x157c>
    aea4:	mov	x0, x19
    aea8:	mov	x1, x20
    aeac:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    aeb0:	cbz	w0, aee8 <gcc_cp_fe_context@@Base+0x157c>
    aeb4:	mov	x0, x19
    aeb8:	mov	x1, xzr
    aebc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    aec0:	cbz	w0, aee8 <gcc_cp_fe_context@@Base+0x157c>
    aec4:	mov	w1, #0x1                   	// #1
    aec8:	mov	x0, x19
    aecc:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    aed0:	cbz	w0, aee8 <gcc_cp_fe_context@@Base+0x157c>
    aed4:	add	x1, sp, #0x8
    aed8:	mov	x0, x19
    aedc:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    aee0:	cbz	w0, aee8 <gcc_cp_fe_context@@Base+0x157c>
    aee4:	ldr	w0, [sp, #8]
    aee8:	ldp	x20, x19, [sp, #32]
    aeec:	ldp	x29, x30, [sp, #16]
    aef0:	add	sp, sp, #0x30
    aef4:	ret
    aef8:	sub	sp, sp, #0x30
    aefc:	stp	x29, x30, [sp, #16]
    af00:	stp	x20, x19, [sp, #32]
    af04:	add	x29, sp, #0x10
    af08:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    af0c:	ldr	x19, [x0, #16]
    af10:	ldr	x8, [x8, #4024]
    af14:	mov	w1, #0x51                  	// #81
    af18:	mov	x0, x19
    af1c:	ldr	x20, [x8]
    af20:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    af24:	cbz	w0, af7c <gcc_cp_fe_context@@Base+0x1610>
    af28:	mov	x0, x19
    af2c:	mov	x1, x20
    af30:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    af34:	cbz	w0, af7c <gcc_cp_fe_context@@Base+0x1610>
    af38:	mov	x0, x19
    af3c:	mov	x1, xzr
    af40:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    af44:	cbz	w0, af7c <gcc_cp_fe_context@@Base+0x1610>
    af48:	mov	w1, #0x1                   	// #1
    af4c:	mov	x0, x19
    af50:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    af54:	cbz	w0, af7c <gcc_cp_fe_context@@Base+0x1610>
    af58:	add	x1, sp, #0x8
    af5c:	mov	x0, x19
    af60:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    af64:	cbz	w0, af7c <gcc_cp_fe_context@@Base+0x1610>
    af68:	ldr	x0, [sp, #8]
    af6c:	ldp	x20, x19, [sp, #32]
    af70:	ldp	x29, x30, [sp, #16]
    af74:	add	sp, sp, #0x30
    af78:	ret
    af7c:	mov	x0, xzr
    af80:	ldp	x20, x19, [sp, #32]
    af84:	ldp	x29, x30, [sp, #16]
    af88:	add	sp, sp, #0x30
    af8c:	ret
    af90:	sub	sp, sp, #0x30
    af94:	stp	x29, x30, [sp, #16]
    af98:	stp	x20, x19, [sp, #32]
    af9c:	add	x29, sp, #0x10
    afa0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    afa4:	ldr	x19, [x0, #16]
    afa8:	ldr	x8, [x8, #3808]
    afac:	mov	w1, #0x51                  	// #81
    afb0:	mov	x0, x19
    afb4:	ldr	x20, [x8]
    afb8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    afbc:	cbz	w0, b004 <gcc_cp_fe_context@@Base+0x1698>
    afc0:	mov	x0, x19
    afc4:	mov	x1, x20
    afc8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    afcc:	cbz	w0, b004 <gcc_cp_fe_context@@Base+0x1698>
    afd0:	mov	x0, x19
    afd4:	mov	x1, xzr
    afd8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    afdc:	cbz	w0, b004 <gcc_cp_fe_context@@Base+0x1698>
    afe0:	mov	w1, #0x1                   	// #1
    afe4:	mov	x0, x19
    afe8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    afec:	cbz	w0, b004 <gcc_cp_fe_context@@Base+0x1698>
    aff0:	add	x1, sp, #0x8
    aff4:	mov	x0, x19
    aff8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    affc:	cbz	w0, b004 <gcc_cp_fe_context@@Base+0x1698>
    b000:	ldr	w0, [sp, #8]
    b004:	ldp	x20, x19, [sp, #32]
    b008:	ldp	x29, x30, [sp, #16]
    b00c:	add	sp, sp, #0x30
    b010:	ret
    b014:	sub	sp, sp, #0x20
    b018:	stp	x29, x30, [sp, #16]
    b01c:	add	x29, sp, #0x10
    b020:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b024:	ldr	x0, [x0, #16]
    b028:	ldr	x8, [x8, #3880]
    b02c:	mov	x3, x1
    b030:	sub	x2, x29, #0x4
    b034:	ldr	x8, [x8]
    b038:	mov	x1, x8
    b03c:	bl	86bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x119c>
    b040:	ldur	w8, [x29, #-4]
    b044:	ldp	x29, x30, [sp, #16]
    b048:	cmp	w0, #0x0
    b04c:	csel	w0, wzr, w8, eq  // eq = none
    b050:	add	sp, sp, #0x20
    b054:	ret
    b058:	sub	sp, sp, #0x20
    b05c:	stp	x29, x30, [sp, #16]
    b060:	add	x29, sp, #0x10
    b064:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b068:	ldr	x0, [x0, #16]
    b06c:	ldr	x8, [x8, #3728]
    b070:	mov	x4, x2
    b074:	mov	x3, x1
    b078:	sub	x2, x29, #0x4
    b07c:	ldr	x8, [x8]
    b080:	mov	x1, x8
    b084:	bl	c4c8 <gcc_cp_fe_context@@Base+0x2b5c>
    b088:	ldur	w8, [x29, #-4]
    b08c:	ldp	x29, x30, [sp, #16]
    b090:	cmp	w0, #0x0
    b094:	csel	w0, wzr, w8, eq  // eq = none
    b098:	add	sp, sp, #0x20
    b09c:	ret
    b0a0:	sub	sp, sp, #0x20
    b0a4:	stp	x29, x30, [sp, #16]
    b0a8:	add	x29, sp, #0x10
    b0ac:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b0b0:	ldr	x0, [x0, #16]
    b0b4:	ldr	x8, [x8, #3344]
    b0b8:	mov	x4, x2
    b0bc:	mov	w3, w1
    b0c0:	sub	x2, x29, #0x4
    b0c4:	ldr	x8, [x8]
    b0c8:	mov	x1, x8
    b0cc:	bl	c57c <gcc_cp_fe_context@@Base+0x2c10>
    b0d0:	ldur	w8, [x29, #-4]
    b0d4:	ldp	x29, x30, [sp, #16]
    b0d8:	cmp	w0, #0x0
    b0dc:	csel	w0, wzr, w8, eq  // eq = none
    b0e0:	add	sp, sp, #0x20
    b0e4:	ret
    b0e8:	sub	sp, sp, #0x30
    b0ec:	stp	x29, x30, [sp, #32]
    b0f0:	add	x29, sp, #0x20
    b0f4:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
    b0f8:	ldr	x0, [x0, #16]
    b0fc:	ldr	x10, [x10, #3448]
    b100:	mov	x8, x5
    b104:	mov	x9, x4
    b108:	mov	x5, x3
    b10c:	ldr	x10, [x10]
    b110:	mov	w4, w2
    b114:	mov	x3, x1
    b118:	str	w7, [sp, #8]
    b11c:	sub	x2, x29, #0x8
    b120:	str	x6, [sp]
    b124:	mov	x1, x10
    b128:	mov	x6, x9
    b12c:	mov	x7, x8
    b130:	bl	c630 <gcc_cp_fe_context@@Base+0x2cc4>
    b134:	ldur	x8, [x29, #-8]
    b138:	ldp	x29, x30, [sp, #32]
    b13c:	cmp	w0, #0x0
    b140:	csel	x0, xzr, x8, eq  // eq = none
    b144:	add	sp, sp, #0x30
    b148:	ret
    b14c:	sub	sp, sp, #0x20
    b150:	stp	x29, x30, [sp, #16]
    b154:	add	x29, sp, #0x10
    b158:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b15c:	ldr	x0, [x0, #16]
    b160:	ldr	x8, [x8, #3736]
    b164:	mov	x5, x3
    b168:	mov	x4, x2
    b16c:	mov	x3, x1
    b170:	ldr	x8, [x8]
    b174:	add	x2, sp, #0x8
    b178:	mov	x1, x8
    b17c:	bl	c754 <gcc_cp_fe_context@@Base+0x2de8>
    b180:	ldr	x8, [sp, #8]
    b184:	ldp	x29, x30, [sp, #16]
    b188:	cmp	w0, #0x0
    b18c:	csel	x0, xzr, x8, eq  // eq = none
    b190:	add	sp, sp, #0x20
    b194:	ret
    b198:	sub	sp, sp, #0x20
    b19c:	stp	x29, x30, [sp, #16]
    b1a0:	add	x29, sp, #0x10
    b1a4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b1a8:	ldr	x0, [x0, #16]
    b1ac:	ldr	x8, [x8, #3192]
    b1b0:	mov	x3, x1
    b1b4:	add	x2, sp, #0x8
    b1b8:	ldr	x8, [x8]
    b1bc:	mov	x1, x8
    b1c0:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    b1c4:	ldr	x8, [sp, #8]
    b1c8:	ldp	x29, x30, [sp, #16]
    b1cc:	cmp	w0, #0x0
    b1d0:	csel	x0, xzr, x8, eq  // eq = none
    b1d4:	add	sp, sp, #0x20
    b1d8:	ret
    b1dc:	sub	sp, sp, #0x20
    b1e0:	stp	x29, x30, [sp, #16]
    b1e4:	add	x29, sp, #0x10
    b1e8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b1ec:	ldr	x0, [x0, #16]
    b1f0:	ldr	x8, [x8, #3688]
    b1f4:	mov	x3, x1
    b1f8:	add	x2, sp, #0x8
    b1fc:	ldr	x8, [x8]
    b200:	mov	x1, x8
    b204:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    b208:	ldr	x8, [sp, #8]
    b20c:	ldp	x29, x30, [sp, #16]
    b210:	cmp	w0, #0x0
    b214:	csel	x0, xzr, x8, eq  // eq = none
    b218:	add	sp, sp, #0x20
    b21c:	ret
    b220:	sub	sp, sp, #0x20
    b224:	stp	x29, x30, [sp, #16]
    b228:	add	x29, sp, #0x10
    b22c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b230:	ldr	x0, [x0, #16]
    b234:	ldr	x8, [x8, #3864]
    b238:	mov	x4, x2
    b23c:	mov	x3, x1
    b240:	sub	x2, x29, #0x4
    b244:	ldr	x8, [x8]
    b248:	mov	x1, x8
    b24c:	bl	c414 <gcc_cp_fe_context@@Base+0x2aa8>
    b250:	ldur	w8, [x29, #-4]
    b254:	ldp	x29, x30, [sp, #16]
    b258:	cmp	w0, #0x0
    b25c:	csel	w0, wzr, w8, eq  // eq = none
    b260:	add	sp, sp, #0x20
    b264:	ret
    b268:	sub	sp, sp, #0x20
    b26c:	stp	x29, x30, [sp, #16]
    b270:	add	x29, sp, #0x10
    b274:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b278:	ldr	x0, [x0, #16]
    b27c:	ldr	x8, [x8, #3912]
    b280:	mov	x3, x1
    b284:	add	x2, sp, #0x8
    b288:	ldr	x8, [x8]
    b28c:	mov	x1, x8
    b290:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    b294:	ldr	x8, [sp, #8]
    b298:	ldp	x29, x30, [sp, #16]
    b29c:	cmp	w0, #0x0
    b2a0:	csel	x0, xzr, x8, eq  // eq = none
    b2a4:	add	sp, sp, #0x20
    b2a8:	ret
    b2ac:	sub	sp, sp, #0x20
    b2b0:	stp	x29, x30, [sp, #16]
    b2b4:	add	x29, sp, #0x10
    b2b8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b2bc:	ldr	x0, [x0, #16]
    b2c0:	ldr	x8, [x8, #3320]
    b2c4:	mov	w4, w2
    b2c8:	mov	x3, x1
    b2cc:	add	x2, sp, #0x8
    b2d0:	ldr	x8, [x8]
    b2d4:	mov	x1, x8
    b2d8:	bl	c824 <gcc_cp_fe_context@@Base+0x2eb8>
    b2dc:	ldr	x8, [sp, #8]
    b2e0:	ldp	x29, x30, [sp, #16]
    b2e4:	cmp	w0, #0x0
    b2e8:	csel	x0, xzr, x8, eq  // eq = none
    b2ec:	add	sp, sp, #0x20
    b2f0:	ret
    b2f4:	sub	sp, sp, #0x20
    b2f8:	stp	x29, x30, [sp, #16]
    b2fc:	add	x29, sp, #0x10
    b300:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b304:	ldr	x0, [x0, #16]
    b308:	ldr	x8, [x8, #4016]
    b30c:	mov	x4, x2
    b310:	mov	x3, x1
    b314:	add	x2, sp, #0x8
    b318:	ldr	x8, [x8]
    b31c:	mov	x1, x8
    b320:	bl	c8d8 <gcc_cp_fe_context@@Base+0x2f6c>
    b324:	ldr	x8, [sp, #8]
    b328:	ldp	x29, x30, [sp, #16]
    b32c:	cmp	w0, #0x0
    b330:	csel	x0, xzr, x8, eq  // eq = none
    b334:	add	sp, sp, #0x20
    b338:	ret
    b33c:	sub	sp, sp, #0x30
    b340:	stp	x29, x30, [sp, #16]
    b344:	stp	x20, x19, [sp, #32]
    b348:	add	x29, sp, #0x10
    b34c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b350:	ldr	x19, [x0, #16]
    b354:	ldr	x8, [x8, #3848]
    b358:	mov	w1, #0x51                  	// #81
    b35c:	mov	x0, x19
    b360:	ldr	x20, [x8]
    b364:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    b368:	cbz	w0, b3b0 <gcc_cp_fe_context@@Base+0x1a44>
    b36c:	mov	x0, x19
    b370:	mov	x1, x20
    b374:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    b378:	cbz	w0, b3b0 <gcc_cp_fe_context@@Base+0x1a44>
    b37c:	mov	x0, x19
    b380:	mov	x1, xzr
    b384:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    b388:	cbz	w0, b3b0 <gcc_cp_fe_context@@Base+0x1a44>
    b38c:	mov	w1, #0x1                   	// #1
    b390:	mov	x0, x19
    b394:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    b398:	cbz	w0, b3b0 <gcc_cp_fe_context@@Base+0x1a44>
    b39c:	add	x1, sp, #0x8
    b3a0:	mov	x0, x19
    b3a4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    b3a8:	cbz	w0, b3b0 <gcc_cp_fe_context@@Base+0x1a44>
    b3ac:	ldr	w0, [sp, #8]
    b3b0:	ldp	x20, x19, [sp, #32]
    b3b4:	ldp	x29, x30, [sp, #16]
    b3b8:	add	sp, sp, #0x30
    b3bc:	ret
    b3c0:	sub	sp, sp, #0x20
    b3c4:	stp	x29, x30, [sp, #16]
    b3c8:	add	x29, sp, #0x10
    b3cc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b3d0:	ldr	x0, [x0, #16]
    b3d4:	ldr	x8, [x8, #3616]
    b3d8:	mov	w7, w5
    b3dc:	mov	x6, x4
    b3e0:	mov	x5, x3
    b3e4:	ldr	x8, [x8]
    b3e8:	mov	w4, w2
    b3ec:	mov	x3, x1
    b3f0:	add	x2, sp, #0x8
    b3f4:	mov	x1, x8
    b3f8:	bl	c98c <gcc_cp_fe_context@@Base+0x3020>
    b3fc:	ldr	x8, [sp, #8]
    b400:	ldp	x29, x30, [sp, #16]
    b404:	cmp	w0, #0x0
    b408:	csel	x0, xzr, x8, eq  // eq = none
    b40c:	add	sp, sp, #0x20
    b410:	ret
    b414:	sub	sp, sp, #0x20
    b418:	stp	x29, x30, [sp, #16]
    b41c:	add	x29, sp, #0x10
    b420:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b424:	ldr	x0, [x0, #16]
    b428:	ldr	x8, [x8, #3472]
    b42c:	mov	w7, w5
    b430:	mov	x6, x4
    b434:	mov	x5, x3
    b438:	ldr	x8, [x8]
    b43c:	mov	w4, w2
    b440:	mov	x3, x1
    b444:	add	x2, sp, #0x8
    b448:	mov	x1, x8
    b44c:	bl	c98c <gcc_cp_fe_context@@Base+0x3020>
    b450:	ldr	x8, [sp, #8]
    b454:	ldp	x29, x30, [sp, #16]
    b458:	cmp	w0, #0x0
    b45c:	csel	x0, xzr, x8, eq  // eq = none
    b460:	add	sp, sp, #0x20
    b464:	ret
    b468:	sub	sp, sp, #0x20
    b46c:	stp	x29, x30, [sp, #16]
    b470:	add	x29, sp, #0x10
    b474:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b478:	ldr	x0, [x0, #16]
    b47c:	ldr	x8, [x8, #3240]
    b480:	mov	w7, w5
    b484:	mov	x6, x4
    b488:	mov	x5, x3
    b48c:	ldr	x8, [x8]
    b490:	mov	x4, x2
    b494:	mov	x3, x1
    b498:	add	x2, sp, #0x8
    b49c:	mov	x1, x8
    b4a0:	bl	ca8c <gcc_cp_fe_context@@Base+0x3120>
    b4a4:	ldr	x8, [sp, #8]
    b4a8:	ldp	x29, x30, [sp, #16]
    b4ac:	cmp	w0, #0x0
    b4b0:	csel	x0, xzr, x8, eq  // eq = none
    b4b4:	add	sp, sp, #0x20
    b4b8:	ret
    b4bc:	sub	sp, sp, #0x20
    b4c0:	stp	x29, x30, [sp, #16]
    b4c4:	add	x29, sp, #0x10
    b4c8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b4cc:	ldr	x0, [x0, #16]
    b4d0:	ldr	x8, [x8, #3368]
    b4d4:	mov	x5, x3
    b4d8:	mov	x4, x2
    b4dc:	mov	x3, x1
    b4e0:	ldr	x8, [x8]
    b4e4:	add	x2, sp, #0x8
    b4e8:	mov	x1, x8
    b4ec:	bl	cb8c <gcc_cp_fe_context@@Base+0x3220>
    b4f0:	ldr	x8, [sp, #8]
    b4f4:	ldp	x29, x30, [sp, #16]
    b4f8:	cmp	w0, #0x0
    b4fc:	csel	x0, xzr, x8, eq  // eq = none
    b500:	add	sp, sp, #0x20
    b504:	ret
    b508:	sub	sp, sp, #0x20
    b50c:	stp	x29, x30, [sp, #16]
    b510:	add	x29, sp, #0x10
    b514:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b518:	ldr	x0, [x0, #16]
    b51c:	ldr	x8, [x8, #3656]
    b520:	mov	x4, x2
    b524:	mov	x3, x1
    b528:	add	x2, sp, #0x8
    b52c:	ldr	x8, [x8]
    b530:	mov	x1, x8
    b534:	bl	8a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1514>
    b538:	ldr	x8, [sp, #8]
    b53c:	ldp	x29, x30, [sp, #16]
    b540:	cmp	w0, #0x0
    b544:	csel	x0, xzr, x8, eq  // eq = none
    b548:	add	sp, sp, #0x20
    b54c:	ret
    b550:	sub	sp, sp, #0x20
    b554:	stp	x29, x30, [sp, #16]
    b558:	add	x29, sp, #0x10
    b55c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b560:	ldr	x0, [x0, #16]
    b564:	ldr	x8, [x8, #3504]
    b568:	mov	x4, x2
    b56c:	mov	x3, x1
    b570:	add	x2, sp, #0x8
    b574:	ldr	x8, [x8]
    b578:	mov	x1, x8
    b57c:	bl	cca8 <gcc_cp_fe_context@@Base+0x333c>
    b580:	ldr	x8, [sp, #8]
    b584:	ldp	x29, x30, [sp, #16]
    b588:	cmp	w0, #0x0
    b58c:	csel	x0, xzr, x8, eq  // eq = none
    b590:	add	sp, sp, #0x20
    b594:	ret
    b598:	sub	sp, sp, #0x20
    b59c:	stp	x29, x30, [sp, #16]
    b5a0:	add	x29, sp, #0x10
    b5a4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b5a8:	ldr	x0, [x0, #16]
    b5ac:	ldr	x8, [x8, #3784]
    b5b0:	mov	x7, x5
    b5b4:	mov	x6, x4
    b5b8:	mov	x5, x3
    b5bc:	ldr	x8, [x8]
    b5c0:	mov	w4, w2
    b5c4:	mov	x3, x1
    b5c8:	add	x2, sp, #0x8
    b5cc:	mov	x1, x8
    b5d0:	bl	cda8 <gcc_cp_fe_context@@Base+0x343c>
    b5d4:	ldr	x8, [sp, #8]
    b5d8:	ldp	x29, x30, [sp, #16]
    b5dc:	cmp	w0, #0x0
    b5e0:	csel	x0, xzr, x8, eq  // eq = none
    b5e4:	add	sp, sp, #0x20
    b5e8:	ret
    b5ec:	sub	sp, sp, #0x20
    b5f0:	stp	x29, x30, [sp, #16]
    b5f4:	add	x29, sp, #0x10
    b5f8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b5fc:	ldr	x0, [x0, #16]
    b600:	ldr	x8, [x8, #3824]
    b604:	mov	x4, x2
    b608:	mov	x3, x1
    b60c:	add	x2, sp, #0x8
    b610:	ldr	x8, [x8]
    b614:	mov	x1, x8
    b618:	bl	cef4 <gcc_cp_fe_context@@Base+0x3588>
    b61c:	ldr	x8, [sp, #8]
    b620:	ldp	x29, x30, [sp, #16]
    b624:	cmp	w0, #0x0
    b628:	csel	x0, xzr, x8, eq  // eq = none
    b62c:	add	sp, sp, #0x20
    b630:	ret
    b634:	sub	sp, sp, #0x20
    b638:	stp	x29, x30, [sp, #16]
    b63c:	add	x29, sp, #0x10
    b640:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b644:	ldr	x0, [x0, #16]
    b648:	ldr	x8, [x8, #3424]
    b64c:	mov	w4, w2
    b650:	mov	x3, x1
    b654:	add	x2, sp, #0x8
    b658:	ldr	x8, [x8]
    b65c:	mov	x1, x8
    b660:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    b664:	ldr	x8, [sp, #8]
    b668:	ldp	x29, x30, [sp, #16]
    b66c:	cmp	w0, #0x0
    b670:	csel	x0, xzr, x8, eq  // eq = none
    b674:	add	sp, sp, #0x20
    b678:	ret
    b67c:	sub	sp, sp, #0x20
    b680:	stp	x29, x30, [sp, #16]
    b684:	add	x29, sp, #0x10
    b688:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b68c:	ldr	x0, [x0, #16]
    b690:	ldr	x8, [x8, #3776]
    b694:	mov	x4, x2
    b698:	mov	x3, x1
    b69c:	add	x2, sp, #0x8
    b6a0:	ldr	x8, [x8]
    b6a4:	mov	x1, x8
    b6a8:	bl	cfa8 <gcc_cp_fe_context@@Base+0x363c>
    b6ac:	ldr	x8, [sp, #8]
    b6b0:	ldp	x29, x30, [sp, #16]
    b6b4:	cmp	w0, #0x0
    b6b8:	csel	x0, xzr, x8, eq  // eq = none
    b6bc:	add	sp, sp, #0x20
    b6c0:	ret
    b6c4:	sub	sp, sp, #0x20
    b6c8:	stp	x29, x30, [sp, #16]
    b6cc:	add	x29, sp, #0x10
    b6d0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b6d4:	ldr	x0, [x0, #16]
    b6d8:	ldr	x8, [x8, #3408]
    b6dc:	mov	x5, x3
    b6e0:	mov	x4, x2
    b6e4:	mov	x3, x1
    b6e8:	ldr	x8, [x8]
    b6ec:	add	x2, sp, #0x8
    b6f0:	mov	x1, x8
    b6f4:	bl	c754 <gcc_cp_fe_context@@Base+0x2de8>
    b6f8:	ldr	x8, [sp, #8]
    b6fc:	ldp	x29, x30, [sp, #16]
    b700:	cmp	w0, #0x0
    b704:	csel	x0, xzr, x8, eq  // eq = none
    b708:	add	sp, sp, #0x20
    b70c:	ret
    b710:	sub	sp, sp, #0x20
    b714:	stp	x29, x30, [sp, #16]
    b718:	add	x29, sp, #0x10
    b71c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b720:	ldr	x0, [x0, #16]
    b724:	ldr	x8, [x8, #3768]
    b728:	mov	x6, x4
    b72c:	mov	x5, x3
    b730:	mov	x4, x2
    b734:	ldr	x8, [x8]
    b738:	mov	x3, x1
    b73c:	add	x2, sp, #0x8
    b740:	mov	x1, x8
    b744:	bl	d05c <gcc_cp_fe_context@@Base+0x36f0>
    b748:	ldr	x8, [sp, #8]
    b74c:	ldp	x29, x30, [sp, #16]
    b750:	cmp	w0, #0x0
    b754:	csel	x0, xzr, x8, eq  // eq = none
    b758:	add	sp, sp, #0x20
    b75c:	ret
    b760:	sub	sp, sp, #0x20
    b764:	stp	x29, x30, [sp, #16]
    b768:	add	x29, sp, #0x10
    b76c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b770:	ldr	x0, [x0, #16]
    b774:	ldr	x8, [x8, #3480]
    b778:	mov	x4, x2
    b77c:	mov	x3, x1
    b780:	add	x2, sp, #0x8
    b784:	ldr	x8, [x8]
    b788:	mov	x1, x8
    b78c:	bl	cfa8 <gcc_cp_fe_context@@Base+0x363c>
    b790:	ldr	x8, [sp, #8]
    b794:	ldp	x29, x30, [sp, #16]
    b798:	cmp	w0, #0x0
    b79c:	csel	x0, xzr, x8, eq  // eq = none
    b7a0:	add	sp, sp, #0x20
    b7a4:	ret
    b7a8:	sub	sp, sp, #0x20
    b7ac:	stp	x29, x30, [sp, #16]
    b7b0:	add	x29, sp, #0x10
    b7b4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b7b8:	ldr	x0, [x0, #16]
    b7bc:	ldr	x8, [x8, #3328]
    b7c0:	mov	x5, x3
    b7c4:	mov	x4, x2
    b7c8:	mov	x3, x1
    b7cc:	ldr	x8, [x8]
    b7d0:	add	x2, sp, #0x8
    b7d4:	mov	x1, x8
    b7d8:	bl	c754 <gcc_cp_fe_context@@Base+0x2de8>
    b7dc:	ldr	x8, [sp, #8]
    b7e0:	ldp	x29, x30, [sp, #16]
    b7e4:	cmp	w0, #0x0
    b7e8:	csel	x0, xzr, x8, eq  // eq = none
    b7ec:	add	sp, sp, #0x20
    b7f0:	ret
    b7f4:	sub	sp, sp, #0x20
    b7f8:	stp	x29, x30, [sp, #16]
    b7fc:	add	x29, sp, #0x10
    b800:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b804:	ldr	x0, [x0, #16]
    b808:	ldr	x8, [x8, #3744]
    b80c:	mov	x5, x3
    b810:	mov	x4, x2
    b814:	mov	x3, x1
    b818:	ldr	x8, [x8]
    b81c:	add	x2, sp, #0x8
    b820:	mov	x1, x8
    b824:	bl	d140 <gcc_cp_fe_context@@Base+0x37d4>
    b828:	ldr	x8, [sp, #8]
    b82c:	ldp	x29, x30, [sp, #16]
    b830:	cmp	w0, #0x0
    b834:	csel	x0, xzr, x8, eq  // eq = none
    b838:	add	sp, sp, #0x20
    b83c:	ret
    b840:	sub	sp, sp, #0x20
    b844:	stp	x29, x30, [sp, #16]
    b848:	add	x29, sp, #0x10
    b84c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b850:	ldr	x0, [x0, #16]
    b854:	ldr	x8, [x8, #3680]
    b858:	mov	x6, x4
    b85c:	mov	x5, x3
    b860:	mov	x4, x2
    b864:	ldr	x8, [x8]
    b868:	mov	x3, x1
    b86c:	add	x2, sp, #0x8
    b870:	mov	x1, x8
    b874:	bl	d248 <gcc_cp_fe_context@@Base+0x38dc>
    b878:	ldr	x8, [sp, #8]
    b87c:	ldp	x29, x30, [sp, #16]
    b880:	cmp	w0, #0x0
    b884:	csel	x0, xzr, x8, eq  // eq = none
    b888:	add	sp, sp, #0x20
    b88c:	ret
    b890:	sub	sp, sp, #0x20
    b894:	stp	x29, x30, [sp, #16]
    b898:	add	x29, sp, #0x10
    b89c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b8a0:	ldr	x0, [x0, #16]
    b8a4:	ldr	x8, [x8, #3552]
    b8a8:	mov	x5, x3
    b8ac:	mov	w4, w2
    b8b0:	mov	x3, x1
    b8b4:	ldr	x8, [x8]
    b8b8:	add	x2, sp, #0x8
    b8bc:	mov	x1, x8
    b8c0:	bl	d39c <gcc_cp_fe_context@@Base+0x3a30>
    b8c4:	ldr	x8, [sp, #8]
    b8c8:	ldp	x29, x30, [sp, #16]
    b8cc:	cmp	w0, #0x0
    b8d0:	csel	x0, xzr, x8, eq  // eq = none
    b8d4:	add	sp, sp, #0x20
    b8d8:	ret
    b8dc:	sub	sp, sp, #0x20
    b8e0:	stp	x29, x30, [sp, #16]
    b8e4:	add	x29, sp, #0x10
    b8e8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b8ec:	ldr	x0, [x0, #16]
    b8f0:	ldr	x8, [x8, #3704]
    b8f4:	mov	x3, x1
    b8f8:	add	x2, sp, #0x8
    b8fc:	ldr	x8, [x8]
    b900:	mov	x1, x8
    b904:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    b908:	ldr	x8, [sp, #8]
    b90c:	ldp	x29, x30, [sp, #16]
    b910:	cmp	w0, #0x0
    b914:	csel	x0, xzr, x8, eq  // eq = none
    b918:	add	sp, sp, #0x20
    b91c:	ret
    b920:	sub	sp, sp, #0x20
    b924:	stp	x29, x30, [sp, #16]
    b928:	add	x29, sp, #0x10
    b92c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b930:	ldr	x0, [x0, #16]
    b934:	ldr	x8, [x8, #3592]
    b938:	mov	w7, w5
    b93c:	mov	x6, x4
    b940:	mov	x5, x3
    b944:	ldr	x8, [x8]
    b948:	mov	x4, x2
    b94c:	mov	x3, x1
    b950:	add	x2, sp, #0x8
    b954:	mov	x1, x8
    b958:	bl	d4a4 <gcc_cp_fe_context@@Base+0x3b38>
    b95c:	ldr	x8, [sp, #8]
    b960:	ldp	x29, x30, [sp, #16]
    b964:	cmp	w0, #0x0
    b968:	csel	x0, xzr, x8, eq  // eq = none
    b96c:	add	sp, sp, #0x20
    b970:	ret
    b974:	sub	sp, sp, #0x20
    b978:	stp	x29, x30, [sp, #16]
    b97c:	add	x29, sp, #0x10
    b980:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b984:	ldr	x0, [x0, #16]
    b988:	ldr	x8, [x8, #3720]
    b98c:	mov	w6, w4
    b990:	mov	x5, x3
    b994:	mov	x4, x2
    b998:	ldr	x8, [x8]
    b99c:	mov	x3, x1
    b9a0:	add	x2, sp, #0x8
    b9a4:	mov	x1, x8
    b9a8:	bl	d5f0 <gcc_cp_fe_context@@Base+0x3c84>
    b9ac:	ldr	x8, [sp, #8]
    b9b0:	ldp	x29, x30, [sp, #16]
    b9b4:	cmp	w0, #0x0
    b9b8:	csel	x0, xzr, x8, eq  // eq = none
    b9bc:	add	sp, sp, #0x20
    b9c0:	ret
    b9c4:	sub	sp, sp, #0x20
    b9c8:	stp	x29, x30, [sp, #16]
    b9cc:	add	x29, sp, #0x10
    b9d0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    b9d4:	ldr	x0, [x0, #16]
    b9d8:	ldr	x8, [x8, #3760]
    b9dc:	mov	w6, w4
    b9e0:	mov	x5, x3
    b9e4:	mov	x4, x2
    b9e8:	ldr	x8, [x8]
    b9ec:	mov	x3, x1
    b9f0:	add	x2, sp, #0x8
    b9f4:	mov	x1, x8
    b9f8:	bl	d720 <gcc_cp_fe_context@@Base+0x3db4>
    b9fc:	ldr	x8, [sp, #8]
    ba00:	ldp	x29, x30, [sp, #16]
    ba04:	cmp	w0, #0x0
    ba08:	csel	x0, xzr, x8, eq  // eq = none
    ba0c:	add	sp, sp, #0x20
    ba10:	ret
    ba14:	sub	sp, sp, #0x20
    ba18:	stp	x29, x30, [sp, #16]
    ba1c:	add	x29, sp, #0x10
    ba20:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ba24:	ldr	x0, [x0, #16]
    ba28:	ldr	x8, [x8, #3360]
    ba2c:	mov	w7, w5
    ba30:	mov	x6, x4
    ba34:	mov	w5, w3
    ba38:	ldr	x8, [x8]
    ba3c:	mov	x4, x2
    ba40:	mov	w3, w1
    ba44:	add	x2, sp, #0x8
    ba48:	mov	x1, x8
    ba4c:	bl	d850 <gcc_cp_fe_context@@Base+0x3ee4>
    ba50:	ldr	x8, [sp, #8]
    ba54:	ldp	x29, x30, [sp, #16]
    ba58:	cmp	w0, #0x0
    ba5c:	csel	x0, xzr, x8, eq  // eq = none
    ba60:	add	sp, sp, #0x20
    ba64:	ret
    ba68:	sub	sp, sp, #0x20
    ba6c:	stp	x29, x30, [sp, #16]
    ba70:	add	x29, sp, #0x10
    ba74:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    ba78:	ldr	x0, [x0, #16]
    ba7c:	ldr	x8, [x8, #3536]
    ba80:	mov	x7, x5
    ba84:	mov	x6, x4
    ba88:	mov	w5, w3
    ba8c:	ldr	x8, [x8]
    ba90:	mov	x4, x2
    ba94:	mov	x3, x1
    ba98:	add	x2, sp, #0x8
    ba9c:	mov	x1, x8
    baa0:	bl	d950 <gcc_cp_fe_context@@Base+0x3fe4>
    baa4:	ldr	x8, [sp, #8]
    baa8:	ldp	x29, x30, [sp, #16]
    baac:	cmp	w0, #0x0
    bab0:	csel	x0, xzr, x8, eq  // eq = none
    bab4:	add	sp, sp, #0x20
    bab8:	ret
    babc:	sub	sp, sp, #0x20
    bac0:	stp	x29, x30, [sp, #16]
    bac4:	add	x29, sp, #0x10
    bac8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bacc:	ldr	x0, [x0, #16]
    bad0:	ldr	x8, [x8, #3888]
    bad4:	mov	x3, x1
    bad8:	sub	x2, x29, #0x4
    badc:	ldr	x8, [x8]
    bae0:	mov	x1, x8
    bae4:	bl	da50 <gcc_cp_fe_context@@Base+0x40e4>
    bae8:	ldur	w8, [x29, #-4]
    baec:	ldp	x29, x30, [sp, #16]
    baf0:	cmp	w0, #0x0
    baf4:	csel	w0, wzr, w8, eq  // eq = none
    baf8:	add	sp, sp, #0x20
    bafc:	ret
    bb00:	sub	sp, sp, #0x20
    bb04:	stp	x29, x30, [sp, #16]
    bb08:	add	x29, sp, #0x10
    bb0c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bb10:	ldr	x0, [x0, #16]
    bb14:	ldr	x8, [x8, #3224]
    bb18:	mov	w7, w5
    bb1c:	mov	x6, x4
    bb20:	mov	w5, w3
    bb24:	ldr	x8, [x8]
    bb28:	mov	x4, x2
    bb2c:	mov	x3, x1
    bb30:	add	x2, sp, #0x8
    bb34:	mov	x1, x8
    bb38:	bl	daf0 <gcc_cp_fe_context@@Base+0x4184>
    bb3c:	ldr	x8, [sp, #8]
    bb40:	ldp	x29, x30, [sp, #16]
    bb44:	cmp	w0, #0x0
    bb48:	csel	x0, xzr, x8, eq  // eq = none
    bb4c:	add	sp, sp, #0x20
    bb50:	ret
    bb54:	sub	sp, sp, #0x20
    bb58:	stp	x29, x30, [sp, #16]
    bb5c:	add	x29, sp, #0x10
    bb60:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bb64:	ldr	x0, [x0, #16]
    bb68:	ldr	x8, [x8, #3400]
    bb6c:	mov	x5, x3
    bb70:	mov	x4, x2
    bb74:	mov	x3, x1
    bb78:	ldr	x8, [x8]
    bb7c:	add	x2, sp, #0x8
    bb80:	mov	x1, x8
    bb84:	bl	dbf0 <gcc_cp_fe_context@@Base+0x4284>
    bb88:	ldr	x8, [sp, #8]
    bb8c:	ldp	x29, x30, [sp, #16]
    bb90:	cmp	w0, #0x0
    bb94:	csel	x0, xzr, x8, eq  // eq = none
    bb98:	add	sp, sp, #0x20
    bb9c:	ret
    bba0:	sub	sp, sp, #0x20
    bba4:	stp	x29, x30, [sp, #16]
    bba8:	add	x29, sp, #0x10
    bbac:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bbb0:	ldr	x0, [x0, #16]
    bbb4:	ldr	x8, [x8, #3696]
    bbb8:	mov	x3, x1
    bbbc:	sub	x2, x29, #0x4
    bbc0:	ldr	x8, [x8]
    bbc4:	mov	x1, x8
    bbc8:	bl	86bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x119c>
    bbcc:	ldur	w8, [x29, #-4]
    bbd0:	ldp	x29, x30, [sp, #16]
    bbd4:	cmp	w0, #0x0
    bbd8:	csel	w0, wzr, w8, eq  // eq = none
    bbdc:	add	sp, sp, #0x20
    bbe0:	ret
    bbe4:	sub	sp, sp, #0x20
    bbe8:	stp	x29, x30, [sp, #16]
    bbec:	add	x29, sp, #0x10
    bbf0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bbf4:	ldr	x0, [x0, #16]
    bbf8:	ldr	x8, [x8, #3928]
    bbfc:	mov	w5, w3
    bc00:	mov	x4, x2
    bc04:	mov	x3, x1
    bc08:	ldr	x8, [x8]
    bc0c:	add	x2, sp, #0x8
    bc10:	mov	x1, x8
    bc14:	bl	875c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x123c>
    bc18:	ldr	x8, [sp, #8]
    bc1c:	ldp	x29, x30, [sp, #16]
    bc20:	cmp	w0, #0x0
    bc24:	csel	x0, xzr, x8, eq  // eq = none
    bc28:	add	sp, sp, #0x20
    bc2c:	ret
    bc30:	sub	sp, sp, #0x20
    bc34:	stp	x29, x30, [sp, #16]
    bc38:	add	x29, sp, #0x10
    bc3c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bc40:	ldr	x0, [x0, #16]
    bc44:	ldr	x8, [x8, #3280]
    bc48:	mov	x4, x2
    bc4c:	mov	x3, x1
    bc50:	add	x2, sp, #0x8
    bc54:	ldr	x8, [x8]
    bc58:	mov	x1, x8
    bc5c:	bl	dcc0 <gcc_cp_fe_context@@Base+0x4354>
    bc60:	ldr	x8, [sp, #8]
    bc64:	ldp	x29, x30, [sp, #16]
    bc68:	cmp	w0, #0x0
    bc6c:	csel	x0, xzr, x8, eq  // eq = none
    bc70:	add	sp, sp, #0x20
    bc74:	ret
    bc78:	sub	sp, sp, #0x20
    bc7c:	stp	x29, x30, [sp, #16]
    bc80:	add	x29, sp, #0x10
    bc84:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bc88:	ldr	x0, [x0, #16]
    bc8c:	ldr	x8, [x8, #3632]
    bc90:	mov	w6, w4
    bc94:	mov	w5, w3
    bc98:	mov	x4, x2
    bc9c:	ldr	x8, [x8]
    bca0:	mov	x3, x1
    bca4:	add	x2, sp, #0x8
    bca8:	mov	x1, x8
    bcac:	bl	dd74 <gcc_cp_fe_context@@Base+0x4408>
    bcb0:	ldr	x8, [sp, #8]
    bcb4:	ldp	x29, x30, [sp, #16]
    bcb8:	cmp	w0, #0x0
    bcbc:	csel	x0, xzr, x8, eq  // eq = none
    bcc0:	add	sp, sp, #0x20
    bcc4:	ret
    bcc8:	sub	sp, sp, #0x20
    bccc:	stp	x29, x30, [sp, #16]
    bcd0:	add	x29, sp, #0x10
    bcd4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bcd8:	ldr	x0, [x0, #16]
    bcdc:	ldr	x8, [x8, #3792]
    bce0:	mov	w4, w2
    bce4:	mov	x3, x1
    bce8:	add	x2, sp, #0x8
    bcec:	ldr	x8, [x8]
    bcf0:	mov	x1, x8
    bcf4:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    bcf8:	ldr	x8, [sp, #8]
    bcfc:	ldp	x29, x30, [sp, #16]
    bd00:	cmp	w0, #0x0
    bd04:	csel	x0, xzr, x8, eq  // eq = none
    bd08:	add	sp, sp, #0x20
    bd0c:	ret
    bd10:	sub	sp, sp, #0x20
    bd14:	stp	x29, x30, [sp, #16]
    bd18:	add	x29, sp, #0x10
    bd1c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bd20:	ldr	x0, [x0, #16]
    bd24:	ldr	x8, [x8, #3560]
    bd28:	mov	x3, x1
    bd2c:	add	x2, sp, #0x8
    bd30:	ldr	x8, [x8]
    bd34:	mov	x1, x8
    bd38:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    bd3c:	ldr	x8, [sp, #8]
    bd40:	ldp	x29, x30, [sp, #16]
    bd44:	cmp	w0, #0x0
    bd48:	csel	x0, xzr, x8, eq  // eq = none
    bd4c:	add	sp, sp, #0x20
    bd50:	ret
    bd54:	sub	sp, sp, #0x20
    bd58:	stp	x29, x30, [sp, #16]
    bd5c:	add	x29, sp, #0x10
    bd60:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bd64:	ldr	x0, [x0, #16]
    bd68:	ldr	x8, [x8, #3272]
    bd6c:	mov	x5, x3
    bd70:	mov	x4, x2
    bd74:	mov	w3, w1
    bd78:	ldr	x8, [x8]
    bd7c:	add	x2, sp, #0x8
    bd80:	mov	x1, x8
    bd84:	bl	8d3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x181c>
    bd88:	ldr	x8, [sp, #8]
    bd8c:	ldp	x29, x30, [sp, #16]
    bd90:	cmp	w0, #0x0
    bd94:	csel	x0, xzr, x8, eq  // eq = none
    bd98:	add	sp, sp, #0x20
    bd9c:	ret
    bda0:	sub	sp, sp, #0x30
    bda4:	stp	x29, x30, [sp, #16]
    bda8:	stp	x20, x19, [sp, #32]
    bdac:	add	x29, sp, #0x10
    bdb0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bdb4:	ldr	x19, [x0, #16]
    bdb8:	ldr	x8, [x8, #4064]
    bdbc:	mov	w1, #0x51                  	// #81
    bdc0:	mov	x0, x19
    bdc4:	ldr	x20, [x8]
    bdc8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    bdcc:	cbz	w0, be24 <gcc_cp_fe_context@@Base+0x24b8>
    bdd0:	mov	x0, x19
    bdd4:	mov	x1, x20
    bdd8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    bddc:	cbz	w0, be24 <gcc_cp_fe_context@@Base+0x24b8>
    bde0:	mov	x0, x19
    bde4:	mov	x1, xzr
    bde8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    bdec:	cbz	w0, be24 <gcc_cp_fe_context@@Base+0x24b8>
    bdf0:	mov	w1, #0x1                   	// #1
    bdf4:	mov	x0, x19
    bdf8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    bdfc:	cbz	w0, be24 <gcc_cp_fe_context@@Base+0x24b8>
    be00:	add	x1, sp, #0x8
    be04:	mov	x0, x19
    be08:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    be0c:	cbz	w0, be24 <gcc_cp_fe_context@@Base+0x24b8>
    be10:	ldr	x0, [sp, #8]
    be14:	ldp	x20, x19, [sp, #32]
    be18:	ldp	x29, x30, [sp, #16]
    be1c:	add	sp, sp, #0x30
    be20:	ret
    be24:	mov	x0, xzr
    be28:	ldp	x20, x19, [sp, #32]
    be2c:	ldp	x29, x30, [sp, #16]
    be30:	add	sp, sp, #0x30
    be34:	ret
    be38:	sub	sp, sp, #0x20
    be3c:	stp	x29, x30, [sp, #16]
    be40:	add	x29, sp, #0x10
    be44:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    be48:	ldr	x0, [x0, #16]
    be4c:	ldr	x8, [x8, #3288]
    be50:	mov	x4, x2
    be54:	mov	x3, x1
    be58:	add	x2, sp, #0x8
    be5c:	ldr	x8, [x8]
    be60:	mov	x1, x8
    be64:	bl	8e0c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18ec>
    be68:	ldr	x8, [sp, #8]
    be6c:	ldp	x29, x30, [sp, #16]
    be70:	cmp	w0, #0x0
    be74:	csel	x0, xzr, x8, eq  // eq = none
    be78:	add	sp, sp, #0x20
    be7c:	ret
    be80:	sub	sp, sp, #0x30
    be84:	stp	x29, x30, [sp, #16]
    be88:	stp	x20, x19, [sp, #32]
    be8c:	add	x29, sp, #0x10
    be90:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    be94:	ldr	x19, [x0, #16]
    be98:	ldr	x8, [x8, #3256]
    be9c:	mov	w1, #0x51                  	// #81
    bea0:	mov	x0, x19
    bea4:	ldr	x20, [x8]
    bea8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    beac:	cbz	w0, bf04 <gcc_cp_fe_context@@Base+0x2598>
    beb0:	mov	x0, x19
    beb4:	mov	x1, x20
    beb8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    bebc:	cbz	w0, bf04 <gcc_cp_fe_context@@Base+0x2598>
    bec0:	mov	x0, x19
    bec4:	mov	x1, xzr
    bec8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    becc:	cbz	w0, bf04 <gcc_cp_fe_context@@Base+0x2598>
    bed0:	mov	w1, #0x1                   	// #1
    bed4:	mov	x0, x19
    bed8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    bedc:	cbz	w0, bf04 <gcc_cp_fe_context@@Base+0x2598>
    bee0:	add	x1, sp, #0x8
    bee4:	mov	x0, x19
    bee8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    beec:	cbz	w0, bf04 <gcc_cp_fe_context@@Base+0x2598>
    bef0:	ldr	x0, [sp, #8]
    bef4:	ldp	x20, x19, [sp, #32]
    bef8:	ldp	x29, x30, [sp, #16]
    befc:	add	sp, sp, #0x30
    bf00:	ret
    bf04:	mov	x0, xzr
    bf08:	ldp	x20, x19, [sp, #32]
    bf0c:	ldp	x29, x30, [sp, #16]
    bf10:	add	sp, sp, #0x30
    bf14:	ret
    bf18:	sub	sp, sp, #0x30
    bf1c:	stp	x29, x30, [sp, #16]
    bf20:	stp	x20, x19, [sp, #32]
    bf24:	add	x29, sp, #0x10
    bf28:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bf2c:	ldr	x19, [x0, #16]
    bf30:	ldr	x8, [x8, #3976]
    bf34:	mov	w1, #0x51                  	// #81
    bf38:	mov	x0, x19
    bf3c:	ldr	x20, [x8]
    bf40:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    bf44:	cbz	w0, bf9c <gcc_cp_fe_context@@Base+0x2630>
    bf48:	mov	x0, x19
    bf4c:	mov	x1, x20
    bf50:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    bf54:	cbz	w0, bf9c <gcc_cp_fe_context@@Base+0x2630>
    bf58:	mov	x0, x19
    bf5c:	mov	x1, xzr
    bf60:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    bf64:	cbz	w0, bf9c <gcc_cp_fe_context@@Base+0x2630>
    bf68:	mov	w1, #0x1                   	// #1
    bf6c:	mov	x0, x19
    bf70:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    bf74:	cbz	w0, bf9c <gcc_cp_fe_context@@Base+0x2630>
    bf78:	add	x1, sp, #0x8
    bf7c:	mov	x0, x19
    bf80:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    bf84:	cbz	w0, bf9c <gcc_cp_fe_context@@Base+0x2630>
    bf88:	ldr	x0, [sp, #8]
    bf8c:	ldp	x20, x19, [sp, #32]
    bf90:	ldp	x29, x30, [sp, #16]
    bf94:	add	sp, sp, #0x30
    bf98:	ret
    bf9c:	mov	x0, xzr
    bfa0:	ldp	x20, x19, [sp, #32]
    bfa4:	ldp	x29, x30, [sp, #16]
    bfa8:	add	sp, sp, #0x30
    bfac:	ret
    bfb0:	sub	sp, sp, #0x30
    bfb4:	stp	x29, x30, [sp, #16]
    bfb8:	stp	x20, x19, [sp, #32]
    bfbc:	add	x29, sp, #0x10
    bfc0:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    bfc4:	ldr	x19, [x0, #16]
    bfc8:	ldr	x8, [x8, #3336]
    bfcc:	mov	w1, #0x51                  	// #81
    bfd0:	mov	x0, x19
    bfd4:	ldr	x20, [x8]
    bfd8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    bfdc:	cbz	w0, c034 <gcc_cp_fe_context@@Base+0x26c8>
    bfe0:	mov	x0, x19
    bfe4:	mov	x1, x20
    bfe8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    bfec:	cbz	w0, c034 <gcc_cp_fe_context@@Base+0x26c8>
    bff0:	mov	x0, x19
    bff4:	mov	x1, xzr
    bff8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    bffc:	cbz	w0, c034 <gcc_cp_fe_context@@Base+0x26c8>
    c000:	mov	w1, #0x1                   	// #1
    c004:	mov	x0, x19
    c008:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c00c:	cbz	w0, c034 <gcc_cp_fe_context@@Base+0x26c8>
    c010:	add	x1, sp, #0x8
    c014:	mov	x0, x19
    c018:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c01c:	cbz	w0, c034 <gcc_cp_fe_context@@Base+0x26c8>
    c020:	ldr	x0, [sp, #8]
    c024:	ldp	x20, x19, [sp, #32]
    c028:	ldp	x29, x30, [sp, #16]
    c02c:	add	sp, sp, #0x30
    c030:	ret
    c034:	mov	x0, xzr
    c038:	ldp	x20, x19, [sp, #32]
    c03c:	ldp	x29, x30, [sp, #16]
    c040:	add	sp, sp, #0x30
    c044:	ret
    c048:	sub	sp, sp, #0x30
    c04c:	stp	x29, x30, [sp, #16]
    c050:	stp	x20, x19, [sp, #32]
    c054:	add	x29, sp, #0x10
    c058:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c05c:	ldr	x19, [x0, #16]
    c060:	ldr	x8, [x8, #3544]
    c064:	mov	w1, #0x51                  	// #81
    c068:	mov	x0, x19
    c06c:	ldr	x20, [x8]
    c070:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c074:	cbz	w0, c0cc <gcc_cp_fe_context@@Base+0x2760>
    c078:	mov	x0, x19
    c07c:	mov	x1, x20
    c080:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c084:	cbz	w0, c0cc <gcc_cp_fe_context@@Base+0x2760>
    c088:	mov	x0, x19
    c08c:	mov	x1, xzr
    c090:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c094:	cbz	w0, c0cc <gcc_cp_fe_context@@Base+0x2760>
    c098:	mov	w1, #0x1                   	// #1
    c09c:	mov	x0, x19
    c0a0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c0a4:	cbz	w0, c0cc <gcc_cp_fe_context@@Base+0x2760>
    c0a8:	add	x1, sp, #0x8
    c0ac:	mov	x0, x19
    c0b0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c0b4:	cbz	w0, c0cc <gcc_cp_fe_context@@Base+0x2760>
    c0b8:	ldr	x0, [sp, #8]
    c0bc:	ldp	x20, x19, [sp, #32]
    c0c0:	ldp	x29, x30, [sp, #16]
    c0c4:	add	sp, sp, #0x30
    c0c8:	ret
    c0cc:	mov	x0, xzr
    c0d0:	ldp	x20, x19, [sp, #32]
    c0d4:	ldp	x29, x30, [sp, #16]
    c0d8:	add	sp, sp, #0x30
    c0dc:	ret
    c0e0:	sub	sp, sp, #0x20
    c0e4:	stp	x29, x30, [sp, #16]
    c0e8:	add	x29, sp, #0x10
    c0ec:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c0f0:	ldr	x0, [x0, #16]
    c0f4:	ldr	x8, [x8, #3512]
    c0f8:	mov	w4, w2
    c0fc:	mov	x3, x1
    c100:	add	x2, sp, #0x8
    c104:	ldr	x8, [x8]
    c108:	mov	x1, x8
    c10c:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    c110:	ldr	x8, [sp, #8]
    c114:	ldp	x29, x30, [sp, #16]
    c118:	cmp	w0, #0x0
    c11c:	csel	x0, xzr, x8, eq  // eq = none
    c120:	add	sp, sp, #0x20
    c124:	ret
    c128:	sub	sp, sp, #0x20
    c12c:	stp	x29, x30, [sp, #16]
    c130:	add	x29, sp, #0x10
    c134:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c138:	ldr	x0, [x0, #16]
    c13c:	ldr	x8, [x8, #3568]
    c140:	mov	x4, x2
    c144:	mov	x3, x1
    c148:	add	x2, sp, #0x8
    c14c:	ldr	x8, [x8]
    c150:	mov	x1, x8
    c154:	bl	c8d8 <gcc_cp_fe_context@@Base+0x2f6c>
    c158:	ldr	x8, [sp, #8]
    c15c:	ldp	x29, x30, [sp, #16]
    c160:	cmp	w0, #0x0
    c164:	csel	x0, xzr, x8, eq  // eq = none
    c168:	add	sp, sp, #0x20
    c16c:	ret
    c170:	sub	sp, sp, #0x20
    c174:	stp	x29, x30, [sp, #16]
    c178:	add	x29, sp, #0x10
    c17c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c180:	ldr	x0, [x0, #16]
    c184:	ldr	x8, [x8, #3896]
    c188:	mov	x4, x2
    c18c:	mov	x3, x1
    c190:	add	x2, sp, #0x8
    c194:	ldr	x8, [x8]
    c198:	mov	x1, x8
    c19c:	bl	8a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1514>
    c1a0:	ldr	x8, [sp, #8]
    c1a4:	ldp	x29, x30, [sp, #16]
    c1a8:	cmp	w0, #0x0
    c1ac:	csel	x0, xzr, x8, eq  // eq = none
    c1b0:	add	sp, sp, #0x20
    c1b4:	ret
    c1b8:	sub	sp, sp, #0x20
    c1bc:	stp	x29, x30, [sp, #16]
    c1c0:	add	x29, sp, #0x10
    c1c4:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c1c8:	ldr	x0, [x0, #16]
    c1cc:	ldr	x8, [x8, #4008]
    c1d0:	mov	w4, w2
    c1d4:	mov	x3, x1
    c1d8:	add	x2, sp, #0x8
    c1dc:	ldr	x8, [x8]
    c1e0:	mov	x1, x8
    c1e4:	bl	de58 <gcc_cp_fe_context@@Base+0x44ec>
    c1e8:	ldr	x8, [sp, #8]
    c1ec:	ldp	x29, x30, [sp, #16]
    c1f0:	cmp	w0, #0x0
    c1f4:	csel	x0, xzr, x8, eq  // eq = none
    c1f8:	add	sp, sp, #0x20
    c1fc:	ret
    c200:	sub	sp, sp, #0x20
    c204:	stp	x29, x30, [sp, #16]
    c208:	add	x29, sp, #0x10
    c20c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c210:	ldr	x0, [x0, #16]
    c214:	ldr	x8, [x8, #3984]
    c218:	mov	x3, x1
    c21c:	add	x2, sp, #0x8
    c220:	ldr	x8, [x8]
    c224:	mov	x1, x8
    c228:	bl	8398 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    c22c:	ldr	x8, [sp, #8]
    c230:	ldp	x29, x30, [sp, #16]
    c234:	cmp	w0, #0x0
    c238:	csel	x0, xzr, x8, eq  // eq = none
    c23c:	add	sp, sp, #0x20
    c240:	ret
    c244:	sub	sp, sp, #0x20
    c248:	stp	x29, x30, [sp, #16]
    c24c:	add	x29, sp, #0x10
    c250:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c254:	ldr	x0, [x0, #16]
    c258:	ldr	x8, [x8, #3712]
    c25c:	mov	w4, w2
    c260:	mov	x3, x1
    c264:	add	x2, sp, #0x8
    c268:	ldr	x8, [x8]
    c26c:	mov	x1, x8
    c270:	bl	8980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1460>
    c274:	ldr	x8, [sp, #8]
    c278:	ldp	x29, x30, [sp, #16]
    c27c:	cmp	w0, #0x0
    c280:	csel	x0, xzr, x8, eq  // eq = none
    c284:	add	sp, sp, #0x20
    c288:	ret
    c28c:	sub	sp, sp, #0x20
    c290:	stp	x29, x30, [sp, #16]
    c294:	add	x29, sp, #0x10
    c298:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c29c:	ldr	x0, [x0, #16]
    c2a0:	ldr	x8, [x8, #4032]
    c2a4:	mov	w7, w5
    c2a8:	mov	x6, x4
    c2ac:	mov	x5, x3
    c2b0:	ldr	x8, [x8]
    c2b4:	mov	x4, x2
    c2b8:	mov	x3, x1
    c2bc:	sub	x2, x29, #0x4
    c2c0:	mov	x1, x8
    c2c4:	bl	8b9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x167c>
    c2c8:	ldur	w8, [x29, #-4]
    c2cc:	ldp	x29, x30, [sp, #16]
    c2d0:	cmp	w0, #0x0
    c2d4:	csel	w0, wzr, w8, eq  // eq = none
    c2d8:	add	sp, sp, #0x20
    c2dc:	ret
    c2e0:	sub	sp, sp, #0x20
    c2e4:	stp	x29, x30, [sp, #16]
    c2e8:	add	x29, sp, #0x10
    c2ec:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c2f0:	ldr	x0, [x0, #16]
    c2f4:	ldr	x8, [x8, #3640]
    c2f8:	mov	x3, x1
    c2fc:	add	x2, sp, #0x8
    c300:	ldr	x8, [x8]
    c304:	mov	x1, x8
    c308:	bl	8c9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x177c>
    c30c:	ldr	x8, [sp, #8]
    c310:	ldp	x29, x30, [sp, #16]
    c314:	cmp	w0, #0x0
    c318:	csel	x0, xzr, x8, eq  // eq = none
    c31c:	add	sp, sp, #0x20
    c320:	ret
    c324:	sub	sp, sp, #0x20
    c328:	stp	x29, x30, [sp, #16]
    c32c:	add	x29, sp, #0x10
    c330:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    c334:	ldr	x0, [x0, #16]
    c338:	ldr	x8, [x8, #3664]
    c33c:	mov	w6, w4
    c340:	mov	x5, x3
    c344:	mov	x4, x2
    c348:	ldr	x8, [x8]
    c34c:	mov	x3, x1
    c350:	sub	x2, x29, #0x4
    c354:	mov	x1, x8
    c358:	bl	df0c <gcc_cp_fe_context@@Base+0x45a0>
    c35c:	ldur	w8, [x29, #-4]
    c360:	ldp	x29, x30, [sp, #16]
    c364:	cmp	w0, #0x0
    c368:	csel	w0, wzr, w8, eq  // eq = none
    c36c:	add	sp, sp, #0x20
    c370:	ret
    c374:	sub	sp, sp, #0x40
    c378:	stp	x29, x30, [sp, #16]
    c37c:	stp	x22, x21, [sp, #32]
    c380:	stp	x20, x19, [sp, #48]
    c384:	add	x29, sp, #0x10
    c388:	mov	x22, x1
    c38c:	mov	w1, #0x51                  	// #81
    c390:	mov	x21, x3
    c394:	mov	x19, x2
    c398:	mov	x20, x0
    c39c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c3a0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3a4:	mov	x0, x20
    c3a8:	mov	x1, x22
    c3ac:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c3b0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3b4:	mov	w1, #0x1                   	// #1
    c3b8:	mov	x0, x20
    c3bc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c3c0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3c4:	mov	x0, x20
    c3c8:	mov	x1, x21
    c3cc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c3d0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3d4:	mov	w1, #0x1                   	// #1
    c3d8:	mov	x0, x20
    c3dc:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c3e0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3e4:	add	x1, sp, #0x8
    c3e8:	mov	x0, x20
    c3ec:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c3f0:	cbz	w0, c400 <gcc_cp_fe_context@@Base+0x2a94>
    c3f4:	ldr	x8, [sp, #8]
    c3f8:	mov	w0, #0x1                   	// #1
    c3fc:	str	w8, [x19]
    c400:	ldp	x20, x19, [sp, #48]
    c404:	ldp	x22, x21, [sp, #32]
    c408:	ldp	x29, x30, [sp, #16]
    c40c:	add	sp, sp, #0x40
    c410:	ret
    c414:	stp	x29, x30, [sp, #-64]!
    c418:	str	x23, [sp, #16]
    c41c:	stp	x22, x21, [sp, #32]
    c420:	stp	x20, x19, [sp, #48]
    c424:	mov	x29, sp
    c428:	mov	x23, x1
    c42c:	mov	w1, #0x51                  	// #81
    c430:	mov	x21, x4
    c434:	mov	x22, x3
    c438:	mov	x19, x2
    c43c:	mov	x20, x0
    c440:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c444:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c448:	mov	x0, x20
    c44c:	mov	x1, x23
    c450:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c454:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c458:	mov	w1, #0x2                   	// #2
    c45c:	mov	x0, x20
    c460:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c464:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c468:	mov	x0, x20
    c46c:	mov	x1, x22
    c470:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c474:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c478:	mov	x0, x20
    c47c:	mov	x1, x21
    c480:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c484:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c488:	mov	w1, #0x1                   	// #1
    c48c:	mov	x0, x20
    c490:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c494:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c498:	add	x1, x29, #0x18
    c49c:	mov	x0, x20
    c4a0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c4a4:	cbz	w0, c4b4 <gcc_cp_fe_context@@Base+0x2b48>
    c4a8:	ldr	x8, [x29, #24]
    c4ac:	mov	w0, #0x1                   	// #1
    c4b0:	str	w8, [x19]
    c4b4:	ldp	x20, x19, [sp, #48]
    c4b8:	ldp	x22, x21, [sp, #32]
    c4bc:	ldr	x23, [sp, #16]
    c4c0:	ldp	x29, x30, [sp], #64
    c4c4:	ret
    c4c8:	stp	x29, x30, [sp, #-64]!
    c4cc:	str	x23, [sp, #16]
    c4d0:	stp	x22, x21, [sp, #32]
    c4d4:	stp	x20, x19, [sp, #48]
    c4d8:	mov	x29, sp
    c4dc:	mov	x23, x1
    c4e0:	mov	w1, #0x51                  	// #81
    c4e4:	mov	x21, x4
    c4e8:	mov	x22, x3
    c4ec:	mov	x19, x2
    c4f0:	mov	x20, x0
    c4f4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c4f8:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c4fc:	mov	x0, x20
    c500:	mov	x1, x23
    c504:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c508:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c50c:	mov	w1, #0x2                   	// #2
    c510:	mov	x0, x20
    c514:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c518:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c51c:	mov	x0, x20
    c520:	mov	x1, x22
    c524:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c528:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c52c:	mov	x0, x20
    c530:	mov	x1, x21
    c534:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c538:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c53c:	mov	w1, #0x1                   	// #1
    c540:	mov	x0, x20
    c544:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c548:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c54c:	add	x1, x29, #0x18
    c550:	mov	x0, x20
    c554:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c558:	cbz	w0, c568 <gcc_cp_fe_context@@Base+0x2bfc>
    c55c:	ldr	x8, [x29, #24]
    c560:	mov	w0, #0x1                   	// #1
    c564:	str	w8, [x19]
    c568:	ldp	x20, x19, [sp, #48]
    c56c:	ldp	x22, x21, [sp, #32]
    c570:	ldr	x23, [sp, #16]
    c574:	ldp	x29, x30, [sp], #64
    c578:	ret
    c57c:	stp	x29, x30, [sp, #-64]!
    c580:	str	x23, [sp, #16]
    c584:	stp	x22, x21, [sp, #32]
    c588:	stp	x20, x19, [sp, #48]
    c58c:	mov	x29, sp
    c590:	mov	x23, x1
    c594:	mov	w1, #0x51                  	// #81
    c598:	mov	x21, x4
    c59c:	mov	w22, w3
    c5a0:	mov	x19, x2
    c5a4:	mov	x20, x0
    c5a8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c5ac:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c5b0:	mov	x0, x20
    c5b4:	mov	x1, x23
    c5b8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c5bc:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c5c0:	mov	w1, #0x2                   	// #2
    c5c4:	mov	x0, x20
    c5c8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c5cc:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c5d0:	mov	w1, w22
    c5d4:	mov	x0, x20
    c5d8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c5dc:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c5e0:	mov	x0, x20
    c5e4:	mov	x1, x21
    c5e8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c5ec:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c5f0:	mov	w1, #0x1                   	// #1
    c5f4:	mov	x0, x20
    c5f8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c5fc:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c600:	add	x1, x29, #0x18
    c604:	mov	x0, x20
    c608:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c60c:	cbz	w0, c61c <gcc_cp_fe_context@@Base+0x2cb0>
    c610:	ldr	x8, [x29, #24]
    c614:	mov	w0, #0x1                   	// #1
    c618:	str	w8, [x19]
    c61c:	ldp	x20, x19, [sp, #48]
    c620:	ldp	x22, x21, [sp, #32]
    c624:	ldr	x23, [sp, #16]
    c628:	ldp	x29, x30, [sp], #64
    c62c:	ret
    c630:	sub	sp, sp, #0x60
    c634:	stp	x29, x30, [sp, #16]
    c638:	stp	x26, x25, [sp, #32]
    c63c:	stp	x24, x23, [sp, #48]
    c640:	stp	x22, x21, [sp, #64]
    c644:	stp	x20, x19, [sp, #80]
    c648:	add	x29, sp, #0x10
    c64c:	mov	x26, x1
    c650:	mov	w1, #0x51                  	// #81
    c654:	mov	x21, x7
    c658:	mov	x22, x6
    c65c:	mov	x23, x5
    c660:	mov	w24, w4
    c664:	mov	x25, x3
    c668:	mov	x19, x2
    c66c:	mov	x20, x0
    c670:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c674:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c678:	mov	x0, x20
    c67c:	mov	x1, x26
    c680:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c684:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c688:	mov	w1, #0x7                   	// #7
    c68c:	mov	x0, x20
    c690:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c694:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c698:	mov	x0, x20
    c69c:	mov	x1, x25
    c6a0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c6a4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6a8:	mov	w1, w24
    c6ac:	mov	x0, x20
    c6b0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c6b4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6b8:	mov	x0, x20
    c6bc:	mov	x1, x23
    c6c0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c6c4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6c8:	mov	x0, x20
    c6cc:	mov	x1, x22
    c6d0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c6d4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6d8:	mov	x0, x20
    c6dc:	mov	x1, x21
    c6e0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c6e4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6e8:	ldr	x1, [x29, #80]
    c6ec:	mov	x0, x20
    c6f0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c6f4:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c6f8:	ldr	w8, [x29, #88]
    c6fc:	mov	x0, x20
    c700:	mov	w1, w8
    c704:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c708:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c70c:	mov	w1, #0x1                   	// #1
    c710:	mov	x0, x20
    c714:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c718:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c71c:	add	x1, sp, #0x8
    c720:	mov	x0, x20
    c724:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c728:	cbz	w0, c738 <gcc_cp_fe_context@@Base+0x2dcc>
    c72c:	ldr	x8, [sp, #8]
    c730:	mov	w0, #0x1                   	// #1
    c734:	str	x8, [x19]
    c738:	ldp	x20, x19, [sp, #80]
    c73c:	ldp	x22, x21, [sp, #64]
    c740:	ldp	x24, x23, [sp, #48]
    c744:	ldp	x26, x25, [sp, #32]
    c748:	ldp	x29, x30, [sp, #16]
    c74c:	add	sp, sp, #0x60
    c750:	ret
    c754:	sub	sp, sp, #0x50
    c758:	stp	x29, x30, [sp, #16]
    c75c:	stp	x24, x23, [sp, #32]
    c760:	stp	x22, x21, [sp, #48]
    c764:	stp	x20, x19, [sp, #64]
    c768:	add	x29, sp, #0x10
    c76c:	mov	x24, x1
    c770:	mov	w1, #0x51                  	// #81
    c774:	mov	x21, x5
    c778:	mov	x22, x4
    c77c:	mov	x23, x3
    c780:	mov	x19, x2
    c784:	mov	x20, x0
    c788:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c78c:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c790:	mov	x0, x20
    c794:	mov	x1, x24
    c798:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c79c:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7a0:	mov	w1, #0x3                   	// #3
    c7a4:	mov	x0, x20
    c7a8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c7ac:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7b0:	mov	x0, x20
    c7b4:	mov	x1, x23
    c7b8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c7bc:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7c0:	mov	x0, x20
    c7c4:	mov	x1, x22
    c7c8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c7cc:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7d0:	mov	x0, x20
    c7d4:	mov	x1, x21
    c7d8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c7dc:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7e0:	mov	w1, #0x1                   	// #1
    c7e4:	mov	x0, x20
    c7e8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c7ec:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c7f0:	add	x1, sp, #0x8
    c7f4:	mov	x0, x20
    c7f8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c7fc:	cbz	w0, c80c <gcc_cp_fe_context@@Base+0x2ea0>
    c800:	ldr	x8, [sp, #8]
    c804:	mov	w0, #0x1                   	// #1
    c808:	str	x8, [x19]
    c80c:	ldp	x20, x19, [sp, #64]
    c810:	ldp	x22, x21, [sp, #48]
    c814:	ldp	x24, x23, [sp, #32]
    c818:	ldp	x29, x30, [sp, #16]
    c81c:	add	sp, sp, #0x50
    c820:	ret
    c824:	stp	x29, x30, [sp, #-64]!
    c828:	str	x23, [sp, #16]
    c82c:	stp	x22, x21, [sp, #32]
    c830:	stp	x20, x19, [sp, #48]
    c834:	mov	x29, sp
    c838:	mov	x23, x1
    c83c:	mov	w1, #0x51                  	// #81
    c840:	mov	w21, w4
    c844:	mov	x22, x3
    c848:	mov	x19, x2
    c84c:	mov	x20, x0
    c850:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c854:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c858:	mov	x0, x20
    c85c:	mov	x1, x23
    c860:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c864:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c868:	mov	w1, #0x2                   	// #2
    c86c:	mov	x0, x20
    c870:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c874:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c878:	mov	x0, x20
    c87c:	mov	x1, x22
    c880:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c884:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c888:	mov	w1, w21
    c88c:	mov	x0, x20
    c890:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c894:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c898:	mov	w1, #0x1                   	// #1
    c89c:	mov	x0, x20
    c8a0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c8a4:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c8a8:	add	x1, x29, #0x18
    c8ac:	mov	x0, x20
    c8b0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c8b4:	cbz	w0, c8c4 <gcc_cp_fe_context@@Base+0x2f58>
    c8b8:	ldr	x8, [x29, #24]
    c8bc:	mov	w0, #0x1                   	// #1
    c8c0:	str	x8, [x19]
    c8c4:	ldp	x20, x19, [sp, #48]
    c8c8:	ldp	x22, x21, [sp, #32]
    c8cc:	ldr	x23, [sp, #16]
    c8d0:	ldp	x29, x30, [sp], #64
    c8d4:	ret
    c8d8:	stp	x29, x30, [sp, #-64]!
    c8dc:	str	x23, [sp, #16]
    c8e0:	stp	x22, x21, [sp, #32]
    c8e4:	stp	x20, x19, [sp, #48]
    c8e8:	mov	x29, sp
    c8ec:	mov	x23, x1
    c8f0:	mov	w1, #0x51                  	// #81
    c8f4:	mov	x21, x4
    c8f8:	mov	x22, x3
    c8fc:	mov	x19, x2
    c900:	mov	x20, x0
    c904:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c908:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c90c:	mov	x0, x20
    c910:	mov	x1, x23
    c914:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c918:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c91c:	mov	w1, #0x2                   	// #2
    c920:	mov	x0, x20
    c924:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c928:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c92c:	mov	x0, x20
    c930:	mov	x1, x22
    c934:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c938:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c93c:	mov	x0, x20
    c940:	mov	x1, x21
    c944:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c948:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c94c:	mov	w1, #0x1                   	// #1
    c950:	mov	x0, x20
    c954:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    c958:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c95c:	add	x1, x29, #0x18
    c960:	mov	x0, x20
    c964:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    c968:	cbz	w0, c978 <gcc_cp_fe_context@@Base+0x300c>
    c96c:	ldr	x8, [x29, #24]
    c970:	mov	w0, #0x1                   	// #1
    c974:	str	x8, [x19]
    c978:	ldp	x20, x19, [sp, #48]
    c97c:	ldp	x22, x21, [sp, #32]
    c980:	ldr	x23, [sp, #16]
    c984:	ldp	x29, x30, [sp], #64
    c988:	ret
    c98c:	sub	sp, sp, #0x60
    c990:	stp	x29, x30, [sp, #16]
    c994:	stp	x26, x25, [sp, #32]
    c998:	stp	x24, x23, [sp, #48]
    c99c:	stp	x22, x21, [sp, #64]
    c9a0:	stp	x20, x19, [sp, #80]
    c9a4:	add	x29, sp, #0x10
    c9a8:	mov	x26, x1
    c9ac:	mov	w1, #0x51                  	// #81
    c9b0:	mov	w21, w7
    c9b4:	mov	x22, x6
    c9b8:	mov	x23, x5
    c9bc:	mov	w24, w4
    c9c0:	mov	x25, x3
    c9c4:	mov	x19, x2
    c9c8:	mov	x20, x0
    c9cc:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    c9d0:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    c9d4:	mov	x0, x20
    c9d8:	mov	x1, x26
    c9dc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    c9e0:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    c9e4:	mov	w1, #0x5                   	// #5
    c9e8:	mov	x0, x20
    c9ec:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    c9f0:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    c9f4:	mov	x0, x20
    c9f8:	mov	x1, x25
    c9fc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    ca00:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca04:	sxtw	x1, w24
    ca08:	mov	x0, x20
    ca0c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ca10:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca14:	mov	x0, x20
    ca18:	mov	x1, x23
    ca1c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ca20:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca24:	mov	x0, x20
    ca28:	mov	x1, x22
    ca2c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    ca30:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca34:	mov	w1, w21
    ca38:	mov	x0, x20
    ca3c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ca40:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca44:	mov	w1, #0x1                   	// #1
    ca48:	mov	x0, x20
    ca4c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    ca50:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca54:	add	x1, sp, #0x8
    ca58:	mov	x0, x20
    ca5c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    ca60:	cbz	w0, ca70 <gcc_cp_fe_context@@Base+0x3104>
    ca64:	ldr	x8, [sp, #8]
    ca68:	mov	w0, #0x1                   	// #1
    ca6c:	str	x8, [x19]
    ca70:	ldp	x20, x19, [sp, #80]
    ca74:	ldp	x22, x21, [sp, #64]
    ca78:	ldp	x24, x23, [sp, #48]
    ca7c:	ldp	x26, x25, [sp, #32]
    ca80:	ldp	x29, x30, [sp, #16]
    ca84:	add	sp, sp, #0x60
    ca88:	ret
    ca8c:	sub	sp, sp, #0x60
    ca90:	stp	x29, x30, [sp, #16]
    ca94:	stp	x26, x25, [sp, #32]
    ca98:	stp	x24, x23, [sp, #48]
    ca9c:	stp	x22, x21, [sp, #64]
    caa0:	stp	x20, x19, [sp, #80]
    caa4:	add	x29, sp, #0x10
    caa8:	mov	x26, x1
    caac:	mov	w1, #0x51                  	// #81
    cab0:	mov	w21, w7
    cab4:	mov	x22, x6
    cab8:	mov	x23, x5
    cabc:	mov	x24, x4
    cac0:	mov	x25, x3
    cac4:	mov	x19, x2
    cac8:	mov	x20, x0
    cacc:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    cad0:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cad4:	mov	x0, x20
    cad8:	mov	x1, x26
    cadc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cae0:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cae4:	mov	w1, #0x5                   	// #5
    cae8:	mov	x0, x20
    caec:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    caf0:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    caf4:	mov	x0, x20
    caf8:	mov	x1, x25
    cafc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cb00:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb04:	mov	x0, x20
    cb08:	mov	x1, x24
    cb0c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cb10:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb14:	mov	x0, x20
    cb18:	mov	x1, x23
    cb1c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cb20:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb24:	mov	x0, x20
    cb28:	mov	x1, x22
    cb2c:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cb30:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb34:	mov	w1, w21
    cb38:	mov	x0, x20
    cb3c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cb40:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb44:	mov	w1, #0x1                   	// #1
    cb48:	mov	x0, x20
    cb4c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    cb50:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb54:	add	x1, sp, #0x8
    cb58:	mov	x0, x20
    cb5c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    cb60:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3204>
    cb64:	ldr	x8, [sp, #8]
    cb68:	mov	w0, #0x1                   	// #1
    cb6c:	str	x8, [x19]
    cb70:	ldp	x20, x19, [sp, #80]
    cb74:	ldp	x22, x21, [sp, #64]
    cb78:	ldp	x24, x23, [sp, #48]
    cb7c:	ldp	x26, x25, [sp, #32]
    cb80:	ldp	x29, x30, [sp, #16]
    cb84:	add	sp, sp, #0x60
    cb88:	ret
    cb8c:	sub	sp, sp, #0x50
    cb90:	stp	x29, x30, [sp, #16]
    cb94:	stp	x24, x23, [sp, #32]
    cb98:	stp	x22, x21, [sp, #48]
    cb9c:	stp	x20, x19, [sp, #64]
    cba0:	add	x29, sp, #0x10
    cba4:	mov	x24, x1
    cba8:	mov	w1, #0x51                  	// #81
    cbac:	mov	x21, x5
    cbb0:	mov	x22, x4
    cbb4:	mov	x23, x3
    cbb8:	mov	x19, x2
    cbbc:	mov	x20, x0
    cbc0:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    cbc4:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cbc8:	mov	x0, x20
    cbcc:	mov	x1, x24
    cbd0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cbd4:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cbd8:	mov	w1, #0x3                   	// #3
    cbdc:	mov	x0, x20
    cbe0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cbe4:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cbe8:	mov	x0, x20
    cbec:	mov	x1, x23
    cbf0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cbf4:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cbf8:	mov	x0, x20
    cbfc:	mov	x1, x22
    cc00:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cc04:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cc08:	cbz	x21, cc14 <gcc_cp_fe_context@@Base+0x32a8>
    cc0c:	ldrsw	x22, [x21]
    cc10:	b	cc18 <gcc_cp_fe_context@@Base+0x32ac>
    cc14:	mov	x22, #0xffffffffffffffff    	// #-1
    cc18:	mov	w1, #0x74                  	// #116
    cc1c:	mov	x0, x20
    cc20:	mov	x2, x22
    cc24:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    cc28:	cmp	w0, #0x0
    cc2c:	mov	w8, w0
    cc30:	cset	w0, ne  // ne = any
    cc34:	cbz	w8, cc60 <gcc_cp_fe_context@@Base+0x32f4>
    cc38:	cbz	x21, cc60 <gcc_cp_fe_context@@Base+0x32f4>
    cc3c:	ldr	x2, [x21, #8]
    cc40:	mov	x0, x20
    cc44:	mov	x1, x22
    cc48:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    cc4c:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cc50:	ldr	x2, [x21, #16]
    cc54:	lsl	x1, x22, #3
    cc58:	mov	x0, x20
    cc5c:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    cc60:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cc64:	mov	w1, #0x1                   	// #1
    cc68:	mov	x0, x20
    cc6c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    cc70:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cc74:	add	x1, sp, #0x8
    cc78:	mov	x0, x20
    cc7c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    cc80:	cbz	w0, cc90 <gcc_cp_fe_context@@Base+0x3324>
    cc84:	ldr	x8, [sp, #8]
    cc88:	mov	w0, #0x1                   	// #1
    cc8c:	str	x8, [x19]
    cc90:	ldp	x20, x19, [sp, #64]
    cc94:	ldp	x22, x21, [sp, #48]
    cc98:	ldp	x24, x23, [sp, #32]
    cc9c:	ldp	x29, x30, [sp, #16]
    cca0:	add	sp, sp, #0x50
    cca4:	ret
    cca8:	stp	x29, x30, [sp, #-64]!
    ccac:	str	x23, [sp, #16]
    ccb0:	stp	x22, x21, [sp, #32]
    ccb4:	stp	x20, x19, [sp, #48]
    ccb8:	mov	x29, sp
    ccbc:	mov	x23, x1
    ccc0:	mov	w1, #0x51                  	// #81
    ccc4:	mov	x21, x4
    ccc8:	mov	x22, x3
    cccc:	mov	x19, x2
    ccd0:	mov	x20, x0
    ccd4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    ccd8:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    ccdc:	mov	x0, x20
    cce0:	mov	x1, x23
    cce4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cce8:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    ccec:	mov	w1, #0x2                   	// #2
    ccf0:	mov	x0, x20
    ccf4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ccf8:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    ccfc:	mov	x0, x20
    cd00:	mov	x1, x22
    cd04:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cd08:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    cd0c:	cbz	x21, cd18 <gcc_cp_fe_context@@Base+0x33ac>
    cd10:	ldrsw	x22, [x21]
    cd14:	b	cd1c <gcc_cp_fe_context@@Base+0x33b0>
    cd18:	mov	x22, #0xffffffffffffffff    	// #-1
    cd1c:	mov	w1, #0x74                  	// #116
    cd20:	mov	x0, x20
    cd24:	mov	x2, x22
    cd28:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    cd2c:	cmp	w0, #0x0
    cd30:	mov	w8, w0
    cd34:	cset	w0, ne  // ne = any
    cd38:	cbz	w8, cd64 <gcc_cp_fe_context@@Base+0x33f8>
    cd3c:	cbz	x21, cd64 <gcc_cp_fe_context@@Base+0x33f8>
    cd40:	ldr	x2, [x21, #8]
    cd44:	mov	x0, x20
    cd48:	mov	x1, x22
    cd4c:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    cd50:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    cd54:	ldr	x2, [x21, #16]
    cd58:	lsl	x1, x22, #3
    cd5c:	mov	x0, x20
    cd60:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    cd64:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    cd68:	mov	w1, #0x1                   	// #1
    cd6c:	mov	x0, x20
    cd70:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    cd74:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    cd78:	add	x1, x29, #0x18
    cd7c:	mov	x0, x20
    cd80:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    cd84:	cbz	w0, cd94 <gcc_cp_fe_context@@Base+0x3428>
    cd88:	ldr	x8, [x29, #24]
    cd8c:	mov	w0, #0x1                   	// #1
    cd90:	str	x8, [x19]
    cd94:	ldp	x20, x19, [sp, #48]
    cd98:	ldp	x22, x21, [sp, #32]
    cd9c:	ldr	x23, [sp, #16]
    cda0:	ldp	x29, x30, [sp], #64
    cda4:	ret
    cda8:	sub	sp, sp, #0x60
    cdac:	stp	x29, x30, [sp, #16]
    cdb0:	stp	x26, x25, [sp, #32]
    cdb4:	stp	x24, x23, [sp, #48]
    cdb8:	stp	x22, x21, [sp, #64]
    cdbc:	stp	x20, x19, [sp, #80]
    cdc0:	add	x29, sp, #0x10
    cdc4:	mov	x26, x1
    cdc8:	mov	w1, #0x51                  	// #81
    cdcc:	mov	x21, x7
    cdd0:	mov	x22, x6
    cdd4:	mov	x23, x5
    cdd8:	mov	w24, w4
    cddc:	mov	x25, x3
    cde0:	mov	x19, x2
    cde4:	mov	x20, x0
    cde8:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    cdec:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    cdf0:	mov	x0, x20
    cdf4:	mov	x1, x26
    cdf8:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cdfc:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce00:	mov	w1, #0x5                   	// #5
    ce04:	mov	x0, x20
    ce08:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ce0c:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce10:	mov	x0, x20
    ce14:	mov	x1, x25
    ce18:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ce1c:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce20:	mov	w1, w24
    ce24:	mov	x0, x20
    ce28:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ce2c:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce30:	mov	x0, x20
    ce34:	mov	x1, x23
    ce38:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    ce3c:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce40:	mov	x0, x20
    ce44:	mov	x1, x22
    ce48:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ce4c:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce50:	cbz	x21, ce5c <gcc_cp_fe_context@@Base+0x34f0>
    ce54:	ldrsw	x22, [x21]
    ce58:	b	ce60 <gcc_cp_fe_context@@Base+0x34f4>
    ce5c:	mov	x22, #0xffffffffffffffff    	// #-1
    ce60:	mov	w1, #0x74                  	// #116
    ce64:	mov	x0, x20
    ce68:	mov	x2, x22
    ce6c:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    ce70:	cmp	w0, #0x0
    ce74:	mov	w8, w0
    ce78:	cset	w0, ne  // ne = any
    ce7c:	cbz	w8, cea8 <gcc_cp_fe_context@@Base+0x353c>
    ce80:	cbz	x21, cea8 <gcc_cp_fe_context@@Base+0x353c>
    ce84:	ldr	x2, [x21, #8]
    ce88:	mov	x0, x20
    ce8c:	mov	x1, x22
    ce90:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    ce94:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ce98:	ldr	x2, [x21, #16]
    ce9c:	lsl	x1, x22, #3
    cea0:	mov	x0, x20
    cea4:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    cea8:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    ceac:	mov	w1, #0x1                   	// #1
    ceb0:	mov	x0, x20
    ceb4:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    ceb8:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    cebc:	add	x1, sp, #0x8
    cec0:	mov	x0, x20
    cec4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    cec8:	cbz	w0, ced8 <gcc_cp_fe_context@@Base+0x356c>
    cecc:	ldr	x8, [sp, #8]
    ced0:	mov	w0, #0x1                   	// #1
    ced4:	str	x8, [x19]
    ced8:	ldp	x20, x19, [sp, #80]
    cedc:	ldp	x22, x21, [sp, #64]
    cee0:	ldp	x24, x23, [sp, #48]
    cee4:	ldp	x26, x25, [sp, #32]
    cee8:	ldp	x29, x30, [sp, #16]
    ceec:	add	sp, sp, #0x60
    cef0:	ret
    cef4:	stp	x29, x30, [sp, #-64]!
    cef8:	str	x23, [sp, #16]
    cefc:	stp	x22, x21, [sp, #32]
    cf00:	stp	x20, x19, [sp, #48]
    cf04:	mov	x29, sp
    cf08:	mov	x23, x1
    cf0c:	mov	w1, #0x51                  	// #81
    cf10:	mov	x21, x4
    cf14:	mov	x22, x3
    cf18:	mov	x19, x2
    cf1c:	mov	x20, x0
    cf20:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    cf24:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf28:	mov	x0, x20
    cf2c:	mov	x1, x23
    cf30:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cf34:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf38:	mov	w1, #0x2                   	// #2
    cf3c:	mov	x0, x20
    cf40:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cf44:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf48:	mov	x0, x20
    cf4c:	mov	x1, x22
    cf50:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cf54:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf58:	mov	x0, x20
    cf5c:	mov	x1, x21
    cf60:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cf64:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf68:	mov	w1, #0x1                   	// #1
    cf6c:	mov	x0, x20
    cf70:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    cf74:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf78:	add	x1, x29, #0x18
    cf7c:	mov	x0, x20
    cf80:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    cf84:	cbz	w0, cf94 <gcc_cp_fe_context@@Base+0x3628>
    cf88:	ldr	x8, [x29, #24]
    cf8c:	mov	w0, #0x1                   	// #1
    cf90:	str	x8, [x19]
    cf94:	ldp	x20, x19, [sp, #48]
    cf98:	ldp	x22, x21, [sp, #32]
    cf9c:	ldr	x23, [sp, #16]
    cfa0:	ldp	x29, x30, [sp], #64
    cfa4:	ret
    cfa8:	stp	x29, x30, [sp, #-64]!
    cfac:	str	x23, [sp, #16]
    cfb0:	stp	x22, x21, [sp, #32]
    cfb4:	stp	x20, x19, [sp, #48]
    cfb8:	mov	x29, sp
    cfbc:	mov	x23, x1
    cfc0:	mov	w1, #0x51                  	// #81
    cfc4:	mov	x21, x4
    cfc8:	mov	x22, x3
    cfcc:	mov	x19, x2
    cfd0:	mov	x20, x0
    cfd4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    cfd8:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    cfdc:	mov	x0, x20
    cfe0:	mov	x1, x23
    cfe4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    cfe8:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    cfec:	mov	w1, #0x2                   	// #2
    cff0:	mov	x0, x20
    cff4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    cff8:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    cffc:	mov	x0, x20
    d000:	mov	x1, x22
    d004:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d008:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    d00c:	mov	x0, x20
    d010:	mov	x1, x21
    d014:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d018:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    d01c:	mov	w1, #0x1                   	// #1
    d020:	mov	x0, x20
    d024:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d028:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    d02c:	add	x1, x29, #0x18
    d030:	mov	x0, x20
    d034:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d038:	cbz	w0, d048 <gcc_cp_fe_context@@Base+0x36dc>
    d03c:	ldr	x8, [x29, #24]
    d040:	mov	w0, #0x1                   	// #1
    d044:	str	x8, [x19]
    d048:	ldp	x20, x19, [sp, #48]
    d04c:	ldp	x22, x21, [sp, #32]
    d050:	ldr	x23, [sp, #16]
    d054:	ldp	x29, x30, [sp], #64
    d058:	ret
    d05c:	stp	x29, x30, [sp, #-80]!
    d060:	str	x25, [sp, #16]
    d064:	stp	x24, x23, [sp, #32]
    d068:	stp	x22, x21, [sp, #48]
    d06c:	stp	x20, x19, [sp, #64]
    d070:	mov	x29, sp
    d074:	mov	x25, x1
    d078:	mov	w1, #0x51                  	// #81
    d07c:	mov	x21, x6
    d080:	mov	x22, x5
    d084:	mov	x23, x4
    d088:	mov	x24, x3
    d08c:	mov	x19, x2
    d090:	mov	x20, x0
    d094:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d098:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d09c:	mov	x0, x20
    d0a0:	mov	x1, x25
    d0a4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d0a8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0ac:	mov	w1, #0x4                   	// #4
    d0b0:	mov	x0, x20
    d0b4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d0b8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0bc:	mov	x0, x20
    d0c0:	mov	x1, x24
    d0c4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d0c8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0cc:	mov	x0, x20
    d0d0:	mov	x1, x23
    d0d4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d0d8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0dc:	mov	x0, x20
    d0e0:	mov	x1, x22
    d0e4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d0e8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0ec:	mov	x0, x20
    d0f0:	mov	x1, x21
    d0f4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d0f8:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d0fc:	mov	w1, #0x1                   	// #1
    d100:	mov	x0, x20
    d104:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d108:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d10c:	add	x1, x29, #0x18
    d110:	mov	x0, x20
    d114:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d118:	cbz	w0, d128 <gcc_cp_fe_context@@Base+0x37bc>
    d11c:	ldr	x8, [x29, #24]
    d120:	mov	w0, #0x1                   	// #1
    d124:	str	x8, [x19]
    d128:	ldp	x20, x19, [sp, #64]
    d12c:	ldp	x22, x21, [sp, #48]
    d130:	ldp	x24, x23, [sp, #32]
    d134:	ldr	x25, [sp, #16]
    d138:	ldp	x29, x30, [sp], #80
    d13c:	ret
    d140:	sub	sp, sp, #0x50
    d144:	stp	x29, x30, [sp, #16]
    d148:	stp	x24, x23, [sp, #32]
    d14c:	stp	x22, x21, [sp, #48]
    d150:	stp	x20, x19, [sp, #64]
    d154:	add	x29, sp, #0x10
    d158:	mov	x24, x1
    d15c:	mov	w1, #0x51                  	// #81
    d160:	mov	x21, x5
    d164:	mov	x22, x4
    d168:	mov	x23, x3
    d16c:	mov	x19, x2
    d170:	mov	x20, x0
    d174:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d178:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d17c:	mov	x0, x20
    d180:	mov	x1, x24
    d184:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d188:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d18c:	mov	w1, #0x3                   	// #3
    d190:	mov	x0, x20
    d194:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d198:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d19c:	mov	x0, x20
    d1a0:	mov	x1, x23
    d1a4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d1a8:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d1ac:	mov	x0, x20
    d1b0:	mov	x1, x22
    d1b4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d1b8:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d1bc:	cbz	x21, d1c8 <gcc_cp_fe_context@@Base+0x385c>
    d1c0:	ldrsw	x22, [x21]
    d1c4:	b	d1cc <gcc_cp_fe_context@@Base+0x3860>
    d1c8:	mov	x22, #0xffffffffffffffff    	// #-1
    d1cc:	mov	w1, #0x64                  	// #100
    d1d0:	mov	x0, x20
    d1d4:	mov	x2, x22
    d1d8:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d1dc:	cmp	w0, #0x0
    d1e0:	mov	w8, w0
    d1e4:	cset	w0, ne  // ne = any
    d1e8:	cbz	w8, d200 <gcc_cp_fe_context@@Base+0x3894>
    d1ec:	cbz	x21, d200 <gcc_cp_fe_context@@Base+0x3894>
    d1f0:	ldr	x2, [x21, #8]
    d1f4:	lsl	x1, x22, #3
    d1f8:	mov	x0, x20
    d1fc:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d200:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d204:	mov	w1, #0x1                   	// #1
    d208:	mov	x0, x20
    d20c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d210:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d214:	add	x1, sp, #0x8
    d218:	mov	x0, x20
    d21c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d220:	cbz	w0, d230 <gcc_cp_fe_context@@Base+0x38c4>
    d224:	ldr	x8, [sp, #8]
    d228:	mov	w0, #0x1                   	// #1
    d22c:	str	x8, [x19]
    d230:	ldp	x20, x19, [sp, #64]
    d234:	ldp	x22, x21, [sp, #48]
    d238:	ldp	x24, x23, [sp, #32]
    d23c:	ldp	x29, x30, [sp, #16]
    d240:	add	sp, sp, #0x50
    d244:	ret
    d248:	stp	x29, x30, [sp, #-80]!
    d24c:	str	x25, [sp, #16]
    d250:	stp	x24, x23, [sp, #32]
    d254:	stp	x22, x21, [sp, #48]
    d258:	stp	x20, x19, [sp, #64]
    d25c:	mov	x29, sp
    d260:	mov	x25, x1
    d264:	mov	w1, #0x51                  	// #81
    d268:	mov	x21, x6
    d26c:	mov	x22, x5
    d270:	mov	x23, x4
    d274:	mov	x24, x3
    d278:	mov	x19, x2
    d27c:	mov	x20, x0
    d280:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d284:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d288:	mov	x0, x20
    d28c:	mov	x1, x25
    d290:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d294:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d298:	mov	w1, #0x4                   	// #4
    d29c:	mov	x0, x20
    d2a0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d2a4:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d2a8:	mov	x0, x20
    d2ac:	mov	x1, x24
    d2b0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d2b4:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d2b8:	cbz	x23, d2c4 <gcc_cp_fe_context@@Base+0x3958>
    d2bc:	ldrsw	x24, [x23]
    d2c0:	b	d2c8 <gcc_cp_fe_context@@Base+0x395c>
    d2c4:	mov	x24, #0xffffffffffffffff    	// #-1
    d2c8:	mov	w1, #0x64                  	// #100
    d2cc:	mov	x0, x20
    d2d0:	mov	x2, x24
    d2d4:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d2d8:	cmp	w0, #0x0
    d2dc:	mov	w8, w0
    d2e0:	cset	w0, ne  // ne = any
    d2e4:	cbz	w8, d2fc <gcc_cp_fe_context@@Base+0x3990>
    d2e8:	cbz	x23, d2fc <gcc_cp_fe_context@@Base+0x3990>
    d2ec:	ldr	x2, [x23, #8]
    d2f0:	lsl	x1, x24, #3
    d2f4:	mov	x0, x20
    d2f8:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d2fc:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d300:	mov	x0, x20
    d304:	mov	x1, x22
    d308:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d30c:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d310:	cbz	x21, d31c <gcc_cp_fe_context@@Base+0x39b0>
    d314:	ldrsw	x22, [x21]
    d318:	b	d320 <gcc_cp_fe_context@@Base+0x39b4>
    d31c:	mov	x22, #0xffffffffffffffff    	// #-1
    d320:	mov	w1, #0x64                  	// #100
    d324:	mov	x0, x20
    d328:	mov	x2, x22
    d32c:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d330:	cmp	w0, #0x0
    d334:	mov	w8, w0
    d338:	cset	w0, ne  // ne = any
    d33c:	cbz	w8, d354 <gcc_cp_fe_context@@Base+0x39e8>
    d340:	cbz	x21, d354 <gcc_cp_fe_context@@Base+0x39e8>
    d344:	ldr	x2, [x21, #8]
    d348:	lsl	x1, x22, #3
    d34c:	mov	x0, x20
    d350:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d354:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d358:	mov	w1, #0x1                   	// #1
    d35c:	mov	x0, x20
    d360:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d364:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d368:	add	x1, x29, #0x18
    d36c:	mov	x0, x20
    d370:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d374:	cbz	w0, d384 <gcc_cp_fe_context@@Base+0x3a18>
    d378:	ldr	x8, [x29, #24]
    d37c:	mov	w0, #0x1                   	// #1
    d380:	str	x8, [x19]
    d384:	ldp	x20, x19, [sp, #64]
    d388:	ldp	x22, x21, [sp, #48]
    d38c:	ldp	x24, x23, [sp, #32]
    d390:	ldr	x25, [sp, #16]
    d394:	ldp	x29, x30, [sp], #80
    d398:	ret
    d39c:	sub	sp, sp, #0x50
    d3a0:	stp	x29, x30, [sp, #16]
    d3a4:	stp	x24, x23, [sp, #32]
    d3a8:	stp	x22, x21, [sp, #48]
    d3ac:	stp	x20, x19, [sp, #64]
    d3b0:	add	x29, sp, #0x10
    d3b4:	mov	x24, x1
    d3b8:	mov	w1, #0x51                  	// #81
    d3bc:	mov	x21, x5
    d3c0:	mov	w22, w4
    d3c4:	mov	x23, x3
    d3c8:	mov	x19, x2
    d3cc:	mov	x20, x0
    d3d0:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d3d4:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d3d8:	mov	x0, x20
    d3dc:	mov	x1, x24
    d3e0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d3e4:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d3e8:	mov	w1, #0x3                   	// #3
    d3ec:	mov	x0, x20
    d3f0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d3f4:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d3f8:	mov	x0, x20
    d3fc:	mov	x1, x23
    d400:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d404:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d408:	sxtw	x1, w22
    d40c:	mov	x0, x20
    d410:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d414:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d418:	cbz	x21, d424 <gcc_cp_fe_context@@Base+0x3ab8>
    d41c:	ldrsw	x22, [x21]
    d420:	b	d428 <gcc_cp_fe_context@@Base+0x3abc>
    d424:	mov	x22, #0xffffffffffffffff    	// #-1
    d428:	mov	w1, #0x64                  	// #100
    d42c:	mov	x0, x20
    d430:	mov	x2, x22
    d434:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d438:	cmp	w0, #0x0
    d43c:	mov	w8, w0
    d440:	cset	w0, ne  // ne = any
    d444:	cbz	w8, d45c <gcc_cp_fe_context@@Base+0x3af0>
    d448:	cbz	x21, d45c <gcc_cp_fe_context@@Base+0x3af0>
    d44c:	ldr	x2, [x21, #8]
    d450:	lsl	x1, x22, #3
    d454:	mov	x0, x20
    d458:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d45c:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d460:	mov	w1, #0x1                   	// #1
    d464:	mov	x0, x20
    d468:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d46c:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d470:	add	x1, sp, #0x8
    d474:	mov	x0, x20
    d478:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d47c:	cbz	w0, d48c <gcc_cp_fe_context@@Base+0x3b20>
    d480:	ldr	x8, [sp, #8]
    d484:	mov	w0, #0x1                   	// #1
    d488:	str	x8, [x19]
    d48c:	ldp	x20, x19, [sp, #64]
    d490:	ldp	x22, x21, [sp, #48]
    d494:	ldp	x24, x23, [sp, #32]
    d498:	ldp	x29, x30, [sp, #16]
    d49c:	add	sp, sp, #0x50
    d4a0:	ret
    d4a4:	sub	sp, sp, #0x60
    d4a8:	stp	x29, x30, [sp, #16]
    d4ac:	stp	x26, x25, [sp, #32]
    d4b0:	stp	x24, x23, [sp, #48]
    d4b4:	stp	x22, x21, [sp, #64]
    d4b8:	stp	x20, x19, [sp, #80]
    d4bc:	add	x29, sp, #0x10
    d4c0:	mov	x26, x1
    d4c4:	mov	w1, #0x51                  	// #81
    d4c8:	mov	w21, w7
    d4cc:	mov	x22, x6
    d4d0:	mov	x23, x5
    d4d4:	mov	x24, x4
    d4d8:	mov	x25, x3
    d4dc:	mov	x19, x2
    d4e0:	mov	x20, x0
    d4e4:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d4e8:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d4ec:	mov	x0, x20
    d4f0:	mov	x1, x26
    d4f4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d4f8:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d4fc:	mov	w1, #0x5                   	// #5
    d500:	mov	x0, x20
    d504:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d508:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d50c:	mov	x0, x20
    d510:	mov	x1, x25
    d514:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d518:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d51c:	cbz	x24, d528 <gcc_cp_fe_context@@Base+0x3bbc>
    d520:	ldrsw	x25, [x24]
    d524:	b	d52c <gcc_cp_fe_context@@Base+0x3bc0>
    d528:	mov	x25, #0xffffffffffffffff    	// #-1
    d52c:	mov	w1, #0x74                  	// #116
    d530:	mov	x0, x20
    d534:	mov	x2, x25
    d538:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d53c:	cmp	w0, #0x0
    d540:	mov	w8, w0
    d544:	cset	w0, ne  // ne = any
    d548:	cbz	w8, d574 <gcc_cp_fe_context@@Base+0x3c08>
    d54c:	cbz	x24, d574 <gcc_cp_fe_context@@Base+0x3c08>
    d550:	ldr	x2, [x24, #8]
    d554:	mov	x0, x20
    d558:	mov	x1, x25
    d55c:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d560:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d564:	ldr	x2, [x24, #16]
    d568:	lsl	x1, x25, #3
    d56c:	mov	x0, x20
    d570:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d574:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d578:	mov	x0, x20
    d57c:	mov	x1, x23
    d580:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d584:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d588:	mov	x0, x20
    d58c:	mov	x1, x22
    d590:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d594:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d598:	mov	w1, w21
    d59c:	mov	x0, x20
    d5a0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d5a4:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d5a8:	mov	w1, #0x1                   	// #1
    d5ac:	mov	x0, x20
    d5b0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d5b4:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d5b8:	add	x1, sp, #0x8
    d5bc:	mov	x0, x20
    d5c0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d5c4:	cbz	w0, d5d4 <gcc_cp_fe_context@@Base+0x3c68>
    d5c8:	ldr	x8, [sp, #8]
    d5cc:	mov	w0, #0x1                   	// #1
    d5d0:	str	x8, [x19]
    d5d4:	ldp	x20, x19, [sp, #80]
    d5d8:	ldp	x22, x21, [sp, #64]
    d5dc:	ldp	x24, x23, [sp, #48]
    d5e0:	ldp	x26, x25, [sp, #32]
    d5e4:	ldp	x29, x30, [sp, #16]
    d5e8:	add	sp, sp, #0x60
    d5ec:	ret
    d5f0:	stp	x29, x30, [sp, #-80]!
    d5f4:	str	x25, [sp, #16]
    d5f8:	stp	x24, x23, [sp, #32]
    d5fc:	stp	x22, x21, [sp, #48]
    d600:	stp	x20, x19, [sp, #64]
    d604:	mov	x29, sp
    d608:	mov	x25, x1
    d60c:	mov	w1, #0x51                  	// #81
    d610:	mov	w21, w6
    d614:	mov	x22, x5
    d618:	mov	x23, x4
    d61c:	mov	x24, x3
    d620:	mov	x19, x2
    d624:	mov	x20, x0
    d628:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d62c:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d630:	mov	x0, x20
    d634:	mov	x1, x25
    d638:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d63c:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d640:	mov	w1, #0x4                   	// #4
    d644:	mov	x0, x20
    d648:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d64c:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d650:	mov	x0, x20
    d654:	mov	x1, x24
    d658:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d65c:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d660:	cbz	x23, d66c <gcc_cp_fe_context@@Base+0x3d00>
    d664:	ldrsw	x24, [x23]
    d668:	b	d670 <gcc_cp_fe_context@@Base+0x3d04>
    d66c:	mov	x24, #0xffffffffffffffff    	// #-1
    d670:	mov	w1, #0x74                  	// #116
    d674:	mov	x0, x20
    d678:	mov	x2, x24
    d67c:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d680:	cmp	w0, #0x0
    d684:	mov	w8, w0
    d688:	cset	w0, ne  // ne = any
    d68c:	cbz	w8, d6b8 <gcc_cp_fe_context@@Base+0x3d4c>
    d690:	cbz	x23, d6b8 <gcc_cp_fe_context@@Base+0x3d4c>
    d694:	ldr	x2, [x23, #8]
    d698:	mov	x0, x20
    d69c:	mov	x1, x24
    d6a0:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d6a4:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6a8:	ldr	x2, [x23, #16]
    d6ac:	lsl	x1, x24, #3
    d6b0:	mov	x0, x20
    d6b4:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d6b8:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6bc:	mov	x0, x20
    d6c0:	mov	x1, x22
    d6c4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d6c8:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6cc:	mov	w1, w21
    d6d0:	mov	x0, x20
    d6d4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d6d8:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6dc:	mov	w1, #0x1                   	// #1
    d6e0:	mov	x0, x20
    d6e4:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d6e8:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6ec:	add	x1, x29, #0x18
    d6f0:	mov	x0, x20
    d6f4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d6f8:	cbz	w0, d708 <gcc_cp_fe_context@@Base+0x3d9c>
    d6fc:	ldr	x8, [x29, #24]
    d700:	mov	w0, #0x1                   	// #1
    d704:	str	x8, [x19]
    d708:	ldp	x20, x19, [sp, #64]
    d70c:	ldp	x22, x21, [sp, #48]
    d710:	ldp	x24, x23, [sp, #32]
    d714:	ldr	x25, [sp, #16]
    d718:	ldp	x29, x30, [sp], #80
    d71c:	ret
    d720:	stp	x29, x30, [sp, #-80]!
    d724:	str	x25, [sp, #16]
    d728:	stp	x24, x23, [sp, #32]
    d72c:	stp	x22, x21, [sp, #48]
    d730:	stp	x20, x19, [sp, #64]
    d734:	mov	x29, sp
    d738:	mov	x25, x1
    d73c:	mov	w1, #0x51                  	// #81
    d740:	mov	w21, w6
    d744:	mov	x22, x5
    d748:	mov	x23, x4
    d74c:	mov	x24, x3
    d750:	mov	x19, x2
    d754:	mov	x20, x0
    d758:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d75c:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d760:	mov	x0, x20
    d764:	mov	x1, x25
    d768:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d76c:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d770:	mov	w1, #0x4                   	// #4
    d774:	mov	x0, x20
    d778:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d77c:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d780:	mov	x0, x20
    d784:	mov	x1, x24
    d788:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d78c:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d790:	cbz	x23, d79c <gcc_cp_fe_context@@Base+0x3e30>
    d794:	ldrsw	x24, [x23]
    d798:	b	d7a0 <gcc_cp_fe_context@@Base+0x3e34>
    d79c:	mov	x24, #0xffffffffffffffff    	// #-1
    d7a0:	mov	w1, #0x76                  	// #118
    d7a4:	mov	x0, x20
    d7a8:	mov	x2, x24
    d7ac:	bl	e630 <gcc_cp_fe_context@@Base+0x4cc4>
    d7b0:	cmp	w0, #0x0
    d7b4:	mov	w8, w0
    d7b8:	cset	w0, ne  // ne = any
    d7bc:	cbz	w8, d7e8 <gcc_cp_fe_context@@Base+0x3e7c>
    d7c0:	cbz	x23, d7e8 <gcc_cp_fe_context@@Base+0x3e7c>
    d7c4:	ldr	x2, [x23, #8]
    d7c8:	lsl	x1, x24, #3
    d7cc:	mov	x0, x20
    d7d0:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d7d4:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d7d8:	ldr	x2, [x23, #16]
    d7dc:	lsl	x1, x24, #2
    d7e0:	mov	x0, x20
    d7e4:	bl	e67c <gcc_cp_fe_context@@Base+0x4d10>
    d7e8:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d7ec:	mov	x0, x20
    d7f0:	mov	x1, x22
    d7f4:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d7f8:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d7fc:	mov	w1, w21
    d800:	mov	x0, x20
    d804:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d808:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d80c:	mov	w1, #0x1                   	// #1
    d810:	mov	x0, x20
    d814:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d818:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d81c:	add	x1, x29, #0x18
    d820:	mov	x0, x20
    d824:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d828:	cbz	w0, d838 <gcc_cp_fe_context@@Base+0x3ecc>
    d82c:	ldr	x8, [x29, #24]
    d830:	mov	w0, #0x1                   	// #1
    d834:	str	x8, [x19]
    d838:	ldp	x20, x19, [sp, #64]
    d83c:	ldp	x22, x21, [sp, #48]
    d840:	ldp	x24, x23, [sp, #32]
    d844:	ldr	x25, [sp, #16]
    d848:	ldp	x29, x30, [sp], #80
    d84c:	ret
    d850:	sub	sp, sp, #0x60
    d854:	stp	x29, x30, [sp, #16]
    d858:	stp	x26, x25, [sp, #32]
    d85c:	stp	x24, x23, [sp, #48]
    d860:	stp	x22, x21, [sp, #64]
    d864:	stp	x20, x19, [sp, #80]
    d868:	add	x29, sp, #0x10
    d86c:	mov	x26, x1
    d870:	mov	w1, #0x51                  	// #81
    d874:	mov	w21, w7
    d878:	mov	x22, x6
    d87c:	mov	w23, w5
    d880:	mov	x24, x4
    d884:	mov	w25, w3
    d888:	mov	x19, x2
    d88c:	mov	x20, x0
    d890:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d894:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d898:	mov	x0, x20
    d89c:	mov	x1, x26
    d8a0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d8a4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8a8:	mov	w1, #0x5                   	// #5
    d8ac:	mov	x0, x20
    d8b0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d8b4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8b8:	sxtw	x1, w25
    d8bc:	mov	x0, x20
    d8c0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d8c4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8c8:	mov	x0, x20
    d8cc:	mov	x1, x24
    d8d0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d8d4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8d8:	mov	w1, w23
    d8dc:	mov	x0, x20
    d8e0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d8e4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8e8:	mov	x0, x20
    d8ec:	mov	x1, x22
    d8f0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d8f4:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d8f8:	mov	w1, w21
    d8fc:	mov	x0, x20
    d900:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d904:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d908:	mov	w1, #0x1                   	// #1
    d90c:	mov	x0, x20
    d910:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    d914:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d918:	add	x1, sp, #0x8
    d91c:	mov	x0, x20
    d920:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    d924:	cbz	w0, d934 <gcc_cp_fe_context@@Base+0x3fc8>
    d928:	ldr	x8, [sp, #8]
    d92c:	mov	w0, #0x1                   	// #1
    d930:	str	x8, [x19]
    d934:	ldp	x20, x19, [sp, #80]
    d938:	ldp	x22, x21, [sp, #64]
    d93c:	ldp	x24, x23, [sp, #48]
    d940:	ldp	x26, x25, [sp, #32]
    d944:	ldp	x29, x30, [sp, #16]
    d948:	add	sp, sp, #0x60
    d94c:	ret
    d950:	sub	sp, sp, #0x60
    d954:	stp	x29, x30, [sp, #16]
    d958:	stp	x26, x25, [sp, #32]
    d95c:	stp	x24, x23, [sp, #48]
    d960:	stp	x22, x21, [sp, #64]
    d964:	stp	x20, x19, [sp, #80]
    d968:	add	x29, sp, #0x10
    d96c:	mov	x26, x1
    d970:	mov	w1, #0x51                  	// #81
    d974:	mov	x21, x7
    d978:	mov	x22, x6
    d97c:	mov	w23, w5
    d980:	mov	x24, x4
    d984:	mov	x25, x3
    d988:	mov	x19, x2
    d98c:	mov	x20, x0
    d990:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    d994:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d998:	mov	x0, x20
    d99c:	mov	x1, x26
    d9a0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d9a4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9a8:	mov	w1, #0x5                   	// #5
    d9ac:	mov	x0, x20
    d9b0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d9b4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9b8:	mov	x0, x20
    d9bc:	mov	x1, x25
    d9c0:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    d9c4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9c8:	mov	x0, x20
    d9cc:	mov	x1, x24
    d9d0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d9d4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9d8:	mov	w1, w23
    d9dc:	mov	x0, x20
    d9e0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d9e4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9e8:	mov	x0, x20
    d9ec:	mov	x1, x22
    d9f0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    d9f4:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    d9f8:	mov	x0, x20
    d9fc:	mov	x1, x21
    da00:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    da04:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    da08:	mov	w1, #0x1                   	// #1
    da0c:	mov	x0, x20
    da10:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    da14:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    da18:	add	x1, sp, #0x8
    da1c:	mov	x0, x20
    da20:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    da24:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x40c8>
    da28:	ldr	x8, [sp, #8]
    da2c:	mov	w0, #0x1                   	// #1
    da30:	str	x8, [x19]
    da34:	ldp	x20, x19, [sp, #80]
    da38:	ldp	x22, x21, [sp, #64]
    da3c:	ldp	x24, x23, [sp, #48]
    da40:	ldp	x26, x25, [sp, #32]
    da44:	ldp	x29, x30, [sp, #16]
    da48:	add	sp, sp, #0x60
    da4c:	ret
    da50:	sub	sp, sp, #0x40
    da54:	stp	x29, x30, [sp, #16]
    da58:	stp	x22, x21, [sp, #32]
    da5c:	stp	x20, x19, [sp, #48]
    da60:	add	x29, sp, #0x10
    da64:	mov	x22, x1
    da68:	mov	w1, #0x51                  	// #81
    da6c:	mov	x21, x3
    da70:	mov	x19, x2
    da74:	mov	x20, x0
    da78:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    da7c:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    da80:	mov	x0, x20
    da84:	mov	x1, x22
    da88:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    da8c:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    da90:	mov	w1, #0x1                   	// #1
    da94:	mov	x0, x20
    da98:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    da9c:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    daa0:	mov	x0, x20
    daa4:	mov	x1, x21
    daa8:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    daac:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    dab0:	mov	w1, #0x1                   	// #1
    dab4:	mov	x0, x20
    dab8:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    dabc:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    dac0:	add	x1, sp, #0x8
    dac4:	mov	x0, x20
    dac8:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dacc:	cbz	w0, dadc <gcc_cp_fe_context@@Base+0x4170>
    dad0:	ldr	x8, [sp, #8]
    dad4:	mov	w0, #0x1                   	// #1
    dad8:	str	w8, [x19]
    dadc:	ldp	x20, x19, [sp, #48]
    dae0:	ldp	x22, x21, [sp, #32]
    dae4:	ldp	x29, x30, [sp, #16]
    dae8:	add	sp, sp, #0x40
    daec:	ret
    daf0:	sub	sp, sp, #0x60
    daf4:	stp	x29, x30, [sp, #16]
    daf8:	stp	x26, x25, [sp, #32]
    dafc:	stp	x24, x23, [sp, #48]
    db00:	stp	x22, x21, [sp, #64]
    db04:	stp	x20, x19, [sp, #80]
    db08:	add	x29, sp, #0x10
    db0c:	mov	x26, x1
    db10:	mov	w1, #0x51                  	// #81
    db14:	mov	w21, w7
    db18:	mov	x22, x6
    db1c:	mov	w23, w5
    db20:	mov	x24, x4
    db24:	mov	x25, x3
    db28:	mov	x19, x2
    db2c:	mov	x20, x0
    db30:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    db34:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db38:	mov	x0, x20
    db3c:	mov	x1, x26
    db40:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    db44:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db48:	mov	w1, #0x5                   	// #5
    db4c:	mov	x0, x20
    db50:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    db54:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db58:	mov	x0, x20
    db5c:	mov	x1, x25
    db60:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    db64:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db68:	mov	x0, x20
    db6c:	mov	x1, x24
    db70:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    db74:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db78:	mov	w1, w23
    db7c:	mov	x0, x20
    db80:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    db84:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db88:	mov	x0, x20
    db8c:	mov	x1, x22
    db90:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    db94:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    db98:	mov	w1, w21
    db9c:	mov	x0, x20
    dba0:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dba4:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    dba8:	mov	w1, #0x1                   	// #1
    dbac:	mov	x0, x20
    dbb0:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    dbb4:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    dbb8:	add	x1, sp, #0x8
    dbbc:	mov	x0, x20
    dbc0:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dbc4:	cbz	w0, dbd4 <gcc_cp_fe_context@@Base+0x4268>
    dbc8:	ldr	x8, [sp, #8]
    dbcc:	mov	w0, #0x1                   	// #1
    dbd0:	str	x8, [x19]
    dbd4:	ldp	x20, x19, [sp, #80]
    dbd8:	ldp	x22, x21, [sp, #64]
    dbdc:	ldp	x24, x23, [sp, #48]
    dbe0:	ldp	x26, x25, [sp, #32]
    dbe4:	ldp	x29, x30, [sp, #16]
    dbe8:	add	sp, sp, #0x60
    dbec:	ret
    dbf0:	sub	sp, sp, #0x50
    dbf4:	stp	x29, x30, [sp, #16]
    dbf8:	stp	x24, x23, [sp, #32]
    dbfc:	stp	x22, x21, [sp, #48]
    dc00:	stp	x20, x19, [sp, #64]
    dc04:	add	x29, sp, #0x10
    dc08:	mov	x24, x1
    dc0c:	mov	w1, #0x51                  	// #81
    dc10:	mov	x21, x5
    dc14:	mov	x22, x4
    dc18:	mov	x23, x3
    dc1c:	mov	x19, x2
    dc20:	mov	x20, x0
    dc24:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    dc28:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc2c:	mov	x0, x20
    dc30:	mov	x1, x24
    dc34:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    dc38:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc3c:	mov	w1, #0x3                   	// #3
    dc40:	mov	x0, x20
    dc44:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dc48:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc4c:	mov	x0, x20
    dc50:	mov	x1, x23
    dc54:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dc58:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc5c:	mov	x0, x20
    dc60:	mov	x1, x22
    dc64:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    dc68:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc6c:	mov	x0, x20
    dc70:	mov	x1, x21
    dc74:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dc78:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc7c:	mov	w1, #0x1                   	// #1
    dc80:	mov	x0, x20
    dc84:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    dc88:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc8c:	add	x1, sp, #0x8
    dc90:	mov	x0, x20
    dc94:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dc98:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x433c>
    dc9c:	ldr	x8, [sp, #8]
    dca0:	mov	w0, #0x1                   	// #1
    dca4:	str	x8, [x19]
    dca8:	ldp	x20, x19, [sp, #64]
    dcac:	ldp	x22, x21, [sp, #48]
    dcb0:	ldp	x24, x23, [sp, #32]
    dcb4:	ldp	x29, x30, [sp, #16]
    dcb8:	add	sp, sp, #0x50
    dcbc:	ret
    dcc0:	stp	x29, x30, [sp, #-64]!
    dcc4:	str	x23, [sp, #16]
    dcc8:	stp	x22, x21, [sp, #32]
    dccc:	stp	x20, x19, [sp, #48]
    dcd0:	mov	x29, sp
    dcd4:	mov	x23, x1
    dcd8:	mov	w1, #0x51                  	// #81
    dcdc:	mov	x21, x4
    dce0:	mov	x22, x3
    dce4:	mov	x19, x2
    dce8:	mov	x20, x0
    dcec:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    dcf0:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dcf4:	mov	x0, x20
    dcf8:	mov	x1, x23
    dcfc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    dd00:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd04:	mov	w1, #0x2                   	// #2
    dd08:	mov	x0, x20
    dd0c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dd10:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd14:	mov	x0, x20
    dd18:	mov	x1, x22
    dd1c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dd20:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd24:	mov	x0, x20
    dd28:	mov	x1, x21
    dd2c:	bl	e6ec <gcc_cp_fe_context@@Base+0x4d80>
    dd30:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd34:	mov	w1, #0x1                   	// #1
    dd38:	mov	x0, x20
    dd3c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    dd40:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd44:	add	x1, x29, #0x18
    dd48:	mov	x0, x20
    dd4c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dd50:	cbz	w0, dd60 <gcc_cp_fe_context@@Base+0x43f4>
    dd54:	ldr	x8, [x29, #24]
    dd58:	mov	w0, #0x1                   	// #1
    dd5c:	str	x8, [x19]
    dd60:	ldp	x20, x19, [sp, #48]
    dd64:	ldp	x22, x21, [sp, #32]
    dd68:	ldr	x23, [sp, #16]
    dd6c:	ldp	x29, x30, [sp], #64
    dd70:	ret
    dd74:	stp	x29, x30, [sp, #-80]!
    dd78:	str	x25, [sp, #16]
    dd7c:	stp	x24, x23, [sp, #32]
    dd80:	stp	x22, x21, [sp, #48]
    dd84:	stp	x20, x19, [sp, #64]
    dd88:	mov	x29, sp
    dd8c:	mov	x25, x1
    dd90:	mov	w1, #0x51                  	// #81
    dd94:	mov	w21, w6
    dd98:	mov	w22, w5
    dd9c:	mov	x23, x4
    dda0:	mov	x24, x3
    dda4:	mov	x19, x2
    dda8:	mov	x20, x0
    ddac:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    ddb0:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    ddb4:	mov	x0, x20
    ddb8:	mov	x1, x25
    ddbc:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    ddc0:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    ddc4:	mov	w1, #0x4                   	// #4
    ddc8:	mov	x0, x20
    ddcc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ddd0:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    ddd4:	mov	x0, x20
    ddd8:	mov	x1, x24
    dddc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dde0:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    dde4:	mov	x0, x20
    dde8:	mov	x1, x23
    ddec:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    ddf0:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    ddf4:	mov	w1, w22
    ddf8:	mov	x0, x20
    ddfc:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    de00:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    de04:	mov	w1, w21
    de08:	mov	x0, x20
    de0c:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    de10:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    de14:	mov	w1, #0x1                   	// #1
    de18:	mov	x0, x20
    de1c:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    de20:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    de24:	add	x1, x29, #0x18
    de28:	mov	x0, x20
    de2c:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    de30:	cbz	w0, de40 <gcc_cp_fe_context@@Base+0x44d4>
    de34:	ldr	x8, [x29, #24]
    de38:	mov	w0, #0x1                   	// #1
    de3c:	str	x8, [x19]
    de40:	ldp	x20, x19, [sp, #64]
    de44:	ldp	x22, x21, [sp, #48]
    de48:	ldp	x24, x23, [sp, #32]
    de4c:	ldr	x25, [sp, #16]
    de50:	ldp	x29, x30, [sp], #80
    de54:	ret
    de58:	stp	x29, x30, [sp, #-64]!
    de5c:	str	x23, [sp, #16]
    de60:	stp	x22, x21, [sp, #32]
    de64:	stp	x20, x19, [sp, #48]
    de68:	mov	x29, sp
    de6c:	mov	x23, x1
    de70:	mov	w1, #0x51                  	// #81
    de74:	mov	w21, w4
    de78:	mov	x22, x3
    de7c:	mov	x19, x2
    de80:	mov	x20, x0
    de84:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    de88:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    de8c:	mov	x0, x20
    de90:	mov	x1, x23
    de94:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    de98:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    de9c:	mov	w1, #0x2                   	// #2
    dea0:	mov	x0, x20
    dea4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dea8:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    deac:	mov	x0, x20
    deb0:	mov	x1, x22
    deb4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    deb8:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    debc:	mov	w1, w21
    dec0:	mov	x0, x20
    dec4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dec8:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    decc:	mov	w1, #0x1                   	// #1
    ded0:	mov	x0, x20
    ded4:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    ded8:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    dedc:	add	x1, x29, #0x18
    dee0:	mov	x0, x20
    dee4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dee8:	cbz	w0, def8 <gcc_cp_fe_context@@Base+0x458c>
    deec:	ldr	x8, [x29, #24]
    def0:	mov	w0, #0x1                   	// #1
    def4:	str	x8, [x19]
    def8:	ldp	x20, x19, [sp, #48]
    defc:	ldp	x22, x21, [sp, #32]
    df00:	ldr	x23, [sp, #16]
    df04:	ldp	x29, x30, [sp], #64
    df08:	ret
    df0c:	stp	x29, x30, [sp, #-80]!
    df10:	str	x25, [sp, #16]
    df14:	stp	x24, x23, [sp, #32]
    df18:	stp	x22, x21, [sp, #48]
    df1c:	stp	x20, x19, [sp, #64]
    df20:	mov	x29, sp
    df24:	mov	x25, x1
    df28:	mov	w1, #0x51                  	// #81
    df2c:	mov	w21, w6
    df30:	mov	x22, x5
    df34:	mov	x23, x4
    df38:	mov	x24, x3
    df3c:	mov	x19, x2
    df40:	mov	x20, x0
    df44:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    df48:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df4c:	mov	x0, x20
    df50:	mov	x1, x25
    df54:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    df58:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df5c:	mov	w1, #0x4                   	// #4
    df60:	mov	x0, x20
    df64:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    df68:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df6c:	mov	x0, x20
    df70:	mov	x1, x24
    df74:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    df78:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df7c:	mov	x0, x20
    df80:	mov	x1, x23
    df84:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    df88:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df8c:	mov	x0, x20
    df90:	mov	x1, x22
    df94:	bl	e500 <gcc_cp_fe_context@@Base+0x4b94>
    df98:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    df9c:	mov	w1, w21
    dfa0:	mov	x0, x20
    dfa4:	bl	e480 <gcc_cp_fe_context@@Base+0x4b14>
    dfa8:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    dfac:	mov	w1, #0x1                   	// #1
    dfb0:	mov	x0, x20
    dfb4:	bl	e21c <gcc_cp_fe_context@@Base+0x48b0>
    dfb8:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    dfbc:	add	x1, x29, #0x18
    dfc0:	mov	x0, x20
    dfc4:	bl	e4bc <gcc_cp_fe_context@@Base+0x4b50>
    dfc8:	cbz	w0, dfd8 <gcc_cp_fe_context@@Base+0x466c>
    dfcc:	ldr	x8, [x29, #24]
    dfd0:	mov	w0, #0x1                   	// #1
    dfd4:	str	w8, [x19]
    dfd8:	ldp	x20, x19, [sp, #64]
    dfdc:	ldp	x22, x21, [sp, #48]
    dfe0:	ldp	x24, x23, [sp, #32]
    dfe4:	ldr	x25, [sp, #16]
    dfe8:	ldp	x29, x30, [sp], #80
    dfec:	ret
    dff0:	stp	x29, x30, [sp, #-32]!
    dff4:	str	x19, [sp, #16]
    dff8:	mov	x29, sp
    dffc:	adrp	x4, 2a000 <xexit@@Base+0x13b84>
    e000:	adrp	x3, 2a000 <xexit@@Base+0x13b84>
    e004:	ldr	x4, [x4, #3872]
    e008:	ldr	x3, [x3, #3384]
    e00c:	adrp	x1, e000 <gcc_cp_fe_context@@Base+0x4694>
    e010:	adrp	x2, e000 <gcc_cp_fe_context@@Base+0x4694>
    e014:	mov	x19, x0
    e018:	add	x1, x1, #0x3c
    e01c:	add	x2, x2, #0x44
    e020:	mov	w0, #0xa                   	// #10
    e024:	mov	x5, x3
    e028:	bl	4eb0 <htab_create_alloc@plt>
    e02c:	str	x0, [x19]
    e030:	ldr	x19, [sp, #16]
    e034:	ldp	x29, x30, [sp], #32
    e038:	ret
    e03c:	ldr	x0, [x0]
    e040:	b	4fe0 <htab_hash_string@plt>
    e044:	stp	x29, x30, [sp, #-16]!
    e048:	ldr	x0, [x0]
    e04c:	ldr	x1, [x1]
    e050:	mov	x29, sp
    e054:	bl	5110 <strcmp@plt>
    e058:	cmp	w0, #0x0
    e05c:	cset	w0, eq  // eq = none
    e060:	ldp	x29, x30, [sp], #16
    e064:	ret
    e068:	stp	x29, x30, [sp, #-16]!
    e06c:	mov	x29, sp
    e070:	ldr	x0, [x0]
    e074:	bl	5230 <htab_delete@plt>
    e078:	ldp	x29, x30, [sp], #16
    e07c:	ret
    e080:	bl	7330 <gcc_c_fe_context@@Base+0x12d0>
    e084:	sub	sp, sp, #0x30
    e088:	stp	x29, x30, [sp, #16]
    e08c:	str	x19, [sp, #32]
    e090:	add	x29, sp, #0x10
    e094:	stp	x1, x2, [sp]
    e098:	ldr	x0, [x0]
    e09c:	mov	x1, sp
    e0a0:	mov	w2, #0x1                   	// #1
    e0a4:	bl	5080 <htab_find_slot@plt>
    e0a8:	mov	x19, x0
    e0ac:	mov	w0, #0x10                  	// #16
    e0b0:	bl	50d0 <xmalloc@plt>
    e0b4:	str	x0, [x19]
    e0b8:	ldr	q0, [sp]
    e0bc:	ldr	x19, [sp, #32]
    e0c0:	ldp	x29, x30, [sp, #16]
    e0c4:	str	q0, [x0]
    e0c8:	add	sp, sp, #0x30
    e0cc:	ret
    e0d0:	sub	sp, sp, #0x20
    e0d4:	stp	x29, x30, [sp, #16]
    e0d8:	add	x29, sp, #0x10
    e0dc:	str	x1, [sp]
    e0e0:	ldr	x0, [x0]
    e0e4:	mov	x1, sp
    e0e8:	bl	4fa0 <htab_find@plt>
    e0ec:	cbz	x0, e0f4 <gcc_cp_fe_context@@Base+0x4788>
    e0f0:	ldr	x0, [x0, #8]
    e0f4:	ldp	x29, x30, [sp, #16]
    e0f8:	add	sp, sp, #0x20
    e0fc:	ret
    e100:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    e104:	add	x8, x8, #0x9a8
    e108:	str	x8, [x0], #16
    e10c:	b	e068 <gcc_cp_fe_context@@Base+0x46fc>
    e110:	stp	x29, x30, [sp, #-32]!
    e114:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    e118:	add	x8, x8, #0x9a8
    e11c:	str	x19, [sp, #16]
    e120:	mov	x19, x0
    e124:	str	x8, [x0], #16
    e128:	mov	x29, sp
    e12c:	bl	e068 <gcc_cp_fe_context@@Base+0x46fc>
    e130:	mov	x0, x19
    e134:	ldr	x19, [sp, #16]
    e138:	ldp	x29, x30, [sp], #32
    e13c:	b	4ff0 <_ZdlPv@plt>
    e140:	ret
    e144:	sub	sp, sp, #0x20
    e148:	stp	x29, x30, [sp, #16]
    e14c:	add	x29, sp, #0x10
    e150:	sturb	w1, [x29, #-4]
    e154:	ldr	w0, [x0, #8]
    e158:	sub	x1, x29, #0x4
    e15c:	mov	w2, #0x1                   	// #1
    e160:	bl	5140 <write@plt>
    e164:	ldp	x29, x30, [sp, #16]
    e168:	cmp	x0, #0x1
    e16c:	cset	w0, eq  // eq = none
    e170:	add	sp, sp, #0x20
    e174:	ret
    e178:	stp	x29, x30, [sp, #-32]!
    e17c:	str	x19, [sp, #16]
    e180:	mov	x29, sp
    e184:	ldr	w0, [x0, #8]
    e188:	sxtw	x19, w2
    e18c:	mov	x2, x19
    e190:	bl	5140 <write@plt>
    e194:	cmp	x0, x19
    e198:	ldr	x19, [sp, #16]
    e19c:	cset	w0, eq  // eq = none
    e1a0:	ldp	x29, x30, [sp], #32
    e1a4:	ret
    e1a8:	stp	x29, x30, [sp, #-32]!
    e1ac:	str	x19, [sp, #16]
    e1b0:	mov	x29, sp
    e1b4:	ldr	w0, [x0, #8]
    e1b8:	mov	w19, w1
    e1bc:	add	x1, x29, #0x1c
    e1c0:	mov	w2, #0x1                   	// #1
    e1c4:	bl	4f70 <read@plt>
    e1c8:	ldrb	w8, [x29, #28]
    e1cc:	cmp	x0, #0x1
    e1d0:	cset	w9, eq  // eq = none
    e1d4:	cmp	w8, w19, uxtb
    e1d8:	ldr	x19, [sp, #16]
    e1dc:	cset	w8, eq  // eq = none
    e1e0:	and	w0, w9, w8
    e1e4:	ldp	x29, x30, [sp], #32
    e1e8:	ret
    e1ec:	stp	x29, x30, [sp, #-32]!
    e1f0:	str	x19, [sp, #16]
    e1f4:	mov	x29, sp
    e1f8:	ldr	w0, [x0, #8]
    e1fc:	sxtw	x19, w2
    e200:	mov	x2, x19
    e204:	bl	4f70 <read@plt>
    e208:	cmp	x0, x19
    e20c:	ldr	x19, [sp, #16]
    e210:	cset	w0, eq  // eq = none
    e214:	ldp	x29, x30, [sp], #32
    e218:	ret
    e21c:	stp	x29, x30, [sp, #-80]!
    e220:	str	x28, [sp, #16]
    e224:	stp	x24, x23, [sp, #32]
    e228:	stp	x22, x21, [sp, #48]
    e22c:	stp	x20, x19, [sp, #64]
    e230:	mov	x29, sp
    e234:	sub	sp, sp, #0x480
    e238:	mov	w19, w1
    e23c:	mov	x20, x0
    e240:	add	x21, x0, #0x10
    e244:	mov	w22, #0x1                   	// #1
    e248:	sub	x23, x29, #0x80
    e24c:	mov	x24, sp
    e250:	b	e264 <gcc_cp_fe_context@@Base+0x48f8>
    e254:	bl	50a0 <__errno_location@plt>
    e258:	ldr	w8, [x0]
    e25c:	cmp	w8, #0x4
    e260:	b.ne	e3ec <gcc_cp_fe_context@@Base+0x4a80>  // b.any
    e264:	movi	v0.2d, #0x0
    e268:	stp	q0, q0, [x29, #-32]
    e26c:	stp	q0, q0, [x29, #-64]
    e270:	stp	q0, q0, [x29, #-96]
    e274:	stp	q0, q0, [x29, #-128]
    e278:	ldr	w8, [x20, #8]
    e27c:	add	w9, w8, #0x3f
    e280:	cmp	w8, #0x0
    e284:	csel	w9, w9, w8, lt  // lt = tstop
    e288:	asr	w10, w9, #6
    e28c:	sbfiz	x10, x10, #3, #32
    e290:	ldr	x11, [x23, x10]
    e294:	and	w9, w9, #0xffffffc0
    e298:	sub	w8, w8, w9
    e29c:	lsl	x8, x22, x8
    e2a0:	orr	x8, x8, x11
    e2a4:	str	x8, [x23, x10]
    e2a8:	ldr	w8, [x20, #12]
    e2ac:	cmn	w8, #0x1
    e2b0:	b.eq	e2e0 <gcc_cp_fe_context@@Base+0x4974>  // b.none
    e2b4:	add	w9, w8, #0x3f
    e2b8:	cmp	w8, #0x0
    e2bc:	csel	w9, w9, w8, lt  // lt = tstop
    e2c0:	asr	w10, w9, #6
    e2c4:	sbfiz	x10, x10, #3, #32
    e2c8:	ldr	x11, [x23, x10]
    e2cc:	and	w9, w9, #0xffffffc0
    e2d0:	sub	w8, w8, w9
    e2d4:	lsl	x8, x22, x8
    e2d8:	orr	x8, x11, x8
    e2dc:	str	x8, [x23, x10]
    e2e0:	sub	x1, x29, #0x80
    e2e4:	mov	w0, #0x400                 	// #1024
    e2e8:	mov	x2, xzr
    e2ec:	mov	x3, xzr
    e2f0:	mov	x4, xzr
    e2f4:	bl	4dc0 <select@plt>
    e2f8:	cmn	w0, #0x1
    e2fc:	b.eq	e254 <gcc_cp_fe_context@@Base+0x48e8>  // b.none
    e300:	ldr	w0, [x20, #12]
    e304:	cmn	w0, #0x1
    e308:	b.eq	e35c <gcc_cp_fe_context@@Base+0x49f0>  // b.none
    e30c:	add	w8, w0, #0x3f
    e310:	cmp	w0, #0x0
    e314:	csel	w8, w8, w0, lt  // lt = tstop
    e318:	asr	w9, w8, #6
    e31c:	ldr	x9, [x23, w9, sxtw #3]
    e320:	and	w8, w8, #0xffffffc0
    e324:	sub	w8, w0, w8
    e328:	lsr	x8, x9, x8
    e32c:	tbz	w8, #0, e35c <gcc_cp_fe_context@@Base+0x49f0>
    e330:	mov	x1, sp
    e334:	mov	w2, #0x3ff                 	// #1023
    e338:	bl	4f70 <read@plt>
    e33c:	tbnz	w0, #31, e3ec <gcc_cp_fe_context@@Base+0x4a80>
    e340:	cbz	w0, e35c <gcc_cp_fe_context@@Base+0x49f0>
    e344:	strb	wzr, [x24, w0, sxtw]
    e348:	ldr	x8, [x20]
    e34c:	mov	x1, sp
    e350:	mov	x0, x20
    e354:	ldr	x8, [x8, #16]
    e358:	blr	x8
    e35c:	ldr	w0, [x20, #8]
    e360:	add	w8, w0, #0x3f
    e364:	cmp	w0, #0x0
    e368:	csel	w8, w8, w0, lt  // lt = tstop
    e36c:	asr	w9, w8, #6
    e370:	ldr	x9, [x23, w9, sxtw #3]
    e374:	and	w8, w8, #0xffffffc0
    e378:	sub	w8, w0, w8
    e37c:	lsr	x8, x9, x8
    e380:	tbz	w8, #0, e264 <gcc_cp_fe_context@@Base+0x48f8>
    e384:	add	x1, x29, #0x1c
    e388:	mov	w2, #0x1                   	// #1
    e38c:	bl	4f70 <read@plt>
    e390:	cmp	w0, #0x1
    e394:	b.ne	e3d8 <gcc_cp_fe_context@@Base+0x4a6c>  // b.any
    e398:	ldrb	w8, [x29, #28]
    e39c:	cmp	w8, #0x51
    e3a0:	b.ne	e3e4 <gcc_cp_fe_context@@Base+0x4a78>  // b.any
    e3a4:	mov	x1, sp
    e3a8:	mov	x0, x20
    e3ac:	bl	e580 <gcc_cp_fe_context@@Base+0x4c14>
    e3b0:	cbz	w0, e3ec <gcc_cp_fe_context@@Base+0x4a80>
    e3b4:	ldr	x1, [sp]
    e3b8:	mov	x0, x21
    e3bc:	bl	e0d0 <gcc_cp_fe_context@@Base+0x4764>
    e3c0:	mov	x8, x0
    e3c4:	cbz	x0, e3ec <gcc_cp_fe_context@@Base+0x4a80>
    e3c8:	mov	x0, x20
    e3cc:	blr	x8
    e3d0:	cbnz	w0, e264 <gcc_cp_fe_context@@Base+0x48f8>
    e3d4:	b	e3ec <gcc_cp_fe_context@@Base+0x4a80>
    e3d8:	cbnz	w0, e3ec <gcc_cp_fe_context@@Base+0x4a80>
    e3dc:	eor	w19, w19, #0x1
    e3e0:	b	e3f0 <gcc_cp_fe_context@@Base+0x4a84>
    e3e4:	cmp	w8, #0x52
    e3e8:	b.eq	e3f0 <gcc_cp_fe_context@@Base+0x4a84>  // b.none
    e3ec:	mov	w19, wzr
    e3f0:	and	w0, w19, #0x1
    e3f4:	add	sp, sp, #0x480
    e3f8:	ldp	x20, x19, [sp, #64]
    e3fc:	ldp	x22, x21, [sp, #48]
    e400:	ldp	x24, x23, [sp, #32]
    e404:	ldr	x28, [sp, #16]
    e408:	ldp	x29, x30, [sp], #80
    e40c:	ret
    e410:	bl	5240 <_Unwind_Resume@plt>
    e414:	bl	5240 <_Unwind_Resume@plt>
    e418:	sub	sp, sp, #0x30
    e41c:	stp	x29, x30, [sp, #16]
    e420:	stp	x20, x19, [sp, #32]
    e424:	add	x29, sp, #0x10
    e428:	mov	x19, x1
    e42c:	mov	w1, #0x69                  	// #105
    e430:	mov	x20, x0
    e434:	bl	e1a8 <gcc_cp_fe_context@@Base+0x483c>
    e438:	cbz	w0, e46c <gcc_cp_fe_context@@Base+0x4b00>
    e43c:	add	x1, sp, #0x8
    e440:	mov	w2, #0x8                   	// #8
    e444:	mov	x0, x20
    e448:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e44c:	cbz	w0, e46c <gcc_cp_fe_context@@Base+0x4b00>
    e450:	ldr	x8, [sp, #8]
    e454:	cmp	x8, x19
    e458:	cset	w0, eq  // eq = none
    e45c:	ldp	x20, x19, [sp, #32]
    e460:	ldp	x29, x30, [sp, #16]
    e464:	add	sp, sp, #0x30
    e468:	ret
    e46c:	mov	w0, wzr
    e470:	ldp	x20, x19, [sp, #32]
    e474:	ldp	x29, x30, [sp, #16]
    e478:	add	sp, sp, #0x30
    e47c:	ret
    e480:	stp	x29, x30, [sp, #-32]!
    e484:	str	x19, [sp, #16]
    e488:	mov	x29, sp
    e48c:	str	x1, [x29, #24]
    e490:	mov	w1, #0x69                  	// #105
    e494:	mov	x19, x0
    e498:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    e49c:	cbz	w0, e4b0 <gcc_cp_fe_context@@Base+0x4b44>
    e4a0:	add	x1, x29, #0x18
    e4a4:	mov	w2, #0x8                   	// #8
    e4a8:	mov	x0, x19
    e4ac:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e4b0:	ldr	x19, [sp, #16]
    e4b4:	ldp	x29, x30, [sp], #32
    e4b8:	ret
    e4bc:	stp	x29, x30, [sp, #-32]!
    e4c0:	stp	x20, x19, [sp, #16]
    e4c4:	mov	x29, sp
    e4c8:	mov	x19, x1
    e4cc:	mov	w1, #0x69                  	// #105
    e4d0:	mov	x20, x0
    e4d4:	bl	e1a8 <gcc_cp_fe_context@@Base+0x483c>
    e4d8:	cbz	w0, e4f4 <gcc_cp_fe_context@@Base+0x4b88>
    e4dc:	mov	x0, x20
    e4e0:	mov	x1, x19
    e4e4:	ldp	x20, x19, [sp, #16]
    e4e8:	mov	w2, #0x8                   	// #8
    e4ec:	ldp	x29, x30, [sp], #32
    e4f0:	b	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e4f4:	ldp	x20, x19, [sp, #16]
    e4f8:	ldp	x29, x30, [sp], #32
    e4fc:	ret
    e500:	sub	sp, sp, #0x30
    e504:	stp	x29, x30, [sp, #16]
    e508:	stp	x20, x19, [sp, #32]
    e50c:	add	x29, sp, #0x10
    e510:	mov	x19, x1
    e514:	mov	w1, #0x73                  	// #115
    e518:	mov	x20, x0
    e51c:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    e520:	cbz	w0, e570 <gcc_cp_fe_context@@Base+0x4c04>
    e524:	cbz	x19, e534 <gcc_cp_fe_context@@Base+0x4bc8>
    e528:	mov	x0, x19
    e52c:	bl	4e50 <strlen@plt>
    e530:	b	e538 <gcc_cp_fe_context@@Base+0x4bcc>
    e534:	mov	x0, #0xffffffffffffffff    	// #-1
    e538:	str	x0, [sp, #8]
    e53c:	add	x1, sp, #0x8
    e540:	mov	w2, #0x8                   	// #8
    e544:	mov	x0, x20
    e548:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e54c:	cmp	w0, #0x0
    e550:	mov	w8, w0
    e554:	cset	w0, ne  // ne = any
    e558:	cbz	x19, e570 <gcc_cp_fe_context@@Base+0x4c04>
    e55c:	cbz	w8, e570 <gcc_cp_fe_context@@Base+0x4c04>
    e560:	ldr	w2, [sp, #8]
    e564:	mov	x0, x20
    e568:	mov	x1, x19
    e56c:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e570:	ldp	x20, x19, [sp, #32]
    e574:	ldp	x29, x30, [sp, #16]
    e578:	add	sp, sp, #0x30
    e57c:	ret
    e580:	sub	sp, sp, #0x40
    e584:	stp	x29, x30, [sp, #16]
    e588:	stp	x22, x21, [sp, #32]
    e58c:	stp	x20, x19, [sp, #48]
    e590:	add	x29, sp, #0x10
    e594:	mov	x19, x1
    e598:	mov	w1, #0x73                  	// #115
    e59c:	mov	x20, x0
    e5a0:	bl	e1a8 <gcc_cp_fe_context@@Base+0x483c>
    e5a4:	cbz	w0, e61c <gcc_cp_fe_context@@Base+0x4cb0>
    e5a8:	add	x1, sp, #0x8
    e5ac:	mov	w2, #0x8                   	// #8
    e5b0:	mov	x0, x20
    e5b4:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e5b8:	cbz	w0, e61c <gcc_cp_fe_context@@Base+0x4cb0>
    e5bc:	ldr	x22, [sp, #8]
    e5c0:	cmn	x22, #0x1
    e5c4:	b.eq	e604 <gcc_cp_fe_context@@Base+0x4c98>  // b.none
    e5c8:	adrp	x1, 2a000 <xexit@@Base+0x13b84>
    e5cc:	ldr	x1, [x1, #3264]
    e5d0:	add	x0, x22, #0x1
    e5d4:	bl	51c0 <_ZnamRKSt9nothrow_t@plt>
    e5d8:	cbz	x0, e61c <gcc_cp_fe_context@@Base+0x4cb0>
    e5dc:	mov	x21, x0
    e5e0:	mov	x0, x20
    e5e4:	mov	x1, x21
    e5e8:	mov	w2, w22
    e5ec:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e5f0:	cbz	w0, e610 <gcc_cp_fe_context@@Base+0x4ca4>
    e5f4:	ldr	x8, [sp, #8]
    e5f8:	strb	wzr, [x21, x8]
    e5fc:	str	x21, [x19]
    e600:	b	e608 <gcc_cp_fe_context@@Base+0x4c9c>
    e604:	str	xzr, [x19]
    e608:	mov	w0, #0x1                   	// #1
    e60c:	b	e61c <gcc_cp_fe_context@@Base+0x4cb0>
    e610:	mov	x0, x21
    e614:	bl	5090 <_ZdaPv@plt>
    e618:	mov	w0, wzr
    e61c:	ldp	x20, x19, [sp, #48]
    e620:	ldp	x22, x21, [sp, #32]
    e624:	ldp	x29, x30, [sp, #16]
    e628:	add	sp, sp, #0x40
    e62c:	ret
    e630:	sub	sp, sp, #0x30
    e634:	stp	x29, x30, [sp, #16]
    e638:	stp	x20, x19, [sp, #32]
    e63c:	add	x29, sp, #0x10
    e640:	mov	x20, x2
    e644:	mov	x19, x0
    e648:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    e64c:	cbz	w0, e66c <gcc_cp_fe_context@@Base+0x4d00>
    e650:	add	x1, sp, #0x8
    e654:	mov	w2, #0x8                   	// #8
    e658:	mov	x0, x19
    e65c:	str	x20, [sp, #8]
    e660:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e664:	cmp	w0, #0x0
    e668:	cset	w0, ne  // ne = any
    e66c:	ldp	x20, x19, [sp, #32]
    e670:	ldp	x29, x30, [sp, #16]
    e674:	add	sp, sp, #0x30
    e678:	ret
    e67c:	mov	x8, x1
    e680:	mov	x1, x2
    e684:	mov	w2, w8
    e688:	b	e178 <gcc_cp_fe_context@@Base+0x480c>
    e68c:	sub	sp, sp, #0x30
    e690:	stp	x29, x30, [sp, #16]
    e694:	stp	x20, x19, [sp, #32]
    e698:	add	x29, sp, #0x10
    e69c:	mov	x19, x2
    e6a0:	mov	x20, x0
    e6a4:	bl	e1a8 <gcc_cp_fe_context@@Base+0x483c>
    e6a8:	cbz	w0, e6cc <gcc_cp_fe_context@@Base+0x4d60>
    e6ac:	add	x1, sp, #0x8
    e6b0:	mov	w2, #0x8                   	// #8
    e6b4:	mov	x0, x20
    e6b8:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e6bc:	cbz	w0, e6cc <gcc_cp_fe_context@@Base+0x4d60>
    e6c0:	ldr	x8, [sp, #8]
    e6c4:	mov	w0, #0x1                   	// #1
    e6c8:	str	x8, [x19]
    e6cc:	ldp	x20, x19, [sp, #32]
    e6d0:	ldp	x29, x30, [sp, #16]
    e6d4:	add	sp, sp, #0x30
    e6d8:	ret
    e6dc:	mov	x8, x1
    e6e0:	mov	x1, x2
    e6e4:	mov	w2, w8
    e6e8:	b	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e6ec:	stp	x29, x30, [sp, #-48]!
    e6f0:	str	x21, [sp, #16]
    e6f4:	stp	x20, x19, [sp, #32]
    e6f8:	mov	x29, sp
    e6fc:	mov	x20, x1
    e700:	mov	x19, x0
    e704:	cbz	x1, e72c <gcc_cp_fe_context@@Base+0x4dc0>
    e708:	ldrsw	x21, [x20]
    e70c:	mov	w1, #0x61                  	// #97
    e710:	mov	x0, x19
    e714:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    e718:	cbnz	w0, e740 <gcc_cp_fe_context@@Base+0x4dd4>
    e71c:	ldp	x20, x19, [sp, #32]
    e720:	ldr	x21, [sp, #16]
    e724:	ldp	x29, x30, [sp], #48
    e728:	ret
    e72c:	mov	x21, #0xffffffffffffffff    	// #-1
    e730:	mov	w1, #0x61                  	// #97
    e734:	mov	x0, x19
    e738:	bl	e144 <gcc_cp_fe_context@@Base+0x47d8>
    e73c:	cbz	w0, e71c <gcc_cp_fe_context@@Base+0x4db0>
    e740:	add	x1, x29, #0x18
    e744:	mov	w2, #0x8                   	// #8
    e748:	mov	x0, x19
    e74c:	str	x21, [x29, #24]
    e750:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e754:	cmp	w0, #0x0
    e758:	mov	w8, w0
    e75c:	cset	w0, ne  // ne = any
    e760:	cbz	w8, e71c <gcc_cp_fe_context@@Base+0x4db0>
    e764:	cbz	x20, e71c <gcc_cp_fe_context@@Base+0x4db0>
    e768:	ldr	x1, [x20, #8]
    e76c:	lsl	w2, w21, #3
    e770:	mov	x0, x19
    e774:	bl	e178 <gcc_cp_fe_context@@Base+0x480c>
    e778:	ldp	x20, x19, [sp, #32]
    e77c:	ldr	x21, [sp, #16]
    e780:	ldp	x29, x30, [sp], #48
    e784:	ret
    e788:	stp	x29, x30, [sp, #-64]!
    e78c:	str	x23, [sp, #16]
    e790:	stp	x22, x21, [sp, #32]
    e794:	stp	x20, x19, [sp, #48]
    e798:	mov	x29, sp
    e79c:	mov	x19, x1
    e7a0:	mov	w1, #0x61                  	// #97
    e7a4:	mov	x20, x0
    e7a8:	bl	e1a8 <gcc_cp_fe_context@@Base+0x483c>
    e7ac:	cbz	w0, e814 <gcc_cp_fe_context@@Base+0x4ea8>
    e7b0:	add	x1, x29, #0x18
    e7b4:	mov	w2, #0x8                   	// #8
    e7b8:	mov	x0, x20
    e7bc:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e7c0:	cbz	w0, e814 <gcc_cp_fe_context@@Base+0x4ea8>
    e7c4:	ldr	x23, [x29, #24]
    e7c8:	cmn	x23, #0x1
    e7cc:	b.eq	e81c <gcc_cp_fe_context@@Base+0x4eb0>  // b.none
    e7d0:	mov	w0, #0x10                  	// #16
    e7d4:	bl	5000 <_Znwm@plt>
    e7d8:	lsl	x8, x23, #3
    e7dc:	cmp	xzr, x23, lsr #61
    e7e0:	mov	x21, x0
    e7e4:	str	w23, [x0]
    e7e8:	csinv	x0, x8, xzr, eq  // eq = none
    e7ec:	bl	4da0 <_Znam@plt>
    e7f0:	mov	x22, x0
    e7f4:	str	x0, [x21, #8]
    e7f8:	lsl	w2, w23, #3
    e7fc:	mov	x0, x20
    e800:	mov	x1, x22
    e804:	bl	e1ec <gcc_cp_fe_context@@Base+0x4880>
    e808:	cbz	w0, e838 <gcc_cp_fe_context@@Base+0x4ecc>
    e80c:	str	x21, [x19]
    e810:	b	e820 <gcc_cp_fe_context@@Base+0x4eb4>
    e814:	mov	w0, wzr
    e818:	b	e824 <gcc_cp_fe_context@@Base+0x4eb8>
    e81c:	str	xzr, [x19]
    e820:	mov	w0, #0x1                   	// #1
    e824:	ldp	x20, x19, [sp, #48]
    e828:	ldp	x22, x21, [sp, #32]
    e82c:	ldr	x23, [sp, #16]
    e830:	ldp	x29, x30, [sp], #64
    e834:	ret
    e838:	mov	x0, x22
    e83c:	bl	5090 <_ZdaPv@plt>
    e840:	ldr	x0, [x19]
    e844:	cbz	x0, e824 <gcc_cp_fe_context@@Base+0x4eb8>
    e848:	bl	4ff0 <_ZdlPv@plt>
    e84c:	mov	w0, wzr
    e850:	b	e824 <gcc_cp_fe_context@@Base+0x4eb8>

000000000000e854 <xre_set_syntax@@Base>:
    e854:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
    e858:	ldr	x9, [x9, #3800]
    e85c:	ldr	x8, [x9]
    e860:	str	x0, [x9]
    e864:	mov	x0, x8
    e868:	ret

000000000000e86c <xre_compile_fastmap@@Base>:
    e86c:	b	e870 <xre_compile_fastmap@@Base+0x4>
    e870:	str	d8, [sp, #-112]!
    e874:	stp	x29, x30, [sp, #16]
    e878:	stp	x28, x27, [sp, #32]
    e87c:	stp	x26, x25, [sp, #48]
    e880:	stp	x24, x23, [sp, #64]
    e884:	stp	x22, x21, [sp, #80]
    e888:	stp	x20, x19, [sp, #96]
    e88c:	mov	x29, sp
    e890:	sub	sp, sp, #0x50
    e894:	ldr	x22, [x0, #32]
    e898:	ldr	x26, [x0]
    e89c:	ldr	x9, [x0, #16]
    e8a0:	adrp	x10, 2b000 <xexit@@Base+0x14b84>
    e8a4:	add	x10, x10, #0x5e5
    e8a8:	movi	v0.2d, #0x0
    e8ac:	adrp	x15, 2a000 <xexit@@Base+0x13b84>
    e8b0:	add	x11, x10, #0x100
    e8b4:	ldr	x15, [x15, #3952]
    e8b8:	stp	q0, q0, [x22, #224]
    e8bc:	stp	q0, q0, [x22, #192]
    e8c0:	stp	q0, q0, [x22, #160]
    e8c4:	stp	q0, q0, [x22, #128]
    e8c8:	stp	q0, q0, [x22, #96]
    e8cc:	stp	q0, q0, [x22, #64]
    e8d0:	stp	q0, q0, [x22, #32]
    e8d4:	stp	q0, q0, [x22]
    e8d8:	add	x28, x26, x9
    e8dc:	add	x9, x22, #0x100
    e8e0:	cmp	x22, x11
    e8e4:	cset	w11, cc  // cc = lo, ul, last
    e8e8:	cmp	x9, x10
    e8ec:	ldrb	w9, [x0, #56]
    e8f0:	adrp	x13, 16000 <htab_collisions@@Base+0x8>
    e8f4:	adrp	x17, 2b000 <xexit@@Base+0x14b84>
    e8f8:	cset	w10, hi  // hi = pmore
    e8fc:	and	w9, w9, #0xfffffffe
    e900:	mov	x19, x0
    e904:	mov	w8, wzr
    e908:	sub	x1, x29, #0x30
    e90c:	mov	w23, #0x1                   	// #1
    e910:	mov	w18, #0x5                   	// #5
    e914:	add	x13, x13, #0xec0
    e918:	movi	v1.16b, #0x1
    e91c:	mov	w14, #0x100                 	// #256
    e920:	mov	w16, #0x13                  	// #19
    e924:	add	x17, x17, #0x5e0
    e928:	movi	v8.8b, #0x1
    e92c:	add	x27, x22, #0x7
    e930:	and	w3, w11, w10
    e934:	sub	x2, x22, #0x1
    e938:	orr	w9, w9, #0x8
    e93c:	strb	w9, [x0, #56]
    e940:	mov	w25, #0x1                   	// #1
    e944:	cmp	x26, x28
    e948:	mov	w24, w8
    e94c:	b.eq	ee60 <xre_compile_fastmap@@Base+0x5f4>  // b.none
    e950:	ldrb	w8, [x26]
    e954:	mov	x21, x26
    e958:	cmp	w8, #0x1
    e95c:	b.eq	ee60 <xre_compile_fastmap@@Base+0x5f4>  // b.none
    e960:	cmp	w8, #0x1d
    e964:	b.hi	eecc <xre_compile_fastmap@@Base+0x660>  // b.pmore
    e968:	adr	x9, e944 <xre_compile_fastmap@@Base+0xd8>
    e96c:	ldrh	w10, [x13, x8, lsl #1]
    e970:	add	x9, x9, x10, lsl #2
    e974:	mov	w20, wzr
    e978:	add	x26, x21, #0x1
    e97c:	mov	w8, w24
    e980:	br	x9
    e984:	ldrb	w8, [x21, #1]
    e988:	ldrsb	x9, [x21, #2]
    e98c:	bfi	x8, x9, #8, #56
    e990:	add	x9, x21, x8
    e994:	cmp	w8, #0x0
    e998:	add	x26, x9, #0x3
    e99c:	mov	w8, w24
    e9a0:	b.gt	e944 <xre_compile_fastmap@@Base+0xd8>
    e9a4:	ldrb	w8, [x26]
    e9a8:	cmp	w8, #0x15
    e9ac:	b.eq	e9bc <xre_compile_fastmap@@Base+0x150>  // b.none
    e9b0:	cmp	w8, #0xf
    e9b4:	mov	w8, w24
    e9b8:	b.ne	e944 <xre_compile_fastmap@@Base+0xd8>  // b.any
    e9bc:	ldrb	w9, [x26, #1]!
    e9c0:	mov	w8, wzr
    e9c4:	ldrsb	x10, [x26, #1]
    e9c8:	bfi	x9, x10, #8, #56
    e9cc:	add	x9, x26, x9
    e9d0:	add	x26, x9, #0x2
    e9d4:	cbz	w24, e944 <xre_compile_fastmap@@Base+0xd8>
    e9d8:	sub	w8, w24, #0x1
    e9dc:	ldr	x9, [x1, w8, uxtw #3]
    e9e0:	cmp	x9, x26
    e9e4:	csel	w8, w8, w24, eq  // eq = none
    e9e8:	b	e944 <xre_compile_fastmap@@Base+0xd8>
    e9ec:	add	x26, x21, #0x3
    e9f0:	mov	w8, w24
    e9f4:	b	e944 <xre_compile_fastmap@@Base+0xd8>
    e9f8:	ldrb	w8, [x21, #2]
    e9fc:	mov	w25, wzr
    ea00:	strb	w23, [x22, x8]
    ea04:	b	ee30 <xre_compile_fastmap@@Base+0x5c4>
    ea08:	ldrb	w8, [x22, #10]
    ea0c:	stp	q1, q1, [x22, #16]
    ea10:	stp	q1, q1, [x22, #48]
    ea14:	stp	q1, q1, [x22, #80]
    ea18:	stp	q1, q1, [x22, #112]
    ea1c:	stp	q1, q1, [x22, #144]
    ea20:	stp	q1, q1, [x22, #176]
    ea24:	stp	q1, q1, [x22, #208]
    ea28:	str	q1, [x22, #240]
    ea2c:	str	q1, [x22]
    ea30:	ldrb	w9, [x19, #24]
    ea34:	tbnz	w9, #6, ee48 <xre_compile_fastmap@@Base+0x5dc>
    ea38:	mov	w25, wzr
    ea3c:	strb	w8, [x22, #10]
    ea40:	b	ee30 <xre_compile_fastmap@@Base+0x5c4>
    ea44:	ldrb	w9, [x21, #1]
    ea48:	mov	w25, wzr
    ea4c:	mov	w8, w24
    ea50:	mov	x26, x28
    ea54:	cbz	x9, e944 <xre_compile_fastmap@@Base+0xd8>
    ea58:	add	x8, x21, #0x2
    ea5c:	lsl	x10, x9, #3
    ea60:	b	ea74 <xre_compile_fastmap@@Base+0x208>
    ea64:	add	x10, x9, #0x1
    ea68:	cmp	x10, #0x1
    ea6c:	mov	x10, x9
    ea70:	b.le	ee2c <xre_compile_fastmap@@Base+0x5c0>
    ea74:	sub	x9, x10, #0x1
    ea78:	add	w11, w9, #0x7
    ea7c:	cmp	w9, #0x0
    ea80:	csel	w11, w11, w9, lt  // lt = tstop
    ea84:	asr	w11, w11, #3
    ea88:	ldrb	w11, [x8, w11, sxtw]
    ea8c:	and	w12, w9, #0x7
    ea90:	lsr	w11, w11, w12
    ea94:	tbz	w11, #0, ea64 <xre_compile_fastmap@@Base+0x1f8>
    ea98:	strb	w23, [x2, x10]
    ea9c:	b	ea64 <xre_compile_fastmap@@Base+0x1f8>
    eaa0:	ldrb	w9, [x26]
    eaa4:	cmp	x9, #0x1f
    eaa8:	b.hi	eb04 <xre_compile_fastmap@@Base+0x298>  // b.pmore
    eaac:	add	x0, x22, x9, lsl #3
    eab0:	stp	x1, x2, [x29, #-64]
    eab4:	sub	x2, x14, x9, lsl #3
    eab8:	mov	w1, #0x1                   	// #1
    eabc:	stp	w18, w3, [x29, #8]
    eac0:	mov	x25, x13
    eac4:	mov	x20, x15
    eac8:	bl	4f10 <memset@plt>
    eacc:	ldp	x1, x2, [x29, #-64]
    ead0:	ldp	w18, w3, [x29, #8]
    ead4:	ldrb	w9, [x26]
    ead8:	adrp	x17, 2b000 <xexit@@Base+0x14b84>
    eadc:	add	x17, x17, #0x5e0
    eae0:	mov	w16, #0x13                  	// #19
    eae4:	mov	x15, x20
    eae8:	mov	w14, #0x100                 	// #256
    eaec:	movi	v1.16b, #0x1
    eaf0:	mov	x13, x25
    eaf4:	mov	w25, wzr
    eaf8:	mov	w8, w24
    eafc:	mov	x26, x28
    eb00:	cbz	w9, e944 <xre_compile_fastmap@@Base+0xd8>
    eb04:	add	x8, x21, #0x2
    eb08:	lsl	x10, x9, #3
    eb0c:	b	eb20 <xre_compile_fastmap@@Base+0x2b4>
    eb10:	add	x10, x9, #0x1
    eb14:	cmp	x10, #0x1
    eb18:	mov	x10, x9
    eb1c:	b.le	ee2c <xre_compile_fastmap@@Base+0x5c0>
    eb20:	sub	x9, x10, #0x1
    eb24:	add	w11, w9, #0x7
    eb28:	cmp	w9, #0x0
    eb2c:	csel	w11, w11, w9, lt  // lt = tstop
    eb30:	asr	w11, w11, #3
    eb34:	ldrb	w11, [x8, w11, sxtw]
    eb38:	and	w12, w9, #0x7
    eb3c:	lsr	w11, w11, w12
    eb40:	tbnz	w11, #0, eb10 <xre_compile_fastmap@@Base+0x2a4>
    eb44:	strb	w23, [x2, x10]
    eb48:	b	eb10 <xre_compile_fastmap@@Base+0x2a4>
    eb4c:	ldrb	w9, [x21, #3]
    eb50:	ldrsb	w8, [x21, #4]
    eb54:	add	x26, x21, #0x5
    eb58:	bfi	w9, w8, #8, #24
    eb5c:	mov	w8, w24
    eb60:	cbnz	w9, e944 <xre_compile_fastmap@@Base+0xd8>
    eb64:	mov	w20, #0x1                   	// #1
    eb68:	ldrb	w8, [x21, #1]
    eb6c:	ldrsb	x9, [x21, #2]
    eb70:	bfi	x8, x9, #8, #56
    eb74:	add	x9, x21, #0x3
    eb78:	add	x26, x9, x8
    eb7c:	cmp	x26, x28
    eb80:	b.cs	ec00 <xre_compile_fastmap@@Base+0x394>  // b.hs, b.nlast
    eb84:	cmp	w24, w18
    eb88:	b.ne	ebf0 <xre_compile_fastmap@@Base+0x384>  // b.any
    eb8c:	ldr	w8, [x15]
    eb90:	mul	w8, w8, w16
    eb94:	cmp	w18, w8
    eb98:	b.hi	eec4 <xre_compile_fastmap@@Base+0x658>  // b.pmore
    eb9c:	lsl	w8, w18, #1
    eba0:	sub	x0, sp, w8, uxtw #3
    eba4:	stp	w8, w3, [x29, #8]
    eba8:	stp	x0, x9, [x29, #-72]
    ebac:	mov	sp, x0
    ebb0:	mov	w8, w18
    ebb4:	stur	x2, [x29, #-56]
    ebb8:	lsl	x2, x8, #3
    ebbc:	bl	4db0 <memcpy@plt>
    ebc0:	adrp	x15, 2a000 <xexit@@Base+0x13b84>
    ebc4:	ldp	x9, x2, [x29, #-64]
    ebc8:	ldp	w18, w3, [x29, #8]
    ebcc:	ldr	x15, [x15, #3952]
    ebd0:	ldur	x1, [x29, #-72]
    ebd4:	adrp	x17, 2b000 <xexit@@Base+0x14b84>
    ebd8:	adrp	x13, 16000 <htab_collisions@@Base+0x8>
    ebdc:	add	x17, x17, #0x5e0
    ebe0:	mov	w16, #0x13                  	// #19
    ebe4:	mov	w14, #0x100                 	// #256
    ebe8:	movi	v1.16b, #0x1
    ebec:	add	x13, x13, #0xec0
    ebf0:	add	w8, w24, #0x1
    ebf4:	str	x26, [x1, w24, uxtw #3]
    ebf8:	mov	w24, w8
    ebfc:	b	ec0c <xre_compile_fastmap@@Base+0x3a0>
    ec00:	ldrb	w8, [x19, #56]
    ec04:	orr	w8, w8, #0x1
    ec08:	strb	w8, [x19, #56]
    ec0c:	add	x8, x21, #0x5
    ec10:	cmp	w20, #0x0
    ec14:	csel	x26, x9, x8, eq  // eq = none
    ec18:	mov	w8, w24
    ec1c:	b	e944 <xre_compile_fastmap@@Base+0xd8>
    ec20:	mov	x8, xzr
    ec24:	tbnz	w3, #0, ec38 <xre_compile_fastmap@@Base+0x3cc>
    ec28:	b	ec5c <xre_compile_fastmap@@Base+0x3f0>
    ec2c:	add	x8, x8, #0x1
    ec30:	cmp	x8, #0x100
    ec34:	b.eq	ee2c <xre_compile_fastmap@@Base+0x5c0>  // b.none
    ec38:	add	x9, x17, x8
    ec3c:	ldrb	w9, [x9, #5]
    ec40:	cmp	w9, #0x1
    ec44:	b.ne	ec2c <xre_compile_fastmap@@Base+0x3c0>  // b.any
    ec48:	strb	w23, [x22, x8]
    ec4c:	b	ec2c <xre_compile_fastmap@@Base+0x3c0>
    ec50:	add	x8, x8, #0x8
    ec54:	cmp	x8, #0x100
    ec58:	b.eq	ee2c <xre_compile_fastmap@@Base+0x5c0>  // b.none
    ec5c:	add	x9, x17, x8
    ec60:	ldur	d0, [x9, #5]
    ec64:	cmeq	v0.8b, v0.8b, v8.8b
    ec68:	umov	w9, v0.b[0]
    ec6c:	tbz	w9, #0, eccc <xre_compile_fastmap@@Base+0x460>
    ec70:	add	x9, x27, x8
    ec74:	sturb	w23, [x9, #-7]
    ec78:	umov	w9, v0.b[1]
    ec7c:	tbnz	w9, #0, ecd4 <xre_compile_fastmap@@Base+0x468>
    ec80:	umov	w9, v0.b[2]
    ec84:	tbz	w9, #0, ece4 <xre_compile_fastmap@@Base+0x478>
    ec88:	add	x9, x27, x8
    ec8c:	sturb	w23, [x9, #-5]
    ec90:	umov	w9, v0.b[3]
    ec94:	tbnz	w9, #0, ecec <xre_compile_fastmap@@Base+0x480>
    ec98:	umov	w9, v0.b[4]
    ec9c:	tbz	w9, #0, ecfc <xre_compile_fastmap@@Base+0x490>
    eca0:	add	x9, x27, x8
    eca4:	sturb	w23, [x9, #-3]
    eca8:	umov	w9, v0.b[5]
    ecac:	tbnz	w9, #0, ed04 <xre_compile_fastmap@@Base+0x498>
    ecb0:	umov	w9, v0.b[6]
    ecb4:	tbz	w9, #0, ed14 <xre_compile_fastmap@@Base+0x4a8>
    ecb8:	add	x9, x27, x8
    ecbc:	sturb	w23, [x9, #-1]
    ecc0:	umov	w9, v0.b[7]
    ecc4:	tbz	w9, #0, ec50 <xre_compile_fastmap@@Base+0x3e4>
    ecc8:	b	ed1c <xre_compile_fastmap@@Base+0x4b0>
    eccc:	umov	w9, v0.b[1]
    ecd0:	tbz	w9, #0, ec80 <xre_compile_fastmap@@Base+0x414>
    ecd4:	add	x9, x27, x8
    ecd8:	sturb	w23, [x9, #-6]
    ecdc:	umov	w9, v0.b[2]
    ece0:	tbnz	w9, #0, ec88 <xre_compile_fastmap@@Base+0x41c>
    ece4:	umov	w9, v0.b[3]
    ece8:	tbz	w9, #0, ec98 <xre_compile_fastmap@@Base+0x42c>
    ecec:	add	x9, x27, x8
    ecf0:	sturb	w23, [x9, #-4]
    ecf4:	umov	w9, v0.b[4]
    ecf8:	tbnz	w9, #0, eca0 <xre_compile_fastmap@@Base+0x434>
    ecfc:	umov	w9, v0.b[5]
    ed00:	tbz	w9, #0, ecb0 <xre_compile_fastmap@@Base+0x444>
    ed04:	add	x9, x27, x8
    ed08:	sturb	w23, [x9, #-2]
    ed0c:	umov	w9, v0.b[6]
    ed10:	tbnz	w9, #0, ecb8 <xre_compile_fastmap@@Base+0x44c>
    ed14:	umov	w9, v0.b[7]
    ed18:	tbz	w9, #0, ec50 <xre_compile_fastmap@@Base+0x3e4>
    ed1c:	strb	w23, [x27, x8]
    ed20:	b	ec50 <xre_compile_fastmap@@Base+0x3e4>
    ed24:	mov	x8, xzr
    ed28:	tbnz	w3, #0, ed3c <xre_compile_fastmap@@Base+0x4d0>
    ed2c:	b	ed60 <xre_compile_fastmap@@Base+0x4f4>
    ed30:	add	x8, x8, #0x1
    ed34:	cmp	x8, #0x100
    ed38:	b.eq	ee2c <xre_compile_fastmap@@Base+0x5c0>  // b.none
    ed3c:	add	x9, x17, x8
    ed40:	ldrb	w9, [x9, #5]
    ed44:	cmp	w9, #0x1
    ed48:	b.eq	ed30 <xre_compile_fastmap@@Base+0x4c4>  // b.none
    ed4c:	strb	w23, [x22, x8]
    ed50:	b	ed30 <xre_compile_fastmap@@Base+0x4c4>
    ed54:	add	x8, x8, #0x8
    ed58:	cmp	x8, #0x100
    ed5c:	b.eq	ee2c <xre_compile_fastmap@@Base+0x5c0>  // b.none
    ed60:	add	x9, x17, x8
    ed64:	ldur	d0, [x9, #5]
    ed68:	cmeq	v0.8b, v0.8b, v8.8b
    ed6c:	mvn	v0.8b, v0.8b
    ed70:	umov	w9, v0.b[0]
    ed74:	tbz	w9, #0, edd4 <xre_compile_fastmap@@Base+0x568>
    ed78:	add	x9, x27, x8
    ed7c:	sturb	w23, [x9, #-7]
    ed80:	umov	w9, v0.b[1]
    ed84:	tbnz	w9, #0, eddc <xre_compile_fastmap@@Base+0x570>
    ed88:	umov	w9, v0.b[2]
    ed8c:	tbz	w9, #0, edec <xre_compile_fastmap@@Base+0x580>
    ed90:	add	x9, x27, x8
    ed94:	sturb	w23, [x9, #-5]
    ed98:	umov	w9, v0.b[3]
    ed9c:	tbnz	w9, #0, edf4 <xre_compile_fastmap@@Base+0x588>
    eda0:	umov	w9, v0.b[4]
    eda4:	tbz	w9, #0, ee04 <xre_compile_fastmap@@Base+0x598>
    eda8:	add	x9, x27, x8
    edac:	sturb	w23, [x9, #-3]
    edb0:	umov	w9, v0.b[5]
    edb4:	tbnz	w9, #0, ee0c <xre_compile_fastmap@@Base+0x5a0>
    edb8:	umov	w9, v0.b[6]
    edbc:	tbz	w9, #0, ee1c <xre_compile_fastmap@@Base+0x5b0>
    edc0:	add	x9, x27, x8
    edc4:	sturb	w23, [x9, #-1]
    edc8:	umov	w9, v0.b[7]
    edcc:	tbz	w9, #0, ed54 <xre_compile_fastmap@@Base+0x4e8>
    edd0:	b	ee24 <xre_compile_fastmap@@Base+0x5b8>
    edd4:	umov	w9, v0.b[1]
    edd8:	tbz	w9, #0, ed88 <xre_compile_fastmap@@Base+0x51c>
    eddc:	add	x9, x27, x8
    ede0:	sturb	w23, [x9, #-6]
    ede4:	umov	w9, v0.b[2]
    ede8:	tbnz	w9, #0, ed90 <xre_compile_fastmap@@Base+0x524>
    edec:	umov	w9, v0.b[3]
    edf0:	tbz	w9, #0, eda0 <xre_compile_fastmap@@Base+0x534>
    edf4:	add	x9, x27, x8
    edf8:	sturb	w23, [x9, #-4]
    edfc:	umov	w9, v0.b[4]
    ee00:	tbnz	w9, #0, eda8 <xre_compile_fastmap@@Base+0x53c>
    ee04:	umov	w9, v0.b[5]
    ee08:	tbz	w9, #0, edb8 <xre_compile_fastmap@@Base+0x54c>
    ee0c:	add	x9, x27, x8
    ee10:	sturb	w23, [x9, #-2]
    ee14:	umov	w9, v0.b[6]
    ee18:	tbnz	w9, #0, edc0 <xre_compile_fastmap@@Base+0x554>
    ee1c:	umov	w9, v0.b[7]
    ee20:	tbz	w9, #0, ed54 <xre_compile_fastmap@@Base+0x4e8>
    ee24:	strb	w23, [x27, x8]
    ee28:	b	ed54 <xre_compile_fastmap@@Base+0x4e8>
    ee2c:	mov	w25, wzr
    ee30:	mov	w8, w24
    ee34:	mov	x26, x28
    ee38:	b	e944 <xre_compile_fastmap@@Base+0xd8>
    ee3c:	add	x26, x21, #0x5
    ee40:	mov	w8, w24
    ee44:	b	e944 <xre_compile_fastmap@@Base+0xd8>
    ee48:	ldrb	w9, [x19, #56]
    ee4c:	mov	w25, wzr
    ee50:	mov	w8, w24
    ee54:	mov	x26, x28
    ee58:	tbz	w9, #0, e944 <xre_compile_fastmap@@Base+0xd8>
    ee5c:	b	ee88 <xre_compile_fastmap@@Base+0x61c>
    ee60:	ldrb	w8, [x19, #56]
    ee64:	and	w9, w8, #0x1
    ee68:	orr	w9, w9, w25
    ee6c:	and	w8, w8, #0xfe
    ee70:	orr	w8, w9, w8
    ee74:	strb	w8, [x19, #56]
    ee78:	cbz	w24, ee88 <xre_compile_fastmap@@Base+0x61c>
    ee7c:	sub	w8, w24, #0x1
    ee80:	ldr	x26, [x1, w8, uxtw #3]
    ee84:	b	e940 <xre_compile_fastmap@@Base+0xd4>
    ee88:	mov	w0, wzr
    ee8c:	b	eea0 <xre_compile_fastmap@@Base+0x634>
    ee90:	ldrb	w8, [x19, #56]
    ee94:	mov	w0, wzr
    ee98:	orr	w8, w8, #0x1
    ee9c:	strb	w8, [x19, #56]
    eea0:	mov	sp, x29
    eea4:	ldp	x20, x19, [sp, #96]
    eea8:	ldp	x22, x21, [sp, #80]
    eeac:	ldp	x24, x23, [sp, #64]
    eeb0:	ldp	x26, x25, [sp, #48]
    eeb4:	ldp	x28, x27, [sp, #32]
    eeb8:	ldp	x29, x30, [sp, #16]
    eebc:	ldr	d8, [sp], #112
    eec0:	ret
    eec4:	mov	w0, #0xfffffffe            	// #-2
    eec8:	b	eea0 <xre_compile_fastmap@@Base+0x634>
    eecc:	bl	5190 <abort@plt>

000000000000eed0 <xre_set_registers@@Base>:
    eed0:	ldrb	w8, [x0, #56]
    eed4:	cmp	w2, #0x0
    eed8:	csel	x9, xzr, x4, eq  // eq = none
    eedc:	csel	x10, xzr, x3, eq  // eq = none
    eee0:	and	w8, w8, #0xfffffff9
    eee4:	orr	w11, w8, #0x2
    eee8:	csel	w8, w8, w11, eq  // eq = none
    eeec:	strb	w8, [x0, #56]
    eef0:	str	w2, [x1]
    eef4:	stp	x10, x9, [x1, #8]
    eef8:	ret

000000000000eefc <xre_search@@Base>:
    eefc:	mov	x7, x5
    ef00:	mov	w6, w4
    ef04:	mov	w5, w3
    ef08:	mov	w4, w2
    ef0c:	mov	x3, x1
    ef10:	str	w2, [sp, #-32]!
    ef14:	mov	x1, xzr
    ef18:	mov	w2, wzr
    ef1c:	stp	x29, x30, [sp, #16]
    ef20:	add	x29, sp, #0x10
    ef24:	bl	5260 <xre_search_2@plt>
    ef28:	ldp	x29, x30, [sp, #16]
    ef2c:	add	sp, sp, #0x20
    ef30:	ret

000000000000ef34 <xre_search_2@@Base>:
    ef34:	sub	sp, sp, #0x80
    ef38:	stp	x28, x27, [sp, #48]
    ef3c:	mov	w27, #0xffffffff            	// #-1
    ef40:	stp	x29, x30, [sp, #32]
    ef44:	stp	x26, x25, [sp, #64]
    ef48:	stp	x24, x23, [sp, #80]
    ef4c:	stp	x22, x21, [sp, #96]
    ef50:	stp	x20, x19, [sp, #112]
    ef54:	add	x29, sp, #0x20
    ef58:	tbnz	w5, #31, f164 <xre_search_2@@Base+0x230>
    ef5c:	add	w25, w4, w2
    ef60:	mov	w26, w5
    ef64:	mov	w20, w4
    ef68:	mov	w22, w2
    ef6c:	subs	w8, w25, w5
    ef70:	str	x1, [sp, #16]
    ef74:	b.lt	f164 <xre_search_2@@Base+0x230>  // b.tstop
    ef78:	add	w9, w6, w26
    ef7c:	ldp	x27, x23, [x0, #32]
    ef80:	cmp	w9, w25
    ef84:	csel	w8, w8, w6, gt
    ef88:	cmp	w9, #0x0
    ef8c:	csneg	w28, w8, w26, ge  // ge = tcont
    ef90:	mov	x21, x3
    ef94:	mov	x24, x0
    ef98:	cmp	w28, #0x1
    ef9c:	b.lt	efdc <xre_search_2@@Base+0xa8>  // b.tstop
    efa0:	ldr	x8, [x24, #16]
    efa4:	cbz	x8, efdc <xre_search_2@@Base+0xa8>
    efa8:	ldr	x8, [x24]
    efac:	ldrb	w8, [x8]
    efb0:	cmp	w8, #0xb
    efb4:	b.eq	efc8 <xre_search_2@@Base+0x94>  // b.none
    efb8:	cmp	w8, #0x9
    efbc:	b.ne	efdc <xre_search_2@@Base+0xa8>  // b.any
    efc0:	ldrsb	w8, [x24, #56]
    efc4:	tbnz	w8, #31, efdc <xre_search_2@@Base+0xa8>
    efc8:	cmp	w26, #0x0
    efcc:	b.le	efd8 <xre_search_2@@Base+0xa4>
    efd0:	mov	w27, #0xffffffff            	// #-1
    efd4:	b	f164 <xre_search_2@@Base+0x230>
    efd8:	mov	w28, #0x1                   	// #1
    efdc:	ldr	w19, [x29, #96]
    efe0:	stur	x7, [x29, #-8]
    efe4:	cbz	x27, f134 <xre_search_2@@Base+0x200>
    efe8:	ldrb	w8, [x24, #56]
    efec:	str	w19, [sp, #12]
    eff0:	tbnz	w8, #3, f010 <xre_search_2@@Base+0xdc>
    eff4:	mov	x0, x24
    eff8:	bl	e870 <xre_compile_fastmap@@Base+0x4>
    effc:	ldur	x7, [x29, #-8]
    f000:	cmn	w0, #0x2
    f004:	b.ne	f010 <xre_search_2@@Base+0xdc>  // b.any
    f008:	mov	w27, #0xfffffffe            	// #-2
    f00c:	b	f164 <xre_search_2@@Base+0x230>
    f010:	sub	x8, x21, w22, sxtw
    f014:	str	x8, [sp]
    f018:	cbz	x23, f188 <xre_search_2@@Base+0x254>
    f01c:	ldr	x19, [sp, #16]
    f020:	cmp	w26, w25
    f024:	b.ge	f0c0 <xre_search_2@@Base+0x18c>  // b.tcont
    f028:	ldrb	w8, [x24, #56]
    f02c:	tbnz	w8, #0, f0c0 <xre_search_2@@Base+0x18c>
    f030:	cmp	w28, #0x0
    f034:	b.le	f094 <xre_search_2@@Base+0x160>
    f038:	add	w8, w26, w28
    f03c:	sub	w9, w28, w22
    f040:	cmp	w8, w22
    f044:	ccmp	w26, w22, #0x0, ge  // ge = tcont
    f048:	add	w9, w9, w26
    f04c:	csel	w9, wzr, w9, ge  // ge = tcont
    f050:	cmp	w28, w9
    f054:	b.le	f08c <xre_search_2@@Base+0x158>
    f058:	ldr	x10, [sp]
    f05c:	cmp	w26, w22
    f060:	csel	x10, x19, x10, lt  // lt = tstop
    f064:	add	x10, x10, w26, sxtw
    f068:	ldrb	w11, [x10]
    f06c:	ldrb	w11, [x23, x11]
    f070:	ldrb	w11, [x27, x11]
    f074:	cbnz	w11, f08c <xre_search_2@@Base+0x158>
    f078:	sub	w28, w28, #0x1
    f07c:	cmp	w28, w9
    f080:	add	x10, x10, #0x1
    f084:	b.gt	f068 <xre_search_2@@Base+0x134>
    f088:	mov	w28, w9
    f08c:	sub	w26, w8, w28
    f090:	b	f0c0 <xre_search_2@@Base+0x18c>
    f094:	sxtw	x8, w26
    f098:	cmp	w26, w22
    f09c:	sub	x9, x8, w22, sxtw
    f0a0:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
    f0a4:	add	x9, x21, x9
    f0a8:	add	x8, x19, x8
    f0ac:	csel	x8, x8, x9, ne  // ne = any
    f0b0:	ldrb	w8, [x8]
    f0b4:	ldrb	w8, [x23, x8]
    f0b8:	ldrb	w8, [x27, x8]
    f0bc:	cbz	w8, f108 <xre_search_2@@Base+0x1d4>
    f0c0:	tbnz	w28, #31, f0d4 <xre_search_2@@Base+0x1a0>
    f0c4:	cmp	w26, w25
    f0c8:	b.ne	f0d4 <xre_search_2@@Base+0x1a0>  // b.any
    f0cc:	ldrb	w8, [x24, #56]
    f0d0:	tbz	w8, #0, efd0 <xre_search_2@@Base+0x9c>
    f0d4:	mov	x6, x7
    f0d8:	ldr	w7, [sp, #12]
    f0dc:	mov	x0, x24
    f0e0:	mov	x1, x19
    f0e4:	mov	w2, w22
    f0e8:	mov	x3, x21
    f0ec:	mov	w4, w20
    f0f0:	mov	w5, w26
    f0f4:	bl	f318 <xre_match@@Base+0x20>
    f0f8:	tbz	w0, #31, f160 <xre_search_2@@Base+0x22c>
    f0fc:	ldur	x7, [x29, #-8]
    f100:	cmn	w0, #0x2
    f104:	b.eq	f008 <xre_search_2@@Base+0xd4>  // b.none
    f108:	cbz	w28, efd0 <xre_search_2@@Base+0x9c>
    f10c:	cmp	w28, #0x0
    f110:	mov	w8, #0xffffffff            	// #-1
    f114:	mov	w9, #0x1                   	// #1
    f118:	cneg	w8, w8, le
    f11c:	cneg	w9, w9, le
    f120:	add	w28, w8, w28
    f124:	add	w26, w9, w26
    f128:	cmp	w26, w25
    f12c:	b.lt	f028 <xre_search_2@@Base+0xf4>  // b.tstop
    f130:	b	f0c0 <xre_search_2@@Base+0x18c>
    f134:	ldr	x1, [sp, #16]
    f138:	mov	x0, x24
    f13c:	mov	w2, w22
    f140:	mov	x3, x21
    f144:	mov	w4, w20
    f148:	mov	w5, w26
    f14c:	mov	x6, x7
    f150:	mov	x25, x7
    f154:	mov	w7, w19
    f158:	bl	f318 <xre_match@@Base+0x20>
    f15c:	tbnz	w0, #31, f29c <xre_search_2@@Base+0x368>
    f160:	mov	w27, w26
    f164:	mov	w0, w27
    f168:	ldp	x20, x19, [sp, #112]
    f16c:	ldp	x22, x21, [sp, #96]
    f170:	ldp	x24, x23, [sp, #80]
    f174:	ldp	x26, x25, [sp, #64]
    f178:	ldp	x28, x27, [sp, #48]
    f17c:	ldp	x29, x30, [sp, #32]
    f180:	add	sp, sp, #0x80
    f184:	ret
    f188:	mov	w23, #0xffffffff            	// #-1
    f18c:	mov	w19, #0x1                   	// #1
    f190:	cmp	w26, w25
    f194:	b.ge	f230 <xre_search_2@@Base+0x2fc>  // b.tcont
    f198:	ldrb	w8, [x24, #56]
    f19c:	tbnz	w8, #0, f230 <xre_search_2@@Base+0x2fc>
    f1a0:	cmp	w28, #0x0
    f1a4:	b.le	f204 <xre_search_2@@Base+0x2d0>
    f1a8:	add	w8, w26, w28
    f1ac:	sub	w9, w28, w22
    f1b0:	cmp	w8, w22
    f1b4:	ccmp	w26, w22, #0x0, ge  // ge = tcont
    f1b8:	add	w9, w9, w26
    f1bc:	csel	w9, wzr, w9, ge  // ge = tcont
    f1c0:	cmp	w28, w9
    f1c4:	b.le	f1fc <xre_search_2@@Base+0x2c8>
    f1c8:	ldr	x10, [sp, #16]
    f1cc:	ldr	x11, [sp]
    f1d0:	cmp	w26, w22
    f1d4:	csel	x10, x10, x11, lt  // lt = tstop
    f1d8:	add	x10, x10, w26, sxtw
    f1dc:	ldrb	w11, [x10]
    f1e0:	ldrb	w11, [x27, x11]
    f1e4:	cbnz	w11, f1fc <xre_search_2@@Base+0x2c8>
    f1e8:	sub	w28, w28, #0x1
    f1ec:	cmp	w28, w9
    f1f0:	add	x10, x10, #0x1
    f1f4:	b.gt	f1dc <xre_search_2@@Base+0x2a8>
    f1f8:	mov	w28, w9
    f1fc:	sub	w26, w8, w28
    f200:	b	f230 <xre_search_2@@Base+0x2fc>
    f204:	ldr	x10, [sp, #16]
    f208:	sxtw	x8, w26
    f20c:	cmp	w26, w22
    f210:	sub	x9, x8, w22, sxtw
    f214:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
    f218:	add	x9, x21, x9
    f21c:	add	x8, x10, x8
    f220:	csel	x8, x8, x9, ne  // ne = any
    f224:	ldrb	w8, [x8]
    f228:	ldrb	w8, [x27, x8]
    f22c:	cbz	w8, f278 <xre_search_2@@Base+0x344>
    f230:	tbnz	w28, #31, f244 <xre_search_2@@Base+0x310>
    f234:	cmp	w26, w25
    f238:	b.ne	f244 <xre_search_2@@Base+0x310>  // b.any
    f23c:	ldrb	w8, [x24, #56]
    f240:	tbz	w8, #0, efd0 <xre_search_2@@Base+0x9c>
    f244:	ldr	x1, [sp, #16]
    f248:	mov	x6, x7
    f24c:	ldr	w7, [sp, #12]
    f250:	mov	x0, x24
    f254:	mov	w2, w22
    f258:	mov	x3, x21
    f25c:	mov	w4, w20
    f260:	mov	w5, w26
    f264:	bl	f318 <xre_match@@Base+0x20>
    f268:	tbz	w0, #31, f160 <xre_search_2@@Base+0x22c>
    f26c:	ldur	x7, [x29, #-8]
    f270:	cmn	w0, #0x2
    f274:	b.eq	f008 <xre_search_2@@Base+0xd4>  // b.none
    f278:	cbz	w28, efd0 <xre_search_2@@Base+0x9c>
    f27c:	cmp	w28, #0x0
    f280:	cneg	w8, w23, le
    f284:	cneg	w9, w19, le
    f288:	add	w28, w8, w28
    f28c:	add	w26, w9, w26
    f290:	cmp	w26, w25
    f294:	b.lt	f198 <xre_search_2@@Base+0x264>  // b.tstop
    f298:	b	f230 <xre_search_2@@Base+0x2fc>
    f29c:	mov	w23, #0x1                   	// #1
    f2a0:	mov	w27, w26
    f2a4:	mov	x6, x25
    f2a8:	mov	w25, #0xffffffff            	// #-1
    f2ac:	cmn	w0, #0x2
    f2b0:	b.eq	f008 <xre_search_2@@Base+0xd4>  // b.none
    f2b4:	cbz	w28, efd0 <xre_search_2@@Base+0x9c>
    f2b8:	cmp	w28, #0x0
    f2bc:	ldr	x1, [sp, #16]
    f2c0:	cneg	w9, w23, le
    f2c4:	add	w27, w9, w27
    f2c8:	cneg	w8, w25, le
    f2cc:	mov	x0, x24
    f2d0:	mov	w2, w22
    f2d4:	mov	x3, x21
    f2d8:	mov	w4, w20
    f2dc:	mov	w5, w27
    f2e0:	mov	w7, w19
    f2e4:	add	w28, w8, w28
    f2e8:	bl	f318 <xre_match@@Base+0x20>
    f2ec:	ldur	x6, [x29, #-8]
    f2f0:	tbnz	w0, #31, f2ac <xre_search_2@@Base+0x378>
    f2f4:	b	f164 <xre_search_2@@Base+0x230>

000000000000f2f8 <xre_match@@Base>:
    f2f8:	mov	x6, x4
    f2fc:	mov	w4, w2
    f300:	mov	w5, w3
    f304:	mov	x3, x1
    f308:	mov	x1, xzr
    f30c:	mov	w2, wzr
    f310:	mov	w7, w4
    f314:	b	f318 <xre_match@@Base+0x20>
    f318:	stp	x29, x30, [sp, #-96]!
    f31c:	stp	x28, x27, [sp, #16]
    f320:	stp	x26, x25, [sp, #32]
    f324:	stp	x24, x23, [sp, #48]
    f328:	stp	x22, x21, [sp, #64]
    f32c:	stp	x20, x19, [sp, #80]
    f330:	mov	x29, sp
    f334:	sub	sp, sp, #0x1b0
    f338:	ldp	x13, x9, [x0, #40]
    f33c:	ldr	x26, [x0]
    f340:	ldr	x8, [x0, #16]
    f344:	mov	x27, x3
    f348:	add	x11, x9, #0x1
    f34c:	lsl	x12, x11, #3
    f350:	stur	x0, [x29, #-136]
    f354:	stur	x9, [x29, #-96]
    f358:	cbz	x9, f3dc <xre_match@@Base+0xe4>
    f35c:	add	x10, x12, #0xf
    f360:	mov	x9, sp
    f364:	and	x10, x10, #0xfffffffffffffff0
    f368:	sub	x19, x9, x10
    f36c:	mov	sp, x19
    f370:	mov	x9, sp
    f374:	sub	x28, x9, x10
    f378:	mov	sp, x28
    f37c:	mov	x9, sp
    f380:	sub	x16, x9, x10
    f384:	mov	sp, x16
    f388:	mov	x9, sp
    f38c:	sub	x17, x9, x10
    f390:	mov	sp, x17
    f394:	mov	x9, sp
    f398:	sub	x18, x9, x10
    f39c:	mov	sp, x18
    f3a0:	mov	x9, sp
    f3a4:	sub	x3, x9, x10
    f3a8:	mov	sp, x3
    f3ac:	mov	x9, sp
    f3b0:	sub	x22, x9, x10
    f3b4:	mov	sp, x22
    f3b8:	mov	x9, sp
    f3bc:	sub	x14, x9, x10
    f3c0:	mov	sp, x14
    f3c4:	mov	x9, sp
    f3c8:	sub	x10, x9, x10
    f3cc:	mov	sp, x10
    f3d0:	mov	w0, #0xffffffff            	// #-1
    f3d4:	tbz	w5, #31, f408 <xre_match@@Base+0x110>
    f3d8:	b	113ec <xre_match@@Base+0x20f4>
    f3dc:	mov	x19, xzr
    f3e0:	mov	x28, xzr
    f3e4:	mov	x16, xzr
    f3e8:	mov	x17, xzr
    f3ec:	mov	x22, xzr
    f3f0:	mov	x18, xzr
    f3f4:	mov	x3, xzr
    f3f8:	mov	x14, xzr
    f3fc:	mov	x10, xzr
    f400:	mov	w0, #0xffffffff            	// #-1
    f404:	tbnz	w5, #31, 113ec <xre_match@@Base+0x20f4>
    f408:	add	w9, w4, w2
    f40c:	cmp	w9, w5
    f410:	stur	x5, [x29, #-168]
    f414:	b.lt	113ec <xre_match@@Base+0x20f4>  // b.tstop
    f418:	sub	x9, x29, #0x68
    f41c:	stur	x10, [x9, #-256]
    f420:	sub	x9, x29, #0x60
    f424:	cmp	x11, #0x2
    f428:	add	x8, x26, x8
    f42c:	stur	x14, [x9, #-256]
    f430:	stur	x13, [x29, #-160]
    f434:	stur	x12, [x29, #-200]
    f438:	stur	x6, [x29, #-248]
    f43c:	stur	x11, [x29, #-184]
    f440:	stur	x8, [x29, #-72]
    f444:	b.cc	f490 <xre_match@@Base+0x198>  // b.lo, b.ul, b.last
    f448:	ldur	x14, [x29, #-96]
    f44c:	adrp	x13, 2b000 <xexit@@Base+0x14b84>
    f450:	add	x8, x22, #0x8
    f454:	add	x9, x19, #0x8
    f458:	add	x10, x28, #0x8
    f45c:	add	x11, x16, #0x8
    f460:	add	x12, x17, #0x8
    f464:	add	x13, x13, #0x5e0
    f468:	str	x13, [x12], #8
    f46c:	str	x13, [x11], #8
    f470:	str	x13, [x10], #8
    f474:	str	x13, [x9], #8
    f478:	ldrb	w15, [x8]
    f47c:	subs	x14, x14, #0x1
    f480:	and	w15, w15, #0xe0
    f484:	orr	w15, w15, #0x3
    f488:	strb	w15, [x8], #8
    f48c:	b.ne	f468 <xre_match@@Base+0x170>  // b.any
    f490:	sub	x8, x29, #0x50
    f494:	stur	x17, [x8, #-256]
    f498:	sub	x8, x29, #0x48
    f49c:	stur	x16, [x8, #-256]
    f4a0:	ldur	x16, [x29, #-200]
    f4a4:	cmp	w4, #0x0
    f4a8:	cset	w17, eq  // eq = none
    f4ac:	cmp	x1, #0x0
    f4b0:	ldur	x25, [x29, #-168]
    f4b4:	add	x11, x18, #0x8
    f4b8:	add	x10, x18, x16
    f4bc:	mov	x6, x18
    f4c0:	cset	w18, ne  // ne = any
    f4c4:	sub	x8, x29, #0x28
    f4c8:	tst	w18, w17
    f4cc:	stur	xzr, [x8, #-256]
    f4d0:	sxtw	x8, w7
    f4d4:	csel	w21, w2, w4, ne  // ne = any
    f4d8:	csel	x9, x1, x27, ne  // ne = any
    f4dc:	csel	w27, wzr, w2, ne  // ne = any
    f4e0:	csel	x2, xzr, x1, ne  // ne = any
    f4e4:	sxtw	x17, w27
    f4e8:	add	x18, x2, x8
    f4ec:	add	x8, x9, x8
    f4f0:	sxtw	x20, w25
    f4f4:	cmp	w27, w7
    f4f8:	sub	x1, x29, #0x10
    f4fc:	add	x7, x2, x17
    f500:	sub	x8, x8, x17
    f504:	add	x0, x2, x20
    f508:	stur	x20, [x1, #-256]
    f50c:	add	x1, x9, x20
    f510:	csel	x20, x8, x9, lt  // lt = tstop
    f514:	csel	x4, x7, x18, lt  // lt = tstop
    f518:	cmp	w27, #0x1
    f51c:	cset	w8, lt  // lt = tstop
    f520:	cmp	w27, w25
    f524:	cset	w18, lt  // lt = tstop
    f528:	orr	w8, w8, w18
    f52c:	sub	x1, x1, x17
    f530:	cmp	w8, #0x0
    f534:	add	x15, x3, x16
    f538:	stur	x4, [x29, #-104]
    f53c:	csel	x4, x20, x4, ne  // ne = any
    f540:	csel	x25, x1, x0, ne  // ne = any
    f544:	cmp	w27, #0x0
    f548:	add	x12, x3, #0x8
    f54c:	csel	x8, x9, x2, eq  // eq = none
    f550:	cmp	x11, x15
    f554:	add	x14, x19, x16
    f558:	stur	x8, [x29, #-240]
    f55c:	cset	w8, cc  // cc = lo, ul, last
    f560:	cmp	x12, x10
    f564:	add	x13, x19, #0x8
    f568:	cset	w18, cc  // cc = lo, ul, last
    f56c:	cmp	x11, x14
    f570:	add	x16, x28, x16
    f574:	cset	w0, cc  // cc = lo, ul, last
    f578:	cmp	x13, x10
    f57c:	stur	x3, [x29, #-176]
    f580:	add	x3, x28, #0x8
    f584:	cset	w1, cc  // cc = lo, ul, last
    f588:	cmp	x11, x16
    f58c:	stur	x27, [x29, #-144]
    f590:	cset	w27, cc  // cc = lo, ul, last
    f594:	cmp	x3, x10
    f598:	cset	w10, cc  // cc = lo, ul, last
    f59c:	cmp	x12, x14
    f5a0:	cset	w14, cc  // cc = lo, ul, last
    f5a4:	cmp	x13, x15
    f5a8:	cset	w13, cc  // cc = lo, ul, last
    f5ac:	cmp	x12, x16
    f5b0:	add	x11, x19, #0x18
    f5b4:	sub	x12, x29, #0x70
    f5b8:	stur	x11, [x12, #-256]
    f5bc:	sub	x12, x29, #0x20
    f5c0:	cset	w11, cc  // cc = lo, ul, last
    f5c4:	cmp	x3, x15
    f5c8:	stur	x6, [x12, #-256]
    f5cc:	add	x12, x6, #0x18
    f5d0:	sub	x15, x29, #0x78
    f5d4:	stur	x12, [x15, #-256]
    f5d8:	ldur	x12, [x29, #-176]
    f5dc:	ldur	x5, [x29, #-96]
    f5e0:	sub	x15, x29, #0x80
    f5e4:	and	w8, w8, w18
    f5e8:	add	x12, x12, #0x18
    f5ec:	stur	x12, [x15, #-256]
    f5f0:	add	x12, x28, #0x18
    f5f4:	sub	x15, x29, #0x88
    f5f8:	stur	x12, [x15, #-256]
    f5fc:	and	w12, w0, w1
    f600:	mov	x6, x2
    f604:	mov	x2, x9
    f608:	add	x9, x5, #0x1
    f60c:	sub	x15, x29, #0x58
    f610:	stur	x9, [x15, #-256]
    f614:	orr	w8, w8, w12
    f618:	and	w9, w27, w10
    f61c:	orr	w8, w8, w9
    f620:	and	w9, w14, w13
    f624:	orr	w8, w8, w9
    f628:	cset	w9, cc  // cc = lo, ul, last
    f62c:	and	w9, w11, w9
    f630:	orr	w8, w8, w9
    f634:	sub	x9, x29, #0x3c
    f638:	and	x30, x5, #0xfffffffffffffffc
    f63c:	stur	w8, [x9, #-256]
    f640:	sub	x8, x29, #0x38
    f644:	stur	x30, [x8, #-256]
    f648:	orr	x8, x30, #0x1
    f64c:	sub	x9, x29, #0x90
    f650:	stur	x8, [x9, #-256]
    f654:	neg	x8, x17
    f658:	sub	x9, x29, #0x18
    f65c:	ldur	x17, [x29, #-72]
    f660:	stur	x8, [x9, #-256]
    f664:	add	x8, x2, w21, sxtw
    f668:	stur	x8, [x29, #-192]
    f66c:	sub	x8, x2, #0x1
    f670:	mov	w23, wzr
    f674:	sub	x24, x29, #0x40
    f678:	mov	x16, x20
    f67c:	mov	w18, #0x5                   	// #5
    f680:	mov	w27, #0x101                 	// #257
    f684:	mov	w0, #0x100                 	// #256
    f688:	mov	x15, x4
    f68c:	stur	x8, [x29, #-256]
    f690:	sub	x8, x7, #0x1
    f694:	stur	wzr, [x29, #-124]
    f698:	stur	xzr, [x29, #-152]
    f69c:	stur	w21, [x29, #-204]
    f6a0:	stp	x7, x2, [x29, #-88]
    f6a4:	stp	x6, x8, [x29, #-224]
    f6a8:	stur	x20, [x29, #-120]
    f6ac:	b	f6c4 <xre_match@@Base+0x3cc>
    f6b0:	ldur	x8, [x29, #-88]
    f6b4:	cmp	x25, x8
    f6b8:	ldur	x8, [x29, #-104]
    f6bc:	ccmp	x25, x6, #0x0, ls  // ls = plast
    f6c0:	csel	x15, x15, x8, cc  // cc = lo, ul, last
    f6c4:	cmp	x26, x17
    f6c8:	b.eq	f6d8 <xre_match@@Base+0x3e0>  // b.none
    f6cc:	mov	x12, x26
    f6d0:	stur	wzr, [x29, #-112]
    f6d4:	b	f7bc <xre_match@@Base+0x4c4>
    f6d8:	mov	x20, x25
    f6dc:	cmp	x20, x16
    f6e0:	b.eq	11300 <xre_match@@Base+0x2008>  // b.none
    f6e4:	ldp	x11, x8, [x29, #-152]
    f6e8:	ldur	x25, [x29, #-88]
    f6ec:	cmp	w8, #0x0
    f6f0:	cset	w8, ne  // ne = any
    f6f4:	cmp	x6, x11
    f6f8:	cset	w9, ls  // ls = plast
    f6fc:	and	w8, w8, w9
    f700:	ldur	x9, [x29, #-104]
    f704:	cmp	x11, x25
    f708:	cset	w10, ls  // ls = plast
    f70c:	and	w8, w10, w8
    f710:	cmp	x15, x9
    f714:	cset	w9, eq  // eq = none
    f718:	eor	w8, w8, w9
    f71c:	tbz	w8, #0, f728 <xre_match@@Base+0x430>
    f720:	cset	w8, ne  // ne = any
    f724:	b	f730 <xre_match@@Base+0x438>
    f728:	cmp	x20, x11
    f72c:	cset	w8, hi  // hi = pmore
    f730:	ldur	w9, [x29, #-124]
    f734:	cmp	w9, #0x0
    f738:	cset	w9, eq  // eq = none
    f73c:	orr	w8, w9, w8
    f740:	cbz	w23, 11308 <xre_match@@Base+0x2010>
    f744:	cbz	w8, 10c44 <xre_match@@Base+0x194c>
    f748:	ldur	x8, [x29, #-184]
    f74c:	cmp	x8, #0x2
    f750:	b.cc	f77c <xre_match@@Base+0x484>  // b.lo, b.ul, b.last
    f754:	ldur	x8, [x29, #-96]
    f758:	sub	x9, x29, #0x3c
    f75c:	ldur	w9, [x9, #-256]
    f760:	cmp	x8, #0x4
    f764:	cset	w8, cc  // cc = lo, ul, last
    f768:	orr	w8, w8, w9
    f76c:	tbz	w8, #0, 10b7c <xre_match@@Base+0x1884>
    f770:	ldur	x13, [x29, #-176]
    f774:	mov	w9, #0x1                   	// #1
    f778:	b	10bec <xre_match@@Base+0x18f4>
    f77c:	mov	w8, #0x1                   	// #1
    f780:	stur	w8, [x29, #-124]
    f784:	stur	x20, [x29, #-152]
    f788:	b	10c44 <xre_match@@Base+0x194c>
    f78c:	stur	wzr, [x29, #-112]
    f790:	mov	w23, w10
    f794:	ldrb	w8, [x26, #1]
    f798:	ldrsb	x9, [x26, #2]
    f79c:	bfi	x8, x9, #8, #56
    f7a0:	add	x8, x26, x8
    f7a4:	add	x12, x8, #0x3
    f7a8:	mov	x20, x25
    f7ac:	cmp	x12, x17
    f7b0:	mov	x25, x20
    f7b4:	mov	x26, x12
    f7b8:	b.eq	f6dc <xre_match@@Base+0x3e4>  // b.none
    f7bc:	ldrb	w8, [x12], #1
    f7c0:	cmp	w8, #0x1d
    f7c4:	b.hi	11420 <xre_match@@Base+0x2128>  // b.pmore
    f7c8:	adrp	x11, 16000 <htab_collisions@@Base+0x8>
    f7cc:	add	x11, x11, #0xefc
    f7d0:	adr	x9, f794 <xre_match@@Base+0x49c>
    f7d4:	ldrh	w10, [x11, x8, lsl #1]
    f7d8:	add	x9, x9, x10, lsl #2
    f7dc:	br	x9
    f7e0:	cmp	w8, #0x5
    f7e4:	cset	w9, eq  // eq = none
    f7e8:	cmp	x25, x15
    f7ec:	b.ne	f858 <xre_match@@Base+0x560>  // b.any
    f7f0:	cmp	x15, x16
    f7f4:	mov	x15, x16
    f7f8:	mov	x25, x2
    f7fc:	b.ne	f7e8 <xre_match@@Base+0x4f0>  // b.any
    f800:	b	10b70 <xre_match@@Base+0x1878>
    f804:	cmp	x25, x15
    f808:	b.ne	103b0 <xre_match@@Base+0x10b8>  // b.any
    f80c:	cmp	x15, x16
    f810:	mov	x15, x16
    f814:	mov	x25, x2
    f818:	b.ne	f804 <xre_match@@Base+0x50c>  // b.any
    f81c:	b	10b70 <xre_match@@Base+0x1878>
    f820:	cmp	x25, x15
    f824:	b.ne	1041c <xre_match@@Base+0x1124>  // b.any
    f828:	cmp	x15, x16
    f82c:	mov	x15, x16
    f830:	mov	x25, x2
    f834:	b.ne	f820 <xre_match@@Base+0x528>  // b.any
    f838:	b	10b70 <xre_match@@Base+0x1878>
    f83c:	cmp	x25, x15
    f840:	b.ne	10488 <xre_match@@Base+0x1190>  // b.any
    f844:	cmp	x15, x16
    f848:	mov	x15, x16
    f84c:	mov	x25, x2
    f850:	b.ne	f83c <xre_match@@Base+0x544>  // b.any
    f854:	b	10b70 <xre_match@@Base+0x1878>
    f858:	ldur	x11, [x29, #-160]
    f85c:	mov	x10, x25
    f860:	cbz	x11, f86c <xre_match@@Base+0x574>
    f864:	ldrb	w10, [x25]
    f868:	add	x10, x11, x10
    f86c:	ldrb	w11, [x10]
    f870:	ldrb	w10, [x12]
    f874:	cmp	w11, w10, lsl #3
    f878:	b.cs	1036c <xre_match@@Base+0x1074>  // b.hs, b.nlast
    f87c:	mov	x13, x12
    f880:	add	x12, x12, x11, lsr #3
    f884:	ldrb	w12, [x12, #1]
    f888:	and	w11, w11, #0x7
    f88c:	lsr	w11, w12, w11
    f890:	tbz	w11, #0, 10370 <xre_match@@Base+0x1078>
    f894:	cmp	w8, #0x5
    f898:	cset	w9, ne  // ne = any
    f89c:	b	10370 <xre_match@@Base+0x1078>
    f8a0:	ldrb	w8, [x12]
    f8a4:	adrp	x11, 2b000 <xexit@@Base+0x14b84>
    f8a8:	add	x11, x11, #0x5e0
    f8ac:	lsl	x8, x8, #3
    f8b0:	ldr	x9, [x28, x8]
    f8b4:	ldrb	w10, [x22, x8]
    f8b8:	cmp	x9, x11
    f8bc:	csel	x11, x25, x9, eq  // eq = none
    f8c0:	tst	w10, #0x3
    f8c4:	sub	x10, x29, #0x50
    f8c8:	ldur	x10, [x10, #-256]
    f8cc:	csel	x9, x9, x11, eq  // eq = none
    f8d0:	cmp	x0, x27
    f8d4:	str	x9, [x10, x8]
    f8d8:	ldrb	w8, [x12]
    f8dc:	str	x25, [x28, x8, lsl #3]
    f8e0:	ldrb	w8, [x12]
    f8e4:	lsl	x8, x8, #3
    f8e8:	ldrb	w9, [x22, x8]
    f8ec:	and	w9, w9, #0xfffffffb
    f8f0:	strb	w9, [x22, x8]
    f8f4:	ldrb	w8, [x12]
    f8f8:	b.ne	10514 <xre_match@@Base+0x121c>  // b.any
    f8fc:	mov	w27, #0x101                 	// #257
    f900:	mov	w0, #0x100                 	// #256
    f904:	b	10534 <xre_match@@Base+0x123c>
    f908:	ldur	x20, [x29, #-192]
    f90c:	cmp	x25, x20
    f910:	b.eq	f7ac <xre_match@@Base+0x4b4>  // b.none
    f914:	b	10c3c <xre_match@@Base+0x1944>
    f918:	ldrb	w8, [x26, #1]
    f91c:	ldur	x12, [x29, #-160]
    f920:	add	x9, x26, #0x2
    f924:	mov	w10, w8
    f928:	mov	w11, w8
    f92c:	cbz	x12, 10668 <xre_match@@Base+0x1370>
    f930:	cmp	x25, x15
    f934:	b.ne	f94c <xre_match@@Base+0x654>  // b.any
    f938:	cmp	x15, x16
    f93c:	mov	x15, x16
    f940:	mov	x25, x2
    f944:	b.ne	f930 <xre_match@@Base+0x638>  // b.any
    f948:	b	10b70 <xre_match@@Base+0x1878>
    f94c:	ldrb	w11, [x25], #1
    f950:	ldur	x13, [x29, #-160]
    f954:	ldrb	w12, [x9]
    f958:	ldrb	w11, [x13, x11]
    f95c:	cmp	w11, w12
    f960:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
    f964:	subs	w10, w10, #0x1
    f968:	add	x9, x9, #0x1
    f96c:	b.ne	f930 <xre_match@@Base+0x638>  // b.any
    f970:	sub	w8, w8, #0x1
    f974:	add	x8, x26, x8
    f978:	add	x12, x8, #0x3
    f97c:	ldur	w8, [x29, #-112]
    f980:	cbnz	w8, f7a8 <xre_match@@Base+0x4b0>
    f984:	cmp	x0, x27
    f988:	b.cc	f9ac <xre_match@@Base+0x6b4>  // b.lo, b.ul, b.last
    f98c:	add	x8, x22, x27, lsl #3
    f990:	mov	x9, x27
    f994:	ldrb	w10, [x8]
    f998:	add	x9, x9, #0x1
    f99c:	cmp	x9, x0
    f9a0:	orr	w10, w10, #0x18
    f9a4:	strb	w10, [x8], #8
    f9a8:	b.ls	f994 <xre_match@@Base+0x69c>  // b.plast
    f9ac:	mov	w8, #0x1                   	// #1
    f9b0:	stur	w8, [x29, #-112]
    f9b4:	b	f7a8 <xre_match@@Base+0x4b0>
    f9b8:	stur	x12, [x29, #-16]
    f9bc:	ldrb	w8, [x12]
    f9c0:	lsl	x9, x8, #3
    f9c4:	ldrb	w9, [x22, x9]
    f9c8:	and	w9, w9, #0x3
    f9cc:	cmp	w9, #0x3
    f9d0:	b.ne	fa34 <xre_match@@Base+0x73c>  // b.any
    f9d4:	sub	x0, x29, #0x10
    f9d8:	mov	x1, x17
    f9dc:	mov	x2, x22
    f9e0:	sub	x8, x29, #0x30
    f9e4:	mov	w20, w18
    f9e8:	stur	x15, [x8, #-256]
    f9ec:	mov	x21, x12
    f9f0:	bl	14734 <xregfree@@Base+0x50>
    f9f4:	sub	x8, x29, #0x30
    f9f8:	ldur	x15, [x8, #-256]
    f9fc:	ldrb	w8, [x21]
    fa00:	ldp	x2, x17, [x29, #-80]
    fa04:	ldur	x16, [x29, #-120]
    fa08:	ldur	x6, [x29, #-224]
    fa0c:	lsl	x8, x8, #3
    fa10:	ldrb	w9, [x22, x8]
    fa14:	mov	w18, w20
    fa18:	and	w9, w9, #0xfc
    fa1c:	bfxil	w9, w0, #0, #2
    fa20:	strb	w9, [x22, x8]
    fa24:	ldrb	w8, [x21]
    fa28:	lsl	x9, x8, #3
    fa2c:	ldrb	w9, [x22, x9]
    fa30:	and	w9, w9, #0x3
    fa34:	lsl	x8, x8, #3
    fa38:	ldr	x10, [x19, x8]
    fa3c:	adrp	x11, 2b000 <xexit@@Base+0x14b84>
    fa40:	add	x11, x11, #0x5e0
    fa44:	stur	wzr, [x29, #-112]
    fa48:	cmp	x10, x11
    fa4c:	csel	x11, x25, x10, eq  // eq = none
    fa50:	cmp	w9, #0x0
    fa54:	csel	x9, x10, x11, eq  // eq = none
    fa58:	sub	x10, x29, #0x48
    fa5c:	ldur	x10, [x10, #-256]
    fa60:	cmp	x27, #0x101
    fa64:	str	x9, [x10, x8]
    fa68:	ldrb	w8, [x26, #1]
    fa6c:	str	x25, [x19, x8, lsl #3]
    fa70:	ldrb	w8, [x26, #1]
    fa74:	lsl	x8, x8, #3
    fa78:	ldrb	w9, [x22, x8]
    fa7c:	orr	w9, w9, #0x4
    fa80:	strb	w9, [x22, x8]
    fa84:	ldrb	w8, [x26, #1]
    fa88:	lsl	x8, x8, #3
    fa8c:	ldrb	w9, [x22, x8]
    fa90:	and	w9, w9, #0xfffffff7
    fa94:	strb	w9, [x22, x8]
    fa98:	ldrb	w0, [x26, #1]
    fa9c:	add	x8, x26, #0x3
    faa0:	sub	x9, x29, #0x28
    faa4:	stur	x8, [x9, #-256]
    faa8:	csel	x27, x0, x27, eq  // eq = none
    faac:	mov	x12, x8
    fab0:	b	f7a8 <xre_match@@Base+0x4b0>
    fab4:	ldrb	w9, [x26, #1]
    fab8:	adrp	x10, 2b000 <xexit@@Base+0x14b84>
    fabc:	add	x10, x10, #0x5e0
    fac0:	ldr	x8, [x19, x9, lsl #3]
    fac4:	cmp	x8, x10
    fac8:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
    facc:	ldr	x4, [x28, x9, lsl #3]
    fad0:	cmp	x4, x10
    fad4:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
    fad8:	ldur	x12, [x29, #-144]
    fadc:	ldur	x13, [x29, #-88]
    fae0:	add	x9, x26, #0x2
    fae4:	sub	x10, x29, #0x8
    fae8:	cmp	w12, #0x0
    faec:	stur	x9, [x10, #-256]
    faf0:	cset	w9, ne  // ne = any
    faf4:	cmp	x6, x8
    faf8:	cset	w10, ls  // ls = plast
    fafc:	cmp	x8, x13
    fb00:	cset	w11, ls  // ls = plast
    fb04:	and	w9, w9, w10
    fb08:	and	w9, w11, w9
    fb0c:	cbz	w12, 10684 <xre_match@@Base+0x138c>
    fb10:	cmp	x6, x4
    fb14:	cset	w10, ls  // ls = plast
    fb18:	cmp	x4, x13
    fb1c:	ldur	x26, [x29, #-104]
    fb20:	cset	w11, ls  // ls = plast
    fb24:	and	w10, w11, w10
    fb28:	cmp	w9, w10
    fb2c:	b.ne	fb34 <xre_match@@Base+0x83c>  // b.any
    fb30:	mov	x26, x4
    fb34:	ldur	x9, [x29, #-160]
    fb38:	cbz	x9, 10690 <xre_match@@Base+0x1398>
    fb3c:	mov	x3, x15
    fb40:	add	x9, x22, x27, lsl #3
    fb44:	cmp	x2, x4
    fb48:	cset	w11, eq  // eq = none
    fb4c:	cmp	x8, x26
    fb50:	cset	w12, eq  // eq = none
    fb54:	cset	w13, ne  // ne = any
    fb58:	cmp	x26, x16
    fb5c:	cset	w14, eq  // eq = none
    fb60:	cmp	x26, x4
    fb64:	ldur	w10, [x29, #-112]
    fb68:	orr	w13, w14, w13
    fb6c:	cset	w14, eq  // eq = none
    fb70:	orr	w13, w14, w13
    fb74:	cmp	w13, #0x0
    fb78:	csel	x8, x8, x2, ne  // ne = any
    fb7c:	csel	w11, w12, w11, ne  // ne = any
    fb80:	csel	x26, x26, x4, ne  // ne = any
    fb84:	tbnz	w11, #0, 10a0c <xre_match@@Base+0x1714>
    fb88:	mov	x11, x3
    fb8c:	cmp	x25, x11
    fb90:	b.ne	fba8 <xre_match@@Base+0x8b0>  // b.any
    fb94:	cmp	x11, x16
    fb98:	mov	x11, x16
    fb9c:	mov	x25, x2
    fba0:	b.ne	fb8c <xre_match@@Base+0x894>  // b.any
    fba4:	b	10b70 <xre_match@@Base+0x1878>
    fba8:	mov	x3, x11
    fbac:	sub	x11, x11, x25
    fbb0:	sub	x12, x26, x8
    fbb4:	cmp	x12, w11, sxtw
    fbb8:	csel	x11, x12, x11, lt  // lt = tstop
    fbbc:	cbz	w11, fbec <xre_match@@Base+0x8f4>
    fbc0:	mov	x12, xzr
    fbc4:	ldrb	w13, [x25, x12]
    fbc8:	ldrb	w14, [x8, x12]
    fbcc:	ldur	x15, [x29, #-160]
    fbd0:	ldrb	w13, [x15, x13]
    fbd4:	ldrb	w14, [x15, x14]
    fbd8:	cmp	w13, w14
    fbdc:	b.ne	10d30 <xre_match@@Base+0x1a38>  // b.any
    fbe0:	add	x12, x12, #0x1
    fbe4:	cmp	w11, w12
    fbe8:	b.ne	fbc4 <xre_match@@Base+0x8cc>  // b.any
    fbec:	sxtw	x11, w11
    fbf0:	cmp	w10, #0x0
    fbf4:	add	x25, x25, x11
    fbf8:	add	x8, x8, x11
    fbfc:	csinc	w11, w10, wzr, ne  // ne = any
    fc00:	stur	w11, [x29, #-112]
    fc04:	cbnz	w10, fb44 <xre_match@@Base+0x84c>
    fc08:	cmp	x0, x27
    fc0c:	b.cc	fb44 <xre_match@@Base+0x84c>  // b.lo, b.ul, b.last
    fc10:	mov	x10, x9
    fc14:	mov	x11, x27
    fc18:	ldrb	w12, [x10]
    fc1c:	add	x11, x11, #0x1
    fc20:	cmp	x11, x0
    fc24:	orr	w12, w12, #0x18
    fc28:	strb	w12, [x10], #8
    fc2c:	b.ls	fc18 <xre_match@@Base+0x920>  // b.plast
    fc30:	mov	w10, #0x1                   	// #1
    fc34:	stur	w10, [x29, #-112]
    fc38:	b	fb44 <xre_match@@Base+0x84c>
    fc3c:	ldur	x20, [x29, #-192]
    fc40:	cmp	x25, x20
    fc44:	b.eq	105f4 <xre_match@@Base+0x12fc>  // b.none
    fc48:	ldur	x8, [x29, #-88]
    fc4c:	cmp	x25, x8
    fc50:	csel	x8, x2, x25, eq  // eq = none
    fc54:	ldrb	w8, [x8]
    fc58:	b	fe74 <xre_match@@Base+0xb7c>
    fc5c:	ldrb	w9, [x26, #1]
    fc60:	ldrsb	x10, [x26, #2]
    fc64:	add	x8, x26, #0x3
    fc68:	mov	x12, x8
    fc6c:	bfi	x9, x10, #8, #56
    fc70:	b	fc78 <xre_match@@Base+0x980>
    fc74:	add	x12, x10, #0x3
    fc78:	add	x11, x12, #0x2
    fc7c:	mov	x10, x12
    fc80:	cmp	x11, x17
    fc84:	b.cs	fc98 <xre_match@@Base+0x9a0>  // b.hs, b.nlast
    fc88:	ldrb	w12, [x10]
    fc8c:	and	w12, w12, #0xfe
    fc90:	cmp	w12, #0x6
    fc94:	b.eq	fc74 <xre_match@@Base+0x97c>  // b.none
    fc98:	add	x12, x10, #0x6
    fc9c:	cmp	x12, x17
    fca0:	b.cs	fcb0 <xre_match@@Base+0x9b8>  // b.hs, b.nlast
    fca4:	ldrb	w13, [x10]
    fca8:	cmp	w13, #0x13
    fcac:	b.eq	fc78 <xre_match@@Base+0x980>  // b.none
    fcb0:	add	x8, x8, x9
    fcb4:	cmp	x10, x17
    fcb8:	stur	x8, [x29, #-16]
    fcbc:	b.eq	10830 <xre_match@@Base+0x1538>  // b.none
    fcc0:	ldrb	w12, [x10]
    fcc4:	cmp	w12, #0x2
    fcc8:	b.ne	107c8 <xre_match@@Base+0x14d0>  // b.any
    fccc:	ldrb	w9, [x11]
    fcd0:	ldrb	w10, [x8, #3]
    fcd4:	cmp	w10, #0x2
    fcd8:	b.ne	107ec <xre_match@@Base+0x14f4>  // b.any
    fcdc:	ldrb	w8, [x8, #5]
    fce0:	cmp	w8, w9
    fce4:	b.ne	10830 <xre_match@@Base+0x1538>  // b.any
    fce8:	b	10adc <xre_match@@Base+0x17e4>
    fcec:	sub	x9, x0, x27
    fcf0:	sub	x8, x29, #0x30
    fcf4:	add	x9, x9, x9, lsl #1
    fcf8:	stur	x15, [x8, #-256]
    fcfc:	sub	w8, w18, w23
    fd00:	add	x9, x9, #0x7
    fd04:	cmp	x9, x8
    fd08:	stur	x9, [x29, #-232]
    fd0c:	b.ls	fd90 <xre_match@@Base+0xa98>  // b.plast
    fd10:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    fd14:	ldr	x8, [x8, #3952]
    fd18:	mov	w9, #0x13                  	// #19
    fd1c:	mov	x1, x24
    fd20:	ldr	w8, [x8]
    fd24:	mul	w8, w8, w9
    fd28:	sub	x9, x29, #0x8
    fd2c:	stur	w8, [x9, #-256]
    fd30:	mov	w8, w18
    fd34:	sub	x9, x29, #0x8
    fd38:	ldur	w9, [x9, #-256]
    fd3c:	cmp	w8, w9
    fd40:	b.hi	10fd0 <xre_match@@Base+0x1cd8>  // b.pmore
    fd44:	lsl	w26, w8, #1
    fd48:	sub	x24, sp, w26, uxtw #3
    fd4c:	mov	sp, x24
    fd50:	mov	w8, w8
    fd54:	lsl	x2, x8, #3
    fd58:	mov	x21, x0
    fd5c:	mov	x0, x24
    fd60:	mov	x20, x12
    fd64:	bl	4db0 <memcpy@plt>
    fd68:	ldur	x9, [x29, #-232]
    fd6c:	ldp	x2, x17, [x29, #-80]
    fd70:	sub	w8, w26, w23
    fd74:	mov	x12, x20
    fd78:	mov	x0, x21
    fd7c:	mov	w18, w26
    fd80:	cmp	x9, x8
    fd84:	mov	w8, w26
    fd88:	mov	x1, x24
    fd8c:	b.hi	fd34 <xre_match@@Base+0xa3c>  // b.pmore
    fd90:	mov	x13, x12
    fd94:	cmp	x0, x27
    fd98:	mov	x8, x27
    fd9c:	b.cc	fdd4 <xre_match@@Base+0xadc>  // b.lo, b.ul, b.last
    fda0:	lsl	x9, x8, #3
    fda4:	ldr	x10, [x19, x9]
    fda8:	add	w11, w23, #0x1
    fdac:	add	x8, x8, #0x1
    fdb0:	add	w12, w23, #0x2
    fdb4:	str	x10, [x24, w23, uxtw #3]
    fdb8:	ldr	x10, [x28, x9]
    fdbc:	add	w23, w23, #0x3
    fdc0:	cmp	x8, x0
    fdc4:	str	x10, [x24, w11, uxtw #3]
    fdc8:	ldr	x9, [x22, x9]
    fdcc:	str	x9, [x24, w12, uxtw #3]
    fdd0:	b.ls	fda0 <xre_match@@Base+0xaa8>  // b.plast
    fdd4:	add	w8, w23, #0x1
    fdd8:	mov	w9, w23
    fddc:	lsl	x9, x9, #3
    fde0:	lsl	x8, x8, #3
    fde4:	str	w27, [x24, x9]
    fde8:	str	w0, [x24, x8]
    fdec:	sub	x8, x29, #0x30
    fdf0:	ldur	x6, [x29, #-224]
    fdf4:	ldur	x16, [x29, #-120]
    fdf8:	ldur	x15, [x8, #-256]
    fdfc:	add	w10, w23, #0x2
    fe00:	add	w11, w23, #0x3
    fe04:	add	w23, w23, #0x4
    fe08:	str	xzr, [x24, w10, uxtw #3]
    fe0c:	str	xzr, [x24, w11, uxtw #3]
    fe10:	mov	x20, x25
    fe14:	mov	x12, x13
    fe18:	b	f7ac <xre_match@@Base+0x4b4>
    fe1c:	ldrb	w8, [x26, #3]
    fe20:	ldrsb	w9, [x26, #4]
    fe24:	bfi	w8, w9, #8, #24
    fe28:	subs	w9, w8, #0x1
    fe2c:	b.lt	10604 <xre_match@@Base+0x130c>  // b.tstop
    fe30:	sturh	w9, [x26, #3]
    fe34:	b	fe54 <xre_match@@Base+0xb5c>
    fe38:	ldrb	w8, [x26, #3]
    fe3c:	ldrsb	w9, [x26, #4]
    fe40:	bfi	w8, w9, #8, #24
    fe44:	cbz	w8, fe54 <xre_match@@Base+0xb5c>
    fe48:	sub	w8, w8, #0x1
    fe4c:	sturh	w8, [x26, #3]
    fe50:	b	f794 <xre_match@@Base+0x49c>
    fe54:	add	x12, x26, #0x5
    fe58:	b	f7a8 <xre_match@@Base+0x4b0>
    fe5c:	ldur	w8, [x29, #-204]
    fe60:	cbz	w8, 105e0 <xre_match@@Base+0x12e8>
    fe64:	ldur	x8, [x29, #-240]
    fe68:	cmp	x25, x8
    fe6c:	b.eq	105e0 <xre_match@@Base+0x12e8>  // b.none
    fe70:	ldurb	w8, [x25, #-1]
    fe74:	cmp	w8, #0xa
    fe78:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
    fe7c:	ldur	x8, [x29, #-136]
    fe80:	mov	x20, x25
    fe84:	ldrsb	w8, [x8, #56]
    fe88:	tbnz	w8, #31, f7ac <xre_match@@Base+0x4b4>
    fe8c:	b	10c3c <xre_match@@Base+0x1944>
    fe90:	ldur	w8, [x29, #-204]
    fe94:	cbz	w8, f7a8 <xre_match@@Base+0x4b0>
    fe98:	ldur	x8, [x29, #-240]
    fe9c:	mov	x20, x25
    fea0:	cmp	x25, x8
    fea4:	b.eq	f7ac <xre_match@@Base+0x4b4>  // b.none
    fea8:	b	10c3c <xre_match@@Base+0x1944>
    feac:	sub	x8, x29, #0x30
    feb0:	stur	x15, [x8, #-256]
    feb4:	ldrb	w8, [x26, #1]
    feb8:	sub	x9, x29, #0x98
    febc:	stur	x8, [x9, #-256]
    fec0:	ldrsb	x8, [x26, #2]
    fec4:	sub	x9, x29, #0xa0
    fec8:	stur	x8, [x9, #-256]
    fecc:	sub	x9, x0, x27
    fed0:	add	x9, x9, x9, lsl #1
    fed4:	sub	w8, w18, w23
    fed8:	add	x9, x9, #0x7
    fedc:	cmp	x9, x8
    fee0:	stur	x9, [x29, #-232]
    fee4:	b.ls	ff60 <xre_match@@Base+0xc68>  // b.plast
    fee8:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
    feec:	ldr	x8, [x8, #3952]
    fef0:	mov	w9, #0x13                  	// #19
    fef4:	mov	x1, x24
    fef8:	ldr	w8, [x8]
    fefc:	mul	w8, w8, w9
    ff00:	sub	x9, x29, #0x8
    ff04:	stur	w8, [x9, #-256]
    ff08:	mov	w8, w18
    ff0c:	sub	x9, x29, #0x8
    ff10:	ldur	w9, [x9, #-256]
    ff14:	cmp	w8, w9
    ff18:	b.hi	10fd0 <xre_match@@Base+0x1cd8>  // b.pmore
    ff1c:	lsl	w20, w8, #1
    ff20:	sub	x24, sp, w20, uxtw #3
    ff24:	mov	sp, x24
    ff28:	mov	w8, w8
    ff2c:	lsl	x2, x8, #3
    ff30:	mov	x21, x0
    ff34:	mov	x0, x24
    ff38:	bl	4db0 <memcpy@plt>
    ff3c:	ldur	x9, [x29, #-232]
    ff40:	ldp	x2, x17, [x29, #-80]
    ff44:	sub	w8, w20, w23
    ff48:	mov	x0, x21
    ff4c:	mov	w18, w20
    ff50:	cmp	x9, x8
    ff54:	mov	w8, w20
    ff58:	mov	x1, x24
    ff5c:	b.hi	ff0c <xre_match@@Base+0xc14>  // b.pmore
    ff60:	sub	x8, x29, #0x98
    ff64:	ldur	x14, [x8, #-256]
    ff68:	sub	x8, x29, #0xa0
    ff6c:	ldur	x8, [x8, #-256]
    ff70:	cmp	x0, x27
    ff74:	add	x13, x26, #0x3
    ff78:	bfi	x14, x8, #8, #56
    ff7c:	mov	x8, x27
    ff80:	b.cc	ffb8 <xre_match@@Base+0xcc0>  // b.lo, b.ul, b.last
    ff84:	lsl	x9, x8, #3
    ff88:	ldr	x10, [x19, x9]
    ff8c:	add	w11, w23, #0x1
    ff90:	add	x8, x8, #0x1
    ff94:	add	w12, w23, #0x2
    ff98:	str	x10, [x24, w23, uxtw #3]
    ff9c:	ldr	x10, [x28, x9]
    ffa0:	add	w23, w23, #0x3
    ffa4:	cmp	x8, x0
    ffa8:	str	x10, [x24, w11, uxtw #3]
    ffac:	ldr	x9, [x22, x9]
    ffb0:	str	x9, [x24, w12, uxtw #3]
    ffb4:	b.ls	ff84 <xre_match@@Base+0xc8c>  // b.plast
    ffb8:	add	w8, w23, #0x1
    ffbc:	mov	w9, w23
    ffc0:	add	w10, w23, #0x2
    ffc4:	add	x11, x13, x14
    ffc8:	add	w12, w23, #0x3
    ffcc:	add	w23, w23, #0x4
    ffd0:	lsl	x9, x9, #3
    ffd4:	lsl	x8, x8, #3
    ffd8:	str	w27, [x24, x9]
    ffdc:	str	w0, [x24, x8]
    ffe0:	str	x11, [x24, w10, uxtw #3]
    ffe4:	str	xzr, [x24, w12, uxtw #3]
    ffe8:	b	10980 <xre_match@@Base+0x1688>
    ffec:	sub	x9, x0, x27
    fff0:	sub	x8, x29, #0x30
    fff4:	add	x9, x9, x9, lsl #1
    fff8:	stur	x25, [x8, #-256]
    fffc:	sub	w8, w18, w23
   10000:	add	x9, x9, #0x7
   10004:	cmp	x9, x8
   10008:	stur	x9, [x29, #-232]
   1000c:	b.ls	10094 <xre_match@@Base+0xd9c>  // b.plast
   10010:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   10014:	ldr	x8, [x8, #3952]
   10018:	mov	w9, #0x13                  	// #19
   1001c:	mov	x1, x24
   10020:	ldr	w8, [x8]
   10024:	mul	w8, w8, w9
   10028:	sub	x9, x29, #0x8
   1002c:	stur	w8, [x9, #-256]
   10030:	mov	w8, w18
   10034:	sub	x9, x29, #0x8
   10038:	ldur	w9, [x9, #-256]
   1003c:	cmp	w8, w9
   10040:	b.hi	10fd0 <xre_match@@Base+0x1cd8>  // b.pmore
   10044:	lsl	w20, w8, #1
   10048:	sub	x24, sp, w20, uxtw #3
   1004c:	mov	sp, x24
   10050:	mov	w8, w8
   10054:	lsl	x2, x8, #3
   10058:	mov	x21, x0
   1005c:	mov	x0, x24
   10060:	mov	x25, x15
   10064:	bl	4db0 <memcpy@plt>
   10068:	ldur	x9, [x29, #-232]
   1006c:	ldur	x16, [x29, #-120]
   10070:	ldp	x2, x17, [x29, #-80]
   10074:	sub	w8, w20, w23
   10078:	mov	x15, x25
   1007c:	mov	x0, x21
   10080:	mov	w18, w20
   10084:	cmp	x9, x8
   10088:	mov	w8, w20
   1008c:	mov	x1, x24
   10090:	b.hi	10034 <xre_match@@Base+0xd3c>  // b.pmore
   10094:	ldur	x6, [x29, #-224]
   10098:	cmp	x0, x27
   1009c:	mov	x8, x27
   100a0:	b.cc	100d8 <xre_match@@Base+0xde0>  // b.lo, b.ul, b.last
   100a4:	lsl	x9, x8, #3
   100a8:	ldr	x10, [x19, x9]
   100ac:	add	w11, w23, #0x1
   100b0:	add	x8, x8, #0x1
   100b4:	add	w12, w23, #0x2
   100b8:	str	x10, [x24, w23, uxtw #3]
   100bc:	ldr	x10, [x28, x9]
   100c0:	add	w23, w23, #0x3
   100c4:	cmp	x8, x0
   100c8:	str	x10, [x24, w11, uxtw #3]
   100cc:	ldr	x9, [x22, x9]
   100d0:	str	x9, [x24, w12, uxtw #3]
   100d4:	b.ls	100a4 <xre_match@@Base+0xdac>  // b.plast
   100d8:	add	w8, w23, #0x1
   100dc:	mov	w9, w23
   100e0:	lsl	x9, x9, #3
   100e4:	lsl	x8, x8, #3
   100e8:	str	w27, [x24, x9]
   100ec:	str	w0, [x24, x8]
   100f0:	sub	x8, x29, #0x30
   100f4:	ldur	x25, [x8, #-256]
   100f8:	add	w10, w23, #0x2
   100fc:	add	w11, w23, #0x3
   10100:	add	w23, w23, #0x4
   10104:	str	xzr, [x24, w10, uxtw #3]
   10108:	str	xzr, [x24, w11, uxtw #3]
   1010c:	b	f794 <xre_match@@Base+0x49c>
   10110:	ldrb	w8, [x26, #1]
   10114:	ldrsb	x9, [x26, #2]
   10118:	add	x12, x26, #0x5
   1011c:	bfi	x8, x9, #8, #56
   10120:	add	x9, x26, #0x3
   10124:	add	x10, x9, x8
   10128:	stur	x10, [x29, #-16]
   1012c:	ldrb	w10, [x26, #3]
   10130:	ldrb	w11, [x26, #4]
   10134:	strb	w10, [x9, x8]
   10138:	ldur	x8, [x29, #-16]
   1013c:	strb	w11, [x8, #1]
   10140:	b	f7a8 <xre_match@@Base+0x4b0>
   10144:	ldur	x8, [x29, #-192]
   10148:	cmp	x25, x8
   1014c:	b.eq	f7a8 <xre_match@@Base+0x4b0>  // b.none
   10150:	ldur	w8, [x29, #-204]
   10154:	cbz	w8, f7a8 <xre_match@@Base+0x4b0>
   10158:	ldur	x8, [x29, #-240]
   1015c:	cmp	x25, x8
   10160:	b.eq	f7a8 <xre_match@@Base+0x4b0>  // b.none
   10164:	mov	x13, x12
   10168:	ldur	x12, [x29, #-216]
   1016c:	ldur	x11, [x29, #-88]
   10170:	sub	x8, x25, #0x1
   10174:	cmp	x25, x2
   10178:	csel	x9, x12, x8, eq  // eq = none
   1017c:	cmp	x8, x11
   10180:	csel	x8, x2, x9, eq  // eq = none
   10184:	ldrb	w8, [x8]
   10188:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   1018c:	add	x9, x9, #0x5e5
   10190:	ldur	x10, [x29, #-256]
   10194:	ldrb	w8, [x9, x8]
   10198:	mov	x20, x25
   1019c:	cmp	w8, #0x1
   101a0:	cset	w8, eq  // eq = none
   101a4:	cmp	x25, x10
   101a8:	csel	x10, x12, x25, eq  // eq = none
   101ac:	cmp	x25, x11
   101b0:	csel	x10, x2, x10, eq  // eq = none
   101b4:	ldrb	w10, [x10]
   101b8:	mov	x12, x13
   101bc:	ldrb	w9, [x9, x10]
   101c0:	cmp	w9, #0x1
   101c4:	cset	w9, eq  // eq = none
   101c8:	eor	w8, w8, w9
   101cc:	tbnz	w8, #0, f7ac <xre_match@@Base+0x4b4>
   101d0:	b	10c3c <xre_match@@Base+0x1944>
   101d4:	ldur	x8, [x29, #-192]
   101d8:	cmp	x25, x8
   101dc:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
   101e0:	ldur	w8, [x29, #-204]
   101e4:	cbz	w8, 10c3c <xre_match@@Base+0x1944>
   101e8:	ldur	x8, [x29, #-240]
   101ec:	cmp	x25, x8
   101f0:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
   101f4:	mov	x13, x12
   101f8:	ldur	x12, [x29, #-216]
   101fc:	ldur	x11, [x29, #-88]
   10200:	sub	x8, x25, #0x1
   10204:	cmp	x25, x2
   10208:	csel	x9, x12, x8, eq  // eq = none
   1020c:	cmp	x8, x11
   10210:	csel	x8, x2, x9, eq  // eq = none
   10214:	ldrb	w8, [x8]
   10218:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   1021c:	add	x9, x9, #0x5e5
   10220:	ldur	x10, [x29, #-256]
   10224:	ldrb	w8, [x9, x8]
   10228:	mov	x20, x25
   1022c:	cmp	w8, #0x1
   10230:	cset	w8, eq  // eq = none
   10234:	cmp	x25, x10
   10238:	csel	x10, x12, x25, eq  // eq = none
   1023c:	cmp	x25, x11
   10240:	csel	x10, x2, x10, eq  // eq = none
   10244:	ldrb	w10, [x10]
   10248:	mov	x12, x13
   1024c:	ldrb	w9, [x9, x10]
   10250:	cmp	w9, #0x1
   10254:	cset	w9, eq  // eq = none
   10258:	eor	w8, w8, w9
   1025c:	tbz	w8, #0, f7ac <xre_match@@Base+0x4b4>
   10260:	b	10c3c <xre_match@@Base+0x1944>
   10264:	ldur	x8, [x29, #-192]
   10268:	cmp	x25, x8
   1026c:	b.eq	10d38 <xre_match@@Base+0x1a40>  // b.none
   10270:	ldur	x8, [x29, #-256]
   10274:	ldur	x9, [x29, #-88]
   10278:	cmp	x25, x8
   1027c:	ldur	x8, [x29, #-216]
   10280:	csel	x8, x8, x25, eq  // eq = none
   10284:	cmp	x25, x9
   10288:	csel	x8, x2, x8, eq  // eq = none
   1028c:	ldrb	w9, [x8]
   10290:	adrp	x8, 2b000 <xexit@@Base+0x14b84>
   10294:	add	x8, x8, #0x5e0
   10298:	add	x9, x8, x9
   1029c:	ldrb	w9, [x9, #5]
   102a0:	cmp	w9, #0x1
   102a4:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
   102a8:	ldur	w9, [x29, #-204]
   102ac:	cbz	w9, f7a8 <xre_match@@Base+0x4b0>
   102b0:	ldur	x9, [x29, #-240]
   102b4:	cmp	x25, x9
   102b8:	b.eq	f7a8 <xre_match@@Base+0x4b0>  // b.none
   102bc:	ldur	x10, [x29, #-216]
   102c0:	ldur	x11, [x29, #-88]
   102c4:	sub	x9, x25, #0x1
   102c8:	cmp	x25, x2
   102cc:	csel	x10, x10, x9, eq  // eq = none
   102d0:	cmp	x9, x11
   102d4:	csel	x9, x2, x10, eq  // eq = none
   102d8:	b	10350 <xre_match@@Base+0x1058>
   102dc:	ldur	w8, [x29, #-204]
   102e0:	cbz	w8, 10c3c <xre_match@@Base+0x1944>
   102e4:	ldur	x8, [x29, #-240]
   102e8:	cmp	x25, x8
   102ec:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
   102f0:	ldur	x9, [x29, #-216]
   102f4:	ldur	x10, [x29, #-88]
   102f8:	sub	x8, x25, #0x1
   102fc:	cmp	x25, x2
   10300:	csel	x9, x9, x8, eq  // eq = none
   10304:	cmp	x8, x10
   10308:	csel	x8, x2, x9, eq  // eq = none
   1030c:	ldrb	w9, [x8]
   10310:	adrp	x8, 2b000 <xexit@@Base+0x14b84>
   10314:	add	x8, x8, #0x5e0
   10318:	add	x9, x8, x9
   1031c:	ldrb	w9, [x9, #5]
   10320:	cmp	w9, #0x1
   10324:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
   10328:	ldur	x20, [x29, #-192]
   1032c:	cmp	x25, x20
   10330:	b.eq	f7ac <xre_match@@Base+0x4b4>  // b.none
   10334:	ldur	x9, [x29, #-256]
   10338:	ldur	x10, [x29, #-88]
   1033c:	cmp	x25, x9
   10340:	ldur	x9, [x29, #-216]
   10344:	csel	x9, x9, x25, eq  // eq = none
   10348:	cmp	x25, x10
   1034c:	csel	x9, x2, x9, eq  // eq = none
   10350:	ldrb	w9, [x9]
   10354:	mov	x20, x25
   10358:	add	x8, x8, x9
   1035c:	ldrb	w8, [x8, #5]
   10360:	cmp	w8, #0x1
   10364:	b.ne	f7ac <xre_match@@Base+0x4b4>  // b.any
   10368:	b	10c3c <xre_match@@Base+0x1944>
   1036c:	mov	x13, x12
   10370:	cbz	w9, 10c3c <xre_match@@Base+0x1944>
   10374:	add	x8, x10, x13
   10378:	add	x12, x8, #0x1
   1037c:	ldur	w8, [x29, #-112]
   10380:	cbnz	w8, 10508 <xre_match@@Base+0x1210>
   10384:	cmp	x0, x27
   10388:	b.cc	10504 <xre_match@@Base+0x120c>  // b.lo, b.ul, b.last
   1038c:	add	x8, x22, x27, lsl #3
   10390:	mov	x9, x27
   10394:	ldrb	w10, [x8]
   10398:	add	x9, x9, #0x1
   1039c:	cmp	x9, x0
   103a0:	orr	w10, w10, #0x18
   103a4:	strb	w10, [x8], #8
   103a8:	b.ls	10394 <xre_match@@Base+0x109c>  // b.plast
   103ac:	b	10504 <xre_match@@Base+0x120c>
   103b0:	ldur	x8, [x29, #-256]
   103b4:	ldur	x9, [x29, #-88]
   103b8:	cmp	x25, x8
   103bc:	ldur	x8, [x29, #-216]
   103c0:	csel	x8, x8, x25, eq  // eq = none
   103c4:	cmp	x25, x9
   103c8:	csel	x8, x2, x8, eq  // eq = none
   103cc:	ldrb	w8, [x8]
   103d0:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   103d4:	add	x9, x9, #0x5e0
   103d8:	add	x8, x9, x8
   103dc:	ldrb	w8, [x8, #5]
   103e0:	cmp	w8, #0x1
   103e4:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
   103e8:	ldur	w8, [x29, #-112]
   103ec:	cbnz	w8, 10508 <xre_match@@Base+0x1210>
   103f0:	cmp	x0, x27
   103f4:	b.cc	10504 <xre_match@@Base+0x120c>  // b.lo, b.ul, b.last
   103f8:	add	x8, x22, x27, lsl #3
   103fc:	mov	x9, x27
   10400:	ldrb	w10, [x8]
   10404:	add	x9, x9, #0x1
   10408:	cmp	x9, x0
   1040c:	orr	w10, w10, #0x18
   10410:	strb	w10, [x8], #8
   10414:	b.ls	10400 <xre_match@@Base+0x1108>  // b.plast
   10418:	b	10504 <xre_match@@Base+0x120c>
   1041c:	ldur	x8, [x29, #-256]
   10420:	ldur	x9, [x29, #-88]
   10424:	cmp	x25, x8
   10428:	ldur	x8, [x29, #-216]
   1042c:	csel	x8, x8, x25, eq  // eq = none
   10430:	cmp	x25, x9
   10434:	csel	x8, x2, x8, eq  // eq = none
   10438:	ldrb	w8, [x8]
   1043c:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   10440:	add	x9, x9, #0x5e0
   10444:	add	x8, x9, x8
   10448:	ldrb	w8, [x8, #5]
   1044c:	cmp	w8, #0x1
   10450:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
   10454:	ldur	w8, [x29, #-112]
   10458:	cbnz	w8, 10508 <xre_match@@Base+0x1210>
   1045c:	cmp	x0, x27
   10460:	b.cc	10504 <xre_match@@Base+0x120c>  // b.lo, b.ul, b.last
   10464:	add	x8, x22, x27, lsl #3
   10468:	mov	x9, x27
   1046c:	ldrb	w10, [x8]
   10470:	add	x9, x9, #0x1
   10474:	cmp	x9, x0
   10478:	orr	w10, w10, #0x18
   1047c:	strb	w10, [x8], #8
   10480:	b.ls	1046c <xre_match@@Base+0x1174>  // b.plast
   10484:	b	10504 <xre_match@@Base+0x120c>
   10488:	ldur	x8, [x29, #-136]
   1048c:	ldr	x8, [x8, #24]
   10490:	tbnz	w8, #6, 104b4 <xre_match@@Base+0x11bc>
   10494:	ldur	x10, [x29, #-160]
   10498:	mov	x9, x25
   1049c:	cbz	x10, 104a8 <xre_match@@Base+0x11b0>
   104a0:	ldrb	w9, [x25]
   104a4:	add	x9, x10, x9
   104a8:	ldrb	w9, [x9]
   104ac:	cmp	w9, #0xa
   104b0:	b.eq	10c3c <xre_match@@Base+0x1944>  // b.none
   104b4:	tbz	w8, #7, 104d4 <xre_match@@Base+0x11dc>
   104b8:	ldur	x9, [x29, #-160]
   104bc:	mov	x8, x25
   104c0:	cbz	x9, 104cc <xre_match@@Base+0x11d4>
   104c4:	ldrb	w8, [x25]
   104c8:	add	x8, x9, x8
   104cc:	ldrb	w8, [x8]
   104d0:	cbz	w8, 10c3c <xre_match@@Base+0x1944>
   104d4:	ldur	w8, [x29, #-112]
   104d8:	cbnz	w8, 10508 <xre_match@@Base+0x1210>
   104dc:	cmp	x0, x27
   104e0:	b.cc	10504 <xre_match@@Base+0x120c>  // b.lo, b.ul, b.last
   104e4:	add	x8, x22, x27, lsl #3
   104e8:	mov	x9, x27
   104ec:	ldrb	w10, [x8]
   104f0:	add	x9, x9, #0x1
   104f4:	cmp	x9, x0
   104f8:	orr	w10, w10, #0x18
   104fc:	strb	w10, [x8], #8
   10500:	b.ls	104ec <xre_match@@Base+0x11f4>  // b.plast
   10504:	mov	w8, #0x1                   	// #1
   10508:	stur	w8, [x29, #-112]
   1050c:	add	x20, x25, #0x1
   10510:	b	f7ac <xre_match@@Base+0x4b4>
   10514:	mov	w9, w8
   10518:	sub	w9, w9, #0x1
   1051c:	tst	w9, #0xff
   10520:	b.eq	f8fc <xre_match@@Base+0x604>  // b.none
   10524:	and	x0, x9, #0xff
   10528:	lsl	x10, x0, #3
   1052c:	ldrb	w10, [x22, x10]
   10530:	tbz	w10, #2, 10518 <xre_match@@Base+0x1220>
   10534:	sub	x9, x29, #0x28
   10538:	ldur	x9, [x9, #-256]
   1053c:	cmp	x9, x26
   10540:	b.eq	10550 <xre_match@@Base+0x1258>  // b.none
   10544:	lsl	x8, x8, #3
   10548:	ldrb	w8, [x22, x8]
   1054c:	tbnz	w8, #3, 105d4 <xre_match@@Base+0x12dc>
   10550:	add	x8, x26, #0x3
   10554:	cmp	x8, x17
   10558:	b.cs	105d4 <xre_match@@Base+0x12dc>  // b.hs, b.nlast
   1055c:	add	x8, x26, #0x4
   10560:	stur	x8, [x29, #-16]
   10564:	ldrb	w8, [x26, #3]
   10568:	sub	w8, w8, #0xd
   1056c:	cmp	w8, #0x9
   10570:	b.hi	105d4 <xre_match@@Base+0x12dc>  // b.pmore
   10574:	mov	w9, #0x271                 	// #625
   10578:	lsr	w9, w9, w8
   1057c:	tbz	w9, #0, 105d4 <xre_match@@Base+0x12dc>
   10580:	adrp	x9, 17000 <xexit@@Base+0xb84>
   10584:	sxtb	x8, w8
   10588:	add	x9, x9, #0xe8
   1058c:	ldrb	w10, [x26, #4]
   10590:	ldrsb	x11, [x26, #5]
   10594:	ldr	x8, [x9, x8, lsl #3]
   10598:	bfi	x10, x11, #8, #56
   1059c:	add	x8, x26, x8
   105a0:	add	x8, x8, x10
   105a4:	stur	x8, [x29, #-16]
   105a8:	tbz	w10, #31, 105d4 <xre_match@@Base+0x12dc>
   105ac:	ldrb	w9, [x8]
   105b0:	cmp	w9, #0xf
   105b4:	b.ne	105d4 <xre_match@@Base+0x12dc>  // b.any
   105b8:	ldrb	w9, [x8, #3]
   105bc:	cmp	w9, #0x6
   105c0:	b.ne	105d4 <xre_match@@Base+0x12dc>  // b.any
   105c4:	ldrb	w9, [x8, #4]
   105c8:	ldrb	w10, [x12]
   105cc:	cmp	w9, w10
   105d0:	b.eq	10d64 <xre_match@@Base+0x1a6c>  // b.none
   105d4:	add	x12, x26, #0x3
   105d8:	stur	wzr, [x29, #-112]
   105dc:	b	f7a8 <xre_match@@Base+0x4b0>
   105e0:	ldur	x8, [x29, #-136]
   105e4:	mov	x20, x25
   105e8:	ldrb	w8, [x8, #56]
   105ec:	tbz	w8, #5, f7ac <xre_match@@Base+0x4b4>
   105f0:	b	10c3c <xre_match@@Base+0x1944>
   105f4:	ldur	x8, [x29, #-136]
   105f8:	ldrb	w8, [x8, #56]
   105fc:	tbz	w8, #6, f7ac <xre_match@@Base+0x4b4>
   10600:	b	10d40 <xre_match@@Base+0x1a48>
   10604:	cbnz	w8, f7a8 <xre_match@@Base+0x4b0>
   10608:	sturh	wzr, [x26, #3]
   1060c:	ldrb	w11, [x26, #1]
   10610:	ldrsb	x8, [x26, #2]
   10614:	add	x10, x26, #0x3
   10618:	sub	x9, x29, #0xa0
   1061c:	cmp	x10, x17
   10620:	stur	x8, [x9, #-256]
   10624:	stur	x10, [x29, #-16]
   10628:	b.cs	10858 <xre_match@@Base+0x1560>  // b.hs, b.nlast
   1062c:	mov	x8, x10
   10630:	ldrb	w9, [x8]
   10634:	cbnz	w9, 1083c <xre_match@@Base+0x1544>
   10638:	add	x8, x8, #0x1
   1063c:	cmp	x17, x8
   10640:	stur	x8, [x29, #-16]
   10644:	b.ne	10630 <xre_match@@Base+0x1338>  // b.any
   10648:	b	10858 <xre_match@@Base+0x1560>
   1064c:	ldrb	w10, [x25], #1
   10650:	ldrb	w12, [x9]
   10654:	cmp	w10, w12
   10658:	b.ne	10c3c <xre_match@@Base+0x1944>  // b.any
   1065c:	subs	w11, w11, #0x1
   10660:	add	x9, x9, #0x1
   10664:	b.eq	f970 <xre_match@@Base+0x678>  // b.none
   10668:	cmp	x25, x15
   1066c:	b.ne	1064c <xre_match@@Base+0x1354>  // b.any
   10670:	cmp	x15, x16
   10674:	mov	x15, x16
   10678:	mov	x25, x2
   1067c:	b.ne	10668 <xre_match@@Base+0x1370>  // b.any
   10680:	b	10b70 <xre_match@@Base+0x1878>
   10684:	ldur	x26, [x29, #-104]
   10688:	tbz	w9, #0, fb30 <xre_match@@Base+0x838>
   1068c:	b	fb34 <xre_match@@Base+0x83c>
   10690:	add	x9, x22, x27, lsl #3
   10694:	sub	x10, x29, #0xb0
   10698:	stur	x9, [x10, #-256]
   1069c:	cmp	x2, x4
   106a0:	cset	w9, eq  // eq = none
   106a4:	cmp	x8, x26
   106a8:	cset	w10, eq  // eq = none
   106ac:	cset	w11, ne  // ne = any
   106b0:	cmp	x26, x16
   106b4:	cset	w12, eq  // eq = none
   106b8:	cmp	x26, x4
   106bc:	ldur	w13, [x29, #-112]
   106c0:	orr	w11, w12, w11
   106c4:	cset	w12, eq  // eq = none
   106c8:	orr	w11, w12, w11
   106cc:	cmp	w11, #0x0
   106d0:	csel	x21, x8, x2, ne  // ne = any
   106d4:	csel	w8, w10, w9, ne  // ne = any
   106d8:	csel	x26, x26, x4, ne  // ne = any
   106dc:	tbnz	w8, #0, 10a1c <xre_match@@Base+0x1724>
   106e0:	cmp	x25, x15
   106e4:	b.ne	106fc <xre_match@@Base+0x1404>  // b.any
   106e8:	cmp	x15, x16
   106ec:	mov	x15, x16
   106f0:	mov	x25, x2
   106f4:	b.ne	106e0 <xre_match@@Base+0x13e8>  // b.any
   106f8:	b	10b70 <xre_match@@Base+0x1878>
   106fc:	sub	x8, x29, #0xa4
   10700:	stur	w13, [x8, #-256]
   10704:	sub	x8, x29, #0xa0
   10708:	stur	x4, [x8, #-256]
   1070c:	sub	x8, x29, #0x98
   10710:	stur	x0, [x8, #-256]
   10714:	sub	x8, x29, #0x30
   10718:	stur	x15, [x8, #-256]
   1071c:	sub	x8, x15, x25
   10720:	sub	x9, x26, x21
   10724:	cmp	x9, w8, sxtw
   10728:	csel	x8, x9, x8, lt  // lt = tstop
   1072c:	sxtw	x2, w8
   10730:	mov	x0, x25
   10734:	mov	x1, x21
   10738:	stur	w18, [x29, #-232]
   1073c:	mov	x20, x2
   10740:	bl	5290 <bcmp@plt>
   10744:	cbnz	w0, 10d48 <xre_match@@Base+0x1a50>
   10748:	sub	x9, x29, #0xa4
   1074c:	ldur	w10, [x9, #-256]
   10750:	ldur	x6, [x29, #-224]
   10754:	ldp	x2, x17, [x29, #-80]
   10758:	ldur	x16, [x29, #-120]
   1075c:	cmp	w10, #0x0
   10760:	csinc	w9, w10, wzr, ne  // ne = any
   10764:	stur	w9, [x29, #-112]
   10768:	sub	x9, x29, #0x98
   1076c:	ldur	x0, [x9, #-256]
   10770:	sub	x9, x29, #0x30
   10774:	ldur	x15, [x9, #-256]
   10778:	sub	x9, x29, #0xa0
   1077c:	ldur	w18, [x29, #-232]
   10780:	ldur	x4, [x9, #-256]
   10784:	add	x25, x25, x20
   10788:	add	x8, x21, x20
   1078c:	cbnz	w10, 1069c <xre_match@@Base+0x13a4>
   10790:	cmp	x0, x27
   10794:	b.cc	1069c <xre_match@@Base+0x13a4>  // b.lo, b.ul, b.last
   10798:	sub	x9, x29, #0xb0
   1079c:	ldur	x9, [x9, #-256]
   107a0:	mov	x10, x27
   107a4:	ldrb	w11, [x9]
   107a8:	add	x10, x10, #0x1
   107ac:	cmp	x10, x0
   107b0:	orr	w11, w11, #0x18
   107b4:	strb	w11, [x9], #8
   107b8:	b.ls	107a4 <xre_match@@Base+0x14ac>  // b.plast
   107bc:	mov	w9, #0x1                   	// #1
   107c0:	stur	w9, [x29, #-112]
   107c4:	b	1069c <xre_match@@Base+0x13a4>
   107c8:	cmp	w12, #0xa
   107cc:	b.ne	10998 <xre_match@@Base+0x16a0>  // b.any
   107d0:	ldur	x11, [x29, #-136]
   107d4:	ldrsb	w11, [x11, #56]
   107d8:	tbz	w11, #31, 10998 <xre_match@@Base+0x16a0>
   107dc:	mov	w9, #0xa                   	// #10
   107e0:	ldrb	w10, [x8, #3]
   107e4:	cmp	w10, #0x2
   107e8:	b.eq	fcdc <xre_match@@Base+0x9e4>  // b.none
   107ec:	and	w11, w10, #0xfe
   107f0:	cmp	w11, #0x4
   107f4:	b.ne	10adc <xre_match@@Base+0x17e4>  // b.any
   107f8:	ldrb	w12, [x8, #4]
   107fc:	cmp	w10, #0x5
   10800:	cset	w11, eq  // eq = none
   10804:	cmp	w9, w12, lsl #3
   10808:	b.cs	1082c <xre_match@@Base+0x1534>  // b.hs, b.nlast
   1080c:	lsr	w12, w9, #3
   10810:	add	x8, x12, x8
   10814:	ldrb	w8, [x8, #5]
   10818:	and	w9, w9, #0x7
   1081c:	lsr	w8, w8, w9
   10820:	tbz	w8, #0, 1082c <xre_match@@Base+0x1534>
   10824:	cmp	w10, #0x5
   10828:	cset	w11, ne  // ne = any
   1082c:	cbnz	w11, 10adc <xre_match@@Base+0x17e4>
   10830:	mov	w8, #0x11                  	// #17
   10834:	strb	w8, [x26]
   10838:	b	10ae8 <xre_match@@Base+0x17f0>
   1083c:	cmp	w9, #0x6
   10840:	b.ne	10858 <xre_match@@Base+0x1560>  // b.any
   10844:	ldrb	w9, [x8, #1]
   10848:	ldrb	w8, [x8, #2]
   1084c:	cmp	x27, #0x101
   10850:	csel	x27, x9, x27, eq  // eq = none
   10854:	add	x0, x8, x9
   10858:	sub	x8, x29, #0x98
   1085c:	stur	x11, [x8, #-256]
   10860:	sub	x8, x29, #0x8
   10864:	sub	x9, x0, x27
   10868:	stur	x10, [x8, #-256]
   1086c:	sub	x8, x29, #0x30
   10870:	add	x9, x9, x9, lsl #1
   10874:	stur	x15, [x8, #-256]
   10878:	sub	w8, w18, w23
   1087c:	add	x26, x9, #0x7
   10880:	cmp	x26, x8
   10884:	b.ls	108f4 <xre_match@@Base+0x15fc>  // b.plast
   10888:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   1088c:	ldr	x8, [x8, #3952]
   10890:	mov	w9, #0x13                  	// #19
   10894:	mov	x1, x24
   10898:	ldr	w8, [x8]
   1089c:	mul	w8, w8, w9
   108a0:	stur	w8, [x29, #-232]
   108a4:	mov	w8, w18
   108a8:	ldur	w9, [x29, #-232]
   108ac:	cmp	w8, w9
   108b0:	b.hi	10fd0 <xre_match@@Base+0x1cd8>  // b.pmore
   108b4:	lsl	w20, w8, #1
   108b8:	sub	x24, sp, w20, uxtw #3
   108bc:	mov	sp, x24
   108c0:	mov	w8, w8
   108c4:	lsl	x2, x8, #3
   108c8:	mov	x21, x0
   108cc:	mov	x0, x24
   108d0:	bl	4db0 <memcpy@plt>
   108d4:	ldp	x2, x17, [x29, #-80]
   108d8:	sub	w8, w20, w23
   108dc:	mov	x0, x21
   108e0:	mov	w18, w20
   108e4:	cmp	x26, x8
   108e8:	mov	w8, w20
   108ec:	mov	x1, x24
   108f0:	b.hi	108a8 <xre_match@@Base+0x15b0>  // b.pmore
   108f4:	sub	x8, x29, #0x98
   108f8:	ldur	x14, [x8, #-256]
   108fc:	sub	x8, x29, #0xa0
   10900:	ldur	x8, [x8, #-256]
   10904:	cmp	x0, x27
   10908:	bfi	x14, x8, #8, #56
   1090c:	mov	x8, x27
   10910:	b.cc	10948 <xre_match@@Base+0x1650>  // b.lo, b.ul, b.last
   10914:	lsl	x9, x8, #3
   10918:	ldr	x10, [x19, x9]
   1091c:	add	w11, w23, #0x1
   10920:	add	x8, x8, #0x1
   10924:	add	w12, w23, #0x2
   10928:	str	x10, [x24, w23, uxtw #3]
   1092c:	ldr	x10, [x28, x9]
   10930:	add	w23, w23, #0x3
   10934:	cmp	x8, x0
   10938:	str	x10, [x24, w11, uxtw #3]
   1093c:	ldr	x9, [x22, x9]
   10940:	str	x9, [x24, w12, uxtw #3]
   10944:	b.ls	10914 <xre_match@@Base+0x161c>  // b.plast
   10948:	sub	x11, x29, #0x8
   1094c:	ldur	x13, [x11, #-256]
   10950:	add	w8, w23, #0x1
   10954:	mov	w9, w23
   10958:	add	w10, w23, #0x2
   1095c:	add	x11, x13, x14
   10960:	add	w12, w23, #0x3
   10964:	lsl	x9, x9, #3
   10968:	lsl	x8, x8, #3
   1096c:	add	w23, w23, #0x4
   10970:	str	w27, [x24, x9]
   10974:	str	w0, [x24, x8]
   10978:	str	x11, [x24, w10, uxtw #3]
   1097c:	str	x25, [x24, w12, uxtw #3]
   10980:	sub	x8, x29, #0x30
   10984:	ldur	x6, [x29, #-224]
   10988:	ldur	x16, [x29, #-120]
   1098c:	ldur	x15, [x8, #-256]
   10990:	mov	x12, x13
   10994:	b	f7a8 <xre_match@@Base+0x4b0>
   10998:	cmp	w12, #0x4
   1099c:	b.ne	10adc <xre_match@@Base+0x17e4>  // b.any
   109a0:	ldrb	w11, [x8, #3]
   109a4:	cmp	w11, #0x2
   109a8:	b.eq	10a30 <xre_match@@Base+0x1738>  // b.none
   109ac:	cmp	w11, #0x5
   109b0:	b.eq	10a58 <xre_match@@Base+0x1760>  // b.none
   109b4:	cmp	w11, #0x4
   109b8:	b.ne	10adc <xre_match@@Base+0x17e4>  // b.any
   109bc:	ldrb	w11, [x10, #1]
   109c0:	cbz	w11, 10aa8 <xre_match@@Base+0x17b0>
   109c4:	ldrb	w12, [x8, #4]
   109c8:	add	x9, x26, x9
   109cc:	mov	x13, xzr
   109d0:	add	x10, x10, #0x2
   109d4:	add	x9, x9, #0x8
   109d8:	cmp	x12, x13
   109dc:	b.eq	10ac8 <xre_match@@Base+0x17d0>  // b.none
   109e0:	mov	x3, x15
   109e4:	ldrb	w14, [x10, x13]
   109e8:	ldrb	w15, [x9, x13]
   109ec:	tst	w15, w14
   109f0:	b.ne	10ac0 <xre_match@@Base+0x17c8>  // b.any
   109f4:	add	x13, x13, #0x1
   109f8:	cmp	x13, x11
   109fc:	mov	x15, x3
   10a00:	b.cc	109d8 <xre_match@@Base+0x16e0>  // b.lo, b.ul, b.last
   10a04:	mov	w12, w13
   10a08:	b	10ac8 <xre_match@@Base+0x17d0>
   10a0c:	stur	w10, [x29, #-112]
   10a10:	mov	x20, x25
   10a14:	mov	x15, x3
   10a18:	b	10a24 <xre_match@@Base+0x172c>
   10a1c:	mov	x20, x25
   10a20:	stur	w13, [x29, #-112]
   10a24:	sub	x8, x29, #0x8
   10a28:	ldur	x12, [x8, #-256]
   10a2c:	b	f7ac <xre_match@@Base+0x4b4>
   10a30:	ldrb	w9, [x10, #1]
   10a34:	ldrb	w8, [x8, #5]
   10a38:	cmp	w8, w9, lsl #3
   10a3c:	b.cs	10830 <xre_match@@Base+0x1538>  // b.hs, b.nlast
   10a40:	add	x9, x10, x8, lsr #3
   10a44:	ldrb	w9, [x9, #2]
   10a48:	and	w8, w8, #0x7
   10a4c:	lsr	w8, w9, w8
   10a50:	tbnz	w8, #0, 10adc <xre_match@@Base+0x17e4>
   10a54:	b	10830 <xre_match@@Base+0x1538>
   10a58:	ldrb	w11, [x10, #1]
   10a5c:	cbz	w11, 10ab0 <xre_match@@Base+0x17b8>
   10a60:	add	x9, x26, x9
   10a64:	mov	x12, xzr
   10a68:	add	x10, x10, #0x2
   10a6c:	add	x9, x9, #0x8
   10a70:	b	10a80 <xre_match@@Base+0x1788>
   10a74:	add	x12, x12, #0x1
   10a78:	cmp	x12, x11
   10a7c:	b.cs	10ab4 <xre_match@@Base+0x17bc>  // b.hs, b.nlast
   10a80:	ldrb	w13, [x10, x12]
   10a84:	cbz	w13, 10a74 <xre_match@@Base+0x177c>
   10a88:	ldrb	w14, [x8, #4]
   10a8c:	cmp	x12, x14
   10a90:	b.cs	10ab4 <xre_match@@Base+0x17bc>  // b.hs, b.nlast
   10a94:	ldrb	w14, [x9, x12]
   10a98:	eor	w14, w14, #0xff
   10a9c:	tst	w13, w14
   10aa0:	b.eq	10a74 <xre_match@@Base+0x177c>  // b.none
   10aa4:	b	10ab4 <xre_match@@Base+0x17bc>
   10aa8:	mov	w12, wzr
   10aac:	b	10ac8 <xre_match@@Base+0x17d0>
   10ab0:	mov	w12, wzr
   10ab4:	cmp	w12, w11
   10ab8:	b.eq	10830 <xre_match@@Base+0x1538>  // b.none
   10abc:	b	10adc <xre_match@@Base+0x17e4>
   10ac0:	mov	w12, w13
   10ac4:	mov	x15, x3
   10ac8:	cmp	w12, w11
   10acc:	b.eq	10830 <xre_match@@Base+0x1538>  // b.none
   10ad0:	ldrb	w8, [x8, #4]
   10ad4:	cmp	w12, w8
   10ad8:	b.eq	10830 <xre_match@@Base+0x1538>  // b.none
   10adc:	ldrb	w8, [x26]
   10ae0:	cmp	w8, #0x11
   10ae4:	b.ne	10b64 <xre_match@@Base+0x186c>  // b.any
   10ae8:	sub	w8, w23, #0x3
   10aec:	sub	w10, w23, #0x4
   10af0:	lsl	x8, x8, #3
   10af4:	lsl	x9, x10, #3
   10af8:	ldrsw	x8, [x24, x8]
   10afc:	ldrsw	x9, [x24, x9]
   10b00:	cmp	w8, w9
   10b04:	b.cc	f78c <xre_match@@Base+0x494>  // b.lo, b.ul, b.last
   10b08:	sub	x11, x29, #0x60
   10b0c:	ldur	x14, [x11, #-256]
   10b10:	sub	x11, x29, #0x68
   10b14:	mov	x3, x15
   10b18:	ldur	x15, [x11, #-256]
   10b1c:	sub	w10, w23, #0x7
   10b20:	add	w11, w10, #0x2
   10b24:	ldr	x11, [x24, w11, uxtw #3]
   10b28:	lsl	x12, x8, #3
   10b2c:	add	w13, w10, #0x1
   10b30:	sub	x8, x8, #0x1
   10b34:	str	x11, [x15, x12]
   10b38:	ldr	x11, [x24, w13, uxtw #3]
   10b3c:	cmp	x8, x9
   10b40:	str	x11, [x14, x12]
   10b44:	ldr	x11, [x24, w10, uxtw #3]
   10b48:	sub	w10, w10, #0x3
   10b4c:	str	x11, [x14, x12]
   10b50:	b.cs	10b20 <xre_match@@Base+0x1828>  // b.hs, b.nlast
   10b54:	add	w23, w10, #0x3
   10b58:	mov	x15, x3
   10b5c:	stur	wzr, [x29, #-112]
   10b60:	b	f794 <xre_match@@Base+0x49c>
   10b64:	mov	w8, #0xd                   	// #13
   10b68:	strb	w8, [x26]
   10b6c:	b	f794 <xre_match@@Base+0x49c>
   10b70:	mov	x15, x16
   10b74:	mov	x25, x16
   10b78:	b	10c3c <xre_match@@Base+0x1944>
   10b7c:	sub	x8, x29, #0x88
   10b80:	sub	x9, x29, #0x80
   10b84:	sub	x10, x29, #0x78
   10b88:	sub	x11, x29, #0x38
   10b8c:	sub	x12, x29, #0x70
   10b90:	ldur	x8, [x8, #-256]
   10b94:	ldur	x9, [x9, #-256]
   10b98:	ldur	x10, [x10, #-256]
   10b9c:	ldur	x11, [x11, #-256]
   10ba0:	ldur	x12, [x12, #-256]
   10ba4:	ldur	x13, [x29, #-176]
   10ba8:	ldp	q0, q1, [x12, #-16]
   10bac:	add	x12, x12, #0x20
   10bb0:	subs	x11, x11, #0x4
   10bb4:	stp	q0, q1, [x10, #-16]
   10bb8:	ldp	q0, q1, [x8, #-16]
   10bbc:	add	x10, x10, #0x20
   10bc0:	add	x8, x8, #0x20
   10bc4:	stp	q0, q1, [x9, #-16]
   10bc8:	add	x9, x9, #0x20
   10bcc:	b.ne	10ba8 <xre_match@@Base+0x18b0>  // b.any
   10bd0:	sub	x9, x29, #0x38
   10bd4:	ldur	x8, [x29, #-96]
   10bd8:	ldur	x9, [x9, #-256]
   10bdc:	cmp	x8, x9
   10be0:	sub	x8, x29, #0x90
   10be4:	ldur	x9, [x8, #-256]
   10be8:	b.eq	10c2c <xre_match@@Base+0x1934>  // b.none
   10bec:	sub	x8, x29, #0x58
   10bf0:	sub	x11, x29, #0x20
   10bf4:	ldur	x8, [x8, #-256]
   10bf8:	ldur	x11, [x11, #-256]
   10bfc:	lsl	x12, x9, #3
   10c00:	add	x10, x28, x12
   10c04:	sub	x8, x8, x9
   10c08:	add	x9, x13, x12
   10c0c:	add	x11, x11, x12
   10c10:	add	x12, x19, x12
   10c14:	ldr	x13, [x12], #8
   10c18:	subs	x8, x8, #0x1
   10c1c:	str	x13, [x11], #8
   10c20:	ldr	x13, [x10], #8
   10c24:	str	x13, [x9], #8
   10c28:	b.ne	10c14 <xre_match@@Base+0x191c>  // b.any
   10c2c:	mov	w8, #0x1                   	// #1
   10c30:	stur	w8, [x29, #-124]
   10c34:	stur	x20, [x29, #-152]
   10c38:	mov	x25, x20
   10c3c:	mov	x20, x25
   10c40:	cbz	w23, 10f40 <xre_match@@Base+0x1c48>
   10c44:	mov	x25, x20
   10c48:	mov	w13, #0x231                 	// #561
   10c4c:	mov	w14, #0x3ce                 	// #974
   10c50:	b	10c60 <xre_match@@Base+0x1968>
   10c54:	cmp	w9, #0x15
   10c58:	b.ne	f6b0 <xre_match@@Base+0x3b8>  // b.any
   10c5c:	cbz	w23, 10f40 <xre_match@@Base+0x1c48>
   10c60:	sub	w9, w23, #0x1
   10c64:	sub	w11, w23, #0x3
   10c68:	sub	w8, w23, #0x4
   10c6c:	ldr	x9, [x24, w9, uxtw #3]
   10c70:	lsl	x11, x11, #3
   10c74:	lsl	x12, x8, #3
   10c78:	sub	w10, w23, #0x2
   10c7c:	ldrsw	x0, [x24, x11]
   10c80:	ldrsw	x27, [x24, x12]
   10c84:	ldr	x26, [x24, w10, uxtw #3]
   10c88:	cmp	x9, #0x0
   10c8c:	csel	x25, x25, x9, eq  // eq = none
   10c90:	cmp	w0, w27
   10c94:	b.cc	10cd8 <xre_match@@Base+0x19e0>  // b.lo, b.ul, b.last
   10c98:	sub	w8, w23, #0x7
   10c9c:	mov	x9, x0
   10ca0:	add	w10, w8, #0x2
   10ca4:	ldr	x10, [x24, w10, uxtw #3]
   10ca8:	lsl	x11, x9, #3
   10cac:	add	w12, w8, #0x1
   10cb0:	sub	x9, x9, #0x1
   10cb4:	str	x10, [x22, x11]
   10cb8:	ldr	x10, [x24, w12, uxtw #3]
   10cbc:	cmp	x9, x27
   10cc0:	str	x10, [x28, x11]
   10cc4:	ldr	x10, [x24, w8, uxtw #3]
   10cc8:	sub	w8, w8, #0x3
   10ccc:	str	x10, [x19, x11]
   10cd0:	b.cs	10ca0 <xre_match@@Base+0x19a8>  // b.hs, b.nlast
   10cd4:	add	w8, w8, #0x3
   10cd8:	mov	w23, w8
   10cdc:	cbz	x26, 10c5c <xre_match@@Base+0x1964>
   10ce0:	cmp	x26, x17
   10ce4:	b.cs	f6b0 <xre_match@@Base+0x3b8>  // b.hs, b.nlast
   10ce8:	ldrb	w8, [x26]
   10cec:	sub	w8, w8, #0xd
   10cf0:	cmp	w8, #0x9
   10cf4:	b.hi	f6b0 <xre_match@@Base+0x3b8>  // b.pmore
   10cf8:	lsr	w9, w13, w8
   10cfc:	tbz	w9, #0, f6b0 <xre_match@@Base+0x3b8>
   10d00:	ldrb	w9, [x26, #1]
   10d04:	ldrsb	x10, [x26, #2]
   10d08:	lsr	w8, w14, w8
   10d0c:	bfi	x9, x10, #8, #56
   10d10:	add	x9, x26, x9
   10d14:	add	x10, x9, #0x3
   10d18:	stur	x10, [x29, #-16]
   10d1c:	ldrb	w9, [x9, #3]
   10d20:	tbnz	w8, #0, 10c54 <xre_match@@Base+0x195c>
   10d24:	cmp	w9, #0xf
   10d28:	b.eq	10c5c <xre_match@@Base+0x1964>  // b.none
   10d2c:	b	f6b0 <xre_match@@Base+0x3b8>
   10d30:	mov	x15, x3
   10d34:	b	10c3c <xre_match@@Base+0x1944>
   10d38:	mov	x25, x8
   10d3c:	b	10c3c <xre_match@@Base+0x1944>
   10d40:	ldur	x25, [x29, #-192]
   10d44:	b	10c3c <xre_match@@Base+0x1944>
   10d48:	sub	x8, x29, #0x30
   10d4c:	ldur	x6, [x29, #-224]
   10d50:	ldp	x2, x17, [x29, #-80]
   10d54:	ldur	x16, [x29, #-120]
   10d58:	ldur	w18, [x29, #-232]
   10d5c:	ldur	x15, [x8, #-256]
   10d60:	b	10c3c <xre_match@@Base+0x1944>
   10d64:	sub	x10, x29, #0x98
   10d68:	stur	x0, [x10, #-256]
   10d6c:	sub	x10, x29, #0x30
   10d70:	add	x9, x22, x9, lsl #3
   10d74:	stur	x15, [x10, #-256]
   10d78:	ldrb	w10, [x9]
   10d7c:	add	x11, x8, #0x3
   10d80:	stur	x11, [x29, #-232]
   10d84:	tbz	w10, #4, 10de8 <xre_match@@Base+0x1af0>
   10d88:	and	w10, w10, #0xffffffef
   10d8c:	strb	w10, [x9]
   10d90:	ldrb	w9, [x26, #2]
   10d94:	cbz	w9, 10de8 <xre_match@@Base+0x1af0>
   10d98:	ldrb	w9, [x12]
   10d9c:	b	10db8 <xre_match@@Base+0x1ac0>
   10da0:	ldrb	w10, [x26, #1]
   10da4:	ldrb	w11, [x26, #2]
   10da8:	add	x9, x9, #0x1
   10dac:	add	x10, x11, x10
   10db0:	cmp	x9, x10
   10db4:	b.cs	10de8 <xre_match@@Base+0x1af0>  // b.hs, b.nlast
   10db8:	sub	x11, x29, #0x48
   10dbc:	ldur	x11, [x11, #-256]
   10dc0:	lsl	x10, x9, #3
   10dc4:	sub	x12, x29, #0x50
   10dc8:	ldur	x12, [x12, #-256]
   10dcc:	ldr	x11, [x11, x10]
   10dd0:	str	x11, [x19, x10]
   10dd4:	ldr	x10, [x12, x10]
   10dd8:	cmp	x10, x11
   10ddc:	b.cc	10da0 <xre_match@@Base+0x1aa8>  // b.lo, b.ul, b.last
   10de0:	str	x10, [x28, x9, lsl #3]
   10de4:	b	10da0 <xre_match@@Base+0x1aa8>
   10de8:	add	x9, x8, #0x1
   10dec:	sub	x11, x29, #0x98
   10df0:	stur	x9, [x29, #-16]
   10df4:	ldur	x11, [x11, #-256]
   10df8:	ldrb	w9, [x8, #1]
   10dfc:	ldrsb	x8, [x8, #2]
   10e00:	sub	w10, w18, w23
   10e04:	sub	x11, x11, x27
   10e08:	stur	x9, [x29, #-112]
   10e0c:	sub	x9, x29, #0x8
   10e10:	stur	x8, [x9, #-256]
   10e14:	add	x8, x11, x11, lsl #1
   10e18:	add	x20, x8, #0x7
   10e1c:	ldur	x8, [x29, #-232]
   10e20:	cmp	x20, x10
   10e24:	stur	x8, [x29, #-16]
   10e28:	b.ls	10e84 <xre_match@@Base+0x1b8c>  // b.plast
   10e2c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   10e30:	ldr	x8, [x8, #3952]
   10e34:	mov	w9, #0x13                  	// #19
   10e38:	mov	x1, x24
   10e3c:	ldr	w8, [x8]
   10e40:	mul	w21, w8, w9
   10e44:	mov	w8, w18
   10e48:	cmp	w8, w21
   10e4c:	b.hi	10fd0 <xre_match@@Base+0x1cd8>  // b.pmore
   10e50:	lsl	w26, w8, #1
   10e54:	sub	x24, sp, w26, uxtw #3
   10e58:	mov	sp, x24
   10e5c:	mov	w8, w8
   10e60:	lsl	x2, x8, #3
   10e64:	mov	x0, x24
   10e68:	bl	4db0 <memcpy@plt>
   10e6c:	sub	w8, w26, w23
   10e70:	cmp	x20, x8
   10e74:	mov	w8, w26
   10e78:	mov	x1, x24
   10e7c:	b.hi	10e48 <xre_match@@Base+0x1b50>  // b.pmore
   10e80:	b	10e88 <xre_match@@Base+0x1b90>
   10e84:	mov	w26, w18
   10e88:	sub	x8, x29, #0x98
   10e8c:	sub	x10, x29, #0x8
   10e90:	ldur	x8, [x8, #-256]
   10e94:	ldur	x9, [x29, #-112]
   10e98:	ldur	x10, [x10, #-256]
   10e9c:	subs	x8, x8, x27
   10ea0:	bfi	x9, x10, #8, #56
   10ea4:	stur	x9, [x29, #-112]
   10ea8:	b.cc	10eec <xre_match@@Base+0x1bf4>  // b.lo, b.ul, b.last
   10eac:	lsl	x11, x27, #3
   10eb0:	add	x8, x8, #0x1
   10eb4:	add	x9, x28, x11
   10eb8:	add	x10, x19, x11
   10ebc:	add	x11, x22, x11
   10ec0:	ldr	x12, [x10], #8
   10ec4:	add	w13, w23, #0x1
   10ec8:	subs	x8, x8, #0x1
   10ecc:	str	x12, [x24, w23, uxtw #3]
   10ed0:	ldr	x12, [x9], #8
   10ed4:	str	x12, [x24, w13, uxtw #3]
   10ed8:	ldr	x12, [x11], #8
   10edc:	add	w13, w23, #0x2
   10ee0:	add	w23, w23, #0x3
   10ee4:	str	x12, [x24, w13, uxtw #3]
   10ee8:	b.ne	10ec0 <xre_match@@Base+0x1bc8>  // b.any
   10eec:	mov	w9, w23
   10ef0:	lsl	x9, x9, #3
   10ef4:	str	w27, [x24, x9]
   10ef8:	sub	x9, x29, #0x98
   10efc:	ldur	x9, [x9, #-256]
   10f00:	add	w8, w23, #0x1
   10f04:	lsl	x8, x8, #3
   10f08:	ldp	x11, x6, [x29, #-232]
   10f0c:	ldp	x16, x12, [x29, #-120]
   10f10:	str	w9, [x24, x8]
   10f14:	sub	x8, x29, #0x30
   10f18:	ldp	x2, x17, [x29, #-80]
   10f1c:	ldur	x15, [x8, #-256]
   10f20:	add	w10, w23, #0x2
   10f24:	add	x11, x11, x12
   10f28:	add	w12, w23, #0x3
   10f2c:	add	w23, w23, #0x4
   10f30:	mov	w18, w26
   10f34:	str	x11, [x24, w10, uxtw #3]
   10f38:	str	x25, [x24, w12, uxtw #3]
   10f3c:	b	10c3c <xre_match@@Base+0x1944>
   10f40:	ldur	x24, [x29, #-248]
   10f44:	ldur	x23, [x29, #-184]
   10f48:	ldur	x25, [x29, #-88]
   10f4c:	ldur	w8, [x29, #-124]
   10f50:	cbz	w8, 10fc8 <xre_match@@Base+0x1cd0>
   10f54:	ldur	x20, [x29, #-152]
   10f58:	ldur	x8, [x29, #-104]
   10f5c:	cmp	x20, x25
   10f60:	ccmp	x20, x6, #0x0, ls  // ls = plast
   10f64:	csel	x15, x16, x8, cc  // cc = lo, ul, last
   10f68:	cmp	x23, #0x2
   10f6c:	b.cc	10fe8 <xre_match@@Base+0x1cf0>  // b.lo, b.ul, b.last
   10f70:	ldur	x8, [x29, #-96]
   10f74:	cmp	x8, #0x4
   10f78:	b.cs	1107c <xre_match@@Base+0x1d84>  // b.hs, b.nlast
   10f7c:	mov	w8, #0x1                   	// #1
   10f80:	ldur	x9, [x29, #-96]
   10f84:	sub	x13, x29, #0x20
   10f88:	ldur	x10, [x29, #-176]
   10f8c:	ldur	x13, [x13, #-256]
   10f90:	sub	x9, x9, x8
   10f94:	lsl	x12, x8, #3
   10f98:	add	x8, x9, #0x1
   10f9c:	add	x9, x28, x12
   10fa0:	add	x10, x10, x12
   10fa4:	add	x11, x19, x12
   10fa8:	add	x12, x13, x12
   10fac:	ldr	x13, [x12], #8
   10fb0:	subs	x8, x8, #0x1
   10fb4:	str	x13, [x11], #8
   10fb8:	ldr	x13, [x10], #8
   10fbc:	str	x13, [x9], #8
   10fc0:	b.ne	10fac <xre_match@@Base+0x1cb4>  // b.any
   10fc4:	b	10fe8 <xre_match@@Base+0x1cf0>
   10fc8:	mov	w0, #0xffffffff            	// #-1
   10fcc:	b	113ec <xre_match@@Base+0x20f4>
   10fd0:	mov	w0, #0xfffffffe            	// #-2
   10fd4:	b	113ec <xre_match@@Base+0x20f4>
   10fd8:	mov	x20, x25
   10fdc:	ldur	x24, [x29, #-248]
   10fe0:	ldur	x23, [x29, #-184]
   10fe4:	ldur	x25, [x29, #-88]
   10fe8:	cbz	x24, 113c4 <xre_match@@Base+0x20cc>
   10fec:	ldur	x8, [x29, #-136]
   10ff0:	ldrb	w8, [x8, #56]
   10ff4:	tbnz	w8, #4, 113c4 <xre_match@@Base+0x20cc>
   10ff8:	ubfx	w8, w8, #1, #2
   10ffc:	cmp	w8, #0x1
   11000:	mov	x21, x15
   11004:	b.eq	11198 <xre_match@@Base+0x1ea0>  // b.none
   11008:	cbnz	w8, 111f8 <xre_match@@Base+0x1f00>
   1100c:	ldur	x8, [x29, #-96]
   11010:	mov	w9, #0x1e                  	// #30
   11014:	add	x8, x8, #0x2
   11018:	cmp	x8, #0x1e
   1101c:	csel	x8, x8, x9, hi  // hi = pmore
   11020:	ubfiz	x23, x8, #2, #32
   11024:	mov	x0, x23
   11028:	str	w8, [x24]
   1102c:	bl	5160 <malloc@plt>
   11030:	mov	x22, x0
   11034:	str	x0, [x24, #8]
   11038:	mov	x0, x23
   1103c:	bl	5160 <malloc@plt>
   11040:	mov	x8, x0
   11044:	str	x0, [x24, #16]
   11048:	mov	w0, #0xfffffffe            	// #-2
   1104c:	cbz	x8, 113ec <xre_match@@Base+0x20f4>
   11050:	ldur	x23, [x29, #-184]
   11054:	ldur	x6, [x29, #-224]
   11058:	ldur	x2, [x29, #-80]
   1105c:	cbz	x22, 113ec <xre_match@@Base+0x20f4>
   11060:	ldur	x9, [x29, #-136]
   11064:	mov	x15, x21
   11068:	ldrb	w8, [x9, #56]
   1106c:	and	w8, w8, #0xfffffffb
   11070:	orr	w8, w8, #0x2
   11074:	strb	w8, [x9, #56]
   11078:	b	111f8 <xre_match@@Base+0x1f00>
   1107c:	sub	x9, x29, #0x20
   11080:	ldur	x10, [x29, #-200]
   11084:	ldur	x9, [x9, #-256]
   11088:	mov	x3, x15
   1108c:	add	x8, x19, #0x8
   11090:	add	x16, x28, x10
   11094:	add	x15, x9, #0x8
   11098:	add	x17, x9, x10
   1109c:	ldur	x9, [x29, #-176]
   110a0:	add	x12, x19, x10
   110a4:	add	x14, x28, #0x8
   110a8:	cmp	x8, x16
   110ac:	add	x18, x9, #0x8
   110b0:	add	x0, x9, x10
   110b4:	cset	w9, cc  // cc = lo, ul, last
   110b8:	cmp	x14, x12
   110bc:	cset	w10, cc  // cc = lo, ul, last
   110c0:	cmp	x8, x17
   110c4:	and	w1, w9, w10
   110c8:	cset	w9, cc  // cc = lo, ul, last
   110cc:	cmp	x15, x12
   110d0:	cset	w11, cc  // cc = lo, ul, last
   110d4:	cmp	x8, x0
   110d8:	cset	w10, cc  // cc = lo, ul, last
   110dc:	cmp	x18, x12
   110e0:	cset	w13, cc  // cc = lo, ul, last
   110e4:	cmp	x14, x17
   110e8:	cset	w12, cc  // cc = lo, ul, last
   110ec:	cmp	x15, x16
   110f0:	cset	w15, cc  // cc = lo, ul, last
   110f4:	cmp	x14, x0
   110f8:	cset	w14, cc  // cc = lo, ul, last
   110fc:	cmp	x18, x16
   11100:	cset	w16, cc  // cc = lo, ul, last
   11104:	mov	w8, #0x1                   	// #1
   11108:	tbnz	w1, #0, 11414 <xre_match@@Base+0x211c>
   1110c:	and	w9, w9, w11
   11110:	tbnz	w9, #0, 11414 <xre_match@@Base+0x211c>
   11114:	ldur	x6, [x29, #-224]
   11118:	and	w9, w10, w13
   1111c:	tbnz	w9, #0, 1140c <xre_match@@Base+0x2114>
   11120:	and	w9, w12, w15
   11124:	tbnz	w9, #0, 1140c <xre_match@@Base+0x2114>
   11128:	and	w9, w14, w16
   1112c:	mov	x15, x3
   11130:	tbnz	w9, #0, 10f80 <xre_match@@Base+0x1c88>
   11134:	ldur	x8, [x29, #-96]
   11138:	add	x11, x19, #0x18
   1113c:	add	x13, x28, #0x18
   11140:	and	x9, x8, #0xfffffffffffffffc
   11144:	sub	x8, x29, #0x20
   11148:	ldur	x8, [x8, #-256]
   1114c:	mov	x14, x9
   11150:	add	x10, x8, #0x18
   11154:	ldur	x8, [x29, #-176]
   11158:	add	x12, x8, #0x18
   1115c:	orr	x8, x9, #0x1
   11160:	ldp	q0, q1, [x10, #-16]
   11164:	add	x10, x10, #0x20
   11168:	subs	x14, x14, #0x4
   1116c:	stp	q0, q1, [x11, #-16]
   11170:	ldp	q0, q1, [x12, #-16]
   11174:	add	x11, x11, #0x20
   11178:	add	x12, x12, #0x20
   1117c:	stp	q0, q1, [x13, #-16]
   11180:	add	x13, x13, #0x20
   11184:	b.ne	11160 <xre_match@@Base+0x1e68>  // b.any
   11188:	ldur	x10, [x29, #-96]
   1118c:	cmp	x10, x9
   11190:	b.ne	10f80 <xre_match@@Base+0x1c88>  // b.any
   11194:	b	10fe8 <xre_match@@Base+0x1cf0>
   11198:	ldur	x8, [x29, #-96]
   1119c:	ldr	w9, [x24]
   111a0:	add	x8, x8, #0x2
   111a4:	cmp	x8, x9
   111a8:	b.ls	111f8 <xre_match@@Base+0x1f00>  // b.plast
   111ac:	ldr	x0, [x24, #8]
   111b0:	ubfiz	x1, x8, #2, #32
   111b4:	str	w8, [x24]
   111b8:	bl	4f30 <realloc@plt>
   111bc:	ldr	w9, [x24]
   111c0:	ldr	x8, [x24, #16]
   111c4:	str	x0, [x24, #8]
   111c8:	lsl	x1, x9, #2
   111cc:	mov	x0, x8
   111d0:	bl	4f30 <realloc@plt>
   111d4:	mov	x8, x0
   111d8:	str	x0, [x24, #16]
   111dc:	mov	w0, #0xfffffffe            	// #-2
   111e0:	cbz	x8, 113ec <xre_match@@Base+0x20f4>
   111e4:	ldr	x8, [x24, #8]
   111e8:	ldur	x6, [x29, #-224]
   111ec:	ldur	x2, [x29, #-80]
   111f0:	mov	x15, x21
   111f4:	cbz	x8, 113ec <xre_match@@Base+0x20f4>
   111f8:	ldr	w8, [x24]
   111fc:	cbz	w8, 11238 <xre_match@@Base+0x1f40>
   11200:	ldr	x8, [x24, #8]
   11204:	ldur	x10, [x29, #-168]
   11208:	ldur	x11, [x29, #-144]
   1120c:	sub	w9, w20, w6
   11210:	str	w10, [x8]
   11214:	sub	w8, w20, w2
   11218:	add	w8, w11, w8
   1121c:	ldur	x11, [x29, #-104]
   11220:	ldr	x10, [x24, #16]
   11224:	cmp	x15, x11
   11228:	csel	w8, w9, w8, eq  // eq = none
   1122c:	str	w8, [x10]
   11230:	ldr	w12, [x24]
   11234:	b	1123c <xre_match@@Base+0x1f44>
   11238:	mov	w12, wzr
   1123c:	mov	w8, w12
   11240:	cmp	x23, x8
   11244:	csel	x8, x23, x8, cc  // cc = lo, ul, last
   11248:	cmp	x8, #0x2
   1124c:	b.cc	11388 <xre_match@@Base+0x2090>  // b.lo, b.ul, b.last
   11250:	ldur	x10, [x29, #-144]
   11254:	add	x8, x24, #0x8
   11258:	add	x9, x24, #0x10
   1125c:	cbz	w10, 11318 <xre_match@@Base+0x2020>
   11260:	ldur	x0, [x29, #-144]
   11264:	adrp	x11, 2b000 <xexit@@Base+0x14b84>
   11268:	mov	w10, #0x1                   	// #1
   1126c:	add	x11, x11, #0x5e0
   11270:	b	112a4 <xre_match@@Base+0x1fac>
   11274:	ldr	x13, [x9]
   11278:	mov	w12, #0xffffffff            	// #-1
   1127c:	str	w12, [x13, x10, lsl #2]
   11280:	mov	x13, x8
   11284:	ldr	x13, [x13]
   11288:	str	w12, [x13, x10, lsl #2]
   1128c:	ldr	w12, [x24]
   11290:	add	x10, x10, #0x1
   11294:	cmp	x23, x12
   11298:	csel	x13, x23, x12, cc  // cc = lo, ul, last
   1129c:	cmp	x13, x10
   112a0:	b.ls	11388 <xre_match@@Base+0x2090>  // b.plast
   112a4:	ldr	x12, [x19, x10, lsl #3]
   112a8:	cmp	x12, x11
   112ac:	b.eq	11274 <xre_match@@Base+0x1f7c>  // b.none
   112b0:	ldr	x13, [x28, x10, lsl #3]
   112b4:	cmp	x13, x11
   112b8:	b.eq	11274 <xre_match@@Base+0x1f7c>  // b.none
   112bc:	sub	w15, w12, w2
   112c0:	cmp	x6, x12
   112c4:	ldr	x16, [x8]
   112c8:	sub	w14, w12, w6
   112cc:	ccmp	x12, x25, #0x2, ls  // ls = plast
   112d0:	add	w12, w0, w15
   112d4:	sub	w18, w13, w2
   112d8:	csel	w12, w12, w14, hi  // hi = pmore
   112dc:	cmp	x13, x25
   112e0:	sub	w17, w13, w6
   112e4:	add	w15, w0, w18
   112e8:	ccmp	x6, x13, #0x2, ls  // ls = plast
   112ec:	str	w12, [x16, x10, lsl #2]
   112f0:	csel	w12, w15, w17, hi  // hi = pmore
   112f4:	mov	x15, x21
   112f8:	mov	x13, x9
   112fc:	b	11284 <xre_match@@Base+0x1f8c>
   11300:	mov	x20, x16
   11304:	b	10fdc <xre_match@@Base+0x1ce4>
   11308:	ldur	x24, [x29, #-248]
   1130c:	ldur	x23, [x29, #-184]
   11310:	tbz	w8, #0, 10f54 <xre_match@@Base+0x1c5c>
   11314:	b	10fe8 <xre_match@@Base+0x1cf0>
   11318:	adrp	x11, 2b000 <xexit@@Base+0x14b84>
   1131c:	mov	w10, #0x1                   	// #1
   11320:	add	x11, x11, #0x5e0
   11324:	b	11358 <xre_match@@Base+0x2060>
   11328:	ldr	x13, [x9]
   1132c:	mov	w12, #0xffffffff            	// #-1
   11330:	str	w12, [x13, x10, lsl #2]
   11334:	mov	x13, x8
   11338:	ldr	x13, [x13]
   1133c:	str	w12, [x13, x10, lsl #2]
   11340:	ldr	w12, [x24]
   11344:	add	x10, x10, #0x1
   11348:	cmp	x23, x12
   1134c:	csel	x13, x23, x12, cc  // cc = lo, ul, last
   11350:	cmp	x13, x10
   11354:	b.ls	11388 <xre_match@@Base+0x2090>  // b.plast
   11358:	ldr	x12, [x19, x10, lsl #3]
   1135c:	cmp	x12, x11
   11360:	b.eq	11328 <xre_match@@Base+0x2030>  // b.none
   11364:	ldr	x13, [x28, x10, lsl #3]
   11368:	cmp	x13, x11
   1136c:	b.eq	11328 <xre_match@@Base+0x2030>  // b.none
   11370:	ldr	x14, [x8]
   11374:	sub	w12, w12, w2
   11378:	str	w12, [x14, x10, lsl #2]
   1137c:	sub	w12, w13, w2
   11380:	mov	x13, x9
   11384:	b	11338 <xre_match@@Base+0x2040>
   11388:	cmp	w12, w23
   1138c:	b.ls	113c4 <xre_match@@Base+0x20cc>  // b.plast
   11390:	ldur	x8, [x29, #-96]
   11394:	ldp	x10, x9, [x24, #8]
   11398:	add	w8, w8, #0x1
   1139c:	sbfiz	x11, x8, #2, #32
   113a0:	add	x9, x9, x11
   113a4:	add	x10, x10, x11
   113a8:	mov	w11, #0xffffffff            	// #-1
   113ac:	str	w11, [x9], #4
   113b0:	str	w11, [x10], #4
   113b4:	ldr	w12, [x24]
   113b8:	add	w8, w8, #0x1
   113bc:	cmp	w12, w8
   113c0:	b.hi	113ac <xre_match@@Base+0x20b4>  // b.pmore
   113c4:	sub	x9, x29, #0x18
   113c8:	sub	x8, x29, #0x10
   113cc:	ldur	x9, [x9, #-256]
   113d0:	ldur	x10, [x29, #-104]
   113d4:	ldur	x8, [x8, #-256]
   113d8:	add	w9, w2, w9
   113dc:	cmp	x15, x10
   113e0:	sub	w8, w20, w8
   113e4:	csel	w9, w6, w9, eq  // eq = none
   113e8:	sub	w0, w8, w9
   113ec:	mov	sp, x29
   113f0:	ldp	x20, x19, [sp, #80]
   113f4:	ldp	x22, x21, [sp, #64]
   113f8:	ldp	x24, x23, [sp, #48]
   113fc:	ldp	x26, x25, [sp, #32]
   11400:	ldp	x28, x27, [sp, #16]
   11404:	ldp	x29, x30, [sp], #96
   11408:	ret
   1140c:	mov	x15, x3
   11410:	b	10f80 <xre_match@@Base+0x1c88>
   11414:	ldur	x6, [x29, #-224]
   11418:	mov	x15, x3
   1141c:	b	10f80 <xre_match@@Base+0x1c88>
   11420:	bl	5190 <abort@plt>

0000000000011424 <xre_match_2@@Base>:
   11424:	b	f318 <xre_match@@Base+0x20>

0000000000011428 <xre_compile_pattern@@Base>:
   11428:	stp	x29, x30, [sp, #-16]!
   1142c:	ldrb	w8, [x2, #56]
   11430:	mov	w9, #0x69                  	// #105
   11434:	mov	x3, x2
   11438:	mov	x29, sp
   1143c:	and	w8, w8, w9
   11440:	orr	w8, w8, #0x80
   11444:	strb	w8, [x2, #56]
   11448:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   1144c:	ldr	x8, [x8, #3800]
   11450:	ldr	x2, [x8]
   11454:	bl	1147c <xre_compile_pattern@@Base+0x54>
   11458:	cbz	w0, 11470 <xre_compile_pattern@@Base+0x48>
   1145c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   11460:	add	x8, x8, #0x9d0
   11464:	ldr	x0, [x8, w0, sxtw #3]
   11468:	ldp	x29, x30, [sp], #16
   1146c:	ret
   11470:	mov	x0, xzr
   11474:	ldp	x29, x30, [sp], #16
   11478:	ret
   1147c:	sub	sp, sp, #0x1e0
   11480:	stp	d9, d8, [sp, #368]
   11484:	stp	x29, x30, [sp, #384]
   11488:	stp	x28, x27, [sp, #400]
   1148c:	stp	x26, x25, [sp, #416]
   11490:	stp	x24, x23, [sp, #432]
   11494:	stp	x22, x21, [sp, #448]
   11498:	stp	x20, x19, [sp, #464]
   1149c:	ldr	x8, [x3, #40]
   114a0:	add	x29, sp, #0x170
   114a4:	mov	x26, x0
   114a8:	mov	w0, #0x500                 	// #1280
   114ac:	mov	x20, x3
   114b0:	mov	x19, x2
   114b4:	mov	x24, x1
   114b8:	stur	x8, [x29, #-152]
   114bc:	bl	5160 <malloc@plt>
   114c0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   114c4:	ldrb	w8, [x20, #56]
   114c8:	mov	w9, #0x97                  	// #151
   114cc:	stp	xzr, x19, [x20, #16]
   114d0:	str	xzr, [x20, #48]
   114d4:	and	w8, w8, w9
   114d8:	strb	w8, [x20, #56]
   114dc:	adrp	x8, 2b000 <xexit@@Base+0x14b84>
   114e0:	ldrb	w8, [x8, #1508]
   114e4:	mov	x22, x0
   114e8:	tbnz	w8, #0, 11568 <xre_compile_pattern@@Base+0x140>
   114ec:	adrp	x8, 2b000 <xexit@@Base+0x14b84>
   114f0:	add	x8, x8, #0x5e5
   114f4:	movi	v0.2d, #0x0
   114f8:	stp	q0, q0, [x8, #224]
   114fc:	stp	q0, q0, [x8, #192]
   11500:	stp	q0, q0, [x8, #160]
   11504:	stp	q0, q0, [x8, #128]
   11508:	stp	q0, q0, [x8, #96]
   1150c:	stp	q0, q0, [x8, #64]
   11510:	stp	q0, q0, [x8, #32]
   11514:	stp	q0, q0, [x8]
   11518:	bl	5030 <__ctype_b_loc@plt>
   1151c:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   11520:	mov	x8, xzr
   11524:	add	x9, x9, #0x5e0
   11528:	mov	w10, #0x1                   	// #1
   1152c:	b	1153c <xre_compile_pattern@@Base+0x114>
   11530:	add	x8, x8, #0x1
   11534:	cmp	x8, #0x100
   11538:	b.eq	11554 <xre_compile_pattern@@Base+0x12c>  // b.none
   1153c:	ldr	x11, [x0]
   11540:	ldrh	w11, [x11, x8, lsl #1]
   11544:	tbz	w11, #3, 11530 <xre_compile_pattern@@Base+0x108>
   11548:	add	x11, x9, x8
   1154c:	strb	w10, [x11, #5]
   11550:	b	11530 <xre_compile_pattern@@Base+0x108>
   11554:	adrp	x8, 2b000 <xexit@@Base+0x14b84>
   11558:	add	x8, x8, #0x5e4
   1155c:	mov	w9, #0x1                   	// #1
   11560:	strb	w9, [x8, #96]
   11564:	strb	w9, [x8]
   11568:	mov	x25, x20
   1156c:	ldr	x8, [x25, #8]!
   11570:	ldr	x23, [x20]
   11574:	cbz	x8, 11580 <xre_compile_pattern@@Base+0x158>
   11578:	cbnz	x24, 115a8 <xre_compile_pattern@@Base+0x180>
   1157c:	b	1400c <xre_compile_pattern@@Base+0x2be4>
   11580:	cbz	x23, 13fa8 <xre_compile_pattern@@Base+0x2b80>
   11584:	mov	w1, #0x20                  	// #32
   11588:	mov	x0, x23
   1158c:	bl	4f30 <realloc@plt>
   11590:	mov	x23, x0
   11594:	str	x0, [x20]
   11598:	cbz	x0, 13fbc <xre_compile_pattern@@Base+0x2b94>
   1159c:	mov	w8, #0x20                  	// #32
   115a0:	str	x8, [x25]
   115a4:	cbz	x24, 1400c <xre_compile_pattern@@Base+0x2be4>
   115a8:	mov	w8, #0x8400                	// #33792
   115ac:	mov	w9, #0x200020              	// #2097184
   115b0:	and	x8, x19, x8
   115b4:	mov	w10, #0x402                 	// #1026
   115b8:	lsr	x11, x19, #15
   115bc:	stp	x8, x11, [sp, #112]
   115c0:	and	x8, x19, x9
   115c4:	mov	w13, #0x1200                	// #4608
   115c8:	lsr	x11, x19, #13
   115cc:	str	x8, [sp, #104]
   115d0:	and	x8, x19, x10
   115d4:	add	x12, x26, x24
   115d8:	str	x11, [sp, #128]
   115dc:	adrp	x11, 17000 <xexit@@Base+0xb84>
   115e0:	str	x8, [sp, #160]
   115e4:	and	x8, x19, x13
   115e8:	ldr	d9, [x11, #312]
   115ec:	str	x8, [sp, #136]
   115f0:	sub	x8, x12, #0x1
   115f4:	ldur	x24, [x29, #-152]
   115f8:	str	x8, [sp, #184]
   115fc:	sub	x8, x12, #0x2
   11600:	str	x8, [sp, #176]
   11604:	mov	w8, #0x20                  	// #32
   11608:	stp	x22, x19, [x29, #-176]
   1160c:	mov	x27, xzr
   11610:	mov	x28, xzr
   11614:	mov	x22, xzr
   11618:	movi	v8.2s, #0x1
   1161c:	str	x8, [sp, #168]
   11620:	mov	x19, x23
   11624:	mov	x8, x26
   11628:	str	wzr, [sp, #148]
   1162c:	stur	x12, [x29, #-160]
   11630:	str	x26, [sp, #152]
   11634:	ldrb	w21, [x8], #1
   11638:	stur	x8, [x29, #-144]
   1163c:	cbz	x24, 11644 <xre_compile_pattern@@Base+0x21c>
   11640:	ldrb	w21, [x24, x21]
   11644:	sub	w8, w21, #0xa
   11648:	cmp	w8, #0x72
   1164c:	b.hi	139c0 <xre_compile_pattern@@Base+0x2598>  // b.pmore
   11650:	adrp	x11, 16000 <htab_collisions@@Base+0x8>
   11654:	add	x11, x11, #0xf38
   11658:	adr	x9, 11668 <xre_compile_pattern@@Base+0x240>
   1165c:	ldrh	w10, [x11, x8, lsl #1]
   11660:	add	x9, x9, x10, lsl #2
   11664:	br	x9
   11668:	ldr	x8, [sp, #160]
   1166c:	cbnz	x8, 139c0 <xre_compile_pattern@@Base+0x2598>
   11670:	ldur	x26, [x29, #-168]
   11674:	cbnz	x28, 11688 <xre_compile_pattern@@Base+0x260>
   11678:	tbnz	w26, #5, 140ec <xre_compile_pattern@@Base+0x2cc4>
   1167c:	tbnz	w26, #4, 11688 <xre_compile_pattern@@Base+0x260>
   11680:	mov	x28, xzr
   11684:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   11688:	dup	v0.2s, w21
   1168c:	ldur	x21, [x29, #-160]
   11690:	ldur	x8, [x29, #-144]
   11694:	cmeq	v0.2s, v0.2s, v9.2s
   11698:	mvn	v0.8b, v0.8b
   1169c:	and	v1.8b, v0.8b, v8.8b
   116a0:	cmp	x8, x21
   116a4:	b.eq	11d1c <xre_compile_pattern@@Base+0x8f4>  // b.none
   116a8:	cbz	x24, 11ca0 <xre_compile_pattern@@Base+0x878>
   116ac:	ldur	x8, [x29, #-144]
   116b0:	b	116d4 <xre_compile_pattern@@Base+0x2ac>
   116b4:	dup	v0.2s, w9
   116b8:	cmeq	v0.2s, v0.2s, v9.2s
   116bc:	mvn	v0.8b, v0.8b
   116c0:	and	v0.8b, v0.8b, v8.8b
   116c4:	cmp	x8, x21
   116c8:	orr	v1.8b, v1.8b, v0.8b
   116cc:	stur	x8, [x29, #-144]
   116d0:	b.eq	11d1c <xre_compile_pattern@@Base+0x8f4>  // b.none
   116d4:	ldrb	w9, [x8], #1
   116d8:	ldrb	w9, [x24, x9]
   116dc:	cmp	w9, #0x2a
   116e0:	b.eq	116b4 <xre_compile_pattern@@Base+0x28c>  // b.none
   116e4:	tbnz	w26, #1, 116fc <xre_compile_pattern@@Base+0x2d4>
   116e8:	cmp	w9, #0x3f
   116ec:	b.eq	116b4 <xre_compile_pattern@@Base+0x28c>  // b.none
   116f0:	cmp	w9, #0x2b
   116f4:	b.eq	116b4 <xre_compile_pattern@@Base+0x28c>  // b.none
   116f8:	b	11d20 <xre_compile_pattern@@Base+0x8f8>
   116fc:	cmp	w9, #0x5c
   11700:	b.ne	11d20 <xre_compile_pattern@@Base+0x8f8>  // b.any
   11704:	cmp	x8, x21
   11708:	b.eq	13fcc <xre_compile_pattern@@Base+0x2ba4>  // b.none
   1170c:	ldur	x10, [x29, #-144]
   11710:	ldrb	w8, [x10, #1]
   11714:	ldrb	w9, [x24, x8]
   11718:	add	x8, x10, #0x2
   1171c:	cmp	w9, #0x2b
   11720:	b.eq	116b4 <xre_compile_pattern@@Base+0x28c>  // b.none
   11724:	cmp	w9, #0x3f
   11728:	b.eq	116b4 <xre_compile_pattern@@Base+0x28c>  // b.none
   1172c:	b	11d20 <xre_compile_pattern@@Base+0x8f8>
   11730:	ldur	x8, [x29, #-168]
   11734:	mov	w21, #0xa                   	// #10
   11738:	tbnz	w8, #11, 11b88 <xre_compile_pattern@@Base+0x760>
   1173c:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   11740:	ldp	x8, x21, [x29, #-168]
   11744:	tbnz	w8, #3, 11f04 <xre_compile_pattern@@Base+0xadc>
   11748:	ldur	x8, [x29, #-144]
   1174c:	cmp	x8, x21
   11750:	b.eq	11f04 <xre_compile_pattern@@Base+0xadc>  // b.none
   11754:	ldrb	w8, [x26, #1]
   11758:	ldur	x11, [x29, #-168]
   1175c:	add	x10, x26, #0x2
   11760:	cmp	x10, x21
   11764:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
   11768:	tbnz	w11, #13, 11ed0 <xre_compile_pattern@@Base+0xaa8>
   1176c:	cmp	x10, x21
   11770:	b.cs	11ed8 <xre_compile_pattern@@Base+0xab0>  // b.hs, b.nlast
   11774:	cmp	w8, #0x5c
   11778:	b.ne	11ed8 <xre_compile_pattern@@Base+0xab0>  // b.any
   1177c:	ldrb	w11, [x9]
   11780:	cmp	w11, #0x29
   11784:	b.ne	11ed8 <xre_compile_pattern@@Base+0xab0>  // b.any
   11788:	b	11f04 <xre_compile_pattern@@Base+0xadc>
   1178c:	ldur	x8, [x29, #-168]
   11790:	tbnz	w8, #13, 1331c <xre_compile_pattern@@Base+0x1ef4>
   11794:	mov	w21, #0x28                  	// #40
   11798:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   1179c:	ldur	x21, [x29, #-168]
   117a0:	tbz	w21, #13, 12e80 <xre_compile_pattern@@Base+0x1a58>
   117a4:	mov	w26, #0x10000               	// #65536
   117a8:	cbz	x22, 117e8 <xre_compile_pattern@@Base+0x3c0>
   117ac:	ldp	x24, x8, [x20]
   117b0:	sub	x9, x23, x24
   117b4:	add	x9, x9, #0x1
   117b8:	cmp	x9, x8
   117bc:	b.hi	118a4 <xre_compile_pattern@@Base+0x47c>  // b.pmore
   117c0:	ldur	x24, [x29, #-152]
   117c4:	sub	w8, w23, w22
   117c8:	mov	w9, #0x14                  	// #20
   117cc:	sub	w8, w8, #0x3
   117d0:	strb	w9, [x23], #1
   117d4:	mov	w9, #0xe                   	// #14
   117d8:	strb	w8, [x22, #1]
   117dc:	lsr	w8, w8, #8
   117e0:	strb	w9, [x22]
   117e4:	strb	w8, [x22, #2]
   117e8:	ldr	x10, [sp, #168]
   117ec:	lsr	x8, x10, #32
   117f0:	cbz	x8, 12e7c <xre_compile_pattern@@Base+0x1a54>
   117f4:	ldur	x14, [x29, #-176]
   117f8:	mov	w9, #0xffffffff            	// #-1
   117fc:	add	x9, x8, x9
   11800:	bfi	x10, x9, #32, #32
   11804:	and	x9, x9, #0xffffffff
   11808:	mov	w15, #0x28                  	// #40
   1180c:	str	x10, [sp, #168]
   11810:	madd	x10, x9, x15, x14
   11814:	ldr	x8, [x20]
   11818:	ldp	x11, x12, [x10]
   1181c:	ldr	x13, [x10, #24]
   11820:	ldr	w21, [x10, #32]
   11824:	add	x10, x8, x12
   11828:	cmp	x12, #0x0
   1182c:	sub	x10, x10, #0x1
   11830:	add	x19, x8, x11
   11834:	csel	x22, xzr, x10, eq  // eq = none
   11838:	cmp	w21, #0xff
   1183c:	add	x28, x8, x13
   11840:	b.hi	12ebc <xre_compile_pattern@@Base+0x1a94>  // b.pmore
   11844:	madd	x9, x9, x15, x14
   11848:	ldr	w10, [sp, #148]
   1184c:	ldr	x9, [x9, #16]
   11850:	sub	w26, w10, w21
   11854:	strb	w26, [x8, x9]
   11858:	ldp	x24, x8, [x20]
   1185c:	sub	x9, x23, x24
   11860:	add	x9, x9, #0x3
   11864:	cmp	x9, x8
   11868:	b.hi	11c30 <xre_compile_pattern@@Base+0x808>  // b.pmore
   1186c:	mov	w8, #0x7                   	// #7
   11870:	strb	w8, [x23]
   11874:	add	x8, x23, #0x3
   11878:	mov	x27, xzr
   1187c:	strb	w21, [x23, #1]
   11880:	strb	w26, [x23, #2]
   11884:	mov	x23, x8
   11888:	b	13a48 <xre_compile_pattern@@Base+0x2620>
   1188c:	ldr	x8, [x25]
   11890:	sub	x9, x23, x0
   11894:	add	x9, x9, #0x1
   11898:	mov	x24, x0
   1189c:	cmp	x9, x8
   118a0:	b.ls	117c0 <xre_compile_pattern@@Base+0x398>  // b.plast
   118a4:	cmp	x8, #0x10, lsl #12
   118a8:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   118ac:	lsl	x8, x8, #1
   118b0:	cmp	x8, #0x10, lsl #12
   118b4:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   118b8:	mov	x0, x24
   118bc:	str	x1, [x20, #8]
   118c0:	bl	4f30 <realloc@plt>
   118c4:	str	x0, [x20]
   118c8:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   118cc:	cmp	x24, x0
   118d0:	b.eq	1188c <xre_compile_pattern@@Base+0x464>  // b.none
   118d4:	sub	x8, x0, x24
   118d8:	cmp	x22, #0x0
   118dc:	add	x9, x22, x8
   118e0:	add	x10, x28, x8
   118e4:	csel	x22, xzr, x9, eq  // eq = none
   118e8:	cmp	x28, #0x0
   118ec:	add	x23, x23, x8
   118f0:	add	x19, x19, x8
   118f4:	add	x8, x27, x8
   118f8:	csel	x28, xzr, x10, eq  // eq = none
   118fc:	cmp	x27, #0x0
   11900:	csel	x27, xzr, x8, eq  // eq = none
   11904:	b	1188c <xre_compile_pattern@@Base+0x464>
   11908:	ldp	x24, x8, [x20]
   1190c:	mov	x28, x23
   11910:	sub	x9, x23, x24
   11914:	add	x9, x9, #0x1
   11918:	cmp	x9, x8
   1191c:	b.ls	11c8c <xre_compile_pattern@@Base+0x864>  // b.plast
   11920:	ldur	x21, [x29, #-160]
   11924:	mov	w26, #0x10000               	// #65536
   11928:	b	11944 <xre_compile_pattern@@Base+0x51c>
   1192c:	ldr	x8, [x25]
   11930:	sub	x9, x23, x0
   11934:	add	x9, x9, #0x1
   11938:	mov	x24, x0
   1193c:	cmp	x9, x8
   11940:	b.ls	11c90 <xre_compile_pattern@@Base+0x868>  // b.plast
   11944:	cmp	x8, #0x10, lsl #12
   11948:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   1194c:	lsl	x8, x8, #1
   11950:	cmp	x8, #0x10, lsl #12
   11954:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11958:	mov	x0, x24
   1195c:	str	x1, [x20, #8]
   11960:	bl	4f30 <realloc@plt>
   11964:	str	x0, [x20]
   11968:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   1196c:	cmp	x24, x0
   11970:	b.eq	1192c <xre_compile_pattern@@Base+0x504>  // b.none
   11974:	sub	x8, x0, x24
   11978:	cmp	x22, #0x0
   1197c:	add	x9, x22, x8
   11980:	add	x10, x28, x8
   11984:	csel	x22, xzr, x9, eq  // eq = none
   11988:	cmp	x28, #0x0
   1198c:	add	x23, x23, x8
   11990:	add	x19, x19, x8
   11994:	add	x8, x27, x8
   11998:	csel	x28, xzr, x10, eq  // eq = none
   1199c:	cmp	x27, #0x0
   119a0:	csel	x27, xzr, x8, eq  // eq = none
   119a4:	b	1192c <xre_compile_pattern@@Base+0x504>
   119a8:	ldur	x8, [x29, #-160]
   119ac:	ldur	x21, [x29, #-144]
   119b0:	cmp	x21, x8
   119b4:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   119b8:	ldp	x24, x8, [x20]
   119bc:	sub	x9, x23, x24
   119c0:	add	x9, x9, #0x22
   119c4:	cmp	x9, x8
   119c8:	b.hi	119e8 <xre_compile_pattern@@Base+0x5c0>  // b.pmore
   119cc:	b	12094 <xre_compile_pattern@@Base+0xc6c>
   119d0:	ldr	x8, [x25]
   119d4:	sub	x9, x23, x0
   119d8:	add	x9, x9, #0x22
   119dc:	mov	x24, x0
   119e0:	cmp	x9, x8
   119e4:	b.ls	12090 <xre_compile_pattern@@Base+0xc68>  // b.plast
   119e8:	cmp	x8, #0x10, lsl #12
   119ec:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   119f0:	lsl	x8, x8, #1
   119f4:	cmp	x8, #0x10, lsl #12
   119f8:	mov	w9, #0x10000               	// #65536
   119fc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11a00:	mov	x0, x24
   11a04:	str	x1, [x20, #8]
   11a08:	bl	4f30 <realloc@plt>
   11a0c:	str	x0, [x20]
   11a10:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11a14:	cmp	x24, x0
   11a18:	b.eq	119d0 <xre_compile_pattern@@Base+0x5a8>  // b.none
   11a1c:	sub	x8, x0, x24
   11a20:	cmp	x22, #0x0
   11a24:	add	x9, x22, x8
   11a28:	add	x23, x23, x8
   11a2c:	add	x19, x19, x8
   11a30:	add	x8, x27, x8
   11a34:	csel	x22, xzr, x9, eq  // eq = none
   11a38:	cmp	x27, #0x0
   11a3c:	csel	x27, xzr, x8, eq  // eq = none
   11a40:	b	119d0 <xre_compile_pattern@@Base+0x5a8>
   11a44:	ldur	x8, [x29, #-160]
   11a48:	ldur	x9, [x29, #-144]
   11a4c:	cmp	x9, x8
   11a50:	b.eq	13fcc <xre_compile_pattern@@Base+0x2ba4>  // b.none
   11a54:	ldrb	w21, [x26, #1]
   11a58:	add	x9, x26, #0x2
   11a5c:	stur	x9, [x29, #-144]
   11a60:	sub	w8, w21, #0x27
   11a64:	cmp	w8, #0x55
   11a68:	b.hi	139b8 <xre_compile_pattern@@Base+0x2590>  // b.pmore
   11a6c:	adrp	x11, 17000 <xexit@@Base+0xb84>
   11a70:	add	x11, x11, #0x1e
   11a74:	adr	x9, 11a84 <xre_compile_pattern@@Base+0x65c>
   11a78:	ldrh	w10, [x11, x8, lsl #1]
   11a7c:	add	x9, x9, x10, lsl #2
   11a80:	br	x9
   11a84:	ldur	x8, [x29, #-168]
   11a88:	tbnz	w8, #14, 139c0 <xre_compile_pattern@@Base+0x2598>
   11a8c:	ldr	w9, [sp, #148]
   11a90:	sub	w26, w21, #0x30
   11a94:	and	w8, w26, #0xff
   11a98:	cmp	w9, w8
   11a9c:	b.cc	14130 <xre_compile_pattern@@Base+0x2d08>  // b.lo, b.ul, b.last
   11aa0:	ldr	x9, [sp, #168]
   11aa4:	mov	w11, #0x28                  	// #40
   11aa8:	lsr	x9, x9, #32
   11aac:	sub	w9, w9, #0x1
   11ab0:	tbnz	w9, #31, 12fb8 <xre_compile_pattern@@Base+0x1b90>
   11ab4:	ldur	x10, [x29, #-176]
   11ab8:	umaddl	x10, w9, w11, x10
   11abc:	ldr	w10, [x10, #32]
   11ac0:	sub	w9, w9, #0x1
   11ac4:	cmp	w10, w8
   11ac8:	b.ne	11ab0 <xre_compile_pattern@@Base+0x688>  // b.any
   11acc:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   11ad0:	ldur	x8, [x29, #-168]
   11ad4:	tbnz	w8, #3, 11fd8 <xre_compile_pattern@@Base+0xbb0>
   11ad8:	ldr	x8, [sp, #152]
   11adc:	cmp	x26, x8
   11ae0:	b.eq	11fd8 <xre_compile_pattern@@Base+0xbb0>  // b.none
   11ae4:	ldr	x8, [sp, #152]
   11ae8:	sub	x9, x26, #0x1
   11aec:	cmp	x9, x8
   11af0:	b.ls	11fac <xre_compile_pattern@@Base+0xb84>  // b.plast
   11af4:	ldurb	w8, [x26, #-2]
   11af8:	cmp	w8, #0x5c
   11afc:	cset	w8, eq  // eq = none
   11b00:	b	11fb0 <xre_compile_pattern@@Base+0xb88>
   11b04:	ldr	x9, [sp, #136]
   11b08:	mov	w8, #0x1200                	// #4608
   11b0c:	cmp	x9, x8
   11b10:	b.ne	11c98 <xre_compile_pattern@@Base+0x870>  // b.any
   11b14:	ldp	x12, x8, [x29, #-168]
   11b18:	ldur	x9, [x29, #-144]
   11b1c:	mov	w13, #0xa                   	// #10
   11b20:	mov	x26, x8
   11b24:	cmp	x9, x8
   11b28:	b.eq	139ac <xre_compile_pattern@@Base+0x2584>  // b.none
   11b2c:	mov	w21, #0xffffffff            	// #-1
   11b30:	cbz	x24, 12ec4 <xre_compile_pattern@@Base+0x1a9c>
   11b34:	ldur	x10, [x29, #-144]
   11b38:	mov	x9, x10
   11b3c:	b	11b50 <xre_compile_pattern@@Base+0x728>
   11b40:	ldur	x10, [x29, #-160]
   11b44:	cmp	x10, x9
   11b48:	mov	x10, x9
   11b4c:	b.eq	12fa4 <xre_compile_pattern@@Base+0x1b7c>  // b.none
   11b50:	ldrb	w8, [x9], #1
   11b54:	ldrb	w8, [x24, x8]
   11b58:	sub	w11, w8, #0x30
   11b5c:	cmp	w11, #0x9
   11b60:	b.hi	12f08 <xre_compile_pattern@@Base+0x1ae0>  // b.pmore
   11b64:	cmp	w21, #0x8, lsl #12
   11b68:	b.ge	11b40 <xre_compile_pattern@@Base+0x718>  // b.tcont
   11b6c:	bic	w10, w21, w21, asr #31
   11b70:	madd	w10, w10, w13, w8
   11b74:	sub	w21, w10, #0x30
   11b78:	b	11b40 <xre_compile_pattern@@Base+0x718>
   11b7c:	ldur	x8, [x29, #-168]
   11b80:	mov	w21, #0x7c                  	// #124
   11b84:	tbz	w8, #15, 139c0 <xre_compile_pattern@@Base+0x2598>
   11b88:	ldur	x8, [x29, #-168]
   11b8c:	tbnz	w8, #10, 139c0 <xre_compile_pattern@@Base+0x2598>
   11b90:	ldp	x24, x8, [x20]
   11b94:	sub	x9, x23, x24
   11b98:	add	x9, x9, #0x3
   11b9c:	cmp	x9, x8
   11ba0:	b.ls	11ddc <xre_compile_pattern@@Base+0x9b4>  // b.plast
   11ba4:	ldur	x21, [x29, #-160]
   11ba8:	mov	w26, #0x10000               	// #65536
   11bac:	cmp	x8, #0x10, lsl #12
   11bb0:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   11bb4:	lsl	x8, x8, #1
   11bb8:	cmp	x8, #0x10, lsl #12
   11bbc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11bc0:	mov	x0, x24
   11bc4:	str	x1, [x20, #8]
   11bc8:	bl	4f30 <realloc@plt>
   11bcc:	str	x0, [x20]
   11bd0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11bd4:	sub	x9, x0, x24
   11bd8:	cmp	x22, #0x0
   11bdc:	add	x10, x23, x9
   11be0:	add	x11, x19, x9
   11be4:	add	x9, x22, x9
   11be8:	ldr	x8, [x25]
   11bec:	csel	x9, xzr, x9, eq  // eq = none
   11bf0:	cmp	x24, x0
   11bf4:	csel	x23, x23, x10, eq  // eq = none
   11bf8:	csel	x22, x22, x9, eq  // eq = none
   11bfc:	sub	x9, x23, x0
   11c00:	add	x9, x9, #0x3
   11c04:	csel	x19, x19, x11, eq  // eq = none
   11c08:	cmp	x9, x8
   11c0c:	mov	x24, x0
   11c10:	b.hi	11bac <xre_compile_pattern@@Base+0x784>  // b.pmore
   11c14:	b	11de4 <xre_compile_pattern@@Base+0x9bc>
   11c18:	ldr	x8, [x25]
   11c1c:	sub	x9, x23, x0
   11c20:	add	x9, x9, #0x3
   11c24:	mov	x24, x0
   11c28:	cmp	x9, x8
   11c2c:	b.ls	1186c <xre_compile_pattern@@Base+0x444>  // b.plast
   11c30:	cmp	x8, #0x10, lsl #12
   11c34:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   11c38:	lsl	x8, x8, #1
   11c3c:	cmp	x8, #0x10, lsl #12
   11c40:	mov	w9, #0x10000               	// #65536
   11c44:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11c48:	mov	x0, x24
   11c4c:	str	x1, [x20, #8]
   11c50:	bl	4f30 <realloc@plt>
   11c54:	str	x0, [x20]
   11c58:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11c5c:	cmp	x24, x0
   11c60:	b.eq	11c18 <xre_compile_pattern@@Base+0x7f0>  // b.none
   11c64:	sub	x8, x0, x24
   11c68:	cmp	x22, #0x0
   11c6c:	add	x9, x22, x8
   11c70:	add	x23, x23, x8
   11c74:	add	x19, x19, x8
   11c78:	add	x8, x28, x8
   11c7c:	csel	x22, xzr, x9, eq  // eq = none
   11c80:	cmp	x28, #0x0
   11c84:	csel	x28, xzr, x8, eq  // eq = none
   11c88:	b	11c18 <xre_compile_pattern@@Base+0x7f0>
   11c8c:	ldur	x21, [x29, #-160]
   11c90:	mov	w8, #0x3                   	// #3
   11c94:	b	1207c <xre_compile_pattern@@Base+0xc54>
   11c98:	mov	w21, #0x7b                  	// #123
   11c9c:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   11ca0:	ldur	x8, [x29, #-144]
   11ca4:	b	11cc8 <xre_compile_pattern@@Base+0x8a0>
   11ca8:	dup	v0.2s, w9
   11cac:	cmeq	v0.2s, v0.2s, v9.2s
   11cb0:	mvn	v0.8b, v0.8b
   11cb4:	and	v0.8b, v0.8b, v8.8b
   11cb8:	cmp	x8, x21
   11cbc:	orr	v1.8b, v1.8b, v0.8b
   11cc0:	stur	x8, [x29, #-144]
   11cc4:	b.eq	11d1c <xre_compile_pattern@@Base+0x8f4>  // b.none
   11cc8:	ldrb	w9, [x8], #1
   11ccc:	cmp	w9, #0x2a
   11cd0:	b.eq	11ca8 <xre_compile_pattern@@Base+0x880>  // b.none
   11cd4:	tbnz	w26, #1, 11cec <xre_compile_pattern@@Base+0x8c4>
   11cd8:	cmp	w9, #0x2b
   11cdc:	b.eq	11ca8 <xre_compile_pattern@@Base+0x880>  // b.none
   11ce0:	cmp	w9, #0x3f
   11ce4:	b.eq	11ca8 <xre_compile_pattern@@Base+0x880>  // b.none
   11ce8:	b	11d20 <xre_compile_pattern@@Base+0x8f8>
   11cec:	cmp	w9, #0x5c
   11cf0:	b.ne	11d20 <xre_compile_pattern@@Base+0x8f8>  // b.any
   11cf4:	cmp	x8, x21
   11cf8:	b.eq	13fcc <xre_compile_pattern@@Base+0x2ba4>  // b.none
   11cfc:	ldur	x8, [x29, #-144]
   11d00:	ldrb	w9, [x8, #1]
   11d04:	add	x8, x8, #0x2
   11d08:	cmp	w9, #0x3f
   11d0c:	b.eq	11ca8 <xre_compile_pattern@@Base+0x880>  // b.none
   11d10:	cmp	w9, #0x2b
   11d14:	b.eq	11ca8 <xre_compile_pattern@@Base+0x880>  // b.none
   11d18:	b	11d20 <xre_compile_pattern@@Base+0x8f8>
   11d1c:	stur	x21, [x29, #-144]
   11d20:	cbz	x28, 13a50 <xre_compile_pattern@@Base+0x2628>
   11d24:	mov	w8, v1.s[1]
   11d28:	str	q1, [sp, #80]
   11d2c:	cbz	w8, 11dd4 <xre_compile_pattern@@Base+0x9ac>
   11d30:	ldp	x24, x8, [x20]
   11d34:	sub	x9, x23, x24
   11d38:	add	x9, x9, #0x3
   11d3c:	cmp	x9, x8
   11d40:	b.hi	11d78 <xre_compile_pattern@@Base+0x950>  // b.pmore
   11d44:	ldp	x11, x8, [x29, #-152]
   11d48:	ldurb	w8, [x8, #-2]
   11d4c:	cbz	x11, 12e88 <xre_compile_pattern@@Base+0x1a60>
   11d50:	ldrb	w8, [x11, x8]
   11d54:	ldrb	w9, [x11, #46]
   11d58:	b	12e8c <xre_compile_pattern@@Base+0x1a64>
   11d5c:	ldr	x8, [x25]
   11d60:	ldr	q1, [sp, #80]
   11d64:	sub	x9, x23, x0
   11d68:	add	x9, x9, #0x3
   11d6c:	cmp	x9, x8
   11d70:	mov	x24, x0
   11d74:	b.ls	11d44 <xre_compile_pattern@@Base+0x91c>  // b.plast
   11d78:	cmp	x8, #0x10, lsl #12
   11d7c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   11d80:	lsl	x8, x8, #1
   11d84:	cmp	x8, #0x10, lsl #12
   11d88:	mov	w9, #0x10000               	// #65536
   11d8c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11d90:	mov	x0, x24
   11d94:	str	x1, [x20, #8]
   11d98:	bl	4f30 <realloc@plt>
   11d9c:	str	x0, [x20]
   11da0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11da4:	cmp	x24, x0
   11da8:	b.eq	11d5c <xre_compile_pattern@@Base+0x934>  // b.none
   11dac:	sub	x8, x0, x24
   11db0:	cmp	x22, #0x0
   11db4:	add	x9, x22, x8
   11db8:	add	x23, x23, x8
   11dbc:	add	x19, x19, x8
   11dc0:	add	x8, x28, x8
   11dc4:	csel	x22, xzr, x9, eq  // eq = none
   11dc8:	cmp	x28, #0x0
   11dcc:	csel	x28, xzr, x8, eq  // eq = none
   11dd0:	b	11d5c <xre_compile_pattern@@Base+0x934>
   11dd4:	mov	w21, wzr
   11dd8:	b	130b4 <xre_compile_pattern@@Base+0x1c8c>
   11ddc:	ldur	x21, [x29, #-160]
   11de0:	mov	w26, #0x10000               	// #65536
   11de4:	sub	w8, w23, w19
   11de8:	cmp	x23, x19
   11dec:	add	w8, w8, #0x3
   11df0:	b.eq	11e08 <xre_compile_pattern@@Base+0x9e0>  // b.none
   11df4:	mov	x9, x23
   11df8:	ldrb	w10, [x9, #-1]!
   11dfc:	cmp	x19, x9
   11e00:	strb	w10, [x9, #3]
   11e04:	b.ne	11df8 <xre_compile_pattern@@Base+0x9d0>  // b.any
   11e08:	ldur	x24, [x29, #-152]
   11e0c:	mov	w9, #0xf                   	// #15
   11e10:	strb	w8, [x19, #1]
   11e14:	lsr	w8, w8, #8
   11e18:	strb	w9, [x19]
   11e1c:	strb	w8, [x19, #2]
   11e20:	add	x19, x23, #0x3
   11e24:	cbz	x22, 11e44 <xre_compile_pattern@@Base+0xa1c>
   11e28:	sub	w8, w19, w22
   11e2c:	sub	w8, w8, #0x3
   11e30:	mov	w9, #0xe                   	// #14
   11e34:	strb	w8, [x22, #1]
   11e38:	lsr	w8, w8, #8
   11e3c:	strb	w9, [x22]
   11e40:	strb	w8, [x22, #2]
   11e44:	ldp	x23, x8, [x20]
   11e48:	mov	x22, x19
   11e4c:	sub	x9, x19, x23
   11e50:	add	x9, x9, #0x3
   11e54:	cmp	x9, x8
   11e58:	b.ls	11ebc <xre_compile_pattern@@Base+0xa94>  // b.plast
   11e5c:	cmp	x8, #0x10, lsl #12
   11e60:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   11e64:	lsl	x8, x8, #1
   11e68:	cmp	x8, #0x10, lsl #12
   11e6c:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11e70:	mov	x0, x23
   11e74:	str	x1, [x20, #8]
   11e78:	bl	4f30 <realloc@plt>
   11e7c:	str	x0, [x20]
   11e80:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11e84:	sub	x9, x0, x23
   11e88:	cmp	x22, #0x0
   11e8c:	add	x10, x19, x9
   11e90:	add	x9, x22, x9
   11e94:	ldr	x8, [x25]
   11e98:	csel	x9, xzr, x9, eq  // eq = none
   11e9c:	cmp	x23, x0
   11ea0:	csel	x19, x19, x10, eq  // eq = none
   11ea4:	csel	x22, x22, x9, eq  // eq = none
   11ea8:	sub	x9, x19, x0
   11eac:	add	x9, x9, #0x3
   11eb0:	cmp	x9, x8
   11eb4:	mov	x23, x0
   11eb8:	b.hi	11e5c <xre_compile_pattern@@Base+0xa34>  // b.pmore
   11ebc:	add	x19, x19, #0x3
   11ec0:	mov	x28, xzr
   11ec4:	mov	x27, xzr
   11ec8:	mov	x23, x19
   11ecc:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   11ed0:	cmp	w8, #0x29
   11ed4:	b.eq	11f04 <xre_compile_pattern@@Base+0xadc>  // b.none
   11ed8:	ldur	x11, [x29, #-168]
   11edc:	tbnz	w11, #15, 11efc <xre_compile_pattern@@Base+0xad4>
   11ee0:	cmp	x10, x21
   11ee4:	mov	w21, #0x24                  	// #36
   11ee8:	b.cs	139c0 <xre_compile_pattern@@Base+0x2598>  // b.hs, b.nlast
   11eec:	cmp	w8, #0x5c
   11ef0:	b.ne	139c0 <xre_compile_pattern@@Base+0x2598>  // b.any
   11ef4:	ldrb	w8, [x9]
   11ef8:	ldur	x21, [x29, #-160]
   11efc:	cmp	w8, #0x7c
   11f00:	b.ne	12fb0 <xre_compile_pattern@@Base+0x1b88>  // b.any
   11f04:	ldp	x24, x8, [x20]
   11f08:	sub	x9, x23, x24
   11f0c:	add	x9, x9, #0x1
   11f10:	cmp	x9, x8
   11f14:	b.ls	11f9c <xre_compile_pattern@@Base+0xb74>  // b.plast
   11f18:	mov	w26, #0x10000               	// #65536
   11f1c:	b	11f38 <xre_compile_pattern@@Base+0xb10>
   11f20:	ldr	x8, [x25]
   11f24:	sub	x9, x23, x0
   11f28:	add	x9, x9, #0x1
   11f2c:	mov	x24, x0
   11f30:	cmp	x9, x8
   11f34:	b.ls	11f9c <xre_compile_pattern@@Base+0xb74>  // b.plast
   11f38:	cmp	x8, #0x10, lsl #12
   11f3c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   11f40:	lsl	x8, x8, #1
   11f44:	cmp	x8, #0x10, lsl #12
   11f48:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11f4c:	mov	x0, x24
   11f50:	str	x1, [x20, #8]
   11f54:	bl	4f30 <realloc@plt>
   11f58:	str	x0, [x20]
   11f5c:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   11f60:	cmp	x24, x0
   11f64:	b.eq	11f20 <xre_compile_pattern@@Base+0xaf8>  // b.none
   11f68:	sub	x8, x0, x24
   11f6c:	cmp	x22, #0x0
   11f70:	add	x9, x22, x8
   11f74:	add	x10, x28, x8
   11f78:	csel	x22, xzr, x9, eq  // eq = none
   11f7c:	cmp	x28, #0x0
   11f80:	add	x23, x23, x8
   11f84:	add	x19, x19, x8
   11f88:	add	x8, x27, x8
   11f8c:	csel	x28, xzr, x10, eq  // eq = none
   11f90:	cmp	x27, #0x0
   11f94:	csel	x27, xzr, x8, eq  // eq = none
   11f98:	b	11f20 <xre_compile_pattern@@Base+0xaf8>
   11f9c:	ldur	x24, [x29, #-152]
   11fa0:	mov	w8, #0xa                   	// #10
   11fa4:	strb	w8, [x23], #1
   11fa8:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   11fac:	mov	w8, wzr
   11fb0:	ldrb	w10, [x9]
   11fb4:	ldr	x9, [sp, #128]
   11fb8:	cmp	w10, #0x28
   11fbc:	b.eq	11fcc <xre_compile_pattern@@Base+0xba4>  // b.none
   11fc0:	cmp	w10, #0x7c
   11fc4:	b.ne	12088 <xre_compile_pattern@@Base+0xc60>  // b.any
   11fc8:	ldr	x9, [sp, #120]
   11fcc:	and	w9, w9, #0x1
   11fd0:	orr	w8, w9, w8
   11fd4:	cbz	w8, 12088 <xre_compile_pattern@@Base+0xc60>
   11fd8:	ldp	x24, x8, [x20]
   11fdc:	sub	x9, x23, x24
   11fe0:	add	x9, x9, #0x1
   11fe4:	cmp	x9, x8
   11fe8:	b.ls	12074 <xre_compile_pattern@@Base+0xc4c>  // b.plast
   11fec:	ldur	x21, [x29, #-160]
   11ff0:	mov	w26, #0x10000               	// #65536
   11ff4:	b	12010 <xre_compile_pattern@@Base+0xbe8>
   11ff8:	ldr	x8, [x25]
   11ffc:	sub	x9, x23, x0
   12000:	add	x9, x9, #0x1
   12004:	mov	x24, x0
   12008:	cmp	x9, x8
   1200c:	b.ls	12078 <xre_compile_pattern@@Base+0xc50>  // b.plast
   12010:	cmp	x8, #0x10, lsl #12
   12014:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   12018:	lsl	x8, x8, #1
   1201c:	cmp	x8, #0x10, lsl #12
   12020:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12024:	mov	x0, x24
   12028:	str	x1, [x20, #8]
   1202c:	bl	4f30 <realloc@plt>
   12030:	str	x0, [x20]
   12034:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   12038:	cmp	x24, x0
   1203c:	b.eq	11ff8 <xre_compile_pattern@@Base+0xbd0>  // b.none
   12040:	sub	x8, x0, x24
   12044:	cmp	x22, #0x0
   12048:	add	x9, x22, x8
   1204c:	add	x10, x28, x8
   12050:	csel	x22, xzr, x9, eq  // eq = none
   12054:	cmp	x28, #0x0
   12058:	add	x23, x23, x8
   1205c:	add	x19, x19, x8
   12060:	add	x8, x27, x8
   12064:	csel	x28, xzr, x10, eq  // eq = none
   12068:	cmp	x27, #0x0
   1206c:	csel	x27, xzr, x8, eq  // eq = none
   12070:	b	11ff8 <xre_compile_pattern@@Base+0xbd0>
   12074:	ldur	x21, [x29, #-160]
   12078:	mov	w8, #0x9                   	// #9
   1207c:	strb	w8, [x23], #1
   12080:	ldur	x24, [x29, #-152]
   12084:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   12088:	mov	w21, #0x5e                  	// #94
   1208c:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   12090:	mov	x24, x0
   12094:	sub	x9, x23, x24
   12098:	add	x9, x9, #0x1
   1209c:	cmp	x9, x8
   120a0:	mov	x28, x23
   120a4:	b.hi	12108 <xre_compile_pattern@@Base+0xce0>  // b.pmore
   120a8:	ldrb	w8, [x26, #1]
   120ac:	add	x10, x26, #0x2
   120b0:	cmp	w8, #0x5e
   120b4:	mov	w8, #0x4                   	// #4
   120b8:	cinc	w8, w8, eq  // eq = none
   120bc:	strb	w8, [x23], #1
   120c0:	ldrb	w9, [x26, #1]
   120c4:	ldp	x24, x8, [x20]
   120c8:	cmp	w9, #0x5e
   120cc:	sub	x9, x23, x24
   120d0:	add	x9, x9, #0x1
   120d4:	csel	x10, x10, x21, eq  // eq = none
   120d8:	cmp	x9, x8
   120dc:	str	x10, [sp, #72]
   120e0:	b.ls	121f0 <xre_compile_pattern@@Base+0xdc8>  // b.plast
   120e4:	ldur	x21, [x29, #-168]
   120e8:	ldr	x26, [sp, #152]
   120ec:	b	12188 <xre_compile_pattern@@Base+0xd60>
   120f0:	ldr	x8, [x25]
   120f4:	sub	x9, x23, x0
   120f8:	add	x9, x9, #0x1
   120fc:	mov	x24, x0
   12100:	cmp	x9, x8
   12104:	b.ls	120a8 <xre_compile_pattern@@Base+0xc80>  // b.plast
   12108:	cmp	x8, #0x10, lsl #12
   1210c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   12110:	lsl	x8, x8, #1
   12114:	cmp	x8, #0x10, lsl #12
   12118:	mov	w9, #0x10000               	// #65536
   1211c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   12120:	mov	x0, x24
   12124:	str	x1, [x20, #8]
   12128:	bl	4f30 <realloc@plt>
   1212c:	str	x0, [x20]
   12130:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   12134:	cmp	x24, x0
   12138:	b.eq	120f0 <xre_compile_pattern@@Base+0xcc8>  // b.none
   1213c:	sub	x8, x0, x24
   12140:	cmp	x22, #0x0
   12144:	add	x9, x22, x8
   12148:	add	x10, x28, x8
   1214c:	csel	x22, xzr, x9, eq  // eq = none
   12150:	cmp	x28, #0x0
   12154:	add	x23, x23, x8
   12158:	add	x19, x19, x8
   1215c:	add	x8, x27, x8
   12160:	csel	x28, xzr, x10, eq  // eq = none
   12164:	cmp	x27, #0x0
   12168:	csel	x27, xzr, x8, eq  // eq = none
   1216c:	b	120f0 <xre_compile_pattern@@Base+0xcc8>
   12170:	ldr	x8, [x25]
   12174:	sub	x9, x23, x0
   12178:	add	x9, x9, #0x1
   1217c:	mov	x24, x0
   12180:	cmp	x9, x8
   12184:	b.ls	121f8 <xre_compile_pattern@@Base+0xdd0>  // b.plast
   12188:	cmp	x8, #0x10, lsl #12
   1218c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   12190:	lsl	x8, x8, #1
   12194:	cmp	x8, #0x10, lsl #12
   12198:	mov	w9, #0x10000               	// #65536
   1219c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   121a0:	mov	x0, x24
   121a4:	str	x1, [x20, #8]
   121a8:	bl	4f30 <realloc@plt>
   121ac:	str	x0, [x20]
   121b0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   121b4:	cmp	x24, x0
   121b8:	b.eq	12170 <xre_compile_pattern@@Base+0xd48>  // b.none
   121bc:	sub	x8, x0, x24
   121c0:	cmp	x22, #0x0
   121c4:	add	x9, x22, x8
   121c8:	add	x10, x28, x8
   121cc:	csel	x22, xzr, x9, eq  // eq = none
   121d0:	cmp	x28, #0x0
   121d4:	add	x23, x23, x8
   121d8:	add	x19, x19, x8
   121dc:	add	x8, x27, x8
   121e0:	csel	x28, xzr, x10, eq  // eq = none
   121e4:	cmp	x27, #0x0
   121e8:	csel	x27, xzr, x8, eq  // eq = none
   121ec:	b	12170 <xre_compile_pattern@@Base+0xd48>
   121f0:	ldur	x21, [x29, #-168]
   121f4:	ldr	x26, [sp, #152]
   121f8:	mov	x6, x23
   121fc:	movi	v0.2d, #0x0
   12200:	str	q0, [x6, #1]!
   12204:	mov	w8, #0x20                  	// #32
   12208:	strb	w8, [x23]
   1220c:	stur	q0, [x23, #17]
   12210:	tbz	w21, #8, 12228 <xre_compile_pattern@@Base+0xe00>
   12214:	ldurb	w8, [x23, #-1]
   12218:	cmp	w8, #0x5
   1221c:	b.ne	12228 <xre_compile_pattern@@Base+0xe00>  // b.any
   12220:	mov	w8, #0x4                   	// #4
   12224:	strb	w8, [x23, #2]
   12228:	ldur	x8, [x29, #-160]
   1222c:	ldr	x9, [sp, #72]
   12230:	cmp	x9, x8
   12234:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12238:	ldr	x10, [sp, #72]
   1223c:	mov	w8, wzr
   12240:	add	x7, x23, #0x8
   12244:	mov	w24, #0xffffffff            	// #-1
   12248:	mov	x11, x10
   1224c:	str	x6, [sp, #80]
   12250:	ldrb	w9, [x11], #1
   12254:	stur	x11, [x29, #-144]
   12258:	ldur	x11, [x29, #-152]
   1225c:	cbz	x11, 122d4 <xre_compile_pattern@@Base+0xeac>
   12260:	ldrb	w9, [x11, x9]
   12264:	tbz	w21, #0, 12338 <xre_compile_pattern@@Base+0xf10>
   12268:	cmp	w9, #0x5c
   1226c:	b.ne	12338 <xre_compile_pattern@@Base+0xf10>  // b.any
   12270:	ldr	x9, [sp, #184]
   12274:	cmp	x9, x10
   12278:	b.eq	13fcc <xre_compile_pattern@@Base+0x2ba4>  // b.none
   1227c:	ldrb	w9, [x10, #1]
   12280:	ldur	x11, [x29, #-152]
   12284:	mov	w13, #0x1                   	// #1
   12288:	ldrb	w24, [x11, x9]
   1228c:	lsr	x9, x24, #3
   12290:	ldrb	w11, [x6, x9]
   12294:	and	w12, w24, #0x7
   12298:	lsl	w12, w13, w12
   1229c:	orr	w11, w11, w12
   122a0:	ldr	x12, [sp, #176]
   122a4:	strb	w11, [x6, x9]
   122a8:	cmp	x12, x10
   122ac:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   122b0:	ldrb	w9, [x10, #2]
   122b4:	ldur	x11, [x29, #-152]
   122b8:	ldrb	w9, [x11, x9]
   122bc:	add	x11, x10, #0x2
   122c0:	tbz	w21, #0, 1232c <xre_compile_pattern@@Base+0xf04>
   122c4:	cmp	w9, #0x5c
   122c8:	mov	x10, x11
   122cc:	b.eq	12270 <xre_compile_pattern@@Base+0xe48>  // b.none
   122d0:	b	1232c <xre_compile_pattern@@Base+0xf04>
   122d4:	tbz	w21, #0, 12338 <xre_compile_pattern@@Base+0xf10>
   122d8:	cmp	w9, #0x5c
   122dc:	b.ne	12338 <xre_compile_pattern@@Base+0xf10>  // b.any
   122e0:	ldr	x9, [sp, #184]
   122e4:	cmp	x9, x10
   122e8:	b.eq	13fcc <xre_compile_pattern@@Base+0x2ba4>  // b.none
   122ec:	ldrb	w24, [x10, #1]
   122f0:	mov	w13, #0x1                   	// #1
   122f4:	lsr	x9, x24, #3
   122f8:	ldrb	w11, [x6, x9]
   122fc:	and	w12, w24, #0x7
   12300:	lsl	w12, w13, w12
   12304:	orr	w11, w11, w12
   12308:	ldr	x12, [sp, #176]
   1230c:	strb	w11, [x6, x9]
   12310:	cmp	x12, x10
   12314:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12318:	ldrb	w9, [x10, #2]
   1231c:	add	x11, x10, #0x2
   12320:	mov	x10, x11
   12324:	cmp	w9, #0x5c
   12328:	b.eq	122e0 <xre_compile_pattern@@Base+0xeb8>  // b.none
   1232c:	add	x10, x11, #0x1
   12330:	stur	x10, [x29, #-144]
   12334:	mov	x10, x11
   12338:	cmp	w9, #0x5d
   1233c:	b.ne	12350 <xre_compile_pattern@@Base+0xf28>  // b.any
   12340:	ldr	x11, [sp, #72]
   12344:	cmp	x10, x11
   12348:	b.eq	123b4 <xre_compile_pattern@@Base+0xf8c>  // b.none
   1234c:	b	13f34 <xre_compile_pattern@@Base+0x2b0c>
   12350:	tst	w8, #0xff
   12354:	b.eq	12370 <xre_compile_pattern@@Base+0xf48>  // b.none
   12358:	cmp	w9, #0x2d
   1235c:	b.ne	12370 <xre_compile_pattern@@Base+0xf48>  // b.any
   12360:	ldur	x11, [x29, #-144]
   12364:	ldrb	w11, [x11]
   12368:	cmp	w11, #0x5d
   1236c:	b.ne	14118 <xre_compile_pattern@@Base+0x2cf0>  // b.any
   12370:	cmp	w9, #0x2d
   12374:	b.ne	123b4 <xre_compile_pattern@@Base+0xf8c>  // b.any
   12378:	sub	x11, x10, #0x1
   1237c:	cmp	x11, x26
   12380:	b.cc	12390 <xre_compile_pattern@@Base+0xf68>  // b.lo, b.ul, b.last
   12384:	ldrb	w12, [x11]
   12388:	cmp	w12, #0x5b
   1238c:	b.eq	123b4 <xre_compile_pattern@@Base+0xf8c>  // b.none
   12390:	sub	x12, x10, #0x2
   12394:	cmp	x12, x26
   12398:	b.cc	124f0 <xre_compile_pattern@@Base+0x10c8>  // b.lo, b.ul, b.last
   1239c:	ldrb	w12, [x12]
   123a0:	cmp	w12, #0x5b
   123a4:	b.ne	124f0 <xre_compile_pattern@@Base+0x10c8>  // b.any
   123a8:	ldrb	w11, [x11]
   123ac:	cmp	w11, #0x5e
   123b0:	b.ne	124f0 <xre_compile_pattern@@Base+0x10c8>  // b.any
   123b4:	ldur	x11, [x29, #-144]
   123b8:	ldrb	w12, [x11]
   123bc:	cmp	w12, #0x2d
   123c0:	b.ne	123d4 <xre_compile_pattern@@Base+0xfac>  // b.any
   123c4:	mov	x13, x10
   123c8:	ldrb	w11, [x13, #2]!
   123cc:	cmp	w11, #0x5d
   123d0:	b.ne	1247c <xre_compile_pattern@@Base+0x1054>  // b.any
   123d4:	tbz	w21, #2, 12500 <xre_compile_pattern@@Base+0x10d8>
   123d8:	cmp	w9, #0x5b
   123dc:	b.ne	12500 <xre_compile_pattern@@Base+0x10d8>  // b.any
   123e0:	cmp	w12, #0x2e
   123e4:	b.eq	12560 <xre_compile_pattern@@Base+0x1138>  // b.none
   123e8:	cmp	w12, #0x3d
   123ec:	b.eq	1262c <xre_compile_pattern@@Base+0x1204>  // b.none
   123f0:	cmp	w12, #0x3a
   123f4:	b.ne	12500 <xre_compile_pattern@@Base+0x10d8>  // b.any
   123f8:	ldur	x8, [x29, #-160]
   123fc:	ldur	x9, [x29, #-144]
   12400:	cmp	x9, x8
   12404:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   12408:	add	x9, x10, #0x2
   1240c:	cmp	x9, x8
   12410:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12414:	ldur	x8, [x29, #-152]
   12418:	cbz	x8, 12790 <xre_compile_pattern@@Base+0x1368>
   1241c:	mov	w10, wzr
   12420:	add	x9, x9, #0x1
   12424:	ldurb	w8, [x9, #-1]
   12428:	ldur	x11, [x29, #-152]
   1242c:	ldrb	w8, [x11, x8]
   12430:	cmp	w8, #0x3a
   12434:	cset	w11, eq  // eq = none
   12438:	b.ne	12448 <xre_compile_pattern@@Base+0x1020>  // b.any
   1243c:	ldrb	w12, [x9]
   12440:	cmp	w12, #0x5d
   12444:	b.eq	12920 <xre_compile_pattern@@Base+0x14f8>  // b.none
   12448:	ldur	x12, [x29, #-160]
   1244c:	cmp	x12, x9
   12450:	b.eq	127e8 <xre_compile_pattern@@Base+0x13c0>  // b.none
   12454:	and	w11, w10, #0xff
   12458:	cmp	w11, #0x6
   1245c:	b.cc	12468 <xre_compile_pattern@@Base+0x1040>  // b.lo, b.ul, b.last
   12460:	sturb	wzr, [x29, #-136]
   12464:	b	12420 <xre_compile_pattern@@Base+0xff8>
   12468:	and	x11, x10, #0xff
   1246c:	add	w10, w10, #0x1
   12470:	sub	x12, x29, #0x88
   12474:	strb	w8, [x12, x11]
   12478:	b	12420 <xre_compile_pattern@@Base+0xff8>
   1247c:	ldur	x12, [x29, #-160]
   12480:	ldur	x14, [x29, #-144]
   12484:	cmp	x14, x12
   12488:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   1248c:	ldur	x14, [x29, #-152]
   12490:	cbz	x14, 126b0 <xre_compile_pattern@@Base+0x1288>
   12494:	ldur	x12, [x29, #-160]
   12498:	cmp	x13, x12
   1249c:	b.eq	14118 <xre_compile_pattern@@Base+0x2cf0>  // b.none
   124a0:	ldrb	w9, [x14, w9, uxtw]
   124a4:	ldrb	w11, [x14, x11]
   124a8:	add	x10, x10, #0x3
   124ac:	stur	x10, [x29, #-144]
   124b0:	cmp	w9, w11
   124b4:	b.hi	126cc <xre_compile_pattern@@Base+0x12a4>  // b.pmore
   124b8:	add	w10, w11, #0x1
   124bc:	mov	w15, #0x1                   	// #1
   124c0:	and	x11, x9, #0xff
   124c4:	ldrb	w11, [x14, x11]
   124c8:	add	w9, w9, #0x1
   124cc:	cmp	w10, w9
   124d0:	lsr	x12, x11, #3
   124d4:	ldrb	w13, [x6, x12]
   124d8:	and	x11, x11, #0x7
   124dc:	lsl	w11, w15, w11
   124e0:	orr	w11, w13, w11
   124e4:	strb	w11, [x6, x12]
   124e8:	b.ne	124c0 <xre_compile_pattern@@Base+0x1098>  // b.any
   124ec:	b	12788 <xre_compile_pattern@@Base+0x1360>
   124f0:	ldur	x11, [x29, #-144]
   124f4:	ldrb	w11, [x11]
   124f8:	cmp	x11, #0x5d
   124fc:	b.ne	12524 <xre_compile_pattern@@Base+0x10fc>  // b.any
   12500:	lsr	x10, x9, #3
   12504:	ldrb	w11, [x6, x10]
   12508:	and	w12, w9, #0x7
   1250c:	mov	w13, #0x1                   	// #1
   12510:	lsl	w12, w13, w12
   12514:	mov	w8, wzr
   12518:	orr	w11, w11, w12
   1251c:	strb	w11, [x6, x10]
   12520:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12524:	ldur	x9, [x29, #-160]
   12528:	ldur	x12, [x29, #-144]
   1252c:	cmp	x12, x9
   12530:	b.eq	14118 <xre_compile_pattern@@Base+0x2cf0>  // b.none
   12534:	ldur	x14, [x29, #-152]
   12538:	add	x9, x10, #0x2
   1253c:	and	x10, x24, #0xff
   12540:	stur	x9, [x29, #-144]
   12544:	cbz	x14, 12550 <xre_compile_pattern@@Base+0x1128>
   12548:	ldrb	w10, [x14, x10]
   1254c:	ldrb	w11, [x14, x11]
   12550:	cmp	w10, w11
   12554:	b.ls	126f0 <xre_compile_pattern@@Base+0x12c8>  // b.plast
   12558:	tbz	w21, #16, 12788 <xre_compile_pattern@@Base+0x1360>
   1255c:	b	14118 <xre_compile_pattern@@Base+0x2cf0>
   12560:	ldur	x9, [x29, #-160]
   12564:	ldur	x8, [x29, #-144]
   12568:	cmp	x8, x9
   1256c:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   12570:	ldur	x13, [x29, #-152]
   12574:	add	x8, x10, #0x2
   12578:	cmp	x8, x9
   1257c:	mov	w14, #0x1                   	// #1
   12580:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12584:	mov	w9, wzr
   12588:	cbz	x13, 125e4 <xre_compile_pattern@@Base+0x11bc>
   1258c:	add	x8, x8, #0x1
   12590:	ldurb	w10, [x8, #-1]
   12594:	ldrb	w10, [x13, x10]
   12598:	cmp	w10, #0x2e
   1259c:	cset	w11, eq  // eq = none
   125a0:	b.ne	125b0 <xre_compile_pattern@@Base+0x1188>  // b.any
   125a4:	ldrb	w12, [x8]
   125a8:	cmp	w12, #0x5d
   125ac:	b.eq	12878 <xre_compile_pattern@@Base+0x1450>  // b.none
   125b0:	ldur	x12, [x29, #-160]
   125b4:	cmp	x12, x8
   125b8:	b.eq	126d4 <xre_compile_pattern@@Base+0x12ac>  // b.none
   125bc:	sxtb	w11, w9
   125c0:	tbz	w11, #31, 125cc <xre_compile_pattern@@Base+0x11a4>
   125c4:	sturb	wzr, [x29, #-136]
   125c8:	b	1258c <xre_compile_pattern@@Base+0x1164>
   125cc:	and	x11, x9, #0xff
   125d0:	sub	x12, x29, #0x88
   125d4:	add	w9, w9, #0x1
   125d8:	strb	w10, [x12, x11]
   125dc:	b	1258c <xre_compile_pattern@@Base+0x1164>
   125e0:	sturb	wzr, [x29, #-136]
   125e4:	add	x8, x8, #0x1
   125e8:	ldurb	w10, [x8, #-1]
   125ec:	cmp	w10, #0x2e
   125f0:	cset	w11, eq  // eq = none
   125f4:	b.ne	12604 <xre_compile_pattern@@Base+0x11dc>  // b.any
   125f8:	ldrb	w12, [x8]
   125fc:	cmp	w12, #0x5d
   12600:	b.eq	12878 <xre_compile_pattern@@Base+0x1450>  // b.none
   12604:	ldur	x12, [x29, #-160]
   12608:	cmp	x12, x8
   1260c:	b.eq	126d4 <xre_compile_pattern@@Base+0x12ac>  // b.none
   12610:	sxtb	w11, w9
   12614:	tbnz	w11, #31, 125e0 <xre_compile_pattern@@Base+0x11b8>
   12618:	and	x11, x9, #0xff
   1261c:	sub	x12, x29, #0x88
   12620:	add	w9, w9, #0x1
   12624:	strb	w10, [x12, x11]
   12628:	b	125e4 <xre_compile_pattern@@Base+0x11bc>
   1262c:	ldur	x8, [x29, #-160]
   12630:	ldur	x9, [x29, #-144]
   12634:	cmp	x9, x8
   12638:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   1263c:	add	x10, x10, #0x2
   12640:	cmp	x10, x8
   12644:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12648:	ldur	x8, [x29, #-152]
   1264c:	cbz	x8, 12804 <xre_compile_pattern@@Base+0x13dc>
   12650:	mov	w9, wzr
   12654:	add	x10, x10, #0x1
   12658:	ldurb	w8, [x10, #-1]
   1265c:	ldur	x11, [x29, #-152]
   12660:	ldrb	w8, [x11, x8]
   12664:	cmp	w8, #0x3d
   12668:	cset	w11, eq  // eq = none
   1266c:	b.ne	1267c <xre_compile_pattern@@Base+0x1254>  // b.any
   12670:	ldrb	w12, [x10]
   12674:	cmp	w12, #0x5d
   12678:	b.eq	12db0 <xre_compile_pattern@@Base+0x1988>  // b.none
   1267c:	ldur	x12, [x29, #-160]
   12680:	cmp	x12, x10
   12684:	b.eq	1285c <xre_compile_pattern@@Base+0x1434>  // b.none
   12688:	and	w11, w9, #0xff
   1268c:	cmp	w11, #0x10
   12690:	b.cc	1269c <xre_compile_pattern@@Base+0x1274>  // b.lo, b.ul, b.last
   12694:	sturb	wzr, [x29, #-136]
   12698:	b	12654 <xre_compile_pattern@@Base+0x122c>
   1269c:	and	x11, x9, #0xff
   126a0:	add	w9, w9, #0x1
   126a4:	sub	x12, x29, #0x88
   126a8:	strb	w8, [x12, x11]
   126ac:	b	12654 <xre_compile_pattern@@Base+0x122c>
   126b0:	ldur	x12, [x29, #-160]
   126b4:	cmp	x13, x12
   126b8:	b.eq	14118 <xre_compile_pattern@@Base+0x2cf0>  // b.none
   126bc:	cmp	w9, w11
   126c0:	add	x10, x10, #0x3
   126c4:	stur	x10, [x29, #-144]
   126c8:	b.ls	1275c <xre_compile_pattern@@Base+0x1334>  // b.plast
   126cc:	tbz	w21, #16, 12788 <xre_compile_pattern@@Base+0x1360>
   126d0:	b	14118 <xre_compile_pattern@@Base+0x2cf0>
   126d4:	sub	x10, x8, #0x1
   126d8:	and	x8, x9, #0xff
   126dc:	sub	x12, x29, #0x88
   126e0:	strb	wzr, [x12, x8]
   126e4:	ldur	x8, [x29, #-160]
   126e8:	cbnz	w11, 12888 <xre_compile_pattern@@Base+0x1460>
   126ec:	b	128e0 <xre_compile_pattern@@Base+0x14b8>
   126f0:	mov	w15, #0x1                   	// #1
   126f4:	add	w11, w11, #0x1
   126f8:	cbz	x14, 12730 <xre_compile_pattern@@Base+0x1308>
   126fc:	and	x9, x10, #0xff
   12700:	ldrb	w9, [x14, x9]
   12704:	add	w10, w10, #0x1
   12708:	cmp	w11, w10
   1270c:	lsr	x12, x9, #3
   12710:	ldrb	w13, [x6, x12]
   12714:	and	x9, x9, #0x7
   12718:	lsl	w9, w15, w9
   1271c:	orr	w9, w13, w9
   12720:	strb	w9, [x6, x12]
   12724:	mov	w9, #0xffffffff            	// #-1
   12728:	b.ne	126fc <xre_compile_pattern@@Base+0x12d4>  // b.any
   1272c:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12730:	ubfx	x12, x10, #3, #5
   12734:	ldrb	w13, [x6, x12]
   12738:	and	w9, w10, #0x7
   1273c:	lsl	w9, w15, w9
   12740:	add	w10, w10, #0x1
   12744:	orr	w9, w13, w9
   12748:	cmp	w11, w10
   1274c:	strb	w9, [x6, x12]
   12750:	mov	w9, #0xffffffff            	// #-1
   12754:	b.ne	12730 <xre_compile_pattern@@Base+0x1308>  // b.any
   12758:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   1275c:	add	w10, w11, #0x1
   12760:	mov	w14, #0x1                   	// #1
   12764:	ubfx	x11, x9, #3, #5
   12768:	ldrb	w12, [x6, x11]
   1276c:	and	w13, w9, #0x7
   12770:	add	w9, w9, #0x1
   12774:	lsl	w13, w14, w13
   12778:	orr	w12, w12, w13
   1277c:	cmp	w10, w9
   12780:	strb	w12, [x6, x11]
   12784:	b.ne	12764 <xre_compile_pattern@@Base+0x133c>  // b.any
   12788:	mov	w9, #0xffffffff            	// #-1
   1278c:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12790:	mov	w10, wzr
   12794:	add	x9, x9, #0x1
   12798:	ldurb	w8, [x9, #-1]
   1279c:	cmp	w8, #0x3a
   127a0:	cset	w11, eq  // eq = none
   127a4:	b.ne	127b4 <xre_compile_pattern@@Base+0x138c>  // b.any
   127a8:	ldrb	w12, [x9]
   127ac:	cmp	w12, #0x5d
   127b0:	b.eq	12920 <xre_compile_pattern@@Base+0x14f8>  // b.none
   127b4:	ldur	x12, [x29, #-160]
   127b8:	cmp	x12, x9
   127bc:	b.eq	127e8 <xre_compile_pattern@@Base+0x13c0>  // b.none
   127c0:	and	w11, w10, #0xff
   127c4:	cmp	w11, #0x5
   127c8:	b.ls	127d4 <xre_compile_pattern@@Base+0x13ac>  // b.plast
   127cc:	sturb	wzr, [x29, #-136]
   127d0:	b	12794 <xre_compile_pattern@@Base+0x136c>
   127d4:	and	x11, x10, #0xff
   127d8:	add	w10, w10, #0x1
   127dc:	sub	x12, x29, #0x88
   127e0:	strb	w8, [x12, x11]
   127e4:	b	12794 <xre_compile_pattern@@Base+0x136c>
   127e8:	sub	x8, x9, #0x1
   127ec:	and	x9, x10, #0xff
   127f0:	sub	x12, x29, #0x88
   127f4:	strb	wzr, [x12, x9]
   127f8:	ldur	x9, [x29, #-160]
   127fc:	cbnz	w11, 12930 <xre_compile_pattern@@Base+0x1508>
   12800:	b	12d78 <xre_compile_pattern@@Base+0x1950>
   12804:	mov	w9, wzr
   12808:	add	x10, x10, #0x1
   1280c:	ldurb	w8, [x10, #-1]
   12810:	cmp	w8, #0x3d
   12814:	cset	w11, eq  // eq = none
   12818:	b.ne	12828 <xre_compile_pattern@@Base+0x1400>  // b.any
   1281c:	ldrb	w12, [x10]
   12820:	cmp	w12, #0x5d
   12824:	b.eq	12db0 <xre_compile_pattern@@Base+0x1988>  // b.none
   12828:	ldur	x12, [x29, #-160]
   1282c:	cmp	x12, x10
   12830:	b.eq	1285c <xre_compile_pattern@@Base+0x1434>  // b.none
   12834:	and	w11, w9, #0xff
   12838:	cmp	w11, #0xf
   1283c:	b.ls	12848 <xre_compile_pattern@@Base+0x1420>  // b.plast
   12840:	sturb	wzr, [x29, #-136]
   12844:	b	12808 <xre_compile_pattern@@Base+0x13e0>
   12848:	and	x11, x9, #0xff
   1284c:	add	w9, w9, #0x1
   12850:	sub	x12, x29, #0x88
   12854:	strb	w8, [x12, x11]
   12858:	b	12808 <xre_compile_pattern@@Base+0x13e0>
   1285c:	sub	x8, x10, #0x1
   12860:	and	x10, x9, #0xff
   12864:	sub	x12, x29, #0x88
   12868:	strb	wzr, [x12, x10]
   1286c:	ldur	x10, [x29, #-160]
   12870:	cbnz	w11, 12dc0 <xre_compile_pattern@@Base+0x1998>
   12874:	b	12e18 <xre_compile_pattern@@Base+0x19f0>
   12878:	and	x11, x9, #0xff
   1287c:	sub	x12, x29, #0x88
   12880:	sub	x10, x8, #0x1
   12884:	strb	wzr, [x12, x11]
   12888:	ldrb	w11, [x8]
   1288c:	cmp	w11, #0x5d
   12890:	b.ne	128e0 <xre_compile_pattern@@Base+0x14b8>  // b.any
   12894:	ldurb	w11, [x29, #-136]
   12898:	cbz	w11, 128e0 <xre_compile_pattern@@Base+0x14b8>
   1289c:	and	w9, w9, #0xff
   128a0:	cmp	w9, #0x1
   128a4:	b.ne	14160 <xre_compile_pattern@@Base+0x2d38>  // b.any
   128a8:	ldur	x9, [x29, #-160]
   128ac:	cmp	x8, x9
   128b0:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   128b4:	lsr	x8, x11, #3
   128b8:	ldrb	w9, [x6, x8]
   128bc:	and	w11, w11, #0x7
   128c0:	lsl	w11, w14, w11
   128c4:	orr	w9, w9, w11
   128c8:	strb	w9, [x6, x8]
   128cc:	ldurb	w9, [x29, #-136]
   128d0:	add	x8, x10, #0x2
   128d4:	stur	x8, [x29, #-144]
   128d8:	mov	w8, wzr
   128dc:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   128e0:	mov	w11, #0xff                  	// #255
   128e4:	mvn	w10, w9
   128e8:	bics	wzr, w11, w9
   128ec:	ldrb	w9, [x23, #12]
   128f0:	ldrb	w11, [x23, #6]
   128f4:	orr	x10, x10, #0xffffffffffffff00
   128f8:	add	x10, x10, x8
   128fc:	csel	x8, x8, x10, eq  // eq = none
   12900:	stur	x8, [x29, #-144]
   12904:	orr	w8, w9, #0x8
   12908:	orr	w9, w11, #0x40
   1290c:	strb	w8, [x23, #12]
   12910:	strb	w9, [x23, #6]
   12914:	mov	w9, #0x2e                  	// #46
   12918:	mov	w8, wzr
   1291c:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12920:	and	x11, x10, #0xff
   12924:	sub	x12, x29, #0x88
   12928:	sub	x8, x9, #0x1
   1292c:	strb	wzr, [x12, x11]
   12930:	ldrb	w11, [x9]
   12934:	cmp	w11, #0x5d
   12938:	b.ne	12d78 <xre_compile_pattern@@Base+0x1950>  // b.any
   1293c:	ldur	w10, [x29, #-136]
   12940:	ldurh	w11, [x29, #-132]
   12944:	mov	w13, #0x6c61                	// #27745
   12948:	movk	w13, #0x756e, lsl #16
   1294c:	mov	w14, #0x6d                  	// #109
   12950:	eor	w13, w10, w13
   12954:	eor	w14, w11, w14
   12958:	mov	w0, #0x6e63                	// #28259
   1295c:	mov	w4, #0x7267                	// #29287
   12960:	movk	w0, #0x7274, lsl #16
   12964:	mov	w1, #0x6c                  	// #108
   12968:	movk	w4, #0x7061, lsl #16
   1296c:	orr	w13, w13, w14
   12970:	mov	w14, #0x68                  	// #104
   12974:	eor	w0, w10, w0
   12978:	eor	w1, w11, w1
   1297c:	eor	w4, w10, w4
   12980:	eor	w14, w11, w14
   12984:	mov	w2, #0x6964                	// #26980
   12988:	orr	w0, w0, w1
   1298c:	mov	w1, #0x7270                	// #29296
   12990:	orr	w14, w4, w14
   12994:	mov	w4, #0x7570                	// #30064
   12998:	mov	w17, #0x6c62                	// #27746
   1299c:	movk	w2, #0x6967, lsl #16
   129a0:	mov	w3, #0x74                  	// #116
   129a4:	movk	w1, #0x6e69, lsl #16
   129a8:	movk	w4, #0x636e, lsl #16
   129ac:	movk	w17, #0x6e61, lsl #16
   129b0:	mov	w18, #0x6b                  	// #107
   129b4:	eor	w2, w10, w2
   129b8:	eor	w3, w11, w3
   129bc:	eor	w1, w10, w1
   129c0:	eor	w4, w10, w4
   129c4:	mov	w15, #0x6c61                	// #27745
   129c8:	eor	w17, w10, w17
   129cc:	eor	w18, w11, w18
   129d0:	orr	w2, w2, w3
   129d4:	orr	w1, w1, w3
   129d8:	orr	w3, w4, w3
   129dc:	mov	w4, #0x7073                	// #28787
   129e0:	movk	w15, #0x6870, lsl #16
   129e4:	mov	w16, #0x61                  	// #97
   129e8:	orr	w17, w17, w18
   129ec:	mov	w18, #0x72                  	// #114
   129f0:	movk	w4, #0x6361, lsl #16
   129f4:	mov	w5, #0x65                  	// #101
   129f8:	eor	w15, w10, w15
   129fc:	eor	w16, w11, w16
   12a00:	eor	w18, w11, w18
   12a04:	eor	w4, w10, w4
   12a08:	eor	w11, w11, w5
   12a0c:	orr	w15, w15, w16
   12a10:	mov	w16, #0x6f6c                	// #28524
   12a14:	orr	w11, w4, w11
   12a18:	mov	w4, #0x7075                	// #28789
   12a1c:	movk	w16, #0x6577, lsl #16
   12a20:	movk	w4, #0x6570, lsl #16
   12a24:	eor	w16, w10, w16
   12a28:	eor	w4, w10, w4
   12a2c:	ldur	w12, [x29, #-133]
   12a30:	orr	w16, w16, w18
   12a34:	orr	w18, w4, w18
   12a38:	mov	w4, #0x6478                	// #25720
   12a3c:	movk	w4, #0x6769, lsl #16
   12a40:	eor	w10, w10, w4
   12a44:	mov	w4, #0x6967                	// #26983
   12a48:	movk	w4, #0x74, lsl #16
   12a4c:	eor	w12, w12, w4
   12a50:	cmp	w13, #0x0
   12a54:	orr	w10, w10, w12
   12a58:	cset	w12, ne  // ne = any
   12a5c:	cmp	w15, #0x0
   12a60:	str	w12, [sp, #64]
   12a64:	cset	w12, ne  // ne = any
   12a68:	cmp	w17, #0x0
   12a6c:	str	w12, [sp, #44]
   12a70:	cset	w12, ne  // ne = any
   12a74:	cmp	w0, #0x0
   12a78:	str	w12, [sp, #32]
   12a7c:	cset	w12, ne  // ne = any
   12a80:	cmp	w2, #0x0
   12a84:	str	w12, [sp, #24]
   12a88:	cset	w12, ne  // ne = any
   12a8c:	cmp	w14, #0x0
   12a90:	str	w12, [sp, #60]
   12a94:	cset	w12, ne  // ne = any
   12a98:	cmp	w16, #0x0
   12a9c:	str	w12, [sp, #52]
   12aa0:	cset	w12, ne  // ne = any
   12aa4:	cmp	w1, #0x0
   12aa8:	str	w12, [sp, #40]
   12aac:	cset	w12, ne  // ne = any
   12ab0:	cmp	w3, #0x0
   12ab4:	str	w12, [sp, #28]
   12ab8:	cset	w12, ne  // ne = any
   12abc:	cmp	w11, #0x0
   12ac0:	cset	w11, ne  // ne = any
   12ac4:	cmp	w18, #0x0
   12ac8:	str	w11, [sp, #48]
   12acc:	cset	w11, ne  // ne = any
   12ad0:	cmp	w10, #0x0
   12ad4:	cset	w10, ne  // ne = any
   12ad8:	str	w12, [sp, #68]
   12adc:	str	w11, [sp, #36]
   12ae0:	str	w10, [sp, #20]
   12ae4:	cbz	w17, 12b40 <xre_compile_pattern@@Base+0x1718>
   12ae8:	ldr	w10, [sp, #24]
   12aec:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12af0:	ldr	w10, [sp, #52]
   12af4:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12af8:	ldr	w10, [sp, #68]
   12afc:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b00:	ldr	w10, [sp, #28]
   12b04:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b08:	ldr	w10, [sp, #48]
   12b0c:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b10:	ldr	w10, [sp, #20]
   12b14:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b18:	ldr	w10, [sp, #64]
   12b1c:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b20:	ldr	w10, [sp, #60]
   12b24:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b28:	ldr	w10, [sp, #40]
   12b2c:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b30:	ldr	w10, [sp, #44]
   12b34:	cbz	w10, 12b40 <xre_compile_pattern@@Base+0x1718>
   12b38:	ldr	w10, [sp, #36]
   12b3c:	cbnz	w10, 14170 <xre_compile_pattern@@Base+0x2d48>
   12b40:	ldur	x10, [x29, #-160]
   12b44:	cmp	x9, x10
   12b48:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   12b4c:	add	x8, x8, #0x2
   12b50:	cmp	x8, x10
   12b54:	str	x7, [sp, #8]
   12b58:	stur	x8, [x29, #-144]
   12b5c:	b.eq	140cc <xre_compile_pattern@@Base+0x2ca4>  // b.none
   12b60:	ldp	w8, w9, [sp, #36]
   12b64:	ldur	x10, [x29, #-152]
   12b68:	mov	x26, xzr
   12b6c:	cmp	w8, #0x0
   12b70:	cset	w8, eq  // eq = none
   12b74:	cmp	w9, #0x0
   12b78:	cset	w9, eq  // eq = none
   12b7c:	cmp	x10, #0x0
   12b80:	cset	w10, ne  // ne = any
   12b84:	orr	w8, w9, w8
   12b88:	and	w8, w10, w8
   12b8c:	str	w8, [sp, #56]
   12b90:	b	12ba0 <xre_compile_pattern@@Base+0x1778>
   12b94:	add	x26, x26, #0x1
   12b98:	cmp	x26, #0x100
   12b9c:	b.eq	12e4c <xre_compile_pattern@@Base+0x1a24>  // b.none
   12ba0:	ldr	w8, [sp, #64]
   12ba4:	ubfx	x21, x26, #3, #29
   12ba8:	cbnz	w8, 12bc0 <xre_compile_pattern@@Base+0x1798>
   12bac:	bl	5030 <__ctype_b_loc@plt>
   12bb0:	ldr	x8, [x0]
   12bb4:	ldr	x6, [sp, #80]
   12bb8:	ldrh	w8, [x8, x26, lsl #1]
   12bbc:	tbnz	w8, #3, 12c14 <xre_compile_pattern@@Base+0x17ec>
   12bc0:	ldr	w8, [sp, #44]
   12bc4:	cbnz	w8, 12bdc <xre_compile_pattern@@Base+0x17b4>
   12bc8:	bl	5030 <__ctype_b_loc@plt>
   12bcc:	ldr	x8, [x0]
   12bd0:	ldr	x6, [sp, #80]
   12bd4:	ldrh	w8, [x8, x26, lsl #1]
   12bd8:	tbnz	w8, #10, 12c14 <xre_compile_pattern@@Base+0x17ec>
   12bdc:	ldr	w8, [sp, #32]
   12be0:	cbnz	w8, 12bf8 <xre_compile_pattern@@Base+0x17d0>
   12be4:	bl	5030 <__ctype_b_loc@plt>
   12be8:	ldr	x8, [x0]
   12bec:	ldr	x6, [sp, #80]
   12bf0:	ldrh	w8, [x8, x26, lsl #1]
   12bf4:	tbnz	w8, #0, 12c14 <xre_compile_pattern@@Base+0x17ec>
   12bf8:	ldr	w8, [sp, #24]
   12bfc:	cbnz	w8, 12c2c <xre_compile_pattern@@Base+0x1804>
   12c00:	bl	5030 <__ctype_b_loc@plt>
   12c04:	ldr	x8, [x0]
   12c08:	ldr	x6, [sp, #80]
   12c0c:	ldrh	w8, [x8, x26, lsl #1]
   12c10:	tbz	w8, #1, 12c2c <xre_compile_pattern@@Base+0x1804>
   12c14:	ldrb	w8, [x6, x21]
   12c18:	and	w9, w26, #0x7
   12c1c:	mov	w10, #0x1                   	// #1
   12c20:	lsl	w9, w10, w9
   12c24:	orr	w8, w8, w9
   12c28:	strb	w8, [x6, x21]
   12c2c:	ldr	w8, [sp, #60]
   12c30:	cbnz	w8, 12c48 <xre_compile_pattern@@Base+0x1820>
   12c34:	bl	5030 <__ctype_b_loc@plt>
   12c38:	ldr	x8, [x0]
   12c3c:	ldr	x6, [sp, #80]
   12c40:	ldrh	w8, [x8, x26, lsl #1]
   12c44:	tbnz	w8, #11, 12c9c <xre_compile_pattern@@Base+0x1874>
   12c48:	ldr	w8, [sp, #52]
   12c4c:	cbnz	w8, 12c64 <xre_compile_pattern@@Base+0x183c>
   12c50:	bl	5030 <__ctype_b_loc@plt>
   12c54:	ldr	x8, [x0]
   12c58:	ldr	x6, [sp, #80]
   12c5c:	ldrsh	w8, [x8, x26, lsl #1]
   12c60:	tbnz	w8, #31, 12c9c <xre_compile_pattern@@Base+0x1874>
   12c64:	ldr	w8, [sp, #40]
   12c68:	cbnz	w8, 12c80 <xre_compile_pattern@@Base+0x1858>
   12c6c:	bl	5030 <__ctype_b_loc@plt>
   12c70:	ldr	x8, [x0]
   12c74:	ldr	x6, [sp, #80]
   12c78:	ldrh	w8, [x8, x26, lsl #1]
   12c7c:	tbnz	w8, #9, 12c9c <xre_compile_pattern@@Base+0x1874>
   12c80:	ldr	w8, [sp, #28]
   12c84:	cbnz	w8, 12cb4 <xre_compile_pattern@@Base+0x188c>
   12c88:	bl	5030 <__ctype_b_loc@plt>
   12c8c:	ldr	x8, [x0]
   12c90:	ldr	x6, [sp, #80]
   12c94:	ldrh	w8, [x8, x26, lsl #1]
   12c98:	tbz	w8, #14, 12cb4 <xre_compile_pattern@@Base+0x188c>
   12c9c:	ldrb	w8, [x6, x21]
   12ca0:	and	w9, w26, #0x7
   12ca4:	mov	w10, #0x1                   	// #1
   12ca8:	lsl	w9, w10, w9
   12cac:	orr	w8, w8, w9
   12cb0:	strb	w8, [x6, x21]
   12cb4:	ldr	w8, [sp, #68]
   12cb8:	cbnz	w8, 12cd0 <xre_compile_pattern@@Base+0x18a8>
   12cbc:	bl	5030 <__ctype_b_loc@plt>
   12cc0:	ldr	x8, [x0]
   12cc4:	ldr	x6, [sp, #80]
   12cc8:	ldrh	w8, [x8, x26, lsl #1]
   12ccc:	tbnz	w8, #2, 12d24 <xre_compile_pattern@@Base+0x18fc>
   12cd0:	ldr	w8, [sp, #48]
   12cd4:	cbnz	w8, 12cec <xre_compile_pattern@@Base+0x18c4>
   12cd8:	bl	5030 <__ctype_b_loc@plt>
   12cdc:	ldr	x8, [x0]
   12ce0:	ldr	x6, [sp, #80]
   12ce4:	ldrh	w8, [x8, x26, lsl #1]
   12ce8:	tbnz	w8, #13, 12d24 <xre_compile_pattern@@Base+0x18fc>
   12cec:	ldr	w8, [sp, #36]
   12cf0:	cbnz	w8, 12d08 <xre_compile_pattern@@Base+0x18e0>
   12cf4:	bl	5030 <__ctype_b_loc@plt>
   12cf8:	ldr	x8, [x0]
   12cfc:	ldr	x6, [sp, #80]
   12d00:	ldrh	w8, [x8, x26, lsl #1]
   12d04:	tbnz	w8, #8, 12d24 <xre_compile_pattern@@Base+0x18fc>
   12d08:	ldr	w8, [sp, #20]
   12d0c:	cbnz	w8, 12d3c <xre_compile_pattern@@Base+0x1914>
   12d10:	bl	5030 <__ctype_b_loc@plt>
   12d14:	ldr	x8, [x0]
   12d18:	ldr	x6, [sp, #80]
   12d1c:	ldrh	w8, [x8, x26, lsl #1]
   12d20:	tbz	w8, #12, 12d3c <xre_compile_pattern@@Base+0x1914>
   12d24:	ldrb	w8, [x6, x21]
   12d28:	and	w9, w26, #0x7
   12d2c:	mov	w10, #0x1                   	// #1
   12d30:	lsl	w9, w10, w9
   12d34:	orr	w8, w8, w9
   12d38:	strb	w8, [x6, x21]
   12d3c:	ldr	w8, [sp, #56]
   12d40:	cbz	w8, 12b94 <xre_compile_pattern@@Base+0x176c>
   12d44:	bl	5030 <__ctype_b_loc@plt>
   12d48:	ldr	x8, [x0]
   12d4c:	ldr	x6, [sp, #80]
   12d50:	ldrh	w8, [x8, x26, lsl #1]
   12d54:	tst	w8, #0x300
   12d58:	b.eq	12b94 <xre_compile_pattern@@Base+0x176c>  // b.none
   12d5c:	ldrb	w8, [x6, x21]
   12d60:	and	w9, w26, #0x7
   12d64:	mov	w10, #0x1                   	// #1
   12d68:	lsl	w9, w10, w9
   12d6c:	orr	w8, w8, w9
   12d70:	strb	w8, [x6, x21]
   12d74:	b	12b94 <xre_compile_pattern@@Base+0x176c>
   12d78:	ldrb	w11, [x23, #12]
   12d7c:	ldrb	w12, [x23, #8]
   12d80:	mvn	w10, w10
   12d84:	orr	x10, x10, #0xffffffffffffff00
   12d88:	add	x9, x10, x9
   12d8c:	stur	x9, [x29, #-144]
   12d90:	orr	w9, w11, #0x8
   12d94:	orr	w10, w12, #0x4
   12d98:	mov	w24, #0x3a                  	// #58
   12d9c:	mov	w8, wzr
   12da0:	strb	w9, [x23, #12]
   12da4:	strb	w10, [x23, #8]
   12da8:	mov	w9, w24
   12dac:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12db0:	and	x11, x9, #0xff
   12db4:	sub	x12, x29, #0x88
   12db8:	sub	x8, x10, #0x1
   12dbc:	strb	wzr, [x12, x11]
   12dc0:	ldrb	w11, [x10]
   12dc4:	cmp	w11, #0x5d
   12dc8:	b.ne	12e18 <xre_compile_pattern@@Base+0x19f0>  // b.any
   12dcc:	ldurb	w11, [x29, #-136]
   12dd0:	cbz	w11, 12e18 <xre_compile_pattern@@Base+0x19f0>
   12dd4:	and	w9, w9, #0xff
   12dd8:	cmp	w9, #0x1
   12ddc:	b.ne	14160 <xre_compile_pattern@@Base+0x2d38>  // b.any
   12de0:	ldur	x9, [x29, #-160]
   12de4:	cmp	x10, x9
   12de8:	b.eq	14128 <xre_compile_pattern@@Base+0x2d00>  // b.none
   12dec:	add	x9, x6, x11, lsr #3
   12df0:	ldrb	w10, [x9]
   12df4:	add	x8, x8, #0x2
   12df8:	stur	x8, [x29, #-144]
   12dfc:	and	w11, w11, #0x7
   12e00:	mov	w8, #0x1                   	// #1
   12e04:	lsl	w11, w8, w11
   12e08:	orr	w10, w10, w11
   12e0c:	strb	w10, [x9]
   12e10:	mov	w9, w24
   12e14:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12e18:	ldrb	w12, [x23, #12]
   12e1c:	ldrb	w13, [x23, #8]
   12e20:	mvn	w11, w9
   12e24:	orr	x11, x11, #0xffffffffffffff00
   12e28:	add	x10, x11, x10
   12e2c:	stur	x10, [x29, #-144]
   12e30:	orr	w10, w12, #0x8
   12e34:	orr	w11, w13, #0x20
   12e38:	mov	w8, wzr
   12e3c:	mov	w9, #0x3d                  	// #61
   12e40:	strb	w10, [x23, #12]
   12e44:	strb	w11, [x7]
   12e48:	b	12e60 <xre_compile_pattern@@Base+0x1a38>
   12e4c:	ldur	x21, [x29, #-168]
   12e50:	ldr	x26, [sp, #152]
   12e54:	ldr	x7, [sp, #8]
   12e58:	mov	w8, #0x1                   	// #1
   12e5c:	mov	w9, w24
   12e60:	ldur	x10, [x29, #-160]
   12e64:	ldur	x11, [x29, #-144]
   12e68:	mov	w24, w9
   12e6c:	cmp	x11, x10
   12e70:	mov	x10, x11
   12e74:	b.ne	12250 <xre_compile_pattern@@Base+0xe28>  // b.any
   12e78:	b	140cc <xre_compile_pattern@@Base+0x2ca4>
   12e7c:	tbz	w21, #17, 14140 <xre_compile_pattern@@Base+0x2d18>
   12e80:	mov	w21, #0x29                  	// #41
   12e84:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   12e88:	mov	w9, #0x2e                  	// #46
   12e8c:	ldur	x12, [x29, #-144]
   12e90:	cmp	x12, x21
   12e94:	b.cs	1308c <xre_compile_pattern@@Base+0x1c64>  // b.hs, b.nlast
   12e98:	fmov	w10, s1
   12e9c:	cbz	w10, 1308c <xre_compile_pattern@@Base+0x1c64>
   12ea0:	cmp	w9, w8
   12ea4:	b.ne	1308c <xre_compile_pattern@@Base+0x1c64>  // b.any
   12ea8:	ldrb	w8, [x12]
   12eac:	cbz	x11, 1306c <xre_compile_pattern@@Base+0x1c44>
   12eb0:	ldrb	w8, [x11, x8]
   12eb4:	ldrb	w9, [x11, #10]
   12eb8:	b	13070 <xre_compile_pattern@@Base+0x1c48>
   12ebc:	mov	x27, xzr
   12ec0:	b	13a4c <xre_compile_pattern@@Base+0x2624>
   12ec4:	ldur	x10, [x29, #-144]
   12ec8:	mov	x9, x10
   12ecc:	b	12ee0 <xre_compile_pattern@@Base+0x1ab8>
   12ed0:	ldur	x10, [x29, #-160]
   12ed4:	cmp	x10, x9
   12ed8:	mov	x10, x9
   12edc:	b.eq	12fa4 <xre_compile_pattern@@Base+0x1b7c>  // b.none
   12ee0:	ldrb	w8, [x9], #1
   12ee4:	sub	w11, w8, #0x30
   12ee8:	cmp	w11, #0x9
   12eec:	b.hi	12f08 <xre_compile_pattern@@Base+0x1ae0>  // b.pmore
   12ef0:	cmp	w21, #0x8, lsl #12
   12ef4:	b.ge	12ed0 <xre_compile_pattern@@Base+0x1aa8>  // b.tcont
   12ef8:	bic	w10, w21, w21, asr #31
   12efc:	madd	w10, w10, w13, w8
   12f00:	sub	w21, w10, #0x30
   12f04:	b	12ed0 <xre_compile_pattern@@Base+0x1aa8>
   12f08:	add	x26, x10, #0x1
   12f0c:	cmp	w8, #0x2c
   12f10:	b.ne	13058 <xre_compile_pattern@@Base+0x1c30>  // b.any
   12f14:	ldur	x9, [x29, #-160]
   12f18:	cmp	x26, x9
   12f1c:	b.eq	13948 <xre_compile_pattern@@Base+0x2520>  // b.none
   12f20:	mov	w15, #0xffffffff            	// #-1
   12f24:	mov	x9, x26
   12f28:	cbnz	x24, 12f40 <xre_compile_pattern@@Base+0x1b18>
   12f2c:	b	12f7c <xre_compile_pattern@@Base+0x1b54>
   12f30:	ldur	x10, [x29, #-160]
   12f34:	mov	x26, x9
   12f38:	cmp	x10, x9
   12f3c:	b.eq	1395c <xre_compile_pattern@@Base+0x2534>  // b.none
   12f40:	ldrb	w8, [x9], #1
   12f44:	ldrb	w8, [x24, x8]
   12f48:	sub	w10, w8, #0x30
   12f4c:	cmp	w10, #0x9
   12f50:	b.hi	13954 <xre_compile_pattern@@Base+0x252c>  // b.pmore
   12f54:	cmp	w15, #0x8, lsl #12
   12f58:	b.ge	12f30 <xre_compile_pattern@@Base+0x1b08>  // b.tcont
   12f5c:	bic	w10, w15, w15, asr #31
   12f60:	madd	w10, w10, w13, w8
   12f64:	sub	w15, w10, #0x30
   12f68:	b	12f30 <xre_compile_pattern@@Base+0x1b08>
   12f6c:	ldur	x10, [x29, #-160]
   12f70:	mov	x26, x9
   12f74:	cmp	x10, x9
   12f78:	b.eq	1395c <xre_compile_pattern@@Base+0x2534>  // b.none
   12f7c:	ldrb	w8, [x9], #1
   12f80:	sub	w10, w8, #0x30
   12f84:	cmp	w10, #0x9
   12f88:	b.hi	13954 <xre_compile_pattern@@Base+0x252c>  // b.pmore
   12f8c:	cmp	w15, #0x8, lsl #12
   12f90:	b.ge	12f6c <xre_compile_pattern@@Base+0x1b44>  // b.tcont
   12f94:	bic	w10, w15, w15, asr #31
   12f98:	madd	w10, w10, w13, w8
   12f9c:	sub	w15, w10, #0x30
   12fa0:	b	12f6c <xre_compile_pattern@@Base+0x1b44>
   12fa4:	ldur	x26, [x29, #-160]
   12fa8:	mov	w15, w21
   12fac:	b	13968 <xre_compile_pattern@@Base+0x2540>
   12fb0:	mov	w21, #0x24                  	// #36
   12fb4:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   12fb8:	ldp	x24, x8, [x20]
   12fbc:	mov	x28, x23
   12fc0:	sub	x9, x23, x24
   12fc4:	add	x9, x9, #0x2
   12fc8:	cmp	x9, x8
   12fcc:	b.ls	13250 <xre_compile_pattern@@Base+0x1e28>  // b.plast
   12fd0:	ldur	x21, [x29, #-160]
   12fd4:	b	12ff0 <xre_compile_pattern@@Base+0x1bc8>
   12fd8:	ldr	x8, [x25]
   12fdc:	sub	x9, x23, x0
   12fe0:	add	x9, x9, #0x2
   12fe4:	mov	x24, x0
   12fe8:	cmp	x9, x8
   12fec:	b.ls	13254 <xre_compile_pattern@@Base+0x1e2c>  // b.plast
   12ff0:	cmp	x8, #0x10, lsl #12
   12ff4:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   12ff8:	lsl	x8, x8, #1
   12ffc:	cmp	x8, #0x10, lsl #12
   13000:	mov	w9, #0x10000               	// #65536
   13004:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   13008:	mov	x0, x24
   1300c:	str	x1, [x20, #8]
   13010:	bl	4f30 <realloc@plt>
   13014:	str	x0, [x20]
   13018:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   1301c:	cmp	x24, x0
   13020:	b.eq	12fd8 <xre_compile_pattern@@Base+0x1bb0>  // b.none
   13024:	sub	x8, x0, x24
   13028:	cmp	x22, #0x0
   1302c:	add	x9, x22, x8
   13030:	add	x10, x28, x8
   13034:	csel	x22, xzr, x9, eq  // eq = none
   13038:	cmp	x28, #0x0
   1303c:	add	x23, x23, x8
   13040:	add	x19, x19, x8
   13044:	add	x8, x27, x8
   13048:	csel	x28, xzr, x10, eq  // eq = none
   1304c:	cmp	x27, #0x0
   13050:	csel	x27, xzr, x8, eq  // eq = none
   13054:	b	12fd8 <xre_compile_pattern@@Base+0x1bb0>
   13058:	mov	w15, w21
   1305c:	b	13968 <xre_compile_pattern@@Base+0x2540>
   13060:	ldur	x8, [x29, #-168]
   13064:	tbnz	w8, #1, 11670 <xre_compile_pattern@@Base+0x248>
   13068:	b	139b8 <xre_compile_pattern@@Base+0x2590>
   1306c:	mov	w9, #0xa                   	// #10
   13070:	tbnz	w26, #6, 1308c <xre_compile_pattern@@Base+0x1c64>
   13074:	cmp	w9, w8
   13078:	b.ne	1308c <xre_compile_pattern@@Base+0x1c64>  // b.any
   1307c:	mov	w21, #0x1                   	// #1
   13080:	mov	w8, #0xd                   	// #13
   13084:	mov	x9, x28
   13088:	b	13098 <xre_compile_pattern@@Base+0x1c70>
   1308c:	mov	w21, wzr
   13090:	sub	x9, x28, #0x3
   13094:	mov	w8, #0x12                  	// #18
   13098:	sub	w9, w9, w23
   1309c:	strb	w8, [x23]
   130a0:	sub	w8, w9, #0x3
   130a4:	strb	w8, [x23, #1]
   130a8:	lsr	w8, w8, #8
   130ac:	strb	w8, [x23, #2]
   130b0:	add	x23, x23, #0x3
   130b4:	ldp	x24, x8, [x20]
   130b8:	mov	w26, #0x10000               	// #65536
   130bc:	sub	x9, x23, x24
   130c0:	add	x9, x9, #0x3
   130c4:	cmp	x9, x8
   130c8:	b.hi	13140 <xre_compile_pattern@@Base+0x1d18>  // b.pmore
   130cc:	cmp	w21, #0x0
   130d0:	add	x21, x23, #0x3
   130d4:	mov	w8, #0xf                   	// #15
   130d8:	sub	w9, w21, w28
   130dc:	cinc	w8, w8, ne  // ne = any
   130e0:	cmp	x23, x28
   130e4:	sub	w9, w9, #0x3
   130e8:	b.eq	130fc <xre_compile_pattern@@Base+0x1cd4>  // b.none
   130ec:	ldrb	w10, [x23, #-1]!
   130f0:	cmp	x28, x23
   130f4:	strb	w10, [x23, #3]
   130f8:	b.ne	130ec <xre_compile_pattern@@Base+0x1cc4>  // b.any
   130fc:	ldur	x24, [x29, #-152]
   13100:	strb	w8, [x28]
   13104:	lsr	w8, w9, #8
   13108:	strb	w8, [x28, #2]
   1310c:	fmov	w8, s1
   13110:	strb	w9, [x28, #1]
   13114:	cbz	w8, 13198 <xre_compile_pattern@@Base+0x1d70>
   13118:	mov	x27, xzr
   1311c:	mov	x23, x21
   13120:	b	13a4c <xre_compile_pattern@@Base+0x2624>
   13124:	ldr	x8, [x25]
   13128:	ldr	q1, [sp, #80]
   1312c:	sub	x9, x23, x0
   13130:	add	x9, x9, #0x3
   13134:	cmp	x9, x8
   13138:	mov	x24, x0
   1313c:	b.ls	130cc <xre_compile_pattern@@Base+0x1ca4>  // b.plast
   13140:	cmp	x8, #0x10, lsl #12
   13144:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13148:	lsl	x8, x8, #1
   1314c:	cmp	x8, #0x10, lsl #12
   13150:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13154:	mov	x0, x24
   13158:	str	x1, [x20, #8]
   1315c:	bl	4f30 <realloc@plt>
   13160:	str	x0, [x20]
   13164:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13168:	cmp	x24, x0
   1316c:	b.eq	13124 <xre_compile_pattern@@Base+0x1cfc>  // b.none
   13170:	sub	x8, x0, x24
   13174:	cmp	x22, #0x0
   13178:	add	x9, x22, x8
   1317c:	add	x23, x23, x8
   13180:	add	x19, x19, x8
   13184:	add	x8, x28, x8
   13188:	csel	x22, xzr, x9, eq  // eq = none
   1318c:	cmp	x28, #0x0
   13190:	csel	x28, xzr, x8, eq  // eq = none
   13194:	b	13124 <xre_compile_pattern@@Base+0x1cfc>
   13198:	ldp	x23, x8, [x20]
   1319c:	sub	x9, x21, x23
   131a0:	add	x9, x9, #0x3
   131a4:	cmp	x9, x8
   131a8:	b.hi	131f8 <xre_compile_pattern@@Base+0x1dd0>  // b.pmore
   131ac:	cmp	x21, x28
   131b0:	b.eq	131c8 <xre_compile_pattern@@Base+0x1da0>  // b.none
   131b4:	mov	x8, x21
   131b8:	ldrb	w9, [x8, #-1]!
   131bc:	cmp	x28, x8
   131c0:	strb	w9, [x8, #3]
   131c4:	b.ne	131b8 <xre_compile_pattern@@Base+0x1d90>  // b.any
   131c8:	mov	w8, #0x313                 	// #787
   131cc:	mov	x27, xzr
   131d0:	strh	w8, [x28]
   131d4:	strb	wzr, [x28, #2]
   131d8:	add	x23, x21, #0x3
   131dc:	b	13a4c <xre_compile_pattern@@Base+0x2624>
   131e0:	ldr	x8, [x25]
   131e4:	sub	x9, x21, x0
   131e8:	add	x9, x9, #0x3
   131ec:	mov	x23, x0
   131f0:	cmp	x9, x8
   131f4:	b.ls	131ac <xre_compile_pattern@@Base+0x1d84>  // b.plast
   131f8:	cmp	x8, #0x10, lsl #12
   131fc:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13200:	lsl	x8, x8, #1
   13204:	cmp	x8, #0x10, lsl #12
   13208:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   1320c:	mov	x0, x23
   13210:	str	x1, [x20, #8]
   13214:	bl	4f30 <realloc@plt>
   13218:	str	x0, [x20]
   1321c:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13220:	cmp	x23, x0
   13224:	b.eq	131e0 <xre_compile_pattern@@Base+0x1db8>  // b.none
   13228:	sub	x8, x0, x23
   1322c:	cmp	x22, #0x0
   13230:	add	x9, x22, x8
   13234:	add	x21, x21, x8
   13238:	add	x19, x19, x8
   1323c:	add	x8, x28, x8
   13240:	csel	x22, xzr, x9, eq  // eq = none
   13244:	cmp	x28, #0x0
   13248:	csel	x28, xzr, x8, eq  // eq = none
   1324c:	b	131e0 <xre_compile_pattern@@Base+0x1db8>
   13250:	ldur	x21, [x29, #-160]
   13254:	mov	w8, #0x8                   	// #8
   13258:	strb	w8, [x23]
   1325c:	add	x8, x23, #0x2
   13260:	strb	w26, [x23, #1]
   13264:	ldur	x24, [x29, #-152]
   13268:	mov	x23, x8
   1326c:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   13270:	ldur	x8, [x29, #-168]
   13274:	tbnz	w8, #19, 13d98 <xre_compile_pattern@@Base+0x2970>
   13278:	ldp	x24, x8, [x20]
   1327c:	sub	x9, x23, x24
   13280:	add	x9, x9, #0x1
   13284:	cmp	x9, x8
   13288:	b.ls	13e78 <xre_compile_pattern@@Base+0x2a50>  // b.plast
   1328c:	ldur	x21, [x29, #-160]
   13290:	mov	w26, #0x10000               	// #65536
   13294:	b	132b0 <xre_compile_pattern@@Base+0x1e88>
   13298:	ldr	x8, [x25]
   1329c:	sub	x9, x23, x0
   132a0:	add	x9, x9, #0x1
   132a4:	mov	x24, x0
   132a8:	cmp	x9, x8
   132ac:	b.ls	13f68 <xre_compile_pattern@@Base+0x2b40>  // b.plast
   132b0:	cmp	x8, #0x10, lsl #12
   132b4:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   132b8:	lsl	x8, x8, #1
   132bc:	cmp	x8, #0x10, lsl #12
   132c0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   132c4:	mov	x0, x24
   132c8:	str	x1, [x20, #8]
   132cc:	bl	4f30 <realloc@plt>
   132d0:	str	x0, [x20]
   132d4:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   132d8:	cmp	x24, x0
   132dc:	b.eq	13298 <xre_compile_pattern@@Base+0x1e70>  // b.none
   132e0:	sub	x8, x0, x24
   132e4:	cmp	x22, #0x0
   132e8:	add	x9, x22, x8
   132ec:	add	x10, x28, x8
   132f0:	csel	x22, xzr, x9, eq  // eq = none
   132f4:	cmp	x28, #0x0
   132f8:	add	x23, x23, x8
   132fc:	add	x19, x19, x8
   13300:	add	x8, x27, x8
   13304:	csel	x28, xzr, x10, eq  // eq = none
   13308:	cmp	x27, #0x0
   1330c:	csel	x27, xzr, x8, eq  // eq = none
   13310:	b	13298 <xre_compile_pattern@@Base+0x1e70>
   13314:	ldur	x8, [x29, #-168]
   13318:	tbnz	w8, #13, 13da0 <xre_compile_pattern@@Base+0x2978>
   1331c:	ldr	x27, [sp, #168]
   13320:	ldr	x8, [x20, #48]
   13324:	ldur	x26, [x29, #-176]
   13328:	lsr	x21, x27, #32
   1332c:	add	x8, x8, #0x1
   13330:	cmp	w21, w27
   13334:	str	x8, [x20, #48]
   13338:	b.ne	13360 <xre_compile_pattern@@Base+0x1f38>  // b.any
   1333c:	lsl	w24, w27, #1
   13340:	add	x8, x24, w24, uxtw #2
   13344:	lsl	x1, x8, #3
   13348:	mov	x0, x26
   1334c:	bl	4f30 <realloc@plt>
   13350:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13354:	and	x8, x27, #0xffffffff00000000
   13358:	mov	x26, x0
   1335c:	orr	x27, x24, x8
   13360:	ldr	x24, [x20]
   13364:	ldr	w12, [sp, #148]
   13368:	mov	w13, #0x28                  	// #40
   1336c:	cmp	x22, #0x0
   13370:	sub	x11, x22, x24
   13374:	add	w12, w12, #0x1
   13378:	madd	x8, x21, x13, x26
   1337c:	sub	x10, x19, x24
   13380:	sub	x9, x23, x24
   13384:	csinc	x11, xzr, x11, eq  // eq = none
   13388:	cmp	w12, #0xff
   1338c:	str	x9, [x8, #24]
   13390:	stp	x10, x11, [x8]
   13394:	str	w12, [sp, #148]
   13398:	str	w12, [x8, #32]
   1339c:	b.hi	13418 <xre_compile_pattern@@Base+0x1ff0>  // b.pmore
   133a0:	add	x8, x9, #0x2
   133a4:	madd	x10, x21, x13, x26
   133a8:	str	x8, [x10, #16]
   133ac:	ldr	x8, [x25]
   133b0:	add	x9, x9, #0x3
   133b4:	cmp	x9, x8
   133b8:	b.ls	13428 <xre_compile_pattern@@Base+0x2000>  // b.plast
   133bc:	ldur	x21, [x29, #-160]
   133c0:	cmp	x8, #0x10, lsl #12
   133c4:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   133c8:	lsl	x8, x8, #1
   133cc:	cmp	x8, #0x10, lsl #12
   133d0:	mov	w9, #0x10000               	// #65536
   133d4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   133d8:	mov	x0, x24
   133dc:	str	x1, [x20, #8]
   133e0:	bl	4f30 <realloc@plt>
   133e4:	str	x0, [x20]
   133e8:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   133ec:	sub	x8, x0, x24
   133f0:	cmp	x24, x0
   133f4:	add	x9, x23, x8
   133f8:	ldr	x8, [x25]
   133fc:	csel	x23, x23, x9, eq  // eq = none
   13400:	sub	x9, x23, x0
   13404:	add	x9, x9, #0x3
   13408:	cmp	x9, x8
   1340c:	mov	x24, x0
   13410:	b.hi	133c0 <xre_compile_pattern@@Base+0x1f98>  // b.pmore
   13414:	b	1342c <xre_compile_pattern@@Base+0x2004>
   13418:	ldur	x21, [x29, #-160]
   1341c:	str	x27, [sp, #168]
   13420:	stur	x26, [x29, #-176]
   13424:	b	13450 <xre_compile_pattern@@Base+0x2028>
   13428:	ldur	x21, [x29, #-160]
   1342c:	mov	w8, #0x6                   	// #6
   13430:	strb	w8, [x23]
   13434:	ldr	w8, [sp, #148]
   13438:	strb	wzr, [x23, #2]
   1343c:	str	x27, [sp, #168]
   13440:	stur	x26, [x29, #-176]
   13444:	strb	w8, [x23, #1]
   13448:	add	x8, x23, #0x3
   1344c:	mov	x23, x8
   13450:	ldr	x9, [sp, #168]
   13454:	ldur	x24, [x29, #-152]
   13458:	mov	x8, #0x100000000           	// #4294967296
   1345c:	mov	x22, xzr
   13460:	add	x9, x9, x8
   13464:	mov	x28, xzr
   13468:	mov	x27, xzr
   1346c:	str	x9, [sp, #168]
   13470:	mov	x19, x23
   13474:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   13478:	ldur	x21, [x29, #-168]
   1347c:	tbnz	w21, #13, 13490 <xre_compile_pattern@@Base+0x2068>
   13480:	ldr	x8, [sp, #168]
   13484:	lsr	x8, x8, #32
   13488:	cbnz	x8, 117a4 <xre_compile_pattern@@Base+0x37c>
   1348c:	tbz	w21, #17, 14140 <xre_compile_pattern@@Base+0x2d18>
   13490:	mov	w21, #0x29                  	// #41
   13494:	cbnz	x24, 139bc <xre_compile_pattern@@Base+0x2594>
   13498:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   1349c:	ldur	x8, [x29, #-168]
   134a0:	tbnz	w8, #19, 13dac <xre_compile_pattern@@Base+0x2984>
   134a4:	ldp	x24, x8, [x20]
   134a8:	sub	x9, x23, x24
   134ac:	add	x9, x9, #0x1
   134b0:	cmp	x9, x8
   134b4:	b.ls	13e84 <xre_compile_pattern@@Base+0x2a5c>  // b.plast
   134b8:	ldur	x21, [x29, #-160]
   134bc:	mov	w26, #0x10000               	// #65536
   134c0:	b	134dc <xre_compile_pattern@@Base+0x20b4>
   134c4:	ldr	x8, [x25]
   134c8:	sub	x9, x23, x0
   134cc:	add	x9, x9, #0x1
   134d0:	mov	x24, x0
   134d4:	cmp	x9, x8
   134d8:	b.ls	13f70 <xre_compile_pattern@@Base+0x2b48>  // b.plast
   134dc:	cmp	x8, #0x10, lsl #12
   134e0:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   134e4:	lsl	x8, x8, #1
   134e8:	cmp	x8, #0x10, lsl #12
   134ec:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   134f0:	mov	x0, x24
   134f4:	str	x1, [x20, #8]
   134f8:	bl	4f30 <realloc@plt>
   134fc:	str	x0, [x20]
   13500:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13504:	cmp	x24, x0
   13508:	b.eq	134c4 <xre_compile_pattern@@Base+0x209c>  // b.none
   1350c:	sub	x8, x0, x24
   13510:	cmp	x22, #0x0
   13514:	add	x9, x22, x8
   13518:	add	x10, x28, x8
   1351c:	csel	x22, xzr, x9, eq  // eq = none
   13520:	cmp	x28, #0x0
   13524:	add	x23, x23, x8
   13528:	add	x19, x19, x8
   1352c:	add	x8, x27, x8
   13530:	csel	x28, xzr, x10, eq  // eq = none
   13534:	cmp	x27, #0x0
   13538:	csel	x27, xzr, x8, eq  // eq = none
   1353c:	b	134c4 <xre_compile_pattern@@Base+0x209c>
   13540:	ldur	x8, [x29, #-168]
   13544:	tbnz	w8, #19, 13db4 <xre_compile_pattern@@Base+0x298c>
   13548:	ldp	x24, x8, [x20]
   1354c:	sub	x9, x23, x24
   13550:	add	x9, x9, #0x1
   13554:	cmp	x9, x8
   13558:	b.ls	13e90 <xre_compile_pattern@@Base+0x2a68>  // b.plast
   1355c:	ldur	x21, [x29, #-160]
   13560:	mov	w26, #0x10000               	// #65536
   13564:	b	13580 <xre_compile_pattern@@Base+0x2158>
   13568:	ldr	x8, [x25]
   1356c:	sub	x9, x23, x0
   13570:	add	x9, x9, #0x1
   13574:	mov	x24, x0
   13578:	cmp	x9, x8
   1357c:	b.ls	13f78 <xre_compile_pattern@@Base+0x2b50>  // b.plast
   13580:	cmp	x8, #0x10, lsl #12
   13584:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13588:	lsl	x8, x8, #1
   1358c:	cmp	x8, #0x10, lsl #12
   13590:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13594:	mov	x0, x24
   13598:	str	x1, [x20, #8]
   1359c:	bl	4f30 <realloc@plt>
   135a0:	str	x0, [x20]
   135a4:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   135a8:	cmp	x24, x0
   135ac:	b.eq	13568 <xre_compile_pattern@@Base+0x2140>  // b.none
   135b0:	sub	x8, x0, x24
   135b4:	cmp	x22, #0x0
   135b8:	add	x9, x22, x8
   135bc:	add	x10, x28, x8
   135c0:	csel	x22, xzr, x9, eq  // eq = none
   135c4:	cmp	x28, #0x0
   135c8:	add	x23, x23, x8
   135cc:	add	x19, x19, x8
   135d0:	add	x8, x27, x8
   135d4:	csel	x28, xzr, x10, eq  // eq = none
   135d8:	cmp	x27, #0x0
   135dc:	csel	x27, xzr, x8, eq  // eq = none
   135e0:	b	13568 <xre_compile_pattern@@Base+0x2140>
   135e4:	ldur	x8, [x29, #-168]
   135e8:	tbnz	w8, #19, 13dbc <xre_compile_pattern@@Base+0x2994>
   135ec:	ldp	x24, x8, [x20]
   135f0:	sub	x9, x23, x24
   135f4:	add	x9, x9, #0x1
   135f8:	cmp	x9, x8
   135fc:	b.ls	13e9c <xre_compile_pattern@@Base+0x2a74>  // b.plast
   13600:	ldur	x21, [x29, #-160]
   13604:	mov	w26, #0x10000               	// #65536
   13608:	b	13624 <xre_compile_pattern@@Base+0x21fc>
   1360c:	ldr	x8, [x25]
   13610:	sub	x9, x23, x0
   13614:	add	x9, x9, #0x1
   13618:	mov	x24, x0
   1361c:	cmp	x9, x8
   13620:	b.ls	13f80 <xre_compile_pattern@@Base+0x2b58>  // b.plast
   13624:	cmp	x8, #0x10, lsl #12
   13628:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   1362c:	lsl	x8, x8, #1
   13630:	cmp	x8, #0x10, lsl #12
   13634:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13638:	mov	x0, x24
   1363c:	str	x1, [x20, #8]
   13640:	bl	4f30 <realloc@plt>
   13644:	str	x0, [x20]
   13648:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   1364c:	cmp	x24, x0
   13650:	b.eq	1360c <xre_compile_pattern@@Base+0x21e4>  // b.none
   13654:	sub	x8, x0, x24
   13658:	cmp	x22, #0x0
   1365c:	add	x9, x22, x8
   13660:	add	x10, x28, x8
   13664:	csel	x22, xzr, x9, eq  // eq = none
   13668:	cmp	x28, #0x0
   1366c:	add	x23, x23, x8
   13670:	add	x19, x19, x8
   13674:	add	x8, x27, x8
   13678:	csel	x28, xzr, x10, eq  // eq = none
   1367c:	cmp	x27, #0x0
   13680:	csel	x27, xzr, x8, eq  // eq = none
   13684:	b	1360c <xre_compile_pattern@@Base+0x21e4>
   13688:	ldur	x8, [x29, #-168]
   1368c:	tbnz	w8, #19, 13dc4 <xre_compile_pattern@@Base+0x299c>
   13690:	ldp	x24, x8, [x20]
   13694:	mov	x28, x23
   13698:	sub	x9, x23, x24
   1369c:	add	x9, x9, #0x1
   136a0:	cmp	x9, x8
   136a4:	b.ls	13ea8 <xre_compile_pattern@@Base+0x2a80>  // b.plast
   136a8:	ldur	x21, [x29, #-160]
   136ac:	mov	w26, #0x10000               	// #65536
   136b0:	b	136cc <xre_compile_pattern@@Base+0x22a4>
   136b4:	ldr	x8, [x25]
   136b8:	sub	x9, x23, x0
   136bc:	add	x9, x9, #0x1
   136c0:	mov	x24, x0
   136c4:	cmp	x9, x8
   136c8:	b.ls	13f88 <xre_compile_pattern@@Base+0x2b60>  // b.plast
   136cc:	cmp	x8, #0x10, lsl #12
   136d0:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   136d4:	lsl	x8, x8, #1
   136d8:	cmp	x8, #0x10, lsl #12
   136dc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   136e0:	mov	x0, x24
   136e4:	str	x1, [x20, #8]
   136e8:	bl	4f30 <realloc@plt>
   136ec:	str	x0, [x20]
   136f0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   136f4:	cmp	x24, x0
   136f8:	b.eq	136b4 <xre_compile_pattern@@Base+0x228c>  // b.none
   136fc:	sub	x8, x0, x24
   13700:	cmp	x22, #0x0
   13704:	add	x9, x22, x8
   13708:	add	x10, x28, x8
   1370c:	csel	x22, xzr, x9, eq  // eq = none
   13710:	cmp	x28, #0x0
   13714:	add	x23, x23, x8
   13718:	add	x19, x19, x8
   1371c:	add	x8, x27, x8
   13720:	csel	x28, xzr, x10, eq  // eq = none
   13724:	cmp	x27, #0x0
   13728:	csel	x27, xzr, x8, eq  // eq = none
   1372c:	b	136b4 <xre_compile_pattern@@Base+0x228c>
   13730:	ldur	x8, [x29, #-168]
   13734:	tbnz	w8, #19, 13dcc <xre_compile_pattern@@Base+0x29a4>
   13738:	ldp	x24, x8, [x20]
   1373c:	sub	x9, x23, x24
   13740:	add	x9, x9, #0x1
   13744:	cmp	x9, x8
   13748:	b.ls	13eb4 <xre_compile_pattern@@Base+0x2a8c>  // b.plast
   1374c:	ldur	x21, [x29, #-160]
   13750:	mov	w26, #0x10000               	// #65536
   13754:	b	13770 <xre_compile_pattern@@Base+0x2348>
   13758:	ldr	x8, [x25]
   1375c:	sub	x9, x23, x0
   13760:	add	x9, x9, #0x1
   13764:	mov	x24, x0
   13768:	cmp	x9, x8
   1376c:	b.ls	13f90 <xre_compile_pattern@@Base+0x2b68>  // b.plast
   13770:	cmp	x8, #0x10, lsl #12
   13774:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13778:	lsl	x8, x8, #1
   1377c:	cmp	x8, #0x10, lsl #12
   13780:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13784:	mov	x0, x24
   13788:	str	x1, [x20, #8]
   1378c:	bl	4f30 <realloc@plt>
   13790:	str	x0, [x20]
   13794:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13798:	cmp	x24, x0
   1379c:	b.eq	13758 <xre_compile_pattern@@Base+0x2330>  // b.none
   137a0:	sub	x8, x0, x24
   137a4:	cmp	x22, #0x0
   137a8:	add	x9, x22, x8
   137ac:	add	x10, x28, x8
   137b0:	csel	x22, xzr, x9, eq  // eq = none
   137b4:	cmp	x28, #0x0
   137b8:	add	x23, x23, x8
   137bc:	add	x19, x19, x8
   137c0:	add	x8, x27, x8
   137c4:	csel	x28, xzr, x10, eq  // eq = none
   137c8:	cmp	x27, #0x0
   137cc:	csel	x27, xzr, x8, eq  // eq = none
   137d0:	b	13758 <xre_compile_pattern@@Base+0x2330>
   137d4:	ldur	x8, [x29, #-168]
   137d8:	tbnz	w8, #19, 13dd4 <xre_compile_pattern@@Base+0x29ac>
   137dc:	ldp	x24, x8, [x20]
   137e0:	sub	x9, x23, x24
   137e4:	add	x9, x9, #0x1
   137e8:	cmp	x9, x8
   137ec:	b.ls	13ec0 <xre_compile_pattern@@Base+0x2a98>  // b.plast
   137f0:	ldur	x21, [x29, #-160]
   137f4:	mov	w26, #0x10000               	// #65536
   137f8:	b	13814 <xre_compile_pattern@@Base+0x23ec>
   137fc:	ldr	x8, [x25]
   13800:	sub	x9, x23, x0
   13804:	add	x9, x9, #0x1
   13808:	mov	x24, x0
   1380c:	cmp	x9, x8
   13810:	b.ls	13f98 <xre_compile_pattern@@Base+0x2b70>  // b.plast
   13814:	cmp	x8, #0x10, lsl #12
   13818:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   1381c:	lsl	x8, x8, #1
   13820:	cmp	x8, #0x10, lsl #12
   13824:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13828:	mov	x0, x24
   1382c:	str	x1, [x20, #8]
   13830:	bl	4f30 <realloc@plt>
   13834:	str	x0, [x20]
   13838:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   1383c:	cmp	x24, x0
   13840:	b.eq	137fc <xre_compile_pattern@@Base+0x23d4>  // b.none
   13844:	sub	x8, x0, x24
   13848:	cmp	x22, #0x0
   1384c:	add	x9, x22, x8
   13850:	add	x10, x28, x8
   13854:	csel	x22, xzr, x9, eq  // eq = none
   13858:	cmp	x28, #0x0
   1385c:	add	x23, x23, x8
   13860:	add	x19, x19, x8
   13864:	add	x8, x27, x8
   13868:	csel	x28, xzr, x10, eq  // eq = none
   1386c:	cmp	x27, #0x0
   13870:	csel	x27, xzr, x8, eq  // eq = none
   13874:	b	137fc <xre_compile_pattern@@Base+0x23d4>
   13878:	ldur	x8, [x29, #-168]
   1387c:	tbnz	w8, #19, 13ddc <xre_compile_pattern@@Base+0x29b4>
   13880:	ldp	x24, x8, [x20]
   13884:	mov	x28, x23
   13888:	sub	x9, x23, x24
   1388c:	add	x9, x9, #0x1
   13890:	cmp	x9, x8
   13894:	b.ls	13ecc <xre_compile_pattern@@Base+0x2aa4>  // b.plast
   13898:	ldur	x21, [x29, #-160]
   1389c:	mov	w26, #0x10000               	// #65536
   138a0:	b	138bc <xre_compile_pattern@@Base+0x2494>
   138a4:	ldr	x8, [x25]
   138a8:	sub	x9, x23, x0
   138ac:	add	x9, x9, #0x1
   138b0:	mov	x24, x0
   138b4:	cmp	x9, x8
   138b8:	b.ls	13fa0 <xre_compile_pattern@@Base+0x2b78>  // b.plast
   138bc:	cmp	x8, #0x10, lsl #12
   138c0:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   138c4:	lsl	x8, x8, #1
   138c8:	cmp	x8, #0x10, lsl #12
   138cc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   138d0:	mov	x0, x24
   138d4:	str	x1, [x20, #8]
   138d8:	bl	4f30 <realloc@plt>
   138dc:	str	x0, [x20]
   138e0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   138e4:	cmp	x24, x0
   138e8:	b.eq	138a4 <xre_compile_pattern@@Base+0x247c>  // b.none
   138ec:	sub	x8, x0, x24
   138f0:	cmp	x22, #0x0
   138f4:	add	x9, x22, x8
   138f8:	add	x10, x28, x8
   138fc:	csel	x22, xzr, x9, eq  // eq = none
   13900:	cmp	x28, #0x0
   13904:	add	x23, x23, x8
   13908:	add	x19, x19, x8
   1390c:	add	x8, x27, x8
   13910:	csel	x28, xzr, x10, eq  // eq = none
   13914:	cmp	x27, #0x0
   13918:	csel	x27, xzr, x8, eq  // eq = none
   1391c:	b	138a4 <xre_compile_pattern@@Base+0x247c>
   13920:	ldr	x8, [sp, #136]
   13924:	cmp	x8, #0x200
   13928:	b.eq	11b14 <xre_compile_pattern@@Base+0x6ec>  // b.none
   1392c:	mov	w21, #0x7b                  	// #123
   13930:	cbnz	x24, 139bc <xre_compile_pattern@@Base+0x2594>
   13934:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13938:	ldr	x8, [sp, #112]
   1393c:	mov	w21, #0x7c                  	// #124
   13940:	cbnz	x8, 139b8 <xre_compile_pattern@@Base+0x2590>
   13944:	b	11b88 <xre_compile_pattern@@Base+0x760>
   13948:	mov	w8, #0x2c                  	// #44
   1394c:	mov	x26, x9
   13950:	b	13964 <xre_compile_pattern@@Base+0x253c>
   13954:	add	x26, x26, #0x1
   13958:	b	13960 <xre_compile_pattern@@Base+0x2538>
   1395c:	ldur	x26, [x29, #-160]
   13960:	tbz	w15, #31, 13968 <xre_compile_pattern@@Base+0x2540>
   13964:	mov	w15, #0x7fff                	// #32767
   13968:	tbnz	w21, #31, 139ac <xre_compile_pattern@@Base+0x2584>
   1396c:	cmp	w21, w15
   13970:	b.gt	139ac <xre_compile_pattern@@Base+0x2584>
   13974:	tbnz	w12, #12, 13998 <xre_compile_pattern@@Base+0x2570>
   13978:	ldur	x9, [x29, #-160]
   1397c:	cmp	x26, x9
   13980:	b.eq	139ac <xre_compile_pattern@@Base+0x2584>  // b.none
   13984:	cmp	w8, #0x5c
   13988:	b.ne	139ac <xre_compile_pattern@@Base+0x2584>  // b.any
   1398c:	ldrb	w8, [x26], #1
   13990:	cbz	x24, 13998 <xre_compile_pattern@@Base+0x2570>
   13994:	ldrb	w8, [x24, x8]
   13998:	cmp	w8, #0x7d
   1399c:	b.ne	139ac <xre_compile_pattern@@Base+0x2584>  // b.any
   139a0:	cbz	x28, 13bac <xre_compile_pattern@@Base+0x2784>
   139a4:	mov	x0, x28
   139a8:	b	13bc0 <xre_compile_pattern@@Base+0x2798>
   139ac:	tbz	w12, #21, 140fc <xre_compile_pattern@@Base+0x2cd4>
   139b0:	mov	w21, #0x7b                  	// #123
   139b4:	tbnz	w12, #12, 139c0 <xre_compile_pattern@@Base+0x2598>
   139b8:	cbz	x24, 139c0 <xre_compile_pattern@@Base+0x2598>
   139bc:	ldrb	w21, [x24, w21, uxtw]
   139c0:	ldur	x10, [x29, #-168]
   139c4:	mov	w26, #0x10000               	// #65536
   139c8:	cbz	x27, 13a00 <xre_compile_pattern@@Base+0x25d8>
   139cc:	ldrb	w8, [x27]
   139d0:	cmp	x8, #0xff
   139d4:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   139d8:	add	x8, x27, x8
   139dc:	add	x8, x8, #0x1
   139e0:	cmp	x8, x23
   139e4:	b.ne	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.any
   139e8:	ldur	x8, [x29, #-144]
   139ec:	ldrb	w8, [x8]
   139f0:	cmp	w8, #0x2a
   139f4:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   139f8:	cmp	w8, #0x5e
   139fc:	b.ne	13b50 <xre_compile_pattern@@Base+0x2728>  // b.any
   13a00:	ldp	x24, x8, [x20]
   13a04:	mov	x28, x23
   13a08:	sub	x9, x23, x24
   13a0c:	add	x9, x9, #0x2
   13a10:	cmp	x9, x8
   13a14:	b.hi	13a7c <xre_compile_pattern@@Base+0x2654>  // b.pmore
   13a18:	mov	w8, #0x2                   	// #2
   13a1c:	add	x27, x23, #0x1
   13a20:	strh	w8, [x23], #2
   13a24:	ldp	x24, x8, [x20]
   13a28:	sub	x9, x23, x24
   13a2c:	add	x9, x9, #0x1
   13a30:	cmp	x9, x8
   13a34:	b.hi	13aec <xre_compile_pattern@@Base+0x26c4>  // b.pmore
   13a38:	strb	w21, [x23], #1
   13a3c:	ldrb	w8, [x27]
   13a40:	add	w8, w8, #0x1
   13a44:	strb	w8, [x27]
   13a48:	ldur	x24, [x29, #-152]
   13a4c:	ldur	x21, [x29, #-160]
   13a50:	ldur	x8, [x29, #-144]
   13a54:	cmp	x8, x21
   13a58:	mov	x26, x8
   13a5c:	b.ne	11634 <xre_compile_pattern@@Base+0x20c>  // b.any
   13a60:	b	13fdc <xre_compile_pattern@@Base+0x2bb4>
   13a64:	ldr	x8, [x25]
   13a68:	sub	x9, x23, x0
   13a6c:	add	x9, x9, #0x2
   13a70:	mov	x24, x0
   13a74:	cmp	x9, x8
   13a78:	b.ls	13a18 <xre_compile_pattern@@Base+0x25f0>  // b.plast
   13a7c:	cmp	x8, #0x10, lsl #12
   13a80:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13a84:	lsl	x8, x8, #1
   13a88:	cmp	x8, #0x10, lsl #12
   13a8c:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13a90:	mov	x0, x24
   13a94:	str	x1, [x20, #8]
   13a98:	bl	4f30 <realloc@plt>
   13a9c:	str	x0, [x20]
   13aa0:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13aa4:	cmp	x24, x0
   13aa8:	b.eq	13a64 <xre_compile_pattern@@Base+0x263c>  // b.none
   13aac:	sub	x8, x0, x24
   13ab0:	cmp	x22, #0x0
   13ab4:	add	x9, x22, x8
   13ab8:	add	x23, x23, x8
   13abc:	add	x19, x19, x8
   13ac0:	add	x8, x28, x8
   13ac4:	csel	x22, xzr, x9, eq  // eq = none
   13ac8:	cmp	x28, #0x0
   13acc:	csel	x28, xzr, x8, eq  // eq = none
   13ad0:	b	13a64 <xre_compile_pattern@@Base+0x263c>
   13ad4:	ldr	x8, [x25]
   13ad8:	sub	x9, x23, x0
   13adc:	add	x9, x9, #0x1
   13ae0:	mov	x24, x0
   13ae4:	cmp	x9, x8
   13ae8:	b.ls	13a38 <xre_compile_pattern@@Base+0x2610>  // b.plast
   13aec:	cmp	x8, #0x10, lsl #12
   13af0:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13af4:	lsl	x8, x8, #1
   13af8:	cmp	x8, #0x10, lsl #12
   13afc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13b00:	mov	x0, x24
   13b04:	str	x1, [x20, #8]
   13b08:	bl	4f30 <realloc@plt>
   13b0c:	str	x0, [x20]
   13b10:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13b14:	cmp	x24, x0
   13b18:	b.eq	13ad4 <xre_compile_pattern@@Base+0x26ac>  // b.none
   13b1c:	sub	x8, x0, x24
   13b20:	cmp	x22, #0x0
   13b24:	add	x9, x22, x8
   13b28:	add	x10, x28, x8
   13b2c:	csel	x22, xzr, x9, eq  // eq = none
   13b30:	cmp	x28, #0x0
   13b34:	add	x23, x23, x8
   13b38:	add	x19, x19, x8
   13b3c:	add	x8, x27, x8
   13b40:	csel	x28, xzr, x10, eq  // eq = none
   13b44:	cmp	x27, #0x0
   13b48:	csel	x27, xzr, x8, eq  // eq = none
   13b4c:	b	13ad4 <xre_compile_pattern@@Base+0x26ac>
   13b50:	tbnz	w10, #1, 13b68 <xre_compile_pattern@@Base+0x2740>
   13b54:	cmp	w8, #0x2b
   13b58:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   13b5c:	cmp	w8, #0x3f
   13b60:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   13b64:	b	13b88 <xre_compile_pattern@@Base+0x2760>
   13b68:	cmp	w8, #0x5c
   13b6c:	b.ne	13b88 <xre_compile_pattern@@Base+0x2760>  // b.any
   13b70:	ldur	x9, [x29, #-144]
   13b74:	ldrb	w9, [x9, #1]
   13b78:	cmp	w9, #0x2b
   13b7c:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   13b80:	cmp	w9, #0x3f
   13b84:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   13b88:	tbz	w10, #9, 13a24 <xre_compile_pattern@@Base+0x25fc>
   13b8c:	tbnz	w10, #12, 13ba0 <xre_compile_pattern@@Base+0x2778>
   13b90:	cmp	w8, #0x5c
   13b94:	b.ne	13a24 <xre_compile_pattern@@Base+0x25fc>  // b.any
   13b98:	ldur	x8, [x29, #-144]
   13b9c:	ldrb	w8, [x8, #1]
   13ba0:	cmp	w8, #0x7b
   13ba4:	b.eq	13a00 <xre_compile_pattern@@Base+0x25d8>  // b.none
   13ba8:	b	13a24 <xre_compile_pattern@@Base+0x25fc>
   13bac:	ldr	x8, [sp, #104]
   13bb0:	cmp	x8, #0x20
   13bb4:	b.eq	140ec <xre_compile_pattern@@Base+0x2cc4>  // b.none
   13bb8:	mov	x0, x23
   13bbc:	tbz	w12, #4, 139b0 <xre_compile_pattern@@Base+0x2588>
   13bc0:	cmp	w15, #0x8, lsl #12
   13bc4:	b.ge	14150 <xre_compile_pattern@@Base+0x2d28>  // b.tcont
   13bc8:	str	x26, [sp, #80]
   13bcc:	cbz	w15, 13de4 <xre_compile_pattern@@Base+0x29bc>
   13bd0:	ldp	x24, x8, [x20]
   13bd4:	cmp	w15, #0x1
   13bd8:	mov	w9, #0xa                   	// #10
   13bdc:	mov	w10, #0x14                  	// #20
   13be0:	csel	x26, x10, x9, gt
   13be4:	add	x9, x26, x23
   13be8:	sub	x9, x9, x24
   13bec:	mov	x28, x0
   13bf0:	cmp	x9, x8
   13bf4:	b.hi	13d38 <xre_compile_pattern@@Base+0x2910>  // b.pmore
   13bf8:	subs	w8, w15, #0x1
   13bfc:	mov	w10, #0x5                   	// #5
   13c00:	add	x9, x23, #0x5
   13c04:	csel	w10, w10, wzr, gt
   13c08:	add	w10, w9, w10
   13c0c:	sub	w10, w10, w28
   13c10:	cmp	x23, x28
   13c14:	sub	w10, w10, #0x3
   13c18:	b.eq	13c30 <xre_compile_pattern@@Base+0x2808>  // b.none
   13c1c:	mov	x11, x23
   13c20:	ldrb	w12, [x11, #-1]!
   13c24:	cmp	x28, x11
   13c28:	strb	w12, [x11, #5]
   13c2c:	b.ne	13c20 <xre_compile_pattern@@Base+0x27f8>  // b.any
   13c30:	ldur	x24, [x29, #-152]
   13c34:	ldr	x14, [sp, #80]
   13c38:	mov	w11, #0x15                  	// #21
   13c3c:	strb	w11, [x28]
   13c40:	strb	w10, [x28, #1]
   13c44:	lsr	w11, w10, #8
   13c48:	lsr	w10, w21, #8
   13c4c:	cmp	x9, x28
   13c50:	strb	w21, [x28, #3]
   13c54:	strb	w11, [x28, #2]
   13c58:	strb	w10, [x28, #4]
   13c5c:	b.eq	13c7c <xre_compile_pattern@@Base+0x2854>  // b.none
   13c60:	sub	x9, x28, #0x5
   13c64:	mov	x11, x23
   13c68:	ldrb	w12, [x11, #4]
   13c6c:	strb	w12, [x11, #9]
   13c70:	sub	x11, x11, #0x1
   13c74:	cmp	x9, x11
   13c78:	b.ne	13c68 <xre_compile_pattern@@Base+0x2840>  // b.any
   13c7c:	mov	w9, #0x517                 	// #1303
   13c80:	strh	w9, [x28]
   13c84:	cmp	w15, #0x2
   13c88:	add	x9, x23, #0xa
   13c8c:	strb	wzr, [x28, #2]
   13c90:	strb	w21, [x28, #3]
   13c94:	strb	w10, [x28, #4]
   13c98:	b.lt	13ed8 <xre_compile_pattern@@Base+0x2ab0>  // b.tstop
   13c9c:	ldur	x21, [x29, #-160]
   13ca0:	sub	w10, w28, w9
   13ca4:	mov	w9, #0x16                  	// #22
   13ca8:	add	x11, x23, #0xf
   13cac:	add	w12, w10, #0x2
   13cb0:	strb	w9, [x23, #10]
   13cb4:	lsr	w9, w8, #8
   13cb8:	subs	x10, x11, x28
   13cbc:	lsr	w11, w12, #8
   13cc0:	strb	w8, [x23, #13]
   13cc4:	strb	w12, [x23, #11]
   13cc8:	strb	w11, [x23, #12]
   13ccc:	strb	w9, [x23, #14]
   13cd0:	b.eq	13cf0 <xre_compile_pattern@@Base+0x28c8>  // b.none
   13cd4:	sub	x11, x28, #0xf
   13cd8:	mov	x12, x23
   13cdc:	ldrb	w13, [x12, #14]
   13ce0:	strb	w13, [x12, #19]
   13ce4:	sub	x12, x12, #0x1
   13ce8:	cmp	x11, x12
   13cec:	b.ne	13cdc <xre_compile_pattern@@Base+0x28b4>  // b.any
   13cf0:	mov	w11, #0x17                  	// #23
   13cf4:	strb	w10, [x28, #1]
   13cf8:	lsr	w10, w10, #8
   13cfc:	mov	x27, xzr
   13d00:	strb	w11, [x28]
   13d04:	strb	w8, [x28, #3]
   13d08:	strb	w9, [x28, #4]
   13d0c:	strb	w10, [x28, #2]
   13d10:	add	x23, x23, #0x14
   13d14:	stur	x14, [x29, #-144]
   13d18:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   13d1c:	ldr	x8, [x25]
   13d20:	add	x9, x26, x23
   13d24:	sub	x9, x9, x0
   13d28:	mov	w15, w27
   13d2c:	cmp	x9, x8
   13d30:	mov	x24, x0
   13d34:	b.ls	13bf8 <xre_compile_pattern@@Base+0x27d0>  // b.plast
   13d38:	cmp	x8, #0x10, lsl #12
   13d3c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13d40:	lsl	x8, x8, #1
   13d44:	cmp	x8, #0x10, lsl #12
   13d48:	mov	w9, #0x10000               	// #65536
   13d4c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   13d50:	mov	x0, x24
   13d54:	mov	w27, w15
   13d58:	str	x1, [x20, #8]
   13d5c:	bl	4f30 <realloc@plt>
   13d60:	str	x0, [x20]
   13d64:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13d68:	cmp	x24, x0
   13d6c:	b.eq	13d1c <xre_compile_pattern@@Base+0x28f4>  // b.none
   13d70:	sub	x8, x0, x24
   13d74:	cmp	x22, #0x0
   13d78:	add	x9, x22, x8
   13d7c:	add	x23, x23, x8
   13d80:	add	x19, x19, x8
   13d84:	add	x8, x28, x8
   13d88:	csel	x22, xzr, x9, eq  // eq = none
   13d8c:	cmp	x28, #0x0
   13d90:	csel	x28, xzr, x8, eq  // eq = none
   13d94:	b	13d1c <xre_compile_pattern@@Base+0x28f4>
   13d98:	mov	w21, #0x27                  	// #39
   13d9c:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13da0:	mov	w21, #0x28                  	// #40
   13da4:	cbnz	x24, 139bc <xre_compile_pattern@@Base+0x2594>
   13da8:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13dac:	mov	w21, #0x3c                  	// #60
   13db0:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13db4:	mov	w21, #0x3e                  	// #62
   13db8:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13dbc:	mov	w21, #0x42                  	// #66
   13dc0:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13dc4:	mov	w21, #0x57                  	// #87
   13dc8:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13dcc:	mov	w21, #0x60                  	// #96
   13dd0:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13dd4:	mov	w21, #0x62                  	// #98
   13dd8:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13ddc:	mov	w21, #0x77                  	// #119
   13de0:	b	139c0 <xre_compile_pattern@@Base+0x2598>
   13de4:	ldp	x24, x8, [x20]
   13de8:	mov	x28, x0
   13dec:	sub	x9, x23, x24
   13df0:	add	x9, x9, #0x3
   13df4:	cmp	x9, x8
   13df8:	b.ls	13ee8 <xre_compile_pattern@@Base+0x2ac0>  // b.plast
   13dfc:	ldur	x21, [x29, #-160]
   13e00:	mov	w26, #0x10000               	// #65536
   13e04:	b	13e20 <xre_compile_pattern@@Base+0x29f8>
   13e08:	ldr	x8, [x25]
   13e0c:	sub	x9, x23, x0
   13e10:	add	x9, x9, #0x3
   13e14:	mov	x24, x0
   13e18:	cmp	x9, x8
   13e1c:	b.ls	13eec <xre_compile_pattern@@Base+0x2ac4>  // b.plast
   13e20:	cmp	x8, #0x10, lsl #12
   13e24:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   13e28:	lsl	x8, x8, #1
   13e2c:	cmp	x8, #0x10, lsl #12
   13e30:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13e34:	mov	x0, x24
   13e38:	str	x1, [x20, #8]
   13e3c:	bl	4f30 <realloc@plt>
   13e40:	str	x0, [x20]
   13e44:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   13e48:	cmp	x24, x0
   13e4c:	b.eq	13e08 <xre_compile_pattern@@Base+0x29e0>  // b.none
   13e50:	sub	x8, x0, x24
   13e54:	cmp	x22, #0x0
   13e58:	add	x9, x22, x8
   13e5c:	add	x23, x23, x8
   13e60:	add	x19, x19, x8
   13e64:	add	x8, x28, x8
   13e68:	csel	x22, xzr, x9, eq  // eq = none
   13e6c:	cmp	x28, #0x0
   13e70:	csel	x28, xzr, x8, eq  // eq = none
   13e74:	b	13e08 <xre_compile_pattern@@Base+0x29e0>
   13e78:	ldur	x21, [x29, #-160]
   13e7c:	mov	w8, #0xc                   	// #12
   13e80:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13e84:	ldur	x21, [x29, #-160]
   13e88:	mov	w8, #0x1a                  	// #26
   13e8c:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13e90:	ldur	x21, [x29, #-160]
   13e94:	mov	w8, #0x1b                  	// #27
   13e98:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13e9c:	ldur	x21, [x29, #-160]
   13ea0:	mov	w8, #0x1d                  	// #29
   13ea4:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13ea8:	ldur	x21, [x29, #-160]
   13eac:	mov	w8, #0x19                  	// #25
   13eb0:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13eb4:	ldur	x21, [x29, #-160]
   13eb8:	mov	w8, #0xb                   	// #11
   13ebc:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13ec0:	ldur	x21, [x29, #-160]
   13ec4:	mov	w8, #0x1c                  	// #28
   13ec8:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13ecc:	ldur	x21, [x29, #-160]
   13ed0:	mov	w8, #0x18                  	// #24
   13ed4:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13ed8:	mov	x27, xzr
   13edc:	stur	x14, [x29, #-144]
   13ee0:	mov	x23, x9
   13ee4:	b	13a4c <xre_compile_pattern@@Base+0x2624>
   13ee8:	ldur	x21, [x29, #-160]
   13eec:	add	x8, x23, #0x3
   13ef0:	sub	w9, w8, w28
   13ef4:	cmp	x23, x28
   13ef8:	sub	w9, w9, #0x3
   13efc:	b.eq	13f10 <xre_compile_pattern@@Base+0x2ae8>  // b.none
   13f00:	ldrb	w10, [x23, #-1]!
   13f04:	cmp	x28, x23
   13f08:	strb	w10, [x23, #3]
   13f0c:	b.ne	13f00 <xre_compile_pattern@@Base+0x2ad8>  // b.any
   13f10:	strb	w9, [x28, #1]
   13f14:	lsr	w9, w9, #8
   13f18:	strb	w9, [x28, #2]
   13f1c:	ldr	x9, [sp, #80]
   13f20:	mov	w10, #0xd                   	// #13
   13f24:	mov	x27, xzr
   13f28:	strb	w10, [x28]
   13f2c:	stur	x9, [x29, #-144]
   13f30:	b	13264 <xre_compile_pattern@@Base+0x1e3c>
   13f34:	ldrb	w8, [x23]
   13f38:	cbz	w8, 13f5c <xre_compile_pattern@@Base+0x2b34>
   13f3c:	and	x9, x8, #0xff
   13f40:	ldrb	w9, [x23, x9]
   13f44:	cbnz	w9, 13f5c <xre_compile_pattern@@Base+0x2b34>
   13f48:	sub	w8, w8, #0x1
   13f4c:	tst	w8, #0xff
   13f50:	strb	w8, [x23]
   13f54:	b.ne	13f3c <xre_compile_pattern@@Base+0x2b14>  // b.any
   13f58:	mov	w8, wzr
   13f5c:	ldp	x21, x24, [x29, #-160]
   13f60:	add	x23, x6, w8, uxtb
   13f64:	b	13a50 <xre_compile_pattern@@Base+0x2628>
   13f68:	mov	w8, #0xc                   	// #12
   13f6c:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f70:	mov	w8, #0x1a                  	// #26
   13f74:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f78:	mov	w8, #0x1b                  	// #27
   13f7c:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f80:	mov	w8, #0x1d                  	// #29
   13f84:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f88:	mov	w8, #0x19                  	// #25
   13f8c:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f90:	mov	w8, #0xb                   	// #11
   13f94:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13f98:	mov	w8, #0x1c                  	// #28
   13f9c:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13fa0:	mov	w8, #0x18                  	// #24
   13fa4:	b	1207c <xre_compile_pattern@@Base+0xc54>
   13fa8:	mov	w0, #0x20                  	// #32
   13fac:	bl	5160 <malloc@plt>
   13fb0:	mov	x23, x0
   13fb4:	str	x0, [x20]
   13fb8:	cbnz	x0, 1159c <xre_compile_pattern@@Base+0x174>
   13fbc:	mov	x0, x22
   13fc0:	bl	4f00 <free@plt>
   13fc4:	mov	w0, #0xc                   	// #12
   13fc8:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   13fcc:	ldur	x0, [x29, #-176]
   13fd0:	bl	4f00 <free@plt>
   13fd4:	mov	w0, #0x5                   	// #5
   13fd8:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   13fdc:	cbz	x22, 13ffc <xre_compile_pattern@@Base+0x2bd4>
   13fe0:	sub	w8, w23, w22
   13fe4:	sub	w8, w8, #0x3
   13fe8:	mov	w9, #0xe                   	// #14
   13fec:	strb	w8, [x22, #1]
   13ff0:	lsr	w8, w8, #8
   13ff4:	strb	w9, [x22]
   13ff8:	strb	w8, [x22, #2]
   13ffc:	ldr	x8, [sp, #168]
   14000:	ldp	x22, x19, [x29, #-176]
   14004:	lsr	x8, x8, #32
   14008:	cbnz	x8, 140dc <xre_compile_pattern@@Base+0x2cb4>
   1400c:	tbz	w19, #18, 14080 <xre_compile_pattern@@Base+0x2c58>
   14010:	ldp	x21, x8, [x20]
   14014:	sub	x9, x23, x21
   14018:	add	x9, x9, #0x1
   1401c:	cmp	x9, x8
   14020:	b.ls	14078 <xre_compile_pattern@@Base+0x2c50>  // b.plast
   14024:	mov	w19, #0x10000               	// #65536
   14028:	cmp	x8, #0x10, lsl #12
   1402c:	b.eq	140a4 <xre_compile_pattern@@Base+0x2c7c>  // b.none
   14030:	lsl	x8, x8, #1
   14034:	cmp	x8, #0x10, lsl #12
   14038:	csel	x1, x8, x19, cc  // cc = lo, ul, last
   1403c:	mov	x0, x21
   14040:	str	x1, [x20, #8]
   14044:	bl	4f30 <realloc@plt>
   14048:	str	x0, [x20]
   1404c:	cbz	x0, 1409c <xre_compile_pattern@@Base+0x2c74>
   14050:	sub	x8, x0, x21
   14054:	cmp	x21, x0
   14058:	add	x9, x23, x8
   1405c:	ldr	x8, [x25]
   14060:	csel	x23, x23, x9, eq  // eq = none
   14064:	sub	x9, x23, x0
   14068:	add	x9, x9, #0x1
   1406c:	cmp	x9, x8
   14070:	mov	x21, x0
   14074:	b.hi	14028 <xre_compile_pattern@@Base+0x2c00>  // b.pmore
   14078:	mov	w8, #0x1                   	// #1
   1407c:	strb	w8, [x23], #1
   14080:	mov	x0, x22
   14084:	bl	4f00 <free@plt>
   14088:	ldr	x8, [x20]
   1408c:	mov	w0, wzr
   14090:	sub	x8, x23, x8
   14094:	str	x8, [x20, #16]
   14098:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   1409c:	mov	w0, #0xc                   	// #12
   140a0:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   140a4:	mov	w0, #0xf                   	// #15
   140a8:	ldp	x20, x19, [sp, #464]
   140ac:	ldp	x22, x21, [sp, #448]
   140b0:	ldp	x24, x23, [sp, #432]
   140b4:	ldp	x26, x25, [sp, #416]
   140b8:	ldp	x28, x27, [sp, #400]
   140bc:	ldp	x29, x30, [sp, #384]
   140c0:	ldp	d9, d8, [sp, #368]
   140c4:	add	sp, sp, #0x1e0
   140c8:	ret
   140cc:	ldur	x0, [x29, #-176]
   140d0:	bl	4f00 <free@plt>
   140d4:	mov	w0, #0x7                   	// #7
   140d8:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   140dc:	mov	x0, x22
   140e0:	bl	4f00 <free@plt>
   140e4:	mov	w0, #0x8                   	// #8
   140e8:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   140ec:	ldur	x0, [x29, #-176]
   140f0:	bl	4f00 <free@plt>
   140f4:	mov	w0, #0xd                   	// #13
   140f8:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   140fc:	ldur	x0, [x29, #-176]
   14100:	bl	4f00 <free@plt>
   14104:	ldur	x8, [x29, #-160]
   14108:	cmp	x26, x8
   1410c:	mov	w8, #0x9                   	// #9
   14110:	cinc	w0, w8, ne  // ne = any
   14114:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14118:	ldur	x0, [x29, #-176]
   1411c:	bl	4f00 <free@plt>
   14120:	mov	w0, #0xb                   	// #11
   14124:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14128:	mov	w0, #0xe                   	// #14
   1412c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14130:	ldur	x0, [x29, #-176]
   14134:	bl	4f00 <free@plt>
   14138:	mov	w0, #0x6                   	// #6
   1413c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14140:	ldur	x0, [x29, #-176]
   14144:	bl	4f00 <free@plt>
   14148:	mov	w0, #0x10                  	// #16
   1414c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14150:	ldur	x0, [x29, #-176]
   14154:	bl	4f00 <free@plt>
   14158:	mov	w0, #0xa                   	// #10
   1415c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14160:	ldur	x0, [x29, #-176]
   14164:	bl	4f00 <free@plt>
   14168:	mov	w0, #0x3                   	// #3
   1416c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>
   14170:	ldur	x0, [x29, #-176]
   14174:	bl	4f00 <free@plt>
   14178:	mov	w0, #0x4                   	// #4
   1417c:	b	140a8 <xre_compile_pattern@@Base+0x2c80>

0000000000014180 <xre_comp@@Base>:
   14180:	stp	x29, x30, [sp, #-32]!
   14184:	stp	x20, x19, [sp, #16]
   14188:	adrp	x20, 2b000 <xexit@@Base+0x14b84>
   1418c:	ldr	x8, [x20, #1440]
   14190:	mov	x29, sp
   14194:	cbz	x0, 141f4 <xre_comp@@Base+0x74>
   14198:	mov	x19, x0
   1419c:	cbz	x8, 14210 <xre_comp@@Base+0x90>
   141a0:	adrp	x20, 2b000 <xexit@@Base+0x14b84>
   141a4:	add	x20, x20, #0x5a0
   141a8:	ldrb	w8, [x20, #56]
   141ac:	mov	x0, x19
   141b0:	orr	w8, w8, #0x80
   141b4:	strb	w8, [x20, #56]
   141b8:	bl	4e50 <strlen@plt>
   141bc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   141c0:	ldr	x8, [x8, #3800]
   141c4:	mov	x1, x0
   141c8:	mov	x0, x19
   141cc:	mov	x3, x20
   141d0:	ldr	x2, [x8]
   141d4:	bl	1147c <xre_compile_pattern@@Base+0x54>
   141d8:	cbz	w0, 14254 <xre_comp@@Base+0xd4>
   141dc:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   141e0:	add	x8, x8, #0x9d0
   141e4:	ldr	x0, [x8, w0, sxtw #3]
   141e8:	ldp	x20, x19, [sp, #16]
   141ec:	ldp	x29, x30, [sp], #32
   141f0:	ret
   141f4:	adrp	x9, 17000 <xexit@@Base+0xb84>
   141f8:	add	x9, x9, #0x140
   141fc:	cmp	x8, #0x0
   14200:	csel	x0, xzr, x9, ne  // ne = any
   14204:	ldp	x20, x19, [sp, #16]
   14208:	ldp	x29, x30, [sp], #32
   1420c:	ret
   14210:	mov	w0, #0xc8                  	// #200
   14214:	bl	5160 <malloc@plt>
   14218:	str	x0, [x20, #1440]
   1421c:	cbz	x0, 14240 <xre_comp@@Base+0xc0>
   14220:	adrp	x20, 2b000 <xexit@@Base+0x14b84>
   14224:	add	x20, x20, #0x5a8
   14228:	mov	w8, #0xc8                  	// #200
   1422c:	mov	w0, #0x100                 	// #256
   14230:	str	x8, [x20]
   14234:	bl	5160 <malloc@plt>
   14238:	str	x0, [x20, #24]
   1423c:	cbnz	x0, 141a0 <xre_comp@@Base+0x20>
   14240:	adrp	x0, 17000 <xexit@@Base+0xb84>
   14244:	add	x0, x0, #0x286
   14248:	ldp	x20, x19, [sp, #16]
   1424c:	ldp	x29, x30, [sp], #32
   14250:	ret
   14254:	mov	x0, xzr
   14258:	ldp	x20, x19, [sp, #16]
   1425c:	ldp	x29, x30, [sp], #32
   14260:	ret

0000000000014264 <xre_exec@@Base>:
   14264:	sub	sp, sp, #0x30
   14268:	stp	x29, x30, [sp, #16]
   1426c:	str	x19, [sp, #32]
   14270:	add	x29, sp, #0x10
   14274:	mov	x19, x0
   14278:	bl	4e50 <strlen@plt>
   1427c:	mov	x4, x0
   14280:	adrp	x0, 2b000 <xexit@@Base+0x14b84>
   14284:	add	x0, x0, #0x5a0
   14288:	mov	x1, xzr
   1428c:	mov	w2, wzr
   14290:	mov	x3, x19
   14294:	mov	w5, wzr
   14298:	mov	w6, w4
   1429c:	mov	x7, xzr
   142a0:	str	w4, [sp]
   142a4:	bl	5260 <xre_search_2@plt>
   142a8:	ldr	x19, [sp, #32]
   142ac:	ldp	x29, x30, [sp, #16]
   142b0:	mvn	w8, w0
   142b4:	lsr	w0, w8, #31
   142b8:	add	sp, sp, #0x30
   142bc:	ret

00000000000142c0 <xregcomp@@Base>:
   142c0:	stp	x29, x30, [sp, #-80]!
   142c4:	stp	x24, x23, [sp, #32]
   142c8:	mov	w24, #0xb2be                	// #45758
   142cc:	movk	w24, #0x3, lsl #16
   142d0:	mov	w8, #0x2c6                 	// #710
   142d4:	str	x25, [sp, #16]
   142d8:	stp	x22, x21, [sp, #48]
   142dc:	stp	x20, x19, [sp, #64]
   142e0:	mov	x19, x0
   142e4:	tst	w2, #0x1
   142e8:	movk	w8, #0x1, lsl #16
   142ec:	stp	xzr, xzr, [x0]
   142f0:	add	x9, x24, #0x3e
   142f4:	str	xzr, [x0, #16]
   142f8:	mov	w0, #0x100                 	// #256
   142fc:	mov	x29, sp
   14300:	mov	w22, w2
   14304:	mov	x20, x1
   14308:	csel	x21, x8, x9, eq  // eq = none
   1430c:	bl	5160 <malloc@plt>
   14310:	str	x0, [x19, #32]
   14314:	tbnz	w22, #1, 1432c <xregcomp@@Base+0x6c>
   14318:	str	xzr, [x19, #40]
   1431c:	tbnz	w22, #2, 14380 <xregcomp@@Base+0xc0>
   14320:	ldrb	w8, [x19, #56]
   14324:	and	w8, w8, #0x7f
   14328:	b	14390 <xregcomp@@Base+0xd0>
   1432c:	mov	w0, #0x100                 	// #256
   14330:	bl	5160 <malloc@plt>
   14334:	str	x0, [x19, #40]
   14338:	cbz	x0, 14408 <xregcomp@@Base+0x148>
   1433c:	bl	5030 <__ctype_b_loc@plt>
   14340:	mov	x23, x0
   14344:	mov	x25, xzr
   14348:	b	1436c <xregcomp@@Base+0xac>
   1434c:	bl	50c0 <__ctype_tolower_loc@plt>
   14350:	ldr	x8, [x0]
   14354:	ldr	w8, [x8, x25, lsl #2]
   14358:	ldr	x9, [x19, #40]
   1435c:	strb	w8, [x9, x25]
   14360:	add	x25, x25, #0x1
   14364:	cmp	x25, #0x100
   14368:	b.eq	1431c <xregcomp@@Base+0x5c>  // b.none
   1436c:	ldr	x8, [x23]
   14370:	ldrh	w8, [x8, x25, lsl #1]
   14374:	tbnz	w8, #8, 1434c <xregcomp@@Base+0x8c>
   14378:	mov	w8, w25
   1437c:	b	14358 <xregcomp@@Base+0x98>
   14380:	ldrb	w8, [x19, #56]
   14384:	and	x9, x21, x24
   14388:	orr	x21, x9, #0x100
   1438c:	orr	w8, w8, #0xffffff80
   14390:	lsl	w9, w22, #1
   14394:	strb	w8, [x19, #56]
   14398:	and	w9, w9, #0x10
   1439c:	and	w8, w8, #0xffffffef
   143a0:	orr	w8, w8, w9
   143a4:	mov	x0, x20
   143a8:	strb	w8, [x19, #56]
   143ac:	bl	4e50 <strlen@plt>
   143b0:	mov	x1, x0
   143b4:	mov	x0, x20
   143b8:	mov	x2, x21
   143bc:	mov	x3, x19
   143c0:	bl	1147c <xre_compile_pattern@@Base+0x54>
   143c4:	cmp	w0, #0x10
   143c8:	mov	w8, #0x8                   	// #8
   143cc:	csel	w0, w8, w0, eq  // eq = none
   143d0:	cbnz	w0, 1440c <xregcomp@@Base+0x14c>
   143d4:	ldr	x8, [x19, #32]
   143d8:	cbz	x8, 14400 <xregcomp@@Base+0x140>
   143dc:	mov	x0, x19
   143e0:	bl	e870 <xre_compile_fastmap@@Base+0x4>
   143e4:	cmn	w0, #0x2
   143e8:	b.ne	14400 <xregcomp@@Base+0x140>  // b.any
   143ec:	ldr	x0, [x19, #32]
   143f0:	bl	4f00 <free@plt>
   143f4:	mov	w0, wzr
   143f8:	str	xzr, [x19, #32]
   143fc:	b	1440c <xregcomp@@Base+0x14c>
   14400:	mov	w0, wzr
   14404:	b	1440c <xregcomp@@Base+0x14c>
   14408:	mov	w0, #0xc                   	// #12
   1440c:	ldp	x20, x19, [sp, #64]
   14410:	ldp	x22, x21, [sp, #48]
   14414:	ldp	x24, x23, [sp, #32]
   14418:	ldr	x25, [sp, #16]
   1441c:	ldp	x29, x30, [sp], #80
   14420:	ret

0000000000014424 <xregexec@@Base>:
   14424:	sub	sp, sp, #0xb0
   14428:	stp	x24, x23, [sp, #128]
   1442c:	mov	x24, x0
   14430:	mov	x0, x1
   14434:	stp	x29, x30, [sp, #112]
   14438:	stp	x22, x21, [sp, #144]
   1443c:	stp	x20, x19, [sp, #160]
   14440:	add	x29, sp, #0x70
   14444:	mov	w23, w4
   14448:	mov	x19, x3
   1444c:	mov	x20, x2
   14450:	mov	x21, x1
   14454:	bl	4e50 <strlen@plt>
   14458:	ldp	q0, q1, [x24, #32]
   1445c:	ldrb	w8, [x24, #56]
   14460:	ldp	q3, q2, [x24]
   14464:	ubfiz	w10, w23, #5, #2
   14468:	stp	q0, q1, [sp, #48]
   1446c:	ldrb	w9, [sp, #72]
   14470:	mov	x22, x0
   14474:	stp	q3, q2, [sp, #16]
   14478:	and	w9, w9, #0x99999999
   1447c:	orr	w9, w10, w9
   14480:	orr	w9, w9, #0x4
   14484:	strb	w9, [sp, #72]
   14488:	cbz	x20, 14520 <xregexec@@Base+0xfc>
   1448c:	tbnz	w8, #4, 14520 <xregexec@@Base+0xfc>
   14490:	lsl	x0, x20, #3
   14494:	stur	w20, [x29, #-24]
   14498:	bl	5160 <malloc@plt>
   1449c:	stur	x0, [x29, #-16]
   144a0:	cbz	x0, 14550 <xregexec@@Base+0x12c>
   144a4:	add	x8, x0, x20, lsl #2
   144a8:	add	x0, sp, #0x10
   144ac:	sub	x7, x29, #0x18
   144b0:	mov	x1, xzr
   144b4:	mov	w2, wzr
   144b8:	mov	x3, x21
   144bc:	mov	w4, w22
   144c0:	mov	w5, wzr
   144c4:	mov	w6, w22
   144c8:	stur	x8, [x29, #-8]
   144cc:	str	w22, [sp]
   144d0:	bl	5260 <xre_search_2@plt>
   144d4:	mov	w21, w0
   144d8:	tbnz	w0, #31, 14558 <xregexec@@Base+0x134>
   144dc:	ldp	x0, x8, [x29, #-16]
   144e0:	cmp	x20, #0x8
   144e4:	b.cs	1457c <xregexec@@Base+0x158>  // b.hs, b.nlast
   144e8:	mov	x9, xzr
   144ec:	mov	w10, wzr
   144f0:	add	w10, w10, #0x1
   144f4:	lsl	x11, x9, #2
   144f8:	ldr	w12, [x0, x11]
   144fc:	add	x13, x19, x9, lsl #3
   14500:	mov	w9, w10
   14504:	cmp	x9, x20
   14508:	str	w12, [x13]
   1450c:	ldr	w11, [x8, x11]
   14510:	add	w10, w10, #0x1
   14514:	str	w11, [x13, #4]
   14518:	b.cc	144f4 <xregexec@@Base+0xd0>  // b.lo, b.ul, b.last
   1451c:	b	1455c <xregexec@@Base+0x138>
   14520:	add	x0, sp, #0x10
   14524:	mov	x1, xzr
   14528:	mov	w2, wzr
   1452c:	mov	x3, x21
   14530:	mov	w4, w22
   14534:	mov	w5, wzr
   14538:	mov	w6, w22
   1453c:	mov	x7, xzr
   14540:	str	w22, [sp]
   14544:	bl	5260 <xre_search_2@plt>
   14548:	mov	w21, w0
   1454c:	b	14560 <xregexec@@Base+0x13c>
   14550:	mov	w0, #0x1                   	// #1
   14554:	b	14564 <xregexec@@Base+0x140>
   14558:	ldur	x0, [x29, #-16]
   1455c:	bl	4f00 <free@plt>
   14560:	lsr	w0, w21, #31
   14564:	ldp	x20, x19, [sp, #160]
   14568:	ldp	x22, x21, [sp, #144]
   1456c:	ldp	x24, x23, [sp, #128]
   14570:	ldp	x29, x30, [sp, #112]
   14574:	add	sp, sp, #0xb0
   14578:	ret
   1457c:	sub	x12, x20, #0x1
   14580:	cmp	xzr, x12, lsr #61
   14584:	mov	w10, wzr
   14588:	cset	w11, ne  // ne = any
   1458c:	cmn	w12, #0x1
   14590:	mov	x9, xzr
   14594:	b.eq	144f0 <xregexec@@Base+0xcc>  // b.none
   14598:	lsr	x13, x12, #32
   1459c:	cbnz	x13, 144f0 <xregexec@@Base+0xcc>
   145a0:	lsl	x12, x12, #3
   145a4:	mvn	x13, x19
   145a8:	cmp	x12, x13
   145ac:	b.hi	144f0 <xregexec@@Base+0xcc>  // b.pmore
   145b0:	tbnz	w11, #0, 144f0 <xregexec@@Base+0xcc>
   145b4:	add	x13, x19, #0x4
   145b8:	mvn	x13, x13
   145bc:	cmp	x12, x13
   145c0:	b.hi	144f0 <xregexec@@Base+0xcc>  // b.pmore
   145c4:	tbnz	w11, #0, 144f0 <xregexec@@Base+0xcc>
   145c8:	lsl	x11, x20, #2
   145cc:	add	x13, x0, x11
   145d0:	add	x12, x19, x20, lsl #3
   145d4:	cmp	x13, x19
   145d8:	add	x11, x8, x11
   145dc:	cset	w13, hi  // hi = pmore
   145e0:	cmp	x0, x12
   145e4:	cset	w14, cc  // cc = lo, ul, last
   145e8:	cmp	x11, x19
   145ec:	cset	w11, hi  // hi = pmore
   145f0:	cmp	x8, x12
   145f4:	mov	w10, wzr
   145f8:	mov	x9, xzr
   145fc:	and	w13, w13, w14
   14600:	cset	w12, cc  // cc = lo, ul, last
   14604:	tbnz	w13, #0, 144f0 <xregexec@@Base+0xcc>
   14608:	and	w11, w11, w12
   1460c:	tbnz	w11, #0, 144f0 <xregexec@@Base+0xcc>
   14610:	and	x9, x20, #0xfffffffffffffff8
   14614:	add	x11, x19, #0x20
   14618:	add	x12, x0, #0x10
   1461c:	mov	w10, w9
   14620:	add	x13, x8, #0x10
   14624:	mov	x14, x9
   14628:	ldp	q0, q2, [x12, #-16]
   1462c:	ldp	q1, q3, [x13, #-16]
   14630:	sub	x15, x11, #0x20
   14634:	add	x12, x12, #0x20
   14638:	subs	x14, x14, #0x8
   1463c:	st2	{v0.4s, v1.4s}, [x15]
   14640:	st2	{v2.4s, v3.4s}, [x11]
   14644:	add	x11, x11, #0x40
   14648:	add	x13, x13, #0x20
   1464c:	b.ne	14628 <xregexec@@Base+0x204>  // b.any
   14650:	cmp	x9, x20
   14654:	b.ne	144f0 <xregexec@@Base+0xcc>  // b.any
   14658:	b	1455c <xregexec@@Base+0x138>

000000000001465c <xregerror@@Base>:
   1465c:	stp	x29, x30, [sp, #-48]!
   14660:	cmp	w0, #0x11
   14664:	stp	x22, x21, [sp, #16]
   14668:	stp	x20, x19, [sp, #32]
   1466c:	mov	x29, sp
   14670:	b.cs	146e0 <xregerror@@Base+0x84>  // b.hs, b.nlast
   14674:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   14678:	add	x8, x8, #0x9d0
   1467c:	ldr	x22, [x8, w0, uxtw #3]
   14680:	mov	x21, x3
   14684:	mov	x19, x2
   14688:	mov	x0, x22
   1468c:	bl	4e50 <strlen@plt>
   14690:	add	x20, x0, #0x1
   14694:	cbz	x21, 146cc <xregerror@@Base+0x70>
   14698:	cmp	x20, x21
   1469c:	b.ls	146bc <xregerror@@Base+0x60>  // b.plast
   146a0:	sub	x21, x21, #0x1
   146a4:	mov	x0, x19
   146a8:	mov	x1, x22
   146ac:	mov	x2, x21
   146b0:	bl	4db0 <memcpy@plt>
   146b4:	strb	wzr, [x19, x21]
   146b8:	b	146cc <xregerror@@Base+0x70>
   146bc:	mov	x0, x19
   146c0:	mov	x1, x22
   146c4:	mov	x2, x20
   146c8:	bl	4db0 <memcpy@plt>
   146cc:	mov	x0, x20
   146d0:	ldp	x20, x19, [sp, #32]
   146d4:	ldp	x22, x21, [sp, #16]
   146d8:	ldp	x29, x30, [sp], #48
   146dc:	ret
   146e0:	bl	5190 <abort@plt>

00000000000146e4 <xregfree@@Base>:
   146e4:	stp	x29, x30, [sp, #-32]!
   146e8:	str	x19, [sp, #16]
   146ec:	mov	x19, x0
   146f0:	ldr	x0, [x0]
   146f4:	mov	x29, sp
   146f8:	bl	4f00 <free@plt>
   146fc:	ldr	x0, [x19, #32]
   14700:	stp	xzr, xzr, [x19]
   14704:	str	xzr, [x19, #16]
   14708:	bl	4f00 <free@plt>
   1470c:	ldrb	w8, [x19, #56]
   14710:	ldr	x0, [x19, #40]
   14714:	str	xzr, [x19, #32]
   14718:	and	w8, w8, #0xfffffff7
   1471c:	strb	w8, [x19, #56]
   14720:	bl	4f00 <free@plt>
   14724:	str	xzr, [x19, #40]
   14728:	ldr	x19, [sp, #16]
   1472c:	ldp	x29, x30, [sp], #32
   14730:	ret
   14734:	sub	sp, sp, #0x50
   14738:	stp	x29, x30, [sp, #16]
   1473c:	stp	x24, x23, [sp, #32]
   14740:	stp	x22, x21, [sp, #48]
   14744:	stp	x20, x19, [sp, #64]
   14748:	ldr	x8, [x0]
   1474c:	add	x29, sp, #0x10
   14750:	add	x22, x8, #0x2
   14754:	cmp	x22, x1
   14758:	str	x22, [sp]
   1475c:	b.cs	14924 <xregfree@@Base+0x240>  // b.hs, b.nlast
   14760:	mov	x20, x2
   14764:	mov	x21, x1
   14768:	mov	x19, x0
   1476c:	ldrb	w8, [x22]
   14770:	cmp	w8, #0xf
   14774:	b.eq	147a8 <xregfree@@Base+0xc4>  // b.none
   14778:	cmp	w8, #0x7
   1477c:	b.eq	1494c <xregfree@@Base+0x268>  // b.none
   14780:	mov	x0, sp
   14784:	mov	x1, x21
   14788:	mov	x2, x20
   1478c:	bl	1495c <xregfree@@Base+0x278>
   14790:	tst	w0, #0xff
   14794:	b.eq	14924 <xregfree@@Base+0x240>  // b.none
   14798:	ldr	x22, [sp]
   1479c:	cmp	x22, x21
   147a0:	b.cc	1476c <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   147a4:	b	14924 <xregfree@@Base+0x240>
   147a8:	add	x8, x22, #0x1
   147ac:	str	x8, [sp]
   147b0:	ldrb	w8, [x22, #1]
   147b4:	ldrsb	w9, [x22, #2]
   147b8:	add	x23, x22, #0x3
   147bc:	str	x23, [sp]
   147c0:	bfi	w8, w9, #8, #24
   147c4:	tbnz	w8, #31, 14888 <xregfree@@Base+0x1a4>
   147c8:	sxtw	x8, w8
   147cc:	add	x9, x8, x23
   147d0:	ldurb	w9, [x9, #-3]
   147d4:	cmp	w9, #0xe
   147d8:	b.ne	1489c <xregfree@@Base+0x1b8>  // b.any
   147dc:	add	x24, x23, x8
   147e0:	sub	x22, x24, #0x3
   147e4:	cmp	x23, x22
   147e8:	str	x23, [sp, #8]
   147ec:	b.cs	14850 <xregfree@@Base+0x16c>  // b.hs, b.nlast
   147f0:	mov	x8, x23
   147f4:	b	14820 <xregfree@@Base+0x13c>
   147f8:	add	x9, x8, #0x1
   147fc:	str	x9, [sp, #8]
   14800:	ldrb	w9, [x8, #1]
   14804:	ldrsb	x10, [x8, #2]
   14808:	bfi	x9, x10, #8, #56
   1480c:	add	x8, x8, x9
   14810:	add	x8, x8, #0x3
   14814:	str	x8, [sp, #8]
   14818:	cmp	x8, x22
   1481c:	b.cs	14850 <xregfree@@Base+0x16c>  // b.hs, b.nlast
   14820:	ldrb	w9, [x8]
   14824:	cmp	w9, #0xf
   14828:	b.eq	147f8 <xregfree@@Base+0x114>  // b.none
   1482c:	add	x0, sp, #0x8
   14830:	mov	x1, x22
   14834:	mov	x2, x20
   14838:	bl	1495c <xregfree@@Base+0x278>
   1483c:	tst	w0, #0xff
   14840:	b.eq	1492c <xregfree@@Base+0x248>  // b.none
   14844:	ldr	x8, [sp, #8]
   14848:	cmp	x8, x22
   1484c:	b.cc	14820 <xregfree@@Base+0x13c>  // b.lo, b.ul, b.last
   14850:	ldrb	w8, [x24]
   14854:	cmp	w8, #0xf
   14858:	b.ne	14898 <xregfree@@Base+0x1b4>  // b.any
   1485c:	ldrb	w8, [x24, #1]
   14860:	ldrsb	x9, [x24, #2]
   14864:	add	x23, x24, #0x3
   14868:	bfi	x8, x9, #8, #56
   1486c:	add	x9, x8, x23
   14870:	ldurb	w9, [x9, #-3]
   14874:	cmp	w9, #0xe
   14878:	b.eq	147c8 <xregfree@@Base+0xe4>  // b.none
   1487c:	str	x23, [sp]
   14880:	sub	x23, x23, #0x3
   14884:	b	1489c <xregfree@@Base+0x1b8>
   14888:	mov	x22, x23
   1488c:	cmp	x22, x21
   14890:	b.cc	1476c <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   14894:	b	14924 <xregfree@@Base+0x240>
   14898:	mov	x23, x24
   1489c:	str	x23, [sp]
   148a0:	ldurb	w8, [x23, #-2]
   148a4:	ldursb	x9, [x23, #-1]
   148a8:	str	x23, [sp, #8]
   148ac:	bfi	x8, x9, #8, #56
   148b0:	add	x22, x23, x8
   148b4:	cmp	w8, #0x1
   148b8:	b.ge	148e8 <xregfree@@Base+0x204>  // b.tcont
   148bc:	b	14918 <xregfree@@Base+0x234>
   148c0:	add	x8, x23, #0x1
   148c4:	str	x8, [sp, #8]
   148c8:	ldrb	w8, [x23, #1]
   148cc:	ldrsb	x9, [x23, #2]
   148d0:	bfi	x8, x9, #8, #56
   148d4:	add	x8, x23, x8
   148d8:	add	x23, x8, #0x3
   148dc:	str	x23, [sp, #8]
   148e0:	cmp	x23, x22
   148e4:	b.cs	14918 <xregfree@@Base+0x234>  // b.hs, b.nlast
   148e8:	ldrb	w8, [x23]
   148ec:	cmp	w8, #0xf
   148f0:	b.eq	148c0 <xregfree@@Base+0x1dc>  // b.none
   148f4:	add	x0, sp, #0x8
   148f8:	mov	x1, x22
   148fc:	mov	x2, x20
   14900:	bl	1495c <xregfree@@Base+0x278>
   14904:	tst	w0, #0xff
   14908:	b.eq	14924 <xregfree@@Base+0x240>  // b.none
   1490c:	ldr	x23, [sp, #8]
   14910:	cmp	x23, x22
   14914:	b.cc	148e8 <xregfree@@Base+0x204>  // b.lo, b.ul, b.last
   14918:	str	x22, [sp]
   1491c:	cmp	x22, x21
   14920:	b.cc	1476c <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   14924:	mov	w0, wzr
   14928:	b	14934 <xregfree@@Base+0x250>
   1492c:	mov	w0, wzr
   14930:	str	x23, [sp]
   14934:	ldp	x20, x19, [sp, #64]
   14938:	ldp	x22, x21, [sp, #48]
   1493c:	ldp	x24, x23, [sp, #32]
   14940:	ldp	x29, x30, [sp, #16]
   14944:	add	sp, sp, #0x50
   14948:	ret
   1494c:	add	x8, x22, #0x2
   14950:	str	x8, [x19]
   14954:	mov	w0, #0x1                   	// #1
   14958:	b	14934 <xregfree@@Base+0x250>
   1495c:	stp	x29, x30, [sp, #-48]!
   14960:	stp	x20, x19, [sp, #32]
   14964:	ldr	x9, [x0]
   14968:	mov	x29, sp
   1496c:	mov	x19, x0
   14970:	mov	w0, wzr
   14974:	add	x8, x9, #0x1
   14978:	str	x8, [x29, #24]
   1497c:	ldrb	w10, [x9]
   14980:	str	x21, [sp, #16]
   14984:	cmp	w10, #0x1d
   14988:	b.hi	149b0 <xregfree@@Base+0x2cc>  // b.pmore
   1498c:	adrp	x11, 17000 <xexit@@Base+0xb84>
   14990:	add	x11, x11, #0xca
   14994:	adr	x12, 149a8 <xregfree@@Base+0x2c4>
   14998:	ldrb	w13, [x11, x10]
   1499c:	add	x12, x12, x13, lsl #2
   149a0:	mov	x20, x2
   149a4:	br	x12
   149a8:	mov	w0, #0x1                   	// #1
   149ac:	str	x8, [x19]
   149b0:	ldp	x20, x19, [sp, #32]
   149b4:	ldr	x21, [sp, #16]
   149b8:	ldp	x29, x30, [sp], #48
   149bc:	ret
   149c0:	ldrb	w21, [x8]
   149c4:	add	x0, x29, #0x18
   149c8:	mov	x2, x20
   149cc:	bl	14734 <xregfree@@Base+0x50>
   149d0:	add	x8, x20, x21, lsl #3
   149d4:	ldrb	w9, [x8]
   149d8:	mvn	w10, w9
   149dc:	tst	w10, #0x3
   149e0:	b.ne	149ec <xregfree@@Base+0x308>  // b.any
   149e4:	bfxil	w9, w0, #0, #2
   149e8:	strb	w9, [x8]
   149ec:	tst	w0, #0xff
   149f0:	b.eq	14a54 <xregfree@@Base+0x370>  // b.none
   149f4:	ldr	x8, [x29, #24]
   149f8:	b	149a8 <xregfree@@Base+0x2c4>
   149fc:	ldrb	w9, [x8]
   14a00:	lsl	x9, x9, #3
   14a04:	ldrb	w9, [x20, x9]
   14a08:	tst	w9, #0x3
   14a0c:	b.ne	149a8 <xregfree@@Base+0x2c4>  // b.any
   14a10:	b	14a54 <xregfree@@Base+0x370>
   14a14:	ldrsb	w8, [x9, #2]
   14a18:	ldrb	w10, [x9, #1]
   14a1c:	add	x9, x9, #0x3
   14a20:	str	x9, [x29, #24]
   14a24:	lsl	w8, w8, #8
   14a28:	orr	x8, x8, x10
   14a2c:	tbnz	w8, #31, 14a54 <xregfree@@Base+0x370>
   14a30:	add	x8, x9, x8
   14a34:	b	14a94 <xregfree@@Base+0x3b0>
   14a38:	mov	x8, x9
   14a3c:	ldrb	w10, [x8, #3]!
   14a40:	ldrsb	w11, [x8, #1]
   14a44:	bfi	w10, w11, #8, #24
   14a48:	add	x11, x8, #0x2
   14a4c:	str	x11, [x29, #24]
   14a50:	cbz	w10, 14a84 <xregfree@@Base+0x3a0>
   14a54:	mov	w0, wzr
   14a58:	ldp	x20, x19, [sp, #32]
   14a5c:	ldr	x21, [sp, #16]
   14a60:	ldp	x29, x30, [sp], #48
   14a64:	ret
   14a68:	add	x8, x9, #0x5
   14a6c:	mov	w0, wzr
   14a70:	str	x8, [x29, #24]
   14a74:	ldp	x20, x19, [sp, #32]
   14a78:	ldr	x21, [sp, #16]
   14a7c:	ldp	x29, x30, [sp], #48
   14a80:	ret
   14a84:	ldrb	w10, [x9, #1]
   14a88:	ldrsb	x9, [x9, #2]
   14a8c:	bfi	x10, x9, #8, #56
   14a90:	add	x8, x8, x10
   14a94:	str	x8, [x29, #24]
   14a98:	b	149a8 <xregfree@@Base+0x2c4>

0000000000014a9c <concat_length@@Base>:
   14a9c:	sub	sp, sp, #0x120
   14aa0:	stp	x29, x30, [sp, #224]
   14aa4:	add	x29, sp, #0xe0
   14aa8:	mov	x8, #0xffffffffffffffc8    	// #-56
   14aac:	mov	x9, sp
   14ab0:	sub	x10, x29, #0x58
   14ab4:	stp	x20, x19, [sp, #272]
   14ab8:	movk	x8, #0xff80, lsl #32
   14abc:	add	x11, x29, #0x40
   14ac0:	add	x9, x9, #0x80
   14ac4:	add	x20, x10, #0x38
   14ac8:	str	x28, [sp, #240]
   14acc:	stp	x22, x21, [sp, #256]
   14ad0:	stp	x1, x2, [x29, #-88]
   14ad4:	stp	x3, x4, [x29, #-72]
   14ad8:	stp	x5, x6, [x29, #-56]
   14adc:	stur	x7, [x29, #-40]
   14ae0:	stp	q0, q1, [sp]
   14ae4:	stp	q2, q3, [sp, #32]
   14ae8:	stp	q4, q5, [sp, #64]
   14aec:	stp	q6, q7, [sp, #96]
   14af0:	stp	x9, x8, [x29, #-16]
   14af4:	stp	x11, x20, [x29, #-32]
   14af8:	cbz	x0, 14b5c <concat_length@@Base+0xc0>
   14afc:	ldur	w22, [x29, #-8]
   14b00:	ldur	x21, [x29, #-32]
   14b04:	mov	x19, xzr
   14b08:	b	14b24 <concat_length@@Base+0x88>
   14b0c:	mov	w8, w22
   14b10:	add	x9, x21, #0x8
   14b14:	ldr	x0, [x21]
   14b18:	mov	x21, x9
   14b1c:	mov	w22, w8
   14b20:	cbz	x0, 14b60 <concat_length@@Base+0xc4>
   14b24:	bl	4e50 <strlen@plt>
   14b28:	add	x19, x0, x19
   14b2c:	tbz	w22, #31, 14b0c <concat_length@@Base+0x70>
   14b30:	cmn	w22, #0x8
   14b34:	add	w8, w22, #0x8
   14b38:	b.gt	14b10 <concat_length@@Base+0x74>
   14b3c:	add	x10, x20, w22, sxtw
   14b40:	mov	x9, x21
   14b44:	mov	x21, x10
   14b48:	ldr	x0, [x21]
   14b4c:	mov	x21, x9
   14b50:	mov	w22, w8
   14b54:	cbnz	x0, 14b24 <concat_length@@Base+0x88>
   14b58:	b	14b60 <concat_length@@Base+0xc4>
   14b5c:	mov	x19, xzr
   14b60:	mov	x0, x19
   14b64:	ldp	x20, x19, [sp, #272]
   14b68:	ldp	x22, x21, [sp, #256]
   14b6c:	ldr	x28, [sp, #240]
   14b70:	ldp	x29, x30, [sp, #224]
   14b74:	add	sp, sp, #0x120
   14b78:	ret

0000000000014b7c <concat_copy@@Base>:
   14b7c:	sub	sp, sp, #0x120
   14b80:	stp	x29, x30, [sp, #208]
   14b84:	add	x29, sp, #0xd0
   14b88:	mov	x8, #0xffffffffffffffd0    	// #-48
   14b8c:	mov	x9, sp
   14b90:	sub	x10, x29, #0x50
   14b94:	stp	x24, x23, [sp, #240]
   14b98:	stp	x20, x19, [sp, #272]
   14b9c:	mov	x19, x0
   14ba0:	movk	x8, #0xff80, lsl #32
   14ba4:	add	x11, x29, #0x50
   14ba8:	add	x9, x9, #0x80
   14bac:	add	x23, x10, #0x30
   14bb0:	mov	x20, x0
   14bb4:	stp	x28, x25, [sp, #224]
   14bb8:	stp	x22, x21, [sp, #256]
   14bbc:	stp	x2, x3, [x29, #-80]
   14bc0:	stp	x4, x5, [x29, #-64]
   14bc4:	stp	x6, x7, [x29, #-48]
   14bc8:	stp	q1, q2, [sp, #16]
   14bcc:	stp	q3, q4, [sp, #48]
   14bd0:	str	q0, [sp]
   14bd4:	stp	q5, q6, [sp, #80]
   14bd8:	str	q7, [sp, #112]
   14bdc:	stp	x9, x8, [x29, #-16]
   14be0:	stp	x11, x23, [x29, #-32]
   14be4:	cbz	x1, 14c60 <concat_copy@@Base+0xe4>
   14be8:	ldur	w25, [x29, #-8]
   14bec:	ldur	x24, [x29, #-32]
   14bf0:	mov	x21, x1
   14bf4:	mov	x20, x19
   14bf8:	b	14c14 <concat_copy@@Base+0x98>
   14bfc:	mov	w8, w25
   14c00:	add	x9, x24, #0x8
   14c04:	ldr	x21, [x24]
   14c08:	mov	w25, w8
   14c0c:	mov	x24, x9
   14c10:	cbz	x21, 14c60 <concat_copy@@Base+0xe4>
   14c14:	mov	x0, x21
   14c18:	bl	4e50 <strlen@plt>
   14c1c:	mov	x22, x0
   14c20:	mov	x0, x20
   14c24:	mov	x1, x21
   14c28:	mov	x2, x22
   14c2c:	bl	4db0 <memcpy@plt>
   14c30:	add	x20, x20, x22
   14c34:	tbz	w25, #31, 14bfc <concat_copy@@Base+0x80>
   14c38:	cmn	w25, #0x8
   14c3c:	add	w8, w25, #0x8
   14c40:	b.gt	14c00 <concat_copy@@Base+0x84>
   14c44:	add	x10, x23, w25, sxtw
   14c48:	mov	x9, x24
   14c4c:	mov	x24, x10
   14c50:	ldr	x21, [x24]
   14c54:	mov	w25, w8
   14c58:	mov	x24, x9
   14c5c:	cbnz	x21, 14c14 <concat_copy@@Base+0x98>
   14c60:	strb	wzr, [x20]
   14c64:	mov	x0, x19
   14c68:	ldp	x20, x19, [sp, #272]
   14c6c:	ldp	x22, x21, [sp, #256]
   14c70:	ldp	x24, x23, [sp, #240]
   14c74:	ldp	x28, x25, [sp, #224]
   14c78:	ldp	x29, x30, [sp, #208]
   14c7c:	add	sp, sp, #0x120
   14c80:	ret

0000000000014c84 <concat_copy2@@Base>:
   14c84:	sub	sp, sp, #0x130
   14c88:	stp	x29, x30, [sp, #224]
   14c8c:	add	x29, sp, #0xe0
   14c90:	stp	x28, x25, [sp, #240]
   14c94:	stp	x24, x23, [sp, #256]
   14c98:	stp	x22, x21, [sp, #272]
   14c9c:	stp	x20, x19, [sp, #288]
   14ca0:	stp	x1, x2, [x29, #-88]
   14ca4:	stp	x3, x4, [x29, #-72]
   14ca8:	stp	x5, x6, [x29, #-56]
   14cac:	stur	x7, [x29, #-40]
   14cb0:	stp	q0, q1, [sp]
   14cb4:	stp	q2, q3, [sp, #32]
   14cb8:	stp	q4, q5, [sp, #64]
   14cbc:	stp	q6, q7, [sp, #96]
   14cc0:	adrp	x22, 2a000 <xexit@@Base+0x13b84>
   14cc4:	ldr	x22, [x22, #3840]
   14cc8:	mov	x8, #0xffffffffffffffc8    	// #-56
   14ccc:	mov	x9, sp
   14cd0:	movk	x8, #0xff80, lsl #32
   14cd4:	ldr	x19, [x22]
   14cd8:	sub	x10, x29, #0x58
   14cdc:	add	x9, x9, #0x80
   14ce0:	add	x23, x10, #0x38
   14ce4:	stp	x9, x8, [x29, #-16]
   14ce8:	add	x8, x29, #0x50
   14cec:	stp	x8, x23, [x29, #-32]
   14cf0:	cbz	x0, 14d68 <concat_copy2@@Base+0xe4>
   14cf4:	ldur	w25, [x29, #-8]
   14cf8:	ldur	x24, [x29, #-32]
   14cfc:	mov	x20, x0
   14d00:	b	14d1c <concat_copy2@@Base+0x98>
   14d04:	mov	w8, w25
   14d08:	add	x9, x24, #0x8
   14d0c:	ldr	x20, [x24]
   14d10:	mov	w25, w8
   14d14:	mov	x24, x9
   14d18:	cbz	x20, 14d68 <concat_copy2@@Base+0xe4>
   14d1c:	mov	x0, x20
   14d20:	bl	4e50 <strlen@plt>
   14d24:	mov	x21, x0
   14d28:	mov	x0, x19
   14d2c:	mov	x1, x20
   14d30:	mov	x2, x21
   14d34:	bl	4db0 <memcpy@plt>
   14d38:	add	x19, x19, x21
   14d3c:	tbz	w25, #31, 14d04 <concat_copy2@@Base+0x80>
   14d40:	cmn	w25, #0x8
   14d44:	add	w8, w25, #0x8
   14d48:	b.gt	14d08 <concat_copy2@@Base+0x84>
   14d4c:	add	x10, x23, w25, sxtw
   14d50:	mov	x9, x24
   14d54:	mov	x24, x10
   14d58:	ldr	x20, [x24]
   14d5c:	mov	w25, w8
   14d60:	mov	x24, x9
   14d64:	cbnz	x20, 14d1c <concat_copy2@@Base+0x98>
   14d68:	strb	wzr, [x19]
   14d6c:	ldr	x0, [x22]
   14d70:	ldp	x20, x19, [sp, #288]
   14d74:	ldp	x22, x21, [sp, #272]
   14d78:	ldp	x24, x23, [sp, #256]
   14d7c:	ldp	x28, x25, [sp, #240]
   14d80:	ldp	x29, x30, [sp, #224]
   14d84:	add	sp, sp, #0x130
   14d88:	ret

0000000000014d8c <concat@@Base>:
   14d8c:	sub	sp, sp, #0x140
   14d90:	stp	x29, x30, [sp, #224]
   14d94:	add	x29, sp, #0xe0
   14d98:	stp	x22, x21, [sp, #288]
   14d9c:	mov	x21, #0xffffffffffffffc8    	// #-56
   14da0:	mov	x8, sp
   14da4:	sub	x9, x29, #0x58
   14da8:	stp	x24, x23, [sp, #272]
   14dac:	stp	x20, x19, [sp, #304]
   14db0:	mov	x19, x0
   14db4:	movk	x21, #0xff80, lsl #32
   14db8:	add	x24, x29, #0x60
   14dbc:	add	x22, x8, #0x80
   14dc0:	add	x23, x9, #0x38
   14dc4:	str	x28, [sp, #240]
   14dc8:	stp	x26, x25, [sp, #256]
   14dcc:	stp	x1, x2, [x29, #-88]
   14dd0:	stp	x3, x4, [x29, #-72]
   14dd4:	stp	x5, x6, [x29, #-56]
   14dd8:	stur	x7, [x29, #-40]
   14ddc:	stp	q0, q1, [sp]
   14de0:	stp	q2, q3, [sp, #32]
   14de4:	stp	q4, q5, [sp, #64]
   14de8:	stp	q6, q7, [sp, #96]
   14dec:	stp	x22, x21, [x29, #-16]
   14df0:	stp	x24, x23, [x29, #-32]
   14df4:	cbz	x0, 14e60 <concat@@Base+0xd4>
   14df8:	ldur	w26, [x29, #-8]
   14dfc:	ldur	x25, [x29, #-32]
   14e00:	mov	x20, xzr
   14e04:	mov	x0, x19
   14e08:	b	14e24 <concat@@Base+0x98>
   14e0c:	mov	w8, w26
   14e10:	add	x9, x25, #0x8
   14e14:	ldr	x0, [x25]
   14e18:	mov	x25, x9
   14e1c:	mov	w26, w8
   14e20:	cbz	x0, 14e58 <concat@@Base+0xcc>
   14e24:	bl	4e50 <strlen@plt>
   14e28:	add	x20, x0, x20
   14e2c:	tbz	w26, #31, 14e0c <concat@@Base+0x80>
   14e30:	cmn	w26, #0x8
   14e34:	add	w8, w26, #0x8
   14e38:	b.gt	14e10 <concat@@Base+0x84>
   14e3c:	add	x10, x23, w26, sxtw
   14e40:	mov	x9, x25
   14e44:	mov	x25, x10
   14e48:	ldr	x0, [x25]
   14e4c:	mov	x25, x9
   14e50:	mov	w26, w8
   14e54:	cbnz	x0, 14e24 <concat@@Base+0x98>
   14e58:	add	x0, x20, #0x1
   14e5c:	b	14e64 <concat@@Base+0xd8>
   14e60:	mov	w0, #0x1                   	// #1
   14e64:	bl	50d0 <xmalloc@plt>
   14e68:	mov	x20, x0
   14e6c:	stp	x22, x21, [x29, #-16]
   14e70:	mov	x21, x0
   14e74:	stp	x24, x23, [x29, #-32]
   14e78:	cbz	x19, 14ef0 <concat@@Base+0x164>
   14e7c:	ldur	w25, [x29, #-8]
   14e80:	ldur	x24, [x29, #-32]
   14e84:	mov	x21, x20
   14e88:	b	14ea4 <concat@@Base+0x118>
   14e8c:	mov	w8, w25
   14e90:	add	x9, x24, #0x8
   14e94:	ldr	x19, [x24]
   14e98:	mov	w25, w8
   14e9c:	mov	x24, x9
   14ea0:	cbz	x19, 14ef0 <concat@@Base+0x164>
   14ea4:	mov	x0, x19
   14ea8:	bl	4e50 <strlen@plt>
   14eac:	mov	x22, x0
   14eb0:	mov	x0, x21
   14eb4:	mov	x1, x19
   14eb8:	mov	x2, x22
   14ebc:	bl	4db0 <memcpy@plt>
   14ec0:	add	x21, x21, x22
   14ec4:	tbz	w25, #31, 14e8c <concat@@Base+0x100>
   14ec8:	cmn	w25, #0x8
   14ecc:	add	w8, w25, #0x8
   14ed0:	b.gt	14e90 <concat@@Base+0x104>
   14ed4:	add	x10, x23, w25, sxtw
   14ed8:	mov	x9, x24
   14edc:	mov	x24, x10
   14ee0:	ldr	x19, [x24]
   14ee4:	mov	w25, w8
   14ee8:	mov	x24, x9
   14eec:	cbnz	x19, 14ea4 <concat@@Base+0x118>
   14ef0:	strb	wzr, [x21]
   14ef4:	mov	x0, x20
   14ef8:	ldp	x20, x19, [sp, #304]
   14efc:	ldp	x22, x21, [sp, #288]
   14f00:	ldp	x24, x23, [sp, #272]
   14f04:	ldp	x26, x25, [sp, #256]
   14f08:	ldr	x28, [sp, #240]
   14f0c:	ldp	x29, x30, [sp, #224]
   14f10:	add	sp, sp, #0x140
   14f14:	ret

0000000000014f18 <reconcat@@Base>:
   14f18:	sub	sp, sp, #0x130
   14f1c:	stp	x29, x30, [sp, #208]
   14f20:	add	x29, sp, #0xd0
   14f24:	stp	x22, x21, [sp, #272]
   14f28:	mov	x22, #0xffffffffffffffd0    	// #-48
   14f2c:	mov	x8, sp
   14f30:	sub	x9, x29, #0x50
   14f34:	stp	x26, x25, [sp, #240]
   14f38:	stp	x24, x23, [sp, #256]
   14f3c:	stp	x20, x19, [sp, #288]
   14f40:	mov	x20, x1
   14f44:	mov	x19, x0
   14f48:	movk	x22, #0xff80, lsl #32
   14f4c:	add	x25, x29, #0x60
   14f50:	add	x23, x8, #0x80
   14f54:	add	x24, x9, #0x30
   14f58:	stp	x28, x27, [sp, #224]
   14f5c:	stp	x2, x3, [x29, #-80]
   14f60:	stp	x4, x5, [x29, #-64]
   14f64:	stp	x6, x7, [x29, #-48]
   14f68:	stp	q1, q2, [sp, #16]
   14f6c:	stp	q3, q4, [sp, #48]
   14f70:	str	q0, [sp]
   14f74:	stp	q5, q6, [sp, #80]
   14f78:	str	q7, [sp, #112]
   14f7c:	stp	x23, x22, [x29, #-16]
   14f80:	stp	x25, x24, [x29, #-32]
   14f84:	cbz	x1, 14ff0 <reconcat@@Base+0xd8>
   14f88:	ldur	w27, [x29, #-8]
   14f8c:	ldur	x26, [x29, #-32]
   14f90:	mov	x21, xzr
   14f94:	mov	x0, x20
   14f98:	b	14fb4 <reconcat@@Base+0x9c>
   14f9c:	mov	w8, w27
   14fa0:	add	x9, x26, #0x8
   14fa4:	ldr	x0, [x26]
   14fa8:	mov	x26, x9
   14fac:	mov	w27, w8
   14fb0:	cbz	x0, 14fe8 <reconcat@@Base+0xd0>
   14fb4:	bl	4e50 <strlen@plt>
   14fb8:	add	x21, x0, x21
   14fbc:	tbz	w27, #31, 14f9c <reconcat@@Base+0x84>
   14fc0:	cmn	w27, #0x8
   14fc4:	add	w8, w27, #0x8
   14fc8:	b.gt	14fa0 <reconcat@@Base+0x88>
   14fcc:	add	x10, x24, w27, sxtw
   14fd0:	mov	x9, x26
   14fd4:	mov	x26, x10
   14fd8:	ldr	x0, [x26]
   14fdc:	mov	x26, x9
   14fe0:	mov	w27, w8
   14fe4:	cbnz	x0, 14fb4 <reconcat@@Base+0x9c>
   14fe8:	add	x0, x21, #0x1
   14fec:	b	14ff4 <reconcat@@Base+0xdc>
   14ff0:	mov	w0, #0x1                   	// #1
   14ff4:	bl	50d0 <xmalloc@plt>
   14ff8:	mov	x21, x0
   14ffc:	stp	x23, x22, [x29, #-16]
   15000:	mov	x22, x0
   15004:	stp	x25, x24, [x29, #-32]
   15008:	cbz	x20, 15080 <reconcat@@Base+0x168>
   1500c:	ldur	w26, [x29, #-8]
   15010:	ldur	x25, [x29, #-32]
   15014:	mov	x22, x21
   15018:	b	15034 <reconcat@@Base+0x11c>
   1501c:	mov	w8, w26
   15020:	add	x9, x25, #0x8
   15024:	ldr	x20, [x25]
   15028:	mov	w26, w8
   1502c:	mov	x25, x9
   15030:	cbz	x20, 15080 <reconcat@@Base+0x168>
   15034:	mov	x0, x20
   15038:	bl	4e50 <strlen@plt>
   1503c:	mov	x23, x0
   15040:	mov	x0, x22
   15044:	mov	x1, x20
   15048:	mov	x2, x23
   1504c:	bl	4db0 <memcpy@plt>
   15050:	add	x22, x22, x23
   15054:	tbz	w26, #31, 1501c <reconcat@@Base+0x104>
   15058:	cmn	w26, #0x8
   1505c:	add	w8, w26, #0x8
   15060:	b.gt	15020 <reconcat@@Base+0x108>
   15064:	add	x10, x24, w26, sxtw
   15068:	mov	x9, x25
   1506c:	mov	x25, x10
   15070:	ldr	x20, [x25]
   15074:	mov	w26, w8
   15078:	mov	x25, x9
   1507c:	cbnz	x20, 15034 <reconcat@@Base+0x11c>
   15080:	strb	wzr, [x22]
   15084:	cbz	x19, 15090 <reconcat@@Base+0x178>
   15088:	mov	x0, x19
   1508c:	bl	4f00 <free@plt>
   15090:	mov	x0, x21
   15094:	ldp	x20, x19, [sp, #288]
   15098:	ldp	x22, x21, [sp, #272]
   1509c:	ldp	x24, x23, [sp, #256]
   150a0:	ldp	x26, x25, [sp, #240]
   150a4:	ldp	x28, x27, [sp, #224]
   150a8:	ldp	x29, x30, [sp, #208]
   150ac:	add	sp, sp, #0x130
   150b0:	ret
   150b4:	lsr	x8, x0, #32
   150b8:	mov	w9, #0xadcc                	// #44492
   150bc:	movk	w9, #0xbdec, lsl #16
   150c0:	mov	w10, #0x109a                	// #4250
   150c4:	sub	w8, w8, w0
   150c8:	movk	w10, #0x2, lsl #16
   150cc:	add	w8, w8, w9
   150d0:	mov	w9, #0x2785                	// #10117
   150d4:	eor	w8, w8, w10
   150d8:	movk	w9, #0x5c24, lsl #16
   150dc:	sub	w11, w0, w8
   150e0:	add	w9, w11, w9
   150e4:	mov	w10, #0x5234                	// #21044
   150e8:	eor	w9, w9, w8, lsl #8
   150ec:	movk	w10, #0x4213, lsl #16
   150f0:	add	w11, w8, w9
   150f4:	sub	w10, w10, w11
   150f8:	sub	w8, w8, w9
   150fc:	eor	w10, w10, w9, lsr #13
   15100:	sub	w8, w8, w10
   15104:	sub	w9, w9, w10
   15108:	eor	w8, w8, w10, lsr #12
   1510c:	sub	w9, w9, w8
   15110:	sub	w10, w10, w8
   15114:	eor	w9, w9, w8, lsl #16
   15118:	sub	w10, w10, w9
   1511c:	sub	w8, w8, w9
   15120:	eor	w10, w10, w9, lsr #5
   15124:	sub	w8, w8, w10
   15128:	sub	w9, w9, w10
   1512c:	eor	w8, w8, w10, lsr #3
   15130:	sub	w9, w9, w8
   15134:	eor	w9, w9, w8, lsl #10
   15138:	sub	w8, w10, w8
   1513c:	sub	w8, w8, w9
   15140:	eor	w0, w8, w9, lsr #15
   15144:	ret
   15148:	cmp	x0, x1
   1514c:	cset	w0, eq  // eq = none
   15150:	ret

0000000000015154 <htab_size@@Base>:
   15154:	ldr	x0, [x0, #32]
   15158:	ret

000000000001515c <htab_elements@@Base>:
   1515c:	ldp	x8, x9, [x0, #40]
   15160:	sub	x0, x8, x9
   15164:	ret

0000000000015168 <htab_create_alloc@@Base>:
   15168:	stp	x29, x30, [sp, #-80]!
   1516c:	adrp	x9, 17000 <xexit@@Base+0xb84>
   15170:	stp	x26, x25, [sp, #16]
   15174:	stp	x24, x23, [sp, #32]
   15178:	stp	x22, x21, [sp, #48]
   1517c:	stp	x20, x19, [sp, #64]
   15180:	mov	x19, x5
   15184:	mov	x20, x4
   15188:	mov	x21, x3
   1518c:	mov	x22, x2
   15190:	mov	x23, x1
   15194:	mov	x2, x0
   15198:	mov	w8, wzr
   1519c:	mov	w26, #0x1e                  	// #30
   151a0:	add	x9, x9, #0x31c
   151a4:	mov	x29, sp
   151a8:	sub	w10, w26, w8
   151ac:	add	w10, w8, w10, lsr #1
   151b0:	lsl	x11, x10, #4
   151b4:	ldr	w11, [x9, x11]
   151b8:	cmp	x11, x2
   151bc:	csel	w26, w26, w10, cc  // cc = lo, ul, last
   151c0:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   151c4:	cmp	w26, w8
   151c8:	b.ne	151a8 <htab_create_alloc@@Base+0x40>  // b.any
   151cc:	mov	w8, w26
   151d0:	lsl	x8, x8, #4
   151d4:	ldr	w25, [x9, x8]
   151d8:	cmp	x25, x2
   151dc:	b.cc	1524c <htab_create_alloc@@Base+0xe4>  // b.lo, b.ul, b.last
   151e0:	mov	w0, #0x1                   	// #1
   151e4:	mov	w1, #0x70                  	// #112
   151e8:	blr	x20
   151ec:	mov	x24, x0
   151f0:	cbz	x0, 15230 <htab_create_alloc@@Base+0xc8>
   151f4:	mov	w1, #0x8                   	// #8
   151f8:	mov	x0, x25
   151fc:	blr	x20
   15200:	str	x0, [x24, #24]
   15204:	cbz	x0, 15220 <htab_create_alloc@@Base+0xb8>
   15208:	str	x25, [x24, #32]
   1520c:	str	w26, [x24, #104]
   15210:	stp	x23, x22, [x24]
   15214:	str	x21, [x24, #16]
   15218:	stp	x20, x19, [x24, #64]
   1521c:	b	15230 <htab_create_alloc@@Base+0xc8>
   15220:	cbz	x19, 1522c <htab_create_alloc@@Base+0xc4>
   15224:	mov	x0, x24
   15228:	blr	x19
   1522c:	mov	x24, xzr
   15230:	mov	x0, x24
   15234:	ldp	x20, x19, [sp, #64]
   15238:	ldp	x22, x21, [sp, #48]
   1523c:	ldp	x24, x23, [sp, #32]
   15240:	ldp	x26, x25, [sp, #16]
   15244:	ldp	x29, x30, [sp], #80
   15248:	ret
   1524c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15250:	ldr	x8, [x8, #3968]
   15254:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15258:	add	x1, x1, #0x4fc
   1525c:	ldr	x0, [x8]
   15260:	bl	4e60 <fprintf@plt>
   15264:	bl	5190 <abort@plt>

0000000000015268 <htab_create_typed_alloc@@Base>:
   15268:	stp	x29, x30, [sp, #-80]!
   1526c:	adrp	x9, 17000 <xexit@@Base+0xb84>
   15270:	stp	x26, x25, [sp, #16]
   15274:	stp	x24, x23, [sp, #32]
   15278:	stp	x22, x21, [sp, #48]
   1527c:	stp	x20, x19, [sp, #64]
   15280:	mov	x19, x6
   15284:	mov	x20, x5
   15288:	mov	x21, x3
   1528c:	mov	x22, x2
   15290:	mov	x23, x1
   15294:	mov	x2, x0
   15298:	mov	w8, wzr
   1529c:	mov	w26, #0x1e                  	// #30
   152a0:	add	x9, x9, #0x31c
   152a4:	mov	x29, sp
   152a8:	sub	w10, w26, w8
   152ac:	add	w10, w8, w10, lsr #1
   152b0:	lsl	x11, x10, #4
   152b4:	ldr	w11, [x9, x11]
   152b8:	cmp	x11, x2
   152bc:	csel	w26, w26, w10, cc  // cc = lo, ul, last
   152c0:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   152c4:	cmp	w26, w8
   152c8:	b.ne	152a8 <htab_create_typed_alloc@@Base+0x40>  // b.any
   152cc:	mov	w8, w26
   152d0:	lsl	x8, x8, #4
   152d4:	ldr	w25, [x9, x8]
   152d8:	cmp	x25, x2
   152dc:	b.cc	1534c <htab_create_typed_alloc@@Base+0xe4>  // b.lo, b.ul, b.last
   152e0:	mov	w0, #0x1                   	// #1
   152e4:	mov	w1, #0x70                  	// #112
   152e8:	blr	x4
   152ec:	mov	x24, x0
   152f0:	cbz	x0, 15330 <htab_create_typed_alloc@@Base+0xc8>
   152f4:	mov	w1, #0x8                   	// #8
   152f8:	mov	x0, x25
   152fc:	blr	x20
   15300:	str	x0, [x24, #24]
   15304:	cbz	x0, 15320 <htab_create_typed_alloc@@Base+0xb8>
   15308:	str	x25, [x24, #32]
   1530c:	str	w26, [x24, #104]
   15310:	stp	x23, x22, [x24]
   15314:	str	x21, [x24, #16]
   15318:	stp	x20, x19, [x24, #64]
   1531c:	b	15330 <htab_create_typed_alloc@@Base+0xc8>
   15320:	cbz	x19, 1532c <htab_create_typed_alloc@@Base+0xc4>
   15324:	mov	x0, x24
   15328:	blr	x19
   1532c:	mov	x24, xzr
   15330:	mov	x0, x24
   15334:	ldp	x20, x19, [sp, #64]
   15338:	ldp	x22, x21, [sp, #48]
   1533c:	ldp	x24, x23, [sp, #32]
   15340:	ldp	x26, x25, [sp, #16]
   15344:	ldp	x29, x30, [sp], #80
   15348:	ret
   1534c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15350:	ldr	x8, [x8, #3968]
   15354:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15358:	add	x1, x1, #0x4fc
   1535c:	ldr	x0, [x8]
   15360:	bl	4e60 <fprintf@plt>
   15364:	bl	5190 <abort@plt>

0000000000015368 <htab_create_alloc_ex@@Base>:
   15368:	stp	x29, x30, [sp, #-96]!
   1536c:	adrp	x9, 17000 <xexit@@Base+0xb84>
   15370:	str	x27, [sp, #16]
   15374:	stp	x24, x23, [sp, #48]
   15378:	stp	x22, x21, [sp, #64]
   1537c:	stp	x20, x19, [sp, #80]
   15380:	mov	x19, x6
   15384:	mov	x21, x5
   15388:	mov	x20, x4
   1538c:	mov	x22, x3
   15390:	mov	x23, x2
   15394:	mov	x24, x1
   15398:	mov	x2, x0
   1539c:	mov	w8, wzr
   153a0:	mov	w27, #0x1e                  	// #30
   153a4:	add	x9, x9, #0x31c
   153a8:	stp	x26, x25, [sp, #32]
   153ac:	mov	x29, sp
   153b0:	sub	w10, w27, w8
   153b4:	add	w10, w8, w10, lsr #1
   153b8:	lsl	x11, x10, #4
   153bc:	ldr	w11, [x9, x11]
   153c0:	cmp	x11, x2
   153c4:	csel	w27, w27, w10, cc  // cc = lo, ul, last
   153c8:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   153cc:	cmp	w27, w8
   153d0:	b.ne	153b0 <htab_create_alloc_ex@@Base+0x48>  // b.any
   153d4:	mov	w8, w27
   153d8:	lsl	x8, x8, #4
   153dc:	ldr	w26, [x9, x8]
   153e0:	cmp	x26, x2
   153e4:	b.cc	15468 <htab_create_alloc_ex@@Base+0x100>  // b.lo, b.ul, b.last
   153e8:	mov	w1, #0x1                   	// #1
   153ec:	mov	w2, #0x70                  	// #112
   153f0:	mov	x0, x20
   153f4:	blr	x21
   153f8:	mov	x25, x0
   153fc:	cbz	x0, 15448 <htab_create_alloc_ex@@Base+0xe0>
   15400:	mov	w2, #0x8                   	// #8
   15404:	mov	x0, x20
   15408:	mov	x1, x26
   1540c:	blr	x21
   15410:	str	x0, [x25, #24]
   15414:	cbz	x0, 15434 <htab_create_alloc_ex@@Base+0xcc>
   15418:	str	x26, [x25, #32]
   1541c:	str	w27, [x25, #104]
   15420:	stp	x24, x23, [x25]
   15424:	str	x22, [x25, #16]
   15428:	stp	x20, x21, [x25, #80]
   1542c:	str	x19, [x25, #96]
   15430:	b	15448 <htab_create_alloc_ex@@Base+0xe0>
   15434:	cbz	x19, 15444 <htab_create_alloc_ex@@Base+0xdc>
   15438:	mov	x0, x20
   1543c:	mov	x1, x25
   15440:	blr	x19
   15444:	mov	x25, xzr
   15448:	mov	x0, x25
   1544c:	ldp	x20, x19, [sp, #80]
   15450:	ldp	x22, x21, [sp, #64]
   15454:	ldp	x24, x23, [sp, #48]
   15458:	ldp	x26, x25, [sp, #32]
   1545c:	ldr	x27, [sp, #16]
   15460:	ldp	x29, x30, [sp], #96
   15464:	ret
   15468:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   1546c:	ldr	x8, [x8, #3968]
   15470:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15474:	add	x1, x1, #0x4fc
   15478:	ldr	x0, [x8]
   1547c:	bl	4e60 <fprintf@plt>
   15480:	bl	5190 <abort@plt>

0000000000015484 <htab_set_functions_ex@@Base>:
   15484:	stp	x1, x2, [x0]
   15488:	str	x3, [x0, #16]
   1548c:	stp	x4, x5, [x0, #80]
   15490:	str	x6, [x0, #96]
   15494:	ret

0000000000015498 <htab_create@@Base>:
   15498:	stp	x29, x30, [sp, #-64]!
   1549c:	adrp	x9, 17000 <xexit@@Base+0xb84>
   154a0:	stp	x24, x23, [sp, #16]
   154a4:	stp	x22, x21, [sp, #32]
   154a8:	stp	x20, x19, [sp, #48]
   154ac:	mov	x19, x3
   154b0:	mov	x20, x2
   154b4:	mov	x21, x1
   154b8:	mov	x2, x0
   154bc:	mov	w8, wzr
   154c0:	mov	w24, #0x1e                  	// #30
   154c4:	add	x9, x9, #0x31c
   154c8:	mov	x29, sp
   154cc:	sub	w10, w24, w8
   154d0:	add	w10, w8, w10, lsr #1
   154d4:	lsl	x11, x10, #4
   154d8:	ldr	w11, [x9, x11]
   154dc:	cmp	x11, x2
   154e0:	csel	w24, w24, w10, cc  // cc = lo, ul, last
   154e4:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   154e8:	cmp	w24, w8
   154ec:	b.ne	154cc <htab_create@@Base+0x34>  // b.any
   154f0:	mov	w8, w24
   154f4:	lsl	x8, x8, #4
   154f8:	ldr	w23, [x9, x8]
   154fc:	cmp	x23, x2
   15500:	b.cc	15578 <htab_create@@Base+0xe0>  // b.lo, b.ul, b.last
   15504:	mov	w0, #0x1                   	// #1
   15508:	mov	w1, #0x70                  	// #112
   1550c:	bl	51d0 <xcalloc@plt>
   15510:	mov	x22, x0
   15514:	cbz	x0, 15560 <htab_create@@Base+0xc8>
   15518:	mov	w1, #0x8                   	// #8
   1551c:	mov	x0, x23
   15520:	bl	51d0 <xcalloc@plt>
   15524:	str	x0, [x22, #24]
   15528:	cbz	x0, 15554 <htab_create@@Base+0xbc>
   1552c:	str	x23, [x22, #32]
   15530:	str	w24, [x22, #104]
   15534:	stp	x21, x20, [x22]
   15538:	str	x19, [x22, #16]
   1553c:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15540:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
   15544:	ldr	x8, [x8, #3872]
   15548:	ldr	x9, [x9, #3384]
   1554c:	stp	x8, x9, [x22, #64]
   15550:	b	15560 <htab_create@@Base+0xc8>
   15554:	mov	x0, x22
   15558:	bl	4f00 <free@plt>
   1555c:	mov	x22, xzr
   15560:	mov	x0, x22
   15564:	ldp	x20, x19, [sp, #48]
   15568:	ldp	x22, x21, [sp, #32]
   1556c:	ldp	x24, x23, [sp, #16]
   15570:	ldp	x29, x30, [sp], #64
   15574:	ret
   15578:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   1557c:	ldr	x8, [x8, #3968]
   15580:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15584:	add	x1, x1, #0x4fc
   15588:	ldr	x0, [x8]
   1558c:	bl	4e60 <fprintf@plt>
   15590:	bl	5190 <abort@plt>

0000000000015594 <htab_try_create@@Base>:
   15594:	stp	x29, x30, [sp, #-64]!
   15598:	adrp	x9, 17000 <xexit@@Base+0xb84>
   1559c:	stp	x24, x23, [sp, #16]
   155a0:	stp	x22, x21, [sp, #32]
   155a4:	stp	x20, x19, [sp, #48]
   155a8:	mov	x19, x3
   155ac:	mov	x20, x2
   155b0:	mov	x21, x1
   155b4:	mov	x2, x0
   155b8:	mov	w8, wzr
   155bc:	mov	w24, #0x1e                  	// #30
   155c0:	add	x9, x9, #0x31c
   155c4:	mov	x29, sp
   155c8:	sub	w10, w24, w8
   155cc:	add	w10, w8, w10, lsr #1
   155d0:	lsl	x11, x10, #4
   155d4:	ldr	w11, [x9, x11]
   155d8:	cmp	x11, x2
   155dc:	csel	w24, w24, w10, cc  // cc = lo, ul, last
   155e0:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   155e4:	cmp	w24, w8
   155e8:	b.ne	155c8 <htab_try_create@@Base+0x34>  // b.any
   155ec:	mov	w8, w24
   155f0:	lsl	x8, x8, #4
   155f4:	ldr	w23, [x9, x8]
   155f8:	cmp	x23, x2
   155fc:	b.cc	15674 <htab_try_create@@Base+0xe0>  // b.lo, b.ul, b.last
   15600:	mov	w0, #0x1                   	// #1
   15604:	mov	w1, #0x70                  	// #112
   15608:	bl	4e00 <calloc@plt>
   1560c:	mov	x22, x0
   15610:	cbz	x0, 1565c <htab_try_create@@Base+0xc8>
   15614:	mov	w1, #0x8                   	// #8
   15618:	mov	x0, x23
   1561c:	bl	4e00 <calloc@plt>
   15620:	str	x0, [x22, #24]
   15624:	cbz	x0, 15650 <htab_try_create@@Base+0xbc>
   15628:	str	x23, [x22, #32]
   1562c:	str	w24, [x22, #104]
   15630:	stp	x21, x20, [x22]
   15634:	str	x19, [x22, #16]
   15638:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   1563c:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
   15640:	ldr	x8, [x8, #3248]
   15644:	ldr	x9, [x9, #3384]
   15648:	stp	x8, x9, [x22, #64]
   1564c:	b	1565c <htab_try_create@@Base+0xc8>
   15650:	mov	x0, x22
   15654:	bl	4f00 <free@plt>
   15658:	mov	x22, xzr
   1565c:	mov	x0, x22
   15660:	ldp	x20, x19, [sp, #48]
   15664:	ldp	x22, x21, [sp, #32]
   15668:	ldp	x24, x23, [sp, #16]
   1566c:	ldp	x29, x30, [sp], #64
   15670:	ret
   15674:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15678:	ldr	x8, [x8, #3968]
   1567c:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15680:	add	x1, x1, #0x4fc
   15684:	ldr	x0, [x8]
   15688:	bl	4e60 <fprintf@plt>
   1568c:	bl	5190 <abort@plt>

0000000000015690 <htab_delete@@Base>:
   15690:	stp	x29, x30, [sp, #-48]!
   15694:	str	x21, [sp, #16]
   15698:	stp	x20, x19, [sp, #32]
   1569c:	ldp	x8, x20, [x0, #16]
   156a0:	mov	x19, x0
   156a4:	mov	x29, sp
   156a8:	cbz	x8, 156b8 <htab_delete@@Base+0x28>
   156ac:	ldr	w8, [x19, #32]
   156b0:	subs	w21, w8, #0x1
   156b4:	b.pl	156e8 <htab_delete@@Base+0x58>  // b.nfrst
   156b8:	ldr	x8, [x19, #72]
   156bc:	cbz	x8, 15700 <htab_delete@@Base+0x70>
   156c0:	mov	x0, x20
   156c4:	blr	x8
   156c8:	ldr	x1, [x19, #72]
   156cc:	mov	x0, x19
   156d0:	ldp	x20, x19, [sp, #32]
   156d4:	ldr	x21, [sp, #16]
   156d8:	ldp	x29, x30, [sp], #48
   156dc:	br	x1
   156e0:	subs	w21, w21, #0x1
   156e4:	b.mi	156b8 <htab_delete@@Base+0x28>  // b.first
   156e8:	ldr	x0, [x20, w21, uxtw #3]
   156ec:	cmp	x0, #0x2
   156f0:	b.cc	156e0 <htab_delete@@Base+0x50>  // b.lo, b.ul, b.last
   156f4:	ldr	x8, [x19, #16]
   156f8:	blr	x8
   156fc:	b	156e0 <htab_delete@@Base+0x50>
   15700:	ldr	x8, [x19, #96]
   15704:	cbz	x8, 15730 <htab_delete@@Base+0xa0>
   15708:	ldr	x0, [x19, #80]
   1570c:	mov	x1, x20
   15710:	blr	x8
   15714:	ldr	x2, [x19, #96]
   15718:	ldr	x0, [x19, #80]
   1571c:	mov	x1, x19
   15720:	ldp	x20, x19, [sp, #32]
   15724:	ldr	x21, [sp, #16]
   15728:	ldp	x29, x30, [sp], #48
   1572c:	br	x2
   15730:	ldp	x20, x19, [sp, #32]
   15734:	ldr	x21, [sp, #16]
   15738:	ldp	x29, x30, [sp], #48
   1573c:	ret

0000000000015740 <htab_empty@@Base>:
   15740:	stp	x29, x30, [sp, #-48]!
   15744:	stp	x22, x21, [sp, #16]
   15748:	stp	x20, x19, [sp, #32]
   1574c:	ldp	x8, x20, [x0, #16]
   15750:	ldr	x21, [x0, #32]
   15754:	mov	x19, x0
   15758:	mov	x29, sp
   1575c:	cbz	x8, 15768 <htab_empty@@Base+0x28>
   15760:	subs	w22, w21, #0x1
   15764:	b.pl	157c8 <htab_empty@@Base+0x88>  // b.nfrst
   15768:	cmp	x21, #0x20, lsl #12
   1576c:	b.ls	157e0 <htab_empty@@Base+0xa0>  // b.plast
   15770:	mov	w8, wzr
   15774:	mov	w21, #0x1e                  	// #30
   15778:	sub	w9, w21, w8
   1577c:	add	w9, w8, w9, lsr #1
   15780:	cmp	w9, #0x5
   15784:	csel	w21, w21, w9, cc  // cc = lo, ul, last
   15788:	csinc	w8, w8, w9, cs  // cs = hs, nlast
   1578c:	cmp	w21, w8
   15790:	b.ne	15778 <htab_empty@@Base+0x38>  // b.any
   15794:	cmp	w21, #0x4
   15798:	b.ls	15850 <htab_empty@@Base+0x110>  // b.plast
   1579c:	adrp	x10, 17000 <xexit@@Base+0xb84>
   157a0:	sbfiz	x9, x21, #4, #32
   157a4:	add	x10, x10, #0x31c
   157a8:	ldr	x8, [x19, #72]
   157ac:	ldrsw	x20, [x10, x9]
   157b0:	cbz	x8, 157f4 <htab_empty@@Base+0xb4>
   157b4:	ldr	x0, [x19, #24]
   157b8:	blr	x8
   157bc:	b	15808 <htab_empty@@Base+0xc8>
   157c0:	subs	w22, w22, #0x1
   157c4:	b.mi	15768 <htab_empty@@Base+0x28>  // b.first
   157c8:	ldr	x0, [x20, w22, uxtw #3]
   157cc:	cmp	x0, #0x2
   157d0:	b.cc	157c0 <htab_empty@@Base+0x80>  // b.lo, b.ul, b.last
   157d4:	ldr	x8, [x19, #16]
   157d8:	blr	x8
   157dc:	b	157c0 <htab_empty@@Base+0x80>
   157e0:	lsl	x2, x21, #3
   157e4:	mov	x0, x20
   157e8:	mov	w1, wzr
   157ec:	bl	4f10 <memset@plt>
   157f0:	b	1583c <htab_empty@@Base+0xfc>
   157f4:	ldr	x8, [x19, #96]
   157f8:	cbz	x8, 15808 <htab_empty@@Base+0xc8>
   157fc:	ldr	x0, [x19, #80]
   15800:	ldr	x1, [x19, #24]
   15804:	blr	x8
   15808:	ldr	x8, [x19, #88]
   1580c:	cbz	x8, 15824 <htab_empty@@Base+0xe4>
   15810:	ldr	x0, [x19, #80]
   15814:	mov	w2, #0x8                   	// #8
   15818:	mov	x1, x20
   1581c:	blr	x8
   15820:	b	15834 <htab_empty@@Base+0xf4>
   15824:	ldr	x8, [x19, #64]
   15828:	mov	w1, #0x8                   	// #8
   1582c:	mov	x0, x20
   15830:	blr	x8
   15834:	stp	x0, x20, [x19, #24]
   15838:	str	w21, [x19, #104]
   1583c:	stp	xzr, xzr, [x19, #40]
   15840:	ldp	x20, x19, [sp, #32]
   15844:	ldp	x22, x21, [sp, #16]
   15848:	ldp	x29, x30, [sp], #48
   1584c:	ret
   15850:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15854:	ldr	x8, [x8, #3968]
   15858:	adrp	x1, 17000 <xexit@@Base+0xb84>
   1585c:	add	x1, x1, #0x4fc
   15860:	mov	w2, #0x80                  	// #128
   15864:	ldr	x0, [x8]
   15868:	bl	4e60 <fprintf@plt>
   1586c:	bl	5190 <abort@plt>

0000000000015870 <htab_find_with_hash@@Base>:
   15870:	stp	x29, x30, [sp, #-80]!
   15874:	stp	x26, x25, [sp, #16]
   15878:	stp	x24, x23, [sp, #32]
   1587c:	stp	x22, x21, [sp, #48]
   15880:	stp	x20, x19, [sp, #64]
   15884:	ldr	w8, [x0, #104]
   15888:	adrp	x25, 17000 <xexit@@Base+0xb84>
   1588c:	add	x25, x25, #0x31c
   15890:	ldr	w9, [x0, #56]
   15894:	add	x11, x25, x8, lsl #4
   15898:	ldp	w10, w12, [x11]
   1589c:	mov	w26, w2
   158a0:	add	w9, w9, #0x1
   158a4:	str	w9, [x0, #56]
   158a8:	ldr	w9, [x11, #12]
   158ac:	mul	x11, x12, x26
   158b0:	lsr	x11, x11, #32
   158b4:	sub	w12, w2, w11
   158b8:	ldr	x13, [x0, #24]
   158bc:	add	w11, w11, w12, lsr #1
   158c0:	lsr	w11, w11, w9
   158c4:	msub	w24, w11, w10, w2
   158c8:	ldr	x22, [x13, w24, uxtw #3]
   158cc:	mov	x29, sp
   158d0:	cbz	x22, 1597c <htab_find_with_hash@@Base+0x10c>
   158d4:	ldr	x23, [x0, #32]
   158d8:	mov	w21, w2
   158dc:	mov	x19, x0
   158e0:	mov	x20, x1
   158e4:	cmp	x22, #0x1
   158e8:	b.eq	15910 <htab_find_with_hash@@Base+0xa0>  // b.none
   158ec:	ldr	x8, [x19, #8]
   158f0:	mov	x0, x22
   158f4:	mov	x1, x20
   158f8:	blr	x8
   158fc:	cbnz	w0, 1597c <htab_find_with_hash@@Base+0x10c>
   15900:	ldr	w8, [x19, #104]
   15904:	add	x9, x25, x8, lsl #4
   15908:	ldr	w10, [x9]
   1590c:	ldr	w9, [x9, #12]
   15910:	add	x8, x25, x8, lsl #4
   15914:	ldr	w8, [x8, #8]
   15918:	sub	w10, w10, #0x2
   1591c:	mul	x8, x8, x26
   15920:	lsr	x8, x8, #32
   15924:	sub	w11, w21, w8
   15928:	add	w8, w8, w11, lsr #1
   1592c:	lsr	w8, w8, w9
   15930:	msub	w8, w8, w10, w21
   15934:	add	w21, w8, #0x1
   15938:	ldr	w8, [x19, #60]
   1593c:	add	w9, w21, w24
   15940:	ldr	x10, [x19, #24]
   15944:	cmp	x23, x9
   15948:	csel	w11, wzr, w23, hi  // hi = pmore
   1594c:	add	w8, w8, #0x1
   15950:	str	w8, [x19, #60]
   15954:	sub	w24, w9, w11
   15958:	ldr	x22, [x10, w24, uxtw #3]
   1595c:	cmp	x22, #0x1
   15960:	b.eq	15938 <htab_find_with_hash@@Base+0xc8>  // b.none
   15964:	cbz	x22, 1597c <htab_find_with_hash@@Base+0x10c>
   15968:	ldr	x8, [x19, #8]
   1596c:	mov	x0, x22
   15970:	mov	x1, x20
   15974:	blr	x8
   15978:	cbz	w0, 15938 <htab_find_with_hash@@Base+0xc8>
   1597c:	mov	x0, x22
   15980:	ldp	x20, x19, [sp, #64]
   15984:	ldp	x22, x21, [sp, #48]
   15988:	ldp	x24, x23, [sp, #32]
   1598c:	ldp	x26, x25, [sp, #16]
   15990:	ldp	x29, x30, [sp], #80
   15994:	ret

0000000000015998 <htab_find@@Base>:
   15998:	stp	x29, x30, [sp, #-32]!
   1599c:	stp	x20, x19, [sp, #16]
   159a0:	ldr	x8, [x0]
   159a4:	mov	x19, x0
   159a8:	mov	x0, x1
   159ac:	mov	x29, sp
   159b0:	mov	x20, x1
   159b4:	blr	x8
   159b8:	mov	w2, w0
   159bc:	mov	x0, x19
   159c0:	mov	x1, x20
   159c4:	ldp	x20, x19, [sp, #16]
   159c8:	ldp	x29, x30, [sp], #32
   159cc:	b	51f0 <htab_find_with_hash@plt>

00000000000159d0 <htab_find_slot_with_hash@@Base>:
   159d0:	stp	x29, x30, [sp, #-96]!
   159d4:	stp	x26, x25, [sp, #32]
   159d8:	stp	x24, x23, [sp, #48]
   159dc:	stp	x22, x21, [sp, #64]
   159e0:	stp	x20, x19, [sp, #80]
   159e4:	ldr	x24, [x0, #32]
   159e8:	mov	w20, w3
   159ec:	mov	w23, w2
   159f0:	mov	x19, x0
   159f4:	cmp	w3, #0x1
   159f8:	mov	x21, x1
   159fc:	str	x27, [sp, #16]
   15a00:	mov	x29, sp
   15a04:	b.ne	15a28 <htab_find_slot_with_hash@@Base+0x58>  // b.any
   15a08:	ldr	x8, [x19, #40]
   15a0c:	add	x9, x24, x24, lsl #1
   15a10:	cmp	x9, x8, lsl #2
   15a14:	b.hi	15a28 <htab_find_slot_with_hash@@Base+0x58>  // b.pmore
   15a18:	mov	x0, x19
   15a1c:	bl	15b90 <htab_find_slot_with_hash@@Base+0x1c0>
   15a20:	cbz	w0, 15abc <htab_find_slot_with_hash@@Base+0xec>
   15a24:	ldr	x24, [x19, #32]
   15a28:	ldr	w8, [x19, #104]
   15a2c:	adrp	x26, 17000 <xexit@@Base+0xb84>
   15a30:	add	x26, x26, #0x31c
   15a34:	ldr	w9, [x19, #56]
   15a38:	add	x12, x26, x8, lsl #4
   15a3c:	ldp	w11, w13, [x12]
   15a40:	mov	w27, w23
   15a44:	add	w14, w9, #0x1
   15a48:	ldr	w9, [x12, #12]
   15a4c:	mul	x12, x13, x27
   15a50:	lsr	x12, x12, #32
   15a54:	ldr	x10, [x19, #24]
   15a58:	sub	w13, w23, w12
   15a5c:	add	w12, w12, w13, lsr #1
   15a60:	lsr	w12, w12, w9
   15a64:	msub	w25, w12, w11, w23
   15a68:	str	w14, [x19, #56]
   15a6c:	add	x22, x10, w25, uxtw #3
   15a70:	ldr	x0, [x22]
   15a74:	cbz	x0, 15a9c <htab_find_slot_with_hash@@Base+0xcc>
   15a78:	cmp	x0, #0x1
   15a7c:	b.eq	15ad8 <htab_find_slot_with_hash@@Base+0x108>  // b.none
   15a80:	ldr	x8, [x19, #8]
   15a84:	mov	x1, x21
   15a88:	blr	x8
   15a8c:	cbz	w0, 15ac4 <htab_find_slot_with_hash@@Base+0xf4>
   15a90:	ldr	x8, [x19, #24]
   15a94:	add	x22, x8, x25, lsl #3
   15a98:	b	15b70 <htab_find_slot_with_hash@@Base+0x1a0>
   15a9c:	mov	x22, xzr
   15aa0:	cbz	w20, 15abc <htab_find_slot_with_hash@@Base+0xec>
   15aa4:	cbz	x22, 15b60 <htab_find_slot_with_hash@@Base+0x190>
   15aa8:	ldr	x8, [x19, #48]
   15aac:	sub	x8, x8, #0x1
   15ab0:	str	x8, [x19, #48]
   15ab4:	str	xzr, [x22]
   15ab8:	b	15b70 <htab_find_slot_with_hash@@Base+0x1a0>
   15abc:	mov	x22, xzr
   15ac0:	b	15b70 <htab_find_slot_with_hash@@Base+0x1a0>
   15ac4:	ldr	w8, [x19, #104]
   15ac8:	mov	x22, xzr
   15acc:	add	x9, x26, x8, lsl #4
   15ad0:	ldr	w11, [x9]
   15ad4:	ldr	w9, [x9, #12]
   15ad8:	add	x8, x26, x8, lsl #4
   15adc:	ldr	w8, [x8, #8]
   15ae0:	sub	w10, w11, #0x2
   15ae4:	mul	x8, x8, x27
   15ae8:	lsr	x8, x8, #32
   15aec:	sub	w11, w23, w8
   15af0:	add	w8, w8, w11, lsr #1
   15af4:	lsr	w8, w8, w9
   15af8:	msub	w8, w8, w10, w23
   15afc:	add	w23, w8, #0x1
   15b00:	ldr	w8, [x19, #60]
   15b04:	add	w9, w23, w25
   15b08:	ldr	x10, [x19, #24]
   15b0c:	cmp	x24, x9
   15b10:	csel	w11, wzr, w24, hi  // hi = pmore
   15b14:	add	w8, w8, #0x1
   15b18:	str	w8, [x19, #60]
   15b1c:	sub	w25, w9, w11
   15b20:	ldr	x0, [x10, w25, uxtw #3]
   15b24:	cbz	x0, 15aa0 <htab_find_slot_with_hash@@Base+0xd0>
   15b28:	cmp	x0, #0x1
   15b2c:	b.eq	15b44 <htab_find_slot_with_hash@@Base+0x174>  // b.none
   15b30:	ldr	x8, [x19, #8]
   15b34:	mov	x1, x21
   15b38:	blr	x8
   15b3c:	cbz	w0, 15b00 <htab_find_slot_with_hash@@Base+0x130>
   15b40:	b	15b54 <htab_find_slot_with_hash@@Base+0x184>
   15b44:	add	x8, x10, w25, uxtw #3
   15b48:	cmp	x22, #0x0
   15b4c:	csel	x22, x8, x22, eq  // eq = none
   15b50:	b	15b00 <htab_find_slot_with_hash@@Base+0x130>
   15b54:	ldr	x8, [x19, #24]
   15b58:	add	x22, x8, w25, uxtw #3
   15b5c:	b	15b70 <htab_find_slot_with_hash@@Base+0x1a0>
   15b60:	ldr	x8, [x19, #40]
   15b64:	add	x22, x10, w25, uxtw #3
   15b68:	add	x8, x8, #0x1
   15b6c:	str	x8, [x19, #40]
   15b70:	mov	x0, x22
   15b74:	ldp	x20, x19, [sp, #80]
   15b78:	ldp	x22, x21, [sp, #64]
   15b7c:	ldp	x24, x23, [sp, #48]
   15b80:	ldp	x26, x25, [sp, #32]
   15b84:	ldr	x27, [sp, #16]
   15b88:	ldp	x29, x30, [sp], #96
   15b8c:	ret
   15b90:	stp	x29, x30, [sp, #-64]!
   15b94:	stp	x24, x23, [sp, #16]
   15b98:	stp	x22, x21, [sp, #32]
   15b9c:	stp	x20, x19, [sp, #48]
   15ba0:	ldp	x8, x9, [x0, #40]
   15ba4:	ldp	x19, x23, [x0, #24]
   15ba8:	adrp	x22, 17000 <xexit@@Base+0xb84>
   15bac:	mov	x20, x0
   15bb0:	sub	x8, x8, x9
   15bb4:	lsl	x2, x8, #1
   15bb8:	cmp	x2, x23
   15bbc:	add	x22, x22, #0x31c
   15bc0:	mov	x29, sp
   15bc4:	b.hi	15be4 <htab_find_slot_with_hash@@Base+0x214>  // b.pmore
   15bc8:	ldr	w24, [x20, #104]
   15bcc:	cmp	x23, #0x21
   15bd0:	b.cc	15c44 <htab_find_slot_with_hash@@Base+0x274>  // b.lo, b.ul, b.last
   15bd4:	lsl	x8, x8, #3
   15bd8:	cmp	x8, x23
   15bdc:	mov	x21, x23
   15be0:	b.cs	15c24 <htab_find_slot_with_hash@@Base+0x254>  // b.hs, b.nlast
   15be4:	mov	w8, wzr
   15be8:	mov	w24, #0x1e                  	// #30
   15bec:	sub	w9, w24, w8
   15bf0:	add	w9, w8, w9, lsr #1
   15bf4:	lsl	x10, x9, #4
   15bf8:	ldr	w10, [x22, x10]
   15bfc:	cmp	x2, x10
   15c00:	csel	w24, w24, w9, hi  // hi = pmore
   15c04:	csinc	w8, w8, w9, ls  // ls = plast
   15c08:	cmp	w24, w8
   15c0c:	b.ne	15bec <htab_find_slot_with_hash@@Base+0x21c>  // b.any
   15c10:	mov	w8, w24
   15c14:	lsl	x8, x8, #4
   15c18:	ldr	w21, [x22, x8]
   15c1c:	cmp	x2, x21
   15c20:	b.hi	15d84 <htab_find_slot_with_hash@@Base+0x3b4>  // b.pmore
   15c24:	ldr	x8, [x20, #88]
   15c28:	cbz	x8, 15c50 <htab_find_slot_with_hash@@Base+0x280>
   15c2c:	ldr	x0, [x20, #80]
   15c30:	mov	w2, #0x8                   	// #8
   15c34:	mov	x1, x21
   15c38:	blr	x8
   15c3c:	cbnz	x0, 15c64 <htab_find_slot_with_hash@@Base+0x294>
   15c40:	b	15d70 <htab_find_slot_with_hash@@Base+0x3a0>
   15c44:	mov	x21, x23
   15c48:	ldr	x8, [x20, #88]
   15c4c:	cbnz	x8, 15c2c <htab_find_slot_with_hash@@Base+0x25c>
   15c50:	ldr	x8, [x20, #64]
   15c54:	mov	w1, #0x8                   	// #8
   15c58:	mov	x0, x21
   15c5c:	blr	x8
   15c60:	cbz	x0, 15d70 <htab_find_slot_with_hash@@Base+0x3a0>
   15c64:	ldp	x9, x8, [x20, #40]
   15c68:	add	x23, x19, x23, lsl #3
   15c6c:	str	w24, [x20, #104]
   15c70:	mov	x24, x19
   15c74:	sub	x8, x9, x8
   15c78:	stp	x0, x21, [x20, #24]
   15c7c:	stp	x8, xzr, [x20, #40]
   15c80:	b	15c94 <htab_find_slot_with_hash@@Base+0x2c4>
   15c84:	str	x21, [x14]
   15c88:	add	x24, x24, #0x8
   15c8c:	cmp	x24, x23
   15c90:	b.cs	15d44 <htab_find_slot_with_hash@@Base+0x374>  // b.hs, b.nlast
   15c94:	ldr	x21, [x24]
   15c98:	cmp	x21, #0x2
   15c9c:	b.cc	15c88 <htab_find_slot_with_hash@@Base+0x2b8>  // b.lo, b.ul, b.last
   15ca0:	ldr	x8, [x20]
   15ca4:	mov	x0, x21
   15ca8:	blr	x8
   15cac:	ldr	w11, [x20, #104]
   15cb0:	mov	w12, w0
   15cb4:	ldr	x8, [x20, #24]
   15cb8:	add	x9, x22, x11, lsl #4
   15cbc:	ldp	w13, w14, [x9]
   15cc0:	ldr	w10, [x9, #12]
   15cc4:	mul	x9, x14, x12
   15cc8:	lsr	x9, x9, #32
   15ccc:	sub	w14, w0, w9
   15cd0:	add	w9, w9, w14, lsr #1
   15cd4:	lsr	w9, w9, w10
   15cd8:	msub	w9, w9, w13, w0
   15cdc:	add	x14, x8, w9, uxtw #3
   15ce0:	ldr	x15, [x14]
   15ce4:	cbz	x15, 15c84 <htab_find_slot_with_hash@@Base+0x2b4>
   15ce8:	cmp	x15, #0x1
   15cec:	b.eq	15d40 <htab_find_slot_with_hash@@Base+0x370>  // b.none
   15cf0:	add	x11, x22, x11, lsl #4
   15cf4:	ldr	w14, [x11, #8]
   15cf8:	ldr	x11, [x20, #32]
   15cfc:	sub	w13, w13, #0x2
   15d00:	mul	x14, x14, x12
   15d04:	lsr	x14, x14, #32
   15d08:	sub	w15, w12, w14
   15d0c:	add	w14, w14, w15, lsr #1
   15d10:	lsr	w10, w14, w10
   15d14:	msub	w10, w10, w13, w12
   15d18:	add	w10, w10, #0x1
   15d1c:	add	w9, w10, w9
   15d20:	cmp	x11, x9
   15d24:	csel	w12, wzr, w11, hi  // hi = pmore
   15d28:	sub	w9, w9, w12
   15d2c:	add	x14, x8, w9, uxtw #3
   15d30:	ldr	x12, [x14]
   15d34:	cbz	x12, 15c84 <htab_find_slot_with_hash@@Base+0x2b4>
   15d38:	cmp	x12, #0x1
   15d3c:	b.ne	15d1c <htab_find_slot_with_hash@@Base+0x34c>  // b.any
   15d40:	bl	5190 <abort@plt>
   15d44:	ldr	x8, [x20, #72]
   15d48:	cbz	x8, 15d58 <htab_find_slot_with_hash@@Base+0x388>
   15d4c:	mov	x0, x19
   15d50:	blr	x8
   15d54:	b	15d6c <htab_find_slot_with_hash@@Base+0x39c>
   15d58:	ldr	x8, [x20, #96]
   15d5c:	cbz	x8, 15d6c <htab_find_slot_with_hash@@Base+0x39c>
   15d60:	ldr	x0, [x20, #80]
   15d64:	mov	x1, x19
   15d68:	blr	x8
   15d6c:	mov	w0, #0x1                   	// #1
   15d70:	ldp	x20, x19, [sp, #48]
   15d74:	ldp	x22, x21, [sp, #32]
   15d78:	ldp	x24, x23, [sp, #16]
   15d7c:	ldp	x29, x30, [sp], #64
   15d80:	ret
   15d84:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   15d88:	ldr	x8, [x8, #3968]
   15d8c:	adrp	x1, 17000 <xexit@@Base+0xb84>
   15d90:	add	x1, x1, #0x4fc
   15d94:	ldr	x0, [x8]
   15d98:	bl	4e60 <fprintf@plt>
   15d9c:	bl	5190 <abort@plt>

0000000000015da0 <htab_find_slot@@Base>:
   15da0:	stp	x29, x30, [sp, #-48]!
   15da4:	stp	x20, x19, [sp, #32]
   15da8:	ldr	x8, [x0]
   15dac:	mov	x20, x0
   15db0:	mov	x0, x1
   15db4:	str	x21, [sp, #16]
   15db8:	mov	x29, sp
   15dbc:	mov	w19, w2
   15dc0:	mov	x21, x1
   15dc4:	blr	x8
   15dc8:	mov	w2, w0
   15dcc:	mov	x0, x20
   15dd0:	mov	x1, x21
   15dd4:	mov	w3, w19
   15dd8:	ldp	x20, x19, [sp, #32]
   15ddc:	ldr	x21, [sp, #16]
   15de0:	ldp	x29, x30, [sp], #48
   15de4:	b	4f60 <htab_find_slot_with_hash@plt>

0000000000015de8 <htab_remove_elt@@Base>:
   15de8:	stp	x29, x30, [sp, #-32]!
   15dec:	stp	x20, x19, [sp, #16]
   15df0:	ldr	x8, [x0]
   15df4:	mov	x19, x0
   15df8:	mov	x0, x1
   15dfc:	mov	x29, sp
   15e00:	mov	x20, x1
   15e04:	blr	x8
   15e08:	mov	w2, w0
   15e0c:	mov	x0, x19
   15e10:	mov	x1, x20
   15e14:	mov	w3, wzr
   15e18:	bl	4f60 <htab_find_slot_with_hash@plt>
   15e1c:	cbz	x0, 15e48 <htab_remove_elt@@Base+0x60>
   15e20:	ldr	x8, [x19, #16]
   15e24:	mov	x20, x0
   15e28:	cbz	x8, 15e34 <htab_remove_elt@@Base+0x4c>
   15e2c:	ldr	x0, [x20]
   15e30:	blr	x8
   15e34:	mov	w8, #0x1                   	// #1
   15e38:	str	x8, [x20]
   15e3c:	ldr	x8, [x19, #48]
   15e40:	add	x8, x8, #0x1
   15e44:	str	x8, [x19, #48]
   15e48:	ldp	x20, x19, [sp, #16]
   15e4c:	ldp	x29, x30, [sp], #32
   15e50:	ret

0000000000015e54 <htab_remove_elt_with_hash@@Base>:
   15e54:	stp	x29, x30, [sp, #-32]!
   15e58:	mov	w3, wzr
   15e5c:	stp	x20, x19, [sp, #16]
   15e60:	mov	x29, sp
   15e64:	mov	x19, x0
   15e68:	bl	4f60 <htab_find_slot_with_hash@plt>
   15e6c:	cbz	x0, 15e98 <htab_remove_elt_with_hash@@Base+0x44>
   15e70:	ldr	x8, [x19, #16]
   15e74:	mov	x20, x0
   15e78:	cbz	x8, 15e84 <htab_remove_elt_with_hash@@Base+0x30>
   15e7c:	ldr	x0, [x20]
   15e80:	blr	x8
   15e84:	mov	w8, #0x1                   	// #1
   15e88:	str	x8, [x20]
   15e8c:	ldr	x8, [x19, #48]
   15e90:	add	x8, x8, #0x1
   15e94:	str	x8, [x19, #48]
   15e98:	ldp	x20, x19, [sp, #16]
   15e9c:	ldp	x29, x30, [sp], #32
   15ea0:	ret

0000000000015ea4 <htab_clear_slot@@Base>:
   15ea4:	stp	x29, x30, [sp, #-32]!
   15ea8:	stp	x20, x19, [sp, #16]
   15eac:	ldr	x8, [x0, #24]
   15eb0:	mov	x29, sp
   15eb4:	cmp	x8, x1
   15eb8:	b.hi	15f0c <htab_clear_slot@@Base+0x68>  // b.pmore
   15ebc:	ldr	x9, [x0, #32]
   15ec0:	mov	x19, x0
   15ec4:	mov	x20, x1
   15ec8:	add	x8, x8, x9, lsl #3
   15ecc:	cmp	x8, x1
   15ed0:	b.ls	15f0c <htab_clear_slot@@Base+0x68>  // b.plast
   15ed4:	ldr	x0, [x20]
   15ed8:	cmp	x0, #0x1
   15edc:	b.ls	15f0c <htab_clear_slot@@Base+0x68>  // b.plast
   15ee0:	ldr	x8, [x19, #16]
   15ee4:	cbz	x8, 15eec <htab_clear_slot@@Base+0x48>
   15ee8:	blr	x8
   15eec:	mov	w8, #0x1                   	// #1
   15ef0:	str	x8, [x20]
   15ef4:	ldr	x8, [x19, #48]
   15ef8:	add	x8, x8, #0x1
   15efc:	str	x8, [x19, #48]
   15f00:	ldp	x20, x19, [sp, #16]
   15f04:	ldp	x29, x30, [sp], #32
   15f08:	ret
   15f0c:	bl	5190 <abort@plt>

0000000000015f10 <htab_traverse_noresize@@Base>:
   15f10:	stp	x29, x30, [sp, #-48]!
   15f14:	stp	x22, x21, [sp, #16]
   15f18:	stp	x20, x19, [sp, #32]
   15f1c:	ldp	x21, x8, [x0, #24]
   15f20:	mov	x19, x2
   15f24:	mov	x20, x1
   15f28:	mov	x29, sp
   15f2c:	add	x22, x21, x8, lsl #3
   15f30:	b	15f40 <htab_traverse_noresize@@Base+0x30>
   15f34:	add	x21, x21, #0x8
   15f38:	cmp	x21, x22
   15f3c:	b.cs	15f5c <htab_traverse_noresize@@Base+0x4c>  // b.hs, b.nlast
   15f40:	ldr	x8, [x21]
   15f44:	cmp	x8, #0x2
   15f48:	b.cc	15f34 <htab_traverse_noresize@@Base+0x24>  // b.lo, b.ul, b.last
   15f4c:	mov	x0, x21
   15f50:	mov	x1, x19
   15f54:	blr	x20
   15f58:	cbnz	w0, 15f34 <htab_traverse_noresize@@Base+0x24>
   15f5c:	ldp	x20, x19, [sp, #32]
   15f60:	ldp	x22, x21, [sp, #16]
   15f64:	ldp	x29, x30, [sp], #48
   15f68:	ret

0000000000015f6c <htab_traverse@@Base>:
   15f6c:	stp	x29, x30, [sp, #-48]!
   15f70:	stp	x22, x21, [sp, #16]
   15f74:	stp	x20, x19, [sp, #32]
   15f78:	ldr	x8, [x0, #32]
   15f7c:	mov	x19, x2
   15f80:	mov	x21, x0
   15f84:	mov	x20, x1
   15f88:	cmp	x8, #0x21
   15f8c:	mov	x29, sp
   15f90:	b.cc	15fb4 <htab_traverse@@Base+0x48>  // b.lo, b.ul, b.last
   15f94:	ldp	x9, x10, [x21, #40]
   15f98:	sub	x9, x9, x10
   15f9c:	lsl	x9, x9, #3
   15fa0:	cmp	x9, x8
   15fa4:	b.cs	15fb4 <htab_traverse@@Base+0x48>  // b.hs, b.nlast
   15fa8:	mov	x0, x21
   15fac:	bl	15b90 <htab_find_slot_with_hash@@Base+0x1c0>
   15fb0:	ldr	x8, [x21, #32]
   15fb4:	ldr	x21, [x21, #24]
   15fb8:	add	x22, x21, x8, lsl #3
   15fbc:	b	15fcc <htab_traverse@@Base+0x60>
   15fc0:	add	x21, x21, #0x8
   15fc4:	cmp	x21, x22
   15fc8:	b.cs	15fe8 <htab_traverse@@Base+0x7c>  // b.hs, b.nlast
   15fcc:	ldr	x8, [x21]
   15fd0:	cmp	x8, #0x2
   15fd4:	b.cc	15fc0 <htab_traverse@@Base+0x54>  // b.lo, b.ul, b.last
   15fd8:	mov	x0, x21
   15fdc:	mov	x1, x19
   15fe0:	blr	x20
   15fe4:	cbnz	w0, 15fc0 <htab_traverse@@Base+0x54>
   15fe8:	ldp	x20, x19, [sp, #32]
   15fec:	ldp	x22, x21, [sp, #16]
   15ff0:	ldp	x29, x30, [sp], #48
   15ff4:	ret

0000000000015ff8 <htab_collisions@@Base>:
   15ff8:	ldr	w8, [x0, #56]
   15ffc:	cbz	w8, 16014 <htab_collisions@@Base+0x1c>
   16000:	ldr	s0, [x0, #60]
   16004:	ucvtf	d1, w8
   16008:	ucvtf	d0, d0
   1600c:	fdiv	d0, d0, d1
   16010:	ret
   16014:	fmov	d0, xzr
   16018:	ret

000000000001601c <htab_hash_string@@Base>:
   1601c:	ldrb	w9, [x0]
   16020:	cbz	w9, 1604c <htab_hash_string@@Base+0x30>
   16024:	mov	x8, x0
   16028:	mov	w0, wzr
   1602c:	add	x8, x8, #0x1
   16030:	mov	w10, #0x43                  	// #67
   16034:	mul	w11, w0, w10
   16038:	add	w11, w11, w9, uxtb
   1603c:	ldrb	w9, [x8], #1
   16040:	sub	w0, w11, #0x71
   16044:	cbnz	w9, 16034 <htab_hash_string@@Base+0x18>
   16048:	ret
   1604c:	mov	w0, wzr
   16050:	ret

0000000000016054 <iterative_hash@@Base>:
   16054:	tst	x0, #0x3
   16058:	b.eq	1610c <iterative_hash@@Base+0xb8>  // b.none
   1605c:	mov	w8, #0x79b9                	// #31161
   16060:	cmp	w1, #0xc
   16064:	movk	w8, #0x9e37, lsl #16
   16068:	b.cc	161bc <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   1606c:	mov	w9, #0x79b9                	// #31161
   16070:	mov	w10, w1
   16074:	movk	w9, #0x9e37, lsl #16
   16078:	ldp	w11, w12, [x0]
   1607c:	sub	w10, w10, #0xc
   16080:	cmp	w10, #0xb
   16084:	add	w9, w11, w9
   16088:	ldr	w11, [x0, #8]
   1608c:	add	w8, w12, w8
   16090:	sub	w9, w9, w8
   16094:	add	x0, x0, #0xc
   16098:	add	w11, w11, w2
   1609c:	sub	w9, w9, w11
   160a0:	sub	w8, w8, w11
   160a4:	eor	w9, w9, w11, lsr #13
   160a8:	sub	w8, w8, w9
   160ac:	sub	w11, w11, w9
   160b0:	eor	w8, w8, w9, lsl #8
   160b4:	sub	w11, w11, w8
   160b8:	sub	w9, w9, w8
   160bc:	eor	w11, w11, w8, lsr #13
   160c0:	sub	w9, w9, w11
   160c4:	sub	w8, w8, w11
   160c8:	eor	w9, w9, w11, lsr #12
   160cc:	sub	w8, w8, w9
   160d0:	sub	w11, w11, w9
   160d4:	eor	w8, w8, w9, lsl #16
   160d8:	sub	w11, w11, w8
   160dc:	sub	w9, w9, w8
   160e0:	eor	w11, w11, w8, lsr #5
   160e4:	sub	w9, w9, w11
   160e8:	sub	w8, w8, w11
   160ec:	eor	w9, w9, w11, lsr #3
   160f0:	sub	w8, w8, w9
   160f4:	sub	w11, w11, w9
   160f8:	eor	w8, w8, w9, lsl #10
   160fc:	sub	w11, w11, w8
   16100:	eor	w2, w11, w8, lsr #15
   16104:	b.hi	16078 <iterative_hash@@Base+0x24>  // b.pmore
   16108:	b	161c8 <iterative_hash@@Base+0x174>
   1610c:	mov	w8, #0x79b9                	// #31161
   16110:	cmp	w1, #0xc
   16114:	movk	w8, #0x9e37, lsl #16
   16118:	b.cc	161bc <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   1611c:	mov	w9, #0x79b9                	// #31161
   16120:	mov	w10, w1
   16124:	movk	w9, #0x9e37, lsl #16
   16128:	ldp	w11, w12, [x0]
   1612c:	sub	w10, w10, #0xc
   16130:	cmp	w10, #0xb
   16134:	add	w9, w11, w9
   16138:	ldr	w11, [x0, #8]
   1613c:	add	w8, w12, w8
   16140:	sub	w9, w9, w8
   16144:	add	x0, x0, #0xc
   16148:	add	w11, w11, w2
   1614c:	sub	w9, w9, w11
   16150:	sub	w8, w8, w11
   16154:	eor	w9, w9, w11, lsr #13
   16158:	sub	w8, w8, w9
   1615c:	sub	w11, w11, w9
   16160:	eor	w8, w8, w9, lsl #8
   16164:	sub	w11, w11, w8
   16168:	sub	w9, w9, w8
   1616c:	eor	w11, w11, w8, lsr #13
   16170:	sub	w9, w9, w11
   16174:	sub	w8, w8, w11
   16178:	eor	w9, w9, w11, lsr #12
   1617c:	sub	w8, w8, w9
   16180:	sub	w11, w11, w9
   16184:	eor	w8, w8, w9, lsl #16
   16188:	sub	w11, w11, w8
   1618c:	sub	w9, w9, w8
   16190:	eor	w11, w11, w8, lsr #5
   16194:	sub	w9, w9, w11
   16198:	sub	w8, w8, w11
   1619c:	eor	w9, w9, w11, lsr #3
   161a0:	sub	w8, w8, w9
   161a4:	sub	w11, w11, w9
   161a8:	eor	w8, w8, w9, lsl #10
   161ac:	sub	w11, w11, w8
   161b0:	eor	w2, w11, w8, lsr #15
   161b4:	b.hi	16128 <iterative_hash@@Base+0xd4>  // b.pmore
   161b8:	b	161c8 <iterative_hash@@Base+0x174>
   161bc:	mov	w9, #0x79b9                	// #31161
   161c0:	movk	w9, #0x9e37, lsl #16
   161c4:	mov	w10, w1
   161c8:	sub	w11, w10, #0x1
   161cc:	cmp	w11, #0xa
   161d0:	add	w10, w2, w1
   161d4:	b.hi	16248 <iterative_hash@@Base+0x1f4>  // b.pmore
   161d8:	adrp	x12, 17000 <xexit@@Base+0xb84>
   161dc:	add	x12, x12, #0x310
   161e0:	adr	x13, 161f0 <iterative_hash@@Base+0x19c>
   161e4:	ldrb	w14, [x12, x11]
   161e8:	add	x13, x13, x14, lsl #2
   161ec:	br	x13
   161f0:	ldrb	w11, [x0, #10]
   161f4:	add	w10, w10, w11, lsl #24
   161f8:	ldrb	w11, [x0, #9]
   161fc:	add	w10, w10, w11, lsl #16
   16200:	ldrb	w11, [x0, #8]
   16204:	add	w10, w10, w11, lsl #8
   16208:	ldrb	w11, [x0, #7]
   1620c:	add	w8, w8, w11, lsl #24
   16210:	ldrb	w11, [x0, #6]
   16214:	add	w8, w8, w11, lsl #16
   16218:	ldrb	w11, [x0, #5]
   1621c:	add	w8, w8, w11, lsl #8
   16220:	ldrb	w11, [x0, #4]
   16224:	add	w8, w8, w11
   16228:	ldrb	w11, [x0, #3]
   1622c:	add	w9, w9, w11, lsl #24
   16230:	ldrb	w11, [x0, #2]
   16234:	add	w9, w9, w11, lsl #16
   16238:	ldrb	w11, [x0, #1]
   1623c:	add	w9, w9, w11, lsl #8
   16240:	ldrb	w11, [x0]
   16244:	add	w9, w9, w11
   16248:	sub	w9, w9, w8
   1624c:	sub	w9, w9, w10
   16250:	sub	w8, w8, w10
   16254:	eor	w9, w9, w10, lsr #13
   16258:	sub	w8, w8, w9
   1625c:	sub	w10, w10, w9
   16260:	eor	w8, w8, w9, lsl #8
   16264:	sub	w10, w10, w8
   16268:	sub	w9, w9, w8
   1626c:	eor	w10, w10, w8, lsr #13
   16270:	sub	w9, w9, w10
   16274:	sub	w8, w8, w10
   16278:	eor	w9, w9, w10, lsr #12
   1627c:	sub	w8, w8, w9
   16280:	sub	w10, w10, w9
   16284:	eor	w8, w8, w9, lsl #16
   16288:	sub	w10, w10, w8
   1628c:	sub	w9, w9, w8
   16290:	eor	w10, w10, w8, lsr #5
   16294:	sub	w9, w9, w10
   16298:	sub	w8, w8, w10
   1629c:	eor	w9, w9, w10, lsr #3
   162a0:	sub	w8, w8, w9
   162a4:	eor	w8, w8, w9, lsl #10
   162a8:	sub	w9, w10, w9
   162ac:	sub	w9, w9, w8
   162b0:	eor	w0, w9, w8, lsr #15
   162b4:	ret

00000000000162b8 <xmalloc_set_program_name@@Base>:
   162b8:	stp	x29, x30, [sp, #-32]!
   162bc:	str	x19, [sp, #16]
   162c0:	adrp	x19, 2b000 <xexit@@Base+0x14b84>
   162c4:	ldr	x8, [x19, #1768]
   162c8:	adrp	x9, 2b000 <xexit@@Base+0x14b84>
   162cc:	mov	x29, sp
   162d0:	str	x0, [x9, #1424]
   162d4:	cbz	x8, 162e4 <xmalloc_set_program_name@@Base+0x2c>
   162d8:	ldr	x19, [sp, #16]
   162dc:	ldp	x29, x30, [sp], #32
   162e0:	ret
   162e4:	mov	x0, xzr
   162e8:	bl	5070 <sbrk@plt>
   162ec:	str	x0, [x19, #1768]
   162f0:	ldr	x19, [sp, #16]
   162f4:	ldp	x29, x30, [sp], #32
   162f8:	ret

00000000000162fc <xmalloc_failed@@Base>:
   162fc:	stp	x29, x30, [sp, #-48]!
   16300:	stp	x20, x19, [sp, #32]
   16304:	adrp	x20, 2b000 <xexit@@Base+0x14b84>
   16308:	str	x21, [sp, #16]
   1630c:	ldr	x21, [x20, #1768]
   16310:	mov	x19, x0
   16314:	mov	x0, xzr
   16318:	mov	x29, sp
   1631c:	bl	5070 <sbrk@plt>
   16320:	adrp	x9, 2a000 <xexit@@Base+0x13b84>
   16324:	ldr	x8, [x20, #1768]
   16328:	ldr	x9, [x9, #4000]
   1632c:	adrp	x10, 2b000 <xexit@@Base+0x14b84>
   16330:	ldr	x2, [x10, #1424]
   16334:	adrp	x10, 2a000 <xexit@@Base+0x13b84>
   16338:	cmp	x21, #0x0
   1633c:	ldr	x10, [x10, #3968]
   16340:	csel	x8, x9, x8, eq  // eq = none
   16344:	sub	x5, x0, x8
   16348:	ldrb	w8, [x2]
   1634c:	ldr	x0, [x10]
   16350:	adrp	x9, 16000 <htab_collisions@@Base+0x8>
   16354:	adrp	x10, 16000 <htab_collisions@@Base+0x8>
   16358:	add	x9, x9, #0x68b
   1635c:	add	x10, x10, #0x722
   16360:	cmp	w8, #0x0
   16364:	adrp	x1, 17000 <xexit@@Base+0xb84>
   16368:	csel	x3, x10, x9, eq  // eq = none
   1636c:	add	x1, x1, #0x51f
   16370:	mov	x4, x19
   16374:	bl	4e60 <fprintf@plt>
   16378:	mov	w0, #0x1                   	// #1
   1637c:	bl	5180 <xexit@plt>

0000000000016380 <xmalloc@@Base>:
   16380:	stp	x29, x30, [sp, #-32]!
   16384:	cmp	x0, #0x0
   16388:	str	x19, [sp, #16]
   1638c:	csinc	x19, x0, xzr, ne  // ne = any
   16390:	mov	x0, x19
   16394:	mov	x29, sp
   16398:	bl	5160 <malloc@plt>
   1639c:	cbz	x0, 163ac <xmalloc@@Base+0x2c>
   163a0:	ldr	x19, [sp, #16]
   163a4:	ldp	x29, x30, [sp], #32
   163a8:	ret
   163ac:	mov	x0, x19
   163b0:	bl	4fd0 <xmalloc_failed@plt>

00000000000163b4 <xcalloc@@Base>:
   163b4:	stp	x29, x30, [sp, #-32]!
   163b8:	cmp	x0, #0x0
   163bc:	cset	w8, eq  // eq = none
   163c0:	cmp	x1, #0x0
   163c4:	cset	w9, eq  // eq = none
   163c8:	orr	w8, w8, w9
   163cc:	cmp	w8, #0x0
   163d0:	stp	x20, x19, [sp, #16]
   163d4:	csinc	x19, x1, xzr, eq  // eq = none
   163d8:	csinc	x20, x0, xzr, eq  // eq = none
   163dc:	mov	x0, x20
   163e0:	mov	x1, x19
   163e4:	mov	x29, sp
   163e8:	bl	4e00 <calloc@plt>
   163ec:	cbz	x0, 163fc <xcalloc@@Base+0x48>
   163f0:	ldp	x20, x19, [sp, #16]
   163f4:	ldp	x29, x30, [sp], #32
   163f8:	ret
   163fc:	mul	x0, x20, x19
   16400:	bl	4fd0 <xmalloc_failed@plt>

0000000000016404 <xrealloc@@Base>:
   16404:	stp	x29, x30, [sp, #-32]!
   16408:	cmp	x1, #0x0
   1640c:	str	x19, [sp, #16]
   16410:	csinc	x19, x1, xzr, ne  // ne = any
   16414:	mov	x29, sp
   16418:	cbz	x0, 16434 <xrealloc@@Base+0x30>
   1641c:	mov	x1, x19
   16420:	bl	4f30 <realloc@plt>
   16424:	cbz	x0, 16440 <xrealloc@@Base+0x3c>
   16428:	ldr	x19, [sp, #16]
   1642c:	ldp	x29, x30, [sp], #32
   16430:	ret
   16434:	mov	x0, x19
   16438:	bl	5160 <malloc@plt>
   1643c:	cbnz	x0, 16428 <xrealloc@@Base+0x24>
   16440:	mov	x0, x19
   16444:	bl	4fd0 <xmalloc_failed@plt>

0000000000016448 <xstrdup@@Base>:
   16448:	stp	x29, x30, [sp, #-32]!
   1644c:	stp	x20, x19, [sp, #16]
   16450:	mov	x29, sp
   16454:	mov	x19, x0
   16458:	bl	4e50 <strlen@plt>
   1645c:	add	x20, x0, #0x1
   16460:	mov	x0, x20
   16464:	bl	50d0 <xmalloc@plt>
   16468:	mov	x1, x19
   1646c:	mov	x2, x20
   16470:	ldp	x20, x19, [sp, #16]
   16474:	ldp	x29, x30, [sp], #32
   16478:	b	4db0 <memcpy@plt>

000000000001647c <xexit@@Base>:
   1647c:	stp	x29, x30, [sp, #-32]!
   16480:	str	x19, [sp, #16]
   16484:	adrp	x8, 2a000 <xexit@@Base+0x13b84>
   16488:	ldr	x8, [x8, #3184]
   1648c:	mov	w19, w0
   16490:	mov	x29, sp
   16494:	ldr	x8, [x8]
   16498:	cbz	x8, 164a0 <xexit@@Base+0x24>
   1649c:	blr	x8
   164a0:	mov	w0, w19
   164a4:	bl	5220 <exit@plt>

Disassembly of section .fini:

00000000000164a8 <.fini>:
   164a8:	stp	x29, x30, [sp, #-16]!
   164ac:	mov	x29, sp
   164b0:	ldp	x29, x30, [sp], #16
   164b4:	ret
