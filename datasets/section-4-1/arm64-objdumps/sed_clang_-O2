
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402538 <.init>:
  402538:	stp	x29, x30, [sp, #-16]!
  40253c:	mov	x29, sp
  402540:	bl	402cc0 <wcrtomb@plt+0x60>
  402544:	ldp	x29, x30, [sp], #16
  402548:	ret

Disassembly of section .plt:

0000000000402550 <mbrtowc@plt-0x20>:
  402550:	stp	x16, x30, [sp, #-16]!
  402554:	adrp	x16, 438000 <_obstack_memory_used@@Base+0x225a8>
  402558:	ldr	x17, [x16, #4088]
  40255c:	add	x16, x16, #0xff8
  402560:	br	x17
  402564:	nop
  402568:	nop
  40256c:	nop

0000000000402570 <mbrtowc@plt>:
  402570:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16]
  402578:	add	x16, x16, #0x0
  40257c:	br	x17

0000000000402580 <memcpy@plt>:
  402580:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #8]
  402588:	add	x16, x16, #0x8
  40258c:	br	x17

0000000000402590 <memmove@plt>:
  402590:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #16]
  402598:	add	x16, x16, #0x10
  40259c:	br	x17

00000000004025a0 <isalpha@plt>:
  4025a0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #24]
  4025a8:	add	x16, x16, #0x18
  4025ac:	br	x17

00000000004025b0 <fwrite_unlocked@plt>:
  4025b0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #32]
  4025b8:	add	x16, x16, #0x20
  4025bc:	br	x17

00000000004025c0 <strlen@plt>:
  4025c0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #40]
  4025c8:	add	x16, x16, #0x28
  4025cc:	br	x17

00000000004025d0 <__sprintf_chk@plt>:
  4025d0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #48]
  4025d8:	add	x16, x16, #0x30
  4025dc:	br	x17

00000000004025e0 <acl_set_fd@plt>:
  4025e0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #56]
  4025e8:	add	x16, x16, #0x38
  4025ec:	br	x17

00000000004025f0 <exit@plt>:
  4025f0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #64]
  4025f8:	add	x16, x16, #0x40
  4025fc:	br	x17

0000000000402600 <error@plt>:
  402600:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #72]
  402608:	add	x16, x16, #0x48
  40260c:	br	x17

0000000000402610 <acl_entries@plt>:
  402610:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #80]
  402618:	add	x16, x16, #0x50
  40261c:	br	x17

0000000000402620 <wctype@plt>:
  402620:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #88]
  402628:	add	x16, x16, #0x58
  40262c:	br	x17

0000000000402630 <readlink@plt>:
  402630:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #96]
  402638:	add	x16, x16, #0x60
  40263c:	br	x17

0000000000402640 <ftell@plt>:
  402640:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #104]
  402648:	add	x16, x16, #0x68
  40264c:	br	x17

0000000000402650 <__cxa_atexit@plt>:
  402650:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #112]
  402658:	add	x16, x16, #0x70
  40265c:	br	x17

0000000000402660 <qsort@plt>:
  402660:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #120]
  402668:	add	x16, x16, #0x78
  40266c:	br	x17

0000000000402670 <setvbuf@plt>:
  402670:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #128]
  402678:	add	x16, x16, #0x80
  40267c:	br	x17

0000000000402680 <isblank@plt>:
  402680:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #136]
  402688:	add	x16, x16, #0x88
  40268c:	br	x17

0000000000402690 <__fwriting@plt>:
  402690:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #144]
  402698:	add	x16, x16, #0x90
  40269c:	br	x17

00000000004026a0 <__ctype_tolower_loc@plt>:
  4026a0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #152]
  4026a8:	add	x16, x16, #0x98
  4026ac:	br	x17

00000000004026b0 <fileno@plt>:
  4026b0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #160]
  4026b8:	add	x16, x16, #0xa0
  4026bc:	br	x17

00000000004026c0 <acl_delete_def_file@plt>:
  4026c0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #168]
  4026c8:	add	x16, x16, #0xa8
  4026cc:	br	x17

00000000004026d0 <fclose@plt>:
  4026d0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #176]
  4026d8:	add	x16, x16, #0xb0
  4026dc:	br	x17

00000000004026e0 <wctob@plt>:
  4026e0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #184]
  4026e8:	add	x16, x16, #0xb8
  4026ec:	br	x17

00000000004026f0 <nl_langinfo@plt>:
  4026f0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #192]
  4026f8:	add	x16, x16, #0xc0
  4026fc:	br	x17

0000000000402700 <fopen@plt>:
  402700:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #200]
  402708:	add	x16, x16, #0xc8
  40270c:	br	x17

0000000000402710 <isspace@plt>:
  402710:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #208]
  402718:	add	x16, x16, #0xd0
  40271c:	br	x17

0000000000402720 <iswctype@plt>:
  402720:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #216]
  402728:	add	x16, x16, #0xd8
  40272c:	br	x17

0000000000402730 <malloc@plt>:
  402730:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #224]
  402738:	add	x16, x16, #0xe0
  40273c:	br	x17

0000000000402740 <chmod@plt>:
  402740:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #232]
  402748:	add	x16, x16, #0xe8
  40274c:	br	x17

0000000000402750 <getdelim@plt>:
  402750:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #240]
  402758:	add	x16, x16, #0xf0
  40275c:	br	x17

0000000000402760 <islower@plt>:
  402760:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #248]
  402768:	add	x16, x16, #0xf8
  40276c:	br	x17

0000000000402770 <isxdigit@plt>:
  402770:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #256]
  402778:	add	x16, x16, #0x100
  40277c:	br	x17

0000000000402780 <popen@plt>:
  402780:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #264]
  402788:	add	x16, x16, #0x108
  40278c:	br	x17

0000000000402790 <strncmp@plt>:
  402790:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #272]
  402798:	add	x16, x16, #0x110
  40279c:	br	x17

00000000004027a0 <bindtextdomain@plt>:
  4027a0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #280]
  4027a8:	add	x16, x16, #0x118
  4027ac:	br	x17

00000000004027b0 <isdigit@plt>:
  4027b0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #288]
  4027b8:	add	x16, x16, #0x120
  4027bc:	br	x17

00000000004027c0 <__libc_start_main@plt>:
  4027c0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #296]
  4027c8:	add	x16, x16, #0x128
  4027cc:	br	x17

00000000004027d0 <strverscmp@plt>:
  4027d0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #304]
  4027d8:	add	x16, x16, #0x130
  4027dc:	br	x17

00000000004027e0 <__printf_chk@plt>:
  4027e0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #312]
  4027e8:	add	x16, x16, #0x138
  4027ec:	br	x17

00000000004027f0 <acl_get_tag_type@plt>:
  4027f0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #320]
  4027f8:	add	x16, x16, #0x140
  4027fc:	br	x17

0000000000402800 <memset@plt>:
  402800:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #328]
  402808:	add	x16, x16, #0x148
  40280c:	br	x17

0000000000402810 <fdopen@plt>:
  402810:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #336]
  402818:	add	x16, x16, #0x150
  40281c:	br	x17

0000000000402820 <fchmod@plt>:
  402820:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #344]
  402828:	add	x16, x16, #0x158
  40282c:	br	x17

0000000000402830 <__vfprintf_chk@plt>:
  402830:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #352]
  402838:	add	x16, x16, #0x160
  40283c:	br	x17

0000000000402840 <calloc@plt>:
  402840:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #360]
  402848:	add	x16, x16, #0x168
  40284c:	br	x17

0000000000402850 <bcmp@plt>:
  402850:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #368]
  402858:	add	x16, x16, #0x170
  40285c:	br	x17

0000000000402860 <isupper@plt>:
  402860:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #376]
  402868:	add	x16, x16, #0x178
  40286c:	br	x17

0000000000402870 <realloc@plt>:
  402870:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #384]
  402878:	add	x16, x16, #0x180
  40287c:	br	x17

0000000000402880 <__ctype_toupper_loc@plt>:
  402880:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #392]
  402888:	add	x16, x16, #0x188
  40288c:	br	x17

0000000000402890 <acl_set_file@plt>:
  402890:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #400]
  402898:	add	x16, x16, #0x190
  40289c:	br	x17

00000000004028a0 <rewind@plt>:
  4028a0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #408]
  4028a8:	add	x16, x16, #0x198
  4028ac:	br	x17

00000000004028b0 <acl_from_mode@plt>:
  4028b0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #416]
  4028b8:	add	x16, x16, #0x1a0
  4028bc:	br	x17

00000000004028c0 <acl_get_fd@plt>:
  4028c0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #424]
  4028c8:	add	x16, x16, #0x1a8
  4028cc:	br	x17

00000000004028d0 <strdup@plt>:
  4028d0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #432]
  4028d8:	add	x16, x16, #0x1b0
  4028dc:	br	x17

00000000004028e0 <strerror@plt>:
  4028e0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #440]
  4028e8:	add	x16, x16, #0x1b8
  4028ec:	br	x17

00000000004028f0 <strrchr@plt>:
  4028f0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #448]
  4028f8:	add	x16, x16, #0x1c0
  4028fc:	br	x17

0000000000402900 <__gmon_start__@plt>:
  402900:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #456]
  402908:	add	x16, x16, #0x1c8
  40290c:	br	x17

0000000000402910 <btowc@plt>:
  402910:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #464]
  402918:	add	x16, x16, #0x1d0
  40291c:	br	x17

0000000000402920 <abort@plt>:
  402920:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #472]
  402928:	add	x16, x16, #0x1d8
  40292c:	br	x17

0000000000402930 <mkostemp@plt>:
  402930:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #480]
  402938:	add	x16, x16, #0x1e0
  40293c:	br	x17

0000000000402940 <iscntrl@plt>:
  402940:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #488]
  402948:	add	x16, x16, #0x1e8
  40294c:	br	x17

0000000000402950 <mbsinit@plt>:
  402950:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #496]
  402958:	add	x16, x16, #0x1f0
  40295c:	br	x17

0000000000402960 <__overflow@plt>:
  402960:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #504]
  402968:	add	x16, x16, #0x1f8
  40296c:	br	x17

0000000000402970 <ispunct@plt>:
  402970:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #512]
  402978:	add	x16, x16, #0x200
  40297c:	br	x17

0000000000402980 <puts@plt>:
  402980:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #520]
  402988:	add	x16, x16, #0x208
  40298c:	br	x17

0000000000402990 <fread_unlocked@plt>:
  402990:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #528]
  402998:	add	x16, x16, #0x210
  40299c:	br	x17

00000000004029a0 <textdomain@plt>:
  4029a0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #536]
  4029a8:	add	x16, x16, #0x218
  4029ac:	br	x17

00000000004029b0 <getopt_long@plt>:
  4029b0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #544]
  4029b8:	add	x16, x16, #0x220
  4029bc:	br	x17

00000000004029c0 <__fprintf_chk@plt>:
  4029c0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #552]
  4029c8:	add	x16, x16, #0x228
  4029cc:	br	x17

00000000004029d0 <strcmp@plt>:
  4029d0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #560]
  4029d8:	add	x16, x16, #0x230
  4029dc:	br	x17

00000000004029e0 <__ctype_b_loc@plt>:
  4029e0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #568]
  4029e8:	add	x16, x16, #0x238
  4029ec:	br	x17

00000000004029f0 <acl_get_file@plt>:
  4029f0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #576]
  4029f8:	add	x16, x16, #0x240
  4029fc:	br	x17

0000000000402a00 <strtol@plt>:
  402a00:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #584]
  402a08:	add	x16, x16, #0x248
  402a0c:	br	x17

0000000000402a10 <free@plt>:
  402a10:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #592]
  402a18:	add	x16, x16, #0x250
  402a1c:	br	x17

0000000000402a20 <ungetc@plt>:
  402a20:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #600]
  402a28:	add	x16, x16, #0x258
  402a2c:	br	x17

0000000000402a30 <__ctype_get_mb_cur_max@plt>:
  402a30:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #608]
  402a38:	add	x16, x16, #0x260
  402a3c:	br	x17

0000000000402a40 <acl_get_entry@plt>:
  402a40:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #616]
  402a48:	add	x16, x16, #0x268
  402a4c:	br	x17

0000000000402a50 <strchr@plt>:
  402a50:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #624]
  402a58:	add	x16, x16, #0x270
  402a5c:	br	x17

0000000000402a60 <memrchr@plt>:
  402a60:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #632]
  402a68:	add	x16, x16, #0x278
  402a6c:	br	x17

0000000000402a70 <rename@plt>:
  402a70:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #640]
  402a78:	add	x16, x16, #0x280
  402a7c:	br	x17

0000000000402a80 <fwrite@plt>:
  402a80:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #648]
  402a88:	add	x16, x16, #0x288
  402a8c:	br	x17

0000000000402a90 <fflush_unlocked@plt>:
  402a90:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #656]
  402a98:	add	x16, x16, #0x290
  402a9c:	br	x17

0000000000402aa0 <dcngettext@plt>:
  402aa0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #664]
  402aa8:	add	x16, x16, #0x298
  402aac:	br	x17

0000000000402ab0 <strcpy@plt>:
  402ab0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #672]
  402ab8:	add	x16, x16, #0x2a0
  402abc:	br	x17

0000000000402ac0 <clearerr_unlocked@plt>:
  402ac0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #680]
  402ac8:	add	x16, x16, #0x2a8
  402acc:	br	x17

0000000000402ad0 <__lxstat@plt>:
  402ad0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #688]
  402ad8:	add	x16, x16, #0x2b0
  402adc:	br	x17

0000000000402ae0 <memchr@plt>:
  402ae0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #696]
  402ae8:	add	x16, x16, #0x2b8
  402aec:	br	x17

0000000000402af0 <isatty@plt>:
  402af0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #704]
  402af8:	add	x16, x16, #0x2c0
  402afc:	br	x17

0000000000402b00 <isgraph@plt>:
  402b00:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #712]
  402b08:	add	x16, x16, #0x2c8
  402b0c:	br	x17

0000000000402b10 <iswalnum@plt>:
  402b10:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #720]
  402b18:	add	x16, x16, #0x2d0
  402b1c:	br	x17

0000000000402b20 <__fxstat@plt>:
  402b20:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #728]
  402b28:	add	x16, x16, #0x2d8
  402b2c:	br	x17

0000000000402b30 <strstr@plt>:
  402b30:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #736]
  402b38:	add	x16, x16, #0x2e0
  402b3c:	br	x17

0000000000402b40 <dcgettext@plt>:
  402b40:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #744]
  402b48:	add	x16, x16, #0x2e8
  402b4c:	br	x17

0000000000402b50 <fputs_unlocked@plt>:
  402b50:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #752]
  402b58:	add	x16, x16, #0x2f0
  402b5c:	br	x17

0000000000402b60 <strcoll@plt>:
  402b60:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #760]
  402b68:	add	x16, x16, #0x2f8
  402b6c:	br	x17

0000000000402b70 <isalnum@plt>:
  402b70:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #768]
  402b78:	add	x16, x16, #0x300
  402b7c:	br	x17

0000000000402b80 <pclose@plt>:
  402b80:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #776]
  402b88:	add	x16, x16, #0x308
  402b8c:	br	x17

0000000000402b90 <towupper@plt>:
  402b90:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #784]
  402b98:	add	x16, x16, #0x310
  402b9c:	br	x17

0000000000402ba0 <iswprint@plt>:
  402ba0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #792]
  402ba8:	add	x16, x16, #0x318
  402bac:	br	x17

0000000000402bb0 <umask@plt>:
  402bb0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #800]
  402bb8:	add	x16, x16, #0x320
  402bbc:	br	x17

0000000000402bc0 <__assert_fail@plt>:
  402bc0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #808]
  402bc8:	add	x16, x16, #0x328
  402bcc:	br	x17

0000000000402bd0 <__errno_location@plt>:
  402bd0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #816]
  402bd8:	add	x16, x16, #0x330
  402bdc:	br	x17

0000000000402be0 <getenv@plt>:
  402be0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #824]
  402be8:	add	x16, x16, #0x338
  402bec:	br	x17

0000000000402bf0 <unlink@plt>:
  402bf0:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #832]
  402bf8:	add	x16, x16, #0x340
  402bfc:	br	x17

0000000000402c00 <fchown@plt>:
  402c00:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #840]
  402c08:	add	x16, x16, #0x348
  402c0c:	br	x17

0000000000402c10 <towlower@plt>:
  402c10:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #848]
  402c18:	add	x16, x16, #0x350
  402c1c:	br	x17

0000000000402c20 <__uflow@plt>:
  402c20:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #856]
  402c28:	add	x16, x16, #0x358
  402c2c:	br	x17

0000000000402c30 <isprint@plt>:
  402c30:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #864]
  402c38:	add	x16, x16, #0x360
  402c3c:	br	x17

0000000000402c40 <setlocale@plt>:
  402c40:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #872]
  402c48:	add	x16, x16, #0x368
  402c4c:	br	x17

0000000000402c50 <acl_free@plt>:
  402c50:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #880]
  402c58:	add	x16, x16, #0x370
  402c5c:	br	x17

0000000000402c60 <wcrtomb@plt>:
  402c60:	adrp	x16, 439000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #888]
  402c68:	add	x16, x16, #0x378
  402c6c:	br	x17

Disassembly of section .text:

0000000000402c70 <_obstack_begin@@Base-0x12a80>:
  402c70:	mov	x29, #0x0                   	// #0
  402c74:	mov	x30, #0x0                   	// #0
  402c78:	mov	x5, x0
  402c7c:	ldr	x1, [sp]
  402c80:	add	x2, sp, #0x8
  402c84:	mov	x6, sp
  402c88:	movz	x0, #0x0, lsl #48
  402c8c:	movk	x0, #0x0, lsl #32
  402c90:	movk	x0, #0x40, lsl #16
  402c94:	movk	x0, #0xacd0
  402c98:	movz	x3, #0x0, lsl #48
  402c9c:	movk	x3, #0x0, lsl #32
  402ca0:	movk	x3, #0x42, lsl #16
  402ca4:	movk	x3, #0x54d8
  402ca8:	movz	x4, #0x0, lsl #48
  402cac:	movk	x4, #0x0, lsl #32
  402cb0:	movk	x4, #0x42, lsl #16
  402cb4:	movk	x4, #0x5558
  402cb8:	bl	4027c0 <__libc_start_main@plt>
  402cbc:	bl	402920 <abort@plt>
  402cc0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x225a8>
  402cc4:	ldr	x0, [x0, #4064]
  402cc8:	cbz	x0, 402cd0 <wcrtomb@plt+0x70>
  402ccc:	b	402900 <__gmon_start__@plt>
  402cd0:	ret
  402cd4:	nop
  402cd8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  402cdc:	add	x0, x0, #0x4d8
  402ce0:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  402ce4:	add	x1, x1, #0x4d8
  402ce8:	cmp	x1, x0
  402cec:	b.eq	402d04 <wcrtomb@plt+0xa4>  // b.none
  402cf0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402cf4:	ldr	x1, [x1, #1416]
  402cf8:	cbz	x1, 402d04 <wcrtomb@plt+0xa4>
  402cfc:	mov	x16, x1
  402d00:	br	x16
  402d04:	ret
  402d08:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  402d0c:	add	x0, x0, #0x4d8
  402d10:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  402d14:	add	x1, x1, #0x4d8
  402d18:	sub	x1, x1, x0
  402d1c:	lsr	x2, x1, #63
  402d20:	add	x1, x2, x1, asr #3
  402d24:	cmp	xzr, x1, asr #1
  402d28:	asr	x1, x1, #1
  402d2c:	b.eq	402d44 <wcrtomb@plt+0xe4>  // b.none
  402d30:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402d34:	ldr	x2, [x2, #1424]
  402d38:	cbz	x2, 402d44 <wcrtomb@plt+0xe4>
  402d3c:	mov	x16, x2
  402d40:	br	x16
  402d44:	ret
  402d48:	stp	x29, x30, [sp, #-32]!
  402d4c:	mov	x29, sp
  402d50:	str	x19, [sp, #16]
  402d54:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  402d58:	ldrb	w0, [x19, #1296]
  402d5c:	cbnz	w0, 402d6c <wcrtomb@plt+0x10c>
  402d60:	bl	402cd8 <wcrtomb@plt+0x78>
  402d64:	mov	w0, #0x1                   	// #1
  402d68:	strb	w0, [x19, #1296]
  402d6c:	ldr	x19, [sp, #16]
  402d70:	ldp	x29, x30, [sp], #32
  402d74:	ret
  402d78:	b	402d08 <wcrtomb@plt+0xa8>
  402d7c:	stp	x29, x30, [sp, #-32]!
  402d80:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  402d84:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  402d88:	stp	x20, x19, [sp, #16]
  402d8c:	ldr	x8, [x8, #1304]
  402d90:	ldr	x20, [x9, #1248]
  402d94:	mov	x19, x0
  402d98:	mov	x29, sp
  402d9c:	cbnz	x8, 402de0 <wcrtomb@plt+0x180>
  402da0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402da4:	add	x1, x1, #0xd4a
  402da8:	mov	w2, #0x5                   	// #5
  402dac:	mov	x0, xzr
  402db0:	bl	402b40 <dcgettext@plt>
  402db4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  402db8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  402dbc:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  402dc0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  402dc4:	ldr	x3, [x8, #1936]
  402dc8:	ldr	x8, [x10, #1520]
  402dcc:	ldr	x10, [x11, #1512]
  402dd0:	ldr	x4, [x9, #1320]
  402dd4:	mov	x2, x0
  402dd8:	sub	x5, x8, x10
  402ddc:	b	402e0c <wcrtomb@plt+0x1ac>
  402de0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402de4:	add	x1, x1, #0xd30
  402de8:	mov	w2, #0x5                   	// #5
  402dec:	mov	x0, xzr
  402df0:	bl	402b40 <dcgettext@plt>
  402df4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  402df8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  402dfc:	add	x9, x9, #0x518
  402e00:	ldr	x3, [x8, #1936]
  402e04:	ldp	x4, x5, [x9]
  402e08:	mov	x2, x0
  402e0c:	mov	w1, #0x1                   	// #1
  402e10:	mov	x0, x20
  402e14:	mov	x6, x19
  402e18:	bl	4029c0 <__fprintf_chk@plt>
  402e1c:	mov	w0, #0x1                   	// #1
  402e20:	bl	4025f0 <exit@plt>
  402e24:	sub	sp, sp, #0x70
  402e28:	stp	x22, x21, [sp, #80]
  402e2c:	stp	x20, x19, [sp, #96]
  402e30:	mov	x19, x0
  402e34:	cmp	x1, #0x1
  402e38:	mov	x21, x0
  402e3c:	stp	x29, x30, [sp, #16]
  402e40:	stp	x28, x27, [sp, #32]
  402e44:	stp	x26, x25, [sp, #48]
  402e48:	stp	x24, x23, [sp, #64]
  402e4c:	add	x29, sp, #0x10
  402e50:	str	xzr, [sp, #8]
  402e54:	b.lt	4031f0 <wcrtomb@plt+0x590>  // b.tstop
  402e58:	mov	w20, w2
  402e5c:	mov	w28, wzr
  402e60:	add	x24, x19, x1
  402e64:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  402e68:	adrp	x27, 439000 <_obstack_memory_used@@Base+0x235a8>
  402e6c:	mov	x22, x19
  402e70:	mov	x21, x19
  402e74:	b	402e9c <wcrtomb@plt+0x23c>
  402e78:	cmp	w8, #0xa
  402e7c:	b.ne	402fd4 <wcrtomb@plt+0x374>  // b.any
  402e80:	mov	w28, wzr
  402e84:	mov	w8, #0xa                   	// #10
  402e88:	strb	w8, [x21], #1
  402e8c:	add	x23, x22, #0x2
  402e90:	cmp	x23, x24
  402e94:	mov	x22, x23
  402e98:	b.cs	4031f0 <wcrtomb@plt+0x590>  // b.hs, b.nlast
  402e9c:	ldr	w8, [x25, #2260]
  402ea0:	cmp	w8, #0x1
  402ea4:	b.eq	402ec4 <wcrtomb@plt+0x264>  // b.none
  402ea8:	sub	x2, x24, x22
  402eac:	add	x3, sp, #0x8
  402eb0:	mov	x0, xzr
  402eb4:	mov	x1, x22
  402eb8:	bl	415680 <wcrtomb@plt+0x12a20>
  402ebc:	cmp	w0, #0x1
  402ec0:	b.ne	402f64 <wcrtomb@plt+0x304>  // b.any
  402ec4:	ldrb	w8, [x22]
  402ec8:	cmp	w8, #0x5c
  402ecc:	b.ne	402f18 <wcrtomb@plt+0x2b8>  // b.any
  402ed0:	cbnz	w28, 402f18 <wcrtomb@plt+0x2b8>
  402ed4:	add	x26, x22, #0x1
  402ed8:	cmp	x26, x24
  402edc:	b.cs	402f18 <wcrtomb@plt+0x2b8>  // b.hs, b.nlast
  402ee0:	ldrb	w8, [x26]
  402ee4:	sub	w9, w8, #0x61
  402ee8:	cmp	w9, #0x17
  402eec:	b.hi	402e78 <wcrtomb@plt+0x218>  // b.pmore
  402ef0:	adrp	x12, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402ef4:	add	x12, x12, #0x5c8
  402ef8:	adr	x11, 402e80 <wcrtomb@plt+0x220>
  402efc:	ldrb	w10, [x12, x9]
  402f00:	add	x11, x11, x10, lsl #2
  402f04:	mov	w10, #0xa                   	// #10
  402f08:	br	x11
  402f0c:	mov	w28, wzr
  402f10:	mov	w8, #0x7                   	// #7
  402f14:	b	402e88 <wcrtomb@plt+0x228>
  402f18:	cmp	w20, #0x2
  402f1c:	b.ne	4031d4 <wcrtomb@plt+0x574>  // b.any
  402f20:	ldr	w9, [x27, #2264]
  402f24:	cbz	w9, 4031d4 <wcrtomb@plt+0x574>
  402f28:	sub	w9, w8, #0x2e
  402f2c:	cmp	w9, #0x2f
  402f30:	b.hi	4031d4 <wcrtomb@plt+0x574>  // b.pmore
  402f34:	adrp	x12, 425000 <_obstack_memory_used@@Base+0xf5a8>
  402f38:	add	x12, x12, #0x598
  402f3c:	adr	x10, 402f4c <wcrtomb@plt+0x2ec>
  402f40:	ldrb	w11, [x12, x9]
  402f44:	add	x10, x10, x11, lsl #2
  402f48:	br	x10
  402f4c:	cmn	w28, #0x1
  402f50:	b.ne	4031d4 <wcrtomb@plt+0x574>  // b.any
  402f54:	ldurb	w9, [x22, #-1]
  402f58:	cmp	w9, #0x5b
  402f5c:	csinv	w28, w8, wzr, eq  // eq = none
  402f60:	b	4031d4 <wcrtomb@plt+0x574>
  402f64:	lsl	x8, x0, #32
  402f68:	mov	x9, #0xffffffff00000000    	// #-4294967296
  402f6c:	cmp	x8, x9
  402f70:	b.ne	402f7c <wcrtomb@plt+0x31c>  // b.any
  402f74:	mov	w0, #0x1                   	// #1
  402f78:	b	402f8c <wcrtomb@plt+0x32c>
  402f7c:	mov	x9, #0xfffffffe00000000    	// #-8589934592
  402f80:	cmp	x8, x9
  402f84:	b.eq	402f74 <wcrtomb@plt+0x314>  // b.none
  402f88:	cbz	w0, 402f74 <wcrtomb@plt+0x314>
  402f8c:	sxtw	x23, w0
  402f90:	mov	x0, x21
  402f94:	mov	x1, x22
  402f98:	mov	x2, x23
  402f9c:	bl	402590 <memmove@plt>
  402fa0:	add	x21, x21, x23
  402fa4:	add	x23, x22, x23
  402fa8:	b	402e90 <wcrtomb@plt+0x230>
  402fac:	cmp	w28, #0x0
  402fb0:	csinv	w28, w28, wzr, ne  // ne = any
  402fb4:	mov	w8, #0x5b                  	// #91
  402fb8:	b	4031d4 <wcrtomb@plt+0x574>
  402fbc:	add	w8, w28, #0x1
  402fc0:	cmp	w8, #0x2
  402fc4:	b.cs	403160 <wcrtomb@plt+0x500>  // b.hs, b.nlast
  402fc8:	mov	w28, wzr
  402fcc:	mov	w8, #0x5d                  	// #93
  402fd0:	b	4031d4 <wcrtomb@plt+0x574>
  402fd4:	mov	w28, wzr
  402fd8:	cbz	w20, 4031d0 <wcrtomb@plt+0x570>
  402fdc:	mov	w8, #0x5c                  	// #92
  402fe0:	strb	w8, [x21], #1
  402fe4:	ldrb	w8, [x26]
  402fe8:	mov	x22, x26
  402fec:	b	4031d4 <wcrtomb@plt+0x574>
  402ff0:	mov	w28, wzr
  402ff4:	mov	w8, #0xc                   	// #12
  402ff8:	b	402e88 <wcrtomb@plt+0x228>
  402ffc:	mov	w10, #0x10                  	// #16
  403000:	b	40304c <wcrtomb@plt+0x3ec>
  403004:	add	x23, x22, #0x2
  403008:	cmp	x23, x24
  40300c:	b.cs	4031c0 <wcrtomb@plt+0x560>  // b.hs, b.nlast
  403010:	bl	402880 <__ctype_toupper_loc@plt>
  403014:	ldr	x8, [x0]
  403018:	ldrb	w9, [x23]
  40301c:	ldr	w8, [x8, x9, lsl #2]
  403020:	eor	w8, w8, #0x40
  403024:	strb	w8, [x21], #1
  403028:	ldrb	w8, [x23]
  40302c:	cmp	w8, #0x5c
  403030:	b.ne	4031e0 <wcrtomb@plt+0x580>  // b.any
  403034:	ldrb	w8, [x22, #3]
  403038:	cmp	w8, #0x5c
  40303c:	b.ne	403214 <wcrtomb@plt+0x5b4>  // b.any
  403040:	mov	w8, #0x3                   	// #3
  403044:	b	4031e4 <wcrtomb@plt+0x584>
  403048:	mov	w10, #0x8                   	// #8
  40304c:	add	x23, x22, #0x2
  403050:	cmp	x23, x24
  403054:	b.cs	403194 <wcrtomb@plt+0x534>  // b.hs, b.nlast
  403058:	adrp	x18, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40305c:	mov	x11, xzr
  403060:	mov	w9, wzr
  403064:	mov	w12, #0x1                   	// #1
  403068:	add	x18, x18, #0x5e0
  40306c:	add	x13, x22, x11
  403070:	ldrb	w14, [x13, #2]
  403074:	sub	w15, w14, #0x30
  403078:	cmp	w15, #0x36
  40307c:	b.hi	40317c <wcrtomb@plt+0x51c>  // b.pmore
  403080:	adr	x16, 403098 <wcrtomb@plt+0x438>
  403084:	ldrb	w17, [x18, x15]
  403088:	add	x16, x16, x17, lsl #2
  40308c:	mov	w14, wzr
  403090:	mov	w15, #0x8                   	// #8
  403094:	br	x16
  403098:	mov	w15, #0xa                   	// #10
  40309c:	b	4030cc <wcrtomb@plt+0x46c>
  4030a0:	mov	w15, #0xc                   	// #12
  4030a4:	b	4030cc <wcrtomb@plt+0x46c>
  4030a8:	mov	w15, #0xd                   	// #13
  4030ac:	b	4030cc <wcrtomb@plt+0x46c>
  4030b0:	mov	w15, #0xb                   	// #11
  4030b4:	b	4030cc <wcrtomb@plt+0x46c>
  4030b8:	mov	w15, #0xf                   	// #15
  4030bc:	b	4030cc <wcrtomb@plt+0x46c>
  4030c0:	mov	w15, #0xe                   	// #14
  4030c4:	b	4030cc <wcrtomb@plt+0x46c>
  4030c8:	mov	w15, #0x9                   	// #9
  4030cc:	cmp	w15, w10
  4030d0:	mov	w14, w15
  4030d4:	b.cs	40317c <wcrtomb@plt+0x51c>  // b.hs, b.nlast
  4030d8:	mul	w12, w12, w10
  4030dc:	madd	w9, w9, w10, w14
  4030e0:	cmp	w12, #0xff
  4030e4:	add	x13, x11, #0x1
  4030e8:	b.hi	403188 <wcrtomb@plt+0x528>  // b.pmore
  4030ec:	add	x11, x22, x11
  4030f0:	add	x11, x11, #0x3
  4030f4:	cmp	x11, x24
  4030f8:	mov	x11, x13
  4030fc:	b.cc	40306c <wcrtomb@plt+0x40c>  // b.lo, b.ul, b.last
  403100:	b	403188 <wcrtomb@plt+0x528>
  403104:	mov	w14, #0x6                   	// #6
  403108:	b	4030d8 <wcrtomb@plt+0x478>
  40310c:	mov	w14, #0x3                   	// #3
  403110:	b	4030d8 <wcrtomb@plt+0x478>
  403114:	mov	w14, #0x1                   	// #1
  403118:	b	4030d8 <wcrtomb@plt+0x478>
  40311c:	mov	w14, #0x4                   	// #4
  403120:	b	4030d8 <wcrtomb@plt+0x478>
  403124:	mov	w14, #0x5                   	// #5
  403128:	b	4030d8 <wcrtomb@plt+0x478>
  40312c:	mov	w14, #0x2                   	// #2
  403130:	b	4030d8 <wcrtomb@plt+0x478>
  403134:	mov	w14, #0x7                   	// #7
  403138:	b	4030d8 <wcrtomb@plt+0x478>
  40313c:	mov	w28, wzr
  403140:	mov	w8, #0xd                   	// #13
  403144:	b	402e88 <wcrtomb@plt+0x228>
  403148:	mov	w28, wzr
  40314c:	mov	w8, #0x9                   	// #9
  403150:	b	402e88 <wcrtomb@plt+0x228>
  403154:	mov	w28, wzr
  403158:	mov	w8, #0xb                   	// #11
  40315c:	b	402e88 <wcrtomb@plt+0x228>
  403160:	ldurb	w8, [x22, #-2]
  403164:	cmp	w28, w8
  403168:	b.eq	402fcc <wcrtomb@plt+0x36c>  // b.none
  40316c:	ldurb	w8, [x22, #-1]
  403170:	cmp	w28, w8
  403174:	csinv	w28, w28, wzr, ne  // ne = any
  403178:	b	402fcc <wcrtomb@plt+0x36c>
  40317c:	add	x23, x13, #0x2
  403180:	cbnz	x11, 403190 <wcrtomb@plt+0x530>
  403184:	b	403194 <wcrtomb@plt+0x534>
  403188:	add	x8, x22, x13
  40318c:	add	x23, x8, #0x2
  403190:	mov	w8, w9
  403194:	cmp	w20, #0x1
  403198:	b.ne	4031b8 <wcrtomb@plt+0x558>  // b.any
  40319c:	and	w9, w8, #0xff
  4031a0:	cmp	w9, #0x5c
  4031a4:	b.eq	4031b0 <wcrtomb@plt+0x550>  // b.none
  4031a8:	cmp	w9, #0x26
  4031ac:	b.ne	4031b8 <wcrtomb@plt+0x558>  // b.any
  4031b0:	mov	w9, #0x5c                  	// #92
  4031b4:	strb	w9, [x21], #1
  4031b8:	mov	w28, wzr
  4031bc:	b	4031d8 <wcrtomb@plt+0x578>
  4031c0:	mov	w28, wzr
  4031c4:	cbz	w20, 402e90 <wcrtomb@plt+0x230>
  4031c8:	mov	w8, #0x5c                  	// #92
  4031cc:	b	4031d8 <wcrtomb@plt+0x578>
  4031d0:	mov	x22, x26
  4031d4:	add	x23, x22, #0x1
  4031d8:	strb	w8, [x21], #1
  4031dc:	b	402e90 <wcrtomb@plt+0x230>
  4031e0:	mov	w8, #0x2                   	// #2
  4031e4:	mov	w28, wzr
  4031e8:	add	x23, x26, x8
  4031ec:	b	402e90 <wcrtomb@plt+0x230>
  4031f0:	sub	x0, x21, x19
  4031f4:	ldp	x20, x19, [sp, #96]
  4031f8:	ldp	x22, x21, [sp, #80]
  4031fc:	ldp	x24, x23, [sp, #64]
  403200:	ldp	x26, x25, [sp, #48]
  403204:	ldp	x28, x27, [sp, #32]
  403208:	ldp	x29, x30, [sp, #16]
  40320c:	add	sp, sp, #0x70
  403210:	ret
  403214:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403218:	add	x0, x0, #0xb96
  40321c:	bl	402d7c <wcrtomb@plt+0x11c>
  403220:	stp	x29, x30, [sp, #-48]!
  403224:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403228:	str	x21, [sp, #16]
  40322c:	add	x9, x1, x2
  403230:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  403234:	str	xzr, [x8, #1536]
  403238:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40323c:	str	x9, [x21, #1528]
  403240:	ldr	x9, [x8, #1328]
  403244:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403248:	stp	x20, x19, [sp, #32]
  40324c:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  403250:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  403254:	add	x10, x10, #0x518
  403258:	add	x9, x9, #0x1
  40325c:	mov	x29, sp
  403260:	str	x1, [x19, #1512]
  403264:	str	x1, [x20, #1520]
  403268:	stp	xzr, xzr, [x10]
  40326c:	str	x9, [x8, #1328]
  403270:	str	x9, [x10, #16]
  403274:	bl	4032a0 <wcrtomb@plt+0x640>
  403278:	str	xzr, [x19, #1512]
  40327c:	str	xzr, [x20, #1520]
  403280:	str	xzr, [x21, #1528]
  403284:	ldp	x20, x19, [sp, #32]
  403288:	ldr	x21, [sp, #16]
  40328c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403290:	mov	w9, #0x1                   	// #1
  403294:	strb	w9, [x8, #1336]
  403298:	ldp	x29, x30, [sp], #48
  40329c:	ret
  4032a0:	sub	sp, sp, #0x1f0
  4032a4:	stp	x28, x27, [sp, #416]
  4032a8:	mov	x28, x0
  4032ac:	stp	x29, x30, [sp, #400]
  4032b0:	stp	x26, x25, [sp, #432]
  4032b4:	stp	x24, x23, [sp, #448]
  4032b8:	stp	x22, x21, [sp, #464]
  4032bc:	stp	x20, x19, [sp, #480]
  4032c0:	add	x29, sp, #0x190
  4032c4:	cbnz	x0, 403304 <wcrtomb@plt+0x6a4>
  4032c8:	mov	w0, #0x1                   	// #1
  4032cc:	mov	w1, #0x18                  	// #24
  4032d0:	bl	415564 <wcrtomb@plt+0x12904>
  4032d4:	mov	x28, x0
  4032d8:	stp	xzr, xzr, [x0, #8]
  4032dc:	str	xzr, [x0]
  4032e0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4032e4:	adrp	x3, 415000 <wcrtomb@plt+0x123a0>
  4032e8:	adrp	x4, 402000 <mbrtowc@plt-0x570>
  4032ec:	add	x0, x0, #0x578
  4032f0:	add	x3, x3, #0x540
  4032f4:	add	x4, x4, #0xa10
  4032f8:	mov	x1, xzr
  4032fc:	mov	x2, xzr
  403300:	bl	4156f0 <_obstack_begin@@Base>
  403304:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403308:	ldr	x8, [x8, #1352]
  40330c:	cbz	x8, 40331c <wcrtomb@plt+0x6bc>
  403310:	mov	w1, #0xa                   	// #10
  403314:	mov	x0, xzr
  403318:	bl	405798 <wcrtomb@plt+0x2b38>
  40331c:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403320:	ldr	q0, [x8, #3088]
  403324:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403328:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  40332c:	movk	x22, #0x3334
  403330:	stur	q0, [x29, #-144]
  403334:	ldr	q0, [x8, #3104]
  403338:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40333c:	adrp	x27, 439000 <_obstack_memory_used@@Base+0x235a8>
  403340:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  403344:	stur	q0, [x29, #-160]
  403348:	ldr	q0, [x8, #3120]
  40334c:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403350:	movk	x22, #0x333, lsl #48
  403354:	mov	w21, #0x28                  	// #40
  403358:	stur	q0, [x29, #-176]
  40335c:	ldr	q0, [x8, #3136]
  403360:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403364:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  403368:	stur	x28, [x29, #-104]
  40336c:	stur	q0, [x29, #-192]
  403370:	ldr	q0, [x8, #3152]
  403374:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403378:	str	q0, [sp, #192]
  40337c:	ldr	q0, [x8, #3168]
  403380:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403384:	str	q0, [sp, #176]
  403388:	ldr	q0, [x8, #3184]
  40338c:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403390:	str	q0, [sp, #160]
  403394:	ldr	q0, [x8, #3200]
  403398:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40339c:	str	q0, [sp, #144]
  4033a0:	ldr	q0, [x8, #3216]
  4033a4:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033a8:	str	q0, [sp, #128]
  4033ac:	ldr	q0, [x8, #3232]
  4033b0:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033b4:	str	q0, [sp, #112]
  4033b8:	ldr	q0, [x8, #3248]
  4033bc:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033c0:	str	q0, [sp, #96]
  4033c4:	ldr	q0, [x8, #3264]
  4033c8:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033cc:	str	q0, [sp, #80]
  4033d0:	ldr	q0, [x8, #3280]
  4033d4:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033d8:	str	q0, [sp, #64]
  4033dc:	ldr	q0, [x8, #3296]
  4033e0:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033e4:	str	q0, [sp, #48]
  4033e8:	ldr	q0, [x8, #3312]
  4033ec:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4033f0:	str	q0, [sp, #32]
  4033f4:	ldr	q0, [x8, #3328]
  4033f8:	str	q0, [sp, #16]
  4033fc:	b	403414 <wcrtomb@plt+0x7b4>
  403400:	mov	w26, #0xffffffff            	// #-1
  403404:	bl	4029e0 <__ctype_b_loc@plt>
  403408:	ldr	x8, [x0]
  40340c:	ldrh	w8, [x8, w26, sxtw #1]
  403410:	tbz	w8, #13, 403480 <wcrtomb@plt+0x820>
  403414:	ldr	x8, [x27, #1520]
  403418:	cbz	x8, 403434 <wcrtomb@plt+0x7d4>
  40341c:	ldr	x9, [x19, #1528]
  403420:	cmp	x8, x9
  403424:	b.cs	403400 <wcrtomb@plt+0x7a0>  // b.hs, b.nlast
  403428:	add	x9, x8, #0x1
  40342c:	str	x9, [x27, #1520]
  403430:	b	403458 <wcrtomb@plt+0x7f8>
  403434:	ldr	x0, [x23, #1536]
  403438:	cbz	x0, 403400 <wcrtomb@plt+0x7a0>
  40343c:	ldrb	w8, [x0]
  403440:	tbnz	w8, #4, 403400 <wcrtomb@plt+0x7a0>
  403444:	ldp	x8, x9, [x0, #8]
  403448:	cmp	x8, x9
  40344c:	b.cs	405100 <wcrtomb@plt+0x24a0>  // b.hs, b.nlast
  403450:	add	x9, x8, #0x1
  403454:	str	x9, [x0, #8]
  403458:	ldrb	w26, [x8]
  40345c:	cmp	w26, #0x3b
  403460:	b.eq	403414 <wcrtomb@plt+0x7b4>  // b.none
  403464:	cmp	w26, #0xa
  403468:	b.ne	403404 <wcrtomb@plt+0x7a4>  // b.any
  40346c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403470:	ldr	x8, [x9, #1312]
  403474:	add	x8, x8, #0x1
  403478:	str	x8, [x9, #1312]
  40347c:	b	403404 <wcrtomb@plt+0x7a4>
  403480:	cmn	w26, #0x1
  403484:	b.eq	4052dc <wcrtomb@plt+0x267c>  // b.none
  403488:	ldp	x8, x25, [x28, #8]
  40348c:	mov	x24, x0
  403490:	cmp	x25, x8
  403494:	b.ne	4034c4 <wcrtomb@plt+0x864>  // b.any
  403498:	add	x8, x25, #0x28
  40349c:	cmp	x8, x22
  4034a0:	str	x8, [x28, #8]
  4034a4:	b.cs	405330 <wcrtomb@plt+0x26d0>  // b.hs, b.nlast
  4034a8:	ldr	x0, [x28]
  4034ac:	add	x8, x8, x8, lsl #2
  4034b0:	lsl	x1, x8, #3
  4034b4:	bl	4153c8 <wcrtomb@plt+0x12768>
  4034b8:	ldr	x25, [x28, #16]
  4034bc:	str	x0, [x28]
  4034c0:	b	4034c8 <wcrtomb@plt+0x868>
  4034c4:	ldr	x0, [x28]
  4034c8:	stur	x0, [x29, #-80]
  4034cc:	madd	x20, x25, x21, x0
  4034d0:	sub	x0, x29, #0x48
  4034d4:	mov	w1, w26
  4034d8:	stp	xzr, xzr, [x20]
  4034dc:	stur	xzr, [x20, #14]
  4034e0:	bl	405a1c <wcrtomb@plt+0x2dbc>
  4034e4:	ldur	x14, [x29, #-80]
  4034e8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4034ec:	tbz	w0, #0, 4035f0 <wcrtomb@plt+0x990>
  4034f0:	ldur	w8, [x29, #-72]
  4034f4:	and	w8, w8, #0xfffffffe
  4034f8:	cmp	w8, #0x4
  4034fc:	b.eq	405334 <wcrtomb@plt+0x26d4>  // b.none
  403500:	sub	x0, x29, #0x48
  403504:	mov	w1, #0x20                  	// #32
  403508:	bl	415590 <wcrtomb@plt+0x12930>
  40350c:	ldur	x14, [x29, #-80]
  403510:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403514:	str	x0, [x20]
  403518:	b	40352c <wcrtomb@plt+0x8cc>
  40351c:	mov	w26, #0xffffffff            	// #-1
  403520:	ldr	x8, [x24]
  403524:	ldrh	w8, [x8, w26, sxtw #1]
  403528:	tbz	w8, #0, 4035a8 <wcrtomb@plt+0x948>
  40352c:	ldr	x8, [x27, #1520]
  403530:	cbz	x8, 40354c <wcrtomb@plt+0x8ec>
  403534:	ldr	x9, [x19, #1528]
  403538:	cmp	x8, x9
  40353c:	b.cs	40351c <wcrtomb@plt+0x8bc>  // b.hs, b.nlast
  403540:	add	x9, x8, #0x1
  403544:	str	x9, [x27, #1520]
  403548:	b	403570 <wcrtomb@plt+0x910>
  40354c:	ldr	x0, [x23, #1536]
  403550:	cbz	x0, 40351c <wcrtomb@plt+0x8bc>
  403554:	ldrb	w8, [x0]
  403558:	tbnz	w8, #4, 40351c <wcrtomb@plt+0x8bc>
  40355c:	ldp	x8, x9, [x0, #8]
  403560:	cmp	x8, x9
  403564:	b.cs	40358c <wcrtomb@plt+0x92c>  // b.hs, b.nlast
  403568:	add	x9, x8, #0x1
  40356c:	str	x9, [x0, #8]
  403570:	ldrb	w26, [x8]
  403574:	cmp	w26, #0xa
  403578:	b.ne	403520 <wcrtomb@plt+0x8c0>  // b.any
  40357c:	ldr	x8, [x11, #1312]
  403580:	add	x8, x8, #0x1
  403584:	str	x8, [x11, #1312]
  403588:	b	403520 <wcrtomb@plt+0x8c0>
  40358c:	bl	402c20 <__uflow@plt>
  403590:	ldur	x14, [x29, #-80]
  403594:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403598:	mov	w26, w0
  40359c:	cmp	w26, #0xa
  4035a0:	b.ne	403520 <wcrtomb@plt+0x8c0>  // b.any
  4035a4:	b	40357c <wcrtomb@plt+0x91c>
  4035a8:	cmp	w26, #0x2c
  4035ac:	b.eq	4036a4 <wcrtomb@plt+0xa44>  // b.none
  4035b0:	ldr	x8, [x20]
  4035b4:	ldr	w9, [x8]
  4035b8:	cmp	w9, #0x2
  4035bc:	b.ne	4035f0 <wcrtomb@plt+0x990>  // b.any
  4035c0:	ldr	x8, [x8, #8]
  4035c4:	cbnz	x8, 4035f0 <wcrtomb@plt+0x990>
  4035c8:	madd	x8, x25, x21, x14
  4035cc:	ldr	x8, [x8, #8]
  4035d0:	cbz	x8, 405368 <wcrtomb@plt+0x2708>
  4035d4:	ldr	w8, [x8]
  4035d8:	cmp	w8, #0x1
  4035dc:	b.ne	405368 <wcrtomb@plt+0x2708>  // b.any
  4035e0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4035e4:	ldr	w8, [x8, #2264]
  4035e8:	cmp	w8, #0x2
  4035ec:	b.eq	405368 <wcrtomb@plt+0x2708>  // b.none
  4035f0:	cmp	w26, #0x21
  4035f4:	b.ne	403724 <wcrtomb@plt+0xac4>  // b.any
  4035f8:	madd	x8, x25, x21, x14
  4035fc:	mov	w9, #0x1                   	// #1
  403600:	strb	w9, [x8, #20]
  403604:	b	403618 <wcrtomb@plt+0x9b8>
  403608:	mov	w26, #0xffffffff            	// #-1
  40360c:	ldr	x8, [x24]
  403610:	ldrh	w8, [x8, w26, sxtw #1]
  403614:	tbz	w8, #0, 40371c <wcrtomb@plt+0xabc>
  403618:	ldr	x8, [x27, #1520]
  40361c:	cbz	x8, 403638 <wcrtomb@plt+0x9d8>
  403620:	ldr	x9, [x19, #1528]
  403624:	cmp	x8, x9
  403628:	b.cs	403608 <wcrtomb@plt+0x9a8>  // b.hs, b.nlast
  40362c:	add	x9, x8, #0x1
  403630:	str	x9, [x27, #1520]
  403634:	b	40365c <wcrtomb@plt+0x9fc>
  403638:	ldr	x0, [x23, #1536]
  40363c:	cbz	x0, 403608 <wcrtomb@plt+0x9a8>
  403640:	ldrb	w8, [x0]
  403644:	tbnz	w8, #4, 403608 <wcrtomb@plt+0x9a8>
  403648:	ldp	x8, x9, [x0, #8]
  40364c:	cmp	x8, x9
  403650:	b.cs	403678 <wcrtomb@plt+0xa18>  // b.hs, b.nlast
  403654:	add	x9, x8, #0x1
  403658:	str	x9, [x0, #8]
  40365c:	ldrb	w26, [x8]
  403660:	cmp	w26, #0xa
  403664:	b.ne	40360c <wcrtomb@plt+0x9ac>  // b.any
  403668:	ldr	x8, [x11, #1312]
  40366c:	add	x8, x8, #0x1
  403670:	str	x8, [x11, #1312]
  403674:	b	40360c <wcrtomb@plt+0x9ac>
  403678:	bl	402c20 <__uflow@plt>
  40367c:	ldur	x14, [x29, #-80]
  403680:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403684:	mov	w26, w0
  403688:	cmp	w26, #0xa
  40368c:	b.ne	40360c <wcrtomb@plt+0x9ac>  // b.any
  403690:	b	403668 <wcrtomb@plt+0xa08>
  403694:	mov	w1, #0xffffffff            	// #-1
  403698:	ldr	x8, [x24]
  40369c:	ldrh	w8, [x8, w1, sxtw #1]
  4036a0:	tbz	w8, #0, 403974 <wcrtomb@plt+0xd14>
  4036a4:	ldr	x8, [x27, #1520]
  4036a8:	cbz	x8, 4036c4 <wcrtomb@plt+0xa64>
  4036ac:	ldr	x9, [x19, #1528]
  4036b0:	cmp	x8, x9
  4036b4:	b.cs	403694 <wcrtomb@plt+0xa34>  // b.hs, b.nlast
  4036b8:	add	x9, x8, #0x1
  4036bc:	str	x9, [x27, #1520]
  4036c0:	b	4036e8 <wcrtomb@plt+0xa88>
  4036c4:	ldr	x0, [x23, #1536]
  4036c8:	cbz	x0, 403694 <wcrtomb@plt+0xa34>
  4036cc:	ldrb	w8, [x0]
  4036d0:	tbnz	w8, #4, 403694 <wcrtomb@plt+0xa34>
  4036d4:	ldp	x8, x9, [x0, #8]
  4036d8:	cmp	x8, x9
  4036dc:	b.cs	403704 <wcrtomb@plt+0xaa4>  // b.hs, b.nlast
  4036e0:	add	x9, x8, #0x1
  4036e4:	str	x9, [x0, #8]
  4036e8:	ldrb	w1, [x8]
  4036ec:	cmp	w1, #0xa
  4036f0:	b.ne	403698 <wcrtomb@plt+0xa38>  // b.any
  4036f4:	ldr	x8, [x11, #1312]
  4036f8:	add	x8, x8, #0x1
  4036fc:	str	x8, [x11, #1312]
  403700:	b	403698 <wcrtomb@plt+0xa38>
  403704:	bl	402c20 <__uflow@plt>
  403708:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40370c:	mov	w1, w0
  403710:	cmp	w1, #0xa
  403714:	b.ne	403698 <wcrtomb@plt+0xa38>  // b.any
  403718:	b	4036f4 <wcrtomb@plt+0xa94>
  40371c:	cmp	w26, #0x21
  403720:	b.eq	405340 <wcrtomb@plt+0x26e0>  // b.none
  403724:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403728:	ldr	w8, [x8, #2264]
  40372c:	cmp	w8, #0x2
  403730:	b.ne	403768 <wcrtomb@plt+0xb08>  // b.any
  403734:	sub	w8, w26, #0x3d
  403738:	cmp	w8, #0x3d
  40373c:	b.hi	403768 <wcrtomb@plt+0xb08>  // b.pmore
  403740:	mov	x10, #0x1                   	// #1
  403744:	mov	w9, #0x1                   	// #1
  403748:	movk	x10, #0x9010, lsl #32
  40374c:	lsl	x9, x9, x8
  403750:	movk	x10, #0x20, lsl #48
  403754:	tst	x9, x10
  403758:	b.eq	403c64 <wcrtomb@plt+0x1004>  // b.none
  40375c:	madd	x8, x25, x21, x14
  403760:	ldr	x8, [x8, #8]
  403764:	cbnz	x8, 40535c <wcrtomb@plt+0x26fc>
  403768:	add	w8, w26, #0x1
  40376c:	madd	x9, x25, x21, x14
  403770:	cmp	w8, #0x7e
  403774:	strb	w26, [x9, #21]
  403778:	b.hi	40531c <wcrtomb@plt+0x26bc>  // b.pmore
  40377c:	adrp	x12, 425000 <_obstack_memory_used@@Base+0xf5a8>
  403780:	add	x12, x12, #0x618
  403784:	adr	x9, 403794 <wcrtomb@plt+0xb34>
  403788:	ldrh	w10, [x12, x8, lsl #1]
  40378c:	add	x9, x9, x10, lsl #2
  403790:	br	x9
  403794:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403798:	ldr	x21, [x8, #1368]
  40379c:	ldr	x22, [x28, #16]
  4037a0:	bl	40632c <wcrtomb@plt+0x36cc>
  4037a4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4037a8:	add	x9, x9, #0x590
  4037ac:	ldp	x9, x8, [x9]
  4037b0:	mov	x20, x0
  4037b4:	sub	x8, x8, x9
  4037b8:	cmp	x8, #0x2f
  4037bc:	b.hi	4037d8 <wcrtomb@plt+0xb78>  // b.pmore
  4037c0:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  4037c4:	add	x24, x24, #0x578
  4037c8:	mov	w1, #0x30                  	// #48
  4037cc:	mov	x0, x24
  4037d0:	bl	415844 <_obstack_newchunk@@Base>
  4037d4:	ldr	x9, [x24, #24]
  4037d8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4037dc:	add	x10, x10, #0x588
  4037e0:	ldr	x8, [x10]
  4037e4:	add	x9, x9, #0x30
  4037e8:	str	x9, [x10, #8]
  4037ec:	cmp	x9, x8
  4037f0:	b.ne	403804 <wcrtomb@plt+0xba4>  // b.any
  4037f4:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4037f8:	ldrb	w10, [x11, #1480]
  4037fc:	orr	w10, w10, #0x2
  403800:	strb	w10, [x11, #1480]
  403804:	adrp	x14, 439000 <_obstack_memory_used@@Base+0x235a8>
  403808:	add	x14, x14, #0x580
  40380c:	ldr	x10, [x14, #40]
  403810:	ldr	x11, [x14]
  403814:	ldr	x12, [x14, #24]
  403818:	add	x9, x10, x9
  40381c:	bic	x9, x9, x10
  403820:	sub	x13, x12, x11
  403824:	sub	x10, x9, x11
  403828:	cmp	x10, x13
  40382c:	csel	x9, x12, x9, hi  // hi = pmore
  403830:	stp	x9, x9, [x14, #8]
  403834:	stp	x22, x20, [x8]
  403838:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  40383c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403840:	movk	x22, #0x3334
  403844:	str	x21, [x8, #40]
  403848:	str	x8, [x9, #1368]
  40384c:	movk	x22, #0x333, lsl #48
  403850:	mov	w21, #0x28                  	// #40
  403854:	b	405090 <wcrtomb@plt+0x2430>
  403858:	mov	w8, #0xffffffff            	// #-1
  40385c:	ldr	x9, [x24]
  403860:	ldrh	w9, [x9, w8, sxtw #1]
  403864:	tbz	w9, #0, 4042bc <wcrtomb@plt+0x165c>
  403868:	ldr	x8, [x27, #1520]
  40386c:	cbz	x8, 403888 <wcrtomb@plt+0xc28>
  403870:	ldr	x9, [x19, #1528]
  403874:	cmp	x8, x9
  403878:	b.cs	403858 <wcrtomb@plt+0xbf8>  // b.hs, b.nlast
  40387c:	add	x9, x8, #0x1
  403880:	str	x9, [x27, #1520]
  403884:	b	4038ac <wcrtomb@plt+0xc4c>
  403888:	ldr	x0, [x23, #1536]
  40388c:	cbz	x0, 403858 <wcrtomb@plt+0xbf8>
  403890:	ldrb	w8, [x0]
  403894:	tbnz	w8, #4, 403858 <wcrtomb@plt+0xbf8>
  403898:	ldp	x8, x9, [x0, #8]
  40389c:	cmp	x8, x9
  4038a0:	b.cs	4038cc <wcrtomb@plt+0xc6c>  // b.hs, b.nlast
  4038a4:	add	x9, x8, #0x1
  4038a8:	str	x9, [x0, #8]
  4038ac:	ldrb	w8, [x8]
  4038b0:	cmp	w8, #0xa
  4038b4:	b.ne	40385c <wcrtomb@plt+0xbfc>  // b.any
  4038b8:	ldr	x8, [x11, #1312]
  4038bc:	add	x8, x8, #0x1
  4038c0:	str	x8, [x11, #1312]
  4038c4:	mov	w8, #0xa                   	// #10
  4038c8:	b	40385c <wcrtomb@plt+0xbfc>
  4038cc:	bl	402c20 <__uflow@plt>
  4038d0:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4038d4:	mov	w8, w0
  4038d8:	cmp	w8, #0xa
  4038dc:	b.ne	40385c <wcrtomb@plt+0xbfc>  // b.any
  4038e0:	b	4038b8 <wcrtomb@plt+0xc58>
  4038e4:	mov	w8, #0xffffffff            	// #-1
  4038e8:	ldr	x9, [x24]
  4038ec:	ldrh	w9, [x9, w8, sxtw #1]
  4038f0:	tbz	w9, #0, 403d44 <wcrtomb@plt+0x10e4>
  4038f4:	ldr	x8, [x27, #1520]
  4038f8:	cbz	x8, 403914 <wcrtomb@plt+0xcb4>
  4038fc:	ldr	x9, [x19, #1528]
  403900:	cmp	x8, x9
  403904:	b.cs	4038e4 <wcrtomb@plt+0xc84>  // b.hs, b.nlast
  403908:	add	x9, x8, #0x1
  40390c:	str	x9, [x27, #1520]
  403910:	b	403938 <wcrtomb@plt+0xcd8>
  403914:	ldr	x0, [x23, #1536]
  403918:	cbz	x0, 4038e4 <wcrtomb@plt+0xc84>
  40391c:	ldrb	w8, [x0]
  403920:	tbnz	w8, #4, 4038e4 <wcrtomb@plt+0xc84>
  403924:	ldp	x8, x9, [x0, #8]
  403928:	cmp	x8, x9
  40392c:	b.cs	403958 <wcrtomb@plt+0xcf8>  // b.hs, b.nlast
  403930:	add	x9, x8, #0x1
  403934:	str	x9, [x0, #8]
  403938:	ldrb	w8, [x8]
  40393c:	cmp	w8, #0xa
  403940:	b.ne	4038e8 <wcrtomb@plt+0xc88>  // b.any
  403944:	ldr	x8, [x11, #1312]
  403948:	add	x8, x8, #0x1
  40394c:	str	x8, [x11, #1312]
  403950:	mov	w8, #0xa                   	// #10
  403954:	b	4038e8 <wcrtomb@plt+0xc88>
  403958:	bl	402c20 <__uflow@plt>
  40395c:	ldur	x14, [x29, #-80]
  403960:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403964:	mov	w8, w0
  403968:	cmp	w8, #0xa
  40396c:	b.ne	4038e8 <wcrtomb@plt+0xc88>  // b.any
  403970:	b	403944 <wcrtomb@plt+0xce4>
  403974:	sub	x0, x29, #0x48
  403978:	bl	405a1c <wcrtomb@plt+0x2dbc>
  40397c:	tbz	w0, #0, 405380 <wcrtomb@plt+0x2720>
  403980:	sub	x0, x29, #0x48
  403984:	mov	w1, #0x20                  	// #32
  403988:	bl	415590 <wcrtomb@plt+0x12930>
  40398c:	ldur	x14, [x29, #-80]
  403990:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403994:	madd	x8, x25, x21, x14
  403998:	str	x0, [x8, #8]
  40399c:	b	4039b0 <wcrtomb@plt+0xd50>
  4039a0:	mov	w26, #0xffffffff            	// #-1
  4039a4:	ldr	x8, [x24]
  4039a8:	ldrh	w8, [x8, w26, sxtw #1]
  4039ac:	tbz	w8, #0, 4035b0 <wcrtomb@plt+0x950>
  4039b0:	ldr	x8, [x27, #1520]
  4039b4:	cbz	x8, 4039d0 <wcrtomb@plt+0xd70>
  4039b8:	ldr	x9, [x19, #1528]
  4039bc:	cmp	x8, x9
  4039c0:	b.cs	4039a0 <wcrtomb@plt+0xd40>  // b.hs, b.nlast
  4039c4:	add	x9, x8, #0x1
  4039c8:	str	x9, [x27, #1520]
  4039cc:	b	4039f4 <wcrtomb@plt+0xd94>
  4039d0:	ldr	x0, [x23, #1536]
  4039d4:	cbz	x0, 4039a0 <wcrtomb@plt+0xd40>
  4039d8:	ldrb	w8, [x0]
  4039dc:	tbnz	w8, #4, 4039a0 <wcrtomb@plt+0xd40>
  4039e0:	ldp	x8, x9, [x0, #8]
  4039e4:	cmp	x8, x9
  4039e8:	b.cs	403a10 <wcrtomb@plt+0xdb0>  // b.hs, b.nlast
  4039ec:	add	x9, x8, #0x1
  4039f0:	str	x9, [x0, #8]
  4039f4:	ldrb	w26, [x8]
  4039f8:	cmp	w26, #0xa
  4039fc:	b.ne	4039a4 <wcrtomb@plt+0xd44>  // b.any
  403a00:	ldr	x8, [x11, #1312]
  403a04:	add	x8, x8, #0x1
  403a08:	str	x8, [x11, #1312]
  403a0c:	b	4039a4 <wcrtomb@plt+0xd44>
  403a10:	bl	402c20 <__uflow@plt>
  403a14:	ldur	x14, [x29, #-80]
  403a18:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403a1c:	mov	w26, w0
  403a20:	cmp	w26, #0xa
  403a24:	b.ne	4039a4 <wcrtomb@plt+0xd44>  // b.any
  403a28:	b	403a00 <wcrtomb@plt+0xda0>
  403a2c:	madd	x8, x25, x21, x14
  403a30:	ldr	x8, [x8, #8]
  403a34:	cbz	x8, 403a4c <wcrtomb@plt+0xdec>
  403a38:	b	40535c <wcrtomb@plt+0x26fc>
  403a3c:	mov	w8, #0xffffffff            	// #-1
  403a40:	ldr	x9, [x24]
  403a44:	ldrh	w10, [x9, w8, sxtw #1]
  403a48:	tbz	w10, #0, 403acc <wcrtomb@plt+0xe6c>
  403a4c:	ldr	x8, [x27, #1520]
  403a50:	cbz	x8, 403a6c <wcrtomb@plt+0xe0c>
  403a54:	ldr	x9, [x19, #1528]
  403a58:	cmp	x8, x9
  403a5c:	b.cs	403a3c <wcrtomb@plt+0xddc>  // b.hs, b.nlast
  403a60:	add	x9, x8, #0x1
  403a64:	str	x9, [x27, #1520]
  403a68:	b	403a90 <wcrtomb@plt+0xe30>
  403a6c:	ldr	x0, [x23, #1536]
  403a70:	cbz	x0, 403a3c <wcrtomb@plt+0xddc>
  403a74:	ldrb	w8, [x0]
  403a78:	tbnz	w8, #4, 403a3c <wcrtomb@plt+0xddc>
  403a7c:	ldp	x8, x9, [x0, #8]
  403a80:	cmp	x8, x9
  403a84:	b.cs	403ab0 <wcrtomb@plt+0xe50>  // b.hs, b.nlast
  403a88:	add	x9, x8, #0x1
  403a8c:	str	x9, [x0, #8]
  403a90:	ldrb	w8, [x8]
  403a94:	cmp	w8, #0xa
  403a98:	b.ne	403a40 <wcrtomb@plt+0xde0>  // b.any
  403a9c:	ldr	x8, [x11, #1312]
  403aa0:	add	x8, x8, #0x1
  403aa4:	str	x8, [x11, #1312]
  403aa8:	mov	w8, #0xa                   	// #10
  403aac:	b	403a40 <wcrtomb@plt+0xde0>
  403ab0:	bl	402c20 <__uflow@plt>
  403ab4:	ldur	x14, [x29, #-80]
  403ab8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403abc:	mov	w8, w0
  403ac0:	cmp	w8, #0xa
  403ac4:	b.ne	403a40 <wcrtomb@plt+0xde0>  // b.any
  403ac8:	b	403a9c <wcrtomb@plt+0xe3c>
  403acc:	and	w10, w8, #0xff
  403ad0:	ldrh	w9, [x9, w10, uxtw #1]
  403ad4:	tbz	w9, #11, 403ba0 <wcrtomb@plt+0xf40>
  403ad8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403adc:	ldr	w9, [x9, #2264]
  403ae0:	cmp	w9, #0x2
  403ae4:	b.eq	403ba0 <wcrtomb@plt+0xf40>  // b.none
  403ae8:	mov	x20, xzr
  403aec:	b	403b04 <wcrtomb@plt+0xea4>
  403af0:	mov	w8, #0xffffffff            	// #-1
  403af4:	ldr	x9, [x24]
  403af8:	and	w10, w8, #0xff
  403afc:	ldrh	w9, [x9, w10, uxtw #1]
  403b00:	tbz	w9, #11, 403bfc <wcrtomb@plt+0xf9c>
  403b04:	ldr	x9, [x27, #1520]
  403b08:	mov	w10, #0xa                   	// #10
  403b0c:	mul	x10, x20, x10
  403b10:	add	x8, x10, w8, sxtw
  403b14:	sub	x20, x8, #0x30
  403b18:	cbz	x9, 403b40 <wcrtomb@plt+0xee0>
  403b1c:	ldr	x8, [x19, #1528]
  403b20:	cmp	x9, x8
  403b24:	b.cs	403af0 <wcrtomb@plt+0xe90>  // b.hs, b.nlast
  403b28:	add	x8, x9, #0x1
  403b2c:	str	x8, [x27, #1520]
  403b30:	ldrb	w8, [x9]
  403b34:	cmp	w8, #0xa
  403b38:	b.ne	403af4 <wcrtomb@plt+0xe94>  // b.any
  403b3c:	b	403b70 <wcrtomb@plt+0xf10>
  403b40:	ldr	x0, [x23, #1536]
  403b44:	cbz	x0, 403af0 <wcrtomb@plt+0xe90>
  403b48:	ldrb	w8, [x0]
  403b4c:	tbnz	w8, #4, 403af0 <wcrtomb@plt+0xe90>
  403b50:	ldp	x8, x9, [x0, #8]
  403b54:	cmp	x8, x9
  403b58:	b.cs	403b84 <wcrtomb@plt+0xf24>  // b.hs, b.nlast
  403b5c:	add	x9, x8, #0x1
  403b60:	str	x9, [x0, #8]
  403b64:	ldrb	w8, [x8]
  403b68:	cmp	w8, #0xa
  403b6c:	b.ne	403af4 <wcrtomb@plt+0xe94>  // b.any
  403b70:	ldr	x8, [x11, #1312]
  403b74:	add	x8, x8, #0x1
  403b78:	str	x8, [x11, #1312]
  403b7c:	mov	w8, #0xa                   	// #10
  403b80:	b	403af4 <wcrtomb@plt+0xe94>
  403b84:	bl	402c20 <__uflow@plt>
  403b88:	ldur	x14, [x29, #-80]
  403b8c:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403b90:	mov	w8, w0
  403b94:	cmp	w8, #0xa
  403b98:	b.ne	403af4 <wcrtomb@plt+0xe94>  // b.any
  403b9c:	b	403b70 <wcrtomb@plt+0xf10>
  403ba0:	madd	x9, x25, x21, x14
  403ba4:	cmn	w8, #0x1
  403ba8:	mov	w10, #0xffffffff            	// #-1
  403bac:	str	w10, [x9, #24]
  403bb0:	b.eq	404240 <wcrtomb@plt+0x15e0>  // b.none
  403bb4:	cmp	w8, #0xa
  403bb8:	b.ne	403bcc <wcrtomb@plt+0xf6c>  // b.any
  403bbc:	ldr	x9, [x11, #1312]
  403bc0:	cbz	x9, 403bcc <wcrtomb@plt+0xf6c>
  403bc4:	sub	x9, x9, #0x1
  403bc8:	str	x9, [x11, #1312]
  403bcc:	ldr	x9, [x27, #1520]
  403bd0:	cbz	x9, 4041fc <wcrtomb@plt+0x159c>
  403bd4:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403bd8:	ldr	x10, [x10, #1512]
  403bdc:	cmp	x9, x10
  403be0:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  403be4:	sub	x10, x9, #0x1
  403be8:	str	x10, [x27, #1520]
  403bec:	ldurb	w9, [x9, #-1]
  403bf0:	cmp	w8, w9
  403bf4:	b.eq	404240 <wcrtomb@plt+0x15e0>  // b.none
  403bf8:	b	40534c <wcrtomb@plt+0x26ec>
  403bfc:	cmn	w8, #0x1
  403c00:	b.eq	404224 <wcrtomb@plt+0x15c4>  // b.none
  403c04:	cmp	w8, #0xa
  403c08:	b.ne	403c1c <wcrtomb@plt+0xfbc>  // b.any
  403c0c:	ldr	x9, [x11, #1312]
  403c10:	cbz	x9, 403c1c <wcrtomb@plt+0xfbc>
  403c14:	sub	x9, x9, #0x1
  403c18:	str	x9, [x11, #1312]
  403c1c:	ldr	x9, [x27, #1520]
  403c20:	cbz	x9, 404210 <wcrtomb@plt+0x15b0>
  403c24:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403c28:	ldr	x10, [x10, #1512]
  403c2c:	cmp	x9, x10
  403c30:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  403c34:	sub	x10, x9, #0x1
  403c38:	str	x10, [x27, #1520]
  403c3c:	ldurb	w9, [x9, #-1]
  403c40:	cmp	w8, w9
  403c44:	b.eq	404224 <wcrtomb@plt+0x15c4>  // b.none
  403c48:	b	40534c <wcrtomb@plt+0x26ec>
  403c4c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403c50:	ldr	x1, [x8, #1112]
  403c54:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  403c58:	mov	w2, #0x1                   	// #1
  403c5c:	add	x0, x0, #0x570
  403c60:	b	403de0 <wcrtomb@plt+0x1180>
  403c64:	mov	w9, #0x1                   	// #1
  403c68:	lsl	x8, x9, x8
  403c6c:	mov	x9, #0x8200                	// #33280
  403c70:	movk	x9, #0x4b0, lsl #16
  403c74:	movk	x9, #0x100, lsl #32
  403c78:	movk	x9, #0x2200, lsl #48
  403c7c:	tst	x8, x9
  403c80:	b.eq	403768 <wcrtomb@plt+0xb08>  // b.none
  403c84:	b	40531c <wcrtomb@plt+0x26bc>
  403c88:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403c8c:	ldrb	w8, [x8, #1868]
  403c90:	cbz	w8, 403ca8 <wcrtomb@plt+0x1048>
  403c94:	b	405454 <wcrtomb@plt+0x27f4>
  403c98:	mov	w8, #0xffffffff            	// #-1
  403c9c:	ldr	x9, [x24]
  403ca0:	ldrh	w9, [x9, w8, sxtw #1]
  403ca4:	tbz	w9, #0, 403d28 <wcrtomb@plt+0x10c8>
  403ca8:	ldr	x8, [x27, #1520]
  403cac:	cbz	x8, 403cc8 <wcrtomb@plt+0x1068>
  403cb0:	ldr	x9, [x19, #1528]
  403cb4:	cmp	x8, x9
  403cb8:	b.cs	403c98 <wcrtomb@plt+0x1038>  // b.hs, b.nlast
  403cbc:	add	x9, x8, #0x1
  403cc0:	str	x9, [x27, #1520]
  403cc4:	b	403cec <wcrtomb@plt+0x108c>
  403cc8:	ldr	x0, [x23, #1536]
  403ccc:	cbz	x0, 403c98 <wcrtomb@plt+0x1038>
  403cd0:	ldrb	w8, [x0]
  403cd4:	tbnz	w8, #4, 403c98 <wcrtomb@plt+0x1038>
  403cd8:	ldp	x8, x9, [x0, #8]
  403cdc:	cmp	x8, x9
  403ce0:	b.cs	403d0c <wcrtomb@plt+0x10ac>  // b.hs, b.nlast
  403ce4:	add	x9, x8, #0x1
  403ce8:	str	x9, [x0, #8]
  403cec:	ldrb	w8, [x8]
  403cf0:	cmp	w8, #0xa
  403cf4:	b.ne	403c9c <wcrtomb@plt+0x103c>  // b.any
  403cf8:	ldr	x8, [x11, #1312]
  403cfc:	add	x8, x8, #0x1
  403d00:	str	x8, [x11, #1312]
  403d04:	mov	w8, #0xa                   	// #10
  403d08:	b	403c9c <wcrtomb@plt+0x103c>
  403d0c:	bl	402c20 <__uflow@plt>
  403d10:	ldur	x14, [x29, #-80]
  403d14:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403d18:	mov	w8, w0
  403d1c:	cmp	w8, #0xa
  403d20:	b.ne	403c9c <wcrtomb@plt+0x103c>  // b.any
  403d24:	b	403cf8 <wcrtomb@plt+0x1098>
  403d28:	cmp	w8, #0xa
  403d2c:	b.eq	403d38 <wcrtomb@plt+0x10d8>  // b.none
  403d30:	cmn	w8, #0x1
  403d34:	b.ne	403d44 <wcrtomb@plt+0x10e4>  // b.any
  403d38:	madd	x8, x25, x21, x14
  403d3c:	str	xzr, [x8, #32]
  403d40:	b	405090 <wcrtomb@plt+0x2430>
  403d44:	cmp	w8, #0x5c
  403d48:	b.eq	403dac <wcrtomb@plt+0x114c>  // b.none
  403d4c:	cmn	w8, #0x1
  403d50:	b.eq	4053a4 <wcrtomb@plt+0x2744>  // b.none
  403d54:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403d58:	ldr	w9, [x9, #2264]
  403d5c:	cmp	w9, #0x2
  403d60:	b.eq	4053a4 <wcrtomb@plt+0x2744>  // b.none
  403d64:	cmp	w8, #0xa
  403d68:	b.ne	403d7c <wcrtomb@plt+0x111c>  // b.any
  403d6c:	ldr	x9, [x11, #1312]
  403d70:	cbz	x9, 403d7c <wcrtomb@plt+0x111c>
  403d74:	sub	x9, x9, #0x1
  403d78:	str	x9, [x11, #1312]
  403d7c:	ldr	x9, [x27, #1520]
  403d80:	cbz	x9, 40418c <wcrtomb@plt+0x152c>
  403d84:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403d88:	ldr	x10, [x10, #1512]
  403d8c:	cmp	x9, x10
  403d90:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  403d94:	sub	x10, x9, #0x1
  403d98:	str	x10, [x27, #1520]
  403d9c:	ldurb	w9, [x9, #-1]
  403da0:	cmp	w8, w9
  403da4:	b.eq	40419c <wcrtomb@plt+0x153c>  // b.none
  403da8:	b	40534c <wcrtomb@plt+0x26ec>
  403dac:	ldr	x8, [x27, #1520]
  403db0:	cbz	x8, 4041a4 <wcrtomb@plt+0x1544>
  403db4:	ldr	x9, [x19, #1528]
  403db8:	cmp	x8, x9
  403dbc:	b.cs	4041e8 <wcrtomb@plt+0x1588>  // b.hs, b.nlast
  403dc0:	add	x9, x8, #0x1
  403dc4:	str	x9, [x27, #1520]
  403dc8:	b	4041c8 <wcrtomb@plt+0x1568>
  403dcc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403dd0:	ldr	x1, [x8, #1104]
  403dd4:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  403dd8:	add	x0, x0, #0x568
  403ddc:	mov	w2, wzr
  403de0:	mov	x20, x14
  403de4:	bl	4066f0 <wcrtomb@plt+0x3a90>
  403de8:	madd	x8, x25, x21, x20
  403dec:	str	x0, [x8, #24]
  403df0:	b	405090 <wcrtomb@plt+0x2430>
  403df4:	ldr	x8, [x20]
  403df8:	cbnz	x8, 4053b0 <wcrtomb@plt+0x2750>
  403dfc:	ldr	x8, [x27, #1520]
  403e00:	cbz	x8, 404344 <wcrtomb@plt+0x16e4>
  403e04:	ldr	x9, [x19, #1528]
  403e08:	cmp	x8, x9
  403e0c:	b.cs	404dd8 <wcrtomb@plt+0x2178>  // b.hs, b.nlast
  403e10:	add	x9, x8, #0x1
  403e14:	str	x9, [x27, #1520]
  403e18:	b	404368 <wcrtomb@plt+0x1708>
  403e1c:	ldr	x8, [x20]
  403e20:	cbnz	x8, 4053bc <wcrtomb@plt+0x275c>
  403e24:	bl	40632c <wcrtomb@plt+0x36cc>
  403e28:	ldrb	w8, [x0]
  403e2c:	cbz	w8, 4053c8 <wcrtomb@plt+0x2768>
  403e30:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403e34:	add	x9, x9, #0x590
  403e38:	ldp	x9, x8, [x9]
  403e3c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403e40:	ldr	x21, [x10, #1376]
  403e44:	ldr	x22, [x28, #16]
  403e48:	sub	x8, x8, x9
  403e4c:	mov	x20, x0
  403e50:	cmp	x8, #0x2f
  403e54:	b.hi	403e70 <wcrtomb@plt+0x1210>  // b.pmore
  403e58:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  403e5c:	add	x24, x24, #0x578
  403e60:	mov	w1, #0x30                  	// #48
  403e64:	mov	x0, x24
  403e68:	bl	415844 <_obstack_newchunk@@Base>
  403e6c:	ldr	x9, [x24, #24]
  403e70:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403e74:	add	x10, x10, #0x588
  403e78:	ldr	x8, [x10]
  403e7c:	add	x9, x9, #0x30
  403e80:	str	x9, [x10, #8]
  403e84:	cmp	x9, x8
  403e88:	b.ne	403e9c <wcrtomb@plt+0x123c>  // b.any
  403e8c:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403e90:	ldrb	w10, [x11, #1480]
  403e94:	orr	w10, w10, #0x2
  403e98:	strb	w10, [x11, #1480]
  403e9c:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  403ea0:	add	x13, x13, #0x580
  403ea4:	ldr	x10, [x13, #40]
  403ea8:	ldr	x11, [x13]
  403eac:	ldr	x12, [x13, #24]
  403eb0:	add	x9, x10, x9
  403eb4:	bic	x9, x9, x10
  403eb8:	sub	x10, x12, x11
  403ebc:	sub	x11, x9, x11
  403ec0:	cmp	x11, x10
  403ec4:	csel	x9, x12, x9, hi  // hi = pmore
  403ec8:	stp	x9, x9, [x13, #8]
  403ecc:	stp	x22, x20, [x8]
  403ed0:	str	x21, [x8, #40]
  403ed4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  403ed8:	ldrb	w9, [x9, #1872]
  403edc:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  403ee0:	movk	x22, #0x3334
  403ee4:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403ee8:	movk	x22, #0x333, lsl #48
  403eec:	mov	w21, #0x28                  	// #40
  403ef0:	str	x8, [x10, #1376]
  403ef4:	cbz	w9, 405090 <wcrtomb@plt+0x2430>
  403ef8:	mov	x0, x20
  403efc:	bl	4028d0 <strdup@plt>
  403f00:	ldur	x8, [x29, #-80]
  403f04:	madd	x8, x25, x21, x8
  403f08:	str	x0, [x8, #24]
  403f0c:	b	405090 <wcrtomb@plt+0x2430>
  403f10:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  403f14:	ldr	x8, [x8, #1344]
  403f18:	cbz	x8, 4053d4 <wcrtomb@plt+0x2774>
  403f1c:	ldr	x8, [x20]
  403f20:	cbz	x8, 403f38 <wcrtomb@plt+0x12d8>
  403f24:	b	4053e0 <wcrtomb@plt+0x2780>
  403f28:	mov	w8, #0xffffffff            	// #-1
  403f2c:	ldr	x9, [x24]
  403f30:	ldrh	w9, [x9, w8, sxtw #1]
  403f34:	tbz	w9, #0, 403fb4 <wcrtomb@plt+0x1354>
  403f38:	ldr	x8, [x27, #1520]
  403f3c:	cbz	x8, 403f58 <wcrtomb@plt+0x12f8>
  403f40:	ldr	x9, [x19, #1528]
  403f44:	cmp	x8, x9
  403f48:	b.cs	403f28 <wcrtomb@plt+0x12c8>  // b.hs, b.nlast
  403f4c:	add	x9, x8, #0x1
  403f50:	str	x9, [x27, #1520]
  403f54:	b	403f7c <wcrtomb@plt+0x131c>
  403f58:	ldr	x0, [x23, #1536]
  403f5c:	cbz	x0, 403f28 <wcrtomb@plt+0x12c8>
  403f60:	ldrb	w8, [x0]
  403f64:	tbnz	w8, #4, 403f28 <wcrtomb@plt+0x12c8>
  403f68:	ldp	x8, x9, [x0, #8]
  403f6c:	cmp	x8, x9
  403f70:	b.cs	403f9c <wcrtomb@plt+0x133c>  // b.hs, b.nlast
  403f74:	add	x9, x8, #0x1
  403f78:	str	x9, [x0, #8]
  403f7c:	ldrb	w8, [x8]
  403f80:	cmp	w8, #0xa
  403f84:	b.ne	403f2c <wcrtomb@plt+0x12cc>  // b.any
  403f88:	ldr	x8, [x11, #1312]
  403f8c:	add	x8, x8, #0x1
  403f90:	str	x8, [x11, #1312]
  403f94:	mov	w8, #0xa                   	// #10
  403f98:	b	403f2c <wcrtomb@plt+0x12cc>
  403f9c:	bl	402c20 <__uflow@plt>
  403fa0:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  403fa4:	mov	w8, w0
  403fa8:	cmp	w8, #0xa
  403fac:	b.ne	403f2c <wcrtomb@plt+0x12cc>  // b.any
  403fb0:	b	403f88 <wcrtomb@plt+0x1328>
  403fb4:	cmp	w8, #0x22
  403fb8:	b.le	404330 <wcrtomb@plt+0x16d0>
  403fbc:	cmp	w8, #0x7d
  403fc0:	b.eq	403fd4 <wcrtomb@plt+0x1374>  // b.none
  403fc4:	cmp	w8, #0x3b
  403fc8:	b.eq	405034 <wcrtomb@plt+0x23d4>  // b.none
  403fcc:	cmp	w8, #0x23
  403fd0:	b.ne	40538c <wcrtomb@plt+0x272c>  // b.any
  403fd4:	ldr	x9, [x27, #1520]
  403fd8:	cbz	x9, 405028 <wcrtomb@plt+0x23c8>
  403fdc:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  403fe0:	ldr	x10, [x10, #1512]
  403fe4:	cmp	x9, x10
  403fe8:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  403fec:	sub	x10, x9, #0x1
  403ff0:	str	x10, [x27, #1520]
  403ff4:	ldurb	w9, [x9, #-1]
  403ff8:	cmp	w8, w9
  403ffc:	b.eq	405034 <wcrtomb@plt+0x23d4>  // b.none
  404000:	b	40534c <wcrtomb@plt+0x26ec>
  404004:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  404008:	add	x9, x9, #0x590
  40400c:	ldp	x9, x8, [x9]
  404010:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404014:	ldr	x20, [x10, #1344]
  404018:	ldr	x21, [x28, #16]
  40401c:	sub	x8, x8, x9
  404020:	cmp	x8, #0x2f
  404024:	b.hi	404044 <wcrtomb@plt+0x13e4>  // b.pmore
  404028:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40402c:	add	x24, x24, #0x578
  404030:	mov	w1, #0x30                  	// #48
  404034:	mov	x0, x24
  404038:	bl	415844 <_obstack_newchunk@@Base>
  40403c:	ldur	x14, [x29, #-80]
  404040:	ldr	x9, [x24, #24]
  404044:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404048:	add	x10, x10, #0x588
  40404c:	ldr	x8, [x10]
  404050:	add	x9, x9, #0x30
  404054:	str	x9, [x10, #8]
  404058:	cmp	x9, x8
  40405c:	b.ne	404070 <wcrtomb@plt+0x1410>  // b.any
  404060:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404064:	ldrb	w10, [x11, #1480]
  404068:	orr	w10, w10, #0x2
  40406c:	strb	w10, [x11, #1480]
  404070:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  404074:	add	x13, x13, #0x580
  404078:	ldr	x10, [x13, #40]
  40407c:	ldr	x11, [x13]
  404080:	ldr	x12, [x13, #24]
  404084:	add	x9, x10, x9
  404088:	bic	x9, x9, x10
  40408c:	sub	x10, x12, x11
  404090:	sub	x11, x9, x11
  404094:	cmp	x11, x10
  404098:	csel	x9, x12, x9, hi  // hi = pmore
  40409c:	stp	x9, x9, [x13, #8]
  4040a0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4040a4:	stp	x21, xzr, [x8]
  4040a8:	add	x9, x9, #0x518
  4040ac:	ldr	q0, [x9]
  4040b0:	ldr	x9, [x9, #16]
  4040b4:	mov	w21, #0x28                  	// #40
  4040b8:	str	q0, [x8, #16]
  4040bc:	stp	x9, x20, [x8, #32]
  4040c0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4040c4:	str	x8, [x9, #1344]
  4040c8:	madd	x8, x25, x21, x14
  4040cc:	ldrb	w9, [x8, #20]
  4040d0:	cmp	w9, #0x0
  4040d4:	cset	w9, eq  // eq = none
  4040d8:	strb	w9, [x8, #20]
  4040dc:	b	405090 <wcrtomb@plt+0x2430>
  4040e0:	ldr	x8, [x27, #1520]
  4040e4:	cbz	x8, 4043ac <wcrtomb@plt+0x174c>
  4040e8:	ldr	x9, [x19, #1528]
  4040ec:	cmp	x8, x9
  4040f0:	b.cs	4043ec <wcrtomb@plt+0x178c>  // b.hs, b.nlast
  4040f4:	add	x9, x8, #0x1
  4040f8:	str	x9, [x27, #1520]
  4040fc:	b	4043d0 <wcrtomb@plt+0x1770>
  404100:	bl	406554 <wcrtomb@plt+0x38f4>
  404104:	mov	x20, x0
  404108:	bl	40c0d0 <wcrtomb@plt+0x9470>
  40410c:	ldrb	w8, [x0]
  404110:	cbz	w8, 4053ec <wcrtomb@plt+0x278c>
  404114:	bl	4155e4 <wcrtomb@plt+0x12984>
  404118:	ldur	x8, [x29, #-80]
  40411c:	madd	x8, x25, x21, x8
  404120:	str	x0, [x8, #24]
  404124:	b	405088 <wcrtomb@plt+0x2428>
  404128:	ldr	x8, [x27, #1520]
  40412c:	cbz	x8, 404668 <wcrtomb@plt+0x1a08>
  404130:	ldr	x9, [x19, #1528]
  404134:	cmp	x8, x9
  404138:	b.cs	4046a8 <wcrtomb@plt+0x1a48>  // b.hs, b.nlast
  40413c:	add	x9, x8, #0x1
  404140:	str	x9, [x27, #1520]
  404144:	b	40468c <wcrtomb@plt+0x1a2c>
  404148:	bl	40632c <wcrtomb@plt+0x36cc>
  40414c:	ldrb	w8, [x0]
  404150:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  404154:	mov	x20, x0
  404158:	add	x1, x1, #0xd99
  40415c:	cmp	w8, #0x0
  404160:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  404164:	add	x8, x8, #0xd95
  404168:	csel	x0, x8, x0, eq  // eq = none
  40416c:	bl	4027d0 <strverscmp@plt>
  404170:	cmp	w0, #0x1
  404174:	b.ge	4053f8 <wcrtomb@plt+0x2798>  // b.tcont
  404178:	mov	x0, x20
  40417c:	bl	402a10 <free@plt>
  404180:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404184:	str	wzr, [x8, #2264]
  404188:	b	403414 <wcrtomb@plt+0x7b4>
  40418c:	ldr	x1, [x23, #1536]
  404190:	mov	w0, w8
  404194:	bl	402a20 <ungetc@plt>
  404198:	ldur	x14, [x29, #-80]
  40419c:	mov	w1, #0xa                   	// #10
  4041a0:	b	4041ec <wcrtomb@plt+0x158c>
  4041a4:	ldr	x0, [x23, #1536]
  4041a8:	cbz	x0, 4041e8 <wcrtomb@plt+0x1588>
  4041ac:	ldrb	w8, [x0]
  4041b0:	tbnz	w8, #4, 4041e8 <wcrtomb@plt+0x1588>
  4041b4:	ldp	x8, x9, [x0, #8]
  4041b8:	cmp	x8, x9
  4041bc:	b.cs	4051d8 <wcrtomb@plt+0x2578>  // b.hs, b.nlast
  4041c0:	add	x9, x8, #0x1
  4041c4:	str	x9, [x0, #8]
  4041c8:	ldrb	w1, [x8]
  4041cc:	cmp	w1, #0xa
  4041d0:	b.ne	4041ec <wcrtomb@plt+0x158c>  // b.any
  4041d4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4041d8:	ldr	x8, [x9, #1312]
  4041dc:	add	x8, x8, #0x1
  4041e0:	str	x8, [x9, #1312]
  4041e4:	b	4041ec <wcrtomb@plt+0x158c>
  4041e8:	mov	w1, #0xffffffff            	// #-1
  4041ec:	madd	x8, x25, x21, x14
  4041f0:	add	x0, x8, #0x18
  4041f4:	bl	405798 <wcrtomb@plt+0x2b38>
  4041f8:	b	405090 <wcrtomb@plt+0x2430>
  4041fc:	ldr	x1, [x23, #1536]
  404200:	mov	w0, w8
  404204:	bl	402a20 <ungetc@plt>
  404208:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40420c:	b	404240 <wcrtomb@plt+0x15e0>
  404210:	ldr	x1, [x23, #1536]
  404214:	mov	w0, w8
  404218:	bl	402a20 <ungetc@plt>
  40421c:	ldur	x14, [x29, #-80]
  404220:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404224:	madd	x8, x25, x21, x14
  404228:	str	w20, [x8, #24]
  40422c:	b	404240 <wcrtomb@plt+0x15e0>
  404230:	mov	w8, #0xffffffff            	// #-1
  404234:	ldr	x9, [x24]
  404238:	ldrh	w9, [x9, w8, sxtw #1]
  40423c:	tbz	w9, #0, 4042bc <wcrtomb@plt+0x165c>
  404240:	ldr	x8, [x27, #1520]
  404244:	cbz	x8, 404260 <wcrtomb@plt+0x1600>
  404248:	ldr	x9, [x19, #1528]
  40424c:	cmp	x8, x9
  404250:	b.cs	404230 <wcrtomb@plt+0x15d0>  // b.hs, b.nlast
  404254:	add	x9, x8, #0x1
  404258:	str	x9, [x27, #1520]
  40425c:	b	404284 <wcrtomb@plt+0x1624>
  404260:	ldr	x0, [x23, #1536]
  404264:	cbz	x0, 404230 <wcrtomb@plt+0x15d0>
  404268:	ldrb	w8, [x0]
  40426c:	tbnz	w8, #4, 404230 <wcrtomb@plt+0x15d0>
  404270:	ldp	x8, x9, [x0, #8]
  404274:	cmp	x8, x9
  404278:	b.cs	4042a4 <wcrtomb@plt+0x1644>  // b.hs, b.nlast
  40427c:	add	x9, x8, #0x1
  404280:	str	x9, [x0, #8]
  404284:	ldrb	w8, [x8]
  404288:	cmp	w8, #0xa
  40428c:	b.ne	404234 <wcrtomb@plt+0x15d4>  // b.any
  404290:	ldr	x8, [x11, #1312]
  404294:	add	x8, x8, #0x1
  404298:	str	x8, [x11, #1312]
  40429c:	mov	w8, #0xa                   	// #10
  4042a0:	b	404234 <wcrtomb@plt+0x15d4>
  4042a4:	bl	402c20 <__uflow@plt>
  4042a8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4042ac:	mov	w8, w0
  4042b0:	cmp	w8, #0xa
  4042b4:	b.ne	404234 <wcrtomb@plt+0x15d4>  // b.any
  4042b8:	b	404290 <wcrtomb@plt+0x1630>
  4042bc:	cmp	w8, #0x22
  4042c0:	b.le	40430c <wcrtomb@plt+0x16ac>
  4042c4:	cmp	w8, #0x7d
  4042c8:	b.eq	4042dc <wcrtomb@plt+0x167c>  // b.none
  4042cc:	cmp	w8, #0x3b
  4042d0:	b.eq	405090 <wcrtomb@plt+0x2430>  // b.none
  4042d4:	cmp	w8, #0x23
  4042d8:	b.ne	40538c <wcrtomb@plt+0x272c>  // b.any
  4042dc:	ldr	x9, [x27, #1520]
  4042e0:	cbz	x9, 404320 <wcrtomb@plt+0x16c0>
  4042e4:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4042e8:	ldr	x10, [x10, #1512]
  4042ec:	cmp	x9, x10
  4042f0:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  4042f4:	sub	x10, x9, #0x1
  4042f8:	str	x10, [x27, #1520]
  4042fc:	ldurb	w9, [x9, #-1]
  404300:	cmp	w8, w9
  404304:	b.eq	405090 <wcrtomb@plt+0x2430>  // b.none
  404308:	b	40534c <wcrtomb@plt+0x26ec>
  40430c:	cmn	w8, #0x1
  404310:	b.eq	405090 <wcrtomb@plt+0x2430>  // b.none
  404314:	cmp	w8, #0xa
  404318:	b.eq	405090 <wcrtomb@plt+0x2430>  // b.none
  40431c:	b	40538c <wcrtomb@plt+0x272c>
  404320:	ldr	x1, [x23, #1536]
  404324:	mov	w0, w8
  404328:	bl	402a20 <ungetc@plt>
  40432c:	b	405090 <wcrtomb@plt+0x2430>
  404330:	cmn	w8, #0x1
  404334:	b.eq	405034 <wcrtomb@plt+0x23d4>  // b.none
  404338:	cmp	w8, #0xa
  40433c:	b.eq	405034 <wcrtomb@plt+0x23d4>  // b.none
  404340:	b	40538c <wcrtomb@plt+0x272c>
  404344:	ldr	x0, [x23, #1536]
  404348:	cbz	x0, 4050e0 <wcrtomb@plt+0x2480>
  40434c:	ldrb	w8, [x0]
  404350:	tbnz	w8, #4, 4050e8 <wcrtomb@plt+0x2488>
  404354:	ldp	x8, x9, [x0, #8]
  404358:	cmp	x8, x9
  40435c:	b.cs	4051f0 <wcrtomb@plt+0x2590>  // b.hs, b.nlast
  404360:	add	x9, x8, #0x1
  404364:	str	x9, [x0, #8]
  404368:	ldrb	w0, [x8]
  40436c:	cmp	w0, #0x6e
  404370:	b.ne	405248 <wcrtomb@plt+0x25e8>  // b.any
  404374:	ldr	x8, [x11, #1312]
  404378:	cmp	x8, #0x1
  40437c:	b.hi	40525c <wcrtomb@plt+0x25fc>  // b.pmore
  404380:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404384:	ldrb	w8, [x8, #1336]
  404388:	cbnz	w8, 40525c <wcrtomb@plt+0x25fc>
  40438c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404390:	ldr	x8, [x8, #1512]
  404394:	cbz	x8, 4051ac <wcrtomb@plt+0x254c>
  404398:	ldr	x9, [x27, #1520]
  40439c:	add	x8, x8, #0x2
  4043a0:	cmp	x9, x8
  4043a4:	b.ne	4051d0 <wcrtomb@plt+0x2570>  // b.any
  4043a8:	b	4051c4 <wcrtomb@plt+0x2564>
  4043ac:	ldr	x0, [x23, #1536]
  4043b0:	cbz	x0, 4043ec <wcrtomb@plt+0x178c>
  4043b4:	ldrb	w8, [x0]
  4043b8:	tbnz	w8, #4, 4043ec <wcrtomb@plt+0x178c>
  4043bc:	ldp	x8, x9, [x0, #8]
  4043c0:	cmp	x8, x9
  4043c4:	b.cs	405204 <wcrtomb@plt+0x25a4>  // b.hs, b.nlast
  4043c8:	add	x9, x8, #0x1
  4043cc:	str	x9, [x0, #8]
  4043d0:	ldrb	w20, [x8]
  4043d4:	cmp	w20, #0xa
  4043d8:	b.ne	4043f0 <wcrtomb@plt+0x1790>  // b.any
  4043dc:	ldr	x8, [x11, #1312]
  4043e0:	add	x8, x8, #0x1
  4043e4:	str	x8, [x11, #1312]
  4043e8:	b	4043f0 <wcrtomb@plt+0x1790>
  4043ec:	mov	w20, #0xffffffff            	// #-1
  4043f0:	mov	w0, w20
  4043f4:	mov	w1, wzr
  4043f8:	bl	4068cc <wcrtomb@plt+0x3c6c>
  4043fc:	cbz	x0, 405404 <wcrtomb@plt+0x27a4>
  404400:	mov	x22, x0
  404404:	bl	40c0d0 <wcrtomb@plt+0x9470>
  404408:	mov	x26, x0
  40440c:	mov	x0, x22
  404410:	stur	x22, [x29, #-112]
  404414:	bl	40c0d8 <wcrtomb@plt+0x9478>
  404418:	mov	x1, x0
  40441c:	mov	x0, x26
  404420:	mov	w2, wzr
  404424:	bl	402e24 <wcrtomb@plt+0x1c4>
  404428:	mov	x22, x0
  40442c:	mov	w0, w20
  404430:	mov	w1, wzr
  404434:	bl	4068cc <wcrtomb@plt+0x3c6c>
  404438:	cbz	x0, 405404 <wcrtomb@plt+0x27a4>
  40443c:	mov	x21, x0
  404440:	bl	40c0d0 <wcrtomb@plt+0x9470>
  404444:	mov	x20, x0
  404448:	mov	x0, x21
  40444c:	bl	40c0d8 <wcrtomb@plt+0x9478>
  404450:	mov	x1, x0
  404454:	mov	x0, x20
  404458:	mov	w2, wzr
  40445c:	stur	x20, [x29, #-96]
  404460:	bl	402e24 <wcrtomb@plt+0x1c4>
  404464:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404468:	ldr	w8, [x8, #2260]
  40446c:	stur	x0, [x29, #-88]
  404470:	cmp	w8, #0x2
  404474:	b.lt	4044f8 <wcrtomb@plt+0x1898>  // b.tstop
  404478:	mov	w1, #0x8                   	// #8
  40447c:	mov	x0, x22
  404480:	mov	x19, x26
  404484:	str	x21, [sp, #8]
  404488:	mov	w26, #0x28                  	// #40
  40448c:	bl	415564 <wcrtomb@plt+0x12904>
  404490:	mov	x20, x0
  404494:	stur	xzr, [x29, #-40]
  404498:	cbz	x22, 404e10 <wcrtomb@plt+0x21b0>
  40449c:	mov	x21, xzr
  4044a0:	mov	x23, xzr
  4044a4:	b	4044e0 <wcrtomb@plt+0x1880>
  4044a8:	add	x1, x19, x21
  4044ac:	sub	x2, x22, x21
  4044b0:	sub	x3, x29, #0x28
  4044b4:	mov	x0, xzr
  4044b8:	bl	415680 <wcrtomb@plt+0x12a20>
  4044bc:	sub	x8, x0, #0x1
  4044c0:	cmn	x8, #0x4
  4044c4:	csinc	x8, x0, xzr, ls  // ls = plast
  4044c8:	add	x9, x23, #0x1
  4044cc:	add	x21, x8, x21
  4044d0:	cmp	x22, x21
  4044d4:	str	x8, [x20, x23, lsl #3]
  4044d8:	mov	x23, x9
  4044dc:	b.ls	404e14 <wcrtomb@plt+0x21b4>  // b.plast
  4044e0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4044e4:	ldr	w8, [x8, #2260]
  4044e8:	cmp	w8, #0x1
  4044ec:	b.ne	4044a8 <wcrtomb@plt+0x1848>  // b.any
  4044f0:	mov	w0, #0x1                   	// #1
  4044f4:	b	4044bc <wcrtomb@plt+0x185c>
  4044f8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4044fc:	add	x9, x9, #0x590
  404500:	ldp	x9, x8, [x9]
  404504:	mov	x20, x21
  404508:	sub	x8, x8, x9
  40450c:	cmp	x8, #0xff
  404510:	b.hi	404540 <wcrtomb@plt+0x18e0>  // b.pmore
  404514:	mov	x19, x26
  404518:	mov	x26, x20
  40451c:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  404520:	add	x20, x20, #0x578
  404524:	mov	w1, #0x100                 	// #256
  404528:	mov	x0, x20
  40452c:	bl	415844 <_obstack_newchunk@@Base>
  404530:	ldr	x9, [x20, #24]
  404534:	mov	x20, x26
  404538:	mov	x26, x19
  40453c:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  404540:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404544:	add	x10, x10, #0x588
  404548:	ldr	x8, [x10]
  40454c:	add	x9, x9, #0x100
  404550:	mov	w21, #0x28                  	// #40
  404554:	str	x9, [x10, #8]
  404558:	cmp	x9, x8
  40455c:	b.ne	404570 <wcrtomb@plt+0x1910>  // b.any
  404560:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404564:	ldrb	w10, [x11, #1480]
  404568:	orr	w10, w10, #0x2
  40456c:	strb	w10, [x11, #1480]
  404570:	adrp	x14, 439000 <_obstack_memory_used@@Base+0x235a8>
  404574:	add	x14, x14, #0x580
  404578:	ldr	x10, [x14, #40]
  40457c:	ldr	x11, [x14]
  404580:	ldr	x12, [x14, #24]
  404584:	add	x9, x10, x9
  404588:	bic	x9, x9, x10
  40458c:	sub	x13, x12, x11
  404590:	sub	x10, x9, x11
  404594:	cmp	x10, x13
  404598:	ldur	x10, [x29, #-88]
  40459c:	csel	x9, x12, x9, hi  // hi = pmore
  4045a0:	stp	x9, x9, [x14, #8]
  4045a4:	cmp	x22, x10
  4045a8:	b.ne	405374 <wcrtomb@plt+0x2714>  // b.any
  4045ac:	ldur	q0, [x29, #-144]
  4045b0:	ldur	x12, [x29, #-80]
  4045b4:	ldur	x13, [x29, #-96]
  4045b8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4045bc:	str	q0, [x8]
  4045c0:	ldur	q0, [x29, #-160]
  4045c4:	str	q0, [x8, #16]
  4045c8:	ldur	q0, [x29, #-176]
  4045cc:	str	q0, [x8, #32]
  4045d0:	ldur	q0, [x29, #-192]
  4045d4:	str	q0, [x8, #48]
  4045d8:	ldr	q0, [sp, #192]
  4045dc:	str	q0, [x8, #64]
  4045e0:	ldr	q0, [sp, #176]
  4045e4:	str	q0, [x8, #80]
  4045e8:	ldr	q0, [sp, #160]
  4045ec:	str	q0, [x8, #96]
  4045f0:	ldr	q0, [sp, #144]
  4045f4:	str	q0, [x8, #112]
  4045f8:	ldr	q0, [sp, #128]
  4045fc:	str	q0, [x8, #128]
  404600:	ldr	q0, [sp, #112]
  404604:	str	q0, [x8, #144]
  404608:	ldr	q0, [sp, #96]
  40460c:	str	q0, [x8, #160]
  404610:	ldr	q0, [sp, #80]
  404614:	str	q0, [x8, #176]
  404618:	ldr	q0, [sp, #64]
  40461c:	str	q0, [x8, #192]
  404620:	ldr	q0, [sp, #48]
  404624:	str	q0, [x8, #208]
  404628:	ldr	q0, [sp, #32]
  40462c:	str	q0, [x8, #224]
  404630:	ldr	q0, [sp, #16]
  404634:	str	q0, [x8, #240]
  404638:	cbz	x22, 404650 <wcrtomb@plt+0x19f0>
  40463c:	ldrb	w9, [x13], #1
  404640:	ldrb	w10, [x26], #1
  404644:	subs	x22, x22, #0x1
  404648:	strb	w9, [x8, x10]
  40464c:	b.ne	40463c <wcrtomb@plt+0x19dc>  // b.any
  404650:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  404654:	movk	x22, #0x3334
  404658:	madd	x9, x25, x21, x12
  40465c:	movk	x22, #0x333, lsl #48
  404660:	str	x8, [x9, #24]
  404664:	b	404f48 <wcrtomb@plt+0x22e8>
  404668:	ldr	x0, [x23, #1536]
  40466c:	cbz	x0, 4046a8 <wcrtomb@plt+0x1a48>
  404670:	ldrb	w8, [x0]
  404674:	tbnz	w8, #4, 4046a8 <wcrtomb@plt+0x1a48>
  404678:	ldp	x8, x9, [x0, #8]
  40467c:	cmp	x8, x9
  404680:	b.cs	40521c <wcrtomb@plt+0x25bc>  // b.hs, b.nlast
  404684:	add	x9, x8, #0x1
  404688:	str	x9, [x0, #8]
  40468c:	ldrb	w20, [x8]
  404690:	cmp	w20, #0xa
  404694:	b.ne	4046ac <wcrtomb@plt+0x1a4c>  // b.any
  404698:	ldr	x8, [x11, #1312]
  40469c:	add	x8, x8, #0x1
  4046a0:	str	x8, [x11, #1312]
  4046a4:	b	4046ac <wcrtomb@plt+0x1a4c>
  4046a8:	mov	w20, #0xffffffff            	// #-1
  4046ac:	mov	w1, #0x1                   	// #1
  4046b0:	mov	w0, w20
  4046b4:	bl	4068cc <wcrtomb@plt+0x3c6c>
  4046b8:	cbz	x0, 405410 <wcrtomb@plt+0x27b0>
  4046bc:	mov	x22, x0
  4046c0:	mov	w0, w20
  4046c4:	mov	w1, wzr
  4046c8:	bl	4068cc <wcrtomb@plt+0x3c6c>
  4046cc:	cbz	x0, 405410 <wcrtomb@plt+0x27b0>
  4046d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4046d4:	add	x8, x8, #0x590
  4046d8:	ldp	x8, x9, [x8]
  4046dc:	mov	x26, x0
  4046e0:	sub	x9, x9, x8
  4046e4:	cmp	x9, #0x27
  4046e8:	b.hi	404704 <wcrtomb@plt+0x1aa4>  // b.pmore
  4046ec:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  4046f0:	add	x20, x20, #0x578
  4046f4:	mov	w1, #0x28                  	// #40
  4046f8:	mov	x0, x20
  4046fc:	bl	415844 <_obstack_newchunk@@Base>
  404700:	ldr	x8, [x20, #24]
  404704:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  404708:	add	x9, x9, #0x588
  40470c:	stur	x22, [x29, #-96]
  404710:	ldr	x22, [x9]
  404714:	ldur	x12, [x29, #-80]
  404718:	add	x8, x8, #0x28
  40471c:	str	x8, [x9, #8]
  404720:	cmp	x8, x22
  404724:	b.ne	404738 <wcrtomb@plt+0x1ad8>  // b.any
  404728:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  40472c:	ldrb	w9, [x10, #1480]
  404730:	orr	w9, w9, #0x2
  404734:	strb	w9, [x10, #1480]
  404738:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  40473c:	add	x13, x13, #0x580
  404740:	ldr	x9, [x13, #40]
  404744:	ldr	x10, [x13]
  404748:	ldr	x11, [x13, #24]
  40474c:	madd	x14, x25, x21, x12
  404750:	add	x8, x9, x8
  404754:	bic	x8, x8, x9
  404758:	sub	x12, x11, x10
  40475c:	sub	x9, x8, x10
  404760:	cmp	x9, x12
  404764:	csel	x8, x11, x8, hi  // hi = pmore
  404768:	stp	x8, x8, [x13, #8]
  40476c:	str	x22, [x14, #24]!
  404770:	mov	x0, x26
  404774:	stur	x14, [x29, #-112]
  404778:	bl	40c0d0 <wcrtomb@plt+0x9470>
  40477c:	mov	x20, x0
  404780:	mov	x0, x26
  404784:	stur	x26, [x29, #-120]
  404788:	bl	40c0d8 <wcrtomb@plt+0x9478>
  40478c:	mov	x9, x22
  404790:	ldrb	w8, [x9, #32]
  404794:	mov	x22, x0
  404798:	mov	x0, x20
  40479c:	mov	x1, x22
  4047a0:	and	w8, w8, #0xf
  4047a4:	stur	x9, [x29, #-88]
  4047a8:	strb	w8, [x9, #32]
  4047ac:	bl	415590 <wcrtomb@plt+0x12930>
  4047b0:	mov	w2, #0x1                   	// #1
  4047b4:	mov	x1, x22
  4047b8:	mov	x28, x0
  4047bc:	bl	402e24 <wcrtomb@plt+0x1c4>
  4047c0:	cmp	x0, #0x1
  4047c4:	add	x15, x28, x0
  4047c8:	stur	x15, [x29, #-80]
  4047cc:	b.lt	404a54 <wcrtomb@plt+0x1df4>  // b.tstop
  4047d0:	mov	w25, wzr
  4047d4:	mov	w22, wzr
  4047d8:	sub	x26, x29, #0x28
  4047dc:	mov	x21, x28
  4047e0:	b	404860 <wcrtomb@plt+0x1c00>
  4047e4:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4047e8:	add	x11, x11, #0x588
  4047ec:	ldr	x8, [x11]
  4047f0:	add	x10, x10, #0x20
  4047f4:	sub	x9, x21, x28
  4047f8:	str	x10, [x11, #8]
  4047fc:	cmp	x10, x8
  404800:	b.eq	4049b4 <wcrtomb@plt+0x1d54>  // b.none
  404804:	adrp	x14, 439000 <_obstack_memory_used@@Base+0x235a8>
  404808:	add	x14, x14, #0x580
  40480c:	ldr	x11, [x14, #40]
  404810:	ldr	x12, [x14]
  404814:	ldr	x13, [x14, #24]
  404818:	add	x10, x11, x10
  40481c:	bic	x10, x10, x11
  404820:	sub	x11, x13, x12
  404824:	sub	x12, x10, x12
  404828:	cmp	x12, x11
  40482c:	csel	x10, x13, x10, hi  // hi = pmore
  404830:	stp	x10, x10, [x14, #8]
  404834:	stp	x28, x9, [x8]
  404838:	str	w22, [x8, #20]
  40483c:	add	x28, x21, #0x1
  404840:	mov	x9, x21
  404844:	mov	w22, w25
  404848:	str	x8, [x26, #24]
  40484c:	str	wzr, [x8, #16]
  404850:	mov	x26, x8
  404854:	add	x21, x9, #0x1
  404858:	cmp	x21, x15
  40485c:	b.cs	404a5c <wcrtomb@plt+0x1dfc>  // b.hs, b.nlast
  404860:	ldrb	w8, [x21]
  404864:	cmp	w8, #0x26
  404868:	b.eq	40495c <wcrtomb@plt+0x1cfc>  // b.none
  40486c:	cmp	w8, #0x5c
  404870:	b.ne	404994 <wcrtomb@plt+0x1d34>  // b.any
  404874:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  404878:	add	x9, x9, #0x590
  40487c:	ldp	x9, x8, [x9]
  404880:	sub	x23, x21, x28
  404884:	sub	x8, x8, x9
  404888:	cmp	x8, #0x1f
  40488c:	b.hi	4048ac <wcrtomb@plt+0x1c4c>  // b.pmore
  404890:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  404894:	add	x20, x20, #0x578
  404898:	mov	w1, #0x20                  	// #32
  40489c:	mov	x0, x20
  4048a0:	bl	415844 <_obstack_newchunk@@Base>
  4048a4:	ldur	x15, [x29, #-80]
  4048a8:	ldr	x9, [x20, #24]
  4048ac:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4048b0:	add	x10, x10, #0x588
  4048b4:	ldr	x8, [x10]
  4048b8:	add	x9, x9, #0x20
  4048bc:	str	x9, [x10, #8]
  4048c0:	cmp	x9, x8
  4048c4:	b.ne	4048d8 <wcrtomb@plt+0x1c78>  // b.any
  4048c8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4048cc:	ldrb	w10, [x11, #1480]
  4048d0:	orr	w10, w10, #0x2
  4048d4:	strb	w10, [x11, #1480]
  4048d8:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  4048dc:	add	x13, x13, #0x580
  4048e0:	ldr	x10, [x13, #40]
  4048e4:	ldr	x11, [x13]
  4048e8:	ldr	x12, [x13, #24]
  4048ec:	add	x9, x10, x9
  4048f0:	bic	x10, x9, x10
  4048f4:	sub	x9, x12, x11
  4048f8:	sub	x11, x10, x11
  4048fc:	cmp	x11, x9
  404900:	add	x9, x21, #0x1
  404904:	csel	x10, x12, x10, hi  // hi = pmore
  404908:	cmp	x9, x15
  40490c:	stp	x10, x10, [x13, #8]
  404910:	mov	w10, #0xffffffff            	// #-1
  404914:	stp	x28, x23, [x8]
  404918:	stp	w10, w22, [x8, #16]
  40491c:	str	x8, [x26, #24]
  404920:	b.eq	40499c <wcrtomb@plt+0x1d3c>  // b.none
  404924:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404928:	ldr	w10, [x10, #2264]
  40492c:	cmp	w10, #0x2
  404930:	b.ne	4049c8 <wcrtomb@plt+0x1d68>  // b.any
  404934:	ldr	x11, [x24]
  404938:	ldrb	w10, [x9]
  40493c:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  404940:	ldrh	w11, [x11, x10, lsl #1]
  404944:	tbnz	w11, #11, 4049d0 <wcrtomb@plt+0x1d70>
  404948:	strb	w10, [x21]
  40494c:	ldr	x10, [x8, #8]
  404950:	add	x10, x10, #0x1
  404954:	str	x10, [x8, #8]
  404958:	b	404a18 <wcrtomb@plt+0x1db8>
  40495c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  404960:	add	x9, x9, #0x590
  404964:	ldp	x10, x8, [x9]
  404968:	sub	x8, x8, x10
  40496c:	cmp	x8, #0x1f
  404970:	b.hi	4047e4 <wcrtomb@plt+0x1b84>  // b.pmore
  404974:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  404978:	add	x20, x20, #0x578
  40497c:	mov	w1, #0x20                  	// #32
  404980:	mov	x0, x20
  404984:	bl	415844 <_obstack_newchunk@@Base>
  404988:	ldur	x15, [x29, #-80]
  40498c:	ldr	x10, [x20, #24]
  404990:	b	4047e4 <wcrtomb@plt+0x1b84>
  404994:	mov	x9, x21
  404998:	b	404854 <wcrtomb@plt+0x1bf4>
  40499c:	add	x10, x23, #0x1
  4049a0:	str	x10, [x8, #8]
  4049a4:	mov	w22, w25
  4049a8:	mov	w11, w25
  4049ac:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4049b0:	b	404a20 <wcrtomb@plt+0x1dc0>
  4049b4:	adrp	x12, 439000 <_obstack_memory_used@@Base+0x235a8>
  4049b8:	ldrb	w11, [x12, #1480]
  4049bc:	orr	w11, w11, #0x2
  4049c0:	strb	w11, [x12, #1480]
  4049c4:	b	404804 <wcrtomb@plt+0x1ba4>
  4049c8:	ldrb	w10, [x9]
  4049cc:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4049d0:	sub	w12, w10, #0x30
  4049d4:	cmp	w12, #0x45
  4049d8:	b.hi	404948 <wcrtomb@plt+0x1ce8>  // b.pmore
  4049dc:	adrp	x14, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4049e0:	add	x14, x14, #0x716
  4049e4:	adr	x13, 404948 <wcrtomb@plt+0x1ce8>
  4049e8:	ldrb	w11, [x14, x12]
  4049ec:	add	x13, x13, x11, lsl #2
  4049f0:	mov	w22, #0x2                   	// #2
  4049f4:	mov	w11, #0x2                   	// #2
  4049f8:	br	x13
  4049fc:	ldur	x11, [x29, #-88]
  404a00:	str	w12, [x8, #16]
  404a04:	ldrb	w10, [x11, #32]
  404a08:	cmp	w12, w10, lsr #4
  404a0c:	b.le	404a18 <wcrtomb@plt+0x1db8>
  404a10:	bfi	w10, w12, #4, #28
  404a14:	strb	w10, [x11, #32]
  404a18:	mov	w22, w25
  404a1c:	mov	w11, w25
  404a20:	add	x28, x21, #0x2
  404a24:	mov	w25, w11
  404a28:	b	404850 <wcrtomb@plt+0x1bf0>
  404a2c:	mov	w22, #0x1                   	// #1
  404a30:	mov	w11, #0x1                   	// #1
  404a34:	b	404a20 <wcrtomb@plt+0x1dc0>
  404a38:	mov	w22, wzr
  404a3c:	mov	w11, wzr
  404a40:	b	404a20 <wcrtomb@plt+0x1dc0>
  404a44:	orr	w22, w25, #0x4
  404a48:	b	404a1c <wcrtomb@plt+0x1dbc>
  404a4c:	orr	w22, w25, #0x8
  404a50:	b	404a1c <wcrtomb@plt+0x1dbc>
  404a54:	mov	w22, wzr
  404a58:	sub	x26, x29, #0x28
  404a5c:	cmp	x28, x15
  404a60:	b.cs	404b0c <wcrtomb@plt+0x1eac>  // b.hs, b.nlast
  404a64:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  404a68:	add	x9, x9, #0x590
  404a6c:	ldp	x10, x8, [x9]
  404a70:	sub	x8, x8, x10
  404a74:	cmp	x8, #0x1f
  404a78:	b.hi	404a98 <wcrtomb@plt+0x1e38>  // b.pmore
  404a7c:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  404a80:	add	x20, x20, #0x578
  404a84:	mov	w1, #0x20                  	// #32
  404a88:	mov	x0, x20
  404a8c:	bl	415844 <_obstack_newchunk@@Base>
  404a90:	ldur	x15, [x29, #-80]
  404a94:	ldr	x10, [x20, #24]
  404a98:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404a9c:	add	x11, x11, #0x588
  404aa0:	ldr	x8, [x11]
  404aa4:	add	x10, x10, #0x20
  404aa8:	sub	x9, x15, x28
  404aac:	str	x10, [x11, #8]
  404ab0:	cmp	x10, x8
  404ab4:	b.ne	404ac8 <wcrtomb@plt+0x1e68>  // b.any
  404ab8:	adrp	x12, 439000 <_obstack_memory_used@@Base+0x235a8>
  404abc:	ldrb	w11, [x12, #1480]
  404ac0:	orr	w11, w11, #0x2
  404ac4:	strb	w11, [x12, #1480]
  404ac8:	adrp	x14, 439000 <_obstack_memory_used@@Base+0x235a8>
  404acc:	add	x14, x14, #0x580
  404ad0:	ldr	x11, [x14, #40]
  404ad4:	ldr	x12, [x14]
  404ad8:	ldr	x13, [x14, #24]
  404adc:	add	x10, x11, x10
  404ae0:	bic	x10, x10, x11
  404ae4:	sub	x11, x13, x12
  404ae8:	sub	x12, x10, x12
  404aec:	cmp	x12, x11
  404af0:	csel	x10, x13, x10, hi  // hi = pmore
  404af4:	stp	x10, x10, [x14, #8]
  404af8:	stp	x28, x9, [x8]
  404afc:	mov	w9, #0xffffffff            	// #-1
  404b00:	stp	w9, w22, [x8, #16]
  404b04:	str	x8, [x26, #24]
  404b08:	mov	x26, x8
  404b0c:	str	xzr, [x26, #24]
  404b10:	ldur	x8, [x29, #-16]
  404b14:	ldur	x9, [x29, #-88]
  404b18:	ldur	x0, [x29, #-120]
  404b1c:	str	x8, [x9, #8]
  404b20:	bl	40c240 <wcrtomb@plt+0x95e0>
  404b24:	ldp	x26, x28, [x29, #-112]
  404b28:	mov	w20, wzr
  404b2c:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  404b30:	ldr	x21, [x26]
  404b34:	ldrb	w8, [x21, #32]
  404b38:	mov	x22, x21
  404b3c:	str	xzr, [x21, #24]
  404b40:	and	w8, w8, #0xf0
  404b44:	strb	w8, [x21, #32]
  404b48:	str	xzr, [x22, #16]!
  404b4c:	ldr	x8, [x27, #1520]
  404b50:	cbz	x8, 404b6c <wcrtomb@plt+0x1f0c>
  404b54:	ldr	x9, [x19, #1528]
  404b58:	cmp	x8, x9
  404b5c:	b.cs	404bb0 <wcrtomb@plt+0x1f50>  // b.hs, b.nlast
  404b60:	add	x9, x8, #0x1
  404b64:	str	x9, [x27, #1520]
  404b68:	b	404b90 <wcrtomb@plt+0x1f30>
  404b6c:	ldr	x0, [x23, #1536]
  404b70:	cbz	x0, 404bb0 <wcrtomb@plt+0x1f50>
  404b74:	ldrb	w8, [x0]
  404b78:	tbnz	w8, #4, 404bb0 <wcrtomb@plt+0x1f50>
  404b7c:	ldp	x8, x9, [x0, #8]
  404b80:	cmp	x8, x9
  404b84:	b.cs	404dc0 <wcrtomb@plt+0x2160>  // b.hs, b.nlast
  404b88:	add	x9, x8, #0x1
  404b8c:	str	x9, [x0, #8]
  404b90:	ldrb	w8, [x8]
  404b94:	cmp	w8, #0xa
  404b98:	b.ne	404bb4 <wcrtomb@plt+0x1f54>  // b.any
  404b9c:	ldr	x8, [x13, #1312]
  404ba0:	add	x8, x8, #0x1
  404ba4:	str	x8, [x13, #1312]
  404ba8:	mov	w8, #0xa                   	// #10
  404bac:	b	404bb4 <wcrtomb@plt+0x1f54>
  404bb0:	mov	w8, #0xffffffff            	// #-1
  404bb4:	ldr	x9, [x24]
  404bb8:	ldrh	w10, [x9, w8, sxtw #1]
  404bbc:	tbnz	w10, #0, 404b4c <wcrtomb@plt+0x1eec>
  404bc0:	add	w10, w8, #0x1
  404bc4:	cmp	w10, #0x7e
  404bc8:	b.hi	405398 <wcrtomb@plt+0x2738>  // b.pmore
  404bcc:	adrp	x14, 425000 <_obstack_memory_used@@Base+0xf5a8>
  404bd0:	add	x14, x14, #0x75c
  404bd4:	adr	x11, 404be4 <wcrtomb@plt+0x1f84>
  404bd8:	ldrh	w12, [x14, x10, lsl #1]
  404bdc:	add	x11, x11, x12, lsl #2
  404be0:	br	x11
  404be4:	ldr	x10, [x22]
  404be8:	cbnz	x10, 405424 <wcrtomb@plt+0x27c4>
  404bec:	ldrh	w9, [x9, w8, uxtw #1]
  404bf0:	tbnz	w9, #11, 404bfc <wcrtomb@plt+0x1f9c>
  404bf4:	mov	x25, xzr
  404bf8:	b	404cd4 <wcrtomb@plt+0x2074>
  404bfc:	mov	x25, xzr
  404c00:	b	404c18 <wcrtomb@plt+0x1fb8>
  404c04:	mov	w8, #0xffffffff            	// #-1
  404c08:	ldr	x9, [x24]
  404c0c:	and	w10, w8, #0xff
  404c10:	ldrh	w9, [x9, w10, uxtw #1]
  404c14:	tbz	w9, #11, 404cb0 <wcrtomb@plt+0x2050>
  404c18:	ldr	x9, [x27, #1520]
  404c1c:	mov	w10, #0xa                   	// #10
  404c20:	mul	x10, x25, x10
  404c24:	add	x8, x10, w8, sxtw
  404c28:	sub	x25, x8, #0x30
  404c2c:	cbz	x9, 404c54 <wcrtomb@plt+0x1ff4>
  404c30:	ldr	x8, [x19, #1528]
  404c34:	cmp	x9, x8
  404c38:	b.cs	404c04 <wcrtomb@plt+0x1fa4>  // b.hs, b.nlast
  404c3c:	add	x8, x9, #0x1
  404c40:	str	x8, [x27, #1520]
  404c44:	ldrb	w8, [x9]
  404c48:	cmp	w8, #0xa
  404c4c:	b.ne	404c08 <wcrtomb@plt+0x1fa8>  // b.any
  404c50:	b	404c84 <wcrtomb@plt+0x2024>
  404c54:	ldr	x0, [x23, #1536]
  404c58:	cbz	x0, 404c04 <wcrtomb@plt+0x1fa4>
  404c5c:	ldrb	w8, [x0]
  404c60:	tbnz	w8, #4, 404c04 <wcrtomb@plt+0x1fa4>
  404c64:	ldp	x8, x9, [x0, #8]
  404c68:	cmp	x8, x9
  404c6c:	b.cs	404c98 <wcrtomb@plt+0x2038>  // b.hs, b.nlast
  404c70:	add	x9, x8, #0x1
  404c74:	str	x9, [x0, #8]
  404c78:	ldrb	w8, [x8]
  404c7c:	cmp	w8, #0xa
  404c80:	b.ne	404c08 <wcrtomb@plt+0x1fa8>  // b.any
  404c84:	ldr	x8, [x13, #1312]
  404c88:	add	x8, x8, #0x1
  404c8c:	str	x8, [x13, #1312]
  404c90:	mov	w8, #0xa                   	// #10
  404c94:	b	404c08 <wcrtomb@plt+0x1fa8>
  404c98:	bl	402c20 <__uflow@plt>
  404c9c:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  404ca0:	mov	w8, w0
  404ca4:	cmp	w8, #0xa
  404ca8:	b.ne	404c08 <wcrtomb@plt+0x1fa8>  // b.any
  404cac:	b	404c84 <wcrtomb@plt+0x2024>
  404cb0:	cmn	w8, #0x1
  404cb4:	b.eq	404d00 <wcrtomb@plt+0x20a0>  // b.none
  404cb8:	cmp	w8, #0xa
  404cbc:	b.ne	404cd4 <wcrtomb@plt+0x2074>  // b.any
  404cc0:	ldr	x9, [x13, #1312]
  404cc4:	cbz	x9, 404cd4 <wcrtomb@plt+0x2074>
  404cc8:	sub	x8, x9, #0x1
  404ccc:	str	x8, [x13, #1312]
  404cd0:	mov	w8, #0xa                   	// #10
  404cd4:	ldr	x9, [x27, #1520]
  404cd8:	cbz	x9, 404d0c <wcrtomb@plt+0x20ac>
  404cdc:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404ce0:	ldr	x10, [x10, #1512]
  404ce4:	cmp	x9, x10
  404ce8:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  404cec:	sub	x10, x9, #0x1
  404cf0:	str	x10, [x27, #1520]
  404cf4:	ldurb	w9, [x9, #-1]
  404cf8:	cmp	w8, w9
  404cfc:	b.ne	40534c <wcrtomb@plt+0x26ec>  // b.any
  404d00:	str	x25, [x22]
  404d04:	cbnz	x25, 404b4c <wcrtomb@plt+0x1eec>
  404d08:	b	405430 <wcrtomb@plt+0x27d0>
  404d0c:	ldr	x1, [x23, #1536]
  404d10:	mov	w0, w8
  404d14:	bl	402a20 <ungetc@plt>
  404d18:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  404d1c:	str	x25, [x22]
  404d20:	cbnz	x25, 404b4c <wcrtomb@plt+0x1eec>
  404d24:	b	405430 <wcrtomb@plt+0x27d0>
  404d28:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404d2c:	ldr	w8, [x8, #2264]
  404d30:	cmp	w8, #0x2
  404d34:	b.eq	405398 <wcrtomb@plt+0x2738>  // b.none
  404d38:	mov	w8, #0x2                   	// #2
  404d3c:	orr	w20, w20, w8
  404d40:	b	404b4c <wcrtomb@plt+0x1eec>
  404d44:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404d48:	ldr	w8, [x8, #2264]
  404d4c:	cmp	w8, #0x2
  404d50:	b.eq	405398 <wcrtomb@plt+0x2738>  // b.none
  404d54:	mov	w8, #0x4                   	// #4
  404d58:	orr	w20, w20, w8
  404d5c:	b	404b4c <wcrtomb@plt+0x1eec>
  404d60:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404d64:	ldr	w8, [x8, #2264]
  404d68:	cmp	w8, #0x2
  404d6c:	b.eq	405398 <wcrtomb@plt+0x2738>  // b.none
  404d70:	ldrb	w8, [x21, #32]
  404d74:	orr	w8, w8, #0x8
  404d78:	strb	w8, [x21, #32]
  404d7c:	b	404b4c <wcrtomb@plt+0x1eec>
  404d80:	ldrb	w8, [x21, #32]
  404d84:	tbnz	w8, #0, 40543c <wcrtomb@plt+0x27dc>
  404d88:	orr	w8, w8, #0x1
  404d8c:	strb	w8, [x21, #32]
  404d90:	b	404b4c <wcrtomb@plt+0x1eec>
  404d94:	ldrb	w8, [x21, #32]
  404d98:	tst	w8, #0x6
  404d9c:	b.ne	405448 <wcrtomb@plt+0x27e8>  // b.any
  404da0:	ubfx	w9, w8, #3, #1
  404da4:	mov	w10, #0x1                   	// #1
  404da8:	lsl	w9, w10, w9
  404dac:	ubfiz	w9, w9, #1, #2
  404db0:	and	w8, w8, #0xfffffff9
  404db4:	orr	w8, w9, w8
  404db8:	strb	w8, [x21, #32]
  404dbc:	b	404b4c <wcrtomb@plt+0x1eec>
  404dc0:	bl	402c20 <__uflow@plt>
  404dc4:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  404dc8:	mov	w8, w0
  404dcc:	cmp	w8, #0xa
  404dd0:	b.eq	404b9c <wcrtomb@plt+0x1f3c>  // b.none
  404dd4:	b	404bb4 <wcrtomb@plt+0x1f54>
  404dd8:	mov	w0, #0xffffffff            	// #-1
  404ddc:	b	40525c <wcrtomb@plt+0x25fc>
  404de0:	ldr	x9, [x27, #1520]
  404de4:	cbz	x9, 4050f0 <wcrtomb@plt+0x2490>
  404de8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404dec:	ldr	x10, [x10, #1512]
  404df0:	cmp	x9, x10
  404df4:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  404df8:	sub	x10, x9, #0x1
  404dfc:	str	x10, [x27, #1520]
  404e00:	ldurb	w9, [x9, #-1]
  404e04:	cmp	w8, w9
  404e08:	b.eq	405150 <wcrtomb@plt+0x24f0>  // b.none
  404e0c:	b	40534c <wcrtomb@plt+0x26ec>
  404e10:	mov	x9, xzr
  404e14:	mov	w0, #0x1                   	// #1
  404e18:	bfi	x0, x9, #1, #63
  404e1c:	mov	w1, #0x8                   	// #8
  404e20:	stur	x9, [x29, #-120]
  404e24:	stur	xzr, [x29, #-40]
  404e28:	bl	415564 <wcrtomb@plt+0x12904>
  404e2c:	ldur	x8, [x29, #-80]
  404e30:	ldur	x28, [x29, #-120]
  404e34:	mov	x21, xzr
  404e38:	str	x0, [sp]
  404e3c:	madd	x8, x25, x26, x8
  404e40:	str	x0, [x8, #24]
  404e44:	cbz	x28, 404ef4 <wcrtomb@plt+0x2294>
  404e48:	add	x23, x0, #0x8
  404e4c:	b	404ea4 <wcrtomb@plt+0x2244>
  404e50:	ldur	x26, [x29, #-96]
  404e54:	sub	x3, x29, #0x28
  404e58:	mov	x0, xzr
  404e5c:	mov	x2, x25
  404e60:	add	x1, x26, x21
  404e64:	bl	415680 <wcrtomb@plt+0x12a20>
  404e68:	sub	x8, x0, #0x1
  404e6c:	cmn	x8, #0x4
  404e70:	csinc	x22, x0, xzr, ls  // ls = plast
  404e74:	add	x0, x22, #0x1
  404e78:	bl	415540 <wcrtomb@plt+0x128e0>
  404e7c:	add	x1, x26, x21
  404e80:	mov	x2, x22
  404e84:	mov	x25, x0
  404e88:	str	x0, [x23], #16
  404e8c:	bl	402580 <memcpy@plt>
  404e90:	add	x21, x22, x21
  404e94:	subs	x28, x28, #0x1
  404e98:	add	x20, x20, #0x8
  404e9c:	strb	wzr, [x25, x22]
  404ea0:	b.eq	404ef4 <wcrtomb@plt+0x2294>  // b.none
  404ea4:	ldur	x8, [x29, #-88]
  404ea8:	subs	x25, x8, x21
  404eac:	b.ls	405374 <wcrtomb@plt+0x2714>  // b.plast
  404eb0:	ldr	x22, [x20]
  404eb4:	add	x0, x22, #0x1
  404eb8:	bl	415540 <wcrtomb@plt+0x128e0>
  404ebc:	mov	x1, x19
  404ec0:	mov	x2, x22
  404ec4:	mov	x26, x0
  404ec8:	stur	x0, [x23, #-8]
  404ecc:	bl	402580 <memcpy@plt>
  404ed0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  404ed4:	ldr	w8, [x8, #2260]
  404ed8:	add	x19, x19, x22
  404edc:	strb	wzr, [x26, x22]
  404ee0:	cmp	w8, #0x1
  404ee4:	b.ne	404e50 <wcrtomb@plt+0x21f0>  // b.any
  404ee8:	ldur	x26, [x29, #-96]
  404eec:	mov	w0, #0x1                   	// #1
  404ef0:	b	404e68 <wcrtomb@plt+0x2208>
  404ef4:	ldur	x9, [x29, #-88]
  404ef8:	ldur	x8, [x29, #-120]
  404efc:	cmp	x9, x21
  404f00:	ldr	x9, [sp]
  404f04:	lsl	x8, x8, #4
  404f08:	str	xzr, [x9, x8]
  404f0c:	b.ne	405374 <wcrtomb@plt+0x2714>  // b.any
  404f10:	ldur	x28, [x29, #-104]
  404f14:	ldr	x20, [sp, #8]
  404f18:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  404f1c:	movk	x22, #0x3334
  404f20:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  404f24:	movk	x22, #0x333, lsl #48
  404f28:	mov	w21, #0x28                  	// #40
  404f2c:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404f30:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  404f34:	b	404f48 <wcrtomb@plt+0x22e8>
  404f38:	mov	w8, #0xffffffff            	// #-1
  404f3c:	ldr	x9, [x24]
  404f40:	ldrh	w9, [x9, w8, sxtw #1]
  404f44:	tbz	w9, #0, 404fc4 <wcrtomb@plt+0x2364>
  404f48:	ldr	x8, [x27, #1520]
  404f4c:	cbz	x8, 404f68 <wcrtomb@plt+0x2308>
  404f50:	ldr	x9, [x19, #1528]
  404f54:	cmp	x8, x9
  404f58:	b.cs	404f38 <wcrtomb@plt+0x22d8>  // b.hs, b.nlast
  404f5c:	add	x9, x8, #0x1
  404f60:	str	x9, [x27, #1520]
  404f64:	b	404f8c <wcrtomb@plt+0x232c>
  404f68:	ldr	x0, [x23, #1536]
  404f6c:	cbz	x0, 404f38 <wcrtomb@plt+0x22d8>
  404f70:	ldrb	w8, [x0]
  404f74:	tbnz	w8, #4, 404f38 <wcrtomb@plt+0x22d8>
  404f78:	ldp	x8, x9, [x0, #8]
  404f7c:	cmp	x8, x9
  404f80:	b.cs	404fac <wcrtomb@plt+0x234c>  // b.hs, b.nlast
  404f84:	add	x9, x8, #0x1
  404f88:	str	x9, [x0, #8]
  404f8c:	ldrb	w8, [x8]
  404f90:	cmp	w8, #0xa
  404f94:	b.ne	404f3c <wcrtomb@plt+0x22dc>  // b.any
  404f98:	ldr	x8, [x11, #1312]
  404f9c:	add	x8, x8, #0x1
  404fa0:	str	x8, [x11, #1312]
  404fa4:	mov	w8, #0xa                   	// #10
  404fa8:	b	404f3c <wcrtomb@plt+0x22dc>
  404fac:	bl	402c20 <__uflow@plt>
  404fb0:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  404fb4:	mov	w8, w0
  404fb8:	cmp	w8, #0xa
  404fbc:	b.ne	404f3c <wcrtomb@plt+0x22dc>  // b.any
  404fc0:	b	404f98 <wcrtomb@plt+0x2338>
  404fc4:	cmp	w8, #0x22
  404fc8:	b.le	405014 <wcrtomb@plt+0x23b4>
  404fcc:	cmp	w8, #0x7d
  404fd0:	b.eq	404fe4 <wcrtomb@plt+0x2384>  // b.none
  404fd4:	cmp	w8, #0x3b
  404fd8:	b.eq	405080 <wcrtomb@plt+0x2420>  // b.none
  404fdc:	cmp	w8, #0x23
  404fe0:	b.ne	40538c <wcrtomb@plt+0x272c>  // b.any
  404fe4:	ldr	x9, [x27, #1520]
  404fe8:	cbz	x9, 405074 <wcrtomb@plt+0x2414>
  404fec:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  404ff0:	ldr	x10, [x10, #1512]
  404ff4:	cmp	x9, x10
  404ff8:	b.ls	40534c <wcrtomb@plt+0x26ec>  // b.plast
  404ffc:	sub	x10, x9, #0x1
  405000:	str	x10, [x27, #1520]
  405004:	ldurb	w9, [x9, #-1]
  405008:	cmp	w8, w9
  40500c:	b.eq	405080 <wcrtomb@plt+0x2420>  // b.none
  405010:	b	40534c <wcrtomb@plt+0x26ec>
  405014:	cmn	w8, #0x1
  405018:	b.eq	405080 <wcrtomb@plt+0x2420>  // b.none
  40501c:	cmp	w8, #0xa
  405020:	b.eq	405080 <wcrtomb@plt+0x2420>  // b.none
  405024:	b	40538c <wcrtomb@plt+0x272c>
  405028:	ldr	x1, [x23, #1536]
  40502c:	mov	w0, w8
  405030:	bl	402a20 <ungetc@plt>
  405034:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405038:	ldr	x8, [x8, #1344]
  40503c:	ldr	x9, [x28]
  405040:	ldr	x11, [x28, #16]
  405044:	ldr	x10, [x8]
  405048:	madd	x9, x10, x21, x9
  40504c:	str	x11, [x9, #24]
  405050:	cbz	x8, 405064 <wcrtomb@plt+0x2404>
  405054:	ldr	x0, [x8, #8]
  405058:	ldr	x20, [x8, #40]
  40505c:	bl	402a10 <free@plt>
  405060:	b	405068 <wcrtomb@plt+0x2408>
  405064:	mov	x20, xzr
  405068:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40506c:	str	x20, [x8, #1344]
  405070:	b	405090 <wcrtomb@plt+0x2430>
  405074:	ldr	x1, [x23, #1536]
  405078:	mov	w0, w8
  40507c:	bl	402a20 <ungetc@plt>
  405080:	ldur	x0, [x29, #-112]
  405084:	bl	40c240 <wcrtomb@plt+0x95e0>
  405088:	mov	x0, x20
  40508c:	bl	40c240 <wcrtomb@plt+0x95e0>
  405090:	ldr	x8, [x28, #16]
  405094:	add	x8, x8, #0x1
  405098:	str	x8, [x28, #16]
  40509c:	b	403414 <wcrtomb@plt+0x7b4>
  4050a0:	ldr	x8, [x27, #1520]
  4050a4:	cbz	x8, 405114 <wcrtomb@plt+0x24b4>
  4050a8:	ldr	x9, [x19, #1528]
  4050ac:	cmp	x8, x9
  4050b0:	b.cs	405398 <wcrtomb@plt+0x2738>  // b.hs, b.nlast
  4050b4:	add	x9, x8, #0x1
  4050b8:	str	x9, [x27, #1520]
  4050bc:	b	405138 <wcrtomb@plt+0x24d8>
  4050c0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4050c4:	ldr	x1, [x8, #1112]
  4050c8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4050cc:	mov	w2, #0x1                   	// #1
  4050d0:	add	x0, x0, #0x570
  4050d4:	bl	4066f0 <wcrtomb@plt+0x3a90>
  4050d8:	str	x0, [x21, #24]
  4050dc:	b	405150 <wcrtomb@plt+0x24f0>
  4050e0:	mov	w0, #0xffffffff            	// #-1
  4050e4:	b	40525c <wcrtomb@plt+0x25fc>
  4050e8:	mov	w0, #0xffffffff            	// #-1
  4050ec:	b	40525c <wcrtomb@plt+0x25fc>
  4050f0:	ldr	x1, [x23, #1536]
  4050f4:	mov	w0, w8
  4050f8:	bl	402a20 <ungetc@plt>
  4050fc:	b	405150 <wcrtomb@plt+0x24f0>
  405100:	bl	402c20 <__uflow@plt>
  405104:	mov	w26, w0
  405108:	cmp	w26, #0x3b
  40510c:	b.eq	403414 <wcrtomb@plt+0x7b4>  // b.none
  405110:	b	403464 <wcrtomb@plt+0x804>
  405114:	ldr	x0, [x23, #1536]
  405118:	cbz	x0, 405398 <wcrtomb@plt+0x2738>
  40511c:	ldrb	w8, [x0]
  405120:	tbnz	w8, #4, 405398 <wcrtomb@plt+0x2738>
  405124:	ldp	x8, x9, [x0, #8]
  405128:	cmp	x8, x9
  40512c:	b.cs	405234 <wcrtomb@plt+0x25d4>  // b.hs, b.nlast
  405130:	add	x9, x8, #0x1
  405134:	str	x9, [x0, #8]
  405138:	ldrb	w0, [x8]
  40513c:	cmp	w0, #0xa
  405140:	b.ne	405398 <wcrtomb@plt+0x2738>  // b.any
  405144:	ldr	x8, [x13, #1312]
  405148:	add	x8, x8, #0x1
  40514c:	str	x8, [x13, #1312]
  405150:	ldr	x8, [x26]
  405154:	ldur	x21, [x29, #-96]
  405158:	mov	w1, w20
  40515c:	ldrb	w8, [x8, #32]
  405160:	mov	x0, x21
  405164:	lsr	w8, w8, #4
  405168:	add	w2, w8, #0x1
  40516c:	bl	40a650 <wcrtomb@plt+0x79f0>
  405170:	ldr	x8, [x26]
  405174:	str	x0, [x8]
  405178:	mov	x0, x21
  40517c:	bl	40c240 <wcrtomb@plt+0x95e0>
  405180:	ldr	x8, [x26]
  405184:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  405188:	movk	x22, #0x3334
  40518c:	movk	x22, #0x333, lsl #48
  405190:	ldrb	w8, [x8, #32]
  405194:	mov	w21, #0x28                  	// #40
  405198:	tbz	w8, #3, 405090 <wcrtomb@plt+0x2430>
  40519c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4051a0:	ldrb	w8, [x8, #1868]
  4051a4:	cbz	w8, 405090 <wcrtomb@plt+0x2430>
  4051a8:	b	405454 <wcrtomb@plt+0x27f4>
  4051ac:	ldr	x0, [x23, #1536]
  4051b0:	cbz	x0, 4051d0 <wcrtomb@plt+0x2570>
  4051b4:	bl	402640 <ftell@plt>
  4051b8:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4051bc:	cmp	x0, #0x2
  4051c0:	b.ne	4051d0 <wcrtomb@plt+0x2570>  // b.any
  4051c4:	mov	w8, #0x1                   	// #1
  4051c8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4051cc:	strb	w8, [x9, #1856]
  4051d0:	mov	w0, #0x6e                  	// #110
  4051d4:	b	40525c <wcrtomb@plt+0x25fc>
  4051d8:	bl	402c20 <__uflow@plt>
  4051dc:	ldur	x14, [x29, #-80]
  4051e0:	mov	w1, w0
  4051e4:	cmp	w1, #0xa
  4051e8:	b.eq	4041d4 <wcrtomb@plt+0x1574>  // b.none
  4051ec:	b	4041ec <wcrtomb@plt+0x158c>
  4051f0:	bl	402c20 <__uflow@plt>
  4051f4:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4051f8:	cmp	w0, #0x6e
  4051fc:	b.ne	405248 <wcrtomb@plt+0x25e8>  // b.any
  405200:	b	404374 <wcrtomb@plt+0x1714>
  405204:	bl	402c20 <__uflow@plt>
  405208:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40520c:	mov	w20, w0
  405210:	cmp	w20, #0xa
  405214:	b.eq	4043dc <wcrtomb@plt+0x177c>  // b.none
  405218:	b	4043f0 <wcrtomb@plt+0x1790>
  40521c:	bl	402c20 <__uflow@plt>
  405220:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  405224:	mov	w20, w0
  405228:	cmp	w20, #0xa
  40522c:	b.eq	404698 <wcrtomb@plt+0x1a38>  // b.none
  405230:	b	4046ac <wcrtomb@plt+0x1a4c>
  405234:	bl	402c20 <__uflow@plt>
  405238:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  40523c:	cmp	w0, #0xa
  405240:	b.eq	405144 <wcrtomb@plt+0x24e4>  // b.none
  405244:	b	405398 <wcrtomb@plt+0x2738>
  405248:	cmp	w0, #0xa
  40524c:	b.ne	40525c <wcrtomb@plt+0x25fc>  // b.any
  405250:	ldr	x8, [x11, #1312]
  405254:	add	x8, x8, #0x1
  405258:	str	x8, [x11, #1312]
  40525c:	cmn	w0, #0x1
  405260:	b.eq	403414 <wcrtomb@plt+0x7b4>  // b.none
  405264:	cmp	w0, #0xa
  405268:	b.eq	403414 <wcrtomb@plt+0x7b4>  // b.none
  40526c:	ldr	x8, [x27, #1520]
  405270:	cbz	x8, 405288 <wcrtomb@plt+0x2628>
  405274:	ldr	x9, [x19, #1528]
  405278:	mov	w0, #0xffffffff            	// #-1
  40527c:	cmp	x8, x9
  405280:	b.cs	40525c <wcrtomb@plt+0x25fc>  // b.hs, b.nlast
  405284:	b	4052bc <wcrtomb@plt+0x265c>
  405288:	ldr	x8, [x23, #1536]
  40528c:	mov	w0, #0xffffffff            	// #-1
  405290:	cbz	x8, 40525c <wcrtomb@plt+0x25fc>
  405294:	ldrb	w9, [x8]
  405298:	mov	w0, #0xffffffff            	// #-1
  40529c:	tbnz	w9, #4, 40525c <wcrtomb@plt+0x25fc>
  4052a0:	ldp	x9, x10, [x8, #8]
  4052a4:	cmp	x9, x10
  4052a8:	b.cs	4052cc <wcrtomb@plt+0x266c>  // b.hs, b.nlast
  4052ac:	add	x10, x9, #0x1
  4052b0:	str	x10, [x8, #8]
  4052b4:	ldrb	w0, [x9]
  4052b8:	b	405248 <wcrtomb@plt+0x25e8>
  4052bc:	add	x9, x8, #0x1
  4052c0:	str	x9, [x27, #1520]
  4052c4:	ldrb	w0, [x8]
  4052c8:	b	405248 <wcrtomb@plt+0x25e8>
  4052cc:	mov	x0, x8
  4052d0:	bl	402c20 <__uflow@plt>
  4052d4:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  4052d8:	b	405248 <wcrtomb@plt+0x25e8>
  4052dc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4052e0:	ldr	w8, [x8, #2264]
  4052e4:	cmp	w8, #0x2
  4052e8:	b.ne	4052f8 <wcrtomb@plt+0x2698>  // b.any
  4052ec:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4052f0:	ldr	x8, [x8, #1352]
  4052f4:	cbnz	x8, 405460 <wcrtomb@plt+0x2800>
  4052f8:	mov	x0, x28
  4052fc:	ldp	x20, x19, [sp, #480]
  405300:	ldp	x22, x21, [sp, #464]
  405304:	ldp	x24, x23, [sp, #448]
  405308:	ldp	x26, x25, [sp, #432]
  40530c:	ldp	x28, x27, [sp, #416]
  405310:	ldp	x29, x30, [sp, #400]
  405314:	add	sp, sp, #0x1f0
  405318:	ret
  40531c:	mov	w0, w26
  405320:	bl	4062d8 <wcrtomb@plt+0x3678>
  405324:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405328:	add	x1, x1, #0x98f
  40532c:	b	405468 <wcrtomb@plt+0x2808>
  405330:	bl	41563c <wcrtomb@plt+0x129dc>
  405334:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405338:	add	x1, x1, #0x8a7
  40533c:	b	405468 <wcrtomb@plt+0x2808>
  405340:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405344:	add	x1, x1, #0x88a
  405348:	b	405468 <wcrtomb@plt+0x2808>
  40534c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405350:	add	x0, x0, #0xd9d
  405354:	mov	w1, w8
  405358:	bl	40b53c <wcrtomb@plt+0x88dc>
  40535c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405360:	add	x1, x1, #0x99f
  405364:	b	405468 <wcrtomb@plt+0x2808>
  405368:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40536c:	add	x1, x1, #0xb3b
  405370:	b	405468 <wcrtomb@plt+0x2808>
  405374:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405378:	add	x1, x1, #0xabc
  40537c:	b	405468 <wcrtomb@plt+0x2808>
  405380:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405384:	add	x1, x1, #0x898
  405388:	b	405468 <wcrtomb@plt+0x2808>
  40538c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405390:	add	x1, x1, #0x8ef
  405394:	b	405468 <wcrtomb@plt+0x2808>
  405398:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40539c:	add	x1, x1, #0xa0a
  4053a0:	b	405468 <wcrtomb@plt+0x2808>
  4053a4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053a8:	add	x1, x1, #0x90e
  4053ac:	b	405468 <wcrtomb@plt+0x2808>
  4053b0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053b4:	add	x1, x1, #0x96b
  4053b8:	b	405468 <wcrtomb@plt+0x2808>
  4053bc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053c0:	add	x1, x1, #0x94e
  4053c4:	b	405468 <wcrtomb@plt+0x2808>
  4053c8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053cc:	add	x1, x1, #0xb84
  4053d0:	b	405468 <wcrtomb@plt+0x2808>
  4053d4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053d8:	add	x1, x1, #0x8e0
  4053dc:	b	405468 <wcrtomb@plt+0x2808>
  4053e0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053e4:	add	x1, x1, #0x92f
  4053e8:	b	405468 <wcrtomb@plt+0x2808>
  4053ec:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053f0:	add	x1, x1, #0xbe6
  4053f4:	b	405468 <wcrtomb@plt+0x2808>
  4053f8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4053fc:	add	x1, x1, #0xb1d
  405400:	b	405468 <wcrtomb@plt+0x2808>
  405404:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405408:	add	x1, x1, #0x9f1
  40540c:	b	405418 <wcrtomb@plt+0x27b8>
  405410:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405414:	add	x1, x1, #0x9d8
  405418:	mov	w2, #0x5                   	// #5
  40541c:	bl	402b40 <dcgettext@plt>
  405420:	bl	402d7c <wcrtomb@plt+0x11c>
  405424:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405428:	add	x1, x1, #0xa68
  40542c:	b	405468 <wcrtomb@plt+0x2808>
  405430:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405434:	add	x1, x1, #0xa8f
  405438:	b	405468 <wcrtomb@plt+0x2808>
  40543c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405440:	add	x1, x1, #0xa44
  405444:	b	405468 <wcrtomb@plt+0x2808>
  405448:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40544c:	add	x1, x1, #0xa20
  405450:	b	405468 <wcrtomb@plt+0x2808>
  405454:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405458:	add	x1, x1, #0xbbe
  40545c:	b	405468 <wcrtomb@plt+0x2808>
  405460:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405464:	add	x1, x1, #0xb71
  405468:	mov	w2, #0x5                   	// #5
  40546c:	mov	x0, xzr
  405470:	bl	402b40 <dcgettext@plt>
  405474:	bl	402d7c <wcrtomb@plt+0x11c>
  405478:	stp	x29, x30, [sp, #-48]!
  40547c:	stp	x22, x21, [sp, #16]
  405480:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  405484:	ldr	x8, [x22, #1280]
  405488:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  40548c:	stp	x20, x19, [sp, #32]
  405490:	mov	x19, x1
  405494:	str	x8, [x21, #1536]
  405498:	ldrb	w8, [x1]
  40549c:	mov	x20, x0
  4054a0:	mov	x29, sp
  4054a4:	cmp	w8, #0x2d
  4054a8:	b.ne	4054b4 <wcrtomb@plt+0x2854>  // b.any
  4054ac:	ldrb	w8, [x19, #1]
  4054b0:	cbz	w8, 4054cc <wcrtomb@plt+0x286c>
  4054b4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4054b8:	add	x1, x1, #0xd70
  4054bc:	mov	w2, #0x1                   	// #1
  4054c0:	mov	x0, x19
  4054c4:	bl	40b6a8 <wcrtomb@plt+0x8a48>
  4054c8:	str	x0, [x21, #1536]
  4054cc:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4054d0:	ldr	q0, [x8, #3344]
  4054d4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4054d8:	add	x8, x8, #0x518
  4054dc:	mov	x0, x20
  4054e0:	str	x19, [x8]
  4054e4:	stur	q0, [x8, #8]
  4054e8:	bl	4032a0 <wcrtomb@plt+0x640>
  4054ec:	ldr	x8, [x21, #1536]
  4054f0:	ldr	x9, [x22, #1280]
  4054f4:	mov	x19, x0
  4054f8:	cmp	x8, x9
  4054fc:	b.eq	405508 <wcrtomb@plt+0x28a8>  // b.none
  405500:	mov	x0, x8
  405504:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  405508:	str	xzr, [x21, #1536]
  40550c:	mov	x0, x19
  405510:	ldp	x20, x19, [sp, #32]
  405514:	ldp	x22, x21, [sp, #16]
  405518:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40551c:	mov	w9, #0x1                   	// #1
  405520:	strb	w9, [x8, #1336]
  405524:	ldp	x29, x30, [sp], #48
  405528:	ret
  40552c:	stp	x29, x30, [sp, #-80]!
  405530:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405534:	ldr	x8, [x8, #1344]
  405538:	stp	x26, x25, [sp, #16]
  40553c:	stp	x24, x23, [sp, #32]
  405540:	stp	x22, x21, [sp, #48]
  405544:	stp	x20, x19, [sp, #64]
  405548:	mov	x29, sp
  40554c:	cbnz	x8, 405674 <wcrtomb@plt+0x2a14>
  405550:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  405554:	ldr	x20, [x22, #1352]
  405558:	mov	x19, x0
  40555c:	cbz	x20, 4055a4 <wcrtomb@plt+0x2944>
  405560:	mov	x0, x20
  405564:	bl	40c0d8 <wcrtomb@plt+0x9478>
  405568:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40556c:	ldr	x8, [x23, #1360]
  405570:	str	x0, [x8, #8]
  405574:	cbz	x0, 405598 <wcrtomb@plt+0x2938>
  405578:	mov	x21, x0
  40557c:	mov	x0, x20
  405580:	bl	40c0d0 <wcrtomb@plt+0x9470>
  405584:	mov	x1, x21
  405588:	bl	415590 <wcrtomb@plt+0x12930>
  40558c:	ldr	x8, [x23, #1360]
  405590:	str	x0, [x8]
  405594:	ldr	x20, [x22, #1352]
  405598:	mov	x0, x20
  40559c:	bl	40c240 <wcrtomb@plt+0x95e0>
  4055a0:	str	xzr, [x22, #1352]
  4055a4:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4055a8:	ldr	x22, [x23, #1368]
  4055ac:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4055b0:	cbz	x22, 40561c <wcrtomb@plt+0x29bc>
  4055b4:	add	x24, x19, #0x10
  4055b8:	mov	w25, #0x28                  	// #40
  4055bc:	b	4055f4 <wcrtomb@plt+0x2994>
  4055c0:	ldrb	w8, [x20]
  4055c4:	mov	x26, x24
  4055c8:	cbnz	w8, 405658 <wcrtomb@plt+0x29f8>
  4055cc:	ldr	x8, [x19]
  4055d0:	ldr	x9, [x22]
  4055d4:	ldr	x10, [x26]
  4055d8:	madd	x8, x9, x25, x8
  4055dc:	str	x10, [x8, #24]
  4055e0:	ldr	x0, [x22, #8]
  4055e4:	ldr	x20, [x22, #40]
  4055e8:	bl	402a10 <free@plt>
  4055ec:	mov	x22, x20
  4055f0:	cbz	x20, 40561c <wcrtomb@plt+0x29bc>
  4055f4:	ldr	x26, [x21, #1376]
  4055f8:	ldr	x20, [x22, #8]
  4055fc:	cbz	x26, 4055c0 <wcrtomb@plt+0x2960>
  405600:	ldr	x0, [x26, #8]
  405604:	mov	x1, x20
  405608:	bl	4029d0 <strcmp@plt>
  40560c:	cbz	w0, 4055cc <wcrtomb@plt+0x296c>
  405610:	ldr	x26, [x26, #40]
  405614:	cbnz	x26, 405600 <wcrtomb@plt+0x29a0>
  405618:	b	4055c0 <wcrtomb@plt+0x2960>
  40561c:	ldr	x8, [x21, #1376]
  405620:	str	xzr, [x23, #1368]
  405624:	cbz	x8, 40563c <wcrtomb@plt+0x29dc>
  405628:	ldr	x0, [x8, #8]
  40562c:	ldr	x19, [x8, #40]
  405630:	bl	402a10 <free@plt>
  405634:	mov	x8, x19
  405638:	cbnz	x19, 405628 <wcrtomb@plt+0x29c8>
  40563c:	str	xzr, [x21, #1376]
  405640:	ldp	x20, x19, [sp, #64]
  405644:	ldp	x22, x21, [sp, #48]
  405648:	ldp	x24, x23, [sp, #32]
  40564c:	ldp	x26, x25, [sp, #16]
  405650:	ldp	x29, x30, [sp], #80
  405654:	ret
  405658:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40565c:	add	x1, x1, #0xd73
  405660:	mov	w2, #0x5                   	// #5
  405664:	mov	x0, xzr
  405668:	bl	402b40 <dcgettext@plt>
  40566c:	ldr	x1, [x22, #8]
  405670:	bl	40b53c <wcrtomb@plt+0x88dc>
  405674:	ldr	x9, [x8, #32]
  405678:	ldr	q0, [x8, #16]
  40567c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405680:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405684:	add	x8, x8, #0x518
  405688:	add	x1, x1, #0x8d2
  40568c:	mov	w2, #0x5                   	// #5
  405690:	mov	x0, xzr
  405694:	str	x9, [x8, #16]
  405698:	str	q0, [x8]
  40569c:	bl	402b40 <dcgettext@plt>
  4056a0:	bl	402d7c <wcrtomb@plt+0x11c>
  4056a4:	stp	x29, x30, [sp, #-32]!
  4056a8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4056ac:	str	x19, [sp, #16]
  4056b0:	ldr	x19, [x8, #1384]
  4056b4:	mov	x29, sp
  4056b8:	cbnz	x19, 4056d0 <wcrtomb@plt+0x2a70>
  4056bc:	ldr	x19, [sp, #16]
  4056c0:	ldp	x29, x30, [sp], #32
  4056c4:	ret
  4056c8:	ldr	x19, [x19, #24]
  4056cc:	cbz	x19, 4056bc <wcrtomb@plt+0x2a5c>
  4056d0:	ldr	x0, [x19, #16]
  4056d4:	cbz	x0, 4056c8 <wcrtomb@plt+0x2a68>
  4056d8:	bl	4028a0 <rewind@plt>
  4056dc:	b	4056c8 <wcrtomb@plt+0x2a68>
  4056e0:	stp	x29, x30, [sp, #-48]!
  4056e4:	stp	x20, x19, [sp, #32]
  4056e8:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4056ec:	ldr	x20, [x19, #1384]
  4056f0:	str	x21, [sp, #16]
  4056f4:	mov	x29, sp
  4056f8:	cbnz	x20, 405738 <wcrtomb@plt+0x2ad8>
  4056fc:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  405700:	ldr	x21, [x20, #1392]
  405704:	cbnz	x21, 405754 <wcrtomb@plt+0x2af4>
  405708:	ldr	x21, [x19, #1384]
  40570c:	cbnz	x21, 405770 <wcrtomb@plt+0x2b10>
  405710:	ldr	x21, [x20, #1392]
  405714:	cbnz	x21, 405788 <wcrtomb@plt+0x2b28>
  405718:	str	xzr, [x20, #1392]
  40571c:	str	xzr, [x19, #1384]
  405720:	ldp	x20, x19, [sp, #32]
  405724:	ldr	x21, [sp, #16]
  405728:	ldp	x29, x30, [sp], #48
  40572c:	ret
  405730:	ldr	x20, [x20, #24]
  405734:	cbz	x20, 4056fc <wcrtomb@plt+0x2a9c>
  405738:	ldr	x0, [x20]
  40573c:	cbz	x0, 405730 <wcrtomb@plt+0x2ad0>
  405740:	bl	402a10 <free@plt>
  405744:	str	xzr, [x20]
  405748:	b	405730 <wcrtomb@plt+0x2ad0>
  40574c:	ldr	x21, [x21, #24]
  405750:	cbz	x21, 405708 <wcrtomb@plt+0x2aa8>
  405754:	ldr	x0, [x21]
  405758:	cbz	x0, 40574c <wcrtomb@plt+0x2aec>
  40575c:	bl	402a10 <free@plt>
  405760:	str	xzr, [x21]
  405764:	b	40574c <wcrtomb@plt+0x2aec>
  405768:	ldr	x21, [x21, #24]
  40576c:	cbz	x21, 405710 <wcrtomb@plt+0x2ab0>
  405770:	ldr	x0, [x21, #16]
  405774:	cbz	x0, 405768 <wcrtomb@plt+0x2b08>
  405778:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  40577c:	b	405768 <wcrtomb@plt+0x2b08>
  405780:	ldr	x21, [x21, #24]
  405784:	cbz	x21, 405718 <wcrtomb@plt+0x2ab8>
  405788:	ldr	x0, [x21, #16]
  40578c:	cbz	x0, 405780 <wcrtomb@plt+0x2b20>
  405790:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  405794:	b	405780 <wcrtomb@plt+0x2b20>
  405798:	stp	x29, x30, [sp, #-80]!
  40579c:	stp	x22, x21, [sp, #48]
  4057a0:	stp	x20, x19, [sp, #64]
  4057a4:	mov	w20, w1
  4057a8:	mov	x19, x0
  4057ac:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4057b0:	str	x25, [sp, #16]
  4057b4:	stp	x24, x23, [sp, #32]
  4057b8:	mov	x29, sp
  4057bc:	cbz	x0, 4057e0 <wcrtomb@plt+0x2b80>
  4057c0:	ldr	x0, [x21, #1352]
  4057c4:	cbz	x0, 4057cc <wcrtomb@plt+0x2b6c>
  4057c8:	bl	40c240 <wcrtomb@plt+0x95e0>
  4057cc:	bl	40c08c <wcrtomb@plt+0x942c>
  4057d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4057d4:	str	x0, [x21, #1352]
  4057d8:	stp	xzr, xzr, [x19]
  4057dc:	str	x19, [x8, #1360]
  4057e0:	cmn	w20, #0x1
  4057e4:	b.eq	4059f0 <wcrtomb@plt+0x2d90>  // b.none
  4057e8:	cmp	w20, #0xa
  4057ec:	b.eq	4057fc <wcrtomb@plt+0x2b9c>  // b.none
  4057f0:	ldr	x0, [x21, #1352]
  4057f4:	mov	w1, w20
  4057f8:	bl	40c198 <wcrtomb@plt+0x9538>
  4057fc:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  405800:	ldr	x8, [x22, #1520]
  405804:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  405808:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40580c:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  405810:	cbz	x8, 40582c <wcrtomb@plt+0x2bcc>
  405814:	ldr	x9, [x24, #1528]
  405818:	cmp	x8, x9
  40581c:	b.cs	405844 <wcrtomb@plt+0x2be4>  // b.hs, b.nlast
  405820:	add	x9, x8, #0x1
  405824:	str	x9, [x22, #1520]
  405828:	b	405868 <wcrtomb@plt+0x2c08>
  40582c:	ldr	x0, [x25, #1536]
  405830:	cbz	x0, 40584c <wcrtomb@plt+0x2bec>
  405834:	ldrb	w8, [x0]
  405838:	tbz	w8, #4, 405854 <wcrtomb@plt+0x2bf4>
  40583c:	mov	w20, #0xffffffff            	// #-1
  405840:	b	405880 <wcrtomb@plt+0x2c20>
  405844:	mov	w20, #0xffffffff            	// #-1
  405848:	b	405880 <wcrtomb@plt+0x2c20>
  40584c:	mov	w20, #0xffffffff            	// #-1
  405850:	b	405880 <wcrtomb@plt+0x2c20>
  405854:	ldp	x8, x9, [x0, #8]
  405858:	cmp	x8, x9
  40585c:	b.cs	405a08 <wcrtomb@plt+0x2da8>  // b.hs, b.nlast
  405860:	add	x9, x8, #0x1
  405864:	str	x9, [x0, #8]
  405868:	ldrb	w20, [x8]
  40586c:	cmp	w20, #0xa
  405870:	b.ne	405880 <wcrtomb@plt+0x2c20>  // b.any
  405874:	ldr	x8, [x23, #1312]
  405878:	add	x8, x8, #0x1
  40587c:	str	x8, [x23, #1312]
  405880:	cmp	w20, #0x5c
  405884:	b.eq	40589c <wcrtomb@plt+0x2c3c>  // b.none
  405888:	cmn	w20, #0x1
  40588c:	b.eq	405984 <wcrtomb@plt+0x2d24>  // b.none
  405890:	cmp	w20, #0xa
  405894:	b.ne	405920 <wcrtomb@plt+0x2cc0>  // b.any
  405898:	b	405984 <wcrtomb@plt+0x2d24>
  40589c:	ldr	x8, [x22, #1520]
  4058a0:	cbz	x8, 4058bc <wcrtomb@plt+0x2c5c>
  4058a4:	ldr	x9, [x24, #1528]
  4058a8:	cmp	x8, x9
  4058ac:	b.cs	405964 <wcrtomb@plt+0x2d04>  // b.hs, b.nlast
  4058b0:	add	x9, x8, #0x1
  4058b4:	str	x9, [x22, #1520]
  4058b8:	b	4058e0 <wcrtomb@plt+0x2c80>
  4058bc:	ldr	x0, [x25, #1536]
  4058c0:	cbz	x0, 405964 <wcrtomb@plt+0x2d04>
  4058c4:	ldrb	w8, [x0]
  4058c8:	tbnz	w8, #4, 405964 <wcrtomb@plt+0x2d04>
  4058cc:	ldp	x8, x9, [x0, #8]
  4058d0:	cmp	x8, x9
  4058d4:	b.cs	4058f8 <wcrtomb@plt+0x2c98>  // b.hs, b.nlast
  4058d8:	add	x9, x8, #0x1
  4058dc:	str	x9, [x0, #8]
  4058e0:	ldrb	w20, [x8]
  4058e4:	cmp	w20, #0xa
  4058e8:	b.eq	405908 <wcrtomb@plt+0x2ca8>  // b.none
  4058ec:	cmn	w20, #0x1
  4058f0:	b.ne	405914 <wcrtomb@plt+0x2cb4>  // b.any
  4058f4:	b	405964 <wcrtomb@plt+0x2d04>
  4058f8:	bl	402c20 <__uflow@plt>
  4058fc:	mov	w20, w0
  405900:	cmp	w20, #0xa
  405904:	b.ne	4058ec <wcrtomb@plt+0x2c8c>  // b.any
  405908:	ldr	x8, [x23, #1312]
  40590c:	add	x8, x8, #0x1
  405910:	str	x8, [x23, #1312]
  405914:	ldr	x0, [x21, #1352]
  405918:	mov	w1, #0x5c                  	// #92
  40591c:	bl	40c198 <wcrtomb@plt+0x9538>
  405920:	ldr	x0, [x21, #1352]
  405924:	mov	w1, w20
  405928:	bl	40c198 <wcrtomb@plt+0x9538>
  40592c:	ldr	x8, [x22, #1520]
  405930:	cbz	x8, 405948 <wcrtomb@plt+0x2ce8>
  405934:	ldr	x9, [x24, #1528]
  405938:	mov	w20, #0xffffffff            	// #-1
  40593c:	cmp	x8, x9
  405940:	b.cs	405880 <wcrtomb@plt+0x2c20>  // b.hs, b.nlast
  405944:	b	405820 <wcrtomb@plt+0x2bc0>
  405948:	ldr	x0, [x25, #1536]
  40594c:	mov	w20, #0xffffffff            	// #-1
  405950:	cbz	x0, 405880 <wcrtomb@plt+0x2c20>
  405954:	ldrb	w8, [x0]
  405958:	mov	w20, #0xffffffff            	// #-1
  40595c:	tbz	w8, #4, 405854 <wcrtomb@plt+0x2bf4>
  405960:	b	405880 <wcrtomb@plt+0x2c20>
  405964:	ldr	x0, [x21, #1352]
  405968:	ldp	x20, x19, [sp, #64]
  40596c:	ldp	x22, x21, [sp, #48]
  405970:	ldp	x24, x23, [sp, #32]
  405974:	ldr	x25, [sp, #16]
  405978:	mov	w1, #0xa                   	// #10
  40597c:	ldp	x29, x30, [sp], #80
  405980:	b	40c198 <wcrtomb@plt+0x9538>
  405984:	ldr	x0, [x21, #1352]
  405988:	mov	w1, #0xa                   	// #10
  40598c:	bl	40c198 <wcrtomb@plt+0x9538>
  405990:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405994:	ldr	x20, [x21, #1352]
  405998:	ldr	x8, [x8, #1360]
  40599c:	cmp	x19, #0x0
  4059a0:	mov	x0, x20
  4059a4:	csel	x22, x19, x8, ne  // ne = any
  4059a8:	bl	40c0d0 <wcrtomb@plt+0x9470>
  4059ac:	mov	x19, x0
  4059b0:	mov	x0, x20
  4059b4:	bl	40c0d8 <wcrtomb@plt+0x9478>
  4059b8:	mov	x1, x0
  4059bc:	mov	x0, x19
  4059c0:	mov	w2, wzr
  4059c4:	bl	402e24 <wcrtomb@plt+0x1c4>
  4059c8:	str	x0, [x22, #8]
  4059cc:	mov	x19, x0
  4059d0:	ldr	x0, [x21, #1352]
  4059d4:	bl	40c0d0 <wcrtomb@plt+0x9470>
  4059d8:	mov	x1, x19
  4059dc:	bl	415590 <wcrtomb@plt+0x12930>
  4059e0:	str	x0, [x22]
  4059e4:	ldr	x0, [x21, #1352]
  4059e8:	bl	40c240 <wcrtomb@plt+0x95e0>
  4059ec:	str	xzr, [x21, #1352]
  4059f0:	ldp	x20, x19, [sp, #64]
  4059f4:	ldp	x22, x21, [sp, #48]
  4059f8:	ldp	x24, x23, [sp, #32]
  4059fc:	ldr	x25, [sp, #16]
  405a00:	ldp	x29, x30, [sp], #80
  405a04:	ret
  405a08:	bl	402c20 <__uflow@plt>
  405a0c:	mov	w20, w0
  405a10:	cmp	w20, #0xa
  405a14:	b.ne	405880 <wcrtomb@plt+0x2c20>  // b.any
  405a18:	b	405874 <wcrtomb@plt+0x2c14>
  405a1c:	stp	x29, x30, [sp, #-96]!
  405a20:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405a24:	ldr	q0, [x8, #3360]
  405a28:	stp	x22, x21, [sp, #64]
  405a2c:	stp	x20, x19, [sp, #80]
  405a30:	mov	w21, w1
  405a34:	mov	x19, x0
  405a38:	cmp	w1, #0x5c
  405a3c:	str	x27, [sp, #16]
  405a40:	stp	x26, x25, [sp, #32]
  405a44:	stp	x24, x23, [sp, #48]
  405a48:	mov	x29, sp
  405a4c:	str	wzr, [x0]
  405a50:	stur	q0, [x0, #8]
  405a54:	str	xzr, [x0, #24]
  405a58:	b.eq	405a64 <wcrtomb@plt+0x2e04>  // b.none
  405a5c:	cmp	w21, #0x2f
  405a60:	b.ne	405aa8 <wcrtomb@plt+0x2e48>  // b.any
  405a64:	mov	w8, #0x1                   	// #1
  405a68:	cmp	w21, #0x5c
  405a6c:	str	w8, [x19]
  405a70:	b.ne	405cdc <wcrtomb@plt+0x307c>  // b.any
  405a74:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405a78:	ldr	x9, [x8, #1520]
  405a7c:	cbz	x9, 405c90 <wcrtomb@plt+0x3030>
  405a80:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  405a84:	ldr	x10, [x10, #1528]
  405a88:	cmp	x9, x10
  405a8c:	b.cs	405cd8 <wcrtomb@plt+0x3078>  // b.hs, b.nlast
  405a90:	add	x10, x9, #0x1
  405a94:	str	x10, [x8, #1520]
  405a98:	ldrb	w21, [x9]
  405a9c:	cmp	w21, #0xa
  405aa0:	b.eq	405cc4 <wcrtomb@plt+0x3064>  // b.none
  405aa4:	b	405cdc <wcrtomb@plt+0x307c>
  405aa8:	bl	4029e0 <__ctype_b_loc@plt>
  405aac:	ldr	x8, [x0]
  405ab0:	and	w9, w21, #0xff
  405ab4:	mov	x20, x0
  405ab8:	ldrh	w8, [x8, w9, uxtw #1]
  405abc:	tbnz	w8, #11, 405b84 <wcrtomb@plt+0x2f24>
  405ac0:	cmp	w21, #0x2b
  405ac4:	cset	w8, ne  // ne = any
  405ac8:	cmp	w21, #0x7e
  405acc:	cset	w9, ne  // ne = any
  405ad0:	and	w8, w8, w9
  405ad4:	tbnz	w8, #0, 405e6c <wcrtomb@plt+0x320c>
  405ad8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405adc:	ldr	w8, [x8, #2264]
  405ae0:	cmp	w8, #0x2
  405ae4:	b.eq	405e6c <wcrtomb@plt+0x320c>  // b.none
  405ae8:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  405aec:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  405af0:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  405af4:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  405af8:	b	405b0c <wcrtomb@plt+0x2eac>
  405afc:	mov	w8, #0xffffffff            	// #-1
  405b00:	ldr	x9, [x20]
  405b04:	ldrh	w10, [x9, w8, sxtw #1]
  405b08:	tbz	w10, #0, 405e7c <wcrtomb@plt+0x321c>
  405b0c:	ldr	x8, [x22, #1520]
  405b10:	cbz	x8, 405b2c <wcrtomb@plt+0x2ecc>
  405b14:	ldr	x9, [x25, #1528]
  405b18:	cmp	x8, x9
  405b1c:	b.cs	405afc <wcrtomb@plt+0x2e9c>  // b.hs, b.nlast
  405b20:	add	x9, x8, #0x1
  405b24:	str	x9, [x22, #1520]
  405b28:	b	405b50 <wcrtomb@plt+0x2ef0>
  405b2c:	ldr	x0, [x23, #1536]
  405b30:	cbz	x0, 405afc <wcrtomb@plt+0x2e9c>
  405b34:	ldrb	w8, [x0]
  405b38:	tbnz	w8, #4, 405afc <wcrtomb@plt+0x2e9c>
  405b3c:	ldp	x8, x9, [x0, #8]
  405b40:	cmp	x8, x9
  405b44:	b.cs	405b70 <wcrtomb@plt+0x2f10>  // b.hs, b.nlast
  405b48:	add	x9, x8, #0x1
  405b4c:	str	x9, [x0, #8]
  405b50:	ldrb	w8, [x8]
  405b54:	cmp	w8, #0xa
  405b58:	b.ne	405b00 <wcrtomb@plt+0x2ea0>  // b.any
  405b5c:	ldr	x8, [x24, #1312]
  405b60:	add	x8, x8, #0x1
  405b64:	str	x8, [x24, #1312]
  405b68:	mov	w8, #0xa                   	// #10
  405b6c:	b	405b00 <wcrtomb@plt+0x2ea0>
  405b70:	bl	402c20 <__uflow@plt>
  405b74:	mov	w8, w0
  405b78:	cmp	w8, #0xa
  405b7c:	b.ne	405b00 <wcrtomb@plt+0x2ea0>  // b.any
  405b80:	b	405b5c <wcrtomb@plt+0x2efc>
  405b84:	mov	x27, xzr
  405b88:	mov	w26, #0xa                   	// #10
  405b8c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  405b90:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  405b94:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  405b98:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  405b9c:	b	405bb8 <wcrtomb@plt+0x2f58>
  405ba0:	mov	w21, #0xffffffff            	// #-1
  405ba4:	ldr	x8, [x20]
  405ba8:	and	w9, w21, #0xff
  405bac:	sub	x27, x27, #0x30
  405bb0:	ldrh	w8, [x8, w9, uxtw #1]
  405bb4:	tbz	w8, #11, 405c34 <wcrtomb@plt+0x2fd4>
  405bb8:	ldr	x8, [x22, #1520]
  405bbc:	mul	x9, x27, x26
  405bc0:	add	x27, x9, w21, sxtw
  405bc4:	cbz	x8, 405be0 <wcrtomb@plt+0x2f80>
  405bc8:	ldr	x9, [x25, #1528]
  405bcc:	cmp	x8, x9
  405bd0:	b.cs	405ba0 <wcrtomb@plt+0x2f40>  // b.hs, b.nlast
  405bd4:	add	x9, x8, #0x1
  405bd8:	str	x9, [x22, #1520]
  405bdc:	b	405c04 <wcrtomb@plt+0x2fa4>
  405be0:	ldr	x0, [x23, #1536]
  405be4:	cbz	x0, 405ba0 <wcrtomb@plt+0x2f40>
  405be8:	ldrb	w8, [x0]
  405bec:	tbnz	w8, #4, 405ba0 <wcrtomb@plt+0x2f40>
  405bf0:	ldp	x8, x9, [x0, #8]
  405bf4:	cmp	x8, x9
  405bf8:	b.cs	405c20 <wcrtomb@plt+0x2fc0>  // b.hs, b.nlast
  405bfc:	add	x9, x8, #0x1
  405c00:	str	x9, [x0, #8]
  405c04:	ldrb	w21, [x8]
  405c08:	cmp	w21, #0xa
  405c0c:	b.ne	405ba4 <wcrtomb@plt+0x2f44>  // b.any
  405c10:	ldr	x8, [x24, #1312]
  405c14:	add	x8, x8, #0x1
  405c18:	str	x8, [x24, #1312]
  405c1c:	b	405ba4 <wcrtomb@plt+0x2f44>
  405c20:	bl	402c20 <__uflow@plt>
  405c24:	mov	w21, w0
  405c28:	cmp	w21, #0xa
  405c2c:	b.ne	405ba4 <wcrtomb@plt+0x2f44>  // b.any
  405c30:	b	405c10 <wcrtomb@plt+0x2fb0>
  405c34:	cmn	w21, #0x1
  405c38:	b.eq	405fb4 <wcrtomb@plt+0x3354>  // b.none
  405c3c:	cmp	w21, #0xa
  405c40:	b.ne	405c54 <wcrtomb@plt+0x2ff4>  // b.any
  405c44:	ldr	x8, [x24, #1312]
  405c48:	cbz	x8, 405c54 <wcrtomb@plt+0x2ff4>
  405c4c:	sub	x8, x8, #0x1
  405c50:	str	x8, [x24, #1312]
  405c54:	ldr	x8, [x22, #1520]
  405c58:	cbz	x8, 405fa8 <wcrtomb@plt+0x3348>
  405c5c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  405c60:	ldr	x9, [x9, #1512]
  405c64:	cmp	x8, x9
  405c68:	b.ls	405c80 <wcrtomb@plt+0x3020>  // b.plast
  405c6c:	sub	x9, x8, #0x1
  405c70:	str	x9, [x22, #1520]
  405c74:	ldurb	w8, [x8, #-1]
  405c78:	cmp	w21, w8
  405c7c:	b.eq	405fb4 <wcrtomb@plt+0x3354>  // b.none
  405c80:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405c84:	add	x0, x0, #0xd9d
  405c88:	mov	w1, w21
  405c8c:	bl	40b53c <wcrtomb@plt+0x88dc>
  405c90:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405c94:	ldr	x0, [x8, #1536]
  405c98:	cbz	x0, 405cd8 <wcrtomb@plt+0x3078>
  405c9c:	ldrb	w8, [x0]
  405ca0:	tbnz	w8, #4, 405cd8 <wcrtomb@plt+0x3078>
  405ca4:	ldp	x8, x9, [x0, #8]
  405ca8:	cmp	x8, x9
  405cac:	b.cs	4062a0 <wcrtomb@plt+0x3640>  // b.hs, b.nlast
  405cb0:	add	x9, x8, #0x1
  405cb4:	str	x9, [x0, #8]
  405cb8:	ldrb	w21, [x8]
  405cbc:	cmp	w21, #0xa
  405cc0:	b.ne	405cdc <wcrtomb@plt+0x307c>  // b.any
  405cc4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  405cc8:	ldr	x9, [x8, #1312]
  405ccc:	add	x9, x9, #0x1
  405cd0:	str	x9, [x8, #1312]
  405cd4:	b	405cdc <wcrtomb@plt+0x307c>
  405cd8:	mov	w21, #0xffffffff            	// #-1
  405cdc:	mov	w1, #0x1                   	// #1
  405ce0:	mov	w0, w21
  405ce4:	bl	4068cc <wcrtomb@plt+0x3c6c>
  405ce8:	cbz	x0, 4062b4 <wcrtomb@plt+0x3654>
  405cec:	mov	x20, x0
  405cf0:	mov	w21, wzr
  405cf4:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  405cf8:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  405cfc:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  405d00:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  405d04:	adrp	x27, 439000 <_obstack_memory_used@@Base+0x235a8>
  405d08:	b	405d20 <wcrtomb@plt+0x30c0>
  405d0c:	mov	w22, #0xffffffff            	// #-1
  405d10:	bl	4029e0 <__ctype_b_loc@plt>
  405d14:	ldr	x8, [x0]
  405d18:	ldrh	w8, [x8, w22, sxtw #1]
  405d1c:	tbz	w8, #0, 405d80 <wcrtomb@plt+0x3120>
  405d20:	ldr	x8, [x23, #1520]
  405d24:	cbz	x8, 405d40 <wcrtomb@plt+0x30e0>
  405d28:	ldr	x9, [x27, #1528]
  405d2c:	cmp	x8, x9
  405d30:	b.cs	405d0c <wcrtomb@plt+0x30ac>  // b.hs, b.nlast
  405d34:	add	x9, x8, #0x1
  405d38:	str	x9, [x23, #1520]
  405d3c:	b	405d64 <wcrtomb@plt+0x3104>
  405d40:	ldr	x0, [x24, #1536]
  405d44:	cbz	x0, 405d0c <wcrtomb@plt+0x30ac>
  405d48:	ldrb	w8, [x0]
  405d4c:	tbnz	w8, #4, 405d0c <wcrtomb@plt+0x30ac>
  405d50:	ldp	x8, x9, [x0, #8]
  405d54:	cmp	x8, x9
  405d58:	b.cs	405db4 <wcrtomb@plt+0x3154>  // b.hs, b.nlast
  405d5c:	add	x9, x8, #0x1
  405d60:	str	x9, [x0, #8]
  405d64:	ldrb	w22, [x8]
  405d68:	cmp	w22, #0xa
  405d6c:	b.ne	405d10 <wcrtomb@plt+0x30b0>  // b.any
  405d70:	ldr	x8, [x25, #1312]
  405d74:	add	x8, x8, #0x1
  405d78:	str	x8, [x25, #1312]
  405d7c:	b	405d10 <wcrtomb@plt+0x30b0>
  405d80:	ldr	w8, [x26, #2264]
  405d84:	cmp	w8, #0x2
  405d88:	b.eq	405dc8 <wcrtomb@plt+0x3168>  // b.none
  405d8c:	cmp	w22, #0x49
  405d90:	b.eq	405da8 <wcrtomb@plt+0x3148>  // b.none
  405d94:	cmp	w22, #0x4d
  405d98:	b.ne	405dc8 <wcrtomb@plt+0x3168>  // b.any
  405d9c:	mov	w8, #0x4                   	// #4
  405da0:	orr	w21, w21, w8
  405da4:	b	405d20 <wcrtomb@plt+0x30c0>
  405da8:	mov	w8, #0x2                   	// #2
  405dac:	orr	w21, w21, w8
  405db0:	b	405d20 <wcrtomb@plt+0x30c0>
  405db4:	bl	402c20 <__uflow@plt>
  405db8:	mov	w22, w0
  405dbc:	cmp	w22, #0xa
  405dc0:	b.ne	405d10 <wcrtomb@plt+0x30b0>  // b.any
  405dc4:	b	405d70 <wcrtomb@plt+0x3110>
  405dc8:	cmn	w22, #0x1
  405dcc:	b.eq	405e30 <wcrtomb@plt+0x31d0>  // b.none
  405dd0:	cmp	w22, #0xa
  405dd4:	b.ne	405de8 <wcrtomb@plt+0x3188>  // b.any
  405dd8:	ldr	x8, [x25, #1312]
  405ddc:	cbz	x8, 405de8 <wcrtomb@plt+0x3188>
  405de0:	sub	x8, x8, #0x1
  405de4:	str	x8, [x25, #1312]
  405de8:	ldr	x8, [x23, #1520]
  405dec:	cbz	x8, 405e24 <wcrtomb@plt+0x31c4>
  405df0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  405df4:	ldr	x9, [x9, #1512]
  405df8:	cmp	x8, x9
  405dfc:	b.ls	405e14 <wcrtomb@plt+0x31b4>  // b.plast
  405e00:	sub	x9, x8, #0x1
  405e04:	str	x9, [x23, #1520]
  405e08:	ldurb	w8, [x8, #-1]
  405e0c:	cmp	w22, w8
  405e10:	b.eq	405e30 <wcrtomb@plt+0x31d0>  // b.none
  405e14:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  405e18:	add	x0, x0, #0xd9d
  405e1c:	mov	w1, w22
  405e20:	bl	40b53c <wcrtomb@plt+0x88dc>
  405e24:	ldr	x1, [x24, #1536]
  405e28:	mov	w0, w22
  405e2c:	bl	402a20 <ungetc@plt>
  405e30:	mov	x0, x20
  405e34:	mov	w1, w21
  405e38:	mov	w2, wzr
  405e3c:	bl	40a650 <wcrtomb@plt+0x79f0>
  405e40:	str	x0, [x19, #24]
  405e44:	mov	x0, x20
  405e48:	bl	40c240 <wcrtomb@plt+0x95e0>
  405e4c:	mov	w0, #0x1                   	// #1
  405e50:	ldp	x20, x19, [sp, #80]
  405e54:	ldp	x22, x21, [sp, #64]
  405e58:	ldp	x24, x23, [sp, #48]
  405e5c:	ldp	x26, x25, [sp, #32]
  405e60:	ldr	x27, [sp, #16]
  405e64:	ldp	x29, x30, [sp], #96
  405e68:	ret
  405e6c:	cmp	w21, #0x24
  405e70:	b.ne	405ef0 <wcrtomb@plt+0x3290>  // b.any
  405e74:	mov	w8, #0x6                   	// #6
  405e78:	b	40625c <wcrtomb@plt+0x35fc>
  405e7c:	and	w10, w8, #0xff
  405e80:	ldrh	w9, [x9, w10, uxtw #1]
  405e84:	tbnz	w9, #11, 405ef8 <wcrtomb@plt+0x3298>
  405e88:	mov	x26, xzr
  405e8c:	cmn	w8, #0x1
  405e90:	b.eq	405ed8 <wcrtomb@plt+0x3278>  // b.none
  405e94:	cmp	w8, #0xa
  405e98:	b.ne	405eac <wcrtomb@plt+0x324c>  // b.any
  405e9c:	ldr	x9, [x24, #1312]
  405ea0:	cbz	x9, 405eac <wcrtomb@plt+0x324c>
  405ea4:	sub	x9, x9, #0x1
  405ea8:	str	x9, [x24, #1312]
  405eac:	ldr	x9, [x22, #1520]
  405eb0:	cbz	x9, 406264 <wcrtomb@plt+0x3604>
  405eb4:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  405eb8:	ldr	x10, [x10, #1512]
  405ebc:	cmp	x9, x10
  405ec0:	b.ls	4062c8 <wcrtomb@plt+0x3668>  // b.plast
  405ec4:	sub	x10, x9, #0x1
  405ec8:	str	x10, [x22, #1520]
  405ecc:	ldurb	w9, [x9, #-1]
  405ed0:	cmp	w8, w9
  405ed4:	b.ne	4062c8 <wcrtomb@plt+0x3668>  // b.any
  405ed8:	str	x26, [x19, #16]
  405edc:	cbz	x26, 405e4c <wcrtomb@plt+0x31ec>
  405ee0:	cmp	w21, #0x2b
  405ee4:	b.ne	406258 <wcrtomb@plt+0x35f8>  // b.any
  405ee8:	mov	w8, #0x4                   	// #4
  405eec:	b	40625c <wcrtomb@plt+0x35fc>
  405ef0:	mov	w0, wzr
  405ef4:	b	405e50 <wcrtomb@plt+0x31f0>
  405ef8:	mov	x26, xzr
  405efc:	mov	w27, #0xa                   	// #10
  405f00:	b	405f18 <wcrtomb@plt+0x32b8>
  405f04:	mov	w8, #0xffffffff            	// #-1
  405f08:	ldr	x9, [x20]
  405f0c:	and	w10, w8, #0xff
  405f10:	ldrh	w9, [x9, w10, uxtw #1]
  405f14:	tbz	w9, #11, 405e8c <wcrtomb@plt+0x322c>
  405f18:	ldr	x9, [x22, #1520]
  405f1c:	mul	x10, x26, x27
  405f20:	add	x8, x10, w8, sxtw
  405f24:	sub	x26, x8, #0x30
  405f28:	cbz	x9, 405f50 <wcrtomb@plt+0x32f0>
  405f2c:	ldr	x8, [x25, #1528]
  405f30:	cmp	x9, x8
  405f34:	b.cs	405f04 <wcrtomb@plt+0x32a4>  // b.hs, b.nlast
  405f38:	add	x8, x9, #0x1
  405f3c:	str	x8, [x22, #1520]
  405f40:	ldrb	w8, [x9]
  405f44:	cmp	w8, #0xa
  405f48:	b.ne	405f08 <wcrtomb@plt+0x32a8>  // b.any
  405f4c:	b	405f80 <wcrtomb@plt+0x3320>
  405f50:	ldr	x0, [x23, #1536]
  405f54:	cbz	x0, 405f04 <wcrtomb@plt+0x32a4>
  405f58:	ldrb	w8, [x0]
  405f5c:	tbnz	w8, #4, 405f04 <wcrtomb@plt+0x32a4>
  405f60:	ldp	x8, x9, [x0, #8]
  405f64:	cmp	x8, x9
  405f68:	b.cs	405f94 <wcrtomb@plt+0x3334>  // b.hs, b.nlast
  405f6c:	add	x9, x8, #0x1
  405f70:	str	x9, [x0, #8]
  405f74:	ldrb	w8, [x8]
  405f78:	cmp	w8, #0xa
  405f7c:	b.ne	405f08 <wcrtomb@plt+0x32a8>  // b.any
  405f80:	ldr	x8, [x24, #1312]
  405f84:	add	x8, x8, #0x1
  405f88:	str	x8, [x24, #1312]
  405f8c:	mov	w8, #0xa                   	// #10
  405f90:	b	405f08 <wcrtomb@plt+0x32a8>
  405f94:	bl	402c20 <__uflow@plt>
  405f98:	mov	w8, w0
  405f9c:	cmp	w8, #0xa
  405fa0:	b.ne	405f08 <wcrtomb@plt+0x32a8>  // b.any
  405fa4:	b	405f80 <wcrtomb@plt+0x3320>
  405fa8:	ldr	x1, [x23, #1536]
  405fac:	mov	w0, w21
  405fb0:	bl	402a20 <ungetc@plt>
  405fb4:	mov	w8, #0x2                   	// #2
  405fb8:	str	x27, [x19, #8]
  405fbc:	str	w8, [x19]
  405fc0:	b	405fd4 <wcrtomb@plt+0x3374>
  405fc4:	mov	w8, #0xffffffff            	// #-1
  405fc8:	ldr	x9, [x20]
  405fcc:	ldrh	w9, [x9, w8, sxtw #1]
  405fd0:	tbz	w9, #0, 40604c <wcrtomb@plt+0x33ec>
  405fd4:	ldr	x8, [x22, #1520]
  405fd8:	cbz	x8, 405ff4 <wcrtomb@plt+0x3394>
  405fdc:	ldr	x9, [x25, #1528]
  405fe0:	cmp	x8, x9
  405fe4:	b.cs	405fc4 <wcrtomb@plt+0x3364>  // b.hs, b.nlast
  405fe8:	add	x9, x8, #0x1
  405fec:	str	x9, [x22, #1520]
  405ff0:	b	406018 <wcrtomb@plt+0x33b8>
  405ff4:	ldr	x0, [x23, #1536]
  405ff8:	cbz	x0, 405fc4 <wcrtomb@plt+0x3364>
  405ffc:	ldrb	w8, [x0]
  406000:	tbnz	w8, #4, 405fc4 <wcrtomb@plt+0x3364>
  406004:	ldp	x8, x9, [x0, #8]
  406008:	cmp	x8, x9
  40600c:	b.cs	406038 <wcrtomb@plt+0x33d8>  // b.hs, b.nlast
  406010:	add	x9, x8, #0x1
  406014:	str	x9, [x0, #8]
  406018:	ldrb	w8, [x8]
  40601c:	cmp	w8, #0xa
  406020:	b.ne	405fc8 <wcrtomb@plt+0x3368>  // b.any
  406024:	ldr	x8, [x24, #1312]
  406028:	add	x8, x8, #0x1
  40602c:	str	x8, [x24, #1312]
  406030:	mov	w8, #0xa                   	// #10
  406034:	b	405fc8 <wcrtomb@plt+0x3368>
  406038:	bl	402c20 <__uflow@plt>
  40603c:	mov	w8, w0
  406040:	cmp	w8, #0xa
  406044:	b.ne	405fc8 <wcrtomb@plt+0x3368>  // b.any
  406048:	b	406024 <wcrtomb@plt+0x33c4>
  40604c:	cmp	w8, #0x7e
  406050:	b.ne	406064 <wcrtomb@plt+0x3404>  // b.any
  406054:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  406058:	ldr	w9, [x9, #2264]
  40605c:	cmp	w9, #0x2
  406060:	b.ne	4060c4 <wcrtomb@plt+0x3464>  // b.any
  406064:	cmn	w8, #0x1
  406068:	b.eq	405e4c <wcrtomb@plt+0x31ec>  // b.none
  40606c:	cmp	w8, #0xa
  406070:	b.ne	406084 <wcrtomb@plt+0x3424>  // b.any
  406074:	ldr	x9, [x24, #1312]
  406078:	cbz	x9, 406084 <wcrtomb@plt+0x3424>
  40607c:	sub	x9, x9, #0x1
  406080:	str	x9, [x24, #1312]
  406084:	ldr	x9, [x22, #1520]
  406088:	cbz	x9, 40627c <wcrtomb@plt+0x361c>
  40608c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  406090:	ldr	x10, [x10, #1512]
  406094:	cmp	x9, x10
  406098:	b.ls	4062c8 <wcrtomb@plt+0x3668>  // b.plast
  40609c:	sub	x10, x9, #0x1
  4060a0:	str	x10, [x22, #1520]
  4060a4:	ldurb	w9, [x9, #-1]
  4060a8:	cmp	w8, w9
  4060ac:	b.eq	405e4c <wcrtomb@plt+0x31ec>  // b.none
  4060b0:	b	4062c8 <wcrtomb@plt+0x3668>
  4060b4:	mov	w8, #0xffffffff            	// #-1
  4060b8:	ldr	x9, [x20]
  4060bc:	ldrh	w10, [x9, w8, sxtw #1]
  4060c0:	tbz	w10, #0, 40613c <wcrtomb@plt+0x34dc>
  4060c4:	ldr	x8, [x22, #1520]
  4060c8:	cbz	x8, 4060e4 <wcrtomb@plt+0x3484>
  4060cc:	ldr	x9, [x25, #1528]
  4060d0:	cmp	x8, x9
  4060d4:	b.cs	4060b4 <wcrtomb@plt+0x3454>  // b.hs, b.nlast
  4060d8:	add	x9, x8, #0x1
  4060dc:	str	x9, [x22, #1520]
  4060e0:	b	406108 <wcrtomb@plt+0x34a8>
  4060e4:	ldr	x0, [x23, #1536]
  4060e8:	cbz	x0, 4060b4 <wcrtomb@plt+0x3454>
  4060ec:	ldrb	w8, [x0]
  4060f0:	tbnz	w8, #4, 4060b4 <wcrtomb@plt+0x3454>
  4060f4:	ldp	x8, x9, [x0, #8]
  4060f8:	cmp	x8, x9
  4060fc:	b.cs	406128 <wcrtomb@plt+0x34c8>  // b.hs, b.nlast
  406100:	add	x9, x8, #0x1
  406104:	str	x9, [x0, #8]
  406108:	ldrb	w8, [x8]
  40610c:	cmp	w8, #0xa
  406110:	b.ne	4060b8 <wcrtomb@plt+0x3458>  // b.any
  406114:	ldr	x8, [x24, #1312]
  406118:	add	x8, x8, #0x1
  40611c:	str	x8, [x24, #1312]
  406120:	mov	w8, #0xa                   	// #10
  406124:	b	4060b8 <wcrtomb@plt+0x3458>
  406128:	bl	402c20 <__uflow@plt>
  40612c:	mov	w8, w0
  406130:	cmp	w8, #0xa
  406134:	b.ne	4060b8 <wcrtomb@plt+0x3458>  // b.any
  406138:	b	406114 <wcrtomb@plt+0x34b4>
  40613c:	and	w10, w8, #0xff
  406140:	ldrh	w9, [x9, w10, uxtw #1]
  406144:	tbnz	w9, #11, 4061a8 <wcrtomb@plt+0x3548>
  406148:	mov	x21, xzr
  40614c:	cmn	w8, #0x1
  406150:	b.eq	406198 <wcrtomb@plt+0x3538>  // b.none
  406154:	cmp	w8, #0xa
  406158:	b.ne	40616c <wcrtomb@plt+0x350c>  // b.any
  40615c:	ldr	x9, [x24, #1312]
  406160:	cbz	x9, 40616c <wcrtomb@plt+0x350c>
  406164:	sub	x9, x9, #0x1
  406168:	str	x9, [x24, #1312]
  40616c:	ldr	x9, [x22, #1520]
  406170:	cbz	x9, 40628c <wcrtomb@plt+0x362c>
  406174:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  406178:	ldr	x10, [x10, #1512]
  40617c:	cmp	x9, x10
  406180:	b.ls	4062c8 <wcrtomb@plt+0x3668>  // b.plast
  406184:	sub	x10, x9, #0x1
  406188:	str	x10, [x22, #1520]
  40618c:	ldurb	w9, [x9, #-1]
  406190:	cmp	w8, w9
  406194:	b.ne	4062c8 <wcrtomb@plt+0x3668>  // b.any
  406198:	cbz	x21, 405e4c <wcrtomb@plt+0x31ec>
  40619c:	str	x21, [x19, #16]
  4061a0:	mov	w8, #0x3                   	// #3
  4061a4:	b	40625c <wcrtomb@plt+0x35fc>
  4061a8:	mov	x21, xzr
  4061ac:	mov	w26, #0xa                   	// #10
  4061b0:	b	4061c8 <wcrtomb@plt+0x3568>
  4061b4:	mov	w8, #0xffffffff            	// #-1
  4061b8:	ldr	x9, [x20]
  4061bc:	and	w10, w8, #0xff
  4061c0:	ldrh	w9, [x9, w10, uxtw #1]
  4061c4:	tbz	w9, #11, 40614c <wcrtomb@plt+0x34ec>
  4061c8:	ldr	x9, [x22, #1520]
  4061cc:	mul	x10, x21, x26
  4061d0:	add	x8, x10, w8, sxtw
  4061d4:	sub	x21, x8, #0x30
  4061d8:	cbz	x9, 406200 <wcrtomb@plt+0x35a0>
  4061dc:	ldr	x8, [x25, #1528]
  4061e0:	cmp	x9, x8
  4061e4:	b.cs	4061b4 <wcrtomb@plt+0x3554>  // b.hs, b.nlast
  4061e8:	add	x8, x9, #0x1
  4061ec:	str	x8, [x22, #1520]
  4061f0:	ldrb	w8, [x9]
  4061f4:	cmp	w8, #0xa
  4061f8:	b.ne	4061b8 <wcrtomb@plt+0x3558>  // b.any
  4061fc:	b	406230 <wcrtomb@plt+0x35d0>
  406200:	ldr	x0, [x23, #1536]
  406204:	cbz	x0, 4061b4 <wcrtomb@plt+0x3554>
  406208:	ldrb	w8, [x0]
  40620c:	tbnz	w8, #4, 4061b4 <wcrtomb@plt+0x3554>
  406210:	ldp	x8, x9, [x0, #8]
  406214:	cmp	x8, x9
  406218:	b.cs	406244 <wcrtomb@plt+0x35e4>  // b.hs, b.nlast
  40621c:	add	x9, x8, #0x1
  406220:	str	x9, [x0, #8]
  406224:	ldrb	w8, [x8]
  406228:	cmp	w8, #0xa
  40622c:	b.ne	4061b8 <wcrtomb@plt+0x3558>  // b.any
  406230:	ldr	x8, [x24, #1312]
  406234:	add	x8, x8, #0x1
  406238:	str	x8, [x24, #1312]
  40623c:	mov	w8, #0xa                   	// #10
  406240:	b	4061b8 <wcrtomb@plt+0x3558>
  406244:	bl	402c20 <__uflow@plt>
  406248:	mov	w8, w0
  40624c:	cmp	w8, #0xa
  406250:	b.ne	4061b8 <wcrtomb@plt+0x3558>  // b.any
  406254:	b	406230 <wcrtomb@plt+0x35d0>
  406258:	mov	w8, #0x5                   	// #5
  40625c:	str	w8, [x19]
  406260:	b	405e4c <wcrtomb@plt+0x31ec>
  406264:	ldr	x1, [x23, #1536]
  406268:	mov	w0, w8
  40626c:	bl	402a20 <ungetc@plt>
  406270:	str	x26, [x19, #16]
  406274:	cbnz	x26, 405ee0 <wcrtomb@plt+0x3280>
  406278:	b	405e4c <wcrtomb@plt+0x31ec>
  40627c:	ldr	x1, [x23, #1536]
  406280:	mov	w0, w8
  406284:	bl	402a20 <ungetc@plt>
  406288:	b	405e4c <wcrtomb@plt+0x31ec>
  40628c:	ldr	x1, [x23, #1536]
  406290:	mov	w0, w8
  406294:	bl	402a20 <ungetc@plt>
  406298:	cbnz	x21, 40619c <wcrtomb@plt+0x353c>
  40629c:	b	405e4c <wcrtomb@plt+0x31ec>
  4062a0:	bl	402c20 <__uflow@plt>
  4062a4:	mov	w21, w0
  4062a8:	cmp	w21, #0xa
  4062ac:	b.eq	405cc4 <wcrtomb@plt+0x3064>  // b.none
  4062b0:	b	405cdc <wcrtomb@plt+0x307c>
  4062b4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4062b8:	add	x1, x1, #0x9bd
  4062bc:	mov	w2, #0x5                   	// #5
  4062c0:	bl	402b40 <dcgettext@plt>
  4062c4:	bl	402d7c <wcrtomb@plt+0x11c>
  4062c8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4062cc:	add	x0, x0, #0xd9d
  4062d0:	mov	w1, w8
  4062d4:	bl	40b53c <wcrtomb@plt+0x88dc>
  4062d8:	stp	x29, x30, [sp, #-48]!
  4062dc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4062e0:	stp	x20, x19, [sp, #32]
  4062e4:	mov	w19, w0
  4062e8:	add	x1, x1, #0xb5b
  4062ec:	mov	w2, #0x5                   	// #5
  4062f0:	mov	x0, xzr
  4062f4:	str	x21, [sp, #16]
  4062f8:	mov	x29, sp
  4062fc:	bl	402b40 <dcgettext@plt>
  406300:	mov	x20, x0
  406304:	bl	4025c0 <strlen@plt>
  406308:	bl	415348 <wcrtomb@plt+0x126e8>
  40630c:	and	w4, w19, #0xff
  406310:	mov	w1, #0x1                   	// #1
  406314:	mov	x2, #0xffffffffffffffff    	// #-1
  406318:	mov	x3, x20
  40631c:	mov	x21, x0
  406320:	bl	4025d0 <__sprintf_chk@plt>
  406324:	mov	x0, x21
  406328:	bl	402d7c <wcrtomb@plt+0x11c>
  40632c:	stp	x29, x30, [sp, #-80]!
  406330:	str	x25, [sp, #16]
  406334:	stp	x24, x23, [sp, #32]
  406338:	stp	x22, x21, [sp, #48]
  40633c:	stp	x20, x19, [sp, #64]
  406340:	mov	x29, sp
  406344:	bl	40c08c <wcrtomb@plt+0x942c>
  406348:	mov	x19, x0
  40634c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  406350:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  406354:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  406358:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  40635c:	b	406374 <wcrtomb@plt+0x3714>
  406360:	mov	w20, #0xffffffff            	// #-1
  406364:	bl	4029e0 <__ctype_b_loc@plt>
  406368:	ldr	x8, [x0]
  40636c:	ldrh	w8, [x8, w20, sxtw #1]
  406370:	tbz	w8, #0, 4063e8 <wcrtomb@plt+0x3788>
  406374:	ldr	x8, [x22, #1520]
  406378:	cbz	x8, 406394 <wcrtomb@plt+0x3734>
  40637c:	ldr	x9, [x25, #1528]
  406380:	cmp	x8, x9
  406384:	b.cs	406360 <wcrtomb@plt+0x3700>  // b.hs, b.nlast
  406388:	add	x9, x8, #0x1
  40638c:	str	x9, [x22, #1520]
  406390:	b	4063b8 <wcrtomb@plt+0x3758>
  406394:	ldr	x0, [x23, #1536]
  406398:	cbz	x0, 406360 <wcrtomb@plt+0x3700>
  40639c:	ldrb	w8, [x0]
  4063a0:	tbnz	w8, #4, 406360 <wcrtomb@plt+0x3700>
  4063a4:	ldp	x8, x9, [x0, #8]
  4063a8:	cmp	x8, x9
  4063ac:	b.cs	4063d4 <wcrtomb@plt+0x3774>  // b.hs, b.nlast
  4063b0:	add	x9, x8, #0x1
  4063b4:	str	x9, [x0, #8]
  4063b8:	ldrb	w20, [x8]
  4063bc:	cmp	w20, #0xa
  4063c0:	b.ne	406364 <wcrtomb@plt+0x3704>  // b.any
  4063c4:	ldr	x8, [x24, #1312]
  4063c8:	add	x8, x8, #0x1
  4063cc:	str	x8, [x24, #1312]
  4063d0:	b	406364 <wcrtomb@plt+0x3704>
  4063d4:	bl	402c20 <__uflow@plt>
  4063d8:	mov	w20, w0
  4063dc:	cmp	w20, #0xa
  4063e0:	b.ne	406364 <wcrtomb@plt+0x3704>  // b.any
  4063e4:	b	4063c4 <wcrtomb@plt+0x3764>
  4063e8:	mov	x21, x0
  4063ec:	b	4063fc <wcrtomb@plt+0x379c>
  4063f0:	ldr	x8, [x24, #1312]
  4063f4:	add	x8, x8, #0x1
  4063f8:	str	x8, [x24, #1312]
  4063fc:	cmn	w20, #0x1
  406400:	b.eq	406514 <wcrtomb@plt+0x38b4>  // b.none
  406404:	cmp	w20, #0xa
  406408:	b.eq	4064b0 <wcrtomb@plt+0x3850>  // b.none
  40640c:	ldr	x8, [x21]
  406410:	ldrh	w8, [x8, w20, sxtw #1]
  406414:	tbnz	w8, #0, 4064b0 <wcrtomb@plt+0x3850>
  406418:	cmp	w20, #0x23
  40641c:	b.eq	4064cc <wcrtomb@plt+0x386c>  // b.none
  406420:	cmp	w20, #0x3b
  406424:	b.eq	4064cc <wcrtomb@plt+0x386c>  // b.none
  406428:	cmp	w20, #0x7d
  40642c:	b.eq	4064cc <wcrtomb@plt+0x386c>  // b.none
  406430:	mov	x0, x19
  406434:	mov	w1, w20
  406438:	bl	40c198 <wcrtomb@plt+0x9538>
  40643c:	ldr	x8, [x22, #1520]
  406440:	cbz	x8, 406460 <wcrtomb@plt+0x3800>
  406444:	ldr	x9, [x25, #1528]
  406448:	mov	w20, #0xffffffff            	// #-1
  40644c:	cmp	x8, x9
  406450:	b.cs	4063fc <wcrtomb@plt+0x379c>  // b.hs, b.nlast
  406454:	add	x9, x8, #0x1
  406458:	str	x9, [x22, #1520]
  40645c:	b	40648c <wcrtomb@plt+0x382c>
  406460:	ldr	x0, [x23, #1536]
  406464:	mov	w20, #0xffffffff            	// #-1
  406468:	cbz	x0, 4063fc <wcrtomb@plt+0x379c>
  40646c:	ldrb	w8, [x0]
  406470:	mov	w20, #0xffffffff            	// #-1
  406474:	tbnz	w8, #4, 4063fc <wcrtomb@plt+0x379c>
  406478:	ldp	x8, x9, [x0, #8]
  40647c:	cmp	x8, x9
  406480:	b.cs	40649c <wcrtomb@plt+0x383c>  // b.hs, b.nlast
  406484:	add	x9, x8, #0x1
  406488:	str	x9, [x0, #8]
  40648c:	ldrb	w20, [x8]
  406490:	cmp	w20, #0xa
  406494:	b.ne	4063fc <wcrtomb@plt+0x379c>  // b.any
  406498:	b	4063f0 <wcrtomb@plt+0x3790>
  40649c:	bl	402c20 <__uflow@plt>
  4064a0:	mov	w20, w0
  4064a4:	cmp	w20, #0xa
  4064a8:	b.ne	4063fc <wcrtomb@plt+0x379c>  // b.any
  4064ac:	b	4063f0 <wcrtomb@plt+0x3790>
  4064b0:	cmp	w20, #0xa
  4064b4:	b.ne	4064cc <wcrtomb@plt+0x386c>  // b.any
  4064b8:	ldr	x8, [x24, #1312]
  4064bc:	cbz	x8, 4064cc <wcrtomb@plt+0x386c>
  4064c0:	sub	x8, x8, #0x1
  4064c4:	mov	w20, #0xa                   	// #10
  4064c8:	str	x8, [x24, #1312]
  4064cc:	ldr	x8, [x22, #1520]
  4064d0:	cbz	x8, 406508 <wcrtomb@plt+0x38a8>
  4064d4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4064d8:	ldr	x9, [x9, #1512]
  4064dc:	cmp	x8, x9
  4064e0:	b.ls	4064f8 <wcrtomb@plt+0x3898>  // b.plast
  4064e4:	sub	x9, x8, #0x1
  4064e8:	str	x9, [x22, #1520]
  4064ec:	ldurb	w8, [x8, #-1]
  4064f0:	cmp	w20, w8
  4064f4:	b.eq	406514 <wcrtomb@plt+0x38b4>  // b.none
  4064f8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4064fc:	add	x0, x0, #0xd9d
  406500:	mov	w1, w20
  406504:	bl	40b53c <wcrtomb@plt+0x88dc>
  406508:	ldr	x1, [x23, #1536]
  40650c:	mov	w0, w20
  406510:	bl	402a20 <ungetc@plt>
  406514:	mov	x0, x19
  406518:	mov	w1, wzr
  40651c:	bl	40c198 <wcrtomb@plt+0x9538>
  406520:	mov	x0, x19
  406524:	bl	40c0d0 <wcrtomb@plt+0x9470>
  406528:	bl	4155e4 <wcrtomb@plt+0x12984>
  40652c:	mov	x20, x0
  406530:	mov	x0, x19
  406534:	bl	40c240 <wcrtomb@plt+0x95e0>
  406538:	mov	x0, x20
  40653c:	ldp	x20, x19, [sp, #64]
  406540:	ldp	x22, x21, [sp, #48]
  406544:	ldp	x24, x23, [sp, #32]
  406548:	ldr	x25, [sp, #16]
  40654c:	ldp	x29, x30, [sp], #80
  406550:	ret
  406554:	stp	x29, x30, [sp, #-64]!
  406558:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40655c:	ldrb	w8, [x8, #1868]
  406560:	stp	x24, x23, [sp, #16]
  406564:	stp	x22, x21, [sp, #32]
  406568:	stp	x20, x19, [sp, #48]
  40656c:	mov	x29, sp
  406570:	cbnz	w8, 4066d8 <wcrtomb@plt+0x3a78>
  406574:	bl	40c08c <wcrtomb@plt+0x942c>
  406578:	mov	x19, x0
  40657c:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  406580:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  406584:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  406588:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40658c:	b	4065a4 <wcrtomb@plt+0x3944>
  406590:	mov	w20, #0xffffffff            	// #-1
  406594:	bl	4029e0 <__ctype_b_loc@plt>
  406598:	ldr	x8, [x0]
  40659c:	ldrh	w8, [x8, w20, sxtw #1]
  4065a0:	tbz	w8, #0, 406624 <wcrtomb@plt+0x39c4>
  4065a4:	ldr	x8, [x21, #1520]
  4065a8:	cbz	x8, 4065c4 <wcrtomb@plt+0x3964>
  4065ac:	ldr	x9, [x24, #1528]
  4065b0:	cmp	x8, x9
  4065b4:	b.cs	406590 <wcrtomb@plt+0x3930>  // b.hs, b.nlast
  4065b8:	add	x9, x8, #0x1
  4065bc:	str	x9, [x21, #1520]
  4065c0:	b	4065e8 <wcrtomb@plt+0x3988>
  4065c4:	ldr	x0, [x22, #1536]
  4065c8:	cbz	x0, 406590 <wcrtomb@plt+0x3930>
  4065cc:	ldrb	w8, [x0]
  4065d0:	tbnz	w8, #4, 406590 <wcrtomb@plt+0x3930>
  4065d4:	ldp	x8, x9, [x0, #8]
  4065d8:	cmp	x8, x9
  4065dc:	b.cs	406604 <wcrtomb@plt+0x39a4>  // b.hs, b.nlast
  4065e0:	add	x9, x8, #0x1
  4065e4:	str	x9, [x0, #8]
  4065e8:	ldrb	w20, [x8]
  4065ec:	cmp	w20, #0xa
  4065f0:	b.ne	406594 <wcrtomb@plt+0x3934>  // b.any
  4065f4:	ldr	x8, [x23, #1312]
  4065f8:	add	x8, x8, #0x1
  4065fc:	str	x8, [x23, #1312]
  406600:	b	406594 <wcrtomb@plt+0x3934>
  406604:	bl	402c20 <__uflow@plt>
  406608:	mov	w20, w0
  40660c:	cmp	w20, #0xa
  406610:	b.ne	406594 <wcrtomb@plt+0x3934>  // b.any
  406614:	b	4065f4 <wcrtomb@plt+0x3994>
  406618:	ldr	x8, [x23, #1312]
  40661c:	add	x8, x8, #0x1
  406620:	str	x8, [x23, #1312]
  406624:	cmn	w20, #0x1
  406628:	b.eq	4066b4 <wcrtomb@plt+0x3a54>  // b.none
  40662c:	cmp	w20, #0xa
  406630:	b.eq	4066b4 <wcrtomb@plt+0x3a54>  // b.none
  406634:	mov	x0, x19
  406638:	mov	w1, w20
  40663c:	bl	40c198 <wcrtomb@plt+0x9538>
  406640:	ldr	x8, [x21, #1520]
  406644:	cbz	x8, 406664 <wcrtomb@plt+0x3a04>
  406648:	ldr	x9, [x24, #1528]
  40664c:	mov	w20, #0xffffffff            	// #-1
  406650:	cmp	x8, x9
  406654:	b.cs	406624 <wcrtomb@plt+0x39c4>  // b.hs, b.nlast
  406658:	add	x9, x8, #0x1
  40665c:	str	x9, [x21, #1520]
  406660:	b	406690 <wcrtomb@plt+0x3a30>
  406664:	ldr	x0, [x22, #1536]
  406668:	mov	w20, #0xffffffff            	// #-1
  40666c:	cbz	x0, 406624 <wcrtomb@plt+0x39c4>
  406670:	ldrb	w8, [x0]
  406674:	mov	w20, #0xffffffff            	// #-1
  406678:	tbnz	w8, #4, 406624 <wcrtomb@plt+0x39c4>
  40667c:	ldp	x8, x9, [x0, #8]
  406680:	cmp	x8, x9
  406684:	b.cs	4066a0 <wcrtomb@plt+0x3a40>  // b.hs, b.nlast
  406688:	add	x9, x8, #0x1
  40668c:	str	x9, [x0, #8]
  406690:	ldrb	w20, [x8]
  406694:	cmp	w20, #0xa
  406698:	b.ne	406624 <wcrtomb@plt+0x39c4>  // b.any
  40669c:	b	406618 <wcrtomb@plt+0x39b8>
  4066a0:	bl	402c20 <__uflow@plt>
  4066a4:	mov	w20, w0
  4066a8:	cmp	w20, #0xa
  4066ac:	b.eq	406618 <wcrtomb@plt+0x39b8>  // b.none
  4066b0:	b	406624 <wcrtomb@plt+0x39c4>
  4066b4:	mov	x0, x19
  4066b8:	mov	w1, wzr
  4066bc:	bl	40c198 <wcrtomb@plt+0x9538>
  4066c0:	mov	x0, x19
  4066c4:	ldp	x20, x19, [sp, #48]
  4066c8:	ldp	x22, x21, [sp, #32]
  4066cc:	ldp	x24, x23, [sp, #16]
  4066d0:	ldp	x29, x30, [sp], #64
  4066d4:	ret
  4066d8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4066dc:	add	x1, x1, #0xbbe
  4066e0:	mov	w2, #0x5                   	// #5
  4066e4:	mov	x0, xzr
  4066e8:	bl	402b40 <dcgettext@plt>
  4066ec:	bl	402d7c <wcrtomb@plt+0x11c>
  4066f0:	stp	x29, x30, [sp, #-80]!
  4066f4:	stp	x26, x25, [sp, #16]
  4066f8:	stp	x24, x23, [sp, #32]
  4066fc:	stp	x22, x21, [sp, #48]
  406700:	stp	x20, x19, [sp, #64]
  406704:	mov	x29, sp
  406708:	mov	w21, w2
  40670c:	mov	x22, x1
  406710:	mov	x20, x0
  406714:	bl	406554 <wcrtomb@plt+0x38f4>
  406718:	mov	x19, x0
  40671c:	bl	40c0d0 <wcrtomb@plt+0x9470>
  406720:	ldrb	w8, [x0]
  406724:	cbz	w8, 4068b4 <wcrtomb@plt+0x3c54>
  406728:	ldr	x24, [x20]
  40672c:	mov	x23, x0
  406730:	cbz	x24, 40674c <wcrtomb@plt+0x3aec>
  406734:	ldr	x0, [x24]
  406738:	mov	x1, x23
  40673c:	bl	4029d0 <strcmp@plt>
  406740:	cbz	w0, 406754 <wcrtomb@plt+0x3af4>
  406744:	ldr	x24, [x24, #24]
  406748:	cbnz	x24, 406734 <wcrtomb@plt+0x3ad4>
  40674c:	mov	w25, wzr
  406750:	b	406758 <wcrtomb@plt+0x3af8>
  406754:	mov	w25, #0x1                   	// #1
  406758:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40675c:	ldr	w8, [x8, #2264]
  406760:	cbz	w8, 406824 <wcrtomb@plt+0x3bc4>
  406764:	tbnz	w25, #0, 406890 <wcrtomb@plt+0x3c30>
  406768:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40676c:	add	x8, x8, #0x590
  406770:	ldp	x8, x9, [x8]
  406774:	sub	x9, x9, x8
  406778:	cmp	x9, #0x1f
  40677c:	b.hi	406798 <wcrtomb@plt+0x3b38>  // b.pmore
  406780:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  406784:	add	x24, x24, #0x578
  406788:	mov	w1, #0x20                  	// #32
  40678c:	mov	x0, x24
  406790:	bl	415844 <_obstack_newchunk@@Base>
  406794:	ldr	x8, [x24, #24]
  406798:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40679c:	add	x9, x9, #0x588
  4067a0:	ldr	x24, [x9]
  4067a4:	add	x8, x8, #0x20
  4067a8:	str	x8, [x9, #8]
  4067ac:	cmp	x8, x24
  4067b0:	b.ne	4067c4 <wcrtomb@plt+0x3b64>  // b.any
  4067b4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4067b8:	ldrb	w10, [x9, #1480]
  4067bc:	orr	w10, w10, #0x2
  4067c0:	strb	w10, [x9, #1480]
  4067c4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4067c8:	add	x9, x9, #0x580
  4067cc:	ldr	x10, [x9, #40]
  4067d0:	ldr	x11, [x9]
  4067d4:	ldr	x12, [x9, #24]
  4067d8:	mov	x0, x23
  4067dc:	add	x8, x10, x8
  4067e0:	bic	x8, x8, x10
  4067e4:	sub	x13, x12, x11
  4067e8:	sub	x10, x8, x11
  4067ec:	cmp	x10, x13
  4067f0:	csel	x8, x12, x8, hi  // hi = pmore
  4067f4:	stp	x8, x8, [x9, #8]
  4067f8:	bl	4155e4 <wcrtomb@plt+0x12984>
  4067fc:	mov	x1, x22
  406800:	mov	w2, w21
  406804:	str	x0, [x24]
  406808:	bl	40b6a8 <wcrtomb@plt+0x8a48>
  40680c:	str	x0, [x24, #16]
  406810:	strb	wzr, [x24, #8]
  406814:	ldr	x8, [x20]
  406818:	str	x8, [x24, #24]
  40681c:	str	x24, [x20]
  406820:	b	406890 <wcrtomb@plt+0x3c30>
  406824:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  406828:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  40682c:	adrp	x12, 439000 <_obstack_memory_used@@Base+0x235a8>
  406830:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  406834:	ldr	x8, [x8, #1280]
  406838:	ldr	x10, [x10, #1272]
  40683c:	ldr	x12, [x12, #1248]
  406840:	ldr	x0, [x13, #912]
  406844:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  406848:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40684c:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x235a8>
  406850:	str	x8, [x9, #1488]
  406854:	str	x10, [x11, #1496]
  406858:	str	x12, [x13, #1504]
  40685c:	cbz	x0, 406764 <wcrtomb@plt+0x3b04>
  406860:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  406864:	add	x26, x26, #0x390
  406868:	mov	x1, x23
  40686c:	bl	4029d0 <strcmp@plt>
  406870:	cbz	w0, 406880 <wcrtomb@plt+0x3c20>
  406874:	ldr	x0, [x26, #40]!
  406878:	cbnz	x0, 406868 <wcrtomb@plt+0x3c08>
  40687c:	b	406764 <wcrtomb@plt+0x3b04>
  406880:	ldr	x8, [x26, #32]
  406884:	mov	x24, x26
  406888:	ldr	x8, [x8]
  40688c:	str	x8, [x26, #16]
  406890:	mov	x0, x19
  406894:	bl	40c240 <wcrtomb@plt+0x95e0>
  406898:	mov	x0, x24
  40689c:	ldp	x20, x19, [sp, #64]
  4068a0:	ldp	x22, x21, [sp, #48]
  4068a4:	ldp	x24, x23, [sp, #32]
  4068a8:	ldp	x26, x25, [sp, #16]
  4068ac:	ldp	x29, x30, [sp], #80
  4068b0:	ret
  4068b4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4068b8:	add	x1, x1, #0xbe6
  4068bc:	mov	w2, #0x5                   	// #5
  4068c0:	mov	x0, xzr
  4068c4:	bl	402b40 <dcgettext@plt>
  4068c8:	bl	402d7c <wcrtomb@plt+0x11c>
  4068cc:	sub	sp, sp, #0x80
  4068d0:	stp	x24, x23, [sp, #80]
  4068d4:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  4068d8:	ldr	w8, [x24, #2260]
  4068dc:	stp	x29, x30, [sp, #32]
  4068e0:	stp	x20, x19, [sp, #112]
  4068e4:	add	x29, sp, #0x20
  4068e8:	mov	w20, w0
  4068ec:	cmp	w8, #0x1
  4068f0:	stp	x28, x27, [sp, #48]
  4068f4:	stp	x26, x25, [sp, #64]
  4068f8:	stp	x22, x21, [sp, #96]
  4068fc:	str	w1, [sp, #16]
  406900:	stur	xzr, [x29, #-8]
  406904:	b.eq	406918 <wcrtomb@plt+0x3cb8>  // b.none
  406908:	sub	x1, x29, #0x8
  40690c:	mov	w0, w20
  406910:	bl	40a520 <wcrtomb@plt+0x78c0>
  406914:	cbnz	w0, 406e40 <wcrtomb@plt+0x41e0>
  406918:	stur	xzr, [x29, #-8]
  40691c:	bl	40c08c <wcrtomb@plt+0x942c>
  406920:	ldr	w8, [sp, #16]
  406924:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xf5a8>
  406928:	mov	x19, x0
  40692c:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  406930:	cmp	w8, #0x0
  406934:	cset	w8, eq  // eq = none
  406938:	cmp	w20, #0x26
  40693c:	cset	w9, eq  // eq = none
  406940:	and	w8, w8, w9
  406944:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  406948:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  40694c:	adrp	x28, 439000 <_obstack_memory_used@@Base+0x235a8>
  406950:	eor	w8, w8, #0x1
  406954:	add	x27, x27, #0x85a
  406958:	stur	w20, [x29, #-12]
  40695c:	str	w8, [sp, #12]
  406960:	b	406980 <wcrtomb@plt+0x3d20>
  406964:	ldr	x8, [x26, #1312]
  406968:	mov	w22, #0xa                   	// #10
  40696c:	add	x8, x8, #0x1
  406970:	str	x8, [x26, #1312]
  406974:	mov	x0, x19
  406978:	mov	w1, w22
  40697c:	bl	40c198 <wcrtomb@plt+0x9538>
  406980:	ldr	x8, [x23, #1520]
  406984:	cbz	x8, 4069a0 <wcrtomb@plt+0x3d40>
  406988:	ldr	x9, [x28, #1528]
  40698c:	cmp	x8, x9
  406990:	b.cs	406dfc <wcrtomb@plt+0x419c>  // b.hs, b.nlast
  406994:	add	x9, x8, #0x1
  406998:	str	x9, [x23, #1520]
  40699c:	b	4069c4 <wcrtomb@plt+0x3d64>
  4069a0:	ldr	x0, [x25, #1536]
  4069a4:	cbz	x0, 406dfc <wcrtomb@plt+0x419c>
  4069a8:	ldrb	w8, [x0]
  4069ac:	tbnz	w8, #4, 406dfc <wcrtomb@plt+0x419c>
  4069b0:	ldp	x8, x9, [x0, #8]
  4069b4:	cmp	x8, x9
  4069b8:	b.cs	406ba4 <wcrtomb@plt+0x3f44>  // b.hs, b.nlast
  4069bc:	add	x9, x8, #0x1
  4069c0:	str	x9, [x0, #8]
  4069c4:	ldrb	w22, [x8]
  4069c8:	cmn	w22, #0x1
  4069cc:	b.eq	406dfc <wcrtomb@plt+0x419c>  // b.none
  4069d0:	cmp	w22, #0xa
  4069d4:	b.eq	406e2c <wcrtomb@plt+0x41cc>  // b.none
  4069d8:	ldr	w8, [x24, #2260]
  4069dc:	cmp	w8, #0x1
  4069e0:	b.eq	4069f4 <wcrtomb@plt+0x3d94>  // b.none
  4069e4:	sub	x1, x29, #0x8
  4069e8:	mov	w0, w22
  4069ec:	bl	40a520 <wcrtomb@plt+0x78c0>
  4069f0:	cbnz	w0, 406974 <wcrtomb@plt+0x3d14>
  4069f4:	ldur	w8, [x29, #-12]
  4069f8:	cmp	w22, w8
  4069fc:	b.eq	406e08 <wcrtomb@plt+0x41a8>  // b.none
  406a00:	cmp	w22, #0x5c
  406a04:	b.ne	406a28 <wcrtomb@plt+0x3dc8>  // b.any
  406a08:	ldr	x8, [x23, #1520]
  406a0c:	cbz	x8, 406a64 <wcrtomb@plt+0x3e04>
  406a10:	ldr	x9, [x28, #1528]
  406a14:	cmp	x8, x9
  406a18:	b.cs	406dfc <wcrtomb@plt+0x419c>  // b.hs, b.nlast
  406a1c:	add	x9, x8, #0x1
  406a20:	str	x9, [x23, #1520]
  406a24:	b	406a88 <wcrtomb@plt+0x3e28>
  406a28:	ldr	w8, [sp, #16]
  406a2c:	cbz	w8, 406974 <wcrtomb@plt+0x3d14>
  406a30:	cmp	w22, #0x5b
  406a34:	b.ne	406974 <wcrtomb@plt+0x3d14>  // b.any
  406a38:	mov	w1, #0x5b                  	// #91
  406a3c:	mov	x0, x19
  406a40:	bl	40c198 <wcrtomb@plt+0x9538>
  406a44:	ldr	x8, [x23, #1520]
  406a48:	cbz	x8, 406af4 <wcrtomb@plt+0x3e94>
  406a4c:	ldr	x9, [x28, #1528]
  406a50:	cmp	x8, x9
  406a54:	b.cs	406c30 <wcrtomb@plt+0x3fd0>  // b.hs, b.nlast
  406a58:	add	x9, x8, #0x1
  406a5c:	str	x9, [x23, #1520]
  406a60:	b	406b18 <wcrtomb@plt+0x3eb8>
  406a64:	ldr	x0, [x25, #1536]
  406a68:	cbz	x0, 406dfc <wcrtomb@plt+0x419c>
  406a6c:	ldrb	w8, [x0]
  406a70:	tbnz	w8, #4, 406dfc <wcrtomb@plt+0x419c>
  406a74:	ldp	x8, x9, [x0, #8]
  406a78:	cmp	x8, x9
  406a7c:	b.cs	406bb8 <wcrtomb@plt+0x3f58>  // b.hs, b.nlast
  406a80:	add	x9, x8, #0x1
  406a84:	str	x9, [x0, #8]
  406a88:	ldrb	w0, [x8]
  406a8c:	cmp	w0, #0xa
  406a90:	b.eq	406964 <wcrtomb@plt+0x3d04>  // b.none
  406a94:	cmn	w0, #0x1
  406a98:	b.eq	406dfc <wcrtomb@plt+0x419c>  // b.none
  406a9c:	ldr	w8, [sp, #16]
  406aa0:	mov	w22, #0xa                   	// #10
  406aa4:	cmp	w8, #0x0
  406aa8:	cset	w8, ne  // ne = any
  406aac:	cmp	w0, #0x6e
  406ab0:	cset	w9, eq  // eq = none
  406ab4:	cmp	w0, #0xa
  406ab8:	b.eq	406974 <wcrtomb@plt+0x3d14>  // b.none
  406abc:	and	w8, w8, w9
  406ac0:	tbnz	w8, #0, 406974 <wcrtomb@plt+0x3d14>
  406ac4:	ldur	w22, [x29, #-12]
  406ac8:	ldr	w9, [sp, #12]
  406acc:	cmp	w0, w22
  406ad0:	cset	w8, eq  // eq = none
  406ad4:	and	w8, w8, w9
  406ad8:	tbnz	w8, #0, 406974 <wcrtomb@plt+0x3d14>
  406adc:	mov	w8, #0x26                  	// #38
  406ae0:	csel	w22, w0, w8, ne  // ne = any
  406ae4:	mov	w1, #0x5c                  	// #92
  406ae8:	mov	x0, x19
  406aec:	bl	40c198 <wcrtomb@plt+0x9538>
  406af0:	b	406974 <wcrtomb@plt+0x3d14>
  406af4:	ldr	x0, [x25, #1536]
  406af8:	cbz	x0, 406c30 <wcrtomb@plt+0x3fd0>
  406afc:	ldrb	w8, [x0]
  406b00:	tbnz	w8, #4, 406c30 <wcrtomb@plt+0x3fd0>
  406b04:	ldp	x8, x9, [x0, #8]
  406b08:	cmp	x8, x9
  406b0c:	b.cs	406bc8 <wcrtomb@plt+0x3f68>  // b.hs, b.nlast
  406b10:	add	x9, x8, #0x1
  406b14:	str	x9, [x0, #8]
  406b18:	ldrb	w22, [x8]
  406b1c:	cmp	w22, #0x5e
  406b20:	b.eq	406bd8 <wcrtomb@plt+0x3f78>  // b.none
  406b24:	cmp	w22, #0xa
  406b28:	b.ne	406b3c <wcrtomb@plt+0x3edc>  // b.any
  406b2c:	ldr	x8, [x26, #1312]
  406b30:	add	x8, x8, #0x1
  406b34:	str	x8, [x26, #1312]
  406b38:	b	406c34 <wcrtomb@plt+0x3fd4>
  406b3c:	cmp	w22, #0x5d
  406b40:	b.ne	406c34 <wcrtomb@plt+0x3fd4>  // b.any
  406b44:	mov	w1, #0x5d                  	// #93
  406b48:	mov	x0, x19
  406b4c:	bl	40c198 <wcrtomb@plt+0x9538>
  406b50:	ldr	x8, [x23, #1520]
  406b54:	cbz	x8, 406b70 <wcrtomb@plt+0x3f10>
  406b58:	ldr	x9, [x28, #1528]
  406b5c:	cmp	x8, x9
  406b60:	b.cs	406c30 <wcrtomb@plt+0x3fd0>  // b.hs, b.nlast
  406b64:	add	x9, x8, #0x1
  406b68:	str	x9, [x23, #1520]
  406b6c:	b	406b94 <wcrtomb@plt+0x3f34>
  406b70:	ldr	x0, [x25, #1536]
  406b74:	cbz	x0, 406c30 <wcrtomb@plt+0x3fd0>
  406b78:	ldrb	w8, [x0]
  406b7c:	tbnz	w8, #4, 406c30 <wcrtomb@plt+0x3fd0>
  406b80:	ldp	x8, x9, [x0, #8]
  406b84:	cmp	x8, x9
  406b88:	b.cs	406d90 <wcrtomb@plt+0x4130>  // b.hs, b.nlast
  406b8c:	add	x9, x8, #0x1
  406b90:	str	x9, [x0, #8]
  406b94:	ldrb	w22, [x8]
  406b98:	cmp	w22, #0xa
  406b9c:	b.eq	406b2c <wcrtomb@plt+0x3ecc>  // b.none
  406ba0:	b	406c34 <wcrtomb@plt+0x3fd4>
  406ba4:	bl	402c20 <__uflow@plt>
  406ba8:	mov	w22, w0
  406bac:	cmn	w22, #0x1
  406bb0:	b.ne	4069d0 <wcrtomb@plt+0x3d70>  // b.any
  406bb4:	b	406dfc <wcrtomb@plt+0x419c>
  406bb8:	bl	402c20 <__uflow@plt>
  406bbc:	cmp	w0, #0xa
  406bc0:	b.ne	406a94 <wcrtomb@plt+0x3e34>  // b.any
  406bc4:	b	406964 <wcrtomb@plt+0x3d04>
  406bc8:	bl	402c20 <__uflow@plt>
  406bcc:	mov	w22, w0
  406bd0:	cmp	w22, #0x5e
  406bd4:	b.ne	406b24 <wcrtomb@plt+0x3ec4>  // b.any
  406bd8:	mov	w1, #0x5e                  	// #94
  406bdc:	mov	x0, x19
  406be0:	bl	40c198 <wcrtomb@plt+0x9538>
  406be4:	ldr	x8, [x23, #1520]
  406be8:	cbz	x8, 406c04 <wcrtomb@plt+0x3fa4>
  406bec:	ldr	x9, [x28, #1528]
  406bf0:	cmp	x8, x9
  406bf4:	b.cs	406c30 <wcrtomb@plt+0x3fd0>  // b.hs, b.nlast
  406bf8:	add	x9, x8, #0x1
  406bfc:	str	x9, [x23, #1520]
  406c00:	b	406c28 <wcrtomb@plt+0x3fc8>
  406c04:	ldr	x0, [x25, #1536]
  406c08:	cbz	x0, 406c30 <wcrtomb@plt+0x3fd0>
  406c0c:	ldrb	w8, [x0]
  406c10:	tbnz	w8, #4, 406c30 <wcrtomb@plt+0x3fd0>
  406c14:	ldp	x8, x9, [x0, #8]
  406c18:	cmp	x8, x9
  406c1c:	b.cs	406d84 <wcrtomb@plt+0x4124>  // b.hs, b.nlast
  406c20:	add	x9, x8, #0x1
  406c24:	str	x9, [x0, #8]
  406c28:	ldrb	w22, [x8]
  406c2c:	b	406b24 <wcrtomb@plt+0x3ec4>
  406c30:	mov	w22, #0xffffffff            	// #-1
  406c34:	mov	w20, wzr
  406c38:	b	406c48 <wcrtomb@plt+0x3fe8>
  406c3c:	ldr	x8, [x26, #1312]
  406c40:	add	x8, x8, #0x1
  406c44:	str	x8, [x26, #1312]
  406c48:	ldr	w8, [x24, #2260]
  406c4c:	cmp	w8, #0x1
  406c50:	b.ne	406c5c <wcrtomb@plt+0x3ffc>  // b.any
  406c54:	mov	w0, wzr
  406c58:	b	406c68 <wcrtomb@plt+0x4008>
  406c5c:	sub	x1, x29, #0x8
  406c60:	mov	w0, w22
  406c64:	bl	40a520 <wcrtomb@plt+0x78c0>
  406c68:	sub	w8, w22, #0x2e
  406c6c:	cmp	w8, #0x2f
  406c70:	b.hi	406cd4 <wcrtomb@plt+0x4074>  // b.pmore
  406c74:	adr	x9, 406c84 <wcrtomb@plt+0x4024>
  406c78:	ldrb	w10, [x27, x8]
  406c7c:	add	x9, x9, x10, lsl #2
  406c80:	br	x9
  406c84:	cbnz	w0, 406cfc <wcrtomb@plt+0x409c>
  406c88:	cmp	w20, #0x1
  406c8c:	b.eq	406ce8 <wcrtomb@plt+0x4088>  // b.none
  406c90:	cmp	w20, #0x2
  406c94:	b.ne	406cf8 <wcrtomb@plt+0x4098>  // b.any
  406c98:	cmp	w22, w21
  406c9c:	b.ne	406cf4 <wcrtomb@plt+0x4094>  // b.any
  406ca0:	mov	w20, #0x3                   	// #3
  406ca4:	mov	w21, w22
  406ca8:	b	406cfc <wcrtomb@plt+0x409c>
  406cac:	cbnz	w0, 406cfc <wcrtomb@plt+0x409c>
  406cb0:	cmp	w20, #0x0
  406cb4:	csinc	w20, w20, wzr, ne  // ne = any
  406cb8:	b	406cfc <wcrtomb@plt+0x409c>
  406cbc:	cbnz	w0, 406cfc <wcrtomb@plt+0x409c>
  406cc0:	cmp	w20, #0x2
  406cc4:	b.cc	406d7c <wcrtomb@plt+0x411c>  // b.lo, b.ul, b.last
  406cc8:	cmp	w20, #0x3
  406ccc:	csel	w20, wzr, w20, eq  // eq = none
  406cd0:	b	406cf8 <wcrtomb@plt+0x4098>
  406cd4:	cmn	w22, #0x1
  406cd8:	b.eq	406dfc <wcrtomb@plt+0x419c>  // b.none
  406cdc:	cmp	w22, #0xa
  406ce0:	b.ne	406cf8 <wcrtomb@plt+0x4098>  // b.any
  406ce4:	b	406da4 <wcrtomb@plt+0x4144>
  406ce8:	mov	w20, #0x2                   	// #2
  406cec:	mov	w21, w22
  406cf0:	b	406cfc <wcrtomb@plt+0x409c>
  406cf4:	mov	w20, #0x2                   	// #2
  406cf8:	and	w20, w20, #0xfffffffe
  406cfc:	mov	x0, x19
  406d00:	mov	w1, w22
  406d04:	bl	40c198 <wcrtomb@plt+0x9538>
  406d08:	ldr	x8, [x23, #1520]
  406d0c:	cbz	x8, 406d2c <wcrtomb@plt+0x40cc>
  406d10:	ldr	x9, [x28, #1528]
  406d14:	mov	w22, #0xffffffff            	// #-1
  406d18:	cmp	x8, x9
  406d1c:	b.cs	406c48 <wcrtomb@plt+0x3fe8>  // b.hs, b.nlast
  406d20:	add	x9, x8, #0x1
  406d24:	str	x9, [x23, #1520]
  406d28:	b	406d58 <wcrtomb@plt+0x40f8>
  406d2c:	ldr	x0, [x25, #1536]
  406d30:	mov	w22, #0xffffffff            	// #-1
  406d34:	cbz	x0, 406c48 <wcrtomb@plt+0x3fe8>
  406d38:	ldrb	w8, [x0]
  406d3c:	mov	w22, #0xffffffff            	// #-1
  406d40:	tbnz	w8, #4, 406c48 <wcrtomb@plt+0x3fe8>
  406d44:	ldp	x8, x9, [x0, #8]
  406d48:	cmp	x8, x9
  406d4c:	b.cs	406d68 <wcrtomb@plt+0x4108>  // b.hs, b.nlast
  406d50:	add	x9, x8, #0x1
  406d54:	str	x9, [x0, #8]
  406d58:	ldrb	w22, [x8]
  406d5c:	cmp	w22, #0xa
  406d60:	b.ne	406c48 <wcrtomb@plt+0x3fe8>  // b.any
  406d64:	b	406c3c <wcrtomb@plt+0x3fdc>
  406d68:	bl	402c20 <__uflow@plt>
  406d6c:	mov	w22, w0
  406d70:	cmp	w22, #0xa
  406d74:	b.ne	406c48 <wcrtomb@plt+0x3fe8>  // b.any
  406d78:	b	406c3c <wcrtomb@plt+0x3fdc>
  406d7c:	mov	w22, #0x5d                  	// #93
  406d80:	b	406974 <wcrtomb@plt+0x3d14>
  406d84:	bl	402c20 <__uflow@plt>
  406d88:	mov	w22, w0
  406d8c:	b	406b24 <wcrtomb@plt+0x3ec4>
  406d90:	bl	402c20 <__uflow@plt>
  406d94:	mov	w22, w0
  406d98:	cmp	w22, #0xa
  406d9c:	b.eq	406b2c <wcrtomb@plt+0x3ecc>  // b.none
  406da0:	b	406c34 <wcrtomb@plt+0x3fd4>
  406da4:	ldr	x8, [x26, #1312]
  406da8:	cbz	x8, 406db4 <wcrtomb@plt+0x4154>
  406dac:	sub	x8, x8, #0x1
  406db0:	str	x8, [x26, #1312]
  406db4:	ldr	x8, [x23, #1520]
  406db8:	cbz	x8, 406df0 <wcrtomb@plt+0x4190>
  406dbc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  406dc0:	ldr	x9, [x9, #1512]
  406dc4:	cmp	x8, x9
  406dc8:	b.ls	406de0 <wcrtomb@plt+0x4180>  // b.plast
  406dcc:	sub	x9, x8, #0x1
  406dd0:	str	x9, [x23, #1520]
  406dd4:	ldurb	w8, [x8, #-1]
  406dd8:	cmp	w8, #0xa
  406ddc:	b.eq	406dfc <wcrtomb@plt+0x419c>  // b.none
  406de0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  406de4:	add	x0, x0, #0xd9d
  406de8:	mov	w1, #0xa                   	// #10
  406dec:	bl	40b53c <wcrtomb@plt+0x88dc>
  406df0:	ldr	x1, [x25, #1536]
  406df4:	mov	w0, #0xa                   	// #10
  406df8:	bl	402a20 <ungetc@plt>
  406dfc:	mov	x0, x19
  406e00:	bl	40c240 <wcrtomb@plt+0x95e0>
  406e04:	mov	x19, xzr
  406e08:	mov	x0, x19
  406e0c:	ldp	x20, x19, [sp, #112]
  406e10:	ldp	x22, x21, [sp, #96]
  406e14:	ldp	x24, x23, [sp, #80]
  406e18:	ldp	x26, x25, [sp, #64]
  406e1c:	ldp	x28, x27, [sp, #48]
  406e20:	ldp	x29, x30, [sp, #32]
  406e24:	add	sp, sp, #0x80
  406e28:	ret
  406e2c:	ldr	x8, [x26, #1312]
  406e30:	add	x8, x8, #0x1
  406e34:	str	x8, [x26, #1312]
  406e38:	cbnz	x8, 406dac <wcrtomb@plt+0x414c>
  406e3c:	b	406db4 <wcrtomb@plt+0x4154>
  406e40:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  406e44:	add	x0, x0, #0xaea
  406e48:	bl	402d7c <wcrtomb@plt+0x11c>
  406e4c:	stp	x29, x30, [sp, #-48]!
  406e50:	str	x21, [sp, #16]
  406e54:	stp	x20, x19, [sp, #32]
  406e58:	mov	x29, sp
  406e5c:	mov	w20, w0
  406e60:	bl	4029e0 <__ctype_b_loc@plt>
  406e64:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  406e68:	ldr	x8, [x21, #1272]
  406e6c:	and	w19, w20, #0xff
  406e70:	cmp	w19, #0x5c
  406e74:	ldp	x9, x10, [x8, #40]
  406e78:	b.eq	406ea4 <wcrtomb@plt+0x4244>  // b.none
  406e7c:	ldr	x11, [x0]
  406e80:	and	x12, x20, #0xff
  406e84:	ldrh	w11, [x11, x12, lsl #1]
  406e88:	tbz	w11, #14, 406ea4 <wcrtomb@plt+0x4244>
  406e8c:	cmp	x9, x10
  406e90:	b.cs	406fe4 <wcrtomb@plt+0x4384>  // b.hs, b.nlast
  406e94:	add	x10, x9, #0x1
  406e98:	str	x10, [x8, #40]
  406e9c:	strb	w20, [x9]
  406ea0:	b	406fd4 <wcrtomb@plt+0x4374>
  406ea4:	cmp	x9, x10
  406ea8:	b.cs	406ffc <wcrtomb@plt+0x439c>  // b.hs, b.nlast
  406eac:	add	x10, x9, #0x1
  406eb0:	mov	w11, #0x5c                  	// #92
  406eb4:	str	x10, [x8, #40]
  406eb8:	strb	w11, [x9]
  406ebc:	and	w9, w20, #0xff
  406ec0:	sub	w8, w9, #0x7
  406ec4:	cmp	w8, #0x6
  406ec8:	b.hi	406f00 <wcrtomb@plt+0x42a0>  // b.pmore
  406ecc:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xf5a8>
  406ed0:	add	x9, x9, #0xdee
  406ed4:	adr	x10, 406ee4 <wcrtomb@plt+0x4284>
  406ed8:	ldrb	w11, [x9, x8]
  406edc:	add	x10, x10, x11, lsl #2
  406ee0:	br	x10
  406ee4:	ldr	x0, [x21, #1272]
  406ee8:	ldp	x8, x9, [x0, #40]
  406eec:	cmp	x8, x9
  406ef0:	b.cs	40700c <wcrtomb@plt+0x43ac>  // b.hs, b.nlast
  406ef4:	add	x9, x8, #0x1
  406ef8:	mov	w10, #0x61                  	// #97
  406efc:	b	406fcc <wcrtomb@plt+0x436c>
  406f00:	cmp	w9, #0x5c
  406f04:	b.ne	406f24 <wcrtomb@plt+0x42c4>  // b.any
  406f08:	ldr	x0, [x21, #1272]
  406f0c:	ldp	x8, x9, [x0, #40]
  406f10:	cmp	x8, x9
  406f14:	b.cs	40703c <wcrtomb@plt+0x43dc>  // b.hs, b.nlast
  406f18:	add	x9, x8, #0x1
  406f1c:	mov	w10, #0x5c                  	// #92
  406f20:	b	406fcc <wcrtomb@plt+0x436c>
  406f24:	mov	w2, w19
  406f28:	ldp	x20, x19, [sp, #32]
  406f2c:	ldr	x21, [sp, #16]
  406f30:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  406f34:	add	x1, x1, #0xeb3
  406f38:	mov	w0, #0x1                   	// #1
  406f3c:	ldp	x29, x30, [sp], #48
  406f40:	b	4027e0 <__printf_chk@plt>
  406f44:	ldr	x0, [x21, #1272]
  406f48:	ldp	x8, x9, [x0, #40]
  406f4c:	cmp	x8, x9
  406f50:	b.cs	407014 <wcrtomb@plt+0x43b4>  // b.hs, b.nlast
  406f54:	add	x9, x8, #0x1
  406f58:	mov	w10, #0x74                  	// #116
  406f5c:	b	406fcc <wcrtomb@plt+0x436c>
  406f60:	ldr	x0, [x21, #1272]
  406f64:	ldp	x8, x9, [x0, #40]
  406f68:	cmp	x8, x9
  406f6c:	b.cs	40701c <wcrtomb@plt+0x43bc>  // b.hs, b.nlast
  406f70:	add	x9, x8, #0x1
  406f74:	mov	w10, #0x6e                  	// #110
  406f78:	b	406fcc <wcrtomb@plt+0x436c>
  406f7c:	ldr	x0, [x21, #1272]
  406f80:	ldp	x8, x9, [x0, #40]
  406f84:	cmp	x8, x9
  406f88:	b.cs	407024 <wcrtomb@plt+0x43c4>  // b.hs, b.nlast
  406f8c:	add	x9, x8, #0x1
  406f90:	mov	w10, #0x76                  	// #118
  406f94:	b	406fcc <wcrtomb@plt+0x436c>
  406f98:	ldr	x0, [x21, #1272]
  406f9c:	ldp	x8, x9, [x0, #40]
  406fa0:	cmp	x8, x9
  406fa4:	b.cs	40702c <wcrtomb@plt+0x43cc>  // b.hs, b.nlast
  406fa8:	add	x9, x8, #0x1
  406fac:	mov	w10, #0x66                  	// #102
  406fb0:	b	406fcc <wcrtomb@plt+0x436c>
  406fb4:	ldr	x0, [x21, #1272]
  406fb8:	ldp	x8, x9, [x0, #40]
  406fbc:	cmp	x8, x9
  406fc0:	b.cs	407034 <wcrtomb@plt+0x43d4>  // b.hs, b.nlast
  406fc4:	add	x9, x8, #0x1
  406fc8:	mov	w10, #0x72                  	// #114
  406fcc:	str	x9, [x0, #40]
  406fd0:	strb	w10, [x8]
  406fd4:	ldp	x20, x19, [sp, #32]
  406fd8:	ldr	x21, [sp, #16]
  406fdc:	ldp	x29, x30, [sp], #48
  406fe0:	ret
  406fe4:	mov	x0, x8
  406fe8:	mov	w1, w19
  406fec:	ldp	x20, x19, [sp, #32]
  406ff0:	ldr	x21, [sp, #16]
  406ff4:	ldp	x29, x30, [sp], #48
  406ff8:	b	402960 <__overflow@plt>
  406ffc:	mov	w1, #0x5c                  	// #92
  407000:	mov	x0, x8
  407004:	bl	402960 <__overflow@plt>
  407008:	b	406ebc <wcrtomb@plt+0x425c>
  40700c:	mov	w1, #0x61                  	// #97
  407010:	b	406fec <wcrtomb@plt+0x438c>
  407014:	mov	w1, #0x74                  	// #116
  407018:	b	406fec <wcrtomb@plt+0x438c>
  40701c:	mov	w1, #0x6e                  	// #110
  407020:	b	406fec <wcrtomb@plt+0x438c>
  407024:	mov	w1, #0x76                  	// #118
  407028:	b	406fec <wcrtomb@plt+0x438c>
  40702c:	mov	w1, #0x66                  	// #102
  407030:	b	406fec <wcrtomb@plt+0x438c>
  407034:	mov	w1, #0x72                  	// #114
  407038:	b	406fec <wcrtomb@plt+0x438c>
  40703c:	mov	w1, #0x5c                  	// #92
  407040:	b	406fec <wcrtomb@plt+0x438c>
  407044:	stp	x29, x30, [sp, #-96]!
  407048:	stp	x28, x27, [sp, #16]
  40704c:	stp	x26, x25, [sp, #32]
  407050:	stp	x24, x23, [sp, #48]
  407054:	stp	x22, x21, [sp, #64]
  407058:	stp	x20, x19, [sp, #80]
  40705c:	mov	x29, sp
  407060:	cbz	x0, 4071e4 <wcrtomb@plt+0x4584>
  407064:	ldrb	w9, [x1, #21]
  407068:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40706c:	ldr	w8, [x22, #1544]
  407070:	mov	x19, x1
  407074:	mov	x20, x0
  407078:	cmp	w9, #0x7d
  40707c:	b.ne	407088 <wcrtomb@plt+0x4428>  // b.any
  407080:	sub	w8, w8, #0x1
  407084:	str	w8, [x22, #1544]
  407088:	cmp	w8, #0x1
  40708c:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  407090:	b.lt	4070bc <wcrtomb@plt+0x445c>  // b.tstop
  407094:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x105a8>
  407098:	mov	w24, wzr
  40709c:	add	x21, x21, #0xd2
  4070a0:	ldr	x1, [x23, #1272]
  4070a4:	mov	x0, x21
  4070a8:	bl	402b50 <fputs_unlocked@plt>
  4070ac:	ldr	w8, [x22, #1544]
  4070b0:	add	w24, w24, #0x1
  4070b4:	cmp	w24, w8
  4070b8:	b.lt	4070a0 <wcrtomb@plt+0x4440>  // b.tstop
  4070bc:	ldr	x0, [x19]
  4070c0:	bl	407940 <wcrtomb@plt+0x4ce0>
  4070c4:	ldr	x8, [x19, #8]
  4070c8:	cbz	x8, 4070ec <wcrtomb@plt+0x448c>
  4070cc:	ldr	x0, [x23, #1272]
  4070d0:	ldp	x8, x9, [x0, #40]
  4070d4:	cmp	x8, x9
  4070d8:	b.cs	407734 <wcrtomb@plt+0x4ad4>  // b.hs, b.nlast
  4070dc:	add	x9, x8, #0x1
  4070e0:	mov	w10, #0x2c                  	// #44
  4070e4:	str	x9, [x0, #40]
  4070e8:	strb	w10, [x8]
  4070ec:	ldr	x0, [x19, #8]
  4070f0:	bl	407940 <wcrtomb@plt+0x4ce0>
  4070f4:	ldrb	w8, [x19, #20]
  4070f8:	ldrb	w9, [x19, #21]
  4070fc:	cmp	w8, #0x0
  407100:	cset	w8, ne  // ne = any
  407104:	cmp	w9, #0x7b
  407108:	cset	w9, eq  // eq = none
  40710c:	cmp	w8, w9
  407110:	b.eq	407134 <wcrtomb@plt+0x44d4>  // b.none
  407114:	ldr	x0, [x23, #1272]
  407118:	ldp	x8, x9, [x0, #40]
  40711c:	cmp	x8, x9
  407120:	b.cs	407740 <wcrtomb@plt+0x4ae0>  // b.hs, b.nlast
  407124:	add	x9, x8, #0x1
  407128:	mov	w10, #0x21                  	// #33
  40712c:	str	x9, [x0, #40]
  407130:	strb	w10, [x8]
  407134:	ldr	x8, [x19]
  407138:	cbnz	x8, 407144 <wcrtomb@plt+0x44e4>
  40713c:	ldr	x8, [x19, #8]
  407140:	cbz	x8, 407164 <wcrtomb@plt+0x4504>
  407144:	ldr	x0, [x23, #1272]
  407148:	ldp	x8, x9, [x0, #40]
  40714c:	cmp	x8, x9
  407150:	b.cs	407728 <wcrtomb@plt+0x4ac8>  // b.hs, b.nlast
  407154:	add	x9, x8, #0x1
  407158:	mov	w10, #0x20                  	// #32
  40715c:	str	x9, [x0, #40]
  407160:	strb	w10, [x8]
  407164:	ldr	x0, [x23, #1272]
  407168:	ldrb	w1, [x19, #21]
  40716c:	ldp	x8, x9, [x0, #40]
  407170:	cmp	x8, x9
  407174:	b.cs	407714 <wcrtomb@plt+0x4ab4>  // b.hs, b.nlast
  407178:	add	x9, x8, #0x1
  40717c:	str	x9, [x0, #40]
  407180:	strb	w1, [x8]
  407184:	ldrb	w8, [x19, #21]
  407188:	sub	w8, w8, #0x23
  40718c:	cmp	w8, #0x5a
  407190:	b.hi	4078e0 <wcrtomb@plt+0x4c80>  // b.pmore
  407194:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407198:	add	x9, x9, #0xdf6
  40719c:	adr	x10, 4071ac <wcrtomb@plt+0x454c>
  4071a0:	ldrh	w11, [x9, x8, lsl #1]
  4071a4:	add	x10, x10, x11, lsl #2
  4071a8:	br	x10
  4071ac:	ldr	x0, [x23, #1272]
  4071b0:	ldp	x8, x9, [x0, #40]
  4071b4:	cmp	x8, x9
  4071b8:	b.cs	40771c <wcrtomb@plt+0x4abc>  // b.hs, b.nlast
  4071bc:	add	x9, x8, #0x1
  4071c0:	mov	w10, #0xa                   	// #10
  4071c4:	str	x9, [x0, #40]
  4071c8:	strb	w10, [x8]
  4071cc:	ldrb	w8, [x19, #21]
  4071d0:	cmp	w8, #0x7b
  4071d4:	b.ne	4071e4 <wcrtomb@plt+0x4584>  // b.any
  4071d8:	ldr	w8, [x22, #1544]
  4071dc:	add	w8, w8, #0x1
  4071e0:	str	w8, [x22, #1544]
  4071e4:	ldp	x20, x19, [sp, #80]
  4071e8:	ldp	x22, x21, [sp, #64]
  4071ec:	ldp	x24, x23, [sp, #48]
  4071f0:	ldp	x26, x25, [sp, #32]
  4071f4:	ldp	x28, x27, [sp, #16]
  4071f8:	ldp	x29, x30, [sp], #96
  4071fc:	ret
  407200:	ldr	w2, [x19, #24]
  407204:	cmn	w2, #0x1
  407208:	b.eq	4071ac <wcrtomb@plt+0x454c>  // b.none
  40720c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  407210:	add	x1, x1, #0x1d9
  407214:	mov	w0, #0x1                   	// #1
  407218:	bl	4027e0 <__printf_chk@plt>
  40721c:	b	4071ac <wcrtomb@plt+0x454c>
  407220:	ldr	x8, [x19, #24]
  407224:	ldr	x9, [x20, #16]
  407228:	cmp	x8, x9
  40722c:	b.cs	4071ac <wcrtomb@plt+0x454c>  // b.hs, b.nlast
  407230:	ldr	x9, [x20]
  407234:	mov	w10, #0x28                  	// #40
  407238:	madd	x8, x8, x10, x9
  40723c:	ldr	x2, [x8, #24]
  407240:	cbz	x2, 4071ac <wcrtomb@plt+0x454c>
  407244:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  407248:	add	x1, x1, #0xe60
  40724c:	b	4072e8 <wcrtomb@plt+0x4688>
  407250:	ldr	x1, [x23, #1272]
  407254:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407258:	add	x0, x0, #0xf3a
  40725c:	bl	402b50 <fputs_unlocked@plt>
  407260:	ldr	x2, [x19, #32]
  407264:	cbz	x2, 4071ac <wcrtomb@plt+0x454c>
  407268:	ldr	x3, [x23, #1272]
  40726c:	ldr	x0, [x19, #24]
  407270:	b	4072a8 <wcrtomb@plt+0x4648>
  407274:	ldr	x8, [x19, #24]
  407278:	cbnz	x8, 4073e8 <wcrtomb@plt+0x4788>
  40727c:	b	4071ac <wcrtomb@plt+0x454c>
  407280:	ldr	x0, [x23, #1272]
  407284:	ldp	x8, x9, [x0, #40]
  407288:	cmp	x8, x9
  40728c:	b.cs	407754 <wcrtomb@plt+0x4af4>  // b.hs, b.nlast
  407290:	add	x9, x8, #0x1
  407294:	mov	w10, #0x20                  	// #32
  407298:	str	x9, [x0, #40]
  40729c:	strb	w10, [x8]
  4072a0:	ldp	x0, x2, [x19, #24]
  4072a4:	ldr	x3, [x23, #1272]
  4072a8:	mov	w1, #0x1                   	// #1
  4072ac:	bl	4025b0 <fwrite_unlocked@plt>
  4072b0:	b	4071ac <wcrtomb@plt+0x454c>
  4072b4:	ldr	x0, [x23, #1272]
  4072b8:	ldp	x8, x9, [x0, #40]
  4072bc:	cmp	x8, x9
  4072c0:	b.cs	407760 <wcrtomb@plt+0x4b00>  // b.hs, b.nlast
  4072c4:	add	x9, x8, #0x1
  4072c8:	mov	w10, #0x20                  	// #32
  4072cc:	str	x9, [x0, #40]
  4072d0:	strb	w10, [x8]
  4072d4:	ldr	x0, [x19, #24]
  4072d8:	b	4073ec <wcrtomb@plt+0x478c>
  4072dc:	ldr	x2, [x19, #24]
  4072e0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  4072e4:	add	x1, x1, #0xe61
  4072e8:	mov	w0, #0x1                   	// #1
  4072ec:	bl	4027e0 <__printf_chk@plt>
  4072f0:	b	4071ac <wcrtomb@plt+0x454c>
  4072f4:	ldr	x0, [x23, #1272]
  4072f8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4072fc:	ldr	w20, [x10, #2260]
  407300:	ldp	x8, x9, [x0, #40]
  407304:	cmp	x8, x9
  407308:	b.cs	40776c <wcrtomb@plt+0x4b0c>  // b.hs, b.nlast
  40730c:	add	x9, x8, #0x1
  407310:	mov	w10, #0x2f                  	// #47
  407314:	str	x9, [x0, #40]
  407318:	strb	w10, [x8]
  40731c:	cmp	w20, #0x1
  407320:	b.le	40777c <wcrtomb@plt+0x4b1c>
  407324:	ldr	x8, [x19, #24]
  407328:	ldr	x0, [x8]
  40732c:	ldr	x8, [x23, #1272]
  407330:	cbz	x0, 407354 <wcrtomb@plt+0x46f4>
  407334:	mov	w20, #0x2                   	// #2
  407338:	mov	x1, x8
  40733c:	bl	402b50 <fputs_unlocked@plt>
  407340:	ldr	x8, [x19, #24]
  407344:	ldr	x0, [x8, w20, uxtw #3]
  407348:	ldr	x8, [x23, #1272]
  40734c:	add	w20, w20, #0x2
  407350:	cbnz	x0, 407338 <wcrtomb@plt+0x46d8>
  407354:	ldp	x9, x10, [x8, #40]
  407358:	cmp	x9, x10
  40735c:	b.cs	40785c <wcrtomb@plt+0x4bfc>  // b.hs, b.nlast
  407360:	add	x10, x9, #0x1
  407364:	mov	w11, #0x2f                  	// #47
  407368:	str	x10, [x8, #40]
  40736c:	strb	w11, [x9]
  407370:	ldr	x8, [x19, #24]
  407374:	ldr	x9, [x8]
  407378:	cbz	x9, 4073a0 <wcrtomb@plt+0x4740>
  40737c:	mov	w20, #0x1                   	// #1
  407380:	ldr	x0, [x8, w20, uxtw #3]
  407384:	ldr	x1, [x23, #1272]
  407388:	bl	402b50 <fputs_unlocked@plt>
  40738c:	ldr	x8, [x19, #24]
  407390:	add	w9, w20, #0x1
  407394:	add	w20, w20, #0x2
  407398:	ldr	x9, [x8, w9, uxtw #3]
  40739c:	cbnz	x9, 407380 <wcrtomb@plt+0x4720>
  4073a0:	ldr	x0, [x23, #1272]
  4073a4:	ldp	x8, x9, [x0, #40]
  4073a8:	cmp	x8, x9
  4073ac:	b.cs	40783c <wcrtomb@plt+0x4bdc>  // b.hs, b.nlast
  4073b0:	add	x9, x8, #0x1
  4073b4:	mov	w10, #0x2f                  	// #47
  4073b8:	str	x9, [x0, #40]
  4073bc:	strb	w10, [x8]
  4073c0:	b	4071ac <wcrtomb@plt+0x454c>
  4073c4:	ldr	x0, [x23, #1272]
  4073c8:	ldp	x8, x9, [x0, #40]
  4073cc:	cmp	x8, x9
  4073d0:	b.cs	407830 <wcrtomb@plt+0x4bd0>  // b.hs, b.nlast
  4073d4:	add	x9, x8, #0x1
  4073d8:	mov	w10, #0x20                  	// #32
  4073dc:	str	x9, [x0, #40]
  4073e0:	strb	w10, [x8]
  4073e4:	ldr	x8, [x19, #24]
  4073e8:	ldr	x0, [x8]
  4073ec:	ldr	x1, [x23, #1272]
  4073f0:	bl	402b50 <fputs_unlocked@plt>
  4073f4:	b	4071ac <wcrtomb@plt+0x454c>
  4073f8:	ldr	x21, [x19, #24]
  4073fc:	cbz	x21, 4071ac <wcrtomb@plt+0x454c>
  407400:	ldr	x0, [x21]
  407404:	bl	407b24 <wcrtomb@plt+0x4ec4>
  407408:	ldr	x24, [x21, #8]
  40740c:	cbz	x24, 4075d4 <wcrtomb@plt+0x4974>
  407410:	adrp	x20, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407414:	mov	w28, wzr
  407418:	mov	w25, #0x26                  	// #38
  40741c:	add	x20, x20, #0xf3c
  407420:	mov	w26, #0x5c                  	// #92
  407424:	mov	w27, #0x45                  	// #69
  407428:	b	407440 <wcrtomb@plt+0x47e0>
  40742c:	mov	w0, #0x1                   	// #1
  407430:	mov	x1, x20
  407434:	bl	4027e0 <__printf_chk@plt>
  407438:	ldr	x24, [x24, #24]
  40743c:	cbz	x24, 4075d4 <wcrtomb@plt+0x4974>
  407440:	ldr	w8, [x24, #20]
  407444:	cmp	w8, w28
  407448:	b.eq	407538 <wcrtomb@plt+0x48d8>  // b.none
  40744c:	ldr	x0, [x23, #1272]
  407450:	ldp	x8, x9, [x0, #40]
  407454:	cmp	x8, x9
  407458:	b.cs	407580 <wcrtomb@plt+0x4920>  // b.hs, b.nlast
  40745c:	add	x9, x8, #0x1
  407460:	str	x9, [x0, #40]
  407464:	strb	w26, [x8]
  407468:	ldr	w8, [x24, #20]
  40746c:	cmp	w8, #0x2
  407470:	b.eq	4074a0 <wcrtomb@plt+0x4840>  // b.none
  407474:	cmp	w8, #0x1
  407478:	b.eq	4074c0 <wcrtomb@plt+0x4860>  // b.none
  40747c:	cbnz	w8, 4074e0 <wcrtomb@plt+0x4880>
  407480:	ldr	x0, [x23, #1272]
  407484:	ldp	x8, x9, [x0, #40]
  407488:	cmp	x8, x9
  40748c:	b.cs	407598 <wcrtomb@plt+0x4938>  // b.hs, b.nlast
  407490:	add	x9, x8, #0x1
  407494:	str	x9, [x0, #40]
  407498:	strb	w27, [x8]
  40749c:	b	407534 <wcrtomb@plt+0x48d4>
  4074a0:	ldr	x0, [x23, #1272]
  4074a4:	ldp	x8, x9, [x0, #40]
  4074a8:	cmp	x8, x9
  4074ac:	b.cs	4075a4 <wcrtomb@plt+0x4944>  // b.hs, b.nlast
  4074b0:	add	x9, x8, #0x1
  4074b4:	str	x9, [x0, #40]
  4074b8:	mov	w9, #0x4c                  	// #76
  4074bc:	b	407530 <wcrtomb@plt+0x48d0>
  4074c0:	ldr	x0, [x23, #1272]
  4074c4:	ldp	x8, x9, [x0, #40]
  4074c8:	cmp	x8, x9
  4074cc:	b.cs	4075b0 <wcrtomb@plt+0x4950>  // b.hs, b.nlast
  4074d0:	add	x9, x8, #0x1
  4074d4:	str	x9, [x0, #40]
  4074d8:	mov	w9, #0x55                  	// #85
  4074dc:	b	407530 <wcrtomb@plt+0x48d0>
  4074e0:	and	w8, w8, #0xc
  4074e4:	cmp	w8, #0x8
  4074e8:	b.eq	407514 <wcrtomb@plt+0x48b4>  // b.none
  4074ec:	cmp	w8, #0x4
  4074f0:	b.ne	407534 <wcrtomb@plt+0x48d4>  // b.any
  4074f4:	ldr	x0, [x23, #1272]
  4074f8:	ldp	x8, x9, [x0, #40]
  4074fc:	cmp	x8, x9
  407500:	b.cs	4075bc <wcrtomb@plt+0x495c>  // b.hs, b.nlast
  407504:	add	x9, x8, #0x1
  407508:	str	x9, [x0, #40]
  40750c:	mov	w9, #0x75                  	// #117
  407510:	b	407530 <wcrtomb@plt+0x48d0>
  407514:	ldr	x0, [x23, #1272]
  407518:	ldp	x8, x9, [x0, #40]
  40751c:	cmp	x8, x9
  407520:	b.cs	4075c8 <wcrtomb@plt+0x4968>  // b.hs, b.nlast
  407524:	add	x9, x8, #0x1
  407528:	str	x9, [x0, #40]
  40752c:	mov	w9, #0x6c                  	// #108
  407530:	strb	w9, [x8]
  407534:	ldr	w28, [x24, #20]
  407538:	ldr	x2, [x24, #8]
  40753c:	cbz	x2, 407550 <wcrtomb@plt+0x48f0>
  407540:	ldr	x3, [x23, #1272]
  407544:	ldr	x0, [x24]
  407548:	mov	w1, #0x1                   	// #1
  40754c:	bl	4025b0 <fwrite_unlocked@plt>
  407550:	ldr	w2, [x24, #16]
  407554:	cmn	w2, #0x1
  407558:	b.eq	407438 <wcrtomb@plt+0x47d8>  // b.none
  40755c:	cbnz	w2, 40742c <wcrtomb@plt+0x47cc>
  407560:	ldr	x0, [x23, #1272]
  407564:	ldp	x8, x9, [x0, #40]
  407568:	cmp	x8, x9
  40756c:	b.cs	40758c <wcrtomb@plt+0x492c>  // b.hs, b.nlast
  407570:	add	x9, x8, #0x1
  407574:	str	x9, [x0, #40]
  407578:	strb	w25, [x8]
  40757c:	b	407438 <wcrtomb@plt+0x47d8>
  407580:	mov	w1, #0x5c                  	// #92
  407584:	bl	402960 <__overflow@plt>
  407588:	b	407468 <wcrtomb@plt+0x4808>
  40758c:	mov	w1, #0x26                  	// #38
  407590:	bl	402960 <__overflow@plt>
  407594:	b	407438 <wcrtomb@plt+0x47d8>
  407598:	mov	w1, #0x45                  	// #69
  40759c:	bl	402960 <__overflow@plt>
  4075a0:	b	407534 <wcrtomb@plt+0x48d4>
  4075a4:	mov	w1, #0x4c                  	// #76
  4075a8:	bl	402960 <__overflow@plt>
  4075ac:	b	407534 <wcrtomb@plt+0x48d4>
  4075b0:	mov	w1, #0x55                  	// #85
  4075b4:	bl	402960 <__overflow@plt>
  4075b8:	b	407534 <wcrtomb@plt+0x48d4>
  4075bc:	mov	w1, #0x75                  	// #117
  4075c0:	bl	402960 <__overflow@plt>
  4075c4:	b	407534 <wcrtomb@plt+0x48d4>
  4075c8:	mov	w1, #0x6c                  	// #108
  4075cc:	bl	402960 <__overflow@plt>
  4075d0:	b	407534 <wcrtomb@plt+0x48d4>
  4075d4:	ldr	x0, [x23, #1272]
  4075d8:	ldp	x8, x9, [x0, #40]
  4075dc:	cmp	x8, x9
  4075e0:	b.cs	407848 <wcrtomb@plt+0x4be8>  // b.hs, b.nlast
  4075e4:	add	x9, x8, #0x1
  4075e8:	mov	w10, #0x2f                  	// #47
  4075ec:	str	x9, [x0, #40]
  4075f0:	strb	w10, [x8]
  4075f4:	ldr	x20, [x21]
  4075f8:	cbz	x20, 40764c <wcrtomb@plt+0x49ec>
  4075fc:	ldrb	w8, [x20, #64]
  407600:	tbz	w8, #1, 407624 <wcrtomb@plt+0x49c4>
  407604:	ldr	x0, [x23, #1272]
  407608:	ldp	x8, x9, [x0, #40]
  40760c:	cmp	x8, x9
  407610:	b.cs	4078c0 <wcrtomb@plt+0x4c60>  // b.hs, b.nlast
  407614:	add	x9, x8, #0x1
  407618:	mov	w10, #0x69                  	// #105
  40761c:	str	x9, [x0, #40]
  407620:	strb	w10, [x8]
  407624:	ldrb	w8, [x20, #64]
  407628:	tbz	w8, #2, 40764c <wcrtomb@plt+0x49ec>
  40762c:	ldr	x0, [x23, #1272]
  407630:	ldp	x8, x9, [x0, #40]
  407634:	cmp	x8, x9
  407638:	b.cs	4078d4 <wcrtomb@plt+0x4c74>  // b.hs, b.nlast
  40763c:	add	x9, x8, #0x1
  407640:	mov	w10, #0x6d                  	// #109
  407644:	str	x9, [x0, #40]
  407648:	strb	w10, [x8]
  40764c:	ldrb	w8, [x21, #32]
  407650:	tbz	w8, #0, 407674 <wcrtomb@plt+0x4a14>
  407654:	ldr	x0, [x23, #1272]
  407658:	ldp	x8, x9, [x0, #40]
  40765c:	cmp	x8, x9
  407660:	b.cs	4078a0 <wcrtomb@plt+0x4c40>  // b.hs, b.nlast
  407664:	add	x9, x8, #0x1
  407668:	mov	w10, #0x67                  	// #103
  40766c:	str	x9, [x0, #40]
  407670:	strb	w10, [x8]
  407674:	ldrb	w8, [x21, #32]
  407678:	tbz	w8, #3, 40769c <wcrtomb@plt+0x4a3c>
  40767c:	ldr	x0, [x23, #1272]
  407680:	ldp	x8, x9, [x0, #40]
  407684:	cmp	x8, x9
  407688:	b.cs	4078b4 <wcrtomb@plt+0x4c54>  // b.hs, b.nlast
  40768c:	add	x9, x8, #0x1
  407690:	mov	w10, #0x65                  	// #101
  407694:	str	x9, [x0, #40]
  407698:	strb	w10, [x8]
  40769c:	ldrb	w8, [x21, #32]
  4076a0:	tst	w8, #0x6
  4076a4:	b.eq	4076c8 <wcrtomb@plt+0x4a68>  // b.none
  4076a8:	ldr	x0, [x23, #1272]
  4076ac:	ldp	x8, x9, [x0, #40]
  4076b0:	cmp	x8, x9
  4076b4:	b.cs	407878 <wcrtomb@plt+0x4c18>  // b.hs, b.nlast
  4076b8:	add	x9, x8, #0x1
  4076bc:	mov	w10, #0x70                  	// #112
  4076c0:	str	x9, [x0, #40]
  4076c4:	strb	w10, [x8]
  4076c8:	ldr	x2, [x21, #16]
  4076cc:	cbz	x2, 4076e0 <wcrtomb@plt+0x4a80>
  4076d0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4076d4:	add	x1, x1, #0xedb
  4076d8:	mov	w0, #0x1                   	// #1
  4076dc:	bl	4027e0 <__printf_chk@plt>
  4076e0:	ldr	x8, [x21, #24]
  4076e4:	cbz	x8, 4071ac <wcrtomb@plt+0x454c>
  4076e8:	ldr	x0, [x23, #1272]
  4076ec:	ldp	x8, x9, [x0, #40]
  4076f0:	cmp	x8, x9
  4076f4:	b.cs	40788c <wcrtomb@plt+0x4c2c>  // b.hs, b.nlast
  4076f8:	add	x9, x8, #0x1
  4076fc:	mov	w10, #0x77                  	// #119
  407700:	str	x9, [x0, #40]
  407704:	strb	w10, [x8]
  407708:	ldr	x8, [x21, #24]
  40770c:	cbnz	x8, 4073e8 <wcrtomb@plt+0x4788>
  407710:	b	4071ac <wcrtomb@plt+0x454c>
  407714:	bl	402960 <__overflow@plt>
  407718:	b	407184 <wcrtomb@plt+0x4524>
  40771c:	mov	w1, #0xa                   	// #10
  407720:	bl	402960 <__overflow@plt>
  407724:	b	4071cc <wcrtomb@plt+0x456c>
  407728:	mov	w1, #0x20                  	// #32
  40772c:	bl	402960 <__overflow@plt>
  407730:	b	407164 <wcrtomb@plt+0x4504>
  407734:	mov	w1, #0x2c                  	// #44
  407738:	bl	402960 <__overflow@plt>
  40773c:	b	4070ec <wcrtomb@plt+0x448c>
  407740:	mov	w1, #0x21                  	// #33
  407744:	bl	402960 <__overflow@plt>
  407748:	ldr	x8, [x19]
  40774c:	cbnz	x8, 407144 <wcrtomb@plt+0x44e4>
  407750:	b	40713c <wcrtomb@plt+0x44dc>
  407754:	mov	w1, #0x20                  	// #32
  407758:	bl	402960 <__overflow@plt>
  40775c:	b	4072a0 <wcrtomb@plt+0x4640>
  407760:	mov	w1, #0x20                  	// #32
  407764:	bl	402960 <__overflow@plt>
  407768:	b	4072d4 <wcrtomb@plt+0x4674>
  40776c:	mov	w1, #0x2f                  	// #47
  407770:	bl	402960 <__overflow@plt>
  407774:	cmp	w20, #0x1
  407778:	b.gt	407324 <wcrtomb@plt+0x46c4>
  40777c:	mov	x20, xzr
  407780:	b	40779c <wcrtomb@plt+0x4b3c>
  407784:	add	x9, x8, #0x1
  407788:	str	x9, [x0, #40]
  40778c:	strb	w20, [x8]
  407790:	add	x20, x20, #0x1
  407794:	cmp	x20, #0x100
  407798:	b.eq	4077c8 <wcrtomb@plt+0x4b68>  // b.none
  40779c:	ldr	x8, [x19, #24]
  4077a0:	ldrb	w8, [x8, x20]
  4077a4:	cmp	w8, w20, uxtb
  4077a8:	b.eq	407790 <wcrtomb@plt+0x4b30>  // b.none
  4077ac:	ldr	x0, [x23, #1272]
  4077b0:	ldp	x8, x9, [x0, #40]
  4077b4:	cmp	x8, x9
  4077b8:	b.cc	407784 <wcrtomb@plt+0x4b24>  // b.lo, b.ul, b.last
  4077bc:	mov	w1, w20
  4077c0:	bl	402960 <__overflow@plt>
  4077c4:	b	407790 <wcrtomb@plt+0x4b30>
  4077c8:	ldr	x0, [x23, #1272]
  4077cc:	ldp	x8, x9, [x0, #40]
  4077d0:	cmp	x8, x9
  4077d4:	b.cs	40786c <wcrtomb@plt+0x4c0c>  // b.hs, b.nlast
  4077d8:	add	x9, x8, #0x1
  4077dc:	mov	w10, #0x2f                  	// #47
  4077e0:	str	x9, [x0, #40]
  4077e4:	strb	w10, [x8]
  4077e8:	mov	x20, xzr
  4077ec:	b	407808 <wcrtomb@plt+0x4ba8>
  4077f0:	add	x9, x8, #0x1
  4077f4:	str	x9, [x0, #40]
  4077f8:	strb	w1, [x8]
  4077fc:	add	x20, x20, #0x1
  407800:	cmp	x20, #0x100
  407804:	b.eq	4073a0 <wcrtomb@plt+0x4740>  // b.none
  407808:	ldr	x8, [x19, #24]
  40780c:	ldrb	w1, [x8, x20]
  407810:	cmp	x20, x1
  407814:	b.eq	4077fc <wcrtomb@plt+0x4b9c>  // b.none
  407818:	ldr	x0, [x23, #1272]
  40781c:	ldp	x8, x9, [x0, #40]
  407820:	cmp	x8, x9
  407824:	b.cc	4077f0 <wcrtomb@plt+0x4b90>  // b.lo, b.ul, b.last
  407828:	bl	402960 <__overflow@plt>
  40782c:	b	4077fc <wcrtomb@plt+0x4b9c>
  407830:	mov	w1, #0x20                  	// #32
  407834:	bl	402960 <__overflow@plt>
  407838:	b	4073e4 <wcrtomb@plt+0x4784>
  40783c:	mov	w1, #0x2f                  	// #47
  407840:	bl	402960 <__overflow@plt>
  407844:	b	4071ac <wcrtomb@plt+0x454c>
  407848:	mov	w1, #0x2f                  	// #47
  40784c:	bl	402960 <__overflow@plt>
  407850:	ldr	x20, [x21]
  407854:	cbnz	x20, 4075fc <wcrtomb@plt+0x499c>
  407858:	b	40764c <wcrtomb@plt+0x49ec>
  40785c:	mov	w1, #0x2f                  	// #47
  407860:	mov	x0, x8
  407864:	bl	402960 <__overflow@plt>
  407868:	b	407370 <wcrtomb@plt+0x4710>
  40786c:	mov	w1, #0x2f                  	// #47
  407870:	bl	402960 <__overflow@plt>
  407874:	b	4077e8 <wcrtomb@plt+0x4b88>
  407878:	mov	w1, #0x70                  	// #112
  40787c:	bl	402960 <__overflow@plt>
  407880:	ldr	x2, [x21, #16]
  407884:	cbnz	x2, 4076d0 <wcrtomb@plt+0x4a70>
  407888:	b	4076e0 <wcrtomb@plt+0x4a80>
  40788c:	mov	w1, #0x77                  	// #119
  407890:	bl	402960 <__overflow@plt>
  407894:	ldr	x8, [x21, #24]
  407898:	cbnz	x8, 4073e8 <wcrtomb@plt+0x4788>
  40789c:	b	4071ac <wcrtomb@plt+0x454c>
  4078a0:	mov	w1, #0x67                  	// #103
  4078a4:	bl	402960 <__overflow@plt>
  4078a8:	ldrb	w8, [x21, #32]
  4078ac:	tbnz	w8, #3, 40767c <wcrtomb@plt+0x4a1c>
  4078b0:	b	40769c <wcrtomb@plt+0x4a3c>
  4078b4:	mov	w1, #0x65                  	// #101
  4078b8:	bl	402960 <__overflow@plt>
  4078bc:	b	40769c <wcrtomb@plt+0x4a3c>
  4078c0:	mov	w1, #0x69                  	// #105
  4078c4:	bl	402960 <__overflow@plt>
  4078c8:	ldrb	w8, [x20, #64]
  4078cc:	tbnz	w8, #2, 40762c <wcrtomb@plt+0x49cc>
  4078d0:	b	40764c <wcrtomb@plt+0x49ec>
  4078d4:	mov	w1, #0x6d                  	// #109
  4078d8:	bl	402960 <__overflow@plt>
  4078dc:	b	40764c <wcrtomb@plt+0x49ec>
  4078e0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4078e4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4078e8:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xf5a8>
  4078ec:	add	x0, x0, #0xd97
  4078f0:	add	x1, x1, #0xee5
  4078f4:	add	x3, x3, #0xef1
  4078f8:	mov	w2, #0x194                 	// #404
  4078fc:	bl	402bc0 <__assert_fail@plt>
  407900:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407904:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407908:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40790c:	add	x0, x0, #0xd97
  407910:	add	x1, x1, #0xee5
  407914:	add	x3, x3, #0xef1
  407918:	mov	w2, #0x123                 	// #291
  40791c:	bl	402bc0 <__assert_fail@plt>
  407920:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407924:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407928:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40792c:	add	x0, x0, #0xd97
  407930:	add	x1, x1, #0xee5
  407934:	add	x3, x3, #0xef1
  407938:	mov	w2, #0x17e                 	// #382
  40793c:	bl	402bc0 <__assert_fail@plt>
  407940:	stp	x29, x30, [sp, #-32]!
  407944:	str	x19, [sp, #16]
  407948:	mov	x29, sp
  40794c:	cbz	x0, 407a74 <wcrtomb@plt+0x4e14>
  407950:	ldr	w8, [x0]
  407954:	mov	x19, x0
  407958:	cmp	w8, #0x6
  40795c:	b.hi	407a74 <wcrtomb@plt+0x4e14>  // b.pmore
  407960:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407964:	add	x9, x9, #0xeac
  407968:	adr	x10, 407978 <wcrtomb@plt+0x4d18>
  40796c:	ldrb	w11, [x9, x8]
  407970:	add	x10, x10, x11, lsl #2
  407974:	br	x10
  407978:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40797c:	ldr	x1, [x8, #1272]
  407980:	ldr	x19, [sp, #16]
  407984:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407988:	add	x0, x0, #0xec6
  40798c:	ldp	x29, x30, [sp], #32
  407990:	b	402b50 <fputs_unlocked@plt>
  407994:	ldr	x0, [x19, #24]
  407998:	bl	407b24 <wcrtomb@plt+0x4ec4>
  40799c:	ldr	x19, [x19, #24]
  4079a0:	cbz	x19, 407a74 <wcrtomb@plt+0x4e14>
  4079a4:	ldrb	w8, [x19, #64]
  4079a8:	tbz	w8, #1, 4079d0 <wcrtomb@plt+0x4d70>
  4079ac:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4079b0:	ldr	x0, [x8, #1272]
  4079b4:	ldp	x8, x9, [x0, #40]
  4079b8:	cmp	x8, x9
  4079bc:	b.cs	407a88 <wcrtomb@plt+0x4e28>  // b.hs, b.nlast
  4079c0:	add	x9, x8, #0x1
  4079c4:	mov	w10, #0x49                  	// #73
  4079c8:	str	x9, [x0, #40]
  4079cc:	strb	w10, [x8]
  4079d0:	ldrb	w8, [x19, #64]
  4079d4:	tbz	w8, #2, 407a74 <wcrtomb@plt+0x4e14>
  4079d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4079dc:	ldr	x0, [x8, #1272]
  4079e0:	ldp	x8, x9, [x0, #40]
  4079e4:	cmp	x8, x9
  4079e8:	b.cs	407a9c <wcrtomb@plt+0x4e3c>  // b.hs, b.nlast
  4079ec:	add	x9, x8, #0x1
  4079f0:	mov	w10, #0x4d                  	// #77
  4079f4:	b	407a6c <wcrtomb@plt+0x4e0c>
  4079f8:	ldr	x2, [x19, #8]
  4079fc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407a00:	add	x1, x1, #0xedb
  407a04:	b	407a40 <wcrtomb@plt+0x4de0>
  407a08:	ldp	x2, x3, [x19, #8]
  407a0c:	ldr	x19, [sp, #16]
  407a10:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407a14:	add	x1, x1, #0xed2
  407a18:	mov	w0, #0x1                   	// #1
  407a1c:	ldp	x29, x30, [sp], #32
  407a20:	b	4027e0 <__printf_chk@plt>
  407a24:	ldr	x2, [x19, #16]
  407a28:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407a2c:	add	x1, x1, #0xeda
  407a30:	b	407a40 <wcrtomb@plt+0x4de0>
  407a34:	ldr	x2, [x19, #16]
  407a38:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407a3c:	add	x1, x1, #0xed5
  407a40:	ldr	x19, [sp, #16]
  407a44:	mov	w0, #0x1                   	// #1
  407a48:	ldp	x29, x30, [sp], #32
  407a4c:	b	4027e0 <__printf_chk@plt>
  407a50:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407a54:	ldr	x0, [x8, #1272]
  407a58:	ldp	x8, x9, [x0, #40]
  407a5c:	cmp	x8, x9
  407a60:	b.cs	407a80 <wcrtomb@plt+0x4e20>  // b.hs, b.nlast
  407a64:	add	x9, x8, #0x1
  407a68:	mov	w10, #0x24                  	// #36
  407a6c:	str	x9, [x0, #40]
  407a70:	strb	w10, [x8]
  407a74:	ldr	x19, [sp, #16]
  407a78:	ldp	x29, x30, [sp], #32
  407a7c:	ret
  407a80:	mov	w1, #0x24                  	// #36
  407a84:	b	407aa0 <wcrtomb@plt+0x4e40>
  407a88:	mov	w1, #0x49                  	// #73
  407a8c:	bl	402960 <__overflow@plt>
  407a90:	ldrb	w8, [x19, #64]
  407a94:	tbnz	w8, #2, 4079d8 <wcrtomb@plt+0x4d78>
  407a98:	b	407a74 <wcrtomb@plt+0x4e14>
  407a9c:	mov	w1, #0x4d                  	// #77
  407aa0:	ldr	x19, [sp, #16]
  407aa4:	ldp	x29, x30, [sp], #32
  407aa8:	b	402960 <__overflow@plt>
  407aac:	cbz	x0, 407b20 <wcrtomb@plt+0x4ec0>
  407ab0:	stp	x29, x30, [sp, #-48]!
  407ab4:	stp	x20, x19, [sp, #32]
  407ab8:	mov	x19, x0
  407abc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407ac0:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  407ac4:	mov	w8, #0x1                   	// #1
  407ac8:	add	x0, x0, #0xeb9
  407acc:	stp	x22, x21, [sp, #16]
  407ad0:	mov	x29, sp
  407ad4:	str	w8, [x20, #1544]
  407ad8:	bl	402980 <puts@plt>
  407adc:	ldr	x8, [x19, #16]
  407ae0:	cbz	x8, 407b10 <wcrtomb@plt+0x4eb0>
  407ae4:	mov	x21, xzr
  407ae8:	mov	x22, xzr
  407aec:	ldr	x8, [x19]
  407af0:	mov	x0, x19
  407af4:	add	x1, x8, x21
  407af8:	bl	407044 <wcrtomb@plt+0x43e4>
  407afc:	ldr	x8, [x19, #16]
  407b00:	add	x22, x22, #0x1
  407b04:	add	x21, x21, #0x28
  407b08:	cmp	x22, x8
  407b0c:	b.cc	407aec <wcrtomb@plt+0x4e8c>  // b.lo, b.ul, b.last
  407b10:	str	wzr, [x20, #1544]
  407b14:	ldp	x20, x19, [sp, #32]
  407b18:	ldp	x22, x21, [sp, #16]
  407b1c:	ldp	x29, x30, [sp], #48
  407b20:	ret
  407b24:	stp	x29, x30, [sp, #-48]!
  407b28:	stp	x22, x21, [sp, #16]
  407b2c:	stp	x20, x19, [sp, #32]
  407b30:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  407b34:	ldr	x8, [x20, #1272]
  407b38:	mov	x29, sp
  407b3c:	cbz	x0, 407bd8 <wcrtomb@plt+0x4f78>
  407b40:	ldp	x9, x10, [x8, #40]
  407b44:	mov	x19, x0
  407b48:	cmp	x9, x10
  407b4c:	b.cs	407bf4 <wcrtomb@plt+0x4f94>  // b.hs, b.nlast
  407b50:	add	x10, x9, #0x1
  407b54:	mov	w11, #0x2f                  	// #47
  407b58:	str	x10, [x8, #40]
  407b5c:	strb	w11, [x9]
  407b60:	ldr	x21, [x19, #72]
  407b64:	cbz	x21, 407ba8 <wcrtomb@plt+0x4f48>
  407b68:	add	x22, x19, #0x5a
  407b6c:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407b70:	add	x19, x19, #0xee2
  407b74:	b	407b84 <wcrtomb@plt+0x4f24>
  407b78:	bl	406e4c <wcrtomb@plt+0x41ec>
  407b7c:	add	x22, x22, #0x1
  407b80:	cbz	x21, 407ba8 <wcrtomb@plt+0x4f48>
  407b84:	ldrb	w0, [x22]
  407b88:	sub	x21, x21, #0x1
  407b8c:	cmp	w0, #0x2f
  407b90:	b.ne	407b78 <wcrtomb@plt+0x4f18>  // b.any
  407b94:	ldr	x1, [x20, #1272]
  407b98:	mov	x0, x19
  407b9c:	bl	402b50 <fputs_unlocked@plt>
  407ba0:	add	x22, x22, #0x1
  407ba4:	cbnz	x21, 407b84 <wcrtomb@plt+0x4f24>
  407ba8:	ldr	x0, [x20, #1272]
  407bac:	ldp	x8, x9, [x0, #40]
  407bb0:	cmp	x8, x9
  407bb4:	b.cs	407c0c <wcrtomb@plt+0x4fac>  // b.hs, b.nlast
  407bb8:	add	x9, x8, #0x1
  407bbc:	mov	w10, #0x2f                  	// #47
  407bc0:	str	x9, [x0, #40]
  407bc4:	strb	w10, [x8]
  407bc8:	ldp	x20, x19, [sp, #32]
  407bcc:	ldp	x22, x21, [sp, #16]
  407bd0:	ldp	x29, x30, [sp], #48
  407bd4:	ret
  407bd8:	ldp	x20, x19, [sp, #32]
  407bdc:	ldp	x22, x21, [sp, #16]
  407be0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407be4:	add	x0, x0, #0xedf
  407be8:	mov	x1, x8
  407bec:	ldp	x29, x30, [sp], #48
  407bf0:	b	402b50 <fputs_unlocked@plt>
  407bf4:	mov	w1, #0x2f                  	// #47
  407bf8:	mov	x0, x8
  407bfc:	bl	402960 <__overflow@plt>
  407c00:	ldr	x21, [x19, #72]
  407c04:	cbnz	x21, 407b68 <wcrtomb@plt+0x4f08>
  407c08:	b	407ba8 <wcrtomb@plt+0x4f48>
  407c0c:	ldp	x20, x19, [sp, #32]
  407c10:	ldp	x22, x21, [sp, #16]
  407c14:	mov	w1, #0x2f                  	// #47
  407c18:	ldp	x29, x30, [sp], #48
  407c1c:	b	402960 <__overflow@plt>
  407c20:	stp	x29, x30, [sp, #-96]!
  407c24:	stp	x28, x27, [sp, #16]
  407c28:	stp	x26, x25, [sp, #32]
  407c2c:	stp	x24, x23, [sp, #48]
  407c30:	stp	x22, x21, [sp, #64]
  407c34:	stp	x20, x19, [sp, #80]
  407c38:	mov	x29, sp
  407c3c:	sub	sp, sp, #0x1, lsl #12
  407c40:	sub	sp, sp, #0x1e0
  407c44:	mov	x27, x0
  407c48:	mov	w0, #0x33                  	// #51
  407c4c:	mov	x22, x1
  407c50:	bl	415540 <wcrtomb@plt+0x128e0>
  407c54:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407c58:	ldr	q0, [x8, #3904]
  407c5c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  407c60:	add	x9, x9, #0x610
  407c64:	mov	w19, #0x1                   	// #1
  407c68:	stp	x0, x0, [x9]
  407c6c:	mov	w0, #0x1                   	// #1
  407c70:	strb	w19, [x9, #32]
  407c74:	str	q0, [sp, #16]
  407c78:	str	q0, [x9, #16]
  407c7c:	stur	xzr, [x9, #36]
  407c80:	bl	415540 <wcrtomb@plt+0x128e0>
  407c84:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407c88:	add	x8, x8, #0x640
  407c8c:	stp	x0, x0, [x8]
  407c90:	mov	w0, #0x1                   	// #1
  407c94:	stp	xzr, xzr, [x8, #16]
  407c98:	strb	w19, [x8, #32]
  407c9c:	stur	xzr, [x8, #36]
  407ca0:	bl	415540 <wcrtomb@plt+0x128e0>
  407ca4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407ca8:	add	x8, x8, #0x670
  407cac:	stp	x0, x0, [x8]
  407cb0:	stp	xzr, xzr, [x8, #16]
  407cb4:	strb	w19, [x8, #32]
  407cb8:	stur	xzr, [x8, #36]
  407cbc:	strb	w19, [sp, #88]
  407cc0:	cbz	x22, 407cd4 <wcrtomb@plt+0x5074>
  407cc4:	ldr	x8, [x22]
  407cc8:	cbz	x8, 407cd4 <wcrtomb@plt+0x5074>
  407ccc:	str	x22, [sp, #64]
  407cd0:	b	407cec <wcrtomb@plt+0x508c>
  407cd4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407cd8:	ldr	x8, [x8, #1880]
  407cdc:	cbnz	x8, 40962c <wcrtomb@plt+0x69cc>
  407ce0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407ce4:	add	x8, x8, #0x438
  407ce8:	str	x8, [sp, #64]
  407cec:	adrp	x8, 409000 <wcrtomb@plt+0x63a0>
  407cf0:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  407cf4:	add	x8, x8, #0x644
  407cf8:	add	x0, sp, #0x40
  407cfc:	mov	x1, x27
  407d00:	mov	w2, wzr
  407d04:	add	x22, x22, #0x610
  407d08:	stp	xzr, xzr, [sp, #72]
  407d0c:	str	x8, [sp, #96]
  407d10:	str	xzr, [sp, #248]
  407d14:	bl	40964c <wcrtomb@plt+0x69ec>
  407d18:	mov	w19, wzr
  407d1c:	tbz	w0, #0, 4095b8 <wcrtomb@plt+0x6958>
  407d20:	add	x8, sp, #0x140
  407d24:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  407d28:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  407d2c:	orr	x9, x8, #0x1
  407d30:	orr	x8, x8, #0x2
  407d34:	stp	x9, x8, [sp, #40]
  407d38:	b	407d5c <wcrtomb@plt+0x50fc>
  407d3c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407d40:	ldrb	w8, [x8, #1856]
  407d44:	cbz	w8, 407d7c <wcrtomb@plt+0x511c>
  407d48:	add	x0, sp, #0x40
  407d4c:	mov	x1, x27
  407d50:	mov	w2, wzr
  407d54:	bl	40964c <wcrtomb@plt+0x69ec>
  407d58:	tbz	w0, #0, 4095f4 <wcrtomb@plt+0x6994>
  407d5c:	ldrb	w8, [x26, #1872]
  407d60:	cbz	w8, 407e0c <wcrtomb@plt+0x51ac>
  407d64:	ldr	x0, [sp, #248]
  407d68:	cbz	x0, 407d74 <wcrtomb@plt+0x5114>
  407d6c:	bl	4026b0 <fileno@plt>
  407d70:	cbz	w0, 407d9c <wcrtomb@plt+0x513c>
  407d74:	ldr	x2, [sp, #112]
  407d78:	b	407da4 <wcrtomb@plt+0x5144>
  407d7c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407d80:	add	x8, x8, #0x618
  407d84:	ldp	x0, x1, [x8]
  407d88:	ldrb	w2, [x8, #24]
  407d8c:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  407d90:	add	x3, x3, #0x6b0
  407d94:	bl	409f08 <wcrtomb@plt+0x72a8>
  407d98:	b	407d48 <wcrtomb@plt+0x50e8>
  407d9c:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  407da0:	add	x2, x2, #0xc5
  407da4:	ldr	x3, [sp, #80]
  407da8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  407dac:	mov	w0, #0x1                   	// #1
  407db0:	add	x1, x1, #0xad
  407db4:	bl	4027e0 <__printf_chk@plt>
  407db8:	ldr	x1, [x25, #1272]
  407dbc:	ldp	x21, x20, [x22]
  407dc0:	ldr	x19, [x22, #16]
  407dc4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  407dc8:	add	x0, x0, #0xd5
  407dcc:	bl	402b50 <fputs_unlocked@plt>
  407dd0:	cbz	x19, 407dec <wcrtomb@plt+0x518c>
  407dd4:	cmp	x20, #0x0
  407dd8:	csel	x20, x21, x20, eq  // eq = none
  407ddc:	ldrb	w0, [x20], #1
  407de0:	sub	x19, x19, #0x1
  407de4:	bl	406e4c <wcrtomb@plt+0x41ec>
  407de8:	cbnz	x19, 407ddc <wcrtomb@plt+0x517c>
  407dec:	ldr	x0, [x25, #1272]
  407df0:	ldp	x8, x9, [x0, #40]
  407df4:	cmp	x8, x9
  407df8:	b.cs	409574 <wcrtomb@plt+0x6914>  // b.hs, b.nlast
  407dfc:	add	x9, x8, #0x1
  407e00:	str	x9, [x0, #40]
  407e04:	mov	w9, #0xa                   	// #10
  407e08:	strb	w9, [x8]
  407e0c:	ldrb	w8, [x26, #1872]
  407e10:	ldr	x9, [x27, #16]
  407e14:	cmp	w8, #0x0
  407e18:	cset	w8, ne  // ne = any
  407e1c:	cmp	x9, #0x1
  407e20:	b.lt	409464 <wcrtomb@plt+0x6804>  // b.tstop
  407e24:	ldr	x28, [x27]
  407e28:	mov	w10, #0x28                  	// #40
  407e2c:	madd	x20, x9, x10, x28
  407e30:	str	x20, [sp, #56]
  407e34:	tbz	w8, #0, 407e54 <wcrtomb@plt+0x51f4>
  407e38:	ldr	x1, [x25, #1272]
  407e3c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  407e40:	add	x0, x0, #0xdf
  407e44:	bl	402b50 <fputs_unlocked@plt>
  407e48:	mov	x0, x27
  407e4c:	mov	x1, x28
  407e50:	bl	407044 <wcrtomb@plt+0x43e4>
  407e54:	ldr	x8, [x28]
  407e58:	cbz	x8, 407f60 <wcrtomb@plt+0x5300>
  407e5c:	ldr	w9, [x28, #16]
  407e60:	ldr	x0, [x28, #8]
  407e64:	cmp	w9, #0x1
  407e68:	b.ne	407e9c <wcrtomb@plt+0x523c>  // b.any
  407e6c:	ldr	w8, [x0]
  407e70:	cmp	w8, #0x2
  407e74:	b.ne	407f4c <wcrtomb@plt+0x52ec>  // b.any
  407e78:	ldr	x8, [sp, #80]
  407e7c:	ldr	x9, [x0, #8]
  407e80:	cmp	x8, x9
  407e84:	b.cc	407e90 <wcrtomb@plt+0x5230>  // b.lo, b.ul, b.last
  407e88:	mov	w10, #0x2                   	// #2
  407e8c:	str	w10, [x28, #16]
  407e90:	cmp	x8, x9
  407e94:	cset	w8, ls  // ls = plast
  407e98:	b	407f64 <wcrtomb@plt+0x5304>
  407e9c:	cbz	x0, 407ec8 <wcrtomb@plt+0x5268>
  407ea0:	ldr	w10, [x8]
  407ea4:	cmp	w10, #0x2
  407ea8:	b.ne	407edc <wcrtomb@plt+0x527c>  // b.any
  407eac:	cmp	w9, #0x2
  407eb0:	b.eq	408008 <wcrtomb@plt+0x53a8>  // b.none
  407eb4:	ldr	x9, [sp, #80]
  407eb8:	ldr	x8, [x8, #8]
  407ebc:	cmp	x9, x8
  407ec0:	b.cc	408008 <wcrtomb@plt+0x53a8>  // b.lo, b.ul, b.last
  407ec4:	b	407ef0 <wcrtomb@plt+0x5290>
  407ec8:	add	x1, sp, #0x40
  407ecc:	mov	x0, x8
  407ed0:	bl	40a0f8 <wcrtomb@plt+0x7498>
  407ed4:	mov	w8, w0
  407ed8:	b	407f64 <wcrtomb@plt+0x5304>
  407edc:	add	x1, sp, #0x40
  407ee0:	mov	x0, x8
  407ee4:	bl	40a0f8 <wcrtomb@plt+0x7498>
  407ee8:	tbz	w0, #0, 408008 <wcrtomb@plt+0x53a8>
  407eec:	ldr	x0, [x28, #8]
  407ef0:	mov	w8, #0x1                   	// #1
  407ef4:	str	w8, [x28, #16]
  407ef8:	ldr	w9, [x0]
  407efc:	sub	w9, w9, #0x1
  407f00:	cmp	w9, #0x4
  407f04:	b.hi	407f4c <wcrtomb@plt+0x52ec>  // b.pmore
  407f08:	adrp	x12, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407f0c:	add	x12, x12, #0xf50
  407f10:	adr	x10, 407f20 <wcrtomb@plt+0x52c0>
  407f14:	ldrh	w11, [x12, x9, lsl #1]
  407f18:	add	x10, x10, x11, lsl #2
  407f1c:	br	x10
  407f20:	ldr	x8, [sp, #80]
  407f24:	ldr	x9, [x0, #8]
  407f28:	cmp	x8, x9
  407f2c:	b.cc	407f38 <wcrtomb@plt+0x52d8>  // b.lo, b.ul, b.last
  407f30:	mov	w10, #0x2                   	// #2
  407f34:	str	w10, [x28, #16]
  407f38:	cmp	x8, x9
  407f3c:	b.ls	407f60 <wcrtomb@plt+0x5300>  // b.plast
  407f40:	ldr	x0, [x28]
  407f44:	add	x1, sp, #0x40
  407f48:	b	407ed0 <wcrtomb@plt+0x5270>
  407f4c:	add	x1, sp, #0x40
  407f50:	bl	40a0f8 <wcrtomb@plt+0x7498>
  407f54:	tbz	w0, #0, 407f60 <wcrtomb@plt+0x5300>
  407f58:	mov	w8, #0x2                   	// #2
  407f5c:	str	w8, [x28, #16]
  407f60:	mov	w8, #0x1                   	// #1
  407f64:	ldrb	w9, [x28, #20]
  407f68:	and	w8, w8, #0x1
  407f6c:	cmp	w9, w8
  407f70:	b.ne	407f90 <wcrtomb@plt+0x5330>  // b.any
  407f74:	add	x28, x28, #0x28
  407f78:	ldrb	w8, [x26, #1872]
  407f7c:	cmp	w8, #0x0
  407f80:	cset	w8, ne  // ne = any
  407f84:	cmp	x28, x20
  407f88:	b.cc	407e34 <wcrtomb@plt+0x51d4>  // b.lo, b.ul, b.last
  407f8c:	b	409464 <wcrtomb@plt+0x6804>
  407f90:	ldrb	w1, [x28, #21]
  407f94:	sub	w8, w1, #0x23
  407f98:	cmp	w8, #0x5a
  407f9c:	b.hi	4095fc <wcrtomb@plt+0x699c>  // b.pmore
  407fa0:	adrp	x11, 425000 <_obstack_memory_used@@Base+0xf5a8>
  407fa4:	add	x11, x11, #0xf5a
  407fa8:	adr	x9, 407f74 <wcrtomb@plt+0x5314>
  407fac:	ldrh	w10, [x11, x8, lsl #1]
  407fb0:	add	x9, x9, x10, lsl #2
  407fb4:	br	x9
  407fb8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407fbc:	ldrb	w8, [x8, #1720]
  407fc0:	cbz	w8, 407fe8 <wcrtomb@plt+0x5388>
  407fc4:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  407fc8:	add	x19, x19, #0x6b8
  407fcc:	ldr	x3, [x19, #8]
  407fd0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  407fd4:	add	x0, x0, #0x448
  407fd8:	mov	w1, #0x1                   	// #1
  407fdc:	mov	w2, #0x1                   	// #1
  407fe0:	bl	40b99c <wcrtomb@plt+0x8d3c>
  407fe4:	strb	wzr, [x19]
  407fe8:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  407fec:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  407ff0:	ldr	x3, [sp, #80]
  407ff4:	ldr	x0, [x19, #1728]
  407ff8:	ldrb	w4, [x8, #1096]
  407ffc:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  408000:	add	x2, x2, #0xfd
  408004:	b	40850c <wcrtomb@plt+0x58ac>
  408008:	mov	w8, wzr
  40800c:	b	407f64 <wcrtomb@plt+0x5304>
  408010:	ldr	x8, [x28, #24]
  408014:	cbz	x8, 407f74 <wcrtomb@plt+0x5314>
  408018:	mov	w0, #0x1                   	// #1
  40801c:	mov	w1, #0x28                  	// #40
  408020:	bl	415564 <wcrtomb@plt+0x12904>
  408024:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408028:	ldr	x9, [x8, #1744]
  40802c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  408030:	add	x10, x10, #0x6a0
  408034:	movi	v0.2d, #0x0
  408038:	add	x11, x9, #0x18
  40803c:	cmp	x9, #0x0
  408040:	csel	x9, x10, x11, eq  // eq = none
  408044:	strb	wzr, [x0, #32]
  408048:	stp	q0, q0, [x0]
  40804c:	str	x0, [x9]
  408050:	str	x0, [x8, #1744]
  408054:	ldr	x8, [x28, #24]
  408058:	add	x28, x28, #0x28
  40805c:	str	x8, [x0]
  408060:	b	407f78 <wcrtomb@plt+0x5318>
  408064:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408068:	ldr	x8, [x8, #1792]
  40806c:	ldr	x20, [x28, #32]
  408070:	cbz	x8, 408cc4 <wcrtomb@plt+0x6064>
  408074:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408078:	str	xzr, [x8, #1784]
  40807c:	b	408ce8 <wcrtomb@plt+0x6088>
  408080:	ldrb	w8, [x26, #1872]
  408084:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408088:	str	xzr, [x9, #1568]
  40808c:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408090:	ldr	x1, [x25, #1272]
  408094:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408098:	add	x0, x0, #0xd5
  40809c:	bl	402b50 <fputs_unlocked@plt>
  4080a0:	ldr	x0, [x25, #1272]
  4080a4:	ldp	x8, x9, [x0, #40]
  4080a8:	cmp	x8, x9
  4080ac:	b.cs	409440 <wcrtomb@plt+0x67e0>  // b.hs, b.nlast
  4080b0:	add	x9, x8, #0x1
  4080b4:	mov	w10, #0xa                   	// #10
  4080b8:	str	x9, [x0, #40]
  4080bc:	strb	w10, [x8]
  4080c0:	b	407f74 <wcrtomb@plt+0x5314>
  4080c4:	mov	w0, #0x1                   	// #1
  4080c8:	mov	w1, #0x28                  	// #40
  4080cc:	bl	415564 <wcrtomb@plt+0x12904>
  4080d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4080d4:	ldr	x9, [x8, #1744]
  4080d8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4080dc:	add	x10, x10, #0x6a0
  4080e0:	movi	v0.2d, #0x0
  4080e4:	add	x11, x9, #0x18
  4080e8:	cmp	x9, #0x0
  4080ec:	csel	x9, x10, x11, eq  // eq = none
  4080f0:	strb	wzr, [x0, #32]
  4080f4:	stp	q0, q0, [x0]
  4080f8:	str	x0, [x9]
  4080fc:	str	x0, [x8, #1744]
  408100:	ldr	x8, [x28, #24]
  408104:	str	x8, [x0, #8]
  408108:	ldr	x8, [x28, #32]
  40810c:	str	x8, [x0, #16]
  408110:	b	407f74 <wcrtomb@plt+0x5314>
  408114:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408118:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  40811c:	add	x19, x19, #0x640
  408120:	add	x1, x1, #0x448
  408124:	mov	w2, #0x1                   	// #1
  408128:	mov	x0, x19
  40812c:	bl	409da8 <wcrtomb@plt+0x7148>
  408130:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  408134:	add	x20, x20, #0x618
  408138:	ldp	x1, x2, [x20]
  40813c:	mov	x0, x19
  408140:	bl	409da8 <wcrtomb@plt+0x7148>
  408144:	ldrb	w8, [x20, #24]
  408148:	ldur	x9, [x20, #28]
  40814c:	ldr	x20, [sp, #56]
  408150:	ldrb	w10, [x26, #1872]
  408154:	strb	w8, [x19, #32]
  408158:	stur	x9, [x19, #36]
  40815c:	cbz	w10, 407f74 <wcrtomb@plt+0x5314>
  408160:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408164:	add	x8, x8, #0x640
  408168:	ldr	x1, [x25, #1272]
  40816c:	ldp	x21, x20, [x8]
  408170:	ldr	x19, [x8, #16]
  408174:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408178:	add	x0, x0, #0xcb
  40817c:	bl	402b50 <fputs_unlocked@plt>
  408180:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  408184:	cmp	x20, #0x0
  408188:	csel	x20, x21, x20, eq  // eq = none
  40818c:	ldrb	w0, [x20], #1
  408190:	sub	x19, x19, #0x1
  408194:	bl	406e4c <wcrtomb@plt+0x41ec>
  408198:	cbnz	x19, 40818c <wcrtomb@plt+0x552c>
  40819c:	b	40940c <wcrtomb@plt+0x67ac>
  4081a0:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4081a4:	add	x23, x23, #0x610
  4081a8:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  4081ac:	add	x1, x1, #0x448
  4081b0:	mov	w2, #0x1                   	// #1
  4081b4:	mov	x0, x23
  4081b8:	bl	409da8 <wcrtomb@plt+0x7148>
  4081bc:	add	x0, sp, #0x40
  4081c0:	bl	40a050 <wcrtomb@plt+0x73f0>
  4081c4:	tbnz	w0, #0, 409528 <wcrtomb@plt+0x68c8>
  4081c8:	add	x0, sp, #0x40
  4081cc:	mov	w2, #0x1                   	// #1
  4081d0:	mov	x1, x27
  4081d4:	bl	40964c <wcrtomb@plt+0x69ec>
  4081d8:	tbz	w0, #0, 409528 <wcrtomb@plt+0x68c8>
  4081dc:	ldrb	w8, [x26, #1872]
  4081e0:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  4081e4:	ldr	x1, [x25, #1272]
  4081e8:	ldp	x21, x20, [x23]
  4081ec:	ldr	x19, [x23, #16]
  4081f0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4081f4:	add	x0, x0, #0xd5
  4081f8:	bl	402b50 <fputs_unlocked@plt>
  4081fc:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  408200:	cmp	x20, #0x0
  408204:	csel	x20, x21, x20, eq  // eq = none
  408208:	ldrb	w0, [x20], #1
  40820c:	sub	x19, x19, #0x1
  408210:	bl	406e4c <wcrtomb@plt+0x41ec>
  408214:	cbnz	x19, 408208 <wcrtomb@plt+0x55a8>
  408218:	b	40940c <wcrtomb@plt+0x67ac>
  40821c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408220:	ldrb	w9, [x8, #1704]
  408224:	tbz	w9, #0, 4089dc <wcrtomb@plt+0x5d7c>
  408228:	strb	wzr, [x8, #1704]
  40822c:	b	407f74 <wcrtomb@plt+0x5314>
  408230:	ldr	x8, [x28, #24]
  408234:	ldr	x3, [x8, #16]
  408238:	cbz	x3, 407f74 <wcrtomb@plt+0x5314>
  40823c:	ldrb	w8, [x3]
  408240:	tbnz	w8, #4, 407f74 <wcrtomb@plt+0x5314>
  408244:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408248:	ldrb	w2, [x8, #1096]
  40824c:	add	x0, sp, #0x108
  408250:	add	x1, sp, #0x140
  408254:	str	xzr, [sp, #264]
  408258:	bl	40bb70 <wcrtomb@plt+0x8f10>
  40825c:	mov	x23, x0
  408260:	cmn	w23, #0x1
  408264:	b.eq	408ffc <wcrtomb@plt+0x639c>  // b.none
  408268:	mov	w0, #0x1                   	// #1
  40826c:	mov	w1, #0x28                  	// #40
  408270:	mov	w19, #0x1                   	// #1
  408274:	bl	415564 <wcrtomb@plt+0x12904>
  408278:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40827c:	ldr	x9, [x8, #1744]
  408280:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  408284:	add	x10, x10, #0x6a0
  408288:	movi	v0.2d, #0x0
  40828c:	add	x11, x9, #0x18
  408290:	cmp	x9, #0x0
  408294:	csel	x9, x10, x11, eq  // eq = none
  408298:	strb	wzr, [x0, #32]
  40829c:	stp	q0, q0, [x0]
  4082a0:	str	x0, [x9]
  4082a4:	ldr	x9, [sp, #264]
  4082a8:	sxtw	x10, w23
  4082ac:	str	x0, [x8, #1744]
  4082b0:	strb	w19, [x0, #32]
  4082b4:	stp	x9, x10, [x0, #8]
  4082b8:	b	407f74 <wcrtomb@plt+0x5314>
  4082bc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4082c0:	ldrb	w1, [x8, #1096]
  4082c4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4082c8:	add	x8, x8, #0x618
  4082cc:	ldp	x24, x23, [x8]
  4082d0:	mov	x0, x24
  4082d4:	mov	x2, x23
  4082d8:	bl	402ae0 <memchr@plt>
  4082dc:	cbz	x0, 407d48 <wcrtomb@plt+0x50e8>
  4082e0:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4082e4:	add	x10, x10, #0x618
  4082e8:	ldr	x8, [x10, #16]
  4082ec:	add	x19, x0, #0x1
  4082f0:	sub	x9, x24, x19
  4082f4:	add	x20, x9, x23
  4082f8:	add	x8, x8, x9
  4082fc:	stp	x19, x20, [x10]
  408300:	str	x8, [x10, #16]
  408304:	ldrb	w8, [x26, #1872]
  408308:	ldr	x28, [x27]
  40830c:	cbz	w8, 408ff4 <wcrtomb@plt+0x6394>
  408310:	ldr	x1, [x25, #1272]
  408314:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408318:	add	x0, x0, #0xd5
  40831c:	bl	402b50 <fputs_unlocked@plt>
  408320:	cbz	x20, 408334 <wcrtomb@plt+0x56d4>
  408324:	ldrb	w0, [x19], #1
  408328:	sub	x20, x20, #0x1
  40832c:	bl	406e4c <wcrtomb@plt+0x41ec>
  408330:	cbnz	x20, 408324 <wcrtomb@plt+0x56c4>
  408334:	ldr	x0, [x25, #1272]
  408338:	ldr	x20, [sp, #56]
  40833c:	ldp	x8, x9, [x0, #40]
  408340:	cmp	x8, x9
  408344:	b.cs	409458 <wcrtomb@plt+0x67f8>  // b.hs, b.nlast
  408348:	add	x9, x8, #0x1
  40834c:	mov	w10, #0xa                   	// #10
  408350:	str	x9, [x0, #40]
  408354:	strb	w10, [x8]
  408358:	b	407f78 <wcrtomb@plt+0x5318>
  40835c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  408360:	add	x1, x1, #0x448
  408364:	mov	w2, #0x1                   	// #1
  408368:	mov	x0, x22
  40836c:	bl	409da8 <wcrtomb@plt+0x7148>
  408370:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408374:	add	x19, x19, #0x648
  408378:	ldp	x1, x2, [x19]
  40837c:	mov	x0, x22
  408380:	bl	409da8 <wcrtomb@plt+0x7148>
  408384:	ldrb	w8, [x19, #24]
  408388:	ldur	x9, [x19, #28]
  40838c:	ldrb	w10, [x26, #1872]
  408390:	strb	w8, [x22, #32]
  408394:	stur	x9, [x22, #36]
  408398:	cbz	w10, 407f74 <wcrtomb@plt+0x5314>
  40839c:	ldr	x1, [x25, #1272]
  4083a0:	ldp	x21, x20, [x22]
  4083a4:	ldr	x19, [x22, #16]
  4083a8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4083ac:	add	x0, x0, #0xd5
  4083b0:	bl	402b50 <fputs_unlocked@plt>
  4083b4:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  4083b8:	cmp	x20, #0x0
  4083bc:	csel	x20, x21, x20, eq  // eq = none
  4083c0:	ldrb	w0, [x20], #1
  4083c4:	sub	x19, x19, #0x1
  4083c8:	bl	406e4c <wcrtomb@plt+0x41ec>
  4083cc:	cbnz	x19, 4083c0 <wcrtomb@plt+0x5760>
  4083d0:	b	40940c <wcrtomb@plt+0x67ac>
  4083d4:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4083d8:	add	x19, x19, #0x618
  4083dc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4083e0:	ldp	x23, x24, [x19]
  4083e4:	ldrb	w1, [x8, #1096]
  4083e8:	mov	x0, x23
  4083ec:	mov	x2, x24
  4083f0:	bl	402ae0 <memchr@plt>
  4083f4:	ldrb	w8, [x19, #24]
  4083f8:	sub	x9, x0, x23
  4083fc:	cmp	x0, #0x0
  408400:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  408404:	and	w8, w8, #0x1
  408408:	csel	x1, x9, x24, ne  // ne = any
  40840c:	csinc	w2, w8, wzr, eq  // eq = none
  408410:	add	x3, x3, #0x6b0
  408414:	mov	x0, x23
  408418:	b	4086fc <wcrtomb@plt+0x5a9c>
  40841c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408420:	add	x8, x8, #0x618
  408424:	ldp	x0, x1, [x8]
  408428:	ldrb	w2, [x8, #24]
  40842c:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  408430:	add	x3, x3, #0x6b0
  408434:	b	4086fc <wcrtomb@plt+0x5a9c>
  408438:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40843c:	ldrb	w8, [x8, #1856]
  408440:	cbnz	w8, 408460 <wcrtomb@plt+0x5800>
  408444:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408448:	add	x8, x8, #0x618
  40844c:	ldp	x0, x1, [x8]
  408450:	ldrb	w2, [x8, #24]
  408454:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  408458:	add	x3, x3, #0x6b0
  40845c:	bl	409f08 <wcrtomb@plt+0x72a8>
  408460:	add	x0, sp, #0x40
  408464:	bl	40a050 <wcrtomb@plt+0x73f0>
  408468:	tbnz	w0, #0, 409510 <wcrtomb@plt+0x68b0>
  40846c:	add	x0, sp, #0x40
  408470:	mov	x1, x27
  408474:	mov	w2, wzr
  408478:	bl	40964c <wcrtomb@plt+0x69ec>
  40847c:	tbz	w0, #0, 409510 <wcrtomb@plt+0x68b0>
  408480:	ldrb	w8, [x26, #1872]
  408484:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408488:	ldr	x1, [x25, #1272]
  40848c:	ldp	x21, x20, [x22]
  408490:	ldr	x19, [x22, #16]
  408494:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408498:	add	x0, x0, #0xd5
  40849c:	bl	402b50 <fputs_unlocked@plt>
  4084a0:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  4084a4:	cmp	x20, #0x0
  4084a8:	csel	x20, x21, x20, eq  // eq = none
  4084ac:	ldrb	w0, [x20], #1
  4084b0:	sub	x19, x19, #0x1
  4084b4:	bl	406e4c <wcrtomb@plt+0x41ec>
  4084b8:	cbnz	x19, 4084ac <wcrtomb@plt+0x584c>
  4084bc:	b	40940c <wcrtomb@plt+0x67ac>
  4084c0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4084c4:	ldrb	w8, [x8, #1720]
  4084c8:	cbz	w8, 4084f0 <wcrtomb@plt+0x5890>
  4084cc:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4084d0:	add	x19, x19, #0x6b8
  4084d4:	ldr	x3, [x19, #8]
  4084d8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4084dc:	add	x0, x0, #0x448
  4084e0:	mov	w1, #0x1                   	// #1
  4084e4:	mov	w2, #0x1                   	// #1
  4084e8:	bl	40b99c <wcrtomb@plt+0x8d3c>
  4084ec:	strb	wzr, [x19]
  4084f0:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4084f4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4084f8:	ldr	x3, [sp, #112]
  4084fc:	ldr	x0, [x19, #1728]
  408500:	ldrb	w4, [x8, #1096]
  408504:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  408508:	add	x2, x2, #0x103
  40850c:	mov	w1, #0x1                   	// #1
  408510:	bl	4029c0 <__fprintf_chk@plt>
  408514:	b	40898c <wcrtomb@plt+0x5d2c>
  408518:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40851c:	add	x11, x11, #0x640
  408520:	ldr	w8, [x22, #32]
  408524:	ldp	q1, q0, [x22]
  408528:	ldp	q2, q3, [x11]
  40852c:	ldr	w9, [x11, #32]
  408530:	ldrb	w10, [x26, #1872]
  408534:	stp	q1, q0, [x11]
  408538:	stp	q2, q3, [x22]
  40853c:	str	w9, [x22, #32]
  408540:	str	w8, [x11, #32]
  408544:	cbz	w10, 407f74 <wcrtomb@plt+0x5314>
  408548:	ldr	x1, [x25, #1272]
  40854c:	ldp	x21, x20, [x22]
  408550:	ldr	x19, [x22, #16]
  408554:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408558:	add	x0, x0, #0xd5
  40855c:	bl	402b50 <fputs_unlocked@plt>
  408560:	cbz	x19, 40857c <wcrtomb@plt+0x591c>
  408564:	cmp	x20, #0x0
  408568:	csel	x20, x21, x20, eq  // eq = none
  40856c:	ldrb	w0, [x20], #1
  408570:	sub	x19, x19, #0x1
  408574:	bl	406e4c <wcrtomb@plt+0x41ec>
  408578:	cbnz	x19, 40856c <wcrtomb@plt+0x590c>
  40857c:	ldr	x0, [x25, #1272]
  408580:	ldp	x8, x9, [x0, #40]
  408584:	cmp	x8, x9
  408588:	b.cs	40944c <wcrtomb@plt+0x67ec>  // b.hs, b.nlast
  40858c:	add	x9, x8, #0x1
  408590:	mov	w10, #0xa                   	// #10
  408594:	str	x9, [x0, #40]
  408598:	strb	w10, [x8]
  40859c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4085a0:	add	x8, x8, #0x640
  4085a4:	ldr	x1, [x25, #1272]
  4085a8:	ldp	x21, x20, [x8]
  4085ac:	ldr	x19, [x8, #16]
  4085b0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4085b4:	add	x0, x0, #0xcb
  4085b8:	bl	402b50 <fputs_unlocked@plt>
  4085bc:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  4085c0:	cmp	x20, #0x0
  4085c4:	csel	x20, x21, x20, eq  // eq = none
  4085c8:	ldrb	w0, [x20], #1
  4085cc:	sub	x19, x19, #0x1
  4085d0:	bl	406e4c <wcrtomb@plt+0x41ec>
  4085d4:	cbnz	x19, 4085c8 <wcrtomb@plt+0x5968>
  4085d8:	b	40940c <wcrtomb@plt+0x67ac>
  4085dc:	ldr	x23, [x28, #24]
  4085e0:	ldr	x8, [x23, #16]
  4085e4:	cbz	x8, 407f74 <wcrtomb@plt+0x5314>
  4085e8:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4085ec:	add	x19, x19, #0x618
  4085f0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4085f4:	ldp	x24, x25, [x19]
  4085f8:	ldrb	w1, [x8, #1096]
  4085fc:	mov	x0, x24
  408600:	mov	x2, x25
  408604:	bl	402ae0 <memchr@plt>
  408608:	ldrb	w8, [x19, #24]
  40860c:	sub	x9, x0, x24
  408610:	cmp	x0, #0x0
  408614:	csel	x1, x9, x25, ne  // ne = any
  408618:	and	w8, w8, #0x1
  40861c:	csinc	w2, w8, wzr, eq  // eq = none
  408620:	mov	x0, x24
  408624:	mov	x3, x23
  408628:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  40862c:	b	4086fc <wcrtomb@plt+0x5a9c>
  408630:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  408634:	add	x23, x23, #0x640
  408638:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  40863c:	add	x1, x1, #0x610
  408640:	mov	x0, x23
  408644:	bl	409fc0 <wcrtomb@plt+0x7360>
  408648:	ldrb	w8, [x26, #1872]
  40864c:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408650:	ldr	x1, [x25, #1272]
  408654:	ldp	x21, x20, [x23]
  408658:	ldr	x19, [x23, #16]
  40865c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408660:	add	x0, x0, #0xcb
  408664:	bl	402b50 <fputs_unlocked@plt>
  408668:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  40866c:	cmp	x20, #0x0
  408670:	csel	x20, x21, x20, eq  // eq = none
  408674:	ldrb	w0, [x20], #1
  408678:	sub	x19, x19, #0x1
  40867c:	bl	406e4c <wcrtomb@plt+0x41ec>
  408680:	cbnz	x19, 408674 <wcrtomb@plt+0x5a14>
  408684:	b	40940c <wcrtomb@plt+0x67ac>
  408688:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40868c:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408690:	add	x23, x23, #0x640
  408694:	add	x0, x0, #0x610
  408698:	mov	x1, x23
  40869c:	bl	409fc0 <wcrtomb@plt+0x7360>
  4086a0:	ldrb	w8, [x26, #1872]
  4086a4:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  4086a8:	ldr	x1, [x25, #1272]
  4086ac:	ldp	x21, x20, [x23]
  4086b0:	ldr	x19, [x23, #16]
  4086b4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4086b8:	add	x0, x0, #0xcb
  4086bc:	bl	402b50 <fputs_unlocked@plt>
  4086c0:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  4086c4:	cmp	x20, #0x0
  4086c8:	csel	x20, x21, x20, eq  // eq = none
  4086cc:	ldrb	w0, [x20], #1
  4086d0:	sub	x19, x19, #0x1
  4086d4:	bl	406e4c <wcrtomb@plt+0x41ec>
  4086d8:	cbnz	x19, 4086cc <wcrtomb@plt+0x5a6c>
  4086dc:	b	40940c <wcrtomb@plt+0x67ac>
  4086e0:	ldr	x3, [x28, #24]
  4086e4:	ldr	x8, [x3, #16]
  4086e8:	cbz	x8, 407f74 <wcrtomb@plt+0x5314>
  4086ec:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4086f0:	add	x8, x8, #0x618
  4086f4:	ldp	x0, x1, [x8]
  4086f8:	ldrb	w2, [x8, #24]
  4086fc:	bl	409f08 <wcrtomb@plt+0x72a8>
  408700:	b	407f74 <wcrtomb@plt+0x5314>
  408704:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  408708:	ldr	w9, [x21, #2260]
  40870c:	cmp	w9, #0x2
  408710:	b.lt	408c38 <wcrtomb@plt+0x5fd8>  // b.tstop
  408714:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408718:	str	x27, [sp, #8]
  40871c:	ldr	x8, [x8, #1568]
  408720:	ldr	x27, [x28, #24]
  408724:	str	xzr, [sp, #320]
  408728:	cbz	x8, 408c78 <wcrtomb@plt+0x6018>
  40872c:	mov	x22, xzr
  408730:	cmp	w9, #0x1
  408734:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408738:	b.ne	408744 <wcrtomb@plt+0x5ae4>  // b.any
  40873c:	mov	w0, #0x1                   	// #1
  408740:	b	40875c <wcrtomb@plt+0x5afc>
  408744:	ldr	x9, [x19, #1560]
  408748:	sub	x2, x8, x22
  40874c:	add	x3, sp, #0x140
  408750:	mov	x0, xzr
  408754:	add	x1, x9, x22
  408758:	bl	415680 <wcrtomb@plt+0x12a20>
  40875c:	ldr	x1, [x27]
  408760:	sub	x8, x0, #0x1
  408764:	cmn	x8, #0x4
  408768:	csinc	x24, x0, xzr, ls  // ls = plast
  40876c:	cbz	x1, 4088fc <wcrtomb@plt+0x5c9c>
  408770:	ldr	x25, [x19, #1560]
  408774:	mov	x2, x24
  408778:	add	x23, x25, x22
  40877c:	mov	x0, x23
  408780:	bl	402790 <strncmp@plt>
  408784:	mov	w19, wzr
  408788:	cbz	w0, 4087a8 <wcrtomb@plt+0x5b48>
  40878c:	add	w19, w19, #0x2
  408790:	ldr	x1, [x27, w19, uxtw #3]
  408794:	cbz	x1, 408880 <wcrtomb@plt+0x5c20>
  408798:	mov	x0, x23
  40879c:	mov	x2, x24
  4087a0:	bl	402790 <strncmp@plt>
  4087a4:	cbnz	w0, 40878c <wcrtomb@plt+0x5b2c>
  4087a8:	orr	w20, w19, #0x1
  4087ac:	ldr	x26, [x27, w20, uxtw #3]
  4087b0:	ldrb	w8, [x26]
  4087b4:	cbz	w8, 408888 <wcrtomb@plt+0x5c28>
  4087b8:	mov	x0, x26
  4087bc:	bl	4025c0 <strlen@plt>
  4087c0:	mov	x23, x0
  4087c4:	subs	x19, x23, x24
  4087c8:	b.ls	408894 <wcrtomb@plt+0x5c34>  // b.plast
  4087cc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4087d0:	add	x8, x8, #0x620
  4087d4:	ldp	x2, x9, [x8]
  4087d8:	add	x8, x19, x2
  4087dc:	add	x26, x8, #0x1
  4087e0:	cmp	x9, x26
  4087e4:	b.cs	40889c <wcrtomb@plt+0x5c3c>  // b.hs, b.nlast
  4087e8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4087ec:	ldr	x0, [x8, #1552]
  4087f0:	lsl	x9, x9, #1
  4087f4:	sub	x8, x25, x0
  4087f8:	cmp	x9, w8, sxtw
  4087fc:	b.cs	40883c <wcrtomb@plt+0x5bdc>  // b.hs, b.nlast
  408800:	mov	x1, x25
  408804:	bl	402590 <memmove@plt>
  408808:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  40880c:	add	x10, x10, #0x610
  408810:	ldp	x25, x8, [x10]
  408814:	ldr	x9, [x10, #24]
  408818:	sub	x8, x8, x25
  40881c:	add	x9, x9, x8
  408820:	cmp	x9, x26
  408824:	str	x9, [x10, #24]
  408828:	str	x25, [x10, #8]
  40882c:	b.hi	40889c <wcrtomb@plt+0x5c3c>  // b.pmore
  408830:	mov	x8, xzr
  408834:	lsl	x9, x9, #1
  408838:	mov	x0, x25
  40883c:	cmp	x9, x26
  408840:	csel	x9, x26, x9, cc  // cc = lo, ul, last
  408844:	mov	w10, #0x32                  	// #50
  408848:	cmp	x9, #0x32
  40884c:	csel	x9, x9, x10, hi  // hi = pmore
  408850:	sxtw	x21, w8
  408854:	add	x8, x21, x9
  408858:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40885c:	adds	x1, x8, #0x1
  408860:	str	x9, [x11, #1576]
  408864:	b.mi	409614 <wcrtomb@plt+0x69b4>  // b.first
  408868:	bl	4153c8 <wcrtomb@plt+0x12768>
  40886c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408870:	add	x25, x0, x21
  408874:	add	x8, x8, #0x610
  408878:	stp	x0, x25, [x8]
  40887c:	b	40889c <wcrtomb@plt+0x5c3c>
  408880:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  408884:	b	4088fc <wcrtomb@plt+0x5c9c>
  408888:	mov	w23, #0x1                   	// #1
  40888c:	subs	x19, x23, x24
  408890:	b.hi	4087cc <wcrtomb@plt+0x5b6c>  // b.pmore
  408894:	mov	x21, x22
  408898:	b.cs	4088d8 <wcrtomb@plt+0x5c78>  // b.hs, b.nlast
  40889c:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4088a0:	add	x21, x21, #0x618
  4088a4:	ldr	x9, [x21, #8]
  4088a8:	add	x8, x25, x22
  4088ac:	add	x1, x8, x24
  4088b0:	add	x0, x8, x23
  4088b4:	add	x8, x22, x24
  4088b8:	sub	x8, x9, x8
  4088bc:	add	x2, x8, #0x1
  4088c0:	bl	402590 <memmove@plt>
  4088c4:	ldp	x25, x8, [x21]
  4088c8:	add	x8, x8, x19
  4088cc:	str	x8, [x21, #8]
  4088d0:	ldr	x26, [x27, x20, lsl #3]
  4088d4:	add	x21, x19, x22
  4088d8:	add	x0, x25, x22
  4088dc:	mov	x1, x26
  4088e0:	mov	x2, x23
  4088e4:	bl	402580 <memcpy@plt>
  4088e8:	ldr	x20, [sp, #56]
  4088ec:	mov	x22, x21
  4088f0:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  4088f4:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  4088f8:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4088fc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408900:	ldr	x8, [x8, #1568]
  408904:	add	x22, x22, x24
  408908:	cmp	x8, x22
  40890c:	b.ls	408c78 <wcrtomb@plt+0x6018>  // b.plast
  408910:	ldr	w9, [x21, #2260]
  408914:	b	408730 <wcrtomb@plt+0x5ad0>
  408918:	ldr	x23, [x28, #24]
  40891c:	cbz	x23, 407f74 <wcrtomb@plt+0x5314>
  408920:	ldr	x8, [x28, #32]
  408924:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408928:	ldrb	w9, [x9, #1720]
  40892c:	sub	x24, x8, #0x1
  408930:	cbz	w9, 408958 <wcrtomb@plt+0x5cf8>
  408934:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408938:	add	x19, x19, #0x6b8
  40893c:	ldr	x3, [x19, #8]
  408940:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408944:	add	x0, x0, #0x448
  408948:	mov	w1, #0x1                   	// #1
  40894c:	mov	w2, #0x1                   	// #1
  408950:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408954:	strb	wzr, [x19]
  408958:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  40895c:	cbz	x24, 408974 <wcrtomb@plt+0x5d14>
  408960:	ldr	x3, [x19, #1728]
  408964:	mov	w1, #0x1                   	// #1
  408968:	mov	x0, x23
  40896c:	mov	x2, x24
  408970:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408974:	ldr	x3, [x19, #1728]
  408978:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  40897c:	add	x0, x0, #0x448
  408980:	mov	w1, #0x1                   	// #1
  408984:	mov	w2, #0x1                   	// #1
  408988:	bl	40b99c <wcrtomb@plt+0x8d3c>
  40898c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408990:	ldrb	w8, [x8, #1852]
  408994:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408998:	ldr	x0, [x19, #1728]
  40899c:	bl	40bbe8 <wcrtomb@plt+0x8f88>
  4089a0:	b	407f74 <wcrtomb@plt+0x5314>
  4089a4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4089a8:	ldr	x8, [x8, #1792]
  4089ac:	ldr	x26, [x28, #24]
  4089b0:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4089b4:	add	x19, x19, #0x6e8
  4089b8:	cbz	x8, 408e5c <wcrtomb@plt+0x61fc>
  4089bc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4089c0:	str	xzr, [x8, #1784]
  4089c4:	b	408e78 <wcrtomb@plt+0x6218>
  4089c8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4089cc:	ldrb	w9, [x8, #1704]
  4089d0:	cmp	w9, #0x1
  4089d4:	b.ne	407f74 <wcrtomb@plt+0x5314>  // b.any
  4089d8:	strb	wzr, [x8, #1704]
  4089dc:	ldr	x8, [x27]
  4089e0:	ldr	x9, [x28, #24]
  4089e4:	mov	w10, #0x28                  	// #40
  4089e8:	madd	x28, x9, x10, x8
  4089ec:	b	407f78 <wcrtomb@plt+0x5318>
  4089f0:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  4089f4:	add	x10, x10, #0x618
  4089f8:	ldr	w8, [x28, #24]
  4089fc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408a00:	ldp	x20, x22, [x10]
  408a04:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  408a08:	add	x10, x10, #0x6b8
  408a0c:	ldr	x9, [x9, #1120]
  408a10:	ldrb	w11, [x10]
  408a14:	ldr	x24, [x10, #8]
  408a18:	cmn	w8, #0x1
  408a1c:	csel	x25, x9, x8, eq  // eq = none
  408a20:	str	x27, [sp, #8]
  408a24:	cbz	w11, 408a48 <wcrtomb@plt+0x5de8>
  408a28:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408a2c:	add	x0, x0, #0x448
  408a30:	mov	w1, #0x1                   	// #1
  408a34:	mov	w2, #0x1                   	// #1
  408a38:	mov	x3, x24
  408a3c:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408a40:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408a44:	strb	wzr, [x8, #1720]
  408a48:	cbz	x22, 408ba0 <wcrtomb@plt+0x5f40>
  408a4c:	mov	x27, xzr
  408a50:	sxtw	x26, w25
  408a54:	b	408a78 <wcrtomb@plt+0x5e18>
  408a58:	add	x0, sp, #0x140
  408a5c:	mov	w1, #0x1                   	// #1
  408a60:	mov	x2, x23
  408a64:	mov	x3, x24
  408a68:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408a6c:	add	x27, x27, x23
  408a70:	add	x20, x20, #0x1
  408a74:	cbz	x22, 408ba0 <wcrtomb@plt+0x5f40>
  408a78:	ldrsb	w19, [x20]
  408a7c:	tbnz	w19, #31, 408a94 <wcrtomb@plt+0x5e34>
  408a80:	and	x21, x19, #0xff
  408a84:	bl	4029e0 <__ctype_b_loc@plt>
  408a88:	ldr	x8, [x0]
  408a8c:	ldrh	w8, [x8, x21, lsl #1]
  408a90:	tbnz	w8, #14, 408acc <wcrtomb@plt+0x5e6c>
  408a94:	mov	w8, #0x5c                  	// #92
  408a98:	strb	w8, [sp, #320]
  408a9c:	ldrb	w4, [x20]
  408aa0:	sub	w8, w4, #0x7
  408aa4:	cmp	w8, #0x6
  408aa8:	b.hi	408b00 <wcrtomb@plt+0x5ea0>  // b.pmore
  408aac:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  408ab0:	add	x9, x9, #0x10
  408ab4:	adr	x10, 408ac4 <wcrtomb@plt+0x5e64>
  408ab8:	ldrb	w11, [x9, x8]
  408abc:	add	x10, x10, x11, lsl #2
  408ac0:	br	x10
  408ac4:	mov	w8, #0x61                  	// #97
  408ac8:	b	408b40 <wcrtomb@plt+0x5ee0>
  408acc:	strb	w19, [sp, #320]
  408ad0:	ldrb	w8, [x20]
  408ad4:	cmp	w8, #0x5c
  408ad8:	ldr	x8, [sp, #40]
  408adc:	b.ne	408b48 <wcrtomb@plt+0x5ee8>  // b.any
  408ae0:	mov	w8, #0x5c                  	// #92
  408ae4:	b	408b40 <wcrtomb@plt+0x5ee0>
  408ae8:	mov	w8, #0x76                  	// #118
  408aec:	b	408b40 <wcrtomb@plt+0x5ee0>
  408af0:	mov	w8, #0x74                  	// #116
  408af4:	b	408b40 <wcrtomb@plt+0x5ee0>
  408af8:	mov	w8, #0x6e                  	// #110
  408afc:	b	408b40 <wcrtomb@plt+0x5ee0>
  408b00:	ldr	x19, [sp, #40]
  408b04:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xf5a8>
  408b08:	add	x3, x3, #0xeb4
  408b0c:	mov	w1, #0x1                   	// #1
  408b10:	mov	w2, #0xb3                  	// #179
  408b14:	mov	x0, x19
  408b18:	bl	4025d0 <__sprintf_chk@plt>
  408b1c:	mov	x0, x19
  408b20:	bl	4025c0 <strlen@plt>
  408b24:	add	x8, x19, x0
  408b28:	b	408b48 <wcrtomb@plt+0x5ee8>
  408b2c:	mov	w8, #0x62                  	// #98
  408b30:	b	408b40 <wcrtomb@plt+0x5ee0>
  408b34:	mov	w8, #0x66                  	// #102
  408b38:	b	408b40 <wcrtomb@plt+0x5ee0>
  408b3c:	mov	w8, #0x72                  	// #114
  408b40:	strb	w8, [sp, #321]
  408b44:	ldr	x8, [sp, #48]
  408b48:	add	x9, sp, #0x140
  408b4c:	sub	x22, x22, #0x1
  408b50:	cmp	w25, #0x1
  408b54:	sub	x23, x8, x9
  408b58:	b.lt	408a58 <wcrtomb@plt+0x5df8>  // b.tstop
  408b5c:	add	x8, x23, x27
  408b60:	cmp	x8, x26
  408b64:	b.cc	408a58 <wcrtomb@plt+0x5df8>  // b.lo, b.ul, b.last
  408b68:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  408b6c:	add	x0, x0, #0xf3a
  408b70:	mov	w1, #0x1                   	// #1
  408b74:	mov	w2, #0x1                   	// #1
  408b78:	mov	x3, x24
  408b7c:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408b80:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408b84:	add	x0, x0, #0x448
  408b88:	mov	w1, #0x1                   	// #1
  408b8c:	mov	w2, #0x1                   	// #1
  408b90:	mov	x3, x24
  408b94:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408b98:	mov	x27, xzr
  408b9c:	b	408a58 <wcrtomb@plt+0x5df8>
  408ba0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408ba4:	add	x0, x0, #0x152
  408ba8:	mov	w1, #0x1                   	// #1
  408bac:	mov	w2, #0x1                   	// #1
  408bb0:	mov	x3, x24
  408bb4:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408bb8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408bbc:	add	x0, x0, #0x448
  408bc0:	mov	w1, #0x1                   	// #1
  408bc4:	mov	w2, #0x1                   	// #1
  408bc8:	mov	x3, x24
  408bcc:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408bd0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408bd4:	ldrb	w8, [x8, #1852]
  408bd8:	cbz	w8, 408be4 <wcrtomb@plt+0x5f84>
  408bdc:	mov	x0, x24
  408be0:	bl	40bbe8 <wcrtomb@plt+0x8f88>
  408be4:	ldr	x27, [sp, #8]
  408be8:	ldr	x20, [sp, #56]
  408bec:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  408bf0:	add	x22, x22, #0x610
  408bf4:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  408bf8:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  408bfc:	b	407f74 <wcrtomb@plt+0x5314>
  408c00:	ldr	x8, [sp, #80]
  408c04:	ldr	x9, [x0, #16]
  408c08:	add	x8, x9, x8
  408c0c:	str	x8, [x0, #8]
  408c10:	b	407f60 <wcrtomb@plt+0x5300>
  408c14:	ldr	x8, [sp, #80]
  408c18:	ldr	x9, [x0, #16]
  408c1c:	add	x10, x9, x8
  408c20:	udiv	x11, x8, x9
  408c24:	neg	x8, x8
  408c28:	madd	x8, x11, x9, x8
  408c2c:	add	x8, x10, x8
  408c30:	str	x8, [x0, #8]
  408c34:	b	407f60 <wcrtomb@plt+0x5300>
  408c38:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408c3c:	add	x8, x8, #0x618
  408c40:	ldr	x9, [x8, #8]
  408c44:	cmp	x9, #0x1
  408c48:	b.lt	408c84 <wcrtomb@plt+0x6024>  // b.tstop
  408c4c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408c50:	add	x8, x8, #0x618
  408c54:	ldr	x8, [x8]
  408c58:	add	x9, x8, x9
  408c5c:	ldr	x10, [x28, #24]
  408c60:	ldrb	w11, [x8]
  408c64:	ldrb	w10, [x10, x11]
  408c68:	strb	w10, [x8], #1
  408c6c:	cmp	x8, x9
  408c70:	b.cc	408c5c <wcrtomb@plt+0x5ffc>  // b.lo, b.ul, b.last
  408c74:	b	408c84 <wcrtomb@plt+0x6024>
  408c78:	ldr	x27, [sp, #8]
  408c7c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  408c80:	add	x22, x22, #0x610
  408c84:	ldrb	w8, [x26, #1872]
  408c88:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408c8c:	ldr	x1, [x25, #1272]
  408c90:	ldp	x21, x20, [x22]
  408c94:	ldr	x19, [x22, #16]
  408c98:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408c9c:	add	x0, x0, #0xd5
  408ca0:	bl	402b50 <fputs_unlocked@plt>
  408ca4:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  408ca8:	cmp	x20, #0x0
  408cac:	csel	x20, x21, x20, eq  // eq = none
  408cb0:	ldrb	w0, [x20], #1
  408cb4:	sub	x19, x19, #0x1
  408cb8:	bl	406e4c <wcrtomb@plt+0x41ec>
  408cbc:	cbnz	x19, 408cb0 <wcrtomb@plt+0x6050>
  408cc0:	b	40940c <wcrtomb@plt+0x67ac>
  408cc4:	mov	w0, #0x33                  	// #51
  408cc8:	bl	415540 <wcrtomb@plt+0x128e0>
  408ccc:	ldr	q0, [sp, #16]
  408cd0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408cd4:	add	x8, x8, #0x6e8
  408cd8:	mov	w9, #0x1                   	// #1
  408cdc:	stp	x0, x0, [x8]
  408ce0:	str	q0, [x8, #16]
  408ce4:	strb	w9, [x8, #32]
  408ce8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408cec:	add	x8, x8, #0x70c
  408cf0:	str	xzr, [x8]
  408cf4:	cbz	w20, 408d50 <wcrtomb@plt+0x60f0>
  408cf8:	ldr	x8, [x28, #24]
  408cfc:	sub	w9, w20, #0x1
  408d00:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  408d04:	add	x1, x1, #0x442
  408d08:	strb	wzr, [x8, w9, sxtw]
  408d0c:	ldr	x0, [x28, #24]
  408d10:	bl	402780 <popen@plt>
  408d14:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408d18:	ldrb	w8, [x8, #1720]
  408d1c:	mov	x23, x0
  408d20:	cbz	w8, 408d48 <wcrtomb@plt+0x60e8>
  408d24:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408d28:	add	x19, x19, #0x6b8
  408d2c:	ldr	x3, [x19, #8]
  408d30:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408d34:	add	x0, x0, #0x448
  408d38:	mov	w1, #0x1                   	// #1
  408d3c:	mov	w2, #0x1                   	// #1
  408d40:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408d44:	strb	wzr, [x19]
  408d48:	cbnz	x23, 408d94 <wcrtomb@plt+0x6134>
  408d4c:	b	409608 <wcrtomb@plt+0x69a8>
  408d50:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  408d54:	add	x1, x1, #0x7c3
  408d58:	mov	w2, #0x1                   	// #1
  408d5c:	mov	x0, x22
  408d60:	bl	409da8 <wcrtomb@plt+0x7148>
  408d64:	ldr	x0, [x22, #8]
  408d68:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  408d6c:	add	x1, x1, #0x442
  408d70:	bl	402780 <popen@plt>
  408d74:	mov	x23, x0
  408d78:	cbnz	x23, 408d94 <wcrtomb@plt+0x6134>
  408d7c:	b	409608 <wcrtomb@plt+0x69a8>
  408d80:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408d84:	ldr	x3, [x8, #1728]
  408d88:	add	x0, sp, #0x140
  408d8c:	mov	w1, #0x1                   	// #1
  408d90:	bl	40b99c <wcrtomb@plt+0x8d3c>
  408d94:	ldrb	w8, [x23]
  408d98:	tbnz	w8, #4, 408dd4 <wcrtomb@plt+0x6174>
  408d9c:	add	x0, sp, #0x140
  408da0:	mov	w1, #0x1                   	// #1
  408da4:	mov	w2, #0x1000                	// #4096
  408da8:	mov	x3, x23
  408dac:	bl	402990 <fread_unlocked@plt>
  408db0:	cmp	w0, #0x1
  408db4:	b.lt	408d94 <wcrtomb@plt+0x6134>  // b.tstop
  408db8:	sxtw	x2, w0
  408dbc:	cbnz	w20, 408d80 <wcrtomb@plt+0x6120>
  408dc0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  408dc4:	add	x0, x0, #0x6e8
  408dc8:	add	x1, sp, #0x140
  408dcc:	bl	409da8 <wcrtomb@plt+0x7148>
  408dd0:	b	408d94 <wcrtomb@plt+0x6134>
  408dd4:	mov	x0, x23
  408dd8:	bl	402b80 <pclose@plt>
  408ddc:	cbz	w20, 408dfc <wcrtomb@plt+0x619c>
  408de0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408de4:	ldrb	w8, [x8, #1852]
  408de8:	ldr	x20, [sp, #56]
  408dec:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  408df0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408df4:	ldr	x0, [x8, #1728]
  408df8:	b	40899c <wcrtomb@plt+0x5d3c>
  408dfc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e00:	ldr	x9, [x8, #1784]
  408e04:	cbz	x9, 408e2c <wcrtomb@plt+0x61cc>
  408e08:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e0c:	ldr	x10, [x10, #1776]
  408e10:	sub	x9, x9, #0x1
  408e14:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e18:	ldrb	w11, [x11, #1096]
  408e1c:	ldrb	w10, [x10, x9]
  408e20:	cmp	w10, w11
  408e24:	b.ne	408e2c <wcrtomb@plt+0x61cc>  // b.any
  408e28:	str	x9, [x8, #1784]
  408e2c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e30:	add	x8, x8, #0x6e8
  408e34:	ldp	q1, q0, [x22, #16]
  408e38:	ldr	q2, [x22]
  408e3c:	ldp	q3, q4, [x8]
  408e40:	ldr	q5, [x8, #32]
  408e44:	ldr	x20, [sp, #56]
  408e48:	stp	q2, q1, [x8]
  408e4c:	stp	q3, q4, [x22]
  408e50:	str	q5, [x22, #32]
  408e54:	str	q0, [x8, #32]
  408e58:	b	407f74 <wcrtomb@plt+0x5314>
  408e5c:	mov	w0, #0x33                  	// #51
  408e60:	bl	415540 <wcrtomb@plt+0x128e0>
  408e64:	ldr	q0, [sp, #16]
  408e68:	mov	w8, #0x1                   	// #1
  408e6c:	stp	x0, x0, [x19]
  408e70:	strb	w8, [x19, #32]
  408e74:	str	q0, [x19, #16]
  408e78:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e7c:	add	x9, x9, #0x618
  408e80:	ldur	x8, [x9, #28]
  408e84:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  408e88:	add	x10, x10, #0x70c
  408e8c:	ldp	x1, x2, [x9]
  408e90:	str	x8, [x10]
  408e94:	ldrb	w8, [x26, #32]
  408e98:	ldr	x0, [x26]
  408e9c:	adrp	x4, 439000 <_obstack_memory_used@@Base+0x235a8>
  408ea0:	add	x4, x4, #0x718
  408ea4:	lsr	w8, w8, #4
  408ea8:	add	w5, w8, #0x1
  408eac:	mov	x3, xzr
  408eb0:	bl	40a904 <wcrtomb@plt+0x7ca4>
  408eb4:	cbz	w0, 4093cc <wcrtomb@plt+0x676c>
  408eb8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408ebc:	ldrb	w8, [x8, #1872]
  408ec0:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  408ec4:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  408ec8:	add	x20, x20, #0x720
  408ecc:	cbz	w8, 408f84 <wcrtomb@plt+0x6324>
  408ed0:	ldr	x8, [x22, #1816]
  408ed4:	cbz	x8, 408f84 <wcrtomb@plt+0x6324>
  408ed8:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  408edc:	ldr	x8, [x19, #1824]
  408ee0:	ldr	x8, [x8]
  408ee4:	cmn	x8, #0x1
  408ee8:	b.eq	408f00 <wcrtomb@plt+0x62a0>  // b.none
  408eec:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408ef0:	add	x0, x0, #0x154
  408ef4:	bl	402980 <puts@plt>
  408ef8:	ldr	x8, [x22, #1816]
  408efc:	cbz	x8, 408f84 <wcrtomb@plt+0x6324>
  408f00:	mov	x23, xzr
  408f04:	b	408f24 <wcrtomb@plt+0x62c4>
  408f08:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  408f0c:	add	x0, x0, #0x180
  408f10:	bl	402980 <puts@plt>
  408f14:	ldr	x8, [x22, #1816]
  408f18:	add	x23, x23, #0x1
  408f1c:	cmp	x8, x23
  408f20:	b.ls	408f84 <wcrtomb@plt+0x6324>  // b.plast
  408f24:	ldr	x8, [x19, #1824]
  408f28:	ldr	x3, [x8, x23, lsl #3]
  408f2c:	cmn	x3, #0x1
  408f30:	b.eq	408f84 <wcrtomb@plt+0x6324>  // b.none
  408f34:	ldr	x8, [x20, #8]
  408f38:	lsl	x21, x23, #3
  408f3c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  408f40:	add	x1, x1, #0x16c
  408f44:	ldr	w4, [x8, x21]
  408f48:	mov	w0, #0x1                   	// #1
  408f4c:	mov	w2, w23
  408f50:	bl	4027e0 <__printf_chk@plt>
  408f54:	ldp	x8, x9, [x20]
  408f58:	ldr	x8, [x8, x21]
  408f5c:	ldr	x9, [x9, x21]
  408f60:	subs	x1, x9, x8
  408f64:	b.eq	408f08 <wcrtomb@plt+0x62a8>  // b.none
  408f68:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408f6c:	ldr	x9, [x9, #1560]
  408f70:	ldr	x3, [x25, #1272]
  408f74:	mov	w2, #0x1                   	// #1
  408f78:	add	x0, x9, x8
  408f7c:	bl	4025b0 <fwrite_unlocked@plt>
  408f80:	b	408f08 <wcrtomb@plt+0x62a8>
  408f84:	ldr	x8, [x26, #8]
  408f88:	cbnz	x8, 409048 <wcrtomb@plt+0x63e8>
  408f8c:	ldr	x8, [x26, #16]
  408f90:	cmp	x8, #0x1
  408f94:	b.hi	409048 <wcrtomb@plt+0x63e8>  // b.pmore
  408f98:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  408f9c:	ldr	x8, [x8, #1824]
  408fa0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408fa4:	ldr	x8, [x8]
  408fa8:	cbnz	x8, 409008 <wcrtomb@plt+0x63a8>
  408fac:	ldrb	w10, [x26, #32]
  408fb0:	tbnz	w10, #0, 409008 <wcrtomb@plt+0x63a8>
  408fb4:	ldr	x8, [x9, #1832]
  408fb8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  408fbc:	mov	w10, #0x1                   	// #1
  408fc0:	adrp	x12, 439000 <_obstack_memory_used@@Base+0x235a8>
  408fc4:	strb	w10, [x9, #1704]
  408fc8:	add	x12, x12, #0x618
  408fcc:	ldr	x9, [x8]
  408fd0:	ldp	x10, x11, [x12]
  408fd4:	add	x10, x10, x9
  408fd8:	sub	x9, x11, x9
  408fdc:	stp	x10, x9, [x12]
  408fe0:	ldr	x8, [x8]
  408fe4:	ldr	x9, [x12, #16]
  408fe8:	sub	x8, x9, x8
  408fec:	str	x8, [x12, #16]
  408ff0:	b	409030 <wcrtomb@plt+0x63d0>
  408ff4:	ldr	x20, [sp, #56]
  408ff8:	b	407f78 <wcrtomb@plt+0x5318>
  408ffc:	ldr	x0, [sp, #264]
  409000:	bl	402a10 <free@plt>
  409004:	b	407f74 <wcrtomb@plt+0x5314>
  409008:	ldr	x10, [x9, #1832]
  40900c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409010:	ldr	x11, [x9, #1568]
  409014:	ldr	x10, [x10]
  409018:	cmp	x10, x11
  40901c:	b.ne	409048 <wcrtomb@plt+0x63e8>  // b.any
  409020:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  409024:	mov	w11, #0x1                   	// #1
  409028:	strb	w11, [x10, #1704]
  40902c:	str	x8, [x9, #1568]
  409030:	ldr	x20, [sp, #56]
  409034:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  409038:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  40903c:	add	x22, x22, #0x610
  409040:	add	x19, x19, #0x6e8
  409044:	b	409258 <wcrtomb@plt+0x65f8>
  409048:	mov	x21, x27
  40904c:	mov	x27, xzr
  409050:	mov	x25, xzr
  409054:	mov	x23, xzr
  409058:	ldp	x8, x9, [x20]
  40905c:	ldr	x19, [x8]
  409060:	ldr	x24, [x9]
  409064:	subs	x2, x19, x23
  409068:	b.ls	409088 <wcrtomb@plt+0x6428>  // b.plast
  40906c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409070:	ldr	x8, [x8, #1560]
  409074:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409078:	add	x0, x0, #0x6e8
  40907c:	add	x1, x8, x23
  409080:	bl	409da8 <wcrtomb@plt+0x7148>
  409084:	mov	x23, x19
  409088:	cmp	x19, x25
  40908c:	sub	x25, x24, x19
  409090:	b.hi	4090b4 <wcrtomb@plt+0x6454>  // b.pmore
  409094:	cbz	x27, 4090b4 <wcrtomb@plt+0x6454>
  409098:	cbnz	x25, 4090b4 <wcrtomb@plt+0x6454>
  40909c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4090a0:	ldr	x8, [x8, #1568]
  4090a4:	cmp	x23, x8
  4090a8:	b.cs	4091e0 <wcrtomb@plt+0x6580>  // b.hs, b.nlast
  4090ac:	mov	w25, #0x1                   	// #1
  4090b0:	b	4090c8 <wcrtomb@plt+0x6468>
  4090b4:	ldr	x8, [x26, #16]
  4090b8:	add	x27, x27, #0x1
  4090bc:	cmp	x27, x8
  4090c0:	b.cs	4090ec <wcrtomb@plt+0x648c>  // b.hs, b.nlast
  4090c4:	cbz	x25, 40909c <wcrtomb@plt+0x643c>
  4090c8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4090cc:	ldr	x8, [x8, #1560]
  4090d0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4090d4:	add	x0, x0, #0x6e8
  4090d8:	mov	x2, x25
  4090dc:	add	x1, x8, x19
  4090e0:	bl	409da8 <wcrtomb@plt+0x7148>
  4090e4:	add	x23, x25, x19
  4090e8:	b	40919c <wcrtomb@plt+0x653c>
  4090ec:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4090f0:	mov	w9, #0x1                   	// #1
  4090f4:	strb	w9, [x8, #1704]
  4090f8:	ldr	x19, [x26, #8]
  4090fc:	cbz	x19, 409190 <wcrtomb@plt+0x6530>
  409100:	mov	w8, wzr
  409104:	b	409128 <wcrtomb@plt+0x64c8>
  409108:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40910c:	ldr	x9, [x9, #1560]
  409110:	mov	w2, w23
  409114:	add	x0, x9, x8
  409118:	bl	40a26c <wcrtomb@plt+0x760c>
  40911c:	mov	w8, wzr
  409120:	ldr	x19, [x19, #24]
  409124:	cbz	x19, 409190 <wcrtomb@plt+0x6530>
  409128:	ldp	w25, w9, [x19, #16]
  40912c:	ldr	x1, [x19, #8]
  409130:	tst	w9, #0xc
  409134:	csel	w8, w8, wzr, eq  // eq = none
  409138:	orr	w23, w8, w9
  40913c:	cbz	x1, 409150 <wcrtomb@plt+0x64f0>
  409140:	ldr	x0, [x19]
  409144:	mov	w2, w23
  409148:	bl	40a26c <wcrtomb@plt+0x760c>
  40914c:	and	w23, w23, #0xfffffff3
  409150:	tbnz	w25, #31, 40911c <wcrtomb@plt+0x64bc>
  409154:	ldr	x8, [x22, #1816]
  409158:	cmp	x8, x25
  40915c:	b.ls	40911c <wcrtomb@plt+0x64bc>  // b.plast
  409160:	ldp	x9, x8, [x20]
  409164:	lsl	x10, x25, #3
  409168:	ldr	x11, [x8, x10]
  40916c:	ldr	x8, [x9, x10]
  409170:	subs	x1, x11, x8
  409174:	b.ne	409108 <wcrtomb@plt+0x64a8>  // b.any
  409178:	ldrb	w8, [x19, #20]
  40917c:	and	w9, w23, #0xc
  409180:	tst	w8, #0xc
  409184:	csel	w8, wzr, w9, eq  // eq = none
  409188:	ldr	x19, [x19, #24]
  40918c:	cbnz	x19, 409128 <wcrtomb@plt+0x64c8>
  409190:	ldrb	w8, [x26, #32]
  409194:	mov	x23, x24
  409198:	tbz	w8, #0, 4091e0 <wcrtomb@plt+0x6580>
  40919c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091a0:	ldr	x2, [x8, #1568]
  4091a4:	cmp	x23, x2
  4091a8:	b.hi	4091e0 <wcrtomb@plt+0x6580>  // b.pmore
  4091ac:	adrp	x4, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091b0:	add	x4, x4, #0x718
  4091b4:	ldr	x8, [x4, #16]
  4091b8:	ldrb	w10, [x26, #32]
  4091bc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091c0:	ldr	x0, [x26]
  4091c4:	ldr	x1, [x9, #1560]
  4091c8:	ldr	x25, [x8]
  4091cc:	lsr	w8, w10, #4
  4091d0:	add	w5, w8, #0x1
  4091d4:	mov	x3, x23
  4091d8:	bl	40a904 <wcrtomb@plt+0x7ca4>
  4091dc:	cbnz	w0, 409058 <wcrtomb@plt+0x63f8>
  4091e0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091e4:	ldr	x8, [x8, #1568]
  4091e8:	ldr	x20, [sp, #56]
  4091ec:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091f0:	subs	x2, x8, x23
  4091f4:	b.ls	409210 <wcrtomb@plt+0x65b0>  // b.plast
  4091f8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4091fc:	ldr	x8, [x8, #1560]
  409200:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409204:	add	x0, x0, #0x6e8
  409208:	add	x1, x8, x23
  40920c:	bl	409da8 <wcrtomb@plt+0x7148>
  409210:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  409214:	add	x22, x22, #0x610
  409218:	ldrb	w8, [x22, #32]
  40921c:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  409220:	add	x19, x19, #0x6e8
  409224:	ldp	q0, q3, [x19]
  409228:	strb	w8, [x19, #32]
  40922c:	ldp	q2, q1, [x22]
  409230:	ldr	w9, [x22, #32]
  409234:	ldr	w8, [x19, #32]
  409238:	stp	q0, q3, [x22]
  40923c:	stp	q2, q1, [x19]
  409240:	str	w9, [x19, #32]
  409244:	str	w8, [x22, #32]
  409248:	ldr	x8, [x26, #16]
  40924c:	cmp	x27, x8
  409250:	mov	x27, x21
  409254:	b.cc	4093cc <wcrtomb@plt+0x676c>  // b.lo, b.ul, b.last
  409258:	ldrb	w8, [x26, #32]
  40925c:	tbz	w8, #1, 409280 <wcrtomb@plt+0x6620>
  409260:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409264:	add	x8, x8, #0x618
  409268:	ldp	x0, x1, [x8]
  40926c:	ldrb	w2, [x8, #24]
  409270:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  409274:	add	x3, x3, #0x6b0
  409278:	bl	409f08 <wcrtomb@plt+0x72a8>
  40927c:	ldrb	w8, [x26, #32]
  409280:	tbz	w8, #3, 40938c <wcrtomb@plt+0x672c>
  409284:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409288:	ldr	x8, [x8, #1792]
  40928c:	cbz	x8, 40929c <wcrtomb@plt+0x663c>
  409290:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409294:	str	xzr, [x8, #1784]
  409298:	b	4092b8 <wcrtomb@plt+0x6658>
  40929c:	mov	w0, #0x33                  	// #51
  4092a0:	bl	415540 <wcrtomb@plt+0x128e0>
  4092a4:	ldr	q0, [sp, #16]
  4092a8:	mov	w8, #0x1                   	// #1
  4092ac:	stp	x0, x0, [x19]
  4092b0:	strb	w8, [x19, #32]
  4092b4:	str	q0, [x19, #16]
  4092b8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4092bc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  4092c0:	add	x8, x8, #0x70c
  4092c4:	add	x1, x1, #0x7c3
  4092c8:	mov	w2, #0x1                   	// #1
  4092cc:	mov	x0, x22
  4092d0:	str	xzr, [x8]
  4092d4:	bl	409da8 <wcrtomb@plt+0x7148>
  4092d8:	ldr	x0, [x22, #8]
  4092dc:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4092e0:	add	x1, x1, #0x442
  4092e4:	bl	402780 <popen@plt>
  4092e8:	cbz	x0, 409618 <wcrtomb@plt+0x69b8>
  4092ec:	mov	x23, x0
  4092f0:	ldrb	w8, [x23]
  4092f4:	tbnz	w8, #4, 40932c <wcrtomb@plt+0x66cc>
  4092f8:	add	x0, sp, #0x140
  4092fc:	mov	w1, #0x1                   	// #1
  409300:	mov	w2, #0x1000                	// #4096
  409304:	mov	x3, x23
  409308:	bl	402990 <fread_unlocked@plt>
  40930c:	cmp	w0, #0x1
  409310:	b.lt	4092f0 <wcrtomb@plt+0x6690>  // b.tstop
  409314:	sxtw	x2, w0
  409318:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  40931c:	add	x0, x0, #0x6e8
  409320:	add	x1, sp, #0x140
  409324:	bl	409da8 <wcrtomb@plt+0x7148>
  409328:	b	4092f0 <wcrtomb@plt+0x6690>
  40932c:	mov	x0, x23
  409330:	bl	402b80 <pclose@plt>
  409334:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409338:	add	x9, x9, #0x6e8
  40933c:	ldp	q1, q2, [x9]
  409340:	ldp	q3, q0, [x22, #16]
  409344:	ldr	q4, [x22]
  409348:	ldr	q5, [x9, #32]
  40934c:	stp	q1, q2, [x22]
  409350:	ldr	x8, [x22, #16]
  409354:	stp	q4, q3, [x9]
  409358:	str	q5, [x22, #32]
  40935c:	str	q0, [x9, #32]
  409360:	cbz	x8, 40938c <wcrtomb@plt+0x672c>
  409364:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409368:	ldr	x9, [x9, #1560]
  40936c:	sub	x8, x8, #0x1
  409370:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  409374:	ldrb	w10, [x10, #1096]
  409378:	ldrb	w9, [x9, x8]
  40937c:	cmp	w9, w10
  409380:	b.ne	40938c <wcrtomb@plt+0x672c>  // b.any
  409384:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409388:	str	x8, [x9, #1568]
  40938c:	ldrb	w8, [x26, #32]
  409390:	tbz	w8, #2, 4093b0 <wcrtomb@plt+0x6750>
  409394:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409398:	add	x8, x8, #0x618
  40939c:	ldp	x0, x1, [x8]
  4093a0:	ldrb	w2, [x8, #24]
  4093a4:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  4093a8:	add	x3, x3, #0x6b0
  4093ac:	bl	409f08 <wcrtomb@plt+0x72a8>
  4093b0:	ldr	x3, [x26, #24]
  4093b4:	cbz	x3, 4093cc <wcrtomb@plt+0x676c>
  4093b8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4093bc:	add	x8, x8, #0x618
  4093c0:	ldp	x0, x1, [x8]
  4093c4:	ldrb	w2, [x8, #24]
  4093c8:	bl	409f08 <wcrtomb@plt+0x72a8>
  4093cc:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  4093d0:	ldrb	w8, [x26, #1872]
  4093d4:	cbz	w8, 407f74 <wcrtomb@plt+0x5314>
  4093d8:	ldr	x1, [x25, #1272]
  4093dc:	ldp	x21, x20, [x22]
  4093e0:	ldr	x19, [x22, #16]
  4093e4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4093e8:	add	x0, x0, #0xd5
  4093ec:	bl	402b50 <fputs_unlocked@plt>
  4093f0:	cbz	x19, 40940c <wcrtomb@plt+0x67ac>
  4093f4:	cmp	x20, #0x0
  4093f8:	csel	x20, x21, x20, eq  // eq = none
  4093fc:	ldrb	w0, [x20], #1
  409400:	sub	x19, x19, #0x1
  409404:	bl	406e4c <wcrtomb@plt+0x41ec>
  409408:	cbnz	x19, 4093fc <wcrtomb@plt+0x679c>
  40940c:	ldr	x0, [x25, #1272]
  409410:	ldp	x8, x9, [x0, #40]
  409414:	cmp	x8, x9
  409418:	b.cs	409434 <wcrtomb@plt+0x67d4>  // b.hs, b.nlast
  40941c:	add	x9, x8, #0x1
  409420:	mov	w10, #0xa                   	// #10
  409424:	str	x9, [x0, #40]
  409428:	strb	w10, [x8]
  40942c:	ldr	x20, [sp, #56]
  409430:	b	407f74 <wcrtomb@plt+0x5314>
  409434:	mov	w1, #0xa                   	// #10
  409438:	bl	402960 <__overflow@plt>
  40943c:	b	40942c <wcrtomb@plt+0x67cc>
  409440:	mov	w1, #0xa                   	// #10
  409444:	bl	402960 <__overflow@plt>
  409448:	b	407f74 <wcrtomb@plt+0x5314>
  40944c:	mov	w1, #0xa                   	// #10
  409450:	bl	402960 <__overflow@plt>
  409454:	b	40859c <wcrtomb@plt+0x593c>
  409458:	mov	w1, #0xa                   	// #10
  40945c:	bl	402960 <__overflow@plt>
  409460:	b	407f78 <wcrtomb@plt+0x5318>
  409464:	cbz	w8, 407d3c <wcrtomb@plt+0x50dc>
  409468:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40946c:	add	x0, x0, #0x144
  409470:	bl	402980 <puts@plt>
  409474:	b	407d3c <wcrtomb@plt+0x50dc>
  409478:	ldr	w8, [x28, #16]
  40947c:	cmp	w8, #0x1
  409480:	b.eq	409510 <wcrtomb@plt+0x68b0>  // b.none
  409484:	ldr	x23, [x28, #24]
  409488:	cbz	x23, 409510 <wcrtomb@plt+0x68b0>
  40948c:	ldr	x8, [x28, #32]
  409490:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409494:	ldrb	w9, [x9, #1720]
  409498:	sub	x24, x8, #0x1
  40949c:	cbz	w9, 4094c4 <wcrtomb@plt+0x6864>
  4094a0:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4094a4:	add	x19, x19, #0x6b8
  4094a8:	ldr	x3, [x19, #8]
  4094ac:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4094b0:	add	x0, x0, #0x448
  4094b4:	mov	w1, #0x1                   	// #1
  4094b8:	mov	w2, #0x1                   	// #1
  4094bc:	bl	40b99c <wcrtomb@plt+0x8d3c>
  4094c0:	strb	wzr, [x19]
  4094c4:	cbz	x24, 4094e0 <wcrtomb@plt+0x6880>
  4094c8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4094cc:	ldr	x3, [x8, #1728]
  4094d0:	mov	w1, #0x1                   	// #1
  4094d4:	mov	x0, x23
  4094d8:	mov	x2, x24
  4094dc:	bl	40b99c <wcrtomb@plt+0x8d3c>
  4094e0:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4094e4:	ldr	x3, [x19, #1728]
  4094e8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4094ec:	add	x0, x0, #0x448
  4094f0:	mov	w1, #0x1                   	// #1
  4094f4:	mov	w2, #0x1                   	// #1
  4094f8:	bl	40b99c <wcrtomb@plt+0x8d3c>
  4094fc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409500:	ldrb	w8, [x8, #1852]
  409504:	cbz	w8, 409510 <wcrtomb@plt+0x68b0>
  409508:	ldr	x0, [x19, #1728]
  40950c:	bl	40bbe8 <wcrtomb@plt+0x8f88>
  409510:	ldrb	w8, [x26, #1872]
  409514:	cbz	w8, 407d48 <wcrtomb@plt+0x50e8>
  409518:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40951c:	add	x0, x0, #0x144
  409520:	bl	402980 <puts@plt>
  409524:	b	407d48 <wcrtomb@plt+0x50e8>
  409528:	ldrb	w8, [x26, #1872]
  40952c:	cbz	w8, 40953c <wcrtomb@plt+0x68dc>
  409530:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  409534:	add	x0, x0, #0x144
  409538:	bl	402980 <puts@plt>
  40953c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409540:	ldr	x9, [x8, #1568]
  409544:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  409548:	ldr	w10, [x10, #2264]
  40954c:	sub	x1, x9, #0x1
  409550:	str	x1, [x8, #1568]
  409554:	cbnz	w10, 407d48 <wcrtomb@plt+0x50e8>
  409558:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40955c:	ldrb	w8, [x8, #1856]
  409560:	cbnz	w8, 407d48 <wcrtomb@plt+0x50e8>
  409564:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409568:	add	x8, x8, #0x618
  40956c:	ldr	x0, [x8]
  409570:	b	407d88 <wcrtomb@plt+0x5128>
  409574:	mov	w1, #0xa                   	// #10
  409578:	bl	402960 <__overflow@plt>
  40957c:	b	407e0c <wcrtomb@plt+0x51ac>
  409580:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409584:	ldrb	w8, [x8, #1856]
  409588:	cbnz	w8, 4095a8 <wcrtomb@plt+0x6948>
  40958c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409590:	add	x8, x8, #0x618
  409594:	ldp	x0, x1, [x8]
  409598:	ldrb	w2, [x8, #24]
  40959c:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  4095a0:	add	x3, x3, #0x6b0
  4095a4:	bl	409f08 <wcrtomb@plt+0x72a8>
  4095a8:	bl	40997c <wcrtomb@plt+0x6d1c>
  4095ac:	ldr	w8, [x28, #24]
  4095b0:	cmn	w8, #0x1
  4095b4:	csel	w19, wzr, w8, eq  // eq = none
  4095b8:	add	x0, sp, #0x40
  4095bc:	bl	40979c <wcrtomb@plt+0x6b3c>
  4095c0:	ldr	x8, [sp, #72]
  4095c4:	cmp	x8, #0x0
  4095c8:	mov	w8, #0x2                   	// #2
  4095cc:	csel	w0, w19, w8, eq  // eq = none
  4095d0:	add	sp, sp, #0x1, lsl #12
  4095d4:	add	sp, sp, #0x1e0
  4095d8:	ldp	x20, x19, [sp, #80]
  4095dc:	ldp	x22, x21, [sp, #64]
  4095e0:	ldp	x24, x23, [sp, #48]
  4095e4:	ldp	x26, x25, [sp, #32]
  4095e8:	ldp	x28, x27, [sp, #16]
  4095ec:	ldp	x29, x30, [sp], #96
  4095f0:	ret
  4095f4:	mov	w19, wzr
  4095f8:	b	4095b8 <wcrtomb@plt+0x6958>
  4095fc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  409600:	add	x0, x0, #0x108
  409604:	bl	40b53c <wcrtomb@plt+0x88dc>
  409608:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40960c:	add	x1, x1, #0xe9
  409610:	b	409634 <wcrtomb@plt+0x69d4>
  409614:	bl	41563c <wcrtomb@plt+0x129dc>
  409618:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40961c:	add	x1, x1, #0xe9
  409620:	mov	w2, #0x5                   	// #5
  409624:	bl	402b40 <dcgettext@plt>
  409628:	bl	40b53c <wcrtomb@plt+0x88dc>
  40962c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  409630:	add	x1, x1, #0x1e
  409634:	mov	w2, #0x5                   	// #5
  409638:	mov	x0, xzr
  40963c:	bl	402b40 <dcgettext@plt>
  409640:	bl	40b53c <wcrtomb@plt+0x88dc>
  409644:	mov	w0, wzr
  409648:	ret
  40964c:	stp	x29, x30, [sp, #-64]!
  409650:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409654:	ldr	x8, [x8, #1696]
  409658:	stp	x22, x21, [sp, #32]
  40965c:	stp	x20, x19, [sp, #48]
  409660:	mov	w21, w2
  409664:	mov	x19, x1
  409668:	mov	x20, x0
  40966c:	stp	x24, x23, [sp, #16]
  409670:	mov	x29, sp
  409674:	cbz	x8, 40967c <wcrtomb@plt+0x6a1c>
  409678:	bl	40997c <wcrtomb@plt+0x6d1c>
  40967c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409680:	strb	wzr, [x8, #1704]
  409684:	cbnz	w21, 409690 <wcrtomb@plt+0x6a30>
  409688:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40968c:	str	xzr, [x8, #1568]
  409690:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409694:	mov	w9, #0x1                   	// #1
  409698:	strb	w9, [x8, #1584]
  40969c:	ldr	x8, [x20, #32]
  4096a0:	mov	x0, x20
  4096a4:	blr	x8
  4096a8:	tbz	w0, #0, 4096c0 <wcrtomb@plt+0x6a60>
  4096ac:	ldr	x8, [x20, #16]
  4096b0:	mov	w0, #0x1                   	// #1
  4096b4:	add	x8, x8, #0x1
  4096b8:	str	x8, [x20, #16]
  4096bc:	b	409788 <wcrtomb@plt+0x6b28>
  4096c0:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4096c4:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  4096c8:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4096cc:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  4096d0:	b	409704 <wcrtomb@plt+0x6aa4>
  4096d4:	ldrb	w9, [x23, #1860]
  4096d8:	ldr	x8, [x20]
  4096dc:	strb	w9, [x20, #24]
  4096e0:	add	x9, x8, #0x8
  4096e4:	str	x9, [x20]
  4096e8:	ldr	x0, [x8]
  4096ec:	mov	x1, x20
  4096f0:	bl	409ad4 <wcrtomb@plt+0x6e74>
  4096f4:	ldr	x8, [x20, #32]
  4096f8:	mov	x0, x20
  4096fc:	blr	x8
  409700:	tbnz	w0, #0, 4096ac <wcrtomb@plt+0x6a4c>
  409704:	mov	x0, x20
  409708:	bl	40979c <wcrtomb@plt+0x6b3c>
  40970c:	ldr	x8, [x20]
  409710:	ldr	x9, [x8]
  409714:	cbz	x9, 409784 <wcrtomb@plt+0x6b24>
  409718:	ldrb	w9, [x20, #24]
  40971c:	cbz	w9, 4096e0 <wcrtomb@plt+0x6a80>
  409720:	str	xzr, [x20, #16]
  409724:	str	xzr, [x21, #1616]
  409728:	ldr	w8, [x19, #16]
  40972c:	cbz	w8, 409770 <wcrtomb@plt+0x6b10>
  409730:	ldr	x9, [x19]
  409734:	b	409748 <wcrtomb@plt+0x6ae8>
  409738:	mov	w10, wzr
  40973c:	str	w10, [x9, #16]
  409740:	add	x9, x9, #0x28
  409744:	cbz	w8, 409770 <wcrtomb@plt+0x6b10>
  409748:	ldr	x10, [x9]
  40974c:	sub	w8, w8, #0x1
  409750:	cbz	x10, 409738 <wcrtomb@plt+0x6ad8>
  409754:	ldr	w11, [x10]
  409758:	cmp	w11, #0x2
  40975c:	b.ne	409738 <wcrtomb@plt+0x6ad8>  // b.any
  409760:	ldr	x10, [x10, #8]
  409764:	cbnz	x10, 409738 <wcrtomb@plt+0x6ad8>
  409768:	mov	w10, #0x1                   	// #1
  40976c:	b	40973c <wcrtomb@plt+0x6adc>
  409770:	bl	4056a4 <wcrtomb@plt+0x2a44>
  409774:	ldr	x8, [x22, #1880]
  409778:	cbz	x8, 4096d4 <wcrtomb@plt+0x6a74>
  40977c:	strb	wzr, [x24, #1720]
  409780:	b	4096d4 <wcrtomb@plt+0x6a74>
  409784:	mov	w0, wzr
  409788:	ldp	x20, x19, [sp, #48]
  40978c:	ldp	x22, x21, [sp, #32]
  409790:	ldp	x24, x23, [sp, #16]
  409794:	ldp	x29, x30, [sp], #64
  409798:	ret
  40979c:	stp	x29, x30, [sp, #-80]!
  4097a0:	stp	x26, x25, [sp, #16]
  4097a4:	stp	x24, x23, [sp, #32]
  4097a8:	stp	x22, x21, [sp, #48]
  4097ac:	stp	x20, x19, [sp, #64]
  4097b0:	mov	x19, x0
  4097b4:	ldr	x0, [x0, #184]
  4097b8:	adrp	x8, 409000 <wcrtomb@plt+0x63a0>
  4097bc:	add	x8, x8, #0x644
  4097c0:	mov	x29, sp
  4097c4:	str	x8, [x19, #32]
  4097c8:	cbz	x0, 409964 <wcrtomb@plt+0x6d04>
  4097cc:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  4097d0:	ldr	x8, [x24, #1880]
  4097d4:	cbz	x8, 409914 <wcrtomb@plt+0x6cb4>
  4097d8:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4097dc:	ldr	x8, [x23, #1728]
  4097e0:	cbz	x8, 409914 <wcrtomb@plt+0x6cb4>
  4097e4:	ldr	x20, [x19, #48]
  4097e8:	bl	4026b0 <fileno@plt>
  4097ec:	ldr	x8, [x23, #1728]
  4097f0:	mov	w21, w0
  4097f4:	mov	x0, x8
  4097f8:	bl	4026b0 <fileno@plt>
  4097fc:	ldp	w1, w2, [x19, #80]
  409800:	mov	w22, w0
  409804:	bl	402c00 <fchown@plt>
  409808:	cmn	w0, #0x1
  40980c:	b.ne	409820 <wcrtomb@plt+0x6bc0>  // b.any
  409810:	ldr	w2, [x19, #84]
  409814:	mov	w1, #0xffffffff            	// #-1
  409818:	mov	w0, w22
  40981c:	bl	402c00 <fchown@plt>
  409820:	ldp	x2, x0, [x19, #40]
  409824:	ldr	w4, [x19, #72]
  409828:	mov	w1, w21
  40982c:	mov	w3, w22
  409830:	bl	40c26c <wcrtomb@plt+0x960c>
  409834:	ldr	x0, [x19, #184]
  409838:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  40983c:	ldr	x0, [x23, #1728]
  409840:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  409844:	ldr	x23, [x24, #1880]
  409848:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40984c:	add	x1, x1, #0x1b0
  409850:	mov	x0, x23
  409854:	bl	4029d0 <strcmp@plt>
  409858:	cbz	w0, 409944 <wcrtomb@plt+0x6ce4>
  40985c:	mov	x0, x20
  409860:	bl	4025c0 <strlen@plt>
  409864:	mov	x22, x0
  409868:	mov	x0, x23
  40986c:	bl	4025c0 <strlen@plt>
  409870:	mov	x21, x0
  409874:	mov	w1, #0x2a                  	// #42
  409878:	mov	x0, x23
  40987c:	bl	402a50 <strchr@plt>
  409880:	cbz	x0, 4098a4 <wcrtomb@plt+0x6c44>
  409884:	sub	w23, w22, #0x1
  409888:	add	x0, x0, #0x1
  40988c:	mov	w1, #0x2a                  	// #42
  409890:	mov	w25, w21
  409894:	bl	402a50 <strchr@plt>
  409898:	add	w21, w21, w23
  40989c:	cbnz	x0, 409888 <wcrtomb@plt+0x6c28>
  4098a0:	add	w21, w23, w25
  4098a4:	add	w8, w21, #0x1
  4098a8:	sxtw	x0, w8
  4098ac:	bl	415348 <wcrtomb@plt+0x126e8>
  4098b0:	ldr	x23, [x24, #1880]
  4098b4:	mov	x21, x0
  4098b8:	mov	w1, #0x2a                  	// #42
  4098bc:	mov	x0, x23
  4098c0:	bl	402a50 <strchr@plt>
  4098c4:	cbz	x0, 40991c <wcrtomb@plt+0x6cbc>
  4098c8:	mov	x24, x0
  4098cc:	sxtw	x26, w22
  4098d0:	mov	x22, x21
  4098d4:	sub	x25, x24, x23
  4098d8:	mov	x0, x22
  4098dc:	mov	x1, x23
  4098e0:	mov	x2, x25
  4098e4:	bl	402580 <memcpy@plt>
  4098e8:	add	x0, x22, x25
  4098ec:	mov	x1, x20
  4098f0:	bl	402ab0 <strcpy@plt>
  4098f4:	add	x23, x24, #0x1
  4098f8:	add	x22, x0, x26
  4098fc:	mov	w1, #0x2a                  	// #42
  409900:	mov	x0, x23
  409904:	bl	402a50 <strchr@plt>
  409908:	mov	x24, x0
  40990c:	cbnz	x0, 4098d4 <wcrtomb@plt+0x6c74>
  409910:	b	409920 <wcrtomb@plt+0x6cc0>
  409914:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  409918:	b	409960 <wcrtomb@plt+0x6d00>
  40991c:	mov	x22, x21
  409920:	mov	x0, x22
  409924:	mov	x1, x23
  409928:	bl	402ab0 <strcpy@plt>
  40992c:	ldr	x2, [x19, #40]
  409930:	mov	x0, x20
  409934:	mov	x1, x21
  409938:	bl	40bfc8 <wcrtomb@plt+0x9368>
  40993c:	mov	x0, x21
  409940:	bl	402a10 <free@plt>
  409944:	ldr	x0, [x19, #40]
  409948:	mov	x1, x20
  40994c:	mov	x2, x0
  409950:	bl	40bfc8 <wcrtomb@plt+0x9368>
  409954:	bl	40acc4 <wcrtomb@plt+0x8064>
  409958:	ldr	x0, [x19, #40]
  40995c:	bl	402a10 <free@plt>
  409960:	str	xzr, [x19, #184]
  409964:	ldp	x20, x19, [sp, #64]
  409968:	ldp	x22, x21, [sp, #48]
  40996c:	ldp	x24, x23, [sp, #32]
  409970:	ldp	x26, x25, [sp, #16]
  409974:	ldp	x29, x30, [sp], #80
  409978:	ret
  40997c:	stp	x29, x30, [sp, #-64]!
  409980:	stp	x28, x23, [sp, #16]
  409984:	stp	x22, x21, [sp, #32]
  409988:	stp	x20, x19, [sp, #48]
  40998c:	mov	x29, sp
  409990:	sub	sp, sp, #0x2, lsl #12
  409994:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409998:	ldrb	w8, [x8, #1720]
  40999c:	cbz	w8, 4099c4 <wcrtomb@plt+0x6d64>
  4099a0:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  4099a4:	add	x19, x19, #0x6b8
  4099a8:	ldr	x3, [x19, #8]
  4099ac:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  4099b0:	add	x0, x0, #0x448
  4099b4:	mov	w1, #0x1                   	// #1
  4099b8:	mov	w2, #0x1                   	// #1
  4099bc:	bl	40b99c <wcrtomb@plt+0x8d3c>
  4099c0:	strb	wzr, [x19]
  4099c4:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  4099c8:	ldr	x22, [x20, #1696]
  4099cc:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  4099d0:	cbz	x22, 409a6c <wcrtomb@plt+0x6e0c>
  4099d4:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  4099d8:	b	4099ec <wcrtomb@plt+0x6d8c>
  4099dc:	mov	x0, x19
  4099e0:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  4099e4:	ldr	x22, [x22, #24]
  4099e8:	cbz	x22, 409a6c <wcrtomb@plt+0x6e0c>
  4099ec:	ldr	x0, [x22, #8]
  4099f0:	cbz	x0, 409a04 <wcrtomb@plt+0x6da4>
  4099f4:	ldr	x2, [x22, #16]
  4099f8:	ldr	x3, [x21, #1728]
  4099fc:	mov	w1, #0x1                   	// #1
  409a00:	bl	40b99c <wcrtomb@plt+0x8d3c>
  409a04:	ldr	x0, [x22]
  409a08:	cbz	x0, 4099e4 <wcrtomb@plt+0x6d84>
  409a0c:	ldr	x1, [x23, #1104]
  409a10:	mov	w2, wzr
  409a14:	bl	40b6a8 <wcrtomb@plt+0x8a48>
  409a18:	cbz	x0, 4099e4 <wcrtomb@plt+0x6d84>
  409a1c:	mov	x19, x0
  409a20:	mov	x0, sp
  409a24:	mov	w1, #0x1                   	// #1
  409a28:	mov	w2, #0x2000                	// #8192
  409a2c:	mov	x3, x19
  409a30:	bl	40bac8 <wcrtomb@plt+0x8e68>
  409a34:	cbz	x0, 4099dc <wcrtomb@plt+0x6d7c>
  409a38:	mov	x2, x0
  409a3c:	ldr	x3, [x21, #1728]
  409a40:	mov	x0, sp
  409a44:	mov	w1, #0x1                   	// #1
  409a48:	bl	40b99c <wcrtomb@plt+0x8d3c>
  409a4c:	mov	x0, sp
  409a50:	mov	w1, #0x1                   	// #1
  409a54:	mov	w2, #0x2000                	// #8192
  409a58:	mov	x3, x19
  409a5c:	bl	40bac8 <wcrtomb@plt+0x8e68>
  409a60:	mov	x2, x0
  409a64:	cbnz	x0, 409a3c <wcrtomb@plt+0x6ddc>
  409a68:	b	4099dc <wcrtomb@plt+0x6d7c>
  409a6c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409a70:	ldrb	w8, [x8, #1852]
  409a74:	cbz	w8, 409a80 <wcrtomb@plt+0x6e20>
  409a78:	ldr	x0, [x21, #1728]
  409a7c:	bl	40bbe8 <wcrtomb@plt+0x8f88>
  409a80:	ldr	x19, [x20, #1696]
  409a84:	cbnz	x19, 409ac0 <wcrtomb@plt+0x6e60>
  409a88:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409a8c:	str	xzr, [x8, #1744]
  409a90:	str	xzr, [x20, #1696]
  409a94:	add	sp, sp, #0x2, lsl #12
  409a98:	ldp	x20, x19, [sp, #48]
  409a9c:	ldp	x22, x21, [sp, #32]
  409aa0:	ldp	x28, x23, [sp, #16]
  409aa4:	ldp	x29, x30, [sp], #64
  409aa8:	ret
  409aac:	ldr	x21, [x19, #24]
  409ab0:	mov	x0, x19
  409ab4:	bl	402a10 <free@plt>
  409ab8:	mov	x19, x21
  409abc:	cbz	x21, 409a88 <wcrtomb@plt+0x6e28>
  409ac0:	ldrb	w8, [x19, #32]
  409ac4:	cbz	w8, 409aac <wcrtomb@plt+0x6e4c>
  409ac8:	ldr	x0, [x19, #8]
  409acc:	bl	402a10 <free@plt>
  409ad0:	b	409aac <wcrtomb@plt+0x6e4c>
  409ad4:	stp	x29, x30, [sp, #-48]!
  409ad8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409adc:	stp	x22, x21, [sp, #16]
  409ae0:	stp	x20, x19, [sp, #32]
  409ae4:	str	xzr, [x8, #1664]
  409ae8:	str	x0, [x1, #48]
  409aec:	ldrb	w8, [x0]
  409af0:	mov	x19, x1
  409af4:	mov	x20, x0
  409af8:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  409afc:	cmp	w8, #0x2d
  409b00:	mov	x29, sp
  409b04:	b.ne	409b30 <wcrtomb@plt+0x6ed0>  // b.any
  409b08:	ldrb	w8, [x20, #1]
  409b0c:	cbnz	w8, 409b30 <wcrtomb@plt+0x6ed0>
  409b10:	ldr	x8, [x21, #1880]
  409b14:	cbnz	x8, 409b30 <wcrtomb@plt+0x6ed0>
  409b18:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  409b1c:	ldr	x0, [x20, #1280]
  409b20:	bl	402ac0 <clearerr_unlocked@plt>
  409b24:	ldr	x0, [x20, #1280]
  409b28:	str	x0, [x19, #184]
  409b2c:	b	409b64 <wcrtomb@plt+0x6f04>
  409b30:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409b34:	ldrb	w8, [x8, #1864]
  409b38:	cbz	w8, 409b48 <wcrtomb@plt+0x6ee8>
  409b3c:	mov	x0, x20
  409b40:	bl	40bd80 <wcrtomb@plt+0x9120>
  409b44:	str	x0, [x19, #48]
  409b48:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409b4c:	ldr	x1, [x8, #1104]
  409b50:	mov	x0, x20
  409b54:	mov	w2, wzr
  409b58:	bl	40b6a8 <wcrtomb@plt+0x8a48>
  409b5c:	str	x0, [x19, #184]
  409b60:	cbz	x0, 409b98 <wcrtomb@plt+0x6f38>
  409b64:	adrp	x8, 409000 <wcrtomb@plt+0x63a0>
  409b68:	add	x8, x8, #0xd2c
  409b6c:	str	x8, [x19, #32]
  409b70:	ldr	x8, [x21, #1880]
  409b74:	cbz	x8, 409c00 <wcrtomb@plt+0x6fa0>
  409b78:	ldr	x0, [x19, #48]
  409b7c:	bl	4155e4 <wcrtomb@plt+0x12984>
  409b80:	mov	w1, #0x2f                  	// #47
  409b84:	mov	x20, x0
  409b88:	bl	4028f0 <strrchr@plt>
  409b8c:	cbz	x0, 409c34 <wcrtomb@plt+0x6fd4>
  409b90:	strb	wzr, [x0]
  409b94:	b	409c3c <wcrtomb@plt+0x6fdc>
  409b98:	bl	402bd0 <__errno_location@plt>
  409b9c:	ldr	w0, [x0]
  409ba0:	bl	4028e0 <strerror@plt>
  409ba4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409ba8:	ldr	x21, [x8, #1248]
  409bac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  409bb0:	mov	x22, x0
  409bb4:	add	x1, x1, #0x2d
  409bb8:	mov	w2, #0x5                   	// #5
  409bbc:	mov	x0, xzr
  409bc0:	bl	402b40 <dcgettext@plt>
  409bc4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409bc8:	ldr	x3, [x8, #1936]
  409bcc:	mov	x2, x0
  409bd0:	mov	w1, #0x1                   	// #1
  409bd4:	mov	x0, x21
  409bd8:	mov	x4, x20
  409bdc:	mov	x5, x22
  409be0:	bl	4029c0 <__fprintf_chk@plt>
  409be4:	ldr	x8, [x19, #8]
  409be8:	adrp	x9, 409000 <wcrtomb@plt+0x63a0>
  409bec:	add	x9, x9, #0x644
  409bf0:	str	x9, [x19, #32]
  409bf4:	add	x8, x8, #0x1
  409bf8:	str	x8, [x19, #8]
  409bfc:	b	409cbc <wcrtomb@plt+0x705c>
  409c00:	cbz	x0, 409c20 <wcrtomb@plt+0x6fc0>
  409c04:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409c08:	ldrb	w8, [x8, #1852]
  409c0c:	cbz	w8, 409c20 <wcrtomb@plt+0x6fc0>
  409c10:	mov	w2, #0x2                   	// #2
  409c14:	mov	x1, xzr
  409c18:	mov	x3, xzr
  409c1c:	bl	402670 <setvbuf@plt>
  409c20:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409c24:	ldr	x8, [x8, #1272]
  409c28:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  409c2c:	str	x8, [x9, #1728]
  409c30:	b	409cbc <wcrtomb@plt+0x705c>
  409c34:	mov	w8, #0x2e                  	// #46
  409c38:	strh	w8, [x20]
  409c3c:	ldr	x0, [x19, #184]
  409c40:	bl	4026b0 <fileno@plt>
  409c44:	bl	402af0 <isatty@plt>
  409c48:	cbnz	w0, 409ccc <wcrtomb@plt+0x706c>
  409c4c:	ldr	x0, [x19, #184]
  409c50:	bl	4026b0 <fileno@plt>
  409c54:	mov	w1, w0
  409c58:	add	x2, x19, #0x38
  409c5c:	mov	w0, wzr
  409c60:	bl	402b20 <__fxstat@plt>
  409c64:	ldr	w8, [x19, #72]
  409c68:	and	w8, w8, #0xf000
  409c6c:	cmp	w8, #0x8, lsl #12
  409c70:	b.ne	409cd8 <wcrtomb@plt+0x7078>  // b.any
  409c74:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409c78:	ldr	x3, [x8, #1112]
  409c7c:	add	x21, x19, #0x28
  409c80:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  409c84:	add	x2, x2, #0x651
  409c88:	mov	x0, x21
  409c8c:	mov	x1, x20
  409c90:	bl	40b84c <wcrtomb@plt+0x8bec>
  409c94:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  409c98:	add	x22, x22, #0x6b8
  409c9c:	str	x0, [x22, #8]
  409ca0:	ldr	x0, [x19, #40]
  409ca4:	bl	40acb8 <wcrtomb@plt+0x8058>
  409ca8:	mov	x0, x20
  409cac:	strb	wzr, [x22]
  409cb0:	bl	402a10 <free@plt>
  409cb4:	ldr	x8, [x22, #8]
  409cb8:	cbz	x8, 409cf4 <wcrtomb@plt+0x7094>
  409cbc:	ldp	x20, x19, [sp, #32]
  409cc0:	ldp	x22, x21, [sp, #16]
  409cc4:	ldp	x29, x30, [sp], #48
  409cc8:	ret
  409ccc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  409cd0:	add	x1, x1, #0x44
  409cd4:	b	409ce0 <wcrtomb@plt+0x7080>
  409cd8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  409cdc:	add	x1, x1, #0x64
  409ce0:	mov	w2, #0x5                   	// #5
  409ce4:	mov	x0, xzr
  409ce8:	bl	402b40 <dcgettext@plt>
  409cec:	ldr	x1, [x19, #48]
  409cf0:	bl	40b53c <wcrtomb@plt+0x88dc>
  409cf4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  409cf8:	add	x1, x1, #0x89
  409cfc:	mov	w2, #0x5                   	// #5
  409d00:	mov	x0, xzr
  409d04:	bl	402b40 <dcgettext@plt>
  409d08:	ldr	x19, [x21]
  409d0c:	mov	x20, x0
  409d10:	bl	402bd0 <__errno_location@plt>
  409d14:	ldr	w0, [x0]
  409d18:	bl	4028e0 <strerror@plt>
  409d1c:	mov	x2, x0
  409d20:	mov	x0, x20
  409d24:	mov	x1, x19
  409d28:	bl	40b53c <wcrtomb@plt+0x88dc>
  409d2c:	stp	x29, x30, [sp, #-32]!
  409d30:	str	x19, [sp, #16]
  409d34:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d38:	ldr	x3, [x0, #184]
  409d3c:	ldrb	w2, [x19, #1096]
  409d40:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d44:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d48:	add	x0, x0, #0x6d8
  409d4c:	add	x1, x1, #0x6e0
  409d50:	mov	x29, sp
  409d54:	bl	40bb70 <wcrtomb@plt+0x8f10>
  409d58:	subs	x2, x0, #0x1
  409d5c:	b.lt	409d98 <wcrtomb@plt+0x7138>  // b.tstop
  409d60:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d64:	ldr	x1, [x8, #1752]
  409d68:	ldrb	w9, [x19, #1096]
  409d6c:	ldrb	w8, [x1, x2]
  409d70:	cmp	w8, w9
  409d74:	b.eq	409d84 <wcrtomb@plt+0x7124>  // b.none
  409d78:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d7c:	mov	x2, x0
  409d80:	strb	wzr, [x8, #1584]
  409d84:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409d88:	add	x0, x0, #0x610
  409d8c:	bl	409da8 <wcrtomb@plt+0x7148>
  409d90:	mov	w0, #0x1                   	// #1
  409d94:	b	409d9c <wcrtomb@plt+0x713c>
  409d98:	mov	w0, wzr
  409d9c:	ldr	x19, [sp, #16]
  409da0:	ldp	x29, x30, [sp], #32
  409da4:	ret
  409da8:	stp	x29, x30, [sp, #-64]!
  409dac:	str	x23, [sp, #16]
  409db0:	stp	x22, x21, [sp, #32]
  409db4:	stp	x20, x19, [sp, #48]
  409db8:	mov	x19, x2
  409dbc:	ldp	x2, x10, [x0, #16]
  409dc0:	ldr	x8, [x0, #8]
  409dc4:	mov	x21, x0
  409dc8:	mov	x20, x1
  409dcc:	add	x22, x2, x19
  409dd0:	cmp	x10, x22
  409dd4:	mov	x29, sp
  409dd8:	b.cs	409e58 <wcrtomb@plt+0x71f8>  // b.hs, b.nlast
  409ddc:	ldr	x0, [x21]
  409de0:	lsl	x10, x10, #1
  409de4:	sub	x9, x8, x0
  409de8:	cmp	x10, w9, sxtw
  409dec:	b.cs	409e24 <wcrtomb@plt+0x71c4>  // b.hs, b.nlast
  409df0:	mov	x1, x8
  409df4:	bl	402590 <memmove@plt>
  409df8:	ldp	x8, x9, [x21]
  409dfc:	ldr	x10, [x21, #24]
  409e00:	sub	x9, x9, x8
  409e04:	add	x10, x10, x9
  409e08:	cmp	x10, x22
  409e0c:	str	x10, [x21, #24]
  409e10:	str	x8, [x21, #8]
  409e14:	b.hi	409e58 <wcrtomb@plt+0x71f8>  // b.pmore
  409e18:	mov	x9, xzr
  409e1c:	lsl	x10, x10, #1
  409e20:	mov	x0, x8
  409e24:	cmp	x10, x22
  409e28:	csel	x10, x22, x10, cc  // cc = lo, ul, last
  409e2c:	mov	w8, #0x32                  	// #50
  409e30:	cmp	x10, #0x32
  409e34:	csel	x8, x10, x8, hi  // hi = pmore
  409e38:	sxtw	x23, w9
  409e3c:	add	x9, x23, x8
  409e40:	adds	x1, x9, #0x1
  409e44:	str	x8, [x21, #24]
  409e48:	b.mi	409f04 <wcrtomb@plt+0x72a4>  // b.first
  409e4c:	bl	4153c8 <wcrtomb@plt+0x12768>
  409e50:	add	x8, x0, x23
  409e54:	stp	x0, x8, [x21]
  409e58:	ldr	x9, [x21, #16]
  409e5c:	mov	x1, x20
  409e60:	mov	x2, x19
  409e64:	add	x0, x8, x9
  409e68:	bl	402580 <memcpy@plt>
  409e6c:	str	x22, [x21, #16]
  409e70:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409e74:	ldrb	w8, [x8, #2256]
  409e78:	cbnz	w8, 409ef0 <wcrtomb@plt+0x7290>
  409e7c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  409e80:	ldr	w8, [x22, #2260]
  409e84:	cmp	w8, #0x2
  409e88:	b.lt	409ef0 <wcrtomb@plt+0x7290>  // b.tstop
  409e8c:	cbz	x19, 409ef0 <wcrtomb@plt+0x7290>
  409e90:	add	x21, x21, #0x24
  409e94:	cmp	w8, #0x1
  409e98:	b.eq	409ebc <wcrtomb@plt+0x725c>  // b.none
  409e9c:	mov	x0, xzr
  409ea0:	mov	x1, x20
  409ea4:	mov	x2, x19
  409ea8:	mov	x3, x21
  409eac:	bl	415680 <wcrtomb@plt+0x12a20>
  409eb0:	cmn	x0, #0x2
  409eb4:	b.cc	409ed0 <wcrtomb@plt+0x7270>  // b.lo, b.ul, b.last
  409eb8:	str	xzr, [x21]
  409ebc:	add	x20, x20, #0x1
  409ec0:	mov	w0, #0x1                   	// #1
  409ec4:	subs	x19, x19, x0
  409ec8:	b.ne	409ee0 <wcrtomb@plt+0x7280>  // b.any
  409ecc:	b	409ef0 <wcrtomb@plt+0x7290>
  409ed0:	cbz	x0, 409ef0 <wcrtomb@plt+0x7290>
  409ed4:	add	x20, x20, x0
  409ed8:	subs	x19, x19, x0
  409edc:	b.eq	409ef0 <wcrtomb@plt+0x7290>  // b.none
  409ee0:	ldr	w8, [x22, #2260]
  409ee4:	cmp	w8, #0x1
  409ee8:	b.ne	409e9c <wcrtomb@plt+0x723c>  // b.any
  409eec:	b	409ebc <wcrtomb@plt+0x725c>
  409ef0:	ldp	x20, x19, [sp, #48]
  409ef4:	ldp	x22, x21, [sp, #32]
  409ef8:	ldr	x23, [sp, #16]
  409efc:	ldp	x29, x30, [sp], #64
  409f00:	ret
  409f04:	bl	41563c <wcrtomb@plt+0x129dc>
  409f08:	stp	x29, x30, [sp, #-48]!
  409f0c:	stp	x22, x21, [sp, #16]
  409f10:	stp	x20, x19, [sp, #32]
  409f14:	mov	x29, sp
  409f18:	cbz	x0, 409fb0 <wcrtomb@plt+0x7350>
  409f1c:	ldrb	w8, [x3, #8]
  409f20:	mov	x19, x3
  409f24:	mov	w20, w2
  409f28:	mov	x21, x1
  409f2c:	mov	x22, x0
  409f30:	cbz	w8, 409f50 <wcrtomb@plt+0x72f0>
  409f34:	ldr	x3, [x19, #16]
  409f38:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409f3c:	add	x0, x0, #0x448
  409f40:	mov	w1, #0x1                   	// #1
  409f44:	mov	w2, #0x1                   	// #1
  409f48:	bl	40b99c <wcrtomb@plt+0x8d3c>
  409f4c:	strb	wzr, [x19, #8]
  409f50:	cbz	x21, 409f68 <wcrtomb@plt+0x7308>
  409f54:	ldr	x3, [x19, #16]
  409f58:	mov	w1, #0x1                   	// #1
  409f5c:	mov	x0, x22
  409f60:	mov	x2, x21
  409f64:	bl	40b99c <wcrtomb@plt+0x8d3c>
  409f68:	cbz	w20, 409f88 <wcrtomb@plt+0x7328>
  409f6c:	ldr	x3, [x19, #16]
  409f70:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  409f74:	add	x0, x0, #0x448
  409f78:	mov	w1, #0x1                   	// #1
  409f7c:	mov	w2, #0x1                   	// #1
  409f80:	bl	40b99c <wcrtomb@plt+0x8d3c>
  409f84:	b	409f90 <wcrtomb@plt+0x7330>
  409f88:	mov	w8, #0x1                   	// #1
  409f8c:	strb	w8, [x19, #8]
  409f90:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  409f94:	ldrb	w8, [x8, #1852]
  409f98:	cbz	w8, 409fb0 <wcrtomb@plt+0x7350>
  409f9c:	ldr	x0, [x19, #16]
  409fa0:	ldp	x20, x19, [sp, #32]
  409fa4:	ldp	x22, x21, [sp, #16]
  409fa8:	ldp	x29, x30, [sp], #48
  409fac:	b	40bbe8 <wcrtomb@plt+0x8f88>
  409fb0:	ldp	x20, x19, [sp, #32]
  409fb4:	ldp	x22, x21, [sp, #16]
  409fb8:	ldp	x29, x30, [sp], #48
  409fbc:	ret
  409fc0:	stp	x29, x30, [sp, #-32]!
  409fc4:	stp	x20, x19, [sp, #16]
  409fc8:	mov	x20, x0
  409fcc:	ldp	x0, x8, [x1]
  409fd0:	ldr	x9, [x1, #24]
  409fd4:	mov	x19, x1
  409fd8:	mov	x29, sp
  409fdc:	sub	x8, x8, x0
  409fe0:	add	x9, x9, x8
  409fe4:	str	x9, [x1, #24]
  409fe8:	ldr	x8, [x20, #16]
  409fec:	cmp	x9, x8
  409ff0:	b.cs	40a028 <wcrtomb@plt+0x73c8>  // b.hs, b.nlast
  409ff4:	lsl	x9, x9, #1
  409ff8:	cmp	x9, x8
  409ffc:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  40a000:	cmp	x8, #0x32
  40a004:	mov	w9, #0x32                  	// #50
  40a008:	csel	x8, x8, x9, hi  // hi = pmore
  40a00c:	str	x8, [x19, #24]
  40a010:	bl	402a10 <free@plt>
  40a014:	ldr	x8, [x19, #24]
  40a018:	add	x0, x8, #0x1
  40a01c:	bl	415540 <wcrtomb@plt+0x128e0>
  40a020:	str	x0, [x19]
  40a024:	ldr	x8, [x20, #16]
  40a028:	stp	x0, x8, [x19, #8]
  40a02c:	ldrb	w8, [x20, #32]
  40a030:	strb	w8, [x19, #32]
  40a034:	ldp	x1, x2, [x20, #8]
  40a038:	bl	402580 <memcpy@plt>
  40a03c:	ldur	x8, [x20, #36]
  40a040:	stur	x8, [x19, #36]
  40a044:	ldp	x20, x19, [sp, #16]
  40a048:	ldp	x29, x30, [sp], #32
  40a04c:	ret
  40a050:	sub	sp, sp, #0x20
  40a054:	stp	x29, x30, [sp, #16]
  40a058:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a05c:	ldr	x8, [x8, #1664]
  40a060:	add	x29, sp, #0x10
  40a064:	cbz	x8, 40a078 <wcrtomb@plt+0x7418>
  40a068:	mov	w0, wzr
  40a06c:	ldp	x29, x30, [sp, #16]
  40a070:	add	sp, sp, #0x20
  40a074:	ret
  40a078:	ldr	x1, [x0, #184]
  40a07c:	cbz	x1, 40a0a8 <wcrtomb@plt+0x7448>
  40a080:	ldrb	w8, [x1]
  40a084:	tbnz	w8, #4, 40a0a8 <wcrtomb@plt+0x7448>
  40a088:	ldp	x8, x9, [x1, #8]
  40a08c:	cmp	x8, x9
  40a090:	b.cs	40a0bc <wcrtomb@plt+0x745c>  // b.hs, b.nlast
  40a094:	add	x9, x8, #0x1
  40a098:	str	x9, [x1, #8]
  40a09c:	ldrb	w0, [x8]
  40a0a0:	bl	402a20 <ungetc@plt>
  40a0a4:	b	40a068 <wcrtomb@plt+0x7408>
  40a0a8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a0ac:	ldrb	w8, [x8, #1860]
  40a0b0:	cbz	w8, 40a0ec <wcrtomb@plt+0x748c>
  40a0b4:	mov	w0, #0x1                   	// #1
  40a0b8:	b	40a06c <wcrtomb@plt+0x740c>
  40a0bc:	str	x0, [sp, #8]
  40a0c0:	mov	x0, x1
  40a0c4:	bl	402c20 <__uflow@plt>
  40a0c8:	cmn	w0, #0x1
  40a0cc:	b.eq	40a0dc <wcrtomb@plt+0x747c>  // b.none
  40a0d0:	ldr	x8, [sp, #8]
  40a0d4:	ldr	x1, [x8, #184]
  40a0d8:	b	40a0a0 <wcrtomb@plt+0x7440>
  40a0dc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a0e0:	ldrb	w8, [x8, #1860]
  40a0e4:	cbnz	w8, 40a0b4 <wcrtomb@plt+0x7454>
  40a0e8:	ldr	x0, [sp, #8]
  40a0ec:	ldp	x29, x30, [sp, #16]
  40a0f0:	add	sp, sp, #0x20
  40a0f4:	b	40a1c8 <wcrtomb@plt+0x7568>
  40a0f8:	stp	x29, x30, [sp, #-16]!
  40a0fc:	ldr	w8, [x0]
  40a100:	mov	x29, sp
  40a104:	cmp	w8, #0x6
  40a108:	b.hi	40a1bc <wcrtomb@plt+0x755c>  // b.pmore
  40a10c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a110:	add	x9, x9, #0x17
  40a114:	adr	x10, 40a128 <wcrtomb@plt+0x74c8>
  40a118:	ldrb	w11, [x9, x8]
  40a11c:	add	x10, x10, x11, lsl #2
  40a120:	mov	w8, #0x1                   	// #1
  40a124:	br	x10
  40a128:	ldr	x8, [x0, #8]
  40a12c:	ldr	x9, [x1, #16]
  40a130:	cmp	x8, x9
  40a134:	cset	w8, ls  // ls = plast
  40a138:	b	40a1b0 <wcrtomb@plt+0x7550>
  40a13c:	ldr	x8, [x0, #8]
  40a140:	ldr	x9, [x1, #16]
  40a144:	cmp	x8, x9
  40a148:	b	40a1ac <wcrtomb@plt+0x754c>
  40a14c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a150:	add	x8, x8, #0x618
  40a154:	ldr	x0, [x0, #24]
  40a158:	ldp	x1, x2, [x8]
  40a15c:	mov	x3, xzr
  40a160:	mov	x4, xzr
  40a164:	mov	w5, wzr
  40a168:	bl	40a904 <wcrtomb@plt+0x7ca4>
  40a16c:	cmp	w0, #0x0
  40a170:	cset	w8, ne  // ne = any
  40a174:	b	40a1b0 <wcrtomb@plt+0x7550>
  40a178:	ldr	x8, [x1, #16]
  40a17c:	ldr	x9, [x0, #8]
  40a180:	subs	x8, x8, x9
  40a184:	b.cs	40a19c <wcrtomb@plt+0x753c>  // b.hs, b.nlast
  40a188:	mov	w8, wzr
  40a18c:	b	40a1b0 <wcrtomb@plt+0x7550>
  40a190:	mov	x0, x1
  40a194:	ldp	x29, x30, [sp], #16
  40a198:	b	40a050 <wcrtomb@plt+0x73f0>
  40a19c:	ldr	x9, [x0, #16]
  40a1a0:	udiv	x10, x8, x9
  40a1a4:	msub	x8, x10, x9, x8
  40a1a8:	cmp	x8, #0x0
  40a1ac:	cset	w8, eq  // eq = none
  40a1b0:	mov	w0, w8
  40a1b4:	ldp	x29, x30, [sp], #16
  40a1b8:	ret
  40a1bc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a1c0:	add	x0, x0, #0x123
  40a1c4:	bl	40b53c <wcrtomb@plt+0x88dc>
  40a1c8:	stp	x29, x30, [sp, #-32]!
  40a1cc:	str	x19, [sp, #16]
  40a1d0:	mov	x29, sp
  40a1d4:	mov	x19, x0
  40a1d8:	bl	40979c <wcrtomb@plt+0x6b3c>
  40a1dc:	ldr	x8, [x19]
  40a1e0:	ldr	x9, [x8]
  40a1e4:	cbz	x9, 40a254 <wcrtomb@plt+0x75f4>
  40a1e8:	add	x9, x8, #0x8
  40a1ec:	str	x9, [x19]
  40a1f0:	ldr	x0, [x8]
  40a1f4:	mov	x1, x19
  40a1f8:	bl	409ad4 <wcrtomb@plt+0x6e74>
  40a1fc:	ldr	x1, [x19, #184]
  40a200:	cbz	x1, 40a220 <wcrtomb@plt+0x75c0>
  40a204:	ldp	x8, x9, [x1, #8]
  40a208:	cmp	x8, x9
  40a20c:	b.cc	40a23c <wcrtomb@plt+0x75dc>  // b.lo, b.ul, b.last
  40a210:	mov	x0, x1
  40a214:	bl	402c20 <__uflow@plt>
  40a218:	cmn	w0, #0x1
  40a21c:	b.ne	40a264 <wcrtomb@plt+0x7604>  // b.any
  40a220:	mov	x0, x19
  40a224:	bl	40979c <wcrtomb@plt+0x6b3c>
  40a228:	ldr	x8, [x19]
  40a22c:	mov	w0, #0x1                   	// #1
  40a230:	ldr	x9, [x8]
  40a234:	cbnz	x9, 40a1e8 <wcrtomb@plt+0x7588>
  40a238:	b	40a258 <wcrtomb@plt+0x75f8>
  40a23c:	add	x9, x8, #0x1
  40a240:	str	x9, [x1, #8]
  40a244:	ldrb	w0, [x8]
  40a248:	bl	402a20 <ungetc@plt>
  40a24c:	mov	w0, wzr
  40a250:	b	40a258 <wcrtomb@plt+0x75f8>
  40a254:	mov	w0, #0x1                   	// #1
  40a258:	ldr	x19, [sp, #16]
  40a25c:	ldp	x29, x30, [sp], #32
  40a260:	ret
  40a264:	ldr	x1, [x19, #184]
  40a268:	b	40a248 <wcrtomb@plt+0x75e8>
  40a26c:	sub	sp, sp, #0x50
  40a270:	stp	x20, x19, [sp, #64]
  40a274:	mov	x19, x1
  40a278:	mov	x20, x0
  40a27c:	stp	x29, x30, [sp, #16]
  40a280:	stp	x24, x23, [sp, #32]
  40a284:	stp	x22, x21, [sp, #48]
  40a288:	add	x29, sp, #0x10
  40a28c:	cbz	w2, 40a4f0 <wcrtomb@plt+0x7890>
  40a290:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a294:	add	x8, x8, #0x6f8
  40a298:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a29c:	mov	w21, w2
  40a2a0:	ldp	x2, x9, [x8]
  40a2a4:	ldrsw	x8, [x23, #2260]
  40a2a8:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a2ac:	add	x22, x22, #0x6e8
  40a2b0:	sub	x11, x9, x2
  40a2b4:	mul	x10, x8, x19
  40a2b8:	cmp	x11, x10
  40a2bc:	b.cs	40a33c <wcrtomb@plt+0x76dc>  // b.hs, b.nlast
  40a2c0:	ldp	x0, x1, [x22]
  40a2c4:	lsl	x9, x9, #1
  40a2c8:	add	x24, x10, x2
  40a2cc:	sub	x8, x1, x0
  40a2d0:	cmp	x9, w8, sxtw
  40a2d4:	b.cs	40a304 <wcrtomb@plt+0x76a4>  // b.hs, b.nlast
  40a2d8:	bl	402590 <memmove@plt>
  40a2dc:	ldp	x0, x8, [x22]
  40a2e0:	ldr	x9, [x22, #24]
  40a2e4:	sub	x8, x8, x0
  40a2e8:	add	x9, x9, x8
  40a2ec:	cmp	x9, x24
  40a2f0:	str	x9, [x22, #24]
  40a2f4:	str	x0, [x22, #8]
  40a2f8:	b.hi	40a33c <wcrtomb@plt+0x76dc>  // b.pmore
  40a2fc:	mov	x8, xzr
  40a300:	lsl	x9, x9, #1
  40a304:	cmp	x9, x24
  40a308:	csel	x9, x24, x9, cc  // cc = lo, ul, last
  40a30c:	mov	w10, #0x32                  	// #50
  40a310:	cmp	x9, #0x32
  40a314:	csel	x9, x9, x10, hi  // hi = pmore
  40a318:	sxtw	x24, w8
  40a31c:	add	x8, x24, x9
  40a320:	adrp	x11, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a324:	adds	x1, x8, #0x1
  40a328:	str	x9, [x11, #1792]
  40a32c:	b.mi	40a51c <wcrtomb@plt+0x78bc>  // b.first
  40a330:	bl	4153c8 <wcrtomb@plt+0x12768>
  40a334:	add	x8, x0, x24
  40a338:	stp	x0, x8, [x22]
  40a33c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a340:	add	x8, x8, #0x70c
  40a344:	ldr	x8, [x8]
  40a348:	str	x8, [sp, #8]
  40a34c:	cbz	x19, 40a504 <wcrtomb@plt+0x78a4>
  40a350:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a354:	add	x24, x24, #0x6f0
  40a358:	b	40a37c <wcrtomb@plt+0x771c>
  40a35c:	mov	w0, w1
  40a360:	bl	4026e0 <wctob@plt>
  40a364:	ldp	x8, x9, [x24]
  40a368:	strb	w0, [x8, x9]
  40a36c:	ldr	x8, [x24, #8]
  40a370:	add	x8, x8, #0x1
  40a374:	str	x8, [x24, #8]
  40a378:	cbz	x19, 40a504 <wcrtomb@plt+0x78a4>
  40a37c:	ldr	w8, [x23, #2260]
  40a380:	cmp	w8, #0x1
  40a384:	b.ne	40a39c <wcrtomb@plt+0x773c>  // b.any
  40a388:	ldrb	w0, [x20]
  40a38c:	bl	402910 <btowc@plt>
  40a390:	str	w0, [sp, #4]
  40a394:	mov	w0, #0x1                   	// #1
  40a398:	b	40a3c4 <wcrtomb@plt+0x7764>
  40a39c:	add	x0, sp, #0x4
  40a3a0:	add	x3, sp, #0x8
  40a3a4:	mov	x1, x20
  40a3a8:	mov	x2, x19
  40a3ac:	bl	415680 <wcrtomb@plt+0x12a20>
  40a3b0:	cmn	x0, #0x1
  40a3b4:	b.eq	40a3f4 <wcrtomb@plt+0x7794>  // b.none
  40a3b8:	cmn	x0, #0x2
  40a3bc:	b.eq	40a4f0 <wcrtomb@plt+0x7890>  // b.none
  40a3c0:	cbz	x0, 40a4f0 <wcrtomb@plt+0x7890>
  40a3c4:	add	x20, x20, x0
  40a3c8:	tst	w21, #0xc
  40a3cc:	sub	x19, x19, x0
  40a3d0:	b.eq	40a3e4 <wcrtomb@plt+0x7784>  // b.none
  40a3d4:	ldr	w0, [sp, #4]
  40a3d8:	tbnz	w21, #2, 40a41c <wcrtomb@plt+0x77bc>
  40a3dc:	bl	402c10 <towlower@plt>
  40a3e0:	b	40a420 <wcrtomb@plt+0x77c0>
  40a3e4:	ldr	w0, [sp, #4]
  40a3e8:	tbnz	w21, #0, 40a434 <wcrtomb@plt+0x77d4>
  40a3ec:	bl	402c10 <towlower@plt>
  40a3f0:	b	40a438 <wcrtomb@plt+0x77d8>
  40a3f4:	ands	w21, w21, #0xfffffff3
  40a3f8:	b.eq	40a4f0 <wcrtomb@plt+0x7890>  // b.none
  40a3fc:	mov	w2, #0x1                   	// #1
  40a400:	mov	x0, x22
  40a404:	mov	x1, x20
  40a408:	bl	409da8 <wcrtomb@plt+0x7148>
  40a40c:	stur	xzr, [x22, #36]
  40a410:	add	x20, x20, #0x1
  40a414:	sub	x19, x19, #0x1
  40a418:	b	40a378 <wcrtomb@plt+0x7718>
  40a41c:	bl	402b90 <towupper@plt>
  40a420:	mov	w1, w0
  40a424:	ands	w21, w21, #0xfffffff3
  40a428:	str	w0, [sp, #4]
  40a42c:	b.ne	40a440 <wcrtomb@plt+0x77e0>  // b.any
  40a430:	b	40a4a0 <wcrtomb@plt+0x7840>
  40a434:	bl	402b90 <towupper@plt>
  40a438:	mov	w1, w0
  40a43c:	str	w0, [sp, #4]
  40a440:	ldr	w8, [x23, #2260]
  40a444:	cmp	w8, #0x1
  40a448:	b.eq	40a35c <wcrtomb@plt+0x76fc>  // b.none
  40a44c:	ldp	x8, x9, [x24]
  40a450:	add	x2, x24, #0x1c
  40a454:	add	x0, x8, x9
  40a458:	bl	402c60 <wcrtomb@plt>
  40a45c:	ldr	x8, [x24, #8]
  40a460:	cmn	x0, #0x2
  40a464:	add	x8, x8, x0
  40a468:	str	x8, [x24, #8]
  40a46c:	b.cc	40a378 <wcrtomb@plt+0x7718>  // b.lo, b.ul, b.last
  40a470:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a474:	ldr	x19, [x8, #1248]
  40a478:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a47c:	add	x1, x1, #0x182
  40a480:	mov	w2, #0x5                   	// #5
  40a484:	mov	x0, xzr
  40a488:	bl	402b40 <dcgettext@plt>
  40a48c:	mov	x2, x0
  40a490:	mov	w1, #0x1                   	// #1
  40a494:	mov	x0, x19
  40a498:	bl	4029c0 <__fprintf_chk@plt>
  40a49c:	bl	402920 <abort@plt>
  40a4a0:	ldr	w8, [x23, #2260]
  40a4a4:	cmp	w8, #0x1
  40a4a8:	b.ne	40a4cc <wcrtomb@plt+0x786c>  // b.any
  40a4ac:	mov	w0, w1
  40a4b0:	bl	4026e0 <wctob@plt>
  40a4b4:	ldp	x8, x9, [x24]
  40a4b8:	strb	w0, [x8, x9]
  40a4bc:	ldr	x8, [x24, #8]
  40a4c0:	add	x8, x8, #0x1
  40a4c4:	str	x8, [x24, #8]
  40a4c8:	b	40a4f0 <wcrtomb@plt+0x7890>
  40a4cc:	ldp	x8, x9, [x24]
  40a4d0:	add	x2, x24, #0x1c
  40a4d4:	add	x0, x8, x9
  40a4d8:	bl	402c60 <wcrtomb@plt>
  40a4dc:	ldr	x8, [x24, #8]
  40a4e0:	cmn	x0, #0x2
  40a4e4:	add	x8, x8, x0
  40a4e8:	str	x8, [x24, #8]
  40a4ec:	b.cs	40a470 <wcrtomb@plt+0x7810>  // b.hs, b.nlast
  40a4f0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a4f4:	add	x0, x0, #0x6e8
  40a4f8:	mov	x1, x20
  40a4fc:	mov	x2, x19
  40a500:	bl	409da8 <wcrtomb@plt+0x7148>
  40a504:	ldp	x20, x19, [sp, #64]
  40a508:	ldp	x22, x21, [sp, #48]
  40a50c:	ldp	x24, x23, [sp, #32]
  40a510:	ldp	x29, x30, [sp, #16]
  40a514:	add	sp, sp, #0x50
  40a518:	ret
  40a51c:	bl	41563c <wcrtomb@plt+0x129dc>
  40a520:	sub	sp, sp, #0x40
  40a524:	stp	x29, x30, [sp, #16]
  40a528:	add	x29, sp, #0x10
  40a52c:	stp	x22, x21, [sp, #32]
  40a530:	mov	w21, w0
  40a534:	sturb	w0, [x29, #-4]
  40a538:	mov	x0, x1
  40a53c:	stp	x20, x19, [sp, #48]
  40a540:	mov	x19, x1
  40a544:	bl	402950 <mbsinit@plt>
  40a548:	mov	w22, w0
  40a54c:	sub	x1, x29, #0x4
  40a550:	mov	w2, #0x1                   	// #1
  40a554:	mov	x0, xzr
  40a558:	mov	x3, x19
  40a55c:	mov	w20, #0x1                   	// #1
  40a560:	bl	415680 <wcrtomb@plt+0x12a20>
  40a564:	mov	x2, x0
  40a568:	add	w8, w2, #0x2
  40a56c:	cmp	w8, #0x3
  40a570:	b.hi	40a5b8 <wcrtomb@plt+0x7958>  // b.pmore
  40a574:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a578:	add	x9, x9, #0x1b2
  40a57c:	adr	x10, 40a58c <wcrtomb@plt+0x792c>
  40a580:	ldrb	w11, [x9, x8]
  40a584:	add	x10, x10, x11, lsl #2
  40a588:	br	x10
  40a58c:	mov	w20, wzr
  40a590:	str	xzr, [x19]
  40a594:	b	40a5a0 <wcrtomb@plt+0x7940>
  40a598:	cmp	w22, #0x0
  40a59c:	cset	w20, eq  // eq = none
  40a5a0:	mov	w0, w20
  40a5a4:	ldp	x20, x19, [sp, #48]
  40a5a8:	ldp	x22, x21, [sp, #32]
  40a5ac:	ldp	x29, x30, [sp, #16]
  40a5b0:	add	sp, sp, #0x40
  40a5b4:	ret
  40a5b8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a5bc:	add	x0, x0, #0x1b6
  40a5c0:	mov	w1, w21
  40a5c4:	bl	40b53c <wcrtomb@plt+0x88dc>
  40a5c8:	stp	x29, x30, [sp, #-16]!
  40a5cc:	mov	x29, sp
  40a5d0:	bl	41322c <wcrtomb@plt+0x105cc>
  40a5d4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a5d8:	add	x1, x1, #0x1dd
  40a5dc:	bl	4029d0 <strcmp@plt>
  40a5e0:	cmp	w0, #0x0
  40a5e4:	cset	w8, eq  // eq = none
  40a5e8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a5ec:	strb	w8, [x9, #2256]
  40a5f0:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  40a5f4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a5f8:	str	w0, [x8, #2260]
  40a5fc:	ldp	x29, x30, [sp], #16
  40a600:	ret
  40a604:	stp	x29, x30, [sp, #-16]!
  40a608:	mov	x1, x0
  40a60c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a610:	add	x0, x0, #0xe61
  40a614:	mov	x29, sp
  40a618:	bl	40b53c <wcrtomb@plt+0x88dc>
  40a61c:	stp	x29, x30, [sp, #-32]!
  40a620:	str	x19, [sp, #16]
  40a624:	mov	x19, x0
  40a628:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a62c:	add	x0, x0, #0x1e3
  40a630:	mov	x29, sp
  40a634:	bl	402be0 <getenv@plt>
  40a638:	cbz	x0, 40a648 <wcrtomb@plt+0x79e8>
  40a63c:	ldr	x19, [sp, #16]
  40a640:	ldp	x29, x30, [sp], #32
  40a644:	ret
  40a648:	mov	x0, x19
  40a64c:	bl	40a604 <wcrtomb@plt+0x79a4>
  40a650:	stp	x29, x30, [sp, #-64]!
  40a654:	str	x23, [sp, #16]
  40a658:	stp	x22, x21, [sp, #32]
  40a65c:	stp	x20, x19, [sp, #48]
  40a660:	mov	x29, sp
  40a664:	mov	w19, w2
  40a668:	mov	w23, w1
  40a66c:	mov	x22, x0
  40a670:	bl	40c0d8 <wcrtomb@plt+0x9478>
  40a674:	cbz	x0, 40a6cc <wcrtomb@plt+0x7a6c>
  40a678:	mov	x21, x0
  40a67c:	add	x0, x0, #0x5f
  40a680:	bl	415540 <wcrtomb@plt+0x128e0>
  40a684:	mov	x20, x0
  40a688:	str	w23, [x0, #64]
  40a68c:	add	x23, x0, #0x5a
  40a690:	mov	x0, x22
  40a694:	bl	40c0d0 <wcrtomb@plt+0x9470>
  40a698:	mov	x1, x0
  40a69c:	mov	x0, x23
  40a6a0:	mov	x2, x21
  40a6a4:	bl	402580 <memcpy@plt>
  40a6a8:	mov	w2, #0x2                   	// #2
  40a6ac:	mov	x0, x23
  40a6b0:	mov	x1, x21
  40a6b4:	bl	402e24 <wcrtomb@plt+0x1c4>
  40a6b8:	str	x0, [x20, #72]
  40a6bc:	mov	x0, x20
  40a6c0:	mov	w1, w19
  40a6c4:	bl	40a708 <wcrtomb@plt+0x7aa8>
  40a6c8:	b	40a6d8 <wcrtomb@plt+0x7a78>
  40a6cc:	cmp	w23, #0x1
  40a6d0:	b.ge	40a6f0 <wcrtomb@plt+0x7a90>  // b.tcont
  40a6d4:	mov	x20, xzr
  40a6d8:	mov	x0, x20
  40a6dc:	ldp	x20, x19, [sp, #48]
  40a6e0:	ldp	x22, x21, [sp, #32]
  40a6e4:	ldr	x23, [sp, #16]
  40a6e8:	ldp	x29, x30, [sp], #64
  40a6ec:	ret
  40a6f0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a6f4:	add	x1, x1, #0x26b
  40a6f8:	mov	w2, #0x5                   	// #5
  40a6fc:	mov	x0, xzr
  40a700:	bl	402b40 <dcgettext@plt>
  40a704:	bl	402d7c <wcrtomb@plt+0x11c>
  40a708:	sub	sp, sp, #0x110
  40a70c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a710:	stp	x28, x23, [sp, #224]
  40a714:	ldr	w10, [x8, #1848]
  40a718:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a71c:	ldr	w8, [x23, #2264]
  40a720:	mov	w9, #0xb27c                	// #45692
  40a724:	mov	w11, #0x246                 	// #582
  40a728:	movk	w9, #0x7, lsl #16
  40a72c:	movk	w11, #0x105, lsl #16
  40a730:	tst	w10, #0x1
  40a734:	stp	x22, x21, [sp, #240]
  40a738:	stp	x20, x19, [sp, #256]
  40a73c:	mov	w20, w1
  40a740:	csel	w21, w9, w11, ne  // ne = any
  40a744:	cmp	w8, #0x2
  40a748:	mov	x19, x0
  40a74c:	stp	x29, x30, [sp, #208]
  40a750:	add	x29, sp, #0xd0
  40a754:	b.eq	40a798 <wcrtomb@plt+0x7b38>  // b.none
  40a758:	cmp	w8, #0x1
  40a75c:	b.eq	40a77c <wcrtomb@plt+0x7b1c>  // b.none
  40a760:	cbnz	w8, 40a780 <wcrtomb@plt+0x7b20>
  40a764:	mov	w8, #0xb27e                	// #45694
  40a768:	movk	w8, #0x105, lsl #16
  40a76c:	and	w21, w21, w8
  40a770:	ldr	w22, [x19, #64]
  40a774:	tbz	w22, #1, 40a788 <wcrtomb@plt+0x7b28>
  40a778:	b	40a7b4 <wcrtomb@plt+0x7b54>
  40a77c:	orr	w21, w21, #0x20000
  40a780:	ldr	w22, [x19, #64]
  40a784:	tbnz	w22, #1, 40a7b4 <wcrtomb@plt+0x7b54>
  40a788:	mov	w0, #0x100                 	// #256
  40a78c:	bl	402730 <malloc@plt>
  40a790:	str	x0, [x19, #32]
  40a794:	b	40a7b8 <wcrtomb@plt+0x7b58>
  40a798:	orr	w8, w9, #0x80000
  40a79c:	mov	w9, #0x646                 	// #1606
  40a7a0:	tst	w10, #0x1
  40a7a4:	movk	w9, #0x10f, lsl #16
  40a7a8:	csel	w21, w8, w9, ne  // ne = any
  40a7ac:	ldr	w22, [x19, #64]
  40a7b0:	tbz	w22, #1, 40a788 <wcrtomb@plt+0x7b28>
  40a7b4:	orr	w21, w21, #0x400000
  40a7b8:	cmp	w20, #0x0
  40a7bc:	cset	w8, eq  // eq = none
  40a7c0:	bfi	w21, w8, #25, #1
  40a7c4:	and	w8, w21, #0xffffffbf
  40a7c8:	orr	w8, w8, #0x100
  40a7cc:	tst	w22, #0x4
  40a7d0:	csel	w22, w21, w8, eq  // eq = none
  40a7d4:	mov	x0, x22
  40a7d8:	bl	416dc4 <_obstack_memory_used@@Base+0x136c>
  40a7dc:	ldr	x1, [x19, #72]
  40a7e0:	add	x21, x19, #0x5a
  40a7e4:	mov	x0, x21
  40a7e8:	mov	x2, x19
  40a7ec:	bl	415acc <_obstack_memory_used@@Base+0x74>
  40a7f0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a7f4:	ldrb	w8, [x8, #1096]
  40a7f8:	cmp	w8, #0xa
  40a7fc:	b.ne	40a810 <wcrtomb@plt+0x7bb0>  // b.any
  40a800:	ldrb	w9, [x19, #64]
  40a804:	lsl	w9, w9, #5
  40a808:	and	w9, w9, #0xffffff80
  40a80c:	b	40a814 <wcrtomb@plt+0x7bb4>
  40a810:	mov	w9, wzr
  40a814:	ldrb	w10, [x19, #56]
  40a818:	str	xzr, [x19, #40]
  40a81c:	and	w10, w10, #0x7f
  40a820:	orr	w9, w10, w9
  40a824:	strb	w9, [x19, #56]
  40a828:	cbnz	x0, 40a8cc <wcrtomb@plt+0x7c6c>
  40a82c:	cbz	w20, 40a848 <wcrtomb@plt+0x7be8>
  40a830:	ldr	x9, [x19, #48]
  40a834:	sub	w20, w20, #0x1
  40a838:	cmp	x9, w20, sxtw
  40a83c:	b.cs	40a848 <wcrtomb@plt+0x7be8>  // b.hs, b.nlast
  40a840:	ldr	w9, [x23, #2264]
  40a844:	cbz	w9, 40a8d0 <wcrtomb@plt+0x7c70>
  40a848:	cmp	w8, #0xa
  40a84c:	cset	w8, ne  // ne = any
  40a850:	lsl	w20, w8, #1
  40a854:	bl	40f4e0 <wcrtomb@plt+0xc880>
  40a858:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a85c:	add	x1, x1, #0x8dc
  40a860:	mov	x2, x22
  40a864:	mov	w3, w20
  40a868:	str	x0, [x19, #80]
  40a86c:	bl	40f4e8 <wcrtomb@plt+0xc888>
  40a870:	ldp	x1, x2, [x19, #72]
  40a874:	mov	w3, #0x1                   	// #1
  40a878:	mov	x0, x21
  40a87c:	bl	40d0d8 <wcrtomb@plt+0xa478>
  40a880:	ldr	x8, [x19, #72]
  40a884:	cmp	x8, #0x1
  40a888:	b.ne	40a8b4 <wcrtomb@plt+0x7c54>  // b.any
  40a88c:	ldrb	w8, [x21]
  40a890:	cmp	w8, #0x24
  40a894:	b.eq	40a8ac <wcrtomb@plt+0x7c4c>  // b.none
  40a898:	cmp	w8, #0x5e
  40a89c:	b.ne	40a8b4 <wcrtomb@plt+0x7c54>  // b.any
  40a8a0:	mov	w8, #0x1                   	// #1
  40a8a4:	strb	w8, [x19, #88]
  40a8a8:	b	40a8b4 <wcrtomb@plt+0x7c54>
  40a8ac:	mov	w8, #0x1                   	// #1
  40a8b0:	strb	w8, [x19, #89]
  40a8b4:	ldp	x20, x19, [sp, #256]
  40a8b8:	ldp	x22, x21, [sp, #240]
  40a8bc:	ldp	x28, x23, [sp, #224]
  40a8c0:	ldp	x29, x30, [sp, #208]
  40a8c4:	add	sp, sp, #0x110
  40a8c8:	ret
  40a8cc:	bl	402d7c <wcrtomb@plt+0x11c>
  40a8d0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40a8d4:	add	x1, x1, #0x221
  40a8d8:	mov	w2, #0x5                   	// #5
  40a8dc:	mov	x0, xzr
  40a8e0:	bl	402b40 <dcgettext@plt>
  40a8e4:	mov	x3, x0
  40a8e8:	add	x0, sp, #0x8
  40a8ec:	mov	w1, #0x1                   	// #1
  40a8f0:	mov	w2, #0xc8                  	// #200
  40a8f4:	mov	w4, w20
  40a8f8:	bl	4025d0 <__sprintf_chk@plt>
  40a8fc:	add	x0, sp, #0x8
  40a900:	bl	402d7c <wcrtomb@plt+0x11c>
  40a904:	sub	sp, sp, #0x70
  40a908:	stp	x24, x23, [sp, #64]
  40a90c:	stp	x22, x21, [sp, #80]
  40a910:	stp	x20, x19, [sp, #96]
  40a914:	mov	w20, w5
  40a918:	mov	x19, x4
  40a91c:	mov	x22, x3
  40a920:	mov	x24, x2
  40a924:	mov	x21, x1
  40a928:	stp	x29, x30, [sp, #16]
  40a92c:	stp	x28, x27, [sp, #32]
  40a930:	stp	x26, x25, [sp, #48]
  40a934:	add	x29, sp, #0x10
  40a938:	cbz	x0, 40a94c <wcrtomb@plt+0x7cec>
  40a93c:	mov	x23, x0
  40a940:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a944:	str	x0, [x8, #1840]
  40a948:	b	40a958 <wcrtomb@plt+0x7cf8>
  40a94c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a950:	ldr	x23, [x8, #1840]
  40a954:	cbz	x23, 40aca0 <wcrtomb@plt+0x8040>
  40a958:	mov	w8, #0x7fffffff            	// #2147483647
  40a95c:	cmp	x24, x8
  40a960:	b.cs	40ac88 <wcrtomb@plt+0x8028>  // b.hs, b.nlast
  40a964:	ldrb	w8, [x23, #56]
  40a968:	cbz	w20, 40a9a0 <wcrtomb@plt+0x7d40>
  40a96c:	tbz	w8, #4, 40a9a0 <wcrtomb@plt+0x7d40>
  40a970:	ldr	x0, [x23, #80]
  40a974:	cbz	x0, 40a988 <wcrtomb@plt+0x7d28>
  40a978:	bl	40e5bc <wcrtomb@plt+0xb95c>
  40a97c:	ldr	x0, [x23, #80]
  40a980:	bl	402a10 <free@plt>
  40a984:	str	xzr, [x23, #80]
  40a988:	mov	x0, x23
  40a98c:	bl	4174e4 <_obstack_memory_used@@Base+0x1a8c>
  40a990:	mov	x0, x23
  40a994:	mov	w1, w20
  40a998:	bl	40a708 <wcrtomb@plt+0x7aa8>
  40a99c:	ldrb	w8, [x23, #56]
  40a9a0:	ldrb	w10, [x23, #88]
  40a9a4:	ldrb	w9, [x23, #89]
  40a9a8:	and	w8, w8, #0xfffffffb
  40a9ac:	orr	w8, w8, #0x2
  40a9b0:	strb	w8, [x23, #56]
  40a9b4:	cbz	w10, 40a9d0 <wcrtomb@plt+0x7d70>
  40a9b8:	cbnz	w9, 40a9d4 <wcrtomb@plt+0x7d74>
  40a9bc:	cbz	x22, 40aa04 <wcrtomb@plt+0x7da4>
  40a9c0:	ldrb	w8, [x23, #64]
  40a9c4:	tbnz	w8, #2, 40aae8 <wcrtomb@plt+0x7e88>
  40a9c8:	mov	w0, wzr
  40a9cc:	b	40aa80 <wcrtomb@plt+0x7e20>
  40a9d0:	cbz	w9, 40aaa0 <wcrtomb@plt+0x7e40>
  40a9d4:	ldrb	w8, [x23, #64]
  40a9d8:	tbnz	w8, #2, 40a9e4 <wcrtomb@plt+0x7d84>
  40a9dc:	mov	x0, xzr
  40a9e0:	b	40a9f8 <wcrtomb@plt+0x7d98>
  40a9e4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40a9e8:	ldrb	w1, [x8, #1096]
  40a9ec:	add	x0, x21, x22
  40a9f0:	sub	x2, x24, x22
  40a9f4:	bl	402ae0 <memchr@plt>
  40a9f8:	sub	x8, x0, x21
  40a9fc:	cmp	x0, #0x0
  40aa00:	csel	x22, x24, x8, eq  // eq = none
  40aa04:	cbz	w20, 40aa7c <wcrtomb@plt+0x7e1c>
  40aa08:	ldr	x8, [x19, #8]
  40aa0c:	cbz	x8, 40aa18 <wcrtomb@plt+0x7db8>
  40aa10:	ldr	x0, [x19, #16]
  40aa14:	b	40aa44 <wcrtomb@plt+0x7de4>
  40aa18:	mov	w0, #0x1                   	// #1
  40aa1c:	mov	w1, #0x8                   	// #8
  40aa20:	mov	w20, #0x1                   	// #1
  40aa24:	bl	415564 <wcrtomb@plt+0x12904>
  40aa28:	str	x0, [x19, #8]
  40aa2c:	mov	w0, #0x1                   	// #1
  40aa30:	mov	w1, #0x8                   	// #8
  40aa34:	bl	415564 <wcrtomb@plt+0x12904>
  40aa38:	ldr	x8, [x19, #8]
  40aa3c:	str	x0, [x19, #16]
  40aa40:	str	x20, [x19]
  40aa44:	str	x22, [x8]
  40aa48:	str	x22, [x0]
  40aa4c:	ldr	x9, [x19]
  40aa50:	cmp	x9, #0x2
  40aa54:	b.cc	40aa7c <wcrtomb@plt+0x7e1c>  // b.lo, b.ul, b.last
  40aa58:	mov	w9, #0x1                   	// #1
  40aa5c:	mov	x10, #0xffffffffffffffff    	// #-1
  40aa60:	lsl	x11, x9, #3
  40aa64:	str	x10, [x0, x11]
  40aa68:	str	x10, [x8, x11]
  40aa6c:	ldr	x11, [x19]
  40aa70:	add	x9, x9, #0x1
  40aa74:	cmp	x9, x11
  40aa78:	b.cc	40aa60 <wcrtomb@plt+0x7e00>  // b.lo, b.ul, b.last
  40aa7c:	mov	w0, #0x1                   	// #1
  40aa80:	ldp	x20, x19, [sp, #96]
  40aa84:	ldp	x22, x21, [sp, #80]
  40aa88:	ldp	x24, x23, [sp, #64]
  40aa8c:	ldp	x26, x25, [sp, #48]
  40aa90:	ldp	x28, x27, [sp, #32]
  40aa94:	ldp	x29, x30, [sp, #16]
  40aa98:	add	sp, sp, #0x70
  40aa9c:	ret
  40aaa0:	cbz	x22, 40ab1c <wcrtomb@plt+0x7ebc>
  40aaa4:	ldrb	w8, [x23, #64]
  40aaa8:	tbz	w8, #2, 40aabc <wcrtomb@plt+0x7e5c>
  40aaac:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40aab0:	ldrb	w26, [x8, #1096]
  40aab4:	cmp	w26, #0xa
  40aab8:	b.ne	40ab70 <wcrtomb@plt+0x7f10>  // b.any
  40aabc:	cmp	w20, #0x0
  40aac0:	sub	x4, x24, x22
  40aac4:	csel	x5, x19, xzr, ne  // ne = any
  40aac8:	mov	x0, x23
  40aacc:	mov	x1, x21
  40aad0:	mov	x2, x24
  40aad4:	mov	x3, x22
  40aad8:	bl	41a20c <_obstack_memory_used@@Base+0x47b4>
  40aadc:	mvn	w8, w0
  40aae0:	lsr	w0, w8, #31
  40aae4:	b	40aa80 <wcrtomb@plt+0x7e20>
  40aae8:	add	x8, x22, x21
  40aaec:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40aaf0:	ldurb	w8, [x8, #-1]
  40aaf4:	ldrb	w1, [x9, #1096]
  40aaf8:	cmp	w8, w1
  40aafc:	b.eq	40aa04 <wcrtomb@plt+0x7da4>  // b.none
  40ab00:	add	x0, x21, x22
  40ab04:	sub	x2, x24, x22
  40ab08:	bl	402ae0 <memchr@plt>
  40ab0c:	cbz	x0, 40aa80 <wcrtomb@plt+0x7e20>
  40ab10:	sub	x8, x0, x21
  40ab14:	add	x22, x8, #0x1
  40ab18:	b	40aa04 <wcrtomb@plt+0x7da4>
  40ab1c:	ldr	x0, [x23, #80]
  40ab20:	bl	40d0c8 <wcrtomb@plt+0xa468>
  40ab24:	mov	x25, x0
  40ab28:	cbz	x0, 40ab4c <wcrtomb@plt+0x7eec>
  40ab2c:	add	x2, x21, x24
  40ab30:	mov	w3, #0x1                   	// #1
  40ab34:	mov	x0, x25
  40ab38:	mov	x1, x21
  40ab3c:	mov	x4, xzr
  40ab40:	mov	x5, xzr
  40ab44:	bl	40d0bc <wcrtomb@plt+0xa45c>
  40ab48:	cbz	x0, 40aa80 <wcrtomb@plt+0x7e20>
  40ab4c:	cbnz	w20, 40ab58 <wcrtomb@plt+0x7ef8>
  40ab50:	ldrb	w8, [x23, #64]
  40ab54:	tbnz	w8, #2, 40ac48 <wcrtomb@plt+0x7fe8>
  40ab58:	cbnz	x25, 40aaa4 <wcrtomb@plt+0x7e44>
  40ab5c:	ldr	x25, [x23, #80]
  40ab60:	mov	x0, x25
  40ab64:	bl	40d0d0 <wcrtomb@plt+0xa470>
  40ab68:	tbz	w0, #0, 40aaa4 <wcrtomb@plt+0x7e44>
  40ab6c:	b	40ac4c <wcrtomb@plt+0x7fec>
  40ab70:	mov	x25, x21
  40ab74:	cbz	x22, 40ab90 <wcrtomb@plt+0x7f30>
  40ab78:	mov	x0, x21
  40ab7c:	mov	w1, w26
  40ab80:	mov	x2, x22
  40ab84:	bl	402a60 <memrchr@plt>
  40ab88:	cmp	x0, #0x0
  40ab8c:	csinc	x25, x21, x0, eq  // eq = none
  40ab90:	cmp	w20, #0x0
  40ab94:	add	x28, x21, x22
  40ab98:	add	x24, x21, x24
  40ab9c:	csel	x22, x19, xzr, ne  // ne = any
  40aba0:	and	w1, w26, #0xff
  40aba4:	sub	x2, x24, x25
  40aba8:	mov	x0, x25
  40abac:	bl	402ae0 <memchr@plt>
  40abb0:	cmp	x0, #0x0
  40abb4:	csel	x27, x24, x0, eq  // eq = none
  40abb8:	sub	x3, x28, x25
  40abbc:	sub	x2, x27, x25
  40abc0:	sub	x4, x27, x28
  40abc4:	mov	x0, x23
  40abc8:	mov	x1, x25
  40abcc:	mov	x5, x22
  40abd0:	bl	41a20c <_obstack_memory_used@@Base+0x47b4>
  40abd4:	tbz	w0, #31, 40abf4 <wcrtomb@plt+0x7f94>
  40abd8:	cmp	x27, x24
  40abdc:	b.eq	40aadc <wcrtomb@plt+0x7e7c>  // b.none
  40abe0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40abe4:	ldrb	w26, [x8, #1096]
  40abe8:	add	x25, x27, #0x1
  40abec:	mov	x28, x25
  40abf0:	b	40aba0 <wcrtomb@plt+0x7f40>
  40abf4:	sub	x8, x25, x21
  40abf8:	add	w0, w0, w8
  40abfc:	cbz	w20, 40aadc <wcrtomb@plt+0x7e7c>
  40ac00:	ldr	x9, [x19]
  40ac04:	cbz	x9, 40aadc <wcrtomb@plt+0x7e7c>
  40ac08:	ldp	x9, x10, [x19, #8]
  40ac0c:	mov	x11, xzr
  40ac10:	b	40ac24 <wcrtomb@plt+0x7fc4>
  40ac14:	ldr	x12, [x19]
  40ac18:	add	x11, x11, #0x1
  40ac1c:	cmp	x11, x12
  40ac20:	b.cs	40aadc <wcrtomb@plt+0x7e7c>  // b.hs, b.nlast
  40ac24:	ldr	x12, [x9, x11, lsl #3]
  40ac28:	tbnz	x12, #63, 40ac34 <wcrtomb@plt+0x7fd4>
  40ac2c:	add	x12, x12, x8
  40ac30:	str	x12, [x9, x11, lsl #3]
  40ac34:	ldr	x12, [x10, x11, lsl #3]
  40ac38:	tbnz	x12, #63, 40ac14 <wcrtomb@plt+0x7fb4>
  40ac3c:	add	x12, x12, x8
  40ac40:	str	x12, [x10, x11, lsl #3]
  40ac44:	b	40ac14 <wcrtomb@plt+0x7fb4>
  40ac48:	ldr	x25, [x23, #80]
  40ac4c:	add	x2, x21, x24
  40ac50:	sub	x5, x29, #0x4
  40ac54:	mov	w3, #0x1                   	// #1
  40ac58:	mov	x0, x25
  40ac5c:	mov	x1, x21
  40ac60:	mov	x4, xzr
  40ac64:	sturb	wzr, [x29, #-4]
  40ac68:	bl	40d0bc <wcrtomb@plt+0xa45c>
  40ac6c:	cbz	x0, 40aa80 <wcrtomb@plt+0x7e20>
  40ac70:	cbnz	w20, 40aaa4 <wcrtomb@plt+0x7e44>
  40ac74:	ldrb	w8, [x23, #64]
  40ac78:	tbz	w8, #2, 40aaa4 <wcrtomb@plt+0x7e44>
  40ac7c:	ldurb	w8, [x29, #-4]
  40ac80:	cbz	w8, 40aa7c <wcrtomb@plt+0x7e1c>
  40ac84:	b	40aaa4 <wcrtomb@plt+0x7e44>
  40ac88:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ac8c:	add	x1, x1, #0x1f3
  40ac90:	mov	w2, #0x5                   	// #5
  40ac94:	mov	x0, xzr
  40ac98:	bl	402b40 <dcgettext@plt>
  40ac9c:	bl	40b53c <wcrtomb@plt+0x88dc>
  40aca0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40aca4:	add	x1, x1, #0x24c
  40aca8:	mov	w2, #0x5                   	// #5
  40acac:	mov	x0, xzr
  40acb0:	bl	402b40 <dcgettext@plt>
  40acb4:	bl	402d7c <wcrtomb@plt+0x11c>
  40acb8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40acbc:	str	x0, [x8, #1888]
  40acc0:	ret
  40acc4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40acc8:	str	xzr, [x8, #1888]
  40accc:	ret
  40acd0:	sub	sp, sp, #0x80
  40acd4:	stp	x20, x19, [sp, #112]
  40acd8:	mov	w20, w0
  40acdc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ace0:	add	x0, x0, #0x61d
  40ace4:	stp	x29, x30, [sp, #32]
  40ace8:	stp	x28, x27, [sp, #48]
  40acec:	stp	x26, x25, [sp, #64]
  40acf0:	stp	x24, x23, [sp, #80]
  40acf4:	stp	x22, x21, [sp, #96]
  40acf8:	add	x29, sp, #0x20
  40acfc:	mov	x19, x1
  40ad00:	bl	402be0 <getenv@plt>
  40ad04:	ldr	x8, [x19]
  40ad08:	mov	x21, x0
  40ad0c:	mov	x0, x8
  40ad10:	bl	413268 <wcrtomb@plt+0x10608>
  40ad14:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ad18:	add	x1, x1, #0x7c3
  40ad1c:	mov	w0, #0x6                   	// #6
  40ad20:	bl	402c40 <setlocale@plt>
  40ad24:	bl	40a5c8 <wcrtomb@plt+0x7968>
  40ad28:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ad2c:	add	x0, x0, #0x8dc
  40ad30:	bl	413038 <wcrtomb@plt+0x103d8>
  40ad34:	adrp	x0, 40b000 <wcrtomb@plt+0x83a0>
  40ad38:	add	x0, x0, #0x154
  40ad3c:	bl	425560 <_obstack_memory_used@@Base+0xfb08>
  40ad40:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ad44:	add	x22, x22, #0x651
  40ad48:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ad4c:	add	x1, x1, #0x622
  40ad50:	mov	x0, x22
  40ad54:	bl	4027a0 <bindtextdomain@plt>
  40ad58:	mov	x0, x22
  40ad5c:	bl	4029a0 <textdomain@plt>
  40ad60:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ad64:	add	x0, x0, #0x1e3
  40ad68:	bl	402be0 <getenv@plt>
  40ad6c:	cmp	x0, #0x0
  40ad70:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ad74:	cset	w8, ne  // ne = any
  40ad78:	str	w8, [x9, #2264]
  40ad7c:	cbz	x21, 40ada8 <wcrtomb@plt+0x8148>
  40ad80:	mov	w2, #0xa                   	// #10
  40ad84:	mov	x0, x21
  40ad88:	mov	x1, xzr
  40ad8c:	bl	402a00 <strtol@plt>
  40ad90:	cmp	w0, #0x2
  40ad94:	b.cc	40ada8 <wcrtomb@plt+0x8148>  // b.lo, b.ul, b.last
  40ad98:	sxtw	x8, w0
  40ad9c:	sub	x8, x8, #0x1
  40ada0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ada4:	str	x8, [x9, #1120]
  40ada8:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x105a8>
  40adac:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x105a8>
  40adb0:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x105a8>
  40adb4:	add	x21, x21, #0x634
  40adb8:	add	x22, x22, #0x318
  40adbc:	mov	w27, #0x1                   	// #1
  40adc0:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  40adc4:	add	x24, x24, #0x298
  40adc8:	adrp	x26, 439000 <_obstack_memory_used@@Base+0x235a8>
  40adcc:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40add0:	mov	w0, w20
  40add4:	mov	x1, x19
  40add8:	mov	x2, x21
  40addc:	mov	x3, x22
  40ade0:	mov	x4, xzr
  40ade4:	bl	4029b0 <getopt_long@plt>
  40ade8:	add	w8, w0, #0x1
  40adec:	cmp	w8, #0x7b
  40adf0:	b.hi	40ae0c <wcrtomb@plt+0x81ac>  // b.pmore
  40adf4:	adr	x9, 40ae04 <wcrtomb@plt+0x81a4>
  40adf8:	ldrb	w10, [x24, x8]
  40adfc:	add	x9, x9, x10, lsl #2
  40ae00:	br	x9
  40ae04:	str	w27, [x26, #1848]
  40ae08:	b	40add0 <wcrtomb@plt+0x8170>
  40ae0c:	cmp	w0, #0x100
  40ae10:	b.eq	40ae3c <wcrtomb@plt+0x81dc>  // b.none
  40ae14:	cmp	w0, #0x101
  40ae18:	b.ne	40b054 <wcrtomb@plt+0x83f4>  // b.any
  40ae1c:	strb	w27, [x25, #1872]
  40ae20:	b	40add0 <wcrtomb@plt+0x8170>
  40ae24:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae28:	strb	w27, [x8, #1856]
  40ae2c:	b	40add0 <wcrtomb@plt+0x8170>
  40ae30:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae34:	strb	w27, [x8, #1852]
  40ae38:	b	40add0 <wcrtomb@plt+0x8170>
  40ae3c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae40:	strb	w27, [x8, #1868]
  40ae44:	b	40add0 <wcrtomb@plt+0x8170>
  40ae48:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae4c:	mov	x28, x24
  40ae50:	ldr	x24, [x8, #1256]
  40ae54:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae58:	strb	w27, [x8, #1860]
  40ae5c:	cbz	x24, 40af64 <wcrtomb@plt+0x8304>
  40ae60:	mov	w1, #0x2a                  	// #42
  40ae64:	mov	x0, x24
  40ae68:	bl	402a50 <strchr@plt>
  40ae6c:	cbz	x0, 40af80 <wcrtomb@plt+0x8320>
  40ae70:	mov	x0, x24
  40ae74:	b	40af6c <wcrtomb@plt+0x830c>
  40ae78:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae7c:	strb	wzr, [x8, #1096]
  40ae80:	b	40add0 <wcrtomb@plt+0x8170>
  40ae84:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ae88:	mov	x28, x25
  40ae8c:	ldr	x25, [x8, #1256]
  40ae90:	mov	x27, x26
  40ae94:	mov	x26, x22
  40ae98:	mov	x22, x21
  40ae9c:	mov	x21, x24
  40aea0:	ldr	x24, [x23, #1896]
  40aea4:	mov	x0, x25
  40aea8:	bl	4025c0 <strlen@plt>
  40aeac:	mov	x2, x0
  40aeb0:	mov	x0, x24
  40aeb4:	mov	x1, x25
  40aeb8:	mov	x24, x21
  40aebc:	mov	x21, x22
  40aec0:	mov	x22, x26
  40aec4:	mov	x26, x27
  40aec8:	mov	x25, x28
  40aecc:	mov	w27, #0x1                   	// #1
  40aed0:	bl	403220 <wcrtomb@plt+0x5c0>
  40aed4:	str	x0, [x23, #1896]
  40aed8:	b	40add0 <wcrtomb@plt+0x8170>
  40aedc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40aee0:	ldr	x0, [x8, #1256]
  40aee4:	mov	w2, #0xa                   	// #10
  40aee8:	mov	x1, xzr
  40aeec:	bl	402a00 <strtol@plt>
  40aef0:	sxtw	x8, w0
  40aef4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40aef8:	str	x8, [x9, #1120]
  40aefc:	b	40add0 <wcrtomb@plt+0x8170>
  40af00:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af04:	mov	w9, #0x2                   	// #2
  40af08:	str	w9, [x8, #2264]
  40af0c:	b	40add0 <wcrtomb@plt+0x8170>
  40af10:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af14:	strb	w27, [x8, #1864]
  40af18:	b	40add0 <wcrtomb@plt+0x8170>
  40af1c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40af20:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af24:	add	x9, x9, #0x647
  40af28:	str	x9, [x8, #1104]
  40af2c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40af30:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af34:	add	x9, x9, #0x64a
  40af38:	str	x9, [x8, #1112]
  40af3c:	b	40add0 <wcrtomb@plt+0x8170>
  40af40:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af44:	ldr	x0, [x23, #1896]
  40af48:	ldr	x1, [x8, #1256]
  40af4c:	bl	405478 <wcrtomb@plt+0x2818>
  40af50:	str	x0, [x23, #1896]
  40af54:	b	40add0 <wcrtomb@plt+0x8170>
  40af58:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af5c:	strb	w27, [x8, #1860]
  40af60:	b	40add0 <wcrtomb@plt+0x8170>
  40af64:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40af68:	add	x0, x0, #0x1b0
  40af6c:	bl	4155e4 <wcrtomb@plt+0x12984>
  40af70:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af74:	str	x0, [x8, #1880]
  40af78:	mov	x24, x28
  40af7c:	b	40add0 <wcrtomb@plt+0x8170>
  40af80:	mov	x0, x24
  40af84:	bl	4025c0 <strlen@plt>
  40af88:	add	x0, x0, #0x2
  40af8c:	bl	415540 <wcrtomb@plt+0x128e0>
  40af90:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af94:	ldr	x1, [x8, #1256]
  40af98:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40af9c:	str	x0, [x8, #1880]
  40afa0:	mov	w8, #0x2a                  	// #42
  40afa4:	strb	w8, [x0], #1
  40afa8:	bl	402ab0 <strcpy@plt>
  40afac:	mov	x24, x28
  40afb0:	b	40add0 <wcrtomb@plt+0x8170>
  40afb4:	ldr	x0, [x23, #1896]
  40afb8:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  40afbc:	cbnz	x0, 40aff4 <wcrtomb@plt+0x8394>
  40afc0:	ldrsw	x8, [x21, #1264]
  40afc4:	cmp	w8, w20
  40afc8:	b.ge	40b054 <wcrtomb@plt+0x83f4>  // b.tcont
  40afcc:	add	w9, w8, #0x1
  40afd0:	str	w9, [x21, #1264]
  40afd4:	ldr	x20, [x19, x8, lsl #3]
  40afd8:	mov	x0, x20
  40afdc:	bl	4025c0 <strlen@plt>
  40afe0:	mov	x2, x0
  40afe4:	mov	x0, xzr
  40afe8:	mov	x1, x20
  40afec:	bl	403220 <wcrtomb@plt+0x5c0>
  40aff0:	str	x0, [x23, #1896]
  40aff4:	bl	40552c <wcrtomb@plt+0x28cc>
  40aff8:	ldrb	w8, [x25, #1872]
  40affc:	cbz	w8, 40b008 <wcrtomb@plt+0x83a8>
  40b000:	ldr	x0, [x23, #1896]
  40b004:	bl	407aac <wcrtomb@plt+0x4e4c>
  40b008:	ldrsw	x8, [x21, #1264]
  40b00c:	ldr	x0, [x23, #1896]
  40b010:	add	x1, x19, x8, lsl #3
  40b014:	bl	407c20 <wcrtomb@plt+0x4fc0>
  40b018:	ldr	x8, [x23, #1896]
  40b01c:	mov	w19, w0
  40b020:	mov	x0, x8
  40b024:	bl	4056e0 <wcrtomb@plt+0x2a80>
  40b028:	mov	x0, xzr
  40b02c:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  40b030:	mov	w0, w19
  40b034:	ldp	x20, x19, [sp, #112]
  40b038:	ldp	x22, x21, [sp, #96]
  40b03c:	ldp	x24, x23, [sp, #80]
  40b040:	ldp	x26, x25, [sp, #64]
  40b044:	ldp	x28, x27, [sp, #48]
  40b048:	ldp	x29, x30, [sp, #32]
  40b04c:	add	sp, sp, #0x80
  40b050:	ret
  40b054:	mov	w0, #0x1                   	// #1
  40b058:	bl	40b28c <wcrtomb@plt+0x862c>
  40b05c:	mov	w0, wzr
  40b060:	bl	40b28c <wcrtomb@plt+0x862c>
  40b064:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b068:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b06c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b070:	ldr	x19, [x8, #1272]
  40b074:	ldr	x20, [x9, #1936]
  40b078:	ldr	x21, [x10, #1128]
  40b07c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b080:	add	x1, x1, #0x655
  40b084:	mov	w2, #0x5                   	// #5
  40b088:	mov	x0, xzr
  40b08c:	bl	402b40 <dcgettext@plt>
  40b090:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b094:	mov	x22, x0
  40b098:	add	x1, x1, #0x662
  40b09c:	mov	w2, #0x5                   	// #5
  40b0a0:	mov	x0, xzr
  40b0a4:	bl	402b40 <dcgettext@plt>
  40b0a8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b0ac:	mov	x23, x0
  40b0b0:	add	x1, x1, #0x66b
  40b0b4:	mov	w2, #0x5                   	// #5
  40b0b8:	mov	x0, xzr
  40b0bc:	bl	402b40 <dcgettext@plt>
  40b0c0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b0c4:	mov	x24, x0
  40b0c8:	add	x1, x1, #0x677
  40b0cc:	mov	w2, #0x5                   	// #5
  40b0d0:	mov	x0, xzr
  40b0d4:	bl	402b40 <dcgettext@plt>
  40b0d8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b0dc:	mov	x25, x0
  40b0e0:	add	x1, x1, #0x685
  40b0e4:	mov	w2, #0x5                   	// #5
  40b0e8:	mov	x0, xzr
  40b0ec:	bl	402b40 <dcgettext@plt>
  40b0f0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b0f4:	mov	x26, x0
  40b0f8:	add	x1, x1, #0x692
  40b0fc:	mov	w2, #0x5                   	// #5
  40b100:	mov	x0, xzr
  40b104:	bl	402b40 <dcgettext@plt>
  40b108:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b10c:	stp	x0, xzr, [sp, #8]
  40b110:	add	x2, x2, #0x64d
  40b114:	mov	x0, x19
  40b118:	mov	x1, x20
  40b11c:	mov	x3, x21
  40b120:	mov	x4, x22
  40b124:	mov	x5, x23
  40b128:	mov	x6, x24
  40b12c:	mov	x7, x25
  40b130:	str	x26, [sp]
  40b134:	bl	415204 <wcrtomb@plt+0x125a4>
  40b138:	bl	40b168 <wcrtomb@plt+0x8508>
  40b13c:	mov	w0, wzr
  40b140:	bl	40b1f8 <wcrtomb@plt+0x8598>
  40b144:	mov	x0, xzr
  40b148:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  40b14c:	mov	w0, wzr
  40b150:	bl	4025f0 <exit@plt>
  40b154:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b158:	ldr	x0, [x8, #1888]
  40b15c:	cbz	x0, 40b164 <wcrtomb@plt+0x8504>
  40b160:	b	402bf0 <unlink@plt>
  40b164:	ret
  40b168:	stp	x29, x30, [sp, #-32]!
  40b16c:	str	x19, [sp, #16]
  40b170:	adrp	x19, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b174:	ldr	x0, [x19, #1272]
  40b178:	mov	x29, sp
  40b17c:	ldp	x8, x9, [x0, #40]
  40b180:	cmp	x8, x9
  40b184:	b.cs	40b1dc <wcrtomb@plt+0x857c>  // b.hs, b.nlast
  40b188:	add	x9, x8, #0x1
  40b18c:	mov	w10, #0xa                   	// #10
  40b190:	str	x9, [x0, #40]
  40b194:	strb	w10, [x8]
  40b198:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b19c:	add	x1, x1, #0x69f
  40b1a0:	mov	w2, #0x5                   	// #5
  40b1a4:	mov	x0, xzr
  40b1a8:	bl	402b40 <dcgettext@plt>
  40b1ac:	bl	402980 <puts@plt>
  40b1b0:	ldr	x0, [x19, #1272]
  40b1b4:	ldp	x8, x9, [x0, #40]
  40b1b8:	cmp	x8, x9
  40b1bc:	b.cs	40b1e8 <wcrtomb@plt+0x8588>  // b.hs, b.nlast
  40b1c0:	ldr	x19, [sp, #16]
  40b1c4:	add	x9, x8, #0x1
  40b1c8:	mov	w10, #0xa                   	// #10
  40b1cc:	str	x9, [x0, #40]
  40b1d0:	strb	w10, [x8]
  40b1d4:	ldp	x29, x30, [sp], #32
  40b1d8:	ret
  40b1dc:	mov	w1, #0xa                   	// #10
  40b1e0:	bl	402960 <__overflow@plt>
  40b1e4:	b	40b198 <wcrtomb@plt+0x8538>
  40b1e8:	ldr	x19, [sp, #16]
  40b1ec:	mov	w1, #0xa                   	// #10
  40b1f0:	ldp	x29, x30, [sp], #32
  40b1f4:	b	402960 <__overflow@plt>
  40b1f8:	stp	x29, x30, [sp, #-32]!
  40b1fc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b200:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b204:	add	x8, x8, #0x4e0
  40b208:	add	x9, x9, #0x4f8
  40b20c:	cmp	w0, #0x0
  40b210:	stp	x20, x19, [sp, #16]
  40b214:	csel	x8, x8, x9, ne  // ne = any
  40b218:	ldr	x19, [x8]
  40b21c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b220:	mov	w20, w0
  40b224:	add	x1, x1, #0x6d3
  40b228:	mov	w2, #0x5                   	// #5
  40b22c:	mov	x0, xzr
  40b230:	mov	x29, sp
  40b234:	bl	402b40 <dcgettext@plt>
  40b238:	mov	x2, x0
  40b23c:	mov	w1, #0x1                   	// #1
  40b240:	mov	x0, x19
  40b244:	bl	4029c0 <__fprintf_chk@plt>
  40b248:	cbz	w20, 40b258 <wcrtomb@plt+0x85f8>
  40b24c:	ldp	x20, x19, [sp, #16]
  40b250:	ldp	x29, x30, [sp], #32
  40b254:	ret
  40b258:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b25c:	add	x1, x1, #0x74d
  40b260:	mov	w2, #0x5                   	// #5
  40b264:	mov	x0, xzr
  40b268:	bl	402b40 <dcgettext@plt>
  40b26c:	mov	x2, x0
  40b270:	mov	x0, x19
  40b274:	ldp	x20, x19, [sp, #16]
  40b278:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b27c:	add	x3, x3, #0x76b
  40b280:	mov	w1, #0x1                   	// #1
  40b284:	ldp	x29, x30, [sp], #32
  40b288:	b	4029c0 <__fprintf_chk@plt>
  40b28c:	stp	x29, x30, [sp, #-32]!
  40b290:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b294:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b298:	add	x8, x8, #0x4e0
  40b29c:	add	x9, x9, #0x4f8
  40b2a0:	cmp	w0, #0x0
  40b2a4:	stp	x20, x19, [sp, #16]
  40b2a8:	csel	x8, x9, x8, eq  // eq = none
  40b2ac:	ldr	x20, [x8]
  40b2b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b2b4:	mov	w19, w0
  40b2b8:	add	x1, x1, #0x77b
  40b2bc:	mov	w2, #0x5                   	// #5
  40b2c0:	mov	x0, xzr
  40b2c4:	mov	x29, sp
  40b2c8:	bl	402b40 <dcgettext@plt>
  40b2cc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b2d0:	ldr	x3, [x8, #1936]
  40b2d4:	mov	x2, x0
  40b2d8:	mov	w1, #0x1                   	// #1
  40b2dc:	mov	x0, x20
  40b2e0:	bl	4029c0 <__fprintf_chk@plt>
  40b2e4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b2e8:	add	x1, x1, #0x7c4
  40b2ec:	mov	w2, #0x5                   	// #5
  40b2f0:	mov	x0, xzr
  40b2f4:	bl	402b40 <dcgettext@plt>
  40b2f8:	mov	x2, x0
  40b2fc:	mov	w1, #0x1                   	// #1
  40b300:	mov	x0, x20
  40b304:	bl	4029c0 <__fprintf_chk@plt>
  40b308:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b30c:	add	x1, x1, #0x81b
  40b310:	mov	w2, #0x5                   	// #5
  40b314:	mov	x0, xzr
  40b318:	bl	402b40 <dcgettext@plt>
  40b31c:	mov	x2, x0
  40b320:	mov	w1, #0x1                   	// #1
  40b324:	mov	x0, x20
  40b328:	bl	4029c0 <__fprintf_chk@plt>
  40b32c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b330:	add	x1, x1, #0x856
  40b334:	mov	w2, #0x5                   	// #5
  40b338:	mov	x0, xzr
  40b33c:	bl	402b40 <dcgettext@plt>
  40b340:	mov	x2, x0
  40b344:	mov	w1, #0x1                   	// #1
  40b348:	mov	x0, x20
  40b34c:	bl	4029c0 <__fprintf_chk@plt>
  40b350:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b354:	add	x1, x1, #0x8b7
  40b358:	mov	w2, #0x5                   	// #5
  40b35c:	mov	x0, xzr
  40b360:	bl	402b40 <dcgettext@plt>
  40b364:	mov	x2, x0
  40b368:	mov	w1, #0x1                   	// #1
  40b36c:	mov	x0, x20
  40b370:	bl	4029c0 <__fprintf_chk@plt>
  40b374:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b378:	add	x1, x1, #0x92d
  40b37c:	mov	w2, #0x5                   	// #5
  40b380:	mov	x0, xzr
  40b384:	bl	402b40 <dcgettext@plt>
  40b388:	mov	x2, x0
  40b38c:	mov	w1, #0x1                   	// #1
  40b390:	mov	x0, x20
  40b394:	bl	4029c0 <__fprintf_chk@plt>
  40b398:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b39c:	add	x1, x1, #0x97c
  40b3a0:	mov	w2, #0x5                   	// #5
  40b3a4:	mov	x0, xzr
  40b3a8:	bl	402b40 <dcgettext@plt>
  40b3ac:	mov	x2, x0
  40b3b0:	mov	w1, #0x1                   	// #1
  40b3b4:	mov	x0, x20
  40b3b8:	bl	4029c0 <__fprintf_chk@plt>
  40b3bc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b3c0:	add	x1, x1, #0x9e6
  40b3c4:	mov	w2, #0x5                   	// #5
  40b3c8:	mov	x0, xzr
  40b3cc:	bl	402b40 <dcgettext@plt>
  40b3d0:	mov	x2, x0
  40b3d4:	mov	w1, #0x1                   	// #1
  40b3d8:	mov	x0, x20
  40b3dc:	bl	4029c0 <__fprintf_chk@plt>
  40b3e0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b3e4:	add	x1, x1, #0xa49
  40b3e8:	mov	w2, #0x5                   	// #5
  40b3ec:	mov	x0, xzr
  40b3f0:	bl	402b40 <dcgettext@plt>
  40b3f4:	mov	x2, x0
  40b3f8:	mov	w1, #0x1                   	// #1
  40b3fc:	mov	x0, x20
  40b400:	bl	4029c0 <__fprintf_chk@plt>
  40b404:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b408:	add	x1, x1, #0xa81
  40b40c:	mov	w2, #0x5                   	// #5
  40b410:	mov	x0, xzr
  40b414:	bl	402b40 <dcgettext@plt>
  40b418:	mov	x2, x0
  40b41c:	mov	w1, #0x1                   	// #1
  40b420:	mov	x0, x20
  40b424:	bl	4029c0 <__fprintf_chk@plt>
  40b428:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b42c:	add	x1, x1, #0xb0f
  40b430:	mov	w2, #0x5                   	// #5
  40b434:	mov	x0, xzr
  40b438:	bl	402b40 <dcgettext@plt>
  40b43c:	mov	x2, x0
  40b440:	mov	w1, #0x1                   	// #1
  40b444:	mov	x0, x20
  40b448:	bl	4029c0 <__fprintf_chk@plt>
  40b44c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b450:	add	x1, x1, #0xb8f
  40b454:	mov	w2, #0x5                   	// #5
  40b458:	mov	x0, xzr
  40b45c:	bl	402b40 <dcgettext@plt>
  40b460:	mov	x2, x0
  40b464:	mov	w1, #0x1                   	// #1
  40b468:	mov	x0, x20
  40b46c:	bl	4029c0 <__fprintf_chk@plt>
  40b470:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b474:	add	x1, x1, #0xbe3
  40b478:	mov	w2, #0x5                   	// #5
  40b47c:	mov	x0, xzr
  40b480:	bl	402b40 <dcgettext@plt>
  40b484:	mov	x2, x0
  40b488:	mov	w1, #0x1                   	// #1
  40b48c:	mov	x0, x20
  40b490:	bl	4029c0 <__fprintf_chk@plt>
  40b494:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b498:	add	x1, x1, #0xc73
  40b49c:	mov	w2, #0x5                   	// #5
  40b4a0:	mov	x0, xzr
  40b4a4:	bl	402b40 <dcgettext@plt>
  40b4a8:	mov	x2, x0
  40b4ac:	mov	w1, #0x1                   	// #1
  40b4b0:	mov	x0, x20
  40b4b4:	bl	4029c0 <__fprintf_chk@plt>
  40b4b8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b4bc:	add	x1, x1, #0xcb8
  40b4c0:	mov	w2, #0x5                   	// #5
  40b4c4:	mov	x0, xzr
  40b4c8:	bl	402b40 <dcgettext@plt>
  40b4cc:	mov	x2, x0
  40b4d0:	mov	w1, #0x1                   	// #1
  40b4d4:	mov	x0, x20
  40b4d8:	bl	4029c0 <__fprintf_chk@plt>
  40b4dc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b4e0:	add	x1, x1, #0xce5
  40b4e4:	mov	w2, #0x5                   	// #5
  40b4e8:	mov	x0, xzr
  40b4ec:	bl	402b40 <dcgettext@plt>
  40b4f0:	mov	x2, x0
  40b4f4:	mov	w1, #0x1                   	// #1
  40b4f8:	mov	x0, x20
  40b4fc:	bl	4029c0 <__fprintf_chk@plt>
  40b500:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b504:	add	x1, x1, #0xd1b
  40b508:	mov	w2, #0x5                   	// #5
  40b50c:	mov	x0, xzr
  40b510:	bl	402b40 <dcgettext@plt>
  40b514:	mov	x2, x0
  40b518:	mov	w1, #0x1                   	// #1
  40b51c:	mov	x0, x20
  40b520:	bl	4029c0 <__fprintf_chk@plt>
  40b524:	mov	w0, w19
  40b528:	bl	40b1f8 <wcrtomb@plt+0x8598>
  40b52c:	mov	x0, xzr
  40b530:	bl	40bc5c <wcrtomb@plt+0x8ffc>
  40b534:	mov	w0, w19
  40b538:	bl	4025f0 <exit@plt>
  40b53c:	sub	sp, sp, #0x150
  40b540:	stp	x29, x30, [sp, #256]
  40b544:	stp	x24, x23, [sp, #288]
  40b548:	add	x29, sp, #0x100
  40b54c:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b550:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b554:	stp	x20, x19, [sp, #320]
  40b558:	mov	x19, x0
  40b55c:	stp	x3, x4, [x29, #-104]
  40b560:	ldr	x0, [x23, #1248]
  40b564:	ldr	x3, [x8, #1936]
  40b568:	stp	x1, x2, [x29, #-120]
  40b56c:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b570:	add	x2, x2, #0xe30
  40b574:	mov	w1, #0x1                   	// #1
  40b578:	str	x28, [sp, #272]
  40b57c:	stp	x22, x21, [sp, #304]
  40b580:	stp	x5, x6, [x29, #-88]
  40b584:	stur	x7, [x29, #-72]
  40b588:	stp	q0, q1, [sp]
  40b58c:	stp	q2, q3, [sp, #32]
  40b590:	stp	q4, q5, [sp, #64]
  40b594:	stp	q6, q7, [sp, #96]
  40b598:	bl	4029c0 <__fprintf_chk@plt>
  40b59c:	sub	x9, x29, #0x78
  40b5a0:	mov	x10, sp
  40b5a4:	mov	x11, #0xffffffffffffffc8    	// #-56
  40b5a8:	add	x8, x29, #0x50
  40b5ac:	movk	x11, #0xff80, lsl #32
  40b5b0:	add	x9, x9, #0x38
  40b5b4:	add	x10, x10, #0x80
  40b5b8:	stp	x8, x9, [x29, #-64]
  40b5bc:	stp	x10, x11, [x29, #-48]
  40b5c0:	ldp	q0, q1, [x29, #-64]
  40b5c4:	ldr	x0, [x23, #1248]
  40b5c8:	sub	x3, x29, #0x20
  40b5cc:	mov	w1, #0x1                   	// #1
  40b5d0:	mov	x2, x19
  40b5d4:	stp	q0, q1, [x29, #-32]
  40b5d8:	bl	402830 <__vfprintf_chk@plt>
  40b5dc:	ldr	x0, [x23, #1248]
  40b5e0:	ldp	x8, x9, [x0, #40]
  40b5e4:	cmp	x8, x9
  40b5e8:	b.cs	40b600 <wcrtomb@plt+0x89a0>  // b.hs, b.nlast
  40b5ec:	add	x9, x8, #0x1
  40b5f0:	mov	w10, #0xa                   	// #10
  40b5f4:	str	x9, [x0, #40]
  40b5f8:	strb	w10, [x8]
  40b5fc:	b	40b608 <wcrtomb@plt+0x89a8>
  40b600:	mov	w1, #0xa                   	// #10
  40b604:	bl	402960 <__overflow@plt>
  40b608:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b60c:	ldr	x8, [x24, #1904]
  40b610:	cbz	x8, 40b6a0 <wcrtomb@plt+0x8a40>
  40b614:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b618:	add	x19, x19, #0xe35
  40b61c:	ldrb	w9, [x8, #24]
  40b620:	tbz	w9, #0, 40b690 <wcrtomb@plt+0x8a30>
  40b624:	ldr	x0, [x8]
  40b628:	bl	4026d0 <fclose@plt>
  40b62c:	bl	402bd0 <__errno_location@plt>
  40b630:	str	wzr, [x0]
  40b634:	ldr	x8, [x24, #1904]
  40b638:	mov	x20, x0
  40b63c:	ldr	x0, [x8, #8]
  40b640:	bl	402bf0 <unlink@plt>
  40b644:	ldr	w8, [x20]
  40b648:	cbz	w8, 40b690 <wcrtomb@plt+0x8a30>
  40b64c:	ldr	x21, [x23, #1248]
  40b650:	mov	w2, #0x5                   	// #5
  40b654:	mov	x0, xzr
  40b658:	mov	x1, x19
  40b65c:	bl	402b40 <dcgettext@plt>
  40b660:	ldr	x8, [x24, #1904]
  40b664:	ldr	x22, [x8, #8]
  40b668:	ldr	w8, [x20]
  40b66c:	mov	x20, x0
  40b670:	mov	w0, w8
  40b674:	bl	4028e0 <strerror@plt>
  40b678:	mov	x4, x0
  40b67c:	mov	w1, #0x1                   	// #1
  40b680:	mov	x0, x21
  40b684:	mov	x2, x20
  40b688:	mov	x3, x22
  40b68c:	bl	4029c0 <__fprintf_chk@plt>
  40b690:	ldr	x8, [x24, #1904]
  40b694:	ldr	x8, [x8, #16]
  40b698:	str	x8, [x24, #1904]
  40b69c:	cbnz	x8, 40b61c <wcrtomb@plt+0x89bc>
  40b6a0:	mov	w0, #0x4                   	// #4
  40b6a4:	bl	4025f0 <exit@plt>
  40b6a8:	stp	x29, x30, [sp, #-48]!
  40b6ac:	stp	x22, x21, [sp, #16]
  40b6b0:	stp	x20, x19, [sp, #32]
  40b6b4:	mov	x29, sp
  40b6b8:	mov	w21, w2
  40b6bc:	mov	x19, x0
  40b6c0:	bl	402700 <fopen@plt>
  40b6c4:	mov	x20, x0
  40b6c8:	cbz	x0, 40b70c <wcrtomb@plt+0x8aac>
  40b6cc:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b6d0:	ldr	x21, [x22, #1904]
  40b6d4:	cbz	x21, 40b6ec <wcrtomb@plt+0x8a8c>
  40b6d8:	ldr	x8, [x21]
  40b6dc:	cmp	x8, x20
  40b6e0:	b.eq	40b744 <wcrtomb@plt+0x8ae4>  // b.none
  40b6e4:	ldr	x21, [x21, #16]
  40b6e8:	cbnz	x21, 40b6d8 <wcrtomb@plt+0x8a78>
  40b6ec:	mov	w0, #0x1                   	// #1
  40b6f0:	mov	w1, #0x20                  	// #32
  40b6f4:	bl	415564 <wcrtomb@plt+0x12904>
  40b6f8:	ldr	x8, [x22, #1904]
  40b6fc:	mov	x21, x0
  40b700:	str	x0, [x22, #1904]
  40b704:	str	x8, [x0, #16]
  40b708:	b	40b74c <wcrtomb@plt+0x8aec>
  40b70c:	cbz	w21, 40b764 <wcrtomb@plt+0x8b04>
  40b710:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b714:	add	x1, x1, #0xe4a
  40b718:	mov	w2, #0x5                   	// #5
  40b71c:	mov	x0, xzr
  40b720:	bl	402b40 <dcgettext@plt>
  40b724:	mov	x20, x0
  40b728:	bl	402bd0 <__errno_location@plt>
  40b72c:	ldr	w0, [x0]
  40b730:	bl	4028e0 <strerror@plt>
  40b734:	mov	x2, x0
  40b738:	mov	x0, x20
  40b73c:	mov	x1, x19
  40b740:	bl	40b53c <wcrtomb@plt+0x88dc>
  40b744:	ldr	x0, [x21, #8]
  40b748:	bl	402a10 <free@plt>
  40b74c:	mov	x0, x19
  40b750:	bl	4155e4 <wcrtomb@plt+0x12984>
  40b754:	ldrb	w8, [x21, #24]
  40b758:	stp	x20, x0, [x21]
  40b75c:	and	w8, w8, #0xfe
  40b760:	strb	w8, [x21, #24]
  40b764:	mov	x0, x20
  40b768:	ldp	x20, x19, [sp, #32]
  40b76c:	ldp	x22, x21, [sp, #16]
  40b770:	ldp	x29, x30, [sp], #48
  40b774:	ret
  40b778:	stp	x29, x30, [sp, #-48]!
  40b77c:	stp	x20, x19, [sp, #32]
  40b780:	mov	x19, x1
  40b784:	mov	x1, x2
  40b788:	stp	x22, x21, [sp, #16]
  40b78c:	mov	x29, sp
  40b790:	mov	w21, w3
  40b794:	bl	402810 <fdopen@plt>
  40b798:	mov	x20, x0
  40b79c:	cbz	x0, 40b7e0 <wcrtomb@plt+0x8b80>
  40b7a0:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b7a4:	ldr	x21, [x22, #1904]
  40b7a8:	cbz	x21, 40b7c0 <wcrtomb@plt+0x8b60>
  40b7ac:	ldr	x8, [x21]
  40b7b0:	cmp	x8, x20
  40b7b4:	b.eq	40b818 <wcrtomb@plt+0x8bb8>  // b.none
  40b7b8:	ldr	x21, [x21, #16]
  40b7bc:	cbnz	x21, 40b7ac <wcrtomb@plt+0x8b4c>
  40b7c0:	mov	w0, #0x1                   	// #1
  40b7c4:	mov	w1, #0x20                  	// #32
  40b7c8:	bl	415564 <wcrtomb@plt+0x12904>
  40b7cc:	ldr	x8, [x22, #1904]
  40b7d0:	mov	x21, x0
  40b7d4:	str	x0, [x22, #1904]
  40b7d8:	str	x8, [x0, #16]
  40b7dc:	b	40b820 <wcrtomb@plt+0x8bc0>
  40b7e0:	cbz	w21, 40b838 <wcrtomb@plt+0x8bd8>
  40b7e4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b7e8:	add	x1, x1, #0xe64
  40b7ec:	mov	w2, #0x5                   	// #5
  40b7f0:	mov	x0, xzr
  40b7f4:	bl	402b40 <dcgettext@plt>
  40b7f8:	mov	x20, x0
  40b7fc:	bl	402bd0 <__errno_location@plt>
  40b800:	ldr	w0, [x0]
  40b804:	bl	4028e0 <strerror@plt>
  40b808:	mov	x2, x0
  40b80c:	mov	x0, x20
  40b810:	mov	x1, x19
  40b814:	bl	40b53c <wcrtomb@plt+0x88dc>
  40b818:	ldr	x0, [x21, #8]
  40b81c:	bl	402a10 <free@plt>
  40b820:	mov	x0, x19
  40b824:	bl	4155e4 <wcrtomb@plt+0x12984>
  40b828:	ldrb	w8, [x21, #24]
  40b82c:	stp	x20, x0, [x21]
  40b830:	and	w8, w8, #0xfe
  40b834:	strb	w8, [x21, #24]
  40b838:	mov	x0, x20
  40b83c:	ldp	x20, x19, [sp, #32]
  40b840:	ldp	x22, x21, [sp, #16]
  40b844:	ldp	x29, x30, [sp], #48
  40b848:	ret
  40b84c:	stp	x29, x30, [sp, #-64]!
  40b850:	stp	x22, x21, [sp, #32]
  40b854:	mov	x21, x0
  40b858:	mov	x0, x1
  40b85c:	str	x23, [sp, #16]
  40b860:	stp	x20, x19, [sp, #48]
  40b864:	mov	x29, sp
  40b868:	mov	x20, x3
  40b86c:	mov	x22, x2
  40b870:	mov	x23, x1
  40b874:	bl	4025c0 <strlen@plt>
  40b878:	mov	x19, x0
  40b87c:	mov	x0, x22
  40b880:	bl	4025c0 <strlen@plt>
  40b884:	add	x8, x19, x0
  40b888:	add	x0, x8, #0x8
  40b88c:	bl	415348 <wcrtomb@plt+0x126e8>
  40b890:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b894:	add	x3, x3, #0xe7e
  40b898:	mov	w1, #0x1                   	// #1
  40b89c:	mov	x2, #0xffffffffffffffff    	// #-1
  40b8a0:	mov	x4, x23
  40b8a4:	mov	x5, x22
  40b8a8:	mov	x19, x0
  40b8ac:	bl	4025d0 <__sprintf_chk@plt>
  40b8b0:	mov	w0, #0x3f                  	// #63
  40b8b4:	bl	402bb0 <umask@plt>
  40b8b8:	mov	w23, w0
  40b8bc:	mov	x0, x19
  40b8c0:	mov	w1, wzr
  40b8c4:	bl	402930 <mkostemp@plt>
  40b8c8:	mov	w22, w0
  40b8cc:	mov	w0, w23
  40b8d0:	bl	402bb0 <umask@plt>
  40b8d4:	cmn	w22, #0x1
  40b8d8:	b.eq	40b968 <wcrtomb@plt+0x8d08>  // b.none
  40b8dc:	mov	w0, w22
  40b8e0:	mov	x1, x20
  40b8e4:	str	x19, [x21]
  40b8e8:	bl	402810 <fdopen@plt>
  40b8ec:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40b8f0:	ldr	x21, [x22, #1904]
  40b8f4:	mov	x20, x0
  40b8f8:	cbz	x21, 40b910 <wcrtomb@plt+0x8cb0>
  40b8fc:	ldr	x8, [x21]
  40b900:	cmp	x8, x20
  40b904:	b.eq	40b930 <wcrtomb@plt+0x8cd0>  // b.none
  40b908:	ldr	x21, [x21, #16]
  40b90c:	cbnz	x21, 40b8fc <wcrtomb@plt+0x8c9c>
  40b910:	mov	w0, #0x1                   	// #1
  40b914:	mov	w1, #0x20                  	// #32
  40b918:	bl	415564 <wcrtomb@plt+0x12904>
  40b91c:	ldr	x8, [x22, #1904]
  40b920:	mov	x21, x0
  40b924:	str	x0, [x22, #1904]
  40b928:	str	x8, [x0, #16]
  40b92c:	b	40b938 <wcrtomb@plt+0x8cd8>
  40b930:	ldr	x0, [x21, #8]
  40b934:	bl	402a10 <free@plt>
  40b938:	mov	x0, x19
  40b93c:	bl	4155e4 <wcrtomb@plt+0x12984>
  40b940:	ldrb	w8, [x21, #24]
  40b944:	stp	x20, x0, [x21]
  40b948:	mov	x0, x20
  40b94c:	ldr	x23, [sp, #16]
  40b950:	and	w8, w8, #0xfe
  40b954:	strb	w8, [x21, #24]
  40b958:	ldp	x20, x19, [sp, #48]
  40b95c:	ldp	x22, x21, [sp, #32]
  40b960:	ldp	x29, x30, [sp], #64
  40b964:	ret
  40b968:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b96c:	add	x1, x1, #0x89
  40b970:	mov	w2, #0x5                   	// #5
  40b974:	mov	x0, xzr
  40b978:	bl	402b40 <dcgettext@plt>
  40b97c:	mov	x20, x0
  40b980:	bl	402bd0 <__errno_location@plt>
  40b984:	ldr	w0, [x0]
  40b988:	bl	4028e0 <strerror@plt>
  40b98c:	mov	x2, x0
  40b990:	mov	x0, x20
  40b994:	mov	x1, x19
  40b998:	bl	40b53c <wcrtomb@plt+0x88dc>
  40b99c:	stp	x29, x30, [sp, #-48]!
  40b9a0:	stp	x22, x21, [sp, #16]
  40b9a4:	mov	x22, x0
  40b9a8:	mov	x0, x3
  40b9ac:	stp	x20, x19, [sp, #32]
  40b9b0:	mov	x29, sp
  40b9b4:	mov	x20, x3
  40b9b8:	mov	x19, x2
  40b9bc:	mov	x21, x1
  40b9c0:	bl	402ac0 <clearerr_unlocked@plt>
  40b9c4:	cbz	x21, 40b9e4 <wcrtomb@plt+0x8d84>
  40b9c8:	mov	x0, x22
  40b9cc:	mov	x1, x21
  40b9d0:	mov	x2, x19
  40b9d4:	mov	x3, x20
  40b9d8:	bl	4025b0 <fwrite_unlocked@plt>
  40b9dc:	cmp	x0, x19
  40b9e0:	b.ne	40b9f4 <wcrtomb@plt+0x8d94>  // b.any
  40b9e4:	ldp	x20, x19, [sp, #32]
  40b9e8:	ldp	x22, x21, [sp, #16]
  40b9ec:	ldp	x29, x30, [sp], #48
  40b9f0:	ret
  40b9f4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b9f8:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  40b9fc:	add	x1, x1, #0xe8a
  40ba00:	add	x2, x2, #0xead
  40ba04:	mov	w4, #0x5                   	// #5
  40ba08:	mov	x0, xzr
  40ba0c:	mov	x3, x19
  40ba10:	bl	402aa0 <dcngettext@plt>
  40ba14:	mov	x21, x0
  40ba18:	mov	x0, x20
  40ba1c:	bl	40ba44 <wcrtomb@plt+0x8de4>
  40ba20:	mov	x20, x0
  40ba24:	bl	402bd0 <__errno_location@plt>
  40ba28:	ldr	w0, [x0]
  40ba2c:	bl	4028e0 <strerror@plt>
  40ba30:	mov	x3, x0
  40ba34:	mov	x0, x21
  40ba38:	mov	x1, x19
  40ba3c:	mov	x2, x20
  40ba40:	bl	40b53c <wcrtomb@plt+0x88dc>
  40ba44:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ba48:	ldr	x8, [x8, #1904]
  40ba4c:	cbz	x8, 40ba64 <wcrtomb@plt+0x8e04>
  40ba50:	ldr	x9, [x8]
  40ba54:	cmp	x9, x0
  40ba58:	b.eq	40baa8 <wcrtomb@plt+0x8e48>  // b.none
  40ba5c:	ldr	x8, [x8, #16]
  40ba60:	cbnz	x8, 40ba50 <wcrtomb@plt+0x8df0>
  40ba64:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ba68:	ldr	x8, [x8, #1280]
  40ba6c:	cmp	x8, x0
  40ba70:	b.eq	40bab0 <wcrtomb@plt+0x8e50>  // b.none
  40ba74:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ba78:	ldr	x8, [x8, #1272]
  40ba7c:	cmp	x8, x0
  40ba80:	b.eq	40babc <wcrtomb@plt+0x8e5c>  // b.none
  40ba84:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40ba88:	ldr	x8, [x8, #1248]
  40ba8c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ba90:	adrp	x10, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40ba94:	add	x9, x9, #0xf43
  40ba98:	add	x10, x10, #0xde6
  40ba9c:	cmp	x8, x0
  40baa0:	csel	x0, x10, x9, eq  // eq = none
  40baa4:	ret
  40baa8:	ldr	x0, [x8, #8]
  40baac:	ret
  40bab0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40bab4:	add	x0, x0, #0xdcf
  40bab8:	ret
  40babc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xf5a8>
  40bac0:	add	x0, x0, #0xdda
  40bac4:	ret
  40bac8:	stp	x29, x30, [sp, #-48]!
  40bacc:	stp	x22, x21, [sp, #16]
  40bad0:	mov	x22, x0
  40bad4:	mov	x0, x3
  40bad8:	stp	x20, x19, [sp, #32]
  40badc:	mov	x29, sp
  40bae0:	mov	x19, x3
  40bae4:	mov	x20, x2
  40bae8:	mov	x21, x1
  40baec:	bl	402ac0 <clearerr_unlocked@plt>
  40baf0:	cbz	x21, 40bb1c <wcrtomb@plt+0x8ebc>
  40baf4:	mov	x0, x22
  40baf8:	mov	x1, x21
  40bafc:	mov	x2, x20
  40bb00:	mov	x3, x19
  40bb04:	bl	402990 <fread_unlocked@plt>
  40bb08:	mov	x20, x0
  40bb0c:	cbnz	x0, 40bb1c <wcrtomb@plt+0x8ebc>
  40bb10:	ldrb	w8, [x19]
  40bb14:	tbnz	w8, #5, 40bb30 <wcrtomb@plt+0x8ed0>
  40bb18:	mov	x20, xzr
  40bb1c:	mov	x0, x20
  40bb20:	ldp	x20, x19, [sp, #32]
  40bb24:	ldp	x22, x21, [sp, #16]
  40bb28:	ldp	x29, x30, [sp], #48
  40bb2c:	ret
  40bb30:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bb34:	add	x1, x1, #0xed1
  40bb38:	mov	w2, #0x5                   	// #5
  40bb3c:	mov	x0, xzr
  40bb40:	bl	402b40 <dcgettext@plt>
  40bb44:	mov	x20, x0
  40bb48:	mov	x0, x19
  40bb4c:	bl	40ba44 <wcrtomb@plt+0x8de4>
  40bb50:	mov	x19, x0
  40bb54:	bl	402bd0 <__errno_location@plt>
  40bb58:	ldr	w0, [x0]
  40bb5c:	bl	4028e0 <strerror@plt>
  40bb60:	mov	x2, x0
  40bb64:	mov	x0, x20
  40bb68:	mov	x1, x19
  40bb6c:	bl	40b53c <wcrtomb@plt+0x88dc>
  40bb70:	stp	x29, x30, [sp, #-32]!
  40bb74:	stp	x20, x19, [sp, #16]
  40bb78:	ldrb	w8, [x3]
  40bb7c:	mov	x19, x3
  40bb80:	mov	x29, sp
  40bb84:	tbnz	w8, #5, 40bba8 <wcrtomb@plt+0x8f48>
  40bb88:	and	w2, w2, #0xff
  40bb8c:	mov	x3, x19
  40bb90:	bl	402750 <getdelim@plt>
  40bb94:	ldrb	w8, [x19]
  40bb98:	tbnz	w8, #5, 40bba8 <wcrtomb@plt+0x8f48>
  40bb9c:	ldp	x20, x19, [sp, #16]
  40bba0:	ldp	x29, x30, [sp], #32
  40bba4:	ret
  40bba8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bbac:	add	x1, x1, #0xed1
  40bbb0:	mov	w2, #0x5                   	// #5
  40bbb4:	mov	x0, xzr
  40bbb8:	bl	402b40 <dcgettext@plt>
  40bbbc:	mov	x20, x0
  40bbc0:	mov	x0, x19
  40bbc4:	bl	40ba44 <wcrtomb@plt+0x8de4>
  40bbc8:	mov	x19, x0
  40bbcc:	bl	402bd0 <__errno_location@plt>
  40bbd0:	ldr	w0, [x0]
  40bbd4:	bl	4028e0 <strerror@plt>
  40bbd8:	mov	x2, x0
  40bbdc:	mov	x0, x20
  40bbe0:	mov	x1, x19
  40bbe4:	bl	40b53c <wcrtomb@plt+0x88dc>
  40bbe8:	stp	x29, x30, [sp, #-32]!
  40bbec:	stp	x20, x19, [sp, #16]
  40bbf0:	mov	x29, sp
  40bbf4:	mov	x19, x0
  40bbf8:	bl	402690 <__fwriting@plt>
  40bbfc:	cbz	w0, 40bc28 <wcrtomb@plt+0x8fc8>
  40bc00:	mov	x0, x19
  40bc04:	bl	402ac0 <clearerr_unlocked@plt>
  40bc08:	mov	x0, x19
  40bc0c:	bl	402a90 <fflush_unlocked@plt>
  40bc10:	cmn	w0, #0x1
  40bc14:	b.ne	40bc28 <wcrtomb@plt+0x8fc8>  // b.any
  40bc18:	bl	402bd0 <__errno_location@plt>
  40bc1c:	ldr	w20, [x0]
  40bc20:	cmp	w20, #0x9
  40bc24:	b.ne	40bc34 <wcrtomb@plt+0x8fd4>  // b.any
  40bc28:	ldp	x20, x19, [sp, #16]
  40bc2c:	ldp	x29, x30, [sp], #32
  40bc30:	ret
  40bc34:	mov	x0, x19
  40bc38:	bl	40ba44 <wcrtomb@plt+0x8de4>
  40bc3c:	mov	x19, x0
  40bc40:	mov	w0, w20
  40bc44:	bl	4028e0 <strerror@plt>
  40bc48:	mov	x2, x0
  40bc4c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bc50:	add	x0, x0, #0xee6
  40bc54:	mov	x1, x19
  40bc58:	bl	40b53c <wcrtomb@plt+0x88dc>
  40bc5c:	sub	sp, sp, #0x60
  40bc60:	stp	x22, x21, [sp, #64]
  40bc64:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  40bc68:	stp	x20, x19, [sp, #80]
  40bc6c:	ldr	x20, [x21, #1904]
  40bc70:	mov	x19, x0
  40bc74:	stp	x29, x30, [sp, #32]
  40bc78:	str	x23, [sp, #48]
  40bc7c:	add	x29, sp, #0x20
  40bc80:	str	x20, [sp, #16]
  40bc84:	cbz	x20, 40bd0c <wcrtomb@plt+0x90ac>
  40bc88:	mov	x8, sp
  40bc8c:	add	x23, x8, #0x10
  40bc90:	mov	x22, sp
  40bc94:	b	40bcc0 <wcrtomb@plt+0x9060>
  40bc98:	bl	40bd1c <wcrtomb@plt+0x90bc>
  40bc9c:	ldr	x8, [x20, #16]
  40bca0:	str	x8, [x23]
  40bca4:	ldr	x0, [x20, #8]
  40bca8:	bl	402a10 <free@plt>
  40bcac:	mov	x0, x20
  40bcb0:	bl	402a10 <free@plt>
  40bcb4:	mov	x23, x22
  40bcb8:	ldr	x20, [x23, #16]!
  40bcbc:	cbz	x20, 40bcdc <wcrtomb@plt+0x907c>
  40bcc0:	ldr	x0, [x20]
  40bcc4:	cbz	x19, 40bc98 <wcrtomb@plt+0x9038>
  40bcc8:	cmp	x0, x19
  40bccc:	mov	x0, x19
  40bcd0:	b.eq	40bc98 <wcrtomb@plt+0x9038>  // b.none
  40bcd4:	mov	x22, x20
  40bcd8:	b	40bcb4 <wcrtomb@plt+0x9054>
  40bcdc:	ldr	x8, [sp, #16]
  40bce0:	str	x8, [x21, #1904]
  40bce4:	cbnz	x19, 40bcf4 <wcrtomb@plt+0x9094>
  40bce8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40bcec:	ldr	x0, [x8, #1272]
  40bcf0:	bl	40bd1c <wcrtomb@plt+0x90bc>
  40bcf4:	ldp	x20, x19, [sp, #80]
  40bcf8:	ldp	x22, x21, [sp, #64]
  40bcfc:	ldr	x23, [sp, #48]
  40bd00:	ldp	x29, x30, [sp, #32]
  40bd04:	add	sp, sp, #0x60
  40bd08:	ret
  40bd0c:	mov	x8, xzr
  40bd10:	str	x8, [x21, #1904]
  40bd14:	cbnz	x19, 40bcf4 <wcrtomb@plt+0x9094>
  40bd18:	b	40bce8 <wcrtomb@plt+0x9088>
  40bd1c:	stp	x29, x30, [sp, #-32]!
  40bd20:	str	x19, [sp, #16]
  40bd24:	mov	x29, sp
  40bd28:	mov	x19, x0
  40bd2c:	bl	40bbe8 <wcrtomb@plt+0x8f88>
  40bd30:	mov	x0, x19
  40bd34:	bl	402ac0 <clearerr_unlocked@plt>
  40bd38:	mov	x0, x19
  40bd3c:	bl	4026d0 <fclose@plt>
  40bd40:	cmn	w0, #0x1
  40bd44:	b.eq	40bd54 <wcrtomb@plt+0x90f4>  // b.none
  40bd48:	ldr	x19, [sp, #16]
  40bd4c:	ldp	x29, x30, [sp], #32
  40bd50:	ret
  40bd54:	mov	x0, x19
  40bd58:	bl	40ba44 <wcrtomb@plt+0x8de4>
  40bd5c:	mov	x19, x0
  40bd60:	bl	402bd0 <__errno_location@plt>
  40bd64:	ldr	w0, [x0]
  40bd68:	bl	4028e0 <strerror@plt>
  40bd6c:	mov	x2, x0
  40bd70:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bd74:	add	x0, x0, #0xf4d
  40bd78:	mov	x1, x19
  40bd7c:	bl	40b53c <wcrtomb@plt+0x88dc>
  40bd80:	sub	sp, sp, #0xe0
  40bd84:	stp	x22, x21, [sp, #192]
  40bd88:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  40bd8c:	ldr	w8, [x22, #1928]
  40bd90:	stp	x20, x19, [sp, #208]
  40bd94:	mov	x19, x0
  40bd98:	stp	x29, x30, [sp, #128]
  40bd9c:	stp	x28, x27, [sp, #144]
  40bda0:	stp	x26, x25, [sp, #160]
  40bda4:	stp	x24, x23, [sp, #176]
  40bda8:	add	x29, sp, #0x80
  40bdac:	cbnz	w8, 40bdd8 <wcrtomb@plt+0x9178>
  40bdb0:	mov	w0, #0x1001                	// #4097
  40bdb4:	mov	w20, #0x1001                	// #4097
  40bdb8:	bl	415540 <wcrtomb@plt+0x128e0>
  40bdbc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40bdc0:	str	x0, [x8, #1912]
  40bdc4:	mov	w0, #0x1001                	// #4097
  40bdc8:	bl	415540 <wcrtomb@plt+0x128e0>
  40bdcc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  40bdd0:	str	x0, [x8, #1920]
  40bdd4:	str	w20, [x22, #1928]
  40bdd8:	mov	x2, sp
  40bddc:	mov	w0, wzr
  40bde0:	mov	x1, x19
  40bde4:	bl	402ad0 <__lxstat@plt>
  40bde8:	cbnz	w0, 40bf60 <wcrtomb@plt+0x9300>
  40bdec:	ldr	w8, [sp, #16]
  40bdf0:	mov	w9, #0xa000                	// #40960
  40bdf4:	and	w8, w8, w9
  40bdf8:	cmp	w8, #0xa, lsl #12
  40bdfc:	b.ne	40bf60 <wcrtomb@plt+0x9300>  // b.any
  40be00:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  40be04:	adrp	x24, 439000 <_obstack_memory_used@@Base+0x235a8>
  40be08:	mov	w25, #0xa000                	// #40960
  40be0c:	mov	x26, #0x100000000           	// #4294967296
  40be10:	ldr	x1, [x23, #1920]
  40be14:	cmp	x19, x1
  40be18:	b.ne	40be30 <wcrtomb@plt+0x91d0>  // b.any
  40be1c:	ldr	x0, [x24, #1912]
  40be20:	mov	x1, x19
  40be24:	bl	402ab0 <strcpy@plt>
  40be28:	ldr	x19, [x24, #1912]
  40be2c:	ldr	x1, [x23, #1920]
  40be30:	ldrsw	x2, [x22, #1928]
  40be34:	mov	x0, x19
  40be38:	bl	402630 <readlink@plt>
  40be3c:	ldr	w27, [x22, #1928]
  40be40:	mov	x20, x0
  40be44:	cmp	w27, w20
  40be48:	b.ne	40be84 <wcrtomb@plt+0x9224>  // b.any
  40be4c:	ldr	x0, [x24, #1912]
  40be50:	lsl	w8, w20, #1
  40be54:	sxtw	x1, w8
  40be58:	str	w8, [x22, #1928]
  40be5c:	bl	4153c8 <wcrtomb@plt+0x12768>
  40be60:	ldr	x8, [x23, #1920]
  40be64:	ldrsw	x1, [x22, #1928]
  40be68:	str	x0, [x24, #1912]
  40be6c:	mov	x0, x8
  40be70:	bl	4153c8 <wcrtomb@plt+0x12768>
  40be74:	ldrsw	x2, [x22, #1928]
  40be78:	mov	x1, x0
  40be7c:	str	x0, [x23, #1920]
  40be80:	b	40be34 <wcrtomb@plt+0x91d4>
  40be84:	tbnz	w20, #31, 40bf88 <wcrtomb@plt+0x9328>
  40be88:	ldr	x8, [x23, #1920]
  40be8c:	strb	wzr, [x8, w20, sxtw]
  40be90:	ldr	x21, [x23, #1920]
  40be94:	ldrb	w8, [x21]
  40be98:	cmp	w8, #0x2f
  40be9c:	b.eq	40bf38 <wcrtomb@plt+0x92d8>  // b.none
  40bea0:	mov	w1, #0x2f                  	// #47
  40bea4:	mov	x0, x19
  40bea8:	bl	4028f0 <strrchr@plt>
  40beac:	cbz	x0, 40bf38 <wcrtomb@plt+0x92d8>
  40beb0:	sub	w8, w0, w19
  40beb4:	add	w28, w8, #0x1
  40beb8:	add	w8, w28, w20
  40bebc:	cmp	w8, w27
  40bec0:	b.lt	40bef4 <wcrtomb@plt+0x9294>  // b.tstop
  40bec4:	ldr	x0, [x24, #1912]
  40bec8:	add	w8, w8, #0x1
  40becc:	sxtw	x1, w8
  40bed0:	str	w8, [x22, #1928]
  40bed4:	bl	4153c8 <wcrtomb@plt+0x12768>
  40bed8:	ldr	x8, [x23, #1920]
  40bedc:	ldrsw	x1, [x22, #1928]
  40bee0:	str	x0, [x24, #1912]
  40bee4:	mov	x0, x8
  40bee8:	bl	4153c8 <wcrtomb@plt+0x12768>
  40beec:	mov	x21, x0
  40bef0:	str	x0, [x23, #1920]
  40bef4:	ldr	x0, [x24, #1912]
  40bef8:	lsl	x27, x20, #32
  40befc:	sxtw	x20, w28
  40bf00:	cmp	x19, x0
  40bf04:	b.eq	40bf1c <wcrtomb@plt+0x92bc>  // b.none
  40bf08:	mov	x1, x19
  40bf0c:	mov	x2, x20
  40bf10:	bl	402580 <memcpy@plt>
  40bf14:	ldr	x19, [x24, #1912]
  40bf18:	ldr	x21, [x23, #1920]
  40bf1c:	add	x8, x27, x26
  40bf20:	add	x0, x19, x20
  40bf24:	asr	x2, x8, #32
  40bf28:	mov	x1, x21
  40bf2c:	bl	402580 <memcpy@plt>
  40bf30:	ldr	x19, [x24, #1912]
  40bf34:	b	40bf3c <wcrtomb@plt+0x92dc>
  40bf38:	mov	x19, x21
  40bf3c:	mov	x2, sp
  40bf40:	mov	w0, wzr
  40bf44:	mov	x1, x19
  40bf48:	bl	402ad0 <__lxstat@plt>
  40bf4c:	cbnz	w0, 40bf60 <wcrtomb@plt+0x9300>
  40bf50:	ldr	w8, [sp, #16]
  40bf54:	and	w8, w8, w25
  40bf58:	cmp	w8, #0xa, lsl #12
  40bf5c:	b.eq	40be10 <wcrtomb@plt+0x91b0>  // b.none
  40bf60:	tbnz	w0, #31, 40bfbc <wcrtomb@plt+0x935c>
  40bf64:	mov	x0, x19
  40bf68:	ldp	x20, x19, [sp, #208]
  40bf6c:	ldp	x22, x21, [sp, #192]
  40bf70:	ldp	x24, x23, [sp, #176]
  40bf74:	ldp	x26, x25, [sp, #160]
  40bf78:	ldp	x28, x27, [sp, #144]
  40bf7c:	ldp	x29, x30, [sp, #128]
  40bf80:	add	sp, sp, #0xe0
  40bf84:	ret
  40bf88:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bf8c:	add	x1, x1, #0xefc
  40bf90:	mov	w2, #0x5                   	// #5
  40bf94:	mov	x0, xzr
  40bf98:	bl	402b40 <dcgettext@plt>
  40bf9c:	mov	x20, x0
  40bfa0:	bl	402bd0 <__errno_location@plt>
  40bfa4:	ldr	w0, [x0]
  40bfa8:	bl	4028e0 <strerror@plt>
  40bfac:	mov	x2, x0
  40bfb0:	mov	x0, x20
  40bfb4:	mov	x1, x19
  40bfb8:	bl	40b53c <wcrtomb@plt+0x88dc>
  40bfbc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40bfc0:	add	x1, x1, #0xf1b
  40bfc4:	b	40bf90 <wcrtomb@plt+0x9330>
  40bfc8:	stp	x29, x30, [sp, #-48]!
  40bfcc:	stp	x22, x21, [sp, #16]
  40bfd0:	stp	x20, x19, [sp, #32]
  40bfd4:	mov	x29, sp
  40bfd8:	mov	x20, x2
  40bfdc:	mov	x19, x0
  40bfe0:	bl	402a70 <rename@plt>
  40bfe4:	cmn	w0, #0x1
  40bfe8:	b.eq	40bffc <wcrtomb@plt+0x939c>  // b.none
  40bfec:	ldp	x20, x19, [sp, #32]
  40bff0:	ldp	x22, x21, [sp, #16]
  40bff4:	ldp	x29, x30, [sp], #48
  40bff8:	ret
  40bffc:	cbz	x20, 40c024 <wcrtomb@plt+0x93c4>
  40c000:	bl	402bd0 <__errno_location@plt>
  40c004:	ldr	w22, [x0]
  40c008:	mov	x21, x0
  40c00c:	str	wzr, [x0]
  40c010:	mov	x0, x20
  40c014:	bl	402bf0 <unlink@plt>
  40c018:	ldr	w8, [x21]
  40c01c:	cbnz	w8, 40c058 <wcrtomb@plt+0x93f8>
  40c020:	str	w22, [x21]
  40c024:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c028:	add	x1, x1, #0xf2e
  40c02c:	mov	w2, #0x5                   	// #5
  40c030:	mov	x0, xzr
  40c034:	bl	402b40 <dcgettext@plt>
  40c038:	mov	x20, x0
  40c03c:	bl	402bd0 <__errno_location@plt>
  40c040:	ldr	w0, [x0]
  40c044:	bl	4028e0 <strerror@plt>
  40c048:	mov	x2, x0
  40c04c:	mov	x0, x20
  40c050:	mov	x1, x19
  40c054:	bl	40b53c <wcrtomb@plt+0x88dc>
  40c058:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c05c:	add	x1, x1, #0xe35
  40c060:	mov	w2, #0x5                   	// #5
  40c064:	mov	x0, xzr
  40c068:	bl	402b40 <dcgettext@plt>
  40c06c:	ldr	w8, [x21]
  40c070:	mov	x19, x0
  40c074:	mov	w0, w8
  40c078:	bl	4028e0 <strerror@plt>
  40c07c:	mov	x2, x0
  40c080:	mov	x0, x19
  40c084:	mov	x1, x20
  40c088:	bl	40b53c <wcrtomb@plt+0x88dc>
  40c08c:	stp	x29, x30, [sp, #-32]!
  40c090:	mov	w0, #0x1                   	// #1
  40c094:	mov	w1, #0x18                  	// #24
  40c098:	str	x19, [sp, #16]
  40c09c:	mov	x29, sp
  40c0a0:	bl	415564 <wcrtomb@plt+0x12904>
  40c0a4:	mov	x19, x0
  40c0a8:	mov	w0, #0x32                  	// #50
  40c0ac:	bl	415540 <wcrtomb@plt+0x128e0>
  40c0b0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c0b4:	ldr	q0, [x8, #3616]
  40c0b8:	str	x0, [x19, #16]
  40c0bc:	mov	x0, x19
  40c0c0:	str	q0, [x19]
  40c0c4:	ldr	x19, [sp, #16]
  40c0c8:	ldp	x29, x30, [sp], #32
  40c0cc:	ret
  40c0d0:	ldr	x0, [x0, #16]
  40c0d4:	ret
  40c0d8:	ldr	x0, [x0, #8]
  40c0dc:	ret
  40c0e0:	stp	x29, x30, [sp, #-64]!
  40c0e4:	str	x23, [sp, #16]
  40c0e8:	stp	x22, x21, [sp, #32]
  40c0ec:	stp	x20, x19, [sp, #48]
  40c0f0:	ldp	x9, x8, [x0]
  40c0f4:	mov	x19, x2
  40c0f8:	mov	x20, x0
  40c0fc:	mov	x21, x1
  40c100:	sub	x10, x9, x8
  40c104:	cmp	x10, x2
  40c108:	mov	x29, sp
  40c10c:	b.cs	40c158 <wcrtomb@plt+0x94f8>  // b.hs, b.nlast
  40c110:	add	x22, x8, x19
  40c114:	cmp	x9, x22
  40c118:	b.cs	40c158 <wcrtomb@plt+0x94f8>  // b.hs, b.nlast
  40c11c:	lsl	x23, x9, #1
  40c120:	cmp	x23, x22
  40c124:	b.ls	40c138 <wcrtomb@plt+0x94d8>  // b.plast
  40c128:	ldr	x0, [x20, #16]
  40c12c:	mov	x1, x23
  40c130:	bl	402870 <realloc@plt>
  40c134:	cbnz	x0, 40c14c <wcrtomb@plt+0x94ec>
  40c138:	tbnz	x22, #63, 40c194 <wcrtomb@plt+0x9534>
  40c13c:	ldr	x0, [x20, #16]
  40c140:	mov	x1, x22
  40c144:	bl	4153c8 <wcrtomb@plt+0x12768>
  40c148:	mov	x23, x22
  40c14c:	ldr	x8, [x20, #8]
  40c150:	str	x23, [x20]
  40c154:	str	x0, [x20, #16]
  40c158:	ldr	x9, [x20, #16]
  40c15c:	mov	x1, x21
  40c160:	mov	x2, x19
  40c164:	add	x22, x9, x8
  40c168:	mov	x0, x22
  40c16c:	bl	402580 <memcpy@plt>
  40c170:	ldr	x8, [x20, #8]
  40c174:	mov	x0, x22
  40c178:	ldr	x23, [sp, #16]
  40c17c:	add	x8, x8, x19
  40c180:	str	x8, [x20, #8]
  40c184:	ldp	x20, x19, [sp, #48]
  40c188:	ldp	x22, x21, [sp, #32]
  40c18c:	ldp	x29, x30, [sp], #64
  40c190:	ret
  40c194:	bl	41563c <wcrtomb@plt+0x129dc>
  40c198:	stp	x29, x30, [sp, #-48]!
  40c19c:	cmn	w1, #0x1
  40c1a0:	stp	x22, x21, [sp, #16]
  40c1a4:	stp	x20, x19, [sp, #32]
  40c1a8:	mov	x29, sp
  40c1ac:	b.eq	40c1d4 <wcrtomb@plt+0x9574>  // b.none
  40c1b0:	ldp	x9, x8, [x0]
  40c1b4:	mov	w19, w1
  40c1b8:	mov	x20, x0
  40c1bc:	cmp	x9, x8
  40c1c0:	b.ne	40c218 <wcrtomb@plt+0x95b8>  // b.any
  40c1c4:	adds	x21, x9, #0x1
  40c1c8:	b.cc	40c1dc <wcrtomb@plt+0x957c>  // b.lo, b.ul, b.last
  40c1cc:	mov	x8, #0xffffffffffffffff    	// #-1
  40c1d0:	b	40c218 <wcrtomb@plt+0x95b8>
  40c1d4:	mov	x0, xzr
  40c1d8:	b	40c22c <wcrtomb@plt+0x95cc>
  40c1dc:	lsl	x22, x9, #1
  40c1e0:	cmp	x22, x21
  40c1e4:	b.ls	40c1f8 <wcrtomb@plt+0x9598>  // b.plast
  40c1e8:	ldr	x0, [x20, #16]
  40c1ec:	mov	x1, x22
  40c1f0:	bl	402870 <realloc@plt>
  40c1f4:	cbnz	x0, 40c20c <wcrtomb@plt+0x95ac>
  40c1f8:	tbnz	x21, #63, 40c23c <wcrtomb@plt+0x95dc>
  40c1fc:	ldr	x0, [x20, #16]
  40c200:	mov	x1, x21
  40c204:	bl	4153c8 <wcrtomb@plt+0x12768>
  40c208:	mov	x22, x21
  40c20c:	ldr	x8, [x20, #8]
  40c210:	str	x22, [x20]
  40c214:	str	x0, [x20, #16]
  40c218:	ldr	x9, [x20, #16]
  40c21c:	add	x10, x8, #0x1
  40c220:	str	x10, [x20, #8]
  40c224:	add	x0, x9, x8
  40c228:	strb	w19, [x0]
  40c22c:	ldp	x20, x19, [sp, #32]
  40c230:	ldp	x22, x21, [sp, #16]
  40c234:	ldp	x29, x30, [sp], #48
  40c238:	ret
  40c23c:	bl	41563c <wcrtomb@plt+0x129dc>
  40c240:	stp	x29, x30, [sp, #-32]!
  40c244:	str	x19, [sp, #16]
  40c248:	mov	x19, x0
  40c24c:	mov	x29, sp
  40c250:	cbz	x0, 40c25c <wcrtomb@plt+0x95fc>
  40c254:	ldr	x0, [x19, #16]
  40c258:	bl	402a10 <free@plt>
  40c25c:	mov	x0, x19
  40c260:	ldr	x19, [sp, #16]
  40c264:	ldp	x29, x30, [sp], #32
  40c268:	b	402a10 <free@plt>
  40c26c:	stp	x29, x30, [sp, #-48]!
  40c270:	stp	x22, x21, [sp, #16]
  40c274:	stp	x20, x19, [sp, #32]
  40c278:	mov	x29, sp
  40c27c:	mov	x20, x2
  40c280:	mov	x21, x0
  40c284:	bl	413314 <wcrtomb@plt+0x106b4>
  40c288:	mov	w19, w0
  40c28c:	cmn	w0, #0x1
  40c290:	b.eq	40c2c4 <wcrtomb@plt+0x9664>  // b.none
  40c294:	cmn	w19, #0x2
  40c298:	b.ne	40c300 <wcrtomb@plt+0x96a0>  // b.any
  40c29c:	bl	402bd0 <__errno_location@plt>
  40c2a0:	ldr	w20, [x0]
  40c2a4:	mov	x0, x21
  40c2a8:	bl	414a94 <wcrtomb@plt+0x11e34>
  40c2ac:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c2b0:	mov	x3, x0
  40c2b4:	add	x2, x2, #0xe61
  40c2b8:	mov	w0, wzr
  40c2bc:	mov	w1, w20
  40c2c0:	b	40c2fc <wcrtomb@plt+0x969c>
  40c2c4:	bl	402bd0 <__errno_location@plt>
  40c2c8:	ldr	w21, [x0]
  40c2cc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c2d0:	add	x1, x1, #0xf63
  40c2d4:	mov	w2, #0x5                   	// #5
  40c2d8:	mov	x0, xzr
  40c2dc:	bl	402b40 <dcgettext@plt>
  40c2e0:	mov	x22, x0
  40c2e4:	mov	x0, x20
  40c2e8:	bl	414a94 <wcrtomb@plt+0x11e34>
  40c2ec:	mov	x3, x0
  40c2f0:	mov	w0, wzr
  40c2f4:	mov	w1, w21
  40c2f8:	mov	x2, x22
  40c2fc:	bl	402600 <error@plt>
  40c300:	mov	w0, w19
  40c304:	ldp	x20, x19, [sp, #32]
  40c308:	ldp	x22, x21, [sp, #16]
  40c30c:	ldp	x29, x30, [sp], #48
  40c310:	ret
  40c314:	stp	x29, x30, [sp, #-32]!
  40c318:	ldrb	w8, [x2, #456]
  40c31c:	mov	x9, #0xffffffffffffffff    	// #-1
  40c320:	str	x9, [x2, #48]
  40c324:	mov	w9, #0x1                   	// #1
  40c328:	str	x19, [sp, #16]
  40c32c:	mov	x29, sp
  40c330:	stp	x0, x1, [x2, #32]
  40c334:	strb	w9, [x2, #120]
  40c338:	cbz	w8, 40c474 <wcrtomb@plt+0x9814>
  40c33c:	ldr	x8, [x2, #184]
  40c340:	mov	x19, x2
  40c344:	cbnz	x8, 40c358 <wcrtomb@plt+0x96f8>
  40c348:	mov	w1, #0x10b                 	// #267
  40c34c:	mov	w2, #0x3                   	// #3
  40c350:	mov	x0, x19
  40c354:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c358:	mov	x0, x19
  40c35c:	bl	40c620 <wcrtomb@plt+0x99c0>
  40c360:	ldr	x8, [x19, #168]
  40c364:	stp	x0, x8, [x19, #128]
  40c368:	mov	x0, x19
  40c36c:	bl	4109bc <wcrtomb@plt+0xdd5c>
  40c370:	ldr	x8, [x19, #128]
  40c374:	cmp	x8, #0x106
  40c378:	b.eq	40c3c0 <wcrtomb@plt+0x9760>  // b.none
  40c37c:	cmp	x8, #0x108
  40c380:	b.eq	40c468 <wcrtomb@plt+0x9808>  // b.none
  40c384:	tbnz	x8, #63, 40c408 <wcrtomb@plt+0x97a8>
  40c388:	mov	x0, x19
  40c38c:	bl	4109bc <wcrtomb@plt+0xdd5c>
  40c390:	mov	w1, #0x105                 	// #261
  40c394:	mov	w2, #0x3                   	// #3
  40c398:	mov	x0, x19
  40c39c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c3a0:	b	40c370 <wcrtomb@plt+0x9710>
  40c3a4:	mov	w1, #0x106                 	// #262
  40c3a8:	mov	w2, #0x3                   	// #3
  40c3ac:	mov	x0, x19
  40c3b0:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c3b4:	ldr	x8, [x19, #128]
  40c3b8:	cmp	x8, #0x106
  40c3bc:	b.ne	40c408 <wcrtomb@plt+0x97a8>  // b.any
  40c3c0:	mov	x0, x19
  40c3c4:	bl	40c620 <wcrtomb@plt+0x99c0>
  40c3c8:	str	x0, [x19, #128]
  40c3cc:	mov	x0, x19
  40c3d0:	bl	4109bc <wcrtomb@plt+0xdd5c>
  40c3d4:	ldr	x8, [x19, #128]
  40c3d8:	cmp	x8, #0x106
  40c3dc:	b.eq	40c3a4 <wcrtomb@plt+0x9744>  // b.none
  40c3e0:	cmp	x8, #0x108
  40c3e4:	b.eq	40c3a4 <wcrtomb@plt+0x9744>  // b.none
  40c3e8:	tbnz	x8, #63, 40c3a4 <wcrtomb@plt+0x9744>
  40c3ec:	mov	x0, x19
  40c3f0:	bl	4109bc <wcrtomb@plt+0xdd5c>
  40c3f4:	mov	w1, #0x105                 	// #261
  40c3f8:	mov	w2, #0x3                   	// #3
  40c3fc:	mov	x0, x19
  40c400:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c404:	b	40c3d4 <wcrtomb@plt+0x9774>
  40c408:	cmn	x8, #0x1
  40c40c:	b.ne	40c468 <wcrtomb@plt+0x9808>  // b.any
  40c410:	ldr	x8, [x19, #184]
  40c414:	mov	x0, x19
  40c418:	mvn	x1, x8
  40c41c:	bl	40c48c <wcrtomb@plt+0x982c>
  40c420:	mov	w1, #0x105                 	// #261
  40c424:	mov	w2, #0x3                   	// #3
  40c428:	mov	x0, x19
  40c42c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c430:	ldr	x8, [x19, #184]
  40c434:	cbz	x8, 40c454 <wcrtomb@plt+0x97f4>
  40c438:	mov	w1, #0x106                 	// #262
  40c43c:	mov	w2, #0x3                   	// #3
  40c440:	mov	x0, x19
  40c444:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c448:	ldr	x8, [x19, #184]
  40c44c:	add	x8, x8, #0x1
  40c450:	b	40c458 <wcrtomb@plt+0x97f8>
  40c454:	mov	w8, #0x1                   	// #1
  40c458:	str	x8, [x19, #184]
  40c45c:	ldr	x19, [sp, #16]
  40c460:	ldp	x29, x30, [sp], #32
  40c464:	ret
  40c468:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40c46c:	add	x1, x1, #0x364
  40c470:	b	40c47c <wcrtomb@plt+0x981c>
  40c474:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40c478:	add	x1, x1, #0x350
  40c47c:	mov	w2, #0x5                   	// #5
  40c480:	mov	x0, xzr
  40c484:	bl	402b40 <dcgettext@plt>
  40c488:	bl	40a604 <wcrtomb@plt+0x79a4>
  40c48c:	sub	sp, sp, #0x60
  40c490:	stp	x20, x19, [sp, #80]
  40c494:	cmp	x1, #0x113
  40c498:	mov	x19, x0
  40c49c:	stp	x29, x30, [sp, #16]
  40c4a0:	str	x25, [sp, #32]
  40c4a4:	stp	x24, x23, [sp, #48]
  40c4a8:	stp	x22, x21, [sp, #64]
  40c4ac:	add	x29, sp, #0x10
  40c4b0:	b.ne	40c5ac <wcrtomb@plt+0x994c>  // b.any
  40c4b4:	ldrb	w8, [x19, #1048]
  40c4b8:	cbz	w8, 40c5ac <wcrtomb@plt+0x994c>
  40c4bc:	ldr	x8, [x19, #104]
  40c4c0:	cmp	x8, #0x1
  40c4c4:	b.lt	40c5d0 <wcrtomb@plt+0x9970>  // b.tstop
  40c4c8:	mov	x8, sp
  40c4cc:	mov	x22, xzr
  40c4d0:	mov	w21, wzr
  40c4d4:	orr	x23, x8, #0x1
  40c4d8:	b	40c4f0 <wcrtomb@plt+0x9890>
  40c4dc:	ldr	x8, [x19, #104]
  40c4e0:	add	x22, x22, #0x1
  40c4e4:	mov	w21, #0x1                   	// #1
  40c4e8:	cmp	x22, x8
  40c4ec:	b.ge	40c5d4 <wcrtomb@plt+0x9974>  // b.tcont
  40c4f0:	ldr	x8, [x19, #96]
  40c4f4:	mov	x0, sp
  40c4f8:	add	x2, x29, #0x18
  40c4fc:	ldr	w1, [x8, x22, lsl #2]
  40c500:	str	xzr, [x29, #24]
  40c504:	bl	402c60 <wcrtomb@plt>
  40c508:	cmn	x0, #0x1
  40c50c:	b.eq	40c580 <wcrtomb@plt+0x9920>  // b.none
  40c510:	ldrb	w1, [sp]
  40c514:	mov	x20, x0
  40c518:	cmp	w20, #0x1
  40c51c:	b.eq	40c588 <wcrtomb@plt+0x9928>  // b.none
  40c520:	mov	w2, #0x1                   	// #1
  40c524:	mov	x0, x19
  40c528:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c52c:	cmp	w20, #0x2
  40c530:	b.lt	40c594 <wcrtomb@plt+0x9934>  // b.tstop
  40c534:	sub	w8, w20, #0x1
  40c538:	and	x9, x20, #0xffffffff
  40c53c:	sub	x20, x8, #0x1
  40c540:	sub	x24, x9, #0x1
  40c544:	mov	x25, x23
  40c548:	ldrb	w1, [x25], #1
  40c54c:	cmp	x20, #0x0
  40c550:	cset	w8, eq  // eq = none
  40c554:	lsl	w2, w8, #1
  40c558:	mov	x0, x19
  40c55c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c560:	mov	w1, #0x105                 	// #261
  40c564:	mov	w2, #0x3                   	// #3
  40c568:	mov	x0, x19
  40c56c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c570:	subs	x24, x24, #0x1
  40c574:	sub	x20, x20, #0x1
  40c578:	b.ne	40c548 <wcrtomb@plt+0x98e8>  // b.any
  40c57c:	b	40c594 <wcrtomb@plt+0x9934>
  40c580:	mov	x1, xzr
  40c584:	strb	wzr, [sp]
  40c588:	mov	w2, #0x3                   	// #3
  40c58c:	mov	x0, x19
  40c590:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c594:	tbz	w21, #0, 40c4dc <wcrtomb@plt+0x987c>
  40c598:	mov	w1, #0x106                 	// #262
  40c59c:	mov	w2, #0x3                   	// #3
  40c5a0:	mov	x0, x19
  40c5a4:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c5a8:	b	40c4dc <wcrtomb@plt+0x987c>
  40c5ac:	mov	x0, x19
  40c5b0:	ldp	x20, x19, [sp, #80]
  40c5b4:	ldp	x22, x21, [sp, #64]
  40c5b8:	ldp	x24, x23, [sp, #48]
  40c5bc:	ldr	x25, [sp, #32]
  40c5c0:	ldp	x29, x30, [sp, #16]
  40c5c4:	mov	w2, #0x3                   	// #3
  40c5c8:	add	sp, sp, #0x60
  40c5cc:	b	40f81c <wcrtomb@plt+0xcbbc>
  40c5d0:	mov	w21, wzr
  40c5d4:	ldr	x8, [x19, #80]
  40c5d8:	str	xzr, [x19, #104]
  40c5dc:	cmn	x8, #0x1
  40c5e0:	b.eq	40c604 <wcrtomb@plt+0x99a4>  // b.none
  40c5e4:	add	x1, x8, #0x114
  40c5e8:	mov	x0, x19
  40c5ec:	bl	40c48c <wcrtomb@plt+0x982c>
  40c5f0:	cbz	w21, 40c604 <wcrtomb@plt+0x99a4>
  40c5f4:	mov	w1, #0x106                 	// #262
  40c5f8:	mov	w2, #0x3                   	// #3
  40c5fc:	mov	x0, x19
  40c600:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40c604:	ldp	x20, x19, [sp, #80]
  40c608:	ldp	x22, x21, [sp, #64]
  40c60c:	ldp	x24, x23, [sp, #48]
  40c610:	ldr	x25, [sp, #32]
  40c614:	ldp	x29, x30, [sp, #16]
  40c618:	add	sp, sp, #0x60
  40c61c:	ret
  40c620:	sub	sp, sp, #0x60
  40c624:	stp	x29, x30, [sp, #32]
  40c628:	stp	x24, x23, [sp, #48]
  40c62c:	stp	x22, x21, [sp, #64]
  40c630:	stp	x20, x19, [sp, #80]
  40c634:	ldr	x20, [x0, #40]
  40c638:	mov	x19, x0
  40c63c:	add	x29, sp, #0x20
  40c640:	cbz	x20, 40c6d0 <wcrtomb@plt+0x9a70>
  40c644:	mov	w23, wzr
  40c648:	add	x21, x19, #0x110
  40c64c:	mov	w24, #0x1                   	// #1
  40c650:	ldr	x1, [x19, #32]
  40c654:	ldrb	w8, [x1]
  40c658:	add	x8, x19, x8, lsl #2
  40c65c:	ldr	w22, [x8, #1308]
  40c660:	cmn	w22, #0x1
  40c664:	b.ne	40c69c <wcrtomb@plt+0x9a3c>  // b.any
  40c668:	mov	x0, sp
  40c66c:	mov	x2, x20
  40c670:	mov	x3, x21
  40c674:	bl	415680 <wcrtomb@plt+0x12a20>
  40c678:	sub	x8, x0, #0x1
  40c67c:	cmn	x8, #0x3
  40c680:	b.cs	40c698 <wcrtomb@plt+0x9a38>  // b.hs, b.nlast
  40c684:	ldr	w8, [sp]
  40c688:	cmp	w0, #0x1
  40c68c:	str	w8, [x19, #72]
  40c690:	b.eq	40c6a0 <wcrtomb@plt+0x9a40>  // b.none
  40c694:	b	40c848 <wcrtomb@plt+0x9be8>
  40c698:	str	xzr, [x21]
  40c69c:	str	w22, [x19, #72]
  40c6a0:	ldp	x12, x11, [x19, #32]
  40c6a4:	mov	x8, x12
  40c6a8:	ldrb	w22, [x8], #1
  40c6ac:	sub	x20, x11, #0x1
  40c6b0:	cmp	w22, #0x5c
  40c6b4:	stp	x8, x20, [x19, #32]
  40c6b8:	b.ne	40c6d8 <wcrtomb@plt+0x9a78>  // b.any
  40c6bc:	cbz	w24, 40c714 <wcrtomb@plt+0x9ab4>
  40c6c0:	cbz	x20, 40d08c <wcrtomb@plt+0xa42c>
  40c6c4:	sub	w24, w24, #0x1
  40c6c8:	mov	w23, #0x1                   	// #1
  40c6cc:	b	40c650 <wcrtomb@plt+0x99f0>
  40c6d0:	mov	x21, #0xffffffffffffffff    	// #-1
  40c6d4:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c6d8:	sub	w8, w22, #0xa
  40c6dc:	cmp	w8, #0x72
  40c6e0:	b.hi	40c718 <wcrtomb@plt+0x9ab8>  // b.pmore
  40c6e4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  40c6e8:	add	x9, x9, #0xf88
  40c6ec:	adr	x10, 40c6fc <wcrtomb@plt+0x9a9c>
  40c6f0:	ldrh	w13, [x9, x8, lsl #1]
  40c6f4:	add	x10, x10, x13, lsl #2
  40c6f8:	br	x10
  40c6fc:	tbz	w23, #0, 40c718 <wcrtomb@plt+0x9ab8>
  40c700:	ldrb	w8, [x19, #449]
  40c704:	tbnz	w8, #6, 40c718 <wcrtomb@plt+0x9ab8>
  40c708:	strb	wzr, [x19, #120]
  40c70c:	mov	w21, #0x112                 	// #274
  40c710:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c714:	mov	w22, #0x5c                  	// #92
  40c718:	ldrb	w8, [x19, #1048]
  40c71c:	strb	wzr, [x19, #120]
  40c720:	cbz	w8, 40c748 <wcrtomb@plt+0x9ae8>
  40c724:	mov	w21, #0x109                 	// #265
  40c728:	str	x21, [x19, #48]
  40c72c:	mov	x0, x21
  40c730:	ldp	x20, x19, [sp, #80]
  40c734:	ldp	x22, x21, [sp, #64]
  40c738:	ldp	x24, x23, [sp, #48]
  40c73c:	ldp	x29, x30, [sp, #32]
  40c740:	add	sp, sp, #0x60
  40c744:	ret
  40c748:	ldrb	w8, [x19, #457]
  40c74c:	cbz	w8, 40c7e0 <wcrtomb@plt+0x9b80>
  40c750:	bl	4029e0 <__ctype_b_loc@plt>
  40c754:	ldr	x8, [x0]
  40c758:	sxtw	x21, w22
  40c75c:	ldrh	w8, [x8, w22, sxtw #1]
  40c760:	tbz	w8, #10, 40c728 <wcrtomb@plt+0x9ac8>
  40c764:	movi	v0.2d, #0x0
  40c768:	stp	q0, q0, [sp]
  40c76c:	bl	402880 <__ctype_toupper_loc@plt>
  40c770:	ldr	x8, [x0]
  40c774:	mov	x20, xzr
  40c778:	mov	w22, #0x1                   	// #1
  40c77c:	mov	x23, sp
  40c780:	ldr	w21, [x8, x21, lsl #2]
  40c784:	b	40c7ac <wcrtomb@plt+0x9b4c>
  40c788:	ubfx	x8, x20, #6, #26
  40c78c:	lsl	x8, x8, #3
  40c790:	ldr	x9, [x23, x8]
  40c794:	lsl	x10, x22, x20
  40c798:	orr	x9, x9, x10
  40c79c:	str	x9, [x23, x8]
  40c7a0:	add	x20, x20, #0x1
  40c7a4:	cmp	x20, #0x100
  40c7a8:	b.eq	40c7e8 <wcrtomb@plt+0x9b88>  // b.none
  40c7ac:	add	w8, w20, #0x80
  40c7b0:	cmp	w8, #0x180
  40c7b4:	b.cs	40c7d0 <wcrtomb@plt+0x9b70>  // b.hs, b.nlast
  40c7b8:	bl	402880 <__ctype_toupper_loc@plt>
  40c7bc:	ldr	x8, [x0]
  40c7c0:	ldr	w8, [x8, x20, lsl #2]
  40c7c4:	cmp	w8, w21
  40c7c8:	b.ne	40c7a0 <wcrtomb@plt+0x9b40>  // b.any
  40c7cc:	b	40c788 <wcrtomb@plt+0x9b28>
  40c7d0:	mov	w8, w20
  40c7d4:	cmp	w8, w21
  40c7d8:	b.ne	40c7a0 <wcrtomb@plt+0x9b40>  // b.any
  40c7dc:	b	40c788 <wcrtomb@plt+0x9b28>
  40c7e0:	sxtw	x21, w22
  40c7e4:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c7e8:	ldr	x8, [x19, #8]
  40c7ec:	cmp	x8, #0x0
  40c7f0:	b.le	40ce04 <wcrtomb@plt+0xa1a4>
  40c7f4:	ldr	x0, [x19]
  40c7f8:	ldp	x9, x10, [sp]
  40c7fc:	ldp	x11, x12, [sp, #16]
  40c800:	mov	x20, xzr
  40c804:	add	x13, x0, #0x10
  40c808:	ldp	x14, x15, [x13, #-16]
  40c80c:	ldp	x16, x17, [x13]
  40c810:	eor	x14, x14, x9
  40c814:	eor	x15, x15, x10
  40c818:	eor	x16, x16, x11
  40c81c:	orr	x14, x15, x14
  40c820:	orr	x14, x14, x16
  40c824:	eor	x15, x17, x12
  40c828:	orr	x14, x14, x15
  40c82c:	cbz	x14, 40ce48 <wcrtomb@plt+0xa1e8>
  40c830:	add	x20, x20, #0x1
  40c834:	cmp	x8, x20
  40c838:	add	x13, x13, #0x20
  40c83c:	b.ne	40c808 <wcrtomb@plt+0x9ba8>  // b.any
  40c840:	mov	x20, x8
  40c844:	b	40ce0c <wcrtomb@plt+0xa1ac>
  40c848:	ldp	x8, x9, [x19, #32]
  40c84c:	sxtw	x10, w0
  40c850:	mov	w22, #0xffffffff            	// #-1
  40c854:	add	x8, x8, x10
  40c858:	sub	x9, x9, x10
  40c85c:	stp	x8, x9, [x19, #32]
  40c860:	b	40c718 <wcrtomb@plt+0x9ab8>
  40c864:	tbz	w23, #0, 40c718 <wcrtomb@plt+0x9ab8>
  40c868:	ldrb	w8, [x19, #450]
  40c86c:	tbnz	w8, #3, 40c718 <wcrtomb@plt+0x9ab8>
  40c870:	ldrb	w8, [x19, #1048]
  40c874:	cbz	w8, 40cc74 <wcrtomb@plt+0xa014>
  40c878:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  40c87c:	add	x23, x12, #0x1
  40c880:	add	x8, x8, #0x431
  40c884:	cmp	w22, #0x77
  40c888:	mov	w9, #0xb                   	// #11
  40c88c:	b	40c8b8 <wcrtomb@plt+0x9c58>
  40c890:	tbz	w23, #0, 40c718 <wcrtomb@plt+0x9ab8>
  40c894:	ldrb	w8, [x19, #450]
  40c898:	tbnz	w8, #3, 40c718 <wcrtomb@plt+0x9ab8>
  40c89c:	ldrb	w8, [x19, #1048]
  40c8a0:	cbz	w8, 40cd3c <wcrtomb@plt+0xa0dc>
  40c8a4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  40c8a8:	add	x23, x12, #0x1
  40c8ac:	add	x8, x8, #0x425
  40c8b0:	cmp	w22, #0x73
  40c8b4:	mov	w9, #0xa                   	// #10
  40c8b8:	cinc	x8, x8, eq  // eq = none
  40c8bc:	cinc	x9, x9, ne  // ne = any
  40c8c0:	mov	x0, x19
  40c8c4:	stp	x8, x9, [x19, #32]
  40c8c8:	bl	40fa90 <wcrtomb@plt+0xce30>
  40c8cc:	mov	x21, x0
  40c8d0:	stp	x20, x0, [x19, #40]
  40c8d4:	str	x23, [x19, #32]
  40c8d8:	strb	wzr, [x19, #120]
  40c8dc:	b	40c72c <wcrtomb@plt+0x9acc>
  40c8e0:	tbz	w23, #0, 40cb28 <wcrtomb@plt+0x9ec8>
  40c8e4:	ldrb	w8, [x19, #450]
  40c8e8:	tbnz	w8, #3, 40cb28 <wcrtomb@plt+0x9ec8>
  40c8ec:	mov	w21, #0x110                 	// #272
  40c8f0:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c8f4:	ldr	x8, [x19, #448]
  40c8f8:	tbz	w8, #9, 40d068 <wcrtomb@plt+0xa408>
  40c8fc:	mov	w10, #0x1                   	// #1
  40c900:	and	w9, w23, #0x1
  40c904:	bic	w10, w10, w8, lsr #12
  40c908:	cmp	w10, w9
  40c90c:	b.ne	40d068 <wcrtomb@plt+0xa408>  // b.any
  40c910:	tbnz	w8, #4, 40c91c <wcrtomb@plt+0x9cbc>
  40c914:	ldrb	w9, [x19, #120]
  40c918:	cbnz	w9, 40d068 <wcrtomb@plt+0xa408>
  40c91c:	add	x9, x12, x11
  40c920:	movi	v0.2d, #0xffffffffffffffff
  40c924:	str	d0, [x19, #64]
  40c928:	cbz	x20, 40cf80 <wcrtomb@plt+0xa320>
  40c92c:	mov	x13, xzr
  40c930:	mov	w10, #0xffffffff            	// #-1
  40c934:	mov	w14, #0xa                   	// #10
  40c938:	mov	w15, #0x8030                	// #32816
  40c93c:	mov	w16, #0x8000                	// #32768
  40c940:	b	40c964 <wcrtomb@plt+0x9d04>
  40c944:	madd	w10, w10, w14, w18
  40c948:	sub	w17, w10, #0x30
  40c94c:	cmp	w10, w15
  40c950:	csel	w10, w16, w17, gt
  40c954:	add	x13, x13, #0x1
  40c958:	cmp	x20, x13
  40c95c:	str	w10, [x19, #64]
  40c960:	b.eq	40d010 <wcrtomb@plt+0xa3b0>  // b.none
  40c964:	add	x17, x12, x13
  40c968:	ldrb	w18, [x17, #1]
  40c96c:	sub	w0, w18, #0x30
  40c970:	cmp	w0, #0x9
  40c974:	b.hi	40cf90 <wcrtomb@plt+0xa330>  // b.pmore
  40c978:	tbz	w10, #31, 40c944 <wcrtomb@plt+0x9ce4>
  40c97c:	mov	w10, w0
  40c980:	b	40c954 <wcrtomb@plt+0x9cf4>
  40c984:	tbz	w23, #0, 40cb50 <wcrtomb@plt+0x9ef0>
  40c988:	mov	w22, #0x5b                  	// #91
  40c98c:	b	40c718 <wcrtomb@plt+0x9ab8>
  40c990:	ldr	x8, [x19, #448]
  40c994:	tbnz	w8, #10, 40cb30 <wcrtomb@plt+0x9ed0>
  40c998:	mov	w9, #0x1                   	// #1
  40c99c:	and	w10, w23, #0x1
  40c9a0:	bic	w8, w9, w8, lsr #15
  40c9a4:	cmp	w8, w10
  40c9a8:	b.ne	40cb30 <wcrtomb@plt+0x9ed0>  // b.any
  40c9ac:	strb	w9, [x19, #120]
  40c9b0:	mov	w21, #0x106                 	// #262
  40c9b4:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c9b8:	tbz	w23, #0, 40cb38 <wcrtomb@plt+0x9ed8>
  40c9bc:	ldrb	w8, [x19, #450]
  40c9c0:	tbnz	w8, #3, 40cb38 <wcrtomb@plt+0x9ed8>
  40c9c4:	mov	w21, #0x10f                 	// #271
  40c9c8:	b	40c728 <wcrtomb@plt+0x9ac8>
  40c9cc:	ldr	x8, [x19, #448]
  40c9d0:	tbnz	w8, #10, 40c9ec <wcrtomb@plt+0x9d8c>
  40c9d4:	ubfx	x9, x8, #1, #1
  40c9d8:	eor	w9, w23, w9
  40c9dc:	tbnz	w9, #0, 40c9ec <wcrtomb@plt+0x9d8c>
  40c9e0:	tbnz	w8, #4, 40ce50 <wcrtomb@plt+0xa1f0>
  40c9e4:	ldrb	w8, [x19, #120]
  40c9e8:	cbz	w8, 40ce50 <wcrtomb@plt+0xa1f0>
  40c9ec:	mov	w22, #0x2b                  	// #43
  40c9f0:	b	40c718 <wcrtomb@plt+0x9ab8>
  40c9f4:	tbz	w23, #0, 40cb68 <wcrtomb@plt+0x9f08>
  40c9f8:	mov	w22, #0x2e                  	// #46
  40c9fc:	b	40c718 <wcrtomb@plt+0x9ab8>
  40ca00:	ldr	x8, [x19, #448]
  40ca04:	mov	w10, #0x1                   	// #1
  40ca08:	and	w9, w23, #0x1
  40ca0c:	bic	w10, w10, w8, lsr #13
  40ca10:	cmp	w10, w9
  40ca14:	b.ne	40ca24 <wcrtomb@plt+0x9dc4>  // b.any
  40ca18:	ldr	x9, [x19, #56]
  40ca1c:	tbz	w8, #17, 40cc60 <wcrtomb@plt+0xa000>
  40ca20:	cbnz	x9, 40cc60 <wcrtomb@plt+0xa000>
  40ca24:	mov	w22, #0x29                  	// #41
  40ca28:	b	40c718 <wcrtomb@plt+0x9ab8>
  40ca2c:	ldr	w9, [x19, #448]
  40ca30:	mov	w8, #0x1                   	// #1
  40ca34:	and	w10, w23, #0x1
  40ca38:	bic	w9, w8, w9, lsr #13
  40ca3c:	cmp	w9, w10
  40ca40:	b.ne	40cb90 <wcrtomb@plt+0x9f30>  // b.any
  40ca44:	ldr	x9, [x19, #56]
  40ca48:	strb	w8, [x19, #120]
  40ca4c:	mov	w21, #0x107                 	// #263
  40ca50:	add	x8, x9, #0x1
  40ca54:	str	x8, [x19, #56]
  40ca58:	b	40c728 <wcrtomb@plt+0x9ac8>
  40ca5c:	tbnz	w23, #0, 40ca70 <wcrtomb@plt+0x9e10>
  40ca60:	ldrb	w8, [x19, #448]
  40ca64:	tbnz	w8, #4, 40cc58 <wcrtomb@plt+0x9ff8>
  40ca68:	ldrb	w8, [x19, #120]
  40ca6c:	cbz	w8, 40cc58 <wcrtomb@plt+0x9ff8>
  40ca70:	mov	w22, #0x2a                  	// #42
  40ca74:	b	40c718 <wcrtomb@plt+0x9ab8>
  40ca78:	tbz	w23, #0, 40ca84 <wcrtomb@plt+0x9e24>
  40ca7c:	ldrb	w8, [x19, #450]
  40ca80:	tbz	w8, #3, 40cc18 <wcrtomb@plt+0x9fb8>
  40ca84:	mov	w22, #0x27                  	// #39
  40ca88:	b	40c718 <wcrtomb@plt+0x9ab8>
  40ca8c:	tbz	w23, #0, 40cb40 <wcrtomb@plt+0x9ee0>
  40ca90:	ldrb	w8, [x19, #450]
  40ca94:	tbnz	w8, #3, 40cb40 <wcrtomb@plt+0x9ee0>
  40ca98:	mov	w21, #0x111                 	// #273
  40ca9c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40caa0:	tbz	w23, #0, 40cb98 <wcrtomb@plt+0x9f38>
  40caa4:	mov	w22, #0x24                  	// #36
  40caa8:	b	40c718 <wcrtomb@plt+0x9ab8>
  40caac:	ldr	x8, [x19, #448]
  40cab0:	and	x8, x8, #0xc00
  40cab4:	cmp	x8, #0x800
  40cab8:	cset	w8, ne  // ne = any
  40cabc:	orr	w8, w23, w8
  40cac0:	tbz	w8, #0, 40cc20 <wcrtomb@plt+0x9fc0>
  40cac4:	mov	w22, #0xa                   	// #10
  40cac8:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cacc:	ldr	x8, [x19, #448]
  40cad0:	tbnz	w8, #10, 40caec <wcrtomb@plt+0x9e8c>
  40cad4:	ubfx	x9, x8, #1, #1
  40cad8:	eor	w9, w23, w9
  40cadc:	tbnz	w9, #0, 40caec <wcrtomb@plt+0x9e8c>
  40cae0:	tbnz	w8, #4, 40ce58 <wcrtomb@plt+0xa1f8>
  40cae4:	ldrb	w8, [x19, #120]
  40cae8:	cbz	w8, 40ce58 <wcrtomb@plt+0xa1f8>
  40caec:	mov	w22, #0x3f                  	// #63
  40caf0:	b	40c718 <wcrtomb@plt+0x9ab8>
  40caf4:	tbz	w23, #0, 40cb48 <wcrtomb@plt+0x9ee8>
  40caf8:	ldrb	w8, [x19, #450]
  40cafc:	tbnz	w8, #3, 40cb48 <wcrtomb@plt+0x9ee8>
  40cb00:	mov	w21, #0x10e                 	// #270
  40cb04:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cb08:	tbz	w23, #0, 40cc30 <wcrtomb@plt+0x9fd0>
  40cb0c:	mov	w22, #0x5e                  	// #94
  40cb10:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb14:	tbz	w23, #0, 40cb20 <wcrtomb@plt+0x9ec0>
  40cb18:	ldrb	w8, [x19, #450]
  40cb1c:	tbz	w8, #3, 40cc50 <wcrtomb@plt+0x9ff0>
  40cb20:	mov	w22, #0x60                  	// #96
  40cb24:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb28:	mov	w22, #0x62                  	// #98
  40cb2c:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb30:	mov	w22, #0x7c                  	// #124
  40cb34:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb38:	mov	w22, #0x3e                  	// #62
  40cb3c:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb40:	mov	w22, #0x42                  	// #66
  40cb44:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb48:	mov	w22, #0x3c                  	// #60
  40cb4c:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb50:	mov	x0, x19
  40cb54:	strb	wzr, [x19, #120]
  40cb58:	bl	40fa90 <wcrtomb@plt+0xce30>
  40cb5c:	mov	x21, x0
  40cb60:	str	x0, [x19, #48]
  40cb64:	b	40c72c <wcrtomb@plt+0x9acc>
  40cb68:	ldr	x20, [x19, #24]
  40cb6c:	tbz	x20, #63, 40cf64 <wcrtomb@plt+0xa304>
  40cb70:	movi	v0.2d, #0xffffffffffffffff
  40cb74:	stp	q0, q0, [sp]
  40cb78:	ldr	x8, [x19, #448]
  40cb7c:	tbnz	w8, #6, 40ce60 <wcrtomb@plt+0xa200>
  40cb80:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40cb84:	str	x9, [sp]
  40cb88:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40cb8c:	b	40ce64 <wcrtomb@plt+0xa204>
  40cb90:	mov	w22, #0x28                  	// #40
  40cb94:	b	40c718 <wcrtomb@plt+0x9ab8>
  40cb98:	cbz	x20, 40cc18 <wcrtomb@plt+0x9fb8>
  40cb9c:	ldr	x8, [x19, #448]
  40cba0:	tbnz	w8, #3, 40cc18 <wcrtomb@plt+0x9fb8>
  40cba4:	mov	w10, #0x1                   	// #1
  40cba8:	bic	w13, w10, w8, lsr #13
  40cbac:	cmp	x20, x13
  40cbb0:	add	x9, x12, #0x1
  40cbb4:	b.le	40cbd4 <wcrtomb@plt+0x9f74>
  40cbb8:	ldrb	w12, [x9]
  40cbbc:	cmp	w12, #0x5c
  40cbc0:	cset	w12, eq  // eq = none
  40cbc4:	and	x12, x13, x12
  40cbc8:	ldrb	w12, [x9, x12]
  40cbcc:	cmp	w12, #0x29
  40cbd0:	b.eq	40cc18 <wcrtomb@plt+0x9fb8>  // b.none
  40cbd4:	bic	w10, w10, w8, lsr #15
  40cbd8:	cmp	x20, x10
  40cbdc:	b.le	40cbfc <wcrtomb@plt+0x9f9c>
  40cbe0:	ldrb	w12, [x9]
  40cbe4:	cmp	w12, #0x5c
  40cbe8:	cset	w12, eq  // eq = none
  40cbec:	and	x10, x10, x12
  40cbf0:	ldrb	w10, [x9, x10]
  40cbf4:	cmp	w10, #0x7c
  40cbf8:	b.eq	40cc18 <wcrtomb@plt+0x9fb8>  // b.none
  40cbfc:	cmp	x11, #0x2
  40cc00:	mov	w22, #0x24                  	// #36
  40cc04:	b.lt	40c718 <wcrtomb@plt+0x9ab8>  // b.tstop
  40cc08:	tbz	w8, #11, 40c718 <wcrtomb@plt+0x9ab8>
  40cc0c:	ldrb	w8, [x9]
  40cc10:	cmp	w8, #0xa
  40cc14:	b.ne	40caa4 <wcrtomb@plt+0x9e44>  // b.any
  40cc18:	mov	w21, #0x10d                 	// #269
  40cc1c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cc20:	mov	w8, #0x1                   	// #1
  40cc24:	mov	w21, #0x106                 	// #262
  40cc28:	strb	w8, [x19, #120]
  40cc2c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cc30:	ldrb	w8, [x19, #448]
  40cc34:	tbnz	w8, #3, 40cc50 <wcrtomb@plt+0x9ff0>
  40cc38:	ldr	x8, [x19, #48]
  40cc3c:	sub	x9, x8, #0x106
  40cc40:	cmp	x9, #0x2
  40cc44:	b.cc	40cc50 <wcrtomb@plt+0x9ff0>  // b.lo, b.ul, b.last
  40cc48:	cmn	x8, #0x1
  40cc4c:	b.ne	40cb0c <wcrtomb@plt+0x9eac>  // b.any
  40cc50:	mov	w21, #0x10c                 	// #268
  40cc54:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cc58:	mov	w21, #0x102                 	// #258
  40cc5c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cc60:	sub	x8, x9, #0x1
  40cc64:	strb	wzr, [x19, #120]
  40cc68:	mov	w21, #0x108                 	// #264
  40cc6c:	str	x8, [x19, #56]
  40cc70:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cc74:	mov	x8, xzr
  40cc78:	movi	v0.2d, #0x0
  40cc7c:	add	x9, x19, #0x1cc
  40cc80:	mov	w10, #0x1                   	// #1
  40cc84:	mov	x11, sp
  40cc88:	stp	q0, q0, [sp]
  40cc8c:	b	40cc9c <wcrtomb@plt+0xa03c>
  40cc90:	add	x8, x8, #0x1
  40cc94:	cmp	x8, #0x100
  40cc98:	b.eq	40ccc4 <wcrtomb@plt+0xa064>  // b.none
  40cc9c:	ldrb	w12, [x9, x8]
  40cca0:	cmp	w12, #0x2
  40cca4:	b.ne	40cc90 <wcrtomb@plt+0xa030>  // b.any
  40cca8:	ubfx	x12, x8, #6, #26
  40ccac:	lsl	x12, x12, #3
  40ccb0:	ldr	x13, [x11, x12]
  40ccb4:	lsl	x14, x10, x8
  40ccb8:	orr	x13, x13, x14
  40ccbc:	str	x13, [x11, x12]
  40ccc0:	b	40cc90 <wcrtomb@plt+0xa030>
  40ccc4:	cmp	w22, #0x57
  40ccc8:	b.ne	40ccdc <wcrtomb@plt+0xa07c>  // b.any
  40cccc:	ldp	q0, q1, [sp]
  40ccd0:	mvn	v0.16b, v0.16b
  40ccd4:	mvn	v1.16b, v1.16b
  40ccd8:	stp	q0, q1, [sp]
  40ccdc:	ldr	x8, [x19, #8]
  40cce0:	strb	wzr, [x19, #120]
  40cce4:	cmp	x8, #0x0
  40cce8:	b.le	40ce04 <wcrtomb@plt+0xa1a4>
  40ccec:	ldr	x0, [x19]
  40ccf0:	ldp	x9, x10, [sp]
  40ccf4:	ldp	x11, x12, [sp, #16]
  40ccf8:	mov	x20, xzr
  40ccfc:	add	x13, x0, #0x10
  40cd00:	ldp	x14, x15, [x13, #-16]
  40cd04:	ldp	x16, x17, [x13]
  40cd08:	eor	x14, x14, x9
  40cd0c:	eor	x15, x15, x10
  40cd10:	eor	x16, x16, x11
  40cd14:	orr	x14, x15, x14
  40cd18:	orr	x14, x14, x16
  40cd1c:	eor	x15, x17, x12
  40cd20:	orr	x14, x14, x15
  40cd24:	cbz	x14, 40ce48 <wcrtomb@plt+0xa1e8>
  40cd28:	add	x20, x20, #0x1
  40cd2c:	cmp	x8, x20
  40cd30:	add	x13, x13, #0x20
  40cd34:	b.ne	40cd00 <wcrtomb@plt+0xa0a0>  // b.any
  40cd38:	b	40c840 <wcrtomb@plt+0x9be0>
  40cd3c:	movi	v0.2d, #0x0
  40cd40:	stp	q0, q0, [sp]
  40cd44:	bl	4029e0 <__ctype_b_loc@plt>
  40cd48:	ldr	x9, [x0]
  40cd4c:	mov	x8, xzr
  40cd50:	mov	w10, #0x1                   	// #1
  40cd54:	mov	x11, sp
  40cd58:	b	40cd68 <wcrtomb@plt+0xa108>
  40cd5c:	add	x8, x8, #0x1
  40cd60:	cmp	x8, #0x100
  40cd64:	b.eq	40cd8c <wcrtomb@plt+0xa12c>  // b.none
  40cd68:	ldrh	w12, [x9, x8, lsl #1]
  40cd6c:	tbz	w12, #13, 40cd5c <wcrtomb@plt+0xa0fc>
  40cd70:	ubfx	x12, x8, #6, #26
  40cd74:	lsl	x12, x12, #3
  40cd78:	ldr	x13, [x11, x12]
  40cd7c:	lsl	x14, x10, x8
  40cd80:	orr	x13, x13, x14
  40cd84:	str	x13, [x11, x12]
  40cd88:	b	40cd5c <wcrtomb@plt+0xa0fc>
  40cd8c:	cmp	w22, #0x53
  40cd90:	b.ne	40cda4 <wcrtomb@plt+0xa144>  // b.any
  40cd94:	ldp	q0, q1, [sp]
  40cd98:	mvn	v0.16b, v0.16b
  40cd9c:	mvn	v1.16b, v1.16b
  40cda0:	stp	q0, q1, [sp]
  40cda4:	ldr	x8, [x19, #8]
  40cda8:	strb	wzr, [x19, #120]
  40cdac:	cmp	x8, #0x0
  40cdb0:	b.le	40ce04 <wcrtomb@plt+0xa1a4>
  40cdb4:	ldr	x0, [x19]
  40cdb8:	ldp	x9, x10, [sp]
  40cdbc:	ldp	x11, x12, [sp, #16]
  40cdc0:	mov	x20, xzr
  40cdc4:	add	x13, x0, #0x10
  40cdc8:	ldp	x14, x15, [x13, #-16]
  40cdcc:	ldp	x16, x17, [x13]
  40cdd0:	eor	x14, x14, x9
  40cdd4:	eor	x15, x15, x10
  40cdd8:	eor	x16, x16, x11
  40cddc:	orr	x14, x15, x14
  40cde0:	orr	x14, x14, x16
  40cde4:	eor	x15, x17, x12
  40cde8:	orr	x14, x14, x15
  40cdec:	cbz	x14, 40ce48 <wcrtomb@plt+0xa1e8>
  40cdf0:	add	x20, x20, #0x1
  40cdf4:	cmp	x8, x20
  40cdf8:	add	x13, x13, #0x20
  40cdfc:	b.ne	40cdc8 <wcrtomb@plt+0xa168>  // b.any
  40ce00:	b	40c840 <wcrtomb@plt+0x9be0>
  40ce04:	ldr	x0, [x19]
  40ce08:	mov	x20, xzr
  40ce0c:	mov	x1, x19
  40ce10:	ldr	x9, [x1, #16]!
  40ce14:	cmp	x9, x8
  40ce18:	b.gt	40ce34 <wcrtomb@plt+0xa1d4>
  40ce1c:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40ce20:	mov	w2, #0x1                   	// #1
  40ce24:	movk	x3, #0x7fff, lsl #48
  40ce28:	mov	w4, #0x20                  	// #32
  40ce2c:	bl	40f91c <wcrtomb@plt+0xccbc>
  40ce30:	ldr	x8, [x19, #8]
  40ce34:	add	x8, x8, #0x1
  40ce38:	stp	x0, x8, [x19]
  40ce3c:	ldp	q1, q0, [sp]
  40ce40:	add	x8, x0, x20, lsl #5
  40ce44:	stp	q1, q0, [x8]
  40ce48:	add	x21, x20, #0x114
  40ce4c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40ce50:	mov	w21, #0x103                 	// #259
  40ce54:	b	40c728 <wcrtomb@plt+0x9ac8>
  40ce58:	mov	w21, #0x101                 	// #257
  40ce5c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40ce60:	mov	x9, #0xfffffffffffffffe    	// #-2
  40ce64:	tbz	w8, #7, 40ce6c <wcrtomb@plt+0xa20c>
  40ce68:	str	x9, [sp]
  40ce6c:	ldrb	w8, [x19, #1048]
  40ce70:	cbz	w8, 40cebc <wcrtomb@plt+0xa25c>
  40ce74:	mov	x8, xzr
  40ce78:	add	x9, x19, #0x51c
  40ce7c:	mov	w10, #0x1                   	// #1
  40ce80:	mov	x11, sp
  40ce84:	b	40ce94 <wcrtomb@plt+0xa234>
  40ce88:	add	x8, x8, #0x1
  40ce8c:	cmp	x8, #0x100
  40ce90:	b.eq	40cebc <wcrtomb@plt+0xa25c>  // b.none
  40ce94:	ldr	w12, [x9, x8, lsl #2]
  40ce98:	cmn	w12, #0x1
  40ce9c:	b.ne	40ce88 <wcrtomb@plt+0xa228>  // b.any
  40cea0:	ubfx	x12, x8, #6, #26
  40cea4:	lsl	x12, x12, #3
  40cea8:	ldr	x13, [x11, x12]
  40ceac:	lsl	x14, x10, x8
  40ceb0:	bic	x13, x13, x14
  40ceb4:	str	x13, [x11, x12]
  40ceb8:	b	40ce88 <wcrtomb@plt+0xa228>
  40cebc:	ldr	x8, [x19, #8]
  40cec0:	cmp	x8, #0x0
  40cec4:	b.le	40cf1c <wcrtomb@plt+0xa2bc>
  40cec8:	ldr	x0, [x19]
  40cecc:	ldp	x9, x10, [sp]
  40ced0:	ldp	x11, x12, [sp, #16]
  40ced4:	mov	x20, xzr
  40ced8:	add	x13, x0, #0x10
  40cedc:	ldp	x14, x15, [x13, #-16]
  40cee0:	ldp	x16, x17, [x13]
  40cee4:	eor	x14, x14, x9
  40cee8:	eor	x15, x15, x10
  40ceec:	eor	x16, x16, x11
  40cef0:	orr	x14, x15, x14
  40cef4:	orr	x14, x14, x16
  40cef8:	eor	x15, x17, x12
  40cefc:	orr	x14, x14, x15
  40cf00:	cbz	x14, 40cf60 <wcrtomb@plt+0xa300>
  40cf04:	add	x20, x20, #0x1
  40cf08:	cmp	x8, x20
  40cf0c:	add	x13, x13, #0x20
  40cf10:	b.ne	40cedc <wcrtomb@plt+0xa27c>  // b.any
  40cf14:	mov	x20, x8
  40cf18:	b	40cf24 <wcrtomb@plt+0xa2c4>
  40cf1c:	ldr	x0, [x19]
  40cf20:	mov	x20, xzr
  40cf24:	mov	x1, x19
  40cf28:	ldr	x9, [x1, #16]!
  40cf2c:	cmp	x9, x8
  40cf30:	b.gt	40cf4c <wcrtomb@plt+0xa2ec>
  40cf34:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40cf38:	mov	w2, #0x1                   	// #1
  40cf3c:	movk	x3, #0x7fff, lsl #48
  40cf40:	mov	w4, #0x20                  	// #32
  40cf44:	bl	40f91c <wcrtomb@plt+0xccbc>
  40cf48:	ldr	x8, [x19, #8]
  40cf4c:	add	x8, x8, #0x1
  40cf50:	stp	x0, x8, [x19]
  40cf54:	ldp	q1, q0, [sp]
  40cf58:	add	x8, x0, x20, lsl #5
  40cf5c:	stp	q1, q0, [x8]
  40cf60:	str	x20, [x19, #24]
  40cf64:	ldrb	w8, [x19, #1048]
  40cf68:	add	x9, x20, #0x114
  40cf6c:	strb	wzr, [x19, #120]
  40cf70:	cmp	w8, #0x0
  40cf74:	mov	w8, #0x10a                 	// #266
  40cf78:	csel	x21, x9, x8, eq  // eq = none
  40cf7c:	b	40c728 <wcrtomb@plt+0x9ac8>
  40cf80:	add	x11, x12, #0x1
  40cf84:	mov	w12, #0xffffffff            	// #-1
  40cf88:	mov	w10, #0xffffffff            	// #-1
  40cf8c:	b	40d028 <wcrtomb@plt+0xa3c8>
  40cf90:	cmp	w18, #0x2c
  40cf94:	b.ne	40d01c <wcrtomb@plt+0xa3bc>  // b.any
  40cf98:	tbz	w10, #31, 40cfa4 <wcrtomb@plt+0xa344>
  40cf9c:	mov	w10, wzr
  40cfa0:	str	wzr, [x19, #64]
  40cfa4:	sub	x14, x11, #0x2
  40cfa8:	cmp	x14, x13
  40cfac:	b.eq	40d010 <wcrtomb@plt+0xa3b0>  // b.none
  40cfb0:	sub	x11, x11, x13
  40cfb4:	add	x16, x12, x13
  40cfb8:	mov	w12, #0xffffffff            	// #-1
  40cfbc:	mov	w13, #0xa                   	// #10
  40cfc0:	mov	w14, #0x8030                	// #32816
  40cfc4:	sub	x15, x11, #0x2
  40cfc8:	add	x11, x16, #0x2
  40cfcc:	mov	w16, #0x8000                	// #32768
  40cfd0:	b	40cff4 <wcrtomb@plt+0xa394>
  40cfd4:	madd	w12, w12, w13, w17
  40cfd8:	sub	w17, w12, #0x30
  40cfdc:	cmp	w12, w14
  40cfe0:	csel	w12, w16, w17, gt
  40cfe4:	subs	x15, x15, #0x1
  40cfe8:	add	x11, x11, #0x1
  40cfec:	str	w12, [x19, #68]
  40cff0:	b.eq	40d014 <wcrtomb@plt+0xa3b4>  // b.none
  40cff4:	ldrb	w17, [x11]
  40cff8:	sub	w18, w17, #0x30
  40cffc:	cmp	w18, #0x9
  40d000:	b.hi	40d028 <wcrtomb@plt+0xa3c8>  // b.pmore
  40d004:	tbz	w12, #31, 40cfd4 <wcrtomb@plt+0xa374>
  40d008:	mov	w12, w18
  40d00c:	b	40cfe4 <wcrtomb@plt+0xa384>
  40d010:	mov	w12, #0xffffffff            	// #-1
  40d014:	mov	x11, x9
  40d018:	b	40d028 <wcrtomb@plt+0xa3c8>
  40d01c:	add	x11, x17, #0x1
  40d020:	str	w10, [x19, #68]
  40d024:	mov	w12, w10
  40d028:	tbz	w23, #0, 40d040 <wcrtomb@plt+0xa3e0>
  40d02c:	cmp	x11, x9
  40d030:	b.eq	40d064 <wcrtomb@plt+0xa404>  // b.none
  40d034:	ldrb	w13, [x11], #1
  40d038:	cmp	w13, #0x5c
  40d03c:	b.ne	40d064 <wcrtomb@plt+0xa404>  // b.any
  40d040:	cmp	x11, x9
  40d044:	b.eq	40d064 <wcrtomb@plt+0xa404>  // b.none
  40d048:	ldrb	w13, [x11], #1
  40d04c:	cmp	w13, #0x7d
  40d050:	b.ne	40d064 <wcrtomb@plt+0xa404>  // b.any
  40d054:	tbnz	w10, #31, 40d064 <wcrtomb@plt+0xa404>
  40d058:	tbnz	w12, #31, 40d070 <wcrtomb@plt+0xa410>
  40d05c:	cmp	w10, w12
  40d060:	b.le	40d070 <wcrtomb@plt+0xa410>
  40d064:	tbz	w8, #21, 40d0a4 <wcrtomb@plt+0xa444>
  40d068:	mov	w22, #0x7b                  	// #123
  40d06c:	b	40c718 <wcrtomb@plt+0x9ab8>
  40d070:	cmp	w12, #0x8, lsl #12
  40d074:	b.ge	40d0b0 <wcrtomb@plt+0xa450>  // b.tcont
  40d078:	sub	x8, x9, x11
  40d07c:	strb	wzr, [x19, #120]
  40d080:	mov	w21, #0x104                 	// #260
  40d084:	stp	x11, x8, [x19, #32]
  40d088:	b	40c728 <wcrtomb@plt+0x9ac8>
  40d08c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d090:	add	x1, x1, #0x3de
  40d094:	mov	w2, #0x5                   	// #5
  40d098:	mov	x0, xzr
  40d09c:	bl	402b40 <dcgettext@plt>
  40d0a0:	bl	40a604 <wcrtomb@plt+0x79a4>
  40d0a4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d0a8:	add	x1, x1, #0x3f2
  40d0ac:	b	40d094 <wcrtomb@plt+0xa434>
  40d0b0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d0b4:	add	x1, x1, #0x40a
  40d0b8:	b	40d094 <wcrtomb@plt+0xa434>
  40d0bc:	ldr	x6, [x0, #1040]
  40d0c0:	and	w3, w3, #0x1
  40d0c4:	br	x6
  40d0c8:	ldr	x0, [x0, #288]
  40d0cc:	ret
  40d0d0:	ldrb	w0, [x0, #192]
  40d0d4:	ret
  40d0d8:	sub	sp, sp, #0x70
  40d0dc:	stp	x24, x23, [sp, #64]
  40d0e0:	stp	x20, x19, [sp, #96]
  40d0e4:	mov	w23, w3
  40d0e8:	mov	x20, x2
  40d0ec:	stp	x29, x30, [sp, #16]
  40d0f0:	stp	x28, x27, [sp, #32]
  40d0f4:	stp	x26, x25, [sp, #48]
  40d0f8:	stp	x22, x21, [sp, #80]
  40d0fc:	add	x29, sp, #0x10
  40d100:	cbz	x0, 40d10c <wcrtomb@plt+0xa4ac>
  40d104:	mov	x2, x20
  40d108:	bl	40c314 <wcrtomb@plt+0x96b4>
  40d10c:	mov	w0, #0x920                 	// #2336
  40d110:	bl	415348 <wcrtomb@plt+0x126e8>
  40d114:	mov	w2, #0x920                 	// #2336
  40d118:	mov	x1, x20
  40d11c:	mov	x21, x0
  40d120:	bl	402580 <memcpy@plt>
  40d124:	adrp	x8, 40f000 <wcrtomb@plt+0xc3a0>
  40d128:	add	x8, x8, #0x6b8
  40d12c:	strb	wzr, [x21, #1048]
  40d130:	str	xzr, [x21, #320]
  40d134:	mov	x22, x21
  40d138:	str	x8, [x21, #1040]
  40d13c:	ldr	x8, [x22, #16]!
  40d140:	add	x9, x21, #0x118
  40d144:	movi	v0.2d, #0x0
  40d148:	stp	q0, q0, [x9]
  40d14c:	lsr	x9, x8, #58
  40d150:	stp	xzr, xzr, [x21, #344]
  40d154:	str	xzr, [x21, #336]
  40d158:	stp	q0, q0, [x21, #368]
  40d15c:	cbnz	x9, 40d4e4 <wcrtomb@plt+0xa884>
  40d160:	lsl	x0, x8, #5
  40d164:	bl	415348 <wcrtomb@plt+0x126e8>
  40d168:	str	x0, [x21]
  40d16c:	ldr	x8, [x20, #8]
  40d170:	cbz	x8, 40d180 <wcrtomb@plt+0xa520>
  40d174:	ldr	x1, [x20]
  40d178:	lsl	x2, x8, #5
  40d17c:	bl	402580 <memcpy@plt>
  40d180:	ldr	x8, [x20, #152]
  40d184:	lsr	x9, x8, #59
  40d188:	cbnz	x9, 40d4e4 <wcrtomb@plt+0xa884>
  40d18c:	lsl	x0, x8, #4
  40d190:	bl	415348 <wcrtomb@plt+0x126e8>
  40d194:	str	x0, [x21, #144]
  40d198:	ldr	x8, [x20, #152]
  40d19c:	lsl	x9, x8, #1
  40d1a0:	cmp	x8, #0x0
  40d1a4:	str	x9, [x21, #160]
  40d1a8:	b.le	40d348 <wcrtomb@plt+0xa6e8>
  40d1ac:	ldr	x9, [x20, #144]
  40d1b0:	stur	w23, [x29, #-4]
  40d1b4:	mov	x25, xzr
  40d1b8:	mov	x19, xzr
  40d1bc:	mov	w24, wzr
  40d1c0:	mov	w8, wzr
  40d1c4:	mov	w26, #0x1                   	// #1
  40d1c8:	mov	w16, #0x100                 	// #256
  40d1cc:	mov	w28, #0x301                 	// #769
  40d1d0:	mov	w23, #0x102                 	// #258
  40d1d4:	movi	v0.2d, #0xffffffffffffffff
  40d1d8:	b	40d210 <wcrtomb@plt+0xa5b0>
  40d1dc:	str	x10, [x0, x19, lsl #3]
  40d1e0:	ldr	x10, [x9, x25, lsl #3]
  40d1e4:	add	x19, x19, #0x1
  40d1e8:	cmp	x10, #0x100
  40d1ec:	cset	w11, cc  // cc = lo, ul, last
  40d1f0:	cmp	x10, #0x113
  40d1f4:	cset	w10, gt
  40d1f8:	orr	w10, w11, w10
  40d1fc:	orr	w24, w24, w10
  40d200:	ldr	x10, [x20, #152]
  40d204:	add	x25, x25, #0x1
  40d208:	cmp	x25, x10
  40d20c:	b.ge	40d320 <wcrtomb@plt+0xa6c0>  // b.tcont
  40d210:	ldr	x10, [x9, x25, lsl #3]
  40d214:	sub	x11, x10, #0x10a
  40d218:	cmp	x11, #0x9
  40d21c:	b.hi	40d1dc <wcrtomb@plt+0xa57c>  // b.pmore
  40d220:	lsl	x12, x26, x11
  40d224:	tst	x12, #0xf0
  40d228:	b.eq	40d244 <wcrtomb@plt+0xa5e4>  // b.none
  40d22c:	ldrb	w11, [x20, #1048]
  40d230:	cbz	w11, 40d1dc <wcrtomb@plt+0xa57c>
  40d234:	add	x10, x19, #0x1
  40d238:	str	x16, [x0, x19, lsl #3]
  40d23c:	mov	x19, x10
  40d240:	b	40d200 <wcrtomb@plt+0xa5a0>
  40d244:	lsl	x11, x26, x11
  40d248:	tst	x11, x28
  40d24c:	b.eq	40d1dc <wcrtomb@plt+0xa57c>  // b.none
  40d250:	ldr	x10, [x21, #8]
  40d254:	cmp	x10, #0x0
  40d258:	b.le	40d29c <wcrtomb@plt+0xa63c>
  40d25c:	ldr	x8, [x21]
  40d260:	mov	x27, xzr
  40d264:	add	x11, x8, #0x10
  40d268:	ldp	x12, x13, [x11, #-16]
  40d26c:	ldp	x14, x15, [x11]
  40d270:	and	x12, x13, x12
  40d274:	and	x12, x12, x14
  40d278:	and	x12, x12, x15
  40d27c:	cmn	x12, #0x1
  40d280:	b.eq	40d2f4 <wcrtomb@plt+0xa694>  // b.none
  40d284:	add	x27, x27, #0x1
  40d288:	cmp	x10, x27
  40d28c:	add	x11, x11, #0x20
  40d290:	b.ne	40d268 <wcrtomb@plt+0xa608>  // b.any
  40d294:	mov	x27, x10
  40d298:	b	40d2a4 <wcrtomb@plt+0xa644>
  40d29c:	ldr	x8, [x21]
  40d2a0:	mov	x27, xzr
  40d2a4:	ldr	x9, [x22]
  40d2a8:	cmp	x9, x10
  40d2ac:	b.gt	40d2dc <wcrtomb@plt+0xa67c>
  40d2b0:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40d2b4:	mov	w2, #0x1                   	// #1
  40d2b8:	movk	x3, #0x7fff, lsl #48
  40d2bc:	mov	w4, #0x20                  	// #32
  40d2c0:	mov	x0, x8
  40d2c4:	mov	x1, x22
  40d2c8:	bl	40f91c <wcrtomb@plt+0xccbc>
  40d2cc:	ldr	x10, [x21, #8]
  40d2d0:	movi	v0.2d, #0xffffffffffffffff
  40d2d4:	mov	w16, #0x100                 	// #256
  40d2d8:	mov	x8, x0
  40d2dc:	add	x9, x10, #0x1
  40d2e0:	add	x10, x8, x27, lsl #5
  40d2e4:	stp	x8, x9, [x21]
  40d2e8:	stp	q0, q0, [x10]
  40d2ec:	ldr	x0, [x21, #144]
  40d2f0:	ldr	x9, [x20, #144]
  40d2f4:	add	x8, x27, #0x114
  40d2f8:	add	x10, x0, x19, lsl #3
  40d2fc:	add	x11, x25, #0x1
  40d300:	stp	x8, x23, [x10]
  40d304:	ldr	x8, [x9, x11, lsl #3]
  40d308:	add	x19, x19, #0x2
  40d30c:	sub	x8, x8, #0x101
  40d310:	cmp	x8, #0x3
  40d314:	cinc	x25, x25, cc  // cc = lo, ul, last
  40d318:	mov	w8, #0x1                   	// #1
  40d31c:	b	40d200 <wcrtomb@plt+0xa5a0>
  40d320:	ldur	w23, [x29, #-4]
  40d324:	str	x19, [x21, #152]
  40d328:	tbz	w24, #0, 40d34c <wcrtomb@plt+0xa6ec>
  40d32c:	tbnz	w8, #0, 40d338 <wcrtomb@plt+0xa6d8>
  40d330:	ldrb	w8, [x20, #1048]
  40d334:	cbz	w8, 40d34c <wcrtomb@plt+0xa6ec>
  40d338:	str	x21, [x20, #288]
  40d33c:	cmp	x10, #0x1
  40d340:	b.ge	40d368 <wcrtomb@plt+0xa708>  // b.tcont
  40d344:	b	40d3d8 <wcrtomb@plt+0xa778>
  40d348:	str	xzr, [x21, #152]
  40d34c:	mov	x0, x21
  40d350:	bl	40e5bc <wcrtomb@plt+0xb95c>
  40d354:	mov	x0, x21
  40d358:	bl	402a10 <free@plt>
  40d35c:	ldr	x10, [x20, #152]
  40d360:	cmp	x10, #0x1
  40d364:	b.lt	40d3d8 <wcrtomb@plt+0xa778>  // b.tstop
  40d368:	ldr	x8, [x20, #144]
  40d36c:	mov	x9, x10
  40d370:	b	40d388 <wcrtomb@plt+0xa728>
  40d374:	ldrb	w11, [x20, #1048]
  40d378:	cbnz	w11, 40d3a4 <wcrtomb@plt+0xa744>
  40d37c:	subs	x9, x9, #0x1
  40d380:	add	x8, x8, #0x8
  40d384:	b.eq	40d3d8 <wcrtomb@plt+0xa778>  // b.none
  40d388:	ldr	x11, [x8]
  40d38c:	sub	x12, x11, #0x10e
  40d390:	cmp	x12, #0x4
  40d394:	b.cc	40d374 <wcrtomb@plt+0xa714>  // b.lo, b.ul, b.last
  40d398:	sub	x11, x11, #0x112
  40d39c:	cmp	x11, #0x2
  40d3a0:	b.cs	40d37c <wcrtomb@plt+0xa71c>  // b.hs, b.nlast
  40d3a4:	adrp	x8, 40e000 <wcrtomb@plt+0xb3a0>
  40d3a8:	add	x8, x8, #0x5ac
  40d3ac:	str	x8, [x20, #1040]
  40d3b0:	ldr	x0, [x20, #288]
  40d3b4:	cbnz	x0, 40d4b8 <wcrtomb@plt+0xa858>
  40d3b8:	ldp	x20, x19, [sp, #96]
  40d3bc:	ldp	x22, x21, [sp, #80]
  40d3c0:	ldp	x24, x23, [sp, #64]
  40d3c4:	ldp	x26, x25, [sp, #48]
  40d3c8:	ldp	x28, x27, [sp, #32]
  40d3cc:	ldp	x29, x30, [sp, #16]
  40d3d0:	add	sp, sp, #0x70
  40d3d4:	ret
  40d3d8:	ldrb	w8, [x20, #1050]
  40d3dc:	cbz	w8, 40d4a4 <wcrtomb@plt+0xa844>
  40d3e0:	cmp	x10, #0x1
  40d3e4:	b.lt	40d424 <wcrtomb@plt+0xa7c4>  // b.tstop
  40d3e8:	ldr	x8, [x20, #144]
  40d3ec:	mov	w9, wzr
  40d3f0:	ldr	x11, [x8]
  40d3f4:	cmp	x11, #0x112
  40d3f8:	b.eq	40d410 <wcrtomb@plt+0xa7b0>  // b.none
  40d3fc:	cmp	x11, #0x113
  40d400:	b.eq	40d4a4 <wcrtomb@plt+0xa844>  // b.none
  40d404:	cmp	x11, #0x10a
  40d408:	b.ne	40d414 <wcrtomb@plt+0xa7b4>  // b.any
  40d40c:	b	40d4e8 <wcrtomb@plt+0xa888>
  40d410:	mov	w9, #0x1                   	// #1
  40d414:	subs	x10, x10, #0x1
  40d418:	add	x8, x8, #0x8
  40d41c:	b.ne	40d3f0 <wcrtomb@plt+0xa790>  // b.any
  40d420:	tbnz	w9, #0, 40d43c <wcrtomb@plt+0xa7dc>
  40d424:	ldr	x0, [x20, #288]
  40d428:	cbz	x0, 40d43c <wcrtomb@plt+0xa7dc>
  40d42c:	bl	40e5bc <wcrtomb@plt+0xb95c>
  40d430:	ldr	x0, [x20, #288]
  40d434:	bl	402a10 <free@plt>
  40d438:	str	xzr, [x20, #288]
  40d43c:	ldr	x0, [x20, #280]
  40d440:	bl	402a10 <free@plt>
  40d444:	ldr	x0, [x20, #96]
  40d448:	bl	402a10 <free@plt>
  40d44c:	ldr	x0, [x20, #408]
  40d450:	bl	402a10 <free@plt>
  40d454:	ldr	x8, [x20, #432]
  40d458:	cbz	x8, 40d48c <wcrtomb@plt+0xa82c>
  40d45c:	ldr	x9, [x20, #352]
  40d460:	tbnz	x9, #63, 40d484 <wcrtomb@plt+0xa824>
  40d464:	mov	x19, #0xffffffffffffffff    	// #-1
  40d468:	ldr	x0, [x8, x19, lsl #3]
  40d46c:	bl	402a10 <free@plt>
  40d470:	ldr	x9, [x20, #352]
  40d474:	ldr	x8, [x20, #432]
  40d478:	add	x19, x19, #0x1
  40d47c:	cmp	x19, x9
  40d480:	b.lt	40d468 <wcrtomb@plt+0xa808>  // b.tstop
  40d484:	sub	x0, x8, #0x10
  40d488:	bl	402a10 <free@plt>
  40d48c:	adrp	x8, 40f000 <wcrtomb@plt+0xc3a0>
  40d490:	add	x8, x8, #0x6b8
  40d494:	str	x8, [x20, #1040]
  40d498:	mov	w8, #0x1                   	// #1
  40d49c:	strb	wzr, [x20, #1048]
  40d4a0:	strb	w8, [x20, #192]
  40d4a4:	and	w1, w23, #0x1
  40d4a8:	mov	x0, x20
  40d4ac:	bl	40d4ec <wcrtomb@plt+0xa88c>
  40d4b0:	ldr	x0, [x20, #288]
  40d4b4:	cbz	x0, 40d3b8 <wcrtomb@plt+0xa758>
  40d4b8:	mov	w8, #0x1                   	// #1
  40d4bc:	strb	w8, [x20, #192]
  40d4c0:	and	w1, w23, #0x1
  40d4c4:	ldp	x20, x19, [sp, #96]
  40d4c8:	ldp	x22, x21, [sp, #80]
  40d4cc:	ldp	x24, x23, [sp, #64]
  40d4d0:	ldp	x26, x25, [sp, #48]
  40d4d4:	ldp	x28, x27, [sp, #32]
  40d4d8:	ldp	x29, x30, [sp, #16]
  40d4dc:	add	sp, sp, #0x70
  40d4e0:	b	40d4ec <wcrtomb@plt+0xa88c>
  40d4e4:	bl	41563c <wcrtomb@plt+0x129dc>
  40d4e8:	bl	402920 <abort@plt>
  40d4ec:	sub	sp, sp, #0x130
  40d4f0:	stp	x29, x30, [sp, #208]
  40d4f4:	stp	x28, x27, [sp, #224]
  40d4f8:	stp	x26, x25, [sp, #240]
  40d4fc:	stp	x24, x23, [sp, #256]
  40d500:	stp	x22, x21, [sp, #272]
  40d504:	stp	x20, x19, [sp, #288]
  40d508:	ldr	x8, [x0, #176]
  40d50c:	add	x29, sp, #0xd0
  40d510:	lsr	x9, x8, #58
  40d514:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40d518:	mov	x22, x0
  40d51c:	mov	x19, #0x5555555555555555    	// #6148914691236517205
  40d520:	lsl	x0, x8, #5
  40d524:	mov	w21, w1
  40d528:	movk	x19, #0x555, lsl #48
  40d52c:	bl	415348 <wcrtomb@plt+0x126e8>
  40d530:	ldr	x8, [x22, #168]
  40d534:	str	x0, [sp, #16]
  40d538:	cmp	x8, x19
  40d53c:	b.hi	40e5a8 <wcrtomb@plt+0xb948>  // b.pmore
  40d540:	ldr	x19, [x22, #176]
  40d544:	add	x8, x8, x8, lsl #1
  40d548:	lsl	x0, x8, #3
  40d54c:	and	w21, w21, #0x1
  40d550:	bl	415348 <wcrtomb@plt+0x126e8>
  40d554:	str	x0, [sp, #8]
  40d558:	mov	w1, #0x105                 	// #261
  40d55c:	mov	w2, #0x3                   	// #3
  40d560:	mov	x0, x22
  40d564:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40d568:	ldr	x20, [x22, #176]
  40d56c:	strb	w21, [x22, #328]
  40d570:	lsr	x8, x20, #59
  40d574:	cbnz	x8, 40e5a8 <wcrtomb@plt+0xb948>
  40d578:	lsl	x0, x20, #4
  40d57c:	bl	415348 <wcrtomb@plt+0x126e8>
  40d580:	stp	xzr, x20, [x29, #-72]
  40d584:	stur	x0, [x29, #-80]
  40d588:	ldr	x0, [x22, #152]
  40d58c:	mov	w1, #0x18                  	// #24
  40d590:	bl	415564 <wcrtomb@plt+0x12904>
  40d594:	ldr	x8, [x22, #152]
  40d598:	str	x0, [x22, #320]
  40d59c:	stur	x22, [x29, #-88]
  40d5a0:	cmp	x8, #0x1
  40d5a4:	b.lt	40d90c <wcrtomb@plt+0xacac>  // b.tstop
  40d5a8:	ldp	x28, x8, [sp, #8]
  40d5ac:	mov	w9, #0x1                   	// #1
  40d5b0:	adrp	x14, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d5b4:	mov	x20, xzr
  40d5b8:	add	x13, x8, x19, lsl #4
  40d5bc:	add	x14, x14, #0x6e
  40d5c0:	dup	v0.2d, x9
  40d5c4:	mov	w26, #0x18                  	// #24
  40d5c8:	mov	x15, x8
  40d5cc:	str	q0, [sp, #80]
  40d5d0:	b	40d5ec <wcrtomb@plt+0xa98c>
  40d5d4:	mov	w8, #0x1                   	// #1
  40d5d8:	sturb	w8, [x28, #-24]
  40d5dc:	ldr	x8, [x22, #152]
  40d5e0:	add	x20, x20, #0x1
  40d5e4:	cmp	x20, x8
  40d5e8:	b.ge	40d90c <wcrtomb@plt+0xacac>  // b.tcont
  40d5ec:	ldr	x8, [x22, #144]
  40d5f0:	ldr	x8, [x8, x20, lsl #3]
  40d5f4:	sub	x9, x8, #0x100
  40d5f8:	cmp	x9, #0x6
  40d5fc:	b.hi	40d734 <wcrtomb@plt+0xaad4>  // b.pmore
  40d600:	adr	x10, 40d5d4 <wcrtomb@plt+0xa974>
  40d604:	ldrb	w11, [x14, x9]
  40d608:	add	x10, x10, x11, lsl #2
  40d60c:	br	x10
  40d610:	ldp	x10, x9, [x28, #-16]
  40d614:	sub	x11, x15, x10, lsl #4
  40d618:	cmp	x9, #0x1
  40d61c:	stp	x11, x10, [x29, #-56]
  40d620:	b.lt	40d6ec <wcrtomb@plt+0xaa8c>  // b.tstop
  40d624:	mov	x19, xzr
  40d628:	sub	x24, x13, x9, lsl #4
  40d62c:	str	x15, [sp, #104]
  40d630:	stur	x13, [x29, #-96]
  40d634:	b	40d64c <wcrtomb@plt+0xa9ec>
  40d638:	ldur	x8, [x28, #-8]
  40d63c:	add	x19, x19, #0x1
  40d640:	add	x24, x24, #0x10
  40d644:	cmp	x19, x8
  40d648:	b.ge	40d6d4 <wcrtomb@plt+0xaa74>  // b.tcont
  40d64c:	ldur	x21, [x29, #-88]
  40d650:	ldr	x9, [x24]
  40d654:	sub	x0, x29, #0x38
  40d658:	sub	x3, x29, #0x50
  40d65c:	ldr	x8, [x21, #320]
  40d660:	mov	w2, #0xffffffff            	// #-1
  40d664:	madd	x1, x9, x26, x8
  40d668:	bl	4114b8 <wcrtomb@plt+0xe858>
  40d66c:	ldr	x21, [x21, #320]
  40d670:	ldr	x27, [x24]
  40d674:	madd	x23, x27, x26, x21
  40d678:	mov	x22, x23
  40d67c:	ldr	x8, [x22, #16]!
  40d680:	ldur	x25, [x29, #-72]
  40d684:	cmp	x8, x25
  40d688:	b.ge	40d6b4 <wcrtomb@plt+0xaa54>  // b.tcont
  40d68c:	ldr	x0, [x23]
  40d690:	bl	402a10 <free@plt>
  40d694:	ldr	x8, [x22]
  40d698:	mov	x3, #0xffffffffffffffff    	// #-1
  40d69c:	mov	w4, #0x10                  	// #16
  40d6a0:	mov	x0, xzr
  40d6a4:	sub	x2, x25, x8
  40d6a8:	mov	x1, x22
  40d6ac:	bl	40f91c <wcrtomb@plt+0xccbc>
  40d6b0:	str	x0, [x23]
  40d6b4:	madd	x8, x27, x26, x21
  40d6b8:	str	x25, [x8, #8]
  40d6bc:	cbz	x25, 40d638 <wcrtomb@plt+0xa9d8>
  40d6c0:	ldr	x0, [x23]
  40d6c4:	ldur	x1, [x29, #-80]
  40d6c8:	lsl	x2, x25, #4
  40d6cc:	bl	402580 <memcpy@plt>
  40d6d0:	b	40d638 <wcrtomb@plt+0xa9d8>
  40d6d4:	ldp	x13, x22, [x29, #-96]
  40d6d8:	ldr	x15, [sp, #104]
  40d6dc:	adrp	x14, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d6e0:	add	x14, x14, #0x6e
  40d6e4:	ldr	x8, [x22, #144]
  40d6e8:	ldr	x8, [x8, x20, lsl #3]
  40d6ec:	cmp	x8, #0x103
  40d6f0:	b.ne	40d5d4 <wcrtomb@plt+0xa974>  // b.any
  40d6f4:	b	40d5dc <wcrtomb@plt+0xa97c>
  40d6f8:	ldrb	w8, [x28, #-24]!
  40d6fc:	ldur	q0, [x28, #8]
  40d700:	ldur	q1, [x28, #-16]
  40d704:	ldurb	w9, [x28, #-24]
  40d708:	add	v0.2d, v1.2d, v0.2d
  40d70c:	orr	w8, w9, w8
  40d710:	stur	q0, [x28, #-16]
  40d714:	sturb	w8, [x28, #-24]
  40d718:	b	40d5dc <wcrtomb@plt+0xa97c>
  40d71c:	mov	w8, #0x1                   	// #1
  40d720:	strb	w8, [x28]
  40d724:	add	x8, x28, #0x18
  40d728:	stp	xzr, xzr, [x28, #8]
  40d72c:	mov	x28, x8
  40d730:	b	40d5dc <wcrtomb@plt+0xa97c>
  40d734:	ldr	q0, [sp, #80]
  40d738:	cmp	x8, #0x112
  40d73c:	mov	w8, #0x1ff                 	// #511
  40d740:	str	x20, [x13]
  40d744:	str	x20, [x15]
  40d748:	str	w8, [x13, #8]
  40d74c:	str	w8, [x15, #8]
  40d750:	cset	w8, eq  // eq = none
  40d754:	stur	q0, [x28, #8]
  40d758:	add	x15, x15, #0x10
  40d75c:	strb	w8, [x28], #24
  40d760:	add	x13, x13, #0x10
  40d764:	b	40d5dc <wcrtomb@plt+0xa97c>
  40d768:	ldur	x10, [x28, #-16]
  40d76c:	ldur	x9, [x28, #-32]
  40d770:	sub	x8, x15, x10, lsl #4
  40d774:	cmp	x9, #0x1
  40d778:	stp	x8, x10, [x29, #-56]
  40d77c:	b.lt	40d84c <wcrtomb@plt+0xabec>  // b.tstop
  40d780:	ldur	x8, [x28, #-8]
  40d784:	mov	x19, xzr
  40d788:	str	x15, [sp, #104]
  40d78c:	stur	x13, [x29, #-96]
  40d790:	sub	x8, x13, x8, lsl #4
  40d794:	sub	x24, x8, x9, lsl #4
  40d798:	b	40d7b0 <wcrtomb@plt+0xab50>
  40d79c:	ldur	x9, [x28, #-32]
  40d7a0:	add	x19, x19, #0x1
  40d7a4:	add	x24, x24, #0x10
  40d7a8:	cmp	x19, x9
  40d7ac:	b.ge	40d838 <wcrtomb@plt+0xabd8>  // b.tcont
  40d7b0:	ldur	x21, [x29, #-88]
  40d7b4:	ldr	x9, [x24]
  40d7b8:	sub	x0, x29, #0x38
  40d7bc:	sub	x3, x29, #0x50
  40d7c0:	ldr	x8, [x21, #320]
  40d7c4:	mov	w2, #0xffffffff            	// #-1
  40d7c8:	madd	x1, x9, x26, x8
  40d7cc:	bl	4114b8 <wcrtomb@plt+0xe858>
  40d7d0:	ldr	x21, [x21, #320]
  40d7d4:	ldr	x27, [x24]
  40d7d8:	madd	x23, x27, x26, x21
  40d7dc:	mov	x22, x23
  40d7e0:	ldr	x8, [x22, #16]!
  40d7e4:	ldur	x25, [x29, #-72]
  40d7e8:	cmp	x8, x25
  40d7ec:	b.ge	40d818 <wcrtomb@plt+0xabb8>  // b.tcont
  40d7f0:	ldr	x0, [x23]
  40d7f4:	bl	402a10 <free@plt>
  40d7f8:	ldr	x8, [x22]
  40d7fc:	mov	x3, #0xffffffffffffffff    	// #-1
  40d800:	mov	w4, #0x10                  	// #16
  40d804:	mov	x0, xzr
  40d808:	sub	x2, x25, x8
  40d80c:	mov	x1, x22
  40d810:	bl	40f91c <wcrtomb@plt+0xccbc>
  40d814:	str	x0, [x23]
  40d818:	madd	x8, x27, x26, x21
  40d81c:	str	x25, [x8, #8]
  40d820:	cbz	x25, 40d79c <wcrtomb@plt+0xab3c>
  40d824:	ldr	x0, [x23]
  40d828:	ldur	x1, [x29, #-80]
  40d82c:	lsl	x2, x25, #4
  40d830:	bl	402580 <memcpy@plt>
  40d834:	b	40d79c <wcrtomb@plt+0xab3c>
  40d838:	ldur	x10, [x28, #-16]
  40d83c:	ldp	x13, x22, [x29, #-96]
  40d840:	ldr	x15, [sp, #104]
  40d844:	adrp	x14, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d848:	add	x14, x14, #0x6e
  40d84c:	ldurb	w8, [x28, #-48]
  40d850:	cbz	w8, 40d864 <wcrtomb@plt+0xac04>
  40d854:	ldur	x11, [x28, #-40]
  40d858:	add	x10, x11, x10
  40d85c:	stur	x10, [x28, #-40]
  40d860:	b	40d868 <wcrtomb@plt+0xac08>
  40d864:	sub	x15, x15, x10, lsl #4
  40d868:	ldurb	w10, [x28, #-24]
  40d86c:	ldur	x12, [x28, #-8]
  40d870:	cbz	w10, 40d880 <wcrtomb@plt+0xac20>
  40d874:	add	x10, x12, x9
  40d878:	mov	w9, #0x1                   	// #1
  40d87c:	b	40d8f8 <wcrtomb@plt+0xac98>
  40d880:	cmp	x12, #0x1
  40d884:	neg	x11, x9
  40d888:	b.lt	40d8ec <wcrtomb@plt+0xac8c>  // b.tstop
  40d88c:	sub	x8, x13, x12, lsl #4
  40d890:	sub	x8, x8, x9, lsl #4
  40d894:	ldur	x10, [x28, #-8]
  40d898:	ldr	q0, [x8, x9, lsl #4]
  40d89c:	cmp	x10, #0x2
  40d8a0:	str	q0, [x8]
  40d8a4:	b.lt	40d8d8 <wcrtomb@plt+0xac78>  // b.tstop
  40d8a8:	sub	x9, x11, x12
  40d8ac:	add	x9, x13, x9, lsl #4
  40d8b0:	add	x9, x9, #0x10
  40d8b4:	mov	w11, #0x1                   	// #1
  40d8b8:	ldur	x12, [x28, #-32]
  40d8bc:	ldur	x10, [x28, #-8]
  40d8c0:	add	x12, x11, x12
  40d8c4:	ldr	q0, [x8, x12, lsl #4]
  40d8c8:	add	x11, x11, #0x1
  40d8cc:	cmp	x11, x10
  40d8d0:	str	q0, [x9], #16
  40d8d4:	b.lt	40d8b8 <wcrtomb@plt+0xac58>  // b.tstop
  40d8d8:	ldur	x11, [x28, #-32]
  40d8dc:	ldurb	w9, [x28, #-24]
  40d8e0:	ldurb	w8, [x28, #-48]
  40d8e4:	neg	x11, x11
  40d8e8:	b	40d8f4 <wcrtomb@plt+0xac94>
  40d8ec:	mov	w9, wzr
  40d8f0:	mov	x10, x12
  40d8f4:	add	x13, x13, x11, lsl #4
  40d8f8:	and	w8, w8, w9
  40d8fc:	stur	x10, [x28, #-32]
  40d900:	sturb	w8, [x28, #-48]
  40d904:	sub	x28, x28, #0x18
  40d908:	b	40d5dc <wcrtomb@plt+0xa97c>
  40d90c:	ldr	x20, [x22, #176]
  40d910:	lsr	x8, x20, #59
  40d914:	cbnz	x8, 40e5a8 <wcrtomb@plt+0xb948>
  40d918:	lsl	x0, x20, #4
  40d91c:	mov	x19, x22
  40d920:	bl	415348 <wcrtomb@plt+0x126e8>
  40d924:	stp	xzr, x20, [x29, #-24]
  40d928:	stur	x0, [x29, #-32]
  40d92c:	ldr	x8, [x19, #152]
  40d930:	mov	x22, x0
  40d934:	cmp	x8, #0x1
  40d938:	b.lt	40dc7c <wcrtomb@plt+0xb01c>  // b.tstop
  40d93c:	mov	x27, xzr
  40d940:	mov	w28, #0x18                  	// #24
  40d944:	b	40d954 <wcrtomb@plt+0xacf4>
  40d948:	add	x27, x27, #0x1
  40d94c:	cmp	x27, x8
  40d950:	b.ge	40dc7c <wcrtomb@plt+0xb01c>  // b.tcont
  40d954:	ldr	x11, [x19, #320]
  40d958:	madd	x9, x27, x28, x11
  40d95c:	ldr	x10, [x9, #8]!
  40d960:	cmp	x10, #0x1
  40d964:	b.lt	40d948 <wcrtomb@plt+0xace8>  // b.tstop
  40d968:	ldr	x12, [x19, #144]
  40d96c:	ldr	x12, [x12, x27, lsl #3]
  40d970:	cmp	x12, #0x100
  40d974:	cset	w13, lt  // lt = tstop
  40d978:	cmp	x12, #0x112
  40d97c:	cset	w14, eq  // eq = none
  40d980:	cmp	x12, #0x10a
  40d984:	orr	w13, w13, w14
  40d988:	cset	w14, eq  // eq = none
  40d98c:	cmp	x12, #0x113
  40d990:	orr	w13, w14, w13
  40d994:	cset	w14, eq  // eq = none
  40d998:	cmp	x12, #0x114
  40d99c:	orr	w13, w14, w13
  40d9a0:	cset	w14, lt  // lt = tstop
  40d9a4:	eor	w13, w14, w13
  40d9a8:	cmp	w13, #0x1
  40d9ac:	b.ne	40d948 <wcrtomb@plt+0xace8>  // b.any
  40d9b0:	sub	x12, x12, #0x10c
  40d9b4:	cmp	x12, #0x5
  40d9b8:	b.hi	40d9cc <wcrtomb@plt+0xad6c>  // b.pmore
  40d9bc:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x115a8>
  40d9c0:	add	x13, x13, #0x310
  40d9c4:	ldr	w12, [x13, x12, lsl #2]
  40d9c8:	b	40d9d0 <wcrtomb@plt+0xad70>
  40d9cc:	mov	w12, #0x1ff                 	// #511
  40d9d0:	madd	x11, x27, x28, x11
  40d9d4:	ldr	x13, [x11]
  40d9d8:	mov	x15, xzr
  40d9dc:	mov	x16, x10
  40d9e0:	stur	w12, [x29, #-96]
  40d9e4:	b	40d9f4 <wcrtomb@plt+0xad94>
  40d9e8:	add	x15, x12, #0x1
  40d9ec:	cmp	x15, x16
  40d9f0:	b.ge	40da1c <wcrtomb@plt+0xadbc>  // b.tcont
  40d9f4:	add	x12, x16, x15
  40d9f8:	asr	x12, x12, #1
  40d9fc:	lsl	x14, x12, #4
  40da00:	ldr	x17, [x13, x14]
  40da04:	cmp	x17, x27
  40da08:	b.lt	40d9e8 <wcrtomb@plt+0xad88>  // b.tstop
  40da0c:	b.eq	40da28 <wcrtomb@plt+0xadc8>  // b.none
  40da10:	mov	x16, x12
  40da14:	cmp	x15, x16
  40da18:	b.lt	40d9f4 <wcrtomb@plt+0xad94>  // b.tstop
  40da1c:	cmp	x8, #0x1
  40da20:	b.ge	40da88 <wcrtomb@plt+0xae28>  // b.tcont
  40da24:	b	40d948 <wcrtomb@plt+0xace8>
  40da28:	add	x8, x12, #0x1
  40da2c:	cmp	x8, x10
  40da30:	b.ge	40da74 <wcrtomb@plt+0xae14>  // b.tcont
  40da34:	ldr	q0, [x13, x8, lsl #4]
  40da38:	add	x15, x12, #0x2
  40da3c:	cmp	x15, x10
  40da40:	str	q0, [x13, x12, lsl #4]
  40da44:	b.eq	40da78 <wcrtomb@plt+0xae18>  // b.none
  40da48:	sub	x8, x10, #0x2
  40da4c:	ldr	x10, [x11]
  40da50:	add	x12, x12, #0x1
  40da54:	cmp	x8, x12
  40da58:	add	x10, x10, x14
  40da5c:	ldr	q0, [x10, #32]
  40da60:	add	x14, x14, #0x10
  40da64:	str	q0, [x10, #16]
  40da68:	b.ne	40da4c <wcrtomb@plt+0xadec>  // b.any
  40da6c:	add	x8, x12, #0x1
  40da70:	b	40da78 <wcrtomb@plt+0xae18>
  40da74:	mov	x8, x12
  40da78:	str	x8, [x9]
  40da7c:	ldr	x8, [x19, #152]
  40da80:	cmp	x8, #0x1
  40da84:	b.lt	40d948 <wcrtomb@plt+0xace8>  // b.tstop
  40da88:	mov	x21, xzr
  40da8c:	b	40dab4 <wcrtomb@plt+0xae54>
  40da90:	sub	x0, x29, #0x20
  40da94:	mov	x1, x24
  40da98:	mov	w2, w25
  40da9c:	mov	x3, x23
  40daa0:	bl	4114b8 <wcrtomb@plt+0xe858>
  40daa4:	ldr	x8, [x19, #152]
  40daa8:	add	x21, x21, #0x1
  40daac:	cmp	x21, x8
  40dab0:	b.ge	40d948 <wcrtomb@plt+0xace8>  // b.tcont
  40dab4:	cmp	x27, x21
  40dab8:	b.eq	40daa4 <wcrtomb@plt+0xae44>  // b.none
  40dabc:	ldr	x10, [x19, #320]
  40dac0:	madd	x26, x21, x28, x10
  40dac4:	ldr	x8, [x26, #8]!
  40dac8:	cmp	x8, #0x1
  40dacc:	b.lt	40daa4 <wcrtomb@plt+0xae44>  // b.tstop
  40dad0:	madd	x23, x21, x28, x10
  40dad4:	ldr	x11, [x23]
  40dad8:	mov	x9, xzr
  40dadc:	madd	x24, x27, x28, x10
  40dae0:	mov	x13, x8
  40dae4:	b	40daf4 <wcrtomb@plt+0xae94>
  40dae8:	add	x9, x10, #0x1
  40daec:	cmp	x9, x13
  40daf0:	b.ge	40db1c <wcrtomb@plt+0xaebc>  // b.tcont
  40daf4:	add	x10, x13, x9
  40daf8:	asr	x10, x10, #1
  40dafc:	lsl	x12, x10, #4
  40db00:	ldr	x14, [x11, x12]
  40db04:	cmp	x14, x27
  40db08:	b.lt	40dae8 <wcrtomb@plt+0xae88>  // b.tstop
  40db0c:	b.eq	40db24 <wcrtomb@plt+0xaec4>  // b.none
  40db10:	mov	x13, x10
  40db14:	cmp	x9, x13
  40db18:	b.lt	40daf4 <wcrtomb@plt+0xae94>  // b.tstop
  40db1c:	mov	w9, wzr
  40db20:	b	40db84 <wcrtomb@plt+0xaf24>
  40db24:	add	x9, x11, x10, lsl #4
  40db28:	ldr	w9, [x9, #8]
  40db2c:	add	x13, x10, #0x1
  40db30:	cmp	x13, x8
  40db34:	b.ge	40db78 <wcrtomb@plt+0xaf18>  // b.tcont
  40db38:	ldr	q0, [x11, x13, lsl #4]
  40db3c:	add	x14, x10, #0x2
  40db40:	cmp	x14, x8
  40db44:	str	q0, [x11, x10, lsl #4]
  40db48:	b.eq	40db7c <wcrtomb@plt+0xaf1c>  // b.none
  40db4c:	sub	x8, x8, #0x2
  40db50:	ldr	x11, [x23]
  40db54:	add	x10, x10, #0x1
  40db58:	cmp	x8, x10
  40db5c:	add	x11, x11, x12
  40db60:	ldr	q0, [x11, #32]
  40db64:	add	x12, x12, #0x10
  40db68:	str	q0, [x11, #16]
  40db6c:	b.ne	40db50 <wcrtomb@plt+0xaef0>  // b.any
  40db70:	add	x13, x10, #0x1
  40db74:	b	40db7c <wcrtomb@plt+0xaf1c>
  40db78:	mov	x13, x10
  40db7c:	mov	x8, x13
  40db80:	str	x13, [x26]
  40db84:	ldur	w10, [x29, #-96]
  40db88:	ands	w25, w9, w10
  40db8c:	b.eq	40daa4 <wcrtomb@plt+0xae44>  // b.none
  40db90:	cmp	x20, x8
  40db94:	b.ge	40dc60 <wcrtomb@plt+0xb000>  // b.tcont
  40db98:	mov	x0, x22
  40db9c:	bl	402a10 <free@plt>
  40dba0:	ldr	x8, [x26]
  40dba4:	adds	x9, x20, x20, asr #1
  40dba8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40dbac:	csel	x19, x10, x9, vs
  40dbb0:	tbnz	x19, #63, 40dbc8 <wcrtomb@plt+0xaf68>
  40dbb4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40dbb8:	cmp	x19, x9
  40dbbc:	b.le	40dbe0 <wcrtomb@plt+0xaf80>
  40dbc0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40dbc4:	b	40dbf0 <wcrtomb@plt+0xaf90>
  40dbc8:	cmn	x19, #0x1
  40dbcc:	b.eq	40dbec <wcrtomb@plt+0xaf8c>  // b.none
  40dbd0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40dbd4:	sdiv	x9, x9, x19
  40dbd8:	cmp	x9, #0x10
  40dbdc:	b.lt	40dbc0 <wcrtomb@plt+0xaf60>  // b.tstop
  40dbe0:	lsl	x1, x19, #4
  40dbe4:	cmp	x1, #0x7f
  40dbe8:	b.gt	40dbf8 <wcrtomb@plt+0xaf98>
  40dbec:	mov	w9, #0x80                  	// #128
  40dbf0:	lsr	x19, x9, #4
  40dbf4:	and	x1, x9, #0x7ffffffffffffff0
  40dbf8:	cmp	x19, x8
  40dbfc:	stur	xzr, [x29, #-16]
  40dc00:	b.ge	40dc40 <wcrtomb@plt+0xafe0>  // b.tcont
  40dc04:	sub	x8, x8, x20
  40dc08:	adds	x19, x20, x8
  40dc0c:	b.vs	40e5a8 <wcrtomb@plt+0xb948>
  40dc10:	tbnz	x19, #63, 40dc24 <wcrtomb@plt+0xafc4>
  40dc14:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40dc18:	cmp	x19, x8
  40dc1c:	b.le	40dc3c <wcrtomb@plt+0xafdc>
  40dc20:	b	40e5a8 <wcrtomb@plt+0xb948>
  40dc24:	cmn	x19, #0x1
  40dc28:	b.eq	40dc3c <wcrtomb@plt+0xafdc>  // b.none
  40dc2c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40dc30:	sdiv	x8, x8, x19
  40dc34:	cmp	x8, #0x10
  40dc38:	b.lt	40e5a8 <wcrtomb@plt+0xb948>  // b.tstop
  40dc3c:	lsl	x1, x19, #4
  40dc40:	mov	x0, xzr
  40dc44:	bl	4153c8 <wcrtomb@plt+0x12768>
  40dc48:	stur	x19, [x29, #-16]
  40dc4c:	stur	x0, [x29, #-32]
  40dc50:	ldr	x8, [x26]
  40dc54:	mov	x20, x19
  40dc58:	ldur	x19, [x29, #-88]
  40dc5c:	mov	x22, x0
  40dc60:	stur	x8, [x29, #-24]
  40dc64:	cbz	x8, 40da90 <wcrtomb@plt+0xae30>
  40dc68:	ldr	x1, [x23]
  40dc6c:	lsl	x2, x8, #4
  40dc70:	mov	x0, x22
  40dc74:	bl	402580 <memcpy@plt>
  40dc78:	b	40da90 <wcrtomb@plt+0xae30>
  40dc7c:	mov	x0, x22
  40dc80:	bl	402a10 <free@plt>
  40dc84:	ldr	x0, [x19, #152]
  40dc88:	bl	415540 <wcrtomb@plt+0x128e0>
  40dc8c:	ldr	x8, [x19, #152]
  40dc90:	mov	x22, x0
  40dc94:	cmp	x8, #0x1
  40dc98:	b.lt	40dd30 <wcrtomb@plt+0xb0d0>  // b.tstop
  40dc9c:	ldr	x10, [x19, #320]
  40dca0:	mov	x9, xzr
  40dca4:	mov	w11, #0x18                  	// #24
  40dca8:	mov	w12, #0x8                   	// #8
  40dcac:	b	40dcbc <wcrtomb@plt+0xb05c>
  40dcb0:	add	x9, x9, #0x1
  40dcb4:	cmp	x9, x8
  40dcb8:	b.eq	40dd30 <wcrtomb@plt+0xb0d0>  // b.none
  40dcbc:	madd	x13, x9, x11, x10
  40dcc0:	ldr	x13, [x13, #8]
  40dcc4:	cmp	x13, #0x1
  40dcc8:	b.lt	40dcb0 <wcrtomb@plt+0xb050>  // b.tstop
  40dccc:	mul	x14, x9, x11
  40dcd0:	ldr	x14, [x10, x14]
  40dcd4:	b	40dcf0 <wcrtomb@plt+0xb090>
  40dcd8:	ldrb	w15, [x22, x9]
  40dcdc:	orr	w15, w15, #0x1
  40dce0:	strb	w15, [x22, x9]
  40dce4:	subs	x13, x13, #0x1
  40dce8:	add	x14, x14, #0x10
  40dcec:	b.eq	40dcb0 <wcrtomb@plt+0xb050>  // b.none
  40dcf0:	ldr	x15, [x14]
  40dcf4:	cmp	x15, x9
  40dcf8:	b.eq	40dcd8 <wcrtomb@plt+0xb078>  // b.none
  40dcfc:	ldrb	w16, [x22, x15]
  40dd00:	b.ge	40dd10 <wcrtomb@plt+0xb0b0>  // b.tcont
  40dd04:	orr	w16, w16, #0x2
  40dd08:	strb	w16, [x22, x15]
  40dd0c:	b	40dce4 <wcrtomb@plt+0xb084>
  40dd10:	and	w17, w16, #0x8
  40dd14:	strb	w17, [x22, x15]
  40dd18:	tbnz	w16, #3, 40dd24 <wcrtomb@plt+0xb0c4>
  40dd1c:	strb	w12, [x22, x15]
  40dd20:	b	40dce4 <wcrtomb@plt+0xb084>
  40dd24:	orr	w16, w17, #0x4
  40dd28:	strb	w16, [x22, x15]
  40dd2c:	b	40dce4 <wcrtomb@plt+0xb084>
  40dd30:	ldrb	w8, [x22]
  40dd34:	mov	x21, x19
  40dd38:	orr	w19, w8, #0x10
  40dd3c:	strb	w19, [x22]
  40dd40:	ldr	x20, [x21, #176]
  40dd44:	lsr	x8, x20, #59
  40dd48:	cbnz	x8, 40e5a8 <wcrtomb@plt+0xb948>
  40dd4c:	lsl	x0, x20, #4
  40dd50:	bl	415348 <wcrtomb@plt+0x126e8>
  40dd54:	stp	xzr, x20, [x29, #-24]
  40dd58:	stur	x0, [x29, #-32]
  40dd5c:	ldr	x8, [x21, #152]
  40dd60:	lsr	x9, x8, #61
  40dd64:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40dd68:	lsl	x0, x8, #2
  40dd6c:	bl	415348 <wcrtomb@plt+0x126e8>
  40dd70:	ldr	x8, [x21, #152]
  40dd74:	str	x0, [x21, #336]
  40dd78:	cmp	x8, #0x1
  40dd7c:	b.lt	40e178 <wcrtomb@plt+0xb518>  // b.tstop
  40dd80:	mov	x16, xzr
  40dd84:	mov	w20, #0x18                  	// #24
  40dd88:	tbnz	w19, #4, 40dd98 <wcrtomb@plt+0xb138>
  40dd8c:	b	40e15c <wcrtomb@plt+0xb4fc>
  40dd90:	ldrb	w19, [x22, x16]
  40dd94:	tbz	w19, #4, 40e15c <wcrtomb@plt+0xb4fc>
  40dd98:	ldur	x19, [x29, #-88]
  40dd9c:	ldr	x9, [x19, #336]
  40dda0:	ldr	x18, [x19, #320]
  40dda4:	str	wzr, [x9, x16, lsl #2]
  40dda8:	madd	x17, x16, x20, x18
  40ddac:	ldr	x9, [x17, #8]!
  40ddb0:	cmp	x9, #0x1
  40ddb4:	b.lt	40ddc8 <wcrtomb@plt+0xb168>  // b.tstop
  40ddb8:	mov	x26, xzr
  40ddbc:	mov	x28, xzr
  40ddc0:	madd	x0, x16, x20, x18
  40ddc4:	b	40de10 <wcrtomb@plt+0xb1b0>
  40ddc8:	mov	x26, xzr
  40ddcc:	b	40e154 <wcrtomb@plt+0xb4f4>
  40ddd0:	ldp	x0, x17, [sp, #40]
  40ddd4:	ldur	x19, [x29, #-88]
  40ddd8:	ldp	x16, x18, [sp, #56]
  40dddc:	ldr	w1, [sp, #28]
  40dde0:	ldr	x8, [x0]
  40dde4:	ldr	x2, [sp, #32]
  40dde8:	mov	w20, #0x18                  	// #24
  40ddec:	ldr	q0, [x8, x28, lsl #4]
  40ddf0:	str	q0, [x8, x26, lsl #4]
  40ddf4:	add	x26, x26, #0x1
  40ddf8:	orr	w8, w1, #0x10
  40ddfc:	strb	w8, [x22, x2]
  40de00:	ldr	x8, [x17]
  40de04:	add	x28, x28, #0x1
  40de08:	cmp	x28, x8
  40de0c:	b.ge	40e150 <wcrtomb@plt+0xb4f0>  // b.tcont
  40de10:	ldr	x8, [x0]
  40de14:	add	x10, x8, x28, lsl #4
  40de18:	ldr	w9, [x10, #8]
  40de1c:	cbz	w9, 40de00 <wcrtomb@plt+0xb1a0>
  40de20:	ldr	x2, [x10]
  40de24:	ldr	x10, [x19, #144]
  40de28:	ldr	x11, [x10, x2, lsl #3]
  40de2c:	tbnz	x11, #63, 40def8 <wcrtomb@plt+0xb298>
  40de30:	ldrb	w1, [x22, x2]
  40de34:	cmp	x26, #0x1
  40de38:	b.lt	40ddec <wcrtomb@plt+0xb18c>  // b.tstop
  40de3c:	and	w12, w1, #0x6
  40de40:	cbnz	w12, 40ddec <wcrtomb@plt+0xb18c>
  40de44:	mov	x12, xzr
  40de48:	add	x13, x8, #0x8
  40de4c:	mov	w27, #0x1                   	// #1
  40de50:	b	40de6c <wcrtomb@plt+0xb20c>
  40de54:	add	x12, x12, #0x1
  40de58:	cmp	x12, x26
  40de5c:	cset	w27, lt  // lt = tstop
  40de60:	cmp	x26, x12
  40de64:	add	x13, x13, #0x10
  40de68:	b.eq	40ddec <wcrtomb@plt+0xb18c>  // b.none
  40de6c:	ldr	w14, [x13]
  40de70:	cmp	w14, w9
  40de74:	b.ne	40de54 <wcrtomb@plt+0xb1f4>  // b.any
  40de78:	ldur	x21, [x13, #-8]
  40de7c:	ldrb	w14, [x22, x21]
  40de80:	tst	w14, #0x6
  40de84:	b.ne	40de54 <wcrtomb@plt+0xb1f4>  // b.any
  40de88:	ldr	x15, [x10, x21, lsl #3]
  40de8c:	cmp	x11, x15
  40de90:	b.ne	40de54 <wcrtomb@plt+0xb1f4>  // b.any
  40de94:	eor	w14, w14, w1
  40de98:	tbnz	w14, #0, 40de54 <wcrtomb@plt+0xb1f4>
  40de9c:	stp	x0, x17, [sp, #40]
  40dea0:	str	x16, [sp, #56]
  40dea4:	madd	x16, x2, x20, x18
  40dea8:	ldr	x8, [x16, #8]!
  40deac:	str	w1, [sp, #28]
  40deb0:	str	x18, [sp, #64]
  40deb4:	str	x2, [sp, #32]
  40deb8:	tbnz	w1, #0, 40e004 <wcrtomb@plt+0xb3a4>
  40debc:	madd	x23, x21, x20, x18
  40dec0:	cmp	x8, #0x3
  40dec4:	madd	x12, x2, x20, x18
  40dec8:	b.gt	40e064 <wcrtomb@plt+0xb404>
  40decc:	mov	w9, #0x18                  	// #24
  40ded0:	cmp	x8, #0x1
  40ded4:	b.lt	40e0d8 <wcrtomb@plt+0xb478>  // b.tstop
  40ded8:	ldr	x10, [sp, #64]
  40dedc:	mov	x20, xzr
  40dee0:	madd	x13, x21, x9, x10
  40dee4:	ldr	x21, [x13, #8]!
  40dee8:	str	x16, [sp, #104]
  40deec:	add	x24, x13, #0x8
  40def0:	stp	x13, x12, [sp, #72]
  40def4:	b	40df34 <wcrtomb@plt+0xb2d4>
  40def8:	ldr	x8, [x19, #336]
  40defc:	lsl	x10, x16, #2
  40df00:	ldr	w11, [x8, x10]
  40df04:	orr	w9, w11, w9
  40df08:	str	w9, [x8, x10]
  40df0c:	b	40de00 <wcrtomb@plt+0xb1a0>
  40df10:	add	x8, x0, x25, lsl #4
  40df14:	stp	x19, x14, [x8]
  40df18:	ldr	x8, [x13]
  40df1c:	add	x21, x8, #0x1
  40df20:	str	x21, [x13]
  40df24:	ldr	x8, [x16]
  40df28:	add	x20, x20, #0x1
  40df2c:	cmp	x20, x8
  40df30:	b.ge	40e0d8 <wcrtomb@plt+0xb478>  // b.tcont
  40df34:	ldr	x9, [x12]
  40df38:	cmp	x21, #0x0
  40df3c:	add	x9, x9, x20, lsl #4
  40df40:	ldp	x19, x14, [x9]
  40df44:	b.le	40df98 <wcrtomb@plt+0xb338>
  40df48:	ldr	x0, [x23]
  40df4c:	mov	x25, xzr
  40df50:	mov	x9, x21
  40df54:	b	40df64 <wcrtomb@plt+0xb304>
  40df58:	add	x25, x10, #0x1
  40df5c:	cmp	x25, x9
  40df60:	b.ge	40dfa0 <wcrtomb@plt+0xb340>  // b.tcont
  40df64:	add	x10, x9, x25
  40df68:	asr	x10, x10, #1
  40df6c:	lsl	x11, x10, #4
  40df70:	ldr	x11, [x0, x11]
  40df74:	cmp	x11, x19
  40df78:	b.lt	40df58 <wcrtomb@plt+0xb2f8>  // b.tstop
  40df7c:	mov	x9, x10
  40df80:	b.ne	40df5c <wcrtomb@plt+0xb2fc>  // b.any
  40df84:	add	x9, x0, x10, lsl #4
  40df88:	ldr	w10, [x9, #8]
  40df8c:	orr	w10, w10, w14
  40df90:	str	w10, [x9, #8]
  40df94:	b	40df28 <wcrtomb@plt+0xb2c8>
  40df98:	ldr	x0, [x23]
  40df9c:	mov	x25, xzr
  40dfa0:	ldr	x8, [x24]
  40dfa4:	cmp	x8, x21
  40dfa8:	b.gt	40dfd0 <wcrtomb@plt+0xb370>
  40dfac:	mov	w2, #0x1                   	// #1
  40dfb0:	mov	x3, #0xffffffffffffffff    	// #-1
  40dfb4:	mov	w4, #0x10                  	// #16
  40dfb8:	mov	x1, x24
  40dfbc:	stur	x14, [x29, #-96]
  40dfc0:	bl	40f91c <wcrtomb@plt+0xccbc>
  40dfc4:	ldur	x14, [x29, #-96]
  40dfc8:	ldp	x13, x12, [sp, #72]
  40dfcc:	ldr	x16, [sp, #104]
  40dfd0:	cmp	x21, x25
  40dfd4:	str	x0, [x23]
  40dfd8:	b.le	40df10 <wcrtomb@plt+0xb2b0>
  40dfdc:	lsl	x8, x21, #4
  40dfe0:	add	x9, x0, x8
  40dfe4:	ldur	q0, [x9, #-16]
  40dfe8:	sub	x21, x21, #0x1
  40dfec:	cmp	x21, x25
  40dff0:	sub	x8, x8, #0x10
  40dff4:	str	q0, [x9]
  40dff8:	ldr	x0, [x23]
  40dffc:	b.gt	40dfe0 <wcrtomb@plt+0xb380>
  40e000:	b	40df10 <wcrtomb@plt+0xb2b0>
  40e004:	cmp	x8, #0x1
  40e008:	b.lt	40e0d8 <wcrtomb@plt+0xb478>  // b.tstop
  40e00c:	ldr	x18, [sp, #64]
  40e010:	ldr	x2, [sp, #32]
  40e014:	mov	w20, #0x18                  	// #24
  40e018:	mov	x13, xzr
  40e01c:	mov	x14, x8
  40e020:	madd	x9, x2, x20, x18
  40e024:	ldr	x11, [x9]
  40e028:	b	40e038 <wcrtomb@plt+0xb3d8>
  40e02c:	add	x13, x10, #0x1
  40e030:	cmp	x13, x14
  40e034:	b.ge	40debc <wcrtomb@plt+0xb25c>  // b.tcont
  40e038:	add	x10, x14, x13
  40e03c:	asr	x10, x10, #1
  40e040:	lsl	x12, x10, #4
  40e044:	ldr	x15, [x11, x12]
  40e048:	cmp	x15, x2
  40e04c:	b.lt	40e02c <wcrtomb@plt+0xb3cc>  // b.tstop
  40e050:	b.eq	40e0f4 <wcrtomb@plt+0xb494>  // b.none
  40e054:	mov	x14, x10
  40e058:	cmp	x13, x14
  40e05c:	b.lt	40e038 <wcrtomb@plt+0xb3d8>  // b.tstop
  40e060:	b	40debc <wcrtomb@plt+0xb25c>
  40e064:	sub	x3, x29, #0x20
  40e068:	mov	w2, #0xffffffff            	// #-1
  40e06c:	mov	x0, x12
  40e070:	mov	x1, x23
  40e074:	mov	x19, x18
  40e078:	bl	4114b8 <wcrtomb@plt+0xe858>
  40e07c:	madd	x24, x21, x20, x19
  40e080:	ldr	x8, [x24, #16]!
  40e084:	ldur	x19, [x29, #-24]
  40e088:	cmp	x8, x19
  40e08c:	b.ge	40e0b8 <wcrtomb@plt+0xb458>  // b.tcont
  40e090:	ldr	x0, [x23]
  40e094:	bl	402a10 <free@plt>
  40e098:	ldr	x8, [x24]
  40e09c:	mov	x3, #0xffffffffffffffff    	// #-1
  40e0a0:	mov	w4, #0x10                  	// #16
  40e0a4:	mov	x0, xzr
  40e0a8:	sub	x2, x19, x8
  40e0ac:	mov	x1, x24
  40e0b0:	bl	40f91c <wcrtomb@plt+0xccbc>
  40e0b4:	str	x0, [x23]
  40e0b8:	ldr	x8, [sp, #64]
  40e0bc:	madd	x8, x21, x20, x8
  40e0c0:	str	x19, [x8, #8]
  40e0c4:	cbz	x19, 40e0d8 <wcrtomb@plt+0xb478>
  40e0c8:	ldr	x0, [x23]
  40e0cc:	ldur	x1, [x29, #-32]
  40e0d0:	lsl	x2, x19, #4
  40e0d4:	bl	402580 <memcpy@plt>
  40e0d8:	tbz	w27, #0, 40ddd0 <wcrtomb@plt+0xb170>
  40e0dc:	ldur	x19, [x29, #-88]
  40e0e0:	ldp	x17, x16, [sp, #48]
  40e0e4:	ldr	x18, [sp, #64]
  40e0e8:	ldr	x0, [sp, #40]
  40e0ec:	mov	w20, #0x18                  	// #24
  40e0f0:	b	40de00 <wcrtomb@plt+0xb1a0>
  40e0f4:	add	x13, x10, #0x1
  40e0f8:	cmp	x13, x8
  40e0fc:	b.ge	40e140 <wcrtomb@plt+0xb4e0>  // b.tcont
  40e100:	ldr	q0, [x11, x13, lsl #4]
  40e104:	add	x14, x10, #0x2
  40e108:	cmp	x14, x8
  40e10c:	str	q0, [x11, x10, lsl #4]
  40e110:	b.eq	40e144 <wcrtomb@plt+0xb4e4>  // b.none
  40e114:	sub	x8, x8, #0x2
  40e118:	ldr	x11, [x9]
  40e11c:	add	x10, x10, #0x1
  40e120:	cmp	x8, x10
  40e124:	add	x11, x11, x12
  40e128:	ldr	q0, [x11, #32]
  40e12c:	add	x12, x12, #0x10
  40e130:	str	q0, [x11, #16]
  40e134:	b.ne	40e118 <wcrtomb@plt+0xb4b8>  // b.any
  40e138:	add	x13, x10, #0x1
  40e13c:	b	40e144 <wcrtomb@plt+0xb4e4>
  40e140:	mov	x13, x10
  40e144:	mov	x8, x13
  40e148:	str	x13, [x16]
  40e14c:	b	40debc <wcrtomb@plt+0xb25c>
  40e150:	ldr	x8, [x19, #152]
  40e154:	str	x26, [x17]
  40e158:	b	40e160 <wcrtomb@plt+0xb500>
  40e15c:	ldur	x19, [x29, #-88]
  40e160:	add	x16, x16, #0x1
  40e164:	cmp	x16, x8
  40e168:	b.lt	40dd90 <wcrtomb@plt+0xb130>  // b.tstop
  40e16c:	lsr	x9, x8, #60
  40e170:	cbz	x9, 40e184 <wcrtomb@plt+0xb524>
  40e174:	b	40e5a8 <wcrtomb@plt+0xb948>
  40e178:	ldur	x19, [x29, #-88]
  40e17c:	lsr	x9, x8, #60
  40e180:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40e184:	lsl	x0, x8, #3
  40e188:	bl	415348 <wcrtomb@plt+0x126e8>
  40e18c:	str	xzr, [x0]
  40e190:	ldr	x8, [x19, #152]
  40e194:	mov	x23, x0
  40e198:	cmp	x8, #0x2
  40e19c:	b.lt	40e1b4 <wcrtomb@plt+0xb554>  // b.tstop
  40e1a0:	lsl	x8, x8, #3
  40e1a4:	add	x0, x23, #0x8
  40e1a8:	sub	x2, x8, #0x8
  40e1ac:	mov	w1, #0xff                  	// #255
  40e1b0:	bl	402800 <memset@plt>
  40e1b4:	ldr	x8, [x19, #176]
  40e1b8:	lsr	x9, x8, #60
  40e1bc:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40e1c0:	lsl	x0, x8, #3
  40e1c4:	bl	415348 <wcrtomb@plt+0x126e8>
  40e1c8:	ldr	x8, [x19, #176]
  40e1cc:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40e1d0:	movk	x9, #0x555, lsl #48
  40e1d4:	cmp	x8, x9
  40e1d8:	b.hi	40e5a8 <wcrtomb@plt+0xb948>  // b.pmore
  40e1dc:	add	x8, x8, x8, lsl #1
  40e1e0:	mov	x24, x0
  40e1e4:	lsl	x0, x8, #3
  40e1e8:	bl	415348 <wcrtomb@plt+0x126e8>
  40e1ec:	ldr	x8, [x19, #176]
  40e1f0:	lsr	x9, x8, #61
  40e1f4:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40e1f8:	mov	x25, x0
  40e1fc:	lsl	x0, x8, #2
  40e200:	bl	415348 <wcrtomb@plt+0x126e8>
  40e204:	ldrb	w8, [x19, #1048]
  40e208:	mov	x26, x0
  40e20c:	cbz	w8, 40e224 <wcrtomb@plt+0xb5c4>
  40e210:	ldr	x0, [x19, #176]
  40e214:	tbnz	x0, #63, 40e5a8 <wcrtomb@plt+0xb948>
  40e218:	bl	415348 <wcrtomb@plt+0x126e8>
  40e21c:	mov	x27, x0
  40e220:	b	40e228 <wcrtomb@plt+0xb5c8>
  40e224:	mov	x27, xzr
  40e228:	ldr	x8, [x19, #152]
  40e22c:	cmp	x8, #0x1
  40e230:	b.lt	40e538 <wcrtomb@plt+0xb8d8>  // b.tstop
  40e234:	mov	x8, xzr
  40e238:	mov	x21, xzr
  40e23c:	mov	w20, #0x1                   	// #1
  40e240:	mov	w28, #0x18                  	// #24
  40e244:	cmn	x8, #0x1
  40e248:	b.eq	40e310 <wcrtomb@plt+0xb6b0>  // b.none
  40e24c:	ldr	x9, [x19, #144]
  40e250:	madd	x12, x8, x28, x25
  40e254:	ldr	x9, [x9, x21, lsl #3]
  40e258:	str	x9, [x24, x8, lsl #3]
  40e25c:	ldr	x10, [x19, #320]
  40e260:	madd	x9, x21, x28, x10
  40e264:	ldr	x11, [x9, #16]
  40e268:	ldr	q0, [x9]
  40e26c:	str	x11, [x12, #16]
  40e270:	str	q0, [x12]
  40e274:	ldr	x11, [x19, #336]
  40e278:	ldr	w11, [x11, x21, lsl #2]
  40e27c:	str	w11, [x26, x8, lsl #2]
  40e280:	cbz	x27, 40e290 <wcrtomb@plt+0xb630>
  40e284:	ldr	x11, [x19, #280]
  40e288:	ldrb	w11, [x11, x21]
  40e28c:	strb	w11, [x27, x8]
  40e290:	madd	x8, x21, x28, x10
  40e294:	ldr	x1, [x8, #8]
  40e298:	cmp	x1, #0x0
  40e29c:	b.le	40e2e0 <wcrtomb@plt+0xb680>
  40e2a0:	ldr	x0, [x9]
  40e2a4:	mov	x9, x1
  40e2a8:	mov	x8, x0
  40e2ac:	b	40e2bc <wcrtomb@plt+0xb65c>
  40e2b0:	subs	x9, x9, #0x1
  40e2b4:	str	x10, [x8], #16
  40e2b8:	b.eq	40e2e4 <wcrtomb@plt+0xb684>  // b.none
  40e2bc:	ldr	x11, [x8]
  40e2c0:	ldr	x10, [x23, x11, lsl #3]
  40e2c4:	cmn	x10, #0x1
  40e2c8:	b.ne	40e2b0 <wcrtomb@plt+0xb650>  // b.any
  40e2cc:	add	x12, x20, #0x1
  40e2d0:	str	x20, [x23, x11, lsl #3]
  40e2d4:	mov	x10, x20
  40e2d8:	mov	x20, x12
  40e2dc:	b	40e2b0 <wcrtomb@plt+0xb650>
  40e2e0:	ldr	x0, [x9]
  40e2e4:	adrp	x3, 411000 <wcrtomb@plt+0xe3a0>
  40e2e8:	mov	w2, #0x10                  	// #16
  40e2ec:	add	x3, x3, #0x634
  40e2f0:	bl	402660 <qsort@plt>
  40e2f4:	ldr	x8, [x19, #152]
  40e2f8:	add	x21, x21, #0x1
  40e2fc:	cmp	x21, x8
  40e300:	b.ge	40e33c <wcrtomb@plt+0xb6dc>  // b.tcont
  40e304:	ldr	x8, [x23, x21, lsl #3]
  40e308:	cmn	x8, #0x1
  40e30c:	b.ne	40e24c <wcrtomb@plt+0xb5ec>  // b.any
  40e310:	ldr	x8, [x19, #320]
  40e314:	add	x9, x21, x21, lsl #1
  40e318:	lsl	x19, x9, #3
  40e31c:	ldr	x0, [x8, x19]
  40e320:	bl	402a10 <free@plt>
  40e324:	ldur	x8, [x29, #-88]
  40e328:	ldr	x8, [x8, #320]
  40e32c:	add	x8, x8, x19
  40e330:	ldur	x19, [x29, #-88]
  40e334:	stp	xzr, xzr, [x8]
  40e338:	b	40e2f4 <wcrtomb@plt+0xb694>
  40e33c:	cmp	x20, #0x1
  40e340:	b.ge	40e53c <wcrtomb@plt+0xb8dc>  // b.tcont
  40e344:	mov	x0, x24
  40e348:	str	x20, [x19, #176]
  40e34c:	str	x20, [x19, #152]
  40e350:	bl	402a10 <free@plt>
  40e354:	mov	x0, x25
  40e358:	bl	402a10 <free@plt>
  40e35c:	mov	x0, x26
  40e360:	bl	402a10 <free@plt>
  40e364:	mov	x0, x27
  40e368:	bl	402a10 <free@plt>
  40e36c:	mov	x0, x23
  40e370:	bl	402a10 <free@plt>
  40e374:	ldur	x0, [x29, #-32]
  40e378:	bl	402a10 <free@plt>
  40e37c:	mov	x0, x22
  40e380:	bl	402a10 <free@plt>
  40e384:	mov	w0, #0x10                  	// #16
  40e388:	bl	415348 <wcrtomb@plt+0x126e8>
  40e38c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  40e390:	ldr	q0, [x8, #816]
  40e394:	mov	w8, #0x1                   	// #1
  40e398:	dup	v1.2d, x8
  40e39c:	stur	x0, [x29, #-56]
  40e3a0:	stur	q1, [x29, #-48]
  40e3a4:	str	q0, [x0]
  40e3a8:	ldr	x8, [x19, #152]
  40e3ac:	lsr	x9, x8, #61
  40e3b0:	cbnz	x9, 40e5a8 <wcrtomb@plt+0xb948>
  40e3b4:	mov	x22, x0
  40e3b8:	lsl	x0, x8, #2
  40e3bc:	bl	415348 <wcrtomb@plt+0x126e8>
  40e3c0:	ldr	x8, [x19, #152]
  40e3c4:	str	x0, [x19, #344]
  40e3c8:	cmp	x8, #0x1
  40e3cc:	b.lt	40e49c <wcrtomb@plt+0xb83c>  // b.tstop
  40e3d0:	mov	x8, xzr
  40e3d4:	mov	w9, #0x49                  	// #73
  40e3d8:	mov	w10, #0x18                  	// #24
  40e3dc:	b	40e3f4 <wcrtomb@plt+0xb794>
  40e3e0:	ldr	x11, [x19, #152]
  40e3e4:	ldr	x0, [x19, #344]
  40e3e8:	add	x8, x8, #0x1
  40e3ec:	cmp	x8, x11
  40e3f0:	b.ge	40e49c <wcrtomb@plt+0xb83c>  // b.tcont
  40e3f4:	lsl	x12, x8, #2
  40e3f8:	str	wzr, [x0, x12]
  40e3fc:	ldr	x13, [x19, #336]
  40e400:	ldr	w11, [x13, x12]
  40e404:	eor	w11, w11, w11, lsr #2
  40e408:	tst	w11, w9
  40e40c:	cset	w11, ne  // ne = any
  40e410:	lsl	w11, w11, #2
  40e414:	str	w11, [x0, x12]
  40e418:	ldr	w12, [x13, x12]
  40e41c:	eor	w12, w12, w12, lsr #1
  40e420:	tst	w12, w9
  40e424:	b.eq	40e430 <wcrtomb@plt+0xb7d0>  // b.none
  40e428:	orr	w11, w11, #0x2
  40e42c:	str	w11, [x0, x8, lsl #2]
  40e430:	ldr	x14, [x19, #320]
  40e434:	madd	x12, x8, x10, x14
  40e438:	ldr	x12, [x12, #8]
  40e43c:	cmp	x12, #0x1
  40e440:	b.lt	40e3e0 <wcrtomb@plt+0xb780>  // b.tstop
  40e444:	mul	x15, x8, x10
  40e448:	ldr	x14, [x14, x15]
  40e44c:	mov	x13, xzr
  40e450:	add	x14, x14, #0x8
  40e454:	b	40e468 <wcrtomb@plt+0xb808>
  40e458:	add	x13, x13, #0x1
  40e45c:	cmp	x13, x12
  40e460:	add	x14, x14, #0x10
  40e464:	b.ge	40e3e0 <wcrtomb@plt+0xb780>  // b.tcont
  40e468:	ldr	w15, [x14]
  40e46c:	eor	w16, w15, w15, lsr #2
  40e470:	tst	w16, w9
  40e474:	b.eq	40e484 <wcrtomb@plt+0xb824>  // b.none
  40e478:	orr	w11, w11, #0x4
  40e47c:	str	w11, [x0, x8, lsl #2]
  40e480:	ldr	w15, [x14]
  40e484:	eor	w15, w15, w15, lsr #1
  40e488:	tst	w15, w9
  40e48c:	b.eq	40e458 <wcrtomb@plt+0xb7f8>  // b.none
  40e490:	orr	w11, w11, #0x2
  40e494:	str	w11, [x0, x8, lsl #2]
  40e498:	b	40e458 <wcrtomb@plt+0xb7f8>
  40e49c:	ldr	x8, [x22]
  40e4a0:	ldr	w19, [x0, x8, lsl #2]
  40e4a4:	tbz	w19, #2, 40e4b8 <wcrtomb@plt+0xb858>
  40e4a8:	ldur	x0, [x29, #-88]
  40e4ac:	sub	x1, x29, #0x38
  40e4b0:	mov	w2, #0x4                   	// #4
  40e4b4:	bl	411178 <wcrtomb@plt+0xe518>
  40e4b8:	ldur	x20, [x29, #-88]
  40e4bc:	eor	w2, w19, #0x7
  40e4c0:	sub	x1, x29, #0x38
  40e4c4:	mov	x0, x20
  40e4c8:	bl	411178 <wcrtomb@plt+0xe518>
  40e4cc:	sxtw	x8, w0
  40e4d0:	str	w0, [x20, #364]
  40e4d4:	str	x8, [x20, #400]
  40e4d8:	tbz	w19, #1, 40e4f0 <wcrtomb@plt+0xb890>
  40e4dc:	sub	x1, x29, #0x38
  40e4e0:	mov	w2, #0x2                   	// #2
  40e4e4:	mov	x0, x20
  40e4e8:	bl	411178 <wcrtomb@plt+0xe518>
  40e4ec:	str	w0, [x20, #364]
  40e4f0:	add	w8, w0, #0x1
  40e4f4:	ldr	x0, [sp, #16]
  40e4f8:	str	w8, [x20, #364]
  40e4fc:	str	wzr, [x20, #360]
  40e500:	bl	402a10 <free@plt>
  40e504:	ldr	x0, [sp, #8]
  40e508:	bl	402a10 <free@plt>
  40e50c:	ldur	x0, [x29, #-80]
  40e510:	bl	402a10 <free@plt>
  40e514:	mov	x0, x22
  40e518:	ldp	x20, x19, [sp, #288]
  40e51c:	ldp	x22, x21, [sp, #272]
  40e520:	ldp	x24, x23, [sp, #256]
  40e524:	ldp	x26, x25, [sp, #240]
  40e528:	ldp	x28, x27, [sp, #224]
  40e52c:	ldp	x29, x30, [sp, #208]
  40e530:	add	sp, sp, #0x130
  40e534:	b	402a10 <free@plt>
  40e538:	mov	w20, #0x1                   	// #1
  40e53c:	mov	x8, xzr
  40e540:	mov	x9, xzr
  40e544:	b	40e558 <wcrtomb@plt+0xb8f8>
  40e548:	add	x9, x9, #0x1
  40e54c:	cmp	x20, x9
  40e550:	add	x8, x8, #0x18
  40e554:	b.eq	40e344 <wcrtomb@plt+0xb6e4>  // b.none
  40e558:	lsl	x10, x9, #3
  40e55c:	ldr	x11, [x19, #144]
  40e560:	ldr	x12, [x24, x10]
  40e564:	add	x13, x25, x8
  40e568:	str	x12, [x11, x10]
  40e56c:	ldr	x10, [x19, #320]
  40e570:	ldr	x11, [x13, #16]
  40e574:	ldr	q0, [x13]
  40e578:	lsl	x12, x9, #2
  40e57c:	add	x10, x10, x8
  40e580:	str	x11, [x10, #16]
  40e584:	str	q0, [x10]
  40e588:	ldr	w10, [x26, x12]
  40e58c:	ldr	x11, [x19, #336]
  40e590:	str	w10, [x11, x12]
  40e594:	cbz	x27, 40e548 <wcrtomb@plt+0xb8e8>
  40e598:	ldrb	w10, [x27, x9]
  40e59c:	ldr	x11, [x19, #280]
  40e5a0:	strb	w10, [x11, x9]
  40e5a4:	b	40e548 <wcrtomb@plt+0xb8e8>
  40e5a8:	bl	41563c <wcrtomb@plt+0x129dc>
  40e5ac:	mov	x0, x1
  40e5b0:	mov	w8, #0x1                   	// #1
  40e5b4:	strb	w8, [x5]
  40e5b8:	ret
  40e5bc:	stp	x29, x30, [sp, #-48]!
  40e5c0:	stp	x20, x19, [sp, #32]
  40e5c4:	mov	x19, x0
  40e5c8:	ldr	x0, [x0]
  40e5cc:	str	x21, [sp, #16]
  40e5d0:	mov	x29, sp
  40e5d4:	bl	402a10 <free@plt>
  40e5d8:	ldr	x0, [x19, #144]
  40e5dc:	bl	402a10 <free@plt>
  40e5e0:	ldrb	w8, [x19, #1048]
  40e5e4:	cbz	w8, 40e638 <wcrtomb@plt+0xb9d8>
  40e5e8:	ldr	x0, [x19, #280]
  40e5ec:	bl	402a10 <free@plt>
  40e5f0:	ldr	x0, [x19, #96]
  40e5f4:	bl	402a10 <free@plt>
  40e5f8:	ldr	x0, [x19, #408]
  40e5fc:	bl	402a10 <free@plt>
  40e600:	ldr	x8, [x19, #432]
  40e604:	cbz	x8, 40e638 <wcrtomb@plt+0xb9d8>
  40e608:	ldr	x9, [x19, #352]
  40e60c:	tbnz	x9, #63, 40e630 <wcrtomb@plt+0xb9d0>
  40e610:	mov	x20, #0xffffffffffffffff    	// #-1
  40e614:	ldr	x0, [x8, x20, lsl #3]
  40e618:	bl	402a10 <free@plt>
  40e61c:	ldr	x9, [x19, #352]
  40e620:	ldr	x8, [x19, #432]
  40e624:	add	x20, x20, #0x1
  40e628:	cmp	x20, x9
  40e62c:	b.lt	40e614 <wcrtomb@plt+0xb9b4>  // b.tstop
  40e630:	sub	x0, x8, #0x10
  40e634:	bl	402a10 <free@plt>
  40e638:	ldr	x0, [x19, #336]
  40e63c:	bl	402a10 <free@plt>
  40e640:	ldr	x0, [x19, #344]
  40e644:	bl	402a10 <free@plt>
  40e648:	ldr	x8, [x19, #304]
  40e64c:	cmp	x8, #0x1
  40e650:	b.lt	40e690 <wcrtomb@plt+0xba30>  // b.tstop
  40e654:	mov	x20, xzr
  40e658:	mov	x21, xzr
  40e65c:	ldr	x8, [x19, #296]
  40e660:	add	x8, x8, x20
  40e664:	ldr	x0, [x8, #8]
  40e668:	bl	402a10 <free@plt>
  40e66c:	ldr	x8, [x19, #296]
  40e670:	add	x8, x8, x20
  40e674:	ldr	x0, [x8, #48]
  40e678:	bl	402a10 <free@plt>
  40e67c:	ldr	x8, [x19, #304]
  40e680:	add	x21, x21, #0x1
  40e684:	add	x20, x20, #0x50
  40e688:	cmp	x21, x8
  40e68c:	b.lt	40e65c <wcrtomb@plt+0xb9fc>  // b.tstop
  40e690:	ldr	x0, [x19, #296]
  40e694:	bl	402a10 <free@plt>
  40e698:	ldr	x0, [x19, #320]
  40e69c:	cbz	x0, 40e6f0 <wcrtomb@plt+0xba90>
  40e6a0:	ldr	x8, [x19, #152]
  40e6a4:	cmp	x8, #0x1
  40e6a8:	b.lt	40e6ec <wcrtomb@plt+0xba8c>  // b.tstop
  40e6ac:	ldr	x0, [x0]
  40e6b0:	bl	402a10 <free@plt>
  40e6b4:	ldr	x8, [x19, #152]
  40e6b8:	cmp	x8, #0x2
  40e6bc:	b.lt	40e6e8 <wcrtomb@plt+0xba88>  // b.tstop
  40e6c0:	mov	w20, #0x1                   	// #1
  40e6c4:	mov	w21, #0x18                  	// #24
  40e6c8:	ldr	x8, [x19, #320]
  40e6cc:	ldr	x0, [x8, x21]
  40e6d0:	bl	402a10 <free@plt>
  40e6d4:	ldr	x8, [x19, #152]
  40e6d8:	add	x20, x20, #0x1
  40e6dc:	add	x21, x21, #0x18
  40e6e0:	cmp	x20, x8
  40e6e4:	b.lt	40e6c8 <wcrtomb@plt+0xba68>  // b.tstop
  40e6e8:	ldr	x0, [x19, #320]
  40e6ec:	bl	402a10 <free@plt>
  40e6f0:	ldr	x8, [x19, #368]
  40e6f4:	cbz	x8, 40e754 <wcrtomb@plt+0xbaf4>
  40e6f8:	ldr	x9, [x19, #352]
  40e6fc:	cmp	x9, #0x1
  40e700:	b.lt	40e734 <wcrtomb@plt+0xbad4>  // b.tstop
  40e704:	mov	x20, xzr
  40e708:	lsl	x21, x20, #3
  40e70c:	ldr	x0, [x8, x21]
  40e710:	bl	402a10 <free@plt>
  40e714:	ldr	x8, [x19, #376]
  40e718:	ldr	x0, [x8, x21]
  40e71c:	bl	402a10 <free@plt>
  40e720:	ldr	x9, [x19, #352]
  40e724:	ldr	x8, [x19, #368]
  40e728:	add	x20, x20, #0x1
  40e72c:	cmp	x20, x9
  40e730:	b.lt	40e708 <wcrtomb@plt+0xbaa8>  // b.tstop
  40e734:	sub	x0, x8, #0x10
  40e738:	bl	402a10 <free@plt>
  40e73c:	ldr	x0, [x19, #376]
  40e740:	bl	402a10 <free@plt>
  40e744:	ldr	x0, [x19, #392]
  40e748:	bl	402a10 <free@plt>
  40e74c:	ldr	x0, [x19, #384]
  40e750:	bl	402a10 <free@plt>
  40e754:	ldr	x0, [x19, #288]
  40e758:	cbz	x0, 40e774 <wcrtomb@plt+0xbb14>
  40e75c:	bl	40e5bc <wcrtomb@plt+0xb95c>
  40e760:	ldr	x0, [x19, #288]
  40e764:	ldp	x20, x19, [sp, #32]
  40e768:	ldr	x21, [sp, #16]
  40e76c:	ldp	x29, x30, [sp], #48
  40e770:	b	402a10 <free@plt>
  40e774:	ldp	x20, x19, [sp, #32]
  40e778:	ldr	x21, [sp, #16]
  40e77c:	ldp	x29, x30, [sp], #48
  40e780:	ret
  40e784:	sub	sp, sp, #0xa0
  40e788:	stp	x29, x30, [sp, #64]
  40e78c:	stp	x28, x27, [sp, #80]
  40e790:	stp	x26, x25, [sp, #96]
  40e794:	stp	x24, x23, [sp, #112]
  40e798:	stp	x22, x21, [sp, #128]
  40e79c:	stp	x20, x19, [sp, #144]
  40e7a0:	ldr	x20, [x0, #152]
  40e7a4:	add	x29, sp, #0x40
  40e7a8:	cmp	x20, #0x3
  40e7ac:	b.lt	40f1c4 <wcrtomb@plt+0xc564>  // b.tstop
  40e7b0:	str	xzr, [sp, #24]
  40e7b4:	ldrb	w9, [x0, #1048]
  40e7b8:	ldrb	w8, [x0, #457]
  40e7bc:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40e7c0:	mov	x24, x0
  40e7c4:	eor	w9, w9, #0x1
  40e7c8:	mov	x25, xzr
  40e7cc:	mov	w12, #0x1                   	// #1
  40e7d0:	mov	w22, #0x2                   	// #2
  40e7d4:	add	x28, x28, #0x7c3
  40e7d8:	and	w8, w9, w8
  40e7dc:	stur	w8, [x29, #-20]
  40e7e0:	str	x0, [sp, #32]
  40e7e4:	b	40e84c <wcrtomb@plt+0xbbec>
  40e7e8:	mov	w0, #0x30                  	// #48
  40e7ec:	mov	x19, x12
  40e7f0:	bl	415348 <wcrtomb@plt+0x126e8>
  40e7f4:	mov	x22, x0
  40e7f8:	mov	w0, #0x8                   	// #8
  40e7fc:	bl	415540 <wcrtomb@plt+0x128e0>
  40e800:	str	x0, [x22]
  40e804:	mov	w0, #0x2                   	// #2
  40e808:	bl	415540 <wcrtomb@plt+0x128e0>
  40e80c:	str	x0, [x22, #8]
  40e810:	mov	w0, #0x2                   	// #2
  40e814:	bl	415540 <wcrtomb@plt+0x128e0>
  40e818:	str	x0, [x22, #16]
  40e81c:	mov	w0, #0x2                   	// #2
  40e820:	bl	415540 <wcrtomb@plt+0x128e0>
  40e824:	mov	x12, x19
  40e828:	str	x0, [x22, #24]
  40e82c:	strh	wzr, [x22, #32]
  40e830:	str	x25, [x22, #40]
  40e834:	mov	x25, x22
  40e838:	ldr	x20, [x24, #152]
  40e83c:	add	x22, x12, #0x2
  40e840:	add	x12, x12, #0x1
  40e844:	cmp	x22, x20
  40e848:	b.ge	40f2c0 <wcrtomb@plt+0xc660>  // b.tcont
  40e84c:	ldr	x23, [x24, #144]
  40e850:	add	x21, x23, x12, lsl #3
  40e854:	ldr	x19, [x21]
  40e858:	sub	x8, x19, #0x100
  40e85c:	cmp	x8, #0x13
  40e860:	b.hi	40e8c8 <wcrtomb@plt+0xbc68>  // b.pmore
  40e864:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  40e868:	add	x11, x11, #0x76
  40e86c:	adr	x9, 40e7e8 <wcrtomb@plt+0xbb88>
  40e870:	ldrh	w10, [x11, x8, lsl #1]
  40e874:	add	x9, x9, x10, lsl #2
  40e878:	br	x9
  40e87c:	ldr	x8, [x25]
  40e880:	ldr	x0, [x8]
  40e884:	cbz	x0, 40e8a4 <wcrtomb@plt+0xbc44>
  40e888:	mov	x20, x12
  40e88c:	add	x19, x8, #0x8
  40e890:	bl	402a10 <free@plt>
  40e894:	ldr	x0, [x19], #8
  40e898:	cbnz	x0, 40e890 <wcrtomb@plt+0xbc30>
  40e89c:	ldr	x8, [x25]
  40e8a0:	mov	x12, x20
  40e8a4:	str	xzr, [x8]
  40e8a8:	ldr	x8, [x25, #24]
  40e8ac:	strb	wzr, [x8]
  40e8b0:	ldr	x8, [x25, #16]
  40e8b4:	strb	wzr, [x8]
  40e8b8:	ldr	x8, [x25, #8]
  40e8bc:	strb	wzr, [x8]
  40e8c0:	strh	wzr, [x25, #32]
  40e8c4:	b	40e838 <wcrtomb@plt+0xbbd8>
  40e8c8:	cmn	x19, #0x1
  40e8cc:	b.eq	40f24c <wcrtomb@plt+0xc5ec>  // b.none
  40e8d0:	cbz	x19, 40f294 <wcrtomb@plt+0xc634>
  40e8d4:	subs	x24, x19, #0x114
  40e8d8:	b.lt	40ef38 <wcrtomb@plt+0xc2d8>  // b.tstop
  40e8dc:	ldr	x8, [sp, #32]
  40e8e0:	str	x25, [sp, #16]
  40e8e4:	mov	x19, xzr
  40e8e8:	mov	w26, #0x1                   	// #1
  40e8ec:	ldr	x25, [x8]
  40e8f0:	ubfx	x8, x19, #6, #26
  40e8f4:	add	x9, x25, x24, lsl #5
  40e8f8:	ldr	x8, [x9, w8, uxtw #3]
  40e8fc:	lsr	x8, x8, x19
  40e900:	tbnz	w8, #0, 40ef2c <wcrtomb@plt+0xc2cc>
  40e904:	add	x19, x19, #0x1
  40e908:	cmp	w19, #0x100
  40e90c:	add	x26, x26, #0x1
  40e910:	b.ne	40e8f0 <wcrtomb@plt+0xbc90>  // b.any
  40e914:	mov	w0, #0x30                  	// #48
  40e918:	mov	x19, x12
  40e91c:	bl	415348 <wcrtomb@plt+0x126e8>
  40e920:	mov	x25, x0
  40e924:	mov	w0, #0x8                   	// #8
  40e928:	bl	415540 <wcrtomb@plt+0x128e0>
  40e92c:	str	x0, [x25]
  40e930:	mov	w0, #0x2                   	// #2
  40e934:	bl	415540 <wcrtomb@plt+0x128e0>
  40e938:	str	x0, [x25, #8]
  40e93c:	mov	w0, #0x2                   	// #2
  40e940:	bl	415540 <wcrtomb@plt+0x128e0>
  40e944:	str	x0, [x25, #16]
  40e948:	mov	w0, #0x2                   	// #2
  40e94c:	bl	415540 <wcrtomb@plt+0x128e0>
  40e950:	ldr	x8, [sp, #16]
  40e954:	ldr	x24, [sp, #32]
  40e958:	mov	x12, x19
  40e95c:	str	x0, [x25, #24]
  40e960:	strh	wzr, [x25, #32]
  40e964:	str	x8, [x25, #40]
  40e968:	b	40e838 <wcrtomb@plt+0xbbd8>
  40e96c:	ldr	x8, [x25]
  40e970:	ldr	x21, [x25, #40]
  40e974:	mov	x20, x12
  40e978:	ldr	x23, [x8]
  40e97c:	ldr	x22, [x21]
  40e980:	cbz	x23, 40e9ac <wcrtomb@plt+0xbd4c>
  40e984:	add	x19, x8, #0x8
  40e988:	mov	x0, x23
  40e98c:	bl	4025c0 <strlen@plt>
  40e990:	mov	x2, x0
  40e994:	mov	x0, x22
  40e998:	mov	x1, x23
  40e99c:	bl	40f3c0 <wcrtomb@plt+0xc760>
  40e9a0:	ldr	x23, [x19], #8
  40e9a4:	mov	x22, x0
  40e9a8:	cbnz	x23, 40e988 <wcrtomb@plt+0xbd28>
  40e9ac:	ldr	x0, [x21, #16]
  40e9b0:	str	x22, [x21]
  40e9b4:	ldrb	w8, [x0]
  40e9b8:	cbz	w8, 40ea2c <wcrtomb@plt+0xbdcc>
  40e9bc:	ldr	x22, [x25, #8]
  40e9c0:	ldrb	w8, [x22]
  40e9c4:	cbz	w8, 40ea2c <wcrtomb@plt+0xbdcc>
  40e9c8:	bl	4025c0 <strlen@plt>
  40e9cc:	mov	x23, x0
  40e9d0:	mov	x0, x22
  40e9d4:	bl	4025c0 <strlen@plt>
  40e9d8:	add	x24, x0, x23
  40e9dc:	mov	x22, x0
  40e9e0:	mov	x0, x24
  40e9e4:	bl	415348 <wcrtomb@plt+0x126e8>
  40e9e8:	ldr	x1, [x21, #16]
  40e9ec:	mov	x2, x23
  40e9f0:	mov	x19, x25
  40e9f4:	mov	x25, x0
  40e9f8:	bl	402580 <memcpy@plt>
  40e9fc:	ldr	x1, [x19, #8]
  40ea00:	add	x0, x25, x23
  40ea04:	mov	x2, x22
  40ea08:	bl	402580 <memcpy@plt>
  40ea0c:	ldr	x0, [x21]
  40ea10:	mov	x1, x25
  40ea14:	mov	x2, x24
  40ea18:	bl	40f3c0 <wcrtomb@plt+0xc760>
  40ea1c:	str	x0, [x21]
  40ea20:	mov	x0, x25
  40ea24:	mov	x25, x19
  40ea28:	bl	402a10 <free@plt>
  40ea2c:	ldr	x8, [x21, #24]
  40ea30:	ldrb	w8, [x8]
  40ea34:	cbz	w8, 40ea8c <wcrtomb@plt+0xbe2c>
  40ea38:	ldr	x23, [x25, #8]
  40ea3c:	ldr	x22, [x21, #8]
  40ea40:	mov	x0, x23
  40ea44:	bl	4025c0 <strlen@plt>
  40ea48:	cbz	x0, 40ea88 <wcrtomb@plt+0xbe28>
  40ea4c:	mov	x24, x0
  40ea50:	mov	x0, x22
  40ea54:	bl	4025c0 <strlen@plt>
  40ea58:	add	x24, x24, #0x1
  40ea5c:	mov	x19, x25
  40ea60:	mov	x25, x0
  40ea64:	add	x1, x0, x24
  40ea68:	mov	x0, x22
  40ea6c:	bl	4153c8 <wcrtomb@plt+0x12768>
  40ea70:	mov	x22, x0
  40ea74:	add	x0, x0, x25
  40ea78:	mov	x1, x23
  40ea7c:	mov	x2, x24
  40ea80:	mov	x25, x19
  40ea84:	bl	402580 <memcpy@plt>
  40ea88:	str	x22, [x21, #8]
  40ea8c:	ldr	x8, [x25, #24]
  40ea90:	ldrb	w8, [x8]
  40ea94:	cbnz	w8, 40eaa0 <wcrtomb@plt+0xbe40>
  40ea98:	ldr	x8, [x21, #16]
  40ea9c:	strb	wzr, [x8]
  40eaa0:	ldr	x22, [x25, #16]
  40eaa4:	ldr	x23, [x21, #16]
  40eaa8:	mov	x0, x22
  40eaac:	bl	4025c0 <strlen@plt>
  40eab0:	cbz	x0, 40eaf0 <wcrtomb@plt+0xbe90>
  40eab4:	mov	x24, x0
  40eab8:	mov	x0, x23
  40eabc:	bl	4025c0 <strlen@plt>
  40eac0:	add	x24, x24, #0x1
  40eac4:	mov	x19, x25
  40eac8:	mov	x25, x0
  40eacc:	add	x1, x0, x24
  40ead0:	mov	x0, x23
  40ead4:	bl	4153c8 <wcrtomb@plt+0x12768>
  40ead8:	mov	x23, x0
  40eadc:	add	x0, x0, x25
  40eae0:	mov	x1, x22
  40eae4:	mov	x2, x24
  40eae8:	mov	x25, x19
  40eaec:	bl	402580 <memcpy@plt>
  40eaf0:	ldr	x22, [x21, #24]
  40eaf4:	str	x23, [x21, #16]
  40eaf8:	ldr	x24, [sp, #32]
  40eafc:	ldrb	w8, [x22]
  40eb00:	cbnz	w8, 40eb0c <wcrtomb@plt+0xbeac>
  40eb04:	ldrb	w8, [x21, #32]
  40eb08:	cbz	w8, 40f198 <wcrtomb@plt+0xc538>
  40eb0c:	ldr	x23, [x25, #24]
  40eb10:	ldrb	w8, [x23]
  40eb14:	cbnz	w8, 40eb20 <wcrtomb@plt+0xbec0>
  40eb18:	ldrb	w8, [x25, #33]
  40eb1c:	cbz	w8, 40f198 <wcrtomb@plt+0xc538>
  40eb20:	mov	x0, x23
  40eb24:	bl	4025c0 <strlen@plt>
  40eb28:	cbz	x0, 40eb68 <wcrtomb@plt+0xbf08>
  40eb2c:	mov	x24, x0
  40eb30:	mov	x0, x22
  40eb34:	bl	4025c0 <strlen@plt>
  40eb38:	add	x24, x24, #0x1
  40eb3c:	mov	x19, x25
  40eb40:	mov	x25, x0
  40eb44:	add	x1, x0, x24
  40eb48:	mov	x0, x22
  40eb4c:	bl	4153c8 <wcrtomb@plt+0x12768>
  40eb50:	mov	x22, x0
  40eb54:	add	x0, x0, x25
  40eb58:	mov	x1, x23
  40eb5c:	mov	x2, x24
  40eb60:	mov	x25, x19
  40eb64:	bl	402580 <memcpy@plt>
  40eb68:	str	x22, [x21, #24]
  40eb6c:	ldr	x24, [sp, #32]
  40eb70:	ldrb	w8, [x25, #33]
  40eb74:	b	40f1a4 <wcrtomb@plt+0xc544>
  40eb78:	ldr	x8, [x25, #24]
  40eb7c:	strb	wzr, [x8]
  40eb80:	b	40e838 <wcrtomb@plt+0xbbd8>
  40eb84:	mov	w0, #0x30                  	// #48
  40eb88:	mov	x19, x12
  40eb8c:	bl	415348 <wcrtomb@plt+0x126e8>
  40eb90:	mov	x22, x0
  40eb94:	mov	w0, #0x8                   	// #8
  40eb98:	bl	415540 <wcrtomb@plt+0x128e0>
  40eb9c:	str	x0, [x22]
  40eba0:	mov	w0, #0x2                   	// #2
  40eba4:	bl	415540 <wcrtomb@plt+0x128e0>
  40eba8:	str	x0, [x22, #8]
  40ebac:	mov	w0, #0x2                   	// #2
  40ebb0:	bl	415540 <wcrtomb@plt+0x128e0>
  40ebb4:	str	x0, [x22, #16]
  40ebb8:	mov	w0, #0x2                   	// #2
  40ebbc:	bl	415540 <wcrtomb@plt+0x128e0>
  40ebc0:	mov	w8, #0x100                 	// #256
  40ebc4:	strh	w8, [x22, #32]
  40ebc8:	mov	w8, #0x1                   	// #1
  40ebcc:	mov	x12, x19
  40ebd0:	str	x0, [x22, #24]
  40ebd4:	str	x25, [x22, #40]
  40ebd8:	str	w8, [sp, #24]
  40ebdc:	b	40e834 <wcrtomb@plt+0xbbd4>
  40ebe0:	ldr	x19, [x25, #40]
  40ebe4:	ldr	x1, [x25, #24]
  40ebe8:	str	x12, [sp, #8]
  40ebec:	ldr	x22, [x19, #24]
  40ebf0:	mov	x0, x22
  40ebf4:	bl	4029d0 <strcmp@plt>
  40ebf8:	cbz	w0, 40ec64 <wcrtomb@plt+0xc004>
  40ebfc:	strb	wzr, [x22]
  40ec00:	strh	wzr, [x19, #32]
  40ec04:	b	40ec84 <wcrtomb@plt+0xc024>
  40ec08:	mov	w0, #0x30                  	// #48
  40ec0c:	mov	x19, x12
  40ec10:	bl	415348 <wcrtomb@plt+0x126e8>
  40ec14:	mov	x22, x0
  40ec18:	mov	w0, #0x8                   	// #8
  40ec1c:	bl	415540 <wcrtomb@plt+0x128e0>
  40ec20:	str	x0, [x22]
  40ec24:	mov	w0, #0x2                   	// #2
  40ec28:	bl	415540 <wcrtomb@plt+0x128e0>
  40ec2c:	str	x0, [x22, #8]
  40ec30:	mov	w0, #0x2                   	// #2
  40ec34:	bl	415540 <wcrtomb@plt+0x128e0>
  40ec38:	str	x0, [x22, #16]
  40ec3c:	mov	w0, #0x2                   	// #2
  40ec40:	bl	415540 <wcrtomb@plt+0x128e0>
  40ec44:	mov	w9, #0x1                   	// #1
  40ec48:	mov	w8, #0x1                   	// #1
  40ec4c:	mov	x12, x19
  40ec50:	str	x0, [x22, #24]
  40ec54:	str	x25, [x22, #40]
  40ec58:	str	w8, [sp, #28]
  40ec5c:	strh	w9, [x22, #32]
  40ec60:	b	40e834 <wcrtomb@plt+0xbbd4>
  40ec64:	ldrb	w8, [x25, #32]
  40ec68:	ldrb	w9, [x19, #32]
  40ec6c:	and	w8, w9, w8
  40ec70:	strb	w8, [x19, #32]
  40ec74:	ldrb	w8, [x25, #33]
  40ec78:	ldrb	w9, [x19, #33]
  40ec7c:	and	w8, w9, w8
  40ec80:	strb	w8, [x19, #33]
  40ec84:	ldr	x8, [x19, #8]
  40ec88:	ldrb	w10, [x8]
  40ec8c:	cbz	w10, 40ecc4 <wcrtomb@plt+0xc064>
  40ec90:	ldr	x9, [x25, #8]
  40ec94:	ldrb	w11, [x9]
  40ec98:	cmp	w10, w11
  40ec9c:	b.ne	40ecc4 <wcrtomb@plt+0xc064>  // b.any
  40eca0:	add	x10, x8, #0x1
  40eca4:	add	x9, x9, #0x1
  40eca8:	mov	x8, x10
  40ecac:	ldrb	w10, [x10]
  40ecb0:	cbz	w10, 40ecc4 <wcrtomb@plt+0xc064>
  40ecb4:	ldrb	w11, [x9], #1
  40ecb8:	cmp	w10, w11
  40ecbc:	add	x10, x8, #0x1
  40ecc0:	b.eq	40eca8 <wcrtomb@plt+0xc048>  // b.none
  40ecc4:	strb	wzr, [x8]
  40ecc8:	ldr	x22, [x19, #16]
  40eccc:	mov	x0, x22
  40ecd0:	bl	4025c0 <strlen@plt>
  40ecd4:	ldr	x24, [x25, #16]
  40ecd8:	mov	x23, x0
  40ecdc:	mov	x0, x24
  40ece0:	bl	4025c0 <strlen@plt>
  40ece4:	cmp	x23, x0
  40ece8:	csel	x9, x0, x23, gt
  40ecec:	cmp	x9, #0x1
  40ecf0:	b.lt	40ed58 <wcrtomb@plt+0xc0f8>  // b.tstop
  40ecf4:	add	x10, x24, x0
  40ecf8:	mov	x8, xzr
  40ecfc:	sub	x10, x10, #0x1
  40ed00:	sub	x11, x23, #0x1
  40ed04:	ldrb	w12, [x22, x11]
  40ed08:	ldrb	w13, [x10]
  40ed0c:	cmp	w12, w13
  40ed10:	b.ne	40ed2c <wcrtomb@plt+0xc0cc>  // b.any
  40ed14:	add	x8, x8, #0x1
  40ed18:	sub	x10, x10, #0x1
  40ed1c:	cmp	x8, x9
  40ed20:	sub	x11, x11, #0x1
  40ed24:	b.lt	40ed04 <wcrtomb@plt+0xc0a4>  // b.tstop
  40ed28:	mov	x8, x9
  40ed2c:	cbz	x8, 40ed5c <wcrtomb@plt+0xc0fc>
  40ed30:	mov	x9, xzr
  40ed34:	sub	x10, x23, x8
  40ed38:	add	x11, x22, x10
  40ed3c:	ldrb	w11, [x11, x9]
  40ed40:	strb	w11, [x22, x9]
  40ed44:	ldr	x22, [x19, #16]
  40ed48:	add	x9, x9, #0x1
  40ed4c:	cmp	x8, x9
  40ed50:	b.ne	40ed38 <wcrtomb@plt+0xc0d8>  // b.any
  40ed54:	b	40ed5c <wcrtomb@plt+0xc0fc>
  40ed58:	mov	x8, xzr
  40ed5c:	strb	wzr, [x22, x8]
  40ed60:	str	x19, [sp]
  40ed64:	ldr	x19, [x19]
  40ed68:	ldr	x21, [x25]
  40ed6c:	mov	w0, #0x8                   	// #8
  40ed70:	str	x25, [sp, #16]
  40ed74:	bl	415540 <wcrtomb@plt+0x128e0>
  40ed78:	ldr	x24, [x19]
  40ed7c:	mov	x22, x0
  40ed80:	cbz	x24, 40eec8 <wcrtomb@plt+0xc268>
  40ed84:	mov	x8, xzr
  40ed88:	mov	x28, x19
  40ed8c:	stur	x19, [x29, #-16]
  40ed90:	b	40eda8 <wcrtomb@plt+0xc148>
  40ed94:	ldp	x19, x8, [x29, #-16]
  40ed98:	add	x8, x8, #0x1
  40ed9c:	add	x28, x19, x8, lsl #3
  40eda0:	ldr	x24, [x28]
  40eda4:	cbz	x24, 40eec8 <wcrtomb@plt+0xc268>
  40eda8:	ldr	x25, [x21]
  40edac:	cbz	x25, 40ed98 <wcrtomb@plt+0xc138>
  40edb0:	mov	x20, xzr
  40edb4:	stur	x8, [x29, #-8]
  40edb8:	mov	w0, #0x8                   	// #8
  40edbc:	bl	415540 <wcrtomb@plt+0x128e0>
  40edc0:	ldrb	w8, [x24]
  40edc4:	mov	x23, x0
  40edc8:	cbnz	w8, 40ee3c <wcrtomb@plt+0xc1dc>
  40edcc:	ldr	x24, [x23]
  40edd0:	cbz	x24, 40ee18 <wcrtomb@plt+0xc1b8>
  40edd4:	mov	w19, #0x8                   	// #8
  40edd8:	mov	x0, x24
  40eddc:	bl	4025c0 <strlen@plt>
  40ede0:	mov	x2, x0
  40ede4:	mov	x0, x22
  40ede8:	mov	x1, x24
  40edec:	bl	40f3c0 <wcrtomb@plt+0xc760>
  40edf0:	ldr	x24, [x23, x19]
  40edf4:	mov	x22, x0
  40edf8:	add	x19, x19, #0x8
  40edfc:	cbnz	x24, 40edd8 <wcrtomb@plt+0xc178>
  40ee00:	ldr	x0, [x23]
  40ee04:	cbz	x0, 40ee18 <wcrtomb@plt+0xc1b8>
  40ee08:	add	x19, x23, #0x8
  40ee0c:	bl	402a10 <free@plt>
  40ee10:	ldr	x0, [x19], #8
  40ee14:	cbnz	x0, 40ee0c <wcrtomb@plt+0xc1ac>
  40ee18:	mov	x0, x23
  40ee1c:	bl	402a10 <free@plt>
  40ee20:	add	x20, x20, #0x1
  40ee24:	ldr	x25, [x21, x20, lsl #3]
  40ee28:	cbz	x25, 40ed94 <wcrtomb@plt+0xc134>
  40ee2c:	ldr	x24, [x28]
  40ee30:	b	40edb8 <wcrtomb@plt+0xc158>
  40ee34:	ldrb	w8, [x24, #1]!
  40ee38:	cbz	w8, 40edcc <wcrtomb@plt+0xc16c>
  40ee3c:	and	w26, w8, #0xff
  40ee40:	mov	x0, x25
  40ee44:	mov	w1, w26
  40ee48:	bl	402a50 <strchr@plt>
  40ee4c:	cbz	x0, 40ee34 <wcrtomb@plt+0xc1d4>
  40ee50:	ldrb	w19, [x24, #1]
  40ee54:	mov	x27, xzr
  40ee58:	b	40ee78 <wcrtomb@plt+0xc218>
  40ee5c:	mov	w8, #0x1                   	// #1
  40ee60:	cmp	x8, x27
  40ee64:	add	x0, x0, #0x1
  40ee68:	mov	w1, w26
  40ee6c:	csel	x27, x8, x27, gt
  40ee70:	bl	402a50 <strchr@plt>
  40ee74:	cbz	x0, 40eeac <wcrtomb@plt+0xc24c>
  40ee78:	cbz	w19, 40ee5c <wcrtomb@plt+0xc1fc>
  40ee7c:	mov	x8, xzr
  40ee80:	add	x9, x0, #0x1
  40ee84:	mov	w10, w19
  40ee88:	ldrb	w11, [x9, x8]
  40ee8c:	cmp	w11, w10, uxtb
  40ee90:	b.ne	40eea4 <wcrtomb@plt+0xc244>  // b.any
  40ee94:	add	x10, x24, x8
  40ee98:	ldrb	w10, [x10, #2]
  40ee9c:	add	x8, x8, #0x1
  40eea0:	cbnz	w10, 40ee88 <wcrtomb@plt+0xc228>
  40eea4:	add	x8, x8, #0x1
  40eea8:	b	40ee60 <wcrtomb@plt+0xc200>
  40eeac:	cbz	x27, 40ee34 <wcrtomb@plt+0xc1d4>
  40eeb0:	mov	x0, x23
  40eeb4:	mov	x1, x24
  40eeb8:	mov	x2, x27
  40eebc:	bl	40f3c0 <wcrtomb@plt+0xc760>
  40eec0:	mov	x23, x0
  40eec4:	b	40ee34 <wcrtomb@plt+0xc1d4>
  40eec8:	ldr	x25, [sp]
  40eecc:	ldr	x8, [x25]
  40eed0:	ldr	x0, [x8]
  40eed4:	cbz	x0, 40ef00 <wcrtomb@plt+0xc2a0>
  40eed8:	ldr	x20, [sp, #16]
  40eedc:	ldr	x24, [sp, #32]
  40eee0:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40eee4:	add	x19, x8, #0x8
  40eee8:	add	x28, x28, #0x7c3
  40eeec:	bl	402a10 <free@plt>
  40eef0:	ldr	x0, [x19], #8
  40eef4:	cbnz	x0, 40eeec <wcrtomb@plt+0xc28c>
  40eef8:	ldr	x8, [x25]
  40eefc:	b	40ef10 <wcrtomb@plt+0xc2b0>
  40ef00:	ldr	x20, [sp, #16]
  40ef04:	ldr	x24, [sp, #32]
  40ef08:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40ef0c:	add	x28, x28, #0x7c3
  40ef10:	mov	x0, x8
  40ef14:	bl	402a10 <free@plt>
  40ef18:	mov	x0, x20
  40ef1c:	str	x22, [x25]
  40ef20:	bl	40f360 <wcrtomb@plt+0xc700>
  40ef24:	ldr	x12, [sp, #8]
  40ef28:	b	40e838 <wcrtomb@plt+0xbbd8>
  40ef2c:	cmp	w19, #0xfe
  40ef30:	b.ls	40efc0 <wcrtomb@plt+0xc360>  // b.plast
  40ef34:	ldr	x25, [sp, #16]
  40ef38:	ldr	x8, [x23, x22, lsl #3]
  40ef3c:	add	x24, x12, #0x2
  40ef40:	cmp	x8, #0x105
  40ef44:	b.ne	40f014 <wcrtomb@plt+0xc3b4>  // b.any
  40ef48:	sub	x8, x20, #0x1
  40ef4c:	cmp	x24, x8
  40ef50:	b.ge	40f014 <wcrtomb@plt+0xc3b4>  // b.tcont
  40ef54:	mov	x9, xzr
  40ef58:	add	x10, x12, #0x2
  40ef5c:	mov	x20, x24
  40ef60:	cmn	x9, #0x2
  40ef64:	b.eq	40ef7c <wcrtomb@plt+0xc31c>  // b.none
  40ef68:	add	x11, x21, x9, lsl #3
  40ef6c:	ldr	x11, [x11, #16]
  40ef70:	sub	x11, x11, #0x1
  40ef74:	cmp	x11, #0xfe
  40ef78:	b.hi	40f1bc <wcrtomb@plt+0xc55c>  // b.pmore
  40ef7c:	add	x11, x21, x9, lsl #3
  40ef80:	ldr	x11, [x11, #24]
  40ef84:	cmp	x11, #0x105
  40ef88:	b.ne	40efa0 <wcrtomb@plt+0xc340>  // b.any
  40ef8c:	add	x9, x9, #0x2
  40ef90:	add	x11, x10, x9
  40ef94:	cmp	x11, x8
  40ef98:	add	x20, x20, #0x2
  40ef9c:	b.lt	40ef60 <wcrtomb@plt+0xc300>  // b.tstop
  40efa0:	add	x8, x12, x9
  40efa4:	mov	x26, x25
  40efa8:	add	x20, x8, #0x2
  40efac:	b	40f01c <wcrtomb@plt+0xc3bc>
  40efb0:	sub	x8, x26, #0x1
  40efb4:	add	x26, x26, #0x1
  40efb8:	cmp	x8, #0xfe
  40efbc:	b.cs	40ef34 <wcrtomb@plt+0xc2d4>  // b.hs, b.nlast
  40efc0:	ubfx	x8, x26, #6, #26
  40efc4:	add	x9, x25, x24, lsl #5
  40efc8:	ldr	x8, [x9, x8, lsl #3]
  40efcc:	lsr	x8, x8, x26
  40efd0:	tbz	w8, #0, 40efb0 <wcrtomb@plt+0xc350>
  40efd4:	ldur	w8, [x29, #-20]
  40efd8:	tst	w8, #0xff
  40efdc:	b.eq	40e914 <wcrtomb@plt+0xbcb4>  // b.none
  40efe0:	mov	x27, x12
  40efe4:	bl	402880 <__ctype_toupper_loc@plt>
  40efe8:	ldr	x8, [x0]
  40efec:	ldr	w8, [x8, x26, lsl #2]
  40eff0:	stur	w8, [x29, #-8]
  40eff4:	bl	402880 <__ctype_toupper_loc@plt>
  40eff8:	ldr	x8, [x0]
  40effc:	ldur	w9, [x29, #-8]
  40f000:	mov	x12, x27
  40f004:	ldr	w8, [x8, x19, lsl #2]
  40f008:	cmp	w9, w8
  40f00c:	b.eq	40efb0 <wcrtomb@plt+0xc350>  // b.none
  40f010:	b	40e914 <wcrtomb@plt+0xbcb4>
  40f014:	mov	x26, x25
  40f018:	mov	x20, x24
  40f01c:	ldur	w8, [x29, #-20]
  40f020:	sub	x21, x20, x12
  40f024:	mov	w0, #0x30                  	// #48
  40f028:	mov	x27, x12
  40f02c:	and	w25, w8, #0xff
  40f030:	asr	x8, x21, #1
  40f034:	add	x23, x8, #0x1
  40f038:	bl	415348 <wcrtomb@plt+0x126e8>
  40f03c:	mov	x22, x0
  40f040:	mov	w0, #0x8                   	// #8
  40f044:	bl	415540 <wcrtomb@plt+0x128e0>
  40f048:	str	x0, [x22]
  40f04c:	mov	x0, x23
  40f050:	bl	415540 <wcrtomb@plt+0x128e0>
  40f054:	str	x0, [x22, #8]
  40f058:	mov	x0, x23
  40f05c:	bl	415540 <wcrtomb@plt+0x128e0>
  40f060:	str	x0, [x22, #16]
  40f064:	mov	x0, x23
  40f068:	bl	415540 <wcrtomb@plt+0x128e0>
  40f06c:	str	x0, [x22, #24]
  40f070:	strh	wzr, [x22, #32]
  40f074:	str	x26, [x22, #40]
  40f078:	cbz	w25, 40f09c <wcrtomb@plt+0xc43c>
  40f07c:	add	w8, w19, #0x80
  40f080:	cmp	w8, #0x17f
  40f084:	b.hi	40f098 <wcrtomb@plt+0xc438>  // b.pmore
  40f088:	bl	402880 <__ctype_toupper_loc@plt>
  40f08c:	ldr	x8, [x0]
  40f090:	sbfiz	x9, x19, #2, #32
  40f094:	ldr	w19, [x8, x9]
  40f098:	sxtw	x19, w19
  40f09c:	ldr	x8, [x22, #16]
  40f0a0:	ldur	w11, [x29, #-20]
  40f0a4:	mov	x10, x27
  40f0a8:	cmp	x24, x20
  40f0ac:	strb	w19, [x8]
  40f0b0:	ldr	x8, [x22, #8]
  40f0b4:	strb	w19, [x8]
  40f0b8:	ldr	x8, [x22, #24]
  40f0bc:	strb	w19, [x8]
  40f0c0:	b.ge	40f150 <wcrtomb@plt+0xc4f0>  // b.tcont
  40f0c4:	ldr	x24, [sp, #32]
  40f0c8:	sub	x8, x21, #0x3
  40f0cc:	lsr	x8, x8, #1
  40f0d0:	add	x20, x8, #0x2
  40f0d4:	neg	x19, x8
  40f0d8:	mov	w21, #0x1                   	// #1
  40f0dc:	b	40f110 <wcrtomb@plt+0xc4b0>
  40f0e0:	sxtw	x23, w23
  40f0e4:	ldr	x8, [x22, #16]
  40f0e8:	add	x10, x10, #0x2
  40f0ec:	strb	w23, [x8, x21]
  40f0f0:	ldr	x8, [x22, #8]
  40f0f4:	strb	w23, [x8, x21]
  40f0f8:	ldr	x8, [x22, #24]
  40f0fc:	strb	w23, [x8, x21]
  40f100:	add	x21, x21, #0x1
  40f104:	add	x8, x19, x21
  40f108:	cmp	x8, #0x2
  40f10c:	b.eq	40f15c <wcrtomb@plt+0xc4fc>  // b.none
  40f110:	ldr	x8, [x24, #144]
  40f114:	tst	w11, #0xff
  40f118:	add	x8, x8, x10, lsl #3
  40f11c:	ldr	x23, [x8, #16]
  40f120:	b.eq	40f0e4 <wcrtomb@plt+0xc484>  // b.none
  40f124:	add	w8, w23, #0x80
  40f128:	cmp	w8, #0x17f
  40f12c:	b.hi	40f0e0 <wcrtomb@plt+0xc480>  // b.pmore
  40f130:	mov	x25, x10
  40f134:	bl	402880 <__ctype_toupper_loc@plt>
  40f138:	ldr	x8, [x0]
  40f13c:	sbfiz	x9, x23, #2, #32
  40f140:	ldur	w11, [x29, #-20]
  40f144:	mov	x10, x25
  40f148:	ldr	w23, [x8, x9]
  40f14c:	b	40f0e0 <wcrtomb@plt+0xc480>
  40f150:	ldr	x24, [sp, #32]
  40f154:	mov	w20, #0x1                   	// #1
  40f158:	b	40f160 <wcrtomb@plt+0xc500>
  40f15c:	mov	x27, x10
  40f160:	ldr	x8, [x22, #16]
  40f164:	mov	x2, x20
  40f168:	strb	wzr, [x8, x20]
  40f16c:	ldr	x8, [x22, #8]
  40f170:	strb	wzr, [x8, x20]
  40f174:	ldr	x8, [x22, #24]
  40f178:	strb	wzr, [x8, x20]
  40f17c:	ldr	x0, [x22]
  40f180:	ldr	x1, [x22, #24]
  40f184:	bl	40f3c0 <wcrtomb@plt+0xc760>
  40f188:	mov	x25, x22
  40f18c:	mov	x12, x27
  40f190:	str	x0, [x22]
  40f194:	b	40e838 <wcrtomb@plt+0xbbd8>
  40f198:	mov	w8, wzr
  40f19c:	strb	wzr, [x22]
  40f1a0:	strb	wzr, [x21, #32]
  40f1a4:	mov	x0, x25
  40f1a8:	strb	w8, [x21, #33]
  40f1ac:	bl	40f360 <wcrtomb@plt+0xc700>
  40f1b0:	mov	x25, x21
  40f1b4:	mov	x12, x20
  40f1b8:	b	40e838 <wcrtomb@plt+0xbbd8>
  40f1bc:	mov	x26, x25
  40f1c0:	b	40f01c <wcrtomb@plt+0xc3bc>
  40f1c4:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40f1c8:	mov	x25, xzr
  40f1cc:	mov	w20, wzr
  40f1d0:	mov	w22, wzr
  40f1d4:	mov	w19, wzr
  40f1d8:	add	x28, x28, #0x7c3
  40f1dc:	ldrb	w8, [x28]
  40f1e0:	cbz	w8, 40f2d4 <wcrtomb@plt+0xc674>
  40f1e4:	mov	x0, x28
  40f1e8:	bl	4025c0 <strlen@plt>
  40f1ec:	add	x0, x0, #0x4
  40f1f0:	bl	415348 <wcrtomb@plt+0x126e8>
  40f1f4:	mov	x21, x0
  40f1f8:	strb	w19, [x0]
  40f1fc:	strb	w22, [x0, #1]
  40f200:	strb	w20, [x0, #2]
  40f204:	add	x0, x0, #0x3
  40f208:	mov	x1, x28
  40f20c:	bl	402ab0 <strcpy@plt>
  40f210:	cbz	x25, 40f228 <wcrtomb@plt+0xc5c8>
  40f214:	ldr	x19, [x25, #40]
  40f218:	mov	x0, x25
  40f21c:	bl	40f360 <wcrtomb@plt+0xc700>
  40f220:	mov	x25, x19
  40f224:	cbnz	x19, 40f214 <wcrtomb@plt+0xc5b4>
  40f228:	mov	x0, x21
  40f22c:	ldp	x20, x19, [sp, #144]
  40f230:	ldp	x22, x21, [sp, #128]
  40f234:	ldp	x24, x23, [sp, #112]
  40f238:	ldp	x26, x25, [sp, #96]
  40f23c:	ldp	x28, x27, [sp, #80]
  40f240:	ldp	x29, x30, [sp, #64]
  40f244:	add	sp, sp, #0xa0
  40f248:	ret
  40f24c:	ldr	x8, [x25, #40]
  40f250:	cbnz	x8, 40f340 <wcrtomb@plt+0xc6e0>
  40f254:	ldr	x8, [x25]
  40f258:	ldr	x21, [x8]
  40f25c:	cbz	x21, 40f2a8 <wcrtomb@plt+0xc648>
  40f260:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40f264:	add	x19, x8, #0x8
  40f268:	add	x28, x28, #0x7c3
  40f26c:	mov	x0, x21
  40f270:	bl	4025c0 <strlen@plt>
  40f274:	mov	x22, x0
  40f278:	mov	x0, x28
  40f27c:	bl	4025c0 <strlen@plt>
  40f280:	cmp	x22, x0
  40f284:	csel	x28, x21, x28, hi  // hi = pmore
  40f288:	ldr	x21, [x19], #8
  40f28c:	cbnz	x21, 40f26c <wcrtomb@plt+0xc60c>
  40f290:	b	40f2b0 <wcrtomb@plt+0xc650>
  40f294:	mov	w20, wzr
  40f298:	mov	w22, wzr
  40f29c:	ldrb	w8, [x28]
  40f2a0:	cbnz	w8, 40f1e4 <wcrtomb@plt+0xc584>
  40f2a4:	b	40f2d4 <wcrtomb@plt+0xc674>
  40f2a8:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x105a8>
  40f2ac:	add	x28, x28, #0x7c3
  40f2b0:	ldr	x1, [x25, #24]
  40f2b4:	mov	x0, x28
  40f2b8:	bl	4029d0 <strcmp@plt>
  40f2bc:	cbz	w0, 40f2e0 <wcrtomb@plt+0xc680>
  40f2c0:	mov	w20, wzr
  40f2c4:	mov	w22, wzr
  40f2c8:	mov	w19, wzr
  40f2cc:	ldrb	w8, [x28]
  40f2d0:	cbnz	w8, 40f1e4 <wcrtomb@plt+0xc584>
  40f2d4:	mov	x21, xzr
  40f2d8:	cbnz	x25, 40f214 <wcrtomb@plt+0xc5b4>
  40f2dc:	b	40f228 <wcrtomb@plt+0xc5c8>
  40f2e0:	ldr	w8, [sp, #28]
  40f2e4:	tbz	w8, #0, 40f2f0 <wcrtomb@plt+0xc690>
  40f2e8:	ldrb	w8, [x25, #32]
  40f2ec:	cbz	w8, 40f308 <wcrtomb@plt+0xc6a8>
  40f2f0:	ldr	w8, [sp, #24]
  40f2f4:	tbz	w8, #0, 40f300 <wcrtomb@plt+0xc6a0>
  40f2f8:	ldrb	w8, [x25, #33]
  40f2fc:	cbz	w8, 40f308 <wcrtomb@plt+0xc6a8>
  40f300:	mov	w19, #0x1                   	// #1
  40f304:	b	40f30c <wcrtomb@plt+0xc6ac>
  40f308:	mov	w19, wzr
  40f30c:	ldrb	w22, [x25, #32]
  40f310:	ldrb	w20, [x25, #33]
  40f314:	ldrb	w8, [x28]
  40f318:	cbnz	w8, 40f1e4 <wcrtomb@plt+0xc584>
  40f31c:	b	40f2d4 <wcrtomb@plt+0xc674>
  40f320:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f324:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f328:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f32c:	add	x0, x0, #0x371
  40f330:	add	x1, x1, #0x39e
  40f334:	add	x3, x3, #0x3a8
  40f338:	mov	w2, #0xff6                 	// #4086
  40f33c:	bl	402bc0 <__assert_fail@plt>
  40f340:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f344:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f348:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f34c:	add	x0, x0, #0x3d4
  40f350:	add	x1, x1, #0x39e
  40f354:	add	x3, x3, #0x3a8
  40f358:	mov	w2, #0x1039                	// #4153
  40f35c:	bl	402bc0 <__assert_fail@plt>
  40f360:	stp	x29, x30, [sp, #-32]!
  40f364:	stp	x20, x19, [sp, #16]
  40f368:	ldr	x8, [x0]
  40f36c:	mov	x19, x0
  40f370:	mov	x29, sp
  40f374:	ldr	x0, [x8]
  40f378:	cbz	x0, 40f390 <wcrtomb@plt+0xc730>
  40f37c:	add	x20, x8, #0x8
  40f380:	bl	402a10 <free@plt>
  40f384:	ldr	x0, [x20], #8
  40f388:	cbnz	x0, 40f380 <wcrtomb@plt+0xc720>
  40f38c:	ldr	x8, [x19]
  40f390:	mov	x0, x8
  40f394:	bl	402a10 <free@plt>
  40f398:	ldr	x0, [x19, #8]
  40f39c:	bl	402a10 <free@plt>
  40f3a0:	ldr	x0, [x19, #16]
  40f3a4:	bl	402a10 <free@plt>
  40f3a8:	ldr	x0, [x19, #24]
  40f3ac:	bl	402a10 <free@plt>
  40f3b0:	mov	x0, x19
  40f3b4:	ldp	x20, x19, [sp, #16]
  40f3b8:	ldp	x29, x30, [sp], #32
  40f3bc:	b	402a10 <free@plt>
  40f3c0:	stp	x29, x30, [sp, #-64]!
  40f3c4:	stp	x20, x19, [sp, #48]
  40f3c8:	mov	x19, x0
  40f3cc:	add	x0, x2, #0x1
  40f3d0:	stp	x24, x23, [sp, #16]
  40f3d4:	stp	x22, x21, [sp, #32]
  40f3d8:	mov	x29, sp
  40f3dc:	mov	x21, x2
  40f3e0:	mov	x22, x1
  40f3e4:	bl	415348 <wcrtomb@plt+0x126e8>
  40f3e8:	mov	x1, x22
  40f3ec:	mov	x2, x21
  40f3f0:	mov	x20, x0
  40f3f4:	bl	402580 <memcpy@plt>
  40f3f8:	strb	wzr, [x20, x21]
  40f3fc:	ldr	x21, [x19]
  40f400:	cbz	x21, 40f484 <wcrtomb@plt+0xc824>
  40f404:	mov	x23, xzr
  40f408:	mov	x0, x21
  40f40c:	mov	x1, x20
  40f410:	bl	402b30 <strstr@plt>
  40f414:	cbnz	x0, 40f490 <wcrtomb@plt+0xc830>
  40f418:	add	x8, x19, x23, lsl #3
  40f41c:	ldr	x0, [x8, #8]
  40f420:	add	x22, x23, #0x1
  40f424:	mov	x23, x22
  40f428:	cbnz	x0, 40f40c <wcrtomb@plt+0xc7ac>
  40f42c:	cbz	x21, 40f4a4 <wcrtomb@plt+0xc844>
  40f430:	mov	x23, xzr
  40f434:	mov	x24, x19
  40f438:	b	40f44c <wcrtomb@plt+0xc7ec>
  40f43c:	add	x23, x23, #0x1
  40f440:	add	x24, x19, x23, lsl #3
  40f444:	ldr	x21, [x24]
  40f448:	cbz	x21, 40f4a4 <wcrtomb@plt+0xc844>
  40f44c:	mov	x0, x20
  40f450:	mov	x1, x21
  40f454:	bl	402b30 <strstr@plt>
  40f458:	cbz	x0, 40f43c <wcrtomb@plt+0xc7dc>
  40f45c:	mov	x0, x21
  40f460:	bl	402a10 <free@plt>
  40f464:	sub	x22, x22, #0x1
  40f468:	cmp	x22, x23
  40f46c:	b.eq	40f4a0 <wcrtomb@plt+0xc840>  // b.none
  40f470:	lsl	x8, x22, #3
  40f474:	ldr	x9, [x19, x8]
  40f478:	str	x9, [x24]
  40f47c:	str	xzr, [x19, x8]
  40f480:	b	40f440 <wcrtomb@plt+0xc7e0>
  40f484:	mov	x22, xzr
  40f488:	mov	w8, #0x2                   	// #2
  40f48c:	b	40f4b0 <wcrtomb@plt+0xc850>
  40f490:	mov	x0, x20
  40f494:	bl	402a10 <free@plt>
  40f498:	mov	x0, x19
  40f49c:	b	40f4c4 <wcrtomb@plt+0xc864>
  40f4a0:	mov	x22, x23
  40f4a4:	add	x8, x22, #0x2
  40f4a8:	lsr	x9, x8, #60
  40f4ac:	cbnz	x9, 40f4d8 <wcrtomb@plt+0xc878>
  40f4b0:	lsl	x1, x8, #3
  40f4b4:	mov	x0, x19
  40f4b8:	bl	4153c8 <wcrtomb@plt+0x12768>
  40f4bc:	add	x8, x0, x22, lsl #3
  40f4c0:	stp	x20, xzr, [x8]
  40f4c4:	ldp	x20, x19, [sp, #48]
  40f4c8:	ldp	x22, x21, [sp, #32]
  40f4cc:	ldp	x24, x23, [sp, #16]
  40f4d0:	ldp	x29, x30, [sp], #64
  40f4d4:	ret
  40f4d8:	bl	41563c <wcrtomb@plt+0x129dc>
  40f4dc:	b	402a10 <free@plt>
  40f4e0:	mov	w0, #0x920                 	// #2336
  40f4e4:	b	415348 <wcrtomb@plt+0x126e8>
  40f4e8:	stp	x29, x30, [sp, #-96]!
  40f4ec:	stp	x22, x21, [sp, #64]
  40f4f0:	mov	x21, x2
  40f4f4:	mov	x22, x1
  40f4f8:	mov	w2, #0x410                 	// #1040
  40f4fc:	mov	w1, wzr
  40f500:	stp	x28, x27, [sp, #16]
  40f504:	stp	x26, x25, [sp, #32]
  40f508:	stp	x24, x23, [sp, #48]
  40f50c:	stp	x20, x19, [sp, #80]
  40f510:	mov	x29, sp
  40f514:	mov	w20, w3
  40f518:	mov	x19, x0
  40f51c:	bl	402800 <memset@plt>
  40f520:	ldrb	w8, [x22]
  40f524:	adrp	x9, 40f000 <wcrtomb@plt+0xc3a0>
  40f528:	adrp	x10, 40f000 <wcrtomb@plt+0xc3a0>
  40f52c:	add	x9, x9, #0x6ac
  40f530:	add	x10, x10, #0x6b8
  40f534:	cmp	w8, #0x0
  40f538:	csel	x8, x10, x9, eq  // eq = none
  40f53c:	add	x0, x19, #0x418
  40f540:	mov	w2, #0x504                 	// #1284
  40f544:	mov	x1, x22
  40f548:	str	x8, [x19, #1040]
  40f54c:	bl	402580 <memcpy@plt>
  40f550:	ldrb	w8, [x19, #1048]
  40f554:	tst	w20, #0x2
  40f558:	mov	w12, #0xa                   	// #10
  40f55c:	mov	x9, #0xffffffffffffffff    	// #-1
  40f560:	eor	w8, w8, #0x1
  40f564:	add	x10, x19, #0x1c0
  40f568:	mov	w23, #0x1                   	// #1
  40f56c:	ubfx	w11, w21, #22, #1
  40f570:	and	w24, w20, #0x1
  40f574:	strb	w8, [x19, #192]
  40f578:	csel	w8, w12, wzr, eq  // eq = none
  40f57c:	csel	x26, x12, xzr, eq  // eq = none
  40f580:	str	x9, [x19, #24]
  40f584:	strb	w23, [x19, #456]
  40f588:	strb	w11, [x10, #9]
  40f58c:	strb	w8, [x10, #11]
  40f590:	add	x8, x10, x26
  40f594:	strb	w24, [x10, #10]
  40f598:	str	x21, [x19, #448]
  40f59c:	mov	x21, #0x2401                	// #9217
  40f5a0:	mov	x22, xzr
  40f5a4:	add	x20, x19, #0x51c
  40f5a8:	mov	w25, #0x4                   	// #4
  40f5ac:	lsl	x27, x23, x26
  40f5b0:	add	x28, x8, #0xc
  40f5b4:	movk	x21, #0xc000, lsl #32
  40f5b8:	b	40f5e8 <wcrtomb@plt+0xc988>
  40f5bc:	cmp	x22, #0x40
  40f5c0:	lsl	x8, x23, x22
  40f5c4:	cset	w9, cc  // cc = lo, ul, last
  40f5c8:	tst	x8, x21
  40f5cc:	cset	w8, ne  // ne = any
  40f5d0:	and	w8, w9, w8
  40f5d4:	add	x9, x19, x22
  40f5d8:	add	x22, x22, #0x1
  40f5dc:	cmp	x22, #0x100
  40f5e0:	strb	w8, [x9, #716]
  40f5e4:	b.eq	40f690 <wcrtomb@plt+0xca30>  // b.none
  40f5e8:	cbnz	w24, 40f610 <wcrtomb@plt+0xc9b0>
  40f5ec:	cmp	x26, x22
  40f5f0:	b.ne	40f610 <wcrtomb@plt+0xc9b0>  // b.any
  40f5f4:	strb	w25, [x28]
  40f5f8:	ldr	x8, [x19, #1008]
  40f5fc:	orr	x8, x8, x27
  40f600:	str	x8, [x19, #1008]
  40f604:	ldrb	w8, [x19, #1050]
  40f608:	cbnz	w8, 40f66c <wcrtomb@plt+0xca0c>
  40f60c:	b	40f5bc <wcrtomb@plt+0xc95c>
  40f610:	ldr	w8, [x20, x22, lsl #2]
  40f614:	cmn	w8, #0x1
  40f618:	b.eq	40f67c <wcrtomb@plt+0xca1c>  // b.none
  40f61c:	bl	4029e0 <__ctype_b_loc@plt>
  40f620:	ldr	x8, [x0]
  40f624:	cmp	x22, #0x5f
  40f628:	cset	w9, eq  // eq = none
  40f62c:	add	x10, x19, x22
  40f630:	ldrh	w8, [x8, x22, lsl #1]
  40f634:	and	w8, w8, #0x8
  40f638:	orr	w8, w9, w8, lsr #3
  40f63c:	cmp	w8, #0x0
  40f640:	cinc	w9, w23, ne  // ne = any
  40f644:	strb	w9, [x10, #460]
  40f648:	cbz	w8, 40f664 <wcrtomb@plt+0xca04>
  40f64c:	ubfx	x8, x22, #6, #26
  40f650:	add	x8, x19, x8, lsl #3
  40f654:	ldr	x9, [x8, #976]
  40f658:	lsl	x10, x23, x22
  40f65c:	orr	x9, x9, x10
  40f660:	str	x9, [x8, #976]
  40f664:	ldrb	w8, [x19, #1050]
  40f668:	cbz	w8, 40f5bc <wcrtomb@plt+0xc95c>
  40f66c:	and	x8, x22, #0xc0
  40f670:	cmp	x8, #0x80
  40f674:	cset	w8, ne  // ne = any
  40f678:	b	40f5d4 <wcrtomb@plt+0xc974>
  40f67c:	add	x8, x19, x22
  40f680:	strb	w23, [x8, #460]
  40f684:	ldrb	w8, [x19, #1050]
  40f688:	cbnz	w8, 40f66c <wcrtomb@plt+0xca0c>
  40f68c:	b	40f5bc <wcrtomb@plt+0xc95c>
  40f690:	ldp	x20, x19, [sp, #80]
  40f694:	ldp	x22, x21, [sp, #64]
  40f698:	ldp	x24, x23, [sp, #48]
  40f69c:	ldp	x26, x25, [sp, #32]
  40f6a0:	ldp	x28, x27, [sp, #16]
  40f6a4:	ldp	x29, x30, [sp], #96
  40f6a8:	ret
  40f6ac:	and	w3, w3, #0x1
  40f6b0:	mov	w5, #0x1                   	// #1
  40f6b4:	b	41164c <wcrtomb@plt+0xe9ec>
  40f6b8:	and	w3, w3, #0x1
  40f6bc:	mov	w5, wzr
  40f6c0:	b	41164c <wcrtomb@plt+0xe9ec>
  40f6c4:	stp	x29, x30, [sp, #-32]!
  40f6c8:	movi	v0.2d, #0x0
  40f6cc:	mov	x8, #0xffffffffffffffff    	// #-1
  40f6d0:	stp	x20, x19, [sp, #16]
  40f6d4:	stp	q0, q0, [x0, #416]
  40f6d8:	stp	q0, q0, [x0, #384]
  40f6dc:	stp	q0, q0, [x0, #352]
  40f6e0:	stp	q0, q0, [x0, #320]
  40f6e4:	stp	q0, q0, [x0, #288]
  40f6e8:	stp	q0, q0, [x0, #256]
  40f6ec:	stp	q0, q0, [x0, #224]
  40f6f0:	stp	q0, q0, [x0, #192]
  40f6f4:	stp	q0, q0, [x0, #160]
  40f6f8:	stp	q0, q0, [x0, #128]
  40f6fc:	stp	q0, q0, [x0, #96]
  40f700:	stp	q0, q0, [x0, #64]
  40f704:	stp	q0, q0, [x0, #32]
  40f708:	stp	q0, q0, [x0]
  40f70c:	str	x8, [x0, #24]
  40f710:	ldrb	w8, [x1, #192]
  40f714:	mov	x19, x1
  40f718:	mov	x20, x0
  40f71c:	add	x0, x0, #0x1c0
  40f720:	add	x1, x1, #0x1c0
  40f724:	mov	w2, #0x250                 	// #592
  40f728:	mov	x29, sp
  40f72c:	strb	w8, [x20, #192]
  40f730:	bl	402580 <memcpy@plt>
  40f734:	ldr	x8, [x19, #1040]
  40f738:	add	x0, x20, #0x418
  40f73c:	add	x1, x19, #0x418
  40f740:	mov	w2, #0x504                 	// #1284
  40f744:	str	x8, [x20, #1040]
  40f748:	ldp	x20, x19, [sp, #16]
  40f74c:	ldp	x29, x30, [sp], #32
  40f750:	b	402580 <memcpy@plt>
  40f754:	sub	sp, sp, #0x50
  40f758:	stp	x20, x19, [sp, #64]
  40f75c:	mov	x19, x0
  40f760:	add	x0, sp, #0x10
  40f764:	add	x2, sp, #0x8
  40f768:	stp	x29, x30, [sp, #32]
  40f76c:	stp	x22, x21, [sp, #48]
  40f770:	add	x29, sp, #0x20
  40f774:	str	xzr, [sp, #8]
  40f778:	bl	402c60 <wcrtomb@plt>
  40f77c:	cmn	x0, #0x1
  40f780:	b.eq	40f7f4 <wcrtomb@plt+0xcb94>  // b.none
  40f784:	ldrb	w1, [sp, #16]
  40f788:	mov	x20, x0
  40f78c:	cmp	w20, #0x1
  40f790:	b.eq	40f7fc <wcrtomb@plt+0xcb9c>  // b.none
  40f794:	mov	w2, #0x1                   	// #1
  40f798:	mov	x0, x19
  40f79c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40f7a0:	cmp	w20, #0x2
  40f7a4:	b.lt	40f808 <wcrtomb@plt+0xcba8>  // b.tstop
  40f7a8:	sub	w8, w20, #0x1
  40f7ac:	and	x9, x20, #0xffffffff
  40f7b0:	add	x10, sp, #0x10
  40f7b4:	sub	x20, x8, #0x1
  40f7b8:	orr	x21, x10, #0x1
  40f7bc:	sub	x22, x9, #0x1
  40f7c0:	ldrb	w1, [x21], #1
  40f7c4:	cmp	x20, #0x0
  40f7c8:	cset	w8, eq  // eq = none
  40f7cc:	lsl	w2, w8, #1
  40f7d0:	mov	x0, x19
  40f7d4:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40f7d8:	mov	w1, #0x105                 	// #261
  40f7dc:	mov	x0, x19
  40f7e0:	bl	40c48c <wcrtomb@plt+0x982c>
  40f7e4:	subs	x22, x22, #0x1
  40f7e8:	sub	x20, x20, #0x1
  40f7ec:	b.ne	40f7c0 <wcrtomb@plt+0xcb60>  // b.any
  40f7f0:	b	40f808 <wcrtomb@plt+0xcba8>
  40f7f4:	mov	x1, xzr
  40f7f8:	strb	wzr, [sp, #16]
  40f7fc:	mov	w2, #0x3                   	// #3
  40f800:	mov	x0, x19
  40f804:	bl	40f81c <wcrtomb@plt+0xcbbc>
  40f808:	ldp	x20, x19, [sp, #64]
  40f80c:	ldp	x22, x21, [sp, #48]
  40f810:	ldp	x29, x30, [sp, #32]
  40f814:	add	sp, sp, #0x50
  40f818:	ret
  40f81c:	stp	x29, x30, [sp, #-48]!
  40f820:	str	x21, [sp, #16]
  40f824:	stp	x20, x19, [sp, #32]
  40f828:	mov	x8, x0
  40f82c:	ldr	x9, [x8, #160]!
  40f830:	mov	w21, w2
  40f834:	mov	x19, x0
  40f838:	mov	x20, x1
  40f83c:	ldur	x10, [x8, #-8]
  40f840:	mov	x29, sp
  40f844:	cmp	x9, x10
  40f848:	b.ne	40f884 <wcrtomb@plt+0xcc24>  // b.any
  40f84c:	ldr	x0, [x19, #144]
  40f850:	mov	w2, #0x1                   	// #1
  40f854:	mov	x3, #0xffffffffffffffff    	// #-1
  40f858:	mov	w4, #0x8                   	// #8
  40f85c:	mov	x1, x8
  40f860:	bl	40f91c <wcrtomb@plt+0xccbc>
  40f864:	ldrb	w8, [x19, #1048]
  40f868:	str	x0, [x19, #144]
  40f86c:	cbz	w8, 40f884 <wcrtomb@plt+0xcc24>
  40f870:	ldr	x1, [x19, #160]
  40f874:	tbnz	x1, #63, 40f918 <wcrtomb@plt+0xccb8>
  40f878:	ldr	x0, [x19, #280]
  40f87c:	bl	4153c8 <wcrtomb@plt+0x12768>
  40f880:	str	x0, [x19, #280]
  40f884:	ldrb	w8, [x19, #1048]
  40f888:	cbz	w8, 40f898 <wcrtomb@plt+0xcc38>
  40f88c:	ldr	x8, [x19, #280]
  40f890:	ldr	x9, [x19, #152]
  40f894:	strb	w21, [x8, x9]
  40f898:	ldp	x10, x9, [x19, #144]
  40f89c:	sub	x8, x20, #0x100
  40f8a0:	cmp	x8, #0x12
  40f8a4:	add	x11, x9, #0x1
  40f8a8:	str	x11, [x19, #152]
  40f8ac:	str	x20, [x10, x9, lsl #3]
  40f8b0:	b.hi	40f8dc <wcrtomb@plt+0xcc7c>  // b.pmore
  40f8b4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  40f8b8:	add	x9, x9, #0x9e
  40f8bc:	adr	x10, 40f8cc <wcrtomb@plt+0xcc6c>
  40f8c0:	ldrb	w11, [x9, x8]
  40f8c4:	add	x10, x10, x11, lsl #2
  40f8c8:	br	x10
  40f8cc:	ldr	x8, [x19, #136]
  40f8d0:	sub	x8, x8, #0x1
  40f8d4:	b	40f8f0 <wcrtomb@plt+0xcc90>
  40f8d8:	strb	wzr, [x19, #192]
  40f8dc:	ldr	x8, [x19, #176]
  40f8e0:	add	x8, x8, #0x1
  40f8e4:	str	x8, [x19, #176]
  40f8e8:	ldr	x8, [x19, #136]
  40f8ec:	add	x8, x8, #0x1
  40f8f0:	str	x8, [x19, #136]
  40f8f4:	ldr	x8, [x19, #136]
  40f8f8:	ldr	x9, [x19, #168]
  40f8fc:	cmp	x8, x9
  40f900:	b.le	40f908 <wcrtomb@plt+0xcca8>
  40f904:	str	x8, [x19, #168]
  40f908:	ldp	x20, x19, [sp, #32]
  40f90c:	ldr	x21, [sp, #16]
  40f910:	ldp	x29, x30, [sp], #48
  40f914:	ret
  40f918:	bl	41563c <wcrtomb@plt+0x129dc>
  40f91c:	stp	x29, x30, [sp, #-32]!
  40f920:	stp	x20, x19, [sp, #16]
  40f924:	ldr	x8, [x1]
  40f928:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40f92c:	mov	x19, x1
  40f930:	mov	x29, sp
  40f934:	adds	x10, x8, x8, asr #1
  40f938:	csel	x9, x9, x10, vs
  40f93c:	cmp	x9, x3
  40f940:	mov	x10, #0xffffffffffffffff    	// #-1
  40f944:	ccmp	x3, x10, #0x4, gt
  40f948:	csel	x20, x3, x9, gt
  40f94c:	tbnz	x4, #63, 40f96c <wcrtomb@plt+0xcd0c>
  40f950:	cbz	x4, 40f9bc <wcrtomb@plt+0xcd5c>
  40f954:	tbnz	x20, #63, 40f98c <wcrtomb@plt+0xcd2c>
  40f958:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40f95c:	udiv	x10, x9, x4
  40f960:	cmp	x10, x20
  40f964:	b.ge	40f9bc <wcrtomb@plt+0xcd5c>  // b.tcont
  40f968:	b	40f9cc <wcrtomb@plt+0xcd6c>
  40f96c:	tbnz	x20, #63, 40f9ac <wcrtomb@plt+0xcd4c>
  40f970:	cmn	x4, #0x1
  40f974:	b.eq	40f9bc <wcrtomb@plt+0xcd5c>  // b.none
  40f978:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40f97c:	sdiv	x9, x9, x4
  40f980:	cmp	x9, x20
  40f984:	b.ge	40f9bc <wcrtomb@plt+0xcd5c>  // b.tcont
  40f988:	b	40f9a4 <wcrtomb@plt+0xcd44>
  40f98c:	cmn	x20, #0x1
  40f990:	b.eq	40f9bc <wcrtomb@plt+0xcd5c>  // b.none
  40f994:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40f998:	sdiv	x9, x9, x20
  40f99c:	cmp	x9, x4
  40f9a0:	b.ge	40f9bc <wcrtomb@plt+0xcd5c>  // b.tcont
  40f9a4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40f9a8:	b	40f9cc <wcrtomb@plt+0xcd6c>
  40f9ac:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40f9b0:	sdiv	x10, x9, x4
  40f9b4:	cmp	x20, x10
  40f9b8:	b.lt	40f9cc <wcrtomb@plt+0xcd6c>  // b.tstop
  40f9bc:	mul	x1, x20, x4
  40f9c0:	cmp	x1, #0x7f
  40f9c4:	b.gt	40f9d4 <wcrtomb@plt+0xcd74>
  40f9c8:	mov	w9, #0x80                  	// #128
  40f9cc:	sdiv	x20, x9, x4
  40f9d0:	mul	x1, x20, x4
  40f9d4:	cbnz	x0, 40f9dc <wcrtomb@plt+0xcd7c>
  40f9d8:	str	xzr, [x19]
  40f9dc:	sub	x9, x20, x8
  40f9e0:	cmp	x9, x2
  40f9e4:	b.ge	40fa7c <wcrtomb@plt+0xce1c>  // b.tcont
  40f9e8:	cmp	x3, #0x0
  40f9ec:	cset	w9, ge  // ge = tcont
  40f9f0:	adds	x20, x8, x2
  40f9f4:	cset	w10, vs
  40f9f8:	cmp	x20, x3
  40f9fc:	cset	w8, gt
  40fa00:	tbnz	w10, #0, 40fa64 <wcrtomb@plt+0xce04>
  40fa04:	and	w8, w9, w8
  40fa08:	tbnz	w8, #0, 40fa64 <wcrtomb@plt+0xce04>
  40fa0c:	tbnz	x4, #63, 40fa2c <wcrtomb@plt+0xcdcc>
  40fa10:	cbz	x4, 40fa78 <wcrtomb@plt+0xce18>
  40fa14:	tbnz	x20, #63, 40fa4c <wcrtomb@plt+0xcdec>
  40fa18:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40fa1c:	udiv	x8, x8, x4
  40fa20:	cmp	x8, x20
  40fa24:	b.ge	40fa78 <wcrtomb@plt+0xce18>  // b.tcont
  40fa28:	b	40fa64 <wcrtomb@plt+0xce04>
  40fa2c:	tbnz	x20, #63, 40fa68 <wcrtomb@plt+0xce08>
  40fa30:	cmn	x4, #0x1
  40fa34:	b.eq	40fa78 <wcrtomb@plt+0xce18>  // b.none
  40fa38:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40fa3c:	sdiv	x8, x8, x4
  40fa40:	cmp	x8, x20
  40fa44:	b.ge	40fa78 <wcrtomb@plt+0xce18>  // b.tcont
  40fa48:	b	40fa64 <wcrtomb@plt+0xce04>
  40fa4c:	cmn	x20, #0x1
  40fa50:	b.eq	40fa78 <wcrtomb@plt+0xce18>  // b.none
  40fa54:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40fa58:	sdiv	x8, x8, x20
  40fa5c:	cmp	x8, x4
  40fa60:	b.ge	40fa78 <wcrtomb@plt+0xce18>  // b.tcont
  40fa64:	bl	41563c <wcrtomb@plt+0x129dc>
  40fa68:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40fa6c:	sdiv	x8, x8, x4
  40fa70:	cmp	x20, x8
  40fa74:	b.lt	40fa64 <wcrtomb@plt+0xce04>  // b.tstop
  40fa78:	mul	x1, x20, x4
  40fa7c:	bl	4153c8 <wcrtomb@plt+0x12768>
  40fa80:	str	x20, [x19]
  40fa84:	ldp	x20, x19, [sp, #16]
  40fa88:	ldp	x29, x30, [sp], #32
  40fa8c:	ret
  40fa90:	sub	sp, sp, #0x160
  40fa94:	stp	x29, x30, [sp, #256]
  40fa98:	add	x29, sp, #0x100
  40fa9c:	sub	x8, x29, #0x40
  40faa0:	movi	v0.2d, #0x0
  40faa4:	stp	x28, x27, [sp, #272]
  40faa8:	stp	x26, x25, [sp, #288]
  40faac:	stp	x24, x23, [sp, #304]
  40fab0:	stp	x22, x21, [sp, #320]
  40fab4:	stp	x20, x19, [sp, #336]
  40fab8:	str	xzr, [x0, #104]
  40fabc:	stp	q0, q0, [x8]
  40fac0:	mov	x19, x0
  40fac4:	ldr	x2, [x19, #40]!
  40fac8:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  40facc:	mov	x24, x0
  40fad0:	ldr	x1, [x24, #32]!
  40fad4:	mov	x23, x0
  40fad8:	add	x25, x0, #0x48
  40fadc:	ldrb	w8, [x1]
  40fae0:	add	x8, x0, x8, lsl #2
  40fae4:	ldr	w27, [x8, #1308]
  40fae8:	cmn	w27, #0x1
  40faec:	b.ne	40fb30 <wcrtomb@plt+0xced0>  // b.any
  40faf0:	add	x20, x23, #0x110
  40faf4:	add	x0, sp, #0x3c
  40faf8:	mov	x3, x20
  40fafc:	bl	415680 <wcrtomb@plt+0x12a20>
  40fb00:	sub	x8, x0, #0x1
  40fb04:	cmn	x8, #0x3
  40fb08:	b.cs	40fb2c <wcrtomb@plt+0xcecc>  // b.hs, b.nlast
  40fb0c:	ldr	w27, [sp, #60]
  40fb10:	cmp	w0, #0x1
  40fb14:	str	w27, [x25]
  40fb18:	b.eq	40fb34 <wcrtomb@plt+0xced4>  // b.none
  40fb1c:	ldr	x9, [x24]
  40fb20:	sxtw	x8, w0
  40fb24:	mov	w21, #0xffffffff            	// #-1
  40fb28:	b	40fb40 <wcrtomb@plt+0xcee0>
  40fb2c:	str	xzr, [x20]
  40fb30:	str	w27, [x25]
  40fb34:	ldr	x9, [x24]
  40fb38:	mov	w8, #0x1                   	// #1
  40fb3c:	ldrb	w21, [x9]
  40fb40:	add	x1, x9, x8
  40fb44:	str	x1, [x24]
  40fb48:	ldr	x9, [x19]
  40fb4c:	cmp	w21, #0x5e
  40fb50:	sub	x2, x9, x8
  40fb54:	cset	w8, eq  // eq = none
  40fb58:	str	x2, [x19]
  40fb5c:	stp	w8, w21, [sp, #8]
  40fb60:	b.ne	40fbb8 <wcrtomb@plt+0xcf58>  // b.any
  40fb64:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  40fb68:	ldrb	w8, [x1]
  40fb6c:	add	x8, x23, x8, lsl #2
  40fb70:	ldr	w27, [x8, #1308]
  40fb74:	cmn	w27, #0x1
  40fb78:	b.ne	40fbc8 <wcrtomb@plt+0xcf68>  // b.any
  40fb7c:	add	x20, x23, #0x110
  40fb80:	add	x0, sp, #0x3c
  40fb84:	mov	x3, x20
  40fb88:	bl	415680 <wcrtomb@plt+0x12a20>
  40fb8c:	sub	x8, x0, #0x1
  40fb90:	cmn	x8, #0x3
  40fb94:	b.cs	40fbc4 <wcrtomb@plt+0xcf64>  // b.hs, b.nlast
  40fb98:	ldr	w27, [sp, #60]
  40fb9c:	cmp	w0, #0x1
  40fba0:	str	w27, [x25]
  40fba4:	b.eq	40fbcc <wcrtomb@plt+0xcf6c>  // b.none
  40fba8:	ldr	x8, [x24]
  40fbac:	sxtw	x9, w0
  40fbb0:	mov	w21, #0xffffffff            	// #-1
  40fbb4:	b	40fbd8 <wcrtomb@plt+0xcf78>
  40fbb8:	mov	w8, #0x1                   	// #1
  40fbbc:	str	w8, [sp, #24]
  40fbc0:	b	40fbfc <wcrtomb@plt+0xcf9c>
  40fbc4:	str	xzr, [x20]
  40fbc8:	str	w27, [x25]
  40fbcc:	ldr	x8, [x24]
  40fbd0:	mov	w9, #0x1                   	// #1
  40fbd4:	ldrb	w21, [x8]
  40fbd8:	ldr	x10, [x23, #40]
  40fbdc:	ldrb	w11, [x23, #1049]
  40fbe0:	add	x8, x8, x9
  40fbe4:	str	x8, [x23, #32]
  40fbe8:	sub	x8, x10, x9
  40fbec:	cmp	w11, #0x0
  40fbf0:	str	x8, [x23, #40]
  40fbf4:	cset	w8, ne  // ne = any
  40fbf8:	str	w8, [sp, #24]
  40fbfc:	add	x8, x23, #0x110
  40fc00:	cmp	w21, #0x3a
  40fc04:	str	x8, [sp, #32]
  40fc08:	add	x8, sp, #0x3c
  40fc0c:	add	x9, x23, #0x70
  40fc10:	sub	x28, x29, #0x40
  40fc14:	cset	w20, eq  // eq = none
  40fc18:	add	x8, x8, #0x4
  40fc1c:	stp	x9, x25, [sp, #40]
  40fc20:	str	x8, [sp, #16]
  40fc24:	b	40fc54 <wcrtomb@plt+0xcff4>
  40fc28:	lsr	w8, w21, #6
  40fc2c:	lsl	x8, x8, #3
  40fc30:	ldr	x9, [x28, x8]
  40fc34:	mov	w10, #0x1                   	// #1
  40fc38:	lsl	x10, x10, x21
  40fc3c:	orr	x9, x9, x10
  40fc40:	str	x9, [x28, x8]
  40fc44:	cmp	w26, #0x5d
  40fc48:	mov	w21, w26
  40fc4c:	mov	w27, w22
  40fc50:	b.eq	410770 <wcrtomb@plt+0xdb10>  // b.none
  40fc54:	cmp	w21, #0x5c
  40fc58:	and	w20, w20, #0xfffffffd
  40fc5c:	b.eq	40fce4 <wcrtomb@plt+0xd084>  // b.none
  40fc60:	cmp	w21, #0x5b
  40fc64:	b.ne	40fcec <wcrtomb@plt+0xd08c>  // b.any
  40fc68:	ldr	x2, [x19]
  40fc6c:	str	w20, [sp, #56]
  40fc70:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  40fc74:	ldr	x1, [x23, #32]
  40fc78:	ldrb	w8, [x1]
  40fc7c:	add	x8, x23, x8, lsl #2
  40fc80:	ldr	w22, [x8, #1308]
  40fc84:	cmn	w22, #0x1
  40fc88:	b.ne	40fd54 <wcrtomb@plt+0xd0f4>  // b.any
  40fc8c:	ldr	x20, [sp, #32]
  40fc90:	add	x0, sp, #0x3c
  40fc94:	mov	x3, x20
  40fc98:	bl	415680 <wcrtomb@plt+0x12a20>
  40fc9c:	sub	x8, x0, #0x1
  40fca0:	cmn	x8, #0x3
  40fca4:	b.cs	40fd50 <wcrtomb@plt+0xd0f0>  // b.hs, b.nlast
  40fca8:	ldr	w22, [sp, #60]
  40fcac:	cmp	w0, #0x1
  40fcb0:	str	w22, [x25]
  40fcb4:	b.eq	40fd58 <wcrtomb@plt+0xd0f8>  // b.none
  40fcb8:	ldr	x8, [x24]
  40fcbc:	sxtw	x9, w0
  40fcc0:	mov	w21, #0x5b                  	// #91
  40fcc4:	mov	w26, #0xffffffff            	// #-1
  40fcc8:	add	x8, x8, x9
  40fccc:	str	x8, [x24]
  40fcd0:	ldr	x10, [x19]
  40fcd4:	mov	w8, #0x4                   	// #4
  40fcd8:	sub	x9, x10, x9
  40fcdc:	str	x9, [x19]
  40fce0:	b	40fd9c <wcrtomb@plt+0xd13c>
  40fce4:	ldrb	w8, [x23, #448]
  40fce8:	tbnz	w8, #0, 40fcf8 <wcrtomb@plt+0xd098>
  40fcec:	ldr	x2, [x19]
  40fcf0:	cbnz	x2, 410080 <wcrtomb@plt+0xd420>
  40fcf4:	b	410998 <wcrtomb@plt+0xdd38>
  40fcf8:	ldr	x2, [x19]
  40fcfc:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  40fd00:	ldr	x1, [x23, #32]
  40fd04:	ldrb	w8, [x1]
  40fd08:	add	x8, x23, x8, lsl #2
  40fd0c:	ldr	w27, [x8, #1308]
  40fd10:	cmn	w27, #0x1
  40fd14:	b.ne	410058 <wcrtomb@plt+0xd3f8>  // b.any
  40fd18:	mov	w22, w20
  40fd1c:	ldr	x20, [sp, #32]
  40fd20:	add	x0, sp, #0x3c
  40fd24:	mov	x3, x20
  40fd28:	bl	415680 <wcrtomb@plt+0x12a20>
  40fd2c:	sub	x8, x0, #0x1
  40fd30:	cmn	x8, #0x3
  40fd34:	b.cs	410050 <wcrtomb@plt+0xd3f0>  // b.hs, b.nlast
  40fd38:	ldr	w27, [sp, #60]
  40fd3c:	cmp	w0, #0x1
  40fd40:	str	w27, [x25]
  40fd44:	b.ne	410258 <wcrtomb@plt+0xd5f8>  // b.any
  40fd48:	mov	w20, w22
  40fd4c:	b	41005c <wcrtomb@plt+0xd3fc>
  40fd50:	str	xzr, [x20]
  40fd54:	str	w22, [x25]
  40fd58:	ldr	x1, [x24]
  40fd5c:	mov	w20, wzr
  40fd60:	ldrb	w26, [x1], #1
  40fd64:	str	x1, [x24]
  40fd68:	ldr	x8, [x19]
  40fd6c:	cmp	w26, #0x2e
  40fd70:	sub	x2, x8, #0x1
  40fd74:	str	x2, [x19]
  40fd78:	b.eq	40fdbc <wcrtomb@plt+0xd15c>  // b.none
  40fd7c:	cmp	w26, #0x3d
  40fd80:	b.eq	40fdbc <wcrtomb@plt+0xd15c>  // b.none
  40fd84:	cmp	w26, #0x3a
  40fd88:	b.ne	40fda4 <wcrtomb@plt+0xd144>  // b.any
  40fd8c:	ldrb	w8, [x23, #448]
  40fd90:	tbnz	w8, #2, 40fdb8 <wcrtomb@plt+0xd158>
  40fd94:	mov	w8, #0x4                   	// #4
  40fd98:	mov	w21, #0x5b                  	// #91
  40fd9c:	ldr	w20, [sp, #56]
  40fda0:	b	410368 <wcrtomb@plt+0xd708>
  40fda4:	ldr	w20, [sp, #56]
  40fda8:	mov	w21, #0x5b                  	// #91
  40fdac:	cmp	w26, #0x2d
  40fdb0:	b.eq	410114 <wcrtomb@plt+0xd4b4>  // b.none
  40fdb4:	b	410358 <wcrtomb@plt+0xd6f8>
  40fdb8:	mov	w20, #0x1                   	// #1
  40fdbc:	ldr	x27, [sp, #32]
  40fdc0:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  40fdc4:	mov	w21, wzr
  40fdc8:	b	40fdd8 <wcrtomb@plt+0xd178>
  40fdcc:	cmp	w21, #0x1f
  40fdd0:	b.ls	40fe68 <wcrtomb@plt+0xd208>  // b.plast
  40fdd4:	strb	wzr, [sp, #60]
  40fdd8:	ldrb	w8, [x1]
  40fddc:	add	x8, x23, x8, lsl #2
  40fde0:	ldr	w22, [x8, #1308]
  40fde4:	cmn	w22, #0x1
  40fde8:	b.ne	40fe28 <wcrtomb@plt+0xd1c8>  // b.any
  40fdec:	sub	x0, x29, #0x14
  40fdf0:	mov	x3, x27
  40fdf4:	bl	415680 <wcrtomb@plt+0x12a20>
  40fdf8:	sub	x8, x0, #0x1
  40fdfc:	cmn	x8, #0x3
  40fe00:	b.cs	40fe24 <wcrtomb@plt+0xd1c4>  // b.hs, b.nlast
  40fe04:	ldur	w8, [x29, #-20]
  40fe08:	cmp	w0, #0x1
  40fe0c:	str	w8, [x25]
  40fe10:	b.eq	40fe2c <wcrtomb@plt+0xd1cc>  // b.none
  40fe14:	ldr	x9, [x24]
  40fe18:	sxtw	x10, w0
  40fe1c:	mov	w8, #0xffffffff            	// #-1
  40fe20:	b	40fe38 <wcrtomb@plt+0xd1d8>
  40fe24:	str	xzr, [x27]
  40fe28:	str	w22, [x25]
  40fe2c:	ldr	x9, [x24]
  40fe30:	mov	w10, #0x1                   	// #1
  40fe34:	ldrb	w8, [x9]
  40fe38:	add	x1, x9, x10
  40fe3c:	str	x1, [x24]
  40fe40:	ldr	x9, [x19]
  40fe44:	subs	x2, x9, x10
  40fe48:	str	x2, [x19]
  40fe4c:	b.eq	410998 <wcrtomb@plt+0xdd38>  // b.none
  40fe50:	cmp	w8, w26
  40fe54:	b.ne	40fdcc <wcrtomb@plt+0xd16c>  // b.any
  40fe58:	ldrb	w9, [x1]
  40fe5c:	cmp	w9, #0x5d
  40fe60:	b.ne	40fdcc <wcrtomb@plt+0xd16c>  // b.any
  40fe64:	b	40fe7c <wcrtomb@plt+0xd21c>
  40fe68:	add	w9, w21, #0x1
  40fe6c:	add	x10, sp, #0x3c
  40fe70:	strb	w8, [x10, w21, uxtw]
  40fe74:	mov	w21, w9
  40fe78:	b	40fdd8 <wcrtomb@plt+0xd178>
  40fe7c:	add	x8, sp, #0x3c
  40fe80:	strb	wzr, [x8, w21, uxtw]
  40fe84:	ldr	w21, [x23, #1680]
  40fe88:	cmn	w21, #0x1
  40fe8c:	b.ne	40fec4 <wcrtomb@plt+0xd264>  // b.any
  40fe90:	sub	x0, x29, #0x14
  40fe94:	mov	x3, x27
  40fe98:	bl	415680 <wcrtomb@plt+0x12a20>
  40fe9c:	sub	x8, x0, #0x1
  40fea0:	cmn	x8, #0x3
  40fea4:	b.cs	40fec0 <wcrtomb@plt+0xd260>  // b.hs, b.nlast
  40fea8:	ldur	w8, [x29, #-20]
  40feac:	cmp	w0, #0x1
  40feb0:	str	w8, [x25]
  40feb4:	b.eq	40fec8 <wcrtomb@plt+0xd268>  // b.none
  40feb8:	sxtw	x8, w0
  40febc:	b	40fecc <wcrtomb@plt+0xd26c>
  40fec0:	str	xzr, [x27]
  40fec4:	str	w21, [x25]
  40fec8:	mov	w8, #0x1                   	// #1
  40fecc:	ldr	x9, [x24]
  40fed0:	add	x9, x9, x8
  40fed4:	str	x9, [x24]
  40fed8:	ldr	x9, [x19]
  40fedc:	sub	x27, x9, x8
  40fee0:	str	x27, [x19]
  40fee4:	cbz	w20, 4106b8 <wcrtomb@plt+0xda58>
  40fee8:	ldrb	w8, [x23, #457]
  40feec:	mov	w11, #0x72                  	// #114
  40fef0:	cbz	w8, 40ff34 <wcrtomb@plt+0xd2d4>
  40fef4:	ldr	w8, [sp, #60]
  40fef8:	ldrh	w9, [sp, #64]
  40fefc:	mov	w10, #0x7075                	// #28789
  40ff00:	movk	w10, #0x6570, lsl #16
  40ff04:	eor	w8, w8, w10
  40ff08:	eor	w9, w9, w11
  40ff0c:	orr	w8, w8, w9
  40ff10:	cbz	w8, 40ff44 <wcrtomb@plt+0xd2e4>
  40ff14:	ldr	w8, [sp, #60]
  40ff18:	ldrh	w9, [sp, #64]
  40ff1c:	mov	w10, #0x6f6c                	// #28524
  40ff20:	movk	w10, #0x6577, lsl #16
  40ff24:	eor	w8, w8, w10
  40ff28:	eor	w9, w9, w11
  40ff2c:	orr	w8, w8, w9
  40ff30:	cbz	w8, 40ff44 <wcrtomb@plt+0xd2e4>
  40ff34:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff38:	add	x22, sp, #0x3c
  40ff3c:	add	x1, x1, #0x44a
  40ff40:	b	40ff50 <wcrtomb@plt+0xd2f0>
  40ff44:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff48:	add	x1, x1, #0x44a
  40ff4c:	mov	x22, x1
  40ff50:	mov	x0, x22
  40ff54:	bl	4029d0 <strcmp@plt>
  40ff58:	cbz	w0, 410044 <wcrtomb@plt+0xd3e4>
  40ff5c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff60:	mov	x0, x22
  40ff64:	add	x1, x1, #0x43e
  40ff68:	bl	4029d0 <strcmp@plt>
  40ff6c:	cbz	w0, 41024c <wcrtomb@plt+0xd5ec>
  40ff70:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff74:	mov	x0, x22
  40ff78:	add	x1, x1, #0x444
  40ff7c:	bl	4029d0 <strcmp@plt>
  40ff80:	cbz	w0, 41026c <wcrtomb@plt+0xd60c>
  40ff84:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff88:	mov	x0, x22
  40ff8c:	add	x1, x1, #0x4ab
  40ff90:	bl	4029d0 <strcmp@plt>
  40ff94:	cbz	w0, 410278 <wcrtomb@plt+0xd618>
  40ff98:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ff9c:	mov	x0, x22
  40ffa0:	add	x1, x1, #0x4aa
  40ffa4:	bl	4029d0 <strcmp@plt>
  40ffa8:	cbz	w0, 410614 <wcrtomb@plt+0xd9b4>
  40ffac:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ffb0:	mov	x0, x22
  40ffb4:	add	x1, x1, #0x4b1
  40ffb8:	bl	4029d0 <strcmp@plt>
  40ffbc:	cbz	w0, 410620 <wcrtomb@plt+0xd9c0>
  40ffc0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ffc4:	mov	x0, x22
  40ffc8:	add	x1, x1, #0x4b7
  40ffcc:	bl	4029d0 <strcmp@plt>
  40ffd0:	cbz	w0, 41062c <wcrtomb@plt+0xd9cc>
  40ffd4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ffd8:	mov	x0, x22
  40ffdc:	add	x1, x1, #0x4bd
  40ffe0:	bl	4029d0 <strcmp@plt>
  40ffe4:	cbz	w0, 410638 <wcrtomb@plt+0xd9d8>
  40ffe8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  40ffec:	mov	x0, x22
  40fff0:	add	x1, x1, #0x4c3
  40fff4:	bl	4029d0 <strcmp@plt>
  40fff8:	cbz	w0, 410644 <wcrtomb@plt+0xd9e4>
  40fffc:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  410000:	mov	x0, x22
  410004:	add	x1, x1, #0x4c9
  410008:	bl	4029d0 <strcmp@plt>
  41000c:	cbz	w0, 410650 <wcrtomb@plt+0xd9f0>
  410010:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  410014:	mov	x0, x22
  410018:	add	x1, x1, #0x4cf
  41001c:	bl	4029d0 <strcmp@plt>
  410020:	cbz	w0, 41065c <wcrtomb@plt+0xd9fc>
  410024:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  410028:	mov	x0, x22
  41002c:	add	x1, x1, #0x4d5
  410030:	bl	4029d0 <strcmp@plt>
  410034:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410038:	add	x20, x20, #0x1c0
  41003c:	cbz	w0, 410664 <wcrtomb@plt+0xda04>
  410040:	b	4109b0 <wcrtomb@plt+0xdd50>
  410044:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410048:	add	x20, x20, #0xb8
  41004c:	b	410664 <wcrtomb@plt+0xda04>
  410050:	str	xzr, [x20]
  410054:	mov	w20, w22
  410058:	str	w27, [x25]
  41005c:	ldr	x8, [x24]
  410060:	mov	w9, #0x1                   	// #1
  410064:	ldrb	w21, [x8]
  410068:	add	x8, x8, x9
  41006c:	str	x8, [x24]
  410070:	ldr	x8, [x19]
  410074:	sub	x2, x8, x9
  410078:	str	x2, [x19]
  41007c:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  410080:	ldr	x1, [x23, #32]
  410084:	ldrb	w8, [x1]
  410088:	add	x8, x23, x8, lsl #2
  41008c:	ldr	w22, [x8, #1308]
  410090:	cmn	w22, #0x1
  410094:	b.ne	4100e8 <wcrtomb@plt+0xd488>  // b.any
  410098:	mov	w26, w22
  41009c:	mov	w22, w20
  4100a0:	ldr	x20, [sp, #32]
  4100a4:	add	x0, sp, #0x3c
  4100a8:	mov	x3, x20
  4100ac:	bl	415680 <wcrtomb@plt+0x12a20>
  4100b0:	sub	x8, x0, #0x1
  4100b4:	cmn	x8, #0x3
  4100b8:	b.cs	4100dc <wcrtomb@plt+0xd47c>  // b.hs, b.nlast
  4100bc:	ldr	w8, [sp, #60]
  4100c0:	cmp	w0, #0x1
  4100c4:	mov	w10, w8
  4100c8:	str	w8, [x25]
  4100cc:	b.ne	4101e0 <wcrtomb@plt+0xd580>  // b.any
  4100d0:	mov	w20, w22
  4100d4:	mov	w22, w10
  4100d8:	b	4100ec <wcrtomb@plt+0xd48c>
  4100dc:	str	xzr, [x20]
  4100e0:	mov	w20, w22
  4100e4:	mov	w22, w26
  4100e8:	str	w22, [x25]
  4100ec:	ldr	x8, [x24]
  4100f0:	mov	w9, #0x1                   	// #1
  4100f4:	ldrb	w26, [x8]
  4100f8:	add	x1, x8, x9
  4100fc:	str	x1, [x24]
  410100:	ldr	x8, [x19]
  410104:	sub	x2, x8, x9
  410108:	str	x2, [x19]
  41010c:	cmp	w26, #0x2d
  410110:	b.ne	410358 <wcrtomb@plt+0xd6f8>  // b.any
  410114:	str	w20, [sp, #56]
  410118:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  41011c:	ldrb	w8, [x1]
  410120:	add	x8, x23, x8, lsl #2
  410124:	ldr	w11, [x8, #1308]
  410128:	cmn	w11, #0x1
  41012c:	b.ne	410178 <wcrtomb@plt+0xd518>  // b.any
  410130:	ldr	x20, [sp, #32]
  410134:	add	x0, sp, #0x3c
  410138:	mov	w26, w11
  41013c:	mov	x3, x20
  410140:	bl	415680 <wcrtomb@plt+0x12a20>
  410144:	sub	x8, x0, #0x1
  410148:	cmn	x8, #0x3
  41014c:	b.cs	410170 <wcrtomb@plt+0xd510>  // b.hs, b.nlast
  410150:	ldr	w11, [sp, #60]
  410154:	cmp	w0, #0x1
  410158:	str	w11, [x25]
  41015c:	b.eq	41017c <wcrtomb@plt+0xd51c>  // b.none
  410160:	ldr	x8, [x24]
  410164:	sxtw	x9, w0
  410168:	mov	w20, #0xffffffff            	// #-1
  41016c:	b	41029c <wcrtomb@plt+0xd63c>
  410170:	mov	w11, w26
  410174:	str	xzr, [x20]
  410178:	str	w11, [x25]
  41017c:	ldr	x8, [x24]
  410180:	mov	x1, x8
  410184:	ldrb	w20, [x1], #1
  410188:	str	x1, [x24]
  41018c:	ldr	x9, [x19]
  410190:	cmp	w20, #0x5d
  410194:	sub	x2, x9, #0x1
  410198:	str	x2, [x19]
  41019c:	b.eq	4101c0 <wcrtomb@plt+0xd560>  // b.none
  4101a0:	cmp	w20, #0x5c
  4101a4:	b.eq	4101d0 <wcrtomb@plt+0xd570>  // b.none
  4101a8:	cmp	w20, #0x5b
  4101ac:	b.ne	4102b0 <wcrtomb@plt+0xd650>  // b.any
  4101b0:	ldrb	w10, [x1]
  4101b4:	cmp	w10, #0x2e
  4101b8:	b.ne	410244 <wcrtomb@plt+0xd5e4>  // b.any
  4101bc:	str	wzr, [sp, #24]
  4101c0:	ldr	w20, [sp, #56]
  4101c4:	stp	x8, x9, [x23, #32]
  4101c8:	mov	w26, #0x2d                  	// #45
  4101cc:	b	410358 <wcrtomb@plt+0xd6f8>
  4101d0:	ldrb	w8, [x23, #448]
  4101d4:	tbnz	w8, #0, 4101f8 <wcrtomb@plt+0xd598>
  4101d8:	mov	w20, #0x5c                  	// #92
  4101dc:	b	4102b0 <wcrtomb@plt+0xd650>
  4101e0:	ldr	x8, [x24]
  4101e4:	sxtw	x9, w0
  4101e8:	mov	w26, #0xffffffff            	// #-1
  4101ec:	mov	w20, w22
  4101f0:	mov	w22, w10
  4101f4:	b	4100f8 <wcrtomb@plt+0xd498>
  4101f8:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  4101fc:	ldrb	w8, [x1]
  410200:	add	x8, x23, x8, lsl #2
  410204:	ldr	w11, [x8, #1308]
  410208:	cmn	w11, #0x1
  41020c:	b.ne	41028c <wcrtomb@plt+0xd62c>  // b.any
  410210:	ldr	x20, [sp, #32]
  410214:	add	x0, sp, #0x3c
  410218:	mov	w22, w11
  41021c:	mov	x3, x20
  410220:	bl	415680 <wcrtomb@plt+0x12a20>
  410224:	sub	x8, x0, #0x1
  410228:	cmn	x8, #0x3
  41022c:	b.cs	410284 <wcrtomb@plt+0xd624>  // b.hs, b.nlast
  410230:	ldr	w11, [sp, #60]
  410234:	cmp	w0, #0x1
  410238:	str	w11, [x25]
  41023c:	b.ne	410160 <wcrtomb@plt+0xd500>  // b.any
  410240:	b	410290 <wcrtomb@plt+0xd630>
  410244:	mov	w20, #0x5b                  	// #91
  410248:	b	4102b0 <wcrtomb@plt+0xd650>
  41024c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410250:	add	x20, x20, #0xd0
  410254:	b	410664 <wcrtomb@plt+0xda04>
  410258:	ldr	x8, [x24]
  41025c:	sxtw	x9, w0
  410260:	mov	w21, #0xffffffff            	// #-1
  410264:	mov	w20, w22
  410268:	b	410068 <wcrtomb@plt+0xd408>
  41026c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410270:	add	x20, x20, #0xe8
  410274:	b	410664 <wcrtomb@plt+0xda04>
  410278:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  41027c:	add	x20, x20, #0x100
  410280:	b	410664 <wcrtomb@plt+0xda04>
  410284:	mov	w11, w22
  410288:	str	xzr, [x20]
  41028c:	str	w11, [x25]
  410290:	ldr	x8, [x24]
  410294:	mov	w9, #0x1                   	// #1
  410298:	ldrb	w20, [x8]
  41029c:	add	x1, x8, x9
  4102a0:	str	x1, [x24]
  4102a4:	ldr	x8, [x19]
  4102a8:	sub	x2, x8, x9
  4102ac:	str	x2, [x19]
  4102b0:	cbz	x2, 410998 <wcrtomb@plt+0xdd38>
  4102b4:	ldrb	w8, [x1]
  4102b8:	add	x8, x23, x8, lsl #2
  4102bc:	ldr	w22, [x8, #1308]
  4102c0:	ldr	w8, [sp, #56]
  4102c4:	cmn	w22, #0x1
  4102c8:	orr	w8, w8, #0x8
  4102cc:	str	w8, [sp, #56]
  4102d0:	b.ne	410320 <wcrtomb@plt+0xd6c0>  // b.any
  4102d4:	ldr	x26, [sp, #32]
  4102d8:	add	x0, sp, #0x3c
  4102dc:	str	w11, [sp, #28]
  4102e0:	mov	x3, x26
  4102e4:	bl	415680 <wcrtomb@plt+0x12a20>
  4102e8:	sub	x8, x0, #0x1
  4102ec:	cmn	x8, #0x3
  4102f0:	b.cs	410318 <wcrtomb@plt+0xd6b8>  // b.hs, b.nlast
  4102f4:	ldr	w22, [sp, #60]
  4102f8:	ldr	w11, [sp, #28]
  4102fc:	cmp	w0, #0x1
  410300:	str	w22, [x25]
  410304:	b.eq	410324 <wcrtomb@plt+0xd6c4>  // b.none
  410308:	ldr	x8, [x24]
  41030c:	sxtw	x9, w0
  410310:	mov	w26, #0xffffffff            	// #-1
  410314:	b	410330 <wcrtomb@plt+0xd6d0>
  410318:	ldr	w11, [sp, #28]
  41031c:	str	xzr, [x26]
  410320:	str	w22, [x25]
  410324:	ldr	x8, [x24]
  410328:	mov	w9, #0x1                   	// #1
  41032c:	ldrb	w26, [x8]
  410330:	add	x8, x8, x9
  410334:	str	x8, [x24]
  410338:	ldr	x8, [x19]
  41033c:	cmn	w27, #0x1
  410340:	sub	x8, x8, x9
  410344:	str	x8, [x19]
  410348:	b.eq	410450 <wcrtomb@plt+0xd7f0>  // b.none
  41034c:	cmp	w27, w11
  410350:	b.ne	410450 <wcrtomb@plt+0xd7f0>  // b.any
  410354:	ldr	w20, [sp, #56]
  410358:	cmp	w21, #0x3a
  41035c:	mov	w8, #0x4                   	// #4
  410360:	mov	w9, #0x2                   	// #2
  410364:	csel	w8, w9, w8, eq  // eq = none
  410368:	ldrb	w9, [x23, #1048]
  41036c:	orr	w20, w20, w8
  410370:	cbz	w9, 4103a8 <wcrtomb@plt+0xd748>
  410374:	cmn	w27, #0x1
  410378:	b.eq	410448 <wcrtomb@plt+0xd7e8>  // b.none
  41037c:	ldrb	w8, [x23, #457]
  410380:	str	w22, [sp, #28]
  410384:	mov	w22, w20
  410388:	cbz	w8, 410488 <wcrtomb@plt+0xd828>
  41038c:	ldr	x1, [sp, #16]
  410390:	mov	w0, w27
  410394:	bl	41313c <wcrtomb@plt+0x104dc>
  410398:	str	w27, [sp, #60]
  41039c:	tbnz	w0, #31, 410514 <wcrtomb@plt+0xd8b4>
  4103a0:	add	w8, w0, #0x1
  4103a4:	b	410490 <wcrtomb@plt+0xd830>
  4103a8:	ldrb	w8, [x23, #457]
  4103ac:	cbz	w8, 40fc28 <wcrtomb@plt+0xcfc8>
  4103b0:	bl	4029e0 <__ctype_b_loc@plt>
  4103b4:	ldr	x8, [x0]
  4103b8:	ldrh	w8, [x8, w21, sxtw #1]
  4103bc:	tbz	w8, #10, 40fc28 <wcrtomb@plt+0xcfc8>
  4103c0:	add	w8, w21, #0x80
  4103c4:	mov	w27, w22
  4103c8:	mov	w22, w20
  4103cc:	cmp	w8, #0x17f
  4103d0:	b.hi	4103e4 <wcrtomb@plt+0xd784>  // b.pmore
  4103d4:	sxtw	x20, w21
  4103d8:	bl	402880 <__ctype_toupper_loc@plt>
  4103dc:	ldr	x8, [x0]
  4103e0:	ldr	w21, [x8, x20, lsl #2]
  4103e4:	mov	x20, xzr
  4103e8:	b	410414 <wcrtomb@plt+0xd7b4>
  4103ec:	ubfx	x8, x20, #6, #26
  4103f0:	lsl	x8, x8, #3
  4103f4:	ldr	x9, [x28, x8]
  4103f8:	mov	w10, #0x1                   	// #1
  4103fc:	lsl	x10, x10, x20
  410400:	orr	x9, x9, x10
  410404:	str	x9, [x28, x8]
  410408:	add	x20, x20, #0x1
  41040c:	cmp	x20, #0x100
  410410:	b.eq	410520 <wcrtomb@plt+0xd8c0>  // b.none
  410414:	add	w8, w20, #0x80
  410418:	cmp	w8, #0x180
  41041c:	b.cs	410438 <wcrtomb@plt+0xd7d8>  // b.hs, b.nlast
  410420:	bl	402880 <__ctype_toupper_loc@plt>
  410424:	ldr	x8, [x0]
  410428:	ldr	w8, [x8, x20, lsl #2]
  41042c:	cmp	w8, w21
  410430:	b.ne	410408 <wcrtomb@plt+0xd7a8>  // b.any
  410434:	b	4103ec <wcrtomb@plt+0xd78c>
  410438:	mov	w8, w20
  41043c:	cmp	w8, w21
  410440:	b.ne	410408 <wcrtomb@plt+0xd7a8>  // b.any
  410444:	b	4103ec <wcrtomb@plt+0xd78c>
  410448:	str	wzr, [sp, #24]
  41044c:	b	40fc44 <wcrtomb@plt+0xcfe4>
  410450:	ldrb	w8, [x23, #1049]
  410454:	cbnz	w8, 410478 <wcrtomb@plt+0xd818>
  410458:	sub	w8, w21, #0x30
  41045c:	and	w8, w8, #0xff
  410460:	cmp	w8, #0x9
  410464:	b.hi	410608 <wcrtomb@plt+0xd9a8>  // b.pmore
  410468:	sub	w8, w20, #0x30
  41046c:	and	w8, w8, #0xff
  410470:	cmp	w8, #0x9
  410474:	b.hi	410608 <wcrtomb@plt+0xd9a8>  // b.pmore
  410478:	cmp	w21, w20
  41047c:	b.le	41052c <wcrtomb@plt+0xd8cc>
  410480:	ldr	w20, [sp, #56]
  410484:	b	40fc44 <wcrtomb@plt+0xcfe4>
  410488:	str	w27, [sp, #60]
  41048c:	mov	w8, #0x1                   	// #1
  410490:	ldr	x21, [sp, #16]
  410494:	mov	w8, w8
  410498:	sub	x20, x8, #0x1
  41049c:	b	4104c8 <wcrtomb@plt+0xd868>
  4104a0:	lsr	w8, w0, #6
  4104a4:	lsl	x8, x8, #3
  4104a8:	ldr	x9, [x28, x8]
  4104ac:	mov	w10, #0x1                   	// #1
  4104b0:	lsl	x10, x10, x0
  4104b4:	orr	x9, x9, x10
  4104b8:	str	x9, [x28, x8]
  4104bc:	cbz	x20, 410514 <wcrtomb@plt+0xd8b4>
  4104c0:	ldr	w27, [x21], #4
  4104c4:	sub	x20, x20, #0x1
  4104c8:	mov	w0, w27
  4104cc:	bl	4026e0 <wctob@plt>
  4104d0:	tbz	w0, #31, 4104a0 <wcrtomb@plt+0xd840>
  4104d4:	ldp	x8, x9, [x23, #104]
  4104d8:	ldr	x0, [x23, #96]
  4104dc:	cmp	x9, x8
  4104e0:	b.gt	4104fc <wcrtomb@plt+0xd89c>
  4104e4:	ldr	x1, [sp, #40]
  4104e8:	mov	w2, #0x1                   	// #1
  4104ec:	mov	x3, #0xffffffffffffffff    	// #-1
  4104f0:	mov	w4, #0x4                   	// #4
  4104f4:	bl	40f91c <wcrtomb@plt+0xccbc>
  4104f8:	ldr	x8, [x23, #104]
  4104fc:	str	x0, [x23, #96]
  410500:	ldur	w9, [x21, #-4]
  410504:	add	x10, x8, #0x1
  410508:	str	x10, [x23, #104]
  41050c:	str	w9, [x0, x8, lsl #2]
  410510:	cbnz	x20, 4104c0 <wcrtomb@plt+0xd860>
  410514:	mov	w20, w22
  410518:	ldr	w22, [sp, #28]
  41051c:	b	40fc44 <wcrtomb@plt+0xcfe4>
  410520:	mov	w20, w22
  410524:	mov	w22, w27
  410528:	b	40fc44 <wcrtomb@plt+0xcfe4>
  41052c:	ldrb	w27, [x23, #457]
  410530:	sxtw	x21, w21
  410534:	sxtw	x20, w20
  410538:	str	w22, [sp, #28]
  41053c:	b	41056c <wcrtomb@plt+0xd90c>
  410540:	ubfx	x8, x21, #6, #26
  410544:	lsl	x8, x8, #3
  410548:	ldr	x9, [x28, x8]
  41054c:	mov	w10, #0x1                   	// #1
  410550:	lsl	x10, x10, x21
  410554:	orr	x9, x9, x10
  410558:	str	x9, [x28, x8]
  41055c:	ldr	x25, [sp, #48]
  410560:	cmp	x21, x20
  410564:	add	x21, x21, #0x1
  410568:	b.ge	410600 <wcrtomb@plt+0xd9a0>  // b.tcont
  41056c:	cbz	w27, 410540 <wcrtomb@plt+0xd8e0>
  410570:	bl	4029e0 <__ctype_b_loc@plt>
  410574:	ldr	x8, [x0]
  410578:	ldrh	w8, [x8, x21, lsl #1]
  41057c:	tbz	w8, #10, 410540 <wcrtomb@plt+0xd8e0>
  410580:	add	x8, x21, #0x80
  410584:	cmp	x8, #0x17f
  410588:	mov	w22, w21
  41058c:	b.hi	41059c <wcrtomb@plt+0xd93c>  // b.pmore
  410590:	bl	402880 <__ctype_toupper_loc@plt>
  410594:	ldr	x8, [x0]
  410598:	ldr	w22, [x8, x21, lsl #2]
  41059c:	mov	x25, xzr
  4105a0:	b	4105cc <wcrtomb@plt+0xd96c>
  4105a4:	ubfx	x8, x25, #6, #26
  4105a8:	lsl	x8, x8, #3
  4105ac:	ldr	x9, [x28, x8]
  4105b0:	mov	w10, #0x1                   	// #1
  4105b4:	lsl	x10, x10, x25
  4105b8:	orr	x9, x9, x10
  4105bc:	str	x9, [x28, x8]
  4105c0:	add	x25, x25, #0x1
  4105c4:	cmp	x25, #0x100
  4105c8:	b.eq	41055c <wcrtomb@plt+0xd8fc>  // b.none
  4105cc:	add	w8, w25, #0x80
  4105d0:	cmp	w8, #0x180
  4105d4:	b.cs	4105f0 <wcrtomb@plt+0xd990>  // b.hs, b.nlast
  4105d8:	bl	402880 <__ctype_toupper_loc@plt>
  4105dc:	ldr	x8, [x0]
  4105e0:	ldr	w8, [x8, x25, lsl #2]
  4105e4:	cmp	w8, w22
  4105e8:	b.ne	4105c0 <wcrtomb@plt+0xd960>  // b.any
  4105ec:	b	4105a4 <wcrtomb@plt+0xd944>
  4105f0:	mov	w8, w25
  4105f4:	cmp	w8, w22
  4105f8:	b.ne	4105c0 <wcrtomb@plt+0xd960>  // b.any
  4105fc:	b	4105a4 <wcrtomb@plt+0xd944>
  410600:	ldr	w20, [sp, #56]
  410604:	b	410518 <wcrtomb@plt+0xd8b8>
  410608:	ldr	w20, [sp, #56]
  41060c:	str	wzr, [sp, #24]
  410610:	b	40fc44 <wcrtomb@plt+0xcfe4>
  410614:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410618:	add	x20, x20, #0x118
  41061c:	b	410664 <wcrtomb@plt+0xda04>
  410620:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410624:	add	x20, x20, #0x130
  410628:	b	410664 <wcrtomb@plt+0xda04>
  41062c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410630:	add	x20, x20, #0x148
  410634:	b	410664 <wcrtomb@plt+0xda04>
  410638:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  41063c:	add	x20, x20, #0x160
  410640:	b	410664 <wcrtomb@plt+0xda04>
  410644:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410648:	add	x20, x20, #0x178
  41064c:	b	410664 <wcrtomb@plt+0xda04>
  410650:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410654:	add	x20, x20, #0x190
  410658:	b	410664 <wcrtomb@plt+0xda04>
  41065c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x115a8>
  410660:	add	x20, x20, #0x1a8
  410664:	ldrb	w8, [x23, #1048]
  410668:	cbz	w8, 410674 <wcrtomb@plt+0xda14>
  41066c:	ldrb	w8, [x20, #16]
  410670:	cbz	w8, 4106b8 <wcrtomb@plt+0xda58>
  410674:	mov	w22, wzr
  410678:	b	410688 <wcrtomb@plt+0xda28>
  41067c:	add	w22, w22, #0x1
  410680:	cmp	w22, #0x100
  410684:	b.eq	4106c8 <wcrtomb@plt+0xda68>  // b.none
  410688:	ldr	x8, [x20, #8]
  41068c:	mov	w0, w22
  410690:	blr	x8
  410694:	cbz	w0, 41067c <wcrtomb@plt+0xda1c>
  410698:	lsr	w8, w22, #6
  41069c:	lsl	x8, x8, #3
  4106a0:	ldr	x9, [x28, x8]
  4106a4:	mov	w10, #0x1                   	// #1
  4106a8:	lsl	x10, x10, x22
  4106ac:	orr	x9, x9, x10
  4106b0:	str	x9, [x28, x8]
  4106b4:	b	41067c <wcrtomb@plt+0xda1c>
  4106b8:	str	wzr, [sp, #24]
  4106bc:	ldr	w20, [sp, #56]
  4106c0:	cbnz	x27, 4106d4 <wcrtomb@plt+0xda74>
  4106c4:	b	410998 <wcrtomb@plt+0xdd38>
  4106c8:	ldr	x27, [x19]
  4106cc:	ldr	w20, [sp, #56]
  4106d0:	cbz	x27, 410998 <wcrtomb@plt+0xdd38>
  4106d4:	ldr	x1, [x23, #32]
  4106d8:	orr	w20, w20, #0x8
  4106dc:	ldrb	w8, [x1]
  4106e0:	add	x8, x23, x8, lsl #2
  4106e4:	ldr	w22, [x8, #1308]
  4106e8:	cmn	w22, #0x1
  4106ec:	b.ne	410734 <wcrtomb@plt+0xdad4>  // b.any
  4106f0:	mov	w21, w20
  4106f4:	ldr	x20, [sp, #32]
  4106f8:	sub	x0, x29, #0x14
  4106fc:	mov	x2, x27
  410700:	mov	x3, x20
  410704:	bl	415680 <wcrtomb@plt+0x12a20>
  410708:	sub	x8, x0, #0x1
  41070c:	cmn	x8, #0x3
  410710:	b.cs	41072c <wcrtomb@plt+0xdacc>  // b.hs, b.nlast
  410714:	ldur	w22, [x29, #-20]
  410718:	cmp	w0, #0x1
  41071c:	str	w22, [x25]
  410720:	b.ne	41075c <wcrtomb@plt+0xdafc>  // b.any
  410724:	mov	w20, w21
  410728:	b	410738 <wcrtomb@plt+0xdad8>
  41072c:	str	xzr, [x20]
  410730:	mov	w20, w21
  410734:	str	w22, [x25]
  410738:	ldr	x8, [x24]
  41073c:	mov	w9, #0x1                   	// #1
  410740:	ldrb	w26, [x8]
  410744:	add	x8, x8, x9
  410748:	str	x8, [x24]
  41074c:	ldr	x8, [x19]
  410750:	sub	x8, x8, x9
  410754:	str	x8, [x19]
  410758:	b	40fc44 <wcrtomb@plt+0xcfe4>
  41075c:	ldr	x8, [x24]
  410760:	sxtw	x9, w0
  410764:	mov	w26, #0xffffffff            	// #-1
  410768:	mov	w20, w21
  41076c:	b	410744 <wcrtomb@plt+0xdae4>
  410770:	cmp	w20, #0x7
  410774:	b.ne	410790 <wcrtomb@plt+0xdb30>  // b.any
  410778:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41077c:	add	x1, x1, #0x468
  410780:	mov	w2, #0x5                   	// #5
  410784:	mov	x0, xzr
  410788:	bl	402b40 <dcgettext@plt>
  41078c:	bl	40a61c <wcrtomb@plt+0x79bc>
  410790:	ldr	w9, [sp, #12]
  410794:	ldr	w8, [sp, #24]
  410798:	tbz	w8, #0, 410830 <wcrtomb@plt+0xdbd0>
  41079c:	ldrb	w8, [x23, #1048]
  4107a0:	cbz	w8, 410838 <wcrtomb@plt+0xdbd8>
  4107a4:	cmp	w9, #0x5e
  4107a8:	b.eq	4107b4 <wcrtomb@plt+0xdb54>  // b.none
  4107ac:	ldr	x8, [x23, #104]
  4107b0:	cbz	x8, 41086c <wcrtomb@plt+0xdc0c>
  4107b4:	ldr	w8, [sp, #8]
  4107b8:	strb	w8, [x23, #88]
  4107bc:	sub	x8, x29, #0x40
  4107c0:	ldp	x9, x10, [x8]
  4107c4:	ldp	x11, x12, [x8, #16]
  4107c8:	orr	x8, x10, x9
  4107cc:	orr	x8, x8, x11
  4107d0:	orr	x8, x8, x12
  4107d4:	cbz	x8, 4108d0 <wcrtomb@plt+0xdc70>
  4107d8:	ldr	x8, [x23, #8]
  4107dc:	cmp	x8, #0x0
  4107e0:	b.le	410928 <wcrtomb@plt+0xdcc8>
  4107e4:	ldr	x0, [x23]
  4107e8:	mov	x19, xzr
  4107ec:	add	x13, x0, #0x10
  4107f0:	ldp	x14, x15, [x13, #-16]
  4107f4:	ldp	x16, x17, [x13]
  4107f8:	eor	x14, x14, x9
  4107fc:	eor	x15, x15, x10
  410800:	eor	x16, x16, x11
  410804:	orr	x14, x15, x14
  410808:	orr	x14, x14, x16
  41080c:	eor	x15, x17, x12
  410810:	orr	x14, x14, x15
  410814:	cbz	x14, 410970 <wcrtomb@plt+0xdd10>
  410818:	add	x19, x19, #0x1
  41081c:	cmp	x8, x19
  410820:	add	x13, x13, #0x20
  410824:	b.ne	4107f0 <wcrtomb@plt+0xdb90>  // b.any
  410828:	mov	x19, x8
  41082c:	b	410930 <wcrtomb@plt+0xdcd0>
  410830:	mov	w0, #0x112                 	// #274
  410834:	b	410978 <wcrtomb@plt+0xdd18>
  410838:	cmp	w9, #0x5e
  41083c:	b.ne	41086c <wcrtomb@plt+0xdc0c>  // b.any
  410840:	sub	x8, x29, #0x40
  410844:	ldp	q0, q1, [x8]
  410848:	sub	x9, x29, #0x40
  41084c:	mvn	v0.16b, v0.16b
  410850:	mvn	v1.16b, v1.16b
  410854:	stp	q0, q1, [x8]
  410858:	ldrb	w8, [x23, #449]
  41085c:	tbz	w8, #0, 41086c <wcrtomb@plt+0xdc0c>
  410860:	fmov	x8, d0
  410864:	and	x8, x8, #0xfffffffffffffbff
  410868:	str	x8, [x9]
  41086c:	ldr	x8, [x23, #8]
  410870:	cmp	x8, #0x0
  410874:	b.le	4108d8 <wcrtomb@plt+0xdc78>
  410878:	ldr	x0, [x23]
  41087c:	sub	x12, x29, #0x40
  410880:	ldp	x9, x10, [x12]
  410884:	ldp	x11, x12, [x12, #16]
  410888:	mov	x19, xzr
  41088c:	add	x13, x0, #0x10
  410890:	ldp	x14, x15, [x13, #-16]
  410894:	ldp	x16, x17, [x13]
  410898:	eor	x14, x14, x9
  41089c:	eor	x15, x15, x10
  4108a0:	eor	x16, x16, x11
  4108a4:	orr	x14, x15, x14
  4108a8:	orr	x14, x14, x16
  4108ac:	eor	x15, x17, x12
  4108b0:	orr	x14, x14, x15
  4108b4:	cbz	x14, 410920 <wcrtomb@plt+0xdcc0>
  4108b8:	add	x19, x19, #0x1
  4108bc:	cmp	x8, x19
  4108c0:	add	x13, x13, #0x20
  4108c4:	b.ne	410890 <wcrtomb@plt+0xdc30>  // b.any
  4108c8:	mov	x19, x8
  4108cc:	b	4108e0 <wcrtomb@plt+0xdc80>
  4108d0:	mov	x19, #0xffffffffffffffff    	// #-1
  4108d4:	b	410970 <wcrtomb@plt+0xdd10>
  4108d8:	ldr	x0, [x23]
  4108dc:	mov	x19, xzr
  4108e0:	mov	x1, x23
  4108e4:	ldr	x9, [x1, #16]!
  4108e8:	cmp	x9, x8
  4108ec:	b.gt	410908 <wcrtomb@plt+0xdca8>
  4108f0:	mov	x3, #0xfffffffffffffeeb    	// #-277
  4108f4:	mov	w2, #0x1                   	// #1
  4108f8:	movk	x3, #0x7fff, lsl #48
  4108fc:	mov	w4, #0x20                  	// #32
  410900:	bl	40f91c <wcrtomb@plt+0xccbc>
  410904:	ldr	x8, [x23, #8]
  410908:	add	x8, x8, #0x1
  41090c:	stp	x0, x8, [x23]
  410910:	sub	x8, x29, #0x40
  410914:	ldp	q1, q0, [x8]
  410918:	add	x8, x0, x19, lsl #5
  41091c:	stp	q1, q0, [x8]
  410920:	add	x0, x19, #0x114
  410924:	b	410978 <wcrtomb@plt+0xdd18>
  410928:	ldr	x0, [x23]
  41092c:	mov	x19, xzr
  410930:	mov	x1, x23
  410934:	ldr	x9, [x1, #16]!
  410938:	cmp	x9, x8
  41093c:	b.gt	410958 <wcrtomb@plt+0xdcf8>
  410940:	mov	x3, #0xfffffffffffffeeb    	// #-277
  410944:	mov	w2, #0x1                   	// #1
  410948:	movk	x3, #0x7fff, lsl #48
  41094c:	mov	w4, #0x20                  	// #32
  410950:	bl	40f91c <wcrtomb@plt+0xccbc>
  410954:	ldr	x8, [x23, #8]
  410958:	add	x8, x8, #0x1
  41095c:	stp	x0, x8, [x23]
  410960:	sub	x8, x29, #0x40
  410964:	ldp	q1, q0, [x8]
  410968:	add	x8, x0, x19, lsl #5
  41096c:	stp	q1, q0, [x8]
  410970:	str	x19, [x23, #80]
  410974:	mov	w0, #0x113                 	// #275
  410978:	ldp	x20, x19, [sp, #336]
  41097c:	ldp	x22, x21, [sp, #320]
  410980:	ldp	x24, x23, [sp, #304]
  410984:	ldp	x26, x25, [sp, #288]
  410988:	ldp	x28, x27, [sp, #272]
  41098c:	ldp	x29, x30, [sp, #256]
  410990:	add	sp, sp, #0x160
  410994:	ret
  410998:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41099c:	add	x1, x1, #0x49d
  4109a0:	mov	w2, #0x5                   	// #5
  4109a4:	mov	x0, xzr
  4109a8:	bl	402b40 <dcgettext@plt>
  4109ac:	bl	40a604 <wcrtomb@plt+0x79a4>
  4109b0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4109b4:	add	x1, x1, #0x450
  4109b8:	b	4109a0 <wcrtomb@plt+0xdd40>
  4109bc:	sub	sp, sp, #0xd0
  4109c0:	stp	x29, x30, [sp, #128]
  4109c4:	stp	x26, x25, [sp, #144]
  4109c8:	stp	x24, x23, [sp, #160]
  4109cc:	stp	x22, x21, [sp, #176]
  4109d0:	stp	x20, x19, [sp, #192]
  4109d4:	ldr	x1, [x0, #128]
  4109d8:	mov	x19, x0
  4109dc:	add	x29, sp, #0x80
  4109e0:	cmp	x1, #0x100
  4109e4:	b.cc	4109fc <wcrtomb@plt+0xdd9c>  // b.lo, b.ul, b.last
  4109e8:	cmp	x1, #0x113
  4109ec:	b.gt	4109fc <wcrtomb@plt+0xdd9c>
  4109f0:	sub	x8, x1, #0x10b
  4109f4:	cmp	x8, #0x9
  4109f8:	b.cs	410c44 <wcrtomb@plt+0xdfe4>  // b.hs, b.nlast
  4109fc:	mov	x0, x19
  410a00:	bl	40c48c <wcrtomb@plt+0x982c>
  410a04:	mov	x0, x19
  410a08:	bl	40c620 <wcrtomb@plt+0x99c0>
  410a0c:	mov	x1, x0
  410a10:	str	x0, [x19, #128]
  410a14:	sub	x8, x1, #0x101
  410a18:	cmp	x8, #0x3
  410a1c:	b.ls	410a60 <wcrtomb@plt+0xde00>  // b.plast
  410a20:	ldp	x20, x19, [sp, #192]
  410a24:	ldp	x22, x21, [sp, #176]
  410a28:	ldp	x24, x23, [sp, #160]
  410a2c:	ldp	x26, x25, [sp, #144]
  410a30:	ldp	x29, x30, [sp, #128]
  410a34:	add	sp, sp, #0xd0
  410a38:	ret
  410a3c:	mov	x0, x19
  410a40:	bl	40c48c <wcrtomb@plt+0x982c>
  410a44:	mov	x0, x19
  410a48:	bl	40c620 <wcrtomb@plt+0x99c0>
  410a4c:	mov	x1, x0
  410a50:	str	x0, [x19, #128]
  410a54:	sub	x8, x1, #0x101
  410a58:	cmp	x8, #0x4
  410a5c:	b.cs	410a20 <wcrtomb@plt+0xddc0>  // b.hs, b.nlast
  410a60:	cmp	x1, #0x104
  410a64:	b.ne	410a3c <wcrtomb@plt+0xdddc>  // b.any
  410a68:	ldr	x21, [x19, #152]
  410a6c:	ldp	w23, w24, [x19, #64]
  410a70:	mov	x0, x19
  410a74:	mov	x1, x21
  410a78:	orr	w25, w23, w24
  410a7c:	bl	4110f0 <wcrtomb@plt+0xe490>
  410a80:	sub	x22, x21, x0
  410a84:	cbz	w25, 410b3c <wcrtomb@plt+0xdedc>
  410a88:	mov	x20, x0
  410a8c:	tbnz	w24, #31, 410c14 <wcrtomb@plt+0xdfb4>
  410a90:	cbz	w23, 410c2c <wcrtomb@plt+0xdfcc>
  410a94:	cmp	w23, #0x2
  410a98:	lsl	x21, x21, #3
  410a9c:	b.lt	410b5c <wcrtomb@plt+0xdefc>  // b.tstop
  410aa0:	neg	x24, x20
  410aa4:	mov	w23, #0x1                   	// #1
  410aa8:	b	410acc <wcrtomb@plt+0xde6c>
  410aac:	mov	w1, #0x105                 	// #261
  410ab0:	mov	w2, #0x3                   	// #3
  410ab4:	mov	x0, x19
  410ab8:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410abc:	ldr	w8, [x19, #64]
  410ac0:	add	w23, w23, #0x1
  410ac4:	cmp	w23, w8
  410ac8:	b.ge	410b60 <wcrtomb@plt+0xdf00>  // b.tcont
  410acc:	ldrb	w8, [x19, #1048]
  410ad0:	cbz	w8, 410b0c <wcrtomb@plt+0xdeac>
  410ad4:	cmp	x20, #0x1
  410ad8:	mov	x25, x20
  410adc:	mov	x26, x22
  410ae0:	b.lt	410aac <wcrtomb@plt+0xde4c>  // b.tstop
  410ae4:	ldr	x8, [x19, #144]
  410ae8:	ldr	x9, [x19, #280]
  410aec:	mov	x0, x19
  410af0:	ldr	x1, [x8, x26, lsl #3]
  410af4:	ldrb	w2, [x9, x26]
  410af8:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410afc:	subs	x25, x25, #0x1
  410b00:	add	x26, x26, #0x1
  410b04:	b.ne	410ae4 <wcrtomb@plt+0xde84>  // b.any
  410b08:	b	410aac <wcrtomb@plt+0xde4c>
  410b0c:	cmp	x20, #0x1
  410b10:	mov	x25, x24
  410b14:	b.lt	410aac <wcrtomb@plt+0xde4c>  // b.tstop
  410b18:	ldr	x8, [x19, #144]
  410b1c:	mov	w2, #0x3                   	// #3
  410b20:	mov	x0, x19
  410b24:	add	x8, x8, x21
  410b28:	ldr	x1, [x8, x25, lsl #3]
  410b2c:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410b30:	adds	x25, x25, #0x1
  410b34:	b.cc	410b18 <wcrtomb@plt+0xdeb8>  // b.lo, b.ul, b.last
  410b38:	b	410aac <wcrtomb@plt+0xde4c>
  410b3c:	mov	x0, x19
  410b40:	str	x22, [x19, #152]
  410b44:	bl	40c620 <wcrtomb@plt+0x99c0>
  410b48:	str	x0, [x19, #128]
  410b4c:	mov	x0, x19
  410b50:	bl	4109bc <wcrtomb@plt+0xdd5c>
  410b54:	ldr	x1, [x19, #128]
  410b58:	b	410a54 <wcrtomb@plt+0xddf4>
  410b5c:	mov	w23, #0x1                   	// #1
  410b60:	ldr	w8, [x19, #68]
  410b64:	cmp	w23, w8
  410b68:	b.ge	410a44 <wcrtomb@plt+0xdde4>  // b.tcont
  410b6c:	neg	x24, x20
  410b70:	b	410ba4 <wcrtomb@plt+0xdf44>
  410b74:	mov	w1, #0x101                 	// #257
  410b78:	mov	w2, #0x3                   	// #3
  410b7c:	mov	x0, x19
  410b80:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410b84:	mov	w1, #0x105                 	// #261
  410b88:	mov	w2, #0x3                   	// #3
  410b8c:	mov	x0, x19
  410b90:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410b94:	ldr	w8, [x19, #68]
  410b98:	add	w23, w23, #0x1
  410b9c:	cmp	w23, w8
  410ba0:	b.ge	410a44 <wcrtomb@plt+0xdde4>  // b.tcont
  410ba4:	ldrb	w8, [x19, #1048]
  410ba8:	cbz	w8, 410be4 <wcrtomb@plt+0xdf84>
  410bac:	cmp	x20, #0x1
  410bb0:	mov	x25, x20
  410bb4:	mov	x26, x22
  410bb8:	b.lt	410b74 <wcrtomb@plt+0xdf14>  // b.tstop
  410bbc:	ldr	x8, [x19, #144]
  410bc0:	ldr	x9, [x19, #280]
  410bc4:	mov	x0, x19
  410bc8:	ldr	x1, [x8, x26, lsl #3]
  410bcc:	ldrb	w2, [x9, x26]
  410bd0:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410bd4:	subs	x25, x25, #0x1
  410bd8:	add	x26, x26, #0x1
  410bdc:	b.ne	410bbc <wcrtomb@plt+0xdf5c>  // b.any
  410be0:	b	410b74 <wcrtomb@plt+0xdf14>
  410be4:	cmp	x20, #0x1
  410be8:	mov	x25, x24
  410bec:	b.lt	410b74 <wcrtomb@plt+0xdf14>  // b.tstop
  410bf0:	ldr	x8, [x19, #144]
  410bf4:	mov	w2, #0x3                   	// #3
  410bf8:	mov	x0, x19
  410bfc:	add	x8, x8, x21
  410c00:	ldr	x1, [x8, x25, lsl #3]
  410c04:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410c08:	adds	x25, x25, #0x1
  410c0c:	b.cc	410bf0 <wcrtomb@plt+0xdf90>  // b.lo, b.ul, b.last
  410c10:	b	410b74 <wcrtomb@plt+0xdf14>
  410c14:	mov	w1, #0x103                 	// #259
  410c18:	mov	w2, #0x3                   	// #3
  410c1c:	mov	x0, x19
  410c20:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410c24:	ldr	w23, [x19, #64]
  410c28:	cbnz	w23, 410a94 <wcrtomb@plt+0xde34>
  410c2c:	mov	w1, #0x101                 	// #257
  410c30:	mov	w2, #0x3                   	// #3
  410c34:	mov	x0, x19
  410c38:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410c3c:	ldr	w23, [x19, #64]
  410c40:	b	410a94 <wcrtomb@plt+0xde34>
  410c44:	cmp	x1, #0x107
  410c48:	b.eq	410cd4 <wcrtomb@plt+0xe074>  // b.none
  410c4c:	cmp	x1, #0x109
  410c50:	b.eq	410d88 <wcrtomb@plt+0xe128>  // b.none
  410c54:	cmp	x1, #0x10a
  410c58:	b.ne	410de8 <wcrtomb@plt+0xe188>  // b.any
  410c5c:	ldrb	w8, [x19, #1050]
  410c60:	cbz	w8, 4109fc <wcrtomb@plt+0xdd9c>
  410c64:	ldr	x1, [x19, #200]
  410c68:	cbnz	x1, 410f34 <wcrtomb@plt+0xe2d4>
  410c6c:	ldr	x9, [x19, #448]
  410c70:	ldr	x8, [x19, #8]
  410c74:	mov	x10, #0xfffffffffffffbff    	// #-1025
  410c78:	tst	x9, #0x40
  410c7c:	csinv	x10, x10, xzr, eq  // eq = none
  410c80:	tst	x9, #0x80
  410c84:	and	x9, x10, #0xfffffffffffffffe
  410c88:	csel	x20, x10, x9, eq  // eq = none
  410c8c:	cmp	x8, #0x0
  410c90:	b.le	410e08 <wcrtomb@plt+0xe1a8>
  410c94:	ldr	x0, [x19]
  410c98:	mov	x21, xzr
  410c9c:	add	x9, x0, #0x10
  410ca0:	ldp	x10, x11, [x9, #-16]
  410ca4:	ldp	x12, x13, [x9]
  410ca8:	eor	x10, x10, x20
  410cac:	orn	x10, x10, x11
  410cb0:	orr	x10, x10, x12
  410cb4:	orr	x10, x10, x13
  410cb8:	cbz	x10, 410e50 <wcrtomb@plt+0xe1f0>
  410cbc:	add	x21, x21, #0x1
  410cc0:	cmp	x8, x21
  410cc4:	add	x9, x9, #0x20
  410cc8:	b.ne	410ca0 <wcrtomb@plt+0xe040>  // b.any
  410ccc:	mov	x21, x8
  410cd0:	b	410e10 <wcrtomb@plt+0xe1b0>
  410cd4:	mov	x0, x19
  410cd8:	bl	40c620 <wcrtomb@plt+0x99c0>
  410cdc:	str	x0, [x19, #128]
  410ce0:	mov	x0, x19
  410ce4:	bl	4109bc <wcrtomb@plt+0xdd5c>
  410ce8:	ldr	x8, [x19, #128]
  410cec:	cmp	x8, #0x106
  410cf0:	b.eq	410d30 <wcrtomb@plt+0xe0d0>  // b.none
  410cf4:	cmp	x8, #0x108
  410cf8:	b.eq	410d30 <wcrtomb@plt+0xe0d0>  // b.none
  410cfc:	tbnz	x8, #63, 410d30 <wcrtomb@plt+0xe0d0>
  410d00:	mov	x0, x19
  410d04:	bl	4109bc <wcrtomb@plt+0xdd5c>
  410d08:	mov	w1, #0x105                 	// #261
  410d0c:	mov	w2, #0x3                   	// #3
  410d10:	mov	x0, x19
  410d14:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410d18:	b	410ce8 <wcrtomb@plt+0xe088>
  410d1c:	mov	w1, #0x106                 	// #262
  410d20:	mov	w2, #0x3                   	// #3
  410d24:	mov	x0, x19
  410d28:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410d2c:	ldr	x8, [x19, #128]
  410d30:	cmp	x8, #0x108
  410d34:	b.eq	410a04 <wcrtomb@plt+0xdda4>  // b.none
  410d38:	cmp	x8, #0x106
  410d3c:	b.ne	4110d8 <wcrtomb@plt+0xe478>  // b.any
  410d40:	mov	x0, x19
  410d44:	bl	40c620 <wcrtomb@plt+0x99c0>
  410d48:	str	x0, [x19, #128]
  410d4c:	mov	x0, x19
  410d50:	bl	4109bc <wcrtomb@plt+0xdd5c>
  410d54:	ldr	x8, [x19, #128]
  410d58:	cmp	x8, #0x106
  410d5c:	b.eq	410d1c <wcrtomb@plt+0xe0bc>  // b.none
  410d60:	cmp	x8, #0x108
  410d64:	b.eq	410d1c <wcrtomb@plt+0xe0bc>  // b.none
  410d68:	tbnz	x8, #63, 410d1c <wcrtomb@plt+0xe0bc>
  410d6c:	mov	x0, x19
  410d70:	bl	4109bc <wcrtomb@plt+0xdd5c>
  410d74:	mov	w1, #0x105                 	// #261
  410d78:	mov	w2, #0x3                   	// #3
  410d7c:	mov	x0, x19
  410d80:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410d84:	b	410d54 <wcrtomb@plt+0xe0f4>
  410d88:	ldr	w1, [x19, #72]
  410d8c:	cmn	w1, #0x1
  410d90:	b.eq	410e00 <wcrtomb@plt+0xe1a0>  // b.none
  410d94:	mov	x0, x19
  410d98:	bl	40f754 <wcrtomb@plt+0xcaf4>
  410d9c:	ldrb	w8, [x19, #457]
  410da0:	cbz	w8, 410a04 <wcrtomb@plt+0xdda4>
  410da4:	ldr	w0, [x19, #72]
  410da8:	mov	x1, sp
  410dac:	bl	41313c <wcrtomb@plt+0x104dc>
  410db0:	cmp	w0, #0x1
  410db4:	b.lt	410a04 <wcrtomb@plt+0xdda4>  // b.tstop
  410db8:	mov	w20, w0
  410dbc:	mov	x21, sp
  410dc0:	ldr	w1, [x21], #4
  410dc4:	mov	x0, x19
  410dc8:	bl	40f754 <wcrtomb@plt+0xcaf4>
  410dcc:	mov	w1, #0x106                 	// #262
  410dd0:	mov	w2, #0x3                   	// #3
  410dd4:	mov	x0, x19
  410dd8:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410ddc:	subs	x20, x20, #0x1
  410de0:	b.ne	410dc0 <wcrtomb@plt+0xe160>  // b.any
  410de4:	b	410a04 <wcrtomb@plt+0xdda4>
  410de8:	mov	w1, #0x100                 	// #256
  410dec:	mov	w2, #0x3                   	// #3
  410df0:	mov	x0, x19
  410df4:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410df8:	ldr	x1, [x19, #128]
  410dfc:	b	410a14 <wcrtomb@plt+0xddb4>
  410e00:	mov	w1, #0x112                 	// #274
  410e04:	b	4110c8 <wcrtomb@plt+0xe468>
  410e08:	ldr	x0, [x19]
  410e0c:	mov	x21, xzr
  410e10:	mov	x1, x19
  410e14:	ldr	x9, [x1, #16]!
  410e18:	cmp	x9, x8
  410e1c:	b.gt	410e38 <wcrtomb@plt+0xe1d8>
  410e20:	mov	x3, #0xfffffffffffffeeb    	// #-277
  410e24:	mov	w2, #0x1                   	// #1
  410e28:	movk	x3, #0x7fff, lsl #48
  410e2c:	mov	w4, #0x20                  	// #32
  410e30:	bl	40f91c <wcrtomb@plt+0xccbc>
  410e34:	ldr	x8, [x19, #8]
  410e38:	add	x8, x8, #0x1
  410e3c:	add	x9, x0, x21, lsl #5
  410e40:	mov	x10, #0xffffffffffffffff    	// #-1
  410e44:	stp	x0, x8, [x19]
  410e48:	stp	x20, x10, [x9]
  410e4c:	stp	xzr, xzr, [x9, #16]
  410e50:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x115a8>
  410e54:	add	x8, x21, #0x114
  410e58:	add	x20, x19, #0x10
  410e5c:	mov	w21, #0x1                   	// #1
  410e60:	add	x22, x22, #0x1f0
  410e64:	str	x8, [x19, #200]
  410e68:	b	410e98 <wcrtomb@plt+0xe238>
  410e6c:	ldp	q0, q1, [x23]
  410e70:	add	x8, x8, #0x1
  410e74:	add	x9, x0, x24, lsl #5
  410e78:	stp	x0, x8, [x19]
  410e7c:	stp	q0, q1, [x9]
  410e80:	add	x9, x19, x21, lsl #3
  410e84:	add	x21, x21, #0x1
  410e88:	add	x8, x24, #0x114
  410e8c:	cmp	x21, #0x9
  410e90:	str	x8, [x9, #200]
  410e94:	b.eq	410f30 <wcrtomb@plt+0xe2d0>  // b.none
  410e98:	ldr	x8, [x19, #8]
  410e9c:	add	x23, x22, x21, lsl #5
  410ea0:	cmp	x8, #0x0
  410ea4:	b.le	410efc <wcrtomb@plt+0xe29c>
  410ea8:	ldr	x0, [x19]
  410eac:	ldp	x9, x10, [x23]
  410eb0:	ldp	x11, x12, [x23, #16]
  410eb4:	mov	x24, xzr
  410eb8:	add	x13, x0, #0x10
  410ebc:	ldp	x14, x15, [x13, #-16]
  410ec0:	ldp	x16, x17, [x13]
  410ec4:	eor	x14, x14, x9
  410ec8:	eor	x15, x15, x10
  410ecc:	eor	x16, x16, x11
  410ed0:	orr	x14, x15, x14
  410ed4:	orr	x14, x14, x16
  410ed8:	eor	x15, x17, x12
  410edc:	orr	x14, x14, x15
  410ee0:	cbz	x14, 410e80 <wcrtomb@plt+0xe220>
  410ee4:	add	x24, x24, #0x1
  410ee8:	cmp	x8, x24
  410eec:	add	x13, x13, #0x20
  410ef0:	b.ne	410ebc <wcrtomb@plt+0xe25c>  // b.any
  410ef4:	mov	x24, x8
  410ef8:	b	410f04 <wcrtomb@plt+0xe2a4>
  410efc:	ldr	x0, [x19]
  410f00:	mov	x24, xzr
  410f04:	ldr	x9, [x20]
  410f08:	cmp	x9, x8
  410f0c:	b.gt	410e6c <wcrtomb@plt+0xe20c>
  410f10:	mov	x3, #0xfffffffffffffeeb    	// #-277
  410f14:	mov	w2, #0x1                   	// #1
  410f18:	movk	x3, #0x7fff, lsl #48
  410f1c:	mov	w4, #0x20                  	// #32
  410f20:	mov	x1, x20
  410f24:	bl	40f91c <wcrtomb@plt+0xccbc>
  410f28:	ldr	x8, [x19, #8]
  410f2c:	b	410e6c <wcrtomb@plt+0xe20c>
  410f30:	ldr	x1, [x19, #200]
  410f34:	mov	x0, x19
  410f38:	bl	40c48c <wcrtomb@plt+0x982c>
  410f3c:	ldr	x1, [x19, #208]
  410f40:	mov	x0, x19
  410f44:	bl	40c48c <wcrtomb@plt+0x982c>
  410f48:	mov	w1, #0xe0                  	// #224
  410f4c:	mov	w2, #0x3                   	// #3
  410f50:	mov	x0, x19
  410f54:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410f58:	ldr	x1, [x19, #224]
  410f5c:	mov	x0, x19
  410f60:	bl	40c48c <wcrtomb@plt+0x982c>
  410f64:	mov	w1, #0x105                 	// #261
  410f68:	mov	w2, #0x3                   	// #3
  410f6c:	mov	x0, x19
  410f70:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410f74:	mov	w1, #0x106                 	// #262
  410f78:	mov	w2, #0x3                   	// #3
  410f7c:	mov	x0, x19
  410f80:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410f84:	mov	w1, #0xed                  	// #237
  410f88:	mov	w2, #0x3                   	// #3
  410f8c:	mov	x0, x19
  410f90:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410f94:	ldr	x1, [x19, #240]
  410f98:	mov	x0, x19
  410f9c:	bl	40c48c <wcrtomb@plt+0x982c>
  410fa0:	mov	w1, #0x105                 	// #261
  410fa4:	mov	w2, #0x3                   	// #3
  410fa8:	mov	x0, x19
  410fac:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410fb0:	mov	w1, #0x106                 	// #262
  410fb4:	mov	w2, #0x3                   	// #3
  410fb8:	mov	x0, x19
  410fbc:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410fc0:	ldr	x1, [x19, #232]
  410fc4:	mov	x0, x19
  410fc8:	bl	40c48c <wcrtomb@plt+0x982c>
  410fcc:	mov	w1, #0xf0                  	// #240
  410fd0:	mov	w2, #0x3                   	// #3
  410fd4:	mov	x0, x19
  410fd8:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410fdc:	ldr	x1, [x19, #248]
  410fe0:	mov	x0, x19
  410fe4:	bl	40c48c <wcrtomb@plt+0x982c>
  410fe8:	mov	w1, #0x105                 	// #261
  410fec:	mov	w2, #0x3                   	// #3
  410ff0:	mov	x0, x19
  410ff4:	bl	40f81c <wcrtomb@plt+0xcbbc>
  410ff8:	mov	w1, #0x106                 	// #262
  410ffc:	mov	w2, #0x3                   	// #3
  411000:	mov	x0, x19
  411004:	bl	40f81c <wcrtomb@plt+0xcbbc>
  411008:	mov	w1, #0xf4                  	// #244
  41100c:	mov	w2, #0x3                   	// #3
  411010:	mov	x0, x19
  411014:	bl	40f81c <wcrtomb@plt+0xcbbc>
  411018:	ldr	x1, [x19, #264]
  41101c:	mov	x0, x19
  411020:	bl	40c48c <wcrtomb@plt+0x982c>
  411024:	mov	w1, #0x105                 	// #261
  411028:	mov	w2, #0x3                   	// #3
  41102c:	mov	x0, x19
  411030:	bl	40f81c <wcrtomb@plt+0xcbbc>
  411034:	mov	w1, #0x106                 	// #262
  411038:	mov	w2, #0x3                   	// #3
  41103c:	mov	x0, x19
  411040:	bl	40f81c <wcrtomb@plt+0xcbbc>
  411044:	ldr	x1, [x19, #256]
  411048:	mov	x0, x19
  41104c:	bl	40c48c <wcrtomb@plt+0x982c>
  411050:	ldr	x1, [x19, #216]
  411054:	mov	x0, x19
  411058:	bl	40c48c <wcrtomb@plt+0x982c>
  41105c:	mov	w1, #0x105                 	// #261
  411060:	mov	w2, #0x3                   	// #3
  411064:	mov	x0, x19
  411068:	bl	40f81c <wcrtomb@plt+0xcbbc>
  41106c:	mov	w1, #0x106                 	// #262
  411070:	mov	w2, #0x3                   	// #3
  411074:	mov	x0, x19
  411078:	bl	40f81c <wcrtomb@plt+0xcbbc>
  41107c:	ldr	x1, [x19, #216]
  411080:	mov	x0, x19
  411084:	bl	40c48c <wcrtomb@plt+0x982c>
  411088:	mov	w1, #0x105                 	// #261
  41108c:	mov	w2, #0x3                   	// #3
  411090:	mov	x0, x19
  411094:	bl	40f81c <wcrtomb@plt+0xcbbc>
  411098:	mov	w1, #0x106                 	// #262
  41109c:	mov	w2, #0x3                   	// #3
  4110a0:	mov	x0, x19
  4110a4:	bl	40f81c <wcrtomb@plt+0xcbbc>
  4110a8:	ldr	x1, [x19, #216]
  4110ac:	mov	x0, x19
  4110b0:	bl	40c48c <wcrtomb@plt+0x982c>
  4110b4:	mov	w1, #0x105                 	// #261
  4110b8:	mov	w2, #0x3                   	// #3
  4110bc:	mov	x0, x19
  4110c0:	bl	40f81c <wcrtomb@plt+0xcbbc>
  4110c4:	mov	w1, #0x106                 	// #262
  4110c8:	mov	w2, #0x3                   	// #3
  4110cc:	mov	x0, x19
  4110d0:	bl	40f81c <wcrtomb@plt+0xcbbc>
  4110d4:	b	410a04 <wcrtomb@plt+0xdda4>
  4110d8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4110dc:	add	x1, x1, #0x4db
  4110e0:	mov	w2, #0x5                   	// #5
  4110e4:	mov	x0, xzr
  4110e8:	bl	402b40 <dcgettext@plt>
  4110ec:	bl	40a604 <wcrtomb@plt+0x79a4>
  4110f0:	stp	x29, x30, [sp, #-48]!
  4110f4:	stp	x20, x19, [sp, #32]
  4110f8:	ldr	x8, [x0, #144]
  4110fc:	sub	x20, x1, #0x1
  411100:	mov	x19, x0
  411104:	str	x21, [sp, #16]
  411108:	ldr	x8, [x8, x20, lsl #3]
  41110c:	mov	x29, sp
  411110:	sub	x9, x8, #0x101
  411114:	cmp	x9, #0x3
  411118:	b.cs	411130 <wcrtomb@plt+0xe4d0>  // b.hs, b.nlast
  41111c:	mov	x0, x19
  411120:	mov	x1, x20
  411124:	bl	4110f0 <wcrtomb@plt+0xe490>
  411128:	add	x0, x0, #0x1
  41112c:	b	411168 <wcrtomb@plt+0xe508>
  411130:	sub	x8, x8, #0x105
  411134:	cmp	x8, #0x2
  411138:	b.cs	411164 <wcrtomb@plt+0xe504>  // b.hs, b.nlast
  41113c:	mov	x0, x19
  411140:	mov	x1, x20
  411144:	bl	4110f0 <wcrtomb@plt+0xe490>
  411148:	mov	x21, x0
  41114c:	sub	x1, x20, x0
  411150:	mov	x0, x19
  411154:	bl	4110f0 <wcrtomb@plt+0xe490>
  411158:	add	x8, x21, x0
  41115c:	add	x0, x8, #0x1
  411160:	b	411168 <wcrtomb@plt+0xe508>
  411164:	mov	w0, #0x1                   	// #1
  411168:	ldp	x20, x19, [sp, #32]
  41116c:	ldr	x21, [sp, #16]
  411170:	ldp	x29, x30, [sp], #48
  411174:	ret
  411178:	stp	x29, x30, [sp, #-96]!
  41117c:	stp	x26, x25, [sp, #32]
  411180:	stp	x24, x23, [sp, #48]
  411184:	stp	x22, x21, [sp, #64]
  411188:	stp	x20, x19, [sp, #80]
  41118c:	ldr	x23, [x1, #8]
  411190:	mov	w19, w2
  411194:	mov	x21, x1
  411198:	mov	x20, x0
  41119c:	cmp	x23, #0x1
  4111a0:	str	x27, [sp, #16]
  4111a4:	mov	x29, sp
  4111a8:	b.lt	4111c4 <wcrtomb@plt+0xe564>  // b.tstop
  4111ac:	ldr	x9, [x21]
  4111b0:	cmp	x23, #0x4
  4111b4:	b.hi	4111cc <wcrtomb@plt+0xe56c>  // b.pmore
  4111b8:	mov	x24, xzr
  4111bc:	mov	x8, xzr
  4111c0:	b	411238 <wcrtomb@plt+0xe5d8>
  4111c4:	mov	x24, xzr
  4111c8:	b	41125c <wcrtomb@plt+0xe5fc>
  4111cc:	and	x8, x23, #0x3
  4111d0:	tst	x23, #0x3
  4111d4:	mov	w11, #0x4                   	// #4
  4111d8:	csel	x8, x11, x8, eq  // eq = none
  4111dc:	sub	x8, x23, x8
  4111e0:	add	x10, x9, #0x20
  4111e4:	movi	v0.2d, #0x0
  4111e8:	mov	x11, x8
  4111ec:	movi	v1.2d, #0x0
  4111f0:	sub	x12, x10, #0x20
  4111f4:	sub	x13, x10, #0x18
  4111f8:	add	x14, x10, #0x8
  4111fc:	ld2	{v2.2d, v3.2d}, [x10]
  411200:	ld2	{v4.2d, v5.2d}, [x12]
  411204:	ld4	{v16.2s-v19.2s}, [x13]
  411208:	ld4	{v20.2s-v23.2s}, [x14]
  41120c:	subs	x11, x11, #0x4
  411210:	add	x10, x10, #0x40
  411214:	uaddw	v4.2d, v4.2d, v16.2s
  411218:	uaddw	v2.2d, v2.2d, v20.2s
  41121c:	eor	v0.16b, v4.16b, v0.16b
  411220:	eor	v1.16b, v2.16b, v1.16b
  411224:	b.ne	4111f0 <wcrtomb@plt+0xe590>  // b.any
  411228:	eor	v0.16b, v1.16b, v0.16b
  41122c:	dup	v1.2d, v0.d[1]
  411230:	eor	v0.16b, v0.16b, v1.16b
  411234:	fmov	x24, d0
  411238:	add	x9, x9, x8, lsl #4
  41123c:	add	x9, x9, #0x8
  411240:	ldur	x10, [x9, #-8]
  411244:	ldr	w11, [x9], #16
  411248:	add	x8, x8, #0x1
  41124c:	cmp	x8, x23
  411250:	add	x10, x10, x11
  411254:	eor	x24, x10, x24
  411258:	b.lt	411240 <wcrtomb@plt+0xe5e0>  // b.tstop
  41125c:	ldr	x8, [x20, #304]
  411260:	cmp	x8, #0x1
  411264:	b.lt	411318 <wcrtomb@plt+0xe6b8>  // b.tstop
  411268:	ldr	x9, [x20, #296]
  41126c:	mov	x22, xzr
  411270:	mov	w10, #0x50                  	// #80
  411274:	b	411290 <wcrtomb@plt+0xe630>
  411278:	mov	x11, xzr
  41127c:	cmp	x11, x23
  411280:	b.eq	411494 <wcrtomb@plt+0xe834>  // b.none
  411284:	add	x22, x22, #0x1
  411288:	cmp	x22, x8
  41128c:	b.ge	41131c <wcrtomb@plt+0xe6bc>  // b.tcont
  411290:	mul	x11, x22, x10
  411294:	ldr	x11, [x9, x11]
  411298:	cmp	x24, x11
  41129c:	b.ne	411284 <wcrtomb@plt+0xe624>  // b.any
  4112a0:	madd	x11, x22, x10, x9
  4112a4:	ldr	x11, [x11, #16]
  4112a8:	cmp	x23, x11
  4112ac:	b.ne	411284 <wcrtomb@plt+0xe624>  // b.any
  4112b0:	madd	x11, x22, x10, x9
  4112b4:	ldrb	w11, [x11, #32]
  4112b8:	cmp	w11, w19
  4112bc:	b.ne	411284 <wcrtomb@plt+0xe624>  // b.any
  4112c0:	cmp	x23, #0x1
  4112c4:	b.lt	411278 <wcrtomb@plt+0xe618>  // b.tstop
  4112c8:	madd	x13, x22, x10, x9
  4112cc:	ldr	x12, [x21]
  4112d0:	ldr	x13, [x13, #8]
  4112d4:	mov	x11, xzr
  4112d8:	add	x12, x12, #0x8
  4112dc:	add	x13, x13, #0x8
  4112e0:	ldr	w14, [x12]
  4112e4:	ldr	w15, [x13]
  4112e8:	cmp	w14, w15
  4112ec:	b.ne	41127c <wcrtomb@plt+0xe61c>  // b.any
  4112f0:	ldur	x14, [x12, #-8]
  4112f4:	ldur	x15, [x13, #-8]
  4112f8:	cmp	x14, x15
  4112fc:	b.ne	41127c <wcrtomb@plt+0xe61c>  // b.any
  411300:	add	x11, x11, #0x1
  411304:	add	x12, x12, #0x10
  411308:	cmp	x23, x11
  41130c:	add	x13, x13, #0x10
  411310:	b.ne	4112e0 <wcrtomb@plt+0xe680>  // b.any
  411314:	b	411494 <wcrtomb@plt+0xe834>
  411318:	mov	x22, xzr
  41131c:	cmp	x23, #0x1
  411320:	b.lt	411390 <wcrtomb@plt+0xe730>  // b.tstop
  411324:	ldr	x9, [x20, #336]
  411328:	ldr	x10, [x21]
  41132c:	mov	x26, xzr
  411330:	mov	w25, wzr
  411334:	and	w11, w19, #0x7
  411338:	mov	w12, #0x1ff                 	// #511
  41133c:	mov	x13, x23
  411340:	b	411360 <wcrtomb@plt+0xe700>
  411344:	ldr	x15, [x20, #144]
  411348:	ldr	x14, [x15, x14, lsl #3]
  41134c:	cmp	x14, #0x112
  411350:	csel	w25, w12, w25, eq  // eq = none
  411354:	subs	x13, x13, #0x1
  411358:	add	x10, x10, #0x10
  41135c:	b.eq	411398 <wcrtomb@plt+0xe738>  // b.none
  411360:	ldr	x14, [x10]
  411364:	ldr	w15, [x9, x14, lsl #2]
  411368:	cbz	w15, 411344 <wcrtomb@plt+0xe6e4>
  41136c:	orr	w16, w15, w15, lsr #3
  411370:	orr	w16, w16, w15, lsr #6
  411374:	tst	w11, w16
  411378:	csel	w15, wzr, w15, eq  // eq = none
  41137c:	orr	w25, w15, w25
  411380:	cbnz	x26, 411354 <wcrtomb@plt+0xe6f4>
  411384:	ldr	x15, [x20, #144]
  411388:	ldr	x26, [x15, x14, lsl #3]
  41138c:	b	411354 <wcrtomb@plt+0xe6f4>
  411390:	mov	w25, wzr
  411394:	mov	x26, xzr
  411398:	ldr	x9, [x20, #312]
  41139c:	ldr	x0, [x20, #296]
  4113a0:	cmp	x9, x8
  4113a4:	b.gt	4113c0 <wcrtomb@plt+0xe760>
  4113a8:	add	x1, x20, #0x138
  4113ac:	mov	w2, #0x1                   	// #1
  4113b0:	mov	x3, #0xffffffffffffffff    	// #-1
  4113b4:	mov	w4, #0x50                  	// #80
  4113b8:	bl	40f91c <wcrtomb@plt+0xccbc>
  4113bc:	ldr	x23, [x21, #8]
  4113c0:	mov	w8, #0x50                  	// #80
  4113c4:	mul	x8, x22, x8
  4113c8:	lsr	x9, x23, #59
  4113cc:	str	x0, [x20, #296]
  4113d0:	str	x24, [x0, x8]
  4113d4:	cbnz	x9, 4114b4 <wcrtomb@plt+0xe854>
  4113d8:	add	x8, x22, x22, lsl #2
  4113dc:	lsl	x27, x8, #4
  4113e0:	add	x24, x0, x27
  4113e4:	lsl	x0, x23, #4
  4113e8:	bl	415348 <wcrtomb@plt+0x126e8>
  4113ec:	stp	xzr, x23, [x24, #16]
  4113f0:	str	x0, [x24, #8]
  4113f4:	ldr	x24, [x20, #296]
  4113f8:	add	x23, x24, x27
  4113fc:	ldr	x9, [x23, #24]!
  411400:	ldr	x8, [x21, #8]
  411404:	sub	x27, x23, #0x10
  411408:	cmp	x9, x8
  41140c:	b.ge	411440 <wcrtomb@plt+0xe7e0>  // b.tcont
  411410:	ldr	x0, [x27]
  411414:	bl	402a10 <free@plt>
  411418:	ldr	x8, [x21, #8]
  41141c:	ldr	x9, [x23]
  411420:	mov	x3, #0xffffffffffffffff    	// #-1
  411424:	mov	w4, #0x10                  	// #16
  411428:	mov	x0, xzr
  41142c:	sub	x2, x8, x9
  411430:	mov	x1, x23
  411434:	bl	40f91c <wcrtomb@plt+0xccbc>
  411438:	str	x0, [x27]
  41143c:	ldr	x8, [x21, #8]
  411440:	mov	w9, #0x50                  	// #80
  411444:	madd	x9, x22, x9, x24
  411448:	str	x8, [x9, #16]
  41144c:	ldr	x8, [x21, #8]
  411450:	cbz	x8, 411464 <wcrtomb@plt+0xe804>
  411454:	ldr	x0, [x27]
  411458:	ldr	x1, [x21]
  41145c:	lsl	x2, x8, #4
  411460:	bl	402580 <memcpy@plt>
  411464:	ldr	x8, [x20, #296]
  411468:	mov	w9, #0x50                  	// #80
  41146c:	mov	x10, #0xffffffffffffffff    	// #-1
  411470:	madd	x8, x22, x9, x8
  411474:	strb	w19, [x8, #32]
  411478:	strh	w25, [x8, #34]
  41147c:	stp	xzr, xzr, [x8, #48]
  411480:	str	x26, [x8, #40]
  411484:	str	x10, [x8, #72]
  411488:	ldr	x8, [x20, #304]
  41148c:	add	x8, x8, #0x1
  411490:	str	x8, [x20, #304]
  411494:	mov	x0, x22
  411498:	ldp	x20, x19, [sp, #80]
  41149c:	ldp	x22, x21, [sp, #64]
  4114a0:	ldp	x24, x23, [sp, #48]
  4114a4:	ldp	x26, x25, [sp, #32]
  4114a8:	ldr	x27, [sp, #16]
  4114ac:	ldp	x29, x30, [sp], #96
  4114b0:	ret
  4114b4:	bl	41563c <wcrtomb@plt+0x129dc>
  4114b8:	stp	x29, x30, [sp, #-64]!
  4114bc:	str	x23, [sp, #16]
  4114c0:	stp	x22, x21, [sp, #32]
  4114c4:	stp	x20, x19, [sp, #48]
  4114c8:	mov	x23, x3
  4114cc:	ldr	x8, [x23, #16]!
  4114d0:	ldr	x9, [x0, #8]
  4114d4:	ldr	x10, [x1, #8]
  4114d8:	mov	x19, x3
  4114dc:	mov	x20, x1
  4114e0:	sub	x8, x8, x9
  4114e4:	mov	x21, x0
  4114e8:	cmp	x8, x10
  4114ec:	mov	w22, w2
  4114f0:	mov	x29, sp
  4114f4:	b.ge	411524 <wcrtomb@plt+0xe8c4>  // b.tcont
  4114f8:	ldr	x0, [x19]
  4114fc:	bl	402a10 <free@plt>
  411500:	ldr	x8, [x21, #8]
  411504:	mov	x3, #0xffffffffffffffff    	// #-1
  411508:	mov	w4, #0x10                  	// #16
  41150c:	mov	x0, xzr
  411510:	str	x8, [x19, #16]
  411514:	ldr	x2, [x20, #8]
  411518:	mov	x1, x23
  41151c:	bl	40f91c <wcrtomb@plt+0xccbc>
  411520:	str	x0, [x19]
  411524:	str	xzr, [x19, #8]
  411528:	ldr	x8, [x21, #8]
  41152c:	ldr	x12, [x20, #8]
  411530:	cmp	x8, #0x0
  411534:	cset	w11, gt
  411538:	b.gt	411544 <wcrtomb@plt+0xe8e4>
  41153c:	cmp	x12, #0x1
  411540:	b.lt	411620 <wcrtomb@plt+0xe9c0>  // b.tstop
  411544:	mov	x8, xzr
  411548:	mov	x10, xzr
  41154c:	mov	x9, xzr
  411550:	cmp	x10, x12
  411554:	b.ge	411594 <wcrtomb@plt+0xe934>  // b.tcont
  411558:	tbz	w11, #0, 4115cc <wcrtomb@plt+0xe96c>
  41155c:	ldr	x12, [x21]
  411560:	ldr	x11, [x20]
  411564:	lsl	x13, x8, #4
  411568:	lsl	x14, x10, #4
  41156c:	ldr	x12, [x12, x13]
  411570:	ldr	x13, [x11, x14]
  411574:	cmp	x12, x13
  411578:	b.gt	4115d0 <wcrtomb@plt+0xe970>
  41157c:	b.ne	411594 <wcrtomb@plt+0xe934>  // b.any
  411580:	add	x11, x11, x10, lsl #4
  411584:	ldr	w11, [x11, #8]
  411588:	add	x10, x10, #0x1
  41158c:	and	w11, w11, w22
  411590:	b	411598 <wcrtomb@plt+0xe938>
  411594:	mov	w11, wzr
  411598:	ldr	x12, [x21]
  41159c:	ldr	x13, [x19]
  4115a0:	add	x12, x12, x8, lsl #4
  4115a4:	ldr	x14, [x12]
  4115a8:	add	x13, x13, x9, lsl #4
  4115ac:	add	x8, x8, #0x1
  4115b0:	add	x9, x9, #0x1
  4115b4:	str	x14, [x13]
  4115b8:	ldr	w12, [x12, #8]
  4115bc:	str	x9, [x19, #8]
  4115c0:	orr	w11, w12, w11
  4115c4:	str	w11, [x13, #8]
  4115c8:	b	411604 <wcrtomb@plt+0xe9a4>
  4115cc:	ldr	x11, [x20]
  4115d0:	add	x12, x11, x10, lsl #4
  4115d4:	ldr	w12, [x12, #8]
  4115d8:	ands	w12, w12, w22
  4115dc:	b.eq	411600 <wcrtomb@plt+0xe9a0>  // b.none
  4115e0:	ldr	x13, [x19]
  4115e4:	lsl	x14, x10, #4
  4115e8:	ldr	x11, [x11, x14]
  4115ec:	add	x13, x13, x9, lsl #4
  4115f0:	add	x9, x9, #0x1
  4115f4:	str	x11, [x13]
  4115f8:	str	x9, [x19, #8]
  4115fc:	str	w12, [x13, #8]
  411600:	add	x10, x10, #0x1
  411604:	ldr	x11, [x21, #8]
  411608:	ldr	x12, [x20, #8]
  41160c:	cmp	x8, x11
  411610:	cset	w11, lt  // lt = tstop
  411614:	b.lt	411550 <wcrtomb@plt+0xe8f0>  // b.tstop
  411618:	cmp	x10, x12
  41161c:	b.lt	411550 <wcrtomb@plt+0xe8f0>  // b.tstop
  411620:	ldp	x20, x19, [sp, #48]
  411624:	ldp	x22, x21, [sp, #32]
  411628:	ldr	x23, [sp, #16]
  41162c:	ldp	x29, x30, [sp], #64
  411630:	ret
  411634:	ldr	x8, [x0]
  411638:	ldr	x9, [x1]
  41163c:	cmp	x8, x9
  411640:	cset	w8, gt
  411644:	csinv	w0, w8, wzr, ge  // ge = tcont
  411648:	ret
  41164c:	sub	sp, sp, #0xa0
  411650:	stp	x29, x30, [sp, #64]
  411654:	stp	x28, x27, [sp, #80]
  411658:	stp	x26, x25, [sp, #96]
  41165c:	stp	x24, x23, [sp, #112]
  411660:	stp	x22, x21, [sp, #128]
  411664:	stp	x20, x19, [sp, #144]
  411668:	ldr	x8, [x0, #304]
  41166c:	mov	w21, w5
  411670:	mov	x24, x4
  411674:	mov	x19, x2
  411678:	mov	x23, x0
  41167c:	cmp	x8, #0x400
  411680:	mov	x26, x1
  411684:	add	x29, sp, #0x40
  411688:	str	w3, [sp, #28]
  41168c:	b.lt	411840 <wcrtomb@plt+0xebe0>  // b.tstop
  411690:	ldrsw	x20, [x23, #364]
  411694:	cmp	x8, x20
  411698:	b.le	4116e0 <wcrtomb@plt+0xea80>
  41169c:	add	x8, x20, x20, lsl #2
  4116a0:	lsl	x22, x8, #4
  4116a4:	ldr	x8, [x23, #296]
  4116a8:	add	x8, x8, x22
  4116ac:	ldr	x0, [x8, #8]
  4116b0:	bl	402a10 <free@plt>
  4116b4:	ldr	x8, [x23, #296]
  4116b8:	add	x8, x8, x22
  4116bc:	ldr	x0, [x8, #48]
  4116c0:	bl	402a10 <free@plt>
  4116c4:	ldr	x8, [x23, #304]
  4116c8:	add	x20, x20, #0x1
  4116cc:	add	x22, x22, #0x50
  4116d0:	cmp	x20, x8
  4116d4:	b.lt	4116a4 <wcrtomb@plt+0xea44>  // b.tstop
  4116d8:	ldrsw	x20, [x23, #364]
  4116dc:	mov	x1, x26
  4116e0:	ldr	x8, [x23, #368]
  4116e4:	str	x20, [x23, #304]
  4116e8:	cbz	x8, 411770 <wcrtomb@plt+0xeb10>
  4116ec:	ldr	x9, [x23, #352]
  4116f0:	cmp	x9, #0x1
  4116f4:	b.lt	411768 <wcrtomb@plt+0xeb08>  // b.tstop
  4116f8:	ldr	x0, [x8]
  4116fc:	bl	402a10 <free@plt>
  411700:	ldr	x8, [x23, #376]
  411704:	ldr	x0, [x8]
  411708:	bl	402a10 <free@plt>
  41170c:	ldr	x8, [x23, #376]
  411710:	str	xzr, [x8]
  411714:	ldr	x8, [x23, #368]
  411718:	str	xzr, [x8]
  41171c:	ldr	x8, [x23, #352]
  411720:	cmp	x8, #0x2
  411724:	b.lt	411768 <wcrtomb@plt+0xeb08>  // b.tstop
  411728:	mov	w20, #0x1                   	// #1
  41172c:	ldr	x8, [x23, #368]
  411730:	lsl	x22, x20, #3
  411734:	ldr	x0, [x8, x22]
  411738:	bl	402a10 <free@plt>
  41173c:	ldr	x8, [x23, #376]
  411740:	ldr	x0, [x8, x22]
  411744:	bl	402a10 <free@plt>
  411748:	ldr	x8, [x23, #376]
  41174c:	add	x20, x20, #0x1
  411750:	str	xzr, [x8, x22]
  411754:	ldr	x8, [x23, #368]
  411758:	str	xzr, [x8, x22]
  41175c:	ldr	x8, [x23, #352]
  411760:	cmp	x20, x8
  411764:	b.lt	41172c <wcrtomb@plt+0xeacc>  // b.tstop
  411768:	mov	x1, x26
  41176c:	str	wzr, [x23, #360]
  411770:	ldrb	w8, [x23, #1048]
  411774:	cbz	w8, 411840 <wcrtomb@plt+0xebe0>
  411778:	ldr	x8, [x23, #432]
  41177c:	cbz	x8, 411840 <wcrtomb@plt+0xebe0>
  411780:	ldr	x9, [x23, #352]
  411784:	tbnz	x9, #63, 4117d0 <wcrtomb@plt+0xeb70>
  411788:	ldur	x0, [x8, #-8]
  41178c:	bl	402a10 <free@plt>
  411790:	ldr	x8, [x23, #432]
  411794:	stur	xzr, [x8, #-8]
  411798:	ldr	x8, [x23, #352]
  41179c:	cmp	x8, #0x1
  4117a0:	b.lt	4117d0 <wcrtomb@plt+0xeb70>  // b.tstop
  4117a4:	mov	x20, xzr
  4117a8:	ldr	x8, [x23, #432]
  4117ac:	lsl	x22, x20, #3
  4117b0:	ldr	x0, [x8, x22]
  4117b4:	bl	402a10 <free@plt>
  4117b8:	ldr	x8, [x23, #432]
  4117bc:	add	x20, x20, #0x1
  4117c0:	str	xzr, [x8, x22]
  4117c4:	ldr	x8, [x23, #352]
  4117c8:	cmp	x20, x8
  4117cc:	b.lt	4117a8 <wcrtomb@plt+0xeb48>  // b.tstop
  4117d0:	ldr	w8, [x23, #364]
  4117d4:	mov	x1, x26
  4117d8:	cmp	w8, #0x1
  4117dc:	b.lt	41183c <wcrtomb@plt+0xebdc>  // b.tstop
  4117e0:	ldr	x10, [x23, #296]
  4117e4:	cmp	w8, #0x1
  4117e8:	b.ne	4117f4 <wcrtomb@plt+0xeb94>  // b.any
  4117ec:	mov	x9, xzr
  4117f0:	b	41181c <wcrtomb@plt+0xebbc>
  4117f4:	and	x9, x8, #0xfffffffe
  4117f8:	add	x11, x10, #0x98
  4117fc:	mov	x12, #0xffffffffffffffff    	// #-1
  411800:	mov	x13, x9
  411804:	stur	x12, [x11, #-80]
  411808:	str	x12, [x11], #160
  41180c:	subs	x13, x13, #0x2
  411810:	b.ne	411804 <wcrtomb@plt+0xeba4>  // b.any
  411814:	cmp	x9, x8
  411818:	b.eq	41183c <wcrtomb@plt+0xebdc>  // b.none
  41181c:	mov	w11, #0x50                  	// #80
  411820:	madd	x10, x9, x11, x10
  411824:	add	x10, x10, #0x48
  411828:	mov	x11, #0xffffffffffffffff    	// #-1
  41182c:	add	x9, x9, #0x1
  411830:	cmp	x9, x8
  411834:	str	x11, [x10], #80
  411838:	b.cc	41182c <wcrtomb@plt+0xebcc>  // b.lo, b.ul, b.last
  41183c:	str	xzr, [x23, #440]
  411840:	ldr	x8, [x23, #352]
  411844:	cbnz	x8, 411854 <wcrtomb@plt+0xebf4>
  411848:	mov	x0, x23
  41184c:	bl	411cfc <wcrtomb@plt+0xf09c>
  411850:	mov	x1, x26
  411854:	stur	x1, [x29, #-16]
  411858:	ldr	x22, [x23, #368]
  41185c:	ldrb	w8, [x23, #459]
  411860:	ldrb	w25, [x19]
  411864:	str	x8, [sp, #32]
  411868:	strb	w8, [x19]
  41186c:	tbz	w21, #0, 41189c <wcrtomb@plt+0xec3c>
  411870:	ldr	x8, [x23, #424]
  411874:	str	xzr, [x23, #272]
  411878:	cbnz	x8, 41189c <wcrtomb@plt+0xec3c>
  41187c:	ldr	x20, [x23, #176]
  411880:	lsr	x8, x20, #59
  411884:	cbnz	x8, 411cf8 <wcrtomb@plt+0xf098>
  411888:	lsl	x0, x20, #4
  41188c:	bl	415348 <wcrtomb@plt+0x126e8>
  411890:	mov	x1, x26
  411894:	stp	xzr, x20, [x23, #416]
  411898:	str	x0, [x23, #408]
  41189c:	ldr	x8, [sp, #32]
  4118a0:	str	x24, [sp, #8]
  4118a4:	mov	x27, xzr
  4118a8:	mov	x28, xzr
  4118ac:	add	x8, x23, x8
  4118b0:	add	x24, x23, #0x110
  4118b4:	add	x8, x8, #0x1cc
  4118b8:	str	w25, [sp, #4]
  4118bc:	stur	xzr, [x29, #-24]
  4118c0:	str	x8, [sp, #16]
  4118c4:	b	4118e8 <wcrtomb@plt+0xec88>
  4118c8:	ldr	x8, [x23, #376]
  4118cc:	add	x9, x26, #0x1
  4118d0:	mov	x28, x20
  4118d4:	mov	x1, x25
  4118d8:	ldr	x8, [x8, x20, lsl #3]
  4118dc:	stur	x9, [x29, #-16]
  4118e0:	ldrb	w9, [x26]
  4118e4:	ldr	x27, [x8, x9, lsl #3]
  4118e8:	ldr	x26, [x22, x27, lsl #3]
  4118ec:	cbz	x26, 411aa8 <wcrtomb@plt+0xee48>
  4118f0:	mov	x25, x1
  4118f4:	b	41191c <wcrtomb@plt+0xecbc>
  4118f8:	add	x11, x10, #0x1
  4118fc:	stur	x11, [x29, #-16]
  411900:	ldrb	w10, [x10]
  411904:	mov	x27, x8
  411908:	ldr	x20, [x9, x10, lsl #3]
  41190c:	ldr	x26, [x22, x20, lsl #3]
  411910:	mov	x28, x27
  411914:	mov	x27, x20
  411918:	cbz	x26, 411ab0 <wcrtomb@plt+0xee50>
  41191c:	ldrsw	x8, [x23, #364]
  411920:	cmp	x27, x8
  411924:	b.ge	411994 <wcrtomb@plt+0xed34>  // b.tcont
  411928:	tbz	w21, #0, 41194c <wcrtomb@plt+0xecec>
  41192c:	ldr	x8, [x23, #296]
  411930:	mov	w9, #0x50                  	// #80
  411934:	madd	x8, x27, x9, x8
  411938:	ldr	x8, [x8, #56]
  41193c:	cbz	x8, 41194c <wcrtomb@plt+0xecec>
  411940:	ldur	x20, [x29, #-16]
  411944:	ldrb	w8, [x20]
  411948:	b	411980 <wcrtomb@plt+0xed20>
  41194c:	ldur	x20, [x29, #-16]
  411950:	ldrb	w8, [x20]
  411954:	ldr	x9, [x26, x8, lsl #3]
  411958:	cmp	x9, x27
  41195c:	b.ne	41197c <wcrtomb@plt+0xed1c>  // b.any
  411960:	add	x9, x20, #0x1
  411964:	stur	x9, [x29, #-16]
  411968:	ldrb	w8, [x9], #1
  41196c:	ldr	x10, [x26, x8, lsl #3]
  411970:	cmp	x10, x27
  411974:	b.eq	411964 <wcrtomb@plt+0xed04>  // b.none
  411978:	sub	x20, x9, #0x1
  41197c:	tbz	w21, #0, 411a40 <wcrtomb@plt+0xede0>
  411980:	add	x8, x23, x8
  411984:	ldrb	w8, [x8, #716]
  411988:	cbz	w8, 4119f8 <wcrtomb@plt+0xed98>
  41198c:	mov	x25, x20
  411990:	stur	x25, [x29, #-16]
  411994:	tbz	w21, #0, 411a3c <wcrtomb@plt+0xeddc>
  411998:	ldr	x8, [x23, #296]
  41199c:	mov	w9, #0x50                  	// #80
  4119a0:	madd	x8, x27, x9, x8
  4119a4:	ldr	x9, [x8, #56]
  4119a8:	ldur	x8, [x29, #-16]
  4119ac:	cbz	x9, 411a94 <wcrtomb@plt+0xee34>
  4119b0:	cmp	x8, x19
  4119b4:	b.cs	411a94 <wcrtomb@plt+0xee34>  // b.hs, b.nlast
  4119b8:	ldrb	w9, [x8]
  4119bc:	add	x9, x23, x9, lsl #2
  4119c0:	ldr	w9, [x9, #1308]
  4119c4:	cmn	w9, #0x1
  4119c8:	b.ne	411a94 <wcrtomb@plt+0xee34>  // b.any
  4119cc:	sub	x2, x29, #0x10
  4119d0:	mov	x0, x23
  4119d4:	mov	x1, x27
  4119d8:	mov	x3, x19
  4119dc:	bl	411eb8 <wcrtomb@plt+0xf258>
  4119e0:	ldur	x25, [x29, #-16]
  4119e4:	ldr	x22, [x23, #368]
  4119e8:	mov	x20, x0
  4119ec:	b	41190c <wcrtomb@plt+0xecac>
  4119f0:	mov	w0, #0x1                   	// #1
  4119f4:	add	x25, x25, w0, sxtw
  4119f8:	cmp	x25, x20
  4119fc:	b.cs	411990 <wcrtomb@plt+0xed30>  // b.hs, b.nlast
  411a00:	ldrb	w8, [x25]
  411a04:	add	x8, x23, x8, lsl #2
  411a08:	ldr	w8, [x8, #1308]
  411a0c:	cmn	w8, #0x1
  411a10:	b.ne	4119f0 <wcrtomb@plt+0xed90>  // b.any
  411a14:	sub	x2, x19, x25
  411a18:	sub	x0, x29, #0x4
  411a1c:	mov	x1, x25
  411a20:	mov	x3, x24
  411a24:	bl	415680 <wcrtomb@plt+0x12a20>
  411a28:	sub	x8, x0, #0x1
  411a2c:	cmn	x8, #0x3
  411a30:	b.cc	4119f4 <wcrtomb@plt+0xed94>  // b.lo, b.ul, b.last
  411a34:	str	xzr, [x24]
  411a38:	b	4119f0 <wcrtomb@plt+0xed90>
  411a3c:	ldur	x20, [x29, #-16]
  411a40:	add	x10, x20, #0x1
  411a44:	stur	x10, [x29, #-16]
  411a48:	ldrb	w8, [x20]
  411a4c:	ldr	x8, [x26, x8, lsl #3]
  411a50:	ldr	x9, [x22, x8, lsl #3]
  411a54:	cbz	x9, 411c00 <wcrtomb@plt+0xefa0>
  411a58:	ldrsw	x11, [x23, #364]
  411a5c:	cmp	x27, x11
  411a60:	b.ge	4118f8 <wcrtomb@plt+0xec98>  // b.tcont
  411a64:	ldrb	w11, [x10]
  411a68:	ldr	x11, [x9, x11, lsl #3]
  411a6c:	cmp	x11, x8
  411a70:	b.ne	4118f8 <wcrtomb@plt+0xec98>  // b.any
  411a74:	add	x10, x20, #0x2
  411a78:	stur	x10, [x29, #-16]
  411a7c:	ldrb	w11, [x10], #1
  411a80:	ldr	x11, [x9, x11, lsl #3]
  411a84:	cmp	x11, x8
  411a88:	b.eq	411a78 <wcrtomb@plt+0xee18>  // b.none
  411a8c:	sub	x10, x10, #0x1
  411a90:	b	4118f8 <wcrtomb@plt+0xec98>
  411a94:	add	x9, x8, #0x1
  411a98:	stur	x9, [x29, #-16]
  411a9c:	ldrb	w8, [x8]
  411aa0:	ldr	x20, [x26, x8, lsl #3]
  411aa4:	b	41190c <wcrtomb@plt+0xecac>
  411aa8:	mov	x20, x27
  411aac:	mov	x25, x1
  411ab0:	tbnz	x20, #63, 411c0c <wcrtomb@plt+0xefac>
  411ab4:	ldr	x8, [x23, #376]
  411ab8:	ldr	x8, [x8, x20, lsl #3]
  411abc:	cbz	x8, 411bdc <wcrtomb@plt+0xef7c>
  411ac0:	ldur	x26, [x29, #-16]
  411ac4:	ldr	x9, [x23, #384]
  411ac8:	ldrb	w8, [x26]
  411acc:	ldrb	w9, [x9, x20]
  411ad0:	add	x10, x23, x8
  411ad4:	ldrb	w10, [x10, #460]
  411ad8:	tst	w10, w9
  411adc:	b.ne	411cb4 <wcrtomb@plt+0xf054>  // b.any
  411ae0:	cmp	x26, x19
  411ae4:	b.ne	411b08 <wcrtomb@plt+0xeea8>  // b.any
  411ae8:	ldr	x9, [x23, #296]
  411aec:	mov	w10, #0x50                  	// #80
  411af0:	madd	x9, x20, x10, x9
  411af4:	ldrb	w10, [x9, #32]
  411af8:	ldrh	w9, [x9, #34]
  411afc:	and	w9, w10, w9, lsr #6
  411b00:	tst	w9, #0x7
  411b04:	b.ne	411cb4 <wcrtomb@plt+0xf054>  // b.any
  411b08:	tbz	w21, #0, 4118c8 <wcrtomb@plt+0xec68>
  411b0c:	ldrsw	x9, [x23, #364]
  411b10:	cmp	x20, x9
  411b14:	b.ge	411b38 <wcrtomb@plt+0xeed8>  // b.tcont
  411b18:	add	x8, x23, x8
  411b1c:	ldrb	w8, [x8, #716]
  411b20:	cbnz	w8, 411b30 <wcrtomb@plt+0xeed0>
  411b24:	cmp	x25, x26
  411b28:	b.cc	411ba0 <wcrtomb@plt+0xef40>  // b.lo, b.ul, b.last
  411b2c:	mov	x26, x25
  411b30:	stur	x26, [x29, #-16]
  411b34:	mov	x25, x26
  411b38:	ldr	x8, [x23, #296]
  411b3c:	mov	w9, #0x50                  	// #80
  411b40:	madd	x8, x20, x9, x8
  411b44:	ldr	x8, [x8, #56]
  411b48:	cbz	x8, 4118c8 <wcrtomb@plt+0xec68>
  411b4c:	cmp	x26, x19
  411b50:	b.cs	4118c8 <wcrtomb@plt+0xec68>  // b.hs, b.nlast
  411b54:	ldrb	w8, [x26]
  411b58:	add	x8, x23, x8, lsl #2
  411b5c:	ldr	w8, [x8, #1308]
  411b60:	cmn	w8, #0x1
  411b64:	b.ne	4118c8 <wcrtomb@plt+0xec68>  // b.any
  411b68:	sub	x2, x29, #0x10
  411b6c:	mov	x0, x23
  411b70:	mov	x1, x20
  411b74:	mov	x3, x19
  411b78:	bl	411eb8 <wcrtomb@plt+0xf258>
  411b7c:	ldur	x1, [x29, #-16]
  411b80:	ldr	x22, [x23, #368]
  411b84:	mov	x27, x0
  411b88:	mov	x28, x20
  411b8c:	b	4118e8 <wcrtomb@plt+0xec88>
  411b90:	mov	w0, #0x1                   	// #1
  411b94:	add	x25, x25, w0, sxtw
  411b98:	cmp	x25, x26
  411b9c:	b.cs	411ca0 <wcrtomb@plt+0xf040>  // b.hs, b.nlast
  411ba0:	ldrb	w8, [x25]
  411ba4:	add	x8, x23, x8, lsl #2
  411ba8:	ldr	w8, [x8, #1308]
  411bac:	cmn	w8, #0x1
  411bb0:	b.ne	411b90 <wcrtomb@plt+0xef30>  // b.any
  411bb4:	sub	x2, x19, x25
  411bb8:	sub	x0, x29, #0x4
  411bbc:	mov	x1, x25
  411bc0:	mov	x3, x24
  411bc4:	bl	415680 <wcrtomb@plt+0x12a20>
  411bc8:	sub	x8, x0, #0x1
  411bcc:	cmn	x8, #0x3
  411bd0:	b.cc	411b94 <wcrtomb@plt+0xef34>  // b.lo, b.ul, b.last
  411bd4:	str	xzr, [x24]
  411bd8:	b	411b90 <wcrtomb@plt+0xef30>
  411bdc:	ldur	x8, [x29, #-16]
  411be0:	mov	x0, x20
  411be4:	mov	x1, x23
  411be8:	ldrb	w2, [x8]
  411bec:	bl	4122dc <wcrtomb@plt+0xf67c>
  411bf0:	ldr	x22, [x23, #368]
  411bf4:	mov	x27, x20
  411bf8:	mov	x1, x25
  411bfc:	b	4118e8 <wcrtomb@plt+0xec88>
  411c00:	mov	x20, x8
  411c04:	mov	x28, x27
  411c08:	tbz	x20, #63, 411ab4 <wcrtomb@plt+0xee54>
  411c0c:	ldur	x1, [x29, #-16]
  411c10:	cmn	x20, #0x2
  411c14:	b.ne	411c38 <wcrtomb@plt+0xefd8>  // b.any
  411c18:	ldurb	w2, [x1, #-1]
  411c1c:	mov	x0, x28
  411c20:	mov	x1, x23
  411c24:	bl	4122dc <wcrtomb@plt+0xf67c>
  411c28:	ldr	x22, [x23, #368]
  411c2c:	mov	x27, x0
  411c30:	mov	x1, x25
  411c34:	b	4118e8 <wcrtomb@plt+0xec88>
  411c38:	cmp	x1, x19
  411c3c:	b.hi	411cac <wcrtomb@plt+0xf04c>  // b.pmore
  411c40:	ldurb	w8, [x1, #-1]
  411c44:	ldr	x9, [sp, #32]
  411c48:	cmp	w8, w9
  411c4c:	b.ne	411cac <wcrtomb@plt+0xf04c>  // b.any
  411c50:	ldr	x8, [x23, #392]
  411c54:	ldr	x27, [x8, x28, lsl #3]
  411c58:	tbnz	x27, #63, 411cac <wcrtomb@plt+0xf04c>
  411c5c:	ldur	x8, [x29, #-24]
  411c60:	add	x8, x8, #0x1
  411c64:	stur	x8, [x29, #-24]
  411c68:	ldr	w8, [sp, #28]
  411c6c:	tbnz	w8, #0, 4118e8 <wcrtomb@plt+0xec88>
  411c70:	ldr	x8, [sp, #16]
  411c74:	mov	x27, xzr
  411c78:	ldrb	w8, [x8]
  411c7c:	cmp	w8, #0x4
  411c80:	b.eq	4118e8 <wcrtomb@plt+0xec88>  // b.none
  411c84:	cmp	w8, #0x2
  411c88:	b.ne	411c98 <wcrtomb@plt+0xf038>  // b.any
  411c8c:	ldrsw	x8, [x23, #364]
  411c90:	sub	x27, x8, #0x1
  411c94:	b	4118e8 <wcrtomb@plt+0xec88>
  411c98:	ldr	x27, [x23, #400]
  411c9c:	b	4118e8 <wcrtomb@plt+0xec88>
  411ca0:	mov	x26, x25
  411ca4:	stur	x25, [x29, #-16]
  411ca8:	b	411b38 <wcrtomb@plt+0xeed8>
  411cac:	mov	x26, xzr
  411cb0:	stur	xzr, [x29, #-16]
  411cb4:	ldr	x9, [sp, #8]
  411cb8:	ldr	w10, [sp, #4]
  411cbc:	cbz	x9, 411cd0 <wcrtomb@plt+0xf070>
  411cc0:	ldr	x8, [x9]
  411cc4:	ldur	x11, [x29, #-24]
  411cc8:	add	x8, x8, x11
  411ccc:	str	x8, [x9]
  411cd0:	strb	w10, [x19]
  411cd4:	mov	x0, x26
  411cd8:	ldp	x20, x19, [sp, #144]
  411cdc:	ldp	x22, x21, [sp, #128]
  411ce0:	ldp	x24, x23, [sp, #112]
  411ce4:	ldp	x26, x25, [sp, #96]
  411ce8:	ldp	x28, x27, [sp, #80]
  411cec:	ldp	x29, x30, [sp, #64]
  411cf0:	add	sp, sp, #0xa0
  411cf4:	ret
  411cf8:	bl	41563c <wcrtomb@plt+0x129dc>
  411cfc:	stp	x29, x30, [sp, #-64]!
  411d00:	stp	x22, x21, [sp, #32]
  411d04:	stp	x20, x19, [sp, #48]
  411d08:	ldr	x22, [x0, #352]
  411d0c:	ldr	x8, [x0, #304]
  411d10:	str	x23, [sp, #16]
  411d14:	mov	x29, sp
  411d18:	subs	x8, x8, x22
  411d1c:	b.le	411ea0 <wcrtomb@plt+0xf240>
  411d20:	ldr	x9, [x0, #368]
  411d24:	add	x10, x22, #0x2
  411d28:	mov	x19, x0
  411d2c:	cmp	x9, #0x0
  411d30:	sub	x11, x9, #0x10
  411d34:	csel	x9, xzr, x10, eq  // eq = none
  411d38:	csel	x0, xzr, x11, eq  // eq = none
  411d3c:	adds	x10, x9, x9, asr #1
  411d40:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  411d44:	csel	x23, x11, x10, vs
  411d48:	tbnz	x23, #63, 411d60 <wcrtomb@plt+0xf100>
  411d4c:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
  411d50:	cmp	x23, x10
  411d54:	b.le	411d78 <wcrtomb@plt+0xf118>
  411d58:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  411d5c:	b	411d88 <wcrtomb@plt+0xf128>
  411d60:	cmn	x23, #0x1
  411d64:	b.eq	411d84 <wcrtomb@plt+0xf124>  // b.none
  411d68:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  411d6c:	sdiv	x10, x10, x23
  411d70:	cmp	x10, #0x8
  411d74:	b.lt	411d58 <wcrtomb@plt+0xf0f8>  // b.tstop
  411d78:	lsl	x1, x23, #3
  411d7c:	cmp	x1, #0x7f
  411d80:	b.gt	411d90 <wcrtomb@plt+0xf130>
  411d84:	mov	w10, #0x80                  	// #128
  411d88:	lsr	x23, x10, #3
  411d8c:	and	x1, x10, #0x7ffffffffffffff8
  411d90:	sub	x10, x23, x9
  411d94:	cmp	x10, x8
  411d98:	b.ge	411dd4 <wcrtomb@plt+0xf174>  // b.tcont
  411d9c:	adds	x23, x9, x8
  411da0:	b.vs	411eb4 <wcrtomb@plt+0xf254>
  411da4:	tbnz	x23, #63, 411db8 <wcrtomb@plt+0xf158>
  411da8:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  411dac:	cmp	x23, x8
  411db0:	b.le	411dd0 <wcrtomb@plt+0xf170>
  411db4:	b	411eb4 <wcrtomb@plt+0xf254>
  411db8:	cmn	x23, #0x1
  411dbc:	b.eq	411dd0 <wcrtomb@plt+0xf170>  // b.none
  411dc0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  411dc4:	sdiv	x8, x8, x23
  411dc8:	cmp	x8, #0x8
  411dcc:	b.lt	411eb4 <wcrtomb@plt+0xf254>  // b.tstop
  411dd0:	lsl	x1, x23, #3
  411dd4:	bl	4153c8 <wcrtomb@plt+0x12768>
  411dd8:	add	x8, x0, #0x10
  411ddc:	sub	x20, x23, #0x2
  411de0:	stp	xzr, xzr, [x0]
  411de4:	str	x8, [x19, #368]
  411de8:	lsr	x8, x20, #60
  411dec:	str	x20, [x19, #352]
  411df0:	cbnz	x8, 411eb4 <wcrtomb@plt+0xf254>
  411df4:	ldr	x0, [x19, #376]
  411df8:	lsl	x21, x20, #3
  411dfc:	mov	x1, x21
  411e00:	bl	4153c8 <wcrtomb@plt+0x12768>
  411e04:	ldr	x8, [x19, #384]
  411e08:	str	x0, [x19, #376]
  411e0c:	mov	x1, x20
  411e10:	mov	x0, x8
  411e14:	bl	4153c8 <wcrtomb@plt+0x12768>
  411e18:	ldr	x8, [x19, #392]
  411e1c:	str	x0, [x19, #384]
  411e20:	mov	x1, x21
  411e24:	mov	x0, x8
  411e28:	bl	4153c8 <wcrtomb@plt+0x12768>
  411e2c:	ldrb	w8, [x19, #1048]
  411e30:	str	x0, [x19, #392]
  411e34:	cbz	w8, 411e60 <wcrtomb@plt+0xf200>
  411e38:	ldr	x8, [x19, #432]
  411e3c:	lsl	x1, x23, #3
  411e40:	sub	x9, x8, #0x10
  411e44:	cmp	x8, #0x0
  411e48:	csel	x0, xzr, x9, eq  // eq = none
  411e4c:	bl	4153c8 <wcrtomb@plt+0x12768>
  411e50:	cbnz	x22, 411e58 <wcrtomb@plt+0xf1f8>
  411e54:	stp	xzr, xzr, [x0]
  411e58:	add	x8, x0, #0x10
  411e5c:	str	x8, [x19, #432]
  411e60:	cmp	x22, x20
  411e64:	b.ge	411ea0 <wcrtomb@plt+0xf240>  // b.tcont
  411e68:	ldrb	w8, [x19, #1048]
  411e6c:	b	411e7c <wcrtomb@plt+0xf21c>
  411e70:	add	x22, x22, #0x1
  411e74:	cmp	x22, x20
  411e78:	b.ge	411ea0 <wcrtomb@plt+0xf240>  // b.tcont
  411e7c:	ldr	x9, [x19, #368]
  411e80:	lsl	x10, x22, #3
  411e84:	str	xzr, [x9, x10]
  411e88:	ldr	x9, [x19, #376]
  411e8c:	str	xzr, [x9, x10]
  411e90:	cbz	w8, 411e70 <wcrtomb@plt+0xf210>
  411e94:	ldr	x9, [x19, #432]
  411e98:	str	xzr, [x9, x22, lsl #3]
  411e9c:	b	411e70 <wcrtomb@plt+0xf210>
  411ea0:	ldp	x20, x19, [sp, #48]
  411ea4:	ldp	x22, x21, [sp, #32]
  411ea8:	ldr	x23, [sp, #16]
  411eac:	ldp	x29, x30, [sp], #64
  411eb0:	ret
  411eb4:	bl	41563c <wcrtomb@plt+0x129dc>
  411eb8:	sub	sp, sp, #0x70
  411ebc:	stp	x29, x30, [sp, #16]
  411ec0:	stp	x28, x27, [sp, #32]
  411ec4:	stp	x26, x25, [sp, #48]
  411ec8:	stp	x24, x23, [sp, #64]
  411ecc:	stp	x22, x21, [sp, #80]
  411ed0:	stp	x20, x19, [sp, #96]
  411ed4:	ldr	x8, [x2]
  411ed8:	mov	x23, x2
  411edc:	mov	x19, x0
  411ee0:	mov	x20, x1
  411ee4:	ldrb	w9, [x8]
  411ee8:	add	x29, sp, #0x10
  411eec:	add	x9, x0, x9, lsl #2
  411ef0:	ldr	w26, [x9, #1308]
  411ef4:	cmn	w26, #0x1
  411ef8:	b.ne	411f4c <wcrtomb@plt+0xf2ec>  // b.any
  411efc:	add	x21, x19, #0x110
  411f00:	sub	x2, x3, x8
  411f04:	sub	x0, x29, #0x4
  411f08:	mov	x1, x8
  411f0c:	mov	x3, x21
  411f10:	bl	415680 <wcrtomb@plt+0x12a20>
  411f14:	sub	x8, x0, #0x1
  411f18:	cmn	x8, #0x3
  411f1c:	b.cs	411f48 <wcrtomb@plt+0xf2e8>  // b.hs, b.nlast
  411f20:	ldur	w26, [x29, #-4]
  411f24:	mov	x24, x0
  411f28:	add	x21, x19, #0x198
  411f2c:	add	x25, x19, #0x1a0
  411f30:	cmp	w24, #0x1
  411f34:	str	xzr, [x19, #416]
  411f38:	b.ge	411f5c <wcrtomb@plt+0xf2fc>  // b.tcont
  411f3c:	mov	w27, wzr
  411f40:	mov	x22, x20
  411f44:	b	412004 <wcrtomb@plt+0xf3a4>
  411f48:	str	xzr, [x21]
  411f4c:	add	x21, x19, #0x198
  411f50:	add	x25, x19, #0x1a0
  411f54:	mov	w24, #0x1                   	// #1
  411f58:	str	xzr, [x19, #416]
  411f5c:	mov	w27, wzr
  411f60:	mov	x22, x20
  411f64:	b	411f84 <wcrtomb@plt+0xf324>
  411f68:	add	x9, x8, #0x1
  411f6c:	str	x9, [x23]
  411f70:	ldrb	w8, [x8]
  411f74:	add	w27, w27, #0x1
  411f78:	cmp	w24, w27
  411f7c:	ldr	x22, [x28, x8, lsl #3]
  411f80:	b.eq	412000 <wcrtomb@plt+0xf3a0>  // b.none
  411f84:	cbz	w27, 411f94 <wcrtomb@plt+0xf334>
  411f88:	ldrsw	x8, [x19, #364]
  411f8c:	cmp	x22, x8
  411f90:	b.lt	412004 <wcrtomb@plt+0xf3a4>  // b.tstop
  411f94:	ldr	x8, [x19, #368]
  411f98:	ldr	x28, [x8, x22, lsl #3]
  411f9c:	cbnz	x28, 411fd8 <wcrtomb@plt+0xf378>
  411fa0:	ldr	x8, [x19, #376]
  411fa4:	ldr	x28, [x8, x22, lsl #3]
  411fa8:	cbnz	x28, 411fd8 <wcrtomb@plt+0xf378>
  411fac:	ldr	x8, [x23]
  411fb0:	mov	x0, x22
  411fb4:	mov	x1, x19
  411fb8:	ldrb	w2, [x8]
  411fbc:	bl	4122dc <wcrtomb@plt+0xf67c>
  411fc0:	ldr	x8, [x19, #368]
  411fc4:	ldr	x28, [x8, x22, lsl #3]
  411fc8:	cbnz	x28, 411fd8 <wcrtomb@plt+0xf378>
  411fcc:	ldr	x8, [x19, #376]
  411fd0:	ldr	x28, [x8, x22, lsl #3]
  411fd4:	cbz	x28, 4122bc <wcrtomb@plt+0xf65c>
  411fd8:	ldr	x8, [x23]
  411fdc:	ldrb	w2, [x8]
  411fe0:	ldr	x9, [x28, x2, lsl #3]
  411fe4:	cmn	x9, #0x2
  411fe8:	b.ne	411f68 <wcrtomb@plt+0xf308>  // b.any
  411fec:	mov	x0, x22
  411ff0:	mov	x1, x19
  411ff4:	bl	4122dc <wcrtomb@plt+0xf67c>
  411ff8:	ldr	x8, [x23]
  411ffc:	b	411f68 <wcrtomb@plt+0xf308>
  412000:	mov	w27, w24
  412004:	ldr	x8, [x23]
  412008:	sub	w9, w24, w27
  41200c:	cmn	w26, #0x1
  412010:	add	x8, x8, w9, sxtw
  412014:	str	x8, [x23]
  412018:	b.eq	412088 <wcrtomb@plt+0xf428>  // b.none
  41201c:	ldr	x8, [x19, #296]
  412020:	mov	w9, #0x50                  	// #80
  412024:	madd	x9, x20, x9, x8
  412028:	ldr	x9, [x9, #72]
  41202c:	tbz	x9, #63, 4120f4 <wcrtomb@plt+0xf494>
  412030:	ldr	x9, [x19, #440]
  412034:	cmp	x9, #0x400
  412038:	b.lt	4120e0 <wcrtomb@plt+0xf480>  // b.tstop
  41203c:	ldr	x8, [x19, #352]
  412040:	tbnz	x8, #63, 412070 <wcrtomb@plt+0xf410>
  412044:	mov	x23, #0xffffffffffffffff    	// #-1
  412048:	ldr	x8, [x19, #432]
  41204c:	lsl	x24, x23, #3
  412050:	ldr	x0, [x8, x24]
  412054:	bl	402a10 <free@plt>
  412058:	ldr	x8, [x19, #432]
  41205c:	add	x23, x23, #0x1
  412060:	str	xzr, [x8, x24]
  412064:	ldr	x8, [x19, #352]
  412068:	cmp	x23, x8
  41206c:	b.lt	412048 <wcrtomb@plt+0xf3e8>  // b.tstop
  412070:	ldp	x8, x9, [x19, #296]
  412074:	cmp	x9, #0x1
  412078:	b.lt	4120d8 <wcrtomb@plt+0xf478>  // b.tstop
  41207c:	b.ne	412090 <wcrtomb@plt+0xf430>  // b.any
  412080:	mov	x10, xzr
  412084:	b	4120b8 <wcrtomb@plt+0xf458>
  412088:	mov	x23, x22
  41208c:	b	412298 <wcrtomb@plt+0xf638>
  412090:	and	x10, x9, #0xfffffffffffffffe
  412094:	add	x11, x8, #0x98
  412098:	mov	x12, #0xffffffffffffffff    	// #-1
  41209c:	mov	x13, x10
  4120a0:	stur	x12, [x11, #-80]
  4120a4:	str	x12, [x11], #160
  4120a8:	subs	x13, x13, #0x2
  4120ac:	b.ne	4120a0 <wcrtomb@plt+0xf440>  // b.any
  4120b0:	cmp	x9, x10
  4120b4:	b.eq	4120d8 <wcrtomb@plt+0xf478>  // b.none
  4120b8:	mov	w11, #0x50                  	// #80
  4120bc:	madd	x11, x10, x11, x8
  4120c0:	add	x11, x11, #0x48
  4120c4:	mov	x12, #0xffffffffffffffff    	// #-1
  4120c8:	add	x10, x10, #0x1
  4120cc:	cmp	x10, x9
  4120d0:	str	x12, [x11], #80
  4120d4:	b.lt	4120c8 <wcrtomb@plt+0xf468>  // b.tstop
  4120d8:	mov	x9, xzr
  4120dc:	str	xzr, [x19, #440]
  4120e0:	add	x10, x9, #0x1
  4120e4:	mov	w11, #0x50                  	// #80
  4120e8:	str	x10, [x19, #440]
  4120ec:	madd	x10, x20, x11, x8
  4120f0:	str	x9, [x10, #72]
  4120f4:	ldr	x10, [x19, #432]
  4120f8:	ldr	x10, [x10, x22, lsl #3]
  4120fc:	cbz	x10, 41210c <wcrtomb@plt+0xf4ac>
  412100:	ldr	x23, [x10, x9, lsl #3]
  412104:	tbz	x23, #63, 412298 <wcrtomb@plt+0xf638>
  412108:	b	412138 <wcrtomb@plt+0xf4d8>
  41210c:	mov	w0, #0x2000                	// #8192
  412110:	bl	415348 <wcrtomb@plt+0x126e8>
  412114:	ldr	x8, [x19, #432]
  412118:	lsl	x9, x22, #3
  41211c:	mov	w1, #0xff                  	// #255
  412120:	mov	w2, #0x2000                	// #8192
  412124:	str	x0, [x8, x9]
  412128:	ldr	x8, [x19, #432]
  41212c:	ldr	x0, [x8, x9]
  412130:	bl	402800 <memset@plt>
  412134:	ldr	x8, [x19, #296]
  412138:	mov	w9, #0x50                  	// #80
  41213c:	madd	x9, x20, x9, x8
  412140:	cmn	x22, #0x1
  412144:	add	x23, x9, #0x30
  412148:	b.eq	41216c <wcrtomb@plt+0xf50c>  // b.none
  41214c:	mov	w9, #0x50                  	// #80
  412150:	madd	x8, x22, x9, x8
  412154:	add	x1, x8, #0x8
  412158:	mov	w2, #0xffffffff            	// #-1
  41215c:	mov	x0, x23
  412160:	mov	x3, x21
  412164:	bl	4114b8 <wcrtomb@plt+0xe858>
  412168:	b	4121d4 <wcrtomb@plt+0xf574>
  41216c:	mov	w9, #0x50                  	// #80
  412170:	madd	x26, x20, x9, x8
  412174:	ldr	x10, [x19, #424]
  412178:	ldr	x9, [x26, #56]!
  41217c:	cmp	x10, x9
  412180:	b.ge	4121b8 <wcrtomb@plt+0xf558>  // b.tcont
  412184:	ldr	x0, [x21]
  412188:	add	x24, x19, #0x1a8
  41218c:	bl	402a10 <free@plt>
  412190:	ldr	x8, [x26]
  412194:	ldr	x9, [x24]
  412198:	mov	x3, #0xffffffffffffffff    	// #-1
  41219c:	mov	w4, #0x10                  	// #16
  4121a0:	mov	x0, xzr
  4121a4:	sub	x2, x8, x9
  4121a8:	mov	x1, x24
  4121ac:	bl	40f91c <wcrtomb@plt+0xccbc>
  4121b0:	str	x0, [x21]
  4121b4:	ldr	x9, [x26]
  4121b8:	str	x9, [x25]
  4121bc:	ldr	x8, [x26]
  4121c0:	cbz	x8, 4121d8 <wcrtomb@plt+0xf578>
  4121c4:	ldr	x0, [x21]
  4121c8:	ldr	x1, [x23]
  4121cc:	lsl	x2, x8, #4
  4121d0:	bl	402580 <memcpy@plt>
  4121d4:	ldr	x9, [x25]
  4121d8:	cmp	x9, #0x1
  4121dc:	b.lt	4121fc <wcrtomb@plt+0xf59c>  // b.tstop
  4121e0:	ldr	x8, [x19, #344]
  4121e4:	ldr	x10, [x21]
  4121e8:	cmp	x9, #0x3
  4121ec:	b.cs	412204 <wcrtomb@plt+0xf5a4>  // b.hs, b.nlast
  4121f0:	mov	x11, xzr
  4121f4:	mov	w12, wzr
  4121f8:	b	412244 <wcrtomb@plt+0xf5e4>
  4121fc:	mov	w2, #0x7                   	// #7
  412200:	b	412264 <wcrtomb@plt+0xf604>
  412204:	and	x11, x9, #0xfffffffffffffffe
  412208:	mov	w12, wzr
  41220c:	mov	w13, wzr
  412210:	add	x14, x10, #0x10
  412214:	mov	x15, x11
  412218:	ldur	x16, [x14, #-16]
  41221c:	ldr	x17, [x14], #32
  412220:	subs	x15, x15, #0x2
  412224:	ldr	w16, [x8, x16, lsl #2]
  412228:	ldr	w17, [x8, x17, lsl #2]
  41222c:	orr	w12, w16, w12
  412230:	orr	w13, w17, w13
  412234:	b.ne	412218 <wcrtomb@plt+0xf5b8>  // b.any
  412238:	cmp	x9, x11
  41223c:	orr	w12, w13, w12
  412240:	b.eq	412260 <wcrtomb@plt+0xf600>  // b.none
  412244:	sub	x9, x9, x11
  412248:	add	x10, x10, x11, lsl #4
  41224c:	ldr	x11, [x10], #16
  412250:	subs	x9, x9, #0x1
  412254:	ldr	w11, [x8, x11, lsl #2]
  412258:	orr	w12, w11, w12
  41225c:	b.ne	41224c <wcrtomb@plt+0xf5ec>  // b.any
  412260:	eor	w2, w12, #0x7
  412264:	mov	x0, x19
  412268:	mov	x1, x21
  41226c:	bl	411178 <wcrtomb@plt+0xe518>
  412270:	mov	x23, x0
  412274:	mov	x0, x19
  412278:	bl	411cfc <wcrtomb@plt+0xf09c>
  41227c:	ldr	x9, [x19, #296]
  412280:	ldr	x8, [x19, #432]
  412284:	mov	w10, #0x50                  	// #80
  412288:	madd	x9, x20, x10, x9
  41228c:	ldr	x8, [x8, x22, lsl #3]
  412290:	ldr	x9, [x9, #72]
  412294:	str	x23, [x8, x9, lsl #3]
  412298:	mov	x0, x23
  41229c:	ldp	x20, x19, [sp, #96]
  4122a0:	ldp	x22, x21, [sp, #80]
  4122a4:	ldp	x24, x23, [sp, #64]
  4122a8:	ldp	x26, x25, [sp, #48]
  4122ac:	ldp	x28, x27, [sp, #32]
  4122b0:	ldp	x29, x30, [sp, #16]
  4122b4:	add	sp, sp, #0x70
  4122b8:	ret
  4122bc:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x115a8>
  4122c0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4122c4:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  4122c8:	add	x0, x0, #0x4bb
  4122cc:	add	x1, x1, #0x39e
  4122d0:	add	x3, x3, #0x4e8
  4122d4:	mov	w2, #0xc93                 	// #3219
  4122d8:	bl	402bc0 <__assert_fail@plt>
  4122dc:	sub	sp, sp, #0x150
  4122e0:	stp	x29, x30, [sp, #240]
  4122e4:	stp	x28, x27, [sp, #256]
  4122e8:	stp	x26, x25, [sp, #272]
  4122ec:	stp	x24, x23, [sp, #288]
  4122f0:	stp	x22, x21, [sp, #304]
  4122f4:	stp	x20, x19, [sp, #320]
  4122f8:	ldr	x8, [x1, #296]
  4122fc:	mov	w9, #0x50                  	// #80
  412300:	add	x29, sp, #0xf0
  412304:	str	x2, [sp, #64]
  412308:	madd	x8, x0, x9, x8
  41230c:	ldrh	w8, [x8, #34]
  412310:	mov	w9, #0x178                 	// #376
  412314:	cmp	w8, #0x0
  412318:	mov	w8, #0x170                 	// #368
  41231c:	csel	x8, x8, x9, eq  // eq = none
  412320:	ldr	x19, [x1, x8]
  412324:	ldr	x11, [x19, x0, lsl #3]
  412328:	stp	x0, x1, [sp, #112]
  41232c:	cbnz	x11, 4123d8 <wcrtomb@plt+0xf778>
  412330:	ldr	w8, [x1, #360]
  412334:	cmp	w8, #0x400
  412338:	b.lt	412398 <wcrtomb@plt+0xf738>  // b.tstop
  41233c:	ldrsw	x20, [x1, #364]
  412340:	ldr	x8, [x1, #352]
  412344:	cmp	x8, x20
  412348:	b.le	412390 <wcrtomb@plt+0xf730>
  41234c:	ldr	x8, [x1, #368]
  412350:	lsl	x21, x20, #3
  412354:	ldr	x0, [x8, x21]
  412358:	bl	402a10 <free@plt>
  41235c:	ldr	x8, [sp, #120]
  412360:	ldr	x8, [x8, #376]
  412364:	ldr	x0, [x8, x21]
  412368:	bl	402a10 <free@plt>
  41236c:	ldr	x1, [sp, #120]
  412370:	add	x20, x20, #0x1
  412374:	ldr	x8, [x1, #376]
  412378:	str	xzr, [x8, x21]
  41237c:	ldr	x8, [x1, #368]
  412380:	str	xzr, [x8, x21]
  412384:	ldr	x8, [x1, #352]
  412388:	cmp	x20, x8
  41238c:	b.lt	41234c <wcrtomb@plt+0xf6ec>  // b.tstop
  412390:	mov	w8, wzr
  412394:	str	wzr, [x1, #360]
  412398:	add	w8, w8, #0x1
  41239c:	mov	w0, #0x800                 	// #2048
  4123a0:	str	w8, [x1, #360]
  4123a4:	bl	415348 <wcrtomb@plt+0x126e8>
  4123a8:	mov	x11, x0
  4123ac:	ldr	x0, [sp, #112]
  4123b0:	mov	x9, #0xfffffffffffffffe    	// #-2
  4123b4:	mov	x8, xzr
  4123b8:	dup	v0.2d, x9
  4123bc:	str	x11, [x19, x0, lsl #3]
  4123c0:	add	x9, x11, x8
  4123c4:	add	x8, x8, #0x20
  4123c8:	cmp	x8, #0x800
  4123cc:	stp	q0, q0, [x9]
  4123d0:	b.ne	4123c0 <wcrtomb@plt+0xf760>  // b.any
  4123d4:	ldr	x1, [sp, #120]
  4123d8:	ldr	x8, [x1, #384]
  4123dc:	mov	w9, #0x50                  	// #80
  4123e0:	strb	wzr, [x8, x0]
  4123e4:	ldr	x8, [x1, #296]
  4123e8:	madd	x9, x0, x9, x8
  4123ec:	ldrb	w8, [x9, #32]
  4123f0:	ldrh	w9, [x9, #34]
  4123f4:	and	w10, w8, w9, lsr #6
  4123f8:	tst	w10, #0x7
  4123fc:	b.eq	412424 <wcrtomb@plt+0xf7c4>  // b.none
  412400:	ldr	x8, [x1, #384]
  412404:	ldrb	w9, [x8, x0]
  412408:	orr	w9, w9, #0x4
  41240c:	strb	w9, [x8, x0]
  412410:	ldr	x8, [x1, #296]
  412414:	mov	w9, #0x50                  	// #80
  412418:	madd	x9, x0, x9, x8
  41241c:	ldrb	w8, [x9, #32]
  412420:	ldrh	w9, [x9, #34]
  412424:	and	w10, w8, w9, lsr #3
  412428:	tst	w10, #0x7
  41242c:	b.eq	412454 <wcrtomb@plt+0xf7f4>  // b.none
  412430:	ldr	x8, [x1, #384]
  412434:	ldrb	w9, [x8, x0]
  412438:	orr	w9, w9, #0x2
  41243c:	strb	w9, [x8, x0]
  412440:	ldr	x8, [x1, #296]
  412444:	mov	w9, #0x50                  	// #80
  412448:	madd	x9, x0, x9, x8
  41244c:	ldrb	w8, [x9, #32]
  412450:	ldrh	w9, [x9, #34]
  412454:	and	w8, w9, w8
  412458:	tst	w8, #0x7
  41245c:	b.eq	412470 <wcrtomb@plt+0xf810>  // b.none
  412460:	ldr	x8, [x1, #384]
  412464:	ldrb	w9, [x8, x0]
  412468:	orr	w9, w9, #0x1
  41246c:	strb	w9, [x8, x0]
  412470:	ldr	x22, [x1, #176]
  412474:	lsr	x8, x22, #59
  412478:	cbnz	x8, 413034 <wcrtomb@plt+0x103d4>
  41247c:	lsl	x0, x22, #4
  412480:	mov	x19, x1
  412484:	str	x11, [sp, #40]
  412488:	bl	415348 <wcrtomb@plt+0x126e8>
  41248c:	stur	x0, [x29, #-16]
  412490:	ldr	x8, [x19, #296]
  412494:	ldr	x13, [sp, #112]
  412498:	mov	w9, #0x50                  	// #80
  41249c:	mov	x24, x0
  4124a0:	mov	x14, x19
  4124a4:	madd	x9, x13, x9, x8
  4124a8:	ldr	x9, [x9, #16]
  4124ac:	cmp	x9, #0x1
  4124b0:	b.lt	412694 <wcrtomb@plt+0xfa34>  // b.tstop
  4124b4:	ldr	x9, [x14, #320]
  4124b8:	mov	x11, xzr
  4124bc:	mov	x25, xzr
  4124c0:	mov	w15, #0x50                  	// #80
  4124c4:	mov	w23, #0x18                  	// #24
  4124c8:	b	4124e4 <wcrtomb@plt+0xf884>
  4124cc:	madd	x10, x13, x15, x8
  4124d0:	ldr	x11, [sp, #104]
  4124d4:	ldr	x10, [x10, #16]
  4124d8:	add	x11, x11, #0x1
  4124dc:	cmp	x11, x10
  4124e0:	b.ge	412698 <wcrtomb@plt+0xfa38>  // b.tcont
  4124e4:	madd	x10, x13, x15, x8
  4124e8:	ldr	x10, [x10, #8]
  4124ec:	lsl	x28, x11, #4
  4124f0:	str	x11, [sp, #104]
  4124f4:	ldr	x10, [x10, x28]
  4124f8:	madd	x11, x10, x23, x9
  4124fc:	ldr	x11, [x11, #8]
  412500:	cmp	x11, #0x1
  412504:	b.lt	4124cc <wcrtomb@plt+0xf86c>  // b.tstop
  412508:	mov	x26, xzr
  41250c:	b	412544 <wcrtomb@plt+0xf8e4>
  412510:	add	x8, x24, x20, lsl #4
  412514:	stp	x21, x19, [x8]
  412518:	ldr	x9, [x14, #320]
  41251c:	ldr	x8, [x14, #296]
  412520:	add	x25, x25, #0x1
  412524:	madd	x10, x13, x15, x8
  412528:	ldr	x10, [x10, #8]
  41252c:	add	x26, x26, #0x1
  412530:	ldr	x10, [x10, x28]
  412534:	madd	x11, x10, x23, x9
  412538:	ldr	x11, [x11, #8]
  41253c:	cmp	x26, x11
  412540:	b.ge	4124cc <wcrtomb@plt+0xf86c>  // b.tcont
  412544:	mul	x10, x10, x23
  412548:	ldr	x10, [x9, x10]
  41254c:	cmp	x25, #0x1
  412550:	add	x10, x10, x26, lsl #4
  412554:	ldp	x21, x19, [x10]
  412558:	b.lt	4125a8 <wcrtomb@plt+0xf948>  // b.tstop
  41255c:	mov	x20, xzr
  412560:	mov	x10, x25
  412564:	b	412574 <wcrtomb@plt+0xf914>
  412568:	add	x20, x11, #0x1
  41256c:	cmp	x20, x10
  412570:	b.ge	4125ac <wcrtomb@plt+0xf94c>  // b.tcont
  412574:	add	x11, x10, x20
  412578:	asr	x11, x11, #1
  41257c:	lsl	x12, x11, #4
  412580:	ldr	x12, [x24, x12]
  412584:	cmp	x12, x21
  412588:	b.lt	412568 <wcrtomb@plt+0xf908>  // b.tstop
  41258c:	mov	x10, x11
  412590:	b.ne	41256c <wcrtomb@plt+0xf90c>  // b.any
  412594:	add	x10, x24, x11, lsl #4
  412598:	ldr	w11, [x10, #8]
  41259c:	orr	w11, w11, w19
  4125a0:	str	w11, [x10, #8]
  4125a4:	b	412524 <wcrtomb@plt+0xf8c4>
  4125a8:	mov	x20, xzr
  4125ac:	cmp	x22, x25
  4125b0:	b.gt	412660 <wcrtomb@plt+0xfa00>
  4125b4:	adds	x8, x22, x22, asr #1
  4125b8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4125bc:	csel	x27, x9, x8, vs
  4125c0:	tbnz	x27, #63, 4125d8 <wcrtomb@plt+0xf978>
  4125c4:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4125c8:	cmp	x27, x8
  4125cc:	b.le	4125f0 <wcrtomb@plt+0xf990>
  4125d0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4125d4:	b	412600 <wcrtomb@plt+0xf9a0>
  4125d8:	cmn	x27, #0x1
  4125dc:	b.eq	4125fc <wcrtomb@plt+0xf99c>  // b.none
  4125e0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4125e4:	sdiv	x8, x8, x27
  4125e8:	cmp	x8, #0x10
  4125ec:	b.lt	4125d0 <wcrtomb@plt+0xf970>  // b.tstop
  4125f0:	lsl	x1, x27, #4
  4125f4:	cmp	x1, #0x7f
  4125f8:	b.gt	412608 <wcrtomb@plt+0xf9a8>
  4125fc:	mov	w8, #0x80                  	// #128
  412600:	lsr	x27, x8, #4
  412604:	and	x1, x8, #0x7ffffffffffffff0
  412608:	cmp	x27, x22
  41260c:	b.gt	412648 <wcrtomb@plt+0xf9e8>
  412610:	adds	x27, x22, #0x1
  412614:	b.vs	413034 <wcrtomb@plt+0x103d4>
  412618:	tbnz	x27, #63, 41262c <wcrtomb@plt+0xf9cc>
  41261c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412620:	cmp	x27, x8
  412624:	b.le	412644 <wcrtomb@plt+0xf9e4>
  412628:	b	413034 <wcrtomb@plt+0x103d4>
  41262c:	cmn	x27, #0x1
  412630:	b.eq	412644 <wcrtomb@plt+0xf9e4>  // b.none
  412634:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412638:	sdiv	x8, x8, x27
  41263c:	cmp	x8, #0x10
  412640:	b.lt	413034 <wcrtomb@plt+0x103d4>  // b.tstop
  412644:	lsl	x1, x27, #4
  412648:	mov	x0, x24
  41264c:	bl	4153c8 <wcrtomb@plt+0x12768>
  412650:	ldp	x13, x14, [sp, #112]
  412654:	mov	x24, x0
  412658:	mov	x22, x27
  41265c:	mov	w15, #0x50                  	// #80
  412660:	cmp	x25, x20
  412664:	stur	x24, [x29, #-16]
  412668:	b.le	412510 <wcrtomb@plt+0xf8b0>
  41266c:	add	x8, x24, x25, lsl #4
  412670:	mov	x9, x25
  412674:	ldur	q0, [x8, #-16]
  412678:	sub	x9, x9, #0x1
  41267c:	sub	x10, x8, #0x10
  412680:	cmp	x9, x20
  412684:	str	q0, [x8]
  412688:	mov	x8, x10
  41268c:	b.gt	412674 <wcrtomb@plt+0xfa14>
  412690:	b	412510 <wcrtomb@plt+0xf8b0>
  412694:	mov	x25, xzr
  412698:	ldr	x9, [x14, #176]
  41269c:	lsr	x8, x9, #59
  4126a0:	cbnz	x8, 413034 <wcrtomb@plt+0x103d4>
  4126a4:	lsl	x0, x9, #4
  4126a8:	mov	x19, x9
  4126ac:	bl	415348 <wcrtomb@plt+0x126e8>
  4126b0:	mov	x18, x19
  4126b4:	mov	x15, x0
  4126b8:	stur	x0, [x29, #-40]
  4126bc:	movi	v0.2d, #0xffffffffffffffff
  4126c0:	cmp	x25, #0x1
  4126c4:	mov	x0, xzr
  4126c8:	stp	xzr, x19, [x29, #-32]
  4126cc:	stp	q0, q0, [x29, #-80]
  4126d0:	b.lt	412bac <wcrtomb@plt+0xff4c>  // b.tstop
  4126d4:	ldr	x9, [sp, #64]
  4126d8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  4126dc:	ldr	q0, [x8, #832]
  4126e0:	ldp	x13, x14, [sp, #112]
  4126e4:	mov	w3, #0x1                   	// #1
  4126e8:	mov	x23, xzr
  4126ec:	ubfx	x2, x9, #6, #2
  4126f0:	and	x4, x9, #0xff
  4126f4:	mov	x21, #0xffffffffffffffff    	// #-1
  4126f8:	movi	v4.2d, #0x0
  4126fc:	sub	x5, x29, #0x70
  412700:	mov	w6, #0x50                  	// #80
  412704:	lsl	x7, x3, x9
  412708:	mov	x16, #0xffffffffffffffff    	// #-1
  41270c:	mov	x17, #0xffffffffffffffff    	// #-1
  412710:	mov	x22, #0xffffffffffffffff    	// #-1
  412714:	str	q0, [sp]
  412718:	stp	x4, x2, [sp, #88]
  41271c:	str	x7, [sp, #80]
  412720:	b	412794 <wcrtomb@plt+0xfb34>
  412724:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412728:	cmp	x19, x8
  41272c:	b.gt	413034 <wcrtomb@plt+0x103d4>
  412730:	lsl	x1, x19, #4
  412734:	mov	x0, x15
  412738:	bl	4153c8 <wcrtomb@plt+0x12768>
  41273c:	mov	x15, x0
  412740:	ldp	x13, x14, [sp, #112]
  412744:	ldp	x4, x2, [sp, #88]
  412748:	ldr	x7, [sp, #80]
  41274c:	ldr	x0, [sp, #104]
  412750:	mov	x18, x19
  412754:	mov	x16, x28
  412758:	mov	x17, x22
  41275c:	mov	x22, x20
  412760:	mov	w3, #0x1                   	// #1
  412764:	movi	v4.2d, #0x0
  412768:	sub	x5, x29, #0x70
  41276c:	mov	w6, #0x50                  	// #80
  412770:	stur	x19, [x29, #-24]
  412774:	add	x9, x0, #0x1
  412778:	add	x8, x15, x0, lsl #4
  41277c:	mov	x0, x9
  412780:	stp	x15, x9, [x29, #-40]
  412784:	stp	x27, x26, [x8]
  412788:	add	x23, x23, #0x1
  41278c:	cmp	x23, x25
  412790:	b.eq	412bc0 <wcrtomb@plt+0xff60>  // b.none
  412794:	add	x9, x24, x23, lsl #4
  412798:	ldr	x8, [x14, #144]
  41279c:	ldp	x27, x26, [x9]
  4127a0:	ldr	x9, [x8, x27, lsl #3]
  4127a4:	cmp	x9, #0xff
  4127a8:	b.hi	4127e0 <wcrtomb@plt+0xfb80>  // b.pmore
  4127ac:	stp	q4, q4, [x29, #-112]
  4127b0:	lsl	x9, x27, #3
  4127b4:	ldr	x10, [x8, x9]
  4127b8:	ubfx	x11, x10, #6, #26
  4127bc:	lsl	x11, x11, #3
  4127c0:	ldr	x12, [x5, x11]
  4127c4:	lsl	x10, x3, x10
  4127c8:	orr	x10, x10, x12
  4127cc:	str	x10, [x5, x11]
  4127d0:	ldr	x8, [x8, x9]
  4127d4:	cmp	x8, x4
  4127d8:	cset	w28, eq  // eq = none
  4127dc:	b	4129e0 <wcrtomb@plt+0xfd80>
  4127e0:	cmp	x9, #0x114
  4127e4:	b.lt	412810 <wcrtomb@plt+0xfbb0>  // b.tstop
  4127e8:	ldr	x8, [x14]
  4127ec:	add	x8, x8, x9, lsl #5
  4127f0:	mov	x9, #0xffffffffffffdd80    	// #-8832
  4127f4:	add	x8, x8, x9
  4127f8:	ldp	q1, q0, [x8]
  4127fc:	stp	q1, q0, [x29, #-112]
  412800:	ldr	x8, [x5, x2, lsl #3]
  412804:	tst	x8, x7
  412808:	cset	w28, ne  // ne = any
  41280c:	b	4129e0 <wcrtomb@plt+0xfd80>
  412810:	cmp	x9, #0x10a
  412814:	b.ne	412788 <wcrtomb@plt+0xfb28>  // b.any
  412818:	ldr	x8, [x14]
  41281c:	ldr	x9, [x14, #24]
  412820:	add	x8, x8, x9, lsl #5
  412824:	ldp	q1, q0, [x8]
  412828:	stp	q1, q0, [x29, #-112]
  41282c:	ldr	x8, [x14, #296]
  412830:	ldr	x9, [x5, x2, lsl #3]
  412834:	madd	x10, x13, x6, x8
  412838:	ldrb	w10, [x10, #32]
  41283c:	tst	x9, x7
  412840:	cset	w28, ne  // ne = any
  412844:	and	w9, w26, w10
  412848:	tst	w9, #0x7
  41284c:	b.eq	4129e0 <wcrtomb@plt+0xfd80>  // b.none
  412850:	str	x0, [sp, #104]
  412854:	madd	x20, x13, x6, x8
  412858:	ldr	x19, [x20, #56]!
  41285c:	str	x21, [sp, #72]
  412860:	cbnz	x19, 4128cc <wcrtomb@plt+0xfc6c>
  412864:	add	x9, x13, x13, lsl #2
  412868:	lsl	x19, x9, #4
  41286c:	add	x8, x8, x19
  412870:	mov	w0, #0x10                  	// #16
  412874:	stp	x8, x17, [sp, #24]
  412878:	stp	x22, x15, [sp, #48]
  41287c:	mov	x21, x16
  412880:	mov	x22, x18
  412884:	bl	415348 <wcrtomb@plt+0x126e8>
  412888:	ldp	x8, x17, [sp, #24]
  41288c:	ldr	q0, [sp]
  412890:	ldp	x13, x14, [sp, #112]
  412894:	ldp	x7, x4, [sp, #80]
  412898:	mov	x18, x22
  41289c:	ldp	x22, x15, [sp, #48]
  4128a0:	str	x0, [x8, #48]
  4128a4:	str	q0, [x20]
  4128a8:	ldr	x8, [x14, #296]
  4128ac:	ldr	x2, [sp, #96]
  4128b0:	mov	w6, #0x50                  	// #80
  4128b4:	sub	x5, x29, #0x70
  4128b8:	add	x9, x8, x19
  4128bc:	ldr	x19, [x9, #56]
  4128c0:	movi	v4.2d, #0x0
  4128c4:	mov	w3, #0x1                   	// #1
  4128c8:	mov	x16, x21
  4128cc:	madd	x12, x13, x6, x8
  4128d0:	cmp	x19, #0x0
  4128d4:	add	x20, x12, #0x30
  4128d8:	b.le	41292c <wcrtomb@plt+0xfccc>
  4128dc:	ldr	x0, [x20]
  4128e0:	mov	x21, xzr
  4128e4:	mov	x9, x19
  4128e8:	b	4128f8 <wcrtomb@plt+0xfc98>
  4128ec:	add	x21, x10, #0x1
  4128f0:	cmp	x21, x9
  4128f4:	b.ge	412934 <wcrtomb@plt+0xfcd4>  // b.tcont
  4128f8:	add	x10, x9, x21
  4128fc:	asr	x10, x10, #1
  412900:	lsl	x11, x10, #4
  412904:	ldr	x11, [x0, x11]
  412908:	cmp	x11, x27
  41290c:	b.lt	4128ec <wcrtomb@plt+0xfc8c>  // b.tstop
  412910:	mov	x9, x10
  412914:	b.ne	4128f0 <wcrtomb@plt+0xfc90>  // b.any
  412918:	add	x8, x0, x10, lsl #4
  41291c:	ldr	w9, [x8, #8]
  412920:	orr	w9, w9, w26
  412924:	str	w9, [x8, #8]
  412928:	b	4129d8 <wcrtomb@plt+0xfd78>
  41292c:	ldr	x0, [x20]
  412930:	mov	x21, xzr
  412934:	madd	x1, x13, x6, x8
  412938:	ldr	x8, [x1, #64]!
  41293c:	cmp	x8, x19
  412940:	b.gt	412990 <wcrtomb@plt+0xfd30>
  412944:	mov	w2, #0x1                   	// #1
  412948:	mov	x3, #0xffffffffffffffff    	// #-1
  41294c:	mov	w4, #0x10                  	// #16
  412950:	stp	x22, x15, [sp, #48]
  412954:	stp	x18, x16, [sp, #24]
  412958:	mov	x22, x17
  41295c:	str	x12, [sp, #16]
  412960:	bl	40f91c <wcrtomb@plt+0xccbc>
  412964:	ldp	x12, x18, [sp, #16]
  412968:	ldp	x7, x4, [sp, #80]
  41296c:	ldr	x2, [sp, #96]
  412970:	mov	x17, x22
  412974:	ldp	x22, x15, [sp, #48]
  412978:	ldr	x16, [sp, #32]
  41297c:	ldp	x13, x14, [sp, #112]
  412980:	mov	w6, #0x50                  	// #80
  412984:	sub	x5, x29, #0x70
  412988:	movi	v4.2d, #0x0
  41298c:	mov	w3, #0x1                   	// #1
  412990:	add	x8, x12, #0x38
  412994:	cmp	x19, x21
  412998:	str	x0, [x20]
  41299c:	b.le	4129c4 <wcrtomb@plt+0xfd64>
  4129a0:	lsl	x9, x19, #4
  4129a4:	add	x10, x0, x9
  4129a8:	ldur	q0, [x10, #-16]
  4129ac:	sub	x19, x19, #0x1
  4129b0:	cmp	x19, x21
  4129b4:	sub	x9, x9, #0x10
  4129b8:	str	q0, [x10]
  4129bc:	ldr	x0, [x20]
  4129c0:	b.gt	4129a4 <wcrtomb@plt+0xfd44>
  4129c4:	add	x9, x0, x21, lsl #4
  4129c8:	stp	x27, x26, [x9]
  4129cc:	ldr	x9, [x8]
  4129d0:	add	x9, x9, #0x1
  4129d4:	str	x9, [x8]
  4129d8:	ldr	x0, [sp, #104]
  4129dc:	ldr	x21, [sp, #72]
  4129e0:	cmp	w26, #0x1ff
  4129e4:	b.ne	412a3c <wcrtomb@plt+0xfddc>  // b.any
  4129e8:	ldp	x10, x8, [x29, #-112]
  4129ec:	ldp	x11, x9, [x29, #-96]
  4129f0:	cbz	w28, 412b1c <wcrtomb@plt+0xfebc>
  4129f4:	and	x22, x22, x10
  4129f8:	and	x17, x17, x8
  4129fc:	and	x16, x16, x11
  412a00:	and	x21, x21, x9
  412a04:	cmp	x18, x0
  412a08:	stp	x22, x17, [x29, #-80]
  412a0c:	stp	x16, x21, [x29, #-64]
  412a10:	b.gt	412774 <wcrtomb@plt+0xfb14>
  412a14:	adds	x8, x18, x18, asr #1
  412a18:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412a1c:	csel	x19, x9, x8, vs
  412a20:	str	x0, [sp, #104]
  412a24:	tbnz	x19, #63, 412b38 <wcrtomb@plt+0xfed8>
  412a28:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412a2c:	cmp	x19, x8
  412a30:	b.le	412b50 <wcrtomb@plt+0xfef0>
  412a34:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412a38:	b	412b60 <wcrtomb@plt+0xff00>
  412a3c:	ldr	x8, [x14, #296]
  412a40:	lsr	w9, w26, #3
  412a44:	madd	x8, x13, x6, x8
  412a48:	ldrb	w8, [x8, #32]
  412a4c:	and	w8, w8, #0x7
  412a50:	tst	w8, w26, lsr #6
  412a54:	b.eq	412a74 <wcrtomb@plt+0xfe14>  // b.none
  412a58:	tst	w9, w8
  412a5c:	b.eq	412a98 <wcrtomb@plt+0xfe38>  // b.none
  412a60:	tst	w8, w26
  412a64:	b.eq	412abc <wcrtomb@plt+0xfe5c>  // b.none
  412a68:	ldp	x10, x8, [x29, #-112]
  412a6c:	ldp	x11, x9, [x29, #-96]
  412a70:	b	412af8 <wcrtomb@plt+0xfe98>
  412a74:	ldr	q0, [x14, #1008]
  412a78:	ldp	q1, q2, [x29, #-112]
  412a7c:	bic	v0.16b, v1.16b, v0.16b
  412a80:	stur	q0, [x29, #-112]
  412a84:	ldr	q0, [x14, #1024]
  412a88:	bic	v0.16b, v2.16b, v0.16b
  412a8c:	stur	q0, [x29, #-96]
  412a90:	tst	w9, w8
  412a94:	b.ne	412a60 <wcrtomb@plt+0xfe00>  // b.any
  412a98:	ldr	q0, [x14, #976]
  412a9c:	ldp	q1, q2, [x29, #-112]
  412aa0:	bic	v0.16b, v1.16b, v0.16b
  412aa4:	stur	q0, [x29, #-112]
  412aa8:	ldr	q0, [x14, #992]
  412aac:	bic	v0.16b, v2.16b, v0.16b
  412ab0:	stur	q0, [x29, #-96]
  412ab4:	tst	w8, w26
  412ab8:	b.ne	412a68 <wcrtomb@plt+0xfe08>  // b.any
  412abc:	ldr	q0, [x14, #976]
  412ac0:	ldr	q1, [x14, #1008]
  412ac4:	ldp	q2, q3, [x29, #-112]
  412ac8:	orr	v0.16b, v1.16b, v0.16b
  412acc:	and	v0.16b, v2.16b, v0.16b
  412ad0:	stur	q0, [x29, #-112]
  412ad4:	ldr	q1, [x14, #992]
  412ad8:	ldr	q2, [x14, #1024]
  412adc:	mov	x8, v0.d[1]
  412ae0:	fmov	x10, d0
  412ae4:	orr	v0.16b, v2.16b, v1.16b
  412ae8:	and	v0.16b, v3.16b, v0.16b
  412aec:	mov	x9, v0.d[1]
  412af0:	fmov	x11, d0
  412af4:	stur	q0, [x29, #-96]
  412af8:	orr	x12, x8, x10
  412afc:	orr	x12, x12, x11
  412b00:	orr	x12, x12, x9
  412b04:	cbz	x12, 412788 <wcrtomb@plt+0xfb28>
  412b08:	ldr	x12, [x5, x2, lsl #3]
  412b0c:	tst	x12, x7
  412b10:	cset	w12, ne  // ne = any
  412b14:	and	w12, w28, w12
  412b18:	tbnz	w12, #0, 4129f4 <wcrtomb@plt+0xfd94>
  412b1c:	bic	x22, x22, x10
  412b20:	bic	x17, x17, x8
  412b24:	bic	x16, x16, x11
  412b28:	bic	x21, x21, x9
  412b2c:	stp	x22, x17, [x29, #-80]
  412b30:	stp	x16, x21, [x29, #-64]
  412b34:	b	412788 <wcrtomb@plt+0xfb28>
  412b38:	cmn	x19, #0x1
  412b3c:	b.eq	412b5c <wcrtomb@plt+0xfefc>  // b.none
  412b40:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412b44:	sdiv	x8, x8, x19
  412b48:	cmp	x8, #0x10
  412b4c:	b.lt	412a34 <wcrtomb@plt+0xfdd4>  // b.tstop
  412b50:	lsl	x1, x19, #4
  412b54:	cmp	x1, #0x7f
  412b58:	b.gt	412b68 <wcrtomb@plt+0xff08>
  412b5c:	mov	w8, #0x80                  	// #128
  412b60:	lsr	x19, x8, #4
  412b64:	and	x1, x8, #0x7ffffffffffffff0
  412b68:	mov	x20, x22
  412b6c:	cbnz	x15, 412b74 <wcrtomb@plt+0xff14>
  412b70:	stur	xzr, [x29, #-24]
  412b74:	mov	x22, x17
  412b78:	mov	x28, x16
  412b7c:	cmp	x19, x18
  412b80:	b.gt	412734 <wcrtomb@plt+0xfad4>
  412b84:	adds	x19, x18, #0x1
  412b88:	b.vs	413034 <wcrtomb@plt+0x103d4>
  412b8c:	tbz	x19, #63, 412724 <wcrtomb@plt+0xfac4>
  412b90:	cmn	x19, #0x1
  412b94:	b.eq	412730 <wcrtomb@plt+0xfad0>  // b.none
  412b98:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412b9c:	sdiv	x8, x8, x19
  412ba0:	cmp	x8, #0x10
  412ba4:	b.ge	412730 <wcrtomb@plt+0xfad0>  // b.tcont
  412ba8:	b	413034 <wcrtomb@plt+0x103d4>
  412bac:	ldr	x14, [sp, #120]
  412bb0:	mov	x21, #0xffffffffffffffff    	// #-1
  412bb4:	mov	x16, #0xffffffffffffffff    	// #-1
  412bb8:	mov	x17, #0xffffffffffffffff    	// #-1
  412bbc:	mov	x22, #0xffffffffffffffff    	// #-1
  412bc0:	ldr	x19, [x14, #176]
  412bc4:	lsr	x8, x19, #59
  412bc8:	cbnz	x8, 413034 <wcrtomb@plt+0x103d4>
  412bcc:	mov	x24, x0
  412bd0:	lsl	x0, x19, #4
  412bd4:	mov	x28, x18
  412bd8:	mov	x27, x17
  412bdc:	mov	x26, x16
  412be0:	mov	x25, x21
  412be4:	mov	x23, x15
  412be8:	mov	x20, x14
  412bec:	bl	415348 <wcrtomb@plt+0x126e8>
  412bf0:	stp	xzr, x19, [x29, #-104]
  412bf4:	stur	x0, [x29, #-112]
  412bf8:	ldrb	w8, [x20, #328]
  412bfc:	ldr	x21, [sp, #40]
  412c00:	cmp	x24, #0x0
  412c04:	mov	x0, x20
  412c08:	b.le	412cb0 <wcrtomb@plt+0x10050>
  412c0c:	mov	x16, x23
  412c10:	mov	x14, x27
  412c14:	cbz	w8, 412cc8 <wcrtomb@plt+0x10068>
  412c18:	ldrb	w8, [x0, #1048]
  412c1c:	mov	x20, x24
  412c20:	cmp	w8, #0x1
  412c24:	cset	w9, ne  // ne = any
  412c28:	cbz	w8, 412c54 <wcrtomb@plt+0xfff4>
  412c2c:	ldr	x8, [x0, #280]
  412c30:	mov	w10, #0x1                   	// #1
  412c34:	mov	x11, x16
  412c38:	ldr	x9, [x11], #16
  412c3c:	ldrb	w12, [x8, x9]
  412c40:	and	w9, w12, #0x1
  412c44:	tbz	w12, #0, 412c54 <wcrtomb@plt+0xfff4>
  412c48:	cmp	x10, x20
  412c4c:	add	x10, x10, #0x1
  412c50:	b.lt	412c38 <wcrtomb@plt+0xffd8>  // b.tstop
  412c54:	cbz	w9, 412d9c <wcrtomb@plt+0x1013c>
  412c58:	ldr	x8, [x0, #296]
  412c5c:	sub	x1, x29, #0x28
  412c60:	sub	x3, x29, #0x70
  412c64:	mov	w2, #0xffffffff            	// #-1
  412c68:	add	x0, x8, #0x8
  412c6c:	bl	4114b8 <wcrtomb@plt+0xe858>
  412c70:	ldur	x8, [x29, #-104]
  412c74:	mov	x9, x28
  412c78:	mov	x24, x8
  412c7c:	subs	x20, x8, x28
  412c80:	b.le	412ce0 <wcrtomb@plt+0x10080>
  412c84:	mov	x0, x23
  412c88:	bl	402a10 <free@plt>
  412c8c:	adds	x8, x28, x28, asr #1
  412c90:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412c94:	csel	x19, x9, x8, vs
  412c98:	tbnz	x19, #63, 412ce8 <wcrtomb@plt+0x10088>
  412c9c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412ca0:	cmp	x19, x8
  412ca4:	b.le	412d00 <wcrtomb@plt+0x100a0>
  412ca8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412cac:	b	412d10 <wcrtomb@plt+0x100b0>
  412cb0:	cbz	w8, 412cd0 <wcrtomb@plt+0x10070>
  412cb4:	ldrsw	x8, [x0, #364]
  412cb8:	ldr	x24, [x0, #400]
  412cbc:	mov	x25, xzr
  412cc0:	sub	x26, x8, #0x1
  412cc4:	b	412f60 <wcrtomb@plt+0x10300>
  412cc8:	mov	x20, x24
  412ccc:	b	412d9c <wcrtomb@plt+0x1013c>
  412cd0:	mov	x26, #0xffffffffffffffff    	// #-1
  412cd4:	mov	x25, #0xffffffffffffffff    	// #-1
  412cd8:	mov	x24, #0xffffffffffffffff    	// #-1
  412cdc:	b	412f60 <wcrtomb@plt+0x10300>
  412ce0:	mov	x16, x23
  412ce4:	b	412d70 <wcrtomb@plt+0x10110>
  412ce8:	cmn	x19, #0x1
  412cec:	b.eq	412d0c <wcrtomb@plt+0x100ac>  // b.none
  412cf0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412cf4:	sdiv	x8, x8, x19
  412cf8:	cmp	x8, #0x10
  412cfc:	b.lt	412ca8 <wcrtomb@plt+0x10048>  // b.tstop
  412d00:	lsl	x1, x19, #4
  412d04:	cmp	x1, #0x7f
  412d08:	b.gt	412d18 <wcrtomb@plt+0x100b8>
  412d0c:	mov	w8, #0x80                  	// #128
  412d10:	lsr	x19, x8, #4
  412d14:	and	x1, x8, #0x7ffffffffffffff0
  412d18:	cmp	x19, x24
  412d1c:	stur	xzr, [x29, #-24]
  412d20:	b.ge	412d5c <wcrtomb@plt+0x100fc>  // b.tcont
  412d24:	adds	x19, x28, x20
  412d28:	b.vs	413034 <wcrtomb@plt+0x103d4>
  412d2c:	tbnz	x19, #63, 412d40 <wcrtomb@plt+0x100e0>
  412d30:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412d34:	cmp	x19, x8
  412d38:	b.le	412d58 <wcrtomb@plt+0x100f8>
  412d3c:	b	413034 <wcrtomb@plt+0x103d4>
  412d40:	cmn	x19, #0x1
  412d44:	b.eq	412d58 <wcrtomb@plt+0x100f8>  // b.none
  412d48:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412d4c:	sdiv	x8, x8, x19
  412d50:	cmp	x8, #0x10
  412d54:	b.lt	413034 <wcrtomb@plt+0x103d4>  // b.tstop
  412d58:	lsl	x1, x19, #4
  412d5c:	mov	x0, xzr
  412d60:	bl	4153c8 <wcrtomb@plt+0x12768>
  412d64:	mov	x16, x0
  412d68:	stur	x19, [x29, #-24]
  412d6c:	stur	x0, [x29, #-40]
  412d70:	mov	x20, x24
  412d74:	stur	x24, [x29, #-32]
  412d78:	cbz	x24, 412d94 <wcrtomb@plt+0x10134>
  412d7c:	ldur	x1, [x29, #-112]
  412d80:	lsl	x2, x20, #4
  412d84:	mov	x0, x16
  412d88:	mov	x19, x16
  412d8c:	bl	402580 <memcpy@plt>
  412d90:	mov	x16, x19
  412d94:	ldr	x0, [sp, #120]
  412d98:	mov	x14, x27
  412d9c:	ldr	x8, [x0, #1008]
  412da0:	ldr	x9, [x0, #976]
  412da4:	mov	w10, #0x2                   	// #2
  412da8:	ldr	x11, [x0, #1016]
  412dac:	tst	x8, x22
  412db0:	cset	w12, ne  // ne = any
  412db4:	orr	x8, x9, x8
  412db8:	tst	x9, x22
  412dbc:	bfi	w10, w12, #2, #1
  412dc0:	lsl	w12, w12, #2
  412dc4:	csel	w10, w12, w10, eq  // eq = none
  412dc8:	bics	xzr, x22, x8
  412dcc:	ldr	x9, [x0, #984]
  412dd0:	cset	w13, ne  // ne = any
  412dd4:	orr	w10, w10, w13
  412dd8:	tst	x11, x14
  412ddc:	orr	w13, w10, #0x4
  412de0:	csel	w10, w10, w13, eq  // eq = none
  412de4:	ldr	x12, [x0, #1024]
  412de8:	orr	x11, x9, x11
  412dec:	tst	x9, x14
  412df0:	orr	w9, w10, #0x2
  412df4:	csel	w9, w10, w9, eq  // eq = none
  412df8:	bics	xzr, x14, x11
  412dfc:	ldr	x8, [x0, #992]
  412e00:	cset	w14, ne  // ne = any
  412e04:	orr	w9, w9, w14
  412e08:	tst	x12, x26
  412e0c:	orr	w14, w9, #0x4
  412e10:	csel	w9, w9, w14, eq  // eq = none
  412e14:	ldr	x13, [x0, #1032]
  412e18:	orr	x11, x8, x12
  412e1c:	tst	x8, x26
  412e20:	orr	w8, w9, #0x2
  412e24:	csel	w8, w9, w8, eq  // eq = none
  412e28:	bics	xzr, x26, x11
  412e2c:	ldr	x10, [x0, #1000]
  412e30:	cset	w9, ne  // ne = any
  412e34:	orr	w8, w8, w9
  412e38:	tst	x13, x25
  412e3c:	orr	w9, w8, #0x4
  412e40:	csel	w8, w8, w9, eq  // eq = none
  412e44:	orr	x12, x10, x13
  412e48:	tst	x10, x25
  412e4c:	orr	w9, w8, #0x2
  412e50:	csel	w8, w8, w9, eq  // eq = none
  412e54:	bics	xzr, x25, x12
  412e58:	cset	w9, ne  // ne = any
  412e5c:	cmp	x20, #0x1
  412e60:	orr	w19, w8, w9
  412e64:	b.lt	412e84 <wcrtomb@plt+0x10224>  // b.tstop
  412e68:	ldr	x8, [x0, #344]
  412e6c:	cmp	x20, #0x3
  412e70:	b.cs	412e8c <wcrtomb@plt+0x1022c>  // b.hs, b.nlast
  412e74:	mov	x9, xzr
  412e78:	mov	x12, x20
  412e7c:	mov	w20, wzr
  412e80:	b	412ed0 <wcrtomb@plt+0x10270>
  412e84:	mov	w20, wzr
  412e88:	b	412eec <wcrtomb@plt+0x1028c>
  412e8c:	and	x9, x20, #0xfffffffffffffffe
  412e90:	mov	w10, wzr
  412e94:	mov	w11, wzr
  412e98:	add	x12, x16, #0x10
  412e9c:	mov	x13, x9
  412ea0:	ldur	x14, [x12, #-16]
  412ea4:	ldr	x15, [x12], #32
  412ea8:	subs	x13, x13, #0x2
  412eac:	ldr	w14, [x8, x14, lsl #2]
  412eb0:	ldr	w15, [x8, x15, lsl #2]
  412eb4:	orr	w10, w14, w10
  412eb8:	orr	w11, w15, w11
  412ebc:	b.ne	412ea0 <wcrtomb@plt+0x10240>  // b.any
  412ec0:	cmp	x20, x9
  412ec4:	mov	x12, x20
  412ec8:	orr	w20, w11, w10
  412ecc:	b.eq	412eec <wcrtomb@plt+0x1028c>  // b.none
  412ed0:	sub	x10, x12, x9
  412ed4:	add	x9, x16, x9, lsl #4
  412ed8:	ldr	x11, [x9], #16
  412edc:	subs	x10, x10, #0x1
  412ee0:	ldr	w11, [x8, x11, lsl #2]
  412ee4:	orr	w20, w11, w20
  412ee8:	b.ne	412ed8 <wcrtomb@plt+0x10278>  // b.any
  412eec:	mov	x23, x16
  412ef0:	bics	wzr, w19, w20
  412ef4:	b.eq	412f0c <wcrtomb@plt+0x102ac>  // b.none
  412ef8:	eor	w2, w20, #0x7
  412efc:	sub	x1, x29, #0x28
  412f00:	bl	411178 <wcrtomb@plt+0xe518>
  412f04:	mov	x24, x0
  412f08:	b	412f10 <wcrtomb@plt+0x102b0>
  412f0c:	mov	x24, #0xffffffffffffffff    	// #-1
  412f10:	and	w19, w20, w19
  412f14:	mov	x25, x24
  412f18:	tbz	w19, #2, 412f30 <wcrtomb@plt+0x102d0>
  412f1c:	ldr	x0, [sp, #120]
  412f20:	sub	x1, x29, #0x28
  412f24:	mov	w2, #0x4                   	// #4
  412f28:	bl	411178 <wcrtomb@plt+0xe518>
  412f2c:	mov	x25, x0
  412f30:	ldr	x8, [sp, #120]
  412f34:	mov	x26, x24
  412f38:	tbz	w19, #1, 412f54 <wcrtomb@plt+0x102f4>
  412f3c:	sub	x1, x29, #0x28
  412f40:	mov	w2, #0x2                   	// #2
  412f44:	mov	x0, x8
  412f48:	bl	411178 <wcrtomb@plt+0xe518>
  412f4c:	ldr	x8, [sp, #120]
  412f50:	mov	x26, x0
  412f54:	mov	x0, x8
  412f58:	bl	411cfc <wcrtomb@plt+0xf09c>
  412f5c:	ldr	x0, [sp, #120]
  412f60:	mov	x8, xzr
  412f64:	add	x9, x0, #0x1cc
  412f68:	sub	x10, x29, #0x50
  412f6c:	b	412f80 <wcrtomb@plt+0x10320>
  412f70:	str	x11, [x21, x8, lsl #3]
  412f74:	add	x8, x8, #0x1
  412f78:	cmp	x8, #0x100
  412f7c:	b.eq	412fb4 <wcrtomb@plt+0x10354>  // b.none
  412f80:	ubfx	x11, x8, #6, #26
  412f84:	ldr	x11, [x10, x11, lsl #3]
  412f88:	lsr	x11, x11, x8
  412f8c:	tbz	w11, #0, 412f74 <wcrtomb@plt+0x10314>
  412f90:	ldrb	w12, [x9, x8]
  412f94:	mov	x11, x25
  412f98:	cmp	w12, #0x4
  412f9c:	b.eq	412f70 <wcrtomb@plt+0x10310>  // b.none
  412fa0:	cmp	w12, #0x2
  412fa4:	mov	x11, x26
  412fa8:	b.eq	412f70 <wcrtomb@plt+0x10310>  // b.none
  412fac:	mov	x11, x24
  412fb0:	b	412f70 <wcrtomb@plt+0x10310>
  412fb4:	mov	x0, x23
  412fb8:	bl	402a10 <free@plt>
  412fbc:	ldur	x0, [x29, #-16]
  412fc0:	bl	402a10 <free@plt>
  412fc4:	ldur	x0, [x29, #-112]
  412fc8:	bl	402a10 <free@plt>
  412fcc:	ldr	x11, [sp, #120]
  412fd0:	sub	x10, x29, #0x50
  412fd4:	ldrb	w8, [x11, #459]
  412fd8:	lsr	x9, x8, #3
  412fdc:	and	x9, x9, #0x18
  412fe0:	ldr	x9, [x10, x9]
  412fe4:	lsr	x9, x9, x8
  412fe8:	tbz	w9, #0, 413008 <wcrtomb@plt+0x103a8>
  412fec:	lsl	x8, x8, #3
  412ff0:	ldr	x9, [x11, #392]
  412ff4:	ldr	x10, [x21, x8]
  412ff8:	ldr	x12, [sp, #112]
  412ffc:	mov	x11, #0xffffffffffffffff    	// #-1
  413000:	str	x10, [x9, x12, lsl #3]
  413004:	str	x11, [x21, x8]
  413008:	ldr	x8, [sp, #64]
  41300c:	ldp	x20, x19, [sp, #320]
  413010:	ldp	x24, x23, [sp, #288]
  413014:	ldp	x26, x25, [sp, #272]
  413018:	and	x8, x8, #0xff
  41301c:	ldr	x0, [x21, x8, lsl #3]
  413020:	ldp	x22, x21, [sp, #304]
  413024:	ldp	x28, x27, [sp, #256]
  413028:	ldp	x29, x30, [sp, #240]
  41302c:	add	sp, sp, #0x150
  413030:	ret
  413034:	bl	41563c <wcrtomb@plt+0x129dc>
  413038:	sub	sp, sp, #0x40
  41303c:	stp	x29, x30, [sp, #32]
  413040:	stp	x20, x19, [sp, #48]
  413044:	add	x29, sp, #0x20
  413048:	mov	x19, x0
  41304c:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  413050:	cmp	x0, #0x1
  413054:	cset	w8, hi  // hi = pmore
  413058:	strb	w8, [x19]
  41305c:	b.hi	413094 <wcrtomb@plt+0x10434>  // b.pmore
  413060:	mov	w20, #0x1                   	// #1
  413064:	cmp	w20, #0x100
  413068:	b.eq	41309c <wcrtomb@plt+0x1043c>  // b.none
  41306c:	sub	w8, w20, #0x1
  413070:	add	x0, sp, #0x10
  413074:	sub	x1, x29, #0x4
  413078:	strb	wzr, [sp, #17]
  41307c:	sturb	w20, [x29, #-4]
  413080:	strb	w8, [sp, #16]
  413084:	sturb	wzr, [x29, #-3]
  413088:	bl	402b60 <strcoll@plt>
  41308c:	add	w20, w20, #0x1
  413090:	tbnz	w0, #31, 413064 <wcrtomb@plt+0x10404>
  413094:	mov	w8, wzr
  413098:	b	4130a0 <wcrtomb@plt+0x10440>
  41309c:	mov	w8, #0x1                   	// #1
  4130a0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4130a4:	add	x1, x1, #0x562
  4130a8:	sub	x0, x29, #0x4
  4130ac:	add	x3, sp, #0x10
  4130b0:	mov	w2, #0x2                   	// #2
  4130b4:	strb	w8, [x19, #1]
  4130b8:	str	xzr, [sp, #16]
  4130bc:	bl	415680 <wcrtomb@plt+0x12a20>
  4130c0:	ldur	w8, [x29, #-4]
  4130c4:	cmp	x0, #0x2
  4130c8:	cset	w9, eq  // eq = none
  4130cc:	mov	x20, xzr
  4130d0:	cmp	w8, #0x100
  4130d4:	cset	w8, eq  // eq = none
  4130d8:	and	w8, w9, w8
  4130dc:	strb	w8, [x19, #2]
  4130e0:	add	x19, x19, #0x104
  4130e4:	sub	x0, x29, #0x4
  4130e8:	add	x1, sp, #0xc
  4130ec:	add	x3, sp, #0x10
  4130f0:	mov	w2, #0x1                   	// #1
  4130f4:	strb	w20, [sp, #12]
  4130f8:	str	xzr, [sp, #16]
  4130fc:	bl	415680 <wcrtomb@plt+0x12a20>
  413100:	add	x8, x19, x20
  413104:	cmp	x0, #0x2
  413108:	sub	x8, x8, #0x101
  41310c:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  413110:	strb	w9, [x8]
  413114:	ldur	w8, [x29, #-4]
  413118:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  41311c:	str	w8, [x19, x20, lsl #2]
  413120:	add	x20, x20, #0x1
  413124:	cmp	x20, #0x100
  413128:	b.ne	4130e4 <wcrtomb@plt+0x10484>  // b.any
  41312c:	ldp	x20, x19, [sp, #48]
  413130:	ldp	x29, x30, [sp, #32]
  413134:	add	sp, sp, #0x40
  413138:	ret
  41313c:	stp	x29, x30, [sp, #-80]!
  413140:	stp	x26, x25, [sp, #16]
  413144:	stp	x24, x23, [sp, #32]
  413148:	stp	x22, x21, [sp, #48]
  41314c:	stp	x20, x19, [sp, #64]
  413150:	mov	x29, sp
  413154:	mov	x19, x1
  413158:	mov	w20, w0
  41315c:	bl	402b90 <towupper@plt>
  413160:	mov	w21, w0
  413164:	bl	402c10 <towlower@plt>
  413168:	cmp	w21, w20
  41316c:	mov	w22, w0
  413170:	b.ne	413184 <wcrtomb@plt+0x10524>  // b.any
  413174:	mov	w23, wzr
  413178:	cmp	w22, w21
  41317c:	b.ne	413194 <wcrtomb@plt+0x10534>  // b.any
  413180:	b	4131b8 <wcrtomb@plt+0x10558>
  413184:	mov	w23, #0x1                   	// #1
  413188:	str	w21, [x19]
  41318c:	cmp	w22, w21
  413190:	b.eq	4131b8 <wcrtomb@plt+0x10558>  // b.none
  413194:	cmp	w22, w20
  413198:	b.eq	4131b8 <wcrtomb@plt+0x10558>  // b.none
  41319c:	mov	w0, w22
  4131a0:	bl	402b90 <towupper@plt>
  4131a4:	cmp	w0, w21
  4131a8:	b.ne	4131b8 <wcrtomb@plt+0x10558>  // b.any
  4131ac:	add	w8, w23, #0x1
  4131b0:	str	w22, [x19, w23, uxtw #2]
  4131b4:	mov	w23, w8
  4131b8:	adrp	x26, 427000 <_obstack_memory_used@@Base+0x115a8>
  4131bc:	mov	x25, xzr
  4131c0:	add	x26, x26, #0x53c
  4131c4:	b	4131d4 <wcrtomb@plt+0x10574>
  4131c8:	add	x25, x25, #0x2
  4131cc:	cmp	x25, #0x26
  4131d0:	b.eq	413210 <wcrtomb@plt+0x105b0>  // b.none
  4131d4:	ldrsh	w24, [x26, x25]
  4131d8:	cmp	w24, w20
  4131dc:	b.eq	4131c8 <wcrtomb@plt+0x10568>  // b.none
  4131e0:	cmp	w22, w24
  4131e4:	b.eq	4131c8 <wcrtomb@plt+0x10568>  // b.none
  4131e8:	cmp	w21, w24
  4131ec:	b.eq	4131c8 <wcrtomb@plt+0x10568>  // b.none
  4131f0:	mov	w0, w24
  4131f4:	bl	402b90 <towupper@plt>
  4131f8:	cmp	w0, w21
  4131fc:	b.ne	4131c8 <wcrtomb@plt+0x10568>  // b.any
  413200:	add	w8, w23, #0x1
  413204:	str	w24, [x19, w23, sxtw #2]
  413208:	mov	w23, w8
  41320c:	b	4131c8 <wcrtomb@plt+0x10568>
  413210:	mov	w0, w23
  413214:	ldp	x20, x19, [sp, #64]
  413218:	ldp	x22, x21, [sp, #48]
  41321c:	ldp	x24, x23, [sp, #32]
  413220:	ldp	x26, x25, [sp, #16]
  413224:	ldp	x29, x30, [sp], #80
  413228:	ret
  41322c:	stp	x29, x30, [sp, #-16]!
  413230:	mov	w0, #0xe                   	// #14
  413234:	mov	x29, sp
  413238:	bl	4026f0 <nl_langinfo@plt>
  41323c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x105a8>
  413240:	add	x8, x8, #0x7c3
  413244:	cmp	x0, #0x0
  413248:	csel	x8, x8, x0, eq  // eq = none
  41324c:	ldrb	w9, [x8]
  413250:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  413254:	add	x10, x10, #0x565
  413258:	cmp	w9, #0x0
  41325c:	csel	x0, x10, x8, eq  // eq = none
  413260:	ldp	x29, x30, [sp], #16
  413264:	ret
  413268:	stp	x29, x30, [sp, #-32]!
  41326c:	stp	x20, x19, [sp, #16]
  413270:	mov	x29, sp
  413274:	cbz	x0, 4132f4 <wcrtomb@plt+0x10694>
  413278:	mov	w1, #0x2f                  	// #47
  41327c:	mov	x19, x0
  413280:	bl	4028f0 <strrchr@plt>
  413284:	cmp	x0, #0x0
  413288:	csinc	x20, x19, x0, eq  // eq = none
  41328c:	sub	x8, x20, x19
  413290:	cmp	x8, #0x7
  413294:	b.lt	4132d8 <wcrtomb@plt+0x10678>  // b.tstop
  413298:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41329c:	sub	x0, x20, #0x7
  4132a0:	add	x1, x1, #0x5a3
  4132a4:	mov	w2, #0x7                   	// #7
  4132a8:	bl	402790 <strncmp@plt>
  4132ac:	cbnz	w0, 4132d8 <wcrtomb@plt+0x10678>
  4132b0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4132b4:	add	x1, x1, #0x5ab
  4132b8:	mov	w2, #0x3                   	// #3
  4132bc:	mov	x0, x20
  4132c0:	bl	402790 <strncmp@plt>
  4132c4:	mov	x19, x20
  4132c8:	cbnz	w0, 4132d8 <wcrtomb@plt+0x10678>
  4132cc:	add	x19, x20, #0x3
  4132d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4132d4:	str	x19, [x8, #1288]
  4132d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4132dc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4132e0:	str	x19, [x8, #1936]
  4132e4:	str	x19, [x9, #1240]
  4132e8:	ldp	x20, x19, [sp, #16]
  4132ec:	ldp	x29, x30, [sp], #32
  4132f0:	ret
  4132f4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4132f8:	ldr	x3, [x8, #1248]
  4132fc:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x115a8>
  413300:	add	x0, x0, #0x56b
  413304:	mov	w1, #0x37                  	// #55
  413308:	mov	w2, #0x1                   	// #1
  41330c:	bl	402a80 <fwrite@plt>
  413310:	bl	402920 <abort@plt>
  413314:	sub	sp, sp, #0x40
  413318:	stp	x20, x19, [sp, #48]
  41331c:	mov	w19, w3
  413320:	mov	x20, x2
  413324:	mov	x3, sp
  413328:	mov	w2, w4
  41332c:	stp	x29, x30, [sp, #32]
  413330:	add	x29, sp, #0x20
  413334:	bl	42504c <_obstack_memory_used@@Base+0xf5f4>
  413338:	cbz	w0, 413344 <wcrtomb@plt+0x106e4>
  41333c:	mov	w19, #0xfffffffe            	// #-2
  413340:	b	413360 <wcrtomb@plt+0x10700>
  413344:	mov	x0, sp
  413348:	mov	x1, x20
  41334c:	mov	w2, w19
  413350:	bl	42510c <_obstack_memory_used@@Base+0xf6b4>
  413354:	mov	w19, w0
  413358:	mov	x0, sp
  41335c:	bl	425010 <_obstack_memory_used@@Base+0xf5b8>
  413360:	mov	w0, w19
  413364:	ldp	x20, x19, [sp, #48]
  413368:	ldp	x29, x30, [sp, #32]
  41336c:	add	sp, sp, #0x40
  413370:	ret
  413374:	stp	x29, x30, [sp, #-48]!
  413378:	str	x21, [sp, #16]
  41337c:	stp	x20, x19, [sp, #32]
  413380:	mov	x29, sp
  413384:	mov	x19, x0
  413388:	bl	402bd0 <__errno_location@plt>
  41338c:	ldr	w21, [x0]
  413390:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  413394:	add	x8, x8, #0x798
  413398:	cmp	x19, #0x0
  41339c:	mov	x20, x0
  4133a0:	csel	x0, x8, x19, eq  // eq = none
  4133a4:	mov	w1, #0x38                  	// #56
  4133a8:	bl	415590 <wcrtomb@plt+0x12930>
  4133ac:	str	w21, [x20]
  4133b0:	ldp	x20, x19, [sp, #32]
  4133b4:	ldr	x21, [sp, #16]
  4133b8:	ldp	x29, x30, [sp], #48
  4133bc:	ret
  4133c0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4133c4:	add	x8, x8, #0x798
  4133c8:	cmp	x0, #0x0
  4133cc:	csel	x8, x8, x0, eq  // eq = none
  4133d0:	ldr	w0, [x8]
  4133d4:	ret
  4133d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4133dc:	add	x8, x8, #0x798
  4133e0:	cmp	x0, #0x0
  4133e4:	csel	x8, x8, x0, eq  // eq = none
  4133e8:	str	w1, [x8]
  4133ec:	ret
  4133f0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4133f4:	add	x8, x8, #0x798
  4133f8:	cmp	x0, #0x0
  4133fc:	ubfx	w9, w1, #5, #3
  413400:	csel	x8, x8, x0, eq  // eq = none
  413404:	add	x8, x8, w9, uxtw #2
  413408:	ldr	w9, [x8, #8]
  41340c:	lsr	w10, w9, w1
  413410:	and	w0, w10, #0x1
  413414:	and	w10, w2, #0x1
  413418:	eor	w10, w0, w10
  41341c:	lsl	w10, w10, w1
  413420:	eor	w9, w10, w9
  413424:	str	w9, [x8, #8]
  413428:	ret
  41342c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  413430:	add	x8, x8, #0x798
  413434:	cmp	x0, #0x0
  413438:	csel	x8, x8, x0, eq  // eq = none
  41343c:	ldr	w0, [x8, #4]
  413440:	str	w1, [x8, #4]
  413444:	ret
  413448:	stp	x29, x30, [sp, #-16]!
  41344c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  413450:	add	x8, x8, #0x798
  413454:	cmp	x0, #0x0
  413458:	csel	x8, x8, x0, eq  // eq = none
  41345c:	mov	w9, #0xa                   	// #10
  413460:	mov	x29, sp
  413464:	str	w9, [x8]
  413468:	cbz	x1, 41347c <wcrtomb@plt+0x1081c>
  41346c:	cbz	x2, 41347c <wcrtomb@plt+0x1081c>
  413470:	stp	x1, x2, [x8, #40]
  413474:	ldp	x29, x30, [sp], #16
  413478:	ret
  41347c:	bl	402920 <abort@plt>
  413480:	sub	sp, sp, #0x60
  413484:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  413488:	add	x8, x8, #0x798
  41348c:	cmp	x4, #0x0
  413490:	stp	x29, x30, [sp, #16]
  413494:	str	x25, [sp, #32]
  413498:	stp	x24, x23, [sp, #48]
  41349c:	stp	x22, x21, [sp, #64]
  4134a0:	stp	x20, x19, [sp, #80]
  4134a4:	add	x29, sp, #0x10
  4134a8:	mov	x19, x3
  4134ac:	mov	x20, x2
  4134b0:	mov	x21, x1
  4134b4:	mov	x22, x0
  4134b8:	csel	x24, x8, x4, eq  // eq = none
  4134bc:	bl	402bd0 <__errno_location@plt>
  4134c0:	ldp	w4, w5, [x24]
  4134c4:	ldp	x7, x8, [x24, #40]
  4134c8:	ldr	w25, [x0]
  4134cc:	mov	x23, x0
  4134d0:	add	x6, x24, #0x8
  4134d4:	mov	x0, x22
  4134d8:	mov	x1, x21
  4134dc:	mov	x2, x20
  4134e0:	mov	x3, x19
  4134e4:	str	x8, [sp]
  4134e8:	bl	41350c <wcrtomb@plt+0x108ac>
  4134ec:	str	w25, [x23]
  4134f0:	ldp	x20, x19, [sp, #80]
  4134f4:	ldp	x22, x21, [sp, #64]
  4134f8:	ldp	x24, x23, [sp, #48]
  4134fc:	ldr	x25, [sp, #32]
  413500:	ldp	x29, x30, [sp, #16]
  413504:	add	sp, sp, #0x60
  413508:	ret
  41350c:	sub	sp, sp, #0x120
  413510:	stp	x29, x30, [sp, #192]
  413514:	add	x29, sp, #0xc0
  413518:	ldr	x8, [x29, #96]
  41351c:	stp	x28, x27, [sp, #208]
  413520:	stp	x26, x25, [sp, #224]
  413524:	stp	x24, x23, [sp, #240]
  413528:	stp	x22, x21, [sp, #256]
  41352c:	stp	x20, x19, [sp, #272]
  413530:	str	x7, [sp, #88]
  413534:	stur	x6, [x29, #-40]
  413538:	mov	w19, w5
  41353c:	mov	w22, w4
  413540:	mov	x28, x3
  413544:	mov	x20, x2
  413548:	mov	x24, x1
  41354c:	stur	x8, [x29, #-88]
  413550:	mov	x21, x0
  413554:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  413558:	mov	w4, w22
  41355c:	mov	w8, wzr
  413560:	mov	w14, wzr
  413564:	str	w19, [sp, #80]
  413568:	ubfx	w19, w19, #1, #1
  41356c:	add	x9, x20, #0x1
  413570:	mov	w25, #0x1                   	// #1
  413574:	str	x0, [sp, #48]
  413578:	str	xzr, [sp, #64]
  41357c:	stur	xzr, [x29, #-64]
  413580:	stur	xzr, [x29, #-32]
  413584:	str	wzr, [sp, #72]
  413588:	stur	x20, [x29, #-80]
  41358c:	str	x9, [sp, #96]
  413590:	cmp	w4, #0xa
  413594:	b.hi	414160 <wcrtomb@plt+0x11500>  // b.pmore
  413598:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x115a8>
  41359c:	mov	w9, w4
  4135a0:	add	x12, x12, #0x5b0
  4135a4:	mov	x22, x24
  4135a8:	adr	x10, 4135c8 <wcrtomb@plt+0x10968>
  4135ac:	ldrb	w11, [x12, x9]
  4135b0:	add	x10, x10, x11, lsl #2
  4135b4:	ldur	x24, [x29, #-80]
  4135b8:	mov	x20, xzr
  4135bc:	mov	w16, wzr
  4135c0:	mov	w9, #0x1                   	// #1
  4135c4:	br	x10
  4135c8:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x115a8>
  4135cc:	add	x0, x0, #0x70c
  4135d0:	mov	w1, w4
  4135d4:	mov	w20, w4
  4135d8:	mov	w23, w14
  4135dc:	bl	414aac <wcrtomb@plt+0x11e4c>
  4135e0:	str	x0, [sp, #88]
  4135e4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  4135e8:	add	x0, x0, #0x180
  4135ec:	mov	w1, w20
  4135f0:	bl	414aac <wcrtomb@plt+0x11e4c>
  4135f4:	mov	w14, w23
  4135f8:	mov	w4, w20
  4135fc:	stur	x0, [x29, #-88]
  413600:	tbnz	w19, #0, 413644 <wcrtomb@plt+0x109e4>
  413604:	ldr	x8, [sp, #88]
  413608:	ldrb	w9, [x8]
  41360c:	cbz	w9, 413644 <wcrtomb@plt+0x109e4>
  413610:	mov	w27, w14
  413614:	mov	w26, w4
  413618:	mov	x10, xzr
  41361c:	add	x8, x8, #0x1
  413620:	b	413634 <wcrtomb@plt+0x109d4>
  413624:	ldrb	w9, [x8, x10]
  413628:	add	x20, x10, #0x1
  41362c:	mov	x10, x20
  413630:	cbz	w9, 413650 <wcrtomb@plt+0x109f0>
  413634:	cmp	x10, x22
  413638:	b.cs	413624 <wcrtomb@plt+0x109c4>  // b.hs, b.nlast
  41363c:	strb	w9, [x21, x10]
  413640:	b	413624 <wcrtomb@plt+0x109c4>
  413644:	mov	w27, w14
  413648:	mov	w26, w4
  41364c:	mov	x20, xzr
  413650:	ldur	x23, [x29, #-88]
  413654:	mov	x0, x23
  413658:	bl	4025c0 <strlen@plt>
  41365c:	stur	x0, [x29, #-32]
  413660:	stur	x23, [x29, #-64]
  413664:	mov	w9, #0x1                   	// #1
  413668:	mov	w16, w19
  41366c:	mov	w4, w26
  413670:	mov	w14, w27
  413674:	b	41371c <wcrtomb@plt+0x10abc>
  413678:	mov	w8, #0x1                   	// #1
  41367c:	b	4136f8 <wcrtomb@plt+0x10a98>
  413680:	mov	w4, wzr
  413684:	mov	x20, xzr
  413688:	mov	w16, wzr
  41368c:	mov	w9, w8
  413690:	b	41371c <wcrtomb@plt+0x10abc>
  413694:	tbnz	w19, #0, 4136f8 <wcrtomb@plt+0x10a98>
  413698:	mov	w9, w8
  41369c:	mov	w16, wzr
  4136a0:	cbz	x22, 4136ac <wcrtomb@plt+0x10a4c>
  4136a4:	mov	w8, #0x27                  	// #39
  4136a8:	strb	w8, [x21]
  4136ac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x105a8>
  4136b0:	add	x8, x8, #0x180
  4136b4:	stur	x8, [x29, #-64]
  4136b8:	mov	w8, #0x1                   	// #1
  4136bc:	mov	w4, #0x2                   	// #2
  4136c0:	mov	w20, #0x1                   	// #1
  4136c4:	stur	x8, [x29, #-32]
  4136c8:	b	41371c <wcrtomb@plt+0x10abc>
  4136cc:	tbz	w19, #0, 413ff8 <wcrtomb@plt+0x11398>
  4136d0:	mov	w8, #0x1                   	// #1
  4136d4:	stur	x8, [x29, #-32]
  4136d8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  4136dc:	add	x8, x8, #0x39c
  4136e0:	mov	x20, xzr
  4136e4:	mov	w4, #0x5                   	// #5
  4136e8:	stur	x8, [x29, #-64]
  4136ec:	mov	w9, #0x1                   	// #1
  4136f0:	b	413718 <wcrtomb@plt+0x10ab8>
  4136f4:	tbz	w19, #0, 41402c <wcrtomb@plt+0x113cc>
  4136f8:	mov	w9, #0x1                   	// #1
  4136fc:	stur	x9, [x29, #-32]
  413700:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x105a8>
  413704:	add	x9, x9, #0x180
  413708:	mov	x20, xzr
  41370c:	mov	w4, #0x2                   	// #2
  413710:	stur	x9, [x29, #-64]
  413714:	mov	w9, w8
  413718:	mov	w16, #0x1                   	// #1
  41371c:	mov	w15, w9
  413720:	ldp	x8, x9, [x29, #-40]
  413724:	eor	w17, w16, #0x1
  413728:	stur	w17, [x29, #-68]
  41372c:	mov	x23, xzr
  413730:	cmp	x8, #0x0
  413734:	cset	w8, eq  // eq = none
  413738:	cmp	x9, #0x0
  41373c:	cset	w9, ne  // ne = any
  413740:	cmp	w4, #0x2
  413744:	cset	w10, ne  // ne = any
  413748:	and	w13, w10, w15
  41374c:	and	w12, w9, w16
  413750:	orr	w10, w10, w17
  413754:	and	w17, w9, w13
  413758:	orr	w9, w13, w16
  41375c:	eor	w9, w9, #0x1
  413760:	cset	w11, eq  // eq = none
  413764:	orr	w8, w8, w9
  413768:	and	w12, w15, w12
  41376c:	str	w10, [sp, #84]
  413770:	and	w10, w11, w16
  413774:	stur	w8, [x29, #-24]
  413778:	eor	w8, w15, #0x1
  41377c:	str	w12, [sp, #56]
  413780:	str	w10, [sp, #76]
  413784:	stur	w15, [x29, #-72]
  413788:	str	w8, [sp, #60]
  41378c:	stp	w16, w4, [x29, #-48]
  413790:	stur	w17, [x29, #-52]
  413794:	cmn	x28, #0x1
  413798:	b.eq	4137a8 <wcrtomb@plt+0x10b48>  // b.none
  41379c:	cmp	x23, x28
  4137a0:	b.ne	4137b0 <wcrtomb@plt+0x10b50>  // b.any
  4137a4:	b	413f88 <wcrtomb@plt+0x11328>
  4137a8:	ldrb	w8, [x24, x23]
  4137ac:	cbz	w8, 413f90 <wcrtomb@plt+0x11330>
  4137b0:	cbz	w17, 4137f0 <wcrtomb@plt+0x10b90>
  4137b4:	ldur	x8, [x29, #-32]
  4137b8:	cmp	x8, #0x2
  4137bc:	add	x19, x23, x8
  4137c0:	b.cc	4137e8 <wcrtomb@plt+0x10b88>  // b.lo, b.ul, b.last
  4137c4:	cmn	x28, #0x1
  4137c8:	b.ne	4137e8 <wcrtomb@plt+0x10b88>  // b.any
  4137cc:	mov	x0, x24
  4137d0:	mov	w26, w14
  4137d4:	bl	4025c0 <strlen@plt>
  4137d8:	ldp	w17, w16, [x29, #-52]
  4137dc:	ldur	w4, [x29, #-44]
  4137e0:	mov	w14, w26
  4137e4:	mov	x28, x0
  4137e8:	cmp	x19, x28
  4137ec:	b.ls	4137f8 <wcrtomb@plt+0x10b98>  // b.plast
  4137f0:	mov	w27, wzr
  4137f4:	b	413830 <wcrtomb@plt+0x10bd0>
  4137f8:	ldur	x1, [x29, #-64]
  4137fc:	ldur	x2, [x29, #-32]
  413800:	add	x0, x24, x23
  413804:	mov	w19, w14
  413808:	bl	402850 <bcmp@plt>
  41380c:	ldur	w9, [x29, #-68]
  413810:	cmp	w0, #0x0
  413814:	cset	w8, ne  // ne = any
  413818:	cset	w27, eq  // eq = none
  41381c:	orr	w8, w8, w9
  413820:	tbz	w8, #0, 414064 <wcrtomb@plt+0x11404>
  413824:	ldp	w16, w4, [x29, #-48]
  413828:	ldur	w17, [x29, #-52]
  41382c:	mov	w14, w19
  413830:	ldrb	w19, [x24, x23]
  413834:	cmp	w19, #0x7e
  413838:	b.hi	413a78 <wcrtomb@plt+0x10e18>  // b.pmore
  41383c:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x115a8>
  413840:	add	x13, x13, #0x5bb
  413844:	adr	x12, 413868 <wcrtomb@plt+0x10c08>
  413848:	ldrb	w9, [x13, x19]
  41384c:	add	x12, x12, x9, lsl #2
  413850:	mov	w10, wzr
  413854:	mov	w8, wzr
  413858:	mov	w26, #0x1                   	// #1
  41385c:	mov	w11, #0x6e                  	// #110
  413860:	mov	w9, #0x61                  	// #97
  413864:	br	x12
  413868:	ldur	w9, [x29, #-24]
  41386c:	tbnz	w9, #0, 41388c <wcrtomb@plt+0x10c2c>
  413870:	ldur	x10, [x29, #-40]
  413874:	lsr	w9, w19, #5
  413878:	ldr	w9, [x10, w9, uxtw #2]
  41387c:	lsr	w9, w9, w19
  413880:	tbz	w9, #0, 41388c <wcrtomb@plt+0x10c2c>
  413884:	mov	w9, w19
  413888:	b	413894 <wcrtomb@plt+0x10c34>
  41388c:	mov	w9, w19
  413890:	cbz	w27, 413adc <wcrtomb@plt+0x10e7c>
  413894:	tbnz	w16, #0, 41403c <wcrtomb@plt+0x113dc>
  413898:	cmp	w4, #0x2
  41389c:	cset	w8, ne  // ne = any
  4138a0:	orr	w8, w8, w14
  4138a4:	tbnz	w8, #0, 4138e8 <wcrtomb@plt+0x10c88>
  4138a8:	cmp	x20, x22
  4138ac:	b.cs	4138b8 <wcrtomb@plt+0x10c58>  // b.hs, b.nlast
  4138b0:	mov	w8, #0x27                  	// #39
  4138b4:	strb	w8, [x21, x20]
  4138b8:	add	x8, x20, #0x1
  4138bc:	cmp	x8, x22
  4138c0:	b.cs	4138cc <wcrtomb@plt+0x10c6c>  // b.hs, b.nlast
  4138c4:	mov	w10, #0x24                  	// #36
  4138c8:	strb	w10, [x21, x8]
  4138cc:	add	x8, x20, #0x2
  4138d0:	cmp	x8, x22
  4138d4:	b.cs	4138e0 <wcrtomb@plt+0x10c80>  // b.hs, b.nlast
  4138d8:	mov	w10, #0x27                  	// #39
  4138dc:	strb	w10, [x21, x8]
  4138e0:	add	x20, x20, #0x3
  4138e4:	mov	w14, #0x1                   	// #1
  4138e8:	cmp	x20, x22
  4138ec:	b.cs	4138f8 <wcrtomb@plt+0x10c98>  // b.hs, b.nlast
  4138f0:	mov	w8, #0x5c                  	// #92
  4138f4:	strb	w8, [x21, x20]
  4138f8:	add	x20, x20, #0x1
  4138fc:	cmp	x20, x22
  413900:	b.cs	413908 <wcrtomb@plt+0x10ca8>  // b.hs, b.nlast
  413904:	strb	w9, [x21, x20]
  413908:	add	x20, x20, #0x1
  41390c:	and	w25, w25, w26
  413910:	add	x23, x23, #0x1
  413914:	cmn	x28, #0x1
  413918:	b.ne	41379c <wcrtomb@plt+0x10b3c>  // b.any
  41391c:	b	4137a8 <wcrtomb@plt+0x10b48>
  413920:	cmp	x28, #0x1
  413924:	b.eq	413948 <wcrtomb@plt+0x10ce8>  // b.none
  413928:	cmn	x28, #0x1
  41392c:	b.ne	41394c <wcrtomb@plt+0x10cec>  // b.any
  413930:	ldrb	w8, [x24, #1]
  413934:	cbz	w8, 413948 <wcrtomb@plt+0x10ce8>
  413938:	mov	w8, wzr
  41393c:	mov	w26, wzr
  413940:	mov	x28, #0xffffffffffffffff    	// #-1
  413944:	b	413868 <wcrtomb@plt+0x10c08>
  413948:	cbz	x23, 413958 <wcrtomb@plt+0x10cf8>
  41394c:	mov	w8, wzr
  413950:	mov	w26, wzr
  413954:	b	413868 <wcrtomb@plt+0x10c08>
  413958:	mov	w10, #0x1                   	// #1
  41395c:	cmp	w4, #0x2
  413960:	b.ne	413968 <wcrtomb@plt+0x10d08>  // b.any
  413964:	tbnz	w16, #0, 41403c <wcrtomb@plt+0x113dc>
  413968:	mov	w8, wzr
  41396c:	mov	w26, w10
  413970:	b	413868 <wcrtomb@plt+0x10c08>
  413974:	cmp	w4, #0x2
  413978:	b.ne	413ac4 <wcrtomb@plt+0x10e64>  // b.any
  41397c:	tbz	w16, #0, 413ad0 <wcrtomb@plt+0x10e70>
  413980:	b	41403c <wcrtomb@plt+0x113dc>
  413984:	mov	w9, #0x66                  	// #102
  413988:	b	413b20 <wcrtomb@plt+0x10ec0>
  41398c:	mov	w11, #0x74                  	// #116
  413990:	b	4139a0 <wcrtomb@plt+0x10d40>
  413994:	mov	w9, #0x62                  	// #98
  413998:	b	413b20 <wcrtomb@plt+0x10ec0>
  41399c:	mov	w11, #0x72                  	// #114
  4139a0:	ldr	w8, [sp, #84]
  4139a4:	mov	w9, w11
  4139a8:	tbnz	w8, #0, 413b20 <wcrtomb@plt+0x10ec0>
  4139ac:	b	41403c <wcrtomb@plt+0x113dc>
  4139b0:	ldur	w8, [x29, #-72]
  4139b4:	tbz	w8, #0, 413b34 <wcrtomb@plt+0x10ed4>
  4139b8:	cmp	w4, #0x2
  4139bc:	tbnz	w16, #0, 414154 <wcrtomb@plt+0x114f4>
  4139c0:	cset	w8, ne  // ne = any
  4139c4:	orr	w8, w8, w14
  4139c8:	tbz	w8, #0, 413e64 <wcrtomb@plt+0x11204>
  4139cc:	mov	x8, x20
  4139d0:	cmp	x8, x22
  4139d4:	b.cc	413eac <wcrtomb@plt+0x1124c>  // b.lo, b.ul, b.last
  4139d8:	b	413eb4 <wcrtomb@plt+0x11254>
  4139dc:	cmp	w4, #0x5
  4139e0:	b.eq	413c60 <wcrtomb@plt+0x11000>  // b.none
  4139e4:	cmp	w4, #0x2
  4139e8:	b.ne	413d10 <wcrtomb@plt+0x110b0>  // b.any
  4139ec:	tbz	w16, #0, 413d10 <wcrtomb@plt+0x110b0>
  4139f0:	b	41403c <wcrtomb@plt+0x113dc>
  4139f4:	mov	w9, #0x76                  	// #118
  4139f8:	b	413b20 <wcrtomb@plt+0x10ec0>
  4139fc:	cmp	w4, #0x2
  413a00:	b.ne	413b44 <wcrtomb@plt+0x10ee4>  // b.any
  413a04:	tbnz	w16, #0, 41403c <wcrtomb@plt+0x113dc>
  413a08:	ldr	x10, [sp, #64]
  413a0c:	cmp	x22, #0x0
  413a10:	cset	w8, eq  // eq = none
  413a14:	cmp	x10, #0x0
  413a18:	cset	w9, ne  // ne = any
  413a1c:	orr	w8, w9, w8
  413a20:	cmp	w8, #0x0
  413a24:	csel	x10, x10, x22, ne  // ne = any
  413a28:	csel	x22, x22, xzr, ne  // ne = any
  413a2c:	cmp	x20, x22
  413a30:	str	x10, [sp, #64]
  413a34:	b.cs	413a40 <wcrtomb@plt+0x10de0>  // b.hs, b.nlast
  413a38:	mov	w8, #0x27                  	// #39
  413a3c:	strb	w8, [x21, x20]
  413a40:	add	x8, x20, #0x1
  413a44:	cmp	x8, x22
  413a48:	b.cs	413a54 <wcrtomb@plt+0x10df4>  // b.hs, b.nlast
  413a4c:	mov	w9, #0x5c                  	// #92
  413a50:	strb	w9, [x21, x8]
  413a54:	add	x8, x20, #0x2
  413a58:	cmp	x8, x22
  413a5c:	b.cs	413a68 <wcrtomb@plt+0x10e08>  // b.hs, b.nlast
  413a60:	mov	w9, #0x27                  	// #39
  413a64:	strb	w9, [x21, x8]
  413a68:	mov	w14, wzr
  413a6c:	mov	w8, wzr
  413a70:	add	x20, x20, #0x3
  413a74:	b	413b48 <wcrtomb@plt+0x10ee8>
  413a78:	ldr	x8, [sp, #48]
  413a7c:	str	w14, [sp, #28]
  413a80:	cmp	x8, #0x1
  413a84:	b.ne	413b5c <wcrtomb@plt+0x10efc>  // b.any
  413a88:	bl	4029e0 <__ctype_b_loc@plt>
  413a8c:	ldr	x8, [x0]
  413a90:	mov	w11, #0x1                   	// #1
  413a94:	ldrh	w8, [x8, x19, lsl #1]
  413a98:	ubfx	w26, w8, #14, #1
  413a9c:	ldr	w8, [sp, #60]
  413aa0:	ldp	w16, w4, [x29, #-48]
  413aa4:	ldr	w14, [sp, #28]
  413aa8:	ldur	w17, [x29, #-52]
  413aac:	cmp	x11, #0x1
  413ab0:	orr	w8, w26, w8
  413ab4:	b.hi	413d20 <wcrtomb@plt+0x110c0>  // b.pmore
  413ab8:	tbz	w8, #0, 413d20 <wcrtomb@plt+0x110c0>
  413abc:	mov	w8, wzr
  413ac0:	b	413868 <wcrtomb@plt+0x10c08>
  413ac4:	ldr	w8, [sp, #56]
  413ac8:	mov	w9, #0x5c                  	// #92
  413acc:	tbz	w8, #0, 413b20 <wcrtomb@plt+0x10ec0>
  413ad0:	mov	w8, wzr
  413ad4:	mov	w26, wzr
  413ad8:	mov	w19, #0x5c                  	// #92
  413adc:	tbnz	w8, #0, 413b10 <wcrtomb@plt+0x10eb0>
  413ae0:	tbz	w14, #0, 413b10 <wcrtomb@plt+0x10eb0>
  413ae4:	cmp	x20, x22
  413ae8:	b.cs	413af4 <wcrtomb@plt+0x10e94>  // b.hs, b.nlast
  413aec:	mov	w8, #0x27                  	// #39
  413af0:	strb	w8, [x21, x20]
  413af4:	add	x8, x20, #0x1
  413af8:	cmp	x8, x22
  413afc:	b.cs	413b08 <wcrtomb@plt+0x10ea8>  // b.hs, b.nlast
  413b00:	mov	w9, #0x27                  	// #39
  413b04:	strb	w9, [x21, x8]
  413b08:	mov	w14, wzr
  413b0c:	add	x20, x20, #0x2
  413b10:	mov	w9, w19
  413b14:	cmp	x20, x22
  413b18:	b.cc	413904 <wcrtomb@plt+0x10ca4>  // b.lo, b.ul, b.last
  413b1c:	b	413908 <wcrtomb@plt+0x10ca8>
  413b20:	ldur	w10, [x29, #-72]
  413b24:	mov	w8, wzr
  413b28:	mov	w26, wzr
  413b2c:	tbz	w10, #0, 413868 <wcrtomb@plt+0x10c08>
  413b30:	b	413894 <wcrtomb@plt+0x10c34>
  413b34:	ldr	w8, [sp, #80]
  413b38:	tbnz	w8, #0, 413910 <wcrtomb@plt+0x10cb0>
  413b3c:	mov	w19, wzr
  413b40:	b	41394c <wcrtomb@plt+0x10cec>
  413b44:	mov	w8, wzr
  413b48:	mov	w9, #0x1                   	// #1
  413b4c:	mov	w19, #0x27                  	// #39
  413b50:	str	w9, [sp, #72]
  413b54:	mov	w26, #0x1                   	// #1
  413b58:	b	413868 <wcrtomb@plt+0x10c08>
  413b5c:	cmn	x28, #0x1
  413b60:	stur	xzr, [x29, #-16]
  413b64:	b.ne	413b74 <wcrtomb@plt+0x10f14>  // b.any
  413b68:	mov	x0, x24
  413b6c:	bl	4025c0 <strlen@plt>
  413b70:	mov	x28, x0
  413b74:	ldr	x8, [sp, #96]
  413b78:	mov	x11, xzr
  413b7c:	mov	w26, #0x1                   	// #1
  413b80:	str	x21, [sp, #32]
  413b84:	add	x8, x8, x23
  413b88:	str	x8, [sp, #16]
  413b8c:	b	413bc4 <wcrtomb@plt+0x10f64>
  413b90:	ldur	w0, [x29, #-20]
  413b94:	bl	402ba0 <iswprint@plt>
  413b98:	ldr	x21, [sp, #40]
  413b9c:	cmp	w0, #0x0
  413ba0:	cset	w8, ne  // ne = any
  413ba4:	sub	x0, x29, #0x10
  413ba8:	and	w26, w26, w8
  413bac:	add	x21, x24, x21
  413bb0:	bl	402950 <mbsinit@plt>
  413bb4:	mov	x11, x21
  413bb8:	ldr	x21, [sp, #32]
  413bbc:	ldur	x24, [x29, #-80]
  413bc0:	cbnz	w0, 413a9c <wcrtomb@plt+0x10e3c>
  413bc4:	add	x21, x11, x23
  413bc8:	add	x1, x24, x21
  413bcc:	sub	x2, x28, x21
  413bd0:	sub	x0, x29, #0x14
  413bd4:	sub	x3, x29, #0x10
  413bd8:	str	x11, [sp, #40]
  413bdc:	bl	415680 <wcrtomb@plt+0x12a20>
  413be0:	cbz	x0, 413f68 <wcrtomb@plt+0x11308>
  413be4:	mov	x24, x0
  413be8:	cmn	x0, #0x1
  413bec:	b.eq	413f64 <wcrtomb@plt+0x11304>  // b.none
  413bf0:	cmn	x24, #0x2
  413bf4:	b.eq	413f28 <wcrtomb@plt+0x112c8>  // b.none
  413bf8:	ldr	w9, [sp, #76]
  413bfc:	ldr	x21, [sp, #32]
  413c00:	cmp	x24, #0x2
  413c04:	cset	w8, cc  // cc = lo, ul, last
  413c08:	eor	w9, w9, #0x1
  413c0c:	mov	x12, #0x2b                  	// #43
  413c10:	orr	w8, w9, w8
  413c14:	mov	w11, #0x1                   	// #1
  413c18:	movk	x12, #0x2, lsl #32
  413c1c:	tbnz	w8, #0, 413b90 <wcrtomb@plt+0x10f30>
  413c20:	ldr	x9, [sp, #40]
  413c24:	ldr	x10, [sp, #16]
  413c28:	sub	x8, x24, #0x1
  413c2c:	add	x9, x10, x9
  413c30:	b	413c40 <wcrtomb@plt+0x10fe0>
  413c34:	subs	x8, x8, #0x1
  413c38:	add	x9, x9, #0x1
  413c3c:	b.eq	413b90 <wcrtomb@plt+0x10f30>  // b.none
  413c40:	ldrb	w10, [x9]
  413c44:	sub	w10, w10, #0x5b
  413c48:	cmp	w10, #0x21
  413c4c:	b.hi	413c34 <wcrtomb@plt+0x10fd4>  // b.pmore
  413c50:	lsl	x10, x11, x10
  413c54:	tst	x10, x12
  413c58:	b.eq	413c34 <wcrtomb@plt+0x10fd4>  // b.none
  413c5c:	b	414070 <wcrtomb@plt+0x11410>
  413c60:	ldr	w8, [sp, #80]
  413c64:	tbz	w8, #2, 413d10 <wcrtomb@plt+0x110b0>
  413c68:	add	x9, x23, #0x2
  413c6c:	cmp	x9, x28
  413c70:	b.cs	413d10 <wcrtomb@plt+0x110b0>  // b.hs, b.nlast
  413c74:	add	x8, x23, x24
  413c78:	ldrb	w8, [x8, #1]
  413c7c:	cmp	w8, #0x3f
  413c80:	b.ne	413d10 <wcrtomb@plt+0x110b0>  // b.any
  413c84:	ldrb	w19, [x24, x9]
  413c88:	mov	w8, wzr
  413c8c:	cmp	w19, #0x3e
  413c90:	b.hi	413f7c <wcrtomb@plt+0x1131c>  // b.pmore
  413c94:	mov	w10, #0x1                   	// #1
  413c98:	mov	x11, #0xa38200000000        	// #179778741075968
  413c9c:	lsl	x10, x10, x19
  413ca0:	movk	x11, #0x7000, lsl #48
  413ca4:	tst	x10, x11
  413ca8:	b.eq	413f7c <wcrtomb@plt+0x1131c>  // b.none
  413cac:	tbnz	w16, #0, 41403c <wcrtomb@plt+0x113dc>
  413cb0:	cmp	x20, x22
  413cb4:	b.cs	413cc0 <wcrtomb@plt+0x11060>  // b.hs, b.nlast
  413cb8:	mov	w8, #0x3f                  	// #63
  413cbc:	strb	w8, [x21, x20]
  413cc0:	add	x8, x20, #0x1
  413cc4:	cmp	x8, x22
  413cc8:	b.cs	413cd4 <wcrtomb@plt+0x11074>  // b.hs, b.nlast
  413ccc:	mov	w10, #0x22                  	// #34
  413cd0:	strb	w10, [x21, x8]
  413cd4:	add	x8, x20, #0x2
  413cd8:	cmp	x8, x22
  413cdc:	b.cs	413ce8 <wcrtomb@plt+0x11088>  // b.hs, b.nlast
  413ce0:	mov	w10, #0x22                  	// #34
  413ce4:	strb	w10, [x21, x8]
  413ce8:	add	x8, x20, #0x3
  413cec:	cmp	x8, x22
  413cf0:	b.cs	413cfc <wcrtomb@plt+0x1109c>  // b.hs, b.nlast
  413cf4:	mov	w10, #0x3f                  	// #63
  413cf8:	strb	w10, [x21, x8]
  413cfc:	mov	w8, wzr
  413d00:	mov	w26, wzr
  413d04:	add	x20, x20, #0x4
  413d08:	mov	x23, x9
  413d0c:	b	413868 <wcrtomb@plt+0x10c08>
  413d10:	mov	w8, wzr
  413d14:	mov	w26, wzr
  413d18:	mov	w19, #0x3f                  	// #63
  413d1c:	b	413868 <wcrtomb@plt+0x10c08>
  413d20:	mov	w10, wzr
  413d24:	add	x9, x11, x23
  413d28:	b	413d3c <wcrtomb@plt+0x110dc>
  413d2c:	ldr	x12, [sp, #96]
  413d30:	add	x20, x20, #0x1
  413d34:	ldrb	w19, [x12, x23]
  413d38:	mov	x23, x11
  413d3c:	tbz	w8, #0, 413d60 <wcrtomb@plt+0x11100>
  413d40:	tbz	w27, #0, 413e0c <wcrtomb@plt+0x111ac>
  413d44:	cmp	x20, x22
  413d48:	b.cs	413d54 <wcrtomb@plt+0x110f4>  // b.hs, b.nlast
  413d4c:	mov	w11, #0x5c                  	// #92
  413d50:	strb	w11, [x21, x20]
  413d54:	mov	w27, wzr
  413d58:	add	x20, x20, #0x1
  413d5c:	b	413e10 <wcrtomb@plt+0x111b0>
  413d60:	tbnz	w16, #0, 41403c <wcrtomb@plt+0x113dc>
  413d64:	cmp	w4, #0x2
  413d68:	cset	w10, ne  // ne = any
  413d6c:	orr	w10, w10, w14
  413d70:	tbnz	w10, #0, 413db4 <wcrtomb@plt+0x11154>
  413d74:	cmp	x20, x22
  413d78:	b.cs	413d84 <wcrtomb@plt+0x11124>  // b.hs, b.nlast
  413d7c:	mov	w10, #0x27                  	// #39
  413d80:	strb	w10, [x21, x20]
  413d84:	add	x10, x20, #0x1
  413d88:	cmp	x10, x22
  413d8c:	b.cs	413d98 <wcrtomb@plt+0x11138>  // b.hs, b.nlast
  413d90:	mov	w11, #0x24                  	// #36
  413d94:	strb	w11, [x21, x10]
  413d98:	add	x10, x20, #0x2
  413d9c:	cmp	x10, x22
  413da0:	b.cs	413dac <wcrtomb@plt+0x1114c>  // b.hs, b.nlast
  413da4:	mov	w11, #0x27                  	// #39
  413da8:	strb	w11, [x21, x10]
  413dac:	add	x20, x20, #0x3
  413db0:	mov	w14, #0x1                   	// #1
  413db4:	cmp	x20, x22
  413db8:	b.cs	413dc4 <wcrtomb@plt+0x11164>  // b.hs, b.nlast
  413dbc:	mov	w10, #0x5c                  	// #92
  413dc0:	strb	w10, [x21, x20]
  413dc4:	add	x10, x20, #0x1
  413dc8:	cmp	x10, x22
  413dcc:	b.cs	413ddc <wcrtomb@plt+0x1117c>  // b.hs, b.nlast
  413dd0:	mov	w11, #0x30                  	// #48
  413dd4:	bfxil	w11, w19, #6, #2
  413dd8:	strb	w11, [x21, x10]
  413ddc:	add	x10, x20, #0x2
  413de0:	cmp	x10, x22
  413de4:	b.cs	413df4 <wcrtomb@plt+0x11194>  // b.hs, b.nlast
  413de8:	mov	w11, #0x30                  	// #48
  413dec:	bfxil	w11, w19, #3, #3
  413df0:	strb	w11, [x21, x10]
  413df4:	mov	w11, #0x30                  	// #48
  413df8:	bfxil	w11, w19, #0, #3
  413dfc:	add	x20, x20, #0x3
  413e00:	mov	w10, #0x1                   	// #1
  413e04:	mov	w19, w11
  413e08:	b	413e10 <wcrtomb@plt+0x111b0>
  413e0c:	mov	w27, wzr
  413e10:	add	x11, x23, #0x1
  413e14:	cmp	x9, x11
  413e18:	b.ls	413f1c <wcrtomb@plt+0x112bc>  // b.plast
  413e1c:	and	w12, w10, #0x1
  413e20:	orn	w12, w12, w14
  413e24:	tbnz	w12, #0, 413e54 <wcrtomb@plt+0x111f4>
  413e28:	cmp	x20, x22
  413e2c:	b.cs	413e38 <wcrtomb@plt+0x111d8>  // b.hs, b.nlast
  413e30:	mov	w12, #0x27                  	// #39
  413e34:	strb	w12, [x21, x20]
  413e38:	add	x12, x20, #0x1
  413e3c:	cmp	x12, x22
  413e40:	b.cs	413e4c <wcrtomb@plt+0x111ec>  // b.hs, b.nlast
  413e44:	mov	w13, #0x27                  	// #39
  413e48:	strb	w13, [x21, x12]
  413e4c:	mov	w14, wzr
  413e50:	add	x20, x20, #0x2
  413e54:	cmp	x20, x22
  413e58:	b.cs	413d2c <wcrtomb@plt+0x110cc>  // b.hs, b.nlast
  413e5c:	strb	w19, [x21, x20]
  413e60:	b	413d2c <wcrtomb@plt+0x110cc>
  413e64:	cmp	x20, x22
  413e68:	b.cs	413e74 <wcrtomb@plt+0x11214>  // b.hs, b.nlast
  413e6c:	mov	w8, #0x27                  	// #39
  413e70:	strb	w8, [x21, x20]
  413e74:	add	x8, x20, #0x1
  413e78:	cmp	x8, x22
  413e7c:	b.cs	413e88 <wcrtomb@plt+0x11228>  // b.hs, b.nlast
  413e80:	mov	w9, #0x24                  	// #36
  413e84:	strb	w9, [x21, x8]
  413e88:	add	x8, x20, #0x2
  413e8c:	cmp	x8, x22
  413e90:	b.cs	413e9c <wcrtomb@plt+0x1123c>  // b.hs, b.nlast
  413e94:	mov	w9, #0x27                  	// #39
  413e98:	strb	w9, [x21, x8]
  413e9c:	add	x8, x20, #0x3
  413ea0:	mov	w14, #0x1                   	// #1
  413ea4:	cmp	x8, x22
  413ea8:	b.cs	413eb4 <wcrtomb@plt+0x11254>  // b.hs, b.nlast
  413eac:	mov	w9, #0x5c                  	// #92
  413eb0:	strb	w9, [x21, x8]
  413eb4:	cmp	w4, #0x2
  413eb8:	add	x20, x8, #0x1
  413ebc:	b.eq	413f0c <wcrtomb@plt+0x112ac>  // b.none
  413ec0:	add	x9, x23, #0x1
  413ec4:	cmp	x9, x28
  413ec8:	b.cs	413f0c <wcrtomb@plt+0x112ac>  // b.hs, b.nlast
  413ecc:	ldrb	w9, [x24, x9]
  413ed0:	sub	w9, w9, #0x30
  413ed4:	cmp	w9, #0x9
  413ed8:	b.hi	413f0c <wcrtomb@plt+0x112ac>  // b.pmore
  413edc:	cmp	x20, x22
  413ee0:	b.cs	413eec <wcrtomb@plt+0x1128c>  // b.hs, b.nlast
  413ee4:	mov	w9, #0x30                  	// #48
  413ee8:	strb	w9, [x21, x20]
  413eec:	add	x9, x8, #0x2
  413ef0:	cmp	x9, x22
  413ef4:	b.cs	413f00 <wcrtomb@plt+0x112a0>  // b.hs, b.nlast
  413ef8:	mov	w10, #0x30                  	// #48
  413efc:	strb	w10, [x21, x9]
  413f00:	mov	w26, wzr
  413f04:	add	x20, x8, #0x3
  413f08:	b	413f10 <wcrtomb@plt+0x112b0>
  413f0c:	mov	w26, wzr
  413f10:	mov	w8, #0x1                   	// #1
  413f14:	mov	w19, #0x30                  	// #48
  413f18:	b	413868 <wcrtomb@plt+0x10c08>
  413f1c:	and	w8, w10, #0x1
  413f20:	tbz	w8, #0, 413ae0 <wcrtomb@plt+0x10e80>
  413f24:	b	413b10 <wcrtomb@plt+0x10eb0>
  413f28:	cmp	x28, x21
  413f2c:	b.ls	413f64 <wcrtomb@plt+0x11304>  // b.plast
  413f30:	ldur	x24, [x29, #-80]
  413f34:	ldp	x21, x11, [sp, #32]
  413f38:	sub	x8, x28, x23
  413f3c:	add	x9, x24, x23
  413f40:	ldrb	w10, [x9, x11]
  413f44:	cbz	w10, 413f74 <wcrtomb@plt+0x11314>
  413f48:	add	x11, x11, #0x1
  413f4c:	add	x10, x23, x11
  413f50:	cmp	x10, x28
  413f54:	b.cc	413f40 <wcrtomb@plt+0x112e0>  // b.lo, b.ul, b.last
  413f58:	mov	w26, wzr
  413f5c:	mov	x11, x8
  413f60:	b	413a9c <wcrtomb@plt+0x10e3c>
  413f64:	mov	w26, wzr
  413f68:	ldp	x21, x11, [sp, #32]
  413f6c:	ldur	x24, [x29, #-80]
  413f70:	b	413a9c <wcrtomb@plt+0x10e3c>
  413f74:	mov	w26, wzr
  413f78:	b	413a9c <wcrtomb@plt+0x10e3c>
  413f7c:	mov	w19, #0x3f                  	// #63
  413f80:	mov	w26, w8
  413f84:	b	413868 <wcrtomb@plt+0x10c08>
  413f88:	mov	x28, x23
  413f8c:	b	413f94 <wcrtomb@plt+0x11334>
  413f90:	mov	x28, #0xffffffffffffffff    	// #-1
  413f94:	cmp	w4, #0x2
  413f98:	ldur	w10, [x29, #-72]
  413f9c:	cset	w8, eq  // eq = none
  413fa0:	cmp	x20, #0x0
  413fa4:	cset	w9, eq  // eq = none
  413fa8:	and	w8, w8, w9
  413fac:	and	w8, w16, w8
  413fb0:	tbnz	w8, #0, 414040 <wcrtomb@plt+0x113e0>
  413fb4:	cmp	w4, #0x2
  413fb8:	cset	w8, ne  // ne = any
  413fbc:	orr	w8, w16, w8
  413fc0:	tbnz	w8, #0, 41410c <wcrtomb@plt+0x114ac>
  413fc4:	ldr	w8, [sp, #72]
  413fc8:	eor	w8, w8, #0x1
  413fcc:	tbnz	w8, #0, 41410c <wcrtomb@plt+0x114ac>
  413fd0:	tbnz	w25, #0, 4140dc <wcrtomb@plt+0x1147c>
  413fd4:	ldr	x24, [sp, #64]
  413fd8:	mov	w19, wzr
  413fdc:	cbz	x24, 414108 <wcrtomb@plt+0x114a8>
  413fe0:	mov	w4, #0x2                   	// #2
  413fe4:	mov	w8, w10
  413fe8:	mov	w25, w19
  413fec:	mov	w16, w19
  413ff0:	cbz	x22, 413590 <wcrtomb@plt+0x10930>
  413ff4:	b	41410c <wcrtomb@plt+0x114ac>
  413ff8:	mov	w16, wzr
  413ffc:	cbz	x22, 414008 <wcrtomb@plt+0x113a8>
  414000:	mov	w8, #0x22                  	// #34
  414004:	strb	w8, [x21]
  414008:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  41400c:	add	x8, x8, #0x39c
  414010:	stur	x8, [x29, #-64]
  414014:	mov	w8, #0x1                   	// #1
  414018:	mov	w20, #0x1                   	// #1
  41401c:	mov	w4, #0x5                   	// #5
  414020:	stur	x8, [x29, #-32]
  414024:	mov	w9, #0x1                   	// #1
  414028:	b	41371c <wcrtomb@plt+0x10abc>
  41402c:	mov	w9, #0x1                   	// #1
  414030:	mov	w16, wzr
  414034:	cbnz	x22, 4136a4 <wcrtomb@plt+0x10a44>
  414038:	b	4136ac <wcrtomb@plt+0x10a4c>
  41403c:	ldur	w10, [x29, #-72]
  414040:	tst	w10, #0x1
  414044:	mov	w8, #0x2                   	// #2
  414048:	mov	w9, #0x4                   	// #4
  41404c:	csel	w8, w9, w8, ne  // ne = any
  414050:	cmp	w4, #0x2
  414054:	b.ne	41405c <wcrtomb@plt+0x113fc>  // b.any
  414058:	mov	w4, w8
  41405c:	ldr	x7, [sp, #88]
  414060:	b	41408c <wcrtomb@plt+0x1142c>
  414064:	ldr	x7, [sp, #88]
  414068:	ldur	w4, [x29, #-44]
  41406c:	b	41408c <wcrtomb@plt+0x1142c>
  414070:	ldur	w8, [x29, #-72]
  414074:	ldr	x7, [sp, #88]
  414078:	ldur	x24, [x29, #-80]
  41407c:	mov	w9, #0x4                   	// #4
  414080:	tst	w8, #0x1
  414084:	mov	w8, #0x2                   	// #2
  414088:	csel	w4, w9, w8, ne  // ne = any
  41408c:	ldr	w8, [sp, #80]
  414090:	mov	x0, x21
  414094:	mov	x1, x22
  414098:	mov	x2, x24
  41409c:	and	w5, w8, #0xfffffffd
  4140a0:	ldur	x8, [x29, #-88]
  4140a4:	mov	x3, x28
  4140a8:	mov	x6, xzr
  4140ac:	str	x8, [sp]
  4140b0:	bl	41350c <wcrtomb@plt+0x108ac>
  4140b4:	mov	x20, x0
  4140b8:	mov	x0, x20
  4140bc:	ldp	x20, x19, [sp, #272]
  4140c0:	ldp	x22, x21, [sp, #256]
  4140c4:	ldp	x24, x23, [sp, #240]
  4140c8:	ldp	x26, x25, [sp, #224]
  4140cc:	ldp	x28, x27, [sp, #208]
  4140d0:	ldp	x29, x30, [sp, #192]
  4140d4:	add	sp, sp, #0x120
  4140d8:	ret
  4140dc:	ldur	x8, [x29, #-88]
  4140e0:	ldr	x1, [sp, #64]
  4140e4:	ldur	x2, [x29, #-80]
  4140e8:	ldr	w5, [sp, #80]
  4140ec:	ldur	x6, [x29, #-40]
  4140f0:	ldr	x7, [sp, #88]
  4140f4:	mov	w4, #0x5                   	// #5
  4140f8:	str	x8, [sp]
  4140fc:	mov	x0, x21
  414100:	mov	x3, x28
  414104:	b	4140b0 <wcrtomb@plt+0x11450>
  414108:	mov	w16, w19
  41410c:	ldur	x8, [x29, #-64]
  414110:	cbz	x8, 414144 <wcrtomb@plt+0x114e4>
  414114:	tbnz	w16, #0, 414144 <wcrtomb@plt+0x114e4>
  414118:	ldrb	w9, [x8]
  41411c:	cbz	w9, 414144 <wcrtomb@plt+0x114e4>
  414120:	add	x8, x8, #0x1
  414124:	b	414134 <wcrtomb@plt+0x114d4>
  414128:	ldrb	w9, [x8], #1
  41412c:	add	x20, x20, #0x1
  414130:	cbz	w9, 414144 <wcrtomb@plt+0x114e4>
  414134:	cmp	x20, x22
  414138:	b.cs	414128 <wcrtomb@plt+0x114c8>  // b.hs, b.nlast
  41413c:	strb	w9, [x21, x20]
  414140:	b	414128 <wcrtomb@plt+0x114c8>
  414144:	cmp	x20, x22
  414148:	b.cs	4140b8 <wcrtomb@plt+0x11458>  // b.hs, b.nlast
  41414c:	strb	wzr, [x21, x20]
  414150:	b	4140b8 <wcrtomb@plt+0x11458>
  414154:	b.ne	41405c <wcrtomb@plt+0x113fc>  // b.any
  414158:	mov	w4, #0x4                   	// #4
  41415c:	b	41405c <wcrtomb@plt+0x113fc>
  414160:	bl	402920 <abort@plt>
  414164:	sub	sp, sp, #0x60
  414168:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  41416c:	add	x8, x8, #0x798
  414170:	cmp	x2, #0x0
  414174:	stp	x29, x30, [sp, #16]
  414178:	stp	x26, x25, [sp, #32]
  41417c:	stp	x24, x23, [sp, #48]
  414180:	stp	x22, x21, [sp, #64]
  414184:	stp	x20, x19, [sp, #80]
  414188:	add	x29, sp, #0x10
  41418c:	mov	x19, x1
  414190:	mov	x20, x0
  414194:	csel	x25, x8, x2, eq  // eq = none
  414198:	bl	402bd0 <__errno_location@plt>
  41419c:	ldp	w4, w8, [x25]
  4141a0:	ldp	x7, x9, [x25, #40]
  4141a4:	ldr	w26, [x0]
  4141a8:	add	x23, x25, #0x8
  4141ac:	orr	w22, w8, #0x1
  4141b0:	mov	x21, x0
  4141b4:	mov	x0, xzr
  4141b8:	mov	x1, xzr
  4141bc:	mov	x2, x20
  4141c0:	mov	x3, x19
  4141c4:	mov	w5, w22
  4141c8:	mov	x6, x23
  4141cc:	str	x9, [sp]
  4141d0:	bl	41350c <wcrtomb@plt+0x108ac>
  4141d4:	add	x24, x0, #0x1
  4141d8:	mov	x0, x24
  4141dc:	bl	415348 <wcrtomb@plt+0x126e8>
  4141e0:	ldr	w4, [x25]
  4141e4:	ldp	x7, x8, [x25, #40]
  4141e8:	mov	x1, x24
  4141ec:	mov	x2, x20
  4141f0:	mov	x3, x19
  4141f4:	mov	w5, w22
  4141f8:	mov	x6, x23
  4141fc:	mov	x25, x0
  414200:	str	x8, [sp]
  414204:	bl	41350c <wcrtomb@plt+0x108ac>
  414208:	str	w26, [x21]
  41420c:	mov	x0, x25
  414210:	ldp	x20, x19, [sp, #80]
  414214:	ldp	x22, x21, [sp, #64]
  414218:	ldp	x24, x23, [sp, #48]
  41421c:	ldp	x26, x25, [sp, #32]
  414220:	ldp	x29, x30, [sp, #16]
  414224:	add	sp, sp, #0x60
  414228:	ret
  41422c:	sub	sp, sp, #0x70
  414230:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  414234:	add	x8, x8, #0x798
  414238:	cmp	x3, #0x0
  41423c:	stp	x29, x30, [sp, #16]
  414240:	stp	x28, x27, [sp, #32]
  414244:	stp	x26, x25, [sp, #48]
  414248:	stp	x24, x23, [sp, #64]
  41424c:	stp	x22, x21, [sp, #80]
  414250:	stp	x20, x19, [sp, #96]
  414254:	add	x29, sp, #0x10
  414258:	mov	x19, x2
  41425c:	mov	x22, x1
  414260:	mov	x23, x0
  414264:	csel	x21, x8, x3, eq  // eq = none
  414268:	bl	402bd0 <__errno_location@plt>
  41426c:	ldp	w4, w8, [x21]
  414270:	cmp	x19, #0x0
  414274:	ldp	x7, x9, [x21, #40]
  414278:	ldr	w28, [x0]
  41427c:	cset	w10, eq  // eq = none
  414280:	orr	w25, w8, w10
  414284:	add	x26, x21, #0x8
  414288:	mov	x24, x0
  41428c:	mov	x0, xzr
  414290:	mov	x1, xzr
  414294:	mov	x2, x23
  414298:	mov	x3, x22
  41429c:	mov	w5, w25
  4142a0:	mov	x6, x26
  4142a4:	str	x9, [sp]
  4142a8:	bl	41350c <wcrtomb@plt+0x108ac>
  4142ac:	add	x27, x0, #0x1
  4142b0:	mov	x20, x0
  4142b4:	mov	x0, x27
  4142b8:	bl	415348 <wcrtomb@plt+0x126e8>
  4142bc:	ldr	w4, [x21]
  4142c0:	ldp	x7, x8, [x21, #40]
  4142c4:	mov	x1, x27
  4142c8:	mov	x2, x23
  4142cc:	mov	x3, x22
  4142d0:	mov	w5, w25
  4142d4:	mov	x6, x26
  4142d8:	mov	x21, x0
  4142dc:	str	x8, [sp]
  4142e0:	bl	41350c <wcrtomb@plt+0x108ac>
  4142e4:	str	w28, [x24]
  4142e8:	cbz	x19, 4142f0 <wcrtomb@plt+0x11690>
  4142ec:	str	x20, [x19]
  4142f0:	mov	x0, x21
  4142f4:	ldp	x20, x19, [sp, #96]
  4142f8:	ldp	x22, x21, [sp, #80]
  4142fc:	ldp	x24, x23, [sp, #64]
  414300:	ldp	x26, x25, [sp, #48]
  414304:	ldp	x28, x27, [sp, #32]
  414308:	ldp	x29, x30, [sp, #16]
  41430c:	add	sp, sp, #0x70
  414310:	ret
  414314:	stp	x29, x30, [sp, #-64]!
  414318:	stp	x20, x19, [sp, #48]
  41431c:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  414320:	stp	x22, x21, [sp, #32]
  414324:	ldr	w8, [x20, #1144]
  414328:	adrp	x21, 439000 <_obstack_memory_used@@Base+0x235a8>
  41432c:	ldr	x19, [x21, #1136]
  414330:	str	x23, [sp, #16]
  414334:	cmp	w8, #0x2
  414338:	mov	x29, sp
  41433c:	b.lt	414360 <wcrtomb@plt+0x11700>  // b.tstop
  414340:	add	x22, x19, #0x18
  414344:	mov	w23, #0x1                   	// #1
  414348:	ldr	x0, [x22], #16
  41434c:	bl	402a10 <free@plt>
  414350:	ldrsw	x8, [x20, #1144]
  414354:	add	x23, x23, #0x1
  414358:	cmp	x23, x8
  41435c:	b.lt	414348 <wcrtomb@plt+0x116e8>  // b.tstop
  414360:	ldr	x0, [x19, #8]
  414364:	adrp	x23, 439000 <_obstack_memory_used@@Base+0x235a8>
  414368:	add	x23, x23, #0x7d0
  41436c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x235a8>
  414370:	cmp	x0, x23
  414374:	add	x22, x22, #0x480
  414378:	b.eq	414388 <wcrtomb@plt+0x11728>  // b.none
  41437c:	bl	402a10 <free@plt>
  414380:	mov	w8, #0x100                 	// #256
  414384:	stp	x8, x23, [x22]
  414388:	cmp	x19, x22
  41438c:	b.eq	41439c <wcrtomb@plt+0x1173c>  // b.none
  414390:	mov	x0, x19
  414394:	bl	402a10 <free@plt>
  414398:	str	x22, [x21, #1136]
  41439c:	mov	w8, #0x1                   	// #1
  4143a0:	str	w8, [x20, #1144]
  4143a4:	ldp	x20, x19, [sp, #48]
  4143a8:	ldp	x22, x21, [sp, #32]
  4143ac:	ldr	x23, [sp, #16]
  4143b0:	ldp	x29, x30, [sp], #64
  4143b4:	ret
  4143b8:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  4143bc:	add	x3, x3, #0x798
  4143c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4143c4:	b	4143c8 <wcrtomb@plt+0x11768>
  4143c8:	sub	sp, sp, #0x80
  4143cc:	stp	x29, x30, [sp, #32]
  4143d0:	add	x29, sp, #0x20
  4143d4:	stp	x28, x27, [sp, #48]
  4143d8:	stp	x26, x25, [sp, #64]
  4143dc:	stp	x24, x23, [sp, #80]
  4143e0:	stp	x22, x21, [sp, #96]
  4143e4:	stp	x20, x19, [sp, #112]
  4143e8:	mov	x22, x3
  4143ec:	stur	x2, [x29, #-8]
  4143f0:	mov	x21, x1
  4143f4:	mov	w23, w0
  4143f8:	bl	402bd0 <__errno_location@plt>
  4143fc:	tbnz	w23, #31, 41454c <wcrtomb@plt+0x118ec>
  414400:	adrp	x25, 439000 <_obstack_memory_used@@Base+0x235a8>
  414404:	ldr	w8, [x25, #1144]
  414408:	adrp	x28, 439000 <_obstack_memory_used@@Base+0x235a8>
  41440c:	ldr	w20, [x0]
  414410:	ldr	x27, [x28, #1136]
  414414:	mov	x19, x0
  414418:	cmp	w8, w23
  41441c:	b.gt	414488 <wcrtomb@plt+0x11828>
  414420:	mov	w8, #0x7fffffff            	// #2147483647
  414424:	cmp	w23, w8
  414428:	stur	w20, [x29, #-12]
  41442c:	b.eq	414550 <wcrtomb@plt+0x118f0>  // b.none
  414430:	adrp	x20, 439000 <_obstack_memory_used@@Base+0x235a8>
  414434:	add	x20, x20, #0x480
  414438:	add	w26, w23, #0x1
  41443c:	cmp	x27, x20
  414440:	csel	x0, xzr, x27, eq  // eq = none
  414444:	sbfiz	x1, x26, #4, #32
  414448:	bl	4153c8 <wcrtomb@plt+0x12768>
  41444c:	mov	x24, x0
  414450:	cmp	x27, x20
  414454:	str	x0, [x28, #1136]
  414458:	b.ne	414464 <wcrtomb@plt+0x11804>  // b.any
  41445c:	ldr	q0, [x20]
  414460:	str	q0, [x24]
  414464:	ldrsw	x8, [x25, #1144]
  414468:	mov	w1, wzr
  41446c:	add	x0, x24, x8, lsl #4
  414470:	sub	w8, w26, w8
  414474:	sbfiz	x2, x8, #4, #32
  414478:	bl	402800 <memset@plt>
  41447c:	ldur	w20, [x29, #-12]
  414480:	mov	x27, x24
  414484:	str	w26, [x25, #1144]
  414488:	add	x28, x27, w23, uxtw #4
  41448c:	mov	x27, x28
  414490:	ldr	x26, [x28]
  414494:	ldr	x23, [x27, #8]!
  414498:	ldp	w4, w8, [x22]
  41449c:	ldp	x7, x9, [x22, #40]
  4144a0:	ldur	x3, [x29, #-8]
  4144a4:	add	x24, x22, #0x8
  4144a8:	orr	w25, w8, #0x1
  4144ac:	mov	x0, x23
  4144b0:	mov	x1, x26
  4144b4:	mov	x2, x21
  4144b8:	mov	w5, w25
  4144bc:	mov	x6, x24
  4144c0:	str	x9, [sp]
  4144c4:	bl	41350c <wcrtomb@plt+0x108ac>
  4144c8:	cmp	x26, x0
  4144cc:	b.hi	414524 <wcrtomb@plt+0x118c4>  // b.pmore
  4144d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4144d4:	add	x8, x8, #0x7d0
  4144d8:	add	x26, x0, #0x1
  4144dc:	cmp	x23, x8
  4144e0:	str	x26, [x28]
  4144e4:	b.eq	4144f0 <wcrtomb@plt+0x11890>  // b.none
  4144e8:	mov	x0, x23
  4144ec:	bl	402a10 <free@plt>
  4144f0:	mov	x0, x26
  4144f4:	bl	415348 <wcrtomb@plt+0x126e8>
  4144f8:	str	x0, [x27]
  4144fc:	ldr	w4, [x22]
  414500:	ldp	x7, x8, [x22, #40]
  414504:	ldur	x3, [x29, #-8]
  414508:	mov	x1, x26
  41450c:	mov	x2, x21
  414510:	mov	w5, w25
  414514:	mov	x6, x24
  414518:	mov	x23, x0
  41451c:	str	x8, [sp]
  414520:	bl	41350c <wcrtomb@plt+0x108ac>
  414524:	str	w20, [x19]
  414528:	mov	x0, x23
  41452c:	ldp	x20, x19, [sp, #112]
  414530:	ldp	x22, x21, [sp, #96]
  414534:	ldp	x24, x23, [sp, #80]
  414538:	ldp	x26, x25, [sp, #64]
  41453c:	ldp	x28, x27, [sp, #48]
  414540:	ldp	x29, x30, [sp, #32]
  414544:	add	sp, sp, #0x80
  414548:	ret
  41454c:	bl	402920 <abort@plt>
  414550:	bl	41563c <wcrtomb@plt+0x129dc>
  414554:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414558:	add	x3, x3, #0x798
  41455c:	b	4143c8 <wcrtomb@plt+0x11768>
  414560:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414564:	add	x3, x3, #0x798
  414568:	mov	x2, #0xffffffffffffffff    	// #-1
  41456c:	mov	x1, x0
  414570:	mov	w0, wzr
  414574:	b	4143c8 <wcrtomb@plt+0x11768>
  414578:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  41457c:	mov	x2, x1
  414580:	add	x3, x3, #0x798
  414584:	mov	x1, x0
  414588:	mov	w0, wzr
  41458c:	b	4143c8 <wcrtomb@plt+0x11768>
  414590:	sub	sp, sp, #0x50
  414594:	movi	v0.2d, #0x0
  414598:	cmp	w1, #0xa
  41459c:	stp	x29, x30, [sp, #64]
  4145a0:	add	x29, sp, #0x40
  4145a4:	str	xzr, [sp, #48]
  4145a8:	stp	q0, q0, [sp, #16]
  4145ac:	str	q0, [sp]
  4145b0:	b.eq	4145d8 <wcrtomb@plt+0x11978>  // b.none
  4145b4:	mov	x8, x2
  4145b8:	str	w1, [sp]
  4145bc:	mov	x3, sp
  4145c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4145c4:	mov	x1, x8
  4145c8:	bl	4143c8 <wcrtomb@plt+0x11768>
  4145cc:	ldp	x29, x30, [sp, #64]
  4145d0:	add	sp, sp, #0x50
  4145d4:	ret
  4145d8:	bl	402920 <abort@plt>
  4145dc:	sub	sp, sp, #0x50
  4145e0:	movi	v0.2d, #0x0
  4145e4:	cmp	w1, #0xa
  4145e8:	stp	x29, x30, [sp, #64]
  4145ec:	add	x29, sp, #0x40
  4145f0:	str	xzr, [sp, #48]
  4145f4:	stp	q0, q0, [sp, #16]
  4145f8:	str	q0, [sp]
  4145fc:	b.eq	414624 <wcrtomb@plt+0x119c4>  // b.none
  414600:	mov	x8, x3
  414604:	str	w1, [sp]
  414608:	mov	x3, sp
  41460c:	mov	x1, x2
  414610:	mov	x2, x8
  414614:	bl	4143c8 <wcrtomb@plt+0x11768>
  414618:	ldp	x29, x30, [sp, #64]
  41461c:	add	sp, sp, #0x50
  414620:	ret
  414624:	bl	402920 <abort@plt>
  414628:	sub	sp, sp, #0x50
  41462c:	movi	v0.2d, #0x0
  414630:	cmp	w0, #0xa
  414634:	stp	x29, x30, [sp, #64]
  414638:	add	x29, sp, #0x40
  41463c:	str	xzr, [sp, #48]
  414640:	stp	q0, q0, [sp, #16]
  414644:	str	q0, [sp]
  414648:	b.eq	41466c <wcrtomb@plt+0x11a0c>  // b.none
  41464c:	str	w0, [sp]
  414650:	mov	x3, sp
  414654:	mov	x2, #0xffffffffffffffff    	// #-1
  414658:	mov	w0, wzr
  41465c:	bl	4143c8 <wcrtomb@plt+0x11768>
  414660:	ldp	x29, x30, [sp, #64]
  414664:	add	sp, sp, #0x50
  414668:	ret
  41466c:	bl	402920 <abort@plt>
  414670:	sub	sp, sp, #0x50
  414674:	movi	v0.2d, #0x0
  414678:	cmp	w0, #0xa
  41467c:	stp	x29, x30, [sp, #64]
  414680:	add	x29, sp, #0x40
  414684:	str	xzr, [sp, #48]
  414688:	stp	q0, q0, [sp, #16]
  41468c:	str	q0, [sp]
  414690:	b.eq	4146b0 <wcrtomb@plt+0x11a50>  // b.none
  414694:	str	w0, [sp]
  414698:	mov	x3, sp
  41469c:	mov	w0, wzr
  4146a0:	bl	4143c8 <wcrtomb@plt+0x11768>
  4146a4:	ldp	x29, x30, [sp, #64]
  4146a8:	add	sp, sp, #0x50
  4146ac:	ret
  4146b0:	bl	402920 <abort@plt>
  4146b4:	sub	sp, sp, #0x50
  4146b8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4146bc:	add	x9, x9, #0x798
  4146c0:	ldp	q0, q1, [x9]
  4146c4:	ubfx	w10, w2, #5, #3
  4146c8:	mov	x11, sp
  4146cc:	mov	x8, x1
  4146d0:	stp	q0, q1, [sp]
  4146d4:	ldr	q0, [x9, #32]
  4146d8:	ldr	x9, [x9, #48]
  4146dc:	mov	x1, x0
  4146e0:	mov	x3, sp
  4146e4:	str	q0, [sp, #32]
  4146e8:	str	x9, [sp, #48]
  4146ec:	add	x9, x11, w10, uxtw #2
  4146f0:	ldr	w10, [x9, #8]
  4146f4:	mov	w0, wzr
  4146f8:	stp	x29, x30, [sp, #64]
  4146fc:	add	x29, sp, #0x40
  414700:	lsr	w11, w10, w2
  414704:	mvn	w11, w11
  414708:	and	w11, w11, #0x1
  41470c:	lsl	w11, w11, w2
  414710:	eor	w10, w11, w10
  414714:	mov	x2, x8
  414718:	str	w10, [x9, #8]
  41471c:	bl	4143c8 <wcrtomb@plt+0x11768>
  414720:	ldp	x29, x30, [sp, #64]
  414724:	add	sp, sp, #0x50
  414728:	ret
  41472c:	sub	sp, sp, #0x50
  414730:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  414734:	add	x9, x9, #0x798
  414738:	ldp	q0, q1, [x9]
  41473c:	ubfx	w10, w1, #5, #3
  414740:	mov	x11, sp
  414744:	mov	x8, x0
  414748:	stp	q0, q1, [sp]
  41474c:	ldr	q0, [x9, #32]
  414750:	ldr	x9, [x9, #48]
  414754:	mov	x3, sp
  414758:	mov	x2, #0xffffffffffffffff    	// #-1
  41475c:	str	q0, [sp, #32]
  414760:	str	x9, [sp, #48]
  414764:	add	x9, x11, w10, uxtw #2
  414768:	ldr	w10, [x9, #8]
  41476c:	mov	w0, wzr
  414770:	stp	x29, x30, [sp, #64]
  414774:	add	x29, sp, #0x40
  414778:	lsr	w11, w10, w1
  41477c:	mvn	w11, w11
  414780:	and	w11, w11, #0x1
  414784:	lsl	w11, w11, w1
  414788:	eor	w10, w11, w10
  41478c:	mov	x1, x8
  414790:	str	w10, [x9, #8]
  414794:	bl	4143c8 <wcrtomb@plt+0x11768>
  414798:	ldp	x29, x30, [sp, #64]
  41479c:	add	sp, sp, #0x50
  4147a0:	ret
  4147a4:	sub	sp, sp, #0x50
  4147a8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  4147ac:	add	x8, x8, #0x798
  4147b0:	ldp	q0, q1, [x8]
  4147b4:	ldr	q2, [x8, #32]
  4147b8:	ldr	x8, [x8, #48]
  4147bc:	mov	x1, x0
  4147c0:	stp	q0, q1, [sp]
  4147c4:	ldr	w9, [sp, #12]
  4147c8:	str	x8, [sp, #48]
  4147cc:	mov	x3, sp
  4147d0:	mov	x2, #0xffffffffffffffff    	// #-1
  4147d4:	orr	w8, w9, #0x4000000
  4147d8:	mov	w0, wzr
  4147dc:	stp	x29, x30, [sp, #64]
  4147e0:	add	x29, sp, #0x40
  4147e4:	str	q2, [sp, #32]
  4147e8:	str	w8, [sp, #12]
  4147ec:	bl	4143c8 <wcrtomb@plt+0x11768>
  4147f0:	ldp	x29, x30, [sp, #64]
  4147f4:	add	sp, sp, #0x50
  4147f8:	ret
  4147fc:	sub	sp, sp, #0x50
  414800:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  414804:	add	x8, x8, #0x798
  414808:	ldp	q0, q1, [x8]
  41480c:	ldr	q2, [x8, #32]
  414810:	ldr	x8, [x8, #48]
  414814:	mov	x2, x1
  414818:	stp	q0, q1, [sp]
  41481c:	ldr	w9, [sp, #12]
  414820:	mov	x1, x0
  414824:	str	x8, [sp, #48]
  414828:	mov	x3, sp
  41482c:	orr	w8, w9, #0x4000000
  414830:	mov	w0, wzr
  414834:	stp	x29, x30, [sp, #64]
  414838:	add	x29, sp, #0x40
  41483c:	str	q2, [sp, #32]
  414840:	str	w8, [sp, #12]
  414844:	bl	4143c8 <wcrtomb@plt+0x11768>
  414848:	ldp	x29, x30, [sp, #64]
  41484c:	add	sp, sp, #0x50
  414850:	ret
  414854:	sub	sp, sp, #0x80
  414858:	movi	v0.2d, #0x0
  41485c:	cmp	w1, #0xa
  414860:	stp	x29, x30, [sp, #112]
  414864:	add	x29, sp, #0x70
  414868:	str	wzr, [sp, #48]
  41486c:	stp	q0, q0, [sp, #16]
  414870:	str	q0, [sp]
  414874:	b.eq	4148c4 <wcrtomb@plt+0x11c64>  // b.none
  414878:	ldp	q0, q1, [sp]
  41487c:	ldr	w9, [sp, #48]
  414880:	ldr	q2, [sp, #32]
  414884:	mov	x8, x2
  414888:	stur	q0, [sp, #60]
  41488c:	ldr	w10, [sp, #68]
  414890:	str	w1, [sp, #56]
  414894:	str	w9, [sp, #108]
  414898:	add	x3, sp, #0x38
  41489c:	orr	w9, w10, #0x4000000
  4148a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4148a4:	mov	x1, x8
  4148a8:	stur	q1, [sp, #76]
  4148ac:	stur	q2, [sp, #92]
  4148b0:	str	w9, [sp, #68]
  4148b4:	bl	4143c8 <wcrtomb@plt+0x11768>
  4148b8:	ldp	x29, x30, [sp, #112]
  4148bc:	add	sp, sp, #0x80
  4148c0:	ret
  4148c4:	bl	402920 <abort@plt>
  4148c8:	sub	sp, sp, #0x50
  4148cc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  4148d0:	add	x9, x9, #0x798
  4148d4:	ldp	q0, q1, [x9]
  4148d8:	ldr	q2, [x9, #32]
  4148dc:	ldr	x9, [x9, #48]
  4148e0:	mov	w10, #0xa                   	// #10
  4148e4:	stp	x29, x30, [sp, #64]
  4148e8:	add	x29, sp, #0x40
  4148ec:	stp	q0, q1, [sp]
  4148f0:	str	q2, [sp, #32]
  4148f4:	str	x9, [sp, #48]
  4148f8:	str	w10, [sp]
  4148fc:	cbz	x1, 414928 <wcrtomb@plt+0x11cc8>
  414900:	cbz	x2, 414928 <wcrtomb@plt+0x11cc8>
  414904:	mov	x8, x3
  414908:	stp	x1, x2, [sp, #40]
  41490c:	mov	x3, sp
  414910:	mov	x2, #0xffffffffffffffff    	// #-1
  414914:	mov	x1, x8
  414918:	bl	4143c8 <wcrtomb@plt+0x11768>
  41491c:	ldp	x29, x30, [sp, #64]
  414920:	add	sp, sp, #0x50
  414924:	ret
  414928:	bl	402920 <abort@plt>
  41492c:	sub	sp, sp, #0x50
  414930:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  414934:	add	x9, x9, #0x798
  414938:	ldp	q0, q1, [x9]
  41493c:	ldr	x10, [x9, #48]
  414940:	stp	x29, x30, [sp, #64]
  414944:	add	x29, sp, #0x40
  414948:	stp	q0, q1, [sp]
  41494c:	ldr	q0, [x9, #32]
  414950:	mov	w9, #0xa                   	// #10
  414954:	str	x10, [sp, #48]
  414958:	str	w9, [sp]
  41495c:	str	q0, [sp, #32]
  414960:	cbz	x1, 41498c <wcrtomb@plt+0x11d2c>
  414964:	cbz	x2, 41498c <wcrtomb@plt+0x11d2c>
  414968:	mov	x8, x3
  41496c:	stp	x1, x2, [sp, #40]
  414970:	mov	x3, sp
  414974:	mov	x1, x8
  414978:	mov	x2, x4
  41497c:	bl	4143c8 <wcrtomb@plt+0x11768>
  414980:	ldp	x29, x30, [sp, #64]
  414984:	add	sp, sp, #0x50
  414988:	ret
  41498c:	bl	402920 <abort@plt>
  414990:	sub	sp, sp, #0x50
  414994:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  414998:	add	x9, x9, #0x798
  41499c:	ldp	q0, q1, [x9]
  4149a0:	ldr	q2, [x9, #32]
  4149a4:	ldr	x9, [x9, #48]
  4149a8:	mov	w10, #0xa                   	// #10
  4149ac:	stp	x29, x30, [sp, #64]
  4149b0:	add	x29, sp, #0x40
  4149b4:	stp	q0, q1, [sp]
  4149b8:	str	q2, [sp, #32]
  4149bc:	str	x9, [sp, #48]
  4149c0:	str	w10, [sp]
  4149c4:	cbz	x0, 4149f4 <wcrtomb@plt+0x11d94>
  4149c8:	cbz	x1, 4149f4 <wcrtomb@plt+0x11d94>
  4149cc:	mov	x8, x2
  4149d0:	stp	x0, x1, [sp, #40]
  4149d4:	mov	x3, sp
  4149d8:	mov	x2, #0xffffffffffffffff    	// #-1
  4149dc:	mov	w0, wzr
  4149e0:	mov	x1, x8
  4149e4:	bl	4143c8 <wcrtomb@plt+0x11768>
  4149e8:	ldp	x29, x30, [sp, #64]
  4149ec:	add	sp, sp, #0x50
  4149f0:	ret
  4149f4:	bl	402920 <abort@plt>
  4149f8:	sub	sp, sp, #0x50
  4149fc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  414a00:	add	x9, x9, #0x798
  414a04:	ldp	q0, q1, [x9]
  414a08:	ldr	q2, [x9, #32]
  414a0c:	ldr	x9, [x9, #48]
  414a10:	mov	w10, #0xa                   	// #10
  414a14:	stp	x29, x30, [sp, #64]
  414a18:	add	x29, sp, #0x40
  414a1c:	stp	q0, q1, [sp]
  414a20:	str	q2, [sp, #32]
  414a24:	str	x9, [sp, #48]
  414a28:	str	w10, [sp]
  414a2c:	cbz	x0, 414a5c <wcrtomb@plt+0x11dfc>
  414a30:	cbz	x1, 414a5c <wcrtomb@plt+0x11dfc>
  414a34:	mov	x8, x3
  414a38:	stp	x0, x1, [sp, #40]
  414a3c:	mov	x3, sp
  414a40:	mov	w0, wzr
  414a44:	mov	x1, x2
  414a48:	mov	x2, x8
  414a4c:	bl	4143c8 <wcrtomb@plt+0x11768>
  414a50:	ldp	x29, x30, [sp, #64]
  414a54:	add	sp, sp, #0x50
  414a58:	ret
  414a5c:	bl	402920 <abort@plt>
  414a60:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414a64:	add	x3, x3, #0x490
  414a68:	b	4143c8 <wcrtomb@plt+0x11768>
  414a6c:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414a70:	mov	x2, x1
  414a74:	add	x3, x3, #0x490
  414a78:	mov	x1, x0
  414a7c:	mov	w0, wzr
  414a80:	b	4143c8 <wcrtomb@plt+0x11768>
  414a84:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414a88:	add	x3, x3, #0x490
  414a8c:	mov	x2, #0xffffffffffffffff    	// #-1
  414a90:	b	4143c8 <wcrtomb@plt+0x11768>
  414a94:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x235a8>
  414a98:	add	x3, x3, #0x490
  414a9c:	mov	x2, #0xffffffffffffffff    	// #-1
  414aa0:	mov	x1, x0
  414aa4:	mov	w0, wzr
  414aa8:	b	4143c8 <wcrtomb@plt+0x11768>
  414aac:	stp	x29, x30, [sp, #-32]!
  414ab0:	stp	x20, x19, [sp, #16]
  414ab4:	mov	x20, x0
  414ab8:	mov	w19, w1
  414abc:	mov	w2, #0x5                   	// #5
  414ac0:	mov	x0, xzr
  414ac4:	mov	x1, x20
  414ac8:	mov	x29, sp
  414acc:	bl	402b40 <dcgettext@plt>
  414ad0:	cmp	x0, x20
  414ad4:	b.ne	414bb8 <wcrtomb@plt+0x11f58>  // b.any
  414ad8:	bl	41322c <wcrtomb@plt+0x105cc>
  414adc:	ldrb	w8, [x0]
  414ae0:	and	w8, w8, #0xffffffdf
  414ae4:	cmp	w8, #0x47
  414ae8:	b.eq	414b4c <wcrtomb@plt+0x11eec>  // b.none
  414aec:	cmp	w8, #0x55
  414af0:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414af4:	ldrb	w8, [x0, #1]
  414af8:	and	w8, w8, #0xffffffdf
  414afc:	cmp	w8, #0x54
  414b00:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b04:	ldrb	w8, [x0, #2]
  414b08:	and	w8, w8, #0xffffffdf
  414b0c:	cmp	w8, #0x46
  414b10:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b14:	ldrb	w8, [x0, #3]
  414b18:	cmp	w8, #0x2d
  414b1c:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b20:	ldrb	w8, [x0, #4]
  414b24:	cmp	w8, #0x38
  414b28:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b2c:	ldrb	w8, [x0, #5]
  414b30:	cbnz	w8, 414ba0 <wcrtomb@plt+0x11f40>
  414b34:	ldrb	w8, [x20]
  414b38:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  414b3c:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  414b40:	add	x9, x9, #0x712
  414b44:	add	x10, x10, #0x70e
  414b48:	b	414bd8 <wcrtomb@plt+0x11f78>
  414b4c:	ldrb	w8, [x0, #1]
  414b50:	and	w8, w8, #0xffffffdf
  414b54:	cmp	w8, #0x42
  414b58:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b5c:	ldrb	w8, [x0, #2]
  414b60:	cmp	w8, #0x31
  414b64:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b68:	ldrb	w8, [x0, #3]
  414b6c:	cmp	w8, #0x38
  414b70:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b74:	ldrb	w8, [x0, #4]
  414b78:	cmp	w8, #0x30
  414b7c:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b80:	ldrb	w8, [x0, #5]
  414b84:	cmp	w8, #0x33
  414b88:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b8c:	ldrb	w8, [x0, #6]
  414b90:	cmp	w8, #0x30
  414b94:	b.ne	414ba0 <wcrtomb@plt+0x11f40>  // b.any
  414b98:	ldrb	w8, [x0, #7]
  414b9c:	cbz	w8, 414bc4 <wcrtomb@plt+0x11f64>
  414ba0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x105a8>
  414ba4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  414ba8:	add	x8, x8, #0x180
  414bac:	add	x9, x9, #0x39c
  414bb0:	cmp	w19, #0x9
  414bb4:	csel	x0, x9, x8, eq  // eq = none
  414bb8:	ldp	x20, x19, [sp, #16]
  414bbc:	ldp	x29, x30, [sp], #32
  414bc0:	ret
  414bc4:	ldrb	w8, [x20]
  414bc8:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  414bcc:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  414bd0:	add	x9, x9, #0x71a
  414bd4:	add	x10, x10, #0x716
  414bd8:	cmp	w8, #0x60
  414bdc:	csel	x0, x10, x9, eq  // eq = none
  414be0:	b	414bb8 <wcrtomb@plt+0x11f58>
  414be4:	sub	sp, sp, #0x50
  414be8:	stp	x22, x21, [sp, #48]
  414bec:	stp	x20, x19, [sp, #64]
  414bf0:	mov	x21, x5
  414bf4:	mov	x20, x4
  414bf8:	mov	x5, x3
  414bfc:	mov	x4, x2
  414c00:	mov	x19, x0
  414c04:	stp	x29, x30, [sp, #32]
  414c08:	add	x29, sp, #0x20
  414c0c:	cbz	x1, 414c2c <wcrtomb@plt+0x11fcc>
  414c10:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  414c14:	mov	x3, x1
  414c18:	add	x2, x2, #0x727
  414c1c:	mov	w1, #0x1                   	// #1
  414c20:	mov	x0, x19
  414c24:	bl	4029c0 <__fprintf_chk@plt>
  414c28:	b	414c48 <wcrtomb@plt+0x11fe8>
  414c2c:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  414c30:	add	x2, x2, #0x733
  414c34:	mov	w1, #0x1                   	// #1
  414c38:	mov	x0, x19
  414c3c:	mov	x3, x4
  414c40:	mov	x4, x5
  414c44:	bl	4029c0 <__fprintf_chk@plt>
  414c48:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414c4c:	add	x1, x1, #0x73a
  414c50:	mov	w2, #0x5                   	// #5
  414c54:	mov	x0, xzr
  414c58:	bl	402b40 <dcgettext@plt>
  414c5c:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  414c60:	mov	x3, x0
  414c64:	add	x2, x2, #0xa14
  414c68:	mov	w1, #0x1                   	// #1
  414c6c:	mov	w4, #0x7e4                 	// #2020
  414c70:	mov	x0, x19
  414c74:	bl	4029c0 <__fprintf_chk@plt>
  414c78:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x105a8>
  414c7c:	add	x22, x22, #0x7c2
  414c80:	mov	x0, x22
  414c84:	mov	x1, x19
  414c88:	bl	402b50 <fputs_unlocked@plt>
  414c8c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414c90:	add	x1, x1, #0x73e
  414c94:	mov	w2, #0x5                   	// #5
  414c98:	mov	x0, xzr
  414c9c:	bl	402b40 <dcgettext@plt>
  414ca0:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  414ca4:	mov	x2, x0
  414ca8:	add	x3, x3, #0x7e9
  414cac:	mov	w1, #0x1                   	// #1
  414cb0:	mov	x0, x19
  414cb4:	bl	4029c0 <__fprintf_chk@plt>
  414cb8:	mov	x0, x22
  414cbc:	mov	x1, x19
  414cc0:	bl	402b50 <fputs_unlocked@plt>
  414cc4:	cmp	x21, #0x9
  414cc8:	b.hi	414d1c <wcrtomb@plt+0x120bc>  // b.pmore
  414ccc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  414cd0:	add	x8, x8, #0x71d
  414cd4:	adr	x9, 414ce4 <wcrtomb@plt+0x12084>
  414cd8:	ldrb	w10, [x8, x21]
  414cdc:	add	x9, x9, x10, lsl #2
  414ce0:	br	x9
  414ce4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414ce8:	add	x1, x1, #0x80b
  414cec:	mov	w2, #0x5                   	// #5
  414cf0:	mov	x0, xzr
  414cf4:	bl	402b40 <dcgettext@plt>
  414cf8:	ldr	x3, [x20]
  414cfc:	mov	x2, x0
  414d00:	mov	x0, x19
  414d04:	ldp	x20, x19, [sp, #64]
  414d08:	ldp	x22, x21, [sp, #48]
  414d0c:	ldp	x29, x30, [sp, #32]
  414d10:	mov	w1, #0x1                   	// #1
  414d14:	add	sp, sp, #0x50
  414d18:	b	4029c0 <__fprintf_chk@plt>
  414d1c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414d20:	add	x1, x1, #0x94a
  414d24:	b	414e80 <wcrtomb@plt+0x12220>
  414d28:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414d2c:	add	x1, x1, #0x81b
  414d30:	mov	w2, #0x5                   	// #5
  414d34:	mov	x0, xzr
  414d38:	bl	402b40 <dcgettext@plt>
  414d3c:	ldp	x3, x4, [x20]
  414d40:	mov	x2, x0
  414d44:	mov	x0, x19
  414d48:	ldp	x20, x19, [sp, #64]
  414d4c:	ldp	x22, x21, [sp, #48]
  414d50:	ldp	x29, x30, [sp, #32]
  414d54:	mov	w1, #0x1                   	// #1
  414d58:	add	sp, sp, #0x50
  414d5c:	b	4029c0 <__fprintf_chk@plt>
  414d60:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414d64:	add	x1, x1, #0x832
  414d68:	mov	w2, #0x5                   	// #5
  414d6c:	mov	x0, xzr
  414d70:	bl	402b40 <dcgettext@plt>
  414d74:	ldp	x3, x4, [x20]
  414d78:	ldr	x5, [x20, #16]
  414d7c:	mov	x2, x0
  414d80:	mov	x0, x19
  414d84:	ldp	x20, x19, [sp, #64]
  414d88:	ldp	x22, x21, [sp, #48]
  414d8c:	ldp	x29, x30, [sp, #32]
  414d90:	mov	w1, #0x1                   	// #1
  414d94:	add	sp, sp, #0x50
  414d98:	b	4029c0 <__fprintf_chk@plt>
  414d9c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414da0:	add	x1, x1, #0x84e
  414da4:	mov	w2, #0x5                   	// #5
  414da8:	mov	x0, xzr
  414dac:	bl	402b40 <dcgettext@plt>
  414db0:	ldp	x3, x4, [x20]
  414db4:	ldp	x5, x6, [x20, #16]
  414db8:	mov	x2, x0
  414dbc:	mov	x0, x19
  414dc0:	ldp	x20, x19, [sp, #64]
  414dc4:	ldp	x22, x21, [sp, #48]
  414dc8:	ldp	x29, x30, [sp, #32]
  414dcc:	mov	w1, #0x1                   	// #1
  414dd0:	add	sp, sp, #0x50
  414dd4:	b	4029c0 <__fprintf_chk@plt>
  414dd8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414ddc:	add	x1, x1, #0x86e
  414de0:	mov	w2, #0x5                   	// #5
  414de4:	mov	x0, xzr
  414de8:	bl	402b40 <dcgettext@plt>
  414dec:	ldp	x3, x4, [x20]
  414df0:	ldp	x5, x6, [x20, #16]
  414df4:	ldr	x7, [x20, #32]
  414df8:	mov	x2, x0
  414dfc:	mov	x0, x19
  414e00:	ldp	x20, x19, [sp, #64]
  414e04:	ldp	x22, x21, [sp, #48]
  414e08:	ldp	x29, x30, [sp, #32]
  414e0c:	mov	w1, #0x1                   	// #1
  414e10:	add	sp, sp, #0x50
  414e14:	b	4029c0 <__fprintf_chk@plt>
  414e18:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414e1c:	add	x1, x1, #0x892
  414e20:	mov	w2, #0x5                   	// #5
  414e24:	mov	x0, xzr
  414e28:	bl	402b40 <dcgettext@plt>
  414e2c:	ldp	x3, x4, [x20]
  414e30:	ldp	x5, x6, [x20, #16]
  414e34:	ldp	x7, x8, [x20, #32]
  414e38:	mov	x2, x0
  414e3c:	b	414e6c <wcrtomb@plt+0x1220c>
  414e40:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414e44:	add	x1, x1, #0x8ba
  414e48:	mov	w2, #0x5                   	// #5
  414e4c:	mov	x0, xzr
  414e50:	bl	402b40 <dcgettext@plt>
  414e54:	ldr	x9, [x20, #48]
  414e58:	ldp	x3, x4, [x20]
  414e5c:	ldp	x5, x6, [x20, #16]
  414e60:	ldp	x7, x8, [x20, #32]
  414e64:	mov	x2, x0
  414e68:	str	x9, [sp, #8]
  414e6c:	mov	w1, #0x1                   	// #1
  414e70:	str	x8, [sp]
  414e74:	b	414ee4 <wcrtomb@plt+0x12284>
  414e78:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414e7c:	add	x1, x1, #0x916
  414e80:	mov	w2, #0x5                   	// #5
  414e84:	mov	x0, xzr
  414e88:	bl	402b40 <dcgettext@plt>
  414e8c:	ldp	x8, x9, [x20, #56]
  414e90:	ldp	x3, x4, [x20]
  414e94:	ldp	x5, x6, [x20, #16]
  414e98:	ldr	x7, [x20, #32]
  414e9c:	ldur	q0, [x20, #40]
  414ea0:	mov	x2, x0
  414ea4:	str	x9, [sp, #24]
  414ea8:	b	414ed8 <wcrtomb@plt+0x12278>
  414eac:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  414eb0:	add	x1, x1, #0x8e6
  414eb4:	mov	w2, #0x5                   	// #5
  414eb8:	mov	x0, xzr
  414ebc:	bl	402b40 <dcgettext@plt>
  414ec0:	ldp	x3, x4, [x20]
  414ec4:	ldp	x5, x6, [x20, #16]
  414ec8:	ldr	x7, [x20, #32]
  414ecc:	ldur	q0, [x20, #40]
  414ed0:	ldr	x8, [x20, #56]
  414ed4:	mov	x2, x0
  414ed8:	str	x8, [sp, #16]
  414edc:	mov	w1, #0x1                   	// #1
  414ee0:	str	q0, [sp]
  414ee4:	mov	x0, x19
  414ee8:	bl	4029c0 <__fprintf_chk@plt>
  414eec:	ldp	x20, x19, [sp, #64]
  414ef0:	ldp	x22, x21, [sp, #48]
  414ef4:	ldp	x29, x30, [sp, #32]
  414ef8:	add	sp, sp, #0x50
  414efc:	ret
  414f00:	mov	x8, xzr
  414f04:	ldr	x9, [x4, x8, lsl #3]
  414f08:	add	x8, x8, #0x1
  414f0c:	cbnz	x9, 414f04 <wcrtomb@plt+0x122a4>
  414f10:	sub	x5, x8, #0x1
  414f14:	b	414be4 <wcrtomb@plt+0x11f84>
  414f18:	sub	sp, sp, #0x60
  414f1c:	stp	x29, x30, [sp, #80]
  414f20:	ldr	w9, [x4, #24]
  414f24:	add	x29, sp, #0x50
  414f28:	mov	w8, w9
  414f2c:	tbz	w9, #31, 414f50 <wcrtomb@plt+0x122f0>
  414f30:	add	w8, w9, #0x8
  414f34:	cmn	w9, #0x8
  414f38:	str	w8, [x4, #24]
  414f3c:	b.gt	414f50 <wcrtomb@plt+0x122f0>
  414f40:	ldr	x10, [x4, #8]
  414f44:	sxtw	x9, w9
  414f48:	add	x9, x10, x9
  414f4c:	b	414f5c <wcrtomb@plt+0x122fc>
  414f50:	ldr	x9, [x4]
  414f54:	add	x10, x9, #0x8
  414f58:	str	x10, [x4]
  414f5c:	ldr	x9, [x9]
  414f60:	str	x9, [sp]
  414f64:	cbz	x9, 414f74 <wcrtomb@plt+0x12314>
  414f68:	tbnz	w8, #31, 414f7c <wcrtomb@plt+0x1231c>
  414f6c:	mov	w9, w8
  414f70:	b	414f98 <wcrtomb@plt+0x12338>
  414f74:	mov	x5, xzr
  414f78:	b	4151f0 <wcrtomb@plt+0x12590>
  414f7c:	add	w9, w8, #0x8
  414f80:	cmn	w8, #0x8
  414f84:	str	w9, [x4, #24]
  414f88:	b.gt	414f98 <wcrtomb@plt+0x12338>
  414f8c:	ldr	x10, [x4, #8]
  414f90:	add	x8, x10, w8, sxtw
  414f94:	b	414fa4 <wcrtomb@plt+0x12344>
  414f98:	ldr	x8, [x4]
  414f9c:	add	x10, x8, #0x8
  414fa0:	str	x10, [x4]
  414fa4:	ldr	x8, [x8]
  414fa8:	str	x8, [sp, #8]
  414fac:	cbz	x8, 414fbc <wcrtomb@plt+0x1235c>
  414fb0:	tbnz	w9, #31, 414fc4 <wcrtomb@plt+0x12364>
  414fb4:	mov	w8, w9
  414fb8:	b	414fe0 <wcrtomb@plt+0x12380>
  414fbc:	mov	w5, #0x1                   	// #1
  414fc0:	b	4151f0 <wcrtomb@plt+0x12590>
  414fc4:	add	w8, w9, #0x8
  414fc8:	cmn	w9, #0x8
  414fcc:	str	w8, [x4, #24]
  414fd0:	b.gt	414fe0 <wcrtomb@plt+0x12380>
  414fd4:	ldr	x10, [x4, #8]
  414fd8:	add	x9, x10, w9, sxtw
  414fdc:	b	414fec <wcrtomb@plt+0x1238c>
  414fe0:	ldr	x9, [x4]
  414fe4:	add	x10, x9, #0x8
  414fe8:	str	x10, [x4]
  414fec:	ldr	x9, [x9]
  414ff0:	str	x9, [sp, #16]
  414ff4:	cbz	x9, 415004 <wcrtomb@plt+0x123a4>
  414ff8:	tbnz	w8, #31, 41500c <wcrtomb@plt+0x123ac>
  414ffc:	mov	w9, w8
  415000:	b	415028 <wcrtomb@plt+0x123c8>
  415004:	mov	w5, #0x2                   	// #2
  415008:	b	4151f0 <wcrtomb@plt+0x12590>
  41500c:	add	w9, w8, #0x8
  415010:	cmn	w8, #0x8
  415014:	str	w9, [x4, #24]
  415018:	b.gt	415028 <wcrtomb@plt+0x123c8>
  41501c:	ldr	x10, [x4, #8]
  415020:	add	x8, x10, w8, sxtw
  415024:	b	415034 <wcrtomb@plt+0x123d4>
  415028:	ldr	x8, [x4]
  41502c:	add	x10, x8, #0x8
  415030:	str	x10, [x4]
  415034:	ldr	x8, [x8]
  415038:	str	x8, [sp, #24]
  41503c:	cbz	x8, 41504c <wcrtomb@plt+0x123ec>
  415040:	tbnz	w9, #31, 415054 <wcrtomb@plt+0x123f4>
  415044:	mov	w8, w9
  415048:	b	415070 <wcrtomb@plt+0x12410>
  41504c:	mov	w5, #0x3                   	// #3
  415050:	b	4151f0 <wcrtomb@plt+0x12590>
  415054:	add	w8, w9, #0x8
  415058:	cmn	w9, #0x8
  41505c:	str	w8, [x4, #24]
  415060:	b.gt	415070 <wcrtomb@plt+0x12410>
  415064:	ldr	x10, [x4, #8]
  415068:	add	x9, x10, w9, sxtw
  41506c:	b	41507c <wcrtomb@plt+0x1241c>
  415070:	ldr	x9, [x4]
  415074:	add	x10, x9, #0x8
  415078:	str	x10, [x4]
  41507c:	ldr	x9, [x9]
  415080:	str	x9, [sp, #32]
  415084:	cbz	x9, 415094 <wcrtomb@plt+0x12434>
  415088:	tbnz	w8, #31, 41509c <wcrtomb@plt+0x1243c>
  41508c:	mov	w9, w8
  415090:	b	4150b8 <wcrtomb@plt+0x12458>
  415094:	mov	w5, #0x4                   	// #4
  415098:	b	4151f0 <wcrtomb@plt+0x12590>
  41509c:	add	w9, w8, #0x8
  4150a0:	cmn	w8, #0x8
  4150a4:	str	w9, [x4, #24]
  4150a8:	b.gt	4150b8 <wcrtomb@plt+0x12458>
  4150ac:	ldr	x10, [x4, #8]
  4150b0:	add	x8, x10, w8, sxtw
  4150b4:	b	4150c4 <wcrtomb@plt+0x12464>
  4150b8:	ldr	x8, [x4]
  4150bc:	add	x10, x8, #0x8
  4150c0:	str	x10, [x4]
  4150c4:	ldr	x8, [x8]
  4150c8:	str	x8, [sp, #40]
  4150cc:	cbz	x8, 4150dc <wcrtomb@plt+0x1247c>
  4150d0:	tbnz	w9, #31, 4150e4 <wcrtomb@plt+0x12484>
  4150d4:	mov	w8, w9
  4150d8:	b	415100 <wcrtomb@plt+0x124a0>
  4150dc:	mov	w5, #0x5                   	// #5
  4150e0:	b	4151f0 <wcrtomb@plt+0x12590>
  4150e4:	add	w8, w9, #0x8
  4150e8:	cmn	w9, #0x8
  4150ec:	str	w8, [x4, #24]
  4150f0:	b.gt	415100 <wcrtomb@plt+0x124a0>
  4150f4:	ldr	x10, [x4, #8]
  4150f8:	add	x9, x10, w9, sxtw
  4150fc:	b	41510c <wcrtomb@plt+0x124ac>
  415100:	ldr	x9, [x4]
  415104:	add	x10, x9, #0x8
  415108:	str	x10, [x4]
  41510c:	ldr	x9, [x9]
  415110:	str	x9, [sp, #48]
  415114:	cbz	x9, 415124 <wcrtomb@plt+0x124c4>
  415118:	tbnz	w8, #31, 41512c <wcrtomb@plt+0x124cc>
  41511c:	mov	w9, w8
  415120:	b	415148 <wcrtomb@plt+0x124e8>
  415124:	mov	w5, #0x6                   	// #6
  415128:	b	4151f0 <wcrtomb@plt+0x12590>
  41512c:	add	w9, w8, #0x8
  415130:	cmn	w8, #0x8
  415134:	str	w9, [x4, #24]
  415138:	b.gt	415148 <wcrtomb@plt+0x124e8>
  41513c:	ldr	x10, [x4, #8]
  415140:	add	x8, x10, w8, sxtw
  415144:	b	415154 <wcrtomb@plt+0x124f4>
  415148:	ldr	x8, [x4]
  41514c:	add	x10, x8, #0x8
  415150:	str	x10, [x4]
  415154:	ldr	x8, [x8]
  415158:	str	x8, [sp, #56]
  41515c:	cbz	x8, 41516c <wcrtomb@plt+0x1250c>
  415160:	tbnz	w9, #31, 415174 <wcrtomb@plt+0x12514>
  415164:	mov	w8, w9
  415168:	b	415190 <wcrtomb@plt+0x12530>
  41516c:	mov	w5, #0x7                   	// #7
  415170:	b	4151f0 <wcrtomb@plt+0x12590>
  415174:	add	w8, w9, #0x8
  415178:	cmn	w9, #0x8
  41517c:	str	w8, [x4, #24]
  415180:	b.gt	415190 <wcrtomb@plt+0x12530>
  415184:	ldr	x10, [x4, #8]
  415188:	add	x9, x10, w9, sxtw
  41518c:	b	41519c <wcrtomb@plt+0x1253c>
  415190:	ldr	x9, [x4]
  415194:	add	x10, x9, #0x8
  415198:	str	x10, [x4]
  41519c:	ldr	x9, [x9]
  4151a0:	str	x9, [sp, #64]
  4151a4:	cbz	x9, 4151ec <wcrtomb@plt+0x1258c>
  4151a8:	tbz	w8, #31, 4151c8 <wcrtomb@plt+0x12568>
  4151ac:	add	w9, w8, #0x8
  4151b0:	cmn	w8, #0x8
  4151b4:	str	w9, [x4, #24]
  4151b8:	b.gt	4151c8 <wcrtomb@plt+0x12568>
  4151bc:	ldr	x9, [x4, #8]
  4151c0:	add	x8, x9, w8, sxtw
  4151c4:	b	4151d4 <wcrtomb@plt+0x12574>
  4151c8:	ldr	x8, [x4]
  4151cc:	add	x9, x8, #0x8
  4151d0:	str	x9, [x4]
  4151d4:	ldr	x8, [x8]
  4151d8:	str	x8, [sp, #72]
  4151dc:	cmp	x8, #0x0
  4151e0:	mov	w8, #0x9                   	// #9
  4151e4:	cinc	x5, x8, ne  // ne = any
  4151e8:	b	4151f0 <wcrtomb@plt+0x12590>
  4151ec:	mov	w5, #0x8                   	// #8
  4151f0:	mov	x4, sp
  4151f4:	bl	414be4 <wcrtomb@plt+0x11f84>
  4151f8:	ldp	x29, x30, [sp, #80]
  4151fc:	add	sp, sp, #0x60
  415200:	ret
  415204:	sub	sp, sp, #0xf0
  415208:	stp	x29, x30, [sp, #224]
  41520c:	add	x29, sp, #0xe0
  415210:	mov	x8, #0xffffffffffffffe0    	// #-32
  415214:	mov	x9, sp
  415218:	sub	x10, x29, #0x60
  41521c:	movk	x8, #0xff80, lsl #32
  415220:	add	x11, x29, #0x10
  415224:	add	x9, x9, #0x80
  415228:	add	x10, x10, #0x20
  41522c:	stp	x9, x8, [x29, #-16]
  415230:	stp	x11, x10, [x29, #-32]
  415234:	stp	x4, x5, [x29, #-96]
  415238:	stp	x6, x7, [x29, #-80]
  41523c:	stp	q0, q1, [sp]
  415240:	ldp	q0, q1, [x29, #-32]
  415244:	sub	x4, x29, #0x40
  415248:	stp	q2, q3, [sp, #32]
  41524c:	stp	q4, q5, [sp, #64]
  415250:	stp	q6, q7, [sp, #96]
  415254:	stp	q0, q1, [x29, #-64]
  415258:	bl	414f18 <wcrtomb@plt+0x122b8>
  41525c:	ldp	x29, x30, [sp, #224]
  415260:	add	sp, sp, #0xf0
  415264:	ret
  415268:	stp	x29, x30, [sp, #-16]!
  41526c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415270:	ldr	x1, [x8, #1272]
  415274:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x105a8>
  415278:	add	x0, x0, #0x7c2
  41527c:	mov	x29, sp
  415280:	bl	402b50 <fputs_unlocked@plt>
  415284:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  415288:	add	x1, x1, #0x986
  41528c:	mov	w2, #0x5                   	// #5
  415290:	mov	x0, xzr
  415294:	bl	402b40 <dcgettext@plt>
  415298:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  41529c:	mov	x1, x0
  4152a0:	add	x2, x2, #0x76b
  4152a4:	mov	w0, #0x1                   	// #1
  4152a8:	bl	4027e0 <__printf_chk@plt>
  4152ac:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4152b0:	add	x1, x1, #0x99a
  4152b4:	mov	w2, #0x5                   	// #5
  4152b8:	mov	x0, xzr
  4152bc:	bl	402b40 <dcgettext@plt>
  4152c0:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  4152c4:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  4152c8:	mov	x1, x0
  4152cc:	add	x2, x2, #0x64d
  4152d0:	add	x3, x3, #0x9ae
  4152d4:	mov	w0, #0x1                   	// #1
  4152d8:	bl	4027e0 <__printf_chk@plt>
  4152dc:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  4152e0:	add	x1, x1, #0x9d0
  4152e4:	mov	w2, #0x5                   	// #5
  4152e8:	mov	x0, xzr
  4152ec:	bl	402b40 <dcgettext@plt>
  4152f0:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  4152f4:	mov	x1, x0
  4152f8:	add	x2, x2, #0x9f7
  4152fc:	mov	w0, #0x1                   	// #1
  415300:	ldp	x29, x30, [sp], #16
  415304:	b	4027e0 <__printf_chk@plt>
  415308:	stp	x29, x30, [sp, #-32]!
  41530c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  415310:	udiv	x8, x8, x1
  415314:	cmp	x8, x0
  415318:	str	x19, [sp, #16]
  41531c:	mov	x29, sp
  415320:	b.cc	415344 <wcrtomb@plt+0x126e4>  // b.lo, b.ul, b.last
  415324:	mul	x19, x1, x0
  415328:	mov	x0, x19
  41532c:	bl	402730 <malloc@plt>
  415330:	cbz	x19, 415338 <wcrtomb@plt+0x126d8>
  415334:	cbz	x0, 415344 <wcrtomb@plt+0x126e4>
  415338:	ldr	x19, [sp, #16]
  41533c:	ldp	x29, x30, [sp], #32
  415340:	ret
  415344:	bl	41563c <wcrtomb@plt+0x129dc>
  415348:	stp	x29, x30, [sp, #-32]!
  41534c:	str	x19, [sp, #16]
  415350:	mov	x29, sp
  415354:	mov	x19, x0
  415358:	bl	402730 <malloc@plt>
  41535c:	cbz	x19, 415364 <wcrtomb@plt+0x12704>
  415360:	cbz	x0, 415370 <wcrtomb@plt+0x12710>
  415364:	ldr	x19, [sp, #16]
  415368:	ldp	x29, x30, [sp], #32
  41536c:	ret
  415370:	bl	41563c <wcrtomb@plt+0x129dc>
  415374:	stp	x29, x30, [sp, #-32]!
  415378:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41537c:	udiv	x8, x8, x2
  415380:	cmp	x8, x1
  415384:	str	x19, [sp, #16]
  415388:	mov	x29, sp
  41538c:	b.cc	4153c4 <wcrtomb@plt+0x12764>  // b.lo, b.ul, b.last
  415390:	mul	x19, x2, x1
  415394:	cbz	x0, 4153a8 <wcrtomb@plt+0x12748>
  415398:	cbnz	x19, 4153a8 <wcrtomb@plt+0x12748>
  41539c:	bl	402a10 <free@plt>
  4153a0:	mov	x0, xzr
  4153a4:	b	4153b8 <wcrtomb@plt+0x12758>
  4153a8:	mov	x1, x19
  4153ac:	bl	402870 <realloc@plt>
  4153b0:	cbz	x19, 4153b8 <wcrtomb@plt+0x12758>
  4153b4:	cbz	x0, 4153c4 <wcrtomb@plt+0x12764>
  4153b8:	ldr	x19, [sp, #16]
  4153bc:	ldp	x29, x30, [sp], #32
  4153c0:	ret
  4153c4:	bl	41563c <wcrtomb@plt+0x129dc>
  4153c8:	stp	x29, x30, [sp, #-32]!
  4153cc:	str	x19, [sp, #16]
  4153d0:	mov	x19, x1
  4153d4:	mov	x29, sp
  4153d8:	cbz	x0, 4153ec <wcrtomb@plt+0x1278c>
  4153dc:	cbnz	x19, 4153ec <wcrtomb@plt+0x1278c>
  4153e0:	bl	402a10 <free@plt>
  4153e4:	mov	x0, xzr
  4153e8:	b	4153fc <wcrtomb@plt+0x1279c>
  4153ec:	mov	x1, x19
  4153f0:	bl	402870 <realloc@plt>
  4153f4:	cbz	x19, 4153fc <wcrtomb@plt+0x1279c>
  4153f8:	cbz	x0, 415408 <wcrtomb@plt+0x127a8>
  4153fc:	ldr	x19, [sp, #16]
  415400:	ldp	x29, x30, [sp], #32
  415404:	ret
  415408:	bl	41563c <wcrtomb@plt+0x129dc>
  41540c:	stp	x29, x30, [sp, #-32]!
  415410:	ldr	x8, [x1]
  415414:	str	x19, [sp, #16]
  415418:	mov	x29, sp
  41541c:	cbz	x0, 415454 <wcrtomb@plt+0x127f4>
  415420:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  415424:	movk	x9, #0x5554
  415428:	udiv	x9, x9, x2
  41542c:	cmp	x9, x8
  415430:	b.ls	41549c <wcrtomb@plt+0x1283c>  // b.plast
  415434:	add	x8, x8, x8, lsr #1
  415438:	add	x8, x8, #0x1
  41543c:	mul	x19, x8, x2
  415440:	str	x8, [x1]
  415444:	cbnz	x19, 415480 <wcrtomb@plt+0x12820>
  415448:	bl	402a10 <free@plt>
  41544c:	mov	x0, xzr
  415450:	b	415490 <wcrtomb@plt+0x12830>
  415454:	cbnz	x8, 415468 <wcrtomb@plt+0x12808>
  415458:	mov	w8, #0x80                  	// #128
  41545c:	udiv	x8, x8, x2
  415460:	cmp	x2, #0x80
  415464:	cinc	x8, x8, hi  // hi = pmore
  415468:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41546c:	udiv	x9, x9, x2
  415470:	cmp	x9, x8
  415474:	b.cc	41549c <wcrtomb@plt+0x1283c>  // b.lo, b.ul, b.last
  415478:	mul	x19, x8, x2
  41547c:	str	x8, [x1]
  415480:	mov	x1, x19
  415484:	bl	402870 <realloc@plt>
  415488:	cbz	x19, 415490 <wcrtomb@plt+0x12830>
  41548c:	cbz	x0, 41549c <wcrtomb@plt+0x1283c>
  415490:	ldr	x19, [sp, #16]
  415494:	ldp	x29, x30, [sp], #32
  415498:	ret
  41549c:	bl	41563c <wcrtomb@plt+0x129dc>
  4154a0:	stp	x29, x30, [sp, #-32]!
  4154a4:	str	x19, [sp, #16]
  4154a8:	mov	x29, sp
  4154ac:	mov	x19, x0
  4154b0:	bl	402730 <malloc@plt>
  4154b4:	cbz	x19, 4154bc <wcrtomb@plt+0x1285c>
  4154b8:	cbz	x0, 4154c8 <wcrtomb@plt+0x12868>
  4154bc:	ldr	x19, [sp, #16]
  4154c0:	ldp	x29, x30, [sp], #32
  4154c4:	ret
  4154c8:	bl	41563c <wcrtomb@plt+0x129dc>
  4154cc:	stp	x29, x30, [sp, #-32]!
  4154d0:	str	x19, [sp, #16]
  4154d4:	ldr	x19, [x1]
  4154d8:	mov	x29, sp
  4154dc:	cbz	x0, 41550c <wcrtomb@plt+0x128ac>
  4154e0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4154e4:	movk	x8, #0x5554
  4154e8:	cmp	x19, x8
  4154ec:	b.cs	41553c <wcrtomb@plt+0x128dc>  // b.hs, b.nlast
  4154f0:	add	x8, x19, x19, lsr #1
  4154f4:	adds	x19, x8, #0x1
  4154f8:	str	x19, [x1]
  4154fc:	b.ne	415520 <wcrtomb@plt+0x128c0>  // b.any
  415500:	bl	402a10 <free@plt>
  415504:	mov	x0, xzr
  415508:	b	415530 <wcrtomb@plt+0x128d0>
  41550c:	cbz	x19, 415518 <wcrtomb@plt+0x128b8>
  415510:	tbz	x19, #63, 41551c <wcrtomb@plt+0x128bc>
  415514:	b	41553c <wcrtomb@plt+0x128dc>
  415518:	mov	w19, #0x80                  	// #128
  41551c:	str	x19, [x1]
  415520:	mov	x1, x19
  415524:	bl	402870 <realloc@plt>
  415528:	cbz	x19, 415530 <wcrtomb@plt+0x128d0>
  41552c:	cbz	x0, 41553c <wcrtomb@plt+0x128dc>
  415530:	ldr	x19, [sp, #16]
  415534:	ldp	x29, x30, [sp], #32
  415538:	ret
  41553c:	bl	41563c <wcrtomb@plt+0x129dc>
  415540:	stp	x29, x30, [sp, #-16]!
  415544:	mov	x29, sp
  415548:	tbnz	x0, #63, 415560 <wcrtomb@plt+0x12900>
  41554c:	mov	w1, #0x1                   	// #1
  415550:	bl	402840 <calloc@plt>
  415554:	cbz	x0, 415560 <wcrtomb@plt+0x12900>
  415558:	ldp	x29, x30, [sp], #16
  41555c:	ret
  415560:	bl	41563c <wcrtomb@plt+0x129dc>
  415564:	stp	x29, x30, [sp, #-16]!
  415568:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41556c:	udiv	x8, x8, x1
  415570:	cmp	x8, x0
  415574:	mov	x29, sp
  415578:	b.cc	41558c <wcrtomb@plt+0x1292c>  // b.lo, b.ul, b.last
  41557c:	bl	402840 <calloc@plt>
  415580:	cbz	x0, 41558c <wcrtomb@plt+0x1292c>
  415584:	ldp	x29, x30, [sp], #16
  415588:	ret
  41558c:	bl	41563c <wcrtomb@plt+0x129dc>
  415590:	stp	x29, x30, [sp, #-48]!
  415594:	stp	x20, x19, [sp, #32]
  415598:	mov	x20, x0
  41559c:	mov	x0, x1
  4155a0:	str	x21, [sp, #16]
  4155a4:	mov	x29, sp
  4155a8:	mov	x19, x1
  4155ac:	bl	402730 <malloc@plt>
  4155b0:	mov	x21, x0
  4155b4:	cbz	x19, 4155bc <wcrtomb@plt+0x1295c>
  4155b8:	cbz	x21, 4155e0 <wcrtomb@plt+0x12980>
  4155bc:	mov	x0, x21
  4155c0:	mov	x1, x20
  4155c4:	mov	x2, x19
  4155c8:	bl	402580 <memcpy@plt>
  4155cc:	mov	x0, x21
  4155d0:	ldp	x20, x19, [sp, #32]
  4155d4:	ldr	x21, [sp, #16]
  4155d8:	ldp	x29, x30, [sp], #48
  4155dc:	ret
  4155e0:	bl	41563c <wcrtomb@plt+0x129dc>
  4155e4:	stp	x29, x30, [sp, #-48]!
  4155e8:	str	x21, [sp, #16]
  4155ec:	stp	x20, x19, [sp, #32]
  4155f0:	mov	x29, sp
  4155f4:	mov	x19, x0
  4155f8:	bl	4025c0 <strlen@plt>
  4155fc:	add	x20, x0, #0x1
  415600:	mov	x0, x20
  415604:	bl	402730 <malloc@plt>
  415608:	mov	x21, x0
  41560c:	cbz	x20, 415614 <wcrtomb@plt+0x129b4>
  415610:	cbz	x21, 415638 <wcrtomb@plt+0x129d8>
  415614:	mov	x0, x21
  415618:	mov	x1, x19
  41561c:	mov	x2, x20
  415620:	bl	402580 <memcpy@plt>
  415624:	mov	x0, x21
  415628:	ldp	x20, x19, [sp, #32]
  41562c:	ldr	x21, [sp, #16]
  415630:	ldp	x29, x30, [sp], #48
  415634:	ret
  415638:	bl	41563c <wcrtomb@plt+0x129dc>
  41563c:	stp	x29, x30, [sp, #-32]!
  415640:	str	x19, [sp, #16]
  415644:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415648:	ldr	w19, [x8, #1232]
  41564c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  415650:	add	x1, x1, #0xa43
  415654:	mov	w2, #0x5                   	// #5
  415658:	mov	x0, xzr
  41565c:	mov	x29, sp
  415660:	bl	402b40 <dcgettext@plt>
  415664:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x105a8>
  415668:	mov	x3, x0
  41566c:	add	x2, x2, #0xe61
  415670:	mov	w0, w19
  415674:	mov	w1, wzr
  415678:	bl	402600 <error@plt>
  41567c:	bl	402920 <abort@plt>
  415680:	sub	sp, sp, #0x40
  415684:	stp	x29, x30, [sp, #16]
  415688:	add	x29, sp, #0x10
  41568c:	cmp	x0, #0x0
  415690:	sub	x8, x29, #0x4
  415694:	stp	x20, x19, [sp, #48]
  415698:	csel	x20, x8, x0, eq  // eq = none
  41569c:	mov	x0, x20
  4156a0:	stp	x22, x21, [sp, #32]
  4156a4:	mov	x22, x2
  4156a8:	mov	x19, x1
  4156ac:	bl	402570 <mbrtowc@plt>
  4156b0:	mov	x21, x0
  4156b4:	cbz	x22, 4156d8 <wcrtomb@plt+0x12a78>
  4156b8:	cmn	x21, #0x2
  4156bc:	b.cc	4156d8 <wcrtomb@plt+0x12a78>  // b.lo, b.ul, b.last
  4156c0:	mov	w0, wzr
  4156c4:	bl	425394 <_obstack_memory_used@@Base+0xf93c>
  4156c8:	tbnz	w0, #0, 4156d8 <wcrtomb@plt+0x12a78>
  4156cc:	ldrb	w8, [x19]
  4156d0:	mov	w21, #0x1                   	// #1
  4156d4:	str	w8, [x20]
  4156d8:	mov	x0, x21
  4156dc:	ldp	x20, x19, [sp, #48]
  4156e0:	ldp	x22, x21, [sp, #32]
  4156e4:	ldp	x29, x30, [sp, #16]
  4156e8:	add	sp, sp, #0x40
  4156ec:	ret

00000000004156f0 <_obstack_begin@@Base>:
  4156f0:	stp	x29, x30, [sp, #-48]!
  4156f4:	stp	x20, x19, [sp, #32]
  4156f8:	ldrb	w8, [x0, #80]
  4156fc:	cmp	x2, #0x0
  415700:	mov	w9, #0x10                  	// #16
  415704:	csel	x20, x9, x2, eq  // eq = none
  415708:	mov	w9, #0xfe0                 	// #4064
  41570c:	cmp	x1, #0x0
  415710:	str	x21, [sp, #16]
  415714:	mov	x19, x0
  415718:	str	x4, [x0, #64]
  41571c:	csel	x0, x9, x1, eq  // eq = none
  415720:	and	w8, w8, #0xfe
  415724:	sub	x21, x20, #0x1
  415728:	mov	x29, sp
  41572c:	strb	w8, [x19, #80]
  415730:	str	x0, [x19]
  415734:	stp	x21, x3, [x19, #48]
  415738:	blr	x3
  41573c:	str	x0, [x19, #8]
  415740:	cbz	x0, 41578c <_obstack_begin@@Base+0x9c>
  415744:	ldr	x10, [x19]
  415748:	add	x8, x0, x21
  41574c:	neg	x9, x20
  415750:	add	x8, x8, #0x10
  415754:	and	x8, x8, x9
  415758:	stp	x8, x8, [x19, #16]
  41575c:	add	x8, x0, x10
  415760:	str	x8, [x0]
  415764:	str	x8, [x19, #32]
  415768:	str	xzr, [x0, #8]
  41576c:	ldrb	w8, [x19, #80]
  415770:	ldr	x21, [sp, #16]
  415774:	mov	w0, #0x1                   	// #1
  415778:	and	w8, w8, #0xfffffff9
  41577c:	strb	w8, [x19, #80]
  415780:	ldp	x20, x19, [sp, #32]
  415784:	ldp	x29, x30, [sp], #48
  415788:	ret
  41578c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415790:	ldr	x8, [x8, #1224]
  415794:	blr	x8

0000000000415798 <_obstack_begin_1@@Base>:
  415798:	stp	x29, x30, [sp, #-48]!
  41579c:	stp	x20, x19, [sp, #32]
  4157a0:	ldrb	w8, [x0, #80]
  4157a4:	cmp	x2, #0x0
  4157a8:	mov	w9, #0x10                  	// #16
  4157ac:	csel	x20, x9, x2, eq  // eq = none
  4157b0:	mov	w9, #0xfe0                 	// #4064
  4157b4:	cmp	x1, #0x0
  4157b8:	str	x21, [sp, #16]
  4157bc:	csel	x1, x9, x1, eq  // eq = none
  4157c0:	orr	w8, w8, #0x1
  4157c4:	sub	x21, x20, #0x1
  4157c8:	mov	x19, x0
  4157cc:	stp	x4, x5, [x0, #64]
  4157d0:	strb	w8, [x0, #80]
  4157d4:	str	x1, [x0]
  4157d8:	stp	x21, x3, [x0, #48]
  4157dc:	mov	x0, x5
  4157e0:	mov	x29, sp
  4157e4:	blr	x3
  4157e8:	str	x0, [x19, #8]
  4157ec:	cbz	x0, 415838 <_obstack_begin_1@@Base+0xa0>
  4157f0:	ldr	x10, [x19]
  4157f4:	add	x8, x0, x21
  4157f8:	neg	x9, x20
  4157fc:	add	x8, x8, #0x10
  415800:	and	x8, x8, x9
  415804:	stp	x8, x8, [x19, #16]
  415808:	add	x8, x0, x10
  41580c:	str	x8, [x0]
  415810:	str	x8, [x19, #32]
  415814:	str	xzr, [x0, #8]
  415818:	ldrb	w8, [x19, #80]
  41581c:	ldr	x21, [sp, #16]
  415820:	mov	w0, #0x1                   	// #1
  415824:	and	w8, w8, #0xfffffff9
  415828:	strb	w8, [x19, #80]
  41582c:	ldp	x20, x19, [sp, #32]
  415830:	ldp	x29, x30, [sp], #48
  415834:	ret
  415838:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  41583c:	ldr	x8, [x8, #1224]
  415840:	blr	x8

0000000000415844 <_obstack_newchunk@@Base>:
  415844:	stp	x29, x30, [sp, #-64]!
  415848:	str	x23, [sp, #16]
  41584c:	stp	x22, x21, [sp, #32]
  415850:	stp	x20, x19, [sp, #48]
  415854:	ldp	x9, x8, [x0, #16]
  415858:	ldr	x10, [x0, #48]
  41585c:	ldr	x11, [x0]
  415860:	mov	x29, sp
  415864:	sub	x20, x8, x9
  415868:	adds	x8, x20, x1
  41586c:	lsr	x9, x20, #3
  415870:	cset	w12, cs  // cs = hs, nlast
  415874:	adds	x10, x8, x10
  415878:	add	x9, x9, #0x64
  41587c:	cset	w8, cs  // cs = hs, nlast
  415880:	adds	x9, x9, x10
  415884:	csel	x9, x10, x9, cs  // cs = hs, nlast
  415888:	cmp	x9, x11
  41588c:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  415890:	tbnz	w12, #0, 41597c <_obstack_newchunk@@Base+0x138>
  415894:	tbnz	w8, #0, 41597c <_obstack_newchunk@@Base+0x138>
  415898:	ldrb	w8, [x0, #80]
  41589c:	ldr	x21, [x0, #8]
  4158a0:	mov	x19, x0
  4158a4:	tbnz	w8, #0, 4158b8 <_obstack_newchunk@@Base+0x74>
  4158a8:	ldr	x8, [x19, #56]
  4158ac:	mov	x0, x23
  4158b0:	blr	x8
  4158b4:	b	4158c8 <_obstack_newchunk@@Base+0x84>
  4158b8:	ldr	x8, [x19, #56]
  4158bc:	ldr	x0, [x19, #72]
  4158c0:	mov	x1, x23
  4158c4:	blr	x8
  4158c8:	mov	x22, x0
  4158cc:	cbz	x0, 41597c <_obstack_newchunk@@Base+0x138>
  4158d0:	add	x8, x22, x23
  4158d4:	str	x22, [x19, #8]
  4158d8:	str	x21, [x22, #8]
  4158dc:	str	x8, [x19, #32]
  4158e0:	str	x8, [x22]
  4158e4:	ldr	x8, [x19, #48]
  4158e8:	ldr	x1, [x19, #16]
  4158ec:	mov	x2, x20
  4158f0:	add	x9, x22, x8
  4158f4:	add	x9, x9, #0x10
  4158f8:	bic	x23, x9, x8
  4158fc:	mov	x0, x23
  415900:	bl	402580 <memcpy@plt>
  415904:	ldrb	w8, [x19, #80]
  415908:	tbnz	w8, #1, 415954 <_obstack_newchunk@@Base+0x110>
  41590c:	ldr	x8, [x19, #48]
  415910:	ldr	x9, [x19, #16]
  415914:	add	x10, x21, x8
  415918:	add	x10, x10, #0x10
  41591c:	bic	x8, x10, x8
  415920:	cmp	x9, x8
  415924:	b.ne	415954 <_obstack_newchunk@@Base+0x110>  // b.any
  415928:	ldr	x8, [x21, #8]
  41592c:	str	x8, [x22, #8]
  415930:	ldrb	w8, [x19, #80]
  415934:	tbnz	w8, #0, 415948 <_obstack_newchunk@@Base+0x104>
  415938:	ldr	x8, [x19, #64]
  41593c:	mov	x0, x21
  415940:	blr	x8
  415944:	b	415954 <_obstack_newchunk@@Base+0x110>
  415948:	ldp	x8, x0, [x19, #64]
  41594c:	mov	x1, x21
  415950:	blr	x8
  415954:	ldrb	w8, [x19, #80]
  415958:	add	x9, x23, x20
  41595c:	stp	x23, x9, [x19, #16]
  415960:	ldr	x23, [sp, #16]
  415964:	and	w8, w8, #0xfffffffd
  415968:	strb	w8, [x19, #80]
  41596c:	ldp	x20, x19, [sp, #48]
  415970:	ldp	x22, x21, [sp, #32]
  415974:	ldp	x29, x30, [sp], #64
  415978:	ret
  41597c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415980:	ldr	x8, [x8, #1224]
  415984:	blr	x8

0000000000415988 <_obstack_allocated_p@@Base>:
  415988:	ldr	x8, [x0, #8]
  41598c:	cbnz	x8, 4159a0 <_obstack_allocated_p@@Base+0x18>
  415990:	mov	w0, wzr
  415994:	ret
  415998:	ldr	x8, [x8, #8]
  41599c:	cbz	x8, 415990 <_obstack_allocated_p@@Base+0x8>
  4159a0:	cmp	x8, x1
  4159a4:	b.cs	415998 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  4159a8:	ldr	x9, [x8]
  4159ac:	cmp	x9, x1
  4159b0:	b.cc	415998 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  4159b4:	mov	w0, #0x1                   	// #1
  4159b8:	ret

00000000004159bc <_obstack_free@@Base>:
  4159bc:	stp	x29, x30, [sp, #-48]!
  4159c0:	stp	x20, x19, [sp, #32]
  4159c4:	ldr	x8, [x0, #8]
  4159c8:	mov	x20, x1
  4159cc:	str	x21, [sp, #16]
  4159d0:	mov	x29, sp
  4159d4:	cbz	x8, 415a30 <_obstack_free@@Base+0x74>
  4159d8:	mov	x19, x0
  4159dc:	b	415a00 <_obstack_free@@Base+0x44>
  4159e0:	ldr	x9, [x19, #64]
  4159e4:	mov	x0, x8
  4159e8:	blr	x9
  4159ec:	ldrb	w8, [x19, #80]
  4159f0:	orr	w8, w8, #0x2
  4159f4:	strb	w8, [x19, #80]
  4159f8:	mov	x8, x21
  4159fc:	cbz	x21, 415a30 <_obstack_free@@Base+0x74>
  415a00:	cmp	x8, x20
  415a04:	b.cs	415a14 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  415a08:	ldr	x9, [x8]
  415a0c:	cmp	x9, x20
  415a10:	b.cs	415a38 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  415a14:	ldrb	w9, [x19, #80]
  415a18:	ldr	x21, [x8, #8]
  415a1c:	tbz	w9, #0, 4159e0 <_obstack_free@@Base+0x24>
  415a20:	ldp	x9, x0, [x19, #64]
  415a24:	mov	x1, x8
  415a28:	blr	x9
  415a2c:	b	4159ec <_obstack_free@@Base+0x30>
  415a30:	cbz	x20, 415a48 <_obstack_free@@Base+0x8c>
  415a34:	bl	402920 <abort@plt>
  415a38:	stp	x20, x20, [x19, #16]
  415a3c:	ldr	x9, [x8]
  415a40:	str	x8, [x19, #8]
  415a44:	str	x9, [x19, #32]
  415a48:	ldp	x20, x19, [sp, #32]
  415a4c:	ldr	x21, [sp, #16]
  415a50:	ldp	x29, x30, [sp], #48
  415a54:	ret

0000000000415a58 <_obstack_memory_used@@Base>:
  415a58:	ldr	x8, [x0, #8]
  415a5c:	cbz	x8, 415a78 <_obstack_memory_used@@Base+0x20>
  415a60:	mov	x0, xzr
  415a64:	sub	x10, x0, x8
  415a68:	ldp	x9, x8, [x8]
  415a6c:	add	x0, x10, x9
  415a70:	cbnz	x8, 415a64 <_obstack_memory_used@@Base+0xc>
  415a74:	ret
  415a78:	mov	x0, xzr
  415a7c:	ret
  415a80:	stp	x29, x30, [sp, #-32]!
  415a84:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415a88:	str	x19, [sp, #16]
  415a8c:	ldr	x19, [x8, #1248]
  415a90:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  415a94:	add	x1, x1, #0xa43
  415a98:	mov	w2, #0x5                   	// #5
  415a9c:	mov	x0, xzr
  415aa0:	mov	x29, sp
  415aa4:	bl	402b40 <dcgettext@plt>
  415aa8:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  415aac:	mov	x3, x0
  415ab0:	add	x2, x2, #0x72f
  415ab4:	mov	w1, #0x1                   	// #1
  415ab8:	mov	x0, x19
  415abc:	bl	4029c0 <__fprintf_chk@plt>
  415ac0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x235a8>
  415ac4:	ldr	w0, [x8, #1232]
  415ac8:	bl	4025f0 <exit@plt>
  415acc:	stp	x29, x30, [sp, #-16]!
  415ad0:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  415ad4:	ldr	x3, [x9, #3552]
  415ad8:	ldrb	w9, [x2, #56]
  415adc:	mov	x8, x1
  415ae0:	mov	x1, x0
  415ae4:	ubfx	x10, x3, #21, #11
  415ae8:	and	w10, w10, #0x10
  415aec:	and	w9, w9, #0xffffffef
  415af0:	orr	w9, w9, w10
  415af4:	orr	w9, w9, #0x80
  415af8:	strb	w9, [x2, #56]
  415afc:	mov	x0, x2
  415b00:	mov	x2, x8
  415b04:	mov	x29, sp
  415b08:	bl	415b44 <_obstack_memory_used@@Base+0xec>
  415b0c:	cbz	w0, 415b38 <_obstack_memory_used@@Base+0xe0>
  415b10:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  415b14:	add	x8, x8, #0xd50
  415b18:	ldr	x8, [x8, w0, sxtw #3]
  415b1c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  415b20:	add	x9, x9, #0xbcf
  415b24:	mov	w2, #0x5                   	// #5
  415b28:	add	x1, x9, x8
  415b2c:	mov	x0, xzr
  415b30:	ldp	x29, x30, [sp], #16
  415b34:	b	402b40 <dcgettext@plt>
  415b38:	mov	x0, xzr
  415b3c:	ldp	x29, x30, [sp], #16
  415b40:	ret
  415b44:	sub	sp, sp, #0x130
  415b48:	stp	x29, x30, [sp, #208]
  415b4c:	add	x29, sp, #0xd0
  415b50:	stp	x28, x27, [sp, #224]
  415b54:	stp	x26, x25, [sp, #240]
  415b58:	stp	x24, x23, [sp, #256]
  415b5c:	stp	x22, x21, [sp, #272]
  415b60:	stp	x20, x19, [sp, #288]
  415b64:	stur	wzr, [x29, #-44]
  415b68:	ldrb	w8, [x0, #56]
  415b6c:	ldp	x20, x9, [x0]
  415b70:	mov	w10, #0x90                  	// #144
  415b74:	mov	x21, x3
  415b78:	mov	x22, x2
  415b7c:	mov	x23, x1
  415b80:	mov	x19, x0
  415b84:	and	w8, w8, w10
  415b88:	cmp	x9, #0xe7
  415b8c:	stp	xzr, x3, [x0, #16]
  415b90:	str	xzr, [x0, #48]
  415b94:	strb	w8, [x0, #56]
  415b98:	b.ls	4162a8 <_obstack_memory_used@@Base+0x850>  // b.plast
  415b9c:	mov	w8, #0xe8                  	// #232
  415ba0:	str	x8, [x19, #16]
  415ba4:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  415ba8:	movk	x8, #0x5554
  415bac:	movk	x8, #0x555, lsl #48
  415bb0:	movi	v0.2d, #0x0
  415bb4:	cmp	x22, x8
  415bb8:	mov	w8, #0xf                   	// #15
  415bbc:	str	xzr, [x20, #224]
  415bc0:	stp	q0, q0, [x20, #192]
  415bc4:	stp	q0, q0, [x20, #160]
  415bc8:	stp	q0, q0, [x20, #128]
  415bcc:	stp	q0, q0, [x20, #96]
  415bd0:	stp	q0, q0, [x20, #64]
  415bd4:	stp	q0, q0, [x20, #32]
  415bd8:	stp	q0, q0, [x20]
  415bdc:	str	w8, [x20, #128]
  415be0:	b.hi	415ddc <_obstack_memory_used@@Base+0x384>  // b.pmore
  415be4:	add	x24, x22, #0x1
  415be8:	lsl	x0, x24, #4
  415bec:	str	x24, [x20, #8]
  415bf0:	bl	402730 <malloc@plt>
  415bf4:	mov	w8, #0x1                   	// #1
  415bf8:	str	x0, [x20]
  415bfc:	mov	x25, x8
  415c00:	cmp	x8, x22
  415c04:	lsl	x8, x8, #1
  415c08:	b.ls	415bfc <_obstack_memory_used@@Base+0x1a4>  // b.plast
  415c0c:	mov	w0, #0x18                  	// #24
  415c10:	mov	x1, x25
  415c14:	bl	402840 <calloc@plt>
  415c18:	sub	x8, x25, #0x1
  415c1c:	str	x0, [x20, #64]
  415c20:	str	x8, [x20, #136]
  415c24:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  415c28:	str	w0, [x20, #180]
  415c2c:	mov	w0, #0xe                   	// #14
  415c30:	bl	4026f0 <nl_langinfo@plt>
  415c34:	ldrb	w8, [x0]
  415c38:	orr	w8, w8, #0x20
  415c3c:	cmp	w8, #0x75
  415c40:	b.ne	415c8c <_obstack_memory_used@@Base+0x234>  // b.any
  415c44:	ldrb	w8, [x0, #1]
  415c48:	orr	w8, w8, #0x20
  415c4c:	cmp	w8, #0x74
  415c50:	b.ne	415c8c <_obstack_memory_used@@Base+0x234>  // b.any
  415c54:	ldrb	w8, [x0, #2]
  415c58:	orr	w8, w8, #0x20
  415c5c:	cmp	w8, #0x66
  415c60:	b.ne	415c8c <_obstack_memory_used@@Base+0x234>  // b.any
  415c64:	ldrb	w8, [x0, #3]!
  415c68:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x105a8>
  415c6c:	add	x1, x1, #0x1e1
  415c70:	cmp	w8, #0x2d
  415c74:	cinc	x0, x0, eq  // eq = none
  415c78:	bl	4029d0 <strcmp@plt>
  415c7c:	cbnz	w0, 415c8c <_obstack_memory_used@@Base+0x234>
  415c80:	ldrb	w8, [x20, #176]
  415c84:	orr	w8, w8, #0x4
  415c88:	strb	w8, [x20, #176]
  415c8c:	ldrb	w8, [x20, #176]
  415c90:	ldr	w9, [x20, #180]
  415c94:	and	w10, w8, #0xfffffff7
  415c98:	cmp	w9, #0x2
  415c9c:	strb	w10, [x20, #176]
  415ca0:	b.lt	415d1c <_obstack_memory_used@@Base+0x2c4>  // b.tstop
  415ca4:	tbnz	w8, #2, 415d10 <_obstack_memory_used@@Base+0x2b8>
  415ca8:	mov	w0, #0x20                  	// #32
  415cac:	mov	w1, #0x1                   	// #1
  415cb0:	bl	402840 <calloc@plt>
  415cb4:	str	x0, [x20, #120]
  415cb8:	cbz	x0, 415ddc <_obstack_memory_used@@Base+0x384>
  415cbc:	mov	x25, xzr
  415cc0:	mov	w26, #0x1                   	// #1
  415cc4:	b	415cd4 <_obstack_memory_used@@Base+0x27c>
  415cc8:	add	x25, x25, #0x1
  415ccc:	cmp	x25, #0x40
  415cd0:	b.eq	415df4 <_obstack_memory_used@@Base+0x39c>  // b.none
  415cd4:	mov	w0, w25
  415cd8:	bl	402910 <btowc@plt>
  415cdc:	cmn	w0, #0x1
  415ce0:	b.eq	415cf8 <_obstack_memory_used@@Base+0x2a0>  // b.none
  415ce4:	ldr	x8, [x20, #120]
  415ce8:	lsl	x10, x26, x25
  415cec:	ldr	x9, [x8]
  415cf0:	orr	x9, x9, x10
  415cf4:	str	x9, [x8]
  415cf8:	cmp	w25, w0
  415cfc:	b.eq	415cc8 <_obstack_memory_used@@Base+0x270>  // b.none
  415d00:	ldrb	w8, [x20, #176]
  415d04:	orr	w8, w8, #0x8
  415d08:	strb	w8, [x20, #176]
  415d0c:	b	415cc8 <_obstack_memory_used@@Base+0x270>
  415d10:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  415d14:	add	x8, x8, #0xdd8
  415d18:	str	x8, [x20, #120]
  415d1c:	ldr	x8, [x20]
  415d20:	cbz	x8, 415ddc <_obstack_memory_used@@Base+0x384>
  415d24:	ldr	x8, [x20, #64]
  415d28:	cbz	x8, 415ddc <_obstack_memory_used@@Base+0x384>
  415d2c:	stur	wzr, [x29, #-44]
  415d30:	ldr	x26, [x19, #40]
  415d34:	and	x25, x21, #0x400000
  415d38:	movi	v0.2d, #0x0
  415d3c:	ubfx	x8, x21, #22, #1
  415d40:	stp	q0, q0, [sp, #128]
  415d44:	strb	w8, [sp, #144]
  415d48:	orr	x8, x25, x26
  415d4c:	cmp	x8, #0x0
  415d50:	cset	w27, ne  // ne = any
  415d54:	stp	q0, q0, [sp, #80]
  415d58:	stur	q0, [sp, #112]
  415d5c:	stp	q0, q0, [sp, #48]
  415d60:	stp	q0, q0, [sp, #16]
  415d64:	str	x23, [sp, #8]
  415d68:	stp	x22, x22, [sp, #88]
  415d6c:	str	x26, [sp, #128]
  415d70:	strb	w27, [sp, #147]
  415d74:	ldr	w8, [x20, #180]
  415d78:	cmp	x22, #0x1
  415d7c:	str	w8, [sp, #152]
  415d80:	ldrb	w9, [x20, #176]
  415d84:	stp	x22, x22, [sp, #104]
  415d88:	ubfx	w10, w9, #2, #1
  415d8c:	ubfx	w9, w9, #3, #1
  415d90:	strb	w10, [sp, #145]
  415d94:	strb	w9, [sp, #146]
  415d98:	b.lt	415f0c <_obstack_memory_used@@Base+0x4b4>  // b.tstop
  415d9c:	cmp	w8, #0x2
  415da0:	b.lt	415dc0 <_obstack_memory_used@@Base+0x368>  // b.tstop
  415da4:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  415da8:	cmp	x22, x8
  415dac:	b.hi	416338 <_obstack_memory_used@@Base+0x8e0>  // b.pmore
  415db0:	lsl	x0, x24, #2
  415db4:	bl	402730 <malloc@plt>
  415db8:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  415dbc:	str	x0, [sp, #24]
  415dc0:	cbz	w27, 415f18 <_obstack_memory_used@@Base+0x4c0>
  415dc4:	mov	x0, x24
  415dc8:	bl	402730 <malloc@plt>
  415dcc:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  415dd0:	mov	w27, #0x1                   	// #1
  415dd4:	str	x0, [sp, #16]
  415dd8:	b	415f1c <_obstack_memory_used@@Base+0x4c4>
  415ddc:	mov	w21, #0xc                   	// #12
  415de0:	mov	x0, x20
  415de4:	stur	w21, [x29, #-44]
  415de8:	bl	417528 <_obstack_memory_used@@Base+0x1ad0>
  415dec:	stp	xzr, xzr, [x19]
  415df0:	b	416d18 <_obstack_memory_used@@Base+0x12c0>
  415df4:	mov	x26, xzr
  415df8:	mov	w27, #0x1                   	// #1
  415dfc:	b	415e0c <_obstack_memory_used@@Base+0x3b4>
  415e00:	add	x26, x26, #0x1
  415e04:	cmp	x26, #0x40
  415e08:	b.eq	415e4c <_obstack_memory_used@@Base+0x3f4>  // b.none
  415e0c:	add	x25, x26, #0x40
  415e10:	mov	w0, w25
  415e14:	bl	402910 <btowc@plt>
  415e18:	cmn	w0, #0x1
  415e1c:	b.eq	415e34 <_obstack_memory_used@@Base+0x3dc>  // b.none
  415e20:	ldr	x8, [x20, #120]
  415e24:	lsl	x10, x27, x26
  415e28:	ldr	x9, [x8, #8]
  415e2c:	orr	x9, x9, x10
  415e30:	str	x9, [x8, #8]
  415e34:	cmp	w25, w0
  415e38:	b.eq	415e00 <_obstack_memory_used@@Base+0x3a8>  // b.none
  415e3c:	ldrb	w8, [x20, #176]
  415e40:	orr	w8, w8, #0x8
  415e44:	strb	w8, [x20, #176]
  415e48:	b	415e00 <_obstack_memory_used@@Base+0x3a8>
  415e4c:	mov	x26, xzr
  415e50:	mov	w27, #0x1                   	// #1
  415e54:	b	415e64 <_obstack_memory_used@@Base+0x40c>
  415e58:	add	x26, x26, #0x1
  415e5c:	cmp	x26, #0x40
  415e60:	b.eq	415eac <_obstack_memory_used@@Base+0x454>  // b.none
  415e64:	add	x25, x26, #0x80
  415e68:	mov	w0, w25
  415e6c:	bl	402910 <btowc@plt>
  415e70:	cmn	w0, #0x1
  415e74:	b.eq	415e8c <_obstack_memory_used@@Base+0x434>  // b.none
  415e78:	ldr	x8, [x20, #120]
  415e7c:	lsl	x10, x27, x26
  415e80:	ldr	x9, [x8, #16]
  415e84:	orr	x9, x9, x10
  415e88:	str	x9, [x8, #16]
  415e8c:	cmp	w25, #0x7f
  415e90:	b.hi	415e58 <_obstack_memory_used@@Base+0x400>  // b.pmore
  415e94:	cmp	w25, w0
  415e98:	b.eq	415e58 <_obstack_memory_used@@Base+0x400>  // b.none
  415e9c:	ldrb	w8, [x20, #176]
  415ea0:	orr	w8, w8, #0x8
  415ea4:	strb	w8, [x20, #176]
  415ea8:	b	415e58 <_obstack_memory_used@@Base+0x400>
  415eac:	mov	x26, xzr
  415eb0:	mov	w27, #0x1                   	// #1
  415eb4:	b	415ec4 <_obstack_memory_used@@Base+0x46c>
  415eb8:	add	x26, x26, #0x1
  415ebc:	cmp	x26, #0x40
  415ec0:	b.eq	415d1c <_obstack_memory_used@@Base+0x2c4>  // b.none
  415ec4:	add	x25, x26, #0xc0
  415ec8:	mov	w0, w25
  415ecc:	bl	402910 <btowc@plt>
  415ed0:	cmn	w0, #0x1
  415ed4:	b.eq	415eec <_obstack_memory_used@@Base+0x494>  // b.none
  415ed8:	ldr	x8, [x20, #120]
  415edc:	lsl	x10, x27, x26
  415ee0:	ldr	x9, [x8, #24]
  415ee4:	orr	x9, x9, x10
  415ee8:	str	x9, [x8, #24]
  415eec:	cmp	w25, #0x7f
  415ef0:	b.hi	415eb8 <_obstack_memory_used@@Base+0x460>  // b.pmore
  415ef4:	cmp	w25, w0
  415ef8:	b.eq	415eb8 <_obstack_memory_used@@Base+0x460>  // b.none
  415efc:	ldrb	w8, [x20, #176]
  415f00:	orr	w8, w8, #0x8
  415f04:	strb	w8, [x20, #176]
  415f08:	b	415eb8 <_obstack_memory_used@@Base+0x460>
  415f0c:	mov	x24, xzr
  415f10:	mov	x0, xzr
  415f14:	b	415f24 <_obstack_memory_used@@Base+0x4cc>
  415f18:	mov	x0, xzr
  415f1c:	str	x24, [sp, #72]
  415f20:	ldr	w8, [x20, #180]
  415f24:	cmp	w27, #0x0
  415f28:	csel	x9, x23, x0, eq  // eq = none
  415f2c:	cmp	w8, #0x2
  415f30:	str	x9, [sp, #16]
  415f34:	cbz	x25, 416034 <_obstack_memory_used@@Base+0x5dc>
  415f38:	b.ge	415fa0 <_obstack_memory_used@@Base+0x548>  // b.tcont
  415f3c:	cmp	x24, x22
  415f40:	csel	x22, x22, x24, gt
  415f44:	cmp	x22, #0x1
  415f48:	b.lt	416074 <_obstack_memory_used@@Base+0x61c>  // b.tstop
  415f4c:	bl	402880 <__ctype_toupper_loc@plt>
  415f50:	mov	x9, xzr
  415f54:	mov	x8, xzr
  415f58:	add	x9, x23, x9
  415f5c:	ldrb	w9, [x9, x8]
  415f60:	cbnz	x26, 415f90 <_obstack_memory_used@@Base+0x538>
  415f64:	ldr	x10, [x0]
  415f68:	ldr	x11, [sp, #16]
  415f6c:	ldr	w9, [x10, w9, uxtw #2]
  415f70:	strb	w9, [x11, x8]
  415f74:	add	x8, x8, #0x1
  415f78:	cmp	x8, x22
  415f7c:	b.ge	416078 <_obstack_memory_used@@Base+0x620>  // b.tcont
  415f80:	ldr	x23, [sp, #8]
  415f84:	ldr	x9, [sp, #48]
  415f88:	ldr	x26, [sp, #128]
  415f8c:	b	415f58 <_obstack_memory_used@@Base+0x500>
  415f90:	ldrb	w9, [x26, x9]
  415f94:	b	415f64 <_obstack_memory_used@@Base+0x50c>
  415f98:	str	x0, [sp, #16]
  415f9c:	str	x23, [sp, #72]
  415fa0:	add	x0, sp, #0x8
  415fa4:	bl	41a420 <_obstack_memory_used@@Base+0x49c8>
  415fa8:	cbnz	w0, 41633c <_obstack_memory_used@@Base+0x8e4>
  415fac:	ldr	x8, [sp, #64]
  415fb0:	cmp	x8, x22
  415fb4:	b.ge	4160d8 <_obstack_memory_used@@Base+0x680>  // b.tcont
  415fb8:	ldr	x8, [sp, #56]
  415fbc:	ldrsw	x9, [x20, #180]
  415fc0:	ldr	x24, [sp, #72]
  415fc4:	add	x8, x8, x9
  415fc8:	cmp	x24, x8
  415fcc:	b.gt	4160d8 <_obstack_memory_used@@Base+0x680>
  415fd0:	ldr	w8, [sp, #152]
  415fd4:	lsl	x23, x24, #1
  415fd8:	cmp	w8, #0x2
  415fdc:	b.lt	416018 <_obstack_memory_used@@Base+0x5c0>  // b.tstop
  415fe0:	lsr	x8, x23, #61
  415fe4:	cbnz	x8, 416338 <_obstack_memory_used@@Base+0x8e0>
  415fe8:	ldr	x0, [sp, #24]
  415fec:	lsl	x1, x24, #3
  415ff0:	bl	402870 <realloc@plt>
  415ff4:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  415ff8:	mov	x8, x0
  415ffc:	ldr	x0, [sp, #32]
  416000:	str	x8, [sp, #24]
  416004:	cbz	x0, 416018 <_obstack_memory_used@@Base+0x5c0>
  416008:	lsl	x1, x24, #4
  41600c:	bl	402870 <realloc@plt>
  416010:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  416014:	str	x0, [sp, #32]
  416018:	ldrb	w8, [sp, #147]
  41601c:	cbz	w8, 415f9c <_obstack_memory_used@@Base+0x544>
  416020:	ldr	x0, [sp, #16]
  416024:	mov	x1, x23
  416028:	bl	402870 <realloc@plt>
  41602c:	cbnz	x0, 415f98 <_obstack_memory_used@@Base+0x540>
  416030:	b	416338 <_obstack_memory_used@@Base+0x8e0>
  416034:	b.lt	416044 <_obstack_memory_used@@Base+0x5ec>  // b.tstop
  416038:	add	x0, sp, #0x8
  41603c:	bl	41aadc <_obstack_memory_used@@Base+0x5084>
  416040:	b	4160d8 <_obstack_memory_used@@Base+0x680>
  416044:	cbz	x26, 416080 <_obstack_memory_used@@Base+0x628>
  416048:	cmp	x24, x22
  41604c:	csel	x8, x22, x24, gt
  416050:	cmp	x8, #0x1
  416054:	b.lt	416088 <_obstack_memory_used@@Base+0x630>  // b.tstop
  416058:	ldrb	w10, [x23]
  41605c:	cmp	x8, #0x1
  416060:	ldrb	w10, [x26, x10]
  416064:	strb	w10, [x9]
  416068:	b.ne	416090 <_obstack_memory_used@@Base+0x638>  // b.any
  41606c:	mov	w9, #0x1                   	// #1
  416070:	b	4160d4 <_obstack_memory_used@@Base+0x67c>
  416074:	mov	x8, xzr
  416078:	stp	x8, x8, [sp, #56]
  41607c:	b	4160d8 <_obstack_memory_used@@Base+0x680>
  416080:	stp	x24, x24, [sp, #56]
  416084:	b	4160d8 <_obstack_memory_used@@Base+0x680>
  416088:	mov	x9, xzr
  41608c:	b	4160d4 <_obstack_memory_used@@Base+0x67c>
  416090:	ldrb	w10, [x23, #1]
  416094:	cmp	x8, #0x3
  416098:	ldrb	w10, [x26, x10]
  41609c:	strb	w10, [x9, #1]
  4160a0:	mov	w9, #0x2                   	// #2
  4160a4:	b.lt	4160d4 <_obstack_memory_used@@Base+0x67c>  // b.tstop
  4160a8:	ldr	x10, [sp, #8]
  4160ac:	ldr	x11, [sp, #48]
  4160b0:	ldr	x12, [sp, #128]
  4160b4:	add	x10, x10, x11
  4160b8:	ldrb	w10, [x10, x9]
  4160bc:	ldr	x11, [sp, #16]
  4160c0:	ldrb	w10, [x12, x10]
  4160c4:	strb	w10, [x11, x9]
  4160c8:	add	x9, x9, #0x1
  4160cc:	cmp	x9, x8
  4160d0:	b.lt	4160a8 <_obstack_memory_used@@Base+0x650>  // b.tstop
  4160d4:	stp	x9, x9, [sp, #56]
  4160d8:	stur	wzr, [x29, #-44]
  4160dc:	ldr	x22, [x19]
  4160e0:	orr	x2, x21, #0x800000
  4160e4:	sub	x0, x29, #0x28
  4160e8:	add	x1, sp, #0x8
  4160ec:	str	xzr, [x19, #48]
  4160f0:	str	x21, [x22, #216]
  4160f4:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  4160f8:	ldr	x8, [sp, #80]
  4160fc:	sub	x2, x29, #0x28
  416100:	sub	x5, x29, #0x2c
  416104:	mov	x1, x19
  416108:	add	x8, x8, w0, sxtw
  41610c:	add	x0, sp, #0x8
  416110:	mov	x3, x21
  416114:	mov	x4, xzr
  416118:	str	x8, [sp, #80]
  41611c:	bl	41ace4 <_obstack_memory_used@@Base+0x528c>
  416120:	mov	x21, x0
  416124:	cbnz	x0, 416130 <_obstack_memory_used@@Base+0x6d8>
  416128:	ldur	w8, [x29, #-44]
  41612c:	cbnz	w8, 416318 <_obstack_memory_used@@Base+0x8c0>
  416130:	ldr	w8, [x22, #128]
  416134:	cmp	w8, #0xf
  416138:	b.eq	4162c8 <_obstack_memory_used@@Base+0x870>  // b.none
  41613c:	ldr	x0, [x22, #112]
  416140:	add	w9, w8, #0x1
  416144:	sxtw	x8, w8
  416148:	add	x23, x0, x8, lsl #6
  41614c:	mov	w10, #0x2                   	// #2
  416150:	mov	x11, #0xffffffffffffffff    	// #-1
  416154:	str	w9, [x22, #128]
  416158:	str	xzr, [x23, #8]!
  41615c:	stp	xzr, xzr, [x23, #16]
  416160:	str	xzr, [x23, #8]
  416164:	str	w10, [x23, #48]
  416168:	stp	xzr, xzr, [x23, #32]
  41616c:	str	x11, [x23, #56]
  416170:	mov	x8, x23
  416174:	cbz	x21, 4161c4 <_obstack_memory_used@@Base+0x76c>
  416178:	ldr	w8, [x22, #128]
  41617c:	cmp	w8, #0xf
  416180:	b.eq	4162ec <_obstack_memory_used@@Base+0x894>  // b.none
  416184:	ldr	x0, [x22, #112]
  416188:	add	w9, w8, #0x1
  41618c:	sxtw	x8, w8
  416190:	add	x8, x0, x8, lsl #6
  416194:	mov	w10, #0x10                  	// #16
  416198:	mov	x11, #0xffffffffffffffff    	// #-1
  41619c:	str	w9, [x22, #128]
  4161a0:	str	xzr, [x8, #8]!
  4161a4:	stp	x21, x23, [x8, #8]
  4161a8:	stp	xzr, xzr, [x8, #32]
  4161ac:	str	w10, [x8, #48]
  4161b0:	str	xzr, [x8, #24]
  4161b4:	str	x11, [x8, #56]
  4161b8:	str	x8, [x21]
  4161bc:	cbz	x23, 416310 <_obstack_memory_used@@Base+0x8b8>
  4161c0:	str	x8, [x23]
  4161c4:	cbz	x23, 416310 <_obstack_memory_used@@Base+0x8b8>
  4161c8:	cbz	x8, 416310 <_obstack_memory_used@@Base+0x8b8>
  4161cc:	str	x8, [x20, #104]
  4161d0:	ldr	x21, [x19]
  4161d4:	ldr	x8, [x21, #8]
  4161d8:	lsl	x0, x8, #3
  4161dc:	bl	402730 <malloc@plt>
  4161e0:	ldr	x8, [x21, #8]
  4161e4:	str	x0, [x21, #24]
  4161e8:	lsl	x0, x8, #3
  4161ec:	bl	402730 <malloc@plt>
  4161f0:	ldr	x8, [x21, #8]
  4161f4:	str	x0, [x21, #32]
  4161f8:	add	x8, x8, x8, lsl #1
  4161fc:	lsl	x0, x8, #3
  416200:	bl	402730 <malloc@plt>
  416204:	ldr	x8, [x21, #8]
  416208:	str	x0, [x21, #40]
  41620c:	add	x8, x8, x8, lsl #1
  416210:	lsl	x0, x8, #3
  416214:	bl	402730 <malloc@plt>
  416218:	ldr	x9, [x21, #24]
  41621c:	str	x0, [x21, #48]
  416220:	cbz	x9, 416338 <_obstack_memory_used@@Base+0x8e0>
  416224:	ldr	x9, [x21, #32]
  416228:	cbz	x9, 416338 <_obstack_memory_used@@Base+0x8e0>
  41622c:	mov	x8, x0
  416230:	mov	w0, #0xc                   	// #12
  416234:	cbz	x8, 41633c <_obstack_memory_used@@Base+0x8e4>
  416238:	ldr	x8, [x21, #40]
  41623c:	cbz	x8, 41633c <_obstack_memory_used@@Base+0x8e4>
  416240:	ldr	x22, [x19, #48]
  416244:	lsl	x0, x22, #3
  416248:	bl	402730 <malloc@plt>
  41624c:	str	x0, [x21, #224]
  416250:	cbz	x0, 416570 <_obstack_memory_used@@Base+0xb18>
  416254:	cbz	x22, 4163b8 <_obstack_memory_used@@Base+0x960>
  416258:	cmp	x22, #0x4
  41625c:	b.cs	416268 <_obstack_memory_used@@Base+0x810>  // b.hs, b.nlast
  416260:	mov	x8, xzr
  416264:	b	4163a8 <_obstack_memory_used@@Base+0x950>
  416268:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  41626c:	ldr	q0, [x10, #832]
  416270:	mov	w10, #0x2                   	// #2
  416274:	and	x8, x22, #0xfffffffffffffffc
  416278:	dup	v1.2d, x10
  41627c:	mov	w10, #0x4                   	// #4
  416280:	add	x9, x0, #0x10
  416284:	dup	v2.2d, x10
  416288:	mov	x10, x8
  41628c:	add	v3.2d, v0.2d, v1.2d
  416290:	stp	q0, q3, [x9, #-16]
  416294:	add	v0.2d, v0.2d, v2.2d
  416298:	subs	x10, x10, #0x4
  41629c:	add	x9, x9, #0x20
  4162a0:	b.ne	41628c <_obstack_memory_used@@Base+0x834>  // b.any
  4162a4:	b	4163b0 <_obstack_memory_used@@Base+0x958>
  4162a8:	mov	w1, #0xe8                  	// #232
  4162ac:	mov	x0, x20
  4162b0:	bl	402870 <realloc@plt>
  4162b4:	cbz	x0, 416320 <_obstack_memory_used@@Base+0x8c8>
  4162b8:	mov	x20, x0
  4162bc:	mov	w8, #0xe8                  	// #232
  4162c0:	stp	x0, x8, [x19]
  4162c4:	b	415b9c <_obstack_memory_used@@Base+0x144>
  4162c8:	mov	w0, #0x3c8                 	// #968
  4162cc:	bl	402730 <malloc@plt>
  4162d0:	cbz	x0, 416328 <_obstack_memory_used@@Base+0x8d0>
  4162d4:	ldr	x9, [x22, #112]
  4162d8:	mov	w8, wzr
  4162dc:	str	x9, [x0]
  4162e0:	str	x0, [x22, #112]
  4162e4:	str	wzr, [x22, #128]
  4162e8:	b	416140 <_obstack_memory_used@@Base+0x6e8>
  4162ec:	mov	w0, #0x3c8                 	// #968
  4162f0:	bl	402730 <malloc@plt>
  4162f4:	cbz	x0, 416310 <_obstack_memory_used@@Base+0x8b8>
  4162f8:	ldr	x9, [x22, #112]
  4162fc:	mov	w8, wzr
  416300:	str	x9, [x0]
  416304:	str	x0, [x22, #112]
  416308:	str	wzr, [x22, #128]
  41630c:	b	416188 <_obstack_memory_used@@Base+0x730>
  416310:	mov	w8, #0xc                   	// #12
  416314:	stur	w8, [x29, #-44]
  416318:	str	xzr, [x20, #104]
  41631c:	b	416340 <_obstack_memory_used@@Base+0x8e8>
  416320:	mov	w21, #0xc                   	// #12
  416324:	b	416d18 <_obstack_memory_used@@Base+0x12c0>
  416328:	mov	x23, xzr
  41632c:	mov	x8, x23
  416330:	cbnz	x21, 416178 <_obstack_memory_used@@Base+0x720>
  416334:	b	4161c4 <_obstack_memory_used@@Base+0x76c>
  416338:	mov	w0, #0xc                   	// #12
  41633c:	stur	w0, [x29, #-44]
  416340:	ldr	x21, [x19]
  416344:	ldr	x0, [x21, #112]
  416348:	cbz	x0, 41635c <_obstack_memory_used@@Base+0x904>
  41634c:	ldr	x22, [x0]
  416350:	bl	402a10 <free@plt>
  416354:	mov	x0, x22
  416358:	cbnz	x22, 41634c <_obstack_memory_used@@Base+0x8f4>
  41635c:	ldr	x0, [x21, #32]
  416360:	mov	w8, #0xf                   	// #15
  416364:	str	w8, [x21, #128]
  416368:	stp	xzr, xzr, [x21, #104]
  41636c:	bl	402a10 <free@plt>
  416370:	str	xzr, [x21, #32]
  416374:	ldr	x0, [sp, #24]
  416378:	bl	402a10 <free@plt>
  41637c:	ldr	x0, [sp, #32]
  416380:	bl	402a10 <free@plt>
  416384:	ldrb	w8, [sp, #147]
  416388:	cbz	w8, 416394 <_obstack_memory_used@@Base+0x93c>
  41638c:	ldr	x0, [sp, #16]
  416390:	bl	402a10 <free@plt>
  416394:	mov	x0, x20
  416398:	bl	417528 <_obstack_memory_used@@Base+0x1ad0>
  41639c:	stp	xzr, xzr, [x19]
  4163a0:	ldur	w21, [x29, #-44]
  4163a4:	b	416d18 <_obstack_memory_used@@Base+0x12c0>
  4163a8:	str	x8, [x0, x8, lsl #3]
  4163ac:	add	x8, x8, #0x1
  4163b0:	cmp	x22, x8
  4163b4:	b.ne	4163a8 <_obstack_memory_used@@Base+0x950>  // b.any
  4163b8:	ldr	x9, [x21, #104]
  4163bc:	ldrb	w8, [x9, #48]
  4163c0:	cmp	w8, #0x11
  4163c4:	b.eq	4163fc <_obstack_memory_used@@Base+0x9a4>  // b.none
  4163c8:	cmp	w8, #0x4
  4163cc:	b.ne	41644c <_obstack_memory_used@@Base+0x9f4>  // b.any
  4163d0:	ldr	x8, [x9, #40]
  4163d4:	mov	w11, #0x1                   	// #1
  4163d8:	sbfiz	x8, x8, #3, #32
  4163dc:	ldr	x8, [x0, x8]
  4163e0:	str	x8, [x9, #40]
  4163e4:	ldr	x10, [x21, #160]
  4163e8:	lsl	w8, w11, w8
  4163ec:	sxtw	x8, w8
  4163f0:	orr	x8, x10, x8
  4163f4:	str	x8, [x21, #160]
  4163f8:	b	41644c <_obstack_memory_used@@Base+0x9f4>
  4163fc:	ldr	x8, [x9, #8]
  416400:	cbz	x8, 41644c <_obstack_memory_used@@Base+0x9f4>
  416404:	ldrb	w10, [x8, #48]
  416408:	cmp	w10, #0x11
  41640c:	b.ne	41644c <_obstack_memory_used@@Base+0x9f4>  // b.any
  416410:	ldr	x10, [x8, #8]
  416414:	ldr	x8, [x8, #40]
  416418:	str	x10, [x9, #8]
  41641c:	cbz	x10, 416424 <_obstack_memory_used@@Base+0x9cc>
  416420:	str	x9, [x10]
  416424:	ldr	x10, [x9, #40]
  416428:	cmp	x8, #0x3f
  41642c:	ldr	x10, [x0, x10, lsl #3]
  416430:	str	x10, [x0, x8, lsl #3]
  416434:	b.gt	41644c <_obstack_memory_used@@Base+0x9f4>
  416438:	ldr	x10, [x21, #160]
  41643c:	mov	w11, #0x1                   	// #1
  416440:	lsl	x8, x11, x8
  416444:	bic	x8, x10, x8
  416448:	b	4163f4 <_obstack_memory_used@@Base+0x99c>
  41644c:	mov	w8, #0x1                   	// #1
  416450:	ldr	x10, [x9, #8]
  416454:	cbnz	x10, 416480 <_obstack_memory_used@@Base+0xa28>
  416458:	mov	x11, xzr
  41645c:	b	416468 <_obstack_memory_used@@Base+0xa10>
  416460:	ldr	x9, [x11]
  416464:	cbz	x9, 41652c <_obstack_memory_used@@Base+0xad4>
  416468:	ldr	x10, [x9, #16]
  41646c:	mov	x12, x11
  416470:	mov	x11, x9
  416474:	cmp	x10, x12
  416478:	b.eq	416460 <_obstack_memory_used@@Base+0xa08>  // b.none
  41647c:	cbz	x10, 416460 <_obstack_memory_used@@Base+0xa08>
  416480:	ldrb	w9, [x10, #48]
  416484:	cmp	w9, #0x11
  416488:	b.eq	4164d0 <_obstack_memory_used@@Base+0xa78>  // b.none
  41648c:	cmp	w9, #0x4
  416490:	mov	x9, x10
  416494:	b.ne	416450 <_obstack_memory_used@@Base+0x9f8>  // b.any
  416498:	ldr	x11, [x21, #224]
  41649c:	mov	x9, x10
  4164a0:	cbz	x11, 416450 <_obstack_memory_used@@Base+0x9f8>
  4164a4:	ldr	x9, [x10, #40]
  4164a8:	sbfiz	x9, x9, #3, #32
  4164ac:	ldr	x9, [x11, x9]
  4164b0:	str	x9, [x10, #40]
  4164b4:	ldr	x11, [x21, #160]
  4164b8:	lsl	w9, w8, w9
  4164bc:	sxtw	x9, w9
  4164c0:	orr	x9, x11, x9
  4164c4:	str	x9, [x21, #160]
  4164c8:	mov	x9, x10
  4164cc:	b	416450 <_obstack_memory_used@@Base+0x9f8>
  4164d0:	ldr	x11, [x10, #8]
  4164d4:	mov	x9, x10
  4164d8:	cbz	x11, 416450 <_obstack_memory_used@@Base+0x9f8>
  4164dc:	ldrb	w9, [x11, #48]
  4164e0:	cmp	w9, #0x11
  4164e4:	mov	x9, x10
  4164e8:	b.ne	416450 <_obstack_memory_used@@Base+0x9f8>  // b.any
  4164ec:	ldr	x9, [x11, #8]
  4164f0:	ldr	x11, [x11, #40]
  4164f4:	str	x9, [x10, #8]
  4164f8:	cbz	x9, 416500 <_obstack_memory_used@@Base+0xaa8>
  4164fc:	str	x10, [x9]
  416500:	ldr	x9, [x21, #224]
  416504:	ldr	x12, [x10, #40]
  416508:	cmp	x11, #0x3f
  41650c:	ldr	x12, [x9, x12, lsl #3]
  416510:	str	x12, [x9, x11, lsl #3]
  416514:	mov	x9, x10
  416518:	b.gt	416450 <_obstack_memory_used@@Base+0x9f8>
  41651c:	ldr	x9, [x21, #160]
  416520:	lsl	x11, x8, x11
  416524:	bic	x9, x9, x11
  416528:	b	4164c4 <_obstack_memory_used@@Base+0xa6c>
  41652c:	ldr	x8, [x19, #48]
  416530:	cbz	x8, 416558 <_obstack_memory_used@@Base+0xb00>
  416534:	ldr	x0, [x21, #224]
  416538:	mov	x9, xzr
  41653c:	ldr	x10, [x0, x9, lsl #3]
  416540:	cmp	x9, x10
  416544:	b.ne	416560 <_obstack_memory_used@@Base+0xb08>  // b.any
  416548:	add	x9, x9, #0x1
  41654c:	cmp	x8, x9
  416550:	b.ne	41653c <_obstack_memory_used@@Base+0xae4>  // b.any
  416554:	b	416568 <_obstack_memory_used@@Base+0xb10>
  416558:	ldr	x0, [x21, #224]
  41655c:	b	416568 <_obstack_memory_used@@Base+0xb10>
  416560:	cmp	x8, x9
  416564:	b.ne	416570 <_obstack_memory_used@@Base+0xb18>  // b.any
  416568:	bl	402a10 <free@plt>
  41656c:	str	xzr, [x21, #224]
  416570:	ldr	x8, [x21, #104]
  416574:	mov	x22, x8
  416578:	ldr	x8, [x8, #8]
  41657c:	cbnz	x8, 416574 <_obstack_memory_used@@Base+0xb1c>
  416580:	ldr	x8, [x22, #16]
  416584:	cbnz	x8, 416574 <_obstack_memory_used@@Base+0xb1c>
  416588:	mov	x2, xzr
  41658c:	b	416598 <_obstack_memory_used@@Base+0xb40>
  416590:	ldr	x2, [x9, #8]
  416594:	mov	x22, x9
  416598:	stur	wzr, [x29, #-40]
  41659c:	cbz	x2, 4165c4 <_obstack_memory_used@@Base+0xb6c>
  4165a0:	ldrb	w8, [x2, #48]
  4165a4:	cmp	w8, #0x11
  4165a8:	b.ne	4165c4 <_obstack_memory_used@@Base+0xb6c>  // b.any
  4165ac:	sub	x0, x29, #0x28
  4165b0:	mov	x1, x19
  4165b4:	bl	41e908 <_obstack_memory_used@@Base+0x8eb0>
  4165b8:	str	x0, [x22, #8]
  4165bc:	cbz	x0, 4165c4 <_obstack_memory_used@@Base+0xb6c>
  4165c0:	str	x22, [x0]
  4165c4:	ldr	x2, [x22, #16]
  4165c8:	cbz	x2, 4165f0 <_obstack_memory_used@@Base+0xb98>
  4165cc:	ldrb	w8, [x2, #48]
  4165d0:	cmp	w8, #0x11
  4165d4:	b.ne	4165f0 <_obstack_memory_used@@Base+0xb98>  // b.any
  4165d8:	sub	x0, x29, #0x28
  4165dc:	mov	x1, x19
  4165e0:	bl	41e908 <_obstack_memory_used@@Base+0x8eb0>
  4165e4:	str	x0, [x22, #16]
  4165e8:	cbz	x0, 4165f0 <_obstack_memory_used@@Base+0xb98>
  4165ec:	str	x22, [x0]
  4165f0:	ldur	w0, [x29, #-40]
  4165f4:	cbnz	w0, 41633c <_obstack_memory_used@@Base+0x8e4>
  4165f8:	ldr	x9, [x22]
  4165fc:	cbz	x9, 416614 <_obstack_memory_used@@Base+0xbbc>
  416600:	ldr	x8, [x9, #16]
  416604:	cmp	x8, x22
  416608:	b.eq	416590 <_obstack_memory_used@@Base+0xb38>  // b.none
  41660c:	cbz	x8, 416590 <_obstack_memory_used@@Base+0xb38>
  416610:	b	416574 <_obstack_memory_used@@Base+0xb1c>
  416614:	ldr	x8, [x21, #104]
  416618:	mov	x22, x8
  41661c:	ldr	x8, [x8, #8]
  416620:	cbnz	x8, 416618 <_obstack_memory_used@@Base+0xbc0>
  416624:	ldr	x8, [x22, #16]
  416628:	cbnz	x8, 416618 <_obstack_memory_used@@Base+0xbc0>
  41662c:	ldrb	w8, [x22, #48]
  416630:	cmp	w8, #0x10
  416634:	b.ne	416650 <_obstack_memory_used@@Base+0xbf8>  // b.any
  416638:	ldr	x8, [x22, #8]
  41663c:	ldr	x9, [x8, #24]
  416640:	str	x9, [x22, #24]
  416644:	ldr	x8, [x8, #56]
  416648:	str	x8, [x22, #56]
  41664c:	b	416690 <_obstack_memory_used@@Base+0xc38>
  416650:	ldp	x1, x2, [x22, #40]
  416654:	mov	x0, x21
  416658:	str	x22, [x22, #24]
  41665c:	bl	41eba0 <_obstack_memory_used@@Base+0x9148>
  416660:	cmn	x0, #0x1
  416664:	str	x0, [x22, #56]
  416668:	b.eq	416338 <_obstack_memory_used@@Base+0x8e0>  // b.none
  41666c:	ldrb	w8, [x22, #48]
  416670:	cmp	w8, #0xc
  416674:	b.ne	416690 <_obstack_memory_used@@Base+0xc38>  // b.any
  416678:	ldr	x8, [x21]
  41667c:	ldr	w9, [x22, #40]
  416680:	add	x8, x8, x0, lsl #4
  416684:	ldr	w10, [x8, #8]
  416688:	bfi	w10, w9, #8, #10
  41668c:	str	w10, [x8, #8]
  416690:	ldr	x9, [x22]
  416694:	cbz	x9, 4166b4 <_obstack_memory_used@@Base+0xc5c>
  416698:	ldr	x8, [x9, #16]
  41669c:	cmp	x8, x22
  4166a0:	mov	x22, x9
  4166a4:	b.eq	41662c <_obstack_memory_used@@Base+0xbd4>  // b.none
  4166a8:	mov	x22, x9
  4166ac:	cbz	x8, 41662c <_obstack_memory_used@@Base+0xbd4>
  4166b0:	b	416618 <_obstack_memory_used@@Base+0xbc0>
  4166b4:	ldr	x22, [x21, #104]
  4166b8:	ldrb	w8, [x22, #48]
  4166bc:	cmp	w8, #0x10
  4166c0:	b.eq	4166d8 <_obstack_memory_used@@Base+0xc80>  // b.none
  4166c4:	cmp	w8, #0xb
  4166c8:	b.ne	4166e8 <_obstack_memory_used@@Base+0xc90>  // b.any
  4166cc:	ldr	x8, [x22, #8]
  4166d0:	str	x22, [x8, #32]
  4166d4:	b	416708 <_obstack_memory_used@@Base+0xcb0>
  4166d8:	ldp	x8, x9, [x22, #8]
  4166dc:	ldr	x10, [x9, #24]
  4166e0:	str	x10, [x8, #32]
  4166e4:	b	416700 <_obstack_memory_used@@Base+0xca8>
  4166e8:	ldr	x8, [x22, #8]
  4166ec:	cbz	x8, 4166f8 <_obstack_memory_used@@Base+0xca0>
  4166f0:	ldr	x9, [x22, #32]
  4166f4:	str	x9, [x8, #32]
  4166f8:	ldr	x9, [x22, #16]
  4166fc:	cbz	x9, 416708 <_obstack_memory_used@@Base+0xcb0>
  416700:	ldr	x10, [x22, #32]
  416704:	str	x10, [x9, #32]
  416708:	mov	x10, x22
  41670c:	b	416728 <_obstack_memory_used@@Base+0xcd0>
  416710:	ldp	x8, x10, [x9, #8]
  416714:	ldr	x11, [x10, #24]
  416718:	str	x11, [x8, #32]
  41671c:	ldr	x11, [x9, #32]
  416720:	str	x11, [x10, #32]
  416724:	mov	x10, x9
  416728:	mov	x9, x8
  41672c:	cbnz	x8, 416754 <_obstack_memory_used@@Base+0xcfc>
  416730:	b	41673c <_obstack_memory_used@@Base+0xce4>
  416734:	ldr	x10, [x8]
  416738:	cbz	x10, 4167a4 <_obstack_memory_used@@Base+0xd4c>
  41673c:	ldr	x9, [x10, #16]
  416740:	mov	x11, x8
  416744:	mov	x8, x10
  416748:	cmp	x9, x11
  41674c:	b.eq	416734 <_obstack_memory_used@@Base+0xcdc>  // b.none
  416750:	cbz	x9, 416734 <_obstack_memory_used@@Base+0xcdc>
  416754:	ldrb	w8, [x9, #48]
  416758:	cmp	w8, #0x10
  41675c:	b.eq	416710 <_obstack_memory_used@@Base+0xcb8>  // b.none
  416760:	cmp	w8, #0xb
  416764:	b.ne	416778 <_obstack_memory_used@@Base+0xd20>  // b.any
  416768:	ldr	x8, [x9, #8]
  41676c:	mov	x10, x9
  416770:	str	x9, [x8, #32]
  416774:	b	416728 <_obstack_memory_used@@Base+0xcd0>
  416778:	ldr	x8, [x9, #8]
  41677c:	cbz	x8, 416788 <_obstack_memory_used@@Base+0xd30>
  416780:	ldr	x10, [x9, #32]
  416784:	str	x10, [x8, #32]
  416788:	ldr	x11, [x9, #16]
  41678c:	mov	x10, x9
  416790:	cbz	x11, 416728 <_obstack_memory_used@@Base+0xcd0>
  416794:	ldr	x10, [x9, #32]
  416798:	str	x10, [x11, #32]
  41679c:	mov	x10, x9
  4167a0:	b	416728 <_obstack_memory_used@@Base+0xcd0>
  4167a4:	mov	x0, x21
  4167a8:	mov	x1, x22
  4167ac:	bl	41e75c <_obstack_memory_used@@Base+0x8d04>
  4167b0:	cbz	w0, 4167cc <_obstack_memory_used@@Base+0xd74>
  4167b4:	b	41633c <_obstack_memory_used@@Base+0x8e4>
  4167b8:	mov	x0, x21
  4167bc:	mov	x1, x23
  4167c0:	bl	41e75c <_obstack_memory_used@@Base+0x8d04>
  4167c4:	mov	x22, x23
  4167c8:	cbnz	w0, 41633c <_obstack_memory_used@@Base+0x8e4>
  4167cc:	ldr	x23, [x22, #8]
  4167d0:	cbnz	x23, 4167b8 <_obstack_memory_used@@Base+0xd60>
  4167d4:	mov	x8, xzr
  4167d8:	b	4167e4 <_obstack_memory_used@@Base+0xd8c>
  4167dc:	ldr	x22, [x8]
  4167e0:	cbz	x22, 416800 <_obstack_memory_used@@Base+0xda8>
  4167e4:	ldr	x23, [x22, #16]
  4167e8:	mov	x9, x8
  4167ec:	mov	x8, x22
  4167f0:	cmp	x23, x9
  4167f4:	b.eq	4167dc <_obstack_memory_used@@Base+0xd84>  // b.none
  4167f8:	cbz	x23, 4167dc <_obstack_memory_used@@Base+0xd84>
  4167fc:	b	4167b8 <_obstack_memory_used@@Base+0xd60>
  416800:	mov	w24, wzr
  416804:	mov	w23, #0x18                  	// #24
  416808:	ldr	x8, [x21, #48]
  41680c:	madd	x8, x22, x23, x8
  416810:	ldr	x8, [x8, #8]
  416814:	cbnz	x8, 41684c <_obstack_memory_used@@Base+0xdf4>
  416818:	sub	x0, x29, #0x28
  41681c:	mov	w3, #0x1                   	// #1
  416820:	mov	x1, x21
  416824:	mov	x2, x22
  416828:	bl	41ed6c <_obstack_memory_used@@Base+0x9314>
  41682c:	cbnz	w0, 41633c <_obstack_memory_used@@Base+0x8e4>
  416830:	ldr	x8, [x21, #48]
  416834:	madd	x8, x22, x23, x8
  416838:	ldr	x8, [x8, #8]
  41683c:	cbnz	x8, 41684c <_obstack_memory_used@@Base+0xdf4>
  416840:	ldur	x0, [x29, #-24]
  416844:	bl	402a10 <free@plt>
  416848:	mov	w24, #0x1                   	// #1
  41684c:	ldr	x9, [x21, #16]
  416850:	add	x8, x22, #0x1
  416854:	mov	w10, w24
  416858:	cmp	x8, x9
  41685c:	cset	w11, ne  // ne = any
  416860:	csinc	x22, xzr, x22, eq  // eq = none
  416864:	and	w24, w24, w11
  416868:	tbnz	w10, #0, 416808 <_obstack_memory_used@@Base+0xdb0>
  41686c:	cmp	x8, x9
  416870:	b.ne	416808 <_obstack_memory_used@@Base+0xdb0>  // b.any
  416874:	ldrb	w9, [x19, #56]
  416878:	tbnz	w9, #4, 41688c <_obstack_memory_used@@Base+0xe34>
  41687c:	ldr	x9, [x19, #48]
  416880:	cbz	x9, 41688c <_obstack_memory_used@@Base+0xe34>
  416884:	ldrb	w9, [x21, #176]
  416888:	tbnz	w9, #0, 416894 <_obstack_memory_used@@Base+0xe3c>
  41688c:	ldr	x9, [x21, #152]
  416890:	cbz	x9, 4169a8 <_obstack_memory_used@@Base+0xf50>
  416894:	add	x8, x8, x8, lsl #1
  416898:	lsl	x0, x8, #3
  41689c:	bl	402730 <malloc@plt>
  4168a0:	str	x0, [x21, #56]
  4168a4:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  4168a8:	ldr	x8, [x21, #16]
  4168ac:	cbz	x8, 4169a8 <_obstack_memory_used@@Base+0xf50>
  4168b0:	stp	xzr, xzr, [x0]
  4168b4:	str	xzr, [x0, #16]
  4168b8:	ldr	x9, [x21, #16]
  4168bc:	cmp	x9, #0x2
  4168c0:	b.cc	4168f0 <_obstack_memory_used@@Base+0xe98>  // b.lo, b.ul, b.last
  4168c4:	mov	w8, #0x1                   	// #1
  4168c8:	mov	w10, #0x18                  	// #24
  4168cc:	ldr	x9, [x21, #56]
  4168d0:	add	x8, x8, #0x1
  4168d4:	add	x9, x9, x10
  4168d8:	stp	xzr, xzr, [x9]
  4168dc:	str	xzr, [x9, #16]
  4168e0:	ldr	x9, [x21, #16]
  4168e4:	add	x10, x10, #0x18
  4168e8:	cmp	x8, x9
  4168ec:	b.cc	4168cc <_obstack_memory_used@@Base+0xe74>  // b.lo, b.ul, b.last
  4168f0:	cbz	x9, 4169a8 <_obstack_memory_used@@Base+0xf50>
  4168f4:	ldr	x8, [x21, #48]
  4168f8:	mov	x22, xzr
  4168fc:	mov	w23, #0x18                  	// #24
  416900:	b	416914 <_obstack_memory_used@@Base+0xebc>
  416904:	ldr	x9, [x21, #16]
  416908:	add	x22, x22, #0x1
  41690c:	cmp	x22, x9
  416910:	b.cs	4169a8 <_obstack_memory_used@@Base+0xf50>  // b.hs, b.nlast
  416914:	madd	x10, x22, x23, x8
  416918:	ldr	x11, [x10, #8]
  41691c:	cmp	x11, #0x1
  416920:	b.lt	416908 <_obstack_memory_used@@Base+0xeb0>  // b.tstop
  416924:	ldr	x24, [x10, #16]
  416928:	mov	x26, xzr
  41692c:	b	416958 <_obstack_memory_used@@Base+0xf00>
  416930:	madd	x10, x11, x23, x10
  416934:	ldr	x0, [x10, #16]
  416938:	add	x10, x9, #0x1
  41693c:	str	x10, [x27]
  416940:	str	x22, [x0, x9, lsl #3]
  416944:	madd	x9, x22, x23, x8
  416948:	ldr	x9, [x9, #8]
  41694c:	add	x26, x26, #0x1
  416950:	cmp	x26, x9
  416954:	b.ge	416904 <_obstack_memory_used@@Base+0xeac>  // b.tcont
  416958:	ldr	x10, [x21, #56]
  41695c:	ldr	x11, [x24, x26, lsl #3]
  416960:	madd	x12, x11, x23, x10
  416964:	mov	x27, x12
  416968:	ldr	x13, [x12]
  41696c:	ldr	x9, [x27, #8]!
  416970:	cmp	x13, x9
  416974:	b.ne	416930 <_obstack_memory_used@@Base+0xed8>  // b.any
  416978:	lsl	x8, x13, #1
  41697c:	add	x8, x8, #0x2
  416980:	str	x8, [x12]
  416984:	madd	x28, x11, x23, x10
  416988:	ldr	x0, [x28, #16]!
  41698c:	lsl	x1, x8, #3
  416990:	bl	402870 <realloc@plt>
  416994:	cbz	x0, 416338 <_obstack_memory_used@@Base+0x8e0>
  416998:	str	x0, [x28]
  41699c:	ldr	x9, [x27]
  4169a0:	ldr	x8, [x21, #48]
  4169a4:	b	416938 <_obstack_memory_used@@Base+0xee0>
  4169a8:	stur	wzr, [x29, #-44]
  4169ac:	cbnz	x25, 416aa0 <_obstack_memory_used@@Base+0x1048>
  4169b0:	ldrb	w9, [x20, #176]
  4169b4:	tbz	w9, #2, 416aa0 <_obstack_memory_used@@Base+0x1048>
  4169b8:	ldr	x8, [x19, #40]
  4169bc:	cbnz	x8, 416aa0 <_obstack_memory_used@@Base+0x1048>
  4169c0:	ldr	x11, [x20, #16]
  4169c4:	cbz	x11, 416a6c <_obstack_memory_used@@Base+0x1014>
  4169c8:	ldr	x10, [x20]
  4169cc:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x115a8>
  4169d0:	mov	w8, wzr
  4169d4:	mov	w12, wzr
  4169d8:	add	x13, x13, #0xa80
  4169dc:	mov	w14, #0x1                   	// #1
  4169e0:	mov	w15, #0x8b                  	// #139
  4169e4:	mov	x16, x10
  4169e8:	b	416a08 <_obstack_memory_used@@Base+0xfb0>
  4169ec:	ldrsb	w17, [x16]
  4169f0:	cmp	w17, #0x0
  4169f4:	cset	w17, lt  // lt = tstop
  4169f8:	orr	w12, w12, w17
  4169fc:	subs	x11, x11, #0x1
  416a00:	add	x16, x16, #0x10
  416a04:	b.eq	416d3c <_obstack_memory_used@@Base+0x12e4>  // b.none
  416a08:	ldrb	w17, [x16, #8]
  416a0c:	sub	w17, w17, #0x1
  416a10:	cmp	w17, #0xb
  416a14:	b.hi	416dc0 <_obstack_memory_used@@Base+0x1368>  // b.pmore
  416a18:	adr	x18, 4169ec <_obstack_memory_used@@Base+0xf94>
  416a1c:	ldrb	w0, [x13, x17]
  416a20:	add	x18, x18, x0, lsl #2
  416a24:	br	x18
  416a28:	ldr	x17, [x16]
  416a2c:	ldr	x18, [x17, #16]
  416a30:	cbnz	x18, 416aa0 <_obstack_memory_used@@Base+0x1048>
  416a34:	ldr	x17, [x17, #24]
  416a38:	cbz	x17, 4169fc <_obstack_memory_used@@Base+0xfa4>
  416a3c:	b	416aa0 <_obstack_memory_used@@Base+0x1048>
  416a40:	ldr	w17, [x16]
  416a44:	sub	w17, w17, #0x10
  416a48:	ror	w17, w17, #4
  416a4c:	cmp	w17, #0x7
  416a50:	b.hi	416aa0 <_obstack_memory_used@@Base+0x1048>  // b.pmore
  416a54:	lsl	w17, w14, w17
  416a58:	tst	w17, w15
  416a5c:	b.ne	4169fc <_obstack_memory_used@@Base+0xfa4>  // b.any
  416a60:	b	416aa0 <_obstack_memory_used@@Base+0x1048>
  416a64:	mov	w8, #0x1                   	// #1
  416a68:	b	4169fc <_obstack_memory_used@@Base+0xfa4>
  416a6c:	mov	w8, wzr
  416a70:	ldr	x10, [x20, #152]
  416a74:	mov	w12, #0x2                   	// #2
  416a78:	and	w9, w9, #0xfffffff9
  416a7c:	mov	w11, #0x1                   	// #1
  416a80:	cmp	x10, #0x0
  416a84:	cset	w10, gt
  416a88:	orr	w8, w8, w10
  416a8c:	tst	w8, #0x1
  416a90:	csel	w8, w12, wzr, ne  // ne = any
  416a94:	orr	w8, w8, w9
  416a98:	str	w11, [x20, #180]
  416a9c:	strb	w8, [x20, #176]
  416aa0:	ldr	x8, [x20, #104]
  416aa4:	ldr	x24, [x20, #48]
  416aa8:	ldr	x8, [x8, #24]
  416aac:	ldr	x23, [x8, #56]
  416ab0:	mov	w8, #0x18                  	// #24
  416ab4:	str	x23, [x20, #144]
  416ab8:	madd	x8, x23, x8, x24
  416abc:	ldr	x22, [x8, #8]
  416ac0:	stur	x22, [x29, #-32]
  416ac4:	ldr	x25, [x8, #8]
  416ac8:	cmp	x25, #0x1
  416acc:	b.lt	416c10 <_obstack_memory_used@@Base+0x11b8>  // b.tstop
  416ad0:	lsl	x0, x22, #3
  416ad4:	stur	x22, [x29, #-40]
  416ad8:	bl	402730 <malloc@plt>
  416adc:	stur	x0, [x29, #-24]
  416ae0:	cbz	x0, 416db0 <_obstack_memory_used@@Base+0x1358>
  416ae4:	mov	w8, #0x18                  	// #24
  416ae8:	madd	x8, x23, x8, x24
  416aec:	ldr	x1, [x8, #16]
  416af0:	lsl	x2, x25, #3
  416af4:	mov	x21, x0
  416af8:	bl	402580 <memcpy@plt>
  416afc:	cmp	x22, #0x1
  416b00:	stur	wzr, [x29, #-12]
  416b04:	b.lt	416c1c <_obstack_memory_used@@Base+0x11c4>  // b.tstop
  416b08:	ldr	x8, [x20, #152]
  416b0c:	cmp	x8, #0x1
  416b10:	b.lt	416c1c <_obstack_memory_used@@Base+0x11c4>  // b.tstop
  416b14:	mov	x8, xzr
  416b18:	mov	w23, #0x18                  	// #24
  416b1c:	ldr	x9, [x21, x8, lsl #3]
  416b20:	ldr	x10, [x20]
  416b24:	add	x11, x10, x9, lsl #4
  416b28:	ldrb	w11, [x11, #8]
  416b2c:	cmp	w11, #0x4
  416b30:	b.ne	416bfc <_obstack_memory_used@@Base+0x11a4>  // b.any
  416b34:	cmp	x22, #0x1
  416b38:	b.lt	416b88 <_obstack_memory_used@@Base+0x1130>  // b.tstop
  416b3c:	mov	x11, xzr
  416b40:	add	x12, x10, x9, lsl #4
  416b44:	b	416b54 <_obstack_memory_used@@Base+0x10fc>
  416b48:	add	x11, x11, #0x1
  416b4c:	cmp	x22, x11
  416b50:	b.eq	416bfc <_obstack_memory_used@@Base+0x11a4>  // b.none
  416b54:	ldr	x13, [x21, x11, lsl #3]
  416b58:	add	x14, x10, x13, lsl #4
  416b5c:	ldrb	w14, [x14, #8]
  416b60:	cmp	w14, #0x9
  416b64:	b.ne	416b48 <_obstack_memory_used@@Base+0x10f0>  // b.any
  416b68:	lsl	x13, x13, #4
  416b6c:	ldr	x13, [x10, x13]
  416b70:	ldr	x14, [x12]
  416b74:	cmp	x13, x14
  416b78:	b.ne	416b48 <_obstack_memory_used@@Base+0x10f0>  // b.any
  416b7c:	cmp	x11, x22
  416b80:	b.ne	416b94 <_obstack_memory_used@@Base+0x113c>  // b.any
  416b84:	b	416bfc <_obstack_memory_used@@Base+0x11a4>
  416b88:	mov	x11, xzr
  416b8c:	cmp	x11, x22
  416b90:	b.eq	416bfc <_obstack_memory_used@@Base+0x11a4>  // b.none
  416b94:	ldr	x10, [x20, #40]
  416b98:	madd	x9, x9, x23, x10
  416b9c:	ldr	x9, [x9, #16]
  416ba0:	subs	x10, x22, #0x1
  416ba4:	ldr	x9, [x9]
  416ba8:	b.lt	416be0 <_obstack_memory_used@@Base+0x1188>  // b.tstop
  416bac:	mov	x11, xzr
  416bb0:	b.eq	416bd4 <_obstack_memory_used@@Base+0x117c>  // b.none
  416bb4:	add	x12, x11, x10
  416bb8:	lsr	x12, x12, #1
  416bbc:	ldr	x13, [x21, x12, lsl #3]
  416bc0:	cmp	x13, x9
  416bc4:	csinc	x11, x11, x12, ge  // ge = tcont
  416bc8:	csel	x10, x10, x12, lt  // lt = tstop
  416bcc:	cmp	x11, x10
  416bd0:	b.cc	416bb4 <_obstack_memory_used@@Base+0x115c>  // b.lo, b.ul, b.last
  416bd4:	ldr	x10, [x21, x11, lsl #3]
  416bd8:	cmp	x10, x9
  416bdc:	b.eq	416bfc <_obstack_memory_used@@Base+0x11a4>  // b.none
  416be0:	ldr	x8, [x20, #48]
  416be4:	sub	x0, x29, #0x28
  416be8:	madd	x1, x9, x23, x8
  416bec:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  416bf0:	cbnz	w0, 416cb4 <_obstack_memory_used@@Base+0x125c>
  416bf4:	ldur	x22, [x29, #-32]
  416bf8:	mov	x8, xzr
  416bfc:	add	x8, x8, #0x1
  416c00:	cmp	x8, x22
  416c04:	b.ge	416c1c <_obstack_memory_used@@Base+0x11c4>  // b.tcont
  416c08:	ldur	x21, [x29, #-24]
  416c0c:	b	416b1c <_obstack_memory_used@@Base+0x10c4>
  416c10:	stp	xzr, xzr, [x29, #-40]
  416c14:	stur	xzr, [x29, #-24]
  416c18:	stur	wzr, [x29, #-12]
  416c1c:	sub	x0, x29, #0xc
  416c20:	sub	x2, x29, #0x28
  416c24:	mov	x1, x20
  416c28:	mov	w3, wzr
  416c2c:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  416c30:	str	x0, [x20, #72]
  416c34:	cbz	x0, 416da8 <_obstack_memory_used@@Base+0x1350>
  416c38:	ldrsb	w8, [x0, #104]
  416c3c:	tbnz	w8, #31, 416c4c <_obstack_memory_used@@Base+0x11f4>
  416c40:	stp	x0, x0, [x20, #88]
  416c44:	str	x0, [x20, #80]
  416c48:	b	416ca8 <_obstack_memory_used@@Base+0x1250>
  416c4c:	sub	x0, x29, #0xc
  416c50:	sub	x2, x29, #0x28
  416c54:	mov	w3, #0x1                   	// #1
  416c58:	mov	x1, x20
  416c5c:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  416c60:	str	x0, [x20, #80]
  416c64:	sub	x0, x29, #0xc
  416c68:	sub	x2, x29, #0x28
  416c6c:	mov	w3, #0x2                   	// #2
  416c70:	mov	x1, x20
  416c74:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  416c78:	str	x0, [x20, #88]
  416c7c:	sub	x0, x29, #0xc
  416c80:	sub	x2, x29, #0x28
  416c84:	mov	w3, #0x6                   	// #6
  416c88:	mov	x1, x20
  416c8c:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  416c90:	ldr	x8, [x20, #80]
  416c94:	str	x0, [x20, #96]
  416c98:	cbz	x8, 416da8 <_obstack_memory_used@@Base+0x1350>
  416c9c:	cbz	x0, 416da8 <_obstack_memory_used@@Base+0x1350>
  416ca0:	ldr	x8, [x20, #88]
  416ca4:	cbz	x8, 416da8 <_obstack_memory_used@@Base+0x1350>
  416ca8:	ldur	x0, [x29, #-24]
  416cac:	bl	402a10 <free@plt>
  416cb0:	mov	w0, wzr
  416cb4:	stur	w0, [x29, #-44]
  416cb8:	ldr	x21, [x19]
  416cbc:	ldr	x0, [x21, #112]
  416cc0:	cbz	x0, 416cd4 <_obstack_memory_used@@Base+0x127c>
  416cc4:	ldr	x22, [x0]
  416cc8:	bl	402a10 <free@plt>
  416ccc:	mov	x0, x22
  416cd0:	cbnz	x22, 416cc4 <_obstack_memory_used@@Base+0x126c>
  416cd4:	ldr	x0, [x21, #32]
  416cd8:	mov	w8, #0xf                   	// #15
  416cdc:	str	w8, [x21, #128]
  416ce0:	stp	xzr, xzr, [x21, #104]
  416ce4:	bl	402a10 <free@plt>
  416ce8:	str	xzr, [x21, #32]
  416cec:	ldr	x0, [sp, #24]
  416cf0:	bl	402a10 <free@plt>
  416cf4:	ldr	x0, [sp, #32]
  416cf8:	bl	402a10 <free@plt>
  416cfc:	ldrb	w8, [sp, #147]
  416d00:	cbz	w8, 416d0c <_obstack_memory_used@@Base+0x12b4>
  416d04:	ldr	x0, [sp, #16]
  416d08:	bl	402a10 <free@plt>
  416d0c:	ldur	w8, [x29, #-44]
  416d10:	cbnz	w8, 416394 <_obstack_memory_used@@Base+0x93c>
  416d14:	mov	w21, wzr
  416d18:	mov	w0, w21
  416d1c:	ldp	x20, x19, [sp, #288]
  416d20:	ldp	x22, x21, [sp, #272]
  416d24:	ldp	x24, x23, [sp, #256]
  416d28:	ldp	x26, x25, [sp, #240]
  416d2c:	ldp	x28, x27, [sp, #224]
  416d30:	ldp	x29, x30, [sp, #208]
  416d34:	add	sp, sp, #0x130
  416d38:	ret
  416d3c:	orr	w11, w12, w8
  416d40:	tbz	w11, #0, 416a70 <_obstack_memory_used@@Base+0x1018>
  416d44:	mov	x9, xzr
  416d48:	mov	w11, #0x1                   	// #1
  416d4c:	add	x12, x10, x9
  416d50:	ldr	w13, [x12, #8]
  416d54:	and	w14, w13, #0xff
  416d58:	cmp	w14, #0x5
  416d5c:	b.eq	416d78 <_obstack_memory_used@@Base+0x1320>  // b.none
  416d60:	cmp	w14, #0x1
  416d64:	b.ne	416d84 <_obstack_memory_used@@Base+0x132c>  // b.any
  416d68:	ldrsb	w10, [x10, x9]
  416d6c:	tbz	w10, #31, 416d84 <_obstack_memory_used@@Base+0x132c>
  416d70:	and	w10, w13, #0xffdfffff
  416d74:	b	416d80 <_obstack_memory_used@@Base+0x1328>
  416d78:	and	w10, w13, #0xffffff00
  416d7c:	orr	w10, w10, #0x7
  416d80:	str	w10, [x12, #8]
  416d84:	ldr	x10, [x20, #16]
  416d88:	cmp	x11, x10
  416d8c:	b.cs	416da0 <_obstack_memory_used@@Base+0x1348>  // b.hs, b.nlast
  416d90:	ldr	x10, [x20]
  416d94:	add	x9, x9, #0x10
  416d98:	add	x11, x11, #0x1
  416d9c:	b	416d4c <_obstack_memory_used@@Base+0x12f4>
  416da0:	ldrb	w9, [x20, #176]
  416da4:	b	416a70 <_obstack_memory_used@@Base+0x1018>
  416da8:	ldur	w0, [x29, #-12]
  416dac:	b	416cb4 <_obstack_memory_used@@Base+0x125c>
  416db0:	mov	w0, #0xc                   	// #12
  416db4:	stp	xzr, xzr, [x29, #-40]
  416db8:	stur	w0, [x29, #-12]
  416dbc:	b	416cb4 <_obstack_memory_used@@Base+0x125c>
  416dc0:	bl	402920 <abort@plt>
  416dc4:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x235a8>
  416dc8:	ldr	x8, [x9, #3552]
  416dcc:	str	x0, [x9, #3552]
  416dd0:	mov	x0, x8
  416dd4:	ret
  416dd8:	stp	x29, x30, [sp, #-48]!
  416ddc:	stp	x20, x19, [sp, #32]
  416de0:	ldr	x20, [x0, #32]
  416de4:	str	x21, [sp, #16]
  416de8:	ldr	x21, [x0]
  416dec:	movi	v0.2d, #0x0
  416df0:	stp	q0, q0, [x20, #224]
  416df4:	stp	q0, q0, [x20, #192]
  416df8:	stp	q0, q0, [x20, #160]
  416dfc:	stp	q0, q0, [x20, #128]
  416e00:	stp	q0, q0, [x20, #96]
  416e04:	stp	q0, q0, [x20, #64]
  416e08:	stp	q0, q0, [x20, #32]
  416e0c:	stp	q0, q0, [x20]
  416e10:	ldr	x1, [x21, #72]
  416e14:	mov	x2, x20
  416e18:	mov	x29, sp
  416e1c:	mov	x19, x0
  416e20:	bl	416e94 <_obstack_memory_used@@Base+0x143c>
  416e24:	ldp	x8, x1, [x21, #72]
  416e28:	cmp	x8, x1
  416e2c:	b.eq	416e40 <_obstack_memory_used@@Base+0x13e8>  // b.none
  416e30:	mov	x0, x19
  416e34:	mov	x2, x20
  416e38:	bl	416e94 <_obstack_memory_used@@Base+0x143c>
  416e3c:	ldr	x8, [x21, #72]
  416e40:	ldr	x1, [x21, #88]
  416e44:	cmp	x8, x1
  416e48:	b.eq	416e5c <_obstack_memory_used@@Base+0x1404>  // b.none
  416e4c:	mov	x0, x19
  416e50:	mov	x2, x20
  416e54:	bl	416e94 <_obstack_memory_used@@Base+0x143c>
  416e58:	ldr	x8, [x21, #72]
  416e5c:	ldr	x1, [x21, #96]
  416e60:	cmp	x8, x1
  416e64:	b.eq	416e74 <_obstack_memory_used@@Base+0x141c>  // b.none
  416e68:	mov	x0, x19
  416e6c:	mov	x2, x20
  416e70:	bl	416e94 <_obstack_memory_used@@Base+0x143c>
  416e74:	ldrb	w8, [x19, #56]
  416e78:	ldr	x21, [sp, #16]
  416e7c:	mov	w0, wzr
  416e80:	orr	w8, w8, #0x8
  416e84:	strb	w8, [x19, #56]
  416e88:	ldp	x20, x19, [sp, #32]
  416e8c:	ldp	x29, x30, [sp], #48
  416e90:	ret
  416e94:	sub	sp, sp, #0x1b0
  416e98:	stp	x29, x30, [sp, #336]
  416e9c:	stp	x28, x27, [sp, #352]
  416ea0:	stp	x26, x25, [sp, #368]
  416ea4:	stp	x24, x23, [sp, #384]
  416ea8:	stp	x22, x21, [sp, #400]
  416eac:	stp	x20, x19, [sp, #416]
  416eb0:	ldr	x28, [x0]
  416eb4:	mov	x20, x2
  416eb8:	mov	x25, x0
  416ebc:	add	x29, sp, #0x150
  416ec0:	ldr	w8, [x28, #180]
  416ec4:	cmp	w8, #0x1
  416ec8:	b.ne	416ed8 <_obstack_memory_used@@Base+0x1480>  // b.any
  416ecc:	ldrb	w8, [x25, #26]
  416ed0:	ubfx	w24, w8, #6, #1
  416ed4:	b	416edc <_obstack_memory_used@@Base+0x1484>
  416ed8:	mov	w24, wzr
  416edc:	ldr	x8, [x1, #16]
  416ee0:	cmp	x8, #0x1
  416ee4:	b.lt	417338 <_obstack_memory_used@@Base+0x18e0>  // b.tstop
  416ee8:	add	x8, sp, #0x38
  416eec:	mov	x9, xzr
  416ef0:	add	x10, x20, #0x3
  416ef4:	mov	w26, #0x1                   	// #1
  416ef8:	orr	x8, x8, #0x1
  416efc:	stp	x8, x10, [sp]
  416f00:	stp	x25, x28, [sp, #16]
  416f04:	str	x1, [sp, #40]
  416f08:	b	416f20 <_obstack_memory_used@@Base+0x14c8>
  416f0c:	ldp	x1, x9, [sp, #40]
  416f10:	ldr	x8, [x1, #16]
  416f14:	add	x9, x9, #0x1
  416f18:	cmp	x9, x8
  416f1c:	b.ge	417338 <_obstack_memory_used@@Base+0x18e0>  // b.tcont
  416f20:	ldr	x8, [x1, #24]
  416f24:	ldr	x10, [x28]
  416f28:	str	x9, [sp, #48]
  416f2c:	ldr	x19, [x8, x9, lsl #3]
  416f30:	add	x9, x10, x19, lsl #4
  416f34:	ldrb	w8, [x9, #8]
  416f38:	sub	w11, w8, #0x1
  416f3c:	cmp	w11, #0x6
  416f40:	b.hi	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.pmore
  416f44:	adrp	x14, 427000 <_obstack_memory_used@@Base+0x115a8>
  416f48:	add	x14, x14, #0xa8c
  416f4c:	adr	x12, 416f0c <_obstack_memory_used@@Base+0x14b4>
  416f50:	ldrb	w13, [x14, x11]
  416f54:	add	x12, x12, x13, lsl #2
  416f58:	br	x12
  416f5c:	ldrb	w21, [x9]
  416f60:	strb	w26, [x20, x21]
  416f64:	cbz	w24, 416f78 <_obstack_memory_used@@Base+0x1520>
  416f68:	bl	4026a0 <__ctype_tolower_loc@plt>
  416f6c:	ldr	x8, [x0]
  416f70:	ldrsw	x8, [x8, x21, lsl #2]
  416f74:	strb	w26, [x20, x8]
  416f78:	ldrb	w8, [x25, #26]
  416f7c:	tbz	w8, #6, 416f0c <_obstack_memory_used@@Base+0x14b4>
  416f80:	ldr	w8, [x28, #180]
  416f84:	cmp	w8, #0x2
  416f88:	b.lt	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.tstop
  416f8c:	ldr	x9, [x28]
  416f90:	lsl	x8, x19, #4
  416f94:	add	x10, x19, #0x1
  416f98:	mov	w14, #0x1                   	// #1
  416f9c:	ldrb	w9, [x9, x8]
  416fa0:	movk	w14, #0x20, lsl #16
  416fa4:	strb	w9, [sp, #56]
  416fa8:	ldr	x9, [x28, #16]
  416fac:	cmp	x10, x9
  416fb0:	ldr	x9, [sp]
  416fb4:	b.cs	416ff4 <_obstack_memory_used@@Base+0x159c>  // b.hs, b.nlast
  416fb8:	ldr	x9, [sp]
  416fbc:	ldr	x11, [x28]
  416fc0:	add	w13, w14, #0xfe
  416fc4:	add	x11, x11, x8
  416fc8:	ldr	w12, [x11, #24]
  416fcc:	and	w12, w12, w13
  416fd0:	cmp	w12, w14
  416fd4:	b.ne	416ff4 <_obstack_memory_used@@Base+0x159c>  // b.any
  416fd8:	ldrb	w11, [x11, #16]
  416fdc:	add	x10, x10, #0x1
  416fe0:	add	x8, x8, #0x10
  416fe4:	strb	w11, [x9], #1
  416fe8:	ldr	x11, [x28, #16]
  416fec:	cmp	x10, x11
  416ff0:	b.cc	416fbc <_obstack_memory_used@@Base+0x1564>  // b.lo, b.ul, b.last
  416ff4:	add	x8, sp, #0x38
  416ff8:	sub	x22, x9, x8
  416ffc:	sub	x0, x29, #0xc
  417000:	add	x1, sp, #0x38
  417004:	sub	x3, x29, #0x18
  417008:	mov	x2, x22
  41700c:	stur	xzr, [x29, #-24]
  417010:	bl	415680 <wcrtomb@plt+0x12a20>
  417014:	cmp	x0, x22
  417018:	b.ne	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.any
  41701c:	ldur	w0, [x29, #-12]
  417020:	bl	402c10 <towlower@plt>
  417024:	mov	w1, w0
  417028:	add	x0, sp, #0x38
  41702c:	sub	x2, x29, #0x18
  417030:	bl	402c60 <wcrtomb@plt>
  417034:	cmn	x0, #0x1
  417038:	b.eq	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.none
  41703c:	ldrb	w8, [sp, #56]
  417040:	strb	w26, [x20, x8]
  417044:	b	416f0c <_obstack_memory_used@@Base+0x14b4>
  417048:	lsl	x8, x19, #4
  41704c:	str	x8, [sp, #32]
  417050:	ldr	x8, [x10, x8]
  417054:	ldr	x9, [sp, #8]
  417058:	mov	x22, xzr
  41705c:	ldr	x19, [x8]
  417060:	mov	w8, #0x83                  	// #131
  417064:	b	41708c <_obstack_memory_used@@Base+0x1634>
  417068:	bl	4026a0 <__ctype_tolower_loc@plt>
  41706c:	ldr	x8, [x0]
  417070:	ldr	w8, [x8, x22, lsl #2]
  417074:	strb	w26, [x20, w8, sxtw]
  417078:	add	x22, x22, #0x1
  41707c:	add	w8, w21, #0x1
  417080:	cmp	x22, #0x40
  417084:	add	x9, x27, #0x1
  417088:	b.eq	417120 <_obstack_memory_used@@Base+0x16c8>  // b.none
  41708c:	lsr	x10, x19, x22
  417090:	mov	w21, w8
  417094:	mov	x27, x9
  417098:	tbz	w10, #0, 417078 <_obstack_memory_used@@Base+0x1620>
  41709c:	strb	w26, [x20, x22]
  4170a0:	cbz	w24, 417078 <_obstack_memory_used@@Base+0x1620>
  4170a4:	add	w8, w22, #0x80
  4170a8:	cmp	w8, #0x180
  4170ac:	b.cc	417068 <_obstack_memory_used@@Base+0x1610>  // b.lo, b.ul, b.last
  4170b0:	mov	w8, w22
  4170b4:	b	417074 <_obstack_memory_used@@Base+0x161c>
  4170b8:	ldr	w8, [x28, #180]
  4170bc:	ldr	x21, [x9]
  4170c0:	cmp	w8, #0x2
  4170c4:	b.lt	41725c <_obstack_memory_used@@Base+0x1804>  // b.tstop
  4170c8:	ldr	x8, [x21, #72]
  4170cc:	cbnz	x8, 4170e0 <_obstack_memory_used@@Base+0x1688>
  4170d0:	ldrb	w8, [x21, #32]
  4170d4:	tbnz	w8, #0, 4170e0 <_obstack_memory_used@@Base+0x1688>
  4170d8:	ldr	x8, [x21, #64]
  4170dc:	cbz	x8, 41725c <_obstack_memory_used@@Base+0x1804>
  4170e0:	sturb	wzr, [x29, #-24]
  4170e4:	b	4170f4 <_obstack_memory_used@@Base+0x169c>
  4170e8:	add	w8, w8, #0x1
  4170ec:	sturb	w8, [x29, #-24]
  4170f0:	tbnz	w8, #8, 416f0c <_obstack_memory_used@@Base+0x14b4>
  4170f4:	sub	x1, x29, #0x18
  4170f8:	add	x3, sp, #0x38
  4170fc:	mov	w2, #0x1                   	// #1
  417100:	mov	x0, xzr
  417104:	str	xzr, [sp, #56]
  417108:	bl	415680 <wcrtomb@plt+0x12a20>
  41710c:	ldurb	w8, [x29, #-24]
  417110:	cmn	x0, #0x2
  417114:	b.ne	4170e8 <_obstack_memory_used@@Base+0x1690>  // b.any
  417118:	strb	w26, [x20, x8]
  41711c:	b	4170e8 <_obstack_memory_used@@Base+0x1690>
  417120:	ldr	x8, [x28]
  417124:	ldr	x9, [sp, #32]
  417128:	mov	x25, xzr
  41712c:	ldr	x8, [x8, x9]
  417130:	ldr	x23, [x8, #8]
  417134:	b	417160 <_obstack_memory_used@@Base+0x1708>
  417138:	bl	4026a0 <__ctype_tolower_loc@plt>
  41713c:	ldr	x8, [x0]
  417140:	ldr	w8, [x8, x22, lsl #2]
  417144:	strb	w26, [x20, w8, sxtw]
  417148:	add	x25, x25, #0x1
  41714c:	add	x22, x22, #0x1
  417150:	add	w21, w19, #0x1
  417154:	cmp	x25, #0x40
  417158:	add	x27, x28, #0x1
  41715c:	b.eq	41718c <_obstack_memory_used@@Base+0x1734>  // b.none
  417160:	lsr	x8, x23, x25
  417164:	mov	w19, w21
  417168:	mov	x28, x27
  41716c:	tbz	w8, #0, 417148 <_obstack_memory_used@@Base+0x16f0>
  417170:	strb	w26, [x20, x22]
  417174:	cbz	w24, 417148 <_obstack_memory_used@@Base+0x16f0>
  417178:	add	w8, w22, #0x80
  41717c:	cmp	w8, #0x180
  417180:	b.cc	417138 <_obstack_memory_used@@Base+0x16e0>  // b.lo, b.ul, b.last
  417184:	mov	w8, w22
  417188:	b	417144 <_obstack_memory_used@@Base+0x16ec>
  41718c:	ldp	x8, x9, [sp, #24]
  417190:	mov	x25, xzr
  417194:	ldr	x8, [x8]
  417198:	ldr	x8, [x8, x9]
  41719c:	ldr	x23, [x8, #16]
  4171a0:	b	4171cc <_obstack_memory_used@@Base+0x1774>
  4171a4:	bl	4026a0 <__ctype_tolower_loc@plt>
  4171a8:	ldr	x8, [x0]
  4171ac:	ldr	w8, [x8, x22, lsl #2]
  4171b0:	strb	w26, [x20, w8, sxtw]
  4171b4:	add	x25, x25, #0x1
  4171b8:	add	x22, x22, #0x1
  4171bc:	add	w19, w27, #0x1
  4171c0:	cmp	x25, #0x40
  4171c4:	add	x28, x21, #0x1
  4171c8:	b.eq	4171f8 <_obstack_memory_used@@Base+0x17a0>  // b.none
  4171cc:	lsr	x8, x23, x25
  4171d0:	mov	w27, w19
  4171d4:	mov	x21, x28
  4171d8:	tbz	w8, #0, 4171b4 <_obstack_memory_used@@Base+0x175c>
  4171dc:	strb	w26, [x20, x22]
  4171e0:	cbz	w24, 4171b4 <_obstack_memory_used@@Base+0x175c>
  4171e4:	add	w8, w22, #0x80
  4171e8:	cmp	w8, #0x180
  4171ec:	b.cc	4171a4 <_obstack_memory_used@@Base+0x174c>  // b.lo, b.ul, b.last
  4171f0:	mov	w8, w22
  4171f4:	b	4171b0 <_obstack_memory_used@@Base+0x1758>
  4171f8:	ldp	x28, x9, [sp, #24]
  4171fc:	ldr	x25, [sp, #16]
  417200:	mov	x23, xzr
  417204:	ldr	x8, [x28]
  417208:	ldr	x8, [x8, x9]
  41720c:	ldr	x19, [x8, #24]
  417210:	b	41723c <_obstack_memory_used@@Base+0x17e4>
  417214:	bl	4026a0 <__ctype_tolower_loc@plt>
  417218:	ldr	x8, [x0]
  41721c:	ldr	w8, [x8, x22, lsl #2]
  417220:	strb	w26, [x20, w8, sxtw]
  417224:	add	x23, x23, #0x1
  417228:	add	x22, x22, #0x1
  41722c:	add	w27, w27, #0x1
  417230:	cmp	x23, #0x40
  417234:	add	x21, x21, #0x1
  417238:	b.eq	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.none
  41723c:	lsr	x8, x19, x23
  417240:	tbz	w8, #0, 417224 <_obstack_memory_used@@Base+0x17cc>
  417244:	strb	w26, [x21]
  417248:	cbz	w24, 417224 <_obstack_memory_used@@Base+0x17cc>
  41724c:	cmp	w27, #0x180
  417250:	b.cc	417214 <_obstack_memory_used@@Base+0x17bc>  // b.lo, b.ul, b.last
  417254:	mov	w8, w22
  417258:	b	417220 <_obstack_memory_used@@Base+0x17c8>
  41725c:	ldr	x8, [x21, #40]
  417260:	cmp	x8, #0x1
  417264:	b.lt	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.tstop
  417268:	mov	x19, xzr
  41726c:	b	417280 <_obstack_memory_used@@Base+0x1828>
  417270:	ldr	x8, [x21, #40]
  417274:	add	x19, x19, #0x1
  417278:	cmp	x19, x8
  41727c:	b.ge	416f0c <_obstack_memory_used@@Base+0x14b4>  // b.tcont
  417280:	stur	xzr, [x29, #-24]
  417284:	ldr	x8, [x21]
  417288:	add	x0, sp, #0x38
  41728c:	sub	x2, x29, #0x18
  417290:	ldr	w1, [x8, x19, lsl #2]
  417294:	bl	402c60 <wcrtomb@plt>
  417298:	cmn	x0, #0x1
  41729c:	b.eq	4172bc <_obstack_memory_used@@Base+0x1864>  // b.none
  4172a0:	ldrb	w22, [sp, #56]
  4172a4:	strb	w26, [x20, x22]
  4172a8:	cbz	w24, 4172bc <_obstack_memory_used@@Base+0x1864>
  4172ac:	bl	4026a0 <__ctype_tolower_loc@plt>
  4172b0:	ldr	x8, [x0]
  4172b4:	ldrsw	x8, [x8, x22, lsl #2]
  4172b8:	strb	w26, [x20, x8]
  4172bc:	ldrb	w8, [x25, #26]
  4172c0:	tbz	w8, #6, 417270 <_obstack_memory_used@@Base+0x1818>
  4172c4:	ldr	w8, [x28, #180]
  4172c8:	cmp	w8, #0x2
  4172cc:	b.lt	417270 <_obstack_memory_used@@Base+0x1818>  // b.tstop
  4172d0:	ldr	x8, [x21]
  4172d4:	ldr	w0, [x8, x19, lsl #2]
  4172d8:	bl	402c10 <towlower@plt>
  4172dc:	mov	w1, w0
  4172e0:	add	x0, sp, #0x38
  4172e4:	sub	x2, x29, #0x18
  4172e8:	bl	402c60 <wcrtomb@plt>
  4172ec:	cmn	x0, #0x1
  4172f0:	b.eq	417270 <_obstack_memory_used@@Base+0x1818>  // b.none
  4172f4:	ldrb	w8, [sp, #56]
  4172f8:	strb	w26, [x20, x8]
  4172fc:	b	417270 <_obstack_memory_used@@Base+0x1818>
  417300:	movi	v0.16b, #0x1
  417304:	cmp	w8, #0x2
  417308:	stp	q0, q0, [x20, #224]
  41730c:	stp	q0, q0, [x20, #192]
  417310:	stp	q0, q0, [x20, #160]
  417314:	stp	q0, q0, [x20, #128]
  417318:	stp	q0, q0, [x20, #96]
  41731c:	stp	q0, q0, [x20, #64]
  417320:	stp	q0, q0, [x20, #32]
  417324:	stp	q0, q0, [x20]
  417328:	b.ne	417338 <_obstack_memory_used@@Base+0x18e0>  // b.any
  41732c:	ldrb	w8, [x25, #56]
  417330:	orr	w8, w8, #0x1
  417334:	strb	w8, [x25, #56]
  417338:	ldp	x20, x19, [sp, #416]
  41733c:	ldp	x22, x21, [sp, #400]
  417340:	ldp	x24, x23, [sp, #384]
  417344:	ldp	x26, x25, [sp, #368]
  417348:	ldp	x28, x27, [sp, #352]
  41734c:	ldp	x29, x30, [sp, #336]
  417350:	add	sp, sp, #0x1b0
  417354:	ret
  417358:	stp	x29, x30, [sp, #-48]!
  41735c:	stp	x20, x19, [sp, #32]
  417360:	mov	x19, x0
  417364:	stp	xzr, xzr, [x0]
  417368:	str	xzr, [x0, #16]
  41736c:	mov	w0, #0x100                 	// #256
  417370:	stp	x22, x21, [sp, #16]
  417374:	mov	x29, sp
  417378:	mov	w21, w2
  41737c:	mov	x20, x1
  417380:	bl	402730 <malloc@plt>
  417384:	str	x0, [x19, #32]
  417388:	cbz	x0, 41743c <_obstack_memory_used@@Base+0x19e4>
  41738c:	mov	w8, #0xb2fc                	// #45820
  417390:	mov	w9, #0x2c6                 	// #710
  417394:	tst	w21, #0x1
  417398:	movk	w8, #0x3, lsl #16
  41739c:	movk	w9, #0x101, lsl #16
  4173a0:	lsl	w10, w21, #21
  4173a4:	csel	x8, x9, x8, eq  // eq = none
  4173a8:	and	w9, w10, #0x400000
  4173ac:	orr	x22, x8, x9
  4173b0:	tbnz	w21, #2, 4173c0 <_obstack_memory_used@@Base+0x1968>
  4173b4:	ldrb	w8, [x19, #56]
  4173b8:	and	w8, w8, #0x7f
  4173bc:	b	4173d8 <_obstack_memory_used@@Base+0x1980>
  4173c0:	ldrb	w8, [x19, #56]
  4173c4:	mov	w9, #0xb2be                	// #45758
  4173c8:	movk	w9, #0x143, lsl #16
  4173cc:	and	x9, x22, x9
  4173d0:	orr	x22, x9, #0x100
  4173d4:	orr	w8, w8, #0xffffff80
  4173d8:	lsl	w9, w21, #1
  4173dc:	strb	w8, [x19, #56]
  4173e0:	and	w8, w8, #0xffffffef
  4173e4:	and	w9, w9, #0x10
  4173e8:	orr	w8, w8, w9
  4173ec:	mov	x0, x20
  4173f0:	strb	w8, [x19, #56]
  4173f4:	str	xzr, [x19, #40]
  4173f8:	bl	4025c0 <strlen@plt>
  4173fc:	mov	x2, x0
  417400:	mov	x0, x19
  417404:	mov	x1, x20
  417408:	mov	x3, x22
  41740c:	bl	415b44 <_obstack_memory_used@@Base+0xec>
  417410:	cmp	w0, #0x10
  417414:	mov	w8, #0x8                   	// #8
  417418:	csel	w20, w8, w0, eq  // eq = none
  41741c:	cbnz	w20, 417444 <_obstack_memory_used@@Base+0x19ec>
  417420:	mov	x0, x19
  417424:	bl	416dd8 <_obstack_memory_used@@Base+0x1380>
  417428:	mov	w0, w20
  41742c:	ldp	x20, x19, [sp, #32]
  417430:	ldp	x22, x21, [sp, #16]
  417434:	ldp	x29, x30, [sp], #48
  417438:	ret
  41743c:	mov	w20, #0xc                   	// #12
  417440:	b	417428 <_obstack_memory_used@@Base+0x19d0>
  417444:	ldr	x0, [x19, #32]
  417448:	bl	402a10 <free@plt>
  41744c:	str	xzr, [x19, #32]
  417450:	b	417428 <_obstack_memory_used@@Base+0x19d0>
  417454:	stp	x29, x30, [sp, #-48]!
  417458:	cmp	w0, #0x11
  41745c:	stp	x22, x21, [sp, #16]
  417460:	stp	x20, x19, [sp, #32]
  417464:	mov	x29, sp
  417468:	b.cs	4174e0 <_obstack_memory_used@@Base+0x1a88>  // b.hs, b.nlast
  41746c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  417470:	add	x8, x8, #0xd50
  417474:	ldr	x8, [x8, w0, uxtw #3]
  417478:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  41747c:	add	x9, x9, #0xbcf
  417480:	mov	x19, x2
  417484:	add	x1, x9, x8
  417488:	mov	w2, #0x5                   	// #5
  41748c:	mov	x0, xzr
  417490:	mov	x20, x3
  417494:	bl	402b40 <dcgettext@plt>
  417498:	mov	x21, x0
  41749c:	bl	4025c0 <strlen@plt>
  4174a0:	add	x22, x0, #0x1
  4174a4:	cbz	x20, 4174c0 <_obstack_memory_used@@Base+0x1a68>
  4174a8:	cmp	x22, x20
  4174ac:	mov	x2, x22
  4174b0:	b.hi	4174d4 <_obstack_memory_used@@Base+0x1a7c>  // b.pmore
  4174b4:	mov	x0, x19
  4174b8:	mov	x1, x21
  4174bc:	bl	402580 <memcpy@plt>
  4174c0:	mov	x0, x22
  4174c4:	ldp	x20, x19, [sp, #32]
  4174c8:	ldp	x22, x21, [sp, #16]
  4174cc:	ldp	x29, x30, [sp], #48
  4174d0:	ret
  4174d4:	sub	x2, x20, #0x1
  4174d8:	strb	wzr, [x19, x2]
  4174dc:	b	4174b4 <_obstack_memory_used@@Base+0x1a5c>
  4174e0:	bl	402920 <abort@plt>
  4174e4:	stp	x29, x30, [sp, #-32]!
  4174e8:	str	x19, [sp, #16]
  4174ec:	mov	x19, x0
  4174f0:	ldr	x0, [x0]
  4174f4:	mov	x29, sp
  4174f8:	cbz	x0, 417500 <_obstack_memory_used@@Base+0x1aa8>
  4174fc:	bl	417528 <_obstack_memory_used@@Base+0x1ad0>
  417500:	ldr	x0, [x19, #32]
  417504:	stp	xzr, xzr, [x19]
  417508:	bl	402a10 <free@plt>
  41750c:	ldr	x0, [x19, #40]
  417510:	str	xzr, [x19, #32]
  417514:	bl	402a10 <free@plt>
  417518:	str	xzr, [x19, #40]
  41751c:	ldr	x19, [sp, #16]
  417520:	ldp	x29, x30, [sp], #32
  417524:	ret
  417528:	stp	x29, x30, [sp, #-64]!
  41752c:	stp	x24, x23, [sp, #16]
  417530:	stp	x22, x21, [sp, #32]
  417534:	stp	x20, x19, [sp, #48]
  417538:	ldr	x8, [x0]
  41753c:	mov	x19, x0
  417540:	mov	x29, sp
  417544:	cbz	x8, 4175cc <_obstack_memory_used@@Base+0x1b74>
  417548:	ldr	x9, [x19, #16]
  41754c:	cbz	x9, 4175cc <_obstack_memory_used@@Base+0x1b74>
  417550:	mov	w23, #0xff                  	// #255
  417554:	mov	x21, xzr
  417558:	mov	w22, #0x1                   	// #1
  41755c:	movk	w23, #0x4, lsl #16
  417560:	add	x9, x8, x21
  417564:	ldr	w9, [x9, #8]
  417568:	and	w9, w9, w23
  41756c:	cmp	w9, #0x3
  417570:	b.eq	4175a4 <_obstack_memory_used@@Base+0x1b4c>  // b.none
  417574:	cmp	w9, #0x6
  417578:	b.ne	4175b0 <_obstack_memory_used@@Base+0x1b58>  // b.any
  41757c:	ldr	x20, [x8, x21]
  417580:	ldr	x0, [x20]
  417584:	bl	402a10 <free@plt>
  417588:	ldr	x0, [x20, #8]
  41758c:	bl	402a10 <free@plt>
  417590:	ldr	x0, [x20, #16]
  417594:	bl	402a10 <free@plt>
  417598:	ldr	x0, [x20, #24]
  41759c:	bl	402a10 <free@plt>
  4175a0:	b	4175a8 <_obstack_memory_used@@Base+0x1b50>
  4175a4:	ldr	x20, [x8, x21]
  4175a8:	mov	x0, x20
  4175ac:	bl	402a10 <free@plt>
  4175b0:	ldr	x8, [x19, #16]
  4175b4:	cmp	x22, x8
  4175b8:	b.cs	4175cc <_obstack_memory_used@@Base+0x1b74>  // b.hs, b.nlast
  4175bc:	ldr	x8, [x19]
  4175c0:	add	x22, x22, #0x1
  4175c4:	add	x21, x21, #0x10
  4175c8:	b	417560 <_obstack_memory_used@@Base+0x1b08>
  4175cc:	ldr	x0, [x19, #24]
  4175d0:	bl	402a10 <free@plt>
  4175d4:	ldr	x8, [x19, #16]
  4175d8:	cbz	x8, 417630 <_obstack_memory_used@@Base+0x1bd8>
  4175dc:	mov	x20, xzr
  4175e0:	mov	w21, #0x10                  	// #16
  4175e4:	b	4175fc <_obstack_memory_used@@Base+0x1ba4>
  4175e8:	ldr	x8, [x19, #16]
  4175ec:	add	x20, x20, #0x1
  4175f0:	add	x21, x21, #0x18
  4175f4:	cmp	x20, x8
  4175f8:	b.cs	417630 <_obstack_memory_used@@Base+0x1bd8>  // b.hs, b.nlast
  4175fc:	ldr	x8, [x19, #48]
  417600:	cbz	x8, 41760c <_obstack_memory_used@@Base+0x1bb4>
  417604:	ldr	x0, [x8, x21]
  417608:	bl	402a10 <free@plt>
  41760c:	ldr	x8, [x19, #56]
  417610:	cbz	x8, 41761c <_obstack_memory_used@@Base+0x1bc4>
  417614:	ldr	x0, [x8, x21]
  417618:	bl	402a10 <free@plt>
  41761c:	ldr	x8, [x19, #40]
  417620:	cbz	x8, 4175e8 <_obstack_memory_used@@Base+0x1b90>
  417624:	ldr	x0, [x8, x21]
  417628:	bl	402a10 <free@plt>
  41762c:	b	4175e8 <_obstack_memory_used@@Base+0x1b90>
  417630:	ldr	x0, [x19, #40]
  417634:	bl	402a10 <free@plt>
  417638:	ldr	x0, [x19, #48]
  41763c:	bl	402a10 <free@plt>
  417640:	ldr	x0, [x19, #56]
  417644:	bl	402a10 <free@plt>
  417648:	ldr	x0, [x19]
  41764c:	bl	402a10 <free@plt>
  417650:	ldr	x0, [x19, #64]
  417654:	cbz	x0, 4176b8 <_obstack_memory_used@@Base+0x1c60>
  417658:	mov	x20, xzr
  41765c:	mov	w21, #0x18                  	// #24
  417660:	madd	x23, x20, x21, x0
  417664:	mov	x22, x23
  417668:	ldr	x8, [x22], #16
  41766c:	cmp	x8, #0x1
  417670:	b.lt	417694 <_obstack_memory_used@@Base+0x1c3c>  // b.tstop
  417674:	mov	x24, xzr
  417678:	ldr	x8, [x22]
  41767c:	ldr	x0, [x8, x24, lsl #3]
  417680:	bl	41a3b8 <_obstack_memory_used@@Base+0x4960>
  417684:	ldr	x8, [x23]
  417688:	add	x24, x24, #0x1
  41768c:	cmp	x24, x8
  417690:	b.lt	417678 <_obstack_memory_used@@Base+0x1c20>  // b.tstop
  417694:	ldr	x0, [x22]
  417698:	bl	402a10 <free@plt>
  41769c:	ldr	x8, [x19, #136]
  4176a0:	cmp	x20, x8
  4176a4:	b.cs	4176b4 <_obstack_memory_used@@Base+0x1c5c>  // b.hs, b.nlast
  4176a8:	ldr	x0, [x19, #64]
  4176ac:	add	x20, x20, #0x1
  4176b0:	b	417660 <_obstack_memory_used@@Base+0x1c08>
  4176b4:	ldr	x0, [x19, #64]
  4176b8:	bl	402a10 <free@plt>
  4176bc:	ldr	x0, [x19, #120]
  4176c0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  4176c4:	add	x8, x8, #0xdd8
  4176c8:	cmp	x0, x8
  4176cc:	b.eq	4176d4 <_obstack_memory_used@@Base+0x1c7c>  // b.none
  4176d0:	bl	402a10 <free@plt>
  4176d4:	ldr	x0, [x19, #224]
  4176d8:	bl	402a10 <free@plt>
  4176dc:	mov	x0, x19
  4176e0:	ldp	x20, x19, [sp, #48]
  4176e4:	ldp	x22, x21, [sp, #32]
  4176e8:	ldp	x24, x23, [sp, #16]
  4176ec:	ldp	x29, x30, [sp], #64
  4176f0:	b	402a10 <free@plt>
  4176f4:	cmp	w4, #0x7
  4176f8:	b.ls	417704 <_obstack_memory_used@@Base+0x1cac>  // b.plast
  4176fc:	mov	w0, #0x2                   	// #2
  417700:	ret
  417704:	sub	sp, sp, #0x50
  417708:	str	x23, [sp, #32]
  41770c:	stp	x22, x21, [sp, #48]
  417710:	stp	x20, x19, [sp, #64]
  417714:	mov	w22, w4
  417718:	mov	x19, x3
  41771c:	mov	x21, x2
  417720:	mov	x20, x1
  417724:	mov	x23, x0
  417728:	stp	x29, x30, [sp, #16]
  41772c:	add	x29, sp, #0x10
  417730:	tbnz	w4, #2, 41776c <_obstack_memory_used@@Base+0x1d14>
  417734:	mov	x0, x20
  417738:	bl	4025c0 <strlen@plt>
  41773c:	mov	x2, x0
  417740:	mov	x3, xzr
  417744:	ldrb	w8, [x23, #56]
  417748:	tbz	w8, #4, 417778 <_obstack_memory_used@@Base+0x1d20>
  41774c:	str	w22, [sp]
  417750:	mov	x0, x23
  417754:	mov	x1, x20
  417758:	mov	x4, x2
  41775c:	mov	x5, x2
  417760:	mov	x6, xzr
  417764:	mov	x7, xzr
  417768:	b	417794 <_obstack_memory_used@@Base+0x1d3c>
  41776c:	ldp	x3, x2, [x19]
  417770:	ldrb	w8, [x23, #56]
  417774:	tbnz	w8, #4, 41774c <_obstack_memory_used@@Base+0x1cf4>
  417778:	mov	x0, x23
  41777c:	mov	x1, x20
  417780:	mov	x4, x2
  417784:	mov	x5, x2
  417788:	mov	x6, x21
  41778c:	mov	x7, x19
  417790:	str	w22, [sp]
  417794:	bl	4177b8 <_obstack_memory_used@@Base+0x1d60>
  417798:	ldp	x20, x19, [sp, #64]
  41779c:	ldp	x22, x21, [sp, #48]
  4177a0:	ldr	x23, [sp, #32]
  4177a4:	ldp	x29, x30, [sp, #16]
  4177a8:	cmp	w0, #0x0
  4177ac:	cset	w0, ne  // ne = any
  4177b0:	add	sp, sp, #0x50
  4177b4:	ret
  4177b8:	stp	x29, x30, [sp, #-96]!
  4177bc:	stp	x28, x27, [sp, #16]
  4177c0:	stp	x26, x25, [sp, #32]
  4177c4:	stp	x24, x23, [sp, #48]
  4177c8:	stp	x22, x21, [sp, #64]
  4177cc:	stp	x20, x19, [sp, #80]
  4177d0:	mov	x29, sp
  4177d4:	sub	sp, sp, #0x2e0
  4177d8:	ldr	x22, [x0]
  4177dc:	movi	v0.2d, #0x0
  4177e0:	stp	q0, q0, [sp, #528]
  4177e4:	stp	q0, q0, [sp, #496]
  4177e8:	stp	q0, q0, [sp, #464]
  4177ec:	stp	q0, q0, [sp, #432]
  4177f0:	stp	q0, q0, [sp, #400]
  4177f4:	stp	q0, q0, [sp, #368]
  4177f8:	stp	q0, q0, [sp, #336]
  4177fc:	stp	q0, q0, [sp, #304]
  417800:	str	x22, [sp, #456]
  417804:	ldr	x8, [x0, #32]
  417808:	mov	x19, x5
  41780c:	mov	x26, x3
  417810:	mov	x28, x2
  417814:	mov	x23, x0
  417818:	str	x7, [sp, #160]
  41781c:	cbz	x8, 41783c <_obstack_memory_used@@Base+0x1de4>
  417820:	ldrb	w9, [x23, #56]
  417824:	mov	w10, #0x9                   	// #9
  417828:	and	w9, w9, w10
  41782c:	cmp	w9, #0x8
  417830:	ccmp	x26, x4, #0x4, eq  // eq = none
  417834:	csel	x25, x8, xzr, ne  // ne = any
  417838:	b	417840 <_obstack_memory_used@@Base+0x1de8>
  41783c:	mov	x25, xzr
  417840:	ldr	x8, [x23, #48]
  417844:	ldr	x9, [x23, #16]
  417848:	mvn	x10, x8
  41784c:	add	x10, x10, x6
  417850:	cmp	x8, x6
  417854:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  417858:	cbz	x9, 419ca4 <_obstack_memory_used@@Base+0x424c>
  41785c:	ldr	x10, [x22, #72]
  417860:	cbz	x10, 419ca4 <_obstack_memory_used@@Base+0x424c>
  417864:	ldr	x9, [x22, #80]
  417868:	cbz	x9, 419ca4 <_obstack_memory_used@@Base+0x424c>
  41786c:	ldr	x8, [x22, #88]
  417870:	cbz	x8, 419ca4 <_obstack_memory_used@@Base+0x424c>
  417874:	ldr	x11, [x22, #96]
  417878:	cbz	x11, 419ca4 <_obstack_memory_used@@Base+0x424c>
  41787c:	ldr	x10, [x10, #16]
  417880:	ldr	x13, [x23, #40]
  417884:	cbnz	x10, 417890 <_obstack_memory_used@@Base+0x1e38>
  417888:	ldr	x9, [x9, #16]
  41788c:	cbz	x9, 419c84 <_obstack_memory_used@@Base+0x422c>
  417890:	mov	x21, x4
  417894:	sub	x24, x6, x12
  417898:	stp	x12, x6, [sp, #144]
  41789c:	cbz	x24, 4178a8 <_obstack_memory_used@@Base+0x1e50>
  4178a0:	mov	w8, #0x1                   	// #1
  4178a4:	b	4178b4 <_obstack_memory_used@@Base+0x1e5c>
  4178a8:	ldr	x8, [x22, #152]
  4178ac:	cmp	x8, #0x0
  4178b0:	cset	w8, ne  // ne = any
  4178b4:	str	w8, [sp, #196]
  4178b8:	ldr	x8, [x22, #16]
  4178bc:	ldrsw	x10, [x22, #180]
  4178c0:	ldr	x9, [x23, #24]
  4178c4:	add	x11, x28, #0x1
  4178c8:	add	x12, x8, #0x1
  4178cc:	cmp	x12, x10
  4178d0:	and	x12, x9, #0x400000
  4178d4:	ubfx	x9, x9, #22, #1
  4178d8:	csinc	x8, x10, x8, lt  // lt = tstop
  4178dc:	strb	w9, [sp, #440]
  4178e0:	orr	x9, x13, x12
  4178e4:	cmp	x11, x8
  4178e8:	csinc	x27, x8, x28, ge  // ge = tcont
  4178ec:	cmp	x9, #0x0
  4178f0:	cset	w20, ne  // ne = any
  4178f4:	str	x1, [sp, #304]
  4178f8:	stp	x28, x28, [sp, #384]
  4178fc:	str	x13, [sp, #424]
  417900:	str	w10, [sp, #448]
  417904:	strb	w20, [sp, #443]
  417908:	ldrb	w8, [x22, #176]
  41790c:	cmp	w10, #0x2
  417910:	stp	x28, x28, [sp, #400]
  417914:	str	x1, [sp, #248]
  417918:	ubfx	w9, w8, #2, #1
  41791c:	ubfx	w8, w8, #3, #1
  417920:	strb	w9, [sp, #441]
  417924:	strb	w8, [sp, #442]
  417928:	str	x13, [sp, #224]
  41792c:	b.lt	41794c <_obstack_memory_used@@Base+0x1ef4>  // b.tstop
  417930:	lsr	x8, x27, #61
  417934:	cbnz	x8, 419e5c <_obstack_memory_used@@Base+0x4404>
  417938:	lsl	x0, x27, #2
  41793c:	bl	402730 <malloc@plt>
  417940:	cbz	x0, 419e5c <_obstack_memory_used@@Base+0x4404>
  417944:	ldr	x1, [sp, #248]
  417948:	str	x0, [sp, #320]
  41794c:	cbz	w20, 41796c <_obstack_memory_used@@Base+0x1f14>
  417950:	mov	x0, x27
  417954:	bl	402730 <malloc@plt>
  417958:	cbz	x0, 419e5c <_obstack_memory_used@@Base+0x4404>
  41795c:	ldr	x1, [sp, #248]
  417960:	mov	w8, wzr
  417964:	str	x0, [sp, #312]
  417968:	b	417970 <_obstack_memory_used@@Base+0x1f18>
  41796c:	mov	w8, #0x1                   	// #1
  417970:	add	x9, x22, #0xb8
  417974:	str	x27, [sp, #368]
  417978:	str	x9, [sp, #432]
  41797c:	ldrb	w9, [x22, #176]
  417980:	ldr	w10, [x29, #96]
  417984:	ubfx	w9, w9, #4, #1
  417988:	str	w10, [sp, #284]
  41798c:	strb	w9, [sp, #446]
  417990:	cbz	w8, 4179a8 <_obstack_memory_used@@Base+0x1f50>
  417994:	str	x1, [sp, #312]
  417998:	ldr	w8, [x22, #180]
  41799c:	cmp	w8, #0x1
  4179a0:	csel	x8, xzr, x28, gt
  4179a4:	b	4179ac <_obstack_memory_used@@Base+0x1f54>
  4179a8:	mov	x8, xzr
  4179ac:	stp	x8, x8, [sp, #352]
  4179b0:	stp	x19, x19, [sp, #400]
  4179b4:	ldrb	w8, [x23, #56]
  4179b8:	ldr	w9, [sp, #284]
  4179bc:	str	x28, [sp, #272]
  4179c0:	lsr	w8, w8, #7
  4179c4:	strb	w8, [sp, #445]
  4179c8:	ldr	x19, [x22, #152]
  4179cc:	mov	x8, #0xffffffffffffffff    	// #-1
  4179d0:	str	w9, [sp, #464]
  4179d4:	str	x8, [sp, #472]
  4179d8:	lsl	x20, x19, #1
  4179dc:	cmp	x19, #0x1
  4179e0:	b.lt	417a24 <_obstack_memory_used@@Base+0x1fcc>  // b.tstop
  4179e4:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  4179e8:	movk	x8, #0x666, lsl #48
  4179ec:	cmp	x20, x8
  4179f0:	b.hi	419e5c <_obstack_memory_used@@Base+0x4404>  // b.pmore
  4179f4:	add	x8, x19, x19, lsl #2
  4179f8:	lsl	x0, x8, #4
  4179fc:	bl	402730 <malloc@plt>
  417a00:	mov	x28, x0
  417a04:	str	x0, [sp, #520]
  417a08:	lsl	x0, x19, #4
  417a0c:	bl	402730 <malloc@plt>
  417a10:	mov	w19, #0xc                   	// #12
  417a14:	str	x0, [sp, #552]
  417a18:	cbz	x28, 419c18 <_obstack_memory_used@@Base+0x41c0>
  417a1c:	ldr	x28, [sp, #272]
  417a20:	cbz	x0, 419c18 <_obstack_memory_used@@Base+0x41c0>
  417a24:	mov	w8, #0x1                   	// #1
  417a28:	cmp	x24, #0x1
  417a2c:	str	x20, [sp, #512]
  417a30:	str	w8, [sp, #528]
  417a34:	str	x20, [sp, #544]
  417a38:	b.hi	417a44 <_obstack_memory_used@@Base+0x1fec>  // b.pmore
  417a3c:	ldrb	w8, [x22, #176]
  417a40:	tbz	w8, #1, 417a64 <_obstack_memory_used@@Base+0x200c>
  417a44:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  417a48:	cmp	x27, x8
  417a4c:	b.hi	419e5c <_obstack_memory_used@@Base+0x4404>  // b.pmore
  417a50:	lsl	x8, x27, #3
  417a54:	add	x0, x8, #0x8
  417a58:	bl	402730 <malloc@plt>
  417a5c:	str	x0, [sp, #488]
  417a60:	cbz	x0, 419e5c <_obstack_memory_used@@Base+0x4404>
  417a64:	ldr	w9, [sp, #284]
  417a68:	mov	w10, #0x6                   	// #6
  417a6c:	stur	x26, [x29, #-176]
  417a70:	add	x8, sp, #0x130
  417a74:	tst	w9, #0x1
  417a78:	mov	w9, #0x4                   	// #4
  417a7c:	csel	w9, w10, w9, eq  // eq = none
  417a80:	str	w9, [sp, #416]
  417a84:	ldr	w10, [x22, #180]
  417a88:	cmp	x21, x26
  417a8c:	csel	x9, x21, x26, lt  // lt = tstop
  417a90:	csel	x20, x26, x21, lt  // lt = tstop
  417a94:	str	x9, [sp, #288]
  417a98:	str	w10, [sp, #236]
  417a9c:	cbz	x25, 417ab4 <_obstack_memory_used@@Base+0x205c>
  417aa0:	ldr	x11, [sp, #224]
  417aa4:	cmp	w10, #0x1
  417aa8:	b.ne	417abc <_obstack_memory_used@@Base+0x2064>  // b.any
  417aac:	mov	w9, #0x4                   	// #4
  417ab0:	b	417ad4 <_obstack_memory_used@@Base+0x207c>
  417ab4:	mov	w9, #0x8                   	// #8
  417ab8:	b	417aec <_obstack_memory_used@@Base+0x2094>
  417abc:	ldr	x9, [x23, #24]
  417ac0:	and	x9, x9, #0x400000
  417ac4:	orr	x9, x11, x9
  417ac8:	cmp	x9, #0x0
  417acc:	cset	w9, eq  // eq = none
  417ad0:	lsl	w9, w9, #2
  417ad4:	cmp	x21, x26
  417ad8:	cset	w10, ge  // ge = tcont
  417adc:	cmp	x11, #0x0
  417ae0:	cset	w11, ne  // ne = any
  417ae4:	bfi	w11, w10, #1, #1
  417ae8:	orr	w9, w11, w9
  417aec:	add	x8, x8, #0x38
  417af0:	str	x8, [sp, #136]
  417af4:	add	x8, sp, #0x130
  417af8:	cmp	x21, x26
  417afc:	sub	x10, x29, #0xb0
  417b00:	add	x8, x8, #0xc0
  417b04:	ldr	x21, [sp, #288]
  417b08:	mov	x11, #0xffffffffffffffff    	// #-1
  417b0c:	sub	w9, w9, #0x4
  417b10:	str	x8, [sp, #216]
  417b14:	csel	x8, xzr, x10, lt  // lt = tstop
  417b18:	sub	x12, x29, #0x40
  417b1c:	str	x9, [sp, #256]
  417b20:	cneg	x9, x11, ge  // ge = tcont
  417b24:	cmp	x8, #0x0
  417b28:	str	x9, [sp, #296]
  417b2c:	add	x9, x12, #0x20
  417b30:	str	x8, [sp, #200]
  417b34:	cset	w8, ne  // ne = any
  417b38:	stp	x9, x23, [sp, #176]
  417b3c:	str	w8, [sp, #212]
  417b40:	ldr	x10, [sp, #256]
  417b44:	cmp	w10, #0x4
  417b48:	b.hi	417cbc <_obstack_memory_used@@Base+0x2264>  // b.pmore
  417b4c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  417b50:	add	x11, x11, #0xa93
  417b54:	adr	x8, 417b64 <_obstack_memory_used@@Base+0x210c>
  417b58:	ldrb	w9, [x11, x10]
  417b5c:	add	x8, x8, x9, lsl #2
  417b60:	br	x8
  417b64:	cmp	x26, x21
  417b68:	b.lt	419c14 <_obstack_memory_used@@Base+0x41bc>  // b.tstop
  417b6c:	ldr	x9, [sp, #248]
  417b70:	ldr	x10, [sp, #224]
  417b74:	cmp	x26, x28
  417b78:	b.ge	417b88 <_obstack_memory_used@@Base+0x2130>  // b.tcont
  417b7c:	ldrb	w8, [x9, x26]
  417b80:	cbnz	x10, 417b90 <_obstack_memory_used@@Base+0x2138>
  417b84:	b	417b94 <_obstack_memory_used@@Base+0x213c>
  417b88:	mov	w8, wzr
  417b8c:	cbz	x10, 417b94 <_obstack_memory_used@@Base+0x213c>
  417b90:	ldrb	w8, [x10, w8, uxtw]
  417b94:	ldrb	w8, [x25, w8, uxtw]
  417b98:	cbnz	w8, 417c14 <_obstack_memory_used@@Base+0x21bc>
  417b9c:	cmp	x26, x21
  417ba0:	sub	x26, x26, #0x1
  417ba4:	stur	x26, [x29, #-176]
  417ba8:	b.gt	417b74 <_obstack_memory_used@@Base+0x211c>
  417bac:	b	419c14 <_obstack_memory_used@@Base+0x41bc>
  417bb0:	cmp	x26, x20
  417bb4:	b.ge	417c0c <_obstack_memory_used@@Base+0x21b4>  // b.tcont
  417bb8:	ldr	x9, [sp, #248]
  417bbc:	ldr	x10, [sp, #224]
  417bc0:	ldrb	w8, [x9, x26]
  417bc4:	ldrb	w8, [x10, x8]
  417bc8:	ldrb	w8, [x25, x8]
  417bcc:	cbnz	w8, 417c0c <_obstack_memory_used@@Base+0x21b4>
  417bd0:	add	x26, x26, #0x1
  417bd4:	cmp	x26, x20
  417bd8:	stur	x26, [x29, #-176]
  417bdc:	b.lt	417bc0 <_obstack_memory_used@@Base+0x2168>  // b.tstop
  417be0:	b	417c0c <_obstack_memory_used@@Base+0x21b4>
  417be4:	ldr	x9, [sp, #248]
  417be8:	cmp	x26, x20
  417bec:	b.ge	417c0c <_obstack_memory_used@@Base+0x21b4>  // b.tcont
  417bf0:	ldrb	w8, [x9, x26]
  417bf4:	ldrb	w8, [x25, x8]
  417bf8:	cbnz	w8, 417c0c <_obstack_memory_used@@Base+0x21b4>
  417bfc:	add	x26, x26, #0x1
  417c00:	cmp	x26, x20
  417c04:	stur	x26, [x29, #-176]
  417c08:	b.lt	417bf0 <_obstack_memory_used@@Base+0x2198>  // b.tstop
  417c0c:	cmp	x26, x20
  417c10:	b.eq	417de0 <_obstack_memory_used@@Base+0x2388>  // b.none
  417c14:	ldr	w2, [sp, #284]
  417c18:	add	x0, sp, #0x130
  417c1c:	mov	x1, x26
  417c20:	bl	41fbec <_obstack_memory_used@@Base+0xa194>
  417c24:	cbnz	w0, 419e64 <_obstack_memory_used@@Base+0x440c>
  417c28:	ldr	w8, [sp, #236]
  417c2c:	cmp	w8, #0x1
  417c30:	b.eq	417c4c <_obstack_memory_used@@Base+0x21f4>  // b.none
  417c34:	ldr	x8, [sp, #352]
  417c38:	cbz	x8, 417c4c <_obstack_memory_used@@Base+0x21f4>
  417c3c:	ldr	x8, [sp, #320]
  417c40:	ldr	w8, [x8]
  417c44:	cmn	w8, #0x1
  417c48:	b.eq	41978c <_obstack_memory_used@@Base+0x3d34>  // b.none
  417c4c:	ldr	x8, [sp, #216]
  417c50:	str	wzr, [sp, #528]
  417c54:	stur	wzr, [x29, #-164]
  417c58:	stp	xzr, xzr, [x8]
  417c5c:	ldr	x19, [sp, #456]
  417c60:	ldr	x15, [sp, #376]
  417c64:	ldr	x26, [x19, #72]
  417c68:	ldrsb	w8, [x26, #104]
  417c6c:	tbz	w8, #31, 417e0c <_obstack_memory_used@@Base+0x23b4>
  417c70:	cmp	x15, #0x0
  417c74:	b.le	417cb0 <_obstack_memory_used@@Base+0x2258>
  417c78:	ldr	x9, [sp, #392]
  417c7c:	sub	x8, x15, #0x1
  417c80:	cmp	x9, x8
  417c84:	b.eq	417df4 <_obstack_memory_used@@Base+0x239c>  // b.none
  417c88:	ldr	w9, [sp, #448]
  417c8c:	cmp	w9, #0x2
  417c90:	b.lt	417d44 <_obstack_memory_used@@Base+0x22ec>  // b.tstop
  417c94:	ldr	x9, [sp, #320]
  417c98:	ldr	w27, [x9, x8, lsl #2]
  417c9c:	cmn	w27, #0x1
  417ca0:	b.ne	417d70 <_obstack_memory_used@@Base+0x2318>  // b.any
  417ca4:	sub	x8, x8, #0x1
  417ca8:	cmn	x8, #0x1
  417cac:	b.ne	417c98 <_obstack_memory_used@@Base+0x2240>  // b.any
  417cb0:	ldr	w3, [sp, #416]
  417cb4:	tbnz	w3, #0, 417e08 <_obstack_memory_used@@Base+0x23b0>
  417cb8:	b	417d94 <_obstack_memory_used@@Base+0x233c>
  417cbc:	ldr	x8, [sp, #344]
  417cc0:	ldr	x10, [sp, #360]
  417cc4:	sub	x9, x26, x8
  417cc8:	cmp	x9, x10
  417ccc:	b.cs	417cec <_obstack_memory_used@@Base+0x2294>  // b.hs, b.nlast
  417cd0:	cmp	x26, x28
  417cd4:	b.ge	417d14 <_obstack_memory_used@@Base+0x22bc>  // b.tcont
  417cd8:	ldr	x10, [sp, #312]
  417cdc:	ldrb	w9, [x10, x9]
  417ce0:	ldrb	w9, [x25, x9]
  417ce4:	cbz	w9, 417d20 <_obstack_memory_used@@Base+0x22c8>
  417ce8:	b	417c14 <_obstack_memory_used@@Base+0x21bc>
  417cec:	ldr	w2, [sp, #284]
  417cf0:	add	x0, sp, #0x130
  417cf4:	mov	x1, x26
  417cf8:	bl	41fbec <_obstack_memory_used@@Base+0xa194>
  417cfc:	cbnz	w0, 419e64 <_obstack_memory_used@@Base+0x440c>
  417d00:	ldur	x26, [x29, #-176]
  417d04:	ldr	x8, [sp, #344]
  417d08:	sub	x9, x26, x8
  417d0c:	cmp	x26, x28
  417d10:	b.lt	417cd8 <_obstack_memory_used@@Base+0x2280>  // b.tstop
  417d14:	mov	x9, xzr
  417d18:	ldrb	w9, [x25, x9]
  417d1c:	cbnz	w9, 417c14 <_obstack_memory_used@@Base+0x21bc>
  417d20:	ldr	x9, [sp, #296]
  417d24:	mov	w19, #0x1                   	// #1
  417d28:	add	x26, x26, x9
  417d2c:	cmp	x26, x21
  417d30:	stur	x26, [x29, #-176]
  417d34:	b.lt	419c18 <_obstack_memory_used@@Base+0x41c0>  // b.tstop
  417d38:	cmp	x26, x20
  417d3c:	b.le	417cc0 <_obstack_memory_used@@Base+0x2268>
  417d40:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  417d44:	ldr	x9, [sp, #312]
  417d48:	ldr	x10, [sp, #432]
  417d4c:	ldrb	w8, [x9, x8]
  417d50:	lsr	x9, x8, #3
  417d54:	and	x9, x9, #0x18
  417d58:	ldr	x9, [x10, x9]
  417d5c:	lsr	x9, x9, x8
  417d60:	tbnz	w9, #0, 417e08 <_obstack_memory_used@@Base+0x23b0>
  417d64:	cmp	w8, #0xa
  417d68:	b.eq	417d80 <_obstack_memory_used@@Base+0x2328>  // b.none
  417d6c:	b	417e0c <_obstack_memory_used@@Base+0x23b4>
  417d70:	ldrb	w8, [sp, #446]
  417d74:	cbnz	w8, 419ac8 <_obstack_memory_used@@Base+0x4070>
  417d78:	cmp	w27, #0xa
  417d7c:	b.ne	417e0c <_obstack_memory_used@@Base+0x23b4>  // b.any
  417d80:	ldrb	w8, [sp, #445]
  417d84:	cmp	w8, #0x0
  417d88:	cset	w8, ne  // ne = any
  417d8c:	lsl	w3, w8, #1
  417d90:	tbnz	w3, #0, 417e08 <_obstack_memory_used@@Base+0x23b0>
  417d94:	ldr	w27, [sp, #212]
  417d98:	cbz	w3, 417e10 <_obstack_memory_used@@Base+0x23b8>
  417d9c:	tbz	w3, #1, 417dac <_obstack_memory_used@@Base+0x2354>
  417da0:	tbz	w3, #2, 417dac <_obstack_memory_used@@Base+0x2354>
  417da4:	ldr	x26, [x19, #96]
  417da8:	b	417e10 <_obstack_memory_used@@Base+0x23b8>
  417dac:	tbnz	w3, #1, 417dd8 <_obstack_memory_used@@Base+0x2380>
  417db0:	ldr	x26, [x19, #72]
  417db4:	tbz	w3, #2, 417e10 <_obstack_memory_used@@Base+0x23b8>
  417db8:	ldr	x2, [x26, #80]
  417dbc:	sub	x0, x29, #0xa4
  417dc0:	mov	x1, x19
  417dc4:	mov	x26, x15
  417dc8:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  417dcc:	mov	x15, x26
  417dd0:	mov	x26, x0
  417dd4:	b	417e10 <_obstack_memory_used@@Base+0x23b8>
  417dd8:	ldr	x26, [x19, #88]
  417ddc:	b	417e10 <_obstack_memory_used@@Base+0x23b8>
  417de0:	cmp	x20, x28
  417de4:	b.ge	419a28 <_obstack_memory_used@@Base+0x3fd0>  // b.tcont
  417de8:	ldr	x8, [sp, #248]
  417dec:	ldrb	w8, [x8, x20]
  417df0:	b	419a2c <_obstack_memory_used@@Base+0x3fd4>
  417df4:	ldr	w8, [sp, #464]
  417df8:	mov	w9, #0xa                   	// #10
  417dfc:	and	w8, w8, #0x2
  417e00:	eor	w3, w8, w9
  417e04:	tbz	w3, #0, 417d94 <_obstack_memory_used@@Base+0x233c>
  417e08:	ldr	x26, [x19, #80]
  417e0c:	ldr	w27, [sp, #212]
  417e10:	cbz	x26, 419e5c <_obstack_memory_used@@Base+0x4404>
  417e14:	ldr	x8, [sp, #488]
  417e18:	mov	w28, w27
  417e1c:	cbz	x8, 417e30 <_obstack_memory_used@@Base+0x23d8>
  417e20:	str	x26, [x8, x15, lsl #3]
  417e24:	ldr	x8, [x19, #152]
  417e28:	mov	w28, w27
  417e2c:	cbnz	x8, 4198a0 <_obstack_memory_used@@Base+0x3e48>
  417e30:	ldrsb	w8, [x26, #104]
  417e34:	tbnz	w8, #4, 419884 <_obstack_memory_used@@Base+0x3e2c>
  417e38:	str	xzr, [sp, #240]
  417e3c:	mov	x27, #0xffffffffffffffff    	// #-1
  417e40:	ldr	x9, [sp, #408]
  417e44:	ldr	x8, [sp, #376]
  417e48:	cmp	x9, x8
  417e4c:	b.le	419378 <_obstack_memory_used@@Base+0x3920>
  417e50:	ldr	x9, [sp, #200]
  417e54:	str	x9, [sp, #264]
  417e58:	b	417e74 <_obstack_memory_used@@Base+0x241c>
  417e5c:	ldr	x9, [sp, #408]
  417e60:	ldr	x8, [sp, #376]
  417e64:	and	w28, w28, w21
  417e68:	ldr	x21, [sp, #288]
  417e6c:	cmp	x9, x8
  417e70:	b.le	419390 <_obstack_memory_used@@Base+0x3938>
  417e74:	ldr	x10, [sp, #368]
  417e78:	ldr	x9, [sp, #392]
  417e7c:	add	x11, x8, #0x1
  417e80:	mov	x12, x26
  417e84:	cmp	x11, x10
  417e88:	b.lt	417e94 <_obstack_memory_used@@Base+0x243c>  // b.tstop
  417e8c:	cmp	x10, x9
  417e90:	b.lt	4190ec <_obstack_memory_used@@Base+0x3694>  // b.tstop
  417e94:	ldr	x10, [sp, #352]
  417e98:	cmp	x11, x10
  417e9c:	b.lt	417ea8 <_obstack_memory_used@@Base+0x2450>  // b.tstop
  417ea0:	cmp	x10, x9
  417ea4:	b.lt	4190ec <_obstack_memory_used@@Base+0x3694>  // b.tstop
  417ea8:	ldrb	w8, [x12, #104]
  417eac:	tbnz	w8, #5, 4180f4 <_obstack_memory_used@@Base+0x269c>
  417eb0:	ldr	x8, [sp, #376]
  417eb4:	ldr	x9, [sp, #312]
  417eb8:	mov	x19, x12
  417ebc:	add	x10, x8, #0x1
  417ec0:	str	x10, [sp, #376]
  417ec4:	ldrb	w26, [x9, x8]
  417ec8:	ldr	x0, [x19, #88]!
  417ecc:	cbz	x0, 4184ac <_obstack_memory_used@@Base+0x2a54>
  417ed0:	ldr	x26, [x0, x26, lsl #3]
  417ed4:	ldr	x8, [sp, #488]
  417ed8:	cbz	x8, 417f08 <_obstack_memory_used@@Base+0x24b0>
  417edc:	sub	x0, x29, #0xa4
  417ee0:	add	x1, sp, #0x130
  417ee4:	mov	x2, x26
  417ee8:	mov	x21, x11
  417eec:	mov	x19, x15
  417ef0:	mov	x26, x12
  417ef4:	bl	421bfc <_obstack_memory_used@@Base+0xc1a4>
  417ef8:	mov	x12, x26
  417efc:	mov	x11, x21
  417f00:	mov	x15, x19
  417f04:	mov	x26, x0
  417f08:	cbz	x26, 417f44 <_obstack_memory_used@@Base+0x24ec>
  417f0c:	ldrsb	w8, [x26, #104]
  417f10:	cmp	x12, x26
  417f14:	cset	w21, eq  // eq = none
  417f18:	tst	w28, w21
  417f1c:	csel	x15, x11, x15, ne  // ne = any
  417f20:	tbz	w8, #4, 417e5c <_obstack_memory_used@@Base+0x2404>
  417f24:	tbnz	w8, #31, 417fd0 <_obstack_memory_used@@Base+0x2578>
  417f28:	ldr	x27, [sp, #376]
  417f2c:	ldr	w8, [sp, #196]
  417f30:	cbz	w8, 419860 <_obstack_memory_used@@Base+0x3e08>
  417f34:	mov	w8, #0x1                   	// #1
  417f38:	str	xzr, [sp, #264]
  417f3c:	str	x8, [sp, #240]
  417f40:	b	417e5c <_obstack_memory_used@@Base+0x2404>
  417f44:	ldur	w8, [x29, #-164]
  417f48:	cbnz	w8, 419e5c <_obstack_memory_used@@Base+0x4404>
  417f4c:	ldr	x8, [sp, #240]
  417f50:	ldr	w9, [sp, #196]
  417f54:	cmp	x8, #0x0
  417f58:	cset	w8, ne  // ne = any
  417f5c:	bic	w8, w8, w9
  417f60:	tbnz	w8, #0, 419874 <_obstack_memory_used@@Base+0x3e1c>
  417f64:	ldr	x10, [sp, #488]
  417f68:	ldr	x21, [sp, #288]
  417f6c:	cbz	x10, 419390 <_obstack_memory_used@@Base+0x3938>
  417f70:	str	w28, [sp, #120]
  417f74:	mov	x28, x11
  417f78:	mov	x19, x15
  417f7c:	str	x12, [sp, #128]
  417f80:	ldr	x8, [sp, #496]
  417f84:	ldr	x9, [sp, #376]
  417f88:	add	x10, x10, #0x8
  417f8c:	cmp	x9, x8
  417f90:	b.ge	41938c <_obstack_memory_used@@Base+0x3934>  // b.tcont
  417f94:	add	x11, x9, #0x1
  417f98:	str	x11, [sp, #376]
  417f9c:	ldr	x12, [x10, x9, lsl #3]
  417fa0:	mov	x9, x11
  417fa4:	cbz	x12, 417f8c <_obstack_memory_used@@Base+0x2534>
  417fa8:	sub	x0, x29, #0xa4
  417fac:	add	x1, sp, #0x130
  417fb0:	mov	x2, xzr
  417fb4:	bl	421bfc <_obstack_memory_used@@Base+0xc1a4>
  417fb8:	mov	x26, x0
  417fbc:	cbnz	x0, 4180dc <_obstack_memory_used@@Base+0x2684>
  417fc0:	ldur	w8, [x29, #-164]
  417fc4:	cbnz	w8, 4180dc <_obstack_memory_used@@Base+0x2684>
  417fc8:	ldr	x10, [sp, #488]
  417fcc:	b	417f80 <_obstack_memory_used@@Base+0x2528>
  417fd0:	ldr	x8, [sp, #376]
  417fd4:	tbnz	x8, #63, 41800c <_obstack_memory_used@@Base+0x25b4>
  417fd8:	ldr	x9, [sp, #392]
  417fdc:	cmp	x9, x8
  417fe0:	b.eq	4191d8 <_obstack_memory_used@@Base+0x3780>  // b.none
  417fe4:	ldr	w9, [sp, #448]
  417fe8:	cmp	w9, #0x2
  417fec:	b.lt	418014 <_obstack_memory_used@@Base+0x25bc>  // b.tstop
  417ff0:	ldr	x9, [sp, #320]
  417ff4:	ldr	w19, [x9, x8, lsl #2]
  417ff8:	cmn	w19, #0x1
  417ffc:	b.ne	41803c <_obstack_memory_used@@Base+0x25e4>  // b.any
  418000:	sub	x8, x8, #0x1
  418004:	cmn	x8, #0x1
  418008:	b.ne	417ff4 <_obstack_memory_used@@Base+0x259c>  // b.any
  41800c:	ldr	w8, [sp, #416]
  418010:	b	41806c <_obstack_memory_used@@Base+0x2614>
  418014:	ldr	x9, [sp, #312]
  418018:	ldr	x10, [sp, #432]
  41801c:	ldrb	w8, [x9, x8]
  418020:	lsr	x9, x8, #3
  418024:	and	x9, x9, #0x18
  418028:	ldr	x9, [x10, x9]
  41802c:	lsr	x9, x9, x8
  418030:	tbz	w9, #0, 418060 <_obstack_memory_used@@Base+0x2608>
  418034:	mov	w8, #0x1                   	// #1
  418038:	b	41806c <_obstack_memory_used@@Base+0x2614>
  41803c:	ldrb	w8, [sp, #446]
  418040:	cbnz	w8, 41920c <_obstack_memory_used@@Base+0x37b4>
  418044:	cmp	w19, #0xa
  418048:	b.ne	418068 <_obstack_memory_used@@Base+0x2610>  // b.any
  41804c:	ldrb	w8, [sp, #445]
  418050:	cmp	w8, #0x0
  418054:	cset	w8, ne  // ne = any
  418058:	lsl	w8, w8, #1
  41805c:	b	41806c <_obstack_memory_used@@Base+0x2614>
  418060:	cmp	w8, #0xa
  418064:	b.eq	41804c <_obstack_memory_used@@Base+0x25f4>  // b.none
  418068:	mov	w8, wzr
  41806c:	ldr	x9, [x26, #16]
  418070:	cmp	x9, #0x1
  418074:	b.lt	417e5c <_obstack_memory_used@@Base+0x2404>  // b.tstop
  418078:	ldr	x11, [sp, #456]
  41807c:	ldr	x10, [x26, #24]
  418080:	ldr	x11, [x11]
  418084:	b	418094 <_obstack_memory_used@@Base+0x263c>
  418088:	subs	x9, x9, #0x1
  41808c:	add	x10, x10, #0x8
  418090:	b.eq	417e5c <_obstack_memory_used@@Base+0x2404>  // b.none
  418094:	ldr	x12, [x10]
  418098:	add	x13, x11, x12, lsl #4
  41809c:	ldr	w13, [x13, #8]
  4180a0:	and	w14, w13, #0xff
  4180a4:	cmp	w14, #0x2
  4180a8:	b.ne	418088 <_obstack_memory_used@@Base+0x2630>  // b.any
  4180ac:	tst	w13, #0x3ff00
  4180b0:	b.eq	4180d4 <_obstack_memory_used@@Base+0x267c>  // b.none
  4180b4:	tbnz	w8, #0, 4180bc <_obstack_memory_used@@Base+0x2664>
  4180b8:	tbnz	w13, #10, 418088 <_obstack_memory_used@@Base+0x2630>
  4180bc:	tbz	w8, #0, 4180c4 <_obstack_memory_used@@Base+0x266c>
  4180c0:	tbnz	w13, #11, 418088 <_obstack_memory_used@@Base+0x2630>
  4180c4:	tbnz	w8, #1, 4180cc <_obstack_memory_used@@Base+0x2674>
  4180c8:	tbnz	w13, #13, 418088 <_obstack_memory_used@@Base+0x2630>
  4180cc:	tbnz	w8, #3, 4180d4 <_obstack_memory_used@@Base+0x267c>
  4180d0:	tbnz	w13, #15, 418088 <_obstack_memory_used@@Base+0x2630>
  4180d4:	cbnz	x12, 417f28 <_obstack_memory_used@@Base+0x24d0>
  4180d8:	b	417e5c <_obstack_memory_used@@Base+0x2404>
  4180dc:	mov	x11, x28
  4180e0:	ldr	w28, [sp, #120]
  4180e4:	ldr	x12, [sp, #128]
  4180e8:	mov	x15, x19
  4180ec:	cbnz	x26, 417f0c <_obstack_memory_used@@Base+0x24b4>
  4180f0:	b	419874 <_obstack_memory_used@@Base+0x3e1c>
  4180f4:	ldr	x8, [x12, #16]
  4180f8:	cmp	x8, #0x1
  4180fc:	b.lt	419168 <_obstack_memory_used@@Base+0x3710>  // b.tstop
  418100:	ldr	x13, [sp, #456]
  418104:	mov	x19, xzr
  418108:	str	x24, [sp, #168]
  41810c:	stp	x11, x15, [sp, #96]
  418110:	stp	x13, x12, [sp, #120]
  418114:	b	418128 <_obstack_memory_used@@Base+0x26d0>
  418118:	ldr	x8, [x12, #16]
  41811c:	add	x19, x19, #0x1
  418120:	cmp	x19, x8
  418124:	b.ge	419168 <_obstack_memory_used@@Base+0x3710>  // b.tcont
  418128:	ldr	x8, [x12, #24]
  41812c:	ldr	x1, [x8, x19, lsl #3]
  418130:	ldr	x8, [x13]
  418134:	add	x8, x8, x1, lsl #4
  418138:	ldr	w21, [x8, #8]
  41813c:	tbz	w21, #20, 418118 <_obstack_memory_used@@Base+0x26c0>
  418140:	tst	w21, #0x3ff00
  418144:	b.eq	41821c <_obstack_memory_used@@Base+0x27c4>  // b.none
  418148:	ldr	x8, [sp, #376]
  41814c:	tbnz	x8, #63, 418184 <_obstack_memory_used@@Base+0x272c>
  418150:	ldr	x9, [sp, #392]
  418154:	cmp	x9, x8
  418158:	b.eq	41840c <_obstack_memory_used@@Base+0x29b4>  // b.none
  41815c:	ldr	w9, [sp, #448]
  418160:	cmp	w9, #0x2
  418164:	b.lt	41818c <_obstack_memory_used@@Base+0x2734>  // b.tstop
  418168:	ldr	x9, [sp, #320]
  41816c:	ldr	w26, [x9, x8, lsl #2]
  418170:	cmn	w26, #0x1
  418174:	b.ne	4181b8 <_obstack_memory_used@@Base+0x2760>  // b.any
  418178:	sub	x8, x8, #0x1
  41817c:	cmn	x8, #0x1
  418180:	b.ne	41816c <_obstack_memory_used@@Base+0x2714>  // b.any
  418184:	ldr	w8, [sp, #416]
  418188:	b	4181e8 <_obstack_memory_used@@Base+0x2790>
  41818c:	ldr	x9, [sp, #312]
  418190:	ldr	x10, [sp, #432]
  418194:	ldrb	w8, [x9, x8]
  418198:	lsr	x9, x8, #3
  41819c:	and	x9, x9, #0x18
  4181a0:	ldr	x9, [x10, x9]
  4181a4:	lsr	x9, x9, x8
  4181a8:	tbz	w9, #0, 4181dc <_obstack_memory_used@@Base+0x2784>
  4181ac:	mov	w9, wzr
  4181b0:	mov	w8, #0x1                   	// #1
  4181b4:	b	4181f8 <_obstack_memory_used@@Base+0x27a0>
  4181b8:	ldrb	w8, [sp, #446]
  4181bc:	cbnz	w8, 418440 <_obstack_memory_used@@Base+0x29e8>
  4181c0:	cmp	w26, #0xa
  4181c4:	b.ne	4181e4 <_obstack_memory_used@@Base+0x278c>  // b.any
  4181c8:	ldrb	w8, [sp, #445]
  4181cc:	cmp	w8, #0x0
  4181d0:	cset	w8, ne  // ne = any
  4181d4:	lsl	w8, w8, #1
  4181d8:	b	4181e8 <_obstack_memory_used@@Base+0x2790>
  4181dc:	cmp	w8, #0xa
  4181e0:	b.eq	4181c8 <_obstack_memory_used@@Base+0x2770>  // b.none
  4181e4:	mov	w8, wzr
  4181e8:	tst	w8, #0x1
  4181ec:	cset	w9, eq  // eq = none
  4181f0:	tbz	w21, #10, 4181f8 <_obstack_memory_used@@Base+0x27a0>
  4181f4:	tbz	w8, #0, 418118 <_obstack_memory_used@@Base+0x26c0>
  4181f8:	ldr	x10, [x13]
  4181fc:	add	x10, x10, x1, lsl #4
  418200:	ldr	w10, [x10, #8]
  418204:	tbnz	w9, #0, 41820c <_obstack_memory_used@@Base+0x27b4>
  418208:	tbnz	w10, #11, 418118 <_obstack_memory_used@@Base+0x26c0>
  41820c:	tbnz	w8, #1, 418214 <_obstack_memory_used@@Base+0x27bc>
  418210:	tbnz	w10, #13, 418118 <_obstack_memory_used@@Base+0x26c0>
  418214:	tbnz	w8, #3, 41821c <_obstack_memory_used@@Base+0x27c4>
  418218:	tbnz	w10, #15, 418118 <_obstack_memory_used@@Base+0x26c0>
  41821c:	ldr	x3, [sp, #376]
  418220:	add	x2, sp, #0x130
  418224:	mov	x0, x13
  418228:	mov	x26, x1
  41822c:	bl	423410 <_obstack_memory_used@@Base+0xd9b8>
  418230:	ldp	x13, x12, [sp, #120]
  418234:	ldp	x11, x15, [sp, #96]
  418238:	cbz	w0, 418118 <_obstack_memory_used@@Base+0x26c0>
  41823c:	ldr	w10, [sp, #528]
  418240:	ldp	x9, x11, [sp, #368]
  418244:	mov	x24, x22
  418248:	ldr	x22, [sp, #496]
  41824c:	ldr	x8, [sp, #392]
  418250:	add	x21, x11, w0, sxtw
  418254:	cmp	w10, w0
  418258:	mov	x14, x26
  41825c:	csel	w10, w0, w10, lt  // lt = tstop
  418260:	cmp	x9, x21
  418264:	str	w10, [sp, #528]
  418268:	b.gt	418274 <_obstack_memory_used@@Base+0x281c>
  41826c:	cmp	x9, x8
  418270:	b.lt	418288 <_obstack_memory_used@@Base+0x2830>  // b.tstop
  418274:	ldr	x9, [sp, #352]
  418278:	cmp	x9, x21
  41827c:	b.gt	4182a0 <_obstack_memory_used@@Base+0x2848>
  418280:	cmp	x9, x8
  418284:	b.ge	4182a0 <_obstack_memory_used@@Base+0x2848>  // b.tcont
  418288:	add	w1, w21, #0x1
  41828c:	add	x0, sp, #0x130
  418290:	bl	421a1c <_obstack_memory_used@@Base+0xbfc4>
  418294:	ldr	x13, [sp, #120]
  418298:	mov	x14, x26
  41829c:	cbnz	w0, 4191ec <_obstack_memory_used@@Base+0x3794>
  4182a0:	subs	x8, x21, x22
  4182a4:	b.le	4182cc <_obstack_memory_used@@Base+0x2874>
  4182a8:	ldr	x9, [sp, #488]
  4182ac:	lsl	x2, x8, #3
  4182b0:	mov	w1, wzr
  4182b4:	add	x9, x9, x22, lsl #3
  4182b8:	add	x0, x9, #0x8
  4182bc:	bl	402800 <memset@plt>
  4182c0:	ldr	x13, [sp, #120]
  4182c4:	mov	x14, x26
  4182c8:	str	x21, [sp, #496]
  4182cc:	stur	wzr, [x29, #-96]
  4182d0:	ldr	x8, [x13, #24]
  4182d4:	ldr	x9, [sp, #488]
  4182d8:	ldr	x10, [x13, #48]
  4182dc:	ldr	x8, [x8, x14, lsl #3]
  4182e0:	ldr	x23, [x9, x21, lsl #3]
  4182e4:	mov	w9, #0x18                  	// #24
  4182e8:	madd	x2, x8, x9, x10
  4182ec:	cbz	x23, 41830c <_obstack_memory_used@@Base+0x28b4>
  4182f0:	ldr	x1, [x23, #80]
  4182f4:	sub	x0, x29, #0x40
  4182f8:	bl	421e00 <_obstack_memory_used@@Base+0xc3a8>
  4182fc:	mov	x22, x24
  418300:	stur	w0, [x29, #-96]
  418304:	cbz	w0, 418320 <_obstack_memory_used@@Base+0x28c8>
  418308:	b	419238 <_obstack_memory_used@@Base+0x37e0>
  41830c:	ldr	x8, [x2, #16]
  418310:	ldr	q0, [x2]
  418314:	mov	x22, x24
  418318:	stur	x8, [x29, #-48]
  41831c:	stur	q0, [x29, #-64]
  418320:	cmp	x21, #0x0
  418324:	b.le	418420 <_obstack_memory_used@@Base+0x29c8>
  418328:	ldr	x9, [sp, #392]
  41832c:	ldr	x1, [sp, #120]
  418330:	sub	x8, x21, #0x1
  418334:	cmp	x9, x8
  418338:	b.eq	41842c <_obstack_memory_used@@Base+0x29d4>  // b.none
  41833c:	ldr	w9, [sp, #448]
  418340:	cmp	w9, #0x2
  418344:	b.lt	41836c <_obstack_memory_used@@Base+0x2914>  // b.tstop
  418348:	ldr	x9, [sp, #320]
  41834c:	ldr	w26, [x9, x8, lsl #2]
  418350:	cmn	w26, #0x1
  418354:	b.ne	418394 <_obstack_memory_used@@Base+0x293c>  // b.any
  418358:	sub	x8, x8, #0x1
  41835c:	cmn	x8, #0x1
  418360:	b.ne	41834c <_obstack_memory_used@@Base+0x28f4>  // b.any
  418364:	ldr	w3, [sp, #416]
  418368:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  41836c:	ldr	x9, [sp, #312]
  418370:	ldr	x10, [sp, #432]
  418374:	ldrb	w8, [x9, x8]
  418378:	lsr	x9, x8, #3
  41837c:	and	x9, x9, #0x18
  418380:	ldr	x9, [x10, x9]
  418384:	lsr	x9, x9, x8
  418388:	tbz	w9, #0, 4183b8 <_obstack_memory_used@@Base+0x2960>
  41838c:	mov	w3, #0x1                   	// #1
  418390:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  418394:	ldrb	w8, [sp, #446]
  418398:	cbnz	w8, 418470 <_obstack_memory_used@@Base+0x2a18>
  41839c:	cmp	w26, #0xa
  4183a0:	b.ne	4183c0 <_obstack_memory_used@@Base+0x2968>  // b.any
  4183a4:	ldrb	w8, [sp, #445]
  4183a8:	cmp	w8, #0x0
  4183ac:	cset	w8, ne  // ne = any
  4183b0:	lsl	w3, w8, #1
  4183b4:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  4183b8:	cmp	w8, #0xa
  4183bc:	b.eq	4183a4 <_obstack_memory_used@@Base+0x294c>  // b.none
  4183c0:	mov	w3, wzr
  4183c4:	sub	x0, x29, #0x60
  4183c8:	sub	x2, x29, #0x40
  4183cc:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  4183d0:	ldr	x8, [sp, #488]
  4183d4:	str	x0, [x8, x21, lsl #3]
  4183d8:	cbz	x23, 4183e4 <_obstack_memory_used@@Base+0x298c>
  4183dc:	ldur	x0, [x29, #-48]
  4183e0:	bl	402a10 <free@plt>
  4183e4:	ldr	x8, [sp, #488]
  4183e8:	ldr	x23, [sp, #184]
  4183ec:	ldr	x24, [sp, #168]
  4183f0:	ldp	x11, x15, [sp, #96]
  4183f4:	ldr	x8, [x8, x21, lsl #3]
  4183f8:	ldp	x13, x12, [sp, #120]
  4183fc:	cbnz	x8, 418118 <_obstack_memory_used@@Base+0x26c0>
  418400:	ldur	w0, [x29, #-96]
  418404:	cbz	w0, 418118 <_obstack_memory_used@@Base+0x26c0>
  418408:	b	419200 <_obstack_memory_used@@Base+0x37a8>
  41840c:	ldr	w8, [sp, #464]
  418410:	mov	w9, #0xa                   	// #10
  418414:	and	w8, w8, #0x2
  418418:	eor	w8, w8, w9
  41841c:	b	4181e8 <_obstack_memory_used@@Base+0x2790>
  418420:	ldr	w3, [sp, #416]
  418424:	ldr	x1, [sp, #120]
  418428:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  41842c:	ldr	w8, [sp, #464]
  418430:	mov	w9, #0xa                   	// #10
  418434:	and	w8, w8, #0x2
  418438:	eor	w3, w8, w9
  41843c:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  418440:	mov	w0, w26
  418444:	str	x1, [sp, #88]
  418448:	bl	402b10 <iswalnum@plt>
  41844c:	mov	w9, wzr
  418450:	cmp	w26, #0x5f
  418454:	mov	w8, #0x1                   	// #1
  418458:	b.eq	418494 <_obstack_memory_used@@Base+0x2a3c>  // b.none
  41845c:	ldp	x11, x15, [sp, #96]
  418460:	ldp	x13, x12, [sp, #120]
  418464:	ldr	x1, [sp, #88]
  418468:	cbz	w0, 4181c0 <_obstack_memory_used@@Base+0x2768>
  41846c:	b	4181f8 <_obstack_memory_used@@Base+0x27a0>
  418470:	mov	w0, w26
  418474:	bl	402b10 <iswalnum@plt>
  418478:	cmp	w26, #0x5f
  41847c:	mov	w3, #0x1                   	// #1
  418480:	mov	x22, x24
  418484:	b.eq	4184a4 <_obstack_memory_used@@Base+0x2a4c>  // b.none
  418488:	ldr	x1, [sp, #120]
  41848c:	cbz	w0, 41839c <_obstack_memory_used@@Base+0x2944>
  418490:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  418494:	ldp	x11, x15, [sp, #96]
  418498:	ldp	x13, x12, [sp, #120]
  41849c:	ldr	x1, [sp, #88]
  4184a0:	b	4181f8 <_obstack_memory_used@@Base+0x27a0>
  4184a4:	ldr	x1, [sp, #120]
  4184a8:	b	4183c4 <_obstack_memory_used@@Base+0x296c>
  4184ac:	ldr	x21, [x12, #96]
  4184b0:	cbnz	x21, 41911c <_obstack_memory_used@@Base+0x36c4>
  4184b4:	ldr	x8, [sp, #456]
  4184b8:	mov	w0, #0x3800                	// #14336
  4184bc:	str	x12, [sp, #128]
  4184c0:	str	x20, [sp, #8]
  4184c4:	str	w28, [sp, #120]
  4184c8:	stp	x11, x15, [sp, #96]
  4184cc:	str	x24, [sp, #168]
  4184d0:	str	x22, [sp, #112]
  4184d4:	str	x8, [sp, #56]
  4184d8:	bl	402730 <malloc@plt>
  4184dc:	str	x0, [sp, #32]
  4184e0:	cbz	x0, 419330 <_obstack_memory_used@@Base+0x38d8>
  4184e4:	stp	xzr, xzr, [x19]
  4184e8:	ldr	x8, [sp, #128]
  4184ec:	movi	v0.2d, #0x0
  4184f0:	stp	q0, q0, [x29, #-64]
  4184f4:	ldr	x8, [x8, #16]
  4184f8:	cmp	x8, #0x0
  4184fc:	b.le	418e2c <_obstack_memory_used@@Base+0x33d4>
  418500:	ldr	x9, [sp, #32]
  418504:	mov	w8, #0x1800                	// #6144
  418508:	str	xzr, [sp, #40]
  41850c:	str	xzr, [sp, #88]
  418510:	add	x8, x9, x8
  418514:	str	x8, [sp, #16]
  418518:	b	418540 <_obstack_memory_used@@Base+0x2ae8>
  41851c:	movi	v0.2d, #0x0
  418520:	stp	q0, q0, [x29, #-64]
  418524:	ldr	x8, [sp, #128]
  418528:	ldr	x9, [sp, #40]
  41852c:	ldr	x8, [x8, #16]
  418530:	add	x9, x9, #0x1
  418534:	str	x9, [sp, #40]
  418538:	cmp	x9, x8
  41853c:	b.ge	418a40 <_obstack_memory_used@@Base+0x2fe8>  // b.tcont
  418540:	ldr	x8, [sp, #128]
  418544:	ldr	x9, [sp, #56]
  418548:	ldr	x10, [sp, #40]
  41854c:	ldr	x8, [x8, #24]
  418550:	ldr	x9, [x9]
  418554:	ldr	x8, [x8, x10, lsl #3]
  418558:	add	x8, x9, x8, lsl #4
  41855c:	str	x8, [sp, #24]
  418560:	ldr	w9, [x8, #8]!
  418564:	and	w10, w9, #0xff
  418568:	cmp	w10, #0x1
  41856c:	str	w10, [sp, #48]
  418570:	b.ne	418628 <_obstack_memory_used@@Base+0x2bd0>  // b.any
  418574:	ldr	x10, [sp, #24]
  418578:	sub	x13, x29, #0x40
  41857c:	mov	w14, #0x1                   	// #1
  418580:	ldrb	w10, [x10]
  418584:	lsr	x11, x10, #3
  418588:	and	x11, x11, #0x18
  41858c:	ldr	x12, [x13, x11]
  418590:	lsl	x10, x14, x10
  418594:	orr	x10, x10, x12
  418598:	str	x10, [x13, x11]
  41859c:	and	w10, w9, #0x3ff00
  4185a0:	cbz	w10, 418804 <_obstack_memory_used@@Base+0x2dac>
  4185a4:	tbz	w9, #13, 4185c0 <_obstack_memory_used@@Base+0x2b68>
  4185a8:	ldur	x10, [x29, #-64]
  4185ac:	movi	v0.2d, #0x0
  4185b0:	stp	q0, q0, [x29, #-64]
  4185b4:	tbz	w10, #10, 418524 <_obstack_memory_used@@Base+0x2acc>
  4185b8:	mov	w10, #0x400                 	// #1024
  4185bc:	stur	x10, [x29, #-64]
  4185c0:	tbnz	w9, #15, 41851c <_obstack_memory_used@@Base+0x2ac4>
  4185c4:	tbz	w9, #10, 418760 <_obstack_memory_used@@Base+0x2d08>
  4185c8:	ldr	w10, [sp, #48]
  4185cc:	cmp	w10, #0x1
  4185d0:	b.ne	4185dc <_obstack_memory_used@@Base+0x2b84>  // b.any
  4185d4:	ldrb	w10, [x8, #2]
  4185d8:	tbz	w10, #6, 41851c <_obstack_memory_used@@Base+0x2ac4>
  4185dc:	ldr	x10, [sp, #56]
  4185e0:	ldr	w10, [x10, #180]
  4185e4:	cmp	w10, #0x1
  4185e8:	b.le	418720 <_obstack_memory_used@@Base+0x2cc8>
  4185ec:	ldr	x11, [sp, #56]
  4185f0:	ldp	q2, q3, [x29, #-64]
  4185f4:	ldr	x10, [x11, #120]
  4185f8:	ldur	q0, [x11, #184]
  4185fc:	ldr	q1, [x10]
  418600:	orn	v0.16b, v0.16b, v1.16b
  418604:	and	v0.16b, v2.16b, v0.16b
  418608:	stur	q0, [x29, #-64]
  41860c:	ldur	q1, [x11, #200]
  418610:	ldr	q2, [x10, #16]
  418614:	mov	x10, v0.d[1]
  418618:	fmov	x11, d0
  41861c:	orn	v0.16b, v1.16b, v2.16b
  418620:	and	v0.16b, v3.16b, v0.16b
  418624:	b	418744 <_obstack_memory_used@@Base+0x2cec>
  418628:	ldr	w10, [sp, #48]
  41862c:	cmp	w10, #0x7
  418630:	b.eq	418674 <_obstack_memory_used@@Base+0x2c1c>  // b.none
  418634:	ldr	w10, [sp, #48]
  418638:	cmp	w10, #0x5
  41863c:	b.eq	4186ac <_obstack_memory_used@@Base+0x2c54>  // b.none
  418640:	ldr	w10, [sp, #48]
  418644:	cmp	w10, #0x3
  418648:	b.ne	418524 <_obstack_memory_used@@Base+0x2acc>  // b.any
  41864c:	ldr	x10, [sp, #24]
  418650:	ldp	q1, q2, [x29, #-64]
  418654:	ldr	x10, [x10]
  418658:	ldr	q0, [x10]
  41865c:	orr	v0.16b, v1.16b, v0.16b
  418660:	stur	q0, [x29, #-64]
  418664:	ldr	q0, [x10, #16]
  418668:	orr	v0.16b, v2.16b, v0.16b
  41866c:	stur	q0, [x29, #-48]
  418670:	b	41859c <_obstack_memory_used@@Base+0x2b44>
  418674:	mov	x10, #0xffffffffffffffff    	// #-1
  418678:	stp	x10, x10, [x29, #-64]
  41867c:	ldr	x10, [sp, #56]
  418680:	ldr	x10, [x10, #216]
  418684:	tbz	w10, #6, 41868c <_obstack_memory_used@@Base+0x2c34>
  418688:	tbz	w10, #7, 41859c <_obstack_memory_used@@Base+0x2b44>
  41868c:	tst	x10, #0x40
  418690:	mov	x11, #0xfffffffffffffffe    	// #-2
  418694:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  418698:	csel	x11, x12, x11, eq  // eq = none
  41869c:	tst	x10, #0x80
  4186a0:	mov	x10, #0xfffffffffffffbff    	// #-1025
  4186a4:	csel	x10, x10, x11, eq  // eq = none
  4186a8:	b	418718 <_obstack_memory_used@@Base+0x2cc0>
  4186ac:	ldr	x10, [sp, #56]
  4186b0:	ldr	w10, [x10, #180]
  4186b4:	cmp	w10, #0x2
  4186b8:	b.lt	4186e4 <_obstack_memory_used@@Base+0x2c8c>  // b.tstop
  4186bc:	ldr	x10, [sp, #56]
  4186c0:	ldp	q1, q2, [x29, #-64]
  4186c4:	ldr	x10, [x10, #120]
  4186c8:	ldr	q0, [x10]
  4186cc:	orr	v0.16b, v1.16b, v0.16b
  4186d0:	ldr	q1, [x10, #16]
  4186d4:	fmov	x11, d0
  4186d8:	orr	v1.16b, v2.16b, v1.16b
  4186dc:	stp	q0, q1, [x29, #-64]
  4186e0:	b	4186f0 <_obstack_memory_used@@Base+0x2c98>
  4186e4:	movi	v0.2d, #0xffffffffffffffff
  4186e8:	mov	x11, #0xffffffffffffffff    	// #-1
  4186ec:	stp	q0, q0, [x29, #-64]
  4186f0:	ldr	x10, [sp, #56]
  4186f4:	and	x12, x11, #0xfffffffffffffbff
  4186f8:	ldr	x10, [x10, #216]
  4186fc:	tst	x10, #0x40
  418700:	csel	x11, x12, x11, eq  // eq = none
  418704:	tbz	w10, #6, 41870c <_obstack_memory_used@@Base+0x2cb4>
  418708:	tbz	w10, #7, 41859c <_obstack_memory_used@@Base+0x2b44>
  41870c:	and	x12, x11, #0xfffffffffffffffe
  418710:	tst	x10, #0x80
  418714:	csel	x10, x11, x12, eq  // eq = none
  418718:	stur	x10, [x29, #-64]
  41871c:	b	41859c <_obstack_memory_used@@Base+0x2b44>
  418720:	ldr	x10, [sp, #56]
  418724:	ldp	q1, q2, [x29, #-64]
  418728:	ldur	q0, [x10, #184]
  41872c:	and	v0.16b, v1.16b, v0.16b
  418730:	stur	q0, [x29, #-64]
  418734:	ldur	q1, [x10, #200]
  418738:	mov	x10, v0.d[1]
  41873c:	fmov	x11, d0
  418740:	and	v0.16b, v2.16b, v1.16b
  418744:	orr	x10, x10, x11
  418748:	fmov	x11, d0
  41874c:	orr	x10, x10, x11
  418750:	mov	x11, v0.d[1]
  418754:	orr	x10, x10, x11
  418758:	stur	q0, [x29, #-48]
  41875c:	cbz	x10, 418524 <_obstack_memory_used@@Base+0x2acc>
  418760:	tbz	w9, #11, 418804 <_obstack_memory_used@@Base+0x2dac>
  418764:	ldr	w9, [sp, #48]
  418768:	cmp	w9, #0x1
  41876c:	b.ne	418778 <_obstack_memory_used@@Base+0x2d20>  // b.any
  418770:	ldrb	w8, [x8, #2]
  418774:	tbnz	w8, #6, 41851c <_obstack_memory_used@@Base+0x2ac4>
  418778:	ldr	x8, [sp, #56]
  41877c:	ldr	w8, [x8, #180]
  418780:	cmp	w8, #0x1
  418784:	b.le	4187c4 <_obstack_memory_used@@Base+0x2d6c>
  418788:	ldr	x9, [sp, #56]
  41878c:	ldp	q2, q3, [x29, #-64]
  418790:	ldr	x8, [x9, #120]
  418794:	ldur	q0, [x9, #184]
  418798:	ldr	q1, [x8]
  41879c:	and	v0.16b, v1.16b, v0.16b
  4187a0:	bic	v0.16b, v2.16b, v0.16b
  4187a4:	stur	q0, [x29, #-64]
  4187a8:	ldur	q1, [x9, #200]
  4187ac:	ldr	q2, [x8, #16]
  4187b0:	mov	x8, v0.d[1]
  4187b4:	fmov	x9, d0
  4187b8:	and	v0.16b, v2.16b, v1.16b
  4187bc:	bic	v0.16b, v3.16b, v0.16b
  4187c0:	b	4187e8 <_obstack_memory_used@@Base+0x2d90>
  4187c4:	ldr	x8, [sp, #56]
  4187c8:	ldp	q1, q2, [x29, #-64]
  4187cc:	ldur	q0, [x8, #184]
  4187d0:	bic	v0.16b, v1.16b, v0.16b
  4187d4:	stur	q0, [x29, #-64]
  4187d8:	ldur	q1, [x8, #200]
  4187dc:	mov	x8, v0.d[1]
  4187e0:	fmov	x9, d0
  4187e4:	bic	v0.16b, v2.16b, v1.16b
  4187e8:	orr	x8, x8, x9
  4187ec:	fmov	x9, d0
  4187f0:	orr	x8, x8, x9
  4187f4:	mov	x9, v0.d[1]
  4187f8:	orr	x8, x8, x9
  4187fc:	stur	q0, [x29, #-48]
  418800:	cbz	x8, 418524 <_obstack_memory_used@@Base+0x2acc>
  418804:	ldr	x8, [sp, #88]
  418808:	cmp	x8, #0x1
  41880c:	b.lt	4189d8 <_obstack_memory_used@@Base+0x2f80>  // b.tstop
  418810:	ldur	x8, [x29, #-64]
  418814:	ldr	x20, [sp, #32]
  418818:	ldr	x23, [sp, #16]
  41881c:	mov	x21, xzr
  418820:	str	x8, [sp, #72]
  418824:	ldp	x8, x28, [x29, #-56]
  418828:	str	x8, [sp, #80]
  41882c:	ldur	x8, [x29, #-40]
  418830:	str	x8, [sp, #64]
  418834:	b	418850 <_obstack_memory_used@@Base+0x2df8>
  418838:	ldr	x8, [sp, #88]
  41883c:	add	x21, x21, #0x1
  418840:	add	x23, x23, #0x20
  418844:	add	x20, x20, #0x18
  418848:	cmp	x21, x8
  41884c:	b.ge	4189bc <_obstack_memory_used@@Base+0x2f64>  // b.tcont
  418850:	ldr	w8, [sp, #48]
  418854:	cmp	w8, #0x1
  418858:	b.ne	418878 <_obstack_memory_used@@Base+0x2e20>  // b.any
  41885c:	ldr	x8, [sp, #24]
  418860:	ldrb	w8, [x8]
  418864:	lsr	x9, x8, #3
  418868:	and	x9, x9, #0x18
  41886c:	ldr	x9, [x23, x9]
  418870:	lsr	x8, x9, x8
  418874:	tbz	w8, #0, 418838 <_obstack_memory_used@@Base+0x2de0>
  418878:	ldp	x11, x10, [x23]
  41887c:	ldp	x12, x13, [sp, #72]
  418880:	ldp	x9, x8, [x23, #16]
  418884:	ldr	x15, [sp, #64]
  418888:	and	x12, x11, x12
  41888c:	and	x13, x10, x13
  418890:	and	x14, x9, x28
  418894:	stp	x12, x13, [x29, #-96]
  418898:	orr	x12, x13, x12
  41889c:	and	x15, x8, x15
  4188a0:	orr	x12, x12, x14
  4188a4:	orr	x12, x12, x15
  4188a8:	stp	x14, x15, [x29, #-80]
  4188ac:	cbz	x12, 418838 <_obstack_memory_used@@Base+0x2de0>
  4188b0:	ldr	x13, [sp, #72]
  4188b4:	bic	x12, x11, x13
  4188b8:	bic	x13, x13, x11
  4188bc:	str	x13, [sp, #72]
  4188c0:	ldr	x13, [sp, #80]
  4188c4:	bic	x11, x10, x13
  4188c8:	bic	x13, x13, x10
  4188cc:	str	x13, [sp, #80]
  4188d0:	ldr	x13, [sp, #64]
  4188d4:	bic	x10, x9, x28
  4188d8:	stp	x12, x11, [x29, #-128]
  4188dc:	orr	x11, x11, x12
  4188e0:	bic	x28, x28, x9
  4188e4:	bic	x9, x8, x13
  4188e8:	orr	x11, x11, x10
  4188ec:	stp	x10, x9, [x29, #-112]
  4188f0:	orr	x9, x11, x9
  4188f4:	bic	x13, x13, x8
  4188f8:	str	x13, [sp, #64]
  4188fc:	cbz	x9, 418988 <_obstack_memory_used@@Base+0x2f30>
  418900:	ldr	x10, [sp, #88]
  418904:	ldr	x8, [sp, #16]
  418908:	ldp	q0, q1, [x29, #-128]
  41890c:	ldp	q2, q3, [x29, #-96]
  418910:	ldr	x11, [sp, #32]
  418914:	add	x8, x8, x10, lsl #5
  418918:	stp	q0, q1, [x8]
  41891c:	stp	q2, q3, [x23]
  418920:	ldr	x8, [x20, #8]
  418924:	mov	w9, #0x18                  	// #24
  418928:	madd	x22, x10, x9, x11
  41892c:	mov	x12, x20
  418930:	str	x8, [x22, #8]
  418934:	ldr	x24, [x20, #8]
  418938:	cmp	x24, #0x1
  41893c:	b.lt	418974 <_obstack_memory_used@@Base+0x2f1c>  // b.tstop
  418940:	lsl	x0, x8, #3
  418944:	str	x8, [x22]
  418948:	bl	402730 <malloc@plt>
  41894c:	ldr	x9, [sp, #32]
  418950:	ldr	x10, [sp, #88]
  418954:	mov	w8, #0x18                  	// #24
  418958:	madd	x8, x10, x8, x9
  41895c:	str	x0, [x8, #16]
  418960:	cbz	x0, 4192e8 <_obstack_memory_used@@Base+0x3890>
  418964:	ldr	x1, [x20, #16]
  418968:	lsl	x2, x24, #3
  41896c:	bl	402580 <memcpy@plt>
  418970:	b	41897c <_obstack_memory_used@@Base+0x2f24>
  418974:	stp	xzr, xzr, [x22]
  418978:	str	xzr, [x22, #16]
  41897c:	ldr	x8, [sp, #88]
  418980:	add	x8, x8, #0x1
  418984:	str	x8, [sp, #88]
  418988:	ldr	x8, [sp, #128]
  41898c:	ldr	x9, [sp, #40]
  418990:	mov	x0, x20
  418994:	ldr	x8, [x8, #24]
  418998:	ldr	x1, [x8, x9, lsl #3]
  41899c:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  4189a0:	tbz	w0, #0, 4192e0 <_obstack_memory_used@@Base+0x3888>
  4189a4:	ldp	x9, x8, [sp, #72]
  4189a8:	orr	x8, x8, x9
  4189ac:	ldr	x9, [sp, #64]
  4189b0:	orr	x8, x8, x28
  4189b4:	orr	x8, x8, x9
  4189b8:	cbnz	x8, 418838 <_obstack_memory_used@@Base+0x2de0>
  4189bc:	ldr	x8, [sp, #72]
  4189c0:	stur	x8, [x29, #-64]
  4189c4:	ldr	x8, [sp, #80]
  4189c8:	stp	x8, x28, [x29, #-56]
  4189cc:	ldr	x8, [sp, #64]
  4189d0:	stur	x8, [x29, #-40]
  4189d4:	b	4189dc <_obstack_memory_used@@Base+0x2f84>
  4189d8:	mov	x21, xzr
  4189dc:	ldr	x8, [sp, #88]
  4189e0:	cmp	x21, x8
  4189e4:	b.ne	418524 <_obstack_memory_used@@Base+0x2acc>  // b.any
  4189e8:	ldr	x8, [sp, #16]
  4189ec:	ldp	q1, q0, [x29, #-64]
  4189f0:	ldr	x9, [sp, #40]
  4189f4:	mov	w0, #0x8                   	// #8
  4189f8:	add	x8, x8, x21, lsl #5
  4189fc:	stp	q1, q0, [x8]
  418a00:	ldr	x8, [sp, #128]
  418a04:	ldr	x8, [x8, #24]
  418a08:	ldr	x23, [x8, x9, lsl #3]
  418a0c:	ldr	x9, [sp, #32]
  418a10:	mov	w8, #0x18                  	// #24
  418a14:	madd	x22, x21, x8, x9
  418a18:	mov	w8, #0x1                   	// #1
  418a1c:	dup	v0.2d, x8
  418a20:	str	q0, [x22]
  418a24:	bl	402730 <malloc@plt>
  418a28:	str	x0, [x22, #16]
  418a2c:	cbz	x0, 41935c <_obstack_memory_used@@Base+0x3904>
  418a30:	add	x8, x21, #0x1
  418a34:	str	x23, [x0]
  418a38:	str	x8, [sp, #88]
  418a3c:	b	41851c <_obstack_memory_used@@Base+0x2ac4>
  418a40:	ldr	x8, [sp, #88]
  418a44:	cmp	x8, #0x0
  418a48:	b.le	418e4c <_obstack_memory_used@@Base+0x33f4>
  418a4c:	ldr	x8, [sp, #88]
  418a50:	add	x8, x8, #0x1
  418a54:	lsl	x0, x8, #3
  418a58:	stp	x8, xzr, [x29, #-160]
  418a5c:	bl	402730 <malloc@plt>
  418a60:	cmp	x0, #0x0
  418a64:	mov	w8, #0xc                   	// #12
  418a68:	mov	x20, x0
  418a6c:	csel	w8, w8, wzr, eq  // eq = none
  418a70:	stur	x0, [x29, #-144]
  418a74:	stur	w8, [x29, #-132]
  418a78:	cbz	x0, 41936c <_obstack_memory_used@@Base+0x3914>
  418a7c:	ldr	x8, [sp, #88]
  418a80:	add	x8, x8, x8, lsl #1
  418a84:	lsl	x0, x8, #3
  418a88:	bl	402730 <malloc@plt>
  418a8c:	str	x0, [sp, #72]
  418a90:	cbz	x0, 41936c <_obstack_memory_used@@Base+0x3914>
  418a94:	ldr	x9, [sp, #88]
  418a98:	ldr	x10, [sp, #72]
  418a9c:	mov	w8, wzr
  418aa0:	mov	x28, xzr
  418aa4:	lsl	x9, x9, #3
  418aa8:	add	x10, x10, x9
  418aac:	mov	x20, xzr
  418ab0:	mov	x21, xzr
  418ab4:	add	x9, x10, x9
  418ab8:	str	xzr, [sp, #80]
  418abc:	str	xzr, [sp, #64]
  418ac0:	str	wzr, [sp, #24]
  418ac4:	stp	x9, x10, [sp, #40]
  418ac8:	b	418b2c <_obstack_memory_used@@Base+0x30d4>
  418acc:	ldrsb	w9, [x0, #104]
  418ad0:	tbnz	w9, #31, 418bdc <_obstack_memory_used@@Base+0x3184>
  418ad4:	ldp	x11, x10, [sp, #40]
  418ad8:	lsl	x9, x21, #3
  418adc:	str	x0, [x10, x9]
  418ae0:	ldr	x10, [sp, #72]
  418ae4:	ldr	x10, [x10, x9]
  418ae8:	str	x10, [x11, x9]
  418aec:	ldr	x9, [sp, #16]
  418af0:	ldr	x13, [sp, #88]
  418af4:	add	x9, x9, x21, lsl #5
  418af8:	add	x21, x21, #0x1
  418afc:	ldp	x10, x11, [x9]
  418b00:	cmp	x21, x13
  418b04:	ldr	x13, [sp, #64]
  418b08:	ldp	x12, x9, [x9, #16]
  418b0c:	orr	x20, x11, x20
  418b10:	orr	x13, x10, x13
  418b14:	ldr	x10, [sp, #80]
  418b18:	orr	x28, x12, x28
  418b1c:	str	x13, [sp, #64]
  418b20:	orr	x10, x9, x10
  418b24:	str	x10, [sp, #80]
  418b28:	b.eq	418c5c <_obstack_memory_used@@Base+0x3204>  // b.none
  418b2c:	ldr	x10, [sp, #32]
  418b30:	mov	w9, #0x18                  	// #24
  418b34:	stur	xzr, [x29, #-152]
  418b38:	madd	x22, x21, x9, x10
  418b3c:	ldr	x9, [x22, #8]!
  418b40:	cmp	x9, #0x1
  418b44:	b.lt	418bb0 <_obstack_memory_used@@Base+0x3158>  // b.tstop
  418b48:	ldr	x11, [sp, #32]
  418b4c:	mov	w10, #0x18                  	// #24
  418b50:	ldr	x12, [sp, #56]
  418b54:	mov	x23, xzr
  418b58:	madd	x10, x21, x10, x11
  418b5c:	ldr	x24, [x10, #16]
  418b60:	b	418b7c <_obstack_memory_used@@Base+0x3124>
  418b64:	ldr	x9, [x22]
  418b68:	ldr	x12, [sp, #56]
  418b6c:	mov	w8, wzr
  418b70:	add	x23, x23, #0x1
  418b74:	cmp	x23, x9
  418b78:	b.ge	418bac <_obstack_memory_used@@Base+0x3154>  // b.tcont
  418b7c:	ldr	x10, [x12, #24]
  418b80:	ldr	x11, [x24, x23, lsl #3]
  418b84:	ldr	x10, [x10, x11, lsl #3]
  418b88:	cmn	x10, #0x1
  418b8c:	b.eq	418b70 <_obstack_memory_used@@Base+0x3118>  // b.none
  418b90:	ldr	x8, [x12, #48]
  418b94:	mov	w9, #0x18                  	// #24
  418b98:	sub	x0, x29, #0xa0
  418b9c:	madd	x1, x10, x9, x8
  418ba0:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  418ba4:	cbz	w0, 418b64 <_obstack_memory_used@@Base+0x310c>
  418ba8:	b	419288 <_obstack_memory_used@@Base+0x3830>
  418bac:	stur	w8, [x29, #-132]
  418bb0:	ldr	x1, [sp, #56]
  418bb4:	sub	x0, x29, #0x84
  418bb8:	sub	x2, x29, #0xa0
  418bbc:	mov	w3, wzr
  418bc0:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  418bc4:	ldur	w8, [x29, #-132]
  418bc8:	ldr	x9, [sp, #72]
  418bcc:	str	x0, [x9, x21, lsl #3]
  418bd0:	cbnz	x0, 418acc <_obstack_memory_used@@Base+0x3074>
  418bd4:	cbz	w8, 418acc <_obstack_memory_used@@Base+0x3074>
  418bd8:	b	41928c <_obstack_memory_used@@Base+0x3834>
  418bdc:	ldr	x1, [sp, #56]
  418be0:	sub	x0, x29, #0x84
  418be4:	sub	x2, x29, #0xa0
  418be8:	mov	w3, #0x1                   	// #1
  418bec:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  418bf0:	ldr	x8, [sp, #48]
  418bf4:	str	x0, [x8, x21, lsl #3]
  418bf8:	cbnz	x0, 418c04 <_obstack_memory_used@@Base+0x31ac>
  418bfc:	ldur	w8, [x29, #-132]
  418c00:	cbnz	w8, 41928c <_obstack_memory_used@@Base+0x3834>
  418c04:	ldr	x8, [sp, #72]
  418c08:	ldr	x8, [x8, x21, lsl #3]
  418c0c:	cmp	x8, x0
  418c10:	b.eq	418c30 <_obstack_memory_used@@Base+0x31d8>  // b.none
  418c14:	ldr	x8, [sp, #56]
  418c18:	ldr	w9, [sp, #24]
  418c1c:	ldr	w8, [x8, #180]
  418c20:	cmp	w8, #0x1
  418c24:	cset	w8, gt
  418c28:	orr	w9, w9, w8
  418c2c:	str	w9, [sp, #24]
  418c30:	ldr	x1, [sp, #56]
  418c34:	sub	x0, x29, #0x84
  418c38:	sub	x2, x29, #0xa0
  418c3c:	mov	w3, #0x2                   	// #2
  418c40:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  418c44:	ldur	w8, [x29, #-132]
  418c48:	ldr	x9, [sp, #40]
  418c4c:	str	x0, [x9, x21, lsl #3]
  418c50:	cbnz	x0, 418aec <_obstack_memory_used@@Base+0x3094>
  418c54:	cbz	w8, 418aec <_obstack_memory_used@@Base+0x3094>
  418c58:	b	41928c <_obstack_memory_used@@Base+0x3834>
  418c5c:	ldr	w8, [sp, #24]
  418c60:	tbnz	w8, #0, 418e60 <_obstack_memory_used@@Base+0x3408>
  418c64:	mov	w0, #0x8                   	// #8
  418c68:	mov	w1, #0x100                 	// #256
  418c6c:	bl	402840 <calloc@plt>
  418c70:	str	x0, [x19]
  418c74:	cbz	x0, 41928c <_obstack_memory_used@@Base+0x3834>
  418c78:	ldr	x8, [sp, #64]
  418c7c:	cbz	x8, 418cdc <_obstack_memory_used@@Base+0x3284>
  418c80:	ldr	x9, [sp, #64]
  418c84:	mov	x8, xzr
  418c88:	mov	w10, #0x1                   	// #1
  418c8c:	tbnz	w9, #0, 418ca4 <_obstack_memory_used@@Base+0x324c>
  418c90:	lsl	x10, x10, #1
  418c94:	lsr	x9, x9, #1
  418c98:	add	x8, x8, #0x1
  418c9c:	cbnz	x9, 418c8c <_obstack_memory_used@@Base+0x3234>
  418ca0:	b	418cdc <_obstack_memory_used@@Base+0x3284>
  418ca4:	ldr	x12, [sp, #16]
  418ca8:	mov	x11, #0xfffffffffffffff8    	// #-8
  418cac:	ldr	x13, [x12], #32
  418cb0:	add	x11, x11, #0x8
  418cb4:	tst	x13, x10
  418cb8:	b.eq	418cac <_obstack_memory_used@@Base+0x3254>  // b.none
  418cbc:	ldp	x13, x12, [sp, #48]
  418cc0:	ldr	x12, [x12, #184]
  418cc4:	tst	x12, x10
  418cc8:	ldr	x12, [sp, #72]
  418ccc:	csel	x12, x12, x13, eq  // eq = none
  418cd0:	ldr	x11, [x12, x11]
  418cd4:	str	x11, [x0, x8, lsl #3]
  418cd8:	b	418c90 <_obstack_memory_used@@Base+0x3238>
  418cdc:	cbz	x20, 418d4c <_obstack_memory_used@@Base+0x32f4>
  418ce0:	ldr	x9, [sp, #32]
  418ce4:	mov	w8, #0x1808                	// #6152
  418ce8:	mov	w10, #0x1                   	// #1
  418cec:	add	x8, x9, x8
  418cf0:	mov	w9, #0x40                  	// #64
  418cf4:	tbnz	w20, #0, 418d14 <_obstack_memory_used@@Base+0x32bc>
  418cf8:	mov	x11, x20
  418cfc:	lsr	x11, x20, #1
  418d00:	lsl	x10, x10, #1
  418d04:	add	x9, x9, #0x1
  418d08:	mov	x20, x11
  418d0c:	cbnz	x11, 418cf4 <_obstack_memory_used@@Base+0x329c>
  418d10:	b	418d4c <_obstack_memory_used@@Base+0x32f4>
  418d14:	mov	x11, #0xfffffffffffffff8    	// #-8
  418d18:	mov	x12, x8
  418d1c:	ldr	x13, [x12], #32
  418d20:	add	x11, x11, #0x8
  418d24:	tst	x13, x10
  418d28:	b.eq	418d1c <_obstack_memory_used@@Base+0x32c4>  // b.none
  418d2c:	ldp	x13, x12, [sp, #48]
  418d30:	ldr	x12, [x12, #192]
  418d34:	tst	x12, x10
  418d38:	ldr	x12, [sp, #72]
  418d3c:	csel	x12, x12, x13, eq  // eq = none
  418d40:	ldr	x11, [x12, x11]
  418d44:	str	x11, [x0, x9, lsl #3]
  418d48:	b	418cf8 <_obstack_memory_used@@Base+0x32a0>
  418d4c:	cbz	x28, 418db4 <_obstack_memory_used@@Base+0x335c>
  418d50:	ldr	x9, [sp, #32]
  418d54:	mov	w8, #0x1810                	// #6160
  418d58:	mov	w10, #0x1                   	// #1
  418d5c:	add	x8, x9, x8
  418d60:	mov	w9, #0x80                  	// #128
  418d64:	tbnz	w28, #0, 418d7c <_obstack_memory_used@@Base+0x3324>
  418d68:	lsl	x10, x10, #1
  418d6c:	lsr	x28, x28, #1
  418d70:	add	x9, x9, #0x1
  418d74:	cbnz	x28, 418d64 <_obstack_memory_used@@Base+0x330c>
  418d78:	b	418db4 <_obstack_memory_used@@Base+0x335c>
  418d7c:	mov	x11, #0xfffffffffffffff8    	// #-8
  418d80:	mov	x12, x8
  418d84:	ldr	x13, [x12], #32
  418d88:	add	x11, x11, #0x8
  418d8c:	tst	x13, x10
  418d90:	b.eq	418d84 <_obstack_memory_used@@Base+0x332c>  // b.none
  418d94:	ldp	x13, x12, [sp, #48]
  418d98:	ldr	x12, [x12, #200]
  418d9c:	tst	x12, x10
  418da0:	ldr	x12, [sp, #72]
  418da4:	csel	x12, x12, x13, eq  // eq = none
  418da8:	ldr	x11, [x12, x11]
  418dac:	str	x11, [x0, x9, lsl #3]
  418db0:	b	418d68 <_obstack_memory_used@@Base+0x3310>
  418db4:	ldr	x8, [sp, #80]
  418db8:	cbz	x8, 419038 <_obstack_memory_used@@Base+0x35e0>
  418dbc:	ldr	x9, [sp, #32]
  418dc0:	mov	w8, #0x1818                	// #6168
  418dc4:	mov	w10, #0x1                   	// #1
  418dc8:	add	x8, x9, x8
  418dcc:	mov	w9, #0xc0                  	// #192
  418dd0:	ldr	x11, [sp, #80]
  418dd4:	tbnz	w11, #0, 418df4 <_obstack_memory_used@@Base+0x339c>
  418dd8:	ldr	x11, [sp, #80]
  418ddc:	lsl	x10, x10, #1
  418de0:	add	x9, x9, #0x1
  418de4:	lsr	x11, x11, #1
  418de8:	str	x11, [sp, #80]
  418dec:	cbnz	x11, 418dd0 <_obstack_memory_used@@Base+0x3378>
  418df0:	b	419038 <_obstack_memory_used@@Base+0x35e0>
  418df4:	mov	x11, #0xfffffffffffffff8    	// #-8
  418df8:	mov	x12, x8
  418dfc:	ldr	x13, [x12], #32
  418e00:	add	x11, x11, #0x8
  418e04:	tst	x13, x10
  418e08:	b.eq	418dfc <_obstack_memory_used@@Base+0x33a4>  // b.none
  418e0c:	ldp	x13, x12, [sp, #48]
  418e10:	ldr	x12, [x12, #208]
  418e14:	tst	x12, x10
  418e18:	ldr	x12, [sp, #72]
  418e1c:	csel	x12, x12, x13, eq  // eq = none
  418e20:	ldr	x11, [x12, x11]
  418e24:	str	x11, [x0, x9, lsl #3]
  418e28:	b	418dd8 <_obstack_memory_used@@Base+0x3380>
  418e2c:	ldr	x0, [sp, #32]
  418e30:	bl	402a10 <free@plt>
  418e34:	mov	w0, #0x8                   	// #8
  418e38:	mov	w1, #0x100                 	// #256
  418e3c:	bl	402840 <calloc@plt>
  418e40:	str	x0, [x19]
  418e44:	cbnz	x0, 4190c8 <_obstack_memory_used@@Base+0x3670>
  418e48:	b	419330 <_obstack_memory_used@@Base+0x38d8>
  418e4c:	ldr	x0, [sp, #32]
  418e50:	bl	402a10 <free@plt>
  418e54:	ldr	x8, [sp, #88]
  418e58:	cbz	x8, 418e34 <_obstack_memory_used@@Base+0x33dc>
  418e5c:	b	419330 <_obstack_memory_used@@Base+0x38d8>
  418e60:	mov	w0, #0x8                   	// #8
  418e64:	mov	w1, #0x200                 	// #512
  418e68:	bl	402840 <calloc@plt>
  418e6c:	ldr	x8, [sp, #128]
  418e70:	str	x0, [x8, #96]
  418e74:	cbz	x0, 41928c <_obstack_memory_used@@Base+0x3834>
  418e78:	ldr	x8, [sp, #64]
  418e7c:	cbz	x8, 418edc <_obstack_memory_used@@Base+0x3484>
  418e80:	ldp	x10, x9, [sp, #64]
  418e84:	mov	x8, xzr
  418e88:	mov	w11, #0x1                   	// #1
  418e8c:	sub	x9, x9, #0x8
  418e90:	tbnz	w10, #0, 418ea8 <_obstack_memory_used@@Base+0x3450>
  418e94:	lsl	x11, x11, #1
  418e98:	lsr	x10, x10, #1
  418e9c:	add	x8, x8, #0x1
  418ea0:	cbnz	x10, 418e90 <_obstack_memory_used@@Base+0x3438>
  418ea4:	b	418edc <_obstack_memory_used@@Base+0x3484>
  418ea8:	ldr	x13, [sp, #16]
  418eac:	mov	x12, x9
  418eb0:	ldr	x14, [x13], #32
  418eb4:	add	x12, x12, #0x8
  418eb8:	tst	x14, x11
  418ebc:	b.eq	418eb0 <_obstack_memory_used@@Base+0x3458>  // b.none
  418ec0:	ldr	x14, [sp, #88]
  418ec4:	ldr	x13, [x12]
  418ec8:	ldr	x12, [x12, x14, lsl #3]
  418ecc:	add	x14, x0, x8, lsl #3
  418ed0:	str	x13, [x14]
  418ed4:	str	x12, [x14, #2048]
  418ed8:	b	418e94 <_obstack_memory_used@@Base+0x343c>
  418edc:	cbz	x20, 418f50 <_obstack_memory_used@@Base+0x34f8>
  418ee0:	ldr	x8, [sp, #72]
  418ee4:	ldr	x10, [sp, #32]
  418ee8:	mov	w9, #0x1808                	// #6152
  418eec:	mov	w11, #0x1                   	// #1
  418ef0:	sub	x8, x8, #0x8
  418ef4:	add	x9, x10, x9
  418ef8:	mov	w10, #0x40                  	// #64
  418efc:	tbnz	w20, #0, 418f1c <_obstack_memory_used@@Base+0x34c4>
  418f00:	mov	x12, x20
  418f04:	lsr	x12, x20, #1
  418f08:	lsl	x11, x11, #1
  418f0c:	add	x10, x10, #0x1
  418f10:	mov	x20, x12
  418f14:	cbnz	x12, 418efc <_obstack_memory_used@@Base+0x34a4>
  418f18:	b	418f50 <_obstack_memory_used@@Base+0x34f8>
  418f1c:	mov	x13, x9
  418f20:	mov	x12, x8
  418f24:	ldr	x14, [x13], #32
  418f28:	add	x12, x12, #0x8
  418f2c:	tst	x14, x11
  418f30:	b.eq	418f24 <_obstack_memory_used@@Base+0x34cc>  // b.none
  418f34:	ldr	x14, [sp, #88]
  418f38:	ldr	x13, [x12]
  418f3c:	ldr	x12, [x12, x14, lsl #3]
  418f40:	add	x14, x0, x10, lsl #3
  418f44:	str	x13, [x14]
  418f48:	str	x12, [x14, #2048]
  418f4c:	b	418f00 <_obstack_memory_used@@Base+0x34a8>
  418f50:	cbz	x28, 418fbc <_obstack_memory_used@@Base+0x3564>
  418f54:	ldr	x8, [sp, #72]
  418f58:	ldr	x10, [sp, #32]
  418f5c:	mov	w9, #0x1810                	// #6160
  418f60:	mov	w11, #0x1                   	// #1
  418f64:	sub	x8, x8, #0x8
  418f68:	add	x9, x10, x9
  418f6c:	mov	w10, #0x80                  	// #128
  418f70:	tbnz	w28, #0, 418f88 <_obstack_memory_used@@Base+0x3530>
  418f74:	lsl	x11, x11, #1
  418f78:	lsr	x28, x28, #1
  418f7c:	add	x10, x10, #0x1
  418f80:	cbnz	x28, 418f70 <_obstack_memory_used@@Base+0x3518>
  418f84:	b	418fbc <_obstack_memory_used@@Base+0x3564>
  418f88:	mov	x13, x9
  418f8c:	mov	x12, x8
  418f90:	ldr	x14, [x13], #32
  418f94:	add	x12, x12, #0x8
  418f98:	tst	x14, x11
  418f9c:	b.eq	418f90 <_obstack_memory_used@@Base+0x3538>  // b.none
  418fa0:	ldr	x14, [sp, #88]
  418fa4:	ldr	x13, [x12]
  418fa8:	ldr	x12, [x12, x14, lsl #3]
  418fac:	add	x14, x0, x10, lsl #3
  418fb0:	str	x13, [x14]
  418fb4:	str	x12, [x14, #2048]
  418fb8:	b	418f74 <_obstack_memory_used@@Base+0x351c>
  418fbc:	ldr	x8, [sp, #80]
  418fc0:	cbz	x8, 419038 <_obstack_memory_used@@Base+0x35e0>
  418fc4:	ldr	x8, [sp, #72]
  418fc8:	ldr	x10, [sp, #32]
  418fcc:	mov	w9, #0x1818                	// #6168
  418fd0:	mov	w11, #0x1                   	// #1
  418fd4:	sub	x8, x8, #0x8
  418fd8:	add	x9, x10, x9
  418fdc:	mov	w10, #0xc0                  	// #192
  418fe0:	ldr	x12, [sp, #80]
  418fe4:	tbnz	w12, #0, 419004 <_obstack_memory_used@@Base+0x35ac>
  418fe8:	ldr	x12, [sp, #80]
  418fec:	lsl	x11, x11, #1
  418ff0:	add	x10, x10, #0x1
  418ff4:	lsr	x12, x12, #1
  418ff8:	str	x12, [sp, #80]
  418ffc:	cbnz	x12, 418fe0 <_obstack_memory_used@@Base+0x3588>
  419000:	b	419038 <_obstack_memory_used@@Base+0x35e0>
  419004:	mov	x13, x9
  419008:	mov	x12, x8
  41900c:	ldr	x14, [x13], #32
  419010:	add	x12, x12, #0x8
  419014:	tst	x14, x11
  419018:	b.eq	41900c <_obstack_memory_used@@Base+0x35b4>  // b.none
  41901c:	ldr	x14, [sp, #88]
  419020:	ldr	x13, [x12]
  419024:	ldr	x12, [x12, x14, lsl #3]
  419028:	add	x14, x0, x10, lsl #3
  41902c:	str	x13, [x14]
  419030:	str	x12, [x14, #2048]
  419034:	b	418fe8 <_obstack_memory_used@@Base+0x3590>
  419038:	ldr	x8, [sp, #64]
  41903c:	tbz	w8, #10, 419088 <_obstack_memory_used@@Base+0x3630>
  419040:	ldr	x9, [sp, #88]
  419044:	ldr	x8, [sp, #72]
  419048:	add	x8, x8, x9, lsl #4
  41904c:	ldr	x10, [sp, #16]
  419050:	ldrb	w10, [x10, #1]
  419054:	tbnz	w10, #2, 419074 <_obstack_memory_used@@Base+0x361c>
  419058:	ldr	x10, [sp, #16]
  41905c:	add	x8, x8, #0x8
  419060:	subs	x9, x9, #0x1
  419064:	add	x10, x10, #0x20
  419068:	str	x10, [sp, #16]
  41906c:	b.ne	41904c <_obstack_memory_used@@Base+0x35f4>  // b.any
  419070:	b	419088 <_obstack_memory_used@@Base+0x3630>
  419074:	ldr	x8, [x8]
  419078:	ldr	w9, [sp, #24]
  41907c:	str	x8, [x0, #80]
  419080:	tbz	w9, #0, 419088 <_obstack_memory_used@@Base+0x3630>
  419084:	str	x8, [x0, #2128]
  419088:	ldr	x0, [sp, #72]
  41908c:	bl	402a10 <free@plt>
  419090:	ldur	x0, [x29, #-144]
  419094:	bl	402a10 <free@plt>
  419098:	mov	w21, #0x10                  	// #16
  41909c:	ldr	x8, [sp, #32]
  4190a0:	ldr	x0, [x8, x21]
  4190a4:	bl	402a10 <free@plt>
  4190a8:	ldr	x8, [sp, #88]
  4190ac:	add	x21, x21, #0x18
  4190b0:	subs	x8, x8, #0x1
  4190b4:	str	x8, [sp, #88]
  4190b8:	b.ne	41909c <_obstack_memory_used@@Base+0x3644>  // b.any
  4190bc:	ldr	x0, [sp, #32]
  4190c0:	bl	402a10 <free@plt>
  4190c4:	ldr	x0, [x19]
  4190c8:	ldp	x15, x22, [sp, #104]
  4190cc:	ldr	x23, [sp, #184]
  4190d0:	ldr	x24, [sp, #168]
  4190d4:	ldr	x11, [sp, #96]
  4190d8:	ldr	w28, [sp, #120]
  4190dc:	ldr	x20, [sp, #8]
  4190e0:	ldr	x12, [sp, #128]
  4190e4:	cbnz	x0, 417ed0 <_obstack_memory_used@@Base+0x2478>
  4190e8:	b	4184ac <_obstack_memory_used@@Base+0x2a54>
  4190ec:	add	w1, w8, #0x2
  4190f0:	add	x0, sp, #0x130
  4190f4:	mov	x21, x11
  4190f8:	mov	x19, x15
  4190fc:	mov	x26, x12
  419100:	bl	421a1c <_obstack_memory_used@@Base+0xbfc4>
  419104:	mov	x12, x26
  419108:	mov	x11, x21
  41910c:	mov	x15, x19
  419110:	stur	w0, [x29, #-164]
  419114:	cbz	w0, 417ea8 <_obstack_memory_used@@Base+0x2450>
  419118:	b	419e5c <_obstack_memory_used@@Base+0x4404>
  41911c:	ldr	x8, [sp, #376]
  419120:	cmp	x8, #0x0
  419124:	b.le	419160 <_obstack_memory_used@@Base+0x3708>
  419128:	ldr	x9, [sp, #392]
  41912c:	sub	x8, x8, #0x1
  419130:	cmp	x9, x8
  419134:	b.eq	419240 <_obstack_memory_used@@Base+0x37e8>  // b.none
  419138:	ldr	w9, [sp, #448]
  41913c:	cmp	w9, #0x2
  419140:	b.lt	419170 <_obstack_memory_used@@Base+0x3718>  // b.tstop
  419144:	ldr	x9, [sp, #320]
  419148:	ldr	w19, [x9, x8, lsl #2]
  41914c:	cmn	w19, #0x1
  419150:	b.ne	419198 <_obstack_memory_used@@Base+0x3740>  // b.any
  419154:	sub	x8, x8, #0x1
  419158:	cmn	x8, #0x1
  41915c:	b.ne	419148 <_obstack_memory_used@@Base+0x36f0>  // b.any
  419160:	ldr	w8, [sp, #416]
  419164:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  419168:	stur	wzr, [x29, #-164]
  41916c:	b	417eb0 <_obstack_memory_used@@Base+0x2458>
  419170:	ldr	x9, [sp, #312]
  419174:	ldr	x10, [sp, #432]
  419178:	ldrb	w8, [x9, x8]
  41917c:	lsr	x9, x8, #3
  419180:	and	x9, x9, #0x18
  419184:	ldr	x9, [x10, x9]
  419188:	lsr	x9, x9, x8
  41918c:	tbz	w9, #0, 4191bc <_obstack_memory_used@@Base+0x3764>
  419190:	mov	w8, #0x1                   	// #1
  419194:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  419198:	ldrb	w8, [sp, #446]
  41919c:	cbnz	w8, 419248 <_obstack_memory_used@@Base+0x37f0>
  4191a0:	cmp	w19, #0xa
  4191a4:	b.ne	4191c4 <_obstack_memory_used@@Base+0x376c>  // b.any
  4191a8:	ldrb	w8, [sp, #445]
  4191ac:	cmp	w8, #0x0
  4191b0:	cset	w8, ne  // ne = any
  4191b4:	lsl	w8, w8, #1
  4191b8:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  4191bc:	cmp	w8, #0xa
  4191c0:	b.eq	4191a8 <_obstack_memory_used@@Base+0x3750>  // b.none
  4191c4:	mov	w8, wzr
  4191c8:	ubfiz	w8, w8, #8, #1
  4191cc:	orr	x8, x8, x26
  4191d0:	ldr	x26, [x21, x8, lsl #3]
  4191d4:	b	417ed4 <_obstack_memory_used@@Base+0x247c>
  4191d8:	ldr	w8, [sp, #464]
  4191dc:	mov	w9, #0xa                   	// #10
  4191e0:	and	w8, w8, #0x2
  4191e4:	eor	w8, w8, w9
  4191e8:	b	41806c <_obstack_memory_used@@Base+0x2614>
  4191ec:	stur	w0, [x29, #-96]
  4191f0:	mov	x22, x24
  4191f4:	ldr	x24, [sp, #168]
  4191f8:	ldp	x11, x15, [sp, #96]
  4191fc:	ldr	x12, [sp, #128]
  419200:	mov	x26, xzr
  419204:	stur	w0, [x29, #-164]
  419208:	b	417ed4 <_obstack_memory_used@@Base+0x247c>
  41920c:	mov	w0, w19
  419210:	str	x15, [sp, #104]
  419214:	bl	402b10 <iswalnum@plt>
  419218:	cmp	w19, #0x5f
  41921c:	mov	w8, #0x1                   	// #1
  419220:	b.eq	419230 <_obstack_memory_used@@Base+0x37d8>  // b.none
  419224:	ldr	x15, [sp, #104]
  419228:	cbz	w0, 418044 <_obstack_memory_used@@Base+0x25ec>
  41922c:	b	41806c <_obstack_memory_used@@Base+0x2614>
  419230:	ldr	x15, [sp, #104]
  419234:	b	41806c <_obstack_memory_used@@Base+0x2614>
  419238:	ldr	x23, [sp, #184]
  41923c:	b	4191f4 <_obstack_memory_used@@Base+0x379c>
  419240:	mov	w8, #0xa                   	// #10
  419244:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  419248:	mov	w0, w19
  41924c:	str	x12, [sp, #128]
  419250:	str	x20, [sp, #8]
  419254:	mov	x20, x11
  419258:	str	x15, [sp, #104]
  41925c:	bl	402b10 <iswalnum@plt>
  419260:	cmp	w19, #0x5f
  419264:	mov	w8, #0x1                   	// #1
  419268:	b.eq	4192cc <_obstack_memory_used@@Base+0x3874>  // b.none
  41926c:	ldr	x15, [sp, #104]
  419270:	mov	x11, x20
  419274:	ldr	x20, [sp, #8]
  419278:	ldr	x12, [sp, #128]
  41927c:	mov	w10, w19
  419280:	cbz	w0, 4191a0 <_obstack_memory_used@@Base+0x3748>
  419284:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  419288:	stur	w0, [x29, #-132]
  41928c:	ldr	x0, [sp, #72]
  419290:	bl	402a10 <free@plt>
  419294:	ldur	x0, [x29, #-144]
  419298:	bl	402a10 <free@plt>
  41929c:	ldr	x8, [sp, #88]
  4192a0:	cmp	x8, #0x1
  4192a4:	b.lt	419328 <_obstack_memory_used@@Base+0x38d0>  // b.tstop
  4192a8:	ldr	x8, [sp, #32]
  4192ac:	add	x19, x8, #0x10
  4192b0:	ldr	x0, [x19], #24
  4192b4:	bl	402a10 <free@plt>
  4192b8:	ldr	x8, [sp, #88]
  4192bc:	subs	x8, x8, #0x1
  4192c0:	str	x8, [sp, #88]
  4192c4:	b.ne	4192b0 <_obstack_memory_used@@Base+0x3858>  // b.any
  4192c8:	b	419328 <_obstack_memory_used@@Base+0x38d0>
  4192cc:	ldr	x15, [sp, #104]
  4192d0:	mov	x11, x20
  4192d4:	ldr	x20, [sp, #8]
  4192d8:	ldr	x12, [sp, #128]
  4192dc:	b	4191c8 <_obstack_memory_used@@Base+0x3770>
  4192e0:	ldr	x8, [sp, #72]
  4192e4:	b	4192f0 <_obstack_memory_used@@Base+0x3898>
  4192e8:	ldr	x8, [sp, #72]
  4192ec:	stp	xzr, xzr, [x22]
  4192f0:	stur	x8, [x29, #-64]
  4192f4:	ldr	x8, [sp, #80]
  4192f8:	stp	x8, x28, [x29, #-56]
  4192fc:	ldr	x8, [sp, #64]
  419300:	stur	x8, [x29, #-40]
  419304:	ldr	x21, [sp, #88]
  419308:	cmp	x21, #0x1
  41930c:	b.lt	419328 <_obstack_memory_used@@Base+0x38d0>  // b.tstop
  419310:	ldr	x8, [sp, #32]
  419314:	add	x19, x8, #0x10
  419318:	ldr	x0, [x19], #24
  41931c:	bl	402a10 <free@plt>
  419320:	subs	x21, x21, #0x1
  419324:	b.ne	419318 <_obstack_memory_used@@Base+0x38c0>  // b.any
  419328:	ldr	x0, [sp, #32]
  41932c:	bl	402a10 <free@plt>
  419330:	ldp	x15, x22, [sp, #104]
  419334:	ldr	x23, [sp, #184]
  419338:	ldr	x24, [sp, #168]
  41933c:	ldr	x11, [sp, #96]
  419340:	ldr	w28, [sp, #120]
  419344:	ldr	x20, [sp, #8]
  419348:	ldr	x12, [sp, #128]
  41934c:	mov	w8, #0xc                   	// #12
  419350:	mov	x26, xzr
  419354:	stur	w8, [x29, #-164]
  419358:	b	417ed4 <_obstack_memory_used@@Base+0x247c>
  41935c:	stp	xzr, xzr, [x22]
  419360:	cmp	x21, #0x1
  419364:	b.ge	419310 <_obstack_memory_used@@Base+0x38b8>  // b.tcont
  419368:	b	419328 <_obstack_memory_used@@Base+0x38d0>
  41936c:	mov	x0, x20
  419370:	bl	402a10 <free@plt>
  419374:	b	4192a8 <_obstack_memory_used@@Base+0x3850>
  419378:	ldr	x8, [sp, #200]
  41937c:	str	x8, [sp, #264]
  419380:	ldr	x9, [sp, #264]
  419384:	cbnz	x9, 419398 <_obstack_memory_used@@Base+0x3940>
  419388:	b	4193a4 <_obstack_memory_used@@Base+0x394c>
  41938c:	mov	x15, x19
  419390:	ldr	x9, [sp, #264]
  419394:	cbz	x9, 4193a4 <_obstack_memory_used@@Base+0x394c>
  419398:	ldr	x8, [x9]
  41939c:	add	x8, x8, x15
  4193a0:	str	x8, [x9]
  4193a4:	ldr	x28, [sp, #272]
  4193a8:	cmn	x27, #0x1
  4193ac:	b.eq	419784 <_obstack_memory_used@@Base+0x3d2c>  // b.none
  4193b0:	cmn	x27, #0x2
  4193b4:	b.eq	419e5c <_obstack_memory_used@@Base+0x4404>  // b.none
  4193b8:	str	x27, [sp, #472]
  4193bc:	ldrb	w8, [x23, #56]
  4193c0:	cmp	x24, #0x2
  4193c4:	b.cc	4193cc <_obstack_memory_used@@Base+0x3974>  // b.lo, b.ul, b.last
  4193c8:	tbz	w8, #4, 4193d4 <_obstack_memory_used@@Base+0x397c>
  4193cc:	ldr	x9, [x22, #152]
  4193d0:	cbz	x9, 4194ec <_obstack_memory_used@@Base+0x3a94>
  4193d4:	ldr	x8, [sp, #488]
  4193d8:	ldr	x21, [x8, x27, lsl #3]
  4193dc:	tbnz	x27, #63, 419414 <_obstack_memory_used@@Base+0x39bc>
  4193e0:	ldr	x8, [sp, #392]
  4193e4:	cmp	x8, x27
  4193e8:	b.eq	4199d0 <_obstack_memory_used@@Base+0x3f78>  // b.none
  4193ec:	ldr	w8, [sp, #448]
  4193f0:	cmp	w8, #0x2
  4193f4:	b.lt	41941c <_obstack_memory_used@@Base+0x39c4>  // b.tstop
  4193f8:	ldr	x8, [sp, #320]
  4193fc:	ldr	w19, [x8, x27, lsl #2]
  419400:	cmn	w19, #0x1
  419404:	b.ne	419444 <_obstack_memory_used@@Base+0x39ec>  // b.any
  419408:	sub	x27, x27, #0x1
  41940c:	cmn	x27, #0x1
  419410:	b.ne	4193fc <_obstack_memory_used@@Base+0x39a4>  // b.any
  419414:	ldr	w8, [sp, #416]
  419418:	b	419474 <_obstack_memory_used@@Base+0x3a1c>
  41941c:	ldr	x8, [sp, #312]
  419420:	ldr	x9, [sp, #432]
  419424:	ldrb	w8, [x8, x27]
  419428:	lsr	x10, x8, #3
  41942c:	and	x10, x10, #0x18
  419430:	ldr	x9, [x9, x10]
  419434:	lsr	x9, x9, x8
  419438:	tbz	w9, #0, 419468 <_obstack_memory_used@@Base+0x3a10>
  41943c:	mov	w8, #0x1                   	// #1
  419440:	b	419474 <_obstack_memory_used@@Base+0x3a1c>
  419444:	ldrb	w8, [sp, #446]
  419448:	cbnz	w8, 419aac <_obstack_memory_used@@Base+0x4054>
  41944c:	cmp	w19, #0xa
  419450:	b.ne	419470 <_obstack_memory_used@@Base+0x3a18>  // b.any
  419454:	ldrb	w8, [sp, #445]
  419458:	cmp	w8, #0x0
  41945c:	cset	w8, ne  // ne = any
  419460:	lsl	w8, w8, #1
  419464:	b	419474 <_obstack_memory_used@@Base+0x3a1c>
  419468:	cmp	w8, #0xa
  41946c:	b.eq	419454 <_obstack_memory_used@@Base+0x39fc>  // b.none
  419470:	mov	w8, wzr
  419474:	ldr	x9, [x21, #16]
  419478:	cmp	x9, #0x1
  41947c:	b.lt	4194e0 <_obstack_memory_used@@Base+0x3a88>  // b.tstop
  419480:	ldr	x11, [sp, #456]
  419484:	ldr	x10, [x21, #24]
  419488:	ldr	x11, [x11]
  41948c:	b	41949c <_obstack_memory_used@@Base+0x3a44>
  419490:	subs	x9, x9, #0x1
  419494:	add	x10, x10, #0x8
  419498:	b.eq	4194e0 <_obstack_memory_used@@Base+0x3a88>  // b.none
  41949c:	ldr	x12, [x10]
  4194a0:	add	x13, x11, x12, lsl #4
  4194a4:	ldr	w13, [x13, #8]
  4194a8:	and	w14, w13, #0xff
  4194ac:	cmp	w14, #0x2
  4194b0:	b.ne	419490 <_obstack_memory_used@@Base+0x3a38>  // b.any
  4194b4:	tst	w13, #0x3ff00
  4194b8:	b.eq	4194e4 <_obstack_memory_used@@Base+0x3a8c>  // b.none
  4194bc:	tbnz	w8, #0, 4194c4 <_obstack_memory_used@@Base+0x3a6c>
  4194c0:	tbnz	w13, #10, 419490 <_obstack_memory_used@@Base+0x3a38>
  4194c4:	tbz	w8, #0, 4194cc <_obstack_memory_used@@Base+0x3a74>
  4194c8:	tbnz	w13, #11, 419490 <_obstack_memory_used@@Base+0x3a38>
  4194cc:	tbnz	w8, #1, 4194d4 <_obstack_memory_used@@Base+0x3a7c>
  4194d0:	tbnz	w13, #13, 419490 <_obstack_memory_used@@Base+0x3a38>
  4194d4:	tbnz	w8, #3, 4194e4 <_obstack_memory_used@@Base+0x3a8c>
  4194d8:	tbnz	w13, #15, 419490 <_obstack_memory_used@@Base+0x3a38>
  4194dc:	b	4194e4 <_obstack_memory_used@@Base+0x3a8c>
  4194e0:	mov	x12, xzr
  4194e4:	str	x12, [sp, #480]
  4194e8:	ldrb	w8, [x23, #56]
  4194ec:	cmp	x24, #0x2
  4194f0:	b.cc	419500 <_obstack_memory_used@@Base+0x3aa8>  // b.lo, b.ul, b.last
  4194f4:	tbnz	w8, #4, 419500 <_obstack_memory_used@@Base+0x3aa8>
  4194f8:	ldrb	w8, [x22, #176]
  4194fc:	tbnz	w8, #0, 419508 <_obstack_memory_used@@Base+0x3ab0>
  419500:	ldr	x8, [x22, #152]
  419504:	cbz	x8, 419cc0 <_obstack_memory_used@@Base+0x4268>
  419508:	ldr	x21, [sp, #472]
  41950c:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  419510:	cmp	x21, x8
  419514:	b.cs	419e5c <_obstack_memory_used@@Base+0x4404>  // b.hs, b.nlast
  419518:	ldr	x26, [sp, #456]
  41951c:	ldr	x23, [sp, #480]
  419520:	lsl	x8, x21, #3
  419524:	add	x19, x8, #0x8
  419528:	mov	x0, x19
  41952c:	bl	402730 <malloc@plt>
  419530:	mov	x28, x0
  419534:	cbz	x0, 419e6c <_obstack_memory_used@@Base+0x4414>
  419538:	ldr	x8, [x26, #152]
  41953c:	cbz	x8, 419738 <_obstack_memory_used@@Base+0x3ce0>
  419540:	mov	x0, x19
  419544:	bl	402730 <malloc@plt>
  419548:	cbz	x0, 419e6c <_obstack_memory_used@@Base+0x4414>
  41954c:	mov	x27, x0
  419550:	str	x24, [sp, #168]
  419554:	lsl	x8, x21, #3
  419558:	add	x2, x8, #0x8
  41955c:	mov	x0, x27
  419560:	mov	w1, wzr
  419564:	bl	402800 <memset@plt>
  419568:	ldr	x8, [sp, #176]
  41956c:	add	x0, sp, #0x130
  419570:	sub	x1, x29, #0x40
  419574:	stp	x28, x27, [x29, #-64]
  419578:	stp	x23, x21, [x29, #-48]
  41957c:	stp	xzr, xzr, [x8, #8]
  419580:	str	xzr, [x8]
  419584:	bl	423920 <_obstack_memory_used@@Base+0xdec8>
  419588:	cbnz	w0, 4199c4 <_obstack_memory_used@@Base+0x3f6c>
  41958c:	ldr	x8, [x28]
  419590:	ldr	x24, [sp, #168]
  419594:	cbnz	x8, 4197b4 <_obstack_memory_used@@Base+0x3d5c>
  419598:	ldr	x9, [x27]
  41959c:	cbnz	x9, 4197b4 <_obstack_memory_used@@Base+0x3d5c>
  4195a0:	cmp	x21, #0x1
  4195a4:	b.lt	419768 <_obstack_memory_used@@Base+0x3d10>  // b.tstop
  4195a8:	ldr	x8, [sp, #488]
  4195ac:	ldr	x23, [sp, #184]
  4195b0:	sub	x9, x8, #0x8
  4195b4:	mov	x8, x21
  4195b8:	b	4195cc <_obstack_memory_used@@Base+0x3b74>
  4195bc:	add	x8, x21, #0x1
  4195c0:	cmp	x8, #0x2
  4195c4:	mov	x8, x21
  4195c8:	b.lt	419730 <_obstack_memory_used@@Base+0x3cd8>  // b.tstop
  4195cc:	ldr	x24, [x9, x8, lsl #3]
  4195d0:	sub	x21, x8, #0x1
  4195d4:	cbz	x24, 4195bc <_obstack_memory_used@@Base+0x3b64>
  4195d8:	ldrb	w10, [x24, #104]
  4195dc:	tbz	w10, #4, 4195bc <_obstack_memory_used@@Base+0x3b64>
  4195e0:	cmp	x8, #0x0
  4195e4:	b.le	419624 <_obstack_memory_used@@Base+0x3bcc>
  4195e8:	ldr	x9, [sp, #392]
  4195ec:	add	x9, x9, #0x1
  4195f0:	cmp	x9, x8
  4195f4:	b.eq	419700 <_obstack_memory_used@@Base+0x3ca8>  // b.none
  4195f8:	ldr	w9, [sp, #448]
  4195fc:	cmp	w9, #0x2
  419600:	b.lt	41962c <_obstack_memory_used@@Base+0x3bd4>  // b.tstop
  419604:	ldr	x8, [sp, #320]
  419608:	mov	x9, x21
  41960c:	ldr	w19, [x8, x9, lsl #2]
  419610:	cmn	w19, #0x1
  419614:	b.ne	419658 <_obstack_memory_used@@Base+0x3c00>  // b.any
  419618:	sub	x9, x9, #0x1
  41961c:	cmn	x9, #0x1
  419620:	b.ne	41960c <_obstack_memory_used@@Base+0x3bb4>  // b.any
  419624:	ldr	w8, [sp, #416]
  419628:	b	419688 <_obstack_memory_used@@Base+0x3c30>
  41962c:	ldr	x9, [sp, #312]
  419630:	ldr	x10, [sp, #432]
  419634:	add	x8, x9, x8
  419638:	ldurb	w8, [x8, #-1]
  41963c:	lsr	x9, x8, #3
  419640:	and	x9, x9, #0x18
  419644:	ldr	x9, [x10, x9]
  419648:	lsr	x9, x9, x8
  41964c:	tbz	w9, #0, 41967c <_obstack_memory_used@@Base+0x3c24>
  419650:	mov	w8, #0x1                   	// #1
  419654:	b	419688 <_obstack_memory_used@@Base+0x3c30>
  419658:	ldrb	w8, [sp, #446]
  41965c:	cbnz	w8, 419714 <_obstack_memory_used@@Base+0x3cbc>
  419660:	cmp	w19, #0xa
  419664:	b.ne	419684 <_obstack_memory_used@@Base+0x3c2c>  // b.any
  419668:	ldrb	w8, [sp, #445]
  41966c:	cmp	w8, #0x0
  419670:	cset	w8, ne  // ne = any
  419674:	lsl	w8, w8, #1
  419678:	b	419688 <_obstack_memory_used@@Base+0x3c30>
  41967c:	cmp	w8, #0xa
  419680:	b.eq	419668 <_obstack_memory_used@@Base+0x3c10>  // b.none
  419684:	mov	w8, wzr
  419688:	ldr	x9, [x24, #16]
  41968c:	mov	x23, xzr
  419690:	cmp	x9, #0x1
  419694:	b.lt	419554 <_obstack_memory_used@@Base+0x3afc>  // b.tstop
  419698:	ldr	x11, [sp, #456]
  41969c:	ldr	x10, [x24, #24]
  4196a0:	ldr	x11, [x11]
  4196a4:	b	4196b4 <_obstack_memory_used@@Base+0x3c5c>
  4196a8:	subs	x9, x9, #0x1
  4196ac:	add	x10, x10, #0x8
  4196b0:	b.eq	4196f8 <_obstack_memory_used@@Base+0x3ca0>  // b.none
  4196b4:	ldr	x23, [x10]
  4196b8:	add	x12, x11, x23, lsl #4
  4196bc:	ldr	w12, [x12, #8]
  4196c0:	and	w13, w12, #0xff
  4196c4:	cmp	w13, #0x2
  4196c8:	b.ne	4196a8 <_obstack_memory_used@@Base+0x3c50>  // b.any
  4196cc:	tst	w12, #0x3ff00
  4196d0:	b.eq	419554 <_obstack_memory_used@@Base+0x3afc>  // b.none
  4196d4:	tbnz	w8, #0, 4196dc <_obstack_memory_used@@Base+0x3c84>
  4196d8:	tbnz	w12, #10, 4196a8 <_obstack_memory_used@@Base+0x3c50>
  4196dc:	tbz	w8, #0, 4196e4 <_obstack_memory_used@@Base+0x3c8c>
  4196e0:	tbnz	w12, #11, 4196a8 <_obstack_memory_used@@Base+0x3c50>
  4196e4:	tbnz	w8, #1, 4196ec <_obstack_memory_used@@Base+0x3c94>
  4196e8:	tbnz	w12, #13, 4196a8 <_obstack_memory_used@@Base+0x3c50>
  4196ec:	tbnz	w8, #3, 419554 <_obstack_memory_used@@Base+0x3afc>
  4196f0:	tbnz	w12, #15, 4196a8 <_obstack_memory_used@@Base+0x3c50>
  4196f4:	b	419554 <_obstack_memory_used@@Base+0x3afc>
  4196f8:	mov	x23, xzr
  4196fc:	b	419554 <_obstack_memory_used@@Base+0x3afc>
  419700:	ldr	w8, [sp, #464]
  419704:	mov	w9, #0xa                   	// #10
  419708:	and	w8, w8, #0x2
  41970c:	eor	w8, w8, w9
  419710:	b	419688 <_obstack_memory_used@@Base+0x3c30>
  419714:	mov	w0, w19
  419718:	bl	402b10 <iswalnum@plt>
  41971c:	cmp	w19, #0x5f
  419720:	mov	w8, #0x1                   	// #1
  419724:	b.eq	419688 <_obstack_memory_used@@Base+0x3c30>  // b.none
  419728:	cbz	w0, 419660 <_obstack_memory_used@@Base+0x3c08>
  41972c:	b	419688 <_obstack_memory_used@@Base+0x3c30>
  419730:	ldr	x24, [sp, #168]
  419734:	b	41976c <_obstack_memory_used@@Base+0x3d14>
  419738:	ldr	x8, [sp, #176]
  41973c:	add	x0, sp, #0x130
  419740:	sub	x1, x29, #0x40
  419744:	stp	x28, xzr, [x29, #-64]
  419748:	stp	x23, x21, [x29, #-48]
  41974c:	stp	xzr, xzr, [x8]
  419750:	str	xzr, [x8, #16]
  419754:	bl	423920 <_obstack_memory_used@@Base+0xdec8>
  419758:	cbnz	w0, 419a70 <_obstack_memory_used@@Base+0x4018>
  41975c:	ldr	x8, [x28]
  419760:	cbnz	x8, 419cac <_obstack_memory_used@@Base+0x4254>
  419764:	mov	x27, xzr
  419768:	ldr	x23, [sp, #184]
  41976c:	mov	x0, x28
  419770:	bl	402a10 <free@plt>
  419774:	mov	x0, x27
  419778:	bl	402a10 <free@plt>
  41977c:	ldr	x28, [sp, #272]
  419780:	ldr	x21, [sp, #288]
  419784:	add	x0, sp, #0x130
  419788:	bl	420514 <_obstack_memory_used@@Base+0xaabc>
  41978c:	ldur	x8, [x29, #-176]
  419790:	ldr	x9, [sp, #296]
  419794:	mov	w19, #0x1                   	// #1
  419798:	add	x26, x8, x9
  41979c:	cmp	x26, x21
  4197a0:	stur	x26, [x29, #-176]
  4197a4:	b.lt	419c18 <_obstack_memory_used@@Base+0x41c0>  // b.tstop
  4197a8:	cmp	x20, x26
  4197ac:	b.ge	417b40 <_obstack_memory_used@@Base+0x20e8>  // b.tcont
  4197b0:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  4197b4:	tbnz	x21, #63, 41984c <_obstack_memory_used@@Base+0x3df4>
  4197b8:	str	x26, [sp, #264]
  4197bc:	str	x22, [sp, #112]
  4197c0:	mov	x24, x27
  4197c4:	mov	x26, x28
  4197c8:	mov	x22, x21
  4197cc:	ldr	x9, [x24]
  4197d0:	cbnz	x8, 4197ec <_obstack_memory_used@@Base+0x3d94>
  4197d4:	b	419834 <_obstack_memory_used@@Base+0x3ddc>
  4197d8:	ldr	x8, [x26, #8]!
  4197dc:	sub	x22, x22, #0x1
  4197e0:	add	x24, x24, #0x8
  4197e4:	ldr	x9, [x24]
  4197e8:	cbz	x8, 419834 <_obstack_memory_used@@Base+0x3ddc>
  4197ec:	cbz	x9, 419838 <_obstack_memory_used@@Base+0x3de0>
  4197f0:	add	x1, x8, #0x8
  4197f4:	add	x2, x9, #0x8
  4197f8:	sub	x0, x29, #0x60
  4197fc:	bl	421e00 <_obstack_memory_used@@Base+0xc3a8>
  419800:	stur	w0, [x29, #-128]
  419804:	cbnz	w0, 419aa4 <_obstack_memory_used@@Base+0x404c>
  419808:	ldr	x1, [sp, #264]
  41980c:	sub	x0, x29, #0x80
  419810:	sub	x2, x29, #0x60
  419814:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  419818:	ldur	x8, [x29, #-80]
  41981c:	str	x0, [x26]
  419820:	mov	x0, x8
  419824:	bl	402a10 <free@plt>
  419828:	ldur	w19, [x29, #-128]
  41982c:	cbz	w19, 419838 <_obstack_memory_used@@Base+0x3de0>
  419830:	b	419840 <_obstack_memory_used@@Base+0x3de8>
  419834:	str	x9, [x26]
  419838:	cbnz	x22, 4197d8 <_obstack_memory_used@@Base+0x3d80>
  41983c:	mov	w19, wzr
  419840:	ldr	x22, [sp, #112]
  419844:	ldr	x24, [sp, #168]
  419848:	b	419850 <_obstack_memory_used@@Base+0x3df8>
  41984c:	mov	w19, wzr
  419850:	mov	x0, x27
  419854:	bl	402a10 <free@plt>
  419858:	cbz	w19, 419cac <_obstack_memory_used@@Base+0x4254>
  41985c:	b	419a74 <_obstack_memory_used@@Base+0x401c>
  419860:	ldr	x28, [sp, #272]
  419864:	ldr	x21, [sp, #288]
  419868:	cmn	x27, #0x1
  41986c:	b.ne	4193b0 <_obstack_memory_used@@Base+0x3958>  // b.any
  419870:	b	419784 <_obstack_memory_used@@Base+0x3d2c>
  419874:	ldr	x21, [sp, #288]
  419878:	ldr	x9, [sp, #264]
  41987c:	cbnz	x9, 419398 <_obstack_memory_used@@Base+0x3940>
  419880:	b	4193a4 <_obstack_memory_used@@Base+0x394c>
  419884:	tbnz	w8, #31, 4199e4 <_obstack_memory_used@@Base+0x3f8c>
  419888:	ldr	w8, [sp, #196]
  41988c:	cbz	w8, 419ba8 <_obstack_memory_used@@Base+0x4150>
  419890:	mov	x27, x15
  419894:	mov	w8, #0x1                   	// #1
  419898:	str	x8, [sp, #240]
  41989c:	b	417e40 <_obstack_memory_used@@Base+0x23e8>
  4198a0:	ldr	x8, [x26, #16]
  4198a4:	str	x24, [sp, #168]
  4198a8:	cmp	x8, #0x1
  4198ac:	b.lt	419984 <_obstack_memory_used@@Base+0x3f2c>  // b.tstop
  4198b0:	ldr	x21, [sp, #456]
  4198b4:	mov	x23, xzr
  4198b8:	str	x22, [sp, #112]
  4198bc:	b	4198e8 <_obstack_memory_used@@Base+0x3e90>
  4198c0:	add	x9, x22, #0x1
  4198c4:	str	x24, [x8, #8]
  4198c8:	str	x9, [sp, #536]
  4198cc:	str	xzr, [x8]
  4198d0:	ldr	x8, [x26, #16]
  4198d4:	ldr	x22, [sp, #112]
  4198d8:	mov	x15, x28
  4198dc:	add	x23, x23, #0x1
  4198e0:	cmp	x23, x8
  4198e4:	b.ge	419984 <_obstack_memory_used@@Base+0x3f2c>  // b.tcont
  4198e8:	ldr	x9, [x26, #24]
  4198ec:	ldr	x24, [x9, x23, lsl #3]
  4198f0:	ldr	x9, [x21]
  4198f4:	add	x10, x9, x24, lsl #4
  4198f8:	ldrb	w10, [x10, #8]
  4198fc:	cmp	w10, #0x8
  419900:	b.ne	4198dc <_obstack_memory_used@@Base+0x3e84>  // b.any
  419904:	lsl	x10, x24, #4
  419908:	ldr	x9, [x9, x10]
  41990c:	cmp	x9, #0x3f
  419910:	b.gt	4198dc <_obstack_memory_used@@Base+0x3e84>
  419914:	ldr	x10, [x21, #160]
  419918:	lsr	x9, x10, x9
  41991c:	tbz	w9, #0, 4198dc <_obstack_memory_used@@Base+0x3e84>
  419920:	ldr	x27, [sp, #544]
  419924:	ldr	x22, [sp, #536]
  419928:	ldr	x19, [sp, #552]
  41992c:	mov	x28, x15
  419930:	cmp	x22, x27
  419934:	b.eq	41995c <_obstack_memory_used@@Base+0x3f04>  // b.none
  419938:	mov	w0, #0x1                   	// #1
  41993c:	mov	w1, #0x30                  	// #48
  419940:	bl	402840 <calloc@plt>
  419944:	lsl	x8, x22, #3
  419948:	str	x0, [x19, x8]
  41994c:	ldr	x9, [sp, #552]
  419950:	ldr	x8, [x9, x8]
  419954:	cbnz	x8, 4198c0 <_obstack_memory_used@@Base+0x3e68>
  419958:	b	419bb0 <_obstack_memory_used@@Base+0x4158>
  41995c:	lsl	x1, x27, #4
  419960:	mov	x0, x19
  419964:	bl	402870 <realloc@plt>
  419968:	cbz	x0, 419bb0 <_obstack_memory_used@@Base+0x4158>
  41996c:	ldr	x22, [sp, #536]
  419970:	mov	x19, x0
  419974:	lsl	x8, x27, #1
  419978:	str	x0, [sp, #552]
  41997c:	str	x8, [sp, #544]
  419980:	b	419938 <_obstack_memory_used@@Base+0x3ee0>
  419984:	stur	wzr, [x29, #-164]
  419988:	ldrb	w8, [x26, #104]
  41998c:	ldr	x23, [sp, #184]
  419990:	ldr	x24, [sp, #168]
  419994:	ldr	x21, [sp, #288]
  419998:	mov	w28, wzr
  41999c:	tbz	w8, #6, 417e30 <_obstack_memory_used@@Base+0x23d8>
  4199a0:	add	x1, x26, #0x8
  4199a4:	add	x0, sp, #0x130
  4199a8:	mov	x19, x15
  4199ac:	bl	421170 <_obstack_memory_used@@Base+0xb718>
  4199b0:	stur	w0, [x29, #-164]
  4199b4:	cbnz	w0, 419bd8 <_obstack_memory_used@@Base+0x4180>
  4199b8:	mov	w28, wzr
  4199bc:	mov	x15, x19
  4199c0:	b	417e30 <_obstack_memory_used@@Base+0x23d8>
  4199c4:	ldr	x24, [sp, #168]
  4199c8:	mov	w19, w0
  4199cc:	b	419a78 <_obstack_memory_used@@Base+0x4020>
  4199d0:	ldr	w8, [sp, #464]
  4199d4:	mov	w9, #0xa                   	// #10
  4199d8:	and	w8, w8, #0x2
  4199dc:	eor	w8, w8, w9
  4199e0:	b	419474 <_obstack_memory_used@@Base+0x3a1c>
  4199e4:	tbnz	x15, #63, 419a20 <_obstack_memory_used@@Base+0x3fc8>
  4199e8:	ldr	x8, [sp, #392]
  4199ec:	cmp	x8, x15
  4199f0:	b.eq	419bc4 <_obstack_memory_used@@Base+0x416c>  // b.none
  4199f4:	ldr	w8, [sp, #448]
  4199f8:	cmp	w8, #0x2
  4199fc:	b.lt	419a48 <_obstack_memory_used@@Base+0x3ff0>  // b.tstop
  419a00:	ldr	x8, [sp, #320]
  419a04:	mov	x9, x15
  419a08:	ldr	w19, [x8, x9, lsl #2]
  419a0c:	cmn	w19, #0x1
  419a10:	b.ne	419ae8 <_obstack_memory_used@@Base+0x4090>  // b.any
  419a14:	sub	x9, x9, #0x1
  419a18:	cmn	x9, #0x1
  419a1c:	b.ne	419a08 <_obstack_memory_used@@Base+0x3fb0>  // b.any
  419a20:	ldr	w8, [sp, #416]
  419a24:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419a28:	mov	w8, wzr
  419a2c:	ldr	x9, [sp, #224]
  419a30:	cbz	x9, 419a38 <_obstack_memory_used@@Base+0x3fe0>
  419a34:	ldrb	w8, [x9, w8, uxtw]
  419a38:	ldrb	w8, [x25, w8, uxtw]
  419a3c:	mov	x26, x20
  419a40:	cbnz	w8, 417c14 <_obstack_memory_used@@Base+0x21bc>
  419a44:	b	419c14 <_obstack_memory_used@@Base+0x41bc>
  419a48:	ldr	x8, [sp, #312]
  419a4c:	ldr	x9, [sp, #432]
  419a50:	ldrb	w8, [x8, x15]
  419a54:	lsr	x10, x8, #3
  419a58:	and	x10, x10, #0x18
  419a5c:	ldr	x9, [x9, x10]
  419a60:	lsr	x9, x9, x8
  419a64:	tbz	w9, #0, 419b0c <_obstack_memory_used@@Base+0x40b4>
  419a68:	mov	w8, #0x1                   	// #1
  419a6c:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419a70:	mov	w19, w0
  419a74:	mov	x27, xzr
  419a78:	mov	x0, x28
  419a7c:	bl	402a10 <free@plt>
  419a80:	mov	x0, x27
  419a84:	bl	402a10 <free@plt>
  419a88:	ldr	x23, [sp, #184]
  419a8c:	ldr	x28, [sp, #272]
  419a90:	cbz	w19, 419cc0 <_obstack_memory_used@@Base+0x4268>
  419a94:	ldr	x21, [sp, #288]
  419a98:	cmp	w19, #0x1
  419a9c:	b.eq	419784 <_obstack_memory_used@@Base+0x3d2c>  // b.none
  419aa0:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  419aa4:	mov	w19, w0
  419aa8:	b	419840 <_obstack_memory_used@@Base+0x3de8>
  419aac:	mov	w0, w19
  419ab0:	bl	402b10 <iswalnum@plt>
  419ab4:	cmp	w19, #0x5f
  419ab8:	mov	w8, #0x1                   	// #1
  419abc:	b.eq	419474 <_obstack_memory_used@@Base+0x3a1c>  // b.none
  419ac0:	cbz	w0, 41944c <_obstack_memory_used@@Base+0x39f4>
  419ac4:	b	419474 <_obstack_memory_used@@Base+0x3a1c>
  419ac8:	mov	w0, w27
  419acc:	mov	x28, x15
  419ad0:	bl	402b10 <iswalnum@plt>
  419ad4:	mov	x15, x28
  419ad8:	cmp	w27, #0x5f
  419adc:	b.eq	417e08 <_obstack_memory_used@@Base+0x23b0>  // b.none
  419ae0:	cbz	w0, 417d78 <_obstack_memory_used@@Base+0x2320>
  419ae4:	b	417e08 <_obstack_memory_used@@Base+0x23b0>
  419ae8:	ldrb	w8, [sp, #446]
  419aec:	cbnz	w8, 419be0 <_obstack_memory_used@@Base+0x4188>
  419af0:	cmp	w19, #0xa
  419af4:	b.ne	419b14 <_obstack_memory_used@@Base+0x40bc>  // b.any
  419af8:	ldrb	w8, [sp, #445]
  419afc:	cmp	w8, #0x0
  419b00:	cset	w8, ne  // ne = any
  419b04:	lsl	w8, w8, #1
  419b08:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419b0c:	cmp	w8, #0xa
  419b10:	b.eq	419af8 <_obstack_memory_used@@Base+0x40a0>  // b.none
  419b14:	mov	w8, wzr
  419b18:	ldr	x9, [x26, #16]
  419b1c:	cmp	x9, #0x1
  419b20:	b.lt	417e38 <_obstack_memory_used@@Base+0x23e0>  // b.tstop
  419b24:	ldr	x11, [sp, #456]
  419b28:	ldr	x10, [x26, #24]
  419b2c:	ldr	x11, [x11]
  419b30:	b	419b48 <_obstack_memory_used@@Base+0x40f0>
  419b34:	subs	x9, x9, #0x1
  419b38:	add	x10, x10, #0x8
  419b3c:	mov	x27, #0xffffffffffffffff    	// #-1
  419b40:	str	xzr, [sp, #240]
  419b44:	b.eq	417e40 <_obstack_memory_used@@Base+0x23e8>  // b.none
  419b48:	ldr	x12, [x10]
  419b4c:	add	x13, x11, x12, lsl #4
  419b50:	ldr	w13, [x13, #8]
  419b54:	and	w14, w13, #0xff
  419b58:	cmp	w14, #0x2
  419b5c:	b.ne	419b34 <_obstack_memory_used@@Base+0x40dc>  // b.any
  419b60:	tst	w13, #0x3ff00
  419b64:	b.eq	419b88 <_obstack_memory_used@@Base+0x4130>  // b.none
  419b68:	tbnz	w8, #0, 419b70 <_obstack_memory_used@@Base+0x4118>
  419b6c:	tbnz	w13, #10, 419b34 <_obstack_memory_used@@Base+0x40dc>
  419b70:	tbz	w8, #0, 419b78 <_obstack_memory_used@@Base+0x4120>
  419b74:	tbnz	w13, #11, 419b34 <_obstack_memory_used@@Base+0x40dc>
  419b78:	tbnz	w8, #1, 419b80 <_obstack_memory_used@@Base+0x4128>
  419b7c:	tbnz	w13, #13, 419b34 <_obstack_memory_used@@Base+0x40dc>
  419b80:	tbnz	w8, #3, 419b88 <_obstack_memory_used@@Base+0x4130>
  419b84:	tbnz	w13, #15, 419b34 <_obstack_memory_used@@Base+0x40dc>
  419b88:	ldr	w9, [sp, #196]
  419b8c:	cmp	x12, #0x0
  419b90:	cset	w8, ne  // ne = any
  419b94:	str	x8, [sp, #240]
  419b98:	cset	w8, eq  // eq = none
  419b9c:	orr	w8, w9, w8
  419ba0:	csinv	x27, x15, xzr, ne  // ne = any
  419ba4:	tbnz	w8, #0, 417e40 <_obstack_memory_used@@Base+0x23e8>
  419ba8:	mov	x27, x15
  419bac:	b	4193a4 <_obstack_memory_used@@Base+0x394c>
  419bb0:	ldr	x22, [sp, #112]
  419bb4:	ldr	x23, [sp, #184]
  419bb8:	ldr	x24, [sp, #168]
  419bbc:	mov	w27, #0xc                   	// #12
  419bc0:	b	4193b8 <_obstack_memory_used@@Base+0x3960>
  419bc4:	ldr	w8, [sp, #464]
  419bc8:	mov	w9, #0xa                   	// #10
  419bcc:	and	w8, w8, #0x2
  419bd0:	eor	w8, w8, w9
  419bd4:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419bd8:	sxtw	x27, w0
  419bdc:	b	4193a4 <_obstack_memory_used@@Base+0x394c>
  419be0:	mov	w0, w19
  419be4:	mov	x27, x15
  419be8:	bl	402b10 <iswalnum@plt>
  419bec:	cmp	w19, #0x5f
  419bf0:	mov	w8, #0x1                   	// #1
  419bf4:	b.eq	419c08 <_obstack_memory_used@@Base+0x41b0>  // b.none
  419bf8:	ldr	x21, [sp, #288]
  419bfc:	mov	x15, x27
  419c00:	cbz	w0, 419af0 <_obstack_memory_used@@Base+0x4098>
  419c04:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419c08:	ldr	x21, [sp, #288]
  419c0c:	mov	x15, x27
  419c10:	b	419b18 <_obstack_memory_used@@Base+0x40c0>
  419c14:	mov	w19, #0x1                   	// #1
  419c18:	ldr	x0, [sp, #488]
  419c1c:	bl	402a10 <free@plt>
  419c20:	ldr	x8, [x22, #152]
  419c24:	cbz	x8, 419c40 <_obstack_memory_used@@Base+0x41e8>
  419c28:	add	x0, sp, #0x130
  419c2c:	bl	420514 <_obstack_memory_used@@Base+0xaabc>
  419c30:	ldr	x0, [sp, #552]
  419c34:	bl	402a10 <free@plt>
  419c38:	ldr	x0, [sp, #520]
  419c3c:	bl	402a10 <free@plt>
  419c40:	ldr	x0, [sp, #320]
  419c44:	bl	402a10 <free@plt>
  419c48:	ldr	x0, [sp, #328]
  419c4c:	bl	402a10 <free@plt>
  419c50:	ldrb	w8, [sp, #443]
  419c54:	cbz	w8, 419c60 <_obstack_memory_used@@Base+0x4208>
  419c58:	ldr	x0, [sp, #312]
  419c5c:	bl	402a10 <free@plt>
  419c60:	mov	w0, w19
  419c64:	add	sp, sp, #0x2e0
  419c68:	ldp	x20, x19, [sp, #80]
  419c6c:	ldp	x22, x21, [sp, #64]
  419c70:	ldp	x24, x23, [sp, #48]
  419c74:	ldp	x26, x25, [sp, #32]
  419c78:	ldp	x28, x27, [sp, #16]
  419c7c:	ldp	x29, x30, [sp], #96
  419c80:	ret
  419c84:	ldr	x8, [x8, #16]
  419c88:	cbz	x8, 419c94 <_obstack_memory_used@@Base+0x423c>
  419c8c:	ldrsb	w8, [x23, #56]
  419c90:	tbnz	w8, #31, 417890 <_obstack_memory_used@@Base+0x1e38>
  419c94:	mov	x21, xzr
  419c98:	cbz	x26, 419d20 <_obstack_memory_used@@Base+0x42c8>
  419c9c:	mov	x26, x21
  419ca0:	cbz	x4, 417894 <_obstack_memory_used@@Base+0x1e3c>
  419ca4:	mov	w19, #0x1                   	// #1
  419ca8:	b	419c60 <_obstack_memory_used@@Base+0x4208>
  419cac:	ldr	x0, [sp, #488]
  419cb0:	bl	402a10 <free@plt>
  419cb4:	stp	x23, x28, [sp, #480]
  419cb8:	ldr	x23, [sp, #184]
  419cbc:	str	x21, [sp, #472]
  419cc0:	cbz	x24, 419d18 <_obstack_memory_used@@Base+0x42c0>
  419cc4:	ldp	x21, x20, [sp, #144]
  419cc8:	cmp	x24, #0x1
  419ccc:	b.eq	419cec <_obstack_memory_used@@Base+0x4294>  // b.none
  419cd0:	ldr	x8, [sp, #160]
  419cd4:	mov	w1, #0xff                  	// #255
  419cd8:	add	x0, x8, #0x10
  419cdc:	mvn	x8, x21
  419ce0:	add	x8, x8, x20
  419ce4:	lsl	x2, x8, #4
  419ce8:	bl	402800 <memset@plt>
  419cec:	ldr	x9, [sp, #160]
  419cf0:	ldr	x8, [sp, #472]
  419cf4:	cmp	x24, #0x2
  419cf8:	stp	xzr, x8, [x9]
  419cfc:	b.cc	419d4c <_obstack_memory_used@@Base+0x42f4>  // b.lo, b.ul, b.last
  419d00:	ldrb	w8, [x23, #56]
  419d04:	tbnz	w8, #4, 419d4c <_obstack_memory_used@@Base+0x42f4>
  419d08:	ldrb	w8, [x22, #176]
  419d0c:	tbnz	w8, #0, 419d28 <_obstack_memory_used@@Base+0x42d0>
  419d10:	mov	w4, wzr
  419d14:	b	419d34 <_obstack_memory_used@@Base+0x42dc>
  419d18:	mov	w19, wzr
  419d1c:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  419d20:	mov	x26, x21
  419d24:	b	417894 <_obstack_memory_used@@Base+0x1e3c>
  419d28:	ldr	x8, [x22, #152]
  419d2c:	cmp	x8, #0x0
  419d30:	cset	w4, gt
  419d34:	ldr	x3, [sp, #160]
  419d38:	add	x1, sp, #0x130
  419d3c:	mov	x0, x23
  419d40:	mov	x2, x24
  419d44:	bl	4205d8 <_obstack_memory_used@@Base+0xab80>
  419d48:	cbnz	w0, 419e64 <_obstack_memory_used@@Base+0x440c>
  419d4c:	ldr	x13, [sp, #160]
  419d50:	ldrb	w9, [sp, #444]
  419d54:	ldr	x10, [sp, #352]
  419d58:	ldr	x11, [sp, #328]
  419d5c:	ldur	x12, [x29, #-176]
  419d60:	ldr	x17, [sp, #136]
  419d64:	mov	x8, xzr
  419d68:	add	x13, x13, #0x8
  419d6c:	b	419d90 <_obstack_memory_used@@Base+0x4338>
  419d70:	ldr	x15, [x13]
  419d74:	add	x14, x14, x12
  419d78:	add	x15, x15, x12
  419d7c:	stp	x14, x15, [x13, #-8]
  419d80:	add	x8, x8, #0x1
  419d84:	cmp	x8, x24
  419d88:	add	x13, x13, #0x10
  419d8c:	b.cs	419dd0 <_obstack_memory_used@@Base+0x4378>  // b.hs, b.nlast
  419d90:	ldur	x14, [x13, #-8]
  419d94:	cmn	x14, #0x1
  419d98:	b.eq	419d80 <_obstack_memory_used@@Base+0x4328>  // b.none
  419d9c:	cbz	w9, 419d70 <_obstack_memory_used@@Base+0x4318>
  419da0:	add	x15, x11, x14, lsl #3
  419da4:	cmp	x14, x10
  419da8:	ldr	x16, [x13]
  419dac:	csel	x14, x17, x15, eq  // eq = none
  419db0:	ldr	x14, [x14]
  419db4:	add	x15, x11, x16, lsl #3
  419db8:	cmp	x16, x10
  419dbc:	stur	x14, [x13, #-8]
  419dc0:	csel	x15, x17, x15, eq  // eq = none
  419dc4:	ldr	x15, [x15]
  419dc8:	str	x15, [x13]
  419dcc:	b	419d74 <_obstack_memory_used@@Base+0x431c>
  419dd0:	cmp	x21, #0x1
  419dd4:	b.lt	419dec <_obstack_memory_used@@Base+0x4394>  // b.tstop
  419dd8:	ldr	x8, [sp, #160]
  419ddc:	lsl	x2, x21, #4
  419de0:	mov	w1, #0xff                  	// #255
  419de4:	add	x0, x8, x24, lsl #4
  419de8:	bl	402800 <memset@plt>
  419dec:	ldr	x8, [x22, #224]
  419df0:	mov	w19, wzr
  419df4:	cbz	x8, 419c18 <_obstack_memory_used@@Base+0x41c0>
  419df8:	cmp	x24, #0x2
  419dfc:	b.cc	419c18 <_obstack_memory_used@@Base+0x41c0>  // b.lo, b.ul, b.last
  419e00:	ldr	x11, [sp, #160]
  419e04:	ldr	x13, [sp, #160]
  419e08:	mvn	x10, x21
  419e0c:	mov	x9, xzr
  419e10:	add	x10, x10, x20
  419e14:	add	x11, x11, #0x18
  419e18:	b	419e30 <_obstack_memory_used@@Base+0x43d8>
  419e1c:	add	x9, x9, #0x1
  419e20:	mov	w19, wzr
  419e24:	cmp	x10, x9
  419e28:	add	x11, x11, #0x10
  419e2c:	b.eq	419c18 <_obstack_memory_used@@Base+0x41c0>  // b.none
  419e30:	ldr	x12, [x8, x9, lsl #3]
  419e34:	cmp	x9, x12
  419e38:	b.eq	419e1c <_obstack_memory_used@@Base+0x43c4>  // b.none
  419e3c:	add	x12, x13, x12, lsl #4
  419e40:	ldr	x12, [x12, #16]
  419e44:	stur	x12, [x11, #-8]
  419e48:	ldr	x12, [x8, x9, lsl #3]
  419e4c:	add	x12, x13, x12, lsl #4
  419e50:	ldr	x12, [x12, #24]
  419e54:	str	x12, [x11]
  419e58:	b	419e1c <_obstack_memory_used@@Base+0x43c4>
  419e5c:	mov	w19, #0xc                   	// #12
  419e60:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  419e64:	mov	w19, w0
  419e68:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  419e6c:	mov	x0, x28
  419e70:	bl	402a10 <free@plt>
  419e74:	mov	w19, #0xc                   	// #12
  419e78:	b	419c18 <_obstack_memory_used@@Base+0x41c0>
  419e7c:	mov	x6, x4
  419e80:	mov	w7, #0x1                   	// #1
  419e84:	mov	x4, xzr
  419e88:	mov	x5, x2
  419e8c:	b	419e90 <_obstack_memory_used@@Base+0x4438>
  419e90:	sub	sp, sp, #0x70
  419e94:	cmp	x3, x2
  419e98:	cset	w8, gt
  419e9c:	orr	x8, x8, x3, lsr #63
  419ea0:	stp	x29, x30, [sp, #16]
  419ea4:	stp	x28, x27, [sp, #32]
  419ea8:	stp	x26, x25, [sp, #48]
  419eac:	stp	x24, x23, [sp, #64]
  419eb0:	stp	x22, x21, [sp, #80]
  419eb4:	stp	x20, x19, [sp, #96]
  419eb8:	add	x29, sp, #0x10
  419ebc:	cbnz	x8, 41a1bc <_obstack_memory_used@@Base+0x4764>
  419ec0:	add	x8, x4, x3
  419ec4:	ldrb	w19, [x0, #56]
  419ec8:	bic	x9, x8, x8, asr #63
  419ecc:	cmp	x8, x2
  419ed0:	csel	x27, x2, x9, gt
  419ed4:	mov	x22, x6
  419ed8:	mov	x24, x5
  419edc:	mov	x20, x3
  419ee0:	mov	x25, x2
  419ee4:	mov	x26, x1
  419ee8:	mov	x21, x0
  419eec:	cmp	x27, x3
  419ef0:	stur	w7, [x29, #-4]
  419ef4:	b.le	419f18 <_obstack_memory_used@@Base+0x44c0>
  419ef8:	tbnz	w19, #3, 419f18 <_obstack_memory_used@@Base+0x44c0>
  419efc:	ldr	x9, [x21, #32]
  419f00:	mov	w8, w19
  419f04:	cbz	x9, 419f1c <_obstack_memory_used@@Base+0x44c4>
  419f08:	mov	x0, x21
  419f0c:	bl	416dd8 <_obstack_memory_used@@Base+0x1380>
  419f10:	ldrb	w8, [x21, #56]
  419f14:	b	419f1c <_obstack_memory_used@@Base+0x44c4>
  419f18:	mov	w8, w19
  419f1c:	mov	x28, xzr
  419f20:	mov	w23, #0x1                   	// #1
  419f24:	cbz	x22, 419f64 <_obstack_memory_used@@Base+0x450c>
  419f28:	tbnz	w8, #4, 419f64 <_obstack_memory_used@@Base+0x450c>
  419f2c:	and	w8, w8, #0x6
  419f30:	cmp	w8, #0x4
  419f34:	b.ne	419f58 <_obstack_memory_used@@Base+0x4500>  // b.any
  419f38:	ldr	x8, [x22]
  419f3c:	ldr	x9, [x21, #48]
  419f40:	cmp	x8, x9
  419f44:	b.hi	419f5c <_obstack_memory_used@@Base+0x4504>  // b.pmore
  419f48:	cmp	x8, #0x1
  419f4c:	csel	x28, xzr, x22, lt  // lt = tstop
  419f50:	csinc	x23, x8, xzr, ge  // ge = tcont
  419f54:	b	419f64 <_obstack_memory_used@@Base+0x450c>
  419f58:	ldr	x9, [x21, #48]
  419f5c:	add	x23, x9, #0x1
  419f60:	mov	x28, x22
  419f64:	lsl	x0, x23, #4
  419f68:	bl	402730 <malloc@plt>
  419f6c:	cbz	x0, 41a1c4 <_obstack_memory_used@@Base+0x476c>
  419f70:	mov	x22, x0
  419f74:	ubfx	w8, w19, #5, #2
  419f78:	mov	x0, x21
  419f7c:	mov	x1, x26
  419f80:	mov	x2, x25
  419f84:	mov	x3, x20
  419f88:	mov	x4, x27
  419f8c:	mov	x5, x24
  419f90:	mov	x6, x23
  419f94:	mov	x7, x22
  419f98:	str	w8, [sp]
  419f9c:	bl	4177b8 <_obstack_memory_used@@Base+0x1d60>
  419fa0:	cbz	w0, 419fdc <_obstack_memory_used@@Base+0x4584>
  419fa4:	cmp	w0, #0x1
  419fa8:	mov	x8, #0xfffffffffffffffe    	// #-2
  419fac:	cinc	x19, x8, eq  // eq = none
  419fb0:	mov	x0, x22
  419fb4:	bl	402a10 <free@plt>
  419fb8:	mov	x0, x19
  419fbc:	ldp	x20, x19, [sp, #96]
  419fc0:	ldp	x22, x21, [sp, #80]
  419fc4:	ldp	x24, x23, [sp, #64]
  419fc8:	ldp	x26, x25, [sp, #48]
  419fcc:	ldp	x28, x27, [sp, #32]
  419fd0:	ldp	x29, x30, [sp, #16]
  419fd4:	add	sp, sp, #0x70
  419fd8:	ret
  419fdc:	cbz	x28, 41a198 <_obstack_memory_used@@Base+0x4740>
  419fe0:	ldrb	w8, [x21, #56]
  419fe4:	add	x26, x23, #0x1
  419fe8:	ubfx	w8, w8, #1, #2
  419fec:	cmp	w8, #0x1
  419ff0:	b.eq	41a034 <_obstack_memory_used@@Base+0x45dc>  // b.none
  419ff4:	cbnz	w8, 41a060 <_obstack_memory_used@@Base+0x4608>
  419ff8:	lsl	x25, x26, #3
  419ffc:	mov	x0, x25
  41a000:	bl	402730 <malloc@plt>
  41a004:	str	x0, [x28, #8]
  41a008:	cbz	x0, 41a204 <_obstack_memory_used@@Base+0x47ac>
  41a00c:	mov	x24, x0
  41a010:	mov	x0, x25
  41a014:	bl	402730 <malloc@plt>
  41a018:	str	x0, [x28, #16]
  41a01c:	cbz	x0, 41a1fc <_obstack_memory_used@@Base+0x47a4>
  41a020:	str	x26, [x28]
  41a024:	mov	w8, #0x1                   	// #1
  41a028:	cmp	x23, #0x1
  41a02c:	b.ge	41a070 <_obstack_memory_used@@Base+0x4618>  // b.tcont
  41a030:	b	41a050 <_obstack_memory_used@@Base+0x45f8>
  41a034:	ldr	x9, [x28]
  41a038:	cmp	x26, x9
  41a03c:	b.hi	41a1cc <_obstack_memory_used@@Base+0x4774>  // b.pmore
  41a040:	mov	w8, #0x1                   	// #1
  41a044:	mov	x26, x9
  41a048:	cmp	x23, #0x1
  41a04c:	b.ge	41a070 <_obstack_memory_used@@Base+0x4618>  // b.tcont
  41a050:	mov	x23, xzr
  41a054:	cmp	x23, x26
  41a058:	b.cc	41a160 <_obstack_memory_used@@Base+0x4708>  // b.lo, b.ul, b.last
  41a05c:	b	41a184 <_obstack_memory_used@@Base+0x472c>
  41a060:	ldr	x26, [x28]
  41a064:	mov	w8, #0x2                   	// #2
  41a068:	cmp	x23, #0x1
  41a06c:	b.lt	41a050 <_obstack_memory_used@@Base+0x45f8>  // b.tstop
  41a070:	ldp	x9, x10, [x28, #8]
  41a074:	cmp	x23, #0x3
  41a078:	b.hi	41a084 <_obstack_memory_used@@Base+0x462c>  // b.pmore
  41a07c:	mov	x11, xzr
  41a080:	b	41a124 <_obstack_memory_used@@Base+0x46cc>
  41a084:	lsl	x12, x23, #3
  41a088:	add	x15, x10, x12
  41a08c:	add	x14, x9, x12
  41a090:	cmp	x9, x15
  41a094:	add	x13, x22, x23, lsl #4
  41a098:	cset	w12, cc  // cc = lo, ul, last
  41a09c:	cmp	x10, x14
  41a0a0:	cset	w16, cc  // cc = lo, ul, last
  41a0a4:	cmp	x13, x9
  41a0a8:	and	w16, w12, w16
  41a0ac:	cset	w12, hi  // hi = pmore
  41a0b0:	cmp	x22, x14
  41a0b4:	cset	w14, cc  // cc = lo, ul, last
  41a0b8:	cmp	x13, x10
  41a0bc:	cset	w13, hi  // hi = pmore
  41a0c0:	cmp	x22, x15
  41a0c4:	mov	x11, xzr
  41a0c8:	cset	w15, cc  // cc = lo, ul, last
  41a0cc:	tbnz	w16, #0, 41a124 <_obstack_memory_used@@Base+0x46cc>
  41a0d0:	and	w12, w12, w14
  41a0d4:	tbnz	w12, #0, 41a124 <_obstack_memory_used@@Base+0x46cc>
  41a0d8:	and	w12, w13, w15
  41a0dc:	tbnz	w12, #0, 41a124 <_obstack_memory_used@@Base+0x46cc>
  41a0e0:	and	x11, x23, #0xfffffffffffffffc
  41a0e4:	add	x12, x22, #0x20
  41a0e8:	add	x13, x9, #0x10
  41a0ec:	add	x14, x10, #0x10
  41a0f0:	mov	x15, x11
  41a0f4:	sub	x16, x12, #0x20
  41a0f8:	ld2	{v0.2d, v1.2d}, [x12]
  41a0fc:	ld2	{v2.2d, v3.2d}, [x16]
  41a100:	add	x12, x12, #0x40
  41a104:	subs	x15, x15, #0x4
  41a108:	stp	q2, q0, [x13, #-16]
  41a10c:	stp	q3, q1, [x14, #-16]
  41a110:	add	x13, x13, #0x20
  41a114:	add	x14, x14, #0x20
  41a118:	b.ne	41a0f4 <_obstack_memory_used@@Base+0x469c>  // b.any
  41a11c:	cmp	x23, x11
  41a120:	b.eq	41a154 <_obstack_memory_used@@Base+0x46fc>  // b.none
  41a124:	sub	x12, x23, x11
  41a128:	lsl	x13, x11, #3
  41a12c:	add	x11, x22, x11, lsl #4
  41a130:	add	x10, x10, x13
  41a134:	add	x11, x11, #0x8
  41a138:	add	x9, x9, x13
  41a13c:	ldur	x13, [x11, #-8]
  41a140:	subs	x12, x12, #0x1
  41a144:	str	x13, [x9], #8
  41a148:	ldr	x13, [x11], #16
  41a14c:	str	x13, [x10], #8
  41a150:	b.ne	41a13c <_obstack_memory_used@@Base+0x46e4>  // b.any
  41a154:	ldr	x26, [x28]
  41a158:	cmp	x23, x26
  41a15c:	b.cs	41a184 <_obstack_memory_used@@Base+0x472c>  // b.hs, b.nlast
  41a160:	ldp	x10, x9, [x28, #8]
  41a164:	mov	x11, #0xffffffffffffffff    	// #-1
  41a168:	lsl	x12, x23, #3
  41a16c:	str	x11, [x9, x12]
  41a170:	str	x11, [x10, x12]
  41a174:	ldr	x12, [x28]
  41a178:	add	x23, x23, #0x1
  41a17c:	cmp	x23, x12
  41a180:	b.cc	41a168 <_obstack_memory_used@@Base+0x4710>  // b.lo, b.ul, b.last
  41a184:	ldrb	w9, [x21, #56]
  41a188:	and	w9, w9, #0xfffffff9
  41a18c:	orr	w9, w9, w8, lsl #1
  41a190:	strb	w9, [x21, #56]
  41a194:	cbz	w8, 41a1b4 <_obstack_memory_used@@Base+0x475c>
  41a198:	ldur	w8, [x29, #-4]
  41a19c:	tbz	w8, #0, 41a1ac <_obstack_memory_used@@Base+0x4754>
  41a1a0:	ldr	x8, [x22, #8]
  41a1a4:	sub	x19, x8, x20
  41a1a8:	b	419fb0 <_obstack_memory_used@@Base+0x4558>
  41a1ac:	ldr	x19, [x22]
  41a1b0:	b	419fb0 <_obstack_memory_used@@Base+0x4558>
  41a1b4:	mov	x19, #0xfffffffffffffffe    	// #-2
  41a1b8:	b	419fb0 <_obstack_memory_used@@Base+0x4558>
  41a1bc:	mov	x19, #0xffffffffffffffff    	// #-1
  41a1c0:	b	419fb8 <_obstack_memory_used@@Base+0x4560>
  41a1c4:	mov	x19, #0xfffffffffffffffe    	// #-2
  41a1c8:	b	419fb8 <_obstack_memory_used@@Base+0x4560>
  41a1cc:	ldr	x0, [x28, #8]
  41a1d0:	lsl	x25, x26, #3
  41a1d4:	mov	x1, x25
  41a1d8:	bl	402870 <realloc@plt>
  41a1dc:	cbz	x0, 41a204 <_obstack_memory_used@@Base+0x47ac>
  41a1e0:	mov	x24, x0
  41a1e4:	ldr	x0, [x28, #16]
  41a1e8:	mov	x1, x25
  41a1ec:	bl	402870 <realloc@plt>
  41a1f0:	cbz	x0, 41a1fc <_obstack_memory_used@@Base+0x47a4>
  41a1f4:	stp	x24, x0, [x28, #8]
  41a1f8:	b	41a020 <_obstack_memory_used@@Base+0x45c8>
  41a1fc:	mov	x0, x24
  41a200:	bl	402a10 <free@plt>
  41a204:	mov	w8, wzr
  41a208:	b	41a184 <_obstack_memory_used@@Base+0x472c>
  41a20c:	mov	x6, x5
  41a210:	mov	x5, x2
  41a214:	mov	w7, wzr
  41a218:	b	419e90 <_obstack_memory_used@@Base+0x4438>
  41a21c:	sub	sp, sp, #0x20
  41a220:	mov	x8, x6
  41a224:	mov	w9, #0x1                   	// #1
  41a228:	str	x7, [sp]
  41a22c:	mov	x6, xzr
  41a230:	mov	x7, x8
  41a234:	stp	x29, x30, [sp, #16]
  41a238:	add	x29, sp, #0x10
  41a23c:	strb	w9, [sp, #8]
  41a240:	bl	41a250 <_obstack_memory_used@@Base+0x47f8>
  41a244:	ldp	x29, x30, [sp, #16]
  41a248:	add	sp, sp, #0x20
  41a24c:	ret
  41a250:	sub	sp, sp, #0x70
  41a254:	stp	x22, x21, [sp, #80]
  41a258:	adds	x22, x2, x4
  41a25c:	stp	x29, x30, [sp, #16]
  41a260:	stp	x28, x27, [sp, #32]
  41a264:	stp	x26, x25, [sp, #48]
  41a268:	stp	x24, x23, [sp, #64]
  41a26c:	stp	x20, x19, [sp, #96]
  41a270:	add	x29, sp, #0x10
  41a274:	b.vs	41a35c <_obstack_memory_used@@Base+0x4904>
  41a278:	ldr	x23, [x29, #96]
  41a27c:	orr	x8, x4, x2
  41a280:	mov	x28, x4
  41a284:	mov	x19, x2
  41a288:	orr	x8, x8, x23
  41a28c:	tbnz	x8, #63, 41a35c <_obstack_memory_used@@Base+0x4904>
  41a290:	mov	x9, x7
  41a294:	mov	x20, x6
  41a298:	mov	x21, x5
  41a29c:	mov	x25, x1
  41a2a0:	mov	x24, x0
  41a2a4:	cmp	x28, #0x1
  41a2a8:	b.lt	41a2f4 <_obstack_memory_used@@Base+0x489c>  // b.tstop
  41a2ac:	mov	x27, x3
  41a2b0:	cmp	x19, #0x1
  41a2b4:	b.lt	41a2fc <_obstack_memory_used@@Base+0x48a4>  // b.tstop
  41a2b8:	mov	x0, x22
  41a2bc:	str	x9, [sp, #8]
  41a2c0:	bl	402730 <malloc@plt>
  41a2c4:	cbz	x0, 41a35c <_obstack_memory_used@@Base+0x4904>
  41a2c8:	mov	x1, x25
  41a2cc:	mov	x2, x19
  41a2d0:	mov	x26, x0
  41a2d4:	bl	402580 <memcpy@plt>
  41a2d8:	add	x0, x26, x19
  41a2dc:	mov	x1, x27
  41a2e0:	mov	x2, x28
  41a2e4:	bl	402580 <memcpy@plt>
  41a2e8:	ldr	x9, [sp, #8]
  41a2ec:	mov	x25, x26
  41a2f0:	b	41a304 <_obstack_memory_used@@Base+0x48ac>
  41a2f4:	mov	x26, xzr
  41a2f8:	b	41a304 <_obstack_memory_used@@Base+0x48ac>
  41a2fc:	mov	x26, xzr
  41a300:	mov	x25, x27
  41a304:	ldrb	w8, [x29, #104]
  41a308:	mov	x0, x24
  41a30c:	mov	x1, x25
  41a310:	mov	x2, x22
  41a314:	and	w7, w8, #0x1
  41a318:	mov	x3, x21
  41a31c:	mov	x4, x20
  41a320:	mov	x5, x23
  41a324:	mov	x6, x9
  41a328:	bl	419e90 <_obstack_memory_used@@Base+0x4438>
  41a32c:	mov	x19, x0
  41a330:	mov	x0, x26
  41a334:	bl	402a10 <free@plt>
  41a338:	mov	x0, x19
  41a33c:	ldp	x20, x19, [sp, #96]
  41a340:	ldp	x22, x21, [sp, #80]
  41a344:	ldp	x24, x23, [sp, #64]
  41a348:	ldp	x26, x25, [sp, #48]
  41a34c:	ldp	x28, x27, [sp, #32]
  41a350:	ldp	x29, x30, [sp, #16]
  41a354:	add	sp, sp, #0x70
  41a358:	ret
  41a35c:	mov	x0, #0xfffffffffffffffe    	// #-2
  41a360:	b	41a33c <_obstack_memory_used@@Base+0x48e4>
  41a364:	sub	sp, sp, #0x20
  41a368:	stp	x29, x30, [sp, #16]
  41a36c:	add	x29, sp, #0x10
  41a370:	ldr	x8, [x29, #16]
  41a374:	strb	wzr, [sp, #8]
  41a378:	str	x8, [sp]
  41a37c:	bl	41a250 <_obstack_memory_used@@Base+0x47f8>
  41a380:	ldp	x29, x30, [sp, #16]
  41a384:	add	sp, sp, #0x20
  41a388:	ret
  41a38c:	ldrb	w8, [x0, #56]
  41a390:	cmp	x2, #0x0
  41a394:	csel	x9, xzr, x4, eq  // eq = none
  41a398:	csel	x10, xzr, x3, eq  // eq = none
  41a39c:	and	w8, w8, #0xfffffff9
  41a3a0:	orr	w11, w8, #0x2
  41a3a4:	csel	w8, w8, w11, eq  // eq = none
  41a3a8:	strb	w8, [x0, #56]
  41a3ac:	stp	x10, x9, [x1, #8]
  41a3b0:	str	x2, [x1]
  41a3b4:	ret
  41a3b8:	stp	x29, x30, [sp, #-32]!
  41a3bc:	str	x19, [sp, #16]
  41a3c0:	mov	x19, x0
  41a3c4:	ldr	x0, [x0, #48]
  41a3c8:	mov	x29, sp
  41a3cc:	bl	402a10 <free@plt>
  41a3d0:	ldr	x0, [x19, #72]
  41a3d4:	bl	402a10 <free@plt>
  41a3d8:	ldr	x8, [x19, #80]
  41a3dc:	add	x9, x19, #0x8
  41a3e0:	cmp	x8, x9
  41a3e4:	b.eq	41a3f8 <_obstack_memory_used@@Base+0x49a0>  // b.none
  41a3e8:	ldr	x0, [x8, #16]
  41a3ec:	bl	402a10 <free@plt>
  41a3f0:	ldr	x0, [x19, #80]
  41a3f4:	bl	402a10 <free@plt>
  41a3f8:	ldr	x0, [x19, #24]
  41a3fc:	bl	402a10 <free@plt>
  41a400:	ldr	x0, [x19, #96]
  41a404:	bl	402a10 <free@plt>
  41a408:	ldr	x0, [x19, #88]
  41a40c:	bl	402a10 <free@plt>
  41a410:	mov	x0, x19
  41a414:	ldr	x19, [sp, #16]
  41a418:	ldp	x29, x30, [sp], #32
  41a41c:	b	402a10 <free@plt>
  41a420:	sub	sp, sp, #0xb0
  41a424:	stp	x29, x30, [sp, #80]
  41a428:	stp	x28, x27, [sp, #96]
  41a42c:	stp	x26, x25, [sp, #112]
  41a430:	stp	x24, x23, [sp, #128]
  41a434:	stp	x22, x21, [sp, #144]
  41a438:	stp	x20, x19, [sp, #160]
  41a43c:	ldr	x8, [x0, #64]
  41a440:	ldr	x9, [x0, #88]
  41a444:	ldrb	w10, [x0, #138]
  41a448:	ldr	x26, [x0, #48]
  41a44c:	mov	x19, x0
  41a450:	cmp	x8, x9
  41a454:	csel	x25, x9, x8, gt
  41a458:	add	x29, sp, #0x50
  41a45c:	cbnz	w10, 41a470 <_obstack_memory_used@@Base+0x4a18>
  41a460:	ldr	x8, [x19, #120]
  41a464:	cbnz	x8, 41a470 <_obstack_memory_used@@Base+0x4a18>
  41a468:	ldrb	w8, [x19, #140]
  41a46c:	cbz	w8, 41a478 <_obstack_memory_used@@Base+0x4a20>
  41a470:	ldr	x22, [x19, #56]
  41a474:	b	41a644 <_obstack_memory_used@@Base+0x4bec>
  41a478:	cmp	x25, x26
  41a47c:	b.le	41a624 <_obstack_memory_used@@Base+0x4bcc>
  41a480:	add	x20, x19, #0x20
  41a484:	b	41a4bc <_obstack_memory_used@@Base+0x4a64>
  41a488:	and	x21, x23, #0xff
  41a48c:	bl	402880 <__ctype_toupper_loc@plt>
  41a490:	ldr	x8, [x0]
  41a494:	ldr	x9, [x19, #8]
  41a498:	add	x28, x26, #0x1
  41a49c:	ldr	w8, [x8, x21, lsl #2]
  41a4a0:	strb	w8, [x9, x26]
  41a4a4:	ldp	x8, x9, [x19, #8]
  41a4a8:	ldrb	w8, [x8, x26]
  41a4ac:	str	w8, [x9, x26, lsl #2]
  41a4b0:	cmp	x25, x28
  41a4b4:	mov	x26, x28
  41a4b8:	b.le	41a954 <_obstack_memory_used@@Base+0x4efc>
  41a4bc:	ldr	x21, [x19, #40]
  41a4c0:	ldr	x22, [x19]
  41a4c4:	add	x8, x21, x26
  41a4c8:	ldrsb	w23, [x22, x8]
  41a4cc:	tbnz	w23, #31, 41a4dc <_obstack_memory_used@@Base+0x4a84>
  41a4d0:	mov	x0, x20
  41a4d4:	bl	402950 <mbsinit@plt>
  41a4d8:	cbnz	w0, 41a488 <_obstack_memory_used@@Base+0x4a30>
  41a4dc:	ldr	x8, [x20]
  41a4e0:	add	x9, x22, x21
  41a4e4:	sub	x2, x25, x26
  41a4e8:	add	x1, x9, x26
  41a4ec:	add	x0, sp, #0x4
  41a4f0:	mov	x3, x20
  41a4f4:	stur	x8, [x29, #-8]
  41a4f8:	bl	415680 <wcrtomb@plt+0x12a20>
  41a4fc:	sub	x24, x0, #0x1
  41a500:	mov	x21, x0
  41a504:	cmn	x24, #0x4
  41a508:	b.hi	41a5d4 <_obstack_memory_used@@Base+0x4b7c>  // b.pmore
  41a50c:	ldr	w0, [sp, #4]
  41a510:	bl	402b90 <towupper@plt>
  41a514:	ldr	w8, [sp, #4]
  41a518:	mov	w22, w0
  41a51c:	cmp	w0, w8
  41a520:	b.ne	41a538 <_obstack_memory_used@@Base+0x4ae0>  // b.any
  41a524:	ldr	x8, [x19]
  41a528:	ldr	x9, [x19, #40]
  41a52c:	add	x8, x8, x9
  41a530:	add	x23, x8, x26
  41a534:	b	41a554 <_obstack_memory_used@@Base+0x4afc>
  41a538:	add	x0, sp, #0x8
  41a53c:	sub	x2, x29, #0x8
  41a540:	mov	w1, w22
  41a544:	add	x23, sp, #0x8
  41a548:	bl	402c60 <wcrtomb@plt>
  41a54c:	cmp	x21, x0
  41a550:	b.ne	41a62c <_obstack_memory_used@@Base+0x4bd4>  // b.any
  41a554:	ldr	x8, [x19, #8]
  41a558:	mov	x1, x23
  41a55c:	mov	x2, x21
  41a560:	add	x0, x8, x26
  41a564:	bl	402580 <memcpy@plt>
  41a568:	ldr	x8, [x19, #16]
  41a56c:	add	x23, x21, x26
  41a570:	add	x28, x26, #0x1
  41a574:	cmp	x28, x23
  41a578:	str	w22, [x8, x26, lsl #2]
  41a57c:	b.ge	41a4b0 <_obstack_memory_used@@Base+0x4a58>  // b.tcont
  41a580:	add	x8, x8, x26, lsl #2
  41a584:	lsl	x9, x21, #2
  41a588:	add	x0, x8, #0x4
  41a58c:	sub	x2, x9, #0x4
  41a590:	mov	w1, #0xff                  	// #255
  41a594:	bl	402800 <memset@plt>
  41a598:	cmp	x24, #0x2
  41a59c:	b.cc	41a5bc <_obstack_memory_used@@Base+0x4b64>  // b.lo, b.ul, b.last
  41a5a0:	and	x8, x24, #0xfffffffffffffffe
  41a5a4:	add	x28, x28, x8
  41a5a8:	mov	x9, x8
  41a5ac:	subs	x9, x9, #0x2
  41a5b0:	b.ne	41a5ac <_obstack_memory_used@@Base+0x4b54>  // b.any
  41a5b4:	cmp	x24, x8
  41a5b8:	b.eq	41a5cc <_obstack_memory_used@@Base+0x4b74>  // b.none
  41a5bc:	add	x8, x21, x26
  41a5c0:	sub	x8, x8, x28
  41a5c4:	subs	x8, x8, #0x1
  41a5c8:	b.ne	41a5c4 <_obstack_memory_used@@Base+0x4b6c>  // b.any
  41a5cc:	mov	x28, x23
  41a5d0:	b	41a4b0 <_obstack_memory_used@@Base+0x4a58>
  41a5d4:	add	x8, x21, #0x1
  41a5d8:	cmp	x8, #0x2
  41a5dc:	b.cc	41a5f0 <_obstack_memory_used@@Base+0x4b98>  // b.lo, b.ul, b.last
  41a5e0:	ldr	x8, [x19, #64]
  41a5e4:	ldr	x9, [x19, #88]
  41a5e8:	cmp	x8, x9
  41a5ec:	b.lt	41a634 <_obstack_memory_used@@Base+0x4bdc>  // b.tstop
  41a5f0:	ldr	x8, [x19, #40]
  41a5f4:	ldp	x9, x10, [x19]
  41a5f8:	add	x28, x26, #0x1
  41a5fc:	cmn	x21, #0x1
  41a600:	add	x8, x8, x26
  41a604:	ldrb	w8, [x9, x8]
  41a608:	strb	w8, [x10, x26]
  41a60c:	ldr	x9, [x19, #16]
  41a610:	str	w8, [x9, x26, lsl #2]
  41a614:	b.ne	41a4b0 <_obstack_memory_used@@Base+0x4a58>  // b.any
  41a618:	ldur	x8, [x29, #-8]
  41a61c:	str	x8, [x20]
  41a620:	b	41a4b0 <_obstack_memory_used@@Base+0x4a58>
  41a624:	mov	x28, x26
  41a628:	b	41a954 <_obstack_memory_used@@Base+0x4efc>
  41a62c:	mov	x28, x26
  41a630:	b	41a654 <_obstack_memory_used@@Base+0x4bfc>
  41a634:	ldur	x8, [x29, #-8]
  41a638:	mov	x28, x26
  41a63c:	str	x8, [x20]
  41a640:	b	41a954 <_obstack_memory_used@@Base+0x4efc>
  41a644:	cmp	x26, x25
  41a648:	mov	x28, x26
  41a64c:	mov	x26, x22
  41a650:	b.ge	41a954 <_obstack_memory_used@@Base+0x4efc>  // b.tcont
  41a654:	mov	x23, x19
  41a658:	ldr	x8, [x23, #32]!
  41a65c:	sub	x2, x25, x28
  41a660:	stur	x8, [x29, #-8]
  41a664:	ldr	x8, [x23, #88]
  41a668:	cbnz	x8, 41a768 <_obstack_memory_used@@Base+0x4d10>
  41a66c:	ldr	x8, [x19]
  41a670:	ldr	x9, [x19, #40]
  41a674:	add	x8, x8, x9
  41a678:	add	x24, x8, x26
  41a67c:	mov	x0, sp
  41a680:	mov	x1, x24
  41a684:	mov	x3, x23
  41a688:	bl	415680 <wcrtomb@plt+0x12a20>
  41a68c:	sub	x27, x0, #0x1
  41a690:	mov	x20, x0
  41a694:	cmn	x27, #0x4
  41a698:	b.hi	41a7bc <_obstack_memory_used@@Base+0x4d64>  // b.pmore
  41a69c:	ldr	w0, [sp]
  41a6a0:	mov	x22, x25
  41a6a4:	bl	402b90 <towupper@plt>
  41a6a8:	ldr	w8, [sp]
  41a6ac:	mov	w21, w0
  41a6b0:	cmp	w0, w8
  41a6b4:	b.ne	41a6c0 <_obstack_memory_used@@Base+0x4c68>  // b.any
  41a6b8:	mov	x25, x24
  41a6bc:	b	41a6dc <_obstack_memory_used@@Base+0x4c84>
  41a6c0:	add	x0, sp, #0x8
  41a6c4:	sub	x2, x29, #0x8
  41a6c8:	mov	w1, w21
  41a6cc:	add	x25, sp, #0x8
  41a6d0:	bl	402c60 <wcrtomb@plt>
  41a6d4:	subs	x9, x0, x20
  41a6d8:	b.ne	41a824 <_obstack_memory_used@@Base+0x4dcc>  // b.any
  41a6dc:	ldr	x8, [x19, #8]
  41a6e0:	mov	x1, x25
  41a6e4:	mov	x2, x20
  41a6e8:	add	x0, x8, x28
  41a6ec:	bl	402580 <memcpy@plt>
  41a6f0:	ldrb	w8, [x19, #140]
  41a6f4:	mov	x25, x22
  41a6f8:	cbnz	w8, 41a884 <_obstack_memory_used@@Base+0x4e2c>
  41a6fc:	ldr	x8, [x19, #16]
  41a700:	add	x22, x20, x26
  41a704:	add	x23, x20, x28
  41a708:	add	x26, x28, #0x1
  41a70c:	cmp	x26, x23
  41a710:	str	w21, [x8, x28, lsl #2]
  41a714:	b.ge	41a644 <_obstack_memory_used@@Base+0x4bec>  // b.tcont
  41a718:	add	x0, x8, x26, lsl #2
  41a71c:	lsl	x8, x20, #2
  41a720:	sub	x2, x8, #0x4
  41a724:	mov	w1, #0xff                  	// #255
  41a728:	bl	402800 <memset@plt>
  41a72c:	cmp	x27, #0x2
  41a730:	b.cc	41a750 <_obstack_memory_used@@Base+0x4cf8>  // b.lo, b.ul, b.last
  41a734:	and	x8, x27, #0xfffffffffffffffe
  41a738:	add	x26, x26, x8
  41a73c:	mov	x9, x8
  41a740:	subs	x9, x9, #0x2
  41a744:	b.ne	41a740 <_obstack_memory_used@@Base+0x4ce8>  // b.any
  41a748:	cmp	x27, x8
  41a74c:	b.eq	41a760 <_obstack_memory_used@@Base+0x4d08>  // b.none
  41a750:	add	x8, x20, x28
  41a754:	sub	x8, x8, x26
  41a758:	subs	x8, x8, #0x1
  41a75c:	b.ne	41a758 <_obstack_memory_used@@Base+0x4d00>  // b.any
  41a760:	mov	x26, x23
  41a764:	b	41a644 <_obstack_memory_used@@Base+0x4bec>
  41a768:	ldr	w9, [x19, #144]
  41a76c:	add	x24, sp, #0x8
  41a770:	cmp	w9, #0x1
  41a774:	b.lt	41a67c <_obstack_memory_used@@Base+0x4c24>  // b.tstop
  41a778:	cmp	x2, #0x1
  41a77c:	b.lt	41a67c <_obstack_memory_used@@Base+0x4c24>  // b.tstop
  41a780:	ldr	x11, [x19, #40]
  41a784:	ldr	x12, [x19]
  41a788:	mov	x10, xzr
  41a78c:	add	x11, x26, x11
  41a790:	add	x11, x12, x11
  41a794:	ldrb	w12, [x11, x10]
  41a798:	add	x24, sp, #0x8
  41a79c:	ldrb	w12, [x8, x12]
  41a7a0:	strb	w12, [x24, x10]
  41a7a4:	add	x10, x10, #0x1
  41a7a8:	cmp	x10, x9
  41a7ac:	b.cs	41a67c <_obstack_memory_used@@Base+0x4c24>  // b.hs, b.nlast
  41a7b0:	cmp	x2, x10
  41a7b4:	b.gt	41a794 <_obstack_memory_used@@Base+0x4d3c>
  41a7b8:	b	41a67c <_obstack_memory_used@@Base+0x4c24>
  41a7bc:	add	x8, x20, #0x1
  41a7c0:	cmp	x8, #0x2
  41a7c4:	b.cc	41a7d8 <_obstack_memory_used@@Base+0x4d80>  // b.lo, b.ul, b.last
  41a7c8:	ldr	x8, [x19, #64]
  41a7cc:	ldr	x9, [x19, #88]
  41a7d0:	cmp	x8, x9
  41a7d4:	b.lt	41a94c <_obstack_memory_used@@Base+0x4ef4>  // b.tstop
  41a7d8:	ldr	x8, [x19, #40]
  41a7dc:	ldr	x10, [x19]
  41a7e0:	ldr	x9, [x19, #120]
  41a7e4:	add	x8, x8, x26
  41a7e8:	ldrb	w8, [x10, x8]
  41a7ec:	cbnz	x9, 41a984 <_obstack_memory_used@@Base+0x4f2c>
  41a7f0:	ldr	x9, [x19, #8]
  41a7f4:	strb	w8, [x9, x28]
  41a7f8:	ldrb	w9, [x19, #140]
  41a7fc:	cbnz	w9, 41a98c <_obstack_memory_used@@Base+0x4f34>
  41a800:	ldr	x9, [x19, #16]
  41a804:	add	x22, x26, #0x1
  41a808:	add	x26, x28, #0x1
  41a80c:	cmn	x20, #0x1
  41a810:	str	w8, [x9, x28, lsl #2]
  41a814:	b.ne	41a644 <_obstack_memory_used@@Base+0x4bec>  // b.any
  41a818:	ldur	x8, [x29, #-8]
  41a81c:	str	x8, [x23]
  41a820:	b	41a644 <_obstack_memory_used@@Base+0x4bec>
  41a824:	mov	x11, x0
  41a828:	cmn	x0, #0x1
  41a82c:	mov	x25, x24
  41a830:	b.eq	41a6dc <_obstack_memory_used@@Base+0x4c84>  // b.none
  41a834:	ldr	x8, [x19, #64]
  41a838:	add	x24, x11, x28
  41a83c:	cmp	x24, x8
  41a840:	b.hi	41a94c <_obstack_memory_used@@Base+0x4ef4>  // b.pmore
  41a844:	ldr	x0, [x19, #24]
  41a848:	mov	x22, x9
  41a84c:	cbnz	x0, 41a868 <_obstack_memory_used@@Base+0x4e10>
  41a850:	lsl	x0, x8, #3
  41a854:	mov	x23, x11
  41a858:	bl	402730 <malloc@plt>
  41a85c:	mov	x11, x23
  41a860:	str	x0, [x19, #24]
  41a864:	cbz	x0, 41a97c <_obstack_memory_used@@Base+0x4f24>
  41a868:	ldrb	w8, [x19, #140]
  41a86c:	cbnz	w8, 41a9b0 <_obstack_memory_used@@Base+0x4f58>
  41a870:	cbz	x28, 41a9a8 <_obstack_memory_used@@Base+0x4f50>
  41a874:	cmp	x28, #0x4
  41a878:	b.cs	41a90c <_obstack_memory_used@@Base+0x4eb4>  // b.hs, b.nlast
  41a87c:	mov	x8, xzr
  41a880:	b	41a998 <_obstack_memory_used@@Base+0x4f40>
  41a884:	ldr	x8, [x19, #24]
  41a888:	cmp	x20, #0x4
  41a88c:	b.cs	41a898 <_obstack_memory_used@@Base+0x4e40>  // b.hs, b.nlast
  41a890:	mov	x9, xzr
  41a894:	b	41a8e8 <_obstack_memory_used@@Base+0x4e90>
  41a898:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41a89c:	ldr	q1, [x11, #832]
  41a8a0:	mov	w11, #0x2                   	// #2
  41a8a4:	and	x9, x20, #0xfffffffffffffffc
  41a8a8:	add	x10, x8, x28, lsl #3
  41a8ac:	dup	v2.2d, x11
  41a8b0:	mov	w11, #0x4                   	// #4
  41a8b4:	dup	v0.2d, x26
  41a8b8:	add	x10, x10, #0x10
  41a8bc:	dup	v3.2d, x11
  41a8c0:	mov	x11, x9
  41a8c4:	add	v4.2d, v1.2d, v0.2d
  41a8c8:	add	v5.2d, v4.2d, v2.2d
  41a8cc:	add	v1.2d, v1.2d, v3.2d
  41a8d0:	subs	x11, x11, #0x4
  41a8d4:	stp	q4, q5, [x10, #-16]
  41a8d8:	add	x10, x10, #0x20
  41a8dc:	b.ne	41a8c4 <_obstack_memory_used@@Base+0x4e6c>  // b.any
  41a8e0:	cmp	x20, x9
  41a8e4:	b.eq	41a6fc <_obstack_memory_used@@Base+0x4ca4>  // b.none
  41a8e8:	sub	x10, x20, x9
  41a8ec:	add	x11, x26, x9
  41a8f0:	add	x9, x28, x9
  41a8f4:	add	x8, x8, x9, lsl #3
  41a8f8:	str	x11, [x8], #8
  41a8fc:	subs	x10, x10, #0x1
  41a900:	add	x11, x11, #0x1
  41a904:	b.ne	41a8f8 <_obstack_memory_used@@Base+0x4ea0>  // b.any
  41a908:	b	41a6fc <_obstack_memory_used@@Base+0x4ca4>
  41a90c:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  41a910:	ldr	q0, [x10, #832]
  41a914:	mov	w10, #0x2                   	// #2
  41a918:	and	x8, x28, #0xfffffffffffffffc
  41a91c:	dup	v1.2d, x10
  41a920:	mov	w10, #0x4                   	// #4
  41a924:	add	x9, x0, #0x10
  41a928:	dup	v2.2d, x10
  41a92c:	mov	x10, x8
  41a930:	add	v3.2d, v0.2d, v1.2d
  41a934:	stp	q0, q3, [x9, #-16]
  41a938:	add	v0.2d, v0.2d, v2.2d
  41a93c:	subs	x10, x10, #0x4
  41a940:	add	x9, x9, #0x20
  41a944:	b.ne	41a930 <_obstack_memory_used@@Base+0x4ed8>  // b.any
  41a948:	b	41a9a0 <_obstack_memory_used@@Base+0x4f48>
  41a94c:	ldur	x8, [x29, #-8]
  41a950:	str	x8, [x23]
  41a954:	mov	w0, wzr
  41a958:	stp	x28, x26, [x19, #48]
  41a95c:	ldp	x20, x19, [sp, #160]
  41a960:	ldp	x22, x21, [sp, #144]
  41a964:	ldp	x24, x23, [sp, #128]
  41a968:	ldp	x26, x25, [sp, #112]
  41a96c:	ldp	x28, x27, [sp, #96]
  41a970:	ldp	x29, x30, [sp, #80]
  41a974:	add	sp, sp, #0xb0
  41a978:	ret
  41a97c:	mov	w0, #0xc                   	// #12
  41a980:	b	41a95c <_obstack_memory_used@@Base+0x4f04>
  41a984:	ldrb	w8, [x9, x8]
  41a988:	b	41a7f0 <_obstack_memory_used@@Base+0x4d98>
  41a98c:	ldr	x9, [x19, #24]
  41a990:	str	x26, [x9, x28, lsl #3]
  41a994:	b	41a800 <_obstack_memory_used@@Base+0x4da8>
  41a998:	str	x8, [x0, x8, lsl #3]
  41a99c:	add	x8, x8, #0x1
  41a9a0:	cmp	x28, x8
  41a9a4:	b.ne	41a998 <_obstack_memory_used@@Base+0x4f40>  // b.any
  41a9a8:	mov	w8, #0x1                   	// #1
  41a9ac:	strb	w8, [x19, #140]
  41a9b0:	ldr	x8, [x19, #8]
  41a9b4:	add	x1, sp, #0x8
  41a9b8:	mov	x2, x11
  41a9bc:	mov	x23, x11
  41a9c0:	add	x0, x8, x28
  41a9c4:	bl	402580 <memcpy@plt>
  41a9c8:	ldr	x8, [x19, #16]
  41a9cc:	cmp	x23, #0x2
  41a9d0:	mov	x16, x22
  41a9d4:	str	w21, [x8, x28, lsl #2]
  41a9d8:	ldr	x9, [x19, #24]
  41a9dc:	str	x26, [x9, x28, lsl #3]
  41a9e0:	b.cc	41aaa4 <_obstack_memory_used@@Base+0x504c>  // b.lo, b.ul, b.last
  41a9e4:	sub	x11, x23, #0x1
  41a9e8:	cmp	x11, #0x4
  41a9ec:	b.cs	41a9f8 <_obstack_memory_used@@Base+0x4fa0>  // b.hs, b.nlast
  41a9f0:	mov	w10, #0x1                   	// #1
  41a9f4:	b	41aa78 <_obstack_memory_used@@Base+0x5020>
  41a9f8:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x115a8>
  41a9fc:	ldr	q3, [x13, #2656]
  41aa00:	mov	w15, #0x2                   	// #2
  41aa04:	and	x12, x11, #0xfffffffffffffffc
  41aa08:	add	x14, x28, #0x3
  41aa0c:	dup	v4.2d, x15
  41aa10:	mov	w15, #0x4                   	// #4
  41aa14:	dup	v0.2d, x20
  41aa18:	dup	v1.2d, x27
  41aa1c:	dup	v2.2d, x26
  41aa20:	orr	x10, x12, #0x1
  41aa24:	add	x13, x8, x14, lsl #2
  41aa28:	add	x14, x9, x14, lsl #3
  41aa2c:	movi	v5.2d, #0xffffffffffffffff
  41aa30:	dup	v6.2d, x15
  41aa34:	mov	x15, x12
  41aa38:	add	v7.2d, v3.2d, v4.2d
  41aa3c:	cmhi	v16.2d, v0.2d, v3.2d
  41aa40:	cmhi	v17.2d, v0.2d, v7.2d
  41aa44:	bsl	v16.16b, v3.16b, v1.16b
  41aa48:	bsl	v17.16b, v7.16b, v1.16b
  41aa4c:	add	v7.2d, v16.2d, v2.2d
  41aa50:	add	v16.2d, v17.2d, v2.2d
  41aa54:	subs	x15, x15, #0x4
  41aa58:	add	v3.2d, v3.2d, v6.2d
  41aa5c:	stp	q7, q16, [x14, #-16]
  41aa60:	stp	d5, d5, [x13, #-8]
  41aa64:	add	x13, x13, #0x10
  41aa68:	add	x14, x14, #0x20
  41aa6c:	b.ne	41aa38 <_obstack_memory_used@@Base+0x4fe0>  // b.any
  41aa70:	cmp	x11, x12
  41aa74:	b.eq	41aaa4 <_obstack_memory_used@@Base+0x504c>  // b.none
  41aa78:	add	x8, x8, x28, lsl #2
  41aa7c:	add	x9, x9, x28, lsl #3
  41aa80:	mov	w11, #0xffffffff            	// #-1
  41aa84:	cmp	x10, x20
  41aa88:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  41aa8c:	add	x12, x12, x26
  41aa90:	str	x12, [x9, x10, lsl #3]
  41aa94:	str	w11, [x8, x10, lsl #2]
  41aa98:	add	x10, x10, #0x1
  41aa9c:	cmp	x23, x10
  41aaa0:	b.ne	41aa84 <_obstack_memory_used@@Base+0x502c>  // b.any
  41aaa4:	ldp	x8, x9, [x19, #88]
  41aaa8:	add	x8, x8, x16
  41aaac:	cmp	x9, x26
  41aab0:	str	x8, [x19, #88]
  41aab4:	b.le	41aac4 <_obstack_memory_used@@Base+0x506c>
  41aab8:	ldr	x9, [x19, #104]
  41aabc:	add	x9, x9, x16
  41aac0:	str	x9, [x19, #104]
  41aac4:	ldr	x9, [x19, #64]
  41aac8:	add	x22, x20, x26
  41aacc:	mov	x26, x24
  41aad0:	cmp	x9, x8
  41aad4:	csel	x25, x8, x9, gt
  41aad8:	b	41a644 <_obstack_memory_used@@Base+0x4bec>
  41aadc:	sub	sp, sp, #0x90
  41aae0:	stp	x29, x30, [sp, #64]
  41aae4:	stp	x24, x23, [sp, #96]
  41aae8:	stp	x22, x21, [sp, #112]
  41aaec:	stp	x20, x19, [sp, #128]
  41aaf0:	ldr	x8, [x0, #64]
  41aaf4:	ldr	x9, [x0, #88]
  41aaf8:	ldr	x23, [x0, #48]
  41aafc:	mov	x19, x0
  41ab00:	str	x25, [sp, #80]
  41ab04:	cmp	x8, x9
  41ab08:	csel	x22, x9, x8, gt
  41ab0c:	cmp	x22, x23
  41ab10:	add	x29, sp, #0x40
  41ab14:	b.le	41acc0 <_obstack_memory_used@@Base+0x5268>
  41ab18:	add	x20, x19, #0x20
  41ab1c:	ldr	x8, [x19, #120]
  41ab20:	ldr	x24, [x19, #32]
  41ab24:	sub	x2, x22, x23
  41ab28:	cbnz	x8, 41ac18 <_obstack_memory_used@@Base+0x51c0>
  41ab2c:	ldr	x8, [x19]
  41ab30:	ldr	x9, [x19, #40]
  41ab34:	add	x8, x8, x9
  41ab38:	add	x1, x8, x23
  41ab3c:	add	x0, x29, #0x1c
  41ab40:	mov	x3, x20
  41ab44:	bl	415680 <wcrtomb@plt+0x12a20>
  41ab48:	add	x8, x0, #0x1
  41ab4c:	cmp	x8, #0x2
  41ab50:	b.cc	41ab70 <_obstack_memory_used@@Base+0x5118>  // b.lo, b.ul, b.last
  41ab54:	mov	x21, x0
  41ab58:	cmn	x0, #0x2
  41ab5c:	b.ne	41ab98 <_obstack_memory_used@@Base+0x5140>  // b.any
  41ab60:	ldr	x8, [x19, #64]
  41ab64:	ldr	x9, [x19, #88]
  41ab68:	cmp	x8, x9
  41ab6c:	b.lt	41acbc <_obstack_memory_used@@Base+0x5264>  // b.tstop
  41ab70:	ldr	x8, [x19, #40]
  41ab74:	ldr	x9, [x19]
  41ab78:	add	x8, x8, x23
  41ab7c:	ldrb	w8, [x9, x8]
  41ab80:	str	w8, [x29, #28]
  41ab84:	ldr	x9, [x19, #120]
  41ab88:	cbnz	x9, 41acb0 <_obstack_memory_used@@Base+0x5258>
  41ab8c:	mov	w21, #0x1                   	// #1
  41ab90:	str	x24, [x20]
  41ab94:	b	41ab9c <_obstack_memory_used@@Base+0x5144>
  41ab98:	ldr	w8, [x29, #28]
  41ab9c:	ldr	x9, [x19, #16]
  41aba0:	add	x25, x21, x23
  41aba4:	add	x24, x23, #0x1
  41aba8:	cmp	x24, x25
  41abac:	str	w8, [x9, x23, lsl #2]
  41abb0:	b.ge	41ac08 <_obstack_memory_used@@Base+0x51b0>  // b.tcont
  41abb4:	add	x8, x9, x23, lsl #2
  41abb8:	lsl	x9, x21, #2
  41abbc:	add	x0, x8, #0x4
  41abc0:	sub	x2, x9, #0x4
  41abc4:	mov	w1, #0xff                  	// #255
  41abc8:	bl	402800 <memset@plt>
  41abcc:	sub	x8, x21, #0x1
  41abd0:	cmp	x8, #0x2
  41abd4:	b.cc	41abf4 <_obstack_memory_used@@Base+0x519c>  // b.lo, b.ul, b.last
  41abd8:	and	x9, x8, #0xfffffffffffffffe
  41abdc:	add	x24, x24, x9
  41abe0:	mov	x10, x9
  41abe4:	subs	x10, x10, #0x2
  41abe8:	b.ne	41abe4 <_obstack_memory_used@@Base+0x518c>  // b.any
  41abec:	cmp	x8, x9
  41abf0:	b.eq	41ac04 <_obstack_memory_used@@Base+0x51ac>  // b.none
  41abf4:	add	x8, x23, x21
  41abf8:	sub	x8, x8, x24
  41abfc:	subs	x8, x8, #0x1
  41ac00:	b.ne	41abfc <_obstack_memory_used@@Base+0x51a4>  // b.any
  41ac04:	mov	x24, x25
  41ac08:	cmp	x22, x24
  41ac0c:	mov	x23, x24
  41ac10:	b.gt	41ab1c <_obstack_memory_used@@Base+0x50c4>
  41ac14:	b	41acc4 <_obstack_memory_used@@Base+0x526c>
  41ac18:	ldr	w9, [x19, #144]
  41ac1c:	mov	x1, sp
  41ac20:	cmp	w9, #0x1
  41ac24:	b.lt	41ab3c <_obstack_memory_used@@Base+0x50e4>  // b.tstop
  41ac28:	cmp	x2, #0x1
  41ac2c:	b.lt	41ab3c <_obstack_memory_used@@Base+0x50e4>  // b.tstop
  41ac30:	ldr	x9, [x19, #40]
  41ac34:	ldp	x10, x11, [x19]
  41ac38:	mov	x1, sp
  41ac3c:	add	x9, x23, x9
  41ac40:	ldrb	w9, [x10, x9]
  41ac44:	ldrb	w8, [x8, x9]
  41ac48:	strb	w8, [x11, x23]
  41ac4c:	strb	w8, [sp]
  41ac50:	ldr	w8, [x19, #144]
  41ac54:	cmp	w8, #0x2
  41ac58:	b.lt	41ab3c <_obstack_memory_used@@Base+0x50e4>  // b.tstop
  41ac5c:	cmp	x2, #0x2
  41ac60:	b.lt	41ab3c <_obstack_memory_used@@Base+0x50e4>  // b.tstop
  41ac64:	mov	w8, #0x1                   	// #1
  41ac68:	ldr	x9, [x19, #40]
  41ac6c:	ldp	x10, x12, [x19]
  41ac70:	ldr	x11, [x19, #120]
  41ac74:	mov	x1, sp
  41ac78:	add	x9, x10, x9
  41ac7c:	add	x9, x9, x23
  41ac80:	ldrb	w9, [x9, x8]
  41ac84:	add	x10, x12, x23
  41ac88:	ldrb	w9, [x11, x9]
  41ac8c:	strb	w9, [x10, x8]
  41ac90:	strb	w9, [x1, x8]
  41ac94:	ldr	w9, [x19, #144]
  41ac98:	add	x8, x8, #0x1
  41ac9c:	cmp	w9, w8
  41aca0:	b.le	41ab3c <_obstack_memory_used@@Base+0x50e4>
  41aca4:	cmp	x2, x8
  41aca8:	b.gt	41ac68 <_obstack_memory_used@@Base+0x5210>
  41acac:	b	41ab3c <_obstack_memory_used@@Base+0x50e4>
  41acb0:	ldrb	w8, [x9, w8, uxtw]
  41acb4:	str	w8, [x29, #28]
  41acb8:	b	41ab8c <_obstack_memory_used@@Base+0x5134>
  41acbc:	str	x24, [x20]
  41acc0:	mov	x24, x23
  41acc4:	stp	x24, x24, [x19, #48]
  41acc8:	ldp	x20, x19, [sp, #128]
  41accc:	ldp	x22, x21, [sp, #112]
  41acd0:	ldp	x24, x23, [sp, #96]
  41acd4:	ldr	x25, [sp, #80]
  41acd8:	ldp	x29, x30, [sp, #64]
  41acdc:	add	sp, sp, #0x90
  41ace0:	ret
  41ace4:	sub	sp, sp, #0x80
  41ace8:	stp	x29, x30, [sp, #32]
  41acec:	stp	x28, x27, [sp, #48]
  41acf0:	stp	x26, x25, [sp, #64]
  41acf4:	stp	x24, x23, [sp, #80]
  41acf8:	stp	x22, x21, [sp, #96]
  41acfc:	stp	x20, x19, [sp, #112]
  41ad00:	ldr	x28, [x1]
  41ad04:	add	x29, sp, #0x20
  41ad08:	mov	x19, x5
  41ad0c:	mov	x21, x4
  41ad10:	ldr	x8, [x28, #168]
  41ad14:	mov	x23, x2
  41ad18:	mov	x25, x0
  41ad1c:	stur	x3, [x29, #-8]
  41ad20:	stp	x8, x1, [sp, #8]
  41ad24:	bl	41b4b4 <_obstack_memory_used@@Base+0x5a5c>
  41ad28:	mov	x20, x0
  41ad2c:	cbnz	x0, 41ad38 <_obstack_memory_used@@Base+0x52e0>
  41ad30:	ldr	w8, [x19]
  41ad34:	cbnz	w8, 41af18 <_obstack_memory_used@@Base+0x54c0>
  41ad38:	ldrb	w8, [x23, #8]
  41ad3c:	cmp	w8, #0xa
  41ad40:	b.ne	41ae64 <_obstack_memory_used@@Base+0x540c>  // b.any
  41ad44:	str	x19, [sp]
  41ad48:	ldur	x8, [x29, #-8]
  41ad4c:	ldr	x22, [sp]
  41ad50:	mov	w19, #0xa                   	// #10
  41ad54:	mov	x24, #0xffffffffffffffff    	// #-1
  41ad58:	orr	x26, x8, #0x800000
  41ad5c:	b	41ad70 <_obstack_memory_used@@Base+0x5318>
  41ad60:	ldrb	w8, [x23, #8]
  41ad64:	mov	x20, x0
  41ad68:	cmp	w8, #0xa
  41ad6c:	b.ne	41ae68 <_obstack_memory_used@@Base+0x5410>  // b.any
  41ad70:	mov	x0, x23
  41ad74:	mov	x1, x25
  41ad78:	mov	x2, x26
  41ad7c:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41ad80:	ldr	x8, [x25, #72]
  41ad84:	add	x8, x8, w0, sxtw
  41ad88:	str	x8, [x25, #72]
  41ad8c:	ldrb	w8, [x23, #8]
  41ad90:	orr	w9, w8, #0x8
  41ad94:	cmp	w9, #0xa
  41ad98:	b.ne	41adec <_obstack_memory_used@@Base+0x5394>  // b.any
  41ad9c:	mov	x27, xzr
  41ada0:	ldr	w8, [x28, #128]
  41ada4:	cmp	w8, #0xf
  41ada8:	b.eq	41ae40 <_obstack_memory_used@@Base+0x53e8>  // b.none
  41adac:	ldr	x0, [x28, #112]
  41adb0:	add	w9, w8, #0x1
  41adb4:	sxtw	x8, w8
  41adb8:	add	x0, x0, x8, lsl #6
  41adbc:	str	w9, [x28, #128]
  41adc0:	str	xzr, [x0, #8]!
  41adc4:	stp	x20, x27, [x0, #8]
  41adc8:	stp	xzr, xzr, [x0, #32]
  41adcc:	str	w19, [x0, #48]
  41add0:	str	xzr, [x0, #24]
  41add4:	str	x24, [x0, #56]
  41add8:	cbz	x20, 41ade0 <_obstack_memory_used@@Base+0x5388>
  41addc:	str	x0, [x20]
  41ade0:	cbz	x27, 41ad60 <_obstack_memory_used@@Base+0x5308>
  41ade4:	str	x0, [x27]
  41ade8:	b	41ad60 <_obstack_memory_used@@Base+0x5308>
  41adec:	cbz	x21, 41adf8 <_obstack_memory_used@@Base+0x53a0>
  41adf0:	cmp	w8, #0x9
  41adf4:	b.eq	41ad9c <_obstack_memory_used@@Base+0x5344>  // b.none
  41adf8:	ldp	x8, x1, [sp, #8]
  41adfc:	ldur	x3, [x29, #-8]
  41ae00:	ldr	x19, [x28, #168]
  41ae04:	mov	x0, x25
  41ae08:	mov	x2, x23
  41ae0c:	mov	x4, x21
  41ae10:	mov	x5, x22
  41ae14:	str	x8, [x28, #168]
  41ae18:	bl	41b4b4 <_obstack_memory_used@@Base+0x5a5c>
  41ae1c:	mov	x27, x0
  41ae20:	cbnz	x0, 41ae2c <_obstack_memory_used@@Base+0x53d4>
  41ae24:	ldr	w8, [x22]
  41ae28:	cbnz	w8, 41ae88 <_obstack_memory_used@@Base+0x5430>
  41ae2c:	ldr	x8, [x28, #168]
  41ae30:	orr	x8, x8, x19
  41ae34:	mov	w19, #0xa                   	// #10
  41ae38:	str	x8, [x28, #168]
  41ae3c:	b	41ada0 <_obstack_memory_used@@Base+0x5348>
  41ae40:	mov	w0, #0x3c8                 	// #968
  41ae44:	bl	402730 <malloc@plt>
  41ae48:	cbz	x0, 41af20 <_obstack_memory_used@@Base+0x54c8>
  41ae4c:	ldr	x9, [x28, #112]
  41ae50:	mov	w8, wzr
  41ae54:	str	x9, [x0]
  41ae58:	str	x0, [x28, #112]
  41ae5c:	str	wzr, [x28, #128]
  41ae60:	b	41adb0 <_obstack_memory_used@@Base+0x5358>
  41ae64:	mov	x0, x20
  41ae68:	ldp	x20, x19, [sp, #112]
  41ae6c:	ldp	x22, x21, [sp, #96]
  41ae70:	ldp	x24, x23, [sp, #80]
  41ae74:	ldp	x26, x25, [sp, #64]
  41ae78:	ldp	x28, x27, [sp, #48]
  41ae7c:	ldp	x29, x30, [sp, #32]
  41ae80:	add	sp, sp, #0x80
  41ae84:	ret
  41ae88:	cbz	x20, 41af18 <_obstack_memory_used@@Base+0x54c0>
  41ae8c:	mov	w21, #0xff                  	// #255
  41ae90:	movk	w21, #0x4, lsl #16
  41ae94:	mov	x22, x20
  41ae98:	ldr	x20, [x20, #8]
  41ae9c:	cbnz	x20, 41ae94 <_obstack_memory_used@@Base+0x543c>
  41aea0:	ldr	x20, [x22, #16]
  41aea4:	cbnz	x20, 41ae94 <_obstack_memory_used@@Base+0x543c>
  41aea8:	ldr	w8, [x22, #48]
  41aeac:	and	w8, w8, w21
  41aeb0:	cmp	w8, #0x3
  41aeb4:	b.eq	41aee8 <_obstack_memory_used@@Base+0x5490>  // b.none
  41aeb8:	cmp	w8, #0x6
  41aebc:	b.ne	41aef4 <_obstack_memory_used@@Base+0x549c>  // b.any
  41aec0:	ldr	x19, [x22, #40]
  41aec4:	ldr	x0, [x19]
  41aec8:	bl	402a10 <free@plt>
  41aecc:	ldr	x0, [x19, #8]
  41aed0:	bl	402a10 <free@plt>
  41aed4:	ldr	x0, [x19, #16]
  41aed8:	bl	402a10 <free@plt>
  41aedc:	ldr	x0, [x19, #24]
  41aee0:	bl	402a10 <free@plt>
  41aee4:	b	41aeec <_obstack_memory_used@@Base+0x5494>
  41aee8:	ldr	x19, [x22, #40]
  41aeec:	mov	x0, x19
  41aef0:	bl	402a10 <free@plt>
  41aef4:	ldr	x8, [x22]
  41aef8:	cbz	x8, 41af18 <_obstack_memory_used@@Base+0x54c0>
  41aefc:	ldr	x20, [x8, #16]
  41af00:	cmp	x20, x22
  41af04:	mov	x22, x8
  41af08:	b.eq	41aea8 <_obstack_memory_used@@Base+0x5450>  // b.none
  41af0c:	mov	x22, x8
  41af10:	cbz	x20, 41aea8 <_obstack_memory_used@@Base+0x5450>
  41af14:	b	41ae94 <_obstack_memory_used@@Base+0x543c>
  41af18:	mov	x0, xzr
  41af1c:	b	41ae68 <_obstack_memory_used@@Base+0x5410>
  41af20:	ldr	x9, [sp]
  41af24:	mov	w8, #0xc                   	// #12
  41af28:	str	w8, [x9]
  41af2c:	b	41ae68 <_obstack_memory_used@@Base+0x5410>
  41af30:	sub	sp, sp, #0x50
  41af34:	stp	x29, x30, [sp, #16]
  41af38:	stp	x24, x23, [sp, #32]
  41af3c:	stp	x22, x21, [sp, #48]
  41af40:	stp	x20, x19, [sp, #64]
  41af44:	ldr	x9, [x1, #104]
  41af48:	ldr	x8, [x1, #72]
  41af4c:	mov	x19, x0
  41af50:	add	x29, sp, #0x10
  41af54:	cmp	x9, x8
  41af58:	b.le	41b03c <_obstack_memory_used@@Base+0x55e4>
  41af5c:	ldr	x9, [x1, #8]
  41af60:	mov	x23, x19
  41af64:	mov	x20, x2
  41af68:	mov	x21, x1
  41af6c:	ldrb	w24, [x9, x8]
  41af70:	strb	w24, [x23], #8
  41af74:	ldr	w8, [x23]
  41af78:	and	w9, w8, #0xff9fffff
  41af7c:	str	w9, [x23]
  41af80:	ldr	w11, [x1, #144]
  41af84:	cmp	w11, #0x2
  41af88:	b.lt	41afac <_obstack_memory_used@@Base+0x5554>  // b.tstop
  41af8c:	ldr	x9, [x21, #72]
  41af90:	ldr	x10, [x21, #48]
  41af94:	cmp	x9, x10
  41af98:	b.eq	41afac <_obstack_memory_used@@Base+0x5554>  // b.none
  41af9c:	ldr	x10, [x21, #16]
  41afa0:	ldr	w9, [x10, x9, lsl #2]
  41afa4:	cmn	w9, #0x1
  41afa8:	b.eq	41b17c <_obstack_memory_used@@Base+0x5724>  // b.none
  41afac:	mov	w9, #0xff00                	// #65280
  41afb0:	cmp	w24, #0x5c
  41afb4:	movk	w9, #0xff9f, lsl #16
  41afb8:	b.ne	41b04c <_obstack_memory_used@@Base+0x55f4>  // b.any
  41afbc:	ldr	x12, [x21, #72]
  41afc0:	ldr	x13, [x21, #88]
  41afc4:	add	x10, x12, #0x1
  41afc8:	cmp	x10, x13
  41afcc:	b.ge	41b09c <_obstack_memory_used@@Base+0x5644>  // b.tcont
  41afd0:	ldrb	w13, [x21, #139]
  41afd4:	cbnz	w13, 41b450 <_obstack_memory_used@@Base+0x59f8>
  41afd8:	ldr	x11, [x21, #8]
  41afdc:	ldrb	w22, [x11, x10]
  41afe0:	and	w8, w8, w9
  41afe4:	orr	w24, w8, #0x1
  41afe8:	strb	w22, [x19]
  41afec:	str	w24, [x19, #8]
  41aff0:	ldr	w8, [x21, #144]
  41aff4:	cmp	w8, #0x2
  41aff8:	b.lt	41b10c <_obstack_memory_used@@Base+0x56b4>  // b.tstop
  41affc:	ldr	x8, [x21, #72]
  41b000:	ldr	x9, [x21, #16]
  41b004:	add	x8, x9, x8, lsl #2
  41b008:	ldr	w21, [x8, #4]
  41b00c:	mov	w0, w21
  41b010:	bl	402b10 <iswalnum@plt>
  41b014:	ldr	w9, [x23]
  41b018:	cmp	w0, #0x0
  41b01c:	mov	w8, #0x5f                  	// #95
  41b020:	mov	w10, #0x400000              	// #4194304
  41b024:	ccmp	w21, w8, #0x4, eq  // eq = none
  41b028:	csel	w8, w10, wzr, eq  // eq = none
  41b02c:	and	w9, w9, #0xffbfffff
  41b030:	orr	w8, w8, w9
  41b034:	and	x9, x22, #0xff
  41b038:	b	41b134 <_obstack_memory_used@@Base+0x56dc>
  41b03c:	mov	w8, #0x2                   	// #2
  41b040:	mov	w0, wzr
  41b044:	strb	w8, [x19, #8]
  41b048:	b	41b2ac <_obstack_memory_used@@Base+0x5854>
  41b04c:	and	w8, w8, w9
  41b050:	orr	w22, w8, #0x1
  41b054:	str	w22, [x23]
  41b058:	ldr	w8, [x21, #144]
  41b05c:	cmp	w8, #0x2
  41b060:	b.lt	41b0ac <_obstack_memory_used@@Base+0x5654>  // b.tstop
  41b064:	ldr	x8, [x21, #72]
  41b068:	ldr	x9, [x21, #16]
  41b06c:	ldr	w22, [x9, x8, lsl #2]
  41b070:	mov	w0, w22
  41b074:	bl	402b10 <iswalnum@plt>
  41b078:	ldr	w9, [x23]
  41b07c:	cmp	w0, #0x0
  41b080:	mov	w8, #0x5f                  	// #95
  41b084:	ccmp	w22, w8, #0x4, eq  // eq = none
  41b088:	mov	w8, #0x400000              	// #4194304
  41b08c:	csel	w8, w8, wzr, eq  // eq = none
  41b090:	and	w9, w9, #0xffbfffff
  41b094:	orr	w8, w8, w9
  41b098:	b	41b0d8 <_obstack_memory_used@@Base+0x5680>
  41b09c:	and	w8, w8, w9
  41b0a0:	mov	w9, #0x24                  	// #36
  41b0a4:	orr	w8, w8, w9
  41b0a8:	b	41b2a4 <_obstack_memory_used@@Base+0x584c>
  41b0ac:	bl	4029e0 <__ctype_b_loc@plt>
  41b0b0:	ldr	x8, [x0]
  41b0b4:	cmp	w24, #0x5f
  41b0b8:	cset	w9, eq  // eq = none
  41b0bc:	ldrh	w8, [x8, x24, lsl #1]
  41b0c0:	and	w8, w8, #0x8
  41b0c4:	orr	w8, w9, w8, lsr #3
  41b0c8:	cmp	w8, #0x0
  41b0cc:	mov	w8, #0x400000              	// #4194304
  41b0d0:	csel	w8, w8, wzr, ne  // ne = any
  41b0d4:	orr	w8, w8, w22
  41b0d8:	sub	w9, w24, #0xa
  41b0dc:	cmp	w9, #0x73
  41b0e0:	mov	w0, #0x1                   	// #1
  41b0e4:	str	w8, [x23]
  41b0e8:	b.hi	41b2ac <_obstack_memory_used@@Base+0x5854>  // b.pmore
  41b0ec:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b0f0:	add	x10, x10, #0xa98
  41b0f4:	adr	x11, 41b104 <_obstack_memory_used@@Base+0x56ac>
  41b0f8:	ldrb	w12, [x10, x9]
  41b0fc:	add	x11, x11, x12, lsl #2
  41b100:	br	x11
  41b104:	tbnz	w20, #11, 41b29c <_obstack_memory_used@@Base+0x5844>
  41b108:	b	41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b10c:	bl	4029e0 <__ctype_b_loc@plt>
  41b110:	ldr	x8, [x0]
  41b114:	and	x9, x22, #0xff
  41b118:	and	w10, w22, #0xff
  41b11c:	cmp	w10, #0x5f
  41b120:	ldrh	w8, [x8, x9, lsl #1]
  41b124:	cset	w10, eq  // eq = none
  41b128:	ubfx	w8, w8, #3, #1
  41b12c:	orr	w8, w8, w10
  41b130:	orr	w8, w24, w8, lsl #22
  41b134:	and	w10, w22, #0xff
  41b138:	sub	w10, w10, #0x27
  41b13c:	cmp	w10, #0x56
  41b140:	mov	w0, #0x2                   	// #2
  41b144:	str	w8, [x23]
  41b148:	b.hi	41b2ac <_obstack_memory_used@@Base+0x5854>  // b.pmore
  41b14c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b150:	add	x11, x11, #0xb0c
  41b154:	adr	x12, 41b164 <_obstack_memory_used@@Base+0x570c>
  41b158:	ldrb	w13, [x11, x10]
  41b15c:	add	x12, x12, x13, lsl #2
  41b160:	br	x12
  41b164:	tbnz	w20, #14, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b168:	and	w8, w8, #0xffffff00
  41b16c:	sub	x9, x9, #0x31
  41b170:	orr	w8, w8, #0x4
  41b174:	str	x9, [x19]
  41b178:	b	41b3cc <_obstack_memory_used@@Base+0x5974>
  41b17c:	mov	w9, #0xff00                	// #65280
  41b180:	movk	w9, #0xff9f, lsl #16
  41b184:	mov	w10, #0x1                   	// #1
  41b188:	movk	w10, #0x20, lsl #16
  41b18c:	and	w8, w8, w9
  41b190:	orr	w8, w8, w10
  41b194:	b	41b2a4 <_obstack_memory_used@@Base+0x584c>
  41b198:	tbnz	w20, #3, 41b1e4 <_obstack_memory_used@@Base+0x578c>
  41b19c:	ldr	x9, [x21, #72]
  41b1a0:	ldr	x10, [x21, #88]
  41b1a4:	add	x9, x9, #0x1
  41b1a8:	cmp	x9, x10
  41b1ac:	b.eq	41b1e4 <_obstack_memory_used@@Base+0x578c>  // b.none
  41b1b0:	mov	x0, sp
  41b1b4:	mov	x1, x21
  41b1b8:	mov	x2, x20
  41b1bc:	str	x9, [x21, #72]
  41b1c0:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41b1c4:	ldr	x8, [x21, #72]
  41b1c8:	sub	x8, x8, #0x1
  41b1cc:	str	x8, [x21, #72]
  41b1d0:	ldrb	w8, [sp, #8]
  41b1d4:	sub	w8, w8, #0x9
  41b1d8:	cmp	w8, #0x1
  41b1dc:	b.hi	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.pmore
  41b1e0:	ldr	w8, [x23]
  41b1e4:	and	w8, w8, #0xffffff00
  41b1e8:	mov	w9, #0x20                  	// #32
  41b1ec:	b	41b264 <_obstack_memory_used@@Base+0x580c>
  41b1f0:	tbz	w20, #13, 41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b1f4:	and	w8, w8, #0xffffff00
  41b1f8:	orr	w8, w8, #0x8
  41b1fc:	b	41b2a4 <_obstack_memory_used@@Base+0x584c>
  41b200:	tbz	w20, #13, 41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b204:	mov	w9, #0x9                   	// #9
  41b208:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b20c:	mov	w9, #0xb                   	// #11
  41b210:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b214:	mov	w9, #0x402                 	// #1026
  41b218:	tst	x20, x9
  41b21c:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.any
  41b220:	mov	w9, #0x12                  	// #18
  41b224:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b228:	mov	w9, #0x5                   	// #5
  41b22c:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b230:	mov	w9, #0x402                 	// #1026
  41b234:	tst	x20, x9
  41b238:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.any
  41b23c:	mov	w9, #0x13                  	// #19
  41b240:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b244:	mov	w9, #0x14                  	// #20
  41b248:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b24c:	mov	w9, #0x8                   	// #8
  41b250:	movk	w9, #0x80, lsl #16
  41b254:	tst	x20, x9
  41b258:	b.eq	41b2e0 <_obstack_memory_used@@Base+0x5888>  // b.none
  41b25c:	and	w8, w8, #0xffffff00
  41b260:	mov	w9, #0x10                  	// #16
  41b264:	orr	w8, w8, #0xc
  41b268:	str	w9, [x19]
  41b26c:	str	w8, [x19, #8]
  41b270:	b	41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b274:	mvn	w9, w20
  41b278:	mov	w10, #0x1200                	// #4608
  41b27c:	tst	x9, x10
  41b280:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.any
  41b284:	mov	w9, #0x17                  	// #23
  41b288:	b	41b2a0 <_obstack_memory_used@@Base+0x5848>
  41b28c:	mov	w9, #0x8400                	// #33792
  41b290:	and	x9, x20, x9
  41b294:	cmp	x9, #0x8, lsl #12
  41b298:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.any
  41b29c:	mov	w9, #0xa                   	// #10
  41b2a0:	bfxil	w8, w9, #0, #8
  41b2a4:	str	w8, [x23]
  41b2a8:	mov	w0, #0x1                   	// #1
  41b2ac:	ldp	x20, x19, [sp, #64]
  41b2b0:	ldp	x22, x21, [sp, #48]
  41b2b4:	ldp	x24, x23, [sp, #32]
  41b2b8:	ldp	x29, x30, [sp, #16]
  41b2bc:	add	sp, sp, #0x50
  41b2c0:	ret
  41b2c4:	mvn	w9, w20
  41b2c8:	mov	w10, #0x1200                	// #4608
  41b2cc:	tst	x9, x10
  41b2d0:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x5850>  // b.any
  41b2d4:	and	w8, w8, #0xffffff00
  41b2d8:	orr	w8, w8, #0x18
  41b2dc:	b	41b2a4 <_obstack_memory_used@@Base+0x584c>
  41b2e0:	ldr	x9, [x21, #72]
  41b2e4:	cbz	x9, 41b25c <_obstack_memory_used@@Base+0x5804>
  41b2e8:	tbz	w20, #11, 41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b2ec:	ldr	x10, [x21, #8]
  41b2f0:	add	x9, x9, x10
  41b2f4:	ldurb	w9, [x9, #-1]
  41b2f8:	cmp	w9, #0xa
  41b2fc:	b.eq	41b25c <_obstack_memory_used@@Base+0x5804>  // b.none
  41b300:	b	41b2a8 <_obstack_memory_used@@Base+0x5850>
  41b304:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b308:	and	w8, w8, #0xffffff00
  41b30c:	mov	w9, #0x80                  	// #128
  41b310:	b	41b3c4 <_obstack_memory_used@@Base+0x596c>
  41b314:	tbnz	w20, #13, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b318:	and	w8, w8, #0xffffff00
  41b31c:	orr	w8, w8, #0x8
  41b320:	b	41b420 <_obstack_memory_used@@Base+0x59c8>
  41b324:	tbnz	w20, #13, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b328:	mov	w9, #0x9                   	// #9
  41b32c:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b330:	mov	w9, #0x402                 	// #1026
  41b334:	and	x9, x20, x9
  41b338:	cmp	x9, #0x2
  41b33c:	b.ne	41b448 <_obstack_memory_used@@Base+0x59f0>  // b.any
  41b340:	mov	w9, #0x12                  	// #18
  41b344:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b348:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b34c:	and	w8, w8, #0xffffff00
  41b350:	mov	w9, #0x6                   	// #6
  41b354:	b	41b3c4 <_obstack_memory_used@@Base+0x596c>
  41b358:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b35c:	and	w8, w8, #0xffffff00
  41b360:	mov	w9, #0x9                   	// #9
  41b364:	b	41b3c4 <_obstack_memory_used@@Base+0x596c>
  41b368:	mov	w9, #0x402                 	// #1026
  41b36c:	and	x9, x20, x9
  41b370:	cmp	x9, #0x2
  41b374:	b.ne	41b448 <_obstack_memory_used@@Base+0x59f0>  // b.any
  41b378:	mov	w9, #0x13                  	// #19
  41b37c:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b380:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b384:	and	w8, w8, #0xffffff00
  41b388:	mov	w9, #0x200                 	// #512
  41b38c:	b	41b3c4 <_obstack_memory_used@@Base+0x596c>
  41b390:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b394:	mov	w9, #0x23                  	// #35
  41b398:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b39c:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b3a0:	mov	w9, #0x21                  	// #33
  41b3a4:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b3a8:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b3ac:	and	w8, w8, #0xffffff00
  41b3b0:	mov	w9, #0x40                  	// #64
  41b3b4:	b	41b3c4 <_obstack_memory_used@@Base+0x596c>
  41b3b8:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b3bc:	and	w8, w8, #0xffffff00
  41b3c0:	mov	w9, #0x100                 	// #256
  41b3c4:	orr	w8, w8, #0xc
  41b3c8:	str	w9, [x19]
  41b3cc:	str	w8, [x19, #8]
  41b3d0:	mov	w0, #0x2                   	// #2
  41b3d4:	b	41b2ac <_obstack_memory_used@@Base+0x5854>
  41b3d8:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b3dc:	mov	w9, #0x22                  	// #34
  41b3e0:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b3e4:	tbnz	w20, #19, 41b448 <_obstack_memory_used@@Base+0x59f0>
  41b3e8:	and	w8, w8, #0xffffff00
  41b3ec:	orr	w8, w8, #0x20
  41b3f0:	b	41b420 <_obstack_memory_used@@Base+0x59c8>
  41b3f4:	mov	w9, #0x1200                	// #4608
  41b3f8:	and	x9, x20, x9
  41b3fc:	cmp	x9, #0x200
  41b400:	b.ne	41b448 <_obstack_memory_used@@Base+0x59f0>  // b.any
  41b404:	mov	w9, #0x17                  	// #23
  41b408:	b	41b41c <_obstack_memory_used@@Base+0x59c4>
  41b40c:	mov	w9, #0x8400                	// #33792
  41b410:	tst	x20, x9
  41b414:	b.ne	41b448 <_obstack_memory_used@@Base+0x59f0>  // b.any
  41b418:	mov	w9, #0xa                   	// #10
  41b41c:	bfxil	w8, w9, #0, #8
  41b420:	str	w8, [x23]
  41b424:	mov	w0, #0x2                   	// #2
  41b428:	b	41b2ac <_obstack_memory_used@@Base+0x5854>
  41b42c:	mov	w9, #0x1200                	// #4608
  41b430:	and	x9, x20, x9
  41b434:	cmp	x9, #0x200
  41b438:	b.ne	41b448 <_obstack_memory_used@@Base+0x59f0>  // b.any
  41b43c:	and	w8, w8, #0xffffff00
  41b440:	orr	w8, w8, #0x18
  41b444:	b	41b420 <_obstack_memory_used@@Base+0x59c8>
  41b448:	mov	w0, #0x2                   	// #2
  41b44c:	b	41b2ac <_obstack_memory_used@@Base+0x5854>
  41b450:	cmp	w11, #0x2
  41b454:	b.lt	41b484 <_obstack_memory_used@@Base+0x5a2c>  // b.tstop
  41b458:	ldr	x11, [x21, #16]
  41b45c:	ldr	w13, [x11, x10, lsl #2]
  41b460:	cmn	w13, #0x1
  41b464:	b.eq	41afd8 <_obstack_memory_used@@Base+0x5580>  // b.none
  41b468:	ldr	x13, [x21, #48]
  41b46c:	add	x12, x12, #0x2
  41b470:	cmp	x13, x12
  41b474:	b.eq	41b484 <_obstack_memory_used@@Base+0x5a2c>  // b.none
  41b478:	ldr	w11, [x11, x12, lsl #2]
  41b47c:	cmn	w11, #0x1
  41b480:	b.eq	41afd8 <_obstack_memory_used@@Base+0x5580>  // b.none
  41b484:	ldrb	w11, [x21, #140]
  41b488:	mov	x12, x10
  41b48c:	cbz	w11, 41b498 <_obstack_memory_used@@Base+0x5a40>
  41b490:	ldr	x12, [x21, #24]
  41b494:	ldr	x12, [x12, x10, lsl #3]
  41b498:	ldr	x13, [x21, #40]
  41b49c:	ldr	x14, [x21]
  41b4a0:	add	x12, x13, x12
  41b4a4:	ldrsb	w22, [x14, x12]
  41b4a8:	cbz	w11, 41afe0 <_obstack_memory_used@@Base+0x5588>
  41b4ac:	tbnz	w22, #31, 41afd8 <_obstack_memory_used@@Base+0x5580>
  41b4b0:	b	41afe0 <_obstack_memory_used@@Base+0x5588>
  41b4b4:	stp	x29, x30, [sp, #-96]!
  41b4b8:	stp	x28, x27, [sp, #16]
  41b4bc:	stp	x26, x25, [sp, #32]
  41b4c0:	stp	x24, x23, [sp, #48]
  41b4c4:	stp	x22, x21, [sp, #64]
  41b4c8:	stp	x20, x19, [sp, #80]
  41b4cc:	ldr	x27, [x1]
  41b4d0:	mov	x29, sp
  41b4d4:	mov	x19, x5
  41b4d8:	mov	x21, x4
  41b4dc:	mov	x22, x3
  41b4e0:	mov	x23, x2
  41b4e4:	mov	x24, x1
  41b4e8:	mov	x25, x0
  41b4ec:	bl	41b7a4 <_obstack_memory_used@@Base+0x5d4c>
  41b4f0:	mov	x20, x0
  41b4f4:	cbnz	x0, 41b500 <_obstack_memory_used@@Base+0x5aa8>
  41b4f8:	ldr	w8, [x19]
  41b4fc:	cbnz	w8, 41b660 <_obstack_memory_used@@Base+0x5c08>
  41b500:	mov	x28, #0xffffffffffffffff    	// #-1
  41b504:	b	41b510 <_obstack_memory_used@@Base+0x5ab8>
  41b508:	cmp	x20, #0x0
  41b50c:	csel	x20, x26, x20, eq  // eq = none
  41b510:	ldrb	w8, [x23, #8]
  41b514:	orr	w9, w8, #0x8
  41b518:	cmp	w9, #0xa
  41b51c:	b.eq	41b664 <_obstack_memory_used@@Base+0x5c0c>  // b.none
  41b520:	cbz	x21, 41b52c <_obstack_memory_used@@Base+0x5ad4>
  41b524:	cmp	w8, #0x9
  41b528:	b.eq	41b664 <_obstack_memory_used@@Base+0x5c0c>  // b.none
  41b52c:	mov	x0, x25
  41b530:	mov	x1, x24
  41b534:	mov	x2, x23
  41b538:	mov	x3, x22
  41b53c:	mov	x4, x21
  41b540:	mov	x5, x19
  41b544:	bl	41b7a4 <_obstack_memory_used@@Base+0x5d4c>
  41b548:	mov	x26, x0
  41b54c:	cbnz	x0, 41b558 <_obstack_memory_used@@Base+0x5b00>
  41b550:	ldr	w8, [x19]
  41b554:	cbnz	w8, 41b5d0 <_obstack_memory_used@@Base+0x5b78>
  41b558:	cbz	x20, 41b508 <_obstack_memory_used@@Base+0x5ab0>
  41b55c:	cbz	x26, 41b508 <_obstack_memory_used@@Base+0x5ab0>
  41b560:	ldr	w8, [x27, #128]
  41b564:	cmp	w8, #0xf
  41b568:	b.eq	41b5ac <_obstack_memory_used@@Base+0x5b54>  // b.none
  41b56c:	ldr	x0, [x27, #112]
  41b570:	add	w9, w8, #0x1
  41b574:	sxtw	x8, w8
  41b578:	add	x8, x0, x8, lsl #6
  41b57c:	str	w9, [x27, #128]
  41b580:	str	xzr, [x8, #8]!
  41b584:	mov	w9, #0x10                  	// #16
  41b588:	stp	x20, x26, [x8, #8]
  41b58c:	stp	xzr, xzr, [x8, #32]
  41b590:	str	w9, [x8, #48]
  41b594:	str	xzr, [x8, #24]
  41b598:	str	x28, [x8, #56]
  41b59c:	str	x8, [x20]
  41b5a0:	str	x8, [x26]
  41b5a4:	mov	x20, x8
  41b5a8:	b	41b510 <_obstack_memory_used@@Base+0x5ab8>
  41b5ac:	mov	w0, #0x3c8                 	// #968
  41b5b0:	bl	402730 <malloc@plt>
  41b5b4:	cbz	x0, 41b684 <_obstack_memory_used@@Base+0x5c2c>
  41b5b8:	ldr	x9, [x27, #112]
  41b5bc:	mov	w8, wzr
  41b5c0:	str	x9, [x0]
  41b5c4:	str	x0, [x27, #112]
  41b5c8:	str	wzr, [x27, #128]
  41b5cc:	b	41b570 <_obstack_memory_used@@Base+0x5b18>
  41b5d0:	cbz	x20, 41b664 <_obstack_memory_used@@Base+0x5c0c>
  41b5d4:	mov	w21, #0xff                  	// #255
  41b5d8:	movk	w21, #0x4, lsl #16
  41b5dc:	mov	x22, x20
  41b5e0:	ldr	x20, [x20, #8]
  41b5e4:	cbnz	x20, 41b5dc <_obstack_memory_used@@Base+0x5b84>
  41b5e8:	ldr	x20, [x22, #16]
  41b5ec:	cbnz	x20, 41b5dc <_obstack_memory_used@@Base+0x5b84>
  41b5f0:	ldr	w8, [x22, #48]
  41b5f4:	and	w8, w8, w21
  41b5f8:	cmp	w8, #0x3
  41b5fc:	b.eq	41b630 <_obstack_memory_used@@Base+0x5bd8>  // b.none
  41b600:	cmp	w8, #0x6
  41b604:	b.ne	41b63c <_obstack_memory_used@@Base+0x5be4>  // b.any
  41b608:	ldr	x19, [x22, #40]
  41b60c:	ldr	x0, [x19]
  41b610:	bl	402a10 <free@plt>
  41b614:	ldr	x0, [x19, #8]
  41b618:	bl	402a10 <free@plt>
  41b61c:	ldr	x0, [x19, #16]
  41b620:	bl	402a10 <free@plt>
  41b624:	ldr	x0, [x19, #24]
  41b628:	bl	402a10 <free@plt>
  41b62c:	b	41b634 <_obstack_memory_used@@Base+0x5bdc>
  41b630:	ldr	x19, [x22, #40]
  41b634:	mov	x0, x19
  41b638:	bl	402a10 <free@plt>
  41b63c:	ldr	x8, [x22]
  41b640:	cbz	x8, 41b660 <_obstack_memory_used@@Base+0x5c08>
  41b644:	ldr	x20, [x8, #16]
  41b648:	cmp	x20, x22
  41b64c:	mov	x22, x8
  41b650:	b.eq	41b5f0 <_obstack_memory_used@@Base+0x5b98>  // b.none
  41b654:	mov	x22, x8
  41b658:	cbz	x20, 41b5f0 <_obstack_memory_used@@Base+0x5b98>
  41b65c:	b	41b5dc <_obstack_memory_used@@Base+0x5b84>
  41b660:	mov	x20, xzr
  41b664:	mov	x0, x20
  41b668:	ldp	x20, x19, [sp, #80]
  41b66c:	ldp	x22, x21, [sp, #64]
  41b670:	ldp	x24, x23, [sp, #48]
  41b674:	ldp	x26, x25, [sp, #32]
  41b678:	ldp	x28, x27, [sp, #16]
  41b67c:	ldp	x29, x30, [sp], #96
  41b680:	ret
  41b684:	mov	w22, #0xff                  	// #255
  41b688:	movk	w22, #0x4, lsl #16
  41b68c:	mov	x23, x26
  41b690:	ldr	x26, [x26, #8]
  41b694:	cbnz	x26, 41b68c <_obstack_memory_used@@Base+0x5c34>
  41b698:	ldr	x26, [x23, #16]
  41b69c:	cbnz	x26, 41b68c <_obstack_memory_used@@Base+0x5c34>
  41b6a0:	ldr	w8, [x23, #48]
  41b6a4:	and	w8, w8, w22
  41b6a8:	cmp	w8, #0x3
  41b6ac:	b.eq	41b6e0 <_obstack_memory_used@@Base+0x5c88>  // b.none
  41b6b0:	cmp	w8, #0x6
  41b6b4:	b.ne	41b6ec <_obstack_memory_used@@Base+0x5c94>  // b.any
  41b6b8:	ldr	x21, [x23, #40]
  41b6bc:	ldr	x0, [x21]
  41b6c0:	bl	402a10 <free@plt>
  41b6c4:	ldr	x0, [x21, #8]
  41b6c8:	bl	402a10 <free@plt>
  41b6cc:	ldr	x0, [x21, #16]
  41b6d0:	bl	402a10 <free@plt>
  41b6d4:	ldr	x0, [x21, #24]
  41b6d8:	bl	402a10 <free@plt>
  41b6dc:	b	41b6e4 <_obstack_memory_used@@Base+0x5c8c>
  41b6e0:	ldr	x21, [x23, #40]
  41b6e4:	mov	x0, x21
  41b6e8:	bl	402a10 <free@plt>
  41b6ec:	ldr	x8, [x23]
  41b6f0:	cbz	x8, 41b710 <_obstack_memory_used@@Base+0x5cb8>
  41b6f4:	ldr	x26, [x8, #16]
  41b6f8:	cmp	x26, x23
  41b6fc:	mov	x23, x8
  41b700:	b.eq	41b6a0 <_obstack_memory_used@@Base+0x5c48>  // b.none
  41b704:	mov	x23, x8
  41b708:	cbz	x26, 41b6a0 <_obstack_memory_used@@Base+0x5c48>
  41b70c:	b	41b68c <_obstack_memory_used@@Base+0x5c34>
  41b710:	mov	x21, x20
  41b714:	ldr	x20, [x20, #8]
  41b718:	cbnz	x20, 41b710 <_obstack_memory_used@@Base+0x5cb8>
  41b71c:	ldr	x20, [x21, #16]
  41b720:	cbnz	x20, 41b710 <_obstack_memory_used@@Base+0x5cb8>
  41b724:	ldr	w8, [x21, #48]
  41b728:	and	w8, w8, w22
  41b72c:	cmp	w8, #0x3
  41b730:	b.eq	41b764 <_obstack_memory_used@@Base+0x5d0c>  // b.none
  41b734:	cmp	w8, #0x6
  41b738:	b.ne	41b770 <_obstack_memory_used@@Base+0x5d18>  // b.any
  41b73c:	ldr	x20, [x21, #40]
  41b740:	ldr	x0, [x20]
  41b744:	bl	402a10 <free@plt>
  41b748:	ldr	x0, [x20, #8]
  41b74c:	bl	402a10 <free@plt>
  41b750:	ldr	x0, [x20, #16]
  41b754:	bl	402a10 <free@plt>
  41b758:	ldr	x0, [x20, #24]
  41b75c:	bl	402a10 <free@plt>
  41b760:	b	41b768 <_obstack_memory_used@@Base+0x5d10>
  41b764:	ldr	x20, [x21, #40]
  41b768:	mov	x0, x20
  41b76c:	bl	402a10 <free@plt>
  41b770:	ldr	x8, [x21]
  41b774:	cbz	x8, 41b794 <_obstack_memory_used@@Base+0x5d3c>
  41b778:	ldr	x20, [x8, #16]
  41b77c:	cmp	x20, x21
  41b780:	mov	x21, x8
  41b784:	b.eq	41b724 <_obstack_memory_used@@Base+0x5ccc>  // b.none
  41b788:	mov	x21, x8
  41b78c:	cbz	x20, 41b724 <_obstack_memory_used@@Base+0x5ccc>
  41b790:	b	41b710 <_obstack_memory_used@@Base+0x5cb8>
  41b794:	mov	x20, xzr
  41b798:	mov	w8, #0xc                   	// #12
  41b79c:	str	w8, [x19]
  41b7a0:	b	41b664 <_obstack_memory_used@@Base+0x5c0c>
  41b7a4:	sub	sp, sp, #0x120
  41b7a8:	stp	x29, x30, [sp, #192]
  41b7ac:	stp	x28, x27, [sp, #208]
  41b7b0:	stp	x26, x25, [sp, #224]
  41b7b4:	stp	x24, x23, [sp, #240]
  41b7b8:	stp	x22, x21, [sp, #256]
  41b7bc:	stp	x20, x19, [sp, #272]
  41b7c0:	stp	x0, x3, [sp, #32]
  41b7c4:	ldr	w8, [x2, #8]
  41b7c8:	ldr	x23, [x1]
  41b7cc:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b7d0:	add	x11, x11, #0xb64
  41b7d4:	and	w9, w8, #0xff
  41b7d8:	sub	w10, w9, #0x1
  41b7dc:	adr	x12, 41b808 <_obstack_memory_used@@Base+0x5db0>
  41b7e0:	ldrh	w13, [x11, x10, lsl #1]
  41b7e4:	add	x12, x12, x13, lsl #2
  41b7e8:	add	x29, sp, #0xc0
  41b7ec:	mov	x28, x5
  41b7f0:	mov	x25, x4
  41b7f4:	mov	x14, x2
  41b7f8:	mov	x26, x1
  41b7fc:	mov	x24, xzr
  41b800:	str	x2, [sp, #56]
  41b804:	br	x12
  41b808:	ldr	x10, [sp, #40]
  41b80c:	tbnz	w10, #5, 41bd64 <_obstack_memory_used@@Base+0x630c>
  41b810:	tbnz	w10, #4, 41bd7c <_obstack_memory_used@@Base+0x6324>
  41b814:	ldr	x10, [sp, #40]
  41b818:	tbnz	w10, #17, 41b89c <_obstack_memory_used@@Base+0x5e44>
  41b81c:	cmp	w9, #0x9
  41b820:	b.ne	41b89c <_obstack_memory_used@@Base+0x5e44>  // b.any
  41b824:	mov	w8, #0x10                  	// #16
  41b828:	b	41d674 <_obstack_memory_used@@Base+0x7c1c>
  41b82c:	ldr	x8, [sp, #32]
  41b830:	cmp	w9, #0x21
  41b834:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b838:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b83c:	ldr	x1, [x8, #120]
  41b840:	cset	w4, eq  // eq = none
  41b844:	add	x2, x2, #0x4bd
  41b848:	add	x3, x3, #0xe10
  41b84c:	b	41b870 <_obstack_memory_used@@Base+0x5e18>
  41b850:	ldr	x8, [sp, #32]
  41b854:	cmp	w9, #0x23
  41b858:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b85c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x105a8>
  41b860:	ldr	x1, [x8, #120]
  41b864:	cset	w4, eq  // eq = none
  41b868:	add	x2, x2, #0x4b1
  41b86c:	add	x3, x3, #0x7c3
  41b870:	mov	x0, x23
  41b874:	mov	x5, x28
  41b878:	bl	41d83c <_obstack_memory_used@@Base+0x7de4>
  41b87c:	mov	x24, x0
  41b880:	cbnz	x0, 41b894 <_obstack_memory_used@@Base+0x5e3c>
  41b884:	ldr	w8, [x28]
  41b888:	ldr	x14, [sp, #56]
  41b88c:	cbz	w8, 41c464 <_obstack_memory_used@@Base+0x6a0c>
  41b890:	b	41be00 <_obstack_memory_used@@Base+0x63a8>
  41b894:	ldr	x14, [sp, #56]
  41b898:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41b89c:	and	w8, w8, #0xffffff00
  41b8a0:	orr	w8, w8, #0x1
  41b8a4:	str	w8, [x14, #8]
  41b8a8:	ldr	w8, [x23, #128]
  41b8ac:	cmp	w8, #0xf
  41b8b0:	b.eq	41d3dc <_obstack_memory_used@@Base+0x7984>  // b.none
  41b8b4:	ldr	x0, [x23, #112]
  41b8b8:	add	w9, w8, #0x1
  41b8bc:	sxtw	x8, w8
  41b8c0:	add	x24, x0, x8, lsl #6
  41b8c4:	str	w9, [x23, #128]
  41b8c8:	str	xzr, [x24, #8]!
  41b8cc:	stp	xzr, xzr, [x24, #8]
  41b8d0:	ldr	q0, [x14]
  41b8d4:	mov	x9, #0xffffffffffffffff    	// #-1
  41b8d8:	stp	xzr, xzr, [x24, #24]
  41b8dc:	str	x9, [x24, #56]
  41b8e0:	stur	q0, [x24, #40]
  41b8e4:	ldr	w8, [x24, #48]
  41b8e8:	and	w8, w8, #0xfff3ffff
  41b8ec:	str	w8, [x24, #48]
  41b8f0:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41b8f4:	ldr	w8, [x14]
  41b8f8:	mov	w9, #0x30f                 	// #783
  41b8fc:	tst	w8, w9
  41b900:	b.eq	41b930 <_obstack_memory_used@@Base+0x5ed8>  // b.none
  41b904:	ldrb	w8, [x23, #176]
  41b908:	tbnz	w8, #4, 41b92c <_obstack_memory_used@@Base+0x5ed4>
  41b90c:	orr	w9, w8, #0x10
  41b910:	strb	w9, [x23, #176]
  41b914:	tbnz	w8, #3, 41d6a0 <_obstack_memory_used@@Base+0x7c48>
  41b918:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x115a8>
  41b91c:	ldr	q0, [x9, #2672]
  41b920:	stur	q0, [x23, #184]
  41b924:	tbz	w8, #2, 41d6ac <_obstack_memory_used@@Base+0x7c54>
  41b928:	stp	xzr, xzr, [x23, #200]
  41b92c:	ldr	w8, [x14]
  41b930:	cmp	w8, #0x200
  41b934:	b.eq	41d110 <_obstack_memory_used@@Base+0x76b8>  // b.none
  41b938:	ldr	x21, [sp, #40]
  41b93c:	cmp	w8, #0x100
  41b940:	b.ne	41d20c <_obstack_memory_used@@Base+0x77b4>  // b.any
  41b944:	mov	w8, #0x6                   	// #6
  41b948:	str	w8, [x14]
  41b94c:	ldr	w8, [x23, #128]
  41b950:	cmp	w8, #0xf
  41b954:	b.eq	41d5ec <_obstack_memory_used@@Base+0x7b94>  // b.none
  41b958:	ldr	x0, [x23, #112]
  41b95c:	add	w9, w8, #0x1
  41b960:	sxtw	x8, w8
  41b964:	add	x19, x0, x8, lsl #6
  41b968:	str	w9, [x23, #128]
  41b96c:	str	xzr, [x19, #8]!
  41b970:	stp	xzr, xzr, [x19, #8]
  41b974:	ldr	q0, [x14]
  41b978:	mov	x8, #0xffffffffffffffff    	// #-1
  41b97c:	str	x8, [x19, #56]
  41b980:	stp	xzr, xzr, [x19, #24]
  41b984:	stur	q0, [x19, #40]
  41b988:	ldr	w9, [x19, #48]
  41b98c:	and	w8, w9, #0xfff3ffff
  41b990:	str	w8, [x19, #48]
  41b994:	mov	w8, #0x9                   	// #9
  41b998:	b	41d168 <_obstack_memory_used@@Base+0x7710>
  41b99c:	mov	w0, #0x20                  	// #32
  41b9a0:	mov	w1, #0x1                   	// #1
  41b9a4:	stur	xzr, [x29, #-16]
  41b9a8:	bl	402840 <calloc@plt>
  41b9ac:	mov	x25, x0
  41b9b0:	mov	w0, #0x50                  	// #80
  41b9b4:	mov	w1, #0x1                   	// #1
  41b9b8:	bl	402840 <calloc@plt>
  41b9bc:	mov	x24, x0
  41b9c0:	cbz	x25, 41d40c <_obstack_memory_used@@Base+0x79b4>
  41b9c4:	cbz	x24, 41d40c <_obstack_memory_used@@Base+0x79b4>
  41b9c8:	ldr	x21, [sp, #56]
  41b9cc:	ldp	x19, x20, [sp, #32]
  41b9d0:	mov	x0, x21
  41b9d4:	mov	x1, x19
  41b9d8:	mov	x2, x20
  41b9dc:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41b9e0:	ldr	w8, [x21, #8]
  41b9e4:	mov	x2, x21
  41b9e8:	mov	w3, w0
  41b9ec:	and	w9, w8, #0xff
  41b9f0:	cmp	w9, #0x19
  41b9f4:	b.eq	41be08 <_obstack_memory_used@@Base+0x63b0>  // b.none
  41b9f8:	cmp	w9, #0x2
  41b9fc:	b.eq	41d404 <_obstack_memory_used@@Base+0x79ac>  // b.none
  41ba00:	str	wzr, [sp, #48]
  41ba04:	b	41be60 <_obstack_memory_used@@Base+0x6408>
  41ba08:	ldr	w8, [x23, #128]
  41ba0c:	cmp	w8, #0xf
  41ba10:	b.eq	41d420 <_obstack_memory_used@@Base+0x79c8>  // b.none
  41ba14:	ldr	x0, [x23, #112]
  41ba18:	ldr	x10, [sp, #32]
  41ba1c:	add	w9, w8, #0x1
  41ba20:	sxtw	x8, w8
  41ba24:	add	x19, x0, x8, lsl #6
  41ba28:	str	w9, [x23, #128]
  41ba2c:	str	xzr, [x19, #8]!
  41ba30:	stp	xzr, xzr, [x19, #8]
  41ba34:	ldr	q0, [x14]
  41ba38:	mov	x9, #0xffffffffffffffff    	// #-1
  41ba3c:	stp	xzr, xzr, [x19, #24]
  41ba40:	str	x9, [x19, #56]
  41ba44:	stur	q0, [x19, #40]
  41ba48:	ldr	w8, [x19, #48]
  41ba4c:	and	w8, w8, #0xfff3ffff
  41ba50:	str	w8, [x19, #48]
  41ba54:	ldr	w8, [x23, #180]
  41ba58:	cmp	w8, #0x2
  41ba5c:	b.lt	41bd74 <_obstack_memory_used@@Base+0x631c>  // b.tstop
  41ba60:	ldr	x9, [x10, #104]
  41ba64:	ldr	x8, [x10, #72]
  41ba68:	cmp	x9, x8
  41ba6c:	b.le	41bd74 <_obstack_memory_used@@Base+0x631c>
  41ba70:	mov	w20, #0x10                  	// #16
  41ba74:	mov	x21, #0xffffffffffffffff    	// #-1
  41ba78:	ldr	x22, [sp, #32]
  41ba7c:	ldr	x9, [x22, #48]
  41ba80:	cmp	x8, x9
  41ba84:	b.eq	41bd74 <_obstack_memory_used@@Base+0x631c>  // b.none
  41ba88:	ldr	x9, [x22, #16]
  41ba8c:	ldr	w8, [x9, x8, lsl #2]
  41ba90:	cmn	w8, #0x1
  41ba94:	b.ne	41bd74 <_obstack_memory_used@@Base+0x631c>  // b.any
  41ba98:	ldr	x2, [sp, #40]
  41ba9c:	mov	x0, x14
  41baa0:	mov	x1, x22
  41baa4:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41baa8:	ldr	x8, [x22, #72]
  41baac:	add	x8, x8, w0, sxtw
  41bab0:	str	x8, [x22, #72]
  41bab4:	ldr	w8, [x23, #128]
  41bab8:	cmp	w8, #0xf
  41babc:	b.eq	41bb5c <_obstack_memory_used@@Base+0x6104>  // b.none
  41bac0:	ldr	x0, [x23, #112]
  41bac4:	add	w9, w8, #0x1
  41bac8:	sxtw	x8, w8
  41bacc:	add	x22, x0, x8, lsl #6
  41bad0:	str	w9, [x23, #128]
  41bad4:	str	xzr, [x22, #8]!
  41bad8:	stp	xzr, xzr, [x22, #8]
  41badc:	ldr	x14, [sp, #56]
  41bae0:	ldr	q0, [x14]
  41bae4:	stp	xzr, xzr, [x22, #24]
  41bae8:	str	x21, [x22, #56]
  41baec:	stur	q0, [x22, #40]
  41baf0:	ldr	w8, [x22, #48]
  41baf4:	and	w8, w8, #0xfff3ffff
  41baf8:	str	w8, [x22, #48]
  41bafc:	ldr	w8, [x23, #128]
  41bb00:	cmp	w8, #0xf
  41bb04:	b.eq	41bb80 <_obstack_memory_used@@Base+0x6128>  // b.none
  41bb08:	ldr	x0, [x23, #112]
  41bb0c:	add	w9, w8, #0x1
  41bb10:	sxtw	x8, w8
  41bb14:	add	x24, x0, x8, lsl #6
  41bb18:	str	w9, [x23, #128]
  41bb1c:	str	xzr, [x24, #8]!
  41bb20:	stp	x19, x22, [x24, #8]
  41bb24:	stp	xzr, xzr, [x24, #32]
  41bb28:	str	w20, [x24, #48]
  41bb2c:	str	xzr, [x24, #24]
  41bb30:	str	x21, [x24, #56]
  41bb34:	str	x24, [x19]
  41bb38:	cbz	x22, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41bb3c:	ldr	x8, [sp, #32]
  41bb40:	str	x24, [x22]
  41bb44:	mov	x19, x24
  41bb48:	ldr	x9, [x8, #104]
  41bb4c:	ldr	x8, [x8, #72]
  41bb50:	cmp	x9, x8
  41bb54:	b.gt	41ba78 <_obstack_memory_used@@Base+0x6020>
  41bb58:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41bb5c:	mov	w0, #0x3c8                 	// #968
  41bb60:	bl	402730 <malloc@plt>
  41bb64:	cbz	x0, 41bba8 <_obstack_memory_used@@Base+0x6150>
  41bb68:	ldr	x9, [x23, #112]
  41bb6c:	mov	w8, wzr
  41bb70:	str	x9, [x0]
  41bb74:	str	x0, [x23, #112]
  41bb78:	str	wzr, [x23, #128]
  41bb7c:	b	41bac4 <_obstack_memory_used@@Base+0x606c>
  41bb80:	mov	w0, #0x3c8                 	// #968
  41bb84:	bl	402730 <malloc@plt>
  41bb88:	ldr	x14, [sp, #56]
  41bb8c:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41bb90:	ldr	x9, [x23, #112]
  41bb94:	mov	w8, wzr
  41bb98:	str	x9, [x0]
  41bb9c:	str	x0, [x23, #112]
  41bba0:	str	wzr, [x23, #128]
  41bba4:	b	41bb0c <_obstack_memory_used@@Base+0x60b4>
  41bba8:	ldr	x14, [sp, #56]
  41bbac:	mov	x22, xzr
  41bbb0:	b	41bafc <_obstack_memory_used@@Base+0x60a4>
  41bbb4:	ldr	w8, [x14]
  41bbb8:	ldr	x10, [x23, #168]
  41bbbc:	mov	w9, #0x1                   	// #1
  41bbc0:	lsl	w8, w9, w8
  41bbc4:	sxtw	x9, w8
  41bbc8:	tst	x10, x9
  41bbcc:	b.eq	41d44c <_obstack_memory_used@@Base+0x79f4>  // b.none
  41bbd0:	ldr	x10, [x23, #160]
  41bbd4:	ldr	w8, [x23, #128]
  41bbd8:	orr	x9, x10, x9
  41bbdc:	cmp	w8, #0xf
  41bbe0:	str	x9, [x23, #160]
  41bbe4:	b.eq	41d47c <_obstack_memory_used@@Base+0x7a24>  // b.none
  41bbe8:	ldr	x0, [x23, #112]
  41bbec:	add	w9, w8, #0x1
  41bbf0:	sxtw	x8, w8
  41bbf4:	add	x24, x0, x8, lsl #6
  41bbf8:	str	w9, [x23, #128]
  41bbfc:	str	xzr, [x24, #8]!
  41bc00:	stp	xzr, xzr, [x24, #8]
  41bc04:	ldr	q0, [x14]
  41bc08:	mov	x8, #0xffffffffffffffff    	// #-1
  41bc0c:	str	x8, [x24, #56]
  41bc10:	stp	xzr, xzr, [x24, #24]
  41bc14:	stur	q0, [x24, #40]
  41bc18:	ldr	w9, [x24, #48]
  41bc1c:	and	w8, w9, #0xfff3ffff
  41bc20:	str	w8, [x24, #48]
  41bc24:	ldr	x8, [x23, #152]
  41bc28:	ldrb	w9, [x23, #176]
  41bc2c:	add	x8, x8, #0x1
  41bc30:	orr	w9, w9, #0x2
  41bc34:	str	x8, [x23, #152]
  41bc38:	strb	w9, [x23, #176]
  41bc3c:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41bc40:	ldr	w8, [x23, #128]
  41bc44:	cmp	w8, #0xf
  41bc48:	b.eq	41d454 <_obstack_memory_used@@Base+0x79fc>  // b.none
  41bc4c:	ldr	x0, [x23, #112]
  41bc50:	add	w9, w8, #0x1
  41bc54:	sxtw	x8, w8
  41bc58:	add	x10, x0, x8, lsl #6
  41bc5c:	str	w9, [x23, #128]
  41bc60:	str	xzr, [x10, #8]!
  41bc64:	stp	xzr, xzr, [x10, #8]
  41bc68:	ldr	q0, [x14]
  41bc6c:	mov	x9, #0xffffffffffffffff    	// #-1
  41bc70:	stp	xzr, xzr, [x10, #24]
  41bc74:	str	x9, [x10, #56]
  41bc78:	stur	q0, [x10, #40]
  41bc7c:	ldr	w8, [x10, #48]
  41bc80:	mov	x24, x10
  41bc84:	and	w8, w8, #0xfff3ffff
  41bc88:	str	w8, [x10, #48]
  41bc8c:	ldr	w8, [x23, #180]
  41bc90:	cmp	w8, #0x2
  41bc94:	b.lt	41c464 <_obstack_memory_used@@Base+0x6a0c>  // b.tstop
  41bc98:	ldrb	w8, [x23, #176]
  41bc9c:	orr	w8, w8, #0x2
  41bca0:	strb	w8, [x23, #176]
  41bca4:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41bca8:	ldr	x19, [x26, #48]
  41bcac:	mov	x0, x14
  41bcb0:	add	x8, x19, #0x1
  41bcb4:	str	x8, [x26, #48]
  41bcb8:	ldp	x20, x21, [sp, #32]
  41bcbc:	orr	x2, x21, #0x800000
  41bcc0:	mov	x1, x20
  41bcc4:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41bcc8:	ldr	x8, [x20, #72]
  41bccc:	ldr	x14, [sp, #56]
  41bcd0:	add	x8, x8, w0, sxtw
  41bcd4:	str	x8, [x20, #72]
  41bcd8:	ldrb	w8, [x14, #8]
  41bcdc:	cmp	w8, #0x9
  41bce0:	b.ne	41bdd8 <_obstack_memory_used@@Base+0x6380>  // b.any
  41bce4:	mov	x25, xzr
  41bce8:	cmp	x19, #0x8
  41bcec:	b.hi	41bd08 <_obstack_memory_used@@Base+0x62b0>  // b.pmore
  41bcf0:	ldr	x8, [x23, #168]
  41bcf4:	mov	w9, #0x1                   	// #1
  41bcf8:	lsl	w9, w9, w19
  41bcfc:	sxtw	x9, w9
  41bd00:	orr	x8, x8, x9
  41bd04:	str	x8, [x23, #168]
  41bd08:	ldr	w8, [x23, #128]
  41bd0c:	cmp	w8, #0xf
  41bd10:	b.eq	41d570 <_obstack_memory_used@@Base+0x7b18>  // b.none
  41bd14:	ldr	x0, [x23, #112]
  41bd18:	add	w9, w8, #0x1
  41bd1c:	sxtw	x8, w8
  41bd20:	add	x8, x0, x8, lsl #6
  41bd24:	mov	x24, x8
  41bd28:	mov	w10, #0x11                  	// #17
  41bd2c:	mov	x11, #0xffffffffffffffff    	// #-1
  41bd30:	str	w9, [x23, #128]
  41bd34:	str	xzr, [x24, #8]!
  41bd38:	stp	x25, xzr, [x24, #8]
  41bd3c:	stp	xzr, xzr, [x24, #32]
  41bd40:	str	w10, [x24, #48]
  41bd44:	str	xzr, [x24, #24]
  41bd48:	str	x11, [x24, #56]
  41bd4c:	cbz	x25, 41bd54 <_obstack_memory_used@@Base+0x62fc>
  41bd50:	str	x24, [x25]
  41bd54:	str	x19, [x8, #48]
  41bd58:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41bd5c:	ldr	x10, [sp, #40]
  41bd60:	tbz	w10, #24, 41b808 <_obstack_memory_used@@Base+0x5db0>
  41bd64:	mov	w8, #0xd                   	// #13
  41bd68:	b	41d674 <_obstack_memory_used@@Base+0x7c1c>
  41bd6c:	mov	w8, #0x5                   	// #5
  41bd70:	b	41d674 <_obstack_memory_used@@Base+0x7c1c>
  41bd74:	mov	x24, x19
  41bd78:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41bd7c:	ldp	x19, x20, [sp, #32]
  41bd80:	mov	x0, x14
  41bd84:	mov	x21, x14
  41bd88:	mov	x1, x19
  41bd8c:	mov	x2, x20
  41bd90:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41bd94:	ldr	x8, [x19, #72]
  41bd98:	mov	x1, x26
  41bd9c:	mov	x2, x21
  41bda0:	mov	x3, x20
  41bda4:	add	x8, x8, w0, sxtw
  41bda8:	str	x8, [x19, #72]
  41bdac:	mov	x0, x19
  41bdb0:	mov	x4, x25
  41bdb4:	mov	x5, x28
  41bdb8:	ldp	x20, x19, [sp, #272]
  41bdbc:	ldp	x22, x21, [sp, #256]
  41bdc0:	ldp	x24, x23, [sp, #240]
  41bdc4:	ldp	x26, x25, [sp, #224]
  41bdc8:	ldp	x28, x27, [sp, #208]
  41bdcc:	ldp	x29, x30, [sp, #192]
  41bdd0:	add	sp, sp, #0x120
  41bdd4:	b	41b7a4 <_obstack_memory_used@@Base+0x5d4c>
  41bdd8:	add	x4, x25, #0x1
  41bddc:	mov	x0, x20
  41bde0:	mov	x1, x26
  41bde4:	mov	x2, x14
  41bde8:	mov	x3, x21
  41bdec:	mov	x5, x28
  41bdf0:	mov	x20, x14
  41bdf4:	bl	41ace4 <_obstack_memory_used@@Base+0x528c>
  41bdf8:	ldr	w8, [x28]
  41bdfc:	cbz	w8, 41d278 <_obstack_memory_used@@Base+0x7820>
  41be00:	mov	x24, xzr
  41be04:	b	41d67c <_obstack_memory_used@@Base+0x7c24>
  41be08:	ldrb	w8, [x24, #32]
  41be0c:	orr	w8, w8, #0x1
  41be10:	strb	w8, [x24, #32]
  41be14:	tbz	w20, #8, 41be24 <_obstack_memory_used@@Base+0x63cc>
  41be18:	ldr	x8, [x25]
  41be1c:	orr	x8, x8, #0x400
  41be20:	str	x8, [x25]
  41be24:	ldr	x8, [x19, #72]
  41be28:	mov	x0, x2
  41be2c:	mov	x1, x19
  41be30:	mov	x2, x20
  41be34:	add	x8, x8, w3, sxtw
  41be38:	str	x8, [x19, #72]
  41be3c:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41be40:	ldr	x2, [sp, #56]
  41be44:	ldr	w8, [x2, #8]
  41be48:	and	w9, w8, #0xff
  41be4c:	cmp	w9, #0x2
  41be50:	b.eq	41d404 <_obstack_memory_used@@Base+0x79ac>  // b.none
  41be54:	mov	w3, w0
  41be58:	mov	w9, #0x1                   	// #1
  41be5c:	str	w9, [sp, #48]
  41be60:	and	w9, w8, #0xff
  41be64:	cmp	w9, #0x15
  41be68:	b.ne	41be78 <_obstack_memory_used@@Base+0x6420>  // b.any
  41be6c:	and	w8, w8, #0xffffff00
  41be70:	orr	w8, w8, #0x1
  41be74:	str	w8, [x2, #8]
  41be78:	ldr	x4, [sp, #40]
  41be7c:	sub	x8, x29, #0x50
  41be80:	mov	w27, #0x3                   	// #3
  41be84:	sub	x0, x29, #0x20
  41be88:	mov	w5, #0x1                   	// #1
  41be8c:	mov	x1, x19
  41be90:	stur	x8, [x29, #-24]
  41be94:	stur	w27, [x29, #-32]
  41be98:	mov	w21, #0x1                   	// #1
  41be9c:	bl	41dcdc <_obstack_memory_used@@Base+0x8284>
  41bea0:	cbnz	w0, 41d3d4 <_obstack_memory_used@@Base+0x797c>
  41bea4:	ldr	x20, [sp, #40]
  41bea8:	ldr	x22, [sp, #56]
  41beac:	stp	xzr, xzr, [sp, #8]
  41beb0:	mov	x0, x22
  41beb4:	mov	x1, x19
  41beb8:	mov	x2, x20
  41bebc:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41bec0:	ldur	w22, [x29, #-32]
  41bec4:	mov	w26, w0
  41bec8:	cmp	w22, #0x2
  41becc:	b.eq	41c058 <_obstack_memory_used@@Base+0x6600>  // b.none
  41bed0:	cmp	w22, #0x4
  41bed4:	b.ne	41bf04 <_obstack_memory_used@@Base+0x64ac>  // b.any
  41bed8:	ldr	x0, [x19, #120]
  41bedc:	ldur	x4, [x29, #-24]
  41bee0:	ldr	x5, [sp, #40]
  41bee4:	sub	x3, x29, #0x10
  41bee8:	mov	x1, x25
  41beec:	mov	x2, x24
  41bef0:	bl	41df80 <_obstack_memory_used@@Base+0x8528>
  41bef4:	ldr	x14, [sp, #56]
  41bef8:	str	w0, [x28]
  41befc:	cbz	w0, 41c094 <_obstack_memory_used@@Base+0x663c>
  41bf00:	b	41d52c <_obstack_memory_used@@Base+0x7ad4>
  41bf04:	ldr	x8, [sp, #56]
  41bf08:	ldrb	w8, [x8, #8]
  41bf0c:	cmp	w8, #0x16
  41bf10:	b.eq	41bf38 <_obstack_memory_used@@Base+0x64e0>  // b.none
  41bf14:	cmp	w8, #0x2
  41bf18:	b.eq	41d3c8 <_obstack_memory_used@@Base+0x7970>  // b.none
  41bf1c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41bf20:	mov	w8, w22
  41bf24:	add	x11, x11, #0xbac
  41bf28:	adr	x9, 41c058 <_obstack_memory_used@@Base+0x6600>
  41bf2c:	ldrb	w10, [x11, x8]
  41bf30:	add	x9, x9, x10, lsl #2
  41bf34:	br	x9
  41bf38:	ldr	x8, [x19, #72]
  41bf3c:	ldr	x2, [sp, #40]
  41bf40:	add	x0, sp, #0x40
  41bf44:	mov	x1, x19
  41bf48:	add	x8, x8, w26, sxtw
  41bf4c:	str	x8, [x19, #72]
  41bf50:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41bf54:	ldrb	w8, [sp, #72]
  41bf58:	cmp	w8, #0x15
  41bf5c:	b.eq	41c024 <_obstack_memory_used@@Base+0x65cc>  // b.none
  41bf60:	cmp	w8, #0x2
  41bf64:	str	x28, [sp, #24]
  41bf68:	b.eq	41d3cc <_obstack_memory_used@@Base+0x7974>  // b.none
  41bf6c:	ldr	x20, [sp, #40]
  41bf70:	mov	w3, w0
  41bf74:	add	x8, sp, #0x50
  41bf78:	sub	x0, x29, #0x30
  41bf7c:	add	x2, sp, #0x40
  41bf80:	mov	w5, #0x1                   	// #1
  41bf84:	mov	x1, x19
  41bf88:	mov	x4, x20
  41bf8c:	stur	x8, [x29, #-40]
  41bf90:	stur	w27, [x29, #-48]
  41bf94:	bl	41dcdc <_obstack_memory_used@@Base+0x8284>
  41bf98:	cbnz	w0, 41d524 <_obstack_memory_used@@Base+0x7acc>
  41bf9c:	ldr	x0, [sp, #56]
  41bfa0:	mov	x1, x19
  41bfa4:	mov	x2, x20
  41bfa8:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41bfac:	ldr	w8, [x23, #180]
  41bfb0:	ldur	w19, [x29, #-48]
  41bfb4:	mov	w26, w0
  41bfb8:	mov	w0, #0xb                   	// #11
  41bfbc:	cmp	w8, #0x1
  41bfc0:	csel	x20, x24, xzr, gt
  41bfc4:	cmp	w19, #0x2
  41bfc8:	b.eq	41d524 <_obstack_memory_used@@Base+0x7acc>  // b.none
  41bfcc:	ldr	x14, [sp, #56]
  41bfd0:	cmp	w19, #0x4
  41bfd4:	b.eq	41d524 <_obstack_memory_used@@Base+0x7acc>  // b.none
  41bfd8:	cmp	w22, #0x3
  41bfdc:	b.ne	41bff4 <_obstack_memory_used@@Base+0x659c>  // b.any
  41bfe0:	ldur	x0, [x29, #-24]
  41bfe4:	bl	4025c0 <strlen@plt>
  41bfe8:	ldr	x14, [sp, #56]
  41bfec:	cmp	x0, #0x1
  41bff0:	b.hi	41d520 <_obstack_memory_used@@Base+0x7ac8>  // b.pmore
  41bff4:	cmp	w19, #0x3
  41bff8:	b.ne	41c010 <_obstack_memory_used@@Base+0x65b8>  // b.any
  41bffc:	ldur	x0, [x29, #-40]
  41c000:	bl	4025c0 <strlen@plt>
  41c004:	ldr	x14, [sp, #56]
  41c008:	cmp	x0, #0x1
  41c00c:	b.hi	41d520 <_obstack_memory_used@@Base+0x7ac8>  // b.pmore
  41c010:	cmp	w22, #0x3
  41c014:	b.eq	41c130 <_obstack_memory_used@@Base+0x66d8>  // b.none
  41c018:	cbnz	w22, 41c13c <_obstack_memory_used@@Base+0x66e4>
  41c01c:	ldurb	w27, [x29, #-24]
  41c020:	b	41c140 <_obstack_memory_used@@Base+0x66e8>
  41c024:	ldr	x8, [x19, #72]
  41c028:	neg	w9, w26
  41c02c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41c030:	mov	w10, w22
  41c034:	add	x8, x8, w9, sxtw
  41c038:	str	x8, [x19, #72]
  41c03c:	ldr	x8, [sp, #56]
  41c040:	add	x11, x11, #0xbac
  41c044:	strb	w21, [x8, #8]
  41c048:	adr	x8, 41c058 <_obstack_memory_used@@Base+0x6600>
  41c04c:	ldrb	w9, [x11, x10]
  41c050:	add	x8, x8, x9, lsl #2
  41c054:	br	x8
  41c058:	ldur	x27, [x29, #-24]
  41c05c:	mov	x0, x27
  41c060:	bl	4025c0 <strlen@plt>
  41c064:	cmp	x0, #0x1
  41c068:	b.ne	41d51c <_obstack_memory_used@@Base+0x7ac4>  // b.any
  41c06c:	ldrb	w8, [x27]
  41c070:	mov	w27, #0x3                   	// #3
  41c074:	lsr	x9, x8, #3
  41c078:	and	x9, x9, #0x18
  41c07c:	ldr	x10, [x25, x9]
  41c080:	lsl	x8, x21, x8
  41c084:	orr	x8, x8, x10
  41c088:	str	x8, [x25, x9]
  41c08c:	ldr	x14, [sp, #56]
  41c090:	str	wzr, [x28]
  41c094:	ldrb	w8, [x14, #8]
  41c098:	cmp	w8, #0x15
  41c09c:	b.eq	41c2e4 <_obstack_memory_used@@Base+0x688c>  // b.none
  41c0a0:	cmp	w8, #0x2
  41c0a4:	b.eq	41d3c8 <_obstack_memory_used@@Base+0x7970>  // b.none
  41c0a8:	ldr	x20, [sp, #40]
  41c0ac:	sub	x8, x29, #0x50
  41c0b0:	sub	x0, x29, #0x20
  41c0b4:	mov	x1, x19
  41c0b8:	mov	x2, x14
  41c0bc:	mov	w3, w26
  41c0c0:	mov	x4, x20
  41c0c4:	mov	w5, wzr
  41c0c8:	stur	x8, [x29, #-24]
  41c0cc:	stur	w27, [x29, #-32]
  41c0d0:	mov	x22, x14
  41c0d4:	bl	41dcdc <_obstack_memory_used@@Base+0x8284>
  41c0d8:	cbz	w0, 41beb0 <_obstack_memory_used@@Base+0x6458>
  41c0dc:	b	41d3d4 <_obstack_memory_used@@Base+0x797c>
  41c0e0:	ldurb	w8, [x29, #-24]
  41c0e4:	ldr	x14, [sp, #56]
  41c0e8:	lsr	x9, x8, #3
  41c0ec:	and	x9, x9, #0x18
  41c0f0:	ldr	x10, [x25, x9]
  41c0f4:	lsl	x8, x21, x8
  41c0f8:	orr	x8, x8, x10
  41c0fc:	str	x8, [x25, x9]
  41c100:	b	41c094 <_obstack_memory_used@@Base+0x663c>
  41c104:	ldr	x8, [x24, #40]
  41c108:	ldr	x9, [sp, #16]
  41c10c:	cmp	x9, x8
  41c110:	b.eq	41c254 <_obstack_memory_used@@Base+0x67fc>  // b.none
  41c114:	ldr	x0, [x24]
  41c118:	ldr	x14, [sp, #56]
  41c11c:	ldur	w9, [x29, #-24]
  41c120:	add	x10, x8, #0x1
  41c124:	str	x10, [x24, #40]
  41c128:	str	w9, [x0, x8, lsl #2]
  41c12c:	b	41c094 <_obstack_memory_used@@Base+0x663c>
  41c130:	ldur	x8, [x29, #-24]
  41c134:	ldrb	w27, [x8]
  41c138:	b	41c140 <_obstack_memory_used@@Base+0x66e8>
  41c13c:	mov	w27, wzr
  41c140:	cmp	w19, #0x3
  41c144:	b.eq	41c154 <_obstack_memory_used@@Base+0x66fc>  // b.none
  41c148:	cbnz	w19, 41c160 <_obstack_memory_used@@Base+0x6708>
  41c14c:	ldurb	w28, [x29, #-40]
  41c150:	b	41c164 <_obstack_memory_used@@Base+0x670c>
  41c154:	ldur	x8, [x29, #-40]
  41c158:	ldrb	w28, [x8]
  41c15c:	b	41c164 <_obstack_memory_used@@Base+0x670c>
  41c160:	mov	w28, wzr
  41c164:	cmp	w22, #0x3
  41c168:	b.eq	41c170 <_obstack_memory_used@@Base+0x6718>  // b.none
  41c16c:	cbnz	w22, 41c188 <_obstack_memory_used@@Base+0x6730>
  41c170:	cbz	x20, 41c18c <_obstack_memory_used@@Base+0x6734>
  41c174:	mov	w0, w27
  41c178:	bl	402910 <btowc@plt>
  41c17c:	ldr	x14, [sp, #56]
  41c180:	mov	w27, w0
  41c184:	b	41c18c <_obstack_memory_used@@Base+0x6734>
  41c188:	ldur	w27, [x29, #-24]
  41c18c:	cmp	w19, #0x3
  41c190:	b.eq	41c198 <_obstack_memory_used@@Base+0x6740>  // b.none
  41c194:	cbnz	w19, 41c1b0 <_obstack_memory_used@@Base+0x6758>
  41c198:	cbz	x20, 41c1b4 <_obstack_memory_used@@Base+0x675c>
  41c19c:	mov	w0, w28
  41c1a0:	bl	402910 <btowc@plt>
  41c1a4:	ldr	x14, [sp, #56]
  41c1a8:	mov	w28, w0
  41c1ac:	b	41c1b4 <_obstack_memory_used@@Base+0x675c>
  41c1b0:	ldur	w28, [x29, #-40]
  41c1b4:	cmn	w27, #0x1
  41c1b8:	mov	w0, #0x3                   	// #3
  41c1bc:	b.eq	41d524 <_obstack_memory_used@@Base+0x7acc>  // b.none
  41c1c0:	cmn	w28, #0x1
  41c1c4:	b.eq	41d524 <_obstack_memory_used@@Base+0x7acc>  // b.none
  41c1c8:	ldr	x8, [sp, #40]
  41c1cc:	tbz	w8, #16, 41c1d8 <_obstack_memory_used@@Base+0x6780>
  41c1d0:	cmp	w27, w28
  41c1d4:	b.hi	41d7cc <_obstack_memory_used@@Base+0x7d74>  // b.pmore
  41c1d8:	cbz	x20, 41c204 <_obstack_memory_used@@Base+0x67ac>
  41c1dc:	ldr	x8, [x20, #64]
  41c1e0:	ldr	x9, [sp, #8]
  41c1e4:	cmp	x9, x8
  41c1e8:	b.eq	41c28c <_obstack_memory_used@@Base+0x6834>  // b.none
  41c1ec:	ldp	x22, x10, [x20, #8]
  41c1f0:	lsl	x9, x8, #2
  41c1f4:	add	x8, x8, #0x1
  41c1f8:	str	w27, [x22, x9]
  41c1fc:	str	x8, [x20, #64]
  41c200:	str	w28, [x10, x9]
  41c204:	mov	w9, w28
  41c208:	ldp	x28, x19, [sp, #24]
  41c20c:	mov	x8, xzr
  41c210:	mov	w10, w27
  41c214:	mov	w27, #0x3                   	// #3
  41c218:	b	41c228 <_obstack_memory_used@@Base+0x67d0>
  41c21c:	add	x8, x8, #0x1
  41c220:	cmp	x8, #0x100
  41c224:	b.eq	41c090 <_obstack_memory_used@@Base+0x6638>  // b.none
  41c228:	cmp	x8, x10
  41c22c:	b.cc	41c21c <_obstack_memory_used@@Base+0x67c4>  // b.lo, b.ul, b.last
  41c230:	cmp	x8, x9
  41c234:	b.hi	41c21c <_obstack_memory_used@@Base+0x67c4>  // b.pmore
  41c238:	lsr	x11, x8, #3
  41c23c:	and	x11, x11, #0x1ffffffffffffff8
  41c240:	ldr	x12, [x25, x11]
  41c244:	lsl	x13, x21, x8
  41c248:	orr	x12, x12, x13
  41c24c:	str	x12, [x25, x11]
  41c250:	b	41c21c <_obstack_memory_used@@Base+0x67c4>
  41c254:	ldr	x8, [sp, #16]
  41c258:	ldr	x0, [x24]
  41c25c:	mov	w19, #0x1                   	// #1
  41c260:	bfi	x19, x8, #1, #63
  41c264:	lsl	x1, x19, #2
  41c268:	bl	402870 <realloc@plt>
  41c26c:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x7dc0>
  41c270:	ldr	x8, [x24, #40]
  41c274:	str	x19, [sp, #16]
  41c278:	ldr	x19, [sp, #32]
  41c27c:	ldr	x14, [sp, #56]
  41c280:	mov	w27, #0x3                   	// #3
  41c284:	str	x0, [x24]
  41c288:	b	41c11c <_obstack_memory_used@@Base+0x66c4>
  41c28c:	ldr	x8, [sp, #8]
  41c290:	ldr	x0, [x20, #8]
  41c294:	mov	w19, #0x1                   	// #1
  41c298:	bfi	x19, x8, #1, #63
  41c29c:	lsl	x1, x19, #2
  41c2a0:	str	x1, [sp, #8]
  41c2a4:	bl	402870 <realloc@plt>
  41c2a8:	ldr	x8, [x20, #16]
  41c2ac:	ldr	x1, [sp, #8]
  41c2b0:	mov	x22, x0
  41c2b4:	mov	x0, x8
  41c2b8:	bl	402870 <realloc@plt>
  41c2bc:	str	x0, [sp]
  41c2c0:	cbz	x22, 41d824 <_obstack_memory_used@@Base+0x7dcc>
  41c2c4:	ldr	x8, [sp]
  41c2c8:	cbz	x8, 41d824 <_obstack_memory_used@@Base+0x7dcc>
  41c2cc:	ldr	x10, [sp]
  41c2d0:	ldr	x8, [x20, #64]
  41c2d4:	stp	x22, x10, [x20, #8]
  41c2d8:	ldr	x14, [sp, #56]
  41c2dc:	str	x19, [sp, #8]
  41c2e0:	b	41c1f0 <_obstack_memory_used@@Base+0x6798>
  41c2e4:	ldr	x8, [x19, #72]
  41c2e8:	add	x8, x8, w26, sxtw
  41c2ec:	str	x8, [x19, #72]
  41c2f0:	ldr	w8, [sp, #48]
  41c2f4:	cbz	w8, 41c308 <_obstack_memory_used@@Base+0x68b0>
  41c2f8:	ldp	q0, q1, [x25]
  41c2fc:	mvn	v0.16b, v0.16b
  41c300:	mvn	v1.16b, v1.16b
  41c304:	stp	q0, q1, [x25]
  41c308:	ldr	w8, [x23, #180]
  41c30c:	cmp	w8, #0x2
  41c310:	b.lt	41c350 <_obstack_memory_used@@Base+0x68f8>  // b.tstop
  41c314:	ldr	x9, [x23, #120]
  41c318:	ldp	x11, x12, [x25]
  41c31c:	ldr	x10, [x9]
  41c320:	and	x10, x11, x10
  41c324:	str	x10, [x25]
  41c328:	ldr	x10, [x9, #8]
  41c32c:	and	x10, x12, x10
  41c330:	str	x10, [x25, #8]
  41c334:	ldr	x10, [x9, #16]
  41c338:	ldp	x11, x12, [x25, #16]
  41c33c:	and	x10, x11, x10
  41c340:	str	x10, [x25, #16]
  41c344:	ldr	x9, [x9, #24]
  41c348:	and	x9, x12, x9
  41c34c:	str	x9, [x25, #24]
  41c350:	ldr	x9, [x24, #40]
  41c354:	cbnz	x9, 41c370 <_obstack_memory_used@@Base+0x6918>
  41c358:	ldr	x9, [x24, #48]
  41c35c:	cbnz	x9, 41c370 <_obstack_memory_used@@Base+0x6918>
  41c360:	ldr	x9, [x24, #56]
  41c364:	cbnz	x9, 41c370 <_obstack_memory_used@@Base+0x6918>
  41c368:	ldr	x9, [x24, #64]
  41c36c:	cbz	x9, 41d32c <_obstack_memory_used@@Base+0x78d4>
  41c370:	ldrb	w9, [x23, #176]
  41c374:	ldr	w8, [x23, #128]
  41c378:	orr	w9, w9, #0x2
  41c37c:	cmp	w8, #0xf
  41c380:	strb	w9, [x23, #176]
  41c384:	b.eq	41d4a4 <_obstack_memory_used@@Base+0x7a4c>  // b.none
  41c388:	ldr	x0, [x23, #112]
  41c38c:	add	w9, w8, #0x1
  41c390:	sxtw	x8, w8
  41c394:	add	x19, x0, x8, lsl #6
  41c398:	mov	w10, #0x6                   	// #6
  41c39c:	mov	x11, #0xffffffffffffffff    	// #-1
  41c3a0:	str	w9, [x23, #128]
  41c3a4:	str	xzr, [x19, #8]!
  41c3a8:	stp	xzr, xzr, [x19, #16]
  41c3ac:	str	xzr, [x19, #8]
  41c3b0:	str	w10, [x19, #48]
  41c3b4:	stp	xzr, x24, [x19, #32]
  41c3b8:	str	x11, [x19, #56]
  41c3bc:	ldr	x8, [x25]
  41c3c0:	cbnz	x8, 41c3dc <_obstack_memory_used@@Base+0x6984>
  41c3c4:	ldr	x8, [x25, #8]
  41c3c8:	cbnz	x8, 41c3dc <_obstack_memory_used@@Base+0x6984>
  41c3cc:	ldr	x8, [x25, #16]
  41c3d0:	cbnz	x8, 41c3dc <_obstack_memory_used@@Base+0x6984>
  41c3d4:	ldr	x8, [x25, #24]
  41c3d8:	cbz	x8, 41d3b4 <_obstack_memory_used@@Base+0x795c>
  41c3dc:	ldr	w8, [x23, #128]
  41c3e0:	cmp	w8, #0xf
  41c3e4:	b.eq	41d4cc <_obstack_memory_used@@Base+0x7a74>  // b.none
  41c3e8:	ldr	x0, [x23, #112]
  41c3ec:	add	w9, w8, #0x1
  41c3f0:	sxtw	x8, w8
  41c3f4:	add	x20, x0, x8, lsl #6
  41c3f8:	str	w9, [x23, #128]
  41c3fc:	mov	w9, #0x3                   	// #3
  41c400:	mov	x8, #0xffffffffffffffff    	// #-1
  41c404:	str	xzr, [x20, #8]!
  41c408:	stp	xzr, xzr, [x20, #16]
  41c40c:	str	xzr, [x20, #8]
  41c410:	str	w9, [x20, #48]
  41c414:	stp	xzr, x25, [x20, #32]
  41c418:	str	x8, [x20, #56]
  41c41c:	ldr	w8, [x23, #128]
  41c420:	cmp	w8, #0xf
  41c424:	b.eq	41d4f4 <_obstack_memory_used@@Base+0x7a9c>  // b.none
  41c428:	ldr	x0, [x23, #112]
  41c42c:	add	w9, w8, #0x1
  41c430:	sxtw	x8, w8
  41c434:	add	x24, x0, x8, lsl #6
  41c438:	str	w9, [x23, #128]
  41c43c:	mov	w9, #0xa                   	// #10
  41c440:	mov	x8, #0xffffffffffffffff    	// #-1
  41c444:	str	xzr, [x24, #8]!
  41c448:	stp	x20, x19, [x24, #8]
  41c44c:	stp	xzr, xzr, [x24, #32]
  41c450:	str	w9, [x24, #48]
  41c454:	str	xzr, [x24, #24]
  41c458:	str	x8, [x24, #56]
  41c45c:	str	x24, [x20]
  41c460:	str	x24, [x19]
  41c464:	ldp	x20, x21, [sp, #32]
  41c468:	mov	x0, x14
  41c46c:	str	x28, [sp, #24]
  41c470:	mov	x1, x20
  41c474:	mov	x2, x21
  41c478:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41c47c:	ldr	x8, [x20, #72]
  41c480:	ldr	x12, [sp, #56]
  41c484:	add	x25, x23, #0x80
  41c488:	add	x26, x23, #0x70
  41c48c:	mov	w23, #0x1                   	// #1
  41c490:	mov	x28, #0xffffffffffffffff    	// #-1
  41c494:	add	x8, x8, w0, sxtw
  41c498:	str	x8, [x20, #72]
  41c49c:	ldrb	w8, [x12, #8]
  41c4a0:	str	x24, [sp, #48]
  41c4a4:	cmp	w8, #0x17
  41c4a8:	b.hi	41d07c <_obstack_memory_used@@Base+0x7624>  // b.pmore
  41c4ac:	mov	w10, #0x800                 	// #2048
  41c4b0:	lsl	w9, w23, w8
  41c4b4:	movk	w10, #0x8c, lsl #16
  41c4b8:	tst	w9, w10
  41c4bc:	b.eq	41d07c <_obstack_memory_used@@Base+0x7624>  // b.none
  41c4c0:	ldr	q0, [x12]
  41c4c4:	ldr	x19, [x20, #72]
  41c4c8:	mov	w24, #0xa                   	// #10
  41c4cc:	cmp	w8, #0x17
  41c4d0:	stur	q0, [x29, #-80]
  41c4d4:	b.ne	41c574 <_obstack_memory_used@@Base+0x6b1c>  // b.any
  41c4d8:	mov	x10, #0xffffffffffffffff    	// #-1
  41c4dc:	mov	x0, x12
  41c4e0:	mov	x1, x20
  41c4e4:	mov	x2, x21
  41c4e8:	mov	x22, x10
  41c4ec:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41c4f0:	ldr	x8, [x20, #72]
  41c4f4:	ldr	x12, [sp, #56]
  41c4f8:	add	x8, x8, w0, sxtw
  41c4fc:	str	x8, [x20, #72]
  41c500:	ldrb	w8, [x12, #8]
  41c504:	ldrb	w9, [x12]
  41c508:	cmp	w8, #0x18
  41c50c:	b.eq	41c58c <_obstack_memory_used@@Base+0x6b34>  // b.none
  41c510:	cmp	w8, #0x2
  41c514:	b.eq	41cbc8 <_obstack_memory_used@@Base+0x7170>  // b.none
  41c518:	cmp	w9, #0x2c
  41c51c:	b.eq	41c58c <_obstack_memory_used@@Base+0x6b34>  // b.none
  41c520:	cmp	w9, #0x30
  41c524:	mov	x10, #0xfffffffffffffffe    	// #-2
  41c528:	b.cc	41c4dc <_obstack_memory_used@@Base+0x6a84>  // b.lo, b.ul, b.last
  41c52c:	cmp	w8, #0x1
  41c530:	b.ne	41c4dc <_obstack_memory_used@@Base+0x6a84>  // b.any
  41c534:	cmn	x22, #0x2
  41c538:	mov	x10, #0xfffffffffffffffe    	// #-2
  41c53c:	b.eq	41c4dc <_obstack_memory_used@@Base+0x6a84>  // b.none
  41c540:	cmp	w9, #0x39
  41c544:	b.hi	41c4dc <_obstack_memory_used@@Base+0x6a84>  // b.pmore
  41c548:	cmn	x22, #0x1
  41c54c:	b.eq	41c56c <_obstack_memory_used@@Base+0x6b14>  // b.none
  41c550:	madd	x8, x22, x24, x9
  41c554:	mov	w10, #0x8030                	// #32816
  41c558:	sub	x9, x8, #0x30
  41c55c:	cmp	x8, x10
  41c560:	mov	w8, #0x8000                	// #32768
  41c564:	csel	x10, x8, x9, gt
  41c568:	b	41c4dc <_obstack_memory_used@@Base+0x6a84>
  41c56c:	sub	x10, x9, #0x30
  41c570:	b	41c4dc <_obstack_memory_used@@Base+0x6a84>
  41c574:	cmp	w8, #0x12
  41c578:	cset	w22, eq  // eq = none
  41c57c:	cmp	w8, #0x13
  41c580:	mov	w8, #0x1                   	// #1
  41c584:	cneg	x23, x8, ne  // ne = any
  41c588:	b	41c6c0 <_obstack_memory_used@@Base+0x6c68>
  41c58c:	cmn	x22, #0x1
  41c590:	b.ne	41c5ac <_obstack_memory_used@@Base+0x6b54>  // b.any
  41c594:	cmp	w9, #0x2c
  41c598:	b.ne	41c66c <_obstack_memory_used@@Base+0x6c14>  // b.any
  41c59c:	cmp	w8, #0x1
  41c5a0:	b.ne	41c66c <_obstack_memory_used@@Base+0x6c14>  // b.any
  41c5a4:	mov	x22, xzr
  41c5a8:	b	41c5cc <_obstack_memory_used@@Base+0x6b74>
  41c5ac:	cmn	x22, #0x2
  41c5b0:	b.eq	41cbc8 <_obstack_memory_used@@Base+0x7170>  // b.none
  41c5b4:	cmp	w8, #0x18
  41c5b8:	b.eq	41c680 <_obstack_memory_used@@Base+0x6c28>  // b.none
  41c5bc:	cmp	w8, #0x1
  41c5c0:	b.ne	41cbc8 <_obstack_memory_used@@Base+0x7170>  // b.any
  41c5c4:	cmp	w9, #0x2c
  41c5c8:	b.ne	41cbc8 <_obstack_memory_used@@Base+0x7170>  // b.any
  41c5cc:	mov	x10, #0xffffffffffffffff    	// #-1
  41c5d0:	mov	x0, x12
  41c5d4:	mov	x1, x20
  41c5d8:	mov	x2, x21
  41c5dc:	mov	x23, x10
  41c5e0:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41c5e4:	ldr	x8, [x20, #72]
  41c5e8:	ldr	x12, [sp, #56]
  41c5ec:	add	x8, x8, w0, sxtw
  41c5f0:	str	x8, [x20, #72]
  41c5f4:	ldrb	w8, [x12, #8]
  41c5f8:	cmp	w8, #0x18
  41c5fc:	b.eq	41c684 <_obstack_memory_used@@Base+0x6c2c>  // b.none
  41c600:	cmp	w8, #0x2
  41c604:	b.eq	41cbc4 <_obstack_memory_used@@Base+0x716c>  // b.none
  41c608:	ldrb	w9, [x12]
  41c60c:	mov	w11, #0xa                   	// #10
  41c610:	cmp	w9, #0x2c
  41c614:	b.eq	41c688 <_obstack_memory_used@@Base+0x6c30>  // b.none
  41c618:	cmp	w9, #0x30
  41c61c:	mov	x10, #0xfffffffffffffffe    	// #-2
  41c620:	b.cc	41c5d0 <_obstack_memory_used@@Base+0x6b78>  // b.lo, b.ul, b.last
  41c624:	cmp	w8, #0x1
  41c628:	b.ne	41c5d0 <_obstack_memory_used@@Base+0x6b78>  // b.any
  41c62c:	cmn	x23, #0x2
  41c630:	mov	x10, #0xfffffffffffffffe    	// #-2
  41c634:	b.eq	41c5d0 <_obstack_memory_used@@Base+0x6b78>  // b.none
  41c638:	cmp	w9, #0x39
  41c63c:	b.hi	41c5d0 <_obstack_memory_used@@Base+0x6b78>  // b.pmore
  41c640:	cmn	x23, #0x1
  41c644:	b.eq	41c664 <_obstack_memory_used@@Base+0x6c0c>  // b.none
  41c648:	madd	x8, x23, x11, x9
  41c64c:	mov	w10, #0x8030                	// #32816
  41c650:	sub	x9, x8, #0x30
  41c654:	cmp	x8, x10
  41c658:	mov	w8, #0x8000                	// #32768
  41c65c:	csel	x10, x8, x9, gt
  41c660:	b	41c5d0 <_obstack_memory_used@@Base+0x6b78>
  41c664:	sub	x10, x9, #0x30
  41c668:	b	41c5d0 <_obstack_memory_used@@Base+0x6b78>
  41c66c:	ldr	x8, [sp, #24]
  41c670:	mov	x14, xzr
  41c674:	mov	w9, #0xa                   	// #10
  41c678:	str	w9, [x8]
  41c67c:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41c680:	mov	x23, x22
  41c684:	mov	w11, #0xa                   	// #10
  41c688:	cmn	x23, #0x2
  41c68c:	b.eq	41cbc4 <_obstack_memory_used@@Base+0x716c>  // b.none
  41c690:	cmn	x23, #0x1
  41c694:	cset	w9, eq  // eq = none
  41c698:	cmp	x22, x23
  41c69c:	cset	w10, le
  41c6a0:	cmp	w8, #0x18
  41c6a4:	b.ne	41ce08 <_obstack_memory_used@@Base+0x73b0>  // b.any
  41c6a8:	orr	w8, w10, w9
  41c6ac:	tbz	w8, #0, 41ce08 <_obstack_memory_used@@Base+0x73b0>
  41c6b0:	cmn	x23, #0x1
  41c6b4:	csel	x8, x22, x23, eq  // eq = none
  41c6b8:	cmp	x8, #0x8, lsl #12
  41c6bc:	b.ge	41cf88 <_obstack_memory_used@@Base+0x7530>  // b.tcont
  41c6c0:	mov	x0, x12
  41c6c4:	mov	x1, x20
  41c6c8:	mov	x2, x21
  41c6cc:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41c6d0:	ldr	x8, [x20, #72]
  41c6d4:	ldr	x19, [sp, #48]
  41c6d8:	add	x8, x8, w0, sxtw
  41c6dc:	str	x8, [x20, #72]
  41c6e0:	cbz	x19, 41cab4 <_obstack_memory_used@@Base+0x705c>
  41c6e4:	ldr	x12, [sp, #56]
  41c6e8:	orr	x8, x23, x22
  41c6ec:	mov	w13, #0xa                   	// #10
  41c6f0:	cbz	x8, 41cac0 <_obstack_memory_used@@Base+0x7068>
  41c6f4:	cmp	x22, #0x1
  41c6f8:	b.ge	41cb64 <_obstack_memory_used@@Base+0x710c>  // b.tcont
  41c6fc:	mov	x14, xzr
  41c700:	mov	x21, x19
  41c704:	ldrb	w8, [x21, #48]
  41c708:	cmp	w8, #0x11
  41c70c:	b.ne	41c774 <_obstack_memory_used@@Base+0x6d1c>  // b.any
  41c710:	ldr	x8, [x21, #40]
  41c714:	mov	x10, x21
  41c718:	mov	x9, x10
  41c71c:	ldr	x10, [x10, #8]
  41c720:	cbnz	x10, 41c718 <_obstack_memory_used@@Base+0x6cc0>
  41c724:	ldr	x10, [x9, #16]
  41c728:	cbnz	x10, 41c718 <_obstack_memory_used@@Base+0x6cc0>
  41c72c:	ldr	w10, [x9, #48]
  41c730:	and	w11, w10, #0xff
  41c734:	cmp	w11, #0x11
  41c738:	b.ne	41c750 <_obstack_memory_used@@Base+0x6cf8>  // b.any
  41c73c:	ldr	x11, [x9, #40]
  41c740:	cmp	x11, x8
  41c744:	b.ne	41c750 <_obstack_memory_used@@Base+0x6cf8>  // b.any
  41c748:	orr	w10, w10, #0x80000
  41c74c:	str	w10, [x9, #48]
  41c750:	ldr	x11, [x9]
  41c754:	cbz	x11, 41c774 <_obstack_memory_used@@Base+0x6d1c>
  41c758:	ldr	x10, [x11, #16]
  41c75c:	cmp	x10, x9
  41c760:	mov	x9, x11
  41c764:	b.eq	41c72c <_obstack_memory_used@@Base+0x6cd4>  // b.none
  41c768:	mov	x9, x11
  41c76c:	cbz	x10, 41c72c <_obstack_memory_used@@Base+0x6cd4>
  41c770:	b	41c718 <_obstack_memory_used@@Base+0x6cc0>
  41c774:	ldr	w8, [x25]
  41c778:	cmn	x23, #0x1
  41c77c:	cinc	w19, w13, eq  // eq = none
  41c780:	cmp	w8, #0xf
  41c784:	b.eq	41cb8c <_obstack_memory_used@@Base+0x7134>  // b.none
  41c788:	ldr	x0, [x26]
  41c78c:	mov	w11, #0x10                  	// #16
  41c790:	add	w9, w8, #0x1
  41c794:	sxtw	x8, w8
  41c798:	add	x22, x22, #0x2
  41c79c:	add	x27, x0, x8, lsl #6
  41c7a0:	str	w9, [x25]
  41c7a4:	cmp	x22, x23
  41c7a8:	str	xzr, [x27, #8]!
  41c7ac:	stp	x21, xzr, [x27, #8]
  41c7b0:	stp	xzr, xzr, [x27, #32]
  41c7b4:	str	w19, [x27, #48]
  41c7b8:	str	xzr, [x27, #24]
  41c7bc:	str	x28, [x27, #56]
  41c7c0:	str	x27, [x21]
  41c7c4:	b.gt	41ca54 <_obstack_memory_used@@Base+0x6ffc>
  41c7c8:	mov	x20, x27
  41c7cc:	ldr	w8, [x25]
  41c7d0:	cmp	w8, #0xf
  41c7d4:	b.eq	41c994 <_obstack_memory_used@@Base+0x6f3c>  // b.none
  41c7d8:	ldr	x0, [x26]
  41c7dc:	add	w10, w8, #0x1
  41c7e0:	sxtw	x8, w8
  41c7e4:	add	x19, x0, x8, lsl #6
  41c7e8:	str	w10, [x25]
  41c7ec:	str	xzr, [x19, #8]!
  41c7f0:	add	x9, x21, #0x28
  41c7f4:	stp	xzr, xzr, [x19, #8]
  41c7f8:	ldr	q0, [x9]
  41c7fc:	add	x24, sp, #0x50
  41c800:	stp	xzr, xzr, [x19, #24]
  41c804:	str	x28, [x19, #56]
  41c808:	stur	q0, [x19, #40]
  41c80c:	ldr	w8, [x19, #48]
  41c810:	and	w8, w8, #0xfff3ffff
  41c814:	str	w8, [x19, #48]
  41c818:	mov	x8, x19
  41c81c:	str	x19, [sp, #80]
  41c820:	str	x27, [x8]
  41c824:	ldr	x8, [x24]
  41c828:	ldr	w9, [x8, #48]
  41c82c:	orr	w9, w9, #0x40000
  41c830:	str	w9, [x8, #48]
  41c834:	ldr	x8, [x21, #8]
  41c838:	ldr	x27, [x24]
  41c83c:	cbz	x8, 41c858 <_obstack_memory_used@@Base+0x6e00>
  41c840:	add	x24, x27, #0x8
  41c844:	mov	x21, x8
  41c848:	b	41c874 <_obstack_memory_used@@Base+0x6e1c>
  41c84c:	ldr	x21, [x8]
  41c850:	ldr	x27, [x27]
  41c854:	cbz	x21, 41c8fc <_obstack_memory_used@@Base+0x6ea4>
  41c858:	mov	x9, x8
  41c85c:	mov	x8, x21
  41c860:	ldr	x21, [x21, #16]
  41c864:	cmp	x21, x9
  41c868:	b.eq	41c84c <_obstack_memory_used@@Base+0x6df4>  // b.none
  41c86c:	cbz	x21, 41c84c <_obstack_memory_used@@Base+0x6df4>
  41c870:	add	x24, x27, #0x10
  41c874:	ldr	w8, [x25]
  41c878:	cmp	w8, #0xf
  41c87c:	b.eq	41c8c4 <_obstack_memory_used@@Base+0x6e6c>  // b.none
  41c880:	ldr	x0, [x26]
  41c884:	add	w10, w8, #0x1
  41c888:	sxtw	x8, w8
  41c88c:	add	x8, x0, x8, lsl #6
  41c890:	str	w10, [x25]
  41c894:	str	xzr, [x8, #8]!
  41c898:	add	x9, x21, #0x28
  41c89c:	stp	xzr, xzr, [x8, #8]
  41c8a0:	ldr	q0, [x9]
  41c8a4:	stp	xzr, xzr, [x8, #24]
  41c8a8:	str	x28, [x8, #56]
  41c8ac:	stur	q0, [x8, #40]
  41c8b0:	ldr	w9, [x8, #48]
  41c8b4:	and	w9, w9, #0xfff3ffff
  41c8b8:	str	w9, [x8, #48]
  41c8bc:	str	x8, [x24]
  41c8c0:	b	41c820 <_obstack_memory_used@@Base+0x6dc8>
  41c8c4:	mov	w0, #0x3c8                 	// #968
  41c8c8:	str	x14, [sp, #16]
  41c8cc:	bl	402730 <malloc@plt>
  41c8d0:	cbz	x0, 41ca14 <_obstack_memory_used@@Base+0x6fbc>
  41c8d4:	ldr	x9, [x26]
  41c8d8:	ldr	x12, [sp, #56]
  41c8dc:	ldr	x14, [sp, #16]
  41c8e0:	mov	w8, wzr
  41c8e4:	mov	w13, #0xa                   	// #10
  41c8e8:	mov	w11, #0x10                  	// #16
  41c8ec:	str	x9, [x0]
  41c8f0:	str	x0, [x26]
  41c8f4:	str	wzr, [x25]
  41c8f8:	b	41c884 <_obstack_memory_used@@Base+0x6e2c>
  41c8fc:	ldr	w8, [x25]
  41c900:	cmp	w8, #0xf
  41c904:	b.eq	41c9cc <_obstack_memory_used@@Base+0x6f74>  // b.none
  41c908:	ldr	x0, [x26]
  41c90c:	add	w9, w8, #0x1
  41c910:	sxtw	x8, w8
  41c914:	add	x21, x0, x8, lsl #6
  41c918:	str	w9, [x25]
  41c91c:	str	xzr, [x21, #8]!
  41c920:	stp	x20, x19, [x21, #8]
  41c924:	stp	xzr, xzr, [x21, #32]
  41c928:	str	w11, [x21, #48]
  41c92c:	str	xzr, [x21, #24]
  41c930:	str	x28, [x21, #56]
  41c934:	str	x21, [x20]
  41c938:	cbz	x19, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41c93c:	str	x21, [x19]
  41c940:	ldr	w8, [x25]
  41c944:	cmp	w8, #0xf
  41c948:	b.eq	41c9d4 <_obstack_memory_used@@Base+0x6f7c>  // b.none
  41c94c:	ldr	x0, [x26]
  41c950:	add	w9, w8, #0x1
  41c954:	sxtw	x8, w8
  41c958:	add	x20, x0, x8, lsl #6
  41c95c:	cmp	x22, x23
  41c960:	str	w9, [x25]
  41c964:	str	xzr, [x20, #8]!
  41c968:	stp	x21, xzr, [x20, #8]
  41c96c:	stp	xzr, xzr, [x20, #32]
  41c970:	str	w13, [x20, #48]
  41c974:	str	xzr, [x20, #24]
  41c978:	str	x28, [x20, #56]
  41c97c:	str	x20, [x21]
  41c980:	b.ge	41ca50 <_obstack_memory_used@@Base+0x6ff8>  // b.tcont
  41c984:	ldr	x27, [x19]
  41c988:	add	x22, x22, #0x1
  41c98c:	mov	x21, x19
  41c990:	b	41c7cc <_obstack_memory_used@@Base+0x6d74>
  41c994:	mov	w0, #0x3c8                 	// #968
  41c998:	str	x14, [sp, #16]
  41c99c:	bl	402730 <malloc@plt>
  41c9a0:	cbz	x0, 41ca0c <_obstack_memory_used@@Base+0x6fb4>
  41c9a4:	ldr	x9, [x26]
  41c9a8:	ldr	x12, [sp, #56]
  41c9ac:	ldr	x14, [sp, #16]
  41c9b0:	mov	w8, wzr
  41c9b4:	mov	w13, #0xa                   	// #10
  41c9b8:	mov	w11, #0x10                  	// #16
  41c9bc:	str	x9, [x0]
  41c9c0:	str	x0, [x26]
  41c9c4:	str	wzr, [x25]
  41c9c8:	b	41c7dc <_obstack_memory_used@@Base+0x6d84>
  41c9cc:	str	x14, [sp, #16]
  41c9d0:	b	41ca1c <_obstack_memory_used@@Base+0x6fc4>
  41c9d4:	mov	w0, #0x3c8                 	// #968
  41c9d8:	mov	x20, x14
  41c9dc:	bl	402730 <malloc@plt>
  41c9e0:	ldr	x12, [sp, #56]
  41c9e4:	mov	w11, #0x10                  	// #16
  41c9e8:	mov	w13, #0xa                   	// #10
  41c9ec:	cbz	x0, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41c9f0:	ldr	x9, [x26]
  41c9f4:	mov	x14, x20
  41c9f8:	mov	w8, wzr
  41c9fc:	str	x9, [x0]
  41ca00:	str	x0, [x26]
  41ca04:	str	wzr, [x25]
  41ca08:	b	41c950 <_obstack_memory_used@@Base+0x6ef8>
  41ca0c:	str	xzr, [sp, #80]
  41ca10:	b	41ca18 <_obstack_memory_used@@Base+0x6fc0>
  41ca14:	str	xzr, [x24]
  41ca18:	mov	x19, xzr
  41ca1c:	mov	w0, #0x3c8                 	// #968
  41ca20:	bl	402730 <malloc@plt>
  41ca24:	ldr	x12, [sp, #56]
  41ca28:	ldr	x14, [sp, #16]
  41ca2c:	mov	w13, #0xa                   	// #10
  41ca30:	mov	w11, #0x10                  	// #16
  41ca34:	cbz	x0, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41ca38:	ldr	x9, [x26]
  41ca3c:	mov	w8, wzr
  41ca40:	str	x9, [x0]
  41ca44:	str	x0, [x26]
  41ca48:	str	wzr, [x25]
  41ca4c:	b	41c90c <_obstack_memory_used@@Base+0x6eb4>
  41ca50:	mov	x27, x20
  41ca54:	ldp	x20, x21, [sp, #32]
  41ca58:	mov	w23, #0x1                   	// #1
  41ca5c:	cbz	x14, 41caa8 <_obstack_memory_used@@Base+0x7050>
  41ca60:	ldr	w8, [x25]
  41ca64:	cmp	w8, #0xf
  41ca68:	b.eq	41ce1c <_obstack_memory_used@@Base+0x73c4>  // b.none
  41ca6c:	ldr	x0, [x26]
  41ca70:	add	w9, w8, #0x1
  41ca74:	sxtw	x8, w8
  41ca78:	add	x8, x0, x8, lsl #6
  41ca7c:	str	w9, [x25]
  41ca80:	str	xzr, [x8, #8]!
  41ca84:	stp	x14, x27, [x8, #8]
  41ca88:	stp	xzr, xzr, [x8, #32]
  41ca8c:	str	w11, [x8, #48]
  41ca90:	str	xzr, [x8, #24]
  41ca94:	str	x28, [x8, #56]
  41ca98:	str	x8, [x14]
  41ca9c:	mov	x14, x8
  41caa0:	str	x8, [x27]
  41caa4:	b	41caac <_obstack_memory_used@@Base+0x7054>
  41caa8:	mov	x14, x27
  41caac:	mov	w8, wzr
  41cab0:	b	41d044 <_obstack_memory_used@@Base+0x75ec>
  41cab4:	ldr	x12, [sp, #56]
  41cab8:	mov	x14, xzr
  41cabc:	b	41d028 <_obstack_memory_used@@Base+0x75d0>
  41cac0:	mov	x8, x19
  41cac4:	mov	w23, #0x1                   	// #1
  41cac8:	mov	x19, x8
  41cacc:	ldr	x8, [x8, #8]
  41cad0:	cbnz	x8, 41cac8 <_obstack_memory_used@@Base+0x7070>
  41cad4:	ldr	x8, [x19, #16]
  41cad8:	cbnz	x8, 41cac8 <_obstack_memory_used@@Base+0x7070>
  41cadc:	ldr	w8, [x19, #48]
  41cae0:	mov	w9, #0xff                  	// #255
  41cae4:	movk	w9, #0x4, lsl #16
  41cae8:	and	w8, w8, w9
  41caec:	cmp	w8, #0x3
  41caf0:	b.eq	41cb24 <_obstack_memory_used@@Base+0x70cc>  // b.none
  41caf4:	cmp	w8, #0x6
  41caf8:	b.ne	41cb38 <_obstack_memory_used@@Base+0x70e0>  // b.any
  41cafc:	ldr	x23, [x19, #40]
  41cb00:	ldr	x0, [x23]
  41cb04:	bl	402a10 <free@plt>
  41cb08:	ldr	x0, [x23, #8]
  41cb0c:	bl	402a10 <free@plt>
  41cb10:	ldr	x0, [x23, #16]
  41cb14:	bl	402a10 <free@plt>
  41cb18:	ldr	x0, [x23, #24]
  41cb1c:	bl	402a10 <free@plt>
  41cb20:	b	41cb28 <_obstack_memory_used@@Base+0x70d0>
  41cb24:	ldr	x23, [x19, #40]
  41cb28:	mov	x0, x23
  41cb2c:	bl	402a10 <free@plt>
  41cb30:	ldr	x12, [sp, #56]
  41cb34:	mov	w23, #0x1                   	// #1
  41cb38:	ldr	x9, [x19]
  41cb3c:	cbz	x9, 41cb5c <_obstack_memory_used@@Base+0x7104>
  41cb40:	ldr	x8, [x9, #16]
  41cb44:	cmp	x8, x19
  41cb48:	mov	x19, x9
  41cb4c:	b.eq	41cadc <_obstack_memory_used@@Base+0x7084>  // b.none
  41cb50:	mov	x19, x9
  41cb54:	cbz	x8, 41cadc <_obstack_memory_used@@Base+0x7084>
  41cb58:	b	41cac8 <_obstack_memory_used@@Base+0x7070>
  41cb5c:	mov	x14, xzr
  41cb60:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41cb64:	mov	x14, x19
  41cb68:	mov	x15, x19
  41cb6c:	mov	w11, #0x10                  	// #16
  41cb70:	b.ne	41cbe4 <_obstack_memory_used@@Base+0x718c>  // b.any
  41cb74:	ldr	x21, [sp, #40]
  41cb78:	cmp	x22, x23
  41cb7c:	b.ne	41ce50 <_obstack_memory_used@@Base+0x73f8>  // b.any
  41cb80:	ldr	x20, [sp, #32]
  41cb84:	mov	w23, #0x1                   	// #1
  41cb88:	b	41caac <_obstack_memory_used@@Base+0x7054>
  41cb8c:	mov	w0, #0x3c8                 	// #968
  41cb90:	mov	x20, x14
  41cb94:	bl	402730 <malloc@plt>
  41cb98:	ldr	x12, [sp, #56]
  41cb9c:	mov	w13, #0xa                   	// #10
  41cba0:	mov	w11, #0x10                  	// #16
  41cba4:	cbz	x0, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41cba8:	ldr	x9, [x26]
  41cbac:	mov	x14, x20
  41cbb0:	mov	w8, wzr
  41cbb4:	str	x9, [x0]
  41cbb8:	str	x0, [x26]
  41cbbc:	str	wzr, [x25]
  41cbc0:	b	41c790 <_obstack_memory_used@@Base+0x6d38>
  41cbc4:	mov	w23, #0x1                   	// #1
  41cbc8:	tbz	w21, #21, 41cfac <_obstack_memory_used@@Base+0x7554>
  41cbcc:	str	x19, [x20, #72]
  41cbd0:	ldur	q0, [x29, #-80]
  41cbd4:	ldr	x14, [sp, #48]
  41cbd8:	str	q0, [x12]
  41cbdc:	strb	w23, [x12, #8]
  41cbe0:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41cbe4:	ldr	x14, [x19]
  41cbe8:	mov	x15, x19
  41cbec:	mov	w21, #0x2                   	// #2
  41cbf0:	ldr	w8, [x25]
  41cbf4:	cmp	w8, #0xf
  41cbf8:	b.eq	41cd84 <_obstack_memory_used@@Base+0x732c>  // b.none
  41cbfc:	ldr	x0, [x26]
  41cc00:	add	w10, w8, #0x1
  41cc04:	sxtw	x8, w8
  41cc08:	add	x20, x0, x8, lsl #6
  41cc0c:	str	w10, [x25]
  41cc10:	str	xzr, [x20, #8]!
  41cc14:	add	x9, x15, #0x28
  41cc18:	stp	xzr, xzr, [x20, #8]
  41cc1c:	ldr	q0, [x9]
  41cc20:	add	x27, sp, #0x50
  41cc24:	stp	xzr, xzr, [x20, #24]
  41cc28:	str	x28, [x20, #56]
  41cc2c:	stur	q0, [x20, #40]
  41cc30:	ldr	w8, [x20, #48]
  41cc34:	and	w8, w8, #0xfff3ffff
  41cc38:	str	w8, [x20, #48]
  41cc3c:	mov	x8, x20
  41cc40:	str	x20, [sp, #80]
  41cc44:	str	x14, [x8]
  41cc48:	ldr	x8, [x27]
  41cc4c:	ldr	w9, [x8, #48]
  41cc50:	orr	w9, w9, #0x40000
  41cc54:	str	w9, [x8, #48]
  41cc58:	ldr	x8, [x15, #8]
  41cc5c:	ldr	x14, [x27]
  41cc60:	cbz	x8, 41cc7c <_obstack_memory_used@@Base+0x7224>
  41cc64:	add	x27, x14, #0x8
  41cc68:	mov	x15, x8
  41cc6c:	b	41cc98 <_obstack_memory_used@@Base+0x7240>
  41cc70:	ldr	x15, [x8]
  41cc74:	ldr	x14, [x14]
  41cc78:	cbz	x15, 41cd28 <_obstack_memory_used@@Base+0x72d0>
  41cc7c:	mov	x9, x8
  41cc80:	mov	x8, x15
  41cc84:	ldr	x15, [x15, #16]
  41cc88:	cmp	x15, x9
  41cc8c:	b.eq	41cc70 <_obstack_memory_used@@Base+0x7218>  // b.none
  41cc90:	cbz	x15, 41cc70 <_obstack_memory_used@@Base+0x7218>
  41cc94:	add	x27, x14, #0x10
  41cc98:	ldr	w8, [x25]
  41cc9c:	cmp	w8, #0xf
  41cca0:	b.eq	41cce8 <_obstack_memory_used@@Base+0x7290>  // b.none
  41cca4:	ldr	x0, [x26]
  41cca8:	add	w10, w8, #0x1
  41ccac:	sxtw	x8, w8
  41ccb0:	add	x8, x0, x8, lsl #6
  41ccb4:	str	w10, [x25]
  41ccb8:	str	xzr, [x8, #8]!
  41ccbc:	add	x9, x15, #0x28
  41ccc0:	stp	xzr, xzr, [x8, #8]
  41ccc4:	ldr	q0, [x9]
  41ccc8:	stp	xzr, xzr, [x8, #24]
  41cccc:	str	x28, [x8, #56]
  41ccd0:	stur	q0, [x8, #40]
  41ccd4:	ldr	w9, [x8, #48]
  41ccd8:	and	w9, w9, #0xfff3ffff
  41ccdc:	str	w9, [x8, #48]
  41cce0:	str	x8, [x27]
  41cce4:	b	41cc44 <_obstack_memory_used@@Base+0x71ec>
  41cce8:	mov	w0, #0x3c8                 	// #968
  41ccec:	str	x15, [sp, #16]
  41ccf0:	mov	x24, x14
  41ccf4:	bl	402730 <malloc@plt>
  41ccf8:	cbz	x0, 41cdcc <_obstack_memory_used@@Base+0x7374>
  41ccfc:	ldr	x9, [x26]
  41cd00:	ldr	x12, [sp, #56]
  41cd04:	ldr	x15, [sp, #16]
  41cd08:	mov	w8, wzr
  41cd0c:	mov	w13, #0xa                   	// #10
  41cd10:	mov	w11, #0x10                  	// #16
  41cd14:	mov	x14, x24
  41cd18:	str	x9, [x0]
  41cd1c:	str	x0, [x26]
  41cd20:	str	wzr, [x25]
  41cd24:	b	41cca8 <_obstack_memory_used@@Base+0x7250>
  41cd28:	ldr	w8, [x25]
  41cd2c:	cmp	w8, #0xf
  41cd30:	b.eq	41cdd4 <_obstack_memory_used@@Base+0x737c>  // b.none
  41cd34:	ldr	x0, [x26]
  41cd38:	mov	x15, x20
  41cd3c:	add	w9, w8, #0x1
  41cd40:	sxtw	x8, w8
  41cd44:	add	x14, x0, x8, lsl #6
  41cd48:	str	w9, [x25]
  41cd4c:	str	xzr, [x14, #8]!
  41cd50:	stp	x19, x15, [x14, #8]
  41cd54:	stp	xzr, xzr, [x14, #32]
  41cd58:	str	w11, [x14, #48]
  41cd5c:	str	xzr, [x14, #24]
  41cd60:	str	x28, [x14, #56]
  41cd64:	str	x14, [x19]
  41cd68:	cbz	x15, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41cd6c:	cmp	x21, x22
  41cd70:	add	x21, x21, #0x1
  41cd74:	mov	x19, x14
  41cd78:	str	x14, [x15]
  41cd7c:	b.ne	41cbf0 <_obstack_memory_used@@Base+0x7198>  // b.any
  41cd80:	b	41cb74 <_obstack_memory_used@@Base+0x711c>
  41cd84:	mov	w0, #0x3c8                 	// #968
  41cd88:	mov	x24, x15
  41cd8c:	mov	x20, x14
  41cd90:	bl	402730 <malloc@plt>
  41cd94:	cbz	x0, 41cdc4 <_obstack_memory_used@@Base+0x736c>
  41cd98:	ldr	x9, [x26]
  41cd9c:	ldr	x12, [sp, #56]
  41cda0:	mov	w8, wzr
  41cda4:	mov	w13, #0xa                   	// #10
  41cda8:	mov	w11, #0x10                  	// #16
  41cdac:	mov	x14, x20
  41cdb0:	mov	x15, x24
  41cdb4:	str	x9, [x0]
  41cdb8:	str	x0, [x26]
  41cdbc:	str	wzr, [x25]
  41cdc0:	b	41cc00 <_obstack_memory_used@@Base+0x71a8>
  41cdc4:	str	xzr, [sp, #80]
  41cdc8:	b	41cdd0 <_obstack_memory_used@@Base+0x7378>
  41cdcc:	str	xzr, [x27]
  41cdd0:	mov	x20, xzr
  41cdd4:	mov	w0, #0x3c8                 	// #968
  41cdd8:	bl	402730 <malloc@plt>
  41cddc:	ldr	x12, [sp, #56]
  41cde0:	mov	w13, #0xa                   	// #10
  41cde4:	mov	w11, #0x10                  	// #16
  41cde8:	cbz	x0, 41d014 <_obstack_memory_used@@Base+0x75bc>
  41cdec:	ldr	x9, [x26]
  41cdf0:	mov	x15, x20
  41cdf4:	mov	w8, wzr
  41cdf8:	str	x9, [x0]
  41cdfc:	str	x0, [x26]
  41ce00:	str	wzr, [x25]
  41ce04:	b	41cd3c <_obstack_memory_used@@Base+0x72e4>
  41ce08:	ldr	x8, [sp, #24]
  41ce0c:	mov	x14, xzr
  41ce10:	mov	w23, #0x1                   	// #1
  41ce14:	str	w11, [x8]
  41ce18:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41ce1c:	mov	w0, #0x3c8                 	// #968
  41ce20:	mov	x19, x14
  41ce24:	bl	402730 <malloc@plt>
  41ce28:	cbz	x0, 41cfa0 <_obstack_memory_used@@Base+0x7548>
  41ce2c:	ldr	x9, [x26]
  41ce30:	ldr	x12, [sp, #56]
  41ce34:	mov	w8, wzr
  41ce38:	mov	w11, #0x10                  	// #16
  41ce3c:	mov	x14, x19
  41ce40:	str	x9, [x0]
  41ce44:	str	x0, [x26]
  41ce48:	str	wzr, [x25]
  41ce4c:	b	41ca70 <_obstack_memory_used@@Base+0x7018>
  41ce50:	mov	x20, x15
  41ce54:	ldr	x19, [x20], #40
  41ce58:	ldr	w8, [x25]
  41ce5c:	cmp	w8, #0xf
  41ce60:	b.eq	41cfc8 <_obstack_memory_used@@Base+0x7570>  // b.none
  41ce64:	ldr	x0, [x26]
  41ce68:	add	w9, w8, #0x1
  41ce6c:	sxtw	x8, w8
  41ce70:	add	x21, x0, x8, lsl #6
  41ce74:	str	w9, [x25]
  41ce78:	str	xzr, [x21, #8]!
  41ce7c:	stp	xzr, xzr, [x21, #8]
  41ce80:	ldr	q0, [x20]
  41ce84:	add	x20, sp, #0x50
  41ce88:	stp	xzr, xzr, [x21, #24]
  41ce8c:	str	x28, [x21, #56]
  41ce90:	stur	q0, [x21, #40]
  41ce94:	ldr	w8, [x21, #48]
  41ce98:	and	w8, w8, #0xfff3ffff
  41ce9c:	str	w8, [x21, #48]
  41cea0:	mov	x8, x21
  41cea4:	str	x21, [sp, #80]
  41cea8:	str	x19, [x8]
  41ceac:	ldr	x8, [x20]
  41ceb0:	ldr	w9, [x8, #48]
  41ceb4:	orr	w9, w9, #0x40000
  41ceb8:	str	w9, [x8, #48]
  41cebc:	ldr	x8, [x15, #8]
  41cec0:	ldr	x19, [x20]
  41cec4:	cbz	x8, 41cee0 <_obstack_memory_used@@Base+0x7488>
  41cec8:	add	x20, x19, #0x8
  41cecc:	mov	x15, x8
  41ced0:	b	41cefc <_obstack_memory_used@@Base+0x74a4>
  41ced4:	ldr	x15, [x8]
  41ced8:	ldr	x19, [x19]
  41cedc:	cbz	x15, 41c704 <_obstack_memory_used@@Base+0x6cac>
  41cee0:	mov	x9, x8
  41cee4:	mov	x8, x15
  41cee8:	ldr	x15, [x15, #16]
  41ceec:	cmp	x15, x9
  41cef0:	b.eq	41ced4 <_obstack_memory_used@@Base+0x747c>  // b.none
  41cef4:	cbz	x15, 41ced4 <_obstack_memory_used@@Base+0x747c>
  41cef8:	add	x20, x19, #0x10
  41cefc:	ldr	w8, [x25]
  41cf00:	cmp	w8, #0xf
  41cf04:	b.eq	41cf4c <_obstack_memory_used@@Base+0x74f4>  // b.none
  41cf08:	ldr	x0, [x26]
  41cf0c:	add	w10, w8, #0x1
  41cf10:	sxtw	x8, w8
  41cf14:	add	x8, x0, x8, lsl #6
  41cf18:	str	w10, [x25]
  41cf1c:	str	xzr, [x8, #8]!
  41cf20:	add	x9, x15, #0x28
  41cf24:	stp	xzr, xzr, [x8, #8]
  41cf28:	ldr	q0, [x9]
  41cf2c:	stp	xzr, xzr, [x8, #24]
  41cf30:	str	x28, [x8, #56]
  41cf34:	stur	q0, [x8, #40]
  41cf38:	ldr	w9, [x8, #48]
  41cf3c:	and	w9, w9, #0xfff3ffff
  41cf40:	str	w9, [x8, #48]
  41cf44:	str	x8, [x20]
  41cf48:	b	41cea8 <_obstack_memory_used@@Base+0x7450>
  41cf4c:	mov	w0, #0x3c8                 	// #968
  41cf50:	mov	x27, x15
  41cf54:	mov	x24, x14
  41cf58:	bl	402730 <malloc@plt>
  41cf5c:	cbz	x0, 41d00c <_obstack_memory_used@@Base+0x75b4>
  41cf60:	ldr	x9, [x26]
  41cf64:	ldr	x12, [sp, #56]
  41cf68:	mov	w8, wzr
  41cf6c:	mov	w13, #0xa                   	// #10
  41cf70:	mov	x14, x24
  41cf74:	mov	x15, x27
  41cf78:	str	x9, [x0]
  41cf7c:	str	x0, [x26]
  41cf80:	str	wzr, [x25]
  41cf84:	b	41cf0c <_obstack_memory_used@@Base+0x74b4>
  41cf88:	ldr	x8, [sp, #24]
  41cf8c:	mov	w9, #0xf                   	// #15
  41cf90:	mov	x14, xzr
  41cf94:	mov	w23, #0x1                   	// #1
  41cf98:	str	w9, [x8]
  41cf9c:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41cfa0:	ldr	x12, [sp, #56]
  41cfa4:	mov	x14, xzr
  41cfa8:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41cfac:	ldr	x9, [sp, #24]
  41cfb0:	cmp	w8, #0x2
  41cfb4:	mov	w8, #0x9                   	// #9
  41cfb8:	cinc	w8, w8, ne  // ne = any
  41cfbc:	mov	x14, xzr
  41cfc0:	str	w8, [x9]
  41cfc4:	b	41d02c <_obstack_memory_used@@Base+0x75d4>
  41cfc8:	mov	w0, #0x3c8                 	// #968
  41cfcc:	mov	x24, x15
  41cfd0:	mov	x21, x14
  41cfd4:	bl	402730 <malloc@plt>
  41cfd8:	cbz	x0, 41d004 <_obstack_memory_used@@Base+0x75ac>
  41cfdc:	ldr	x9, [x26]
  41cfe0:	ldr	x12, [sp, #56]
  41cfe4:	mov	w8, wzr
  41cfe8:	mov	w13, #0xa                   	// #10
  41cfec:	mov	x14, x21
  41cff0:	mov	x15, x24
  41cff4:	str	x9, [x0]
  41cff8:	str	x0, [x26]
  41cffc:	str	wzr, [x25]
  41d000:	b	41ce68 <_obstack_memory_used@@Base+0x7410>
  41d004:	str	xzr, [sp, #80]
  41d008:	b	41d010 <_obstack_memory_used@@Base+0x75b8>
  41d00c:	str	xzr, [x20]
  41d010:	ldr	x12, [sp, #56]
  41d014:	ldp	x8, x20, [sp, #24]
  41d018:	ldr	x21, [sp, #40]
  41d01c:	mov	w9, #0xc                   	// #12
  41d020:	mov	x14, xzr
  41d024:	str	w9, [x8]
  41d028:	mov	w23, #0x1                   	// #1
  41d02c:	cmp	x14, #0x0
  41d030:	cset	w8, eq  // eq = none
  41d034:	cbnz	x14, 41d044 <_obstack_memory_used@@Base+0x75ec>
  41d038:	ldr	x9, [sp, #24]
  41d03c:	ldr	w9, [x9]
  41d040:	cbnz	w9, 41d298 <_obstack_memory_used@@Base+0x7840>
  41d044:	mov	x24, x14
  41d048:	tbz	w21, #24, 41c49c <_obstack_memory_used@@Base+0x6a44>
  41d04c:	ldrb	w9, [x12, #8]
  41d050:	cmp	w9, #0x17
  41d054:	b.eq	41d064 <_obstack_memory_used@@Base+0x760c>  // b.none
  41d058:	cmp	w9, #0xb
  41d05c:	mov	x24, x14
  41d060:	b.ne	41c49c <_obstack_memory_used@@Base+0x6a44>  // b.any
  41d064:	ldr	x22, [sp, #24]
  41d068:	tbz	w8, #0, 41d084 <_obstack_memory_used@@Base+0x762c>
  41d06c:	mov	x24, xzr
  41d070:	mov	w8, #0xd                   	// #13
  41d074:	str	w8, [x22]
  41d078:	b	41d67c <_obstack_memory_used@@Base+0x7c24>
  41d07c:	ldr	x24, [sp, #48]
  41d080:	b	41d67c <_obstack_memory_used@@Base+0x7c24>
  41d084:	mov	w19, #0xff                  	// #255
  41d088:	movk	w19, #0x4, lsl #16
  41d08c:	mov	x21, x14
  41d090:	ldr	x14, [x14, #8]
  41d094:	cbnz	x14, 41d08c <_obstack_memory_used@@Base+0x7634>
  41d098:	ldr	x14, [x21, #16]
  41d09c:	cbnz	x14, 41d08c <_obstack_memory_used@@Base+0x7634>
  41d0a0:	ldr	w8, [x21, #48]
  41d0a4:	and	w8, w8, w19
  41d0a8:	cmp	w8, #0x3
  41d0ac:	b.eq	41d0e0 <_obstack_memory_used@@Base+0x7688>  // b.none
  41d0b0:	cmp	w8, #0x6
  41d0b4:	b.ne	41d0ec <_obstack_memory_used@@Base+0x7694>  // b.any
  41d0b8:	ldr	x20, [x21, #40]
  41d0bc:	ldr	x0, [x20]
  41d0c0:	bl	402a10 <free@plt>
  41d0c4:	ldr	x0, [x20, #8]
  41d0c8:	bl	402a10 <free@plt>
  41d0cc:	ldr	x0, [x20, #16]
  41d0d0:	bl	402a10 <free@plt>
  41d0d4:	ldr	x0, [x20, #24]
  41d0d8:	bl	402a10 <free@plt>
  41d0dc:	b	41d0e4 <_obstack_memory_used@@Base+0x768c>
  41d0e0:	ldr	x20, [x21, #40]
  41d0e4:	mov	x0, x20
  41d0e8:	bl	402a10 <free@plt>
  41d0ec:	ldr	x8, [x21]
  41d0f0:	cbz	x8, 41d06c <_obstack_memory_used@@Base+0x7614>
  41d0f4:	ldr	x14, [x8, #16]
  41d0f8:	cmp	x14, x21
  41d0fc:	mov	x21, x8
  41d100:	b.eq	41d0a0 <_obstack_memory_used@@Base+0x7648>  // b.none
  41d104:	mov	x21, x8
  41d108:	cbz	x14, 41d0a0 <_obstack_memory_used@@Base+0x7648>
  41d10c:	b	41d08c <_obstack_memory_used@@Base+0x7634>
  41d110:	mov	w8, #0x5                   	// #5
  41d114:	str	w8, [x14]
  41d118:	ldr	w8, [x23, #128]
  41d11c:	ldr	x21, [sp, #40]
  41d120:	cmp	w8, #0xf
  41d124:	b.eq	41d618 <_obstack_memory_used@@Base+0x7bc0>  // b.none
  41d128:	ldr	x0, [x23, #112]
  41d12c:	add	w9, w8, #0x1
  41d130:	sxtw	x8, w8
  41d134:	add	x19, x0, x8, lsl #6
  41d138:	str	w9, [x23, #128]
  41d13c:	str	xzr, [x19, #8]!
  41d140:	stp	xzr, xzr, [x19, #8]
  41d144:	ldr	q0, [x14]
  41d148:	mov	x8, #0xffffffffffffffff    	// #-1
  41d14c:	str	x8, [x19, #56]
  41d150:	stp	xzr, xzr, [x19, #24]
  41d154:	stur	q0, [x19, #40]
  41d158:	ldr	w9, [x19, #48]
  41d15c:	and	w8, w9, #0xfff3ffff
  41d160:	str	w8, [x19, #48]
  41d164:	mov	w8, #0xa                   	// #10
  41d168:	str	w8, [x14]
  41d16c:	ldr	w8, [x23, #128]
  41d170:	cmp	w8, #0xf
  41d174:	b.eq	41d598 <_obstack_memory_used@@Base+0x7b40>  // b.none
  41d178:	ldr	x0, [x23, #112]
  41d17c:	add	w9, w8, #0x1
  41d180:	sxtw	x8, w8
  41d184:	add	x20, x0, x8, lsl #6
  41d188:	str	w9, [x23, #128]
  41d18c:	str	xzr, [x20, #8]!
  41d190:	stp	xzr, xzr, [x20, #8]
  41d194:	ldr	q0, [x14]
  41d198:	mov	x9, #0xffffffffffffffff    	// #-1
  41d19c:	stp	xzr, xzr, [x20, #24]
  41d1a0:	str	x9, [x20, #56]
  41d1a4:	stur	q0, [x20, #40]
  41d1a8:	ldr	w8, [x20, #48]
  41d1ac:	and	w8, w8, #0xfff3ffff
  41d1b0:	str	w8, [x20, #48]
  41d1b4:	ldr	w8, [x23, #128]
  41d1b8:	cmp	w8, #0xf
  41d1bc:	b.eq	41d5c4 <_obstack_memory_used@@Base+0x7b6c>  // b.none
  41d1c0:	ldr	x0, [x23, #112]
  41d1c4:	add	w9, w8, #0x1
  41d1c8:	sxtw	x8, w8
  41d1cc:	add	x24, x0, x8, lsl #6
  41d1d0:	mov	w10, #0xa                   	// #10
  41d1d4:	mov	x11, #0xffffffffffffffff    	// #-1
  41d1d8:	str	w9, [x23, #128]
  41d1dc:	str	xzr, [x24, #8]!
  41d1e0:	stp	x19, x20, [x24, #8]
  41d1e4:	stp	xzr, xzr, [x24, #32]
  41d1e8:	str	w10, [x24, #48]
  41d1ec:	str	xzr, [x24, #24]
  41d1f0:	str	x11, [x24, #56]
  41d1f4:	cbz	x19, 41d1fc <_obstack_memory_used@@Base+0x77a4>
  41d1f8:	str	x24, [x19]
  41d1fc:	cbz	x20, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d200:	str	x24, [x20]
  41d204:	cbnz	x19, 41d254 <_obstack_memory_used@@Base+0x77fc>
  41d208:	b	41d670 <_obstack_memory_used@@Base+0x7c18>
  41d20c:	ldr	w8, [x23, #128]
  41d210:	cmp	w8, #0xf
  41d214:	b.eq	41d644 <_obstack_memory_used@@Base+0x7bec>  // b.none
  41d218:	ldr	x0, [x23, #112]
  41d21c:	add	w9, w8, #0x1
  41d220:	sxtw	x8, w8
  41d224:	add	x24, x0, x8, lsl #6
  41d228:	str	w9, [x23, #128]
  41d22c:	str	xzr, [x24, #8]!
  41d230:	stp	xzr, xzr, [x24, #8]
  41d234:	ldr	q0, [x14]
  41d238:	mov	x9, #0xffffffffffffffff    	// #-1
  41d23c:	stp	xzr, xzr, [x24, #24]
  41d240:	str	x9, [x24, #56]
  41d244:	stur	q0, [x24, #40]
  41d248:	ldr	w8, [x24, #48]
  41d24c:	and	w8, w8, #0xfff3ffff
  41d250:	str	w8, [x24, #48]
  41d254:	ldr	x19, [sp, #32]
  41d258:	mov	x0, x14
  41d25c:	mov	x2, x21
  41d260:	mov	x1, x19
  41d264:	bl	41af30 <_obstack_memory_used@@Base+0x54d8>
  41d268:	ldr	x8, [x19, #72]
  41d26c:	add	x8, x8, w0, sxtw
  41d270:	str	x8, [x19, #72]
  41d274:	b	41d67c <_obstack_memory_used@@Base+0x7c24>
  41d278:	ldrb	w8, [x20, #8]
  41d27c:	mov	x25, x0
  41d280:	cmp	w8, #0x9
  41d284:	b.ne	41d734 <_obstack_memory_used@@Base+0x7cdc>  // b.any
  41d288:	mov	x14, x20
  41d28c:	cmp	x19, #0x8
  41d290:	b.ls	41bcf0 <_obstack_memory_used@@Base+0x6298>  // b.plast
  41d294:	b	41bd08 <_obstack_memory_used@@Base+0x62b0>
  41d298:	ldr	x9, [sp, #48]
  41d29c:	cbz	x9, 41be00 <_obstack_memory_used@@Base+0x63a8>
  41d2a0:	mov	w20, #0xff                  	// #255
  41d2a4:	movk	w20, #0x4, lsl #16
  41d2a8:	mov	x21, x9
  41d2ac:	ldr	x9, [x9, #8]
  41d2b0:	cbnz	x9, 41d2a8 <_obstack_memory_used@@Base+0x7850>
  41d2b4:	ldr	x9, [x21, #16]
  41d2b8:	cbnz	x9, 41d2a8 <_obstack_memory_used@@Base+0x7850>
  41d2bc:	ldr	w8, [x21, #48]
  41d2c0:	and	w8, w8, w20
  41d2c4:	cmp	w8, #0x3
  41d2c8:	b.eq	41d2fc <_obstack_memory_used@@Base+0x78a4>  // b.none
  41d2cc:	cmp	w8, #0x6
  41d2d0:	b.ne	41d308 <_obstack_memory_used@@Base+0x78b0>  // b.any
  41d2d4:	ldr	x19, [x21, #40]
  41d2d8:	ldr	x0, [x19]
  41d2dc:	bl	402a10 <free@plt>
  41d2e0:	ldr	x0, [x19, #8]
  41d2e4:	bl	402a10 <free@plt>
  41d2e8:	ldr	x0, [x19, #16]
  41d2ec:	bl	402a10 <free@plt>
  41d2f0:	ldr	x0, [x19, #24]
  41d2f4:	bl	402a10 <free@plt>
  41d2f8:	b	41d300 <_obstack_memory_used@@Base+0x78a8>
  41d2fc:	ldr	x19, [x21, #40]
  41d300:	mov	x0, x19
  41d304:	bl	402a10 <free@plt>
  41d308:	ldr	x8, [x21]
  41d30c:	cbz	x8, 41be00 <_obstack_memory_used@@Base+0x63a8>
  41d310:	ldr	x9, [x8, #16]
  41d314:	cmp	x9, x21
  41d318:	mov	x21, x8
  41d31c:	b.eq	41d2bc <_obstack_memory_used@@Base+0x7864>  // b.none
  41d320:	mov	x21, x8
  41d324:	cbz	x9, 41d2bc <_obstack_memory_used@@Base+0x7864>
  41d328:	b	41d2a8 <_obstack_memory_used@@Base+0x7850>
  41d32c:	cmp	w8, #0x2
  41d330:	b.lt	41d344 <_obstack_memory_used@@Base+0x78ec>  // b.tstop
  41d334:	ldr	x8, [x24, #72]
  41d338:	cbnz	x8, 41c370 <_obstack_memory_used@@Base+0x6918>
  41d33c:	ldrb	w8, [x24, #32]
  41d340:	tbnz	w8, #0, 41c370 <_obstack_memory_used@@Base+0x6918>
  41d344:	ldr	x0, [x24]
  41d348:	bl	402a10 <free@plt>
  41d34c:	ldr	x0, [x24, #8]
  41d350:	bl	402a10 <free@plt>
  41d354:	ldr	x0, [x24, #16]
  41d358:	bl	402a10 <free@plt>
  41d35c:	ldr	x0, [x24, #24]
  41d360:	bl	402a10 <free@plt>
  41d364:	mov	x0, x24
  41d368:	bl	402a10 <free@plt>
  41d36c:	ldr	w8, [x23, #128]
  41d370:	cmp	w8, #0xf
  41d374:	b.eq	41d7f4 <_obstack_memory_used@@Base+0x7d9c>  // b.none
  41d378:	ldr	x0, [x23, #112]
  41d37c:	ldr	x14, [sp, #56]
  41d380:	add	w9, w8, #0x1
  41d384:	sxtw	x8, w8
  41d388:	add	x24, x0, x8, lsl #6
  41d38c:	mov	w10, #0x3                   	// #3
  41d390:	mov	x11, #0xffffffffffffffff    	// #-1
  41d394:	str	w9, [x23, #128]
  41d398:	str	xzr, [x24, #8]!
  41d39c:	stp	xzr, xzr, [x24, #16]
  41d3a0:	str	xzr, [x24, #8]
  41d3a4:	str	w10, [x24, #48]
  41d3a8:	stp	xzr, x25, [x24, #32]
  41d3ac:	str	x11, [x24, #56]
  41d3b0:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41d3b4:	mov	x0, x25
  41d3b8:	bl	402a10 <free@plt>
  41d3bc:	ldr	x14, [sp, #56]
  41d3c0:	mov	x24, x19
  41d3c4:	b	41c464 <_obstack_memory_used@@Base+0x6a0c>
  41d3c8:	str	x28, [sp, #24]
  41d3cc:	mov	w0, #0x7                   	// #7
  41d3d0:	b	41d524 <_obstack_memory_used@@Base+0x7acc>
  41d3d4:	str	x28, [sp, #24]
  41d3d8:	b	41d524 <_obstack_memory_used@@Base+0x7acc>
  41d3dc:	mov	w0, #0x3c8                 	// #968
  41d3e0:	bl	402730 <malloc@plt>
  41d3e4:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d3e8:	ldr	x9, [x23, #112]
  41d3ec:	ldr	x14, [sp, #56]
  41d3f0:	mov	w8, wzr
  41d3f4:	str	x9, [x0]
  41d3f8:	str	x0, [x23, #112]
  41d3fc:	str	wzr, [x23, #128]
  41d400:	b	41b8b8 <_obstack_memory_used@@Base+0x5e60>
  41d404:	mov	w8, #0x2                   	// #2
  41d408:	b	41d81c <_obstack_memory_used@@Base+0x7dc4>
  41d40c:	mov	x0, x25
  41d410:	bl	402a10 <free@plt>
  41d414:	mov	x0, x24
  41d418:	bl	402a10 <free@plt>
  41d41c:	b	41d670 <_obstack_memory_used@@Base+0x7c18>
  41d420:	mov	w0, #0x3c8                 	// #968
  41d424:	bl	402730 <malloc@plt>
  41d428:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d42c:	ldr	x9, [x23, #112]
  41d430:	ldr	x10, [sp, #32]
  41d434:	ldr	x14, [sp, #56]
  41d438:	mov	w8, wzr
  41d43c:	str	x9, [x0]
  41d440:	str	x0, [x23, #112]
  41d444:	str	wzr, [x23, #128]
  41d448:	b	41ba1c <_obstack_memory_used@@Base+0x5fc4>
  41d44c:	mov	w8, #0x6                   	// #6
  41d450:	b	41d674 <_obstack_memory_used@@Base+0x7c1c>
  41d454:	mov	w0, #0x3c8                 	// #968
  41d458:	bl	402730 <malloc@plt>
  41d45c:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d460:	ldr	x9, [x23, #112]
  41d464:	ldr	x14, [sp, #56]
  41d468:	mov	w8, wzr
  41d46c:	str	x9, [x0]
  41d470:	str	x0, [x23, #112]
  41d474:	str	wzr, [x23, #128]
  41d478:	b	41bc50 <_obstack_memory_used@@Base+0x61f8>
  41d47c:	mov	w0, #0x3c8                 	// #968
  41d480:	bl	402730 <malloc@plt>
  41d484:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d488:	ldr	x9, [x23, #112]
  41d48c:	ldr	x14, [sp, #56]
  41d490:	mov	w8, wzr
  41d494:	str	x9, [x0]
  41d498:	str	x0, [x23, #112]
  41d49c:	str	wzr, [x23, #128]
  41d4a0:	b	41bbec <_obstack_memory_used@@Base+0x6194>
  41d4a4:	mov	w0, #0x3c8                 	// #968
  41d4a8:	bl	402730 <malloc@plt>
  41d4ac:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x7dc0>
  41d4b0:	ldr	x9, [x23, #112]
  41d4b4:	ldr	x14, [sp, #56]
  41d4b8:	mov	w8, wzr
  41d4bc:	str	x9, [x0]
  41d4c0:	str	x0, [x23, #112]
  41d4c4:	str	wzr, [x23, #128]
  41d4c8:	b	41c38c <_obstack_memory_used@@Base+0x6934>
  41d4cc:	mov	w0, #0x3c8                 	// #968
  41d4d0:	bl	402730 <malloc@plt>
  41d4d4:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x7dc0>
  41d4d8:	ldr	x9, [x23, #112]
  41d4dc:	ldr	x14, [sp, #56]
  41d4e0:	mov	w8, wzr
  41d4e4:	str	x9, [x0]
  41d4e8:	str	x0, [x23, #112]
  41d4ec:	str	wzr, [x23, #128]
  41d4f0:	b	41c3ec <_obstack_memory_used@@Base+0x6994>
  41d4f4:	mov	w0, #0x3c8                 	// #968
  41d4f8:	bl	402730 <malloc@plt>
  41d4fc:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x7dc0>
  41d500:	ldr	x9, [x23, #112]
  41d504:	ldr	x14, [sp, #56]
  41d508:	mov	w8, wzr
  41d50c:	str	x9, [x0]
  41d510:	str	x0, [x23, #112]
  41d514:	str	wzr, [x23, #128]
  41d518:	b	41c42c <_obstack_memory_used@@Base+0x69d4>
  41d51c:	str	x28, [sp, #24]
  41d520:	mov	w0, #0x3                   	// #3
  41d524:	ldr	x28, [sp, #24]
  41d528:	str	w0, [x28]
  41d52c:	mov	x0, x25
  41d530:	bl	402a10 <free@plt>
  41d534:	ldr	x0, [x24]
  41d538:	bl	402a10 <free@plt>
  41d53c:	ldr	x0, [x24, #8]
  41d540:	bl	402a10 <free@plt>
  41d544:	ldr	x0, [x24, #16]
  41d548:	bl	402a10 <free@plt>
  41d54c:	ldr	x0, [x24, #24]
  41d550:	bl	402a10 <free@plt>
  41d554:	mov	x0, x24
  41d558:	bl	402a10 <free@plt>
  41d55c:	ldr	w8, [x28]
  41d560:	ldr	x14, [sp, #56]
  41d564:	mov	x24, xzr
  41d568:	cbz	w8, 41c464 <_obstack_memory_used@@Base+0x6a0c>
  41d56c:	b	41d67c <_obstack_memory_used@@Base+0x7c24>
  41d570:	mov	w0, #0x3c8                 	// #968
  41d574:	bl	402730 <malloc@plt>
  41d578:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d57c:	ldr	x9, [x23, #112]
  41d580:	ldr	x14, [sp, #56]
  41d584:	mov	w8, wzr
  41d588:	str	x9, [x0]
  41d58c:	str	x0, [x23, #112]
  41d590:	str	wzr, [x23, #128]
  41d594:	b	41bd18 <_obstack_memory_used@@Base+0x62c0>
  41d598:	mov	w0, #0x3c8                 	// #968
  41d59c:	bl	402730 <malloc@plt>
  41d5a0:	cbz	x0, 41d724 <_obstack_memory_used@@Base+0x7ccc>
  41d5a4:	ldr	x9, [x23, #112]
  41d5a8:	ldr	x21, [sp, #40]
  41d5ac:	ldr	x14, [sp, #56]
  41d5b0:	mov	w8, wzr
  41d5b4:	str	x9, [x0]
  41d5b8:	str	x0, [x23, #112]
  41d5bc:	str	wzr, [x23, #128]
  41d5c0:	b	41d17c <_obstack_memory_used@@Base+0x7724>
  41d5c4:	mov	w0, #0x3c8                 	// #968
  41d5c8:	bl	402730 <malloc@plt>
  41d5cc:	ldr	x14, [sp, #56]
  41d5d0:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d5d4:	ldr	x9, [x23, #112]
  41d5d8:	mov	w8, wzr
  41d5dc:	str	x9, [x0]
  41d5e0:	str	x0, [x23, #112]
  41d5e4:	str	wzr, [x23, #128]
  41d5e8:	b	41d1c4 <_obstack_memory_used@@Base+0x776c>
  41d5ec:	mov	w0, #0x3c8                 	// #968
  41d5f0:	bl	402730 <malloc@plt>
  41d5f4:	cbz	x0, 41d7d4 <_obstack_memory_used@@Base+0x7d7c>
  41d5f8:	ldr	x9, [x23, #112]
  41d5fc:	ldr	x21, [sp, #40]
  41d600:	ldr	x14, [sp, #56]
  41d604:	mov	w8, wzr
  41d608:	str	x9, [x0]
  41d60c:	str	x0, [x23, #112]
  41d610:	str	wzr, [x23, #128]
  41d614:	b	41b95c <_obstack_memory_used@@Base+0x5f04>
  41d618:	mov	w0, #0x3c8                 	// #968
  41d61c:	bl	402730 <malloc@plt>
  41d620:	cbz	x0, 41d7e0 <_obstack_memory_used@@Base+0x7d88>
  41d624:	ldr	x9, [x23, #112]
  41d628:	ldr	x21, [sp, #40]
  41d62c:	ldr	x14, [sp, #56]
  41d630:	mov	w8, wzr
  41d634:	str	x9, [x0]
  41d638:	str	x0, [x23, #112]
  41d63c:	str	wzr, [x23, #128]
  41d640:	b	41d12c <_obstack_memory_used@@Base+0x76d4>
  41d644:	mov	w0, #0x3c8                 	// #968
  41d648:	bl	402730 <malloc@plt>
  41d64c:	cbz	x0, 41d670 <_obstack_memory_used@@Base+0x7c18>
  41d650:	ldr	x9, [x23, #112]
  41d654:	ldr	x21, [sp, #40]
  41d658:	ldr	x14, [sp, #56]
  41d65c:	mov	w8, wzr
  41d660:	str	x9, [x0]
  41d664:	str	x0, [x23, #112]
  41d668:	str	wzr, [x23, #128]
  41d66c:	b	41d21c <_obstack_memory_used@@Base+0x77c4>
  41d670:	mov	w8, #0xc                   	// #12
  41d674:	mov	x24, xzr
  41d678:	str	w8, [x28]
  41d67c:	mov	x0, x24
  41d680:	ldp	x20, x19, [sp, #272]
  41d684:	ldp	x22, x21, [sp, #256]
  41d688:	ldp	x24, x23, [sp, #240]
  41d68c:	ldp	x26, x25, [sp, #224]
  41d690:	ldp	x28, x27, [sp, #208]
  41d694:	ldp	x29, x30, [sp, #192]
  41d698:	add	sp, sp, #0x120
  41d69c:	ret
  41d6a0:	mov	x20, xzr
  41d6a4:	mov	x19, xzr
  41d6a8:	b	41d6b4 <_obstack_memory_used@@Base+0x7c5c>
  41d6ac:	mov	w19, #0x2                   	// #2
  41d6b0:	mov	w20, #0x80                  	// #128
  41d6b4:	bl	4029e0 <__ctype_b_loc@plt>
  41d6b8:	ldr	x8, [x0]
  41d6bc:	ldr	x14, [sp, #56]
  41d6c0:	mov	w9, #0x1                   	// #1
  41d6c4:	add	x8, x8, x20, lsl #1
  41d6c8:	b	41d6e0 <_obstack_memory_used@@Base+0x7c88>
  41d6cc:	add	x19, x19, #0x1
  41d6d0:	add	x20, x20, #0x40
  41d6d4:	cmp	x19, #0x4
  41d6d8:	add	x8, x8, #0x80
  41d6dc:	b.eq	41b92c <_obstack_memory_used@@Base+0x5ed4>  // b.none
  41d6e0:	add	x11, x23, x19, lsl #3
  41d6e4:	mov	x10, xzr
  41d6e8:	add	x11, x11, #0xb8
  41d6ec:	b	41d70c <_obstack_memory_used@@Base+0x7cb4>
  41d6f0:	ldr	x12, [x11]
  41d6f4:	lsl	x13, x9, x10
  41d6f8:	orr	x12, x12, x13
  41d6fc:	str	x12, [x11]
  41d700:	add	x10, x10, #0x1
  41d704:	cmp	x10, #0x40
  41d708:	b.eq	41d6cc <_obstack_memory_used@@Base+0x7c74>  // b.none
  41d70c:	add	x12, x20, x10
  41d710:	cmp	x12, #0x5f
  41d714:	b.eq	41d6f0 <_obstack_memory_used@@Base+0x7c98>  // b.none
  41d718:	ldrh	w12, [x8, x10, lsl #1]
  41d71c:	tbz	w12, #3, 41d700 <_obstack_memory_used@@Base+0x7ca8>
  41d720:	b	41d6f0 <_obstack_memory_used@@Base+0x7c98>
  41d724:	ldr	x21, [sp, #40]
  41d728:	ldr	x14, [sp, #56]
  41d72c:	mov	x20, xzr
  41d730:	b	41d1b4 <_obstack_memory_used@@Base+0x775c>
  41d734:	cbz	x25, 41d7c4 <_obstack_memory_used@@Base+0x7d6c>
  41d738:	mov	w19, #0xff                  	// #255
  41d73c:	movk	w19, #0x4, lsl #16
  41d740:	mov	x21, x25
  41d744:	ldr	x25, [x25, #8]
  41d748:	cbnz	x25, 41d740 <_obstack_memory_used@@Base+0x7ce8>
  41d74c:	ldr	x25, [x21, #16]
  41d750:	cbnz	x25, 41d740 <_obstack_memory_used@@Base+0x7ce8>
  41d754:	ldr	w8, [x21, #48]
  41d758:	and	w8, w8, w19
  41d75c:	cmp	w8, #0x3
  41d760:	b.eq	41d794 <_obstack_memory_used@@Base+0x7d3c>  // b.none
  41d764:	cmp	w8, #0x6
  41d768:	b.ne	41d7a0 <_obstack_memory_used@@Base+0x7d48>  // b.any
  41d76c:	ldr	x20, [x21, #40]
  41d770:	ldr	x0, [x20]
  41d774:	bl	402a10 <free@plt>
  41d778:	ldr	x0, [x20, #8]
  41d77c:	bl	402a10 <free@plt>
  41d780:	ldr	x0, [x20, #16]
  41d784:	bl	402a10 <free@plt>
  41d788:	ldr	x0, [x20, #24]
  41d78c:	bl	402a10 <free@plt>
  41d790:	b	41d798 <_obstack_memory_used@@Base+0x7d40>
  41d794:	ldr	x20, [x21, #40]
  41d798:	mov	x0, x20
  41d79c:	bl	402a10 <free@plt>
  41d7a0:	ldr	x8, [x21]
  41d7a4:	cbz	x8, 41d7c4 <_obstack_memory_used@@Base+0x7d6c>
  41d7a8:	ldr	x25, [x8, #16]
  41d7ac:	cmp	x25, x21
  41d7b0:	mov	x21, x8
  41d7b4:	b.eq	41d754 <_obstack_memory_used@@Base+0x7cfc>  // b.none
  41d7b8:	mov	x21, x8
  41d7bc:	cbz	x25, 41d754 <_obstack_memory_used@@Base+0x7cfc>
  41d7c0:	b	41d740 <_obstack_memory_used@@Base+0x7ce8>
  41d7c4:	mov	w8, #0x8                   	// #8
  41d7c8:	b	41d674 <_obstack_memory_used@@Base+0x7c1c>
  41d7cc:	mov	w0, #0xb                   	// #11
  41d7d0:	b	41d524 <_obstack_memory_used@@Base+0x7acc>
  41d7d4:	mov	x19, xzr
  41d7d8:	mov	w8, #0x9                   	// #9
  41d7dc:	b	41d7e8 <_obstack_memory_used@@Base+0x7d90>
  41d7e0:	mov	x19, xzr
  41d7e4:	mov	w8, #0xa                   	// #10
  41d7e8:	ldr	x21, [sp, #40]
  41d7ec:	ldr	x14, [sp, #56]
  41d7f0:	b	41d168 <_obstack_memory_used@@Base+0x7710>
  41d7f4:	mov	w0, #0x3c8                 	// #968
  41d7f8:	bl	402730 <malloc@plt>
  41d7fc:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x7dc0>
  41d800:	ldr	x9, [x23, #112]
  41d804:	mov	w8, wzr
  41d808:	str	x9, [x0]
  41d80c:	str	x0, [x23, #112]
  41d810:	str	wzr, [x23, #128]
  41d814:	b	41d37c <_obstack_memory_used@@Base+0x7924>
  41d818:	mov	w8, #0xc                   	// #12
  41d81c:	str	w8, [x28]
  41d820:	b	41d52c <_obstack_memory_used@@Base+0x7ad4>
  41d824:	mov	x0, x22
  41d828:	bl	402a10 <free@plt>
  41d82c:	ldr	x0, [sp]
  41d830:	bl	402a10 <free@plt>
  41d834:	mov	w0, #0xc                   	// #12
  41d838:	b	41d524 <_obstack_memory_used@@Base+0x7acc>
  41d83c:	sub	sp, sp, #0x60
  41d840:	stp	x26, x25, [sp, #32]
  41d844:	stp	x20, x19, [sp, #80]
  41d848:	mov	x26, x1
  41d84c:	mov	x20, x0
  41d850:	mov	w0, #0x20                  	// #32
  41d854:	mov	w1, #0x1                   	// #1
  41d858:	stp	x29, x30, [sp, #16]
  41d85c:	stp	x24, x23, [sp, #48]
  41d860:	stp	x22, x21, [sp, #64]
  41d864:	add	x29, sp, #0x10
  41d868:	mov	x21, x5
  41d86c:	mov	w23, w4
  41d870:	mov	x24, x3
  41d874:	mov	x25, x2
  41d878:	str	xzr, [sp, #8]
  41d87c:	bl	402840 <calloc@plt>
  41d880:	cbz	x0, 41db40 <_obstack_memory_used@@Base+0x80e8>
  41d884:	mov	x22, x0
  41d888:	mov	w0, #0x50                  	// #80
  41d88c:	mov	w1, #0x1                   	// #1
  41d890:	bl	402840 <calloc@plt>
  41d894:	cbz	x0, 41da80 <_obstack_memory_used@@Base+0x8028>
  41d898:	mov	x19, x0
  41d89c:	and	w8, w23, #0x1
  41d8a0:	strb	w8, [x0, #32]
  41d8a4:	add	x3, sp, #0x8
  41d8a8:	mov	x0, x26
  41d8ac:	mov	x1, x22
  41d8b0:	mov	x2, x19
  41d8b4:	mov	x4, x25
  41d8b8:	mov	x5, xzr
  41d8bc:	bl	41df80 <_obstack_memory_used@@Base+0x8528>
  41d8c0:	cbnz	w0, 41da88 <_obstack_memory_used@@Base+0x8030>
  41d8c4:	ldrb	w8, [x24]
  41d8c8:	cbz	w8, 41d8f4 <_obstack_memory_used@@Base+0x7e9c>
  41d8cc:	add	x9, x24, #0x1
  41d8d0:	mov	w10, #0x1                   	// #1
  41d8d4:	lsr	w11, w8, #3
  41d8d8:	and	x11, x11, #0x18
  41d8dc:	ldr	x12, [x22, x11]
  41d8e0:	lsl	x8, x10, x8
  41d8e4:	orr	x8, x12, x8
  41d8e8:	str	x8, [x22, x11]
  41d8ec:	ldrb	w8, [x9], #1
  41d8f0:	cbnz	w8, 41d8d4 <_obstack_memory_used@@Base+0x7e7c>
  41d8f4:	tbz	w23, #0, 41d908 <_obstack_memory_used@@Base+0x7eb0>
  41d8f8:	ldp	q0, q1, [x22]
  41d8fc:	mvn	v0.16b, v0.16b
  41d900:	mvn	v1.16b, v1.16b
  41d904:	stp	q0, q1, [x22]
  41d908:	ldr	w8, [x20, #180]
  41d90c:	cmp	w8, #0x2
  41d910:	b.lt	41d950 <_obstack_memory_used@@Base+0x7ef8>  // b.tstop
  41d914:	ldr	x8, [x20, #120]
  41d918:	ldp	x10, x11, [x22]
  41d91c:	ldr	x9, [x8]
  41d920:	and	x9, x10, x9
  41d924:	str	x9, [x22]
  41d928:	ldr	x9, [x8, #8]
  41d92c:	and	x9, x11, x9
  41d930:	str	x9, [x22, #8]
  41d934:	ldr	x9, [x8, #16]
  41d938:	ldp	x10, x11, [x22, #16]
  41d93c:	and	x9, x10, x9
  41d940:	str	x9, [x22, #16]
  41d944:	ldr	x8, [x8, #24]
  41d948:	and	x8, x11, x8
  41d94c:	str	x8, [x22, #24]
  41d950:	ldr	w8, [x20, #128]
  41d954:	cmp	w8, #0xf
  41d958:	b.eq	41dac8 <_obstack_memory_used@@Base+0x8070>  // b.none
  41d95c:	ldr	x0, [x20, #112]
  41d960:	add	w9, w8, #0x1
  41d964:	sxtw	x8, w8
  41d968:	add	x23, x0, x8, lsl #6
  41d96c:	str	w9, [x20, #128]
  41d970:	mov	w9, #0x3                   	// #3
  41d974:	mov	x8, #0xffffffffffffffff    	// #-1
  41d978:	str	xzr, [x23, #8]!
  41d97c:	stp	xzr, xzr, [x23, #16]
  41d980:	str	xzr, [x23, #8]
  41d984:	str	w9, [x23, #48]
  41d988:	stp	xzr, x22, [x23, #32]
  41d98c:	str	x8, [x23, #56]
  41d990:	ldr	w8, [x20, #180]
  41d994:	cmp	w8, #0x2
  41d998:	b.lt	41da38 <_obstack_memory_used@@Base+0x7fe0>  // b.tstop
  41d99c:	ldrb	w9, [x20, #176]
  41d9a0:	ldr	w8, [x20, #128]
  41d9a4:	orr	w9, w9, #0x2
  41d9a8:	cmp	w8, #0xf
  41d9ac:	strb	w9, [x20, #176]
  41d9b0:	b.eq	41daec <_obstack_memory_used@@Base+0x8094>  // b.none
  41d9b4:	ldr	x0, [x20, #112]
  41d9b8:	add	w9, w8, #0x1
  41d9bc:	sxtw	x8, w8
  41d9c0:	add	x21, x0, x8, lsl #6
  41d9c4:	str	w9, [x20, #128]
  41d9c8:	mov	w9, #0x6                   	// #6
  41d9cc:	mov	x8, #0xffffffffffffffff    	// #-1
  41d9d0:	str	xzr, [x21, #8]!
  41d9d4:	stp	xzr, xzr, [x21, #16]
  41d9d8:	str	xzr, [x21, #8]
  41d9dc:	str	w9, [x21, #48]
  41d9e0:	stp	xzr, x19, [x21, #32]
  41d9e4:	str	x8, [x21, #56]
  41d9e8:	ldr	w8, [x20, #128]
  41d9ec:	cmp	w8, #0xf
  41d9f0:	b.eq	41db50 <_obstack_memory_used@@Base+0x80f8>  // b.none
  41d9f4:	ldr	x0, [x20, #112]
  41d9f8:	add	w9, w8, #0x1
  41d9fc:	sxtw	x8, w8
  41da00:	add	x8, x0, x8, lsl #6
  41da04:	str	w9, [x20, #128]
  41da08:	mov	w9, #0xa                   	// #10
  41da0c:	mov	x10, #0xffffffffffffffff    	// #-1
  41da10:	str	xzr, [x8, #8]!
  41da14:	stp	x23, x21, [x8, #8]
  41da18:	stp	xzr, xzr, [x8, #32]
  41da1c:	str	w9, [x8, #48]
  41da20:	str	xzr, [x8, #24]
  41da24:	str	x10, [x8, #56]
  41da28:	str	x8, [x23]
  41da2c:	str	x8, [x21]
  41da30:	mov	x23, x8
  41da34:	b	41da60 <_obstack_memory_used@@Base+0x8008>
  41da38:	ldr	x0, [x19]
  41da3c:	bl	402a10 <free@plt>
  41da40:	ldr	x0, [x19, #8]
  41da44:	bl	402a10 <free@plt>
  41da48:	ldr	x0, [x19, #16]
  41da4c:	bl	402a10 <free@plt>
  41da50:	ldr	x0, [x19, #24]
  41da54:	bl	402a10 <free@plt>
  41da58:	mov	x0, x19
  41da5c:	bl	402a10 <free@plt>
  41da60:	mov	x0, x23
  41da64:	ldp	x20, x19, [sp, #80]
  41da68:	ldp	x22, x21, [sp, #64]
  41da6c:	ldp	x24, x23, [sp, #48]
  41da70:	ldp	x26, x25, [sp, #32]
  41da74:	ldp	x29, x30, [sp, #16]
  41da78:	add	sp, sp, #0x60
  41da7c:	ret
  41da80:	mov	x0, x22
  41da84:	b	41db3c <_obstack_memory_used@@Base+0x80e4>
  41da88:	mov	w25, w0
  41da8c:	mov	x0, x22
  41da90:	bl	402a10 <free@plt>
  41da94:	ldr	x0, [x19]
  41da98:	bl	402a10 <free@plt>
  41da9c:	ldr	x0, [x19, #8]
  41daa0:	bl	402a10 <free@plt>
  41daa4:	ldr	x0, [x19, #16]
  41daa8:	bl	402a10 <free@plt>
  41daac:	ldr	x0, [x19, #24]
  41dab0:	bl	402a10 <free@plt>
  41dab4:	mov	x0, x19
  41dab8:	bl	402a10 <free@plt>
  41dabc:	mov	x23, xzr
  41dac0:	str	w25, [x21]
  41dac4:	b	41da60 <_obstack_memory_used@@Base+0x8008>
  41dac8:	mov	w0, #0x3c8                 	// #968
  41dacc:	bl	402730 <malloc@plt>
  41dad0:	cbz	x0, 41db10 <_obstack_memory_used@@Base+0x80b8>
  41dad4:	ldr	x9, [x20, #112]
  41dad8:	mov	w8, wzr
  41dadc:	str	x9, [x0]
  41dae0:	str	x0, [x20, #112]
  41dae4:	str	wzr, [x20, #128]
  41dae8:	b	41d960 <_obstack_memory_used@@Base+0x7f08>
  41daec:	mov	w0, #0x3c8                 	// #968
  41daf0:	bl	402730 <malloc@plt>
  41daf4:	cbz	x0, 41db10 <_obstack_memory_used@@Base+0x80b8>
  41daf8:	ldr	x9, [x20, #112]
  41dafc:	mov	w8, wzr
  41db00:	str	x9, [x0]
  41db04:	str	x0, [x20, #112]
  41db08:	str	wzr, [x20, #128]
  41db0c:	b	41d9b8 <_obstack_memory_used@@Base+0x7f60>
  41db10:	mov	x0, x22
  41db14:	bl	402a10 <free@plt>
  41db18:	ldr	x0, [x19]
  41db1c:	bl	402a10 <free@plt>
  41db20:	ldr	x0, [x19, #8]
  41db24:	bl	402a10 <free@plt>
  41db28:	ldr	x0, [x19, #16]
  41db2c:	bl	402a10 <free@plt>
  41db30:	ldr	x0, [x19, #24]
  41db34:	bl	402a10 <free@plt>
  41db38:	mov	x0, x19
  41db3c:	bl	402a10 <free@plt>
  41db40:	mov	x23, xzr
  41db44:	mov	w8, #0xc                   	// #12
  41db48:	str	w8, [x21]
  41db4c:	b	41da60 <_obstack_memory_used@@Base+0x8008>
  41db50:	mov	w0, #0x3c8                 	// #968
  41db54:	bl	402730 <malloc@plt>
  41db58:	cbz	x0, 41db74 <_obstack_memory_used@@Base+0x811c>
  41db5c:	ldr	x9, [x20, #112]
  41db60:	mov	w8, wzr
  41db64:	str	x9, [x0]
  41db68:	str	x0, [x20, #112]
  41db6c:	str	wzr, [x20, #128]
  41db70:	b	41d9f8 <_obstack_memory_used@@Base+0x7fa0>
  41db74:	mov	x23, xzr
  41db78:	b	41da60 <_obstack_memory_used@@Base+0x8008>
  41db7c:	ldr	x9, [x1, #104]
  41db80:	ldr	x8, [x1, #72]
  41db84:	cmp	x9, x8
  41db88:	b.le	41dbfc <_obstack_memory_used@@Base+0x81a4>
  41db8c:	ldr	x9, [x1, #8]
  41db90:	ldrb	w8, [x9, x8]
  41db94:	strb	w8, [x0]
  41db98:	ldr	w9, [x1, #144]
  41db9c:	cmp	w9, #0x2
  41dba0:	b.lt	41dbc4 <_obstack_memory_used@@Base+0x816c>  // b.tstop
  41dba4:	ldr	x9, [x1, #72]
  41dba8:	ldr	x10, [x1, #48]
  41dbac:	cmp	x9, x10
  41dbb0:	b.eq	41dbc4 <_obstack_memory_used@@Base+0x816c>  // b.none
  41dbb4:	ldr	x10, [x1, #16]
  41dbb8:	ldr	w9, [x10, x9, lsl #2]
  41dbbc:	cmn	w9, #0x1
  41dbc0:	b.eq	41dc7c <_obstack_memory_used@@Base+0x8224>  // b.none
  41dbc4:	tbz	w2, #0, 41dc0c <_obstack_memory_used@@Base+0x81b4>
  41dbc8:	cmp	w8, #0x5c
  41dbcc:	b.ne	41dc0c <_obstack_memory_used@@Base+0x81b4>  // b.any
  41dbd0:	ldr	x8, [x1, #72]
  41dbd4:	ldr	x9, [x1, #88]
  41dbd8:	add	x8, x8, #0x1
  41dbdc:	cmp	x8, x9
  41dbe0:	b.ge	41dc7c <_obstack_memory_used@@Base+0x8224>  // b.tcont
  41dbe4:	ldr	x9, [x1, #8]
  41dbe8:	str	x8, [x1, #72]
  41dbec:	ldrb	w9, [x9, x8]
  41dbf0:	mov	w8, #0x1                   	// #1
  41dbf4:	strb	w9, [x0]
  41dbf8:	b	41dc80 <_obstack_memory_used@@Base+0x8228>
  41dbfc:	mov	w9, #0x2                   	// #2
  41dc00:	strb	w9, [x0, #8]
  41dc04:	mov	w0, wzr
  41dc08:	ret
  41dc0c:	cmp	w8, #0x5c
  41dc10:	b.gt	41dc64 <_obstack_memory_used@@Base+0x820c>
  41dc14:	cmp	w8, #0x2d
  41dc18:	b.eq	41dc8c <_obstack_memory_used@@Base+0x8234>  // b.none
  41dc1c:	cmp	w8, #0x5b
  41dc20:	b.ne	41dc7c <_obstack_memory_used@@Base+0x8224>  // b.any
  41dc24:	ldr	x8, [x1, #72]
  41dc28:	ldr	x9, [x1, #88]
  41dc2c:	add	x8, x8, #0x1
  41dc30:	cmp	x8, x9
  41dc34:	b.ge	41dca4 <_obstack_memory_used@@Base+0x824c>  // b.tcont
  41dc38:	ldr	x9, [x1, #8]
  41dc3c:	ldrb	w8, [x9, x8]
  41dc40:	cmp	w8, #0x3d
  41dc44:	strb	w8, [x0]
  41dc48:	b.eq	41dcc0 <_obstack_memory_used@@Base+0x8268>  // b.none
  41dc4c:	cmp	w8, #0x3a
  41dc50:	b.eq	41dcc8 <_obstack_memory_used@@Base+0x8270>  // b.none
  41dc54:	cmp	w8, #0x2e
  41dc58:	b.ne	41dca8 <_obstack_memory_used@@Base+0x8250>  // b.any
  41dc5c:	mov	w8, #0x1a                  	// #26
  41dc60:	b	41dcd0 <_obstack_memory_used@@Base+0x8278>
  41dc64:	cmp	w8, #0x5d
  41dc68:	b.eq	41dc94 <_obstack_memory_used@@Base+0x823c>  // b.none
  41dc6c:	cmp	w8, #0x5e
  41dc70:	b.ne	41dc7c <_obstack_memory_used@@Base+0x8224>  // b.any
  41dc74:	mov	w8, #0x19                  	// #25
  41dc78:	b	41dc98 <_obstack_memory_used@@Base+0x8240>
  41dc7c:	mov	w8, #0x1                   	// #1
  41dc80:	strb	w8, [x0, #8]
  41dc84:	mov	w0, w8
  41dc88:	ret
  41dc8c:	mov	w8, #0x16                  	// #22
  41dc90:	b	41dc98 <_obstack_memory_used@@Base+0x8240>
  41dc94:	mov	w8, #0x15                  	// #21
  41dc98:	strb	w8, [x0, #8]
  41dc9c:	mov	w0, #0x1                   	// #1
  41dca0:	ret
  41dca4:	strb	wzr, [x0]
  41dca8:	mov	w8, #0x1                   	// #1
  41dcac:	mov	w9, #0x5b                  	// #91
  41dcb0:	strb	w8, [x0, #8]
  41dcb4:	strb	w9, [x0]
  41dcb8:	mov	w0, w8
  41dcbc:	ret
  41dcc0:	mov	w8, #0x1c                  	// #28
  41dcc4:	b	41dcd0 <_obstack_memory_used@@Base+0x8278>
  41dcc8:	tbz	w2, #2, 41dca8 <_obstack_memory_used@@Base+0x8250>
  41dccc:	mov	w8, #0x1e                  	// #30
  41dcd0:	strb	w8, [x0, #8]
  41dcd4:	mov	w0, #0x2                   	// #2
  41dcd8:	ret
  41dcdc:	sub	sp, sp, #0x30
  41dce0:	stp	x29, x30, [sp, #32]
  41dce4:	ldr	w8, [x1, #144]
  41dce8:	ldr	x9, [x1, #72]
  41dcec:	add	x29, sp, #0x20
  41dcf0:	cmp	w8, #0x1
  41dcf4:	b.eq	41dd64 <_obstack_memory_used@@Base+0x830c>  // b.none
  41dcf8:	ldr	x8, [x1, #48]
  41dcfc:	add	x10, x9, #0x1
  41dd00:	cmp	x10, x8
  41dd04:	b.ge	41dd64 <_obstack_memory_used@@Base+0x830c>  // b.tcont
  41dd08:	ldr	x10, [x1, #16]
  41dd0c:	sub	x8, x8, x9
  41dd10:	mov	w11, #0x1                   	// #1
  41dd14:	add	x12, x10, x9, lsl #2
  41dd18:	ldr	w13, [x12, x11, lsl #2]
  41dd1c:	cmn	w13, #0x1
  41dd20:	b.ne	41dd38 <_obstack_memory_used@@Base+0x82e0>  // b.any
  41dd24:	add	x11, x11, #0x1
  41dd28:	cmp	x8, x11
  41dd2c:	b.ne	41dd18 <_obstack_memory_used@@Base+0x82c0>  // b.any
  41dd30:	mov	x11, x8
  41dd34:	b	41dd40 <_obstack_memory_used@@Base+0x82e8>
  41dd38:	cmp	w11, #0x2
  41dd3c:	b.lt	41dd64 <_obstack_memory_used@@Base+0x830c>  // b.tstop
  41dd40:	mov	w12, #0x1                   	// #1
  41dd44:	str	w12, [x0]
  41dd48:	ldr	w9, [x10, x9, lsl #2]
  41dd4c:	mov	w8, wzr
  41dd50:	str	w9, [x0, #8]
  41dd54:	ldr	x9, [x1, #72]
  41dd58:	add	x9, x9, w11, sxtw
  41dd5c:	str	x9, [x1, #72]
  41dd60:	b	41df68 <_obstack_memory_used@@Base+0x8510>
  41dd64:	add	x8, x9, w3, sxtw
  41dd68:	str	x8, [x1, #72]
  41dd6c:	ldrb	w10, [x2, #8]
  41dd70:	sub	w9, w10, #0x16
  41dd74:	cmp	w9, #0x8
  41dd78:	b.hi	41df58 <_obstack_memory_used@@Base+0x8500>  // b.pmore
  41dd7c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x115a8>
  41dd80:	add	x11, x11, #0xbb0
  41dd84:	adr	x12, 41dd94 <_obstack_memory_used@@Base+0x833c>
  41dd88:	ldrb	w13, [x11, x9]
  41dd8c:	add	x12, x12, x13, lsl #2
  41dd90:	br	x12
  41dd94:	ldr	x9, [x1, #104]
  41dd98:	cmp	x9, x8
  41dd9c:	b.le	41dedc <_obstack_memory_used@@Base+0x8484>
  41dda0:	ldrb	w9, [x2]
  41dda4:	mov	x8, xzr
  41dda8:	and	w10, w10, #0xff
  41ddac:	cmp	w10, #0x1e
  41ddb0:	b.ne	41ddbc <_obstack_memory_used@@Base+0x8364>  // b.any
  41ddb4:	ldrb	w10, [x1, #139]
  41ddb8:	cbnz	w10, 41de10 <_obstack_memory_used@@Base+0x83b8>
  41ddbc:	ldr	x10, [x1, #72]
  41ddc0:	ldr	x11, [x1, #8]
  41ddc4:	add	x12, x10, #0x1
  41ddc8:	str	x12, [x1, #72]
  41ddcc:	ldrb	w10, [x11, x10]
  41ddd0:	ldr	x11, [x1, #104]
  41ddd4:	cmp	x11, x12
  41ddd8:	b.le	41dedc <_obstack_memory_used@@Base+0x8484>
  41dddc:	cmp	w9, w10, uxtb
  41dde0:	b.ne	41ddf4 <_obstack_memory_used@@Base+0x839c>  // b.any
  41dde4:	ldr	x11, [x1, #8]
  41dde8:	ldrb	w11, [x11, x12]
  41ddec:	cmp	w11, #0x5d
  41ddf0:	b.eq	41dee4 <_obstack_memory_used@@Base+0x848c>  // b.none
  41ddf4:	ldr	x11, [x0, #8]
  41ddf8:	strb	w10, [x11, x8]
  41ddfc:	add	x8, x8, #0x1
  41de00:	cmp	x8, #0x20
  41de04:	b.eq	41dedc <_obstack_memory_used@@Base+0x8484>  // b.none
  41de08:	ldrb	w10, [x2, #8]
  41de0c:	b	41dda8 <_obstack_memory_used@@Base+0x8350>
  41de10:	ldrb	w10, [x1, #140]
  41de14:	cbz	w10, 41de98 <_obstack_memory_used@@Base+0x8440>
  41de18:	ldr	x11, [x1, #72]
  41de1c:	ldr	x13, [x1, #48]
  41de20:	subs	x12, x13, x11
  41de24:	b.eq	41de38 <_obstack_memory_used@@Base+0x83e0>  // b.none
  41de28:	ldr	x10, [x1, #16]
  41de2c:	ldr	w10, [x10, x11, lsl #2]
  41de30:	cmn	w10, #0x1
  41de34:	b.eq	41deb8 <_obstack_memory_used@@Base+0x8460>  // b.none
  41de38:	ldr	x10, [x1, #24]
  41de3c:	ldr	x14, [x1, #40]
  41de40:	ldr	x15, [x1]
  41de44:	ldr	x10, [x10, x11, lsl #3]
  41de48:	add	x10, x14, x10
  41de4c:	ldrsb	w10, [x15, x10]
  41de50:	tbnz	w10, #31, 41deb8 <_obstack_memory_used@@Base+0x8460>
  41de54:	ldr	w14, [x1, #144]
  41de58:	cmp	w14, #0x1
  41de5c:	b.eq	41decc <_obstack_memory_used@@Base+0x8474>  // b.none
  41de60:	add	x14, x11, #0x1
  41de64:	cmp	x14, x13
  41de68:	b.ge	41decc <_obstack_memory_used@@Base+0x8474>  // b.tcont
  41de6c:	ldr	x13, [x1, #16]
  41de70:	add	x14, x13, x11, lsl #2
  41de74:	mov	w13, #0x1                   	// #1
  41de78:	ldr	w15, [x14, x13, lsl #2]
  41de7c:	cmn	w15, #0x1
  41de80:	b.ne	41ded0 <_obstack_memory_used@@Base+0x8478>  // b.any
  41de84:	add	x13, x13, #0x1
  41de88:	cmp	x12, x13
  41de8c:	b.ne	41de78 <_obstack_memory_used@@Base+0x8420>  // b.any
  41de90:	mov	x13, x12
  41de94:	b	41ded0 <_obstack_memory_used@@Base+0x8478>
  41de98:	ldr	x10, [x1, #72]
  41de9c:	ldr	x11, [x1, #40]
  41dea0:	ldr	x13, [x1]
  41dea4:	add	x12, x10, #0x1
  41dea8:	str	x12, [x1, #72]
  41deac:	add	x10, x10, x11
  41deb0:	ldrb	w10, [x13, x10]
  41deb4:	b	41ddd0 <_obstack_memory_used@@Base+0x8378>
  41deb8:	ldr	x10, [x1, #8]
  41debc:	add	x12, x11, #0x1
  41dec0:	str	x12, [x1, #72]
  41dec4:	ldrb	w10, [x10, x11]
  41dec8:	b	41ddd0 <_obstack_memory_used@@Base+0x8378>
  41decc:	mov	w13, #0x1                   	// #1
  41ded0:	add	x12, x11, w13, sxtw
  41ded4:	str	x12, [x1, #72]
  41ded8:	b	41ddd0 <_obstack_memory_used@@Base+0x8378>
  41dedc:	mov	w8, #0x7                   	// #7
  41dee0:	b	41df68 <_obstack_memory_used@@Base+0x8510>
  41dee4:	add	x9, x12, #0x1
  41dee8:	str	x9, [x1, #72]
  41deec:	ldr	x9, [x0, #8]
  41def0:	strb	wzr, [x9, w8, uxtw]
  41def4:	ldrb	w8, [x2, #8]
  41def8:	cmp	w8, #0x1e
  41defc:	b.eq	41df1c <_obstack_memory_used@@Base+0x84c4>  // b.none
  41df00:	cmp	w8, #0x1c
  41df04:	b.eq	41df24 <_obstack_memory_used@@Base+0x84cc>  // b.none
  41df08:	cmp	w8, #0x1a
  41df0c:	mov	w8, wzr
  41df10:	b.ne	41df68 <_obstack_memory_used@@Base+0x8510>  // b.any
  41df14:	mov	w9, #0x3                   	// #3
  41df18:	b	41df28 <_obstack_memory_used@@Base+0x84d0>
  41df1c:	mov	w9, #0x4                   	// #4
  41df20:	b	41df28 <_obstack_memory_used@@Base+0x84d0>
  41df24:	mov	w9, #0x2                   	// #2
  41df28:	mov	w8, wzr
  41df2c:	str	w9, [x0]
  41df30:	b	41df68 <_obstack_memory_used@@Base+0x8510>
  41df34:	tbnz	w5, #0, 41df58 <_obstack_memory_used@@Base+0x8500>
  41df38:	stp	x2, x0, [sp]
  41df3c:	add	x0, sp, #0x10
  41df40:	mov	x2, x4
  41df44:	bl	41db7c <_obstack_memory_used@@Base+0x8124>
  41df48:	ldrb	w8, [sp, #24]
  41df4c:	ldp	x2, x0, [sp]
  41df50:	cmp	w8, #0x15
  41df54:	b.ne	41df78 <_obstack_memory_used@@Base+0x8520>  // b.any
  41df58:	str	wzr, [x0]
  41df5c:	ldrb	w9, [x2]
  41df60:	mov	w8, wzr
  41df64:	strb	w9, [x0, #8]
  41df68:	ldp	x29, x30, [sp, #32]
  41df6c:	mov	w0, w8
  41df70:	add	sp, sp, #0x30
  41df74:	ret
  41df78:	mov	w8, #0xb                   	// #11
  41df7c:	b	41df68 <_obstack_memory_used@@Base+0x8510>
  41df80:	stp	x29, x30, [sp, #-64]!
  41df84:	stp	x24, x23, [sp, #16]
  41df88:	stp	x22, x21, [sp, #32]
  41df8c:	stp	x20, x19, [sp, #48]
  41df90:	mov	x21, x4
  41df94:	mov	x23, x3
  41df98:	mov	x22, x2
  41df9c:	mov	x19, x1
  41dfa0:	mov	x20, x0
  41dfa4:	mov	x29, sp
  41dfa8:	tbz	w5, #22, 41dfdc <_obstack_memory_used@@Base+0x8584>
  41dfac:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41dfb0:	add	x1, x1, #0x43e
  41dfb4:	mov	x0, x21
  41dfb8:	bl	4029d0 <strcmp@plt>
  41dfbc:	cbz	w0, 41dfd4 <_obstack_memory_used@@Base+0x857c>
  41dfc0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41dfc4:	add	x1, x1, #0x444
  41dfc8:	mov	x0, x21
  41dfcc:	bl	4029d0 <strcmp@plt>
  41dfd0:	cbnz	w0, 41dfdc <_obstack_memory_used@@Base+0x8584>
  41dfd4:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x115a8>
  41dfd8:	add	x21, x21, #0x44a
  41dfdc:	ldr	x8, [x23]
  41dfe0:	ldr	x9, [x22, #72]
  41dfe4:	cmp	x8, x9
  41dfe8:	b.eq	41e5e0 <_obstack_memory_used@@Base+0x8b88>  // b.none
  41dfec:	mov	x0, x21
  41dff0:	bl	402620 <wctype@plt>
  41dff4:	ldr	x8, [x22, #72]
  41dff8:	ldr	x9, [x22, #24]
  41dffc:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e000:	add	x1, x1, #0x4bd
  41e004:	add	x10, x8, #0x1
  41e008:	str	x10, [x22, #72]
  41e00c:	str	x0, [x9, x8, lsl #3]
  41e010:	mov	x0, x21
  41e014:	bl	4029d0 <strcmp@plt>
  41e018:	cbz	w0, 41e100 <_obstack_memory_used@@Base+0x86a8>
  41e01c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e020:	add	x1, x1, #0x4cf
  41e024:	mov	x0, x21
  41e028:	bl	4029d0 <strcmp@plt>
  41e02c:	cbz	w0, 41e148 <_obstack_memory_used@@Base+0x86f0>
  41e030:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e034:	add	x1, x1, #0x444
  41e038:	mov	x0, x21
  41e03c:	bl	4029d0 <strcmp@plt>
  41e040:	cbz	w0, 41e190 <_obstack_memory_used@@Base+0x8738>
  41e044:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e048:	add	x1, x1, #0x4b1
  41e04c:	mov	x0, x21
  41e050:	bl	4029d0 <strcmp@plt>
  41e054:	cbz	w0, 41e1d8 <_obstack_memory_used@@Base+0x8780>
  41e058:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e05c:	add	x1, x1, #0x44a
  41e060:	mov	x0, x21
  41e064:	bl	4029d0 <strcmp@plt>
  41e068:	cbz	w0, 41e220 <_obstack_memory_used@@Base+0x87c8>
  41e06c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e070:	add	x1, x1, #0x4ab
  41e074:	mov	x0, x21
  41e078:	bl	4029d0 <strcmp@plt>
  41e07c:	cbz	w0, 41e268 <_obstack_memory_used@@Base+0x8810>
  41e080:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e084:	add	x1, x1, #0x4c3
  41e088:	mov	x0, x21
  41e08c:	bl	4029d0 <strcmp@plt>
  41e090:	cbz	w0, 41e2c8 <_obstack_memory_used@@Base+0x8870>
  41e094:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e098:	add	x1, x1, #0x43e
  41e09c:	mov	x0, x21
  41e0a0:	bl	4029d0 <strcmp@plt>
  41e0a4:	cbz	w0, 41e314 <_obstack_memory_used@@Base+0x88bc>
  41e0a8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e0ac:	add	x1, x1, #0x4d5
  41e0b0:	mov	x0, x21
  41e0b4:	bl	4029d0 <strcmp@plt>
  41e0b8:	cbz	w0, 41e360 <_obstack_memory_used@@Base+0x8908>
  41e0bc:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e0c0:	add	x1, x1, #0x4c9
  41e0c4:	mov	x0, x21
  41e0c8:	bl	4029d0 <strcmp@plt>
  41e0cc:	cbz	w0, 41e3e4 <_obstack_memory_used@@Base+0x898c>
  41e0d0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e0d4:	add	x1, x1, #0x4b7
  41e0d8:	mov	x0, x21
  41e0dc:	bl	4029d0 <strcmp@plt>
  41e0e0:	cbz	w0, 41e468 <_obstack_memory_used@@Base+0x8a10>
  41e0e4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e0e8:	add	x1, x1, #0x4aa
  41e0ec:	mov	x0, x21
  41e0f0:	bl	4029d0 <strcmp@plt>
  41e0f4:	cbz	w0, 41e4ec <_obstack_memory_used@@Base+0x8a94>
  41e0f8:	mov	w0, #0x4                   	// #4
  41e0fc:	b	41e2b4 <_obstack_memory_used@@Base+0x885c>
  41e100:	bl	4029e0 <__ctype_b_loc@plt>
  41e104:	ldr	x8, [x0]
  41e108:	mov	x9, xzr
  41e10c:	mov	w10, #0x1                   	// #1
  41e110:	cbz	x20, 41e124 <_obstack_memory_used@@Base+0x86cc>
  41e114:	b	41e3bc <_obstack_memory_used@@Base+0x8964>
  41e118:	add	x9, x9, #0x1
  41e11c:	cmp	x9, #0x100
  41e120:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e124:	ldrh	w11, [x8, x9, lsl #1]
  41e128:	tbz	w11, #3, 41e118 <_obstack_memory_used@@Base+0x86c0>
  41e12c:	ubfx	x11, x9, #6, #2
  41e130:	lsl	x11, x11, #3
  41e134:	ldr	x12, [x19, x11]
  41e138:	lsl	x13, x10, x9
  41e13c:	orr	x12, x12, x13
  41e140:	str	x12, [x19, x11]
  41e144:	b	41e118 <_obstack_memory_used@@Base+0x86c0>
  41e148:	bl	4029e0 <__ctype_b_loc@plt>
  41e14c:	ldr	x8, [x0]
  41e150:	mov	x9, xzr
  41e154:	mov	w10, #0x1                   	// #1
  41e158:	cbz	x20, 41e16c <_obstack_memory_used@@Base+0x8714>
  41e15c:	b	41e440 <_obstack_memory_used@@Base+0x89e8>
  41e160:	add	x9, x9, #0x1
  41e164:	cmp	x9, #0x100
  41e168:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e16c:	ldrh	w11, [x8, x9, lsl #1]
  41e170:	tbz	w11, #1, 41e160 <_obstack_memory_used@@Base+0x8708>
  41e174:	ubfx	x11, x9, #6, #2
  41e178:	lsl	x11, x11, #3
  41e17c:	ldr	x12, [x19, x11]
  41e180:	lsl	x13, x10, x9
  41e184:	orr	x12, x12, x13
  41e188:	str	x12, [x19, x11]
  41e18c:	b	41e160 <_obstack_memory_used@@Base+0x8708>
  41e190:	bl	4029e0 <__ctype_b_loc@plt>
  41e194:	ldr	x8, [x0]
  41e198:	mov	x9, xzr
  41e19c:	mov	w10, #0x1                   	// #1
  41e1a0:	cbz	x20, 41e1b4 <_obstack_memory_used@@Base+0x875c>
  41e1a4:	b	41e4c4 <_obstack_memory_used@@Base+0x8a6c>
  41e1a8:	add	x9, x9, #0x1
  41e1ac:	cmp	x9, #0x100
  41e1b0:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e1b4:	ldrh	w11, [x8, x9, lsl #1]
  41e1b8:	tbz	w11, #9, 41e1a8 <_obstack_memory_used@@Base+0x8750>
  41e1bc:	ubfx	x11, x9, #6, #2
  41e1c0:	lsl	x11, x11, #3
  41e1c4:	ldr	x12, [x19, x11]
  41e1c8:	lsl	x13, x10, x9
  41e1cc:	orr	x12, x12, x13
  41e1d0:	str	x12, [x19, x11]
  41e1d4:	b	41e1a8 <_obstack_memory_used@@Base+0x8750>
  41e1d8:	bl	4029e0 <__ctype_b_loc@plt>
  41e1dc:	ldr	x8, [x0]
  41e1e0:	mov	x9, xzr
  41e1e4:	mov	w10, #0x1                   	// #1
  41e1e8:	cbz	x20, 41e1fc <_obstack_memory_used@@Base+0x87a4>
  41e1ec:	b	41e548 <_obstack_memory_used@@Base+0x8af0>
  41e1f0:	add	x9, x9, #0x1
  41e1f4:	cmp	x9, #0x100
  41e1f8:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e1fc:	ldrh	w11, [x8, x9, lsl #1]
  41e200:	tbz	w11, #13, 41e1f0 <_obstack_memory_used@@Base+0x8798>
  41e204:	ubfx	x11, x9, #6, #2
  41e208:	lsl	x11, x11, #3
  41e20c:	ldr	x12, [x19, x11]
  41e210:	lsl	x13, x10, x9
  41e214:	orr	x12, x12, x13
  41e218:	str	x12, [x19, x11]
  41e21c:	b	41e1f0 <_obstack_memory_used@@Base+0x8798>
  41e220:	bl	4029e0 <__ctype_b_loc@plt>
  41e224:	ldr	x8, [x0]
  41e228:	mov	x9, xzr
  41e22c:	mov	w10, #0x1                   	// #1
  41e230:	cbz	x20, 41e244 <_obstack_memory_used@@Base+0x87ec>
  41e234:	b	41e580 <_obstack_memory_used@@Base+0x8b28>
  41e238:	add	x9, x9, #0x1
  41e23c:	cmp	x9, #0x100
  41e240:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e244:	ldrh	w11, [x8, x9, lsl #1]
  41e248:	tbz	w11, #10, 41e238 <_obstack_memory_used@@Base+0x87e0>
  41e24c:	ubfx	x11, x9, #6, #2
  41e250:	lsl	x11, x11, #3
  41e254:	ldr	x12, [x19, x11]
  41e258:	lsl	x13, x10, x9
  41e25c:	orr	x12, x12, x13
  41e260:	str	x12, [x19, x11]
  41e264:	b	41e238 <_obstack_memory_used@@Base+0x87e0>
  41e268:	bl	4029e0 <__ctype_b_loc@plt>
  41e26c:	ldr	x8, [x0]
  41e270:	mov	x9, xzr
  41e274:	mov	w10, #0x1                   	// #1
  41e278:	cbz	x20, 41e28c <_obstack_memory_used@@Base+0x8834>
  41e27c:	b	41e5b8 <_obstack_memory_used@@Base+0x8b60>
  41e280:	add	x9, x9, #0x1
  41e284:	cmp	x9, #0x100
  41e288:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x8858>  // b.none
  41e28c:	ldrh	w11, [x8, x9, lsl #1]
  41e290:	tbz	w11, #11, 41e280 <_obstack_memory_used@@Base+0x8828>
  41e294:	ubfx	x11, x9, #6, #2
  41e298:	lsl	x11, x11, #3
  41e29c:	ldr	x12, [x19, x11]
  41e2a0:	lsl	x13, x10, x9
  41e2a4:	orr	x12, x12, x13
  41e2a8:	str	x12, [x19, x11]
  41e2ac:	b	41e280 <_obstack_memory_used@@Base+0x8828>
  41e2b0:	mov	w0, wzr
  41e2b4:	ldp	x20, x19, [sp, #48]
  41e2b8:	ldp	x22, x21, [sp, #32]
  41e2bc:	ldp	x24, x23, [sp, #16]
  41e2c0:	ldp	x29, x30, [sp], #64
  41e2c4:	ret
  41e2c8:	bl	4029e0 <__ctype_b_loc@plt>
  41e2cc:	ldr	x8, [x0]
  41e2d0:	mov	x9, xzr
  41e2d4:	mov	w10, #0x1                   	// #1
  41e2d8:	cbz	x20, 41e2f0 <_obstack_memory_used@@Base+0x8898>
  41e2dc:	b	41e614 <_obstack_memory_used@@Base+0x8bbc>
  41e2e0:	add	x9, x9, #0x1
  41e2e4:	cmp	x9, #0x100
  41e2e8:	mov	w0, wzr
  41e2ec:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e2f0:	ldrh	w11, [x8, x9, lsl #1]
  41e2f4:	tbz	w11, #14, 41e2e0 <_obstack_memory_used@@Base+0x8888>
  41e2f8:	ubfx	x11, x9, #6, #2
  41e2fc:	lsl	x11, x11, #3
  41e300:	ldr	x12, [x19, x11]
  41e304:	lsl	x13, x10, x9
  41e308:	orr	x12, x12, x13
  41e30c:	str	x12, [x19, x11]
  41e310:	b	41e2e0 <_obstack_memory_used@@Base+0x8888>
  41e314:	bl	4029e0 <__ctype_b_loc@plt>
  41e318:	ldr	x8, [x0]
  41e31c:	mov	x9, xzr
  41e320:	mov	w10, #0x1                   	// #1
  41e324:	cbz	x20, 41e33c <_obstack_memory_used@@Base+0x88e4>
  41e328:	b	41e64c <_obstack_memory_used@@Base+0x8bf4>
  41e32c:	add	x9, x9, #0x1
  41e330:	cmp	x9, #0x100
  41e334:	mov	w0, wzr
  41e338:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e33c:	ldrh	w11, [x8, x9, lsl #1]
  41e340:	tbz	w11, #8, 41e32c <_obstack_memory_used@@Base+0x88d4>
  41e344:	ubfx	x11, x9, #6, #2
  41e348:	lsl	x11, x11, #3
  41e34c:	ldr	x12, [x19, x11]
  41e350:	lsl	x13, x10, x9
  41e354:	orr	x12, x12, x13
  41e358:	str	x12, [x19, x11]
  41e35c:	b	41e32c <_obstack_memory_used@@Base+0x88d4>
  41e360:	bl	4029e0 <__ctype_b_loc@plt>
  41e364:	ldr	x8, [x0]
  41e368:	mov	x9, xzr
  41e36c:	mov	w10, #0x1                   	// #1
  41e370:	cbz	x20, 41e388 <_obstack_memory_used@@Base+0x8930>
  41e374:	b	41e684 <_obstack_memory_used@@Base+0x8c2c>
  41e378:	add	x9, x9, #0x1
  41e37c:	cmp	x9, #0x100
  41e380:	mov	w0, wzr
  41e384:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e388:	ldrh	w11, [x8, x9, lsl #1]
  41e38c:	tbz	w11, #0, 41e378 <_obstack_memory_used@@Base+0x8920>
  41e390:	ubfx	x11, x9, #6, #2
  41e394:	lsl	x11, x11, #3
  41e398:	ldr	x12, [x19, x11]
  41e39c:	lsl	x13, x10, x9
  41e3a0:	orr	x12, x12, x13
  41e3a4:	str	x12, [x19, x11]
  41e3a8:	b	41e378 <_obstack_memory_used@@Base+0x8920>
  41e3ac:	add	x9, x9, #0x1
  41e3b0:	cmp	x9, #0x100
  41e3b4:	mov	w0, wzr
  41e3b8:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e3bc:	ldrh	w11, [x8, x9, lsl #1]
  41e3c0:	tbz	w11, #3, 41e3ac <_obstack_memory_used@@Base+0x8954>
  41e3c4:	ldrb	w11, [x20, x9]
  41e3c8:	lsr	x12, x11, #3
  41e3cc:	and	x12, x12, #0x18
  41e3d0:	ldr	x13, [x19, x12]
  41e3d4:	lsl	x11, x10, x11
  41e3d8:	orr	x11, x11, x13
  41e3dc:	str	x11, [x19, x12]
  41e3e0:	b	41e3ac <_obstack_memory_used@@Base+0x8954>
  41e3e4:	bl	4029e0 <__ctype_b_loc@plt>
  41e3e8:	ldr	x8, [x0]
  41e3ec:	mov	x9, xzr
  41e3f0:	mov	w10, #0x1                   	// #1
  41e3f4:	cbz	x20, 41e40c <_obstack_memory_used@@Base+0x89b4>
  41e3f8:	b	41e6bc <_obstack_memory_used@@Base+0x8c64>
  41e3fc:	add	x9, x9, #0x1
  41e400:	cmp	x9, #0x100
  41e404:	mov	w0, wzr
  41e408:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e40c:	ldrsh	w11, [x8, x9, lsl #1]
  41e410:	tbz	w11, #31, 41e3fc <_obstack_memory_used@@Base+0x89a4>
  41e414:	ubfx	x11, x9, #6, #2
  41e418:	lsl	x11, x11, #3
  41e41c:	ldr	x12, [x19, x11]
  41e420:	lsl	x13, x10, x9
  41e424:	orr	x12, x12, x13
  41e428:	str	x12, [x19, x11]
  41e42c:	b	41e3fc <_obstack_memory_used@@Base+0x89a4>
  41e430:	add	x9, x9, #0x1
  41e434:	cmp	x9, #0x100
  41e438:	mov	w0, wzr
  41e43c:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e440:	ldrh	w11, [x8, x9, lsl #1]
  41e444:	tbz	w11, #1, 41e430 <_obstack_memory_used@@Base+0x89d8>
  41e448:	ldrb	w11, [x20, x9]
  41e44c:	lsr	x12, x11, #3
  41e450:	and	x12, x12, #0x18
  41e454:	ldr	x13, [x19, x12]
  41e458:	lsl	x11, x10, x11
  41e45c:	orr	x11, x11, x13
  41e460:	str	x11, [x19, x12]
  41e464:	b	41e430 <_obstack_memory_used@@Base+0x89d8>
  41e468:	bl	4029e0 <__ctype_b_loc@plt>
  41e46c:	ldr	x8, [x0]
  41e470:	mov	x9, xzr
  41e474:	mov	w10, #0x1                   	// #1
  41e478:	cbz	x20, 41e490 <_obstack_memory_used@@Base+0x8a38>
  41e47c:	b	41e6f4 <_obstack_memory_used@@Base+0x8c9c>
  41e480:	add	x9, x9, #0x1
  41e484:	cmp	x9, #0x100
  41e488:	mov	w0, wzr
  41e48c:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e490:	ldrh	w11, [x8, x9, lsl #1]
  41e494:	tbz	w11, #2, 41e480 <_obstack_memory_used@@Base+0x8a28>
  41e498:	ubfx	x11, x9, #6, #2
  41e49c:	lsl	x11, x11, #3
  41e4a0:	ldr	x12, [x19, x11]
  41e4a4:	lsl	x13, x10, x9
  41e4a8:	orr	x12, x12, x13
  41e4ac:	str	x12, [x19, x11]
  41e4b0:	b	41e480 <_obstack_memory_used@@Base+0x8a28>
  41e4b4:	add	x9, x9, #0x1
  41e4b8:	cmp	x9, #0x100
  41e4bc:	mov	w0, wzr
  41e4c0:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e4c4:	ldrh	w11, [x8, x9, lsl #1]
  41e4c8:	tbz	w11, #9, 41e4b4 <_obstack_memory_used@@Base+0x8a5c>
  41e4cc:	ldrb	w11, [x20, x9]
  41e4d0:	lsr	x12, x11, #3
  41e4d4:	and	x12, x12, #0x18
  41e4d8:	ldr	x13, [x19, x12]
  41e4dc:	lsl	x11, x10, x11
  41e4e0:	orr	x11, x11, x13
  41e4e4:	str	x11, [x19, x12]
  41e4e8:	b	41e4b4 <_obstack_memory_used@@Base+0x8a5c>
  41e4ec:	bl	4029e0 <__ctype_b_loc@plt>
  41e4f0:	ldr	x8, [x0]
  41e4f4:	mov	x9, xzr
  41e4f8:	mov	w10, #0x1                   	// #1
  41e4fc:	cbz	x20, 41e514 <_obstack_memory_used@@Base+0x8abc>
  41e500:	b	41e72c <_obstack_memory_used@@Base+0x8cd4>
  41e504:	add	x9, x9, #0x1
  41e508:	cmp	x9, #0x100
  41e50c:	mov	w0, wzr
  41e510:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e514:	ldrh	w11, [x8, x9, lsl #1]
  41e518:	tbz	w11, #12, 41e504 <_obstack_memory_used@@Base+0x8aac>
  41e51c:	ubfx	x11, x9, #6, #2
  41e520:	lsl	x11, x11, #3
  41e524:	ldr	x12, [x19, x11]
  41e528:	lsl	x13, x10, x9
  41e52c:	orr	x12, x12, x13
  41e530:	str	x12, [x19, x11]
  41e534:	b	41e504 <_obstack_memory_used@@Base+0x8aac>
  41e538:	add	x9, x9, #0x1
  41e53c:	cmp	x9, #0x100
  41e540:	mov	w0, wzr
  41e544:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e548:	ldrh	w11, [x8, x9, lsl #1]
  41e54c:	tbz	w11, #13, 41e538 <_obstack_memory_used@@Base+0x8ae0>
  41e550:	ldrb	w11, [x20, x9]
  41e554:	lsr	x12, x11, #3
  41e558:	and	x12, x12, #0x18
  41e55c:	ldr	x13, [x19, x12]
  41e560:	lsl	x11, x10, x11
  41e564:	orr	x11, x11, x13
  41e568:	str	x11, [x19, x12]
  41e56c:	b	41e538 <_obstack_memory_used@@Base+0x8ae0>
  41e570:	add	x9, x9, #0x1
  41e574:	cmp	x9, #0x100
  41e578:	mov	w0, wzr
  41e57c:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e580:	ldrh	w11, [x8, x9, lsl #1]
  41e584:	tbz	w11, #10, 41e570 <_obstack_memory_used@@Base+0x8b18>
  41e588:	ldrb	w11, [x20, x9]
  41e58c:	lsr	x12, x11, #3
  41e590:	and	x12, x12, #0x18
  41e594:	ldr	x13, [x19, x12]
  41e598:	lsl	x11, x10, x11
  41e59c:	orr	x11, x11, x13
  41e5a0:	str	x11, [x19, x12]
  41e5a4:	b	41e570 <_obstack_memory_used@@Base+0x8b18>
  41e5a8:	add	x9, x9, #0x1
  41e5ac:	cmp	x9, #0x100
  41e5b0:	mov	w0, wzr
  41e5b4:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e5b8:	ldrh	w11, [x8, x9, lsl #1]
  41e5bc:	tbz	w11, #11, 41e5a8 <_obstack_memory_used@@Base+0x8b50>
  41e5c0:	ldrb	w11, [x20, x9]
  41e5c4:	lsr	x12, x11, #3
  41e5c8:	and	x12, x12, #0x18
  41e5cc:	ldr	x13, [x19, x12]
  41e5d0:	lsl	x11, x10, x11
  41e5d4:	orr	x11, x11, x13
  41e5d8:	str	x11, [x19, x12]
  41e5dc:	b	41e5a8 <_obstack_memory_used@@Base+0x8b50>
  41e5e0:	ldr	x0, [x22, #24]
  41e5e4:	mov	w24, #0x1                   	// #1
  41e5e8:	bfi	x24, x8, #1, #63
  41e5ec:	lsl	x1, x24, #3
  41e5f0:	bl	402870 <realloc@plt>
  41e5f4:	cbz	x0, 41e754 <_obstack_memory_used@@Base+0x8cfc>
  41e5f8:	str	x0, [x22, #24]
  41e5fc:	str	x24, [x23]
  41e600:	b	41dfec <_obstack_memory_used@@Base+0x8594>
  41e604:	add	x9, x9, #0x1
  41e608:	cmp	x9, #0x100
  41e60c:	mov	w0, wzr
  41e610:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e614:	ldrh	w11, [x8, x9, lsl #1]
  41e618:	tbz	w11, #14, 41e604 <_obstack_memory_used@@Base+0x8bac>
  41e61c:	ldrb	w11, [x20, x9]
  41e620:	lsr	x12, x11, #3
  41e624:	and	x12, x12, #0x18
  41e628:	ldr	x13, [x19, x12]
  41e62c:	lsl	x11, x10, x11
  41e630:	orr	x11, x11, x13
  41e634:	str	x11, [x19, x12]
  41e638:	b	41e604 <_obstack_memory_used@@Base+0x8bac>
  41e63c:	add	x9, x9, #0x1
  41e640:	cmp	x9, #0x100
  41e644:	mov	w0, wzr
  41e648:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e64c:	ldrh	w11, [x8, x9, lsl #1]
  41e650:	tbz	w11, #8, 41e63c <_obstack_memory_used@@Base+0x8be4>
  41e654:	ldrb	w11, [x20, x9]
  41e658:	lsr	x12, x11, #3
  41e65c:	and	x12, x12, #0x18
  41e660:	ldr	x13, [x19, x12]
  41e664:	lsl	x11, x10, x11
  41e668:	orr	x11, x11, x13
  41e66c:	str	x11, [x19, x12]
  41e670:	b	41e63c <_obstack_memory_used@@Base+0x8be4>
  41e674:	add	x9, x9, #0x1
  41e678:	cmp	x9, #0x100
  41e67c:	mov	w0, wzr
  41e680:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e684:	ldrh	w11, [x8, x9, lsl #1]
  41e688:	tbz	w11, #0, 41e674 <_obstack_memory_used@@Base+0x8c1c>
  41e68c:	ldrb	w11, [x20, x9]
  41e690:	lsr	x12, x11, #3
  41e694:	and	x12, x12, #0x18
  41e698:	ldr	x13, [x19, x12]
  41e69c:	lsl	x11, x10, x11
  41e6a0:	orr	x11, x11, x13
  41e6a4:	str	x11, [x19, x12]
  41e6a8:	b	41e674 <_obstack_memory_used@@Base+0x8c1c>
  41e6ac:	add	x9, x9, #0x1
  41e6b0:	cmp	x9, #0x100
  41e6b4:	mov	w0, wzr
  41e6b8:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e6bc:	ldrsh	w11, [x8, x9, lsl #1]
  41e6c0:	tbz	w11, #31, 41e6ac <_obstack_memory_used@@Base+0x8c54>
  41e6c4:	ldrb	w11, [x20, x9]
  41e6c8:	lsr	x12, x11, #3
  41e6cc:	and	x12, x12, #0x18
  41e6d0:	ldr	x13, [x19, x12]
  41e6d4:	lsl	x11, x10, x11
  41e6d8:	orr	x11, x11, x13
  41e6dc:	str	x11, [x19, x12]
  41e6e0:	b	41e6ac <_obstack_memory_used@@Base+0x8c54>
  41e6e4:	add	x9, x9, #0x1
  41e6e8:	cmp	x9, #0x100
  41e6ec:	mov	w0, wzr
  41e6f0:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e6f4:	ldrh	w11, [x8, x9, lsl #1]
  41e6f8:	tbz	w11, #2, 41e6e4 <_obstack_memory_used@@Base+0x8c8c>
  41e6fc:	ldrb	w11, [x20, x9]
  41e700:	lsr	x12, x11, #3
  41e704:	and	x12, x12, #0x18
  41e708:	ldr	x13, [x19, x12]
  41e70c:	lsl	x11, x10, x11
  41e710:	orr	x11, x11, x13
  41e714:	str	x11, [x19, x12]
  41e718:	b	41e6e4 <_obstack_memory_used@@Base+0x8c8c>
  41e71c:	add	x9, x9, #0x1
  41e720:	cmp	x9, #0x100
  41e724:	mov	w0, wzr
  41e728:	b.eq	41e2b4 <_obstack_memory_used@@Base+0x885c>  // b.none
  41e72c:	ldrh	w11, [x8, x9, lsl #1]
  41e730:	tbz	w11, #12, 41e71c <_obstack_memory_used@@Base+0x8cc4>
  41e734:	ldrb	w11, [x20, x9]
  41e738:	lsr	x12, x11, #3
  41e73c:	and	x12, x12, #0x18
  41e740:	ldr	x13, [x19, x12]
  41e744:	lsl	x11, x10, x11
  41e748:	orr	x11, x11, x13
  41e74c:	str	x11, [x19, x12]
  41e750:	b	41e71c <_obstack_memory_used@@Base+0x8cc4>
  41e754:	mov	w0, #0xc                   	// #12
  41e758:	b	41e2b4 <_obstack_memory_used@@Base+0x885c>
  41e75c:	stp	x29, x30, [sp, #-64]!
  41e760:	stp	x22, x21, [sp, #32]
  41e764:	stp	x20, x19, [sp, #48]
  41e768:	ldr	w8, [x1, #48]
  41e76c:	ldr	x19, [x1, #56]
  41e770:	str	x23, [sp, #16]
  41e774:	mov	x29, sp
  41e778:	and	w8, w8, #0xff
  41e77c:	sub	w9, w8, #0x2
  41e780:	cmp	w9, #0xe
  41e784:	mov	x8, x0
  41e788:	b.hi	41e874 <_obstack_memory_used@@Base+0x8e1c>  // b.pmore
  41e78c:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x115a8>
  41e790:	add	x10, x10, #0xbb9
  41e794:	adr	x11, 41e7a8 <_obstack_memory_used@@Base+0x8d50>
  41e798:	ldrb	w12, [x10, x9]
  41e79c:	add	x11, x11, x12, lsl #2
  41e7a0:	mov	w0, wzr
  41e7a4:	br	x11
  41e7a8:	ldr	x9, [x1, #32]
  41e7ac:	ldr	x8, [x8, #40]
  41e7b0:	mov	w10, #0x18                  	// #24
  41e7b4:	ldr	x20, [x9, #56]
  41e7b8:	madd	x19, x19, x10, x8
  41e7bc:	mov	w8, #0x1                   	// #1
  41e7c0:	dup	v0.2d, x8
  41e7c4:	mov	w0, #0x8                   	// #8
  41e7c8:	str	q0, [x19]
  41e7cc:	bl	402730 <malloc@plt>
  41e7d0:	str	x0, [x19, #16]
  41e7d4:	cbz	x0, 41e8fc <_obstack_memory_used@@Base+0x8ea4>
  41e7d8:	mov	x8, x0
  41e7dc:	mov	w0, wzr
  41e7e0:	str	x20, [x8]
  41e7e4:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e7e8:	ldrb	w9, [x8, #176]
  41e7ec:	add	x11, x1, #0x20
  41e7f0:	ldr	x22, [x8, #40]
  41e7f4:	mov	w0, #0x10                  	// #16
  41e7f8:	orr	w9, w9, #0x1
  41e7fc:	strb	w9, [x8, #176]
  41e800:	ldp	x9, x10, [x1, #8]
  41e804:	mov	w8, #0x18                  	// #24
  41e808:	madd	x23, x19, x8, x22
  41e80c:	mov	w8, #0x2                   	// #2
  41e810:	add	x12, x9, #0x18
  41e814:	cmp	x9, #0x0
  41e818:	add	x9, x10, #0x18
  41e81c:	csel	x12, x11, x12, eq  // eq = none
  41e820:	cmp	x10, #0x0
  41e824:	csel	x9, x11, x9, eq  // eq = none
  41e828:	ldr	x10, [x12]
  41e82c:	ldr	x9, [x9]
  41e830:	ldr	x20, [x10, #56]
  41e834:	ldr	x21, [x9, #56]
  41e838:	str	x8, [x23]
  41e83c:	bl	402730 <malloc@plt>
  41e840:	str	x0, [x23, #16]
  41e844:	cbz	x0, 41e900 <_obstack_memory_used@@Base+0x8ea8>
  41e848:	mov	w9, #0x18                  	// #24
  41e84c:	madd	x9, x19, x9, x22
  41e850:	mov	x8, x0
  41e854:	cmp	x20, x21
  41e858:	add	x9, x9, #0x8
  41e85c:	b.ne	41e8c8 <_obstack_memory_used@@Base+0x8e70>  // b.any
  41e860:	mov	w10, #0x1                   	// #1
  41e864:	mov	w0, wzr
  41e868:	str	x10, [x9]
  41e86c:	str	x20, [x8]
  41e870:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e874:	ldr	x9, [x1, #32]
  41e878:	ldr	x8, [x8, #24]
  41e87c:	mov	w0, wzr
  41e880:	ldr	x9, [x9, #56]
  41e884:	str	x9, [x8, x19, lsl #3]
  41e888:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e88c:	ldr	x9, [x1, #32]
  41e890:	ldr	x20, [x9, #56]
  41e894:	ldr	x9, [x8, #24]
  41e898:	str	x20, [x9, x19, lsl #3]
  41e89c:	ldrb	w9, [x1, #48]
  41e8a0:	cmp	w9, #0x4
  41e8a4:	b.ne	41e8c0 <_obstack_memory_used@@Base+0x8e68>  // b.any
  41e8a8:	ldr	x8, [x8, #40]
  41e8ac:	mov	w9, #0x18                  	// #24
  41e8b0:	mov	w10, #0x1                   	// #1
  41e8b4:	dup	v0.2d, x10
  41e8b8:	madd	x19, x19, x9, x8
  41e8bc:	b	41e7c4 <_obstack_memory_used@@Base+0x8d6c>
  41e8c0:	mov	w0, wzr
  41e8c4:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e8c8:	mov	w10, #0x2                   	// #2
  41e8cc:	cmp	x20, x21
  41e8d0:	mov	w0, wzr
  41e8d4:	str	x10, [x9]
  41e8d8:	b.cs	41e8e4 <_obstack_memory_used@@Base+0x8e8c>  // b.hs, b.nlast
  41e8dc:	stp	x20, x21, [x8]
  41e8e0:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e8e4:	stp	x21, x20, [x8]
  41e8e8:	ldp	x20, x19, [sp, #48]
  41e8ec:	ldp	x22, x21, [sp, #32]
  41e8f0:	ldr	x23, [sp, #16]
  41e8f4:	ldp	x29, x30, [sp], #64
  41e8f8:	ret
  41e8fc:	stp	xzr, xzr, [x19]
  41e900:	mov	w0, #0xc                   	// #12
  41e904:	b	41e8e8 <_obstack_memory_used@@Base+0x8e90>
  41e908:	stp	x29, x30, [sp, #-80]!
  41e90c:	stp	x24, x23, [sp, #32]
  41e910:	stp	x22, x21, [sp, #48]
  41e914:	stp	x20, x19, [sp, #64]
  41e918:	ldr	x21, [x2, #8]
  41e91c:	ldr	x22, [x1]
  41e920:	mov	x19, x2
  41e924:	mov	x20, x0
  41e928:	str	x25, [sp, #16]
  41e92c:	mov	x29, sp
  41e930:	cbz	x21, 41e954 <_obstack_memory_used@@Base+0x8efc>
  41e934:	ldrb	w8, [x1, #56]
  41e938:	tbz	w8, #4, 41e954 <_obstack_memory_used@@Base+0x8efc>
  41e93c:	ldr	x8, [x19, #40]
  41e940:	cmp	x8, #0x3f
  41e944:	b.gt	41eabc <_obstack_memory_used@@Base+0x9064>
  41e948:	ldr	x9, [x22, #160]
  41e94c:	lsr	x8, x9, x8
  41e950:	tbz	w8, #0, 41eabc <_obstack_memory_used@@Base+0x9064>
  41e954:	ldr	w8, [x22, #128]
  41e958:	cmp	w8, #0xf
  41e95c:	b.eq	41ead8 <_obstack_memory_used@@Base+0x9080>  // b.none
  41e960:	ldr	x0, [x22, #112]
  41e964:	add	w9, w8, #0x1
  41e968:	sxtw	x8, w8
  41e96c:	add	x23, x0, x8, lsl #6
  41e970:	mov	w10, #0x8                   	// #8
  41e974:	mov	x11, #0xffffffffffffffff    	// #-1
  41e978:	str	w9, [x22, #128]
  41e97c:	str	xzr, [x23, #8]!
  41e980:	stp	xzr, xzr, [x23, #16]
  41e984:	str	xzr, [x23, #8]
  41e988:	str	w10, [x23, #48]
  41e98c:	stp	xzr, xzr, [x23, #32]
  41e990:	str	x11, [x23, #56]
  41e994:	ldr	w8, [x22, #128]
  41e998:	cmp	w8, #0xf
  41e99c:	b.eq	41eafc <_obstack_memory_used@@Base+0x90a4>  // b.none
  41e9a0:	ldr	x0, [x22, #112]
  41e9a4:	add	w9, w8, #0x1
  41e9a8:	sxtw	x8, w8
  41e9ac:	add	x24, x0, x8, lsl #6
  41e9b0:	mov	w10, #0x9                   	// #9
  41e9b4:	mov	x11, #0xffffffffffffffff    	// #-1
  41e9b8:	str	w9, [x22, #128]
  41e9bc:	str	xzr, [x24, #8]!
  41e9c0:	stp	xzr, xzr, [x24, #16]
  41e9c4:	str	xzr, [x24, #8]
  41e9c8:	str	w10, [x24, #48]
  41e9cc:	stp	xzr, xzr, [x24, #32]
  41e9d0:	str	x11, [x24, #56]
  41e9d4:	mov	x25, x24
  41e9d8:	cbz	x21, 41ea28 <_obstack_memory_used@@Base+0x8fd0>
  41e9dc:	ldr	w8, [x22, #128]
  41e9e0:	cmp	w8, #0xf
  41e9e4:	b.eq	41eb44 <_obstack_memory_used@@Base+0x90ec>  // b.none
  41e9e8:	ldr	x0, [x22, #112]
  41e9ec:	add	w9, w8, #0x1
  41e9f0:	sxtw	x8, w8
  41e9f4:	add	x25, x0, x8, lsl #6
  41e9f8:	mov	w10, #0x10                  	// #16
  41e9fc:	mov	x11, #0xffffffffffffffff    	// #-1
  41ea00:	str	w9, [x22, #128]
  41ea04:	str	xzr, [x25, #8]!
  41ea08:	stp	x21, x24, [x25, #8]
  41ea0c:	stp	xzr, xzr, [x25, #32]
  41ea10:	str	w10, [x25, #48]
  41ea14:	str	xzr, [x25, #24]
  41ea18:	str	x11, [x25, #56]
  41ea1c:	str	x25, [x21]
  41ea20:	cbz	x24, 41ea28 <_obstack_memory_used@@Base+0x8fd0>
  41ea24:	str	x25, [x24]
  41ea28:	ldr	w8, [x22, #128]
  41ea2c:	cmp	w8, #0xf
  41ea30:	b.eq	41eb20 <_obstack_memory_used@@Base+0x90c8>  // b.none
  41ea34:	ldr	x0, [x22, #112]
  41ea38:	add	w9, w8, #0x1
  41ea3c:	sxtw	x8, w8
  41ea40:	add	x21, x0, x8, lsl #6
  41ea44:	mov	w10, #0x10                  	// #16
  41ea48:	mov	x11, #0xffffffffffffffff    	// #-1
  41ea4c:	str	w9, [x22, #128]
  41ea50:	str	xzr, [x21, #8]!
  41ea54:	stp	x23, x25, [x21, #8]
  41ea58:	stp	xzr, xzr, [x21, #32]
  41ea5c:	str	w10, [x21, #48]
  41ea60:	str	xzr, [x21, #24]
  41ea64:	str	x11, [x21, #56]
  41ea68:	cbz	x23, 41ea70 <_obstack_memory_used@@Base+0x9018>
  41ea6c:	str	x21, [x23]
  41ea70:	cbz	x25, 41ea78 <_obstack_memory_used@@Base+0x9020>
  41ea74:	str	x21, [x25]
  41ea78:	cbz	x24, 41eb88 <_obstack_memory_used@@Base+0x9130>
  41ea7c:	cbz	x23, 41eb88 <_obstack_memory_used@@Base+0x9130>
  41ea80:	cbz	x25, 41eb88 <_obstack_memory_used@@Base+0x9130>
  41ea84:	cbz	x21, 41eb88 <_obstack_memory_used@@Base+0x9130>
  41ea88:	ldr	x8, [x19, #40]
  41ea8c:	str	x8, [x24, #40]
  41ea90:	str	x8, [x23, #40]
  41ea94:	ldr	w8, [x19, #48]
  41ea98:	ldr	w9, [x24, #48]
  41ea9c:	and	w8, w8, #0x80000
  41eaa0:	and	w9, w9, #0xfff7ffff
  41eaa4:	orr	w9, w9, w8
  41eaa8:	str	w9, [x24, #48]
  41eaac:	ldr	w9, [x23, #48]
  41eab0:	and	w9, w9, #0xfff7ffff
  41eab4:	orr	w8, w9, w8
  41eab8:	str	w8, [x23, #48]
  41eabc:	mov	x0, x21
  41eac0:	ldp	x20, x19, [sp, #64]
  41eac4:	ldp	x22, x21, [sp, #48]
  41eac8:	ldp	x24, x23, [sp, #32]
  41eacc:	ldr	x25, [sp, #16]
  41ead0:	ldp	x29, x30, [sp], #80
  41ead4:	ret
  41ead8:	mov	w0, #0x3c8                 	// #968
  41eadc:	bl	402730 <malloc@plt>
  41eae0:	cbz	x0, 41eb68 <_obstack_memory_used@@Base+0x9110>
  41eae4:	ldr	x9, [x22, #112]
  41eae8:	mov	w8, wzr
  41eaec:	str	x9, [x0]
  41eaf0:	str	x0, [x22, #112]
  41eaf4:	str	wzr, [x22, #128]
  41eaf8:	b	41e964 <_obstack_memory_used@@Base+0x8f0c>
  41eafc:	mov	w0, #0x3c8                 	// #968
  41eb00:	bl	402730 <malloc@plt>
  41eb04:	cbz	x0, 41eb70 <_obstack_memory_used@@Base+0x9118>
  41eb08:	ldr	x9, [x22, #112]
  41eb0c:	mov	w8, wzr
  41eb10:	str	x9, [x0]
  41eb14:	str	x0, [x22, #112]
  41eb18:	str	wzr, [x22, #128]
  41eb1c:	b	41e9a4 <_obstack_memory_used@@Base+0x8f4c>
  41eb20:	mov	w0, #0x3c8                 	// #968
  41eb24:	bl	402730 <malloc@plt>
  41eb28:	cbz	x0, 41eb80 <_obstack_memory_used@@Base+0x9128>
  41eb2c:	ldr	x9, [x22, #112]
  41eb30:	mov	w8, wzr
  41eb34:	str	x9, [x0]
  41eb38:	str	x0, [x22, #112]
  41eb3c:	str	wzr, [x22, #128]
  41eb40:	b	41ea38 <_obstack_memory_used@@Base+0x8fe0>
  41eb44:	mov	w0, #0x3c8                 	// #968
  41eb48:	bl	402730 <malloc@plt>
  41eb4c:	cbz	x0, 41eb98 <_obstack_memory_used@@Base+0x9140>
  41eb50:	ldr	x9, [x22, #112]
  41eb54:	mov	w8, wzr
  41eb58:	str	x9, [x0]
  41eb5c:	str	x0, [x22, #112]
  41eb60:	str	wzr, [x22, #128]
  41eb64:	b	41e9ec <_obstack_memory_used@@Base+0x8f94>
  41eb68:	mov	x23, xzr
  41eb6c:	b	41e994 <_obstack_memory_used@@Base+0x8f3c>
  41eb70:	mov	x24, xzr
  41eb74:	mov	x25, x24
  41eb78:	cbnz	x21, 41e9dc <_obstack_memory_used@@Base+0x8f84>
  41eb7c:	b	41ea28 <_obstack_memory_used@@Base+0x8fd0>
  41eb80:	mov	x21, xzr
  41eb84:	cbnz	x24, 41ea7c <_obstack_memory_used@@Base+0x9024>
  41eb88:	mov	w8, #0xc                   	// #12
  41eb8c:	mov	x21, xzr
  41eb90:	str	w8, [x20]
  41eb94:	b	41eabc <_obstack_memory_used@@Base+0x9064>
  41eb98:	mov	x25, xzr
  41eb9c:	b	41ea28 <_obstack_memory_used@@Base+0x8fd0>
  41eba0:	stp	x29, x30, [sp, #-80]!
  41eba4:	stp	x26, x25, [sp, #16]
  41eba8:	stp	x24, x23, [sp, #32]
  41ebac:	stp	x22, x21, [sp, #48]
  41ebb0:	stp	x20, x19, [sp, #64]
  41ebb4:	ldp	x24, x8, [x0, #8]
  41ebb8:	mov	x20, x2
  41ebbc:	mov	x19, x0
  41ebc0:	mov	x21, x1
  41ebc4:	cmp	x8, x24
  41ebc8:	mov	x29, sp
  41ebcc:	b.cs	41ec98 <_obstack_memory_used@@Base+0x9240>  // b.hs, b.nlast
  41ebd0:	ldr	x9, [x19]
  41ebd4:	add	x8, x9, x8, lsl #4
  41ebd8:	stp	x21, x20, [x8]
  41ebdc:	ldr	x8, [x19]
  41ebe0:	ldr	x9, [x19, #16]
  41ebe4:	add	x9, x8, x9, lsl #4
  41ebe8:	ldr	w10, [x9, #8]
  41ebec:	and	w8, w20, #0xff
  41ebf0:	cmp	w8, #0x5
  41ebf4:	and	w10, w10, #0xfffc00ff
  41ebf8:	str	w10, [x9, #8]
  41ebfc:	b.ne	41ec14 <_obstack_memory_used@@Base+0x91bc>  // b.any
  41ec00:	ldr	w9, [x19, #180]
  41ec04:	cmp	w9, #0x1
  41ec08:	b.le	41ec14 <_obstack_memory_used@@Base+0x91bc>
  41ec0c:	mov	w8, #0x100000              	// #1048576
  41ec10:	b	41ec20 <_obstack_memory_used@@Base+0x91c8>
  41ec14:	cmp	w8, #0x6
  41ec18:	cset	w8, eq  // eq = none
  41ec1c:	lsl	w8, w8, #20
  41ec20:	ldr	x9, [x19]
  41ec24:	ldr	x10, [x19, #16]
  41ec28:	add	x9, x9, x10, lsl #4
  41ec2c:	ldr	w10, [x9, #8]
  41ec30:	and	w10, w10, #0xffefffff
  41ec34:	orr	w8, w10, w8
  41ec38:	str	w8, [x9, #8]
  41ec3c:	ldp	x9, x8, [x19, #16]
  41ec40:	mov	x10, #0xffffffffffffffff    	// #-1
  41ec44:	str	x10, [x8, x9, lsl #3]
  41ec48:	ldr	x8, [x19, #40]
  41ec4c:	ldr	x9, [x19, #16]
  41ec50:	mov	w10, #0x18                  	// #24
  41ec54:	madd	x8, x9, x10, x8
  41ec58:	stp	xzr, xzr, [x8]
  41ec5c:	str	xzr, [x8, #16]
  41ec60:	ldr	x8, [x19, #48]
  41ec64:	ldr	x9, [x19, #16]
  41ec68:	madd	x8, x9, x10, x8
  41ec6c:	stp	xzr, xzr, [x8]
  41ec70:	str	xzr, [x8, #16]
  41ec74:	ldr	x0, [x19, #16]
  41ec78:	add	x8, x0, #0x1
  41ec7c:	str	x8, [x19, #16]
  41ec80:	ldp	x20, x19, [sp, #64]
  41ec84:	ldp	x22, x21, [sp, #48]
  41ec88:	ldp	x24, x23, [sp, #32]
  41ec8c:	ldp	x26, x25, [sp, #16]
  41ec90:	ldp	x29, x30, [sp], #80
  41ec94:	ret
  41ec98:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41ec9c:	lsl	x26, x24, #1
  41eca0:	movk	x8, #0xaaa, lsl #48
  41eca4:	cmp	x26, x8
  41eca8:	b.hi	41ed38 <_obstack_memory_used@@Base+0x92e0>  // b.pmore
  41ecac:	ldr	x0, [x19]
  41ecb0:	lsl	x1, x24, #5
  41ecb4:	bl	402870 <realloc@plt>
  41ecb8:	cbz	x0, 41ed38 <_obstack_memory_used@@Base+0x92e0>
  41ecbc:	ldr	x8, [x19, #24]
  41ecc0:	lsl	x23, x24, #4
  41ecc4:	str	x0, [x19]
  41ecc8:	mov	x1, x23
  41eccc:	mov	x0, x8
  41ecd0:	bl	402870 <realloc@plt>
  41ecd4:	ldr	x8, [x19, #32]
  41ecd8:	mov	x22, x0
  41ecdc:	mov	x1, x23
  41ece0:	mov	x0, x8
  41ece4:	bl	402870 <realloc@plt>
  41ece8:	mov	x23, x0
  41ecec:	ldr	x0, [x19, #40]
  41ecf0:	add	x8, x24, x24, lsl #1
  41ecf4:	lsl	x25, x8, #4
  41ecf8:	mov	x1, x25
  41ecfc:	bl	402870 <realloc@plt>
  41ed00:	ldr	x8, [x19, #48]
  41ed04:	mov	x24, x0
  41ed08:	mov	x1, x25
  41ed0c:	mov	x0, x8
  41ed10:	bl	402870 <realloc@plt>
  41ed14:	cbz	x22, 41ed40 <_obstack_memory_used@@Base+0x92e8>
  41ed18:	cbz	x23, 41ed40 <_obstack_memory_used@@Base+0x92e8>
  41ed1c:	cbz	x24, 41ed40 <_obstack_memory_used@@Base+0x92e8>
  41ed20:	cbz	x0, 41ed40 <_obstack_memory_used@@Base+0x92e8>
  41ed24:	ldr	x8, [x19, #16]
  41ed28:	stp	x22, x23, [x19, #24]
  41ed2c:	stp	x24, x0, [x19, #40]
  41ed30:	str	x26, [x19, #8]
  41ed34:	b	41ebd0 <_obstack_memory_used@@Base+0x9178>
  41ed38:	mov	x0, #0xffffffffffffffff    	// #-1
  41ed3c:	b	41ec80 <_obstack_memory_used@@Base+0x9228>
  41ed40:	mov	x19, x0
  41ed44:	mov	x0, x22
  41ed48:	bl	402a10 <free@plt>
  41ed4c:	mov	x0, x23
  41ed50:	bl	402a10 <free@plt>
  41ed54:	mov	x0, x24
  41ed58:	bl	402a10 <free@plt>
  41ed5c:	mov	x0, x19
  41ed60:	bl	402a10 <free@plt>
  41ed64:	mov	x0, #0xffffffffffffffff    	// #-1
  41ed68:	b	41ec80 <_obstack_memory_used@@Base+0x9228>
  41ed6c:	sub	sp, sp, #0x90
  41ed70:	stp	x29, x30, [sp, #64]
  41ed74:	stp	x26, x25, [sp, #80]
  41ed78:	stp	x24, x23, [sp, #96]
  41ed7c:	stp	x22, x21, [sp, #112]
  41ed80:	stp	x20, x19, [sp, #128]
  41ed84:	ldr	x23, [x1, #40]
  41ed88:	mov	w8, #0x18                  	// #24
  41ed8c:	mov	x19, x0
  41ed90:	add	x29, sp, #0x40
  41ed94:	madd	x25, x2, x8, x23
  41ed98:	ldr	x8, [x25, #8]!
  41ed9c:	mov	w21, w3
  41eda0:	mov	x20, x2
  41eda4:	mov	x22, x1
  41eda8:	add	x24, x8, #0x1
  41edac:	lsl	x0, x24, #3
  41edb0:	stp	x24, xzr, [sp, #32]
  41edb4:	bl	402730 <malloc@plt>
  41edb8:	str	x0, [sp, #48]
  41edbc:	cbz	x0, 41efd8 <_obstack_memory_used@@Base+0x9580>
  41edc0:	ldr	x8, [x22, #48]
  41edc4:	mov	w9, #0x18                  	// #24
  41edc8:	madd	x8, x20, x9, x8
  41edcc:	mov	x9, #0xffffffffffffffff    	// #-1
  41edd0:	str	x9, [x8, #8]
  41edd4:	ldr	x9, [x22]
  41edd8:	add	x8, x9, x20, lsl #4
  41eddc:	ldr	w8, [x8, #8]
  41ede0:	ubfx	w4, w8, #8, #10
  41ede4:	cbz	w4, 41ee30 <_obstack_memory_used@@Base+0x93d8>
  41ede8:	ldr	x10, [x25]
  41edec:	cbz	x10, 41ee30 <_obstack_memory_used@@Base+0x93d8>
  41edf0:	mov	w10, #0x18                  	// #24
  41edf4:	madd	x10, x20, x10, x23
  41edf8:	ldr	x10, [x10, #16]
  41edfc:	ldr	x10, [x10]
  41ee00:	add	x9, x9, x10, lsl #4
  41ee04:	ldrb	w9, [x9, #10]
  41ee08:	tbnz	w9, #2, 41ee30 <_obstack_memory_used@@Base+0x93d8>
  41ee0c:	mov	x0, x22
  41ee10:	mov	x1, x20
  41ee14:	mov	x2, x20
  41ee18:	mov	x3, x20
  41ee1c:	bl	41f068 <_obstack_memory_used@@Base+0x9610>
  41ee20:	cbnz	w0, 41ef94 <_obstack_memory_used@@Base+0x953c>
  41ee24:	ldr	x8, [x22]
  41ee28:	add	x8, x8, x20, lsl #4
  41ee2c:	ldr	w8, [x8, #8]
  41ee30:	tbz	w8, #3, 41eef8 <_obstack_memory_used@@Base+0x94a0>
  41ee34:	ldr	x8, [x22, #40]
  41ee38:	mov	w9, #0x18                  	// #24
  41ee3c:	madd	x9, x20, x9, x8
  41ee40:	ldr	x9, [x9, #8]
  41ee44:	cmp	x9, #0x1
  41ee48:	b.lt	41eef8 <_obstack_memory_used@@Base+0x94a0>  // b.tstop
  41ee4c:	mov	w25, wzr
  41ee50:	mov	x24, xzr
  41ee54:	mov	w26, #0x18                  	// #24
  41ee58:	b	41ee78 <_obstack_memory_used@@Base+0x9420>
  41ee5c:	mov	w25, #0x1                   	// #1
  41ee60:	ldr	x8, [x22, #40]
  41ee64:	add	x24, x24, #0x1
  41ee68:	madd	x9, x20, x26, x8
  41ee6c:	ldr	x9, [x9, #8]
  41ee70:	cmp	x24, x9
  41ee74:	b.ge	41ef1c <_obstack_memory_used@@Base+0x94c4>  // b.tcont
  41ee78:	madd	x8, x20, x26, x8
  41ee7c:	ldr	x8, [x8, #16]
  41ee80:	ldr	x23, [x8, x24, lsl #3]
  41ee84:	ldr	x8, [x22, #48]
  41ee88:	madd	x9, x23, x26, x8
  41ee8c:	ldr	x9, [x9, #8]
  41ee90:	cmn	x9, #0x1
  41ee94:	b.eq	41ee5c <_obstack_memory_used@@Base+0x9404>  // b.none
  41ee98:	cbnz	x9, 41eeb8 <_obstack_memory_used@@Base+0x9460>
  41ee9c:	mov	x0, sp
  41eea0:	mov	x1, x22
  41eea4:	mov	x2, x23
  41eea8:	mov	w3, wzr
  41eeac:	bl	41ed6c <_obstack_memory_used@@Base+0x9314>
  41eeb0:	cbz	w0, 41eecc <_obstack_memory_used@@Base+0x9474>
  41eeb4:	b	41ef94 <_obstack_memory_used@@Base+0x953c>
  41eeb8:	madd	x8, x23, x26, x8
  41eebc:	ldr	x9, [x8, #16]
  41eec0:	ldr	q0, [x8]
  41eec4:	str	x9, [sp, #16]
  41eec8:	str	q0, [sp]
  41eecc:	add	x0, sp, #0x20
  41eed0:	mov	x1, sp
  41eed4:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  41eed8:	cbnz	w0, 41ef94 <_obstack_memory_used@@Base+0x953c>
  41eedc:	ldr	x8, [x22, #48]
  41eee0:	madd	x8, x23, x26, x8
  41eee4:	ldr	x8, [x8, #8]
  41eee8:	cbnz	x8, 41ee60 <_obstack_memory_used@@Base+0x9408>
  41eeec:	ldr	x0, [sp, #16]
  41eef0:	bl	402a10 <free@plt>
  41eef4:	b	41ee5c <_obstack_memory_used@@Base+0x9404>
  41eef8:	mov	w23, #0x1                   	// #1
  41eefc:	cbz	x24, 41ef2c <_obstack_memory_used@@Base+0x94d4>
  41ef00:	ldr	x25, [sp, #40]
  41ef04:	cbnz	x25, 41efb0 <_obstack_memory_used@@Base+0x9558>
  41ef08:	ldr	x8, [sp, #48]
  41ef0c:	mov	w9, #0x1                   	// #1
  41ef10:	str	x20, [x8]
  41ef14:	str	x9, [sp, #40]
  41ef18:	b	41ef4c <_obstack_memory_used@@Base+0x94f4>
  41ef1c:	ldr	x24, [sp, #32]
  41ef20:	tst	w25, #0x1
  41ef24:	cset	w23, eq  // eq = none
  41ef28:	cbnz	x24, 41ef00 <_obstack_memory_used@@Base+0x94a8>
  41ef2c:	mov	w8, #0x1                   	// #1
  41ef30:	dup	v0.2d, x8
  41ef34:	mov	w0, #0x8                   	// #8
  41ef38:	str	q0, [sp, #32]
  41ef3c:	bl	402730 <malloc@plt>
  41ef40:	str	x0, [sp, #48]
  41ef44:	cbz	x0, 41efe0 <_obstack_memory_used@@Base+0x9588>
  41ef48:	str	x20, [x0]
  41ef4c:	ldr	x8, [x22, #48]
  41ef50:	orr	w9, w23, w21
  41ef54:	tbz	w9, #0, 41ef74 <_obstack_memory_used@@Base+0x951c>
  41ef58:	ldr	x9, [sp, #48]
  41ef5c:	ldr	q0, [sp, #32]
  41ef60:	mov	w10, #0x18                  	// #24
  41ef64:	madd	x8, x20, x10, x8
  41ef68:	str	x9, [x8, #16]
  41ef6c:	str	q0, [x8]
  41ef70:	b	41ef80 <_obstack_memory_used@@Base+0x9528>
  41ef74:	mov	w9, #0x18                  	// #24
  41ef78:	madd	x8, x20, x9, x8
  41ef7c:	str	xzr, [x8, #8]
  41ef80:	ldr	x8, [sp, #48]
  41ef84:	ldr	q0, [sp, #32]
  41ef88:	mov	w0, wzr
  41ef8c:	str	x8, [x19, #16]
  41ef90:	str	q0, [x19]
  41ef94:	ldp	x20, x19, [sp, #128]
  41ef98:	ldp	x22, x21, [sp, #112]
  41ef9c:	ldp	x24, x23, [sp, #96]
  41efa0:	ldp	x26, x25, [sp, #80]
  41efa4:	ldp	x29, x30, [sp, #64]
  41efa8:	add	sp, sp, #0x90
  41efac:	ret
  41efb0:	cmp	x24, x25
  41efb4:	b.ne	41efec <_obstack_memory_used@@Base+0x9594>  // b.any
  41efb8:	ldr	x0, [sp, #48]
  41efbc:	lsl	x8, x24, #1
  41efc0:	lsl	x1, x24, #4
  41efc4:	str	x8, [sp, #32]
  41efc8:	bl	402870 <realloc@plt>
  41efcc:	cbz	x0, 41efd8 <_obstack_memory_used@@Base+0x9580>
  41efd0:	str	x0, [sp, #48]
  41efd4:	b	41eff0 <_obstack_memory_used@@Base+0x9598>
  41efd8:	mov	w0, #0xc                   	// #12
  41efdc:	b	41ef94 <_obstack_memory_used@@Base+0x953c>
  41efe0:	stp	xzr, xzr, [sp, #32]
  41efe4:	mov	w0, #0xc                   	// #12
  41efe8:	b	41ef94 <_obstack_memory_used@@Base+0x953c>
  41efec:	ldr	x0, [sp, #48]
  41eff0:	ldr	x8, [x0]
  41eff4:	cmp	x8, x20
  41eff8:	b.le	41f024 <_obstack_memory_used@@Base+0x95cc>
  41effc:	cmp	x25, #0x1
  41f000:	b.lt	41f054 <_obstack_memory_used@@Base+0x95fc>  // b.tstop
  41f004:	mov	x9, x25
  41f008:	add	x10, x0, x9, lsl #3
  41f00c:	ldur	x11, [x10, #-8]
  41f010:	subs	x8, x9, #0x1
  41f014:	mov	x9, x8
  41f018:	str	x11, [x10]
  41f01c:	b.gt	41f008 <_obstack_memory_used@@Base+0x95b0>
  41f020:	b	41f058 <_obstack_memory_used@@Base+0x9600>
  41f024:	add	x8, x0, x25, lsl #3
  41f028:	ldur	x9, [x8, #-8]
  41f02c:	mov	x8, x25
  41f030:	cmp	x9, x20
  41f034:	b.le	41f058 <_obstack_memory_used@@Base+0x9600>
  41f038:	add	x10, x0, x8, lsl #3
  41f03c:	str	x9, [x10]
  41f040:	ldur	x9, [x10, #-16]
  41f044:	sub	x8, x8, #0x1
  41f048:	cmp	x9, x20
  41f04c:	b.gt	41f038 <_obstack_memory_used@@Base+0x95e0>
  41f050:	b	41f058 <_obstack_memory_used@@Base+0x9600>
  41f054:	mov	x8, x25
  41f058:	str	x20, [x0, x8, lsl #3]
  41f05c:	add	x8, x25, #0x1
  41f060:	str	x8, [sp, #40]
  41f064:	b	41ef4c <_obstack_memory_used@@Base+0x94f4>
  41f068:	stp	x29, x30, [sp, #-96]!
  41f06c:	stp	x26, x25, [sp, #32]
  41f070:	stp	x24, x23, [sp, #48]
  41f074:	stp	x22, x21, [sp, #64]
  41f078:	stp	x20, x19, [sp, #80]
  41f07c:	mov	w19, w4
  41f080:	mov	x20, x3
  41f084:	mov	x22, x2
  41f088:	mov	x23, x1
  41f08c:	mov	x21, x0
  41f090:	mov	w25, #0x18                  	// #24
  41f094:	str	x27, [sp, #16]
  41f098:	mov	x29, sp
  41f09c:	ubfiz	w26, w19, #8, #10
  41f0a0:	mov	x27, x23
  41f0a4:	b	41f158 <_obstack_memory_used@@Base+0x9700>
  41f0a8:	ldr	x9, [x21, #24]
  41f0ac:	ldr	x10, [x21, #40]
  41f0b0:	mov	x0, x21
  41f0b4:	ldr	x24, [x9, x27, lsl #3]
  41f0b8:	madd	x9, x22, x25, x10
  41f0bc:	str	xzr, [x9, #8]
  41f0c0:	add	x8, x8, x24, lsl #4
  41f0c4:	ldp	x1, x2, [x8]
  41f0c8:	bl	41eba0 <_obstack_memory_used@@Base+0x9148>
  41f0cc:	cmn	x0, #0x1
  41f0d0:	b.eq	41f434 <_obstack_memory_used@@Base+0x99dc>  // b.none
  41f0d4:	ldr	x8, [x21]
  41f0d8:	lsl	x9, x0, #4
  41f0dc:	mov	x23, x0
  41f0e0:	mov	x1, x23
  41f0e4:	add	x8, x8, x9
  41f0e8:	ldr	w10, [x8, #8]
  41f0ec:	and	w10, w10, #0xfffc00ff
  41f0f0:	orr	w10, w10, w26
  41f0f4:	str	w10, [x8, #8]
  41f0f8:	ldr	x8, [x21]
  41f0fc:	add	x10, x8, x24, lsl #4
  41f100:	ldr	w10, [x10, #8]
  41f104:	add	x8, x8, x9
  41f108:	ldr	w11, [x8, #8]
  41f10c:	and	w10, w10, #0x3ff00
  41f110:	orr	w10, w10, w11
  41f114:	str	w10, [x8, #8]
  41f118:	ldr	x8, [x21]
  41f11c:	add	x8, x8, x9
  41f120:	ldr	w9, [x8, #8]
  41f124:	orr	w9, w9, #0x40000
  41f128:	str	w9, [x8, #8]
  41f12c:	ldr	x8, [x21, #32]
  41f130:	str	x24, [x8, x0, lsl #3]
  41f134:	ldr	x8, [x21, #24]
  41f138:	ldr	x9, [x8, x27, lsl #3]
  41f13c:	str	x9, [x8, x22, lsl #3]
  41f140:	ldr	x8, [x21, #40]
  41f144:	madd	x0, x22, x25, x8
  41f148:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f14c:	mov	x27, x24
  41f150:	mov	x22, x23
  41f154:	tbz	w0, #0, 41f434 <_obstack_memory_used@@Base+0x99dc>
  41f158:	ldr	x8, [x21]
  41f15c:	add	x10, x8, x27, lsl #4
  41f160:	ldrb	w9, [x10, #8]!
  41f164:	cmp	w9, #0x4
  41f168:	b.eq	41f0a8 <_obstack_memory_used@@Base+0x9650>  // b.none
  41f16c:	ldr	x9, [x21, #40]
  41f170:	madd	x11, x27, x25, x9
  41f174:	ldr	x11, [x11, #8]
  41f178:	cbz	x11, 41f3ec <_obstack_memory_used@@Base+0x9994>
  41f17c:	madd	x12, x27, x25, x9
  41f180:	ldr	x12, [x12, #16]
  41f184:	cmp	x11, #0x1
  41f188:	ldr	x23, [x12]
  41f18c:	madd	x12, x22, x25, x9
  41f190:	str	xzr, [x12, #8]
  41f194:	b.eq	41f344 <_obstack_memory_used@@Base+0x98ec>  // b.none
  41f198:	ldr	x12, [x21, #16]
  41f19c:	sub	x1, x12, #0x1
  41f1a0:	cmp	x1, #0x1
  41f1a4:	b.lt	41f1ec <_obstack_memory_used@@Base+0x9794>  // b.tstop
  41f1a8:	add	x10, x8, x1, lsl #4
  41f1ac:	ldr	w11, [x10, #8]
  41f1b0:	tbz	w11, #18, 41f1ec <_obstack_memory_used@@Base+0x9794>
  41f1b4:	ldr	x10, [x21, #32]
  41f1b8:	add	x12, x8, x12, lsl #4
  41f1bc:	sub	x12, x12, #0x18
  41f1c0:	ldr	x13, [x10, x1, lsl #3]
  41f1c4:	cmp	x13, x23
  41f1c8:	b.ne	41f1d8 <_obstack_memory_used@@Base+0x9780>  // b.any
  41f1cc:	ubfx	w11, w11, #8, #10
  41f1d0:	cmp	w11, w19
  41f1d4:	b.eq	41f334 <_obstack_memory_used@@Base+0x98dc>  // b.none
  41f1d8:	ldr	w11, [x12], #-16
  41f1dc:	sub	x1, x1, #0x1
  41f1e0:	cmp	x1, #0x1
  41f1e4:	b.lt	41f1ec <_obstack_memory_used@@Base+0x9794>  // b.tstop
  41f1e8:	tbnz	w11, #18, 41f1c0 <_obstack_memory_used@@Base+0x9768>
  41f1ec:	add	x8, x8, x23, lsl #4
  41f1f0:	ldp	x1, x2, [x8]
  41f1f4:	mov	x0, x21
  41f1f8:	bl	41eba0 <_obstack_memory_used@@Base+0x9148>
  41f1fc:	cmn	x0, #0x1
  41f200:	b.eq	41f434 <_obstack_memory_used@@Base+0x99dc>  // b.none
  41f204:	ldr	x8, [x21]
  41f208:	lsl	x9, x0, #4
  41f20c:	mov	x24, x0
  41f210:	mov	x1, x24
  41f214:	add	x8, x8, x9
  41f218:	ldr	w10, [x8, #8]
  41f21c:	and	w10, w10, #0xfffc00ff
  41f220:	orr	w10, w10, w26
  41f224:	str	w10, [x8, #8]
  41f228:	ldr	x8, [x21]
  41f22c:	add	x10, x8, x23, lsl #4
  41f230:	ldr	w10, [x10, #8]
  41f234:	add	x8, x8, x9
  41f238:	ldr	w11, [x8, #8]
  41f23c:	and	w10, w10, #0x3ff00
  41f240:	orr	w10, w10, w11
  41f244:	str	w10, [x8, #8]
  41f248:	ldr	x8, [x21]
  41f24c:	add	x8, x8, x9
  41f250:	ldr	w9, [x8, #8]
  41f254:	orr	w9, w9, #0x40000
  41f258:	str	w9, [x8, #8]
  41f25c:	ldr	x8, [x21, #32]
  41f260:	str	x23, [x8, x0, lsl #3]
  41f264:	ldr	x8, [x21, #40]
  41f268:	madd	x0, x22, x25, x8
  41f26c:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f270:	tbz	w0, #0, 41f434 <_obstack_memory_used@@Base+0x99dc>
  41f274:	mov	x0, x21
  41f278:	mov	x1, x23
  41f27c:	mov	x2, x24
  41f280:	mov	x3, x20
  41f284:	mov	w4, w19
  41f288:	bl	41f068 <_obstack_memory_used@@Base+0x9610>
  41f28c:	cbnz	w0, 41f3fc <_obstack_memory_used@@Base+0x99a4>
  41f290:	ldr	x8, [x21, #40]
  41f294:	ldr	x9, [x21]
  41f298:	mov	x0, x21
  41f29c:	madd	x8, x27, x25, x8
  41f2a0:	ldr	x8, [x8, #16]
  41f2a4:	ldr	x27, [x8, #8]
  41f2a8:	add	x8, x9, x27, lsl #4
  41f2ac:	ldp	x1, x2, [x8]
  41f2b0:	bl	41eba0 <_obstack_memory_used@@Base+0x9148>
  41f2b4:	cmn	x0, #0x1
  41f2b8:	b.eq	41f434 <_obstack_memory_used@@Base+0x99dc>  // b.none
  41f2bc:	ldr	x8, [x21]
  41f2c0:	lsl	x9, x0, #4
  41f2c4:	mov	x23, x0
  41f2c8:	mov	x1, x23
  41f2cc:	add	x8, x8, x9
  41f2d0:	ldr	w10, [x8, #8]
  41f2d4:	and	w10, w10, #0xfffc00ff
  41f2d8:	orr	w10, w10, w26
  41f2dc:	str	w10, [x8, #8]
  41f2e0:	ldr	x8, [x21]
  41f2e4:	add	x10, x8, x27, lsl #4
  41f2e8:	ldr	w10, [x10, #8]
  41f2ec:	add	x8, x8, x9
  41f2f0:	ldr	w11, [x8, #8]
  41f2f4:	and	w10, w10, #0x3ff00
  41f2f8:	orr	w10, w10, w11
  41f2fc:	str	w10, [x8, #8]
  41f300:	ldr	x8, [x21]
  41f304:	add	x8, x8, x9
  41f308:	ldr	w9, [x8, #8]
  41f30c:	orr	w9, w9, #0x40000
  41f310:	str	w9, [x8, #8]
  41f314:	ldr	x8, [x21, #32]
  41f318:	str	x27, [x8, x0, lsl #3]
  41f31c:	ldr	x8, [x21, #40]
  41f320:	madd	x0, x22, x25, x8
  41f324:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f328:	mov	x22, x23
  41f32c:	tbnz	w0, #0, 41f158 <_obstack_memory_used@@Base+0x9700>
  41f330:	b	41f434 <_obstack_memory_used@@Base+0x99dc>
  41f334:	madd	x0, x22, x25, x9
  41f338:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f33c:	tbnz	w0, #0, 41f290 <_obstack_memory_used@@Base+0x9838>
  41f340:	b	41f434 <_obstack_memory_used@@Base+0x99dc>
  41f344:	cmp	x27, x20
  41f348:	b.ne	41f354 <_obstack_memory_used@@Base+0x98fc>  // b.any
  41f34c:	cmp	x22, x27
  41f350:	b.ne	41f418 <_obstack_memory_used@@Base+0x99c0>  // b.any
  41f354:	add	x8, x8, x23, lsl #4
  41f358:	ldp	x1, x2, [x8]
  41f35c:	ldr	w26, [x10]
  41f360:	mov	x0, x21
  41f364:	bl	41eba0 <_obstack_memory_used@@Base+0x9148>
  41f368:	cmn	x0, #0x1
  41f36c:	b.eq	41f434 <_obstack_memory_used@@Base+0x99dc>  // b.none
  41f370:	ldr	x8, [x21]
  41f374:	lsl	x9, x0, #4
  41f378:	ubfx	w11, w26, #8, #10
  41f37c:	orr	w19, w11, w19
  41f380:	add	x8, x8, x9
  41f384:	ldr	w10, [x8, #8]
  41f388:	mov	x24, x0
  41f38c:	mov	x1, x24
  41f390:	bfi	w10, w19, #8, #10
  41f394:	str	w10, [x8, #8]
  41f398:	ldr	x8, [x21]
  41f39c:	add	x10, x8, x23, lsl #4
  41f3a0:	ldr	w10, [x10, #8]
  41f3a4:	add	x8, x8, x9
  41f3a8:	ldr	w11, [x8, #8]
  41f3ac:	and	w10, w10, #0x3ff00
  41f3b0:	orr	w10, w10, w11
  41f3b4:	str	w10, [x8, #8]
  41f3b8:	ldr	x8, [x21]
  41f3bc:	add	x8, x8, x9
  41f3c0:	ldr	w9, [x8, #8]
  41f3c4:	orr	w9, w9, #0x40000
  41f3c8:	str	w9, [x8, #8]
  41f3cc:	ldr	x8, [x21, #32]
  41f3d0:	str	x23, [x8, x0, lsl #3]
  41f3d4:	ldr	x8, [x21, #40]
  41f3d8:	madd	x0, x22, x25, x8
  41f3dc:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f3e0:	mov	x22, x24
  41f3e4:	tbnz	w0, #0, 41f09c <_obstack_memory_used@@Base+0x9644>
  41f3e8:	b	41f434 <_obstack_memory_used@@Base+0x99dc>
  41f3ec:	ldr	x8, [x21, #24]
  41f3f0:	mov	w0, wzr
  41f3f4:	ldr	x9, [x8, x27, lsl #3]
  41f3f8:	str	x9, [x8, x22, lsl #3]
  41f3fc:	ldp	x20, x19, [sp, #80]
  41f400:	ldp	x22, x21, [sp, #64]
  41f404:	ldp	x24, x23, [sp, #48]
  41f408:	ldp	x26, x25, [sp, #32]
  41f40c:	ldr	x27, [sp, #16]
  41f410:	ldp	x29, x30, [sp], #96
  41f414:	ret
  41f418:	mov	w8, #0x18                  	// #24
  41f41c:	madd	x0, x22, x8, x9
  41f420:	mov	x1, x23
  41f424:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  41f428:	tbz	w0, #0, 41f434 <_obstack_memory_used@@Base+0x99dc>
  41f42c:	mov	w0, wzr
  41f430:	b	41f3fc <_obstack_memory_used@@Base+0x99a4>
  41f434:	mov	w0, #0xc                   	// #12
  41f438:	b	41f3fc <_obstack_memory_used@@Base+0x99a4>
  41f43c:	stp	x29, x30, [sp, #-48]!
  41f440:	str	x21, [sp, #16]
  41f444:	stp	x20, x19, [sp, #32]
  41f448:	mov	x29, sp
  41f44c:	cbz	x1, 41f534 <_obstack_memory_used@@Base+0x9adc>
  41f450:	ldr	x10, [x1, #8]
  41f454:	mov	x20, x1
  41f458:	cbz	x10, 41f534 <_obstack_memory_used@@Base+0x9adc>
  41f45c:	ldp	x8, x11, [x0]
  41f460:	mov	x19, x0
  41f464:	add	x9, x11, x10, lsl #1
  41f468:	cmp	x8, x9
  41f46c:	b.ge	41f498 <_obstack_memory_used@@Base+0x9a40>  // b.tcont
  41f470:	ldr	x0, [x19, #16]
  41f474:	add	x21, x8, x10
  41f478:	lsl	x1, x21, #4
  41f47c:	bl	402870 <realloc@plt>
  41f480:	cbz	x0, 41f5c0 <_obstack_memory_used@@Base+0x9b68>
  41f484:	lsl	x8, x21, #1
  41f488:	str	x0, [x19, #16]
  41f48c:	str	x8, [x19]
  41f490:	ldr	x11, [x19, #8]
  41f494:	ldr	x10, [x20, #8]
  41f498:	cbz	x11, 41f5ac <_obstack_memory_used@@Base+0x9b54>
  41f49c:	sub	x8, x10, #0x1
  41f4a0:	sub	x9, x11, #0x1
  41f4a4:	orr	x12, x8, x9
  41f4a8:	add	x21, x11, x10, lsl #1
  41f4ac:	tbnz	x12, #63, 41f4f8 <_obstack_memory_used@@Base+0x9aa0>
  41f4b0:	ldr	x10, [x19, #16]
  41f4b4:	ldr	x11, [x20, #16]
  41f4b8:	b	41f4d0 <_obstack_memory_used@@Base+0x9a78>
  41f4bc:	sub	x8, x8, #0x1
  41f4c0:	sub	x21, x21, #0x1
  41f4c4:	str	x12, [x10, x21, lsl #3]
  41f4c8:	orr	x12, x8, x9
  41f4cc:	tbnz	x12, #63, 41f4f8 <_obstack_memory_used@@Base+0x9aa0>
  41f4d0:	ldr	x13, [x10, x9, lsl #3]
  41f4d4:	ldr	x12, [x11, x8, lsl #3]
  41f4d8:	cmp	x13, x12
  41f4dc:	b.ne	41f4e8 <_obstack_memory_used@@Base+0x9a90>  // b.any
  41f4e0:	sub	x8, x8, #0x1
  41f4e4:	b	41f4ec <_obstack_memory_used@@Base+0x9a94>
  41f4e8:	b.lt	41f4bc <_obstack_memory_used@@Base+0x9a64>  // b.tstop
  41f4ec:	sub	x9, x9, #0x1
  41f4f0:	orr	x12, x8, x9
  41f4f4:	tbz	x12, #63, 41f4d0 <_obstack_memory_used@@Base+0x9a78>
  41f4f8:	tbnz	x8, #63, 41f518 <_obstack_memory_used@@Base+0x9ac0>
  41f4fc:	ldr	x9, [x19, #16]
  41f500:	ldr	x1, [x20, #16]
  41f504:	add	x8, x8, #0x1
  41f508:	sub	x21, x21, x8
  41f50c:	add	x0, x9, x21, lsl #3
  41f510:	lsl	x2, x8, #3
  41f514:	bl	402580 <memcpy@plt>
  41f518:	ldr	x10, [x19, #8]
  41f51c:	ldr	x8, [x20, #8]
  41f520:	sub	x9, x10, #0x1
  41f524:	add	x8, x9, x8, lsl #1
  41f528:	sub	x11, x8, x21
  41f52c:	adds	x11, x11, #0x1
  41f530:	b.cc	41f548 <_obstack_memory_used@@Base+0x9af0>  // b.lo, b.ul, b.last
  41f534:	mov	w0, wzr
  41f538:	ldp	x20, x19, [sp, #32]
  41f53c:	ldr	x21, [sp, #16]
  41f540:	ldp	x29, x30, [sp], #48
  41f544:	ret
  41f548:	ldr	x0, [x19, #16]
  41f54c:	add	x10, x11, x10
  41f550:	str	x10, [x19, #8]
  41f554:	add	x10, x0, x9, lsl #3
  41f558:	lsl	x2, x11, #3
  41f55c:	neg	x11, x11
  41f560:	ldr	x12, [x0, x8, lsl #3]
  41f564:	ldr	x13, [x0, x9, lsl #3]
  41f568:	cmp	x12, x13
  41f56c:	b.le	41f588 <_obstack_memory_used@@Base+0x9b30>
  41f570:	sub	x8, x8, #0x1
  41f574:	str	x12, [x10, x2]
  41f578:	adds	x11, x11, #0x1
  41f57c:	sub	x2, x2, #0x8
  41f580:	b.cc	41f560 <_obstack_memory_used@@Base+0x9b08>  // b.lo, b.ul, b.last
  41f584:	b	41f534 <_obstack_memory_used@@Base+0x9adc>
  41f588:	str	x13, [x10, x2]
  41f58c:	cmp	x9, #0x0
  41f590:	sub	x9, x9, #0x1
  41f594:	neg	x11, x11
  41f598:	sub	x10, x10, #0x8
  41f59c:	b.gt	41f558 <_obstack_memory_used@@Base+0x9b00>
  41f5a0:	add	x1, x0, x21, lsl #3
  41f5a4:	bl	402580 <memcpy@plt>
  41f5a8:	b	41f534 <_obstack_memory_used@@Base+0x9adc>
  41f5ac:	str	x10, [x19, #8]
  41f5b0:	ldp	x8, x1, [x20, #8]
  41f5b4:	ldr	x0, [x19, #16]
  41f5b8:	lsl	x2, x8, #3
  41f5bc:	b	41f5a4 <_obstack_memory_used@@Base+0x9b4c>
  41f5c0:	mov	w0, #0xc                   	// #12
  41f5c4:	b	41f538 <_obstack_memory_used@@Base+0x9ae0>
  41f5c8:	stp	x29, x30, [sp, #-32]!
  41f5cc:	stp	x20, x19, [sp, #16]
  41f5d0:	ldr	x9, [x0]
  41f5d4:	mov	x19, x0
  41f5d8:	mov	x20, x1
  41f5dc:	mov	x29, sp
  41f5e0:	cbz	x9, 41f604 <_obstack_memory_used@@Base+0x9bac>
  41f5e4:	ldr	x8, [x19, #8]
  41f5e8:	cbnz	x8, 41f634 <_obstack_memory_used@@Base+0x9bdc>
  41f5ec:	ldr	x8, [x19, #16]
  41f5f0:	str	x20, [x8]
  41f5f4:	ldr	x8, [x19, #8]
  41f5f8:	add	x8, x8, #0x1
  41f5fc:	str	x8, [x19, #8]
  41f600:	b	41f624 <_obstack_memory_used@@Base+0x9bcc>
  41f604:	mov	w8, #0x1                   	// #1
  41f608:	dup	v0.2d, x8
  41f60c:	mov	w0, #0x8                   	// #8
  41f610:	str	q0, [x19]
  41f614:	bl	402730 <malloc@plt>
  41f618:	str	x0, [x19, #16]
  41f61c:	cbz	x0, 41f660 <_obstack_memory_used@@Base+0x9c08>
  41f620:	str	x20, [x0]
  41f624:	mov	w0, #0x1                   	// #1
  41f628:	ldp	x20, x19, [sp, #16]
  41f62c:	ldp	x29, x30, [sp], #32
  41f630:	ret
  41f634:	cmp	x9, x8
  41f638:	b.ne	41f668 <_obstack_memory_used@@Base+0x9c10>  // b.any
  41f63c:	ldr	x0, [x19, #16]
  41f640:	lsl	x8, x9, #1
  41f644:	lsl	x1, x9, #4
  41f648:	str	x8, [x19]
  41f64c:	bl	402870 <realloc@plt>
  41f650:	cbz	x0, 41f628 <_obstack_memory_used@@Base+0x9bd0>
  41f654:	ldr	x8, [x19, #8]
  41f658:	str	x0, [x19, #16]
  41f65c:	b	41f66c <_obstack_memory_used@@Base+0x9c14>
  41f660:	stp	xzr, xzr, [x19]
  41f664:	b	41f628 <_obstack_memory_used@@Base+0x9bd0>
  41f668:	ldr	x0, [x19, #16]
  41f66c:	ldr	x9, [x0]
  41f670:	cmp	x9, x20
  41f674:	b.le	41f6a0 <_obstack_memory_used@@Base+0x9c48>
  41f678:	cmp	x8, #0x1
  41f67c:	b.lt	41f6c8 <_obstack_memory_used@@Base+0x9c70>  // b.tstop
  41f680:	mov	x9, x8
  41f684:	add	x10, x0, x9, lsl #3
  41f688:	ldur	x11, [x10, #-8]
  41f68c:	subs	x8, x9, #0x1
  41f690:	mov	x9, x8
  41f694:	str	x11, [x10]
  41f698:	b.gt	41f684 <_obstack_memory_used@@Base+0x9c2c>
  41f69c:	b	41f6c8 <_obstack_memory_used@@Base+0x9c70>
  41f6a0:	add	x9, x0, x8, lsl #3
  41f6a4:	ldur	x9, [x9, #-8]
  41f6a8:	cmp	x9, x20
  41f6ac:	b.le	41f6c8 <_obstack_memory_used@@Base+0x9c70>
  41f6b0:	add	x10, x0, x8, lsl #3
  41f6b4:	str	x9, [x10]
  41f6b8:	ldur	x9, [x10, #-16]
  41f6bc:	sub	x8, x8, #0x1
  41f6c0:	cmp	x9, x20
  41f6c4:	b.gt	41f6b0 <_obstack_memory_used@@Base+0x9c58>
  41f6c8:	str	x20, [x0, x8, lsl #3]
  41f6cc:	b	41f5f4 <_obstack_memory_used@@Base+0x9b9c>
  41f6d0:	sub	sp, sp, #0x80
  41f6d4:	stp	x29, x30, [sp, #32]
  41f6d8:	stp	x28, x27, [sp, #48]
  41f6dc:	stp	x26, x25, [sp, #64]
  41f6e0:	stp	x24, x23, [sp, #80]
  41f6e4:	stp	x22, x21, [sp, #96]
  41f6e8:	stp	x20, x19, [sp, #112]
  41f6ec:	ldr	x27, [x2, #8]
  41f6f0:	mov	x19, x0
  41f6f4:	add	x29, sp, #0x20
  41f6f8:	cbz	x27, 41f728 <_obstack_memory_used@@Base+0x9cd0>
  41f6fc:	mov	w26, w3
  41f700:	mov	x22, x2
  41f704:	mov	x20, x1
  41f708:	subs	x8, x27, #0x1
  41f70c:	add	x23, x27, w3, uxtw
  41f710:	b.lt	41f790 <_obstack_memory_used@@Base+0x9d38>  // b.tstop
  41f714:	ldr	x9, [x22, #16]
  41f718:	cmp	x27, #0x4
  41f71c:	b.cs	41f734 <_obstack_memory_used@@Base+0x9cdc>  // b.hs, b.nlast
  41f720:	mov	x10, xzr
  41f724:	b	41f778 <_obstack_memory_used@@Base+0x9d20>
  41f728:	mov	x24, xzr
  41f72c:	str	wzr, [x19]
  41f730:	b	41fa58 <_obstack_memory_used@@Base+0xa000>
  41f734:	and	x10, x27, #0xfffffffffffffffc
  41f738:	movi	v1.2d, #0x0
  41f73c:	movi	v0.2d, #0x0
  41f740:	mov	v1.d[0], x23
  41f744:	add	x11, x9, #0x10
  41f748:	mov	x12, x10
  41f74c:	ldp	q2, q3, [x11, #-16]
  41f750:	subs	x12, x12, #0x4
  41f754:	add	x11, x11, #0x20
  41f758:	add	v1.2d, v2.2d, v1.2d
  41f75c:	add	v0.2d, v3.2d, v0.2d
  41f760:	b.ne	41f74c <_obstack_memory_used@@Base+0x9cf4>  // b.any
  41f764:	add	v0.2d, v0.2d, v1.2d
  41f768:	addp	d0, v0.2d
  41f76c:	cmp	x27, x10
  41f770:	fmov	x23, d0
  41f774:	b.eq	41f790 <_obstack_memory_used@@Base+0x9d38>  // b.none
  41f778:	sub	x11, x27, x10
  41f77c:	add	x9, x9, x10, lsl #3
  41f780:	ldr	x10, [x9], #8
  41f784:	subs	x11, x11, #0x1
  41f788:	add	x23, x10, x23
  41f78c:	b.ne	41f780 <_obstack_memory_used@@Base+0x9d28>  // b.any
  41f790:	ldr	x9, [x20, #136]
  41f794:	ldr	x10, [x20, #64]
  41f798:	and	x11, x9, x23
  41f79c:	mov	w9, #0x18                  	// #24
  41f7a0:	mul	x9, x11, x9
  41f7a4:	ldr	x9, [x10, x9]
  41f7a8:	cmp	x9, #0x1
  41f7ac:	b.lt	41f83c <_obstack_memory_used@@Base+0x9de4>  // b.tstop
  41f7b0:	mov	w12, #0x18                  	// #24
  41f7b4:	madd	x10, x11, x12, x10
  41f7b8:	ldr	x10, [x10, #16]
  41f7bc:	mov	x11, xzr
  41f7c0:	b	41f7d0 <_obstack_memory_used@@Base+0x9d78>
  41f7c4:	add	x11, x11, #0x1
  41f7c8:	cmp	x11, x9
  41f7cc:	b.ge	41f83c <_obstack_memory_used@@Base+0x9de4>  // b.tcont
  41f7d0:	ldr	x24, [x10, x11, lsl #3]
  41f7d4:	ldr	x12, [x24]
  41f7d8:	cmp	x12, x23
  41f7dc:	b.ne	41f7c4 <_obstack_memory_used@@Base+0x9d6c>  // b.any
  41f7e0:	ldrb	w12, [x24, #104]
  41f7e4:	and	w12, w12, #0xf
  41f7e8:	cmp	w12, w26
  41f7ec:	b.ne	41f7c4 <_obstack_memory_used@@Base+0x9d6c>  // b.any
  41f7f0:	cbz	x22, 41f7c4 <_obstack_memory_used@@Base+0x9d6c>
  41f7f4:	ldr	x12, [x24, #80]
  41f7f8:	cbz	x12, 41f7c4 <_obstack_memory_used@@Base+0x9d6c>
  41f7fc:	ldr	x13, [x12, #8]
  41f800:	cmp	x13, x27
  41f804:	b.ne	41f7c4 <_obstack_memory_used@@Base+0x9d6c>  // b.any
  41f808:	mov	x13, x8
  41f80c:	add	x14, x13, #0x1
  41f810:	cmp	x14, #0x1
  41f814:	b.lt	41fa58 <_obstack_memory_used@@Base+0xa000>  // b.tstop
  41f818:	ldr	x14, [x12, #16]
  41f81c:	ldr	x15, [x22, #16]
  41f820:	lsl	x16, x13, #3
  41f824:	sub	x13, x13, #0x1
  41f828:	ldr	x14, [x14, x16]
  41f82c:	ldr	x15, [x15, x16]
  41f830:	cmp	x14, x15
  41f834:	b.eq	41f80c <_obstack_memory_used@@Base+0x9db4>  // b.none
  41f838:	b	41f7c4 <_obstack_memory_used@@Base+0x9d6c>
  41f83c:	mov	w0, #0x70                  	// #112
  41f840:	mov	w1, #0x1                   	// #1
  41f844:	bl	402840 <calloc@plt>
  41f848:	cbz	x0, 41fa8c <_obstack_memory_used@@Base+0xa034>
  41f84c:	mov	x24, x0
  41f850:	add	x13, x0, #0x8
  41f854:	cmp	x27, #0x1
  41f858:	str	x27, [x0, #16]
  41f85c:	stur	x13, [x29, #-8]
  41f860:	stp	x19, x20, [sp]
  41f864:	b.lt	41f8a0 <_obstack_memory_used@@Base+0x9e48>  // b.tstop
  41f868:	lsl	x25, x27, #3
  41f86c:	mov	x0, x25
  41f870:	str	x27, [x24, #8]
  41f874:	bl	402730 <malloc@plt>
  41f878:	str	x0, [x24, #24]
  41f87c:	cbz	x0, 41fa9c <_obstack_memory_used@@Base+0xa044>
  41f880:	ldr	x1, [x22, #16]
  41f884:	mov	x2, x25
  41f888:	bl	402580 <memcpy@plt>
  41f88c:	ldrb	w8, [x24, #104]
  41f890:	ldr	x27, [x22, #8]
  41f894:	ldur	x13, [x29, #-8]
  41f898:	and	w8, w8, #0xfffffff0
  41f89c:	b	41f8ac <_obstack_memory_used@@Base+0x9e54>
  41f8a0:	mov	w8, wzr
  41f8a4:	stp	xzr, xzr, [x13]
  41f8a8:	str	xzr, [x13, #16]
  41f8ac:	and	w9, w26, #0xf
  41f8b0:	cmp	x27, #0x1
  41f8b4:	orr	w8, w8, w9
  41f8b8:	strb	w8, [x24, #104]
  41f8bc:	str	x13, [x24, #80]
  41f8c0:	b.lt	41fa44 <_obstack_memory_used@@Base+0x9fec>  // b.tstop
  41f8c4:	ldr	x8, [sp, #8]
  41f8c8:	ldr	x25, [x22, #16]
  41f8cc:	mov	x19, xzr
  41f8d0:	str	x22, [sp, #16]
  41f8d4:	ldr	x14, [x8]
  41f8d8:	mov	x8, xzr
  41f8dc:	b	41f8f4 <_obstack_memory_used@@Base+0x9e9c>
  41f8e0:	add	x8, x8, #0x1
  41f8e4:	ldr	x27, [x22, #8]
  41f8e8:	add	x19, x19, #0x1
  41f8ec:	cmp	x19, x27
  41f8f0:	b.ge	41fa44 <_obstack_memory_used@@Base+0x9fec>  // b.tcont
  41f8f4:	ldr	x9, [x25, x19, lsl #3]
  41f8f8:	add	x9, x14, x9, lsl #4
  41f8fc:	ldr	w28, [x9, #8]
  41f900:	and	w9, w28, #0x3ffff
  41f904:	cmp	w9, #0x1
  41f908:	b.eq	41f8e4 <_obstack_memory_used@@Base+0x9e8c>  // b.none
  41f90c:	ldrb	w11, [x24, #104]
  41f910:	lsr	w12, w28, #15
  41f914:	and	w10, w28, #0xff
  41f918:	and	w12, w12, #0x20
  41f91c:	and	w9, w28, #0x3ff00
  41f920:	orr	w21, w11, w12
  41f924:	cmp	w10, #0x2
  41f928:	strb	w21, [x24, #104]
  41f92c:	b.eq	41f940 <_obstack_memory_used@@Base+0x9ee8>  // b.none
  41f930:	cmp	w10, #0x4
  41f934:	b.ne	41f94c <_obstack_memory_used@@Base+0x9ef4>  // b.any
  41f938:	mov	w10, #0x40                  	// #64
  41f93c:	b	41f944 <_obstack_memory_used@@Base+0x9eec>
  41f940:	mov	w10, #0x10                  	// #16
  41f944:	orr	w21, w21, w10
  41f948:	strb	w21, [x24, #104]
  41f94c:	cbz	w9, 41f8e4 <_obstack_memory_used@@Base+0x9e8c>
  41f950:	ldr	x9, [x24, #80]
  41f954:	cmp	x9, x13
  41f958:	b.eq	41f964 <_obstack_memory_used@@Base+0x9f0c>  // b.none
  41f95c:	tbz	w26, #0, 41f9e0 <_obstack_memory_used@@Base+0x9f88>
  41f960:	b	41f9e4 <_obstack_memory_used@@Base+0x9f8c>
  41f964:	mov	w0, #0x18                  	// #24
  41f968:	mov	x22, x14
  41f96c:	mov	w20, w26
  41f970:	bl	402730 <malloc@plt>
  41f974:	cbz	x0, 41fa80 <_obstack_memory_used@@Base+0xa028>
  41f978:	mov	x26, x0
  41f97c:	cmp	x27, #0x1
  41f980:	str	x0, [x24, #80]
  41f984:	str	x27, [x0, #8]
  41f988:	b.lt	41f9b8 <_obstack_memory_used@@Base+0x9f60>  // b.tstop
  41f98c:	str	x27, [x26]
  41f990:	lsl	x27, x27, #3
  41f994:	mov	x0, x27
  41f998:	bl	402730 <malloc@plt>
  41f99c:	str	x0, [x26, #16]
  41f9a0:	cbz	x0, 41fa7c <_obstack_memory_used@@Base+0xa024>
  41f9a4:	mov	x1, x25
  41f9a8:	mov	x2, x27
  41f9ac:	bl	402580 <memcpy@plt>
  41f9b0:	ldrb	w21, [x24, #104]
  41f9b4:	b	41f9c0 <_obstack_memory_used@@Base+0x9f68>
  41f9b8:	stp	xzr, xzr, [x26]
  41f9bc:	str	xzr, [x26, #16]
  41f9c0:	ldur	x13, [x29, #-8]
  41f9c4:	mov	x14, x22
  41f9c8:	ldr	x22, [sp, #16]
  41f9cc:	mov	x8, xzr
  41f9d0:	orr	w9, w21, #0x80
  41f9d4:	mov	w26, w20
  41f9d8:	strb	w9, [x24, #104]
  41f9dc:	tbnz	w26, #0, 41f9e4 <_obstack_memory_used@@Base+0x9f8c>
  41f9e0:	tbnz	w28, #8, 41f9fc <_obstack_memory_used@@Base+0x9fa4>
  41f9e4:	tbz	w26, #0, 41f9ec <_obstack_memory_used@@Base+0x9f94>
  41f9e8:	tbnz	w28, #9, 41f9fc <_obstack_memory_used@@Base+0x9fa4>
  41f9ec:	tbnz	w26, #1, 41f9f4 <_obstack_memory_used@@Base+0x9f9c>
  41f9f0:	tbnz	w28, #12, 41f9fc <_obstack_memory_used@@Base+0x9fa4>
  41f9f4:	tbnz	w26, #2, 41f8e4 <_obstack_memory_used@@Base+0x9e8c>
  41f9f8:	tbz	w28, #14, 41f8e4 <_obstack_memory_used@@Base+0x9e8c>
  41f9fc:	subs	x9, x19, x8
  41fa00:	b.mi	41f8e0 <_obstack_memory_used@@Base+0x9e88>  // b.first
  41fa04:	ldr	x10, [x24, #16]
  41fa08:	cmp	x10, x9
  41fa0c:	b.le	41f8e0 <_obstack_memory_used@@Base+0x9e88>
  41fa10:	sub	x10, x10, #0x1
  41fa14:	cmp	x10, x9
  41fa18:	str	x10, [x24, #16]
  41fa1c:	b.le	41f8e0 <_obstack_memory_used@@Base+0x9e88>
  41fa20:	ldr	x10, [x24, #24]
  41fa24:	add	x11, x10, x9, lsl #3
  41fa28:	ldr	x12, [x11, #8]
  41fa2c:	add	x9, x9, #0x1
  41fa30:	str	x12, [x11]
  41fa34:	ldr	x11, [x24, #16]
  41fa38:	cmp	x9, x11
  41fa3c:	b.lt	41fa24 <_obstack_memory_used@@Base+0x9fcc>  // b.tstop
  41fa40:	b	41f8e0 <_obstack_memory_used@@Base+0x9e88>
  41fa44:	ldr	x0, [sp, #8]
  41fa48:	mov	x1, x24
  41fa4c:	mov	x2, x23
  41fa50:	bl	41faa8 <_obstack_memory_used@@Base+0xa050>
  41fa54:	cbnz	w0, 41fa80 <_obstack_memory_used@@Base+0xa028>
  41fa58:	mov	x0, x24
  41fa5c:	ldp	x20, x19, [sp, #112]
  41fa60:	ldp	x22, x21, [sp, #96]
  41fa64:	ldp	x24, x23, [sp, #80]
  41fa68:	ldp	x26, x25, [sp, #64]
  41fa6c:	ldp	x28, x27, [sp, #48]
  41fa70:	ldp	x29, x30, [sp, #32]
  41fa74:	add	sp, sp, #0x80
  41fa78:	ret
  41fa7c:	stp	xzr, xzr, [x26]
  41fa80:	mov	x0, x24
  41fa84:	bl	41a3b8 <_obstack_memory_used@@Base+0x4960>
  41fa88:	ldr	x19, [sp]
  41fa8c:	mov	x24, xzr
  41fa90:	mov	w8, #0xc                   	// #12
  41fa94:	str	w8, [x19]
  41fa98:	b	41fa58 <_obstack_memory_used@@Base+0xa000>
  41fa9c:	mov	x0, x24
  41faa0:	bl	402a10 <free@plt>
  41faa4:	b	41fa8c <_obstack_memory_used@@Base+0xa034>
  41faa8:	stp	x29, x30, [sp, #-64]!
  41faac:	stp	x24, x23, [sp, #16]
  41fab0:	stp	x22, x21, [sp, #32]
  41fab4:	stp	x20, x19, [sp, #48]
  41fab8:	ldr	x22, [x1, #16]
  41fabc:	mov	x21, x0
  41fac0:	mov	x29, sp
  41fac4:	mov	x20, x2
  41fac8:	lsl	x0, x22, #3
  41facc:	mov	x19, x1
  41fad0:	str	x2, [x1]
  41fad4:	stp	x22, xzr, [x1, #32]
  41fad8:	bl	402730 <malloc@plt>
  41fadc:	str	x0, [x19, #48]
  41fae0:	cbz	x0, 41fbe4 <_obstack_memory_used@@Base+0xa18c>
  41fae4:	cmp	x22, #0x1
  41fae8:	b.lt	41fb58 <_obstack_memory_used@@Base+0xa100>  // b.tstop
  41faec:	mov	x23, xzr
  41faf0:	b	41fb0c <_obstack_memory_used@@Base+0xa0b4>
  41faf4:	add	x9, x8, #0x1
  41faf8:	str	x9, [x19, #40]
  41fafc:	str	x24, [x0, x8, lsl #3]
  41fb00:	add	x23, x23, #0x1
  41fb04:	cmp	x23, x22
  41fb08:	b.ge	41fb58 <_obstack_memory_used@@Base+0xa100>  // b.tcont
  41fb0c:	ldr	x8, [x19, #24]
  41fb10:	ldr	x24, [x8, x23, lsl #3]
  41fb14:	ldr	x8, [x21]
  41fb18:	add	x8, x8, x24, lsl #4
  41fb1c:	ldrb	w8, [x8, #8]
  41fb20:	tbnz	w8, #3, 41fb00 <_obstack_memory_used@@Base+0xa0a8>
  41fb24:	ldp	x9, x8, [x19, #32]
  41fb28:	cmp	x9, x8
  41fb2c:	b.ne	41faf4 <_obstack_memory_used@@Base+0xa09c>  // b.any
  41fb30:	lsl	x8, x9, #1
  41fb34:	add	x8, x8, #0x2
  41fb38:	lsl	x1, x8, #3
  41fb3c:	str	x8, [x19, #32]
  41fb40:	bl	402870 <realloc@plt>
  41fb44:	cbz	x0, 41fbe4 <_obstack_memory_used@@Base+0xa18c>
  41fb48:	ldr	x8, [x19, #40]
  41fb4c:	ldr	x22, [x19, #16]
  41fb50:	str	x0, [x19, #48]
  41fb54:	b	41faf4 <_obstack_memory_used@@Base+0xa09c>
  41fb58:	ldr	x9, [x21, #136]
  41fb5c:	ldr	x8, [x21, #64]
  41fb60:	mov	w11, #0x18                  	// #24
  41fb64:	and	x10, x9, x20
  41fb68:	madd	x20, x10, x11, x8
  41fb6c:	mov	x21, x20
  41fb70:	ldr	x11, [x21, #8]!
  41fb74:	ldr	x9, [x20]
  41fb78:	cmp	x11, x9
  41fb7c:	b.le	41fbb0 <_obstack_memory_used@@Base+0xa158>
  41fb80:	mov	w11, #0x18                  	// #24
  41fb84:	madd	x8, x10, x11, x8
  41fb88:	ldr	x8, [x8, #16]
  41fb8c:	mov	w0, wzr
  41fb90:	add	x10, x9, #0x1
  41fb94:	str	x10, [x20]
  41fb98:	str	x19, [x8, x9, lsl #3]
  41fb9c:	ldp	x20, x19, [sp, #48]
  41fba0:	ldp	x22, x21, [sp, #32]
  41fba4:	ldp	x24, x23, [sp, #16]
  41fba8:	ldp	x29, x30, [sp], #64
  41fbac:	ret
  41fbb0:	mov	w11, #0x18                  	// #24
  41fbb4:	madd	x22, x10, x11, x8
  41fbb8:	ldr	x0, [x22, #16]!
  41fbbc:	lsl	x8, x9, #1
  41fbc0:	add	x23, x8, #0x2
  41fbc4:	lsl	x1, x23, #3
  41fbc8:	bl	402870 <realloc@plt>
  41fbcc:	cbz	x0, 41fbe4 <_obstack_memory_used@@Base+0xa18c>
  41fbd0:	str	x0, [x22]
  41fbd4:	str	x23, [x21]
  41fbd8:	ldr	x9, [x20]
  41fbdc:	mov	x8, x0
  41fbe0:	b	41fb8c <_obstack_memory_used@@Base+0xa134>
  41fbe4:	mov	w0, #0xc                   	// #12
  41fbe8:	b	41fb9c <_obstack_memory_used@@Base+0xa144>
  41fbec:	sub	sp, sp, #0x80
  41fbf0:	stp	x29, x30, [sp, #32]
  41fbf4:	stp	x28, x27, [sp, #48]
  41fbf8:	stp	x26, x25, [sp, #64]
  41fbfc:	stp	x24, x23, [sp, #80]
  41fc00:	stp	x22, x21, [sp, #96]
  41fc04:	stp	x20, x19, [sp, #112]
  41fc08:	mov	x24, x0
  41fc0c:	ldr	x8, [x24, #40]!
  41fc10:	mov	x19, x0
  41fc14:	mov	x20, x1
  41fc18:	mov	w21, w2
  41fc1c:	cmp	x8, x1
  41fc20:	add	x29, sp, #0x20
  41fc24:	b.le	41fe14 <_obstack_memory_used@@Base+0xa3bc>
  41fc28:	ldr	w8, [x19, #144]
  41fc2c:	cmp	w8, #0x2
  41fc30:	b.lt	41fc38 <_obstack_memory_used@@Base+0xa1e0>  // b.tstop
  41fc34:	str	xzr, [x19, #32]
  41fc38:	ldr	x9, [x19, #80]
  41fc3c:	ldr	x10, [x19, #96]
  41fc40:	strb	wzr, [x19, #140]
  41fc44:	tst	w21, #0x1
  41fc48:	str	x9, [x19, #88]
  41fc4c:	str	x10, [x19, #104]
  41fc50:	stp	xzr, xzr, [x24]
  41fc54:	str	xzr, [x24, #16]
  41fc58:	ldrb	w9, [x19, #139]
  41fc5c:	mov	w10, #0x4                   	// #4
  41fc60:	mov	w11, #0x6                   	// #6
  41fc64:	mov	x8, xzr
  41fc68:	csel	w10, w11, w10, eq  // eq = none
  41fc6c:	mov	x25, x20
  41fc70:	str	w10, [x19, #112]
  41fc74:	cbnz	w9, 41fc88 <_obstack_memory_used@@Base+0xa230>
  41fc78:	ldr	x9, [x19]
  41fc7c:	mov	x8, xzr
  41fc80:	mov	x25, x20
  41fc84:	str	x9, [x19, #8]
  41fc88:	cbz	x25, 41fd94 <_obstack_memory_used@@Base+0xa33c>
  41fc8c:	ldr	x9, [x19, #56]
  41fc90:	cmp	x25, x9
  41fc94:	b.ge	41fe20 <_obstack_memory_used@@Base+0xa3c8>  // b.tcont
  41fc98:	ldrb	w8, [x19, #140]
  41fc9c:	cbnz	w8, 41ff5c <_obstack_memory_used@@Base+0xa504>
  41fca0:	cmp	x25, #0x0
  41fca4:	b.le	41fce0 <_obstack_memory_used@@Base+0xa288>
  41fca8:	ldr	x9, [x19, #88]
  41fcac:	sub	x8, x25, #0x1
  41fcb0:	cmp	x9, x8
  41fcb4:	b.eq	420010 <_obstack_memory_used@@Base+0xa5b8>  // b.none
  41fcb8:	ldr	w9, [x19, #144]
  41fcbc:	cmp	w9, #0x2
  41fcc0:	b.lt	41fce8 <_obstack_memory_used@@Base+0xa290>  // b.tstop
  41fcc4:	ldr	x9, [x19, #16]
  41fcc8:	ldr	w21, [x9, x8, lsl #2]
  41fccc:	cmn	w21, #0x1
  41fcd0:	b.ne	41fd10 <_obstack_memory_used@@Base+0xa2b8>  // b.any
  41fcd4:	sub	x8, x8, #0x1
  41fcd8:	cmn	x8, #0x1
  41fcdc:	b.ne	41fcc8 <_obstack_memory_used@@Base+0xa270>  // b.any
  41fce0:	ldr	w8, [x19, #112]
  41fce4:	b	41fd40 <_obstack_memory_used@@Base+0xa2e8>
  41fce8:	ldr	x9, [x19, #8]
  41fcec:	ldrb	w8, [x9, x8]
  41fcf0:	ldr	x9, [x19, #128]
  41fcf4:	lsr	x10, x8, #3
  41fcf8:	and	x10, x10, #0x18
  41fcfc:	ldr	x9, [x9, x10]
  41fd00:	lsr	x9, x9, x8
  41fd04:	tbz	w9, #0, 41fd34 <_obstack_memory_used@@Base+0xa2dc>
  41fd08:	mov	w8, #0x1                   	// #1
  41fd0c:	b	41fd40 <_obstack_memory_used@@Base+0xa2e8>
  41fd10:	ldrb	w8, [x19, #142]
  41fd14:	cbnz	w8, 420118 <_obstack_memory_used@@Base+0xa6c0>
  41fd18:	cmp	w21, #0xa
  41fd1c:	b.ne	41fd3c <_obstack_memory_used@@Base+0xa2e4>  // b.any
  41fd20:	ldrb	w8, [x19, #141]
  41fd24:	cmp	w8, #0x0
  41fd28:	cset	w8, ne  // ne = any
  41fd2c:	lsl	w8, w8, #1
  41fd30:	b	41fd40 <_obstack_memory_used@@Base+0xa2e8>
  41fd34:	cmp	w8, #0xa
  41fd38:	b.eq	41fd20 <_obstack_memory_used@@Base+0xa2c8>  // b.none
  41fd3c:	mov	w8, wzr
  41fd40:	ldr	w9, [x19, #144]
  41fd44:	str	w8, [x19, #112]
  41fd48:	cmp	w9, #0x2
  41fd4c:	b.lt	41fd68 <_obstack_memory_used@@Base+0xa310>  // b.tstop
  41fd50:	ldr	x8, [x19, #48]
  41fd54:	ldr	x0, [x19, #16]
  41fd58:	sub	x8, x8, x25
  41fd5c:	add	x1, x0, x25, lsl #2
  41fd60:	lsl	x2, x8, #2
  41fd64:	bl	402590 <memmove@plt>
  41fd68:	ldrb	w8, [x19, #139]
  41fd6c:	cbnz	w8, 41fff8 <_obstack_memory_used@@Base+0xa5a0>
  41fd70:	ldr	q0, [x19, #48]
  41fd74:	dup	v1.2d, x25
  41fd78:	sub	v0.2d, v0.2d, v1.2d
  41fd7c:	str	q0, [x19, #48]
  41fd80:	ldrb	w8, [x19, #139]
  41fd84:	cbnz	w8, 41fd94 <_obstack_memory_used@@Base+0xa33c>
  41fd88:	ldr	x8, [x19, #8]
  41fd8c:	add	x8, x8, x25
  41fd90:	str	x8, [x19, #8]
  41fd94:	ldr	x8, [x19, #88]
  41fd98:	ldr	x10, [x19, #104]
  41fd9c:	ldr	w11, [x19, #144]
  41fda0:	str	x20, [x19, #40]
  41fda4:	sub	x9, x8, x25
  41fda8:	sub	x8, x10, x25
  41fdac:	cmp	w11, #0x2
  41fdb0:	str	x9, [x19, #88]
  41fdb4:	str	x8, [x19, #104]
  41fdb8:	b.lt	41fdd4 <_obstack_memory_used@@Base+0xa37c>  // b.tstop
  41fdbc:	ldrb	w8, [x19, #136]
  41fdc0:	cbz	w8, 41fde4 <_obstack_memory_used@@Base+0xa38c>
  41fdc4:	mov	x0, x19
  41fdc8:	bl	41a420 <_obstack_memory_used@@Base+0x49c8>
  41fdcc:	cbnz	w0, 41fdf4 <_obstack_memory_used@@Base+0xa39c>
  41fdd0:	b	41fdec <_obstack_memory_used@@Base+0xa394>
  41fdd4:	ldrb	w8, [x19, #139]
  41fdd8:	cbnz	w8, 420020 <_obstack_memory_used@@Base+0xa5c8>
  41fddc:	str	x9, [x19, #48]
  41fde0:	b	41fdec <_obstack_memory_used@@Base+0xa394>
  41fde4:	mov	x0, x19
  41fde8:	bl	41aadc <_obstack_memory_used@@Base+0x5084>
  41fdec:	mov	w0, wzr
  41fdf0:	str	xzr, [x19, #72]
  41fdf4:	ldp	x20, x19, [sp, #112]
  41fdf8:	ldp	x22, x21, [sp, #96]
  41fdfc:	ldp	x24, x23, [sp, #80]
  41fe00:	ldp	x26, x25, [sp, #64]
  41fe04:	ldp	x28, x27, [sp, #48]
  41fe08:	ldp	x29, x30, [sp, #32]
  41fe0c:	add	sp, sp, #0x80
  41fe10:	ret
  41fe14:	sub	x25, x20, x8
  41fe18:	cbnz	x25, 41fc8c <_obstack_memory_used@@Base+0xa234>
  41fe1c:	b	41fd94 <_obstack_memory_used@@Base+0xa33c>
  41fe20:	ldrb	w10, [x19, #140]
  41fe24:	ldr	x26, [x19, #48]
  41fe28:	cbnz	w10, 42040c <_obstack_memory_used@@Base+0xa9b4>
  41fe2c:	ldr	w10, [x19, #144]
  41fe30:	str	xzr, [x19, #48]
  41fe34:	cmp	w10, #0x2
  41fe38:	b.lt	420084 <_obstack_memory_used@@Base+0xa62c>  // b.tstop
  41fe3c:	ldrb	w11, [x19, #137]
  41fe40:	cbz	w11, 41fee8 <_obstack_memory_used@@Base+0xa490>
  41fe44:	ldr	x13, [x19]
  41fe48:	sub	x10, x25, x10
  41fe4c:	add	x11, x13, x8
  41fe50:	add	x10, x11, x10
  41fe54:	cmp	x10, x13
  41fe58:	add	x22, x11, x25
  41fe5c:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  41fe60:	add	x10, x13, x25
  41fe64:	add	x13, x10, x8
  41fe68:	sub	x13, x13, #0x1
  41fe6c:	cmp	x13, x12
  41fe70:	b.cc	41fee8 <_obstack_memory_used@@Base+0xa490>  // b.lo, b.ul, b.last
  41fe74:	ldrb	w13, [x13]
  41fe78:	sub	x10, x10, #0x1
  41fe7c:	and	w13, w13, #0xc0
  41fe80:	cmp	w13, #0x80
  41fe84:	b.eq	41fe64 <_obstack_memory_used@@Base+0xa40c>  // b.none
  41fe88:	ldr	x12, [x19, #88]
  41fe8c:	ldr	x9, [x19, #120]
  41fe90:	add	x23, x10, x8
  41fe94:	mov	x1, x23
  41fe98:	add	x11, x11, x12
  41fe9c:	sub	x2, x11, x23
  41fea0:	cbnz	x9, 4204b4 <_obstack_memory_used@@Base+0xaa5c>
  41fea4:	sub	x0, x29, #0xc
  41fea8:	sub	x3, x29, #0x8
  41feac:	stur	xzr, [x29, #-8]
  41feb0:	bl	415680 <wcrtomb@plt+0x12a20>
  41feb4:	sub	x8, x22, x23
  41feb8:	subs	x8, x0, x8
  41febc:	mov	w9, #0xffffffff            	// #-1
  41fec0:	b.cc	41fed8 <_obstack_memory_used@@Base+0xa480>  // b.lo, b.ul, b.last
  41fec4:	cmn	x0, #0x3
  41fec8:	b.hi	41fed8 <_obstack_memory_used@@Base+0xa480>  // b.pmore
  41fecc:	str	xzr, [x19, #32]
  41fed0:	str	x8, [x19, #48]
  41fed4:	ldur	w9, [x29, #-12]
  41fed8:	cmn	w9, #0x1
  41fedc:	b.ne	420148 <_obstack_memory_used@@Base+0xa6f0>  // b.any
  41fee0:	ldr	x8, [x19, #40]
  41fee4:	ldr	x9, [x19, #56]
  41fee8:	add	x27, x9, x8
  41feec:	subs	x8, x27, x20
  41fef0:	b.ge	420134 <_obstack_memory_used@@Base+0xa6dc>  // b.tcont
  41fef4:	add	x22, x19, #0x20
  41fef8:	ldr	x8, [x19, #80]
  41fefc:	ldr	x9, [x19]
  41ff00:	ldr	x28, [x19, #32]
  41ff04:	sub	x0, x29, #0x8
  41ff08:	sub	x23, x8, x27
  41ff0c:	add	x1, x9, x27
  41ff10:	mov	x2, x23
  41ff14:	mov	x3, x22
  41ff18:	bl	415680 <wcrtomb@plt+0x12a20>
  41ff1c:	sub	x8, x0, #0x1
  41ff20:	cmn	x8, #0x3
  41ff24:	b.cs	41ff3c <_obstack_memory_used@@Base+0xa4e4>  // b.hs, b.nlast
  41ff28:	ldur	w9, [x29, #-8]
  41ff2c:	add	x27, x0, x27
  41ff30:	subs	x8, x27, x20
  41ff34:	b.lt	41fef8 <_obstack_memory_used@@Base+0xa4a0>  // b.tstop
  41ff38:	b	42013c <_obstack_memory_used@@Base+0xa6e4>
  41ff3c:	mov	w9, wzr
  41ff40:	cbz	x23, 41ff50 <_obstack_memory_used@@Base+0xa4f8>
  41ff44:	cbz	x0, 41ff50 <_obstack_memory_used@@Base+0xa4f8>
  41ff48:	ldr	x8, [x19]
  41ff4c:	ldrb	w9, [x8, x27]
  41ff50:	str	x28, [x22]
  41ff54:	mov	w0, #0x1                   	// #1
  41ff58:	b	41ff2c <_obstack_memory_used@@Base+0xa4d4>
  41ff5c:	ldr	x9, [x19, #48]
  41ff60:	ldr	x8, [x19, #24]
  41ff64:	mov	x10, xzr
  41ff68:	b	41ff78 <_obstack_memory_used@@Base+0xa520>
  41ff6c:	cmp	x10, x13
  41ff70:	mov	x9, x13
  41ff74:	b.ge	41ffa8 <_obstack_memory_used@@Base+0xa550>  // b.tcont
  41ff78:	add	x11, x10, x9
  41ff7c:	cmp	x11, #0x0
  41ff80:	cinc	x11, x11, lt  // lt = tstop
  41ff84:	asr	x11, x11, #1
  41ff88:	ldr	x12, [x8, x11, lsl #3]
  41ff8c:	mov	x13, x11
  41ff90:	cmp	x12, x25
  41ff94:	b.gt	41ff6c <_obstack_memory_used@@Base+0xa514>
  41ff98:	b.ge	41ffa8 <_obstack_memory_used@@Base+0xa550>  // b.tcont
  41ff9c:	add	x10, x11, #0x1
  41ffa0:	mov	x13, x9
  41ffa4:	b	41ff6c <_obstack_memory_used@@Base+0xa514>
  41ffa8:	cmp	x12, x25
  41ffac:	cinc	x22, x11, lt  // lt = tstop
  41ffb0:	cmp	x22, #0x0
  41ffb4:	b.le	41fff0 <_obstack_memory_used@@Base+0xa598>
  41ffb8:	ldr	x9, [x19, #88]
  41ffbc:	sub	x8, x22, #0x1
  41ffc0:	cmp	x9, x8
  41ffc4:	b.eq	420430 <_obstack_memory_used@@Base+0xa9d8>  // b.none
  41ffc8:	ldr	w9, [x19, #144]
  41ffcc:	cmp	w9, #0x2
  41ffd0:	b.lt	4200c4 <_obstack_memory_used@@Base+0xa66c>  // b.tstop
  41ffd4:	ldr	x9, [x19, #16]
  41ffd8:	ldr	w21, [x9, x8, lsl #2]
  41ffdc:	cmn	w21, #0x1
  41ffe0:	b.ne	4200f4 <_obstack_memory_used@@Base+0xa69c>  // b.any
  41ffe4:	sub	x8, x8, #0x1
  41ffe8:	cmn	x8, #0x1
  41ffec:	b.ne	41ffd8 <_obstack_memory_used@@Base+0xa580>  // b.any
  41fff0:	ldr	w9, [x19, #112]
  41fff4:	b	420238 <_obstack_memory_used@@Base+0xa7e0>
  41fff8:	ldr	x0, [x19, #8]
  41fffc:	ldr	x8, [x19, #48]
  420000:	add	x1, x0, x25
  420004:	sub	x2, x8, x25
  420008:	bl	402590 <memmove@plt>
  42000c:	b	41fd70 <_obstack_memory_used@@Base+0xa318>
  420010:	and	w8, w21, #0x2
  420014:	mov	w9, #0xa                   	// #10
  420018:	eor	w8, w8, w9
  42001c:	b	41fd40 <_obstack_memory_used@@Base+0xa2e8>
  420020:	ldrb	w8, [x19, #136]
  420024:	cbz	w8, 4201b4 <_obstack_memory_used@@Base+0xa75c>
  420028:	ldr	x8, [x19, #64]
  42002c:	ldr	x21, [x19, #48]
  420030:	cmp	x8, x9
  420034:	csel	x22, x9, x8, gt
  420038:	cmp	x21, x22
  42003c:	b.ge	4200ec <_obstack_memory_used@@Base+0xa694>  // b.tcont
  420040:	bl	402880 <__ctype_toupper_loc@plt>
  420044:	ldr	x8, [x19]
  420048:	ldr	x9, [x19, #120]
  42004c:	add	x8, x8, x20
  420050:	ldrb	w8, [x8, x21]
  420054:	cbnz	x9, 42007c <_obstack_memory_used@@Base+0xa624>
  420058:	ldr	x9, [x0]
  42005c:	ldr	x10, [x19, #8]
  420060:	ldr	w8, [x9, w8, uxtw #2]
  420064:	strb	w8, [x10, x21]
  420068:	add	x21, x21, #0x1
  42006c:	cmp	x21, x22
  420070:	b.ge	4200ec <_obstack_memory_used@@Base+0xa694>  // b.tcont
  420074:	ldr	x20, [x24]
  420078:	b	420044 <_obstack_memory_used@@Base+0xa5ec>
  42007c:	ldrb	w8, [x9, x8]
  420080:	b	420058 <_obstack_memory_used@@Base+0xa600>
  420084:	ldr	x9, [x19]
  420088:	add	x8, x25, x8
  42008c:	add	x8, x8, x9
  420090:	ldr	x9, [x19, #120]
  420094:	ldurb	w8, [x8, #-1]
  420098:	str	xzr, [x19, #56]
  42009c:	cbz	x9, 4200a4 <_obstack_memory_used@@Base+0xa64c>
  4200a0:	ldrb	w8, [x9, x8]
  4200a4:	ldr	x9, [x19, #128]
  4200a8:	lsr	x10, x8, #3
  4200ac:	and	x10, x10, #0x18
  4200b0:	ldr	x9, [x9, x10]
  4200b4:	lsr	x9, x9, x8
  4200b8:	tbz	w9, #0, 420210 <_obstack_memory_used@@Base+0xa7b8>
  4200bc:	mov	w8, #0x1                   	// #1
  4200c0:	b	4203cc <_obstack_memory_used@@Base+0xa974>
  4200c4:	ldr	x9, [x19, #8]
  4200c8:	ldrb	w8, [x9, x8]
  4200cc:	ldr	x9, [x19, #128]
  4200d0:	lsr	x10, x8, #3
  4200d4:	and	x10, x10, #0x18
  4200d8:	ldr	x9, [x9, x10]
  4200dc:	lsr	x9, x9, x8
  4200e0:	tbz	w9, #0, 42022c <_obstack_memory_used@@Base+0xa7d4>
  4200e4:	mov	w9, #0x1                   	// #1
  4200e8:	b	420238 <_obstack_memory_used@@Base+0xa7e0>
  4200ec:	stp	x21, x21, [x19, #48]
  4200f0:	b	41fdec <_obstack_memory_used@@Base+0xa394>
  4200f4:	ldrb	w8, [x19, #142]
  4200f8:	cbnz	w8, 420474 <_obstack_memory_used@@Base+0xaa1c>
  4200fc:	cmp	w21, #0xa
  420100:	b.ne	420234 <_obstack_memory_used@@Base+0xa7dc>  // b.any
  420104:	ldrb	w8, [x19, #141]
  420108:	cmp	w8, #0x0
  42010c:	cset	w8, ne  // ne = any
  420110:	lsl	w9, w8, #1
  420114:	b	420238 <_obstack_memory_used@@Base+0xa7e0>
  420118:	mov	w0, w21
  42011c:	bl	402b10 <iswalnum@plt>
  420120:	cmp	w21, #0x5f
  420124:	mov	w8, #0x1                   	// #1
  420128:	b.eq	41fd40 <_obstack_memory_used@@Base+0xa2e8>  // b.none
  42012c:	cbz	w0, 41fd18 <_obstack_memory_used@@Base+0xa2c0>
  420130:	b	41fd40 <_obstack_memory_used@@Base+0xa2e8>
  420134:	str	x8, [x19, #48]
  420138:	b	42016c <_obstack_memory_used@@Base+0xa714>
  42013c:	cmn	w9, #0x1
  420140:	str	x8, [x19, #48]
  420144:	b.eq	42016c <_obstack_memory_used@@Base+0xa714>  // b.none
  420148:	ldrb	w8, [x19, #142]
  42014c:	cbnz	w8, 420490 <_obstack_memory_used@@Base+0xaa38>
  420150:	cmp	w9, #0xa
  420154:	b.ne	4203e4 <_obstack_memory_used@@Base+0xa98c>  // b.any
  420158:	ldrb	w8, [x19, #141]
  42015c:	cmp	w8, #0x0
  420160:	cset	w8, ne  // ne = any
  420164:	lsl	w8, w8, #1
  420168:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  42016c:	cmp	x26, #0x0
  420170:	b.le	4201ac <_obstack_memory_used@@Base+0xa754>
  420174:	ldr	x9, [x19, #88]
  420178:	sub	x8, x26, #0x1
  42017c:	cmp	x9, x8
  420180:	b.eq	420464 <_obstack_memory_used@@Base+0xaa0c>  // b.none
  420184:	ldr	w9, [x19, #144]
  420188:	cmp	w9, #0x2
  42018c:	b.lt	42038c <_obstack_memory_used@@Base+0xa934>  // b.tstop
  420190:	ldr	x9, [x19, #16]
  420194:	ldr	w21, [x9, x8, lsl #2]
  420198:	cmn	w21, #0x1
  42019c:	b.ne	4203d4 <_obstack_memory_used@@Base+0xa97c>  // b.any
  4201a0:	sub	x8, x8, #0x1
  4201a4:	cmn	x8, #0x1
  4201a8:	b.ne	420194 <_obstack_memory_used@@Base+0xa73c>  // b.any
  4201ac:	ldr	w8, [x19, #112]
  4201b0:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  4201b4:	ldr	x10, [x19, #120]
  4201b8:	cbz	x10, 41fdec <_obstack_memory_used@@Base+0xa394>
  4201bc:	ldr	x11, [x19, #64]
  4201c0:	ldr	x8, [x19, #48]
  4201c4:	cmp	x11, x9
  4201c8:	csel	x9, x9, x11, gt
  4201cc:	cmp	x8, x9
  4201d0:	b.ge	4203b4 <_obstack_memory_used@@Base+0xa95c>  // b.tcont
  4201d4:	ldp	x11, x13, [x19]
  4201d8:	add	x12, x8, x20
  4201dc:	ldrb	w11, [x11, x12]
  4201e0:	ldrb	w10, [x10, x11]
  4201e4:	strb	w10, [x13, x8]
  4201e8:	add	x8, x8, #0x1
  4201ec:	cmp	x8, x9
  4201f0:	b.ge	4203b4 <_obstack_memory_used@@Base+0xa95c>  // b.tcont
  4201f4:	ldr	x10, [x19, #40]
  4201f8:	ldp	x11, x13, [x19]
  4201fc:	ldr	x12, [x19, #120]
  420200:	add	x10, x11, x10
  420204:	ldrb	w10, [x10, x8]
  420208:	ldrb	w10, [x12, x10]
  42020c:	b	4201e4 <_obstack_memory_used@@Base+0xa78c>
  420210:	cmp	w8, #0xa
  420214:	b.ne	4203c8 <_obstack_memory_used@@Base+0xa970>  // b.any
  420218:	ldrb	w8, [x19, #141]
  42021c:	cmp	w8, #0x0
  420220:	cset	w8, ne  // ne = any
  420224:	lsl	w8, w8, #1
  420228:	b	4203cc <_obstack_memory_used@@Base+0xa974>
  42022c:	cmp	w8, #0xa
  420230:	b.eq	420104 <_obstack_memory_used@@Base+0xa6ac>  // b.none
  420234:	mov	w9, wzr
  420238:	ldr	x8, [x19, #48]
  42023c:	cmp	x22, x25
  420240:	str	w9, [x19, #112]
  420244:	b.ne	4202d0 <_obstack_memory_used@@Base+0xa878>  // b.any
  420248:	subs	x9, x8, x25
  42024c:	b.le	4202d0 <_obstack_memory_used@@Base+0xa878>
  420250:	ldr	x10, [x19, #24]
  420254:	ldr	x10, [x10, x25, lsl #3]
  420258:	cmp	x10, x25
  42025c:	b.ne	4202d0 <_obstack_memory_used@@Base+0xa878>  // b.any
  420260:	ldr	x0, [x19, #16]
  420264:	lsl	x2, x9, #2
  420268:	add	x1, x0, x25, lsl #2
  42026c:	bl	402590 <memmove@plt>
  420270:	ldr	x0, [x19, #8]
  420274:	ldr	x8, [x19, #48]
  420278:	add	x1, x0, x25
  42027c:	sub	x2, x8, x25
  420280:	bl	402590 <memmove@plt>
  420284:	ldr	q0, [x19, #48]
  420288:	dup	v1.2d, x25
  42028c:	sub	v0.2d, v0.2d, v1.2d
  420290:	fmov	x8, d0
  420294:	cmp	x8, #0x1
  420298:	str	q0, [x19, #48]
  42029c:	b.lt	41fd80 <_obstack_memory_used@@Base+0xa328>  // b.tstop
  4202a0:	ldr	x9, [x19, #24]
  4202a4:	mov	x8, xzr
  4202a8:	add	x10, x9, x25, lsl #3
  4202ac:	lsl	x11, x8, #3
  4202b0:	ldr	x12, [x10, x11]
  4202b4:	add	x8, x8, #0x1
  4202b8:	sub	x12, x12, x25
  4202bc:	str	x12, [x9, x11]
  4202c0:	ldr	x11, [x19, #48]
  4202c4:	cmp	x8, x11
  4202c8:	b.lt	4202ac <_obstack_memory_used@@Base+0xa854>  // b.tstop
  4202cc:	b	41fd80 <_obstack_memory_used@@Base+0xa328>
  4202d0:	ldr	x9, [x19, #80]
  4202d4:	ldr	x10, [x19, #96]
  4202d8:	sub	x11, x25, x20
  4202dc:	strb	wzr, [x19, #140]
  4202e0:	add	x9, x11, x9
  4202e4:	add	x10, x11, x10
  4202e8:	str	x9, [x19, #88]
  4202ec:	str	x10, [x19, #104]
  4202f0:	mov	x9, x22
  4202f4:	subs	x22, x22, #0x1
  4202f8:	b.lt	420310 <_obstack_memory_used@@Base+0xa8b8>  // b.tstop
  4202fc:	ldr	x10, [x19, #24]
  420300:	add	x10, x10, x9, lsl #3
  420304:	ldur	x10, [x10, #-8]
  420308:	cmp	x10, x25
  42030c:	b.eq	4202f0 <_obstack_memory_used@@Base+0xa898>  // b.none
  420310:	cmp	x9, x8
  420314:	b.ge	420338 <_obstack_memory_used@@Base+0xa8e0>  // b.tcont
  420318:	ldr	x10, [x19, #16]
  42031c:	ldr	w11, [x10, x9, lsl #2]
  420320:	cmn	w11, #0x1
  420324:	b.ne	420338 <_obstack_memory_used@@Base+0xa8e0>  // b.any
  420328:	add	x9, x9, #0x1
  42032c:	cmp	x8, x9
  420330:	b.ne	42031c <_obstack_memory_used@@Base+0xa8c4>  // b.any
  420334:	b	420340 <_obstack_memory_used@@Base+0xa8e8>
  420338:	cmp	x9, x8
  42033c:	b.ne	42034c <_obstack_memory_used@@Base+0xa8f4>  // b.any
  420340:	mov	x8, xzr
  420344:	stp	xzr, xzr, [x19, #48]
  420348:	b	41fd80 <_obstack_memory_used@@Base+0xa328>
  42034c:	ldr	x8, [x19, #24]
  420350:	ldr	x8, [x8, x9, lsl #3]
  420354:	subs	x21, x8, x25
  420358:	str	x21, [x19, #48]
  42035c:	b.eq	4203bc <_obstack_memory_used@@Base+0xa964>  // b.none
  420360:	cmp	x21, #0x1
  420364:	b.lt	420378 <_obstack_memory_used@@Base+0xa920>  // b.tstop
  420368:	ldr	x0, [x19, #16]
  42036c:	lsl	x2, x21, #2
  420370:	mov	w1, #0xff                  	// #255
  420374:	bl	402800 <memset@plt>
  420378:	ldr	x0, [x19, #8]
  42037c:	mov	w1, #0xff                  	// #255
  420380:	mov	x2, x21
  420384:	bl	402800 <memset@plt>
  420388:	b	4203f4 <_obstack_memory_used@@Base+0xa99c>
  42038c:	ldr	x9, [x19, #8]
  420390:	ldrb	w8, [x9, x8]
  420394:	ldr	x9, [x19, #128]
  420398:	lsr	x10, x8, #3
  42039c:	and	x10, x10, #0x18
  4203a0:	ldr	x9, [x9, x10]
  4203a4:	lsr	x9, x9, x8
  4203a8:	tbz	w9, #0, 420400 <_obstack_memory_used@@Base+0xa9a8>
  4203ac:	mov	w8, #0x1                   	// #1
  4203b0:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  4203b4:	stp	x8, x8, [x19, #48]
  4203b8:	b	41fdec <_obstack_memory_used@@Base+0xa394>
  4203bc:	mov	x8, xzr
  4203c0:	str	xzr, [x19, #56]
  4203c4:	b	41fd80 <_obstack_memory_used@@Base+0xa328>
  4203c8:	mov	w8, wzr
  4203cc:	str	w8, [x19, #112]
  4203d0:	b	41fd80 <_obstack_memory_used@@Base+0xa328>
  4203d4:	ldrb	w8, [x19, #142]
  4203d8:	cbnz	w8, 4204f8 <_obstack_memory_used@@Base+0xaaa0>
  4203dc:	cmp	w21, #0xa
  4203e0:	b.eq	420158 <_obstack_memory_used@@Base+0xa700>  // b.none
  4203e4:	mov	w8, wzr
  4203e8:	ldr	x21, [x19, #48]
  4203ec:	str	w8, [x19, #112]
  4203f0:	cbnz	x21, 420440 <_obstack_memory_used@@Base+0xa9e8>
  4203f4:	ldr	x8, [x19, #48]
  4203f8:	str	x8, [x19, #56]
  4203fc:	b	41fd80 <_obstack_memory_used@@Base+0xa328>
  420400:	cmp	w8, #0xa
  420404:	b.ne	4203e4 <_obstack_memory_used@@Base+0xa98c>  // b.any
  420408:	b	420158 <_obstack_memory_used@@Base+0xa700>
  42040c:	ldr	x10, [x19, #80]
  420410:	ldr	x11, [x19, #96]
  420414:	sub	x12, x25, x20
  420418:	strb	wzr, [x19, #140]
  42041c:	add	x10, x12, x10
  420420:	add	x11, x12, x11
  420424:	str	x10, [x19, #88]
  420428:	str	x11, [x19, #104]
  42042c:	b	41fe2c <_obstack_memory_used@@Base+0xa3d4>
  420430:	and	w8, w21, #0x2
  420434:	mov	w9, #0xa                   	// #10
  420438:	eor	w9, w8, w9
  42043c:	b	420238 <_obstack_memory_used@@Base+0xa7e0>
  420440:	cmp	x21, #0x1
  420444:	b.lt	420458 <_obstack_memory_used@@Base+0xaa00>  // b.tstop
  420448:	ldr	x0, [x19, #16]
  42044c:	lsl	x2, x21, #2
  420450:	mov	w1, #0xff                  	// #255
  420454:	bl	402800 <memset@plt>
  420458:	ldrb	w8, [x19, #139]
  42045c:	cbnz	w8, 420378 <_obstack_memory_used@@Base+0xa920>
  420460:	b	4203f4 <_obstack_memory_used@@Base+0xa99c>
  420464:	and	w8, w21, #0x2
  420468:	mov	w9, #0xa                   	// #10
  42046c:	eor	w8, w8, w9
  420470:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  420474:	mov	w0, w21
  420478:	bl	402b10 <iswalnum@plt>
  42047c:	cmp	w21, #0x5f
  420480:	mov	w9, #0x1                   	// #1
  420484:	b.eq	420238 <_obstack_memory_used@@Base+0xa7e0>  // b.none
  420488:	cbz	w0, 4200fc <_obstack_memory_used@@Base+0xa6a4>
  42048c:	b	420238 <_obstack_memory_used@@Base+0xa7e0>
  420490:	mov	w0, w9
  420494:	mov	w21, w9
  420498:	bl	402b10 <iswalnum@plt>
  42049c:	cmp	w21, #0x5f
  4204a0:	mov	w8, #0x1                   	// #1
  4204a4:	b.eq	4203e8 <_obstack_memory_used@@Base+0xa990>  // b.none
  4204a8:	mov	w9, w21
  4204ac:	cbz	w0, 420150 <_obstack_memory_used@@Base+0xa6f8>
  4204b0:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  4204b4:	cmp	x2, #0x6
  4204b8:	mov	w11, #0x6                   	// #6
  4204bc:	csel	x11, x2, x11, lt  // lt = tstop
  4204c0:	cmp	w11, #0x1
  4204c4:	add	x1, sp, #0xc
  4204c8:	b.lt	41fea4 <_obstack_memory_used@@Base+0xa44c>  // b.tstop
  4204cc:	sxtw	x11, w11
  4204d0:	sub	x12, x1, #0x1
  4204d4:	add	x13, x8, x11
  4204d8:	add	x13, x10, x13
  4204dc:	ldurb	w13, [x13, #-1]
  4204e0:	add	x1, sp, #0xc
  4204e4:	ldrb	w13, [x9, x13]
  4204e8:	strb	w13, [x12, x11]
  4204ec:	subs	x11, x11, #0x1
  4204f0:	b.gt	4204d4 <_obstack_memory_used@@Base+0xaa7c>
  4204f4:	b	41fea4 <_obstack_memory_used@@Base+0xa44c>
  4204f8:	mov	w0, w21
  4204fc:	bl	402b10 <iswalnum@plt>
  420500:	cmp	w21, #0x5f
  420504:	mov	w8, #0x1                   	// #1
  420508:	b.eq	4203e8 <_obstack_memory_used@@Base+0xa990>  // b.none
  42050c:	cbz	w0, 4203dc <_obstack_memory_used@@Base+0xa984>
  420510:	b	4203e8 <_obstack_memory_used@@Base+0xa990>
  420514:	stp	x29, x30, [sp, #-64]!
  420518:	stp	x22, x21, [sp, #32]
  42051c:	stp	x20, x19, [sp, #48]
  420520:	ldr	x8, [x0, #232]
  420524:	mov	x19, x0
  420528:	str	x23, [sp, #16]
  42052c:	mov	x29, sp
  420530:	cmp	x8, #0x1
  420534:	b.lt	4205bc <_obstack_memory_used@@Base+0xab64>  // b.tstop
  420538:	mov	x22, xzr
  42053c:	b	420558 <_obstack_memory_used@@Base+0xab00>
  420540:	mov	x0, x20
  420544:	bl	402a10 <free@plt>
  420548:	ldr	x8, [x19, #232]
  42054c:	add	x22, x22, #0x1
  420550:	cmp	x22, x8
  420554:	b.ge	4205bc <_obstack_memory_used@@Base+0xab64>  // b.tcont
  420558:	ldr	x8, [x19, #248]
  42055c:	ldr	x20, [x8, x22, lsl #3]
  420560:	ldr	x8, [x20, #32]
  420564:	cmp	x8, #0x1
  420568:	b.lt	420598 <_obstack_memory_used@@Base+0xab40>  // b.tstop
  42056c:	mov	x23, xzr
  420570:	ldr	x8, [x20, #40]
  420574:	ldr	x21, [x8, x23, lsl #3]
  420578:	ldr	x0, [x21, #32]
  42057c:	bl	402a10 <free@plt>
  420580:	mov	x0, x21
  420584:	bl	402a10 <free@plt>
  420588:	ldr	x8, [x20, #32]
  42058c:	add	x23, x23, #0x1
  420590:	cmp	x23, x8
  420594:	b.lt	420570 <_obstack_memory_used@@Base+0xab18>  // b.tstop
  420598:	ldr	x0, [x20, #40]
  42059c:	bl	402a10 <free@plt>
  4205a0:	ldr	x8, [x20, #16]
  4205a4:	cbz	x8, 420540 <_obstack_memory_used@@Base+0xaae8>
  4205a8:	ldr	x0, [x8, #16]
  4205ac:	bl	402a10 <free@plt>
  4205b0:	ldr	x0, [x20, #16]
  4205b4:	bl	402a10 <free@plt>
  4205b8:	b	420540 <_obstack_memory_used@@Base+0xaae8>
  4205bc:	str	xzr, [x19, #232]
  4205c0:	str	xzr, [x19, #200]
  4205c4:	ldp	x20, x19, [sp, #48]
  4205c8:	ldp	x22, x21, [sp, #32]
  4205cc:	ldr	x23, [sp, #16]
  4205d0:	ldp	x29, x30, [sp], #64
  4205d4:	ret
  4205d8:	stp	x29, x30, [sp, #-96]!
  4205dc:	stp	x28, x27, [sp, #16]
  4205e0:	stp	x26, x25, [sp, #32]
  4205e4:	stp	x24, x23, [sp, #48]
  4205e8:	stp	x22, x21, [sp, #64]
  4205ec:	stp	x20, x19, [sp, #80]
  4205f0:	mov	x29, sp
  4205f4:	sub	sp, sp, #0x90
  4205f8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x115a8>
  4205fc:	add	x8, x8, #0xdf8
  420600:	ldr	q0, [x8]
  420604:	ldr	x8, [x8, #16]
  420608:	ldr	x25, [x0]
  42060c:	mov	x20, x3
  420610:	mov	x21, x2
  420614:	mov	x22, x1
  420618:	stur	q0, [x29, #-64]
  42061c:	stur	x8, [x29, #-48]
  420620:	tbz	w4, #0, 42063c <_obstack_memory_used@@Base+0xabe4>
  420624:	mov	w0, #0x60                  	// #96
  420628:	bl	402730 <malloc@plt>
  42062c:	stur	x0, [x29, #-48]
  420630:	cbz	x0, 420780 <_obstack_memory_used@@Base+0xad28>
  420634:	sub	x28, x29, #0x40
  420638:	b	420640 <_obstack_memory_used@@Base+0xabe8>
  42063c:	mov	x28, xzr
  420640:	ldr	x19, [x25, #144]
  420644:	lsl	x23, x21, #4
  420648:	cmp	x23, #0xfbf
  42064c:	stp	xzr, xzr, [x29, #-32]
  420650:	stur	xzr, [x29, #-16]
  420654:	b.hi	420674 <_obstack_memory_used@@Base+0xac1c>  // b.pmore
  420658:	add	x9, x23, #0xf
  42065c:	mov	x8, sp
  420660:	and	x9, x9, #0xfffffffffffffff0
  420664:	sub	x0, x8, x9
  420668:	mov	sp, x0
  42066c:	stur	wzr, [x29, #-84]
  420670:	b	420688 <_obstack_memory_used@@Base+0xac30>
  420674:	mov	x0, x23
  420678:	bl	402730 <malloc@plt>
  42067c:	cbz	x0, 42072c <_obstack_memory_used@@Base+0xacd4>
  420680:	mov	w8, #0x1                   	// #1
  420684:	stur	w8, [x29, #-84]
  420688:	mov	x1, x20
  42068c:	mov	x2, x23
  420690:	stur	x0, [x29, #-96]
  420694:	bl	402580 <memcpy@plt>
  420698:	ldp	x24, x8, [x20]
  42069c:	cmp	x24, x8
  4206a0:	b.le	420710 <_obstack_memory_used@@Base+0xacb8>
  4206a4:	mov	x0, xzr
  4206a8:	bl	402a10 <free@plt>
  4206ac:	ldur	w8, [x29, #-84]
  4206b0:	cbz	w8, 4206bc <_obstack_memory_used@@Base+0xac64>
  4206b4:	ldur	x0, [x29, #-96]
  4206b8:	bl	402a10 <free@plt>
  4206bc:	cbz	x28, 420f6c <_obstack_memory_used@@Base+0xb514>
  4206c0:	ldr	x8, [x28]
  4206c4:	ldr	x0, [x28, #16]
  4206c8:	cmp	x8, #0x1
  4206cc:	b.lt	420f68 <_obstack_memory_used@@Base+0xb510>  // b.tstop
  4206d0:	mov	x19, xzr
  4206d4:	mov	x20, xzr
  4206d8:	add	x8, x0, x19
  4206dc:	ldr	x0, [x8, #40]
  4206e0:	bl	402a10 <free@plt>
  4206e4:	ldr	x8, [x28, #16]
  4206e8:	add	x8, x8, x19
  4206ec:	ldr	x0, [x8, #16]
  4206f0:	bl	402a10 <free@plt>
  4206f4:	ldr	x8, [x28]
  4206f8:	ldr	x0, [x28, #16]
  4206fc:	add	x20, x20, #0x1
  420700:	add	x19, x19, #0x30
  420704:	cmp	x20, x8
  420708:	b.lt	4206d8 <_obstack_memory_used@@Base+0xac80>  // b.tstop
  42070c:	b	420f68 <_obstack_memory_used@@Base+0xb510>
  420710:	add	x8, x20, #0x8
  420714:	stur	x8, [x29, #-104]
  420718:	mov	w8, #0x1                   	// #1
  42071c:	dup	v0.2d, x8
  420720:	stur	q0, [x29, #-128]
  420724:	stp	x21, x25, [x29, #-80]
  420728:	b	420810 <_obstack_memory_used@@Base+0xadb8>
  42072c:	cbz	x28, 420780 <_obstack_memory_used@@Base+0xad28>
  420730:	ldr	x8, [x28]
  420734:	ldr	x0, [x28, #16]
  420738:	cmp	x8, #0x1
  42073c:	b.lt	42077c <_obstack_memory_used@@Base+0xad24>  // b.tstop
  420740:	mov	x19, xzr
  420744:	mov	x20, xzr
  420748:	add	x8, x0, x19
  42074c:	ldr	x0, [x8, #40]
  420750:	bl	402a10 <free@plt>
  420754:	ldr	x8, [x28, #16]
  420758:	add	x8, x8, x19
  42075c:	ldr	x0, [x8, #16]
  420760:	bl	402a10 <free@plt>
  420764:	ldr	x8, [x28]
  420768:	ldr	x0, [x28, #16]
  42076c:	add	x20, x20, #0x1
  420770:	add	x19, x19, #0x30
  420774:	cmp	x20, x8
  420778:	b.lt	420748 <_obstack_memory_used@@Base+0xacf0>  // b.tstop
  42077c:	bl	402a10 <free@plt>
  420780:	mov	w0, #0xc                   	// #12
  420784:	b	420f70 <_obstack_memory_used@@Base+0xb518>
  420788:	cmn	x25, #0x2
  42078c:	b.eq	421050 <_obstack_memory_used@@Base+0xb5f8>  // b.none
  420790:	ldur	x21, [x29, #-80]
  420794:	cbz	x28, 420f98 <_obstack_memory_used@@Base+0xb540>
  420798:	ldr	x8, [x28]
  42079c:	ldr	x9, [x28, #16]
  4207a0:	mov	x0, x20
  4207a4:	mov	x2, x23
  4207a8:	sub	x8, x8, #0x1
  4207ac:	str	x8, [x28]
  4207b0:	add	x8, x8, x8, lsl #1
  4207b4:	lsl	x19, x8, #4
  4207b8:	add	x8, x9, x19
  4207bc:	ldr	x1, [x8, #16]
  4207c0:	ldr	x24, [x8]
  4207c4:	bl	402580 <memcpy@plt>
  4207c8:	ldur	x0, [x29, #-16]
  4207cc:	bl	402a10 <free@plt>
  4207d0:	ldr	x8, [x28, #16]
  4207d4:	add	x8, x8, x19
  4207d8:	ldr	x0, [x8, #16]
  4207dc:	bl	402a10 <free@plt>
  4207e0:	ldr	x8, [x28, #16]
  4207e4:	add	x8, x8, x19
  4207e8:	ldr	x9, [x8, #40]
  4207ec:	ldur	q0, [x8, #24]
  4207f0:	stur	x9, [x29, #-16]
  4207f4:	stur	q0, [x29, #-32]
  4207f8:	ldr	x25, [x8, #8]
  4207fc:	ldr	x8, [x20, #8]
  420800:	mov	x19, x25
  420804:	ldur	x25, [x29, #-72]
  420808:	cmp	x24, x8
  42080c:	b.gt	420f90 <_obstack_memory_used@@Base+0xb538>
  420810:	ldr	x8, [x25]
  420814:	add	x8, x8, x19, lsl #4
  420818:	ldr	w9, [x8, #8]
  42081c:	and	w10, w9, #0xff
  420820:	cmp	w10, #0x9
  420824:	b.eq	420850 <_obstack_memory_used@@Base+0xadf8>  // b.none
  420828:	cmp	w10, #0x8
  42082c:	b.ne	4208b4 <_obstack_memory_used@@Base+0xae5c>  // b.any
  420830:	ldr	x8, [x8]
  420834:	add	x8, x8, #0x1
  420838:	cmp	x8, x21
  42083c:	b.ge	4208b4 <_obstack_memory_used@@Base+0xae5c>  // b.tcont
  420840:	add	x8, x20, x8, lsl #4
  420844:	mov	x9, #0xffffffffffffffff    	// #-1
  420848:	stp	x24, x9, [x8]
  42084c:	b	4208b4 <_obstack_memory_used@@Base+0xae5c>
  420850:	ldr	x8, [x8]
  420854:	add	x8, x8, #0x1
  420858:	cmp	x8, x21
  42085c:	b.ge	4208b4 <_obstack_memory_used@@Base+0xae5c>  // b.tcont
  420860:	lsl	x10, x8, #4
  420864:	ldr	x11, [x20, x10]
  420868:	cmp	x11, x24
  42086c:	b.ge	420884 <_obstack_memory_used@@Base+0xae2c>  // b.tcont
  420870:	ldur	x0, [x29, #-96]
  420874:	add	x8, x20, x8, lsl #4
  420878:	str	x24, [x8, #8]
  42087c:	mov	x1, x20
  420880:	b	4208a0 <_obstack_memory_used@@Base+0xae48>
  420884:	tbz	w9, #19, 4208ac <_obstack_memory_used@@Base+0xae54>
  420888:	ldur	x9, [x29, #-96]
  42088c:	ldr	x9, [x9, x10]
  420890:	cmn	x9, #0x1
  420894:	b.eq	4208ac <_obstack_memory_used@@Base+0xae54>  // b.none
  420898:	ldur	x1, [x29, #-96]
  42089c:	mov	x0, x20
  4208a0:	mov	x2, x23
  4208a4:	bl	402580 <memcpy@plt>
  4208a8:	b	4208b4 <_obstack_memory_used@@Base+0xae5c>
  4208ac:	add	x8, x20, x8, lsl #4
  4208b0:	str	x24, [x8, #8]
  4208b4:	ldr	x8, [x20, #8]
  4208b8:	cmp	x24, x8
  4208bc:	b.ne	420964 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  4208c0:	ldr	x8, [x22, #176]
  4208c4:	cmp	x19, x8
  4208c8:	b.ne	420964 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  4208cc:	cbz	x28, 420fb8 <_obstack_memory_used@@Base+0xb560>
  4208d0:	ldur	x9, [x29, #-104]
  4208d4:	mov	x8, x21
  4208d8:	b	4208e8 <_obstack_memory_used@@Base+0xae90>
  4208dc:	subs	x8, x8, #0x1
  4208e0:	add	x9, x9, #0x10
  4208e4:	b.eq	420f04 <_obstack_memory_used@@Base+0xb4ac>  // b.none
  4208e8:	ldur	x10, [x9, #-8]
  4208ec:	tbnz	x10, #63, 4208dc <_obstack_memory_used@@Base+0xae84>
  4208f0:	ldr	x10, [x9]
  4208f4:	cmn	x10, #0x1
  4208f8:	b.ne	4208dc <_obstack_memory_used@@Base+0xae84>  // b.any
  4208fc:	cbz	x8, 420f04 <_obstack_memory_used@@Base+0xb4ac>
  420900:	ldr	x8, [x28]
  420904:	ldr	x9, [x28, #16]
  420908:	mov	x0, x20
  42090c:	mov	x2, x23
  420910:	sub	x8, x8, #0x1
  420914:	str	x8, [x28]
  420918:	add	x8, x8, x8, lsl #1
  42091c:	lsl	x19, x8, #4
  420920:	add	x8, x9, x19
  420924:	ldr	x1, [x8, #16]
  420928:	ldr	x24, [x8]
  42092c:	bl	402580 <memcpy@plt>
  420930:	ldur	x0, [x29, #-16]
  420934:	bl	402a10 <free@plt>
  420938:	ldr	x8, [x28, #16]
  42093c:	add	x8, x8, x19
  420940:	ldr	x0, [x8, #16]
  420944:	bl	402a10 <free@plt>
  420948:	ldr	x8, [x28, #16]
  42094c:	add	x8, x8, x19
  420950:	ldr	x9, [x8, #40]
  420954:	ldur	q0, [x8, #24]
  420958:	stur	x9, [x29, #-16]
  42095c:	stur	q0, [x29, #-32]
  420960:	ldr	x19, [x8, #8]
  420964:	ldr	x26, [x22, #152]
  420968:	ldr	x8, [x26]
  42096c:	add	x9, x8, x19, lsl #4
  420970:	ldr	w9, [x9, #8]
  420974:	tbnz	w9, #3, 420a10 <_obstack_memory_used@@Base+0xafb8>
  420978:	tbnz	w9, #20, 420a44 <_obstack_memory_used@@Base+0xafec>
  42097c:	and	w9, w9, #0xff
  420980:	cmp	w9, #0x4
  420984:	b.ne	420a60 <_obstack_memory_used@@Base+0xb008>  // b.any
  420988:	lsl	x9, x19, #4
  42098c:	ldr	x8, [x8, x9]
  420990:	add	x8, x8, #0x1
  420994:	cmp	x8, x21
  420998:	b.ge	420bf8 <_obstack_memory_used@@Base+0xb1a0>  // b.tcont
  42099c:	add	x9, x20, x8, lsl #4
  4209a0:	ldp	x9, x10, [x9]
  4209a4:	sub	x27, x10, x9
  4209a8:	cbz	x28, 420c00 <_obstack_memory_used@@Base+0xb1a8>
  4209ac:	cmp	x8, x21
  4209b0:	b.ge	420798 <_obstack_memory_used@@Base+0xad40>  // b.tcont
  4209b4:	lsl	x9, x8, #4
  4209b8:	ldr	x9, [x20, x9]
  4209bc:	cmn	x9, #0x1
  4209c0:	b.eq	420798 <_obstack_memory_used@@Base+0xad40>  // b.none
  4209c4:	add	x8, x20, x8, lsl #4
  4209c8:	ldr	x8, [x8, #8]
  4209cc:	cmn	x8, #0x1
  4209d0:	b.eq	420798 <_obstack_memory_used@@Base+0xad40>  // b.none
  4209d4:	cbz	x27, 420c60 <_obstack_memory_used@@Base+0xb208>
  4209d8:	ldr	x8, [x22, #48]
  4209dc:	sub	x8, x8, x24
  4209e0:	cmp	x8, x27
  4209e4:	b.lt	420798 <_obstack_memory_used@@Base+0xad40>  // b.tstop
  4209e8:	ldr	x8, [x22, #8]
  4209ec:	mov	x2, x27
  4209f0:	add	x0, x8, x9
  4209f4:	add	x1, x8, x24
  4209f8:	bl	402850 <bcmp@plt>
  4209fc:	cbnz	w0, 420798 <_obstack_memory_used@@Base+0xad40>
  420a00:	ldr	x8, [x26, #24]
  420a04:	add	x24, x27, x24
  420a08:	ldr	x25, [x8, x19, lsl #3]
  420a0c:	b	420a8c <_obstack_memory_used@@Base+0xb034>
  420a10:	ldr	x9, [x22, #184]
  420a14:	ldur	x8, [x29, #-32]
  420a18:	ldr	x25, [x26, #40]
  420a1c:	ldr	x27, [x9, x24, lsl #3]
  420a20:	cbz	x8, 420af0 <_obstack_memory_used@@Base+0xb098>
  420a24:	ldur	x21, [x29, #-24]
  420a28:	cbnz	x21, 420d98 <_obstack_memory_used@@Base+0xb340>
  420a2c:	ldur	x26, [x29, #-16]
  420a30:	mov	w8, #0x1                   	// #1
  420a34:	mov	w21, #0x1                   	// #1
  420a38:	str	x19, [x26]
  420a3c:	stur	x8, [x29, #-24]
  420a40:	b	420b18 <_obstack_memory_used@@Base+0xb0c0>
  420a44:	mov	x0, x26
  420a48:	mov	x1, x19
  420a4c:	mov	x2, x22
  420a50:	mov	x3, x24
  420a54:	bl	423410 <_obstack_memory_used@@Base+0xd9b8>
  420a58:	sxtw	x27, w0
  420a5c:	cbnz	x27, 420a7c <_obstack_memory_used@@Base+0xb024>
  420a60:	ldr	x8, [x26]
  420a64:	mov	x0, x22
  420a68:	mov	x2, x24
  420a6c:	add	x1, x8, x19, lsl #4
  420a70:	bl	423728 <_obstack_memory_used@@Base+0xdcd0>
  420a74:	tbz	w0, #0, 420790 <_obstack_memory_used@@Base+0xad38>
  420a78:	mov	w27, #0x1                   	// #1
  420a7c:	ldr	x8, [x26, #24]
  420a80:	add	x24, x27, x24
  420a84:	ldr	x25, [x8, x19, lsl #3]
  420a88:	cbz	x28, 420c10 <_obstack_memory_used@@Base+0xb1b8>
  420a8c:	ldr	x8, [x22, #168]
  420a90:	ldur	x21, [x29, #-80]
  420a94:	cmp	x24, x8
  420a98:	b.gt	420798 <_obstack_memory_used@@Base+0xad40>
  420a9c:	ldr	x8, [x22, #184]
  420aa0:	ldr	x8, [x8, x24, lsl #3]
  420aa4:	cbz	x8, 420798 <_obstack_memory_used@@Base+0xad40>
  420aa8:	ldr	x9, [x8, #16]
  420aac:	subs	x9, x9, #0x1
  420ab0:	b.lt	420798 <_obstack_memory_used@@Base+0xad40>  // b.tstop
  420ab4:	ldr	x8, [x8, #24]
  420ab8:	mov	x10, xzr
  420abc:	b.eq	420ae0 <_obstack_memory_used@@Base+0xb088>  // b.none
  420ac0:	add	x11, x10, x9
  420ac4:	lsr	x11, x11, #1
  420ac8:	ldr	x12, [x8, x11, lsl #3]
  420acc:	cmp	x12, x25
  420ad0:	csinc	x10, x10, x11, ge  // ge = tcont
  420ad4:	csel	x9, x9, x11, lt  // lt = tstop
  420ad8:	cmp	x10, x9
  420adc:	b.cc	420ac0 <_obstack_memory_used@@Base+0xb068>  // b.lo, b.ul, b.last
  420ae0:	ldr	x8, [x8, x10, lsl #3]
  420ae4:	cmp	x8, x25
  420ae8:	b.ne	420790 <_obstack_memory_used@@Base+0xad38>  // b.any
  420aec:	b	420c10 <_obstack_memory_used@@Base+0xb1b8>
  420af0:	mov	w8, #0x1                   	// #1
  420af4:	dup	v0.2d, x8
  420af8:	mov	w0, #0x8                   	// #8
  420afc:	stur	q0, [x29, #-32]
  420b00:	bl	402730 <malloc@plt>
  420b04:	mov	x26, x0
  420b08:	stur	x0, [x29, #-16]
  420b0c:	cbz	x0, 420fe0 <_obstack_memory_used@@Base+0xb588>
  420b10:	str	x19, [x26]
  420b14:	mov	w21, #0x1                   	// #1
  420b18:	mov	w8, #0x18                  	// #24
  420b1c:	madd	x8, x19, x8, x25
  420b20:	ldr	x8, [x8, #8]
  420b24:	cmp	x8, #0x1
  420b28:	b.lt	420790 <_obstack_memory_used@@Base+0xad38>  // b.tstop
  420b2c:	mov	w11, #0x18                  	// #24
  420b30:	ldr	x10, [x27, #16]
  420b34:	madd	x11, x19, x11, x25
  420b38:	ldr	x11, [x11, #16]
  420b3c:	mov	x9, xzr
  420b40:	sub	x12, x10, #0x1
  420b44:	mov	x25, #0xffffffffffffffff    	// #-1
  420b48:	b	420b5c <_obstack_memory_used@@Base+0xb104>
  420b4c:	mov	x25, x19
  420b50:	add	x9, x9, #0x1
  420b54:	cmp	x9, x8
  420b58:	b.eq	420c14 <_obstack_memory_used@@Base+0xb1bc>  // b.none
  420b5c:	cmp	x10, #0x1
  420b60:	b.lt	420b50 <_obstack_memory_used@@Base+0xb0f8>  // b.tstop
  420b64:	ldr	x19, [x11, x9, lsl #3]
  420b68:	ldr	x13, [x27, #24]
  420b6c:	mov	x14, xzr
  420b70:	cbz	x12, 420b98 <_obstack_memory_used@@Base+0xb140>
  420b74:	mov	x15, x12
  420b78:	add	x16, x14, x15
  420b7c:	lsr	x16, x16, #1
  420b80:	ldr	x17, [x13, x16, lsl #3]
  420b84:	cmp	x17, x19
  420b88:	csinc	x14, x14, x16, ge  // ge = tcont
  420b8c:	csel	x15, x15, x16, lt  // lt = tstop
  420b90:	cmp	x14, x15
  420b94:	b.cc	420b78 <_obstack_memory_used@@Base+0xb120>  // b.lo, b.ul, b.last
  420b98:	ldr	x13, [x13, x14, lsl #3]
  420b9c:	cmp	x13, x19
  420ba0:	b.ne	420b50 <_obstack_memory_used@@Base+0xb0f8>  // b.any
  420ba4:	cmn	x25, #0x1
  420ba8:	b.eq	420b4c <_obstack_memory_used@@Base+0xb0f4>  // b.none
  420bac:	subs	x8, x21, #0x1
  420bb0:	b.lt	420c20 <_obstack_memory_used@@Base+0xb1c8>  // b.tstop
  420bb4:	mov	x9, xzr
  420bb8:	b.eq	420bdc <_obstack_memory_used@@Base+0xb184>  // b.none
  420bbc:	add	x10, x9, x8
  420bc0:	lsr	x10, x10, #1
  420bc4:	ldr	x11, [x26, x10, lsl #3]
  420bc8:	cmp	x11, x25
  420bcc:	csinc	x9, x9, x10, ge  // ge = tcont
  420bd0:	csel	x8, x8, x10, lt  // lt = tstop
  420bd4:	cmp	x9, x8
  420bd8:	b.cc	420bbc <_obstack_memory_used@@Base+0xb164>  // b.lo, b.ul, b.last
  420bdc:	ldr	x8, [x26, x9, lsl #3]
  420be0:	cmp	x8, x25
  420be4:	csel	x8, x19, x25, eq  // eq = none
  420be8:	b.eq	420bf0 <_obstack_memory_used@@Base+0xb198>  // b.none
  420bec:	cbnz	x28, 420c24 <_obstack_memory_used@@Base+0xb1cc>
  420bf0:	mov	x25, x8
  420bf4:	b	420c14 <_obstack_memory_used@@Base+0xb1bc>
  420bf8:	mov	x27, xzr
  420bfc:	cbnz	x28, 4209ac <_obstack_memory_used@@Base+0xaf54>
  420c00:	cbz	x27, 420c60 <_obstack_memory_used@@Base+0xb208>
  420c04:	ldr	x8, [x26, #24]
  420c08:	add	x24, x27, x24
  420c0c:	ldr	x25, [x8, x19, lsl #3]
  420c10:	stur	xzr, [x29, #-24]
  420c14:	tbnz	x25, #63, 420788 <_obstack_memory_used@@Base+0xad30>
  420c18:	ldur	x21, [x29, #-80]
  420c1c:	b	4207fc <_obstack_memory_used@@Base+0xada4>
  420c20:	cbz	x28, 420c14 <_obstack_memory_used@@Base+0xb1bc>
  420c24:	stur	x23, [x29, #-136]
  420c28:	ldp	x23, x9, [x28]
  420c2c:	add	x8, x23, #0x1
  420c30:	cmp	x8, x9
  420c34:	str	x8, [x28]
  420c38:	b.ne	420c84 <_obstack_memory_used@@Base+0xb22c>  // b.any
  420c3c:	ldr	x0, [x28, #16]
  420c40:	add	x8, x8, x8, lsl #1
  420c44:	lsl	x1, x8, #5
  420c48:	bl	402870 <realloc@plt>
  420c4c:	cbz	x0, 420fe4 <_obstack_memory_used@@Base+0xb58c>
  420c50:	ldr	x8, [x28, #8]
  420c54:	lsl	x8, x8, #1
  420c58:	stp	x8, x0, [x28, #8]
  420c5c:	b	420c88 <_obstack_memory_used@@Base+0xb230>
  420c60:	ldur	x8, [x29, #-32]
  420c64:	cbz	x8, 420d18 <_obstack_memory_used@@Base+0xb2c0>
  420c68:	ldur	x21, [x29, #-24]
  420c6c:	cbnz	x21, 420e54 <_obstack_memory_used@@Base+0xb3fc>
  420c70:	ldur	x8, [x29, #-16]
  420c74:	str	x19, [x8]
  420c78:	mov	w8, #0x1                   	// #1
  420c7c:	stur	x8, [x29, #-24]
  420c80:	b	420d34 <_obstack_memory_used@@Base+0xb2dc>
  420c84:	ldr	x0, [x28, #16]
  420c88:	mov	w8, #0x30                  	// #48
  420c8c:	madd	x27, x23, x8, x0
  420c90:	stp	x24, x19, [x27]
  420c94:	ldur	x19, [x29, #-136]
  420c98:	mov	x0, x19
  420c9c:	bl	402730 <malloc@plt>
  420ca0:	str	x0, [x27, #16]
  420ca4:	cbz	x0, 420fe4 <_obstack_memory_used@@Base+0xb58c>
  420ca8:	mov	x1, x20
  420cac:	mov	x2, x19
  420cb0:	bl	402580 <memcpy@plt>
  420cb4:	ldr	x27, [x28, #16]
  420cb8:	mov	w8, #0x30                  	// #48
  420cbc:	cmp	x21, #0x1
  420cc0:	madd	x8, x23, x8, x27
  420cc4:	add	x9, x8, #0x18
  420cc8:	str	x21, [x8, #32]
  420ccc:	b.lt	420d08 <_obstack_memory_used@@Base+0xb2b0>  // b.tstop
  420cd0:	lsl	x19, x21, #3
  420cd4:	mov	x0, x19
  420cd8:	stur	x9, [x29, #-144]
  420cdc:	str	x21, [x9]
  420ce0:	bl	402730 <malloc@plt>
  420ce4:	mov	w8, #0x30                  	// #48
  420ce8:	madd	x8, x23, x8, x27
  420cec:	str	x0, [x8, #40]
  420cf0:	cbz	x0, 420fd0 <_obstack_memory_used@@Base+0xb578>
  420cf4:	mov	x1, x26
  420cf8:	mov	x2, x19
  420cfc:	bl	402580 <memcpy@plt>
  420d00:	ldur	x23, [x29, #-136]
  420d04:	b	420c14 <_obstack_memory_used@@Base+0xb1bc>
  420d08:	stp	xzr, xzr, [x9]
  420d0c:	ldur	x23, [x29, #-136]
  420d10:	str	xzr, [x9, #16]
  420d14:	b	420c14 <_obstack_memory_used@@Base+0xb1bc>
  420d18:	ldur	q0, [x29, #-128]
  420d1c:	mov	w0, #0x8                   	// #8
  420d20:	stur	q0, [x29, #-32]
  420d24:	bl	402730 <malloc@plt>
  420d28:	stur	x0, [x29, #-16]
  420d2c:	cbz	x0, 420fdc <_obstack_memory_used@@Base+0xb584>
  420d30:	str	x19, [x0]
  420d34:	ldr	x8, [x22, #184]
  420d38:	ldr	x9, [x8, x24, lsl #3]
  420d3c:	ldr	x8, [x9, #16]
  420d40:	subs	x8, x8, #0x1
  420d44:	b.lt	420a60 <_obstack_memory_used@@Base+0xb008>  // b.tstop
  420d48:	ldr	x10, [x26, #40]
  420d4c:	mov	w11, #0x18                  	// #24
  420d50:	ldr	x9, [x9, #24]
  420d54:	madd	x10, x19, x11, x10
  420d58:	ldr	x10, [x10, #16]
  420d5c:	ldr	x25, [x10]
  420d60:	mov	x10, xzr
  420d64:	b.eq	420d88 <_obstack_memory_used@@Base+0xb330>  // b.none
  420d68:	add	x11, x10, x8
  420d6c:	lsr	x11, x11, #1
  420d70:	ldr	x12, [x9, x11, lsl #3]
  420d74:	cmp	x12, x25
  420d78:	csinc	x10, x10, x11, ge  // ge = tcont
  420d7c:	csel	x8, x8, x11, lt  // lt = tstop
  420d80:	cmp	x10, x8
  420d84:	b.cc	420d68 <_obstack_memory_used@@Base+0xb310>  // b.lo, b.ul, b.last
  420d88:	ldr	x8, [x9, x10, lsl #3]
  420d8c:	cmp	x8, x25
  420d90:	b.ne	420a5c <_obstack_memory_used@@Base+0xb004>  // b.any
  420d94:	b	420c14 <_obstack_memory_used@@Base+0xb1bc>
  420d98:	cmp	x8, x21
  420d9c:	stur	x23, [x29, #-136]
  420da0:	b.ne	420dcc <_obstack_memory_used@@Base+0xb374>  // b.any
  420da4:	ldur	x0, [x29, #-16]
  420da8:	lsl	x9, x8, #1
  420dac:	lsl	x1, x8, #4
  420db0:	stur	x9, [x29, #-32]
  420db4:	mov	x23, x0
  420db8:	bl	402870 <realloc@plt>
  420dbc:	cbz	x0, 421058 <_obstack_memory_used@@Base+0xb600>
  420dc0:	mov	x26, x0
  420dc4:	stur	x0, [x29, #-16]
  420dc8:	b	420dd0 <_obstack_memory_used@@Base+0xb378>
  420dcc:	ldur	x26, [x29, #-16]
  420dd0:	ldr	x8, [x26]
  420dd4:	cmp	x8, x19
  420dd8:	b.le	420e08 <_obstack_memory_used@@Base+0xb3b0>
  420ddc:	cmp	x21, #0x1
  420de0:	b.lt	420e3c <_obstack_memory_used@@Base+0xb3e4>  // b.tstop
  420de4:	ldur	x23, [x29, #-136]
  420de8:	mov	x9, x21
  420dec:	add	x10, x26, x9, lsl #3
  420df0:	ldur	x11, [x10, #-8]
  420df4:	subs	x8, x9, #0x1
  420df8:	mov	x9, x8
  420dfc:	str	x11, [x10]
  420e00:	b.gt	420dec <_obstack_memory_used@@Base+0xb394>
  420e04:	b	420e44 <_obstack_memory_used@@Base+0xb3ec>
  420e08:	add	x8, x26, x21, lsl #3
  420e0c:	ldur	x9, [x8, #-8]
  420e10:	ldur	x23, [x29, #-136]
  420e14:	mov	x8, x21
  420e18:	cmp	x9, x19
  420e1c:	b.le	420e44 <_obstack_memory_used@@Base+0xb3ec>
  420e20:	add	x10, x26, x8, lsl #3
  420e24:	str	x9, [x10]
  420e28:	ldur	x9, [x10, #-16]
  420e2c:	sub	x8, x8, #0x1
  420e30:	cmp	x9, x19
  420e34:	b.gt	420e20 <_obstack_memory_used@@Base+0xb3c8>
  420e38:	b	420e44 <_obstack_memory_used@@Base+0xb3ec>
  420e3c:	ldur	x23, [x29, #-136]
  420e40:	mov	x8, x21
  420e44:	add	x21, x21, #0x1
  420e48:	str	x19, [x26, x8, lsl #3]
  420e4c:	stur	x21, [x29, #-24]
  420e50:	b	420b18 <_obstack_memory_used@@Base+0xb0c0>
  420e54:	mov	x25, x26
  420e58:	cmp	x8, x21
  420e5c:	b.ne	420e84 <_obstack_memory_used@@Base+0xb42c>  // b.any
  420e60:	ldur	x26, [x29, #-16]
  420e64:	lsl	x9, x8, #1
  420e68:	lsl	x1, x8, #4
  420e6c:	stur	x9, [x29, #-32]
  420e70:	mov	x0, x26
  420e74:	bl	402870 <realloc@plt>
  420e78:	cbz	x0, 420fe4 <_obstack_memory_used@@Base+0xb58c>
  420e7c:	stur	x0, [x29, #-16]
  420e80:	b	420e88 <_obstack_memory_used@@Base+0xb430>
  420e84:	ldur	x0, [x29, #-16]
  420e88:	ldr	x8, [x0]
  420e8c:	cmp	x8, x19
  420e90:	b.le	420ebc <_obstack_memory_used@@Base+0xb464>
  420e94:	cmp	x21, #0x1
  420e98:	b.lt	420eec <_obstack_memory_used@@Base+0xb494>  // b.tstop
  420e9c:	mov	x9, x21
  420ea0:	add	x10, x0, x9, lsl #3
  420ea4:	ldur	x11, [x10, #-8]
  420ea8:	subs	x8, x9, #0x1
  420eac:	mov	x9, x8
  420eb0:	str	x11, [x10]
  420eb4:	b.gt	420ea0 <_obstack_memory_used@@Base+0xb448>
  420eb8:	b	420ef0 <_obstack_memory_used@@Base+0xb498>
  420ebc:	add	x8, x0, x21, lsl #3
  420ec0:	ldur	x9, [x8, #-8]
  420ec4:	mov	x8, x21
  420ec8:	cmp	x9, x19
  420ecc:	b.le	420ef0 <_obstack_memory_used@@Base+0xb498>
  420ed0:	add	x10, x0, x8, lsl #3
  420ed4:	str	x9, [x10]
  420ed8:	ldur	x9, [x10, #-16]
  420edc:	sub	x8, x8, #0x1
  420ee0:	cmp	x9, x19
  420ee4:	b.gt	420ed0 <_obstack_memory_used@@Base+0xb478>
  420ee8:	b	420ef0 <_obstack_memory_used@@Base+0xb498>
  420eec:	mov	x8, x21
  420ef0:	str	x19, [x0, x8, lsl #3]
  420ef4:	add	x8, x21, #0x1
  420ef8:	mov	x26, x25
  420efc:	stur	x8, [x29, #-24]
  420f00:	b	420d34 <_obstack_memory_used@@Base+0xb2dc>
  420f04:	ldur	x0, [x29, #-16]
  420f08:	bl	402a10 <free@plt>
  420f0c:	ldur	w8, [x29, #-84]
  420f10:	cbz	w8, 420f1c <_obstack_memory_used@@Base+0xb4c4>
  420f14:	ldur	x0, [x29, #-96]
  420f18:	bl	402a10 <free@plt>
  420f1c:	ldr	x8, [x28]
  420f20:	ldr	x0, [x28, #16]
  420f24:	cmp	x8, #0x1
  420f28:	b.lt	420f68 <_obstack_memory_used@@Base+0xb510>  // b.tstop
  420f2c:	mov	x19, xzr
  420f30:	mov	x20, xzr
  420f34:	add	x8, x0, x19
  420f38:	ldr	x0, [x8, #40]
  420f3c:	bl	402a10 <free@plt>
  420f40:	ldr	x8, [x28, #16]
  420f44:	add	x8, x8, x19
  420f48:	ldr	x0, [x8, #16]
  420f4c:	bl	402a10 <free@plt>
  420f50:	ldr	x8, [x28]
  420f54:	ldr	x0, [x28, #16]
  420f58:	add	x20, x20, #0x1
  420f5c:	add	x19, x19, #0x30
  420f60:	cmp	x20, x8
  420f64:	b.lt	420f34 <_obstack_memory_used@@Base+0xb4dc>  // b.tstop
  420f68:	bl	402a10 <free@plt>
  420f6c:	mov	w0, wzr
  420f70:	mov	sp, x29
  420f74:	ldp	x20, x19, [sp, #80]
  420f78:	ldp	x22, x21, [sp, #64]
  420f7c:	ldp	x24, x23, [sp, #48]
  420f80:	ldp	x26, x25, [sp, #32]
  420f84:	ldp	x28, x27, [sp, #16]
  420f88:	ldp	x29, x30, [sp], #96
  420f8c:	ret
  420f90:	ldur	x0, [x29, #-16]
  420f94:	b	4206a8 <_obstack_memory_used@@Base+0xac50>
  420f98:	ldur	x0, [x29, #-16]
  420f9c:	bl	402a10 <free@plt>
  420fa0:	ldur	w8, [x29, #-84]
  420fa4:	cbz	w8, 420fb0 <_obstack_memory_used@@Base+0xb558>
  420fa8:	ldur	x0, [x29, #-96]
  420fac:	bl	402a10 <free@plt>
  420fb0:	mov	w0, #0x1                   	// #1
  420fb4:	b	420f70 <_obstack_memory_used@@Base+0xb518>
  420fb8:	ldur	x0, [x29, #-16]
  420fbc:	bl	402a10 <free@plt>
  420fc0:	ldur	w8, [x29, #-84]
  420fc4:	cbz	w8, 420f6c <_obstack_memory_used@@Base+0xb514>
  420fc8:	ldur	x0, [x29, #-96]
  420fcc:	b	420f68 <_obstack_memory_used@@Base+0xb510>
  420fd0:	ldur	x8, [x29, #-144]
  420fd4:	stp	xzr, xzr, [x8]
  420fd8:	b	420fe4 <_obstack_memory_used@@Base+0xb58c>
  420fdc:	mov	x26, xzr
  420fe0:	stp	xzr, xzr, [x29, #-32]
  420fe4:	mov	x0, x26
  420fe8:	bl	402a10 <free@plt>
  420fec:	ldur	w8, [x29, #-84]
  420ff0:	cbz	w8, 420ffc <_obstack_memory_used@@Base+0xb5a4>
  420ff4:	ldur	x0, [x29, #-96]
  420ff8:	bl	402a10 <free@plt>
  420ffc:	cbz	x28, 420780 <_obstack_memory_used@@Base+0xad28>
  421000:	ldr	x8, [x28]
  421004:	ldr	x0, [x28, #16]
  421008:	cmp	x8, #0x1
  42100c:	b.lt	42077c <_obstack_memory_used@@Base+0xad24>  // b.tstop
  421010:	mov	x19, xzr
  421014:	mov	x20, xzr
  421018:	add	x8, x0, x19
  42101c:	ldr	x0, [x8, #40]
  421020:	bl	402a10 <free@plt>
  421024:	ldr	x8, [x28, #16]
  421028:	add	x8, x8, x19
  42102c:	ldr	x0, [x8, #16]
  421030:	bl	402a10 <free@plt>
  421034:	ldr	x8, [x28]
  421038:	ldr	x0, [x28, #16]
  42103c:	add	x20, x20, #0x1
  421040:	add	x19, x19, #0x30
  421044:	cmp	x20, x8
  421048:	b.lt	421018 <_obstack_memory_used@@Base+0xb5c0>  // b.tstop
  42104c:	b	42077c <_obstack_memory_used@@Base+0xad24>
  421050:	ldur	x26, [x29, #-16]
  421054:	b	420fe4 <_obstack_memory_used@@Base+0xb58c>
  421058:	mov	x26, x23
  42105c:	b	420fe4 <_obstack_memory_used@@Base+0xb58c>
  421060:	stp	x29, x30, [sp, #-80]!
  421064:	stp	x26, x25, [sp, #16]
  421068:	stp	x24, x23, [sp, #32]
  42106c:	stp	x22, x21, [sp, #48]
  421070:	stp	x20, x19, [sp, #64]
  421074:	ldr	x8, [x1, #8]
  421078:	mov	x29, sp
  42107c:	cmp	x8, #0x1
  421080:	b.lt	42114c <_obstack_memory_used@@Base+0xb6f4>  // b.tstop
  421084:	ldr	x23, [x0, #152]
  421088:	mov	x19, x2
  42108c:	mov	x20, x1
  421090:	mov	x21, x0
  421094:	mov	x24, xzr
  421098:	b	4210bc <_obstack_memory_used@@Base+0xb664>
  42109c:	add	x8, x8, #0x1
  4210a0:	str	x25, [x9, #8]
  4210a4:	str	x8, [x21, #232]
  4210a8:	str	x19, [x9]
  4210ac:	ldr	x8, [x20, #8]
  4210b0:	add	x24, x24, #0x1
  4210b4:	cmp	x24, x8
  4210b8:	b.ge	42114c <_obstack_memory_used@@Base+0xb6f4>  // b.tcont
  4210bc:	ldr	x9, [x20, #16]
  4210c0:	ldr	x25, [x9, x24, lsl #3]
  4210c4:	ldr	x9, [x23]
  4210c8:	add	x10, x9, x25, lsl #4
  4210cc:	ldrb	w10, [x10, #8]
  4210d0:	cmp	w10, #0x8
  4210d4:	b.ne	4210b0 <_obstack_memory_used@@Base+0xb658>  // b.any
  4210d8:	lsl	x10, x25, #4
  4210dc:	ldr	x9, [x9, x10]
  4210e0:	cmp	x9, #0x3f
  4210e4:	b.gt	4210b0 <_obstack_memory_used@@Base+0xb658>
  4210e8:	ldr	x10, [x23, #160]
  4210ec:	lsr	x9, x10, x9
  4210f0:	tbz	w9, #0, 4210b0 <_obstack_memory_used@@Base+0xb658>
  4210f4:	ldp	x8, x26, [x21, #232]
  4210f8:	ldr	x22, [x21, #248]
  4210fc:	cmp	x8, x26
  421100:	b.eq	42112c <_obstack_memory_used@@Base+0xb6d4>  // b.none
  421104:	mov	w0, #0x1                   	// #1
  421108:	mov	w1, #0x30                  	// #48
  42110c:	bl	402840 <calloc@plt>
  421110:	ldr	x8, [x21, #232]
  421114:	lsl	x9, x8, #3
  421118:	str	x0, [x22, x9]
  42111c:	ldr	x10, [x21, #248]
  421120:	ldr	x9, [x10, x9]
  421124:	cbnz	x9, 42109c <_obstack_memory_used@@Base+0xb644>
  421128:	b	421168 <_obstack_memory_used@@Base+0xb710>
  42112c:	lsl	x1, x26, #4
  421130:	mov	x0, x22
  421134:	bl	402870 <realloc@plt>
  421138:	cbz	x0, 421168 <_obstack_memory_used@@Base+0xb710>
  42113c:	mov	x22, x0
  421140:	lsl	x8, x26, #1
  421144:	stp	x8, x0, [x21, #240]
  421148:	b	421104 <_obstack_memory_used@@Base+0xb6ac>
  42114c:	mov	w0, wzr
  421150:	ldp	x20, x19, [sp, #64]
  421154:	ldp	x22, x21, [sp, #48]
  421158:	ldp	x24, x23, [sp, #32]
  42115c:	ldp	x26, x25, [sp, #16]
  421160:	ldp	x29, x30, [sp], #80
  421164:	ret
  421168:	mov	w0, #0xc                   	// #12
  42116c:	b	421150 <_obstack_memory_used@@Base+0xb6f8>
  421170:	sub	sp, sp, #0xd0
  421174:	stp	x29, x30, [sp, #112]
  421178:	stp	x28, x27, [sp, #128]
  42117c:	stp	x26, x25, [sp, #144]
  421180:	stp	x24, x23, [sp, #160]
  421184:	stp	x22, x21, [sp, #176]
  421188:	stp	x20, x19, [sp, #192]
  42118c:	ldr	x8, [x1, #8]
  421190:	add	x29, sp, #0x70
  421194:	cmp	x8, #0x1
  421198:	b.lt	4219c0 <_obstack_memory_used@@Base+0xbf68>  // b.tstop
  42119c:	ldr	x10, [x0, #152]
  4211a0:	ldr	x8, [x0, #72]
  4211a4:	mov	x23, x1
  4211a8:	mov	x28, x0
  4211ac:	mov	x9, xzr
  4211b0:	stur	x8, [x29, #-48]
  4211b4:	str	x1, [sp]
  4211b8:	str	x10, [sp, #32]
  4211bc:	b	4211d4 <_obstack_memory_used@@Base+0xb77c>
  4211c0:	ldp	x9, x10, [sp, #24]
  4211c4:	ldr	x8, [x23, #8]
  4211c8:	add	x9, x9, #0x1
  4211cc:	cmp	x9, x8
  4211d0:	b.ge	4219c0 <_obstack_memory_used@@Base+0xbf68>  // b.tcont
  4211d4:	ldr	x8, [x23, #16]
  4211d8:	str	x9, [sp, #24]
  4211dc:	ldr	x9, [x8, x9, lsl #3]
  4211e0:	ldr	x8, [x10]
  4211e4:	stur	x9, [x29, #-40]
  4211e8:	add	x19, x8, x9, lsl #4
  4211ec:	ldr	w21, [x19, #8]!
  4211f0:	and	w8, w21, #0xff
  4211f4:	cmp	w8, #0x4
  4211f8:	b.ne	4211c0 <_obstack_memory_used@@Base+0xb768>  // b.any
  4211fc:	tst	w21, #0x3ff00
  421200:	b.eq	4212d0 <_obstack_memory_used@@Base+0xb878>  // b.none
  421204:	ldur	x9, [x29, #-48]
  421208:	tbnz	x9, #63, 421240 <_obstack_memory_used@@Base+0xb7e8>
  42120c:	ldr	x8, [x28, #88]
  421210:	cmp	x8, x9
  421214:	b.eq	42198c <_obstack_memory_used@@Base+0xbf34>  // b.none
  421218:	ldr	w8, [x28, #144]
  42121c:	cmp	w8, #0x2
  421220:	b.lt	421248 <_obstack_memory_used@@Base+0xb7f0>  // b.tstop
  421224:	ldr	x8, [x28, #16]
  421228:	ldr	w24, [x8, x9, lsl #2]
  42122c:	cmn	w24, #0x1
  421230:	b.ne	421274 <_obstack_memory_used@@Base+0xb81c>  // b.any
  421234:	sub	x9, x9, #0x1
  421238:	cmn	x9, #0x1
  42123c:	b.ne	421228 <_obstack_memory_used@@Base+0xb7d0>  // b.any
  421240:	ldr	w8, [x28, #112]
  421244:	b	4212a4 <_obstack_memory_used@@Base+0xb84c>
  421248:	ldr	x8, [x28, #8]
  42124c:	ldrb	w8, [x8, x9]
  421250:	ldr	x9, [x28, #128]
  421254:	lsr	x10, x8, #3
  421258:	and	x10, x10, #0x18
  42125c:	ldr	x9, [x9, x10]
  421260:	lsr	x9, x9, x8
  421264:	tbz	w9, #0, 421298 <_obstack_memory_used@@Base+0xb840>
  421268:	mov	w9, wzr
  42126c:	mov	w8, #0x1                   	// #1
  421270:	b	4212b4 <_obstack_memory_used@@Base+0xb85c>
  421274:	ldrb	w8, [x28, #142]
  421278:	cbnz	w8, 4219a0 <_obstack_memory_used@@Base+0xbf48>
  42127c:	cmp	w24, #0xa
  421280:	b.ne	4212a0 <_obstack_memory_used@@Base+0xb848>  // b.any
  421284:	ldrb	w8, [x28, #141]
  421288:	cmp	w8, #0x0
  42128c:	cset	w8, ne  // ne = any
  421290:	lsl	w8, w8, #1
  421294:	b	4212a4 <_obstack_memory_used@@Base+0xb84c>
  421298:	cmp	w8, #0xa
  42129c:	b.eq	421284 <_obstack_memory_used@@Base+0xb82c>  // b.none
  4212a0:	mov	w8, wzr
  4212a4:	tst	w8, #0x1
  4212a8:	cset	w9, eq  // eq = none
  4212ac:	tbz	w21, #10, 4212b4 <_obstack_memory_used@@Base+0xb85c>
  4212b0:	tbz	w8, #0, 4211c0 <_obstack_memory_used@@Base+0xb768>
  4212b4:	ldr	w10, [x19]
  4212b8:	tbnz	w9, #0, 4212c0 <_obstack_memory_used@@Base+0xb868>
  4212bc:	tbnz	w10, #11, 4211c0 <_obstack_memory_used@@Base+0xb768>
  4212c0:	tbnz	w8, #1, 4212c8 <_obstack_memory_used@@Base+0xb870>
  4212c4:	tbnz	w10, #13, 4211c0 <_obstack_memory_used@@Base+0xb768>
  4212c8:	tbnz	w8, #3, 4212d0 <_obstack_memory_used@@Base+0xb878>
  4212cc:	tbnz	w10, #15, 4211c0 <_obstack_memory_used@@Base+0xb768>
  4212d0:	ldr	x19, [x28, #200]
  4212d4:	ldr	x20, [x28, #152]
  4212d8:	ldr	x23, [x28, #8]
  4212dc:	cmp	x19, #0x1
  4212e0:	b.lt	421330 <_obstack_memory_used@@Base+0xb8d8>  // b.tstop
  4212e4:	ldr	x9, [x28, #216]
  4212e8:	ldur	x24, [x29, #-48]
  4212ec:	mov	x8, xzr
  4212f0:	mov	x10, x19
  4212f4:	mov	w13, #0x28                  	// #40
  4212f8:	add	x11, x10, x8
  4212fc:	cmp	x11, #0x0
  421300:	cinc	x11, x11, lt  // lt = tstop
  421304:	asr	x11, x11, #1
  421308:	madd	x12, x11, x13, x9
  42130c:	ldr	x12, [x12, #8]
  421310:	cmp	x12, x24
  421314:	csel	x10, x10, x11, lt  // lt = tstop
  421318:	csinc	x8, x8, x11, ge  // ge = tcont
  42131c:	cmp	x8, x10
  421320:	b.lt	4212f8 <_obstack_memory_used@@Base+0xb8a0>  // b.tstop
  421324:	cmp	x8, x19
  421328:	b.lt	421344 <_obstack_memory_used@@Base+0xb8ec>  // b.tstop
  42132c:	b	421380 <_obstack_memory_used@@Base+0xb928>
  421330:	ldur	x24, [x29, #-48]
  421334:	mov	x8, xzr
  421338:	mov	w13, #0x28                  	// #40
  42133c:	cmp	x8, x19
  421340:	b.ge	421380 <_obstack_memory_used@@Base+0xb928>  // b.tcont
  421344:	cmn	x8, #0x1
  421348:	b.eq	421380 <_obstack_memory_used@@Base+0xb928>  // b.none
  42134c:	ldr	x9, [x28, #216]
  421350:	madd	x10, x8, x13, x9
  421354:	ldr	x10, [x10, #8]
  421358:	cmp	x10, x24
  42135c:	b.ne	421380 <_obstack_memory_used@@Base+0xb928>  // b.any
  421360:	madd	x8, x8, x13, x9
  421364:	ldr	x9, [x8]
  421368:	ldur	x10, [x29, #-40]
  42136c:	cmp	x9, x10
  421370:	b.eq	421700 <_obstack_memory_used@@Base+0xbca8>  // b.none
  421374:	ldrb	w9, [x8, #32]
  421378:	add	x8, x8, #0x28
  42137c:	cbnz	w9, 421364 <_obstack_memory_used@@Base+0xb90c>
  421380:	ldr	x8, [x28, #232]
  421384:	cmp	x8, #0x1
  421388:	mov	x8, x19
  42138c:	b.lt	421704 <_obstack_memory_used@@Base+0xbcac>  // b.tstop
  421390:	ldur	x9, [x29, #-40]
  421394:	ldr	x8, [x20]
  421398:	mov	x12, xzr
  42139c:	str	x19, [sp, #40]
  4213a0:	lsl	x9, x9, #4
  4213a4:	ldr	x21, [x8, x9]
  4213a8:	stp	x21, x20, [sp, #8]
  4213ac:	ldr	x9, [x28, #248]
  4213b0:	ldr	x27, [x9, x12, lsl #3]
  4213b4:	ldr	x9, [x27, #8]
  4213b8:	lsl	x9, x9, #4
  4213bc:	ldr	x8, [x8, x9]
  4213c0:	cmp	x8, x21
  4213c4:	b.ne	421528 <_obstack_memory_used@@Base+0xbad0>  // b.any
  4213c8:	stp	x12, x27, [sp, #48]
  4213cc:	ldr	x8, [x27, #32]
  4213d0:	ldr	x20, [x27]
  4213d4:	mov	x21, xzr
  4213d8:	mov	x22, x24
  4213dc:	cmp	x8, #0x1
  4213e0:	b.lt	4214f8 <_obstack_memory_used@@Base+0xbaa0>  // b.tstop
  4213e4:	mov	x19, x20
  4213e8:	ldr	x9, [x27, #40]
  4213ec:	ldr	x26, [x9, x21, lsl #3]
  4213f0:	ldr	x20, [x26, #8]
  4213f4:	sub	x25, x20, x19
  4213f8:	cmp	x25, #0x1
  4213fc:	b.lt	421430 <_obstack_memory_used@@Base+0xb9d8>  // b.tstop
  421400:	ldr	x9, [x28, #48]
  421404:	mov	x24, x28
  421408:	add	x28, x25, x22
  42140c:	cmp	x28, x9
  421410:	b.gt	421474 <_obstack_memory_used@@Base+0xba1c>
  421414:	mov	x28, x24
  421418:	add	x0, x23, x22
  42141c:	add	x1, x23, x19
  421420:	mov	x2, x25
  421424:	bl	402850 <bcmp@plt>
  421428:	ldur	x24, [x29, #-48]
  42142c:	cbnz	w0, 4214f0 <_obstack_memory_used@@Base+0xba98>
  421430:	ldur	x3, [x29, #-40]
  421434:	mov	x0, x28
  421438:	mov	x1, x27
  42143c:	mov	x2, x26
  421440:	mov	x4, x24
  421444:	bl	421ff4 <_obstack_memory_used@@Base+0xc59c>
  421448:	cmp	w0, #0x1
  42144c:	b.hi	4219f8 <_obstack_memory_used@@Base+0xbfa0>  // b.pmore
  421450:	ldr	x8, [x27, #32]
  421454:	ldr	x23, [x28, #8]
  421458:	add	x21, x21, #0x1
  42145c:	add	x22, x25, x22
  421460:	cmp	x21, x8
  421464:	mov	x19, x20
  421468:	mov	x9, x27
  42146c:	b.lt	4213e8 <_obstack_memory_used@@Base+0xb990>  // b.tstop
  421470:	b	4214f8 <_obstack_memory_used@@Base+0xbaa0>
  421474:	ldr	x10, [x24, #88]
  421478:	mov	x11, x24
  42147c:	cmp	x28, x10
  421480:	b.gt	4216e8 <_obstack_memory_used@@Base+0xbc90>
  421484:	ldr	x8, [x11, #64]
  421488:	ldr	x23, [x11, #192]
  42148c:	cmp	x8, x28
  421490:	b.gt	42149c <_obstack_memory_used@@Base+0xba44>
  421494:	cmp	x8, x10
  421498:	b.lt	4214ac <_obstack_memory_used@@Base+0xba54>  // b.tstop
  42149c:	cmp	x9, x28
  4214a0:	b.gt	4214bc <_obstack_memory_used@@Base+0xba64>
  4214a4:	cmp	x9, x10
  4214a8:	b.ge	4214bc <_obstack_memory_used@@Base+0xba64>  // b.tcont
  4214ac:	add	w1, w28, #0x1
  4214b0:	mov	x0, x24
  4214b4:	bl	421a1c <_obstack_memory_used@@Base+0xbfc4>
  4214b8:	cbnz	w0, 4219f8 <_obstack_memory_used@@Base+0xbfa0>
  4214bc:	subs	x8, x28, x23
  4214c0:	b.le	4214e4 <_obstack_memory_used@@Base+0xba8c>
  4214c4:	ldr	x9, [x24, #184]
  4214c8:	lsl	x2, x8, #3
  4214cc:	mov	w1, wzr
  4214d0:	mov	x27, x24
  4214d4:	add	x9, x9, x23, lsl #3
  4214d8:	add	x0, x9, #0x8
  4214dc:	bl	402800 <memset@plt>
  4214e0:	str	x28, [x24, #192]
  4214e4:	ldr	x23, [x24, #8]
  4214e8:	ldr	x27, [sp, #56]
  4214ec:	b	421414 <_obstack_memory_used@@Base+0xb9bc>
  4214f0:	ldr	x8, [x27, #32]
  4214f4:	mov	x20, x19
  4214f8:	ldr	x19, [sp, #40]
  4214fc:	cmp	x21, x8
  421500:	b.ge	421510 <_obstack_memory_used@@Base+0xbab8>  // b.tcont
  421504:	ldp	x21, x20, [sp, #8]
  421508:	ldr	x12, [sp, #48]
  42150c:	b	421528 <_obstack_memory_used@@Base+0xbad0>
  421510:	ldr	x12, [sp, #48]
  421514:	cmp	x21, #0x0
  421518:	cinc	x25, x20, ne  // ne = any
  42151c:	cmp	x25, x24
  421520:	b.le	421540 <_obstack_memory_used@@Base+0xbae8>
  421524:	ldp	x21, x20, [sp, #8]
  421528:	ldr	x8, [x28, #232]
  42152c:	add	x12, x12, #0x1
  421530:	cmp	x12, x8
  421534:	b.ge	4216f8 <_obstack_memory_used@@Base+0xbca0>  // b.tcont
  421538:	ldr	x8, [x20]
  42153c:	b	4213ac <_obstack_memory_used@@Base+0xb954>
  421540:	ldp	x21, x20, [sp, #8]
  421544:	b	421560 <_obstack_memory_used@@Base+0xbb08>
  421548:	ldr	x23, [x28, #8]
  42154c:	ldr	x12, [sp, #48]
  421550:	ldr	x27, [sp, #56]
  421554:	cmp	x25, x24
  421558:	add	x25, x25, #0x1
  42155c:	b.ge	421528 <_obstack_memory_used@@Base+0xbad0>  // b.tcont
  421560:	ldr	x8, [x27]
  421564:	cmp	x25, x8
  421568:	b.le	421590 <_obstack_memory_used@@Base+0xbb38>
  42156c:	ldr	x8, [x28, #48]
  421570:	cmp	x22, x8
  421574:	b.ge	421698 <_obstack_memory_used@@Base+0xbc40>  // b.tcont
  421578:	add	x9, x25, x23
  42157c:	ldrb	w8, [x23, x22]
  421580:	ldurb	w9, [x9, #-1]
  421584:	cmp	w8, w9
  421588:	b.ne	421528 <_obstack_memory_used@@Base+0xbad0>  // b.any
  42158c:	add	x22, x22, #0x1
  421590:	ldr	x8, [x28, #184]
  421594:	ldr	x9, [x8, x25, lsl #3]
  421598:	cbz	x9, 421550 <_obstack_memory_used@@Base+0xbaf8>
  42159c:	ldr	x8, [x9, #16]
  4215a0:	cmp	x8, #0x1
  4215a4:	b.lt	421550 <_obstack_memory_used@@Base+0xbaf8>  // b.tstop
  4215a8:	ldr	x9, [x9, #24]
  4215ac:	ldr	x10, [x20]
  4215b0:	b	4215c0 <_obstack_memory_used@@Base+0xbb68>
  4215b4:	subs	x8, x8, #0x1
  4215b8:	add	x9, x9, #0x8
  4215bc:	b.eq	421550 <_obstack_memory_used@@Base+0xbaf8>  // b.none
  4215c0:	ldr	x26, [x9]
  4215c4:	add	x11, x10, x26, lsl #4
  4215c8:	ldrb	w11, [x11, #8]
  4215cc:	cmp	w11, #0x9
  4215d0:	b.ne	4215b4 <_obstack_memory_used@@Base+0xbb5c>  // b.any
  4215d4:	lsl	x11, x26, #4
  4215d8:	ldr	x11, [x10, x11]
  4215dc:	cmp	x11, x21
  4215e0:	b.ne	4215b4 <_obstack_memory_used@@Base+0xbb5c>  // b.any
  4215e4:	cmn	x26, #0x1
  4215e8:	b.eq	421550 <_obstack_memory_used@@Base+0xbaf8>  // b.none
  4215ec:	ldr	x1, [x27, #16]
  4215f0:	cbnz	x1, 421614 <_obstack_memory_used@@Base+0xbbbc>
  4215f4:	ldr	x8, [x27]
  4215f8:	mov	w0, #0x18                  	// #24
  4215fc:	sub	x8, x25, x8
  421600:	add	x1, x8, #0x1
  421604:	bl	402840 <calloc@plt>
  421608:	mov	x1, x0
  42160c:	str	x0, [x27, #16]
  421610:	cbz	x0, 4219ec <_obstack_memory_used@@Base+0xbf94>
  421614:	ldp	x3, x2, [x27]
  421618:	mov	w6, #0x9                   	// #9
  42161c:	mov	x0, x28
  421620:	mov	x4, x26
  421624:	mov	x5, x25
  421628:	bl	4221ac <_obstack_memory_used@@Base+0xc754>
  42162c:	ldr	x12, [sp, #48]
  421630:	cmp	w0, #0x1
  421634:	b.eq	421550 <_obstack_memory_used@@Base+0xbaf8>  // b.none
  421638:	mov	w27, w0
  42163c:	cbnz	w0, 4219fc <_obstack_memory_used@@Base+0xbfa4>
  421640:	ldr	x23, [sp, #56]
  421644:	ldp	x9, x8, [x23, #24]
  421648:	cmp	x8, x9
  42164c:	b.eq	4216c0 <_obstack_memory_used@@Base+0xbc68>  // b.none
  421650:	mov	w0, #0x1                   	// #1
  421654:	mov	w1, #0x28                  	// #40
  421658:	bl	402840 <calloc@plt>
  42165c:	cbz	x0, 4219ec <_obstack_memory_used@@Base+0xbf94>
  421660:	ldp	x9, x8, [x23, #32]
  421664:	ldur	x3, [x29, #-40]
  421668:	mov	x2, x0
  42166c:	mov	x1, x23
  421670:	str	x0, [x8, x9, lsl #3]
  421674:	stp	x26, x25, [x0]
  421678:	add	x8, x9, #0x1
  42167c:	mov	x0, x28
  421680:	mov	x4, x24
  421684:	str	x8, [x23, #32]
  421688:	bl	421ff4 <_obstack_memory_used@@Base+0xc59c>
  42168c:	cmp	w0, #0x1
  421690:	b.ls	421548 <_obstack_memory_used@@Base+0xbaf0>  // b.plast
  421694:	b	4219f8 <_obstack_memory_used@@Base+0xbfa0>
  421698:	ldr	x8, [x28, #88]
  42169c:	cmp	x22, x8
  4216a0:	b.ge	421528 <_obstack_memory_used@@Base+0xbad0>  // b.tcont
  4216a4:	add	w1, w22, #0x1
  4216a8:	mov	x0, x28
  4216ac:	bl	421a1c <_obstack_memory_used@@Base+0xbfc4>
  4216b0:	cbnz	w0, 4219f8 <_obstack_memory_used@@Base+0xbfa0>
  4216b4:	ldr	x23, [x28, #8]
  4216b8:	ldp	x12, x27, [sp, #48]
  4216bc:	b	421578 <_obstack_memory_used@@Base+0xbb20>
  4216c0:	ldr	x0, [x23, #40]
  4216c4:	mov	w19, #0x1                   	// #1
  4216c8:	bfi	x19, x8, #1, #63
  4216cc:	lsl	x1, x19, #3
  4216d0:	bl	402870 <realloc@plt>
  4216d4:	cbz	x0, 4219ec <_obstack_memory_used@@Base+0xbf94>
  4216d8:	str	x19, [x23, #24]
  4216dc:	ldr	x19, [sp, #40]
  4216e0:	str	x0, [x23, #40]
  4216e4:	b	421650 <_obstack_memory_used@@Base+0xbbf8>
  4216e8:	ldur	x24, [x29, #-48]
  4216ec:	mov	x20, x19
  4216f0:	mov	x28, x11
  4216f4:	b	4214f8 <_obstack_memory_used@@Base+0xbaa0>
  4216f8:	ldr	x8, [x28, #200]
  4216fc:	b	421704 <_obstack_memory_used@@Base+0xbcac>
  421700:	mov	x8, x19
  421704:	ldr	x23, [sp]
  421708:	cmp	x19, x8
  42170c:	stur	wzr, [x29, #-4]
  421710:	b.lt	421728 <_obstack_memory_used@@Base+0xbcd0>  // b.tstop
  421714:	b	4211c0 <_obstack_memory_used@@Base+0xb768>
  421718:	ldr	x8, [x28, #200]
  42171c:	add	x19, x19, #0x1
  421720:	cmp	x19, x8
  421724:	b.ge	4211c0 <_obstack_memory_used@@Base+0xb768>  // b.tcont
  421728:	ldr	x8, [x28, #216]
  42172c:	mov	w11, #0x28                  	// #40
  421730:	mul	x9, x19, x11
  421734:	ldur	x10, [x29, #-40]
  421738:	ldr	x9, [x8, x9]
  42173c:	cmp	x9, x10
  421740:	b.ne	421718 <_obstack_memory_used@@Base+0xbcc0>  // b.any
  421744:	madd	x9, x19, x11, x8
  421748:	ldr	x9, [x9, #8]
  42174c:	ldur	x10, [x29, #-48]
  421750:	cmp	x9, x10
  421754:	b.ne	421718 <_obstack_memory_used@@Base+0xbcc0>  // b.any
  421758:	ldr	x27, [sp, #32]
  42175c:	str	x19, [sp, #40]
  421760:	madd	x8, x19, x11, x8
  421764:	ldp	x22, x19, [x8, #16]
  421768:	ldr	x21, [x27, #48]
  42176c:	cmp	x19, x22
  421770:	b.ne	42178c <_obstack_memory_used@@Base+0xbd34>  // b.any
  421774:	ldr	x8, [x27, #40]
  421778:	ldur	x10, [x29, #-40]
  42177c:	mov	w9, #0x18                  	// #24
  421780:	madd	x8, x10, x9, x8
  421784:	ldr	x8, [x8, #16]
  421788:	b	421798 <_obstack_memory_used@@Base+0xbd40>
  42178c:	ldr	x8, [x27, #24]
  421790:	ldur	x9, [x29, #-40]
  421794:	add	x8, x8, x9, lsl #3
  421798:	ldur	x9, [x29, #-48]
  42179c:	ldr	x26, [x8]
  4217a0:	add	x8, x19, x9
  4217a4:	sub	x23, x8, x22
  4217a8:	cmp	x23, #0x0
  4217ac:	b.le	4217e8 <_obstack_memory_used@@Base+0xbd90>
  4217b0:	ldr	x9, [x28, #88]
  4217b4:	sub	x8, x23, #0x1
  4217b8:	cmp	x9, x8
  4217bc:	b.eq	42195c <_obstack_memory_used@@Base+0xbf04>  // b.none
  4217c0:	ldr	w9, [x28, #144]
  4217c4:	cmp	w9, #0x2
  4217c8:	b.lt	4217f0 <_obstack_memory_used@@Base+0xbd98>  // b.tstop
  4217cc:	ldr	x9, [x28, #16]
  4217d0:	ldr	w24, [x9, x8, lsl #2]
  4217d4:	cmn	w24, #0x1
  4217d8:	b.ne	421818 <_obstack_memory_used@@Base+0xbdc0>  // b.any
  4217dc:	sub	x8, x8, #0x1
  4217e0:	cmn	x8, #0x1
  4217e4:	b.ne	4217d0 <_obstack_memory_used@@Base+0xbd78>  // b.any
  4217e8:	ldr	w25, [x28, #112]
  4217ec:	b	421848 <_obstack_memory_used@@Base+0xbdf0>
  4217f0:	ldr	x9, [x28, #8]
  4217f4:	ldrb	w8, [x9, x8]
  4217f8:	ldr	x9, [x28, #128]
  4217fc:	lsr	x10, x8, #3
  421800:	and	x10, x10, #0x18
  421804:	ldr	x9, [x9, x10]
  421808:	lsr	x9, x9, x8
  42180c:	tbz	w9, #0, 42183c <_obstack_memory_used@@Base+0xbde4>
  421810:	mov	w25, #0x1                   	// #1
  421814:	b	421848 <_obstack_memory_used@@Base+0xbdf0>
  421818:	ldrb	w8, [x28, #142]
  42181c:	cbnz	w8, 421970 <_obstack_memory_used@@Base+0xbf18>
  421820:	cmp	w24, #0xa
  421824:	b.ne	421844 <_obstack_memory_used@@Base+0xbdec>  // b.any
  421828:	ldrb	w8, [x28, #141]
  42182c:	cmp	w8, #0x0
  421830:	cset	w8, ne  // ne = any
  421834:	lsl	w25, w8, #1
  421838:	b	421848 <_obstack_memory_used@@Base+0xbdf0>
  42183c:	cmp	w8, #0xa
  421840:	b.eq	421828 <_obstack_memory_used@@Base+0xbdd0>  // b.none
  421844:	mov	w25, wzr
  421848:	ldr	x8, [x28, #184]
  42184c:	ldur	x9, [x29, #-48]
  421850:	mov	w10, #0x18                  	// #24
  421854:	madd	x24, x26, x10, x21
  421858:	ldr	x9, [x8, x9, lsl #3]
  42185c:	ldr	x8, [x8, x23, lsl #3]
  421860:	cbz	x9, 4218c4 <_obstack_memory_used@@Base+0xbe6c>
  421864:	ldr	x20, [x9, #16]
  421868:	cbz	x8, 4218cc <_obstack_memory_used@@Base+0xbe74>
  42186c:	ldr	x1, [x8, #80]
  421870:	sub	x0, x29, #0x20
  421874:	mov	x2, x24
  421878:	bl	421e00 <_obstack_memory_used@@Base+0xc3a8>
  42187c:	stur	w0, [x29, #-4]
  421880:	cbnz	w0, 421a04 <_obstack_memory_used@@Base+0xbfac>
  421884:	ldr	x1, [sp, #32]
  421888:	sub	x0, x29, #0x4
  42188c:	sub	x2, x29, #0x20
  421890:	mov	w3, w25
  421894:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  421898:	ldr	x8, [x28, #184]
  42189c:	lsl	x21, x23, #3
  4218a0:	str	x0, [x8, x21]
  4218a4:	ldur	x0, [x29, #-16]
  4218a8:	bl	402a10 <free@plt>
  4218ac:	ldr	x8, [x28, #184]
  4218b0:	ldr	x9, [x8, x21]
  4218b4:	cbnz	x9, 421908 <_obstack_memory_used@@Base+0xbeb0>
  4218b8:	ldur	w27, [x29, #-4]
  4218bc:	cbz	w27, 421908 <_obstack_memory_used@@Base+0xbeb0>
  4218c0:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  4218c4:	mov	x20, xzr
  4218c8:	cbnz	x8, 42186c <_obstack_memory_used@@Base+0xbe14>
  4218cc:	sub	x0, x29, #0x4
  4218d0:	mov	x1, x27
  4218d4:	mov	x2, x24
  4218d8:	mov	w3, w25
  4218dc:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  4218e0:	ldr	x8, [x28, #184]
  4218e4:	lsl	x9, x23, #3
  4218e8:	str	x0, [x8, x9]
  4218ec:	ldr	x8, [x28, #184]
  4218f0:	ldr	x9, [x8, x9]
  4218f4:	cbnz	x9, 421908 <_obstack_memory_used@@Base+0xbeb0>
  4218f8:	ldur	w27, [x29, #-4]
  4218fc:	ldr	x23, [sp]
  421900:	cbz	w27, 42190c <_obstack_memory_used@@Base+0xbeb4>
  421904:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  421908:	ldr	x23, [sp]
  42190c:	cmp	x19, x22
  421910:	ldr	x19, [sp, #40]
  421914:	b.ne	421718 <_obstack_memory_used@@Base+0xbcc0>  // b.any
  421918:	ldur	x9, [x29, #-48]
  42191c:	ldr	x8, [x8, x9, lsl #3]
  421920:	ldr	x8, [x8, #16]
  421924:	cmp	x8, x20
  421928:	b.le	421718 <_obstack_memory_used@@Base+0xbcc0>
  42192c:	ldur	x2, [x29, #-48]
  421930:	mov	x0, x28
  421934:	mov	x1, x24
  421938:	bl	421060 <_obstack_memory_used@@Base+0xb608>
  42193c:	stur	w0, [x29, #-4]
  421940:	cbnz	w0, 421a14 <_obstack_memory_used@@Base+0xbfbc>
  421944:	mov	x0, x28
  421948:	mov	x1, x24
  42194c:	bl	421170 <_obstack_memory_used@@Base+0xb718>
  421950:	stur	w0, [x29, #-4]
  421954:	cbz	w0, 421718 <_obstack_memory_used@@Base+0xbcc0>
  421958:	b	421a14 <_obstack_memory_used@@Base+0xbfbc>
  42195c:	ldr	w8, [x28, #160]
  421960:	mov	w9, #0xa                   	// #10
  421964:	and	w8, w8, #0x2
  421968:	eor	w25, w8, w9
  42196c:	b	421848 <_obstack_memory_used@@Base+0xbdf0>
  421970:	mov	w0, w24
  421974:	bl	402b10 <iswalnum@plt>
  421978:	cmp	w24, #0x5f
  42197c:	mov	w25, #0x1                   	// #1
  421980:	b.eq	421848 <_obstack_memory_used@@Base+0xbdf0>  // b.none
  421984:	cbz	w0, 421820 <_obstack_memory_used@@Base+0xbdc8>
  421988:	b	421848 <_obstack_memory_used@@Base+0xbdf0>
  42198c:	ldr	w8, [x28, #160]
  421990:	mov	w9, #0xa                   	// #10
  421994:	and	w8, w8, #0x2
  421998:	eor	w8, w8, w9
  42199c:	b	4212a4 <_obstack_memory_used@@Base+0xb84c>
  4219a0:	mov	w0, w24
  4219a4:	bl	402b10 <iswalnum@plt>
  4219a8:	mov	w9, wzr
  4219ac:	cmp	w24, #0x5f
  4219b0:	mov	w8, #0x1                   	// #1
  4219b4:	b.eq	4212b4 <_obstack_memory_used@@Base+0xb85c>  // b.none
  4219b8:	cbz	w0, 42127c <_obstack_memory_used@@Base+0xb824>
  4219bc:	b	4212b4 <_obstack_memory_used@@Base+0xb85c>
  4219c0:	mov	w27, wzr
  4219c4:	stur	wzr, [x29, #-4]
  4219c8:	mov	w0, w27
  4219cc:	ldp	x20, x19, [sp, #192]
  4219d0:	ldp	x22, x21, [sp, #176]
  4219d4:	ldp	x24, x23, [sp, #160]
  4219d8:	ldp	x26, x25, [sp, #144]
  4219dc:	ldp	x28, x27, [sp, #128]
  4219e0:	ldp	x29, x30, [sp, #112]
  4219e4:	add	sp, sp, #0xd0
  4219e8:	ret
  4219ec:	mov	w27, #0xc                   	// #12
  4219f0:	stur	w27, [x29, #-4]
  4219f4:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  4219f8:	mov	w27, w0
  4219fc:	stur	w27, [x29, #-4]
  421a00:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  421a04:	mov	w27, w0
  421a08:	ldur	x0, [x29, #-16]
  421a0c:	bl	402a10 <free@plt>
  421a10:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  421a14:	mov	w27, w0
  421a18:	b	4219c8 <_obstack_memory_used@@Base+0xbf70>
  421a1c:	stp	x29, x30, [sp, #-48]!
  421a20:	stp	x20, x19, [sp, #32]
  421a24:	ldr	x8, [x0, #64]
  421a28:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  421a2c:	str	x21, [sp, #16]
  421a30:	mov	x29, sp
  421a34:	cmp	x8, x9
  421a38:	b.hi	421bf4 <_obstack_memory_used@@Base+0xc19c>  // b.pmore
  421a3c:	ldr	x9, [x0, #88]
  421a40:	lsl	x8, x8, #1
  421a44:	ldr	w11, [x0, #144]
  421a48:	sxtw	x10, w1
  421a4c:	cmp	x9, x8
  421a50:	csel	x8, x9, x8, lt  // lt = tstop
  421a54:	cmp	x8, x10
  421a58:	mov	x19, x0
  421a5c:	csel	x20, x8, x10, gt
  421a60:	cmp	w11, #0x2
  421a64:	b.lt	421aa0 <_obstack_memory_used@@Base+0xc048>  // b.tstop
  421a68:	lsr	x8, x20, #61
  421a6c:	cbnz	x8, 421bf4 <_obstack_memory_used@@Base+0xc19c>
  421a70:	ldr	x0, [x19, #16]
  421a74:	lsl	x1, x20, #2
  421a78:	bl	402870 <realloc@plt>
  421a7c:	cbz	x0, 421bf4 <_obstack_memory_used@@Base+0xc19c>
  421a80:	mov	x8, x0
  421a84:	ldr	x0, [x19, #24]
  421a88:	str	x8, [x19, #16]
  421a8c:	cbz	x0, 421aa0 <_obstack_memory_used@@Base+0xc048>
  421a90:	lsl	x1, x20, #3
  421a94:	bl	402870 <realloc@plt>
  421a98:	cbz	x0, 421bf4 <_obstack_memory_used@@Base+0xc19c>
  421a9c:	str	x0, [x19, #24]
  421aa0:	ldrb	w8, [x19, #139]
  421aa4:	cbz	w8, 421abc <_obstack_memory_used@@Base+0xc064>
  421aa8:	ldr	x0, [x19, #8]
  421aac:	mov	x1, x20
  421ab0:	bl	402870 <realloc@plt>
  421ab4:	cbz	x0, 421bf4 <_obstack_memory_used@@Base+0xc19c>
  421ab8:	str	x0, [x19, #8]
  421abc:	ldr	x0, [x19, #184]
  421ac0:	str	x20, [x19, #64]
  421ac4:	cbz	x0, 421adc <_obstack_memory_used@@Base+0xc084>
  421ac8:	lsl	x8, x20, #3
  421acc:	add	x1, x8, #0x8
  421ad0:	bl	402870 <realloc@plt>
  421ad4:	cbz	x0, 421bf4 <_obstack_memory_used@@Base+0xc19c>
  421ad8:	str	x0, [x19, #184]
  421adc:	ldr	w8, [x19, #144]
  421ae0:	ldrb	w9, [x19, #136]
  421ae4:	cmp	w8, #0x2
  421ae8:	cbz	w9, 421b00 <_obstack_memory_used@@Base+0xc0a8>
  421aec:	b.lt	421b10 <_obstack_memory_used@@Base+0xc0b8>  // b.tstop
  421af0:	mov	x0, x19
  421af4:	bl	41a420 <_obstack_memory_used@@Base+0x49c8>
  421af8:	cbz	w0, 421be0 <_obstack_memory_used@@Base+0xc188>
  421afc:	b	421be4 <_obstack_memory_used@@Base+0xc18c>
  421b00:	b.lt	421b78 <_obstack_memory_used@@Base+0xc120>  // b.tstop
  421b04:	mov	x0, x19
  421b08:	bl	41aadc <_obstack_memory_used@@Base+0x5084>
  421b0c:	b	421be0 <_obstack_memory_used@@Base+0xc188>
  421b10:	ldr	x8, [x19, #64]
  421b14:	ldr	x9, [x19, #88]
  421b18:	ldr	x20, [x19, #48]
  421b1c:	cmp	x8, x9
  421b20:	csel	x21, x9, x8, gt
  421b24:	cmp	x20, x21
  421b28:	b.ge	421b70 <_obstack_memory_used@@Base+0xc118>  // b.tcont
  421b2c:	bl	402880 <__ctype_toupper_loc@plt>
  421b30:	ldr	x8, [x19]
  421b34:	ldr	x9, [x19, #40]
  421b38:	add	x8, x8, x9
  421b3c:	ldr	x9, [x19, #120]
  421b40:	ldrb	w8, [x8, x20]
  421b44:	cbnz	x9, 421b68 <_obstack_memory_used@@Base+0xc110>
  421b48:	ldr	x9, [x0]
  421b4c:	ldr	x10, [x19, #8]
  421b50:	ldr	w8, [x9, w8, uxtw #2]
  421b54:	strb	w8, [x10, x20]
  421b58:	add	x20, x20, #0x1
  421b5c:	cmp	x20, x21
  421b60:	b.lt	421b30 <_obstack_memory_used@@Base+0xc0d8>  // b.tstop
  421b64:	b	421b70 <_obstack_memory_used@@Base+0xc118>
  421b68:	ldrb	w8, [x9, x8]
  421b6c:	b	421b48 <_obstack_memory_used@@Base+0xc0f0>
  421b70:	stp	x20, x20, [x19, #48]
  421b74:	b	421be0 <_obstack_memory_used@@Base+0xc188>
  421b78:	ldr	x10, [x19, #120]
  421b7c:	cbz	x10, 421be0 <_obstack_memory_used@@Base+0xc188>
  421b80:	ldr	x9, [x19, #64]
  421b84:	ldr	x11, [x19, #88]
  421b88:	ldr	x8, [x19, #48]
  421b8c:	cmp	x9, x11
  421b90:	csel	x9, x11, x9, gt
  421b94:	cmp	x8, x9
  421b98:	b.ge	421bdc <_obstack_memory_used@@Base+0xc184>  // b.tcont
  421b9c:	ldr	x11, [x19, #40]
  421ba0:	ldp	x12, x13, [x19]
  421ba4:	add	x11, x11, x8
  421ba8:	ldrb	w11, [x12, x11]
  421bac:	ldrb	w10, [x10, x11]
  421bb0:	strb	w10, [x13, x8]
  421bb4:	add	x8, x8, #0x1
  421bb8:	cmp	x8, x9
  421bbc:	b.ge	421bdc <_obstack_memory_used@@Base+0xc184>  // b.tcont
  421bc0:	ldr	x10, [x19, #40]
  421bc4:	ldp	x11, x13, [x19]
  421bc8:	ldr	x12, [x19, #120]
  421bcc:	add	x10, x11, x10
  421bd0:	ldrb	w10, [x10, x8]
  421bd4:	ldrb	w10, [x12, x10]
  421bd8:	b	421bb0 <_obstack_memory_used@@Base+0xc158>
  421bdc:	stp	x8, x8, [x19, #48]
  421be0:	mov	w0, wzr
  421be4:	ldp	x20, x19, [sp, #32]
  421be8:	ldr	x21, [sp, #16]
  421bec:	ldp	x29, x30, [sp], #48
  421bf0:	ret
  421bf4:	mov	w0, #0xc                   	// #12
  421bf8:	b	421be4 <_obstack_memory_used@@Base+0xc18c>
  421bfc:	sub	sp, sp, #0x60
  421c00:	stp	x29, x30, [sp, #32]
  421c04:	stp	x24, x23, [sp, #48]
  421c08:	stp	x22, x21, [sp, #64]
  421c0c:	stp	x20, x19, [sp, #80]
  421c10:	ldr	x20, [x1, #72]
  421c14:	ldp	x8, x9, [x1, #184]
  421c18:	ldr	x22, [x1, #152]
  421c1c:	mov	x24, x2
  421c20:	mov	x19, x1
  421c24:	cmp	x20, x9
  421c28:	mov	x21, x0
  421c2c:	add	x29, sp, #0x20
  421c30:	b.le	421c40 <_obstack_memory_used@@Base+0xc1e8>
  421c34:	str	x24, [x8, x20, lsl #3]
  421c38:	str	x20, [x19, #192]
  421c3c:	b	421d60 <_obstack_memory_used@@Base+0xc308>
  421c40:	ldr	x9, [x8, x20, lsl #3]
  421c44:	cbz	x9, 421c78 <_obstack_memory_used@@Base+0xc220>
  421c48:	ldr	x2, [x9, #80]
  421c4c:	cbz	x24, 421c80 <_obstack_memory_used@@Base+0xc228>
  421c50:	ldr	x23, [x24, #80]
  421c54:	mov	x0, sp
  421c58:	mov	x1, x23
  421c5c:	bl	421e00 <_obstack_memory_used@@Base+0xc3a8>
  421c60:	str	w0, [x21]
  421c64:	cbnz	w0, 421dc8 <_obstack_memory_used@@Base+0xc370>
  421c68:	ldr	x8, [x19, #72]
  421c6c:	cmp	x8, #0x0
  421c70:	b.gt	421ca0 <_obstack_memory_used@@Base+0xc248>
  421c74:	b	421cd8 <_obstack_memory_used@@Base+0xc280>
  421c78:	str	x24, [x8, x20, lsl #3]
  421c7c:	b	421d60 <_obstack_memory_used@@Base+0xc308>
  421c80:	ldr	x8, [x2, #16]
  421c84:	ldr	q0, [x2]
  421c88:	mov	x23, xzr
  421c8c:	str	x8, [sp, #16]
  421c90:	mov	x8, x20
  421c94:	str	q0, [sp]
  421c98:	cmp	x8, #0x0
  421c9c:	b.le	421cd8 <_obstack_memory_used@@Base+0xc280>
  421ca0:	ldr	x9, [x19, #88]
  421ca4:	sub	x8, x8, #0x1
  421ca8:	cmp	x9, x8
  421cac:	b.eq	421dd0 <_obstack_memory_used@@Base+0xc378>  // b.none
  421cb0:	ldr	w9, [x19, #144]
  421cb4:	cmp	w9, #0x2
  421cb8:	b.lt	421ce0 <_obstack_memory_used@@Base+0xc288>  // b.tstop
  421cbc:	ldr	x9, [x19, #16]
  421cc0:	ldr	w24, [x9, x8, lsl #2]
  421cc4:	cmn	w24, #0x1
  421cc8:	b.ne	421d08 <_obstack_memory_used@@Base+0xc2b0>  // b.any
  421ccc:	sub	x8, x8, #0x1
  421cd0:	cmn	x8, #0x1
  421cd4:	b.ne	421cc0 <_obstack_memory_used@@Base+0xc268>  // b.any
  421cd8:	ldr	w3, [x19, #112]
  421cdc:	b	421d38 <_obstack_memory_used@@Base+0xc2e0>
  421ce0:	ldr	x9, [x19, #8]
  421ce4:	ldrb	w8, [x9, x8]
  421ce8:	ldr	x9, [x19, #128]
  421cec:	lsr	x10, x8, #3
  421cf0:	and	x10, x10, #0x18
  421cf4:	ldr	x9, [x9, x10]
  421cf8:	lsr	x9, x9, x8
  421cfc:	tbz	w9, #0, 421d2c <_obstack_memory_used@@Base+0xc2d4>
  421d00:	mov	w3, #0x1                   	// #1
  421d04:	b	421d38 <_obstack_memory_used@@Base+0xc2e0>
  421d08:	ldrb	w8, [x19, #142]
  421d0c:	cbnz	w8, 421de4 <_obstack_memory_used@@Base+0xc38c>
  421d10:	cmp	w24, #0xa
  421d14:	b.ne	421d34 <_obstack_memory_used@@Base+0xc2dc>  // b.any
  421d18:	ldrb	w8, [x19, #141]
  421d1c:	cmp	w8, #0x0
  421d20:	cset	w8, ne  // ne = any
  421d24:	lsl	w3, w8, #1
  421d28:	b	421d38 <_obstack_memory_used@@Base+0xc2e0>
  421d2c:	cmp	w8, #0xa
  421d30:	b.eq	421d18 <_obstack_memory_used@@Base+0xc2c0>  // b.none
  421d34:	mov	w3, wzr
  421d38:	mov	x2, sp
  421d3c:	mov	x0, x21
  421d40:	mov	x1, x22
  421d44:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  421d48:	ldr	x8, [x19, #184]
  421d4c:	mov	x24, x0
  421d50:	str	x0, [x8, x20, lsl #3]
  421d54:	cbz	x23, 421d60 <_obstack_memory_used@@Base+0xc308>
  421d58:	ldr	x0, [sp, #16]
  421d5c:	bl	402a10 <free@plt>
  421d60:	cbz	x24, 421dac <_obstack_memory_used@@Base+0xc354>
  421d64:	ldr	x8, [x22, #152]
  421d68:	cbz	x8, 421dac <_obstack_memory_used@@Base+0xc354>
  421d6c:	add	x22, x24, #0x8
  421d70:	mov	x0, x19
  421d74:	mov	x1, x22
  421d78:	mov	x2, x20
  421d7c:	bl	421060 <_obstack_memory_used@@Base+0xb608>
  421d80:	str	w0, [x21]
  421d84:	cbnz	w0, 421dc8 <_obstack_memory_used@@Base+0xc370>
  421d88:	ldrb	w8, [x24, #104]
  421d8c:	tbz	w8, #6, 421dac <_obstack_memory_used@@Base+0xc354>
  421d90:	mov	x0, x19
  421d94:	mov	x1, x22
  421d98:	bl	421170 <_obstack_memory_used@@Base+0xb718>
  421d9c:	str	w0, [x21]
  421da0:	cbnz	w0, 421dc8 <_obstack_memory_used@@Base+0xc370>
  421da4:	ldr	x8, [x19, #184]
  421da8:	ldr	x24, [x8, x20, lsl #3]
  421dac:	mov	x0, x24
  421db0:	ldp	x20, x19, [sp, #80]
  421db4:	ldp	x22, x21, [sp, #64]
  421db8:	ldp	x24, x23, [sp, #48]
  421dbc:	ldp	x29, x30, [sp, #32]
  421dc0:	add	sp, sp, #0x60
  421dc4:	ret
  421dc8:	mov	x24, xzr
  421dcc:	b	421dac <_obstack_memory_used@@Base+0xc354>
  421dd0:	ldr	w8, [x19, #160]
  421dd4:	mov	w9, #0xa                   	// #10
  421dd8:	and	w8, w8, #0x2
  421ddc:	eor	w3, w8, w9
  421de0:	b	421d38 <_obstack_memory_used@@Base+0xc2e0>
  421de4:	mov	w0, w24
  421de8:	bl	402b10 <iswalnum@plt>
  421dec:	cmp	w24, #0x5f
  421df0:	mov	w3, #0x1                   	// #1
  421df4:	b.eq	421d38 <_obstack_memory_used@@Base+0xc2e0>  // b.none
  421df8:	cbz	w0, 421d10 <_obstack_memory_used@@Base+0xc2b8>
  421dfc:	b	421d38 <_obstack_memory_used@@Base+0xc2e0>
  421e00:	stp	x29, x30, [sp, #-80]!
  421e04:	stp	x20, x19, [sp, #64]
  421e08:	mov	x20, x2
  421e0c:	mov	x19, x0
  421e10:	stp	x26, x25, [sp, #16]
  421e14:	stp	x24, x23, [sp, #32]
  421e18:	stp	x22, x21, [sp, #48]
  421e1c:	mov	x29, sp
  421e20:	cbz	x1, 421f4c <_obstack_memory_used@@Base+0xc4f4>
  421e24:	ldr	x24, [x1, #8]
  421e28:	mov	x21, x1
  421e2c:	cbz	x20, 421f14 <_obstack_memory_used@@Base+0xc4bc>
  421e30:	cmp	x24, #0x1
  421e34:	b.lt	421f14 <_obstack_memory_used@@Base+0xc4bc>  // b.tstop
  421e38:	ldr	x23, [x20, #8]
  421e3c:	cmp	x23, #0x1
  421e40:	b.lt	421f14 <_obstack_memory_used@@Base+0xc4bc>  // b.tstop
  421e44:	add	x8, x23, x24
  421e48:	lsl	x0, x8, #3
  421e4c:	str	x8, [x19]
  421e50:	bl	402730 <malloc@plt>
  421e54:	str	x0, [x19, #16]
  421e58:	cbz	x0, 421fec <_obstack_memory_used@@Base+0xc594>
  421e5c:	mov	x25, xzr
  421e60:	mov	x22, xzr
  421e64:	mov	x11, xzr
  421e68:	mov	x9, xzr
  421e6c:	mov	w10, #0x1                   	// #1
  421e70:	add	x8, x0, x22, lsl #3
  421e74:	mov	x26, x11
  421e78:	tbz	w10, #0, 421fa4 <_obstack_memory_used@@Base+0xc54c>
  421e7c:	ldr	x10, [x21, #16]
  421e80:	ldr	x11, [x20, #16]
  421e84:	ldr	x13, [x10, x9, lsl #3]
  421e88:	ldr	x12, [x11, x26, lsl #3]
  421e8c:	cmp	x13, x12
  421e90:	b.le	421eb4 <_obstack_memory_used@@Base+0xc45c>
  421e94:	add	x26, x26, #0x1
  421e98:	cmp	x23, x26
  421e9c:	add	x22, x22, #0x1
  421ea0:	cset	w10, gt
  421ea4:	cmp	x24, x9
  421ea8:	str	x12, [x8], #8
  421eac:	b.gt	421e78 <_obstack_memory_used@@Base+0xc420>
  421eb0:	b	421ee8 <_obstack_memory_used@@Base+0xc490>
  421eb4:	str	x13, [x8]
  421eb8:	ldr	x23, [x20, #8]
  421ebc:	ldr	x24, [x21, #8]
  421ec0:	cinc	x11, x26, eq  // eq = none
  421ec4:	add	x9, x9, #0x1
  421ec8:	cmp	x23, x11
  421ecc:	add	x22, x22, #0x1
  421ed0:	cset	w10, gt
  421ed4:	cmp	x24, x9
  421ed8:	sub	x25, x25, #0x1
  421edc:	b.gt	421e70 <_obstack_memory_used@@Base+0xc418>
  421ee0:	cmp	x13, x12
  421ee4:	cinc	x26, x26, eq  // eq = none
  421ee8:	cbz	w10, 421fc8 <_obstack_memory_used@@Base+0xc570>
  421eec:	ldr	x8, [x20, #16]
  421ef0:	sub	x9, x23, x26
  421ef4:	add	x0, x0, x22, lsl #3
  421ef8:	lsl	x2, x9, #3
  421efc:	add	x1, x8, x26, lsl #3
  421f00:	bl	402580 <memcpy@plt>
  421f04:	ldr	x8, [x20, #8]
  421f08:	sub	x9, x22, x26
  421f0c:	add	x22, x9, x8
  421f10:	b	421fc8 <_obstack_memory_used@@Base+0xc570>
  421f14:	cmp	x24, #0x1
  421f18:	b.lt	421f4c <_obstack_memory_used@@Base+0xc4f4>  // b.tstop
  421f1c:	str	x24, [x19, #8]
  421f20:	ldr	x20, [x21, #8]
  421f24:	cmp	x20, #0x1
  421f28:	b.lt	421f94 <_obstack_memory_used@@Base+0xc53c>  // b.tstop
  421f2c:	lsl	x0, x24, #3
  421f30:	str	x24, [x19]
  421f34:	bl	402730 <malloc@plt>
  421f38:	str	x0, [x19, #16]
  421f3c:	cbz	x0, 421fe8 <_obstack_memory_used@@Base+0xc590>
  421f40:	ldr	x1, [x21, #16]
  421f44:	lsl	x2, x20, #3
  421f48:	b	421f88 <_obstack_memory_used@@Base+0xc530>
  421f4c:	cbz	x20, 421f94 <_obstack_memory_used@@Base+0xc53c>
  421f50:	ldr	x8, [x20, #8]
  421f54:	cmp	x8, #0x1
  421f58:	b.lt	421f94 <_obstack_memory_used@@Base+0xc53c>  // b.tstop
  421f5c:	str	x8, [x19, #8]
  421f60:	ldr	x21, [x20, #8]
  421f64:	cmp	x21, #0x1
  421f68:	b.lt	421f94 <_obstack_memory_used@@Base+0xc53c>  // b.tstop
  421f6c:	lsl	x0, x8, #3
  421f70:	str	x8, [x19]
  421f74:	bl	402730 <malloc@plt>
  421f78:	str	x0, [x19, #16]
  421f7c:	cbz	x0, 421fe8 <_obstack_memory_used@@Base+0xc590>
  421f80:	ldr	x1, [x20, #16]
  421f84:	lsl	x2, x21, #3
  421f88:	bl	402580 <memcpy@plt>
  421f8c:	mov	w0, wzr
  421f90:	b	421fd0 <_obstack_memory_used@@Base+0xc578>
  421f94:	mov	w0, wzr
  421f98:	stp	xzr, xzr, [x19]
  421f9c:	str	xzr, [x19, #16]
  421fa0:	b	421fd0 <_obstack_memory_used@@Base+0xc578>
  421fa4:	ldr	x10, [x21, #16]
  421fa8:	sub	x11, x24, x9
  421fac:	lsl	x2, x11, #3
  421fb0:	mov	x0, x8
  421fb4:	add	x1, x10, x9, lsl #3
  421fb8:	bl	402580 <memcpy@plt>
  421fbc:	ldr	x8, [x21, #8]
  421fc0:	add	x8, x8, x25
  421fc4:	add	x22, x8, x22
  421fc8:	mov	w0, wzr
  421fcc:	str	x22, [x19, #8]
  421fd0:	ldp	x20, x19, [sp, #64]
  421fd4:	ldp	x22, x21, [sp, #48]
  421fd8:	ldp	x24, x23, [sp, #32]
  421fdc:	ldp	x26, x25, [sp, #16]
  421fe0:	ldp	x29, x30, [sp], #80
  421fe4:	ret
  421fe8:	stp	xzr, xzr, [x19]
  421fec:	mov	w0, #0xc                   	// #12
  421ff0:	b	421fd0 <_obstack_memory_used@@Base+0xc578>
  421ff4:	stp	x29, x30, [sp, #-80]!
  421ff8:	stp	x26, x25, [sp, #16]
  421ffc:	stp	x24, x23, [sp, #32]
  422000:	stp	x22, x21, [sp, #48]
  422004:	stp	x20, x19, [sp, #64]
  422008:	mov	x22, x2
  42200c:	mov	x23, x3
  422010:	ldr	x2, [x2]
  422014:	ldr	x3, [x22, #8]
  422018:	mov	x20, x4
  42201c:	mov	x21, x1
  422020:	add	x1, x22, #0x10
  422024:	mov	w6, #0x8                   	// #8
  422028:	mov	x4, x23
  42202c:	mov	x5, x20
  422030:	mov	x29, sp
  422034:	mov	x19, x0
  422038:	bl	4221ac <_obstack_memory_used@@Base+0xc754>
  42203c:	cbz	w0, 422058 <_obstack_memory_used@@Base+0xc600>
  422040:	ldp	x20, x19, [sp, #64]
  422044:	ldp	x22, x21, [sp, #48]
  422048:	ldp	x24, x23, [sp, #32]
  42204c:	ldp	x26, x25, [sp, #16]
  422050:	ldp	x29, x30, [sp], #80
  422054:	ret
  422058:	ldp	x8, x9, [x19, #200]
  42205c:	ldr	x25, [x21]
  422060:	ldr	x24, [x22, #8]
  422064:	cmp	x8, x9
  422068:	b.lt	4220ac <_obstack_memory_used@@Base+0xc654>  // b.tstop
  42206c:	ldr	x0, [x19, #216]
  422070:	add	x8, x9, x9, lsl #2
  422074:	lsl	x1, x8, #4
  422078:	bl	402870 <realloc@plt>
  42207c:	cbz	x0, 42219c <_obstack_memory_used@@Base+0xc744>
  422080:	ldp	x8, x26, [x19, #200]
  422084:	mov	w9, #0x28                  	// #40
  422088:	str	x0, [x19, #216]
  42208c:	mov	w1, wzr
  422090:	madd	x0, x8, x9, x0
  422094:	add	x8, x26, x26, lsl #2
  422098:	lsl	x2, x8, #3
  42209c:	bl	402800 <memset@plt>
  4220a0:	ldr	x8, [x19, #200]
  4220a4:	lsl	x9, x26, #1
  4220a8:	str	x9, [x19, #208]
  4220ac:	ldr	x9, [x19, #216]
  4220b0:	subs	x10, x8, #0x1
  4220b4:	b.lt	4220dc <_obstack_memory_used@@Base+0xc684>  // b.tstop
  4220b8:	mov	w11, #0x28                  	// #40
  4220bc:	madd	x11, x10, x11, x9
  4220c0:	ldr	x11, [x11, #8]
  4220c4:	cmp	x11, x20
  4220c8:	b.ne	4220dc <_obstack_memory_used@@Base+0xc684>  // b.any
  4220cc:	mov	w11, #0x28                  	// #40
  4220d0:	madd	x10, x10, x11, x9
  4220d4:	mov	w11, #0x1                   	// #1
  4220d8:	strb	w11, [x10, #32]
  4220dc:	mov	w11, #0x28                  	// #40
  4220e0:	subs	x10, x24, x25
  4220e4:	add	x12, x8, #0x1
  4220e8:	madd	x8, x8, x11, x9
  4220ec:	csetm	w9, eq  // eq = none
  4220f0:	stp	x23, x20, [x8]
  4220f4:	stp	x25, x24, [x8, #16]
  4220f8:	strh	w9, [x8, #34]
  4220fc:	str	x12, [x19, #200]
  422100:	strb	wzr, [x8, #32]
  422104:	ldrsw	x8, [x19, #224]
  422108:	cmp	x10, x8
  42210c:	b.le	422114 <_obstack_memory_used@@Base+0xc6bc>
  422110:	str	w10, [x19, #224]
  422114:	ldr	x9, [x22, #8]
  422118:	ldr	x10, [x21]
  42211c:	ldr	x8, [x19, #64]
  422120:	ldr	x21, [x19, #192]
  422124:	add	x9, x9, x20
  422128:	sub	x20, x9, x10
  42212c:	cmp	x8, x20
  422130:	b.gt	422140 <_obstack_memory_used@@Base+0xc6e8>
  422134:	ldr	x9, [x19, #88]
  422138:	cmp	x8, x9
  42213c:	b.lt	422158 <_obstack_memory_used@@Base+0xc700>  // b.tstop
  422140:	ldr	x8, [x19, #48]
  422144:	cmp	x8, x20
  422148:	b.gt	422168 <_obstack_memory_used@@Base+0xc710>
  42214c:	ldr	x9, [x19, #88]
  422150:	cmp	x8, x9
  422154:	b.ge	422168 <_obstack_memory_used@@Base+0xc710>  // b.tcont
  422158:	add	w1, w20, #0x1
  42215c:	mov	x0, x19
  422160:	bl	421a1c <_obstack_memory_used@@Base+0xbfc4>
  422164:	cbnz	w0, 422040 <_obstack_memory_used@@Base+0xc5e8>
  422168:	subs	x8, x20, x21
  42216c:	b.le	422194 <_obstack_memory_used@@Base+0xc73c>
  422170:	ldr	x9, [x19, #184]
  422174:	lsl	x2, x8, #3
  422178:	mov	w1, wzr
  42217c:	add	x9, x9, x21, lsl #3
  422180:	add	x0, x9, #0x8
  422184:	bl	402800 <memset@plt>
  422188:	mov	w0, wzr
  42218c:	str	x20, [x19, #192]
  422190:	b	422040 <_obstack_memory_used@@Base+0xc5e8>
  422194:	mov	w0, wzr
  422198:	b	422040 <_obstack_memory_used@@Base+0xc5e8>
  42219c:	ldr	x0, [x19, #216]
  4221a0:	bl	402a10 <free@plt>
  4221a4:	mov	w0, #0xc                   	// #12
  4221a8:	b	422040 <_obstack_memory_used@@Base+0xc5e8>
  4221ac:	sub	sp, sp, #0x100
  4221b0:	stp	x29, x30, [sp, #160]
  4221b4:	stp	x28, x27, [sp, #176]
  4221b8:	stp	x26, x25, [sp, #192]
  4221bc:	stp	x24, x23, [sp, #208]
  4221c0:	stp	x22, x21, [sp, #224]
  4221c4:	stp	x20, x19, [sp, #240]
  4221c8:	ldr	x8, [x0, #152]
  4221cc:	add	x29, sp, #0xa0
  4221d0:	stur	wzr, [x29, #-36]
  4221d4:	lsl	x10, x2, #4
  4221d8:	str	x8, [sp, #56]
  4221dc:	ldr	x8, [x8]
  4221e0:	ldrsw	x9, [x0, #224]
  4221e4:	ldr	x21, [x1, #8]
  4221e8:	mov	x24, x4
  4221ec:	ldr	x8, [x8, x10]
  4221f0:	mov	x19, x2
  4221f4:	mov	x25, x1
  4221f8:	mov	x20, x0
  4221fc:	stp	x5, x8, [sp, #40]
  422200:	add	x8, x9, x5
  422204:	cmp	x21, x8
  422208:	mov	x27, x3
  42220c:	str	w6, [sp, #36]
  422210:	b.le	42298c <_obstack_memory_used@@Base+0xcf34>
  422214:	ldr	x8, [x25]
  422218:	ldr	x28, [x20, #184]
  42221c:	ldr	x9, [x25, #16]
  422220:	ldr	x21, [x20, #72]
  422224:	cmp	x8, #0x0
  422228:	csel	x26, x27, x8, eq  // eq = none
  42222c:	cmp	x26, #0x0
  422230:	str	x24, [sp]
  422234:	str	x9, [x20, #184]
  422238:	str	x26, [x20, #72]
  42223c:	b.le	4229d4 <_obstack_memory_used@@Base+0xcf7c>
  422240:	ldr	x9, [x20, #88]
  422244:	ldr	x24, [sp, #40]
  422248:	sub	x8, x26, #0x1
  42224c:	cmp	x9, x8
  422250:	b.eq	4229e0 <_obstack_memory_used@@Base+0xcf88>  // b.none
  422254:	ldr	w9, [x20, #144]
  422258:	cmp	w9, #0x2
  42225c:	b.lt	422284 <_obstack_memory_used@@Base+0xc82c>  // b.tstop
  422260:	ldr	x9, [x20, #16]
  422264:	ldr	w23, [x9, x8, lsl #2]
  422268:	cmn	w23, #0x1
  42226c:	b.ne	4222ac <_obstack_memory_used@@Base+0xc854>  // b.any
  422270:	sub	x8, x8, #0x1
  422274:	cmn	x8, #0x1
  422278:	b.ne	422264 <_obstack_memory_used@@Base+0xc80c>  // b.any
  42227c:	ldr	w22, [x20, #112]
  422280:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  422284:	ldr	x9, [x20, #8]
  422288:	ldrb	w8, [x9, x8]
  42228c:	ldr	x9, [x20, #128]
  422290:	lsr	x10, x8, #3
  422294:	and	x10, x10, #0x18
  422298:	ldr	x9, [x9, x10]
  42229c:	lsr	x9, x9, x8
  4222a0:	tbz	w9, #0, 4222d0 <_obstack_memory_used@@Base+0xc878>
  4222a4:	mov	w22, #0x1                   	// #1
  4222a8:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  4222ac:	ldrb	w8, [x20, #142]
  4222b0:	cbnz	w8, 422a14 <_obstack_memory_used@@Base+0xcfbc>
  4222b4:	cmp	w23, #0xa
  4222b8:	b.ne	4222d8 <_obstack_memory_used@@Base+0xc880>  // b.any
  4222bc:	ldrb	w8, [x20, #141]
  4222c0:	cmp	w8, #0x0
  4222c4:	cset	w8, ne  // ne = any
  4222c8:	lsl	w22, w8, #1
  4222cc:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  4222d0:	cmp	w8, #0xa
  4222d4:	b.eq	4222bc <_obstack_memory_used@@Base+0xc864>  // b.none
  4222d8:	mov	w22, wzr
  4222dc:	cmp	x26, x27
  4222e0:	stp	x21, x25, [sp, #16]
  4222e4:	str	x28, [sp, #8]
  4222e8:	b.ne	42238c <_obstack_memory_used@@Base+0xc934>  // b.any
  4222ec:	mov	w8, #0x1                   	// #1
  4222f0:	dup	v0.2d, x8
  4222f4:	mov	w0, #0x8                   	// #8
  4222f8:	stur	q0, [x29, #-64]
  4222fc:	bl	402730 <malloc@plt>
  422300:	ldr	w23, [sp, #36]
  422304:	stur	x0, [x29, #-48]
  422308:	cbz	x0, 422a04 <_obstack_memory_used@@Base+0xcfac>
  42230c:	str	x19, [x0]
  422310:	ldp	x2, x0, [sp, #48]
  422314:	sub	x1, x29, #0x40
  422318:	mov	w3, w23
  42231c:	stur	wzr, [x29, #-36]
  422320:	bl	422a38 <_obstack_memory_used@@Base+0xcfe0>
  422324:	stur	w0, [x29, #-36]
  422328:	cbnz	w0, 4229f4 <_obstack_memory_used@@Base+0xcf9c>
  42232c:	ldur	x21, [x29, #-56]
  422330:	cbz	x21, 422354 <_obstack_memory_used@@Base+0xc8fc>
  422334:	ldr	x3, [sp, #48]
  422338:	sub	x1, x29, #0x40
  42233c:	mov	x0, x20
  422340:	mov	x2, x26
  422344:	mov	w4, w23
  422348:	bl	422b7c <_obstack_memory_used@@Base+0xd124>
  42234c:	stur	w0, [x29, #-36]
  422350:	cbnz	w0, 4229f4 <_obstack_memory_used@@Base+0xcf9c>
  422354:	ldr	x1, [sp, #56]
  422358:	sub	x0, x29, #0x24
  42235c:	sub	x2, x29, #0x40
  422360:	mov	w3, w22
  422364:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  422368:	mov	x28, x0
  42236c:	cbnz	x0, 422378 <_obstack_memory_used@@Base+0xc920>
  422370:	ldur	w8, [x29, #-36]
  422374:	cbnz	w8, 422958 <_obstack_memory_used@@Base+0xcf00>
  422378:	ldr	x8, [x20, #184]
  42237c:	str	x28, [x8, x26, lsl #3]
  422380:	cmp	x26, x24
  422384:	b.lt	422428 <_obstack_memory_used@@Base+0xc9d0>  // b.tstop
  422388:	b	422894 <_obstack_memory_used@@Base+0xce3c>
  42238c:	ldr	x8, [x20, #184]
  422390:	ldr	w23, [sp, #36]
  422394:	ldr	x28, [x8, x26, lsl #3]
  422398:	cbz	x28, 4223bc <_obstack_memory_used@@Base+0xc964>
  42239c:	ldrb	w8, [x28, #104]
  4223a0:	tbnz	w8, #6, 4223d0 <_obstack_memory_used@@Base+0xc978>
  4223a4:	mov	x21, xzr
  4223a8:	stp	xzr, xzr, [x29, #-64]
  4223ac:	stur	xzr, [x29, #-48]
  4223b0:	ldrb	w8, [x28, #104]
  4223b4:	tbnz	w8, #6, 422330 <_obstack_memory_used@@Base+0xc8d8>
  4223b8:	b	422420 <_obstack_memory_used@@Base+0xc9c8>
  4223bc:	stp	xzr, xzr, [x29, #-64]
  4223c0:	stur	xzr, [x29, #-48]
  4223c4:	cmp	x26, x24
  4223c8:	b.lt	422428 <_obstack_memory_used@@Base+0xc9d0>  // b.tstop
  4223cc:	b	422894 <_obstack_memory_used@@Base+0xce3c>
  4223d0:	ldr	x21, [x28, #16]
  4223d4:	cmp	x21, #0x1
  4223d8:	stur	x21, [x29, #-56]
  4223dc:	b.lt	422408 <_obstack_memory_used@@Base+0xc9b0>  // b.tstop
  4223e0:	lsl	x19, x21, #3
  4223e4:	mov	x0, x19
  4223e8:	stur	x21, [x29, #-64]
  4223ec:	bl	402730 <malloc@plt>
  4223f0:	stur	x0, [x29, #-48]
  4223f4:	cbz	x0, 422a04 <_obstack_memory_used@@Base+0xcfac>
  4223f8:	ldr	x1, [x28, #24]
  4223fc:	mov	x2, x19
  422400:	bl	402580 <memcpy@plt>
  422404:	b	422414 <_obstack_memory_used@@Base+0xc9bc>
  422408:	mov	x21, xzr
  42240c:	stp	xzr, xzr, [x29, #-64]
  422410:	stur	xzr, [x29, #-48]
  422414:	stur	wzr, [x29, #-36]
  422418:	ldrb	w8, [x28, #104]
  42241c:	tbnz	w8, #6, 422330 <_obstack_memory_used@@Base+0xc8d8>
  422420:	cmp	x26, x24
  422424:	b.ge	422894 <_obstack_memory_used@@Base+0xce3c>  // b.tcont
  422428:	ldp	x22, x21, [sp, #48]
  42242c:	mov	w8, #0x1                   	// #1
  422430:	mov	x9, xzr
  422434:	dup	v0.2d, x8
  422438:	str	q0, [sp, #80]
  42243c:	b	42245c <_obstack_memory_used@@Base+0xca04>
  422440:	ldp	x9, x26, [sp, #64]
  422444:	ldr	x8, [x20, #184]
  422448:	cmp	x28, #0x0
  42244c:	csinc	x9, xzr, x9, ne  // ne = any
  422450:	cmp	x26, x24
  422454:	str	x28, [x8, x26, lsl #3]
  422458:	b.eq	422890 <_obstack_memory_used@@Base+0xce38>  // b.none
  42245c:	ldrsw	x8, [x20, #224]
  422460:	cmp	x9, x8
  422464:	b.gt	422894 <_obstack_memory_used@@Base+0xce3c>
  422468:	stur	xzr, [x29, #-56]
  42246c:	ldr	x8, [x20, #184]
  422470:	str	x9, [sp, #64]
  422474:	add	x9, x26, #0x1
  422478:	str	x9, [sp, #72]
  42247c:	ldr	x8, [x8, x9, lsl #3]
  422480:	cbz	x8, 422498 <_obstack_memory_used@@Base+0xca40>
  422484:	add	x1, x8, #0x8
  422488:	sub	x0, x29, #0x40
  42248c:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  422490:	stur	w0, [x29, #-36]
  422494:	cbnz	w0, 422958 <_obstack_memory_used@@Base+0xcf00>
  422498:	cbz	x28, 422760 <_obstack_memory_used@@Base+0xcd08>
  42249c:	ldr	x22, [x20, #152]
  4224a0:	stur	wzr, [x29, #-4]
  4224a4:	stp	xzr, xzr, [x29, #-32]
  4224a8:	stur	xzr, [x29, #-16]
  4224ac:	ldr	x8, [x28, #40]
  4224b0:	cmp	x8, #0x1
  4224b4:	b.lt	422750 <_obstack_memory_used@@Base+0xccf8>  // b.tstop
  4224b8:	mov	x24, xzr
  4224bc:	b	4224ec <_obstack_memory_used@@Base+0xca94>
  4224c0:	ldur	x8, [x29, #-56]
  4224c4:	cbnz	x8, 422618 <_obstack_memory_used@@Base+0xcbc0>
  4224c8:	ldur	x8, [x29, #-48]
  4224cc:	str	x19, [x8]
  4224d0:	ldur	x8, [x29, #-56]
  4224d4:	add	x8, x8, #0x1
  4224d8:	stur	x8, [x29, #-56]
  4224dc:	ldr	x8, [x28, #40]
  4224e0:	add	x24, x24, #0x1
  4224e4:	cmp	x24, x8
  4224e8:	b.ge	422740 <_obstack_memory_used@@Base+0xcce8>  // b.tcont
  4224ec:	ldr	x8, [x28, #48]
  4224f0:	ldr	x19, [x8, x24, lsl #3]
  4224f4:	ldr	x8, [x22]
  4224f8:	add	x9, x8, x19, lsl #4
  4224fc:	ldrb	w9, [x9, #10]
  422500:	tbz	w9, #4, 4225d4 <_obstack_memory_used@@Base+0xcb7c>
  422504:	mov	x0, x22
  422508:	mov	x1, x19
  42250c:	mov	x2, x20
  422510:	mov	x3, x26
  422514:	bl	423410 <_obstack_memory_used@@Base+0xd9b8>
  422518:	mov	w23, w0
  42251c:	cmp	w0, #0x2
  422520:	b.lt	4225cc <_obstack_memory_used@@Base+0xcb74>  // b.tstop
  422524:	ldr	x8, [x20, #184]
  422528:	ldr	x9, [x22, #24]
  42252c:	add	x27, x26, w23, uxtw
  422530:	ldr	x8, [x8, x27, lsl #3]
  422534:	ldr	x21, [x9, x19, lsl #3]
  422538:	stur	xzr, [x29, #-24]
  42253c:	cbz	x8, 422554 <_obstack_memory_used@@Base+0xcafc>
  422540:	add	x1, x8, #0x8
  422544:	sub	x0, x29, #0x20
  422548:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  42254c:	stur	w0, [x29, #-4]
  422550:	cbnz	w0, 422960 <_obstack_memory_used@@Base+0xcf08>
  422554:	ldur	x9, [x29, #-32]
  422558:	cbz	x9, 42257c <_obstack_memory_used@@Base+0xcb24>
  42255c:	ldur	x8, [x29, #-24]
  422560:	cbnz	x8, 4226ac <_obstack_memory_used@@Base+0xcc54>
  422564:	ldur	x8, [x29, #-16]
  422568:	str	x21, [x8]
  42256c:	ldur	x8, [x29, #-24]
  422570:	add	x8, x8, #0x1
  422574:	stur	x8, [x29, #-24]
  422578:	b	42259c <_obstack_memory_used@@Base+0xcb44>
  42257c:	mov	w8, #0x1                   	// #1
  422580:	dup	v0.2d, x8
  422584:	mov	w0, #0x8                   	// #8
  422588:	stur	q0, [x29, #-32]
  42258c:	bl	402730 <malloc@plt>
  422590:	stur	x0, [x29, #-16]
  422594:	cbz	x0, 422980 <_obstack_memory_used@@Base+0xcf28>
  422598:	str	x21, [x0]
  42259c:	sub	x0, x29, #0x4
  4225a0:	sub	x2, x29, #0x20
  4225a4:	mov	x1, x22
  4225a8:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  4225ac:	ldr	x8, [x20, #184]
  4225b0:	lsl	x9, x27, #3
  4225b4:	str	x0, [x8, x9]
  4225b8:	ldr	x8, [x20, #184]
  4225bc:	ldr	x8, [x8, x9]
  4225c0:	cbnz	x8, 4225cc <_obstack_memory_used@@Base+0xcb74>
  4225c4:	ldur	w25, [x29, #-4]
  4225c8:	cbnz	w25, 422964 <_obstack_memory_used@@Base+0xcf0c>
  4225cc:	cbnz	w23, 4225e8 <_obstack_memory_used@@Base+0xcb90>
  4225d0:	ldr	x8, [x22]
  4225d4:	add	x1, x8, x19, lsl #4
  4225d8:	mov	x0, x20
  4225dc:	mov	x2, x26
  4225e0:	bl	423728 <_obstack_memory_used@@Base+0xdcd0>
  4225e4:	tbz	w0, #0, 4224dc <_obstack_memory_used@@Base+0xca84>
  4225e8:	ldr	x8, [x22, #24]
  4225ec:	ldur	x9, [x29, #-64]
  4225f0:	ldr	x19, [x8, x19, lsl #3]
  4225f4:	cbnz	x9, 4224c0 <_obstack_memory_used@@Base+0xca68>
  4225f8:	ldr	q0, [sp, #80]
  4225fc:	mov	w0, #0x8                   	// #8
  422600:	stur	q0, [x29, #-64]
  422604:	bl	402730 <malloc@plt>
  422608:	stur	x0, [x29, #-48]
  42260c:	cbz	x0, 422948 <_obstack_memory_used@@Base+0xcef0>
  422610:	str	x19, [x0]
  422614:	b	4224dc <_obstack_memory_used@@Base+0xca84>
  422618:	cmp	x9, x8
  42261c:	b.ne	422644 <_obstack_memory_used@@Base+0xcbec>  // b.any
  422620:	ldur	x0, [x29, #-48]
  422624:	lsl	x8, x9, #1
  422628:	lsl	x1, x9, #4
  42262c:	stur	x8, [x29, #-64]
  422630:	bl	402870 <realloc@plt>
  422634:	cbz	x0, 42294c <_obstack_memory_used@@Base+0xcef4>
  422638:	ldur	x8, [x29, #-56]
  42263c:	stur	x0, [x29, #-48]
  422640:	b	422648 <_obstack_memory_used@@Base+0xcbf0>
  422644:	ldur	x0, [x29, #-48]
  422648:	ldr	x9, [x0]
  42264c:	cmp	x9, x19
  422650:	b.le	42267c <_obstack_memory_used@@Base+0xcc24>
  422654:	cmp	x8, #0x1
  422658:	b.lt	4226a4 <_obstack_memory_used@@Base+0xcc4c>  // b.tstop
  42265c:	mov	x9, x8
  422660:	add	x10, x0, x9, lsl #3
  422664:	ldur	x11, [x10, #-8]
  422668:	subs	x8, x9, #0x1
  42266c:	mov	x9, x8
  422670:	str	x11, [x10]
  422674:	b.gt	422660 <_obstack_memory_used@@Base+0xcc08>
  422678:	b	4226a4 <_obstack_memory_used@@Base+0xcc4c>
  42267c:	add	x9, x0, x8, lsl #3
  422680:	ldur	x9, [x9, #-8]
  422684:	cmp	x9, x19
  422688:	b.le	4226a4 <_obstack_memory_used@@Base+0xcc4c>
  42268c:	add	x10, x0, x8, lsl #3
  422690:	str	x9, [x10]
  422694:	ldur	x9, [x10, #-16]
  422698:	sub	x8, x8, #0x1
  42269c:	cmp	x9, x19
  4226a0:	b.gt	42268c <_obstack_memory_used@@Base+0xcc34>
  4226a4:	str	x19, [x0, x8, lsl #3]
  4226a8:	b	4224d0 <_obstack_memory_used@@Base+0xca78>
  4226ac:	cmp	x9, x8
  4226b0:	b.ne	4226d8 <_obstack_memory_used@@Base+0xcc80>  // b.any
  4226b4:	ldur	x0, [x29, #-16]
  4226b8:	lsl	x8, x9, #1
  4226bc:	lsl	x1, x9, #4
  4226c0:	stur	x8, [x29, #-32]
  4226c4:	bl	402870 <realloc@plt>
  4226c8:	cbz	x0, 42294c <_obstack_memory_used@@Base+0xcef4>
  4226cc:	ldur	x8, [x29, #-24]
  4226d0:	stur	x0, [x29, #-16]
  4226d4:	b	4226dc <_obstack_memory_used@@Base+0xcc84>
  4226d8:	ldur	x0, [x29, #-16]
  4226dc:	ldr	x9, [x0]
  4226e0:	cmp	x9, x21
  4226e4:	b.le	422710 <_obstack_memory_used@@Base+0xccb8>
  4226e8:	cmp	x8, #0x1
  4226ec:	b.lt	422738 <_obstack_memory_used@@Base+0xcce0>  // b.tstop
  4226f0:	mov	x9, x8
  4226f4:	add	x10, x0, x9, lsl #3
  4226f8:	ldur	x11, [x10, #-8]
  4226fc:	subs	x8, x9, #0x1
  422700:	mov	x9, x8
  422704:	str	x11, [x10]
  422708:	b.gt	4226f4 <_obstack_memory_used@@Base+0xcc9c>
  42270c:	b	422738 <_obstack_memory_used@@Base+0xcce0>
  422710:	add	x9, x0, x8, lsl #3
  422714:	ldur	x9, [x9, #-8]
  422718:	cmp	x9, x21
  42271c:	b.le	422738 <_obstack_memory_used@@Base+0xcce0>
  422720:	add	x10, x0, x8, lsl #3
  422724:	str	x9, [x10]
  422728:	ldur	x9, [x10, #-16]
  42272c:	sub	x8, x8, #0x1
  422730:	cmp	x9, x21
  422734:	b.gt	422720 <_obstack_memory_used@@Base+0xccc8>
  422738:	str	x21, [x0, x8, lsl #3]
  42273c:	b	42256c <_obstack_memory_used@@Base+0xcb14>
  422740:	ldur	x0, [x29, #-16]
  422744:	ldr	x24, [sp, #40]
  422748:	ldr	w23, [sp, #36]
  42274c:	b	422754 <_obstack_memory_used@@Base+0xccfc>
  422750:	mov	x0, xzr
  422754:	bl	402a10 <free@plt>
  422758:	ldp	x22, x21, [sp, #48]
  42275c:	stur	wzr, [x29, #-36]
  422760:	ldur	x8, [x29, #-56]
  422764:	cbz	x8, 4227a4 <_obstack_memory_used@@Base+0xcd4c>
  422768:	sub	x1, x29, #0x40
  42276c:	mov	x0, x21
  422770:	mov	x2, x22
  422774:	mov	w3, w23
  422778:	bl	422a38 <_obstack_memory_used@@Base+0xcfe0>
  42277c:	stur	w0, [x29, #-36]
  422780:	cbnz	w0, 422958 <_obstack_memory_used@@Base+0xcf00>
  422784:	ldr	x2, [sp, #72]
  422788:	sub	x1, x29, #0x40
  42278c:	mov	x0, x20
  422790:	mov	x3, x22
  422794:	mov	w4, w23
  422798:	bl	422b7c <_obstack_memory_used@@Base+0xd124>
  42279c:	stur	w0, [x29, #-36]
  4227a0:	cbnz	w0, 422958 <_obstack_memory_used@@Base+0xcf00>
  4227a4:	tbnz	x26, #63, 4227dc <_obstack_memory_used@@Base+0xcd84>
  4227a8:	ldr	x8, [x20, #88]
  4227ac:	cmp	x8, x26
  4227b0:	b.eq	422860 <_obstack_memory_used@@Base+0xce08>  // b.none
  4227b4:	ldr	w8, [x20, #144]
  4227b8:	cmp	w8, #0x2
  4227bc:	b.lt	4227e4 <_obstack_memory_used@@Base+0xcd8c>  // b.tstop
  4227c0:	ldr	x8, [x20, #16]
  4227c4:	ldr	w19, [x8, x26, lsl #2]
  4227c8:	cmn	w19, #0x1
  4227cc:	b.ne	42280c <_obstack_memory_used@@Base+0xcdb4>  // b.any
  4227d0:	sub	x26, x26, #0x1
  4227d4:	cmn	x26, #0x1
  4227d8:	b.ne	4227c4 <_obstack_memory_used@@Base+0xcd6c>  // b.any
  4227dc:	ldr	w3, [x20, #112]
  4227e0:	b	42283c <_obstack_memory_used@@Base+0xcde4>
  4227e4:	ldr	x8, [x20, #8]
  4227e8:	ldr	x9, [x20, #128]
  4227ec:	ldrb	w8, [x8, x26]
  4227f0:	lsr	x10, x8, #3
  4227f4:	and	x10, x10, #0x18
  4227f8:	ldr	x9, [x9, x10]
  4227fc:	lsr	x9, x9, x8
  422800:	tbz	w9, #0, 422830 <_obstack_memory_used@@Base+0xcdd8>
  422804:	mov	w3, #0x1                   	// #1
  422808:	b	42283c <_obstack_memory_used@@Base+0xcde4>
  42280c:	ldrb	w8, [x20, #142]
  422810:	cbnz	w8, 422874 <_obstack_memory_used@@Base+0xce1c>
  422814:	cmp	w19, #0xa
  422818:	b.ne	422838 <_obstack_memory_used@@Base+0xcde0>  // b.any
  42281c:	ldrb	w8, [x20, #141]
  422820:	cmp	w8, #0x0
  422824:	cset	w8, ne  // ne = any
  422828:	lsl	w3, w8, #1
  42282c:	b	42283c <_obstack_memory_used@@Base+0xcde4>
  422830:	cmp	w8, #0xa
  422834:	b.eq	42281c <_obstack_memory_used@@Base+0xcdc4>  // b.none
  422838:	mov	w3, wzr
  42283c:	sub	x0, x29, #0x24
  422840:	sub	x2, x29, #0x40
  422844:	mov	x1, x21
  422848:	bl	41f6d0 <_obstack_memory_used@@Base+0x9c78>
  42284c:	mov	x28, x0
  422850:	cbnz	x0, 422440 <_obstack_memory_used@@Base+0xc9e8>
  422854:	ldur	w8, [x29, #-36]
  422858:	cbz	w8, 422440 <_obstack_memory_used@@Base+0xc9e8>
  42285c:	b	422958 <_obstack_memory_used@@Base+0xcf00>
  422860:	ldr	w8, [x20, #160]
  422864:	mov	w9, #0xa                   	// #10
  422868:	and	w8, w8, #0x2
  42286c:	eor	w3, w8, w9
  422870:	b	42283c <_obstack_memory_used@@Base+0xcde4>
  422874:	mov	w0, w19
  422878:	bl	402b10 <iswalnum@plt>
  42287c:	cmp	w19, #0x5f
  422880:	mov	w3, #0x1                   	// #1
  422884:	b.eq	42283c <_obstack_memory_used@@Base+0xcde4>  // b.none
  422888:	cbz	w0, 422814 <_obstack_memory_used@@Base+0xcdbc>
  42288c:	b	42283c <_obstack_memory_used@@Base+0xcde4>
  422890:	mov	x26, x24
  422894:	ldur	x0, [x29, #-48]
  422898:	bl	402a10 <free@plt>
  42289c:	ldr	x8, [x20, #184]
  4228a0:	ldr	x9, [x8, x24, lsl #3]
  4228a4:	ldp	x10, x8, [sp, #16]
  4228a8:	cmp	x9, #0x0
  4228ac:	str	x26, [x8]
  4228b0:	ldr	x8, [sp, #8]
  4228b4:	str	x10, [x20, #72]
  4228b8:	str	x8, [x20, #184]
  4228bc:	add	x8, x9, #0x8
  4228c0:	csel	x8, xzr, x8, eq  // eq = none
  4228c4:	cbz	x9, 422920 <_obstack_memory_used@@Base+0xcec8>
  4228c8:	ldr	x9, [x8, #8]
  4228cc:	subs	x9, x9, #0x1
  4228d0:	b.lt	422920 <_obstack_memory_used@@Base+0xcec8>  // b.tstop
  4228d4:	ldr	x8, [x8, #16]
  4228d8:	mov	x10, xzr
  4228dc:	b.eq	422908 <_obstack_memory_used@@Base+0xceb0>  // b.none
  4228e0:	ldr	x13, [sp]
  4228e4:	add	x11, x10, x9
  4228e8:	lsr	x11, x11, #1
  4228ec:	ldr	x12, [x8, x11, lsl #3]
  4228f0:	cmp	x12, x13
  4228f4:	csinc	x10, x10, x11, ge  // ge = tcont
  4228f8:	csel	x9, x9, x11, lt  // lt = tstop
  4228fc:	cmp	x10, x9
  422900:	b.cc	4228e4 <_obstack_memory_used@@Base+0xce8c>  // b.lo, b.ul, b.last
  422904:	b	42290c <_obstack_memory_used@@Base+0xceb4>
  422908:	ldr	x13, [sp]
  42290c:	ldr	x8, [x8, x10, lsl #3]
  422910:	cmp	x8, x13
  422914:	b.ne	422920 <_obstack_memory_used@@Base+0xcec8>  // b.any
  422918:	mov	w19, wzr
  42291c:	b	422924 <_obstack_memory_used@@Base+0xcecc>
  422920:	mov	w19, #0x1                   	// #1
  422924:	mov	w0, w19
  422928:	ldp	x20, x19, [sp, #240]
  42292c:	ldp	x22, x21, [sp, #224]
  422930:	ldp	x24, x23, [sp, #208]
  422934:	ldp	x26, x25, [sp, #192]
  422938:	ldp	x28, x27, [sp, #176]
  42293c:	ldp	x29, x30, [sp, #160]
  422940:	add	sp, sp, #0x100
  422944:	ret
  422948:	stp	xzr, xzr, [x29, #-64]
  42294c:	ldur	x0, [x29, #-16]
  422950:	mov	w25, #0xc                   	// #12
  422954:	b	422968 <_obstack_memory_used@@Base+0xcf10>
  422958:	ldur	x0, [x29, #-48]
  42295c:	b	422974 <_obstack_memory_used@@Base+0xcf1c>
  422960:	mov	w25, w0
  422964:	ldur	x0, [x29, #-16]
  422968:	bl	402a10 <free@plt>
  42296c:	ldur	x0, [x29, #-48]
  422970:	stur	w25, [x29, #-36]
  422974:	bl	402a10 <free@plt>
  422978:	ldur	w19, [x29, #-36]
  42297c:	b	422924 <_obstack_memory_used@@Base+0xcecc>
  422980:	stp	xzr, xzr, [x29, #-32]
  422984:	mov	w25, #0xc                   	// #12
  422988:	b	422968 <_obstack_memory_used@@Base+0xcf10>
  42298c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  422990:	sub	x9, x9, x21
  422994:	cmp	x9, x8
  422998:	b.le	422a30 <_obstack_memory_used@@Base+0xcfd8>
  42299c:	add	x22, x8, #0x1
  4229a0:	add	x23, x22, x21
  4229a4:	lsr	x8, x23, #61
  4229a8:	cbnz	x8, 422a30 <_obstack_memory_used@@Base+0xcfd8>
  4229ac:	ldr	x0, [x25, #16]
  4229b0:	lsl	x1, x23, #3
  4229b4:	bl	402870 <realloc@plt>
  4229b8:	cbz	x0, 422a30 <_obstack_memory_used@@Base+0xcfd8>
  4229bc:	stp	x23, x0, [x25, #8]
  4229c0:	add	x0, x0, x21, lsl #3
  4229c4:	lsl	x2, x22, #3
  4229c8:	mov	w1, wzr
  4229cc:	bl	402800 <memset@plt>
  4229d0:	b	422214 <_obstack_memory_used@@Base+0xc7bc>
  4229d4:	ldr	w22, [x20, #112]
  4229d8:	ldr	x24, [sp, #40]
  4229dc:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  4229e0:	ldr	w8, [x20, #160]
  4229e4:	mov	w9, #0xa                   	// #10
  4229e8:	and	w8, w8, #0x2
  4229ec:	eor	w22, w8, w9
  4229f0:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  4229f4:	mov	w19, w0
  4229f8:	ldur	x0, [x29, #-48]
  4229fc:	bl	402a10 <free@plt>
  422a00:	b	422924 <_obstack_memory_used@@Base+0xcecc>
  422a04:	mov	w19, #0xc                   	// #12
  422a08:	stp	xzr, xzr, [x29, #-64]
  422a0c:	stur	w19, [x29, #-36]
  422a10:	b	422924 <_obstack_memory_used@@Base+0xcecc>
  422a14:	mov	w0, w23
  422a18:	bl	402b10 <iswalnum@plt>
  422a1c:	cmp	w23, #0x5f
  422a20:	mov	w22, #0x1                   	// #1
  422a24:	b.eq	4222dc <_obstack_memory_used@@Base+0xc884>  // b.none
  422a28:	cbz	w0, 4222b4 <_obstack_memory_used@@Base+0xc85c>
  422a2c:	b	4222dc <_obstack_memory_used@@Base+0xc884>
  422a30:	mov	w19, #0xc                   	// #12
  422a34:	b	422924 <_obstack_memory_used@@Base+0xcecc>
  422a38:	sub	sp, sp, #0x70
  422a3c:	stp	x29, x30, [sp, #32]
  422a40:	stp	x24, x23, [sp, #64]
  422a44:	stp	x22, x21, [sp, #80]
  422a48:	stp	x20, x19, [sp, #96]
  422a4c:	ldr	x23, [x1, #8]
  422a50:	mov	x22, x0
  422a54:	str	x25, [sp, #48]
  422a58:	add	x29, sp, #0x20
  422a5c:	lsl	x0, x23, #3
  422a60:	mov	w20, w3
  422a64:	mov	x21, x2
  422a68:	mov	x19, x1
  422a6c:	stp	x23, xzr, [sp, #8]
  422a70:	bl	402730 <malloc@plt>
  422a74:	str	x0, [sp, #24]
  422a78:	cbz	x0, 422b74 <_obstack_memory_used@@Base+0xd11c>
  422a7c:	cmp	x23, #0x1
  422a80:	b.lt	422b38 <_obstack_memory_used@@Base+0xd0e0>  // b.tstop
  422a84:	mov	x24, xzr
  422a88:	mov	w25, #0x18                  	// #24
  422a8c:	b	422aac <_obstack_memory_used@@Base+0xd054>
  422a90:	add	x0, sp, #0x8
  422a94:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  422a98:	cbnz	w0, 422b28 <_obstack_memory_used@@Base+0xd0d0>
  422a9c:	ldr	x8, [x19, #8]
  422aa0:	add	x24, x24, #0x1
  422aa4:	cmp	x24, x8
  422aa8:	b.ge	422b38 <_obstack_memory_used@@Base+0xd0e0>  // b.tcont
  422aac:	ldr	x8, [x19, #16]
  422ab0:	ldr	x9, [x22, #48]
  422ab4:	ldr	x2, [x8, x24, lsl #3]
  422ab8:	madd	x1, x2, x25, x9
  422abc:	ldr	x8, [x1, #8]
  422ac0:	cmp	x8, #0x1
  422ac4:	b.lt	422a90 <_obstack_memory_used@@Base+0xd038>  // b.tstop
  422ac8:	madd	x9, x2, x25, x9
  422acc:	ldr	x9, [x9, #16]
  422ad0:	ldr	x10, [x22]
  422ad4:	b	422ae4 <_obstack_memory_used@@Base+0xd08c>
  422ad8:	subs	x8, x8, #0x1
  422adc:	add	x9, x9, #0x8
  422ae0:	b.eq	422a90 <_obstack_memory_used@@Base+0xd038>  // b.none
  422ae4:	ldr	x11, [x9]
  422ae8:	add	x12, x10, x11, lsl #4
  422aec:	ldrb	w12, [x12, #8]
  422af0:	cmp	w12, w20
  422af4:	b.ne	422ad8 <_obstack_memory_used@@Base+0xd080>  // b.any
  422af8:	lsl	x12, x11, #4
  422afc:	ldr	x12, [x10, x12]
  422b00:	cmp	x12, x21
  422b04:	b.ne	422ad8 <_obstack_memory_used@@Base+0xd080>  // b.any
  422b08:	cmn	x11, #0x1
  422b0c:	b.eq	422a90 <_obstack_memory_used@@Base+0xd038>  // b.none
  422b10:	add	x1, sp, #0x8
  422b14:	mov	x0, x22
  422b18:	mov	x3, x21
  422b1c:	mov	w4, w20
  422b20:	bl	423058 <_obstack_memory_used@@Base+0xd600>
  422b24:	cbz	w0, 422a9c <_obstack_memory_used@@Base+0xd044>
  422b28:	mov	w23, w0
  422b2c:	ldr	x0, [sp, #24]
  422b30:	bl	402a10 <free@plt>
  422b34:	b	422b54 <_obstack_memory_used@@Base+0xd0fc>
  422b38:	ldr	x0, [x19, #16]
  422b3c:	bl	402a10 <free@plt>
  422b40:	ldr	x8, [sp, #24]
  422b44:	ldur	q0, [sp, #8]
  422b48:	mov	w23, wzr
  422b4c:	str	x8, [x19, #16]
  422b50:	str	q0, [x19]
  422b54:	mov	w0, w23
  422b58:	ldp	x20, x19, [sp, #96]
  422b5c:	ldp	x22, x21, [sp, #80]
  422b60:	ldp	x24, x23, [sp, #64]
  422b64:	ldr	x25, [sp, #48]
  422b68:	ldp	x29, x30, [sp, #32]
  422b6c:	add	sp, sp, #0x70
  422b70:	ret
  422b74:	mov	w23, #0xc                   	// #12
  422b78:	b	422b54 <_obstack_memory_used@@Base+0xd0fc>
  422b7c:	sub	sp, sp, #0xc0
  422b80:	stp	x29, x30, [sp, #96]
  422b84:	stp	x28, x27, [sp, #112]
  422b88:	stp	x26, x25, [sp, #128]
  422b8c:	stp	x24, x23, [sp, #144]
  422b90:	stp	x22, x21, [sp, #160]
  422b94:	stp	x20, x19, [sp, #176]
  422b98:	ldr	x8, [x0, #200]
  422b9c:	ldr	x23, [x0, #152]
  422ba0:	mov	x21, x2
  422ba4:	mov	x22, x0
  422ba8:	cmp	x8, #0x1
  422bac:	mov	x24, x1
  422bb0:	mov	x28, xzr
  422bb4:	add	x29, sp, #0x60
  422bb8:	b.lt	422bf4 <_obstack_memory_used@@Base+0xd19c>  // b.tstop
  422bbc:	ldr	x9, [x22, #216]
  422bc0:	mov	w10, #0x28                  	// #40
  422bc4:	mov	x11, x8
  422bc8:	add	x12, x11, x28
  422bcc:	cmp	x12, #0x0
  422bd0:	cinc	x12, x12, lt  // lt = tstop
  422bd4:	asr	x12, x12, #1
  422bd8:	madd	x13, x12, x10, x9
  422bdc:	ldr	x13, [x13, #8]
  422be0:	cmp	x13, x21
  422be4:	csel	x11, x11, x12, lt  // lt = tstop
  422be8:	csinc	x28, x28, x12, ge  // ge = tcont
  422bec:	cmp	x28, x11
  422bf0:	b.lt	422bc8 <_obstack_memory_used@@Base+0xd170>  // b.tstop
  422bf4:	cmp	x28, x8
  422bf8:	b.ge	423030 <_obstack_memory_used@@Base+0xd5d8>  // b.tcont
  422bfc:	cmn	x28, #0x1
  422c00:	mov	w26, wzr
  422c04:	b.eq	423034 <_obstack_memory_used@@Base+0xd5dc>  // b.none
  422c08:	ldr	x8, [x22, #216]
  422c0c:	mov	w9, #0x28                  	// #40
  422c10:	madd	x9, x28, x9, x8
  422c14:	ldr	x9, [x9, #8]
  422c18:	cmp	x9, x21
  422c1c:	b.ne	423034 <_obstack_memory_used@@Base+0xd5dc>  // b.any
  422c20:	mov	w9, #0x1                   	// #1
  422c24:	dup	v0.2d, x9
  422c28:	str	x3, [sp, #40]
  422c2c:	stur	w4, [x29, #-44]
  422c30:	str	q0, [sp, #16]
  422c34:	stur	x23, [x29, #-40]
  422c38:	mov	w9, #0x28                  	// #40
  422c3c:	madd	x19, x28, x9, x8
  422c40:	b	422c50 <_obstack_memory_used@@Base+0xd1f8>
  422c44:	ldrb	w8, [x19, #32]
  422c48:	add	x19, x19, #0x28
  422c4c:	cbz	w8, 423030 <_obstack_memory_used@@Base+0xd5d8>
  422c50:	ldr	x8, [x24, #8]
  422c54:	subs	x9, x8, #0x1
  422c58:	b.lt	422c44 <_obstack_memory_used@@Base+0xd1ec>  // b.tstop
  422c5c:	ldr	x10, [x19]
  422c60:	ldr	x8, [x24, #16]
  422c64:	mov	x11, xzr
  422c68:	b.eq	422c90 <_obstack_memory_used@@Base+0xd238>  // b.none
  422c6c:	mov	x12, x9
  422c70:	add	x13, x11, x12
  422c74:	lsr	x13, x13, #1
  422c78:	ldr	x14, [x8, x13, lsl #3]
  422c7c:	cmp	x14, x10
  422c80:	csinc	x11, x11, x13, ge  // ge = tcont
  422c84:	csel	x12, x12, x13, lt  // lt = tstop
  422c88:	cmp	x11, x12
  422c8c:	b.cc	422c70 <_obstack_memory_used@@Base+0xd218>  // b.lo, b.ul, b.last
  422c90:	ldr	x11, [x8, x11, lsl #3]
  422c94:	cmp	x11, x10
  422c98:	b.ne	422c44 <_obstack_memory_used@@Base+0xd1ec>  // b.any
  422c9c:	ldp	x12, x11, [x19, #16]
  422ca0:	add	x11, x11, x21
  422ca4:	sub	x27, x11, x12
  422ca8:	cmp	x27, x21
  422cac:	b.ne	422d70 <_obstack_memory_used@@Base+0xd318>  // b.any
  422cb0:	ldr	x11, [x23, #40]
  422cb4:	mov	w12, #0x18                  	// #24
  422cb8:	madd	x10, x10, x12, x11
  422cbc:	ldr	x10, [x10, #16]
  422cc0:	ldr	x20, [x10]
  422cc4:	mov	x10, xzr
  422cc8:	cbz	x9, 422cec <_obstack_memory_used@@Base+0xd294>
  422ccc:	add	x11, x10, x9
  422cd0:	lsr	x11, x11, #1
  422cd4:	ldr	x12, [x8, x11, lsl #3]
  422cd8:	cmp	x12, x20
  422cdc:	csinc	x10, x10, x11, ge  // ge = tcont
  422ce0:	csel	x9, x9, x11, lt  // lt = tstop
  422ce4:	cmp	x10, x9
  422ce8:	b.cc	422ccc <_obstack_memory_used@@Base+0xd274>  // b.lo, b.ul, b.last
  422cec:	ldr	x8, [x8, x10, lsl #3]
  422cf0:	cmp	x8, x20
  422cf4:	b.eq	422dcc <_obstack_memory_used@@Base+0xd374>  // b.none
  422cf8:	ldr	q0, [sp, #16]
  422cfc:	mov	w0, #0x8                   	// #8
  422d00:	stur	q0, [x29, #-32]
  422d04:	bl	402730 <malloc@plt>
  422d08:	mov	w23, w26
  422d0c:	stur	x0, [x29, #-16]
  422d10:	cbz	x0, 422f04 <_obstack_memory_used@@Base+0xd4ac>
  422d14:	mov	w25, wzr
  422d18:	str	x20, [x0]
  422d1c:	ldur	x0, [x29, #-40]
  422d20:	ldr	x2, [sp, #40]
  422d24:	ldur	w3, [x29, #-44]
  422d28:	sub	x1, x29, #0x20
  422d2c:	stur	w25, [x29, #-4]
  422d30:	bl	422a38 <_obstack_memory_used@@Base+0xcfe0>
  422d34:	mov	w26, w0
  422d38:	sub	x1, x29, #0x20
  422d3c:	mov	x0, x24
  422d40:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  422d44:	ldur	x8, [x29, #-16]
  422d48:	mov	w27, w0
  422d4c:	mov	x0, x8
  422d50:	bl	402a10 <free@plt>
  422d54:	orr	w8, w26, w25
  422d58:	orr	w8, w8, w27
  422d5c:	cbnz	w8, 422f10 <_obstack_memory_used@@Base+0xd4b8>
  422d60:	mov	w26, w23
  422d64:	ldur	x23, [x29, #-40]
  422d68:	mov	w8, #0x2                   	// #2
  422d6c:	b	422ee8 <_obstack_memory_used@@Base+0xd490>
  422d70:	ldr	x8, [x22, #184]
  422d74:	ldr	x9, [x23, #24]
  422d78:	ldr	x25, [x8, x27, lsl #3]
  422d7c:	ldr	x20, [x9, x10, lsl #3]
  422d80:	cbz	x25, 422dd4 <_obstack_memory_used@@Base+0xd37c>
  422d84:	ldr	x8, [x25, #16]
  422d88:	cmp	x8, #0x0
  422d8c:	b.le	422dfc <_obstack_memory_used@@Base+0xd3a4>
  422d90:	ldr	x9, [x25, #24]
  422d94:	mov	x11, xzr
  422d98:	subs	x10, x8, #0x1
  422d9c:	b.eq	422dc0 <_obstack_memory_used@@Base+0xd368>  // b.none
  422da0:	add	x12, x11, x10
  422da4:	lsr	x12, x12, #1
  422da8:	ldr	x13, [x9, x12, lsl #3]
  422dac:	cmp	x13, x20
  422db0:	csinc	x11, x11, x12, ge  // ge = tcont
  422db4:	csel	x10, x10, x12, lt  // lt = tstop
  422db8:	cmp	x11, x10
  422dbc:	b.cc	422da0 <_obstack_memory_used@@Base+0xd348>  // b.lo, b.ul, b.last
  422dc0:	ldr	x9, [x9, x11, lsl #3]
  422dc4:	cmp	x9, x20
  422dc8:	b.ne	422e04 <_obstack_memory_used@@Base+0xd3ac>  // b.any
  422dcc:	mov	w8, #0x4                   	// #4
  422dd0:	b	422ee8 <_obstack_memory_used@@Base+0xd490>
  422dd4:	mov	w8, #0x1                   	// #1
  422dd8:	dup	v0.2d, x8
  422ddc:	mov	w0, #0x8                   	// #8
  422de0:	stur	q0, [x29, #-32]
  422de4:	bl	402730 <malloc@plt>
  422de8:	stur	x0, [x29, #-16]
  422dec:	cbz	x0, 422f28 <_obstack_memory_used@@Base+0xd4d0>
  422df0:	str	x20, [x0]
  422df4:	stur	wzr, [x29, #-4]
  422df8:	b	422e9c <_obstack_memory_used@@Base+0xd444>
  422dfc:	stur	x8, [x29, #-24]
  422e00:	b	422e68 <_obstack_memory_used@@Base+0xd410>
  422e04:	cmp	x8, #0x1
  422e08:	stur	x8, [x29, #-24]
  422e0c:	b.lt	422e68 <_obstack_memory_used@@Base+0xd410>  // b.tstop
  422e10:	str	w26, [sp, #12]
  422e14:	lsl	x26, x8, #3
  422e18:	mov	x0, x26
  422e1c:	stur	x8, [x29, #-32]
  422e20:	bl	402730 <malloc@plt>
  422e24:	stur	x0, [x29, #-16]
  422e28:	cbz	x0, 422f60 <_obstack_memory_used@@Base+0xd508>
  422e2c:	ldr	x1, [x25, #24]
  422e30:	mov	x2, x26
  422e34:	bl	402580 <memcpy@plt>
  422e38:	ldur	x9, [x29, #-32]
  422e3c:	stur	wzr, [x29, #-4]
  422e40:	cbz	x9, 422ef8 <_obstack_memory_used@@Base+0xd4a0>
  422e44:	ldur	x8, [x29, #-24]
  422e48:	ldr	w26, [sp, #12]
  422e4c:	cbnz	x8, 422f70 <_obstack_memory_used@@Base+0xd518>
  422e50:	ldur	x8, [x29, #-16]
  422e54:	str	x20, [x8]
  422e58:	ldur	x8, [x29, #-24]
  422e5c:	add	x8, x8, #0x1
  422e60:	stur	x8, [x29, #-24]
  422e64:	b	422e9c <_obstack_memory_used@@Base+0xd444>
  422e68:	mov	w25, wzr
  422e6c:	stp	xzr, xzr, [x29, #-32]
  422e70:	stur	xzr, [x29, #-16]
  422e74:	stur	wzr, [x29, #-4]
  422e78:	mov	w8, #0x1                   	// #1
  422e7c:	dup	v0.2d, x8
  422e80:	mov	w0, #0x8                   	// #8
  422e84:	stur	q0, [x29, #-32]
  422e88:	bl	402730 <malloc@plt>
  422e8c:	stur	x0, [x29, #-16]
  422e90:	cbz	x0, 422f3c <_obstack_memory_used@@Base+0xd4e4>
  422e94:	str	x20, [x0]
  422e98:	cbnz	w25, 422f4c <_obstack_memory_used@@Base+0xd4f4>
  422e9c:	sub	x0, x29, #0x4
  422ea0:	sub	x2, x29, #0x20
  422ea4:	mov	x1, x23
  422ea8:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  422eac:	ldr	x8, [x22, #184]
  422eb0:	lsl	x20, x27, #3
  422eb4:	str	x0, [x8, x20]
  422eb8:	ldur	x0, [x29, #-16]
  422ebc:	bl	402a10 <free@plt>
  422ec0:	ldr	x8, [x22, #184]
  422ec4:	ldur	w9, [x29, #-4]
  422ec8:	ldr	x8, [x8, x20]
  422ecc:	cmp	x8, #0x0
  422ed0:	cset	w10, eq  // eq = none
  422ed4:	cmp	w9, #0x0
  422ed8:	cset	w11, ne  // ne = any
  422edc:	tst	w10, w11
  422ee0:	and	w8, w10, w11
  422ee4:	csel	w26, w9, w26, ne  // ne = any
  422ee8:	cbz	w8, 422c44 <_obstack_memory_used@@Base+0xd1ec>
  422eec:	cmp	w8, #0x4
  422ef0:	b.eq	422c44 <_obstack_memory_used@@Base+0xd1ec>  // b.none
  422ef4:	b	423020 <_obstack_memory_used@@Base+0xd5c8>
  422ef8:	mov	w25, wzr
  422efc:	ldr	w26, [sp, #12]
  422f00:	b	422e78 <_obstack_memory_used@@Base+0xd420>
  422f04:	stp	xzr, xzr, [x29, #-32]
  422f08:	mov	w25, #0xc                   	// #12
  422f0c:	b	422d1c <_obstack_memory_used@@Base+0xd2c4>
  422f10:	cmp	w26, #0x0
  422f14:	ldur	x23, [x29, #-40]
  422f18:	csel	w8, w27, w26, eq  // eq = none
  422f1c:	cmp	w25, #0x0
  422f20:	csel	w26, w8, w25, eq  // eq = none
  422f24:	b	422f30 <_obstack_memory_used@@Base+0xd4d8>
  422f28:	mov	w26, #0xc                   	// #12
  422f2c:	stp	xzr, xzr, [x29, #-32]
  422f30:	stur	w26, [x29, #-4]
  422f34:	mov	w8, #0x1                   	// #1
  422f38:	b	422ee8 <_obstack_memory_used@@Base+0xd490>
  422f3c:	stp	xzr, xzr, [x29, #-32]
  422f40:	cbnz	w25, 422f50 <_obstack_memory_used@@Base+0xd4f8>
  422f44:	mov	w25, #0xc                   	// #12
  422f48:	b	422f50 <_obstack_memory_used@@Base+0xd4f8>
  422f4c:	bl	402a10 <free@plt>
  422f50:	stur	w25, [x29, #-4]
  422f54:	mov	w8, #0x1                   	// #1
  422f58:	mov	w26, w25
  422f5c:	b	422ee8 <_obstack_memory_used@@Base+0xd490>
  422f60:	mov	w25, #0xc                   	// #12
  422f64:	stp	xzr, xzr, [x29, #-32]
  422f68:	stur	w25, [x29, #-4]
  422f6c:	b	422efc <_obstack_memory_used@@Base+0xd4a4>
  422f70:	cmp	x9, x8
  422f74:	b.ne	422f9c <_obstack_memory_used@@Base+0xd544>  // b.any
  422f78:	ldur	x0, [x29, #-16]
  422f7c:	lsl	x8, x9, #1
  422f80:	lsl	x1, x9, #4
  422f84:	stur	x8, [x29, #-32]
  422f88:	bl	402870 <realloc@plt>
  422f8c:	cbz	x0, 423010 <_obstack_memory_used@@Base+0xd5b8>
  422f90:	ldur	x8, [x29, #-24]
  422f94:	stur	x0, [x29, #-16]
  422f98:	b	422fa0 <_obstack_memory_used@@Base+0xd548>
  422f9c:	ldur	x0, [x29, #-16]
  422fa0:	ldr	x9, [x0]
  422fa4:	cmp	x9, x20
  422fa8:	b.le	422fd4 <_obstack_memory_used@@Base+0xd57c>
  422fac:	cmp	x8, #0x1
  422fb0:	b.lt	422ffc <_obstack_memory_used@@Base+0xd5a4>  // b.tstop
  422fb4:	mov	x9, x8
  422fb8:	add	x10, x0, x9, lsl #3
  422fbc:	ldur	x11, [x10, #-8]
  422fc0:	subs	x8, x9, #0x1
  422fc4:	mov	x9, x8
  422fc8:	str	x11, [x10]
  422fcc:	b.gt	422fb8 <_obstack_memory_used@@Base+0xd560>
  422fd0:	b	422ffc <_obstack_memory_used@@Base+0xd5a4>
  422fd4:	add	x9, x0, x8, lsl #3
  422fd8:	ldur	x9, [x9, #-8]
  422fdc:	cmp	x9, x20
  422fe0:	b.le	422ffc <_obstack_memory_used@@Base+0xd5a4>
  422fe4:	add	x10, x0, x8, lsl #3
  422fe8:	str	x9, [x10]
  422fec:	ldur	x9, [x10, #-16]
  422ff0:	sub	x8, x8, #0x1
  422ff4:	cmp	x9, x20
  422ff8:	b.gt	422fe4 <_obstack_memory_used@@Base+0xd58c>
  422ffc:	str	x20, [x0, x8, lsl #3]
  423000:	ldur	x8, [x29, #-24]
  423004:	ldr	w26, [sp, #12]
  423008:	ldur	x23, [x29, #-40]
  42300c:	b	422e5c <_obstack_memory_used@@Base+0xd404>
  423010:	ldur	x0, [x29, #-16]
  423014:	bl	402a10 <free@plt>
  423018:	ldur	x23, [x29, #-40]
  42301c:	b	422f44 <_obstack_memory_used@@Base+0xd4ec>
  423020:	cmp	w8, #0x2
  423024:	b.ne	423034 <_obstack_memory_used@@Base+0xd5dc>  // b.any
  423028:	ldr	x8, [x22, #216]
  42302c:	b	422c38 <_obstack_memory_used@@Base+0xd1e0>
  423030:	mov	w26, wzr
  423034:	mov	w0, w26
  423038:	ldp	x20, x19, [sp, #176]
  42303c:	ldp	x22, x21, [sp, #160]
  423040:	ldp	x24, x23, [sp, #144]
  423044:	ldp	x26, x25, [sp, #128]
  423048:	ldp	x28, x27, [sp, #112]
  42304c:	ldp	x29, x30, [sp, #96]
  423050:	add	sp, sp, #0xc0
  423054:	ret
  423058:	stp	x29, x30, [sp, #-64]!
  42305c:	stp	x24, x23, [sp, #16]
  423060:	stp	x22, x21, [sp, #32]
  423064:	stp	x20, x19, [sp, #48]
  423068:	mov	w21, w4
  42306c:	mov	x22, x3
  423070:	mov	x19, x2
  423074:	mov	x20, x1
  423078:	mov	x23, x0
  42307c:	mov	w24, #0x18                  	// #24
  423080:	mov	x29, sp
  423084:	b	423098 <_obstack_memory_used@@Base+0xd640>
  423088:	cbz	x9, 423168 <_obstack_memory_used@@Base+0xd710>
  42308c:	madd	x8, x19, x24, x8
  423090:	ldr	x8, [x8, #16]
  423094:	ldr	x19, [x8]
  423098:	ldr	x8, [x20, #8]
  42309c:	subs	x9, x8, #0x1
  4230a0:	b.lt	4230dc <_obstack_memory_used@@Base+0xd684>  // b.tstop
  4230a4:	ldr	x8, [x20, #16]
  4230a8:	mov	x10, xzr
  4230ac:	b.eq	4230d0 <_obstack_memory_used@@Base+0xd678>  // b.none
  4230b0:	add	x11, x10, x9
  4230b4:	lsr	x11, x11, #1
  4230b8:	ldr	x12, [x8, x11, lsl #3]
  4230bc:	cmp	x12, x19
  4230c0:	csinc	x10, x10, x11, ge  // ge = tcont
  4230c4:	csel	x9, x9, x11, lt  // lt = tstop
  4230c8:	cmp	x10, x9
  4230cc:	b.cc	4230b0 <_obstack_memory_used@@Base+0xd658>  // b.lo, b.ul, b.last
  4230d0:	ldr	x8, [x8, x10, lsl #3]
  4230d4:	cmp	x8, x19
  4230d8:	b.eq	423168 <_obstack_memory_used@@Base+0xd710>  // b.none
  4230dc:	ldr	x8, [x23]
  4230e0:	add	x9, x8, x19, lsl #4
  4230e4:	ldrb	w9, [x9, #8]
  4230e8:	cmp	w9, w21
  4230ec:	b.ne	423100 <_obstack_memory_used@@Base+0xd6a8>  // b.any
  4230f0:	lsl	x9, x19, #4
  4230f4:	ldr	x8, [x8, x9]
  4230f8:	cmp	x8, x22
  4230fc:	b.eq	423150 <_obstack_memory_used@@Base+0xd6f8>  // b.none
  423100:	mov	x0, x20
  423104:	mov	x1, x19
  423108:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  42310c:	tbz	w0, #0, 423180 <_obstack_memory_used@@Base+0xd728>
  423110:	ldr	x8, [x23, #40]
  423114:	madd	x9, x19, x24, x8
  423118:	ldr	x9, [x9, #8]
  42311c:	cmp	x9, #0x2
  423120:	b.ne	423088 <_obstack_memory_used@@Base+0xd630>  // b.any
  423124:	madd	x8, x19, x24, x8
  423128:	ldr	x8, [x8, #16]
  42312c:	mov	x0, x23
  423130:	mov	x1, x20
  423134:	mov	x3, x22
  423138:	ldr	x2, [x8, #8]
  42313c:	mov	w4, w21
  423140:	bl	423058 <_obstack_memory_used@@Base+0xd600>
  423144:	cbnz	w0, 42316c <_obstack_memory_used@@Base+0xd714>
  423148:	ldr	x8, [x23, #40]
  42314c:	b	42308c <_obstack_memory_used@@Base+0xd634>
  423150:	cmp	w21, #0x9
  423154:	b.ne	423168 <_obstack_memory_used@@Base+0xd710>  // b.any
  423158:	mov	x0, x20
  42315c:	mov	x1, x19
  423160:	bl	41f5c8 <_obstack_memory_used@@Base+0x9b70>
  423164:	tbz	w0, #0, 423180 <_obstack_memory_used@@Base+0xd728>
  423168:	mov	w0, wzr
  42316c:	ldp	x20, x19, [sp, #48]
  423170:	ldp	x22, x21, [sp, #32]
  423174:	ldp	x24, x23, [sp, #16]
  423178:	ldp	x29, x30, [sp], #64
  42317c:	ret
  423180:	mov	w0, #0xc                   	// #12
  423184:	b	42316c <_obstack_memory_used@@Base+0xd714>
  423188:	stp	x29, x30, [sp, #-80]!
  42318c:	stp	x24, x23, [sp, #32]
  423190:	stp	x22, x21, [sp, #48]
  423194:	stp	x20, x19, [sp, #64]
  423198:	ldr	x24, [x2, #8]
  42319c:	mov	x19, x0
  4231a0:	str	x25, [sp, #16]
  4231a4:	mov	x29, sp
  4231a8:	cbz	x24, 4233e0 <_obstack_memory_used@@Base+0xd988>
  4231ac:	mov	x22, x2
  4231b0:	mov	x20, x1
  4231b4:	subs	x8, x24, #0x1
  4231b8:	mov	x21, x24
  4231bc:	b.lt	423234 <_obstack_memory_used@@Base+0xd7dc>  // b.tstop
  4231c0:	ldr	x9, [x22, #16]
  4231c4:	cmp	x24, #0x4
  4231c8:	b.cs	4231d8 <_obstack_memory_used@@Base+0xd780>  // b.hs, b.nlast
  4231cc:	mov	x10, xzr
  4231d0:	mov	x21, x24
  4231d4:	b	42321c <_obstack_memory_used@@Base+0xd7c4>
  4231d8:	and	x10, x24, #0xfffffffffffffffc
  4231dc:	movi	v1.2d, #0x0
  4231e0:	movi	v0.2d, #0x0
  4231e4:	mov	v1.d[0], x24
  4231e8:	add	x11, x9, #0x10
  4231ec:	mov	x12, x10
  4231f0:	ldp	q2, q3, [x11, #-16]
  4231f4:	subs	x12, x12, #0x4
  4231f8:	add	x11, x11, #0x20
  4231fc:	add	v1.2d, v2.2d, v1.2d
  423200:	add	v0.2d, v3.2d, v0.2d
  423204:	b.ne	4231f0 <_obstack_memory_used@@Base+0xd798>  // b.any
  423208:	add	v0.2d, v0.2d, v1.2d
  42320c:	addp	d0, v0.2d
  423210:	cmp	x24, x10
  423214:	fmov	x21, d0
  423218:	b.eq	423234 <_obstack_memory_used@@Base+0xd7dc>  // b.none
  42321c:	sub	x11, x24, x10
  423220:	add	x9, x9, x10, lsl #3
  423224:	ldr	x10, [x9], #8
  423228:	subs	x11, x11, #0x1
  42322c:	add	x21, x10, x21
  423230:	b.ne	423224 <_obstack_memory_used@@Base+0xd7cc>  // b.any
  423234:	ldr	x9, [x20, #136]
  423238:	ldr	x10, [x20, #64]
  42323c:	and	x11, x9, x21
  423240:	mov	w9, #0x18                  	// #24
  423244:	mul	x9, x11, x9
  423248:	ldr	x9, [x10, x9]
  42324c:	cmp	x9, #0x1
  423250:	b.lt	4232c8 <_obstack_memory_used@@Base+0xd870>  // b.tstop
  423254:	mov	w12, #0x18                  	// #24
  423258:	madd	x10, x11, x12, x10
  42325c:	ldr	x10, [x10, #16]
  423260:	mov	x11, xzr
  423264:	b	423274 <_obstack_memory_used@@Base+0xd81c>
  423268:	add	x11, x11, #0x1
  42326c:	cmp	x11, x9
  423270:	b.ge	4232c8 <_obstack_memory_used@@Base+0xd870>  // b.tcont
  423274:	cbz	x22, 423268 <_obstack_memory_used@@Base+0xd810>
  423278:	ldr	x23, [x10, x11, lsl #3]
  42327c:	ldr	x12, [x23]
  423280:	cmp	x21, x12
  423284:	b.ne	423268 <_obstack_memory_used@@Base+0xd810>  // b.any
  423288:	ldr	x12, [x23, #16]
  42328c:	cmp	x12, x24
  423290:	b.ne	423268 <_obstack_memory_used@@Base+0xd810>  // b.any
  423294:	mov	x12, x8
  423298:	add	x13, x12, #0x1
  42329c:	cmp	x13, #0x1
  4232a0:	b.lt	4233c4 <_obstack_memory_used@@Base+0xd96c>  // b.tstop
  4232a4:	ldr	x13, [x23, #24]
  4232a8:	ldr	x14, [x22, #16]
  4232ac:	lsl	x15, x12, #3
  4232b0:	sub	x12, x12, #0x1
  4232b4:	ldr	x13, [x13, x15]
  4232b8:	ldr	x14, [x14, x15]
  4232bc:	cmp	x13, x14
  4232c0:	b.eq	423298 <_obstack_memory_used@@Base+0xd840>  // b.none
  4232c4:	b	423268 <_obstack_memory_used@@Base+0xd810>
  4232c8:	mov	w0, #0x70                  	// #112
  4232cc:	mov	w1, #0x1                   	// #1
  4232d0:	bl	402840 <calloc@plt>
  4232d4:	cbz	x0, 423400 <_obstack_memory_used@@Base+0xd9a8>
  4232d8:	mov	x23, x0
  4232dc:	add	x25, x0, #0x8
  4232e0:	cmp	x24, #0x1
  4232e4:	str	x24, [x0, #16]
  4232e8:	b.lt	4233a4 <_obstack_memory_used@@Base+0xd94c>  // b.tstop
  4232ec:	str	x24, [x23, #8]
  4232f0:	lsl	x24, x24, #3
  4232f4:	mov	x0, x24
  4232f8:	bl	402730 <malloc@plt>
  4232fc:	str	x0, [x23, #24]
  423300:	cbz	x0, 4233f8 <_obstack_memory_used@@Base+0xd9a0>
  423304:	ldr	x1, [x22, #16]
  423308:	mov	x2, x24
  42330c:	bl	402580 <memcpy@plt>
  423310:	ldr	x8, [x22, #8]
  423314:	str	x25, [x23, #80]
  423318:	cmp	x8, #0x1
  42331c:	b.lt	4233b0 <_obstack_memory_used@@Base+0xd958>  // b.tstop
  423320:	ldr	x9, [x20]
  423324:	ldr	x10, [x22, #16]
  423328:	b	42334c <_obstack_memory_used@@Base+0xd8f4>
  42332c:	ldr	w11, [x11]
  423330:	tst	w11, #0x3ff00
  423334:	b.eq	423340 <_obstack_memory_used@@Base+0xd8e8>  // b.none
  423338:	orr	w11, w12, #0x80
  42333c:	strb	w11, [x23, #104]
  423340:	subs	x8, x8, #0x1
  423344:	add	x10, x10, #0x8
  423348:	b.eq	4233b0 <_obstack_memory_used@@Base+0xd958>  // b.none
  42334c:	ldr	x11, [x10]
  423350:	add	x11, x9, x11, lsl #4
  423354:	ldr	w12, [x11, #8]!
  423358:	and	w13, w12, #0x3ffff
  42335c:	cmp	w13, #0x1
  423360:	b.eq	423340 <_obstack_memory_used@@Base+0xd8e8>  // b.none
  423364:	ldrb	w14, [x23, #104]
  423368:	lsr	w15, w12, #15
  42336c:	and	w13, w12, #0xff
  423370:	and	w12, w15, #0x20
  423374:	orr	w12, w14, w12
  423378:	cmp	w13, #0xc
  42337c:	strb	w12, [x23, #104]
  423380:	b.eq	423338 <_obstack_memory_used@@Base+0xd8e0>  // b.none
  423384:	cmp	w13, #0x4
  423388:	b.eq	42339c <_obstack_memory_used@@Base+0xd944>  // b.none
  42338c:	cmp	w13, #0x2
  423390:	b.ne	42332c <_obstack_memory_used@@Base+0xd8d4>  // b.any
  423394:	orr	w11, w12, #0x10
  423398:	b	42333c <_obstack_memory_used@@Base+0xd8e4>
  42339c:	orr	w11, w12, #0x40
  4233a0:	b	42333c <_obstack_memory_used@@Base+0xd8e4>
  4233a4:	stp	xzr, xzr, [x25]
  4233a8:	str	xzr, [x25, #16]
  4233ac:	str	x25, [x23, #80]
  4233b0:	mov	x0, x20
  4233b4:	mov	x1, x23
  4233b8:	mov	x2, x21
  4233bc:	bl	41faa8 <_obstack_memory_used@@Base+0xa050>
  4233c0:	cbnz	w0, 4233ec <_obstack_memory_used@@Base+0xd994>
  4233c4:	mov	x0, x23
  4233c8:	ldp	x20, x19, [sp, #64]
  4233cc:	ldp	x22, x21, [sp, #48]
  4233d0:	ldp	x24, x23, [sp, #32]
  4233d4:	ldr	x25, [sp, #16]
  4233d8:	ldp	x29, x30, [sp], #80
  4233dc:	ret
  4233e0:	mov	x23, xzr
  4233e4:	str	wzr, [x19]
  4233e8:	b	4233c4 <_obstack_memory_used@@Base+0xd96c>
  4233ec:	mov	x0, x23
  4233f0:	bl	41a3b8 <_obstack_memory_used@@Base+0x4960>
  4233f4:	b	423400 <_obstack_memory_used@@Base+0xd9a8>
  4233f8:	mov	x0, x23
  4233fc:	bl	402a10 <free@plt>
  423400:	mov	x23, xzr
  423404:	mov	w8, #0xc                   	// #12
  423408:	str	w8, [x19]
  42340c:	b	4233c4 <_obstack_memory_used@@Base+0xd96c>
  423410:	stp	x29, x30, [sp, #-48]!
  423414:	stp	x22, x21, [sp, #16]
  423418:	stp	x20, x19, [sp, #32]
  42341c:	ldr	x8, [x0]
  423420:	mov	x29, sp
  423424:	add	x9, x8, x1, lsl #4
  423428:	ldrb	w10, [x9, #8]
  42342c:	cmp	w10, #0x7
  423430:	b.eq	42361c <_obstack_memory_used@@Base+0xdbc4>  // b.none
  423434:	ldr	w9, [x2, #144]
  423438:	cmp	w9, #0x1
  42343c:	b.ne	423494 <_obstack_memory_used@@Base+0xda3c>  // b.any
  423440:	mov	w20, #0x1                   	// #1
  423444:	cmp	w10, #0x5
  423448:	b.eq	4234e0 <_obstack_memory_used@@Base+0xda88>  // b.none
  42344c:	cmp	w10, #0x6
  423450:	mov	w0, wzr
  423454:	b.ne	4235f8 <_obstack_memory_used@@Base+0xdba0>  // b.any
  423458:	cmp	w20, #0x2
  42345c:	b.lt	4235f8 <_obstack_memory_used@@Base+0xdba0>  // b.tstop
  423460:	lsl	x10, x1, #4
  423464:	ldr	x21, [x8, x10]
  423468:	ldr	x8, [x21, #64]
  42346c:	cbnz	x8, 423480 <_obstack_memory_used@@Base+0xda28>
  423470:	ldr	x10, [x21, #72]
  423474:	cbnz	x10, 423480 <_obstack_memory_used@@Base+0xda28>
  423478:	ldr	x10, [x21, #40]
  42347c:	cbz	x10, 423614 <_obstack_memory_used@@Base+0xdbbc>
  423480:	cmp	w9, #0x1
  423484:	b.ne	423528 <_obstack_memory_used@@Base+0xdad0>  // b.any
  423488:	ldr	x9, [x2, #8]
  42348c:	ldrb	w19, [x9, x3]
  423490:	b	423530 <_obstack_memory_used@@Base+0xdad8>
  423494:	ldr	x11, [x2, #48]
  423498:	add	x12, x3, #0x1
  42349c:	cmp	x12, x11
  4234a0:	b.ge	4234d4 <_obstack_memory_used@@Base+0xda7c>  // b.tcont
  4234a4:	ldr	x13, [x2, #16]
  4234a8:	sub	w20, w11, w3
  4234ac:	sub	x12, x11, x3
  4234b0:	mov	w11, #0x1                   	// #1
  4234b4:	add	x13, x13, x3, lsl #2
  4234b8:	ldr	w14, [x13, x11, lsl #2]
  4234bc:	cmn	w14, #0x1
  4234c0:	b.ne	423518 <_obstack_memory_used@@Base+0xdac0>  // b.any
  4234c4:	add	x11, x11, #0x1
  4234c8:	cmp	x12, x11
  4234cc:	b.ne	4234b8 <_obstack_memory_used@@Base+0xda60>  // b.any
  4234d0:	b	4234d8 <_obstack_memory_used@@Base+0xda80>
  4234d4:	mov	w20, #0x1                   	// #1
  4234d8:	cmp	w10, #0x5
  4234dc:	b.ne	42344c <_obstack_memory_used@@Base+0xd9f4>  // b.any
  4234e0:	cmp	w20, #0x2
  4234e4:	b.lt	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.tstop
  4234e8:	ldr	x8, [x0, #216]
  4234ec:	tbnz	w8, #6, 423500 <_obstack_memory_used@@Base+0xdaa8>
  4234f0:	ldr	x9, [x2, #8]
  4234f4:	ldrb	w9, [x9, x3]
  4234f8:	cmp	w9, #0xa
  4234fc:	b.eq	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.none
  423500:	tbz	w8, #7, 423510 <_obstack_memory_used@@Base+0xdab8>
  423504:	ldr	x8, [x2, #8]
  423508:	ldrb	w8, [x8, x3]
  42350c:	cbz	w8, 4235f4 <_obstack_memory_used@@Base+0xdb9c>
  423510:	mov	w0, w20
  423514:	b	4235f8 <_obstack_memory_used@@Base+0xdba0>
  423518:	mov	w20, w11
  42351c:	cmp	w10, #0x5
  423520:	b.eq	4234e0 <_obstack_memory_used@@Base+0xda88>  // b.none
  423524:	b	42344c <_obstack_memory_used@@Base+0xd9f4>
  423528:	ldr	x9, [x2, #16]
  42352c:	ldr	w19, [x9, x3, lsl #2]
  423530:	ldr	x9, [x21, #40]
  423534:	cmp	x9, #0x1
  423538:	b.lt	42355c <_obstack_memory_used@@Base+0xdb04>  // b.tstop
  42353c:	ldr	x10, [x21]
  423540:	mov	x11, xzr
  423544:	ldr	w12, [x10, x11, lsl #2]
  423548:	cmp	w19, w12
  42354c:	b.eq	4235d0 <_obstack_memory_used@@Base+0xdb78>  // b.none
  423550:	add	x11, x11, #0x1
  423554:	cmp	x11, x9
  423558:	b.lt	423544 <_obstack_memory_used@@Base+0xdaec>  // b.tstop
  42355c:	ldr	x9, [x21, #72]
  423560:	cmp	x9, #0x1
  423564:	b.lt	423594 <_obstack_memory_used@@Base+0xdb3c>  // b.tstop
  423568:	mov	x22, xzr
  42356c:	ldr	x8, [x21, #24]
  423570:	mov	w0, w19
  423574:	ldr	x1, [x8, x22, lsl #3]
  423578:	bl	402720 <iswctype@plt>
  42357c:	cbnz	w0, 4235d0 <_obstack_memory_used@@Base+0xdb78>
  423580:	ldr	x8, [x21, #72]
  423584:	add	x22, x22, #0x1
  423588:	cmp	x22, x8
  42358c:	b.lt	42356c <_obstack_memory_used@@Base+0xdb14>  // b.tstop
  423590:	ldr	x8, [x21, #64]
  423594:	cmp	x8, #0x1
  423598:	b.lt	4235e0 <_obstack_memory_used@@Base+0xdb88>  // b.tstop
  42359c:	ldr	x9, [x21, #8]
  4235a0:	mov	x10, xzr
  4235a4:	b	4235b4 <_obstack_memory_used@@Base+0xdb5c>
  4235a8:	add	x10, x10, #0x1
  4235ac:	cmp	x10, x8
  4235b0:	b.ge	4235e0 <_obstack_memory_used@@Base+0xdb88>  // b.tcont
  4235b4:	ldr	w11, [x9, x10, lsl #2]
  4235b8:	cmp	w11, w19
  4235bc:	b.hi	4235a8 <_obstack_memory_used@@Base+0xdb50>  // b.pmore
  4235c0:	ldr	x11, [x21, #16]
  4235c4:	ldr	w11, [x11, x10, lsl #2]
  4235c8:	cmp	w19, w11
  4235cc:	b.hi	4235a8 <_obstack_memory_used@@Base+0xdb50>  // b.pmore
  4235d0:	mov	w0, w20
  4235d4:	ldrb	w8, [x21, #32]
  4235d8:	tbnz	w8, #0, 4235ec <_obstack_memory_used@@Base+0xdb94>
  4235dc:	b	4235f8 <_obstack_memory_used@@Base+0xdba0>
  4235e0:	mov	w0, wzr
  4235e4:	ldrb	w8, [x21, #32]
  4235e8:	tbz	w8, #0, 4235f8 <_obstack_memory_used@@Base+0xdba0>
  4235ec:	cmp	w0, #0x0
  4235f0:	b.le	423608 <_obstack_memory_used@@Base+0xdbb0>
  4235f4:	mov	w0, wzr
  4235f8:	ldp	x20, x19, [sp, #32]
  4235fc:	ldp	x22, x21, [sp, #16]
  423600:	ldp	x29, x30, [sp], #48
  423604:	ret
  423608:	cmp	w20, #0x1
  42360c:	csinc	w0, w20, wzr, gt
  423610:	b	4235f8 <_obstack_memory_used@@Base+0xdba0>
  423614:	mov	w19, wzr
  423618:	b	423530 <_obstack_memory_used@@Base+0xdad8>
  42361c:	ldr	x8, [x2, #8]
  423620:	ldrb	w10, [x8, x3]
  423624:	cmp	w10, #0xc2
  423628:	b.cc	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.lo, b.ul, b.last
  42362c:	ldr	x9, [x2, #88]
  423630:	add	x11, x3, #0x2
  423634:	cmp	x11, x9
  423638:	b.gt	4235f4 <_obstack_memory_used@@Base+0xdb9c>
  42363c:	add	x11, x3, x8
  423640:	ldrb	w11, [x11, #1]
  423644:	cmp	w10, #0xdf
  423648:	b.hi	423668 <_obstack_memory_used@@Base+0xdc10>  // b.pmore
  42364c:	sxtb	w8, w11
  423650:	cmp	w11, #0xbf
  423654:	mov	w9, #0xffffffff            	// #-1
  423658:	ccmp	w8, w9, #0x0, ls  // ls = plast
  42365c:	mov	w8, #0x2                   	// #2
  423660:	csel	w0, wzr, w8, gt
  423664:	b	4235f8 <_obstack_memory_used@@Base+0xdba0>
  423668:	cmp	w10, #0xef
  42366c:	b.hi	423688 <_obstack_memory_used@@Base+0xdc30>  // b.pmore
  423670:	cmp	w10, #0xe0
  423674:	mov	w10, #0x3                   	// #3
  423678:	b.ne	4236e4 <_obstack_memory_used@@Base+0xdc8c>  // b.any
  42367c:	cmp	w11, #0xa0
  423680:	b.cc	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.lo, b.ul, b.last
  423684:	b	4236e4 <_obstack_memory_used@@Base+0xdc8c>
  423688:	cmp	w10, #0xf7
  42368c:	b.hi	4236a8 <_obstack_memory_used@@Base+0xdc50>  // b.pmore
  423690:	cmp	w10, #0xf0
  423694:	mov	w10, #0x4                   	// #4
  423698:	b.ne	4236e4 <_obstack_memory_used@@Base+0xdc8c>  // b.any
  42369c:	cmp	w11, #0x90
  4236a0:	b.cc	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.lo, b.ul, b.last
  4236a4:	b	4236e4 <_obstack_memory_used@@Base+0xdc8c>
  4236a8:	cmp	w10, #0xfb
  4236ac:	b.hi	4236c8 <_obstack_memory_used@@Base+0xdc70>  // b.pmore
  4236b0:	cmp	w10, #0xf8
  4236b4:	mov	w10, #0x5                   	// #5
  4236b8:	b.ne	4236e4 <_obstack_memory_used@@Base+0xdc8c>  // b.any
  4236bc:	cmp	w11, #0x88
  4236c0:	b.cc	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.lo, b.ul, b.last
  4236c4:	b	4236e4 <_obstack_memory_used@@Base+0xdc8c>
  4236c8:	cmp	w10, #0xfd
  4236cc:	b.hi	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.pmore
  4236d0:	cmp	w10, #0xfc
  4236d4:	mov	w10, #0x6                   	// #6
  4236d8:	b.ne	4236e4 <_obstack_memory_used@@Base+0xdc8c>  // b.any
  4236dc:	cmp	w11, #0x84
  4236e0:	b.cc	4235f4 <_obstack_memory_used@@Base+0xdb9c>  // b.lo, b.ul, b.last
  4236e4:	add	x11, x10, x3
  4236e8:	cmp	x11, x9
  4236ec:	b.gt	4235f4 <_obstack_memory_used@@Base+0xdb9c>
  4236f0:	add	x8, x3, x8
  4236f4:	sub	x9, x10, #0x1
  4236f8:	add	x8, x8, #0x1
  4236fc:	ldrb	w11, [x8]
  423700:	mov	w0, wzr
  423704:	sxtb	w12, w11
  423708:	tbz	w12, #31, 4235f8 <_obstack_memory_used@@Base+0xdba0>
  42370c:	cmp	w11, #0xbf
  423710:	b.hi	4235f8 <_obstack_memory_used@@Base+0xdba0>  // b.pmore
  423714:	subs	x9, x9, #0x1
  423718:	add	x8, x8, #0x1
  42371c:	b.ne	4236fc <_obstack_memory_used@@Base+0xdca4>  // b.any
  423720:	mov	w0, w10
  423724:	b	4235f8 <_obstack_memory_used@@Base+0xdba0>
  423728:	sub	sp, sp, #0x30
  42372c:	stp	x29, x30, [sp, #16]
  423730:	ldr	w10, [x1, #8]
  423734:	str	x19, [sp, #32]
  423738:	add	x29, sp, #0x10
  42373c:	and	w8, w10, #0xff
  423740:	sub	w11, w8, #0x1
  423744:	cmp	w11, #0x6
  423748:	mov	w8, wzr
  42374c:	b.hi	423898 <_obstack_memory_used@@Base+0xde40>  // b.pmore
  423750:	ldr	x9, [x0, #8]
  423754:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x115a8>
  423758:	add	x12, x12, #0xbc8
  42375c:	ldrb	w9, [x9, x2]
  423760:	adr	x13, 423770 <_obstack_memory_used@@Base+0xdd18>
  423764:	ldrb	w14, [x12, x11]
  423768:	add	x13, x13, x14, lsl #2
  42376c:	br	x13
  423770:	ldrb	w8, [x1]
  423774:	cmp	w8, w9
  423778:	b.eq	4237cc <_obstack_memory_used@@Base+0xdd74>  // b.none
  42377c:	b	423894 <_obstack_memory_used@@Base+0xde3c>
  423780:	ldr	x8, [x1]
  423784:	lsr	x11, x9, #3
  423788:	and	x11, x11, #0x18
  42378c:	ldr	x8, [x8, x11]
  423790:	lsr	x8, x8, x9
  423794:	tbnz	w8, #0, 4237cc <_obstack_memory_used@@Base+0xdd74>
  423798:	b	423894 <_obstack_memory_used@@Base+0xde3c>
  42379c:	sxtb	w8, w9
  4237a0:	tbnz	w8, #31, 423894 <_obstack_memory_used@@Base+0xde3c>
  4237a4:	cbz	w9, 4237c0 <_obstack_memory_used@@Base+0xdd68>
  4237a8:	cmp	w9, #0xa
  4237ac:	b.ne	4237cc <_obstack_memory_used@@Base+0xdd74>  // b.any
  4237b0:	ldr	x8, [x0, #152]
  4237b4:	ldrb	w8, [x8, #216]
  4237b8:	tbnz	w8, #6, 4237cc <_obstack_memory_used@@Base+0xdd74>
  4237bc:	b	423894 <_obstack_memory_used@@Base+0xde3c>
  4237c0:	ldr	x8, [x0, #152]
  4237c4:	ldrb	w8, [x8, #216]
  4237c8:	tbnz	w8, #7, 423894 <_obstack_memory_used@@Base+0xde3c>
  4237cc:	tst	w10, #0x3ff00
  4237d0:	b.eq	423814 <_obstack_memory_used@@Base+0xddbc>  // b.none
  4237d4:	tbnz	x2, #63, 42380c <_obstack_memory_used@@Base+0xddb4>
  4237d8:	ldr	x8, [x0, #88]
  4237dc:	cmp	x8, x2
  4237e0:	b.eq	4238c0 <_obstack_memory_used@@Base+0xde68>  // b.none
  4237e4:	ldr	w8, [x0, #144]
  4237e8:	cmp	w8, #0x2
  4237ec:	b.lt	42381c <_obstack_memory_used@@Base+0xddc4>  // b.tstop
  4237f0:	ldr	x9, [x0, #16]
  4237f4:	ldr	w8, [x9, x2, lsl #2]
  4237f8:	cmn	w8, #0x1
  4237fc:	b.ne	423840 <_obstack_memory_used@@Base+0xdde8>  // b.any
  423800:	sub	x2, x2, #0x1
  423804:	cmn	x2, #0x1
  423808:	b.ne	4237f4 <_obstack_memory_used@@Base+0xdd9c>  // b.any
  42380c:	ldr	w11, [x0, #112]
  423810:	b	423870 <_obstack_memory_used@@Base+0xde18>
  423814:	mov	w8, #0x1                   	// #1
  423818:	b	423898 <_obstack_memory_used@@Base+0xde40>
  42381c:	ldr	x8, [x0, #128]
  423820:	lsr	x11, x9, #3
  423824:	and	x11, x11, #0x18
  423828:	ldr	x8, [x8, x11]
  42382c:	lsr	x8, x8, x9
  423830:	tbz	w8, #0, 423864 <_obstack_memory_used@@Base+0xde0c>
  423834:	mov	w12, wzr
  423838:	mov	w11, #0x1                   	// #1
  42383c:	b	423880 <_obstack_memory_used@@Base+0xde28>
  423840:	ldrb	w9, [x0, #142]
  423844:	cbnz	w9, 4238d4 <_obstack_memory_used@@Base+0xde7c>
  423848:	cmp	w8, #0xa
  42384c:	b.ne	42386c <_obstack_memory_used@@Base+0xde14>  // b.any
  423850:	ldrb	w8, [x0, #141]
  423854:	cmp	w8, #0x0
  423858:	cset	w8, ne  // ne = any
  42385c:	lsl	w11, w8, #1
  423860:	b	423870 <_obstack_memory_used@@Base+0xde18>
  423864:	cmp	w9, #0xa
  423868:	b.eq	423850 <_obstack_memory_used@@Base+0xddf8>  // b.none
  42386c:	mov	w11, wzr
  423870:	tst	w11, #0x1
  423874:	cset	w12, eq  // eq = none
  423878:	tbz	w10, #10, 423880 <_obstack_memory_used@@Base+0xde28>
  42387c:	tbz	w11, #0, 423894 <_obstack_memory_used@@Base+0xde3c>
  423880:	ldr	w8, [x1, #8]
  423884:	tbnz	w12, #0, 42388c <_obstack_memory_used@@Base+0xde34>
  423888:	tbnz	w8, #11, 423894 <_obstack_memory_used@@Base+0xde3c>
  42388c:	tbnz	w11, #1, 4238ac <_obstack_memory_used@@Base+0xde54>
  423890:	tbz	w8, #13, 4238ac <_obstack_memory_used@@Base+0xde54>
  423894:	mov	w8, wzr
  423898:	mov	w0, w8
  42389c:	ldr	x19, [sp, #32]
  4238a0:	ldp	x29, x30, [sp, #16]
  4238a4:	add	sp, sp, #0x30
  4238a8:	ret
  4238ac:	tst	w8, #0x8000
  4238b0:	cset	w8, eq  // eq = none
  4238b4:	and	w9, w11, #0x8
  4238b8:	orr	w0, w8, w9, lsr #3
  4238bc:	b	42389c <_obstack_memory_used@@Base+0xde44>
  4238c0:	ldr	w8, [x0, #160]
  4238c4:	mov	w9, #0xa                   	// #10
  4238c8:	and	w8, w8, #0x2
  4238cc:	eor	w11, w8, w9
  4238d0:	b	423870 <_obstack_memory_used@@Base+0xde18>
  4238d4:	str	x0, [sp]
  4238d8:	mov	w0, w8
  4238dc:	stur	w10, [x29, #-4]
  4238e0:	str	x1, [x29, #24]
  4238e4:	mov	w19, w8
  4238e8:	bl	402b10 <iswalnum@plt>
  4238ec:	mov	w12, wzr
  4238f0:	cmp	w19, #0x5f
  4238f4:	mov	w11, #0x1                   	// #1
  4238f8:	b.eq	423918 <_obstack_memory_used@@Base+0xdec0>  // b.none
  4238fc:	mov	w9, w0
  423900:	ldr	x1, [x29, #24]
  423904:	ldr	x0, [sp]
  423908:	ldur	w10, [x29, #-4]
  42390c:	mov	w8, w19
  423910:	cbz	w9, 423848 <_obstack_memory_used@@Base+0xddf0>
  423914:	b	423880 <_obstack_memory_used@@Base+0xde28>
  423918:	ldr	x1, [x29, #24]
  42391c:	b	423880 <_obstack_memory_used@@Base+0xde28>
  423920:	sub	sp, sp, #0xa0
  423924:	stp	x29, x30, [sp, #64]
  423928:	stp	x28, x27, [sp, #80]
  42392c:	stp	x26, x25, [sp, #96]
  423930:	stp	x24, x23, [sp, #112]
  423934:	stp	x22, x21, [sp, #128]
  423938:	stp	x20, x19, [sp, #144]
  42393c:	ldp	x22, x21, [x1, #16]
  423940:	mov	w8, #0x1                   	// #1
  423944:	mov	x20, x0
  423948:	dup	v0.2d, x8
  42394c:	mov	w0, #0x8                   	// #8
  423950:	add	x29, sp, #0x40
  423954:	mov	x19, x1
  423958:	str	q0, [sp, #32]
  42395c:	bl	402730 <malloc@plt>
  423960:	str	x0, [sp, #48]
  423964:	cbz	x0, 423cac <_obstack_memory_used@@Base+0xe254>
  423968:	str	x22, [x0]
  42396c:	add	x3, sp, #0x20
  423970:	mov	x0, x20
  423974:	mov	x1, x19
  423978:	mov	x2, x21
  42397c:	bl	423cc0 <_obstack_memory_used@@Base+0xe268>
  423980:	cbnz	w0, 423ca4 <_obstack_memory_used@@Base+0xe24c>
  423984:	add	x8, x19, #0x20
  423988:	str	x8, [sp, #24]
  42398c:	mov	w8, #0x1                   	// #1
  423990:	mov	w10, wzr
  423994:	dup	v0.2d, x8
  423998:	str	q0, [sp]
  42399c:	b	4239bc <_obstack_memory_used@@Base+0xdf64>
  4239a0:	add	x3, sp, #0x20
  4239a4:	mov	x0, x20
  4239a8:	mov	x1, x19
  4239ac:	mov	x2, x21
  4239b0:	bl	423cc0 <_obstack_memory_used@@Base+0xe268>
  4239b4:	ldr	w10, [sp, #20]
  4239b8:	cbnz	w0, 423ca4 <_obstack_memory_used@@Base+0xe24c>
  4239bc:	mov	x26, x21
  4239c0:	subs	x21, x21, #0x1
  4239c4:	b.lt	423c4c <_obstack_memory_used@@Base+0xe1f4>  // b.tstop
  4239c8:	ldr	x0, [x19]
  4239cc:	ldr	w9, [x20, #224]
  4239d0:	ldr	x8, [x0, x26, lsl #3]
  4239d4:	cmp	x8, #0x0
  4239d8:	csinc	w10, wzr, w10, ne  // ne = any
  4239dc:	cmp	w10, w9
  4239e0:	b.gt	423c5c <_obstack_memory_used@@Base+0xe204>
  4239e4:	str	xzr, [sp, #40]
  4239e8:	ldr	x8, [x20, #184]
  4239ec:	str	w10, [sp, #20]
  4239f0:	ldr	x27, [x8, x21, lsl #3]
  4239f4:	cbz	x27, 4239a0 <_obstack_memory_used@@Base+0xdf48>
  4239f8:	ldr	x8, [x27, #40]
  4239fc:	cmp	x8, #0x1
  423a00:	b.lt	4239a0 <_obstack_memory_used@@Base+0xdf48>  // b.tstop
  423a04:	ldr	x28, [x20, #152]
  423a08:	mov	x22, xzr
  423a0c:	b	423a44 <_obstack_memory_used@@Base+0xdfec>
  423a10:	ldr	x9, [sp, #32]
  423a14:	cbz	x9, 423b98 <_obstack_memory_used@@Base+0xe140>
  423a18:	ldr	x8, [sp, #40]
  423a1c:	cbnz	x8, 423bb8 <_obstack_memory_used@@Base+0xe160>
  423a20:	ldr	x8, [sp, #48]
  423a24:	str	x23, [x8]
  423a28:	ldr	x8, [sp, #40]
  423a2c:	add	x8, x8, #0x1
  423a30:	str	x8, [sp, #40]
  423a34:	ldr	x8, [x27, #40]
  423a38:	add	x22, x22, #0x1
  423a3c:	cmp	x22, x8
  423a40:	b.ge	4239a0 <_obstack_memory_used@@Base+0xdf48>  // b.tcont
  423a44:	ldr	x8, [x27, #48]
  423a48:	ldr	x23, [x8, x22, lsl #3]
  423a4c:	ldr	x8, [x28]
  423a50:	add	x8, x8, x23, lsl #4
  423a54:	ldrb	w8, [x8, #10]
  423a58:	tbnz	w8, #4, 423ad4 <_obstack_memory_used@@Base+0xe07c>
  423a5c:	ldr	x8, [x28]
  423a60:	mov	x0, x20
  423a64:	mov	x2, x21
  423a68:	add	x1, x8, x23, lsl #4
  423a6c:	bl	423728 <_obstack_memory_used@@Base+0xdcd0>
  423a70:	tbz	w0, #0, 423a34 <_obstack_memory_used@@Base+0xdfdc>
  423a74:	ldr	x8, [x19]
  423a78:	ldr	x9, [x8, x26, lsl #3]
  423a7c:	cbz	x9, 423a34 <_obstack_memory_used@@Base+0xdfdc>
  423a80:	ldr	x8, [x9, #16]
  423a84:	subs	x10, x8, #0x1
  423a88:	b.lt	423a34 <_obstack_memory_used@@Base+0xdfdc>  // b.tstop
  423a8c:	ldr	x8, [x28, #24]
  423a90:	ldr	x9, [x9, #24]
  423a94:	mov	x11, xzr
  423a98:	ldr	x8, [x8, x23, lsl #3]
  423a9c:	b.eq	423ac0 <_obstack_memory_used@@Base+0xe068>  // b.none
  423aa0:	add	x12, x11, x10
  423aa4:	lsr	x12, x12, #1
  423aa8:	ldr	x13, [x9, x12, lsl #3]
  423aac:	cmp	x13, x8
  423ab0:	csinc	x11, x11, x12, ge  // ge = tcont
  423ab4:	csel	x10, x10, x12, lt  // lt = tstop
  423ab8:	cmp	x11, x10
  423abc:	b.cc	423aa0 <_obstack_memory_used@@Base+0xe048>  // b.lo, b.ul, b.last
  423ac0:	ldr	x9, [x9, x11, lsl #3]
  423ac4:	cmp	x9, x8
  423ac8:	b.ne	423a34 <_obstack_memory_used@@Base+0xdfdc>  // b.any
  423acc:	mov	w0, #0x1                   	// #1
  423ad0:	b	423b68 <_obstack_memory_used@@Base+0xe110>
  423ad4:	ldr	x24, [x20, #152]
  423ad8:	ldr	x25, [x19, #24]
  423adc:	mov	x1, x23
  423ae0:	mov	x2, x20
  423ae4:	mov	x0, x24
  423ae8:	mov	x3, x21
  423aec:	bl	423410 <_obstack_memory_used@@Base+0xd9b8>
  423af0:	cmp	w0, #0x1
  423af4:	b.lt	423b64 <_obstack_memory_used@@Base+0xe10c>  // b.tstop
  423af8:	add	x8, x21, w0, uxtw
  423afc:	cmp	x8, x25
  423b00:	b.gt	423b68 <_obstack_memory_used@@Base+0xe110>
  423b04:	ldr	x9, [x19]
  423b08:	ldr	x9, [x9, x8, lsl #3]
  423b0c:	cbz	x9, 423a5c <_obstack_memory_used@@Base+0xe004>
  423b10:	ldr	x8, [x9, #16]
  423b14:	subs	x10, x8, #0x1
  423b18:	b.lt	423a5c <_obstack_memory_used@@Base+0xe004>  // b.tstop
  423b1c:	ldr	x8, [x24, #24]
  423b20:	ldr	x9, [x9, #24]
  423b24:	mov	x11, xzr
  423b28:	ldr	x8, [x8, x23, lsl #3]
  423b2c:	b.eq	423b50 <_obstack_memory_used@@Base+0xe0f8>  // b.none
  423b30:	add	x12, x11, x10
  423b34:	lsr	x12, x12, #1
  423b38:	ldr	x13, [x9, x12, lsl #3]
  423b3c:	cmp	x13, x8
  423b40:	csinc	x11, x11, x12, ge  // ge = tcont
  423b44:	csel	x10, x10, x12, lt  // lt = tstop
  423b48:	cmp	x11, x10
  423b4c:	b.cc	423b30 <_obstack_memory_used@@Base+0xe0d8>  // b.lo, b.ul, b.last
  423b50:	cbz	w0, 423a5c <_obstack_memory_used@@Base+0xe004>
  423b54:	ldr	x9, [x9, x11, lsl #3]
  423b58:	cmp	x9, x8
  423b5c:	b.eq	423b68 <_obstack_memory_used@@Base+0xe110>  // b.none
  423b60:	b	423a5c <_obstack_memory_used@@Base+0xe004>
  423b64:	cbz	w0, 423a5c <_obstack_memory_used@@Base+0xe004>
  423b68:	ldr	x8, [x19, #40]
  423b6c:	cbz	x8, 423a10 <_obstack_memory_used@@Base+0xdfb8>
  423b70:	ldr	x8, [x28, #24]
  423b74:	ldr	x1, [sp, #24]
  423b78:	add	x3, x21, w0, sxtw
  423b7c:	mov	x0, x20
  423b80:	ldr	x2, [x8, x23, lsl #3]
  423b84:	mov	x4, x23
  423b88:	mov	x5, x21
  423b8c:	bl	424ad4 <_obstack_memory_used@@Base+0xf07c>
  423b90:	tbz	w0, #0, 423a10 <_obstack_memory_used@@Base+0xdfb8>
  423b94:	b	423a34 <_obstack_memory_used@@Base+0xdfdc>
  423b98:	ldr	q0, [sp]
  423b9c:	mov	w0, #0x8                   	// #8
  423ba0:	str	q0, [sp, #32]
  423ba4:	bl	402730 <malloc@plt>
  423ba8:	str	x0, [sp, #48]
  423bac:	cbz	x0, 423c98 <_obstack_memory_used@@Base+0xe240>
  423bb0:	str	x23, [x0]
  423bb4:	b	423a34 <_obstack_memory_used@@Base+0xdfdc>
  423bb8:	cmp	x9, x8
  423bbc:	b.ne	423be4 <_obstack_memory_used@@Base+0xe18c>  // b.any
  423bc0:	ldr	x0, [sp, #48]
  423bc4:	lsl	x8, x9, #1
  423bc8:	lsl	x1, x9, #4
  423bcc:	str	x8, [sp, #32]
  423bd0:	bl	402870 <realloc@plt>
  423bd4:	cbz	x0, 423cb8 <_obstack_memory_used@@Base+0xe260>
  423bd8:	ldr	x8, [sp, #40]
  423bdc:	str	x0, [sp, #48]
  423be0:	b	423be8 <_obstack_memory_used@@Base+0xe190>
  423be4:	ldr	x0, [sp, #48]
  423be8:	ldr	x9, [x0]
  423bec:	cmp	x9, x23
  423bf0:	b.le	423c1c <_obstack_memory_used@@Base+0xe1c4>
  423bf4:	cmp	x8, #0x1
  423bf8:	b.lt	423c44 <_obstack_memory_used@@Base+0xe1ec>  // b.tstop
  423bfc:	mov	x9, x8
  423c00:	add	x10, x0, x9, lsl #3
  423c04:	ldur	x11, [x10, #-8]
  423c08:	subs	x8, x9, #0x1
  423c0c:	mov	x9, x8
  423c10:	str	x11, [x10]
  423c14:	b.gt	423c00 <_obstack_memory_used@@Base+0xe1a8>
  423c18:	b	423c44 <_obstack_memory_used@@Base+0xe1ec>
  423c1c:	add	x9, x0, x8, lsl #3
  423c20:	ldur	x9, [x9, #-8]
  423c24:	cmp	x9, x23
  423c28:	b.le	423c44 <_obstack_memory_used@@Base+0xe1ec>
  423c2c:	add	x10, x0, x8, lsl #3
  423c30:	str	x9, [x10]
  423c34:	ldur	x9, [x10, #-16]
  423c38:	sub	x8, x8, #0x1
  423c3c:	cmp	x9, x23
  423c40:	b.gt	423c2c <_obstack_memory_used@@Base+0xe1d4>
  423c44:	str	x23, [x0, x8, lsl #3]
  423c48:	b	423a28 <_obstack_memory_used@@Base+0xdfd0>
  423c4c:	mov	w23, wzr
  423c50:	ldr	x0, [sp, #48]
  423c54:	bl	402a10 <free@plt>
  423c58:	b	423c74 <_obstack_memory_used@@Base+0xe21c>
  423c5c:	lsl	x2, x26, #3
  423c60:	mov	w1, wzr
  423c64:	bl	402800 <memset@plt>
  423c68:	ldr	x0, [sp, #48]
  423c6c:	bl	402a10 <free@plt>
  423c70:	mov	w23, wzr
  423c74:	mov	w0, w23
  423c78:	ldp	x20, x19, [sp, #144]
  423c7c:	ldp	x22, x21, [sp, #128]
  423c80:	ldp	x24, x23, [sp, #112]
  423c84:	ldp	x26, x25, [sp, #96]
  423c88:	ldp	x28, x27, [sp, #80]
  423c8c:	ldp	x29, x30, [sp, #64]
  423c90:	add	sp, sp, #0xa0
  423c94:	ret
  423c98:	stp	xzr, xzr, [sp, #32]
  423c9c:	mov	w23, #0xc                   	// #12
  423ca0:	b	423c50 <_obstack_memory_used@@Base+0xe1f8>
  423ca4:	mov	w23, w0
  423ca8:	b	423c50 <_obstack_memory_used@@Base+0xe1f8>
  423cac:	stp	xzr, xzr, [sp, #32]
  423cb0:	mov	w23, #0xc                   	// #12
  423cb4:	b	423c74 <_obstack_memory_used@@Base+0xe21c>
  423cb8:	mov	w23, #0xc                   	// #12
  423cbc:	b	423c50 <_obstack_memory_used@@Base+0xe1f8>
  423cc0:	sub	sp, sp, #0x140
  423cc4:	stp	x29, x30, [sp, #224]
  423cc8:	stp	x28, x27, [sp, #240]
  423ccc:	stp	x26, x25, [sp, #256]
  423cd0:	stp	x24, x23, [sp, #272]
  423cd4:	stp	x22, x21, [sp, #288]
  423cd8:	stp	x20, x19, [sp, #304]
  423cdc:	add	x29, sp, #0xe0
  423ce0:	ldr	x24, [x0, #152]
  423ce4:	stur	wzr, [x29, #-100]
  423ce8:	ldr	x8, [x0, #184]
  423cec:	mov	x19, x2
  423cf0:	mov	x20, x1
  423cf4:	mov	x25, x0
  423cf8:	ldr	x21, [x8, x2, lsl #3]
  423cfc:	ldr	x8, [x3, #8]
  423d00:	add	x9, x21, #0x8
  423d04:	cmp	x21, #0x0
  423d08:	csel	x28, xzr, x9, eq  // eq = none
  423d0c:	cbz	x8, 424044 <_obstack_memory_used@@Base+0xe5ec>
  423d10:	mov	x23, x3
  423d14:	cbz	x21, 424058 <_obstack_memory_used@@Base+0xe600>
  423d18:	sub	x0, x29, #0x60
  423d1c:	mov	x1, x24
  423d20:	mov	x2, x23
  423d24:	stur	wzr, [x29, #-96]
  423d28:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  423d2c:	ldur	w27, [x29, #-96]
  423d30:	cbnz	w27, 4245c4 <_obstack_memory_used@@Base+0xeb6c>
  423d34:	str	x25, [sp, #112]
  423d38:	mov	x25, x0
  423d3c:	ldr	x8, [x25, #56]!
  423d40:	mov	x26, x0
  423d44:	cbnz	x8, 423dbc <_obstack_memory_used@@Base+0xe364>
  423d48:	ldr	x8, [x23, #8]
  423d4c:	lsl	x0, x8, #3
  423d50:	stp	x8, xzr, [x26, #56]
  423d54:	bl	402730 <malloc@plt>
  423d58:	cmp	x0, #0x0
  423d5c:	mov	w27, #0xc                   	// #12
  423d60:	csel	w8, w27, wzr, eq  // eq = none
  423d64:	str	x0, [x26, #72]
  423d68:	stur	w8, [x29, #-96]
  423d6c:	cbz	x0, 4245c4 <_obstack_memory_used@@Base+0xeb6c>
  423d70:	ldr	x8, [x23, #8]
  423d74:	cmp	x8, #0x1
  423d78:	b.lt	423dbc <_obstack_memory_used@@Base+0xe364>  // b.tstop
  423d7c:	mov	x26, x21
  423d80:	mov	x21, xzr
  423d84:	mov	w22, #0x18                  	// #24
  423d88:	ldr	x8, [x23, #16]
  423d8c:	ldr	x9, [x24, #56]
  423d90:	mov	x0, x25
  423d94:	ldr	x8, [x8, x21, lsl #3]
  423d98:	madd	x1, x8, x22, x9
  423d9c:	bl	41f43c <_obstack_memory_used@@Base+0x99e4>
  423da0:	cbnz	w0, 4245bc <_obstack_memory_used@@Base+0xeb64>
  423da4:	ldr	x8, [x23, #8]
  423da8:	add	x21, x21, #0x1
  423dac:	cmp	x21, x8
  423db0:	b.lt	423d88 <_obstack_memory_used@@Base+0xe330>  // b.tstop
  423db4:	mov	x21, x26
  423db8:	stur	wzr, [x29, #-96]
  423dbc:	mov	x0, x23
  423dc0:	mov	x1, x28
  423dc4:	mov	x2, x25
  423dc8:	bl	4245f4 <_obstack_memory_used@@Base+0xeb9c>
  423dcc:	stur	w0, [x29, #-100]
  423dd0:	cbnz	w0, 4245d4 <_obstack_memory_used@@Base+0xeb7c>
  423dd4:	ldr	x8, [x20, #40]
  423dd8:	ldr	x25, [sp, #112]
  423ddc:	cbz	x8, 424058 <_obstack_memory_used@@Base+0xe600>
  423de0:	cmp	x8, #0x1
  423de4:	str	x21, [sp, #104]
  423de8:	b.lt	424050 <_obstack_memory_used@@Base+0xe5f8>  // b.tstop
  423dec:	ldr	x8, [sp, #112]
  423df0:	mov	x22, xzr
  423df4:	mov	w14, #0x18                  	// #24
  423df8:	ldr	x25, [x8, #216]
  423dfc:	b	423e10 <_obstack_memory_used@@Base+0xe3b8>
  423e00:	ldr	x8, [x20, #40]
  423e04:	add	x22, x22, #0x1
  423e08:	cmp	x22, x8
  423e0c:	b.ge	424050 <_obstack_memory_used@@Base+0xe5f8>  // b.tcont
  423e10:	ldr	x8, [x20, #48]
  423e14:	mov	w9, #0x28                  	// #40
  423e18:	ldr	x8, [x8, x22, lsl #3]
  423e1c:	madd	x9, x8, x9, x25
  423e20:	ldr	x9, [x9, #16]
  423e24:	cmp	x9, x19
  423e28:	b.ge	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tcont
  423e2c:	mov	w9, #0x28                  	// #40
  423e30:	madd	x9, x8, x9, x25
  423e34:	ldr	x9, [x9, #8]
  423e38:	cmp	x9, x19
  423e3c:	b.lt	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tstop
  423e40:	mov	w9, #0x28                  	// #40
  423e44:	madd	x8, x8, x9, x25
  423e48:	ldr	x10, [x8]
  423e4c:	ldr	x9, [x24]
  423e50:	ldr	x11, [x8, #24]
  423e54:	lsl	x8, x10, #4
  423e58:	ldr	x21, [x9, x8]
  423e5c:	ldr	x8, [x23, #8]
  423e60:	cmp	x11, x19
  423e64:	b.ne	423ecc <_obstack_memory_used@@Base+0xe474>  // b.any
  423e68:	cmp	x8, #0x1
  423e6c:	b.lt	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tstop
  423e70:	ldr	x10, [x23, #16]
  423e74:	mov	x26, #0xffffffffffffffff    	// #-1
  423e78:	mov	x1, #0xffffffffffffffff    	// #-1
  423e7c:	b	423e9c <_obstack_memory_used@@Base+0xe444>
  423e80:	lsl	x12, x11, #4
  423e84:	ldr	x12, [x9, x12]
  423e88:	cmp	x21, x12
  423e8c:	csel	x26, x11, x26, eq  // eq = none
  423e90:	subs	x8, x8, #0x1
  423e94:	add	x10, x10, #0x8
  423e98:	b.eq	423f38 <_obstack_memory_used@@Base+0xe4e0>  // b.none
  423e9c:	ldr	x11, [x10]
  423ea0:	add	x12, x9, x11, lsl #4
  423ea4:	ldrb	w12, [x12, #8]
  423ea8:	cmp	w12, #0x9
  423eac:	b.eq	423e80 <_obstack_memory_used@@Base+0xe428>  // b.none
  423eb0:	cmp	w12, #0x8
  423eb4:	b.ne	423e90 <_obstack_memory_used@@Base+0xe438>  // b.any
  423eb8:	lsl	x12, x11, #4
  423ebc:	ldr	x12, [x9, x12]
  423ec0:	cmp	x21, x12
  423ec4:	csel	x1, x11, x1, eq  // eq = none
  423ec8:	b	423e90 <_obstack_memory_used@@Base+0xe438>
  423ecc:	cmp	x8, #0x1
  423ed0:	b.lt	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tstop
  423ed4:	mov	x26, xzr
  423ed8:	ldr	x10, [x23, #16]
  423edc:	ldr	x1, [x10, x26, lsl #3]
  423ee0:	add	x10, x9, x1, lsl #4
  423ee4:	ldr	w10, [x10, #8]
  423ee8:	and	w10, w10, #0xfe
  423eec:	orr	w10, w10, #0x1
  423ef0:	cmp	w10, #0x9
  423ef4:	b.ne	423f24 <_obstack_memory_used@@Base+0xe4cc>  // b.any
  423ef8:	lsl	x10, x1, #4
  423efc:	ldr	x9, [x9, x10]
  423f00:	cmp	x21, x9
  423f04:	b.ne	423f24 <_obstack_memory_used@@Base+0xe4cc>  // b.any
  423f08:	mov	x0, x24
  423f0c:	mov	x2, x23
  423f10:	mov	x3, x28
  423f14:	bl	4247bc <_obstack_memory_used@@Base+0xed64>
  423f18:	cbnz	w0, 424590 <_obstack_memory_used@@Base+0xeb38>
  423f1c:	ldr	x8, [x23, #8]
  423f20:	mov	w14, #0x18                  	// #24
  423f24:	add	x26, x26, #0x1
  423f28:	cmp	x26, x8
  423f2c:	b.ge	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tcont
  423f30:	ldr	x9, [x24]
  423f34:	b	423ed8 <_obstack_memory_used@@Base+0xe480>
  423f38:	tbnz	x1, #63, 423f54 <_obstack_memory_used@@Base+0xe4fc>
  423f3c:	mov	x0, x24
  423f40:	mov	x2, x23
  423f44:	mov	x3, x28
  423f48:	bl	4247bc <_obstack_memory_used@@Base+0xed64>
  423f4c:	mov	w14, #0x18                  	// #24
  423f50:	cbnz	w0, 424590 <_obstack_memory_used@@Base+0xeb38>
  423f54:	tbnz	x26, #63, 423e00 <_obstack_memory_used@@Base+0xe3a8>
  423f58:	ldr	x8, [x23, #8]
  423f5c:	cmp	x8, #0x1
  423f60:	b.lt	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tstop
  423f64:	mov	x21, xzr
  423f68:	b	423f98 <_obstack_memory_used@@Base+0xe540>
  423f6c:	mov	x0, x24
  423f70:	mov	x2, x23
  423f74:	mov	x3, x28
  423f78:	bl	4247bc <_obstack_memory_used@@Base+0xed64>
  423f7c:	cbnz	w0, 424590 <_obstack_memory_used@@Base+0xeb38>
  423f80:	ldr	x8, [x23, #8]
  423f84:	sub	x21, x21, #0x1
  423f88:	mov	w14, #0x18                  	// #24
  423f8c:	add	x21, x21, #0x1
  423f90:	cmp	x21, x8
  423f94:	b.ge	423e00 <_obstack_memory_used@@Base+0xe3a8>  // b.tcont
  423f98:	ldr	x9, [x23, #16]
  423f9c:	ldr	x1, [x9, x21, lsl #3]
  423fa0:	ldr	x9, [x24, #56]
  423fa4:	madd	x10, x1, x14, x9
  423fa8:	ldr	x10, [x10, #8]
  423fac:	subs	x10, x10, #0x1
  423fb0:	b.lt	423ff0 <_obstack_memory_used@@Base+0xe598>  // b.tstop
  423fb4:	madd	x9, x1, x14, x9
  423fb8:	ldr	x9, [x9, #16]
  423fbc:	mov	x11, xzr
  423fc0:	b.eq	423fe4 <_obstack_memory_used@@Base+0xe58c>  // b.none
  423fc4:	add	x12, x11, x10
  423fc8:	lsr	x12, x12, #1
  423fcc:	ldr	x13, [x9, x12, lsl #3]
  423fd0:	cmp	x13, x26
  423fd4:	csinc	x11, x11, x12, ge  // ge = tcont
  423fd8:	csel	x10, x10, x12, lt  // lt = tstop
  423fdc:	cmp	x11, x10
  423fe0:	b.cc	423fc4 <_obstack_memory_used@@Base+0xe56c>  // b.lo, b.ul, b.last
  423fe4:	ldr	x9, [x9, x11, lsl #3]
  423fe8:	cmp	x9, x26
  423fec:	b.eq	423f8c <_obstack_memory_used@@Base+0xe534>  // b.none
  423ff0:	ldr	x9, [x24, #48]
  423ff4:	madd	x10, x1, x14, x9
  423ff8:	ldr	x10, [x10, #8]
  423ffc:	subs	x10, x10, #0x1
  424000:	b.lt	423f6c <_obstack_memory_used@@Base+0xe514>  // b.tstop
  424004:	madd	x9, x1, x14, x9
  424008:	ldr	x9, [x9, #16]
  42400c:	mov	x11, xzr
  424010:	b.eq	424034 <_obstack_memory_used@@Base+0xe5dc>  // b.none
  424014:	add	x12, x11, x10
  424018:	lsr	x12, x12, #1
  42401c:	ldr	x13, [x9, x12, lsl #3]
  424020:	cmp	x13, x26
  424024:	csinc	x11, x11, x12, ge  // ge = tcont
  424028:	csel	x10, x10, x12, lt  // lt = tstop
  42402c:	cmp	x11, x10
  424030:	b.cc	424014 <_obstack_memory_used@@Base+0xe5bc>  // b.lo, b.ul, b.last
  424034:	ldr	x9, [x9, x11, lsl #3]
  424038:	cmp	x9, x26
  42403c:	b.ne	423f6c <_obstack_memory_used@@Base+0xe514>  // b.any
  424040:	b	423f8c <_obstack_memory_used@@Base+0xe534>
  424044:	ldr	x8, [x20]
  424048:	str	xzr, [x8, x19, lsl #3]
  42404c:	b	424078 <_obstack_memory_used@@Base+0xe620>
  424050:	ldp	x21, x25, [sp, #104]
  424054:	stur	wzr, [x29, #-100]
  424058:	sub	x0, x29, #0x64
  42405c:	mov	x1, x24
  424060:	mov	x2, x23
  424064:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  424068:	ldr	x8, [x20]
  42406c:	str	x0, [x8, x19, lsl #3]
  424070:	ldur	w27, [x29, #-100]
  424074:	cbnz	w27, 42456c <_obstack_memory_used@@Base+0xeb14>
  424078:	cbz	x21, 424568 <_obstack_memory_used@@Base+0xeb10>
  42407c:	ldr	x8, [x25, #184]
  424080:	ldr	x8, [x8, x19, lsl #3]
  424084:	ldrb	w8, [x8, #104]
  424088:	tbz	w8, #6, 424568 <_obstack_memory_used@@Base+0xeb10>
  42408c:	ldr	x8, [x25, #200]
  424090:	ldr	x24, [x25, #152]
  424094:	cmp	x8, #0x1
  424098:	b.lt	4240e4 <_obstack_memory_used@@Base+0xe68c>  // b.tstop
  42409c:	ldr	x9, [x25, #216]
  4240a0:	mov	x21, xzr
  4240a4:	mov	w10, #0x28                  	// #40
  4240a8:	mov	x11, x8
  4240ac:	add	x12, x11, x21
  4240b0:	cmp	x12, #0x0
  4240b4:	cinc	x12, x12, lt  // lt = tstop
  4240b8:	asr	x12, x12, #1
  4240bc:	madd	x13, x12, x10, x9
  4240c0:	ldr	x13, [x13, #8]
  4240c4:	cmp	x13, x19
  4240c8:	csel	x11, x11, x12, lt  // lt = tstop
  4240cc:	csinc	x21, x21, x12, ge  // ge = tcont
  4240d0:	cmp	x21, x11
  4240d4:	b.lt	4240ac <_obstack_memory_used@@Base+0xe654>  // b.tstop
  4240d8:	cmp	x21, x8
  4240dc:	b.lt	4240f0 <_obstack_memory_used@@Base+0xe698>  // b.tstop
  4240e0:	b	424564 <_obstack_memory_used@@Base+0xeb0c>
  4240e4:	mov	x21, xzr
  4240e8:	cmp	x21, x8
  4240ec:	b.ge	424564 <_obstack_memory_used@@Base+0xeb0c>  // b.tcont
  4240f0:	cmn	x21, #0x1
  4240f4:	b.eq	424564 <_obstack_memory_used@@Base+0xeb0c>  // b.none
  4240f8:	ldr	x8, [x25, #216]
  4240fc:	mov	w9, #0x28                  	// #40
  424100:	madd	x8, x21, x9, x8
  424104:	ldr	x8, [x8, #8]
  424108:	cmp	x8, x19
  42410c:	b.ne	424564 <_obstack_memory_used@@Base+0xeb0c>  // b.any
  424110:	stur	xzr, [x29, #-96]
  424114:	ldr	x8, [x28, #8]
  424118:	cmp	x8, #0x0
  42411c:	b.le	424564 <_obstack_memory_used@@Base+0xeb0c>
  424120:	add	x8, x20, #0x20
  424124:	stp	x8, x28, [sp, #88]
  424128:	sub	x8, x29, #0x60
  42412c:	add	x9, x19, #0x1
  424130:	str	x9, [sp, #40]
  424134:	mov	w9, #0x1                   	// #1
  424138:	add	x8, x8, #0x20
  42413c:	mov	x23, xzr
  424140:	str	x8, [sp, #8]
  424144:	dup	v0.2d, x9
  424148:	stp	xzr, x25, [sp, #104]
  42414c:	str	q0, [sp, #16]
  424150:	b	424168 <_obstack_memory_used@@Base+0xe710>
  424154:	ldr	x28, [sp, #96]
  424158:	add	x23, x23, #0x1
  42415c:	ldr	x8, [x28, #8]
  424160:	cmp	x23, x8
  424164:	b.ge	42459c <_obstack_memory_used@@Base+0xeb44>  // b.tcont
  424168:	ldr	x8, [x28, #16]
  42416c:	ldr	x9, [x20, #16]
  424170:	ldr	x26, [x8, x23, lsl #3]
  424174:	ldr	x8, [x24]
  424178:	cmp	x26, x9
  42417c:	add	x8, x8, x26, lsl #4
  424180:	ldrb	w8, [x8, #8]
  424184:	b.ne	4241a0 <_obstack_memory_used@@Base+0xe748>  // b.any
  424188:	cmp	w8, #0x4
  42418c:	b.ne	424154 <_obstack_memory_used@@Base+0xe6fc>  // b.any
  424190:	ldr	x8, [x20, #24]
  424194:	cmp	x8, x19
  424198:	b.ne	4241a8 <_obstack_memory_used@@Base+0xe750>  // b.any
  42419c:	b	424154 <_obstack_memory_used@@Base+0xe6fc>
  4241a0:	cmp	w8, #0x4
  4241a4:	b.ne	424154 <_obstack_memory_used@@Base+0xe6fc>  // b.any
  4241a8:	ldr	x8, [x25, #216]
  4241ac:	mov	w9, #0x28                  	// #40
  4241b0:	mov	x28, x21
  4241b4:	madd	x27, x21, x9, x8
  4241b8:	b	4241dc <_obstack_memory_used@@Base+0xe784>
  4241bc:	mov	x22, x12
  4241c0:	ldr	x8, [x25, #216]
  4241c4:	mov	w9, #0x28                  	// #40
  4241c8:	madd	x27, x28, x9, x8
  4241cc:	ldrb	w8, [x27, #32]
  4241d0:	add	x27, x27, #0x28
  4241d4:	add	x28, x28, #0x1
  4241d8:	cbz	w8, 424154 <_obstack_memory_used@@Base+0xe6fc>
  4241dc:	ldr	x8, [x27]
  4241e0:	cmp	x8, x26
  4241e4:	b.ne	4241cc <_obstack_memory_used@@Base+0xe774>  // b.any
  4241e8:	ldp	x9, x8, [x27, #16]
  4241ec:	subs	x8, x8, x9
  4241f0:	add	x5, x8, x19
  4241f4:	b.eq	424204 <_obstack_memory_used@@Base+0xe7ac>  // b.none
  4241f8:	ldr	x8, [x24, #24]
  4241fc:	add	x8, x8, x26, lsl #3
  424200:	b	424214 <_obstack_memory_used@@Base+0xe7bc>
  424204:	ldr	x8, [x24, #40]
  424208:	mov	w9, #0x18                  	// #24
  42420c:	madd	x8, x26, x9, x8
  424210:	ldr	x8, [x8, #16]
  424214:	ldr	x9, [x20, #24]
  424218:	cmp	x5, x9
  42421c:	b.gt	4241cc <_obstack_memory_used@@Base+0xe774>
  424220:	ldr	x9, [x20]
  424224:	ldr	x10, [x9, x5, lsl #3]
  424228:	cbz	x10, 4241cc <_obstack_memory_used@@Base+0xe774>
  42422c:	ldr	x9, [x10, #16]
  424230:	subs	x9, x9, #0x1
  424234:	b.lt	4241cc <_obstack_memory_used@@Base+0xe774>  // b.tstop
  424238:	ldr	x4, [x8]
  42423c:	ldr	x8, [x10, #24]
  424240:	mov	x10, xzr
  424244:	b.eq	424268 <_obstack_memory_used@@Base+0xe810>  // b.none
  424248:	add	x11, x10, x9
  42424c:	lsr	x11, x11, #1
  424250:	ldr	x12, [x8, x11, lsl #3]
  424254:	cmp	x12, x4
  424258:	csinc	x10, x10, x11, ge  // ge = tcont
  42425c:	csel	x9, x9, x11, lt  // lt = tstop
  424260:	cmp	x10, x9
  424264:	b.cc	424248 <_obstack_memory_used@@Base+0xe7f0>  // b.lo, b.ul, b.last
  424268:	ldr	x8, [x8, x10, lsl #3]
  42426c:	cmp	x8, x4
  424270:	b.ne	4241cc <_obstack_memory_used@@Base+0xe774>  // b.any
  424274:	ldr	x1, [sp, #88]
  424278:	mov	x0, x25
  42427c:	mov	x2, x26
  424280:	mov	x3, x19
  424284:	bl	424ad4 <_obstack_memory_used@@Base+0xf07c>
  424288:	tbnz	w0, #0, 4241cc <_obstack_memory_used@@Base+0xe774>
  42428c:	ldr	x8, [sp, #104]
  424290:	cbz	x8, 4242b0 <_obstack_memory_used@@Base+0xe858>
  424294:	ldr	x8, [sp, #56]
  424298:	stp	x26, x19, [x29, #-80]
  42429c:	cbz	x8, 424364 <_obstack_memory_used@@Base+0xe90c>
  4242a0:	cbnz	x22, 424554 <_obstack_memory_used@@Base+0xeafc>
  4242a4:	ldr	x8, [sp, #64]
  4242a8:	str	x28, [x8]
  4242ac:	b	4243c4 <_obstack_memory_used@@Base+0xe96c>
  4242b0:	ldp	x22, x8, [x20, #40]
  4242b4:	ldp	q1, q0, [x20, #16]
  4242b8:	ldr	q2, [x20]
  4242bc:	cmp	x22, #0x1
  4242c0:	stp	q1, q0, [x29, #-80]
  4242c4:	stur	q2, [x29, #-96]
  4242c8:	stp	x22, x8, [x29, #-56]
  4242cc:	b.lt	424354 <_obstack_memory_used@@Base+0xe8fc>  // b.tstop
  4242d0:	lsl	x0, x22, #3
  4242d4:	stur	x22, [x29, #-64]
  4242d8:	str	x0, [sp, #104]
  4242dc:	bl	402730 <malloc@plt>
  4242e0:	stur	x0, [x29, #-48]
  4242e4:	cbz	x0, 4245dc <_obstack_memory_used@@Base+0xeb84>
  4242e8:	ldr	x1, [x20, #48]
  4242ec:	ldr	x2, [sp, #104]
  4242f0:	mov	x27, x0
  4242f4:	bl	402580 <memcpy@plt>
  4242f8:	stp	x26, x19, [x29, #-80]
  4242fc:	mov	x0, x27
  424300:	lsl	x8, x22, #1
  424304:	lsl	x1, x22, #4
  424308:	str	x8, [sp, #56]
  42430c:	stur	x8, [x29, #-64]
  424310:	bl	402870 <realloc@plt>
  424314:	cbz	x0, 4245ec <_obstack_memory_used@@Base+0xeb94>
  424318:	ldur	x22, [x29, #-56]
  42431c:	stur	x0, [x29, #-48]
  424320:	ldr	x8, [x0]
  424324:	cmp	x8, x28
  424328:	b.le	424394 <_obstack_memory_used@@Base+0xe93c>
  42432c:	cmp	x22, #0x1
  424330:	b.lt	4243bc <_obstack_memory_used@@Base+0xe964>  // b.tstop
  424334:	mov	x8, x22
  424338:	add	x9, x0, x8, lsl #3
  42433c:	ldur	x10, [x9, #-8]
  424340:	subs	x22, x8, #0x1
  424344:	mov	x8, x22
  424348:	str	x10, [x9]
  42434c:	b.gt	424338 <_obstack_memory_used@@Base+0xe8e0>
  424350:	b	4243bc <_obstack_memory_used@@Base+0xe964>
  424354:	ldr	x8, [sp, #8]
  424358:	stp	xzr, xzr, [x8]
  42435c:	str	xzr, [x8, #16]
  424360:	stp	x26, x19, [x29, #-80]
  424364:	ldr	q0, [sp, #16]
  424368:	mov	w0, #0x8                   	// #8
  42436c:	stur	q0, [x29, #-64]
  424370:	bl	402730 <malloc@plt>
  424374:	stur	x0, [x29, #-48]
  424378:	cbz	x0, 4245dc <_obstack_memory_used@@Base+0xeb84>
  42437c:	mov	w8, #0x1                   	// #1
  424380:	stp	x0, x8, [sp, #64]
  424384:	mov	w8, #0x1                   	// #1
  424388:	str	x28, [x0]
  42438c:	str	x8, [sp, #56]
  424390:	b	4243d4 <_obstack_memory_used@@Base+0xe97c>
  424394:	add	x8, x0, x22, lsl #3
  424398:	ldur	x8, [x8, #-8]
  42439c:	cmp	x8, x28
  4243a0:	b.le	4243bc <_obstack_memory_used@@Base+0xe964>
  4243a4:	add	x9, x0, x22, lsl #3
  4243a8:	str	x8, [x9]
  4243ac:	ldur	x8, [x9, #-16]
  4243b0:	sub	x22, x22, #0x1
  4243b4:	cmp	x8, x28
  4243b8:	b.gt	4243a4 <_obstack_memory_used@@Base+0xe94c>
  4243bc:	str	x0, [sp, #64]
  4243c0:	str	x28, [x0, x22, lsl #3]
  4243c4:	ldur	x8, [x29, #-56]
  4243c8:	add	x8, x8, #0x1
  4243cc:	str	x8, [sp, #72]
  4243d0:	stur	x8, [x29, #-56]
  4243d4:	ldur	x8, [x29, #-96]
  4243d8:	sub	x1, x29, #0x60
  4243dc:	mov	x0, x25
  4243e0:	str	x8, [sp, #104]
  4243e4:	ldr	x8, [x8, x19, lsl #3]
  4243e8:	str	x8, [sp, #80]
  4243ec:	bl	423920 <_obstack_memory_used@@Base+0xdec8>
  4243f0:	cbnz	w0, 4245cc <_obstack_memory_used@@Base+0xeb74>
  4243f4:	ldr	x22, [x20, #8]
  4243f8:	cbz	x22, 42447c <_obstack_memory_used@@Base+0xea24>
  4243fc:	str	x23, [sp, #48]
  424400:	tbnz	x19, #63, 424474 <_obstack_memory_used@@Base+0xea1c>
  424404:	ldr	x23, [sp, #104]
  424408:	ldr	x25, [sp, #40]
  42440c:	b	424424 <_obstack_memory_used@@Base+0xe9cc>
  424410:	str	x8, [x22]
  424414:	subs	x25, x25, #0x1
  424418:	add	x23, x23, #0x8
  42441c:	add	x22, x22, #0x8
  424420:	b.eq	424474 <_obstack_memory_used@@Base+0xea1c>  // b.none
  424424:	ldr	x9, [x22]
  424428:	ldr	x8, [x23]
  42442c:	cbz	x9, 424410 <_obstack_memory_used@@Base+0xe9b8>
  424430:	cbz	x8, 424414 <_obstack_memory_used@@Base+0xe9bc>
  424434:	add	x1, x9, #0x8
  424438:	add	x2, x8, #0x8
  42443c:	sub	x0, x29, #0x28
  424440:	bl	421e00 <_obstack_memory_used@@Base+0xc3a8>
  424444:	stur	w0, [x29, #-12]
  424448:	cbnz	w0, 4245cc <_obstack_memory_used@@Base+0xeb74>
  42444c:	sub	x0, x29, #0xc
  424450:	sub	x2, x29, #0x28
  424454:	mov	x1, x24
  424458:	bl	423188 <_obstack_memory_used@@Base+0xd730>
  42445c:	str	x0, [x22]
  424460:	ldur	x0, [x29, #-24]
  424464:	bl	402a10 <free@plt>
  424468:	ldur	w27, [x29, #-12]
  42446c:	cbz	w27, 424414 <_obstack_memory_used@@Base+0xe9bc>
  424470:	b	4245a0 <_obstack_memory_used@@Base+0xeb48>
  424474:	ldr	x25, [sp, #112]
  424478:	ldr	x23, [sp, #48]
  42447c:	ldp	x12, x9, [sp, #72]
  424480:	ldr	x8, [sp, #104]
  424484:	subs	x22, x12, #0x1
  424488:	str	x9, [x8, x19, lsl #3]
  42448c:	b.lt	4241bc <_obstack_memory_used@@Base+0xe764>  // b.tstop
  424490:	mov	x8, xzr
  424494:	b.eq	4244c4 <_obstack_memory_used@@Base+0xea6c>  // b.none
  424498:	ldr	x13, [sp, #64]
  42449c:	mov	x9, x22
  4244a0:	add	x10, x8, x9
  4244a4:	lsr	x10, x10, #1
  4244a8:	ldr	x11, [x13, x10, lsl #3]
  4244ac:	cmp	x11, x28
  4244b0:	csinc	x8, x8, x10, ge  // ge = tcont
  4244b4:	csel	x9, x9, x10, lt  // lt = tstop
  4244b8:	cmp	x8, x9
  4244bc:	b.cc	4244a0 <_obstack_memory_used@@Base+0xea48>  // b.lo, b.ul, b.last
  4244c0:	b	4244c8 <_obstack_memory_used@@Base+0xea70>
  4244c4:	ldr	x13, [sp, #64]
  4244c8:	ldr	x9, [x13, x8, lsl #3]
  4244cc:	cmp	x9, x28
  4244d0:	csinv	x9, x8, xzr, eq  // eq = none
  4244d4:	tbnz	x9, #63, 4241bc <_obstack_memory_used@@Base+0xe764>
  4244d8:	cmp	x12, x9
  4244dc:	b.le	4241bc <_obstack_memory_used@@Base+0xe764>
  4244e0:	cmp	x22, x9
  4244e4:	stur	x22, [x29, #-56]
  4244e8:	b.le	4241c0 <_obstack_memory_used@@Base+0xe768>
  4244ec:	add	x9, x8, #0x1
  4244f0:	cmp	x22, x9
  4244f4:	csinc	x9, x22, x8, gt
  4244f8:	sub	x9, x9, x8
  4244fc:	cmp	x9, #0x4
  424500:	b.cc	424538 <_obstack_memory_used@@Base+0xeae0>  // b.lo, b.ul, b.last
  424504:	and	x10, x9, #0xfffffffffffffffc
  424508:	add	x11, x13, x8, lsl #3
  42450c:	add	x8, x8, x10
  424510:	add	x11, x11, #0x10
  424514:	mov	x12, x10
  424518:	ldur	q0, [x11, #-8]
  42451c:	ldur	q1, [x11, #8]
  424520:	subs	x12, x12, #0x4
  424524:	stp	q0, q1, [x11, #-16]
  424528:	add	x11, x11, #0x20
  42452c:	b.ne	424518 <_obstack_memory_used@@Base+0xeac0>  // b.any
  424530:	cmp	x9, x10
  424534:	b.eq	4241c0 <_obstack_memory_used@@Base+0xe768>  // b.none
  424538:	add	x9, x13, x8, lsl #3
  42453c:	ldr	x10, [x9, #8]
  424540:	add	x8, x8, #0x1
  424544:	cmp	x8, x22
  424548:	str	x10, [x9]
  42454c:	b.lt	424538 <_obstack_memory_used@@Base+0xeae0>  // b.tstop
  424550:	b	4241c0 <_obstack_memory_used@@Base+0xe768>
  424554:	ldp	x8, x0, [sp, #56]
  424558:	cmp	x8, x22
  42455c:	b.eq	424300 <_obstack_memory_used@@Base+0xe8a8>  // b.none
  424560:	b	424320 <_obstack_memory_used@@Base+0xe8c8>
  424564:	stur	wzr, [x29, #-100]
  424568:	mov	w27, wzr
  42456c:	mov	w0, w27
  424570:	ldp	x20, x19, [sp, #304]
  424574:	ldp	x22, x21, [sp, #288]
  424578:	ldp	x24, x23, [sp, #272]
  42457c:	ldp	x26, x25, [sp, #256]
  424580:	ldp	x28, x27, [sp, #240]
  424584:	ldp	x29, x30, [sp, #224]
  424588:	add	sp, sp, #0x140
  42458c:	ret
  424590:	mov	w27, w0
  424594:	stur	w0, [x29, #-100]
  424598:	b	42456c <_obstack_memory_used@@Base+0xeb14>
  42459c:	mov	w27, wzr
  4245a0:	ldur	x8, [x29, #-96]
  4245a4:	cbz	x8, 4245b0 <_obstack_memory_used@@Base+0xeb58>
  4245a8:	ldur	x0, [x29, #-48]
  4245ac:	bl	402a10 <free@plt>
  4245b0:	stur	w27, [x29, #-100]
  4245b4:	cbz	w27, 424568 <_obstack_memory_used@@Base+0xeb10>
  4245b8:	b	42456c <_obstack_memory_used@@Base+0xeb14>
  4245bc:	mov	w27, #0xc                   	// #12
  4245c0:	stur	w0, [x29, #-96]
  4245c4:	stur	w27, [x29, #-100]
  4245c8:	b	42456c <_obstack_memory_used@@Base+0xeb14>
  4245cc:	mov	w27, w0
  4245d0:	b	4245a0 <_obstack_memory_used@@Base+0xeb48>
  4245d4:	mov	w27, w0
  4245d8:	b	42456c <_obstack_memory_used@@Base+0xeb14>
  4245dc:	ldr	x8, [sp, #8]
  4245e0:	mov	w27, #0xc                   	// #12
  4245e4:	stp	xzr, xzr, [x8]
  4245e8:	b	4245a0 <_obstack_memory_used@@Base+0xeb48>
  4245ec:	mov	w27, #0xc                   	// #12
  4245f0:	b	4245a0 <_obstack_memory_used@@Base+0xeb48>
  4245f4:	stp	x29, x30, [sp, #-48]!
  4245f8:	stp	x22, x21, [sp, #16]
  4245fc:	stp	x20, x19, [sp, #32]
  424600:	ldr	x9, [x1, #8]
  424604:	mov	x29, sp
  424608:	cbz	x9, 4247a0 <_obstack_memory_used@@Base+0xed48>
  42460c:	ldr	x10, [x2, #8]
  424610:	mov	x20, x2
  424614:	cbz	x10, 4247a0 <_obstack_memory_used@@Base+0xed48>
  424618:	ldp	x8, x13, [x0]
  42461c:	add	x11, x10, x9
  424620:	mov	x21, x1
  424624:	mov	x19, x0
  424628:	add	x12, x13, x11
  42462c:	cmp	x12, x8
  424630:	b.le	42465c <_obstack_memory_used@@Base+0xec04>
  424634:	ldr	x0, [x19, #16]
  424638:	add	x22, x8, x11
  42463c:	lsl	x1, x22, #3
  424640:	bl	402870 <realloc@plt>
  424644:	cbz	x0, 4247b4 <_obstack_memory_used@@Base+0xed5c>
  424648:	str	x0, [x19, #16]
  42464c:	str	x22, [x19]
  424650:	ldr	x13, [x19, #8]
  424654:	ldr	x9, [x21, #8]
  424658:	ldr	x10, [x20, #8]
  42465c:	ldr	x11, [x21, #16]
  424660:	ldr	x12, [x20, #16]
  424664:	add	x8, x9, x13
  424668:	add	x8, x8, x10
  42466c:	sub	x13, x13, #0x1
  424670:	sub	x9, x9, #0x1
  424674:	mov	x14, x10
  424678:	sub	x10, x14, #0x1
  42467c:	ldr	x16, [x12, x10, lsl #3]
  424680:	ldr	x15, [x11, x9, lsl #3]
  424684:	cmp	x15, x16
  424688:	b.eq	4246b0 <_obstack_memory_used@@Base+0xec58>  // b.none
  42468c:	b.lt	4246a0 <_obstack_memory_used@@Base+0xec48>  // b.tstop
  424690:	cmp	x9, #0x0
  424694:	sub	x9, x9, #0x1
  424698:	b.gt	424680 <_obstack_memory_used@@Base+0xec28>
  42469c:	b	424708 <_obstack_memory_used@@Base+0xecb0>
  4246a0:	cmp	x14, #0x2
  4246a4:	mov	x14, x10
  4246a8:	b.ge	424678 <_obstack_memory_used@@Base+0xec20>  // b.tcont
  4246ac:	b	424708 <_obstack_memory_used@@Base+0xecb0>
  4246b0:	tbnz	x13, #63, 4246d8 <_obstack_memory_used@@Base+0xec80>
  4246b4:	ldr	x17, [x19, #16]
  4246b8:	ldr	x16, [x17, x13, lsl #3]
  4246bc:	cmp	x16, x15
  4246c0:	b.le	4246e0 <_obstack_memory_used@@Base+0xec88>
  4246c4:	sub	x16, x13, #0x1
  4246c8:	cmp	x13, #0x0
  4246cc:	mov	x13, x16
  4246d0:	b.gt	4246b8 <_obstack_memory_used@@Base+0xec60>
  4246d4:	b	4246e8 <_obstack_memory_used@@Base+0xec90>
  4246d8:	mov	x16, x13
  4246dc:	b	4246e8 <_obstack_memory_used@@Base+0xec90>
  4246e0:	mov	x16, x13
  4246e4:	b.eq	4246f8 <_obstack_memory_used@@Base+0xeca0>  // b.none
  4246e8:	ldr	x13, [x19, #16]
  4246ec:	sub	x8, x8, #0x1
  4246f0:	str	x15, [x13, x8, lsl #3]
  4246f4:	mov	x13, x16
  4246f8:	cmp	x9, #0x1
  4246fc:	b.lt	424708 <_obstack_memory_used@@Base+0xecb0>  // b.tstop
  424700:	cmp	x14, #0x2
  424704:	b.ge	424670 <_obstack_memory_used@@Base+0xec18>  // b.tcont
  424708:	ldp	x12, x0, [x19, #8]
  42470c:	ldr	x13, [x21, #8]
  424710:	ldr	x14, [x20, #8]
  424714:	subs	x9, x12, #0x1
  424718:	add	x9, x9, x13
  42471c:	add	x10, x9, x14
  424720:	sub	x15, x10, x8
  424724:	add	x9, x15, #0x1
  424728:	subs	x11, x12, #0x1
  42472c:	add	x16, x9, x12
  424730:	str	x16, [x19, #8]
  424734:	b.lt	424790 <_obstack_memory_used@@Base+0xed38>  // b.tstop
  424738:	tbnz	x15, #63, 424790 <_obstack_memory_used@@Base+0xed38>
  42473c:	add	x12, x12, x14
  424740:	add	x12, x12, x13
  424744:	sub	x12, x12, x8
  424748:	add	x12, x0, x12, lsl #3
  42474c:	ldr	x14, [x0, x10, lsl #3]
  424750:	ldr	x13, [x0, x11, lsl #3]
  424754:	cmp	x14, x13
  424758:	b.gt	424774 <_obstack_memory_used@@Base+0xed1c>
  42475c:	sub	x14, x11, #0x1
  424760:	cmp	x11, #0x0
  424764:	str	x13, [x12, x11, lsl #3]
  424768:	mov	x11, x14
  42476c:	b.gt	42474c <_obstack_memory_used@@Base+0xecf4>
  424770:	b	424790 <_obstack_memory_used@@Base+0xed38>
  424774:	mov	x13, xzr
  424778:	sub	x10, x10, #0x1
  42477c:	sub	x9, x9, #0x1
  424780:	str	x14, [x12, x11, lsl #3]
  424784:	sub	x12, x12, #0x8
  424788:	cbnz	x9, 42474c <_obstack_memory_used@@Base+0xecf4>
  42478c:	b	424794 <_obstack_memory_used@@Base+0xed3c>
  424790:	mov	x13, x9
  424794:	add	x1, x0, x8, lsl #3
  424798:	lsl	x2, x13, #3
  42479c:	bl	402580 <memcpy@plt>
  4247a0:	mov	w0, wzr
  4247a4:	ldp	x20, x19, [sp, #32]
  4247a8:	ldp	x22, x21, [sp, #16]
  4247ac:	ldp	x29, x30, [sp], #48
  4247b0:	ret
  4247b4:	mov	w0, #0xc                   	// #12
  4247b8:	b	4247a4 <_obstack_memory_used@@Base+0xed4c>
  4247bc:	sub	sp, sp, #0x80
  4247c0:	stp	x29, x30, [sp, #32]
  4247c4:	stp	x28, x27, [sp, #48]
  4247c8:	stp	x26, x25, [sp, #64]
  4247cc:	stp	x24, x23, [sp, #80]
  4247d0:	stp	x22, x21, [sp, #96]
  4247d4:	stp	x20, x19, [sp, #112]
  4247d8:	ldr	x25, [x0, #56]
  4247dc:	mov	w8, #0x18                  	// #24
  4247e0:	stp	xzr, xzr, [sp, #8]
  4247e4:	str	xzr, [sp, #24]
  4247e8:	madd	x24, x1, x8, x25
  4247ec:	ldr	x8, [x24, #8]!
  4247f0:	add	x29, sp, #0x20
  4247f4:	cmp	x8, #0x1
  4247f8:	b.lt	424a98 <_obstack_memory_used@@Base+0xf040>  // b.tstop
  4247fc:	mov	w27, #0x18                  	// #24
  424800:	madd	x9, x1, x27, x25
  424804:	mov	x21, x3
  424808:	mov	x20, x1
  42480c:	mov	x22, x0
  424810:	mov	x19, x2
  424814:	mov	x26, xzr
  424818:	add	x28, x9, #0x10
  42481c:	b	42482c <_obstack_memory_used@@Base+0xedd4>
  424820:	add	x26, x26, #0x1
  424824:	cmp	x26, x8
  424828:	b.ge	4249a0 <_obstack_memory_used@@Base+0xef48>  // b.tcont
  42482c:	ldr	x11, [x28]
  424830:	ldr	x9, [x11, x26, lsl #3]
  424834:	cmp	x9, x20
  424838:	b.eq	424820 <_obstack_memory_used@@Base+0xedc8>  // b.none
  42483c:	ldr	x10, [x22]
  424840:	add	x10, x10, x9, lsl #4
  424844:	ldrb	w10, [x10, #8]
  424848:	tbz	w10, #3, 424820 <_obstack_memory_used@@Base+0xedc8>
  42484c:	ldr	x10, [x22, #40]
  424850:	madd	x12, x9, x27, x10
  424854:	ldp	x13, x10, [x12, #8]
  424858:	ldr	x12, [x10]
  42485c:	cmp	x13, #0x1
  424860:	b.le	424874 <_obstack_memory_used@@Base+0xee1c>
  424864:	ldr	x10, [x10, #8]
  424868:	subs	x13, x8, #0x1
  42486c:	b.ge	424880 <_obstack_memory_used@@Base+0xee28>  // b.tcont
  424870:	b	4248b4 <_obstack_memory_used@@Base+0xee5c>
  424874:	mov	x10, #0xffffffffffffffff    	// #-1
  424878:	subs	x13, x8, #0x1
  42487c:	b.lt	4248b4 <_obstack_memory_used@@Base+0xee5c>  // b.tstop
  424880:	mov	x14, xzr
  424884:	b.eq	4248a8 <_obstack_memory_used@@Base+0xee50>  // b.none
  424888:	add	x15, x14, x13
  42488c:	lsr	x15, x15, #1
  424890:	ldr	x16, [x11, x15, lsl #3]
  424894:	cmp	x16, x12
  424898:	csinc	x14, x14, x15, ge  // ge = tcont
  42489c:	csel	x13, x13, x15, lt  // lt = tstop
  4248a0:	cmp	x14, x13
  4248a4:	b.cc	424888 <_obstack_memory_used@@Base+0xee30>  // b.lo, b.ul, b.last
  4248a8:	ldr	x13, [x11, x14, lsl #3]
  4248ac:	cmp	x13, x12
  4248b0:	b.eq	4248f8 <_obstack_memory_used@@Base+0xeea0>  // b.none
  4248b4:	ldr	x13, [x19, #8]
  4248b8:	subs	x14, x13, #0x1
  4248bc:	b.lt	4248f8 <_obstack_memory_used@@Base+0xeea0>  // b.tstop
  4248c0:	ldr	x13, [x19, #16]
  4248c4:	mov	x15, xzr
  4248c8:	b.eq	4248ec <_obstack_memory_used@@Base+0xee94>  // b.none
  4248cc:	add	x16, x15, x14
  4248d0:	lsr	x16, x16, #1
  4248d4:	ldr	x17, [x13, x16, lsl #3]
  4248d8:	cmp	x17, x12
  4248dc:	csinc	x15, x15, x16, ge  // ge = tcont
  4248e0:	csel	x14, x14, x16, lt  // lt = tstop
  4248e4:	cmp	x15, x14
  4248e8:	b.cc	4248cc <_obstack_memory_used@@Base+0xee74>  // b.lo, b.ul, b.last
  4248ec:	ldr	x13, [x13, x15, lsl #3]
  4248f0:	cmp	x13, x12
  4248f4:	b.eq	424980 <_obstack_memory_used@@Base+0xef28>  // b.none
  4248f8:	cmp	x10, #0x1
  4248fc:	b.lt	424820 <_obstack_memory_used@@Base+0xedc8>  // b.tstop
  424900:	subs	x12, x8, #0x1
  424904:	b.lt	42493c <_obstack_memory_used@@Base+0xeee4>  // b.tstop
  424908:	mov	x13, xzr
  42490c:	b.eq	424930 <_obstack_memory_used@@Base+0xeed8>  // b.none
  424910:	add	x14, x13, x12
  424914:	lsr	x14, x14, #1
  424918:	ldr	x15, [x11, x14, lsl #3]
  42491c:	cmp	x15, x10
  424920:	csinc	x13, x13, x14, ge  // ge = tcont
  424924:	csel	x12, x12, x14, lt  // lt = tstop
  424928:	cmp	x13, x12
  42492c:	b.cc	424910 <_obstack_memory_used@@Base+0xeeb8>  // b.lo, b.ul, b.last
  424930:	ldr	x11, [x11, x13, lsl #3]
  424934:	cmp	x11, x10
  424938:	b.eq	424820 <_obstack_memory_used@@Base+0xedc8>  // b.none
  42493c:	ldr	x11, [x19, #8]
  424940:	subs	x12, x11, #0x1
  424944:	b.lt	424820 <_obstack_memory_used@@Base+0xedc8>  // b.tstop
  424948:	ldr	x11, [x19, #16]
  42494c:	mov	x13, xzr
  424950:	b.eq	424974 <_obstack_memory_used@@Base+0xef1c>  // b.none
  424954:	add	x14, x13, x12
  424958:	lsr	x14, x14, #1
  42495c:	ldr	x15, [x11, x14, lsl #3]
  424960:	cmp	x15, x10
  424964:	csinc	x13, x13, x14, ge  // ge = tcont
  424968:	csel	x12, x12, x14, lt  // lt = tstop
  42496c:	cmp	x13, x12
  424970:	b.cc	424954 <_obstack_memory_used@@Base+0xeefc>  // b.lo, b.ul, b.last
  424974:	ldr	x11, [x11, x13, lsl #3]
  424978:	cmp	x11, x10
  42497c:	b.ne	424820 <_obstack_memory_used@@Base+0xedc8>  // b.any
  424980:	ldr	x8, [x22, #56]
  424984:	add	x0, sp, #0x8
  424988:	mov	x1, x21
  42498c:	madd	x2, x9, x27, x8
  424990:	bl	4245f4 <_obstack_memory_used@@Base+0xeb9c>
  424994:	cbnz	w0, 424ac8 <_obstack_memory_used@@Base+0xf070>
  424998:	ldr	x8, [x24]
  42499c:	b	424820 <_obstack_memory_used@@Base+0xedc8>
  4249a0:	cmp	x8, #0x0
  4249a4:	b.le	424a98 <_obstack_memory_used@@Base+0xf040>
  4249a8:	mov	w9, #0x18                  	// #24
  4249ac:	madd	x9, x20, x9, x25
  4249b0:	ldp	x10, x0, [sp, #16]
  4249b4:	ldr	x9, [x9, #16]
  4249b8:	mov	x8, xzr
  4249bc:	sub	x11, x10, #0x1
  4249c0:	b	4249d4 <_obstack_memory_used@@Base+0xef7c>
  4249c4:	ldr	x12, [x24]
  4249c8:	add	x8, x8, #0x1
  4249cc:	cmp	x8, x12
  4249d0:	b.ge	424a9c <_obstack_memory_used@@Base+0xf044>  // b.tcont
  4249d4:	ldr	x12, [x9, x8, lsl #3]
  4249d8:	cmp	x10, #0x1
  4249dc:	b.lt	424a18 <_obstack_memory_used@@Base+0xefc0>  // b.tstop
  4249e0:	mov	x13, xzr
  4249e4:	cbz	x11, 424a0c <_obstack_memory_used@@Base+0xefb4>
  4249e8:	mov	x14, x11
  4249ec:	add	x15, x13, x14
  4249f0:	lsr	x15, x15, #1
  4249f4:	ldr	x16, [x0, x15, lsl #3]
  4249f8:	cmp	x16, x12
  4249fc:	csinc	x13, x13, x15, ge  // ge = tcont
  424a00:	csel	x14, x14, x15, lt  // lt = tstop
  424a04:	cmp	x13, x14
  424a08:	b.cc	4249ec <_obstack_memory_used@@Base+0xef94>  // b.lo, b.ul, b.last
  424a0c:	ldr	x13, [x0, x13, lsl #3]
  424a10:	cmp	x13, x12
  424a14:	b.eq	4249c4 <_obstack_memory_used@@Base+0xef6c>  // b.none
  424a18:	ldr	x16, [x19, #8]
  424a1c:	subs	x15, x16, #0x1
  424a20:	b.lt	4249c4 <_obstack_memory_used@@Base+0xef6c>  // b.tstop
  424a24:	ldr	x13, [x19, #16]
  424a28:	mov	x14, xzr
  424a2c:	b.eq	424a54 <_obstack_memory_used@@Base+0xeffc>  // b.none
  424a30:	mov	x17, x15
  424a34:	add	x18, x14, x17
  424a38:	lsr	x18, x18, #1
  424a3c:	ldr	x1, [x13, x18, lsl #3]
  424a40:	cmp	x1, x12
  424a44:	csinc	x14, x14, x18, ge  // ge = tcont
  424a48:	csel	x17, x17, x18, lt  // lt = tstop
  424a4c:	cmp	x14, x17
  424a50:	b.cc	424a34 <_obstack_memory_used@@Base+0xefdc>  // b.lo, b.ul, b.last
  424a54:	ldr	x17, [x13, x14, lsl #3]
  424a58:	cmp	x17, x12
  424a5c:	csinv	x12, x14, xzr, eq  // eq = none
  424a60:	tbnz	x12, #63, 4249c4 <_obstack_memory_used@@Base+0xef6c>
  424a64:	cmp	x16, x12
  424a68:	b.le	4249c4 <_obstack_memory_used@@Base+0xef6c>
  424a6c:	cmp	x15, x12
  424a70:	str	x15, [x19, #8]
  424a74:	b.le	4249c4 <_obstack_memory_used@@Base+0xef6c>
  424a78:	add	x12, x13, x14, lsl #3
  424a7c:	ldr	x15, [x12, #8]
  424a80:	add	x14, x14, #0x1
  424a84:	str	x15, [x12]
  424a88:	ldr	x12, [x19, #8]
  424a8c:	cmp	x14, x12
  424a90:	b.lt	424a78 <_obstack_memory_used@@Base+0xf020>  // b.tstop
  424a94:	b	4249c4 <_obstack_memory_used@@Base+0xef6c>
  424a98:	ldr	x0, [sp, #24]
  424a9c:	mov	w23, wzr
  424aa0:	bl	402a10 <free@plt>
  424aa4:	mov	w0, w23
  424aa8:	ldp	x20, x19, [sp, #112]
  424aac:	ldp	x22, x21, [sp, #96]
  424ab0:	ldp	x24, x23, [sp, #80]
  424ab4:	ldp	x26, x25, [sp, #64]
  424ab8:	ldp	x28, x27, [sp, #48]
  424abc:	ldp	x29, x30, [sp, #32]
  424ac0:	add	sp, sp, #0x80
  424ac4:	ret
  424ac8:	mov	w23, w0
  424acc:	ldr	x0, [sp, #24]
  424ad0:	b	424aa0 <_obstack_memory_used@@Base+0xf048>
  424ad4:	sub	sp, sp, #0x80
  424ad8:	stp	x29, x30, [sp, #32]
  424adc:	stp	x28, x27, [sp, #48]
  424ae0:	stp	x26, x25, [sp, #64]
  424ae4:	stp	x24, x23, [sp, #80]
  424ae8:	stp	x22, x21, [sp, #96]
  424aec:	stp	x20, x19, [sp, #112]
  424af0:	stp	x2, x4, [sp, #8]
  424af4:	ldr	x8, [x0, #200]
  424af8:	ldr	x9, [x0, #152]
  424afc:	add	x29, sp, #0x20
  424b00:	mov	x19, x5
  424b04:	mov	x21, x3
  424b08:	mov	x23, x0
  424b0c:	cmp	x8, #0x1
  424b10:	mov	x24, x1
  424b14:	mov	x25, xzr
  424b18:	stur	x9, [x29, #-8]
  424b1c:	b.lt	424b58 <_obstack_memory_used@@Base+0xf100>  // b.tstop
  424b20:	ldr	x9, [x23, #216]
  424b24:	mov	w10, #0x28                  	// #40
  424b28:	mov	x11, x8
  424b2c:	add	x12, x11, x25
  424b30:	cmp	x12, #0x0
  424b34:	cinc	x12, x12, lt  // lt = tstop
  424b38:	asr	x12, x12, #1
  424b3c:	madd	x13, x12, x10, x9
  424b40:	ldr	x13, [x13, #8]
  424b44:	cmp	x13, x21
  424b48:	csel	x11, x11, x12, lt  // lt = tstop
  424b4c:	csinc	x25, x25, x12, ge  // ge = tcont
  424b50:	cmp	x25, x11
  424b54:	b.lt	424b2c <_obstack_memory_used@@Base+0xf0d4>  // b.tstop
  424b58:	cmp	x25, x8
  424b5c:	b.ge	424b78 <_obstack_memory_used@@Base+0xf120>  // b.tcont
  424b60:	ldr	x9, [x23, #216]
  424b64:	mov	w10, #0x28                  	// #40
  424b68:	madd	x9, x25, x10, x9
  424b6c:	ldr	x9, [x9, #8]
  424b70:	cmp	x9, x21
  424b74:	b.eq	424b7c <_obstack_memory_used@@Base+0xf124>  // b.none
  424b78:	mov	x25, #0xffffffffffffffff    	// #-1
  424b7c:	cmp	x8, #0x1
  424b80:	b.lt	424bcc <_obstack_memory_used@@Base+0xf174>  // b.tstop
  424b84:	ldr	x9, [x23, #216]
  424b88:	mov	x26, xzr
  424b8c:	mov	w10, #0x28                  	// #40
  424b90:	mov	x11, x8
  424b94:	add	x12, x11, x26
  424b98:	cmp	x12, #0x0
  424b9c:	cinc	x12, x12, lt  // lt = tstop
  424ba0:	asr	x12, x12, #1
  424ba4:	madd	x13, x12, x10, x9
  424ba8:	ldr	x13, [x13, #8]
  424bac:	cmp	x13, x19
  424bb0:	csel	x11, x11, x12, lt  // lt = tstop
  424bb4:	csinc	x26, x26, x12, ge  // ge = tcont
  424bb8:	cmp	x26, x11
  424bbc:	b.lt	424b94 <_obstack_memory_used@@Base+0xf13c>  // b.tstop
  424bc0:	cmp	x26, x8
  424bc4:	b.lt	424bd8 <_obstack_memory_used@@Base+0xf180>  // b.tstop
  424bc8:	b	424bf0 <_obstack_memory_used@@Base+0xf198>
  424bcc:	mov	x26, xzr
  424bd0:	cmp	x26, x8
  424bd4:	b.ge	424bf0 <_obstack_memory_used@@Base+0xf198>  // b.tcont
  424bd8:	ldr	x8, [x23, #216]
  424bdc:	mov	w9, #0x28                  	// #40
  424be0:	madd	x8, x26, x9, x8
  424be4:	ldr	x8, [x8, #8]
  424be8:	cmp	x8, x19
  424bec:	b.eq	424bf4 <_obstack_memory_used@@Base+0xf19c>  // b.none
  424bf0:	mov	x26, #0xffffffffffffffff    	// #-1
  424bf4:	ldr	x8, [x24, #8]
  424bf8:	cmp	x8, #0x1
  424bfc:	b.lt	424d50 <_obstack_memory_used@@Base+0xf2f8>  // b.tstop
  424c00:	mov	x22, xzr
  424c04:	mov	w20, #0x28                  	// #40
  424c08:	b	424c28 <_obstack_memory_used@@Base+0xf1d0>
  424c0c:	mov	w0, #0xffffffff            	// #-1
  424c10:	cmp	w0, w28
  424c14:	b.ne	424d48 <_obstack_memory_used@@Base+0xf2f0>  // b.any
  424c18:	ldr	x8, [x24, #8]
  424c1c:	add	x22, x22, #0x1
  424c20:	cmp	x22, x8
  424c24:	b.ge	424d50 <_obstack_memory_used@@Base+0xf2f8>  // b.tcont
  424c28:	ldr	x8, [x24, #16]
  424c2c:	ldr	x9, [x23, #216]
  424c30:	ldur	x12, [x29, #-8]
  424c34:	ldr	x8, [x8, x22, lsl #3]
  424c38:	ldr	x12, [x12]
  424c3c:	madd	x10, x8, x20, x9
  424c40:	ldr	x11, [x10]
  424c44:	ldr	x10, [x10, #16]
  424c48:	lsl	x11, x11, #4
  424c4c:	ldr	x27, [x12, x11]
  424c50:	cmp	x10, x21
  424c54:	b.le	424c68 <_obstack_memory_used@@Base+0xf210>
  424c58:	mov	w28, #0xffffffff            	// #-1
  424c5c:	cmp	x10, x19
  424c60:	b.gt	424c0c <_obstack_memory_used@@Base+0xf1b4>
  424c64:	b	424ce4 <_obstack_memory_used@@Base+0xf28c>
  424c68:	madd	x11, x8, x20, x9
  424c6c:	ldr	x11, [x11, #24]
  424c70:	cmp	x11, x21
  424c74:	b.ge	424c88 <_obstack_memory_used@@Base+0xf230>  // b.tcont
  424c78:	mov	w28, #0x1                   	// #1
  424c7c:	cmp	x10, x19
  424c80:	b.gt	424c0c <_obstack_memory_used@@Base+0xf1b4>
  424c84:	b	424ce4 <_obstack_memory_used@@Base+0xf28c>
  424c88:	cmp	x10, x21
  424c8c:	cset	w1, eq  // eq = none
  424c90:	cmp	x11, x21
  424c94:	cset	w11, eq  // eq = none
  424c98:	bfi	w1, w11, #1, #1
  424c9c:	cbz	w1, 424cd8 <_obstack_memory_used@@Base+0xf280>
  424ca0:	ldr	x3, [sp, #8]
  424ca4:	mov	x0, x23
  424ca8:	mov	x2, x27
  424cac:	mov	x4, x25
  424cb0:	bl	424d74 <_obstack_memory_used@@Base+0xf31c>
  424cb4:	ldr	x8, [x24, #16]
  424cb8:	ldr	x9, [x23, #216]
  424cbc:	mov	w28, w0
  424cc0:	ldr	x8, [x8, x22, lsl #3]
  424cc4:	madd	x10, x8, x20, x9
  424cc8:	ldr	x10, [x10, #16]
  424ccc:	cmp	x10, x19
  424cd0:	b.le	424ce4 <_obstack_memory_used@@Base+0xf28c>
  424cd4:	b	424c0c <_obstack_memory_used@@Base+0xf1b4>
  424cd8:	mov	w28, wzr
  424cdc:	cmp	x10, x19
  424ce0:	b.gt	424c0c <_obstack_memory_used@@Base+0xf1b4>
  424ce4:	madd	x8, x8, x20, x9
  424ce8:	ldr	x8, [x8, #24]
  424cec:	cmp	x8, x19
  424cf0:	b.ge	424d04 <_obstack_memory_used@@Base+0xf2ac>  // b.tcont
  424cf4:	mov	w0, #0x1                   	// #1
  424cf8:	cmp	w0, w28
  424cfc:	b.eq	424c18 <_obstack_memory_used@@Base+0xf1c0>  // b.none
  424d00:	b	424d48 <_obstack_memory_used@@Base+0xf2f0>
  424d04:	cmp	x10, x19
  424d08:	cset	w1, eq  // eq = none
  424d0c:	cmp	x8, x19
  424d10:	cset	w8, eq  // eq = none
  424d14:	bfi	w1, w8, #1, #1
  424d18:	cbz	w1, 424d3c <_obstack_memory_used@@Base+0xf2e4>
  424d1c:	ldr	x3, [sp, #16]
  424d20:	mov	x0, x23
  424d24:	mov	x2, x27
  424d28:	mov	x4, x26
  424d2c:	bl	424d74 <_obstack_memory_used@@Base+0xf31c>
  424d30:	cmp	w0, w28
  424d34:	b.eq	424c18 <_obstack_memory_used@@Base+0xf1c0>  // b.none
  424d38:	b	424d48 <_obstack_memory_used@@Base+0xf2f0>
  424d3c:	mov	w0, wzr
  424d40:	cmp	w0, w28
  424d44:	b.eq	424c18 <_obstack_memory_used@@Base+0xf1c0>  // b.none
  424d48:	mov	w0, #0x1                   	// #1
  424d4c:	b	424d54 <_obstack_memory_used@@Base+0xf2fc>
  424d50:	mov	w0, wzr
  424d54:	ldp	x20, x19, [sp, #112]
  424d58:	ldp	x22, x21, [sp, #96]
  424d5c:	ldp	x24, x23, [sp, #80]
  424d60:	ldp	x26, x25, [sp, #64]
  424d64:	ldp	x28, x27, [sp, #48]
  424d68:	ldp	x29, x30, [sp, #32]
  424d6c:	add	sp, sp, #0x80
  424d70:	ret
  424d74:	sub	sp, sp, #0x80
  424d78:	stp	x29, x30, [sp, #32]
  424d7c:	stp	x28, x27, [sp, #48]
  424d80:	stp	x26, x25, [sp, #64]
  424d84:	stp	x24, x23, [sp, #80]
  424d88:	stp	x22, x21, [sp, #96]
  424d8c:	stp	x20, x19, [sp, #112]
  424d90:	ldr	x24, [x0, #152]
  424d94:	mov	w8, #0x18                  	// #24
  424d98:	mov	w23, w1
  424d9c:	add	x29, sp, #0x20
  424da0:	ldr	x9, [x24, #48]
  424da4:	madd	x13, x3, x8, x9
  424da8:	ldr	x8, [x13, #8]!
  424dac:	cmp	x8, #0x1
  424db0:	b.lt	424f28 <_obstack_memory_used@@Base+0xf4d0>  // b.tstop
  424db4:	mov	w12, #0x18                  	// #24
  424db8:	cmp	x2, #0x3f
  424dbc:	and	w10, w23, #0x2
  424dc0:	mov	w11, #0x1                   	// #1
  424dc4:	madd	x9, x3, x12, x9
  424dc8:	cset	w12, gt
  424dcc:	lsl	x11, x11, x2
  424dd0:	add	x25, x9, #0x10
  424dd4:	orr	w9, w12, w10, lsr #1
  424dd8:	mov	x19, x4
  424ddc:	mov	x20, x3
  424de0:	mov	x21, x2
  424de4:	mov	x22, x0
  424de8:	mov	x26, xzr
  424dec:	stur	w9, [x29, #-12]
  424df0:	stur	x11, [x29, #-8]
  424df4:	mvn	w9, w11
  424df8:	mov	w11, #0x28                  	// #40
  424dfc:	str	w9, [sp, #16]
  424e00:	str	x13, [sp, #8]
  424e04:	b	424e20 <_obstack_memory_used@@Base+0xf3c8>
  424e08:	ldr	x13, [sp, #8]
  424e0c:	mov	w11, #0x28                  	// #40
  424e10:	ldr	x8, [x13]
  424e14:	add	x26, x26, #0x1
  424e18:	cmp	x26, x8
  424e1c:	b.ge	424f28 <_obstack_memory_used@@Base+0xf4d0>  // b.tcont
  424e20:	ldr	x9, [x25]
  424e24:	ldr	x27, [x9, x26, lsl #3]
  424e28:	ldr	x9, [x24]
  424e2c:	add	x9, x9, x27, lsl #4
  424e30:	ldrb	w10, [x9, #8]
  424e34:	cmp	w10, #0x9
  424e38:	b.eq	424efc <_obstack_memory_used@@Base+0xf4a4>  // b.none
  424e3c:	cmp	w10, #0x8
  424e40:	b.eq	424f10 <_obstack_memory_used@@Base+0xf4b8>  // b.none
  424e44:	cmp	w10, #0x4
  424e48:	b.ne	424e14 <_obstack_memory_used@@Base+0xf3bc>  // b.any
  424e4c:	cmn	x19, #0x1
  424e50:	b.eq	424e14 <_obstack_memory_used@@Base+0xf3bc>  // b.none
  424e54:	ldr	x8, [x22, #216]
  424e58:	madd	x8, x19, x11, x8
  424e5c:	add	x28, x8, #0x22
  424e60:	b	424e80 <_obstack_memory_used@@Base+0xf428>
  424e64:	ldrh	w8, [x28]
  424e68:	ldr	w9, [sp, #16]
  424e6c:	and	w8, w8, w9
  424e70:	strh	w8, [x28]
  424e74:	ldurb	w8, [x28, #-2]
  424e78:	add	x28, x28, #0x28
  424e7c:	cbz	w8, 424e08 <_obstack_memory_used@@Base+0xf3b0>
  424e80:	ldur	x8, [x28, #-34]
  424e84:	cmp	x8, x27
  424e88:	b.ne	424e74 <_obstack_memory_used@@Base+0xf41c>  // b.any
  424e8c:	cmp	x21, #0x3f
  424e90:	b.gt	424ea4 <_obstack_memory_used@@Base+0xf44c>
  424e94:	ldrh	w8, [x28]
  424e98:	ldur	x9, [x29, #-8]
  424e9c:	tst	x9, x8
  424ea0:	b.eq	424e74 <_obstack_memory_used@@Base+0xf41c>  // b.none
  424ea4:	ldr	x8, [x24, #40]
  424ea8:	mov	w9, #0x18                  	// #24
  424eac:	madd	x8, x27, x9, x8
  424eb0:	ldr	x8, [x8, #16]
  424eb4:	ldr	x3, [x8]
  424eb8:	cmp	x3, x20
  424ebc:	b.eq	424f30 <_obstack_memory_used@@Base+0xf4d8>  // b.none
  424ec0:	mov	x0, x22
  424ec4:	mov	w1, w23
  424ec8:	mov	x2, x21
  424ecc:	mov	x4, x19
  424ed0:	bl	424d74 <_obstack_memory_used@@Base+0xf31c>
  424ed4:	cbz	w0, 424eec <_obstack_memory_used@@Base+0xf494>
  424ed8:	cmn	w0, #0x1
  424edc:	b.eq	424f3c <_obstack_memory_used@@Base+0xf4e4>  // b.none
  424ee0:	cmp	x21, #0x3f
  424ee4:	b.le	424e64 <_obstack_memory_used@@Base+0xf40c>
  424ee8:	b	424e74 <_obstack_memory_used@@Base+0xf41c>
  424eec:	ldur	w8, [x29, #-12]
  424ef0:	tbz	w8, #0, 424e64 <_obstack_memory_used@@Base+0xf40c>
  424ef4:	tbz	w23, #1, 424e74 <_obstack_memory_used@@Base+0xf41c>
  424ef8:	b	424f38 <_obstack_memory_used@@Base+0xf4e0>
  424efc:	tbz	w23, #1, 424e14 <_obstack_memory_used@@Base+0xf3bc>
  424f00:	ldr	x9, [x9]
  424f04:	cmp	x9, x21
  424f08:	b.ne	424e14 <_obstack_memory_used@@Base+0xf3bc>  // b.any
  424f0c:	b	424f38 <_obstack_memory_used@@Base+0xf4e0>
  424f10:	tbz	w23, #0, 424e14 <_obstack_memory_used@@Base+0xf3bc>
  424f14:	ldr	x9, [x9]
  424f18:	cmp	x9, x21
  424f1c:	b.ne	424e14 <_obstack_memory_used@@Base+0xf3bc>  // b.any
  424f20:	mov	w0, #0xffffffff            	// #-1
  424f24:	b	424f3c <_obstack_memory_used@@Base+0xf4e4>
  424f28:	ubfx	w0, w23, #1, #1
  424f2c:	b	424f3c <_obstack_memory_used@@Base+0xf4e4>
  424f30:	sbfx	w0, w23, #0, #1
  424f34:	b	424f3c <_obstack_memory_used@@Base+0xf4e4>
  424f38:	mov	w0, wzr
  424f3c:	ldp	x20, x19, [sp, #112]
  424f40:	ldp	x22, x21, [sp, #96]
  424f44:	ldp	x24, x23, [sp, #80]
  424f48:	ldp	x26, x25, [sp, #64]
  424f4c:	ldp	x28, x27, [sp, #48]
  424f50:	ldp	x29, x30, [sp, #32]
  424f54:	add	sp, sp, #0x80
  424f58:	ret
  424f5c:	sub	sp, sp, #0x40
  424f60:	stp	x29, x30, [sp, #16]
  424f64:	add	x29, sp, #0x10
  424f68:	add	x2, x29, #0x18
  424f6c:	mov	w1, wzr
  424f70:	str	x21, [sp, #32]
  424f74:	stp	x20, x19, [sp, #48]
  424f78:	mov	x19, x0
  424f7c:	bl	402a40 <acl_get_entry@plt>
  424f80:	cmp	w0, #0x1
  424f84:	b.lt	424fe0 <_obstack_memory_used@@Base+0xf588>  // b.tstop
  424f88:	mov	x21, #0x12                  	// #18
  424f8c:	mov	w20, #0x1                   	// #1
  424f90:	movk	x21, #0x1, lsl #32
  424f94:	ldr	x0, [x29, #24]
  424f98:	sub	x1, x29, #0x4
  424f9c:	bl	4027f0 <acl_get_tag_type@plt>
  424fa0:	tbnz	w0, #31, 424fdc <_obstack_memory_used@@Base+0xf584>
  424fa4:	ldur	w8, [x29, #-4]
  424fa8:	mov	w0, #0x1                   	// #1
  424fac:	cmp	w8, #0x20
  424fb0:	b.hi	424fe0 <_obstack_memory_used@@Base+0xf588>  // b.pmore
  424fb4:	lsl	x8, x20, x8
  424fb8:	tst	x8, x21
  424fbc:	b.eq	424fe0 <_obstack_memory_used@@Base+0xf588>  // b.none
  424fc0:	add	x2, x29, #0x18
  424fc4:	mov	w1, #0x1                   	// #1
  424fc8:	mov	x0, x19
  424fcc:	bl	402a40 <acl_get_entry@plt>
  424fd0:	cmp	w0, #0x0
  424fd4:	b.gt	424f94 <_obstack_memory_used@@Base+0xf53c>
  424fd8:	b	424fe0 <_obstack_memory_used@@Base+0xf588>
  424fdc:	mov	w0, #0xffffffff            	// #-1
  424fe0:	ldp	x20, x19, [sp, #48]
  424fe4:	ldr	x21, [sp, #32]
  424fe8:	ldp	x29, x30, [sp, #16]
  424fec:	add	sp, sp, #0x40
  424ff0:	ret
  424ff4:	stp	x29, x30, [sp, #-16]!
  424ff8:	mov	x29, sp
  424ffc:	bl	402610 <acl_entries@plt>
  425000:	cmp	w0, #0x0
  425004:	cset	w0, gt
  425008:	ldp	x29, x30, [sp], #16
  42500c:	ret
  425010:	stp	x29, x30, [sp, #-32]!
  425014:	str	x19, [sp, #16]
  425018:	mov	x19, x0
  42501c:	ldr	x0, [x0, #8]
  425020:	mov	x29, sp
  425024:	cbz	x0, 42502c <_obstack_memory_used@@Base+0xf5d4>
  425028:	bl	402c50 <acl_free@plt>
  42502c:	ldr	x0, [x19, #16]
  425030:	cbz	x0, 425040 <_obstack_memory_used@@Base+0xf5e8>
  425034:	ldr	x19, [sp, #16]
  425038:	ldp	x29, x30, [sp], #32
  42503c:	b	402c50 <acl_free@plt>
  425040:	ldr	x19, [sp, #16]
  425044:	ldp	x29, x30, [sp], #32
  425048:	ret
  42504c:	stp	x29, x30, [sp, #-48]!
  425050:	str	x21, [sp, #16]
  425054:	stp	x20, x19, [sp, #32]
  425058:	mov	x19, x3
  42505c:	mov	w21, w2
  425060:	mov	x20, x0
  425064:	movi	v0.2d, #0x0
  425068:	cmn	w1, #0x1
  42506c:	mov	x29, sp
  425070:	stp	q0, q0, [x3]
  425074:	str	w2, [x3]
  425078:	b.eq	4250b4 <_obstack_memory_used@@Base+0xf65c>  // b.none
  42507c:	mov	w0, w1
  425080:	bl	4028c0 <acl_get_fd@plt>
  425084:	str	x0, [x19, #8]
  425088:	cbz	x0, 4250c8 <_obstack_memory_used@@Base+0xf670>
  42508c:	and	w8, w21, #0xf000
  425090:	cmp	w8, #0x4, lsl #12
  425094:	b.ne	4250ac <_obstack_memory_used@@Base+0xf654>  // b.any
  425098:	mov	w1, #0x4000                	// #16384
  42509c:	mov	x0, x20
  4250a0:	bl	4029f0 <acl_get_file@plt>
  4250a4:	str	x0, [x19, #16]
  4250a8:	cbz	x0, 4250dc <_obstack_memory_used@@Base+0xf684>
  4250ac:	mov	w0, wzr
  4250b0:	b	4250e0 <_obstack_memory_used@@Base+0xf688>
  4250b4:	mov	w1, #0x8000                	// #32768
  4250b8:	mov	x0, x20
  4250bc:	bl	4029f0 <acl_get_file@plt>
  4250c0:	str	x0, [x19, #8]
  4250c4:	cbnz	x0, 42508c <_obstack_memory_used@@Base+0xf634>
  4250c8:	bl	402bd0 <__errno_location@plt>
  4250cc:	ldr	w0, [x0]
  4250d0:	bl	425494 <_obstack_memory_used@@Base+0xfa3c>
  4250d4:	sbfx	w0, w0, #0, #1
  4250d8:	b	4250e0 <_obstack_memory_used@@Base+0xf688>
  4250dc:	mov	w0, #0xffffffff            	// #-1
  4250e0:	ldp	x20, x19, [sp, #32]
  4250e4:	ldr	x21, [sp, #16]
  4250e8:	ldp	x29, x30, [sp], #48
  4250ec:	ret
  4250f0:	cmn	w1, #0x1
  4250f4:	b.eq	425104 <_obstack_memory_used@@Base+0xf6ac>  // b.none
  4250f8:	mov	w0, w1
  4250fc:	mov	w1, w2
  425100:	b	402820 <fchmod@plt>
  425104:	mov	w1, w2
  425108:	b	402740 <chmod@plt>
  42510c:	sub	sp, sp, #0x50
  425110:	stp	x29, x30, [sp, #16]
  425114:	add	x29, sp, #0x10
  425118:	stp	x24, x23, [sp, #32]
  42511c:	stp	x22, x21, [sp, #48]
  425120:	stp	x20, x19, [sp, #64]
  425124:	sturb	wzr, [x29, #-4]
  425128:	ldr	w8, [x0]
  42512c:	mov	w19, w2
  425130:	mov	x21, x0
  425134:	mov	x20, x1
  425138:	ands	w22, w8, #0xe00
  42513c:	b.eq	42516c <_obstack_memory_used@@Base+0xf714>  // b.none
  425140:	cmn	w19, #0x1
  425144:	b.eq	42515c <_obstack_memory_used@@Base+0xf704>  // b.none
  425148:	mov	w0, w19
  42514c:	mov	w1, w8
  425150:	bl	402820 <fchmod@plt>
  425154:	cbnz	w0, 425238 <_obstack_memory_used@@Base+0xf7e0>
  425158:	b	42516c <_obstack_memory_used@@Base+0xf714>
  42515c:	mov	x0, x20
  425160:	mov	w1, w8
  425164:	bl	402740 <chmod@plt>
  425168:	cbnz	w0, 425238 <_obstack_memory_used@@Base+0xf7e0>
  42516c:	sub	x4, x29, #0x4
  425170:	mov	x0, x21
  425174:	mov	x1, x20
  425178:	mov	w2, w19
  42517c:	mov	w3, wzr
  425180:	bl	425254 <_obstack_memory_used@@Base+0xf7fc>
  425184:	ldurb	w8, [x29, #-4]
  425188:	cbnz	w8, 42523c <_obstack_memory_used@@Base+0xf7e4>
  42518c:	cbz	w0, 4251cc <_obstack_memory_used@@Base+0xf774>
  425190:	bl	402bd0 <__errno_location@plt>
  425194:	ldr	w24, [x0]
  425198:	sub	x4, x29, #0x4
  42519c:	mov	w3, #0x1                   	// #1
  4251a0:	mov	x0, x21
  4251a4:	mov	x1, x20
  4251a8:	mov	w2, w19
  4251ac:	bl	425254 <_obstack_memory_used@@Base+0xf7fc>
  4251b0:	ldurb	w23, [x29, #-4]
  4251b4:	cbz	w24, 4251c4 <_obstack_memory_used@@Base+0xf76c>
  4251b8:	bl	402bd0 <__errno_location@plt>
  4251bc:	str	w24, [x0]
  4251c0:	mov	w0, #0xffffffff            	// #-1
  4251c4:	cbz	w22, 4251ec <_obstack_memory_used@@Base+0xf794>
  4251c8:	b	42523c <_obstack_memory_used@@Base+0xf7e4>
  4251cc:	sub	x4, x29, #0x4
  4251d0:	mov	w3, #0x1                   	// #1
  4251d4:	mov	x0, x21
  4251d8:	mov	x1, x20
  4251dc:	mov	w2, w19
  4251e0:	bl	425254 <_obstack_memory_used@@Base+0xf7fc>
  4251e4:	ldurb	w23, [x29, #-4]
  4251e8:	cbnz	w22, 42523c <_obstack_memory_used@@Base+0xf7e4>
  4251ec:	cmp	w23, #0x1
  4251f0:	b.eq	42523c <_obstack_memory_used@@Base+0xf7e4>  // b.none
  4251f4:	cbz	w0, 425204 <_obstack_memory_used@@Base+0xf7ac>
  4251f8:	bl	402bd0 <__errno_location@plt>
  4251fc:	ldr	w22, [x0]
  425200:	b	425208 <_obstack_memory_used@@Base+0xf7b0>
  425204:	mov	w22, wzr
  425208:	ldr	w1, [x21]
  42520c:	cmn	w19, #0x1
  425210:	b.eq	425224 <_obstack_memory_used@@Base+0xf7cc>  // b.none
  425214:	mov	w0, w19
  425218:	bl	402820 <fchmod@plt>
  42521c:	cbnz	w22, 425230 <_obstack_memory_used@@Base+0xf7d8>
  425220:	b	42523c <_obstack_memory_used@@Base+0xf7e4>
  425224:	mov	x0, x20
  425228:	bl	402740 <chmod@plt>
  42522c:	cbz	w22, 42523c <_obstack_memory_used@@Base+0xf7e4>
  425230:	bl	402bd0 <__errno_location@plt>
  425234:	str	w22, [x0]
  425238:	mov	w0, #0xffffffff            	// #-1
  42523c:	ldp	x20, x19, [sp, #64]
  425240:	ldp	x22, x21, [sp, #48]
  425244:	ldp	x24, x23, [sp, #32]
  425248:	ldp	x29, x30, [sp, #16]
  42524c:	add	sp, sp, #0x50
  425250:	ret
  425254:	stp	x29, x30, [sp, #-64]!
  425258:	stp	x22, x21, [sp, #32]
  42525c:	stp	x20, x19, [sp, #48]
  425260:	ldrb	w8, [x0, #24]
  425264:	str	x23, [sp, #16]
  425268:	mov	x29, sp
  42526c:	cbz	w8, 42528c <_obstack_memory_used@@Base+0xf834>
  425270:	mov	w23, wzr
  425274:	mov	w0, w23
  425278:	ldp	x20, x19, [sp, #48]
  42527c:	ldp	x22, x21, [sp, #32]
  425280:	ldr	x23, [sp, #16]
  425284:	ldp	x29, x30, [sp], #64
  425288:	ret
  42528c:	mov	w23, w2
  425290:	ldr	x2, [x0, #8]
  425294:	mov	x22, x4
  425298:	mov	w21, w3
  42529c:	mov	x19, x0
  4252a0:	mov	x20, x1
  4252a4:	cbz	w3, 4252d0 <_obstack_memory_used@@Base+0xf878>
  4252a8:	cbz	x2, 4252b4 <_obstack_memory_used@@Base+0xf85c>
  4252ac:	mov	x0, x2
  4252b0:	bl	402c50 <acl_free@plt>
  4252b4:	ldr	w0, [x19]
  4252b8:	bl	4028b0 <acl_from_mode@plt>
  4252bc:	mov	x2, x0
  4252c0:	str	x0, [x19, #8]
  4252c4:	cbnz	x0, 4252d4 <_obstack_memory_used@@Base+0xf87c>
  4252c8:	mov	w23, #0xffffffff            	// #-1
  4252cc:	b	425274 <_obstack_memory_used@@Base+0xf81c>
  4252d0:	cbz	x2, 425270 <_obstack_memory_used@@Base+0xf818>
  4252d4:	cmn	w23, #0x1
  4252d8:	b.eq	42531c <_obstack_memory_used@@Base+0xf8c4>  // b.none
  4252dc:	mov	w0, w23
  4252e0:	mov	x1, x2
  4252e4:	bl	4025e0 <acl_set_fd@plt>
  4252e8:	mov	w23, w0
  4252ec:	cbz	w0, 425330 <_obstack_memory_used@@Base+0xf8d8>
  4252f0:	bl	402bd0 <__errno_location@plt>
  4252f4:	ldr	w0, [x0]
  4252f8:	bl	425494 <_obstack_memory_used@@Base+0xfa3c>
  4252fc:	tbnz	w0, #0, 425274 <_obstack_memory_used@@Base+0xf81c>
  425300:	mov	w8, #0x1                   	// #1
  425304:	strb	w8, [x19, #24]
  425308:	cbnz	w21, 425270 <_obstack_memory_used@@Base+0xf818>
  42530c:	ldr	x0, [x19, #8]
  425310:	bl	424f5c <_obstack_memory_used@@Base+0xf504>
  425314:	cbnz	w0, 425274 <_obstack_memory_used@@Base+0xf81c>
  425318:	b	425270 <_obstack_memory_used@@Base+0xf818>
  42531c:	mov	w1, #0x8000                	// #32768
  425320:	mov	x0, x20
  425324:	bl	402890 <acl_set_file@plt>
  425328:	mov	w23, w0
  42532c:	cbnz	w0, 4252f0 <_obstack_memory_used@@Base+0xf898>
  425330:	mov	w8, #0x1                   	// #1
  425334:	strb	w8, [x22]
  425338:	ldr	w8, [x19]
  42533c:	and	w8, w8, #0xf000
  425340:	cmp	w8, #0x4, lsl #12
  425344:	b.ne	425270 <_obstack_memory_used@@Base+0xf818>  // b.any
  425348:	cbz	w21, 425364 <_obstack_memory_used@@Base+0xf90c>
  42534c:	mov	x0, x20
  425350:	ldp	x20, x19, [sp, #48]
  425354:	ldp	x22, x21, [sp, #32]
  425358:	ldr	x23, [sp, #16]
  42535c:	ldp	x29, x30, [sp], #64
  425360:	b	4026c0 <acl_delete_def_file@plt>
  425364:	ldr	x0, [x19, #16]
  425368:	cbz	x0, 42534c <_obstack_memory_used@@Base+0xf8f4>
  42536c:	bl	424ff4 <_obstack_memory_used@@Base+0xf59c>
  425370:	cbz	w0, 42534c <_obstack_memory_used@@Base+0xf8f4>
  425374:	ldr	x2, [x19, #16]
  425378:	mov	x0, x20
  42537c:	ldp	x20, x19, [sp, #48]
  425380:	ldp	x22, x21, [sp, #32]
  425384:	ldr	x23, [sp, #16]
  425388:	mov	w1, #0x4000                	// #16384
  42538c:	ldp	x29, x30, [sp], #64
  425390:	b	402890 <acl_set_file@plt>
  425394:	sub	sp, sp, #0x130
  425398:	add	x1, sp, #0xc
  42539c:	mov	w2, #0x101                 	// #257
  4253a0:	stp	x29, x30, [sp, #272]
  4253a4:	str	x28, [sp, #288]
  4253a8:	add	x29, sp, #0x110
  4253ac:	bl	425400 <_obstack_memory_used@@Base+0xf9a8>
  4253b0:	cbz	w0, 4253bc <_obstack_memory_used@@Base+0xf964>
  4253b4:	mov	w0, wzr
  4253b8:	b	4253f0 <_obstack_memory_used@@Base+0xf998>
  4253bc:	ldrh	w8, [sp, #12]
  4253c0:	cmp	w8, #0x43
  4253c4:	b.eq	4253b4 <_obstack_memory_used@@Base+0xf95c>  // b.none
  4253c8:	ldr	w8, [sp, #12]
  4253cc:	ldrh	w9, [sp, #16]
  4253d0:	mov	w10, #0x4f50                	// #20304
  4253d4:	movk	w10, #0x4953, lsl #16
  4253d8:	mov	w11, #0x58                  	// #88
  4253dc:	eor	w8, w8, w10
  4253e0:	eor	w9, w9, w11
  4253e4:	orr	w8, w8, w9
  4253e8:	cmp	w8, #0x0
  4253ec:	cset	w0, ne  // ne = any
  4253f0:	ldr	x28, [sp, #288]
  4253f4:	ldp	x29, x30, [sp, #272]
  4253f8:	add	sp, sp, #0x130
  4253fc:	ret
  425400:	stp	x29, x30, [sp, #-48]!
  425404:	stp	x20, x19, [sp, #32]
  425408:	mov	x19, x1
  42540c:	mov	x1, xzr
  425410:	str	x21, [sp, #16]
  425414:	mov	x29, sp
  425418:	mov	x20, x2
  42541c:	bl	402c40 <setlocale@plt>
  425420:	cbz	x0, 42544c <_obstack_memory_used@@Base+0xf9f4>
  425424:	mov	x21, x0
  425428:	bl	4025c0 <strlen@plt>
  42542c:	cmp	x0, x20
  425430:	b.cs	42545c <_obstack_memory_used@@Base+0xfa04>  // b.hs, b.nlast
  425434:	add	x2, x0, #0x1
  425438:	mov	x0, x19
  42543c:	mov	x1, x21
  425440:	bl	402580 <memcpy@plt>
  425444:	mov	w0, wzr
  425448:	b	42547c <_obstack_memory_used@@Base+0xfa24>
  42544c:	cbz	x20, 425454 <_obstack_memory_used@@Base+0xf9fc>
  425450:	strb	wzr, [x19]
  425454:	mov	w0, #0x16                  	// #22
  425458:	b	42547c <_obstack_memory_used@@Base+0xfa24>
  42545c:	cbz	x20, 425478 <_obstack_memory_used@@Base+0xfa20>
  425460:	sub	x20, x20, #0x1
  425464:	mov	x0, x19
  425468:	mov	x1, x21
  42546c:	mov	x2, x20
  425470:	bl	402580 <memcpy@plt>
  425474:	strb	wzr, [x19, x20]
  425478:	mov	w0, #0x22                  	// #34
  42547c:	ldp	x20, x19, [sp, #32]
  425480:	ldr	x21, [sp, #16]
  425484:	ldp	x29, x30, [sp], #48
  425488:	ret
  42548c:	mov	x1, xzr
  425490:	b	402c40 <setlocale@plt>
  425494:	mov	w8, w0
  425498:	cmp	w0, #0x26
  42549c:	mov	w0, wzr
  4254a0:	b.hi	4254c0 <_obstack_memory_used@@Base+0xfa68>  // b.pmore
  4254a4:	mov	w9, w8
  4254a8:	mov	w10, #0x1                   	// #1
  4254ac:	lsl	x9, x10, x9
  4254b0:	mov	x10, #0x410000              	// #4259840
  4254b4:	movk	x10, #0x40, lsl #32
  4254b8:	tst	x9, x10
  4254bc:	b.ne	4254c8 <_obstack_memory_used@@Base+0xfa70>  // b.any
  4254c0:	cmp	w8, #0x5f
  4254c4:	b.ne	4254cc <_obstack_memory_used@@Base+0xfa74>  // b.any
  4254c8:	ret
  4254cc:	mov	w0, #0x1                   	// #1
  4254d0:	ret
  4254d4:	nop
  4254d8:	stp	x29, x30, [sp, #-64]!
  4254dc:	mov	x29, sp
  4254e0:	stp	x19, x20, [sp, #16]
  4254e4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x225a8>
  4254e8:	add	x20, x20, #0xde0
  4254ec:	stp	x21, x22, [sp, #32]
  4254f0:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x225a8>
  4254f4:	add	x21, x21, #0xdd8
  4254f8:	sub	x20, x20, x21
  4254fc:	mov	w22, w0
  425500:	stp	x23, x24, [sp, #48]
  425504:	mov	x23, x1
  425508:	mov	x24, x2
  42550c:	bl	402538 <mbrtowc@plt-0x38>
  425510:	cmp	xzr, x20, asr #3
  425514:	b.eq	425540 <_obstack_memory_used@@Base+0xfae8>  // b.none
  425518:	asr	x20, x20, #3
  42551c:	mov	x19, #0x0                   	// #0
  425520:	ldr	x3, [x21, x19, lsl #3]
  425524:	mov	x2, x24
  425528:	add	x19, x19, #0x1
  42552c:	mov	x1, x23
  425530:	mov	w0, w22
  425534:	blr	x3
  425538:	cmp	x20, x19
  42553c:	b.ne	425520 <_obstack_memory_used@@Base+0xfac8>  // b.any
  425540:	ldp	x19, x20, [sp, #16]
  425544:	ldp	x21, x22, [sp, #32]
  425548:	ldp	x23, x24, [sp, #48]
  42554c:	ldp	x29, x30, [sp], #64
  425550:	ret
  425554:	nop
  425558:	ret
  42555c:	nop
  425560:	adrp	x2, 439000 <_obstack_memory_used@@Base+0x235a8>
  425564:	mov	x1, #0x0                   	// #0
  425568:	ldr	x2, [x2, #904]
  42556c:	b	402650 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000425570 <.fini>:
  425570:	stp	x29, x30, [sp, #-16]!
  425574:	mov	x29, sp
  425578:	ldp	x29, x30, [sp], #16
  42557c:	ret
