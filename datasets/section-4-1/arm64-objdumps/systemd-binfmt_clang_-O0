
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-binfmt_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401050 <_init>:
  401050:	stp	x29, x30, [sp, #-16]!
  401054:	mov	x29, sp
  401058:	bl	401308 <call_weak_fn>
  40105c:	ldp	x29, x30, [sp], #16
  401060:	ret

Disassembly of section .plt:

0000000000401068 <__libc_start_main@plt-0x20>:
  401068:	stp	x16, x30, [sp, #-16]!
  40106c:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  401070:	ldr	x17, [x16, #3808]
  401074:	add	x16, x16, #0xee0
  401078:	br	x17
  40107c:	nop
  401080:	nop
  401084:	nop

0000000000401088 <__libc_start_main@plt>:
  401088:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40108c:	ldr	x17, [x16, #3816]
  401090:	add	x16, x16, #0xee8
  401094:	br	x17

0000000000401098 <abort@plt>:
  401098:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40109c:	ldr	x17, [x16, #3824]
  4010a0:	add	x16, x16, #0xef0
  4010a4:	br	x17

00000000004010a8 <__gmon_start__@plt>:
  4010a8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010ac:	ldr	x17, [x16, #3832]
  4010b0:	add	x16, x16, #0xef8
  4010b4:	br	x17

00000000004010b8 <ask_password_agent_close@plt>:
  4010b8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010bc:	ldr	x17, [x16, #3840]
  4010c0:	add	x16, x16, #0xf00
  4010c4:	br	x17

00000000004010c8 <polkit_agent_close@plt>:
  4010c8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010cc:	ldr	x17, [x16, #3848]
  4010d0:	add	x16, x16, #0xf08
  4010d4:	br	x17

00000000004010d8 <pager_close@plt>:
  4010d8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010dc:	ldr	x17, [x16, #3856]
  4010e0:	add	x16, x16, #0xf10
  4010e4:	br	x17

00000000004010e8 <mac_selinux_finish@plt>:
  4010e8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010ec:	ldr	x17, [x16, #3864]
  4010f0:	add	x16, x16, #0xf18
  4010f4:	br	x17

00000000004010f8 <log_setup_service@plt>:
  4010f8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4010fc:	ldr	x17, [x16, #3872]
  401100:	add	x16, x16, #0xf20
  401104:	br	x17

0000000000401108 <umask@plt>:
  401108:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40110c:	ldr	x17, [x16, #3880]
  401110:	add	x16, x16, #0xf28
  401114:	br	x17

0000000000401118 <memcpy@plt>:
  401118:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40111c:	ldr	x17, [x16, #3888]
  401120:	add	x16, x16, #0xf30
  401124:	br	x17

0000000000401128 <conf_files_list_strv@plt>:
  401128:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40112c:	ldr	x17, [x16, #3896]
  401130:	add	x16, x16, #0xf38
  401134:	br	x17

0000000000401138 <log_get_max_level_realm@plt>:
  401138:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40113c:	ldr	x17, [x16, #3904]
  401140:	add	x16, x16, #0xf40
  401144:	br	x17

0000000000401148 <log_internal_realm@plt>:
  401148:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40114c:	ldr	x17, [x16, #3912]
  401150:	add	x16, x16, #0xf48
  401154:	br	x17

0000000000401158 <abs@plt>:
  401158:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40115c:	ldr	x17, [x16, #3920]
  401160:	add	x16, x16, #0xf50
  401164:	br	x17

0000000000401168 <pager_open@plt>:
  401168:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40116c:	ldr	x17, [x16, #3928]
  401170:	add	x16, x16, #0xf58
  401174:	br	x17

0000000000401178 <cat_files@plt>:
  401178:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40117c:	ldr	x17, [x16, #3936]
  401180:	add	x16, x16, #0xf60
  401184:	br	x17

0000000000401188 <log_assert_failed_realm@plt>:
  401188:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40118c:	ldr	x17, [x16, #3944]
  401190:	add	x16, x16, #0xf68
  401194:	br	x17

0000000000401198 <getopt_long@plt>:
  401198:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40119c:	ldr	x17, [x16, #3952]
  4011a0:	add	x16, x16, #0xf70
  4011a4:	br	x17

00000000004011a8 <version@plt>:
  4011a8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011ac:	ldr	x17, [x16, #3960]
  4011b0:	add	x16, x16, #0xf78
  4011b4:	br	x17

00000000004011b8 <log_assert_failed_unreachable_realm@plt>:
  4011b8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011bc:	ldr	x17, [x16, #3968]
  4011c0:	add	x16, x16, #0xf80
  4011c4:	br	x17

00000000004011c8 <search_and_fopen@plt>:
  4011c8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011cc:	ldr	x17, [x16, #3976]
  4011d0:	add	x16, x16, #0xf88
  4011d4:	br	x17

00000000004011d8 <strstrip@plt>:
  4011d8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011dc:	ldr	x17, [x16, #3984]
  4011e0:	add	x16, x16, #0xf90
  4011e4:	br	x17

00000000004011e8 <strchr@plt>:
  4011e8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011ec:	ldr	x17, [x16, #3992]
  4011f0:	add	x16, x16, #0xf98
  4011f4:	br	x17

00000000004011f8 <strv_free@plt>:
  4011f8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4011fc:	ldr	x17, [x16, #4000]
  401200:	add	x16, x16, #0xfa0
  401204:	br	x17

0000000000401208 <write_string_file_ts@plt>:
  401208:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40120c:	ldr	x17, [x16, #4008]
  401210:	add	x16, x16, #0xfa8
  401214:	br	x17

0000000000401218 <terminal_urlify_man@plt>:
  401218:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40121c:	ldr	x17, [x16, #4016]
  401220:	add	x16, x16, #0xfb0
  401224:	br	x17

0000000000401228 <log_oom_internal@plt>:
  401228:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40122c:	ldr	x17, [x16, #4024]
  401230:	add	x16, x16, #0xfb8
  401234:	br	x17

0000000000401238 <printf@plt>:
  401238:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40123c:	ldr	x17, [x16, #4032]
  401240:	add	x16, x16, #0xfc0
  401244:	br	x17

0000000000401248 <free@plt>:
  401248:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40124c:	ldr	x17, [x16, #4040]
  401250:	add	x16, x16, #0xfc8
  401254:	br	x17

0000000000401258 <safe_fclose@plt>:
  401258:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40125c:	ldr	x17, [x16, #4048]
  401260:	add	x16, x16, #0xfd0
  401264:	br	x17

0000000000401268 <read_line_full@plt>:
  401268:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40126c:	ldr	x17, [x16, #4056]
  401270:	add	x16, x16, #0xfd8
  401274:	br	x17

0000000000401278 <strdup@plt>:
  401278:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40127c:	ldr	x17, [x16, #4064]
  401280:	add	x16, x16, #0xfe0
  401284:	br	x17

0000000000401288 <strchrnul@plt>:
  401288:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40128c:	ldr	x17, [x16, #4072]
  401290:	add	x16, x16, #0xfe8
  401294:	br	x17

0000000000401298 <filename_is_valid@plt>:
  401298:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  40129c:	ldr	x17, [x16, #4080]
  4012a0:	add	x16, x16, #0xff0
  4012a4:	br	x17

00000000004012a8 <path_join_internal@plt>:
  4012a8:	adrp	x16, 41f000 <__FRAME_END__+0x1c4f8>
  4012ac:	ldr	x17, [x16, #4088]
  4012b0:	add	x16, x16, #0xff8
  4012b4:	br	x17

Disassembly of section .text:

00000000004012b8 <_start>:
  4012b8:	mov	x29, #0x0                   	// #0
  4012bc:	mov	x30, #0x0                   	// #0
  4012c0:	mov	x5, x0
  4012c4:	ldr	x1, [sp]
  4012c8:	add	x2, sp, #0x8
  4012cc:	mov	x6, sp
  4012d0:	movz	x0, #0x0, lsl #48
  4012d4:	movk	x0, #0x0, lsl #32
  4012d8:	movk	x0, #0x40, lsl #16
  4012dc:	movk	x0, #0x1480
  4012e0:	movz	x3, #0x0, lsl #48
  4012e4:	movk	x3, #0x0, lsl #32
  4012e8:	movk	x3, #0x40, lsl #16
  4012ec:	movk	x3, #0x24e0
  4012f0:	movz	x4, #0x0, lsl #48
  4012f4:	movk	x4, #0x0, lsl #32
  4012f8:	movk	x4, #0x40, lsl #16
  4012fc:	movk	x4, #0x2560
  401300:	bl	401088 <__libc_start_main@plt>
  401304:	bl	401098 <abort@plt>

0000000000401308 <call_weak_fn>:
  401308:	adrp	x0, 41f000 <__FRAME_END__+0x1c4f8>
  40130c:	ldr	x0, [x0, #3768]
  401310:	cbz	x0, 401318 <call_weak_fn+0x10>
  401314:	b	4010a8 <__gmon_start__@plt>
  401318:	ret

000000000040131c <deregister_tm_clones>:
  40131c:	stp	x29, x30, [sp, #-32]!
  401320:	mov	x29, sp
  401324:	adrp	x0, 420000 <__TMC_END__>
  401328:	add	x0, x0, #0x0
  40132c:	str	x0, [sp, #24]
  401330:	ldr	x0, [sp, #24]
  401334:	str	x0, [sp, #24]
  401338:	ldr	x1, [sp, #24]
  40133c:	adrp	x0, 420000 <__TMC_END__>
  401340:	add	x0, x0, #0x0
  401344:	cmp	x1, x0
  401348:	b.eq	401384 <deregister_tm_clones+0x68>  // b.none
  40134c:	adrp	x0, 402000 <help+0x50>
  401350:	add	x0, x0, #0x578
  401354:	ldr	x0, [x0]
  401358:	str	x0, [sp, #16]
  40135c:	ldr	x0, [sp, #16]
  401360:	str	x0, [sp, #16]
  401364:	ldr	x0, [sp, #16]
  401368:	cmp	x0, #0x0
  40136c:	b.eq	401388 <deregister_tm_clones+0x6c>  // b.none
  401370:	ldr	x1, [sp, #16]
  401374:	adrp	x0, 420000 <__TMC_END__>
  401378:	add	x0, x0, #0x0
  40137c:	blr	x1
  401380:	b	401388 <deregister_tm_clones+0x6c>
  401384:	nop
  401388:	ldp	x29, x30, [sp], #32
  40138c:	ret

0000000000401390 <register_tm_clones>:
  401390:	stp	x29, x30, [sp, #-48]!
  401394:	mov	x29, sp
  401398:	adrp	x0, 420000 <__TMC_END__>
  40139c:	add	x0, x0, #0x0
  4013a0:	str	x0, [sp, #40]
  4013a4:	ldr	x0, [sp, #40]
  4013a8:	str	x0, [sp, #40]
  4013ac:	ldr	x1, [sp, #40]
  4013b0:	adrp	x0, 420000 <__TMC_END__>
  4013b4:	add	x0, x0, #0x0
  4013b8:	sub	x0, x1, x0
  4013bc:	asr	x0, x0, #3
  4013c0:	lsr	x1, x0, #63
  4013c4:	add	x0, x1, x0
  4013c8:	asr	x0, x0, #1
  4013cc:	str	x0, [sp, #32]
  4013d0:	ldr	x0, [sp, #32]
  4013d4:	cmp	x0, #0x0
  4013d8:	b.eq	401418 <register_tm_clones+0x88>  // b.none
  4013dc:	adrp	x0, 402000 <help+0x50>
  4013e0:	add	x0, x0, #0x580
  4013e4:	ldr	x0, [x0]
  4013e8:	str	x0, [sp, #24]
  4013ec:	ldr	x0, [sp, #24]
  4013f0:	str	x0, [sp, #24]
  4013f4:	ldr	x0, [sp, #24]
  4013f8:	cmp	x0, #0x0
  4013fc:	b.eq	40141c <register_tm_clones+0x8c>  // b.none
  401400:	ldr	x2, [sp, #24]
  401404:	ldr	x1, [sp, #32]
  401408:	adrp	x0, 420000 <__TMC_END__>
  40140c:	add	x0, x0, #0x0
  401410:	blr	x2
  401414:	b	40141c <register_tm_clones+0x8c>
  401418:	nop
  40141c:	ldp	x29, x30, [sp], #48
  401420:	ret

0000000000401424 <__do_global_dtors_aux>:
  401424:	stp	x29, x30, [sp, #-16]!
  401428:	mov	x29, sp
  40142c:	adrp	x0, 420000 <__TMC_END__>
  401430:	add	x0, x0, #0x60
  401434:	ldrb	w0, [x0]
  401438:	and	x0, x0, #0xff
  40143c:	cmp	x0, #0x0
  401440:	b.ne	40145c <__do_global_dtors_aux+0x38>  // b.any
  401444:	bl	40131c <deregister_tm_clones>
  401448:	adrp	x0, 420000 <__TMC_END__>
  40144c:	add	x0, x0, #0x60
  401450:	mov	w1, #0x1                   	// #1
  401454:	strb	w1, [x0]
  401458:	b	401460 <__do_global_dtors_aux+0x3c>
  40145c:	nop
  401460:	ldp	x29, x30, [sp], #16
  401464:	ret

0000000000401468 <frame_dummy>:
  401468:	stp	x29, x30, [sp, #-16]!
  40146c:	mov	x29, sp
  401470:	bl	401390 <register_tm_clones>
  401474:	nop
  401478:	ldp	x29, x30, [sp], #16
  40147c:	ret

0000000000401480 <main>:
  401480:	sub	sp, sp, #0x30
  401484:	stp	x29, x30, [sp, #32]
  401488:	add	x29, sp, #0x20
  40148c:	mov	w8, wzr
  401490:	mov	w9, #0x1                   	// #1
  401494:	stur	wzr, [x29, #-4]
  401498:	stur	w0, [x29, #-8]
  40149c:	str	x1, [sp, #16]
  4014a0:	ldur	w0, [x29, #-8]
  4014a4:	ldr	x1, [sp, #16]
  4014a8:	str	w8, [sp, #8]
  4014ac:	str	w9, [sp, #4]
  4014b0:	bl	4014f8 <save_argc_argv>
  4014b4:	ldur	w0, [x29, #-8]
  4014b8:	ldr	x1, [sp, #16]
  4014bc:	bl	40152c <run>
  4014c0:	str	w0, [sp, #12]
  4014c4:	bl	4010b8 <ask_password_agent_close@plt>
  4014c8:	bl	4010c8 <polkit_agent_close@plt>
  4014cc:	bl	4010d8 <pager_close@plt>
  4014d0:	bl	4010e8 <mac_selinux_finish@plt>
  4014d4:	bl	401840 <static_destruct>
  4014d8:	ldr	w8, [sp, #12]
  4014dc:	cmp	w8, #0x0
  4014e0:	ldr	w8, [sp, #4]
  4014e4:	ldr	w9, [sp, #8]
  4014e8:	csel	w0, w8, w9, lt  // lt = tstop
  4014ec:	ldp	x29, x30, [sp, #32]
  4014f0:	add	sp, sp, #0x30
  4014f4:	ret

00000000004014f8 <save_argc_argv>:
  4014f8:	sub	sp, sp, #0x10
  4014fc:	adrp	x8, 420000 <__TMC_END__>
  401500:	add	x8, x8, #0x70
  401504:	adrp	x9, 420000 <__TMC_END__>
  401508:	add	x9, x9, #0x78
  40150c:	str	w0, [sp, #12]
  401510:	str	x1, [sp]
  401514:	ldr	w10, [sp, #12]
  401518:	str	w10, [x8]
  40151c:	ldr	x8, [sp]
  401520:	str	x8, [x9]
  401524:	add	sp, sp, #0x10
  401528:	ret

000000000040152c <run>:
  40152c:	sub	sp, sp, #0xb0
  401530:	stp	x29, x30, [sp, #160]
  401534:	add	x29, sp, #0xa0
  401538:	adrp	x8, 402000 <help+0x50>
  40153c:	add	x8, x8, #0x5e2
  401540:	add	x2, x8, #0x3
  401544:	stur	w0, [x29, #-8]
  401548:	stur	x1, [x29, #-16]
  40154c:	ldur	w0, [x29, #-8]
  401550:	ldur	x1, [x29, #-16]
  401554:	str	x2, [sp, #32]
  401558:	bl	4018c0 <parse_argv>
  40155c:	stur	w0, [x29, #-20]
  401560:	ldur	w9, [x29, #-20]
  401564:	cmp	w9, #0x0
  401568:	cset	w9, gt
  40156c:	tbnz	w9, #0, 40158c <run+0x60>
  401570:	ldur	w8, [x29, #-20]
  401574:	mov	w9, wzr
  401578:	mov	w10, #0x1                   	// #1
  40157c:	cmp	w8, #0x0
  401580:	csel	w8, w10, w9, lt  // lt = tstop
  401584:	stur	w8, [x29, #-4]
  401588:	b	401830 <run+0x304>
  40158c:	bl	4010f8 <log_setup_service@plt>
  401590:	mov	w0, #0x12                  	// #18
  401594:	bl	401108 <umask@plt>
  401598:	stur	wzr, [x29, #-20]
  40159c:	ldur	w8, [x29, #-8]
  4015a0:	adrp	x9, 420000 <__TMC_END__>
  4015a4:	add	x9, x9, #0x80
  4015a8:	ldr	w10, [x9]
  4015ac:	cmp	w8, w10
  4015b0:	b.le	401630 <run+0x104>
  4015b4:	adrp	x8, 420000 <__TMC_END__>
  4015b8:	add	x8, x8, #0x80
  4015bc:	ldr	w9, [x8]
  4015c0:	stur	w9, [x29, #-28]
  4015c4:	ldur	w8, [x29, #-28]
  4015c8:	ldur	w9, [x29, #-8]
  4015cc:	cmp	w8, w9
  4015d0:	b.ge	40162c <run+0x100>  // b.tcont
  4015d4:	ldur	x8, [x29, #-16]
  4015d8:	ldursw	x9, [x29, #-28]
  4015dc:	mov	x10, #0x8                   	// #8
  4015e0:	mul	x9, x10, x9
  4015e4:	add	x8, x8, x9
  4015e8:	ldr	x0, [x8]
  4015ec:	mov	w11, wzr
  4015f0:	and	w1, w11, #0x1
  4015f4:	bl	401b54 <apply_file>
  4015f8:	stur	w0, [x29, #-24]
  4015fc:	ldur	w11, [x29, #-24]
  401600:	cmp	w11, #0x0
  401604:	cset	w11, ge  // ge = tcont
  401608:	tbnz	w11, #0, 40161c <run+0xf0>
  40160c:	ldur	w8, [x29, #-20]
  401610:	cbnz	w8, 40161c <run+0xf0>
  401614:	ldur	w8, [x29, #-24]
  401618:	stur	w8, [x29, #-20]
  40161c:	ldur	w8, [x29, #-28]
  401620:	add	w8, w8, #0x1
  401624:	stur	w8, [x29, #-28]
  401628:	b	4015c4 <run+0x98>
  40162c:	b	401828 <run+0x2fc>
  401630:	sub	x0, x29, #0x28
  401634:	mov	x8, xzr
  401638:	stur	x8, [x29, #-40]
  40163c:	add	x9, sp, #0x40
  401640:	str	x0, [sp, #24]
  401644:	mov	x0, x9
  401648:	adrp	x1, 420000 <__TMC_END__>
  40164c:	add	x1, x1, #0x0
  401650:	mov	x2, #0x30                  	// #48
  401654:	str	x8, [sp, #16]
  401658:	str	x9, [sp, #8]
  40165c:	bl	401118 <memcpy@plt>
  401660:	ldr	x0, [sp, #24]
  401664:	adrp	x1, 402000 <help+0x50>
  401668:	add	x1, x1, #0x588
  40166c:	ldr	x8, [sp, #16]
  401670:	mov	x2, x8
  401674:	mov	w10, wzr
  401678:	mov	w3, w10
  40167c:	ldr	x4, [sp, #8]
  401680:	bl	401128 <conf_files_list_strv@plt>
  401684:	stur	w0, [x29, #-20]
  401688:	ldur	w10, [x29, #-20]
  40168c:	cmp	w10, #0x0
  401690:	cset	w10, ge  // ge = tcont
  401694:	tbnz	w10, #0, 401728 <run+0x1fc>
  401698:	mov	w8, #0x3                   	// #3
  40169c:	str	w8, [sp, #60]
  4016a0:	ldur	w8, [x29, #-20]
  4016a4:	str	w8, [sp, #56]
  4016a8:	str	wzr, [sp, #52]
  4016ac:	ldr	w0, [sp, #52]
  4016b0:	bl	401138 <log_get_max_level_realm@plt>
  4016b4:	ldr	w8, [sp, #60]
  4016b8:	and	w8, w8, #0x7
  4016bc:	cmp	w0, w8
  4016c0:	b.lt	4016f8 <run+0x1cc>  // b.tstop
  4016c4:	ldr	w8, [sp, #52]
  4016c8:	ldr	w9, [sp, #60]
  4016cc:	orr	w0, w9, w8, lsl #10
  4016d0:	ldr	w1, [sp, #56]
  4016d4:	ldr	x2, [sp, #32]
  4016d8:	mov	w3, #0xce                  	// #206
  4016dc:	adrp	x4, 402000 <help+0x50>
  4016e0:	add	x4, x4, #0x5f9
  4016e4:	adrp	x5, 402000 <help+0x50>
  4016e8:	add	x5, x5, #0x5fd
  4016ec:	bl	401148 <log_internal_realm@plt>
  4016f0:	str	w0, [sp, #4]
  4016f4:	b	40170c <run+0x1e0>
  4016f8:	ldr	w0, [sp, #56]
  4016fc:	bl	401158 <abs@plt>
  401700:	mov	w8, wzr
  401704:	subs	w8, w8, w0, uxtb
  401708:	str	w8, [sp, #4]
  40170c:	ldr	w8, [sp, #4]
  401710:	str	w8, [sp, #48]
  401714:	ldr	w8, [sp, #48]
  401718:	stur	w8, [x29, #-4]
  40171c:	mov	w8, #0x1                   	// #1
  401720:	str	w8, [sp, #44]
  401724:	b	401810 <run+0x2e4>
  401728:	adrp	x8, 420000 <__TMC_END__>
  40172c:	add	x8, x8, #0x64
  401730:	ldrb	w9, [x8]
  401734:	tbnz	w9, #0, 40173c <run+0x210>
  401738:	b	401774 <run+0x248>
  40173c:	adrp	x8, 420000 <__TMC_END__>
  401740:	add	x8, x8, #0x68
  401744:	ldr	w0, [x8]
  401748:	bl	401168 <pager_open@plt>
  40174c:	ldur	x1, [x29, #-40]
  401750:	mov	x8, xzr
  401754:	mov	x0, x8
  401758:	mov	w9, wzr
  40175c:	mov	w2, w9
  401760:	bl	401178 <cat_files@plt>
  401764:	stur	w0, [x29, #-4]
  401768:	mov	w9, #0x1                   	// #1
  40176c:	str	w9, [sp, #44]
  401770:	b	401810 <run+0x2e4>
  401774:	adrp	x0, 402000 <help+0x50>
  401778:	add	x0, x0, #0x624
  40177c:	adrp	x1, 402000 <help+0x50>
  401780:	add	x1, x1, #0x644
  401784:	mov	w2, #0x20                  	// #32
  401788:	bl	401f74 <write_string_file>
  40178c:	ldur	x8, [x29, #-40]
  401790:	stur	x8, [x29, #-48]
  401794:	ldur	x8, [x29, #-48]
  401798:	mov	w9, #0x0                   	// #0
  40179c:	str	w9, [sp]
  4017a0:	cbz	x8, 4017b8 <run+0x28c>
  4017a4:	ldur	x8, [x29, #-48]
  4017a8:	ldr	x8, [x8]
  4017ac:	cmp	x8, #0x0
  4017b0:	cset	w9, ne  // ne = any
  4017b4:	str	w9, [sp]
  4017b8:	ldr	w8, [sp]
  4017bc:	tbnz	w8, #0, 4017c4 <run+0x298>
  4017c0:	b	40180c <run+0x2e0>
  4017c4:	ldur	x8, [x29, #-48]
  4017c8:	ldr	x0, [x8]
  4017cc:	mov	w9, #0x1                   	// #1
  4017d0:	and	w1, w9, #0x1
  4017d4:	bl	401b54 <apply_file>
  4017d8:	stur	w0, [x29, #-24]
  4017dc:	ldur	w9, [x29, #-24]
  4017e0:	cmp	w9, #0x0
  4017e4:	cset	w9, ge  // ge = tcont
  4017e8:	tbnz	w9, #0, 4017fc <run+0x2d0>
  4017ec:	ldur	w8, [x29, #-20]
  4017f0:	cbnz	w8, 4017fc <run+0x2d0>
  4017f4:	ldur	w8, [x29, #-24]
  4017f8:	stur	w8, [x29, #-20]
  4017fc:	ldur	x8, [x29, #-48]
  401800:	add	x8, x8, #0x8
  401804:	stur	x8, [x29, #-48]
  401808:	b	401794 <run+0x268>
  40180c:	str	wzr, [sp, #44]
  401810:	sub	x0, x29, #0x28
  401814:	bl	401f40 <strv_freep>
  401818:	ldr	w8, [sp, #44]
  40181c:	cbz	w8, 401828 <run+0x2fc>
  401820:	b	401824 <run+0x2f8>
  401824:	b	401830 <run+0x304>
  401828:	ldur	w8, [x29, #-20]
  40182c:	stur	w8, [x29, #-4]
  401830:	ldur	w0, [x29, #-4]
  401834:	ldp	x29, x30, [sp, #160]
  401838:	add	sp, sp, #0xb0
  40183c:	ret

0000000000401840 <static_destruct>:
  401840:	sub	sp, sp, #0x20
  401844:	stp	x29, x30, [sp, #16]
  401848:	add	x29, sp, #0x10
  40184c:	adrp	x8, 41f000 <__FRAME_END__+0x1c4f8>
  401850:	ldr	x8, [x8, #3776]
  401854:	str	x8, [sp]
  401858:	cbnz	x8, 401860 <static_destruct+0x20>
  40185c:	b	4018b4 <static_destruct+0x74>
  401860:	ldr	x0, [sp]
  401864:	mov	x1, #0x8                   	// #8
  401868:	bl	4024ac <ALIGN_TO>
  40186c:	str	x0, [sp, #8]
  401870:	ldr	x8, [sp, #8]
  401874:	adrp	x9, 41f000 <__FRAME_END__+0x1c4f8>
  401878:	ldr	x9, [x9, #3784]
  40187c:	cmp	x8, x9
  401880:	b.cs	4018b4 <static_destruct+0x74>  // b.hs, b.nlast
  401884:	ldr	x8, [sp, #8]
  401888:	ldr	x8, [x8, #8]
  40188c:	ldr	x9, [sp, #8]
  401890:	ldr	x0, [x9]
  401894:	blr	x8
  401898:	ldr	x8, [sp, #8]
  40189c:	add	x8, x8, #0x10
  4018a0:	mov	x0, x8
  4018a4:	mov	x1, #0x8                   	// #8
  4018a8:	bl	4024ac <ALIGN_TO>
  4018ac:	str	x0, [sp, #8]
  4018b0:	b	401870 <static_destruct+0x30>
  4018b4:	ldp	x29, x30, [sp, #16]
  4018b8:	add	sp, sp, #0x20
  4018bc:	ret

00000000004018c0 <parse_argv>:
  4018c0:	sub	sp, sp, #0x50
  4018c4:	stp	x29, x30, [sp, #64]
  4018c8:	add	x29, sp, #0x40
  4018cc:	adrp	x8, 402000 <help+0x50>
  4018d0:	add	x8, x8, #0x5e2
  4018d4:	add	x8, x8, #0x3
  4018d8:	adrp	x9, 402000 <help+0x50>
  4018dc:	add	x9, x9, #0x672
  4018e0:	stur	w0, [x29, #-8]
  4018e4:	stur	x1, [x29, #-16]
  4018e8:	str	x8, [sp, #16]
  4018ec:	str	x9, [sp, #8]
  4018f0:	ldur	w8, [x29, #-8]
  4018f4:	cmp	w8, #0x0
  4018f8:	cset	w8, ge  // ge = tcont
  4018fc:	mov	w9, #0x1                   	// #1
  401900:	eor	w8, w8, #0x1
  401904:	eor	w8, w8, w9
  401908:	eor	w8, w8, w9
  40190c:	and	w8, w8, #0x1
  401910:	mov	w0, w8
  401914:	sxtw	x10, w0
  401918:	cbz	x10, 40193c <parse_argv+0x7c>
  40191c:	mov	w8, wzr
  401920:	mov	w0, w8
  401924:	adrp	x1, 402000 <help+0x50>
  401928:	add	x1, x1, #0x668
  40192c:	ldr	x2, [sp, #16]
  401930:	mov	w3, #0x90                  	// #144
  401934:	ldr	x4, [sp, #8]
  401938:	bl	401188 <log_assert_failed_realm@plt>
  40193c:	ldur	x8, [x29, #-16]
  401940:	cmp	x8, #0x0
  401944:	cset	w9, ne  // ne = any
  401948:	mov	w10, #0x1                   	// #1
  40194c:	eor	w9, w9, #0x1
  401950:	eor	w9, w9, w10
  401954:	eor	w9, w9, w10
  401958:	and	w9, w9, #0x1
  40195c:	mov	w0, w9
  401960:	sxtw	x8, w0
  401964:	cbz	x8, 401988 <parse_argv+0xc8>
  401968:	mov	w8, wzr
  40196c:	mov	w0, w8
  401970:	adrp	x1, 402000 <help+0x50>
  401974:	add	x1, x1, #0x68f
  401978:	ldr	x2, [sp, #16]
  40197c:	mov	w3, #0x91                  	// #145
  401980:	ldr	x4, [sp, #8]
  401984:	bl	401188 <log_assert_failed_realm@plt>
  401988:	ldur	w0, [x29, #-8]
  40198c:	ldur	x1, [x29, #-16]
  401990:	adrp	x2, 402000 <help+0x50>
  401994:	add	x2, x2, #0x694
  401998:	adrp	x3, 402000 <help+0x50>
  40199c:	add	x3, x3, #0x978
  4019a0:	mov	x8, xzr
  4019a4:	mov	x4, x8
  4019a8:	bl	401198 <getopt_long@plt>
  4019ac:	stur	w0, [x29, #-20]
  4019b0:	cmp	w0, #0x0
  4019b4:	cset	w9, lt  // lt = tstop
  4019b8:	tbnz	w9, #0, 401a84 <parse_argv+0x1c4>
  4019bc:	ldur	w8, [x29, #-20]
  4019c0:	cmp	w8, #0x3f
  4019c4:	str	w8, [sp, #4]
  4019c8:	b.eq	401a54 <parse_argv+0x194>  // b.none
  4019cc:	b	4019d0 <parse_argv+0x110>
  4019d0:	ldr	w8, [sp, #4]
  4019d4:	cmp	w8, #0x68
  4019d8:	b.eq	401a10 <parse_argv+0x150>  // b.none
  4019dc:	b	4019e0 <parse_argv+0x120>
  4019e0:	ldr	w8, [sp, #4]
  4019e4:	cmp	w8, #0x100
  4019e8:	b.eq	401a1c <parse_argv+0x15c>  // b.none
  4019ec:	b	4019f0 <parse_argv+0x130>
  4019f0:	ldr	w8, [sp, #4]
  4019f4:	cmp	w8, #0x101
  4019f8:	b.eq	401a28 <parse_argv+0x168>  // b.none
  4019fc:	b	401a00 <parse_argv+0x140>
  401a00:	ldr	w8, [sp, #4]
  401a04:	cmp	w8, #0x102
  401a08:	b.eq	401a3c <parse_argv+0x17c>  // b.none
  401a0c:	b	401a60 <parse_argv+0x1a0>
  401a10:	bl	401fb0 <help>
  401a14:	stur	w0, [x29, #-4]
  401a18:	b	401b44 <parse_argv+0x284>
  401a1c:	bl	4011a8 <version@plt>
  401a20:	stur	w0, [x29, #-4]
  401a24:	b	401b44 <parse_argv+0x284>
  401a28:	mov	w8, #0x1                   	// #1
  401a2c:	adrp	x9, 420000 <__TMC_END__>
  401a30:	add	x9, x9, #0x64
  401a34:	strb	w8, [x9]
  401a38:	b	401a80 <parse_argv+0x1c0>
  401a3c:	adrp	x8, 420000 <__TMC_END__>
  401a40:	add	x8, x8, #0x68
  401a44:	ldr	w9, [x8]
  401a48:	orr	w9, w9, #0x1
  401a4c:	str	w9, [x8]
  401a50:	b	401a80 <parse_argv+0x1c0>
  401a54:	mov	w8, #0xffffffea            	// #-22
  401a58:	stur	w8, [x29, #-4]
  401a5c:	b	401b44 <parse_argv+0x284>
  401a60:	mov	w8, wzr
  401a64:	mov	w0, w8
  401a68:	adrp	x1, 402000 <help+0x50>
  401a6c:	add	x1, x1, #0x696
  401a70:	ldr	x2, [sp, #16]
  401a74:	mov	w3, #0xa9                  	// #169
  401a78:	ldr	x4, [sp, #8]
  401a7c:	bl	4011b8 <log_assert_failed_unreachable_realm@plt>
  401a80:	b	401988 <parse_argv+0xc8>
  401a84:	adrp	x8, 420000 <__TMC_END__>
  401a88:	add	x8, x8, #0x64
  401a8c:	ldrb	w9, [x8]
  401a90:	tbnz	w9, #0, 401a98 <parse_argv+0x1d8>
  401a94:	b	401b3c <parse_argv+0x27c>
  401a98:	ldur	w8, [x29, #-8]
  401a9c:	adrp	x9, 420000 <__TMC_END__>
  401aa0:	add	x9, x9, #0x80
  401aa4:	ldr	w10, [x9]
  401aa8:	cmp	w8, w10
  401aac:	b.le	401b3c <parse_argv+0x27c>
  401ab0:	mov	w8, #0x3                   	// #3
  401ab4:	stur	w8, [x29, #-24]
  401ab8:	mov	w8, #0x16                  	// #22
  401abc:	movk	w8, #0x4000, lsl #16
  401ac0:	stur	w8, [x29, #-28]
  401ac4:	str	wzr, [sp, #32]
  401ac8:	ldr	w0, [sp, #32]
  401acc:	bl	401138 <log_get_max_level_realm@plt>
  401ad0:	ldur	w8, [x29, #-24]
  401ad4:	and	w8, w8, #0x7
  401ad8:	cmp	w0, w8
  401adc:	b.lt	401b14 <parse_argv+0x254>  // b.tstop
  401ae0:	ldr	w8, [sp, #32]
  401ae4:	ldur	w9, [x29, #-24]
  401ae8:	orr	w0, w9, w8, lsl #10
  401aec:	ldur	w1, [x29, #-28]
  401af0:	ldr	x2, [sp, #16]
  401af4:	mov	w3, #0xae                  	// #174
  401af8:	adrp	x4, 402000 <help+0x50>
  401afc:	add	x4, x4, #0x6a7
  401b00:	adrp	x5, 402000 <help+0x50>
  401b04:	add	x5, x5, #0x6b2
  401b08:	bl	401148 <log_internal_realm@plt>
  401b0c:	str	w0, [sp]
  401b10:	b	401b28 <parse_argv+0x268>
  401b14:	ldur	w0, [x29, #-28]
  401b18:	bl	401158 <abs@plt>
  401b1c:	mov	w8, wzr
  401b20:	subs	w8, w8, w0, uxtb
  401b24:	str	w8, [sp]
  401b28:	ldr	w8, [sp]
  401b2c:	str	w8, [sp, #28]
  401b30:	ldr	w8, [sp, #28]
  401b34:	stur	w8, [x29, #-4]
  401b38:	b	401b44 <parse_argv+0x284>
  401b3c:	mov	w8, #0x1                   	// #1
  401b40:	stur	w8, [x29, #-4]
  401b44:	ldur	w0, [x29, #-4]
  401b48:	ldp	x29, x30, [sp, #64]
  401b4c:	add	sp, sp, #0x50
  401b50:	ret

0000000000401b54 <apply_file>:
  401b54:	sub	sp, sp, #0xf0
  401b58:	stp	x29, x30, [sp, #224]
  401b5c:	add	x29, sp, #0xe0
  401b60:	sub	x8, x29, #0x20
  401b64:	mov	x9, xzr
  401b68:	adrp	x10, 402000 <help+0x50>
  401b6c:	add	x10, x10, #0x5e2
  401b70:	add	x10, x10, #0x3
  401b74:	adrp	x11, 402000 <help+0x50>
  401b78:	add	x11, x11, #0x859
  401b7c:	mov	w12, #0x1                   	// #1
  401b80:	str	x0, [x8, #16]
  401b84:	and	w12, w1, w12
  401b88:	sturb	w12, [x29, #-17]
  401b8c:	str	x9, [x8]
  401b90:	str	x8, [sp, #48]
  401b94:	str	x10, [sp, #40]
  401b98:	str	x11, [sp, #32]
  401b9c:	ldr	x8, [sp, #48]
  401ba0:	ldr	x9, [x8, #16]
  401ba4:	cmp	x9, #0x0
  401ba8:	cset	w10, ne  // ne = any
  401bac:	mov	w11, #0x1                   	// #1
  401bb0:	eor	w10, w10, #0x1
  401bb4:	eor	w10, w10, w11
  401bb8:	eor	w10, w10, w11
  401bbc:	and	w10, w10, #0x1
  401bc0:	mov	w0, w10
  401bc4:	sxtw	x9, w0
  401bc8:	cbz	x9, 401bf0 <apply_file+0x9c>
  401bcc:	mov	w8, wzr
  401bd0:	mov	w0, w8
  401bd4:	adrp	x1, 402000 <help+0x50>
  401bd8:	add	x1, x1, #0x82d
  401bdc:	ldr	x2, [sp, #40]
  401be0:	mov	w3, #0x45                  	// #69
  401be4:	adrp	x4, 402000 <help+0x50>
  401be8:	add	x4, x4, #0x832
  401bec:	bl	401188 <log_assert_failed_realm@plt>
  401bf0:	ldr	x8, [sp, #48]
  401bf4:	ldr	x0, [x8, #16]
  401bf8:	sub	x9, x29, #0x58
  401bfc:	str	x0, [sp, #24]
  401c00:	mov	x0, x9
  401c04:	adrp	x1, 420000 <__TMC_END__>
  401c08:	add	x1, x1, #0x30
  401c0c:	mov	x2, #0x30                  	// #48
  401c10:	str	x9, [sp, #16]
  401c14:	bl	401118 <memcpy@plt>
  401c18:	ldr	x0, [sp, #24]
  401c1c:	adrp	x1, 402000 <help+0x50>
  401c20:	add	x1, x1, #0x856
  401c24:	mov	x8, xzr
  401c28:	mov	x2, x8
  401c2c:	ldr	x3, [sp, #16]
  401c30:	sub	x4, x29, #0x20
  401c34:	bl	4011c8 <search_and_fopen@plt>
  401c38:	stur	w0, [x29, #-36]
  401c3c:	ldur	w10, [x29, #-36]
  401c40:	cmp	w10, #0x0
  401c44:	cset	w10, ge  // ge = tcont
  401c48:	tbnz	w10, #0, 401d0c <apply_file+0x1b8>
  401c4c:	ldurb	w8, [x29, #-17]
  401c50:	tbnz	w8, #0, 401c58 <apply_file+0x104>
  401c54:	b	401c78 <apply_file+0x124>
  401c58:	ldur	w8, [x29, #-36]
  401c5c:	mov	w9, #0xfffffffe            	// #-2
  401c60:	cmp	w8, w9
  401c64:	b.ne	401c78 <apply_file+0x124>  // b.any
  401c68:	stur	wzr, [x29, #-4]
  401c6c:	mov	w8, #0x1                   	// #1
  401c70:	stur	w8, [x29, #-92]
  401c74:	b	401f28 <apply_file+0x3d4>
  401c78:	mov	w8, #0x3                   	// #3
  401c7c:	stur	w8, [x29, #-96]
  401c80:	ldur	w8, [x29, #-36]
  401c84:	stur	w8, [x29, #-100]
  401c88:	stur	wzr, [x29, #-104]
  401c8c:	ldur	w0, [x29, #-104]
  401c90:	bl	401138 <log_get_max_level_realm@plt>
  401c94:	ldur	w8, [x29, #-96]
  401c98:	and	w8, w8, #0x7
  401c9c:	cmp	w0, w8
  401ca0:	b.lt	401cdc <apply_file+0x188>  // b.tstop
  401ca4:	ldur	w8, [x29, #-104]
  401ca8:	ldur	w9, [x29, #-96]
  401cac:	orr	w0, w9, w8, lsl #10
  401cb0:	ldur	w1, [x29, #-100]
  401cb4:	ldr	x10, [sp, #48]
  401cb8:	ldr	x6, [x10, #16]
  401cbc:	ldr	x2, [sp, #40]
  401cc0:	mov	w3, #0x4c                  	// #76
  401cc4:	ldr	x4, [sp, #32]
  401cc8:	adrp	x5, 402000 <help+0x50>
  401ccc:	add	x5, x5, #0x864
  401cd0:	bl	401148 <log_internal_realm@plt>
  401cd4:	str	w0, [sp, #12]
  401cd8:	b	401cf0 <apply_file+0x19c>
  401cdc:	ldur	w0, [x29, #-100]
  401ce0:	bl	401158 <abs@plt>
  401ce4:	mov	w8, wzr
  401ce8:	subs	w8, w8, w0, uxtb
  401cec:	str	w8, [sp, #12]
  401cf0:	ldr	w8, [sp, #12]
  401cf4:	stur	w8, [x29, #-108]
  401cf8:	ldur	w8, [x29, #-108]
  401cfc:	stur	w8, [x29, #-4]
  401d00:	mov	w8, #0x1                   	// #1
  401d04:	stur	w8, [x29, #-92]
  401d08:	b	401f28 <apply_file+0x3d4>
  401d0c:	mov	w8, #0x7                   	// #7
  401d10:	str	w8, [sp, #112]
  401d14:	str	wzr, [sp, #108]
  401d18:	str	wzr, [sp, #104]
  401d1c:	ldr	w0, [sp, #104]
  401d20:	bl	401138 <log_get_max_level_realm@plt>
  401d24:	ldr	w8, [sp, #112]
  401d28:	and	w8, w8, #0x7
  401d2c:	cmp	w0, w8
  401d30:	b.lt	401d6c <apply_file+0x218>  // b.tstop
  401d34:	ldr	w8, [sp, #104]
  401d38:	ldr	w9, [sp, #112]
  401d3c:	orr	w0, w9, w8, lsl #10
  401d40:	ldr	w1, [sp, #108]
  401d44:	ldr	x10, [sp, #48]
  401d48:	ldr	x6, [x10, #16]
  401d4c:	ldr	x2, [sp, #40]
  401d50:	mov	w3, #0x4f                  	// #79
  401d54:	ldr	x4, [sp, #32]
  401d58:	adrp	x5, 402000 <help+0x50>
  401d5c:	add	x5, x5, #0x881
  401d60:	bl	401148 <log_internal_realm@plt>
  401d64:	str	w0, [sp, #8]
  401d68:	b	401d80 <apply_file+0x22c>
  401d6c:	ldr	w0, [sp, #108]
  401d70:	bl	401158 <abs@plt>
  401d74:	mov	w8, wzr
  401d78:	subs	w8, w8, w0, uxtb
  401d7c:	str	w8, [sp, #8]
  401d80:	ldr	w8, [sp, #8]
  401d84:	str	w8, [sp, #100]
  401d88:	add	x2, sp, #0x58
  401d8c:	mov	x8, xzr
  401d90:	str	x8, [sp, #88]
  401d94:	ldr	x8, [sp, #48]
  401d98:	ldr	x0, [x8]
  401d9c:	mov	x1, #0x100000              	// #1048576
  401da0:	bl	4020bc <read_line>
  401da4:	str	w0, [sp, #76]
  401da8:	ldr	w9, [sp, #76]
  401dac:	cmp	w9, #0x0
  401db0:	cset	w9, ge  // ge = tcont
  401db4:	tbnz	w9, #0, 401e4c <apply_file+0x2f8>
  401db8:	mov	w8, #0x3                   	// #3
  401dbc:	str	w8, [sp, #72]
  401dc0:	ldr	w8, [sp, #76]
  401dc4:	str	w8, [sp, #68]
  401dc8:	str	wzr, [sp, #64]
  401dcc:	ldr	w0, [sp, #64]
  401dd0:	bl	401138 <log_get_max_level_realm@plt>
  401dd4:	ldr	w8, [sp, #72]
  401dd8:	and	w8, w8, #0x7
  401ddc:	cmp	w0, w8
  401de0:	b.lt	401e1c <apply_file+0x2c8>  // b.tstop
  401de4:	ldr	w8, [sp, #64]
  401de8:	ldr	w9, [sp, #72]
  401dec:	orr	w0, w9, w8, lsl #10
  401df0:	ldr	w1, [sp, #68]
  401df4:	ldr	x10, [sp, #48]
  401df8:	ldr	x6, [x10, #16]
  401dfc:	ldr	x2, [sp, #40]
  401e00:	mov	w3, #0x57                  	// #87
  401e04:	ldr	x4, [sp, #32]
  401e08:	adrp	x5, 402000 <help+0x50>
  401e0c:	add	x5, x5, #0x88b
  401e10:	bl	401148 <log_internal_realm@plt>
  401e14:	str	w0, [sp, #4]
  401e18:	b	401e30 <apply_file+0x2dc>
  401e1c:	ldr	w0, [sp, #68]
  401e20:	bl	401158 <abs@plt>
  401e24:	mov	w8, wzr
  401e28:	subs	w8, w8, w0, uxtb
  401e2c:	str	w8, [sp, #4]
  401e30:	ldr	w8, [sp, #4]
  401e34:	str	w8, [sp, #60]
  401e38:	ldr	w8, [sp, #60]
  401e3c:	stur	w8, [x29, #-4]
  401e40:	mov	w8, #0x1                   	// #1
  401e44:	stur	w8, [x29, #-92]
  401e48:	b	401edc <apply_file+0x388>
  401e4c:	ldr	w8, [sp, #76]
  401e50:	cbnz	w8, 401e60 <apply_file+0x30c>
  401e54:	mov	w8, #0x4                   	// #4
  401e58:	stur	w8, [x29, #-92]
  401e5c:	b	401edc <apply_file+0x388>
  401e60:	ldr	x0, [sp, #88]
  401e64:	bl	4011d8 <strstrip@plt>
  401e68:	str	x0, [sp, #80]
  401e6c:	ldr	x0, [sp, #80]
  401e70:	bl	4020f8 <isempty>
  401e74:	tbnz	w0, #0, 401e7c <apply_file+0x328>
  401e78:	b	401e88 <apply_file+0x334>
  401e7c:	mov	w8, #0x5                   	// #5
  401e80:	stur	w8, [x29, #-92]
  401e84:	b	401edc <apply_file+0x388>
  401e88:	ldr	x8, [sp, #80]
  401e8c:	ldrb	w1, [x8]
  401e90:	adrp	x0, 402000 <help+0x50>
  401e94:	add	x0, x0, #0x8a8
  401e98:	bl	4011e8 <strchr@plt>
  401e9c:	cbz	x0, 401eac <apply_file+0x358>
  401ea0:	mov	w8, #0x5                   	// #5
  401ea4:	stur	w8, [x29, #-92]
  401ea8:	b	401edc <apply_file+0x388>
  401eac:	ldr	x0, [sp, #80]
  401eb0:	bl	402138 <apply_rule>
  401eb4:	str	w0, [sp, #76]
  401eb8:	ldr	w8, [sp, #76]
  401ebc:	cmp	w8, #0x0
  401ec0:	cset	w8, ge  // ge = tcont
  401ec4:	tbnz	w8, #0, 401ed8 <apply_file+0x384>
  401ec8:	ldur	w8, [x29, #-36]
  401ecc:	cbnz	w8, 401ed8 <apply_file+0x384>
  401ed0:	ldr	w8, [sp, #76]
  401ed4:	stur	w8, [x29, #-36]
  401ed8:	stur	wzr, [x29, #-92]
  401edc:	add	x0, sp, #0x58
  401ee0:	bl	40206c <freep>
  401ee4:	ldur	w8, [x29, #-92]
  401ee8:	str	w8, [sp]
  401eec:	cbz	w8, 401f14 <apply_file+0x3c0>
  401ef0:	b	401ef4 <apply_file+0x3a0>
  401ef4:	ldr	w8, [sp]
  401ef8:	cmp	w8, #0x4
  401efc:	b.eq	401f18 <apply_file+0x3c4>  // b.none
  401f00:	b	401f04 <apply_file+0x3b0>
  401f04:	ldr	w8, [sp]
  401f08:	cmp	w8, #0x5
  401f0c:	b.eq	401d88 <apply_file+0x234>  // b.none
  401f10:	b	401f28 <apply_file+0x3d4>
  401f14:	b	401d88 <apply_file+0x234>
  401f18:	ldur	w8, [x29, #-36]
  401f1c:	stur	w8, [x29, #-4]
  401f20:	mov	w8, #0x1                   	// #1
  401f24:	stur	w8, [x29, #-92]
  401f28:	sub	x0, x29, #0x20
  401f2c:	bl	402094 <fclosep>
  401f30:	ldur	w0, [x29, #-4]
  401f34:	ldp	x29, x30, [sp, #224]
  401f38:	add	sp, sp, #0xf0
  401f3c:	ret

0000000000401f40 <strv_freep>:
  401f40:	sub	sp, sp, #0x20
  401f44:	stp	x29, x30, [sp, #16]
  401f48:	add	x29, sp, #0x10
  401f4c:	str	x0, [sp, #8]
  401f50:	ldr	x8, [sp, #8]
  401f54:	ldr	x8, [x8]
  401f58:	cbz	x8, 401f68 <strv_freep+0x28>
  401f5c:	ldr	x8, [sp, #8]
  401f60:	ldr	x0, [x8]
  401f64:	bl	4011f8 <strv_free@plt>
  401f68:	ldp	x29, x30, [sp, #16]
  401f6c:	add	sp, sp, #0x20
  401f70:	ret

0000000000401f74 <write_string_file>:
  401f74:	sub	sp, sp, #0x30
  401f78:	stp	x29, x30, [sp, #32]
  401f7c:	add	x29, sp, #0x20
  401f80:	mov	x8, xzr
  401f84:	stur	x0, [x29, #-8]
  401f88:	str	x1, [sp, #16]
  401f8c:	str	w2, [sp, #12]
  401f90:	ldur	x0, [x29, #-8]
  401f94:	ldr	x1, [sp, #16]
  401f98:	ldr	w2, [sp, #12]
  401f9c:	mov	x3, x8
  401fa0:	bl	401208 <write_string_file_ts@plt>
  401fa4:	ldp	x29, x30, [sp, #32]
  401fa8:	add	sp, sp, #0x30
  401fac:	ret

0000000000401fb0 <help>:
  401fb0:	sub	sp, sp, #0x30
  401fb4:	stp	x29, x30, [sp, #32]
  401fb8:	add	x29, sp, #0x20
  401fbc:	mov	x8, xzr
  401fc0:	adrp	x0, 402000 <help+0x50>
  401fc4:	add	x0, x0, #0x6e9
  401fc8:	adrp	x1, 402000 <help+0x50>
  401fcc:	add	x1, x1, #0x700
  401fd0:	adrp	x9, 402000 <help+0x50>
  401fd4:	add	x9, x9, #0x5e2
  401fd8:	add	x9, x9, #0x3
  401fdc:	add	x2, sp, #0x10
  401fe0:	str	x8, [sp, #16]
  401fe4:	str	x9, [sp]
  401fe8:	bl	401218 <terminal_urlify_man@plt>
  401fec:	str	w0, [sp, #12]
  401ff0:	ldr	w10, [sp, #12]
  401ff4:	cmp	w10, #0x0
  401ff8:	cset	w10, ge  // ge = tcont
  401ffc:	tbnz	w10, #0, 40202c <help+0x7c>
  402000:	mov	w8, wzr
  402004:	mov	w0, w8
  402008:	ldr	x1, [sp]
  40200c:	mov	w2, #0x6f                  	// #111
  402010:	adrp	x3, 402000 <help+0x50>
  402014:	add	x3, x3, #0x647
  402018:	bl	401228 <log_oom_internal@plt>
  40201c:	stur	w0, [x29, #-4]
  402020:	mov	w8, #0x1                   	// #1
  402024:	str	w8, [sp, #8]
  402028:	b	402054 <help+0xa4>
  40202c:	adrp	x8, 420000 <__TMC_END__>
  402030:	add	x8, x8, #0x88
  402034:	ldr	x1, [x8]
  402038:	ldr	x2, [sp, #16]
  40203c:	adrp	x0, 402000 <help+0x50>
  402040:	add	x0, x0, #0x702
  402044:	bl	401238 <printf@plt>
  402048:	stur	wzr, [x29, #-4]
  40204c:	mov	w9, #0x1                   	// #1
  402050:	str	w9, [sp, #8]
  402054:	add	x0, sp, #0x10
  402058:	bl	40206c <freep>
  40205c:	ldur	w0, [x29, #-4]
  402060:	ldp	x29, x30, [sp, #32]
  402064:	add	sp, sp, #0x30
  402068:	ret

000000000040206c <freep>:
  40206c:	sub	sp, sp, #0x20
  402070:	stp	x29, x30, [sp, #16]
  402074:	add	x29, sp, #0x10
  402078:	str	x0, [sp, #8]
  40207c:	ldr	x8, [sp, #8]
  402080:	ldr	x0, [x8]
  402084:	bl	401248 <free@plt>
  402088:	ldp	x29, x30, [sp, #16]
  40208c:	add	sp, sp, #0x20
  402090:	ret

0000000000402094 <fclosep>:
  402094:	sub	sp, sp, #0x20
  402098:	stp	x29, x30, [sp, #16]
  40209c:	add	x29, sp, #0x10
  4020a0:	str	x0, [sp, #8]
  4020a4:	ldr	x8, [sp, #8]
  4020a8:	ldr	x0, [x8]
  4020ac:	bl	401258 <safe_fclose@plt>
  4020b0:	ldp	x29, x30, [sp, #16]
  4020b4:	add	sp, sp, #0x20
  4020b8:	ret

00000000004020bc <read_line>:
  4020bc:	sub	sp, sp, #0x30
  4020c0:	stp	x29, x30, [sp, #32]
  4020c4:	add	x29, sp, #0x20
  4020c8:	mov	w8, wzr
  4020cc:	stur	x0, [x29, #-8]
  4020d0:	str	x1, [sp, #16]
  4020d4:	str	x2, [sp, #8]
  4020d8:	ldur	x0, [x29, #-8]
  4020dc:	ldr	x1, [sp, #16]
  4020e0:	ldr	x3, [sp, #8]
  4020e4:	mov	w2, w8
  4020e8:	bl	401268 <read_line_full@plt>
  4020ec:	ldp	x29, x30, [sp, #32]
  4020f0:	add	sp, sp, #0x30
  4020f4:	ret

00000000004020f8 <isempty>:
  4020f8:	sub	sp, sp, #0x10
  4020fc:	str	x0, [sp, #8]
  402100:	ldr	x8, [sp, #8]
  402104:	mov	w9, #0x1                   	// #1
  402108:	str	w9, [sp, #4]
  40210c:	cbz	x8, 402128 <isempty+0x30>
  402110:	ldr	x8, [sp, #8]
  402114:	ldrb	w9, [x8]
  402118:	cmp	w9, #0x0
  40211c:	cset	w9, ne  // ne = any
  402120:	eor	w9, w9, #0x1
  402124:	str	w9, [sp, #4]
  402128:	ldr	w8, [sp, #4]
  40212c:	and	w0, w8, #0x1
  402130:	add	sp, sp, #0x10
  402134:	ret

0000000000402138 <apply_rule>:
  402138:	sub	sp, sp, #0x60
  40213c:	stp	x29, x30, [sp, #80]
  402140:	add	x29, sp, #0x50
  402144:	adrp	x8, 402000 <help+0x50>
  402148:	add	x8, x8, #0x8ab
  40214c:	mov	w2, #0x20                  	// #32
  402150:	adrp	x9, 402000 <help+0x50>
  402154:	add	x9, x9, #0x5e2
  402158:	add	x9, x9, #0x3
  40215c:	stur	x0, [x29, #-16]
  402160:	ldur	x0, [x29, #-16]
  402164:	str	x8, [sp, #32]
  402168:	str	w2, [sp, #28]
  40216c:	str	x9, [sp, #16]
  402170:	bl	402238 <delete_rule>
  402174:	ldur	x1, [x29, #-16]
  402178:	ldr	x8, [sp, #32]
  40217c:	mov	x0, x8
  402180:	ldr	w2, [sp, #28]
  402184:	bl	401f74 <write_string_file>
  402188:	stur	w0, [x29, #-20]
  40218c:	ldur	w10, [x29, #-20]
  402190:	cmp	w10, #0x0
  402194:	cset	w10, ge  // ge = tcont
  402198:	tbnz	w10, #0, 402224 <apply_rule+0xec>
  40219c:	mov	w8, #0x3                   	// #3
  4021a0:	stur	w8, [x29, #-24]
  4021a4:	ldur	w8, [x29, #-20]
  4021a8:	stur	w8, [x29, #-28]
  4021ac:	stur	wzr, [x29, #-32]
  4021b0:	ldur	w0, [x29, #-32]
  4021b4:	bl	401138 <log_get_max_level_realm@plt>
  4021b8:	ldur	w8, [x29, #-24]
  4021bc:	and	w8, w8, #0x7
  4021c0:	cmp	w0, w8
  4021c4:	b.lt	4021fc <apply_rule+0xc4>  // b.tstop
  4021c8:	ldur	w8, [x29, #-32]
  4021cc:	ldur	w9, [x29, #-24]
  4021d0:	orr	w0, w9, w8, lsl #10
  4021d4:	ldur	w1, [x29, #-28]
  4021d8:	ldr	x2, [sp, #16]
  4021dc:	mov	w3, #0x3c                  	// #60
  4021e0:	adrp	x4, 402000 <help+0x50>
  4021e4:	add	x4, x4, #0x8cd
  4021e8:	adrp	x5, 402000 <help+0x50>
  4021ec:	add	x5, x5, #0x8d8
  4021f0:	bl	401148 <log_internal_realm@plt>
  4021f4:	str	w0, [sp, #12]
  4021f8:	b	402210 <apply_rule+0xd8>
  4021fc:	ldur	w0, [x29, #-28]
  402200:	bl	401158 <abs@plt>
  402204:	mov	w8, wzr
  402208:	subs	w8, w8, w0, uxtb
  40220c:	str	w8, [sp, #12]
  402210:	ldr	w8, [sp, #12]
  402214:	stur	w8, [x29, #-36]
  402218:	ldur	w8, [x29, #-36]
  40221c:	stur	w8, [x29, #-4]
  402220:	b	402228 <apply_rule+0xf0>
  402224:	stur	wzr, [x29, #-4]
  402228:	ldur	w0, [x29, #-4]
  40222c:	ldp	x29, x30, [sp, #80]
  402230:	add	sp, sp, #0x60
  402234:	ret

0000000000402238 <delete_rule>:
  402238:	sub	sp, sp, #0x70
  40223c:	stp	x29, x30, [sp, #96]
  402240:	add	x29, sp, #0x60
  402244:	mov	x8, xzr
  402248:	adrp	x9, 402000 <help+0x50>
  40224c:	add	x9, x9, #0x5e2
  402250:	add	x9, x9, #0x3
  402254:	adrp	x10, 402000 <help+0x50>
  402258:	add	x10, x10, #0x923
  40225c:	stur	x0, [x29, #-16]
  402260:	stur	x8, [x29, #-24]
  402264:	stur	x8, [x29, #-32]
  402268:	str	x9, [sp, #24]
  40226c:	str	x10, [sp, #16]
  402270:	ldur	x8, [x29, #-16]
  402274:	cmp	x8, #0x0
  402278:	cset	w9, ne  // ne = any
  40227c:	mov	w10, #0x1                   	// #1
  402280:	eor	w9, w9, #0x1
  402284:	eor	w9, w9, w10
  402288:	eor	w9, w9, w10
  40228c:	and	w9, w9, #0x1
  402290:	mov	w0, w9
  402294:	sxtw	x8, w0
  402298:	cbz	x8, 4022c0 <delete_rule+0x88>
  40229c:	mov	w8, wzr
  4022a0:	mov	w0, w8
  4022a4:	adrp	x1, 402000 <help+0x50>
  4022a8:	add	x1, x1, #0x8f8
  4022ac:	ldr	x2, [sp, #24]
  4022b0:	mov	w3, #0x20                  	// #32
  4022b4:	adrp	x4, 402000 <help+0x50>
  4022b8:	add	x4, x4, #0x8fd
  4022bc:	bl	401188 <log_assert_failed_realm@plt>
  4022c0:	ldur	x8, [x29, #-16]
  4022c4:	ldrb	w9, [x8]
  4022c8:	cmp	w9, #0x0
  4022cc:	cset	w9, ne  // ne = any
  4022d0:	mov	w10, #0x1                   	// #1
  4022d4:	eor	w9, w9, #0x1
  4022d8:	eor	w9, w9, w10
  4022dc:	eor	w9, w9, w10
  4022e0:	and	w9, w9, #0x1
  4022e4:	mov	w0, w9
  4022e8:	sxtw	x8, w0
  4022ec:	cbz	x8, 402314 <delete_rule+0xdc>
  4022f0:	mov	w8, wzr
  4022f4:	mov	w0, w8
  4022f8:	adrp	x1, 402000 <help+0x50>
  4022fc:	add	x1, x1, #0x91b
  402300:	ldr	x2, [sp, #24]
  402304:	mov	w3, #0x21                  	// #33
  402308:	adrp	x4, 402000 <help+0x50>
  40230c:	add	x4, x4, #0x8fd
  402310:	bl	401188 <log_assert_failed_realm@plt>
  402314:	ldur	x0, [x29, #-16]
  402318:	bl	401278 <strdup@plt>
  40231c:	stur	x0, [x29, #-24]
  402320:	ldur	x8, [x29, #-24]
  402324:	cbnz	x8, 402350 <delete_rule+0x118>
  402328:	mov	w8, wzr
  40232c:	mov	w0, w8
  402330:	ldr	x1, [sp, #24]
  402334:	mov	w2, #0x25                  	// #37
  402338:	ldr	x3, [sp, #16]
  40233c:	bl	401228 <log_oom_internal@plt>
  402340:	stur	w0, [x29, #-4]
  402344:	mov	w8, #0x1                   	// #1
  402348:	stur	w8, [x29, #-44]
  40234c:	b	40248c <delete_rule+0x254>
  402350:	ldur	x8, [x29, #-24]
  402354:	add	x0, x8, #0x1
  402358:	ldur	x8, [x29, #-24]
  40235c:	ldrb	w1, [x8]
  402360:	bl	401288 <strchrnul@plt>
  402364:	stur	x0, [x29, #-40]
  402368:	ldur	x8, [x29, #-40]
  40236c:	mov	w9, #0x0                   	// #0
  402370:	strb	w9, [x8]
  402374:	ldur	x8, [x29, #-24]
  402378:	add	x0, x8, #0x1
  40237c:	bl	401298 <filename_is_valid@plt>
  402380:	tbnz	w0, #0, 40241c <delete_rule+0x1e4>
  402384:	mov	w8, #0x3                   	// #3
  402388:	str	w8, [sp, #48]
  40238c:	mov	w8, #0x16                  	// #22
  402390:	movk	w8, #0x4000, lsl #16
  402394:	str	w8, [sp, #44]
  402398:	str	wzr, [sp, #40]
  40239c:	ldr	w0, [sp, #40]
  4023a0:	bl	401138 <log_get_max_level_realm@plt>
  4023a4:	ldr	w8, [sp, #48]
  4023a8:	and	w8, w8, #0x7
  4023ac:	cmp	w0, w8
  4023b0:	b.lt	4023ec <delete_rule+0x1b4>  // b.tstop
  4023b4:	ldr	w8, [sp, #40]
  4023b8:	ldr	w9, [sp, #48]
  4023bc:	orr	w0, w9, w8, lsl #10
  4023c0:	ldr	w1, [sp, #44]
  4023c4:	ldur	x10, [x29, #-24]
  4023c8:	add	x6, x10, #0x1
  4023cc:	ldr	x2, [sp, #24]
  4023d0:	mov	w3, #0x2c                  	// #44
  4023d4:	ldr	x4, [sp, #16]
  4023d8:	adrp	x5, 402000 <help+0x50>
  4023dc:	add	x5, x5, #0x92f
  4023e0:	bl	401148 <log_internal_realm@plt>
  4023e4:	str	w0, [sp, #12]
  4023e8:	b	402400 <delete_rule+0x1c8>
  4023ec:	ldr	w0, [sp, #44]
  4023f0:	bl	401158 <abs@plt>
  4023f4:	mov	w8, wzr
  4023f8:	subs	w8, w8, w0, uxtb
  4023fc:	str	w8, [sp, #12]
  402400:	ldr	w8, [sp, #12]
  402404:	str	w8, [sp, #36]
  402408:	ldr	w8, [sp, #36]
  40240c:	stur	w8, [x29, #-4]
  402410:	mov	w8, #0x1                   	// #1
  402414:	stur	w8, [x29, #-44]
  402418:	b	40248c <delete_rule+0x254>
  40241c:	ldur	x8, [x29, #-24]
  402420:	add	x1, x8, #0x1
  402424:	adrp	x0, 402000 <help+0x50>
  402428:	add	x0, x0, #0x95b
  40242c:	mov	x8, #0xffffffffffffffff    	// #-1
  402430:	mov	x2, x8
  402434:	bl	4012a8 <path_join_internal@plt>
  402438:	stur	x0, [x29, #-32]
  40243c:	ldur	x8, [x29, #-32]
  402440:	cbnz	x8, 40246c <delete_rule+0x234>
  402444:	mov	w8, wzr
  402448:	mov	w0, w8
  40244c:	ldr	x1, [sp, #24]
  402450:	mov	w2, #0x30                  	// #48
  402454:	ldr	x3, [sp, #16]
  402458:	bl	401228 <log_oom_internal@plt>
  40245c:	stur	w0, [x29, #-4]
  402460:	mov	w8, #0x1                   	// #1
  402464:	stur	w8, [x29, #-44]
  402468:	b	40248c <delete_rule+0x254>
  40246c:	ldur	x0, [x29, #-32]
  402470:	adrp	x1, 402000 <help+0x50>
  402474:	add	x1, x1, #0x644
  402478:	mov	w2, #0x20                  	// #32
  40247c:	bl	401f74 <write_string_file>
  402480:	stur	w0, [x29, #-4]
  402484:	mov	w8, #0x1                   	// #1
  402488:	stur	w8, [x29, #-44]
  40248c:	sub	x0, x29, #0x20
  402490:	bl	40206c <freep>
  402494:	sub	x0, x29, #0x18
  402498:	bl	40206c <freep>
  40249c:	ldur	w0, [x29, #-4]
  4024a0:	ldp	x29, x30, [sp, #96]
  4024a4:	add	sp, sp, #0x70
  4024a8:	ret

00000000004024ac <ALIGN_TO>:
  4024ac:	sub	sp, sp, #0x10
  4024b0:	str	x0, [sp, #8]
  4024b4:	str	x1, [sp]
  4024b8:	ldr	x8, [sp, #8]
  4024bc:	ldr	x9, [sp]
  4024c0:	add	x8, x8, x9
  4024c4:	subs	x8, x8, #0x1
  4024c8:	ldr	x9, [sp]
  4024cc:	subs	x9, x9, #0x1
  4024d0:	bic	x0, x8, x9
  4024d4:	add	sp, sp, #0x10
  4024d8:	ret
  4024dc:	udf	#0

00000000004024e0 <__libc_csu_init>:
  4024e0:	stp	x29, x30, [sp, #-64]!
  4024e4:	mov	x29, sp
  4024e8:	stp	x19, x20, [sp, #16]
  4024ec:	adrp	x20, 41f000 <__FRAME_END__+0x1c4f8>
  4024f0:	add	x20, x20, #0xc90
  4024f4:	stp	x21, x22, [sp, #32]
  4024f8:	adrp	x21, 41f000 <__FRAME_END__+0x1c4f8>
  4024fc:	add	x21, x21, #0xc88
  402500:	sub	x20, x20, x21
  402504:	mov	w22, w0
  402508:	stp	x23, x24, [sp, #48]
  40250c:	mov	x23, x1
  402510:	mov	x24, x2
  402514:	bl	401050 <_init>
  402518:	cmp	xzr, x20, asr #3
  40251c:	b.eq	402548 <__libc_csu_init+0x68>  // b.none
  402520:	asr	x20, x20, #3
  402524:	mov	x19, #0x0                   	// #0
  402528:	ldr	x3, [x21, x19, lsl #3]
  40252c:	mov	x2, x24
  402530:	add	x19, x19, #0x1
  402534:	mov	x1, x23
  402538:	mov	w0, w22
  40253c:	blr	x3
  402540:	cmp	x20, x19
  402544:	b.ne	402528 <__libc_csu_init+0x48>  // b.any
  402548:	ldp	x19, x20, [sp, #16]
  40254c:	ldp	x21, x22, [sp, #32]
  402550:	ldp	x23, x24, [sp, #48]
  402554:	ldp	x29, x30, [sp], #64
  402558:	ret
  40255c:	nop

0000000000402560 <__libc_csu_fini>:
  402560:	ret

Disassembly of section .fini:

0000000000402564 <_fini>:
  402564:	stp	x29, x30, [sp, #-16]!
  402568:	mov	x29, sp
  40256c:	ldp	x29, x30, [sp], #16
  402570:	ret
