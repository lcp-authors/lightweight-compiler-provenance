
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x11edc>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xd4>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	nop
    1068:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    106c:	add	x0, x0, #0x1e8
    1070:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    1074:	add	x1, x1, #0x1e8
    1078:	cmp	x1, x0
    107c:	b.eq	1094 <ioctl@plt+0x54>  // b.none
    1080:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1084:	ldr	x1, [x1, #4000]
    1088:	cbz	x1, 1094 <ioctl@plt+0x54>
    108c:	mov	x16, x1
    1090:	br	x16
    1094:	ret
    1098:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    109c:	add	x0, x0, #0x1e8
    10a0:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    10a4:	add	x1, x1, #0x1e8
    10a8:	sub	x1, x1, x0
    10ac:	lsr	x2, x1, #63
    10b0:	add	x1, x2, x1, asr #3
    10b4:	cmp	xzr, x1, asr #1
    10b8:	asr	x1, x1, #1
    10bc:	b.eq	10d4 <ioctl@plt+0x94>  // b.none
    10c0:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x11edc>
    10c4:	ldr	x2, [x2, #4064]
    10c8:	cbz	x2, 10d4 <ioctl@plt+0x94>
    10cc:	mov	x16, x2
    10d0:	br	x16
    10d4:	ret
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x29, sp
    10e0:	str	x19, [sp, #16]
    10e4:	adrp	x19, 14000 <PyInit_fcntl@@Base+0x12edc>
    10e8:	ldrb	w0, [x19, #488]
    10ec:	cbnz	w0, 1114 <ioctl@plt+0xd4>
    10f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    10f4:	ldr	x0, [x0, #4016]
    10f8:	cbz	x0, 1108 <ioctl@plt+0xc8>
    10fc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1100:	ldr	x0, [x0, #216]
    1104:	bl	ef0 <__cxa_finalize@plt>
    1108:	bl	1068 <ioctl@plt+0x28>
    110c:	mov	w0, #0x1                   	// #1
    1110:	strb	w0, [x19, #488]
    1114:	ldr	x19, [sp, #16]
    1118:	ldp	x29, x30, [sp], #32
    111c:	ret
    1120:	b	1098 <ioctl@plt+0x58>

0000000000001124 <PyInit_fcntl@@Base>:
    1124:	sub	sp, sp, #0x20
    1128:	stp	x29, x30, [sp, #16]
    112c:	add	x29, sp, #0x10
    1130:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1134:	add	x0, x0, #0xe0
    1138:	mov	w1, #0x3f5                 	// #1013
    113c:	bl	fa0 <PyModule_Create2@plt>
    1140:	str	x0, [sp]
    1144:	ldr	x8, [sp]
    1148:	cbnz	x8, 1158 <PyInit_fcntl@@Base+0x34>
    114c:	mov	x8, xzr
    1150:	str	x8, [sp, #8]
    1154:	b	1180 <PyInit_fcntl@@Base+0x5c>
    1158:	ldr	x0, [sp]
    115c:	bl	1190 <PyInit_fcntl@@Base+0x6c>
    1160:	cmp	w0, #0x0
    1164:	cset	w8, ge  // ge = tcont
    1168:	tbnz	w8, #0, 1178 <PyInit_fcntl@@Base+0x54>
    116c:	mov	x8, xzr
    1170:	str	x8, [sp, #8]
    1174:	b	1180 <PyInit_fcntl@@Base+0x5c>
    1178:	ldr	x8, [sp]
    117c:	str	x8, [sp, #8]
    1180:	ldr	x0, [sp, #8]
    1184:	ldp	x29, x30, [sp, #16]
    1188:	add	sp, sp, #0x20
    118c:	ret
    1190:	sub	sp, sp, #0x20
    1194:	stp	x29, x30, [sp, #16]
    1198:	add	x29, sp, #0x10
    119c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11a0:	add	x1, x1, #0x8e6
    11a4:	mov	x2, #0x1                   	// #1
    11a8:	str	x0, [sp]
    11ac:	ldr	x0, [sp]
    11b0:	bl	eb0 <PyModule_AddIntConstant@plt>
    11b4:	cbz	w0, 11c4 <PyInit_fcntl@@Base+0xa0>
    11b8:	mov	w8, #0xffffffff            	// #-1
    11bc:	stur	w8, [x29, #-4]
    11c0:	b	1848 <PyInit_fcntl@@Base+0x724>
    11c4:	ldr	x0, [sp]
    11c8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11cc:	add	x1, x1, #0x8ee
    11d0:	mov	x2, #0x2                   	// #2
    11d4:	bl	eb0 <PyModule_AddIntConstant@plt>
    11d8:	cbz	w0, 11e8 <PyInit_fcntl@@Base+0xc4>
    11dc:	mov	w8, #0xffffffff            	// #-1
    11e0:	stur	w8, [x29, #-4]
    11e4:	b	1848 <PyInit_fcntl@@Base+0x724>
    11e8:	ldr	x0, [sp]
    11ec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11f0:	add	x1, x1, #0x8f6
    11f4:	mov	x2, #0x4                   	// #4
    11f8:	bl	eb0 <PyModule_AddIntConstant@plt>
    11fc:	cbz	w0, 120c <PyInit_fcntl@@Base+0xe8>
    1200:	mov	w8, #0xffffffff            	// #-1
    1204:	stur	w8, [x29, #-4]
    1208:	b	1848 <PyInit_fcntl@@Base+0x724>
    120c:	ldr	x0, [sp]
    1210:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1214:	add	x1, x1, #0x8fe
    1218:	mov	x2, #0x8                   	// #8
    121c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1220:	cbz	w0, 1230 <PyInit_fcntl@@Base+0x10c>
    1224:	mov	w8, #0xffffffff            	// #-1
    1228:	stur	w8, [x29, #-4]
    122c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1230:	ldr	x0, [sp]
    1234:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1238:	add	x1, x1, #0x906
    123c:	mov	x2, #0x20                  	// #32
    1240:	bl	eb0 <PyModule_AddIntConstant@plt>
    1244:	cbz	w0, 1254 <PyInit_fcntl@@Base+0x130>
    1248:	mov	w8, #0xffffffff            	// #-1
    124c:	stur	w8, [x29, #-4]
    1250:	b	1848 <PyInit_fcntl@@Base+0x724>
    1254:	ldr	x0, [sp]
    1258:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    125c:	add	x1, x1, #0x910
    1260:	mov	x2, #0x40                  	// #64
    1264:	bl	eb0 <PyModule_AddIntConstant@plt>
    1268:	cbz	w0, 1278 <PyInit_fcntl@@Base+0x154>
    126c:	mov	w8, #0xffffffff            	// #-1
    1270:	stur	w8, [x29, #-4]
    1274:	b	1848 <PyInit_fcntl@@Base+0x724>
    1278:	ldr	x0, [sp]
    127c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1280:	add	x1, x1, #0x91a
    1284:	mov	x2, #0x80                  	// #128
    1288:	bl	eb0 <PyModule_AddIntConstant@plt>
    128c:	cbz	w0, 129c <PyInit_fcntl@@Base+0x178>
    1290:	mov	w8, #0xffffffff            	// #-1
    1294:	stur	w8, [x29, #-4]
    1298:	b	1848 <PyInit_fcntl@@Base+0x724>
    129c:	ldr	x0, [sp]
    12a0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12a4:	add	x1, x1, #0x925
    12a8:	mov	x2, #0xc0                  	// #192
    12ac:	bl	eb0 <PyModule_AddIntConstant@plt>
    12b0:	cbz	w0, 12c0 <PyInit_fcntl@@Base+0x19c>
    12b4:	mov	w8, #0xffffffff            	// #-1
    12b8:	stur	w8, [x29, #-4]
    12bc:	b	1848 <PyInit_fcntl@@Base+0x724>
    12c0:	ldr	x0, [sp]
    12c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12c8:	add	x1, x1, #0x92d
    12cc:	mov	x8, xzr
    12d0:	mov	x2, x8
    12d4:	bl	eb0 <PyModule_AddIntConstant@plt>
    12d8:	cbz	w0, 12e8 <PyInit_fcntl@@Base+0x1c4>
    12dc:	mov	w8, #0xffffffff            	// #-1
    12e0:	stur	w8, [x29, #-4]
    12e4:	b	1848 <PyInit_fcntl@@Base+0x724>
    12e8:	ldr	x0, [sp]
    12ec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12f0:	add	x1, x1, #0x935
    12f4:	mov	x2, #0x406                 	// #1030
    12f8:	bl	eb0 <PyModule_AddIntConstant@plt>
    12fc:	cbz	w0, 130c <PyInit_fcntl@@Base+0x1e8>
    1300:	mov	w8, #0xffffffff            	// #-1
    1304:	stur	w8, [x29, #-4]
    1308:	b	1848 <PyInit_fcntl@@Base+0x724>
    130c:	ldr	x0, [sp]
    1310:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1314:	add	x1, x1, #0x945
    1318:	mov	x2, #0x1                   	// #1
    131c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1320:	cbz	w0, 1330 <PyInit_fcntl@@Base+0x20c>
    1324:	mov	w8, #0xffffffff            	// #-1
    1328:	stur	w8, [x29, #-4]
    132c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1330:	ldr	x0, [sp]
    1334:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1338:	add	x1, x1, #0x94d
    133c:	mov	x2, #0x2                   	// #2
    1340:	bl	eb0 <PyModule_AddIntConstant@plt>
    1344:	cbz	w0, 1354 <PyInit_fcntl@@Base+0x230>
    1348:	mov	w8, #0xffffffff            	// #-1
    134c:	stur	w8, [x29, #-4]
    1350:	b	1848 <PyInit_fcntl@@Base+0x724>
    1354:	ldr	x0, [sp]
    1358:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    135c:	add	x1, x1, #0x955
    1360:	mov	x2, #0x3                   	// #3
    1364:	bl	eb0 <PyModule_AddIntConstant@plt>
    1368:	cbz	w0, 1378 <PyInit_fcntl@@Base+0x254>
    136c:	mov	w8, #0xffffffff            	// #-1
    1370:	stur	w8, [x29, #-4]
    1374:	b	1848 <PyInit_fcntl@@Base+0x724>
    1378:	ldr	x0, [sp]
    137c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1380:	add	x1, x1, #0x95d
    1384:	mov	x2, #0x4                   	// #4
    1388:	bl	eb0 <PyModule_AddIntConstant@plt>
    138c:	cbz	w0, 139c <PyInit_fcntl@@Base+0x278>
    1390:	mov	w8, #0xffffffff            	// #-1
    1394:	stur	w8, [x29, #-4]
    1398:	b	1848 <PyInit_fcntl@@Base+0x724>
    139c:	ldr	x0, [sp]
    13a0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13a4:	add	x1, x1, #0x965
    13a8:	mov	x2, #0x5                   	// #5
    13ac:	bl	eb0 <PyModule_AddIntConstant@plt>
    13b0:	cbz	w0, 13c0 <PyInit_fcntl@@Base+0x29c>
    13b4:	mov	w8, #0xffffffff            	// #-1
    13b8:	stur	w8, [x29, #-4]
    13bc:	b	1848 <PyInit_fcntl@@Base+0x724>
    13c0:	ldr	x0, [sp]
    13c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13c8:	add	x1, x1, #0x96d
    13cc:	mov	x2, #0x6                   	// #6
    13d0:	bl	eb0 <PyModule_AddIntConstant@plt>
    13d4:	cbz	w0, 13e4 <PyInit_fcntl@@Base+0x2c0>
    13d8:	mov	w8, #0xffffffff            	// #-1
    13dc:	stur	w8, [x29, #-4]
    13e0:	b	1848 <PyInit_fcntl@@Base+0x724>
    13e4:	ldr	x0, [sp]
    13e8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13ec:	add	x1, x1, #0x975
    13f0:	mov	x2, #0x7                   	// #7
    13f4:	bl	eb0 <PyModule_AddIntConstant@plt>
    13f8:	cbz	w0, 1408 <PyInit_fcntl@@Base+0x2e4>
    13fc:	mov	w8, #0xffffffff            	// #-1
    1400:	stur	w8, [x29, #-4]
    1404:	b	1848 <PyInit_fcntl@@Base+0x724>
    1408:	ldr	x0, [sp]
    140c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1410:	add	x1, x1, #0x97e
    1414:	mov	x2, #0x9                   	// #9
    1418:	bl	eb0 <PyModule_AddIntConstant@plt>
    141c:	cbz	w0, 142c <PyInit_fcntl@@Base+0x308>
    1420:	mov	w8, #0xffffffff            	// #-1
    1424:	stur	w8, [x29, #-4]
    1428:	b	1848 <PyInit_fcntl@@Base+0x724>
    142c:	ldr	x0, [sp]
    1430:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1434:	add	x1, x1, #0x987
    1438:	mov	x2, #0x8                   	// #8
    143c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1440:	cbz	w0, 1450 <PyInit_fcntl@@Base+0x32c>
    1444:	mov	w8, #0xffffffff            	// #-1
    1448:	stur	w8, [x29, #-4]
    144c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1450:	ldr	x0, [sp]
    1454:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1458:	add	x1, x1, #0x990
    145c:	mov	x2, #0xb                   	// #11
    1460:	bl	eb0 <PyModule_AddIntConstant@plt>
    1464:	cbz	w0, 1474 <PyInit_fcntl@@Base+0x350>
    1468:	mov	w8, #0xffffffff            	// #-1
    146c:	stur	w8, [x29, #-4]
    1470:	b	1848 <PyInit_fcntl@@Base+0x724>
    1474:	ldr	x0, [sp]
    1478:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    147c:	add	x1, x1, #0x999
    1480:	mov	x2, #0xa                   	// #10
    1484:	bl	eb0 <PyModule_AddIntConstant@plt>
    1488:	cbz	w0, 1498 <PyInit_fcntl@@Base+0x374>
    148c:	mov	w8, #0xffffffff            	// #-1
    1490:	stur	w8, [x29, #-4]
    1494:	b	1848 <PyInit_fcntl@@Base+0x724>
    1498:	ldr	x0, [sp]
    149c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14a0:	add	x1, x1, #0x9a2
    14a4:	mov	x8, xzr
    14a8:	mov	x2, x8
    14ac:	bl	eb0 <PyModule_AddIntConstant@plt>
    14b0:	cbz	w0, 14c0 <PyInit_fcntl@@Base+0x39c>
    14b4:	mov	w8, #0xffffffff            	// #-1
    14b8:	stur	w8, [x29, #-4]
    14bc:	b	1848 <PyInit_fcntl@@Base+0x724>
    14c0:	ldr	x0, [sp]
    14c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14c8:	add	x1, x1, #0x9aa
    14cc:	mov	x2, #0x1                   	// #1
    14d0:	bl	eb0 <PyModule_AddIntConstant@plt>
    14d4:	cbz	w0, 14e4 <PyInit_fcntl@@Base+0x3c0>
    14d8:	mov	w8, #0xffffffff            	// #-1
    14dc:	stur	w8, [x29, #-4]
    14e0:	b	1848 <PyInit_fcntl@@Base+0x724>
    14e4:	ldr	x0, [sp]
    14e8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14ec:	add	x1, x1, #0x9b2
    14f0:	mov	x2, #0x2                   	// #2
    14f4:	bl	eb0 <PyModule_AddIntConstant@plt>
    14f8:	cbz	w0, 1508 <PyInit_fcntl@@Base+0x3e4>
    14fc:	mov	w8, #0xffffffff            	// #-1
    1500:	stur	w8, [x29, #-4]
    1504:	b	1848 <PyInit_fcntl@@Base+0x724>
    1508:	ldr	x0, [sp]
    150c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1510:	add	x1, x1, #0x9ba
    1514:	mov	x2, #0x5                   	// #5
    1518:	bl	eb0 <PyModule_AddIntConstant@plt>
    151c:	cbz	w0, 152c <PyInit_fcntl@@Base+0x408>
    1520:	mov	w8, #0xffffffff            	// #-1
    1524:	stur	w8, [x29, #-4]
    1528:	b	1848 <PyInit_fcntl@@Base+0x724>
    152c:	ldr	x0, [sp]
    1530:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1534:	add	x1, x1, #0x9c4
    1538:	mov	x2, #0x6                   	// #6
    153c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1540:	cbz	w0, 1550 <PyInit_fcntl@@Base+0x42c>
    1544:	mov	w8, #0xffffffff            	// #-1
    1548:	stur	w8, [x29, #-4]
    154c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1550:	ldr	x0, [sp]
    1554:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1558:	add	x1, x1, #0x9ce
    155c:	mov	x2, #0x7                   	// #7
    1560:	bl	eb0 <PyModule_AddIntConstant@plt>
    1564:	cbz	w0, 1574 <PyInit_fcntl@@Base+0x450>
    1568:	mov	w8, #0xffffffff            	// #-1
    156c:	stur	w8, [x29, #-4]
    1570:	b	1848 <PyInit_fcntl@@Base+0x724>
    1574:	ldr	x0, [sp]
    1578:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    157c:	add	x1, x1, #0x9d9
    1580:	mov	x2, #0x2000                	// #8192
    1584:	bl	eb0 <PyModule_AddIntConstant@plt>
    1588:	cbz	w0, 1598 <PyInit_fcntl@@Base+0x474>
    158c:	mov	w8, #0xffffffff            	// #-1
    1590:	stur	w8, [x29, #-4]
    1594:	b	1848 <PyInit_fcntl@@Base+0x724>
    1598:	ldr	x0, [sp]
    159c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    15a0:	add	x1, x1, #0x9e0
    15a4:	mov	x2, #0x400                 	// #1024
    15a8:	bl	eb0 <PyModule_AddIntConstant@plt>
    15ac:	cbz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    15b0:	mov	w8, #0xffffffff            	// #-1
    15b4:	stur	w8, [x29, #-4]
    15b8:	b	1848 <PyInit_fcntl@@Base+0x724>
    15bc:	ldr	x0, [sp]
    15c0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    15c4:	add	x1, x1, #0x9eb
    15c8:	mov	x2, #0x401                 	// #1025
    15cc:	bl	eb0 <PyModule_AddIntConstant@plt>
    15d0:	cbz	w0, 15e0 <PyInit_fcntl@@Base+0x4bc>
    15d4:	mov	w8, #0xffffffff            	// #-1
    15d8:	stur	w8, [x29, #-4]
    15dc:	b	1848 <PyInit_fcntl@@Base+0x724>
    15e0:	ldr	x0, [sp]
    15e4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    15e8:	add	x1, x1, #0x9f6
    15ec:	mov	x2, #0x402                 	// #1026
    15f0:	bl	eb0 <PyModule_AddIntConstant@plt>
    15f4:	cbz	w0, 1604 <PyInit_fcntl@@Base+0x4e0>
    15f8:	mov	w8, #0xffffffff            	// #-1
    15fc:	stur	w8, [x29, #-4]
    1600:	b	1848 <PyInit_fcntl@@Base+0x724>
    1604:	ldr	x0, [sp]
    1608:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    160c:	add	x1, x1, #0x9ff
    1610:	mov	x2, #0x4                   	// #4
    1614:	bl	eb0 <PyModule_AddIntConstant@plt>
    1618:	cbz	w0, 1628 <PyInit_fcntl@@Base+0x504>
    161c:	mov	w8, #0xffffffff            	// #-1
    1620:	stur	w8, [x29, #-4]
    1624:	b	1848 <PyInit_fcntl@@Base+0x724>
    1628:	ldr	x0, [sp]
    162c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1630:	add	x1, x1, #0xa07
    1634:	mov	x2, #0x8                   	// #8
    1638:	bl	eb0 <PyModule_AddIntConstant@plt>
    163c:	cbz	w0, 164c <PyInit_fcntl@@Base+0x528>
    1640:	mov	w8, #0xffffffff            	// #-1
    1644:	stur	w8, [x29, #-4]
    1648:	b	1848 <PyInit_fcntl@@Base+0x724>
    164c:	ldr	x0, [sp]
    1650:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1654:	add	x1, x1, #0x93a
    1658:	mov	x2, #0x1                   	// #1
    165c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1660:	cbz	w0, 1670 <PyInit_fcntl@@Base+0x54c>
    1664:	mov	w8, #0xffffffff            	// #-1
    1668:	stur	w8, [x29, #-4]
    166c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1670:	ldr	x0, [sp]
    1674:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1678:	add	x1, x1, #0xa0f
    167c:	mov	x2, #0x1                   	// #1
    1680:	bl	eb0 <PyModule_AddIntConstant@plt>
    1684:	cbz	w0, 1694 <PyInit_fcntl@@Base+0x570>
    1688:	mov	w8, #0xffffffff            	// #-1
    168c:	stur	w8, [x29, #-4]
    1690:	b	1848 <PyInit_fcntl@@Base+0x724>
    1694:	ldr	x0, [sp]
    1698:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    169c:	add	x1, x1, #0xa19
    16a0:	mov	x2, #0x2                   	// #2
    16a4:	bl	eb0 <PyModule_AddIntConstant@plt>
    16a8:	cbz	w0, 16b8 <PyInit_fcntl@@Base+0x594>
    16ac:	mov	w8, #0xffffffff            	// #-1
    16b0:	stur	w8, [x29, #-4]
    16b4:	b	1848 <PyInit_fcntl@@Base+0x724>
    16b8:	ldr	x0, [sp]
    16bc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    16c0:	add	x1, x1, #0xa23
    16c4:	mov	x2, #0x4                   	// #4
    16c8:	bl	eb0 <PyModule_AddIntConstant@plt>
    16cc:	cbz	w0, 16dc <PyInit_fcntl@@Base+0x5b8>
    16d0:	mov	w8, #0xffffffff            	// #-1
    16d4:	stur	w8, [x29, #-4]
    16d8:	b	1848 <PyInit_fcntl@@Base+0x724>
    16dc:	ldr	x0, [sp]
    16e0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    16e4:	add	x1, x1, #0xa2d
    16e8:	mov	x2, #0x8                   	// #8
    16ec:	bl	eb0 <PyModule_AddIntConstant@plt>
    16f0:	cbz	w0, 1700 <PyInit_fcntl@@Base+0x5dc>
    16f4:	mov	w8, #0xffffffff            	// #-1
    16f8:	stur	w8, [x29, #-4]
    16fc:	b	1848 <PyInit_fcntl@@Base+0x724>
    1700:	ldr	x0, [sp]
    1704:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1708:	add	x1, x1, #0xa37
    170c:	mov	x2, #0x10                  	// #16
    1710:	bl	eb0 <PyModule_AddIntConstant@plt>
    1714:	cbz	w0, 1724 <PyInit_fcntl@@Base+0x600>
    1718:	mov	w8, #0xffffffff            	// #-1
    171c:	stur	w8, [x29, #-4]
    1720:	b	1848 <PyInit_fcntl@@Base+0x724>
    1724:	ldr	x0, [sp]
    1728:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    172c:	add	x1, x1, #0xa41
    1730:	mov	x2, #0x20                  	// #32
    1734:	bl	eb0 <PyModule_AddIntConstant@plt>
    1738:	cbz	w0, 1748 <PyInit_fcntl@@Base+0x624>
    173c:	mov	w8, #0xffffffff            	// #-1
    1740:	stur	w8, [x29, #-4]
    1744:	b	1848 <PyInit_fcntl@@Base+0x724>
    1748:	ldr	x0, [sp]
    174c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1750:	add	x1, x1, #0xa4b
    1754:	mov	x2, #0x80000000            	// #2147483648
    1758:	bl	eb0 <PyModule_AddIntConstant@plt>
    175c:	cbz	w0, 176c <PyInit_fcntl@@Base+0x648>
    1760:	mov	w8, #0xffffffff            	// #-1
    1764:	stur	w8, [x29, #-4]
    1768:	b	1848 <PyInit_fcntl@@Base+0x724>
    176c:	ldr	x0, [sp]
    1770:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1774:	add	x1, x1, #0xa58
    1778:	mov	x2, #0x409                 	// #1033
    177c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1780:	cbz	w0, 1790 <PyInit_fcntl@@Base+0x66c>
    1784:	mov	w8, #0xffffffff            	// #-1
    1788:	stur	w8, [x29, #-4]
    178c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1790:	ldr	x0, [sp]
    1794:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1798:	add	x1, x1, #0xa64
    179c:	mov	x2, #0x40a                 	// #1034
    17a0:	bl	eb0 <PyModule_AddIntConstant@plt>
    17a4:	cbz	w0, 17b4 <PyInit_fcntl@@Base+0x690>
    17a8:	mov	w8, #0xffffffff            	// #-1
    17ac:	stur	w8, [x29, #-4]
    17b0:	b	1848 <PyInit_fcntl@@Base+0x724>
    17b4:	ldr	x0, [sp]
    17b8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    17bc:	add	x1, x1, #0xa70
    17c0:	mov	x2, #0x1                   	// #1
    17c4:	bl	eb0 <PyModule_AddIntConstant@plt>
    17c8:	cbz	w0, 17d8 <PyInit_fcntl@@Base+0x6b4>
    17cc:	mov	w8, #0xffffffff            	// #-1
    17d0:	stur	w8, [x29, #-4]
    17d4:	b	1848 <PyInit_fcntl@@Base+0x724>
    17d8:	ldr	x0, [sp]
    17dc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    17e0:	add	x1, x1, #0xa7c
    17e4:	mov	x2, #0x2                   	// #2
    17e8:	bl	eb0 <PyModule_AddIntConstant@plt>
    17ec:	cbz	w0, 17fc <PyInit_fcntl@@Base+0x6d8>
    17f0:	mov	w8, #0xffffffff            	// #-1
    17f4:	stur	w8, [x29, #-4]
    17f8:	b	1848 <PyInit_fcntl@@Base+0x724>
    17fc:	ldr	x0, [sp]
    1800:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1804:	add	x1, x1, #0xa8a
    1808:	mov	x2, #0x4                   	// #4
    180c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1810:	cbz	w0, 1820 <PyInit_fcntl@@Base+0x6fc>
    1814:	mov	w8, #0xffffffff            	// #-1
    1818:	stur	w8, [x29, #-4]
    181c:	b	1848 <PyInit_fcntl@@Base+0x724>
    1820:	ldr	x0, [sp]
    1824:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1828:	add	x1, x1, #0xa96
    182c:	mov	x2, #0x8                   	// #8
    1830:	bl	eb0 <PyModule_AddIntConstant@plt>
    1834:	cbz	w0, 1844 <PyInit_fcntl@@Base+0x720>
    1838:	mov	w8, #0xffffffff            	// #-1
    183c:	stur	w8, [x29, #-4]
    1840:	b	1848 <PyInit_fcntl@@Base+0x724>
    1844:	stur	wzr, [x29, #-4]
    1848:	ldur	w0, [x29, #-4]
    184c:	ldp	x29, x30, [sp, #16]
    1850:	add	sp, sp, #0x20
    1854:	ret
    1858:	sub	sp, sp, #0x40
    185c:	stp	x29, x30, [sp, #48]
    1860:	add	x29, sp, #0x30
    1864:	mov	x8, xzr
    1868:	mov	x9, #0x2                   	// #2
    186c:	stur	x0, [x29, #-8]
    1870:	stur	x1, [x29, #-16]
    1874:	str	x2, [sp, #24]
    1878:	str	x8, [sp, #16]
    187c:	str	x8, [sp]
    1880:	ldr	x8, [sp, #24]
    1884:	cmp	x9, x8
    1888:	b.gt	1898 <PyInit_fcntl@@Base+0x774>
    188c:	ldr	x8, [sp, #24]
    1890:	cmp	x8, #0x3
    1894:	b.le	18b8 <PyInit_fcntl@@Base+0x794>
    1898:	ldr	x1, [sp, #24]
    189c:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    18a0:	add	x0, x0, #0x784
    18a4:	mov	x2, #0x2                   	// #2
    18a8:	mov	x3, #0x3                   	// #3
    18ac:	bl	f80 <_PyArg_CheckPositional@plt>
    18b0:	cbnz	w0, 18b8 <PyInit_fcntl@@Base+0x794>
    18b4:	b	1984 <PyInit_fcntl@@Base+0x860>
    18b8:	ldur	x8, [x29, #-16]
    18bc:	ldr	x0, [x8]
    18c0:	add	x1, sp, #0xc
    18c4:	bl	1e20 <PyInit_fcntl@@Base+0xcfc>
    18c8:	cbnz	w0, 18d0 <PyInit_fcntl@@Base+0x7ac>
    18cc:	b	1984 <PyInit_fcntl@@Base+0x860>
    18d0:	ldur	x8, [x29, #-16]
    18d4:	ldr	x8, [x8, #8]
    18d8:	ldr	x8, [x8, #8]
    18dc:	adrp	x9, 13000 <PyInit_fcntl@@Base+0x11edc>
    18e0:	ldr	x9, [x9, #4008]
    18e4:	cmp	x8, x9
    18e8:	b.eq	1908 <PyInit_fcntl@@Base+0x7e4>  // b.none
    18ec:	ldur	x8, [x29, #-16]
    18f0:	ldr	x8, [x8, #8]
    18f4:	ldr	x0, [x8, #8]
    18f8:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    18fc:	ldr	x1, [x1, #4008]
    1900:	bl	1010 <PyType_IsSubtype@plt>
    1904:	cbz	w0, 1924 <PyInit_fcntl@@Base+0x800>
    1908:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    190c:	ldr	x8, [x8, #4032]
    1910:	ldr	x0, [x8]
    1914:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1918:	add	x1, x1, #0x796
    191c:	bl	f10 <PyErr_SetString@plt>
    1920:	b	1984 <PyInit_fcntl@@Base+0x860>
    1924:	ldur	x8, [x29, #-16]
    1928:	ldr	x0, [x8, #8]
    192c:	bl	1030 <_PyLong_AsInt@plt>
    1930:	str	w0, [sp, #8]
    1934:	ldr	w9, [sp, #8]
    1938:	mov	w10, #0xffffffff            	// #-1
    193c:	cmp	w9, w10
    1940:	b.ne	1950 <PyInit_fcntl@@Base+0x82c>  // b.any
    1944:	bl	f90 <PyErr_Occurred@plt>
    1948:	cbz	x0, 1950 <PyInit_fcntl@@Base+0x82c>
    194c:	b	1984 <PyInit_fcntl@@Base+0x860>
    1950:	ldr	x8, [sp, #24]
    1954:	cmp	x8, #0x3
    1958:	b.ge	1960 <PyInit_fcntl@@Base+0x83c>  // b.tcont
    195c:	b	196c <PyInit_fcntl@@Base+0x848>
    1960:	ldur	x8, [x29, #-16]
    1964:	ldr	x8, [x8, #16]
    1968:	str	x8, [sp]
    196c:	ldur	x0, [x29, #-8]
    1970:	ldr	w1, [sp, #12]
    1974:	ldr	w2, [sp, #8]
    1978:	ldr	x3, [sp]
    197c:	bl	1e7c <PyInit_fcntl@@Base+0xd58>
    1980:	str	x0, [sp, #16]
    1984:	ldr	x0, [sp, #16]
    1988:	ldp	x29, x30, [sp, #48]
    198c:	add	sp, sp, #0x40
    1990:	ret
    1994:	sub	sp, sp, #0x50
    1998:	stp	x29, x30, [sp, #64]
    199c:	add	x29, sp, #0x40
    19a0:	mov	x8, xzr
    19a4:	mov	w9, #0x1                   	// #1
    19a8:	mov	x10, #0x2                   	// #2
    19ac:	stur	x0, [x29, #-8]
    19b0:	stur	x1, [x29, #-16]
    19b4:	stur	x2, [x29, #-24]
    19b8:	str	x8, [sp, #32]
    19bc:	str	x8, [sp, #16]
    19c0:	str	w9, [sp, #12]
    19c4:	ldur	x8, [x29, #-24]
    19c8:	cmp	x10, x8
    19cc:	b.gt	19dc <PyInit_fcntl@@Base+0x8b8>
    19d0:	ldur	x8, [x29, #-24]
    19d4:	cmp	x8, #0x4
    19d8:	b.le	19fc <PyInit_fcntl@@Base+0x8d8>
    19dc:	ldur	x1, [x29, #-24]
    19e0:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    19e4:	add	x0, x0, #0x860
    19e8:	mov	x2, #0x2                   	// #2
    19ec:	mov	x3, #0x4                   	// #4
    19f0:	bl	f80 <_PyArg_CheckPositional@plt>
    19f4:	cbnz	w0, 19fc <PyInit_fcntl@@Base+0x8d8>
    19f8:	b	1b00 <PyInit_fcntl@@Base+0x9dc>
    19fc:	ldur	x8, [x29, #-16]
    1a00:	ldr	x0, [x8]
    1a04:	add	x1, sp, #0x1c
    1a08:	bl	1e20 <PyInit_fcntl@@Base+0xcfc>
    1a0c:	cbnz	w0, 1a14 <PyInit_fcntl@@Base+0x8f0>
    1a10:	b	1b00 <PyInit_fcntl@@Base+0x9dc>
    1a14:	ldur	x8, [x29, #-16]
    1a18:	ldr	x8, [x8, #8]
    1a1c:	ldr	x8, [x8, #8]
    1a20:	adrp	x9, 13000 <PyInit_fcntl@@Base+0x11edc>
    1a24:	ldr	x9, [x9, #4008]
    1a28:	cmp	x8, x9
    1a2c:	b.eq	1a4c <PyInit_fcntl@@Base+0x928>  // b.none
    1a30:	ldur	x8, [x29, #-16]
    1a34:	ldr	x8, [x8, #8]
    1a38:	ldr	x0, [x8, #8]
    1a3c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1a40:	ldr	x1, [x1, #4008]
    1a44:	bl	1010 <PyType_IsSubtype@plt>
    1a48:	cbz	w0, 1a68 <PyInit_fcntl@@Base+0x944>
    1a4c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1a50:	ldr	x8, [x8, #4032]
    1a54:	ldr	x0, [x8]
    1a58:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1a5c:	add	x1, x1, #0x796
    1a60:	bl	f10 <PyErr_SetString@plt>
    1a64:	b	1b00 <PyInit_fcntl@@Base+0x9dc>
    1a68:	ldur	x8, [x29, #-16]
    1a6c:	ldr	x0, [x8, #8]
    1a70:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    1a74:	str	w0, [sp, #24]
    1a78:	ldr	w9, [sp, #24]
    1a7c:	mov	w10, #0xffffffff            	// #-1
    1a80:	cmp	w9, w10
    1a84:	b.ne	1a94 <PyInit_fcntl@@Base+0x970>  // b.any
    1a88:	bl	f90 <PyErr_Occurred@plt>
    1a8c:	cbz	x0, 1a94 <PyInit_fcntl@@Base+0x970>
    1a90:	b	1b00 <PyInit_fcntl@@Base+0x9dc>
    1a94:	ldur	x8, [x29, #-24]
    1a98:	cmp	x8, #0x3
    1a9c:	b.ge	1aa4 <PyInit_fcntl@@Base+0x980>  // b.tcont
    1aa0:	b	1ae4 <PyInit_fcntl@@Base+0x9c0>
    1aa4:	ldur	x8, [x29, #-16]
    1aa8:	ldr	x8, [x8, #16]
    1aac:	str	x8, [sp, #16]
    1ab0:	ldur	x8, [x29, #-24]
    1ab4:	cmp	x8, #0x4
    1ab8:	b.ge	1ac0 <PyInit_fcntl@@Base+0x99c>  // b.tcont
    1abc:	b	1ae4 <PyInit_fcntl@@Base+0x9c0>
    1ac0:	ldur	x8, [x29, #-16]
    1ac4:	ldr	x0, [x8, #24]
    1ac8:	bl	fc0 <PyObject_IsTrue@plt>
    1acc:	str	w0, [sp, #12]
    1ad0:	ldr	w9, [sp, #12]
    1ad4:	cmp	w9, #0x0
    1ad8:	cset	w9, ge  // ge = tcont
    1adc:	tbnz	w9, #0, 1ae4 <PyInit_fcntl@@Base+0x9c0>
    1ae0:	b	1b00 <PyInit_fcntl@@Base+0x9dc>
    1ae4:	ldur	x0, [x29, #-8]
    1ae8:	ldr	w1, [sp, #28]
    1aec:	ldr	w2, [sp, #24]
    1af0:	ldr	x3, [sp, #16]
    1af4:	ldr	w4, [sp, #12]
    1af8:	bl	20dc <PyInit_fcntl@@Base+0xfb8>
    1afc:	str	x0, [sp, #32]
    1b00:	ldr	x0, [sp, #32]
    1b04:	ldp	x29, x30, [sp, #64]
    1b08:	add	sp, sp, #0x50
    1b0c:	ret
    1b10:	sub	sp, sp, #0x40
    1b14:	stp	x29, x30, [sp, #48]
    1b18:	add	x29, sp, #0x30
    1b1c:	mov	x8, xzr
    1b20:	mov	x9, #0x2                   	// #2
    1b24:	stur	x0, [x29, #-8]
    1b28:	stur	x1, [x29, #-16]
    1b2c:	str	x2, [sp, #24]
    1b30:	str	x8, [sp, #16]
    1b34:	ldr	x8, [sp, #24]
    1b38:	cmp	x9, x8
    1b3c:	b.gt	1b4c <PyInit_fcntl@@Base+0xa28>
    1b40:	ldr	x8, [sp, #24]
    1b44:	cmp	x8, #0x2
    1b48:	b.le	1b70 <PyInit_fcntl@@Base+0xa4c>
    1b4c:	ldr	x1, [sp, #24]
    1b50:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    1b54:	add	x0, x0, #0x78a
    1b58:	mov	x8, #0x2                   	// #2
    1b5c:	mov	x2, x8
    1b60:	mov	x3, x8
    1b64:	bl	f80 <_PyArg_CheckPositional@plt>
    1b68:	cbnz	w0, 1b70 <PyInit_fcntl@@Base+0xa4c>
    1b6c:	b	1c1c <PyInit_fcntl@@Base+0xaf8>
    1b70:	ldur	x8, [x29, #-16]
    1b74:	ldr	x0, [x8]
    1b78:	add	x1, sp, #0xc
    1b7c:	bl	1e20 <PyInit_fcntl@@Base+0xcfc>
    1b80:	cbnz	w0, 1b88 <PyInit_fcntl@@Base+0xa64>
    1b84:	b	1c1c <PyInit_fcntl@@Base+0xaf8>
    1b88:	ldur	x8, [x29, #-16]
    1b8c:	ldr	x8, [x8, #8]
    1b90:	ldr	x8, [x8, #8]
    1b94:	adrp	x9, 13000 <PyInit_fcntl@@Base+0x11edc>
    1b98:	ldr	x9, [x9, #4008]
    1b9c:	cmp	x8, x9
    1ba0:	b.eq	1bc0 <PyInit_fcntl@@Base+0xa9c>  // b.none
    1ba4:	ldur	x8, [x29, #-16]
    1ba8:	ldr	x8, [x8, #8]
    1bac:	ldr	x0, [x8, #8]
    1bb0:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1bb4:	ldr	x1, [x1, #4008]
    1bb8:	bl	1010 <PyType_IsSubtype@plt>
    1bbc:	cbz	w0, 1bdc <PyInit_fcntl@@Base+0xab8>
    1bc0:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1bc4:	ldr	x8, [x8, #4032]
    1bc8:	ldr	x0, [x8]
    1bcc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1bd0:	add	x1, x1, #0x796
    1bd4:	bl	f10 <PyErr_SetString@plt>
    1bd8:	b	1c1c <PyInit_fcntl@@Base+0xaf8>
    1bdc:	ldur	x8, [x29, #-16]
    1be0:	ldr	x0, [x8, #8]
    1be4:	bl	1030 <_PyLong_AsInt@plt>
    1be8:	str	w0, [sp, #8]
    1bec:	ldr	w9, [sp, #8]
    1bf0:	mov	w10, #0xffffffff            	// #-1
    1bf4:	cmp	w9, w10
    1bf8:	b.ne	1c08 <PyInit_fcntl@@Base+0xae4>  // b.any
    1bfc:	bl	f90 <PyErr_Occurred@plt>
    1c00:	cbz	x0, 1c08 <PyInit_fcntl@@Base+0xae4>
    1c04:	b	1c1c <PyInit_fcntl@@Base+0xaf8>
    1c08:	ldur	x0, [x29, #-8]
    1c0c:	ldr	w1, [sp, #12]
    1c10:	ldr	w2, [sp, #8]
    1c14:	bl	246c <PyInit_fcntl@@Base+0x1348>
    1c18:	str	x0, [sp, #16]
    1c1c:	ldr	x0, [sp, #16]
    1c20:	ldp	x29, x30, [sp, #48]
    1c24:	add	sp, sp, #0x40
    1c28:	ret
    1c2c:	sub	sp, sp, #0x60
    1c30:	stp	x29, x30, [sp, #80]
    1c34:	add	x29, sp, #0x50
    1c38:	mov	x8, xzr
    1c3c:	mov	x9, #0x2                   	// #2
    1c40:	adrp	x10, 13000 <PyInit_fcntl@@Base+0x11edc>
    1c44:	ldr	x10, [x10, #4008]
    1c48:	stur	x0, [x29, #-8]
    1c4c:	stur	x1, [x29, #-16]
    1c50:	stur	x2, [x29, #-24]
    1c54:	stur	x8, [x29, #-32]
    1c58:	str	x8, [sp, #32]
    1c5c:	str	x8, [sp, #24]
    1c60:	str	wzr, [sp, #20]
    1c64:	ldur	x8, [x29, #-24]
    1c68:	cmp	x9, x8
    1c6c:	str	x10, [sp, #8]
    1c70:	b.gt	1c80 <PyInit_fcntl@@Base+0xb5c>
    1c74:	ldur	x8, [x29, #-24]
    1c78:	cmp	x8, #0x5
    1c7c:	b.le	1ca0 <PyInit_fcntl@@Base+0xb7c>
    1c80:	ldur	x1, [x29, #-24]
    1c84:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    1c88:	add	x0, x0, #0x790
    1c8c:	mov	x2, #0x2                   	// #2
    1c90:	mov	x3, #0x5                   	// #5
    1c94:	bl	f80 <_PyArg_CheckPositional@plt>
    1c98:	cbnz	w0, 1ca0 <PyInit_fcntl@@Base+0xb7c>
    1c9c:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1ca0:	ldur	x8, [x29, #-16]
    1ca4:	ldr	x0, [x8]
    1ca8:	sub	x1, x29, #0x24
    1cac:	bl	1e20 <PyInit_fcntl@@Base+0xcfc>
    1cb0:	cbnz	w0, 1cb8 <PyInit_fcntl@@Base+0xb94>
    1cb4:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1cb8:	ldur	x8, [x29, #-16]
    1cbc:	ldr	x8, [x8, #8]
    1cc0:	ldr	x8, [x8, #8]
    1cc4:	ldr	x9, [sp, #8]
    1cc8:	cmp	x8, x9
    1ccc:	b.eq	1ce8 <PyInit_fcntl@@Base+0xbc4>  // b.none
    1cd0:	ldur	x8, [x29, #-16]
    1cd4:	ldr	x8, [x8, #8]
    1cd8:	ldr	x0, [x8, #8]
    1cdc:	ldr	x1, [sp, #8]
    1ce0:	bl	1010 <PyType_IsSubtype@plt>
    1ce4:	cbz	w0, 1d04 <PyInit_fcntl@@Base+0xbe0>
    1ce8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1cec:	ldr	x8, [x8, #4032]
    1cf0:	ldr	x0, [x8]
    1cf4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1cf8:	add	x1, x1, #0x796
    1cfc:	bl	f10 <PyErr_SetString@plt>
    1d00:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1d04:	ldur	x8, [x29, #-16]
    1d08:	ldr	x0, [x8, #8]
    1d0c:	bl	1030 <_PyLong_AsInt@plt>
    1d10:	str	w0, [sp, #40]
    1d14:	ldr	w9, [sp, #40]
    1d18:	mov	w10, #0xffffffff            	// #-1
    1d1c:	cmp	w9, w10
    1d20:	b.ne	1d30 <PyInit_fcntl@@Base+0xc0c>  // b.any
    1d24:	bl	f90 <PyErr_Occurred@plt>
    1d28:	cbz	x0, 1d30 <PyInit_fcntl@@Base+0xc0c>
    1d2c:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1d30:	ldur	x8, [x29, #-24]
    1d34:	cmp	x8, #0x3
    1d38:	b.ge	1d40 <PyInit_fcntl@@Base+0xc1c>  // b.tcont
    1d3c:	b	1df0 <PyInit_fcntl@@Base+0xccc>
    1d40:	ldur	x8, [x29, #-16]
    1d44:	ldr	x8, [x8, #16]
    1d48:	str	x8, [sp, #32]
    1d4c:	ldur	x8, [x29, #-24]
    1d50:	cmp	x8, #0x4
    1d54:	b.ge	1d5c <PyInit_fcntl@@Base+0xc38>  // b.tcont
    1d58:	b	1df0 <PyInit_fcntl@@Base+0xccc>
    1d5c:	ldur	x8, [x29, #-16]
    1d60:	ldr	x8, [x8, #24]
    1d64:	str	x8, [sp, #24]
    1d68:	ldur	x8, [x29, #-24]
    1d6c:	cmp	x8, #0x5
    1d70:	b.ge	1d78 <PyInit_fcntl@@Base+0xc54>  // b.tcont
    1d74:	b	1df0 <PyInit_fcntl@@Base+0xccc>
    1d78:	ldur	x8, [x29, #-16]
    1d7c:	ldr	x8, [x8, #32]
    1d80:	ldr	x8, [x8, #8]
    1d84:	ldr	x9, [sp, #8]
    1d88:	cmp	x8, x9
    1d8c:	b.eq	1da8 <PyInit_fcntl@@Base+0xc84>  // b.none
    1d90:	ldur	x8, [x29, #-16]
    1d94:	ldr	x8, [x8, #32]
    1d98:	ldr	x0, [x8, #8]
    1d9c:	ldr	x1, [sp, #8]
    1da0:	bl	1010 <PyType_IsSubtype@plt>
    1da4:	cbz	w0, 1dc4 <PyInit_fcntl@@Base+0xca0>
    1da8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1dac:	ldr	x8, [x8, #4032]
    1db0:	ldr	x0, [x8]
    1db4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1db8:	add	x1, x1, #0x796
    1dbc:	bl	f10 <PyErr_SetString@plt>
    1dc0:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1dc4:	ldur	x8, [x29, #-16]
    1dc8:	ldr	x0, [x8, #32]
    1dcc:	bl	1030 <_PyLong_AsInt@plt>
    1dd0:	str	w0, [sp, #20]
    1dd4:	ldr	w9, [sp, #20]
    1dd8:	mov	w10, #0xffffffff            	// #-1
    1ddc:	cmp	w9, w10
    1de0:	b.ne	1df0 <PyInit_fcntl@@Base+0xccc>  // b.any
    1de4:	bl	f90 <PyErr_Occurred@plt>
    1de8:	cbz	x0, 1df0 <PyInit_fcntl@@Base+0xccc>
    1dec:	b	1e10 <PyInit_fcntl@@Base+0xcec>
    1df0:	ldur	x0, [x29, #-8]
    1df4:	ldur	w1, [x29, #-36]
    1df8:	ldr	w2, [sp, #40]
    1dfc:	ldr	x3, [sp, #32]
    1e00:	ldr	x4, [sp, #24]
    1e04:	ldr	w5, [sp, #20]
    1e08:	bl	2588 <PyInit_fcntl@@Base+0x1464>
    1e0c:	stur	x0, [x29, #-32]
    1e10:	ldur	x0, [x29, #-32]
    1e14:	ldp	x29, x30, [sp, #80]
    1e18:	add	sp, sp, #0x60
    1e1c:	ret
    1e20:	sub	sp, sp, #0x30
    1e24:	stp	x29, x30, [sp, #32]
    1e28:	add	x29, sp, #0x20
    1e2c:	str	x0, [sp, #16]
    1e30:	str	x1, [sp, #8]
    1e34:	ldr	x0, [sp, #16]
    1e38:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1e3c:	str	w0, [sp, #4]
    1e40:	ldr	w8, [sp, #4]
    1e44:	cmp	w8, #0x0
    1e48:	cset	w8, ge  // ge = tcont
    1e4c:	tbnz	w8, #0, 1e58 <PyInit_fcntl@@Base+0xd34>
    1e50:	stur	wzr, [x29, #-4]
    1e54:	b	1e6c <PyInit_fcntl@@Base+0xd48>
    1e58:	ldr	w8, [sp, #4]
    1e5c:	ldr	x9, [sp, #8]
    1e60:	str	w8, [x9]
    1e64:	mov	w8, #0x1                   	// #1
    1e68:	stur	w8, [x29, #-4]
    1e6c:	ldur	w0, [x29, #-4]
    1e70:	ldp	x29, x30, [sp, #32]
    1e74:	add	sp, sp, #0x30
    1e78:	ret
    1e7c:	stp	x29, x30, [sp, #-32]!
    1e80:	str	x28, [sp, #16]
    1e84:	mov	x29, sp
    1e88:	sub	sp, sp, #0x470
    1e8c:	stur	x0, [x29, #-16]
    1e90:	stur	w1, [x29, #-20]
    1e94:	stur	w2, [x29, #-24]
    1e98:	stur	x3, [x29, #-32]
    1e9c:	stur	wzr, [x29, #-36]
    1ea0:	str	wzr, [sp, #52]
    1ea4:	ldur	x8, [x29, #-32]
    1ea8:	cbz	x8, 2004 <PyInit_fcntl@@Base+0xee0>
    1eac:	ldur	x0, [x29, #-32]
    1eb0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1eb4:	add	x1, x1, #0x7bb
    1eb8:	sub	x2, x29, #0x30
    1ebc:	sub	x3, x29, #0x38
    1ec0:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1ec4:	cbz	w0, 1fd4 <PyInit_fcntl@@Base+0xeb0>
    1ec8:	ldur	x8, [x29, #-56]
    1ecc:	cmp	x8, #0x400
    1ed0:	b.ls	1ef8 <PyInit_fcntl@@Base+0xdd4>  // b.plast
    1ed4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1ed8:	ldr	x8, [x8, #4024]
    1edc:	ldr	x0, [x8]
    1ee0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1ee4:	add	x1, x1, #0x7be
    1ee8:	bl	f10 <PyErr_SetString@plt>
    1eec:	mov	x8, xzr
    1ef0:	stur	x8, [x29, #-8]
    1ef4:	b	20c8 <PyInit_fcntl@@Base+0xfa4>
    1ef8:	ldur	x1, [x29, #-48]
    1efc:	ldur	x2, [x29, #-56]
    1f00:	add	x0, sp, #0x38
    1f04:	bl	ea0 <memcpy@plt>
    1f08:	bl	fe0 <PyEval_SaveThread@plt>
    1f0c:	str	x0, [sp, #40]
    1f10:	ldur	w0, [x29, #-20]
    1f14:	ldur	w1, [x29, #-24]
    1f18:	add	x2, sp, #0x38
    1f1c:	bl	fd0 <fcntl64@plt>
    1f20:	stur	w0, [x29, #-40]
    1f24:	ldr	x0, [sp, #40]
    1f28:	bl	ec0 <PyEval_RestoreThread@plt>
    1f2c:	ldur	w8, [x29, #-40]
    1f30:	mov	w9, #0xffffffff            	// #-1
    1f34:	mov	w10, #0x0                   	// #0
    1f38:	cmp	w8, w9
    1f3c:	str	w10, [sp, #28]
    1f40:	b.ne	1f74 <PyInit_fcntl@@Base+0xe50>  // b.any
    1f44:	bl	1020 <__errno_location@plt>
    1f48:	ldr	w8, [x0]
    1f4c:	mov	w9, #0x0                   	// #0
    1f50:	cmp	w8, #0x4
    1f54:	str	w9, [sp, #28]
    1f58:	b.ne	1f74 <PyInit_fcntl@@Base+0xe50>  // b.any
    1f5c:	bl	1000 <PyErr_CheckSignals@plt>
    1f60:	str	w0, [sp, #52]
    1f64:	cmp	w0, #0x0
    1f68:	cset	w8, ne  // ne = any
    1f6c:	eor	w8, w8, #0x1
    1f70:	str	w8, [sp, #28]
    1f74:	ldr	w8, [sp, #28]
    1f78:	tbnz	w8, #0, 1f08 <PyInit_fcntl@@Base+0xde4>
    1f7c:	ldur	w8, [x29, #-40]
    1f80:	cmp	w8, #0x0
    1f84:	cset	w8, ge  // ge = tcont
    1f88:	tbnz	w8, #0, 1fc0 <PyInit_fcntl@@Base+0xe9c>
    1f8c:	ldr	w8, [sp, #52]
    1f90:	cbnz	w8, 1fac <PyInit_fcntl@@Base+0xe88>
    1f94:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1f98:	ldr	x8, [x8, #4040]
    1f9c:	ldr	x0, [x8]
    1fa0:	bl	ed0 <PyErr_SetFromErrno@plt>
    1fa4:	str	x0, [sp, #16]
    1fa8:	b	1fb4 <PyInit_fcntl@@Base+0xe90>
    1fac:	mov	x8, xzr
    1fb0:	str	x8, [sp, #16]
    1fb4:	ldr	x8, [sp, #16]
    1fb8:	stur	x8, [x29, #-8]
    1fbc:	b	20c8 <PyInit_fcntl@@Base+0xfa4>
    1fc0:	ldur	x1, [x29, #-56]
    1fc4:	add	x0, sp, #0x38
    1fc8:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1fcc:	stur	x0, [x29, #-8]
    1fd0:	b	20c8 <PyInit_fcntl@@Base+0xfa4>
    1fd4:	bl	f50 <PyErr_Clear@plt>
    1fd8:	ldur	x0, [x29, #-32]
    1fdc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1fe0:	add	x1, x1, #0x7d8
    1fe4:	sub	x2, x29, #0x24
    1fe8:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1fec:	str	w0, [sp, #48]
    1ff0:	ldr	w8, [sp, #48]
    1ff4:	cbnz	w8, 2004 <PyInit_fcntl@@Base+0xee0>
    1ff8:	mov	x8, xzr
    1ffc:	stur	x8, [x29, #-8]
    2000:	b	20c8 <PyInit_fcntl@@Base+0xfa4>
    2004:	bl	fe0 <PyEval_SaveThread@plt>
    2008:	str	x0, [sp, #32]
    200c:	ldur	w0, [x29, #-20]
    2010:	ldur	w1, [x29, #-24]
    2014:	ldur	w2, [x29, #-36]
    2018:	bl	fd0 <fcntl64@plt>
    201c:	stur	w0, [x29, #-40]
    2020:	ldr	x0, [sp, #32]
    2024:	bl	ec0 <PyEval_RestoreThread@plt>
    2028:	ldur	w8, [x29, #-40]
    202c:	mov	w9, #0xffffffff            	// #-1
    2030:	mov	w10, #0x0                   	// #0
    2034:	cmp	w8, w9
    2038:	str	w10, [sp, #12]
    203c:	b.ne	2070 <PyInit_fcntl@@Base+0xf4c>  // b.any
    2040:	bl	1020 <__errno_location@plt>
    2044:	ldr	w8, [x0]
    2048:	mov	w9, #0x0                   	// #0
    204c:	cmp	w8, #0x4
    2050:	str	w9, [sp, #12]
    2054:	b.ne	2070 <PyInit_fcntl@@Base+0xf4c>  // b.any
    2058:	bl	1000 <PyErr_CheckSignals@plt>
    205c:	str	w0, [sp, #52]
    2060:	cmp	w0, #0x0
    2064:	cset	w8, ne  // ne = any
    2068:	eor	w8, w8, #0x1
    206c:	str	w8, [sp, #12]
    2070:	ldr	w8, [sp, #12]
    2074:	tbnz	w8, #0, 2004 <PyInit_fcntl@@Base+0xee0>
    2078:	ldur	w8, [x29, #-40]
    207c:	cmp	w8, #0x0
    2080:	cset	w8, ge  // ge = tcont
    2084:	tbnz	w8, #0, 20bc <PyInit_fcntl@@Base+0xf98>
    2088:	ldr	w8, [sp, #52]
    208c:	cbnz	w8, 20a8 <PyInit_fcntl@@Base+0xf84>
    2090:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2094:	ldr	x8, [x8, #4040]
    2098:	ldr	x0, [x8]
    209c:	bl	ed0 <PyErr_SetFromErrno@plt>
    20a0:	str	x0, [sp]
    20a4:	b	20b0 <PyInit_fcntl@@Base+0xf8c>
    20a8:	mov	x8, xzr
    20ac:	str	x8, [sp]
    20b0:	ldr	x8, [sp]
    20b4:	stur	x8, [x29, #-8]
    20b8:	b	20c8 <PyInit_fcntl@@Base+0xfa4>
    20bc:	ldursw	x0, [x29, #-40]
    20c0:	bl	f40 <PyLong_FromLong@plt>
    20c4:	stur	x0, [x29, #-8]
    20c8:	ldur	x0, [x29, #-8]
    20cc:	add	sp, sp, #0x470
    20d0:	ldr	x28, [sp, #16]
    20d4:	ldp	x29, x30, [sp], #32
    20d8:	ret
    20dc:	stp	x29, x30, [sp, #-32]!
    20e0:	str	x28, [sp, #16]
    20e4:	mov	x29, sp
    20e8:	sub	sp, sp, #0x4e0
    20ec:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    20f0:	ldr	x8, [x8, #4040]
    20f4:	stur	x0, [x29, #-16]
    20f8:	stur	w1, [x29, #-20]
    20fc:	stur	w2, [x29, #-24]
    2100:	stur	x3, [x29, #-32]
    2104:	stur	w4, [x29, #-36]
    2108:	stur	wzr, [x29, #-40]
    210c:	ldur	x9, [x29, #-32]
    2110:	str	x8, [sp, #32]
    2114:	cbz	x9, 23fc <PyInit_fcntl@@Base+0x12d8>
    2118:	ldur	x0, [x29, #-32]
    211c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    2120:	add	x1, x1, #0x83a
    2124:	sub	x2, x29, #0x80
    2128:	bl	f30 <_PyArg_Parse_SizeT@plt>
    212c:	cbz	w0, 22d0 <PyInit_fcntl@@Base+0x11ac>
    2130:	ldur	x8, [x29, #-128]
    2134:	stur	x8, [x29, #-136]
    2138:	ldur	x8, [x29, #-112]
    213c:	stur	x8, [x29, #-144]
    2140:	ldur	w9, [x29, #-36]
    2144:	cbz	w9, 2194 <PyInit_fcntl@@Base+0x1070>
    2148:	ldur	x8, [x29, #-144]
    214c:	cmp	x8, #0x400
    2150:	b.gt	2188 <PyInit_fcntl@@Base+0x1064>
    2154:	ldur	x1, [x29, #-136]
    2158:	ldur	x2, [x29, #-144]
    215c:	add	x8, sp, #0x4f
    2160:	mov	x0, x8
    2164:	str	x8, [sp, #24]
    2168:	bl	ea0 <memcpy@plt>
    216c:	ldur	x8, [x29, #-144]
    2170:	ldr	x9, [sp, #24]
    2174:	add	x8, x9, x8
    2178:	mov	w10, #0x0                   	// #0
    217c:	strb	w10, [x8]
    2180:	str	x9, [sp, #64]
    2184:	b	2190 <PyInit_fcntl@@Base+0x106c>
    2188:	ldur	x8, [x29, #-136]
    218c:	str	x8, [sp, #64]
    2190:	b	21fc <PyInit_fcntl@@Base+0x10d8>
    2194:	ldur	x8, [x29, #-144]
    2198:	cmp	x8, #0x400
    219c:	b.le	21cc <PyInit_fcntl@@Base+0x10a8>
    21a0:	sub	x0, x29, #0x80
    21a4:	bl	ee0 <PyBuffer_Release@plt>
    21a8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    21ac:	ldr	x8, [x8, #4024]
    21b0:	ldr	x0, [x8]
    21b4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    21b8:	add	x1, x1, #0x843
    21bc:	bl	f10 <PyErr_SetString@plt>
    21c0:	mov	x8, xzr
    21c4:	stur	x8, [x29, #-8]
    21c8:	b	2458 <PyInit_fcntl@@Base+0x1334>
    21cc:	ldur	x1, [x29, #-136]
    21d0:	ldur	x2, [x29, #-144]
    21d4:	add	x8, sp, #0x4f
    21d8:	mov	x0, x8
    21dc:	str	x8, [sp, #16]
    21e0:	bl	ea0 <memcpy@plt>
    21e4:	ldur	x8, [x29, #-144]
    21e8:	ldr	x9, [sp, #16]
    21ec:	add	x8, x9, x8
    21f0:	mov	w10, #0x0                   	// #0
    21f4:	strb	w10, [x8]
    21f8:	str	x9, [sp, #64]
    21fc:	ldr	x8, [sp, #64]
    2200:	add	x9, sp, #0x4f
    2204:	cmp	x9, x8
    2208:	b.ne	2238 <PyInit_fcntl@@Base+0x1114>  // b.any
    220c:	bl	fe0 <PyEval_SaveThread@plt>
    2210:	str	x0, [sp, #56]
    2214:	ldur	w0, [x29, #-20]
    2218:	ldur	w8, [x29, #-24]
    221c:	mov	w1, w8
    2220:	ldr	x2, [sp, #64]
    2224:	bl	1040 <ioctl@plt>
    2228:	stur	w0, [x29, #-44]
    222c:	ldr	x0, [sp, #56]
    2230:	bl	ec0 <PyEval_RestoreThread@plt>
    2234:	b	2250 <PyInit_fcntl@@Base+0x112c>
    2238:	ldur	w0, [x29, #-20]
    223c:	ldur	w8, [x29, #-24]
    2240:	mov	w1, w8
    2244:	ldr	x2, [sp, #64]
    2248:	bl	1040 <ioctl@plt>
    224c:	stur	w0, [x29, #-44]
    2250:	ldur	w8, [x29, #-36]
    2254:	cbz	w8, 2274 <PyInit_fcntl@@Base+0x1150>
    2258:	ldur	x8, [x29, #-144]
    225c:	cmp	x8, #0x400
    2260:	b.gt	2274 <PyInit_fcntl@@Base+0x1150>
    2264:	ldur	x0, [x29, #-136]
    2268:	ldur	x2, [x29, #-144]
    226c:	add	x1, sp, #0x4f
    2270:	bl	ea0 <memcpy@plt>
    2274:	sub	x0, x29, #0x80
    2278:	bl	ee0 <PyBuffer_Release@plt>
    227c:	ldur	w8, [x29, #-44]
    2280:	cmp	w8, #0x0
    2284:	cset	w8, ge  // ge = tcont
    2288:	tbnz	w8, #0, 22a4 <PyInit_fcntl@@Base+0x1180>
    228c:	ldr	x8, [sp, #32]
    2290:	ldr	x0, [x8]
    2294:	bl	ed0 <PyErr_SetFromErrno@plt>
    2298:	mov	x8, xzr
    229c:	stur	x8, [x29, #-8]
    22a0:	b	2458 <PyInit_fcntl@@Base+0x1334>
    22a4:	ldur	w8, [x29, #-36]
    22a8:	cbz	w8, 22bc <PyInit_fcntl@@Base+0x1198>
    22ac:	ldursw	x0, [x29, #-44]
    22b0:	bl	f40 <PyLong_FromLong@plt>
    22b4:	stur	x0, [x29, #-8]
    22b8:	b	2458 <PyInit_fcntl@@Base+0x1334>
    22bc:	ldur	x1, [x29, #-144]
    22c0:	add	x0, sp, #0x4f
    22c4:	bl	f00 <PyBytes_FromStringAndSize@plt>
    22c8:	stur	x0, [x29, #-8]
    22cc:	b	2458 <PyInit_fcntl@@Base+0x1334>
    22d0:	bl	f50 <PyErr_Clear@plt>
    22d4:	ldur	x0, [x29, #-32]
    22d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    22dc:	add	x1, x1, #0x85d
    22e0:	sub	x2, x29, #0x80
    22e4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    22e8:	cbz	w0, 23d4 <PyInit_fcntl@@Base+0x12b0>
    22ec:	ldur	x8, [x29, #-128]
    22f0:	stur	x8, [x29, #-136]
    22f4:	ldur	x8, [x29, #-112]
    22f8:	stur	x8, [x29, #-144]
    22fc:	ldur	x8, [x29, #-144]
    2300:	cmp	x8, #0x400
    2304:	b.le	2334 <PyInit_fcntl@@Base+0x1210>
    2308:	sub	x0, x29, #0x80
    230c:	bl	ee0 <PyBuffer_Release@plt>
    2310:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2314:	ldr	x8, [x8, #4024]
    2318:	ldr	x0, [x8]
    231c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    2320:	add	x1, x1, #0x843
    2324:	bl	f10 <PyErr_SetString@plt>
    2328:	mov	x8, xzr
    232c:	stur	x8, [x29, #-8]
    2330:	b	2458 <PyInit_fcntl@@Base+0x1334>
    2334:	ldur	x1, [x29, #-136]
    2338:	ldur	x2, [x29, #-144]
    233c:	add	x8, sp, #0x4f
    2340:	mov	x0, x8
    2344:	str	x8, [sp, #8]
    2348:	bl	ea0 <memcpy@plt>
    234c:	ldur	x8, [x29, #-144]
    2350:	ldr	x9, [sp, #8]
    2354:	add	x8, x9, x8
    2358:	mov	w10, #0x0                   	// #0
    235c:	strb	w10, [x8]
    2360:	bl	fe0 <PyEval_SaveThread@plt>
    2364:	str	x0, [sp, #48]
    2368:	ldur	w0, [x29, #-20]
    236c:	ldur	w10, [x29, #-24]
    2370:	mov	w1, w10
    2374:	ldr	x2, [sp, #8]
    2378:	bl	1040 <ioctl@plt>
    237c:	stur	w0, [x29, #-44]
    2380:	ldr	x0, [sp, #48]
    2384:	bl	ec0 <PyEval_RestoreThread@plt>
    2388:	ldur	w10, [x29, #-44]
    238c:	cmp	w10, #0x0
    2390:	cset	w10, ge  // ge = tcont
    2394:	tbnz	w10, #0, 23b8 <PyInit_fcntl@@Base+0x1294>
    2398:	sub	x0, x29, #0x80
    239c:	bl	ee0 <PyBuffer_Release@plt>
    23a0:	ldr	x8, [sp, #32]
    23a4:	ldr	x0, [x8]
    23a8:	bl	ed0 <PyErr_SetFromErrno@plt>
    23ac:	mov	x8, xzr
    23b0:	stur	x8, [x29, #-8]
    23b4:	b	2458 <PyInit_fcntl@@Base+0x1334>
    23b8:	sub	x0, x29, #0x80
    23bc:	bl	ee0 <PyBuffer_Release@plt>
    23c0:	ldur	x1, [x29, #-144]
    23c4:	add	x0, sp, #0x4f
    23c8:	bl	f00 <PyBytes_FromStringAndSize@plt>
    23cc:	stur	x0, [x29, #-8]
    23d0:	b	2458 <PyInit_fcntl@@Base+0x1334>
    23d4:	bl	f50 <PyErr_Clear@plt>
    23d8:	ldur	x0, [x29, #-32]
    23dc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    23e0:	add	x1, x1, #0x866
    23e4:	sub	x2, x29, #0x28
    23e8:	bl	f30 <_PyArg_Parse_SizeT@plt>
    23ec:	cbnz	w0, 23fc <PyInit_fcntl@@Base+0x12d8>
    23f0:	mov	x8, xzr
    23f4:	stur	x8, [x29, #-8]
    23f8:	b	2458 <PyInit_fcntl@@Base+0x1334>
    23fc:	bl	fe0 <PyEval_SaveThread@plt>
    2400:	str	x0, [sp, #40]
    2404:	ldur	w0, [x29, #-20]
    2408:	ldur	w8, [x29, #-24]
    240c:	mov	w1, w8
    2410:	ldur	w2, [x29, #-40]
    2414:	bl	1040 <ioctl@plt>
    2418:	stur	w0, [x29, #-44]
    241c:	ldr	x0, [sp, #40]
    2420:	bl	ec0 <PyEval_RestoreThread@plt>
    2424:	ldur	w8, [x29, #-44]
    2428:	cmp	w8, #0x0
    242c:	cset	w8, ge  // ge = tcont
    2430:	tbnz	w8, #0, 244c <PyInit_fcntl@@Base+0x1328>
    2434:	ldr	x8, [sp, #32]
    2438:	ldr	x0, [x8]
    243c:	bl	ed0 <PyErr_SetFromErrno@plt>
    2440:	mov	x8, xzr
    2444:	stur	x8, [x29, #-8]
    2448:	b	2458 <PyInit_fcntl@@Base+0x1334>
    244c:	ldursw	x0, [x29, #-44]
    2450:	bl	f40 <PyLong_FromLong@plt>
    2454:	stur	x0, [x29, #-8]
    2458:	ldur	x0, [x29, #-8]
    245c:	add	sp, sp, #0x4e0
    2460:	ldr	x28, [sp, #16]
    2464:	ldp	x29, x30, [sp], #32
    2468:	ret
    246c:	sub	sp, sp, #0x50
    2470:	stp	x29, x30, [sp, #64]
    2474:	add	x29, sp, #0x40
    2478:	stur	x0, [x29, #-16]
    247c:	stur	w1, [x29, #-20]
    2480:	stur	w2, [x29, #-24]
    2484:	str	wzr, [sp, #32]
    2488:	bl	fe0 <PyEval_SaveThread@plt>
    248c:	str	x0, [sp, #24]
    2490:	ldur	w0, [x29, #-20]
    2494:	ldur	w1, [x29, #-24]
    2498:	bl	f20 <flock@plt>
    249c:	stur	w0, [x29, #-28]
    24a0:	ldr	x0, [sp, #24]
    24a4:	bl	ec0 <PyEval_RestoreThread@plt>
    24a8:	ldur	w8, [x29, #-28]
    24ac:	mov	w9, #0xffffffff            	// #-1
    24b0:	mov	w10, #0x0                   	// #0
    24b4:	cmp	w8, w9
    24b8:	str	w10, [sp, #20]
    24bc:	b.ne	24f0 <PyInit_fcntl@@Base+0x13cc>  // b.any
    24c0:	bl	1020 <__errno_location@plt>
    24c4:	ldr	w8, [x0]
    24c8:	mov	w9, #0x0                   	// #0
    24cc:	cmp	w8, #0x4
    24d0:	str	w9, [sp, #20]
    24d4:	b.ne	24f0 <PyInit_fcntl@@Base+0x13cc>  // b.any
    24d8:	bl	1000 <PyErr_CheckSignals@plt>
    24dc:	str	w0, [sp, #32]
    24e0:	cmp	w0, #0x0
    24e4:	cset	w8, ne  // ne = any
    24e8:	eor	w8, w8, #0x1
    24ec:	str	w8, [sp, #20]
    24f0:	ldr	w8, [sp, #20]
    24f4:	tbnz	w8, #0, 2488 <PyInit_fcntl@@Base+0x1364>
    24f8:	ldur	w8, [x29, #-28]
    24fc:	cmp	w8, #0x0
    2500:	cset	w8, ge  // ge = tcont
    2504:	tbnz	w8, #0, 253c <PyInit_fcntl@@Base+0x1418>
    2508:	ldr	w8, [sp, #32]
    250c:	cbnz	w8, 2528 <PyInit_fcntl@@Base+0x1404>
    2510:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2514:	ldr	x8, [x8, #4040]
    2518:	ldr	x0, [x8]
    251c:	bl	ed0 <PyErr_SetFromErrno@plt>
    2520:	str	x0, [sp, #8]
    2524:	b	2530 <PyInit_fcntl@@Base+0x140c>
    2528:	mov	x8, xzr
    252c:	str	x8, [sp, #8]
    2530:	ldr	x8, [sp, #8]
    2534:	stur	x8, [x29, #-8]
    2538:	b	2558 <PyInit_fcntl@@Base+0x1434>
    253c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2540:	ldr	x8, [x8, #4056]
    2544:	mov	x0, x8
    2548:	str	x8, [sp]
    254c:	bl	2568 <PyInit_fcntl@@Base+0x1444>
    2550:	ldr	x8, [sp]
    2554:	stur	x8, [x29, #-8]
    2558:	ldur	x0, [x29, #-8]
    255c:	ldp	x29, x30, [sp, #64]
    2560:	add	sp, sp, #0x50
    2564:	ret
    2568:	sub	sp, sp, #0x10
    256c:	str	x0, [sp, #8]
    2570:	ldr	x8, [sp, #8]
    2574:	ldr	x9, [x8]
    2578:	add	x9, x9, #0x1
    257c:	str	x9, [x8]
    2580:	add	sp, sp, #0x10
    2584:	ret
    2588:	sub	sp, sp, #0x90
    258c:	stp	x29, x30, [sp, #128]
    2590:	add	x29, sp, #0x80
    2594:	stur	x0, [x29, #-16]
    2598:	stur	w1, [x29, #-20]
    259c:	stur	w2, [x29, #-24]
    25a0:	stur	x3, [x29, #-32]
    25a4:	stur	x4, [x29, #-40]
    25a8:	stur	w5, [x29, #-44]
    25ac:	stur	wzr, [x29, #-52]
    25b0:	ldur	w8, [x29, #-24]
    25b4:	cmp	w8, #0x8
    25b8:	b.ne	25c8 <PyInit_fcntl@@Base+0x14a4>  // b.any
    25bc:	mov	w8, #0x2                   	// #2
    25c0:	strh	w8, [sp, #40]
    25c4:	b	261c <PyInit_fcntl@@Base+0x14f8>
    25c8:	ldur	w8, [x29, #-24]
    25cc:	and	w8, w8, #0x1
    25d0:	cbz	w8, 25e0 <PyInit_fcntl@@Base+0x14bc>
    25d4:	mov	w8, #0x0                   	// #0
    25d8:	strh	w8, [sp, #40]
    25dc:	b	261c <PyInit_fcntl@@Base+0x14f8>
    25e0:	ldur	w8, [x29, #-24]
    25e4:	and	w8, w8, #0x2
    25e8:	cbz	w8, 25f8 <PyInit_fcntl@@Base+0x14d4>
    25ec:	mov	w8, #0x1                   	// #1
    25f0:	strh	w8, [sp, #40]
    25f4:	b	261c <PyInit_fcntl@@Base+0x14f8>
    25f8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    25fc:	ldr	x8, [x8, #4024]
    2600:	ldr	x0, [x8]
    2604:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    2608:	add	x1, x1, #0x8ca
    260c:	bl	f10 <PyErr_SetString@plt>
    2610:	mov	x8, xzr
    2614:	stur	x8, [x29, #-8]
    2618:	b	2764 <PyInit_fcntl@@Base+0x1640>
    261c:	str	xzr, [sp, #56]
    2620:	str	xzr, [sp, #48]
    2624:	ldur	x8, [x29, #-40]
    2628:	cbz	x8, 264c <PyInit_fcntl@@Base+0x1528>
    262c:	ldur	x0, [x29, #-40]
    2630:	bl	fb0 <PyLong_AsLong@plt>
    2634:	str	x0, [sp, #48]
    2638:	bl	f90 <PyErr_Occurred@plt>
    263c:	cbz	x0, 264c <PyInit_fcntl@@Base+0x1528>
    2640:	mov	x8, xzr
    2644:	stur	x8, [x29, #-8]
    2648:	b	2764 <PyInit_fcntl@@Base+0x1640>
    264c:	ldur	x8, [x29, #-32]
    2650:	cbz	x8, 2674 <PyInit_fcntl@@Base+0x1550>
    2654:	ldur	x0, [x29, #-32]
    2658:	bl	fb0 <PyLong_AsLong@plt>
    265c:	str	x0, [sp, #56]
    2660:	bl	f90 <PyErr_Occurred@plt>
    2664:	cbz	x0, 2674 <PyInit_fcntl@@Base+0x1550>
    2668:	mov	x8, xzr
    266c:	stur	x8, [x29, #-8]
    2670:	b	2764 <PyInit_fcntl@@Base+0x1640>
    2674:	ldur	w8, [x29, #-44]
    2678:	add	x9, sp, #0x28
    267c:	strh	w8, [x9, #2]
    2680:	bl	fe0 <PyEval_SaveThread@plt>
    2684:	str	x0, [sp, #32]
    2688:	ldur	w0, [x29, #-20]
    268c:	ldur	w8, [x29, #-24]
    2690:	mov	w9, #0x7                   	// #7
    2694:	mov	w10, #0x6                   	// #6
    2698:	tst	w8, #0x4
    269c:	csel	w1, w10, w9, ne  // ne = any
    26a0:	add	x2, sp, #0x28
    26a4:	bl	fd0 <fcntl64@plt>
    26a8:	stur	w0, [x29, #-48]
    26ac:	ldr	x0, [sp, #32]
    26b0:	bl	ec0 <PyEval_RestoreThread@plt>
    26b4:	ldur	w8, [x29, #-48]
    26b8:	mov	w9, #0xffffffff            	// #-1
    26bc:	mov	w10, #0x0                   	// #0
    26c0:	cmp	w8, w9
    26c4:	str	w10, [sp, #28]
    26c8:	b.ne	26fc <PyInit_fcntl@@Base+0x15d8>  // b.any
    26cc:	bl	1020 <__errno_location@plt>
    26d0:	ldr	w8, [x0]
    26d4:	mov	w9, #0x0                   	// #0
    26d8:	cmp	w8, #0x4
    26dc:	str	w9, [sp, #28]
    26e0:	b.ne	26fc <PyInit_fcntl@@Base+0x15d8>  // b.any
    26e4:	bl	1000 <PyErr_CheckSignals@plt>
    26e8:	stur	w0, [x29, #-52]
    26ec:	cmp	w0, #0x0
    26f0:	cset	w8, ne  // ne = any
    26f4:	eor	w8, w8, #0x1
    26f8:	str	w8, [sp, #28]
    26fc:	ldr	w8, [sp, #28]
    2700:	tbnz	w8, #0, 2680 <PyInit_fcntl@@Base+0x155c>
    2704:	ldur	w8, [x29, #-48]
    2708:	cmp	w8, #0x0
    270c:	cset	w8, ge  // ge = tcont
    2710:	tbnz	w8, #0, 2748 <PyInit_fcntl@@Base+0x1624>
    2714:	ldur	w8, [x29, #-52]
    2718:	cbnz	w8, 2734 <PyInit_fcntl@@Base+0x1610>
    271c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2720:	ldr	x8, [x8, #4040]
    2724:	ldr	x0, [x8]
    2728:	bl	ed0 <PyErr_SetFromErrno@plt>
    272c:	str	x0, [sp, #16]
    2730:	b	273c <PyInit_fcntl@@Base+0x1618>
    2734:	mov	x8, xzr
    2738:	str	x8, [sp, #16]
    273c:	ldr	x8, [sp, #16]
    2740:	stur	x8, [x29, #-8]
    2744:	b	2764 <PyInit_fcntl@@Base+0x1640>
    2748:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    274c:	ldr	x8, [x8, #4056]
    2750:	mov	x0, x8
    2754:	str	x8, [sp, #8]
    2758:	bl	2568 <PyInit_fcntl@@Base+0x1444>
    275c:	ldr	x8, [sp, #8]
    2760:	stur	x8, [x29, #-8]
    2764:	ldur	x0, [x29, #-8]
    2768:	ldp	x29, x30, [sp, #128]
    276c:	add	sp, sp, #0x90
    2770:	ret

Disassembly of section .fini:

0000000000002774 <.fini>:
    2774:	stp	x29, x30, [sp, #-16]!
    2778:	mov	x29, sp
    277c:	ldp	x29, x30, [sp], #16
    2780:	ret
