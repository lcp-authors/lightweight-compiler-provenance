
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-done_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210b60 <_start>:
  210b60:	mov	x29, #0x0                   	// #0
  210b64:	mov	x30, #0x0                   	// #0
  210b68:	mov	x5, x0
  210b6c:	ldr	x1, [sp]
  210b70:	add	x2, sp, #0x8
  210b74:	mov	x6, sp
  210b78:	movz	x0, #0x0, lsl #48
  210b7c:	movk	x0, #0x0, lsl #32
  210b80:	movk	x0, #0x21, lsl #16
  210b84:	movk	x0, #0xcb0
  210b88:	movz	x3, #0x0, lsl #48
  210b8c:	movk	x3, #0x0, lsl #32
  210b90:	movk	x3, #0x21, lsl #16
  210b94:	movk	x3, #0xef0
  210b98:	movz	x4, #0x0, lsl #48
  210b9c:	movk	x4, #0x0, lsl #32
  210ba0:	movk	x4, #0x21, lsl #16
  210ba4:	movk	x4, #0xf70
  210ba8:	bl	210fd0 <__libc_start_main@plt>
  210bac:	bl	210fe0 <abort@plt>

0000000000210bb0 <call_weak_fn>:
  210bb0:	adrp	x0, 221000 <__xstat64@plt+0xff60>
  210bb4:	ldr	x0, [x0, #656]
  210bb8:	cbz	x0, 210bc0 <call_weak_fn+0x10>
  210bbc:	b	210ff0 <__gmon_start__@plt>
  210bc0:	ret

0000000000210bc4 <deregister_tm_clones>:
  210bc4:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210bc8:	add	x0, x0, #0x320
  210bcc:	adrp	x1, 231000 <_DYNAMIC+0xff40>
  210bd0:	add	x1, x1, #0x320
  210bd4:	cmp	x0, x1
  210bd8:	b.eq	210c0c <deregister_tm_clones+0x48>  // b.none
  210bdc:	stp	x29, x30, [sp, #-32]!
  210be0:	mov	x29, sp
  210be4:	adrp	x0, 200000 <__FRAME_END__-0xa50>
  210be8:	ldr	x0, [x0, #2152]
  210bec:	str	x0, [sp, #24]
  210bf0:	mov	x1, x0
  210bf4:	cbz	x1, 210c04 <deregister_tm_clones+0x40>
  210bf8:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210bfc:	add	x0, x0, #0x320
  210c00:	blr	x1
  210c04:	ldp	x29, x30, [sp], #32
  210c08:	ret
  210c0c:	ret

0000000000210c10 <register_tm_clones>:
  210c10:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210c14:	add	x0, x0, #0x320
  210c18:	adrp	x1, 231000 <_DYNAMIC+0xff40>
  210c1c:	add	x1, x1, #0x320
  210c20:	sub	x0, x0, x1
  210c24:	lsr	x1, x0, #63
  210c28:	add	x0, x1, x0, asr #3
  210c2c:	cmp	xzr, x0, asr #1
  210c30:	b.eq	210c68 <register_tm_clones+0x58>  // b.none
  210c34:	stp	x29, x30, [sp, #-32]!
  210c38:	mov	x29, sp
  210c3c:	asr	x1, x0, #1
  210c40:	adrp	x0, 200000 <__FRAME_END__-0xa50>
  210c44:	ldr	x0, [x0, #2160]
  210c48:	str	x0, [sp, #24]
  210c4c:	mov	x2, x0
  210c50:	cbz	x2, 210c60 <register_tm_clones+0x50>
  210c54:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210c58:	add	x0, x0, #0x320
  210c5c:	blr	x2
  210c60:	ldp	x29, x30, [sp], #32
  210c64:	ret
  210c68:	ret

0000000000210c6c <__do_global_dtors_aux>:
  210c6c:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210c70:	ldrb	w0, [x0, #800]
  210c74:	cbnz	w0, 210c98 <__do_global_dtors_aux+0x2c>
  210c78:	stp	x29, x30, [sp, #-16]!
  210c7c:	mov	x29, sp
  210c80:	bl	210bc4 <deregister_tm_clones>
  210c84:	adrp	x0, 231000 <_DYNAMIC+0xff40>
  210c88:	mov	w1, #0x1                   	// #1
  210c8c:	strb	w1, [x0, #800]
  210c90:	ldp	x29, x30, [sp], #16
  210c94:	ret
  210c98:	ret

0000000000210c9c <frame_dummy>:
  210c9c:	stp	x29, x30, [sp, #-16]!
  210ca0:	mov	x29, sp
  210ca4:	bl	210c10 <register_tm_clones>
  210ca8:	ldp	x29, x30, [sp], #16
  210cac:	ret

0000000000210cb0 <main>:
  210cb0:	sub	sp, sp, #0xa0
  210cb4:	stp	x29, x30, [sp, #128]
  210cb8:	stp	x20, x19, [sp, #144]
  210cbc:	add	x29, sp, #0x80
  210cc0:	bl	211000 <log_setup_service@plt>
  210cc4:	adrp	x0, 200000 <__FRAME_END__-0xa50>
  210cc8:	add	x0, x0, #0x9e5
  210ccc:	mov	x1, sp
  210cd0:	bl	210f78 <stat64>
  210cd4:	tbnz	w0, #31, 210d18 <main+0x68>
  210cd8:	bl	211010 <mac_selinux_init@plt>
  210cdc:	tbnz	w0, #31, 210d54 <main+0xa4>
  210ce0:	mov	x8, sp
  210ce4:	add	x19, x8, #0x58
  210ce8:	adrp	x0, 200000 <__FRAME_END__-0xa50>
  210cec:	add	x0, x0, #0x9fa
  210cf0:	mov	x1, x19
  210cf4:	bl	210da4 <apply_timestamp>
  210cf8:	mov	w20, w0
  210cfc:	adrp	x0, 200000 <__FRAME_END__-0xa50>
  210d00:	add	x0, x0, #0x891
  210d04:	mov	x1, x19
  210d08:	bl	210da4 <apply_timestamp>
  210d0c:	orr	w8, w0, w20
  210d10:	lsr	w0, w8, #31
  210d14:	b	210d94 <main+0xe4>
  210d18:	mov	w0, wzr
  210d1c:	bl	211020 <log_get_max_level_realm@plt>
  210d20:	cmp	w0, #0x3
  210d24:	b.lt	210d90 <main+0xe0>  // b.tstop
  210d28:	bl	211030 <__errno_location@plt>
  210d2c:	ldr	w1, [x0]
  210d30:	adrp	x2, 200000 <__FRAME_END__-0xa50>
  210d34:	adrp	x4, 200000 <__FRAME_END__-0xa50>
  210d38:	adrp	x5, 200000 <__FRAME_END__-0xa50>
  210d3c:	add	x2, x2, #0x994
  210d40:	add	x4, x4, #0x9b2
  210d44:	add	x5, x5, #0x960
  210d48:	mov	w0, #0x3                   	// #3
  210d4c:	mov	w3, #0x2f                  	// #47
  210d50:	b	210d8c <main+0xdc>
  210d54:	mov	w19, w0
  210d58:	mov	w0, wzr
  210d5c:	bl	211020 <log_get_max_level_realm@plt>
  210d60:	cmp	w0, #0x3
  210d64:	b.lt	210d90 <main+0xe0>  // b.tstop
  210d68:	adrp	x2, 200000 <__FRAME_END__-0xa50>
  210d6c:	adrp	x4, 200000 <__FRAME_END__-0xa50>
  210d70:	adrp	x5, 200000 <__FRAME_END__-0xa50>
  210d74:	add	x2, x2, #0x994
  210d78:	add	x4, x4, #0x9b2
  210d7c:	add	x5, x5, #0x878
  210d80:	mov	w0, #0x3                   	// #3
  210d84:	mov	w3, #0x35                  	// #53
  210d88:	mov	w1, w19
  210d8c:	bl	211040 <log_internal_realm@plt>
  210d90:	mov	w0, #0x1                   	// #1
  210d94:	ldp	x20, x19, [sp, #144]
  210d98:	ldp	x29, x30, [sp, #128]
  210d9c:	add	sp, sp, #0xa0
  210da0:	ret

0000000000210da4 <apply_timestamp>:
  210da4:	sub	sp, sp, #0x30
  210da8:	stp	x20, x19, [sp, #32]
  210dac:	mov	x19, x0
  210db0:	mov	x0, x1
  210db4:	stp	x29, x30, [sp, #16]
  210db8:	add	x29, sp, #0x10
  210dbc:	mov	x20, x1
  210dc0:	str	xzr, [sp, #8]
  210dc4:	bl	211050 <timespec_load_nsec@plt>
  210dc8:	adrp	x1, 200000 <__FRAME_END__-0xa50>
  210dcc:	mov	x2, x0
  210dd0:	add	x1, x1, #0x89f
  210dd4:	add	x0, sp, #0x8
  210dd8:	bl	211060 <asprintf@plt>
  210ddc:	tbnz	w0, #31, 210e34 <apply_timestamp+0x90>
  210de0:	ldr	x1, [sp, #8]
  210de4:	mov	x0, x19
  210de8:	mov	x2, x20
  210dec:	bl	211070 <write_string_file_atomic_label_ts@plt>
  210df0:	cmn	w0, #0x1e
  210df4:	b.ne	210e58 <apply_timestamp+0xb4>  // b.any
  210df8:	mov	w0, wzr
  210dfc:	bl	211020 <log_get_max_level_realm@plt>
  210e00:	cmp	w0, #0x7
  210e04:	mov	w20, wzr
  210e08:	b.lt	210eb8 <apply_timestamp+0x114>  // b.tstop
  210e0c:	adrp	x2, 200000 <__FRAME_END__-0xa50>
  210e10:	adrp	x4, 200000 <__FRAME_END__-0xa50>
  210e14:	adrp	x5, 200000 <__FRAME_END__-0xa50>
  210e18:	add	x2, x2, #0x994
  210e1c:	add	x4, x4, #0x9ea
  210e20:	add	x5, x5, #0x9b7
  210e24:	mov	w0, #0x7                   	// #7
  210e28:	mov	w3, #0x22                  	// #34
  210e2c:	mov	w1, wzr
  210e30:	b	210e9c <apply_timestamp+0xf8>
  210e34:	adrp	x1, 200000 <__FRAME_END__-0xa50>
  210e38:	adrp	x3, 200000 <__FRAME_END__-0xa50>
  210e3c:	add	x1, x1, #0x994
  210e40:	add	x3, x3, #0x9ea
  210e44:	mov	w2, #0x1e                  	// #30
  210e48:	mov	w0, wzr
  210e4c:	bl	211080 <log_oom_internal@plt>
  210e50:	mov	w20, w0
  210e54:	b	210eb8 <apply_timestamp+0x114>
  210e58:	mov	w20, w0
  210e5c:	tbnz	w0, #31, 210e68 <apply_timestamp+0xc4>
  210e60:	mov	w20, wzr
  210e64:	b	210eb8 <apply_timestamp+0x114>
  210e68:	mov	w0, wzr
  210e6c:	bl	211020 <log_get_max_level_realm@plt>
  210e70:	cmp	w0, #0x3
  210e74:	b.lt	210eac <apply_timestamp+0x108>  // b.tstop
  210e78:	adrp	x2, 200000 <__FRAME_END__-0xa50>
  210e7c:	adrp	x4, 200000 <__FRAME_END__-0xa50>
  210e80:	adrp	x5, 200000 <__FRAME_END__-0xa50>
  210e84:	add	x2, x2, #0x994
  210e88:	add	x4, x4, #0x9ea
  210e8c:	add	x5, x5, #0x978
  210e90:	mov	w0, #0x3                   	// #3
  210e94:	mov	w3, #0x24                  	// #36
  210e98:	mov	w1, w20
  210e9c:	mov	x6, x19
  210ea0:	bl	211040 <log_internal_realm@plt>
  210ea4:	mov	w20, w0
  210ea8:	b	210eb8 <apply_timestamp+0x114>
  210eac:	mov	w8, wzr
  210eb0:	neg	w9, w20
  210eb4:	sub	w20, w8, w9, uxtb
  210eb8:	add	x0, sp, #0x8
  210ebc:	bl	210ed4 <freep>
  210ec0:	mov	w0, w20
  210ec4:	ldp	x20, x19, [sp, #32]
  210ec8:	ldp	x29, x30, [sp, #16]
  210ecc:	add	sp, sp, #0x30
  210ed0:	ret

0000000000210ed4 <freep>:
  210ed4:	stp	x29, x30, [sp, #-16]!
  210ed8:	ldr	x0, [x0]
  210edc:	mov	x29, sp
  210ee0:	bl	211090 <free@plt>
  210ee4:	ldp	x29, x30, [sp], #16
  210ee8:	ret
  210eec:	udf	#0

0000000000210ef0 <__libc_csu_init>:
  210ef0:	stp	x29, x30, [sp, #-64]!
  210ef4:	mov	x29, sp
  210ef8:	stp	x19, x20, [sp, #16]
  210efc:	adrp	x20, 221000 <__xstat64@plt+0xff60>
  210f00:	add	x20, x20, #0xc0
  210f04:	stp	x21, x22, [sp, #32]
  210f08:	adrp	x21, 221000 <__xstat64@plt+0xff60>
  210f0c:	add	x21, x21, #0xb8
  210f10:	sub	x20, x20, x21
  210f14:	mov	w22, w0
  210f18:	stp	x23, x24, [sp, #48]
  210f1c:	mov	x23, x1
  210f20:	mov	x24, x2
  210f24:	bl	210f88 <_init>
  210f28:	cmp	xzr, x20, asr #3
  210f2c:	b.eq	210f58 <__libc_csu_init+0x68>  // b.none
  210f30:	asr	x20, x20, #3
  210f34:	mov	x19, #0x0                   	// #0
  210f38:	ldr	x3, [x21, x19, lsl #3]
  210f3c:	mov	x2, x24
  210f40:	add	x19, x19, #0x1
  210f44:	mov	x1, x23
  210f48:	mov	w0, w22
  210f4c:	blr	x3
  210f50:	cmp	x20, x19
  210f54:	b.ne	210f38 <__libc_csu_init+0x48>  // b.any
  210f58:	ldp	x19, x20, [sp, #16]
  210f5c:	ldp	x21, x22, [sp, #32]
  210f60:	ldp	x23, x24, [sp, #48]
  210f64:	ldp	x29, x30, [sp], #64
  210f68:	ret
  210f6c:	nop

0000000000210f70 <__libc_csu_fini>:
  210f70:	ret
  210f74:	udf	#0

0000000000210f78 <stat64>:
  210f78:	mov	x2, x1
  210f7c:	mov	x1, x0
  210f80:	mov	w0, #0x0                   	// #0
  210f84:	b	2110a0 <__xstat64@plt>

Disassembly of section .init:

0000000000210f88 <_init>:
  210f88:	stp	x29, x30, [sp, #-16]!
  210f8c:	mov	x29, sp
  210f90:	bl	210bb0 <call_weak_fn>
  210f94:	ldp	x29, x30, [sp], #16
  210f98:	ret

Disassembly of section .fini:

0000000000210f9c <_fini>:
  210f9c:	stp	x29, x30, [sp, #-16]!
  210fa0:	mov	x29, sp
  210fa4:	ldp	x29, x30, [sp], #16
  210fa8:	ret

Disassembly of section .plt:

0000000000210fb0 <__libc_start_main@plt-0x20>:
  210fb0:	stp	x16, x30, [sp, #-16]!
  210fb4:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  210fb8:	ldr	x17, [x16, #680]
  210fbc:	add	x16, x16, #0x2a8
  210fc0:	br	x17
  210fc4:	nop
  210fc8:	nop
  210fcc:	nop

0000000000210fd0 <__libc_start_main@plt>:
  210fd0:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  210fd4:	ldr	x17, [x16, #688]
  210fd8:	add	x16, x16, #0x2b0
  210fdc:	br	x17

0000000000210fe0 <abort@plt>:
  210fe0:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  210fe4:	ldr	x17, [x16, #696]
  210fe8:	add	x16, x16, #0x2b8
  210fec:	br	x17

0000000000210ff0 <__gmon_start__@plt>:
  210ff0:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  210ff4:	ldr	x17, [x16, #704]
  210ff8:	add	x16, x16, #0x2c0
  210ffc:	br	x17

0000000000211000 <log_setup_service@plt>:
  211000:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211004:	ldr	x17, [x16, #712]
  211008:	add	x16, x16, #0x2c8
  21100c:	br	x17

0000000000211010 <mac_selinux_init@plt>:
  211010:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211014:	ldr	x17, [x16, #720]
  211018:	add	x16, x16, #0x2d0
  21101c:	br	x17

0000000000211020 <log_get_max_level_realm@plt>:
  211020:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211024:	ldr	x17, [x16, #728]
  211028:	add	x16, x16, #0x2d8
  21102c:	br	x17

0000000000211030 <__errno_location@plt>:
  211030:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211034:	ldr	x17, [x16, #736]
  211038:	add	x16, x16, #0x2e0
  21103c:	br	x17

0000000000211040 <log_internal_realm@plt>:
  211040:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211044:	ldr	x17, [x16, #744]
  211048:	add	x16, x16, #0x2e8
  21104c:	br	x17

0000000000211050 <timespec_load_nsec@plt>:
  211050:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211054:	ldr	x17, [x16, #752]
  211058:	add	x16, x16, #0x2f0
  21105c:	br	x17

0000000000211060 <asprintf@plt>:
  211060:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211064:	ldr	x17, [x16, #760]
  211068:	add	x16, x16, #0x2f8
  21106c:	br	x17

0000000000211070 <write_string_file_atomic_label_ts@plt>:
  211070:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211074:	ldr	x17, [x16, #768]
  211078:	add	x16, x16, #0x300
  21107c:	br	x17

0000000000211080 <log_oom_internal@plt>:
  211080:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211084:	ldr	x17, [x16, #776]
  211088:	add	x16, x16, #0x308
  21108c:	br	x17

0000000000211090 <free@plt>:
  211090:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  211094:	ldr	x17, [x16, #784]
  211098:	add	x16, x16, #0x310
  21109c:	br	x17

00000000002110a0 <__xstat64@plt>:
  2110a0:	adrp	x16, 221000 <__xstat64@plt+0xff60>
  2110a4:	ldr	x17, [x16, #792]
  2110a8:	add	x16, x16, #0x318
  2110ac:	br	x17
