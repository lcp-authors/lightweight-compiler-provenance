
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000010f8 <.init>:
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	bl	1330 <_PyTime_GetMonotonicClock@plt+0x10>
    1104:	ldp	x29, x30, [sp], #16
    1108:	ret

Disassembly of section .plt:

0000000000001110 <PyMem_Free@plt-0x20>:
    1110:	stp	x16, x30, [sp, #-16]!
    1114:	adrp	x16, 12000 <PyInit__random@@Base+0x10bfc>
    1118:	ldr	x17, [x16, #4088]
    111c:	add	x16, x16, #0xff8
    1120:	br	x17
    1124:	nop
    1128:	nop
    112c:	nop

0000000000001130 <PyMem_Free@plt>:
    1130:	adrp	x16, 13000 <PyMem_Free>
    1134:	ldr	x17, [x16]
    1138:	add	x16, x16, #0x0
    113c:	br	x17

0000000000001140 <__cxa_finalize@plt>:
    1140:	adrp	x16, 13000 <PyMem_Free>
    1144:	ldr	x17, [x16, #8]
    1148:	add	x16, x16, #0x8
    114c:	br	x17

0000000000001150 <_PyTime_GetSystemClock@plt>:
    1150:	adrp	x16, 13000 <PyMem_Free>
    1154:	ldr	x17, [x16, #16]
    1158:	add	x16, x16, #0x10
    115c:	br	x17

0000000000001160 <_Py_Dealloc@plt>:
    1160:	adrp	x16, 13000 <PyMem_Free>
    1164:	ldr	x17, [x16, #24]
    1168:	add	x16, x16, #0x18
    116c:	br	x17

0000000000001170 <PyErr_NoMemory@plt>:
    1170:	adrp	x16, 13000 <PyMem_Free>
    1174:	ldr	x17, [x16, #32]
    1178:	add	x16, x16, #0x20
    117c:	br	x17

0000000000001180 <PyLong_FromSize_t@plt>:
    1180:	adrp	x16, 13000 <PyMem_Free>
    1184:	ldr	x17, [x16, #40]
    1188:	add	x16, x16, #0x28
    118c:	br	x17

0000000000001190 <_PyLong_NumBits@plt>:
    1190:	adrp	x16, 13000 <PyMem_Free>
    1194:	ldr	x17, [x16, #48]
    1198:	add	x16, x16, #0x30
    119c:	br	x17

00000000000011a0 <getpid@plt>:
    11a0:	adrp	x16, 13000 <PyMem_Free>
    11a4:	ldr	x17, [x16, #56]
    11a8:	add	x16, x16, #0x38
    11ac:	br	x17

00000000000011b0 <PyErr_SetString@plt>:
    11b0:	adrp	x16, 13000 <PyMem_Free>
    11b4:	ldr	x17, [x16, #64]
    11b8:	add	x16, x16, #0x40
    11bc:	br	x17

00000000000011c0 <_PyLong_FromByteArray@plt>:
    11c0:	adrp	x16, 13000 <PyMem_Free>
    11c4:	ldr	x17, [x16, #72]
    11c8:	add	x16, x16, #0x48
    11cc:	br	x17

00000000000011d0 <PyFloat_FromDouble@plt>:
    11d0:	adrp	x16, 13000 <PyMem_Free>
    11d4:	ldr	x17, [x16, #80]
    11d8:	add	x16, x16, #0x50
    11dc:	br	x17

00000000000011e0 <PyType_Ready@plt>:
    11e0:	adrp	x16, 13000 <PyMem_Free>
    11e4:	ldr	x17, [x16, #88]
    11e8:	add	x16, x16, #0x58
    11ec:	br	x17

00000000000011f0 <PyLong_FromLong@plt>:
    11f0:	adrp	x16, 13000 <PyMem_Free>
    11f4:	ldr	x17, [x16, #96]
    11f8:	add	x16, x16, #0x60
    11fc:	br	x17

0000000000001200 <PyErr_Clear@plt>:
    1200:	adrp	x16, 13000 <PyMem_Free>
    1204:	ldr	x17, [x16, #104]
    1208:	add	x16, x16, #0x68
    120c:	br	x17

0000000000001210 <__gmon_start__@plt>:
    1210:	adrp	x16, 13000 <PyMem_Free>
    1214:	ldr	x17, [x16, #112]
    1218:	add	x16, x16, #0x70
    121c:	br	x17

0000000000001220 <PyTuple_New@plt>:
    1220:	adrp	x16, 13000 <PyMem_Free>
    1224:	ldr	x17, [x16, #120]
    1228:	add	x16, x16, #0x78
    122c:	br	x17

0000000000001230 <_PyArg_CheckPositional@plt>:
    1230:	adrp	x16, 13000 <PyMem_Free>
    1234:	ldr	x17, [x16, #128]
    1238:	add	x16, x16, #0x80
    123c:	br	x17

0000000000001240 <PyErr_Occurred@plt>:
    1240:	adrp	x16, 13000 <PyMem_Free>
    1244:	ldr	x17, [x16, #136]
    1248:	add	x16, x16, #0x88
    124c:	br	x17

0000000000001250 <PyModule_Create2@plt>:
    1250:	adrp	x16, 13000 <PyMem_Free>
    1254:	ldr	x17, [x16, #144]
    1258:	add	x16, x16, #0x90
    125c:	br	x17

0000000000001260 <PyLong_AsLong@plt>:
    1260:	adrp	x16, 13000 <PyMem_Free>
    1264:	ldr	x17, [x16, #152]
    1268:	add	x16, x16, #0x98
    126c:	br	x17

0000000000001270 <PyObject_Hash@plt>:
    1270:	adrp	x16, 13000 <PyMem_Free>
    1274:	ldr	x17, [x16, #160]
    1278:	add	x16, x16, #0xa0
    127c:	br	x17

0000000000001280 <PyLong_AsUnsignedLong@plt>:
    1280:	adrp	x16, 13000 <PyMem_Free>
    1284:	ldr	x17, [x16, #168]
    1288:	add	x16, x16, #0xa8
    128c:	br	x17

0000000000001290 <PyLong_FromUnsignedLong@plt>:
    1290:	adrp	x16, 13000 <PyMem_Free>
    1294:	ldr	x17, [x16, #176]
    1298:	add	x16, x16, #0xb0
    129c:	br	x17

00000000000012a0 <PyModule_AddObject@plt>:
    12a0:	adrp	x16, 13000 <PyMem_Free>
    12a4:	ldr	x17, [x16, #184]
    12a8:	add	x16, x16, #0xb8
    12ac:	br	x17

00000000000012b0 <PyType_IsSubtype@plt>:
    12b0:	adrp	x16, 13000 <PyMem_Free>
    12b4:	ldr	x17, [x16, #192]
    12b8:	add	x16, x16, #0xc0
    12bc:	br	x17

00000000000012c0 <_PyLong_AsByteArray@plt>:
    12c0:	adrp	x16, 13000 <PyMem_Free>
    12c4:	ldr	x17, [x16, #200]
    12c8:	add	x16, x16, #0xc8
    12cc:	br	x17

00000000000012d0 <PyTuple_Size@plt>:
    12d0:	adrp	x16, 13000 <PyMem_Free>
    12d4:	ldr	x17, [x16, #208]
    12d8:	add	x16, x16, #0xd0
    12dc:	br	x17

00000000000012e0 <_PyOS_URandomNonblock@plt>:
    12e0:	adrp	x16, 13000 <PyMem_Free>
    12e4:	ldr	x17, [x16, #216]
    12e8:	add	x16, x16, #0xd8
    12ec:	br	x17

00000000000012f0 <_PyArg_NoKeywords@plt>:
    12f0:	adrp	x16, 13000 <PyMem_Free>
    12f4:	ldr	x17, [x16, #224]
    12f8:	add	x16, x16, #0xe0
    12fc:	br	x17

0000000000001300 <_PyLong_AsInt@plt>:
    1300:	adrp	x16, 13000 <PyMem_Free>
    1304:	ldr	x17, [x16, #232]
    1308:	add	x16, x16, #0xe8
    130c:	br	x17

0000000000001310 <PyMem_Malloc@plt>:
    1310:	adrp	x16, 13000 <PyMem_Free>
    1314:	ldr	x17, [x16, #240]
    1318:	add	x16, x16, #0xf0
    131c:	br	x17

0000000000001320 <_PyTime_GetMonotonicClock@plt>:
    1320:	adrp	x16, 13000 <PyMem_Free>
    1324:	ldr	x17, [x16, #248]
    1328:	add	x16, x16, #0xf8
    132c:	br	x17

Disassembly of section .text:

0000000000001330 <PyInit__random@@Base-0xd4>:
    1330:	adrp	x0, 12000 <PyInit__random@@Base+0x10bfc>
    1334:	ldr	x0, [x0, #4040]
    1338:	cbz	x0, 1340 <_PyTime_GetMonotonicClock@plt+0x20>
    133c:	b	1210 <__gmon_start__@plt>
    1340:	ret
    1344:	nop
    1348:	adrp	x0, 13000 <PyInit__random@@Base+0x11bfc>
    134c:	add	x0, x0, #0x3d0
    1350:	adrp	x1, 13000 <PyInit__random@@Base+0x11bfc>
    1354:	add	x1, x1, #0x3d0
    1358:	cmp	x1, x0
    135c:	b.eq	1374 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    1360:	adrp	x1, 12000 <PyInit__random@@Base+0x10bfc>
    1364:	ldr	x1, [x1, #4000]
    1368:	cbz	x1, 1374 <_PyTime_GetMonotonicClock@plt+0x54>
    136c:	mov	x16, x1
    1370:	br	x16
    1374:	ret
    1378:	adrp	x0, 13000 <PyInit__random@@Base+0x11bfc>
    137c:	add	x0, x0, #0x3d0
    1380:	adrp	x1, 13000 <PyInit__random@@Base+0x11bfc>
    1384:	add	x1, x1, #0x3d0
    1388:	sub	x1, x1, x0
    138c:	lsr	x2, x1, #63
    1390:	add	x1, x2, x1, asr #3
    1394:	cmp	xzr, x1, asr #1
    1398:	asr	x1, x1, #1
    139c:	b.eq	13b4 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13a0:	adrp	x2, 12000 <PyInit__random@@Base+0x10bfc>
    13a4:	ldr	x2, [x2, #4064]
    13a8:	cbz	x2, 13b4 <_PyTime_GetMonotonicClock@plt+0x94>
    13ac:	mov	x16, x2
    13b0:	br	x16
    13b4:	ret
    13b8:	stp	x29, x30, [sp, #-32]!
    13bc:	mov	x29, sp
    13c0:	str	x19, [sp, #16]
    13c4:	adrp	x19, 13000 <PyInit__random@@Base+0x11bfc>
    13c8:	ldrb	w0, [x19, #976]
    13cc:	cbnz	w0, 13f4 <_PyTime_GetMonotonicClock@plt+0xd4>
    13d0:	adrp	x0, 12000 <PyInit__random@@Base+0x10bfc>
    13d4:	ldr	x0, [x0, #4016]
    13d8:	cbz	x0, 13e8 <_PyTime_GetMonotonicClock@plt+0xc8>
    13dc:	adrp	x0, 13000 <PyInit__random@@Base+0x11bfc>
    13e0:	ldr	x0, [x0, #256]
    13e4:	bl	1140 <__cxa_finalize@plt>
    13e8:	bl	1348 <_PyTime_GetMonotonicClock@plt+0x28>
    13ec:	mov	w0, #0x1                   	// #1
    13f0:	strb	w0, [x19, #976]
    13f4:	ldr	x19, [sp, #16]
    13f8:	ldp	x29, x30, [sp], #32
    13fc:	ret
    1400:	b	1378 <_PyTime_GetMonotonicClock@plt+0x58>

0000000000001404 <PyInit__random@@Base>:
    1404:	sub	sp, sp, #0x30
    1408:	stp	x29, x30, [sp, #32]
    140c:	add	x29, sp, #0x20
    1410:	adrp	x8, 13000 <PyInit__random@@Base+0x11bfc>
    1414:	add	x8, x8, #0x108
    1418:	mov	x0, x8
    141c:	str	x8, [sp, #8]
    1420:	bl	11e0 <PyType_Ready@plt>
    1424:	cmp	w0, #0x0
    1428:	cset	w9, ge  // ge = tcont
    142c:	tbnz	w9, #0, 143c <PyInit__random@@Base+0x38>
    1430:	mov	x8, xzr
    1434:	stur	x8, [x29, #-8]
    1438:	b	1488 <PyInit__random@@Base+0x84>
    143c:	adrp	x0, 13000 <PyInit__random@@Base+0x11bfc>
    1440:	add	x0, x0, #0x2a8
    1444:	mov	w1, #0x3f5                 	// #1013
    1448:	bl	1250 <PyModule_Create2@plt>
    144c:	str	x0, [sp, #16]
    1450:	ldr	x8, [sp, #16]
    1454:	cbnz	x8, 1464 <PyInit__random@@Base+0x60>
    1458:	mov	x8, xzr
    145c:	stur	x8, [x29, #-8]
    1460:	b	1488 <PyInit__random@@Base+0x84>
    1464:	ldr	x0, [sp, #8]
    1468:	bl	1498 <PyInit__random@@Base+0x94>
    146c:	ldr	x0, [sp, #16]
    1470:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    1474:	add	x1, x1, #0x4ac
    1478:	ldr	x2, [sp, #8]
    147c:	bl	12a0 <PyModule_AddObject@plt>
    1480:	ldr	x8, [sp, #16]
    1484:	stur	x8, [x29, #-8]
    1488:	ldur	x0, [x29, #-8]
    148c:	ldp	x29, x30, [sp, #32]
    1490:	add	sp, sp, #0x30
    1494:	ret
    1498:	sub	sp, sp, #0x10
    149c:	str	x0, [sp, #8]
    14a0:	ldr	x8, [sp, #8]
    14a4:	ldr	x9, [x8]
    14a8:	add	x9, x9, #0x1
    14ac:	str	x9, [x8]
    14b0:	add	sp, sp, #0x10
    14b4:	ret
    14b8:	sub	sp, sp, #0x40
    14bc:	stp	x29, x30, [sp, #48]
    14c0:	add	x29, sp, #0x30
    14c4:	adrp	x8, 13000 <PyInit__random@@Base+0x11bfc>
    14c8:	add	x8, x8, #0x108
    14cc:	stur	x0, [x29, #-16]
    14d0:	str	x1, [sp, #24]
    14d4:	str	x2, [sp, #16]
    14d8:	ldur	x9, [x29, #-16]
    14dc:	cmp	x9, x8
    14e0:	b.ne	150c <PyInit__random@@Base+0x108>  // b.any
    14e4:	ldr	x8, [sp, #16]
    14e8:	cbz	x8, 150c <PyInit__random@@Base+0x108>
    14ec:	ldr	x1, [sp, #16]
    14f0:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    14f4:	add	x0, x0, #0x4ac
    14f8:	bl	12f0 <_PyArg_NoKeywords@plt>
    14fc:	cbnz	w0, 150c <PyInit__random@@Base+0x108>
    1500:	mov	x8, xzr
    1504:	stur	x8, [x29, #-8]
    1508:	b	1590 <PyInit__random@@Base+0x18c>
    150c:	ldur	x8, [x29, #-16]
    1510:	ldr	x8, [x8, #304]
    1514:	ldur	x0, [x29, #-16]
    1518:	mov	x9, xzr
    151c:	mov	x1, x9
    1520:	blr	x8
    1524:	str	x0, [sp, #8]
    1528:	ldr	x8, [sp, #8]
    152c:	cbnz	x8, 153c <PyInit__random@@Base+0x138>
    1530:	mov	x8, xzr
    1534:	stur	x8, [x29, #-8]
    1538:	b	1590 <PyInit__random@@Base+0x18c>
    153c:	ldr	x0, [sp, #8]
    1540:	ldr	x1, [sp, #24]
    1544:	bl	1bfc <PyInit__random@@Base+0x7f8>
    1548:	str	x0, [sp]
    154c:	ldr	x8, [sp]
    1550:	cbnz	x8, 1574 <PyInit__random@@Base+0x170>
    1554:	ldr	x2, [sp, #8]
    1558:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    155c:	add	x0, x0, #0x4e9
    1560:	mov	w1, #0x1ff                 	// #511
    1564:	bl	21b8 <PyInit__random@@Base+0xdb4>
    1568:	mov	x8, xzr
    156c:	stur	x8, [x29, #-8]
    1570:	b	1590 <PyInit__random@@Base+0x18c>
    1574:	ldr	x2, [sp]
    1578:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    157c:	add	x0, x0, #0x4e9
    1580:	mov	w1, #0x202                 	// #514
    1584:	bl	21b8 <PyInit__random@@Base+0xdb4>
    1588:	ldr	x8, [sp, #8]
    158c:	stur	x8, [x29, #-8]
    1590:	ldur	x0, [x29, #-8]
    1594:	ldp	x29, x30, [sp, #48]
    1598:	add	sp, sp, #0x40
    159c:	ret
    15a0:	sub	sp, sp, #0x20
    15a4:	stp	x29, x30, [sp, #16]
    15a8:	add	x29, sp, #0x10
    15ac:	str	x0, [sp, #8]
    15b0:	str	x1, [sp]
    15b4:	ldr	x0, [sp, #8]
    15b8:	bl	1944 <PyInit__random@@Base+0x540>
    15bc:	ldp	x29, x30, [sp, #16]
    15c0:	add	sp, sp, #0x20
    15c4:	ret
    15c8:	sub	sp, sp, #0x40
    15cc:	stp	x29, x30, [sp, #48]
    15d0:	add	x29, sp, #0x30
    15d4:	mov	x8, xzr
    15d8:	adrp	x9, 12000 <PyInit__random@@Base+0x10bfc>
    15dc:	ldr	x9, [x9, #4048]
    15e0:	stur	x0, [x29, #-8]
    15e4:	stur	x1, [x29, #-16]
    15e8:	str	x2, [sp, #24]
    15ec:	str	x8, [sp, #16]
    15f0:	str	x9, [sp, #8]
    15f4:	ldr	x9, [sp, #24]
    15f8:	cmp	x8, x9
    15fc:	cset	w10, gt
    1600:	tbnz	w10, #0, 1610 <PyInit__random@@Base+0x20c>
    1604:	ldr	x8, [sp, #24]
    1608:	cmp	x8, #0x1
    160c:	b.le	1634 <PyInit__random@@Base+0x230>
    1610:	ldr	x1, [sp, #24]
    1614:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    1618:	add	x0, x0, #0x4b3
    161c:	mov	x8, xzr
    1620:	mov	x2, x8
    1624:	mov	x3, #0x1                   	// #1
    1628:	bl	1230 <_PyArg_CheckPositional@plt>
    162c:	cbnz	w0, 1634 <PyInit__random@@Base+0x230>
    1630:	b	1660 <PyInit__random@@Base+0x25c>
    1634:	ldr	x8, [sp, #24]
    1638:	cmp	x8, #0x1
    163c:	b.ge	1644 <PyInit__random@@Base+0x240>  // b.tcont
    1640:	b	1650 <PyInit__random@@Base+0x24c>
    1644:	ldur	x8, [x29, #-16]
    1648:	ldr	x8, [x8]
    164c:	str	x8, [sp, #8]
    1650:	ldur	x0, [x29, #-8]
    1654:	ldr	x1, [sp, #8]
    1658:	bl	1bd0 <PyInit__random@@Base+0x7cc>
    165c:	str	x0, [sp, #16]
    1660:	ldr	x0, [sp, #16]
    1664:	ldp	x29, x30, [sp, #48]
    1668:	add	sp, sp, #0x40
    166c:	ret
    1670:	sub	sp, sp, #0x20
    1674:	stp	x29, x30, [sp, #16]
    1678:	add	x29, sp, #0x10
    167c:	str	x0, [sp, #8]
    1680:	str	x1, [sp]
    1684:	ldr	x0, [sp, #8]
    1688:	bl	21fc <PyInit__random@@Base+0xdf8>
    168c:	ldp	x29, x30, [sp, #16]
    1690:	add	sp, sp, #0x20
    1694:	ret
    1698:	stp	x29, x30, [sp, #-32]!
    169c:	str	x28, [sp, #16]
    16a0:	mov	x29, sp
    16a4:	sub	sp, sp, #0xa00
    16a8:	stur	x0, [x29, #-16]
    16ac:	stur	x1, [x29, #-24]
    16b0:	ldur	x8, [x29, #-24]
    16b4:	ldr	x8, [x8, #8]
    16b8:	ldr	x8, [x8, #168]
    16bc:	and	x8, x8, #0x4000000
    16c0:	cbnz	x8, 16e8 <PyInit__random@@Base+0x2e4>
    16c4:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    16c8:	ldr	x8, [x8, #4032]
    16cc:	ldr	x0, [x8]
    16d0:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    16d4:	add	x1, x1, #0x517
    16d8:	bl	11b0 <PyErr_SetString@plt>
    16dc:	mov	x8, xzr
    16e0:	stur	x8, [x29, #-8]
    16e4:	b	1880 <PyInit__random@@Base+0x47c>
    16e8:	ldur	x0, [x29, #-24]
    16ec:	bl	12d0 <PyTuple_Size@plt>
    16f0:	cmp	x0, #0x271
    16f4:	b.eq	171c <PyInit__random@@Base+0x318>  // b.none
    16f8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    16fc:	ldr	x8, [x8, #4024]
    1700:	ldr	x0, [x8]
    1704:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    1708:	add	x1, x1, #0x534
    170c:	bl	11b0 <PyErr_SetString@plt>
    1710:	mov	x8, xzr
    1714:	stur	x8, [x29, #-8]
    1718:	b	1880 <PyInit__random@@Base+0x47c>
    171c:	stur	wzr, [x29, #-28]
    1720:	ldur	w8, [x29, #-28]
    1724:	cmp	w8, #0x270
    1728:	b.ge	1794 <PyInit__random@@Base+0x390>  // b.tcont
    172c:	ldur	x8, [x29, #-24]
    1730:	add	x8, x8, #0x18
    1734:	ldursw	x9, [x29, #-28]
    1738:	mov	x10, #0x8                   	// #8
    173c:	mul	x9, x10, x9
    1740:	add	x8, x8, x9
    1744:	ldr	x0, [x8]
    1748:	bl	1280 <PyLong_AsUnsignedLong@plt>
    174c:	stur	x0, [x29, #-40]
    1750:	ldur	x8, [x29, #-40]
    1754:	mov	x9, #0xffffffffffffffff    	// #-1
    1758:	cmp	x8, x9
    175c:	b.ne	1774 <PyInit__random@@Base+0x370>  // b.any
    1760:	bl	1240 <PyErr_Occurred@plt>
    1764:	cbz	x0, 1774 <PyInit__random@@Base+0x370>
    1768:	mov	x8, xzr
    176c:	stur	x8, [x29, #-8]
    1770:	b	1880 <PyInit__random@@Base+0x47c>
    1774:	ldur	x8, [x29, #-40]
    1778:	ldursw	x9, [x29, #-28]
    177c:	add	x10, sp, #0x10
    1780:	str	w8, [x10, x9, lsl #2]
    1784:	ldur	w8, [x29, #-28]
    1788:	add	w8, w8, #0x1
    178c:	stur	w8, [x29, #-28]
    1790:	b	1720 <PyInit__random@@Base+0x31c>
    1794:	ldur	x8, [x29, #-24]
    1798:	add	x8, x8, #0x18
    179c:	ldursw	x9, [x29, #-28]
    17a0:	mov	x10, #0x8                   	// #8
    17a4:	mul	x9, x10, x9
    17a8:	add	x8, x8, x9
    17ac:	ldr	x0, [x8]
    17b0:	bl	1260 <PyLong_AsLong@plt>
    17b4:	stur	x0, [x29, #-48]
    17b8:	ldur	x8, [x29, #-48]
    17bc:	mov	x9, #0xffffffffffffffff    	// #-1
    17c0:	cmp	x8, x9
    17c4:	b.ne	17dc <PyInit__random@@Base+0x3d8>  // b.any
    17c8:	bl	1240 <PyErr_Occurred@plt>
    17cc:	cbz	x0, 17dc <PyInit__random@@Base+0x3d8>
    17d0:	mov	x8, xzr
    17d4:	stur	x8, [x29, #-8]
    17d8:	b	1880 <PyInit__random@@Base+0x47c>
    17dc:	ldur	x8, [x29, #-48]
    17e0:	cmp	x8, #0x0
    17e4:	cset	w9, lt  // lt = tstop
    17e8:	tbnz	w9, #0, 17f8 <PyInit__random@@Base+0x3f4>
    17ec:	ldur	x8, [x29, #-48]
    17f0:	cmp	x8, #0x270
    17f4:	b.le	181c <PyInit__random@@Base+0x418>
    17f8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    17fc:	ldr	x8, [x8, #4024]
    1800:	ldr	x0, [x8]
    1804:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    1808:	add	x1, x1, #0x553
    180c:	bl	11b0 <PyErr_SetString@plt>
    1810:	mov	x8, xzr
    1814:	stur	x8, [x29, #-8]
    1818:	b	1880 <PyInit__random@@Base+0x47c>
    181c:	ldur	x8, [x29, #-48]
    1820:	ldur	x9, [x29, #-16]
    1824:	str	w8, [x9, #16]
    1828:	stur	wzr, [x29, #-28]
    182c:	ldur	w8, [x29, #-28]
    1830:	cmp	w8, #0x270
    1834:	b.ge	1864 <PyInit__random@@Base+0x460>  // b.tcont
    1838:	ldursw	x8, [x29, #-28]
    183c:	add	x9, sp, #0x10
    1840:	ldr	w10, [x9, x8, lsl #2]
    1844:	ldur	x8, [x29, #-16]
    1848:	add	x8, x8, #0x14
    184c:	ldursw	x9, [x29, #-28]
    1850:	str	w10, [x8, x9, lsl #2]
    1854:	ldur	w8, [x29, #-28]
    1858:	add	w8, w8, #0x1
    185c:	stur	w8, [x29, #-28]
    1860:	b	182c <PyInit__random@@Base+0x428>
    1864:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    1868:	ldr	x8, [x8, #4048]
    186c:	mov	x0, x8
    1870:	str	x8, [sp, #8]
    1874:	bl	1498 <PyInit__random@@Base+0x94>
    1878:	ldr	x8, [sp, #8]
    187c:	stur	x8, [x29, #-8]
    1880:	ldur	x0, [x29, #-8]
    1884:	add	sp, sp, #0xa00
    1888:	ldr	x28, [sp, #16]
    188c:	ldp	x29, x30, [sp], #32
    1890:	ret
    1894:	sub	sp, sp, #0x30
    1898:	stp	x29, x30, [sp, #32]
    189c:	add	x29, sp, #0x20
    18a0:	mov	x8, xzr
    18a4:	adrp	x9, 12000 <PyInit__random@@Base+0x10bfc>
    18a8:	ldr	x9, [x9, #4008]
    18ac:	stur	x0, [x29, #-8]
    18b0:	str	x1, [sp, #16]
    18b4:	str	x8, [sp, #8]
    18b8:	ldr	x8, [sp, #16]
    18bc:	ldr	x8, [x8, #8]
    18c0:	cmp	x8, x9
    18c4:	b.eq	18e0 <PyInit__random@@Base+0x4dc>  // b.none
    18c8:	ldr	x8, [sp, #16]
    18cc:	ldr	x0, [x8, #8]
    18d0:	adrp	x1, 12000 <PyInit__random@@Base+0x10bfc>
    18d4:	ldr	x1, [x1, #4008]
    18d8:	bl	12b0 <PyType_IsSubtype@plt>
    18dc:	cbz	w0, 18fc <PyInit__random@@Base+0x4f8>
    18e0:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    18e4:	ldr	x8, [x8, #4032]
    18e8:	ldr	x0, [x8]
    18ec:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    18f0:	add	x1, x1, #0x561
    18f4:	bl	11b0 <PyErr_SetString@plt>
    18f8:	b	1934 <PyInit__random@@Base+0x530>
    18fc:	ldr	x0, [sp, #16]
    1900:	bl	1300 <_PyLong_AsInt@plt>
    1904:	str	w0, [sp, #4]
    1908:	ldr	w8, [sp, #4]
    190c:	mov	w9, #0xffffffff            	// #-1
    1910:	cmp	w8, w9
    1914:	b.ne	1924 <PyInit__random@@Base+0x520>  // b.any
    1918:	bl	1240 <PyErr_Occurred@plt>
    191c:	cbz	x0, 1924 <PyInit__random@@Base+0x520>
    1920:	b	1934 <PyInit__random@@Base+0x530>
    1924:	ldur	x0, [x29, #-8]
    1928:	ldr	w1, [sp, #4]
    192c:	bl	230c <PyInit__random@@Base+0xf08>
    1930:	str	x0, [sp, #8]
    1934:	ldr	x0, [sp, #8]
    1938:	ldp	x29, x30, [sp, #32]
    193c:	add	sp, sp, #0x30
    1940:	ret
    1944:	sub	sp, sp, #0x30
    1948:	stp	x29, x30, [sp, #32]
    194c:	add	x29, sp, #0x20
    1950:	mov	x8, #0x4190000000000000    	// #4724276009111650304
    1954:	fmov	d0, x8
    1958:	mov	x8, #0x3ca0000000000000    	// #4368491638549381120
    195c:	fmov	d1, x8
    1960:	stur	x0, [x29, #-8]
    1964:	ldur	x0, [x29, #-8]
    1968:	str	d0, [sp, #8]
    196c:	str	d1, [sp]
    1970:	bl	19c8 <PyInit__random@@Base+0x5c4>
    1974:	lsr	w9, w0, #5
    1978:	stur	w9, [x29, #-12]
    197c:	ldur	x0, [x29, #-8]
    1980:	bl	19c8 <PyInit__random@@Base+0x5c4>
    1984:	lsr	w9, w0, #6
    1988:	str	w9, [sp, #16]
    198c:	ldur	s2, [x29, #-12]
    1990:	mov	v0.16b, v2.16b
    1994:	ucvtf	d0, d0
    1998:	ldr	d1, [sp, #8]
    199c:	fmul	d0, d0, d1
    19a0:	ldr	s2, [sp, #16]
    19a4:	mov	v3.16b, v2.16b
    19a8:	ucvtf	d3, d3
    19ac:	fadd	d0, d0, d3
    19b0:	ldr	d3, [sp]
    19b4:	fmul	d0, d0, d3
    19b8:	bl	11d0 <PyFloat_FromDouble@plt>
    19bc:	ldp	x29, x30, [sp, #32]
    19c0:	add	sp, sp, #0x30
    19c4:	ret
    19c8:	sub	sp, sp, #0x30
    19cc:	adrp	x8, 2000 <PyInit__random@@Base+0xbfc>
    19d0:	add	x8, x8, #0x7c8
    19d4:	str	x0, [sp, #40]
    19d8:	ldr	x9, [sp, #40]
    19dc:	add	x9, x9, #0x14
    19e0:	str	x9, [sp, #24]
    19e4:	ldr	x9, [sp, #40]
    19e8:	ldr	w10, [x9, #16]
    19ec:	cmp	w10, #0x270
    19f0:	str	x8, [sp, #8]
    19f4:	b.lt	1b50 <PyInit__random@@Base+0x74c>  // b.tstop
    19f8:	str	wzr, [sp, #20]
    19fc:	ldr	w8, [sp, #20]
    1a00:	cmp	w8, #0xe3
    1a04:	b.ge	1a7c <PyInit__random@@Base+0x678>  // b.tcont
    1a08:	ldr	x8, [sp, #24]
    1a0c:	ldrsw	x9, [sp, #20]
    1a10:	ldr	w10, [x8, x9, lsl #2]
    1a14:	and	w10, w10, #0x80000000
    1a18:	ldr	x8, [sp, #24]
    1a1c:	ldr	w11, [sp, #20]
    1a20:	add	w11, w11, #0x1
    1a24:	ldr	w11, [x8, w11, sxtw #2]
    1a28:	and	w11, w11, #0x7fffffff
    1a2c:	orr	w10, w10, w11
    1a30:	str	w10, [sp, #36]
    1a34:	ldr	x8, [sp, #24]
    1a38:	ldr	w10, [sp, #20]
    1a3c:	add	w10, w10, #0x18d
    1a40:	ldr	w10, [x8, w10, sxtw #2]
    1a44:	ldr	w11, [sp, #36]
    1a48:	eor	w10, w10, w11, lsr #1
    1a4c:	ldr	w11, [sp, #36]
    1a50:	and	w11, w11, #0x1
    1a54:	ldr	x8, [sp, #8]
    1a58:	ldr	w11, [x8, w11, uxtw #2]
    1a5c:	eor	w10, w10, w11
    1a60:	ldr	x9, [sp, #24]
    1a64:	ldrsw	x12, [sp, #20]
    1a68:	str	w10, [x9, x12, lsl #2]
    1a6c:	ldr	w8, [sp, #20]
    1a70:	add	w8, w8, #0x1
    1a74:	str	w8, [sp, #20]
    1a78:	b	19fc <PyInit__random@@Base+0x5f8>
    1a7c:	ldr	w8, [sp, #20]
    1a80:	cmp	w8, #0x26f
    1a84:	b.ge	1afc <PyInit__random@@Base+0x6f8>  // b.tcont
    1a88:	ldr	x8, [sp, #24]
    1a8c:	ldrsw	x9, [sp, #20]
    1a90:	ldr	w10, [x8, x9, lsl #2]
    1a94:	and	w10, w10, #0x80000000
    1a98:	ldr	x8, [sp, #24]
    1a9c:	ldr	w11, [sp, #20]
    1aa0:	add	w11, w11, #0x1
    1aa4:	ldr	w11, [x8, w11, sxtw #2]
    1aa8:	and	w11, w11, #0x7fffffff
    1aac:	orr	w10, w10, w11
    1ab0:	str	w10, [sp, #36]
    1ab4:	ldr	x8, [sp, #24]
    1ab8:	ldr	w10, [sp, #20]
    1abc:	subs	w10, w10, #0xe3
    1ac0:	ldr	w10, [x8, w10, sxtw #2]
    1ac4:	ldr	w11, [sp, #36]
    1ac8:	eor	w10, w10, w11, lsr #1
    1acc:	ldr	w11, [sp, #36]
    1ad0:	and	w11, w11, #0x1
    1ad4:	ldr	x8, [sp, #8]
    1ad8:	ldr	w11, [x8, w11, uxtw #2]
    1adc:	eor	w10, w10, w11
    1ae0:	ldr	x9, [sp, #24]
    1ae4:	ldrsw	x12, [sp, #20]
    1ae8:	str	w10, [x9, x12, lsl #2]
    1aec:	ldr	w8, [sp, #20]
    1af0:	add	w8, w8, #0x1
    1af4:	str	w8, [sp, #20]
    1af8:	b	1a7c <PyInit__random@@Base+0x678>
    1afc:	ldr	x8, [sp, #24]
    1b00:	ldr	w9, [x8, #2492]
    1b04:	and	w9, w9, #0x80000000
    1b08:	ldr	x8, [sp, #24]
    1b0c:	ldr	w10, [x8]
    1b10:	and	w10, w10, #0x7fffffff
    1b14:	orr	w9, w9, w10
    1b18:	str	w9, [sp, #36]
    1b1c:	ldr	x8, [sp, #24]
    1b20:	ldr	w9, [x8, #1584]
    1b24:	ldr	w10, [sp, #36]
    1b28:	eor	w9, w9, w10, lsr #1
    1b2c:	ldr	w10, [sp, #36]
    1b30:	and	w10, w10, #0x1
    1b34:	ldr	x8, [sp, #8]
    1b38:	ldr	w10, [x8, w10, uxtw #2]
    1b3c:	eor	w9, w9, w10
    1b40:	ldr	x11, [sp, #24]
    1b44:	str	w9, [x11, #2492]
    1b48:	ldr	x11, [sp, #40]
    1b4c:	str	wzr, [x11, #16]
    1b50:	ldr	x8, [sp, #24]
    1b54:	ldr	x9, [sp, #40]
    1b58:	ldrsw	x10, [x9, #16]
    1b5c:	mov	w11, w10
    1b60:	add	w11, w11, #0x1
    1b64:	str	w11, [x9, #16]
    1b68:	ldr	w11, [x8, x10, lsl #2]
    1b6c:	str	w11, [sp, #36]
    1b70:	ldr	w11, [sp, #36]
    1b74:	ldr	w12, [sp, #36]
    1b78:	eor	w11, w12, w11, lsr #11
    1b7c:	str	w11, [sp, #36]
    1b80:	ldr	w11, [sp, #36]
    1b84:	mov	w12, #0x5680                	// #22144
    1b88:	movk	w12, #0x9d2c, lsl #16
    1b8c:	and	w11, w12, w11, lsl #7
    1b90:	ldr	w12, [sp, #36]
    1b94:	eor	w11, w12, w11
    1b98:	str	w11, [sp, #36]
    1b9c:	ldr	w11, [sp, #36]
    1ba0:	mov	w12, #0xefc60000            	// #-272236544
    1ba4:	and	w11, w12, w11, lsl #15
    1ba8:	ldr	w12, [sp, #36]
    1bac:	eor	w11, w12, w11
    1bb0:	str	w11, [sp, #36]
    1bb4:	ldr	w11, [sp, #36]
    1bb8:	ldr	w12, [sp, #36]
    1bbc:	eor	w11, w12, w11, lsr #18
    1bc0:	str	w11, [sp, #36]
    1bc4:	ldr	w0, [sp, #36]
    1bc8:	add	sp, sp, #0x30
    1bcc:	ret
    1bd0:	sub	sp, sp, #0x20
    1bd4:	stp	x29, x30, [sp, #16]
    1bd8:	add	x29, sp, #0x10
    1bdc:	str	x0, [sp, #8]
    1be0:	str	x1, [sp]
    1be4:	ldr	x0, [sp, #8]
    1be8:	ldr	x1, [sp]
    1bec:	bl	1bfc <PyInit__random@@Base+0x7f8>
    1bf0:	ldp	x29, x30, [sp, #16]
    1bf4:	add	sp, sp, #0x20
    1bf8:	ret
    1bfc:	sub	sp, sp, #0x80
    1c00:	stp	x29, x30, [sp, #112]
    1c04:	add	x29, sp, #0x70
    1c08:	mov	x8, xzr
    1c0c:	adrp	x9, 12000 <PyInit__random@@Base+0x10bfc>
    1c10:	ldr	x9, [x9, #4048]
    1c14:	adrp	x10, 12000 <PyInit__random@@Base+0x10bfc>
    1c18:	ldr	x10, [x10, #4056]
    1c1c:	stur	x0, [x29, #-16]
    1c20:	stur	x1, [x29, #-24]
    1c24:	stur	x8, [x29, #-32]
    1c28:	stur	x8, [x29, #-40]
    1c2c:	stur	x8, [x29, #-48]
    1c30:	ldur	x8, [x29, #-24]
    1c34:	str	x9, [sp, #24]
    1c38:	str	x10, [sp, #16]
    1c3c:	cbz	x8, 1c50 <PyInit__random@@Base+0x84c>
    1c40:	ldur	x8, [x29, #-24]
    1c44:	ldr	x9, [sp, #24]
    1c48:	cmp	x8, x9
    1c4c:	b.ne	1c84 <PyInit__random@@Base+0x880>  // b.any
    1c50:	ldur	x0, [x29, #-16]
    1c54:	bl	1df0 <PyInit__random@@Base+0x9ec>
    1c58:	cmp	w0, #0x0
    1c5c:	cset	w8, ge  // ge = tcont
    1c60:	tbnz	w8, #0, 1c70 <PyInit__random@@Base+0x86c>
    1c64:	bl	1200 <PyErr_Clear@plt>
    1c68:	ldur	x0, [x29, #-16]
    1c6c:	bl	1e54 <PyInit__random@@Base+0xa50>
    1c70:	ldr	x0, [sp, #24]
    1c74:	bl	1498 <PyInit__random@@Base+0x94>
    1c78:	ldr	x8, [sp, #24]
    1c7c:	stur	x8, [x29, #-8]
    1c80:	b	1de0 <PyInit__random@@Base+0x9dc>
    1c84:	ldur	x8, [x29, #-24]
    1c88:	ldr	x8, [x8, #8]
    1c8c:	ldr	x8, [x8, #168]
    1c90:	and	x8, x8, #0x1000000
    1c94:	cbz	x8, 1cb4 <PyInit__random@@Base+0x8b0>
    1c98:	ldr	x8, [sp, #16]
    1c9c:	ldr	x9, [x8, #96]
    1ca0:	ldr	x9, [x9, #64]
    1ca4:	ldur	x0, [x29, #-24]
    1ca8:	blr	x9
    1cac:	stur	x0, [x29, #-40]
    1cb0:	b	1ce0 <PyInit__random@@Base+0x8dc>
    1cb4:	ldur	x0, [x29, #-24]
    1cb8:	bl	1270 <PyObject_Hash@plt>
    1cbc:	str	x0, [sp, #32]
    1cc0:	ldr	x8, [sp, #32]
    1cc4:	mov	x9, #0xffffffffffffffff    	// #-1
    1cc8:	cmp	x8, x9
    1ccc:	b.ne	1cd4 <PyInit__random@@Base+0x8d0>  // b.any
    1cd0:	b	1dc8 <PyInit__random@@Base+0x9c4>
    1cd4:	ldr	x0, [sp, #32]
    1cd8:	bl	1180 <PyLong_FromSize_t@plt>
    1cdc:	stur	x0, [x29, #-40]
    1ce0:	ldur	x8, [x29, #-40]
    1ce4:	cbnz	x8, 1cec <PyInit__random@@Base+0x8e8>
    1ce8:	b	1dc8 <PyInit__random@@Base+0x9c4>
    1cec:	ldur	x0, [x29, #-40]
    1cf0:	bl	1190 <_PyLong_NumBits@plt>
    1cf4:	str	x0, [sp, #56]
    1cf8:	ldr	x8, [sp, #56]
    1cfc:	mov	x9, #0xffffffffffffffff    	// #-1
    1d00:	cmp	x8, x9
    1d04:	b.ne	1d14 <PyInit__random@@Base+0x910>  // b.any
    1d08:	bl	1240 <PyErr_Occurred@plt>
    1d0c:	cbz	x0, 1d14 <PyInit__random@@Base+0x910>
    1d10:	b	1dc8 <PyInit__random@@Base+0x9c4>
    1d14:	ldr	x8, [sp, #56]
    1d18:	cbnz	x8, 1d28 <PyInit__random@@Base+0x924>
    1d1c:	mov	x8, #0x1                   	// #1
    1d20:	str	x8, [sp, #8]
    1d24:	b	1d40 <PyInit__random@@Base+0x93c>
    1d28:	ldr	x8, [sp, #56]
    1d2c:	subs	x8, x8, #0x1
    1d30:	mov	x9, #0x20                  	// #32
    1d34:	udiv	x8, x8, x9
    1d38:	add	x8, x8, #0x1
    1d3c:	str	x8, [sp, #8]
    1d40:	ldr	x8, [sp, #8]
    1d44:	str	x8, [sp, #48]
    1d48:	ldr	x8, [sp, #48]
    1d4c:	mov	x9, #0x4                   	// #4
    1d50:	mul	x0, x9, x8
    1d54:	bl	1310 <PyMem_Malloc@plt>
    1d58:	stur	x0, [x29, #-48]
    1d5c:	ldur	x8, [x29, #-48]
    1d60:	cbnz	x8, 1d6c <PyInit__random@@Base+0x968>
    1d64:	bl	1170 <PyErr_NoMemory@plt>
    1d68:	b	1dc8 <PyInit__random@@Base+0x9c4>
    1d6c:	ldur	x0, [x29, #-40]
    1d70:	ldur	x1, [x29, #-48]
    1d74:	ldr	x8, [sp, #48]
    1d78:	mov	x9, #0x4                   	// #4
    1d7c:	mul	x2, x8, x9
    1d80:	mov	w3, #0x1                   	// #1
    1d84:	mov	w10, wzr
    1d88:	mov	w4, w10
    1d8c:	bl	12c0 <_PyLong_AsByteArray@plt>
    1d90:	str	w0, [sp, #44]
    1d94:	ldr	w10, [sp, #44]
    1d98:	mov	w11, #0xffffffff            	// #-1
    1d9c:	cmp	w10, w11
    1da0:	b.ne	1da8 <PyInit__random@@Base+0x9a4>  // b.any
    1da4:	b	1dc8 <PyInit__random@@Base+0x9c4>
    1da8:	ldur	x0, [x29, #-16]
    1dac:	ldur	x1, [x29, #-48]
    1db0:	ldr	x2, [sp, #48]
    1db4:	bl	1ed8 <PyInit__random@@Base+0xad4>
    1db8:	ldr	x0, [sp, #24]
    1dbc:	bl	1498 <PyInit__random@@Base+0x94>
    1dc0:	ldr	x8, [sp, #24]
    1dc4:	stur	x8, [x29, #-32]
    1dc8:	ldur	x0, [x29, #-40]
    1dcc:	bl	20e0 <PyInit__random@@Base+0xcdc>
    1dd0:	ldur	x0, [x29, #-48]
    1dd4:	bl	1130 <PyMem_Free@plt>
    1dd8:	ldur	x8, [x29, #-32]
    1ddc:	stur	x8, [x29, #-8]
    1de0:	ldur	x0, [x29, #-8]
    1de4:	ldp	x29, x30, [sp, #112]
    1de8:	add	sp, sp, #0x80
    1dec:	ret
    1df0:	stp	x29, x30, [sp, #-32]!
    1df4:	str	x28, [sp, #16]
    1df8:	mov	x29, sp
    1dfc:	sub	sp, sp, #0x9d0
    1e00:	mov	x1, #0x9c0                 	// #2496
    1e04:	mov	x8, sp
    1e08:	stur	x0, [x29, #-16]
    1e0c:	mov	x0, x8
    1e10:	bl	12e0 <_PyOS_URandomNonblock@plt>
    1e14:	cmp	w0, #0x0
    1e18:	cset	w9, ge  // ge = tcont
    1e1c:	tbnz	w9, #0, 1e2c <PyInit__random@@Base+0xa28>
    1e20:	mov	w8, #0xffffffff            	// #-1
    1e24:	stur	w8, [x29, #-4]
    1e28:	b	1e40 <PyInit__random@@Base+0xa3c>
    1e2c:	ldur	x0, [x29, #-16]
    1e30:	mov	x1, sp
    1e34:	mov	x2, #0x270                 	// #624
    1e38:	bl	1ed8 <PyInit__random@@Base+0xad4>
    1e3c:	stur	wzr, [x29, #-4]
    1e40:	ldur	w0, [x29, #-4]
    1e44:	add	sp, sp, #0x9d0
    1e48:	ldr	x28, [sp, #16]
    1e4c:	ldp	x29, x30, [sp], #32
    1e50:	ret
    1e54:	sub	sp, sp, #0x50
    1e58:	stp	x29, x30, [sp, #64]
    1e5c:	add	x29, sp, #0x40
    1e60:	mov	x2, #0x5                   	// #5
    1e64:	add	x1, sp, #0x1c
    1e68:	stur	x0, [x29, #-8]
    1e6c:	str	x2, [sp, #16]
    1e70:	str	x1, [sp, #8]
    1e74:	bl	1150 <_PyTime_GetSystemClock@plt>
    1e78:	stur	x0, [x29, #-16]
    1e7c:	ldur	x8, [x29, #-16]
    1e80:	and	x8, x8, #0xffffffff
    1e84:	str	w8, [sp, #28]
    1e88:	ldur	x9, [x29, #-16]
    1e8c:	asr	x9, x9, #32
    1e90:	str	w9, [sp, #32]
    1e94:	bl	11a0 <getpid@plt>
    1e98:	str	w0, [sp, #36]
    1e9c:	bl	1320 <_PyTime_GetMonotonicClock@plt>
    1ea0:	stur	x0, [x29, #-16]
    1ea4:	ldur	x10, [x29, #-16]
    1ea8:	and	x10, x10, #0xffffffff
    1eac:	str	w10, [sp, #40]
    1eb0:	ldur	x11, [x29, #-16]
    1eb4:	asr	x11, x11, #32
    1eb8:	str	w11, [sp, #44]
    1ebc:	ldur	x0, [x29, #-8]
    1ec0:	ldr	x1, [sp, #8]
    1ec4:	ldr	x2, [sp, #16]
    1ec8:	bl	1ed8 <PyInit__random@@Base+0xad4>
    1ecc:	ldp	x29, x30, [sp, #64]
    1ed0:	add	sp, sp, #0x50
    1ed4:	ret
    1ed8:	sub	sp, sp, #0x60
    1edc:	stp	x29, x30, [sp, #80]
    1ee0:	add	x29, sp, #0x50
    1ee4:	mov	w8, #0xd6aa                	// #54954
    1ee8:	movk	w8, #0x12b, lsl #16
    1eec:	mov	x9, #0x1                   	// #1
    1ef0:	mov	x10, #0x270                 	// #624
    1ef4:	stur	x0, [x29, #-8]
    1ef8:	stur	x1, [x29, #-16]
    1efc:	stur	x2, [x29, #-24]
    1f00:	ldur	x11, [x29, #-8]
    1f04:	add	x11, x11, #0x14
    1f08:	str	x11, [sp, #24]
    1f0c:	ldur	x0, [x29, #-8]
    1f10:	mov	w1, w8
    1f14:	str	x9, [sp, #16]
    1f18:	str	x10, [sp, #8]
    1f1c:	bl	2118 <PyInit__random@@Base+0xd14>
    1f20:	ldr	x9, [sp, #16]
    1f24:	stur	x9, [x29, #-32]
    1f28:	str	xzr, [sp, #40]
    1f2c:	ldur	x10, [x29, #-24]
    1f30:	ldr	x11, [sp, #8]
    1f34:	cmp	x11, x10
    1f38:	b.ls	1f48 <PyInit__random@@Base+0xb44>  // b.plast
    1f3c:	mov	x8, #0x270                 	// #624
    1f40:	str	x8, [sp]
    1f44:	b	1f50 <PyInit__random@@Base+0xb4c>
    1f48:	ldur	x8, [x29, #-24]
    1f4c:	str	x8, [sp]
    1f50:	ldr	x8, [sp]
    1f54:	str	x8, [sp, #32]
    1f58:	ldr	x8, [sp, #32]
    1f5c:	cbz	x8, 2024 <PyInit__random@@Base+0xc20>
    1f60:	ldr	x8, [sp, #24]
    1f64:	ldur	x9, [x29, #-32]
    1f68:	ldr	w10, [x8, x9, lsl #2]
    1f6c:	ldr	x8, [sp, #24]
    1f70:	ldur	x9, [x29, #-32]
    1f74:	subs	x9, x9, #0x1
    1f78:	ldr	w11, [x8, x9, lsl #2]
    1f7c:	ldr	x8, [sp, #24]
    1f80:	ldur	x9, [x29, #-32]
    1f84:	subs	x9, x9, #0x1
    1f88:	ldr	w12, [x8, x9, lsl #2]
    1f8c:	eor	w11, w11, w12, lsr #30
    1f90:	mov	w12, #0x660d                	// #26125
    1f94:	movk	w12, #0x19, lsl #16
    1f98:	mul	w11, w11, w12
    1f9c:	eor	w10, w10, w11
    1fa0:	ldur	x8, [x29, #-16]
    1fa4:	ldr	x9, [sp, #40]
    1fa8:	ldr	w11, [x8, x9, lsl #2]
    1fac:	add	w10, w10, w11
    1fb0:	ldr	x8, [sp, #40]
    1fb4:	add	w8, w10, w8
    1fb8:	ldr	x9, [sp, #24]
    1fbc:	ldur	x13, [x29, #-32]
    1fc0:	str	w8, [x9, x13, lsl #2]
    1fc4:	ldur	x9, [x29, #-32]
    1fc8:	add	x9, x9, #0x1
    1fcc:	stur	x9, [x29, #-32]
    1fd0:	ldr	x9, [sp, #40]
    1fd4:	add	x9, x9, #0x1
    1fd8:	str	x9, [sp, #40]
    1fdc:	ldur	x9, [x29, #-32]
    1fe0:	cmp	x9, #0x270
    1fe4:	b.cc	2000 <PyInit__random@@Base+0xbfc>  // b.lo, b.ul, b.last
    1fe8:	ldr	x8, [sp, #24]
    1fec:	ldr	w9, [x8, #2492]
    1ff0:	ldr	x8, [sp, #24]
    1ff4:	str	w9, [x8]
    1ff8:	mov	x8, #0x1                   	// #1
    1ffc:	stur	x8, [x29, #-32]
    2000:	ldr	x8, [sp, #40]
    2004:	ldur	x9, [x29, #-24]
    2008:	cmp	x8, x9
    200c:	b.cc	2014 <PyInit__random@@Base+0xc10>  // b.lo, b.ul, b.last
    2010:	str	xzr, [sp, #40]
    2014:	ldr	x8, [sp, #32]
    2018:	subs	x8, x8, #0x1
    201c:	str	x8, [sp, #32]
    2020:	b	1f58 <PyInit__random@@Base+0xb54>
    2024:	mov	x8, #0x26f                 	// #623
    2028:	str	x8, [sp, #32]
    202c:	ldr	x8, [sp, #32]
    2030:	cbz	x8, 20c8 <PyInit__random@@Base+0xcc4>
    2034:	ldr	x8, [sp, #24]
    2038:	ldur	x9, [x29, #-32]
    203c:	ldr	w10, [x8, x9, lsl #2]
    2040:	ldr	x8, [sp, #24]
    2044:	ldur	x9, [x29, #-32]
    2048:	subs	x9, x9, #0x1
    204c:	ldr	w11, [x8, x9, lsl #2]
    2050:	ldr	x8, [sp, #24]
    2054:	ldur	x9, [x29, #-32]
    2058:	subs	x9, x9, #0x1
    205c:	ldr	w12, [x8, x9, lsl #2]
    2060:	eor	w11, w11, w12, lsr #30
    2064:	mov	w12, #0x8b65                	// #35685
    2068:	movk	w12, #0x5d58, lsl #16
    206c:	mul	w11, w11, w12
    2070:	eor	w10, w10, w11
    2074:	ldur	x8, [x29, #-32]
    2078:	subs	w8, w10, w8
    207c:	ldr	x9, [sp, #24]
    2080:	ldur	x13, [x29, #-32]
    2084:	str	w8, [x9, x13, lsl #2]
    2088:	ldur	x9, [x29, #-32]
    208c:	add	x9, x9, #0x1
    2090:	stur	x9, [x29, #-32]
    2094:	ldur	x9, [x29, #-32]
    2098:	cmp	x9, #0x270
    209c:	b.cc	20b8 <PyInit__random@@Base+0xcb4>  // b.lo, b.ul, b.last
    20a0:	ldr	x8, [sp, #24]
    20a4:	ldr	w9, [x8, #2492]
    20a8:	ldr	x8, [sp, #24]
    20ac:	str	w9, [x8]
    20b0:	mov	x8, #0x1                   	// #1
    20b4:	stur	x8, [x29, #-32]
    20b8:	ldr	x8, [sp, #32]
    20bc:	subs	x8, x8, #0x1
    20c0:	str	x8, [sp, #32]
    20c4:	b	202c <PyInit__random@@Base+0xc28>
    20c8:	ldr	x8, [sp, #24]
    20cc:	mov	w9, #0x80000000            	// #-2147483648
    20d0:	str	w9, [x8]
    20d4:	ldp	x29, x30, [sp, #80]
    20d8:	add	sp, sp, #0x60
    20dc:	ret
    20e0:	sub	sp, sp, #0x20
    20e4:	stp	x29, x30, [sp, #16]
    20e8:	add	x29, sp, #0x10
    20ec:	str	x0, [sp, #8]
    20f0:	ldr	x8, [sp, #8]
    20f4:	cbz	x8, 210c <PyInit__random@@Base+0xd08>
    20f8:	ldr	x2, [sp, #8]
    20fc:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    2100:	add	x0, x0, #0x4d6
    2104:	mov	w1, #0x21d                 	// #541
    2108:	bl	21b8 <PyInit__random@@Base+0xdb4>
    210c:	ldp	x29, x30, [sp, #16]
    2110:	add	sp, sp, #0x20
    2114:	ret
    2118:	sub	sp, sp, #0x20
    211c:	mov	w8, #0x1                   	// #1
    2120:	str	x0, [sp, #24]
    2124:	str	w1, [sp, #20]
    2128:	ldr	x9, [sp, #24]
    212c:	add	x9, x9, #0x14
    2130:	str	x9, [sp, #8]
    2134:	ldr	w10, [sp, #20]
    2138:	ldr	x9, [sp, #8]
    213c:	str	w10, [x9]
    2140:	str	w8, [sp, #16]
    2144:	ldr	w8, [sp, #16]
    2148:	cmp	w8, #0x270
    214c:	b.ge	21a4 <PyInit__random@@Base+0xda0>  // b.tcont
    2150:	ldr	x8, [sp, #8]
    2154:	ldr	w9, [sp, #16]
    2158:	subs	w9, w9, #0x1
    215c:	ldr	w9, [x8, w9, sxtw #2]
    2160:	ldr	x8, [sp, #8]
    2164:	ldr	w10, [sp, #16]
    2168:	subs	w10, w10, #0x1
    216c:	ldr	w10, [x8, w10, sxtw #2]
    2170:	eor	w9, w9, w10, lsr #30
    2174:	mov	w10, #0x8965                	// #35173
    2178:	movk	w10, #0x6c07, lsl #16
    217c:	mul	w9, w10, w9
    2180:	ldr	w10, [sp, #16]
    2184:	add	w9, w9, w10
    2188:	ldr	x8, [sp, #8]
    218c:	ldrsw	x11, [sp, #16]
    2190:	str	w9, [x8, x11, lsl #2]
    2194:	ldr	w8, [sp, #16]
    2198:	add	w8, w8, #0x1
    219c:	str	w8, [sp, #16]
    21a0:	b	2144 <PyInit__random@@Base+0xd40>
    21a4:	ldr	w8, [sp, #16]
    21a8:	ldr	x9, [sp, #24]
    21ac:	str	w8, [x9, #16]
    21b0:	add	sp, sp, #0x20
    21b4:	ret
    21b8:	sub	sp, sp, #0x30
    21bc:	stp	x29, x30, [sp, #32]
    21c0:	add	x29, sp, #0x20
    21c4:	stur	x0, [x29, #-8]
    21c8:	stur	w1, [x29, #-12]
    21cc:	str	x2, [sp, #8]
    21d0:	ldr	x8, [sp, #8]
    21d4:	ldr	x9, [x8]
    21d8:	subs	x9, x9, #0x1
    21dc:	str	x9, [x8]
    21e0:	cbz	x9, 21e8 <PyInit__random@@Base+0xde4>
    21e4:	b	21f0 <PyInit__random@@Base+0xdec>
    21e8:	ldr	x0, [sp, #8]
    21ec:	bl	1160 <_Py_Dealloc@plt>
    21f0:	ldp	x29, x30, [sp, #32]
    21f4:	add	sp, sp, #0x30
    21f8:	ret
    21fc:	sub	sp, sp, #0x40
    2200:	stp	x29, x30, [sp, #48]
    2204:	add	x29, sp, #0x30
    2208:	mov	x8, #0x271                 	// #625
    220c:	stur	x0, [x29, #-16]
    2210:	mov	x0, x8
    2214:	bl	1220 <PyTuple_New@plt>
    2218:	str	x0, [sp, #24]
    221c:	ldr	x8, [sp, #24]
    2220:	cbnz	x8, 2230 <PyInit__random@@Base+0xe2c>
    2224:	mov	x8, xzr
    2228:	stur	x8, [x29, #-8]
    222c:	b	22fc <PyInit__random@@Base+0xef8>
    2230:	str	wzr, [sp, #12]
    2234:	ldr	w8, [sp, #12]
    2238:	cmp	w8, #0x270
    223c:	b.ge	2298 <PyInit__random@@Base+0xe94>  // b.tcont
    2240:	ldur	x8, [x29, #-16]
    2244:	add	x8, x8, #0x14
    2248:	ldrsw	x9, [sp, #12]
    224c:	ldr	w10, [x8, x9, lsl #2]
    2250:	mov	w0, w10
    2254:	bl	1290 <PyLong_FromUnsignedLong@plt>
    2258:	str	x0, [sp, #16]
    225c:	ldr	x8, [sp, #16]
    2260:	cbnz	x8, 2268 <PyInit__random@@Base+0xe64>
    2264:	b	22e0 <PyInit__random@@Base+0xedc>
    2268:	ldr	x8, [sp, #16]
    226c:	ldr	x9, [sp, #24]
    2270:	add	x9, x9, #0x18
    2274:	ldrsw	x10, [sp, #12]
    2278:	mov	x11, #0x8                   	// #8
    227c:	mul	x10, x11, x10
    2280:	add	x9, x9, x10
    2284:	str	x8, [x9]
    2288:	ldr	w8, [sp, #12]
    228c:	add	w8, w8, #0x1
    2290:	str	w8, [sp, #12]
    2294:	b	2234 <PyInit__random@@Base+0xe30>
    2298:	ldur	x8, [x29, #-16]
    229c:	ldrsw	x0, [x8, #16]
    22a0:	bl	11f0 <PyLong_FromLong@plt>
    22a4:	str	x0, [sp, #16]
    22a8:	ldr	x8, [sp, #16]
    22ac:	cbnz	x8, 22b4 <PyInit__random@@Base+0xeb0>
    22b0:	b	22e0 <PyInit__random@@Base+0xedc>
    22b4:	ldr	x8, [sp, #16]
    22b8:	ldr	x9, [sp, #24]
    22bc:	add	x9, x9, #0x18
    22c0:	ldrsw	x10, [sp, #12]
    22c4:	mov	x11, #0x8                   	// #8
    22c8:	mul	x10, x11, x10
    22cc:	add	x9, x9, x10
    22d0:	str	x8, [x9]
    22d4:	ldr	x8, [sp, #24]
    22d8:	stur	x8, [x29, #-8]
    22dc:	b	22fc <PyInit__random@@Base+0xef8>
    22e0:	ldr	x2, [sp, #24]
    22e4:	adrp	x0, 2000 <PyInit__random@@Base+0xbfc>
    22e8:	add	x0, x0, #0x4e9
    22ec:	mov	w1, #0x181                 	// #385
    22f0:	bl	21b8 <PyInit__random@@Base+0xdb4>
    22f4:	mov	x8, xzr
    22f8:	stur	x8, [x29, #-8]
    22fc:	ldur	x0, [x29, #-8]
    2300:	ldp	x29, x30, [sp, #48]
    2304:	add	sp, sp, #0x40
    2308:	ret
    230c:	sub	sp, sp, #0x40
    2310:	stp	x29, x30, [sp, #48]
    2314:	add	x29, sp, #0x30
    2318:	stur	x0, [x29, #-16]
    231c:	stur	w1, [x29, #-20]
    2320:	ldur	w8, [x29, #-20]
    2324:	cmp	w8, #0x0
    2328:	cset	w8, gt
    232c:	tbnz	w8, #0, 2354 <PyInit__random@@Base+0xf50>
    2330:	adrp	x8, 12000 <PyInit__random@@Base+0x10bfc>
    2334:	ldr	x8, [x8, #4024]
    2338:	ldr	x0, [x8]
    233c:	adrp	x1, 2000 <PyInit__random@@Base+0xbfc>
    2340:	add	x1, x1, #0x586
    2344:	bl	11b0 <PyErr_SetString@plt>
    2348:	mov	x8, xzr
    234c:	stur	x8, [x29, #-8]
    2350:	b	2484 <PyInit__random@@Base+0x1080>
    2354:	ldur	w8, [x29, #-20]
    2358:	cmp	w8, #0x20
    235c:	b.gt	238c <PyInit__random@@Base+0xf88>
    2360:	ldur	x0, [x29, #-16]
    2364:	bl	19c8 <PyInit__random@@Base+0x5c4>
    2368:	ldur	w8, [x29, #-20]
    236c:	mov	w9, #0x20                  	// #32
    2370:	subs	w8, w9, w8
    2374:	lsr	w8, w0, w8
    2378:	mov	w10, w8
    237c:	ubfx	x0, x10, #0, #32
    2380:	bl	1290 <PyLong_FromUnsignedLong@plt>
    2384:	stur	x0, [x29, #-8]
    2388:	b	2484 <PyInit__random@@Base+0x1080>
    238c:	ldur	w8, [x29, #-20]
    2390:	subs	w8, w8, #0x1
    2394:	mov	w9, #0x20                  	// #32
    2398:	sdiv	w8, w8, w9
    239c:	add	w8, w8, #0x1
    23a0:	str	w8, [sp, #20]
    23a4:	ldr	w8, [sp, #20]
    23a8:	mov	w9, #0x4                   	// #4
    23ac:	mul	w8, w8, w9
    23b0:	mov	w0, w8
    23b4:	sxtw	x0, w0
    23b8:	bl	1310 <PyMem_Malloc@plt>
    23bc:	str	x0, [sp, #8]
    23c0:	ldr	x10, [sp, #8]
    23c4:	cbnz	x10, 23d8 <PyInit__random@@Base+0xfd4>
    23c8:	bl	1170 <PyErr_NoMemory@plt>
    23cc:	mov	x8, xzr
    23d0:	stur	x8, [x29, #-8]
    23d4:	b	2484 <PyInit__random@@Base+0x1080>
    23d8:	str	wzr, [sp, #24]
    23dc:	ldr	w8, [sp, #24]
    23e0:	ldr	w9, [sp, #20]
    23e4:	cmp	w8, w9
    23e8:	b.ge	2448 <PyInit__random@@Base+0x1044>  // b.tcont
    23ec:	ldur	x0, [x29, #-16]
    23f0:	bl	19c8 <PyInit__random@@Base+0x5c4>
    23f4:	str	w0, [sp, #16]
    23f8:	ldur	w8, [x29, #-20]
    23fc:	cmp	w8, #0x20
    2400:	b.ge	241c <PyInit__random@@Base+0x1018>  // b.tcont
    2404:	ldur	w8, [x29, #-20]
    2408:	mov	w9, #0x20                  	// #32
    240c:	subs	w8, w9, w8
    2410:	ldr	w9, [sp, #16]
    2414:	lsr	w8, w9, w8
    2418:	str	w8, [sp, #16]
    241c:	ldr	w8, [sp, #16]
    2420:	ldr	x9, [sp, #8]
    2424:	ldrsw	x10, [sp, #24]
    2428:	str	w8, [x9, x10, lsl #2]
    242c:	ldr	w8, [sp, #24]
    2430:	add	w8, w8, #0x1
    2434:	str	w8, [sp, #24]
    2438:	ldur	w8, [x29, #-20]
    243c:	subs	w8, w8, #0x20
    2440:	stur	w8, [x29, #-20]
    2444:	b	23dc <PyInit__random@@Base+0xfd8>
    2448:	ldr	x0, [sp, #8]
    244c:	ldr	w8, [sp, #20]
    2450:	mov	w9, #0x4                   	// #4
    2454:	mul	w8, w8, w9
    2458:	mov	w1, w8
    245c:	sxtw	x1, w1
    2460:	mov	w2, #0x1                   	// #1
    2464:	mov	w8, wzr
    2468:	mov	w3, w8
    246c:	bl	11c0 <_PyLong_FromByteArray@plt>
    2470:	str	x0, [sp]
    2474:	ldr	x0, [sp, #8]
    2478:	bl	1130 <PyMem_Free@plt>
    247c:	ldr	x10, [sp]
    2480:	stur	x10, [x29, #-8]
    2484:	ldur	x0, [x29, #-8]
    2488:	ldp	x29, x30, [sp, #48]
    248c:	add	sp, sp, #0x40
    2490:	ret

Disassembly of section .fini:

0000000000002494 <.fini>:
    2494:	stp	x29, x30, [sp, #-16]!
    2498:	mov	x29, sp
    249c:	ldp	x29, x30, [sp], #16
    24a0:	ret
