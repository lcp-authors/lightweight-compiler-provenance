
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004023d0 <.init>:
  4023d0:	stp	x29, x30, [sp, #-16]!
  4023d4:	mov	x29, sp
  4023d8:	bl	40325c <ferror@plt+0x7bc>
  4023dc:	ldp	x29, x30, [sp], #16
  4023e0:	ret

Disassembly of section .plt:

00000000004023f0 <mbrtowc@plt-0x20>:
  4023f0:	stp	x16, x30, [sp, #-16]!
  4023f4:	adrp	x16, 42d000 <_obstack_memory_used@@Base+0x184bc>
  4023f8:	ldr	x17, [x16, #4088]
  4023fc:	add	x16, x16, #0xff8
  402400:	br	x17
  402404:	nop
  402408:	nop
  40240c:	nop

0000000000402410 <mbrtowc@plt>:
  402410:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16]
  402418:	add	x16, x16, #0x0
  40241c:	br	x17

0000000000402420 <memcpy@plt>:
  402420:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #8]
  402428:	add	x16, x16, #0x8
  40242c:	br	x17

0000000000402430 <sigaltstack@plt>:
  402430:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #16]
  402438:	add	x16, x16, #0x10
  40243c:	br	x17

0000000000402440 <_exit@plt>:
  402440:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #24]
  402448:	add	x16, x16, #0x18
  40244c:	br	x17

0000000000402450 <strlen@plt>:
  402450:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #32]
  402458:	add	x16, x16, #0x20
  40245c:	br	x17

0000000000402460 <fputs@plt>:
  402460:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #40]
  402468:	add	x16, x16, #0x28
  40246c:	br	x17

0000000000402470 <__sprintf_chk@plt>:
  402470:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #48]
  402478:	add	x16, x16, #0x30
  40247c:	br	x17

0000000000402480 <exit@plt>:
  402480:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #56]
  402488:	add	x16, x16, #0x38
  40248c:	br	x17

0000000000402490 <raise@plt>:
  402490:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #64]
  402498:	add	x16, x16, #0x40
  40249c:	br	x17

00000000004024a0 <error@plt>:
  4024a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #72]
  4024a8:	add	x16, x16, #0x48
  4024ac:	br	x17

00000000004024b0 <sigprocmask@plt>:
  4024b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #80]
  4024b8:	add	x16, x16, #0x50
  4024bc:	br	x17

00000000004024c0 <strtod@plt>:
  4024c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #88]
  4024c8:	add	x16, x16, #0x58
  4024cc:	br	x17

00000000004024d0 <secure_getenv@plt>:
  4024d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #96]
  4024d8:	add	x16, x16, #0x60
  4024dc:	br	x17

00000000004024e0 <setbuf@plt>:
  4024e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #104]
  4024e8:	add	x16, x16, #0x68
  4024ec:	br	x17

00000000004024f0 <ferror_unlocked@plt>:
  4024f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #112]
  4024f8:	add	x16, x16, #0x70
  4024fc:	br	x17

0000000000402500 <putc@plt>:
  402500:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #120]
  402508:	add	x16, x16, #0x78
  40250c:	br	x17

0000000000402510 <pipe@plt>:
  402510:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #128]
  402518:	add	x16, x16, #0x80
  40251c:	br	x17

0000000000402520 <__cxa_atexit@plt>:
  402520:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #136]
  402528:	add	x16, x16, #0x88
  40252c:	br	x17

0000000000402530 <fputc@plt>:
  402530:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #144]
  402538:	add	x16, x16, #0x90
  40253c:	br	x17

0000000000402540 <qsort@plt>:
  402540:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #152]
  402548:	add	x16, x16, #0x98
  40254c:	br	x17

0000000000402550 <posix_spawn_file_actions_addopen@plt>:
  402550:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #160]
  402558:	add	x16, x16, #0xa0
  40255c:	br	x17

0000000000402560 <kill@plt>:
  402560:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #168]
  402568:	add	x16, x16, #0xa8
  40256c:	br	x17

0000000000402570 <lseek@plt>:
  402570:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #176]
  402578:	add	x16, x16, #0xb0
  40257c:	br	x17

0000000000402580 <__fpending@plt>:
  402580:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #184]
  402588:	add	x16, x16, #0xb8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #192]
  402598:	add	x16, x16, #0xc0
  40259c:	br	x17

00000000004025a0 <posix_spawn_file_actions_adddup2@plt>:
  4025a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #200]
  4025a8:	add	x16, x16, #0xc8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #208]
  4025b8:	add	x16, x16, #0xd0
  4025bc:	br	x17

00000000004025c0 <fclose@plt>:
  4025c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #216]
  4025c8:	add	x16, x16, #0xd8
  4025cc:	br	x17

00000000004025d0 <getpid@plt>:
  4025d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #224]
  4025d8:	add	x16, x16, #0xe0
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #232]
  4025e8:	add	x16, x16, #0xe8
  4025ec:	br	x17

00000000004025f0 <fopen@plt>:
  4025f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #240]
  4025f8:	add	x16, x16, #0xf0
  4025fc:	br	x17

0000000000402600 <malloc@plt>:
  402600:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #248]
  402608:	add	x16, x16, #0xf8
  40260c:	br	x17

0000000000402610 <open@plt>:
  402610:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #256]
  402618:	add	x16, x16, #0x100
  40261c:	br	x17

0000000000402620 <__vasprintf_chk@plt>:
  402620:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #264]
  402628:	add	x16, x16, #0x108
  40262c:	br	x17

0000000000402630 <__isoc99_fscanf@plt>:
  402630:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #272]
  402638:	add	x16, x16, #0x110
  40263c:	br	x17

0000000000402640 <sigemptyset@plt>:
  402640:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #280]
  402648:	add	x16, x16, #0x118
  40264c:	br	x17

0000000000402650 <posix_spawnattr_destroy@plt>:
  402650:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #288]
  402658:	add	x16, x16, #0x120
  40265c:	br	x17

0000000000402660 <strncmp@plt>:
  402660:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #296]
  402668:	add	x16, x16, #0x128
  40266c:	br	x17

0000000000402670 <__libc_start_main@plt>:
  402670:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #304]
  402678:	add	x16, x16, #0x130
  40267c:	br	x17

0000000000402680 <strcat@plt>:
  402680:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #312]
  402688:	add	x16, x16, #0x138
  40268c:	br	x17

0000000000402690 <__printf_chk@plt>:
  402690:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #320]
  402698:	add	x16, x16, #0x140
  40269c:	br	x17

00000000004026a0 <memset@plt>:
  4026a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #328]
  4026a8:	add	x16, x16, #0x148
  4026ac:	br	x17

00000000004026b0 <fdopen@plt>:
  4026b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #336]
  4026b8:	add	x16, x16, #0x150
  4026bc:	br	x17

00000000004026c0 <re_set_registers@plt>:
  4026c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #344]
  4026c8:	add	x16, x16, #0x158
  4026cc:	br	x17

00000000004026d0 <__vfprintf_chk@plt>:
  4026d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #352]
  4026d8:	add	x16, x16, #0x160
  4026dc:	br	x17

00000000004026e0 <calloc@plt>:
  4026e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #360]
  4026e8:	add	x16, x16, #0x168
  4026ec:	br	x17

00000000004026f0 <__vprintf_chk@plt>:
  4026f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #368]
  4026f8:	add	x16, x16, #0x170
  4026fc:	br	x17

0000000000402700 <posix_spawn_file_actions_destroy@plt>:
  402700:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #376]
  402708:	add	x16, x16, #0x178
  40270c:	br	x17

0000000000402710 <realloc@plt>:
  402710:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #384]
  402718:	add	x16, x16, #0x180
  40271c:	br	x17

0000000000402720 <re_search@plt>:
  402720:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #392]
  402728:	add	x16, x16, #0x188
  40272c:	br	x17

0000000000402730 <getc@plt>:
  402730:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #400]
  402738:	add	x16, x16, #0x190
  40273c:	br	x17

0000000000402740 <posix_spawn_file_actions_addclose@plt>:
  402740:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #408]
  402748:	add	x16, x16, #0x198
  40274c:	br	x17

0000000000402750 <getc_unlocked@plt>:
  402750:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #416]
  402758:	add	x16, x16, #0x1a0
  40275c:	br	x17

0000000000402760 <close@plt>:
  402760:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #424]
  402768:	add	x16, x16, #0x1a8
  40276c:	br	x17

0000000000402770 <sigaction@plt>:
  402770:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #432]
  402778:	add	x16, x16, #0x1b0
  40277c:	br	x17

0000000000402780 <strrchr@plt>:
  402780:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #440]
  402788:	add	x16, x16, #0x1b8
  40278c:	br	x17

0000000000402790 <__gmon_start__@plt>:
  402790:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #448]
  402798:	add	x16, x16, #0x1c0
  40279c:	br	x17

00000000004027a0 <write@plt>:
  4027a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #456]
  4027a8:	add	x16, x16, #0x1c8
  4027ac:	br	x17

00000000004027b0 <mkdtemp@plt>:
  4027b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #464]
  4027b8:	add	x16, x16, #0x1d0
  4027bc:	br	x17

00000000004027c0 <posix_spawnattr_setflags@plt>:
  4027c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #472]
  4027c8:	add	x16, x16, #0x1d8
  4027cc:	br	x17

00000000004027d0 <abort@plt>:
  4027d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #480]
  4027d8:	add	x16, x16, #0x1e0
  4027dc:	br	x17

00000000004027e0 <re_compile_pattern@plt>:
  4027e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #488]
  4027e8:	add	x16, x16, #0x1e8
  4027ec:	br	x17

00000000004027f0 <mbsinit@plt>:
  4027f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #496]
  4027f8:	add	x16, x16, #0x1f0
  4027fc:	br	x17

0000000000402800 <posix_spawnattr_setsigmask@plt>:
  402800:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #504]
  402808:	add	x16, x16, #0x1f8
  40280c:	br	x17

0000000000402810 <puts@plt>:
  402810:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #512]
  402818:	add	x16, x16, #0x200
  40281c:	br	x17

0000000000402820 <posix_spawn_file_actions_init@plt>:
  402820:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #520]
  402828:	add	x16, x16, #0x208
  40282c:	br	x17

0000000000402830 <memcmp@plt>:
  402830:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #528]
  402838:	add	x16, x16, #0x210
  40283c:	br	x17

0000000000402840 <getopt_long@plt>:
  402840:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #536]
  402848:	add	x16, x16, #0x218
  40284c:	br	x17

0000000000402850 <__fprintf_chk@plt>:
  402850:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #544]
  402858:	add	x16, x16, #0x220
  40285c:	br	x17

0000000000402860 <strcmp@plt>:
  402860:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #552]
  402868:	add	x16, x16, #0x228
  40286c:	br	x17

0000000000402870 <__ctype_b_loc@plt>:
  402870:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #560]
  402878:	add	x16, x16, #0x230
  40287c:	br	x17

0000000000402880 <rmdir@plt>:
  402880:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #568]
  402888:	add	x16, x16, #0x238
  40288c:	br	x17

0000000000402890 <strtol@plt>:
  402890:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #576]
  402898:	add	x16, x16, #0x240
  40289c:	br	x17

00000000004028a0 <fseeko@plt>:
  4028a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #584]
  4028a8:	add	x16, x16, #0x248
  4028ac:	br	x17

00000000004028b0 <fread@plt>:
  4028b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #592]
  4028b8:	add	x16, x16, #0x250
  4028bc:	br	x17

00000000004028c0 <free@plt>:
  4028c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #600]
  4028c8:	add	x16, x16, #0x258
  4028cc:	br	x17

00000000004028d0 <ungetc@plt>:
  4028d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #608]
  4028d8:	add	x16, x16, #0x260
  4028dc:	br	x17

00000000004028e0 <__ctype_get_mb_cur_max@plt>:
  4028e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #616]
  4028e8:	add	x16, x16, #0x268
  4028ec:	br	x17

00000000004028f0 <mempcpy@plt>:
  4028f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #624]
  4028f8:	add	x16, x16, #0x270
  4028fc:	br	x17

0000000000402900 <posix_spawnp@plt>:
  402900:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #632]
  402908:	add	x16, x16, #0x278
  40290c:	br	x17

0000000000402910 <strchr@plt>:
  402910:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #640]
  402918:	add	x16, x16, #0x280
  40291c:	br	x17

0000000000402920 <rename@plt>:
  402920:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #648]
  402928:	add	x16, x16, #0x288
  40292c:	br	x17

0000000000402930 <fwrite@plt>:
  402930:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #656]
  402938:	add	x16, x16, #0x290
  40293c:	br	x17

0000000000402940 <fcntl@plt>:
  402940:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #664]
  402948:	add	x16, x16, #0x298
  40294c:	br	x17

0000000000402950 <fflush@plt>:
  402950:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #672]
  402958:	add	x16, x16, #0x2a0
  40295c:	br	x17

0000000000402960 <strcpy@plt>:
  402960:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #680]
  402968:	add	x16, x16, #0x2a8
  40296c:	br	x17

0000000000402970 <posix_spawnattr_init@plt>:
  402970:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #688]
  402978:	add	x16, x16, #0x2b0
  40297c:	br	x17

0000000000402980 <memchr@plt>:
  402980:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #696]
  402988:	add	x16, x16, #0x2b8
  40298c:	br	x17

0000000000402990 <mkstemp@plt>:
  402990:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #704]
  402998:	add	x16, x16, #0x2c0
  40299c:	br	x17

00000000004029a0 <__fxstat@plt>:
  4029a0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #712]
  4029a8:	add	x16, x16, #0x2c8
  4029ac:	br	x17

00000000004029b0 <strstr@plt>:
  4029b0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #720]
  4029b8:	add	x16, x16, #0x2d0
  4029bc:	br	x17

00000000004029c0 <fputs_unlocked@plt>:
  4029c0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #728]
  4029c8:	add	x16, x16, #0x2d8
  4029cc:	br	x17

00000000004029d0 <__freading@plt>:
  4029d0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #736]
  4029d8:	add	x16, x16, #0x2e0
  4029dc:	br	x17

00000000004029e0 <regfree@plt>:
  4029e0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #744]
  4029e8:	add	x16, x16, #0x2e8
  4029ec:	br	x17

00000000004029f0 <strsignal@plt>:
  4029f0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #752]
  4029f8:	add	x16, x16, #0x2f0
  4029fc:	br	x17

0000000000402a00 <sigaddset@plt>:
  402a00:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #760]
  402a08:	add	x16, x16, #0x2f8
  402a0c:	br	x17

0000000000402a10 <iswprint@plt>:
  402a10:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #768]
  402a18:	add	x16, x16, #0x300
  402a1c:	br	x17

0000000000402a20 <__assert_fail@plt>:
  402a20:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #776]
  402a28:	add	x16, x16, #0x308
  402a2c:	br	x17

0000000000402a30 <__errno_location@plt>:
  402a30:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #784]
  402a38:	add	x16, x16, #0x310
  402a3c:	br	x17

0000000000402a40 <getenv@plt>:
  402a40:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #792]
  402a48:	add	x16, x16, #0x318
  402a4c:	br	x17

0000000000402a50 <__xstat@plt>:
  402a50:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #800]
  402a58:	add	x16, x16, #0x320
  402a5c:	br	x17

0000000000402a60 <waitpid@plt>:
  402a60:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #808]
  402a68:	add	x16, x16, #0x328
  402a6c:	br	x17

0000000000402a70 <unlink@plt>:
  402a70:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #816]
  402a78:	add	x16, x16, #0x330
  402a7c:	br	x17

0000000000402a80 <error_at_line@plt>:
  402a80:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #824]
  402a88:	add	x16, x16, #0x338
  402a8c:	br	x17

0000000000402a90 <setlocale@plt>:
  402a90:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #832]
  402a98:	add	x16, x16, #0x340
  402a9c:	br	x17

0000000000402aa0 <ferror@plt>:
  402aa0:	adrp	x16, 42e000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #840]
  402aa8:	add	x16, x16, #0x348
  402aac:	br	x17

Disassembly of section .text:

0000000000402ab0 <_obstack_begin@@Base-0x11eb4>:
  402ab0:	stp	x29, x30, [sp, #-304]!
  402ab4:	mov	x29, sp
  402ab8:	stp	x21, x22, [sp, #32]
  402abc:	mov	w22, w0
  402ac0:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  402ac4:	ldr	x0, [x1]
  402ac8:	stp	x19, x20, [sp, #16]
  402acc:	adrp	x20, 403000 <ferror@plt+0x560>
  402ad0:	stp	x23, x24, [sp, #48]
  402ad4:	mov	x23, x1
  402ad8:	add	x20, x20, #0x314
  402adc:	stp	x25, x26, [sp, #64]
  402ae0:	stp	x27, x28, [sp, #80]
  402ae4:	bl	411854 <ferror@plt+0xedb4>
  402ae8:	adrp	x0, 40f000 <ferror@plt+0xc560>
  402aec:	str	wzr, [x21, #3416]
  402af0:	add	x0, x0, #0x774
  402af4:	bl	414fc0 <_obstack_memory_used@@Base+0x47c>
  402af8:	bl	40dc30 <ferror@plt+0xb190>
  402afc:	bl	407c58 <ferror@plt+0x51b8>
  402b00:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  402b04:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402b08:	add	x1, x1, #0x3f
  402b0c:	add	x0, x0, #0x4e
  402b10:	bl	414468 <ferror@plt+0x119c8>
  402b14:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402b18:	add	x19, x1, #0x468
  402b1c:	str	x0, [x1, #1128]
  402b20:	mov	w0, #0xb                   	// #11
  402b24:	bl	4029f0 <strsignal@plt>
  402b28:	bl	413ec4 <ferror@plt+0x11424>
  402b2c:	str	x0, [x19, #96]
  402b30:	mov	w0, #0x6                   	// #6
  402b34:	bl	4029f0 <strsignal@plt>
  402b38:	bl	413ec4 <ferror@plt+0x11424>
  402b3c:	str	x0, [x19, #56]
  402b40:	mov	w0, #0x4                   	// #4
  402b44:	bl	4029f0 <strsignal@plt>
  402b48:	bl	413ec4 <ferror@plt+0x11424>
  402b4c:	str	x0, [x19, #40]
  402b50:	mov	w0, #0x8                   	// #8
  402b54:	bl	4029f0 <strsignal@plt>
  402b58:	bl	413ec4 <ferror@plt+0x11424>
  402b5c:	str	x0, [x19, #72]
  402b60:	mov	w0, #0x7                   	// #7
  402b64:	bl	4029f0 <strsignal@plt>
  402b68:	bl	413ec4 <ferror@plt+0x11424>
  402b6c:	str	x0, [x19, #64]
  402b70:	add	x0, sp, #0xa0
  402b74:	bl	402640 <sigemptyset@plt>
  402b78:	mov	w0, #0xc0000000            	// #-1073741824
  402b7c:	add	x1, sp, #0x98
  402b80:	mov	x2, #0x0                   	// #0
  402b84:	str	x20, [sp, #152]
  402b88:	str	w0, [sp, #288]
  402b8c:	mov	w0, #0xb                   	// #11
  402b90:	bl	402770 <sigaction@plt>
  402b94:	add	x1, sp, #0x98
  402b98:	mov	x2, #0x0                   	// #0
  402b9c:	mov	w0, #0x6                   	// #6
  402ba0:	bl	402770 <sigaction@plt>
  402ba4:	add	x1, sp, #0x98
  402ba8:	mov	x2, #0x0                   	// #0
  402bac:	mov	w0, #0x4                   	// #4
  402bb0:	bl	402770 <sigaction@plt>
  402bb4:	add	x1, sp, #0x98
  402bb8:	mov	x2, #0x0                   	// #0
  402bbc:	mov	w0, #0x8                   	// #8
  402bc0:	bl	402770 <sigaction@plt>
  402bc4:	add	x1, sp, #0x98
  402bc8:	mov	x2, #0x0                   	// #0
  402bcc:	mov	w0, #0x7                   	// #7
  402bd0:	bl	402770 <sigaction@plt>
  402bd4:	mov	x0, x20
  402bd8:	bl	40eb48 <ferror@plt+0xc0a8>
  402bdc:	str	x21, [sp, #120]
  402be0:	cbnz	w0, 402bec <ferror@plt+0x14c>
  402be4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402be8:	str	wzr, [x0, #864]
  402bec:	adrp	x24, 416000 <_obstack_memory_used@@Base+0x14bc>
  402bf0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402bf4:	add	x24, x24, #0x3df
  402bf8:	add	x0, x0, #0xd40
  402bfc:	mov	x28, x24
  402c00:	str	x0, [sp, #104]
  402c04:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402c08:	add	x0, x0, #0xbb4
  402c0c:	mov	x26, #0x0                   	// #0
  402c10:	mov	x27, #0x0                   	// #0
  402c14:	mov	x21, #0x0                   	// #0
  402c18:	mov	x25, #0x0                   	// #0
  402c1c:	mov	x20, #0x0                   	// #0
  402c20:	str	x0, [sp, #112]
  402c24:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402c28:	add	x0, x0, #0x32
  402c2c:	str	x0, [sp, #128]
  402c30:	str	wzr, [sp, #136]
  402c34:	ldp	x3, x2, [sp, #104]
  402c38:	mov	x1, x23
  402c3c:	mov	w0, w22
  402c40:	mov	x4, #0x0                   	// #0
  402c44:	bl	402840 <getopt_long@plt>
  402c48:	mov	w3, w0
  402c4c:	cmn	w0, #0x1
  402c50:	b.ne	402d48 <ferror@plt+0x2a8>  // b.any
  402c54:	cbz	x21, 402c88 <ferror@plt+0x1e8>
  402c58:	mov	x0, x21
  402c5c:	bl	407e6c <ferror@plt+0x53cc>
  402c60:	tst	w0, #0xff
  402c64:	b.ne	402c88 <ferror@plt+0x1e8>  // b.any
  402c68:	bl	402a30 <__errno_location@plt>
  402c6c:	ldr	w1, [x0]
  402c70:	ldr	w25, [x19, #532]
  402c74:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  402c78:	mov	x3, x21
  402c7c:	add	x2, x2, #0xbdd
  402c80:	mov	w0, w25
  402c84:	bl	403488 <ferror@plt+0x9e8>
  402c88:	bl	40b090 <ferror@plt+0x85f0>
  402c8c:	bl	40cb6c <ferror@plt+0xa0cc>
  402c90:	bl	40dea4 <ferror@plt+0xb404>
  402c94:	mov	x0, x24
  402c98:	bl	406534 <ferror@plt+0x3a94>
  402c9c:	bl	40dcdc <ferror@plt+0xb23c>
  402ca0:	cbz	x27, 4030b4 <ferror@plt+0x614>
  402ca4:	mov	x0, x27
  402ca8:	bl	409c30 <ferror@plt+0x7190>
  402cac:	ldr	w0, [sp, #136]
  402cb0:	cbz	w0, 402cd0 <ferror@plt+0x230>
  402cb4:	mov	x1, #0x1                   	// #1
  402cb8:	mov	w0, #0x2                   	// #2
  402cbc:	bl	4025b0 <signal@plt>
  402cc0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402cc4:	mov	x1, #0x0                   	// #0
  402cc8:	ldr	x0, [x0, #1088]
  402ccc:	bl	4024e0 <setbuf@plt>
  402cd0:	cmp	x21, #0x0
  402cd4:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402cd8:	add	x0, x0, #0xbf8
  402cdc:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x4bc>
  402ce0:	csel	x21, x21, x0, ne  // ne = any
  402ce4:	add	x24, x24, #0xbdd
  402ce8:	mov	w25, #0x0                   	// #0
  402cec:	mov	w27, #0x1                   	// #1
  402cf0:	cbnz	x20, 4030bc <ferror@plt+0x61c>
  402cf4:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402cf8:	ldr	w0, [x19, #1080]
  402cfc:	cmp	w0, w22
  402d00:	b.ne	4031ec <ferror@plt+0x74c>  // b.any
  402d04:	cbnz	w25, 4031ec <ferror@plt+0x74c>
  402d08:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  402d0c:	add	x0, x0, #0x50f
  402d10:	bl	4033ec <ferror@plt+0x94c>
  402d14:	bl	40af08 <ferror@plt+0x8468>
  402d18:	tst	w0, #0xff
  402d1c:	b.ne	4031f4 <ferror@plt+0x754>  // b.any
  402d20:	mov	x0, #0x0                   	// #0
  402d24:	bl	407e6c <ferror@plt+0x53cc>
  402d28:	cbz	x26, 4031fc <ferror@plt+0x75c>
  402d2c:	mov	x0, x26
  402d30:	bl	4098dc <ferror@plt+0x6e3c>
  402d34:	bl	40cbd4 <ferror@plt+0xa134>
  402d38:	bl	4065c8 <ferror@plt+0x3b28>
  402d3c:	ldr	x0, [sp, #120]
  402d40:	ldr	w0, [x0, #3416]
  402d44:	b	402dfc <ferror@plt+0x35c>
  402d48:	cmp	w3, #0x74
  402d4c:	b.gt	402dd0 <ferror@plt+0x330>
  402d50:	cmp	w3, #0x41
  402d54:	b.gt	402dac <ferror@plt+0x30c>
  402d58:	cmp	w3, #0x1
  402d5c:	b.ne	402ddc <ferror@plt+0x33c>  // b.any
  402d60:	mov	x0, #0x18                  	// #24
  402d64:	str	w3, [sp, #140]
  402d68:	bl	413d0c <ferror@plt+0x1126c>
  402d6c:	str	xzr, [x0]
  402d70:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402d74:	ldr	w3, [sp, #140]
  402d78:	str	w3, [x0, #8]
  402d7c:	ldr	x1, [x1, #1072]
  402d80:	str	x1, [x0, #16]
  402d84:	cbz	x20, 4030a8 <ferror@plt+0x608>
  402d88:	str	x0, [x25]
  402d8c:	mov	x25, x0
  402d90:	b	402c34 <ferror@plt+0x194>
  402d94:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402d98:	add	x0, x0, #0xd00
  402d9c:	ldrh	w0, [x0, w1, uxtw #1]
  402da0:	adr	x1, 402dac <ferror@plt+0x30c>
  402da4:	add	x0, x1, w0, sxth #2
  402da8:	br	x0
  402dac:	sub	w1, w3, #0x42
  402db0:	cmp	w1, #0x32
  402db4:	b.hi	402ddc <ferror@plt+0x33c>  // b.pmore
  402db8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402dbc:	add	x0, x0, #0xd0c
  402dc0:	ldrb	w0, [x0, w1, uxtw]
  402dc4:	adr	x1, 402dd0 <ferror@plt+0x330>
  402dc8:	add	x0, x1, w0, sxtb #2
  402dcc:	br	x0
  402dd0:	sub	w1, w3, #0x100
  402dd4:	cmp	w1, #0x4
  402dd8:	b.ls	402d94 <ferror@plt+0x2f4>  // b.plast
  402ddc:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  402de0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  402de4:	add	x1, x1, #0x86
  402de8:	ldr	x2, [x0, #2816]
  402dec:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402df0:	ldr	x0, [x0, #1064]
  402df4:	bl	4141fc <ferror@plt+0x1175c>
  402df8:	mov	w0, #0x1                   	// #1
  402dfc:	bl	402480 <exit@plt>
  402e00:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  402e04:	mov	w1, #0x0                   	// #0
  402e08:	add	x2, x2, #0xad
  402e0c:	mov	w0, #0x0                   	// #0
  402e10:	bl	4024a0 <error@plt>
  402e14:	b	402c34 <ferror@plt+0x194>
  402e18:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402e1c:	cmp	w3, #0x4e
  402e20:	add	x3, x0, #0x2f
  402e24:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  402e28:	ldr	x0, [sp, #128]
  402e2c:	add	x2, x2, #0xe2
  402e30:	mov	w1, #0x0                   	// #0
  402e34:	csel	x3, x3, x0, eq  // eq = none
  402e38:	mov	w0, #0x0                   	// #0
  402e3c:	bl	4024a0 <error@plt>
  402e40:	b	402c34 <ferror@plt+0x194>
  402e44:	ldrb	w0, [x19, #528]
  402e48:	cbnz	w0, 402e58 <ferror@plt+0x3b8>
  402e4c:	mov	w0, #0x1                   	// #1
  402e50:	strb	w0, [x19, #528]
  402e54:	b	402c34 <ferror@plt+0x194>
  402e58:	mov	w0, #0x1                   	// #1
  402e5c:	str	w0, [x19, #532]
  402e60:	b	402c34 <ferror@plt+0x194>
  402e64:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402e68:	ldr	x26, [x0, #1072]
  402e6c:	b	402c34 <ferror@plt+0x194>
  402e70:	mov	w0, #0x1                   	// #1
  402e74:	str	w0, [x19, #536]
  402e78:	b	402c34 <ferror@plt+0x194>
  402e7c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402e80:	mov	x1, #0x0                   	// #0
  402e84:	mov	w2, #0xa                   	// #10
  402e88:	ldr	x0, [x0, #1072]
  402e8c:	bl	402890 <strtol@plt>
  402e90:	cmp	x0, #0x0
  402e94:	mov	x1, #0x1fd                 	// #509
  402e98:	csel	x0, x0, x1, ne  // ne = any
  402e9c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402ea0:	str	x0, [x1, #872]
  402ea4:	b	402c34 <ferror@plt+0x194>
  402ea8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402eac:	ldr	x0, [x0, #1072]
  402eb0:	bl	40dc48 <ferror@plt+0xb1a8>
  402eb4:	b	402c34 <ferror@plt+0x194>
  402eb8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402ebc:	mov	x1, #0x0                   	// #0
  402ec0:	mov	w2, #0xa                   	// #10
  402ec4:	ldr	x0, [x0, #1072]
  402ec8:	bl	402890 <strtol@plt>
  402ecc:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402ed0:	str	w0, [x1, #864]
  402ed4:	b	402c34 <ferror@plt+0x194>
  402ed8:	mov	w0, #0x1                   	// #1
  402edc:	str	w0, [x19, #540]
  402ee0:	b	402c34 <ferror@plt+0x194>
  402ee4:	mov	w0, #0x1                   	// #1
  402ee8:	str	w0, [x19, #544]
  402eec:	b	402c34 <ferror@plt+0x194>
  402ef0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402ef4:	ldr	x27, [x0, #1072]
  402ef8:	b	402c34 <ferror@plt+0x194>
  402efc:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f00:	ldr	x0, [x1, #1072]
  402f04:	bl	407c98 <ferror@plt+0x51f8>
  402f08:	str	w0, [x19, #548]
  402f0c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f10:	tbz	w0, #31, 402c34 <ferror@plt+0x194>
  402f14:	ldr	x3, [x1, #1072]
  402f18:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  402f1c:	mov	w1, #0x0                   	// #0
  402f20:	add	x2, x2, #0x3c5
  402f24:	mov	w0, #0x0                   	// #0
  402f28:	bl	4024a0 <error@plt>
  402f2c:	str	wzr, [x19, #548]
  402f30:	b	402c34 <ferror@plt+0x194>
  402f34:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  402f38:	mov	w1, #0x0                   	// #0
  402f3c:	add	x2, x2, #0x101
  402f40:	mov	w0, #0x0                   	// #0
  402f44:	bl	4024a0 <error@plt>
  402f48:	mov	w0, #0x1                   	// #1
  402f4c:	str	w0, [sp, #136]
  402f50:	b	402c34 <ferror@plt+0x194>
  402f54:	str	wzr, [x19, #536]
  402f58:	b	402c34 <ferror@plt+0x194>
  402f5c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f60:	mov	w2, #0xa                   	// #10
  402f64:	mov	x1, #0x0                   	// #0
  402f68:	ldr	x0, [x0, #1072]
  402f6c:	bl	402890 <strtol@plt>
  402f70:	cmp	w0, #0x0
  402f74:	csel	w0, w0, wzr, gt
  402f78:	str	w0, [x19, #552]
  402f7c:	b	402c34 <ferror@plt+0x194>
  402f80:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f84:	ldr	x21, [x0, #1072]
  402f88:	b	402c34 <ferror@plt+0x194>
  402f8c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f90:	ldr	x24, [x0, #1072]
  402f94:	b	402c34 <ferror@plt+0x194>
  402f98:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402f9c:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x4bc>
  402fa0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  402fa4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  402fa8:	ldr	x0, [x0, #1088]
  402fac:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  402fb0:	add	x4, x4, #0x132
  402fb4:	add	x3, x3, #0xffe
  402fb8:	add	x2, x2, #0x140
  402fbc:	add	x1, x1, #0x147
  402fc0:	mov	x5, #0x0                   	// #0
  402fc4:	bl	41390c <ferror@plt+0x10e6c>
  402fc8:	mov	w0, #0x0                   	// #0
  402fcc:	b	402dfc <ferror@plt+0x35c>
  402fd0:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  402fd4:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  402fd8:	ldr	x1, [x0, #2816]
  402fdc:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402fe0:	add	x0, x0, #0x14a
  402fe4:	bl	414108 <ferror@plt+0x11668>
  402fe8:	ldr	x1, [x19, #1088]
  402fec:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  402ff0:	add	x0, x0, #0x16b
  402ff4:	bl	402460 <fputs@plt>
  402ff8:	ldr	x1, [x19, #1088]
  402ffc:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403000:	add	x0, x0, #0x1bc
  403004:	bl	402460 <fputs@plt>
  403008:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  40300c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403010:	add	x1, x1, #0x2ae
  403014:	add	x0, x0, #0x2c9
  403018:	bl	414108 <ferror@plt+0x11668>
  40301c:	ldr	x1, [x19, #1088]
  403020:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403024:	add	x0, x0, #0x4af
  403028:	bl	402460 <fputs@plt>
  40302c:	mov	x0, x28
  403030:	bl	402810 <puts@plt>
  403034:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403038:	ldr	w1, [x0, #864]
  40303c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403040:	add	x0, x0, #0x5bb
  403044:	bl	414108 <ferror@plt+0x11668>
  403048:	mov	x0, x28
  40304c:	bl	402810 <puts@plt>
  403050:	ldr	x1, [x19, #1088]
  403054:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403058:	add	x0, x0, #0x6df
  40305c:	bl	402460 <fputs@plt>
  403060:	ldr	x1, [x19, #1088]
  403064:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403068:	add	x0, x0, #0x781
  40306c:	bl	402460 <fputs@plt>
  403070:	ldr	x1, [x19, #1088]
  403074:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403078:	add	x0, x0, #0x8e0
  40307c:	bl	402460 <fputs@plt>
  403080:	ldr	x1, [x19, #1088]
  403084:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403088:	add	x0, x0, #0xaaf
  40308c:	bl	402460 <fputs@plt>
  403090:	ldr	x1, [x19, #1088]
  403094:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x4bc>
  403098:	add	x0, x0, #0xb2e
  40309c:	bl	402460 <fputs@plt>
  4030a0:	bl	41397c <ferror@plt+0x10edc>
  4030a4:	b	402fc8 <ferror@plt+0x528>
  4030a8:	mov	x25, x0
  4030ac:	mov	x20, x0
  4030b0:	b	402c34 <ferror@plt+0x194>
  4030b4:	bl	4068c4 <ferror@plt+0x3e24>
  4030b8:	b	402cac <ferror@plt+0x20c>
  4030bc:	ldr	w28, [x20, #8]
  4030c0:	cmp	w28, #0x73
  4030c4:	b.eq	4031b0 <ferror@plt+0x710>  // b.none
  4030c8:	b.gt	4030fc <ferror@plt+0x65c>
  4030cc:	cmp	w28, #0x44
  4030d0:	b.eq	40313c <ferror@plt+0x69c>  // b.none
  4030d4:	cmp	w28, #0x55
  4030d8:	b.eq	403184 <ferror@plt+0x6e4>  // b.none
  4030dc:	cmp	w28, #0x1
  4030e0:	b.eq	4031b8 <ferror@plt+0x718>  // b.none
  4030e4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  4030e8:	add	x2, x2, #0xbff
  4030ec:	mov	w1, #0x0                   	// #0
  4030f0:	mov	w0, #0x0                   	// #0
  4030f4:	bl	403488 <ferror@plt+0x9e8>
  4030f8:	bl	4027d0 <abort@plt>
  4030fc:	cmp	w28, #0x74
  403100:	b.eq	403194 <ferror@plt+0x6f4>  // b.none
  403104:	cmp	w28, #0x100
  403108:	b.ne	4030e4 <ferror@plt+0x644>  // b.any
  40310c:	ldr	x0, [x20, #16]
  403110:	bl	407e6c <ferror@plt+0x53cc>
  403114:	tst	w0, #0xff
  403118:	b.ne	403170 <ferror@plt+0x6d0>  // b.any
  40311c:	bl	402a30 <__errno_location@plt>
  403120:	ldr	w1, [x0]
  403124:	ldr	w28, [x19, #532]
  403128:	mov	x3, x21
  40312c:	mov	x2, x24
  403130:	mov	w0, w28
  403134:	bl	403488 <ferror@plt+0x9e8>
  403138:	b	403170 <ferror@plt+0x6d0>
  40313c:	ldr	x0, [x20, #16]
  403140:	bl	413ec4 <ferror@plt+0x11424>
  403144:	mov	x28, x0
  403148:	mov	w1, #0x3d                  	// #61
  40314c:	bl	402910 <strchr@plt>
  403150:	mov	x1, x0
  403154:	cbz	x0, 40315c <ferror@plt+0x6bc>
  403158:	strb	wzr, [x1], #1
  40315c:	mov	w2, #0x1                   	// #1
  403160:	mov	x0, x28
  403164:	bl	4065dc <ferror@plt+0x3b3c>
  403168:	mov	x0, x28
  40316c:	bl	4028c0 <free@plt>
  403170:	ldr	x28, [x20]
  403174:	mov	x0, x20
  403178:	bl	4028c0 <free@plt>
  40317c:	mov	x20, x28
  403180:	b	402cf0 <ferror@plt+0x250>
  403184:	ldr	x0, [x20, #16]
  403188:	mov	w1, #0x2                   	// #2
  40318c:	bl	40df50 <ferror@plt+0xb4b0>
  403190:	b	403170 <ferror@plt+0x6d0>
  403194:	ldr	x0, [x20, #16]
  403198:	mov	w1, #0x1                   	// #1
  40319c:	bl	40df50 <ferror@plt+0xb4b0>
  4031a0:	ldrb	w1, [x0, #8]
  4031a4:	orr	w1, w1, #0x1
  4031a8:	strb	w1, [x0, #8]
  4031ac:	b	403170 <ferror@plt+0x6d0>
  4031b0:	str	w27, [x19, #556]
  4031b4:	b	403170 <ferror@plt+0x6d0>
  4031b8:	ldr	x0, [x20, #16]
  4031bc:	mov	w25, w28
  4031c0:	bl	4033ec <ferror@plt+0x94c>
  4031c4:	b	403170 <ferror@plt+0x6d0>
  4031c8:	ldr	x0, [x23, w0, sxtw #3]
  4031cc:	bl	4033ec <ferror@plt+0x94c>
  4031d0:	ldr	w0, [x19]
  4031d4:	add	w0, w0, #0x1
  4031d8:	str	w0, [x19]
  4031dc:	ldr	w0, [x19]
  4031e0:	cmp	w0, w22
  4031e4:	b.lt	4031c8 <ferror@plt+0x728>  // b.tstop
  4031e8:	b	402d14 <ferror@plt+0x274>
  4031ec:	add	x19, x19, #0x438
  4031f0:	b	4031dc <ferror@plt+0x73c>
  4031f4:	bl	40c32c <ferror@plt+0x988c>
  4031f8:	b	402d14 <ferror@plt+0x274>
  4031fc:	mov	w0, #0x0                   	// #0
  403200:	bl	40d3fc <ferror@plt+0xa95c>
  403204:	bl	40d9d4 <ferror@plt+0xaf34>
  403208:	b	402d34 <ferror@plt+0x294>
  40320c:	mov	x29, #0x0                   	// #0
  403210:	mov	x30, #0x0                   	// #0
  403214:	mov	x5, x0
  403218:	ldr	x1, [sp]
  40321c:	add	x2, sp, #0x8
  403220:	mov	x6, sp
  403224:	movz	x0, #0x0, lsl #48
  403228:	movk	x0, #0x0, lsl #32
  40322c:	movk	x0, #0x40, lsl #16
  403230:	movk	x0, #0x2ab0
  403234:	movz	x3, #0x0, lsl #48
  403238:	movk	x3, #0x0, lsl #32
  40323c:	movk	x3, #0x41, lsl #16
  403240:	movk	x3, #0x4f38
  403244:	movz	x4, #0x0, lsl #48
  403248:	movk	x4, #0x0, lsl #32
  40324c:	movk	x4, #0x41, lsl #16
  403250:	movk	x4, #0x4fb8
  403254:	bl	402670 <__libc_start_main@plt>
  403258:	bl	4027d0 <abort@plt>
  40325c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x184bc>
  403260:	ldr	x0, [x0, #4064]
  403264:	cbz	x0, 40326c <ferror@plt+0x7cc>
  403268:	b	402790 <__gmon_start__@plt>
  40326c:	ret
  403270:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403274:	add	x0, x0, #0x418
  403278:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40327c:	add	x1, x1, #0x418
  403280:	cmp	x1, x0
  403284:	b.eq	40329c <ferror@plt+0x7fc>  // b.none
  403288:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  40328c:	ldr	x1, [x1, #8]
  403290:	cbz	x1, 40329c <ferror@plt+0x7fc>
  403294:	mov	x16, x1
  403298:	br	x16
  40329c:	ret
  4032a0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4032a4:	add	x0, x0, #0x418
  4032a8:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4032ac:	add	x1, x1, #0x418
  4032b0:	sub	x1, x1, x0
  4032b4:	lsr	x2, x1, #63
  4032b8:	add	x1, x2, x1, asr #3
  4032bc:	cmp	xzr, x1, asr #1
  4032c0:	asr	x1, x1, #1
  4032c4:	b.eq	4032dc <ferror@plt+0x83c>  // b.none
  4032c8:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  4032cc:	ldr	x2, [x2, #16]
  4032d0:	cbz	x2, 4032dc <ferror@plt+0x83c>
  4032d4:	mov	x16, x2
  4032d8:	br	x16
  4032dc:	ret
  4032e0:	stp	x29, x30, [sp, #-32]!
  4032e4:	mov	x29, sp
  4032e8:	str	x19, [sp, #16]
  4032ec:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4032f0:	ldrb	w0, [x19, #1120]
  4032f4:	cbnz	w0, 403304 <ferror@plt+0x864>
  4032f8:	bl	403270 <ferror@plt+0x7d0>
  4032fc:	mov	w0, #0x1                   	// #1
  403300:	strb	w0, [x19, #1120]
  403304:	ldr	x19, [sp, #16]
  403308:	ldp	x29, x30, [sp], #32
  40330c:	ret
  403310:	b	4032a0 <ferror@plt+0x800>
  403314:	stp	x29, x30, [sp, #-48]!
  403318:	mov	x29, sp
  40331c:	stp	x19, x20, [sp, #16]
  403320:	sxtw	x19, w0
  403324:	stp	x21, x22, [sp, #32]
  403328:	cbz	w19, 4033dc <ferror@plt+0x93c>
  40332c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  403330:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  403334:	add	x21, x21, #0xc30
  403338:	ldr	x20, [x0, #2816]
  40333c:	mov	x0, x20
  403340:	bl	402450 <strlen@plt>
  403344:	mov	x1, x20
  403348:	mov	x2, x0
  40334c:	mov	w0, #0x2                   	// #2
  403350:	bl	4027a0 <write@plt>
  403354:	mov	x2, #0x2                   	// #2
  403358:	mov	x1, x21
  40335c:	mov	w0, w2
  403360:	bl	4027a0 <write@plt>
  403364:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403368:	add	x20, x0, #0x468
  40336c:	add	x20, x20, #0x8
  403370:	ldr	x22, [x0, #1128]
  403374:	ldr	x0, [x0, #1128]
  403378:	bl	402450 <strlen@plt>
  40337c:	mov	x2, x0
  403380:	mov	x1, x22
  403384:	mov	w0, #0x2                   	// #2
  403388:	bl	4027a0 <write@plt>
  40338c:	ldr	x0, [x20, x19, lsl #3]
  403390:	cbz	x0, 4033c0 <ferror@plt+0x920>
  403394:	mov	x1, x21
  403398:	mov	x2, #0x2                   	// #2
  40339c:	mov	w0, w2
  4033a0:	bl	4027a0 <write@plt>
  4033a4:	ldr	x21, [x20, x19, lsl #3]
  4033a8:	ldr	x0, [x20, x19, lsl #3]
  4033ac:	bl	402450 <strlen@plt>
  4033b0:	mov	x2, x0
  4033b4:	mov	x1, x21
  4033b8:	mov	w0, #0x2                   	// #2
  4033bc:	bl	4027a0 <write@plt>
  4033c0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4033c4:	add	x1, x1, #0x494
  4033c8:	mov	x2, #0x1                   	// #1
  4033cc:	mov	w0, #0x2                   	// #2
  4033d0:	bl	4027a0 <write@plt>
  4033d4:	mov	w0, #0x2                   	// #2
  4033d8:	bl	402440 <_exit@plt>
  4033dc:	ldp	x19, x20, [sp, #16]
  4033e0:	ldp	x21, x22, [sp, #32]
  4033e4:	ldp	x29, x30, [sp], #48
  4033e8:	ret
  4033ec:	stp	x29, x30, [sp, #-48]!
  4033f0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  4033f4:	add	x1, x1, #0x50f
  4033f8:	mov	x29, sp
  4033fc:	str	x19, [sp, #16]
  403400:	mov	x19, x0
  403404:	bl	402860 <strcmp@plt>
  403408:	cbnz	w0, 40342c <ferror@plt+0x98c>
  40340c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403410:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x4bc>
  403414:	mov	w2, #0x0                   	// #0
  403418:	add	x1, x1, #0x18
  40341c:	ldr	x0, [x0, #1096]
  403420:	bl	40a754 <ferror@plt+0x7cb4>
  403424:	bl	40c32c <ferror@plt+0x988c>
  403428:	b	403464 <ferror@plt+0x9c4>
  40342c:	add	x1, sp, #0x28
  403430:	mov	x0, x19
  403434:	bl	40dd64 <ferror@plt+0xb2c4>
  403438:	cbnz	x0, 403470 <ferror@plt+0x9d0>
  40343c:	bl	402a30 <__errno_location@plt>
  403440:	ldr	w1, [x0]
  403444:	mov	x3, x19
  403448:	mov	w0, #0x0                   	// #0
  40344c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  403450:	add	x2, x2, #0x1e
  403454:	bl	4024a0 <error@plt>
  403458:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40345c:	mov	w1, #0x1                   	// #1
  403460:	str	w1, [x0, #3416]
  403464:	ldr	x19, [sp, #16]
  403468:	ldp	x29, x30, [sp], #48
  40346c:	ret
  403470:	ldr	x1, [sp, #40]
  403474:	mov	w2, #0x1                   	// #1
  403478:	bl	40a754 <ferror@plt+0x7cb4>
  40347c:	ldr	x0, [sp, #40]
  403480:	bl	4028c0 <free@plt>
  403484:	b	403424 <ferror@plt+0x984>
  403488:	stp	x29, x30, [sp, #-256]!
  40348c:	mov	x29, sp
  403490:	stp	x3, x4, [sp, #216]
  403494:	add	x3, sp, #0x100
  403498:	adrp	x4, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40349c:	stp	x3, x3, [sp, #48]
  4034a0:	add	x3, sp, #0xd0
  4034a4:	str	x3, [sp, #64]
  4034a8:	mov	w3, #0xffffffd8            	// #-40
  4034ac:	str	w3, [sp, #72]
  4034b0:	mov	w3, #0xffffff80            	// #-128
  4034b4:	str	w3, [sp, #76]
  4034b8:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4034bc:	stp	x5, x6, [sp, #232]
  4034c0:	ldr	w3, [x3, #3424]
  4034c4:	ldr	x6, [x4, #3448]
  4034c8:	cmp	w3, #0x0
  4034cc:	ldp	x4, x5, [sp, #48]
  4034d0:	stp	x4, x5, [sp, #16]
  4034d4:	ldp	x4, x5, [sp, #64]
  4034d8:	stp	x4, x5, [sp, #32]
  4034dc:	mov	x4, x2
  4034e0:	add	x5, sp, #0x10
  4034e4:	csel	x2, x6, xzr, ne  // ne = any
  4034e8:	str	q0, [sp, #80]
  4034ec:	str	q1, [sp, #96]
  4034f0:	str	q2, [sp, #112]
  4034f4:	str	q3, [sp, #128]
  4034f8:	str	q4, [sp, #144]
  4034fc:	str	q5, [sp, #160]
  403500:	str	q6, [sp, #176]
  403504:	str	q7, [sp, #192]
  403508:	str	x7, [sp, #248]
  40350c:	bl	4134dc <ferror@plt+0x10a3c>
  403510:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403514:	ldrb	w0, [x0, #1656]
  403518:	cbz	w0, 403530 <ferror@plt+0xa90>
  40351c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  403520:	ldr	w1, [x0, #3416]
  403524:	cbnz	w1, 403530 <ferror@plt+0xa90>
  403528:	mov	w1, #0x1                   	// #1
  40352c:	str	w1, [x0, #3416]
  403530:	ldp	x29, x30, [sp], #256
  403534:	ret
  403538:	stp	x29, x30, [sp, #-240]!
  40353c:	cmp	w3, #0x0
  403540:	csel	x2, x2, xzr, ne  // ne = any
  403544:	mov	x29, sp
  403548:	stp	x5, x6, [sp, #216]
  40354c:	add	x5, sp, #0xf0
  403550:	stp	x5, x5, [sp, #48]
  403554:	add	x5, sp, #0xd0
  403558:	str	x5, [sp, #64]
  40355c:	mov	w5, #0xffffffe8            	// #-24
  403560:	str	w5, [sp, #72]
  403564:	mov	w5, #0xffffff80            	// #-128
  403568:	str	w5, [sp, #76]
  40356c:	add	x5, sp, #0x10
  403570:	str	x7, [sp, #232]
  403574:	ldp	x6, x7, [sp, #48]
  403578:	stp	x6, x7, [sp, #16]
  40357c:	ldp	x6, x7, [sp, #64]
  403580:	stp	x6, x7, [sp, #32]
  403584:	str	q0, [sp, #80]
  403588:	str	q1, [sp, #96]
  40358c:	str	q2, [sp, #112]
  403590:	str	q3, [sp, #128]
  403594:	str	q4, [sp, #144]
  403598:	str	q5, [sp, #160]
  40359c:	str	q6, [sp, #176]
  4035a0:	str	q7, [sp, #192]
  4035a4:	bl	4134dc <ferror@plt+0x10a3c>
  4035a8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4035ac:	ldrb	w0, [x0, #1656]
  4035b0:	cbz	w0, 4035c8 <ferror@plt+0xb28>
  4035b4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4035b8:	ldr	w1, [x0, #3416]
  4035bc:	cbnz	w1, 4035c8 <ferror@plt+0xb28>
  4035c0:	mov	w1, #0x1                   	// #1
  4035c4:	str	w1, [x0, #3416]
  4035c8:	ldp	x29, x30, [sp], #240
  4035cc:	ret
  4035d0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4035d4:	cmp	w1, #0x0
  4035d8:	ldr	w0, [x0, #1660]
  4035dc:	b.le	4035f8 <ferror@plt+0xb58>
  4035e0:	ldr	x1, [x2]
  4035e4:	ldr	x3, [x1, #8]
  4035e8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4035ec:	mov	w1, #0x0                   	// #0
  4035f0:	add	x2, x2, #0x60
  4035f4:	b	403488 <ferror@plt+0x9e8>
  4035f8:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4035fc:	add	x3, x3, #0x3df
  403600:	b	4035e8 <ferror@plt+0xb48>
  403604:	stp	x29, x30, [sp, #-64]!
  403608:	mov	x29, sp
  40360c:	stp	x19, x20, [sp, #16]
  403610:	mov	x20, x0
  403614:	mov	x19, x1
  403618:	stp	x21, x22, [sp, #32]
  40361c:	mov	w21, #0x0                   	// #0
  403620:	str	x23, [sp, #48]
  403624:	ldrb	w0, [x20]
  403628:	cbz	w0, 403670 <ferror@plt+0xbd0>
  40362c:	cmp	w0, #0x2d
  403630:	add	x23, x20, #0x1
  403634:	ldp	x0, x1, [x19, #24]
  403638:	b.ne	403778 <ferror@plt+0xcd8>  // b.any
  40363c:	cbz	w21, 403778 <ferror@plt+0xcd8>
  403640:	ldrb	w20, [x20, #1]
  403644:	cbnz	w20, 4036ec <ferror@plt+0xc4c>
  403648:	cmp	x1, x0
  40364c:	b.ne	40365c <ferror@plt+0xbbc>  // b.any
  403650:	mov	x0, x19
  403654:	mov	x1, #0x1                   	// #1
  403658:	bl	414990 <_obstack_newchunk@@Base>
  40365c:	ldr	x0, [x19, #24]
  403660:	add	x1, x0, #0x1
  403664:	str	x1, [x19, #24]
  403668:	mov	w1, #0x2d                  	// #45
  40366c:	strb	w1, [x0]
  403670:	ldp	x0, x1, [x19, #24]
  403674:	cmp	x1, x0
  403678:	b.ne	403688 <ferror@plt+0xbe8>  // b.any
  40367c:	mov	x0, x19
  403680:	mov	x1, #0x1                   	// #1
  403684:	bl	414990 <_obstack_newchunk@@Base>
  403688:	ldr	x0, [x19, #24]
  40368c:	add	x1, x0, #0x1
  403690:	str	x1, [x19, #24]
  403694:	strb	wzr, [x0]
  403698:	ldp	x0, x2, [x19, #16]
  40369c:	cmp	x2, x0
  4036a0:	b.ne	4036b0 <ferror@plt+0xc10>  // b.any
  4036a4:	ldrb	w1, [x19, #80]
  4036a8:	orr	w1, w1, #0x2
  4036ac:	strb	w1, [x19, #80]
  4036b0:	ldr	x1, [x19, #48]
  4036b4:	ldr	x3, [x19, #32]
  4036b8:	add	x2, x2, x1
  4036bc:	bic	x1, x2, x1
  4036c0:	ldr	x2, [x19, #8]
  4036c4:	ldp	x21, x22, [sp, #32]
  4036c8:	sub	x4, x1, x2
  4036cc:	sub	x2, x3, x2
  4036d0:	cmp	x4, x2
  4036d4:	csel	x1, x1, x3, ls  // ls = plast
  4036d8:	ldr	x23, [sp, #48]
  4036dc:	stp	x1, x1, [x19, #16]
  4036e0:	ldp	x19, x20, [sp, #16]
  4036e4:	ldp	x29, x30, [sp], #64
  4036e8:	ret
  4036ec:	cmp	w21, w20
  4036f0:	b.ls	403758 <ferror@plt+0xcb8>  // b.plast
  4036f4:	sub	w0, w21, #0x1
  4036f8:	and	w21, w0, #0xff
  4036fc:	cmp	w20, w0, uxtb
  403700:	ldp	x1, x2, [x19, #24]
  403704:	b.hi	40376c <ferror@plt+0xccc>  // b.pmore
  403708:	cmp	x2, x1
  40370c:	b.ne	40371c <ferror@plt+0xc7c>  // b.any
  403710:	mov	x0, x19
  403714:	mov	x1, #0x1                   	// #1
  403718:	bl	414990 <_obstack_newchunk@@Base>
  40371c:	ldr	x0, [x19, #24]
  403720:	add	x1, x0, #0x1
  403724:	str	x1, [x19, #24]
  403728:	strb	w21, [x0]
  40372c:	b	4036f4 <ferror@plt+0xc54>
  403730:	cmp	x0, x1
  403734:	b.ne	403744 <ferror@plt+0xca4>  // b.any
  403738:	mov	x0, x19
  40373c:	mov	x1, #0x1                   	// #1
  403740:	bl	414990 <_obstack_newchunk@@Base>
  403744:	ldr	x0, [x19, #24]
  403748:	mov	w21, w22
  40374c:	add	x1, x0, #0x1
  403750:	str	x1, [x19, #24]
  403754:	strb	w22, [x0]
  403758:	add	w22, w21, #0x1
  40375c:	cmp	w21, w20
  403760:	and	w22, w22, #0xff
  403764:	ldp	x0, x1, [x19, #24]
  403768:	b.ne	403730 <ferror@plt+0xc90>  // b.any
  40376c:	mov	x20, x23
  403770:	ldrb	w21, [x20], #1
  403774:	b	403624 <ferror@plt+0xb84>
  403778:	cmp	x1, x0
  40377c:	b.ne	40378c <ferror@plt+0xcec>  // b.any
  403780:	mov	x0, x19
  403784:	mov	x1, #0x1                   	// #1
  403788:	bl	414990 <_obstack_newchunk@@Base>
  40378c:	ldr	x0, [x19, #24]
  403790:	mov	x23, x20
  403794:	add	x1, x0, #0x1
  403798:	str	x1, [x19, #24]
  40379c:	ldrb	w1, [x20]
  4037a0:	strb	w1, [x0]
  4037a4:	b	40376c <ferror@plt+0xccc>
  4037a8:	stp	x29, x30, [sp, #-96]!
  4037ac:	mov	x29, sp
  4037b0:	stp	x19, x20, [sp, #16]
  4037b4:	mov	x19, x0
  4037b8:	mov	x0, x3
  4037bc:	stp	x21, x22, [sp, #32]
  4037c0:	mov	x20, #0x1                   	// #1
  4037c4:	stp	x23, x24, [sp, #48]
  4037c8:	mov	x23, x2
  4037cc:	mov	x24, x3
  4037d0:	stp	x25, x26, [sp, #64]
  4037d4:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4037d8:	adrp	x26, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4037dc:	add	x25, x25, #0xd68
  4037e0:	add	x26, x26, #0xda0
  4037e4:	stp	x27, x28, [sp, #80]
  4037e8:	mov	w27, w1
  4037ec:	and	w28, w4, #0xff
  4037f0:	bl	402450 <strlen@plt>
  4037f4:	mov	x21, x0
  4037f8:	cmp	w27, w20
  4037fc:	b.gt	40381c <ferror@plt+0xd7c>
  403800:	ldp	x19, x20, [sp, #16]
  403804:	ldp	x21, x22, [sp, #32]
  403808:	ldp	x23, x24, [sp, #48]
  40380c:	ldp	x25, x26, [sp, #64]
  403810:	ldp	x27, x28, [sp, #80]
  403814:	ldp	x29, x30, [sp], #96
  403818:	ret
  40381c:	cmp	w20, #0x1
  403820:	b.eq	40385c <ferror@plt+0xdbc>  // b.none
  403824:	ldp	x1, x0, [x19, #24]
  403828:	sub	x0, x0, x1
  40382c:	cmp	x21, x0
  403830:	b.ls	403840 <ferror@plt+0xda0>  // b.plast
  403834:	mov	x1, x21
  403838:	mov	x0, x19
  40383c:	bl	414990 <_obstack_newchunk@@Base>
  403840:	ldr	x0, [x19, #24]
  403844:	mov	x2, x21
  403848:	mov	x1, x24
  40384c:	bl	402420 <memcpy@plt>
  403850:	ldr	x0, [x19, #24]
  403854:	add	x0, x0, x21
  403858:	str	x0, [x19, #24]
  40385c:	cbz	w28, 40389c <ferror@plt+0xdfc>
  403860:	ldp	x1, x0, [x19, #24]
  403864:	ldr	x22, [x25, #8]
  403868:	sub	x0, x0, x1
  40386c:	cmp	x22, x0
  403870:	b.ls	403880 <ferror@plt+0xde0>  // b.plast
  403874:	mov	x1, x22
  403878:	mov	x0, x19
  40387c:	bl	414990 <_obstack_newchunk@@Base>
  403880:	ldr	x1, [x25]
  403884:	mov	x2, x22
  403888:	ldr	x0, [x19, #24]
  40388c:	bl	402420 <memcpy@plt>
  403890:	ldr	x2, [x19, #24]
  403894:	add	x2, x2, x22
  403898:	str	x2, [x19, #24]
  40389c:	ldr	x0, [x23, x20, lsl #3]
  4038a0:	ldr	x0, [x0, #8]
  4038a4:	bl	402450 <strlen@plt>
  4038a8:	mov	x22, x0
  4038ac:	ldp	x1, x0, [x19, #24]
  4038b0:	sub	x0, x0, x1
  4038b4:	cmp	x22, x0
  4038b8:	b.ls	4038c8 <ferror@plt+0xe28>  // b.plast
  4038bc:	mov	x1, x22
  4038c0:	mov	x0, x19
  4038c4:	bl	414990 <_obstack_newchunk@@Base>
  4038c8:	ldr	x0, [x23, x20, lsl #3]
  4038cc:	mov	x2, x22
  4038d0:	ldr	x1, [x0, #8]
  4038d4:	ldr	x0, [x19, #24]
  4038d8:	bl	402420 <memcpy@plt>
  4038dc:	ldr	x0, [x19, #24]
  4038e0:	add	x0, x0, x22
  4038e4:	str	x0, [x19, #24]
  4038e8:	cbz	w28, 403928 <ferror@plt+0xe88>
  4038ec:	ldr	x2, [x19, #32]
  4038f0:	ldr	x22, [x26, #8]
  4038f4:	sub	x0, x2, x0
  4038f8:	cmp	x22, x0
  4038fc:	b.ls	40390c <ferror@plt+0xe6c>  // b.plast
  403900:	mov	x1, x22
  403904:	mov	x0, x19
  403908:	bl	414990 <_obstack_newchunk@@Base>
  40390c:	ldr	x1, [x26]
  403910:	mov	x2, x22
  403914:	ldr	x0, [x19, #24]
  403918:	bl	402420 <memcpy@plt>
  40391c:	ldr	x2, [x19, #24]
  403920:	add	x2, x2, x22
  403924:	str	x2, [x19, #24]
  403928:	add	x20, x20, #0x1
  40392c:	b	4037f8 <ferror@plt+0xd58>
  403930:	stp	x29, x30, [sp, #-96]!
  403934:	mov	x29, sp
  403938:	stp	x19, x20, [sp, #16]
  40393c:	mov	x19, x0
  403940:	mov	x20, x2
  403944:	stp	x21, x22, [sp, #32]
  403948:	mov	x21, x3
  40394c:	stp	x23, x24, [sp, #48]
  403950:	adrp	x24, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403954:	mov	x23, x1
  403958:	add	x24, x24, #0x698
  40395c:	stp	x25, x26, [sp, #64]
  403960:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x14bc>
  403964:	add	x25, x25, #0x97
  403968:	stp	x27, x28, [sp, #80]
  40396c:	mov	x0, x20
  403970:	mov	w1, #0x5c                  	// #92
  403974:	bl	402910 <strchr@plt>
  403978:	mov	x22, x0
  40397c:	ldp	x28, x26, [x19, #24]
  403980:	cbnz	x0, 4039e0 <ferror@plt+0xf40>
  403984:	sub	x26, x26, x28
  403988:	mov	x0, x20
  40398c:	bl	402450 <strlen@plt>
  403990:	mov	x21, x0
  403994:	cmp	x0, x26
  403998:	b.ls	4039a8 <ferror@plt+0xf08>  // b.plast
  40399c:	mov	x1, x0
  4039a0:	mov	x0, x19
  4039a4:	bl	414990 <_obstack_newchunk@@Base>
  4039a8:	ldr	x0, [x19, #24]
  4039ac:	mov	x2, x21
  4039b0:	mov	x1, x20
  4039b4:	bl	402420 <memcpy@plt>
  4039b8:	ldr	x0, [x19, #24]
  4039bc:	ldp	x23, x24, [sp, #48]
  4039c0:	add	x0, x0, x21
  4039c4:	ldp	x21, x22, [sp, #32]
  4039c8:	ldp	x25, x26, [sp, #64]
  4039cc:	ldp	x27, x28, [sp, #80]
  4039d0:	str	x0, [x19, #24]
  4039d4:	ldp	x19, x20, [sp, #16]
  4039d8:	ldp	x29, x30, [sp], #96
  4039dc:	ret
  4039e0:	sub	x27, x0, x20
  4039e4:	sub	x26, x26, x28
  4039e8:	cmp	x27, x26
  4039ec:	b.ls	4039fc <ferror@plt+0xf5c>  // b.plast
  4039f0:	mov	x1, x27
  4039f4:	mov	x0, x19
  4039f8:	bl	414990 <_obstack_newchunk@@Base>
  4039fc:	ldr	x0, [x19, #24]
  403a00:	mov	x1, x20
  403a04:	mov	x2, x27
  403a08:	bl	402420 <memcpy@plt>
  403a0c:	ldr	x1, [x19, #24]
  403a10:	add	x1, x1, x27
  403a14:	str	x1, [x19, #24]
  403a18:	ldrb	w20, [x22, #1]
  403a1c:	cmp	w20, #0x30
  403a20:	b.eq	403aa4 <ferror@plt+0x1004>  // b.none
  403a24:	b.hi	403a60 <ferror@plt+0xfc0>  // b.pmore
  403a28:	cbz	w20, 403b88 <ferror@plt+0x10e8>
  403a2c:	cmp	w20, #0x26
  403a30:	b.eq	403ac8 <ferror@plt+0x1028>  // b.none
  403a34:	ldr	x0, [x19, #32]
  403a38:	cmp	x1, x0
  403a3c:	b.ne	403a4c <ferror@plt+0xfac>  // b.any
  403a40:	mov	x0, x19
  403a44:	mov	x1, #0x1                   	// #1
  403a48:	bl	414990 <_obstack_newchunk@@Base>
  403a4c:	ldr	x0, [x19, #24]
  403a50:	add	x1, x0, #0x1
  403a54:	str	x1, [x19, #24]
  403a58:	strb	w20, [x0]
  403a5c:	b	403a9c <ferror@plt+0xffc>
  403a60:	sub	w0, w20, #0x31
  403a64:	and	w0, w0, #0xff
  403a68:	cmp	w0, #0x8
  403a6c:	b.hi	403a34 <ferror@plt+0xf94>  // b.pmore
  403a70:	ldr	w0, [x21]
  403a74:	sub	w3, w20, #0x30
  403a78:	sub	w0, w0, #0x1
  403a7c:	cmp	w0, w3
  403a80:	b.hi	403b24 <ferror@plt+0x1084>  // b.pmore
  403a84:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403a88:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  403a8c:	mov	w1, #0x0                   	// #0
  403a90:	add	x2, x2, #0xd2
  403a94:	ldr	w0, [x0, #1660]
  403a98:	bl	403488 <ferror@plt+0x9e8>
  403a9c:	add	x20, x22, #0x2
  403aa0:	b	40396c <ferror@plt+0xecc>
  403aa4:	ldr	w0, [x24]
  403aa8:	cbnz	w0, 403ac8 <ferror@plt+0x1028>
  403aac:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403ab0:	mov	x2, x25
  403ab4:	mov	w1, #0x0                   	// #0
  403ab8:	ldr	w0, [x0, #1660]
  403abc:	bl	403488 <ferror@plt+0x9e8>
  403ac0:	mov	w0, #0x1                   	// #1
  403ac4:	str	w0, [x24]
  403ac8:	ldp	x1, x0, [x21, #8]
  403acc:	ldr	x2, [x19, #24]
  403ad0:	ldr	w1, [x1]
  403ad4:	ldr	w0, [x0]
  403ad8:	sub	w0, w0, w1
  403adc:	ldr	x1, [x19, #32]
  403ae0:	sxtw	x20, w0
  403ae4:	sub	x1, x1, x2
  403ae8:	cmp	x1, w0, sxtw
  403aec:	b.cs	403afc <ferror@plt+0x105c>  // b.hs, b.nlast
  403af0:	mov	x1, x20
  403af4:	mov	x0, x19
  403af8:	bl	414990 <_obstack_newchunk@@Base>
  403afc:	ldr	x0, [x21, #8]
  403b00:	mov	x2, x20
  403b04:	ldrsw	x1, [x0]
  403b08:	ldr	x0, [x19, #24]
  403b0c:	add	x1, x23, x1
  403b10:	bl	402420 <memcpy@plt>
  403b14:	ldr	x0, [x19, #24]
  403b18:	add	x0, x0, x20
  403b1c:	str	x0, [x19, #24]
  403b20:	b	403a9c <ferror@plt+0xffc>
  403b24:	ldr	x0, [x21, #16]
  403b28:	sbfiz	x20, x3, #2, #32
  403b2c:	ldr	w0, [x0, x20]
  403b30:	cmp	w0, #0x0
  403b34:	b.le	403a9c <ferror@plt+0xffc>
  403b38:	ldr	x2, [x21, #8]
  403b3c:	ldr	w2, [x2, x20]
  403b40:	sub	w0, w0, w2
  403b44:	ldr	x2, [x19, #32]
  403b48:	sxtw	x26, w0
  403b4c:	sub	x1, x2, x1
  403b50:	cmp	x1, w0, sxtw
  403b54:	b.cs	403b64 <ferror@plt+0x10c4>  // b.hs, b.nlast
  403b58:	mov	x1, x26
  403b5c:	mov	x0, x19
  403b60:	bl	414990 <_obstack_newchunk@@Base>
  403b64:	ldr	x0, [x21, #8]
  403b68:	mov	x2, x26
  403b6c:	ldrsw	x1, [x0, x20]
  403b70:	ldr	x0, [x19, #24]
  403b74:	add	x1, x23, x1
  403b78:	bl	402420 <memcpy@plt>
  403b7c:	ldr	x0, [x19, #24]
  403b80:	add	x0, x0, x26
  403b84:	b	403b1c <ferror@plt+0x107c>
  403b88:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403b8c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  403b90:	ldp	x19, x20, [sp, #16]
  403b94:	add	x2, x2, #0xf9
  403b98:	ldp	x21, x22, [sp, #32]
  403b9c:	mov	w1, #0x0                   	// #0
  403ba0:	ldp	x23, x24, [sp, #48]
  403ba4:	ldp	x25, x26, [sp, #64]
  403ba8:	ldp	x27, x28, [sp, #80]
  403bac:	ldp	x29, x30, [sp], #96
  403bb0:	ldr	w0, [x0, #1660]
  403bb4:	b	403488 <ferror@plt+0x9e8>
  403bb8:	stp	x29, x30, [sp, #-32]!
  403bbc:	mov	x29, sp
  403bc0:	str	x19, [sp, #16]
  403bc4:	mov	x19, x1
  403bc8:	bl	4029e0 <regfree@plt>
  403bcc:	ldr	x0, [x19, #8]
  403bd0:	bl	4028c0 <free@plt>
  403bd4:	ldr	x0, [x19, #16]
  403bd8:	ldr	x19, [sp, #16]
  403bdc:	ldp	x29, x30, [sp], #32
  403be0:	b	4028c0 <free@plt>
  403be4:	stp	x29, x30, [sp, #-80]!
  403be8:	mov	x29, sp
  403bec:	stp	x19, x20, [sp, #16]
  403bf0:	mov	x20, x3
  403bf4:	mov	x19, x0
  403bf8:	stp	x21, x22, [sp, #32]
  403bfc:	mov	x21, x2
  403c00:	mov	x22, x1
  403c04:	ldp	x3, x2, [x0, #24]
  403c08:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  403c0c:	stp	x23, x24, [sp, #48]
  403c10:	add	x23, x1, #0xd68
  403c14:	ldr	x24, [x23, #8]
  403c18:	str	x25, [sp, #64]
  403c1c:	sub	x2, x2, x3
  403c20:	mov	x25, x1
  403c24:	cmp	x24, x2
  403c28:	b.ls	403c34 <ferror@plt+0x1194>  // b.plast
  403c2c:	mov	x1, x24
  403c30:	bl	414990 <_obstack_newchunk@@Base>
  403c34:	ldr	x1, [x25, #3432]
  403c38:	mov	x2, x24
  403c3c:	ldr	x0, [x19, #24]
  403c40:	bl	402420 <memcpy@plt>
  403c44:	ldr	x0, [x19, #24]
  403c48:	add	x2, x0, x24
  403c4c:	str	x2, [x19, #24]
  403c50:	ldr	x0, [x19, #32]
  403c54:	sub	x2, x0, x2
  403c58:	cmp	x20, x2
  403c5c:	b.ls	403c6c <ferror@plt+0x11cc>  // b.plast
  403c60:	mov	x1, x20
  403c64:	mov	x0, x19
  403c68:	bl	414990 <_obstack_newchunk@@Base>
  403c6c:	ldr	x0, [x19, #24]
  403c70:	mov	x2, x20
  403c74:	mov	x1, x21
  403c78:	bl	402420 <memcpy@plt>
  403c7c:	ldr	x2, [x19, #24]
  403c80:	add	x1, x21, x20
  403c84:	mov	x0, #0x0                   	// #0
  403c88:	add	x2, x2, x20
  403c8c:	str	x2, [x19, #24]
  403c90:	cmp	x20, #0x0
  403c94:	ccmp	x0, #0x5, #0x2, ne  // ne = any
  403c98:	b.hi	403ca8 <ferror@plt+0x1208>  // b.pmore
  403c9c:	ldrb	w3, [x1, #-1]!
  403ca0:	cmp	w3, #0x58
  403ca4:	b.eq	403da4 <ferror@plt+0x1304>  // b.none
  403ca8:	mov	x20, #0x6                   	// #6
  403cac:	mov	x1, #0x7                   	// #7
  403cb0:	sub	x20, x20, x0
  403cb4:	sub	x1, x1, x0
  403cb8:	ldr	x0, [x19, #32]
  403cbc:	sub	x2, x0, x2
  403cc0:	cmp	x1, x2
  403cc4:	b.ls	403cd0 <ferror@plt+0x1230>  // b.plast
  403cc8:	mov	x0, x19
  403ccc:	bl	414990 <_obstack_newchunk@@Base>
  403cd0:	ldr	x0, [x19, #24]
  403cd4:	mov	x2, x20
  403cd8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  403cdc:	add	x1, x1, #0x38d
  403ce0:	bl	402420 <memcpy@plt>
  403ce4:	ldr	x1, [x19, #24]
  403ce8:	add	x0, x1, x20
  403cec:	add	x0, x0, #0x1
  403cf0:	str	x0, [x19, #24]
  403cf4:	strb	wzr, [x1, x20]
  403cf8:	ldr	x0, [x19, #16]
  403cfc:	ldr	x23, [x23, #8]
  403d00:	add	x23, x0, x23
  403d04:	bl	402a30 <__errno_location@plt>
  403d08:	mov	x20, x0
  403d0c:	mov	x0, x23
  403d10:	str	wzr, [x20]
  403d14:	bl	413248 <ferror@plt+0x107a8>
  403d18:	tbz	w0, #31, 403dc8 <ferror@plt+0x1328>
  403d1c:	ldr	w1, [x20]
  403d20:	mov	x4, x21
  403d24:	mov	x3, x22
  403d28:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  403d2c:	mov	w0, #0x0                   	// #0
  403d30:	add	x2, x2, #0x124
  403d34:	bl	403488 <ferror@plt+0x9e8>
  403d38:	ldp	x1, x2, [x19, #16]
  403d3c:	cmp	x2, x1
  403d40:	b.ne	403d50 <ferror@plt+0x12b0>  // b.any
  403d44:	ldrb	w0, [x19, #80]
  403d48:	orr	w0, w0, #0x2
  403d4c:	strb	w0, [x19, #80]
  403d50:	ldr	x0, [x19, #48]
  403d54:	ldr	x3, [x19, #8]
  403d58:	add	x2, x2, x0
  403d5c:	bic	x0, x2, x0
  403d60:	ldr	x2, [x19, #32]
  403d64:	sub	x5, x0, x3
  403d68:	sub	x4, x2, x3
  403d6c:	cmp	x5, x4
  403d70:	csel	x0, x0, x2, ls  // ls = plast
  403d74:	stp	x0, x0, [x19, #16]
  403d78:	cmp	x3, x1
  403d7c:	b.cs	403dac <ferror@plt+0x130c>  // b.hs, b.nlast
  403d80:	cmp	x2, x1
  403d84:	b.ls	403dac <ferror@plt+0x130c>  // b.plast
  403d88:	stp	x1, x1, [x19, #16]
  403d8c:	ldp	x19, x20, [sp, #16]
  403d90:	ldp	x21, x22, [sp, #32]
  403d94:	ldp	x23, x24, [sp, #48]
  403d98:	ldr	x25, [sp, #64]
  403d9c:	ldp	x29, x30, [sp], #80
  403da0:	ret
  403da4:	add	x0, x0, #0x1
  403da8:	b	403c90 <ferror@plt+0x11f0>
  403dac:	mov	x0, x19
  403db0:	ldp	x19, x20, [sp, #16]
  403db4:	ldp	x21, x22, [sp, #32]
  403db8:	ldp	x23, x24, [sp, #48]
  403dbc:	ldr	x25, [sp, #64]
  403dc0:	ldp	x29, x30, [sp], #80
  403dc4:	b	414ad0 <_obstack_free@@Base>
  403dc8:	bl	402760 <close@plt>
  403dcc:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  403dd0:	add	x2, x0, #0xda0
  403dd4:	mov	x21, x0
  403dd8:	ldr	x20, [x2, #8]
  403ddc:	ldp	x1, x2, [x19, #24]
  403de0:	sub	x1, x1, #0x1
  403de4:	str	x1, [x19, #24]
  403de8:	sub	x1, x2, x1
  403dec:	cmp	x20, x1
  403df0:	b.ls	403e00 <ferror@plt+0x1360>  // b.plast
  403df4:	mov	x1, x20
  403df8:	mov	x0, x19
  403dfc:	bl	414990 <_obstack_newchunk@@Base>
  403e00:	ldr	x1, [x21, #3488]
  403e04:	mov	x2, x20
  403e08:	ldr	x0, [x19, #24]
  403e0c:	bl	402420 <memcpy@plt>
  403e10:	ldr	x2, [x19, #24]
  403e14:	add	x2, x2, x20
  403e18:	str	x2, [x19, #24]
  403e1c:	b	403d8c <ferror@plt+0x12ec>
  403e20:	ldr	x0, [x0]
  403e24:	ldr	x1, [x1]
  403e28:	ldr	x0, [x0, #16]
  403e2c:	ldr	x1, [x1, #16]
  403e30:	b	402860 <strcmp@plt>
  403e34:	stp	x29, x30, [sp, #-16]!
  403e38:	cmp	w1, #0x0
  403e3c:	mov	x4, x0
  403e40:	mov	x29, sp
  403e44:	csel	w0, w1, wzr, ge  // ge = tcont
  403e48:	cmp	w0, w2
  403e4c:	b.ge	403e84 <ferror@plt+0x13e4>  // b.tcont
  403e50:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403e54:	ldr	w0, [x0, #1672]
  403e58:	cbnz	w0, 403e78 <ferror@plt+0x13d8>
  403e5c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403e60:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  403e64:	ldr	x3, [x4]
  403e68:	add	x2, x2, #0x144
  403e6c:	ldr	w0, [x0, #1660]
  403e70:	mov	w1, #0x0                   	// #0
  403e74:	bl	403488 <ferror@plt+0x9e8>
  403e78:	mov	w0, #0x1                   	// #1
  403e7c:	ldp	x29, x30, [sp], #16
  403e80:	ret
  403e84:	cmp	w3, #0x0
  403e88:	cset	w2, gt
  403e8c:	cmp	w1, w3
  403e90:	cset	w0, gt
  403e94:	ands	w0, w2, w0
  403e98:	b.eq	403e7c <ferror@plt+0x13dc>  // b.none
  403e9c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403ea0:	ldr	w0, [x0, #1672]
  403ea4:	cbnz	w0, 403ec4 <ferror@plt+0x1424>
  403ea8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403eac:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  403eb0:	ldr	x3, [x4]
  403eb4:	add	x2, x2, #0x16f
  403eb8:	ldr	w0, [x0, #1660]
  403ebc:	mov	w1, #0x0                   	// #0
  403ec0:	bl	403488 <ferror@plt+0x9e8>
  403ec4:	mov	w0, #0x0                   	// #0
  403ec8:	b	403e7c <ferror@plt+0x13dc>
  403ecc:	sub	sp, sp, #0x80
  403ed0:	cmp	w1, #0x1
  403ed4:	stp	x29, x30, [sp, #16]
  403ed8:	add	x29, sp, #0x10
  403edc:	stp	x19, x20, [sp, #32]
  403ee0:	stp	x21, x22, [sp, #48]
  403ee4:	mov	w22, w1
  403ee8:	mov	x21, x2
  403eec:	str	x23, [sp, #64]
  403ef0:	b.le	403f64 <ferror@plt+0x14c4>
  403ef4:	ldr	x0, [x2, #8]
  403ef8:	ldr	x19, [x0, #8]
  403efc:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  403f00:	add	x0, x0, #0x1a9
  403f04:	str	x0, [sp, #96]
  403f08:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  403f0c:	add	x0, x0, #0x1a1
  403f10:	str	x0, [sp, #104]
  403f14:	mov	w3, #0x2                   	// #2
  403f18:	ldr	x0, [x21]
  403f1c:	mov	w2, w3
  403f20:	mov	w1, w22
  403f24:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  403f28:	add	x0, x0, #0x8
  403f2c:	add	x20, x20, #0x698
  403f30:	stp	xzr, xzr, [sp, #112]
  403f34:	bl	403e34 <ferror@plt+0x1394>
  403f38:	tst	w0, #0xff
  403f3c:	b.ne	403f48 <ferror@plt+0x14a8>  // b.any
  403f40:	ldrb	w0, [x19]
  403f44:	cbnz	w0, 403f70 <ferror@plt+0x14d0>
  403f48:	str	wzr, [x20, #4]
  403f4c:	ldp	x29, x30, [sp, #16]
  403f50:	ldp	x19, x20, [sp, #32]
  403f54:	ldp	x21, x22, [sp, #48]
  403f58:	ldr	x23, [sp, #64]
  403f5c:	add	sp, sp, #0x80
  403f60:	ret
  403f64:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  403f68:	add	x19, x19, #0x3df
  403f6c:	b	403efc <ferror@plt+0x145c>
  403f70:	bl	407dd8 <ferror@plt+0x5338>
  403f74:	str	x19, [sp, #112]
  403f78:	bl	402a30 <__errno_location@plt>
  403f7c:	str	wzr, [x0]
  403f80:	mov	x23, x0
  403f84:	cmp	w22, #0x0
  403f88:	b.le	403ff8 <ferror@plt+0x1558>
  403f8c:	ldr	x0, [x21]
  403f90:	ldr	x0, [x0, #8]
  403f94:	add	x1, sp, #0x5c
  403f98:	strb	wzr, [sp]
  403f9c:	add	x2, sp, #0x60
  403fa0:	str	x1, [sp, #8]
  403fa4:	mov	w7, #0x1                   	// #1
  403fa8:	mov	w6, #0x0                   	// #0
  403fac:	mov	w5, #0x0                   	// #0
  403fb0:	mov	w4, #0x0                   	// #0
  403fb4:	mov	w3, #0x0                   	// #0
  403fb8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  403fbc:	add	x1, x1, #0x1a4
  403fc0:	bl	40f920 <ferror@plt+0xce80>
  403fc4:	mov	w21, w0
  403fc8:	cmp	w0, #0x7f
  403fcc:	ldr	w0, [sp, #92]
  403fd0:	cbz	w0, 404010 <ferror@plt+0x1570>
  403fd4:	b.eq	404004 <ferror@plt+0x1564>  // b.none
  403fd8:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  403fdc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  403fe0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  403fe4:	add	x3, x3, #0x708
  403fe8:	add	x1, x1, #0x1ac
  403fec:	add	x0, x0, #0x1b6
  403ff0:	mov	w2, #0x3cf                 	// #975
  403ff4:	bl	402a20 <__assert_fail@plt>
  403ff8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  403ffc:	add	x0, x0, #0x3df
  404000:	b	403f94 <ferror@plt+0x14f4>
  404004:	lsl	w0, w0, #8
  404008:	str	w0, [x20, #4]
  40400c:	b	403f4c <ferror@plt+0x14ac>
  404010:	b.ne	404034 <ferror@plt+0x1594>  // b.any
  404014:	ldr	w1, [x23]
  404018:	cbz	w1, 404034 <ferror@plt+0x1594>
  40401c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404020:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404024:	mov	x3, x19
  404028:	add	x2, x2, #0x1c4
  40402c:	ldr	w0, [x0, #1660]
  404030:	bl	403488 <ferror@plt+0x9e8>
  404034:	str	w21, [x20, #4]
  404038:	b	403f4c <ferror@plt+0x14ac>
  40403c:	stp	x29, x30, [sp, #-64]!
  404040:	mov	w3, #0x2                   	// #2
  404044:	mov	x29, sp
  404048:	stp	x19, x20, [sp, #16]
  40404c:	mov	w20, w0
  404050:	mov	x19, x1
  404054:	ldr	x0, [x1]
  404058:	mov	w1, w20
  40405c:	str	x21, [sp, #32]
  404060:	and	w21, w2, #0xff
  404064:	add	x0, x0, #0x8
  404068:	mov	w2, w3
  40406c:	bl	403e34 <ferror@plt+0x1394>
  404070:	tst	w0, #0xff
  404074:	b.ne	4040d4 <ferror@plt+0x1634>  // b.any
  404078:	cmp	w20, #0x1
  40407c:	b.le	4040e4 <ferror@plt+0x1644>
  404080:	ldr	x0, [x19, #8]
  404084:	ldr	x0, [x0, #8]
  404088:	add	x1, sp, #0x38
  40408c:	bl	40dd64 <ferror@plt+0xb2c4>
  404090:	cbnz	x0, 4040fc <ferror@plt+0x165c>
  404094:	cbnz	w21, 4040d4 <ferror@plt+0x1634>
  404098:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40409c:	ldr	w21, [x0, #1660]
  4040a0:	bl	402a30 <__errno_location@plt>
  4040a4:	cmp	w20, #0x1
  4040a8:	ldr	w1, [x0]
  4040ac:	b.le	4040f0 <ferror@plt+0x1650>
  4040b0:	ldr	x0, [x19, #8]
  4040b4:	ldr	x3, [x0, #8]
  4040b8:	mov	w0, w21
  4040bc:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  4040c0:	add	x2, x2, #0x1e
  4040c4:	bl	403488 <ferror@plt+0x9e8>
  4040c8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4040cc:	mov	w1, #0x1                   	// #1
  4040d0:	str	w1, [x0, #3416]
  4040d4:	ldp	x19, x20, [sp, #16]
  4040d8:	ldr	x21, [sp, #32]
  4040dc:	ldp	x29, x30, [sp], #64
  4040e0:	ret
  4040e4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4040e8:	add	x0, x0, #0x3df
  4040ec:	b	404088 <ferror@plt+0x15e8>
  4040f0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4040f4:	add	x3, x3, #0x3df
  4040f8:	b	4040b8 <ferror@plt+0x1618>
  4040fc:	ldr	x1, [sp, #56]
  404100:	mov	w2, #0x1                   	// #1
  404104:	bl	40a754 <ferror@plt+0x7cb4>
  404108:	ldr	x0, [sp, #56]
  40410c:	bl	4028c0 <free@plt>
  404110:	b	4040d4 <ferror@plt+0x1634>
  404114:	mov	w0, w1
  404118:	mov	x1, x2
  40411c:	mov	w2, #0x1                   	// #1
  404120:	b	40403c <ferror@plt+0x159c>
  404124:	mov	w0, w1
  404128:	mov	x1, x2
  40412c:	mov	w2, #0x0                   	// #0
  404130:	b	40403c <ferror@plt+0x159c>
  404134:	cmp	w1, #0x2
  404138:	b.eq	404280 <ferror@plt+0x17e0>  // b.none
  40413c:	stp	x29, x30, [sp, #-64]!
  404140:	mov	w3, #0xffffffff            	// #-1
  404144:	mov	x29, sp
  404148:	stp	x19, x20, [sp, #16]
  40414c:	mov	x20, x2
  404150:	mov	w19, w1
  404154:	stp	x21, x22, [sp, #32]
  404158:	mov	w2, #0x4                   	// #4
  40415c:	mov	x22, x0
  404160:	ldr	x21, [x20]
  404164:	str	x23, [sp, #48]
  404168:	add	x21, x21, #0x8
  40416c:	mov	x0, x21
  404170:	bl	403e34 <ferror@plt+0x1394>
  404174:	tst	w0, #0xff
  404178:	b.ne	404230 <ferror@plt+0x1790>  // b.any
  40417c:	add	w1, w19, #0x2
  404180:	mov	w0, #0x3                   	// #3
  404184:	adrp	x23, 416000 <_obstack_memory_used@@Base+0x14bc>
  404188:	add	x20, x20, #0x8
  40418c:	sub	w19, w19, #0x1
  404190:	add	x23, x23, #0x3df
  404194:	sdiv	w0, w1, w0
  404198:	mov	w3, #0x1                   	// #1
  40419c:	mov	w2, #0xffffffff            	// #-1
  4041a0:	add	w0, w0, w0, lsl #1
  4041a4:	sub	w1, w1, w0
  4041a8:	mov	x0, x21
  4041ac:	bl	403e34 <ferror@plt+0x1394>
  4041b0:	cmp	w19, #0x0
  4041b4:	b.le	404274 <ferror@plt+0x17d4>
  4041b8:	ldr	x0, [x20]
  4041bc:	cmp	w19, #0x1
  4041c0:	ldr	x0, [x0, #8]
  4041c4:	b.eq	404244 <ferror@plt+0x17a4>  // b.none
  4041c8:	ldr	x1, [x20, #8]
  4041cc:	ldr	x1, [x1, #8]
  4041d0:	bl	402860 <strcmp@plt>
  4041d4:	cbnz	w0, 40424c <ferror@plt+0x17ac>
  4041d8:	cmp	w19, #0x2
  4041dc:	b.le	404274 <ferror@plt+0x17d4>
  4041e0:	ldr	x0, [x20, #16]
  4041e4:	ldr	x21, [x0, #8]
  4041e8:	cbz	x21, 4041b0 <ferror@plt+0x1710>
  4041ec:	mov	x0, x21
  4041f0:	bl	402450 <strlen@plt>
  4041f4:	mov	x19, x0
  4041f8:	ldp	x1, x0, [x22, #24]
  4041fc:	sub	x0, x0, x1
  404200:	cmp	x19, x0
  404204:	b.ls	404214 <ferror@plt+0x1774>  // b.plast
  404208:	mov	x1, x19
  40420c:	mov	x0, x22
  404210:	bl	414990 <_obstack_newchunk@@Base>
  404214:	ldr	x0, [x22, #24]
  404218:	mov	x2, x19
  40421c:	mov	x1, x21
  404220:	bl	402420 <memcpy@plt>
  404224:	ldr	x0, [x22, #24]
  404228:	add	x0, x0, x19
  40422c:	str	x0, [x22, #24]
  404230:	ldp	x19, x20, [sp, #16]
  404234:	ldp	x21, x22, [sp, #32]
  404238:	ldr	x23, [sp, #48]
  40423c:	ldp	x29, x30, [sp], #64
  404240:	ret
  404244:	mov	x1, x23
  404248:	b	4041d0 <ferror@plt+0x1730>
  40424c:	cmp	w19, #0x3
  404250:	b.eq	404230 <ferror@plt+0x1790>  // b.none
  404254:	sub	w0, w19, #0x4
  404258:	cmp	w0, #0x1
  40425c:	b.hi	404268 <ferror@plt+0x17c8>  // b.pmore
  404260:	ldr	x0, [x20, #24]
  404264:	b	4041e4 <ferror@plt+0x1744>
  404268:	sub	w19, w19, #0x3
  40426c:	add	x20, x20, #0x18
  404270:	b	4041b0 <ferror@plt+0x1710>
  404274:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  404278:	add	x21, x21, #0x3df
  40427c:	b	4041ec <ferror@plt+0x174c>
  404280:	ret
  404284:	stp	x29, x30, [sp, #-128]!
  404288:	cmp	w1, #0x1
  40428c:	mov	x29, sp
  404290:	stp	x19, x20, [sp, #16]
  404294:	mov	x19, x0
  404298:	stp	x21, x22, [sp, #32]
  40429c:	stp	x23, x24, [sp, #48]
  4042a0:	mov	w24, w1
  4042a4:	mov	x23, x2
  4042a8:	stp	x25, x26, [sp, #64]
  4042ac:	b.le	40431c <ferror@plt+0x187c>
  4042b0:	ldr	x0, [x2, #8]
  4042b4:	ldr	x20, [x0, #8]
  4042b8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4042bc:	add	x0, x0, #0x1a9
  4042c0:	str	x0, [sp, #96]
  4042c4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4042c8:	add	x0, x0, #0x1a1
  4042cc:	str	x0, [sp, #104]
  4042d0:	mov	w3, #0x2                   	// #2
  4042d4:	ldr	x0, [x23]
  4042d8:	mov	w2, w3
  4042dc:	mov	w1, w24
  4042e0:	stp	xzr, xzr, [sp, #112]
  4042e4:	add	x0, x0, #0x8
  4042e8:	bl	403e34 <ferror@plt+0x1394>
  4042ec:	tst	w0, #0xff
  4042f0:	b.ne	4042fc <ferror@plt+0x185c>  // b.any
  4042f4:	ldrb	w0, [x20]
  4042f8:	cbnz	w0, 404328 <ferror@plt+0x1888>
  4042fc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404300:	str	wzr, [x0, #1692]
  404304:	ldp	x19, x20, [sp, #16]
  404308:	ldp	x21, x22, [sp, #32]
  40430c:	ldp	x23, x24, [sp, #48]
  404310:	ldp	x25, x26, [sp, #64]
  404314:	ldp	x29, x30, [sp], #128
  404318:	ret
  40431c:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  404320:	add	x20, x20, #0x3df
  404324:	b	4042b8 <ferror@plt+0x1818>
  404328:	bl	407dd8 <ferror@plt+0x5338>
  40432c:	str	x20, [sp, #112]
  404330:	bl	402a30 <__errno_location@plt>
  404334:	str	wzr, [x0]
  404338:	mov	x21, x0
  40433c:	cmp	w24, #0x0
  404340:	b.le	4043a8 <ferror@plt+0x1908>
  404344:	ldr	x0, [x23]
  404348:	ldr	x0, [x0, #8]
  40434c:	add	x7, sp, #0x58
  404350:	add	x2, sp, #0x60
  404354:	mov	w6, #0x0                   	// #0
  404358:	mov	w5, #0x1                   	// #1
  40435c:	mov	w4, #0x0                   	// #0
  404360:	mov	x3, #0x0                   	// #0
  404364:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  404368:	add	x1, x1, #0x1a4
  40436c:	bl	413190 <ferror@plt+0x106f0>
  404370:	mov	w25, w0
  404374:	cmn	w0, #0x1
  404378:	b.ne	4043b4 <ferror@plt+0x1914>  // b.any
  40437c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404380:	ldr	w1, [x21]
  404384:	mov	x3, x20
  404388:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40438c:	ldr	w0, [x0, #1660]
  404390:	add	x2, x2, #0x1c4
  404394:	bl	403488 <ferror@plt+0x9e8>
  404398:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40439c:	mov	w1, #0x7f                  	// #127
  4043a0:	str	w1, [x0, #1692]
  4043a4:	b	404304 <ferror@plt+0x1864>
  4043a8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4043ac:	add	x0, x0, #0x3df
  4043b0:	b	40434c <ferror@plt+0x18ac>
  4043b4:	ldr	w0, [sp, #88]
  4043b8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4043bc:	add	x1, x1, #0xd0c
  4043c0:	bl	4026b0 <fdopen@plt>
  4043c4:	mov	x22, x0
  4043c8:	cbnz	x0, 40441c <ferror@plt+0x197c>
  4043cc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4043d0:	ldr	w1, [x21]
  4043d4:	mov	x3, x20
  4043d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4043dc:	ldr	w0, [x0, #1660]
  4043e0:	add	x2, x2, #0x1c4
  4043e4:	bl	403488 <ferror@plt+0x9e8>
  4043e8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4043ec:	mov	w1, #0x7f                  	// #127
  4043f0:	str	w1, [x0, #1692]
  4043f4:	ldr	w0, [sp, #88]
  4043f8:	bl	402760 <close@plt>
  4043fc:	b	404304 <ferror@plt+0x1864>
  404400:	mov	x3, x22
  404404:	mov	x1, #0x1                   	// #1
  404408:	bl	4028b0 <fread@plt>
  40440c:	cbz	x0, 404468 <ferror@plt+0x19c8>
  404410:	ldr	x1, [x19, #24]
  404414:	add	x0, x1, x0
  404418:	str	x0, [x19, #24]
  40441c:	ldp	x0, x2, [x19, #24]
  404420:	subs	x2, x2, x0
  404424:	b.ne	404400 <ferror@plt+0x1960>  // b.any
  404428:	mov	x0, x22
  40442c:	bl	402730 <getc@plt>
  404430:	mov	w26, w0
  404434:	cmn	w0, #0x1
  404438:	b.eq	404468 <ferror@plt+0x19c8>  // b.none
  40443c:	ldp	x0, x1, [x19, #24]
  404440:	cmp	x1, x0
  404444:	b.ne	404454 <ferror@plt+0x19b4>  // b.any
  404448:	mov	x0, x19
  40444c:	mov	x1, #0x1                   	// #1
  404450:	bl	414990 <_obstack_newchunk@@Base>
  404454:	ldr	x0, [x19, #24]
  404458:	add	x1, x0, #0x1
  40445c:	str	x1, [x19, #24]
  404460:	strb	w26, [x0]
  404464:	b	40441c <ferror@plt+0x197c>
  404468:	mov	x0, x22
  40446c:	bl	402aa0 <ferror@plt>
  404470:	cbz	w0, 4044f8 <ferror@plt+0x1a58>
  404474:	ldr	w1, [x21]
  404478:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40447c:	mov	w0, #0x1                   	// #1
  404480:	add	x2, x2, #0x1dc
  404484:	bl	403488 <ferror@plt+0x9e8>
  404488:	str	wzr, [x21]
  40448c:	cmp	w24, #0x0
  404490:	b.le	404508 <ferror@plt+0x1a68>
  404494:	ldr	x0, [x23]
  404498:	ldr	x1, [x0, #8]
  40449c:	mov	w4, #0x1                   	// #1
  4044a0:	add	x6, sp, #0x5c
  4044a4:	mov	w3, w4
  4044a8:	mov	w0, w25
  4044ac:	mov	w5, #0x0                   	// #0
  4044b0:	mov	w2, #0x0                   	// #0
  4044b4:	bl	413b70 <ferror@plt+0x110d0>
  4044b8:	mov	w19, w0
  4044bc:	cmp	w0, #0x7f
  4044c0:	ldr	w0, [sp, #92]
  4044c4:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4044c8:	add	x22, x22, #0x698
  4044cc:	cbz	w0, 404520 <ferror@plt+0x1a80>
  4044d0:	b.eq	404514 <ferror@plt+0x1a74>  // b.none
  4044d4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4044d8:	add	x3, x3, #0x708
  4044dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4044e0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4044e4:	add	x3, x3, #0xa
  4044e8:	add	x1, x1, #0x1ac
  4044ec:	add	x0, x0, #0x1b6
  4044f0:	mov	w2, #0x424                 	// #1060
  4044f4:	bl	402a20 <__assert_fail@plt>
  4044f8:	mov	x0, x22
  4044fc:	bl	4144e0 <ferror@plt+0x11a40>
  404500:	cbnz	w0, 404474 <ferror@plt+0x19d4>
  404504:	b	404488 <ferror@plt+0x19e8>
  404508:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  40450c:	add	x1, x1, #0x3df
  404510:	b	40449c <ferror@plt+0x19fc>
  404514:	lsl	w0, w0, #8
  404518:	str	w0, [x22, #4]
  40451c:	b	404304 <ferror@plt+0x1864>
  404520:	b.ne	404544 <ferror@plt+0x1aa4>  // b.any
  404524:	ldr	w1, [x21]
  404528:	cbz	w1, 404544 <ferror@plt+0x1aa4>
  40452c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404530:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404534:	mov	x3, x20
  404538:	add	x2, x2, #0x1c4
  40453c:	ldr	w0, [x0, #1660]
  404540:	bl	403488 <ferror@plt+0x9e8>
  404544:	str	w19, [x22, #4]
  404548:	b	404304 <ferror@plt+0x1864>
  40454c:	stp	x29, x30, [sp, #-16]!
  404550:	mov	w3, #0x1                   	// #1
  404554:	mov	x29, sp
  404558:	ldr	x0, [x2]
  40455c:	mov	w2, w3
  404560:	add	x0, x0, #0x8
  404564:	bl	403e34 <ferror@plt+0x1394>
  404568:	tst	w0, #0xff
  40456c:	b.ne	404578 <ferror@plt+0x1ad8>  // b.any
  404570:	ldp	x29, x30, [sp], #16
  404574:	b	40afc4 <ferror@plt+0x8524>
  404578:	ldp	x29, x30, [sp], #16
  40457c:	ret
  404580:	stp	x29, x30, [sp, #-192]!
  404584:	mov	w3, #0x4                   	// #4
  404588:	mov	x29, sp
  40458c:	stp	x19, x20, [sp, #16]
  404590:	mov	x19, x0
  404594:	ldr	x0, [x2]
  404598:	stp	x21, x22, [sp, #32]
  40459c:	mov	x21, x2
  4045a0:	add	x0, x0, #0x8
  4045a4:	mov	w2, #0x3                   	// #3
  4045a8:	stp	x23, x24, [sp, #48]
  4045ac:	mov	w24, w1
  4045b0:	stp	x25, x26, [sp, #64]
  4045b4:	stp	x27, x28, [sp, #80]
  4045b8:	bl	403e34 <ferror@plt+0x1394>
  4045bc:	tst	w0, #0xff
  4045c0:	b.eq	404634 <ferror@plt+0x1b94>  // b.none
  4045c4:	cmp	w24, #0x2
  4045c8:	b.ne	404618 <ferror@plt+0x1b78>  // b.any
  4045cc:	ldr	x0, [x21, #8]
  4045d0:	ldr	x0, [x0, #8]
  4045d4:	bl	402450 <strlen@plt>
  4045d8:	mov	x20, x0
  4045dc:	ldp	x1, x0, [x19, #24]
  4045e0:	sub	x0, x0, x1
  4045e4:	cmp	x20, x0
  4045e8:	b.ls	4045f8 <ferror@plt+0x1b58>  // b.plast
  4045ec:	mov	x1, x20
  4045f0:	mov	x0, x19
  4045f4:	bl	414990 <_obstack_newchunk@@Base>
  4045f8:	ldr	x0, [x21, #8]
  4045fc:	mov	x2, x20
  404600:	ldr	x1, [x0, #8]
  404604:	ldr	x0, [x19, #24]
  404608:	bl	402420 <memcpy@plt>
  40460c:	ldr	x0, [x19, #24]
  404610:	add	x0, x0, x20
  404614:	str	x0, [x19, #24]
  404618:	ldp	x19, x20, [sp, #16]
  40461c:	ldp	x21, x22, [sp, #32]
  404620:	ldp	x23, x24, [sp, #48]
  404624:	ldp	x25, x26, [sp, #64]
  404628:	ldp	x27, x28, [sp, #80]
  40462c:	ldp	x29, x30, [sp], #192
  404630:	ret
  404634:	ldr	x0, [x21, #16]
  404638:	ldr	x23, [x0, #8]
  40463c:	stp	xzr, xzr, [sp, #112]
  404640:	mov	x0, x23
  404644:	stp	xzr, xzr, [sp, #128]
  404648:	stp	xzr, xzr, [sp, #160]
  40464c:	bl	402450 <strlen@plt>
  404650:	add	x2, sp, #0x80
  404654:	mov	x1, x0
  404658:	mov	x0, x23
  40465c:	bl	4027e0 <re_compile_pattern@plt>
  404660:	mov	x4, x0
  404664:	cbz	x0, 404690 <ferror@plt+0x1bf0>
  404668:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40466c:	mov	x3, x23
  404670:	mov	w1, #0x0                   	// #0
  404674:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404678:	ldr	w0, [x0, #1660]
  40467c:	add	x2, x2, #0x47e
  404680:	bl	403488 <ferror@plt+0x9e8>
  404684:	ldr	x0, [sp, #128]
  404688:	bl	4028c0 <free@plt>
  40468c:	b	404618 <ferror@plt+0x1b78>
  404690:	ldr	x0, [x21, #8]
  404694:	adrp	x27, 416000 <_obstack_memory_used@@Base+0x14bc>
  404698:	add	x27, x27, #0x3df
  40469c:	mov	w20, #0x0                   	// #0
  4046a0:	ldr	x22, [x0, #8]
  4046a4:	mov	x0, x22
  4046a8:	bl	402450 <strlen@plt>
  4046ac:	mov	x25, x0
  4046b0:	mov	w26, w0
  4046b4:	cmp	w20, w26
  4046b8:	b.gt	404704 <ferror@plt+0x1c64>
  4046bc:	sub	w28, w26, w20
  4046c0:	add	x5, sp, #0x68
  4046c4:	mov	w4, w28
  4046c8:	mov	w3, w20
  4046cc:	mov	w2, w26
  4046d0:	mov	x1, x22
  4046d4:	add	x0, sp, #0x80
  4046d8:	bl	402720 <re_search@plt>
  4046dc:	tbz	w0, #31, 404784 <ferror@plt+0x1ce4>
  4046e0:	cmn	w0, #0x2
  4046e4:	b.ne	40473c <ferror@plt+0x1c9c>  // b.any
  4046e8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4046ec:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4046f0:	mov	x3, x23
  4046f4:	add	x2, x2, #0x1ed
  4046f8:	ldr	w0, [x0, #1660]
  4046fc:	mov	w1, #0x0                   	// #0
  404700:	bl	403488 <ferror@plt+0x9e8>
  404704:	ldp	x0, x1, [x19, #24]
  404708:	cmp	x1, x0
  40470c:	b.ne	40471c <ferror@plt+0x1c7c>  // b.any
  404710:	mov	x0, x19
  404714:	mov	x1, #0x1                   	// #1
  404718:	bl	414990 <_obstack_newchunk@@Base>
  40471c:	ldr	x0, [x19, #24]
  404720:	add	x1, x0, #0x1
  404724:	str	x1, [x19, #24]
  404728:	strb	wzr, [x0]
  40472c:	add	x1, sp, #0x68
  404730:	add	x0, sp, #0x80
  404734:	bl	403bb8 <ferror@plt+0x1118>
  404738:	b	404618 <ferror@plt+0x1b78>
  40473c:	cmp	w20, w25
  404740:	b.ge	404704 <ferror@plt+0x1c64>  // b.tcont
  404744:	ldp	x1, x0, [x19, #24]
  404748:	sxtw	x21, w28
  40474c:	sub	x0, x0, x1
  404750:	cmp	x0, w28, sxtw
  404754:	b.cs	404764 <ferror@plt+0x1cc4>  // b.hs, b.nlast
  404758:	mov	x1, x21
  40475c:	mov	x0, x19
  404760:	bl	414990 <_obstack_newchunk@@Base>
  404764:	ldr	x0, [x19, #24]
  404768:	mov	x2, x21
  40476c:	add	x1, x22, w20, sxtw
  404770:	bl	402420 <memcpy@plt>
  404774:	ldr	x0, [x19, #24]
  404778:	add	x0, x0, x21
  40477c:	str	x0, [x19, #24]
  404780:	b	404704 <ferror@plt+0x1c64>
  404784:	cmp	w20, w0
  404788:	b.ge	4047cc <ferror@plt+0x1d2c>  // b.tcont
  40478c:	ldp	x2, x1, [x19, #24]
  404790:	sub	w0, w0, w20
  404794:	sxtw	x28, w0
  404798:	sub	x1, x1, x2
  40479c:	cmp	x1, w0, sxtw
  4047a0:	b.cs	4047b0 <ferror@plt+0x1d10>  // b.hs, b.nlast
  4047a4:	mov	x1, x28
  4047a8:	mov	x0, x19
  4047ac:	bl	414990 <_obstack_newchunk@@Base>
  4047b0:	ldr	x0, [x19, #24]
  4047b4:	mov	x2, x28
  4047b8:	add	x1, x22, w20, sxtw
  4047bc:	bl	402420 <memcpy@plt>
  4047c0:	ldr	x0, [x19, #24]
  4047c4:	add	x0, x0, x28
  4047c8:	str	x0, [x19, #24]
  4047cc:	cmp	w24, #0x3
  4047d0:	b.le	404838 <ferror@plt+0x1d98>
  4047d4:	ldr	x0, [x21, #24]
  4047d8:	ldr	x2, [x0, #8]
  4047dc:	mov	x0, x19
  4047e0:	add	x3, sp, #0x68
  4047e4:	mov	x1, x22
  4047e8:	bl	403930 <ferror@plt+0xe90>
  4047ec:	ldr	x0, [sp, #120]
  4047f0:	ldr	w20, [x0]
  4047f4:	ldr	x0, [sp, #112]
  4047f8:	ldr	w0, [x0]
  4047fc:	cmp	w0, w20
  404800:	b.ne	4046b4 <ferror@plt+0x1c14>  // b.any
  404804:	ldp	x0, x1, [x19, #24]
  404808:	cmp	x1, x0
  40480c:	b.ne	40481c <ferror@plt+0x1d7c>  // b.any
  404810:	mov	x0, x19
  404814:	mov	x1, #0x1                   	// #1
  404818:	bl	414990 <_obstack_newchunk@@Base>
  40481c:	ldr	x0, [x19, #24]
  404820:	add	x1, x0, #0x1
  404824:	str	x1, [x19, #24]
  404828:	ldrb	w1, [x22, w20, sxtw]
  40482c:	add	w20, w20, #0x1
  404830:	strb	w1, [x0]
  404834:	b	4046b4 <ferror@plt+0x1c14>
  404838:	mov	x2, x27
  40483c:	b	4047dc <ferror@plt+0x1d3c>
  404840:	stp	x29, x30, [sp, #-80]!
  404844:	cmp	w1, #0x1
  404848:	mov	x29, sp
  40484c:	stp	x19, x20, [sp, #16]
  404850:	stp	x21, x22, [sp, #32]
  404854:	stp	x23, x24, [sp, #48]
  404858:	b.ne	404960 <ferror@plt+0x1ec0>  // b.any
  40485c:	bl	40d9d4 <ferror@plt+0xaf34>
  404860:	ldp	x19, x20, [sp, #16]
  404864:	ldp	x21, x22, [sp, #32]
  404868:	ldp	x23, x24, [sp, #48]
  40486c:	ldp	x29, x30, [sp], #80
  404870:	ret
  404874:	ldr	x0, [x20, x19, lsl #3]
  404878:	add	x1, sp, #0x48
  40487c:	mov	w2, #0xa                   	// #10
  404880:	ldr	x0, [x0, #8]
  404884:	bl	402890 <strtol@plt>
  404888:	mov	x22, x0
  40488c:	ldr	x0, [sp, #72]
  404890:	ldrb	w0, [x0]
  404894:	cbnz	w0, 4048cc <ferror@plt+0x1e2c>
  404898:	bl	402870 <__ctype_b_loc@plt>
  40489c:	ldr	x1, [x20, x19, lsl #3]
  4048a0:	ldr	x0, [x0]
  4048a4:	ldr	x1, [x1, #8]
  4048a8:	ldrb	w1, [x1]
  4048ac:	ldrh	w0, [x0, x1, lsl #1]
  4048b0:	tbnz	w0, #13, 4048cc <ferror@plt+0x1e2c>
  4048b4:	mov	w0, w22
  4048b8:	bl	40d96c <ferror@plt+0xaecc>
  4048bc:	add	x19, x19, #0x1
  4048c0:	cmp	w23, w19
  4048c4:	b.gt	404874 <ferror@plt+0x1dd4>
  4048c8:	b	404860 <ferror@plt+0x1dc0>
  4048cc:	ldr	w0, [x24]
  4048d0:	cbz	w0, 4048f4 <ferror@plt+0x1e54>
  4048d4:	ldr	x0, [x20]
  4048d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4048dc:	add	x2, x2, #0x214
  4048e0:	mov	w1, #0x0                   	// #0
  4048e4:	ldr	x3, [x0, #8]
  4048e8:	ldr	w0, [x21]
  4048ec:	bl	403488 <ferror@plt+0x9e8>
  4048f0:	b	4048bc <ferror@plt+0x1e1c>
  4048f4:	ldr	x0, [x20, x19, lsl #3]
  4048f8:	mov	x1, #0x0                   	// #0
  4048fc:	ldr	x0, [x0, #8]
  404900:	bl	40dd64 <ferror@plt+0xb2c4>
  404904:	mov	x22, x0
  404908:	cbz	x0, 404944 <ferror@plt+0x1ea4>
  40490c:	bl	40d648 <ferror@plt+0xaba8>
  404910:	mov	x0, x22
  404914:	bl	4144e0 <ferror@plt+0x11a40>
  404918:	cmn	w0, #0x1
  40491c:	b.ne	4048bc <ferror@plt+0x1e1c>  // b.any
  404920:	bl	402a30 <__errno_location@plt>
  404924:	ldr	w22, [x21]
  404928:	ldr	x1, [x20, x19, lsl #3]
  40492c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404930:	add	x2, x2, #0x239
  404934:	ldr	x3, [x1, #8]
  404938:	ldr	w1, [x0]
  40493c:	mov	w0, w22
  404940:	b	4048ec <ferror@plt+0x1e4c>
  404944:	bl	402a30 <__errno_location@plt>
  404948:	ldr	w22, [x21]
  40494c:	ldr	x1, [x20, x19, lsl #3]
  404950:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404954:	add	x2, x2, #0x250
  404958:	ldr	x3, [x1, #8]
  40495c:	b	404938 <ferror@plt+0x1e98>
  404960:	adrp	x24, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404964:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404968:	mov	w23, w1
  40496c:	mov	x20, x2
  404970:	add	x24, x24, #0x680
  404974:	add	x21, x21, #0x67c
  404978:	mov	x19, #0x1                   	// #1
  40497c:	b	4048c0 <ferror@plt+0x1e20>
  404980:	stp	x29, x30, [sp, #-64]!
  404984:	mov	x29, sp
  404988:	stp	x19, x20, [sp, #16]
  40498c:	mov	x19, x0
  404990:	stp	x21, x22, [sp, #32]
  404994:	mov	x22, x2
  404998:	ldrb	w0, [x1]
  40499c:	cbnz	w0, 4049c8 <ferror@plt+0x1f28>
  4049a0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4049a4:	add	x2, x2, #0x265
  4049a8:	ldr	x3, [x19]
  4049ac:	str	wzr, [x22]
  4049b0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4049b4:	mov	w1, #0x0                   	// #0
  4049b8:	ldr	w0, [x0, #1660]
  4049bc:	bl	403488 <ferror@plt+0x9e8>
  4049c0:	mov	w0, #0x1                   	// #1
  4049c4:	b	404a18 <ferror@plt+0x1f78>
  4049c8:	mov	x20, x1
  4049cc:	bl	402a30 <__errno_location@plt>
  4049d0:	mov	x21, x0
  4049d4:	add	x1, sp, #0x38
  4049d8:	mov	x0, x20
  4049dc:	mov	w2, #0xa                   	// #10
  4049e0:	str	wzr, [x21]
  4049e4:	bl	402890 <strtol@plt>
  4049e8:	str	w0, [x22]
  4049ec:	ldr	x0, [sp, #56]
  4049f0:	ldrb	w0, [x0]
  4049f4:	cbz	w0, 404a28 <ferror@plt+0x1f88>
  4049f8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4049fc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404a00:	ldr	x3, [x19]
  404a04:	add	x2, x2, #0x214
  404a08:	ldr	w0, [x0, #1660]
  404a0c:	mov	w1, #0x0                   	// #0
  404a10:	bl	403488 <ferror@plt+0x9e8>
  404a14:	mov	w0, #0x0                   	// #0
  404a18:	ldp	x19, x20, [sp, #16]
  404a1c:	ldp	x21, x22, [sp, #32]
  404a20:	ldp	x29, x30, [sp], #64
  404a24:	ret
  404a28:	bl	402870 <__ctype_b_loc@plt>
  404a2c:	ldrb	w1, [x20]
  404a30:	ldr	x0, [x0]
  404a34:	ldrh	w0, [x0, x1, lsl #1]
  404a38:	tbz	w0, #13, 404a4c <ferror@plt+0x1fac>
  404a3c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404a40:	add	x2, x2, #0x28f
  404a44:	ldr	x3, [x19]
  404a48:	b	4049b0 <ferror@plt+0x1f10>
  404a4c:	ldr	w0, [x21]
  404a50:	cmp	w0, #0x22
  404a54:	b.ne	4049c0 <ferror@plt+0x1f20>  // b.any
  404a58:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404a5c:	add	x2, x2, #0x2ba
  404a60:	ldr	x3, [x19]
  404a64:	b	4049b0 <ferror@plt+0x1f10>
  404a68:	stp	x29, x30, [sp, #-64]!
  404a6c:	mov	w3, #0x4                   	// #4
  404a70:	mov	x29, sp
  404a74:	stp	x19, x20, [sp, #16]
  404a78:	mov	x19, x0
  404a7c:	mov	x20, x2
  404a80:	ldr	x0, [x2]
  404a84:	mov	w2, #0x3                   	// #3
  404a88:	stp	x21, x22, [sp, #32]
  404a8c:	mov	w22, w1
  404a90:	add	x0, x0, #0x8
  404a94:	str	wzr, [sp, #56]
  404a98:	bl	403e34 <ferror@plt+0x1394>
  404a9c:	tst	w0, #0xff
  404aa0:	b.eq	404b08 <ferror@plt+0x2068>  // b.none
  404aa4:	cmp	w22, #0x2
  404aa8:	b.ne	404af8 <ferror@plt+0x2058>  // b.any
  404aac:	ldr	x0, [x20, #8]
  404ab0:	ldr	x0, [x0, #8]
  404ab4:	bl	402450 <strlen@plt>
  404ab8:	mov	x21, x0
  404abc:	ldp	x1, x0, [x19, #24]
  404ac0:	sub	x0, x0, x1
  404ac4:	cmp	x21, x0
  404ac8:	b.ls	404ad8 <ferror@plt+0x2038>  // b.plast
  404acc:	mov	x1, x21
  404ad0:	mov	x0, x19
  404ad4:	bl	414990 <_obstack_newchunk@@Base>
  404ad8:	ldr	x0, [x20, #8]
  404adc:	mov	x2, x21
  404ae0:	ldr	x1, [x0, #8]
  404ae4:	ldr	x0, [x19, #24]
  404ae8:	bl	402420 <memcpy@plt>
  404aec:	ldr	x0, [x19, #24]
  404af0:	add	x0, x0, x21
  404af4:	str	x0, [x19, #24]
  404af8:	ldp	x19, x20, [sp, #16]
  404afc:	ldp	x21, x22, [sp, #32]
  404b00:	ldp	x29, x30, [sp], #64
  404b04:	ret
  404b08:	cmp	w22, #0x1
  404b0c:	b.le	404bd8 <ferror@plt+0x2138>
  404b10:	ldr	x0, [x20, #8]
  404b14:	ldr	x0, [x0, #8]
  404b18:	bl	402450 <strlen@plt>
  404b1c:	mov	x21, x0
  404b20:	str	w21, [sp, #60]
  404b24:	cmp	w22, #0x2
  404b28:	ldr	x0, [x20]
  404b2c:	b.le	404be4 <ferror@plt+0x2144>
  404b30:	ldr	x1, [x20, #16]
  404b34:	ldr	x1, [x1, #8]
  404b38:	add	x2, sp, #0x38
  404b3c:	add	x0, x0, #0x8
  404b40:	bl	404980 <ferror@plt+0x1ee0>
  404b44:	tst	w0, #0xff
  404b48:	b.eq	404af8 <ferror@plt+0x2058>  // b.none
  404b4c:	cmp	w22, #0x3
  404b50:	b.gt	404bf0 <ferror@plt+0x2150>
  404b54:	ldr	w0, [sp, #56]
  404b58:	tbnz	w0, #31, 404af8 <ferror@plt+0x2058>
  404b5c:	ldr	w1, [sp, #60]
  404b60:	cmp	w1, #0x0
  404b64:	b.le	404af8 <ferror@plt+0x2058>
  404b68:	cmp	w0, w21
  404b6c:	b.ge	404af8 <ferror@plt+0x2058>  // b.tcont
  404b70:	add	w1, w0, w1
  404b74:	cmp	w1, w21
  404b78:	b.le	404b84 <ferror@plt+0x20e4>
  404b7c:	sub	w21, w21, w0
  404b80:	str	w21, [sp, #60]
  404b84:	ldp	x1, x0, [x19, #24]
  404b88:	ldrsw	x21, [sp, #60]
  404b8c:	sub	x0, x0, x1
  404b90:	cmp	x21, x0
  404b94:	b.ls	404ba4 <ferror@plt+0x2104>  // b.plast
  404b98:	mov	x1, x21
  404b9c:	mov	x0, x19
  404ba0:	bl	414990 <_obstack_newchunk@@Base>
  404ba4:	cmp	w22, #0x1
  404ba8:	ldr	x0, [x19, #24]
  404bac:	b.le	404c14 <ferror@plt+0x2174>
  404bb0:	ldr	x1, [x20, #8]
  404bb4:	ldr	x1, [x1, #8]
  404bb8:	mov	x2, x21
  404bbc:	ldrsw	x3, [sp, #56]
  404bc0:	add	x1, x1, x3
  404bc4:	bl	402420 <memcpy@plt>
  404bc8:	ldr	x2, [x19, #24]
  404bcc:	add	x2, x2, x21
  404bd0:	str	x2, [x19, #24]
  404bd4:	b	404af8 <ferror@plt+0x2058>
  404bd8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  404bdc:	add	x0, x0, #0x3df
  404be0:	b	404b18 <ferror@plt+0x2078>
  404be4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  404be8:	add	x1, x1, #0x3df
  404bec:	b	404b38 <ferror@plt+0x2098>
  404bf0:	ldr	x1, [x20, #24]
  404bf4:	add	x2, sp, #0x3c
  404bf8:	ldr	x0, [x20]
  404bfc:	ldr	x1, [x1, #8]
  404c00:	add	x0, x0, #0x8
  404c04:	bl	404980 <ferror@plt+0x1ee0>
  404c08:	tst	w0, #0xff
  404c0c:	b.ne	404b54 <ferror@plt+0x20b4>  // b.any
  404c10:	b	404af8 <ferror@plt+0x2058>
  404c14:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  404c18:	add	x1, x1, #0x3df
  404c1c:	b	404bb8 <ferror@plt+0x2118>
  404c20:	stp	x29, x30, [sp, #-48]!
  404c24:	mov	w3, #0x2                   	// #2
  404c28:	mov	x29, sp
  404c2c:	ldr	x0, [x2]
  404c30:	stp	x19, x20, [sp, #16]
  404c34:	mov	w20, w1
  404c38:	mov	x19, x2
  404c3c:	add	x0, x0, #0x8
  404c40:	mov	w2, #0x1                   	// #1
  404c44:	str	wzr, [sp, #44]
  404c48:	bl	403e34 <ferror@plt+0x1394>
  404c4c:	cmp	w20, #0x1
  404c50:	b.le	404c78 <ferror@plt+0x21d8>
  404c54:	ldp	x0, x1, [x19]
  404c58:	add	x2, sp, #0x2c
  404c5c:	ldr	x1, [x1, #8]
  404c60:	add	x0, x0, #0x8
  404c64:	bl	404980 <ferror@plt+0x1ee0>
  404c68:	tst	w0, #0xff
  404c6c:	b.ne	404c78 <ferror@plt+0x21d8>  // b.any
  404c70:	mov	w0, #0x1                   	// #1
  404c74:	str	w0, [sp, #44]
  404c78:	ldr	w3, [sp, #44]
  404c7c:	cmp	w3, #0xff
  404c80:	b.ls	404ca4 <ferror@plt+0x2204>  // b.plast
  404c84:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404c88:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  404c8c:	mov	w1, #0x0                   	// #0
  404c90:	add	x2, x2, #0x2e4
  404c94:	ldr	w0, [x0, #1660]
  404c98:	bl	403488 <ferror@plt+0x9e8>
  404c9c:	mov	w0, #0x1                   	// #1
  404ca0:	str	w0, [sp, #44]
  404ca4:	mov	x0, #0x0                   	// #0
  404ca8:	bl	407e6c <ferror@plt+0x53cc>
  404cac:	bl	407dd8 <ferror@plt+0x5338>
  404cb0:	ldr	w0, [sp, #44]
  404cb4:	cbnz	w0, 404cc8 <ferror@plt+0x2228>
  404cb8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  404cbc:	ldr	w0, [x0, #3416]
  404cc0:	cbz	w0, 404cc8 <ferror@plt+0x2228>
  404cc4:	str	w0, [sp, #44]
  404cc8:	ldr	w0, [sp, #44]
  404ccc:	cbz	w0, 404cd8 <ferror@plt+0x2238>
  404cd0:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  404cd4:	str	w0, [x1, #884]
  404cd8:	bl	402480 <exit@plt>
  404cdc:	stp	x29, x30, [sp, #-48]!
  404ce0:	mov	w3, #0x2                   	// #2
  404ce4:	mov	x29, sp
  404ce8:	ldr	x0, [x2]
  404cec:	stp	x19, x20, [sp, #16]
  404cf0:	mov	w20, w1
  404cf4:	mov	x19, x2
  404cf8:	add	x0, x0, #0x8
  404cfc:	mov	w2, #0x1                   	// #1
  404d00:	str	wzr, [sp, #44]
  404d04:	bl	403e34 <ferror@plt+0x1394>
  404d08:	tst	w0, #0xff
  404d0c:	b.ne	404d20 <ferror@plt+0x2280>  // b.any
  404d10:	cmp	w20, #0x1
  404d14:	b.gt	404d2c <ferror@plt+0x228c>
  404d18:	ldr	w0, [sp, #44]
  404d1c:	bl	40d3fc <ferror@plt+0xa95c>
  404d20:	ldp	x19, x20, [sp, #16]
  404d24:	ldp	x29, x30, [sp], #48
  404d28:	ret
  404d2c:	ldp	x0, x1, [x19]
  404d30:	add	x2, sp, #0x2c
  404d34:	ldr	x1, [x1, #8]
  404d38:	add	x0, x0, #0x8
  404d3c:	bl	404980 <ferror@plt+0x1ee0>
  404d40:	tst	w0, #0xff
  404d44:	b.ne	404d18 <ferror@plt+0x2278>  // b.any
  404d48:	b	404d20 <ferror@plt+0x2280>
  404d4c:	stp	x29, x30, [sp, #-48]!
  404d50:	mov	w3, #0xffffffff            	// #-1
  404d54:	mov	x29, sp
  404d58:	ldr	x0, [x2]
  404d5c:	stp	x19, x20, [sp, #16]
  404d60:	mov	x20, x2
  404d64:	add	x0, x0, #0x8
  404d68:	mov	w2, #0x2                   	// #2
  404d6c:	str	x21, [sp, #32]
  404d70:	mov	w21, w1
  404d74:	bl	403e34 <ferror@plt+0x1394>
  404d78:	tst	w0, #0xff
  404d7c:	b.eq	404db0 <ferror@plt+0x2310>  // b.none
  404d80:	ldp	x19, x20, [sp, #16]
  404d84:	ldr	x21, [sp, #32]
  404d88:	ldp	x29, x30, [sp], #48
  404d8c:	ret
  404d90:	ldr	x0, [x20, x19, lsl #3]
  404d94:	mov	w1, #0x2                   	// #2
  404d98:	ldr	x0, [x0, #8]
  404d9c:	bl	40df50 <ferror@plt+0xb4b0>
  404da0:	add	x19, x19, #0x1
  404da4:	cmp	w21, w19
  404da8:	b.gt	404d90 <ferror@plt+0x22f0>
  404dac:	b	404d80 <ferror@plt+0x22e0>
  404db0:	mov	x19, #0x0                   	// #0
  404db4:	b	404da0 <ferror@plt+0x2300>
  404db8:	ldrb	w2, [x0, #8]
  404dbc:	cmp	x1, #0x0
  404dc0:	cset	w3, ne  // ne = any
  404dc4:	bfxil	w2, w3, #0, #1
  404dc8:	strb	w2, [x0, #8]
  404dcc:	ldr	w2, [x0, #24]
  404dd0:	cbnz	w2, 404de4 <ferror@plt+0x2344>
  404dd4:	cbnz	x1, 404de4 <ferror@plt+0x2344>
  404dd8:	ldr	x0, [x0, #16]
  404ddc:	mov	w1, #0x4                   	// #4
  404de0:	b	40df50 <ferror@plt+0xb4b0>
  404de4:	ret
  404de8:	stp	x29, x30, [sp, #-48]!
  404dec:	mov	w3, #0xffffffff            	// #-1
  404df0:	mov	x29, sp
  404df4:	ldr	x0, [x2]
  404df8:	stp	x19, x20, [sp, #16]
  404dfc:	mov	x20, x2
  404e00:	add	x0, x0, #0x8
  404e04:	mov	w2, #0x2                   	// #2
  404e08:	str	x21, [sp, #32]
  404e0c:	mov	w21, w1
  404e10:	bl	403e34 <ferror@plt+0x1394>
  404e14:	tst	w0, #0xff
  404e18:	b.eq	404e4c <ferror@plt+0x23ac>  // b.none
  404e1c:	ldp	x19, x20, [sp, #16]
  404e20:	ldr	x21, [sp, #32]
  404e24:	ldp	x29, x30, [sp], #48
  404e28:	ret
  404e2c:	ldr	x0, [x20, x19, lsl #3]
  404e30:	mov	w1, #0x4                   	// #4
  404e34:	ldr	x0, [x0, #8]
  404e38:	bl	40df50 <ferror@plt+0xb4b0>
  404e3c:	add	x19, x19, #0x1
  404e40:	cmp	w21, w19
  404e44:	b.gt	404e2c <ferror@plt+0x238c>
  404e48:	b	404e1c <ferror@plt+0x237c>
  404e4c:	mov	x19, #0x0                   	// #0
  404e50:	b	404e3c <ferror@plt+0x239c>
  404e54:	stp	x29, x30, [sp, #-48]!
  404e58:	mov	w3, #0xffffffff            	// #-1
  404e5c:	mov	x29, sp
  404e60:	stp	x19, x20, [sp, #16]
  404e64:	mov	x20, x0
  404e68:	mov	x19, x2
  404e6c:	ldr	x0, [x2]
  404e70:	mov	w2, #0x2                   	// #2
  404e74:	str	x21, [sp, #32]
  404e78:	mov	w21, w1
  404e7c:	add	x0, x0, #0x8
  404e80:	bl	403e34 <ferror@plt+0x1394>
  404e84:	tst	w0, #0xff
  404e88:	b.ne	404eb4 <ferror@plt+0x2414>  // b.any
  404e8c:	add	x2, x19, #0x8
  404e90:	sub	w1, w21, #0x1
  404e94:	mov	x0, x20
  404e98:	mov	w4, #0x1                   	// #1
  404e9c:	ldp	x19, x20, [sp, #16]
  404ea0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  404ea4:	ldr	x21, [sp, #32]
  404ea8:	add	x3, x3, #0x303
  404eac:	ldp	x29, x30, [sp], #48
  404eb0:	b	4037a8 <ferror@plt+0xd08>
  404eb4:	ldp	x19, x20, [sp, #16]
  404eb8:	ldr	x21, [sp, #32]
  404ebc:	ldp	x29, x30, [sp], #48
  404ec0:	ret
  404ec4:	stp	x29, x30, [sp, #-48]!
  404ec8:	mov	w3, #0x4                   	// #4
  404ecc:	mov	x29, sp
  404ed0:	stp	x19, x20, [sp, #16]
  404ed4:	mov	x19, x0
  404ed8:	mov	x20, x2
  404edc:	ldr	x0, [x2]
  404ee0:	mov	w2, #0x3                   	// #3
  404ee4:	str	x21, [sp, #32]
  404ee8:	mov	w21, w1
  404eec:	add	x0, x0, #0x8
  404ef0:	bl	403e34 <ferror@plt+0x1394>
  404ef4:	tst	w0, #0xff
  404ef8:	b.ne	404f34 <ferror@plt+0x2494>  // b.any
  404efc:	cmp	w21, #0x1
  404f00:	b.le	404f44 <ferror@plt+0x24a4>
  404f04:	ldr	x0, [x20, #8]
  404f08:	ldr	x0, [x0, #8]
  404f0c:	mov	w1, #0x0                   	// #0
  404f10:	bl	40df50 <ferror@plt+0xb4b0>
  404f14:	cbz	x0, 404f50 <ferror@plt+0x24b0>
  404f18:	ldr	w0, [x0, #24]
  404f1c:	cbz	w0, 404f50 <ferror@plt+0x24b0>
  404f20:	cmp	w21, #0x2
  404f24:	b.le	404f60 <ferror@plt+0x24c0>
  404f28:	ldr	x0, [x20, #16]
  404f2c:	ldr	x20, [x0, #8]
  404f30:	cbnz	x20, 404f68 <ferror@plt+0x24c8>
  404f34:	ldp	x19, x20, [sp, #16]
  404f38:	ldr	x21, [sp, #32]
  404f3c:	ldp	x29, x30, [sp], #48
  404f40:	ret
  404f44:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  404f48:	add	x0, x0, #0x3df
  404f4c:	b	404f0c <ferror@plt+0x246c>
  404f50:	cmp	w21, #0x3
  404f54:	b.le	404f34 <ferror@plt+0x2494>
  404f58:	ldr	x0, [x20, #24]
  404f5c:	b	404f2c <ferror@plt+0x248c>
  404f60:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  404f64:	add	x20, x20, #0x3df
  404f68:	mov	x0, x20
  404f6c:	bl	402450 <strlen@plt>
  404f70:	mov	x21, x0
  404f74:	ldp	x1, x0, [x19, #24]
  404f78:	sub	x0, x0, x1
  404f7c:	cmp	x21, x0
  404f80:	b.ls	404f90 <ferror@plt+0x24f0>  // b.plast
  404f84:	mov	x1, x21
  404f88:	mov	x0, x19
  404f8c:	bl	414990 <_obstack_newchunk@@Base>
  404f90:	ldr	x0, [x19, #24]
  404f94:	mov	x2, x21
  404f98:	mov	x1, x20
  404f9c:	bl	402420 <memcpy@plt>
  404fa0:	ldr	x0, [x19, #24]
  404fa4:	add	x0, x0, x21
  404fa8:	str	x0, [x19, #24]
  404fac:	b	404f34 <ferror@plt+0x2494>
  404fb0:	stp	x29, x30, [sp, #-48]!
  404fb4:	mov	x29, sp
  404fb8:	stp	x19, x20, [sp, #16]
  404fbc:	mov	x20, x0
  404fc0:	ldrb	w0, [x0, #8]
  404fc4:	str	x21, [sp, #32]
  404fc8:	tbnz	w0, #1, 405020 <ferror@plt+0x2580>
  404fcc:	ldr	w0, [x20, #24]
  404fd0:	cbz	w0, 405020 <ferror@plt+0x2580>
  404fd4:	ldr	x21, [x1]
  404fd8:	mov	x19, x1
  404fdc:	ldp	x1, x0, [x21, #24]
  404fe0:	sub	x0, x0, x1
  404fe4:	cmp	x0, #0x7
  404fe8:	b.hi	404ff8 <ferror@plt+0x2558>  // b.pmore
  404fec:	mov	x0, x21
  404ff0:	mov	x1, #0x8                   	// #8
  404ff4:	bl	414990 <_obstack_newchunk@@Base>
  404ff8:	ldr	x0, [x21, #24]
  404ffc:	ldr	w1, [x19, #16]
  405000:	add	x0, x0, #0x8
  405004:	str	x0, [x21, #24]
  405008:	ldr	x0, [x19]
  40500c:	add	w2, w1, #0x1
  405010:	ldr	x0, [x0, #16]
  405014:	str	x0, [x19, #8]
  405018:	str	w2, [x19, #16]
  40501c:	str	x20, [x0, w1, sxtw #3]
  405020:	ldp	x19, x20, [sp, #16]
  405024:	ldr	x21, [sp, #32]
  405028:	ldp	x29, x30, [sp], #48
  40502c:	ret
  405030:	stp	x29, x30, [sp, #-48]!
  405034:	mov	w3, #0x1                   	// #1
  405038:	mov	x29, sp
  40503c:	stp	x19, x20, [sp, #16]
  405040:	mov	x19, x0
  405044:	ldr	x0, [x2]
  405048:	mov	w2, w3
  40504c:	stp	x21, x22, [sp, #32]
  405050:	add	x0, x0, #0x8
  405054:	bl	403e34 <ferror@plt+0x1394>
  405058:	tst	w0, #0xff
  40505c:	b.ne	405138 <ferror@plt+0x2698>  // b.any
  405060:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  405064:	add	x1, x0, #0xd68
  405068:	mov	x21, x0
  40506c:	ldr	x20, [x1, #8]
  405070:	ldp	x2, x1, [x19, #24]
  405074:	sub	x1, x1, x2
  405078:	cmp	x20, x1
  40507c:	b.ls	40508c <ferror@plt+0x25ec>  // b.plast
  405080:	mov	x1, x20
  405084:	mov	x0, x19
  405088:	bl	414990 <_obstack_newchunk@@Base>
  40508c:	ldr	x1, [x21, #3432]
  405090:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  405094:	ldr	x0, [x19, #24]
  405098:	mov	x2, x20
  40509c:	bl	402420 <memcpy@plt>
  4050a0:	ldr	x22, [x19, #24]
  4050a4:	ldr	x0, [x21, #2816]
  4050a8:	add	x22, x22, x20
  4050ac:	str	x22, [x19, #24]
  4050b0:	bl	402450 <strlen@plt>
  4050b4:	mov	x20, x0
  4050b8:	ldr	x2, [x19, #32]
  4050bc:	sub	x22, x2, x22
  4050c0:	cmp	x0, x22
  4050c4:	b.ls	4050d4 <ferror@plt+0x2634>  // b.plast
  4050c8:	mov	x1, x0
  4050cc:	mov	x0, x19
  4050d0:	bl	414990 <_obstack_newchunk@@Base>
  4050d4:	ldr	x1, [x21, #2816]
  4050d8:	mov	x2, x20
  4050dc:	ldr	x0, [x19, #24]
  4050e0:	bl	402420 <memcpy@plt>
  4050e4:	ldr	x2, [x19, #24]
  4050e8:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4050ec:	add	x0, x1, #0xda0
  4050f0:	add	x20, x2, x20
  4050f4:	str	x20, [x19, #24]
  4050f8:	ldr	x2, [x19, #32]
  4050fc:	ldr	x21, [x0, #8]
  405100:	sub	x20, x2, x20
  405104:	cmp	x21, x20
  405108:	mov	x20, x1
  40510c:	b.ls	40511c <ferror@plt+0x267c>  // b.plast
  405110:	mov	x1, x21
  405114:	mov	x0, x19
  405118:	bl	414990 <_obstack_newchunk@@Base>
  40511c:	ldr	x1, [x20, #3488]
  405120:	mov	x2, x21
  405124:	ldr	x0, [x19, #24]
  405128:	bl	402420 <memcpy@plt>
  40512c:	ldr	x2, [x19, #24]
  405130:	add	x2, x2, x21
  405134:	str	x2, [x19, #24]
  405138:	ldp	x19, x20, [sp, #16]
  40513c:	ldp	x21, x22, [sp, #32]
  405140:	ldp	x29, x30, [sp], #48
  405144:	ret
  405148:	stp	x29, x30, [sp, #-48]!
  40514c:	mov	w3, #0x1                   	// #1
  405150:	mov	x29, sp
  405154:	stp	x19, x20, [sp, #16]
  405158:	mov	x19, x0
  40515c:	ldr	x0, [x2]
  405160:	mov	w2, w3
  405164:	stp	x21, x22, [sp, #32]
  405168:	add	x0, x0, #0x8
  40516c:	bl	403e34 <ferror@plt+0x1394>
  405170:	tst	w0, #0xff
  405174:	b.ne	405250 <ferror@plt+0x27b0>  // b.any
  405178:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40517c:	add	x1, x0, #0xd68
  405180:	mov	x21, x0
  405184:	ldr	x20, [x1, #8]
  405188:	ldp	x2, x1, [x19, #24]
  40518c:	sub	x1, x1, x2
  405190:	cmp	x20, x1
  405194:	b.ls	4051a4 <ferror@plt+0x2704>  // b.plast
  405198:	mov	x1, x20
  40519c:	mov	x0, x19
  4051a0:	bl	414990 <_obstack_newchunk@@Base>
  4051a4:	ldr	x1, [x21, #3432]
  4051a8:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4051ac:	ldr	x0, [x19, #24]
  4051b0:	mov	x2, x20
  4051b4:	bl	402420 <memcpy@plt>
  4051b8:	ldr	x22, [x19, #24]
  4051bc:	ldr	x0, [x21, #3448]
  4051c0:	add	x22, x22, x20
  4051c4:	str	x22, [x19, #24]
  4051c8:	bl	402450 <strlen@plt>
  4051cc:	mov	x20, x0
  4051d0:	ldr	x2, [x19, #32]
  4051d4:	sub	x22, x2, x22
  4051d8:	cmp	x0, x22
  4051dc:	b.ls	4051ec <ferror@plt+0x274c>  // b.plast
  4051e0:	mov	x1, x0
  4051e4:	mov	x0, x19
  4051e8:	bl	414990 <_obstack_newchunk@@Base>
  4051ec:	ldr	x1, [x21, #3448]
  4051f0:	mov	x2, x20
  4051f4:	ldr	x0, [x19, #24]
  4051f8:	bl	402420 <memcpy@plt>
  4051fc:	ldr	x2, [x19, #24]
  405200:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  405204:	add	x0, x1, #0xda0
  405208:	add	x20, x2, x20
  40520c:	str	x20, [x19, #24]
  405210:	ldr	x2, [x19, #32]
  405214:	ldr	x21, [x0, #8]
  405218:	sub	x20, x2, x20
  40521c:	cmp	x21, x20
  405220:	mov	x20, x1
  405224:	b.ls	405234 <ferror@plt+0x2794>  // b.plast
  405228:	mov	x1, x21
  40522c:	mov	x0, x19
  405230:	bl	414990 <_obstack_newchunk@@Base>
  405234:	ldr	x1, [x20, #3488]
  405238:	mov	x2, x21
  40523c:	ldr	x0, [x19, #24]
  405240:	bl	402420 <memcpy@plt>
  405244:	ldr	x2, [x19, #24]
  405248:	add	x2, x2, x21
  40524c:	str	x2, [x19, #24]
  405250:	ldp	x19, x20, [sp, #16]
  405254:	ldp	x21, x22, [sp, #32]
  405258:	ldp	x29, x30, [sp], #48
  40525c:	ret
  405260:	sub	sp, sp, #0x250
  405264:	cmp	w1, #0x1
  405268:	stp	x29, x30, [sp]
  40526c:	mov	x29, sp
  405270:	stp	x19, x20, [sp, #16]
  405274:	mov	x19, x0
  405278:	stp	x21, x22, [sp, #32]
  40527c:	stp	x23, x24, [sp, #48]
  405280:	mov	w23, w1
  405284:	mov	x24, x2
  405288:	str	x25, [sp, #64]
  40528c:	b.le	405340 <ferror@plt+0x28a0>
  405290:	ldr	x0, [x2, #8]
  405294:	cmp	w1, #0x2
  405298:	ldr	x22, [x0, #8]
  40529c:	b.eq	405350 <ferror@plt+0x28b0>  // b.none
  4052a0:	ldr	x0, [x2, #16]
  4052a4:	ldr	x20, [x0, #8]
  4052a8:	mov	w1, w23
  4052ac:	ldr	x0, [x24]
  4052b0:	mov	w3, #0x4                   	// #4
  4052b4:	mov	w2, #0x3                   	// #3
  4052b8:	add	x0, x0, #0x8
  4052bc:	bl	403e34 <ferror@plt+0x1394>
  4052c0:	tst	w0, #0xff
  4052c4:	b.ne	4052d8 <ferror@plt+0x2838>  // b.any
  4052c8:	ldrb	w0, [x22]
  4052cc:	cbz	w0, 4052d8 <ferror@plt+0x2838>
  4052d0:	ldrb	w0, [x20]
  4052d4:	cbnz	w0, 40535c <ferror@plt+0x28bc>
  4052d8:	cmp	w23, #0x1
  4052dc:	b.le	405324 <ferror@plt+0x2884>
  4052e0:	mov	x0, x22
  4052e4:	bl	402450 <strlen@plt>
  4052e8:	mov	x20, x0
  4052ec:	ldp	x1, x0, [x19, #24]
  4052f0:	sub	x0, x0, x1
  4052f4:	cmp	x20, x0
  4052f8:	b.ls	405308 <ferror@plt+0x2868>  // b.plast
  4052fc:	mov	x1, x20
  405300:	mov	x0, x19
  405304:	bl	414990 <_obstack_newchunk@@Base>
  405308:	ldr	x0, [x19, #24]
  40530c:	mov	x2, x20
  405310:	mov	x1, x22
  405314:	bl	402420 <memcpy@plt>
  405318:	ldr	x0, [x19, #24]
  40531c:	add	x0, x0, x20
  405320:	str	x0, [x19, #24]
  405324:	ldp	x29, x30, [sp]
  405328:	ldp	x19, x20, [sp, #16]
  40532c:	ldp	x21, x22, [sp, #32]
  405330:	ldp	x23, x24, [sp, #48]
  405334:	ldr	x25, [sp, #64]
  405338:	add	sp, sp, #0x250
  40533c:	ret
  405340:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x14bc>
  405344:	add	x22, x22, #0x3df
  405348:	mov	x20, x22
  40534c:	b	4052a8 <ferror@plt+0x2808>
  405350:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  405354:	add	x20, x20, #0x3df
  405358:	b	4052a8 <ferror@plt+0x2808>
  40535c:	cmp	w23, #0x3
  405360:	b.le	4053bc <ferror@plt+0x291c>
  405364:	ldr	x0, [x24, #24]
  405368:	mov	w1, #0x2d                  	// #45
  40536c:	ldr	x21, [x0, #8]
  405370:	mov	x0, x21
  405374:	bl	402910 <strchr@plt>
  405378:	cbz	x0, 4053c4 <ferror@plt+0x2924>
  40537c:	mov	x0, x21
  405380:	mov	x1, x19
  405384:	bl	403604 <ferror@plt+0xb64>
  405388:	mov	x21, x0
  40538c:	cbz	x0, 405398 <ferror@plt+0x28f8>
  405390:	ldrb	w0, [x0]
  405394:	cbnz	w0, 4053c4 <ferror@plt+0x2924>
  405398:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  40539c:	add	x3, x3, #0x708
  4053a0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4053a4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4053a8:	add	x3, x3, #0x15
  4053ac:	add	x1, x1, #0x1ac
  4053b0:	add	x0, x0, #0x305
  4053b4:	mov	w2, #0x752                 	// #1874
  4053b8:	bl	402a20 <__assert_fail@plt>
  4053bc:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  4053c0:	add	x21, x21, #0x3df
  4053c4:	ldrb	w0, [x20, #1]
  4053c8:	cbz	w0, 4053d4 <ferror@plt+0x2934>
  4053cc:	ldrb	w0, [x20, #2]
  4053d0:	cbnz	w0, 405508 <ferror@plt+0x2a68>
  4053d4:	mov	x0, x22
  4053d8:	bl	402450 <strlen@plt>
  4053dc:	mov	x23, x0
  4053e0:	ldrb	w1, [x20]
  4053e4:	mov	x3, x23
  4053e8:	ldrb	w2, [x20, #1]
  4053ec:	mov	x0, x22
  4053f0:	bl	4116b0 <ferror@plt+0xec10>
  4053f4:	mov	x25, x0
  4053f8:	ldp	x1, x0, [x19, #24]
  4053fc:	sub	x0, x0, x1
  405400:	cbnz	x25, 405438 <ferror@plt+0x2998>
  405404:	cmp	x23, x0
  405408:	b.ls	405418 <ferror@plt+0x2978>  // b.plast
  40540c:	mov	x1, x23
  405410:	mov	x0, x19
  405414:	bl	414990 <_obstack_newchunk@@Base>
  405418:	ldr	x0, [x19, #24]
  40541c:	mov	x2, x23
  405420:	mov	x1, x22
  405424:	bl	402420 <memcpy@plt>
  405428:	ldr	x0, [x19, #24]
  40542c:	add	x23, x0, x23
  405430:	str	x23, [x19, #24]
  405434:	b	405324 <ferror@plt+0x2884>
  405438:	sub	x24, x25, x22
  40543c:	cmp	x24, x0
  405440:	b.ls	405450 <ferror@plt+0x29b0>  // b.plast
  405444:	mov	x1, x24
  405448:	mov	x0, x19
  40544c:	bl	414990 <_obstack_newchunk@@Base>
  405450:	ldr	x0, [x19, #24]
  405454:	mov	x2, x24
  405458:	mov	x1, x22
  40545c:	bl	402420 <memcpy@plt>
  405460:	ldr	x0, [x19, #24]
  405464:	subs	x23, x23, x24
  405468:	add	x0, x0, x24
  40546c:	str	x0, [x19, #24]
  405470:	b.eq	405324 <ferror@plt+0x2884>  // b.none
  405474:	mov	x22, x25
  405478:	ldrb	w3, [x20]
  40547c:	sub	x23, x23, #0x1
  405480:	ldr	x1, [x19, #32]
  405484:	ldrb	w2, [x22], #1
  405488:	cmp	w3, w2
  40548c:	b.ne	4054c4 <ferror@plt+0x2a24>  // b.any
  405490:	ldrb	w3, [x21]
  405494:	cbz	w3, 4054c4 <ferror@plt+0x2a24>
  405498:	cmp	x0, x1
  40549c:	b.ne	4054ac <ferror@plt+0x2a0c>  // b.any
  4054a0:	mov	x0, x19
  4054a4:	mov	x1, #0x1                   	// #1
  4054a8:	bl	414990 <_obstack_newchunk@@Base>
  4054ac:	ldr	x0, [x19, #24]
  4054b0:	add	x1, x0, #0x1
  4054b4:	str	x1, [x19, #24]
  4054b8:	ldrb	w1, [x21]
  4054bc:	strb	w1, [x0]
  4054c0:	b	4053e0 <ferror@plt+0x2940>
  4054c4:	ldrb	w3, [x20, #1]
  4054c8:	cmp	w3, w2
  4054cc:	b.ne	4053e0 <ferror@plt+0x2940>  // b.any
  4054d0:	ldrb	w2, [x21]
  4054d4:	cbz	w2, 4053e0 <ferror@plt+0x2940>
  4054d8:	ldrb	w2, [x21, #1]
  4054dc:	cbz	w2, 4053e0 <ferror@plt+0x2940>
  4054e0:	cmp	x0, x1
  4054e4:	b.ne	4054f4 <ferror@plt+0x2a54>  // b.any
  4054e8:	mov	x0, x19
  4054ec:	mov	x1, #0x1                   	// #1
  4054f0:	bl	414990 <_obstack_newchunk@@Base>
  4054f4:	ldr	x0, [x19, #24]
  4054f8:	add	x1, x0, #0x1
  4054fc:	str	x1, [x19, #24]
  405500:	ldrb	w1, [x21, #1]
  405504:	b	4054bc <ferror@plt+0x2a1c>
  405508:	mov	x0, x20
  40550c:	mov	w1, #0x2d                  	// #45
  405510:	bl	402910 <strchr@plt>
  405514:	cbz	x0, 405558 <ferror@plt+0x2ab8>
  405518:	mov	x0, x20
  40551c:	mov	x1, x19
  405520:	bl	403604 <ferror@plt+0xb64>
  405524:	mov	x20, x0
  405528:	cbz	x0, 405534 <ferror@plt+0x2a94>
  40552c:	ldrb	w0, [x0]
  405530:	cbnz	w0, 405558 <ferror@plt+0x2ab8>
  405534:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405538:	add	x3, x3, #0x708
  40553c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  405540:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  405544:	add	x3, x3, #0x15
  405548:	add	x1, x1, #0x1ac
  40554c:	add	x0, x0, #0x30f
  405550:	mov	w2, #0x770                 	// #1904
  405554:	b	4053b8 <ferror@plt+0x2918>
  405558:	add	x25, sp, #0x50
  40555c:	mov	x2, #0x100                 	// #256
  405560:	mov	w1, #0x0                   	// #0
  405564:	mov	x0, x25
  405568:	add	x22, sp, #0x150
  40556c:	bl	4026a0 <memset@plt>
  405570:	mov	x0, x22
  405574:	mov	x2, #0x100                 	// #256
  405578:	mov	w1, #0x0                   	// #0
  40557c:	bl	4026a0 <memset@plt>
  405580:	mov	w3, #0x1                   	// #1
  405584:	ldrb	w0, [x20]
  405588:	cbnz	w0, 4055dc <ferror@plt+0x2b3c>
  40558c:	cmp	w23, #0x1
  405590:	b.le	405604 <ferror@plt+0x2b64>
  405594:	ldr	x0, [x24, #8]
  405598:	ldr	x20, [x0, #8]
  40559c:	ldrb	w21, [x20]
  4055a0:	cbz	w21, 405324 <ferror@plt+0x2884>
  4055a4:	ldrb	w1, [x22, w21, sxtw]
  4055a8:	sxtw	x0, w21
  4055ac:	cbnz	w1, 405610 <ferror@plt+0x2b70>
  4055b0:	ldp	x0, x1, [x19, #24]
  4055b4:	cmp	x1, x0
  4055b8:	b.ne	4055c8 <ferror@plt+0x2b28>  // b.any
  4055bc:	mov	x0, x19
  4055c0:	mov	x1, #0x1                   	// #1
  4055c4:	bl	414990 <_obstack_newchunk@@Base>
  4055c8:	ldr	x0, [x19, #24]
  4055cc:	add	x1, x0, #0x1
  4055d0:	str	x1, [x19, #24]
  4055d4:	strb	w21, [x0]
  4055d8:	b	405618 <ferror@plt+0x2b78>
  4055dc:	sxtw	x2, w0
  4055e0:	ldrb	w0, [x22, w0, sxtw]
  4055e4:	ldrb	w1, [x21]
  4055e8:	cbnz	w0, 4055f4 <ferror@plt+0x2b54>
  4055ec:	strb	w3, [x22, x2]
  4055f0:	strb	w1, [x25, x2]
  4055f4:	cbz	w1, 4055fc <ferror@plt+0x2b5c>
  4055f8:	add	x21, x21, #0x1
  4055fc:	add	x20, x20, #0x1
  405600:	b	405584 <ferror@plt+0x2ae4>
  405604:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  405608:	add	x20, x20, #0x3df
  40560c:	b	40559c <ferror@plt+0x2afc>
  405610:	ldrb	w21, [x25, x0]
  405614:	cbnz	w21, 4055b0 <ferror@plt+0x2b10>
  405618:	add	x20, x20, #0x1
  40561c:	b	40559c <ferror@plt+0x2afc>
  405620:	stp	x29, x30, [sp, #-48]!
  405624:	cmp	w1, #0x1
  405628:	mov	x29, sp
  40562c:	stp	x19, x20, [sp, #16]
  405630:	stp	x21, x22, [sp, #32]
  405634:	mov	x21, x0
  405638:	b.ne	4056a0 <ferror@plt+0x2c00>  // b.any
  40563c:	ldp	x19, x20, [sp, #16]
  405640:	mov	x1, x0
  405644:	ldp	x21, x22, [sp, #32]
  405648:	adrp	x0, 404000 <ferror@plt+0x1560>
  40564c:	ldp	x29, x30, [sp], #48
  405650:	add	x0, x0, #0xdb8
  405654:	b	40e1e0 <ferror@plt+0xb740>
  405658:	ldr	x0, [x22, x19, lsl #3]
  40565c:	mov	w1, #0x0                   	// #0
  405660:	ldr	x0, [x0, #8]
  405664:	bl	40df50 <ferror@plt+0xb4b0>
  405668:	cbnz	x0, 40567c <ferror@plt+0x2bdc>
  40566c:	ldr	x0, [x22, x19, lsl #3]
  405670:	mov	w1, #0x1                   	// #1
  405674:	ldr	x0, [x0, #8]
  405678:	bl	40df50 <ferror@plt+0xb4b0>
  40567c:	add	x19, x19, #0x1
  405680:	mov	x1, x21
  405684:	bl	404db8 <ferror@plt+0x2318>
  405688:	cmp	w20, w19
  40568c:	b.gt	405658 <ferror@plt+0x2bb8>
  405690:	ldp	x19, x20, [sp, #16]
  405694:	ldp	x21, x22, [sp, #32]
  405698:	ldp	x29, x30, [sp], #48
  40569c:	ret
  4056a0:	mov	w20, w1
  4056a4:	mov	x22, x2
  4056a8:	mov	x19, #0x1                   	// #1
  4056ac:	b	405688 <ferror@plt+0x2be8>
  4056b0:	cmp	w1, #0x1
  4056b4:	b.ne	405700 <ferror@plt+0x2c60>  // b.any
  4056b8:	adrp	x0, 404000 <ferror@plt+0x1560>
  4056bc:	mov	x1, #0x0                   	// #0
  4056c0:	add	x0, x0, #0xdb8
  4056c4:	b	40e1e0 <ferror@plt+0xb740>
  4056c8:	ldr	x0, [x21, x19, lsl #3]
  4056cc:	mov	w1, #0x0                   	// #0
  4056d0:	ldr	x0, [x0, #8]
  4056d4:	bl	40df50 <ferror@plt+0xb4b0>
  4056d8:	cbz	x0, 4056e4 <ferror@plt+0x2c44>
  4056dc:	mov	x1, #0x0                   	// #0
  4056e0:	bl	404db8 <ferror@plt+0x2318>
  4056e4:	add	x19, x19, #0x1
  4056e8:	cmp	w20, w19
  4056ec:	b.gt	4056c8 <ferror@plt+0x2c28>
  4056f0:	ldp	x19, x20, [sp, #16]
  4056f4:	ldr	x21, [sp, #32]
  4056f8:	ldp	x29, x30, [sp], #48
  4056fc:	ret
  405700:	stp	x29, x30, [sp, #-48]!
  405704:	mov	x29, sp
  405708:	stp	x19, x20, [sp, #16]
  40570c:	mov	w20, w1
  405710:	mov	x19, #0x1                   	// #1
  405714:	str	x21, [sp, #32]
  405718:	mov	x21, x2
  40571c:	b	4056e8 <ferror@plt+0x2c48>
  405720:	stp	x29, x30, [sp, #-48]!
  405724:	mov	w3, #0x2                   	// #2
  405728:	mov	x29, sp
  40572c:	stp	x21, x22, [sp, #32]
  405730:	mov	x22, x0
  405734:	mov	w21, w1
  405738:	ldr	x0, [x2]
  40573c:	stp	x19, x20, [sp, #16]
  405740:	mov	x19, x2
  405744:	add	x0, x0, #0x8
  405748:	mov	w2, w3
  40574c:	bl	403e34 <ferror@plt+0x1394>
  405750:	tst	w0, #0xff
  405754:	b.ne	4057bc <ferror@plt+0x2d1c>  // b.any
  405758:	cmp	w21, #0x0
  40575c:	b.le	4057a0 <ferror@plt+0x2d00>
  405760:	ldr	x0, [x19]
  405764:	cmp	w21, #0x1
  405768:	ldr	x20, [x0, #8]
  40576c:	b.eq	4057b0 <ferror@plt+0x2d10>  // b.none
  405770:	ldr	x0, [x19, #8]
  405774:	ldr	x19, [x0, #8]
  405778:	mov	x0, x19
  40577c:	bl	402450 <strlen@plt>
  405780:	mov	x3, x0
  405784:	mov	x2, x19
  405788:	mov	x1, x20
  40578c:	mov	x0, x22
  405790:	ldp	x19, x20, [sp, #16]
  405794:	ldp	x21, x22, [sp, #32]
  405798:	ldp	x29, x30, [sp], #48
  40579c:	b	403be4 <ferror@plt+0x1144>
  4057a0:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  4057a4:	add	x20, x20, #0x3df
  4057a8:	mov	x19, x20
  4057ac:	b	405778 <ferror@plt+0x2cd8>
  4057b0:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  4057b4:	add	x19, x19, #0x3df
  4057b8:	b	405778 <ferror@plt+0x2cd8>
  4057bc:	ldp	x19, x20, [sp, #16]
  4057c0:	ldp	x21, x22, [sp, #32]
  4057c4:	ldp	x29, x30, [sp], #48
  4057c8:	ret
  4057cc:	stp	x29, x30, [sp, #-48]!
  4057d0:	mov	w3, #0xffffffff            	// #-1
  4057d4:	mov	x29, sp
  4057d8:	stp	x19, x20, [sp, #16]
  4057dc:	mov	x19, x0
  4057e0:	mov	x20, x2
  4057e4:	ldr	x0, [x2]
  4057e8:	mov	w2, #0x2                   	// #2
  4057ec:	stp	x21, x22, [sp, #32]
  4057f0:	mov	w22, w1
  4057f4:	add	x0, x0, #0x8
  4057f8:	bl	403e34 <ferror@plt+0x1394>
  4057fc:	tst	w0, #0xff
  405800:	b.ne	40591c <ferror@plt+0x2e7c>  // b.any
  405804:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405808:	ldr	w0, [x0, #1664]
  40580c:	cbz	w0, 4058fc <ferror@plt+0x2e5c>
  405810:	cmp	w22, #0x1
  405814:	b.le	4058e4 <ferror@plt+0x2e44>
  405818:	ldr	x0, [x20, #8]
  40581c:	ldr	x0, [x0, #8]
  405820:	bl	402450 <strlen@plt>
  405824:	mov	x21, x0
  405828:	ldp	x1, x0, [x19, #24]
  40582c:	sub	x0, x0, x1
  405830:	cmp	x21, x0
  405834:	b.ls	405844 <ferror@plt+0x2da4>  // b.plast
  405838:	mov	x1, x21
  40583c:	mov	x0, x19
  405840:	bl	414990 <_obstack_newchunk@@Base>
  405844:	cmp	w22, #0x1
  405848:	ldr	x0, [x19, #24]
  40584c:	b.le	4058f0 <ferror@plt+0x2e50>
  405850:	ldr	x1, [x20, #8]
  405854:	ldr	x1, [x1, #8]
  405858:	mov	x2, x21
  40585c:	bl	402420 <memcpy@plt>
  405860:	ldr	x0, [x19, #24]
  405864:	add	x0, x0, x21
  405868:	str	x0, [x19, #24]
  40586c:	ldp	x0, x1, [x19, #24]
  405870:	cmp	x1, x0
  405874:	b.ne	405884 <ferror@plt+0x2de4>  // b.any
  405878:	mov	x0, x19
  40587c:	mov	x1, #0x1                   	// #1
  405880:	bl	414990 <_obstack_newchunk@@Base>
  405884:	ldr	x0, [x19, #24]
  405888:	add	x1, x0, #0x1
  40588c:	str	x1, [x19, #24]
  405890:	strb	wzr, [x0]
  405894:	ldp	x0, x2, [x19, #16]
  405898:	cmp	x0, x2
  40589c:	b.ne	4058ac <ferror@plt+0x2e0c>  // b.any
  4058a0:	ldrb	w1, [x19, #80]
  4058a4:	orr	w1, w1, #0x2
  4058a8:	strb	w1, [x19, #80]
  4058ac:	ldr	x1, [x19, #48]
  4058b0:	ldr	x3, [x19, #32]
  4058b4:	add	x2, x2, x1
  4058b8:	bic	x1, x2, x1
  4058bc:	ldr	x2, [x19, #8]
  4058c0:	ldp	x21, x22, [sp, #32]
  4058c4:	sub	x4, x1, x2
  4058c8:	sub	x2, x3, x2
  4058cc:	cmp	x4, x2
  4058d0:	csel	x1, x1, x3, ls  // ls = plast
  4058d4:	stp	x1, x1, [x19, #16]
  4058d8:	ldp	x19, x20, [sp, #16]
  4058dc:	ldp	x29, x30, [sp], #48
  4058e0:	b	40adac <ferror@plt+0x830c>
  4058e4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4058e8:	add	x0, x0, #0x3df
  4058ec:	b	405820 <ferror@plt+0x2d80>
  4058f0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4058f4:	add	x1, x1, #0x3df
  4058f8:	b	405858 <ferror@plt+0x2db8>
  4058fc:	mov	x2, x20
  405900:	mov	w1, w22
  405904:	mov	x0, x19
  405908:	mov	w4, #0x0                   	// #0
  40590c:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405910:	add	x3, x3, #0xc78
  405914:	bl	4037a8 <ferror@plt+0xd08>
  405918:	b	40586c <ferror@plt+0x2dcc>
  40591c:	ldp	x19, x20, [sp, #16]
  405920:	ldp	x21, x22, [sp, #32]
  405924:	ldp	x29, x30, [sp], #48
  405928:	ret
  40592c:	stp	x29, x30, [sp, #-48]!
  405930:	mov	w3, #0x2                   	// #2
  405934:	mov	x29, sp
  405938:	ldr	x0, [x2]
  40593c:	stp	x19, x20, [sp, #16]
  405940:	mov	w20, w1
  405944:	mov	x19, x2
  405948:	add	x0, x0, #0x8
  40594c:	mov	w2, #0x1                   	// #1
  405950:	str	x21, [sp, #32]
  405954:	bl	403e34 <ferror@plt+0x1394>
  405958:	tst	w0, #0xff
  40595c:	b.ne	4059e8 <ferror@plt+0x2f48>  // b.any
  405960:	cmp	w20, #0x1
  405964:	b.ne	40597c <ferror@plt+0x2edc>  // b.any
  405968:	ldp	x19, x20, [sp, #16]
  40596c:	mov	x0, #0x0                   	// #0
  405970:	ldr	x21, [sp, #32]
  405974:	ldp	x29, x30, [sp], #48
  405978:	b	407e6c <ferror@plt+0x53cc>
  40597c:	b.le	4059d0 <ferror@plt+0x2f30>
  405980:	ldr	x0, [x19, #8]
  405984:	ldr	x0, [x0, #8]
  405988:	bl	407e6c <ferror@plt+0x53cc>
  40598c:	tst	w0, #0xff
  405990:	b.ne	4059e8 <ferror@plt+0x2f48>  // b.any
  405994:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405998:	ldr	w21, [x0, #1660]
  40599c:	bl	402a30 <__errno_location@plt>
  4059a0:	cmp	w20, #0x1
  4059a4:	ldr	w1, [x0]
  4059a8:	b.le	4059dc <ferror@plt+0x2f3c>
  4059ac:	ldr	x0, [x19, #8]
  4059b0:	ldr	x3, [x0, #8]
  4059b4:	mov	w0, w21
  4059b8:	ldp	x19, x20, [sp, #16]
  4059bc:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  4059c0:	ldr	x21, [sp, #32]
  4059c4:	add	x2, x2, #0xbdd
  4059c8:	ldp	x29, x30, [sp], #48
  4059cc:	b	403488 <ferror@plt+0x9e8>
  4059d0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4059d4:	add	x0, x0, #0x3df
  4059d8:	b	405988 <ferror@plt+0x2ee8>
  4059dc:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4059e0:	add	x3, x3, #0x3df
  4059e4:	b	4059b4 <ferror@plt+0x2f14>
  4059e8:	ldp	x19, x20, [sp, #16]
  4059ec:	ldr	x21, [sp, #32]
  4059f0:	ldp	x29, x30, [sp], #48
  4059f4:	ret
  4059f8:	stp	x29, x30, [sp, #-48]!
  4059fc:	mov	w3, #0xffffffff            	// #-1
  405a00:	mov	x29, sp
  405a04:	stp	x21, x22, [sp, #32]
  405a08:	mov	x22, x0
  405a0c:	ldr	x0, [x2]
  405a10:	stp	x19, x20, [sp, #16]
  405a14:	mov	w20, w1
  405a18:	mov	x19, x2
  405a1c:	add	x0, x0, #0x8
  405a20:	mov	w2, #0x2                   	// #2
  405a24:	bl	403e34 <ferror@plt+0x1394>
  405a28:	tst	w0, #0xff
  405a2c:	b.ne	405b2c <ferror@plt+0x308c>  // b.any
  405a30:	ldr	x0, [x19, #8]
  405a34:	ldr	w1, [x0]
  405a38:	cmp	w1, #0x1
  405a3c:	b.eq	405a80 <ferror@plt+0x2fe0>  // b.none
  405a40:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405a44:	cmp	w20, #0x0
  405a48:	ldr	w0, [x0, #1660]
  405a4c:	b.le	405a74 <ferror@plt+0x2fd4>
  405a50:	ldr	x1, [x19]
  405a54:	ldr	x3, [x1, #8]
  405a58:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405a5c:	add	x2, x2, #0x31d
  405a60:	mov	w1, #0x0                   	// #0
  405a64:	ldp	x19, x20, [sp, #16]
  405a68:	ldp	x21, x22, [sp, #32]
  405a6c:	ldp	x29, x30, [sp], #48
  405a70:	b	403488 <ferror@plt+0x9e8>
  405a74:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405a78:	add	x3, x3, #0x3df
  405a7c:	b	405a58 <ferror@plt+0x2fb8>
  405a80:	cmp	w20, #0x1
  405a84:	b.le	405ac0 <ferror@plt+0x3020>
  405a88:	ldr	x21, [x0, #8]
  405a8c:	mov	x0, x21
  405a90:	mov	w1, #0x0                   	// #0
  405a94:	bl	40df50 <ferror@plt+0xb4b0>
  405a98:	cbz	x0, 405aa4 <ferror@plt+0x3004>
  405a9c:	ldr	w1, [x0, #24]
  405aa0:	cbnz	w1, 405acc <ferror@plt+0x302c>
  405aa4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405aa8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405aac:	mov	x3, x21
  405ab0:	add	x2, x2, #0x345
  405ab4:	ldr	w0, [x0, #1660]
  405ab8:	mov	w1, #0x0                   	// #0
  405abc:	b	405a64 <ferror@plt+0x2fc4>
  405ac0:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  405ac4:	add	x21, x21, #0x3df
  405ac8:	b	405a8c <ferror@plt+0x2fec>
  405acc:	ldrb	w1, [x0, #8]
  405ad0:	tbz	w1, #2, 405b18 <ferror@plt+0x3078>
  405ad4:	mov	x3, x22
  405ad8:	add	x2, x19, #0x8
  405adc:	sub	w1, w20, #0x1
  405ae0:	ldp	x19, x20, [sp, #16]
  405ae4:	ldp	x21, x22, [sp, #32]
  405ae8:	ldp	x29, x30, [sp], #48
  405aec:	b	40bc90 <ferror@plt+0x91f0>
  405af0:	ldr	x3, [x19, x1, lsl #3]
  405af4:	ldr	w5, [x3]
  405af8:	cmp	w5, #0x1
  405afc:	b.eq	405b08 <ferror@plt+0x3068>  // b.none
  405b00:	str	w4, [x3]
  405b04:	str	x2, [x3, #8]
  405b08:	add	x1, x1, #0x1
  405b0c:	cmp	w20, w1
  405b10:	b.gt	405af0 <ferror@plt+0x3050>
  405b14:	b	405ad4 <ferror@plt+0x3034>
  405b18:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405b1c:	mov	x1, #0x2                   	// #2
  405b20:	add	x2, x2, #0x3df
  405b24:	mov	w4, #0x1                   	// #1
  405b28:	b	405b0c <ferror@plt+0x306c>
  405b2c:	ldp	x19, x20, [sp, #16]
  405b30:	ldp	x21, x22, [sp, #32]
  405b34:	ldp	x29, x30, [sp], #48
  405b38:	ret
  405b3c:	stp	x29, x30, [sp, #-48]!
  405b40:	mov	w3, #0xffffffff            	// #-1
  405b44:	mov	x29, sp
  405b48:	stp	x19, x20, [sp, #16]
  405b4c:	mov	x20, x0
  405b50:	mov	x19, x2
  405b54:	ldr	x0, [x2]
  405b58:	mov	w2, #0x2                   	// #2
  405b5c:	str	x21, [sp, #32]
  405b60:	mov	w21, w1
  405b64:	add	x0, x0, #0x8
  405b68:	bl	403e34 <ferror@plt+0x1394>
  405b6c:	tst	w0, #0xff
  405b70:	b.ne	405b90 <ferror@plt+0x30f0>  // b.any
  405b74:	add	x2, x19, #0x8
  405b78:	sub	w1, w21, #0x1
  405b7c:	mov	x0, x20
  405b80:	ldp	x19, x20, [sp, #16]
  405b84:	ldr	x21, [sp, #32]
  405b88:	ldp	x29, x30, [sp], #48
  405b8c:	b	40907c <ferror@plt+0x65dc>
  405b90:	ldp	x19, x20, [sp, #16]
  405b94:	ldr	x21, [sp, #32]
  405b98:	ldp	x29, x30, [sp], #48
  405b9c:	ret
  405ba0:	stp	x29, x30, [sp, #-48]!
  405ba4:	mov	w3, #0xffffffff            	// #-1
  405ba8:	mov	x29, sp
  405bac:	stp	x19, x20, [sp, #16]
  405bb0:	mov	x19, x0
  405bb4:	mov	x20, x2
  405bb8:	ldr	x0, [x2]
  405bbc:	mov	w2, #0x2                   	// #2
  405bc0:	str	x21, [sp, #32]
  405bc4:	mov	w21, w1
  405bc8:	add	x0, x0, #0x8
  405bcc:	bl	403e34 <ferror@plt+0x1394>
  405bd0:	tst	w0, #0xff
  405bd4:	b.ne	405c8c <ferror@plt+0x31ec>  // b.any
  405bd8:	mov	w1, w21
  405bdc:	mov	x0, x19
  405be0:	mov	x2, x20
  405be4:	mov	w4, #0x0                   	// #0
  405be8:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405bec:	add	x3, x3, #0xc78
  405bf0:	bl	4037a8 <ferror@plt+0xd08>
  405bf4:	ldp	x0, x1, [x19, #24]
  405bf8:	cmp	x1, x0
  405bfc:	b.ne	405c0c <ferror@plt+0x316c>  // b.any
  405c00:	mov	x0, x19
  405c04:	mov	x1, #0x1                   	// #1
  405c08:	bl	414990 <_obstack_newchunk@@Base>
  405c0c:	ldr	x0, [x19, #24]
  405c10:	add	x1, x0, #0x1
  405c14:	str	x1, [x19, #24]
  405c18:	strb	wzr, [x0]
  405c1c:	bl	407dd8 <ferror@plt+0x5338>
  405c20:	ldp	x2, x4, [x19, #16]
  405c24:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405c28:	mov	x20, x3
  405c2c:	ldr	x0, [x3, #1064]
  405c30:	cmp	x2, x4
  405c34:	b.ne	405c44 <ferror@plt+0x31a4>  // b.any
  405c38:	ldrb	w1, [x19, #80]
  405c3c:	orr	w1, w1, #0x2
  405c40:	strb	w1, [x19, #80]
  405c44:	ldr	x1, [x19, #48]
  405c48:	ldr	x3, [x19, #8]
  405c4c:	add	x4, x4, x1
  405c50:	bic	x1, x4, x1
  405c54:	ldr	x4, [x19, #32]
  405c58:	sub	x5, x1, x3
  405c5c:	sub	x3, x4, x3
  405c60:	cmp	x5, x3
  405c64:	csel	x1, x1, x4, ls  // ls = plast
  405c68:	stp	x1, x1, [x19, #16]
  405c6c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  405c70:	add	x1, x1, #0x55e
  405c74:	bl	4141fc <ferror@plt+0x1175c>
  405c78:	ldr	x0, [x20, #1064]
  405c7c:	ldp	x19, x20, [sp, #16]
  405c80:	ldr	x21, [sp, #32]
  405c84:	ldp	x29, x30, [sp], #48
  405c88:	b	4146ac <ferror@plt+0x11c0c>
  405c8c:	ldp	x19, x20, [sp, #16]
  405c90:	ldr	x21, [sp, #32]
  405c94:	ldp	x29, x30, [sp], #48
  405c98:	ret
  405c9c:	stp	x29, x30, [sp, #-96]!
  405ca0:	mov	w3, #0xffffffff            	// #-1
  405ca4:	mov	x29, sp
  405ca8:	stp	x19, x20, [sp, #16]
  405cac:	mov	x19, x0
  405cb0:	ldr	x0, [x2]
  405cb4:	stp	x21, x22, [sp, #32]
  405cb8:	mov	w21, w1
  405cbc:	add	x0, x0, #0x8
  405cc0:	stp	x23, x24, [sp, #48]
  405cc4:	mov	x24, x2
  405cc8:	mov	w2, #0x2                   	// #2
  405ccc:	stp	x25, x26, [sp, #64]
  405cd0:	stp	x27, x28, [sp, #80]
  405cd4:	bl	403e34 <ferror@plt+0x1394>
  405cd8:	tst	w0, #0xff
  405cdc:	b.ne	405d08 <ferror@plt+0x3268>  // b.any
  405ce0:	cmp	w21, #0x0
  405ce4:	mov	w23, #0x1                   	// #1
  405ce8:	b.le	405d24 <ferror@plt+0x3284>
  405cec:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x14bc>
  405cf0:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0xaba8>
  405cf4:	add	x26, x26, #0x3df
  405cf8:	add	x25, x25, #0xd68
  405cfc:	adrp	x27, 439000 <__progname@@GLIBC_2.17+0xaba8>
  405d00:	cmp	w23, w21
  405d04:	b.cc	405d48 <ferror@plt+0x32a8>  // b.lo, b.ul, b.last
  405d08:	ldp	x19, x20, [sp, #16]
  405d0c:	ldp	x21, x22, [sp, #32]
  405d10:	ldp	x23, x24, [sp, #48]
  405d14:	ldp	x25, x26, [sp, #64]
  405d18:	ldp	x27, x28, [sp, #80]
  405d1c:	ldp	x29, x30, [sp], #96
  405d20:	ret
  405d24:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405d28:	add	x3, x3, #0x708
  405d2c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  405d30:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  405d34:	add	x3, x3, #0x21
  405d38:	add	x1, x1, #0x1ac
  405d3c:	add	x0, x0, #0x35a
  405d40:	mov	w2, #0x382                 	// #898
  405d44:	bl	402a20 <__assert_fail@plt>
  405d48:	cmp	w21, w23
  405d4c:	b.le	405d8c <ferror@plt+0x32ec>
  405d50:	ldr	x0, [x24, w23, sxtw #3]
  405d54:	ldr	x22, [x0, #8]
  405d58:	mov	x0, x22
  405d5c:	mov	w1, #0x0                   	// #0
  405d60:	bl	40df50 <ferror@plt+0xb4b0>
  405d64:	mov	x20, x0
  405d68:	cbz	x0, 405d84 <ferror@plt+0x32e4>
  405d6c:	ldr	w0, [x0, #24]
  405d70:	cmp	w0, #0x1
  405d74:	b.eq	405d94 <ferror@plt+0x32f4>  // b.none
  405d78:	cmp	w0, #0x2
  405d7c:	b.eq	405e58 <ferror@plt+0x33b8>  // b.none
  405d80:	cbnz	w0, 405eac <ferror@plt+0x340c>
  405d84:	add	w23, w23, #0x1
  405d88:	b	405d00 <ferror@plt+0x3260>
  405d8c:	mov	x22, x26
  405d90:	b	405d58 <ferror@plt+0x32b8>
  405d94:	ldp	x1, x0, [x19, #24]
  405d98:	ldr	x22, [x25, #8]
  405d9c:	sub	x0, x0, x1
  405da0:	cmp	x22, x0
  405da4:	b.ls	405db4 <ferror@plt+0x3314>  // b.plast
  405da8:	mov	x1, x22
  405dac:	mov	x0, x19
  405db0:	bl	414990 <_obstack_newchunk@@Base>
  405db4:	ldr	x1, [x25]
  405db8:	mov	x2, x22
  405dbc:	ldr	x0, [x19, #24]
  405dc0:	bl	402420 <memcpy@plt>
  405dc4:	ldr	x28, [x19, #24]
  405dc8:	ldr	x0, [x20, #32]
  405dcc:	add	x28, x28, x22
  405dd0:	str	x28, [x19, #24]
  405dd4:	bl	402450 <strlen@plt>
  405dd8:	mov	x22, x0
  405ddc:	ldr	x2, [x19, #32]
  405de0:	sub	x28, x2, x28
  405de4:	cmp	x0, x28
  405de8:	b.ls	405df8 <ferror@plt+0x3358>  // b.plast
  405dec:	mov	x1, x0
  405df0:	mov	x0, x19
  405df4:	bl	414990 <_obstack_newchunk@@Base>
  405df8:	ldr	x0, [x19, #24]
  405dfc:	mov	x2, x22
  405e00:	ldr	x1, [x20, #32]
  405e04:	bl	402420 <memcpy@plt>
  405e08:	ldr	x2, [x19, #24]
  405e0c:	add	x0, x27, #0xda0
  405e10:	add	x22, x2, x22
  405e14:	str	x22, [x19, #24]
  405e18:	ldr	x2, [x19, #32]
  405e1c:	ldr	x20, [x0, #8]
  405e20:	sub	x22, x2, x22
  405e24:	cmp	x20, x22
  405e28:	b.ls	405e38 <ferror@plt+0x3398>  // b.plast
  405e2c:	mov	x1, x20
  405e30:	mov	x0, x19
  405e34:	bl	414990 <_obstack_newchunk@@Base>
  405e38:	ldr	x1, [x27, #3488]
  405e3c:	mov	x2, x20
  405e40:	ldr	x0, [x19, #24]
  405e44:	bl	402420 <memcpy@plt>
  405e48:	ldr	x2, [x19, #24]
  405e4c:	add	x2, x2, x20
  405e50:	str	x2, [x19, #24]
  405e54:	b	405d84 <ferror@plt+0x32e4>
  405e58:	ldr	x0, [x20, #32]
  405e5c:	adrp	x1, 403000 <ferror@plt+0x560>
  405e60:	add	x1, x1, #0x5d0
  405e64:	cmp	x0, x1
  405e68:	b.ne	405e8c <ferror@plt+0x33ec>  // b.any
  405e6c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405e70:	mov	x3, x22
  405e74:	add	x2, x2, #0x60
  405e78:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405e7c:	mov	w1, #0x0                   	// #0
  405e80:	ldr	w0, [x0, #1660]
  405e84:	bl	403488 <ferror@plt+0x9e8>
  405e88:	b	405d84 <ferror@plt+0x32e4>
  405e8c:	cmp	w21, #0x2
  405e90:	b.eq	405ea4 <ferror@plt+0x3404>  // b.none
  405e94:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405e98:	mov	x3, x22
  405e9c:	add	x2, x2, #0x363
  405ea0:	b	405e78 <ferror@plt+0x33d8>
  405ea4:	bl	40a94c <ferror@plt+0x7eac>
  405ea8:	b	405d84 <ferror@plt+0x32e4>
  405eac:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405eb0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405eb4:	add	x2, x2, #0x38c
  405eb8:	mov	w1, #0x0                   	// #0
  405ebc:	ldr	w0, [x0, #1660]
  405ec0:	bl	403488 <ferror@plt+0x9e8>
  405ec4:	bl	4027d0 <abort@plt>
  405ec8:	stp	x29, x30, [sp, #-48]!
  405ecc:	mov	w3, #0x2                   	// #2
  405ed0:	mov	x29, sp
  405ed4:	ldr	x0, [x2]
  405ed8:	stp	x19, x20, [sp, #16]
  405edc:	mov	w20, w1
  405ee0:	mov	x19, x2
  405ee4:	add	x0, x0, #0x8
  405ee8:	mov	w2, #0x1                   	// #1
  405eec:	str	x21, [sp, #32]
  405ef0:	bl	403e34 <ferror@plt+0x1394>
  405ef4:	tst	w0, #0xff
  405ef8:	b.ne	405f0c <ferror@plt+0x346c>  // b.any
  405efc:	cmp	w20, #0x1
  405f00:	b.ne	405f1c <ferror@plt+0x347c>  // b.any
  405f04:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405f08:	str	wzr, [x0, #1676]
  405f0c:	ldp	x19, x20, [sp, #16]
  405f10:	ldr	x21, [sp, #32]
  405f14:	ldp	x29, x30, [sp], #48
  405f18:	ret
  405f1c:	b.le	405f8c <ferror@plt+0x34ec>
  405f20:	ldr	x0, [x19, #8]
  405f24:	ldr	x0, [x0, #8]
  405f28:	mov	w1, #0x2d                  	// #45
  405f2c:	ldrb	w21, [x0]
  405f30:	cmp	w21, #0x2b
  405f34:	ccmp	w21, w1, #0x4, ne  // ne = any
  405f38:	b.ne	405fa4 <ferror@plt+0x3504>  // b.any
  405f3c:	cmp	w20, #0x1
  405f40:	b.le	405f98 <ferror@plt+0x34f8>
  405f44:	ldr	x0, [x19, #8]
  405f48:	ldr	x0, [x0, #8]
  405f4c:	add	x0, x0, #0x1
  405f50:	bl	407c98 <ferror@plt+0x51f8>
  405f54:	tbz	w0, #31, 405fc4 <ferror@plt+0x3524>
  405f58:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405f5c:	cmp	w20, #0x1
  405f60:	ldr	w0, [x0, #1660]
  405f64:	b.gt	405fb8 <ferror@plt+0x3518>
  405f68:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  405f6c:	add	x3, x3, #0x3df
  405f70:	ldp	x19, x20, [sp, #16]
  405f74:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  405f78:	ldr	x21, [sp, #32]
  405f7c:	add	x2, x2, #0x3ba
  405f80:	ldp	x29, x30, [sp], #48
  405f84:	mov	w1, #0x0                   	// #0
  405f88:	b	403488 <ferror@plt+0x9e8>
  405f8c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  405f90:	add	x0, x0, #0x3df
  405f94:	b	405f28 <ferror@plt+0x3488>
  405f98:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  405f9c:	add	x0, x0, #0x3e0
  405fa0:	b	405f50 <ferror@plt+0x34b0>
  405fa4:	bl	407c98 <ferror@plt+0x51f8>
  405fa8:	tbnz	w0, #31, 405f58 <ferror@plt+0x34b8>
  405fac:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405fb0:	str	w0, [x1, #1676]
  405fb4:	b	405f0c <ferror@plt+0x346c>
  405fb8:	ldr	x1, [x19, #8]
  405fbc:	ldr	x3, [x1, #8]
  405fc0:	b	405f70 <ferror@plt+0x34d0>
  405fc4:	cmp	w21, #0x2b
  405fc8:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  405fcc:	b.ne	405fdc <ferror@plt+0x353c>  // b.any
  405fd0:	ldr	w2, [x1, #1676]
  405fd4:	orr	w0, w2, w0
  405fd8:	b	405fb0 <ferror@plt+0x3510>
  405fdc:	ldr	w2, [x1, #1676]
  405fe0:	bic	w0, w2, w0
  405fe4:	b	405fb0 <ferror@plt+0x3510>
  405fe8:	stp	x29, x30, [sp, #-32]!
  405fec:	mov	w3, #0x3                   	// #3
  405ff0:	mov	x29, sp
  405ff4:	ldr	x0, [x2]
  405ff8:	stp	x19, x20, [sp, #16]
  405ffc:	mov	w20, w1
  406000:	mov	x19, x2
  406004:	add	x0, x0, #0x8
  406008:	mov	w2, #0x1                   	// #1
  40600c:	bl	403e34 <ferror@plt+0x1394>
  406010:	tst	w0, #0xff
  406014:	b.ne	406050 <ferror@plt+0x35b0>  // b.any
  406018:	cmp	w20, #0x1
  40601c:	b.le	406044 <ferror@plt+0x35a4>
  406020:	ldr	x0, [x19, #8]
  406024:	cmp	w20, #0x2
  406028:	ldr	x0, [x0, #8]
  40602c:	b.eq	406048 <ferror@plt+0x35a8>  // b.none
  406030:	ldr	x1, [x19, #16]
  406034:	ldr	x1, [x1, #8]
  406038:	ldp	x19, x20, [sp, #16]
  40603c:	ldp	x29, x30, [sp], #32
  406040:	b	40b24c <ferror@plt+0x87ac>
  406044:	mov	x0, #0x0                   	// #0
  406048:	mov	x1, #0x0                   	// #0
  40604c:	b	406038 <ferror@plt+0x3598>
  406050:	ldp	x19, x20, [sp, #16]
  406054:	ldp	x29, x30, [sp], #32
  406058:	ret
  40605c:	stp	x29, x30, [sp, #-32]!
  406060:	mov	w3, #0x3                   	// #3
  406064:	mov	x29, sp
  406068:	ldr	x0, [x2]
  40606c:	stp	x19, x20, [sp, #16]
  406070:	mov	w20, w1
  406074:	mov	x19, x2
  406078:	add	x0, x0, #0x8
  40607c:	mov	w2, #0x1                   	// #1
  406080:	bl	403e34 <ferror@plt+0x1394>
  406084:	tst	w0, #0xff
  406088:	b.ne	4060c4 <ferror@plt+0x3624>  // b.any
  40608c:	cmp	w20, #0x1
  406090:	b.le	4060b8 <ferror@plt+0x3618>
  406094:	ldr	x0, [x19, #8]
  406098:	cmp	w20, #0x2
  40609c:	ldr	x0, [x0, #8]
  4060a0:	b.eq	4060bc <ferror@plt+0x361c>  // b.none
  4060a4:	ldr	x1, [x19, #16]
  4060a8:	ldr	x1, [x1, #8]
  4060ac:	ldp	x19, x20, [sp, #16]
  4060b0:	ldp	x29, x30, [sp], #32
  4060b4:	b	40b2f0 <ferror@plt+0x8850>
  4060b8:	mov	x0, #0x0                   	// #0
  4060bc:	mov	x1, #0x0                   	// #0
  4060c0:	b	4060ac <ferror@plt+0x360c>
  4060c4:	ldp	x19, x20, [sp, #16]
  4060c8:	ldp	x29, x30, [sp], #32
  4060cc:	ret
  4060d0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4060d4:	add	x1, x1, #0x708
  4060d8:	mov	x2, x0
  4060dc:	add	x0, x1, #0x30
  4060e0:	ldr	x1, [x0, #16]
  4060e4:	cmp	x1, x2
  4060e8:	b.eq	40610c <ferror@plt+0x366c>  // b.none
  4060ec:	ldr	x1, [x0, #24]
  4060f0:	add	x3, x0, #0x18
  4060f4:	cbnz	x1, 406110 <ferror@plt+0x3670>
  4060f8:	adrp	x1, 403000 <ferror@plt+0x560>
  4060fc:	add	x1, x1, #0x5d0
  406100:	add	x0, x0, #0x30
  406104:	cmp	x2, x1
  406108:	csel	x0, x0, xzr, eq  // eq = none
  40610c:	ret
  406110:	mov	x0, x3
  406114:	b	4060e0 <ferror@plt+0x3640>
  406118:	stp	x29, x30, [sp, #-96]!
  40611c:	cmp	w1, #0x1
  406120:	mov	x29, sp
  406124:	stp	x19, x20, [sp, #16]
  406128:	mov	x19, x0
  40612c:	str	x0, [sp, #72]
  406130:	ldr	x0, [x0, #16]
  406134:	stp	x21, x22, [sp, #32]
  406138:	stp	x23, x24, [sp, #48]
  40613c:	str	x0, [sp, #80]
  406140:	str	wzr, [sp, #88]
  406144:	b.ne	406234 <ferror@plt+0x3794>  // b.any
  406148:	adrp	x0, 404000 <ferror@plt+0x1560>
  40614c:	add	x1, sp, #0x48
  406150:	add	x0, x0, #0xfb0
  406154:	bl	40e1e0 <ferror@plt+0xb740>
  406158:	ldp	x0, x1, [x19, #16]
  40615c:	cmp	x1, x0
  406160:	b.ne	406170 <ferror@plt+0x36d0>  // b.any
  406164:	ldrb	w0, [x19, #80]
  406168:	orr	w0, w0, #0x2
  40616c:	strb	w0, [x19, #80]
  406170:	ldr	x0, [x19, #48]
  406174:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  406178:	ldr	x2, [x19, #32]
  40617c:	add	x1, x1, x0
  406180:	bic	x0, x1, x0
  406184:	add	x20, x20, #0x3db
  406188:	ldr	x1, [x19, #8]
  40618c:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406190:	sub	x3, x0, x1
  406194:	sub	x1, x2, x1
  406198:	cmp	x3, x1
  40619c:	ldrsw	x1, [sp, #88]
  4061a0:	csel	x0, x0, x2, ls  // ls = plast
  4061a4:	stp	x0, x0, [x19, #16]
  4061a8:	adrp	x3, 403000 <ferror@plt+0x560>
  4061ac:	ldr	x0, [sp, #80]
  4061b0:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4061b4:	add	x3, x3, #0xe20
  4061b8:	add	x19, x19, #0x800
  4061bc:	mov	x2, #0x8                   	// #8
  4061c0:	bl	402540 <qsort@plt>
  4061c4:	ldr	w0, [sp, #88]
  4061c8:	cmp	w0, #0x0
  4061cc:	b.gt	406254 <ferror@plt+0x37b4>
  4061d0:	ldp	x19, x20, [sp, #16]
  4061d4:	ldp	x21, x22, [sp, #32]
  4061d8:	ldp	x23, x24, [sp, #48]
  4061dc:	ldp	x29, x30, [sp], #96
  4061e0:	ret
  4061e4:	ldr	x0, [x22, x20, lsl #3]
  4061e8:	mov	w1, #0x0                   	// #0
  4061ec:	ldr	x0, [x0, #8]
  4061f0:	bl	40df50 <ferror@plt+0xb4b0>
  4061f4:	cbz	x0, 406218 <ferror@plt+0x3778>
  4061f8:	ldr	w1, [x0, #24]
  4061fc:	cbz	w1, 406218 <ferror@plt+0x3778>
  406200:	add	x1, sp, #0x48
  406204:	bl	404fb0 <ferror@plt+0x2510>
  406208:	add	x20, x20, #0x1
  40620c:	cmp	w21, w20
  406210:	b.gt	4061e4 <ferror@plt+0x3744>
  406214:	b	406158 <ferror@plt+0x36b8>
  406218:	ldr	x0, [x22, x20, lsl #3]
  40621c:	mov	x2, x23
  406220:	mov	w1, #0x0                   	// #0
  406224:	ldr	x3, [x0, #8]
  406228:	ldr	w0, [x24]
  40622c:	bl	403488 <ferror@plt+0x9e8>
  406230:	b	406208 <ferror@plt+0x3768>
  406234:	adrp	x23, 416000 <_obstack_memory_used@@Base+0x14bc>
  406238:	adrp	x24, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40623c:	mov	w21, w1
  406240:	mov	x22, x2
  406244:	add	x23, x23, #0x345
  406248:	add	x24, x24, #0x67c
  40624c:	mov	x20, #0x1                   	// #1
  406250:	b	40620c <ferror@plt+0x376c>
  406254:	ldr	x0, [x19]
  406258:	cbz	x0, 406270 <ferror@plt+0x37d0>
  40625c:	ldr	x1, [sp, #80]
  406260:	ldr	x1, [x1]
  406264:	ldr	x2, [x1, #16]
  406268:	mov	x1, x20
  40626c:	bl	4141fc <ferror@plt+0x1175c>
  406270:	ldr	x0, [sp, #80]
  406274:	ldr	x1, [x0]
  406278:	ldr	w0, [x1, #24]
  40627c:	cmp	w0, #0x1
  406280:	b.eq	40629c <ferror@plt+0x37fc>  // b.none
  406284:	cmp	w0, #0x2
  406288:	b.eq	406300 <ferror@plt+0x3860>  // b.none
  40628c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406290:	mov	w1, #0x0                   	// #0
  406294:	add	x2, x2, #0x41b
  406298:	b	406318 <ferror@plt+0x3878>
  40629c:	ldr	w2, [x21, #1676]
  4062a0:	ldr	x0, [x19]
  4062a4:	tbz	w2, #2, 4062e8 <ferror@plt+0x3848>
  4062a8:	cbz	x0, 4062cc <ferror@plt+0x382c>
  4062ac:	adrp	x2, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4062b0:	ldr	x3, [x1, #32]
  4062b4:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4062b8:	ldr	x4, [x2, #3488]
  4062bc:	ldr	x2, [x1, #3432]
  4062c0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4062c4:	add	x1, x1, #0x3e0
  4062c8:	bl	4141fc <ferror@plt+0x1175c>
  4062cc:	ldr	w0, [sp, #88]
  4062d0:	sub	w0, w0, #0x1
  4062d4:	str	w0, [sp, #88]
  4062d8:	ldr	x0, [sp, #80]
  4062dc:	add	x0, x0, #0x8
  4062e0:	str	x0, [sp, #80]
  4062e4:	b	4061c4 <ferror@plt+0x3724>
  4062e8:	cbz	x0, 4062cc <ferror@plt+0x382c>
  4062ec:	ldr	x2, [x1, #32]
  4062f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4062f4:	add	x1, x1, #0x3bc
  4062f8:	bl	4141fc <ferror@plt+0x1175c>
  4062fc:	b	4062cc <ferror@plt+0x382c>
  406300:	ldr	x0, [x1, #32]
  406304:	bl	4060d0 <ferror@plt+0x3630>
  406308:	mov	x1, x0
  40630c:	cbnz	x0, 406328 <ferror@plt+0x3888>
  406310:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406314:	add	x2, x2, #0x3e8
  406318:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40631c:	ldr	w0, [x0, #1660]
  406320:	bl	403488 <ferror@plt+0x9e8>
  406324:	bl	4027d0 <abort@plt>
  406328:	ldr	x0, [x19]
  40632c:	cbz	x0, 4062cc <ferror@plt+0x382c>
  406330:	ldr	x2, [x1]
  406334:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  406338:	add	x1, x1, #0x654
  40633c:	b	4062f8 <ferror@plt+0x3858>
  406340:	stp	x29, x30, [sp, #-32]!
  406344:	mov	x29, sp
  406348:	stp	x19, x20, [sp, #16]
  40634c:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  406350:	add	x19, x19, #0x708
  406354:	mov	x20, x0
  406358:	add	x19, x19, #0x30
  40635c:	ldr	x0, [x19]
  406360:	cbnz	x0, 406378 <ferror@plt+0x38d8>
  406364:	add	x19, x19, #0x18
  406368:	mov	x0, x19
  40636c:	ldp	x19, x20, [sp, #16]
  406370:	ldp	x29, x30, [sp], #32
  406374:	ret
  406378:	mov	x1, x20
  40637c:	bl	402860 <strcmp@plt>
  406380:	cbz	w0, 406368 <ferror@plt+0x38c8>
  406384:	add	x19, x19, #0x18
  406388:	b	40635c <ferror@plt+0x38bc>
  40638c:	stp	x29, x30, [sp, #-48]!
  406390:	mov	w3, #0xffffffff            	// #-1
  406394:	mov	x29, sp
  406398:	stp	x21, x22, [sp, #32]
  40639c:	mov	x22, x0
  4063a0:	ldr	x0, [x2]
  4063a4:	stp	x19, x20, [sp, #16]
  4063a8:	mov	w20, w1
  4063ac:	mov	x19, x2
  4063b0:	add	x0, x0, #0x8
  4063b4:	mov	w2, #0x2                   	// #2
  4063b8:	bl	403e34 <ferror@plt+0x1394>
  4063bc:	tst	w0, #0xff
  4063c0:	b.ne	4064c8 <ferror@plt+0x3a28>  // b.any
  4063c4:	ldr	x0, [x19, #8]
  4063c8:	ldr	w1, [x0]
  4063cc:	cmp	w1, #0x1
  4063d0:	b.eq	406414 <ferror@plt+0x3974>  // b.none
  4063d4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4063d8:	cmp	w20, #0x0
  4063dc:	ldr	w0, [x0, #1660]
  4063e0:	b.le	406408 <ferror@plt+0x3968>
  4063e4:	ldr	x1, [x19]
  4063e8:	ldr	x3, [x1, #8]
  4063ec:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4063f0:	add	x2, x2, #0x31d
  4063f4:	mov	w1, #0x0                   	// #0
  4063f8:	ldp	x19, x20, [sp, #16]
  4063fc:	ldp	x21, x22, [sp, #32]
  406400:	ldp	x29, x30, [sp], #48
  406404:	b	403488 <ferror@plt+0x9e8>
  406408:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  40640c:	add	x3, x3, #0x3df
  406410:	b	4063ec <ferror@plt+0x394c>
  406414:	cmp	w20, #0x1
  406418:	b.le	406458 <ferror@plt+0x39b8>
  40641c:	ldr	x21, [x0, #8]
  406420:	mov	x0, x21
  406424:	bl	406340 <ferror@plt+0x38a0>
  406428:	ldr	x3, [x0, #16]
  40642c:	adrp	x1, 403000 <ferror@plt+0x560>
  406430:	add	x1, x1, #0x5d0
  406434:	cmp	x3, x1
  406438:	b.ne	406464 <ferror@plt+0x39c4>  // b.any
  40643c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406440:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406444:	mov	x3, x21
  406448:	add	x2, x2, #0x450
  40644c:	ldr	w0, [x0, #1660]
  406450:	mov	w1, #0x0                   	// #0
  406454:	b	4063f8 <ferror@plt+0x3958>
  406458:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  40645c:	add	x21, x21, #0x3df
  406460:	b	406420 <ferror@plt+0x3980>
  406464:	ldrb	w0, [x0, #8]
  406468:	tbz	w0, #1, 4064b4 <ferror@plt+0x3a14>
  40646c:	add	x2, x19, #0x8
  406470:	sub	w1, w20, #0x1
  406474:	mov	x0, x22
  406478:	mov	x16, x3
  40647c:	ldp	x19, x20, [sp, #16]
  406480:	ldp	x21, x22, [sp, #32]
  406484:	ldp	x29, x30, [sp], #48
  406488:	br	x16
  40648c:	ldr	x2, [x19, x1, lsl #3]
  406490:	ldr	w5, [x2]
  406494:	cmp	w5, #0x1
  406498:	b.eq	4064a4 <ferror@plt+0x3a04>  // b.none
  40649c:	str	w4, [x2]
  4064a0:	str	x0, [x2, #8]
  4064a4:	add	x1, x1, #0x1
  4064a8:	cmp	w20, w1
  4064ac:	b.gt	40648c <ferror@plt+0x39ec>
  4064b0:	b	40646c <ferror@plt+0x39cc>
  4064b4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4064b8:	mov	x1, #0x2                   	// #2
  4064bc:	add	x0, x0, #0x3df
  4064c0:	mov	w4, #0x1                   	// #1
  4064c4:	b	4064a8 <ferror@plt+0x3a08>
  4064c8:	ldp	x19, x20, [sp, #16]
  4064cc:	ldp	x21, x22, [sp, #32]
  4064d0:	ldp	x29, x30, [sp], #48
  4064d4:	ret
  4064d8:	stp	x29, x30, [sp, #-32]!
  4064dc:	mov	x29, sp
  4064e0:	str	x19, [sp, #16]
  4064e4:	mov	x19, x1
  4064e8:	mov	w1, w2
  4064ec:	bl	40df50 <ferror@plt+0xb4b0>
  4064f0:	mov	w1, #0x2                   	// #2
  4064f4:	ldrb	w3, [x19, #8]
  4064f8:	str	w1, [x0, #24]
  4064fc:	ldrb	w1, [x0, #8]
  406500:	ubfx	x2, x3, #2, #1
  406504:	ubfx	x3, x3, #1, #1
  406508:	and	w1, w1, #0xfffffff3
  40650c:	ubfiz	w3, w3, #2, #6
  406510:	ubfiz	w2, w2, #3, #5
  406514:	orr	w2, w2, w3
  406518:	orr	w2, w2, w1
  40651c:	strb	w2, [x0, #8]
  406520:	ldr	x1, [x19, #16]
  406524:	ldr	x19, [sp, #16]
  406528:	str	x1, [x0, #32]
  40652c:	ldp	x29, x30, [sp], #32
  406530:	ret
  406534:	stp	x29, x30, [sp, #-32]!
  406538:	mov	x29, sp
  40653c:	stp	x19, x20, [sp, #16]
  406540:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406544:	add	x20, x20, #0x698
  406548:	cbz	x0, 406568 <ferror@plt+0x3ac8>
  40654c:	mov	x19, x0
  406550:	ldrb	w0, [x0]
  406554:	cbnz	w0, 406570 <ferror@plt+0x3ad0>
  406558:	strb	wzr, [x20, #8]
  40655c:	ldp	x19, x20, [sp, #16]
  406560:	ldp	x29, x30, [sp], #32
  406564:	ret
  406568:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x4bc>
  40656c:	add	x19, x19, #0x2ae
  406570:	mov	x0, x19
  406574:	bl	402450 <strlen@plt>
  406578:	add	x2, x20, #0x10
  40657c:	mov	x1, x0
  406580:	mov	x0, x19
  406584:	bl	4027e0 <re_compile_pattern@plt>
  406588:	mov	x4, x0
  40658c:	cbz	x0, 4065a8 <ferror@plt+0x3b08>
  406590:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406594:	mov	x3, x19
  406598:	add	x2, x2, #0x467
  40659c:	mov	w1, #0x0                   	// #0
  4065a0:	mov	w0, #0x1                   	// #1
  4065a4:	bl	403488 <ferror@plt+0x9e8>
  4065a8:	add	x1, x20, #0x50
  4065ac:	ldr	w2, [x20, #80]
  4065b0:	add	x0, x20, #0x10
  4065b4:	ldp	x3, x4, [x1, #8]
  4065b8:	bl	4026c0 <re_set_registers@plt>
  4065bc:	mov	w0, #0x1                   	// #1
  4065c0:	strb	w0, [x20, #8]
  4065c4:	b	40655c <ferror@plt+0x3abc>
  4065c8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4065cc:	add	x0, x0, #0x698
  4065d0:	add	x1, x0, #0x50
  4065d4:	add	x0, x0, #0x10
  4065d8:	b	403bb8 <ferror@plt+0x1118>
  4065dc:	stp	x29, x30, [sp, #-96]!
  4065e0:	cmp	x1, #0x0
  4065e4:	mov	x29, sp
  4065e8:	stp	x21, x22, [sp, #32]
  4065ec:	mov	x21, x0
  4065f0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4065f4:	add	x0, x0, #0x3df
  4065f8:	stp	x19, x20, [sp, #16]
  4065fc:	csel	x0, x0, x1, eq  // eq = none
  406600:	mov	w20, w2
  406604:	stp	x23, x24, [sp, #48]
  406608:	mov	x23, x1
  40660c:	stp	x25, x26, [sp, #64]
  406610:	stp	x27, x28, [sp, #80]
  406614:	bl	413ec4 <ferror@plt+0x11424>
  406618:	mov	w1, w20
  40661c:	mov	x19, x0
  406620:	mov	x0, x21
  406624:	bl	40df50 <ferror@plt+0xb4b0>
  406628:	mov	x20, x0
  40662c:	ldr	w0, [x0, #24]
  406630:	cmp	w0, #0x1
  406634:	b.ne	406640 <ferror@plt+0x3ba0>  // b.any
  406638:	ldr	x0, [x20, #32]
  40663c:	bl	4028c0 <free@plt>
  406640:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406644:	add	x22, x22, #0x698
  406648:	mov	w0, #0x1                   	// #1
  40664c:	str	w0, [x20, #24]
  406650:	str	x19, [x20, #32]
  406654:	ldrb	w0, [x22, #8]
  406658:	cbz	w0, 40672c <ferror@plt+0x3c8c>
  40665c:	cbz	x23, 40672c <ferror@plt+0x3c8c>
  406660:	mov	x0, x19
  406664:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x14bc>
  406668:	adrp	x26, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40666c:	bl	402450 <strlen@plt>
  406670:	add	x27, x22, #0x50
  406674:	mov	x23, x0
  406678:	add	x25, x25, #0x49e
  40667c:	add	x26, x26, #0x67c
  406680:	mov	w20, #0x0                   	// #0
  406684:	mov	x5, x27
  406688:	sub	w4, w23, w20
  40668c:	mov	w3, w20
  406690:	mov	w2, w23
  406694:	mov	x1, x19
  406698:	add	x0, x22, #0x10
  40669c:	bl	402720 <re_search@plt>
  4066a0:	tbz	w0, #31, 4066e0 <ferror@plt+0x3c40>
  4066a4:	cmn	w0, #0x2
  4066a8:	b.ne	40672c <ferror@plt+0x3c8c>  // b.any
  4066ac:	mov	x3, x21
  4066b0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4066b4:	ldp	x19, x20, [sp, #16]
  4066b8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4066bc:	ldp	x21, x22, [sp, #32]
  4066c0:	add	x2, x2, #0x4d1
  4066c4:	ldp	x23, x24, [sp, #48]
  4066c8:	mov	w1, #0x0                   	// #0
  4066cc:	ldp	x25, x26, [sp, #64]
  4066d0:	ldp	x27, x28, [sp, #80]
  4066d4:	ldp	x29, x30, [sp], #96
  4066d8:	ldr	w0, [x0, #1660]
  4066dc:	b	403488 <ferror@plt+0x9e8>
  4066e0:	ldp	x1, x2, [x27, #8]
  4066e4:	ldr	w20, [x2]
  4066e8:	ldr	w2, [x1]
  4066ec:	cmp	w2, w20
  4066f0:	b.ne	4066fc <ferror@plt+0x3c5c>  // b.any
  4066f4:	add	w20, w0, #0x1
  4066f8:	b	406684 <ferror@plt+0x3be4>
  4066fc:	sxtw	x24, w20
  406700:	ldrb	w28, [x19, w20, sxtw]
  406704:	ldr	w0, [x26]
  406708:	mov	x3, x21
  40670c:	mov	x2, x25
  406710:	strb	wzr, [x19, x24]
  406714:	ldrsw	x4, [x1]
  406718:	mov	w1, #0x0                   	// #0
  40671c:	add	x4, x19, x4
  406720:	bl	403488 <ferror@plt+0x9e8>
  406724:	strb	w28, [x19, x24]
  406728:	b	406684 <ferror@plt+0x3be4>
  40672c:	ldp	x19, x20, [sp, #16]
  406730:	ldp	x21, x22, [sp, #32]
  406734:	ldp	x23, x24, [sp, #48]
  406738:	ldp	x25, x26, [sp, #64]
  40673c:	ldp	x27, x28, [sp, #80]
  406740:	ldp	x29, x30, [sp], #96
  406744:	ret
  406748:	stp	x29, x30, [sp, #-48]!
  40674c:	mov	w3, #0x3                   	// #3
  406750:	mov	x29, sp
  406754:	stp	x19, x20, [sp, #16]
  406758:	mov	w19, w0
  40675c:	mov	x20, x1
  406760:	ldr	x0, [x1]
  406764:	mov	w1, w19
  406768:	str	x21, [sp, #32]
  40676c:	mov	w21, w2
  406770:	add	x0, x0, #0x8
  406774:	mov	w2, #0x2                   	// #2
  406778:	bl	403e34 <ferror@plt+0x1394>
  40677c:	tst	w0, #0xff
  406780:	b.ne	406894 <ferror@plt+0x3df4>  // b.any
  406784:	ldr	x4, [x20, #8]
  406788:	ldr	w0, [x4]
  40678c:	cmp	w0, #0x1
  406790:	b.eq	4067d4 <ferror@plt+0x3d34>  // b.none
  406794:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406798:	cmp	w19, #0x0
  40679c:	ldr	w0, [x0, #1660]
  4067a0:	b.le	4067c8 <ferror@plt+0x3d28>
  4067a4:	ldr	x1, [x20]
  4067a8:	ldr	x3, [x1, #8]
  4067ac:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4067b0:	ldp	x19, x20, [sp, #16]
  4067b4:	add	x2, x2, #0x31d
  4067b8:	ldr	x21, [sp, #32]
  4067bc:	mov	w1, #0x0                   	// #0
  4067c0:	ldp	x29, x30, [sp], #48
  4067c4:	b	403488 <ferror@plt+0x9e8>
  4067c8:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4067cc:	add	x3, x3, #0x3df
  4067d0:	b	4067ac <ferror@plt+0x3d0c>
  4067d4:	cmp	w19, #0x2
  4067d8:	b.ne	4067fc <ferror@plt+0x3d5c>  // b.any
  4067dc:	ldr	x0, [x4, #8]
  4067e0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4067e4:	mov	w2, w21
  4067e8:	add	x1, x1, #0x3df
  4067ec:	ldp	x19, x20, [sp, #16]
  4067f0:	ldr	x21, [sp, #32]
  4067f4:	ldp	x29, x30, [sp], #48
  4067f8:	b	4065dc <ferror@plt+0x3b3c>
  4067fc:	ldr	x1, [x20, #16]
  406800:	ldr	w0, [x1]
  406804:	cmp	w0, #0x1
  406808:	b.eq	406830 <ferror@plt+0x3d90>  // b.none
  40680c:	cmp	w0, #0x2
  406810:	b.eq	406858 <ferror@plt+0x3db8>  // b.none
  406814:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406818:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40681c:	add	x2, x2, #0x505
  406820:	mov	w1, #0x0                   	// #0
  406824:	ldr	w0, [x0, #1660]
  406828:	bl	403488 <ferror@plt+0x9e8>
  40682c:	bl	4027d0 <abort@plt>
  406830:	cmp	w19, #0x1
  406834:	b.le	406848 <ferror@plt+0x3da8>
  406838:	ldr	x1, [x1, #8]
  40683c:	ldr	x0, [x4, #8]
  406840:	mov	w2, w21
  406844:	b	4067ec <ferror@plt+0x3d4c>
  406848:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40684c:	add	x0, x0, #0x3df
  406850:	mov	x1, x0
  406854:	b	406840 <ferror@plt+0x3da0>
  406858:	ldr	x0, [x1, #8]
  40685c:	bl	4060d0 <ferror@plt+0x3630>
  406860:	mov	x1, x0
  406864:	cbz	x0, 406894 <ferror@plt+0x3df4>
  406868:	cmp	w19, #0x1
  40686c:	b.le	406888 <ferror@plt+0x3de8>
  406870:	ldr	x0, [x4, #8]
  406874:	mov	w2, w21
  406878:	ldp	x19, x20, [sp, #16]
  40687c:	ldr	x21, [sp, #32]
  406880:	ldp	x29, x30, [sp], #48
  406884:	b	4064d8 <ferror@plt+0x3a38>
  406888:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40688c:	add	x0, x2, #0x3df
  406890:	b	406874 <ferror@plt+0x3dd4>
  406894:	ldp	x19, x20, [sp, #16]
  406898:	ldr	x21, [sp, #32]
  40689c:	ldp	x29, x30, [sp], #48
  4068a0:	ret
  4068a4:	mov	w0, w1
  4068a8:	mov	x1, x2
  4068ac:	mov	w2, #0x3                   	// #3
  4068b0:	b	406748 <ferror@plt+0x3ca8>
  4068b4:	mov	w0, w1
  4068b8:	mov	x1, x2
  4068bc:	mov	w2, #0x1                   	// #1
  4068c0:	b	406748 <ferror@plt+0x3ca8>
  4068c4:	stp	x29, x30, [sp, #-64]!
  4068c8:	mov	x29, sp
  4068cc:	stp	x19, x20, [sp, #16]
  4068d0:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  4068d4:	add	x19, x19, #0x708
  4068d8:	add	x20, x19, #0x30
  4068dc:	stp	x21, x22, [sp, #32]
  4068e0:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4068e4:	add	x22, x22, #0x680
  4068e8:	str	x23, [sp, #48]
  4068ec:	adrp	x23, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4068f0:	add	x23, x23, #0x684
  4068f4:	ldr	x0, [x20]
  4068f8:	cbnz	x0, 406924 <ferror@plt+0x3e84>
  4068fc:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406900:	add	x19, x19, #0x480
  406904:	add	x20, x20, #0x680
  406908:	ldr	x1, [x19, #16]
  40690c:	cbnz	x1, 406994 <ferror@plt+0x3ef4>
  406910:	ldp	x19, x20, [sp, #16]
  406914:	ldp	x21, x22, [sp, #32]
  406918:	ldr	x23, [sp, #48]
  40691c:	ldp	x29, x30, [sp], #64
  406920:	ret
  406924:	ldr	w1, [x22]
  406928:	cbz	w1, 406934 <ferror@plt+0x3e94>
  40692c:	ldrb	w1, [x20, #8]
  406930:	tbnz	w1, #0, 40697c <ferror@plt+0x3edc>
  406934:	ldr	w1, [x23]
  406938:	cbz	w1, 406984 <ferror@plt+0x3ee4>
  40693c:	bl	402450 <strlen@plt>
  406940:	add	x0, x0, #0x4
  406944:	bl	413d0c <ferror@plt+0x1126c>
  406948:	mov	x21, x0
  40694c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  406950:	add	x1, x1, #0x53c
  406954:	bl	402960 <strcpy@plt>
  406958:	ldr	x1, [x20]
  40695c:	mov	x0, x21
  406960:	bl	402680 <strcat@plt>
  406964:	mov	x1, x20
  406968:	mov	w2, #0x1                   	// #1
  40696c:	mov	x0, x21
  406970:	bl	4064d8 <ferror@plt+0x3a38>
  406974:	mov	x0, x21
  406978:	bl	4028c0 <free@plt>
  40697c:	add	x20, x20, #0x18
  406980:	b	4068f4 <ferror@plt+0x3e54>
  406984:	mov	x1, x20
  406988:	mov	w2, #0x1                   	// #1
  40698c:	bl	4064d8 <ferror@plt+0x3a38>
  406990:	b	40697c <ferror@plt+0x3edc>
  406994:	ldr	w0, [x20]
  406998:	cbz	w0, 4069b4 <ferror@plt+0x3f14>
  40699c:	ldr	x0, [x19]
  4069a0:	cbz	x0, 4069ac <ferror@plt+0x3f0c>
  4069a4:	mov	w2, #0x1                   	// #1
  4069a8:	bl	4065dc <ferror@plt+0x3b3c>
  4069ac:	add	x19, x19, #0x18
  4069b0:	b	406908 <ferror@plt+0x3e68>
  4069b4:	ldr	x0, [x19, #8]
  4069b8:	b	4069a0 <ferror@plt+0x3f00>
  4069bc:	adrp	x2, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4069c0:	add	x2, x2, #0x698
  4069c4:	mov	w3, w0
  4069c8:	strb	wzr, [x2, #359]
  4069cc:	tbz	w0, #31, 406a20 <ferror@plt+0x3f80>
  4069d0:	neg	w3, w0
  4069d4:	mov	w4, #0x1                   	// #1
  4069d8:	add	x0, x2, #0x167
  4069dc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4069e0:	add	x2, x2, #0x708
  4069e4:	add	x2, x2, #0x4c8
  4069e8:	udiv	w5, w3, w1
  4069ec:	mov	x6, x0
  4069f0:	msub	w7, w5, w1, w3
  4069f4:	ldrb	w7, [x2, x7]
  4069f8:	strb	w7, [x0, #-1]!
  4069fc:	mov	w7, w3
  406a00:	cmp	w1, w7
  406a04:	mov	w3, w5
  406a08:	b.ls	4069e8 <ferror@plt+0x3f48>  // b.plast
  406a0c:	cbz	w4, 406a1c <ferror@plt+0x3f7c>
  406a10:	mov	w1, #0x2d                  	// #45
  406a14:	sturb	w1, [x0, #-1]
  406a18:	sub	x0, x6, #0x2
  406a1c:	ret
  406a20:	mov	w4, #0x0                   	// #0
  406a24:	b	4069d8 <ferror@plt+0x3f38>
  406a28:	stp	x29, x30, [sp, #-48]!
  406a2c:	mov	x29, sp
  406a30:	stp	x19, x20, [sp, #16]
  406a34:	mov	x19, x0
  406a38:	mov	w0, w1
  406a3c:	mov	w1, #0xa                   	// #10
  406a40:	str	x21, [sp, #32]
  406a44:	bl	4069bc <ferror@plt+0x3f1c>
  406a48:	mov	x21, x0
  406a4c:	bl	402450 <strlen@plt>
  406a50:	mov	x20, x0
  406a54:	ldp	x1, x0, [x19, #24]
  406a58:	sub	x0, x0, x1
  406a5c:	cmp	x20, x0
  406a60:	b.ls	406a70 <ferror@plt+0x3fd0>  // b.plast
  406a64:	mov	x1, x20
  406a68:	mov	x0, x19
  406a6c:	bl	414990 <_obstack_newchunk@@Base>
  406a70:	ldr	x0, [x19, #24]
  406a74:	mov	x2, x20
  406a78:	mov	x1, x21
  406a7c:	bl	402420 <memcpy@plt>
  406a80:	ldr	x0, [x19, #24]
  406a84:	ldr	x21, [sp, #32]
  406a88:	add	x0, x0, x20
  406a8c:	str	x0, [x19, #24]
  406a90:	ldp	x19, x20, [sp, #16]
  406a94:	ldp	x29, x30, [sp], #48
  406a98:	ret
  406a9c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406aa0:	ldr	w1, [x1, #1692]
  406aa4:	b	406a28 <ferror@plt+0x3f88>
  406aa8:	stp	x29, x30, [sp, #-48]!
  406aac:	mov	w3, #0x2                   	// #2
  406ab0:	mov	x29, sp
  406ab4:	stp	x19, x20, [sp, #16]
  406ab8:	mov	x20, x0
  406abc:	mov	x19, x2
  406ac0:	ldr	x0, [x2]
  406ac4:	mov	w2, w3
  406ac8:	str	x21, [sp, #32]
  406acc:	mov	w21, w1
  406ad0:	add	x0, x0, #0x8
  406ad4:	bl	403e34 <ferror@plt+0x1394>
  406ad8:	tst	w0, #0xff
  406adc:	b.ne	406b18 <ferror@plt+0x4078>  // b.any
  406ae0:	cmp	w21, #0x1
  406ae4:	b.le	406b0c <ferror@plt+0x406c>
  406ae8:	ldr	x0, [x19, #8]
  406aec:	ldr	x0, [x0, #8]
  406af0:	bl	402450 <strlen@plt>
  406af4:	mov	w1, w0
  406af8:	mov	x0, x20
  406afc:	ldp	x19, x20, [sp, #16]
  406b00:	ldr	x21, [sp, #32]
  406b04:	ldp	x29, x30, [sp], #48
  406b08:	b	406a28 <ferror@plt+0x3f88>
  406b0c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  406b10:	add	x0, x1, #0x3df
  406b14:	b	406af0 <ferror@plt+0x4050>
  406b18:	ldp	x19, x20, [sp, #16]
  406b1c:	ldr	x21, [sp, #32]
  406b20:	ldp	x29, x30, [sp], #48
  406b24:	ret
  406b28:	stp	x29, x30, [sp, #-48]!
  406b2c:	mov	w3, #0x3                   	// #3
  406b30:	mov	x29, sp
  406b34:	stp	x21, x22, [sp, #32]
  406b38:	mov	x22, x0
  406b3c:	mov	w21, w1
  406b40:	ldr	x0, [x2]
  406b44:	stp	x19, x20, [sp, #16]
  406b48:	mov	x20, x2
  406b4c:	add	x0, x0, #0x8
  406b50:	mov	w2, w3
  406b54:	bl	403e34 <ferror@plt+0x1394>
  406b58:	tst	w0, #0xff
  406b5c:	b.eq	406b80 <ferror@plt+0x40e0>  // b.none
  406b60:	cmp	w21, #0x2
  406b64:	b.ne	406bd4 <ferror@plt+0x4134>  // b.any
  406b68:	mov	w1, #0x0                   	// #0
  406b6c:	mov	x0, x22
  406b70:	ldp	x19, x20, [sp, #16]
  406b74:	ldp	x21, x22, [sp, #32]
  406b78:	ldp	x29, x30, [sp], #48
  406b7c:	b	406a28 <ferror@plt+0x3f88>
  406b80:	cmp	w21, #0x1
  406b84:	b.le	406bb8 <ferror@plt+0x4118>
  406b88:	ldr	x0, [x20, #8]
  406b8c:	cmp	w21, #0x2
  406b90:	ldr	x19, [x0, #8]
  406b94:	b.eq	406bc8 <ferror@plt+0x4128>  // b.none
  406b98:	ldr	x0, [x20, #16]
  406b9c:	ldr	x1, [x0, #8]
  406ba0:	mov	x0, x19
  406ba4:	bl	4029b0 <strstr@plt>
  406ba8:	sub	x1, x0, x19
  406bac:	cmp	x0, #0x0
  406bb0:	csinv	w1, w1, wzr, ne  // ne = any
  406bb4:	b	406b6c <ferror@plt+0x40cc>
  406bb8:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  406bbc:	add	x19, x19, #0x3df
  406bc0:	mov	x1, x19
  406bc4:	b	406ba0 <ferror@plt+0x4100>
  406bc8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  406bcc:	add	x1, x1, #0x3df
  406bd0:	b	406ba0 <ferror@plt+0x4100>
  406bd4:	ldp	x19, x20, [sp, #16]
  406bd8:	ldp	x21, x22, [sp, #32]
  406bdc:	ldp	x29, x30, [sp], #48
  406be0:	ret
  406be4:	stp	x29, x30, [sp, #-64]!
  406be8:	mov	w3, #0x2                   	// #2
  406bec:	mov	x29, sp
  406bf0:	stp	x19, x20, [sp, #16]
  406bf4:	mov	x20, x0
  406bf8:	mov	x19, x2
  406bfc:	ldr	x0, [x2]
  406c00:	mov	w2, w3
  406c04:	str	x21, [sp, #32]
  406c08:	mov	w21, w1
  406c0c:	add	x0, x0, #0x8
  406c10:	bl	403e34 <ferror@plt+0x1394>
  406c14:	tst	w0, #0xff
  406c18:	b.ne	406c54 <ferror@plt+0x41b4>  // b.any
  406c1c:	cmp	w21, #0x1
  406c20:	ldr	x0, [x19]
  406c24:	b.le	406c64 <ferror@plt+0x41c4>
  406c28:	ldr	x1, [x19, #8]
  406c2c:	ldr	x1, [x1, #8]
  406c30:	add	x2, sp, #0x3c
  406c34:	add	x0, x0, #0x8
  406c38:	bl	404980 <ferror@plt+0x1ee0>
  406c3c:	tst	w0, #0xff
  406c40:	b.eq	406c54 <ferror@plt+0x41b4>  // b.none
  406c44:	ldr	w1, [sp, #60]
  406c48:	mov	x0, x20
  406c4c:	add	w1, w1, #0x1
  406c50:	bl	406a28 <ferror@plt+0x3f88>
  406c54:	ldp	x19, x20, [sp, #16]
  406c58:	ldr	x21, [sp, #32]
  406c5c:	ldp	x29, x30, [sp], #64
  406c60:	ret
  406c64:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  406c68:	add	x1, x1, #0x3df
  406c6c:	b	406c30 <ferror@plt+0x4190>
  406c70:	stp	x29, x30, [sp, #-32]!
  406c74:	mov	w3, #0x1                   	// #1
  406c78:	mov	x29, sp
  406c7c:	str	x19, [sp, #16]
  406c80:	mov	x19, x0
  406c84:	ldr	x0, [x2]
  406c88:	mov	w2, w3
  406c8c:	add	x0, x0, #0x8
  406c90:	bl	403e34 <ferror@plt+0x1394>
  406c94:	tst	w0, #0xff
  406c98:	b.ne	406cb4 <ferror@plt+0x4214>  // b.any
  406c9c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  406ca0:	ldr	w1, [x0, #3508]
  406ca4:	mov	x0, x19
  406ca8:	ldr	x19, [sp, #16]
  406cac:	ldp	x29, x30, [sp], #32
  406cb0:	b	406a28 <ferror@plt+0x3f88>
  406cb4:	ldr	x19, [sp, #16]
  406cb8:	ldp	x29, x30, [sp], #32
  406cbc:	ret
  406cc0:	stp	x29, x30, [sp, #-64]!
  406cc4:	mov	w3, #0x2                   	// #2
  406cc8:	mov	x29, sp
  406ccc:	stp	x19, x20, [sp, #16]
  406cd0:	mov	x20, x0
  406cd4:	mov	x19, x2
  406cd8:	ldr	x0, [x2]
  406cdc:	mov	w2, w3
  406ce0:	str	x21, [sp, #32]
  406ce4:	mov	w21, w1
  406ce8:	add	x0, x0, #0x8
  406cec:	bl	403e34 <ferror@plt+0x1394>
  406cf0:	tst	w0, #0xff
  406cf4:	b.ne	406d30 <ferror@plt+0x4290>  // b.any
  406cf8:	cmp	w21, #0x1
  406cfc:	ldr	x0, [x19]
  406d00:	b.le	406d40 <ferror@plt+0x42a0>
  406d04:	ldr	x1, [x19, #8]
  406d08:	ldr	x1, [x1, #8]
  406d0c:	add	x2, sp, #0x3c
  406d10:	add	x0, x0, #0x8
  406d14:	bl	404980 <ferror@plt+0x1ee0>
  406d18:	tst	w0, #0xff
  406d1c:	b.eq	406d30 <ferror@plt+0x4290>  // b.none
  406d20:	ldr	w1, [sp, #60]
  406d24:	mov	x0, x20
  406d28:	sub	w1, w1, #0x1
  406d2c:	bl	406a28 <ferror@plt+0x3f88>
  406d30:	ldp	x19, x20, [sp, #16]
  406d34:	ldr	x21, [sp, #32]
  406d38:	ldp	x29, x30, [sp], #64
  406d3c:	ret
  406d40:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  406d44:	add	x1, x1, #0x3df
  406d48:	b	406d0c <ferror@plt+0x426c>
  406d4c:	stp	x29, x30, [sp, #-32]!
  406d50:	mov	w3, #0x1                   	// #1
  406d54:	mov	x29, sp
  406d58:	str	x19, [sp, #16]
  406d5c:	mov	x19, x0
  406d60:	ldr	x0, [x2]
  406d64:	mov	w2, w3
  406d68:	add	x0, x0, #0x8
  406d6c:	bl	403e34 <ferror@plt+0x1394>
  406d70:	tst	w0, #0xff
  406d74:	b.ne	406d90 <ferror@plt+0x42f0>  // b.any
  406d78:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  406d7c:	ldr	w1, [x0, #3424]
  406d80:	mov	x0, x19
  406d84:	ldr	x19, [sp, #16]
  406d88:	ldp	x29, x30, [sp], #32
  406d8c:	b	406a28 <ferror@plt+0x3f88>
  406d90:	ldr	x19, [sp, #16]
  406d94:	ldp	x29, x30, [sp], #32
  406d98:	ret
  406d9c:	stp	x29, x30, [sp, #-160]!
  406da0:	mov	w3, #0x4                   	// #4
  406da4:	mov	x29, sp
  406da8:	stp	x19, x20, [sp, #16]
  406dac:	mov	x20, x0
  406db0:	mov	x19, x2
  406db4:	ldr	x0, [x2]
  406db8:	mov	w2, #0x3                   	// #3
  406dbc:	stp	x21, x22, [sp, #32]
  406dc0:	mov	w21, w1
  406dc4:	add	x0, x0, #0x8
  406dc8:	stp	x23, x24, [sp, #48]
  406dcc:	bl	403e34 <ferror@plt+0x1394>
  406dd0:	tst	w0, #0xff
  406dd4:	b.eq	406e00 <ferror@plt+0x4360>  // b.none
  406dd8:	cmp	w21, #0x2
  406ddc:	b.ne	406dec <ferror@plt+0x434c>  // b.any
  406de0:	mov	x0, x20
  406de4:	mov	w1, #0x0                   	// #0
  406de8:	bl	406a28 <ferror@plt+0x3f88>
  406dec:	ldp	x19, x20, [sp, #16]
  406df0:	ldp	x21, x22, [sp, #32]
  406df4:	ldp	x23, x24, [sp, #48]
  406df8:	ldp	x29, x30, [sp], #160
  406dfc:	ret
  406e00:	ldr	x0, [x19, #8]
  406e04:	add	x22, sp, #0x48
  406e08:	ldr	x24, [x0, #8]
  406e0c:	ldr	x0, [x19, #16]
  406e10:	ldr	x23, [x0, #8]
  406e14:	stp	xzr, xzr, [sp, #80]
  406e18:	mov	x0, x23
  406e1c:	stp	xzr, xzr, [sp, #96]
  406e20:	stp	xzr, xzr, [sp, #128]
  406e24:	bl	402450 <strlen@plt>
  406e28:	add	x2, sp, #0x60
  406e2c:	mov	x1, x0
  406e30:	mov	x0, x23
  406e34:	bl	4027e0 <re_compile_pattern@plt>
  406e38:	mov	x4, x0
  406e3c:	cbz	x0, 406e6c <ferror@plt+0x43cc>
  406e40:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406e44:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406e48:	mov	x3, x23
  406e4c:	add	x2, x2, #0x540
  406e50:	ldr	w0, [x0, #1660]
  406e54:	mov	w1, #0x0                   	// #0
  406e58:	bl	403488 <ferror@plt+0x9e8>
  406e5c:	mov	x1, x22
  406e60:	add	x0, sp, #0x60
  406e64:	bl	403bb8 <ferror@plt+0x1118>
  406e68:	b	406dec <ferror@plt+0x434c>
  406e6c:	mov	x0, x24
  406e70:	bl	402450 <strlen@plt>
  406e74:	cmp	w21, #0x3
  406e78:	mov	x1, x24
  406e7c:	mov	x2, x0
  406e80:	csel	x5, x22, xzr, ne  // ne = any
  406e84:	mov	w4, w0
  406e88:	mov	w3, #0x0                   	// #0
  406e8c:	add	x0, sp, #0x60
  406e90:	bl	402720 <re_search@plt>
  406e94:	mov	w1, w0
  406e98:	cmn	w0, #0x2
  406e9c:	b.ne	406ec0 <ferror@plt+0x4420>  // b.any
  406ea0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406ea4:	mov	x3, x23
  406ea8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406eac:	mov	w1, #0x0                   	// #0
  406eb0:	ldr	w0, [x0, #1660]
  406eb4:	add	x2, x2, #0x1ed
  406eb8:	bl	403488 <ferror@plt+0x9e8>
  406ebc:	b	406e5c <ferror@plt+0x43bc>
  406ec0:	cmp	w21, #0x3
  406ec4:	b.ne	406ed4 <ferror@plt+0x4434>  // b.any
  406ec8:	mov	x0, x20
  406ecc:	bl	406a28 <ferror@plt+0x3f88>
  406ed0:	b	406e5c <ferror@plt+0x43bc>
  406ed4:	tbnz	w0, #31, 406e5c <ferror@plt+0x43bc>
  406ed8:	ldr	x0, [x19, #24]
  406edc:	mov	x3, x22
  406ee0:	mov	x1, x24
  406ee4:	ldr	x2, [x0, #8]
  406ee8:	mov	x0, x20
  406eec:	bl	403930 <ferror@plt+0xe90>
  406ef0:	b	406e5c <ferror@plt+0x43bc>
  406ef4:	stp	x29, x30, [sp, #-80]!
  406ef8:	mov	w3, #0x2                   	// #2
  406efc:	mov	x29, sp
  406f00:	stp	x19, x20, [sp, #16]
  406f04:	mov	x19, x0
  406f08:	mov	x20, x2
  406f0c:	ldr	x0, [x2]
  406f10:	mov	w2, w3
  406f14:	stp	x21, x22, [sp, #32]
  406f18:	mov	w22, w1
  406f1c:	add	x0, x0, #0x8
  406f20:	stp	x23, x24, [sp, #48]
  406f24:	str	x25, [sp, #64]
  406f28:	bl	403e34 <ferror@plt+0x1394>
  406f2c:	tst	w0, #0xff
  406f30:	b.ne	4070ac <ferror@plt+0x460c>  // b.any
  406f34:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406f38:	ldr	w0, [x0, #1664]
  406f3c:	cbz	w0, 4070f0 <ferror@plt+0x4650>
  406f40:	cmp	w22, #0x1
  406f44:	b.le	40703c <ferror@plt+0x459c>
  406f48:	ldr	x0, [x20, #8]
  406f4c:	ldr	x20, [x0, #8]
  406f50:	mov	x0, x20
  406f54:	bl	402450 <strlen@plt>
  406f58:	mov	x23, x0
  406f5c:	mov	w24, w0
  406f60:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  406f64:	sxtw	x21, w23
  406f68:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  406f6c:	ldr	w0, [x0, #1660]
  406f70:	add	x2, x2, #0x561
  406f74:	mov	w1, #0x0                   	// #0
  406f78:	bl	403488 <ferror@plt+0x9e8>
  406f7c:	mov	w25, w21
  406f80:	cmp	w21, #0x1
  406f84:	b.gt	407048 <ferror@plt+0x45a8>
  406f88:	ldp	x1, x0, [x19, #24]
  406f8c:	sub	x0, x0, x1
  406f90:	cmp	x0, x21
  406f94:	b.cs	406fa4 <ferror@plt+0x4504>  // b.hs, b.nlast
  406f98:	mov	x1, x21
  406f9c:	mov	x0, x19
  406fa0:	bl	414990 <_obstack_newchunk@@Base>
  406fa4:	ldr	x0, [x19, #24]
  406fa8:	mov	x2, x21
  406fac:	mov	x1, x20
  406fb0:	sub	w23, w23, w25
  406fb4:	bl	402420 <memcpy@plt>
  406fb8:	ldr	x0, [x19, #24]
  406fbc:	add	x0, x0, x21
  406fc0:	str	x0, [x19, #24]
  406fc4:	bl	4025d0 <getpid@plt>
  406fc8:	mov	w1, #0xa                   	// #10
  406fcc:	bl	4069bc <ferror@plt+0x3f1c>
  406fd0:	mov	x22, x0
  406fd4:	bl	402450 <strlen@plt>
  406fd8:	mov	x20, x0
  406fdc:	cmp	w0, w23
  406fe0:	b.gt	407060 <ferror@plt+0x45c0>
  406fe4:	sub	w24, w24, w0
  406fe8:	mov	w23, #0x30                  	// #48
  406fec:	cmp	w24, w21
  406ff0:	ldp	x2, x0, [x19, #24]
  406ff4:	b.gt	4070c4 <ferror@plt+0x4624>
  406ff8:	sxtw	x20, w20
  406ffc:	sub	x0, x0, x2
  407000:	add	x1, x20, #0x1
  407004:	cmp	x0, x1
  407008:	b.cs	407014 <ferror@plt+0x4574>  // b.hs, b.nlast
  40700c:	mov	x0, x19
  407010:	bl	414990 <_obstack_newchunk@@Base>
  407014:	ldr	x0, [x19, #24]
  407018:	mov	x1, x22
  40701c:	mov	x2, x20
  407020:	bl	402420 <memcpy@plt>
  407024:	ldr	x1, [x19, #24]
  407028:	add	x0, x1, x20
  40702c:	add	x0, x0, #0x1
  407030:	str	x0, [x19, #24]
  407034:	strb	wzr, [x1, x20]
  407038:	b	4070ac <ferror@plt+0x460c>
  40703c:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  407040:	add	x20, x20, #0x3df
  407044:	b	406f50 <ferror@plt+0x44b0>
  407048:	sub	x0, x21, #0x1
  40704c:	ldrb	w1, [x20, x0]
  407050:	cmp	w1, #0x58
  407054:	b.ne	406f88 <ferror@plt+0x44e8>  // b.any
  407058:	mov	x21, x0
  40705c:	b	406f7c <ferror@plt+0x44dc>
  407060:	ldp	x2, x0, [x19, #24]
  407064:	sxtw	x23, w23
  407068:	add	x1, x23, #0x1
  40706c:	sub	x0, x0, x2
  407070:	cmp	x0, x1
  407074:	b.cs	407080 <ferror@plt+0x45e0>  // b.hs, b.nlast
  407078:	mov	x0, x19
  40707c:	bl	414990 <_obstack_newchunk@@Base>
  407080:	ldr	x0, [x19, #24]
  407084:	sxtw	x1, w20
  407088:	sub	x1, x1, x23
  40708c:	mov	x2, x23
  407090:	add	x1, x22, x1
  407094:	bl	402420 <memcpy@plt>
  407098:	ldr	x1, [x19, #24]
  40709c:	add	x0, x1, x23
  4070a0:	add	x0, x0, #0x1
  4070a4:	str	x0, [x19, #24]
  4070a8:	strb	wzr, [x1, x23]
  4070ac:	ldp	x19, x20, [sp, #16]
  4070b0:	ldp	x21, x22, [sp, #32]
  4070b4:	ldp	x23, x24, [sp, #48]
  4070b8:	ldr	x25, [sp, #64]
  4070bc:	ldp	x29, x30, [sp], #80
  4070c0:	ret
  4070c4:	cmp	x2, x0
  4070c8:	b.ne	4070d8 <ferror@plt+0x4638>  // b.any
  4070cc:	mov	x0, x19
  4070d0:	mov	x1, #0x1                   	// #1
  4070d4:	bl	414990 <_obstack_newchunk@@Base>
  4070d8:	ldr	x0, [x19, #24]
  4070dc:	add	w21, w21, #0x1
  4070e0:	add	x1, x0, #0x1
  4070e4:	str	x1, [x19, #24]
  4070e8:	strb	w23, [x0]
  4070ec:	b	406fec <ferror@plt+0x454c>
  4070f0:	cmp	w22, #0x0
  4070f4:	b.le	407140 <ferror@plt+0x46a0>
  4070f8:	ldr	x0, [x20]
  4070fc:	cmp	w22, #0x1
  407100:	ldr	x21, [x0, #8]
  407104:	b.eq	407150 <ferror@plt+0x46b0>  // b.none
  407108:	ldr	x0, [x20, #8]
  40710c:	ldr	x20, [x0, #8]
  407110:	mov	x0, x20
  407114:	bl	402450 <strlen@plt>
  407118:	mov	x3, x0
  40711c:	mov	x2, x20
  407120:	mov	x1, x21
  407124:	mov	x0, x19
  407128:	ldp	x19, x20, [sp, #16]
  40712c:	ldp	x21, x22, [sp, #32]
  407130:	ldp	x23, x24, [sp, #48]
  407134:	ldr	x25, [sp, #64]
  407138:	ldp	x29, x30, [sp], #80
  40713c:	b	403be4 <ferror@plt+0x1144>
  407140:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  407144:	add	x21, x21, #0x3df
  407148:	mov	x20, x21
  40714c:	b	407110 <ferror@plt+0x4670>
  407150:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  407154:	add	x20, x20, #0x3df
  407158:	b	407110 <ferror@plt+0x4670>
  40715c:	stp	x29, x30, [sp, #-80]!
  407160:	mov	w3, #0x4                   	// #4
  407164:	mov	x29, sp
  407168:	stp	x19, x20, [sp, #16]
  40716c:	mov	x19, x0
  407170:	mov	w0, #0xa                   	// #10
  407174:	stp	wzr, w0, [sp, #68]
  407178:	mov	w0, #0x1                   	// #1
  40717c:	str	w0, [sp, #76]
  407180:	mov	x20, x2
  407184:	ldr	x0, [x2]
  407188:	mov	w2, #0x2                   	// #2
  40718c:	stp	x21, x22, [sp, #32]
  407190:	mov	w21, w1
  407194:	add	x0, x0, #0x8
  407198:	str	x23, [sp, #48]
  40719c:	bl	403e34 <ferror@plt+0x1394>
  4071a0:	tst	w0, #0xff
  4071a4:	b.ne	407214 <ferror@plt+0x4774>  // b.any
  4071a8:	cmp	w21, #0x2
  4071ac:	b.gt	4071ec <ferror@plt+0x474c>
  4071b0:	ldr	w3, [sp, #72]
  4071b4:	sub	w0, w3, #0x1
  4071b8:	cmp	w0, #0x23
  4071bc:	b.ls	407234 <ferror@plt+0x4794>  // b.plast
  4071c0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4071c4:	cmp	w21, #0x0
  4071c8:	ldr	w0, [x0, #1660]
  4071cc:	b.le	407228 <ferror@plt+0x4788>
  4071d0:	ldr	x1, [x20]
  4071d4:	ldr	x4, [x1, #8]
  4071d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4071dc:	mov	w1, #0x0                   	// #0
  4071e0:	add	x2, x2, #0x581
  4071e4:	bl	403488 <ferror@plt+0x9e8>
  4071e8:	b	407214 <ferror@plt+0x4774>
  4071ec:	ldr	x0, [x20, #16]
  4071f0:	ldr	x1, [x0, #8]
  4071f4:	ldrb	w0, [x1]
  4071f8:	cbz	w0, 4071b0 <ferror@plt+0x4710>
  4071fc:	ldr	x0, [x20]
  407200:	add	x2, sp, #0x48
  407204:	add	x0, x0, #0x8
  407208:	bl	404980 <ferror@plt+0x1ee0>
  40720c:	tst	w0, #0xff
  407210:	b.ne	4071b0 <ferror@plt+0x4710>  // b.any
  407214:	ldp	x19, x20, [sp, #16]
  407218:	ldp	x21, x22, [sp, #32]
  40721c:	ldr	x23, [sp, #48]
  407220:	ldp	x29, x30, [sp], #80
  407224:	ret
  407228:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x14bc>
  40722c:	add	x4, x4, #0x3df
  407230:	b	4071d8 <ferror@plt+0x4738>
  407234:	cmp	w21, #0x3
  407238:	b.gt	407270 <ferror@plt+0x47d0>
  40723c:	ldr	w0, [sp, #76]
  407240:	tbz	w0, #31, 4072a0 <ferror@plt+0x4800>
  407244:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407248:	cmp	w21, #0x0
  40724c:	ldr	w0, [x0, #1660]
  407250:	b.le	407294 <ferror@plt+0x47f4>
  407254:	ldr	x1, [x20]
  407258:	ldr	x3, [x1, #8]
  40725c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  407260:	mov	w1, #0x0                   	// #0
  407264:	add	x2, x2, #0x5a7
  407268:	bl	403488 <ferror@plt+0x9e8>
  40726c:	b	407214 <ferror@plt+0x4774>
  407270:	ldr	x1, [x20, #24]
  407274:	add	x2, sp, #0x4c
  407278:	ldr	x0, [x20]
  40727c:	ldr	x1, [x1, #8]
  407280:	add	x0, x0, #0x8
  407284:	bl	404980 <ferror@plt+0x1ee0>
  407288:	tst	w0, #0xff
  40728c:	b.ne	40723c <ferror@plt+0x479c>  // b.any
  407290:	b	407214 <ferror@plt+0x4774>
  407294:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  407298:	add	x3, x3, #0x3df
  40729c:	b	40725c <ferror@plt+0x47bc>
  4072a0:	cmp	w21, #0x1
  4072a4:	b.le	4072b8 <ferror@plt+0x4818>
  4072a8:	ldr	x0, [x20, #8]
  4072ac:	ldr	x0, [x0, #8]
  4072b0:	ldrb	w1, [x0]
  4072b4:	cbnz	w1, 40739c <ferror@plt+0x48fc>
  4072b8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4072bc:	cmp	w21, #0x0
  4072c0:	ldr	w0, [x0, #1660]
  4072c4:	b.le	407390 <ferror@plt+0x48f0>
  4072c8:	ldr	x1, [x20]
  4072cc:	ldr	x3, [x1, #8]
  4072d0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4072d4:	mov	w1, #0x0                   	// #0
  4072d8:	add	x2, x2, #0x265
  4072dc:	bl	403488 <ferror@plt+0x9e8>
  4072e0:	ldp	w0, w1, [sp, #68]
  4072e4:	cmp	w1, #0x1
  4072e8:	b.ne	4073fc <ferror@plt+0x495c>  // b.any
  4072ec:	tbz	w0, #31, 407328 <ferror@plt+0x4888>
  4072f0:	ldp	x1, x0, [x19, #24]
  4072f4:	cmp	x1, x0
  4072f8:	b.ne	407308 <ferror@plt+0x4868>  // b.any
  4072fc:	mov	x0, x19
  407300:	mov	x1, #0x1                   	// #1
  407304:	bl	414990 <_obstack_newchunk@@Base>
  407308:	ldr	x0, [x19, #24]
  40730c:	add	x1, x0, #0x1
  407310:	str	x1, [x19, #24]
  407314:	mov	w1, #0x2d                  	// #45
  407318:	strb	w1, [x0]
  40731c:	ldr	w0, [sp, #68]
  407320:	neg	w0, w0
  407324:	str	w0, [sp, #68]
  407328:	mov	w20, #0x30                  	// #48
  40732c:	ldr	w0, [sp, #76]
  407330:	ldp	x2, x3, [x19, #24]
  407334:	sub	w1, w0, #0x1
  407338:	str	w1, [sp, #76]
  40733c:	ldr	w1, [sp, #68]
  407340:	sub	w0, w0, w1
  407344:	cmp	w0, #0x0
  407348:	b.gt	4073b0 <ferror@plt+0x4910>
  40734c:	mov	w20, #0x31                  	// #49
  407350:	ldr	w2, [sp, #68]
  407354:	ldr	x1, [x19, #32]
  407358:	sub	w0, w2, #0x1
  40735c:	str	w0, [sp, #68]
  407360:	ldr	x0, [x19, #24]
  407364:	cmp	x1, x0
  407368:	cbnz	w2, 4073d8 <ferror@plt+0x4938>
  40736c:	b.ne	40737c <ferror@plt+0x48dc>  // b.any
  407370:	mov	x0, x19
  407374:	mov	x1, #0x1                   	// #1
  407378:	bl	414990 <_obstack_newchunk@@Base>
  40737c:	ldr	x0, [x19, #24]
  407380:	add	x1, x0, #0x1
  407384:	str	x1, [x19, #24]
  407388:	strb	wzr, [x0]
  40738c:	b	407214 <ferror@plt+0x4774>
  407390:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  407394:	add	x3, x3, #0x3df
  407398:	b	4072d0 <ferror@plt+0x4830>
  40739c:	add	x1, sp, #0x44
  4073a0:	bl	408e30 <ferror@plt+0x6390>
  4073a4:	tst	w0, #0xff
  4073a8:	b.eq	4072e0 <ferror@plt+0x4840>  // b.none
  4073ac:	b	407214 <ferror@plt+0x4774>
  4073b0:	cmp	x3, x2
  4073b4:	b.ne	4073c4 <ferror@plt+0x4924>  // b.any
  4073b8:	mov	x0, x19
  4073bc:	mov	x1, #0x1                   	// #1
  4073c0:	bl	414990 <_obstack_newchunk@@Base>
  4073c4:	ldr	x0, [x19, #24]
  4073c8:	add	x1, x0, #0x1
  4073cc:	str	x1, [x19, #24]
  4073d0:	strb	w20, [x0]
  4073d4:	b	40732c <ferror@plt+0x488c>
  4073d8:	b.ne	4073e8 <ferror@plt+0x4948>  // b.any
  4073dc:	mov	x0, x19
  4073e0:	mov	x1, #0x1                   	// #1
  4073e4:	bl	414990 <_obstack_newchunk@@Base>
  4073e8:	ldr	x0, [x19, #24]
  4073ec:	add	x1, x0, #0x1
  4073f0:	str	x1, [x19, #24]
  4073f4:	strb	w20, [x0]
  4073f8:	b	407350 <ferror@plt+0x48b0>
  4073fc:	bl	4069bc <ferror@plt+0x3f1c>
  407400:	mov	x20, x0
  407404:	ldrb	w0, [x0]
  407408:	cmp	w0, #0x2d
  40740c:	b.ne	407440 <ferror@plt+0x49a0>  // b.any
  407410:	ldp	x0, x1, [x19, #24]
  407414:	cmp	x1, x0
  407418:	b.ne	407428 <ferror@plt+0x4988>  // b.any
  40741c:	mov	x0, x19
  407420:	mov	x1, #0x1                   	// #1
  407424:	bl	414990 <_obstack_newchunk@@Base>
  407428:	ldr	x0, [x19, #24]
  40742c:	add	x20, x20, #0x1
  407430:	add	x1, x0, #0x1
  407434:	str	x1, [x19, #24]
  407438:	mov	w1, #0x2d                  	// #45
  40743c:	strb	w1, [x0]
  407440:	mov	x0, x20
  407444:	bl	402450 <strlen@plt>
  407448:	ldr	w1, [sp, #76]
  40744c:	mov	w21, #0x30                  	// #48
  407450:	sub	w1, w1, w0
  407454:	str	w1, [sp, #76]
  407458:	ldr	w0, [sp, #76]
  40745c:	ldp	x23, x22, [x19, #24]
  407460:	sub	w0, w0, #0x1
  407464:	str	w0, [sp, #76]
  407468:	tbz	w0, #31, 4074b0 <ferror@plt+0x4a10>
  40746c:	sub	x22, x22, x23
  407470:	mov	x0, x20
  407474:	bl	402450 <strlen@plt>
  407478:	mov	x21, x0
  40747c:	cmp	x0, x22
  407480:	b.ls	407490 <ferror@plt+0x49f0>  // b.plast
  407484:	mov	x1, x0
  407488:	mov	x0, x19
  40748c:	bl	414990 <_obstack_newchunk@@Base>
  407490:	ldr	x0, [x19, #24]
  407494:	mov	x2, x21
  407498:	mov	x1, x20
  40749c:	bl	402420 <memcpy@plt>
  4074a0:	ldr	x0, [x19, #24]
  4074a4:	add	x0, x0, x21
  4074a8:	str	x0, [x19, #24]
  4074ac:	b	407214 <ferror@plt+0x4774>
  4074b0:	cmp	x22, x23
  4074b4:	b.ne	4074c4 <ferror@plt+0x4a24>  // b.any
  4074b8:	mov	x0, x19
  4074bc:	mov	x1, #0x1                   	// #1
  4074c0:	bl	414990 <_obstack_newchunk@@Base>
  4074c4:	ldr	x0, [x19, #24]
  4074c8:	add	x1, x0, #0x1
  4074cc:	str	x1, [x19, #24]
  4074d0:	strb	w21, [x0]
  4074d4:	b	407458 <ferror@plt+0x49b8>
  4074d8:	stp	xzr, xzr, [x0]
  4074dc:	stp	xzr, xzr, [x0, #32]
  4074e0:	cbz	x1, 4074e8 <ferror@plt+0x4a48>
  4074e4:	stp	xzr, xzr, [x1, #8]
  4074e8:	ret
  4074ec:	stp	x29, x30, [sp, #-112]!
  4074f0:	mov	x29, sp
  4074f4:	stp	x19, x20, [sp, #16]
  4074f8:	mov	x19, x0
  4074fc:	ldr	x20, [x1, #32]
  407500:	stp	x23, x24, [sp, #48]
  407504:	mov	w23, w2
  407508:	mov	x24, x3
  40750c:	stp	x25, x26, [sp, #64]
  407510:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x14bc>
  407514:	add	x25, x25, #0x303
  407518:	stp	x27, x28, [sp, #80]
  40751c:	sub	w27, w2, #0x1
  407520:	adrp	x26, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407524:	add	x0, x26, #0x680
  407528:	stp	x21, x22, [sp, #32]
  40752c:	str	x0, [sp, #104]
  407530:	mov	x0, x20
  407534:	mov	w1, #0x24                  	// #36
  407538:	bl	402910 <strchr@plt>
  40753c:	mov	x21, x0
  407540:	ldp	x28, x22, [x19, #24]
  407544:	cbnz	x0, 4075a4 <ferror@plt+0x4b04>
  407548:	sub	x22, x22, x28
  40754c:	mov	x0, x20
  407550:	bl	402450 <strlen@plt>
  407554:	mov	x21, x0
  407558:	cmp	x0, x22
  40755c:	b.ls	40756c <ferror@plt+0x4acc>  // b.plast
  407560:	mov	x1, x0
  407564:	mov	x0, x19
  407568:	bl	414990 <_obstack_newchunk@@Base>
  40756c:	ldr	x0, [x19, #24]
  407570:	mov	x2, x21
  407574:	mov	x1, x20
  407578:	bl	402420 <memcpy@plt>
  40757c:	ldr	x0, [x19, #24]
  407580:	ldp	x23, x24, [sp, #48]
  407584:	add	x0, x0, x21
  407588:	ldp	x21, x22, [sp, #32]
  40758c:	ldp	x25, x26, [sp, #64]
  407590:	ldp	x27, x28, [sp, #80]
  407594:	str	x0, [x19, #24]
  407598:	ldp	x19, x20, [sp, #16]
  40759c:	ldp	x29, x30, [sp], #112
  4075a0:	ret
  4075a4:	sub	x26, x0, x20
  4075a8:	sub	x22, x22, x28
  4075ac:	cmp	x26, x22
  4075b0:	b.ls	4075c0 <ferror@plt+0x4b20>  // b.plast
  4075b4:	mov	x1, x26
  4075b8:	mov	x0, x19
  4075bc:	bl	414990 <_obstack_newchunk@@Base>
  4075c0:	ldr	x0, [x19, #24]
  4075c4:	mov	x1, x20
  4075c8:	mov	x2, x26
  4075cc:	add	x20, x21, #0x1
  4075d0:	bl	402420 <memcpy@plt>
  4075d4:	ldr	x28, [x19, #24]
  4075d8:	add	x28, x28, x26
  4075dc:	str	x28, [x19, #24]
  4075e0:	ldrb	w0, [x21, #1]
  4075e4:	cmp	w0, #0x39
  4075e8:	b.hi	407634 <ferror@plt+0x4b94>  // b.pmore
  4075ec:	cmp	w0, #0x2f
  4075f0:	b.hi	40763c <ferror@plt+0x4b9c>  // b.pmore
  4075f4:	cmp	w0, #0x23
  4075f8:	b.eq	4076d8 <ferror@plt+0x4c38>  // b.none
  4075fc:	cmp	w0, #0x2a
  407600:	b.eq	4076ec <ferror@plt+0x4c4c>  // b.none
  407604:	ldr	x0, [x19, #32]
  407608:	cmp	x28, x0
  40760c:	b.ne	40761c <ferror@plt+0x4b7c>  // b.any
  407610:	mov	x0, x19
  407614:	mov	x1, #0x1                   	// #1
  407618:	bl	414990 <_obstack_newchunk@@Base>
  40761c:	ldr	x0, [x19, #24]
  407620:	add	x1, x0, #0x1
  407624:	str	x1, [x19, #24]
  407628:	mov	w1, #0x24                  	// #36
  40762c:	strb	w1, [x0]
  407630:	b	407530 <ferror@plt+0x4a90>
  407634:	cmp	w0, #0x40
  407638:	b	407600 <ferror@plt+0x4b60>
  40763c:	ldr	x1, [sp, #104]
  407640:	ldr	w22, [x1]
  407644:	cbnz	w22, 407674 <ferror@plt+0x4bd4>
  407648:	bl	402870 <__ctype_b_loc@plt>
  40764c:	ldr	x2, [x0]
  407650:	mov	w3, #0xa                   	// #10
  407654:	ldrb	w1, [x20]
  407658:	ldrb	w0, [x20]
  40765c:	ldrh	w1, [x2, x1, lsl #1]
  407660:	tbz	w1, #11, 40767c <ferror@plt+0x4bdc>
  407664:	sub	w0, w0, #0x30
  407668:	add	x20, x20, #0x1
  40766c:	madd	w22, w22, w3, w0
  407670:	b	407654 <ferror@plt+0x4bb4>
  407674:	add	x20, x21, #0x2
  407678:	sub	w22, w0, #0x30
  40767c:	cmp	w22, w23
  407680:	b.ge	407530 <ferror@plt+0x4a90>  // b.tcont
  407684:	sbfiz	x22, x22, #3, #32
  407688:	ldr	x0, [x24, x22]
  40768c:	ldr	x0, [x0, #8]
  407690:	bl	402450 <strlen@plt>
  407694:	mov	x21, x0
  407698:	ldr	x2, [x19, #32]
  40769c:	sub	x28, x2, x28
  4076a0:	cmp	x0, x28
  4076a4:	b.ls	4076b4 <ferror@plt+0x4c14>  // b.plast
  4076a8:	mov	x1, x0
  4076ac:	mov	x0, x19
  4076b0:	bl	414990 <_obstack_newchunk@@Base>
  4076b4:	ldr	x0, [x24, x22]
  4076b8:	mov	x2, x21
  4076bc:	ldr	x1, [x0, #8]
  4076c0:	ldr	x0, [x19, #24]
  4076c4:	bl	402420 <memcpy@plt>
  4076c8:	ldr	x0, [x19, #24]
  4076cc:	add	x0, x0, x21
  4076d0:	str	x0, [x19, #24]
  4076d4:	b	407530 <ferror@plt+0x4a90>
  4076d8:	mov	w1, w27
  4076dc:	mov	x0, x19
  4076e0:	bl	406a28 <ferror@plt+0x3f88>
  4076e4:	add	x20, x21, #0x2
  4076e8:	b	407530 <ferror@plt+0x4a90>
  4076ec:	cmp	w0, #0x40
  4076f0:	mov	x3, x25
  4076f4:	cset	w4, eq  // eq = none
  4076f8:	mov	x2, x24
  4076fc:	mov	w1, w23
  407700:	mov	x0, x19
  407704:	bl	4037a8 <ferror@plt+0xd08>
  407708:	b	4076e4 <ferror@plt+0x4c44>
  40770c:	stp	x29, x30, [sp, #-304]!
  407710:	mov	x29, sp
  407714:	stp	x19, x20, [sp, #16]
  407718:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40771c:	mov	x20, x0
  407720:	ldr	x0, [x19, #2048]
  407724:	str	x21, [sp, #32]
  407728:	cbz	x0, 407780 <ferror@plt+0x4ce0>
  40772c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407730:	ldr	x1, [x1, #1064]
  407734:	cmp	x0, x1
  407738:	b.eq	407780 <ferror@plt+0x4ce0>  // b.none
  40773c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407740:	ldr	x1, [x1, #1088]
  407744:	cmp	x0, x1
  407748:	b.eq	407780 <ferror@plt+0x4ce0>  // b.none
  40774c:	bl	40f6f8 <ferror@plt+0xcc58>
  407750:	cbz	w0, 407780 <ferror@plt+0x4ce0>
  407754:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407758:	ldr	w21, [x0, #1660]
  40775c:	bl	402a30 <__errno_location@plt>
  407760:	ldr	w1, [x0]
  407764:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  407768:	mov	w0, w21
  40776c:	add	x2, x2, #0xbf5
  407770:	bl	403488 <ferror@plt+0x9e8>
  407774:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407778:	mov	w1, #0x1                   	// #1
  40777c:	str	w1, [x0, #3416]
  407780:	str	x20, [x19, #2048]
  407784:	cbz	x20, 407834 <ferror@plt+0x4d94>
  407788:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40778c:	ldr	x1, [x0, #1088]
  407790:	cmp	x1, x20
  407794:	mov	x20, x0
  407798:	b.eq	407834 <ferror@plt+0x4d94>  // b.none
  40779c:	add	x1, sp, #0x30
  4077a0:	mov	w0, #0x1                   	// #1
  4077a4:	bl	414fe0 <_obstack_memory_used@@Base+0x49c>
  4077a8:	tbnz	w0, #31, 407834 <ferror@plt+0x4d94>
  4077ac:	ldr	x0, [x19, #2048]
  4077b0:	bl	402590 <fileno@plt>
  4077b4:	add	x1, sp, #0xb0
  4077b8:	bl	414fe0 <_obstack_memory_used@@Base+0x49c>
  4077bc:	tbnz	w0, #31, 407834 <ferror@plt+0x4d94>
  4077c0:	ldr	x0, [sp, #56]
  4077c4:	ldr	x1, [sp, #184]
  4077c8:	cmp	x0, x1
  4077cc:	b.ne	407834 <ferror@plt+0x4d94>  // b.any
  4077d0:	ldr	x2, [sp, #48]
  4077d4:	ldr	x1, [sp, #176]
  4077d8:	cmp	x2, x1
  4077dc:	b.ne	407834 <ferror@plt+0x4d94>  // b.any
  4077e0:	cbz	x0, 407834 <ferror@plt+0x4d94>
  4077e4:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4077e8:	ldr	x0, [x19, #2048]
  4077ec:	ldr	x1, [x1, #1064]
  4077f0:	cmp	x0, x1
  4077f4:	b.eq	40782c <ferror@plt+0x4d8c>  // b.none
  4077f8:	bl	40f6f8 <ferror@plt+0xcc58>
  4077fc:	cbz	w0, 40782c <ferror@plt+0x4d8c>
  407800:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407804:	ldr	w21, [x0, #1660]
  407808:	bl	402a30 <__errno_location@plt>
  40780c:	ldr	w1, [x0]
  407810:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  407814:	mov	w0, w21
  407818:	add	x2, x2, #0xbf5
  40781c:	bl	403488 <ferror@plt+0x9e8>
  407820:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407824:	mov	w1, #0x1                   	// #1
  407828:	str	w1, [x0, #3416]
  40782c:	ldr	x0, [x20, #1088]
  407830:	str	x0, [x19, #2048]
  407834:	ldp	x19, x20, [sp, #16]
  407838:	ldr	x21, [sp, #32]
  40783c:	ldp	x29, x30, [sp], #304
  407840:	ret
  407844:	stp	x29, x30, [sp, #-48]!
  407848:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40784c:	mov	x29, sp
  407850:	stp	x19, x20, [sp, #16]
  407854:	add	x20, x1, #0x800
  407858:	add	x0, x20, #0x8
  40785c:	ldp	x2, x3, [x0, #24]
  407860:	str	x21, [sp, #32]
  407864:	mov	x21, x1
  407868:	cmp	x3, x2
  40786c:	b.ne	407878 <ferror@plt+0x4dd8>  // b.any
  407870:	mov	x1, #0x1                   	// #1
  407874:	bl	414990 <_obstack_newchunk@@Base>
  407878:	ldr	x0, [x20, #32]
  40787c:	add	x2, x0, #0x1
  407880:	str	x2, [x20, #32]
  407884:	strb	wzr, [x0]
  407888:	ldp	x19, x2, [x20, #24]
  40788c:	cmp	x2, x19
  407890:	b.ne	4078a0 <ferror@plt+0x4e00>  // b.any
  407894:	ldrb	w0, [x20, #88]
  407898:	orr	w0, w0, #0x2
  40789c:	strb	w0, [x20, #88]
  4078a0:	ldr	x0, [x20, #56]
  4078a4:	ldr	x3, [x20, #40]
  4078a8:	add	x2, x2, x0
  4078ac:	bic	x0, x2, x0
  4078b0:	ldr	x2, [x20, #16]
  4078b4:	sub	x4, x0, x2
  4078b8:	sub	x2, x3, x2
  4078bc:	cmp	x4, x2
  4078c0:	csel	x0, x0, x3, ls  // ls = plast
  4078c4:	stp	x0, x0, [x20, #24]
  4078c8:	ldr	x0, [x21, #2048]
  4078cc:	cbz	x0, 4078e0 <ferror@plt+0x4e40>
  4078d0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4078d4:	mov	x2, x19
  4078d8:	add	x1, x1, #0x3bc
  4078dc:	bl	4141fc <ferror@plt+0x1175c>
  4078e0:	ldr	x1, [x20, #16]
  4078e4:	cmp	x1, x19
  4078e8:	b.cs	40790c <ferror@plt+0x4e6c>  // b.hs, b.nlast
  4078ec:	ldr	x1, [x20, #40]
  4078f0:	cmp	x1, x19
  4078f4:	b.ls	40790c <ferror@plt+0x4e6c>  // b.plast
  4078f8:	stp	x19, x19, [x20, #24]
  4078fc:	ldp	x19, x20, [sp, #16]
  407900:	ldr	x21, [sp, #32]
  407904:	ldp	x29, x30, [sp], #48
  407908:	ret
  40790c:	mov	x1, x19
  407910:	add	x0, x20, #0x8
  407914:	ldp	x19, x20, [sp, #16]
  407918:	ldr	x21, [sp, #32]
  40791c:	ldp	x29, x30, [sp], #48
  407920:	b	414ad0 <_obstack_free@@Base>
  407924:	stp	x29, x30, [sp, #-160]!
  407928:	mov	x29, sp
  40792c:	stp	x19, x20, [sp, #16]
  407930:	mov	x20, x0
  407934:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407938:	add	x0, sp, #0xa0
  40793c:	add	x19, x19, #0x800
  407940:	add	x19, x19, #0x8
  407944:	stp	x21, x22, [sp, #32]
  407948:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x14bc>
  40794c:	add	x22, x22, #0xc71
  407950:	stp	x0, x0, [sp, #64]
  407954:	add	x0, sp, #0x60
  407958:	stp	x23, x24, [sp, #48]
  40795c:	str	x0, [sp, #80]
  407960:	mov	w0, #0xffffffc8            	// #-56
  407964:	str	w0, [sp, #88]
  407968:	str	wzr, [sp, #92]
  40796c:	stp	x1, x2, [sp, #104]
  407970:	stp	x3, x4, [sp, #120]
  407974:	stp	x5, x6, [sp, #136]
  407978:	str	x7, [sp, #152]
  40797c:	ldrb	w21, [x20]
  407980:	cbz	w21, 407b94 <ferror@plt+0x50f4>
  407984:	cmp	w21, #0x25
  407988:	b.ne	4079c0 <ferror@plt+0x4f20>  // b.any
  40798c:	ldrb	w0, [x20, #1]
  407990:	add	x23, x20, #0x2
  407994:	cmp	w0, #0x6c
  407998:	b.eq	407aa0 <ferror@plt+0x5000>  // b.none
  40799c:	b.hi	4079f4 <ferror@plt+0x4f54>  // b.pmore
  4079a0:	cmp	w0, #0x53
  4079a4:	b.eq	407a78 <ferror@plt+0x4fd8>  // b.none
  4079a8:	cmp	w0, #0x64
  4079ac:	b.eq	407adc <ferror@plt+0x503c>  // b.none
  4079b0:	mov	w21, #0x0                   	// #0
  4079b4:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  4079b8:	add	x20, x20, #0x3df
  4079bc:	b	407a24 <ferror@plt+0x4f84>
  4079c0:	ldp	x0, x1, [x19, #24]
  4079c4:	cmp	x1, x0
  4079c8:	b.ne	4079d8 <ferror@plt+0x4f38>  // b.any
  4079cc:	mov	x0, x19
  4079d0:	mov	x1, #0x1                   	// #1
  4079d4:	bl	414990 <_obstack_newchunk@@Base>
  4079d8:	ldr	x0, [x19, #24]
  4079dc:	add	x23, x20, #0x1
  4079e0:	add	x1, x0, #0x1
  4079e4:	str	x1, [x19, #24]
  4079e8:	strb	w21, [x0]
  4079ec:	mov	x20, x23
  4079f0:	b	40797c <ferror@plt+0x4edc>
  4079f4:	cmp	w0, #0x72
  4079f8:	b.eq	407ac0 <ferror@plt+0x5020>  // b.none
  4079fc:	cmp	w0, #0x73
  407a00:	mov	w21, #0x0                   	// #0
  407a04:	b.ne	4079b4 <ferror@plt+0x4f14>  // b.any
  407a08:	ldr	w1, [sp, #88]
  407a0c:	ldr	x0, [sp, #64]
  407a10:	tbnz	w1, #31, 407a84 <ferror@plt+0x4fe4>
  407a14:	add	x1, x0, #0xf
  407a18:	and	x1, x1, #0xfffffffffffffff8
  407a1c:	str	x1, [sp, #64]
  407a20:	ldr	x20, [x0]
  407a24:	mov	x0, x20
  407a28:	bl	402450 <strlen@plt>
  407a2c:	ldp	x2, x1, [x19, #24]
  407a30:	cmp	w21, #0x0
  407a34:	ccmp	w21, w0, #0x0, ne  // ne = any
  407a38:	sub	x1, x1, x2
  407a3c:	b.le	407b24 <ferror@plt+0x5084>
  407a40:	sxtw	x21, w0
  407a44:	cmp	x1, w0, sxtw
  407a48:	b.cs	407a58 <ferror@plt+0x4fb8>  // b.hs, b.nlast
  407a4c:	mov	x1, x21
  407a50:	mov	x0, x19
  407a54:	bl	414990 <_obstack_newchunk@@Base>
  407a58:	ldr	x0, [x19, #24]
  407a5c:	mov	x2, x21
  407a60:	mov	x1, x20
  407a64:	bl	402420 <memcpy@plt>
  407a68:	ldr	x0, [x19, #24]
  407a6c:	add	x0, x0, x21
  407a70:	str	x0, [x19, #24]
  407a74:	b	4079ec <ferror@plt+0x4f4c>
  407a78:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407a7c:	ldr	w21, [x0, #1680]
  407a80:	b	407a08 <ferror@plt+0x4f68>
  407a84:	add	w2, w1, #0x8
  407a88:	str	w2, [sp, #88]
  407a8c:	cmp	w2, #0x0
  407a90:	b.gt	407a14 <ferror@plt+0x4f74>
  407a94:	ldr	x0, [sp, #72]
  407a98:	add	x0, x0, w1, sxtw
  407a9c:	b	407a20 <ferror@plt+0x4f80>
  407aa0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407aa4:	ldr	w0, [x0, #1676]
  407aa8:	and	w21, w0, #0x4
  407aac:	tbz	w0, #2, 4079b4 <ferror@plt+0x4f14>
  407ab0:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407ab4:	ldr	x20, [x0, #3432]
  407ab8:	mov	w21, #0x0                   	// #0
  407abc:	b	407a24 <ferror@plt+0x4f84>
  407ac0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407ac4:	ldr	w0, [x0, #1676]
  407ac8:	and	w21, w0, #0x4
  407acc:	tbz	w0, #2, 4079b4 <ferror@plt+0x4f14>
  407ad0:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407ad4:	ldr	x20, [x0, #3488]
  407ad8:	b	407ab8 <ferror@plt+0x5018>
  407adc:	ldr	w1, [sp, #88]
  407ae0:	ldr	x0, [sp, #64]
  407ae4:	tbnz	w1, #31, 407b08 <ferror@plt+0x5068>
  407ae8:	add	x1, x0, #0xb
  407aec:	and	x1, x1, #0xfffffffffffffff8
  407af0:	str	x1, [sp, #64]
  407af4:	ldr	w0, [x0]
  407af8:	mov	w1, #0xa                   	// #10
  407afc:	bl	4069bc <ferror@plt+0x3f1c>
  407b00:	mov	x20, x0
  407b04:	b	407ab8 <ferror@plt+0x5018>
  407b08:	add	w2, w1, #0x8
  407b0c:	str	w2, [sp, #88]
  407b10:	cmp	w2, #0x0
  407b14:	b.gt	407ae8 <ferror@plt+0x5048>
  407b18:	ldr	x0, [sp, #72]
  407b1c:	add	x0, x0, w1, sxtw
  407b20:	b	407af4 <ferror@plt+0x5054>
  407b24:	sxtw	x24, w21
  407b28:	cmp	x1, w21, sxtw
  407b2c:	b.cs	407b3c <ferror@plt+0x509c>  // b.hs, b.nlast
  407b30:	mov	x1, x24
  407b34:	mov	x0, x19
  407b38:	bl	414990 <_obstack_newchunk@@Base>
  407b3c:	ldr	x0, [x19, #24]
  407b40:	mov	x2, x24
  407b44:	mov	x1, x20
  407b48:	bl	402420 <memcpy@plt>
  407b4c:	ldr	x0, [x19, #24]
  407b50:	add	x2, x0, x24
  407b54:	str	x2, [x19, #24]
  407b58:	ldr	x0, [x19, #32]
  407b5c:	sub	x2, x0, x2
  407b60:	cmp	x2, #0x2
  407b64:	b.hi	407b74 <ferror@plt+0x50d4>  // b.pmore
  407b68:	mov	x0, x19
  407b6c:	mov	x1, #0x3                   	// #3
  407b70:	bl	414990 <_obstack_newchunk@@Base>
  407b74:	ldr	x0, [x19, #24]
  407b78:	ldrh	w1, [x22]
  407b7c:	strh	w1, [x0]
  407b80:	ldrb	w1, [x22, #2]
  407b84:	strb	w1, [x0, #2]
  407b88:	ldr	x0, [x19, #24]
  407b8c:	add	x0, x0, #0x3
  407b90:	b	407a70 <ferror@plt+0x4fd0>
  407b94:	ldp	x19, x20, [sp, #16]
  407b98:	ldp	x21, x22, [sp, #32]
  407b9c:	ldp	x23, x24, [sp, #48]
  407ba0:	ldp	x29, x30, [sp], #160
  407ba4:	ret
  407ba8:	stp	x29, x30, [sp, #-48]!
  407bac:	mov	x29, sp
  407bb0:	stp	x19, x20, [sp, #16]
  407bb4:	mov	w20, w0
  407bb8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407bbc:	add	x0, x0, #0xc13
  407bc0:	str	x21, [sp, #32]
  407bc4:	bl	407924 <ferror@plt+0x4e84>
  407bc8:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407bcc:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407bd0:	ldr	w0, [x1, #3424]
  407bd4:	cbz	w0, 407c10 <ferror@plt+0x5170>
  407bd8:	ldr	w0, [x21, #1676]
  407bdc:	mov	x19, x1
  407be0:	tbz	w0, #5, 407bf8 <ferror@plt+0x5158>
  407be4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407be8:	ldr	x1, [x0, #3448]
  407bec:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407bf0:	add	x0, x0, #0xc1c
  407bf4:	bl	407924 <ferror@plt+0x4e84>
  407bf8:	ldr	w0, [x21, #1676]
  407bfc:	tbz	w0, #4, 407c10 <ferror@plt+0x5170>
  407c00:	ldr	w1, [x19, #3424]
  407c04:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407c08:	add	x0, x0, #0xc20
  407c0c:	bl	407924 <ferror@plt+0x4e84>
  407c10:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407c14:	ldr	w1, [x0, #2488]
  407c18:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407c1c:	add	x0, x0, #0xc24
  407c20:	bl	407924 <ferror@plt+0x4e84>
  407c24:	ldr	w0, [x21, #1676]
  407c28:	tbz	w0, #9, 407c48 <ferror@plt+0x51a8>
  407c2c:	mov	w1, w20
  407c30:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407c34:	ldp	x19, x20, [sp, #16]
  407c38:	add	x0, x0, #0xc2b
  407c3c:	ldr	x21, [sp, #32]
  407c40:	ldp	x29, x30, [sp], #48
  407c44:	b	407924 <ferror@plt+0x4e84>
  407c48:	ldp	x19, x20, [sp, #16]
  407c4c:	ldr	x21, [sp, #32]
  407c50:	ldp	x29, x30, [sp], #48
  407c54:	ret
  407c58:	stp	x29, x30, [sp, #-16]!
  407c5c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407c60:	mov	x29, sp
  407c64:	ldr	x0, [x0, #1064]
  407c68:	bl	40770c <ferror@plt+0x4c6c>
  407c6c:	ldp	x29, x30, [sp], #16
  407c70:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407c74:	add	x0, x0, #0x800
  407c78:	adrp	x4, 402000 <mbrtowc@plt-0x410>
  407c7c:	add	x0, x0, #0x8
  407c80:	add	x4, x4, #0x8c0
  407c84:	adrp	x3, 413000 <ferror@plt+0x10560>
  407c88:	mov	x2, #0x0                   	// #0
  407c8c:	add	x3, x3, #0xd0c
  407c90:	mov	x1, #0x0                   	// #0
  407c94:	b	414964 <_obstack_begin@@Base>
  407c98:	stp	x29, x30, [sp, #-32]!
  407c9c:	mov	x29, sp
  407ca0:	str	x19, [sp, #16]
  407ca4:	cbz	x0, 407dbc <ferror@plt+0x531c>
  407ca8:	ldrb	w1, [x0]
  407cac:	cbz	w1, 407dbc <ferror@plt+0x531c>
  407cb0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  407cb4:	add	x2, x2, #0xd10
  407cb8:	mov	w19, #0x0                   	// #0
  407cbc:	ldrb	w1, [x0]
  407cc0:	cbnz	w1, 407d30 <ferror@plt+0x5290>
  407cc4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407cc8:	add	x0, x0, #0x800
  407ccc:	ldp	x1, x4, [x0, #24]
  407cd0:	cmp	x4, x1
  407cd4:	b.ne	407ce4 <ferror@plt+0x5244>  // b.any
  407cd8:	ldrb	w3, [x0, #88]
  407cdc:	orr	w3, w3, #0x2
  407ce0:	strb	w3, [x0, #88]
  407ce4:	ldr	x2, [x0, #56]
  407ce8:	ldr	x5, [x0, #16]
  407cec:	add	x4, x4, x2
  407cf0:	bic	x2, x4, x2
  407cf4:	ldr	x4, [x0, #40]
  407cf8:	sub	x7, x2, x5
  407cfc:	sub	x6, x4, x5
  407d00:	cmp	x7, x6
  407d04:	csel	x2, x2, x4, ls  // ls = plast
  407d08:	stp	x2, x2, [x0, #24]
  407d0c:	cmp	x5, x1
  407d10:	b.cs	407dc4 <ferror@plt+0x5324>  // b.hs, b.nlast
  407d14:	cmp	x4, x1
  407d18:	b.ls	407dc4 <ferror@plt+0x5324>  // b.plast
  407d1c:	stp	x1, x1, [x0, #24]
  407d20:	mov	w0, w19
  407d24:	ldr	x19, [sp, #16]
  407d28:	ldp	x29, x30, [sp], #32
  407d2c:	ret
  407d30:	cmp	w1, #0x56
  407d34:	b.eq	407db4 <ferror@plt+0x5314>  // b.none
  407d38:	sub	w1, w1, #0x61
  407d3c:	and	w3, w1, #0xff
  407d40:	cmp	w3, #0x17
  407d44:	b.hi	407dd0 <ferror@plt+0x5330>  // b.pmore
  407d48:	cmp	w1, #0x17
  407d4c:	b.hi	407dd0 <ferror@plt+0x5330>  // b.pmore
  407d50:	ldrb	w1, [x2, w1, uxtw]
  407d54:	adr	x3, 407d60 <ferror@plt+0x52c0>
  407d58:	add	x1, x3, w1, sxtb #2
  407d5c:	br	x1
  407d60:	orr	w19, w19, #0x1
  407d64:	add	x0, x0, #0x1
  407d68:	b	407cbc <ferror@plt+0x521c>
  407d6c:	orr	w19, w19, #0x2
  407d70:	b	407d64 <ferror@plt+0x52c4>
  407d74:	orr	w19, w19, #0x4
  407d78:	b	407d64 <ferror@plt+0x52c4>
  407d7c:	orr	w19, w19, #0x8
  407d80:	b	407d64 <ferror@plt+0x52c4>
  407d84:	orr	w19, w19, #0x10
  407d88:	b	407d64 <ferror@plt+0x52c4>
  407d8c:	orr	w19, w19, #0x20
  407d90:	b	407d64 <ferror@plt+0x52c4>
  407d94:	orr	w19, w19, #0x40
  407d98:	b	407d64 <ferror@plt+0x52c4>
  407d9c:	orr	w19, w19, #0x80
  407da0:	b	407d64 <ferror@plt+0x52c4>
  407da4:	orr	w19, w19, #0x100
  407da8:	b	407d64 <ferror@plt+0x52c4>
  407dac:	orr	w19, w19, #0x200
  407db0:	b	407d64 <ferror@plt+0x52c4>
  407db4:	mov	w19, #0x3ff                 	// #1023
  407db8:	b	407d64 <ferror@plt+0x52c4>
  407dbc:	mov	w19, #0x7                   	// #7
  407dc0:	b	407cc4 <ferror@plt+0x5224>
  407dc4:	add	x0, x0, #0x8
  407dc8:	bl	414ad0 <_obstack_free@@Base>
  407dcc:	b	407d20 <ferror@plt+0x5280>
  407dd0:	mov	w19, #0xffffffff            	// #-1
  407dd4:	b	407d20 <ferror@plt+0x5280>
  407dd8:	stp	x29, x30, [sp, #-32]!
  407ddc:	mov	x29, sp
  407de0:	stp	x19, x20, [sp, #16]
  407de4:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407de8:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407dec:	ldr	x0, [x20, #1088]
  407df0:	bl	4146ac <ferror@plt+0x11c0c>
  407df4:	ldr	x0, [x19, #1064]
  407df8:	bl	4146ac <ferror@plt+0x11c0c>
  407dfc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407e00:	ldr	x0, [x0, #2048]
  407e04:	cbz	x0, 407e24 <ferror@plt+0x5384>
  407e08:	ldr	x1, [x20, #1088]
  407e0c:	cmp	x0, x1
  407e10:	b.eq	407e24 <ferror@plt+0x5384>  // b.none
  407e14:	ldr	x1, [x19, #1064]
  407e18:	cmp	x0, x1
  407e1c:	b.eq	407e24 <ferror@plt+0x5384>  // b.none
  407e20:	bl	4146ac <ferror@plt+0x11c0c>
  407e24:	mov	w2, #0x1                   	// #1
  407e28:	mov	x1, #0x0                   	// #0
  407e2c:	mov	w0, #0x0                   	// #0
  407e30:	bl	402570 <lseek@plt>
  407e34:	tbnz	x0, #63, 407e60 <ferror@plt+0x53c0>
  407e38:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407e3c:	ldr	x0, [x19, #1096]
  407e40:	bl	4146ac <ferror@plt+0x11c0c>
  407e44:	cbnz	w0, 407e60 <ferror@plt+0x53c0>
  407e48:	ldr	x0, [x19, #1096]
  407e4c:	mov	w2, #0x1                   	// #1
  407e50:	ldp	x19, x20, [sp, #16]
  407e54:	mov	x1, #0x0                   	// #0
  407e58:	ldp	x29, x30, [sp], #32
  407e5c:	b	414734 <ferror@plt+0x11c94>
  407e60:	ldp	x19, x20, [sp, #16]
  407e64:	ldp	x29, x30, [sp], #32
  407e68:	ret
  407e6c:	stp	x29, x30, [sp, #-32]!
  407e70:	mov	x29, sp
  407e74:	stp	x19, x20, [sp, #16]
  407e78:	cbnz	x0, 407e98 <ferror@plt+0x53f8>
  407e7c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407e80:	ldr	x0, [x0, #1064]
  407e84:	bl	40770c <ferror@plt+0x4c6c>
  407e88:	mov	w0, #0x1                   	// #1
  407e8c:	ldp	x19, x20, [sp, #16]
  407e90:	ldp	x29, x30, [sp], #32
  407e94:	ret
  407e98:	ldrb	w1, [x0]
  407e9c:	cbnz	w1, 407ea8 <ferror@plt+0x5408>
  407ea0:	mov	x0, #0x0                   	// #0
  407ea4:	b	407e84 <ferror@plt+0x53e4>
  407ea8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  407eac:	add	x1, x1, #0xc33
  407eb0:	bl	40ff98 <ferror@plt+0xd4f8>
  407eb4:	mov	x19, x0
  407eb8:	cbz	x0, 407ef4 <ferror@plt+0x5454>
  407ebc:	bl	402590 <fileno@plt>
  407ec0:	mov	w1, #0x1                   	// #1
  407ec4:	bl	40f680 <ferror@plt+0xcbe0>
  407ec8:	cbz	w0, 407eec <ferror@plt+0x544c>
  407ecc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407ed0:	ldr	w20, [x0, #1660]
  407ed4:	bl	402a30 <__errno_location@plt>
  407ed8:	ldr	w1, [x0]
  407edc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  407ee0:	mov	w0, w20
  407ee4:	add	x2, x2, #0xc35
  407ee8:	bl	403488 <ferror@plt+0x9e8>
  407eec:	mov	x0, x19
  407ef0:	b	407e84 <ferror@plt+0x53e4>
  407ef4:	mov	w0, #0x0                   	// #0
  407ef8:	b	407e8c <ferror@plt+0x53ec>
  407efc:	stp	x29, x30, [sp, #-48]!
  407f00:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  407f04:	add	x1, x1, #0xc65
  407f08:	mov	x29, sp
  407f0c:	stp	x19, x20, [sp, #16]
  407f10:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407f14:	ldr	x0, [x19, #2048]
  407f18:	str	x21, [sp, #32]
  407f1c:	bl	4141fc <ferror@plt+0x1175c>
  407f20:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407f24:	ldr	w1, [x0, #3424]
  407f28:	cbz	w1, 407f74 <ferror@plt+0x54d4>
  407f2c:	mov	x20, x0
  407f30:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407f34:	mov	x21, x0
  407f38:	ldr	w1, [x0, #1676]
  407f3c:	tbz	w1, #5, 407f58 <ferror@plt+0x54b8>
  407f40:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  407f44:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  407f48:	add	x1, x1, #0xc1c
  407f4c:	ldr	x2, [x0, #3448]
  407f50:	ldr	x0, [x19, #2048]
  407f54:	bl	4141fc <ferror@plt+0x1175c>
  407f58:	ldr	w0, [x21, #1676]
  407f5c:	tbz	w0, #4, 407f74 <ferror@plt+0x54d4>
  407f60:	ldr	w2, [x20, #3424]
  407f64:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  407f68:	ldr	x0, [x19, #2048]
  407f6c:	add	x1, x1, #0xc20
  407f70:	bl	4141fc <ferror@plt+0x1175c>
  407f74:	ldr	x1, [x19, #2048]
  407f78:	mov	w0, #0x20                  	// #32
  407f7c:	ldp	x19, x20, [sp, #16]
  407f80:	ldr	x21, [sp, #32]
  407f84:	ldp	x29, x30, [sp], #48
  407f88:	b	402500 <putc@plt>
  407f8c:	stp	x29, x30, [sp, #-32]!
  407f90:	mov	x29, sp
  407f94:	str	x19, [sp, #16]
  407f98:	mov	x19, x0
  407f9c:	mov	w0, w1
  407fa0:	bl	407ba8 <ferror@plt+0x5108>
  407fa4:	mov	x1, x19
  407fa8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407fac:	add	x0, x0, #0xc6e
  407fb0:	bl	407924 <ferror@plt+0x4e84>
  407fb4:	ldr	x19, [sp, #16]
  407fb8:	ldp	x29, x30, [sp], #32
  407fbc:	b	407844 <ferror@plt+0x4da4>
  407fc0:	stp	x29, x30, [sp, #-80]!
  407fc4:	mov	x29, sp
  407fc8:	stp	x19, x20, [sp, #16]
  407fcc:	mov	w20, w2
  407fd0:	mov	x19, x0
  407fd4:	mov	w0, w1
  407fd8:	stp	x21, x22, [sp, #32]
  407fdc:	mov	x21, x3
  407fe0:	stp	x23, x24, [sp, #48]
  407fe4:	adrp	x24, 42e000 <_obstack_memory_used@@Base+0x194bc>
  407fe8:	str	x25, [sp, #64]
  407fec:	bl	407ba8 <ferror@plt+0x5108>
  407ff0:	mov	x1, x19
  407ff4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  407ff8:	add	x0, x0, #0x55e
  407ffc:	bl	407924 <ferror@plt+0x4e84>
  408000:	cmp	w20, #0x1
  408004:	b.le	408088 <ferror@plt+0x55e8>
  408008:	ldr	w0, [x24, #1676]
  40800c:	tbz	w0, #0, 408088 <ferror@plt+0x55e8>
  408010:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x14bc>
  408014:	adrp	x23, 415000 <_obstack_memory_used@@Base+0x4bc>
  408018:	add	x22, x22, #0xd07
  40801c:	add	x23, x23, #0x81
  408020:	mov	x19, #0x1                   	// #1
  408024:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x14bc>
  408028:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40802c:	add	x0, x0, #0xc75
  408030:	bl	407924 <ferror@plt+0x4e84>
  408034:	ldr	x0, [x21, x19, lsl #3]
  408038:	ldr	w1, [x0]
  40803c:	cmp	w1, #0x1
  408040:	b.eq	408064 <ferror@plt+0x55c4>  // b.none
  408044:	cmp	w1, #0x2
  408048:	b.eq	4080b4 <ferror@plt+0x5614>  // b.none
  40804c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408050:	add	x2, x2, #0xcbd
  408054:	b	4080c8 <ferror@plt+0x5628>
  408058:	add	x0, x25, #0xc77
  40805c:	bl	407924 <ferror@plt+0x4e84>
  408060:	b	408034 <ferror@plt+0x5594>
  408064:	ldr	x1, [x0, #8]
  408068:	mov	x0, x22
  40806c:	add	x19, x19, #0x1
  408070:	bl	407924 <ferror@plt+0x4e84>
  408074:	cmp	w20, w19
  408078:	b.gt	408058 <ferror@plt+0x55b8>
  40807c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  408080:	add	x0, x0, #0xef5
  408084:	bl	407924 <ferror@plt+0x4e84>
  408088:	ldr	w0, [x24, #1676]
  40808c:	tbz	w0, #7, 4080e8 <ferror@plt+0x5648>
  408090:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  408094:	add	x0, x0, #0xcf0
  408098:	bl	407924 <ferror@plt+0x4e84>
  40809c:	ldp	x19, x20, [sp, #16]
  4080a0:	ldp	x21, x22, [sp, #32]
  4080a4:	ldp	x23, x24, [sp, #48]
  4080a8:	ldr	x25, [sp, #64]
  4080ac:	ldp	x29, x30, [sp], #80
  4080b0:	b	407844 <ferror@plt+0x4da4>
  4080b4:	ldr	x0, [x0, #8]
  4080b8:	bl	4060d0 <ferror@plt+0x3630>
  4080bc:	cbnz	x0, 4080dc <ferror@plt+0x563c>
  4080c0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4080c4:	add	x2, x2, #0xc7a
  4080c8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4080cc:	mov	w1, #0x0                   	// #0
  4080d0:	ldr	w0, [x0, #1660]
  4080d4:	bl	403488 <ferror@plt+0x9e8>
  4080d8:	bl	4027d0 <abort@plt>
  4080dc:	ldr	x1, [x0]
  4080e0:	mov	x0, x23
  4080e4:	b	40806c <ferror@plt+0x55cc>
  4080e8:	ldp	x19, x20, [sp, #16]
  4080ec:	ldp	x21, x22, [sp, #32]
  4080f0:	ldp	x23, x24, [sp, #48]
  4080f4:	ldr	x25, [sp, #64]
  4080f8:	ldp	x29, x30, [sp], #80
  4080fc:	ret
  408100:	stp	x29, x30, [sp, #-48]!
  408104:	mov	x29, sp
  408108:	stp	x19, x20, [sp, #16]
  40810c:	mov	x19, x3
  408110:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408114:	stp	x21, x22, [sp, #32]
  408118:	mov	x21, x0
  40811c:	mov	w0, w1
  408120:	ldr	w1, [x3, #1676]
  408124:	mov	x20, x3
  408128:	tbz	w1, #7, 40815c <ferror@plt+0x56bc>
  40812c:	mov	w22, w2
  408130:	bl	407ba8 <ferror@plt+0x5108>
  408134:	cmp	w22, #0x1
  408138:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  40813c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  408140:	add	x2, x1, #0xcf8
  408144:	add	x0, x0, #0x3df
  408148:	mov	x1, x21
  40814c:	csel	x2, x2, x0, gt
  408150:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  408154:	add	x0, x0, #0xcfe
  408158:	bl	407924 <ferror@plt+0x4e84>
  40815c:	cbz	x19, 408178 <ferror@plt+0x56d8>
  408160:	ldr	w0, [x20, #1676]
  408164:	tbz	w0, #1, 408178 <ferror@plt+0x56d8>
  408168:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40816c:	mov	x1, x19
  408170:	add	x0, x0, #0xd03
  408174:	bl	407924 <ferror@plt+0x4e84>
  408178:	ldp	x19, x20, [sp, #16]
  40817c:	ldp	x21, x22, [sp, #32]
  408180:	ldp	x29, x30, [sp], #48
  408184:	b	407844 <ferror@plt+0x4da4>
  408188:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40818c:	add	x1, x0, #0x860
  408190:	ldr	x1, [x1, #8]
  408194:	str	x1, [x0, #2144]
  408198:	ret
  40819c:	stp	x29, x30, [sp, #-32]!
  4081a0:	mov	x29, sp
  4081a4:	str	x19, [sp, #16]
  4081a8:	mov	x19, x0
  4081ac:	bl	402870 <__ctype_b_loc@plt>
  4081b0:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4081b4:	mov	w4, #0x0                   	// #0
  4081b8:	ldr	x6, [x0]
  4081bc:	ldr	x5, [x3, #2144]
  4081c0:	mov	x1, x5
  4081c4:	ldrb	w0, [x5]
  4081c8:	add	x5, x5, #0x1
  4081cc:	ldurb	w2, [x5, #-1]
  4081d0:	ldrh	w0, [x6, x0, lsl #1]
  4081d4:	tbnz	w0, #13, 408290 <ferror@plt+0x57f0>
  4081d8:	cbz	w4, 4081e0 <ferror@plt+0x5740>
  4081dc:	str	x1, [x3, #2144]
  4081e0:	add	x4, x3, #0x860
  4081e4:	str	x1, [x4, #8]
  4081e8:	cbz	w2, 40859c <ferror@plt+0x5afc>
  4081ec:	tbz	w0, #11, 40838c <ferror@plt+0x58ec>
  4081f0:	cmp	w2, #0x30
  4081f4:	b.ne	408324 <ferror@plt+0x5884>  // b.any
  4081f8:	add	x0, x1, #0x1
  4081fc:	str	x0, [x3, #2144]
  408200:	ldrb	w0, [x1, #1]
  408204:	sub	w0, w0, #0x42
  408208:	and	w0, w0, #0xff
  40820c:	cmp	w0, #0x36
  408210:	b.hi	40832c <ferror@plt+0x588c>  // b.pmore
  408214:	mov	x2, #0x1                   	// #1
  408218:	lsl	x0, x2, x0
  40821c:	tst	x0, #0x1000000010000
  408220:	b.ne	4082a8 <ferror@plt+0x5808>  // b.any
  408224:	tst	x0, #0x100000001
  408228:	b.ne	408298 <ferror@plt+0x57f8>  // b.any
  40822c:	tst	x0, #0x40000000400000
  408230:	mov	w2, #0x8                   	// #8
  408234:	b.eq	408244 <ferror@plt+0x57a4>  // b.none
  408238:	add	x1, x1, #0x2
  40823c:	mov	w2, #0x10                  	// #16
  408240:	str	x1, [x3, #2144]
  408244:	ldr	x4, [x3, #2144]
  408248:	mov	w0, #0x0                   	// #0
  40824c:	str	wzr, [x19]
  408250:	ldrb	w1, [x4]
  408254:	cbz	w1, 408344 <ferror@plt+0x58a4>
  408258:	ubfiz	x5, x1, #1, #8
  40825c:	ldrh	w5, [x6, x5]
  408260:	tbz	w5, #11, 408334 <ferror@plt+0x5894>
  408264:	sub	w1, w1, #0x30
  408268:	cmp	w2, #0x1
  40826c:	b.ne	408374 <ferror@plt+0x58d4>  // b.any
  408270:	cmp	w1, #0x1
  408274:	b.ne	408364 <ferror@plt+0x58c4>  // b.any
  408278:	ldr	w0, [x19]
  40827c:	add	w0, w0, #0x1
  408280:	str	w0, [x19]
  408284:	add	x4, x4, #0x1
  408288:	mov	w0, #0x1                   	// #1
  40828c:	b	408250 <ferror@plt+0x57b0>
  408290:	mov	w4, #0x1                   	// #1
  408294:	b	4081c0 <ferror@plt+0x5720>
  408298:	add	x1, x1, #0x2
  40829c:	mov	w2, #0x2                   	// #2
  4082a0:	str	x1, [x3, #2144]
  4082a4:	b	408244 <ferror@plt+0x57a4>
  4082a8:	add	x1, x1, #0x2
  4082ac:	mov	w0, #0x0                   	// #0
  4082b0:	str	x1, [x3, #2144]
  4082b4:	mov	w2, #0x0                   	// #0
  4082b8:	mov	w7, #0xa                   	// #10
  4082bc:	ldrb	w8, [x1]
  4082c0:	mov	x5, x1
  4082c4:	ldrb	w4, [x1]
  4082c8:	ldrh	w8, [x6, x8, lsl #1]
  4082cc:	tbz	w8, #11, 4082fc <ferror@plt+0x585c>
  4082d0:	add	x1, x1, #0x1
  4082d4:	cmp	w2, #0x24
  4082d8:	b.le	4082ec <ferror@plt+0x584c>
  4082dc:	cbz	w0, 4082e4 <ferror@plt+0x5844>
  4082e0:	str	x5, [x3, #2144]
  4082e4:	mov	w0, #0x0                   	// #0
  4082e8:	b	408350 <ferror@plt+0x58b0>
  4082ec:	madd	w2, w2, w7, w4
  4082f0:	mov	w0, #0x1                   	// #1
  4082f4:	sub	w2, w2, #0x30
  4082f8:	b	4082bc <ferror@plt+0x581c>
  4082fc:	cbz	w0, 408304 <ferror@plt+0x5864>
  408300:	str	x1, [x3, #2144]
  408304:	cmp	w2, #0x24
  408308:	ccmp	w2, #0x0, #0x4, le
  40830c:	b.eq	4082e4 <ferror@plt+0x5844>  // b.none
  408310:	cmp	w4, #0x3a
  408314:	b.ne	4082e4 <ferror@plt+0x5844>  // b.any
  408318:	add	x1, x1, #0x1
  40831c:	str	x1, [x3, #2144]
  408320:	b	408244 <ferror@plt+0x57a4>
  408324:	mov	w2, #0xa                   	// #10
  408328:	b	408244 <ferror@plt+0x57a4>
  40832c:	mov	w2, #0x8                   	// #8
  408330:	b	408244 <ferror@plt+0x57a4>
  408334:	tbz	w5, #9, 408340 <ferror@plt+0x58a0>
  408338:	sub	w1, w1, #0x57
  40833c:	b	408268 <ferror@plt+0x57c8>
  408340:	tbnz	w5, #8, 40835c <ferror@plt+0x58bc>
  408344:	cbz	w0, 40834c <ferror@plt+0x58ac>
  408348:	str	x4, [x3, #2144]
  40834c:	mov	w0, #0x1a                  	// #26
  408350:	ldr	x19, [sp, #16]
  408354:	ldp	x29, x30, [sp], #32
  408358:	ret
  40835c:	sub	w1, w1, #0x37
  408360:	b	408268 <ferror@plt+0x57c8>
  408364:	cbnz	w1, 408344 <ferror@plt+0x58a4>
  408368:	ldr	w1, [x19]
  40836c:	cbnz	w1, 408344 <ferror@plt+0x58a4>
  408370:	b	408284 <ferror@plt+0x57e4>
  408374:	cmp	w2, w1
  408378:	b.le	408344 <ferror@plt+0x58a4>
  40837c:	ldr	w0, [x19]
  408380:	madd	w1, w2, w0, w1
  408384:	str	w1, [x19]
  408388:	b	408284 <ferror@plt+0x57e4>
  40838c:	add	x0, x1, #0x1
  408390:	str	x0, [x3, #2144]
  408394:	cmp	w2, #0x3e
  408398:	b.hi	4083d0 <ferror@plt+0x5930>  // b.pmore
  40839c:	cmp	w2, #0x20
  4083a0:	b.ls	4082e4 <ferror@plt+0x5844>  // b.plast
  4083a4:	sub	w2, w2, #0x21
  4083a8:	cmp	w2, #0x1d
  4083ac:	b.hi	4082e4 <ferror@plt+0x5844>  // b.pmore
  4083b0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4083b4:	add	x0, x0, #0xd28
  4083b8:	ldrb	w0, [x0, w2, uxtw]
  4083bc:	adr	x2, 4083c8 <ferror@plt+0x5928>
  4083c0:	add	x0, x2, w0, sxtb #2
  4083c4:	br	x0
  4083c8:	mov	w0, #0x18                  	// #24
  4083cc:	b	408350 <ferror@plt+0x58b0>
  4083d0:	cmp	w2, #0x7c
  4083d4:	b.eq	408570 <ferror@plt+0x5ad0>  // b.none
  4083d8:	cmp	w2, #0x7e
  4083dc:	mov	w0, #0x14                  	// #20
  4083e0:	b.eq	408350 <ferror@plt+0x58b0>  // b.none
  4083e4:	cmp	w2, #0x5e
  4083e8:	b.ne	4082e4 <ferror@plt+0x5844>  // b.any
  4083ec:	ldrb	w0, [x1, #1]
  4083f0:	cmp	w0, #0x3d
  4083f4:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  4083f8:	mov	w0, #0x17                  	// #23
  4083fc:	b	408350 <ferror@plt+0x58b0>
  408400:	ldrb	w0, [x1, #1]
  408404:	mov	w1, #0x3d                  	// #61
  408408:	cmp	w0, #0x2b
  40840c:	ccmp	w0, w1, #0x4, ne  // ne = any
  408410:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408414:	mov	w0, #0x2                   	// #2
  408418:	b	408350 <ferror@plt+0x58b0>
  40841c:	ldrb	w0, [x1, #1]
  408420:	and	w0, w0, #0xffffffef
  408424:	and	w0, w0, #0xff
  408428:	cmp	w0, #0x2d
  40842c:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408430:	mov	w0, #0x3                   	// #3
  408434:	b	408350 <ferror@plt+0x58b0>
  408438:	ldrb	w0, [x1, #1]
  40843c:	cmp	w0, #0x2a
  408440:	b.ne	408454 <ferror@plt+0x59b4>  // b.any
  408444:	add	x1, x1, #0x2
  408448:	mov	w0, #0x4                   	// #4
  40844c:	str	x1, [x3, #2144]
  408450:	b	408350 <ferror@plt+0x58b0>
  408454:	cmp	w0, #0x3d
  408458:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  40845c:	mov	w0, #0x5                   	// #5
  408460:	b	408350 <ferror@plt+0x58b0>
  408464:	ldrb	w0, [x1, #1]
  408468:	cmp	w0, #0x3d
  40846c:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408470:	mov	w0, #0x6                   	// #6
  408474:	b	408350 <ferror@plt+0x58b0>
  408478:	ldrb	w0, [x1, #1]
  40847c:	cmp	w0, #0x3d
  408480:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408484:	mov	w0, #0x7                   	// #7
  408488:	b	408350 <ferror@plt+0x58b0>
  40848c:	ldrb	w0, [x1, #1]
  408490:	cmp	w0, #0x3d
  408494:	b.ne	4085ac <ferror@plt+0x5b0c>  // b.any
  408498:	add	x1, x1, #0x2
  40849c:	mov	w0, #0x9                   	// #9
  4084a0:	str	x1, [x3, #2144]
  4084a4:	b	408350 <ferror@plt+0x58b0>
  4084a8:	ldrb	w0, [x1, #1]
  4084ac:	cmp	w0, #0x3d
  4084b0:	b.ne	4085b4 <ferror@plt+0x5b14>  // b.any
  4084b4:	add	x1, x1, #0x2
  4084b8:	mov	w0, #0xa                   	// #10
  4084bc:	str	x1, [x3, #2144]
  4084c0:	b	408350 <ferror@plt+0x58b0>
  4084c4:	ldrb	w0, [x1, #1]
  4084c8:	cmp	w0, #0x3d
  4084cc:	b.ne	4084e0 <ferror@plt+0x5a40>  // b.any
  4084d0:	add	x1, x1, #0x2
  4084d4:	mov	w0, #0xc                   	// #12
  4084d8:	str	x1, [x3, #2144]
  4084dc:	b	408350 <ferror@plt+0x58b0>
  4084e0:	cmp	w0, #0x3e
  4084e4:	b.ne	4085bc <ferror@plt+0x5b1c>  // b.any
  4084e8:	add	x0, x1, #0x2
  4084ec:	str	x0, [x3, #2144]
  4084f0:	ldrb	w0, [x1, #2]
  4084f4:	cmp	w0, #0x3d
  4084f8:	b.ne	4085c4 <ferror@plt+0x5b24>  // b.any
  4084fc:	mov	w0, #0x1                   	// #1
  408500:	b	408350 <ferror@plt+0x58b0>
  408504:	ldrb	w0, [x1, #1]
  408508:	cmp	w0, #0x3d
  40850c:	b.ne	408520 <ferror@plt+0x5a80>  // b.any
  408510:	add	x1, x1, #0x2
  408514:	mov	w0, #0xe                   	// #14
  408518:	str	x1, [x3, #2144]
  40851c:	b	408350 <ferror@plt+0x58b0>
  408520:	cmp	w0, #0x3c
  408524:	b.ne	4085cc <ferror@plt+0x5b2c>  // b.any
  408528:	add	x0, x1, #0x2
  40852c:	str	x0, [x3, #2144]
  408530:	ldrb	w0, [x1, #2]
  408534:	cmp	w0, #0x3d
  408538:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  40853c:	mov	w0, #0xf                   	// #15
  408540:	b	408350 <ferror@plt+0x58b0>
  408544:	ldrb	w0, [x1, #1]
  408548:	cmp	w0, #0x26
  40854c:	b.ne	408560 <ferror@plt+0x5ac0>  // b.any
  408550:	add	x1, x1, #0x2
  408554:	mov	w0, #0x12                  	// #18
  408558:	str	x1, [x3, #2144]
  40855c:	b	408350 <ferror@plt+0x58b0>
  408560:	cmp	w0, #0x3d
  408564:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408568:	mov	w0, #0x15                  	// #21
  40856c:	b	408350 <ferror@plt+0x58b0>
  408570:	ldrb	w0, [x1, #1]
  408574:	cmp	w0, #0x7c
  408578:	b.ne	40858c <ferror@plt+0x5aec>  // b.any
  40857c:	add	x1, x1, #0x2
  408580:	mov	w0, #0x13                  	// #19
  408584:	str	x1, [x3, #2144]
  408588:	b	408350 <ferror@plt+0x58b0>
  40858c:	cmp	w0, #0x3d
  408590:	b.eq	4084fc <ferror@plt+0x5a5c>  // b.none
  408594:	mov	w0, #0x16                  	// #22
  408598:	b	408350 <ferror@plt+0x58b0>
  40859c:	mov	w0, #0x1b                  	// #27
  4085a0:	b	408350 <ferror@plt+0x58b0>
  4085a4:	mov	w0, #0x19                  	// #25
  4085a8:	b	408350 <ferror@plt+0x58b0>
  4085ac:	mov	w0, #0x8                   	// #8
  4085b0:	b	408350 <ferror@plt+0x58b0>
  4085b4:	mov	w0, #0x11                  	// #17
  4085b8:	b	408350 <ferror@plt+0x58b0>
  4085bc:	mov	w0, #0xb                   	// #11
  4085c0:	b	408350 <ferror@plt+0x58b0>
  4085c4:	mov	w0, #0x10                  	// #16
  4085c8:	b	408350 <ferror@plt+0x58b0>
  4085cc:	mov	w0, #0xd                   	// #13
  4085d0:	b	408350 <ferror@plt+0x58b0>
  4085d4:	stp	x29, x30, [sp, #-64]!
  4085d8:	mov	x29, sp
  4085dc:	stp	x19, x20, [sp, #16]
  4085e0:	mov	x20, x1
  4085e4:	str	x21, [sp, #32]
  4085e8:	bl	408cfc <ferror@plt+0x625c>
  4085ec:	cbnz	w0, 40863c <ferror@plt+0x5b9c>
  4085f0:	mov	x0, x20
  4085f4:	bl	408d9c <ferror@plt+0x62fc>
  4085f8:	cbnz	w0, 40863c <ferror@plt+0x5b9c>
  4085fc:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  408600:	add	x21, x21, #0xd48
  408604:	add	x0, sp, #0x3c
  408608:	bl	40819c <ferror@plt+0x56fc>
  40860c:	mov	w19, w0
  408610:	sub	w0, w0, #0xb
  408614:	cmp	w0, #0x3
  408618:	b.ls	40862c <ferror@plt+0x5b8c>  // b.plast
  40861c:	cbz	w19, 408638 <ferror@plt+0x5b98>
  408620:	bl	408188 <ferror@plt+0x56e8>
  408624:	mov	w0, #0x0                   	// #0
  408628:	b	40863c <ferror@plt+0x5b9c>
  40862c:	add	x0, sp, #0x3c
  408630:	bl	40819c <ferror@plt+0x56fc>
  408634:	cbnz	w0, 40864c <ferror@plt+0x5bac>
  408638:	mov	w0, #0x6                   	// #6
  40863c:	ldp	x19, x20, [sp, #16]
  408640:	ldr	x21, [sp, #32]
  408644:	ldp	x29, x30, [sp], #64
  408648:	ret
  40864c:	add	x1, sp, #0x3c
  408650:	bl	408cfc <ferror@plt+0x625c>
  408654:	cbnz	w0, 40863c <ferror@plt+0x5b9c>
  408658:	add	x0, sp, #0x3c
  40865c:	bl	408d9c <ferror@plt+0x62fc>
  408660:	cbnz	w0, 40863c <ferror@plt+0x5b9c>
  408664:	sub	w19, w19, #0xc
  408668:	ldr	w1, [x20]
  40866c:	ldr	w0, [sp, #60]
  408670:	cmp	w19, #0x2
  408674:	b.hi	408688 <ferror@plt+0x5be8>  // b.pmore
  408678:	ldrb	w2, [x21, w19, uxtw]
  40867c:	adr	x3, 408688 <ferror@plt+0x5be8>
  408680:	add	x2, x3, w2, sxtb #2
  408684:	br	x2
  408688:	cmp	w1, w0
  40868c:	cset	w0, gt
  408690:	str	w0, [x20]
  408694:	b	408604 <ferror@plt+0x5b64>
  408698:	cmp	w1, w0
  40869c:	cset	w0, ge  // ge = tcont
  4086a0:	b	408690 <ferror@plt+0x5bf0>
  4086a4:	cmp	w1, w0
  4086a8:	cset	w0, lt  // lt = tstop
  4086ac:	b	408690 <ferror@plt+0x5bf0>
  4086b0:	cmp	w1, w0
  4086b4:	cset	w0, le
  4086b8:	b	408690 <ferror@plt+0x5bf0>
  4086bc:	stp	x29, x30, [sp, #-64]!
  4086c0:	mov	x29, sp
  4086c4:	stp	x19, x20, [sp, #16]
  4086c8:	mov	x20, x0
  4086cc:	stp	x21, x22, [sp, #32]
  4086d0:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x14bc>
  4086d4:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4086d8:	add	x21, x21, #0xd54
  4086dc:	add	x22, x22, #0x67c
  4086e0:	add	x0, sp, #0x3c
  4086e4:	bl	40819c <ferror@plt+0x56fc>
  4086e8:	mov	w19, w0
  4086ec:	sub	w0, w0, #0x8
  4086f0:	cmp	w0, #0x2
  4086f4:	b.ls	408708 <ferror@plt+0x5c68>  // b.plast
  4086f8:	cbz	w19, 408714 <ferror@plt+0x5c74>
  4086fc:	bl	408188 <ferror@plt+0x56e8>
  408700:	mov	w0, #0x0                   	// #0
  408704:	b	408718 <ferror@plt+0x5c78>
  408708:	add	x0, sp, #0x3c
  40870c:	bl	40819c <ferror@plt+0x56fc>
  408710:	cbnz	w0, 408728 <ferror@plt+0x5c88>
  408714:	mov	w0, #0x6                   	// #6
  408718:	ldp	x19, x20, [sp, #16]
  40871c:	ldp	x21, x22, [sp, #32]
  408720:	ldp	x29, x30, [sp], #64
  408724:	ret
  408728:	add	x1, sp, #0x3c
  40872c:	bl	4085d4 <ferror@plt+0x5b34>
  408730:	cbnz	w0, 408718 <ferror@plt+0x5c78>
  408734:	cmp	w19, #0x8
  408738:	b.ne	408750 <ferror@plt+0x5cb0>  // b.any
  40873c:	ldr	w0, [x22]
  408740:	mov	x2, x21
  408744:	mov	w1, #0x0                   	// #0
  408748:	mov	w19, #0x9                   	// #9
  40874c:	bl	403488 <ferror@plt+0x9e8>
  408750:	ldr	w1, [x20]
  408754:	ldr	w0, [sp, #60]
  408758:	cmp	w1, w0
  40875c:	cset	w0, eq  // eq = none
  408760:	cmp	w19, #0x9
  408764:	cset	w1, ne  // ne = any
  408768:	eor	w0, w0, w1
  40876c:	str	w0, [x20]
  408770:	b	4086e0 <ferror@plt+0x5c40>
  408774:	stp	x29, x30, [sp, #-48]!
  408778:	mov	x29, sp
  40877c:	str	x19, [sp, #16]
  408780:	mov	x19, x0
  408784:	add	x0, sp, #0x2c
  408788:	bl	40819c <ferror@plt+0x56fc>
  40878c:	cmp	w0, #0x15
  408790:	b.eq	4087a4 <ferror@plt+0x5d04>  // b.none
  408794:	cbz	w0, 4087b0 <ferror@plt+0x5d10>
  408798:	bl	408188 <ferror@plt+0x56e8>
  40879c:	mov	w0, #0x0                   	// #0
  4087a0:	b	4087b4 <ferror@plt+0x5d14>
  4087a4:	add	x0, sp, #0x2c
  4087a8:	bl	40819c <ferror@plt+0x56fc>
  4087ac:	cbnz	w0, 4087c0 <ferror@plt+0x5d20>
  4087b0:	mov	w0, #0x6                   	// #6
  4087b4:	ldr	x19, [sp, #16]
  4087b8:	ldp	x29, x30, [sp], #48
  4087bc:	ret
  4087c0:	add	x1, sp, #0x2c
  4087c4:	bl	4085d4 <ferror@plt+0x5b34>
  4087c8:	cbnz	w0, 4087b4 <ferror@plt+0x5d14>
  4087cc:	add	x0, sp, #0x2c
  4087d0:	bl	4086bc <ferror@plt+0x5c1c>
  4087d4:	cbnz	w0, 4087b4 <ferror@plt+0x5d14>
  4087d8:	ldr	w0, [x19]
  4087dc:	ldr	w1, [sp, #44]
  4087e0:	and	w0, w0, w1
  4087e4:	str	w0, [x19]
  4087e8:	b	408784 <ferror@plt+0x5ce4>
  4087ec:	stp	x29, x30, [sp, #-48]!
  4087f0:	mov	x29, sp
  4087f4:	str	x19, [sp, #16]
  4087f8:	mov	x19, x1
  4087fc:	bl	4085d4 <ferror@plt+0x5b34>
  408800:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  408804:	mov	x0, x19
  408808:	bl	4086bc <ferror@plt+0x5c1c>
  40880c:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  408810:	mov	x0, x19
  408814:	bl	408774 <ferror@plt+0x5cd4>
  408818:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  40881c:	add	x0, sp, #0x2c
  408820:	bl	40819c <ferror@plt+0x56fc>
  408824:	cmp	w0, #0x17
  408828:	b.eq	40883c <ferror@plt+0x5d9c>  // b.none
  40882c:	cbz	w0, 408848 <ferror@plt+0x5da8>
  408830:	bl	408188 <ferror@plt+0x56e8>
  408834:	mov	w0, #0x0                   	// #0
  408838:	b	40884c <ferror@plt+0x5dac>
  40883c:	add	x0, sp, #0x2c
  408840:	bl	40819c <ferror@plt+0x56fc>
  408844:	cbnz	w0, 408858 <ferror@plt+0x5db8>
  408848:	mov	w0, #0x6                   	// #6
  40884c:	ldr	x19, [sp, #16]
  408850:	ldp	x29, x30, [sp], #48
  408854:	ret
  408858:	add	x1, sp, #0x2c
  40885c:	bl	4085d4 <ferror@plt+0x5b34>
  408860:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  408864:	add	x0, sp, #0x2c
  408868:	bl	4086bc <ferror@plt+0x5c1c>
  40886c:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  408870:	add	x0, sp, #0x2c
  408874:	bl	408774 <ferror@plt+0x5cd4>
  408878:	cbnz	w0, 40884c <ferror@plt+0x5dac>
  40887c:	ldr	w0, [x19]
  408880:	ldr	w1, [sp, #44]
  408884:	eor	w0, w0, w1
  408888:	str	w0, [x19]
  40888c:	b	40881c <ferror@plt+0x5d7c>
  408890:	stp	x29, x30, [sp, #-48]!
  408894:	mov	x29, sp
  408898:	str	x19, [sp, #16]
  40889c:	mov	x19, x0
  4088a0:	add	x0, sp, #0x2c
  4088a4:	bl	40819c <ferror@plt+0x56fc>
  4088a8:	cmp	w0, #0x16
  4088ac:	b.eq	4088c0 <ferror@plt+0x5e20>  // b.none
  4088b0:	cbz	w0, 4088cc <ferror@plt+0x5e2c>
  4088b4:	bl	408188 <ferror@plt+0x56e8>
  4088b8:	mov	w0, #0x0                   	// #0
  4088bc:	b	4088d0 <ferror@plt+0x5e30>
  4088c0:	add	x0, sp, #0x2c
  4088c4:	bl	40819c <ferror@plt+0x56fc>
  4088c8:	cbnz	w0, 4088dc <ferror@plt+0x5e3c>
  4088cc:	mov	w0, #0x6                   	// #6
  4088d0:	ldr	x19, [sp, #16]
  4088d4:	ldp	x29, x30, [sp], #48
  4088d8:	ret
  4088dc:	add	x1, sp, #0x2c
  4088e0:	bl	4087ec <ferror@plt+0x5d4c>
  4088e4:	cbnz	w0, 4088d0 <ferror@plt+0x5e30>
  4088e8:	ldr	w0, [x19]
  4088ec:	ldr	w1, [sp, #44]
  4088f0:	orr	w0, w0, w1
  4088f4:	str	w0, [x19]
  4088f8:	b	4088a0 <ferror@plt+0x5e00>
  4088fc:	stp	x29, x30, [sp, #-48]!
  408900:	mov	x29, sp
  408904:	str	x19, [sp, #16]
  408908:	mov	x19, x0
  40890c:	add	x0, sp, #0x2c
  408910:	bl	40819c <ferror@plt+0x56fc>
  408914:	cmp	w0, #0x12
  408918:	b.eq	40892c <ferror@plt+0x5e8c>  // b.none
  40891c:	cbz	w0, 408938 <ferror@plt+0x5e98>
  408920:	bl	408188 <ferror@plt+0x56e8>
  408924:	mov	w0, #0x0                   	// #0
  408928:	b	40893c <ferror@plt+0x5e9c>
  40892c:	add	x0, sp, #0x2c
  408930:	bl	40819c <ferror@plt+0x56fc>
  408934:	cbnz	w0, 408948 <ferror@plt+0x5ea8>
  408938:	mov	w0, #0x6                   	// #6
  40893c:	ldr	x19, [sp, #16]
  408940:	ldp	x29, x30, [sp], #48
  408944:	ret
  408948:	add	x1, sp, #0x2c
  40894c:	bl	4087ec <ferror@plt+0x5d4c>
  408950:	cbnz	w0, 40897c <ferror@plt+0x5edc>
  408954:	add	x0, sp, #0x2c
  408958:	bl	408890 <ferror@plt+0x5df0>
  40895c:	cbnz	w0, 40897c <ferror@plt+0x5edc>
  408960:	ldr	w0, [x19]
  408964:	cbz	w0, 408974 <ferror@plt+0x5ed4>
  408968:	ldr	w0, [sp, #44]
  40896c:	cmp	w0, #0x0
  408970:	cset	w0, ne  // ne = any
  408974:	str	w0, [x19]
  408978:	b	40890c <ferror@plt+0x5e6c>
  40897c:	ldr	w1, [x19]
  408980:	cbnz	w1, 40893c <ferror@plt+0x5e9c>
  408984:	cmp	w0, #0x3
  408988:	b.ls	40890c <ferror@plt+0x5e6c>  // b.plast
  40898c:	b	40893c <ferror@plt+0x5e9c>
  408990:	stp	x29, x30, [sp, #-48]!
  408994:	mov	x29, sp
  408998:	stp	x19, x20, [sp, #16]
  40899c:	mov	x19, x1
  4089a0:	bl	4087ec <ferror@plt+0x5d4c>
  4089a4:	cbnz	w0, 4089f4 <ferror@plt+0x5f54>
  4089a8:	mov	x0, x19
  4089ac:	bl	408890 <ferror@plt+0x5df0>
  4089b0:	cbnz	w0, 4089f4 <ferror@plt+0x5f54>
  4089b4:	mov	x0, x19
  4089b8:	bl	4088fc <ferror@plt+0x5e5c>
  4089bc:	cbnz	w0, 4089f4 <ferror@plt+0x5f54>
  4089c0:	mov	w20, #0x1                   	// #1
  4089c4:	add	x0, sp, #0x2c
  4089c8:	bl	40819c <ferror@plt+0x56fc>
  4089cc:	cmp	w0, #0x13
  4089d0:	b.eq	4089e4 <ferror@plt+0x5f44>  // b.none
  4089d4:	cbz	w0, 4089f0 <ferror@plt+0x5f50>
  4089d8:	bl	408188 <ferror@plt+0x56e8>
  4089dc:	mov	w0, #0x0                   	// #0
  4089e0:	b	4089f4 <ferror@plt+0x5f54>
  4089e4:	add	x0, sp, #0x2c
  4089e8:	bl	40819c <ferror@plt+0x56fc>
  4089ec:	cbnz	w0, 408a00 <ferror@plt+0x5f60>
  4089f0:	mov	w0, #0x6                   	// #6
  4089f4:	ldp	x19, x20, [sp, #16]
  4089f8:	ldp	x29, x30, [sp], #48
  4089fc:	ret
  408a00:	add	x1, sp, #0x2c
  408a04:	bl	4087ec <ferror@plt+0x5d4c>
  408a08:	cbnz	w0, 408a40 <ferror@plt+0x5fa0>
  408a0c:	add	x0, sp, #0x2c
  408a10:	bl	408890 <ferror@plt+0x5df0>
  408a14:	cbnz	w0, 408a40 <ferror@plt+0x5fa0>
  408a18:	add	x0, sp, #0x2c
  408a1c:	bl	4088fc <ferror@plt+0x5e5c>
  408a20:	cbnz	w0, 408a40 <ferror@plt+0x5fa0>
  408a24:	ldr	w0, [x19]
  408a28:	ldr	w1, [sp, #44]
  408a2c:	orr	w0, w0, w1
  408a30:	cmp	w0, #0x0
  408a34:	cset	w0, ne  // ne = any
  408a38:	str	w0, [x19]
  408a3c:	b	4089c4 <ferror@plt+0x5f24>
  408a40:	ldr	w1, [x19]
  408a44:	cbz	w1, 4089f4 <ferror@plt+0x5f54>
  408a48:	cmp	w0, #0x3
  408a4c:	b.hi	4089f4 <ferror@plt+0x5f54>  // b.pmore
  408a50:	str	w20, [x19]
  408a54:	b	4089c4 <ferror@plt+0x5f24>
  408a58:	stp	x29, x30, [sp, #-48]!
  408a5c:	cmp	w0, #0x14
  408a60:	mov	x29, sp
  408a64:	stp	x19, x20, [sp, #16]
  408a68:	mov	w20, w0
  408a6c:	mov	x19, x1
  408a70:	b.hi	408ae8 <ferror@plt+0x6048>  // b.pmore
  408a74:	mov	x0, #0xc                   	// #12
  408a78:	movk	x0, #0x12, lsl #16
  408a7c:	lsr	x0, x0, x20
  408a80:	tbz	w0, #0, 408ae8 <ferror@plt+0x6048>
  408a84:	mov	x0, x1
  408a88:	bl	40819c <ferror@plt+0x56fc>
  408a8c:	cbz	w0, 408b18 <ferror@plt+0x6078>
  408a90:	mov	x1, x19
  408a94:	bl	408a58 <ferror@plt+0x5fb8>
  408a98:	cbnz	w0, 408ab0 <ferror@plt+0x6010>
  408a9c:	cmp	w20, #0x3
  408aa0:	b.ne	408abc <ferror@plt+0x601c>  // b.any
  408aa4:	ldr	w1, [x19]
  408aa8:	neg	w1, w1
  408aac:	str	w1, [x19]
  408ab0:	ldp	x19, x20, [sp, #16]
  408ab4:	ldp	x29, x30, [sp], #48
  408ab8:	ret
  408abc:	cmp	w20, #0x14
  408ac0:	b.ne	408ad0 <ferror@plt+0x6030>  // b.any
  408ac4:	ldr	w1, [x19]
  408ac8:	mvn	w1, w1
  408acc:	b	408aac <ferror@plt+0x600c>
  408ad0:	cmp	w20, #0x11
  408ad4:	b.ne	408ab0 <ferror@plt+0x6010>  // b.any
  408ad8:	ldr	w1, [x19]
  408adc:	cmp	w1, #0x0
  408ae0:	cset	w1, eq  // eq = none
  408ae4:	b	408aac <ferror@plt+0x600c>
  408ae8:	cmp	w20, #0x18
  408aec:	b.eq	408b0c <ferror@plt+0x606c>  // b.none
  408af0:	cmp	w20, #0x1a
  408af4:	b.eq	408b48 <ferror@plt+0x60a8>  // b.none
  408af8:	cmp	w20, #0x1
  408afc:	mov	w0, #0x4                   	// #4
  408b00:	mov	w1, #0x8                   	// #8
  408b04:	csel	w0, w0, w1, ne  // ne = any
  408b08:	b	408ab0 <ferror@plt+0x6010>
  408b0c:	mov	x0, x19
  408b10:	bl	40819c <ferror@plt+0x56fc>
  408b14:	cbnz	w0, 408b20 <ferror@plt+0x6080>
  408b18:	mov	w0, #0x6                   	// #6
  408b1c:	b	408ab0 <ferror@plt+0x6010>
  408b20:	mov	x1, x19
  408b24:	bl	408990 <ferror@plt+0x5ef0>
  408b28:	cbnz	w0, 408ab0 <ferror@plt+0x6010>
  408b2c:	add	x0, sp, #0x2c
  408b30:	bl	40819c <ferror@plt+0x56fc>
  408b34:	cbz	w0, 408b18 <ferror@plt+0x6078>
  408b38:	cmp	w0, #0x19
  408b3c:	mov	w0, #0x5                   	// #5
  408b40:	csel	w0, wzr, w0, eq  // eq = none
  408b44:	b	408ab0 <ferror@plt+0x6010>
  408b48:	mov	w0, #0x0                   	// #0
  408b4c:	b	408ab0 <ferror@plt+0x6010>
  408b50:	stp	x29, x30, [sp, #-48]!
  408b54:	mov	x29, sp
  408b58:	str	x19, [sp, #16]
  408b5c:	mov	x19, x1
  408b60:	bl	408a58 <ferror@plt+0x5fb8>
  408b64:	cbnz	w0, 408b98 <ferror@plt+0x60f8>
  408b68:	add	x0, sp, #0x2c
  408b6c:	bl	40819c <ferror@plt+0x56fc>
  408b70:	cmp	w0, #0x4
  408b74:	b.eq	408b88 <ferror@plt+0x60e8>  // b.none
  408b78:	cbz	w0, 408b94 <ferror@plt+0x60f4>
  408b7c:	bl	408188 <ferror@plt+0x56e8>
  408b80:	mov	w0, #0x0                   	// #0
  408b84:	b	408b98 <ferror@plt+0x60f8>
  408b88:	add	x0, sp, #0x2c
  408b8c:	bl	40819c <ferror@plt+0x56fc>
  408b90:	cbnz	w0, 408ba4 <ferror@plt+0x6104>
  408b94:	mov	w0, #0x6                   	// #6
  408b98:	ldr	x19, [sp, #16]
  408b9c:	ldp	x29, x30, [sp], #48
  408ba0:	ret
  408ba4:	add	x1, sp, #0x2c
  408ba8:	bl	408b50 <ferror@plt+0x60b0>
  408bac:	cbnz	w0, 408b98 <ferror@plt+0x60f8>
  408bb0:	ldr	w0, [sp, #44]
  408bb4:	tbnz	w0, #31, 408be8 <ferror@plt+0x6148>
  408bb8:	ldr	w2, [x19]
  408bbc:	orr	w1, w0, w2
  408bc0:	cbz	w1, 408bf0 <ferror@plt+0x6150>
  408bc4:	mov	w1, #0x1                   	// #1
  408bc8:	sub	w0, w0, #0x1
  408bcc:	cmn	w0, #0x1
  408bd0:	b.ne	408be0 <ferror@plt+0x6140>  // b.any
  408bd4:	str	w1, [x19]
  408bd8:	str	w0, [sp, #44]
  408bdc:	b	408b68 <ferror@plt+0x60c8>
  408be0:	mul	w1, w1, w2
  408be4:	b	408bc8 <ferror@plt+0x6128>
  408be8:	mov	w0, #0x3                   	// #3
  408bec:	b	408b98 <ferror@plt+0x60f8>
  408bf0:	mov	w0, #0x1                   	// #1
  408bf4:	b	408b98 <ferror@plt+0x60f8>
  408bf8:	stp	x29, x30, [sp, #-48]!
  408bfc:	mov	x29, sp
  408c00:	stp	x19, x20, [sp, #16]
  408c04:	mov	x19, x0
  408c08:	add	x0, sp, #0x2c
  408c0c:	bl	40819c <ferror@plt+0x56fc>
  408c10:	mov	w20, w0
  408c14:	sub	w0, w0, #0x5
  408c18:	cmp	w0, #0x2
  408c1c:	b.ls	408c30 <ferror@plt+0x6190>  // b.plast
  408c20:	cbz	w20, 408c3c <ferror@plt+0x619c>
  408c24:	bl	408188 <ferror@plt+0x56e8>
  408c28:	mov	w0, #0x0                   	// #0
  408c2c:	b	408c40 <ferror@plt+0x61a0>
  408c30:	add	x0, sp, #0x2c
  408c34:	bl	40819c <ferror@plt+0x56fc>
  408c38:	cbnz	w0, 408c4c <ferror@plt+0x61ac>
  408c3c:	mov	w0, #0x6                   	// #6
  408c40:	ldp	x19, x20, [sp, #16]
  408c44:	ldp	x29, x30, [sp], #48
  408c48:	ret
  408c4c:	add	x1, sp, #0x2c
  408c50:	bl	408b50 <ferror@plt+0x60b0>
  408c54:	cbnz	w0, 408c40 <ferror@plt+0x61a0>
  408c58:	cmp	w20, #0x6
  408c5c:	b.eq	408c84 <ferror@plt+0x61e4>  // b.none
  408c60:	cmp	w20, #0x7
  408c64:	b.eq	408ca8 <ferror@plt+0x6208>  // b.none
  408c68:	cmp	w20, #0x5
  408c6c:	b.ne	408cd0 <ferror@plt+0x6230>  // b.any
  408c70:	ldr	w0, [x19]
  408c74:	ldr	w1, [sp, #44]
  408c78:	mul	w0, w0, w1
  408c7c:	str	w0, [x19]
  408c80:	b	408c08 <ferror@plt+0x6168>
  408c84:	ldr	w1, [sp, #44]
  408c88:	cbz	w1, 408cec <ferror@plt+0x624c>
  408c8c:	ldr	w0, [x19]
  408c90:	cmn	w1, #0x1
  408c94:	b.ne	408ca0 <ferror@plt+0x6200>  // b.any
  408c98:	neg	w0, w0
  408c9c:	b	408c7c <ferror@plt+0x61dc>
  408ca0:	sdiv	w0, w0, w1
  408ca4:	b	408c7c <ferror@plt+0x61dc>
  408ca8:	ldr	w0, [sp, #44]
  408cac:	cbz	w0, 408cf4 <ferror@plt+0x6254>
  408cb0:	cmn	w0, #0x1
  408cb4:	b.ne	408cc0 <ferror@plt+0x6220>  // b.any
  408cb8:	str	wzr, [x19]
  408cbc:	b	408c08 <ferror@plt+0x6168>
  408cc0:	ldr	w2, [x19]
  408cc4:	sdiv	w1, w2, w0
  408cc8:	msub	w0, w1, w0, w2
  408ccc:	b	408c7c <ferror@plt+0x61dc>
  408cd0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408cd4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408cd8:	add	x2, x2, #0xd88
  408cdc:	mov	w1, #0x0                   	// #0
  408ce0:	ldr	w0, [x0, #1660]
  408ce4:	bl	403488 <ferror@plt+0x9e8>
  408ce8:	bl	4027d0 <abort@plt>
  408cec:	mov	w0, #0x1                   	// #1
  408cf0:	b	408c40 <ferror@plt+0x61a0>
  408cf4:	mov	w0, #0x2                   	// #2
  408cf8:	b	408c40 <ferror@plt+0x61a0>
  408cfc:	stp	x29, x30, [sp, #-48]!
  408d00:	mov	x29, sp
  408d04:	stp	x19, x20, [sp, #16]
  408d08:	mov	x19, x1
  408d0c:	bl	408b50 <ferror@plt+0x60b0>
  408d10:	cbnz	w0, 408d58 <ferror@plt+0x62b8>
  408d14:	mov	x0, x19
  408d18:	bl	408bf8 <ferror@plt+0x6158>
  408d1c:	cbnz	w0, 408d58 <ferror@plt+0x62b8>
  408d20:	add	x0, sp, #0x2c
  408d24:	bl	40819c <ferror@plt+0x56fc>
  408d28:	mov	w20, w0
  408d2c:	sub	w0, w0, #0x2
  408d30:	cmp	w0, #0x1
  408d34:	b.ls	408d48 <ferror@plt+0x62a8>  // b.plast
  408d38:	cbz	w20, 408d54 <ferror@plt+0x62b4>
  408d3c:	bl	408188 <ferror@plt+0x56e8>
  408d40:	mov	w0, #0x0                   	// #0
  408d44:	b	408d58 <ferror@plt+0x62b8>
  408d48:	add	x0, sp, #0x2c
  408d4c:	bl	40819c <ferror@plt+0x56fc>
  408d50:	cbnz	w0, 408d64 <ferror@plt+0x62c4>
  408d54:	mov	w0, #0x6                   	// #6
  408d58:	ldp	x19, x20, [sp, #16]
  408d5c:	ldp	x29, x30, [sp], #48
  408d60:	ret
  408d64:	add	x1, sp, #0x2c
  408d68:	bl	408b50 <ferror@plt+0x60b0>
  408d6c:	cbnz	w0, 408d58 <ferror@plt+0x62b8>
  408d70:	add	x0, sp, #0x2c
  408d74:	bl	408bf8 <ferror@plt+0x6158>
  408d78:	cbnz	w0, 408d58 <ferror@plt+0x62b8>
  408d7c:	ldr	w2, [x19]
  408d80:	cmp	w20, #0x2
  408d84:	ldr	w0, [sp, #44]
  408d88:	add	w1, w2, w0
  408d8c:	sub	w2, w2, w0
  408d90:	csel	w2, w2, w1, ne  // ne = any
  408d94:	str	w2, [x19]
  408d98:	b	408d20 <ferror@plt+0x6280>
  408d9c:	stp	x29, x30, [sp, #-48]!
  408da0:	mov	x29, sp
  408da4:	stp	x19, x20, [sp, #16]
  408da8:	mov	x20, x0
  408dac:	add	x0, sp, #0x2c
  408db0:	bl	40819c <ferror@plt+0x56fc>
  408db4:	mov	w19, w0
  408db8:	sub	w0, w0, #0xf
  408dbc:	cmp	w0, #0x1
  408dc0:	b.ls	408dd4 <ferror@plt+0x6334>  // b.plast
  408dc4:	cbz	w19, 408de0 <ferror@plt+0x6340>
  408dc8:	bl	408188 <ferror@plt+0x56e8>
  408dcc:	mov	w0, #0x0                   	// #0
  408dd0:	b	408de4 <ferror@plt+0x6344>
  408dd4:	add	x0, sp, #0x2c
  408dd8:	bl	40819c <ferror@plt+0x56fc>
  408ddc:	cbnz	w0, 408df0 <ferror@plt+0x6350>
  408de0:	mov	w0, #0x6                   	// #6
  408de4:	ldp	x19, x20, [sp, #16]
  408de8:	ldp	x29, x30, [sp], #48
  408dec:	ret
  408df0:	add	x1, sp, #0x2c
  408df4:	bl	408cfc <ferror@plt+0x625c>
  408df8:	cbnz	w0, 408de4 <ferror@plt+0x6344>
  408dfc:	ldr	w1, [x20]
  408e00:	cmp	w19, #0xf
  408e04:	ldr	w0, [sp, #44]
  408e08:	b.ne	408e18 <ferror@plt+0x6378>  // b.any
  408e0c:	lsl	w1, w1, w0
  408e10:	str	w1, [x20]
  408e14:	b	408dac <ferror@plt+0x630c>
  408e18:	cmp	w1, #0x0
  408e1c:	cinv	w2, w1, lt  // lt = tstop
  408e20:	lsr	w2, w2, w0
  408e24:	cinv	w2, w2, lt  // lt = tstop
  408e28:	str	w2, [x20]
  408e2c:	b	408dac <ferror@plt+0x630c>
  408e30:	stp	x29, x30, [sp, #-64]!
  408e34:	mov	x3, x0
  408e38:	mov	x29, sp
  408e3c:	str	x21, [sp, #32]
  408e40:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408e44:	str	x0, [sp, #56]
  408e48:	add	x0, x21, #0x860
  408e4c:	stp	x19, x20, [sp, #16]
  408e50:	mov	x20, x1
  408e54:	str	x3, [x21, #2144]
  408e58:	str	xzr, [x0, #8]
  408e5c:	mov	x0, x1
  408e60:	bl	40819c <ferror@plt+0x56fc>
  408e64:	mov	x1, x20
  408e68:	bl	408990 <ferror@plt+0x5ef0>
  408e6c:	mov	w19, w0
  408e70:	ldr	x3, [sp, #56]
  408e74:	cbnz	w0, 408ec4 <ferror@plt+0x6424>
  408e78:	ldr	x0, [x21, #2144]
  408e7c:	ldrb	w0, [x0]
  408e80:	cbz	w0, 408f38 <ferror@plt+0x6498>
  408e84:	mov	x0, x20
  408e88:	bl	40819c <ferror@plt+0x56fc>
  408e8c:	cmp	w0, #0x1
  408e90:	ldr	x3, [sp, #56]
  408e94:	b.ne	408f1c <ferror@plt+0x647c>  // b.any
  408e98:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408e9c:	mov	w1, #0x0                   	// #0
  408ea0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408ea4:	add	x2, x2, #0xe58
  408ea8:	ldr	w0, [x0, #1660]
  408eac:	mov	w19, #0x8                   	// #8
  408eb0:	bl	403488 <ferror@plt+0x9e8>
  408eb4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  408eb8:	mov	w1, #0x1                   	// #1
  408ebc:	str	w1, [x0, #3416]
  408ec0:	b	408f38 <ferror@plt+0x6498>
  408ec4:	sub	w2, w0, #0x1
  408ec8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408ecc:	cmp	w2, #0x7
  408ed0:	b.hi	408f74 <ferror@plt+0x64d4>  // b.pmore
  408ed4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  408ed8:	add	x1, x1, #0xd4c
  408edc:	ldrb	w1, [x1, w2, uxtw]
  408ee0:	adr	x2, 408eec <ferror@plt+0x644c>
  408ee4:	add	x1, x2, w1, sxtb #2
  408ee8:	br	x1
  408eec:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408ef0:	add	x2, x2, #0xdb5
  408ef4:	ldr	w0, [x0, #1660]
  408ef8:	mov	w1, #0x0                   	// #0
  408efc:	bl	403488 <ferror@plt+0x9e8>
  408f00:	b	408f38 <ferror@plt+0x6498>
  408f04:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f08:	add	x2, x2, #0xdec
  408f0c:	b	408ef4 <ferror@plt+0x6454>
  408f10:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f14:	add	x2, x2, #0xe07
  408f18:	b	408ef4 <ferror@plt+0x6454>
  408f1c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408f20:	mov	w19, #0x7                   	// #7
  408f24:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f28:	mov	w1, #0x0                   	// #0
  408f2c:	ldr	w0, [x0, #1660]
  408f30:	add	x2, x2, #0xe2e
  408f34:	bl	403488 <ferror@plt+0x9e8>
  408f38:	cmp	w19, #0x0
  408f3c:	cset	w0, ne  // ne = any
  408f40:	ldp	x19, x20, [sp, #16]
  408f44:	ldr	x21, [sp, #32]
  408f48:	ldp	x29, x30, [sp], #64
  408f4c:	ret
  408f50:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f54:	add	x2, x2, #0xe75
  408f58:	b	408ef4 <ferror@plt+0x6454>
  408f5c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f60:	add	x2, x2, #0xe90
  408f64:	b	408ef4 <ferror@plt+0x6454>
  408f68:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f6c:	add	x2, x2, #0xeab
  408f70:	b	408ef4 <ferror@plt+0x6454>
  408f74:	ldr	w0, [x0, #1660]
  408f78:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408f7c:	add	x2, x2, #0xec9
  408f80:	mov	w1, #0x0                   	// #0
  408f84:	bl	403488 <ferror@plt+0x9e8>
  408f88:	bl	4027d0 <abort@plt>
  408f8c:	stp	x29, x30, [sp, #-64]!
  408f90:	mov	x29, sp
  408f94:	stp	x19, x20, [sp, #16]
  408f98:	mov	x20, x0
  408f9c:	stp	x21, x22, [sp, #32]
  408fa0:	bl	402450 <strlen@plt>
  408fa4:	cbnz	x0, 408fd4 <ferror@plt+0x6534>
  408fa8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  408fac:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  408fb0:	mov	w1, #0x0                   	// #0
  408fb4:	add	x2, x2, #0xef7
  408fb8:	ldr	w0, [x0, #1660]
  408fbc:	bl	403488 <ferror@plt+0x9e8>
  408fc0:	mov	w0, #0x0                   	// #0
  408fc4:	ldp	x19, x20, [sp, #16]
  408fc8:	ldp	x21, x22, [sp, #32]
  408fcc:	ldp	x29, x30, [sp], #64
  408fd0:	ret
  408fd4:	mov	x22, x0
  408fd8:	bl	402a30 <__errno_location@plt>
  408fdc:	mov	x21, x0
  408fe0:	add	x1, sp, #0x38
  408fe4:	mov	x0, x20
  408fe8:	mov	w2, #0xa                   	// #10
  408fec:	str	wzr, [x21]
  408ff0:	bl	402890 <strtol@plt>
  408ff4:	mov	x19, x0
  408ff8:	ldr	x0, [sp, #56]
  408ffc:	sub	x0, x0, x20
  409000:	cmp	x0, x22
  409004:	b.eq	40902c <ferror@plt+0x658c>  // b.none
  409008:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40900c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409010:	mov	x3, x20
  409014:	add	x2, x2, #0xf11
  409018:	ldr	w0, [x0, #1660]
  40901c:	mov	w1, #0x0                   	// #0
  409020:	bl	403488 <ferror@plt+0x9e8>
  409024:	mov	w0, w19
  409028:	b	408fc4 <ferror@plt+0x6524>
  40902c:	bl	402870 <__ctype_b_loc@plt>
  409030:	ldrb	w1, [x20]
  409034:	ldr	x0, [x0]
  409038:	ldrh	w0, [x0, x1, lsl #1]
  40903c:	tbz	w0, #13, 40905c <ferror@plt+0x65bc>
  409040:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409044:	add	x2, x2, #0xf29
  409048:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40904c:	mov	w1, #0x0                   	// #0
  409050:	ldr	w0, [x0, #1660]
  409054:	bl	403488 <ferror@plt+0x9e8>
  409058:	b	409024 <ferror@plt+0x6584>
  40905c:	ldr	w0, [x21]
  409060:	cmp	w0, #0x22
  409064:	b.eq	409070 <ferror@plt+0x65d0>  // b.none
  409068:	cmp	x19, w19, sxtw
  40906c:	b.eq	409024 <ferror@plt+0x6584>  // b.none
  409070:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409074:	add	x2, x2, #0xf44
  409078:	b	409048 <ferror@plt+0x65a8>
  40907c:	stp	x29, x30, [sp, #-304]!
  409080:	mov	x29, sp
  409084:	stp	x21, x22, [sp, #32]
  409088:	mov	x21, x0
  40908c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  409090:	add	x0, x0, #0xf86
  409094:	stp	x19, x20, [sp, #16]
  409098:	mov	w20, w1
  40909c:	stp	x23, x24, [sp, #48]
  4090a0:	mov	x19, x2
  4090a4:	ldr	x1, [x0]
  4090a8:	str	x1, [sp, #160]
  4090ac:	ldur	x0, [x0, #6]
  4090b0:	stp	x25, x26, [sp, #64]
  4090b4:	stp	x27, x28, [sp, #80]
  4090b8:	stur	x0, [sp, #166]
  4090bc:	str	d8, [sp, #96]
  4090c0:	cbz	w20, 409174 <ferror@plt+0x66d4>
  4090c4:	ldr	x0, [x19], #8
  4090c8:	sub	w20, w20, #0x1
  4090cc:	ldr	x25, [x0, #8]
  4090d0:	add	x28, sp, #0xb0
  4090d4:	mov	x0, x28
  4090d8:	mov	x2, #0x80                  	// #128
  4090dc:	mov	w1, #0x0                   	// #0
  4090e0:	bl	4026a0 <memset@plt>
  4090e4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  4090e8:	mov	x22, x25
  4090ec:	add	x0, x0, #0xf94
  4090f0:	str	x0, [sp, #120]
  4090f4:	add	x0, sp, #0xa1
  4090f8:	str	x0, [sp, #128]
  4090fc:	mov	x0, x22
  409100:	mov	w1, #0x25                  	// #37
  409104:	bl	402910 <strchr@plt>
  409108:	mov	x23, x0
  40910c:	ldp	x27, x24, [x21, #24]
  409110:	cbnz	x0, 409180 <ferror@plt+0x66e0>
  409114:	sub	x24, x24, x27
  409118:	mov	x0, x22
  40911c:	bl	402450 <strlen@plt>
  409120:	mov	x19, x0
  409124:	cmp	x0, x24
  409128:	b.ls	409138 <ferror@plt+0x6698>  // b.plast
  40912c:	mov	x1, x0
  409130:	mov	x0, x21
  409134:	bl	414990 <_obstack_newchunk@@Base>
  409138:	ldr	x0, [x21, #24]
  40913c:	mov	x2, x19
  409140:	mov	x1, x22
  409144:	bl	402420 <memcpy@plt>
  409148:	ldr	x0, [x21, #24]
  40914c:	ldp	x23, x24, [sp, #48]
  409150:	add	x0, x0, x19
  409154:	ldp	x19, x20, [sp, #16]
  409158:	ldp	x25, x26, [sp, #64]
  40915c:	ldp	x27, x28, [sp, #80]
  409160:	ldr	d8, [sp, #96]
  409164:	str	x0, [x21, #24]
  409168:	ldp	x21, x22, [sp, #32]
  40916c:	ldp	x29, x30, [sp], #304
  409170:	ret
  409174:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x14bc>
  409178:	add	x25, x25, #0x3df
  40917c:	b	4090d0 <ferror@plt+0x6630>
  409180:	sub	x26, x0, x22
  409184:	sub	x24, x24, x27
  409188:	cmp	x26, x24
  40918c:	b.ls	40919c <ferror@plt+0x66fc>  // b.plast
  409190:	mov	x1, x26
  409194:	mov	x0, x21
  409198:	bl	414990 <_obstack_newchunk@@Base>
  40919c:	ldr	x0, [x21, #24]
  4091a0:	mov	x2, x26
  4091a4:	mov	x1, x22
  4091a8:	bl	402420 <memcpy@plt>
  4091ac:	ldr	x0, [x21, #24]
  4091b0:	add	x2, x0, x26
  4091b4:	str	x2, [x21, #24]
  4091b8:	ldrb	w0, [x23, #1]
  4091bc:	cmp	w0, #0x25
  4091c0:	b.ne	4091f8 <ferror@plt+0x6758>  // b.any
  4091c4:	ldr	x0, [x21, #32]
  4091c8:	cmp	x2, x0
  4091cc:	b.ne	4091dc <ferror@plt+0x673c>  // b.any
  4091d0:	mov	x0, x21
  4091d4:	mov	x1, #0x1                   	// #1
  4091d8:	bl	414990 <_obstack_newchunk@@Base>
  4091dc:	ldr	x0, [x21, #24]
  4091e0:	add	x22, x23, #0x2
  4091e4:	add	x1, x0, #0x1
  4091e8:	str	x1, [x21, #24]
  4091ec:	mov	w1, #0x25                  	// #37
  4091f0:	strb	w1, [x0]
  4091f4:	b	4090fc <ferror@plt+0x665c>
  4091f8:	mov	w1, #0x101                 	// #257
  4091fc:	mov	w0, #0x1                   	// #1
  409200:	mov	w4, #0x1                   	// #1
  409204:	add	x23, x23, #0x1
  409208:	mov	w9, w4
  40920c:	mov	w6, w4
  409210:	mov	w3, w4
  409214:	mov	w5, w4
  409218:	strh	w1, [sp, #246]
  40921c:	mov	w1, #0x1010101             	// #16843009
  409220:	mov	w10, #0x0                   	// #0
  409224:	mov	w2, #0x0                   	// #0
  409228:	mov	w7, #0x0                   	// #0
  40922c:	mov	w8, #0x0                   	// #0
  409230:	strb	w0, [sp, #241]
  409234:	strb	w0, [sp, #245]
  409238:	strb	w0, [sp, #264]
  40923c:	strb	w0, [sp, #273]
  409240:	strb	w0, [sp, #275]
  409244:	str	w1, [sp, #276]
  409248:	mov	w1, #0x0                   	// #0
  40924c:	strb	w0, [sp, #281]
  409250:	strb	w0, [sp, #287]
  409254:	strb	w0, [sp, #291]
  409258:	strb	w0, [sp, #293]
  40925c:	strb	w0, [sp, #296]
  409260:	mov	w0, #0x0                   	// #0
  409264:	ldrb	w11, [x23]
  409268:	sub	w11, w11, #0x20
  40926c:	cmp	w11, #0x10
  409270:	b.hi	4093f0 <ferror@plt+0x6950>  // b.pmore
  409274:	ldr	x12, [sp, #120]
  409278:	ldrb	w11, [x12, w11, uxtw]
  40927c:	adr	x12, 409288 <ferror@plt+0x67e8>
  409280:	add	x11, x12, w11, sxtb #2
  409284:	br	x11
  409288:	mov	x23, x26
  40928c:	b	409264 <ferror@plt+0x67c4>
  409290:	mov	w7, #0x1                   	// #1
  409294:	orr	w0, w0, #0x1
  409298:	mov	w1, w7
  40929c:	mov	w8, w7
  4092a0:	mov	w6, #0x0                   	// #0
  4092a4:	mov	w3, #0x0                   	// #0
  4092a8:	mov	w5, #0x0                   	// #0
  4092ac:	add	x26, x23, #0x1
  4092b0:	tbz	w0, #6, 409288 <ferror@plt+0x67e8>
  4092b4:	cbz	w8, 4098c0 <ferror@plt+0x6e20>
  4092b8:	strb	w5, [sp, #264]
  4092bc:	strb	w5, [sp, #296]
  4092c0:	cbz	w1, 4092cc <ferror@plt+0x682c>
  4092c4:	strb	w3, [sp, #291]
  4092c8:	cbz	w8, 4092d0 <ferror@plt+0x6830>
  4092cc:	strb	w5, [sp, #287]
  4092d0:	cbz	w7, 4098b8 <ferror@plt+0x6e18>
  4092d4:	strb	w6, [sp, #245]
  4092d8:	strb	w6, [sp, #277]
  4092dc:	cbz	w1, 4092e8 <ferror@plt+0x6848>
  4092e0:	strb	w3, [sp, #275]
  4092e4:	cbz	w7, 4092f0 <ferror@plt+0x6850>
  4092e8:	strb	w6, [sp, #241]
  4092ec:	strb	w6, [sp, #273]
  4092f0:	cbz	w2, 4092f8 <ferror@plt+0x6858>
  4092f4:	strb	w9, [sp, #293]
  4092f8:	cbz	w10, 409304 <ferror@plt+0x6864>
  4092fc:	strb	w4, [sp, #276]
  409300:	strb	w4, [sp, #281]
  409304:	tbz	w0, #0, 4093f8 <ferror@plt+0x6958>
  409308:	add	x22, sp, #0xa2
  40930c:	mov	w1, #0x27                  	// #39
  409310:	strb	w1, [sp, #161]
  409314:	tbz	w0, #1, 409320 <ferror@plt+0x6880>
  409318:	mov	w1, #0x2b                  	// #43
  40931c:	strb	w1, [x22], #1
  409320:	tbz	w0, #2, 40932c <ferror@plt+0x688c>
  409324:	mov	w1, #0x2d                  	// #45
  409328:	strb	w1, [x22], #1
  40932c:	tbz	w0, #3, 409338 <ferror@plt+0x6898>
  409330:	mov	w1, #0x20                  	// #32
  409334:	strb	w1, [x22], #1
  409338:	tbz	w0, #4, 409344 <ferror@plt+0x68a4>
  40933c:	mov	w1, #0x30                  	// #48
  409340:	strb	w1, [x22], #1
  409344:	tbz	w0, #5, 409350 <ferror@plt+0x68b0>
  409348:	mov	w0, #0x23                  	// #35
  40934c:	strb	w0, [x22], #1
  409350:	mov	w0, #0x2a                  	// #42
  409354:	strb	w0, [x22]
  409358:	ldrb	w0, [x23]
  40935c:	cmp	w0, #0x2a
  409360:	b.eq	409400 <ferror@plt+0x6960>  // b.none
  409364:	bl	402870 <__ctype_b_loc@plt>
  409368:	mov	x26, x23
  40936c:	ldr	x3, [x0]
  409370:	mov	w23, #0x0                   	// #0
  409374:	mov	w4, #0xa                   	// #10
  409378:	mov	x1, x26
  40937c:	ldrb	w0, [x1], #1
  409380:	ubfiz	x2, x0, #1, #8
  409384:	ldrh	w2, [x3, x2]
  409388:	tbz	w2, #11, 409418 <ferror@plt+0x6978>
  40938c:	madd	w23, w23, w4, w0
  409390:	mov	x26, x1
  409394:	sub	w23, w23, #0x30
  409398:	b	409378 <ferror@plt+0x68d8>
  40939c:	orr	w0, w0, #0x2
  4093a0:	mov	w2, #0x1                   	// #1
  4093a4:	mov	w9, #0x0                   	// #0
  4093a8:	mov	w1, w2
  4093ac:	mov	w8, w2
  4093b0:	mov	w3, #0x0                   	// #0
  4093b4:	b	4092a8 <ferror@plt+0x6808>
  4093b8:	orr	w0, w0, #0x8
  4093bc:	b	4093a0 <ferror@plt+0x6900>
  4093c0:	orr	w0, w0, #0x10
  4093c4:	mov	w1, #0x1                   	// #1
  4093c8:	mov	w3, #0x0                   	// #0
  4093cc:	b	4092ac <ferror@plt+0x680c>
  4093d0:	mov	w10, #0x1                   	// #1
  4093d4:	orr	w0, w0, #0x20
  4093d8:	mov	w2, w10
  4093dc:	mov	w4, #0x0                   	// #0
  4093e0:	mov	w9, #0x0                   	// #0
  4093e4:	b	4093c4 <ferror@plt+0x6924>
  4093e8:	orr	w0, w0, #0x4
  4093ec:	b	4092ac <ferror@plt+0x680c>
  4093f0:	orr	w0, w0, #0x40
  4093f4:	b	4092ac <ferror@plt+0x680c>
  4093f8:	ldr	x22, [sp, #128]
  4093fc:	b	409314 <ferror@plt+0x6874>
  409400:	cbz	w20, 409474 <ferror@plt+0x69d4>
  409404:	ldr	x0, [x19], #8
  409408:	sub	w20, w20, #0x1
  40940c:	ldr	x0, [x0, #8]
  409410:	bl	408f8c <ferror@plt+0x64ec>
  409414:	mov	w23, w0
  409418:	mov	w0, #0x2a2e                	// #10798
  40941c:	sturh	w0, [x22, #1]
  409420:	ldrb	w0, [x26]
  409424:	cmp	w0, #0x2e
  409428:	b.ne	409500 <ferror@plt+0x6a60>  // b.any
  40942c:	ldrb	w0, [x26, #1]
  409430:	strb	wzr, [sp, #275]
  409434:	cmp	w0, #0x2a
  409438:	b.eq	40947c <ferror@plt+0x69dc>  // b.none
  40943c:	bl	402870 <__ctype_b_loc@plt>
  409440:	add	x26, x26, #0x1
  409444:	ldr	x3, [x0]
  409448:	mov	w24, #0x0                   	// #0
  40944c:	mov	w4, #0xa                   	// #10
  409450:	mov	x1, x26
  409454:	ldrb	w0, [x1], #1
  409458:	ubfiz	x2, x0, #1, #8
  40945c:	ldrh	w2, [x3, x2]
  409460:	tbz	w2, #11, 409498 <ferror@plt+0x69f8>
  409464:	madd	w24, w24, w4, w0
  409468:	mov	x26, x1
  40946c:	sub	w24, w24, #0x30
  409470:	b	409450 <ferror@plt+0x69b0>
  409474:	mov	w23, #0x0                   	// #0
  409478:	b	409418 <ferror@plt+0x6978>
  40947c:	cbz	w20, 4094f8 <ferror@plt+0x6a58>
  409480:	ldr	x0, [x19], #8
  409484:	sub	w20, w20, #0x1
  409488:	ldr	x0, [x0, #8]
  40948c:	bl	408f8c <ferror@plt+0x64ec>
  409490:	mov	w24, w0
  409494:	add	x26, x26, #0x2
  409498:	mov	x27, x26
  40949c:	ldrb	w0, [x27], #1
  4094a0:	cmp	w0, #0x6c
  4094a4:	b.ne	409508 <ferror@plt+0x6a68>  // b.any
  4094a8:	add	x1, x22, #0x4
  4094ac:	strb	w0, [x22, #3]
  4094b0:	mov	w0, #0x1                   	// #1
  4094b4:	strb	wzr, [sp, #275]
  4094b8:	strb	wzr, [sp, #291]
  4094bc:	mov	x22, x27
  4094c0:	ldrb	w26, [x22], #1
  4094c4:	tbnz	w26, #7, 4094d0 <ferror@plt+0x6a30>
  4094c8:	ldrb	w2, [x28, w26, sxtw]
  4094cc:	cbnz	w2, 409568 <ferror@plt+0x6ac8>
  4094d0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4094d4:	mov	x3, x25
  4094d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4094dc:	mov	w1, #0x0                   	// #0
  4094e0:	ldr	w0, [x0, #1660]
  4094e4:	add	x2, x2, #0xf5e
  4094e8:	bl	403488 <ferror@plt+0x9e8>
  4094ec:	cmp	w26, #0x0
  4094f0:	csel	x22, x22, x27, ne  // ne = any
  4094f4:	b	4090fc <ferror@plt+0x665c>
  4094f8:	mov	w24, #0x0                   	// #0
  4094fc:	b	409494 <ferror@plt+0x69f4>
  409500:	mov	w24, #0xffffffff            	// #-1
  409504:	b	409498 <ferror@plt+0x69f8>
  409508:	cmp	w0, #0x68
  40950c:	b.eq	409520 <ferror@plt+0x6a80>  // b.none
  409510:	add	x1, x22, #0x3
  409514:	mov	x27, x26
  409518:	mov	w0, #0x0                   	// #0
  40951c:	b	4094bc <ferror@plt+0x6a1c>
  409520:	strb	w0, [x22, #3]
  409524:	ldrb	w0, [x26, #1]
  409528:	cmp	w0, #0x68
  40952c:	b.eq	409558 <ferror@plt+0x6ab8>  // b.none
  409530:	add	x1, x22, #0x4
  409534:	strb	wzr, [sp, #241]
  409538:	strb	wzr, [sp, #245]
  40953c:	strh	wzr, [sp, #246]
  409540:	strb	wzr, [sp, #273]
  409544:	strb	wzr, [sp, #275]
  409548:	strb	wzr, [sp, #277]
  40954c:	strh	wzr, [sp, #278]
  409550:	strb	wzr, [sp, #291]
  409554:	b	409518 <ferror@plt+0x6a78>
  409558:	add	x1, x22, #0x5
  40955c:	add	x27, x26, #0x2
  409560:	strb	w0, [x22, #4]
  409564:	b	409534 <ferror@plt+0x6a94>
  409568:	cmp	w26, #0x78
  40956c:	b.hi	4095f8 <ferror@plt+0x6b58>  // b.pmore
  409570:	cmp	w26, #0x57
  409574:	b.hi	409598 <ferror@plt+0x6af8>  // b.pmore
  409578:	cmp	w26, #0x41
  40957c:	b.eq	409590 <ferror@plt+0x6af0>  // b.none
  409580:	sub	w0, w26, #0x45
  409584:	and	w0, w0, #0xff
  409588:	cmp	w0, #0x2
  40958c:	b.hi	4095f8 <ferror@plt+0x6b58>  // b.pmore
  409590:	mov	w0, #0x3                   	// #3
  409594:	b	4095c4 <ferror@plt+0x6b24>
  409598:	sub	w3, w26, #0x58
  40959c:	cmp	w3, #0x20
  4095a0:	b.hi	4095f8 <ferror@plt+0x6b58>  // b.pmore
  4095a4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4095a8:	add	x2, x2, #0xfa8
  4095ac:	ldrb	w2, [x2, w3, uxtw]
  4095b0:	adr	x3, 4095bc <ferror@plt+0x6b1c>
  4095b4:	add	x2, x3, w2, sxtb #2
  4095b8:	br	x2
  4095bc:	sub	x1, x1, #0x2
  4095c0:	mov	w0, #0x0                   	// #0
  4095c4:	strb	w26, [x1]
  4095c8:	sub	w0, w0, #0x1
  4095cc:	strb	wzr, [x1, #1]
  4095d0:	cmp	w0, #0x3
  4095d4:	b.hi	409604 <ferror@plt+0x6b64>  // b.pmore
  4095d8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  4095dc:	add	x1, x1, #0xfcc
  4095e0:	ldrh	w0, [x1, w0, uxtw #1]
  4095e4:	adr	x1, 4095f0 <ferror@plt+0x6b50>
  4095e8:	add	x0, x1, w0, sxth #2
  4095ec:	br	x0
  4095f0:	add	w0, w0, #0x1
  4095f4:	b	4095c4 <ferror@plt+0x6b24>
  4095f8:	bl	4027d0 <abort@plt>
  4095fc:	mov	w0, #0x4                   	// #4
  409600:	b	4095c4 <ferror@plt+0x6b24>
  409604:	cbz	w20, 40967c <ferror@plt+0x6bdc>
  409608:	ldr	x0, [x19], #8
  40960c:	sub	w20, w20, #0x1
  409610:	ldr	x0, [x0, #8]
  409614:	bl	408f8c <ferror@plt+0x64ec>
  409618:	mov	w2, w0
  40961c:	mov	w1, w23
  409620:	add	x0, sp, #0xa0
  409624:	bl	414468 <ferror@plt+0x119c8>
  409628:	mov	x23, x0
  40962c:	cbz	x0, 4090fc <ferror@plt+0x665c>
  409630:	bl	402450 <strlen@plt>
  409634:	mov	x24, x0
  409638:	ldp	x1, x0, [x21, #24]
  40963c:	sub	x0, x0, x1
  409640:	cmp	x24, x0
  409644:	b.ls	409654 <ferror@plt+0x6bb4>  // b.plast
  409648:	mov	x1, x24
  40964c:	mov	x0, x21
  409650:	bl	414990 <_obstack_newchunk@@Base>
  409654:	ldr	x0, [x21, #24]
  409658:	mov	x2, x24
  40965c:	mov	x1, x23
  409660:	bl	402420 <memcpy@plt>
  409664:	ldr	x0, [x21, #24]
  409668:	add	x0, x0, x24
  40966c:	str	x0, [x21, #24]
  409670:	mov	x0, x23
  409674:	bl	4028c0 <free@plt>
  409678:	b	4090fc <ferror@plt+0x665c>
  40967c:	mov	w2, #0x0                   	// #0
  409680:	b	40961c <ferror@plt+0x6b7c>
  409684:	cbz	w20, 4096b0 <ferror@plt+0x6c10>
  409688:	ldr	x0, [x19], #8
  40968c:	sub	w20, w20, #0x1
  409690:	ldr	x0, [x0, #8]
  409694:	bl	408f8c <ferror@plt+0x64ec>
  409698:	mov	w3, w0
  40969c:	mov	w2, w24
  4096a0:	mov	w1, w23
  4096a4:	add	x0, sp, #0xa0
  4096a8:	bl	414468 <ferror@plt+0x119c8>
  4096ac:	b	409628 <ferror@plt+0x6b88>
  4096b0:	mov	w3, #0x0                   	// #0
  4096b4:	b	40969c <ferror@plt+0x6bfc>
  4096b8:	cbz	w20, 4096ec <ferror@plt+0x6c4c>
  4096bc:	ldr	x0, [x19], #8
  4096c0:	sub	w20, w20, #0x1
  4096c4:	ldr	x27, [x0, #8]
  4096c8:	mov	x0, x27
  4096cc:	bl	402450 <strlen@plt>
  4096d0:	cbnz	x0, 4096f4 <ferror@plt+0x6c54>
  4096d4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4096d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4096dc:	mov	w1, #0x0                   	// #0
  4096e0:	add	x2, x2, #0xef7
  4096e4:	ldr	w0, [x0, #1660]
  4096e8:	bl	403488 <ferror@plt+0x9e8>
  4096ec:	mov	x26, #0x0                   	// #0
  4096f0:	b	409748 <ferror@plt+0x6ca8>
  4096f4:	str	x0, [sp, #136]
  4096f8:	bl	402a30 <__errno_location@plt>
  4096fc:	str	wzr, [x0]
  409700:	add	x1, sp, #0x98
  409704:	mov	w2, #0xa                   	// #10
  409708:	str	x0, [sp, #112]
  40970c:	mov	x0, x27
  409710:	bl	402890 <strtol@plt>
  409714:	mov	x26, x0
  409718:	ldr	x0, [sp, #152]
  40971c:	ldr	x4, [sp, #136]
  409720:	sub	x0, x0, x27
  409724:	cmp	x0, x4
  409728:	b.eq	409760 <ferror@plt+0x6cc0>  // b.none
  40972c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409730:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409734:	mov	x3, x27
  409738:	add	x2, x2, #0xf11
  40973c:	ldr	w0, [x0, #1660]
  409740:	mov	w1, #0x0                   	// #0
  409744:	bl	403488 <ferror@plt+0x9e8>
  409748:	mov	x3, x26
  40974c:	mov	w2, w24
  409750:	mov	w1, w23
  409754:	add	x0, sp, #0xa0
  409758:	bl	414468 <ferror@plt+0x119c8>
  40975c:	b	409628 <ferror@plt+0x6b88>
  409760:	bl	402870 <__ctype_b_loc@plt>
  409764:	ldrb	w1, [x27]
  409768:	ldr	x0, [x0]
  40976c:	ldrh	w0, [x0, x1, lsl #1]
  409770:	tbz	w0, #13, 409790 <ferror@plt+0x6cf0>
  409774:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409778:	add	x2, x2, #0xf29
  40977c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409780:	mov	w1, #0x0                   	// #0
  409784:	ldr	w0, [x0, #1660]
  409788:	bl	403488 <ferror@plt+0x9e8>
  40978c:	b	409748 <ferror@plt+0x6ca8>
  409790:	ldr	x0, [sp, #112]
  409794:	ldr	w0, [x0]
  409798:	cmp	w0, #0x22
  40979c:	b.ne	409748 <ferror@plt+0x6ca8>  // b.any
  4097a0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4097a4:	add	x2, x2, #0xf44
  4097a8:	b	40977c <ferror@plt+0x6cdc>
  4097ac:	cbz	w20, 4097e0 <ferror@plt+0x6d40>
  4097b0:	ldr	x0, [x19], #8
  4097b4:	sub	w20, w20, #0x1
  4097b8:	ldr	x27, [x0, #8]
  4097bc:	mov	x0, x27
  4097c0:	bl	402450 <strlen@plt>
  4097c4:	cbnz	x0, 4097e8 <ferror@plt+0x6d48>
  4097c8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4097cc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4097d0:	mov	w1, #0x0                   	// #0
  4097d4:	add	x2, x2, #0xef7
  4097d8:	ldr	w0, [x0, #1660]
  4097dc:	bl	403488 <ferror@plt+0x9e8>
  4097e0:	movi	d8, #0x0
  4097e4:	b	409838 <ferror@plt+0x6d98>
  4097e8:	str	x0, [sp, #112]
  4097ec:	bl	402a30 <__errno_location@plt>
  4097f0:	mov	x26, x0
  4097f4:	add	x1, sp, #0x98
  4097f8:	mov	x0, x27
  4097fc:	str	wzr, [x26]
  409800:	bl	4024c0 <strtod@plt>
  409804:	fmov	d8, d0
  409808:	ldr	x0, [sp, #152]
  40980c:	ldr	x2, [sp, #112]
  409810:	sub	x0, x0, x27
  409814:	cmp	x0, x2
  409818:	b.eq	409850 <ferror@plt+0x6db0>  // b.none
  40981c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409820:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409824:	mov	x3, x27
  409828:	add	x2, x2, #0xf11
  40982c:	ldr	w0, [x0, #1660]
  409830:	mov	w1, #0x0                   	// #0
  409834:	bl	403488 <ferror@plt+0x9e8>
  409838:	fmov	d0, d8
  40983c:	mov	w2, w24
  409840:	mov	w1, w23
  409844:	add	x0, sp, #0xa0
  409848:	bl	414468 <ferror@plt+0x119c8>
  40984c:	b	409628 <ferror@plt+0x6b88>
  409850:	bl	402870 <__ctype_b_loc@plt>
  409854:	ldrb	w1, [x27]
  409858:	ldr	x0, [x0]
  40985c:	ldrh	w0, [x0, x1, lsl #1]
  409860:	tbz	w0, #13, 409880 <ferror@plt+0x6de0>
  409864:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409868:	add	x2, x2, #0xf29
  40986c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409870:	mov	w1, #0x0                   	// #0
  409874:	ldr	w0, [x0, #1660]
  409878:	bl	403488 <ferror@plt+0x9e8>
  40987c:	b	409838 <ferror@plt+0x6d98>
  409880:	ldr	w0, [x26]
  409884:	cmp	w0, #0x22
  409888:	b.ne	409838 <ferror@plt+0x6d98>  // b.any
  40988c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409890:	add	x2, x2, #0xf44
  409894:	b	40986c <ferror@plt+0x6dcc>
  409898:	cbz	w20, 4098ac <ferror@plt+0x6e0c>
  40989c:	ldr	x0, [x19], #8
  4098a0:	sub	w20, w20, #0x1
  4098a4:	ldr	x3, [x0, #8]
  4098a8:	b	40974c <ferror@plt+0x6cac>
  4098ac:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x14bc>
  4098b0:	add	x3, x3, #0x3df
  4098b4:	b	40974c <ferror@plt+0x6cac>
  4098b8:	cbnz	w1, 4092e0 <ferror@plt+0x6840>
  4098bc:	b	4092f0 <ferror@plt+0x6850>
  4098c0:	cbnz	w1, 4092c4 <ferror@plt+0x6824>
  4098c4:	b	4092d0 <ferror@plt+0x6830>
  4098c8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  4098cc:	mov	w1, #0x0                   	// #0
  4098d0:	add	x2, x2, #0xfd4
  4098d4:	mov	w0, #0x1                   	// #1
  4098d8:	b	403488 <ferror@plt+0x9e8>
  4098dc:	stp	x29, x30, [sp, #-96]!
  4098e0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  4098e4:	add	x1, x1, #0x82b
  4098e8:	mov	x29, sp
  4098ec:	stp	x19, x20, [sp, #16]
  4098f0:	mov	x20, x0
  4098f4:	stp	x21, x22, [sp, #32]
  4098f8:	stp	x23, x24, [sp, #48]
  4098fc:	stp	x25, x26, [sp, #64]
  409900:	str	x27, [sp, #80]
  409904:	bl	40ff98 <ferror@plt+0xd4f8>
  409908:	cbnz	x0, 409940 <ferror@plt+0x6ea0>
  40990c:	bl	402a30 <__errno_location@plt>
  409910:	ldr	w1, [x0]
  409914:	mov	x3, x20
  409918:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  40991c:	ldp	x19, x20, [sp, #16]
  409920:	add	x2, x2, #0x1e
  409924:	ldp	x21, x22, [sp, #32]
  409928:	mov	w0, #0x1                   	// #1
  40992c:	ldp	x23, x24, [sp, #48]
  409930:	ldp	x25, x26, [sp, #64]
  409934:	ldr	x27, [sp, #80]
  409938:	ldp	x29, x30, [sp], #96
  40993c:	b	403488 <ferror@plt+0x9e8>
  409940:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  409944:	add	x2, x2, #0xff7
  409948:	mov	x19, x0
  40994c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  409950:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409954:	add	x1, x1, #0x5
  409958:	bl	4141fc <ferror@plt+0x1175c>
  40995c:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409960:	mov	x0, x19
  409964:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  409968:	add	x1, x1, #0x34
  40996c:	bl	4141fc <ferror@plt+0x1175c>
  409970:	ldr	x0, [x20, #3432]
  409974:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  409978:	add	x1, x1, #0x38
  40997c:	bl	402860 <strcmp@plt>
  409980:	cbnz	w0, 409998 <ferror@plt+0x6ef8>
  409984:	ldr	x0, [x21, #3488]
  409988:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  40998c:	add	x1, x1, #0x301
  409990:	bl	402860 <strcmp@plt>
  409994:	cbz	w0, 4099dc <ferror@plt+0x6f3c>
  409998:	add	x1, x21, #0xda0
  40999c:	add	x0, x20, #0xd68
  4099a0:	ldr	w3, [x1, #8]
  4099a4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  4099a8:	ldr	w2, [x0, #8]
  4099ac:	add	x1, x1, #0x3a
  4099b0:	mov	x0, x19
  4099b4:	bl	4141fc <ferror@plt+0x1175c>
  4099b8:	ldr	x0, [x20, #3432]
  4099bc:	mov	x1, x19
  4099c0:	bl	402460 <fputs@plt>
  4099c4:	ldr	x0, [x21, #3488]
  4099c8:	mov	x1, x19
  4099cc:	bl	402460 <fputs@plt>
  4099d0:	mov	x1, x19
  4099d4:	mov	w0, #0xa                   	// #10
  4099d8:	bl	402530 <fputc@plt>
  4099dc:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4099e0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  4099e4:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4099e8:	add	x1, x1, #0x42
  4099ec:	ldr	x0, [x20, #3456]
  4099f0:	bl	402860 <strcmp@plt>
  4099f4:	cbnz	w0, 409a0c <ferror@plt+0x6f6c>
  4099f8:	ldr	x0, [x21, #3472]
  4099fc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  409a00:	add	x1, x1, #0x494
  409a04:	bl	402860 <strcmp@plt>
  409a08:	cbz	w0, 409a50 <ferror@plt+0x6fb0>
  409a0c:	add	x1, x21, #0xd90
  409a10:	add	x0, x20, #0xd80
  409a14:	ldr	w3, [x1, #8]
  409a18:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  409a1c:	ldr	w2, [x0, #8]
  409a20:	add	x1, x1, #0x44
  409a24:	mov	x0, x19
  409a28:	bl	4141fc <ferror@plt+0x1175c>
  409a2c:	ldr	x0, [x20, #3456]
  409a30:	mov	x1, x19
  409a34:	bl	402460 <fputs@plt>
  409a38:	ldr	x0, [x21, #3472]
  409a3c:	mov	x1, x19
  409a40:	bl	402460 <fputs@plt>
  409a44:	mov	x1, x19
  409a48:	mov	w0, #0xa                   	// #10
  409a4c:	bl	402530 <fputc@plt>
  409a50:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409a54:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x24bc>
  409a58:	add	x23, x23, #0xdb8
  409a5c:	add	x25, x25, #0x4c
  409a60:	mov	x22, #0x0                   	// #0
  409a64:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409a68:	ldr	x0, [x0, #872]
  409a6c:	cmp	x0, x22
  409a70:	b.hi	409ac8 <ferror@plt+0x7028>  // b.pmore
  409a74:	mov	x0, x19
  409a78:	bl	40da3c <ferror@plt+0xaf9c>
  409a7c:	mov	x1, x19
  409a80:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  409a84:	add	x0, x0, #0xcc
  409a88:	bl	402460 <fputs@plt>
  409a8c:	mov	x0, x19
  409a90:	bl	40f6f8 <ferror@plt+0xcc58>
  409a94:	cbz	w0, 409c14 <ferror@plt+0x7174>
  409a98:	bl	402a30 <__errno_location@plt>
  409a9c:	ldr	w1, [x0]
  409aa0:	ldp	x19, x20, [sp, #16]
  409aa4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409aa8:	ldp	x21, x22, [sp, #32]
  409aac:	add	x2, x2, #0xe8
  409ab0:	ldp	x23, x24, [sp, #48]
  409ab4:	mov	w0, #0x1                   	// #1
  409ab8:	ldp	x25, x26, [sp, #64]
  409abc:	ldr	x27, [sp, #80]
  409ac0:	ldp	x29, x30, [sp], #96
  409ac4:	b	403488 <ferror@plt+0x9e8>
  409ac8:	ldr	x1, [x23]
  409acc:	lsl	x24, x22, #3
  409ad0:	mov	x20, #0x0                   	// #0
  409ad4:	ldr	x0, [x1, x24]
  409ad8:	cbnz	x0, 409b04 <ferror@plt+0x7064>
  409adc:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x24bc>
  409ae0:	add	x26, x26, #0x88
  409ae4:	str	x20, [x1, x24]
  409ae8:	cbnz	x20, 409b18 <ferror@plt+0x7078>
  409aec:	ldr	x1, [x23]
  409af0:	ldr	x0, [x1, x24]
  409af4:	cbnz	x0, 409c00 <ferror@plt+0x7160>
  409af8:	add	x22, x22, #0x1
  409afc:	str	x20, [x1, x24]
  409b00:	b	409a64 <ferror@plt+0x6fc4>
  409b04:	ldr	x2, [x0]
  409b08:	str	x20, [x0]
  409b0c:	mov	x20, x0
  409b10:	mov	x0, x2
  409b14:	b	409ad8 <ferror@plt+0x7038>
  409b18:	ldr	w0, [x20, #24]
  409b1c:	cmp	w0, #0x1
  409b20:	b.eq	409b38 <ferror@plt+0x7098>  // b.none
  409b24:	cmp	w0, #0x2
  409b28:	b.eq	409b88 <ferror@plt+0x70e8>  // b.none
  409b2c:	cbnz	w0, 409bf4 <ferror@plt+0x7154>
  409b30:	ldr	x20, [x20]
  409b34:	b	409ae8 <ferror@plt+0x7048>
  409b38:	ldr	x0, [x20, #16]
  409b3c:	bl	402450 <strlen@plt>
  409b40:	mov	x21, x0
  409b44:	ldr	x0, [x20, #32]
  409b48:	bl	402450 <strlen@plt>
  409b4c:	mov	w3, w0
  409b50:	mov	w2, w21
  409b54:	mov	x1, x25
  409b58:	mov	x0, x19
  409b5c:	bl	4141fc <ferror@plt+0x1175c>
  409b60:	ldr	x0, [x20, #16]
  409b64:	mov	x1, x19
  409b68:	bl	402460 <fputs@plt>
  409b6c:	ldr	x0, [x20, #32]
  409b70:	mov	x1, x19
  409b74:	bl	402460 <fputs@plt>
  409b78:	mov	x1, x19
  409b7c:	mov	w0, #0xa                   	// #10
  409b80:	bl	402530 <fputc@plt>
  409b84:	b	409b30 <ferror@plt+0x7090>
  409b88:	ldr	x0, [x20, #32]
  409b8c:	bl	4060d0 <ferror@plt+0x3630>
  409b90:	mov	x21, x0
  409b94:	cbnz	x0, 409bb4 <ferror@plt+0x7114>
  409b98:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409b9c:	add	x2, x2, #0x54
  409ba0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  409ba4:	mov	w1, #0x0                   	// #0
  409ba8:	ldr	w0, [x0, #1660]
  409bac:	bl	403488 <ferror@plt+0x9e8>
  409bb0:	bl	4027d0 <abort@plt>
  409bb4:	ldr	x0, [x20, #16]
  409bb8:	bl	402450 <strlen@plt>
  409bbc:	mov	x27, x0
  409bc0:	ldr	x0, [x21]
  409bc4:	bl	402450 <strlen@plt>
  409bc8:	mov	w3, w0
  409bcc:	mov	w2, w27
  409bd0:	mov	x1, x26
  409bd4:	mov	x0, x19
  409bd8:	bl	4141fc <ferror@plt+0x1175c>
  409bdc:	ldr	x0, [x20, #16]
  409be0:	mov	x1, x19
  409be4:	bl	402460 <fputs@plt>
  409be8:	mov	x1, x19
  409bec:	ldr	x0, [x21]
  409bf0:	b	409b74 <ferror@plt+0x70d4>
  409bf4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409bf8:	add	x2, x2, #0x90
  409bfc:	b	409ba0 <ferror@plt+0x7100>
  409c00:	ldr	x2, [x0]
  409c04:	str	x20, [x0]
  409c08:	mov	x20, x0
  409c0c:	mov	x0, x2
  409c10:	b	409af4 <ferror@plt+0x7054>
  409c14:	ldp	x19, x20, [sp, #16]
  409c18:	ldp	x21, x22, [sp, #32]
  409c1c:	ldp	x23, x24, [sp, #48]
  409c20:	ldp	x25, x26, [sp, #64]
  409c24:	ldr	x27, [sp, #80]
  409c28:	ldp	x29, x30, [sp], #96
  409c2c:	ret
  409c30:	stp	x29, x30, [sp, #-112]!
  409c34:	mov	x1, #0x0                   	// #0
  409c38:	mov	x29, sp
  409c3c:	stp	x19, x20, [sp, #16]
  409c40:	mov	x19, x0
  409c44:	stp	x21, x22, [sp, #32]
  409c48:	stp	x23, x24, [sp, #48]
  409c4c:	stp	x25, x26, [sp, #64]
  409c50:	stp	x27, x28, [sp, #80]
  409c54:	bl	40dd64 <ferror@plt+0xb2c4>
  409c58:	mov	x22, x0
  409c5c:	cbnz	x0, 409c7c <ferror@plt+0x71dc>
  409c60:	bl	402a30 <__errno_location@plt>
  409c64:	ldr	w1, [x0]
  409c68:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409c6c:	mov	x3, x19
  409c70:	add	x2, x2, #0x106
  409c74:	mov	w0, #0x1                   	// #1
  409c78:	bl	403488 <ferror@plt+0x9e8>
  409c7c:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409c80:	mov	x0, #0x64                  	// #100
  409c84:	mov	w20, #0x1                   	// #1
  409c88:	str	x19, [x21, #3448]
  409c8c:	bl	413d0c <ferror@plt+0x1126c>
  409c90:	mov	x24, x0
  409c94:	mov	x0, #0x64                  	// #100
  409c98:	bl	413d0c <ferror@plt+0x1126c>
  409c9c:	mov	x23, x0
  409ca0:	str	x21, [sp, #104]
  409ca4:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409ca8:	add	x21, x21, #0xd60
  409cac:	cbz	w20, 409cbc <ferror@plt+0x721c>
  409cb0:	ldr	w0, [x21]
  409cb4:	add	w0, w0, #0x1
  409cb8:	str	w0, [x21]
  409cbc:	mov	x0, x22
  409cc0:	bl	402730 <getc@plt>
  409cc4:	mov	w19, w0
  409cc8:	cmp	w0, #0xa
  409ccc:	b.eq	409cb0 <ferror@plt+0x7210>  // b.none
  409cd0:	cmp	w0, #0x23
  409cd4:	b.eq	40a06c <ferror@plt+0x75cc>  // b.none
  409cd8:	cmp	w0, #0x56
  409cdc:	b.ne	40a074 <ferror@plt+0x75d4>  // b.any
  409ce0:	mov	x0, x22
  409ce4:	bl	402730 <getc@plt>
  409ce8:	cmp	w0, #0xa
  409cec:	mov	w19, w0
  409cf0:	cset	w21, eq  // eq = none
  409cf4:	mov	w27, #0xcccc                	// #52428
  409cf8:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409cfc:	add	x25, x25, #0xd60
  409d00:	bl	402870 <__ctype_b_loc@plt>
  409d04:	mov	x26, x0
  409d08:	mov	w20, #0x0                   	// #0
  409d0c:	movk	w27, #0xccc, lsl #16
  409d10:	mov	w28, #0xa                   	// #10
  409d14:	ldr	x0, [x26]
  409d18:	ldrh	w0, [x0, w19, sxtw #1]
  409d1c:	and	w1, w0, #0x800
  409d20:	tbz	w0, #11, 409d2c <ferror@plt+0x728c>
  409d24:	cmp	w20, w27
  409d28:	b.ls	40a07c <ferror@plt+0x75dc>  // b.plast
  409d2c:	tbnz	w20, #31, 409d34 <ferror@plt+0x7294>
  409d30:	cbz	w1, 409d48 <ferror@plt+0x72a8>
  409d34:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409d38:	mov	w1, #0x0                   	// #0
  409d3c:	add	x2, x2, #0x13d
  409d40:	mov	w0, #0x1                   	// #1
  409d44:	bl	403488 <ferror@plt+0x9e8>
  409d48:	cmp	w20, #0x1
  409d4c:	b.le	40a0ac <ferror@plt+0x760c>
  409d50:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409d54:	mov	w3, w20
  409d58:	add	x2, x2, #0x15d
  409d5c:	mov	w1, #0x0                   	// #0
  409d60:	mov	w0, #0x3f                  	// #63
  409d64:	bl	403488 <ferror@plt+0x9e8>
  409d68:	cmp	w19, #0xa
  409d6c:	b.eq	409d74 <ferror@plt+0x72d4>  // b.none
  409d70:	bl	4098c8 <ferror@plt+0x6e28>
  409d74:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409d78:	add	x20, x20, #0xd60
  409d7c:	cbz	w21, 409d8c <ferror@plt+0x72ec>
  409d80:	ldr	w0, [x20]
  409d84:	add	w0, w0, #0x1
  409d88:	str	w0, [x20]
  409d8c:	mov	x0, x22
  409d90:	bl	402730 <getc@plt>
  409d94:	mov	w19, w0
  409d98:	cmp	w0, #0xa
  409d9c:	b.eq	409d80 <ferror@plt+0x72e0>  // b.none
  409da0:	cmp	w0, #0x23
  409da4:	b.eq	40a164 <ferror@plt+0x76c4>  // b.none
  409da8:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  409dac:	add	x21, x21, #0xd60
  409db0:	mov	w0, #0x64                  	// #100
  409db4:	mov	w28, #0x0                   	// #0
  409db8:	stp	w0, w0, [sp, #96]
  409dbc:	cmn	w19, #0x1
  409dc0:	b.eq	40a104 <ferror@plt+0x7664>  // b.none
  409dc4:	sub	w1, w19, #0x43
  409dc8:	cmp	w1, #0x11
  409dcc:	b.hi	409de8 <ferror@plt+0x7348>  // b.pmore
  409dd0:	mov	x0, #0x1                   	// #1
  409dd4:	lsl	x0, x0, x1
  409dd8:	mov	x1, #0x400b                	// #16395
  409ddc:	movk	x1, #0x2, lsl #16
  409de0:	tst	x0, x1
  409de4:	b.ne	409dfc <ferror@plt+0x735c>  // b.any
  409de8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409dec:	mov	w1, #0x0                   	// #0
  409df0:	add	x2, x2, #0x1c7
  409df4:	mov	w0, #0x1                   	// #1
  409df8:	bl	403488 <ferror@plt+0x9e8>
  409dfc:	cbz	w28, 409e0c <ferror@plt+0x736c>
  409e00:	ldr	w0, [x21]
  409e04:	add	w0, w0, #0x1
  409e08:	str	w0, [x21]
  409e0c:	mov	x0, x22
  409e10:	bl	402730 <getc@plt>
  409e14:	mov	w25, w0
  409e18:	cmp	w0, #0xa
  409e1c:	b.eq	40a204 <ferror@plt+0x7764>  // b.none
  409e20:	cmp	w19, #0x44
  409e24:	cset	w4, eq  // eq = none
  409e28:	cmp	w0, #0x2d
  409e2c:	csel	w27, w4, wzr, eq  // eq = none
  409e30:	cbz	w27, 40a208 <ferror@plt+0x7768>
  409e34:	mov	x0, x22
  409e38:	bl	402730 <getc@plt>
  409e3c:	cmp	w0, #0xa
  409e40:	mov	w28, #0xcccc                	// #52428
  409e44:	mov	w25, w0
  409e48:	cset	w27, eq  // eq = none
  409e4c:	mov	w20, #0x0                   	// #0
  409e50:	movk	w28, #0xccc, lsl #16
  409e54:	ldr	x0, [x26]
  409e58:	mov	w2, #0xa                   	// #10
  409e5c:	ldrh	w0, [x0, w25, sxtw #1]
  409e60:	tbz	w0, #11, 40a3e0 <ferror@plt+0x7940>
  409e64:	cmp	w20, w28
  409e68:	b.ls	40a16c <ferror@plt+0x76cc>  // b.plast
  409e6c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409e70:	mov	w1, #0x0                   	// #0
  409e74:	add	x2, x2, #0x13d
  409e78:	mov	w0, #0x1                   	// #1
  409e7c:	bl	403488 <ferror@plt+0x9e8>
  409e80:	neg	w20, w20
  409e84:	cmp	w25, #0x2c
  409e88:	b.eq	409ea4 <ferror@plt+0x7404>  // b.none
  409e8c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409e90:	mov	w3, #0x2c                  	// #44
  409e94:	add	x2, x2, #0x115
  409e98:	mov	w1, #0x0                   	// #0
  409e9c:	mov	w0, #0x1                   	// #1
  409ea0:	bl	403488 <ferror@plt+0x9e8>
  409ea4:	cbz	w27, 409eb4 <ferror@plt+0x7414>
  409ea8:	ldr	w0, [x21]
  409eac:	add	w0, w0, #0x1
  409eb0:	str	w0, [x21]
  409eb4:	mov	x0, x22
  409eb8:	bl	402730 <getc@plt>
  409ebc:	cmp	w0, #0xa
  409ec0:	mov	w2, #0xcccc                	// #52428
  409ec4:	mov	w28, w0
  409ec8:	cset	w27, eq  // eq = none
  409ecc:	mov	w25, #0x0                   	// #0
  409ed0:	movk	w2, #0xccc, lsl #16
  409ed4:	mov	w3, #0xa                   	// #10
  409ed8:	ldr	x0, [x26]
  409edc:	ldrh	w0, [x0, w28, sxtw #1]
  409ee0:	and	w1, w0, #0x800
  409ee4:	tbz	w0, #11, 409ef0 <ferror@plt+0x7450>
  409ee8:	cmp	w25, w2
  409eec:	b.ls	40a218 <ferror@plt+0x7778>  // b.plast
  409ef0:	tbnz	w25, #31, 409ef8 <ferror@plt+0x7458>
  409ef4:	cbz	w1, 409f0c <ferror@plt+0x746c>
  409ef8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409efc:	mov	w1, #0x0                   	// #0
  409f00:	add	x2, x2, #0x13d
  409f04:	mov	w0, #0x1                   	// #1
  409f08:	bl	403488 <ferror@plt+0x9e8>
  409f0c:	cmp	w28, #0xa
  409f10:	b.eq	409f18 <ferror@plt+0x7478>  // b.none
  409f14:	bl	4098c8 <ferror@plt+0x6e28>
  409f18:	cmp	w19, #0x44
  409f1c:	b.eq	409f9c <ferror@plt+0x74fc>  // b.none
  409f20:	ldr	w0, [sp, #96]
  409f24:	cmp	w0, w20
  409f28:	b.gt	409f48 <ferror@plt+0x74a8>
  409f2c:	mov	x0, x24
  409f30:	bl	4028c0 <free@plt>
  409f34:	add	w0, w20, #0x1
  409f38:	str	w0, [sp, #96]
  409f3c:	sxtw	x0, w0
  409f40:	bl	413d0c <ferror@plt+0x1126c>
  409f44:	mov	x24, x0
  409f48:	sxtw	x28, w20
  409f4c:	cmp	w20, #0x0
  409f50:	b.le	409f80 <ferror@plt+0x74e0>
  409f54:	mov	x3, x22
  409f58:	mov	x1, x28
  409f5c:	mov	x0, x24
  409f60:	mov	x2, #0x1                   	// #1
  409f64:	bl	4028b0 <fread@plt>
  409f68:	cbnz	x0, 409f80 <ferror@plt+0x74e0>
  409f6c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409f70:	mov	w1, #0x0                   	// #0
  409f74:	add	x2, x2, #0x1de
  409f78:	mov	w0, #0x1                   	// #1
  409f7c:	bl	403488 <ferror@plt+0x9e8>
  409f80:	mov	x0, x24
  409f84:	strb	wzr, [x24, x28]
  409f88:	sub	x2, x0, x24
  409f8c:	mov	w1, #0xa                   	// #10
  409f90:	sub	x2, x28, x2
  409f94:	bl	402980 <memchr@plt>
  409f98:	cbnz	x0, 40a254 <ferror@plt+0x77b4>
  409f9c:	ldr	w0, [sp, #100]
  409fa0:	sxtw	x28, w25
  409fa4:	cmp	w25, w0
  409fa8:	b.lt	40a268 <ferror@plt+0x77c8>  // b.tstop
  409fac:	mov	x0, x23
  409fb0:	bl	4028c0 <free@plt>
  409fb4:	add	w0, w25, #0x1
  409fb8:	str	w0, [sp, #100]
  409fbc:	sxtw	x0, w0
  409fc0:	bl	413d0c <ferror@plt+0x1126c>
  409fc4:	mov	x23, x0
  409fc8:	mov	x3, x22
  409fcc:	mov	x1, x28
  409fd0:	mov	x0, x23
  409fd4:	mov	x2, #0x1                   	// #1
  409fd8:	bl	4028b0 <fread@plt>
  409fdc:	cbnz	x0, 40a270 <ferror@plt+0x77d0>
  409fe0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  409fe4:	mov	w1, #0x0                   	// #0
  409fe8:	add	x2, x2, #0x1de
  409fec:	mov	w0, #0x1                   	// #1
  409ff0:	bl	403488 <ferror@plt+0x9e8>
  409ff4:	b	40a270 <ferror@plt+0x77d0>
  409ff8:	cbz	w20, 40a008 <ferror@plt+0x7568>
  409ffc:	ldr	w0, [x21]
  40a000:	add	w0, w0, #0x1
  40a004:	str	w0, [x21]
  40a008:	mov	x0, x22
  40a00c:	bl	402730 <getc@plt>
  40a010:	cmp	w0, #0xa
  40a014:	mov	w19, w0
  40a018:	cset	w20, eq  // eq = none
  40a01c:	cmp	w19, #0xa
  40a020:	ccmn	w19, #0x1, #0x4, ne  // ne = any
  40a024:	b.ne	409ff8 <ferror@plt+0x7558>  // b.any
  40a028:	cmp	w19, #0xa
  40a02c:	b.eq	409cac <ferror@plt+0x720c>  // b.none
  40a030:	bl	4098c8 <ferror@plt+0x6e28>
  40a034:	cmp	w19, #0x56
  40a038:	b.eq	40a054 <ferror@plt+0x75b4>  // b.none
  40a03c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a040:	mov	w3, #0x56                  	// #86
  40a044:	add	x2, x2, #0x115
  40a048:	mov	w1, #0x0                   	// #0
  40a04c:	mov	w0, #0x1                   	// #1
  40a050:	bl	403488 <ferror@plt+0x9e8>
  40a054:	cbz	w20, 409ce0 <ferror@plt+0x7240>
  40a058:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a05c:	ldr	w0, [x1, #3424]
  40a060:	add	w0, w0, #0x1
  40a064:	str	w0, [x1, #3424]
  40a068:	b	409ce0 <ferror@plt+0x7240>
  40a06c:	mov	w20, #0x0                   	// #0
  40a070:	b	40a01c <ferror@plt+0x757c>
  40a074:	mov	w20, #0x0                   	// #0
  40a078:	b	40a03c <ferror@plt+0x759c>
  40a07c:	madd	w20, w20, w28, w19
  40a080:	sub	w20, w20, #0x30
  40a084:	cbz	w21, 40a094 <ferror@plt+0x75f4>
  40a088:	ldr	w0, [x25]
  40a08c:	add	w0, w0, #0x1
  40a090:	str	w0, [x25]
  40a094:	mov	x0, x22
  40a098:	bl	402730 <getc@plt>
  40a09c:	cmp	w0, #0xa
  40a0a0:	mov	w19, w0
  40a0a4:	cset	w21, eq  // eq = none
  40a0a8:	b	409d14 <ferror@plt+0x7274>
  40a0ac:	b.eq	409d68 <ferror@plt+0x72c8>  // b.none
  40a0b0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a0b4:	mov	w1, #0x0                   	// #0
  40a0b8:	add	x2, x2, #0x194
  40a0bc:	mov	w0, #0x1                   	// #1
  40a0c0:	bl	403488 <ferror@plt+0x9e8>
  40a0c4:	b	409d68 <ferror@plt+0x72c8>
  40a0c8:	cbz	w21, 40a0d8 <ferror@plt+0x7638>
  40a0cc:	ldr	w0, [x20]
  40a0d0:	add	w0, w0, #0x1
  40a0d4:	str	w0, [x20]
  40a0d8:	mov	x0, x22
  40a0dc:	bl	402730 <getc@plt>
  40a0e0:	cmp	w0, #0xa
  40a0e4:	mov	w19, w0
  40a0e8:	cset	w21, eq  // eq = none
  40a0ec:	cmp	w19, #0xa
  40a0f0:	ccmn	w19, #0x1, #0x4, ne  // ne = any
  40a0f4:	b.ne	40a0c8 <ferror@plt+0x7628>  // b.any
  40a0f8:	cmp	w19, #0xa
  40a0fc:	b.eq	409d7c <ferror@plt+0x72dc>  // b.none
  40a100:	bl	4098c8 <ferror@plt+0x6e28>
  40a104:	mov	x0, x24
  40a108:	bl	4028c0 <free@plt>
  40a10c:	mov	x0, x23
  40a110:	bl	4028c0 <free@plt>
  40a114:	mov	x0, x22
  40a118:	bl	40f6f8 <ferror@plt+0xcc58>
  40a11c:	cbz	w0, 40a138 <ferror@plt+0x7698>
  40a120:	bl	402a30 <__errno_location@plt>
  40a124:	ldr	w1, [x0]
  40a128:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a12c:	mov	w0, #0x1                   	// #1
  40a130:	add	x2, x2, #0x1fb
  40a134:	bl	403488 <ferror@plt+0x9e8>
  40a138:	ldr	x0, [sp, #104]
  40a13c:	ldp	x19, x20, [sp, #16]
  40a140:	str	xzr, [x0, #3448]
  40a144:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a148:	ldp	x21, x22, [sp, #32]
  40a14c:	str	wzr, [x0, #3424]
  40a150:	ldp	x23, x24, [sp, #48]
  40a154:	ldp	x25, x26, [sp, #64]
  40a158:	ldp	x27, x28, [sp, #80]
  40a15c:	ldp	x29, x30, [sp], #112
  40a160:	ret
  40a164:	mov	w21, #0x0                   	// #0
  40a168:	b	40a0ec <ferror@plt+0x764c>
  40a16c:	madd	w20, w20, w2, w25
  40a170:	sub	w20, w20, #0x30
  40a174:	cbz	w27, 40a184 <ferror@plt+0x76e4>
  40a178:	ldr	w0, [x21]
  40a17c:	add	w0, w0, #0x1
  40a180:	str	w0, [x21]
  40a184:	mov	x0, x22
  40a188:	bl	402730 <getc@plt>
  40a18c:	cmp	w0, #0xa
  40a190:	mov	w25, w0
  40a194:	cset	w27, eq  // eq = none
  40a198:	b	409e54 <ferror@plt+0x73b4>
  40a19c:	madd	w20, w20, w2, w25
  40a1a0:	sub	w20, w20, #0x30
  40a1a4:	cbz	w27, 40a1b4 <ferror@plt+0x7714>
  40a1a8:	ldr	w0, [x21]
  40a1ac:	add	w0, w0, #0x1
  40a1b0:	str	w0, [x21]
  40a1b4:	mov	x0, x22
  40a1b8:	bl	402730 <getc@plt>
  40a1bc:	cmp	w0, #0xa
  40a1c0:	mov	w25, w0
  40a1c4:	cset	w27, eq  // eq = none
  40a1c8:	ldr	x0, [x26]
  40a1cc:	mov	w2, #0xa                   	// #10
  40a1d0:	ldrh	w0, [x0, w25, sxtw #1]
  40a1d4:	and	w1, w0, #0x800
  40a1d8:	tbz	w0, #11, 40a1e4 <ferror@plt+0x7744>
  40a1dc:	cmp	w20, w28
  40a1e0:	b.ls	40a19c <ferror@plt+0x76fc>  // b.plast
  40a1e4:	tbnz	w20, #31, 40a1ec <ferror@plt+0x774c>
  40a1e8:	cbz	w1, 409e84 <ferror@plt+0x73e4>
  40a1ec:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a1f0:	mov	w1, #0x0                   	// #0
  40a1f4:	add	x2, x2, #0x13d
  40a1f8:	mov	w0, #0x1                   	// #1
  40a1fc:	bl	403488 <ferror@plt+0x9e8>
  40a200:	b	409e84 <ferror@plt+0x73e4>
  40a204:	mov	w27, #0x1                   	// #1
  40a208:	mov	w28, #0xcccc                	// #52428
  40a20c:	mov	w20, #0x0                   	// #0
  40a210:	movk	w28, #0xccc, lsl #16
  40a214:	b	40a1c8 <ferror@plt+0x7728>
  40a218:	madd	w25, w25, w3, w28
  40a21c:	sub	w25, w25, #0x30
  40a220:	cbz	w27, 40a230 <ferror@plt+0x7790>
  40a224:	ldr	w0, [x21]
  40a228:	add	w0, w0, #0x1
  40a22c:	str	w0, [x21]
  40a230:	mov	x0, x22
  40a234:	bl	402730 <getc@plt>
  40a238:	mov	w2, #0xcccc                	// #52428
  40a23c:	cmp	w0, #0xa
  40a240:	mov	w28, w0
  40a244:	cset	w27, eq  // eq = none
  40a248:	mov	w3, #0xa                   	// #10
  40a24c:	movk	w2, #0xccc, lsl #16
  40a250:	b	409ed8 <ferror@plt+0x7438>
  40a254:	ldr	w1, [x21]
  40a258:	add	x0, x0, #0x1
  40a25c:	add	w1, w1, #0x1
  40a260:	str	w1, [x21]
  40a264:	b	409f88 <ferror@plt+0x74e8>
  40a268:	cmp	w25, #0x0
  40a26c:	b.gt	409fc8 <ferror@plt+0x7528>
  40a270:	mov	x0, x23
  40a274:	strb	wzr, [x23, x28]
  40a278:	sub	x2, x0, x23
  40a27c:	mov	w1, #0xa                   	// #10
  40a280:	sub	x2, x28, x2
  40a284:	bl	402980 <memchr@plt>
  40a288:	cbnz	x0, 40a318 <ferror@plt+0x7878>
  40a28c:	cbz	w27, 40a29c <ferror@plt+0x77fc>
  40a290:	ldr	w0, [x21]
  40a294:	add	w0, w0, #0x1
  40a298:	str	w0, [x21]
  40a29c:	mov	x0, x22
  40a2a0:	bl	402730 <getc@plt>
  40a2a4:	cmp	w0, #0xa
  40a2a8:	b.ne	40a3d4 <ferror@plt+0x7934>  // b.any
  40a2ac:	mov	w28, #0x1                   	// #1
  40a2b0:	cmp	w19, #0x46
  40a2b4:	b.eq	40a380 <ferror@plt+0x78e0>  // b.none
  40a2b8:	b.gt	40a32c <ferror@plt+0x788c>
  40a2bc:	cmp	w19, #0x43
  40a2c0:	b.eq	40a350 <ferror@plt+0x78b0>  // b.none
  40a2c4:	cmp	w19, #0x44
  40a2c8:	b.eq	40a360 <ferror@plt+0x78c0>  // b.none
  40a2cc:	cbz	w28, 40a2dc <ferror@plt+0x783c>
  40a2d0:	ldr	w0, [x21]
  40a2d4:	add	w0, w0, #0x1
  40a2d8:	str	w0, [x21]
  40a2dc:	mov	x0, x22
  40a2e0:	bl	402730 <getc@plt>
  40a2e4:	mov	w19, w0
  40a2e8:	cmp	w0, #0xa
  40a2ec:	b.eq	40a2d0 <ferror@plt+0x7830>  // b.none
  40a2f0:	cmp	w0, #0x23
  40a2f4:	mov	w28, #0x0                   	// #0
  40a2f8:	b.ne	409dbc <ferror@plt+0x731c>  // b.any
  40a2fc:	cmp	w19, #0xa
  40a300:	ccmn	w19, #0x1, #0x4, ne  // ne = any
  40a304:	b.ne	40a3ac <ferror@plt+0x790c>  // b.any
  40a308:	cmp	w19, #0xa
  40a30c:	b.eq	40a2cc <ferror@plt+0x782c>  // b.none
  40a310:	bl	4098c8 <ferror@plt+0x6e28>
  40a314:	b	409dbc <ferror@plt+0x731c>
  40a318:	ldr	w1, [x21]
  40a31c:	add	x0, x0, #0x1
  40a320:	add	w1, w1, #0x1
  40a324:	str	w1, [x21]
  40a328:	b	40a278 <ferror@plt+0x77d8>
  40a32c:	cmp	w19, #0x51
  40a330:	b.eq	40a39c <ferror@plt+0x78fc>  // b.none
  40a334:	cmp	w19, #0x54
  40a338:	b.ne	40a2cc <ferror@plt+0x782c>  // b.any
  40a33c:	mov	x1, x23
  40a340:	mov	x0, x24
  40a344:	mov	w2, #0x3                   	// #3
  40a348:	bl	4065dc <ferror@plt+0x3b3c>
  40a34c:	b	40a2cc <ferror@plt+0x782c>
  40a350:	mov	x1, x23
  40a354:	mov	x0, x24
  40a358:	bl	40b2f0 <ferror@plt+0x8850>
  40a35c:	b	40a2cc <ferror@plt+0x782c>
  40a360:	mov	w0, w20
  40a364:	bl	40d3fc <ferror@plt+0xa95c>
  40a368:	cmp	w25, #0x0
  40a36c:	b.le	40a2cc <ferror@plt+0x782c>
  40a370:	mov	w1, w25
  40a374:	mov	x0, x23
  40a378:	bl	40cc24 <ferror@plt+0xa184>
  40a37c:	b	40a2cc <ferror@plt+0x782c>
  40a380:	mov	x0, x23
  40a384:	bl	406340 <ferror@plt+0x38a0>
  40a388:	mov	w2, #0x3                   	// #3
  40a38c:	mov	x1, x0
  40a390:	mov	x0, x24
  40a394:	bl	4064d8 <ferror@plt+0x3a38>
  40a398:	b	40a2cc <ferror@plt+0x782c>
  40a39c:	mov	x1, x23
  40a3a0:	mov	x0, x24
  40a3a4:	bl	40b24c <ferror@plt+0x87ac>
  40a3a8:	b	40a2cc <ferror@plt+0x782c>
  40a3ac:	cbz	w28, 40a3bc <ferror@plt+0x791c>
  40a3b0:	ldr	w0, [x21]
  40a3b4:	add	w0, w0, #0x1
  40a3b8:	str	w0, [x21]
  40a3bc:	mov	x0, x22
  40a3c0:	bl	402730 <getc@plt>
  40a3c4:	cmp	w0, #0xa
  40a3c8:	mov	w19, w0
  40a3cc:	cset	w28, eq  // eq = none
  40a3d0:	b	40a2fc <ferror@plt+0x785c>
  40a3d4:	mov	w28, #0x0                   	// #0
  40a3d8:	bl	4098c8 <ferror@plt+0x6e28>
  40a3dc:	b	40a2b0 <ferror@plt+0x7810>
  40a3e0:	mov	w0, #0x80000000            	// #-2147483648
  40a3e4:	cmp	w20, w0
  40a3e8:	b.ls	409e80 <ferror@plt+0x73e0>  // b.plast
  40a3ec:	b	409e6c <ferror@plt+0x73cc>
  40a3f0:	stp	x29, x30, [sp, #-48]!
  40a3f4:	mov	x29, sp
  40a3f8:	stp	x19, x20, [sp, #16]
  40a3fc:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a400:	ldr	x0, [x19, #2160]
  40a404:	stp	x21, x22, [sp, #32]
  40a408:	add	x21, x19, #0x870
  40a40c:	ldr	x22, [x0]
  40a410:	ldr	w0, [x0, #8]
  40a414:	cmp	w0, #0x1
  40a418:	b.eq	40a468 <ferror@plt+0x79c8>  // b.none
  40a41c:	tst	w0, #0xfffffffd
  40a420:	b.ne	40a56c <ferror@plt+0x7acc>  // b.any
  40a424:	ldr	x0, [x21, #16]
  40a428:	ldr	x1, [x19, #2160]
  40a42c:	ldr	x2, [x0, #8]
  40a430:	cmp	x2, x1
  40a434:	b.cs	40a588 <ferror@plt+0x7ae8>  // b.hs, b.nlast
  40a438:	ldr	x2, [x0, #32]
  40a43c:	cmp	x2, x1
  40a440:	b.ls	40a588 <ferror@plt+0x7ae8>  // b.plast
  40a444:	stp	x1, x1, [x0, #16]
  40a448:	mov	w0, #0x1                   	// #1
  40a44c:	str	x22, [x19, #2160]
  40a450:	str	xzr, [x21, #24]
  40a454:	strb	w0, [x21, #32]
  40a458:	ldp	x19, x20, [sp, #16]
  40a45c:	ldp	x21, x22, [sp, #32]
  40a460:	ldp	x29, x30, [sp], #48
  40a464:	ret
  40a468:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a46c:	ldr	w0, [x0, #1676]
  40a470:	tbz	w0, #8, 40a4ac <ferror@plt+0x7a0c>
  40a474:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a478:	ldr	x0, [x20, #2048]
  40a47c:	cbz	x22, 40a514 <ferror@plt+0x7a74>
  40a480:	cbz	x0, 40a4ac <ferror@plt+0x7a0c>
  40a484:	bl	407efc <ferror@plt+0x545c>
  40a488:	ldr	x0, [x20, #2048]
  40a48c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a490:	ldr	w3, [x22, #24]
  40a494:	add	x1, x1, #0x217
  40a498:	ldr	x2, [x22, #16]
  40a49c:	bl	4141fc <ferror@plt+0x1175c>
  40a4a0:	ldr	x1, [x20, #2048]
  40a4a4:	mov	w0, #0xa                   	// #10
  40a4a8:	bl	402500 <putc@plt>
  40a4ac:	ldr	x20, [x19, #2160]
  40a4b0:	ldr	x0, [x20, #32]
  40a4b4:	bl	402aa0 <ferror@plt>
  40a4b8:	cbz	w0, 40a530 <ferror@plt+0x7a90>
  40a4bc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a4c0:	mov	w1, #0x0                   	// #0
  40a4c4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a4c8:	add	x2, x2, #0x245
  40a4cc:	ldr	w0, [x0, #1660]
  40a4d0:	bl	403488 <ferror@plt+0x9e8>
  40a4d4:	ldr	x0, [x19, #2160]
  40a4d8:	ldrb	w1, [x0, #40]
  40a4dc:	tbz	w1, #1, 40a4e8 <ferror@plt+0x7a48>
  40a4e0:	ldr	x0, [x0, #32]
  40a4e4:	bl	4144e0 <ferror@plt+0x11a40>
  40a4e8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a4ec:	mov	w1, #0x1                   	// #1
  40a4f0:	str	w1, [x0, #3416]
  40a4f4:	ldr	x0, [x19, #2160]
  40a4f8:	mov	w1, #0xffffffff            	// #-1
  40a4fc:	ldrb	w0, [x0, #40]
  40a500:	ubfx	x0, x0, #2, #1
  40a504:	strb	w0, [x21, #8]
  40a508:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a50c:	str	w1, [x0, #3504]
  40a510:	b	40a424 <ferror@plt+0x7984>
  40a514:	cbz	x0, 40a4ac <ferror@plt+0x7a0c>
  40a518:	bl	407efc <ferror@plt+0x545c>
  40a51c:	ldr	x0, [x20, #2048]
  40a520:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a524:	add	x1, x1, #0x235
  40a528:	bl	4141fc <ferror@plt+0x1175c>
  40a52c:	b	40a4a0 <ferror@plt+0x7a00>
  40a530:	ldrb	w0, [x20, #40]
  40a534:	tbz	w0, #1, 40a4f4 <ferror@plt+0x7a54>
  40a538:	ldr	x0, [x20, #32]
  40a53c:	bl	4144e0 <ferror@plt+0x11a40>
  40a540:	cmn	w0, #0x1
  40a544:	b.ne	40a4f4 <ferror@plt+0x7a54>  // b.any
  40a548:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a54c:	ldr	w20, [x0, #1660]
  40a550:	bl	402a30 <__errno_location@plt>
  40a554:	ldr	w1, [x0]
  40a558:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a55c:	mov	w0, w20
  40a560:	add	x2, x2, #0x250
  40a564:	bl	403488 <ferror@plt+0x9e8>
  40a568:	b	40a4e8 <ferror@plt+0x7a48>
  40a56c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a570:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a574:	add	x2, x2, #0x263
  40a578:	mov	w1, #0x0                   	// #0
  40a57c:	ldr	w0, [x0, #1660]
  40a580:	bl	403488 <ferror@plt+0x9e8>
  40a584:	bl	4027d0 <abort@plt>
  40a588:	bl	414ad0 <_obstack_free@@Base>
  40a58c:	b	40a448 <ferror@plt+0x79a8>
  40a590:	stp	x29, x30, [sp, #-48]!
  40a594:	mov	x29, sp
  40a598:	stp	x19, x20, [sp, #16]
  40a59c:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a5a0:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a5a4:	add	x19, x19, #0x870
  40a5a8:	add	x20, x20, #0xd60
  40a5ac:	str	x21, [sp, #32]
  40a5b0:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a5b4:	ldr	x0, [x19]
  40a5b8:	cbnz	x0, 40a5e8 <ferror@plt+0x7b48>
  40a5bc:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a5c0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40a5c4:	add	x0, x0, #0x3df
  40a5c8:	str	x0, [x1, #3448]
  40a5cc:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a5d0:	str	wzr, [x0, #3424]
  40a5d4:	mov	w0, #0x100                 	// #256
  40a5d8:	ldp	x19, x20, [sp, #16]
  40a5dc:	ldr	x21, [sp, #32]
  40a5e0:	ldp	x29, x30, [sp], #48
  40a5e4:	ret
  40a5e8:	ldrb	w1, [x19, #32]
  40a5ec:	cbz	w1, 40a604 <ferror@plt+0x7b64>
  40a5f0:	ldr	x1, [x0, #16]
  40a5f4:	str	x1, [x21, #3448]
  40a5f8:	ldr	w1, [x0, #24]
  40a5fc:	str	w1, [x20]
  40a600:	strb	wzr, [x19, #32]
  40a604:	ldr	w1, [x0, #8]
  40a608:	cmp	w1, #0x1
  40a60c:	b.eq	40a638 <ferror@plt+0x7b98>  // b.none
  40a610:	cmp	w1, #0x2
  40a614:	b.eq	40a680 <ferror@plt+0x7be0>  // b.none
  40a618:	cbnz	w1, 40a68c <ferror@plt+0x7bec>
  40a61c:	ldr	x1, [x0, #32]
  40a620:	add	x2, x1, #0x1
  40a624:	str	x2, [x0, #32]
  40a628:	ldrb	w0, [x1]
  40a62c:	cbnz	w0, 40a5d8 <ferror@plt+0x7b38>
  40a630:	bl	40a3f0 <ferror@plt+0x7950>
  40a634:	b	40a5b4 <ferror@plt+0x7b14>
  40a638:	ldrb	w1, [x19, #8]
  40a63c:	cbz	w1, 40a654 <ferror@plt+0x7bb4>
  40a640:	ldr	w1, [x0, #24]
  40a644:	strb	wzr, [x19, #8]
  40a648:	add	w1, w1, #0x1
  40a64c:	str	w1, [x20]
  40a650:	str	w1, [x0, #24]
  40a654:	ldrb	w1, [x0, #40]
  40a658:	tbnz	w1, #0, 40a630 <ferror@plt+0x7b90>
  40a65c:	ldr	x0, [x0, #32]
  40a660:	bl	402730 <getc@plt>
  40a664:	cmn	w0, #0x1
  40a668:	b.eq	40a630 <ferror@plt+0x7b90>  // b.none
  40a66c:	cmp	w0, #0xa
  40a670:	b.ne	40a5d8 <ferror@plt+0x7b38>  // b.any
  40a674:	mov	w1, #0x1                   	// #1
  40a678:	strb	w1, [x19, #8]
  40a67c:	b	40a5d8 <ferror@plt+0x7b38>
  40a680:	bl	40a3f0 <ferror@plt+0x7950>
  40a684:	mov	w0, #0x101                 	// #257
  40a688:	b	40a5d8 <ferror@plt+0x7b38>
  40a68c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a690:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a694:	add	x2, x2, #0x295
  40a698:	mov	w1, #0x0                   	// #0
  40a69c:	ldr	w0, [x0, #1660]
  40a6a0:	bl	403488 <ferror@plt+0x9e8>
  40a6a4:	bl	4027d0 <abort@plt>
  40a6a8:	stp	x29, x30, [sp, #-32]!
  40a6ac:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a6b0:	mov	x29, sp
  40a6b4:	stp	x19, x20, [sp, #16]
  40a6b8:	ldr	x19, [x0, #2160]
  40a6bc:	cbz	x19, 40a744 <ferror@plt+0x7ca4>
  40a6c0:	ldr	w0, [x19, #8]
  40a6c4:	cmp	w0, #0x1
  40a6c8:	b.eq	40a6f4 <ferror@plt+0x7c54>  // b.none
  40a6cc:	cmp	w0, #0x2
  40a6d0:	b.eq	40a74c <ferror@plt+0x7cac>  // b.none
  40a6d4:	cbnz	w0, 40a728 <ferror@plt+0x7c88>
  40a6d8:	ldr	x0, [x19, #32]
  40a6dc:	ldrb	w20, [x0]
  40a6e0:	cbz	w20, 40a720 <ferror@plt+0x7c80>
  40a6e4:	mov	w0, w20
  40a6e8:	ldp	x19, x20, [sp, #16]
  40a6ec:	ldp	x29, x30, [sp], #32
  40a6f0:	ret
  40a6f4:	ldr	x0, [x19, #32]
  40a6f8:	bl	402730 <getc@plt>
  40a6fc:	mov	w20, w0
  40a700:	cmn	w0, #0x1
  40a704:	b.eq	40a714 <ferror@plt+0x7c74>  // b.none
  40a708:	ldr	x1, [x19, #32]
  40a70c:	bl	4028d0 <ungetc@plt>
  40a710:	b	40a6e4 <ferror@plt+0x7c44>
  40a714:	ldrb	w0, [x19, #40]
  40a718:	orr	w0, w0, #0x1
  40a71c:	strb	w0, [x19, #40]
  40a720:	ldr	x19, [x19]
  40a724:	b	40a6bc <ferror@plt+0x7c1c>
  40a728:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a72c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a730:	add	x2, x2, #0x2c7
  40a734:	mov	w1, #0x0                   	// #0
  40a738:	ldr	w0, [x0, #1660]
  40a73c:	bl	403488 <ferror@plt+0x9e8>
  40a740:	bl	4027d0 <abort@plt>
  40a744:	mov	w20, #0x100                 	// #256
  40a748:	b	40a6e4 <ferror@plt+0x7c44>
  40a74c:	mov	w20, #0x101                 	// #257
  40a750:	b	40a6e4 <ferror@plt+0x7c44>
  40a754:	stp	x29, x30, [sp, #-80]!
  40a758:	mov	x29, sp
  40a75c:	stp	x21, x22, [sp, #32]
  40a760:	and	w22, w2, #0xff
  40a764:	stp	x23, x24, [sp, #48]
  40a768:	adrp	x23, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a76c:	add	x21, x23, #0x870
  40a770:	stp	x25, x26, [sp, #64]
  40a774:	mov	x25, x1
  40a778:	mov	x24, x0
  40a77c:	ldr	x1, [x21, #24]
  40a780:	stp	x19, x20, [sp, #16]
  40a784:	cbz	x1, 40a7ac <ferror@plt+0x7d0c>
  40a788:	ldr	x0, [x21, #16]
  40a78c:	ldr	x2, [x0, #8]
  40a790:	cmp	x1, x2
  40a794:	b.ls	40a944 <ferror@plt+0x7ea4>  // b.plast
  40a798:	ldr	x2, [x0, #32]
  40a79c:	cmp	x1, x2
  40a7a0:	b.cs	40a944 <ferror@plt+0x7ea4>  // b.hs, b.nlast
  40a7a4:	stp	x1, x1, [x0, #16]
  40a7a8:	str	xzr, [x21, #24]
  40a7ac:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a7b0:	ldr	w0, [x0, #1676]
  40a7b4:	tbz	w0, #8, 40a7e8 <ferror@plt+0x7d48>
  40a7b8:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a7bc:	ldr	x0, [x19, #2048]
  40a7c0:	cbz	x0, 40a7e8 <ferror@plt+0x7d48>
  40a7c4:	bl	407efc <ferror@plt+0x545c>
  40a7c8:	ldr	x0, [x19, #2048]
  40a7cc:	mov	x2, x25
  40a7d0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40a7d4:	add	x1, x1, #0x2fa
  40a7d8:	bl	4141fc <ferror@plt+0x1175c>
  40a7dc:	ldr	x1, [x19, #2048]
  40a7e0:	mov	w0, #0xa                   	// #10
  40a7e4:	bl	402500 <putc@plt>
  40a7e8:	ldr	x19, [x21, #16]
  40a7ec:	ldp	x1, x0, [x19, #24]
  40a7f0:	sub	x0, x0, x1
  40a7f4:	cmp	x0, #0x2f
  40a7f8:	b.hi	40a808 <ferror@plt+0x7d68>  // b.pmore
  40a7fc:	mov	x0, x19
  40a800:	mov	x1, #0x30                  	// #48
  40a804:	bl	414990 <_obstack_newchunk@@Base>
  40a808:	ldp	x20, x0, [x19, #16]
  40a80c:	add	x0, x0, #0x30
  40a810:	cmp	x0, x20
  40a814:	b.ne	40a824 <ferror@plt+0x7d84>  // b.any
  40a818:	ldrb	w1, [x19, #80]
  40a81c:	orr	w1, w1, #0x2
  40a820:	strb	w1, [x19, #80]
  40a824:	ldr	x2, [x19, #48]
  40a828:	ldr	x1, [x19, #32]
  40a82c:	add	x0, x0, x2
  40a830:	bic	x2, x0, x2
  40a834:	ldr	x0, [x19, #8]
  40a838:	sub	x3, x2, x0
  40a83c:	sub	x0, x1, x0
  40a840:	cmp	x3, x0
  40a844:	mov	w0, #0x1                   	// #1
  40a848:	csel	x2, x2, x1, ls  // ls = plast
  40a84c:	stp	x2, x2, [x19, #16]
  40a850:	str	w0, [x20, #8]
  40a854:	mov	x0, x25
  40a858:	bl	402450 <strlen@plt>
  40a85c:	add	x1, x0, #0x1
  40a860:	mov	x26, x0
  40a864:	add	x0, x21, #0x28
  40a868:	ldp	x3, x2, [x0, #24]
  40a86c:	sub	x2, x2, x3
  40a870:	cmp	x1, x2
  40a874:	b.ls	40a87c <ferror@plt+0x7ddc>  // b.plast
  40a878:	bl	414990 <_obstack_newchunk@@Base>
  40a87c:	ldr	x0, [x21, #64]
  40a880:	mov	x2, x26
  40a884:	mov	x1, x25
  40a888:	bl	402420 <memcpy@plt>
  40a88c:	ldr	x1, [x21, #64]
  40a890:	add	x0, x1, x26
  40a894:	add	x0, x0, #0x1
  40a898:	str	x0, [x21, #64]
  40a89c:	strb	wzr, [x1, x26]
  40a8a0:	ldp	x3, x2, [x21, #56]
  40a8a4:	cmp	x2, x3
  40a8a8:	b.ne	40a8b8 <ferror@plt+0x7e18>  // b.any
  40a8ac:	ldrb	w0, [x21, #120]
  40a8b0:	orr	w0, w0, #0x2
  40a8b4:	strb	w0, [x21, #120]
  40a8b8:	ldr	x1, [x21, #88]
  40a8bc:	mov	w0, #0x1                   	// #1
  40a8c0:	ldr	x4, [x21, #72]
  40a8c4:	add	x2, x2, x1
  40a8c8:	bic	x1, x2, x1
  40a8cc:	strb	w0, [x21, #32]
  40a8d0:	ldr	x2, [x21, #48]
  40a8d4:	ldp	x25, x26, [sp, #64]
  40a8d8:	sub	x5, x1, x2
  40a8dc:	sub	x2, x4, x2
  40a8e0:	str	x24, [x20, #32]
  40a8e4:	cmp	x5, x2
  40a8e8:	csel	x1, x1, x4, ls  // ls = plast
  40a8ec:	stp	x1, x1, [x21, #56]
  40a8f0:	mov	w1, #0xffffffff            	// #-1
  40a8f4:	str	w0, [x20, #24]
  40a8f8:	ldrb	w0, [x21, #8]
  40a8fc:	str	x3, [x20, #16]
  40a900:	ubfiz	w0, w0, #2, #6
  40a904:	orr	w22, w0, w22, lsl #1
  40a908:	ldrb	w0, [x20, #40]
  40a90c:	and	w22, w22, #0x7
  40a910:	and	w0, w0, #0xfffffff8
  40a914:	orr	w22, w22, w0
  40a918:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40a91c:	strb	w22, [x20, #40]
  40a920:	str	w1, [x0, #3504]
  40a924:	ldr	x0, [x23, #2160]
  40a928:	str	x20, [x23, #2160]
  40a92c:	ldp	x21, x22, [sp, #32]
  40a930:	ldp	x23, x24, [sp, #48]
  40a934:	str	x0, [x20]
  40a938:	ldp	x19, x20, [sp, #16]
  40a93c:	ldp	x29, x30, [sp], #80
  40a940:	ret
  40a944:	bl	414ad0 <_obstack_free@@Base>
  40a948:	b	40a7a8 <ferror@plt+0x7d08>
  40a94c:	stp	x29, x30, [sp, #-48]!
  40a950:	mov	x29, sp
  40a954:	stp	x21, x22, [sp, #32]
  40a958:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40a95c:	add	x22, x21, #0x870
  40a960:	stp	x19, x20, [sp, #16]
  40a964:	mov	x20, x0
  40a968:	ldr	x1, [x22, #24]
  40a96c:	cbz	x1, 40a994 <ferror@plt+0x7ef4>
  40a970:	ldr	x0, [x22, #16]
  40a974:	ldr	x2, [x0, #8]
  40a978:	cmp	x1, x2
  40a97c:	b.ls	40aa40 <ferror@plt+0x7fa0>  // b.plast
  40a980:	ldr	x2, [x0, #32]
  40a984:	cmp	x1, x2
  40a988:	b.cs	40aa40 <ferror@plt+0x7fa0>  // b.hs, b.nlast
  40a98c:	stp	x1, x1, [x0, #16]
  40a990:	str	xzr, [x22, #24]
  40a994:	ldr	x19, [x22, #16]
  40a998:	ldp	x1, x0, [x19, #24]
  40a99c:	sub	x0, x0, x1
  40a9a0:	cmp	x0, #0x2f
  40a9a4:	b.hi	40a9b4 <ferror@plt+0x7f14>  // b.pmore
  40a9a8:	mov	x0, x19
  40a9ac:	mov	x1, #0x30                  	// #48
  40a9b0:	bl	414990 <_obstack_newchunk@@Base>
  40a9b4:	ldp	x2, x3, [x19, #16]
  40a9b8:	add	x3, x3, #0x30
  40a9bc:	cmp	x3, x2
  40a9c0:	b.ne	40a9d0 <ferror@plt+0x7f30>  // b.any
  40a9c4:	ldrb	w0, [x19, #80]
  40a9c8:	orr	w0, w0, #0x2
  40a9cc:	strb	w0, [x19, #80]
  40a9d0:	ldr	x1, [x19, #48]
  40a9d4:	ldr	x0, [x19, #8]
  40a9d8:	add	x3, x3, x1
  40a9dc:	bic	x1, x3, x1
  40a9e0:	ldr	x3, [x19, #32]
  40a9e4:	sub	x4, x1, x0
  40a9e8:	sub	x0, x3, x0
  40a9ec:	cmp	x4, x0
  40a9f0:	mov	w0, #0x2                   	// #2
  40a9f4:	csel	x1, x1, x3, ls  // ls = plast
  40a9f8:	stp	x1, x1, [x19, #16]
  40a9fc:	str	w0, [x2, #8]
  40aa00:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40aa04:	str	x20, [x2, #32]
  40aa08:	ldr	x0, [x0, #3448]
  40aa0c:	ldp	x19, x20, [sp, #16]
  40aa10:	str	x0, [x2, #16]
  40aa14:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40aa18:	ldr	w0, [x0, #3424]
  40aa1c:	str	w0, [x2, #24]
  40aa20:	mov	w0, #0x1                   	// #1
  40aa24:	strb	w0, [x22, #32]
  40aa28:	ldr	x0, [x21, #2160]
  40aa2c:	str	x2, [x21, #2160]
  40aa30:	ldp	x21, x22, [sp, #32]
  40aa34:	str	x0, [x2]
  40aa38:	ldp	x29, x30, [sp], #48
  40aa3c:	ret
  40aa40:	bl	414ad0 <_obstack_free@@Base>
  40aa44:	b	40a990 <ferror@plt+0x7ef0>
  40aa48:	stp	x29, x30, [sp, #-32]!
  40aa4c:	mov	x29, sp
  40aa50:	stp	x19, x20, [sp, #16]
  40aa54:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40aa58:	add	x20, x20, #0x870
  40aa5c:	ldr	x0, [x20, #24]
  40aa60:	cbz	x0, 40aa80 <ferror@plt+0x7fe0>
  40aa64:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40aa68:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40aa6c:	add	x2, x2, #0x30d
  40aa70:	mov	w1, #0x0                   	// #0
  40aa74:	ldr	w0, [x0, #1660]
  40aa78:	bl	403488 <ferror@plt+0x9e8>
  40aa7c:	bl	4027d0 <abort@plt>
  40aa80:	ldr	x19, [x20, #16]
  40aa84:	ldp	x1, x0, [x19, #24]
  40aa88:	sub	x0, x0, x1
  40aa8c:	cmp	x0, #0x2f
  40aa90:	b.hi	40aaa0 <ferror@plt+0x8000>  // b.pmore
  40aa94:	mov	x0, x19
  40aa98:	mov	x1, #0x30                  	// #48
  40aa9c:	bl	414990 <_obstack_newchunk@@Base>
  40aaa0:	ldp	x2, x1, [x19, #16]
  40aaa4:	add	x1, x1, #0x30
  40aaa8:	cmp	x1, x2
  40aaac:	b.ne	40aabc <ferror@plt+0x801c>  // b.any
  40aab0:	ldrb	w0, [x19, #80]
  40aab4:	orr	w0, w0, #0x2
  40aab8:	strb	w0, [x19, #80]
  40aabc:	ldr	x0, [x19, #48]
  40aac0:	str	x2, [x20, #24]
  40aac4:	ldr	x3, [x19, #32]
  40aac8:	add	x1, x1, x0
  40aacc:	bic	x0, x1, x0
  40aad0:	ldr	x1, [x19, #8]
  40aad4:	sub	x4, x0, x1
  40aad8:	sub	x1, x3, x1
  40aadc:	cmp	x4, x1
  40aae0:	csel	x0, x0, x3, ls  // ls = plast
  40aae4:	stp	x0, x0, [x19, #16]
  40aae8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40aaec:	str	wzr, [x2, #8]
  40aaf0:	ldr	x0, [x0, #3448]
  40aaf4:	str	x0, [x2, #16]
  40aaf8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40aafc:	ldr	w0, [x0, #3424]
  40ab00:	str	w0, [x2, #24]
  40ab04:	ldr	x0, [x20, #16]
  40ab08:	ldp	x19, x20, [sp, #16]
  40ab0c:	ldp	x29, x30, [sp], #32
  40ab10:	ret
  40ab14:	stp	x29, x30, [sp, #-64]!
  40ab18:	mov	x29, sp
  40ab1c:	stp	x21, x22, [sp, #32]
  40ab20:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40ab24:	add	x21, x22, #0x870
  40ab28:	stp	x19, x20, [sp, #16]
  40ab2c:	ldr	x1, [x21, #24]
  40ab30:	str	x23, [sp, #48]
  40ab34:	cbz	x1, 40abdc <ferror@plt+0x813c>
  40ab38:	ldr	x19, [x21, #16]
  40ab3c:	ldp	x23, x20, [x19, #16]
  40ab40:	cmp	x20, x23
  40ab44:	b.eq	40abf4 <ferror@plt+0x8154>  // b.none
  40ab48:	ldr	x0, [x19, #32]
  40ab4c:	cmp	x20, x0
  40ab50:	b.ne	40ab60 <ferror@plt+0x80c0>  // b.any
  40ab54:	mov	x0, x19
  40ab58:	mov	x1, #0x1                   	// #1
  40ab5c:	bl	414990 <_obstack_newchunk@@Base>
  40ab60:	ldr	x0, [x19, #24]
  40ab64:	add	x1, x0, #0x1
  40ab68:	str	x1, [x19, #24]
  40ab6c:	strb	wzr, [x0]
  40ab70:	ldr	x0, [x21, #16]
  40ab74:	ldp	x1, x3, [x0, #16]
  40ab78:	cmp	x3, x1
  40ab7c:	b.ne	40ab8c <ferror@plt+0x80ec>  // b.any
  40ab80:	ldrb	w2, [x0, #80]
  40ab84:	orr	w2, w2, #0x2
  40ab88:	strb	w2, [x0, #80]
  40ab8c:	ldr	x2, [x0, #48]
  40ab90:	sub	x20, x20, x23
  40ab94:	ldr	x4, [x0, #32]
  40ab98:	add	x3, x3, x2
  40ab9c:	bic	x2, x3, x2
  40aba0:	add	x20, x1, x20
  40aba4:	ldr	x3, [x0, #8]
  40aba8:	sub	x5, x2, x3
  40abac:	sub	x3, x4, x3
  40abb0:	cmp	x5, x3
  40abb4:	csel	x2, x2, x4, ls  // ls = plast
  40abb8:	stp	x2, x2, [x0, #16]
  40abbc:	ldr	x0, [x21, #24]
  40abc0:	ldr	x2, [x22, #2160]
  40abc4:	str	x0, [x22, #2160]
  40abc8:	str	x2, [x0]
  40abcc:	stp	x1, x20, [x0, #32]
  40abd0:	mov	w0, #0x1                   	// #1
  40abd4:	strb	w0, [x21, #32]
  40abd8:	str	xzr, [x21, #24]
  40abdc:	mov	x0, x1
  40abe0:	ldp	x19, x20, [sp, #16]
  40abe4:	ldp	x21, x22, [sp, #32]
  40abe8:	ldr	x23, [sp, #48]
  40abec:	ldp	x29, x30, [sp], #64
  40abf0:	ret
  40abf4:	ldr	x0, [x19, #8]
  40abf8:	cmp	x1, x0
  40abfc:	b.ls	40ac18 <ferror@plt+0x8178>  // b.plast
  40ac00:	ldr	x0, [x19, #32]
  40ac04:	cmp	x1, x0
  40ac08:	b.cs	40ac18 <ferror@plt+0x8178>  // b.hs, b.nlast
  40ac0c:	stp	x1, x1, [x19, #16]
  40ac10:	mov	x1, #0x0                   	// #0
  40ac14:	b	40abd8 <ferror@plt+0x8138>
  40ac18:	mov	x0, x19
  40ac1c:	bl	414ad0 <_obstack_free@@Base>
  40ac20:	b	40ac10 <ferror@plt+0x8170>
  40ac24:	stp	x29, x30, [sp, #-64]!
  40ac28:	mov	x29, sp
  40ac2c:	stp	x21, x22, [sp, #32]
  40ac30:	mov	x21, x0
  40ac34:	stp	x19, x20, [sp, #16]
  40ac38:	and	w19, w1, #0xff
  40ac3c:	str	x23, [sp, #48]
  40ac40:	bl	40a6a8 <ferror@plt+0x7c08>
  40ac44:	ldrb	w1, [x21]
  40ac48:	cmp	w1, w0
  40ac4c:	b.ne	40ada4 <ferror@plt+0x8304>  // b.any
  40ac50:	ldrb	w0, [x21, #1]
  40ac54:	cbnz	w0, 40acb8 <ferror@plt+0x8218>
  40ac58:	cbnz	w19, 40ac78 <ferror@plt+0x81d8>
  40ac5c:	mov	w19, #0x1                   	// #1
  40ac60:	mov	w0, w19
  40ac64:	ldp	x19, x20, [sp, #16]
  40ac68:	ldp	x21, x22, [sp, #32]
  40ac6c:	ldr	x23, [sp, #48]
  40ac70:	ldp	x29, x30, [sp], #64
  40ac74:	ret
  40ac78:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40ac7c:	add	x2, x0, #0x870
  40ac80:	ldr	x0, [x0, #2160]
  40ac84:	cbz	x0, 40acb0 <ferror@plt+0x8210>
  40ac88:	ldr	w1, [x0, #8]
  40ac8c:	cbnz	w1, 40acb0 <ferror@plt+0x8210>
  40ac90:	ldr	x1, [x0, #32]
  40ac94:	ldrb	w3, [x1]
  40ac98:	cbz	w3, 40acb0 <ferror@plt+0x8210>
  40ac9c:	ldrb	w2, [x2, #32]
  40aca0:	cbnz	w2, 40acb0 <ferror@plt+0x8210>
  40aca4:	add	x1, x1, #0x1
  40aca8:	str	x1, [x0, #32]
  40acac:	b	40ac60 <ferror@plt+0x81c0>
  40acb0:	bl	40a590 <ferror@plt+0x7af0>
  40acb4:	b	40ac60 <ferror@plt+0x81c0>
  40acb8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40acbc:	add	x20, x0, #0x870
  40acc0:	ldr	x0, [x0, #2160]
  40acc4:	cbz	x0, 40ad0c <ferror@plt+0x826c>
  40acc8:	ldr	w1, [x0, #8]
  40accc:	cbnz	w1, 40ad0c <ferror@plt+0x826c>
  40acd0:	ldr	x1, [x0, #32]
  40acd4:	ldrb	w2, [x1]
  40acd8:	cbz	w2, 40ad0c <ferror@plt+0x826c>
  40acdc:	ldrb	w2, [x20, #32]
  40ace0:	cbnz	w2, 40ad0c <ferror@plt+0x826c>
  40ace4:	add	x1, x1, #0x1
  40ace8:	str	x1, [x0, #32]
  40acec:	add	x23, x21, #0x1
  40acf0:	mov	w22, #0x1                   	// #1
  40acf4:	bl	40a6a8 <ferror@plt+0x7c08>
  40acf8:	ldrb	w1, [x23], #1
  40acfc:	cmp	w0, w1
  40ad00:	b.eq	40ad14 <ferror@plt+0x8274>  // b.none
  40ad04:	mov	w19, #0x0                   	// #0
  40ad08:	b	40ad54 <ferror@plt+0x82b4>
  40ad0c:	bl	40a590 <ferror@plt+0x7af0>
  40ad10:	b	40acec <ferror@plt+0x824c>
  40ad14:	ldr	x0, [x20]
  40ad18:	cbz	x0, 40ad9c <ferror@plt+0x82fc>
  40ad1c:	ldr	w1, [x0, #8]
  40ad20:	cbnz	w1, 40ad9c <ferror@plt+0x82fc>
  40ad24:	ldr	x1, [x0, #32]
  40ad28:	ldrb	w2, [x1]
  40ad2c:	cbz	w2, 40ad9c <ferror@plt+0x82fc>
  40ad30:	ldrb	w2, [x20, #32]
  40ad34:	cbnz	w2, 40ad9c <ferror@plt+0x82fc>
  40ad38:	add	x1, x1, #0x1
  40ad3c:	str	x1, [x0, #32]
  40ad40:	ldrb	w0, [x23]
  40ad44:	add	w22, w22, #0x1
  40ad48:	cbnz	w0, 40acf4 <ferror@plt+0x8254>
  40ad4c:	cbnz	w19, 40ac5c <ferror@plt+0x81bc>
  40ad50:	mov	w19, #0x1                   	// #1
  40ad54:	bl	40aa48 <ferror@plt+0x7fa8>
  40ad58:	sxtw	x23, w22
  40ad5c:	ldp	x2, x1, [x0, #24]
  40ad60:	mov	x20, x0
  40ad64:	sub	x1, x1, x2
  40ad68:	cmp	x1, w22, sxtw
  40ad6c:	b.cs	40ad78 <ferror@plt+0x82d8>  // b.hs, b.nlast
  40ad70:	mov	x1, x23
  40ad74:	bl	414990 <_obstack_newchunk@@Base>
  40ad78:	ldr	x0, [x20, #24]
  40ad7c:	mov	x2, x23
  40ad80:	mov	x1, x21
  40ad84:	bl	402420 <memcpy@plt>
  40ad88:	ldr	x0, [x20, #24]
  40ad8c:	add	x0, x0, x23
  40ad90:	str	x0, [x20, #24]
  40ad94:	bl	40ab14 <ferror@plt+0x8074>
  40ad98:	b	40ac60 <ferror@plt+0x81c0>
  40ad9c:	bl	40a590 <ferror@plt+0x7af0>
  40ada0:	b	40ad40 <ferror@plt+0x82a0>
  40ada4:	mov	w19, #0x0                   	// #0
  40ada8:	b	40ac60 <ferror@plt+0x81c0>
  40adac:	stp	x29, x30, [sp, #-64]!
  40adb0:	mov	x29, sp
  40adb4:	stp	x21, x22, [sp, #32]
  40adb8:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40adbc:	add	x22, x22, #0x870
  40adc0:	stp	x19, x20, [sp, #16]
  40adc4:	str	x23, [sp, #48]
  40adc8:	mov	x23, x0
  40adcc:	bl	402450 <strlen@plt>
  40add0:	mov	x21, x0
  40add4:	ldr	x19, [x22, #128]
  40add8:	ldp	x1, x0, [x19, #24]
  40addc:	sub	x0, x0, x1
  40ade0:	cmp	x0, #0x2f
  40ade4:	b.hi	40adf4 <ferror@plt+0x8354>  // b.pmore
  40ade8:	mov	x0, x19
  40adec:	mov	x1, #0x30                  	// #48
  40adf0:	bl	414990 <_obstack_newchunk@@Base>
  40adf4:	ldp	x20, x2, [x19, #16]
  40adf8:	add	x2, x2, #0x30
  40adfc:	cmp	x2, x20
  40ae00:	b.ne	40ae10 <ferror@plt+0x8370>  // b.any
  40ae04:	ldrb	w0, [x19, #80]
  40ae08:	orr	w0, w0, #0x2
  40ae0c:	strb	w0, [x19, #80]
  40ae10:	ldr	x1, [x19, #48]
  40ae14:	ldr	x0, [x19, #8]
  40ae18:	add	x2, x2, x1
  40ae1c:	bic	x1, x2, x1
  40ae20:	ldr	x2, [x19, #32]
  40ae24:	sub	x3, x1, x0
  40ae28:	sub	x0, x2, x0
  40ae2c:	cmp	x3, x0
  40ae30:	csel	x1, x1, x2, ls  // ls = plast
  40ae34:	stp	x1, x1, [x19, #16]
  40ae38:	add	x1, x21, #0x1
  40ae3c:	ldr	x19, [x22, #128]
  40ae40:	ldr	x0, [x22, #136]
  40ae44:	ldr	x2, [x19, #24]
  40ae48:	str	x0, [x20]
  40ae4c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40ae50:	str	wzr, [x20, #8]
  40ae54:	ldr	x0, [x0, #3448]
  40ae58:	str	x0, [x20, #16]
  40ae5c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40ae60:	ldr	w0, [x0, #3424]
  40ae64:	str	w0, [x20, #24]
  40ae68:	ldr	x0, [x19, #32]
  40ae6c:	sub	x0, x0, x2
  40ae70:	cmp	x1, x0
  40ae74:	b.ls	40ae80 <ferror@plt+0x83e0>  // b.plast
  40ae78:	mov	x0, x19
  40ae7c:	bl	414990 <_obstack_newchunk@@Base>
  40ae80:	ldr	x0, [x19, #24]
  40ae84:	mov	x2, x21
  40ae88:	mov	x1, x23
  40ae8c:	bl	402420 <memcpy@plt>
  40ae90:	ldr	x1, [x19, #24]
  40ae94:	add	x0, x1, x21
  40ae98:	add	x0, x0, #0x1
  40ae9c:	str	x0, [x19, #24]
  40aea0:	strb	wzr, [x1, x21]
  40aea4:	ldp	x0, x2, [x19, #16]
  40aea8:	cmp	x2, x0
  40aeac:	b.ne	40aebc <ferror@plt+0x841c>  // b.any
  40aeb0:	ldrb	w1, [x19, #80]
  40aeb4:	orr	w1, w1, #0x2
  40aeb8:	strb	w1, [x19, #80]
  40aebc:	ldr	x1, [x19, #48]
  40aec0:	str	x20, [x22, #136]
  40aec4:	ldr	x3, [x19, #32]
  40aec8:	add	x2, x2, x1
  40aecc:	bic	x1, x2, x1
  40aed0:	ldr	x2, [x19, #8]
  40aed4:	ldr	x23, [sp, #48]
  40aed8:	sub	x4, x1, x2
  40aedc:	sub	x2, x3, x2
  40aee0:	cmp	x4, x2
  40aee4:	csel	x1, x1, x3, ls  // ls = plast
  40aee8:	stp	x1, x1, [x19, #16]
  40aeec:	str	x0, [x20, #32]
  40aef0:	add	x0, x0, x21
  40aef4:	str	x0, [x20, #40]
  40aef8:	ldp	x19, x20, [sp, #16]
  40aefc:	ldp	x21, x22, [sp, #32]
  40af00:	ldp	x29, x30, [sp], #64
  40af04:	ret
  40af08:	stp	x29, x30, [sp, #-32]!
  40af0c:	mov	x1, #0x0                   	// #0
  40af10:	mov	x29, sp
  40af14:	stp	x19, x20, [sp, #16]
  40af18:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40af1c:	add	x19, x20, #0x870
  40af20:	ldr	x0, [x19, #16]
  40af24:	str	xzr, [x19, #24]
  40af28:	bl	414ad0 <_obstack_free@@Base>
  40af2c:	ldr	x0, [x19, #16]
  40af30:	bl	4028c0 <free@plt>
  40af34:	ldr	x0, [x19, #136]
  40af38:	cbnz	x0, 40af78 <ferror@plt+0x84d8>
  40af3c:	add	x0, x19, #0x90
  40af40:	mov	x1, #0x0                   	// #0
  40af44:	bl	414ad0 <_obstack_free@@Base>
  40af48:	add	x0, x19, #0x28
  40af4c:	mov	x1, #0x0                   	// #0
  40af50:	bl	414ad0 <_obstack_free@@Base>
  40af54:	ldr	x0, [x19, #128]
  40af58:	mov	x1, #0x0                   	// #0
  40af5c:	bl	414ad0 <_obstack_free@@Base>
  40af60:	ldr	x0, [x19, #128]
  40af64:	bl	4028c0 <free@plt>
  40af68:	mov	w0, #0x0                   	// #0
  40af6c:	ldp	x19, x20, [sp, #16]
  40af70:	ldp	x29, x30, [sp], #32
  40af74:	ret
  40af78:	ldr	x0, [x19, #128]
  40af7c:	str	x0, [x19, #16]
  40af80:	mov	x0, #0x58                  	// #88
  40af84:	bl	413d0c <ferror@plt+0x1126c>
  40af88:	adrp	x4, 402000 <mbrtowc@plt-0x410>
  40af8c:	adrp	x3, 413000 <ferror@plt+0x10560>
  40af90:	add	x4, x4, #0x8c0
  40af94:	add	x3, x3, #0xd0c
  40af98:	mov	x2, #0x0                   	// #0
  40af9c:	mov	x1, #0x0                   	// #0
  40afa0:	str	x0, [x19, #128]
  40afa4:	bl	414964 <_obstack_begin@@Base>
  40afa8:	ldr	x0, [x19, #136]
  40afac:	str	x0, [x20, #2160]
  40afb0:	mov	w0, #0x1                   	// #1
  40afb4:	strb	w0, [x19, #32]
  40afb8:	mov	w0, #0x1                   	// #1
  40afbc:	str	xzr, [x19, #136]
  40afc0:	b	40af6c <ferror@plt+0x84cc>
  40afc4:	stp	x29, x30, [sp, #-64]!
  40afc8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40afcc:	mov	x29, sp
  40afd0:	stp	x19, x20, [sp, #16]
  40afd4:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40afd8:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40afdc:	stp	x21, x22, [sp, #32]
  40afe0:	add	x19, x19, #0x870
  40afe4:	mov	x21, x0
  40afe8:	ldr	x22, [x20, #3448]
  40afec:	str	x23, [sp, #48]
  40aff0:	ldr	w23, [x0, #3424]
  40aff4:	ldr	x0, [x19]
  40aff8:	cbz	x0, 40b060 <ferror@plt+0x85c0>
  40affc:	ldr	w1, [x0, #8]
  40b000:	cbnz	w1, 40b060 <ferror@plt+0x85c0>
  40b004:	ldr	x1, [x0, #32]
  40b008:	ldrb	w2, [x1]
  40b00c:	cbz	w2, 40b060 <ferror@plt+0x85c0>
  40b010:	ldrb	w2, [x19, #32]
  40b014:	cbnz	w2, 40b060 <ferror@plt+0x85c0>
  40b018:	add	x2, x1, #0x1
  40b01c:	str	x2, [x0, #32]
  40b020:	ldrb	w0, [x1]
  40b024:	cmp	w0, #0xa
  40b028:	b.ne	40aff4 <ferror@plt+0x8554>  // b.any
  40b02c:	ldr	x0, [x20, #3448]
  40b030:	cmp	x0, x22
  40b034:	b.ne	40b044 <ferror@plt+0x85a4>  // b.any
  40b038:	ldr	w0, [x21, #3424]
  40b03c:	cmp	w0, w23
  40b040:	b.eq	40b04c <ferror@plt+0x85ac>  // b.none
  40b044:	mov	w0, #0x1                   	// #1
  40b048:	strb	w0, [x19, #32]
  40b04c:	ldp	x19, x20, [sp, #16]
  40b050:	ldp	x21, x22, [sp, #32]
  40b054:	ldr	x23, [sp, #48]
  40b058:	ldp	x29, x30, [sp], #64
  40b05c:	ret
  40b060:	bl	40a590 <ferror@plt+0x7af0>
  40b064:	cmp	w0, #0x100
  40b068:	b.ne	40b024 <ferror@plt+0x8584>  // b.any
  40b06c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40b070:	mov	w3, w23
  40b074:	mov	x2, x22
  40b078:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b07c:	ldr	w0, [x0, #1660]
  40b080:	add	x4, x4, #0x334
  40b084:	mov	w1, #0x0                   	// #0
  40b088:	bl	403538 <ferror@plt+0xa98>
  40b08c:	b	40b02c <ferror@plt+0x858c>
  40b090:	stp	x29, x30, [sp, #-64]!
  40b094:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b098:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40b09c:	mov	x29, sp
  40b0a0:	add	x0, x0, #0x3df
  40b0a4:	str	x0, [x1, #3448]
  40b0a8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b0ac:	stp	x19, x20, [sp, #16]
  40b0b0:	adrp	x20, 413000 <ferror@plt+0x10560>
  40b0b4:	add	x20, x20, #0xd0c
  40b0b8:	str	wzr, [x0, #3424]
  40b0bc:	mov	x0, #0x58                  	// #88
  40b0c0:	stp	x21, x22, [sp, #32]
  40b0c4:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40b0c8:	adrp	x21, 402000 <mbrtowc@plt-0x410>
  40b0cc:	add	x19, x22, #0x870
  40b0d0:	add	x21, x21, #0x8c0
  40b0d4:	str	x23, [sp, #48]
  40b0d8:	bl	413d0c <ferror@plt+0x1126c>
  40b0dc:	mov	x4, x21
  40b0e0:	mov	x3, x20
  40b0e4:	mov	x2, #0x0                   	// #0
  40b0e8:	mov	x1, #0x0                   	// #0
  40b0ec:	str	x0, [x19, #16]
  40b0f0:	bl	414964 <_obstack_begin@@Base>
  40b0f4:	mov	x0, #0x58                  	// #88
  40b0f8:	bl	413d0c <ferror@plt+0x1126c>
  40b0fc:	mov	x4, x21
  40b100:	mov	x3, x20
  40b104:	mov	x2, #0x0                   	// #0
  40b108:	mov	x1, #0x0                   	// #0
  40b10c:	str	x0, [x19, #128]
  40b110:	bl	414964 <_obstack_begin@@Base>
  40b114:	mov	x4, x21
  40b118:	mov	x3, x20
  40b11c:	mov	x2, #0x0                   	// #0
  40b120:	mov	x1, #0x0                   	// #0
  40b124:	add	x23, x19, #0x90
  40b128:	add	x0, x19, #0x28
  40b12c:	bl	414964 <_obstack_begin@@Base>
  40b130:	mov	x1, #0x0                   	// #0
  40b134:	mov	x4, x21
  40b138:	mov	x3, x20
  40b13c:	mov	x0, x23
  40b140:	mov	x2, #0x0                   	// #0
  40b144:	bl	414964 <_obstack_begin@@Base>
  40b148:	ldp	x0, x1, [x19, #168]
  40b14c:	cmp	x1, x0
  40b150:	b.ne	40b160 <ferror@plt+0x86c0>  // b.any
  40b154:	mov	x0, x23
  40b158:	mov	x1, #0x1                   	// #1
  40b15c:	bl	414990 <_obstack_newchunk@@Base>
  40b160:	ldp	x2, x1, [x19, #160]
  40b164:	add	x1, x1, #0x1
  40b168:	cmp	x1, x2
  40b16c:	b.ne	40b17c <ferror@plt+0x86dc>  // b.any
  40b170:	ldrb	w2, [x19, #224]
  40b174:	orr	w2, w2, #0x2
  40b178:	strb	w2, [x19, #224]
  40b17c:	ldr	x0, [x19, #192]
  40b180:	str	xzr, [x22, #2160]
  40b184:	ldr	x3, [x19, #176]
  40b188:	add	x1, x1, x0
  40b18c:	bic	x0, x1, x0
  40b190:	strb	wzr, [x19, #8]
  40b194:	ldr	x1, [x19, #152]
  40b198:	str	xzr, [x19, #24]
  40b19c:	str	xzr, [x19, #136]
  40b1a0:	sub	x4, x0, x1
  40b1a4:	sub	x1, x3, x1
  40b1a8:	cmp	x4, x1
  40b1ac:	csel	x0, x0, x3, ls  // ls = plast
  40b1b0:	stp	x0, x0, [x19, #160]
  40b1b4:	str	x0, [x19, #232]
  40b1b8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b1bc:	add	x0, x0, #0x38
  40b1c0:	bl	413ec4 <ferror@plt+0x11424>
  40b1c4:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b1c8:	add	x19, x1, #0xd68
  40b1cc:	str	x0, [x1, #3432]
  40b1d0:	bl	402450 <strlen@plt>
  40b1d4:	str	x0, [x19, #8]
  40b1d8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  40b1dc:	add	x0, x0, #0x301
  40b1e0:	bl	413ec4 <ferror@plt+0x11424>
  40b1e4:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b1e8:	add	x19, x1, #0xda0
  40b1ec:	str	x0, [x1, #3488]
  40b1f0:	bl	402450 <strlen@plt>
  40b1f4:	str	x0, [x19, #8]
  40b1f8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b1fc:	add	x0, x0, #0x42
  40b200:	bl	413ec4 <ferror@plt+0x11424>
  40b204:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b208:	add	x19, x1, #0xd80
  40b20c:	str	x0, [x1, #3456]
  40b210:	bl	402450 <strlen@plt>
  40b214:	str	x0, [x19, #8]
  40b218:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  40b21c:	add	x0, x0, #0x494
  40b220:	bl	413ec4 <ferror@plt+0x11424>
  40b224:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b228:	add	x19, x1, #0xd90
  40b22c:	str	x0, [x1, #3472]
  40b230:	bl	402450 <strlen@plt>
  40b234:	ldp	x21, x22, [sp, #32]
  40b238:	ldr	x23, [sp, #48]
  40b23c:	str	x0, [x19, #8]
  40b240:	ldp	x19, x20, [sp, #16]
  40b244:	ldp	x29, x30, [sp], #64
  40b248:	ret
  40b24c:	stp	x29, x30, [sp, #-48]!
  40b250:	mov	x29, sp
  40b254:	stp	x21, x22, [sp, #32]
  40b258:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b25c:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b260:	stp	x19, x20, [sp, #16]
  40b264:	mov	x20, x0
  40b268:	mov	x19, x1
  40b26c:	ldr	x0, [x22, #3432]
  40b270:	bl	4028c0 <free@plt>
  40b274:	ldr	x0, [x21, #3488]
  40b278:	bl	4028c0 <free@plt>
  40b27c:	cbz	x20, 40b2a0 <ferror@plt+0x8800>
  40b280:	cbz	x19, 40b294 <ferror@plt+0x87f4>
  40b284:	ldrb	w0, [x20]
  40b288:	cbz	w0, 40b2b0 <ferror@plt+0x8810>
  40b28c:	ldrb	w0, [x19]
  40b290:	cbnz	w0, 40b2b0 <ferror@plt+0x8810>
  40b294:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  40b298:	add	x19, x19, #0x301
  40b29c:	b	40b2b0 <ferror@plt+0x8810>
  40b2a0:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  40b2a4:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b2a8:	add	x19, x19, #0x301
  40b2ac:	add	x20, x20, #0x38
  40b2b0:	mov	x0, x20
  40b2b4:	add	x20, x22, #0xd68
  40b2b8:	bl	413ec4 <ferror@plt+0x11424>
  40b2bc:	str	x0, [x22, #3432]
  40b2c0:	bl	402450 <strlen@plt>
  40b2c4:	str	x0, [x20, #8]
  40b2c8:	mov	x0, x19
  40b2cc:	add	x19, x21, #0xda0
  40b2d0:	bl	413ec4 <ferror@plt+0x11424>
  40b2d4:	str	x0, [x21, #3488]
  40b2d8:	bl	402450 <strlen@plt>
  40b2dc:	ldp	x21, x22, [sp, #32]
  40b2e0:	str	x0, [x19, #8]
  40b2e4:	ldp	x19, x20, [sp, #16]
  40b2e8:	ldp	x29, x30, [sp], #48
  40b2ec:	ret
  40b2f0:	stp	x29, x30, [sp, #-48]!
  40b2f4:	mov	x29, sp
  40b2f8:	stp	x21, x22, [sp, #32]
  40b2fc:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b300:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b304:	stp	x19, x20, [sp, #16]
  40b308:	mov	x20, x0
  40b30c:	mov	x19, x1
  40b310:	ldr	x0, [x22, #3456]
  40b314:	bl	4028c0 <free@plt>
  40b318:	ldr	x0, [x21, #3472]
  40b31c:	bl	4028c0 <free@plt>
  40b320:	cbz	x20, 40b344 <ferror@plt+0x88a4>
  40b324:	cbz	x19, 40b338 <ferror@plt+0x8898>
  40b328:	ldrb	w0, [x20]
  40b32c:	cbz	w0, 40b350 <ferror@plt+0x88b0>
  40b330:	ldrb	w0, [x19]
  40b334:	cbnz	w0, 40b350 <ferror@plt+0x88b0>
  40b338:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x34bc>
  40b33c:	add	x19, x19, #0x494
  40b340:	b	40b350 <ferror@plt+0x88b0>
  40b344:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  40b348:	add	x19, x19, #0x3df
  40b34c:	mov	x20, x19
  40b350:	mov	x0, x20
  40b354:	add	x20, x22, #0xd80
  40b358:	bl	413ec4 <ferror@plt+0x11424>
  40b35c:	str	x0, [x22, #3456]
  40b360:	bl	402450 <strlen@plt>
  40b364:	str	x0, [x20, #8]
  40b368:	mov	x0, x19
  40b36c:	add	x19, x21, #0xd90
  40b370:	bl	413ec4 <ferror@plt+0x11424>
  40b374:	str	x0, [x21, #3472]
  40b378:	bl	402450 <strlen@plt>
  40b37c:	ldp	x21, x22, [sp, #32]
  40b380:	str	x0, [x19, #8]
  40b384:	ldp	x19, x20, [sp, #16]
  40b388:	ldp	x29, x30, [sp], #48
  40b38c:	ret
  40b390:	stp	x29, x30, [sp, #-160]!
  40b394:	mov	x29, sp
  40b398:	stp	x19, x20, [sp, #16]
  40b39c:	stp	x25, x26, [sp, #64]
  40b3a0:	adrp	x25, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40b3a4:	add	x19, x25, #0x870
  40b3a8:	stp	x21, x22, [sp, #32]
  40b3ac:	mov	x22, x1
  40b3b0:	ldr	x2, [x19, #152]
  40b3b4:	stp	x23, x24, [sp, #48]
  40b3b8:	mov	x24, x0
  40b3bc:	ldr	x1, [x19, #232]
  40b3c0:	stp	x27, x28, [sp, #80]
  40b3c4:	str	x25, [sp, #104]
  40b3c8:	cmp	x2, x1
  40b3cc:	b.cs	40b448 <ferror@plt+0x89a8>  // b.hs, b.nlast
  40b3d0:	ldr	x2, [x19, #176]
  40b3d4:	cmp	x2, x1
  40b3d8:	b.ls	40b448 <ferror@plt+0x89a8>  // b.plast
  40b3dc:	stp	x1, x1, [x19, #160]
  40b3e0:	cbnz	x22, 40b3e8 <ferror@plt+0x8948>
  40b3e4:	add	x22, sp, #0x9c
  40b3e8:	bl	40a6a8 <ferror@plt+0x7c08>
  40b3ec:	mov	w20, w0
  40b3f0:	cmp	w0, #0x100
  40b3f4:	ldr	x0, [sp, #104]
  40b3f8:	ldr	x0, [x0, #2160]
  40b3fc:	b.ne	40b460 <ferror@plt+0x89c0>  // b.any
  40b400:	cbz	x0, 40b454 <ferror@plt+0x89b4>
  40b404:	ldr	w21, [x0, #8]
  40b408:	cbnz	w21, 40b454 <ferror@plt+0x89b4>
  40b40c:	ldr	x1, [x0, #32]
  40b410:	ldrb	w2, [x1]
  40b414:	cbz	w2, 40b454 <ferror@plt+0x89b4>
  40b418:	ldrb	w2, [x19, #32]
  40b41c:	cbnz	w2, 40b454 <ferror@plt+0x89b4>
  40b420:	add	x1, x1, #0x1
  40b424:	str	x1, [x0, #32]
  40b428:	mov	w0, w21
  40b42c:	ldp	x19, x20, [sp, #16]
  40b430:	ldp	x21, x22, [sp, #32]
  40b434:	ldp	x23, x24, [sp, #48]
  40b438:	ldp	x25, x26, [sp, #64]
  40b43c:	ldp	x27, x28, [sp, #80]
  40b440:	ldp	x29, x30, [sp], #160
  40b444:	ret
  40b448:	add	x0, x19, #0x90
  40b44c:	bl	414ad0 <_obstack_free@@Base>
  40b450:	b	40b3e0 <ferror@plt+0x8940>
  40b454:	mov	w21, #0x0                   	// #0
  40b458:	bl	40a590 <ferror@plt+0x7af0>
  40b45c:	b	40b428 <ferror@plt+0x8988>
  40b460:	cmp	w20, #0x101
  40b464:	b.ne	40b4a8 <ferror@plt+0x8a08>  // b.any
  40b468:	ldr	w1, [x0, #8]
  40b46c:	cmp	w1, #0x2
  40b470:	b.eq	40b490 <ferror@plt+0x89f0>  // b.none
  40b474:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40b478:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b47c:	add	x2, x2, #0x35c
  40b480:	mov	w1, #0x0                   	// #0
  40b484:	ldr	w0, [x0, #1660]
  40b488:	bl	403488 <ferror@plt+0x9e8>
  40b48c:	bl	4027d0 <abort@plt>
  40b490:	ldr	x0, [x0, #32]
  40b494:	str	w1, [x24]
  40b498:	str	x0, [x24, #8]
  40b49c:	mov	w21, #0x7                   	// #7
  40b4a0:	bl	40a590 <ferror@plt+0x7af0>
  40b4a4:	b	40b428 <ferror@plt+0x8988>
  40b4a8:	cbz	x0, 40b5f0 <ferror@plt+0x8b50>
  40b4ac:	ldr	w1, [x0, #8]
  40b4b0:	cbnz	w1, 40b5f0 <ferror@plt+0x8b50>
  40b4b4:	ldr	x1, [x0, #32]
  40b4b8:	ldrb	w2, [x1]
  40b4bc:	cbz	w2, 40b5f0 <ferror@plt+0x8b50>
  40b4c0:	ldrb	w2, [x19, #32]
  40b4c4:	cbnz	w2, 40b5f0 <ferror@plt+0x8b50>
  40b4c8:	add	x1, x1, #0x1
  40b4cc:	str	x1, [x0, #32]
  40b4d0:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b4d4:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b4d8:	ldr	x28, [x0, #3448]
  40b4dc:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b4e0:	ldr	w0, [x0, #3424]
  40b4e4:	str	w0, [x22]
  40b4e8:	ldr	x0, [x21, #3456]
  40b4ec:	ldrb	w1, [x0]
  40b4f0:	cmp	w1, w20
  40b4f4:	b.ne	40b60c <ferror@plt+0x8b6c>  // b.any
  40b4f8:	cbz	w20, 40b60c <ferror@plt+0x8b6c>
  40b4fc:	ldrb	w1, [x0, #1]
  40b500:	cbnz	w1, 40b5f8 <ferror@plt+0x8b58>
  40b504:	add	x0, x21, #0xd80
  40b508:	ldr	x20, [x0, #8]
  40b50c:	add	x0, x19, #0x90
  40b510:	ldp	x2, x1, [x0, #24]
  40b514:	sub	x1, x1, x2
  40b518:	cmp	x20, x1
  40b51c:	b.ls	40b528 <ferror@plt+0x8a88>  // b.plast
  40b520:	mov	x1, x20
  40b524:	bl	414990 <_obstack_newchunk@@Base>
  40b528:	ldr	x1, [x21, #3456]
  40b52c:	mov	x2, x20
  40b530:	ldr	x0, [x19, #168]
  40b534:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b538:	add	x23, x21, #0xd90
  40b53c:	bl	402420 <memcpy@plt>
  40b540:	ldr	x2, [x19, #168]
  40b544:	add	x2, x2, x20
  40b548:	str	x2, [x19, #168]
  40b54c:	ldr	x0, [x19]
  40b550:	cbz	x0, 40b6b0 <ferror@plt+0x8c10>
  40b554:	ldr	w1, [x0, #8]
  40b558:	cbnz	w1, 40b6b0 <ferror@plt+0x8c10>
  40b55c:	ldr	x1, [x0, #32]
  40b560:	ldrb	w2, [x1]
  40b564:	cbz	w2, 40b6b0 <ferror@plt+0x8c10>
  40b568:	ldrb	w2, [x19, #32]
  40b56c:	cbnz	w2, 40b6b0 <ferror@plt+0x8c10>
  40b570:	add	x2, x1, #0x1
  40b574:	str	x2, [x0, #32]
  40b578:	ldrb	w20, [x1]
  40b57c:	ldr	x0, [x23]
  40b580:	ldrb	w1, [x0]
  40b584:	cmp	w1, w20
  40b588:	b.ne	40b684 <ferror@plt+0x8be4>  // b.any
  40b58c:	cbz	w20, 40b684 <ferror@plt+0x8be4>
  40b590:	ldrb	w1, [x0, #1]
  40b594:	cbz	w1, 40b5ac <ferror@plt+0x8b0c>
  40b598:	add	x0, x0, #0x1
  40b59c:	mov	w1, #0x1                   	// #1
  40b5a0:	bl	40ac24 <ferror@plt+0x8184>
  40b5a4:	tst	w0, #0xff
  40b5a8:	b.eq	40b684 <ferror@plt+0x8be4>  // b.none
  40b5ac:	add	x0, x19, #0x90
  40b5b0:	ldr	x20, [x23, #8]
  40b5b4:	ldp	x2, x1, [x0, #24]
  40b5b8:	sub	x1, x1, x2
  40b5bc:	cmp	x20, x1
  40b5c0:	b.ls	40b5cc <ferror@plt+0x8b2c>  // b.plast
  40b5c4:	mov	x1, x20
  40b5c8:	bl	414990 <_obstack_newchunk@@Base>
  40b5cc:	ldr	x1, [x21, #3472]
  40b5d0:	mov	x2, x20
  40b5d4:	ldr	x0, [x19, #168]
  40b5d8:	bl	402420 <memcpy@plt>
  40b5dc:	ldr	x2, [x19, #168]
  40b5e0:	add	x2, x2, x20
  40b5e4:	str	x2, [x19, #168]
  40b5e8:	mov	w21, #0x1                   	// #1
  40b5ec:	b	40b78c <ferror@plt+0x8cec>
  40b5f0:	bl	40a590 <ferror@plt+0x7af0>
  40b5f4:	b	40b4d0 <ferror@plt+0x8a30>
  40b5f8:	add	x0, x0, #0x1
  40b5fc:	mov	w1, #0x1                   	// #1
  40b600:	bl	40ac24 <ferror@plt+0x8184>
  40b604:	tst	w0, #0xff
  40b608:	b.ne	40b504 <ferror@plt+0x8a64>  // b.any
  40b60c:	bl	402870 <__ctype_b_loc@plt>
  40b610:	mov	x23, x0
  40b614:	ldr	x0, [x0]
  40b618:	ldrh	w0, [x0, w20, sxtw #1]
  40b61c:	tbnz	w0, #10, 40b628 <ferror@plt+0x8b88>
  40b620:	cmp	w20, #0x5f
  40b624:	b.ne	40b740 <ferror@plt+0x8ca0>  // b.any
  40b628:	add	x0, x19, #0x90
  40b62c:	ldp	x1, x2, [x0, #24]
  40b630:	cmp	x2, x1
  40b634:	b.ne	40b640 <ferror@plt+0x8ba0>  // b.any
  40b638:	mov	x1, #0x1                   	// #1
  40b63c:	bl	414990 <_obstack_newchunk@@Base>
  40b640:	ldr	x0, [x19, #168]
  40b644:	add	x1, x19, #0x90
  40b648:	add	x2, x0, #0x1
  40b64c:	str	x2, [x19, #168]
  40b650:	strb	w20, [x0]
  40b654:	mov	x20, x1
  40b658:	bl	40a6a8 <ferror@plt+0x7c08>
  40b65c:	mov	w21, w0
  40b660:	cmp	w0, #0x100
  40b664:	b.eq	40b67c <ferror@plt+0x8bdc>  // b.none
  40b668:	ldr	x0, [x23]
  40b66c:	ldrh	w0, [x0, w21, sxtw #1]
  40b670:	tbnz	w0, #3, 40b6e0 <ferror@plt+0x8c40>
  40b674:	cmp	w21, #0x5f
  40b678:	b.eq	40b6e0 <ferror@plt+0x8c40>  // b.none
  40b67c:	mov	w21, #0x2                   	// #2
  40b680:	b	40b78c <ferror@plt+0x8cec>
  40b684:	add	x0, x19, #0x90
  40b688:	ldp	x1, x2, [x0, #24]
  40b68c:	cmp	x2, x1
  40b690:	b.ne	40b69c <ferror@plt+0x8bfc>  // b.any
  40b694:	mov	x1, #0x1                   	// #1
  40b698:	bl	414990 <_obstack_newchunk@@Base>
  40b69c:	ldr	x0, [x19, #168]
  40b6a0:	add	x2, x0, #0x1
  40b6a4:	str	x2, [x19, #168]
  40b6a8:	strb	w20, [x0]
  40b6ac:	b	40b54c <ferror@plt+0x8aac>
  40b6b0:	bl	40a590 <ferror@plt+0x7af0>
  40b6b4:	mov	w20, w0
  40b6b8:	cmp	w0, #0x100
  40b6bc:	b.ne	40b57c <ferror@plt+0x8adc>  // b.any
  40b6c0:	ldr	w3, [x22]
  40b6c4:	mov	x2, x28
  40b6c8:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b6cc:	mov	w1, #0x0                   	// #0
  40b6d0:	add	x4, x4, #0x3be
  40b6d4:	mov	w0, #0x1                   	// #1
  40b6d8:	bl	403538 <ferror@plt+0xa98>
  40b6dc:	b	40b5e8 <ferror@plt+0x8b48>
  40b6e0:	ldp	x0, x1, [x20, #24]
  40b6e4:	cmp	x1, x0
  40b6e8:	b.ne	40b6f8 <ferror@plt+0x8c58>  // b.any
  40b6ec:	mov	x0, x20
  40b6f0:	mov	x1, #0x1                   	// #1
  40b6f4:	bl	414990 <_obstack_newchunk@@Base>
  40b6f8:	ldr	x0, [x20, #24]
  40b6fc:	add	x1, x0, #0x1
  40b700:	str	x1, [x20, #24]
  40b704:	strb	w21, [x0]
  40b708:	ldr	x0, [x19]
  40b70c:	cbz	x0, 40b738 <ferror@plt+0x8c98>
  40b710:	ldr	w1, [x0, #8]
  40b714:	cbnz	w1, 40b738 <ferror@plt+0x8c98>
  40b718:	ldr	x1, [x0, #32]
  40b71c:	ldrb	w2, [x1]
  40b720:	cbz	w2, 40b738 <ferror@plt+0x8c98>
  40b724:	ldrb	w2, [x19, #32]
  40b728:	cbnz	w2, 40b738 <ferror@plt+0x8c98>
  40b72c:	add	x1, x1, #0x1
  40b730:	str	x1, [x0, #32]
  40b734:	b	40b658 <ferror@plt+0x8bb8>
  40b738:	bl	40a590 <ferror@plt+0x7af0>
  40b73c:	b	40b658 <ferror@plt+0x8bb8>
  40b740:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b744:	ldr	x0, [x21, #3432]
  40b748:	ldrb	w1, [x0]
  40b74c:	cmp	w1, w20
  40b750:	b.eq	40b804 <ferror@plt+0x8d64>  // b.none
  40b754:	sub	w1, w20, #0x28
  40b758:	cmp	w1, #0x4
  40b75c:	b.ls	40b91c <ferror@plt+0x8e7c>  // b.plast
  40b760:	mov	w21, #0x6                   	// #6
  40b764:	add	x0, x19, #0x90
  40b768:	ldp	x1, x2, [x0, #24]
  40b76c:	cmp	x2, x1
  40b770:	b.ne	40b77c <ferror@plt+0x8cdc>  // b.any
  40b774:	mov	x1, #0x1                   	// #1
  40b778:	bl	414990 <_obstack_newchunk@@Base>
  40b77c:	ldr	x0, [x19, #168]
  40b780:	add	x2, x0, #0x1
  40b784:	str	x2, [x19, #168]
  40b788:	strb	w20, [x0]
  40b78c:	add	x0, x19, #0x90
  40b790:	ldp	x1, x2, [x0, #24]
  40b794:	cmp	x2, x1
  40b798:	b.ne	40b7a4 <ferror@plt+0x8d04>  // b.any
  40b79c:	mov	x1, #0x1                   	// #1
  40b7a0:	bl	414990 <_obstack_newchunk@@Base>
  40b7a4:	ldr	x0, [x19, #168]
  40b7a8:	add	x2, x0, #0x1
  40b7ac:	str	x2, [x19, #168]
  40b7b0:	strb	wzr, [x0]
  40b7b4:	mov	w0, #0x1                   	// #1
  40b7b8:	ldp	x3, x2, [x19, #160]
  40b7bc:	str	w0, [x24]
  40b7c0:	cmp	x2, x3
  40b7c4:	b.ne	40b7d4 <ferror@plt+0x8d34>  // b.any
  40b7c8:	ldrb	w0, [x19, #224]
  40b7cc:	orr	w0, w0, #0x2
  40b7d0:	strb	w0, [x19, #224]
  40b7d4:	ldr	x0, [x19, #192]
  40b7d8:	ldr	x1, [x19, #152]
  40b7dc:	add	x2, x2, x0
  40b7e0:	bic	x0, x2, x0
  40b7e4:	ldr	x2, [x19, #176]
  40b7e8:	sub	x4, x0, x1
  40b7ec:	sub	x1, x2, x1
  40b7f0:	cmp	x4, x1
  40b7f4:	csel	x0, x0, x2, ls  // ls = plast
  40b7f8:	stp	x0, x0, [x19, #160]
  40b7fc:	str	x3, [x24, #8]
  40b800:	b	40b428 <ferror@plt+0x8988>
  40b804:	cbz	w20, 40b754 <ferror@plt+0x8cb4>
  40b808:	ldrb	w1, [x0, #1]
  40b80c:	cbz	w1, 40b824 <ferror@plt+0x8d84>
  40b810:	add	x0, x0, #0x1
  40b814:	mov	w1, #0x1                   	// #1
  40b818:	bl	40ac24 <ferror@plt+0x8184>
  40b81c:	tst	w0, #0xff
  40b820:	b.eq	40b754 <ferror@plt+0x8cb4>  // b.none
  40b824:	add	x21, x21, #0xd68
  40b828:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40b82c:	add	x23, x23, #0xda0
  40b830:	ldr	x0, [x21, #8]
  40b834:	cmp	x0, #0x1
  40b838:	b.ne	40b92c <ferror@plt+0x8e8c>  // b.any
  40b83c:	ldr	x0, [x23, #8]
  40b840:	cmp	x0, #0x1
  40b844:	cset	w0, eq  // eq = none
  40b848:	str	w0, [sp, #112]
  40b84c:	ldr	w0, [sp, #112]
  40b850:	add	x26, x19, #0x90
  40b854:	adrp	x27, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b858:	mov	w20, #0x1                   	// #1
  40b85c:	str	w0, [sp, #116]
  40b860:	add	x0, x27, #0x3a1
  40b864:	str	x0, [sp, #120]
  40b868:	ldr	x0, [x19]
  40b86c:	cbz	x0, 40bad4 <ferror@plt+0x9034>
  40b870:	ldr	w1, [x0, #8]
  40b874:	cbnz	w1, 40bad4 <ferror@plt+0x9034>
  40b878:	ldr	x27, [x0, #32]
  40b87c:	cbz	x27, 40bab4 <ferror@plt+0x9014>
  40b880:	ldrb	w1, [x27]
  40b884:	cbz	w1, 40bab4 <ferror@plt+0x9014>
  40b888:	ldr	x7, [x0, #40]
  40b88c:	mov	x4, x27
  40b890:	ldr	x0, [x21]
  40b894:	ldrb	w25, [x0]
  40b898:	ldr	x0, [x23]
  40b89c:	ldrb	w2, [x0]
  40b8a0:	sub	x3, x7, x4
  40b8a4:	mov	x0, x4
  40b8a8:	mov	w1, w25
  40b8ac:	str	w2, [sp, #128]
  40b8b0:	str	x7, [sp, #136]
  40b8b4:	bl	4116b0 <ferror@plt+0xec10>
  40b8b8:	cmp	x0, #0x0
  40b8bc:	mov	x4, x0
  40b8c0:	ldr	w0, [sp, #116]
  40b8c4:	ldr	x7, [sp, #136]
  40b8c8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40b8cc:	b.eq	40b93c <ferror@plt+0x8e9c>  // b.none
  40b8d0:	ldrb	w0, [x4], #1
  40b8d4:	ldr	w2, [sp, #128]
  40b8d8:	cmp	w0, w2
  40b8dc:	b.ne	40b934 <ferror@plt+0x8e94>  // b.any
  40b8e0:	subs	w20, w20, #0x1
  40b8e4:	b.ne	40b8a0 <ferror@plt+0x8e00>  // b.any
  40b8e8:	ldr	w0, [sp, #112]
  40b8ec:	sub	x25, x4, x27
  40b8f0:	cbz	w0, 40b9f0 <ferror@plt+0x8f50>
  40b8f4:	cbz	w20, 40b99c <ferror@plt+0x8efc>
  40b8f8:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b8fc:	add	x3, x3, #0x3dc
  40b900:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b904:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b908:	add	x3, x3, #0x5
  40b90c:	add	x1, x1, #0x38c
  40b910:	add	x0, x0, #0x394
  40b914:	mov	w2, #0x3cd                 	// #973
  40b918:	bl	402a20 <__assert_fail@plt>
  40b91c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40b920:	add	x0, x0, #0x3dc
  40b924:	ldrb	w21, [x0, w1, uxtw]
  40b928:	b	40b764 <ferror@plt+0x8cc4>
  40b92c:	str	wzr, [sp, #112]
  40b930:	b	40b84c <ferror@plt+0x8dac>
  40b934:	adds	w20, w20, #0x1
  40b938:	b	40b8e4 <ferror@plt+0x8e44>
  40b93c:	cbnz	x4, 40b8e8 <ferror@plt+0x8e48>
  40b940:	ldp	x1, x0, [x26, #24]
  40b944:	sub	x2, x7, x27
  40b948:	sub	x0, x0, x1
  40b94c:	cmp	x2, x0
  40b950:	b.ls	40b968 <ferror@plt+0x8ec8>  // b.plast
  40b954:	mov	x1, x2
  40b958:	mov	x0, x26
  40b95c:	str	x2, [sp, #128]
  40b960:	bl	414990 <_obstack_newchunk@@Base>
  40b964:	ldr	x2, [sp, #128]
  40b968:	mov	x1, x27
  40b96c:	ldr	x0, [x26, #24]
  40b970:	str	x2, [sp, #128]
  40b974:	bl	402420 <memcpy@plt>
  40b978:	ldr	x1, [x19]
  40b97c:	ldr	x0, [x26, #24]
  40b980:	ldr	x2, [sp, #128]
  40b984:	add	x0, x0, x2
  40b988:	str	x0, [x26, #24]
  40b98c:	ldr	x0, [x1, #32]
  40b990:	add	x2, x0, x2
  40b994:	str	x2, [x1, #32]
  40b998:	b	40b868 <ferror@plt+0x8dc8>
  40b99c:	add	x0, x19, #0x90
  40b9a0:	sub	x20, x25, #0x1
  40b9a4:	ldp	x2, x1, [x0, #24]
  40b9a8:	sub	x1, x1, x2
  40b9ac:	cmp	x20, x1
  40b9b0:	b.ls	40b9bc <ferror@plt+0x8f1c>  // b.plast
  40b9b4:	mov	x1, x20
  40b9b8:	bl	414990 <_obstack_newchunk@@Base>
  40b9bc:	ldr	x0, [x19, #168]
  40b9c0:	mov	x2, x20
  40b9c4:	mov	x1, x27
  40b9c8:	bl	402420 <memcpy@plt>
  40b9cc:	ldr	x0, [sp, #104]
  40b9d0:	ldr	x2, [x19, #168]
  40b9d4:	ldr	x1, [x0, #2160]
  40b9d8:	add	x2, x2, x20
  40b9dc:	str	x2, [x19, #168]
  40b9e0:	ldr	x0, [x1, #32]
  40b9e4:	add	x3, x0, x25
  40b9e8:	str	x3, [x1, #32]
  40b9ec:	b	40b5e8 <ferror@plt+0x8b48>
  40b9f0:	ldp	x1, x0, [x26, #24]
  40b9f4:	sub	x0, x0, x1
  40b9f8:	cmp	x25, x0
  40b9fc:	b.ls	40ba14 <ferror@plt+0x8f74>  // b.plast
  40ba00:	mov	x1, x25
  40ba04:	mov	x0, x26
  40ba08:	str	x4, [sp, #128]
  40ba0c:	bl	414990 <_obstack_newchunk@@Base>
  40ba10:	ldr	x4, [sp, #128]
  40ba14:	mov	x1, x27
  40ba18:	ldr	x0, [x26, #24]
  40ba1c:	mov	x2, x25
  40ba20:	str	x4, [sp, #128]
  40ba24:	bl	402420 <memcpy@plt>
  40ba28:	ldr	x1, [x19]
  40ba2c:	add	x3, x25, #0x1
  40ba30:	ldr	x0, [x26, #24]
  40ba34:	ldr	x4, [sp, #128]
  40ba38:	add	x0, x0, x25
  40ba3c:	str	x0, [x26, #24]
  40ba40:	ldr	x0, [x1, #32]
  40ba44:	ldrb	w27, [x4]
  40ba48:	add	x3, x0, x3
  40ba4c:	str	x3, [x1, #32]
  40ba50:	ldr	x0, [x23]
  40ba54:	ldrb	w1, [x0]
  40ba58:	cmp	w1, w27
  40ba5c:	b.ne	40bb14 <ferror@plt+0x9074>  // b.any
  40ba60:	cbz	w27, 40bb14 <ferror@plt+0x9074>
  40ba64:	ldrb	w1, [x0, #1]
  40ba68:	cbnz	w1, 40bb00 <ferror@plt+0x9060>
  40ba6c:	subs	w20, w20, #0x1
  40ba70:	ldp	x1, x0, [x26, #24]
  40ba74:	b.eq	40b5e8 <ferror@plt+0x8b48>  // b.none
  40ba78:	ldr	x27, [x23, #8]
  40ba7c:	sub	x0, x0, x1
  40ba80:	cmp	x27, x0
  40ba84:	b.ls	40ba94 <ferror@plt+0x8ff4>  // b.plast
  40ba88:	mov	x1, x27
  40ba8c:	mov	x0, x26
  40ba90:	bl	414990 <_obstack_newchunk@@Base>
  40ba94:	ldr	x1, [x23]
  40ba98:	mov	x2, x27
  40ba9c:	ldr	x0, [x26, #24]
  40baa0:	bl	402420 <memcpy@plt>
  40baa4:	ldr	x0, [x26, #24]
  40baa8:	add	x2, x0, x27
  40baac:	str	x2, [x26, #24]
  40bab0:	b	40b868 <ferror@plt+0x8dc8>
  40bab4:	ldrb	w1, [x27]
  40bab8:	cbz	w1, 40bad4 <ferror@plt+0x9034>
  40babc:	ldrb	w1, [x19, #32]
  40bac0:	cbnz	w1, 40bad4 <ferror@plt+0x9034>
  40bac4:	add	x1, x27, #0x1
  40bac8:	str	x1, [x0, #32]
  40bacc:	ldrb	w27, [x27]
  40bad0:	b	40ba50 <ferror@plt+0x8fb0>
  40bad4:	bl	40a590 <ferror@plt+0x7af0>
  40bad8:	mov	w27, w0
  40badc:	cmp	w0, #0x100
  40bae0:	b.ne	40ba50 <ferror@plt+0x8fb0>  // b.any
  40bae4:	ldr	w3, [x22]
  40bae8:	mov	x2, x28
  40baec:	ldr	x4, [sp, #120]
  40baf0:	mov	w1, #0x0                   	// #0
  40baf4:	mov	w0, #0x1                   	// #1
  40baf8:	bl	403538 <ferror@plt+0xa98>
  40bafc:	b	40ba50 <ferror@plt+0x8fb0>
  40bb00:	add	x0, x0, #0x1
  40bb04:	mov	w1, #0x1                   	// #1
  40bb08:	bl	40ac24 <ferror@plt+0x8184>
  40bb0c:	tst	w0, #0xff
  40bb10:	b.ne	40ba6c <ferror@plt+0x8fcc>  // b.any
  40bb14:	ldr	x0, [x21]
  40bb18:	ldrb	w1, [x0]
  40bb1c:	cmp	w1, w27
  40bb20:	b.ne	40bb74 <ferror@plt+0x90d4>  // b.any
  40bb24:	cbz	w27, 40bb74 <ferror@plt+0x90d4>
  40bb28:	ldrb	w1, [x0, #1]
  40bb2c:	cbnz	w1, 40bb60 <ferror@plt+0x90c0>
  40bb30:	ldp	x1, x0, [x26, #24]
  40bb34:	add	w20, w20, #0x1
  40bb38:	ldr	x27, [x21, #8]
  40bb3c:	sub	x0, x0, x1
  40bb40:	cmp	x27, x0
  40bb44:	b.ls	40bb54 <ferror@plt+0x90b4>  // b.plast
  40bb48:	mov	x1, x27
  40bb4c:	mov	x0, x26
  40bb50:	bl	414990 <_obstack_newchunk@@Base>
  40bb54:	mov	x2, x27
  40bb58:	ldr	x1, [x21]
  40bb5c:	b	40ba9c <ferror@plt+0x8ffc>
  40bb60:	add	x0, x0, #0x1
  40bb64:	mov	w1, #0x1                   	// #1
  40bb68:	bl	40ac24 <ferror@plt+0x8184>
  40bb6c:	tst	w0, #0xff
  40bb70:	b.ne	40bb30 <ferror@plt+0x9090>  // b.any
  40bb74:	ldp	x0, x1, [x26, #24]
  40bb78:	cmp	x1, x0
  40bb7c:	b.ne	40bb8c <ferror@plt+0x90ec>  // b.any
  40bb80:	mov	x0, x26
  40bb84:	mov	x1, #0x1                   	// #1
  40bb88:	bl	414990 <_obstack_newchunk@@Base>
  40bb8c:	ldr	x0, [x26, #24]
  40bb90:	add	x1, x0, #0x1
  40bb94:	str	x1, [x26, #24]
  40bb98:	strb	w27, [x0]
  40bb9c:	b	40b868 <ferror@plt+0x8dc8>
  40bba0:	stp	x29, x30, [sp, #-32]!
  40bba4:	mov	x29, sp
  40bba8:	str	x19, [sp, #16]
  40bbac:	bl	40a6a8 <ferror@plt+0x7c08>
  40bbb0:	cmp	w0, #0x100
  40bbb4:	b.eq	40bc80 <ferror@plt+0x91e0>  // b.none
  40bbb8:	mov	w19, w0
  40bbbc:	cmp	w0, #0x101
  40bbc0:	b.eq	40bc88 <ferror@plt+0x91e8>  // b.none
  40bbc4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40bbc8:	ldr	x0, [x0, #3456]
  40bbcc:	ldrb	w1, [x0]
  40bbd0:	cmp	w1, w19
  40bbd4:	b.eq	40bbf0 <ferror@plt+0x9150>  // b.none
  40bbd8:	bl	402870 <__ctype_b_loc@plt>
  40bbdc:	ldr	x0, [x0]
  40bbe0:	ldrh	w0, [x0, w19, sxtw #1]
  40bbe4:	tbz	w0, #10, 40bc20 <ferror@plt+0x9180>
  40bbe8:	mov	w0, #0x2                   	// #2
  40bbec:	b	40bc00 <ferror@plt+0x9160>
  40bbf0:	cbz	w19, 40bbd8 <ferror@plt+0x9138>
  40bbf4:	ldrb	w1, [x0, #1]
  40bbf8:	cbnz	w1, 40bc0c <ferror@plt+0x916c>
  40bbfc:	mov	w0, #0x1                   	// #1
  40bc00:	ldr	x19, [sp, #16]
  40bc04:	ldp	x29, x30, [sp], #32
  40bc08:	ret
  40bc0c:	mov	w1, #0x0                   	// #0
  40bc10:	bl	40ac24 <ferror@plt+0x8184>
  40bc14:	tst	w0, #0xff
  40bc18:	b.ne	40bbfc <ferror@plt+0x915c>  // b.any
  40bc1c:	b	40bbd8 <ferror@plt+0x9138>
  40bc20:	cmp	w19, #0x5f
  40bc24:	b.eq	40bbe8 <ferror@plt+0x9148>  // b.none
  40bc28:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40bc2c:	ldr	x0, [x0, #3432]
  40bc30:	ldrb	w1, [x0]
  40bc34:	cmp	w1, w19
  40bc38:	b.eq	40bc50 <ferror@plt+0x91b0>  // b.none
  40bc3c:	sub	w19, w19, #0x28
  40bc40:	cmp	w19, #0x4
  40bc44:	b.ls	40bc70 <ferror@plt+0x91d0>  // b.plast
  40bc48:	mov	w0, #0x6                   	// #6
  40bc4c:	b	40bc00 <ferror@plt+0x9160>
  40bc50:	cbz	w19, 40bc3c <ferror@plt+0x919c>
  40bc54:	ldrb	w1, [x0, #1]
  40bc58:	cbz	w1, 40bbfc <ferror@plt+0x915c>
  40bc5c:	mov	w1, #0x0                   	// #0
  40bc60:	bl	40ac24 <ferror@plt+0x8184>
  40bc64:	tst	w0, #0xff
  40bc68:	b.ne	40bbfc <ferror@plt+0x915c>  // b.any
  40bc6c:	b	40bc3c <ferror@plt+0x919c>
  40bc70:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40bc74:	add	x0, x0, #0x3dc
  40bc78:	ldrb	w0, [x0, w19, uxtw]
  40bc7c:	b	40bc00 <ferror@plt+0x9160>
  40bc80:	mov	w0, #0x0                   	// #0
  40bc84:	b	40bc00 <ferror@plt+0x9160>
  40bc88:	mov	w0, #0x7                   	// #7
  40bc8c:	b	40bc00 <ferror@plt+0x9160>
  40bc90:	mov	x4, x0
  40bc94:	mov	x0, x3
  40bc98:	ldr	w3, [x4, #24]
  40bc9c:	cmp	w3, #0x1
  40bca0:	b.eq	40bcb8 <ferror@plt+0x9218>  // b.none
  40bca4:	cmp	w3, #0x2
  40bca8:	b.ne	40bcc8 <ferror@plt+0x9228>  // b.any
  40bcac:	ldr	x3, [x4, #32]
  40bcb0:	mov	x16, x3
  40bcb4:	br	x16
  40bcb8:	mov	x3, x2
  40bcbc:	mov	w2, w1
  40bcc0:	mov	x1, x4
  40bcc4:	b	4074ec <ferror@plt+0x4a4c>
  40bcc8:	stp	x29, x30, [sp, #-16]!
  40bccc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40bcd0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40bcd4:	mov	x29, sp
  40bcd8:	ldr	w0, [x0, #1660]
  40bcdc:	add	x2, x2, #0x3ec
  40bce0:	mov	w1, #0x0                   	// #0
  40bce4:	bl	403488 <ferror@plt+0x9e8>
  40bce8:	bl	4027d0 <abort@plt>
  40bcec:	stp	x29, x30, [sp, #-288]!
  40bcf0:	cmp	w1, #0x7
  40bcf4:	mov	x29, sp
  40bcf8:	stp	x19, x20, [sp, #16]
  40bcfc:	stp	x21, x22, [sp, #32]
  40bd00:	stp	x23, x24, [sp, #48]
  40bd04:	stp	x25, x26, [sp, #64]
  40bd08:	stp	x27, x28, [sp, #80]
  40bd0c:	b.hi	40c310 <ferror@plt+0x9870>  // b.pmore
  40bd10:	mov	x21, x0
  40bd14:	mov	x19, x2
  40bd18:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40bd1c:	mov	w22, w3
  40bd20:	add	x0, x0, #0x4e0
  40bd24:	ldrb	w0, [x0, w1, uxtw]
  40bd28:	adr	x1, 40bd34 <ferror@plt+0x9294>
  40bd2c:	add	x0, x1, w0, sxtb #2
  40bd30:	br	x0
  40bd34:	ldr	x0, [x2]
  40bd38:	mov	w1, #0x0                   	// #0
  40bd3c:	bl	40df50 <ferror@plt+0xb4b0>
  40bd40:	mov	x20, x0
  40bd44:	cbnz	x0, 40bd84 <ferror@plt+0x92e4>
  40bd48:	ldr	x19, [x19]
  40bd4c:	mov	x0, x19
  40bd50:	bl	402450 <strlen@plt>
  40bd54:	mov	w3, w22
  40bd58:	mov	w2, w0
  40bd5c:	mov	x1, x19
  40bd60:	mov	x0, x21
  40bd64:	bl	40ccec <ferror@plt+0xa24c>
  40bd68:	ldp	x19, x20, [sp, #16]
  40bd6c:	ldp	x21, x22, [sp, #32]
  40bd70:	ldp	x23, x24, [sp, #48]
  40bd74:	ldp	x25, x26, [sp, #64]
  40bd78:	ldp	x27, x28, [sp, #80]
  40bd7c:	ldp	x29, x30, [sp], #288
  40bd80:	ret
  40bd84:	ldr	w0, [x0, #24]
  40bd88:	cbz	w0, 40bd48 <ferror@plt+0x92a8>
  40bd8c:	cmp	w0, #0x2
  40bd90:	b.ne	40bda8 <ferror@plt+0x9308>  // b.any
  40bd94:	ldrb	w0, [x20, #8]
  40bd98:	tbz	w0, #3, 40bda8 <ferror@plt+0x9308>
  40bd9c:	bl	40bba0 <ferror@plt+0x9100>
  40bda0:	cmp	w0, #0x3
  40bda4:	b.ne	40bd48 <ferror@plt+0x92a8>  // b.any
  40bda8:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40bdac:	adrp	x24, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40bdb0:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40bdb4:	add	x19, x19, #0x960
  40bdb8:	ldr	x0, [x23, #3448]
  40bdbc:	str	x0, [sp, #112]
  40bdc0:	ldr	w0, [x24, #3424]
  40bdc4:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40bdc8:	str	w0, [sp, #124]
  40bdcc:	ldr	w0, [x20, #12]
  40bdd0:	ldr	w3, [x1, #864]
  40bdd4:	add	w0, w0, #0x1
  40bdd8:	str	w0, [x20, #12]
  40bddc:	ldr	w0, [x19, #88]
  40bde0:	cmp	w3, #0x0
  40bde4:	str	x23, [sp, #96]
  40bde8:	add	w0, w0, #0x1
  40bdec:	str	w0, [x19, #88]
  40bdf0:	b.le	40be10 <ferror@plt+0x9370>
  40bdf4:	cmp	w0, w3
  40bdf8:	b.le	40be10 <ferror@plt+0x9370>
  40bdfc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40be00:	mov	w1, #0x0                   	// #0
  40be04:	add	x2, x2, #0x41d
  40be08:	mov	w0, #0x1                   	// #1
  40be0c:	bl	403488 <ferror@plt+0x9e8>
  40be10:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40be14:	ldr	w25, [x19, #92]
  40be18:	mov	x27, x0
  40be1c:	ldr	w1, [x0, #1676]
  40be20:	add	w25, w25, #0x1
  40be24:	str	w25, [x19, #92]
  40be28:	tbnz	w1, #3, 40c064 <ferror@plt+0x95c4>
  40be2c:	ldrb	w22, [x20, #8]
  40be30:	and	w22, w22, #0x1
  40be34:	ldp	x0, x21, [x19, #112]
  40be38:	ldr	x1, [x19, #24]
  40be3c:	sub	x0, x21, x0
  40be40:	str	x0, [sp, #104]
  40be44:	ldr	x0, [x19, #16]
  40be48:	cmp	x1, x0
  40be4c:	b.eq	40c31c <ferror@plt+0x987c>  // b.none
  40be50:	add	x0, sp, #0xc8
  40be54:	adrp	x4, 402000 <mbrtowc@plt-0x410>
  40be58:	adrp	x3, 413000 <ferror@plt+0x10560>
  40be5c:	add	x4, x4, #0x8c0
  40be60:	add	x3, x3, #0xd0c
  40be64:	mov	x2, #0x0                   	// #0
  40be68:	mov	x1, #0x0                   	// #0
  40be6c:	mov	w26, #0x0                   	// #0
  40be70:	bl	414964 <_obstack_begin@@Base>
  40be74:	cbz	w22, 40c06c <ferror@plt+0x95cc>
  40be78:	ldr	w0, [x27, #1676]
  40be7c:	tbz	w0, #7, 40be8c <ferror@plt+0x93ec>
  40be80:	ldr	x0, [x20, #16]
  40be84:	mov	w1, w25
  40be88:	bl	407f8c <ferror@plt+0x54ec>
  40be8c:	cmp	w26, #0x0
  40be90:	add	x5, sp, #0xc8
  40be94:	csel	x21, x5, x19, eq  // eq = none
  40be98:	ldrb	w0, [x20, #8]
  40be9c:	ldr	x1, [x21, #24]
  40bea0:	ubfx	x0, x0, #2, #1
  40bea4:	str	x0, [sp, #128]
  40bea8:	mov	w0, #0x1                   	// #1
  40beac:	str	w0, [sp, #168]
  40beb0:	ldr	x0, [x20, #16]
  40beb4:	str	x0, [sp, #176]
  40beb8:	ldr	x0, [x21, #32]
  40bebc:	sub	x0, x0, x1
  40bec0:	cmp	x0, #0xf
  40bec4:	b.hi	40bed4 <ferror@plt+0x9434>  // b.pmore
  40bec8:	mov	x0, x21
  40becc:	mov	x1, #0x10                  	// #16
  40bed0:	bl	414990 <_obstack_newchunk@@Base>
  40bed4:	ldr	x0, [x21, #24]
  40bed8:	ldp	x2, x3, [sp, #168]
  40bedc:	stp	x2, x3, [x0]
  40bee0:	ldp	x27, x1, [x21, #16]
  40bee4:	add	x1, x1, #0x10
  40bee8:	cmp	x1, x27
  40beec:	b.ne	40befc <ferror@plt+0x945c>  // b.any
  40bef0:	ldrb	w0, [x21, #80]
  40bef4:	orr	w0, w0, #0x2
  40bef8:	strb	w0, [x21, #80]
  40befc:	ldr	x0, [x21, #48]
  40bf00:	ldr	x2, [x21, #32]
  40bf04:	add	x1, x1, x0
  40bf08:	bic	x0, x1, x0
  40bf0c:	ldr	x1, [x21, #8]
  40bf10:	sub	x3, x0, x1
  40bf14:	sub	x1, x2, x1
  40bf18:	cmp	x3, x1
  40bf1c:	csel	x0, x0, x2, ls  // ls = plast
  40bf20:	stp	x0, x0, [x21, #16]
  40bf24:	add	x0, x19, #0x60
  40bf28:	ldp	x2, x1, [x0, #24]
  40bf2c:	sub	x1, x1, x2
  40bf30:	cmp	x1, #0x7
  40bf34:	b.hi	40bf40 <ferror@plt+0x94a0>  // b.pmore
  40bf38:	mov	x1, #0x8                   	// #8
  40bf3c:	bl	414990 <_obstack_newchunk@@Base>
  40bf40:	ldr	x1, [x19, #120]
  40bf44:	str	x27, [x1]
  40bf48:	ldr	x1, [x19, #120]
  40bf4c:	add	x1, x1, #0x8
  40bf50:	str	x1, [x19, #120]
  40bf54:	bl	40bba0 <ferror@plt+0x9100>
  40bf58:	cmp	w0, #0x3
  40bf5c:	b.eq	40c074 <ferror@plt+0x95d4>  // b.none
  40bf60:	ldp	x28, x27, [x19, #112]
  40bf64:	ldr	w0, [sp, #104]
  40bf68:	sub	x27, x27, x28
  40bf6c:	add	x21, x28, w0, uxtw
  40bf70:	sub	x27, x27, w0, uxtw
  40bf74:	ldp	x0, x1, [sp, #96]
  40bf78:	lsr	x27, x27, #3
  40bf7c:	ldr	x23, [x0, #3448]
  40bf80:	and	x1, x1, #0xffffffff
  40bf84:	ldr	w0, [x24, #3424]
  40bf88:	str	w0, [sp, #104]
  40bf8c:	ldr	x0, [sp, #96]
  40bf90:	str	x1, [sp, #128]
  40bf94:	ldr	x1, [sp, #112]
  40bf98:	str	x1, [x0, #3448]
  40bf9c:	ldr	w0, [sp, #124]
  40bfa0:	str	w0, [x24, #3424]
  40bfa4:	cbz	w22, 40bfbc <ferror@plt+0x951c>
  40bfa8:	ldr	x0, [x20, #16]
  40bfac:	mov	x3, x21
  40bfb0:	mov	w2, w27
  40bfb4:	mov	w1, w25
  40bfb8:	bl	407fc0 <ferror@plt+0x5520>
  40bfbc:	bl	40aa48 <ferror@plt+0x7fa8>
  40bfc0:	mov	x3, x0
  40bfc4:	mov	x2, x21
  40bfc8:	mov	w1, w27
  40bfcc:	mov	x0, x20
  40bfd0:	bl	40bc90 <ferror@plt+0x91f0>
  40bfd4:	bl	40ab14 <ferror@plt+0x8074>
  40bfd8:	mov	x3, x0
  40bfdc:	cbz	w22, 40bff0 <ferror@plt+0x9550>
  40bfe0:	ldr	x0, [x20, #16]
  40bfe4:	mov	w2, w27
  40bfe8:	mov	w1, w25
  40bfec:	bl	408100 <ferror@plt+0x5660>
  40bff0:	ldr	x0, [sp, #96]
  40bff4:	str	x23, [x0, #3448]
  40bff8:	ldr	w0, [sp, #104]
  40bffc:	str	w0, [x24, #3424]
  40c000:	ldr	w0, [x19, #88]
  40c004:	sub	w0, w0, #0x1
  40c008:	str	w0, [x19, #88]
  40c00c:	ldr	w0, [x20, #12]
  40c010:	sub	w0, w0, #0x1
  40c014:	str	w0, [x20, #12]
  40c018:	ldrb	w0, [x20, #8]
  40c01c:	tbz	w0, #4, 40c028 <ferror@plt+0x9588>
  40c020:	mov	x0, x20
  40c024:	bl	40def0 <ferror@plt+0xb450>
  40c028:	cbz	w26, 40c304 <ferror@plt+0x9864>
  40c02c:	ldr	x0, [sp, #128]
  40c030:	ldr	x1, [x28, x0]
  40c034:	ldr	x0, [x19, #8]
  40c038:	cmp	x1, x0
  40c03c:	b.ls	40c2f8 <ferror@plt+0x9858>  // b.plast
  40c040:	ldr	x0, [x19, #32]
  40c044:	cmp	x1, x0
  40c048:	b.cs	40c2f8 <ferror@plt+0x9858>  // b.hs, b.nlast
  40c04c:	stp	x1, x1, [x19, #16]
  40c050:	neg	w27, w27
  40c054:	ldr	x0, [x19, #120]
  40c058:	add	x27, x0, w27, sxtw #3
  40c05c:	str	x27, [x19, #120]
  40c060:	b	40bd68 <ferror@plt+0x92c8>
  40c064:	mov	w22, #0x1                   	// #1
  40c068:	b	40be34 <ferror@plt+0x9394>
  40c06c:	add	x21, sp, #0xc8
  40c070:	b	40be98 <ferror@plt+0x93f8>
  40c074:	add	x0, sp, #0xa8
  40c078:	mov	x1, #0x0                   	// #0
  40c07c:	bl	40b390 <ferror@plt+0x88f0>
  40c080:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c084:	add	x0, x0, #0x4e8
  40c088:	str	x0, [sp, #144]
  40c08c:	ldr	x0, [sp, #96]
  40c090:	str	wzr, [sp, #168]
  40c094:	ldr	x0, [x0, #3448]
  40c098:	str	x0, [sp, #136]
  40c09c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40c0a0:	add	x0, x0, #0xd60
  40c0a4:	ldr	w28, [x0]
  40c0a8:	add	x0, sp, #0xb8
  40c0ac:	mov	x1, #0x0                   	// #0
  40c0b0:	bl	40b390 <ferror@plt+0x88f0>
  40c0b4:	mov	w23, w0
  40c0b8:	cmp	w0, #0x6
  40c0bc:	b.eq	40c0ec <ferror@plt+0x964c>  // b.none
  40c0c0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c0c4:	mov	w27, #0x0                   	// #0
  40c0c8:	add	x0, x0, #0x454
  40c0cc:	str	x0, [sp, #152]
  40c0d0:	cmp	w23, #0x7
  40c0d4:	b.hi	40c2dc <ferror@plt+0x983c>  // b.pmore
  40c0d8:	ldr	x0, [sp, #144]
  40c0dc:	ldrb	w0, [x0, w23, uxtw]
  40c0e0:	adr	x1, 40c0ec <ferror@plt+0x964c>
  40c0e4:	add	x0, x1, w0, sxtb #2
  40c0e8:	br	x0
  40c0ec:	bl	402870 <__ctype_b_loc@plt>
  40c0f0:	ldr	x1, [sp, #192]
  40c0f4:	ldr	x0, [x0]
  40c0f8:	ldrb	w1, [x1]
  40c0fc:	ldrh	w0, [x0, x1, lsl #1]
  40c100:	tbnz	w0, #13, 40c0a8 <ferror@plt+0x9608>
  40c104:	b	40c0c0 <ferror@plt+0x9620>
  40c108:	cbnz	w27, 40c254 <ferror@plt+0x97b4>
  40c10c:	ldp	x0, x1, [x21, #24]
  40c110:	cmp	x1, x0
  40c114:	b.ne	40c124 <ferror@plt+0x9684>  // b.any
  40c118:	mov	x0, x21
  40c11c:	mov	x1, #0x1                   	// #1
  40c120:	bl	414990 <_obstack_newchunk@@Base>
  40c124:	ldr	x0, [x21, #24]
  40c128:	add	x1, x0, #0x1
  40c12c:	str	x1, [x21, #24]
  40c130:	strb	wzr, [x0]
  40c134:	ldp	x3, x1, [x21, #16]
  40c138:	cmp	x3, x1
  40c13c:	b.ne	40c14c <ferror@plt+0x96ac>  // b.any
  40c140:	ldrb	w0, [x21, #80]
  40c144:	orr	w0, w0, #0x2
  40c148:	strb	w0, [x21, #80]
  40c14c:	ldr	x0, [x21, #48]
  40c150:	ldr	x2, [x21, #8]
  40c154:	add	x1, x1, x0
  40c158:	bic	x0, x1, x0
  40c15c:	ldr	x1, [x21, #32]
  40c160:	sub	x6, x0, x2
  40c164:	sub	x2, x1, x2
  40c168:	cmp	x6, x2
  40c16c:	ldr	w2, [sp, #168]
  40c170:	csel	x0, x0, x1, ls  // ls = plast
  40c174:	stp	x0, x0, [x21, #16]
  40c178:	cbnz	w2, 40c188 <ferror@plt+0x96e8>
  40c17c:	mov	w2, #0x1                   	// #1
  40c180:	str	w2, [sp, #168]
  40c184:	str	x3, [sp, #176]
  40c188:	ldr	w2, [sp, #128]
  40c18c:	cbnz	w2, 40c1b0 <ferror@plt+0x9710>
  40c190:	ldr	w2, [sp, #168]
  40c194:	cmp	w2, #0x2
  40c198:	b.ne	40c1b0 <ferror@plt+0x9710>  // b.any
  40c19c:	mov	w2, #0x1                   	// #1
  40c1a0:	str	w2, [sp, #168]
  40c1a4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40c1a8:	add	x2, x2, #0x3df
  40c1ac:	str	x2, [sp, #176]
  40c1b0:	sub	x0, x1, x0
  40c1b4:	cmp	x0, #0xf
  40c1b8:	b.hi	40c1c8 <ferror@plt+0x9728>  // b.pmore
  40c1bc:	mov	x0, x21
  40c1c0:	mov	x1, #0x10                  	// #16
  40c1c4:	bl	414990 <_obstack_newchunk@@Base>
  40c1c8:	ldr	x0, [x21, #24]
  40c1cc:	ldp	x2, x3, [sp, #168]
  40c1d0:	stp	x2, x3, [x0]
  40c1d4:	ldp	x27, x1, [x21, #16]
  40c1d8:	add	x1, x1, #0x10
  40c1dc:	cmp	x1, x27
  40c1e0:	b.ne	40c1f0 <ferror@plt+0x9750>  // b.any
  40c1e4:	ldrb	w0, [x21, #80]
  40c1e8:	orr	w0, w0, #0x2
  40c1ec:	strb	w0, [x21, #80]
  40c1f0:	ldr	x0, [x21, #48]
  40c1f4:	ldr	x2, [x21, #32]
  40c1f8:	add	x1, x1, x0
  40c1fc:	bic	x0, x1, x0
  40c200:	ldr	x1, [x21, #8]
  40c204:	sub	x3, x0, x1
  40c208:	sub	x1, x2, x1
  40c20c:	cmp	x3, x1
  40c210:	csel	x0, x0, x2, ls  // ls = plast
  40c214:	stp	x0, x0, [x21, #16]
  40c218:	add	x0, x19, #0x60
  40c21c:	ldp	x2, x1, [x0, #24]
  40c220:	sub	x1, x1, x2
  40c224:	cmp	x1, #0x7
  40c228:	b.hi	40c234 <ferror@plt+0x9794>  // b.pmore
  40c22c:	mov	x1, #0x8                   	// #8
  40c230:	bl	414990 <_obstack_newchunk@@Base>
  40c234:	ldr	x1, [x19, #120]
  40c238:	cmp	w23, #0x4
  40c23c:	str	x27, [x1]
  40c240:	ldr	x1, [x19, #120]
  40c244:	add	x1, x1, #0x8
  40c248:	str	x1, [x19, #120]
  40c24c:	b.eq	40c08c <ferror@plt+0x95ec>  // b.none
  40c250:	b	40bf60 <ferror@plt+0x94c0>
  40c254:	ldr	x0, [sp, #192]
  40c258:	ldrb	w0, [x0]
  40c25c:	cmp	w0, #0x28
  40c260:	b.ne	40c280 <ferror@plt+0x97e0>  // b.any
  40c264:	add	w27, w27, #0x1
  40c268:	mov	w3, w28
  40c26c:	add	x2, sp, #0xc0
  40c270:	mov	w1, w23
  40c274:	mov	x0, x21
  40c278:	bl	40bcec <ferror@plt+0x924c>
  40c27c:	b	40c2a8 <ferror@plt+0x9808>
  40c280:	cmp	w0, #0x29
  40c284:	cset	w0, eq  // eq = none
  40c288:	sub	w27, w27, w0
  40c28c:	b	40c268 <ferror@plt+0x97c8>
  40c290:	ldr	x2, [sp, #136]
  40c294:	mov	w3, w28
  40c298:	ldr	x4, [sp, #152]
  40c29c:	mov	w1, #0x0                   	// #0
  40c2a0:	mov	w0, #0x1                   	// #1
  40c2a4:	bl	403538 <ferror@plt+0xa98>
  40c2a8:	add	x0, sp, #0xb8
  40c2ac:	mov	x1, #0x0                   	// #0
  40c2b0:	bl	40b390 <ferror@plt+0x88f0>
  40c2b4:	mov	w23, w0
  40c2b8:	b	40c0d0 <ferror@plt+0x9630>
  40c2bc:	ldp	x0, x1, [x21, #16]
  40c2c0:	cmp	x1, x0
  40c2c4:	b.ne	40c2a8 <ferror@plt+0x9808>  // b.any
  40c2c8:	mov	w0, #0x2                   	// #2
  40c2cc:	str	w0, [sp, #168]
  40c2d0:	ldr	x0, [sp, #192]
  40c2d4:	str	x0, [sp, #176]
  40c2d8:	b	40c2a8 <ferror@plt+0x9808>
  40c2dc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c2e0:	add	x2, x2, #0x478
  40c2e4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c2e8:	mov	w1, #0x0                   	// #0
  40c2ec:	ldr	w0, [x0, #1660]
  40c2f0:	bl	403488 <ferror@plt+0x9e8>
  40c2f4:	bl	4027d0 <abort@plt>
  40c2f8:	mov	x0, x19
  40c2fc:	bl	414ad0 <_obstack_free@@Base>
  40c300:	b	40c050 <ferror@plt+0x95b0>
  40c304:	add	x0, sp, #0xc8
  40c308:	mov	x1, #0x0                   	// #0
  40c30c:	b	40c2fc <ferror@plt+0x985c>
  40c310:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c314:	add	x2, x2, #0x4ad
  40c318:	b	40c2e4 <ferror@plt+0x9844>
  40c31c:	mov	w26, #0x1                   	// #1
  40c320:	cbnz	w22, 40be78 <ferror@plt+0x93d8>
  40c324:	mov	x21, x19
  40c328:	b	40be98 <ferror@plt+0x93f8>
  40c32c:	stp	x29, x30, [sp, #-80]!
  40c330:	mov	x2, #0x0                   	// #0
  40c334:	mov	x1, #0x0                   	// #0
  40c338:	mov	x29, sp
  40c33c:	stp	x19, x20, [sp, #16]
  40c340:	adrp	x20, 413000 <ferror@plt+0x10560>
  40c344:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c348:	add	x20, x20, #0xd0c
  40c34c:	add	x19, x19, #0x960
  40c350:	str	x21, [sp, #32]
  40c354:	adrp	x21, 402000 <mbrtowc@plt-0x410>
  40c358:	add	x21, x21, #0x8c0
  40c35c:	mov	x3, x20
  40c360:	mov	x4, x21
  40c364:	mov	x0, x19
  40c368:	bl	414964 <_obstack_begin@@Base>
  40c36c:	mov	x3, x20
  40c370:	add	x20, sp, #0x48
  40c374:	mov	x4, x21
  40c378:	add	x0, x19, #0x60
  40c37c:	mov	x2, #0x0                   	// #0
  40c380:	mov	x1, #0x0                   	// #0
  40c384:	bl	414964 <_obstack_begin@@Base>
  40c388:	add	x1, sp, #0x3c
  40c38c:	add	x0, sp, #0x40
  40c390:	bl	40b390 <ferror@plt+0x88f0>
  40c394:	mov	w1, w0
  40c398:	cbnz	w0, 40c3c4 <ferror@plt+0x9924>
  40c39c:	mov	x0, x19
  40c3a0:	mov	x1, #0x0                   	// #0
  40c3a4:	bl	414ad0 <_obstack_free@@Base>
  40c3a8:	add	x0, x19, #0x60
  40c3ac:	mov	x1, #0x0                   	// #0
  40c3b0:	bl	414ad0 <_obstack_free@@Base>
  40c3b4:	ldp	x19, x20, [sp, #16]
  40c3b8:	ldr	x21, [sp, #32]
  40c3bc:	ldp	x29, x30, [sp], #80
  40c3c0:	ret
  40c3c4:	ldr	w3, [sp, #60]
  40c3c8:	mov	x2, x20
  40c3cc:	mov	x0, #0x0                   	// #0
  40c3d0:	bl	40bcec <ferror@plt+0x924c>
  40c3d4:	b	40c388 <ferror@plt+0x98e8>
  40c3d8:	ldr	w2, [x0, #8]
  40c3dc:	ldr	w0, [x1, #8]
  40c3e0:	sub	w0, w2, w0
  40c3e4:	ret
  40c3e8:	ldr	w2, [x0, #8]
  40c3ec:	ldr	w0, [x1]
  40c3f0:	cmp	w2, w0
  40c3f4:	cset	w0, ge  // ge = tcont
  40c3f8:	ret
  40c3fc:	stp	x29, x30, [sp, #-48]!
  40c400:	mov	x29, sp
  40c404:	stp	x19, x20, [sp, #16]
  40c408:	mov	w20, w1
  40c40c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c410:	stp	x21, x22, [sp, #32]
  40c414:	mov	x22, x0
  40c418:	ldr	w0, [x1, #2584]
  40c41c:	cmp	w0, w20
  40c420:	b.eq	40c484 <ferror@plt+0x99e4>  // b.none
  40c424:	add	x19, x1, #0xa18
  40c428:	ldr	w2, [x19, #4]
  40c42c:	cmp	w2, w20
  40c430:	b.eq	40c484 <ferror@plt+0x99e4>  // b.none
  40c434:	mov	x21, x1
  40c438:	ldrb	w1, [x19, #8]
  40c43c:	cbz	w1, 40c464 <ferror@plt+0x99c4>
  40c440:	cbz	w0, 40c44c <ferror@plt+0x99ac>
  40c444:	ldr	x0, [x19, #16]
  40c448:	bl	40f62c <ferror@plt+0xcb8c>
  40c44c:	str	w20, [x21, #2584]
  40c450:	str	x22, [x19, #16]
  40c454:	ldp	x19, x20, [sp, #16]
  40c458:	ldp	x21, x22, [sp, #32]
  40c45c:	ldp	x29, x30, [sp], #48
  40c460:	ret
  40c464:	cbz	w2, 40c474 <ferror@plt+0x99d4>
  40c468:	ldr	x0, [x19, #24]
  40c46c:	bl	40f62c <ferror@plt+0xcb8c>
  40c470:	mov	w2, w0
  40c474:	mov	w0, w2
  40c478:	str	w20, [x19, #4]
  40c47c:	str	x22, [x19, #24]
  40c480:	b	40c454 <ferror@plt+0x99b4>
  40c484:	mov	w0, #0x0                   	// #0
  40c488:	b	40c454 <ferror@plt+0x99b4>
  40c48c:	stp	x29, x30, [sp, #-64]!
  40c490:	mov	x29, sp
  40c494:	stp	x19, x20, [sp, #16]
  40c498:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c49c:	add	x19, x19, #0xa18
  40c4a0:	stp	x21, x22, [sp, #32]
  40c4a4:	mov	w22, w0
  40c4a8:	ldr	x0, [x19, #32]
  40c4ac:	str	x23, [sp, #48]
  40c4b0:	cbnz	x0, 40c57c <ferror@plt+0x9adc>
  40c4b4:	ldr	x0, [x19, #40]
  40c4b8:	mov	w2, #0x7fffffff            	// #2147483647
  40c4bc:	ldr	x1, [x0]
  40c4c0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c4c4:	add	x0, x0, #0x4f0
  40c4c8:	bl	414468 <ferror@plt+0x119c8>
  40c4cc:	str	x0, [x19, #48]
  40c4d0:	bl	402450 <strlen@plt>
  40c4d4:	add	x1, x0, #0x1
  40c4d8:	mov	x21, x0
  40c4dc:	add	x0, x19, #0x38
  40c4e0:	ldp	x3, x2, [x0, #24]
  40c4e4:	sub	x2, x2, x3
  40c4e8:	cmp	x1, x2
  40c4ec:	b.ls	40c4f4 <ferror@plt+0x9a54>  // b.plast
  40c4f0:	bl	414990 <_obstack_newchunk@@Base>
  40c4f4:	ldr	x0, [x19, #80]
  40c4f8:	mov	x2, x21
  40c4fc:	ldr	x23, [x19, #48]
  40c500:	mov	x1, x23
  40c504:	bl	402420 <memcpy@plt>
  40c508:	ldr	x1, [x19, #80]
  40c50c:	add	x0, x1, x21
  40c510:	add	x0, x0, #0x1
  40c514:	str	x0, [x19, #80]
  40c518:	strb	wzr, [x1, x21]
  40c51c:	ldp	x21, x0, [x19, #72]
  40c520:	cmp	x0, x21
  40c524:	b.ne	40c534 <ferror@plt+0x9a94>  // b.any
  40c528:	ldrb	w2, [x19, #136]
  40c52c:	orr	w2, w2, #0x2
  40c530:	strb	w2, [x19, #136]
  40c534:	ldr	x2, [x19, #104]
  40c538:	str	x21, [x19, #32]
  40c53c:	ldr	x1, [x19, #88]
  40c540:	add	x0, x0, x2
  40c544:	bic	x2, x0, x2
  40c548:	ldr	x0, [x19, #64]
  40c54c:	sub	x4, x2, x0
  40c550:	sub	x0, x1, x0
  40c554:	cmp	x4, x0
  40c558:	mov	x0, x23
  40c55c:	csel	x2, x2, x1, ls  // ls = plast
  40c560:	stp	x2, x2, [x19, #72]
  40c564:	bl	4028c0 <free@plt>
  40c568:	mov	x0, x21
  40c56c:	mov	w1, #0x2d                  	// #45
  40c570:	bl	402780 <strrchr@plt>
  40c574:	add	x0, x0, #0x1
  40c578:	str	x0, [x19, #48]
  40c57c:	cmp	w22, #0x0
  40c580:	b.gt	40c5a4 <ferror@plt+0x9b04>
  40c584:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c588:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c58c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c590:	add	x3, x3, #0x6fd
  40c594:	add	x1, x1, #0x4f9
  40c598:	add	x0, x0, #0x502
  40c59c:	mov	w2, #0xc8                  	// #200
  40c5a0:	bl	402a20 <__assert_fail@plt>
  40c5a4:	ldr	x0, [x19, #48]
  40c5a8:	mov	w4, w22
  40c5ac:	mov	x2, #0xffffffffffffffff    	// #-1
  40c5b0:	mov	w1, #0x1                   	// #1
  40c5b4:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c5b8:	add	x3, x3, #0x232
  40c5bc:	bl	402470 <__sprintf_chk@plt>
  40c5c0:	ldr	x0, [x19, #32]
  40c5c4:	ldp	x19, x20, [sp, #16]
  40c5c8:	ldp	x21, x22, [sp, #32]
  40c5cc:	ldr	x23, [sp, #48]
  40c5d0:	ldp	x29, x30, [sp], #64
  40c5d4:	ret
  40c5d8:	stp	x29, x30, [sp, #-48]!
  40c5dc:	mov	x29, sp
  40c5e0:	str	x21, [sp, #32]
  40c5e4:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c5e8:	stp	x19, x20, [sp, #16]
  40c5ec:	mov	w19, w0
  40c5f0:	ldr	w0, [x21, #2584]
  40c5f4:	add	x20, x21, #0xa18
  40c5f8:	cmp	w0, w19
  40c5fc:	b.ne	40c634 <ferror@plt+0x9b94>  // b.any
  40c600:	ldr	x0, [x20, #16]
  40c604:	bl	40f62c <ferror@plt+0xcb8c>
  40c608:	cbnz	w0, 40c654 <ferror@plt+0x9bb4>
  40c60c:	str	wzr, [x21, #2584]
  40c610:	ldr	x20, [x20, #40]
  40c614:	mov	w0, w19
  40c618:	bl	40c48c <ferror@plt+0x99ec>
  40c61c:	mov	x1, x0
  40c620:	mov	x0, x20
  40c624:	ldp	x19, x20, [sp, #16]
  40c628:	ldr	x21, [sp, #32]
  40c62c:	ldp	x29, x30, [sp], #48
  40c630:	b	40f21c <ferror@plt+0xc77c>
  40c634:	ldr	w0, [x20, #4]
  40c638:	cmp	w0, w19
  40c63c:	b.ne	40c610 <ferror@plt+0x9b70>  // b.any
  40c640:	ldr	x0, [x20, #24]
  40c644:	bl	40f62c <ferror@plt+0xcb8c>
  40c648:	cbnz	w0, 40c654 <ferror@plt+0x9bb4>
  40c64c:	str	wzr, [x20, #4]
  40c650:	b	40c610 <ferror@plt+0x9b70>
  40c654:	ldp	x19, x20, [sp, #16]
  40c658:	ldr	x21, [sp, #32]
  40c65c:	ldp	x29, x30, [sp], #48
  40c660:	ret
  40c664:	stp	x29, x30, [sp, #-192]!
  40c668:	mov	x29, sp
  40c66c:	stp	x19, x20, [sp, #16]
  40c670:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c674:	add	x19, x19, #0xa18
  40c678:	stp	x21, x22, [sp, #32]
  40c67c:	ldr	x20, [x19, #144]
  40c680:	stp	x23, x24, [sp, #48]
  40c684:	ldr	w22, [x19, #152]
  40c688:	ldr	w1, [x20, #12]
  40c68c:	sub	w22, w1, w22
  40c690:	mov	w21, w1
  40c694:	str	w22, [x20, #16]
  40c698:	add	w22, w22, w0
  40c69c:	cmp	w22, w21
  40c6a0:	b.gt	40c828 <ferror@plt+0x9d88>
  40c6a4:	ldr	w0, [x19, #156]
  40c6a8:	sub	w0, w0, w1
  40c6ac:	add	w0, w0, w21
  40c6b0:	cmp	w0, #0x80, lsl #12
  40c6b4:	b.le	40c8b0 <ferror@plt+0x9e10>
  40c6b8:	ldr	x0, [x19, #160]
  40c6bc:	add	x8, sp, #0x40
  40c6c0:	bl	411818 <ferror@plt+0xed78>
  40c6c4:	add	x1, sp, #0x40
  40c6c8:	add	x0, sp, #0x88
  40c6cc:	mov	x2, #0x38                  	// #56
  40c6d0:	bl	402420 <memcpy@plt>
  40c6d4:	add	x1, sp, #0x80
  40c6d8:	add	x0, sp, #0x88
  40c6dc:	bl	411834 <ferror@plt+0xed94>
  40c6e0:	tst	w0, #0xff
  40c6e4:	b.ne	40c83c <ferror@plt+0x9d9c>  // b.any
  40c6e8:	add	x0, sp, #0x88
  40c6ec:	bl	411844 <ferror@plt+0xeda4>
  40c6f0:	ldp	w22, w1, [x20, #8]
  40c6f4:	str	wzr, [x20, #12]
  40c6f8:	ldr	w0, [x19, #156]
  40c6fc:	ldr	x24, [x20]
  40c700:	sub	w0, w0, w1
  40c704:	str	w0, [x19, #156]
  40c708:	ldr	x0, [x19, #40]
  40c70c:	str	xzr, [x20]
  40c710:	cbnz	x0, 40c754 <ferror@plt+0x9cb4>
  40c714:	mov	w2, #0x1                   	// #1
  40c718:	mov	x1, #0x0                   	// #0
  40c71c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c720:	add	x0, x0, #0x50d
  40c724:	bl	40eea0 <ferror@plt+0xc400>
  40c728:	str	x0, [x19, #40]
  40c72c:	cbnz	x0, 40c748 <ferror@plt+0x9ca8>
  40c730:	bl	402a30 <__errno_location@plt>
  40c734:	ldr	w1, [x0]
  40c738:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c73c:	mov	w0, #0x1                   	// #1
  40c740:	add	x2, x2, #0x511
  40c744:	bl	403488 <ferror@plt+0x9e8>
  40c748:	adrp	x0, 40c000 <ferror@plt+0x9560>
  40c74c:	add	x0, x0, #0x914
  40c750:	bl	414fc0 <_obstack_memory_used@@Base+0x47c>
  40c754:	mov	w0, w22
  40c758:	bl	40c48c <ferror@plt+0x99ec>
  40c75c:	mov	x1, x0
  40c760:	mov	x23, x0
  40c764:	ldr	x0, [x19, #40]
  40c768:	bl	40f0bc <ferror@plt+0xc61c>
  40c76c:	mov	x0, x23
  40c770:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c774:	add	x1, x1, #0x53c
  40c778:	bl	40f51c <ferror@plt+0xca7c>
  40c77c:	mov	x22, x0
  40c780:	cbnz	x0, 40c858 <ferror@plt+0x9db8>
  40c784:	ldr	x0, [x19, #40]
  40c788:	mov	x1, x23
  40c78c:	bl	40f108 <ferror@plt+0xc668>
  40c790:	bl	402a30 <__errno_location@plt>
  40c794:	ldr	w1, [x0]
  40c798:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c79c:	add	x2, x2, #0x511
  40c7a0:	mov	w0, #0x1                   	// #1
  40c7a4:	bl	403488 <ferror@plt+0x9e8>
  40c7a8:	ldr	w1, [x20, #16]
  40c7ac:	str	x22, [x20]
  40c7b0:	cmp	w1, #0x0
  40c7b4:	b.le	40c7ec <ferror@plt+0x9d4c>
  40c7b8:	mov	x3, x22
  40c7bc:	sxtw	x1, w1
  40c7c0:	mov	x0, x24
  40c7c4:	mov	x2, #0x1                   	// #1
  40c7c8:	bl	402930 <fwrite@plt>
  40c7cc:	cmp	w0, #0x1
  40c7d0:	b.eq	40c7ec <ferror@plt+0x9d4c>  // b.none
  40c7d4:	bl	402a30 <__errno_location@plt>
  40c7d8:	ldr	w1, [x0]
  40c7dc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c7e0:	mov	w0, #0x1                   	// #1
  40c7e4:	add	x2, x2, #0x56e
  40c7e8:	bl	403488 <ferror@plt+0x9e8>
  40c7ec:	mov	x0, x24
  40c7f0:	bl	4028c0 <free@plt>
  40c7f4:	mov	w0, #0x1                   	// #1
  40c7f8:	str	w0, [x20, #16]
  40c7fc:	ldr	x0, [x19, #144]
  40c800:	cmp	x0, x20
  40c804:	ldr	x0, [x20]
  40c808:	b.ne	40c888 <ferror@plt+0x9de8>  // b.any
  40c80c:	str	wzr, [x19, #152]
  40c810:	stp	x0, xzr, [x19, #168]
  40c814:	ldp	x19, x20, [sp, #16]
  40c818:	ldp	x21, x22, [sp, #32]
  40c81c:	ldp	x23, x24, [sp, #48]
  40c820:	ldp	x29, x30, [sp], #192
  40c824:	ret
  40c828:	lsl	w0, w21, #1
  40c82c:	cmp	w21, #0x0
  40c830:	mov	w21, #0x200                 	// #512
  40c834:	csel	w21, w0, w21, ne  // ne = any
  40c838:	b	40c69c <ferror@plt+0x9bfc>
  40c83c:	ldr	x0, [sp, #128]
  40c840:	ldr	w1, [x0, #16]
  40c844:	cmp	w1, w22
  40c848:	b.le	40c6d4 <ferror@plt+0x9c34>
  40c84c:	mov	w22, w1
  40c850:	mov	x20, x0
  40c854:	b	40c6d4 <ferror@plt+0x9c34>
  40c858:	bl	402590 <fileno@plt>
  40c85c:	mov	w1, #0x1                   	// #1
  40c860:	bl	40f680 <ferror@plt+0xcbe0>
  40c864:	cbz	w0, 40c7a8 <ferror@plt+0x9d08>
  40c868:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c86c:	ldr	w23, [x0, #1660]
  40c870:	bl	402a30 <__errno_location@plt>
  40c874:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c878:	ldr	w1, [x0]
  40c87c:	add	x2, x2, #0x53f
  40c880:	mov	w0, w23
  40c884:	b	40c7a4 <ferror@plt+0x9d04>
  40c888:	ldr	w1, [x20, #8]
  40c88c:	str	xzr, [x20]
  40c890:	bl	40c3fc <ferror@plt+0x995c>
  40c894:	cbz	w0, 40c8b0 <ferror@plt+0x9e10>
  40c898:	bl	402a30 <__errno_location@plt>
  40c89c:	ldr	w1, [x0]
  40c8a0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c8a4:	mov	w0, #0x0                   	// #0
  40c8a8:	add	x2, x2, #0x59e
  40c8ac:	bl	403488 <ferror@plt+0x9e8>
  40c8b0:	ldr	x20, [x19, #144]
  40c8b4:	sxtw	x0, w21
  40c8b8:	ldr	x22, [x20]
  40c8bc:	bl	413d0c <ferror@plt+0x1126c>
  40c8c0:	str	x0, [x20]
  40c8c4:	ldr	x20, [x19, #144]
  40c8c8:	mov	x1, x22
  40c8cc:	ldrsw	x2, [x20, #16]
  40c8d0:	ldr	x0, [x20]
  40c8d4:	bl	402420 <memcpy@plt>
  40c8d8:	mov	x0, x22
  40c8dc:	bl	4028c0 <free@plt>
  40c8e0:	ldr	w0, [x20, #12]
  40c8e4:	ldr	w1, [x19, #156]
  40c8e8:	sub	w0, w21, w0
  40c8ec:	str	w21, [x20, #12]
  40c8f0:	add	w0, w0, w1
  40c8f4:	str	w0, [x19, #156]
  40c8f8:	ldr	x0, [x20]
  40c8fc:	ldr	w1, [x20, #16]
  40c900:	sub	w21, w21, w1
  40c904:	str	w21, [x19, #152]
  40c908:	add	x0, x0, w1, sxtw
  40c90c:	str	x0, [x19, #176]
  40c910:	b	40c814 <ferror@plt+0x9d74>
  40c914:	stp	x29, x30, [sp, #-112]!
  40c918:	mov	x29, sp
  40c91c:	stp	x19, x20, [sp, #16]
  40c920:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c924:	add	x19, x19, #0xa18
  40c928:	stp	x21, x22, [sp, #32]
  40c92c:	ldr	x0, [x19, #160]
  40c930:	cbz	x0, 40c9b8 <ferror@plt+0x9f18>
  40c934:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x24bc>
  40c938:	add	x22, x22, #0x5c8
  40c93c:	mov	w21, #0x0                   	// #0
  40c940:	add	x8, sp, #0x38
  40c944:	bl	411818 <ferror@plt+0xed78>
  40c948:	add	x1, sp, #0x30
  40c94c:	add	x0, sp, #0x38
  40c950:	bl	411834 <ferror@plt+0xed94>
  40c954:	ands	w20, w0, #0xff
  40c958:	b.ne	40c980 <ferror@plt+0x9ee0>  // b.any
  40c95c:	add	x0, sp, #0x38
  40c960:	bl	411844 <ferror@plt+0xeda4>
  40c964:	ldr	x0, [x19, #40]
  40c968:	bl	40f3e0 <ferror@plt+0xc940>
  40c96c:	cbnz	w0, 40c974 <ferror@plt+0x9ed4>
  40c970:	cbz	w21, 40c9c0 <ferror@plt+0x9f20>
  40c974:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c978:	ldr	w0, [x0, #884]
  40c97c:	bl	402440 <_exit@plt>
  40c980:	ldr	x0, [sp, #48]
  40c984:	ldr	w1, [x0, #12]
  40c988:	cbnz	w1, 40c948 <ferror@plt+0x9ea8>
  40c98c:	ldr	x0, [x0]
  40c990:	cbz	x0, 40c948 <ferror@plt+0x9ea8>
  40c994:	bl	40f62c <ferror@plt+0xcb8c>
  40c998:	cbz	w0, 40c948 <ferror@plt+0x9ea8>
  40c99c:	bl	402a30 <__errno_location@plt>
  40c9a0:	ldr	w1, [x0]
  40c9a4:	mov	x2, x22
  40c9a8:	mov	w21, w20
  40c9ac:	mov	w0, #0x0                   	// #0
  40c9b0:	bl	403488 <ferror@plt+0x9e8>
  40c9b4:	b	40c948 <ferror@plt+0x9ea8>
  40c9b8:	mov	w21, #0x0                   	// #0
  40c9bc:	b	40c964 <ferror@plt+0x9ec4>
  40c9c0:	ldp	x19, x20, [sp, #16]
  40c9c4:	ldp	x21, x22, [sp, #32]
  40c9c8:	ldp	x29, x30, [sp], #112
  40c9cc:	ret
  40c9d0:	stp	x29, x30, [sp, #-32]!
  40c9d4:	mov	x29, sp
  40c9d8:	stp	x19, x20, [sp, #16]
  40c9dc:	and	w20, w1, #0xff
  40c9e0:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40c9e4:	add	x19, x1, #0xa18
  40c9e8:	ldr	w1, [x1, #2584]
  40c9ec:	cmp	w1, w0
  40c9f0:	b.ne	40ca3c <ferror@plt+0x9f9c>  // b.any
  40c9f4:	cbz	w20, 40ca24 <ferror@plt+0x9f84>
  40c9f8:	ldr	x0, [x19, #16]
  40c9fc:	mov	w2, #0x0                   	// #0
  40ca00:	mov	x1, #0x0                   	// #0
  40ca04:	bl	414734 <ferror@plt+0x11c94>
  40ca08:	cbz	w0, 40ca24 <ferror@plt+0x9f84>
  40ca0c:	bl	402a30 <__errno_location@plt>
  40ca10:	ldr	w1, [x0]
  40ca14:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40ca18:	mov	w0, #0x1                   	// #1
  40ca1c:	add	x2, x2, #0x5f2
  40ca20:	bl	403488 <ferror@plt+0x9e8>
  40ca24:	strb	wzr, [x19, #8]
  40ca28:	ldr	x19, [x19, #16]
  40ca2c:	mov	x0, x19
  40ca30:	ldp	x19, x20, [sp, #16]
  40ca34:	ldp	x29, x30, [sp], #32
  40ca38:	ret
  40ca3c:	ldr	w1, [x19, #4]
  40ca40:	cmp	w1, w0
  40ca44:	b.ne	40ca88 <ferror@plt+0x9fe8>  // b.any
  40ca48:	cbz	w20, 40ca78 <ferror@plt+0x9fd8>
  40ca4c:	ldr	x0, [x19, #24]
  40ca50:	mov	w2, #0x0                   	// #0
  40ca54:	mov	x1, #0x0                   	// #0
  40ca58:	bl	414734 <ferror@plt+0x11c94>
  40ca5c:	cbz	w0, 40ca78 <ferror@plt+0x9fd8>
  40ca60:	bl	402a30 <__errno_location@plt>
  40ca64:	ldr	w1, [x0]
  40ca68:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40ca6c:	mov	w0, #0x1                   	// #1
  40ca70:	add	x2, x2, #0x5f2
  40ca74:	bl	403488 <ferror@plt+0x9e8>
  40ca78:	mov	w0, #0x1                   	// #1
  40ca7c:	strb	w0, [x19, #8]
  40ca80:	ldr	x19, [x19, #24]
  40ca84:	b	40ca2c <ferror@plt+0x9f8c>
  40ca88:	bl	40c48c <ferror@plt+0x99ec>
  40ca8c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40ca90:	add	x1, x1, #0x60f
  40ca94:	bl	40f51c <ferror@plt+0xca7c>
  40ca98:	mov	x19, x0
  40ca9c:	cbnz	x0, 40cab8 <ferror@plt+0xa018>
  40caa0:	bl	402a30 <__errno_location@plt>
  40caa4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40caa8:	add	x2, x2, #0x511
  40caac:	ldr	w1, [x0]
  40cab0:	mov	w0, #0x1                   	// #1
  40cab4:	b	40cadc <ferror@plt+0xa03c>
  40cab8:	bl	402590 <fileno@plt>
  40cabc:	mov	w1, #0x1                   	// #1
  40cac0:	bl	40f680 <ferror@plt+0xcbe0>
  40cac4:	cbz	w0, 40cae4 <ferror@plt+0xa044>
  40cac8:	bl	402a30 <__errno_location@plt>
  40cacc:	ldr	w1, [x0]
  40cad0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40cad4:	add	x2, x2, #0x548
  40cad8:	mov	w0, #0x0                   	// #0
  40cadc:	bl	403488 <ferror@plt+0x9e8>
  40cae0:	b	40ca2c <ferror@plt+0x9f8c>
  40cae4:	cbnz	w20, 40ca2c <ferror@plt+0x9f8c>
  40cae8:	mov	x0, x19
  40caec:	mov	w2, #0x2                   	// #2
  40caf0:	mov	x1, #0x0                   	// #0
  40caf4:	bl	414734 <ferror@plt+0x11c94>
  40caf8:	cbz	w0, 40ca2c <ferror@plt+0x9f8c>
  40cafc:	bl	402a30 <__errno_location@plt>
  40cb00:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40cb04:	add	x2, x2, #0x5f2
  40cb08:	b	40caac <ferror@plt+0xa00c>
  40cb0c:	stp	x29, x30, [sp, #-32]!
  40cb10:	mov	x29, sp
  40cb14:	str	x19, [sp, #16]
  40cb18:	mov	w19, w0
  40cb1c:	mov	w0, #0x1                   	// #1
  40cb20:	bl	40c664 <ferror@plt+0x9bc4>
  40cb24:	adrp	x2, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cb28:	add	x2, x2, #0xa18
  40cb2c:	ldr	x1, [x2, #168]
  40cb30:	cbz	x1, 40cb44 <ferror@plt+0xa0a4>
  40cb34:	mov	w0, w19
  40cb38:	ldr	x19, [sp, #16]
  40cb3c:	ldp	x29, x30, [sp], #32
  40cb40:	b	402500 <putc@plt>
  40cb44:	ldr	x0, [x2, #176]
  40cb48:	add	x1, x0, #0x1
  40cb4c:	strb	w19, [x0]
  40cb50:	ldr	w0, [x2, #152]
  40cb54:	ldr	x19, [sp, #16]
  40cb58:	sub	w0, w0, #0x1
  40cb5c:	str	w0, [x2, #152]
  40cb60:	str	x1, [x2, #176]
  40cb64:	ldp	x29, x30, [sp], #32
  40cb68:	ret
  40cb6c:	stp	x29, x30, [sp, #-16]!
  40cb70:	mov	x2, #0x0                   	// #0
  40cb74:	adrp	x1, 40c000 <ferror@plt+0x9560>
  40cb78:	mov	x29, sp
  40cb7c:	add	x1, x1, #0x3d8
  40cb80:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40cb84:	add	x0, x0, #0x7c0
  40cb88:	bl	41404c <ferror@plt+0x115ac>
  40cb8c:	adrp	x5, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cb90:	add	x5, x5, #0xa18
  40cb94:	add	x1, x5, #0xb8
  40cb98:	adrp	x4, 402000 <mbrtowc@plt-0x410>
  40cb9c:	adrp	x3, 413000 <ferror@plt+0x10560>
  40cba0:	add	x4, x4, #0x8c0
  40cba4:	str	x0, [x5, #160]
  40cba8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cbac:	str	x1, [x5, #144]
  40cbb0:	add	x3, x3, #0xd0c
  40cbb4:	ldr	x0, [x0, #1088]
  40cbb8:	str	x0, [x5, #168]
  40cbbc:	str	x0, [x5, #184]
  40cbc0:	mov	x2, #0x0                   	// #0
  40cbc4:	add	x0, x5, #0x38
  40cbc8:	mov	x1, #0x0                   	// #0
  40cbcc:	ldp	x29, x30, [sp], #16
  40cbd0:	b	414964 <_obstack_begin@@Base>
  40cbd4:	stp	x29, x30, [sp, #-32]!
  40cbd8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cbdc:	mov	x29, sp
  40cbe0:	stp	x19, x20, [sp, #16]
  40cbe4:	add	x19, x0, #0xa18
  40cbe8:	ldr	w0, [x0, #2584]
  40cbec:	ldr	x20, [x19, #160]
  40cbf0:	cbz	w0, 40cbf8 <ferror@plt+0xa158>
  40cbf4:	bl	40c5d8 <ferror@plt+0x9b38>
  40cbf8:	ldr	w0, [x19, #4]
  40cbfc:	cbz	w0, 40cc04 <ferror@plt+0xa164>
  40cc00:	bl	40c5d8 <ferror@plt+0x9b38>
  40cc04:	mov	x0, x20
  40cc08:	str	xzr, [x19, #160]
  40cc0c:	bl	411808 <ferror@plt+0xed68>
  40cc10:	add	x0, x19, #0x38
  40cc14:	mov	x1, #0x0                   	// #0
  40cc18:	ldp	x19, x20, [sp, #16]
  40cc1c:	ldp	x29, x30, [sp], #32
  40cc20:	b	414ad0 <_obstack_free@@Base>
  40cc24:	stp	x29, x30, [sp, #-48]!
  40cc28:	mov	x29, sp
  40cc2c:	stp	x19, x20, [sp, #16]
  40cc30:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cc34:	add	x19, x19, #0xa18
  40cc38:	stp	x21, x22, [sp, #32]
  40cc3c:	mov	x21, x0
  40cc40:	ldr	x0, [x19, #144]
  40cc44:	cbz	x0, 40ccdc <ferror@plt+0xa23c>
  40cc48:	mov	w20, w1
  40cc4c:	cbz	w1, 40ccdc <ferror@plt+0xa23c>
  40cc50:	ldr	x0, [x19, #168]
  40cc54:	cbnz	x0, 40cc6c <ferror@plt+0xa1cc>
  40cc58:	ldr	w0, [x19, #152]
  40cc5c:	cmp	w0, w1
  40cc60:	b.ge	40cc6c <ferror@plt+0xa1cc>  // b.tcont
  40cc64:	mov	w0, w1
  40cc68:	bl	40c664 <ferror@plt+0x9bc4>
  40cc6c:	ldr	x3, [x19, #168]
  40cc70:	sxtw	x22, w20
  40cc74:	cbz	x3, 40ccb4 <ferror@plt+0xa214>
  40cc78:	mov	x1, x22
  40cc7c:	mov	x0, x21
  40cc80:	mov	x2, #0x1                   	// #1
  40cc84:	bl	402930 <fwrite@plt>
  40cc88:	cmp	w0, #0x1
  40cc8c:	b.eq	40ccdc <ferror@plt+0xa23c>  // b.none
  40cc90:	bl	402a30 <__errno_location@plt>
  40cc94:	ldr	w1, [x0]
  40cc98:	ldp	x19, x20, [sp, #16]
  40cc9c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40cca0:	ldp	x21, x22, [sp, #32]
  40cca4:	add	x2, x2, #0x612
  40cca8:	ldp	x29, x30, [sp], #48
  40ccac:	mov	w0, #0x1                   	// #1
  40ccb0:	b	403488 <ferror@plt+0x9e8>
  40ccb4:	ldr	x3, [x19, #176]
  40ccb8:	mov	x1, x21
  40ccbc:	mov	x2, x22
  40ccc0:	mov	x0, x3
  40ccc4:	bl	402420 <memcpy@plt>
  40ccc8:	add	x3, x0, x22
  40cccc:	ldr	w1, [x19, #152]
  40ccd0:	str	x3, [x19, #176]
  40ccd4:	sub	w20, w1, w20
  40ccd8:	str	w20, [x19, #152]
  40ccdc:	ldp	x19, x20, [sp, #16]
  40cce0:	ldp	x21, x22, [sp, #32]
  40cce4:	ldp	x29, x30, [sp], #48
  40cce8:	ret
  40ccec:	stp	x29, x30, [sp, #-80]!
  40ccf0:	mov	x29, sp
  40ccf4:	stp	x19, x20, [sp, #16]
  40ccf8:	mov	x20, x1
  40ccfc:	stp	x21, x22, [sp, #32]
  40cd00:	mov	w22, w2
  40cd04:	stp	x23, x24, [sp, #48]
  40cd08:	str	x25, [sp, #64]
  40cd0c:	cbz	x0, 40cd64 <ferror@plt+0xa2c4>
  40cd10:	sxtw	x21, w2
  40cd14:	mov	x19, x0
  40cd18:	ldp	x2, x1, [x0, #24]
  40cd1c:	sub	x1, x1, x2
  40cd20:	cmp	x1, w22, sxtw
  40cd24:	b.cs	40cd30 <ferror@plt+0xa290>  // b.hs, b.nlast
  40cd28:	mov	x1, x21
  40cd2c:	bl	414990 <_obstack_newchunk@@Base>
  40cd30:	ldr	x0, [x19, #24]
  40cd34:	mov	x2, x21
  40cd38:	mov	x1, x20
  40cd3c:	bl	402420 <memcpy@plt>
  40cd40:	ldr	x0, [x19, #24]
  40cd44:	add	x0, x0, x21
  40cd48:	str	x0, [x19, #24]
  40cd4c:	ldp	x19, x20, [sp, #16]
  40cd50:	ldp	x21, x22, [sp, #32]
  40cd54:	ldp	x23, x24, [sp, #48]
  40cd58:	ldr	x25, [sp, #64]
  40cd5c:	ldp	x29, x30, [sp], #80
  40cd60:	ret
  40cd64:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cd68:	add	x19, x19, #0xa18
  40cd6c:	ldr	x0, [x19, #144]
  40cd70:	cbz	x0, 40cd4c <ferror@plt+0xa2ac>
  40cd74:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cd78:	ldr	w0, [x0, #1684]
  40cd7c:	cbnz	w0, 40cfe0 <ferror@plt+0xa540>
  40cd80:	cmp	w2, #0x8
  40cd84:	b.hi	40cfc0 <ferror@plt+0xa520>  // b.pmore
  40cd88:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40cd8c:	add	x0, x0, #0x6f4
  40cd90:	ldrb	w0, [x0, w2, uxtw]
  40cd94:	adr	x1, 40cda0 <ferror@plt+0xa300>
  40cd98:	add	x0, x1, w0, sxtb #2
  40cd9c:	br	x0
  40cda0:	ldr	x1, [x19, #168]
  40cda4:	ldrb	w0, [x20]
  40cda8:	cbz	x1, 40ce50 <ferror@plt+0xa3b0>
  40cdac:	bl	402500 <putc@plt>
  40cdb0:	add	x20, x20, #0x1
  40cdb4:	ldr	x1, [x19, #168]
  40cdb8:	ldrb	w0, [x20]
  40cdbc:	cbz	x1, 40ce7c <ferror@plt+0xa3dc>
  40cdc0:	bl	402500 <putc@plt>
  40cdc4:	add	x20, x20, #0x1
  40cdc8:	ldr	x1, [x19, #168]
  40cdcc:	ldrb	w0, [x20]
  40cdd0:	cbz	x1, 40cea8 <ferror@plt+0xa408>
  40cdd4:	bl	402500 <putc@plt>
  40cdd8:	add	x20, x20, #0x1
  40cddc:	ldr	x1, [x19, #168]
  40cde0:	ldrb	w0, [x20]
  40cde4:	cbz	x1, 40ced4 <ferror@plt+0xa434>
  40cde8:	bl	402500 <putc@plt>
  40cdec:	add	x20, x20, #0x1
  40cdf0:	ldr	x1, [x19, #168]
  40cdf4:	ldrb	w0, [x20]
  40cdf8:	cbz	x1, 40cf00 <ferror@plt+0xa460>
  40cdfc:	bl	402500 <putc@plt>
  40ce00:	add	x20, x20, #0x1
  40ce04:	ldr	x1, [x19, #168]
  40ce08:	ldrb	w0, [x20]
  40ce0c:	cbz	x1, 40cf2c <ferror@plt+0xa48c>
  40ce10:	bl	402500 <putc@plt>
  40ce14:	add	x20, x20, #0x1
  40ce18:	ldr	x1, [x19, #168]
  40ce1c:	ldrb	w0, [x20]
  40ce20:	cbz	x1, 40cf58 <ferror@plt+0xa4b8>
  40ce24:	bl	402500 <putc@plt>
  40ce28:	add	x20, x20, #0x1
  40ce2c:	ldr	x1, [x19, #168]
  40ce30:	ldrb	w0, [x20]
  40ce34:	cbz	x1, 40cf84 <ferror@plt+0xa4e4>
  40ce38:	ldp	x19, x20, [sp, #16]
  40ce3c:	ldp	x21, x22, [sp, #32]
  40ce40:	ldp	x23, x24, [sp, #48]
  40ce44:	ldr	x25, [sp, #64]
  40ce48:	ldp	x29, x30, [sp], #80
  40ce4c:	b	402500 <putc@plt>
  40ce50:	ldr	w1, [x19, #152]
  40ce54:	cbnz	w1, 40ce60 <ferror@plt+0xa3c0>
  40ce58:	bl	40cb0c <ferror@plt+0xa06c>
  40ce5c:	b	40cdb0 <ferror@plt+0xa310>
  40ce60:	sub	w1, w1, #0x1
  40ce64:	str	w1, [x19, #152]
  40ce68:	ldr	x1, [x19, #176]
  40ce6c:	add	x2, x1, #0x1
  40ce70:	str	x2, [x19, #176]
  40ce74:	strb	w0, [x1]
  40ce78:	b	40cdb0 <ferror@plt+0xa310>
  40ce7c:	ldr	w1, [x19, #152]
  40ce80:	cbnz	w1, 40ce8c <ferror@plt+0xa3ec>
  40ce84:	bl	40cb0c <ferror@plt+0xa06c>
  40ce88:	b	40cdc4 <ferror@plt+0xa324>
  40ce8c:	sub	w1, w1, #0x1
  40ce90:	str	w1, [x19, #152]
  40ce94:	ldr	x1, [x19, #176]
  40ce98:	add	x2, x1, #0x1
  40ce9c:	str	x2, [x19, #176]
  40cea0:	strb	w0, [x1]
  40cea4:	b	40cdc4 <ferror@plt+0xa324>
  40cea8:	ldr	w1, [x19, #152]
  40ceac:	cbnz	w1, 40ceb8 <ferror@plt+0xa418>
  40ceb0:	bl	40cb0c <ferror@plt+0xa06c>
  40ceb4:	b	40cdd8 <ferror@plt+0xa338>
  40ceb8:	sub	w1, w1, #0x1
  40cebc:	str	w1, [x19, #152]
  40cec0:	ldr	x1, [x19, #176]
  40cec4:	add	x2, x1, #0x1
  40cec8:	str	x2, [x19, #176]
  40cecc:	strb	w0, [x1]
  40ced0:	b	40cdd8 <ferror@plt+0xa338>
  40ced4:	ldr	w1, [x19, #152]
  40ced8:	cbnz	w1, 40cee4 <ferror@plt+0xa444>
  40cedc:	bl	40cb0c <ferror@plt+0xa06c>
  40cee0:	b	40cdec <ferror@plt+0xa34c>
  40cee4:	sub	w1, w1, #0x1
  40cee8:	str	w1, [x19, #152]
  40ceec:	ldr	x1, [x19, #176]
  40cef0:	add	x2, x1, #0x1
  40cef4:	str	x2, [x19, #176]
  40cef8:	strb	w0, [x1]
  40cefc:	b	40cdec <ferror@plt+0xa34c>
  40cf00:	ldr	w1, [x19, #152]
  40cf04:	cbnz	w1, 40cf10 <ferror@plt+0xa470>
  40cf08:	bl	40cb0c <ferror@plt+0xa06c>
  40cf0c:	b	40ce00 <ferror@plt+0xa360>
  40cf10:	sub	w1, w1, #0x1
  40cf14:	str	w1, [x19, #152]
  40cf18:	ldr	x1, [x19, #176]
  40cf1c:	add	x2, x1, #0x1
  40cf20:	str	x2, [x19, #176]
  40cf24:	strb	w0, [x1]
  40cf28:	b	40ce00 <ferror@plt+0xa360>
  40cf2c:	ldr	w1, [x19, #152]
  40cf30:	cbnz	w1, 40cf3c <ferror@plt+0xa49c>
  40cf34:	bl	40cb0c <ferror@plt+0xa06c>
  40cf38:	b	40ce14 <ferror@plt+0xa374>
  40cf3c:	sub	w1, w1, #0x1
  40cf40:	str	w1, [x19, #152]
  40cf44:	ldr	x1, [x19, #176]
  40cf48:	add	x2, x1, #0x1
  40cf4c:	str	x2, [x19, #176]
  40cf50:	strb	w0, [x1]
  40cf54:	b	40ce14 <ferror@plt+0xa374>
  40cf58:	ldr	w1, [x19, #152]
  40cf5c:	cbnz	w1, 40cf68 <ferror@plt+0xa4c8>
  40cf60:	bl	40cb0c <ferror@plt+0xa06c>
  40cf64:	b	40ce28 <ferror@plt+0xa388>
  40cf68:	sub	w1, w1, #0x1
  40cf6c:	str	w1, [x19, #152]
  40cf70:	ldr	x1, [x19, #176]
  40cf74:	add	x2, x1, #0x1
  40cf78:	str	x2, [x19, #176]
  40cf7c:	strb	w0, [x1]
  40cf80:	b	40ce28 <ferror@plt+0xa388>
  40cf84:	ldr	w1, [x19, #152]
  40cf88:	cbnz	w1, 40cfa4 <ferror@plt+0xa504>
  40cf8c:	ldp	x19, x20, [sp, #16]
  40cf90:	ldp	x21, x22, [sp, #32]
  40cf94:	ldp	x23, x24, [sp, #48]
  40cf98:	ldr	x25, [sp, #64]
  40cf9c:	ldp	x29, x30, [sp], #80
  40cfa0:	b	40cb0c <ferror@plt+0xa06c>
  40cfa4:	sub	w1, w1, #0x1
  40cfa8:	str	w1, [x19, #152]
  40cfac:	ldr	x1, [x19, #176]
  40cfb0:	add	x2, x1, #0x1
  40cfb4:	str	x2, [x19, #176]
  40cfb8:	strb	w0, [x1]
  40cfbc:	b	40cd4c <ferror@plt+0xa2ac>
  40cfc0:	mov	x0, x20
  40cfc4:	mov	w1, w2
  40cfc8:	ldp	x19, x20, [sp, #16]
  40cfcc:	ldp	x21, x22, [sp, #32]
  40cfd0:	ldp	x23, x24, [sp, #48]
  40cfd4:	ldr	x25, [sp, #64]
  40cfd8:	ldp	x29, x30, [sp], #80
  40cfdc:	b	40cc24 <ferror@plt+0xa184>
  40cfe0:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40cfe4:	ldrb	w0, [x21, #880]
  40cfe8:	cbz	w0, 40d0f0 <ferror@plt+0xa650>
  40cfec:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40cff0:	strb	wzr, [x21, #880]
  40cff4:	mov	w24, w3
  40cff8:	ldr	w0, [x23, #3504]
  40cffc:	add	w0, w0, #0x1
  40d000:	str	w0, [x23, #3504]
  40d004:	cmp	w0, w3
  40d008:	b.eq	40d0f0 <ferror@plt+0xa650>  // b.none
  40d00c:	ldr	x1, [x19, #168]
  40d010:	cbz	x1, 40d150 <ferror@plt+0xa6b0>
  40d014:	mov	w0, #0x23                  	// #35
  40d018:	bl	402500 <putc@plt>
  40d01c:	ldr	x1, [x19, #168]
  40d020:	cbz	x1, 40d184 <ferror@plt+0xa6e4>
  40d024:	mov	w0, #0x6c                  	// #108
  40d028:	bl	402500 <putc@plt>
  40d02c:	ldr	x1, [x19, #168]
  40d030:	cbz	x1, 40d1b8 <ferror@plt+0xa718>
  40d034:	mov	w0, #0x69                  	// #105
  40d038:	bl	402500 <putc@plt>
  40d03c:	ldr	x1, [x19, #168]
  40d040:	cbz	x1, 40d1ec <ferror@plt+0xa74c>
  40d044:	mov	w0, #0x6e                  	// #110
  40d048:	bl	402500 <putc@plt>
  40d04c:	ldr	x1, [x19, #168]
  40d050:	cbz	x1, 40d220 <ferror@plt+0xa780>
  40d054:	mov	w0, #0x65                  	// #101
  40d058:	bl	402500 <putc@plt>
  40d05c:	ldr	x1, [x19, #168]
  40d060:	cbz	x1, 40d254 <ferror@plt+0xa7b4>
  40d064:	mov	w0, #0x20                  	// #32
  40d068:	bl	402500 <putc@plt>
  40d06c:	mov	w0, w24
  40d070:	mov	w1, #0xa                   	// #10
  40d074:	bl	4069bc <ferror@plt+0x3f1c>
  40d078:	mov	x25, x0
  40d07c:	ldrb	w0, [x25]
  40d080:	ldr	x1, [x19, #168]
  40d084:	cbnz	w0, 40d288 <ferror@plt+0xa7e8>
  40d088:	ldr	w0, [x23, #3504]
  40d08c:	cmp	w0, #0x0
  40d090:	b.gt	40d0dc <ferror@plt+0xa63c>
  40d094:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d098:	ldr	x0, [x25, #3448]
  40d09c:	ldrb	w0, [x0]
  40d0a0:	cbz	w0, 40d0dc <ferror@plt+0xa63c>
  40d0a4:	cbz	x1, 40d2c4 <ferror@plt+0xa824>
  40d0a8:	mov	w0, #0x20                  	// #32
  40d0ac:	bl	402500 <putc@plt>
  40d0b0:	ldr	x1, [x19, #168]
  40d0b4:	cbz	x1, 40d2f8 <ferror@plt+0xa858>
  40d0b8:	mov	w0, #0x22                  	// #34
  40d0bc:	bl	402500 <putc@plt>
  40d0c0:	ldr	x25, [x25, #3448]
  40d0c4:	ldrb	w0, [x25]
  40d0c8:	ldr	x1, [x19, #168]
  40d0cc:	cbnz	w0, 40d32c <ferror@plt+0xa88c>
  40d0d0:	cbz	x1, 40d368 <ferror@plt+0xa8c8>
  40d0d4:	mov	w0, #0x22                  	// #34
  40d0d8:	bl	402500 <putc@plt>
  40d0dc:	ldr	x1, [x19, #168]
  40d0e0:	cbz	x1, 40d39c <ferror@plt+0xa8fc>
  40d0e4:	mov	w0, #0xa                   	// #10
  40d0e8:	bl	402500 <putc@plt>
  40d0ec:	str	w24, [x23, #3504]
  40d0f0:	adrp	x24, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d0f4:	add	x21, x21, #0x370
  40d0f8:	add	x24, x24, #0xdb0
  40d0fc:	mov	x23, #0x0                   	// #0
  40d100:	mov	w25, #0x1                   	// #1
  40d104:	sub	w0, w22, w23
  40d108:	cmp	w0, #0x0
  40d10c:	b.le	40cd4c <ferror@plt+0xa2ac>
  40d110:	ldrb	w0, [x21]
  40d114:	cbz	w0, 40d128 <ferror@plt+0xa688>
  40d118:	ldr	w0, [x24]
  40d11c:	strb	wzr, [x21]
  40d120:	add	w0, w0, #0x1
  40d124:	str	w0, [x24]
  40d128:	ldr	x1, [x19, #168]
  40d12c:	ldrb	w0, [x20, x23]
  40d130:	cbz	x1, 40d3d0 <ferror@plt+0xa930>
  40d134:	bl	402500 <putc@plt>
  40d138:	ldrb	w0, [x20, x23]
  40d13c:	cmp	w0, #0xa
  40d140:	b.ne	40d148 <ferror@plt+0xa6a8>  // b.any
  40d144:	strb	w25, [x21]
  40d148:	add	x23, x23, #0x1
  40d14c:	b	40d104 <ferror@plt+0xa664>
  40d150:	ldr	w0, [x19, #152]
  40d154:	cbnz	w0, 40d164 <ferror@plt+0xa6c4>
  40d158:	mov	w0, #0x23                  	// #35
  40d15c:	bl	40cb0c <ferror@plt+0xa06c>
  40d160:	b	40d01c <ferror@plt+0xa57c>
  40d164:	sub	w0, w0, #0x1
  40d168:	str	w0, [x19, #152]
  40d16c:	ldr	x0, [x19, #176]
  40d170:	add	x1, x0, #0x1
  40d174:	str	x1, [x19, #176]
  40d178:	mov	w1, #0x23                  	// #35
  40d17c:	strb	w1, [x0]
  40d180:	b	40d01c <ferror@plt+0xa57c>
  40d184:	ldr	w0, [x19, #152]
  40d188:	cbnz	w0, 40d198 <ferror@plt+0xa6f8>
  40d18c:	mov	w0, #0x6c                  	// #108
  40d190:	bl	40cb0c <ferror@plt+0xa06c>
  40d194:	b	40d02c <ferror@plt+0xa58c>
  40d198:	sub	w0, w0, #0x1
  40d19c:	str	w0, [x19, #152]
  40d1a0:	ldr	x0, [x19, #176]
  40d1a4:	add	x1, x0, #0x1
  40d1a8:	str	x1, [x19, #176]
  40d1ac:	mov	w1, #0x6c                  	// #108
  40d1b0:	strb	w1, [x0]
  40d1b4:	b	40d02c <ferror@plt+0xa58c>
  40d1b8:	ldr	w0, [x19, #152]
  40d1bc:	cbnz	w0, 40d1cc <ferror@plt+0xa72c>
  40d1c0:	mov	w0, #0x69                  	// #105
  40d1c4:	bl	40cb0c <ferror@plt+0xa06c>
  40d1c8:	b	40d03c <ferror@plt+0xa59c>
  40d1cc:	sub	w0, w0, #0x1
  40d1d0:	str	w0, [x19, #152]
  40d1d4:	ldr	x0, [x19, #176]
  40d1d8:	add	x1, x0, #0x1
  40d1dc:	str	x1, [x19, #176]
  40d1e0:	mov	w1, #0x69                  	// #105
  40d1e4:	strb	w1, [x0]
  40d1e8:	b	40d03c <ferror@plt+0xa59c>
  40d1ec:	ldr	w0, [x19, #152]
  40d1f0:	cbnz	w0, 40d200 <ferror@plt+0xa760>
  40d1f4:	mov	w0, #0x6e                  	// #110
  40d1f8:	bl	40cb0c <ferror@plt+0xa06c>
  40d1fc:	b	40d04c <ferror@plt+0xa5ac>
  40d200:	sub	w0, w0, #0x1
  40d204:	str	w0, [x19, #152]
  40d208:	ldr	x0, [x19, #176]
  40d20c:	add	x1, x0, #0x1
  40d210:	str	x1, [x19, #176]
  40d214:	mov	w1, #0x6e                  	// #110
  40d218:	strb	w1, [x0]
  40d21c:	b	40d04c <ferror@plt+0xa5ac>
  40d220:	ldr	w0, [x19, #152]
  40d224:	cbnz	w0, 40d234 <ferror@plt+0xa794>
  40d228:	mov	w0, #0x65                  	// #101
  40d22c:	bl	40cb0c <ferror@plt+0xa06c>
  40d230:	b	40d05c <ferror@plt+0xa5bc>
  40d234:	sub	w0, w0, #0x1
  40d238:	str	w0, [x19, #152]
  40d23c:	ldr	x0, [x19, #176]
  40d240:	add	x1, x0, #0x1
  40d244:	str	x1, [x19, #176]
  40d248:	mov	w1, #0x65                  	// #101
  40d24c:	strb	w1, [x0]
  40d250:	b	40d05c <ferror@plt+0xa5bc>
  40d254:	ldr	w0, [x19, #152]
  40d258:	cbnz	w0, 40d268 <ferror@plt+0xa7c8>
  40d25c:	mov	w0, #0x20                  	// #32
  40d260:	bl	40cb0c <ferror@plt+0xa06c>
  40d264:	b	40d06c <ferror@plt+0xa5cc>
  40d268:	sub	w0, w0, #0x1
  40d26c:	str	w0, [x19, #152]
  40d270:	ldr	x0, [x19, #176]
  40d274:	add	x1, x0, #0x1
  40d278:	str	x1, [x19, #176]
  40d27c:	mov	w1, #0x20                  	// #32
  40d280:	strb	w1, [x0]
  40d284:	b	40d06c <ferror@plt+0xa5cc>
  40d288:	cbz	x1, 40d298 <ferror@plt+0xa7f8>
  40d28c:	bl	402500 <putc@plt>
  40d290:	add	x25, x25, #0x1
  40d294:	b	40d07c <ferror@plt+0xa5dc>
  40d298:	ldr	w1, [x19, #152]
  40d29c:	cbnz	w1, 40d2a8 <ferror@plt+0xa808>
  40d2a0:	bl	40cb0c <ferror@plt+0xa06c>
  40d2a4:	b	40d290 <ferror@plt+0xa7f0>
  40d2a8:	sub	w1, w1, #0x1
  40d2ac:	str	w1, [x19, #152]
  40d2b0:	ldr	x1, [x19, #176]
  40d2b4:	add	x2, x1, #0x1
  40d2b8:	str	x2, [x19, #176]
  40d2bc:	strb	w0, [x1]
  40d2c0:	b	40d290 <ferror@plt+0xa7f0>
  40d2c4:	ldr	w0, [x19, #152]
  40d2c8:	cbnz	w0, 40d2d8 <ferror@plt+0xa838>
  40d2cc:	mov	w0, #0x20                  	// #32
  40d2d0:	bl	40cb0c <ferror@plt+0xa06c>
  40d2d4:	b	40d0b0 <ferror@plt+0xa610>
  40d2d8:	sub	w0, w0, #0x1
  40d2dc:	str	w0, [x19, #152]
  40d2e0:	ldr	x0, [x19, #176]
  40d2e4:	add	x1, x0, #0x1
  40d2e8:	str	x1, [x19, #176]
  40d2ec:	mov	w1, #0x20                  	// #32
  40d2f0:	strb	w1, [x0]
  40d2f4:	b	40d0b0 <ferror@plt+0xa610>
  40d2f8:	ldr	w0, [x19, #152]
  40d2fc:	cbnz	w0, 40d30c <ferror@plt+0xa86c>
  40d300:	mov	w0, #0x22                  	// #34
  40d304:	bl	40cb0c <ferror@plt+0xa06c>
  40d308:	b	40d0c0 <ferror@plt+0xa620>
  40d30c:	sub	w0, w0, #0x1
  40d310:	str	w0, [x19, #152]
  40d314:	ldr	x0, [x19, #176]
  40d318:	add	x1, x0, #0x1
  40d31c:	str	x1, [x19, #176]
  40d320:	mov	w1, #0x22                  	// #34
  40d324:	strb	w1, [x0]
  40d328:	b	40d0c0 <ferror@plt+0xa620>
  40d32c:	cbz	x1, 40d33c <ferror@plt+0xa89c>
  40d330:	bl	402500 <putc@plt>
  40d334:	add	x25, x25, #0x1
  40d338:	b	40d0c4 <ferror@plt+0xa624>
  40d33c:	ldr	w1, [x19, #152]
  40d340:	cbnz	w1, 40d34c <ferror@plt+0xa8ac>
  40d344:	bl	40cb0c <ferror@plt+0xa06c>
  40d348:	b	40d334 <ferror@plt+0xa894>
  40d34c:	sub	w1, w1, #0x1
  40d350:	str	w1, [x19, #152]
  40d354:	ldr	x1, [x19, #176]
  40d358:	add	x2, x1, #0x1
  40d35c:	str	x2, [x19, #176]
  40d360:	strb	w0, [x1]
  40d364:	b	40d334 <ferror@plt+0xa894>
  40d368:	ldr	w0, [x19, #152]
  40d36c:	cbnz	w0, 40d37c <ferror@plt+0xa8dc>
  40d370:	mov	w0, #0x22                  	// #34
  40d374:	bl	40cb0c <ferror@plt+0xa06c>
  40d378:	b	40d0dc <ferror@plt+0xa63c>
  40d37c:	sub	w0, w0, #0x1
  40d380:	str	w0, [x19, #152]
  40d384:	ldr	x0, [x19, #176]
  40d388:	add	x1, x0, #0x1
  40d38c:	str	x1, [x19, #176]
  40d390:	mov	w1, #0x22                  	// #34
  40d394:	strb	w1, [x0]
  40d398:	b	40d0dc <ferror@plt+0xa63c>
  40d39c:	ldr	w0, [x19, #152]
  40d3a0:	cbnz	w0, 40d3b0 <ferror@plt+0xa910>
  40d3a4:	mov	w0, #0xa                   	// #10
  40d3a8:	bl	40cb0c <ferror@plt+0xa06c>
  40d3ac:	b	40d0ec <ferror@plt+0xa64c>
  40d3b0:	sub	w0, w0, #0x1
  40d3b4:	str	w0, [x19, #152]
  40d3b8:	ldr	x0, [x19, #176]
  40d3bc:	add	x1, x0, #0x1
  40d3c0:	str	x1, [x19, #176]
  40d3c4:	mov	w1, #0xa                   	// #10
  40d3c8:	strb	w1, [x0]
  40d3cc:	b	40d0ec <ferror@plt+0xa64c>
  40d3d0:	ldr	w1, [x19, #152]
  40d3d4:	cbnz	w1, 40d3e0 <ferror@plt+0xa940>
  40d3d8:	bl	40cb0c <ferror@plt+0xa06c>
  40d3dc:	b	40d138 <ferror@plt+0xa698>
  40d3e0:	sub	w1, w1, #0x1
  40d3e4:	str	w1, [x19, #152]
  40d3e8:	ldr	x1, [x19, #176]
  40d3ec:	add	x2, x1, #0x1
  40d3f0:	str	x2, [x19, #176]
  40d3f4:	strb	w0, [x1]
  40d3f8:	b	40d138 <ferror@plt+0xa698>
  40d3fc:	stp	x29, x30, [sp, #-64]!
  40d400:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d404:	mov	x29, sp
  40d408:	ldr	w2, [x1, #3508]
  40d40c:	stp	x19, x20, [sp, #16]
  40d410:	cmp	w2, w0
  40d414:	str	w0, [sp, #44]
  40d418:	b.eq	40d5e4 <ferror@plt+0xab44>  // b.none
  40d41c:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d420:	add	x19, x19, #0xa18
  40d424:	mov	x20, x1
  40d428:	ldr	x1, [x19, #144]
  40d42c:	cbz	x1, 40d4bc <ferror@plt+0xaa1c>
  40d430:	ldr	w0, [x1, #12]
  40d434:	cbnz	w0, 40d560 <ferror@plt+0xaac0>
  40d438:	ldr	x0, [x1]
  40d43c:	ldr	w2, [x1, #16]
  40d440:	cbnz	x0, 40d570 <ferror@plt+0xaad0>
  40d444:	cbz	w2, 40d46c <ferror@plt+0xa9cc>
  40d448:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d44c:	add	x3, x3, #0x6fd
  40d450:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d454:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d458:	add	x3, x3, #0xb
  40d45c:	add	x1, x1, #0x4f9
  40d460:	add	x0, x0, #0x62f
  40d464:	mov	w2, #0x2dd                 	// #733
  40d468:	bl	402a20 <__assert_fail@plt>
  40d46c:	ldr	x0, [x19, #160]
  40d470:	bl	4117f8 <ferror@plt+0xed58>
  40d474:	tst	w0, #0xff
  40d478:	b.ne	40d4a0 <ferror@plt+0xaa00>  // b.any
  40d47c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d480:	add	x3, x3, #0x6fd
  40d484:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d488:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d48c:	add	x3, x3, #0xb
  40d490:	add	x1, x1, #0x4f9
  40d494:	add	x0, x0, #0x647
  40d498:	mov	w2, #0x2df                 	// #735
  40d49c:	b	40d468 <ferror@plt+0xa9c8>
  40d4a0:	ldr	x0, [x19, #144]
  40d4a4:	ldr	x1, [x19, #208]
  40d4a8:	str	x0, [x19, #208]
  40d4ac:	str	x1, [x0]
  40d4b0:	str	xzr, [x19, #144]
  40d4b4:	str	wzr, [x19, #152]
  40d4b8:	stp	xzr, xzr, [x19, #168]
  40d4bc:	ldr	w0, [sp, #44]
  40d4c0:	str	w0, [x20, #3508]
  40d4c4:	cmp	w0, #0x0
  40d4c8:	b.lt	40d5e4 <ferror@plt+0xab44>  // b.tstop
  40d4cc:	b.eq	40d614 <ferror@plt+0xab74>  // b.none
  40d4d0:	ldr	x0, [x19, #160]
  40d4d4:	add	x3, sp, #0x38
  40d4d8:	add	x2, sp, #0x2c
  40d4dc:	adrp	x1, 40c000 <ferror@plt+0x9560>
  40d4e0:	add	x1, x1, #0x3e8
  40d4e4:	bl	4117d8 <ferror@plt+0xed38>
  40d4e8:	tst	w0, #0xff
  40d4ec:	b.ne	40d5a0 <ferror@plt+0xab00>  // b.any
  40d4f0:	ldr	x20, [x19, #208]
  40d4f4:	cbnz	x20, 40d5f0 <ferror@plt+0xab50>
  40d4f8:	add	x0, x19, #0x38
  40d4fc:	ldp	x2, x1, [x0, #24]
  40d500:	sub	x1, x1, x2
  40d504:	cmp	x1, #0x17
  40d508:	b.hi	40d514 <ferror@plt+0xaa74>  // b.pmore
  40d50c:	mov	x1, #0x18                  	// #24
  40d510:	bl	414990 <_obstack_newchunk@@Base>
  40d514:	ldp	x20, x1, [x19, #72]
  40d518:	add	x1, x1, #0x18
  40d51c:	cmp	x1, x20
  40d520:	b.ne	40d530 <ferror@plt+0xaa90>  // b.any
  40d524:	ldrb	w2, [x19, #136]
  40d528:	orr	w2, w2, #0x2
  40d52c:	strb	w2, [x19, #136]
  40d530:	ldr	x0, [x19, #104]
  40d534:	ldr	x3, [x19, #88]
  40d538:	add	x1, x1, x0
  40d53c:	bic	x0, x1, x0
  40d540:	ldr	x1, [x19, #64]
  40d544:	sub	x4, x0, x1
  40d548:	sub	x1, x3, x1
  40d54c:	cmp	x4, x1
  40d550:	csel	x0, x0, x3, ls  // ls = plast
  40d554:	stp	x0, x0, [x19, #72]
  40d558:	stur	xzr, [x20, #12]
  40d55c:	b	40d5f8 <ferror@plt+0xab58>
  40d560:	ldr	w2, [x19, #152]
  40d564:	sub	w0, w0, w2
  40d568:	str	w0, [x1, #16]
  40d56c:	b	40d4b0 <ferror@plt+0xaa10>
  40d570:	cbz	w2, 40d4b0 <ferror@plt+0xaa10>
  40d574:	str	xzr, [x1]
  40d578:	ldr	w1, [x1, #8]
  40d57c:	bl	40c3fc <ferror@plt+0x995c>
  40d580:	cbz	w0, 40d4b0 <ferror@plt+0xaa10>
  40d584:	bl	402a30 <__errno_location@plt>
  40d588:	ldr	w1, [x0]
  40d58c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d590:	mov	w0, #0x0                   	// #0
  40d594:	add	x2, x2, #0x59e
  40d598:	bl	403488 <ferror@plt+0x9e8>
  40d59c:	b	40d4b0 <ferror@plt+0xaa10>
  40d5a0:	ldr	x20, [sp, #56]
  40d5a4:	ldr	w0, [sp, #44]
  40d5a8:	ldr	w1, [x20, #8]
  40d5ac:	cmp	w1, w0
  40d5b0:	b.ne	40d4f0 <ferror@plt+0xaa50>  // b.any
  40d5b4:	ldr	w1, [x20, #12]
  40d5b8:	str	x20, [x19, #144]
  40d5bc:	ldr	x0, [x20]
  40d5c0:	cbz	w1, 40d61c <ferror@plt+0xab7c>
  40d5c4:	ldr	w2, [x20, #16]
  40d5c8:	sub	w1, w1, w2
  40d5cc:	str	w1, [x19, #152]
  40d5d0:	add	x0, x0, w2, sxtw
  40d5d4:	str	x0, [x19, #176]
  40d5d8:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d5dc:	mov	w1, #0xffffffff            	// #-1
  40d5e0:	str	w1, [x0, #3504]
  40d5e4:	ldp	x19, x20, [sp, #16]
  40d5e8:	ldp	x29, x30, [sp], #64
  40d5ec:	ret
  40d5f0:	ldr	x0, [x20]
  40d5f4:	str	x0, [x19, #208]
  40d5f8:	ldr	w0, [sp, #44]
  40d5fc:	mov	x1, x20
  40d600:	str	w0, [x20, #8]
  40d604:	ldr	x0, [x19, #160]
  40d608:	str	xzr, [x20]
  40d60c:	bl	414068 <ferror@plt+0x115c8>
  40d610:	b	40d5b4 <ferror@plt+0xab14>
  40d614:	add	x20, x19, #0xb8
  40d618:	b	40d5b4 <ferror@plt+0xab14>
  40d61c:	cbnz	x0, 40d638 <ferror@plt+0xab98>
  40d620:	ldr	w0, [x20, #16]
  40d624:	cbz	w0, 40d638 <ferror@plt+0xab98>
  40d628:	ldr	w0, [x20, #8]
  40d62c:	mov	w1, #0x0                   	// #0
  40d630:	bl	40c9d0 <ferror@plt+0x9f30>
  40d634:	str	x0, [x20]
  40d638:	ldr	x0, [x19, #144]
  40d63c:	ldr	x0, [x0]
  40d640:	str	x0, [x19, #168]
  40d644:	b	40d5d8 <ferror@plt+0xab38>
  40d648:	stp	x29, x30, [sp, #-48]!
  40d64c:	mov	x29, sp
  40d650:	stp	x21, x22, [sp, #32]
  40d654:	mov	x21, x0
  40d658:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d65c:	stp	x19, x20, [sp, #16]
  40d660:	ldr	x0, [x0, #2728]
  40d664:	cbz	x0, 40d6c4 <ferror@plt+0xac24>
  40d668:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d66c:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d670:	add	x19, x19, #0xaf0
  40d674:	add	x22, x22, #0x64d
  40d678:	mov	x3, x21
  40d67c:	mov	x2, #0x4000                	// #16384
  40d680:	mov	x1, #0x1                   	// #1
  40d684:	mov	x0, x19
  40d688:	bl	4028b0 <fread@plt>
  40d68c:	mov	x20, x0
  40d690:	mov	x0, x21
  40d694:	bl	402aa0 <ferror@plt>
  40d698:	cbz	w0, 40d6b0 <ferror@plt+0xac10>
  40d69c:	bl	402a30 <__errno_location@plt>
  40d6a0:	ldr	w1, [x0]
  40d6a4:	mov	x2, x22
  40d6a8:	mov	w0, #0x1                   	// #1
  40d6ac:	bl	403488 <ferror@plt+0x9e8>
  40d6b0:	cbz	x20, 40d6c4 <ferror@plt+0xac24>
  40d6b4:	mov	w1, w20
  40d6b8:	mov	x0, x19
  40d6bc:	bl	40cc24 <ferror@plt+0xa184>
  40d6c0:	b	40d678 <ferror@plt+0xabd8>
  40d6c4:	ldp	x19, x20, [sp, #16]
  40d6c8:	ldp	x21, x22, [sp, #32]
  40d6cc:	ldp	x29, x30, [sp], #48
  40d6d0:	ret
  40d6d4:	stp	x29, x30, [sp, #-80]!
  40d6d8:	mov	x29, sp
  40d6dc:	stp	x19, x20, [sp, #16]
  40d6e0:	mov	x19, x0
  40d6e4:	stp	x25, x26, [sp, #64]
  40d6e8:	adrp	x26, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d6ec:	add	x20, x26, #0xa18
  40d6f0:	stp	x21, x22, [sp, #32]
  40d6f4:	ldr	x21, [x20, #144]
  40d6f8:	stp	x23, x24, [sp, #48]
  40d6fc:	cbz	x21, 40d788 <ferror@plt+0xace8>
  40d700:	ldr	w1, [x0, #12]
  40d704:	ldr	x0, [x21]
  40d708:	cbz	w1, 40d800 <ferror@plt+0xad60>
  40d70c:	cbnz	x0, 40d7e4 <ferror@plt+0xad44>
  40d710:	ldr	w0, [x21, #16]
  40d714:	cbnz	w0, 40d72c <ferror@plt+0xac8c>
  40d718:	add	x0, x20, #0xb8
  40d71c:	cmp	x21, x0
  40d720:	b.eq	40d72c <ferror@plt+0xac8c>  // b.none
  40d724:	ldr	x0, [x20, #168]
  40d728:	cbz	x0, 40d750 <ferror@plt+0xacb0>
  40d72c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d730:	add	x3, x3, #0x6fd
  40d734:	add	x3, x3, #0x1a
  40d738:	mov	w2, #0x358                 	// #856
  40d73c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d740:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d744:	add	x1, x1, #0x4f9
  40d748:	add	x0, x0, #0x669
  40d74c:	bl	402a20 <__assert_fail@plt>
  40d750:	ldr	x0, [x19]
  40d754:	ldr	w2, [x19, #16]
  40d758:	str	x0, [x21]
  40d75c:	str	w1, [x21, #12]
  40d760:	ldr	x1, [x19]
  40d764:	str	xzr, [x19]
  40d768:	ldr	w0, [x19, #12]
  40d76c:	add	x1, x1, w2, sxtw
  40d770:	sub	w0, w0, w2
  40d774:	str	w0, [x20, #152]
  40d778:	str	x1, [x20, #176]
  40d77c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d780:	mov	w1, #0xffffffff            	// #-1
  40d784:	str	w1, [x0, #3504]
  40d788:	ldr	w2, [x19, #12]
  40d78c:	ldr	x0, [x19]
  40d790:	cbz	w2, 40d918 <ferror@plt+0xae78>
  40d794:	ldr	x1, [x20, #144]
  40d798:	cbnz	x1, 40d7a8 <ferror@plt+0xad08>
  40d79c:	ldr	w1, [x20, #156]
  40d7a0:	sub	w1, w1, w2
  40d7a4:	str	w1, [x20, #156]
  40d7a8:	bl	4028c0 <free@plt>
  40d7ac:	str	wzr, [x19, #12]
  40d7b0:	ldr	x0, [x20, #160]
  40d7b4:	str	wzr, [x19, #16]
  40d7b8:	mov	x1, x19
  40d7bc:	bl	4117f8 <ferror@plt+0xed58>
  40d7c0:	ldr	x0, [x20, #208]
  40d7c4:	str	x19, [x20, #208]
  40d7c8:	ldp	x21, x22, [sp, #32]
  40d7cc:	ldp	x23, x24, [sp, #48]
  40d7d0:	ldp	x25, x26, [sp, #64]
  40d7d4:	str	x0, [x19]
  40d7d8:	ldp	x19, x20, [sp, #16]
  40d7dc:	ldp	x29, x30, [sp], #80
  40d7e0:	ret
  40d7e4:	ldr	w0, [x20, #156]
  40d7e8:	sub	w0, w0, w1
  40d7ec:	ldr	w1, [x19, #16]
  40d7f0:	str	w0, [x20, #156]
  40d7f4:	ldr	x0, [x19]
  40d7f8:	bl	40cc24 <ferror@plt+0xa184>
  40d7fc:	b	40d77c <ferror@plt+0xacdc>
  40d800:	cbnz	x0, 40d8f4 <ferror@plt+0xae54>
  40d804:	ldr	w0, [x21, #16]
  40d808:	cbnz	w0, 40d820 <ferror@plt+0xad80>
  40d80c:	add	x0, x20, #0xb8
  40d810:	cmp	x21, x0
  40d814:	b.eq	40d820 <ferror@plt+0xad80>  // b.none
  40d818:	ldr	x0, [x20, #168]
  40d81c:	cbz	x0, 40d834 <ferror@plt+0xad94>
  40d820:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d824:	add	x3, x3, #0x6fd
  40d828:	add	x3, x3, #0x1a
  40d82c:	mov	w2, #0x36d                 	// #877
  40d830:	b	40d73c <ferror@plt+0xac9c>
  40d834:	ldr	w25, [x19, #8]
  40d838:	ldr	w23, [x21, #8]
  40d83c:	mov	w0, w25
  40d840:	bl	40c48c <ferror@plt+0x99ec>
  40d844:	bl	413ec4 <ferror@plt+0x11424>
  40d848:	mov	x22, x0
  40d84c:	mov	w0, w23
  40d850:	bl	40c48c <ferror@plt+0x99ec>
  40d854:	mov	x1, x0
  40d858:	mov	x24, x0
  40d85c:	ldr	x0, [x20, #40]
  40d860:	bl	40f0bc <ferror@plt+0xc61c>
  40d864:	ldr	w0, [x26, #2584]
  40d868:	cmp	w25, w0
  40d86c:	b.ne	40d8e0 <ferror@plt+0xae40>  // b.any
  40d870:	str	w23, [x26, #2584]
  40d874:	mov	x1, x24
  40d878:	mov	x0, x22
  40d87c:	bl	402920 <rename@plt>
  40d880:	cbz	w0, 40d89c <ferror@plt+0xadfc>
  40d884:	bl	402a30 <__errno_location@plt>
  40d888:	ldr	w1, [x0]
  40d88c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d890:	mov	w0, #0x1                   	// #1
  40d894:	add	x2, x2, #0x511
  40d898:	bl	403488 <ferror@plt+0x9e8>
  40d89c:	ldr	x0, [x20, #40]
  40d8a0:	mov	x1, x22
  40d8a4:	bl	40f108 <ferror@plt+0xc668>
  40d8a8:	mov	x0, x22
  40d8ac:	bl	4028c0 <free@plt>
  40d8b0:	mov	w1, #0x0                   	// #0
  40d8b4:	mov	w0, w23
  40d8b8:	bl	40c9d0 <ferror@plt+0x9f30>
  40d8bc:	str	x0, [x21]
  40d8c0:	ldr	x1, [x20, #144]
  40d8c4:	mov	w0, #0x1                   	// #1
  40d8c8:	str	w0, [x1, #16]
  40d8cc:	ldr	x1, [x1]
  40d8d0:	str	xzr, [x19]
  40d8d4:	str	w0, [x19, #12]
  40d8d8:	str	x1, [x20, #168]
  40d8dc:	b	40d77c <ferror@plt+0xacdc>
  40d8e0:	ldr	w0, [x20, #4]
  40d8e4:	cmp	w25, w0
  40d8e8:	b.ne	40d874 <ferror@plt+0xadd4>  // b.any
  40d8ec:	str	w23, [x20, #4]
  40d8f0:	b	40d874 <ferror@plt+0xadd4>
  40d8f4:	ldr	x0, [x19]
  40d8f8:	cbnz	x0, 40d90c <ferror@plt+0xae6c>
  40d8fc:	ldr	w0, [x19, #8]
  40d900:	mov	w1, #0x1                   	// #1
  40d904:	bl	40c9d0 <ferror@plt+0x9f30>
  40d908:	str	x0, [x19]
  40d90c:	ldr	x0, [x19]
  40d910:	bl	40d648 <ferror@plt+0xaba8>
  40d914:	b	40d77c <ferror@plt+0xacdc>
  40d918:	cbz	x0, 40d944 <ferror@plt+0xaea4>
  40d91c:	ldr	w1, [x19, #8]
  40d920:	str	xzr, [x19]
  40d924:	bl	40c3fc <ferror@plt+0x995c>
  40d928:	cbz	w0, 40d944 <ferror@plt+0xaea4>
  40d92c:	bl	402a30 <__errno_location@plt>
  40d930:	ldr	w1, [x0]
  40d934:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d938:	mov	w0, #0x0                   	// #0
  40d93c:	add	x2, x2, #0x5c8
  40d940:	bl	403488 <ferror@plt+0x9e8>
  40d944:	ldr	w0, [x19, #8]
  40d948:	bl	40c5d8 <ferror@plt+0x9b38>
  40d94c:	cbz	w0, 40d7b0 <ferror@plt+0xad10>
  40d950:	bl	402a30 <__errno_location@plt>
  40d954:	ldr	w1, [x0]
  40d958:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40d95c:	mov	w0, #0x0                   	// #0
  40d960:	add	x2, x2, #0x5c8
  40d964:	bl	403488 <ferror@plt+0x9e8>
  40d968:	b	40d7b0 <ferror@plt+0xad10>
  40d96c:	stp	x29, x30, [sp, #-48]!
  40d970:	cmp	w0, #0x0
  40d974:	mov	x29, sp
  40d978:	str	w0, [sp, #28]
  40d97c:	b.le	40d9cc <ferror@plt+0xaf2c>
  40d980:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d984:	ldr	w1, [x1, #3508]
  40d988:	cmp	w0, w1
  40d98c:	b.eq	40d9cc <ferror@plt+0xaf2c>  // b.none
  40d990:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d994:	add	x3, sp, #0x28
  40d998:	add	x2, sp, #0x1c
  40d99c:	adrp	x1, 40c000 <ferror@plt+0x9560>
  40d9a0:	ldr	x0, [x0, #2744]
  40d9a4:	add	x1, x1, #0x3e8
  40d9a8:	bl	4117d8 <ferror@plt+0xed38>
  40d9ac:	tst	w0, #0xff
  40d9b0:	b.eq	40d9cc <ferror@plt+0xaf2c>  // b.none
  40d9b4:	ldr	x0, [sp, #40]
  40d9b8:	ldr	w1, [sp, #28]
  40d9bc:	ldr	w2, [x0, #8]
  40d9c0:	cmp	w2, w1
  40d9c4:	b.ne	40d9cc <ferror@plt+0xaf2c>  // b.any
  40d9c8:	bl	40d6d4 <ferror@plt+0xac34>
  40d9cc:	ldp	x29, x30, [sp], #48
  40d9d0:	ret
  40d9d4:	stp	x29, x30, [sp, #-96]!
  40d9d8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40d9dc:	mov	x29, sp
  40d9e0:	ldr	x0, [x0, #2744]
  40d9e4:	str	x19, [sp, #16]
  40d9e8:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40d9ec:	add	x19, x19, #0xdb4
  40d9f0:	add	x8, sp, #0x28
  40d9f4:	bl	411818 <ferror@plt+0xed78>
  40d9f8:	add	x1, sp, #0x20
  40d9fc:	add	x0, sp, #0x28
  40da00:	bl	411834 <ferror@plt+0xed94>
  40da04:	tst	w0, #0xff
  40da08:	b.ne	40da20 <ferror@plt+0xaf80>  // b.any
  40da0c:	add	x0, sp, #0x28
  40da10:	bl	411844 <ferror@plt+0xeda4>
  40da14:	ldr	x19, [sp, #16]
  40da18:	ldp	x29, x30, [sp], #96
  40da1c:	ret
  40da20:	ldr	x0, [sp, #32]
  40da24:	ldr	w1, [x19]
  40da28:	ldr	w2, [x0, #8]
  40da2c:	cmp	w2, w1
  40da30:	b.eq	40d9f8 <ferror@plt+0xaf58>  // b.none
  40da34:	bl	40d6d4 <ferror@plt+0xac34>
  40da38:	b	40d9f8 <ferror@plt+0xaf58>
  40da3c:	stp	x29, x30, [sp, #-320]!
  40da40:	mov	x29, sp
  40da44:	stp	x19, x20, [sp, #16]
  40da48:	mov	x20, x0
  40da4c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40da50:	stp	x21, x22, [sp, #32]
  40da54:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x24bc>
  40da58:	ldr	w22, [x0, #3508]
  40da5c:	mov	w0, #0x0                   	// #0
  40da60:	str	x23, [sp, #48]
  40da64:	bl	40d3fc <ferror@plt+0xa95c>
  40da68:	add	x21, x21, #0x6ae
  40da6c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40da70:	add	x0, x0, #0xa18
  40da74:	add	x8, sp, #0x40
  40da78:	mov	w23, #0x0                   	// #0
  40da7c:	str	x20, [x0, #168]
  40da80:	ldr	x0, [x0, #160]
  40da84:	bl	411818 <ferror@plt+0xed78>
  40da88:	add	x1, sp, #0x40
  40da8c:	add	x0, sp, #0x88
  40da90:	mov	x2, #0x38                  	// #56
  40da94:	bl	402420 <memcpy@plt>
  40da98:	add	x1, sp, #0x80
  40da9c:	add	x0, sp, #0x88
  40daa0:	bl	411834 <ferror@plt+0xed94>
  40daa4:	tst	w0, #0xff
  40daa8:	b.ne	40dae4 <ferror@plt+0xb044>  // b.any
  40daac:	add	x0, sp, #0x88
  40dab0:	bl	411844 <ferror@plt+0xeda4>
  40dab4:	cmp	w23, w22
  40dab8:	b.eq	40dad0 <ferror@plt+0xb030>  // b.none
  40dabc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40dac0:	mov	w2, w22
  40dac4:	add	x1, x1, #0x6e9
  40dac8:	mov	x0, x20
  40dacc:	bl	4141fc <ferror@plt+0x1175c>
  40dad0:	ldp	x19, x20, [sp, #16]
  40dad4:	ldp	x21, x22, [sp, #32]
  40dad8:	ldr	x23, [sp, #48]
  40dadc:	ldp	x29, x30, [sp], #320
  40dae0:	ret
  40dae4:	ldr	x19, [sp, #128]
  40dae8:	ldp	w0, w3, [x19, #12]
  40daec:	cbnz	w0, 40db64 <ferror@plt+0xb0c4>
  40daf0:	cbz	w3, 40da98 <ferror@plt+0xaff8>
  40daf4:	ldr	w0, [x19, #8]
  40daf8:	mov	w1, #0x1                   	// #1
  40dafc:	bl	40c9d0 <ferror@plt+0x9f30>
  40db00:	str	x0, [x19]
  40db04:	bl	402590 <fileno@plt>
  40db08:	add	x1, sp, #0xc0
  40db0c:	bl	414fe0 <_obstack_memory_used@@Base+0x49c>
  40db10:	tbz	w0, #31, 40db2c <ferror@plt+0xb08c>
  40db14:	bl	402a30 <__errno_location@plt>
  40db18:	ldr	w1, [x0]
  40db1c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40db20:	mov	w0, #0x1                   	// #1
  40db24:	add	x2, x2, #0x6b6
  40db28:	bl	403488 <ferror@plt+0x9e8>
  40db2c:	ldr	x0, [sp, #240]
  40db30:	tbz	x0, #63, 40db48 <ferror@plt+0xb0a8>
  40db34:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40db38:	mov	w1, #0x0                   	// #0
  40db3c:	add	x2, x2, #0x6cc
  40db40:	mov	w0, #0x1                   	// #1
  40db44:	bl	403488 <ferror@plt+0x9e8>
  40db48:	ldr	w2, [x19, #8]
  40db4c:	mov	x0, x20
  40db50:	ldr	x3, [sp, #240]
  40db54:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40db58:	add	x1, x1, #0x6e0
  40db5c:	bl	4141fc <ferror@plt+0x1175c>
  40db60:	b	40db74 <ferror@plt+0xb0d4>
  40db64:	ldr	w2, [x19, #8]
  40db68:	mov	x1, x21
  40db6c:	mov	x0, x20
  40db70:	bl	4141fc <ferror@plt+0x1175c>
  40db74:	mov	x0, x19
  40db78:	bl	40d6d4 <ferror@plt+0xac34>
  40db7c:	mov	x1, x20
  40db80:	mov	w0, #0xa                   	// #10
  40db84:	bl	402500 <putc@plt>
  40db88:	ldr	w23, [x19, #8]
  40db8c:	b	40da98 <ferror@plt+0xaff8>
  40db90:	stp	x29, x30, [sp, #-160]!
  40db94:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  40db98:	add	x1, x1, #0xd0c
  40db9c:	mov	x29, sp
  40dba0:	stp	x19, x20, [sp, #16]
  40dba4:	bl	40ff98 <ferror@plt+0xd4f8>
  40dba8:	mov	x19, x0
  40dbac:	cbz	x0, 40dbec <ferror@plt+0xb14c>
  40dbb0:	bl	402590 <fileno@plt>
  40dbb4:	mov	w20, w0
  40dbb8:	add	x1, sp, #0x20
  40dbbc:	bl	414fe0 <_obstack_memory_used@@Base+0x49c>
  40dbc0:	cbnz	w0, 40dbfc <ferror@plt+0xb15c>
  40dbc4:	ldr	w0, [sp, #48]
  40dbc8:	and	w0, w0, #0xf000
  40dbcc:	cmp	w0, #0x4, lsl #12
  40dbd0:	b.ne	40dbfc <ferror@plt+0xb15c>  // b.any
  40dbd4:	mov	x0, x19
  40dbd8:	bl	4144e0 <ferror@plt+0x11a40>
  40dbdc:	bl	402a30 <__errno_location@plt>
  40dbe0:	mov	x19, #0x0                   	// #0
  40dbe4:	mov	w1, #0x15                  	// #21
  40dbe8:	str	w1, [x0]
  40dbec:	mov	x0, x19
  40dbf0:	ldp	x19, x20, [sp, #16]
  40dbf4:	ldp	x29, x30, [sp], #160
  40dbf8:	ret
  40dbfc:	mov	w0, w20
  40dc00:	mov	w1, #0x1                   	// #1
  40dc04:	bl	40f680 <ferror@plt+0xcbe0>
  40dc08:	cbz	w0, 40dbec <ferror@plt+0xb14c>
  40dc0c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40dc10:	ldr	w20, [x0, #1660]
  40dc14:	bl	402a30 <__errno_location@plt>
  40dc18:	ldr	w1, [x0]
  40dc1c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40dc20:	mov	w0, w20
  40dc24:	add	x2, x2, #0x72f
  40dc28:	bl	403488 <ferror@plt+0x9e8>
  40dc2c:	b	40dbec <ferror@plt+0xb14c>
  40dc30:	adrp	x1, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40dc34:	add	x0, x1, #0xaf0
  40dc38:	str	xzr, [x1, #2800]
  40dc3c:	str	xzr, [x0, #8]
  40dc40:	str	wzr, [x0, #16]
  40dc44:	ret
  40dc48:	stp	x29, x30, [sp, #-32]!
  40dc4c:	mov	x29, sp
  40dc50:	stp	x19, x20, [sp, #16]
  40dc54:	mov	x20, x0
  40dc58:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40dc5c:	ldr	w0, [x0, #1664]
  40dc60:	cbnz	w0, 40dcc8 <ferror@plt+0xb228>
  40dc64:	ldrb	w0, [x20]
  40dc68:	cbnz	w0, 40dc74 <ferror@plt+0xb1d4>
  40dc6c:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  40dc70:	add	x20, x20, #0xc73
  40dc74:	mov	x0, #0x18                  	// #24
  40dc78:	bl	413d0c <ferror@plt+0x1126c>
  40dc7c:	mov	x19, x0
  40dc80:	mov	x0, x20
  40dc84:	str	xzr, [x19]
  40dc88:	bl	402450 <strlen@plt>
  40dc8c:	str	w0, [x19, #16]
  40dc90:	mov	x0, x20
  40dc94:	bl	413ec4 <ferror@plt+0x11424>
  40dc98:	str	x0, [x19, #8]
  40dc9c:	adrp	x1, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40dca0:	add	x0, x1, #0xaf0
  40dca4:	ldr	w2, [x19, #16]
  40dca8:	ldr	w3, [x0, #16]
  40dcac:	cmp	w2, w3
  40dcb0:	b.le	40dcb8 <ferror@plt+0xb218>
  40dcb4:	str	w2, [x0, #16]
  40dcb8:	ldr	x2, [x0, #8]
  40dcbc:	cbnz	x2, 40dcd4 <ferror@plt+0xb234>
  40dcc0:	str	x19, [x1, #2800]
  40dcc4:	str	x19, [x0, #8]
  40dcc8:	ldp	x19, x20, [sp, #16]
  40dccc:	ldp	x29, x30, [sp], #32
  40dcd0:	ret
  40dcd4:	str	x19, [x2]
  40dcd8:	b	40dcc4 <ferror@plt+0xb224>
  40dcdc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40dce0:	ldr	w0, [x0, #1664]
  40dce4:	cbnz	w0, 40dd60 <ferror@plt+0xb2c0>
  40dce8:	stp	x29, x30, [sp, #-48]!
  40dcec:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40dcf0:	add	x0, x0, #0x75f
  40dcf4:	mov	x29, sp
  40dcf8:	stp	x19, x20, [sp, #16]
  40dcfc:	str	x21, [sp, #32]
  40dd00:	bl	402a40 <getenv@plt>
  40dd04:	cbz	x0, 40dd50 <ferror@plt+0xb2b0>
  40dd08:	bl	413ec4 <ferror@plt+0x11424>
  40dd0c:	mov	x20, x0
  40dd10:	mov	x21, x0
  40dd14:	mov	x0, x21
  40dd18:	mov	w1, #0x3a                  	// #58
  40dd1c:	bl	402910 <strchr@plt>
  40dd20:	mov	x19, x0
  40dd24:	cbz	x0, 40dd2c <ferror@plt+0xb28c>
  40dd28:	strb	wzr, [x0]
  40dd2c:	mov	x0, x21
  40dd30:	add	x21, x19, #0x1
  40dd34:	bl	40dc48 <ferror@plt+0xb1a8>
  40dd38:	cbnz	x19, 40dd14 <ferror@plt+0xb274>
  40dd3c:	mov	x0, x20
  40dd40:	ldp	x19, x20, [sp, #16]
  40dd44:	ldr	x21, [sp, #32]
  40dd48:	ldp	x29, x30, [sp], #48
  40dd4c:	b	4028c0 <free@plt>
  40dd50:	ldp	x19, x20, [sp, #16]
  40dd54:	ldr	x21, [sp, #32]
  40dd58:	ldp	x29, x30, [sp], #48
  40dd5c:	ret
  40dd60:	ret
  40dd64:	stp	x29, x30, [sp, #-80]!
  40dd68:	mov	x29, sp
  40dd6c:	stp	x19, x20, [sp, #16]
  40dd70:	mov	x20, x0
  40dd74:	stp	x21, x22, [sp, #32]
  40dd78:	mov	x21, x1
  40dd7c:	stp	x23, x24, [sp, #48]
  40dd80:	str	x25, [sp, #64]
  40dd84:	cbz	x1, 40dd8c <ferror@plt+0xb2ec>
  40dd88:	str	xzr, [x1]
  40dd8c:	ldrb	w0, [x20]
  40dd90:	cbnz	w0, 40dda8 <ferror@plt+0xb308>
  40dd94:	bl	402a30 <__errno_location@plt>
  40dd98:	mov	w1, #0x2                   	// #2
  40dd9c:	str	w1, [x0]
  40dda0:	mov	x19, #0x0                   	// #0
  40dda4:	b	40ddc8 <ferror@plt+0xb328>
  40dda8:	mov	x0, x20
  40ddac:	bl	40db90 <ferror@plt+0xb0f0>
  40ddb0:	mov	x19, x0
  40ddb4:	cbz	x0, 40dde4 <ferror@plt+0xb344>
  40ddb8:	cbz	x21, 40ddc8 <ferror@plt+0xb328>
  40ddbc:	mov	x0, x20
  40ddc0:	bl	413ec4 <ferror@plt+0x11424>
  40ddc4:	str	x0, [x21]
  40ddc8:	mov	x0, x19
  40ddcc:	ldp	x19, x20, [sp, #16]
  40ddd0:	ldp	x21, x22, [sp, #32]
  40ddd4:	ldp	x23, x24, [sp, #48]
  40ddd8:	ldr	x25, [sp, #64]
  40dddc:	ldp	x29, x30, [sp], #80
  40dde0:	ret
  40dde4:	ldrb	w0, [x20]
  40dde8:	cmp	w0, #0x2f
  40ddec:	b.eq	40ddc8 <ferror@plt+0xb328>  // b.none
  40ddf0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40ddf4:	ldr	w0, [x0, #1664]
  40ddf8:	cbnz	w0, 40ddc8 <ferror@plt+0xb328>
  40ddfc:	bl	402a30 <__errno_location@plt>
  40de00:	mov	x23, x0
  40de04:	adrp	x0, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40de08:	ldr	w25, [x23]
  40de0c:	ldr	x24, [x0, #2800]
  40de10:	cbnz	x24, 40de1c <ferror@plt+0xb37c>
  40de14:	str	w25, [x23]
  40de18:	b	40dda0 <ferror@plt+0xb300>
  40de1c:	ldr	x0, [x24, #8]
  40de20:	mov	x1, x20
  40de24:	mov	x2, #0x0                   	// #0
  40de28:	bl	40fe8c <ferror@plt+0xd3ec>
  40de2c:	mov	x22, x0
  40de30:	bl	40db90 <ferror@plt+0xb0f0>
  40de34:	mov	x19, x0
  40de38:	cbz	x0, 40de94 <ferror@plt+0xb3f4>
  40de3c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40de40:	ldr	w0, [x0, #1676]
  40de44:	tbz	w0, #6, 40de7c <ferror@plt+0xb3dc>
  40de48:	adrp	x23, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40de4c:	ldr	x0, [x23, #2048]
  40de50:	cbz	x0, 40de7c <ferror@plt+0xb3dc>
  40de54:	bl	407efc <ferror@plt+0x545c>
  40de58:	ldr	x0, [x23, #2048]
  40de5c:	mov	x3, x22
  40de60:	mov	x2, x20
  40de64:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x24bc>
  40de68:	add	x1, x1, #0x766
  40de6c:	bl	4141fc <ferror@plt+0x1175c>
  40de70:	ldr	x1, [x23, #2048]
  40de74:	mov	w0, #0xa                   	// #10
  40de78:	bl	402500 <putc@plt>
  40de7c:	cbz	x21, 40de88 <ferror@plt+0xb3e8>
  40de80:	str	x22, [x21]
  40de84:	b	40ddc8 <ferror@plt+0xb328>
  40de88:	mov	x0, x22
  40de8c:	bl	4028c0 <free@plt>
  40de90:	b	40ddc8 <ferror@plt+0xb328>
  40de94:	mov	x0, x22
  40de98:	bl	4028c0 <free@plt>
  40de9c:	ldr	x24, [x24]
  40dea0:	b	40de10 <ferror@plt+0xb370>
  40dea4:	stp	x29, x30, [sp, #-32]!
  40dea8:	mov	x1, #0x8                   	// #8
  40deac:	mov	x29, sp
  40deb0:	str	x19, [sp, #16]
  40deb4:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40deb8:	ldr	x0, [x19, #872]
  40debc:	bl	413d3c <ferror@plt+0x1129c>
  40dec0:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40dec4:	ldr	x2, [x19, #872]
  40dec8:	str	x0, [x1, #3512]
  40decc:	mov	x1, #0x0                   	// #0
  40ded0:	cmp	x2, x1
  40ded4:	b.ne	40dee4 <ferror@plt+0xb444>  // b.any
  40ded8:	ldr	x19, [sp, #16]
  40dedc:	ldp	x29, x30, [sp], #32
  40dee0:	ret
  40dee4:	str	xzr, [x0, x1, lsl #3]
  40dee8:	add	x1, x1, #0x1
  40deec:	b	40ded0 <ferror@plt+0xb430>
  40def0:	stp	x29, x30, [sp, #-32]!
  40def4:	mov	x29, sp
  40def8:	str	x19, [sp, #16]
  40defc:	mov	x19, x0
  40df00:	ldr	w0, [x0, #12]
  40df04:	cmp	w0, #0x0
  40df08:	b.le	40df24 <ferror@plt+0xb484>
  40df0c:	ldrb	w0, [x19, #8]
  40df10:	orr	w0, w0, #0x10
  40df14:	strb	w0, [x19, #8]
  40df18:	ldr	x19, [sp, #16]
  40df1c:	ldp	x29, x30, [sp], #32
  40df20:	ret
  40df24:	ldr	x0, [x19, #16]
  40df28:	bl	4028c0 <free@plt>
  40df2c:	ldr	w0, [x19, #24]
  40df30:	cmp	w0, #0x1
  40df34:	b.ne	40df40 <ferror@plt+0xb4a0>  // b.any
  40df38:	ldr	x0, [x19, #32]
  40df3c:	bl	4028c0 <free@plt>
  40df40:	mov	x0, x19
  40df44:	ldr	x19, [sp, #16]
  40df48:	ldp	x29, x30, [sp], #32
  40df4c:	b	4028c0 <free@plt>
  40df50:	stp	x29, x30, [sp, #-64]!
  40df54:	mov	x2, x0
  40df58:	mov	x29, sp
  40df5c:	stp	x23, x24, [sp, #48]
  40df60:	mov	w23, w1
  40df64:	stp	x19, x20, [sp, #16]
  40df68:	stp	x21, x22, [sp, #32]
  40df6c:	mov	x22, x0
  40df70:	mov	x0, #0x0                   	// #0
  40df74:	ldrb	w1, [x2], #1
  40df78:	cbnz	w1, 40dfb8 <ferror@plt+0xb518>
  40df7c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40df80:	mov	x24, #0x0                   	// #0
  40df84:	mov	w20, #0x1                   	// #1
  40df88:	ldr	x2, [x1, #872]
  40df8c:	udiv	x1, x0, x2
  40df90:	msub	x0, x1, x2, x0
  40df94:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40df98:	ldr	x1, [x1, #3512]
  40df9c:	ldr	x19, [x1, x0, lsl #3]
  40dfa0:	add	x21, x1, x0, lsl #3
  40dfa4:	cbnz	x19, 40dfc4 <ferror@plt+0xb524>
  40dfa8:	cbnz	w23, 40dfe4 <ferror@plt+0xb544>
  40dfac:	cbz	w20, 40e084 <ferror@plt+0xb5e4>
  40dfb0:	mov	x19, #0x0                   	// #0
  40dfb4:	b	40e084 <ferror@plt+0xb5e4>
  40dfb8:	ror	x0, x0, #57
  40dfbc:	add	x0, x0, w1, uxtb
  40dfc0:	b	40df74 <ferror@plt+0xb4d4>
  40dfc4:	ldr	x0, [x19, #16]
  40dfc8:	mov	x1, x22
  40dfcc:	bl	402860 <strcmp@plt>
  40dfd0:	mov	w20, w0
  40dfd4:	tbz	w0, #31, 40dfa8 <ferror@plt+0xb508>
  40dfd8:	mov	x24, x19
  40dfdc:	ldr	x19, [x19]
  40dfe0:	b	40dfa4 <ferror@plt+0xb504>
  40dfe4:	cmp	x24, #0x0
  40dfe8:	sub	w1, w23, #0x1
  40dfec:	csel	x21, x21, x24, eq  // eq = none
  40dff0:	cmp	w1, #0x3
  40dff4:	b.hi	40e1c4 <ferror@plt+0xb724>  // b.pmore
  40dff8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40dffc:	add	x0, x0, #0x7b8
  40e000:	ldrb	w0, [x0, w1, uxtw]
  40e004:	adr	x1, 40e010 <ferror@plt+0xb570>
  40e008:	add	x0, x1, w0, sxtb #2
  40e00c:	br	x0
  40e010:	cmp	w20, #0x0
  40e014:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40e018:	b.eq	40e09c <ferror@plt+0xb5fc>  // b.none
  40e01c:	ldr	w0, [x19, #12]
  40e020:	cmp	w0, #0x0
  40e024:	b.le	40e084 <ferror@plt+0xb5e4>
  40e028:	ldrb	w0, [x19, #8]
  40e02c:	orr	w0, w0, #0x10
  40e030:	strb	w0, [x19, #8]
  40e034:	mov	x0, #0x28                  	// #40
  40e038:	bl	413d0c <ferror@plt+0x1126c>
  40e03c:	mov	x20, x0
  40e040:	ldrb	w0, [x0, #8]
  40e044:	str	wzr, [x20, #24]
  40e048:	ldrb	w1, [x19, #8]
  40e04c:	bfxil	w0, w1, #0, #1
  40e050:	strb	w0, [x20, #8]
  40e054:	mov	x0, x22
  40e058:	bl	413ec4 <ferror@plt+0x11424>
  40e05c:	str	x0, [x20, #16]
  40e060:	ldrb	w0, [x20, #8]
  40e064:	str	wzr, [x20, #12]
  40e068:	and	w0, w0, #0xffffffe1
  40e06c:	strb	w0, [x20, #8]
  40e070:	ldr	x0, [x19]
  40e074:	str	x0, [x20]
  40e078:	str	xzr, [x19]
  40e07c:	mov	x19, x20
  40e080:	str	x20, [x21]
  40e084:	mov	x0, x19
  40e088:	ldp	x19, x20, [sp, #16]
  40e08c:	ldp	x21, x22, [sp, #32]
  40e090:	ldp	x23, x24, [sp, #48]
  40e094:	ldp	x29, x30, [sp], #64
  40e098:	ret
  40e09c:	mov	x0, #0x28                  	// #40
  40e0a0:	bl	413d0c <ferror@plt+0x1126c>
  40e0a4:	mov	x19, x0
  40e0a8:	ldrb	w0, [x0, #8]
  40e0ac:	and	w0, w0, #0xfffffffe
  40e0b0:	strb	w0, [x19, #8]
  40e0b4:	mov	x0, x22
  40e0b8:	str	wzr, [x19, #24]
  40e0bc:	bl	413ec4 <ferror@plt+0x11424>
  40e0c0:	str	x0, [x19, #16]
  40e0c4:	ldrb	w0, [x19, #8]
  40e0c8:	cmp	w20, #0x0
  40e0cc:	str	wzr, [x19, #12]
  40e0d0:	ccmp	w23, #0x3, #0x0, eq  // eq = none
  40e0d4:	and	w0, w0, #0xffffffe1
  40e0d8:	strb	w0, [x19, #8]
  40e0dc:	ldr	x0, [x21]
  40e0e0:	str	x0, [x19]
  40e0e4:	str	x19, [x21]
  40e0e8:	b.ne	40e084 <ferror@plt+0xb5e4>  // b.any
  40e0ec:	ldr	x1, [x19]
  40e0f0:	ldrb	w0, [x1, #8]
  40e0f4:	orr	w0, w0, #0x2
  40e0f8:	strb	w0, [x1, #8]
  40e0fc:	ldrb	w1, [x19, #8]
  40e100:	bfxil	w1, w0, #0, #1
  40e104:	strb	w1, [x19, #8]
  40e108:	b	40e084 <ferror@plt+0xb5e4>
  40e10c:	cmp	w20, #0x0
  40e110:	cset	w0, ne  // ne = any
  40e114:	cmp	x19, #0x0
  40e118:	csinc	w0, w0, wzr, ne  // ne = any
  40e11c:	cbnz	w0, 40dfb0 <ferror@plt+0xb510>
  40e120:	ldr	x1, [x19]
  40e124:	ldrb	w20, [x19, #8]
  40e128:	and	w20, w20, #0x1
  40e12c:	cbz	x1, 40e150 <ferror@plt+0xb6b0>
  40e130:	ldrb	w0, [x1, #8]
  40e134:	tbz	w0, #1, 40e150 <ferror@plt+0xb6b0>
  40e138:	cmp	w23, #0x4
  40e13c:	b.ne	40e150 <ferror@plt+0xb6b0>  // b.any
  40e140:	and	w0, w0, #0xfffffffd
  40e144:	bfxil	w0, w20, #0, #1
  40e148:	mov	w20, #0x0                   	// #0
  40e14c:	strb	w0, [x1, #8]
  40e150:	ldr	x0, [x19]
  40e154:	str	x0, [x21]
  40e158:	mov	x0, x19
  40e15c:	bl	40def0 <ferror@plt+0xb450>
  40e160:	ldr	x19, [x21]
  40e164:	cbz	x19, 40e178 <ferror@plt+0xb6d8>
  40e168:	ldrb	w0, [x19, #8]
  40e16c:	tbz	w0, #1, 40e178 <ferror@plt+0xb6d8>
  40e170:	cmp	w23, #0x2
  40e174:	b.eq	40e150 <ferror@plt+0xb6b0>  // b.none
  40e178:	cbz	w20, 40dfb0 <ferror@plt+0xb510>
  40e17c:	mov	x0, #0x28                  	// #40
  40e180:	bl	413d0c <ferror@plt+0x1126c>
  40e184:	mov	x19, x0
  40e188:	ldrb	w0, [x0, #8]
  40e18c:	orr	w0, w0, #0x1
  40e190:	strb	w0, [x19, #8]
  40e194:	mov	x0, x22
  40e198:	str	wzr, [x19, #24]
  40e19c:	bl	413ec4 <ferror@plt+0x11424>
  40e1a0:	str	x0, [x19, #16]
  40e1a4:	ldrb	w0, [x19, #8]
  40e1a8:	str	wzr, [x19, #12]
  40e1ac:	and	w0, w0, #0xffffffe1
  40e1b0:	strb	w0, [x19, #8]
  40e1b4:	ldr	x0, [x21]
  40e1b8:	str	x0, [x19]
  40e1bc:	str	x19, [x21]
  40e1c0:	b	40dfb0 <ferror@plt+0xb510>
  40e1c4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40e1c8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40e1cc:	add	x2, x2, #0x786
  40e1d0:	mov	w1, #0x0                   	// #0
  40e1d4:	ldr	w0, [x0, #1660]
  40e1d8:	bl	403488 <ferror@plt+0x9e8>
  40e1dc:	bl	4027d0 <abort@plt>
  40e1e0:	stp	x29, x30, [sp, #-64]!
  40e1e4:	mov	x29, sp
  40e1e8:	stp	x19, x20, [sp, #16]
  40e1ec:	mov	x20, x0
  40e1f0:	mov	x19, #0x0                   	// #0
  40e1f4:	stp	x21, x22, [sp, #32]
  40e1f8:	mov	x21, x1
  40e1fc:	adrp	x22, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40e200:	stp	x23, x24, [sp, #48]
  40e204:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0xaba8>
  40e208:	ldr	x0, [x22, #872]
  40e20c:	cmp	x0, x19
  40e210:	b.hi	40e228 <ferror@plt+0xb788>  // b.pmore
  40e214:	ldp	x19, x20, [sp, #16]
  40e218:	ldp	x21, x22, [sp, #32]
  40e21c:	ldp	x23, x24, [sp, #48]
  40e220:	ldp	x29, x30, [sp], #64
  40e224:	ret
  40e228:	ldr	x0, [x23, #3512]
  40e22c:	ldr	x0, [x0, x19, lsl #3]
  40e230:	cbnz	x0, 40e23c <ferror@plt+0xb79c>
  40e234:	add	x19, x19, #0x1
  40e238:	b	40e208 <ferror@plt+0xb768>
  40e23c:	ldr	x24, [x0]
  40e240:	mov	x1, x21
  40e244:	blr	x20
  40e248:	mov	x0, x24
  40e24c:	b	40e230 <ferror@plt+0xb790>
  40e250:	ldr	x0, [x0, #32]
  40e254:	ret
  40e258:	stp	x29, x30, [sp, #-48]!
  40e25c:	mov	x29, sp
  40e260:	stp	x19, x20, [sp, #16]
  40e264:	mov	x20, x1
  40e268:	ldr	x19, [x0, #24]
  40e26c:	str	x21, [sp, #32]
  40e270:	ldr	x21, [x0, #8]
  40e274:	cbnz	x19, 40e280 <ferror@plt+0xb7e0>
  40e278:	mov	w0, #0x0                   	// #0
  40e27c:	b	40e2b8 <ferror@plt+0xb818>
  40e280:	ldr	x0, [x19, #32]
  40e284:	cbz	x21, 40e2a0 <ferror@plt+0xb800>
  40e288:	mov	x1, x20
  40e28c:	blr	x21
  40e290:	cmp	w0, #0x0
  40e294:	b.ge	40e2c8 <ferror@plt+0xb828>  // b.tcont
  40e298:	ldr	x19, [x19, #8]
  40e29c:	b	40e274 <ferror@plt+0xb7d4>
  40e2a0:	cmp	x20, x0
  40e2a4:	b.cs	40e2b0 <ferror@plt+0xb810>  // b.hs, b.nlast
  40e2a8:	ldr	x19, [x19]
  40e2ac:	b	40e274 <ferror@plt+0xb7d4>
  40e2b0:	b.hi	40e298 <ferror@plt+0xb7f8>  // b.pmore
  40e2b4:	mov	w0, #0x1                   	// #1
  40e2b8:	ldp	x19, x20, [sp, #16]
  40e2bc:	ldr	x21, [sp, #32]
  40e2c0:	ldp	x29, x30, [sp], #48
  40e2c4:	ret
  40e2c8:	b.ne	40e2a8 <ferror@plt+0xb808>  // b.any
  40e2cc:	b	40e2b4 <ferror@plt+0xb814>
  40e2d0:	stp	x29, x30, [sp, #-64]!
  40e2d4:	mov	x29, sp
  40e2d8:	stp	x19, x20, [sp, #16]
  40e2dc:	ldr	x19, [x0, #24]
  40e2e0:	stp	x21, x22, [sp, #32]
  40e2e4:	mov	x22, x1
  40e2e8:	stp	x23, x24, [sp, #48]
  40e2ec:	mov	x23, x2
  40e2f0:	mov	x24, x3
  40e2f4:	cbnz	x19, 40e300 <ferror@plt+0xb860>
  40e2f8:	mov	w21, #0x0                   	// #0
  40e2fc:	b	40e32c <ferror@plt+0xb88c>
  40e300:	ldr	x0, [x19, #32]
  40e304:	mov	x1, x23
  40e308:	blr	x22
  40e30c:	ands	w21, w0, #0xff
  40e310:	b.ne	40e31c <ferror@plt+0xb87c>  // b.any
  40e314:	ldr	x19, [x19, #8]
  40e318:	b	40e2f4 <ferror@plt+0xb854>
  40e31c:	ldr	x20, [x19]
  40e320:	cbnz	x20, 40e344 <ferror@plt+0xb8a4>
  40e324:	ldr	x0, [x19, #32]
  40e328:	str	x0, [x24]
  40e32c:	mov	w0, w21
  40e330:	ldp	x19, x20, [sp, #16]
  40e334:	ldp	x21, x22, [sp, #32]
  40e338:	ldp	x23, x24, [sp, #48]
  40e33c:	ldp	x29, x30, [sp], #64
  40e340:	ret
  40e344:	ldr	x0, [x20, #32]
  40e348:	mov	x1, x23
  40e34c:	blr	x22
  40e350:	ands	w0, w0, #0xff
  40e354:	ldp	x2, x1, [x20]
  40e358:	csel	x20, x20, x19, ne  // ne = any
  40e35c:	cmp	w0, #0x0
  40e360:	mov	x19, x20
  40e364:	csel	x20, x2, x1, ne  // ne = any
  40e368:	b	40e320 <ferror@plt+0xb880>
  40e36c:	ldr	x1, [x0, #24]
  40e370:	ldr	x2, [x0]
  40e374:	cbz	x1, 40e388 <ferror@plt+0xb8e8>
  40e378:	mov	x3, x1
  40e37c:	ldr	x1, [x1]
  40e380:	cbnz	x1, 40e378 <ferror@plt+0xb8d8>
  40e384:	mov	x1, x3
  40e388:	stp	x2, x0, [x8]
  40e38c:	stp	x1, xzr, [x8, #24]
  40e390:	ret
  40e394:	ldp	x2, x3, [x0, #24]
  40e398:	cmp	x2, x3
  40e39c:	b.eq	40e3e4 <ferror@plt+0xb944>  // b.none
  40e3a0:	ldr	x3, [x2, #32]
  40e3a4:	str	x3, [x1]
  40e3a8:	ldr	x1, [x2, #8]
  40e3ac:	cbz	x1, 40e3c8 <ferror@plt+0xb928>
  40e3b0:	mov	x2, x1
  40e3b4:	ldr	x1, [x1]
  40e3b8:	cbnz	x1, 40e3b0 <ferror@plt+0xb910>
  40e3bc:	str	x2, [x0, #24]
  40e3c0:	mov	w0, #0x1                   	// #1
  40e3c4:	ret
  40e3c8:	mov	x1, x2
  40e3cc:	ldr	x2, [x2, #16]
  40e3d0:	cbz	x2, 40e3bc <ferror@plt+0xb91c>
  40e3d4:	ldr	x3, [x2, #8]
  40e3d8:	cmp	x3, x1
  40e3dc:	b.eq	40e3c8 <ferror@plt+0xb928>  // b.none
  40e3e0:	b	40e3bc <ferror@plt+0xb91c>
  40e3e4:	mov	w0, #0x0                   	// #0
  40e3e8:	b	40e3c4 <ferror@plt+0xb924>
  40e3ec:	ret
  40e3f0:	stp	x29, x30, [sp, #-48]!
  40e3f4:	mov	x29, sp
  40e3f8:	stp	x19, x20, [sp, #16]
  40e3fc:	mov	x20, x0
  40e400:	ldr	x0, [x0]
  40e404:	stp	x21, x22, [sp, #32]
  40e408:	mov	x22, x1
  40e40c:	mov	x21, x2
  40e410:	cbz	x0, 40e448 <ferror@plt+0xb9a8>
  40e414:	mov	x1, x20
  40e418:	bl	40e3f0 <ferror@plt+0xb950>
  40e41c:	mov	w19, w0
  40e420:	ldr	x0, [x20, #8]
  40e424:	cbz	x0, 40e450 <ferror@plt+0xb9b0>
  40e428:	mov	x2, x21
  40e42c:	mov	x1, x20
  40e430:	bl	40e3f0 <ferror@plt+0xb950>
  40e434:	ldr	x2, [x20, #16]
  40e438:	sub	w1, w0, w19
  40e43c:	cmp	x2, x22
  40e440:	b.eq	40e458 <ferror@plt+0xb9b8>  // b.none
  40e444:	bl	4027d0 <abort@plt>
  40e448:	mov	w19, #0x0                   	// #0
  40e44c:	b	40e420 <ferror@plt+0xb980>
  40e450:	mov	w0, #0x0                   	// #0
  40e454:	b	40e434 <ferror@plt+0xb994>
  40e458:	add	w2, w1, #0x1
  40e45c:	cmp	w2, #0x2
  40e460:	b.hi	40e444 <ferror@plt+0xb9a4>  // b.pmore
  40e464:	ldr	w2, [x20, #24]
  40e468:	cmp	w2, w1
  40e46c:	b.ne	40e444 <ferror@plt+0xb9a4>  // b.any
  40e470:	ldr	x1, [x21]
  40e474:	cmp	w19, w0
  40e478:	csel	w0, w19, w0, cs  // cs = hs, nlast
  40e47c:	add	x1, x1, #0x1
  40e480:	add	w0, w0, #0x1
  40e484:	ldp	x19, x20, [sp, #16]
  40e488:	str	x1, [x21]
  40e48c:	ldp	x21, x22, [sp, #32]
  40e490:	ldp	x29, x30, [sp], #48
  40e494:	ret
  40e498:	add	x0, x0, #0x18
  40e49c:	mov	w9, #0x1                   	// #1
  40e4a0:	ldp	x5, x4, [x3]
  40e4a4:	ldr	w8, [x3, #24]
  40e4a8:	cbnz	x5, 40e4b0 <ferror@plt+0xba10>
  40e4ac:	cbz	x4, 40e524 <ferror@plt+0xba84>
  40e4b0:	cmp	x1, x4
  40e4b4:	cneg	w1, w2, ne  // ne = any
  40e4b8:	add	w6, w1, w8
  40e4bc:	str	w6, [x3, #24]
  40e4c0:	cmp	w1, w8
  40e4c4:	b.ne	40e658 <ferror@plt+0xbbb8>  // b.any
  40e4c8:	ldr	x6, [x3, #16]
  40e4cc:	cbnz	x6, 40e52c <ferror@plt+0xba8c>
  40e4d0:	mov	x7, x0
  40e4d4:	tbz	w8, #31, 40e5bc <ferror@plt+0xbb1c>
  40e4d8:	ldr	w4, [x5, #24]
  40e4dc:	ldr	x1, [x5, #8]
  40e4e0:	cmp	w4, #0x0
  40e4e4:	b.gt	40e560 <ferror@plt+0xbac0>
  40e4e8:	str	x1, [x3]
  40e4ec:	stp	x3, x6, [x5, #8]
  40e4f0:	str	x5, [x3, #16]
  40e4f4:	cbz	x1, 40e4fc <ferror@plt+0xba5c>
  40e4f8:	str	x3, [x1, #16]
  40e4fc:	add	w1, w4, #0x1
  40e500:	str	w1, [x5, #24]
  40e504:	mvn	w4, w4
  40e508:	str	w4, [x3, #24]
  40e50c:	ldr	w1, [x5, #24]
  40e510:	str	x5, [x7]
  40e514:	sub	w2, w1, w2, lsr #31
  40e518:	ldr	x1, [x7]
  40e51c:	cbnz	w2, 40e67c <ferror@plt+0xbbdc>
  40e520:	ret
  40e524:	neg	w1, w8
  40e528:	b	40e4b8 <ferror@plt+0xba18>
  40e52c:	ldr	x1, [x6]
  40e530:	cmp	x1, x3
  40e534:	b.ne	40e540 <ferror@plt+0xbaa0>  // b.any
  40e538:	mov	x7, x6
  40e53c:	b	40e4d4 <ferror@plt+0xba34>
  40e540:	ldr	x1, [x6, #8]
  40e544:	cmp	x1, x3
  40e548:	b.ne	40e554 <ferror@plt+0xbab4>  // b.any
  40e54c:	add	x7, x6, #0x8
  40e550:	b	40e4d4 <ferror@plt+0xba34>
  40e554:	stp	x29, x30, [sp, #-16]!
  40e558:	mov	x29, sp
  40e55c:	bl	4027d0 <abort@plt>
  40e560:	ldr	x8, [x1]
  40e564:	str	x8, [x5, #8]
  40e568:	ldr	x4, [x1, #8]
  40e56c:	str	x4, [x3]
  40e570:	stp	x5, x3, [x1]
  40e574:	str	x6, [x1, #16]
  40e578:	cbz	x8, 40e580 <ferror@plt+0xbae0>
  40e57c:	str	x5, [x8, #16]
  40e580:	cbz	x4, 40e588 <ferror@plt+0xbae8>
  40e584:	str	x3, [x4, #16]
  40e588:	ldr	w4, [x1, #24]
  40e58c:	str	x1, [x5, #16]
  40e590:	cmp	w4, #0x0
  40e594:	str	x1, [x3, #16]
  40e598:	csetm	w4, gt
  40e59c:	str	w4, [x5, #24]
  40e5a0:	ldr	w4, [x1, #24]
  40e5a4:	lsr	w4, w4, #31
  40e5a8:	str	w4, [x3, #24]
  40e5ac:	str	wzr, [x1, #24]
  40e5b0:	asr	w2, w2, #31
  40e5b4:	str	x1, [x7]
  40e5b8:	b	40e518 <ferror@plt+0xba78>
  40e5bc:	ldr	w5, [x4, #24]
  40e5c0:	ldr	x1, [x4]
  40e5c4:	tbnz	w5, #31, 40e608 <ferror@plt+0xbb68>
  40e5c8:	str	x1, [x3, #8]
  40e5cc:	str	x3, [x4]
  40e5d0:	str	x6, [x4, #16]
  40e5d4:	str	x4, [x3, #16]
  40e5d8:	cbz	x1, 40e5e0 <ferror@plt+0xbb40>
  40e5dc:	str	x3, [x1, #16]
  40e5e0:	sub	w1, w5, #0x1
  40e5e4:	str	w1, [x4, #24]
  40e5e8:	sub	w5, w9, w5
  40e5ec:	str	w5, [x3, #24]
  40e5f0:	cmp	w2, #0x0
  40e5f4:	ldr	w1, [x4, #24]
  40e5f8:	str	x4, [x7]
  40e5fc:	neg	w3, w1
  40e600:	csinv	w2, w3, w1, ge  // ge = tcont
  40e604:	b	40e518 <ferror@plt+0xba78>
  40e608:	ldr	x8, [x1]
  40e60c:	str	x8, [x3, #8]
  40e610:	ldr	x5, [x1, #8]
  40e614:	str	x5, [x4]
  40e618:	stp	x3, x4, [x1]
  40e61c:	str	x6, [x1, #16]
  40e620:	cbz	x8, 40e628 <ferror@plt+0xbb88>
  40e624:	str	x3, [x8, #16]
  40e628:	cbz	x5, 40e630 <ferror@plt+0xbb90>
  40e62c:	str	x4, [x5, #16]
  40e630:	ldr	w5, [x1, #24]
  40e634:	str	x1, [x3, #16]
  40e638:	cmp	w5, #0x0
  40e63c:	str	x1, [x4, #16]
  40e640:	csetm	w5, gt
  40e644:	str	w5, [x3, #24]
  40e648:	ldr	w3, [x1, #24]
  40e64c:	lsr	w3, w3, #31
  40e650:	str	w3, [x4, #24]
  40e654:	b	40e5ac <ferror@plt+0xbb0c>
  40e658:	tbz	w2, #31, 40e664 <ferror@plt+0xbbc4>
  40e65c:	cbnz	w8, 40e674 <ferror@plt+0xbbd4>
  40e660:	ret
  40e664:	cmp	w6, #0x0
  40e668:	mov	x1, x3
  40e66c:	cset	w2, ne  // ne = any
  40e670:	b	40e51c <ferror@plt+0xba7c>
  40e674:	mov	x1, x3
  40e678:	mov	w2, #0xffffffff            	// #-1
  40e67c:	ldr	x3, [x1, #16]
  40e680:	cbnz	x3, 40e4a0 <ferror@plt+0xba00>
  40e684:	ret
  40e688:	sub	sp, sp, #0x570
  40e68c:	add	x1, sp, #0x40
  40e690:	stp	x29, x30, [sp]
  40e694:	mov	x29, sp
  40e698:	ldr	x2, [x0, #24]
  40e69c:	stp	x19, x20, [sp, #16]
  40e6a0:	mov	x19, x0
  40e6a4:	str	x23, [sp, #48]
  40e6a8:	mov	x23, x1
  40e6ac:	stp	x21, x22, [sp, #32]
  40e6b0:	mov	w22, #0x1                   	// #1
  40e6b4:	cbz	x2, 40e6f8 <ferror@plt+0xbc58>
  40e6b8:	add	x1, x1, #0x10
  40e6bc:	stur	x2, [x1, #-16]
  40e6c0:	sturb	wzr, [x1, #-8]
  40e6c4:	ldr	x2, [x2]
  40e6c8:	b	40e6b4 <ferror@plt+0xbc14>
  40e6cc:	ldurb	w0, [x1, #-8]
  40e6d0:	sub	x21, x1, #0x10
  40e6d4:	ldur	x20, [x1, #-16]
  40e6d8:	cbz	w0, 40e71c <ferror@plt+0xbc7c>
  40e6dc:	ldr	x1, [x19, #16]
  40e6e0:	cbz	x1, 40e6ec <ferror@plt+0xbc4c>
  40e6e4:	ldr	x0, [x20, #32]
  40e6e8:	blr	x1
  40e6ec:	mov	x0, x20
  40e6f0:	bl	4028c0 <free@plt>
  40e6f4:	mov	x1, x21
  40e6f8:	cmp	x1, x23
  40e6fc:	b.ne	40e6cc <ferror@plt+0xbc2c>  // b.any
  40e700:	mov	x0, x19
  40e704:	ldp	x29, x30, [sp]
  40e708:	ldp	x19, x20, [sp, #16]
  40e70c:	ldp	x21, x22, [sp, #32]
  40e710:	ldr	x23, [sp, #48]
  40e714:	add	sp, sp, #0x570
  40e718:	b	4028c0 <free@plt>
  40e71c:	strb	w22, [x21, #8]
  40e720:	ldr	x2, [x20, #8]
  40e724:	b	40e6b4 <ferror@plt+0xbc14>
  40e728:	stp	x29, x30, [sp, #-48]!
  40e72c:	mov	x29, sp
  40e730:	stp	x19, x20, [sp, #16]
  40e734:	mov	x20, x0
  40e738:	stp	x21, x22, [sp, #32]
  40e73c:	mov	x21, x1
  40e740:	ldr	x22, [x0, #8]
  40e744:	ldr	x19, [x0, #24]
  40e748:	cbnz	x19, 40e760 <ferror@plt+0xbcc0>
  40e74c:	mov	w0, #0x0                   	// #0
  40e750:	ldp	x19, x20, [sp, #16]
  40e754:	ldp	x21, x22, [sp, #32]
  40e758:	ldp	x29, x30, [sp], #48
  40e75c:	ret
  40e760:	ldr	x0, [x19, #32]
  40e764:	cbz	x22, 40e780 <ferror@plt+0xbce0>
  40e768:	mov	x1, x21
  40e76c:	blr	x22
  40e770:	cmp	w0, #0x0
  40e774:	b.ge	40e7dc <ferror@plt+0xbd3c>  // b.tcont
  40e778:	ldr	x19, [x19, #8]
  40e77c:	b	40e748 <ferror@plt+0xbca8>
  40e780:	cmp	x21, x0
  40e784:	b.cs	40e790 <ferror@plt+0xbcf0>  // b.hs, b.nlast
  40e788:	ldr	x19, [x19]
  40e78c:	b	40e748 <ferror@plt+0xbca8>
  40e790:	b.hi	40e778 <ferror@plt+0xbcd8>  // b.pmore
  40e794:	ldp	x4, x1, [x19]
  40e798:	ldr	x3, [x19, #16]
  40e79c:	cbnz	x4, 40e804 <ferror@plt+0xbd64>
  40e7a0:	cbz	x1, 40e7a8 <ferror@plt+0xbd08>
  40e7a4:	str	x3, [x1, #16]
  40e7a8:	cbnz	x3, 40e7e4 <ferror@plt+0xbd44>
  40e7ac:	str	x1, [x20, #24]
  40e7b0:	ldr	x0, [x20, #32]
  40e7b4:	ldr	x1, [x20, #16]
  40e7b8:	sub	x0, x0, #0x1
  40e7bc:	str	x0, [x20, #32]
  40e7c0:	cbz	x1, 40e7cc <ferror@plt+0xbd2c>
  40e7c4:	ldr	x0, [x19, #32]
  40e7c8:	blr	x1
  40e7cc:	mov	x0, x19
  40e7d0:	bl	4028c0 <free@plt>
  40e7d4:	mov	w0, #0x1                   	// #1
  40e7d8:	b	40e750 <ferror@plt+0xbcb0>
  40e7dc:	b.ne	40e788 <ferror@plt+0xbce8>  // b.any
  40e7e0:	b	40e794 <ferror@plt+0xbcf4>
  40e7e4:	ldr	x0, [x3]
  40e7e8:	cmp	x19, x0
  40e7ec:	b.ne	40e7fc <ferror@plt+0xbd5c>  // b.any
  40e7f0:	str	x1, [x3]
  40e7f4:	mov	w2, #0xffffffff            	// #-1
  40e7f8:	b	40e830 <ferror@plt+0xbd90>
  40e7fc:	str	x1, [x3, #8]
  40e800:	b	40e7f4 <ferror@plt+0xbd54>
  40e804:	cbnz	x1, 40e844 <ferror@plt+0xbda4>
  40e808:	str	x3, [x4, #16]
  40e80c:	cbnz	x3, 40e818 <ferror@plt+0xbd78>
  40e810:	str	x4, [x20, #24]
  40e814:	b	40e7b0 <ferror@plt+0xbd10>
  40e818:	ldr	x0, [x3]
  40e81c:	cmp	x19, x0
  40e820:	b.ne	40e83c <ferror@plt+0xbd9c>  // b.any
  40e824:	str	x4, [x3]
  40e828:	mov	x1, x4
  40e82c:	mov	w2, #0xffffffff            	// #-1
  40e830:	mov	x0, x20
  40e834:	bl	40e498 <ferror@plt+0xb9f8>
  40e838:	b	40e7b0 <ferror@plt+0xbd10>
  40e83c:	str	x4, [x3, #8]
  40e840:	b	40e828 <ferror@plt+0xbd88>
  40e844:	mov	x1, x4
  40e848:	mov	x0, x1
  40e84c:	ldr	x1, [x1, #8]
  40e850:	cbnz	x1, 40e848 <ferror@plt+0xbda8>
  40e854:	ldr	x2, [x0, #16]
  40e858:	ldr	x1, [x0]
  40e85c:	cmp	x19, x2
  40e860:	b.eq	40e878 <ferror@plt+0xbdd8>  // b.none
  40e864:	cbz	x1, 40e86c <ferror@plt+0xbdcc>
  40e868:	str	x2, [x1, #16]
  40e86c:	str	x1, [x2, #8]
  40e870:	str	x4, [x0]
  40e874:	str	x0, [x4, #16]
  40e878:	ldr	x4, [x19, #8]
  40e87c:	str	x4, [x0, #8]
  40e880:	str	x0, [x4, #16]
  40e884:	ldr	w4, [x19, #24]
  40e888:	str	x3, [x0, #16]
  40e88c:	str	w4, [x0, #24]
  40e890:	cbnz	x3, 40e8a4 <ferror@plt+0xbe04>
  40e894:	str	x0, [x20, #24]
  40e898:	cmp	x19, x2
  40e89c:	csel	x3, x2, x0, ne  // ne = any
  40e8a0:	b	40e7f4 <ferror@plt+0xbd54>
  40e8a4:	ldr	x4, [x3]
  40e8a8:	cmp	x19, x4
  40e8ac:	b.ne	40e8b8 <ferror@plt+0xbe18>  // b.any
  40e8b0:	str	x0, [x3]
  40e8b4:	b	40e898 <ferror@plt+0xbdf8>
  40e8b8:	str	x0, [x3, #8]
  40e8bc:	b	40e898 <ferror@plt+0xbdf8>
  40e8c0:	stp	x29, x30, [sp, #-48]!
  40e8c4:	mov	x29, sp
  40e8c8:	stp	x19, x20, [sp, #16]
  40e8cc:	mov	x20, x0
  40e8d0:	ldr	x19, [x0, #24]
  40e8d4:	stp	x21, x22, [sp, #32]
  40e8d8:	mov	x21, x1
  40e8dc:	cbnz	x19, 40e928 <ferror@plt+0xbe88>
  40e8e0:	mov	x0, #0x28                  	// #40
  40e8e4:	bl	402600 <malloc@plt>
  40e8e8:	cbnz	x0, 40e900 <ferror@plt+0xbe60>
  40e8ec:	mov	w0, #0xffffffff            	// #-1
  40e8f0:	ldp	x19, x20, [sp, #16]
  40e8f4:	ldp	x21, x22, [sp, #32]
  40e8f8:	ldp	x29, x30, [sp], #48
  40e8fc:	ret
  40e900:	stp	xzr, xzr, [x0]
  40e904:	str	xzr, [x0, #16]
  40e908:	str	wzr, [x0, #24]
  40e90c:	str	x0, [x20, #24]
  40e910:	str	x21, [x0, #32]
  40e914:	ldr	x0, [x20, #32]
  40e918:	add	x0, x0, #0x1
  40e91c:	str	x0, [x20, #32]
  40e920:	mov	w0, #0x1                   	// #1
  40e924:	b	40e8f0 <ferror@plt+0xbe50>
  40e928:	ldr	x22, [x0, #8]
  40e92c:	ldr	x0, [x19, #32]
  40e930:	cbz	x22, 40e98c <ferror@plt+0xbeec>
  40e934:	mov	x1, x21
  40e938:	blr	x22
  40e93c:	cmp	w0, #0x0
  40e940:	b.ge	40ea24 <ferror@plt+0xbf84>  // b.tcont
  40e944:	ldr	x0, [x19, #8]
  40e948:	cbnz	x0, 40e984 <ferror@plt+0xbee4>
  40e94c:	mov	x0, #0x28                  	// #40
  40e950:	bl	402600 <malloc@plt>
  40e954:	cbz	x0, 40e8ec <ferror@plt+0xbe4c>
  40e958:	stp	xzr, xzr, [x0]
  40e95c:	ldr	x1, [x19, #8]
  40e960:	str	wzr, [x0, #24]
  40e964:	str	x21, [x0, #32]
  40e968:	cbnz	x1, 40e9d8 <ferror@plt+0xbf38>
  40e96c:	ldr	w1, [x19, #24]
  40e970:	str	x0, [x19, #8]
  40e974:	add	w1, w1, #0x1
  40e978:	str	w1, [x19, #24]
  40e97c:	ldr	x1, [x19]
  40e980:	b	40e9f8 <ferror@plt+0xbf58>
  40e984:	mov	x19, x0
  40e988:	b	40e92c <ferror@plt+0xbe8c>
  40e98c:	cmp	x21, x0
  40e990:	b.cs	40e9cc <ferror@plt+0xbf2c>  // b.hs, b.nlast
  40e994:	ldr	x0, [x19]
  40e998:	cbnz	x0, 40e984 <ferror@plt+0xbee4>
  40e99c:	mov	x0, #0x28                  	// #40
  40e9a0:	bl	402600 <malloc@plt>
  40e9a4:	cbz	x0, 40e8ec <ferror@plt+0xbe4c>
  40e9a8:	stp	xzr, xzr, [x0]
  40e9ac:	ldr	x1, [x19]
  40e9b0:	str	wzr, [x0, #24]
  40e9b4:	str	x21, [x0, #32]
  40e9b8:	cbz	x1, 40e9e4 <ferror@plt+0xbf44>
  40e9bc:	mov	x19, x1
  40e9c0:	ldr	x1, [x1, #8]
  40e9c4:	cbnz	x1, 40e9bc <ferror@plt+0xbf1c>
  40e9c8:	b	40e96c <ferror@plt+0xbecc>
  40e9cc:	b.hi	40e944 <ferror@plt+0xbea4>  // b.pmore
  40e9d0:	mov	w0, #0x0                   	// #0
  40e9d4:	b	40e8f0 <ferror@plt+0xbe50>
  40e9d8:	mov	x19, x1
  40e9dc:	ldr	x1, [x1]
  40e9e0:	cbnz	x1, 40e9d8 <ferror@plt+0xbf38>
  40e9e4:	ldr	w1, [x19, #24]
  40e9e8:	str	x0, [x19]
  40e9ec:	sub	w1, w1, #0x1
  40e9f0:	str	w1, [x19, #24]
  40e9f4:	ldr	x1, [x19, #8]
  40e9f8:	str	x19, [x0, #16]
  40e9fc:	cmp	x1, #0x0
  40ea00:	cset	w1, eq  // eq = none
  40ea04:	cbz	w1, 40e914 <ferror@plt+0xbe74>
  40ea08:	ldr	x3, [x19, #16]
  40ea0c:	cbz	x3, 40e914 <ferror@plt+0xbe74>
  40ea10:	mov	x1, x19
  40ea14:	mov	x0, x20
  40ea18:	mov	w2, #0x1                   	// #1
  40ea1c:	bl	40e498 <ferror@plt+0xb9f8>
  40ea20:	b	40e914 <ferror@plt+0xbe74>
  40ea24:	b.ne	40e994 <ferror@plt+0xbef4>  // b.any
  40ea28:	b	40e9d0 <ferror@plt+0xbf30>
  40ea2c:	stp	x29, x30, [sp, #-48]!
  40ea30:	mov	x29, sp
  40ea34:	stp	x19, x20, [sp, #16]
  40ea38:	mov	x20, x1
  40ea3c:	mov	x19, x2
  40ea40:	str	x21, [sp, #32]
  40ea44:	mov	x21, x0
  40ea48:	mov	x0, #0x28                  	// #40
  40ea4c:	bl	402600 <malloc@plt>
  40ea50:	cbz	x0, 40ea60 <ferror@plt+0xbfc0>
  40ea54:	stp	x21, x20, [x0]
  40ea58:	stp	x19, xzr, [x0, #16]
  40ea5c:	str	xzr, [x0, #32]
  40ea60:	ldp	x19, x20, [sp, #16]
  40ea64:	ldr	x21, [sp, #32]
  40ea68:	ldp	x29, x30, [sp], #48
  40ea6c:	ret
  40ea70:	stp	x29, x30, [sp, #-48]!
  40ea74:	mov	x29, sp
  40ea78:	str	x19, [sp, #16]
  40ea7c:	mov	x19, x0
  40ea80:	ldr	x0, [x0, #24]
  40ea84:	str	xzr, [sp, #40]
  40ea88:	cbz	x0, 40ea98 <ferror@plt+0xbff8>
  40ea8c:	add	x2, sp, #0x28
  40ea90:	mov	x1, #0x0                   	// #0
  40ea94:	bl	40e3f0 <ferror@plt+0xb950>
  40ea98:	ldr	x1, [x19, #32]
  40ea9c:	ldr	x0, [sp, #40]
  40eaa0:	cmp	x1, x0
  40eaa4:	b.eq	40eaac <ferror@plt+0xc00c>  // b.none
  40eaa8:	bl	4027d0 <abort@plt>
  40eaac:	ldr	x19, [sp, #16]
  40eab0:	ldp	x29, x30, [sp], #48
  40eab4:	ret
  40eab8:	ret
  40eabc:	stp	x29, x30, [sp, #-32]!
  40eac0:	adrp	x0, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40eac4:	mov	x29, sp
  40eac8:	ldr	x1, [x0, #2832]
  40eacc:	stp	x19, x20, [sp, #16]
  40ead0:	add	x19, x0, #0xb10
  40ead4:	mov	w0, #0x0                   	// #0
  40ead8:	blr	x1
  40eadc:	bl	410040 <ferror@plt+0xd5a0>
  40eae0:	ldr	x20, [x19, #8]
  40eae4:	mov	x19, x0
  40eae8:	bl	402450 <strlen@plt>
  40eaec:	mov	x2, x0
  40eaf0:	mov	x1, x19
  40eaf4:	mov	w0, #0x2                   	// #2
  40eaf8:	bl	4027a0 <write@plt>
  40eafc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  40eb00:	add	x1, x1, #0xc30
  40eb04:	mov	x2, #0x2                   	// #2
  40eb08:	mov	w0, w2
  40eb0c:	bl	4027a0 <write@plt>
  40eb10:	mov	x0, x20
  40eb14:	bl	402450 <strlen@plt>
  40eb18:	mov	x1, x20
  40eb1c:	mov	x2, x0
  40eb20:	mov	w0, #0x2                   	// #2
  40eb24:	bl	4027a0 <write@plt>
  40eb28:	mov	x2, #0x1                   	// #1
  40eb2c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  40eb30:	mov	w0, #0x2                   	// #2
  40eb34:	add	x1, x1, #0x494
  40eb38:	bl	4027a0 <write@plt>
  40eb3c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40eb40:	ldr	w0, [x0, #884]
  40eb44:	bl	402440 <_exit@plt>
  40eb48:	stp	x29, x30, [sp, #-208]!
  40eb4c:	mov	x1, #0x0                   	// #0
  40eb50:	mov	x29, sp
  40eb54:	str	x19, [sp, #16]
  40eb58:	mov	x19, x0
  40eb5c:	adrp	x0, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40eb60:	add	x0, x0, #0xb30
  40eb64:	str	x0, [sp, #32]
  40eb68:	mov	x0, #0x4000                	// #16384
  40eb6c:	str	wzr, [sp, #40]
  40eb70:	str	x0, [sp, #48]
  40eb74:	add	x0, sp, #0x20
  40eb78:	bl	402430 <sigaltstack@plt>
  40eb7c:	cbnz	w0, 40ebe0 <ferror@plt+0xc140>
  40eb80:	cbnz	x19, 40eb8c <ferror@plt+0xc0ec>
  40eb84:	adrp	x19, 40e000 <ferror@plt+0xb560>
  40eb88:	add	x19, x19, #0xab8
  40eb8c:	adrp	x0, 432000 <__progname@@GLIBC_2.17+0x3ba8>
  40eb90:	add	x1, x0, #0xb10
  40eb94:	str	x19, [x0, #2832]
  40eb98:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40eb9c:	add	x0, x0, #0x810
  40eba0:	str	x0, [x1, #16]
  40eba4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  40eba8:	add	x0, x0, #0x81e
  40ebac:	str	x0, [x1, #8]
  40ebb0:	add	x0, sp, #0x40
  40ebb4:	bl	402640 <sigemptyset@plt>
  40ebb8:	mov	w0, #0x4                   	// #4
  40ebbc:	add	x1, sp, #0x38
  40ebc0:	movk	w0, #0xc800, lsl #16
  40ebc4:	str	w0, [sp, #192]
  40ebc8:	adrp	x0, 40e000 <ferror@plt+0xb560>
  40ebcc:	add	x0, x0, #0xabc
  40ebd0:	mov	x2, #0x0                   	// #0
  40ebd4:	str	x0, [sp, #56]
  40ebd8:	mov	w0, #0xb                   	// #11
  40ebdc:	bl	402770 <sigaction@plt>
  40ebe0:	ldr	x19, [sp, #16]
  40ebe4:	ldp	x29, x30, [sp], #208
  40ebe8:	ret
  40ebec:	mov	x1, x0
  40ebf0:	mov	x0, #0x0                   	// #0
  40ebf4:	ldrb	w2, [x1]
  40ebf8:	cbnz	w2, 40ec00 <ferror@plt+0xc160>
  40ebfc:	ret
  40ec00:	add	x1, x1, #0x1
  40ec04:	ror	x0, x0, #55
  40ec08:	add	x0, x0, w2, uxtb
  40ec0c:	b	40ebf4 <ferror@plt+0xc154>
  40ec10:	stp	x29, x30, [sp, #-32]!
  40ec14:	mov	x29, sp
  40ec18:	stp	x19, x20, [sp, #16]
  40ec1c:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40ec20:	mov	w20, w0
  40ec24:	ldr	x0, [x19, #2864]
  40ec28:	cbnz	x0, 40ec4c <ferror@plt+0xc1ac>
  40ec2c:	mov	w4, #0x0                   	// #0
  40ec30:	mov	x3, #0x0                   	// #0
  40ec34:	mov	x2, #0x0                   	// #0
  40ec38:	mov	x1, #0x0                   	// #0
  40ec3c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  40ec40:	add	x0, x0, #0x68
  40ec44:	bl	413f18 <ferror@plt+0x11478>
  40ec48:	str	x0, [x19, #2864]
  40ec4c:	ldr	x0, [x19, #2864]
  40ec50:	sxtw	x1, w20
  40ec54:	ldp	x19, x20, [sp, #16]
  40ec58:	ldp	x29, x30, [sp], #32
  40ec5c:	b	413f88 <ferror@plt+0x114e8>
  40ec60:	stp	x29, x30, [sp, #-16]!
  40ec64:	mov	x29, sp
  40ec68:	bl	402860 <strcmp@plt>
  40ec6c:	cmp	w0, #0x0
  40ec70:	cset	w0, eq  // eq = none
  40ec74:	ldp	x29, x30, [sp], #16
  40ec78:	ret
  40ec7c:	stp	x29, x30, [sp, #-176]!
  40ec80:	mov	x29, sp
  40ec84:	stp	x19, x20, [sp, #16]
  40ec88:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40ec8c:	ldr	x0, [x19, #2864]
  40ec90:	str	x21, [sp, #32]
  40ec94:	cbz	x0, 40ecd0 <ferror@plt+0xc230>
  40ec98:	add	x8, sp, #0x30
  40ec9c:	bl	411528 <ferror@plt+0xea88>
  40eca0:	add	x1, sp, #0x30
  40eca4:	add	x0, sp, #0x78
  40eca8:	mov	x2, #0x38                  	// #56
  40ecac:	bl	402420 <memcpy@plt>
  40ecb0:	add	x1, sp, #0x70
  40ecb4:	add	x0, sp, #0x78
  40ecb8:	mov	x2, #0x0                   	// #0
  40ecbc:	bl	411560 <ferror@plt+0xeac0>
  40ecc0:	tst	w0, #0xff
  40ecc4:	b.ne	40ecf4 <ferror@plt+0xc254>  // b.any
  40ecc8:	add	x0, sp, #0x78
  40eccc:	bl	411570 <ferror@plt+0xead0>
  40ecd0:	add	x19, x19, #0xb30
  40ecd4:	mov	x21, #0x0                   	// #0
  40ecd8:	ldr	x0, [x19, #16]
  40ecdc:	cmp	x0, x21
  40ece0:	b.hi	40ed00 <ferror@plt+0xc260>  // b.pmore
  40ece4:	ldp	x19, x20, [sp, #16]
  40ece8:	ldr	x21, [sp, #32]
  40ecec:	ldp	x29, x30, [sp], #176
  40ecf0:	ret
  40ecf4:	ldr	w0, [sp, #112]
  40ecf8:	bl	402760 <close@plt>
  40ecfc:	b	40ecb0 <ferror@plt+0xc210>
  40ed00:	ldr	x1, [x19, #8]
  40ed04:	lsl	x0, x21, #3
  40ed08:	ldr	x20, [x1, x0]
  40ed0c:	cbz	x20, 40ed90 <ferror@plt+0xc2f0>
  40ed10:	ldr	x0, [x20, #24]
  40ed14:	add	x8, sp, #0x30
  40ed18:	bl	411528 <ferror@plt+0xea88>
  40ed1c:	add	x1, sp, #0x30
  40ed20:	add	x0, sp, #0x78
  40ed24:	mov	x2, #0x38                  	// #56
  40ed28:	bl	402420 <memcpy@plt>
  40ed2c:	add	x1, sp, #0x70
  40ed30:	add	x0, sp, #0x78
  40ed34:	mov	x2, #0x0                   	// #0
  40ed38:	bl	411560 <ferror@plt+0xeac0>
  40ed3c:	tst	w0, #0xff
  40ed40:	b.ne	40ed98 <ferror@plt+0xc2f8>  // b.any
  40ed44:	add	x0, sp, #0x78
  40ed48:	bl	411570 <ferror@plt+0xead0>
  40ed4c:	ldr	x0, [x20, #16]
  40ed50:	add	x8, sp, #0x30
  40ed54:	bl	411528 <ferror@plt+0xea88>
  40ed58:	add	x1, sp, #0x30
  40ed5c:	add	x0, sp, #0x78
  40ed60:	mov	x2, #0x38                  	// #56
  40ed64:	bl	402420 <memcpy@plt>
  40ed68:	add	x1, sp, #0x70
  40ed6c:	add	x0, sp, #0x78
  40ed70:	mov	x2, #0x0                   	// #0
  40ed74:	bl	411560 <ferror@plt+0xeac0>
  40ed78:	tst	w0, #0xff
  40ed7c:	b.ne	40eda4 <ferror@plt+0xc304>  // b.any
  40ed80:	add	x0, sp, #0x78
  40ed84:	bl	411570 <ferror@plt+0xead0>
  40ed88:	ldr	x0, [x20]
  40ed8c:	bl	402880 <rmdir@plt>
  40ed90:	add	x21, x21, #0x1
  40ed94:	b	40ecd8 <ferror@plt+0xc238>
  40ed98:	ldr	x0, [sp, #112]
  40ed9c:	bl	402a70 <unlink@plt>
  40eda0:	b	40ed2c <ferror@plt+0xc28c>
  40eda4:	ldr	x0, [sp, #112]
  40eda8:	bl	402880 <rmdir@plt>
  40edac:	b	40ed68 <ferror@plt+0xc2c8>
  40edb0:	stp	x29, x30, [sp, #-32]!
  40edb4:	adrp	x1, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40edb8:	mov	x29, sp
  40edbc:	str	x19, [sp, #16]
  40edc0:	ldr	x19, [x1, #2864]
  40edc4:	cbnz	x19, 40edcc <ferror@plt+0xc32c>
  40edc8:	bl	4027d0 <abort@plt>
  40edcc:	sxtw	x1, w0
  40edd0:	mov	x0, x19
  40edd4:	bl	411340 <ferror@plt+0xe8a0>
  40edd8:	mov	x1, x0
  40eddc:	cbz	x0, 40edc8 <ferror@plt+0xc328>
  40ede0:	mov	x0, x19
  40ede4:	ldr	x19, [sp, #16]
  40ede8:	ldp	x29, x30, [sp], #32
  40edec:	b	4114e8 <ferror@plt+0xea48>
  40edf0:	stp	x29, x30, [sp, #-32]!
  40edf4:	mov	x29, sp
  40edf8:	str	x19, [sp, #16]
  40edfc:	mov	x19, x0
  40ee00:	bl	402a30 <__errno_location@plt>
  40ee04:	ldr	w1, [x0]
  40ee08:	cmp	w1, #0x2
  40ee0c:	b.eq	40ee34 <ferror@plt+0xc394>  // b.none
  40ee10:	mov	w0, #0x0                   	// #0
  40ee14:	mov	x3, x19
  40ee18:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40ee1c:	add	x2, x2, #0x82d
  40ee20:	bl	4024a0 <error@plt>
  40ee24:	mov	w0, #0xffffffff            	// #-1
  40ee28:	ldr	x19, [sp, #16]
  40ee2c:	ldp	x29, x30, [sp], #32
  40ee30:	ret
  40ee34:	mov	w0, #0x0                   	// #0
  40ee38:	b	40ee28 <ferror@plt+0xc388>
  40ee3c:	stp	x29, x30, [sp, #-32]!
  40ee40:	mov	x29, sp
  40ee44:	stp	x19, x20, [sp, #16]
  40ee48:	mov	x20, x0
  40ee4c:	mov	x19, x1
  40ee50:	mov	x0, x1
  40ee54:	bl	402880 <rmdir@plt>
  40ee58:	tbz	w0, #31, 40ee98 <ferror@plt+0xc3f8>
  40ee5c:	ldrb	w0, [x20]
  40ee60:	cbz	w0, 40ee98 <ferror@plt+0xc3f8>
  40ee64:	bl	402a30 <__errno_location@plt>
  40ee68:	ldr	w1, [x0]
  40ee6c:	mov	w0, #0x0                   	// #0
  40ee70:	cmp	w1, #0x2
  40ee74:	b.eq	40ee8c <ferror@plt+0xc3ec>  // b.none
  40ee78:	mov	x3, x19
  40ee7c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40ee80:	add	x2, x2, #0x84d
  40ee84:	bl	4024a0 <error@plt>
  40ee88:	mov	w0, #0xffffffff            	// #-1
  40ee8c:	ldp	x19, x20, [sp, #16]
  40ee90:	ldp	x29, x30, [sp], #32
  40ee94:	ret
  40ee98:	mov	w0, #0x0                   	// #0
  40ee9c:	b	40ee8c <ferror@plt+0xc3ec>
  40eea0:	stp	x29, x30, [sp, #-80]!
  40eea4:	mov	x29, sp
  40eea8:	stp	x19, x20, [sp, #16]
  40eeac:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40eeb0:	add	x19, x19, #0xb30
  40eeb4:	stp	x21, x22, [sp, #32]
  40eeb8:	mov	x22, x1
  40eebc:	and	w21, w2, #0xff
  40eec0:	stp	x23, x24, [sp, #48]
  40eec4:	mov	x23, x0
  40eec8:	mov	x0, #0x0                   	// #0
  40eecc:	stp	x25, x26, [sp, #64]
  40eed0:	add	x2, x19, #0x8
  40eed4:	ldr	x1, [x2, #8]
  40eed8:	cmp	x1, x0
  40eedc:	b.ls	40eefc <ferror@plt+0xc45c>  // b.plast
  40eee0:	ldr	x3, [x19, #8]
  40eee4:	lsl	x1, x0, #3
  40eee8:	ldr	x3, [x3, x1]
  40eeec:	cbnz	x3, 40ef4c <ferror@plt+0xc4ac>
  40eef0:	ldr	x20, [x2]
  40eef4:	adds	x20, x20, x1
  40eef8:	b.ne	40ef94 <ferror@plt+0xc4f4>  // b.any
  40eefc:	ldr	x20, [x19, #16]
  40ef00:	ldr	x0, [x19, #24]
  40ef04:	cmp	x20, x0
  40ef08:	b.ne	40ef74 <ferror@plt+0xc4d4>  // b.any
  40ef0c:	lsl	x24, x20, #1
  40ef10:	mov	x1, #0x8                   	// #8
  40ef14:	add	x24, x24, #0x1
  40ef18:	mov	x0, x24
  40ef1c:	ldr	x26, [x19, #8]
  40ef20:	bl	413d3c <ferror@plt+0x1129c>
  40ef24:	mov	x25, x0
  40ef28:	cbz	x20, 40ef54 <ferror@plt+0xc4b4>
  40ef2c:	lsl	x20, x20, #3
  40ef30:	mov	x2, #0x0                   	// #0
  40ef34:	cmp	x2, x20
  40ef38:	b.eq	40ef60 <ferror@plt+0xc4c0>  // b.none
  40ef3c:	ldr	x0, [x26, x2]
  40ef40:	str	x0, [x25, x2]
  40ef44:	add	x2, x2, #0x8
  40ef48:	b	40ef34 <ferror@plt+0xc494>
  40ef4c:	add	x0, x0, #0x1
  40ef50:	b	40eed0 <ferror@plt+0xc430>
  40ef54:	adrp	x0, 40e000 <ferror@plt+0xb560>
  40ef58:	add	x0, x0, #0xc7c
  40ef5c:	bl	40fce0 <ferror@plt+0xd240>
  40ef60:	str	x25, [x19, #8]
  40ef64:	str	x24, [x19, #24]
  40ef68:	cbz	x26, 40ef74 <ferror@plt+0xc4d4>
  40ef6c:	mov	x0, x26
  40ef70:	bl	4028c0 <free@plt>
  40ef74:	ldr	x1, [x19, #8]
  40ef78:	ldr	x20, [x19, #16]
  40ef7c:	lsl	x2, x20, #3
  40ef80:	add	x20, x1, x20, lsl #3
  40ef84:	str	xzr, [x1, x2]
  40ef88:	ldr	x1, [x19, #16]
  40ef8c:	add	x1, x1, #0x1
  40ef90:	str	x1, [x19, #16]
  40ef94:	mov	x0, #0x20                  	// #32
  40ef98:	bl	413d0c <ferror@plt+0x1126c>
  40ef9c:	mov	x19, x0
  40efa0:	strb	w21, [x0, #8]
  40efa4:	adrp	x25, 40e000 <ferror@plt+0xb560>
  40efa8:	adrp	x24, 40e000 <ferror@plt+0xb560>
  40efac:	add	x25, x25, #0xbec
  40efb0:	add	x24, x24, #0xc60
  40efb4:	str	xzr, [x19]
  40efb8:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x34bc>
  40efbc:	add	x21, x21, #0x68
  40efc0:	mov	x2, x25
  40efc4:	mov	x1, x24
  40efc8:	mov	x0, x21
  40efcc:	mov	w4, #0x0                   	// #0
  40efd0:	mov	x3, #0x0                   	// #0
  40efd4:	bl	413f18 <ferror@plt+0x11478>
  40efd8:	str	x0, [x19, #16]
  40efdc:	mov	x2, x25
  40efe0:	mov	x1, x24
  40efe4:	mov	w4, #0x0                   	// #0
  40efe8:	mov	x3, #0x0                   	// #0
  40efec:	mov	x0, x21
  40eff0:	bl	413f18 <ferror@plt+0x11478>
  40eff4:	str	x0, [x19, #24]
  40eff8:	mov	x0, #0x1000                	// #4096
  40effc:	bl	414030 <ferror@plt+0x11590>
  40f000:	mov	x21, x0
  40f004:	cmp	x22, #0x0
  40f008:	mov	x3, x23
  40f00c:	cset	w4, eq  // eq = none
  40f010:	mov	x2, x22
  40f014:	mov	x1, #0x1000                	// #4096
  40f018:	bl	413290 <ferror@plt+0x107f0>
  40f01c:	cbz	w0, 40f048 <ferror@plt+0xc5a8>
  40f020:	bl	402a30 <__errno_location@plt>
  40f024:	ldr	w1, [x0]
  40f028:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f02c:	mov	w0, #0x0                   	// #0
  40f030:	add	x2, x2, #0x872
  40f034:	bl	4024a0 <error@plt>
  40f038:	mov	x0, x21
  40f03c:	mov	x19, #0x0                   	// #0
  40f040:	bl	411648 <ferror@plt+0xeba8>
  40f044:	b	40f0a0 <ferror@plt+0xc600>
  40f048:	bl	40fe1c <ferror@plt+0xd37c>
  40f04c:	mov	x0, x21
  40f050:	bl	4027b0 <mkdtemp@plt>
  40f054:	mov	x22, x0
  40f058:	cbz	x0, 40f064 <ferror@plt+0xc5c4>
  40f05c:	str	x0, [x19]
  40f060:	str	x19, [x20]
  40f064:	bl	40fe54 <ferror@plt+0xd3b4>
  40f068:	cbnz	x22, 40f08c <ferror@plt+0xc5ec>
  40f06c:	bl	402a30 <__errno_location@plt>
  40f070:	ldr	w1, [x0]
  40f074:	mov	x3, x21
  40f078:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f07c:	mov	w0, #0x0                   	// #0
  40f080:	add	x2, x2, #0x8a9
  40f084:	bl	4024a0 <error@plt>
  40f088:	b	40f038 <ferror@plt+0xc598>
  40f08c:	mov	x0, x22
  40f090:	bl	413ec4 <ferror@plt+0x11424>
  40f094:	str	x0, [x19]
  40f098:	mov	x0, x21
  40f09c:	bl	411648 <ferror@plt+0xeba8>
  40f0a0:	mov	x0, x19
  40f0a4:	ldp	x19, x20, [sp, #16]
  40f0a8:	ldp	x21, x22, [sp, #32]
  40f0ac:	ldp	x23, x24, [sp, #48]
  40f0b0:	ldp	x25, x26, [sp, #64]
  40f0b4:	ldp	x29, x30, [sp], #80
  40f0b8:	ret
  40f0bc:	stp	x29, x30, [sp, #-32]!
  40f0c0:	mov	x29, sp
  40f0c4:	stp	x19, x20, [sp, #16]
  40f0c8:	mov	x19, x0
  40f0cc:	mov	x20, x1
  40f0d0:	ldr	x0, [x0, #24]
  40f0d4:	bl	411340 <ferror@plt+0xe8a0>
  40f0d8:	cbnz	x0, 40f0fc <ferror@plt+0xc65c>
  40f0dc:	ldr	x19, [x19, #24]
  40f0e0:	mov	x0, x20
  40f0e4:	bl	413ec4 <ferror@plt+0x11424>
  40f0e8:	mov	x1, x0
  40f0ec:	mov	x0, x19
  40f0f0:	ldp	x19, x20, [sp, #16]
  40f0f4:	ldp	x29, x30, [sp], #32
  40f0f8:	b	413f88 <ferror@plt+0x114e8>
  40f0fc:	ldp	x19, x20, [sp, #16]
  40f100:	ldp	x29, x30, [sp], #32
  40f104:	ret
  40f108:	stp	x29, x30, [sp, #-48]!
  40f10c:	mov	x29, sp
  40f110:	str	x21, [sp, #32]
  40f114:	ldr	x21, [x0, #24]
  40f118:	stp	x19, x20, [sp, #16]
  40f11c:	mov	x0, x21
  40f120:	bl	411340 <ferror@plt+0xe8a0>
  40f124:	cbz	x0, 40f15c <ferror@plt+0xc6bc>
  40f128:	mov	x19, x0
  40f12c:	mov	x1, x0
  40f130:	mov	x0, x21
  40f134:	bl	4112e0 <ferror@plt+0xe840>
  40f138:	mov	x1, x19
  40f13c:	mov	x20, x0
  40f140:	mov	x0, x21
  40f144:	bl	4114e8 <ferror@plt+0xea48>
  40f148:	mov	x0, x20
  40f14c:	ldp	x19, x20, [sp, #16]
  40f150:	ldr	x21, [sp, #32]
  40f154:	ldp	x29, x30, [sp], #48
  40f158:	b	4028c0 <free@plt>
  40f15c:	ldp	x19, x20, [sp, #16]
  40f160:	ldr	x21, [sp, #32]
  40f164:	ldp	x29, x30, [sp], #48
  40f168:	ret
  40f16c:	stp	x29, x30, [sp, #-32]!
  40f170:	mov	x29, sp
  40f174:	stp	x19, x20, [sp, #16]
  40f178:	mov	x19, x0
  40f17c:	mov	x20, x1
  40f180:	ldr	x0, [x0, #16]
  40f184:	bl	411340 <ferror@plt+0xe8a0>
  40f188:	cbnz	x0, 40f1ac <ferror@plt+0xc70c>
  40f18c:	ldr	x19, [x19, #16]
  40f190:	mov	x0, x20
  40f194:	bl	413ec4 <ferror@plt+0x11424>
  40f198:	mov	x1, x0
  40f19c:	mov	x0, x19
  40f1a0:	ldp	x19, x20, [sp, #16]
  40f1a4:	ldp	x29, x30, [sp], #32
  40f1a8:	b	413f88 <ferror@plt+0x114e8>
  40f1ac:	ldp	x19, x20, [sp, #16]
  40f1b0:	ldp	x29, x30, [sp], #32
  40f1b4:	ret
  40f1b8:	stp	x29, x30, [sp, #-48]!
  40f1bc:	mov	x29, sp
  40f1c0:	str	x21, [sp, #32]
  40f1c4:	ldr	x21, [x0, #16]
  40f1c8:	stp	x19, x20, [sp, #16]
  40f1cc:	mov	x0, x21
  40f1d0:	bl	411340 <ferror@plt+0xe8a0>
  40f1d4:	cbz	x0, 40f20c <ferror@plt+0xc76c>
  40f1d8:	mov	x19, x0
  40f1dc:	mov	x1, x0
  40f1e0:	mov	x0, x21
  40f1e4:	bl	4112e0 <ferror@plt+0xe840>
  40f1e8:	mov	x1, x19
  40f1ec:	mov	x20, x0
  40f1f0:	mov	x0, x21
  40f1f4:	bl	4114e8 <ferror@plt+0xea48>
  40f1f8:	mov	x0, x20
  40f1fc:	ldp	x19, x20, [sp, #16]
  40f200:	ldr	x21, [sp, #32]
  40f204:	ldp	x29, x30, [sp], #48
  40f208:	b	4028c0 <free@plt>
  40f20c:	ldp	x19, x20, [sp, #16]
  40f210:	ldr	x21, [sp, #32]
  40f214:	ldp	x29, x30, [sp], #48
  40f218:	ret
  40f21c:	stp	x29, x30, [sp, #-48]!
  40f220:	mov	x29, sp
  40f224:	stp	x19, x20, [sp, #16]
  40f228:	mov	x20, x1
  40f22c:	str	x21, [sp, #32]
  40f230:	mov	x21, x0
  40f234:	mov	x0, x1
  40f238:	bl	402a70 <unlink@plt>
  40f23c:	tbz	w0, #31, 40f274 <ferror@plt+0xc7d4>
  40f240:	ldrb	w0, [x21, #8]
  40f244:	cbz	w0, 40f274 <ferror@plt+0xc7d4>
  40f248:	mov	x0, x20
  40f24c:	bl	40edf0 <ferror@plt+0xc350>
  40f250:	mov	w19, w0
  40f254:	mov	x1, x20
  40f258:	mov	x0, x21
  40f25c:	bl	40f108 <ferror@plt+0xc668>
  40f260:	mov	w0, w19
  40f264:	ldp	x19, x20, [sp, #16]
  40f268:	ldr	x21, [sp, #32]
  40f26c:	ldp	x29, x30, [sp], #48
  40f270:	ret
  40f274:	mov	w19, #0x0                   	// #0
  40f278:	b	40f254 <ferror@plt+0xc7b4>
  40f27c:	stp	x29, x30, [sp, #-48]!
  40f280:	mov	x29, sp
  40f284:	stp	x19, x20, [sp, #16]
  40f288:	mov	x19, x0
  40f28c:	add	x0, x0, #0x8
  40f290:	str	x21, [sp, #32]
  40f294:	mov	x21, x1
  40f298:	bl	40ee3c <ferror@plt+0xc39c>
  40f29c:	mov	w20, w0
  40f2a0:	mov	x1, x21
  40f2a4:	mov	x0, x19
  40f2a8:	bl	40f1b8 <ferror@plt+0xc718>
  40f2ac:	mov	w0, w20
  40f2b0:	ldp	x19, x20, [sp, #16]
  40f2b4:	ldr	x21, [sp, #32]
  40f2b8:	ldp	x29, x30, [sp], #48
  40f2bc:	ret
  40f2c0:	stp	x29, x30, [sp, #-192]!
  40f2c4:	mov	x29, sp
  40f2c8:	stp	x21, x22, [sp, #32]
  40f2cc:	add	x8, sp, #0x30
  40f2d0:	ldr	x22, [x0, #24]
  40f2d4:	stp	x19, x20, [sp, #16]
  40f2d8:	mov	x19, x0
  40f2dc:	mov	x0, x22
  40f2e0:	bl	411528 <ferror@plt+0xea88>
  40f2e4:	add	x1, sp, #0x30
  40f2e8:	add	x0, sp, #0x88
  40f2ec:	mov	w20, #0x0                   	// #0
  40f2f0:	mov	x2, #0x38                  	// #56
  40f2f4:	bl	402420 <memcpy@plt>
  40f2f8:	add	x2, sp, #0x80
  40f2fc:	add	x1, sp, #0x78
  40f300:	add	x0, sp, #0x88
  40f304:	bl	411560 <ferror@plt+0xeac0>
  40f308:	tst	w0, #0xff
  40f30c:	b.ne	40f370 <ferror@plt+0xc8d0>  // b.any
  40f310:	add	x0, sp, #0x88
  40f314:	bl	411570 <ferror@plt+0xead0>
  40f318:	ldr	x21, [x19, #16]
  40f31c:	add	x8, sp, #0x30
  40f320:	add	x19, x19, #0x8
  40f324:	mov	x0, x21
  40f328:	bl	411528 <ferror@plt+0xea88>
  40f32c:	add	x1, sp, #0x30
  40f330:	add	x0, sp, #0x88
  40f334:	mov	x2, #0x38                  	// #56
  40f338:	bl	402420 <memcpy@plt>
  40f33c:	add	x2, sp, #0x80
  40f340:	add	x1, sp, #0x78
  40f344:	add	x0, sp, #0x88
  40f348:	bl	411560 <ferror@plt+0xeac0>
  40f34c:	tst	w0, #0xff
  40f350:	b.ne	40f3b4 <ferror@plt+0xc914>  // b.any
  40f354:	add	x0, sp, #0x88
  40f358:	bl	411570 <ferror@plt+0xead0>
  40f35c:	mov	w0, w20
  40f360:	ldp	x19, x20, [sp, #16]
  40f364:	ldp	x21, x22, [sp, #32]
  40f368:	ldp	x29, x30, [sp], #192
  40f36c:	ret
  40f370:	ldr	x21, [sp, #120]
  40f374:	mov	x0, x21
  40f378:	bl	402a70 <unlink@plt>
  40f37c:	tbz	w0, #31, 40f3ac <ferror@plt+0xc90c>
  40f380:	ldrb	w0, [x19, #8]
  40f384:	cbz	w0, 40f3ac <ferror@plt+0xc90c>
  40f388:	mov	x0, x21
  40f38c:	bl	40edf0 <ferror@plt+0xc350>
  40f390:	ldr	x1, [sp, #128]
  40f394:	orr	w20, w20, w0
  40f398:	mov	x0, x22
  40f39c:	bl	4114e8 <ferror@plt+0xea48>
  40f3a0:	mov	x0, x21
  40f3a4:	bl	4028c0 <free@plt>
  40f3a8:	b	40f2f8 <ferror@plt+0xc858>
  40f3ac:	mov	w0, #0x0                   	// #0
  40f3b0:	b	40f390 <ferror@plt+0xc8f0>
  40f3b4:	ldr	x22, [sp, #120]
  40f3b8:	mov	x0, x19
  40f3bc:	mov	x1, x22
  40f3c0:	bl	40ee3c <ferror@plt+0xc39c>
  40f3c4:	ldr	x1, [sp, #128]
  40f3c8:	orr	w20, w20, w0
  40f3cc:	mov	x0, x21
  40f3d0:	bl	4114e8 <ferror@plt+0xea48>
  40f3d4:	mov	x0, x22
  40f3d8:	bl	4028c0 <free@plt>
  40f3dc:	b	40f33c <ferror@plt+0xc89c>
  40f3e0:	stp	x29, x30, [sp, #-32]!
  40f3e4:	mov	x29, sp
  40f3e8:	stp	x19, x20, [sp, #16]
  40f3ec:	mov	x19, x0
  40f3f0:	bl	40f2c0 <ferror@plt+0xc820>
  40f3f4:	mov	w20, w0
  40f3f8:	mov	x0, x19
  40f3fc:	ldr	x1, [x0], #8
  40f400:	bl	40ee3c <ferror@plt+0xc39c>
  40f404:	orr	w20, w20, w0
  40f408:	adrp	x2, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f40c:	add	x2, x2, #0xb30
  40f410:	mov	x1, #0x0                   	// #0
  40f414:	ldr	x3, [x2, #16]
  40f418:	add	x0, x2, #0x8
  40f41c:	cmp	x3, x1
  40f420:	b.hi	40f428 <ferror@plt+0xc988>  // b.pmore
  40f424:	bl	4027d0 <abort@plt>
  40f428:	ldr	x3, [x2, #8]
  40f42c:	lsl	x4, x1, #3
  40f430:	ldr	x5, [x3, x4]
  40f434:	add	x3, x1, #0x1
  40f438:	cmp	x5, x19
  40f43c:	b.ne	40f4ac <ferror@plt+0xca0c>  // b.any
  40f440:	ldr	x5, [x0, #8]
  40f444:	cmp	x5, x3
  40f448:	b.ne	40f4a0 <ferror@plt+0xca00>  // b.any
  40f44c:	cbz	x1, 40f464 <ferror@plt+0xc9c4>
  40f450:	lsl	x0, x1, #3
  40f454:	ldr	x3, [x2, #8]
  40f458:	sub	x0, x0, #0x8
  40f45c:	ldr	x0, [x3, x0]
  40f460:	cbz	x0, 40f498 <ferror@plt+0xc9f8>
  40f464:	str	x1, [x2, #16]
  40f468:	ldr	x0, [x19, #24]
  40f46c:	bl	411518 <ferror@plt+0xea78>
  40f470:	ldr	x0, [x19, #16]
  40f474:	bl	411518 <ferror@plt+0xea78>
  40f478:	ldr	x0, [x19]
  40f47c:	bl	4028c0 <free@plt>
  40f480:	mov	x0, x19
  40f484:	bl	4028c0 <free@plt>
  40f488:	mov	w0, w20
  40f48c:	ldp	x19, x20, [sp, #16]
  40f490:	ldp	x29, x30, [sp], #32
  40f494:	ret
  40f498:	sub	x1, x1, #0x1
  40f49c:	b	40f44c <ferror@plt+0xc9ac>
  40f4a0:	ldr	x0, [x0]
  40f4a4:	str	xzr, [x0, x4]
  40f4a8:	b	40f468 <ferror@plt+0xc9c8>
  40f4ac:	mov	x1, x3
  40f4b0:	b	40f414 <ferror@plt+0xc974>
  40f4b4:	stp	x29, x30, [sp, #-48]!
  40f4b8:	mov	x29, sp
  40f4bc:	stp	x19, x20, [sp, #16]
  40f4c0:	mov	x19, x0
  40f4c4:	mov	w20, w1
  40f4c8:	str	x21, [sp, #32]
  40f4cc:	mov	w21, w2
  40f4d0:	bl	40fe1c <ferror@plt+0xd37c>
  40f4d4:	mov	w2, w21
  40f4d8:	mov	w1, w20
  40f4dc:	mov	x0, x19
  40f4e0:	bl	402610 <open@plt>
  40f4e4:	mov	w19, w0
  40f4e8:	bl	402a30 <__errno_location@plt>
  40f4ec:	ldr	w21, [x0]
  40f4f0:	mov	x20, x0
  40f4f4:	tbnz	w19, #31, 40f500 <ferror@plt+0xca60>
  40f4f8:	mov	w0, w19
  40f4fc:	bl	40ec10 <ferror@plt+0xc170>
  40f500:	bl	40fe54 <ferror@plt+0xd3b4>
  40f504:	str	w21, [x20]
  40f508:	mov	w0, w19
  40f50c:	ldp	x19, x20, [sp, #16]
  40f510:	ldr	x21, [sp, #32]
  40f514:	ldp	x29, x30, [sp], #48
  40f518:	ret
  40f51c:	stp	x29, x30, [sp, #-48]!
  40f520:	mov	x29, sp
  40f524:	stp	x19, x20, [sp, #16]
  40f528:	mov	x19, x0
  40f52c:	mov	x20, x1
  40f530:	str	x21, [sp, #32]
  40f534:	bl	40fe1c <ferror@plt+0xd37c>
  40f538:	mov	x1, x20
  40f53c:	mov	x0, x19
  40f540:	bl	40ff98 <ferror@plt+0xd4f8>
  40f544:	mov	x19, x0
  40f548:	bl	402a30 <__errno_location@plt>
  40f54c:	ldr	w21, [x0]
  40f550:	mov	x20, x0
  40f554:	cbz	x19, 40f56c <ferror@plt+0xcacc>
  40f558:	mov	x0, x19
  40f55c:	bl	402590 <fileno@plt>
  40f560:	tbz	w0, #31, 40f568 <ferror@plt+0xcac8>
  40f564:	bl	4027d0 <abort@plt>
  40f568:	bl	40ec10 <ferror@plt+0xc170>
  40f56c:	bl	40fe54 <ferror@plt+0xd3b4>
  40f570:	str	w21, [x20]
  40f574:	mov	x0, x19
  40f578:	ldp	x19, x20, [sp, #16]
  40f57c:	ldr	x21, [sp, #32]
  40f580:	ldp	x29, x30, [sp], #48
  40f584:	ret
  40f588:	tbz	w0, #31, 40f590 <ferror@plt+0xcaf0>
  40f58c:	b	402760 <close@plt>
  40f590:	stp	x29, x30, [sp, #-48]!
  40f594:	mov	x29, sp
  40f598:	stp	x19, x20, [sp, #16]
  40f59c:	mov	w20, w0
  40f5a0:	stp	x21, x22, [sp, #32]
  40f5a4:	bl	402760 <close@plt>
  40f5a8:	mov	w21, w0
  40f5ac:	bl	402a30 <__errno_location@plt>
  40f5b0:	mov	x19, x0
  40f5b4:	mov	w0, w20
  40f5b8:	ldr	w22, [x19]
  40f5bc:	bl	40edb0 <ferror@plt+0xc310>
  40f5c0:	str	w22, [x19]
  40f5c4:	mov	w0, w21
  40f5c8:	ldp	x19, x20, [sp, #16]
  40f5cc:	ldp	x21, x22, [sp, #32]
  40f5d0:	ldp	x29, x30, [sp], #48
  40f5d4:	ret
  40f5d8:	stp	x29, x30, [sp, #-48]!
  40f5dc:	mov	x29, sp
  40f5e0:	stp	x19, x20, [sp, #16]
  40f5e4:	mov	x19, x0
  40f5e8:	stp	x21, x22, [sp, #32]
  40f5ec:	bl	402590 <fileno@plt>
  40f5f0:	mov	w21, w0
  40f5f4:	mov	x0, x19
  40f5f8:	bl	4144e0 <ferror@plt+0x11a40>
  40f5fc:	mov	w20, w0
  40f600:	bl	402a30 <__errno_location@plt>
  40f604:	mov	x19, x0
  40f608:	mov	w0, w21
  40f60c:	ldr	w22, [x19]
  40f610:	bl	40edb0 <ferror@plt+0xc310>
  40f614:	str	w22, [x19]
  40f618:	mov	w0, w20
  40f61c:	ldp	x19, x20, [sp, #16]
  40f620:	ldp	x21, x22, [sp, #32]
  40f624:	ldp	x29, x30, [sp], #48
  40f628:	ret
  40f62c:	stp	x29, x30, [sp, #-48]!
  40f630:	mov	x29, sp
  40f634:	stp	x19, x20, [sp, #16]
  40f638:	mov	x19, x0
  40f63c:	stp	x21, x22, [sp, #32]
  40f640:	bl	402590 <fileno@plt>
  40f644:	mov	w21, w0
  40f648:	mov	x0, x19
  40f64c:	bl	40f6f8 <ferror@plt+0xcc58>
  40f650:	mov	w20, w0
  40f654:	bl	402a30 <__errno_location@plt>
  40f658:	mov	x19, x0
  40f65c:	mov	w0, w21
  40f660:	ldr	w22, [x19]
  40f664:	bl	40edb0 <ferror@plt+0xc310>
  40f668:	str	w22, [x19]
  40f66c:	mov	w0, w20
  40f670:	ldp	x19, x20, [sp, #16]
  40f674:	ldp	x21, x22, [sp, #32]
  40f678:	ldp	x29, x30, [sp], #48
  40f67c:	ret
  40f680:	stp	x29, x30, [sp, #-32]!
  40f684:	mov	w2, #0x0                   	// #0
  40f688:	mov	x29, sp
  40f68c:	stp	x19, x20, [sp, #16]
  40f690:	and	w20, w1, #0xff
  40f694:	mov	w19, w0
  40f698:	mov	w1, #0x1                   	// #1
  40f69c:	bl	414574 <ferror@plt+0x11ad4>
  40f6a0:	tbnz	w0, #31, 40f6dc <ferror@plt+0xcc3c>
  40f6a4:	cmp	w20, #0x0
  40f6a8:	orr	w1, w0, #0x1
  40f6ac:	and	w2, w0, #0xfffffffe
  40f6b0:	csel	w2, w2, w1, eq  // eq = none
  40f6b4:	cmp	w2, w0
  40f6b8:	b.eq	40f6e4 <ferror@plt+0xcc44>  // b.none
  40f6bc:	mov	w0, w19
  40f6c0:	mov	w1, #0x2                   	// #2
  40f6c4:	bl	414574 <ferror@plt+0x11ad4>
  40f6c8:	cmn	w0, #0x1
  40f6cc:	csetm	w0, eq  // eq = none
  40f6d0:	ldp	x19, x20, [sp, #16]
  40f6d4:	ldp	x29, x30, [sp], #32
  40f6d8:	ret
  40f6dc:	mov	w0, #0xffffffff            	// #-1
  40f6e0:	b	40f6d0 <ferror@plt+0xcc30>
  40f6e4:	mov	w0, #0x0                   	// #0
  40f6e8:	b	40f6d0 <ferror@plt+0xcc30>
  40f6ec:	mov	w2, #0x0                   	// #0
  40f6f0:	mov	w1, #0x406                 	// #1030
  40f6f4:	b	414574 <ferror@plt+0x11ad4>
  40f6f8:	stp	x29, x30, [sp, #-48]!
  40f6fc:	mov	x29, sp
  40f700:	stp	x19, x20, [sp, #16]
  40f704:	mov	x19, x0
  40f708:	str	x21, [sp, #32]
  40f70c:	bl	402580 <__fpending@plt>
  40f710:	mov	x20, x0
  40f714:	mov	x0, x19
  40f718:	bl	4024f0 <ferror_unlocked@plt>
  40f71c:	mov	w21, w0
  40f720:	mov	x0, x19
  40f724:	bl	4144e0 <ferror@plt+0x11a40>
  40f728:	cbnz	w21, 40f754 <ferror@plt+0xccb4>
  40f72c:	cbz	w0, 40f744 <ferror@plt+0xcca4>
  40f730:	cbnz	x20, 40f760 <ferror@plt+0xccc0>
  40f734:	bl	402a30 <__errno_location@plt>
  40f738:	ldr	w0, [x0]
  40f73c:	cmp	w0, #0x9
  40f740:	csetm	w0, ne  // ne = any
  40f744:	ldp	x19, x20, [sp, #16]
  40f748:	ldr	x21, [sp, #32]
  40f74c:	ldp	x29, x30, [sp], #48
  40f750:	ret
  40f754:	cbnz	w0, 40f760 <ferror@plt+0xccc0>
  40f758:	bl	402a30 <__errno_location@plt>
  40f75c:	str	wzr, [x0]
  40f760:	mov	w0, #0xffffffff            	// #-1
  40f764:	b	40f744 <ferror@plt+0xcca4>
  40f768:	adrp	x1, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f76c:	str	x0, [x1, #2896]
  40f770:	ret
  40f774:	stp	x29, x30, [sp, #-48]!
  40f778:	mov	x29, sp
  40f77c:	stp	x19, x20, [sp, #16]
  40f780:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f784:	ldr	x20, [x19, #1096]
  40f788:	str	x21, [sp, #32]
  40f78c:	mov	x0, x20
  40f790:	bl	4146f4 <ferror@plt+0x11c54>
  40f794:	cbnz	x0, 40f7fc <ferror@plt+0xcd5c>
  40f798:	mov	w20, #0x0                   	// #0
  40f79c:	ldr	x0, [x19, #1096]
  40f7a0:	bl	40f6f8 <ferror@plt+0xcc58>
  40f7a4:	cbnz	w0, 40f7ac <ferror@plt+0xcd0c>
  40f7a8:	cbz	w20, 40f840 <ferror@plt+0xcda0>
  40f7ac:	adrp	x0, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f7b0:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f7b4:	add	x19, x19, #0x8e1
  40f7b8:	ldr	x21, [x0, #2896]
  40f7bc:	bl	402a30 <__errno_location@plt>
  40f7c0:	ldr	w20, [x0]
  40f7c4:	cbz	x21, 40f824 <ferror@plt+0xcd84>
  40f7c8:	mov	x0, x21
  40f7cc:	bl	412c48 <ferror@plt+0x101a8>
  40f7d0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f7d4:	mov	x3, x0
  40f7d8:	mov	x4, x19
  40f7dc:	add	x2, x2, #0x8f4
  40f7e0:	mov	w1, w20
  40f7e4:	mov	w0, #0x0                   	// #0
  40f7e8:	bl	4024a0 <error@plt>
  40f7ec:	bl	40f868 <ferror@plt+0xcdc8>
  40f7f0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f7f4:	ldr	w0, [x0, #884]
  40f7f8:	bl	402440 <_exit@plt>
  40f7fc:	mov	x0, x20
  40f800:	mov	w2, #0x1                   	// #1
  40f804:	mov	x1, #0x0                   	// #0
  40f808:	bl	414734 <ferror@plt+0x11c94>
  40f80c:	cbnz	w0, 40f798 <ferror@plt+0xccf8>
  40f810:	ldr	x0, [x19, #1096]
  40f814:	bl	4146ac <ferror@plt+0x11c0c>
  40f818:	cmp	w0, #0x0
  40f81c:	cset	w20, ne  // ne = any
  40f820:	b	40f79c <ferror@plt+0xccfc>
  40f824:	mov	x3, x19
  40f828:	mov	w1, w20
  40f82c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40f830:	mov	w0, #0x0                   	// #0
  40f834:	add	x2, x2, #0x55e
  40f838:	bl	4024a0 <error@plt>
  40f83c:	b	40f7ec <ferror@plt+0xcd4c>
  40f840:	ldp	x19, x20, [sp, #16]
  40f844:	ldr	x21, [sp, #32]
  40f848:	ldp	x29, x30, [sp], #48
  40f84c:	b	40f868 <ferror@plt+0xcdc8>
  40f850:	adrp	x1, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f854:	str	x0, [x1, #2904]
  40f858:	ret
  40f85c:	adrp	x1, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f860:	strb	w0, [x1, #2912]
  40f864:	ret
  40f868:	stp	x29, x30, [sp, #-48]!
  40f86c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f870:	mov	x29, sp
  40f874:	ldr	x0, [x0, #1088]
  40f878:	stp	x19, x20, [sp, #16]
  40f87c:	str	x21, [sp, #32]
  40f880:	bl	40f6f8 <ferror@plt+0xcc58>
  40f884:	cbz	w0, 40f900 <ferror@plt+0xce60>
  40f888:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40f88c:	add	x0, x19, #0xb58
  40f890:	ldrb	w21, [x0, #8]
  40f894:	bl	402a30 <__errno_location@plt>
  40f898:	ldr	w20, [x0]
  40f89c:	cbz	w21, 40f8a8 <ferror@plt+0xce08>
  40f8a0:	cmp	w20, #0x20
  40f8a4:	b.eq	40f900 <ferror@plt+0xce60>  // b.none
  40f8a8:	ldr	x0, [x19, #2904]
  40f8ac:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f8b0:	add	x19, x19, #0x8fb
  40f8b4:	cbz	x0, 40f8e4 <ferror@plt+0xce44>
  40f8b8:	bl	412c48 <ferror@plt+0x101a8>
  40f8bc:	mov	x3, x0
  40f8c0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f8c4:	mov	x4, x19
  40f8c8:	add	x2, x2, #0x8f4
  40f8cc:	mov	w1, w20
  40f8d0:	mov	w0, #0x0                   	// #0
  40f8d4:	bl	4024a0 <error@plt>
  40f8d8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f8dc:	ldr	w0, [x0, #884]
  40f8e0:	bl	402440 <_exit@plt>
  40f8e4:	mov	x3, x19
  40f8e8:	mov	w1, w20
  40f8ec:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  40f8f0:	mov	w0, #0x0                   	// #0
  40f8f4:	add	x2, x2, #0x55e
  40f8f8:	bl	4024a0 <error@plt>
  40f8fc:	b	40f8d8 <ferror@plt+0xce38>
  40f900:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f904:	ldr	x0, [x0, #1064]
  40f908:	bl	40f6f8 <ferror@plt+0xcc58>
  40f90c:	cbnz	w0, 40f8d8 <ferror@plt+0xce38>
  40f910:	ldp	x19, x20, [sp, #16]
  40f914:	ldr	x21, [sp, #32]
  40f918:	ldp	x29, x30, [sp], #48
  40f91c:	ret
  40f920:	sub	sp, sp, #0x2a0
  40f924:	stp	x29, x30, [sp]
  40f928:	mov	x29, sp
  40f92c:	stp	x19, x20, [sp, #16]
  40f930:	and	w19, w6, #0xff
  40f934:	ands	w20, w7, #0xff
  40f938:	stp	x21, x22, [sp, #32]
  40f93c:	mov	x21, x0
  40f940:	and	w0, w3, #0xff
  40f944:	stp	x23, x24, [sp, #48]
  40f948:	mov	x24, x1
  40f94c:	ldrb	w22, [sp, #672]
  40f950:	stp	x25, x26, [sp, #64]
  40f954:	mov	x25, x2
  40f958:	stp	x27, x28, [sp, #80]
  40f95c:	and	w28, w4, #0xff
  40f960:	and	w27, w5, #0xff
  40f964:	str	w0, [sp, #108]
  40f968:	ldr	x23, [sp, #680]
  40f96c:	b.eq	40f984 <ferror@plt+0xcee4>  // b.none
  40f970:	add	x2, sp, #0xd0
  40f974:	mov	x1, #0x0                   	// #0
  40f978:	mov	w0, #0x2                   	// #2
  40f97c:	bl	4024b0 <sigprocmask@plt>
  40f980:	bl	40fe1c <ferror@plt+0xd37c>
  40f984:	add	x0, sp, #0x80
  40f988:	bl	402820 <posix_spawn_file_actions_init@plt>
  40f98c:	mov	w26, w0
  40f990:	cbnz	w0, 40fab8 <ferror@plt+0xd018>
  40f994:	cbnz	w28, 40fa7c <ferror@plt+0xcfdc>
  40f998:	cbz	w27, 40f9c0 <ferror@plt+0xcf20>
  40f99c:	add	x0, sp, #0x80
  40f9a0:	mov	w4, #0x0                   	// #0
  40f9a4:	mov	w3, #0x2                   	// #2
  40f9a8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f9ac:	mov	w1, #0x1                   	// #1
  40f9b0:	add	x2, x2, #0x907
  40f9b4:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  40f9b8:	mov	w26, w0
  40f9bc:	cbnz	w0, 40faa0 <ferror@plt+0xd000>
  40f9c0:	cbz	w19, 40f9e8 <ferror@plt+0xcf48>
  40f9c4:	mov	w3, #0x2                   	// #2
  40f9c8:	add	x0, sp, #0x80
  40f9cc:	mov	w1, w3
  40f9d0:	mov	w4, #0x0                   	// #0
  40f9d4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40f9d8:	add	x2, x2, #0x907
  40f9dc:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  40f9e0:	mov	w26, w0
  40f9e4:	cbnz	w0, 40faa0 <ferror@plt+0xd000>
  40f9e8:	cbnz	w20, 40faf4 <ferror@plt+0xd054>
  40f9ec:	mov	w27, #0x0                   	// #0
  40f9f0:	mov	x3, #0x0                   	// #0
  40f9f4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40f9f8:	mov	x4, x25
  40f9fc:	add	x2, sp, #0x80
  40fa00:	mov	x1, x24
  40fa04:	ldr	x5, [x0, #1104]
  40fa08:	add	x0, sp, #0x7c
  40fa0c:	bl	402900 <posix_spawnp@plt>
  40fa10:	mov	w26, w0
  40fa14:	cbnz	w0, 40faa4 <ferror@plt+0xd004>
  40fa18:	add	x0, sp, #0x80
  40fa1c:	bl	402700 <posix_spawn_file_actions_destroy@plt>
  40fa20:	cbz	w27, 40fa2c <ferror@plt+0xcf8c>
  40fa24:	add	x0, sp, #0x150
  40fa28:	bl	402650 <posix_spawnattr_destroy@plt>
  40fa2c:	cbz	w20, 40fa3c <ferror@plt+0xcf9c>
  40fa30:	ldr	w0, [sp, #124]
  40fa34:	bl	413a34 <ferror@plt+0x10f94>
  40fa38:	bl	40fe54 <ferror@plt+0xd3b4>
  40fa3c:	ldrb	w2, [sp, #108]
  40fa40:	mov	x6, x23
  40fa44:	ldr	w0, [sp, #124]
  40fa48:	mov	w5, w22
  40fa4c:	mov	w4, w20
  40fa50:	mov	w3, w19
  40fa54:	mov	x1, x21
  40fa58:	bl	413b70 <ferror@plt+0x110d0>
  40fa5c:	ldp	x29, x30, [sp]
  40fa60:	ldp	x19, x20, [sp, #16]
  40fa64:	ldp	x21, x22, [sp, #32]
  40fa68:	ldp	x23, x24, [sp, #48]
  40fa6c:	ldp	x25, x26, [sp, #64]
  40fa70:	ldp	x27, x28, [sp, #80]
  40fa74:	add	sp, sp, #0x2a0
  40fa78:	ret
  40fa7c:	add	x0, sp, #0x80
  40fa80:	mov	w4, #0x0                   	// #0
  40fa84:	mov	w3, #0x0                   	// #0
  40fa88:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40fa8c:	mov	w1, #0x0                   	// #0
  40fa90:	add	x2, x2, #0x907
  40fa94:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  40fa98:	mov	w26, w0
  40fa9c:	cbz	w0, 40f998 <ferror@plt+0xcef8>
  40faa0:	mov	w27, #0x0                   	// #0
  40faa4:	add	x0, sp, #0x80
  40faa8:	bl	402700 <posix_spawn_file_actions_destroy@plt>
  40faac:	cbz	w27, 40fab8 <ferror@plt+0xd018>
  40fab0:	add	x0, sp, #0x150
  40fab4:	bl	402650 <posix_spawnattr_destroy@plt>
  40fab8:	cbz	w20, 40fac0 <ferror@plt+0xd020>
  40fabc:	bl	40fe54 <ferror@plt+0xd3b4>
  40fac0:	cbz	x23, 40fac8 <ferror@plt+0xd028>
  40fac4:	str	wzr, [x23]
  40fac8:	eor	w19, w19, #0x1
  40facc:	orr	w19, w22, w19
  40fad0:	cbz	w19, 40faec <ferror@plt+0xd04c>
  40fad4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  40fad8:	mov	x3, x21
  40fadc:	add	x2, x2, #0x911
  40fae0:	mov	w1, w26
  40fae4:	mov	w0, w22
  40fae8:	bl	4024a0 <error@plt>
  40faec:	mov	w0, #0x7f                  	// #127
  40faf0:	b	40fa5c <ferror@plt+0xcfbc>
  40faf4:	add	x0, sp, #0x150
  40faf8:	bl	402970 <posix_spawnattr_init@plt>
  40fafc:	mov	w26, w0
  40fb00:	cbnz	w0, 40faa0 <ferror@plt+0xd000>
  40fb04:	add	x1, sp, #0xd0
  40fb08:	add	x0, sp, #0x150
  40fb0c:	bl	402800 <posix_spawnattr_setsigmask@plt>
  40fb10:	mov	w26, w0
  40fb14:	cbnz	w0, 40fb38 <ferror@plt+0xd098>
  40fb18:	add	x0, sp, #0x150
  40fb1c:	mov	w1, #0x8                   	// #8
  40fb20:	mov	w27, w20
  40fb24:	bl	4027c0 <posix_spawnattr_setflags@plt>
  40fb28:	mov	w26, w0
  40fb2c:	cbnz	w0, 40faa4 <ferror@plt+0xd004>
  40fb30:	add	x3, sp, #0x150
  40fb34:	b	40f9f4 <ferror@plt+0xcf54>
  40fb38:	mov	w27, w20
  40fb3c:	b	40faa4 <ferror@plt+0xd004>
  40fb40:	stp	x29, x30, [sp, #-64]!
  40fb44:	mov	x29, sp
  40fb48:	stp	x19, x20, [sp, #16]
  40fb4c:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fb50:	add	x20, x20, #0xb68
  40fb54:	stp	x21, x22, [sp, #32]
  40fb58:	mov	w21, w0
  40fb5c:	str	x23, [sp, #48]
  40fb60:	adrp	x23, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40fb64:	ldr	w0, [x20]
  40fb68:	add	x22, x23, #0x378
  40fb6c:	sxtw	x19, w0
  40fb70:	cbnz	w0, 40fbd8 <ferror@plt+0xd138>
  40fb74:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fb78:	add	x22, x22, #0x8
  40fb7c:	add	x20, x20, #0xcf8
  40fb80:	mov	x23, #0x98                  	// #152
  40fb84:	ldr	w0, [x22, x19, lsl #2]
  40fb88:	tbnz	w0, #31, 40fbb4 <ferror@plt+0xd114>
  40fb8c:	sxtw	x1, w0
  40fb90:	mul	x1, x1, x23
  40fb94:	ldr	x2, [x20, x1]
  40fb98:	cmp	x2, #0x1
  40fb9c:	b.ne	40fba4 <ferror@plt+0xd104>  // b.any
  40fba0:	str	xzr, [x20, x1]
  40fba4:	mov	w1, #0x98                  	// #152
  40fba8:	mov	x2, #0x0                   	// #0
  40fbac:	smaddl	x1, w0, w1, x20
  40fbb0:	bl	402770 <sigaction@plt>
  40fbb4:	add	x19, x19, #0x1
  40fbb8:	cmp	x19, #0x6
  40fbbc:	b.ne	40fb84 <ferror@plt+0xd0e4>  // b.any
  40fbc0:	mov	w0, w21
  40fbc4:	ldp	x19, x20, [sp, #16]
  40fbc8:	ldp	x21, x22, [sp, #32]
  40fbcc:	ldr	x23, [sp, #48]
  40fbd0:	ldp	x29, x30, [sp], #64
  40fbd4:	b	402490 <raise@plt>
  40fbd8:	sub	x19, x19, #0x1
  40fbdc:	str	w19, [x20]
  40fbe0:	ldr	x0, [x23, #888]
  40fbe4:	lsl	x19, x19, #3
  40fbe8:	ldr	x0, [x0, x19]
  40fbec:	blr	x0
  40fbf0:	b	40fb64 <ferror@plt+0xd0c4>
  40fbf4:	stp	x29, x30, [sp, #-208]!
  40fbf8:	mov	x29, sp
  40fbfc:	stp	x19, x20, [sp, #16]
  40fc00:	adrp	x19, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40fc04:	add	x19, x19, #0x378
  40fc08:	add	x19, x19, #0x8
  40fc0c:	mov	x20, #0x0                   	// #0
  40fc10:	str	x21, [sp, #32]
  40fc14:	mov	w21, #0xffffffff            	// #-1
  40fc18:	ldr	w0, [x19]
  40fc1c:	add	x2, sp, #0x38
  40fc20:	mov	x1, #0x0                   	// #0
  40fc24:	bl	402770 <sigaction@plt>
  40fc28:	tbnz	w0, #31, 40fc40 <ferror@plt+0xd1a0>
  40fc2c:	add	x0, sp, #0x38
  40fc30:	bl	412d98 <ferror@plt+0x102f8>
  40fc34:	cmp	x0, #0x1
  40fc38:	b.ne	40fc40 <ferror@plt+0xd1a0>  // b.any
  40fc3c:	str	w21, [x19]
  40fc40:	add	x20, x20, #0x1
  40fc44:	add	x19, x19, #0x4
  40fc48:	cmp	x20, #0x6
  40fc4c:	b.ne	40fc18 <ferror@plt+0xd178>  // b.any
  40fc50:	adrp	x0, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fc54:	mov	w1, #0x1                   	// #1
  40fc58:	ldp	x19, x20, [sp, #16]
  40fc5c:	strb	w1, [x0, #2924]
  40fc60:	ldr	x21, [sp, #32]
  40fc64:	ldp	x29, x30, [sp], #208
  40fc68:	ret
  40fc6c:	stp	x29, x30, [sp, #-48]!
  40fc70:	mov	x29, sp
  40fc74:	stp	x19, x20, [sp, #16]
  40fc78:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fc7c:	add	x19, x19, #0xb68
  40fc80:	stp	x21, x22, [sp, #32]
  40fc84:	ldrb	w0, [x19, #4]
  40fc88:	cbnz	w0, 40fc90 <ferror@plt+0xd1f0>
  40fc8c:	bl	40fbf4 <ferror@plt+0xd154>
  40fc90:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40fc94:	add	x20, x20, #0x378
  40fc98:	add	x20, x20, #0x8
  40fc9c:	mov	x21, #0x0                   	// #0
  40fca0:	add	x22, x19, #0x8
  40fca4:	mov	x0, x22
  40fca8:	bl	402640 <sigemptyset@plt>
  40fcac:	ldr	w1, [x20, x21, lsl #2]
  40fcb0:	tbnz	w1, #31, 40fcbc <ferror@plt+0xd21c>
  40fcb4:	mov	x0, x22
  40fcb8:	bl	402a00 <sigaddset@plt>
  40fcbc:	add	x21, x21, #0x1
  40fcc0:	cmp	x21, #0x6
  40fcc4:	b.ne	40fcac <ferror@plt+0xd20c>  // b.any
  40fcc8:	mov	w0, #0x1                   	// #1
  40fccc:	strb	w0, [x19, #136]
  40fcd0:	ldp	x19, x20, [sp, #16]
  40fcd4:	ldp	x21, x22, [sp, #32]
  40fcd8:	ldp	x29, x30, [sp], #48
  40fcdc:	ret
  40fce0:	stp	x29, x30, [sp, #-256]!
  40fce4:	mov	x29, sp
  40fce8:	stp	x19, x20, [sp, #16]
  40fcec:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fcf0:	add	x20, x19, #0xb68
  40fcf4:	stp	x23, x24, [sp, #48]
  40fcf8:	mov	x23, x0
  40fcfc:	ldrb	w0, [x20, #137]
  40fd00:	stp	x21, x22, [sp, #32]
  40fd04:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x194bc>
  40fd08:	add	x24, x21, #0x378
  40fd0c:	stp	x25, x26, [sp, #64]
  40fd10:	str	x27, [sp, #80]
  40fd14:	cbnz	w0, 40fd88 <ferror@plt+0xd2e8>
  40fd18:	ldrb	w0, [x20, #4]
  40fd1c:	cbnz	w0, 40fd24 <ferror@plt+0xd284>
  40fd20:	bl	40fbf4 <ferror@plt+0xd154>
  40fd24:	adrp	x0, 40f000 <ferror@plt+0xc560>
  40fd28:	add	x0, x0, #0xb40
  40fd2c:	str	x0, [sp, #104]
  40fd30:	mov	w0, #0x40000000            	// #1073741824
  40fd34:	adrp	x25, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fd38:	add	x26, x24, #0x8
  40fd3c:	add	x25, x25, #0xcf8
  40fd40:	mov	x22, #0x0                   	// #0
  40fd44:	mov	w27, #0x98                  	// #152
  40fd48:	str	w0, [sp, #240]
  40fd4c:	add	x0, sp, #0x70
  40fd50:	bl	402640 <sigemptyset@plt>
  40fd54:	ldr	w0, [x26, x22, lsl #2]
  40fd58:	tbnz	w0, #31, 40fd74 <ferror@plt+0xd2d4>
  40fd5c:	cmp	w0, #0x3f
  40fd60:	b.le	40fd68 <ferror@plt+0xd2c8>
  40fd64:	bl	4027d0 <abort@plt>
  40fd68:	smaddl	x2, w0, w27, x25
  40fd6c:	add	x1, sp, #0x68
  40fd70:	bl	402770 <sigaction@plt>
  40fd74:	add	x22, x22, #0x1
  40fd78:	cmp	x22, #0x6
  40fd7c:	b.ne	40fd54 <ferror@plt+0xd2b4>  // b.any
  40fd80:	mov	w0, #0x1                   	// #1
  40fd84:	strb	w0, [x20, #137]
  40fd88:	ldr	w0, [x19, #2920]
  40fd8c:	ldr	x25, [x24, #40]
  40fd90:	cmp	x25, w0, sxtw
  40fd94:	b.ne	40fdd4 <ferror@plt+0xd334>  // b.any
  40fd98:	lsl	x26, x25, #1
  40fd9c:	mov	x1, #0x8                   	// #8
  40fda0:	ldr	x22, [x21, #888]
  40fda4:	mov	x0, x26
  40fda8:	bl	413d3c <ferror@plt+0x1129c>
  40fdac:	mov	x1, #0x0                   	// #0
  40fdb0:	cmp	x25, x1
  40fdb4:	b.ne	40fe0c <ferror@plt+0xd36c>  // b.any
  40fdb8:	str	x0, [x21, #888]
  40fdbc:	add	x20, x20, #0x90
  40fdc0:	str	x26, [x24, #40]
  40fdc4:	cmp	x22, x20
  40fdc8:	b.eq	40fdd4 <ferror@plt+0xd334>  // b.none
  40fdcc:	mov	x0, x22
  40fdd0:	bl	4028c0 <free@plt>
  40fdd4:	ldr	x1, [x21, #888]
  40fdd8:	ldr	w0, [x19, #2920]
  40fddc:	ldp	x21, x22, [sp, #32]
  40fde0:	sbfiz	x0, x0, #3, #32
  40fde4:	ldp	x25, x26, [sp, #64]
  40fde8:	str	x23, [x1, x0]
  40fdec:	ldp	x23, x24, [sp, #48]
  40fdf0:	ldr	w0, [x19, #2920]
  40fdf4:	ldr	x27, [sp, #80]
  40fdf8:	add	w0, w0, #0x1
  40fdfc:	str	w0, [x19, #2920]
  40fe00:	ldp	x19, x20, [sp, #16]
  40fe04:	ldp	x29, x30, [sp], #256
  40fe08:	ret
  40fe0c:	ldr	x2, [x22, x1, lsl #3]
  40fe10:	str	x2, [x0, x1, lsl #3]
  40fe14:	add	x1, x1, #0x1
  40fe18:	b	40fdb0 <ferror@plt+0xd310>
  40fe1c:	stp	x29, x30, [sp, #-32]!
  40fe20:	mov	x29, sp
  40fe24:	str	x19, [sp, #16]
  40fe28:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fe2c:	add	x19, x19, #0xb68
  40fe30:	ldrb	w0, [x19, #136]
  40fe34:	cbnz	w0, 40fe3c <ferror@plt+0xd39c>
  40fe38:	bl	40fc6c <ferror@plt+0xd1cc>
  40fe3c:	add	x1, x19, #0x8
  40fe40:	mov	x2, #0x0                   	// #0
  40fe44:	ldr	x19, [sp, #16]
  40fe48:	mov	w0, #0x0                   	// #0
  40fe4c:	ldp	x29, x30, [sp], #32
  40fe50:	b	4024b0 <sigprocmask@plt>
  40fe54:	stp	x29, x30, [sp, #-32]!
  40fe58:	mov	x29, sp
  40fe5c:	str	x19, [sp, #16]
  40fe60:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0x7ba8>
  40fe64:	add	x19, x19, #0xb68
  40fe68:	ldrb	w0, [x19, #136]
  40fe6c:	cbnz	w0, 40fe74 <ferror@plt+0xd3d4>
  40fe70:	bl	40fc6c <ferror@plt+0xd1cc>
  40fe74:	add	x1, x19, #0x8
  40fe78:	mov	x2, #0x0                   	// #0
  40fe7c:	ldr	x19, [sp, #16]
  40fe80:	mov	w0, #0x1                   	// #1
  40fe84:	ldp	x29, x30, [sp], #32
  40fe88:	b	4024b0 <sigprocmask@plt>
  40fe8c:	stp	x29, x30, [sp, #-16]!
  40fe90:	mov	x29, sp
  40fe94:	bl	40fea8 <ferror@plt+0xd408>
  40fe98:	cbnz	x0, 40fea0 <ferror@plt+0xd400>
  40fe9c:	bl	413eec <ferror@plt+0x1144c>
  40fea0:	ldp	x29, x30, [sp], #16
  40fea4:	ret
  40fea8:	stp	x29, x30, [sp, #-80]!
  40feac:	mov	x29, sp
  40feb0:	stp	x19, x20, [sp, #16]
  40feb4:	stp	x21, x22, [sp, #32]
  40feb8:	mov	x22, x1
  40febc:	mov	x21, x2
  40fec0:	stp	x23, x24, [sp, #48]
  40fec4:	mov	x23, x0
  40fec8:	stp	x25, x26, [sp, #64]
  40fecc:	bl	414b68 <_obstack_memory_used@@Base+0x24>
  40fed0:	mov	x19, x0
  40fed4:	sub	x26, x19, x23
  40fed8:	bl	414bb8 <_obstack_memory_used@@Base+0x74>
  40fedc:	add	x26, x26, x0
  40fee0:	add	x24, x26, #0x1
  40fee4:	cbz	x0, 40ff88 <ferror@plt+0xd4e8>
  40fee8:	add	x19, x19, x0
  40feec:	ldurb	w0, [x19, #-1]
  40fef0:	cmp	w0, #0x2f
  40fef4:	cset	w0, ne  // ne = any
  40fef8:	sxtw	x20, w0
  40fefc:	mov	x19, x22
  40ff00:	ldrb	w0, [x19]
  40ff04:	cmp	w0, #0x2f
  40ff08:	b.eq	40ff90 <ferror@plt+0xd4f0>  // b.none
  40ff0c:	mov	x0, x19
  40ff10:	bl	402450 <strlen@plt>
  40ff14:	mov	x25, x0
  40ff18:	add	x0, x20, x0
  40ff1c:	add	x0, x0, x24
  40ff20:	bl	402600 <malloc@plt>
  40ff24:	mov	x24, x0
  40ff28:	cbz	x0, 40ff6c <ferror@plt+0xd4cc>
  40ff2c:	mov	x1, x23
  40ff30:	mov	x2, x26
  40ff34:	bl	4028f0 <mempcpy@plt>
  40ff38:	mov	w1, #0x2f                  	// #47
  40ff3c:	strb	w1, [x0]
  40ff40:	add	x0, x0, x20
  40ff44:	cbz	x21, 40ff5c <ferror@plt+0xd4bc>
  40ff48:	ldrb	w1, [x22]
  40ff4c:	cmp	w1, #0x2f
  40ff50:	cset	x1, eq  // eq = none
  40ff54:	sub	x1, x0, x1
  40ff58:	str	x1, [x21]
  40ff5c:	mov	x2, x25
  40ff60:	mov	x1, x19
  40ff64:	bl	4028f0 <mempcpy@plt>
  40ff68:	strb	wzr, [x0]
  40ff6c:	mov	x0, x24
  40ff70:	ldp	x19, x20, [sp, #16]
  40ff74:	ldp	x21, x22, [sp, #32]
  40ff78:	ldp	x23, x24, [sp, #48]
  40ff7c:	ldp	x25, x26, [sp, #64]
  40ff80:	ldp	x29, x30, [sp], #80
  40ff84:	ret
  40ff88:	mov	w0, #0x0                   	// #0
  40ff8c:	b	40fef8 <ferror@plt+0xd458>
  40ff90:	add	x19, x19, #0x1
  40ff94:	b	40ff00 <ferror@plt+0xd460>
  40ff98:	stp	x29, x30, [sp, #-48]!
  40ff9c:	mov	x29, sp
  40ffa0:	stp	x19, x20, [sp, #16]
  40ffa4:	str	x21, [sp, #32]
  40ffa8:	mov	x21, x1
  40ffac:	bl	4025f0 <fopen@plt>
  40ffb0:	mov	x19, x0
  40ffb4:	cbz	x0, 40ffec <ferror@plt+0xd54c>
  40ffb8:	bl	402590 <fileno@plt>
  40ffbc:	cmp	w0, #0x2
  40ffc0:	b.hi	40ffec <ferror@plt+0xd54c>  // b.pmore
  40ffc4:	bl	413400 <ferror@plt+0x10960>
  40ffc8:	mov	w20, w0
  40ffcc:	tbz	w0, #31, 410000 <ferror@plt+0xd560>
  40ffd0:	bl	402a30 <__errno_location@plt>
  40ffd4:	mov	x20, x0
  40ffd8:	mov	x0, x19
  40ffdc:	ldr	w21, [x20]
  40ffe0:	bl	4144e0 <ferror@plt+0x11a40>
  40ffe4:	str	w21, [x20]
  40ffe8:	mov	x19, #0x0                   	// #0
  40ffec:	mov	x0, x19
  40fff0:	ldp	x19, x20, [sp, #16]
  40fff4:	ldr	x21, [sp, #32]
  40fff8:	ldp	x29, x30, [sp], #48
  40fffc:	ret
  410000:	mov	x0, x19
  410004:	bl	4144e0 <ferror@plt+0x11a40>
  410008:	cbz	w0, 410028 <ferror@plt+0xd588>
  41000c:	bl	402a30 <__errno_location@plt>
  410010:	mov	x19, x0
  410014:	mov	w0, w20
  410018:	ldr	w21, [x19]
  41001c:	bl	402760 <close@plt>
  410020:	str	w21, [x19]
  410024:	b	40ffe8 <ferror@plt+0xd548>
  410028:	mov	x1, x21
  41002c:	mov	w0, w20
  410030:	bl	4026b0 <fdopen@plt>
  410034:	mov	x19, x0
  410038:	cbnz	x0, 40ffec <ferror@plt+0xd54c>
  41003c:	b	41000c <ferror@plt+0xd56c>
  410040:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  410044:	ldr	x0, [x0, #1112]
  410048:	ret
  41004c:	ldr	x4, [x1, #8]
  410050:	ldr	x3, [x0, #48]
  410054:	ldr	x0, [x0, #40]
  410058:	udiv	x2, x4, x3
  41005c:	msub	x2, x2, x3, x4
  410060:	lsl	x2, x2, #3
  410064:	ldr	x3, [x0, x2]
  410068:	str	x3, [x1]
  41006c:	str	x1, [x0, x2]
  410070:	ret
  410074:	ldr	x0, [x0, #96]
  410078:	ret
  41007c:	ldr	x0, [x1, #32]
  410080:	ret
  410084:	ldr	x1, [x1, #16]
  410088:	add	x0, x0, #0x38
  41008c:	cmp	x1, x0
  410090:	csel	x0, x1, xzr, ne  // ne = any
  410094:	ret
  410098:	ldr	x1, [x1, #24]
  41009c:	add	x0, x0, #0x38
  4100a0:	cmp	x1, x0
  4100a4:	csel	x0, x1, xzr, ne  // ne = any
  4100a8:	ret
  4100ac:	ldr	x2, [x0]
  4100b0:	stp	x2, x0, [x8]
  4100b4:	add	x0, x0, #0x38
  4100b8:	ldr	x1, [x0, #16]
  4100bc:	str	x1, [x8, #24]
  4100c0:	str	x0, [x8, #32]
  4100c4:	ret
  4100c8:	ldp	x3, x4, [x0, #24]
  4100cc:	cmp	x3, x4
  4100d0:	b.eq	4100f4 <ferror@plt+0xd654>  // b.none
  4100d4:	ldr	x4, [x3, #32]
  4100d8:	str	x4, [x1]
  4100dc:	cbz	x2, 4100e4 <ferror@plt+0xd644>
  4100e0:	str	x3, [x2]
  4100e4:	ldr	x1, [x3, #16]
  4100e8:	str	x1, [x0, #24]
  4100ec:	mov	w0, #0x1                   	// #1
  4100f0:	ret
  4100f4:	mov	w0, #0x0                   	// #0
  4100f8:	b	4100f0 <ferror@plt+0xd650>
  4100fc:	ret
  410100:	stp	x29, x30, [sp, #-48]!
  410104:	mov	x29, sp
  410108:	stp	x19, x20, [sp, #16]
  41010c:	add	x20, x0, #0x38
  410110:	ldr	x19, [x0, #72]
  410114:	stp	x21, x22, [sp, #32]
  410118:	mov	x21, x1
  41011c:	mov	x22, x2
  410120:	cmp	x19, x20
  410124:	b.eq	41013c <ferror@plt+0xd69c>  // b.none
  410128:	ldr	x0, [x19, #32]
  41012c:	mov	x1, x22
  410130:	blr	x21
  410134:	cmp	w0, #0x0
  410138:	b.le	410154 <ferror@plt+0xd6b4>
  41013c:	mov	x19, #0x0                   	// #0
  410140:	mov	x0, x19
  410144:	ldp	x19, x20, [sp, #16]
  410148:	ldp	x21, x22, [sp, #32]
  41014c:	ldp	x29, x30, [sp], #48
  410150:	ret
  410154:	b.eq	410140 <ferror@plt+0xd6a0>  // b.none
  410158:	ldr	x19, [x19, #16]
  41015c:	b	410120 <ferror@plt+0xd680>
  410160:	stp	x29, x30, [sp, #-64]!
  410164:	mov	x29, sp
  410168:	stp	x19, x20, [sp, #16]
  41016c:	add	x19, x0, #0x38
  410170:	mov	x20, #0x0                   	// #0
  410174:	stp	x21, x22, [sp, #32]
  410178:	mov	x22, x1
  41017c:	ldr	x21, [x0, #72]
  410180:	str	x23, [sp, #48]
  410184:	mov	x23, x2
  410188:	cmp	x21, x19
  41018c:	b.eq	4101a4 <ferror@plt+0xd704>  // b.none
  410190:	ldr	x0, [x21, #32]
  410194:	mov	x1, x23
  410198:	blr	x22
  41019c:	cmp	w0, #0x0
  4101a0:	b.le	4101c0 <ferror@plt+0xd720>
  4101a4:	mov	x20, #0xffffffffffffffff    	// #-1
  4101a8:	mov	x0, x20
  4101ac:	ldp	x19, x20, [sp, #16]
  4101b0:	ldp	x21, x22, [sp, #32]
  4101b4:	ldr	x23, [sp, #48]
  4101b8:	ldp	x29, x30, [sp], #64
  4101bc:	ret
  4101c0:	b.eq	4101a8 <ferror@plt+0xd708>  // b.none
  4101c4:	add	x20, x20, #0x1
  4101c8:	ldr	x21, [x21, #16]
  4101cc:	b	410188 <ferror@plt+0xd6e8>
  4101d0:	stp	x29, x30, [sp, #-64]!
  4101d4:	cmp	x2, x3
  4101d8:	mov	x29, sp
  4101dc:	stp	x19, x20, [sp, #16]
  4101e0:	stp	x21, x22, [sp, #32]
  4101e4:	mov	x22, x1
  4101e8:	ldr	x1, [x0, #96]
  4101ec:	str	x23, [sp, #48]
  4101f0:	b.hi	410200 <ferror@plt+0xd760>  // b.pmore
  4101f4:	mov	x21, x3
  4101f8:	cmp	x1, x3
  4101fc:	b.cs	410204 <ferror@plt+0xd764>  // b.hs, b.nlast
  410200:	bl	4027d0 <abort@plt>
  410204:	cmp	x3, x2
  410208:	b.eq	410254 <ferror@plt+0xd7b4>  // b.none
  41020c:	sub	x3, x1, #0x1
  410210:	mov	x23, x4
  410214:	cmp	x2, x3, lsr #1
  410218:	b.hi	41027c <ferror@plt+0xd7dc>  // b.pmore
  41021c:	ldr	x20, [x0, #72]
  410220:	mov	x0, x2
  410224:	cbnz	x0, 410270 <ferror@plt+0xd7d0>
  410228:	mov	x19, x2
  41022c:	ldr	x0, [x20, #32]
  410230:	mov	x1, x23
  410234:	blr	x22
  410238:	cmp	w0, #0x0
  41023c:	b.gt	410254 <ferror@plt+0xd7b4>
  410240:	b.eq	410258 <ferror@plt+0xd7b8>  // b.none
  410244:	add	x19, x19, #0x1
  410248:	cmp	x21, x19
  41024c:	ldr	x20, [x20, #16]
  410250:	b.ne	41022c <ferror@plt+0xd78c>  // b.any
  410254:	mov	x19, #0xffffffffffffffff    	// #-1
  410258:	mov	x0, x19
  41025c:	ldp	x19, x20, [sp, #16]
  410260:	ldp	x21, x22, [sp, #32]
  410264:	ldr	x23, [sp, #48]
  410268:	ldp	x29, x30, [sp], #64
  41026c:	ret
  410270:	sub	x0, x0, #0x1
  410274:	ldr	x20, [x20, #16]
  410278:	b	410224 <ferror@plt+0xd784>
  41027c:	mvn	x3, x2
  410280:	ldr	x20, [x0, #80]
  410284:	add	x3, x3, x1
  410288:	cbz	x3, 410228 <ferror@plt+0xd788>
  41028c:	sub	x3, x3, #0x1
  410290:	ldr	x20, [x20, #24]
  410294:	b	410288 <ferror@plt+0xd7e8>
  410298:	stp	x29, x30, [sp, #-48]!
  41029c:	cmp	x2, x3
  4102a0:	mov	x29, sp
  4102a4:	stp	x19, x20, [sp, #16]
  4102a8:	stp	x21, x22, [sp, #32]
  4102ac:	mov	x21, x1
  4102b0:	ldr	x1, [x0, #96]
  4102b4:	b.hi	4102c0 <ferror@plt+0xd820>  // b.pmore
  4102b8:	cmp	x1, x3
  4102bc:	b.cs	4102c4 <ferror@plt+0xd824>  // b.hs, b.nlast
  4102c0:	bl	4027d0 <abort@plt>
  4102c4:	subs	x20, x3, x2
  4102c8:	b.eq	410308 <ferror@plt+0xd868>  // b.none
  4102cc:	sub	x3, x1, #0x1
  4102d0:	mov	x22, x4
  4102d4:	cmp	x2, x3, lsr #1
  4102d8:	b.hi	41032c <ferror@plt+0xd88c>  // b.pmore
  4102dc:	ldr	x19, [x0, #72]
  4102e0:	cbnz	x2, 410320 <ferror@plt+0xd880>
  4102e4:	ldr	x0, [x19, #32]
  4102e8:	mov	x1, x22
  4102ec:	blr	x21
  4102f0:	cmp	w0, #0x0
  4102f4:	b.gt	410308 <ferror@plt+0xd868>
  4102f8:	b.eq	41030c <ferror@plt+0xd86c>  // b.none
  4102fc:	subs	x20, x20, #0x1
  410300:	ldr	x19, [x19, #16]
  410304:	b.ne	4102e4 <ferror@plt+0xd844>  // b.any
  410308:	mov	x19, #0x0                   	// #0
  41030c:	mov	x0, x19
  410310:	ldp	x19, x20, [sp, #16]
  410314:	ldp	x21, x22, [sp, #32]
  410318:	ldp	x29, x30, [sp], #48
  41031c:	ret
  410320:	sub	x2, x2, #0x1
  410324:	ldr	x19, [x19, #16]
  410328:	b	4102e0 <ferror@plt+0xd840>
  41032c:	mvn	x2, x2
  410330:	ldr	x19, [x0, #80]
  410334:	add	x2, x2, x1
  410338:	cbz	x2, 4102e4 <ferror@plt+0xd844>
  41033c:	sub	x2, x2, #0x1
  410340:	ldr	x19, [x19, #24]
  410344:	b	410338 <ferror@plt+0xd898>
  410348:	cmp	x1, x2
  41034c:	b.hi	41035c <ferror@plt+0xd8bc>  // b.pmore
  410350:	ldr	x3, [x0, #96]
  410354:	cmp	x3, x2
  410358:	b.cs	410368 <ferror@plt+0xd8c8>  // b.hs, b.nlast
  41035c:	stp	x29, x30, [sp, #-16]!
  410360:	mov	x29, sp
  410364:	bl	4027d0 <abort@plt>
  410368:	sub	x4, x2, x1
  41036c:	sub	x2, x3, x2
  410370:	cmp	x4, x2
  410374:	csel	x3, x4, x2, cs  // cs = hs, nlast
  410378:	cmp	x1, x3
  41037c:	ldr	x5, [x0]
  410380:	b.ls	4103b8 <ferror@plt+0xd918>  // b.plast
  410384:	add	x1, x0, #0x38
  410388:	cbnz	x2, 4103a0 <ferror@plt+0xd900>
  41038c:	mov	x3, x1
  410390:	cbnz	x4, 4103ac <ferror@plt+0xd90c>
  410394:	stp	x5, x0, [x8]
  410398:	stp	x3, x1, [x8, #24]
  41039c:	ret
  4103a0:	sub	x2, x2, #0x1
  4103a4:	ldr	x1, [x1, #24]
  4103a8:	b	410388 <ferror@plt+0xd8e8>
  4103ac:	sub	x4, x4, #0x1
  4103b0:	ldr	x3, [x3, #24]
  4103b4:	b	410390 <ferror@plt+0xd8f0>
  4103b8:	cmp	x4, x2
  4103bc:	ldr	x3, [x0, #72]
  4103c0:	b.hi	4103e4 <ferror@plt+0xd944>  // b.pmore
  4103c4:	cbnz	x1, 4103fc <ferror@plt+0xd95c>
  4103c8:	mov	x1, x3
  4103cc:	cbz	x4, 410394 <ferror@plt+0xd8f4>
  4103d0:	sub	x4, x4, #0x1
  4103d4:	ldr	x1, [x1, #16]
  4103d8:	b	4103cc <ferror@plt+0xd92c>
  4103dc:	ldr	x3, [x3, #16]
  4103e0:	sub	x1, x1, #0x1
  4103e4:	cbnz	x1, 4103dc <ferror@plt+0xd93c>
  4103e8:	add	x1, x0, #0x38
  4103ec:	cbz	x2, 410394 <ferror@plt+0xd8f4>
  4103f0:	sub	x2, x2, #0x1
  4103f4:	ldr	x1, [x1, #24]
  4103f8:	b	4103ec <ferror@plt+0xd94c>
  4103fc:	sub	x1, x1, #0x1
  410400:	ldr	x3, [x3, #16]
  410404:	b	4103c4 <ferror@plt+0xd924>
  410408:	ldr	x4, [x1, #8]
  41040c:	ldr	x3, [x0, #48]
  410410:	ldr	x0, [x0, #40]
  410414:	udiv	x2, x4, x3
  410418:	msub	x2, x2, x3, x4
  41041c:	add	x0, x0, x2, lsl #3
  410420:	ldr	x2, [x0]
  410424:	cmp	x2, x1
  410428:	b.ne	410438 <ferror@plt+0xd998>  // b.any
  41042c:	ldr	x1, [x1]
  410430:	str	x1, [x0]
  410434:	ret
  410438:	cbnz	x2, 410448 <ferror@plt+0xd9a8>
  41043c:	stp	x29, x30, [sp, #-16]!
  410440:	mov	x29, sp
  410444:	bl	4027d0 <abort@plt>
  410448:	mov	x0, x2
  41044c:	b	410420 <ferror@plt+0xd980>
  410450:	stp	x29, x30, [sp, #-48]!
  410454:	mov	x29, sp
  410458:	stp	x21, x22, [sp, #32]
  41045c:	mov	x21, x0
  410460:	ldr	x0, [x1, #32]
  410464:	stp	x19, x20, [sp, #16]
  410468:	cmp	x0, x2
  41046c:	b.eq	4104b8 <ferror@plt+0xda18>  // b.none
  410470:	mov	x19, x1
  410474:	mov	x20, x2
  410478:	ldr	x1, [x21, #16]
  41047c:	cbz	x1, 4104cc <ferror@plt+0xda2c>
  410480:	mov	x0, x2
  410484:	blr	x1
  410488:	mov	x22, x0
  41048c:	ldr	x0, [x19, #8]
  410490:	cmp	x0, x22
  410494:	b.eq	4104d4 <ferror@plt+0xda34>  // b.none
  410498:	mov	x1, x19
  41049c:	mov	x0, x21
  4104a0:	bl	410408 <ferror@plt+0xd968>
  4104a4:	str	x22, [x19, #8]
  4104a8:	str	x20, [x19, #32]
  4104ac:	mov	x1, x19
  4104b0:	mov	x0, x21
  4104b4:	bl	41004c <ferror@plt+0xd5ac>
  4104b8:	mov	w0, #0x0                   	// #0
  4104bc:	ldp	x19, x20, [sp, #16]
  4104c0:	ldp	x21, x22, [sp, #32]
  4104c4:	ldp	x29, x30, [sp], #48
  4104c8:	ret
  4104cc:	mov	x22, x2
  4104d0:	b	41048c <ferror@plt+0xd9ec>
  4104d4:	str	x20, [x19, #32]
  4104d8:	b	4104b8 <ferror@plt+0xda18>
  4104dc:	stp	x29, x30, [sp, #-80]!
  4104e0:	mov	x29, sp
  4104e4:	stp	x19, x20, [sp, #16]
  4104e8:	mov	x20, x0
  4104ec:	ldr	x0, [x0, #96]
  4104f0:	stp	x21, x22, [sp, #32]
  4104f4:	stp	x23, x24, [sp, #48]
  4104f8:	cmp	x0, x2
  4104fc:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
  410500:	stp	x25, x26, [sp, #64]
  410504:	b.ls	41050c <ferror@plt+0xda6c>  // b.plast
  410508:	bl	4027d0 <abort@plt>
  41050c:	mov	x22, x1
  410510:	mov	x23, x2
  410514:	ldr	x1, [x20, #16]
  410518:	mov	x24, x3
  41051c:	cbz	x1, 410554 <ferror@plt+0xdab4>
  410520:	mov	x0, x3
  410524:	blr	x1
  410528:	mov	x25, x0
  41052c:	ldp	x0, x2, [x20, #40]
  410530:	ldr	x26, [x20, #8]
  410534:	udiv	x1, x25, x2
  410538:	msub	x1, x1, x2, x25
  41053c:	ldr	x19, [x0, x1, lsl #3]
  410540:	ldrb	w0, [x20, #32]
  410544:	cbnz	w0, 410600 <ferror@plt+0xdb60>
  410548:	cbnz	x19, 41055c <ferror@plt+0xdabc>
  41054c:	mov	x21, #0xffffffffffffffff    	// #-1
  410550:	b	410654 <ferror@plt+0xdbb4>
  410554:	mov	x25, x3
  410558:	b	41052c <ferror@plt+0xda8c>
  41055c:	ldr	x0, [x19, #8]
  410560:	cmp	x0, x25
  410564:	b.eq	410570 <ferror@plt+0xdad0>  // b.none
  410568:	ldr	x19, [x19]
  41056c:	b	410548 <ferror@plt+0xdaa8>
  410570:	ldr	x1, [x19, #32]
  410574:	cbz	x26, 4105ac <ferror@plt+0xdb0c>
  410578:	mov	x0, x24
  41057c:	blr	x26
  410580:	and	w1, w0, #0xff
  410584:	cbz	w1, 410568 <ferror@plt+0xdac8>
  410588:	add	x20, x20, #0x38
  41058c:	mov	x21, #0x0                   	// #0
  410590:	ldr	x19, [x19, #24]
  410594:	cmp	x19, x20
  410598:	b.ne	41067c <ferror@plt+0xdbdc>  // b.any
  41059c:	cmp	x21, x22
  4105a0:	ccmp	x21, x23, #0x2, cs  // cs = hs, nlast
  4105a4:	b.cc	410654 <ferror@plt+0xdbb4>  // b.lo, b.ul, b.last
  4105a8:	b	41054c <ferror@plt+0xdaac>
  4105ac:	cmp	x24, x1
  4105b0:	cset	w1, eq  // eq = none
  4105b4:	b	410584 <ferror@plt+0xdae4>
  4105b8:	ldr	x0, [x21, #8]
  4105bc:	cmp	x0, x25
  4105c0:	b.ne	4105e4 <ferror@plt+0xdb44>  // b.any
  4105c4:	ldr	x1, [x21, #32]
  4105c8:	cbz	x26, 4105f4 <ferror@plt+0xdb54>
  4105cc:	mov	x0, x24
  4105d0:	blr	x26
  4105d4:	and	w1, w0, #0xff
  4105d8:	cbz	w1, 4105e4 <ferror@plt+0xdb44>
  4105dc:	cbnz	x19, 410684 <ferror@plt+0xdbe4>
  4105e0:	mov	x19, x21
  4105e4:	ldr	x21, [x21]
  4105e8:	cbnz	x21, 4105b8 <ferror@plt+0xdb18>
  4105ec:	cbnz	x19, 410588 <ferror@plt+0xdae8>
  4105f0:	b	41054c <ferror@plt+0xdaac>
  4105f4:	cmp	x24, x1
  4105f8:	cset	w1, eq  // eq = none
  4105fc:	b	4105d8 <ferror@plt+0xdb38>
  410600:	mov	x21, x19
  410604:	mov	x19, #0x0                   	// #0
  410608:	b	4105e8 <ferror@plt+0xdb48>
  41060c:	ldr	x19, [x19, #16]
  410610:	sub	x1, x1, #0x1
  410614:	cbnz	x1, 41060c <ferror@plt+0xdb6c>
  410618:	mov	x21, x22
  41061c:	cmp	x21, x23
  410620:	b.cs	41054c <ferror@plt+0xdaac>  // b.hs, b.nlast
  410624:	ldr	x0, [x19, #8]
  410628:	cmp	x0, x25
  41062c:	b.eq	41063c <ferror@plt+0xdb9c>  // b.none
  410630:	add	x21, x21, #0x1
  410634:	ldr	x19, [x19, #16]
  410638:	b	41061c <ferror@plt+0xdb7c>
  41063c:	ldr	x1, [x19, #32]
  410640:	cbz	x26, 410670 <ferror@plt+0xdbd0>
  410644:	mov	x0, x24
  410648:	blr	x26
  41064c:	and	w1, w0, #0xff
  410650:	cbz	w1, 410630 <ferror@plt+0xdb90>
  410654:	mov	x0, x21
  410658:	ldp	x19, x20, [sp, #16]
  41065c:	ldp	x21, x22, [sp, #32]
  410660:	ldp	x23, x24, [sp, #48]
  410664:	ldp	x25, x26, [sp, #64]
  410668:	ldp	x29, x30, [sp], #80
  41066c:	ret
  410670:	cmp	x24, x1
  410674:	cset	w1, eq  // eq = none
  410678:	b	410650 <ferror@plt+0xdbb0>
  41067c:	add	x21, x21, #0x1
  410680:	b	410590 <ferror@plt+0xdaf0>
  410684:	mov	x1, x22
  410688:	ldr	x19, [x20, #72]
  41068c:	b	410614 <ferror@plt+0xdb74>
  410690:	stp	x29, x30, [sp, #-80]!
  410694:	cmp	x1, x2
  410698:	mov	x29, sp
  41069c:	stp	x23, x24, [sp, #48]
  4106a0:	ldr	x24, [x0, #96]
  4106a4:	stp	x19, x20, [sp, #16]
  4106a8:	stp	x21, x22, [sp, #32]
  4106ac:	ccmp	x24, x2, #0x0, ls  // ls = plast
  4106b0:	stp	x25, x26, [sp, #64]
  4106b4:	b.cs	4106bc <ferror@plt+0xdc1c>  // b.hs, b.nlast
  4106b8:	bl	4027d0 <abort@plt>
  4106bc:	mov	x21, x1
  4106c0:	mov	x20, x0
  4106c4:	ldr	x1, [x0, #16]
  4106c8:	mov	x22, x2
  4106cc:	mov	x26, x3
  4106d0:	cbz	x1, 410718 <ferror@plt+0xdc78>
  4106d4:	mov	x0, x3
  4106d8:	blr	x1
  4106dc:	mov	x23, x0
  4106e0:	ldr	x1, [x20, #48]
  4106e4:	ldr	x25, [x20, #8]
  4106e8:	udiv	x0, x23, x1
  4106ec:	msub	x0, x0, x1, x23
  4106f0:	ldr	x1, [x20, #40]
  4106f4:	ldr	x19, [x1, x0, lsl #3]
  4106f8:	ldrb	w0, [x20, #32]
  4106fc:	cbnz	w0, 41080c <ferror@plt+0xdd6c>
  410700:	cbz	x19, 410738 <ferror@plt+0xdc98>
  410704:	ldr	x0, [x19, #8]
  410708:	cmp	x0, x23
  41070c:	b.eq	410720 <ferror@plt+0xdc80>  // b.none
  410710:	ldr	x19, [x19]
  410714:	b	410700 <ferror@plt+0xdc60>
  410718:	mov	x23, x3
  41071c:	b	4106e0 <ferror@plt+0xdc40>
  410720:	ldr	x1, [x19, #32]
  410724:	cbz	x25, 410758 <ferror@plt+0xdcb8>
  410728:	mov	x0, x26
  41072c:	blr	x25
  410730:	and	w0, w0, #0xff
  410734:	cbz	w0, 410710 <ferror@plt+0xdc70>
  410738:	cbz	x21, 410764 <ferror@plt+0xdcc4>
  41073c:	ldr	x0, [x20, #72]
  410740:	cmp	x19, x0
  410744:	b.eq	410828 <ferror@plt+0xdd88>  // b.none
  410748:	subs	x21, x21, #0x1
  41074c:	b.eq	410764 <ferror@plt+0xdcc4>  // b.none
  410750:	ldr	x0, [x0, #16]
  410754:	b	410740 <ferror@plt+0xdca0>
  410758:	cmp	x26, x1
  41075c:	cset	w0, eq  // eq = none
  410760:	b	410734 <ferror@plt+0xdc94>
  410764:	cmp	x24, x22
  410768:	b.ls	410860 <ferror@plt+0xddc0>  // b.plast
  41076c:	ldr	x0, [x20, #80]
  410770:	sub	x22, x24, x22
  410774:	cmp	x19, x0
  410778:	b.eq	410828 <ferror@plt+0xdd88>  // b.none
  41077c:	subs	x22, x22, #0x1
  410780:	b.eq	410860 <ferror@plt+0xddc0>  // b.none
  410784:	ldr	x0, [x0, #24]
  410788:	b	410774 <ferror@plt+0xdcd4>
  41078c:	ldr	x0, [x24, #8]
  410790:	cmp	x0, x23
  410794:	b.ne	4107b8 <ferror@plt+0xdd18>  // b.any
  410798:	ldr	x1, [x24, #32]
  41079c:	cbz	x25, 410800 <ferror@plt+0xdd60>
  4107a0:	mov	x0, x26
  4107a4:	blr	x25
  4107a8:	and	w0, w0, #0xff
  4107ac:	cbz	w0, 4107b8 <ferror@plt+0xdd18>
  4107b0:	cbnz	x19, 4108a0 <ferror@plt+0xde00>
  4107b4:	mov	x19, x24
  4107b8:	ldr	x24, [x24]
  4107bc:	cbnz	x24, 41078c <ferror@plt+0xdcec>
  4107c0:	cbz	x21, 4107d4 <ferror@plt+0xdd34>
  4107c4:	ldr	x0, [x20, #72]
  4107c8:	add	x1, x20, #0x38
  4107cc:	cmp	x0, x1
  4107d0:	b.ne	410888 <ferror@plt+0xdde8>  // b.any
  4107d4:	ldr	x2, [x20, #96]
  4107d8:	cmp	x2, x22
  4107dc:	b.ls	410860 <ferror@plt+0xddc0>  // b.plast
  4107e0:	ldr	x0, [x20, #80]
  4107e4:	sub	x22, x2, x22
  4107e8:	cmp	x19, x0
  4107ec:	b.eq	410828 <ferror@plt+0xdd88>  // b.none
  4107f0:	subs	x22, x22, #0x1
  4107f4:	b.eq	410860 <ferror@plt+0xddc0>  // b.none
  4107f8:	ldr	x0, [x0, #24]
  4107fc:	b	4107e8 <ferror@plt+0xdd48>
  410800:	cmp	x26, x1
  410804:	cset	w0, eq  // eq = none
  410808:	b	4107ac <ferror@plt+0xdd0c>
  41080c:	mov	x24, x19
  410810:	mov	x19, #0x0                   	// #0
  410814:	b	4107bc <ferror@plt+0xdd1c>
  410818:	ldr	x19, [x19, #16]
  41081c:	sub	x21, x21, #0x1
  410820:	cbnz	x21, 410818 <ferror@plt+0xdd78>
  410824:	cbnz	x22, 410830 <ferror@plt+0xdd90>
  410828:	mov	x19, #0x0                   	// #0
  41082c:	b	410860 <ferror@plt+0xddc0>
  410830:	ldr	x0, [x19, #8]
  410834:	cmp	x0, x23
  410838:	b.eq	410848 <ferror@plt+0xdda8>  // b.none
  41083c:	sub	x22, x22, #0x1
  410840:	ldr	x19, [x19, #16]
  410844:	b	410824 <ferror@plt+0xdd84>
  410848:	ldr	x1, [x19, #32]
  41084c:	cbz	x25, 41087c <ferror@plt+0xdddc>
  410850:	mov	x0, x26
  410854:	blr	x25
  410858:	and	w0, w0, #0xff
  41085c:	cbz	w0, 41083c <ferror@plt+0xdd9c>
  410860:	mov	x0, x19
  410864:	ldp	x19, x20, [sp, #16]
  410868:	ldp	x21, x22, [sp, #32]
  41086c:	ldp	x23, x24, [sp, #48]
  410870:	ldp	x25, x26, [sp, #64]
  410874:	ldp	x29, x30, [sp], #80
  410878:	ret
  41087c:	cmp	x26, x1
  410880:	cset	w0, eq  // eq = none
  410884:	b	41085c <ferror@plt+0xddbc>
  410888:	cmp	x19, x0
  41088c:	b.eq	410828 <ferror@plt+0xdd88>  // b.none
  410890:	subs	x21, x21, #0x1
  410894:	b.eq	4107d4 <ferror@plt+0xdd34>  // b.none
  410898:	ldr	x0, [x0, #16]
  41089c:	b	4107cc <ferror@plt+0xdd2c>
  4108a0:	sub	x22, x22, x21
  4108a4:	ldr	x19, [x20, #72]
  4108a8:	b	410820 <ferror@plt+0xdd80>
  4108ac:	stp	x29, x30, [sp, #-48]!
  4108b0:	mov	x29, sp
  4108b4:	stp	x19, x20, [sp, #16]
  4108b8:	mov	x20, x0
  4108bc:	ldr	x0, [x0, #96]
  4108c0:	stp	x21, x22, [sp, #32]
  4108c4:	cmp	x0, x1
  4108c8:	b.hi	4108d0 <ferror@plt+0xde30>  // b.pmore
  4108cc:	bl	4027d0 <abort@plt>
  4108d0:	mov	x21, x2
  4108d4:	sub	x2, x0, #0x1
  4108d8:	cmp	x1, x2, lsr #1
  4108dc:	b.hi	410954 <ferror@plt+0xdeb4>  // b.pmore
  4108e0:	ldr	x19, [x20, #72]
  4108e4:	cbnz	x1, 410948 <ferror@plt+0xdea8>
  4108e8:	ldr	x0, [x19, #32]
  4108ec:	cmp	x0, x21
  4108f0:	b.eq	410934 <ferror@plt+0xde94>  // b.none
  4108f4:	ldr	x1, [x20, #16]
  4108f8:	cbz	x1, 410970 <ferror@plt+0xded0>
  4108fc:	mov	x0, x21
  410900:	blr	x1
  410904:	mov	x22, x0
  410908:	ldr	x0, [x19, #8]
  41090c:	cmp	x0, x22
  410910:	b.eq	410978 <ferror@plt+0xded8>  // b.none
  410914:	mov	x1, x19
  410918:	mov	x0, x20
  41091c:	bl	410408 <ferror@plt+0xd968>
  410920:	str	x22, [x19, #8]
  410924:	str	x21, [x19, #32]
  410928:	mov	x1, x19
  41092c:	mov	x0, x20
  410930:	bl	41004c <ferror@plt+0xd5ac>
  410934:	mov	x0, x19
  410938:	ldp	x19, x20, [sp, #16]
  41093c:	ldp	x21, x22, [sp, #32]
  410940:	ldp	x29, x30, [sp], #48
  410944:	ret
  410948:	sub	x1, x1, #0x1
  41094c:	ldr	x19, [x19, #16]
  410950:	b	4108e4 <ferror@plt+0xde44>
  410954:	mvn	x1, x1
  410958:	ldr	x19, [x20, #80]
  41095c:	add	x1, x0, x1
  410960:	cbz	x1, 4108e8 <ferror@plt+0xde48>
  410964:	sub	x1, x1, #0x1
  410968:	ldr	x19, [x19, #24]
  41096c:	b	410960 <ferror@plt+0xdec0>
  410970:	mov	x22, x21
  410974:	b	410908 <ferror@plt+0xde68>
  410978:	str	x21, [x19, #32]
  41097c:	b	410934 <ferror@plt+0xde94>
  410980:	ldr	x2, [x0, #96]
  410984:	cmp	x2, x1
  410988:	b.hi	410998 <ferror@plt+0xdef8>  // b.pmore
  41098c:	stp	x29, x30, [sp, #-16]!
  410990:	mov	x29, sp
  410994:	bl	4027d0 <abort@plt>
  410998:	sub	x3, x2, #0x1
  41099c:	cmp	x1, x3, lsr #1
  4109a0:	b.hi	4109c0 <ferror@plt+0xdf20>  // b.pmore
  4109a4:	ldr	x0, [x0, #72]
  4109a8:	cbnz	x1, 4109b4 <ferror@plt+0xdf14>
  4109ac:	ldr	x0, [x0, #32]
  4109b0:	ret
  4109b4:	sub	x1, x1, #0x1
  4109b8:	ldr	x0, [x0, #16]
  4109bc:	b	4109a8 <ferror@plt+0xdf08>
  4109c0:	mvn	x1, x1
  4109c4:	ldr	x0, [x0, #80]
  4109c8:	add	x1, x2, x1
  4109cc:	cbz	x1, 4109ac <ferror@plt+0xdf0c>
  4109d0:	sub	x1, x1, #0x1
  4109d4:	ldr	x0, [x0, #24]
  4109d8:	b	4109cc <ferror@plt+0xdf2c>
  4109dc:	stp	x29, x30, [sp, #-64]!
  4109e0:	mov	x29, sp
  4109e4:	stp	x19, x20, [sp, #16]
  4109e8:	mov	x19, x0
  4109ec:	stp	x21, x22, [sp, #32]
  4109f0:	add	x22, x0, #0x38
  4109f4:	ldr	x21, [x0, #24]
  4109f8:	ldr	x20, [x0, #72]
  4109fc:	str	x23, [sp, #48]
  410a00:	cmp	x20, x22
  410a04:	b.ne	410a28 <ferror@plt+0xdf88>  // b.any
  410a08:	ldr	x0, [x19, #40]
  410a0c:	bl	4028c0 <free@plt>
  410a10:	mov	x0, x19
  410a14:	ldp	x19, x20, [sp, #16]
  410a18:	ldp	x21, x22, [sp, #32]
  410a1c:	ldr	x23, [sp, #48]
  410a20:	ldp	x29, x30, [sp], #64
  410a24:	b	4028c0 <free@plt>
  410a28:	ldr	x23, [x20, #16]
  410a2c:	cbz	x21, 410a38 <ferror@plt+0xdf98>
  410a30:	ldr	x0, [x20, #32]
  410a34:	blr	x21
  410a38:	mov	x0, x20
  410a3c:	mov	x20, x23
  410a40:	bl	4028c0 <free@plt>
  410a44:	b	410a00 <ferror@plt+0xdf60>
  410a48:	stp	x29, x30, [sp, #-32]!
  410a4c:	mov	x2, x1
  410a50:	mov	x29, sp
  410a54:	ldr	x1, [x0, #96]
  410a58:	stp	x19, x20, [sp, #16]
  410a5c:	cmp	x1, x2
  410a60:	b.hi	410a68 <ferror@plt+0xdfc8>  // b.pmore
  410a64:	bl	4027d0 <abort@plt>
  410a68:	sub	x3, x1, #0x1
  410a6c:	mov	x20, x0
  410a70:	add	x0, x0, #0x38
  410a74:	cmp	x2, x3, lsr #1
  410a78:	b.ls	410aa4 <ferror@plt+0xe004>  // b.plast
  410a7c:	mvn	x2, x2
  410a80:	add	x2, x2, x1
  410a84:	ldr	x19, [x0, #24]
  410a88:	cbnz	x2, 410af8 <ferror@plt+0xe058>
  410a8c:	ldr	x1, [x19, #24]
  410a90:	str	x1, [x0, #24]
  410a94:	str	x0, [x1, #16]
  410a98:	b	410ab8 <ferror@plt+0xe018>
  410a9c:	sub	x2, x2, #0x1
  410aa0:	mov	x0, x19
  410aa4:	ldr	x19, [x0, #16]
  410aa8:	cbnz	x2, 410a9c <ferror@plt+0xdffc>
  410aac:	ldr	x1, [x19, #16]
  410ab0:	str	x1, [x0, #16]
  410ab4:	str	x0, [x1, #24]
  410ab8:	mov	x1, x19
  410abc:	mov	x0, x20
  410ac0:	bl	410408 <ferror@plt+0xd968>
  410ac4:	ldr	x0, [x20, #96]
  410ac8:	ldr	x1, [x20, #24]
  410acc:	sub	x0, x0, #0x1
  410ad0:	str	x0, [x20, #96]
  410ad4:	cbz	x1, 410ae0 <ferror@plt+0xe040>
  410ad8:	ldr	x0, [x19, #32]
  410adc:	blr	x1
  410ae0:	mov	x0, x19
  410ae4:	bl	4028c0 <free@plt>
  410ae8:	mov	w0, #0x1                   	// #1
  410aec:	ldp	x19, x20, [sp, #16]
  410af0:	ldp	x29, x30, [sp], #32
  410af4:	ret
  410af8:	sub	x2, x2, #0x1
  410afc:	mov	x0, x19
  410b00:	b	410a84 <ferror@plt+0xdfe4>
  410b04:	stp	x29, x30, [sp, #-32]!
  410b08:	mov	x29, sp
  410b0c:	stp	x19, x20, [sp, #16]
  410b10:	mov	x19, x1
  410b14:	mov	x20, x0
  410b18:	bl	410408 <ferror@plt+0xd968>
  410b1c:	ldp	x0, x1, [x19, #16]
  410b20:	str	x0, [x1, #16]
  410b24:	str	x1, [x0, #24]
  410b28:	ldr	x0, [x20, #96]
  410b2c:	ldr	x1, [x20, #24]
  410b30:	sub	x0, x0, #0x1
  410b34:	str	x0, [x20, #96]
  410b38:	cbz	x1, 410b44 <ferror@plt+0xe0a4>
  410b3c:	ldr	x0, [x19, #32]
  410b40:	blr	x1
  410b44:	mov	x0, x19
  410b48:	bl	4028c0 <free@plt>
  410b4c:	mov	w0, #0x1                   	// #1
  410b50:	ldp	x19, x20, [sp, #16]
  410b54:	ldp	x29, x30, [sp], #32
  410b58:	ret
  410b5c:	stp	x29, x30, [sp, #-64]!
  410b60:	mov	x29, sp
  410b64:	stp	x19, x20, [sp, #16]
  410b68:	mov	x20, x0
  410b6c:	stp	x21, x22, [sp, #32]
  410b70:	mov	x21, x1
  410b74:	mov	x22, x2
  410b78:	ldr	x19, [x0, #72]
  410b7c:	str	x23, [sp, #48]
  410b80:	add	x23, x0, #0x38
  410b84:	cmp	x19, x23
  410b88:	b.ne	410ba4 <ferror@plt+0xe104>  // b.any
  410b8c:	mov	w0, #0x0                   	// #0
  410b90:	ldp	x19, x20, [sp, #16]
  410b94:	ldp	x21, x22, [sp, #32]
  410b98:	ldr	x23, [sp, #48]
  410b9c:	ldp	x29, x30, [sp], #64
  410ba0:	ret
  410ba4:	ldr	x0, [x19, #32]
  410ba8:	mov	x1, x22
  410bac:	blr	x21
  410bb0:	cmp	w0, #0x0
  410bb4:	b.gt	410b8c <ferror@plt+0xe0ec>
  410bb8:	b.ne	410bd8 <ferror@plt+0xe138>  // b.any
  410bbc:	mov	x1, x19
  410bc0:	mov	x0, x20
  410bc4:	ldp	x19, x20, [sp, #16]
  410bc8:	ldp	x21, x22, [sp, #32]
  410bcc:	ldr	x23, [sp, #48]
  410bd0:	ldp	x29, x30, [sp], #64
  410bd4:	b	410b04 <ferror@plt+0xe064>
  410bd8:	ldr	x19, [x19, #16]
  410bdc:	b	410b84 <ferror@plt+0xe0e4>
  410be0:	stp	x29, x30, [sp, #-32]!
  410be4:	mov	x3, x1
  410be8:	mov	x1, #0x0                   	// #0
  410bec:	mov	x29, sp
  410bf0:	ldr	x2, [x0, #96]
  410bf4:	str	x19, [sp, #16]
  410bf8:	mov	x19, x0
  410bfc:	bl	410690 <ferror@plt+0xdbf0>
  410c00:	cbz	x0, 410c18 <ferror@plt+0xe178>
  410c04:	mov	x1, x0
  410c08:	mov	x0, x19
  410c0c:	ldr	x19, [sp, #16]
  410c10:	ldp	x29, x30, [sp], #32
  410c14:	b	410b04 <ferror@plt+0xe064>
  410c18:	mov	w0, #0x0                   	// #0
  410c1c:	ldr	x19, [sp, #16]
  410c20:	ldp	x29, x30, [sp], #32
  410c24:	ret
  410c28:	stp	x29, x30, [sp, #-80]!
  410c2c:	mov	x29, sp
  410c30:	stp	x19, x20, [sp, #16]
  410c34:	mov	x20, x5
  410c38:	stp	x21, x22, [sp, #32]
  410c3c:	mov	x22, x2
  410c40:	mov	x21, x3
  410c44:	stp	x23, x24, [sp, #48]
  410c48:	mov	x24, x1
  410c4c:	mov	x23, x6
  410c50:	stp	x25, x26, [sp, #64]
  410c54:	mov	x25, x0
  410c58:	and	w26, w4, #0xff
  410c5c:	mov	x0, #0x68                  	// #104
  410c60:	bl	402600 <malloc@plt>
  410c64:	mov	x19, x0
  410c68:	cbz	x0, 410cf8 <ferror@plt+0xe258>
  410c6c:	strb	w26, [x0, #32]
  410c70:	lsr	x0, x20, #1
  410c74:	stp	x25, x24, [x19]
  410c78:	adds	x0, x0, x20
  410c7c:	stp	x22, x21, [x19, #16]
  410c80:	b.cs	410d14 <ferror@plt+0xe274>  // b.hs, b.nlast
  410c84:	cmp	x0, #0xa
  410c88:	mov	x1, #0xa                   	// #10
  410c8c:	csel	x1, x0, x1, cs  // cs = hs, nlast
  410c90:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x24bc>
  410c94:	add	x3, x3, #0x928
  410c98:	mov	x2, #0x0                   	// #0
  410c9c:	ldr	x0, [x3, x2, lsl #3]
  410ca0:	cmp	x1, x0
  410ca4:	b.ls	410cb8 <ferror@plt+0xe218>  // b.plast
  410ca8:	add	x2, x2, #0x1
  410cac:	cmp	x2, #0xe8
  410cb0:	b.ne	410c9c <ferror@plt+0xe1fc>  // b.any
  410cb4:	mov	x0, #0xffffffffffffffff    	// #-1
  410cb8:	str	x0, [x19, #48]
  410cbc:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
  410cc0:	cmp	x0, x1
  410cc4:	b.hi	410d88 <ferror@plt+0xe2e8>  // b.pmore
  410cc8:	mov	x1, #0x8                   	// #8
  410ccc:	bl	4026e0 <calloc@plt>
  410cd0:	str	x0, [x19, #40]
  410cd4:	cbz	x0, 410d88 <ferror@plt+0xe2e8>
  410cd8:	add	x24, x19, #0x38
  410cdc:	add	x23, x23, x20, lsl #3
  410ce0:	mov	x21, x24
  410ce4:	mov	x25, #0xfffffffffffffff8    	// #-8
  410ce8:	str	x20, [x19, #96]
  410cec:	cbnz	x20, 410d1c <ferror@plt+0xe27c>
  410cf0:	str	x24, [x21, #16]
  410cf4:	str	x21, [x19, #80]
  410cf8:	mov	x0, x19
  410cfc:	ldp	x19, x20, [sp, #16]
  410d00:	ldp	x21, x22, [sp, #32]
  410d04:	ldp	x23, x24, [sp, #48]
  410d08:	ldp	x25, x26, [sp, #64]
  410d0c:	ldp	x29, x30, [sp], #80
  410d10:	ret
  410d14:	mov	x1, #0xffffffffffffffff    	// #-1
  410d18:	b	410c90 <ferror@plt+0xe1f0>
  410d1c:	mov	x0, #0x28                  	// #40
  410d20:	bl	402600 <malloc@plt>
  410d24:	mov	x22, x0
  410d28:	cbz	x0, 410d78 <ferror@plt+0xe2d8>
  410d2c:	mul	x0, x20, x25
  410d30:	ldr	x1, [x19, #16]
  410d34:	ldr	x0, [x23, x0]
  410d38:	str	x0, [x22, #32]
  410d3c:	cbz	x1, 410d44 <ferror@plt+0xe2a4>
  410d40:	blr	x1
  410d44:	str	x0, [x22, #8]
  410d48:	mov	x1, x22
  410d4c:	mov	x0, x19
  410d50:	sub	x20, x20, #0x1
  410d54:	bl	41004c <ferror@plt+0xd5ac>
  410d58:	str	x21, [x22, #24]
  410d5c:	str	x22, [x21, #16]
  410d60:	mov	x21, x22
  410d64:	b	410cec <ferror@plt+0xe24c>
  410d68:	ldr	x20, [x21, #24]
  410d6c:	mov	x0, x21
  410d70:	bl	4028c0 <free@plt>
  410d74:	mov	x21, x20
  410d78:	cmp	x21, x24
  410d7c:	b.ne	410d68 <ferror@plt+0xe2c8>  // b.any
  410d80:	ldr	x0, [x19, #40]
  410d84:	bl	4028c0 <free@plt>
  410d88:	mov	x0, x19
  410d8c:	mov	x19, #0x0                   	// #0
  410d90:	bl	4028c0 <free@plt>
  410d94:	b	410cf8 <ferror@plt+0xe258>
  410d98:	stp	x29, x30, [sp, #-64]!
  410d9c:	mov	x29, sp
  410da0:	stp	x19, x20, [sp, #16]
  410da4:	mov	x20, x3
  410da8:	stp	x21, x22, [sp, #32]
  410dac:	mov	x22, x1
  410db0:	mov	x21, x2
  410db4:	stp	x23, x24, [sp, #48]
  410db8:	mov	x23, x0
  410dbc:	and	w24, w4, #0xff
  410dc0:	mov	x0, #0x68                  	// #104
  410dc4:	bl	402600 <malloc@plt>
  410dc8:	mov	x19, x0
  410dcc:	cbz	x0, 410e00 <ferror@plt+0xe360>
  410dd0:	strb	w24, [x0, #32]
  410dd4:	mov	x0, #0xb                   	// #11
  410dd8:	stp	x23, x22, [x19]
  410ddc:	mov	x1, #0x8                   	// #8
  410de0:	stp	x21, x20, [x19, #16]
  410de4:	str	x0, [x19, #48]
  410de8:	bl	4026e0 <calloc@plt>
  410dec:	str	x0, [x19, #40]
  410df0:	cbnz	x0, 410e18 <ferror@plt+0xe378>
  410df4:	mov	x0, x19
  410df8:	mov	x19, #0x0                   	// #0
  410dfc:	bl	4028c0 <free@plt>
  410e00:	mov	x0, x19
  410e04:	ldp	x19, x20, [sp, #16]
  410e08:	ldp	x21, x22, [sp, #32]
  410e0c:	ldp	x23, x24, [sp, #48]
  410e10:	ldp	x29, x30, [sp], #64
  410e14:	ret
  410e18:	add	x0, x19, #0x38
  410e1c:	stp	x0, x0, [x19, #72]
  410e20:	str	xzr, [x19, #96]
  410e24:	b	410e00 <ferror@plt+0xe360>
  410e28:	stp	x29, x30, [sp, #-48]!
  410e2c:	mov	x29, sp
  410e30:	stp	x19, x20, [sp, #16]
  410e34:	mov	x19, x0
  410e38:	ldr	x0, [x0, #96]
  410e3c:	stp	x21, x22, [sp, #32]
  410e40:	ldr	x21, [x19, #48]
  410e44:	lsr	x1, x0, #1
  410e48:	adds	x1, x1, x0
  410e4c:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
  410e50:	cmp	x21, x1
  410e54:	b.cs	410e7c <ferror@plt+0xe3dc>  // b.hs, b.nlast
  410e58:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  410e5c:	add	x2, x2, #0x928
  410e60:	mov	x0, #0x0                   	// #0
  410e64:	ldr	x20, [x2, x0, lsl #3]
  410e68:	cmp	x1, x20
  410e6c:	b.ls	410e8c <ferror@plt+0xe3ec>  // b.plast
  410e70:	add	x0, x0, #0x1
  410e74:	cmp	x0, #0xe8
  410e78:	b.ne	410e64 <ferror@plt+0xe3c4>  // b.any
  410e7c:	ldp	x19, x20, [sp, #16]
  410e80:	ldp	x21, x22, [sp, #32]
  410e84:	ldp	x29, x30, [sp], #48
  410e88:	ret
  410e8c:	cmp	x21, x20
  410e90:	b.cs	410e7c <ferror@plt+0xe3dc>  // b.hs, b.nlast
  410e94:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  410e98:	cmp	x20, x0
  410e9c:	b.hi	410e7c <ferror@plt+0xe3dc>  // b.pmore
  410ea0:	mov	x0, x20
  410ea4:	mov	x1, #0x8                   	// #8
  410ea8:	ldr	x22, [x19, #40]
  410eac:	bl	4026e0 <calloc@plt>
  410eb0:	cbz	x0, 410e7c <ferror@plt+0xe3dc>
  410eb4:	cbnz	x21, 410ed0 <ferror@plt+0xe430>
  410eb8:	stp	x0, x20, [x19, #40]
  410ebc:	mov	x0, x22
  410ec0:	ldp	x19, x20, [sp, #16]
  410ec4:	ldp	x21, x22, [sp, #32]
  410ec8:	ldp	x29, x30, [sp], #48
  410ecc:	b	4028c0 <free@plt>
  410ed0:	sub	x21, x21, #0x1
  410ed4:	ldr	x1, [x22, x21, lsl #3]
  410ed8:	cbz	x1, 410eb4 <ferror@plt+0xe414>
  410edc:	ldp	x4, x3, [x1]
  410ee0:	udiv	x2, x3, x20
  410ee4:	msub	x2, x2, x20, x3
  410ee8:	lsl	x2, x2, #3
  410eec:	ldr	x3, [x0, x2]
  410ef0:	str	x3, [x1]
  410ef4:	str	x1, [x0, x2]
  410ef8:	mov	x1, x4
  410efc:	b	410ed8 <ferror@plt+0xe438>
  410f00:	stp	x29, x30, [sp, #-64]!
  410f04:	mov	x29, sp
  410f08:	str	x23, [sp, #48]
  410f0c:	ldr	x23, [x0, #96]
  410f10:	stp	x19, x20, [sp, #16]
  410f14:	stp	x21, x22, [sp, #32]
  410f18:	cmp	x23, x1
  410f1c:	b.cs	410f24 <ferror@plt+0xe484>  // b.hs, b.nlast
  410f20:	bl	4027d0 <abort@plt>
  410f24:	mov	x21, x0
  410f28:	mov	x22, x1
  410f2c:	mov	x20, x2
  410f30:	mov	x0, #0x28                  	// #40
  410f34:	bl	402600 <malloc@plt>
  410f38:	mov	x19, x0
  410f3c:	cbz	x0, 410fcc <ferror@plt+0xe52c>
  410f40:	ldr	x1, [x21, #16]
  410f44:	str	x20, [x0, #32]
  410f48:	cbz	x1, 410f58 <ferror@plt+0xe4b8>
  410f4c:	mov	x0, x20
  410f50:	blr	x1
  410f54:	mov	x20, x0
  410f58:	mov	x0, x21
  410f5c:	mov	x1, x19
  410f60:	str	x20, [x19, #8]
  410f64:	bl	41004c <ferror@plt+0xd5ac>
  410f68:	add	x0, x21, #0x38
  410f6c:	cmp	x22, x23, lsr #1
  410f70:	b.ls	410f9c <ferror@plt+0xe4fc>  // b.plast
  410f74:	sub	x22, x23, x22
  410f78:	cbnz	x22, 410fe4 <ferror@plt+0xe544>
  410f7c:	str	x0, [x19, #16]
  410f80:	ldr	x1, [x0, #24]
  410f84:	str	x1, [x19, #24]
  410f88:	str	x19, [x1, #16]
  410f8c:	str	x19, [x0, #24]
  410f90:	b	410fb8 <ferror@plt+0xe518>
  410f94:	sub	x22, x22, #0x1
  410f98:	mov	x0, x1
  410f9c:	ldr	x1, [x0, #16]
  410fa0:	cbnz	x22, 410f94 <ferror@plt+0xe4f4>
  410fa4:	str	x1, [x19, #16]
  410fa8:	str	x0, [x19, #24]
  410fac:	ldr	x1, [x19, #16]
  410fb0:	str	x19, [x1, #24]
  410fb4:	str	x19, [x0, #16]
  410fb8:	ldr	x0, [x21, #96]
  410fbc:	add	x0, x0, #0x1
  410fc0:	str	x0, [x21, #96]
  410fc4:	mov	x0, x21
  410fc8:	bl	410e28 <ferror@plt+0xe388>
  410fcc:	mov	x0, x19
  410fd0:	ldp	x19, x20, [sp, #16]
  410fd4:	ldp	x21, x22, [sp, #32]
  410fd8:	ldr	x23, [sp, #48]
  410fdc:	ldp	x29, x30, [sp], #64
  410fe0:	ret
  410fe4:	sub	x22, x22, #0x1
  410fe8:	ldr	x0, [x0, #24]
  410fec:	b	410f78 <ferror@plt+0xe4d8>
  410ff0:	stp	x29, x30, [sp, #-48]!
  410ff4:	mov	x29, sp
  410ff8:	stp	x19, x20, [sp, #16]
  410ffc:	mov	x20, x2
  411000:	stp	x21, x22, [sp, #32]
  411004:	mov	x21, x0
  411008:	mov	x22, x1
  41100c:	mov	x0, #0x28                  	// #40
  411010:	bl	402600 <malloc@plt>
  411014:	mov	x19, x0
  411018:	cbz	x0, 411070 <ferror@plt+0xe5d0>
  41101c:	ldr	x1, [x21, #16]
  411020:	str	x20, [x0, #32]
  411024:	cbz	x1, 411034 <ferror@plt+0xe594>
  411028:	mov	x0, x20
  41102c:	blr	x1
  411030:	mov	x20, x0
  411034:	mov	x0, x21
  411038:	mov	x1, x19
  41103c:	str	x20, [x19, #8]
  411040:	bl	41004c <ferror@plt+0xd5ac>
  411044:	ldr	x0, [x22, #16]
  411048:	str	x0, [x19, #16]
  41104c:	str	x22, [x19, #24]
  411050:	ldr	x0, [x19, #16]
  411054:	str	x19, [x0, #24]
  411058:	ldr	x0, [x21, #96]
  41105c:	str	x19, [x22, #16]
  411060:	add	x0, x0, #0x1
  411064:	str	x0, [x21, #96]
  411068:	mov	x0, x21
  41106c:	bl	410e28 <ferror@plt+0xe388>
  411070:	mov	x0, x19
  411074:	ldp	x19, x20, [sp, #16]
  411078:	ldp	x21, x22, [sp, #32]
  41107c:	ldp	x29, x30, [sp], #48
  411080:	ret
  411084:	stp	x29, x30, [sp, #-48]!
  411088:	mov	x29, sp
  41108c:	stp	x19, x20, [sp, #16]
  411090:	mov	x20, x2
  411094:	stp	x21, x22, [sp, #32]
  411098:	mov	x21, x0
  41109c:	mov	x22, x1
  4110a0:	mov	x0, #0x28                  	// #40
  4110a4:	bl	402600 <malloc@plt>
  4110a8:	mov	x19, x0
  4110ac:	cbz	x0, 411100 <ferror@plt+0xe660>
  4110b0:	ldr	x1, [x21, #16]
  4110b4:	str	x20, [x0, #32]
  4110b8:	cbz	x1, 4110c8 <ferror@plt+0xe628>
  4110bc:	mov	x0, x20
  4110c0:	blr	x1
  4110c4:	mov	x20, x0
  4110c8:	mov	x0, x21
  4110cc:	mov	x1, x19
  4110d0:	str	x20, [x19, #8]
  4110d4:	bl	41004c <ferror@plt+0xd5ac>
  4110d8:	ldr	x0, [x22, #24]
  4110dc:	str	x22, [x19, #16]
  4110e0:	str	x0, [x19, #24]
  4110e4:	str	x19, [x0, #16]
  4110e8:	ldr	x0, [x21, #96]
  4110ec:	str	x19, [x22, #24]
  4110f0:	add	x0, x0, #0x1
  4110f4:	str	x0, [x21, #96]
  4110f8:	mov	x0, x21
  4110fc:	bl	410e28 <ferror@plt+0xe388>
  411100:	mov	x0, x19
  411104:	ldp	x19, x20, [sp, #16]
  411108:	ldp	x21, x22, [sp, #32]
  41110c:	ldp	x29, x30, [sp], #48
  411110:	ret
  411114:	stp	x29, x30, [sp, #-48]!
  411118:	mov	x29, sp
  41111c:	stp	x19, x20, [sp, #16]
  411120:	mov	x20, x0
  411124:	mov	x0, #0x28                  	// #40
  411128:	str	x21, [sp, #32]
  41112c:	mov	x21, x1
  411130:	bl	402600 <malloc@plt>
  411134:	mov	x19, x0
  411138:	cbz	x0, 411190 <ferror@plt+0xe6f0>
  41113c:	ldr	x1, [x20, #16]
  411140:	str	x21, [x0, #32]
  411144:	cbz	x1, 411154 <ferror@plt+0xe6b4>
  411148:	mov	x0, x21
  41114c:	blr	x1
  411150:	mov	x21, x0
  411154:	mov	x0, x20
  411158:	mov	x1, x19
  41115c:	str	x21, [x19, #8]
  411160:	bl	41004c <ferror@plt+0xd5ac>
  411164:	add	x0, x20, #0x38
  411168:	str	x0, [x19, #16]
  41116c:	ldr	x0, [x20, #80]
  411170:	str	x0, [x19, #24]
  411174:	str	x19, [x0, #16]
  411178:	ldr	x0, [x20, #96]
  41117c:	str	x19, [x20, #80]
  411180:	add	x0, x0, #0x1
  411184:	str	x0, [x20, #96]
  411188:	mov	x0, x20
  41118c:	bl	410e28 <ferror@plt+0xe388>
  411190:	mov	x0, x19
  411194:	ldp	x19, x20, [sp, #16]
  411198:	ldr	x21, [sp, #32]
  41119c:	ldp	x29, x30, [sp], #48
  4111a0:	ret
  4111a4:	stp	x29, x30, [sp, #-64]!
  4111a8:	mov	x29, sp
  4111ac:	stp	x19, x20, [sp, #16]
  4111b0:	mov	x19, x0
  4111b4:	mov	x20, x2
  4111b8:	stp	x21, x22, [sp, #32]
  4111bc:	mov	x22, x1
  4111c0:	ldr	x21, [x0, #72]
  4111c4:	str	x23, [sp, #48]
  4111c8:	add	x23, x0, #0x38
  4111cc:	mov	x1, x20
  4111d0:	cmp	x21, x23
  4111d4:	b.ne	4111f0 <ferror@plt+0xe750>  // b.any
  4111d8:	mov	x0, x19
  4111dc:	ldp	x19, x20, [sp, #16]
  4111e0:	ldp	x21, x22, [sp, #32]
  4111e4:	ldr	x23, [sp, #48]
  4111e8:	ldp	x29, x30, [sp], #64
  4111ec:	b	411114 <ferror@plt+0xe674>
  4111f0:	ldr	x0, [x21, #32]
  4111f4:	blr	x22
  4111f8:	tbnz	w0, #31, 41121c <ferror@plt+0xe77c>
  4111fc:	mov	x2, x20
  411200:	mov	x1, x21
  411204:	mov	x0, x19
  411208:	ldp	x19, x20, [sp, #16]
  41120c:	ldp	x21, x22, [sp, #32]
  411210:	ldr	x23, [sp, #48]
  411214:	ldp	x29, x30, [sp], #64
  411218:	b	411084 <ferror@plt+0xe5e4>
  41121c:	ldr	x21, [x21, #16]
  411220:	b	4111cc <ferror@plt+0xe72c>
  411224:	stp	x29, x30, [sp, #-48]!
  411228:	mov	x29, sp
  41122c:	stp	x19, x20, [sp, #16]
  411230:	mov	x20, x0
  411234:	mov	x0, #0x28                  	// #40
  411238:	str	x21, [sp, #32]
  41123c:	mov	x21, x1
  411240:	bl	402600 <malloc@plt>
  411244:	mov	x19, x0
  411248:	cbz	x0, 4112a4 <ferror@plt+0xe804>
  41124c:	ldr	x1, [x20, #16]
  411250:	str	x21, [x0, #32]
  411254:	cbz	x1, 411264 <ferror@plt+0xe7c4>
  411258:	mov	x0, x21
  41125c:	blr	x1
  411260:	mov	x21, x0
  411264:	mov	x0, x20
  411268:	mov	x1, x19
  41126c:	str	x21, [x19, #8]
  411270:	bl	41004c <ferror@plt+0xd5ac>
  411274:	add	x0, x20, #0x38
  411278:	str	x0, [x19, #24]
  41127c:	ldr	x0, [x20, #72]
  411280:	str	x0, [x19, #16]
  411284:	ldr	x0, [x19, #16]
  411288:	str	x19, [x0, #24]
  41128c:	ldr	x0, [x20, #96]
  411290:	str	x19, [x20, #72]
  411294:	add	x0, x0, #0x1
  411298:	str	x0, [x20, #96]
  41129c:	mov	x0, x20
  4112a0:	bl	410e28 <ferror@plt+0xe388>
  4112a4:	mov	x0, x19
  4112a8:	ldp	x19, x20, [sp, #16]
  4112ac:	ldr	x21, [sp, #32]
  4112b0:	ldp	x29, x30, [sp], #48
  4112b4:	ret
  4112b8:	ldr	x5, [x0]
  4112bc:	mov	x16, x5
  4112c0:	br	x16
  4112c4:	ldr	x7, [x0, #8]
  4112c8:	mov	x16, x7
  4112cc:	br	x16
  4112d0:	ldr	x1, [x0]
  4112d4:	ldr	x1, [x1, #16]
  4112d8:	mov	x16, x1
  4112dc:	br	x16
  4112e0:	ldr	x2, [x0]
  4112e4:	ldr	x2, [x2, #24]
  4112e8:	mov	x16, x2
  4112ec:	br	x16
  4112f0:	ldr	x3, [x0]
  4112f4:	ldr	x3, [x3, #32]
  4112f8:	mov	x16, x3
  4112fc:	br	x16
  411300:	ldr	x2, [x0]
  411304:	ldr	x2, [x2, #40]
  411308:	mov	x16, x2
  41130c:	br	x16
  411310:	ldr	x2, [x0]
  411314:	ldr	x2, [x2, #48]
  411318:	mov	x16, x2
  41131c:	br	x16
  411320:	ldr	x2, [x0]
  411324:	ldr	x2, [x2, #56]
  411328:	mov	x16, x2
  41132c:	br	x16
  411330:	ldr	x3, [x0]
  411334:	ldr	x3, [x3, #64]
  411338:	mov	x16, x3
  41133c:	br	x16
  411340:	stp	x29, x30, [sp, #-32]!
  411344:	mov	x29, sp
  411348:	stp	x19, x20, [sp, #16]
  41134c:	mov	x20, x1
  411350:	mov	x19, x0
  411354:	ldr	x1, [x0]
  411358:	ldr	x1, [x1, #16]
  41135c:	blr	x1
  411360:	mov	x2, x0
  411364:	ldr	x1, [x19]
  411368:	mov	x3, x20
  41136c:	mov	x0, x19
  411370:	ldp	x19, x20, [sp, #16]
  411374:	ldp	x29, x30, [sp], #32
  411378:	ldr	x4, [x1, #72]
  41137c:	mov	x1, #0x0                   	// #0
  411380:	mov	x16, x4
  411384:	br	x16
  411388:	stp	x29, x30, [sp, #-48]!
  41138c:	mov	x29, sp
  411390:	stp	x19, x20, [sp, #16]
  411394:	mov	x20, x1
  411398:	mov	x19, x0
  41139c:	ldr	x1, [x0]
  4113a0:	ldr	x1, [x1, #16]
  4113a4:	str	x21, [sp, #32]
  4113a8:	mov	x21, x2
  4113ac:	blr	x1
  4113b0:	mov	x2, x0
  4113b4:	ldr	x1, [x19]
  4113b8:	mov	x3, x21
  4113bc:	mov	x0, x19
  4113c0:	ldr	x21, [sp, #32]
  4113c4:	ldr	x4, [x1, #72]
  4113c8:	mov	x1, x20
  4113cc:	ldp	x19, x20, [sp, #16]
  4113d0:	mov	x16, x4
  4113d4:	ldp	x29, x30, [sp], #48
  4113d8:	br	x16
  4113dc:	ldr	x4, [x0]
  4113e0:	ldr	x4, [x4, #72]
  4113e4:	mov	x16, x4
  4113e8:	br	x16
  4113ec:	stp	x29, x30, [sp, #-32]!
  4113f0:	mov	x29, sp
  4113f4:	stp	x19, x20, [sp, #16]
  4113f8:	mov	x20, x1
  4113fc:	mov	x19, x0
  411400:	ldr	x1, [x0]
  411404:	ldr	x1, [x1, #16]
  411408:	blr	x1
  41140c:	mov	x2, x0
  411410:	ldr	x1, [x19]
  411414:	mov	x3, x20
  411418:	mov	x0, x19
  41141c:	ldp	x19, x20, [sp, #16]
  411420:	ldp	x29, x30, [sp], #32
  411424:	ldr	x4, [x1, #80]
  411428:	mov	x1, #0x0                   	// #0
  41142c:	mov	x16, x4
  411430:	br	x16
  411434:	stp	x29, x30, [sp, #-48]!
  411438:	mov	x29, sp
  41143c:	stp	x19, x20, [sp, #16]
  411440:	mov	x20, x1
  411444:	mov	x19, x0
  411448:	ldr	x1, [x0]
  41144c:	ldr	x1, [x1, #16]
  411450:	str	x21, [sp, #32]
  411454:	mov	x21, x2
  411458:	blr	x1
  41145c:	mov	x2, x0
  411460:	ldr	x1, [x19]
  411464:	mov	x3, x21
  411468:	mov	x0, x19
  41146c:	ldr	x21, [sp, #32]
  411470:	ldr	x4, [x1, #80]
  411474:	mov	x1, x20
  411478:	ldp	x19, x20, [sp, #16]
  41147c:	mov	x16, x4
  411480:	ldp	x29, x30, [sp], #48
  411484:	br	x16
  411488:	ldr	x4, [x0]
  41148c:	ldr	x4, [x4, #80]
  411490:	mov	x16, x4
  411494:	br	x16
  411498:	ldr	x2, [x0]
  41149c:	ldr	x2, [x2, #88]
  4114a0:	mov	x16, x2
  4114a4:	br	x16
  4114a8:	ldr	x2, [x0]
  4114ac:	ldr	x2, [x2, #96]
  4114b0:	mov	x16, x2
  4114b4:	br	x16
  4114b8:	ldr	x3, [x0]
  4114bc:	ldr	x3, [x3, #104]
  4114c0:	mov	x16, x3
  4114c4:	br	x16
  4114c8:	ldr	x3, [x0]
  4114cc:	ldr	x3, [x3, #112]
  4114d0:	mov	x16, x3
  4114d4:	br	x16
  4114d8:	ldr	x3, [x0]
  4114dc:	ldr	x3, [x3, #120]
  4114e0:	mov	x16, x3
  4114e4:	br	x16
  4114e8:	ldr	x2, [x0]
  4114ec:	ldr	x2, [x2, #128]
  4114f0:	mov	x16, x2
  4114f4:	br	x16
  4114f8:	ldr	x2, [x0]
  4114fc:	ldr	x2, [x2, #136]
  411500:	mov	x16, x2
  411504:	br	x16
  411508:	ldr	x2, [x0]
  41150c:	ldr	x2, [x2, #144]
  411510:	mov	x16, x2
  411514:	br	x16
  411518:	ldr	x1, [x0]
  41151c:	ldr	x1, [x1, #152]
  411520:	mov	x16, x1
  411524:	br	x16
  411528:	stp	x29, x30, [sp, #-16]!
  41152c:	mov	x29, sp
  411530:	ldr	x1, [x0]
  411534:	ldr	x1, [x1, #160]
  411538:	blr	x1
  41153c:	ldp	x29, x30, [sp], #16
  411540:	ret
  411544:	stp	x29, x30, [sp, #-16]!
  411548:	mov	x29, sp
  41154c:	ldr	x3, [x0]
  411550:	ldr	x3, [x3, #168]
  411554:	blr	x3
  411558:	ldp	x29, x30, [sp], #16
  41155c:	ret
  411560:	ldr	x3, [x0]
  411564:	ldr	x3, [x3, #176]
  411568:	mov	x16, x3
  41156c:	br	x16
  411570:	ldr	x1, [x0]
  411574:	ldr	x1, [x1, #184]
  411578:	mov	x16, x1
  41157c:	br	x16
  411580:	ldr	x3, [x0]
  411584:	ldr	x3, [x3, #192]
  411588:	mov	x16, x3
  41158c:	br	x16
  411590:	ldr	x5, [x0]
  411594:	ldr	x5, [x5, #200]
  411598:	mov	x16, x5
  41159c:	br	x16
  4115a0:	ldr	x3, [x0]
  4115a4:	ldr	x3, [x3, #208]
  4115a8:	mov	x16, x3
  4115ac:	br	x16
  4115b0:	ldr	x5, [x0]
  4115b4:	ldr	x5, [x5, #216]
  4115b8:	mov	x16, x5
  4115bc:	br	x16
  4115c0:	ldr	x3, [x0]
  4115c4:	ldr	x3, [x3, #224]
  4115c8:	mov	x16, x3
  4115cc:	br	x16
  4115d0:	ldr	x3, [x0]
  4115d4:	ldr	x3, [x3, #232]
  4115d8:	mov	x16, x3
  4115dc:	br	x16
  4115e0:	adds	x0, x0, #0x10
  4115e4:	b.cs	411640 <ferror@plt+0xeba0>  // b.hs, b.nlast
  4115e8:	stp	x29, x30, [sp, #-16]!
  4115ec:	mov	x29, sp
  4115f0:	bl	402600 <malloc@plt>
  4115f4:	mov	x2, x0
  4115f8:	cbnz	x0, 411608 <ferror@plt+0xeb68>
  4115fc:	mov	x0, #0x0                   	// #0
  411600:	ldp	x29, x30, [sp], #16
  411604:	ret
  411608:	mov	w1, #0xfb4a                	// #64330
  41160c:	add	x0, x0, #0x10
  411610:	movk	w1, #0x1415, lsl #16
  411614:	str	w1, [x2, #12]
  411618:	mov	x1, #0x101                 	// #257
  41161c:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0xaba8>
  411620:	add	x3, x3, #0x2f8
  411624:	udiv	x1, x0, x1
  411628:	add	x1, x1, x1, lsl #8
  41162c:	sub	x1, x0, x1
  411630:	ldr	x4, [x3, x1, lsl #3]
  411634:	str	x4, [x2]
  411638:	str	x0, [x3, x1, lsl #3]
  41163c:	b	411600 <ferror@plt+0xeb60>
  411640:	mov	x0, #0x0                   	// #0
  411644:	ret
  411648:	mov	x2, x0
  41164c:	cbz	x0, 411688 <ferror@plt+0xebe8>
  411650:	ldur	w1, [x2, #-4]
  411654:	mov	w0, #0xfb4a                	// #64330
  411658:	movk	w0, #0x1415, lsl #16
  41165c:	cmp	w1, w0
  411660:	b.ne	411688 <ferror@plt+0xebe8>  // b.any
  411664:	mov	x1, #0x101                 	// #257
  411668:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  41166c:	add	x0, x0, #0x2f8
  411670:	udiv	x1, x2, x1
  411674:	add	x1, x1, x1, lsl #8
  411678:	sub	x1, x2, x1
  41167c:	add	x3, x0, x1, lsl #3
  411680:	ldr	x1, [x0, x1, lsl #3]
  411684:	cbnz	x1, 41168c <ferror@plt+0xebec>
  411688:	ret
  41168c:	cmp	x1, x2
  411690:	sub	x0, x1, #0x10
  411694:	b.ne	4116a4 <ferror@plt+0xec04>  // b.any
  411698:	ldur	x1, [x1, #-16]
  41169c:	str	x1, [x3]
  4116a0:	b	4028c0 <free@plt>
  4116a4:	mov	x3, x0
  4116a8:	ldur	x1, [x1, #-16]
  4116ac:	b	411684 <ferror@plt+0xebe4>
  4116b0:	mov	w5, w2
  4116b4:	mov	x4, x0
  4116b8:	and	w6, w5, #0xff
  4116bc:	mov	x2, x3
  4116c0:	and	w7, w1, #0xff
  4116c4:	cmp	w6, w1, uxtb
  4116c8:	b.ne	4116f0 <ferror@plt+0xec50>  // b.any
  4116cc:	mov	w1, w7
  4116d0:	b	402980 <memchr@plt>
  4116d4:	ldrb	w0, [x4]
  4116d8:	cmp	w0, w7
  4116dc:	b.eq	41177c <ferror@plt+0xecdc>  // b.none
  4116e0:	cmp	w0, w6
  4116e4:	b.eq	41177c <ferror@plt+0xecdc>  // b.none
  4116e8:	add	x4, x4, #0x1
  4116ec:	sub	x2, x2, #0x1
  4116f0:	cbz	x2, 4116fc <ferror@plt+0xec5c>
  4116f4:	tst	x4, #0x7
  4116f8:	b.ne	4116d4 <ferror@plt+0xec34>  // b.any
  4116fc:	ubfiz	w0, w1, #8, #8
  411700:	and	w1, w1, #0xff
  411704:	orr	w1, w0, w1
  411708:	ubfiz	w3, w5, #8, #8
  41170c:	and	w5, w5, #0xff
  411710:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  411714:	orr	w3, w3, w5
  411718:	sxtw	x0, w1
  41171c:	sbfiz	x1, x1, #16, #32
  411720:	movk	x8, #0xfeff
  411724:	orr	x0, x1, x0
  411728:	sxtw	x5, w3
  41172c:	sbfiz	x1, x3, #16, #32
  411730:	orr	x1, x1, x5
  411734:	orr	x0, x0, x0, lsl #32
  411738:	orr	x1, x1, x1, lsl #32
  41173c:	cmp	x2, #0x7
  411740:	b.ls	41176c <ferror@plt+0xeccc>  // b.plast
  411744:	ldr	x3, [x4]
  411748:	eor	x5, x3, x0
  41174c:	eor	x3, x3, x1
  411750:	add	x9, x5, x8
  411754:	bic	x5, x9, x5
  411758:	add	x9, x3, x8
  41175c:	bic	x3, x9, x3
  411760:	orr	x3, x5, x3
  411764:	tst	x3, #0x8080808080808080
  411768:	b.eq	411784 <ferror@plt+0xece4>  // b.none
  41176c:	add	x2, x4, x2
  411770:	cmp	x4, x2
  411774:	b.ne	411790 <ferror@plt+0xecf0>  // b.any
  411778:	mov	x4, #0x0                   	// #0
  41177c:	mov	x0, x4
  411780:	ret
  411784:	add	x4, x4, #0x8
  411788:	sub	x2, x2, #0x8
  41178c:	b	41173c <ferror@plt+0xec9c>
  411790:	ldrb	w0, [x4]
  411794:	cmp	w0, w7
  411798:	b.eq	41177c <ferror@plt+0xecdc>  // b.none
  41179c:	cmp	w0, w6
  4117a0:	b.eq	41177c <ferror@plt+0xecdc>  // b.none
  4117a4:	add	x4, x4, #0x1
  4117a8:	b	411770 <ferror@plt+0xecd0>
  4117ac:	ldr	x3, [x0]
  4117b0:	mov	x16, x3
  4117b4:	br	x16
  4117b8:	ldr	x1, [x0]
  4117bc:	ldr	x1, [x1, #8]
  4117c0:	mov	x16, x1
  4117c4:	br	x16
  4117c8:	ldr	x2, [x0]
  4117cc:	ldr	x2, [x2, #16]
  4117d0:	mov	x16, x2
  4117d4:	br	x16
  4117d8:	ldr	x4, [x0]
  4117dc:	ldr	x4, [x4, #24]
  4117e0:	mov	x16, x4
  4117e4:	br	x16
  4117e8:	ldr	x2, [x0]
  4117ec:	ldr	x2, [x2, #32]
  4117f0:	mov	x16, x2
  4117f4:	br	x16
  4117f8:	ldr	x2, [x0]
  4117fc:	ldr	x2, [x2, #40]
  411800:	mov	x16, x2
  411804:	br	x16
  411808:	ldr	x1, [x0]
  41180c:	ldr	x1, [x1, #48]
  411810:	mov	x16, x1
  411814:	br	x16
  411818:	stp	x29, x30, [sp, #-16]!
  41181c:	mov	x29, sp
  411820:	ldr	x1, [x0]
  411824:	ldr	x1, [x1, #56]
  411828:	blr	x1
  41182c:	ldp	x29, x30, [sp], #16
  411830:	ret
  411834:	ldr	x2, [x0]
  411838:	ldr	x2, [x2, #64]
  41183c:	mov	x16, x2
  411840:	br	x16
  411844:	ldr	x1, [x0]
  411848:	ldr	x1, [x1, #72]
  41184c:	mov	x16, x1
  411850:	br	x16
  411854:	stp	x29, x30, [sp, #-48]!
  411858:	mov	x29, sp
  41185c:	stp	x19, x20, [sp, #16]
  411860:	str	x21, [sp, #32]
  411864:	cbnz	x0, 411880 <ferror@plt+0xede0>
  411868:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  41186c:	ldr	x1, [x0, #1064]
  411870:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  411874:	add	x0, x0, #0x158
  411878:	bl	402460 <fputs@plt>
  41187c:	bl	4027d0 <abort@plt>
  411880:	mov	x19, x0
  411884:	mov	w1, #0x2f                  	// #47
  411888:	bl	402780 <strrchr@plt>
  41188c:	mov	x20, x0
  411890:	cbz	x0, 4118e0 <ferror@plt+0xee40>
  411894:	add	x21, x0, #0x1
  411898:	sub	x0, x21, x19
  41189c:	cmp	x0, #0x6
  4118a0:	b.le	4118e0 <ferror@plt+0xee40>
  4118a4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4118a8:	sub	x0, x20, #0x6
  4118ac:	add	x1, x1, #0x190
  4118b0:	mov	x2, #0x7                   	// #7
  4118b4:	bl	402660 <strncmp@plt>
  4118b8:	cbnz	w0, 4118e0 <ferror@plt+0xee40>
  4118bc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4118c0:	mov	x0, x21
  4118c4:	add	x1, x1, #0x198
  4118c8:	mov	x2, #0x3                   	// #3
  4118cc:	bl	402660 <strncmp@plt>
  4118d0:	cbnz	w0, 411900 <ferror@plt+0xee60>
  4118d4:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4118d8:	add	x19, x20, #0x4
  4118dc:	str	x19, [x0, #1112]
  4118e0:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4118e4:	ldr	x21, [sp, #32]
  4118e8:	str	x19, [x0, #2816]
  4118ec:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4118f0:	str	x19, [x0, #1056]
  4118f4:	ldp	x19, x20, [sp, #16]
  4118f8:	ldp	x29, x30, [sp], #48
  4118fc:	ret
  411900:	mov	x19, x21
  411904:	b	4118e0 <ferror@plt+0xee40>
  411908:	stp	xzr, xzr, [x8]
  41190c:	cmp	w0, #0xa
  411910:	stp	xzr, xzr, [x8, #16]
  411914:	stp	xzr, xzr, [x8, #32]
  411918:	str	xzr, [x8, #48]
  41191c:	b.ne	41192c <ferror@plt+0xee8c>  // b.any
  411920:	stp	x29, x30, [sp, #-16]!
  411924:	mov	x29, sp
  411928:	bl	4027d0 <abort@plt>
  41192c:	str	w0, [x8]
  411930:	ret
  411934:	stp	x29, x30, [sp, #-32]!
  411938:	mov	x29, sp
  41193c:	stp	x19, x20, [sp, #16]
  411940:	mov	x19, x0
  411944:	mov	w20, w1
  411948:	bl	414c58 <_obstack_memory_used@@Base+0x114>
  41194c:	ldrb	w2, [x0]
  411950:	and	w2, w2, #0xffffffdf
  411954:	cmp	w2, #0x55
  411958:	b.ne	4119c4 <ferror@plt+0xef24>  // b.any
  41195c:	ldrb	w1, [x0, #1]
  411960:	and	w1, w1, #0xffffffdf
  411964:	cmp	w1, #0x54
  411968:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  41196c:	ldrb	w1, [x0, #2]
  411970:	and	w1, w1, #0xffffffdf
  411974:	cmp	w1, #0x46
  411978:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  41197c:	ldrb	w1, [x0, #3]
  411980:	cmp	w1, #0x2d
  411984:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  411988:	ldrb	w1, [x0, #4]
  41198c:	cmp	w1, #0x38
  411990:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  411994:	ldrb	w0, [x0, #5]
  411998:	cbnz	w0, 411a3c <ferror@plt+0xef9c>
  41199c:	ldrb	w2, [x19]
  4119a0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4119a4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  4119a8:	add	x1, x1, #0x19f
  4119ac:	cmp	w2, #0x60
  4119b0:	add	x0, x0, #0x1a7
  4119b4:	csel	x0, x0, x1, eq  // eq = none
  4119b8:	ldp	x19, x20, [sp, #16]
  4119bc:	ldp	x29, x30, [sp], #32
  4119c0:	ret
  4119c4:	cmp	w2, #0x47
  4119c8:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  4119cc:	ldrb	w1, [x0, #1]
  4119d0:	and	w1, w1, #0xffffffdf
  4119d4:	cmp	w1, #0x42
  4119d8:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  4119dc:	ldrb	w1, [x0, #2]
  4119e0:	cmp	w1, #0x31
  4119e4:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  4119e8:	ldrb	w1, [x0, #3]
  4119ec:	cmp	w1, #0x38
  4119f0:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  4119f4:	ldrb	w1, [x0, #4]
  4119f8:	cmp	w1, #0x30
  4119fc:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  411a00:	ldrb	w1, [x0, #5]
  411a04:	cmp	w1, #0x33
  411a08:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  411a0c:	ldrb	w1, [x0, #6]
  411a10:	cmp	w1, #0x30
  411a14:	b.ne	411a3c <ferror@plt+0xef9c>  // b.any
  411a18:	ldrb	w0, [x0, #7]
  411a1c:	cbnz	w0, 411a3c <ferror@plt+0xef9c>
  411a20:	ldrb	w2, [x19]
  411a24:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  411a28:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  411a2c:	add	x1, x1, #0x19c
  411a30:	cmp	w2, #0x60
  411a34:	add	x0, x0, #0x1a3
  411a38:	b	4119b4 <ferror@plt+0xef14>
  411a3c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  411a40:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  411a44:	cmp	w20, #0x9
  411a48:	add	x1, x2, #0x301
  411a4c:	add	x0, x0, #0x8df
  411a50:	b	4119b4 <ferror@plt+0xef14>
  411a54:	sub	sp, sp, #0xf0
  411a58:	stp	x29, x30, [sp, #16]
  411a5c:	add	x29, sp, #0x10
  411a60:	stp	x19, x20, [sp, #32]
  411a64:	stp	x21, x22, [sp, #48]
  411a68:	mov	x21, x2
  411a6c:	stp	x23, x24, [sp, #64]
  411a70:	mov	x24, x3
  411a74:	stp	x25, x26, [sp, #80]
  411a78:	mov	w25, w4
  411a7c:	mov	x26, x0
  411a80:	stp	x27, x28, [sp, #96]
  411a84:	str	x1, [sp, #112]
  411a88:	str	w5, [sp, #120]
  411a8c:	str	x7, [sp, #128]
  411a90:	str	x6, [sp, #152]
  411a94:	bl	4028e0 <__ctype_get_mb_cur_max@plt>
  411a98:	str	x0, [sp, #160]
  411a9c:	cmp	w25, #0xa
  411aa0:	ldr	x0, [sp, #120]
  411aa4:	str	xzr, [sp, #136]
  411aa8:	ubfx	x28, x0, #1, #1
  411aac:	mov	w0, #0x1                   	// #1
  411ab0:	str	w0, [sp, #148]
  411ab4:	b.hi	411cb0 <ferror@plt+0xf210>  // b.pmore
  411ab8:	mov	w20, #0x0                   	// #0
  411abc:	mov	w23, #0x0                   	// #0
  411ac0:	mov	w22, #0x0                   	// #0
  411ac4:	mov	x10, #0x0                   	// #0
  411ac8:	mov	x6, #0x0                   	// #0
  411acc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  411ad0:	add	x0, x0, #0x1f8
  411ad4:	ldrb	w0, [x0, w25, uxtw]
  411ad8:	adr	x1, 411ae4 <ferror@plt+0xf044>
  411adc:	add	x0, x1, w0, sxtb #2
  411ae0:	br	x0
  411ae4:	ldr	x0, [sp, #112]
  411ae8:	mov	w28, #0x0                   	// #0
  411aec:	str	x0, [sp, #136]
  411af0:	b	411acc <ferror@plt+0xf02c>
  411af4:	mov	w28, #0x0                   	// #0
  411af8:	mov	x19, #0x0                   	// #0
  411afc:	b	411b1c <ferror@plt+0xf07c>
  411b00:	mov	w28, #0x1                   	// #1
  411b04:	adrp	x6, 417000 <_obstack_memory_used@@Base+0x24bc>
  411b08:	mov	w22, w28
  411b0c:	add	x6, x6, #0x8df
  411b10:	mov	x10, #0x1                   	// #1
  411b14:	mov	x19, #0x0                   	// #0
  411b18:	mov	w25, #0x5                   	// #5
  411b1c:	ldr	x0, [sp, #136]
  411b20:	mov	x13, #0x0                   	// #0
  411b24:	str	w20, [sp, #144]
  411b28:	ldr	x27, [sp, #112]
  411b2c:	str	x0, [sp, #112]
  411b30:	cmn	x24, #0x1
  411b34:	b.ne	412550 <ferror@plt+0xfab0>  // b.any
  411b38:	ldrb	w0, [x21, x13]
  411b3c:	cmp	w0, #0x0
  411b40:	cset	w14, ne  // ne = any
  411b44:	cmp	w25, #0x2
  411b48:	cbnz	w14, 411cd4 <ferror@plt+0xf234>
  411b4c:	cset	w0, eq  // eq = none
  411b50:	cmp	x19, #0x0
  411b54:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  411b58:	b.eq	411b60 <ferror@plt+0xf0c0>  // b.none
  411b5c:	cbnz	w28, 411de8 <ferror@plt+0xf348>
  411b60:	eor	w5, w28, #0x1
  411b64:	ands	w0, w0, w5
  411b68:	b.eq	4125b4 <ferror@plt+0xfb14>  // b.none
  411b6c:	ldr	w1, [sp, #144]
  411b70:	cbz	w1, 412578 <ferror@plt+0xfad8>
  411b74:	ldr	w0, [sp, #148]
  411b78:	cbz	w0, 412558 <ferror@plt+0xfab8>
  411b7c:	ldr	w5, [sp, #120]
  411b80:	mov	x3, x24
  411b84:	ldr	x1, [sp, #112]
  411b88:	mov	x2, x21
  411b8c:	ldr	x7, [sp, #128]
  411b90:	mov	w4, #0x5                   	// #5
  411b94:	ldr	x6, [sp, #152]
  411b98:	ldr	x0, [sp, #240]
  411b9c:	str	x0, [sp]
  411ba0:	mov	x0, x26
  411ba4:	bl	411a54 <ferror@plt+0xefb4>
  411ba8:	b	412594 <ferror@plt+0xfaf4>
  411bac:	adrp	x6, 417000 <_obstack_memory_used@@Base+0x24bc>
  411bb0:	add	x6, x6, #0x8df
  411bb4:	cbnz	w28, 411cc8 <ferror@plt+0xf228>
  411bb8:	ldr	x0, [sp, #112]
  411bbc:	cbz	x0, 411bc8 <ferror@plt+0xf128>
  411bc0:	mov	w0, #0x22                  	// #34
  411bc4:	strb	w0, [x26]
  411bc8:	mov	x10, #0x1                   	// #1
  411bcc:	mov	w22, #0x1                   	// #1
  411bd0:	mov	x19, x10
  411bd4:	b	411b1c <ferror@plt+0xf07c>
  411bd8:	cmp	w25, #0xa
  411bdc:	b.eq	411c08 <ferror@plt+0xf168>  // b.none
  411be0:	mov	w1, w25
  411be4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  411be8:	add	x0, x0, #0x38
  411bec:	bl	411934 <ferror@plt+0xee94>
  411bf0:	mov	w1, w25
  411bf4:	str	x0, [sp, #128]
  411bf8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x14bc>
  411bfc:	add	x0, x0, #0x301
  411c00:	bl	411934 <ferror@plt+0xee94>
  411c04:	str	x0, [sp, #240]
  411c08:	mov	x19, #0x0                   	// #0
  411c0c:	cbnz	w28, 411c1c <ferror@plt+0xf17c>
  411c10:	ldr	x0, [sp, #128]
  411c14:	ldrb	w0, [x0, x19]
  411c18:	cbnz	w0, 411c34 <ferror@plt+0xf194>
  411c1c:	ldr	x0, [sp, #240]
  411c20:	mov	w22, #0x1                   	// #1
  411c24:	bl	402450 <strlen@plt>
  411c28:	mov	x10, x0
  411c2c:	ldr	x6, [sp, #240]
  411c30:	b	411b1c <ferror@plt+0xf07c>
  411c34:	ldr	x1, [sp, #112]
  411c38:	cmp	x1, x19
  411c3c:	b.ls	411c44 <ferror@plt+0xf1a4>  // b.plast
  411c40:	strb	w0, [x26, x19]
  411c44:	add	x19, x19, #0x1
  411c48:	b	411c10 <ferror@plt+0xf170>
  411c4c:	cbnz	w28, 411c98 <ferror@plt+0xf1f8>
  411c50:	mov	w22, #0x1                   	// #1
  411c54:	ldr	x0, [sp, #112]
  411c58:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x14bc>
  411c5c:	add	x6, x6, #0x301
  411c60:	cbz	x0, 411c6c <ferror@plt+0xf1cc>
  411c64:	mov	w0, #0x27                  	// #39
  411c68:	strb	w0, [x26]
  411c6c:	mov	x10, #0x1                   	// #1
  411c70:	mov	w28, #0x0                   	// #0
  411c74:	mov	x19, x10
  411c78:	b	411ca8 <ferror@plt+0xf208>
  411c7c:	cbz	w28, 411c54 <ferror@plt+0xf1b4>
  411c80:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x14bc>
  411c84:	mov	x10, #0x1                   	// #1
  411c88:	add	x6, x6, #0x301
  411c8c:	b	411af8 <ferror@plt+0xf058>
  411c90:	mov	w28, #0x1                   	// #1
  411c94:	mov	w22, w28
  411c98:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x14bc>
  411c9c:	add	x6, x6, #0x301
  411ca0:	mov	x10, #0x1                   	// #1
  411ca4:	mov	x19, #0x0                   	// #0
  411ca8:	mov	w25, #0x2                   	// #2
  411cac:	b	411b1c <ferror@plt+0xf07c>
  411cb0:	bl	4027d0 <abort@plt>
  411cb4:	mov	w28, #0x0                   	// #0
  411cb8:	mov	w22, #0x1                   	// #1
  411cbc:	b	411af8 <ferror@plt+0xf058>
  411cc0:	mov	w28, #0x1                   	// #1
  411cc4:	b	411c98 <ferror@plt+0xf1f8>
  411cc8:	mov	w22, w28
  411ccc:	mov	x10, #0x1                   	// #1
  411cd0:	b	411af8 <ferror@plt+0xf058>
  411cd4:	add	x0, x21, x13
  411cd8:	str	x0, [sp, #136]
  411cdc:	cset	w3, ne  // ne = any
  411ce0:	ands	w3, w22, w3
  411ce4:	b.eq	411d98 <ferror@plt+0xf2f8>  // b.none
  411ce8:	cbz	x10, 411d98 <ferror@plt+0xf2f8>
  411cec:	cmp	x10, #0x1
  411cf0:	add	x20, x13, x10
  411cf4:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  411cf8:	b.ne	411d28 <ferror@plt+0xf288>  // b.any
  411cfc:	mov	x0, x21
  411d00:	stp	x13, x6, [sp, #168]
  411d04:	str	x10, [sp, #184]
  411d08:	str	w3, [sp, #192]
  411d0c:	str	w14, [sp, #200]
  411d10:	bl	402450 <strlen@plt>
  411d14:	ldp	x13, x6, [sp, #168]
  411d18:	mov	x24, x0
  411d1c:	ldr	w3, [sp, #192]
  411d20:	ldr	w14, [sp, #200]
  411d24:	ldr	x10, [sp, #184]
  411d28:	cmp	x20, x24
  411d2c:	b.hi	411d98 <ferror@plt+0xf2f8>  // b.pmore
  411d30:	ldr	x0, [sp, #136]
  411d34:	mov	x2, x10
  411d38:	mov	x1, x6
  411d3c:	stp	x6, x10, [sp, #168]
  411d40:	str	x13, [sp, #184]
  411d44:	str	w3, [sp, #192]
  411d48:	str	w14, [sp, #200]
  411d4c:	bl	402830 <memcmp@plt>
  411d50:	ldr	w3, [sp, #192]
  411d54:	ldr	w14, [sp, #200]
  411d58:	ldp	x6, x10, [sp, #168]
  411d5c:	ldr	x13, [sp, #184]
  411d60:	cbnz	w0, 411d98 <ferror@plt+0xf2f8>
  411d64:	cbnz	w28, 4125e0 <ferror@plt+0xfb40>
  411d68:	mov	w18, w3
  411d6c:	ldr	x0, [sp, #136]
  411d70:	ldrb	w7, [x0]
  411d74:	cmp	w7, #0x3f
  411d78:	b.ls	411dc0 <ferror@plt+0xf320>  // b.plast
  411d7c:	cmp	w7, #0x5a
  411d80:	b.hi	411e74 <ferror@plt+0xf3d4>  // b.pmore
  411d84:	cmp	w7, #0x40
  411d88:	b.eq	411e84 <ferror@plt+0xf3e4>  // b.none
  411d8c:	mov	w20, w14
  411d90:	mov	w3, #0x0                   	// #0
  411d94:	b	4120d8 <ferror@plt+0xf638>
  411d98:	mov	w18, #0x0                   	// #0
  411d9c:	b	411d6c <ferror@plt+0xf2cc>
  411da0:	cmp	w0, #0x23
  411da4:	b.hi	411e84 <ferror@plt+0xf3e4>  // b.pmore
  411da8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  411dac:	add	x1, x1, #0x204
  411db0:	ldrh	w0, [x1, w0, uxtw #1]
  411db4:	adr	x1, 411dc0 <ferror@plt+0xf320>
  411db8:	add	x0, x1, w0, sxth #2
  411dbc:	br	x0
  411dc0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  411dc4:	add	x0, x0, #0x24c
  411dc8:	ldrh	w0, [x0, w7, uxtw #1]
  411dcc:	adr	x1, 411dd8 <ferror@plt+0xf338>
  411dd0:	add	x0, x1, w0, sxth #2
  411dd4:	br	x0
  411dd8:	mov	w0, #0x72                  	// #114
  411ddc:	cmp	w28, #0x0
  411de0:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  411de4:	b.ne	411df4 <ferror@plt+0xf354>  // b.any
  411de8:	mov	w25, #0x2                   	// #2
  411dec:	b	412030 <ferror@plt+0xf590>
  411df0:	mov	w0, #0x62                  	// #98
  411df4:	cbz	w22, 411fb8 <ferror@plt+0xf518>
  411df8:	mov	w7, w0
  411dfc:	mov	w20, #0x0                   	// #0
  411e00:	cmp	w25, #0x2
  411e04:	cset	w0, eq  // eq = none
  411e08:	cbnz	w28, 412030 <ferror@plt+0xf590>
  411e0c:	eor	w1, w23, #0x1
  411e10:	ands	w0, w0, w1
  411e14:	b.eq	411e58 <ferror@plt+0xf3b8>  // b.none
  411e18:	cmp	x27, x19
  411e1c:	b.ls	411e28 <ferror@plt+0xf388>  // b.plast
  411e20:	mov	w1, #0x27                  	// #39
  411e24:	strb	w1, [x26, x19]
  411e28:	add	x1, x19, #0x1
  411e2c:	cmp	x27, x1
  411e30:	b.ls	411e3c <ferror@plt+0xf39c>  // b.plast
  411e34:	mov	w2, #0x24                  	// #36
  411e38:	strb	w2, [x26, x1]
  411e3c:	add	x1, x19, #0x2
  411e40:	cmp	x27, x1
  411e44:	b.ls	411e50 <ferror@plt+0xf3b0>  // b.plast
  411e48:	mov	w2, #0x27                  	// #39
  411e4c:	strb	w2, [x26, x1]
  411e50:	add	x19, x19, #0x3
  411e54:	mov	w23, w0
  411e58:	cmp	x27, x19
  411e5c:	b.ls	411e68 <ferror@plt+0xf3c8>  // b.plast
  411e60:	mov	w0, #0x5c                  	// #92
  411e64:	strb	w0, [x26, x19]
  411e68:	add	x19, x19, #0x1
  411e6c:	mov	w3, w14
  411e70:	b	412114 <ferror@plt+0xf674>
  411e74:	sub	w0, w7, #0x5b
  411e78:	and	w1, w0, #0xff
  411e7c:	cmp	w1, #0x23
  411e80:	b.ls	411da0 <ferror@plt+0xf300>  // b.plast
  411e84:	ldr	x0, [sp, #160]
  411e88:	cmp	x0, #0x1
  411e8c:	b.ne	412284 <ferror@plt+0xf7e4>  // b.any
  411e90:	str	x13, [sp, #136]
  411e94:	stp	x6, x10, [sp, #168]
  411e98:	str	w7, [sp, #184]
  411e9c:	str	w18, [sp, #192]
  411ea0:	str	w14, [sp, #200]
  411ea4:	bl	402870 <__ctype_b_loc@plt>
  411ea8:	ldr	w7, [sp, #184]
  411eac:	ldr	x0, [x0]
  411eb0:	ldp	x15, x6, [sp, #160]
  411eb4:	ldrh	w20, [x0, w7, uxtw #1]
  411eb8:	ldr	w18, [sp, #192]
  411ebc:	ldr	w14, [sp, #200]
  411ec0:	ldr	x13, [sp, #136]
  411ec4:	ubfx	x20, x20, #14, #1
  411ec8:	ldr	x10, [sp, #176]
  411ecc:	eor	w3, w20, #0x1
  411ed0:	and	w3, w22, w3
  411ed4:	ands	w3, w3, #0xff
  411ed8:	b.eq	4120d8 <ferror@plt+0xf638>  // b.none
  411edc:	mov	w20, #0x0                   	// #0
  411ee0:	b	4123f4 <ferror@plt+0xf954>
  411ee4:	cbz	w22, 411fb0 <ferror@plt+0xf510>
  411ee8:	cmp	w25, #0x2
  411eec:	cset	w0, eq  // eq = none
  411ef0:	cbnz	w28, 4125e0 <ferror@plt+0xfb40>
  411ef4:	eor	w1, w23, #0x1
  411ef8:	ands	w1, w0, w1
  411efc:	b.eq	411fa8 <ferror@plt+0xf508>  // b.none
  411f00:	cmp	x27, x19
  411f04:	b.ls	411f10 <ferror@plt+0xf470>  // b.plast
  411f08:	mov	w0, #0x27                  	// #39
  411f0c:	strb	w0, [x26, x19]
  411f10:	add	x0, x19, #0x1
  411f14:	cmp	x27, x0
  411f18:	b.ls	411f24 <ferror@plt+0xf484>  // b.plast
  411f1c:	mov	w2, #0x24                  	// #36
  411f20:	strb	w2, [x26, x0]
  411f24:	add	x0, x19, #0x2
  411f28:	cmp	x27, x0
  411f2c:	b.ls	411f38 <ferror@plt+0xf498>  // b.plast
  411f30:	mov	w2, #0x27                  	// #39
  411f34:	strb	w2, [x26, x0]
  411f38:	add	x0, x19, #0x3
  411f3c:	mov	w23, w1
  411f40:	cmp	x27, x0
  411f44:	b.ls	411f50 <ferror@plt+0xf4b0>  // b.plast
  411f48:	mov	w1, #0x5c                  	// #92
  411f4c:	strb	w1, [x26, x0]
  411f50:	add	x19, x0, #0x1
  411f54:	cbz	w3, 412524 <ferror@plt+0xfa84>
  411f58:	add	x1, x13, #0x1
  411f5c:	cmp	x1, x24
  411f60:	b.cs	411fa0 <ferror@plt+0xf500>  // b.hs, b.nlast
  411f64:	ldrb	w1, [x21, x1]
  411f68:	sub	w1, w1, #0x30
  411f6c:	and	w1, w1, #0xff
  411f70:	cmp	w1, #0x9
  411f74:	b.hi	411fa0 <ferror@plt+0xf500>  // b.pmore
  411f78:	cmp	x27, x19
  411f7c:	b.ls	411f88 <ferror@plt+0xf4e8>  // b.plast
  411f80:	mov	w1, #0x30                  	// #48
  411f84:	strb	w1, [x26, x19]
  411f88:	add	x1, x0, #0x2
  411f8c:	cmp	x27, x1
  411f90:	b.ls	411f9c <ferror@plt+0xf4fc>  // b.plast
  411f94:	mov	w2, #0x30                  	// #48
  411f98:	strb	w2, [x26, x1]
  411f9c:	add	x19, x0, #0x3
  411fa0:	mov	w20, #0x0                   	// #0
  411fa4:	b	41252c <ferror@plt+0xfa8c>
  411fa8:	mov	x0, x19
  411fac:	b	411f40 <ferror@plt+0xf4a0>
  411fb0:	ldr	x0, [sp, #120]
  411fb4:	tbnz	w0, #0, 41216c <ferror@plt+0xf6cc>
  411fb8:	mov	w20, #0x0                   	// #0
  411fbc:	b	411d90 <ferror@plt+0xf2f0>
  411fc0:	cmp	w25, #0x2
  411fc4:	b.eq	41202c <ferror@plt+0xf58c>  // b.none
  411fc8:	cmp	w25, #0x5
  411fcc:	b.ne	411fb8 <ferror@plt+0xf518>  // b.any
  411fd0:	ldr	x0, [sp, #120]
  411fd4:	tbz	w0, #2, 411fb8 <ferror@plt+0xf518>
  411fd8:	add	x1, x13, #0x2
  411fdc:	cmp	x1, x24
  411fe0:	b.cs	411fb8 <ferror@plt+0xf518>  // b.hs, b.nlast
  411fe4:	ldr	x0, [sp, #136]
  411fe8:	ldrb	w0, [x0, #1]
  411fec:	cmp	w0, #0x3f
  411ff0:	b.ne	411fb8 <ferror@plt+0xf518>  // b.any
  411ff4:	ldrb	w7, [x21, x1]
  411ff8:	cmp	w7, #0x2f
  411ffc:	b.hi	412068 <ferror@plt+0xf5c8>  // b.pmore
  412000:	cmp	w7, #0x20
  412004:	b.ls	41253c <ferror@plt+0xfa9c>  // b.plast
  412008:	sub	w2, w7, #0x21
  41200c:	cmp	w2, #0xe
  412010:	b.hi	412534 <ferror@plt+0xfa94>  // b.pmore
  412014:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  412018:	add	x0, x0, #0x2cc
  41201c:	ldrh	w0, [x0, w2, uxtw #1]
  412020:	adr	x2, 41202c <ferror@plt+0xf58c>
  412024:	add	x0, x2, w0, sxth #2
  412028:	br	x0
  41202c:	cbz	w28, 411fb8 <ferror@plt+0xf518>
  412030:	ldr	x0, [sp, #240]
  412034:	cmp	w22, #0x0
  412038:	str	x0, [sp]
  41203c:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  412040:	ldr	w0, [sp, #120]
  412044:	mov	x3, x24
  412048:	mov	x2, x21
  41204c:	mov	x1, x27
  412050:	and	w5, w0, #0xfffffffd
  412054:	mov	x6, #0x0                   	// #0
  412058:	mov	w0, #0x4                   	// #4
  41205c:	csel	w4, w25, w0, ne  // ne = any
  412060:	ldr	x7, [sp, #128]
  412064:	b	411ba0 <ferror@plt+0xf100>
  412068:	sub	w2, w7, #0x3c
  41206c:	and	w2, w2, #0xff
  412070:	cmp	w2, #0x2
  412074:	b.hi	41253c <ferror@plt+0xfa9c>  // b.pmore
  412078:	cbnz	w28, 412030 <ferror@plt+0xf590>
  41207c:	cmp	x27, x19
  412080:	b.ls	41208c <ferror@plt+0xf5ec>  // b.plast
  412084:	mov	w0, #0x3f                  	// #63
  412088:	strb	w0, [x26, x19]
  41208c:	add	x0, x19, #0x1
  412090:	cmp	x27, x0
  412094:	b.ls	4120a0 <ferror@plt+0xf600>  // b.plast
  412098:	mov	w2, #0x22                  	// #34
  41209c:	strb	w2, [x26, x0]
  4120a0:	add	x0, x19, #0x2
  4120a4:	cmp	x27, x0
  4120a8:	b.ls	4120b4 <ferror@plt+0xf614>  // b.plast
  4120ac:	mov	w2, #0x22                  	// #34
  4120b0:	strb	w2, [x26, x0]
  4120b4:	add	x0, x19, #0x3
  4120b8:	cmp	x27, x0
  4120bc:	b.ls	4120c8 <ferror@plt+0xf628>  // b.plast
  4120c0:	mov	w2, #0x3f                  	// #63
  4120c4:	strb	w2, [x26, x0]
  4120c8:	add	x19, x19, #0x4
  4120cc:	mov	x13, x1
  4120d0:	mov	w20, #0x0                   	// #0
  4120d4:	mov	w3, #0x0                   	// #0
  4120d8:	cmp	w25, #0x2
  4120dc:	eor	w0, w22, #0x1
  4120e0:	cset	w1, eq  // eq = none
  4120e4:	orr	w0, w1, w0
  4120e8:	tst	w0, #0xff
  4120ec:	b.eq	4120f4 <ferror@plt+0xf654>  // b.none
  4120f0:	cbz	w28, 412110 <ferror@plt+0xf670>
  4120f4:	ldr	x0, [sp, #152]
  4120f8:	cbz	x0, 412110 <ferror@plt+0xf670>
  4120fc:	ldr	x1, [sp, #152]
  412100:	ubfx	x0, x7, #5, #8
  412104:	ldr	w0, [x1, x0, lsl #2]
  412108:	lsr	w0, w0, w7
  41210c:	tbnz	w0, #0, 411e00 <ferror@plt+0xf360>
  412110:	cbnz	w18, 411e00 <ferror@plt+0xf360>
  412114:	eor	w3, w3, #0x1
  412118:	tst	w23, w3
  41211c:	b.eq	41214c <ferror@plt+0xf6ac>  // b.none
  412120:	cmp	x27, x19
  412124:	b.ls	412130 <ferror@plt+0xf690>  // b.plast
  412128:	mov	w0, #0x27                  	// #39
  41212c:	strb	w0, [x26, x19]
  412130:	add	x0, x19, #0x1
  412134:	cmp	x27, x0
  412138:	b.ls	412144 <ferror@plt+0xf6a4>  // b.plast
  41213c:	mov	w1, #0x27                  	// #39
  412140:	strb	w1, [x26, x0]
  412144:	add	x19, x19, #0x2
  412148:	mov	w23, #0x0                   	// #0
  41214c:	cmp	x27, x19
  412150:	b.ls	412158 <ferror@plt+0xf6b8>  // b.plast
  412154:	strb	w7, [x26, x19]
  412158:	ldr	w0, [sp, #148]
  41215c:	cmp	w20, #0x0
  412160:	add	x19, x19, #0x1
  412164:	csel	w0, w0, wzr, ne  // ne = any
  412168:	str	w0, [sp, #148]
  41216c:	add	x13, x13, #0x1
  412170:	b	411b30 <ferror@plt+0xf090>
  412174:	mov	w0, #0x74                  	// #116
  412178:	b	411ddc <ferror@plt+0xf33c>
  41217c:	mov	w0, #0x76                  	// #118
  412180:	b	411df4 <ferror@plt+0xf354>
  412184:	cmp	w25, #0x2
  412188:	b.ne	41219c <ferror@plt+0xf6fc>  // b.any
  41218c:	cbnz	w28, 412030 <ferror@plt+0xf590>
  412190:	mov	w20, #0x0                   	// #0
  412194:	mov	w3, #0x0                   	// #0
  412198:	b	412114 <ferror@plt+0xf674>
  41219c:	cmp	w22, #0x0
  4121a0:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  4121a4:	b.eq	4121ac <ferror@plt+0xf70c>  // b.none
  4121a8:	cbnz	x10, 412190 <ferror@plt+0xf6f0>
  4121ac:	mov	w0, w7
  4121b0:	b	411ddc <ferror@plt+0xf33c>
  4121b4:	mov	w0, #0x6e                  	// #110
  4121b8:	b	411ddc <ferror@plt+0xf33c>
  4121bc:	mov	w0, #0x61                  	// #97
  4121c0:	b	411df4 <ferror@plt+0xf354>
  4121c4:	mov	w0, #0x66                  	// #102
  4121c8:	b	411df4 <ferror@plt+0xf354>
  4121cc:	cmn	x24, #0x1
  4121d0:	b.ne	4121fc <ferror@plt+0xf75c>  // b.any
  4121d4:	ldrb	w0, [x21, #1]
  4121d8:	cmp	w0, #0x0
  4121dc:	cset	w0, ne  // ne = any
  4121e0:	cbnz	w0, 411fb8 <ferror@plt+0xf518>
  4121e4:	cbnz	x13, 411fb8 <ferror@plt+0xf518>
  4121e8:	mov	w20, w14
  4121ec:	cmp	w25, #0x2
  4121f0:	csel	w3, w28, wzr, eq  // eq = none
  4121f4:	cbz	w3, 4120d8 <ferror@plt+0xf638>
  4121f8:	b	411de8 <ferror@plt+0xf348>
  4121fc:	cmp	x24, #0x1
  412200:	b	4121dc <ferror@plt+0xf73c>
  412204:	mov	w20, #0x0                   	// #0
  412208:	b	4121ec <ferror@plt+0xf74c>
  41220c:	cmp	w25, #0x2
  412210:	b.ne	412544 <ferror@plt+0xfaa4>  // b.any
  412214:	cbnz	w28, 412030 <ferror@plt+0xf590>
  412218:	ldr	x0, [sp, #112]
  41221c:	cmp	x27, #0x0
  412220:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  412224:	b.eq	412278 <ferror@plt+0xf7d8>  // b.none
  412228:	cmp	x27, x19
  41222c:	b.ls	412238 <ferror@plt+0xf798>  // b.plast
  412230:	mov	w0, #0x27                  	// #39
  412234:	strb	w0, [x26, x19]
  412238:	add	x0, x19, #0x1
  41223c:	cmp	x0, x27
  412240:	b.cs	41224c <ferror@plt+0xf7ac>  // b.hs, b.nlast
  412244:	mov	w1, #0x5c                  	// #92
  412248:	strb	w1, [x26, x0]
  41224c:	add	x0, x19, #0x2
  412250:	cmp	x0, x27
  412254:	b.cs	412260 <ferror@plt+0xf7c0>  // b.hs, b.nlast
  412258:	mov	w1, #0x27                  	// #39
  41225c:	strb	w1, [x26, x0]
  412260:	add	x19, x19, #0x3
  412264:	mov	w20, w14
  412268:	mov	w3, #0x0                   	// #0
  41226c:	mov	w23, #0x0                   	// #0
  412270:	str	w14, [sp, #144]
  412274:	b	4120d8 <ferror@plt+0xf638>
  412278:	str	x27, [sp, #112]
  41227c:	mov	x27, #0x0                   	// #0
  412280:	b	412238 <ferror@plt+0xf798>
  412284:	str	xzr, [sp, #232]
  412288:	cmn	x24, #0x1
  41228c:	b.ne	4122c4 <ferror@plt+0xf824>  // b.any
  412290:	mov	x0, x21
  412294:	stp	x13, x6, [sp, #168]
  412298:	str	x10, [sp, #184]
  41229c:	str	w7, [sp, #192]
  4122a0:	str	w18, [sp, #200]
  4122a4:	str	w14, [sp, #208]
  4122a8:	bl	402450 <strlen@plt>
  4122ac:	ldp	x13, x6, [sp, #168]
  4122b0:	mov	x24, x0
  4122b4:	ldr	w7, [sp, #192]
  4122b8:	ldr	w18, [sp, #200]
  4122bc:	ldr	w14, [sp, #208]
  4122c0:	ldr	x10, [sp, #184]
  4122c4:	mov	w20, w14
  4122c8:	mov	x15, #0x0                   	// #0
  4122cc:	add	x2, x13, x15
  4122d0:	add	x3, sp, #0xe8
  4122d4:	add	x1, x21, x2
  4122d8:	add	x0, sp, #0xe4
  4122dc:	sub	x2, x24, x2
  4122e0:	stp	x1, x13, [sp, #168]
  4122e4:	stp	x15, x6, [sp, #184]
  4122e8:	str	x10, [sp, #200]
  4122ec:	stp	w7, w18, [sp, #208]
  4122f0:	str	w14, [sp, #216]
  4122f4:	bl	4147cc <ferror@plt+0x11d2c>
  4122f8:	ldp	w7, w18, [sp, #208]
  4122fc:	mov	x3, x0
  412300:	ldr	w14, [sp, #216]
  412304:	ldp	x13, x15, [sp, #176]
  412308:	ldp	x6, x10, [sp, #192]
  41230c:	cbz	x0, 4123ec <ferror@plt+0xf94c>
  412310:	cmn	x0, #0x1
  412314:	b.eq	41233c <ferror@plt+0xf89c>  // b.none
  412318:	cmn	x0, #0x2
  41231c:	ldr	x1, [sp, #168]
  412320:	b.ne	41234c <ferror@plt+0xf8ac>  // b.any
  412324:	add	x0, x13, x15
  412328:	cmp	x24, x0
  41232c:	b.ls	41233c <ferror@plt+0xf89c>  // b.plast
  412330:	ldr	x0, [sp, #136]
  412334:	ldrb	w0, [x0, x15]
  412338:	cbnz	w0, 412344 <ferror@plt+0xf8a4>
  41233c:	mov	w20, #0x0                   	// #0
  412340:	b	4123ec <ferror@plt+0xf94c>
  412344:	add	x15, x15, #0x1
  412348:	b	412324 <ferror@plt+0xf884>
  41234c:	cmp	w28, #0x0
  412350:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  412354:	b.ne	412398 <ferror@plt+0xf8f8>  // b.any
  412358:	mov	x0, #0x1                   	// #1
  41235c:	b	412390 <ferror@plt+0xf8f0>
  412360:	ldrb	w2, [x1, x0]
  412364:	sub	w2, w2, #0x5b
  412368:	and	w2, w2, #0xff
  41236c:	cmp	w2, #0x21
  412370:	b.hi	41238c <ferror@plt+0xf8ec>  // b.pmore
  412374:	mov	x4, #0x1                   	// #1
  412378:	lsl	x2, x4, x2
  41237c:	mov	x4, #0x2b                  	// #43
  412380:	movk	x4, #0x2, lsl #32
  412384:	tst	x2, x4
  412388:	b.ne	411de8 <ferror@plt+0xf348>  // b.any
  41238c:	add	x0, x0, #0x1
  412390:	cmp	x0, x3
  412394:	b.ne	412360 <ferror@plt+0xf8c0>  // b.any
  412398:	ldr	w0, [sp, #228]
  41239c:	stp	x15, x13, [sp, #168]
  4123a0:	stp	x6, x10, [sp, #184]
  4123a4:	str	w7, [sp, #200]
  4123a8:	stp	w18, w14, [sp, #208]
  4123ac:	str	x3, [sp, #216]
  4123b0:	bl	402a10 <iswprint@plt>
  4123b4:	ldr	x15, [sp, #168]
  4123b8:	cmp	w0, #0x0
  4123bc:	ldr	x3, [sp, #216]
  4123c0:	csel	w20, w20, wzr, ne  // ne = any
  4123c4:	add	x0, sp, #0xe8
  4123c8:	add	x15, x15, x3
  4123cc:	str	x15, [sp, #168]
  4123d0:	str	x15, [sp, #216]
  4123d4:	bl	4027f0 <mbsinit@plt>
  4123d8:	ldr	w7, [sp, #200]
  4123dc:	ldp	w18, w14, [sp, #208]
  4123e0:	ldp	x15, x13, [sp, #168]
  4123e4:	ldp	x6, x10, [sp, #184]
  4123e8:	cbz	w0, 4122cc <ferror@plt+0xf82c>
  4123ec:	cmp	x15, #0x1
  4123f0:	b.ls	411ecc <ferror@plt+0xf42c>  // b.plast
  4123f4:	eor	w0, w20, #0x1
  4123f8:	add	x15, x13, x15
  4123fc:	and	w0, w22, w0
  412400:	mov	w3, #0x0                   	// #0
  412404:	and	w0, w0, #0xff
  412408:	mov	w16, #0x5c                  	// #92
  41240c:	mov	w1, #0x27                  	// #39
  412410:	mov	w17, #0x24                  	// #36
  412414:	cbz	w0, 412508 <ferror@plt+0xfa68>
  412418:	cmp	w25, #0x2
  41241c:	cset	w3, eq  // eq = none
  412420:	cbnz	w28, 4125e0 <ferror@plt+0xfb40>
  412424:	eor	w2, w23, #0x1
  412428:	ands	w2, w3, w2
  41242c:	b.eq	412464 <ferror@plt+0xf9c4>  // b.none
  412430:	cmp	x27, x19
  412434:	b.ls	41243c <ferror@plt+0xf99c>  // b.plast
  412438:	strb	w1, [x26, x19]
  41243c:	add	x3, x19, #0x1
  412440:	cmp	x27, x3
  412444:	b.ls	41244c <ferror@plt+0xf9ac>  // b.plast
  412448:	strb	w17, [x26, x3]
  41244c:	add	x3, x19, #0x2
  412450:	cmp	x27, x3
  412454:	b.ls	41245c <ferror@plt+0xf9bc>  // b.plast
  412458:	strb	w1, [x26, x3]
  41245c:	add	x19, x19, #0x3
  412460:	mov	w23, w2
  412464:	cmp	x27, x19
  412468:	b.ls	412470 <ferror@plt+0xf9d0>  // b.plast
  41246c:	strb	w16, [x26, x19]
  412470:	add	x3, x19, #0x1
  412474:	cmp	x27, x3
  412478:	b.ls	412488 <ferror@plt+0xf9e8>  // b.plast
  41247c:	lsr	w2, w7, #6
  412480:	add	w2, w2, #0x30
  412484:	strb	w2, [x26, x3]
  412488:	add	x3, x19, #0x2
  41248c:	cmp	x27, x3
  412490:	b.ls	4124a0 <ferror@plt+0xfa00>  // b.plast
  412494:	ubfx	x2, x7, #3, #3
  412498:	add	w2, w2, #0x30
  41249c:	strb	w2, [x26, x3]
  4124a0:	and	w7, w7, #0x7
  4124a4:	add	x19, x19, #0x3
  4124a8:	add	w7, w7, #0x30
  4124ac:	mov	w3, w0
  4124b0:	add	x2, x13, #0x1
  4124b4:	eor	w14, w3, #0x1
  4124b8:	and	w14, w23, w14
  4124bc:	cmp	x2, x15
  4124c0:	b.cs	412114 <ferror@plt+0xf674>  // b.hs, b.nlast
  4124c4:	cbz	w14, 4124ec <ferror@plt+0xfa4c>
  4124c8:	cmp	x27, x19
  4124cc:	b.ls	4124d4 <ferror@plt+0xfa34>  // b.plast
  4124d0:	strb	w1, [x26, x19]
  4124d4:	add	x13, x19, #0x1
  4124d8:	cmp	x27, x13
  4124dc:	b.ls	4124e4 <ferror@plt+0xfa44>  // b.plast
  4124e0:	strb	w1, [x26, x13]
  4124e4:	add	x19, x19, #0x2
  4124e8:	mov	w23, #0x0                   	// #0
  4124ec:	cmp	x27, x19
  4124f0:	b.ls	4124f8 <ferror@plt+0xfa58>  // b.plast
  4124f4:	strb	w7, [x26, x19]
  4124f8:	ldrb	w7, [x21, x2]
  4124fc:	add	x19, x19, #0x1
  412500:	mov	x13, x2
  412504:	b	412414 <ferror@plt+0xf974>
  412508:	cbz	w18, 4124b0 <ferror@plt+0xfa10>
  41250c:	cmp	x27, x19
  412510:	b.ls	412518 <ferror@plt+0xfa78>  // b.plast
  412514:	strb	w16, [x26, x19]
  412518:	add	x19, x19, #0x1
  41251c:	mov	w18, #0x0                   	// #0
  412520:	b	4124b0 <ferror@plt+0xfa10>
  412524:	mov	w3, w22
  412528:	mov	w20, #0x0                   	// #0
  41252c:	mov	w7, #0x30                  	// #48
  412530:	b	4120d8 <ferror@plt+0xf638>
  412534:	mov	w7, #0x3f                  	// #63
  412538:	b	411fb8 <ferror@plt+0xf518>
  41253c:	mov	w7, w0
  412540:	b	411fb8 <ferror@plt+0xf518>
  412544:	mov	w20, w14
  412548:	str	w14, [sp, #144]
  41254c:	b	411d90 <ferror@plt+0xf2f0>
  412550:	cmp	x24, x13
  412554:	b	411b40 <ferror@plt+0xf0a0>
  412558:	ldr	x0, [sp, #112]
  41255c:	cmp	x27, #0x0
  412560:	cset	w28, eq  // eq = none
  412564:	mov	w25, #0x2                   	// #2
  412568:	cmp	x0, #0x0
  41256c:	csel	w20, w28, wzr, ne  // ne = any
  412570:	cbnz	w20, 411ae4 <ferror@plt+0xf044>
  412574:	ldr	w0, [sp, #144]
  412578:	cmp	x6, #0x0
  41257c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412580:	mov	x0, x19
  412584:	b.ne	4125d8 <ferror@plt+0xfb38>  // b.any
  412588:	cmp	x27, x0
  41258c:	b.ls	412594 <ferror@plt+0xfaf4>  // b.plast
  412590:	strb	wzr, [x26, x0]
  412594:	ldp	x29, x30, [sp, #16]
  412598:	ldp	x19, x20, [sp, #32]
  41259c:	ldp	x21, x22, [sp, #48]
  4125a0:	ldp	x23, x24, [sp, #64]
  4125a4:	ldp	x25, x26, [sp, #80]
  4125a8:	ldp	x27, x28, [sp, #96]
  4125ac:	add	sp, sp, #0xf0
  4125b0:	ret
  4125b4:	mov	w0, w5
  4125b8:	b	412578 <ferror@plt+0xfad8>
  4125bc:	cmp	x27, x0
  4125c0:	b.ls	4125c8 <ferror@plt+0xfb28>  // b.plast
  4125c4:	strb	w1, [x26, x0]
  4125c8:	add	x0, x0, #0x1
  4125cc:	ldrb	w1, [x6, x0]
  4125d0:	cbnz	w1, 4125bc <ferror@plt+0xfb1c>
  4125d4:	b	412588 <ferror@plt+0xfae8>
  4125d8:	sub	x6, x6, x19
  4125dc:	b	4125cc <ferror@plt+0xfb2c>
  4125e0:	mov	w22, w28
  4125e4:	b	412030 <ferror@plt+0xf590>
  4125e8:	sub	sp, sp, #0x80
  4125ec:	stp	x29, x30, [sp, #16]
  4125f0:	add	x29, sp, #0x10
  4125f4:	stp	x19, x20, [sp, #32]
  4125f8:	mov	w19, w0
  4125fc:	mov	x20, x3
  412600:	stp	x21, x22, [sp, #48]
  412604:	stp	x23, x24, [sp, #64]
  412608:	mov	x24, x1
  41260c:	stp	x25, x26, [sp, #80]
  412610:	mov	x25, x2
  412614:	stp	x27, x28, [sp, #96]
  412618:	bl	402a30 <__errno_location@plt>
  41261c:	mov	x23, x0
  412620:	ldr	w0, [x0]
  412624:	adrp	x27, 42e000 <_obstack_memory_used@@Base+0x194bc>
  412628:	str	w0, [sp, #116]
  41262c:	ldr	x28, [x27, #936]
  412630:	tbz	w19, #31, 412638 <ferror@plt+0xfb98>
  412634:	bl	4027d0 <abort@plt>
  412638:	add	x22, x27, #0x3a8
  41263c:	ldr	w0, [x22, #8]
  412640:	cmp	w0, w19
  412644:	b.gt	4126b0 <ferror@plt+0xfc10>
  412648:	mov	w0, #0x7fffffff            	// #2147483647
  41264c:	cmp	w19, w0
  412650:	b.ne	412658 <ferror@plt+0xfbb8>  // b.any
  412654:	bl	413eec <ferror@plt+0x1144c>
  412658:	add	x2, x22, #0x10
  41265c:	add	w26, w19, #0x1
  412660:	cmp	x28, x2
  412664:	str	x2, [sp, #120]
  412668:	csel	x0, x28, xzr, ne  // ne = any
  41266c:	sbfiz	x1, x26, #4, #32
  412670:	bl	413d6c <ferror@plt+0x112cc>
  412674:	str	x0, [x27, #936]
  412678:	ldr	x2, [sp, #120]
  41267c:	mov	x21, x0
  412680:	cmp	x28, x2
  412684:	b.ne	412690 <ferror@plt+0xfbf0>  // b.any
  412688:	ldp	x0, x1, [x22, #16]
  41268c:	stp	x0, x1, [x21]
  412690:	ldr	w0, [x22, #8]
  412694:	mov	x28, x21
  412698:	mov	w1, #0x0                   	// #0
  41269c:	sub	w2, w26, w0
  4126a0:	add	x0, x21, w0, sxtw #4
  4126a4:	sbfiz	x2, x2, #4, #32
  4126a8:	bl	4026a0 <memset@plt>
  4126ac:	str	w26, [x22, #8]
  4126b0:	sbfiz	x9, x19, #4, #32
  4126b4:	add	x19, x28, w19, sxtw #4
  4126b8:	ldp	x7, x0, [x20, #40]
  4126bc:	add	x27, x20, #0x8
  4126c0:	ldp	w4, w26, [x20]
  4126c4:	mov	x6, x27
  4126c8:	ldr	x22, [x28, x9]
  4126cc:	orr	w26, w26, #0x1
  4126d0:	ldr	x21, [x19, #8]
  4126d4:	str	x0, [sp]
  4126d8:	mov	x3, x25
  4126dc:	mov	x2, x24
  4126e0:	mov	x1, x22
  4126e4:	mov	w5, w26
  4126e8:	mov	x0, x21
  4126ec:	str	x9, [sp, #120]
  4126f0:	bl	411a54 <ferror@plt+0xefb4>
  4126f4:	cmp	x22, x0
  4126f8:	b.hi	412754 <ferror@plt+0xfcb4>  // b.pmore
  4126fc:	ldr	x9, [sp, #120]
  412700:	add	x22, x0, #0x1
  412704:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412708:	add	x0, x0, #0xb08
  41270c:	cmp	x21, x0
  412710:	str	x22, [x28, x9]
  412714:	b.eq	412720 <ferror@plt+0xfc80>  // b.none
  412718:	mov	x0, x21
  41271c:	bl	4028c0 <free@plt>
  412720:	mov	x0, x22
  412724:	bl	413d0c <ferror@plt+0x1126c>
  412728:	ldp	x7, x1, [x20, #40]
  41272c:	mov	x21, x0
  412730:	ldr	w4, [x20]
  412734:	mov	x6, x27
  412738:	str	x0, [x19, #8]
  41273c:	mov	w5, w26
  412740:	str	x1, [sp]
  412744:	mov	x3, x25
  412748:	mov	x2, x24
  41274c:	mov	x1, x22
  412750:	bl	411a54 <ferror@plt+0xefb4>
  412754:	ldr	w0, [sp, #116]
  412758:	ldp	x29, x30, [sp, #16]
  41275c:	ldp	x19, x20, [sp, #32]
  412760:	ldp	x25, x26, [sp, #80]
  412764:	ldp	x27, x28, [sp, #96]
  412768:	str	w0, [x23]
  41276c:	mov	x0, x21
  412770:	ldp	x21, x22, [sp, #48]
  412774:	ldp	x23, x24, [sp, #64]
  412778:	add	sp, sp, #0x80
  41277c:	ret
  412780:	stp	x29, x30, [sp, #-48]!
  412784:	mov	x29, sp
  412788:	stp	x19, x20, [sp, #16]
  41278c:	mov	x19, x0
  412790:	str	x21, [sp, #32]
  412794:	bl	402a30 <__errno_location@plt>
  412798:	ldr	w21, [x0]
  41279c:	mov	x20, x0
  4127a0:	cbnz	x19, 4127b0 <ferror@plt+0xfd10>
  4127a4:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4127a8:	add	x19, x19, #0xb08
  4127ac:	add	x19, x19, #0x100
  4127b0:	mov	x0, x19
  4127b4:	mov	x1, #0x38                  	// #56
  4127b8:	bl	413e94 <ferror@plt+0x113f4>
  4127bc:	str	w21, [x20]
  4127c0:	ldp	x19, x20, [sp, #16]
  4127c4:	ldr	x21, [sp, #32]
  4127c8:	ldp	x29, x30, [sp], #48
  4127cc:	ret
  4127d0:	cbnz	x0, 4127e0 <ferror@plt+0xfd40>
  4127d4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4127d8:	add	x0, x0, #0xb08
  4127dc:	add	x0, x0, #0x100
  4127e0:	ldr	w0, [x0]
  4127e4:	ret
  4127e8:	cbnz	x0, 4127f8 <ferror@plt+0xfd58>
  4127ec:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4127f0:	add	x0, x0, #0xb08
  4127f4:	add	x0, x0, #0x100
  4127f8:	str	w1, [x0]
  4127fc:	ret
  412800:	and	w1, w1, #0xff
  412804:	cbnz	x0, 412814 <ferror@plt+0xfd74>
  412808:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  41280c:	add	x0, x0, #0xb08
  412810:	add	x0, x0, #0x100
  412814:	ubfx	x4, x1, #5, #3
  412818:	add	x0, x0, #0x8
  41281c:	and	w3, w1, #0x1f
  412820:	lsl	x4, x4, #2
  412824:	ldr	w6, [x0, x4]
  412828:	lsr	w5, w6, w3
  41282c:	eor	w1, w5, w2
  412830:	and	w1, w1, #0x1
  412834:	lsl	w1, w1, w3
  412838:	eor	w1, w1, w6
  41283c:	str	w1, [x0, x4]
  412840:	and	w0, w5, #0x1
  412844:	ret
  412848:	mov	x2, x0
  41284c:	cbnz	x0, 41285c <ferror@plt+0xfdbc>
  412850:	adrp	x2, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412854:	add	x2, x2, #0xb08
  412858:	add	x2, x2, #0x100
  41285c:	ldr	w0, [x2, #4]
  412860:	str	w1, [x2, #4]
  412864:	ret
  412868:	cbnz	x0, 412878 <ferror@plt+0xfdd8>
  41286c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412870:	add	x0, x0, #0xb08
  412874:	add	x0, x0, #0x100
  412878:	mov	w3, #0xa                   	// #10
  41287c:	str	w3, [x0]
  412880:	cmp	x1, #0x0
  412884:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  412888:	b.ne	412898 <ferror@plt+0xfdf8>  // b.any
  41288c:	stp	x29, x30, [sp, #-16]!
  412890:	mov	x29, sp
  412894:	bl	4027d0 <abort@plt>
  412898:	stp	x1, x2, [x0, #40]
  41289c:	ret
  4128a0:	sub	sp, sp, #0x60
  4128a4:	stp	x29, x30, [sp, #16]
  4128a8:	add	x29, sp, #0x10
  4128ac:	stp	x19, x20, [sp, #32]
  4128b0:	stp	x21, x22, [sp, #48]
  4128b4:	mov	x21, x0
  4128b8:	mov	x22, x1
  4128bc:	stp	x23, x24, [sp, #64]
  4128c0:	mov	x23, x2
  4128c4:	mov	x24, x3
  4128c8:	str	x25, [sp, #80]
  4128cc:	cbnz	x4, 412930 <ferror@plt+0xfe90>
  4128d0:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4128d4:	add	x19, x19, #0xb08
  4128d8:	add	x19, x19, #0x100
  4128dc:	bl	402a30 <__errno_location@plt>
  4128e0:	ldr	w25, [x0]
  4128e4:	mov	x20, x0
  4128e8:	add	x6, x19, #0x8
  4128ec:	ldr	x0, [x19, #48]
  4128f0:	str	x0, [sp]
  4128f4:	mov	x3, x24
  4128f8:	mov	x2, x23
  4128fc:	ldp	w4, w5, [x19]
  412900:	mov	x1, x22
  412904:	ldr	x7, [x19, #40]
  412908:	mov	x0, x21
  41290c:	bl	411a54 <ferror@plt+0xefb4>
  412910:	ldp	x29, x30, [sp, #16]
  412914:	ldp	x21, x22, [sp, #48]
  412918:	ldp	x23, x24, [sp, #64]
  41291c:	str	w25, [x20]
  412920:	ldp	x19, x20, [sp, #32]
  412924:	ldr	x25, [sp, #80]
  412928:	add	sp, sp, #0x60
  41292c:	ret
  412930:	mov	x19, x4
  412934:	b	4128dc <ferror@plt+0xfe3c>
  412938:	sub	sp, sp, #0x80
  41293c:	stp	x29, x30, [sp, #16]
  412940:	add	x29, sp, #0x10
  412944:	stp	x19, x20, [sp, #32]
  412948:	mov	x20, x2
  41294c:	stp	x21, x22, [sp, #48]
  412950:	stp	x23, x24, [sp, #64]
  412954:	mov	x23, x0
  412958:	mov	x24, x1
  41295c:	stp	x25, x26, [sp, #80]
  412960:	stp	x27, x28, [sp, #96]
  412964:	cbnz	x3, 412a34 <ferror@plt+0xff94>
  412968:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  41296c:	add	x19, x19, #0xb08
  412970:	add	x19, x19, #0x100
  412974:	bl	402a30 <__errno_location@plt>
  412978:	ldr	w8, [x0]
  41297c:	mov	x22, x0
  412980:	ldr	w5, [x19, #4]
  412984:	ldr	x0, [x19, #48]
  412988:	str	x0, [sp]
  41298c:	cmp	x20, #0x0
  412990:	add	x28, x19, #0x8
  412994:	cset	w25, eq  // eq = none
  412998:	ldr	w4, [x19]
  41299c:	ldr	x7, [x19, #40]
  4129a0:	orr	w25, w25, w5
  4129a4:	mov	x6, x28
  4129a8:	mov	x3, x24
  4129ac:	mov	x2, x23
  4129b0:	mov	w5, w25
  4129b4:	mov	x1, #0x0                   	// #0
  4129b8:	mov	x0, #0x0                   	// #0
  4129bc:	str	w8, [sp, #124]
  4129c0:	bl	411a54 <ferror@plt+0xefb4>
  4129c4:	add	x27, x0, #0x1
  4129c8:	mov	x21, x0
  4129cc:	mov	x0, x27
  4129d0:	bl	413d0c <ferror@plt+0x1126c>
  4129d4:	ldr	x1, [x19, #48]
  4129d8:	str	x1, [sp]
  4129dc:	mov	x26, x0
  4129e0:	mov	x6, x28
  4129e4:	ldr	w4, [x19]
  4129e8:	mov	w5, w25
  4129ec:	ldr	x7, [x19, #40]
  4129f0:	mov	x3, x24
  4129f4:	mov	x2, x23
  4129f8:	mov	x1, x27
  4129fc:	bl	411a54 <ferror@plt+0xefb4>
  412a00:	ldr	w8, [sp, #124]
  412a04:	str	w8, [x22]
  412a08:	cbz	x20, 412a10 <ferror@plt+0xff70>
  412a0c:	str	x21, [x20]
  412a10:	mov	x0, x26
  412a14:	ldp	x29, x30, [sp, #16]
  412a18:	ldp	x19, x20, [sp, #32]
  412a1c:	ldp	x21, x22, [sp, #48]
  412a20:	ldp	x23, x24, [sp, #64]
  412a24:	ldp	x25, x26, [sp, #80]
  412a28:	ldp	x27, x28, [sp, #96]
  412a2c:	add	sp, sp, #0x80
  412a30:	ret
  412a34:	mov	x19, x3
  412a38:	b	412974 <ferror@plt+0xfed4>
  412a3c:	mov	x3, x2
  412a40:	mov	x2, #0x0                   	// #0
  412a44:	b	412938 <ferror@plt+0xfe98>
  412a48:	stp	x29, x30, [sp, #-64]!
  412a4c:	mov	x29, sp
  412a50:	stp	x19, x20, [sp, #16]
  412a54:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  412a58:	add	x19, x20, #0x3a8
  412a5c:	stp	x21, x22, [sp, #32]
  412a60:	mov	x22, #0x0                   	// #0
  412a64:	ldr	x21, [x20, #936]
  412a68:	str	x23, [sp, #48]
  412a6c:	add	x23, x21, #0x8
  412a70:	ldr	w0, [x19, #8]
  412a74:	add	x22, x22, #0x1
  412a78:	cmp	w0, w22
  412a7c:	b.gt	412ad4 <ferror@plt+0x10034>
  412a80:	ldr	x0, [x21, #8]
  412a84:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412a88:	add	x22, x22, #0xb08
  412a8c:	cmp	x0, x22
  412a90:	b.eq	412aa0 <ferror@plt+0x10000>  // b.none
  412a94:	bl	4028c0 <free@plt>
  412a98:	mov	x0, #0x100                 	// #256
  412a9c:	stp	x0, x22, [x19, #16]
  412aa0:	add	x22, x19, #0x10
  412aa4:	cmp	x21, x22
  412aa8:	b.eq	412ab8 <ferror@plt+0x10018>  // b.none
  412aac:	mov	x0, x21
  412ab0:	bl	4028c0 <free@plt>
  412ab4:	str	x22, [x20, #936]
  412ab8:	mov	w0, #0x1                   	// #1
  412abc:	str	w0, [x19, #8]
  412ac0:	ldp	x19, x20, [sp, #16]
  412ac4:	ldp	x21, x22, [sp, #32]
  412ac8:	ldr	x23, [sp, #48]
  412acc:	ldp	x29, x30, [sp], #64
  412ad0:	ret
  412ad4:	lsl	x0, x22, #4
  412ad8:	ldr	x0, [x23, x0]
  412adc:	bl	4028c0 <free@plt>
  412ae0:	b	412a70 <ferror@plt+0xffd0>
  412ae4:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412ae8:	add	x3, x3, #0xb08
  412aec:	add	x3, x3, #0x100
  412af0:	mov	x2, #0xffffffffffffffff    	// #-1
  412af4:	b	4125e8 <ferror@plt+0xfb48>
  412af8:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412afc:	add	x3, x3, #0xb08
  412b00:	add	x3, x3, #0x100
  412b04:	b	4125e8 <ferror@plt+0xfb48>
  412b08:	mov	x1, x0
  412b0c:	mov	w0, #0x0                   	// #0
  412b10:	b	412ae4 <ferror@plt+0x10044>
  412b14:	mov	x2, x1
  412b18:	mov	x1, x0
  412b1c:	mov	w0, #0x0                   	// #0
  412b20:	b	412af8 <ferror@plt+0x10058>
  412b24:	stp	x29, x30, [sp, #-96]!
  412b28:	add	x8, sp, #0x28
  412b2c:	mov	x29, sp
  412b30:	stp	x19, x20, [sp, #16]
  412b34:	mov	x20, x2
  412b38:	mov	w19, w0
  412b3c:	mov	w0, w1
  412b40:	bl	411908 <ferror@plt+0xee68>
  412b44:	add	x3, sp, #0x28
  412b48:	mov	x1, x20
  412b4c:	mov	w0, w19
  412b50:	mov	x2, #0xffffffffffffffff    	// #-1
  412b54:	bl	4125e8 <ferror@plt+0xfb48>
  412b58:	ldp	x19, x20, [sp, #16]
  412b5c:	ldp	x29, x30, [sp], #96
  412b60:	ret
  412b64:	stp	x29, x30, [sp, #-112]!
  412b68:	add	x8, sp, #0x38
  412b6c:	mov	x29, sp
  412b70:	stp	x19, x20, [sp, #16]
  412b74:	mov	x20, x2
  412b78:	mov	w19, w0
  412b7c:	mov	w0, w1
  412b80:	str	x21, [sp, #32]
  412b84:	mov	x21, x3
  412b88:	bl	411908 <ferror@plt+0xee68>
  412b8c:	add	x3, sp, #0x38
  412b90:	mov	x2, x21
  412b94:	mov	x1, x20
  412b98:	mov	w0, w19
  412b9c:	bl	4125e8 <ferror@plt+0xfb48>
  412ba0:	ldp	x19, x20, [sp, #16]
  412ba4:	ldr	x21, [sp, #32]
  412ba8:	ldp	x29, x30, [sp], #112
  412bac:	ret
  412bb0:	mov	x2, x1
  412bb4:	mov	w1, w0
  412bb8:	mov	w0, #0x0                   	// #0
  412bbc:	b	412b24 <ferror@plt+0x10084>
  412bc0:	mov	x3, x2
  412bc4:	mov	x2, x1
  412bc8:	mov	w1, w0
  412bcc:	mov	w0, #0x0                   	// #0
  412bd0:	b	412b64 <ferror@plt+0x100c4>
  412bd4:	stp	x29, x30, [sp, #-112]!
  412bd8:	mov	x29, sp
  412bdc:	stp	x19, x20, [sp, #16]
  412be0:	mov	x20, x1
  412be4:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412be8:	add	x1, x1, #0xb08
  412bec:	mov	x19, x0
  412bf0:	add	x1, x1, #0x100
  412bf4:	str	x21, [sp, #32]
  412bf8:	and	w21, w2, #0xff
  412bfc:	mov	x2, #0x38                  	// #56
  412c00:	add	x0, sp, x2
  412c04:	bl	402420 <memcpy@plt>
  412c08:	mov	w1, w21
  412c0c:	add	x0, sp, #0x38
  412c10:	mov	w2, #0x1                   	// #1
  412c14:	bl	412800 <ferror@plt+0xfd60>
  412c18:	add	x3, sp, #0x38
  412c1c:	mov	x2, x20
  412c20:	mov	x1, x19
  412c24:	mov	w0, #0x0                   	// #0
  412c28:	bl	4125e8 <ferror@plt+0xfb48>
  412c2c:	ldp	x19, x20, [sp, #16]
  412c30:	ldr	x21, [sp, #32]
  412c34:	ldp	x29, x30, [sp], #112
  412c38:	ret
  412c3c:	mov	w2, w1
  412c40:	mov	x1, #0xffffffffffffffff    	// #-1
  412c44:	b	412bd4 <ferror@plt+0x10134>
  412c48:	mov	w1, #0x3a                  	// #58
  412c4c:	b	412c3c <ferror@plt+0x1019c>
  412c50:	mov	w2, #0x3a                  	// #58
  412c54:	b	412bd4 <ferror@plt+0x10134>
  412c58:	stp	x29, x30, [sp, #-160]!
  412c5c:	add	x8, sp, #0x20
  412c60:	mov	x29, sp
  412c64:	stp	x19, x20, [sp, #16]
  412c68:	mov	x20, x2
  412c6c:	mov	w19, w0
  412c70:	mov	w0, w1
  412c74:	bl	411908 <ferror@plt+0xee68>
  412c78:	add	x1, sp, #0x20
  412c7c:	add	x0, sp, #0x68
  412c80:	mov	x2, #0x38                  	// #56
  412c84:	bl	402420 <memcpy@plt>
  412c88:	add	x0, sp, #0x68
  412c8c:	mov	w2, #0x1                   	// #1
  412c90:	mov	w1, #0x3a                  	// #58
  412c94:	bl	412800 <ferror@plt+0xfd60>
  412c98:	add	x3, sp, #0x68
  412c9c:	mov	x1, x20
  412ca0:	mov	w0, w19
  412ca4:	mov	x2, #0xffffffffffffffff    	// #-1
  412ca8:	bl	4125e8 <ferror@plt+0xfb48>
  412cac:	ldp	x19, x20, [sp, #16]
  412cb0:	ldp	x29, x30, [sp], #160
  412cb4:	ret
  412cb8:	stp	x29, x30, [sp, #-128]!
  412cbc:	mov	x29, sp
  412cc0:	stp	x21, x22, [sp, #32]
  412cc4:	mov	x22, x1
  412cc8:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0xaba8>
  412ccc:	add	x1, x1, #0xb08
  412cd0:	mov	x21, x4
  412cd4:	add	x1, x1, #0x100
  412cd8:	stp	x19, x20, [sp, #16]
  412cdc:	mov	x20, x3
  412ce0:	mov	w19, w0
  412ce4:	add	x0, sp, #0x48
  412ce8:	str	x23, [sp, #48]
  412cec:	mov	x23, x2
  412cf0:	mov	x2, #0x38                  	// #56
  412cf4:	bl	402420 <memcpy@plt>
  412cf8:	mov	x2, x23
  412cfc:	mov	x1, x22
  412d00:	add	x0, sp, #0x48
  412d04:	bl	412868 <ferror@plt+0xfdc8>
  412d08:	add	x3, sp, #0x48
  412d0c:	mov	x2, x21
  412d10:	mov	x1, x20
  412d14:	mov	w0, w19
  412d18:	bl	4125e8 <ferror@plt+0xfb48>
  412d1c:	ldp	x19, x20, [sp, #16]
  412d20:	ldp	x21, x22, [sp, #32]
  412d24:	ldr	x23, [sp, #48]
  412d28:	ldp	x29, x30, [sp], #128
  412d2c:	ret
  412d30:	mov	x4, #0xffffffffffffffff    	// #-1
  412d34:	b	412cb8 <ferror@plt+0x10218>
  412d38:	mov	x3, x2
  412d3c:	mov	x2, x1
  412d40:	mov	x1, x0
  412d44:	mov	w0, #0x0                   	// #0
  412d48:	b	412d30 <ferror@plt+0x10290>
  412d4c:	mov	x4, x3
  412d50:	mov	x3, x2
  412d54:	mov	x2, x1
  412d58:	mov	x1, x0
  412d5c:	mov	w0, #0x0                   	// #0
  412d60:	b	412cb8 <ferror@plt+0x10218>
  412d64:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x194bc>
  412d68:	add	x3, x3, #0x3a8
  412d6c:	add	x3, x3, #0x20
  412d70:	b	4125e8 <ferror@plt+0xfb48>
  412d74:	mov	x2, x1
  412d78:	mov	x1, x0
  412d7c:	mov	w0, #0x0                   	// #0
  412d80:	b	412d64 <ferror@plt+0x102c4>
  412d84:	mov	x2, #0xffffffffffffffff    	// #-1
  412d88:	b	412d64 <ferror@plt+0x102c4>
  412d8c:	mov	x1, x0
  412d90:	mov	w0, #0x0                   	// #0
  412d94:	b	412d84 <ferror@plt+0x102e4>
  412d98:	ldr	x0, [x0]
  412d9c:	ret
  412da0:	stp	x29, x30, [sp, #-32]!
  412da4:	mov	x29, sp
  412da8:	stp	x19, x20, [sp, #16]
  412dac:	mov	w20, w0
  412db0:	mov	w0, w20
  412db4:	bl	402760 <close@plt>
  412db8:	mov	w19, w0
  412dbc:	tbz	w0, #31, 412dd0 <ferror@plt+0x10330>
  412dc0:	bl	402a30 <__errno_location@plt>
  412dc4:	ldr	w0, [x0]
  412dc8:	cmp	w0, #0x4
  412dcc:	b.eq	412db0 <ferror@plt+0x10310>  // b.none
  412dd0:	mov	w0, w19
  412dd4:	ldp	x19, x20, [sp, #16]
  412dd8:	ldp	x29, x30, [sp], #32
  412ddc:	ret
  412de0:	sub	sp, sp, #0x2b0
  412de4:	stp	x29, x30, [sp]
  412de8:	mov	x29, sp
  412dec:	stp	x19, x20, [sp, #16]
  412df0:	and	w19, w3, #0xff
  412df4:	ands	w20, w4, #0xff
  412df8:	stp	x21, x22, [sp, #32]
  412dfc:	and	w22, w7, #0xff
  412e00:	ldrb	w21, [sp, #688]
  412e04:	stp	x23, x24, [sp, #48]
  412e08:	mov	x23, x5
  412e0c:	mov	x24, x6
  412e10:	stp	x25, x26, [sp, #64]
  412e14:	mov	x26, x1
  412e18:	stp	x27, x28, [sp, #80]
  412e1c:	mov	x27, x2
  412e20:	ldrb	w28, [sp, #696]
  412e24:	str	x0, [sp, #104]
  412e28:	b.eq	412e50 <ferror@plt+0x103b0>  // b.none
  412e2c:	add	x0, sp, #0x80
  412e30:	bl	413460 <ferror@plt+0x109c0>
  412e34:	tbz	w0, #31, 412e50 <ferror@plt+0x103b0>
  412e38:	bl	402a30 <__errno_location@plt>
  412e3c:	ldr	w1, [x0]
  412e40:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  412e44:	mov	w0, #0x1                   	// #1
  412e48:	add	x2, x2, #0x370
  412e4c:	bl	4024a0 <error@plt>
  412e50:	cbz	w19, 412e78 <ferror@plt+0x103d8>
  412e54:	add	x0, sp, #0x88
  412e58:	bl	413460 <ferror@plt+0x109c0>
  412e5c:	tbz	w0, #31, 412e78 <ferror@plt+0x103d8>
  412e60:	bl	402a30 <__errno_location@plt>
  412e64:	ldr	w1, [x0]
  412e68:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  412e6c:	mov	w0, #0x1                   	// #1
  412e70:	add	x2, x2, #0x370
  412e74:	bl	4024a0 <error@plt>
  412e78:	cbz	w21, 412e90 <ferror@plt+0x103f0>
  412e7c:	add	x2, sp, #0xe0
  412e80:	mov	x1, #0x0                   	// #0
  412e84:	mov	w0, #0x2                   	// #2
  412e88:	bl	4024b0 <sigprocmask@plt>
  412e8c:	bl	40fe1c <ferror@plt+0xd37c>
  412e90:	add	x0, sp, #0x90
  412e94:	bl	402820 <posix_spawn_file_actions_init@plt>
  412e98:	mov	w25, w0
  412e9c:	cbnz	w0, 413058 <ferror@plt+0x105b8>
  412ea0:	cbz	w19, 41314c <ferror@plt+0x106ac>
  412ea4:	ldr	w1, [sp, #136]
  412ea8:	add	x0, sp, #0x90
  412eac:	mov	w2, #0x0                   	// #0
  412eb0:	bl	4025a0 <posix_spawn_file_actions_adddup2@plt>
  412eb4:	mov	w25, w0
  412eb8:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412ebc:	cbz	w20, 412edc <ferror@plt+0x1043c>
  412ec0:	ldr	w1, [sp, #132]
  412ec4:	add	x0, sp, #0x90
  412ec8:	mov	w2, #0x1                   	// #1
  412ecc:	bl	4025a0 <posix_spawn_file_actions_adddup2@plt>
  412ed0:	mov	w25, w0
  412ed4:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412ed8:	cbz	w19, 412ef4 <ferror@plt+0x10454>
  412edc:	ldr	w1, [sp, #136]
  412ee0:	add	x0, sp, #0x90
  412ee4:	bl	402740 <posix_spawn_file_actions_addclose@plt>
  412ee8:	mov	w25, w0
  412eec:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412ef0:	cbz	w20, 413144 <ferror@plt+0x106a4>
  412ef4:	ldr	w1, [sp, #132]
  412ef8:	add	x0, sp, #0x90
  412efc:	bl	402740 <posix_spawn_file_actions_addclose@plt>
  412f00:	mov	w25, w0
  412f04:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412f08:	cbz	w19, 41302c <ferror@plt+0x1058c>
  412f0c:	ldr	w1, [sp, #140]
  412f10:	add	x0, sp, #0x90
  412f14:	bl	402740 <posix_spawn_file_actions_addclose@plt>
  412f18:	mov	w25, w0
  412f1c:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412f20:	cbnz	w20, 41302c <ferror@plt+0x1058c>
  412f24:	cbz	w22, 412f4c <ferror@plt+0x104ac>
  412f28:	mov	w3, #0x2                   	// #2
  412f2c:	add	x0, sp, #0x90
  412f30:	mov	w1, w3
  412f34:	mov	w4, #0x0                   	// #0
  412f38:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  412f3c:	add	x2, x2, #0x907
  412f40:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  412f44:	mov	w25, w0
  412f48:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412f4c:	cmp	x23, #0x0
  412f50:	eor	w0, w19, #0x1
  412f54:	cset	w1, ne  // ne = any
  412f58:	tst	w1, w0
  412f5c:	b.eq	412f80 <ferror@plt+0x104e0>  // b.none
  412f60:	mov	x2, x23
  412f64:	add	x0, sp, #0x90
  412f68:	mov	w4, #0x0                   	// #0
  412f6c:	mov	w3, #0x0                   	// #0
  412f70:	mov	w1, #0x0                   	// #0
  412f74:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  412f78:	mov	w25, w0
  412f7c:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412f80:	cmp	x24, #0x0
  412f84:	eor	w0, w20, #0x1
  412f88:	cset	w1, ne  // ne = any
  412f8c:	tst	w1, w0
  412f90:	b.eq	412fb4 <ferror@plt+0x10514>  // b.none
  412f94:	mov	w3, #0x1                   	// #1
  412f98:	mov	x2, x24
  412f9c:	mov	w1, w3
  412fa0:	add	x0, sp, #0x90
  412fa4:	mov	w4, #0x0                   	// #0
  412fa8:	bl	402550 <posix_spawn_file_actions_addopen@plt>
  412fac:	mov	w25, w0
  412fb0:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  412fb4:	cbnz	w21, 4130d8 <ferror@plt+0x10638>
  412fb8:	mov	w23, #0x0                   	// #0
  412fbc:	mov	x3, #0x0                   	// #0
  412fc0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  412fc4:	mov	x4, x27
  412fc8:	add	x2, sp, #0x90
  412fcc:	mov	x1, x26
  412fd0:	ldr	x5, [x0, #1104]
  412fd4:	add	x0, sp, #0x7c
  412fd8:	bl	402900 <posix_spawnp@plt>
  412fdc:	mov	w25, w0
  412fe0:	cbnz	w0, 413044 <ferror@plt+0x105a4>
  412fe4:	add	x0, sp, #0x90
  412fe8:	bl	402700 <posix_spawn_file_actions_destroy@plt>
  412fec:	cbz	w23, 412ff8 <ferror@plt+0x10558>
  412ff0:	add	x0, sp, #0x160
  412ff4:	bl	402650 <posix_spawnattr_destroy@plt>
  412ff8:	cbz	w21, 413008 <ferror@plt+0x10568>
  412ffc:	ldr	w0, [sp, #124]
  413000:	bl	413a34 <ferror@plt+0x10f94>
  413004:	bl	40fe54 <ferror@plt+0xd3b4>
  413008:	cbz	w19, 413124 <ferror@plt+0x10684>
  41300c:	ldr	w0, [sp, #136]
  413010:	bl	412da0 <ferror@plt+0x10300>
  413014:	cbnz	w20, 413128 <ferror@plt+0x10688>
  413018:	ldr	x1, [sp, #704]
  41301c:	ldr	w0, [sp, #140]
  413020:	str	w0, [x1, #4]
  413024:	ldr	w0, [sp, #124]
  413028:	b	4130b8 <ferror@plt+0x10618>
  41302c:	ldr	w1, [sp, #128]
  413030:	add	x0, sp, #0x90
  413034:	bl	402740 <posix_spawn_file_actions_addclose@plt>
  413038:	mov	w25, w0
  41303c:	cbz	w0, 412f24 <ferror@plt+0x10484>
  413040:	mov	w23, #0x0                   	// #0
  413044:	add	x0, sp, #0x90
  413048:	bl	402700 <posix_spawn_file_actions_destroy@plt>
  41304c:	cbz	w23, 413058 <ferror@plt+0x105b8>
  413050:	add	x0, sp, #0x160
  413054:	bl	402650 <posix_spawnattr_destroy@plt>
  413058:	cbz	w21, 413060 <ferror@plt+0x105c0>
  41305c:	bl	40fe54 <ferror@plt+0xd3b4>
  413060:	eor	w22, w22, #0x1
  413064:	orr	w22, w28, w22
  413068:	cbz	w22, 413084 <ferror@plt+0x105e4>
  41306c:	ldr	x3, [sp, #104]
  413070:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  413074:	mov	w1, w25
  413078:	add	x2, x2, #0x911
  41307c:	mov	w0, w28
  413080:	bl	4024a0 <error@plt>
  413084:	cbz	w20, 413098 <ferror@plt+0x105f8>
  413088:	ldr	w0, [sp, #128]
  41308c:	bl	412da0 <ferror@plt+0x10300>
  413090:	ldr	w0, [sp, #132]
  413094:	bl	412da0 <ferror@plt+0x10300>
  413098:	cbz	w19, 4130ac <ferror@plt+0x1060c>
  41309c:	ldr	w0, [sp, #136]
  4130a0:	bl	412da0 <ferror@plt+0x10300>
  4130a4:	ldr	w0, [sp, #140]
  4130a8:	bl	412da0 <ferror@plt+0x10300>
  4130ac:	bl	402a30 <__errno_location@plt>
  4130b0:	str	w25, [x0]
  4130b4:	mov	w0, #0xffffffff            	// #-1
  4130b8:	ldp	x29, x30, [sp]
  4130bc:	ldp	x19, x20, [sp, #16]
  4130c0:	ldp	x21, x22, [sp, #32]
  4130c4:	ldp	x23, x24, [sp, #48]
  4130c8:	ldp	x25, x26, [sp, #64]
  4130cc:	ldp	x27, x28, [sp, #80]
  4130d0:	add	sp, sp, #0x2b0
  4130d4:	ret
  4130d8:	add	x0, sp, #0x160
  4130dc:	bl	402970 <posix_spawnattr_init@plt>
  4130e0:	mov	w25, w0
  4130e4:	cbnz	w0, 413040 <ferror@plt+0x105a0>
  4130e8:	add	x1, sp, #0xe0
  4130ec:	add	x0, sp, #0x160
  4130f0:	bl	402800 <posix_spawnattr_setsigmask@plt>
  4130f4:	mov	w25, w0
  4130f8:	cbnz	w0, 41311c <ferror@plt+0x1067c>
  4130fc:	add	x0, sp, #0x160
  413100:	mov	w1, #0x8                   	// #8
  413104:	mov	w23, w21
  413108:	bl	4027c0 <posix_spawnattr_setflags@plt>
  41310c:	mov	w25, w0
  413110:	cbnz	w0, 413044 <ferror@plt+0x105a4>
  413114:	add	x3, sp, #0x160
  413118:	b	412fc0 <ferror@plt+0x10520>
  41311c:	mov	w23, w21
  413120:	b	413044 <ferror@plt+0x105a4>
  413124:	cbz	w20, 413024 <ferror@plt+0x10584>
  413128:	ldr	w0, [sp, #132]
  41312c:	bl	412da0 <ferror@plt+0x10300>
  413130:	ldr	x1, [sp, #704]
  413134:	ldr	w0, [sp, #128]
  413138:	str	w0, [x1]
  41313c:	cbnz	w19, 413018 <ferror@plt+0x10578>
  413140:	b	413024 <ferror@plt+0x10584>
  413144:	cbnz	w19, 412f0c <ferror@plt+0x1046c>
  413148:	b	412f24 <ferror@plt+0x10484>
  41314c:	cbz	w20, 412f24 <ferror@plt+0x10484>
  413150:	b	412ec0 <ferror@plt+0x10420>
  413154:	sub	sp, sp, #0x30
  413158:	mov	w7, w3
  41315c:	stp	x29, x30, [sp, #32]
  413160:	add	x29, sp, #0x20
  413164:	strb	w4, [sp]
  413168:	mov	w4, #0x1                   	// #1
  41316c:	strb	w5, [sp, #8]
  413170:	mov	w3, w4
  413174:	str	x6, [sp, #16]
  413178:	mov	x5, #0x0                   	// #0
  41317c:	mov	x6, #0x0                   	// #0
  413180:	bl	412de0 <ferror@plt+0x10340>
  413184:	ldp	x29, x30, [sp, #32]
  413188:	add	sp, sp, #0x30
  41318c:	ret
  413190:	sub	sp, sp, #0x50
  413194:	stp	x29, x30, [sp, #32]
  413198:	add	x29, sp, #0x20
  41319c:	strb	w5, [sp]
  4131a0:	mov	x5, x3
  4131a4:	strb	w6, [sp, #8]
  4131a8:	mov	w3, #0x0                   	// #0
  4131ac:	str	x19, [sp, #48]
  4131b0:	mov	x19, x7
  4131b4:	add	x7, sp, #0x48
  4131b8:	str	x7, [sp, #16]
  4131bc:	mov	x6, #0x0                   	// #0
  4131c0:	mov	w7, w4
  4131c4:	mov	w4, #0x1                   	// #1
  4131c8:	bl	412de0 <ferror@plt+0x10340>
  4131cc:	cmn	w0, #0x1
  4131d0:	b.eq	4131dc <ferror@plt+0x1073c>  // b.none
  4131d4:	ldr	w1, [sp, #72]
  4131d8:	str	w1, [x19]
  4131dc:	ldp	x29, x30, [sp, #32]
  4131e0:	ldr	x19, [sp, #48]
  4131e4:	add	sp, sp, #0x50
  4131e8:	ret
  4131ec:	sub	sp, sp, #0x50
  4131f0:	stp	x29, x30, [sp, #32]
  4131f4:	add	x29, sp, #0x20
  4131f8:	strb	w5, [sp]
  4131fc:	mov	x5, #0x0                   	// #0
  413200:	strb	w6, [sp, #8]
  413204:	mov	x6, x3
  413208:	str	x19, [sp, #48]
  41320c:	mov	x19, x7
  413210:	add	x7, sp, #0x48
  413214:	str	x7, [sp, #16]
  413218:	mov	w3, #0x1                   	// #1
  41321c:	mov	w7, w4
  413220:	mov	w4, #0x0                   	// #0
  413224:	bl	412de0 <ferror@plt+0x10340>
  413228:	cmn	w0, #0x1
  41322c:	b.eq	413238 <ferror@plt+0x10798>  // b.none
  413230:	ldr	w1, [sp, #76]
  413234:	str	w1, [x19]
  413238:	ldp	x29, x30, [sp, #32]
  41323c:	ldr	x19, [sp, #48]
  413240:	add	sp, sp, #0x50
  413244:	ret
  413248:	stp	x29, x30, [sp, #-16]!
  41324c:	mov	x29, sp
  413250:	bl	402990 <mkstemp@plt>
  413254:	ldp	x29, x30, [sp], #16
  413258:	b	41340c <ferror@plt+0x1096c>
  41325c:	stp	x29, x30, [sp, #-144]!
  413260:	mov	x29, sp
  413264:	add	x1, sp, #0x10
  413268:	bl	414fd0 <_obstack_memory_used@@Base+0x48c>
  41326c:	cbnz	w0, 413288 <ferror@plt+0x107e8>
  413270:	ldr	w0, [sp, #32]
  413274:	and	w0, w0, #0xf000
  413278:	cmp	w0, #0x4, lsl #12
  41327c:	cset	w0, eq  // eq = none
  413280:	ldp	x29, x30, [sp], #144
  413284:	ret
  413288:	mov	w0, #0x0                   	// #0
  41328c:	b	413280 <ferror@plt+0x107e0>
  413290:	stp	x29, x30, [sp, #-80]!
  413294:	mov	x29, sp
  413298:	stp	x19, x20, [sp, #16]
  41329c:	and	w19, w4, #0xff
  4132a0:	stp	x21, x22, [sp, #32]
  4132a4:	mov	x21, x2
  4132a8:	stp	x23, x24, [sp, #48]
  4132ac:	mov	x23, x0
  4132b0:	mov	x24, x1
  4132b4:	stp	x25, x26, [sp, #64]
  4132b8:	cbz	x3, 41333c <ferror@plt+0x1089c>
  4132bc:	ldrb	w0, [x3]
  4132c0:	mov	x20, x3
  4132c4:	cbz	w0, 41333c <ferror@plt+0x1089c>
  4132c8:	mov	x0, x3
  4132cc:	bl	402450 <strlen@plt>
  4132d0:	cmp	x0, #0x5
  4132d4:	mov	x22, #0x5                   	// #5
  4132d8:	csel	x22, x0, x22, ls  // ls = plast
  4132dc:	add	x25, x22, #0x7
  4132e0:	cbz	w19, 4133ac <ferror@plt+0x1090c>
  4132e4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x24bc>
  4132e8:	add	x0, x0, #0x8a2
  4132ec:	bl	4024d0 <secure_getenv@plt>
  4132f0:	mov	x19, x0
  4132f4:	cbnz	x0, 41334c <ferror@plt+0x108ac>
  4132f8:	cbnz	x21, 413394 <ferror@plt+0x108f4>
  4132fc:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x34bc>
  413300:	add	x19, x19, #0x383
  413304:	mov	x0, x19
  413308:	bl	41325c <ferror@plt+0x107bc>
  41330c:	tst	w0, #0xff
  413310:	b.ne	413358 <ferror@plt+0x108b8>  // b.any
  413314:	bl	402a30 <__errno_location@plt>
  413318:	mov	w1, #0x2                   	// #2
  41331c:	str	w1, [x0]
  413320:	mov	w0, #0xffffffff            	// #-1
  413324:	ldp	x19, x20, [sp, #16]
  413328:	ldp	x21, x22, [sp, #32]
  41332c:	ldp	x23, x24, [sp, #48]
  413330:	ldp	x25, x26, [sp, #64]
  413334:	ldp	x29, x30, [sp], #80
  413338:	ret
  41333c:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x24bc>
  413340:	mov	x22, #0x4                   	// #4
  413344:	add	x20, x20, #0x664
  413348:	b	4132dc <ferror@plt+0x1083c>
  41334c:	bl	41325c <ferror@plt+0x107bc>
  413350:	tst	w0, #0xff
  413354:	b.eq	4132f8 <ferror@plt+0x10858>  // b.none
  413358:	mov	x0, x19
  41335c:	bl	402450 <strlen@plt>
  413360:	mov	x26, x0
  413364:	cbz	x0, 4133b4 <ferror@plt+0x10914>
  413368:	add	x0, x19, x0
  41336c:	ldurb	w0, [x0, #-1]
  413370:	cmp	w0, #0x2f
  413374:	cset	w21, ne  // ne = any
  413378:	add	x0, x26, w21, sxtw
  41337c:	add	x25, x0, x25
  413380:	cmp	x25, x24
  413384:	b.ls	4133bc <ferror@plt+0x1091c>  // b.plast
  413388:	bl	402a30 <__errno_location@plt>
  41338c:	mov	w1, #0x16                  	// #22
  413390:	b	41331c <ferror@plt+0x1087c>
  413394:	mov	x0, x21
  413398:	bl	41325c <ferror@plt+0x107bc>
  41339c:	tst	w0, #0xff
  4133a0:	b.eq	4132fc <ferror@plt+0x1085c>  // b.none
  4133a4:	mov	x19, x21
  4133a8:	b	413358 <ferror@plt+0x108b8>
  4133ac:	cbnz	x21, 4133a4 <ferror@plt+0x10904>
  4133b0:	b	4132fc <ferror@plt+0x1085c>
  4133b4:	mov	w21, #0x0                   	// #0
  4133b8:	b	413378 <ferror@plt+0x108d8>
  4133bc:	mov	x2, x26
  4133c0:	mov	x1, x19
  4133c4:	mov	x0, x23
  4133c8:	eor	w21, w21, #0x1
  4133cc:	bl	402420 <memcpy@plt>
  4133d0:	and	x21, x21, #0xff
  4133d4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x34bc>
  4133d8:	add	x3, x3, #0x388
  4133dc:	mov	x5, x20
  4133e0:	mov	w4, w22
  4133e4:	add	x3, x3, x21
  4133e8:	add	x0, x23, x26
  4133ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4133f0:	mov	w1, #0x1                   	// #1
  4133f4:	bl	402470 <__sprintf_chk@plt>
  4133f8:	mov	w0, #0x0                   	// #0
  4133fc:	b	413324 <ferror@plt+0x10884>
  413400:	mov	w2, #0x3                   	// #3
  413404:	mov	w1, #0x0                   	// #0
  413408:	b	414574 <ferror@plt+0x11ad4>
  41340c:	stp	x29, x30, [sp, #-48]!
  413410:	cmp	w0, #0x2
  413414:	mov	x29, sp
  413418:	stp	x19, x20, [sp, #16]
  41341c:	mov	w19, w0
  413420:	stp	x21, x22, [sp, #32]
  413424:	b.hi	41344c <ferror@plt+0x109ac>  // b.pmore
  413428:	bl	413400 <ferror@plt+0x10960>
  41342c:	mov	w21, w0
  413430:	bl	402a30 <__errno_location@plt>
  413434:	mov	x20, x0
  413438:	mov	w0, w19
  41343c:	mov	w19, w21
  413440:	ldr	w22, [x20]
  413444:	bl	402760 <close@plt>
  413448:	str	w22, [x20]
  41344c:	mov	w0, w19
  413450:	ldp	x19, x20, [sp, #16]
  413454:	ldp	x21, x22, [sp, #32]
  413458:	ldp	x29, x30, [sp], #48
  41345c:	ret
  413460:	stp	x29, x30, [sp, #-48]!
  413464:	mov	x29, sp
  413468:	stp	x19, x20, [sp, #16]
  41346c:	mov	x20, x0
  413470:	stp	x21, x22, [sp, #32]
  413474:	bl	402510 <pipe@plt>
  413478:	cbnz	w0, 4134c4 <ferror@plt+0x10a24>
  41347c:	mov	w19, w0
  413480:	ldr	w0, [x20]
  413484:	bl	41340c <ferror@plt+0x1096c>
  413488:	str	w0, [x20]
  41348c:	tbnz	w0, #31, 4134a4 <ferror@plt+0x10a04>
  413490:	ldr	w0, [x20, #4]
  413494:	bl	41340c <ferror@plt+0x1096c>
  413498:	str	w0, [x20, #4]
  41349c:	tbz	w0, #31, 4134c8 <ferror@plt+0x10a28>
  4134a0:	mov	w19, #0x1                   	// #1
  4134a4:	bl	402a30 <__errno_location@plt>
  4134a8:	mov	x21, x0
  4134ac:	mov	w0, #0x1                   	// #1
  4134b0:	sub	w19, w0, w19
  4134b4:	ldr	w22, [x21]
  4134b8:	ldr	w0, [x20, w19, sxtw #2]
  4134bc:	bl	402760 <close@plt>
  4134c0:	str	w22, [x21]
  4134c4:	mov	w19, #0xffffffff            	// #-1
  4134c8:	mov	w0, w19
  4134cc:	ldp	x19, x20, [sp, #16]
  4134d0:	ldp	x21, x22, [sp, #32]
  4134d4:	ldp	x29, x30, [sp], #48
  4134d8:	ret
  4134dc:	stp	x29, x30, [sp, #-96]!
  4134e0:	mov	x29, sp
  4134e4:	stp	x21, x22, [sp, #32]
  4134e8:	mov	x22, x2
  4134ec:	mov	w21, w1
  4134f0:	str	x23, [sp, #48]
  4134f4:	mov	w23, w3
  4134f8:	ldp	x2, x3, [x5]
  4134fc:	stp	x2, x3, [sp, #64]
  413500:	add	x1, sp, #0x40
  413504:	ldp	x2, x3, [x5, #16]
  413508:	stp	x19, x20, [sp, #16]
  41350c:	mov	w20, w0
  413510:	mov	x0, x4
  413514:	stp	x2, x3, [sp, #80]
  413518:	bl	4143c0 <ferror@plt+0x11920>
  41351c:	cbz	x0, 413578 <ferror@plt+0x10ad8>
  413520:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x14bc>
  413524:	mov	x19, x0
  413528:	add	x4, x4, #0x55e
  41352c:	cbz	x22, 413560 <ferror@plt+0x10ac0>
  413530:	mov	x5, x0
  413534:	mov	w3, w23
  413538:	mov	x2, x22
  41353c:	mov	w1, w21
  413540:	mov	w0, w20
  413544:	bl	402a80 <error_at_line@plt>
  413548:	mov	x0, x19
  41354c:	ldp	x19, x20, [sp, #16]
  413550:	ldp	x21, x22, [sp, #32]
  413554:	ldr	x23, [sp, #48]
  413558:	ldp	x29, x30, [sp], #96
  41355c:	b	4028c0 <free@plt>
  413560:	mov	x3, x0
  413564:	mov	x2, x4
  413568:	mov	w1, w21
  41356c:	mov	w0, w20
  413570:	bl	4024a0 <error@plt>
  413574:	b	413548 <ferror@plt+0x10aa8>
  413578:	bl	402a30 <__errno_location@plt>
  41357c:	ldr	w1, [x0]
  413580:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413584:	add	x2, x2, #0x394
  413588:	mov	w0, #0x0                   	// #0
  41358c:	bl	4024a0 <error@plt>
  413590:	bl	4027d0 <abort@plt>
  413594:	stp	x29, x30, [sp, #-48]!
  413598:	mov	x29, sp
  41359c:	ldp	x4, x5, [x3]
  4135a0:	stp	x4, x5, [sp, #16]
  4135a4:	ldp	x4, x5, [x3, #16]
  4135a8:	mov	w3, #0x0                   	// #0
  4135ac:	stp	x4, x5, [sp, #32]
  4135b0:	add	x5, sp, #0x10
  4135b4:	mov	x4, x2
  4135b8:	mov	x2, #0x0                   	// #0
  4135bc:	bl	4134dc <ferror@plt+0x10a3c>
  4135c0:	ldp	x29, x30, [sp], #48
  4135c4:	ret
  4135c8:	sub	sp, sp, #0x50
  4135cc:	stp	x29, x30, [sp, #32]
  4135d0:	add	x29, sp, #0x20
  4135d4:	stp	x19, x20, [sp, #48]
  4135d8:	mov	x20, x0
  4135dc:	mov	x19, x4
  4135e0:	str	x21, [sp, #64]
  4135e4:	mov	x21, x5
  4135e8:	cbz	x1, 413660 <ferror@plt+0x10bc0>
  4135ec:	mov	x5, x3
  4135f0:	mov	x4, x2
  4135f4:	mov	x3, x1
  4135f8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4135fc:	mov	w1, #0x1                   	// #1
  413600:	add	x2, x2, #0x3b4
  413604:	bl	402850 <__fprintf_chk@plt>
  413608:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x34bc>
  41360c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413610:	add	x3, x3, #0x3c7
  413614:	add	x2, x2, #0x6a6
  413618:	mov	w4, #0x7e0                 	// #2016
  41361c:	mov	w1, #0x1                   	// #1
  413620:	mov	x0, x20
  413624:	bl	402850 <__fprintf_chk@plt>
  413628:	mov	x1, x20
  41362c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  413630:	add	x0, x0, #0x3cb
  413634:	bl	4029c0 <fputs_unlocked@plt>
  413638:	cmp	x21, #0x9
  41363c:	b.hi	413844 <ferror@plt+0x10da4>  // b.pmore
  413640:	cmp	w21, #0x9
  413644:	b.hi	413844 <ferror@plt+0x10da4>  // b.pmore
  413648:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  41364c:	add	x0, x0, #0x69c
  413650:	ldrb	w0, [x0, w21, uxtw]
  413654:	adr	x1, 413660 <ferror@plt+0x10bc0>
  413658:	add	x0, x1, w0, sxtb #2
  41365c:	br	x0
  413660:	mov	x4, x3
  413664:	mov	w1, #0x1                   	// #1
  413668:	mov	x3, x2
  41366c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413670:	add	x2, x2, #0x3c0
  413674:	bl	402850 <__fprintf_chk@plt>
  413678:	b	413608 <ferror@plt+0x10b68>
  41367c:	bl	4027d0 <abort@plt>
  413680:	mov	x0, x20
  413684:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413688:	ldr	x3, [x19]
  41368c:	add	x2, x2, #0x496
  413690:	ldp	x29, x30, [sp, #32]
  413694:	mov	w1, #0x1                   	// #1
  413698:	ldp	x19, x20, [sp, #48]
  41369c:	ldr	x21, [sp, #64]
  4136a0:	add	sp, sp, #0x50
  4136a4:	b	402850 <__fprintf_chk@plt>
  4136a8:	mov	x0, x20
  4136ac:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4136b0:	ldp	x3, x4, [x19]
  4136b4:	add	x2, x2, #0x4a6
  4136b8:	ldp	x29, x30, [sp, #32]
  4136bc:	mov	w1, #0x1                   	// #1
  4136c0:	ldp	x19, x20, [sp, #48]
  4136c4:	ldr	x21, [sp, #64]
  4136c8:	add	sp, sp, #0x50
  4136cc:	b	402850 <__fprintf_chk@plt>
  4136d0:	mov	x0, x20
  4136d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4136d8:	ldp	x3, x4, [x19]
  4136dc:	add	x2, x2, #0x4bd
  4136e0:	ldr	x5, [x19, #16]
  4136e4:	mov	w1, #0x1                   	// #1
  4136e8:	ldp	x29, x30, [sp, #32]
  4136ec:	ldp	x19, x20, [sp, #48]
  4136f0:	ldr	x21, [sp, #64]
  4136f4:	add	sp, sp, #0x50
  4136f8:	b	402850 <__fprintf_chk@plt>
  4136fc:	mov	x0, x20
  413700:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413704:	ldp	x3, x4, [x19]
  413708:	add	x2, x2, #0x4d9
  41370c:	ldp	x5, x6, [x19, #16]
  413710:	mov	w1, #0x1                   	// #1
  413714:	ldp	x29, x30, [sp, #32]
  413718:	ldp	x19, x20, [sp, #48]
  41371c:	ldr	x21, [sp, #64]
  413720:	add	sp, sp, #0x50
  413724:	b	402850 <__fprintf_chk@plt>
  413728:	mov	x0, x20
  41372c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413730:	ldp	x3, x4, [x19]
  413734:	add	x2, x2, #0x4f9
  413738:	ldp	x5, x6, [x19, #16]
  41373c:	mov	w1, #0x1                   	// #1
  413740:	ldp	x29, x30, [sp, #32]
  413744:	ldr	x7, [x19, #32]
  413748:	ldp	x19, x20, [sp, #48]
  41374c:	ldr	x21, [sp, #64]
  413750:	add	sp, sp, #0x50
  413754:	b	402850 <__fprintf_chk@plt>
  413758:	ldp	x3, x4, [x19]
  41375c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413760:	ldp	x5, x6, [x19, #16]
  413764:	add	x2, x2, #0x51d
  413768:	ldp	x7, x0, [x19, #32]
  41376c:	str	x0, [sp]
  413770:	mov	w1, #0x1                   	// #1
  413774:	mov	x0, x20
  413778:	bl	402850 <__fprintf_chk@plt>
  41377c:	ldp	x29, x30, [sp, #32]
  413780:	ldp	x19, x20, [sp, #48]
  413784:	ldr	x21, [sp, #64]
  413788:	add	sp, sp, #0x50
  41378c:	ret
  413790:	ldp	x3, x4, [x19]
  413794:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413798:	ldp	x5, x6, [x19, #16]
  41379c:	add	x2, x2, #0x545
  4137a0:	ldr	x0, [x19, #48]
  4137a4:	mov	w1, #0x1                   	// #1
  4137a8:	ldr	x7, [x19, #32]
  4137ac:	str	x0, [sp, #8]
  4137b0:	ldr	x0, [x19, #40]
  4137b4:	str	x0, [sp]
  4137b8:	mov	x0, x20
  4137bc:	bl	402850 <__fprintf_chk@plt>
  4137c0:	b	41377c <ferror@plt+0x10cdc>
  4137c4:	ldr	x0, [x19, #56]
  4137c8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4137cc:	ldp	x3, x4, [x19]
  4137d0:	add	x2, x2, #0x571
  4137d4:	ldp	x5, x6, [x19, #16]
  4137d8:	mov	w1, #0x1                   	// #1
  4137dc:	ldr	x7, [x19, #32]
  4137e0:	str	x0, [sp, #16]
  4137e4:	ldr	x0, [x19, #48]
  4137e8:	str	x0, [sp, #8]
  4137ec:	ldr	x0, [x19, #40]
  4137f0:	str	x0, [sp]
  4137f4:	mov	x0, x20
  4137f8:	bl	402850 <__fprintf_chk@plt>
  4137fc:	b	41377c <ferror@plt+0x10cdc>
  413800:	ldr	x0, [x19, #64]
  413804:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413808:	ldp	x3, x4, [x19]
  41380c:	add	x2, x2, #0x5a1
  413810:	ldp	x5, x6, [x19, #16]
  413814:	ldr	x7, [x19, #32]
  413818:	str	x0, [sp, #24]
  41381c:	ldr	x0, [x19, #56]
  413820:	str	x0, [sp, #16]
  413824:	ldr	x0, [x19, #48]
  413828:	str	x0, [sp, #8]
  41382c:	ldr	x0, [x19, #40]
  413830:	str	x0, [sp]
  413834:	mov	x0, x20
  413838:	mov	w1, #0x1                   	// #1
  41383c:	bl	402850 <__fprintf_chk@plt>
  413840:	b	41377c <ferror@plt+0x10cdc>
  413844:	ldr	x0, [x19, #64]
  413848:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  41384c:	ldp	x3, x4, [x19]
  413850:	add	x2, x2, #0x5d5
  413854:	ldp	x5, x6, [x19, #16]
  413858:	ldr	x7, [x19, #32]
  41385c:	str	x0, [sp, #24]
  413860:	ldr	x0, [x19, #56]
  413864:	str	x0, [sp, #16]
  413868:	ldr	x0, [x19, #48]
  41386c:	str	x0, [sp, #8]
  413870:	ldr	x0, [x19, #40]
  413874:	str	x0, [sp]
  413878:	b	413834 <ferror@plt+0x10d94>
  41387c:	mov	x5, #0x0                   	// #0
  413880:	ldr	x6, [x4, x5, lsl #3]
  413884:	cbnz	x6, 41388c <ferror@plt+0x10dec>
  413888:	b	4135c8 <ferror@plt+0x10b28>
  41388c:	add	x5, x5, #0x1
  413890:	b	413880 <ferror@plt+0x10de0>
  413894:	stp	x29, x30, [sp, #-96]!
  413898:	mov	x5, #0x0                   	// #0
  41389c:	mov	x29, sp
  4138a0:	ldr	w7, [x4, #24]
  4138a4:	ldp	x6, x10, [x4]
  4138a8:	add	x4, sp, #0x10
  4138ac:	tbnz	w7, #31, 4138e0 <ferror@plt+0x10e40>
  4138b0:	add	x9, x6, #0xf
  4138b4:	mov	x8, x6
  4138b8:	and	x6, x9, #0xfffffffffffffff8
  4138bc:	ldr	x8, [x8]
  4138c0:	str	x8, [x4, x5, lsl #3]
  4138c4:	cbz	x8, 4138d4 <ferror@plt+0x10e34>
  4138c8:	add	x5, x5, #0x1
  4138cc:	cmp	x5, #0xa
  4138d0:	b.ne	4138ac <ferror@plt+0x10e0c>  // b.any
  4138d4:	bl	4135c8 <ferror@plt+0x10b28>
  4138d8:	ldp	x29, x30, [sp], #96
  4138dc:	ret
  4138e0:	add	w9, w7, #0x8
  4138e4:	cmp	w9, #0x0
  4138e8:	b.le	413900 <ferror@plt+0x10e60>
  4138ec:	add	x11, x6, #0xf
  4138f0:	mov	x8, x6
  4138f4:	mov	w7, w9
  4138f8:	and	x6, x11, #0xfffffffffffffff8
  4138fc:	b	4138bc <ferror@plt+0x10e1c>
  413900:	add	x8, x10, w7, sxtw
  413904:	mov	w7, w9
  413908:	b	4138bc <ferror@plt+0x10e1c>
  41390c:	stp	x29, x30, [sp, #-240]!
  413910:	mov	x29, sp
  413914:	stp	x4, x5, [sp, #208]
  413918:	add	x4, sp, #0xf0
  41391c:	stp	x4, x4, [sp, #48]
  413920:	add	x4, sp, #0xd0
  413924:	str	x4, [sp, #64]
  413928:	mov	w4, #0xffffffe0            	// #-32
  41392c:	str	w4, [sp, #72]
  413930:	mov	w4, #0xffffff80            	// #-128
  413934:	str	w4, [sp, #76]
  413938:	ldp	x4, x5, [sp, #48]
  41393c:	stp	x4, x5, [sp, #16]
  413940:	ldp	x4, x5, [sp, #64]
  413944:	stp	x4, x5, [sp, #32]
  413948:	add	x4, sp, #0x10
  41394c:	str	q0, [sp, #80]
  413950:	str	q1, [sp, #96]
  413954:	str	q2, [sp, #112]
  413958:	str	q3, [sp, #128]
  41395c:	str	q4, [sp, #144]
  413960:	str	q5, [sp, #160]
  413964:	str	q6, [sp, #176]
  413968:	str	q7, [sp, #192]
  41396c:	stp	x6, x7, [sp, #224]
  413970:	bl	413894 <ferror@plt+0x10df4>
  413974:	ldp	x29, x30, [sp], #240
  413978:	ret
  41397c:	stp	x29, x30, [sp, #-16]!
  413980:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  413984:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  413988:	mov	x29, sp
  41398c:	add	x2, x2, #0x3f
  413990:	add	x1, x1, #0x611
  413994:	mov	w0, #0x1                   	// #1
  413998:	bl	402690 <__printf_chk@plt>
  41399c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x34bc>
  4139a0:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x4bc>
  4139a4:	add	x3, x3, #0x626
  4139a8:	add	x2, x2, #0x140
  4139ac:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  4139b0:	mov	w0, #0x1                   	// #1
  4139b4:	add	x1, x1, #0x646
  4139b8:	bl	402690 <__printf_chk@plt>
  4139bc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4139c0:	ldp	x29, x30, [sp], #16
  4139c4:	ldr	x1, [x0, #1088]
  4139c8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  4139cc:	add	x0, x0, #0x65a
  4139d0:	b	4029c0 <fputs_unlocked@plt>
  4139d4:	stp	x29, x30, [sp, #-32]!
  4139d8:	mov	x29, sp
  4139dc:	stp	x19, x20, [sp, #16]
  4139e0:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4139e4:	add	x19, x19, #0xc40
  4139e8:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4139ec:	ldr	w1, [x19]
  4139f0:	sxtw	x0, w1
  4139f4:	cbz	w1, 413a28 <ferror@plt+0x10f88>
  4139f8:	sub	x0, x0, #0x1
  4139fc:	str	w0, [x19]
  413a00:	ldr	x1, [x20, #1024]
  413a04:	lsl	x0, x0, #3
  413a08:	ldr	w1, [x1, x0]
  413a0c:	cbz	w1, 4139ec <ferror@plt+0x10f4c>
  413a10:	ldr	x1, [x20, #1024]
  413a14:	add	x0, x1, x0
  413a18:	mov	w1, #0x1                   	// #1
  413a1c:	ldr	w0, [x0, #4]
  413a20:	bl	402560 <kill@plt>
  413a24:	b	4139ec <ferror@plt+0x10f4c>
  413a28:	ldp	x19, x20, [sp, #16]
  413a2c:	ldp	x29, x30, [sp], #32
  413a30:	ret
  413a34:	stp	x29, x30, [sp, #-96]!
  413a38:	mov	x29, sp
  413a3c:	stp	x19, x20, [sp, #16]
  413a40:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0xaba8>
  413a44:	stp	x21, x22, [sp, #32]
  413a48:	add	x22, x19, #0xc40
  413a4c:	mov	w21, w0
  413a50:	stp	x23, x24, [sp, #48]
  413a54:	ldrb	w0, [x22, #4]
  413a58:	stp	x25, x26, [sp, #64]
  413a5c:	str	x27, [sp, #80]
  413a60:	cbnz	w0, 413a84 <ferror@plt+0x10fe4>
  413a64:	adrp	x20, 413000 <ferror@plt+0x10560>
  413a68:	add	x20, x20, #0x9d4
  413a6c:	mov	x0, x20
  413a70:	bl	414fc0 <_obstack_memory_used@@Base+0x47c>
  413a74:	mov	x0, x20
  413a78:	bl	40fce0 <ferror@plt+0xd240>
  413a7c:	mov	w0, #0x1                   	// #1
  413a80:	strb	w0, [x22, #4]
  413a84:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x194bc>
  413a88:	ldr	x1, [x20, #1024]
  413a8c:	ldr	w0, [x19, #3136]
  413a90:	add	x0, x1, w0, sxtw #3
  413a94:	cmp	x1, x0
  413a98:	b.cc	413adc <ferror@plt+0x1103c>  // b.lo, b.ul, b.last
  413a9c:	add	x26, x20, #0x400
  413aa0:	ldr	w0, [x19, #3136]
  413aa4:	ldr	x1, [x26, #8]
  413aa8:	sxtw	x25, w0
  413aac:	cmp	x1, w0, sxtw
  413ab0:	b.ne	413b3c <ferror@plt+0x1109c>  // b.any
  413ab4:	ldr	x24, [x20, #1024]
  413ab8:	lsl	x0, x25, #4
  413abc:	lsl	x27, x25, #1
  413ac0:	bl	402600 <malloc@plt>
  413ac4:	mov	x23, x0
  413ac8:	cbnz	x0, 413b14 <ferror@plt+0x11074>
  413acc:	mov	w1, #0x1                   	// #1
  413ad0:	mov	w0, w21
  413ad4:	bl	402560 <kill@plt>
  413ad8:	bl	413eec <ferror@plt+0x1144c>
  413adc:	ldr	w2, [x1]
  413ae0:	cbnz	w2, 413b0c <ferror@plt+0x1106c>
  413ae4:	str	w21, [x1, #4]
  413ae8:	mov	w0, #0x1                   	// #1
  413aec:	str	w0, [x1]
  413af0:	ldp	x19, x20, [sp, #16]
  413af4:	ldp	x21, x22, [sp, #32]
  413af8:	ldp	x23, x24, [sp, #48]
  413afc:	ldp	x25, x26, [sp, #64]
  413b00:	ldr	x27, [sp, #80]
  413b04:	ldp	x29, x30, [sp], #96
  413b08:	ret
  413b0c:	add	x1, x1, #0x8
  413b10:	b	413a94 <ferror@plt+0x10ff4>
  413b14:	lsl	x2, x25, #3
  413b18:	mov	x1, x24
  413b1c:	bl	402420 <memcpy@plt>
  413b20:	str	x23, [x20, #1024]
  413b24:	str	x27, [x26, #8]
  413b28:	add	x22, x22, #0x8
  413b2c:	cmp	x24, x22
  413b30:	b.eq	413b3c <ferror@plt+0x1109c>  // b.none
  413b34:	mov	x0, x24
  413b38:	bl	4028c0 <free@plt>
  413b3c:	ldr	x1, [x20, #1024]
  413b40:	mov	w2, #0x1                   	// #1
  413b44:	ldr	w0, [x19, #3136]
  413b48:	add	x0, x1, w0, sxtw #3
  413b4c:	str	w21, [x0, #4]
  413b50:	ldr	x1, [x20, #1024]
  413b54:	ldr	w0, [x19, #3136]
  413b58:	sbfiz	x0, x0, #3, #32
  413b5c:	str	w2, [x1, x0]
  413b60:	ldr	w0, [x19, #3136]
  413b64:	add	w0, w0, w2
  413b68:	str	w0, [x19, #3136]
  413b6c:	b	413af0 <ferror@plt+0x11050>
  413b70:	stp	x29, x30, [sp, #-96]!
  413b74:	mov	x29, sp
  413b78:	stp	x19, x20, [sp, #16]
  413b7c:	and	w19, w3, #0xff
  413b80:	stp	x21, x22, [sp, #32]
  413b84:	mov	w22, w0
  413b88:	mov	x21, x6
  413b8c:	stp	x23, x24, [sp, #48]
  413b90:	and	w23, w2, #0xff
  413b94:	and	w24, w5, #0xff
  413b98:	stp	x25, x26, [sp, #64]
  413b9c:	mov	x25, x1
  413ba0:	and	w26, w4, #0xff
  413ba4:	cbz	x6, 413bac <ferror@plt+0x1110c>
  413ba8:	str	wzr, [x6]
  413bac:	str	wzr, [sp, #92]
  413bb0:	add	x1, sp, #0x5c
  413bb4:	mov	w0, w22
  413bb8:	mov	w2, #0x0                   	// #0
  413bbc:	bl	402a60 <waitpid@plt>
  413bc0:	cmp	w22, w0
  413bc4:	b.eq	413c1c <ferror@plt+0x1117c>  // b.none
  413bc8:	bl	402a30 <__errno_location@plt>
  413bcc:	ldr	w1, [x0]
  413bd0:	cmp	w1, #0x4
  413bd4:	b.eq	413bb0 <ferror@plt+0x11110>  // b.none
  413bd8:	eor	w19, w19, #0x1
  413bdc:	orr	w19, w24, w19
  413be0:	cbnz	w19, 413c04 <ferror@plt+0x11164>
  413be4:	mov	w20, #0x7f                  	// #127
  413be8:	mov	w0, w20
  413bec:	ldp	x19, x20, [sp, #16]
  413bf0:	ldp	x21, x22, [sp, #32]
  413bf4:	ldp	x23, x24, [sp, #48]
  413bf8:	ldp	x25, x26, [sp, #64]
  413bfc:	ldp	x29, x30, [sp], #96
  413c00:	ret
  413c04:	mov	x3, x25
  413c08:	mov	w0, w24
  413c0c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413c10:	add	x2, x2, #0x6d5
  413c14:	bl	4024a0 <error@plt>
  413c18:	b	413be4 <ferror@plt+0x11144>
  413c1c:	ldr	w20, [sp, #92]
  413c20:	and	w0, w20, #0xff
  413c24:	cmp	w0, #0x7f
  413c28:	b.eq	413bb0 <ferror@plt+0x11110>  // b.none
  413c2c:	cbnz	w26, 413c4c <ferror@plt+0x111ac>
  413c30:	and	w4, w20, #0x7f
  413c34:	add	w0, w4, #0x1
  413c38:	sbfx	x0, x0, #1, #7
  413c3c:	cmp	w0, #0x0
  413c40:	b.gt	413c88 <ferror@plt+0x111e8>
  413c44:	cbz	w4, 413cd0 <ferror@plt+0x11230>
  413c48:	bl	4027d0 <abort@plt>
  413c4c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  413c50:	ldr	x2, [x0, #1024]
  413c54:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0xaba8>
  413c58:	ldr	w0, [x0, #3136]
  413c5c:	add	x0, x2, w0, sxtw #3
  413c60:	cmp	x0, x2
  413c64:	b.ls	413c30 <ferror@plt+0x11190>  // b.plast
  413c68:	ldr	w1, [x2]
  413c6c:	cbz	w1, 413c80 <ferror@plt+0x111e0>
  413c70:	ldr	w1, [x2, #4]
  413c74:	cmp	w22, w1
  413c78:	b.ne	413c80 <ferror@plt+0x111e0>  // b.any
  413c7c:	str	wzr, [x2]
  413c80:	add	x2, x2, #0x8
  413c84:	b	413c60 <ferror@plt+0x111c0>
  413c88:	cbz	x21, 413c90 <ferror@plt+0x111f0>
  413c8c:	str	w4, [x21]
  413c90:	cmp	w4, #0xd
  413c94:	b.ne	413c9c <ferror@plt+0x111fc>  // b.any
  413c98:	cbnz	w23, 413d04 <ferror@plt+0x11264>
  413c9c:	cbnz	w24, 413cb4 <ferror@plt+0x11214>
  413ca0:	cmp	x21, #0x0
  413ca4:	eor	w19, w19, #0x1
  413ca8:	cset	w0, eq  // eq = none
  413cac:	tst	w0, w19
  413cb0:	b.eq	413be4 <ferror@plt+0x11144>  // b.none
  413cb4:	mov	x3, x25
  413cb8:	mov	w0, w24
  413cbc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  413cc0:	mov	w1, #0x0                   	// #0
  413cc4:	add	x2, x2, #0x6e3
  413cc8:	bl	4024a0 <error@plt>
  413ccc:	b	413be4 <ferror@plt+0x11144>
  413cd0:	ubfx	x20, x20, #8, #8
  413cd4:	cmp	w20, #0x7f
  413cd8:	b.ne	413be8 <ferror@plt+0x11148>  // b.any
  413cdc:	eor	w19, w19, #0x1
  413ce0:	orr	w19, w24, w19
  413ce4:	cbz	w19, 413be4 <ferror@plt+0x11144>
  413ce8:	mov	x3, x25
  413cec:	mov	w0, w24
  413cf0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x24bc>
  413cf4:	mov	w1, #0x0                   	// #0
  413cf8:	add	x2, x2, #0x911
  413cfc:	bl	4024a0 <error@plt>
  413d00:	b	413be8 <ferror@plt+0x11148>
  413d04:	mov	w20, #0x0                   	// #0
  413d08:	b	413be8 <ferror@plt+0x11148>
  413d0c:	stp	x29, x30, [sp, #-32]!
  413d10:	mov	x29, sp
  413d14:	str	x19, [sp, #16]
  413d18:	mov	x19, x0
  413d1c:	bl	402600 <malloc@plt>
  413d20:	cmp	x0, #0x0
  413d24:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  413d28:	b.eq	413d30 <ferror@plt+0x11290>  // b.none
  413d2c:	bl	413eec <ferror@plt+0x1144c>
  413d30:	ldr	x19, [sp, #16]
  413d34:	ldp	x29, x30, [sp], #32
  413d38:	ret
  413d3c:	mov	x2, x0
  413d40:	mul	x0, x0, x1
  413d44:	umulh	x2, x2, x1
  413d48:	cmp	x2, #0x0
  413d4c:	cset	x1, ne  // ne = any
  413d50:	tbnz	x0, #63, 413d58 <ferror@plt+0x112b8>
  413d54:	cbz	x1, 413d64 <ferror@plt+0x112c4>
  413d58:	stp	x29, x30, [sp, #-16]!
  413d5c:	mov	x29, sp
  413d60:	bl	413eec <ferror@plt+0x1144c>
  413d64:	b	413d0c <ferror@plt+0x1126c>
  413d68:	b	413d0c <ferror@plt+0x1126c>
  413d6c:	stp	x29, x30, [sp, #-32]!
  413d70:	cmp	x1, #0x0
  413d74:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  413d78:	mov	x29, sp
  413d7c:	str	x19, [sp, #16]
  413d80:	b.eq	413d98 <ferror@plt+0x112f8>  // b.none
  413d84:	bl	4028c0 <free@plt>
  413d88:	mov	x0, #0x0                   	// #0
  413d8c:	ldr	x19, [sp, #16]
  413d90:	ldp	x29, x30, [sp], #32
  413d94:	ret
  413d98:	mov	x19, x1
  413d9c:	bl	402710 <realloc@plt>
  413da0:	cmp	x0, #0x0
  413da4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  413da8:	b.eq	413d8c <ferror@plt+0x112ec>  // b.none
  413dac:	bl	413eec <ferror@plt+0x1144c>
  413db0:	mov	x3, x1
  413db4:	mul	x1, x1, x2
  413db8:	umulh	x3, x3, x2
  413dbc:	cmp	x3, #0x0
  413dc0:	cset	x2, ne  // ne = any
  413dc4:	tbnz	x1, #63, 413dcc <ferror@plt+0x1132c>
  413dc8:	cbz	x2, 413dd8 <ferror@plt+0x11338>
  413dcc:	stp	x29, x30, [sp, #-16]!
  413dd0:	mov	x29, sp
  413dd4:	bl	413eec <ferror@plt+0x1144c>
  413dd8:	b	413d6c <ferror@plt+0x112cc>
  413ddc:	ldr	x3, [x1]
  413de0:	cbnz	x0, 413e04 <ferror@plt+0x11364>
  413de4:	cbnz	x3, 413df8 <ferror@plt+0x11358>
  413de8:	mov	x3, #0x80                  	// #128
  413dec:	cmp	x2, #0x80
  413df0:	udiv	x3, x3, x2
  413df4:	cinc	x3, x3, hi  // hi = pmore
  413df8:	str	x3, [x1]
  413dfc:	mul	x1, x3, x2
  413e00:	b	413d6c <ferror@plt+0x112cc>
  413e04:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  413e08:	movk	x4, #0x5554
  413e0c:	udiv	x4, x4, x2
  413e10:	cmp	x4, x3
  413e14:	b.hi	413e24 <ferror@plt+0x11384>  // b.pmore
  413e18:	stp	x29, x30, [sp, #-16]!
  413e1c:	mov	x29, sp
  413e20:	bl	413eec <ferror@plt+0x1144c>
  413e24:	add	x4, x3, #0x1
  413e28:	add	x3, x4, x3, lsr #1
  413e2c:	b	413df8 <ferror@plt+0x11358>
  413e30:	mov	x2, #0x1                   	// #1
  413e34:	b	413ddc <ferror@plt+0x1133c>
  413e38:	stp	x29, x30, [sp, #-32]!
  413e3c:	mov	x29, sp
  413e40:	str	x19, [sp, #16]
  413e44:	mov	x19, x0
  413e48:	bl	413d0c <ferror@plt+0x1126c>
  413e4c:	mov	x2, x19
  413e50:	mov	w1, #0x0                   	// #0
  413e54:	ldr	x19, [sp, #16]
  413e58:	ldp	x29, x30, [sp], #32
  413e5c:	b	4026a0 <memset@plt>
  413e60:	umulh	x2, x0, x1
  413e64:	stp	x29, x30, [sp, #-16]!
  413e68:	mul	x4, x0, x1
  413e6c:	cmp	x2, #0x0
  413e70:	mov	x29, sp
  413e74:	cset	x2, ne  // ne = any
  413e78:	tbnz	x4, #63, 413e80 <ferror@plt+0x113e0>
  413e7c:	cbz	x2, 413e84 <ferror@plt+0x113e4>
  413e80:	bl	413eec <ferror@plt+0x1144c>
  413e84:	bl	4026e0 <calloc@plt>
  413e88:	cbz	x0, 413e80 <ferror@plt+0x113e0>
  413e8c:	ldp	x29, x30, [sp], #16
  413e90:	ret
  413e94:	stp	x29, x30, [sp, #-32]!
  413e98:	mov	x29, sp
  413e9c:	stp	x19, x20, [sp, #16]
  413ea0:	mov	x19, x1
  413ea4:	mov	x20, x0
  413ea8:	mov	x0, x1
  413eac:	bl	413d0c <ferror@plt+0x1126c>
  413eb0:	mov	x2, x19
  413eb4:	mov	x1, x20
  413eb8:	ldp	x19, x20, [sp, #16]
  413ebc:	ldp	x29, x30, [sp], #32
  413ec0:	b	402420 <memcpy@plt>
  413ec4:	stp	x29, x30, [sp, #-32]!
  413ec8:	mov	x29, sp
  413ecc:	str	x19, [sp, #16]
  413ed0:	mov	x19, x0
  413ed4:	bl	402450 <strlen@plt>
  413ed8:	add	x1, x0, #0x1
  413edc:	mov	x0, x19
  413ee0:	ldr	x19, [sp, #16]
  413ee4:	ldp	x29, x30, [sp], #32
  413ee8:	b	413e94 <ferror@plt+0x113f4>
  413eec:	stp	x29, x30, [sp, #-16]!
  413ef0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  413ef4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x34bc>
  413ef8:	mov	x29, sp
  413efc:	ldr	w0, [x0, #884]
  413f00:	add	x3, x3, #0x705
  413f04:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x14bc>
  413f08:	add	x2, x2, #0x55e
  413f0c:	mov	w1, #0x0                   	// #0
  413f10:	bl	4024a0 <error@plt>
  413f14:	bl	4027d0 <abort@plt>
  413f18:	stp	x29, x30, [sp, #-16]!
  413f1c:	mov	x29, sp
  413f20:	bl	4112b8 <ferror@plt+0xe818>
  413f24:	cbnz	x0, 413f2c <ferror@plt+0x1148c>
  413f28:	bl	413eec <ferror@plt+0x1144c>
  413f2c:	ldp	x29, x30, [sp], #16
  413f30:	ret
  413f34:	stp	x29, x30, [sp, #-16]!
  413f38:	mov	x29, sp
  413f3c:	bl	4112c4 <ferror@plt+0xe824>
  413f40:	cbnz	x0, 413f48 <ferror@plt+0x114a8>
  413f44:	bl	413eec <ferror@plt+0x1144c>
  413f48:	ldp	x29, x30, [sp], #16
  413f4c:	ret
  413f50:	stp	x29, x30, [sp, #-16]!
  413f54:	mov	x29, sp
  413f58:	bl	4112f0 <ferror@plt+0xe850>
  413f5c:	tbz	w0, #31, 413f64 <ferror@plt+0x114c4>
  413f60:	bl	413eec <ferror@plt+0x1144c>
  413f64:	ldp	x29, x30, [sp], #16
  413f68:	ret
  413f6c:	stp	x29, x30, [sp, #-16]!
  413f70:	mov	x29, sp
  413f74:	bl	411330 <ferror@plt+0xe890>
  413f78:	cbnz	x0, 413f80 <ferror@plt+0x114e0>
  413f7c:	bl	413eec <ferror@plt+0x1144c>
  413f80:	ldp	x29, x30, [sp], #16
  413f84:	ret
  413f88:	stp	x29, x30, [sp, #-16]!
  413f8c:	mov	x29, sp
  413f90:	bl	411498 <ferror@plt+0xe9f8>
  413f94:	cbnz	x0, 413f9c <ferror@plt+0x114fc>
  413f98:	bl	413eec <ferror@plt+0x1144c>
  413f9c:	ldp	x29, x30, [sp], #16
  413fa0:	ret
  413fa4:	stp	x29, x30, [sp, #-16]!
  413fa8:	mov	x29, sp
  413fac:	bl	4114a8 <ferror@plt+0xea08>
  413fb0:	cbnz	x0, 413fb8 <ferror@plt+0x11518>
  413fb4:	bl	413eec <ferror@plt+0x1144c>
  413fb8:	ldp	x29, x30, [sp], #16
  413fbc:	ret
  413fc0:	stp	x29, x30, [sp, #-16]!
  413fc4:	mov	x29, sp
  413fc8:	bl	4114b8 <ferror@plt+0xea18>
  413fcc:	cbnz	x0, 413fd4 <ferror@plt+0x11534>
  413fd0:	bl	413eec <ferror@plt+0x1144c>
  413fd4:	ldp	x29, x30, [sp], #16
  413fd8:	ret
  413fdc:	stp	x29, x30, [sp, #-16]!
  413fe0:	mov	x29, sp
  413fe4:	bl	4114c8 <ferror@plt+0xea28>
  413fe8:	cbnz	x0, 413ff0 <ferror@plt+0x11550>
  413fec:	bl	413eec <ferror@plt+0x1144c>
  413ff0:	ldp	x29, x30, [sp], #16
  413ff4:	ret
  413ff8:	stp	x29, x30, [sp, #-16]!
  413ffc:	mov	x29, sp
  414000:	bl	4114d8 <ferror@plt+0xea38>
  414004:	cbnz	x0, 41400c <ferror@plt+0x1156c>
  414008:	bl	413eec <ferror@plt+0x1144c>
  41400c:	ldp	x29, x30, [sp], #16
  414010:	ret
  414014:	stp	x29, x30, [sp, #-16]!
  414018:	mov	x29, sp
  41401c:	bl	4115c0 <ferror@plt+0xeb20>
  414020:	cbnz	x0, 414028 <ferror@plt+0x11588>
  414024:	bl	413eec <ferror@plt+0x1144c>
  414028:	ldp	x29, x30, [sp], #16
  41402c:	ret
  414030:	stp	x29, x30, [sp, #-16]!
  414034:	mov	x29, sp
  414038:	bl	4115e0 <ferror@plt+0xeb40>
  41403c:	cbnz	x0, 414044 <ferror@plt+0x115a4>
  414040:	bl	413eec <ferror@plt+0x1144c>
  414044:	ldp	x29, x30, [sp], #16
  414048:	ret
  41404c:	stp	x29, x30, [sp, #-16]!
  414050:	mov	x29, sp
  414054:	bl	4117ac <ferror@plt+0xed0c>
  414058:	cbnz	x0, 414060 <ferror@plt+0x115c0>
  41405c:	bl	413eec <ferror@plt+0x1144c>
  414060:	ldp	x29, x30, [sp], #16
  414064:	ret
  414068:	stp	x29, x30, [sp, #-16]!
  41406c:	mov	x29, sp
  414070:	bl	4117e8 <ferror@plt+0xed48>
  414074:	cmp	w0, #0x0
  414078:	b.ge	414080 <ferror@plt+0x115e0>  // b.tcont
  41407c:	bl	413eec <ferror@plt+0x1144c>
  414080:	cset	w0, ne  // ne = any
  414084:	ldp	x29, x30, [sp], #16
  414088:	ret
  41408c:	stp	x29, x30, [sp, #-96]!
  414090:	mov	x29, sp
  414094:	ldp	x4, x5, [x1]
  414098:	stp	x19, x20, [sp, #16]
  41409c:	ldp	x2, x3, [x1, #16]
  4140a0:	mov	x1, x0
  4140a4:	mov	w0, #0x1                   	// #1
  4140a8:	stp	x4, x5, [sp, #32]
  4140ac:	stp	x2, x3, [sp, #48]
  4140b0:	stp	x4, x5, [sp, #64]
  4140b4:	stp	x2, x3, [sp, #80]
  4140b8:	add	x2, sp, #0x20
  4140bc:	bl	4026f0 <__vprintf_chk@plt>
  4140c0:	mov	w19, w0
  4140c4:	tbz	w0, #31, 4140f8 <ferror@plt+0x11658>
  4140c8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4140cc:	ldr	x0, [x0, #1088]
  4140d0:	bl	402aa0 <ferror@plt>
  4140d4:	cbnz	w0, 4140f8 <ferror@plt+0x11658>
  4140d8:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4140dc:	ldr	w20, [x0, #884]
  4140e0:	bl	402a30 <__errno_location@plt>
  4140e4:	ldr	w1, [x0]
  4140e8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4140ec:	mov	w0, w20
  4140f0:	add	x2, x2, #0x716
  4140f4:	bl	4024a0 <error@plt>
  4140f8:	mov	w0, w19
  4140fc:	ldp	x19, x20, [sp, #16]
  414100:	ldp	x29, x30, [sp], #96
  414104:	ret
  414108:	stp	x29, x30, [sp, #-272]!
  41410c:	mov	x29, sp
  414110:	stp	x1, x2, [sp, #216]
  414114:	add	x1, sp, #0x110
  414118:	stp	x1, x1, [sp, #48]
  41411c:	add	x1, sp, #0xd0
  414120:	str	x1, [sp, #64]
  414124:	mov	w1, #0xffffffc8            	// #-56
  414128:	str	w1, [sp, #72]
  41412c:	mov	w1, #0xffffff80            	// #-128
  414130:	str	w1, [sp, #76]
  414134:	add	x1, sp, #0x10
  414138:	stp	x3, x4, [sp, #232]
  41413c:	ldp	x2, x3, [sp, #48]
  414140:	stp	x2, x3, [sp, #16]
  414144:	ldp	x2, x3, [sp, #64]
  414148:	stp	x2, x3, [sp, #32]
  41414c:	str	q0, [sp, #80]
  414150:	str	q1, [sp, #96]
  414154:	str	q2, [sp, #112]
  414158:	str	q3, [sp, #128]
  41415c:	str	q4, [sp, #144]
  414160:	str	q5, [sp, #160]
  414164:	str	q6, [sp, #176]
  414168:	str	q7, [sp, #192]
  41416c:	stp	x5, x6, [sp, #248]
  414170:	str	x7, [sp, #264]
  414174:	bl	41408c <ferror@plt+0x115ec>
  414178:	ldp	x29, x30, [sp], #272
  41417c:	ret
  414180:	stp	x29, x30, [sp, #-96]!
  414184:	mov	x29, sp
  414188:	ldp	x4, x5, [x2]
  41418c:	stp	x19, x20, [sp, #16]
  414190:	mov	x20, x0
  414194:	ldp	x2, x3, [x2, #16]
  414198:	stp	x4, x5, [sp, #32]
  41419c:	stp	x2, x3, [sp, #48]
  4141a0:	stp	x4, x5, [sp, #64]
  4141a4:	stp	x2, x3, [sp, #80]
  4141a8:	mov	x2, x1
  4141ac:	add	x3, sp, #0x20
  4141b0:	mov	w1, #0x1                   	// #1
  4141b4:	bl	4026d0 <__vfprintf_chk@plt>
  4141b8:	mov	w19, w0
  4141bc:	tbz	w0, #31, 4141ec <ferror@plt+0x1174c>
  4141c0:	mov	x0, x20
  4141c4:	bl	402aa0 <ferror@plt>
  4141c8:	cbnz	w0, 4141ec <ferror@plt+0x1174c>
  4141cc:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4141d0:	ldr	w20, [x0, #884]
  4141d4:	bl	402a30 <__errno_location@plt>
  4141d8:	ldr	w1, [x0]
  4141dc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  4141e0:	mov	w0, w20
  4141e4:	add	x2, x2, #0x716
  4141e8:	bl	4024a0 <error@plt>
  4141ec:	mov	w0, w19
  4141f0:	ldp	x19, x20, [sp, #16]
  4141f4:	ldp	x29, x30, [sp], #96
  4141f8:	ret
  4141fc:	stp	x29, x30, [sp, #-256]!
  414200:	mov	x29, sp
  414204:	stp	x2, x3, [sp, #208]
  414208:	add	x2, sp, #0x100
  41420c:	stp	x2, x2, [sp, #48]
  414210:	add	x2, sp, #0xd0
  414214:	str	x2, [sp, #64]
  414218:	mov	w2, #0xffffffd0            	// #-48
  41421c:	str	w2, [sp, #72]
  414220:	mov	w2, #0xffffff80            	// #-128
  414224:	str	w2, [sp, #76]
  414228:	ldp	x2, x3, [sp, #48]
  41422c:	stp	x2, x3, [sp, #16]
  414230:	ldp	x2, x3, [sp, #64]
  414234:	stp	x2, x3, [sp, #32]
  414238:	add	x2, sp, #0x10
  41423c:	str	q0, [sp, #80]
  414240:	str	q1, [sp, #96]
  414244:	str	q2, [sp, #112]
  414248:	str	q3, [sp, #128]
  41424c:	str	q4, [sp, #144]
  414250:	str	q5, [sp, #160]
  414254:	str	q6, [sp, #176]
  414258:	str	q7, [sp, #192]
  41425c:	stp	x4, x5, [sp, #224]
  414260:	stp	x6, x7, [sp, #240]
  414264:	bl	414180 <ferror@plt+0x116e0>
  414268:	ldp	x29, x30, [sp], #256
  41426c:	ret
  414270:	stp	x29, x30, [sp, #-112]!
  414274:	mov	x29, sp
  414278:	stp	x19, x20, [sp, #16]
  41427c:	mov	x19, x1
  414280:	mov	x20, #0x0                   	// #0
  414284:	stp	x21, x22, [sp, #32]
  414288:	mov	x21, x0
  41428c:	stp	x23, x24, [sp, #48]
  414290:	mov	x23, x0
  414294:	ldr	w24, [x1, #24]
  414298:	ldr	x22, [x1]
  41429c:	stp	x25, x26, [sp, #64]
  4142a0:	mov	x26, #0xffffffffffffffff    	// #-1
  4142a4:	ldp	x0, x1, [x1]
  4142a8:	stp	x0, x1, [sp, #80]
  4142ac:	ldr	x25, [sp, #88]
  4142b0:	ldp	x0, x1, [x19, #16]
  4142b4:	stp	x0, x1, [sp, #96]
  4142b8:	cbnz	x23, 4142f0 <ferror@plt+0x11850>
  4142bc:	mov	x0, #0x7fffffff            	// #2147483647
  4142c0:	cmp	x20, x0
  4142c4:	b.ls	414338 <ferror@plt+0x11898>  // b.plast
  4142c8:	bl	402a30 <__errno_location@plt>
  4142cc:	mov	w1, #0x4b                  	// #75
  4142d0:	str	w1, [x0]
  4142d4:	mov	x0, x23
  4142d8:	ldp	x19, x20, [sp, #16]
  4142dc:	ldp	x21, x22, [sp, #32]
  4142e0:	ldp	x23, x24, [sp, #48]
  4142e4:	ldp	x25, x26, [sp, #64]
  4142e8:	ldp	x29, x30, [sp], #112
  4142ec:	ret
  4142f0:	ldr	w1, [sp, #104]
  4142f4:	ldr	x0, [sp, #80]
  4142f8:	tbnz	w1, #31, 414320 <ferror@plt+0x11880>
  4142fc:	add	x1, x0, #0xf
  414300:	and	x1, x1, #0xfffffffffffffff8
  414304:	str	x1, [sp, #80]
  414308:	ldr	x0, [x0]
  41430c:	sub	x23, x23, #0x1
  414310:	bl	402450 <strlen@plt>
  414314:	adds	x20, x0, x20
  414318:	csel	x20, x20, x26, cc  // cc = lo, ul, last
  41431c:	b	4142b8 <ferror@plt+0x11818>
  414320:	add	w2, w1, #0x8
  414324:	str	w2, [sp, #104]
  414328:	cmp	w2, #0x0
  41432c:	b.gt	4142fc <ferror@plt+0x1185c>
  414330:	add	x0, x25, w1, sxtw
  414334:	b	414308 <ferror@plt+0x11868>
  414338:	add	x0, x20, #0x1
  41433c:	bl	413d0c <ferror@plt+0x1126c>
  414340:	mov	x23, x0
  414344:	mov	x25, x0
  414348:	cbnz	x21, 414354 <ferror@plt+0x118b4>
  41434c:	strb	wzr, [x25]
  414350:	b	4142d4 <ferror@plt+0x11834>
  414354:	tbnz	w24, #31, 414398 <ferror@plt+0x118f8>
  414358:	add	x20, x22, #0xf
  41435c:	mov	w26, w24
  414360:	and	x20, x20, #0xfffffffffffffff8
  414364:	ldr	x24, [x22]
  414368:	sub	x21, x21, #0x1
  41436c:	mov	x0, x24
  414370:	bl	402450 <strlen@plt>
  414374:	mov	x22, x0
  414378:	mov	x2, x0
  41437c:	mov	x1, x24
  414380:	mov	x0, x25
  414384:	mov	w24, w26
  414388:	add	x25, x25, x22
  41438c:	bl	402420 <memcpy@plt>
  414390:	mov	x22, x20
  414394:	b	414348 <ferror@plt+0x118a8>
  414398:	add	w26, w24, #0x8
  41439c:	cmp	w26, #0x0
  4143a0:	b.le	4143b0 <ferror@plt+0x11910>
  4143a4:	add	x20, x22, #0xf
  4143a8:	and	x20, x20, #0xfffffffffffffff8
  4143ac:	b	414364 <ferror@plt+0x118c4>
  4143b0:	ldr	x0, [x19, #8]
  4143b4:	mov	x20, x22
  4143b8:	add	x22, x0, w24, sxtw
  4143bc:	b	414364 <ferror@plt+0x118c4>
  4143c0:	stp	x29, x30, [sp, #-96]!
  4143c4:	mov	x2, x0
  4143c8:	mov	x3, x0
  4143cc:	mov	x0, #0x0                   	// #0
  4143d0:	mov	x29, sp
  4143d4:	ldrb	w4, [x3]
  4143d8:	cbnz	w4, 4143fc <ferror@plt+0x1195c>
  4143dc:	ldp	x2, x3, [x1]
  4143e0:	stp	x2, x3, [sp, #16]
  4143e4:	ldp	x2, x3, [x1, #16]
  4143e8:	add	x1, sp, #0x10
  4143ec:	stp	x2, x3, [sp, #32]
  4143f0:	bl	414270 <ferror@plt+0x117d0>
  4143f4:	ldp	x29, x30, [sp], #96
  4143f8:	ret
  4143fc:	cmp	w4, #0x25
  414400:	b.ne	41441c <ferror@plt+0x1197c>  // b.any
  414404:	ldrb	w4, [x3, #1]
  414408:	cmp	w4, #0x73
  41440c:	b.ne	41441c <ferror@plt+0x1197c>  // b.any
  414410:	add	x3, x3, #0x2
  414414:	add	x0, x0, #0x1
  414418:	b	4143d4 <ferror@plt+0x11934>
  41441c:	ldp	x4, x5, [x1]
  414420:	add	x3, sp, #0x10
  414424:	ldp	x0, x1, [x1, #16]
  414428:	stp	x4, x5, [sp, #16]
  41442c:	stp	x0, x1, [sp, #32]
  414430:	stp	x4, x5, [sp, #64]
  414434:	stp	x0, x1, [sp, #80]
  414438:	add	x0, sp, #0x38
  41443c:	mov	w1, #0x1                   	// #1
  414440:	bl	402620 <__vasprintf_chk@plt>
  414444:	tbz	w0, #31, 414460 <ferror@plt+0x119c0>
  414448:	bl	402a30 <__errno_location@plt>
  41444c:	ldr	w1, [x0]
  414450:	mov	x0, #0x0                   	// #0
  414454:	cmp	w1, #0xc
  414458:	b.ne	4143f4 <ferror@plt+0x11954>  // b.any
  41445c:	bl	413eec <ferror@plt+0x1144c>
  414460:	ldr	x0, [sp, #56]
  414464:	b	4143f4 <ferror@plt+0x11954>
  414468:	stp	x29, x30, [sp, #-272]!
  41446c:	mov	x29, sp
  414470:	stp	x1, x2, [sp, #216]
  414474:	add	x1, sp, #0x110
  414478:	stp	x1, x1, [sp, #48]
  41447c:	add	x1, sp, #0xd0
  414480:	str	x1, [sp, #64]
  414484:	mov	w1, #0xffffffc8            	// #-56
  414488:	str	w1, [sp, #72]
  41448c:	mov	w1, #0xffffff80            	// #-128
  414490:	str	w1, [sp, #76]
  414494:	add	x1, sp, #0x10
  414498:	stp	x3, x4, [sp, #232]
  41449c:	ldp	x2, x3, [sp, #48]
  4144a0:	stp	x2, x3, [sp, #16]
  4144a4:	ldp	x2, x3, [sp, #64]
  4144a8:	stp	x2, x3, [sp, #32]
  4144ac:	str	q0, [sp, #80]
  4144b0:	str	q1, [sp, #96]
  4144b4:	str	q2, [sp, #112]
  4144b8:	str	q3, [sp, #128]
  4144bc:	str	q4, [sp, #144]
  4144c0:	str	q5, [sp, #160]
  4144c4:	str	q6, [sp, #176]
  4144c8:	str	q7, [sp, #192]
  4144cc:	stp	x5, x6, [sp, #248]
  4144d0:	str	x7, [sp, #264]
  4144d4:	bl	4143c0 <ferror@plt+0x11920>
  4144d8:	ldp	x29, x30, [sp], #272
  4144dc:	ret
  4144e0:	stp	x29, x30, [sp, #-32]!
  4144e4:	mov	x29, sp
  4144e8:	stp	x19, x20, [sp, #16]
  4144ec:	mov	x19, x0
  4144f0:	bl	402590 <fileno@plt>
  4144f4:	tbz	w0, #31, 414508 <ferror@plt+0x11a68>
  4144f8:	mov	x0, x19
  4144fc:	ldp	x19, x20, [sp, #16]
  414500:	ldp	x29, x30, [sp], #32
  414504:	b	4025c0 <fclose@plt>
  414508:	mov	x0, x19
  41450c:	bl	4029d0 <__freading@plt>
  414510:	cbnz	w0, 414548 <ferror@plt+0x11aa8>
  414514:	mov	x0, x19
  414518:	bl	4146ac <ferror@plt+0x11c0c>
  41451c:	cbnz	w0, 414568 <ferror@plt+0x11ac8>
  414520:	mov	w20, #0x0                   	// #0
  414524:	mov	x0, x19
  414528:	bl	4025c0 <fclose@plt>
  41452c:	cbz	w20, 41453c <ferror@plt+0x11a9c>
  414530:	bl	402a30 <__errno_location@plt>
  414534:	str	w20, [x0]
  414538:	mov	w0, #0xffffffff            	// #-1
  41453c:	ldp	x19, x20, [sp, #16]
  414540:	ldp	x29, x30, [sp], #32
  414544:	ret
  414548:	mov	x0, x19
  41454c:	bl	402590 <fileno@plt>
  414550:	mov	w2, #0x1                   	// #1
  414554:	mov	x1, #0x0                   	// #0
  414558:	bl	402570 <lseek@plt>
  41455c:	cmn	x0, #0x1
  414560:	b.ne	414514 <ferror@plt+0x11a74>  // b.any
  414564:	b	414520 <ferror@plt+0x11a80>
  414568:	bl	402a30 <__errno_location@plt>
  41456c:	ldr	w20, [x0]
  414570:	b	414524 <ferror@plt+0x11a84>
  414574:	stp	x29, x30, [sp, #-112]!
  414578:	cmp	w1, #0x406
  41457c:	mov	x29, sp
  414580:	stp	x2, x3, [sp, #96]
  414584:	add	x3, sp, #0x70
  414588:	stp	x3, x3, [sp, #64]
  41458c:	add	x3, sp, #0x60
  414590:	stp	x19, x20, [sp, #16]
  414594:	stp	x21, x22, [sp, #32]
  414598:	str	x23, [sp, #48]
  41459c:	str	x3, [sp, #80]
  4145a0:	mov	w3, #0xfffffff0            	// #-16
  4145a4:	str	w3, [sp, #88]
  4145a8:	str	wzr, [sp, #92]
  4145ac:	b.ne	4146a0 <ferror@plt+0x11c00>  // b.any
  4145b0:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0xaba8>
  4145b4:	mov	w2, #0xfffffff8            	// #-8
  4145b8:	str	w2, [sp, #88]
  4145bc:	mov	x23, x20
  4145c0:	ldr	w2, [x20, #3400]
  4145c4:	ldr	w21, [sp, #96]
  4145c8:	tbnz	w2, #31, 414660 <ferror@plt+0x11bc0>
  4145cc:	mov	w22, w0
  4145d0:	mov	w2, w21
  4145d4:	bl	402940 <fcntl@plt>
  4145d8:	mov	w19, w0
  4145dc:	tbz	w0, #31, 4145f0 <ferror@plt+0x11b50>
  4145e0:	bl	402a30 <__errno_location@plt>
  4145e4:	ldr	w0, [x0]
  4145e8:	cmp	w0, #0x16
  4145ec:	b.eq	414610 <ferror@plt+0x11b70>  // b.none
  4145f0:	mov	w0, #0x1                   	// #1
  4145f4:	str	w0, [x23, #3400]
  4145f8:	mov	w0, w19
  4145fc:	ldp	x19, x20, [sp, #16]
  414600:	ldp	x21, x22, [sp, #32]
  414604:	ldr	x23, [sp, #48]
  414608:	ldp	x29, x30, [sp], #112
  41460c:	ret
  414610:	mov	w2, w21
  414614:	mov	w0, w22
  414618:	mov	w1, #0x0                   	// #0
  41461c:	bl	414574 <ferror@plt+0x11ad4>
  414620:	mov	w19, w0
  414624:	tbnz	w0, #31, 4145f8 <ferror@plt+0x11b58>
  414628:	mov	w0, #0xffffffff            	// #-1
  41462c:	str	w0, [x20, #3400]
  414630:	mov	w0, w19
  414634:	mov	w1, #0x1                   	// #1
  414638:	bl	402940 <fcntl@plt>
  41463c:	tbz	w0, #31, 414684 <ferror@plt+0x11be4>
  414640:	bl	402a30 <__errno_location@plt>
  414644:	mov	x20, x0
  414648:	mov	w0, w19
  41464c:	mov	w19, #0xffffffff            	// #-1
  414650:	ldr	w21, [x20]
  414654:	bl	402760 <close@plt>
  414658:	str	w21, [x20]
  41465c:	b	4145f8 <ferror@plt+0x11b58>
  414660:	mov	w2, w21
  414664:	mov	w1, #0x0                   	// #0
  414668:	bl	414574 <ferror@plt+0x11ad4>
  41466c:	mov	w19, w0
  414670:	tbnz	w0, #31, 4145f8 <ferror@plt+0x11b58>
  414674:	ldr	w0, [x20, #3400]
  414678:	cmn	w0, #0x1
  41467c:	b.ne	4145f8 <ferror@plt+0x11b58>  // b.any
  414680:	b	414630 <ferror@plt+0x11b90>
  414684:	orr	w2, w0, #0x1
  414688:	mov	w1, #0x2                   	// #2
  41468c:	mov	w0, w19
  414690:	bl	402940 <fcntl@plt>
  414694:	cmn	w0, #0x1
  414698:	b.ne	4145f8 <ferror@plt+0x11b58>  // b.any
  41469c:	b	414640 <ferror@plt+0x11ba0>
  4146a0:	bl	402940 <fcntl@plt>
  4146a4:	mov	w19, w0
  4146a8:	b	4145f8 <ferror@plt+0x11b58>
  4146ac:	stp	x29, x30, [sp, #-32]!
  4146b0:	mov	x29, sp
  4146b4:	str	x19, [sp, #16]
  4146b8:	mov	x19, x0
  4146bc:	cbnz	x0, 4146d0 <ferror@plt+0x11c30>
  4146c0:	mov	x0, x19
  4146c4:	ldr	x19, [sp, #16]
  4146c8:	ldp	x29, x30, [sp], #32
  4146cc:	b	402950 <fflush@plt>
  4146d0:	bl	4029d0 <__freading@plt>
  4146d4:	cbz	w0, 4146c0 <ferror@plt+0x11c20>
  4146d8:	ldr	w0, [x19]
  4146dc:	tbz	w0, #8, 4146c0 <ferror@plt+0x11c20>
  4146e0:	mov	x0, x19
  4146e4:	mov	w2, #0x1                   	// #1
  4146e8:	mov	x1, #0x0                   	// #0
  4146ec:	bl	414734 <ferror@plt+0x11c94>
  4146f0:	b	4146c0 <ferror@plt+0x11c20>
  4146f4:	ldp	x1, x2, [x0, #32]
  4146f8:	cmp	x2, x1
  4146fc:	b.hi	41472c <ferror@plt+0x11c8c>  // b.pmore
  414700:	ldp	x2, x1, [x0, #8]
  414704:	sub	x1, x1, x2
  414708:	ldr	w2, [x0]
  41470c:	tbz	w2, #8, 414724 <ferror@plt+0x11c84>
  414710:	ldr	x2, [x0, #88]
  414714:	ldr	x0, [x0, #72]
  414718:	sub	x0, x2, x0
  41471c:	add	x0, x1, x0
  414720:	ret
  414724:	mov	x0, #0x0                   	// #0
  414728:	b	41471c <ferror@plt+0x11c7c>
  41472c:	mov	x0, #0x0                   	// #0
  414730:	b	414720 <ferror@plt+0x11c80>
  414734:	stp	x29, x30, [sp, #-48]!
  414738:	mov	x29, sp
  41473c:	stp	x19, x20, [sp, #16]
  414740:	mov	x20, x1
  414744:	mov	x19, x0
  414748:	ldr	x1, [x0, #8]
  41474c:	str	x21, [sp, #32]
  414750:	mov	w21, w2
  414754:	ldr	x2, [x0, #16]
  414758:	cmp	x2, x1
  41475c:	b.ne	4147b0 <ferror@plt+0x11d10>  // b.any
  414760:	ldp	x1, x2, [x0, #32]
  414764:	cmp	x2, x1
  414768:	b.ne	4147b0 <ferror@plt+0x11d10>  // b.any
  41476c:	ldr	x1, [x0, #72]
  414770:	cbnz	x1, 4147b0 <ferror@plt+0x11d10>
  414774:	bl	402590 <fileno@plt>
  414778:	mov	w2, w21
  41477c:	mov	x1, x20
  414780:	bl	402570 <lseek@plt>
  414784:	cmn	x0, #0x1
  414788:	b.eq	4147a0 <ferror@plt+0x11d00>  // b.none
  41478c:	ldr	w1, [x19]
  414790:	str	x0, [x19, #144]
  414794:	mov	w0, #0x0                   	// #0
  414798:	and	w1, w1, #0xffffffef
  41479c:	str	w1, [x19]
  4147a0:	ldp	x19, x20, [sp, #16]
  4147a4:	ldr	x21, [sp, #32]
  4147a8:	ldp	x29, x30, [sp], #48
  4147ac:	ret
  4147b0:	mov	w2, w21
  4147b4:	mov	x1, x20
  4147b8:	mov	x0, x19
  4147bc:	ldp	x19, x20, [sp, #16]
  4147c0:	ldr	x21, [sp, #32]
  4147c4:	ldp	x29, x30, [sp], #48
  4147c8:	b	4028a0 <fseeko@plt>
  4147cc:	stp	x29, x30, [sp, #-64]!
  4147d0:	mov	x29, sp
  4147d4:	stp	x19, x20, [sp, #16]
  4147d8:	stp	x21, x22, [sp, #32]
  4147dc:	mov	x21, x1
  4147e0:	mov	x22, x2
  4147e4:	cbnz	x0, 41483c <ferror@plt+0x11d9c>
  4147e8:	add	x19, sp, #0x3c
  4147ec:	mov	x2, x22
  4147f0:	mov	x1, x21
  4147f4:	mov	x0, x19
  4147f8:	bl	402410 <mbrtowc@plt>
  4147fc:	cmp	x22, #0x0
  414800:	mov	x20, x0
  414804:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  414808:	b.ls	414828 <ferror@plt+0x11d88>  // b.plast
  41480c:	mov	w0, #0x0                   	// #0
  414810:	bl	414bf8 <_obstack_memory_used@@Base+0xb4>
  414814:	tst	w0, #0xff
  414818:	b.ne	414828 <ferror@plt+0x11d88>  // b.any
  41481c:	ldrb	w0, [x21]
  414820:	mov	x20, #0x1                   	// #1
  414824:	str	w0, [x19]
  414828:	mov	x0, x20
  41482c:	ldp	x19, x20, [sp, #16]
  414830:	ldp	x21, x22, [sp, #32]
  414834:	ldp	x29, x30, [sp], #64
  414838:	ret
  41483c:	mov	x19, x0
  414840:	b	4147ec <ferror@plt+0x11d4c>
  414844:	stp	x29, x30, [sp, #-16]!
  414848:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  41484c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x34bc>
  414850:	mov	x29, sp
  414854:	ldr	x0, [x0, #1064]
  414858:	add	x3, x3, #0x705
  41485c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x34bc>
  414860:	mov	w1, #0x1                   	// #1
  414864:	add	x2, x2, #0x3bc
  414868:	bl	402850 <__fprintf_chk@plt>
  41486c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  414870:	ldr	w0, [x0, #884]
  414874:	bl	402480 <exit@plt>
  414878:	mov	x2, x0
  41487c:	mov	x0, x1
  414880:	ldrb	w4, [x2, #80]
  414884:	ldr	x3, [x2, #56]
  414888:	tbz	w4, #0, 414898 <ferror@plt+0x11df8>
  41488c:	ldr	x0, [x2, #72]
  414890:	mov	x16, x3
  414894:	br	x16
  414898:	mov	x16, x3
  41489c:	br	x16
  4148a0:	mov	x2, x0
  4148a4:	mov	x0, x1
  4148a8:	ldrb	w4, [x2, #80]
  4148ac:	ldr	x3, [x2, #64]
  4148b0:	tbz	w4, #0, 4148c0 <ferror@plt+0x11e20>
  4148b4:	ldr	x0, [x2, #72]
  4148b8:	mov	x16, x3
  4148bc:	br	x16
  4148c0:	mov	x16, x3
  4148c4:	br	x16
  4148c8:	stp	x29, x30, [sp, #-48]!
  4148cc:	cmp	x2, #0x0
  4148d0:	mov	x29, sp
  4148d4:	stp	x19, x20, [sp, #16]
  4148d8:	mov	x20, x2
  4148dc:	mov	x19, x0
  4148e0:	mov	x2, #0x10                  	// #16
  4148e4:	csel	x20, x20, x2, ne  // ne = any
  4148e8:	cmp	x1, #0x0
  4148ec:	str	x21, [sp, #32]
  4148f0:	mov	x2, #0xfe0                 	// #4064
  4148f4:	sub	x21, x20, #0x1
  4148f8:	csel	x1, x1, x2, ne  // ne = any
  4148fc:	str	x1, [x0]
  414900:	str	x21, [x0, #48]
  414904:	bl	414878 <ferror@plt+0x11dd8>
  414908:	str	x0, [x19, #8]
  41490c:	cbnz	x0, 41491c <ferror@plt+0x11e7c>
  414910:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  414914:	ldr	x0, [x0, #1040]
  414918:	blr	x0
  41491c:	add	x2, x0, #0x10
  414920:	neg	x20, x20
  414924:	ldr	x1, [x19]
  414928:	add	x2, x2, x21
  41492c:	and	x20, x2, x20
  414930:	ldr	x21, [sp, #32]
  414934:	stp	x20, x20, [x19, #16]
  414938:	add	x1, x0, x1
  41493c:	str	x1, [x0]
  414940:	str	x1, [x19, #32]
  414944:	str	xzr, [x0, #8]
  414948:	ldrb	w0, [x19, #80]
  41494c:	and	w0, w0, #0xfffffff9
  414950:	strb	w0, [x19, #80]
  414954:	mov	w0, #0x1                   	// #1
  414958:	ldp	x19, x20, [sp, #16]
  41495c:	ldp	x29, x30, [sp], #48
  414960:	ret

0000000000414964 <_obstack_begin@@Base>:
  414964:	stp	x3, x4, [x0, #56]
  414968:	ldrb	w3, [x0, #80]
  41496c:	and	w3, w3, #0xfffffffe
  414970:	strb	w3, [x0, #80]
  414974:	b	4148c8 <ferror@plt+0x11e28>

0000000000414978 <_obstack_begin_1@@Base>:
  414978:	stp	x3, x4, [x0, #56]
  41497c:	ldrb	w3, [x0, #80]
  414980:	str	x5, [x0, #72]
  414984:	orr	w3, w3, #0x1
  414988:	strb	w3, [x0, #80]
  41498c:	b	4148c8 <ferror@plt+0x11e28>

0000000000414990 <_obstack_newchunk@@Base>:
  414990:	stp	x29, x30, [sp, #-64]!
  414994:	mov	x29, sp
  414998:	stp	x19, x20, [sp, #16]
  41499c:	ldp	x2, x20, [x0, #16]
  4149a0:	stp	x21, x22, [sp, #32]
  4149a4:	sub	x21, x20, x2
  4149a8:	ldr	x20, [x0, #48]
  4149ac:	adds	x1, x21, x1
  4149b0:	cset	x4, cs  // cs = hs, nlast
  4149b4:	adds	x1, x20, x1
  4149b8:	lsr	x20, x21, #3
  4149bc:	add	x20, x20, #0x64
  4149c0:	cset	x3, cs  // cs = hs, nlast
  4149c4:	add	x2, x20, x1
  4149c8:	ldr	x20, [x0]
  4149cc:	str	x23, [sp, #48]
  4149d0:	ldr	x23, [x0, #8]
  4149d4:	cmp	x20, x1
  4149d8:	csel	x20, x20, x1, cs  // cs = hs, nlast
  4149dc:	cmp	x20, x2
  4149e0:	csel	x20, x20, x2, cs  // cs = hs, nlast
  4149e4:	cmp	x4, #0x0
  4149e8:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  4149ec:	b.eq	4149fc <_obstack_newchunk@@Base+0x6c>  // b.none
  4149f0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x194bc>
  4149f4:	ldr	x0, [x0, #1040]
  4149f8:	blr	x0
  4149fc:	mov	x19, x0
  414a00:	mov	x1, x20
  414a04:	bl	414878 <ferror@plt+0x11dd8>
  414a08:	mov	x22, x0
  414a0c:	cbz	x0, 4149f0 <_obstack_newchunk@@Base+0x60>
  414a10:	mov	x2, x0
  414a14:	str	x0, [x19, #8]
  414a18:	ldr	x1, [x19, #16]
  414a1c:	str	x23, [x0, #8]
  414a20:	add	x20, x0, x20
  414a24:	str	x20, [x19, #32]
  414a28:	str	x20, [x2], #16
  414a2c:	ldr	x20, [x19, #48]
  414a30:	add	x2, x2, x20
  414a34:	bic	x20, x2, x20
  414a38:	mov	x2, x21
  414a3c:	mov	x0, x20
  414a40:	bl	402420 <memcpy@plt>
  414a44:	ldrb	w0, [x19, #80]
  414a48:	tbnz	w0, #1, 414a7c <_obstack_newchunk@@Base+0xec>
  414a4c:	ldr	x0, [x19, #48]
  414a50:	add	x1, x23, #0x10
  414a54:	add	x1, x1, x0
  414a58:	bic	x0, x1, x0
  414a5c:	ldr	x1, [x19, #16]
  414a60:	cmp	x1, x0
  414a64:	b.ne	414a7c <_obstack_newchunk@@Base+0xec>  // b.any
  414a68:	ldr	x0, [x23, #8]
  414a6c:	str	x0, [x22, #8]
  414a70:	mov	x1, x23
  414a74:	mov	x0, x19
  414a78:	bl	4148a0 <ferror@plt+0x11e00>
  414a7c:	ldrb	w0, [x19, #80]
  414a80:	ldr	x23, [sp, #48]
  414a84:	and	w0, w0, #0xfffffffd
  414a88:	str	x20, [x19, #16]
  414a8c:	add	x20, x20, x21
  414a90:	strb	w0, [x19, #80]
  414a94:	ldp	x21, x22, [sp, #32]
  414a98:	str	x20, [x19, #24]
  414a9c:	ldp	x19, x20, [sp, #16]
  414aa0:	ldp	x29, x30, [sp], #64
  414aa4:	ret

0000000000414aa8 <_obstack_allocated_p@@Base>:
  414aa8:	ldr	x0, [x0, #8]
  414aac:	cbz	x0, 414ac4 <_obstack_allocated_p@@Base+0x1c>
  414ab0:	cmp	x0, x1
  414ab4:	b.cs	414aa8 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  414ab8:	ldr	x2, [x0]
  414abc:	cmp	x2, x1
  414ac0:	b.cc	414aa8 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  414ac4:	cmp	x0, #0x0
  414ac8:	cset	w0, ne  // ne = any
  414acc:	ret

0000000000414ad0 <_obstack_free@@Base>:
  414ad0:	stp	x29, x30, [sp, #-48]!
  414ad4:	mov	x29, sp
  414ad8:	stp	x19, x20, [sp, #16]
  414adc:	mov	x19, x0
  414ae0:	mov	x20, x1
  414ae4:	ldr	x1, [x0, #8]
  414ae8:	str	x21, [sp, #32]
  414aec:	cbz	x1, 414b3c <_obstack_free@@Base+0x6c>
  414af0:	cmp	x1, x20
  414af4:	b.cs	414b1c <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  414af8:	ldr	x0, [x1]
  414afc:	cmp	x0, x20
  414b00:	b.cc	414b1c <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  414b04:	stp	x1, x20, [x19, #8]
  414b08:	stp	x20, x0, [x19, #24]
  414b0c:	ldp	x19, x20, [sp, #16]
  414b10:	ldr	x21, [sp, #32]
  414b14:	ldp	x29, x30, [sp], #48
  414b18:	ret
  414b1c:	mov	x0, x19
  414b20:	ldr	x21, [x1, #8]
  414b24:	bl	4148a0 <ferror@plt+0x11e00>
  414b28:	ldrb	w0, [x19, #80]
  414b2c:	mov	x1, x21
  414b30:	orr	w0, w0, #0x2
  414b34:	strb	w0, [x19, #80]
  414b38:	b	414aec <_obstack_free@@Base+0x1c>
  414b3c:	cbz	x20, 414b0c <_obstack_free@@Base+0x3c>
  414b40:	bl	4027d0 <abort@plt>

0000000000414b44 <_obstack_memory_used@@Base>:
  414b44:	ldr	x1, [x0, #8]
  414b48:	mov	x0, #0x0                   	// #0
  414b4c:	cbnz	x1, 414b54 <_obstack_memory_used@@Base+0x10>
  414b50:	ret
  414b54:	ldr	x2, [x1]
  414b58:	sub	x2, x2, x1
  414b5c:	add	x0, x0, x2
  414b60:	ldr	x1, [x1, #8]
  414b64:	b	414b4c <_obstack_memory_used@@Base+0x8>
  414b68:	ldrb	w1, [x0]
  414b6c:	cmp	w1, #0x2f
  414b70:	b.eq	414b88 <_obstack_memory_used@@Base+0x44>  // b.none
  414b74:	mov	x1, x0
  414b78:	mov	w2, #0x0                   	// #0
  414b7c:	ldrb	w3, [x1]
  414b80:	cbnz	w3, 414b90 <_obstack_memory_used@@Base+0x4c>
  414b84:	ret
  414b88:	add	x0, x0, #0x1
  414b8c:	b	414b68 <_obstack_memory_used@@Base+0x24>
  414b90:	cmp	w3, #0x2f
  414b94:	b.eq	414ba4 <_obstack_memory_used@@Base+0x60>  // b.none
  414b98:	cbnz	w2, 414bac <_obstack_memory_used@@Base+0x68>
  414b9c:	add	x1, x1, #0x1
  414ba0:	b	414b7c <_obstack_memory_used@@Base+0x38>
  414ba4:	mov	w2, #0x1                   	// #1
  414ba8:	b	414b9c <_obstack_memory_used@@Base+0x58>
  414bac:	mov	x0, x1
  414bb0:	mov	w2, #0x0                   	// #0
  414bb4:	b	414b9c <_obstack_memory_used@@Base+0x58>
  414bb8:	stp	x29, x30, [sp, #-32]!
  414bbc:	mov	x29, sp
  414bc0:	str	x19, [sp, #16]
  414bc4:	mov	x19, x0
  414bc8:	bl	402450 <strlen@plt>
  414bcc:	cmp	x0, #0x1
  414bd0:	b.ls	414be4 <_obstack_memory_used@@Base+0xa0>  // b.plast
  414bd4:	sub	x1, x0, #0x1
  414bd8:	ldrb	w2, [x19, x1]
  414bdc:	cmp	w2, #0x2f
  414be0:	b.eq	414bf0 <_obstack_memory_used@@Base+0xac>  // b.none
  414be4:	ldr	x19, [sp, #16]
  414be8:	ldp	x29, x30, [sp], #32
  414bec:	ret
  414bf0:	mov	x0, x1
  414bf4:	b	414bcc <_obstack_memory_used@@Base+0x88>
  414bf8:	stp	x29, x30, [sp, #-32]!
  414bfc:	mov	x1, #0x0                   	// #0
  414c00:	mov	x29, sp
  414c04:	str	x19, [sp, #16]
  414c08:	bl	402a90 <setlocale@plt>
  414c0c:	cbz	x0, 414c48 <_obstack_memory_used@@Base+0x104>
  414c10:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  414c14:	mov	x19, x0
  414c18:	add	x1, x1, #0x736
  414c1c:	bl	402860 <strcmp@plt>
  414c20:	cbz	w0, 414c50 <_obstack_memory_used@@Base+0x10c>
  414c24:	mov	x0, x19
  414c28:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x34bc>
  414c2c:	add	x1, x1, #0x738
  414c30:	bl	402860 <strcmp@plt>
  414c34:	cmp	w0, #0x0
  414c38:	cset	w0, ne  // ne = any
  414c3c:	ldr	x19, [sp, #16]
  414c40:	ldp	x29, x30, [sp], #32
  414c44:	ret
  414c48:	mov	w0, #0x1                   	// #1
  414c4c:	b	414c3c <_obstack_memory_used@@Base+0xf8>
  414c50:	mov	w0, #0x0                   	// #0
  414c54:	b	414c3c <_obstack_memory_used@@Base+0xf8>
  414c58:	stp	x29, x30, [sp, #-208]!
  414c5c:	mov	w0, #0xe                   	// #14
  414c60:	mov	x29, sp
  414c64:	stp	x19, x20, [sp, #16]
  414c68:	stp	x21, x22, [sp, #32]
  414c6c:	stp	x23, x24, [sp, #48]
  414c70:	stp	x25, x26, [sp, #64]
  414c74:	stp	x27, x28, [sp, #80]
  414c78:	bl	4025e0 <nl_langinfo@plt>
  414c7c:	cbnz	x0, 414db0 <_obstack_memory_used@@Base+0x26c>
  414c80:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x14bc>
  414c84:	add	x20, x20, #0x3df
  414c88:	adrp	x24, 439000 <__progname@@GLIBC_2.17+0xaba8>
  414c8c:	ldr	x19, [x24, #3408]
  414c90:	cbnz	x19, 414d48 <_obstack_memory_used@@Base+0x204>
  414c94:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  414c98:	add	x0, x0, #0x74d
  414c9c:	bl	402a40 <getenv@plt>
  414ca0:	mov	x21, x0
  414ca4:	cbz	x0, 414cb0 <_obstack_memory_used@@Base+0x16c>
  414ca8:	ldrb	w0, [x0]
  414cac:	cbnz	w0, 414cb8 <_obstack_memory_used@@Base+0x174>
  414cb0:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x34bc>
  414cb4:	add	x21, x21, #0x73e
  414cb8:	mov	x0, x21
  414cbc:	bl	402450 <strlen@plt>
  414cc0:	mov	x23, x0
  414cc4:	cbz	x0, 414db8 <_obstack_memory_used@@Base+0x274>
  414cc8:	add	x0, x21, x0
  414ccc:	ldurb	w0, [x0, #-1]
  414cd0:	cmp	w0, #0x2f
  414cd4:	cset	w26, ne  // ne = any
  414cd8:	add	x25, x23, w26, sxtw
  414cdc:	add	x0, x25, #0xe
  414ce0:	bl	402600 <malloc@plt>
  414ce4:	mov	x22, x0
  414ce8:	cbz	x0, 414f04 <_obstack_memory_used@@Base+0x3c0>
  414cec:	mov	x2, x23
  414cf0:	mov	x1, x21
  414cf4:	bl	402420 <memcpy@plt>
  414cf8:	cbz	w26, 414d04 <_obstack_memory_used@@Base+0x1c0>
  414cfc:	mov	w0, #0x2f                  	// #47
  414d00:	strb	w0, [x22, x23]
  414d04:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x34bc>
  414d08:	add	x0, x0, #0x75d
  414d0c:	add	x1, x22, x25
  414d10:	ldr	x2, [x0]
  414d14:	str	x2, [x22, x25]
  414d18:	ldur	x0, [x0, #6]
  414d1c:	stur	x0, [x1, #6]
  414d20:	mov	x0, x22
  414d24:	mov	w1, #0x8000                	// #32768
  414d28:	bl	402610 <open@plt>
  414d2c:	mov	w21, w0
  414d30:	tbz	w0, #31, 414dc0 <_obstack_memory_used@@Base+0x27c>
  414d34:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  414d38:	add	x19, x19, #0x3df
  414d3c:	mov	x0, x22
  414d40:	bl	4028c0 <free@plt>
  414d44:	str	x19, [x24, #3408]
  414d48:	ldrb	w21, [x19]
  414d4c:	cbz	w21, 414d80 <_obstack_memory_used@@Base+0x23c>
  414d50:	mov	x1, x19
  414d54:	mov	x0, x20
  414d58:	bl	402860 <strcmp@plt>
  414d5c:	cbz	w0, 414d70 <_obstack_memory_used@@Base+0x22c>
  414d60:	cmp	w21, #0x2a
  414d64:	b.ne	414f10 <_obstack_memory_used@@Base+0x3cc>  // b.any
  414d68:	ldrb	w0, [x19, #1]
  414d6c:	cbnz	w0, 414f10 <_obstack_memory_used@@Base+0x3cc>
  414d70:	mov	x0, x19
  414d74:	bl	402450 <strlen@plt>
  414d78:	add	x20, x0, #0x1
  414d7c:	add	x20, x19, x20
  414d80:	ldrb	w0, [x20]
  414d84:	cbnz	w0, 414d90 <_obstack_memory_used@@Base+0x24c>
  414d88:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x34bc>
  414d8c:	add	x20, x20, #0x747
  414d90:	mov	x0, x20
  414d94:	ldp	x19, x20, [sp, #16]
  414d98:	ldp	x21, x22, [sp, #32]
  414d9c:	ldp	x23, x24, [sp, #48]
  414da0:	ldp	x25, x26, [sp, #64]
  414da4:	ldp	x27, x28, [sp, #80]
  414da8:	ldp	x29, x30, [sp], #208
  414dac:	ret
  414db0:	mov	x20, x0
  414db4:	b	414c88 <_obstack_memory_used@@Base+0x144>
  414db8:	mov	w26, #0x0                   	// #0
  414dbc:	b	414cd8 <_obstack_memory_used@@Base+0x194>
  414dc0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x14bc>
  414dc4:	add	x1, x1, #0xd0c
  414dc8:	bl	4026b0 <fdopen@plt>
  414dcc:	mov	x25, x0
  414dd0:	cbnz	x0, 414de0 <_obstack_memory_used@@Base+0x29c>
  414dd4:	mov	w0, w21
  414dd8:	bl	402760 <close@plt>
  414ddc:	b	414d34 <_obstack_memory_used@@Base+0x1f0>
  414de0:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x34bc>
  414de4:	mov	x23, #0x0                   	// #0
  414de8:	add	x27, x27, #0x76b
  414dec:	b	414eb4 <_obstack_memory_used@@Base+0x370>
  414df0:	mov	x1, x25
  414df4:	bl	4028d0 <ungetc@plt>
  414df8:	add	x3, sp, #0x98
  414dfc:	add	x2, sp, #0x60
  414e00:	mov	x1, x27
  414e04:	mov	x0, x25
  414e08:	bl	402630 <__isoc99_fscanf@plt>
  414e0c:	cmp	w0, #0x1
  414e10:	b.le	414e58 <_obstack_memory_used@@Base+0x314>
  414e14:	add	x0, sp, #0x60
  414e18:	bl	402450 <strlen@plt>
  414e1c:	mov	x26, x0
  414e20:	add	x0, sp, #0x98
  414e24:	bl	402450 <strlen@plt>
  414e28:	mov	x21, x0
  414e2c:	add	x0, x26, x0
  414e30:	cbnz	x23, 414e6c <_obstack_memory_used@@Base+0x328>
  414e34:	add	x23, x0, #0x2
  414e38:	add	x0, x0, #0x3
  414e3c:	bl	402600 <malloc@plt>
  414e40:	mov	x28, x0
  414e44:	cbnz	x0, 414e84 <_obstack_memory_used@@Base+0x340>
  414e48:	mov	x0, x19
  414e4c:	mov	x23, #0x0                   	// #0
  414e50:	mov	x19, #0x0                   	// #0
  414e54:	bl	4028c0 <free@plt>
  414e58:	mov	x0, x25
  414e5c:	bl	4144e0 <ferror@plt+0x11a40>
  414e60:	cbz	x23, 414d34 <_obstack_memory_used@@Base+0x1f0>
  414e64:	strb	wzr, [x19, x23]
  414e68:	b	414d3c <_obstack_memory_used@@Base+0x1f8>
  414e6c:	add	x0, x0, x23
  414e70:	add	x23, x0, #0x2
  414e74:	add	x1, x0, #0x3
  414e78:	mov	x0, x19
  414e7c:	bl	402710 <realloc@plt>
  414e80:	b	414e40 <_obstack_memory_used@@Base+0x2fc>
  414e84:	sub	x21, x23, x21
  414e88:	mov	x0, #0xfffffffffffffffe    	// #-2
  414e8c:	sub	x0, x0, x26
  414e90:	add	x1, sp, #0x60
  414e94:	add	x0, x0, x21
  414e98:	sub	x21, x21, #0x1
  414e9c:	add	x0, x28, x0
  414ea0:	bl	402960 <strcpy@plt>
  414ea4:	add	x1, sp, #0x98
  414ea8:	add	x0, x28, x21
  414eac:	bl	402960 <strcpy@plt>
  414eb0:	mov	x19, x28
  414eb4:	mov	x0, x25
  414eb8:	bl	402750 <getc_unlocked@plt>
  414ebc:	cmn	w0, #0x1
  414ec0:	b.eq	414e58 <_obstack_memory_used@@Base+0x314>  // b.none
  414ec4:	cmp	w0, #0x20
  414ec8:	b.eq	414efc <_obstack_memory_used@@Base+0x3b8>  // b.none
  414ecc:	sub	w2, w0, #0x9
  414ed0:	cmp	w2, #0x1
  414ed4:	b.ls	414efc <_obstack_memory_used@@Base+0x3b8>  // b.plast
  414ed8:	cmp	w0, #0x23
  414edc:	b.ne	414df0 <_obstack_memory_used@@Base+0x2ac>  // b.any
  414ee0:	mov	x0, x25
  414ee4:	bl	402750 <getc_unlocked@plt>
  414ee8:	cmp	w0, #0xa
  414eec:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  414ef0:	b.ne	414ee0 <_obstack_memory_used@@Base+0x39c>  // b.any
  414ef4:	cmn	w0, #0x1
  414ef8:	b.eq	414e58 <_obstack_memory_used@@Base+0x314>  // b.none
  414efc:	mov	x28, x19
  414f00:	b	414eb0 <_obstack_memory_used@@Base+0x36c>
  414f04:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x14bc>
  414f08:	add	x19, x19, #0x3df
  414f0c:	b	414d44 <_obstack_memory_used@@Base+0x200>
  414f10:	mov	x0, x19
  414f14:	bl	402450 <strlen@plt>
  414f18:	add	x0, x0, #0x1
  414f1c:	add	x19, x19, x0
  414f20:	mov	x0, x19
  414f24:	bl	402450 <strlen@plt>
  414f28:	add	x0, x0, #0x1
  414f2c:	add	x19, x19, x0
  414f30:	b	414d48 <_obstack_memory_used@@Base+0x204>
  414f34:	nop
  414f38:	stp	x29, x30, [sp, #-64]!
  414f3c:	mov	x29, sp
  414f40:	stp	x19, x20, [sp, #16]
  414f44:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x184bc>
  414f48:	add	x20, x20, #0xdf0
  414f4c:	stp	x21, x22, [sp, #32]
  414f50:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x184bc>
  414f54:	add	x21, x21, #0xde8
  414f58:	sub	x20, x20, x21
  414f5c:	mov	w22, w0
  414f60:	stp	x23, x24, [sp, #48]
  414f64:	mov	x23, x1
  414f68:	mov	x24, x2
  414f6c:	bl	4023d0 <mbrtowc@plt-0x40>
  414f70:	cmp	xzr, x20, asr #3
  414f74:	b.eq	414fa0 <_obstack_memory_used@@Base+0x45c>  // b.none
  414f78:	asr	x20, x20, #3
  414f7c:	mov	x19, #0x0                   	// #0
  414f80:	ldr	x3, [x21, x19, lsl #3]
  414f84:	mov	x2, x24
  414f88:	add	x19, x19, #0x1
  414f8c:	mov	x1, x23
  414f90:	mov	w0, w22
  414f94:	blr	x3
  414f98:	cmp	x20, x19
  414f9c:	b.ne	414f80 <_obstack_memory_used@@Base+0x43c>  // b.any
  414fa0:	ldp	x19, x20, [sp, #16]
  414fa4:	ldp	x21, x22, [sp, #32]
  414fa8:	ldp	x23, x24, [sp, #48]
  414fac:	ldp	x29, x30, [sp], #64
  414fb0:	ret
  414fb4:	nop
  414fb8:	ret
  414fbc:	nop
  414fc0:	adrp	x2, 42e000 <_obstack_memory_used@@Base+0x194bc>
  414fc4:	mov	x1, #0x0                   	// #0
  414fc8:	ldr	x2, [x2, #856]
  414fcc:	b	402520 <__cxa_atexit@plt>
  414fd0:	mov	x2, x1
  414fd4:	mov	x1, x0
  414fd8:	mov	w0, #0x0                   	// #0
  414fdc:	b	402a50 <__xstat@plt>
  414fe0:	mov	x2, x1
  414fe4:	mov	w1, w0
  414fe8:	mov	w0, #0x0                   	// #0
  414fec:	b	4029a0 <__fxstat@plt>

Disassembly of section .fini:

0000000000414ff0 <.fini>:
  414ff0:	stp	x29, x30, [sp, #-16]!
  414ff4:	mov	x29, sp
  414ff8:	ldp	x29, x30, [sp], #16
  414ffc:	ret
