
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000005268 <.init>:
    5268:	stp	x29, x30, [sp, #-16]!
    526c:	mov	x29, sp
    5270:	bl	5850 <_ZNSt6localeC1Ev@plt+0x10>
    5274:	ldp	x29, x30, [sp], #16
    5278:	ret

Disassembly of section .plt:

0000000000005280 <_Znam@plt-0x20>:
    5280:	stp	x16, x30, [sp, #-16]!
    5284:	adrp	x16, 2a000 <xexit@@Base+0x14c24>
    5288:	ldr	x17, [x16, #4088]
    528c:	add	x16, x16, #0xff8
    5290:	br	x17
    5294:	nop
    5298:	nop
    529c:	nop

00000000000052a0 <_Znam@plt>:
    52a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52a4:	ldr	x17, [x16]
    52a8:	add	x16, x16, #0x0
    52ac:	br	x17

00000000000052b0 <memcpy@plt>:
    52b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52b4:	ldr	x17, [x16, #8]
    52b8:	add	x16, x16, #0x8
    52bc:	br	x17

00000000000052c0 <select@plt>:
    52c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52c4:	ldr	x17, [x16, #16]
    52c8:	add	x16, x16, #0x10
    52cc:	br	x17

00000000000052d0 <xregcomp@plt>:
    52d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52d4:	ldr	x17, [x16, #24]
    52d8:	add	x16, x16, #0x18
    52dc:	br	x17

00000000000052e0 <execvp@plt>:
    52e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52e4:	ldr	x17, [x16, #32]
    52e8:	add	x16, x16, #0x20
    52ec:	br	x17

00000000000052f0 <socketpair@plt>:
    52f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52f4:	ldr	x17, [x16, #40]
    52f8:	add	x16, x16, #0x28
    52fc:	br	x17

0000000000005300 <calloc@plt>:
    5300:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5304:	ldr	x17, [x16, #48]
    5308:	add	x16, x16, #0x30
    530c:	br	x17

0000000000005310 <pipe@plt>:
    5310:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5314:	ldr	x17, [x16, #56]
    5318:	add	x16, x16, #0x38
    531c:	br	x17

0000000000005320 <dup2@plt>:
    5320:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5324:	ldr	x17, [x16, #64]
    5328:	add	x16, x16, #0x40
    532c:	br	x17

0000000000005330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    5330:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5334:	ldr	x17, [x16, #72]
    5338:	add	x16, x16, #0x48
    533c:	br	x17

0000000000005340 <xre_compile_fastmap@plt>:
    5340:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5344:	ldr	x17, [x16, #80]
    5348:	add	x16, x16, #0x50
    534c:	br	x17

0000000000005350 <_ZNSt8ios_baseC2Ev@plt>:
    5350:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5354:	ldr	x17, [x16, #88]
    5358:	add	x16, x16, #0x58
    535c:	br	x17

0000000000005360 <strlen@plt>:
    5360:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5364:	ldr	x17, [x16, #96]
    5368:	add	x16, x16, #0x60
    536c:	br	x17

0000000000005370 <fprintf@plt>:
    5370:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5374:	ldr	x17, [x16, #104]
    5378:	add	x16, x16, #0x68
    537c:	br	x17

0000000000005380 <xregfree@plt>:
    5380:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5384:	ldr	x17, [x16, #112]
    5388:	add	x16, x16, #0x70
    538c:	br	x17

0000000000005390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
    5390:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5394:	ldr	x17, [x16, #120]
    5398:	add	x16, x16, #0x78
    539c:	br	x17

00000000000053a0 <_ZNSt8ios_baseD2Ev@plt>:
    53a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53a4:	ldr	x17, [x16, #128]
    53a8:	add	x16, x16, #0x80
    53ac:	br	x17

00000000000053b0 <waitpid@plt>:
    53b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53b4:	ldr	x17, [x16, #136]
    53b8:	add	x16, x16, #0x88
    53bc:	br	x17

00000000000053c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>:
    53c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53c4:	ldr	x17, [x16, #144]
    53c8:	add	x16, x16, #0x90
    53cc:	br	x17

00000000000053d0 <htab_create_alloc@plt>:
    53d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53d4:	ldr	x17, [x16, #152]
    53d8:	add	x16, x16, #0x98
    53dc:	br	x17

00000000000053e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>:
    53e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53e4:	ldr	x17, [x16, #160]
    53e8:	add	x16, x16, #0xa0
    53ec:	br	x17

00000000000053f0 <__cxa_begin_catch@plt>:
    53f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53f4:	ldr	x17, [x16, #168]
    53f8:	add	x16, x16, #0xa8
    53fc:	br	x17

0000000000005400 <xstrdup@plt>:
    5400:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5404:	ldr	x17, [x16, #176]
    5408:	add	x16, x16, #0xb0
    540c:	br	x17

0000000000005410 <memcmp@plt>:
    5410:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5414:	ldr	x17, [x16, #184]
    5418:	add	x16, x16, #0xb8
    541c:	br	x17

0000000000005420 <_ZSt20__throw_length_errorPKc@plt>:
    5420:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5424:	ldr	x17, [x16, #192]
    5428:	add	x16, x16, #0xc0
    542c:	br	x17

0000000000005430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    5430:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5434:	ldr	x17, [x16, #200]
    5438:	add	x16, x16, #0xc8
    543c:	br	x17

0000000000005440 <free@plt>:
    5440:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5444:	ldr	x17, [x16, #208]
    5448:	add	x16, x16, #0xd0
    544c:	br	x17

0000000000005450 <memset@plt>:
    5450:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5454:	ldr	x17, [x16, #216]
    5458:	add	x16, x16, #0xd8
    545c:	br	x17

0000000000005460 <__cxa_finalize@plt>:
    5460:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5464:	ldr	x17, [x16, #224]
    5468:	add	x16, x16, #0xe0
    546c:	br	x17

0000000000005470 <realloc@plt>:
    5470:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5474:	ldr	x17, [x16, #232]
    5478:	add	x16, x16, #0xe8
    547c:	br	x17

0000000000005480 <xregexec@plt>:
    5480:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5484:	ldr	x17, [x16, #240]
    5488:	add	x16, x16, #0xf0
    548c:	br	x17

0000000000005490 <_exit@plt>:
    5490:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5494:	ldr	x17, [x16, #248]
    5498:	add	x16, x16, #0xf8
    549c:	br	x17

00000000000054a0 <htab_find_slot_with_hash@plt>:
    54a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54a4:	ldr	x17, [x16, #256]
    54a8:	add	x16, x16, #0x100
    54ac:	br	x17

00000000000054b0 <htab_create_typed_alloc@plt>:
    54b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54b4:	ldr	x17, [x16, #264]
    54b8:	add	x16, x16, #0x108
    54bc:	br	x17

00000000000054c0 <read@plt>:
    54c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54c4:	ldr	x17, [x16, #272]
    54c8:	add	x16, x16, #0x110
    54cc:	br	x17

00000000000054d0 <_ZSt19__throw_logic_errorPKc@plt>:
    54d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54d4:	ldr	x17, [x16, #280]
    54d8:	add	x16, x16, #0x118
    54dc:	br	x17

00000000000054e0 <htab_find@plt>:
    54e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54e4:	ldr	x17, [x16, #288]
    54e8:	add	x16, x16, #0x120
    54ec:	br	x17

00000000000054f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    54f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54f4:	ldr	x17, [x16, #296]
    54f8:	add	x16, x16, #0x128
    54fc:	br	x17

0000000000005500 <closedir@plt>:
    5500:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5504:	ldr	x17, [x16, #304]
    5508:	add	x16, x16, #0x130
    550c:	br	x17

0000000000005510 <concat@plt>:
    5510:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5514:	ldr	x17, [x16, #312]
    5518:	add	x16, x16, #0x138
    551c:	br	x17

0000000000005520 <xmalloc_failed@plt>:
    5520:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5524:	ldr	x17, [x16, #320]
    5528:	add	x16, x16, #0x140
    552c:	br	x17

0000000000005530 <htab_hash_string@plt>:
    5530:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5534:	ldr	x17, [x16, #328]
    5538:	add	x16, x16, #0x148
    553c:	br	x17

0000000000005540 <_ZdlPv@plt>:
    5540:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5544:	ldr	x17, [x16, #336]
    5548:	add	x16, x16, #0x150
    554c:	br	x17

0000000000005550 <_Znwm@plt>:
    5550:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5554:	ldr	x17, [x16, #344]
    5558:	add	x16, x16, #0x158
    555c:	br	x17

0000000000005560 <_ZdlPvm@plt>:
    5560:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5564:	ldr	x17, [x16, #352]
    5568:	add	x16, x16, #0x160
    556c:	br	x17

0000000000005570 <readdir@plt>:
    5570:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5574:	ldr	x17, [x16, #360]
    5578:	add	x16, x16, #0x168
    557c:	br	x17

0000000000005580 <opendir@plt>:
    5580:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5584:	ldr	x17, [x16, #368]
    5588:	add	x16, x16, #0x170
    558c:	br	x17

0000000000005590 <__ctype_b_loc@plt>:
    5590:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5594:	ldr	x17, [x16, #376]
    5598:	add	x16, x16, #0x178
    559c:	br	x17

00000000000055a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    55a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55a4:	ldr	x17, [x16, #384]
    55a8:	add	x16, x16, #0x180
    55ac:	br	x17

00000000000055b0 <snprintf@plt>:
    55b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55b4:	ldr	x17, [x16, #392]
    55b8:	add	x16, x16, #0x188
    55bc:	br	x17

00000000000055c0 <xre_search@plt>:
    55c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55c4:	ldr	x17, [x16, #400]
    55c8:	add	x16, x16, #0x190
    55cc:	br	x17

00000000000055d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    55d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55d4:	ldr	x17, [x16, #408]
    55d8:	add	x16, x16, #0x198
    55dc:	br	x17

00000000000055e0 <sbrk@plt>:
    55e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55e4:	ldr	x17, [x16, #416]
    55e8:	add	x16, x16, #0x1a0
    55ec:	br	x17

00000000000055f0 <htab_remove_elt_with_hash@plt>:
    55f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55f4:	ldr	x17, [x16, #424]
    55f8:	add	x16, x16, #0x1a8
    55fc:	br	x17

0000000000005600 <htab_find_slot@plt>:
    5600:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5604:	ldr	x17, [x16, #432]
    5608:	add	x16, x16, #0x1b0
    560c:	br	x17

0000000000005610 <_ZdaPv@plt>:
    5610:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5614:	ldr	x17, [x16, #440]
    5618:	add	x16, x16, #0x1b8
    561c:	br	x17

0000000000005620 <__errno_location@plt>:
    5620:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5624:	ldr	x17, [x16, #448]
    5628:	add	x16, x16, #0x1c0
    562c:	br	x17

0000000000005630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    5630:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5634:	ldr	x17, [x16, #456]
    5638:	add	x16, x16, #0x1c8
    563c:	br	x17

0000000000005640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>:
    5640:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5644:	ldr	x17, [x16, #464]
    5648:	add	x16, x16, #0x1d0
    564c:	br	x17

0000000000005650 <__ctype_tolower_loc@plt>:
    5650:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5654:	ldr	x17, [x16, #472]
    5658:	add	x16, x16, #0x1d8
    565c:	br	x17

0000000000005660 <htab_traverse_noresize@plt>:
    5660:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5664:	ldr	x17, [x16, #480]
    5668:	add	x16, x16, #0x1e0
    566c:	br	x17

0000000000005670 <xmalloc@plt>:
    5670:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5674:	ldr	x17, [x16, #488]
    5678:	add	x16, x16, #0x1e8
    567c:	br	x17

0000000000005680 <fork@plt>:
    5680:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5684:	ldr	x17, [x16, #496]
    5688:	add	x16, x16, #0x1f0
    568c:	br	x17

0000000000005690 <_ZNSt6localeD1Ev@plt>:
    5690:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5694:	ldr	x17, [x16, #504]
    5698:	add	x16, x16, #0x1f8
    569c:	br	x17

00000000000056a0 <__cxa_throw_bad_array_new_length@plt>:
    56a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56a4:	ldr	x17, [x16, #512]
    56a8:	add	x16, x16, #0x200
    56ac:	br	x17

00000000000056b0 <close@plt>:
    56b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56b4:	ldr	x17, [x16, #520]
    56b8:	add	x16, x16, #0x208
    56bc:	br	x17

00000000000056c0 <strcmp@plt>:
    56c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56c4:	ldr	x17, [x16, #528]
    56c8:	add	x16, x16, #0x210
    56cc:	br	x17

00000000000056d0 <__cxa_rethrow@plt>:
    56d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56d4:	ldr	x17, [x16, #536]
    56d8:	add	x16, x16, #0x218
    56dc:	br	x17

00000000000056e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    56e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56e4:	ldr	x17, [x16, #544]
    56e8:	add	x16, x16, #0x220
    56ec:	br	x17

00000000000056f0 <write@plt>:
    56f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56f4:	ldr	x17, [x16, #552]
    56f8:	add	x16, x16, #0x228
    56fc:	br	x17

0000000000005700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    5700:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5704:	ldr	x17, [x16, #560]
    5708:	add	x16, x16, #0x230
    570c:	br	x17

0000000000005710 <malloc@plt>:
    5710:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5714:	ldr	x17, [x16, #568]
    5718:	add	x16, x16, #0x238
    571c:	br	x17

0000000000005720 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5720:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5724:	ldr	x17, [x16, #576]
    5728:	add	x16, x16, #0x240
    572c:	br	x17

0000000000005730 <xexit@plt>:
    5730:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5734:	ldr	x17, [x16, #584]
    5738:	add	x16, x16, #0x248
    573c:	br	x17

0000000000005740 <abort@plt>:
    5740:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5744:	ldr	x17, [x16, #592]
    5748:	add	x16, x16, #0x250
    574c:	br	x17

0000000000005750 <getenv@plt>:
    5750:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5754:	ldr	x17, [x16, #600]
    5758:	add	x16, x16, #0x258
    575c:	br	x17

0000000000005760 <__cxa_end_catch@plt>:
    5760:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5764:	ldr	x17, [x16, #608]
    5768:	add	x16, x16, #0x260
    576c:	br	x17

0000000000005770 <_ZnamRKSt9nothrow_t@plt>:
    5770:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5774:	ldr	x17, [x16, #616]
    5778:	add	x16, x16, #0x268
    577c:	br	x17

0000000000005780 <__gxx_personality_v0@plt>:
    5780:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5784:	ldr	x17, [x16, #624]
    5788:	add	x16, x16, #0x270
    578c:	br	x17

0000000000005790 <htab_find_with_hash@plt>:
    5790:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5794:	ldr	x17, [x16, #632]
    5798:	add	x16, x16, #0x278
    579c:	br	x17

00000000000057a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    57a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57a4:	ldr	x17, [x16, #640]
    57a8:	add	x16, x16, #0x280
    57ac:	br	x17

00000000000057b0 <xregerror@plt>:
    57b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57b4:	ldr	x17, [x16, #648]
    57b8:	add	x16, x16, #0x288
    57bc:	br	x17

00000000000057c0 <exit@plt>:
    57c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57c4:	ldr	x17, [x16, #656]
    57c8:	add	x16, x16, #0x290
    57cc:	br	x17

00000000000057d0 <htab_delete@plt>:
    57d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57d4:	ldr	x17, [x16, #664]
    57d8:	add	x16, x16, #0x298
    57dc:	br	x17

00000000000057e0 <_Unwind_Resume@plt>:
    57e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57e4:	ldr	x17, [x16, #672]
    57e8:	add	x16, x16, #0x2a0
    57ec:	br	x17

00000000000057f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    57f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57f4:	ldr	x17, [x16, #680]
    57f8:	add	x16, x16, #0x2a8
    57fc:	br	x17

0000000000005800 <xre_search_2@plt>:
    5800:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5804:	ldr	x17, [x16, #688]
    5808:	add	x16, x16, #0x2b0
    580c:	br	x17

0000000000005810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    5810:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5814:	ldr	x17, [x16, #696]
    5818:	add	x16, x16, #0x2b8
    581c:	br	x17

0000000000005820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>:
    5820:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5824:	ldr	x17, [x16, #704]
    5828:	add	x16, x16, #0x2c0
    582c:	br	x17

0000000000005830 <__gmon_start__@plt>:
    5830:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5834:	ldr	x17, [x16, #712]
    5838:	add	x16, x16, #0x2c8
    583c:	br	x17

0000000000005840 <_ZNSt6localeC1Ev@plt>:
    5840:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5844:	ldr	x17, [x16, #720]
    5848:	add	x16, x16, #0x2d0
    584c:	br	x17

Disassembly of section .text:

0000000000005850 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base-0x728>:
    5850:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    5854:	ldr	x0, [x0, #3960]
    5858:	cbz	x0, 5860 <_ZNSt6localeC1Ev@plt+0x20>
    585c:	b	5830 <__gmon_start__@plt>
    5860:	ret
    5864:	nop
    5868:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    586c:	add	x0, x0, #0x5f0
    5870:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
    5874:	add	x1, x1, #0x5f0
    5878:	cmp	x1, x0
    587c:	b.eq	5894 <_ZNSt6localeC1Ev@plt+0x54>  // b.none
    5880:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    5884:	ldr	x1, [x1, #3904]
    5888:	cbz	x1, 5894 <_ZNSt6localeC1Ev@plt+0x54>
    588c:	mov	x16, x1
    5890:	br	x16
    5894:	ret
    5898:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    589c:	add	x0, x0, #0x5f0
    58a0:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
    58a4:	add	x1, x1, #0x5f0
    58a8:	sub	x1, x1, x0
    58ac:	lsr	x2, x1, #63
    58b0:	add	x1, x2, x1, asr #3
    58b4:	cmp	xzr, x1, asr #1
    58b8:	asr	x1, x1, #1
    58bc:	b.eq	58d4 <_ZNSt6localeC1Ev@plt+0x94>  // b.none
    58c0:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    58c4:	ldr	x2, [x2, #3992]
    58c8:	cbz	x2, 58d4 <_ZNSt6localeC1Ev@plt+0x94>
    58cc:	mov	x16, x2
    58d0:	br	x16
    58d4:	ret
    58d8:	stp	x29, x30, [sp, #-32]!
    58dc:	mov	x29, sp
    58e0:	str	x19, [sp, #16]
    58e4:	adrp	x19, 2b000 <xexit@@Base+0x15c24>
    58e8:	ldrb	w0, [x19, #1520]
    58ec:	cbnz	w0, 5914 <_ZNSt6localeC1Ev@plt+0xd4>
    58f0:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    58f4:	ldr	x0, [x0, #3408]
    58f8:	cbz	x0, 5908 <_ZNSt6localeC1Ev@plt+0xc8>
    58fc:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    5900:	ldr	x0, [x0, #728]
    5904:	bl	5460 <__cxa_finalize@plt>
    5908:	bl	5868 <_ZNSt6localeC1Ev@plt+0x28>
    590c:	mov	w0, #0x1                   	// #1
    5910:	strb	w0, [x19, #1520]
    5914:	ldr	x19, [sp, #16]
    5918:	ldp	x29, x30, [sp], #32
    591c:	ret
    5920:	b	5898 <_ZNSt6localeC1Ev@plt+0x58>
    5924:	stp	x29, x30, [sp, #-256]!
    5928:	mov	x29, sp
    592c:	stp	x19, x20, [sp, #16]
    5930:	stp	x23, x24, [sp, #48]
    5934:	stp	x27, x28, [sp, #80]
    5938:	mov	x23, x0
    593c:	mov	x27, x1
    5940:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    5944:	add	x0, x0, #0x448
    5948:	bl	5750 <getenv@plt>
    594c:	cbz	x0, 5e74 <_ZNSt6localeC1Ev@plt+0x634>
    5950:	stp	x21, x22, [sp, #32]
    5954:	stp	x25, x26, [sp, #64]
    5958:	mov	x19, x0
    595c:	add	x20, sp, #0xd8
    5960:	add	x0, x20, #0x10
    5964:	str	x0, [sp, #216]
    5968:	mov	x0, x19
    596c:	bl	5360 <strlen@plt>
    5970:	mov	w3, #0x0                   	// #0
    5974:	add	x2, x19, x0
    5978:	mov	x1, x19
    597c:	mov	x0, x20
    5980:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    5984:	str	xzr, [sp, #248]
    5988:	mov	x19, #0x0                   	// #0
    598c:	add	x24, sp, #0x78
    5990:	add	x21, x24, #0x10
    5994:	add	x26, sp, #0x98
    5998:	add	x22, x26, #0x10
    599c:	add	x28, sp, #0xb8
    59a0:	add	x25, x28, #0x10
    59a4:	b	5eb0 <_ZNSt6localeC1Ev@plt+0x670>
    59a8:	str	x0, [sp, #248]
    59ac:	ldr	x2, [sp, #224]
    59b0:	cmp	x19, x2
    59b4:	b.hi	59d8 <_ZNSt6localeC1Ev@plt+0x198>  // b.pmore
    59b8:	str	x25, [sp, #184]
    59bc:	ldr	x1, [sp, #216]
    59c0:	mov	w3, #0x0                   	// #0
    59c4:	add	x2, x1, x2
    59c8:	add	x1, x1, x19
    59cc:	mov	x0, x28
    59d0:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    59d4:	b	5a28 <_ZNSt6localeC1Ev@plt+0x1e8>
    59d8:	mov	x3, x2
    59dc:	mov	x2, x19
    59e0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    59e4:	add	x1, x1, #0x450
    59e8:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    59ec:	add	x0, x0, #0x468
    59f0:	bl	56e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    59f4:	mov	x19, x0
    59f8:	ldr	x0, [sp, #120]
    59fc:	add	x1, sp, #0x88
    5a00:	cmp	x0, x1
    5a04:	b.eq	5a0c <_ZNSt6localeC1Ev@plt+0x1cc>  // b.none
    5a08:	bl	5540 <_ZdlPv@plt>
    5a0c:	ldr	x0, [sp, #216]
    5a10:	add	x1, sp, #0xe8
    5a14:	cmp	x0, x1
    5a18:	b.eq	5a20 <_ZNSt6localeC1Ev@plt+0x1e0>  // b.none
    5a1c:	bl	5540 <_ZdlPv@plt>
    5a20:	mov	x0, x19
    5a24:	bl	57e0 <_Unwind_Resume@plt>
    5a28:	ldr	x0, [sp, #120]
    5a2c:	ldr	x1, [sp, #184]
    5a30:	cmp	x1, x25
    5a34:	b.eq	5a84 <_ZNSt6localeC1Ev@plt+0x244>  // b.none
    5a38:	cmp	x0, x21
    5a3c:	b.eq	5f34 <_ZNSt6localeC1Ev@plt+0x6f4>  // b.none
    5a40:	ldr	x2, [sp, #136]
    5a44:	str	x1, [sp, #120]
    5a48:	ldr	x1, [sp, #192]
    5a4c:	str	x1, [sp, #128]
    5a50:	ldr	x1, [sp, #200]
    5a54:	str	x1, [sp, #136]
    5a58:	cbz	x0, 5f48 <_ZNSt6localeC1Ev@plt+0x708>
    5a5c:	str	x0, [sp, #184]
    5a60:	str	x2, [sp, #200]
    5a64:	str	xzr, [sp, #192]
    5a68:	ldr	x0, [sp, #184]
    5a6c:	strb	wzr, [x0]
    5a70:	ldr	x0, [sp, #184]
    5a74:	cmp	x0, x25
    5a78:	b.eq	5b30 <_ZNSt6localeC1Ev@plt+0x2f0>  // b.none
    5a7c:	bl	5540 <_ZdlPv@plt>
    5a80:	b	5b30 <_ZNSt6localeC1Ev@plt+0x2f0>
    5a84:	ldr	x2, [sp, #192]
    5a88:	cbz	x2, 5a9c <_ZNSt6localeC1Ev@plt+0x25c>
    5a8c:	cmp	x2, #0x1
    5a90:	b.eq	5ab0 <_ZNSt6localeC1Ev@plt+0x270>  // b.none
    5a94:	mov	x1, x25
    5a98:	bl	52b0 <memcpy@plt>
    5a9c:	ldr	x0, [sp, #192]
    5aa0:	str	x0, [sp, #128]
    5aa4:	ldr	x1, [sp, #120]
    5aa8:	strb	wzr, [x1, x0]
    5aac:	b	5a64 <_ZNSt6localeC1Ev@plt+0x224>
    5ab0:	ldrb	w1, [sp, #200]
    5ab4:	strb	w1, [x0]
    5ab8:	b	5a9c <_ZNSt6localeC1Ev@plt+0x25c>
    5abc:	mov	x3, x2
    5ac0:	mov	x2, x19
    5ac4:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    5ac8:	add	x1, x1, #0x450
    5acc:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    5ad0:	add	x0, x0, #0x468
    5ad4:	bl	56e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5ad8:	ldr	x0, [sp, #120]
    5adc:	ldr	x1, [sp, #152]
    5ae0:	cmp	x1, x22
    5ae4:	b.eq	5b50 <_ZNSt6localeC1Ev@plt+0x310>  // b.none
    5ae8:	cmp	x0, x21
    5aec:	b.eq	5f50 <_ZNSt6localeC1Ev@plt+0x710>  // b.none
    5af0:	ldr	x2, [sp, #136]
    5af4:	str	x1, [sp, #120]
    5af8:	ldr	x1, [sp, #160]
    5afc:	str	x1, [sp, #128]
    5b00:	ldr	x1, [sp, #168]
    5b04:	str	x1, [sp, #136]
    5b08:	cbz	x0, 5f64 <_ZNSt6localeC1Ev@plt+0x724>
    5b0c:	str	x0, [sp, #152]
    5b10:	str	x2, [sp, #168]
    5b14:	str	xzr, [sp, #160]
    5b18:	ldr	x0, [sp, #152]
    5b1c:	strb	wzr, [x0]
    5b20:	ldr	x0, [sp, #152]
    5b24:	cmp	x0, x22
    5b28:	b.eq	5b30 <_ZNSt6localeC1Ev@plt+0x2f0>  // b.none
    5b2c:	bl	5540 <_ZdlPv@plt>
    5b30:	adrp	x1, 16000 <xexit@@Base+0xc24>
    5b34:	add	x1, x1, #0x10
    5b38:	mov	x0, x24
    5b3c:	bl	5330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5b40:	cbz	w0, 5b88 <_ZNSt6localeC1Ev@plt+0x348>
    5b44:	ldr	x0, [sp, #120]
    5b48:	bl	5580 <opendir@plt>
    5b4c:	b	5ba8 <_ZNSt6localeC1Ev@plt+0x368>
    5b50:	ldr	x2, [sp, #160]
    5b54:	cbz	x2, 5b68 <_ZNSt6localeC1Ev@plt+0x328>
    5b58:	cmp	x2, #0x1
    5b5c:	b.eq	5b7c <_ZNSt6localeC1Ev@plt+0x33c>  // b.none
    5b60:	mov	x1, x22
    5b64:	bl	52b0 <memcpy@plt>
    5b68:	ldr	x0, [sp, #160]
    5b6c:	str	x0, [sp, #128]
    5b70:	ldr	x1, [sp, #120]
    5b74:	strb	wzr, [x1, x0]
    5b78:	b	5b14 <_ZNSt6localeC1Ev@plt+0x2d4>
    5b7c:	ldrb	w1, [sp, #168]
    5b80:	strb	w1, [x0]
    5b84:	b	5b68 <_ZNSt6localeC1Ev@plt+0x328>
    5b88:	mov	x4, #0x1                   	// #1
    5b8c:	adrp	x3, 15000 <iterative_hash@@Base+0xec>
    5b90:	add	x3, x3, #0x4a0
    5b94:	ldr	x2, [sp, #128]
    5b98:	mov	x1, #0x0                   	// #0
    5b9c:	mov	x0, x24
    5ba0:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5ba4:	b	5b44 <_ZNSt6localeC1Ev@plt+0x304>
    5ba8:	mov	x20, x0
    5bac:	b	5bd4 <_ZNSt6localeC1Ev@plt+0x394>
    5bb0:	cbz	x0, 5e84 <_ZNSt6localeC1Ev@plt+0x644>
    5bb4:	add	x19, x0, #0x13
    5bb8:	mov	w4, #0x0                   	// #0
    5bbc:	mov	x3, #0x0                   	// #0
    5bc0:	mov	x2, #0x0                   	// #0
    5bc4:	mov	x1, x19
    5bc8:	mov	x0, x23
    5bcc:	bl	5480 <xregexec@plt>
    5bd0:	cbz	w0, 5be4 <_ZNSt6localeC1Ev@plt+0x3a4>
    5bd4:	cbz	x20, 5e94 <_ZNSt6localeC1Ev@plt+0x654>
    5bd8:	mov	x0, x20
    5bdc:	bl	5570 <readdir@plt>
    5be0:	b	5bb0 <_ZNSt6localeC1Ev@plt+0x370>
    5be4:	str	x22, [sp, #152]
    5be8:	ldr	x0, [sp, #120]
    5bec:	str	x0, [sp, #104]
    5bf0:	ldr	x1, [sp, #128]
    5bf4:	str	x1, [sp, #96]
    5bf8:	cmp	x1, #0x0
    5bfc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    5c00:	b.eq	5c58 <_ZNSt6localeC1Ev@plt+0x418>  // b.none
    5c04:	ldr	x0, [sp, #96]
    5c08:	str	x0, [sp, #184]
    5c0c:	cmp	x0, #0xf
    5c10:	b.hi	5c6c <_ZNSt6localeC1Ev@plt+0x42c>  // b.pmore
    5c14:	ldr	x0, [sp, #96]
    5c18:	cmp	x0, #0x1
    5c1c:	b.ne	5c98 <_ZNSt6localeC1Ev@plt+0x458>  // b.any
    5c20:	ldr	x0, [sp, #104]
    5c24:	ldrb	w0, [x0]
    5c28:	strb	w0, [sp, #168]
    5c2c:	ldr	x0, [sp, #184]
    5c30:	str	x0, [sp, #160]
    5c34:	ldr	x1, [sp, #152]
    5c38:	strb	wzr, [x1, x0]
    5c3c:	mov	w4, #0x2f                  	// #47
    5c40:	mov	x3, #0x1                   	// #1
    5c44:	mov	x2, #0x0                   	// #0
    5c48:	ldr	x1, [sp, #160]
    5c4c:	mov	x0, x26
    5c50:	bl	5810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    5c54:	b	5ce0 <_ZNSt6localeC1Ev@plt+0x4a0>
    5c58:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    5c5c:	add	x0, x0, #0x418
    5c60:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    5c64:	mov	x19, x0
    5c68:	b	5cc0 <_ZNSt6localeC1Ev@plt+0x480>
    5c6c:	mov	x2, #0x0                   	// #0
    5c70:	mov	x1, x28
    5c74:	mov	x0, x26
    5c78:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5c7c:	str	x0, [sp, #152]
    5c80:	ldr	x1, [sp, #184]
    5c84:	str	x1, [sp, #168]
    5c88:	ldr	x2, [sp, #96]
    5c8c:	ldr	x1, [sp, #104]
    5c90:	bl	52b0 <memcpy@plt>
    5c94:	b	5c2c <_ZNSt6localeC1Ev@plt+0x3ec>
    5c98:	ldr	x0, [sp, #96]
    5c9c:	cbz	x0, 5c2c <_ZNSt6localeC1Ev@plt+0x3ec>
    5ca0:	mov	x0, x22
    5ca4:	b	5c88 <_ZNSt6localeC1Ev@plt+0x448>
    5ca8:	mov	x19, x0
    5cac:	ldr	x0, [sp, #152]
    5cb0:	add	x1, sp, #0xa8
    5cb4:	cmp	x0, x1
    5cb8:	b.eq	5cc0 <_ZNSt6localeC1Ev@plt+0x480>  // b.none
    5cbc:	bl	5540 <_ZdlPv@plt>
    5cc0:	mov	x0, x20
    5cc4:	bl	5500 <closedir@plt>
    5cc8:	ldr	x0, [sp, #120]
    5ccc:	add	x1, sp, #0x88
    5cd0:	cmp	x0, x1
    5cd4:	b.eq	5a0c <_ZNSt6localeC1Ev@plt+0x1cc>  // b.none
    5cd8:	bl	5540 <_ZdlPv@plt>
    5cdc:	b	5a0c <_ZNSt6localeC1Ev@plt+0x1cc>
    5ce0:	mov	x0, x19
    5ce4:	bl	5360 <strlen@plt>
    5ce8:	mov	x2, x0
    5cec:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    5cf0:	ldr	x1, [sp, #160]
    5cf4:	sub	x0, x0, x1
    5cf8:	cmp	x2, x0
    5cfc:	b.hi	5d10 <_ZNSt6localeC1Ev@plt+0x4d0>  // b.pmore
    5d00:	mov	x1, x19
    5d04:	mov	x0, x26
    5d08:	bl	5390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
    5d0c:	b	5d38 <_ZNSt6localeC1Ev@plt+0x4f8>
    5d10:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    5d14:	add	x0, x0, #0x4a8
    5d18:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    5d1c:	mov	x19, x0
    5d20:	ldr	x0, [sp, #152]
    5d24:	add	x1, sp, #0xa8
    5d28:	cmp	x0, x1
    5d2c:	b.eq	5cc0 <_ZNSt6localeC1Ev@plt+0x480>  // b.none
    5d30:	bl	5540 <_ZdlPv@plt>
    5d34:	b	5cc0 <_ZNSt6localeC1Ev@plt+0x480>
    5d38:	str	x25, [sp, #184]
    5d3c:	mov	x1, x0
    5d40:	ldr	x2, [x1], #16
    5d44:	cmp	x2, x1
    5d48:	b.eq	5de0 <_ZNSt6localeC1Ev@plt+0x5a0>  // b.none
    5d4c:	str	x2, [sp, #184]
    5d50:	ldr	x2, [x0, #16]
    5d54:	str	x2, [sp, #200]
    5d58:	ldr	x2, [x0, #8]
    5d5c:	str	x2, [sp, #192]
    5d60:	str	x1, [x0]
    5d64:	str	xzr, [x0, #8]
    5d68:	strb	wzr, [x0, #16]
    5d6c:	ldr	x0, [x27]
    5d70:	ldr	x1, [sp, #184]
    5d74:	cmp	x1, x25
    5d78:	b.eq	5dec <_ZNSt6localeC1Ev@plt+0x5ac>  // b.none
    5d7c:	add	x2, x27, #0x10
    5d80:	cmp	x0, x2
    5d84:	b.eq	5f18 <_ZNSt6localeC1Ev@plt+0x6d8>  // b.none
    5d88:	ldr	x2, [x27, #16]
    5d8c:	str	x1, [x27]
    5d90:	ldr	x1, [sp, #192]
    5d94:	str	x1, [x27, #8]
    5d98:	ldr	x1, [sp, #200]
    5d9c:	str	x1, [x27, #16]
    5da0:	cbz	x0, 5f2c <_ZNSt6localeC1Ev@plt+0x6ec>
    5da4:	str	x0, [sp, #184]
    5da8:	str	x2, [sp, #200]
    5dac:	str	xzr, [sp, #192]
    5db0:	ldr	x0, [sp, #184]
    5db4:	strb	wzr, [x0]
    5db8:	ldr	x0, [sp, #184]
    5dbc:	cmp	x0, x25
    5dc0:	b.eq	5dc8 <_ZNSt6localeC1Ev@plt+0x588>  // b.none
    5dc4:	bl	5540 <_ZdlPv@plt>
    5dc8:	ldr	x0, [sp, #152]
    5dcc:	cmp	x0, x22
    5dd0:	b.eq	5dd8 <_ZNSt6localeC1Ev@plt+0x598>  // b.none
    5dd4:	bl	5540 <_ZdlPv@plt>
    5dd8:	mov	w19, #0x1                   	// #1
    5ddc:	b	5e88 <_ZNSt6localeC1Ev@plt+0x648>
    5de0:	ldp	x2, x3, [x0, #16]
    5de4:	stp	x2, x3, [sp, #200]
    5de8:	b	5d58 <_ZNSt6localeC1Ev@plt+0x518>
    5dec:	ldr	x2, [sp, #192]
    5df0:	cbz	x2, 5e04 <_ZNSt6localeC1Ev@plt+0x5c4>
    5df4:	cmp	x2, #0x1
    5df8:	b.eq	5e18 <_ZNSt6localeC1Ev@plt+0x5d8>  // b.none
    5dfc:	mov	x1, x25
    5e00:	bl	52b0 <memcpy@plt>
    5e04:	ldr	x0, [sp, #192]
    5e08:	str	x0, [x27, #8]
    5e0c:	ldr	x1, [x27]
    5e10:	strb	wzr, [x1, x0]
    5e14:	b	5dac <_ZNSt6localeC1Ev@plt+0x56c>
    5e18:	ldrb	w1, [sp, #200]
    5e1c:	strb	w1, [x0]
    5e20:	b	5e04 <_ZNSt6localeC1Ev@plt+0x5c4>
    5e24:	ldr	x0, [sp, #120]
    5e28:	add	x1, sp, #0x88
    5e2c:	cmp	x0, x1
    5e30:	b.eq	5e40 <_ZNSt6localeC1Ev@plt+0x600>  // b.none
    5e34:	bl	5540 <_ZdlPv@plt>
    5e38:	b	5e40 <_ZNSt6localeC1Ev@plt+0x600>
    5e3c:	mov	w19, #0x0                   	// #0
    5e40:	ldr	x0, [sp, #216]
    5e44:	add	x1, sp, #0xe8
    5e48:	cmp	x0, x1
    5e4c:	b.eq	5f6c <_ZNSt6localeC1Ev@plt+0x72c>  // b.none
    5e50:	bl	5540 <_ZdlPv@plt>
    5e54:	ldp	x21, x22, [sp, #32]
    5e58:	ldp	x25, x26, [sp, #64]
    5e5c:	mov	w0, w19
    5e60:	ldp	x19, x20, [sp, #16]
    5e64:	ldp	x23, x24, [sp, #48]
    5e68:	ldp	x27, x28, [sp, #80]
    5e6c:	ldp	x29, x30, [sp], #256
    5e70:	ret
    5e74:	mov	w19, #0x0                   	// #0
    5e78:	b	5e5c <_ZNSt6localeC1Ev@plt+0x61c>
    5e7c:	mov	x19, x0
    5e80:	b	5cc8 <_ZNSt6localeC1Ev@plt+0x488>
    5e84:	mov	w19, #0x0                   	// #0
    5e88:	mov	x0, x20
    5e8c:	bl	5500 <closedir@plt>
    5e90:	cbnz	w19, 5e24 <_ZNSt6localeC1Ev@plt+0x5e4>
    5e94:	ldr	x0, [sp, #120]
    5e98:	cmp	x0, x21
    5e9c:	b.eq	5ea4 <_ZNSt6localeC1Ev@plt+0x664>  // b.none
    5ea0:	bl	5540 <_ZdlPv@plt>
    5ea4:	ldr	x19, [sp, #248]
    5ea8:	cmn	x19, #0x1
    5eac:	b.eq	5e3c <_ZNSt6localeC1Ev@plt+0x5fc>  // b.none
    5eb0:	mov	x2, x19
    5eb4:	mov	w1, #0x3a                  	// #58
    5eb8:	add	x0, sp, #0xd8
    5ebc:	bl	5630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    5ec0:	str	x21, [sp, #120]
    5ec4:	str	xzr, [sp, #128]
    5ec8:	strb	wzr, [sp, #136]
    5ecc:	cmn	x0, #0x1
    5ed0:	b.eq	59a8 <_ZNSt6localeC1Ev@plt+0x168>  // b.none
    5ed4:	add	x1, x0, #0x1
    5ed8:	str	x1, [sp, #248]
    5edc:	sub	x0, x0, x19
    5ee0:	ldr	x2, [sp, #224]
    5ee4:	cmp	x19, x2
    5ee8:	b.hi	5abc <_ZNSt6localeC1Ev@plt+0x27c>  // b.pmore
    5eec:	str	x22, [sp, #152]
    5ef0:	ldr	x1, [sp, #216]
    5ef4:	add	x1, x1, x19
    5ef8:	sub	x2, x2, x19
    5efc:	cmp	x2, x0
    5f00:	csel	x2, x2, x0, ls  // ls = plast
    5f04:	mov	w3, #0x0                   	// #0
    5f08:	add	x2, x1, x2
    5f0c:	mov	x0, x26
    5f10:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    5f14:	b	5ad8 <_ZNSt6localeC1Ev@plt+0x298>
    5f18:	str	x1, [x27]
    5f1c:	ldr	x0, [sp, #192]
    5f20:	str	x0, [x27, #8]
    5f24:	ldr	x0, [sp, #200]
    5f28:	str	x0, [x27, #16]
    5f2c:	str	x25, [sp, #184]
    5f30:	b	5dac <_ZNSt6localeC1Ev@plt+0x56c>
    5f34:	str	x1, [sp, #120]
    5f38:	ldr	x0, [sp, #192]
    5f3c:	str	x0, [sp, #128]
    5f40:	ldr	x0, [sp, #200]
    5f44:	str	x0, [sp, #136]
    5f48:	str	x25, [sp, #184]
    5f4c:	b	5a64 <_ZNSt6localeC1Ev@plt+0x224>
    5f50:	str	x1, [sp, #120]
    5f54:	ldr	x0, [sp, #160]
    5f58:	str	x0, [sp, #128]
    5f5c:	ldr	x0, [sp, #168]
    5f60:	str	x0, [sp, #136]
    5f64:	str	x22, [sp, #152]
    5f68:	b	5b14 <_ZNSt6localeC1Ev@plt+0x2d4>
    5f6c:	ldp	x21, x22, [sp, #32]
    5f70:	ldp	x25, x26, [sp, #64]
    5f74:	b	5e5c <_ZNSt6localeC1Ev@plt+0x61c>

0000000000005f78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base>:
    5f78:	stp	x29, x30, [sp, #-64]!
    5f7c:	mov	x29, sp
    5f80:	stp	x19, x20, [sp, #16]
    5f84:	str	x21, [sp, #32]
    5f88:	cmp	x1, #0x0
    5f8c:	ccmp	x1, x2, #0x4, eq  // eq = none
    5f90:	b.ne	5fe0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x68>  // b.any
    5f94:	mov	x20, x0
    5f98:	mov	x21, x1
    5f9c:	sub	x19, x2, x1
    5fa0:	str	x19, [sp, #56]
    5fa4:	cmp	x19, #0xf
    5fa8:	b.hi	5fec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x74>  // b.pmore
    5fac:	ldr	x0, [x0]
    5fb0:	cmp	x19, #0x1
    5fb4:	b.ne	6014 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x9c>  // b.any
    5fb8:	ldrb	w1, [x1]
    5fbc:	strb	w1, [x0]
    5fc0:	ldr	x0, [sp, #56]
    5fc4:	str	x0, [x20, #8]
    5fc8:	ldr	x1, [x20]
    5fcc:	strb	wzr, [x1, x0]
    5fd0:	ldp	x19, x20, [sp, #16]
    5fd4:	ldr	x21, [sp, #32]
    5fd8:	ldp	x29, x30, [sp], #64
    5fdc:	ret
    5fe0:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    5fe4:	add	x0, x0, #0x418
    5fe8:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    5fec:	mov	x2, #0x0                   	// #0
    5ff0:	add	x1, sp, #0x38
    5ff4:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5ff8:	str	x0, [x20]
    5ffc:	ldr	x1, [sp, #56]
    6000:	str	x1, [x20, #16]
    6004:	mov	x2, x19
    6008:	mov	x1, x21
    600c:	bl	52b0 <memcpy@plt>
    6010:	b	5fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x48>
    6014:	cbz	x19, 5fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x48>
    6018:	b	6004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x8c>
    601c:	str	x1, [x0, #24]
    6020:	str	x2, [x0, #32]
    6024:	str	x3, [x0, #40]
    6028:	ret
    602c:	cmp	w1, #0x0
    6030:	cset	w1, ne  // ne = any
    6034:	strb	w1, [x0, #120]
    6038:	ret
    603c:	str	x1, [x0, #48]
    6040:	str	x2, [x0, #56]
    6044:	ret
    6048:	stp	x29, x30, [sp, #-16]!
    604c:	mov	x29, sp
    6050:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    6054:	add	x0, x0, #0x4c0
    6058:	bl	5400 <xstrdup@plt>
    605c:	ldp	x29, x30, [sp], #16
    6060:	ret
    6064:	stp	x29, x30, [sp, #-32]!
    6068:	mov	x29, sp
    606c:	stp	x19, x20, [sp, #16]
    6070:	mov	x19, x0
    6074:	mov	x20, x1
    6078:	mov	x0, x1
    607c:	bl	5360 <strlen@plt>
    6080:	mov	x4, x0
    6084:	add	x0, x19, #0x58
    6088:	mov	x3, x20
    608c:	ldr	x2, [x0, #8]
    6090:	mov	x1, #0x0                   	// #0
    6094:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6098:	ldp	x19, x20, [sp, #16]
    609c:	ldp	x29, x30, [sp], #32
    60a0:	ret
    60a4:	stp	x29, x30, [sp, #-32]!
    60a8:	mov	x29, sp
    60ac:	stp	x19, x20, [sp, #16]
    60b0:	mov	x19, x0
    60b4:	mov	x20, x1
    60b8:	ldr	x0, [x0, #8]
    60bc:	ldrb	w0, [x0, #120]
    60c0:	cbnz	w0, 60e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x168>
    60c4:	add	x1, x19, #0x10
    60c8:	mov	x0, x20
    60cc:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    60d0:	mov	x0, #0x0                   	// #0
    60d4:	ldp	x19, x20, [sp, #16]
    60d8:	ldp	x29, x30, [sp], #32
    60dc:	ret
    60e0:	ldr	x2, [x19, #16]
    60e4:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    60e8:	add	x1, x1, #0x4e0
    60ec:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    60f0:	ldr	x0, [x0, #3968]
    60f4:	ldr	x0, [x0]
    60f8:	bl	5370 <fprintf@plt>
    60fc:	b	60c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x14c>
    6100:	stp	x29, x30, [sp, #-64]!
    6104:	mov	x29, sp
    6108:	stp	x19, x20, [sp, #16]
    610c:	str	x21, [sp, #32]
    6110:	mov	x20, x0
    6114:	str	xzr, [sp, #56]
    6118:	mov	x1, #0x1                   	// #1
    611c:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    6120:	mov	w19, w0
    6124:	cbnz	w0, 6148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1d0>
    6128:	ldr	x0, [sp, #56]
    612c:	cbz	x0, 6134 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1bc>
    6130:	bl	5610 <_ZdaPv@plt>
    6134:	mov	w0, w19
    6138:	ldp	x19, x20, [sp, #16]
    613c:	ldr	x21, [sp, #32]
    6140:	ldp	x29, x30, [sp], #64
    6144:	ret
    6148:	add	x1, sp, #0x38
    614c:	mov	x0, x20
    6150:	bl	d784 <gcc_cp_fe_context@@Base+0x4054>
    6154:	mov	w19, w0
    6158:	cbz	w0, 6128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1b0>
    615c:	ldr	x1, [x20, #24]
    6160:	ldr	x3, [x1, #32]
    6164:	ldr	x2, [sp, #56]
    6168:	ldr	x0, [x1, #40]
    616c:	blr	x3
    6170:	mov	x21, x0
    6174:	mov	w1, #0x52                  	// #82
    6178:	mov	x0, x20
    617c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    6180:	mov	w19, w0
    6184:	cbz	w0, 6128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1b0>
    6188:	mov	x1, x21
    618c:	mov	x0, x20
    6190:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    6194:	mov	w19, w0
    6198:	b	6128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1b0>
    619c:	mov	x19, x0
    61a0:	ldr	x0, [sp, #56]
    61a4:	cbz	x0, 61ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x234>
    61a8:	bl	5610 <_ZdaPv@plt>
    61ac:	mov	x0, x19
    61b0:	bl	57e0 <_Unwind_Resume@plt>
    61b4:	stp	x29, x30, [sp, #-48]!
    61b8:	mov	x29, sp
    61bc:	str	x19, [sp, #16]
    61c0:	mov	x19, x1
    61c4:	add	x1, sp, #0x28
    61c8:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    61cc:	cbz	w0, 61dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x264>
    61d0:	ldr	x0, [sp, #40]
    61d4:	str	w0, [x19]
    61d8:	mov	w0, #0x1                   	// #1
    61dc:	ldr	x19, [sp, #16]
    61e0:	ldp	x29, x30, [sp], #48
    61e4:	ret
    61e8:	stp	x29, x30, [sp, #-48]!
    61ec:	mov	x29, sp
    61f0:	str	x19, [sp, #16]
    61f4:	mov	x19, x1
    61f8:	add	x1, sp, #0x28
    61fc:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    6200:	cbz	w0, 6210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x298>
    6204:	ldr	x0, [sp, #40]
    6208:	str	w0, [x19]
    620c:	mov	w0, #0x1                   	// #1
    6210:	ldr	x19, [sp, #16]
    6214:	ldp	x29, x30, [sp], #48
    6218:	ret
    621c:	stp	x29, x30, [sp, #-48]!
    6220:	mov	x29, sp
    6224:	stp	x19, x20, [sp, #16]
    6228:	mov	x20, x0
    622c:	str	xzr, [sp, #32]
    6230:	mov	x1, #0x2                   	// #2
    6234:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    6238:	mov	w19, w0
    623c:	cbnz	w0, 625c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2e4>
    6240:	ldr	x0, [sp, #32]
    6244:	cbz	x0, 624c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2d4>
    6248:	bl	5610 <_ZdaPv@plt>
    624c:	mov	w0, w19
    6250:	ldp	x19, x20, [sp, #16]
    6254:	ldp	x29, x30, [sp], #48
    6258:	ret
    625c:	add	x1, sp, #0x28
    6260:	mov	x0, x20
    6264:	bl	61e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x270>
    6268:	mov	w19, w0
    626c:	cbz	w0, 6240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2c8>
    6270:	add	x1, sp, #0x20
    6274:	mov	x0, x20
    6278:	bl	d784 <gcc_cp_fe_context@@Base+0x4054>
    627c:	mov	w19, w0
    6280:	cbz	w0, 6240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2c8>
    6284:	ldr	x1, [x20, #24]
    6288:	ldr	x4, [x1, #24]
    628c:	ldr	x3, [sp, #32]
    6290:	ldr	w2, [sp, #40]
    6294:	ldr	x0, [x1, #40]
    6298:	blr	x4
    629c:	mov	w1, #0x52                  	// #82
    62a0:	mov	x0, x20
    62a4:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    62a8:	mov	w19, w0
    62ac:	cbz	w0, 6240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2c8>
    62b0:	mov	x1, #0x1                   	// #1
    62b4:	mov	x0, x20
    62b8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    62bc:	mov	w19, w0
    62c0:	b	6240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2c8>
    62c4:	mov	x19, x0
    62c8:	ldr	x0, [sp, #32]
    62cc:	cbz	x0, 62d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x35c>
    62d0:	bl	5610 <_ZdaPv@plt>
    62d4:	mov	x0, x19
    62d8:	bl	57e0 <_Unwind_Resume@plt>
    62dc:	stp	x29, x30, [sp, #-48]!
    62e0:	mov	x29, sp
    62e4:	str	x19, [sp, #16]
    62e8:	mov	x19, x1
    62ec:	add	x1, sp, #0x28
    62f0:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    62f4:	cbz	w0, 6304 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x38c>
    62f8:	ldr	x0, [sp, #40]
    62fc:	str	w0, [x19]
    6300:	mov	w0, #0x1                   	// #1
    6304:	ldr	x19, [sp, #16]
    6308:	ldp	x29, x30, [sp], #48
    630c:	ret
    6310:	stp	x29, x30, [sp, #-48]!
    6314:	mov	x29, sp
    6318:	stp	x19, x20, [sp, #16]
    631c:	stp	x21, x22, [sp, #32]
    6320:	mov	x19, x0
    6324:	mov	x21, x1
    6328:	mov	x20, x2
    632c:	str	xzr, [x0, #16]
    6330:	str	xzr, [x0, #24]
    6334:	str	xzr, [x0, #32]
    6338:	str	xzr, [x0, #40]
    633c:	str	xzr, [x0, #48]
    6340:	str	xzr, [x0, #56]
    6344:	str	xzr, [x0, #64]
    6348:	str	xzr, [x0, #72]
    634c:	str	xzr, [x0, #80]
    6350:	add	x22, x0, #0x68
    6354:	str	x22, [x0, #88]
    6358:	str	xzr, [x0, #96]
    635c:	strb	wzr, [x0, #104]
    6360:	strb	wzr, [x0, #120]
    6364:	mov	x0, #0x10                  	// #16
    6368:	bl	5550 <_Znwm@plt>
    636c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    6370:	add	x1, x1, #0x418
    6374:	str	x1, [x0]
    6378:	str	x19, [x0, #8]
    637c:	str	x0, [x19, #128]
    6380:	str	x21, [x19]
    6384:	str	x20, [x19, #8]
    6388:	ldp	x19, x20, [sp, #16]
    638c:	ldp	x21, x22, [sp, #32]
    6390:	ldp	x29, x30, [sp], #48
    6394:	ret
    6398:	mov	x21, x0
    639c:	ldr	x0, [x19, #88]
    63a0:	cmp	x22, x0
    63a4:	b.eq	63ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x434>  // b.none
    63a8:	bl	5540 <_ZdlPv@plt>
    63ac:	ldr	x20, [x19, #64]
    63b0:	ldr	x22, [x19, #72]
    63b4:	cmp	x22, x20
    63b8:	b.eq	63d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x460>  // b.none
    63bc:	mov	x1, x20
    63c0:	ldr	x0, [x1], #16
    63c4:	cmp	x0, x1
    63c8:	b.eq	63d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x458>  // b.none
    63cc:	bl	5540 <_ZdlPv@plt>
    63d0:	add	x20, x20, #0x20
    63d4:	b	63b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x43c>
    63d8:	ldr	x0, [x19, #64]
    63dc:	cbz	x0, 63e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x46c>
    63e0:	bl	5540 <_ZdlPv@plt>
    63e4:	mov	x0, x21
    63e8:	bl	57e0 <_Unwind_Resume@plt>
    63ec:	stp	x29, x30, [sp, #-48]!
    63f0:	mov	x29, sp
    63f4:	stp	x19, x20, [sp, #16]
    63f8:	str	x21, [sp, #32]
    63fc:	mov	x19, x0
    6400:	ldr	x0, [x0, #16]
    6404:	cbz	x0, 6414 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x49c>
    6408:	ldr	x1, [x0]
    640c:	ldr	x1, [x1, #8]
    6410:	blr	x1
    6414:	ldr	x0, [x19, #128]
    6418:	cbz	x0, 6428 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4b0>
    641c:	ldr	x1, [x0]
    6420:	ldr	x1, [x1, #16]
    6424:	blr	x1
    6428:	ldr	x0, [x19, #88]
    642c:	add	x1, x19, #0x68
    6430:	cmp	x0, x1
    6434:	b.eq	643c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4c4>  // b.none
    6438:	bl	5540 <_ZdlPv@plt>
    643c:	ldr	x20, [x19, #64]
    6440:	ldr	x21, [x19, #72]
    6444:	cmp	x20, x21
    6448:	b.ne	6478 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x500>  // b.any
    644c:	ldr	x0, [x19, #64]
    6450:	cbz	x0, 6458 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4e0>
    6454:	bl	5540 <_ZdlPv@plt>
    6458:	ldp	x19, x20, [sp, #16]
    645c:	ldr	x21, [sp, #32]
    6460:	ldp	x29, x30, [sp], #48
    6464:	ret
    6468:	bl	5540 <_ZdlPv@plt>
    646c:	add	x20, x20, #0x20
    6470:	cmp	x21, x20
    6474:	b.eq	644c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4d4>  // b.none
    6478:	mov	x1, x20
    647c:	ldr	x0, [x1], #16
    6480:	cmp	x0, x1
    6484:	b.ne	6468 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4f0>  // b.any
    6488:	b	646c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4f4>
    648c:	cbz	x0, 64bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x544>
    6490:	stp	x29, x30, [sp, #-32]!
    6494:	mov	x29, sp
    6498:	str	x19, [sp, #16]
    649c:	mov	x19, x0
    64a0:	bl	63ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x474>
    64a4:	mov	x1, #0x88                  	// #136
    64a8:	mov	x0, x19
    64ac:	bl	5560 <_ZdlPvm@plt>
    64b0:	ldr	x19, [sp, #16]
    64b4:	ldp	x29, x30, [sp], #32
    64b8:	ret
    64bc:	ret

00000000000064c0 <gcc_c_fe_context@@Base>:
    64c0:	stp	x29, x30, [sp, #-32]!
    64c4:	mov	x29, sp
    64c8:	stp	x19, x20, [sp, #16]
    64cc:	cmp	w0, #0x1
    64d0:	ccmp	w1, #0x1, #0x2, ls  // ls = plast
    64d4:	b.hi	64f8 <gcc_c_fe_context@@Base+0x38>  // b.pmore
    64d8:	mov	x0, #0x88                  	// #136
    64dc:	bl	5550 <_Znwm@plt>
    64e0:	mov	x19, x0
    64e4:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    64e8:	add	x2, x2, #0x480
    64ec:	add	x1, x2, #0xe0
    64f0:	bl	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    64f4:	b	64fc <gcc_c_fe_context@@Base+0x3c>
    64f8:	mov	x19, #0x0                   	// #0
    64fc:	mov	x0, x19
    6500:	ldp	x19, x20, [sp, #16]
    6504:	ldp	x29, x30, [sp], #32
    6508:	ret
    650c:	mov	x20, x0
    6510:	mov	x1, #0x88                  	// #136
    6514:	mov	x0, x19
    6518:	bl	5560 <_ZdlPvm@plt>
    651c:	mov	x0, x20
    6520:	bl	57e0 <_Unwind_Resume@plt>
    6524:	sub	sp, sp, #0x270
    6528:	stp	x29, x30, [sp]
    652c:	mov	x29, sp
    6530:	stp	x19, x20, [sp, #16]
    6534:	stp	x21, x22, [sp, #32]
    6538:	stp	x23, x24, [sp, #48]
    653c:	stp	x25, x26, [sp, #64]
    6540:	stp	x27, x28, [sp, #80]
    6544:	mov	x20, x0
    6548:	str	x1, [x29, #96]
    654c:	ldr	x24, [x0, #16]
    6550:	add	x19, x29, #0x88
    6554:	add	x0, x19, #0x80
    6558:	bl	5350 <_ZNSt8ios_baseC2Ev@plt>
    655c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6560:	ldr	x0, [x0, #3216]
    6564:	add	x0, x0, #0x10
    6568:	str	x0, [x29, #264]
    656c:	str	xzr, [x29, #480]
    6570:	strb	wzr, [x29, #488]
    6574:	strb	wzr, [x29, #489]
    6578:	str	xzr, [x29, #496]
    657c:	str	xzr, [x29, #504]
    6580:	str	xzr, [x29, #512]
    6584:	str	xzr, [x29, #520]
    6588:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    658c:	ldr	x0, [x0, #3296]
    6590:	ldr	x21, [x0, #16]
    6594:	str	x21, [x29, #136]
    6598:	ldr	x26, [x0, #24]
    659c:	ldur	x0, [x21, #-24]
    65a0:	str	x26, [x19, x0]
    65a4:	str	xzr, [x29, #144]
    65a8:	ldr	x0, [x29, #136]
    65ac:	ldur	x0, [x0, #-24]
    65b0:	mov	x1, #0x0                   	// #0
    65b4:	add	x0, x19, x0
    65b8:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    65bc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    65c0:	ldr	x0, [x0, #3296]
    65c4:	ldr	x22, [x0, #32]
    65c8:	str	x22, [x29, #152]
    65cc:	ldr	x27, [x0, #40]
    65d0:	ldur	x0, [x22, #-24]
    65d4:	add	x1, x29, #0x98
    65d8:	str	x27, [x1, x0]
    65dc:	ldr	x0, [x29, #152]
    65e0:	ldur	x0, [x0, #-24]
    65e4:	mov	x1, #0x0                   	// #0
    65e8:	add	x2, x29, #0x98
    65ec:	add	x0, x2, x0
    65f0:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    65f4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    65f8:	ldr	x0, [x0, #3296]
    65fc:	ldr	x23, [x0, #8]
    6600:	str	x23, [x29, #136]
    6604:	ldr	x28, [x0, #48]
    6608:	ldur	x0, [x23, #-24]
    660c:	add	x19, x29, #0x88
    6610:	str	x28, [x19, x0]
    6614:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6618:	ldr	x0, [x0, #3576]
    661c:	add	x1, x0, #0x18
    6620:	str	x1, [x29, #136]
    6624:	add	x1, x0, #0x68
    6628:	str	x1, [x29, #264]
    662c:	add	x0, x0, #0x40
    6630:	str	x0, [x29, #152]
    6634:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6638:	ldr	x0, [x0, #3432]
    663c:	add	x0, x0, #0x10
    6640:	str	x0, [x29, #160]
    6644:	str	xzr, [x29, #168]
    6648:	str	xzr, [x29, #176]
    664c:	str	xzr, [x29, #184]
    6650:	str	xzr, [x29, #192]
    6654:	str	xzr, [x29, #200]
    6658:	str	xzr, [x29, #208]
    665c:	add	x0, x19, #0x50
    6660:	bl	5840 <_ZNSt6localeC1Ev@plt>
    6664:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6668:	ldr	x0, [x0, #4048]
    666c:	add	x0, x0, #0x10
    6670:	str	x0, [x29, #160]
    6674:	mov	w0, #0x18                  	// #24
    6678:	str	w0, [x29, #224]
    667c:	add	x0, x19, #0x70
    6680:	str	x0, [x29, #232]
    6684:	str	xzr, [x29, #240]
    6688:	strb	wzr, [x29, #248]
    668c:	add	x1, x19, #0x18
    6690:	add	x0, x19, #0x80
    6694:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    6698:	b	6750 <gcc_c_fe_context@@Base+0x290>
    669c:	str	x21, [x29, #136]
    66a0:	ldur	x1, [x21, #-24]
    66a4:	add	x2, x29, #0x88
    66a8:	str	x26, [x2, x1]
    66ac:	mov	x19, x0
    66b0:	str	xzr, [x29, #144]
    66b4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    66b8:	ldr	x0, [x0, #3216]
    66bc:	add	x0, x0, #0x10
    66c0:	str	x0, [x29, #264]
    66c4:	add	x0, x29, #0x108
    66c8:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    66cc:	mov	x0, x19
    66d0:	bl	57e0 <_Unwind_Resume@plt>
    66d4:	mov	x19, x0
    66d8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    66dc:	ldr	x0, [x0, #4048]
    66e0:	add	x0, x0, #0x10
    66e4:	str	x0, [x29, #160]
    66e8:	ldr	x0, [x29, #232]
    66ec:	add	x1, x29, #0xf8
    66f0:	cmp	x0, x1
    66f4:	b.eq	66fc <gcc_c_fe_context@@Base+0x23c>  // b.none
    66f8:	bl	5540 <_ZdlPv@plt>
    66fc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6700:	ldr	x0, [x0, #3432]
    6704:	add	x0, x0, #0x10
    6708:	str	x0, [x29, #160]
    670c:	add	x20, x29, #0x88
    6710:	add	x0, x29, #0xd8
    6714:	bl	5690 <_ZNSt6localeD1Ev@plt>
    6718:	str	x23, [x29, #136]
    671c:	ldur	x0, [x23, #-24]
    6720:	str	x28, [x20, x0]
    6724:	str	x22, [x29, #152]
    6728:	ldur	x0, [x22, #-24]
    672c:	add	x1, x29, #0x98
    6730:	str	x27, [x1, x0]
    6734:	str	x21, [x29, #136]
    6738:	ldur	x0, [x21, #-24]
    673c:	str	x26, [x20, x0]
    6740:	str	xzr, [x29, #144]
    6744:	b	66b4 <gcc_c_fe_context@@Base+0x1f4>
    6748:	mov	x19, x0
    674c:	b	66b4 <gcc_c_fe_context@@Base+0x1f4>
    6750:	mov	x2, #0x1                   	// #1
    6754:	adrp	x1, 16000 <xexit@@Base+0xc24>
    6758:	add	x1, x1, #0xf0
    675c:	add	x0, x29, #0x98
    6760:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6764:	cbz	x24, 6784 <gcc_c_fe_context@@Base+0x2c4>
    6768:	mov	x0, x24
    676c:	bl	5360 <strlen@plt>
    6770:	mov	x2, x0
    6774:	mov	x1, x24
    6778:	add	x0, x29, #0x98
    677c:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6780:	b	67a0 <gcc_c_fe_context@@Base+0x2e0>
    6784:	ldr	x0, [x29, #152]
    6788:	ldur	x1, [x0, #-24]
    678c:	add	x0, x29, #0x98
    6790:	add	x0, x0, x1
    6794:	ldr	w1, [x0, #32]
    6798:	orr	w1, w1, #0x1
    679c:	bl	57a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    67a0:	mov	x2, #0x1                   	// #1
    67a4:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    67a8:	add	x1, x1, #0x510
    67ac:	add	x0, x29, #0x98
    67b0:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    67b4:	b	67ec <gcc_c_fe_context@@Base+0x32c>
    67b8:	cmp	w19, #0x23
    67bc:	b.hi	67d8 <gcc_c_fe_context@@Base+0x318>  // b.pmore
    67c0:	strb	w19, [x29, #134]
    67c4:	mov	x2, x25
    67c8:	ldr	x1, [x29, #112]
    67cc:	ldr	x0, [x29, #120]
    67d0:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    67d4:	b	6818 <gcc_c_fe_context@@Base+0x358>
    67d8:	lsl	x0, x25, x19
    67dc:	mov	x1, #0x4f1000000000        	// #86930138071040
    67e0:	tst	x0, x1
    67e4:	b.ne	6850 <gcc_c_fe_context@@Base+0x390>  // b.any
    67e8:	b	67c0 <gcc_c_fe_context@@Base+0x300>
    67ec:	mov	w19, #0x67                  	// #103
    67f0:	adrp	x24, 15000 <iterative_hash@@Base+0xec>
    67f4:	add	x24, x24, #0x508
    67f8:	add	x0, x29, #0x86
    67fc:	str	x0, [x29, #112]
    6800:	add	x0, x29, #0x98
    6804:	str	x0, [x29, #120]
    6808:	mov	x25, #0x1                   	// #1
    680c:	add	x0, x29, #0x87
    6810:	str	x0, [x29, #104]
    6814:	b	67c0 <gcc_c_fe_context@@Base+0x300>
    6818:	ldrb	w19, [x24, #1]!
    681c:	cbz	w19, 686c <gcc_c_fe_context@@Base+0x3ac>
    6820:	cmp	w19, #0x2e
    6824:	b.ls	67b8 <gcc_c_fe_context@@Base+0x2f8>  // b.plast
    6828:	sub	w0, w19, #0x3f
    682c:	and	w0, w0, #0xff
    6830:	cmp	w0, #0x3d
    6834:	b.hi	67c0 <gcc_c_fe_context@@Base+0x300>  // b.pmore
    6838:	lsl	x0, x25, x0
    683c:	mov	x1, #0x1                   	// #1
    6840:	movk	x1, #0xb000, lsl #16
    6844:	movk	x1, #0x3000, lsl #48
    6848:	tst	x0, x1
    684c:	b.eq	67c0 <gcc_c_fe_context@@Base+0x300>  // b.none
    6850:	mov	w0, #0x5c                  	// #92
    6854:	strb	w0, [x29, #135]
    6858:	mov	x2, x25
    685c:	ldr	x1, [x29, #104]
    6860:	ldr	x0, [x29, #120]
    6864:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6868:	b	67c0 <gcc_c_fe_context@@Base+0x300>
    686c:	mov	x2, #0x1                   	// #1
    6870:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6874:	add	x1, x1, #0x518
    6878:	add	x0, x29, #0x98
    687c:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6880:	add	x0, x29, #0x260
    6884:	str	x0, [x29, #592]
    6888:	str	xzr, [x29, #600]
    688c:	strb	wzr, [x29, #608]
    6890:	ldr	x0, [x29, #200]
    6894:	cbz	x0, 68dc <gcc_c_fe_context@@Base+0x41c>
    6898:	ldr	x4, [x29, #184]
    689c:	cmp	x0, x4
    68a0:	b.ls	68c0 <gcc_c_fe_context@@Base+0x400>  // b.plast
    68a4:	ldr	x3, [x29, #192]
    68a8:	sub	x4, x0, x3
    68ac:	mov	x2, #0x0                   	// #0
    68b0:	mov	x1, #0x0                   	// #0
    68b4:	add	x0, x29, #0x250
    68b8:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    68bc:	b	68e8 <gcc_c_fe_context@@Base+0x428>
    68c0:	ldr	x3, [x29, #192]
    68c4:	sub	x4, x4, x3
    68c8:	mov	x2, #0x0                   	// #0
    68cc:	mov	x1, #0x0                   	// #0
    68d0:	add	x0, x29, #0x250
    68d4:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    68d8:	b	68e8 <gcc_c_fe_context@@Base+0x428>
    68dc:	add	x1, x29, #0xe8
    68e0:	add	x0, x29, #0x250
    68e4:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    68e8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    68ec:	ldr	x0, [x0, #3576]
    68f0:	add	x1, x0, #0x18
    68f4:	str	x1, [x29, #136]
    68f8:	add	x1, x0, #0x68
    68fc:	str	x1, [x29, #264]
    6900:	add	x0, x0, #0x40
    6904:	str	x0, [x29, #152]
    6908:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    690c:	ldr	x0, [x0, #4048]
    6910:	add	x0, x0, #0x10
    6914:	str	x0, [x29, #160]
    6918:	ldr	x0, [x29, #232]
    691c:	add	x1, x29, #0xf8
    6920:	cmp	x0, x1
    6924:	b.eq	692c <gcc_c_fe_context@@Base+0x46c>  // b.none
    6928:	bl	5540 <_ZdlPv@plt>
    692c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6930:	ldr	x0, [x0, #3432]
    6934:	add	x0, x0, #0x10
    6938:	str	x0, [x29, #160]
    693c:	add	x19, x29, #0x88
    6940:	add	x0, x29, #0xd8
    6944:	bl	5690 <_ZNSt6localeD1Ev@plt>
    6948:	str	x23, [x29, #136]
    694c:	ldur	x0, [x23, #-24]
    6950:	str	x28, [x19, x0]
    6954:	str	x22, [x29, #152]
    6958:	ldur	x0, [x22, #-24]
    695c:	add	x1, x29, #0x98
    6960:	str	x27, [x1, x0]
    6964:	str	x21, [x29, #136]
    6968:	ldur	x0, [x21, #-24]
    696c:	str	x26, [x19, x0]
    6970:	str	xzr, [x29, #144]
    6974:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6978:	ldr	x0, [x0, #3216]
    697c:	add	x0, x0, #0x10
    6980:	str	x0, [x29, #264]
    6984:	add	x0, x19, #0x80
    6988:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    698c:	ldr	x0, [x20, #8]
    6990:	ldrb	w0, [x0, #120]
    6994:	cbnz	w0, 69dc <gcc_c_fe_context@@Base+0x51c>
    6998:	mov	w2, #0x9                   	// #9
    699c:	ldr	x1, [x29, #592]
    69a0:	add	x0, x29, #0x210
    69a4:	bl	52d0 <xregcomp@plt>
    69a8:	b	69fc <gcc_c_fe_context@@Base+0x53c>
    69ac:	mov	x19, x0
    69b0:	ldr	x0, [x29, #592]
    69b4:	add	x1, x29, #0x260
    69b8:	cmp	x0, x1
    69bc:	b.eq	69c4 <gcc_c_fe_context@@Base+0x504>  // b.none
    69c0:	bl	5540 <_ZdlPv@plt>
    69c4:	add	x0, x29, #0x88
    69c8:	bl	54f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    69cc:	mov	x0, x19
    69d0:	bl	57e0 <_Unwind_Resume@plt>
    69d4:	mov	x19, x0
    69d8:	b	69c4 <gcc_c_fe_context@@Base+0x504>
    69dc:	ldr	x2, [x29, #592]
    69e0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    69e4:	add	x1, x1, #0x520
    69e8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    69ec:	ldr	x0, [x0, #3968]
    69f0:	ldr	x0, [x0]
    69f4:	bl	5370 <fprintf@plt>
    69f8:	b	6998 <gcc_c_fe_context@@Base+0x4d8>
    69fc:	mov	w19, w0
    6a00:	cbz	w0, 6aa0 <gcc_c_fe_context@@Base+0x5e0>
    6a04:	mov	x20, sp
    6a08:	mov	x3, #0x0                   	// #0
    6a0c:	mov	x2, #0x0                   	// #0
    6a10:	add	x1, x29, #0x210
    6a14:	bl	57b0 <xregerror@plt>
    6a18:	mov	x3, x0
    6a1c:	add	x0, x0, #0xf
    6a20:	and	x0, x0, #0xfffffffffffffff0
    6a24:	sub	sp, sp, x0
    6a28:	mov	x21, sp
    6a2c:	mov	x2, sp
    6a30:	add	x1, x29, #0x210
    6a34:	mov	w0, w19
    6a38:	bl	57b0 <xregerror@plt>
    6a3c:	mov	x4, #0x0                   	// #0
    6a40:	mov	x3, x21
    6a44:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6a48:	add	x2, x2, #0x550
    6a4c:	ldr	x1, [x29, #592]
    6a50:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    6a54:	add	x0, x0, #0x558
    6a58:	bl	5510 <concat@plt>
    6a5c:	mov	x19, x0
    6a60:	mov	sp, x20
    6a64:	ldr	x0, [x29, #592]
    6a68:	add	x1, x29, #0x260
    6a6c:	cmp	x0, x1
    6a70:	b.eq	6a78 <gcc_c_fe_context@@Base+0x5b8>  // b.none
    6a74:	bl	5540 <_ZdlPv@plt>
    6a78:	mov	x0, x19
    6a7c:	mov	sp, x29
    6a80:	ldp	x19, x20, [sp, #16]
    6a84:	ldp	x21, x22, [sp, #32]
    6a88:	ldp	x23, x24, [sp, #48]
    6a8c:	ldp	x25, x26, [sp, #64]
    6a90:	ldp	x27, x28, [sp, #80]
    6a94:	ldp	x29, x30, [sp]
    6a98:	add	sp, sp, #0x270
    6a9c:	ret
    6aa0:	ldr	x1, [x29, #96]
    6aa4:	add	x0, x29, #0x210
    6aa8:	bl	5924 <_ZNSt6localeC1Ev@plt+0xe4>
    6aac:	and	w0, w0, #0xff
    6ab0:	cbnz	w0, 6ae0 <gcc_c_fe_context@@Base+0x620>
    6ab4:	add	x0, x29, #0x210
    6ab8:	bl	5380 <xregfree@plt>
    6abc:	mov	x3, #0x0                   	// #0
    6ac0:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6ac4:	add	x2, x2, #0x578
    6ac8:	ldr	x1, [x29, #592]
    6acc:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    6ad0:	add	x0, x0, #0x580
    6ad4:	bl	5510 <concat@plt>
    6ad8:	mov	x19, x0
    6adc:	b	6a64 <gcc_c_fe_context@@Base+0x5a4>
    6ae0:	add	x0, x29, #0x210
    6ae4:	bl	5380 <xregfree@plt>
    6ae8:	ldr	x0, [x20, #8]
    6aec:	ldrb	w0, [x0, #120]
    6af0:	cbz	w0, 6b1c <gcc_c_fe_context@@Base+0x65c>
    6af4:	ldr	x0, [x29, #96]
    6af8:	ldr	x2, [x0]
    6afc:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6b00:	add	x1, x1, #0x5a8
    6b04:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6b08:	ldr	x0, [x0, #3968]
    6b0c:	ldr	x0, [x0]
    6b10:	bl	5370 <fprintf@plt>
    6b14:	mov	x19, #0x0                   	// #0
    6b18:	b	6a64 <gcc_c_fe_context@@Base+0x5a4>
    6b1c:	mov	x19, #0x0                   	// #0
    6b20:	b	6a64 <gcc_c_fe_context@@Base+0x5a4>
    6b24:	mov	sp, x20
    6b28:	mov	x19, x0
    6b2c:	ldr	x0, [x29, #592]
    6b30:	add	x1, x29, #0x260
    6b34:	cmp	x0, x1
    6b38:	b.eq	6b40 <gcc_c_fe_context@@Base+0x680>  // b.none
    6b3c:	bl	5540 <_ZdlPv@plt>
    6b40:	mov	x0, x19
    6b44:	bl	57e0 <_Unwind_Resume@plt>
    6b48:	mov	x19, x0
    6b4c:	b	6b2c <gcc_c_fe_context@@Base+0x66c>
    6b50:	stp	x29, x30, [sp, #-64]!
    6b54:	mov	x29, sp
    6b58:	stp	x19, x20, [sp, #16]
    6b5c:	mov	x20, x0
    6b60:	mov	x19, x1
    6b64:	ldr	x0, [x0, #128]
    6b68:	cbz	x0, 6b78 <gcc_c_fe_context@@Base+0x6b8>
    6b6c:	ldr	x1, [x0]
    6b70:	ldr	x1, [x1, #16]
    6b74:	blr	x1
    6b78:	add	x0, sp, #0x30
    6b7c:	str	x0, [sp, #32]
    6b80:	mov	x2, #0xffffffffffffffff    	// #-1
    6b84:	cbz	x19, 6b94 <gcc_c_fe_context@@Base+0x6d4>
    6b88:	mov	x0, x19
    6b8c:	bl	5360 <strlen@plt>
    6b90:	add	x2, x19, x0
    6b94:	mov	w3, #0x0                   	// #0
    6b98:	mov	x1, x19
    6b9c:	add	x0, sp, #0x20
    6ba0:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6ba4:	mov	x0, #0x30                  	// #48
    6ba8:	bl	5550 <_Znwm@plt>
    6bac:	mov	x19, x0
    6bb0:	str	x20, [x0, #8]
    6bb4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    6bb8:	add	x1, x1, #0x468
    6bbc:	str	x1, [x0], #16
    6bc0:	add	x1, x0, #0x10
    6bc4:	str	x1, [x19, #16]
    6bc8:	ldr	x1, [sp, #32]
    6bcc:	mov	w3, #0x0                   	// #0
    6bd0:	ldr	x2, [sp, #40]
    6bd4:	add	x2, x1, x2
    6bd8:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6bdc:	str	x19, [x20, #128]
    6be0:	ldr	x0, [sp, #32]
    6be4:	add	x1, sp, #0x30
    6be8:	cmp	x0, x1
    6bec:	b.eq	6bf4 <gcc_c_fe_context@@Base+0x734>  // b.none
    6bf0:	bl	5540 <_ZdlPv@plt>
    6bf4:	mov	x0, #0x0                   	// #0
    6bf8:	ldp	x19, x20, [sp, #16]
    6bfc:	ldp	x29, x30, [sp], #64
    6c00:	ret
    6c04:	mov	x20, x0
    6c08:	mov	x1, #0x30                  	// #48
    6c0c:	mov	x0, x19
    6c10:	bl	5560 <_ZdlPvm@plt>
    6c14:	ldr	x0, [sp, #32]
    6c18:	add	x1, sp, #0x30
    6c1c:	cmp	x0, x1
    6c20:	b.eq	6c28 <gcc_c_fe_context@@Base+0x768>  // b.none
    6c24:	bl	5540 <_ZdlPv@plt>
    6c28:	mov	x0, x20
    6c2c:	bl	57e0 <_Unwind_Resume@plt>
    6c30:	mov	x20, x0
    6c34:	b	6c14 <gcc_c_fe_context@@Base+0x754>
    6c38:	stp	x29, x30, [sp, #-64]!
    6c3c:	mov	x29, sp
    6c40:	stp	x19, x20, [sp, #16]
    6c44:	mov	x20, x0
    6c48:	mov	x19, x1
    6c4c:	ldr	x0, [x0, #128]
    6c50:	cbz	x0, 6c60 <gcc_c_fe_context@@Base+0x7a0>
    6c54:	ldr	x1, [x0]
    6c58:	ldr	x1, [x1, #16]
    6c5c:	blr	x1
    6c60:	add	x0, sp, #0x30
    6c64:	str	x0, [sp, #32]
    6c68:	mov	x2, #0xffffffffffffffff    	// #-1
    6c6c:	cbz	x19, 6c7c <gcc_c_fe_context@@Base+0x7bc>
    6c70:	mov	x0, x19
    6c74:	bl	5360 <strlen@plt>
    6c78:	add	x2, x19, x0
    6c7c:	mov	w3, #0x0                   	// #0
    6c80:	mov	x1, x19
    6c84:	add	x0, sp, #0x20
    6c88:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6c8c:	mov	x0, #0x30                  	// #48
    6c90:	bl	5550 <_Znwm@plt>
    6c94:	mov	x19, x0
    6c98:	str	x20, [x0, #8]
    6c9c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    6ca0:	add	x1, x1, #0x440
    6ca4:	str	x1, [x0], #16
    6ca8:	add	x1, x0, #0x10
    6cac:	str	x1, [x19, #16]
    6cb0:	ldr	x1, [sp, #32]
    6cb4:	mov	w3, #0x0                   	// #0
    6cb8:	ldr	x2, [sp, #40]
    6cbc:	add	x2, x1, x2
    6cc0:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6cc4:	str	x19, [x20, #128]
    6cc8:	ldr	x0, [sp, #32]
    6ccc:	add	x1, sp, #0x30
    6cd0:	cmp	x0, x1
    6cd4:	b.eq	6cdc <gcc_c_fe_context@@Base+0x81c>  // b.none
    6cd8:	bl	5540 <_ZdlPv@plt>
    6cdc:	mov	x0, #0x0                   	// #0
    6ce0:	ldp	x19, x20, [sp, #16]
    6ce4:	ldp	x29, x30, [sp], #64
    6ce8:	ret
    6cec:	mov	x20, x0
    6cf0:	mov	x1, #0x30                  	// #48
    6cf4:	mov	x0, x19
    6cf8:	bl	5560 <_ZdlPvm@plt>
    6cfc:	ldr	x0, [sp, #32]
    6d00:	add	x1, sp, #0x30
    6d04:	cmp	x0, x1
    6d08:	b.eq	6d10 <gcc_c_fe_context@@Base+0x850>  // b.none
    6d0c:	bl	5540 <_ZdlPv@plt>
    6d10:	mov	x0, x20
    6d14:	bl	57e0 <_Unwind_Resume@plt>
    6d18:	mov	x20, x0
    6d1c:	b	6cfc <gcc_c_fe_context@@Base+0x83c>
    6d20:	stp	x29, x30, [sp, #-224]!
    6d24:	mov	x29, sp
    6d28:	stp	x19, x20, [sp, #16]
    6d2c:	stp	x21, x22, [sp, #32]
    6d30:	mov	x19, x0
    6d34:	mov	x22, x1
    6d38:	add	x3, sp, #0xd8
    6d3c:	mov	w2, #0x0                   	// #0
    6d40:	mov	w1, #0x1                   	// #1
    6d44:	mov	w0, w1
    6d48:	bl	52f0 <socketpair@plt>
    6d4c:	cbz	w0, 6d7c <gcc_c_fe_context@@Base+0x8bc>
    6d50:	ldr	x2, [x19, #48]
    6d54:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6d58:	add	x1, x1, #0x5c0
    6d5c:	ldr	x0, [x19, #56]
    6d60:	blr	x2
    6d64:	mov	w20, #0x0                   	// #0
    6d68:	mov	w0, w20
    6d6c:	ldp	x19, x20, [sp, #16]
    6d70:	ldp	x21, x22, [sp, #32]
    6d74:	ldp	x29, x30, [sp], #224
    6d78:	ret
    6d7c:	mov	w20, w0
    6d80:	add	x0, sp, #0xd0
    6d84:	bl	5310 <pipe@plt>
    6d88:	mov	w21, w0
    6d8c:	cbz	w0, 6db8 <gcc_c_fe_context@@Base+0x8f8>
    6d90:	ldr	x2, [x19, #48]
    6d94:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6d98:	add	x1, x1, #0x5e0
    6d9c:	ldr	x0, [x19, #56]
    6da0:	blr	x2
    6da4:	ldr	w0, [sp, #216]
    6da8:	bl	56b0 <close@plt>
    6dac:	ldr	w0, [sp, #220]
    6db0:	bl	56b0 <close@plt>
    6db4:	b	6d68 <gcc_c_fe_context@@Base+0x8a8>
    6db8:	stp	x23, x24, [sp, #48]
    6dbc:	add	x23, x19, #0x40
    6dc0:	add	x20, sp, #0x48
    6dc4:	add	x0, x20, #0x10
    6dc8:	str	x0, [sp, #72]
    6dcc:	mov	w3, #0x0                   	// #0
    6dd0:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6dd4:	add	x2, x2, #0x60d
    6dd8:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6ddc:	add	x1, x1, #0x5f8
    6de0:	mov	x0, x20
    6de4:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6de8:	mov	x1, x20
    6dec:	mov	x0, x23
    6df0:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6df4:	ldr	x0, [sp, #72]
    6df8:	add	x1, sp, #0x58
    6dfc:	cmp	x0, x1
    6e00:	b.eq	6e08 <gcc_c_fe_context@@Base+0x948>  // b.none
    6e04:	bl	5540 <_ZdlPv@plt>
    6e08:	add	x20, sp, #0x68
    6e0c:	ldr	w3, [sp, #220]
    6e10:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6e14:	add	x2, x2, #0x610
    6e18:	mov	x1, #0x64                  	// #100
    6e1c:	mov	x0, x20
    6e20:	bl	55b0 <snprintf@plt>
    6e24:	add	x24, sp, #0x48
    6e28:	add	x0, sp, #0x58
    6e2c:	str	x0, [sp, #72]
    6e30:	mov	x0, x20
    6e34:	bl	5360 <strlen@plt>
    6e38:	mov	w3, #0x0                   	// #0
    6e3c:	add	x2, x20, x0
    6e40:	mov	x1, x20
    6e44:	mov	x0, x24
    6e48:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6e4c:	mov	x1, x24
    6e50:	mov	x0, x23
    6e54:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6e58:	ldr	x0, [sp, #72]
    6e5c:	add	x1, sp, #0x58
    6e60:	cmp	x0, x1
    6e64:	b.eq	6e6c <gcc_c_fe_context@@Base+0x9ac>  // b.none
    6e68:	bl	5540 <_ZdlPv@plt>
    6e6c:	ldr	x0, [x19, #72]
    6e70:	ldr	x1, [x19, #80]
    6e74:	cmp	x0, x1
    6e78:	b.eq	6edc <gcc_c_fe_context@@Base+0xa1c>  // b.none
    6e7c:	add	x1, x0, #0x10
    6e80:	str	x1, [x0]
    6e84:	ldr	x1, [x19, #88]
    6e88:	ldr	x2, [x19, #96]
    6e8c:	mov	w3, #0x0                   	// #0
    6e90:	add	x2, x1, x2
    6e94:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6e98:	ldr	x0, [x19, #72]
    6e9c:	add	x0, x0, #0x20
    6ea0:	str	x0, [x19, #72]
    6ea4:	add	x20, sp, #0x48
    6ea8:	add	x0, x20, #0x10
    6eac:	str	x0, [sp, #72]
    6eb0:	mov	w3, #0x0                   	// #0
    6eb4:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6eb8:	add	x2, x2, #0x632
    6ebc:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6ec0:	add	x1, x1, #0x630
    6ec4:	mov	x0, x20
    6ec8:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6ecc:	mov	x1, x20
    6ed0:	mov	x0, x23
    6ed4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6ed8:	b	6ef0 <gcc_c_fe_context@@Base+0xa30>
    6edc:	add	x2, x19, #0x58
    6ee0:	mov	x1, x0
    6ee4:	mov	x0, x23
    6ee8:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6eec:	b	6ea4 <gcc_c_fe_context@@Base+0x9e4>
    6ef0:	ldr	x0, [sp, #72]
    6ef4:	add	x1, sp, #0x58
    6ef8:	cmp	x0, x1
    6efc:	b.eq	6f04 <gcc_c_fe_context@@Base+0xa44>  // b.none
    6f00:	bl	5540 <_ZdlPv@plt>
    6f04:	add	x20, sp, #0x48
    6f08:	add	x0, x20, #0x10
    6f0c:	str	x0, [sp, #72]
    6f10:	mov	w3, #0x0                   	// #0
    6f14:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6f18:	add	x2, x2, #0x63a
    6f1c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6f20:	add	x1, x1, #0x638
    6f24:	mov	x0, x20
    6f28:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6f2c:	mov	x1, x20
    6f30:	mov	x0, x23
    6f34:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6f38:	ldr	x0, [sp, #72]
    6f3c:	add	x1, sp, #0x58
    6f40:	cmp	x0, x1
    6f44:	b.eq	6f4c <gcc_c_fe_context@@Base+0xa8c>  // b.none
    6f48:	bl	5540 <_ZdlPv@plt>
    6f4c:	add	x0, sp, #0x58
    6f50:	str	x0, [sp, #72]
    6f54:	mov	x2, #0xffffffffffffffff    	// #-1
    6f58:	cbz	x22, 6f68 <gcc_c_fe_context@@Base+0xaa8>
    6f5c:	mov	x0, x22
    6f60:	bl	5360 <strlen@plt>
    6f64:	add	x2, x22, x0
    6f68:	add	x20, sp, #0x48
    6f6c:	mov	w3, #0x0                   	// #0
    6f70:	mov	x1, x22
    6f74:	mov	x0, x20
    6f78:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6f7c:	mov	x1, x20
    6f80:	mov	x0, x23
    6f84:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6f88:	ldr	x0, [sp, #72]
    6f8c:	add	x1, sp, #0x58
    6f90:	cmp	x0, x1
    6f94:	b.eq	6f9c <gcc_c_fe_context@@Base+0xadc>  // b.none
    6f98:	bl	5540 <_ZdlPv@plt>
    6f9c:	ldrb	w0, [x19, #120]
    6fa0:	cbz	w0, 6fec <gcc_c_fe_context@@Base+0xb2c>
    6fa4:	add	x20, sp, #0x48
    6fa8:	add	x0, x20, #0x10
    6fac:	str	x0, [sp, #72]
    6fb0:	mov	w3, #0x0                   	// #0
    6fb4:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    6fb8:	add	x2, x2, #0x642
    6fbc:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    6fc0:	add	x1, x1, #0x640
    6fc4:	mov	x0, x20
    6fc8:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6fcc:	mov	x1, x20
    6fd0:	mov	x0, x23
    6fd4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6fd8:	ldr	x0, [sp, #72]
    6fdc:	add	x1, sp, #0x58
    6fe0:	cmp	x0, x1
    6fe4:	b.eq	6fec <gcc_c_fe_context@@Base+0xb2c>  // b.none
    6fe8:	bl	5540 <_ZdlPv@plt>
    6fec:	mov	x0, #0x20                  	// #32
    6ff0:	bl	5550 <_Znwm@plt>
    6ff4:	mov	x20, x0
    6ff8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    6ffc:	ldr	x0, [x0, #3344]
    7000:	add	x0, x0, #0x10
    7004:	str	x0, [x20]
    7008:	ldr	w0, [sp, #216]
    700c:	str	w0, [x20, #8]
    7010:	ldr	w0, [sp, #208]
    7014:	str	w0, [x20, #12]
    7018:	add	x22, x20, #0x10
    701c:	mov	x0, x22
    7020:	bl	d208 <gcc_cp_fe_context@@Base+0x3ad8>
    7024:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7028:	add	x0, x0, #0x3f0
    702c:	str	x0, [x20]
    7030:	str	x19, [x20, #24]
    7034:	str	x20, [x19, #16]
    7038:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x88>
    703c:	add	x2, x2, #0x21c
    7040:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    7044:	add	x1, x1, #0x648
    7048:	mov	x0, x22
    704c:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    7050:	ldr	x0, [x19, #16]
    7054:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x88>
    7058:	add	x2, x2, #0x100
    705c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    7060:	add	x1, x1, #0x658
    7064:	add	x0, x0, #0x10
    7068:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    706c:	ldr	x0, [x19, #72]
    7070:	ldr	x1, [x19, #64]
    7074:	sub	x0, x0, x1
    7078:	asr	x0, x0, #5
    707c:	add	x0, x0, #0x1
    7080:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    7084:	cmp	x0, x1
    7088:	b.hi	7168 <gcc_c_fe_context@@Base+0xca8>  // b.pmore
    708c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7090:	ldr	x1, [x1, #3256]
    7094:	lsl	x0, x0, #3
    7098:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    709c:	mov	x20, x0
    70a0:	cbz	x0, 7220 <gcc_c_fe_context@@Base+0xd60>
    70a4:	ldr	x5, [x19, #64]
    70a8:	ldr	x0, [x19, #72]
    70ac:	sub	x0, x0, x5
    70b0:	asr	x4, x0, #5
    70b4:	cmp	xzr, x0, asr #5
    70b8:	b.eq	70e0 <gcc_c_fe_context@@Base+0xc20>  // b.none
    70bc:	mov	w1, #0x0                   	// #0
    70c0:	mov	x2, #0x0                   	// #0
    70c4:	lsl	x3, x2, #5
    70c8:	ldr	x3, [x5, x3]
    70cc:	str	x3, [x20, x2, lsl #3]
    70d0:	add	w1, w1, #0x1
    70d4:	mov	w2, w1
    70d8:	cmp	x4, w1, uxtw
    70dc:	b.hi	70c4 <gcc_c_fe_context@@Base+0xc04>  // b.pmore
    70e0:	str	xzr, [x20, x4, lsl #3]
    70e4:	bl	5680 <fork@plt>
    70e8:	mov	w22, w0
    70ec:	cmn	w0, #0x1
    70f0:	b.eq	716c <gcc_c_fe_context@@Base+0xcac>  // b.none
    70f4:	cbz	w0, 7198 <gcc_c_fe_context@@Base+0xcd8>
    70f8:	ldr	w0, [sp, #220]
    70fc:	bl	56b0 <close@plt>
    7100:	ldr	w0, [sp, #212]
    7104:	bl	56b0 <close@plt>
    7108:	mov	w1, #0x48                  	// #72
    710c:	ldr	x0, [x19, #16]
    7110:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7114:	mov	w20, w0
    7118:	cbnz	w0, 71dc <gcc_c_fe_context@@Base+0xd1c>
    711c:	ldr	w0, [sp, #216]
    7120:	bl	56b0 <close@plt>
    7124:	ldr	w0, [sp, #208]
    7128:	bl	56b0 <close@plt>
    712c:	mov	w2, #0x0                   	// #0
    7130:	add	x1, sp, #0x48
    7134:	mov	w0, w22
    7138:	bl	53b0 <waitpid@plt>
    713c:	cmn	w0, #0x1
    7140:	b.eq	7204 <gcc_c_fe_context@@Base+0xd44>  // b.none
    7144:	ldr	w0, [sp, #72]
    7148:	ubfx	x1, x0, #8, #8
    714c:	and	w0, w0, #0x7f
    7150:	orr	w0, w1, w0
    7154:	cmp	w20, #0x0
    7158:	cset	w20, ne  // ne = any
    715c:	cbnz	w0, 7214 <gcc_c_fe_context@@Base+0xd54>
    7160:	ldp	x23, x24, [sp, #48]
    7164:	b	6d68 <gcc_c_fe_context@@Base+0x8a8>
    7168:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    716c:	ldr	w0, [sp, #216]
    7170:	bl	56b0 <close@plt>
    7174:	ldr	w0, [sp, #220]
    7178:	bl	56b0 <close@plt>
    717c:	ldr	w0, [sp, #208]
    7180:	bl	56b0 <close@plt>
    7184:	ldr	w0, [sp, #212]
    7188:	bl	56b0 <close@plt>
    718c:	mov	w20, w21
    7190:	ldp	x23, x24, [sp, #48]
    7194:	b	6d68 <gcc_c_fe_context@@Base+0x8a8>
    7198:	mov	w1, #0x1                   	// #1
    719c:	ldr	w0, [sp, #212]
    71a0:	bl	5320 <dup2@plt>
    71a4:	mov	w1, #0x2                   	// #2
    71a8:	ldr	w0, [sp, #212]
    71ac:	bl	5320 <dup2@plt>
    71b0:	ldr	w0, [sp, #208]
    71b4:	bl	56b0 <close@plt>
    71b8:	ldr	w0, [sp, #212]
    71bc:	bl	56b0 <close@plt>
    71c0:	ldr	w0, [sp, #216]
    71c4:	bl	56b0 <close@plt>
    71c8:	mov	x1, x20
    71cc:	ldr	x0, [x20]
    71d0:	bl	52e0 <execvp@plt>
    71d4:	mov	w0, #0x7f                  	// #127
    71d8:	bl	5490 <_exit@plt>
    71dc:	mov	x1, #0x1                   	// #1
    71e0:	ldr	x0, [x19, #16]
    71e4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    71e8:	mov	w20, w0
    71ec:	cbz	w0, 711c <gcc_c_fe_context@@Base+0xc5c>
    71f0:	mov	w1, #0x0                   	// #0
    71f4:	ldr	x0, [x19, #16]
    71f8:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    71fc:	mov	w20, w0
    7200:	b	711c <gcc_c_fe_context@@Base+0xc5c>
    7204:	bl	5620 <__errno_location@plt>
    7208:	ldr	w0, [x0]
    720c:	cmp	w0, #0x4
    7210:	b.eq	7144 <gcc_c_fe_context@@Base+0xc84>  // b.none
    7214:	mov	w20, w21
    7218:	ldp	x23, x24, [sp, #48]
    721c:	b	6d68 <gcc_c_fe_context@@Base+0x8a8>
    7220:	mov	w20, w21
    7224:	ldp	x23, x24, [sp, #48]
    7228:	b	6d68 <gcc_c_fe_context@@Base+0x8a8>
    722c:	mov	x19, x0
    7230:	ldr	x0, [sp, #72]
    7234:	add	x1, sp, #0x58
    7238:	cmp	x0, x1
    723c:	b.eq	7244 <gcc_c_fe_context@@Base+0xd84>  // b.none
    7240:	bl	5540 <_ZdlPv@plt>
    7244:	mov	x0, x19
    7248:	bl	57e0 <_Unwind_Resume@plt>
    724c:	mov	x19, x0
    7250:	ldr	x0, [sp, #72]
    7254:	add	x1, sp, #0x58
    7258:	cmp	x0, x1
    725c:	b.eq	7264 <gcc_c_fe_context@@Base+0xda4>  // b.none
    7260:	bl	5540 <_ZdlPv@plt>
    7264:	mov	x0, x19
    7268:	bl	57e0 <_Unwind_Resume@plt>
    726c:	mov	x19, x0
    7270:	ldr	x0, [sp, #72]
    7274:	add	x1, sp, #0x58
    7278:	cmp	x0, x1
    727c:	b.eq	7284 <gcc_c_fe_context@@Base+0xdc4>  // b.none
    7280:	bl	5540 <_ZdlPv@plt>
    7284:	mov	x0, x19
    7288:	bl	57e0 <_Unwind_Resume@plt>
    728c:	mov	x19, x0
    7290:	ldr	x0, [sp, #72]
    7294:	add	x1, sp, #0x58
    7298:	cmp	x0, x1
    729c:	b.eq	72a4 <gcc_c_fe_context@@Base+0xde4>  // b.none
    72a0:	bl	5540 <_ZdlPv@plt>
    72a4:	mov	x0, x19
    72a8:	bl	57e0 <_Unwind_Resume@plt>
    72ac:	mov	x19, x0
    72b0:	ldr	x0, [sp, #72]
    72b4:	add	x1, sp, #0x58
    72b8:	cmp	x0, x1
    72bc:	b.eq	72c4 <gcc_c_fe_context@@Base+0xe04>  // b.none
    72c0:	bl	5540 <_ZdlPv@plt>
    72c4:	mov	x0, x19
    72c8:	bl	57e0 <_Unwind_Resume@plt>
    72cc:	mov	x19, x0
    72d0:	ldr	x0, [sp, #72]
    72d4:	add	x1, sp, #0x58
    72d8:	cmp	x0, x1
    72dc:	b.eq	72e4 <gcc_c_fe_context@@Base+0xe24>  // b.none
    72e0:	bl	5540 <_ZdlPv@plt>
    72e4:	mov	x0, x19
    72e8:	bl	57e0 <_Unwind_Resume@plt>
    72ec:	mov	x19, x0
    72f0:	mov	x1, #0x20                  	// #32
    72f4:	mov	x0, x20
    72f8:	bl	5560 <_ZdlPvm@plt>
    72fc:	mov	x0, x19
    7300:	bl	57e0 <_Unwind_Resume@plt>
    7304:	stp	x29, x30, [sp, #-16]!
    7308:	mov	x29, sp
    730c:	cmp	w2, #0x0
    7310:	cset	w2, ne  // ne = any
    7314:	strb	w2, [x0, #120]
    7318:	bl	6d20 <gcc_c_fe_context@@Base+0x860>
    731c:	ldp	x29, x30, [sp], #16
    7320:	ret
    7324:	stp	x29, x30, [sp, #-144]!
    7328:	mov	x29, sp
    732c:	stp	x19, x20, [sp, #16]
    7330:	stp	x21, x22, [sp, #32]
    7334:	stp	x23, x24, [sp, #48]
    7338:	stp	x25, x26, [sp, #64]
    733c:	mov	x19, x0
    7340:	mov	w22, w1
    7344:	mov	x21, x2
    7348:	add	x1, sp, #0x70
    734c:	add	x0, x1, #0x10
    7350:	str	x0, [sp, #112]
    7354:	str	xzr, [sp, #120]
    7358:	strb	wzr, [sp, #128]
    735c:	ldr	x0, [x19, #128]
    7360:	ldr	x2, [x0]
    7364:	ldr	x2, [x2]
    7368:	blr	x2
    736c:	mov	x23, x0
    7370:	cbz	x0, 73a4 <gcc_c_fe_context@@Base+0xee4>
    7374:	ldr	x0, [sp, #112]
    7378:	add	x1, sp, #0x80
    737c:	cmp	x0, x1
    7380:	b.eq	7388 <gcc_c_fe_context@@Base+0xec8>  // b.none
    7384:	bl	5540 <_ZdlPv@plt>
    7388:	mov	x0, x23
    738c:	ldp	x19, x20, [sp, #16]
    7390:	ldp	x21, x22, [sp, #32]
    7394:	ldp	x23, x24, [sp, #48]
    7398:	ldp	x25, x26, [sp, #64]
    739c:	ldp	x29, x30, [sp], #144
    73a0:	ret
    73a4:	add	x25, x19, #0x40
    73a8:	ldr	x0, [x25, #8]
    73ac:	ldr	x1, [x25, #16]
    73b0:	cmp	x0, x1
    73b4:	b.eq	7408 <gcc_c_fe_context@@Base+0xf48>  // b.none
    73b8:	add	x1, x0, #0x10
    73bc:	str	x1, [x0]
    73c0:	ldr	x1, [sp, #112]
    73c4:	mov	w3, #0x0                   	// #0
    73c8:	ldr	x2, [sp, #120]
    73cc:	add	x2, x1, x2
    73d0:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    73d4:	ldr	x0, [x25, #8]
    73d8:	add	x0, x0, #0x20
    73dc:	str	x0, [x25, #8]
    73e0:	cmp	w22, #0x0
    73e4:	b.le	7374 <gcc_c_fe_context@@Base+0xeb4>
    73e8:	mov	x20, x21
    73ec:	sub	w22, w22, #0x1
    73f0:	add	x21, x21, #0x8
    73f4:	add	x21, x21, x22, lsl #3
    73f8:	add	x22, sp, #0x50
    73fc:	add	x24, x22, #0x10
    7400:	mov	x26, #0xffffffffffffffff    	// #-1
    7404:	b	7444 <gcc_c_fe_context@@Base+0xf84>
    7408:	add	x2, sp, #0x70
    740c:	mov	x1, x0
    7410:	mov	x0, x25
    7414:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7418:	b	73e0 <gcc_c_fe_context@@Base+0xf20>
    741c:	mov	x1, x22
    7420:	mov	x0, x25
    7424:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    7428:	ldr	x0, [sp, #80]
    742c:	cmp	x0, x24
    7430:	b.eq	7438 <gcc_c_fe_context@@Base+0xf78>  // b.none
    7434:	bl	5540 <_ZdlPv@plt>
    7438:	add	x20, x20, #0x8
    743c:	cmp	x20, x21
    7440:	b.eq	7374 <gcc_c_fe_context@@Base+0xeb4>  // b.none
    7444:	ldr	x19, [x20]
    7448:	str	x24, [sp, #80]
    744c:	mov	x2, x26
    7450:	cbz	x19, 7460 <gcc_c_fe_context@@Base+0xfa0>
    7454:	mov	x0, x19
    7458:	bl	5360 <strlen@plt>
    745c:	add	x2, x19, x0
    7460:	mov	w3, #0x0                   	// #0
    7464:	mov	x1, x19
    7468:	mov	x0, x22
    746c:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    7470:	b	741c <gcc_c_fe_context@@Base+0xf5c>
    7474:	mov	x19, x0
    7478:	ldr	x0, [sp, #80]
    747c:	add	x1, sp, #0x60
    7480:	cmp	x0, x1
    7484:	b.eq	748c <gcc_c_fe_context@@Base+0xfcc>  // b.none
    7488:	bl	5540 <_ZdlPv@plt>
    748c:	ldr	x0, [sp, #112]
    7490:	add	x1, sp, #0x80
    7494:	cmp	x0, x1
    7498:	b.eq	74a0 <gcc_c_fe_context@@Base+0xfe0>  // b.none
    749c:	bl	5540 <_ZdlPv@plt>
    74a0:	mov	x0, x19
    74a4:	bl	57e0 <_Unwind_Resume@plt>
    74a8:	mov	x19, x0
    74ac:	b	748c <gcc_c_fe_context@@Base+0xfcc>
    74b0:	stp	x29, x30, [sp, #-48]!
    74b4:	mov	x29, sp
    74b8:	stp	x19, x20, [sp, #16]
    74bc:	str	x21, [sp, #32]
    74c0:	mov	x19, x0
    74c4:	mov	w20, w2
    74c8:	mov	x21, x3
    74cc:	bl	6c38 <gcc_c_fe_context@@Base+0x778>
    74d0:	cbz	x0, 74e4 <gcc_c_fe_context@@Base+0x1024>
    74d4:	ldp	x19, x20, [sp, #16]
    74d8:	ldr	x21, [sp, #32]
    74dc:	ldp	x29, x30, [sp], #48
    74e0:	ret
    74e4:	mov	x2, x21
    74e8:	mov	w1, w20
    74ec:	mov	x0, x19
    74f0:	bl	7324 <gcc_c_fe_context@@Base+0xe64>
    74f4:	b	74d4 <gcc_c_fe_context@@Base+0x1014>
    74f8:	ret
    74fc:	stp	x29, x30, [sp, #-16]!
    7500:	mov	x29, sp
    7504:	ldr	x0, [x0, #24]
    7508:	ldr	x2, [x0, #48]
    750c:	ldr	x0, [x0, #56]
    7510:	blr	x2
    7514:	ldp	x29, x30, [sp], #16
    7518:	ret
    751c:	mov	x1, x0
    7520:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    7524:	add	x2, x2, #0x468
    7528:	str	x2, [x1], #16
    752c:	ldr	x0, [x0, #16]
    7530:	add	x1, x1, #0x10
    7534:	cmp	x0, x1
    7538:	b.eq	7550 <gcc_c_fe_context@@Base+0x1090>  // b.none
    753c:	stp	x29, x30, [sp, #-16]!
    7540:	mov	x29, sp
    7544:	bl	5540 <_ZdlPv@plt>
    7548:	ldp	x29, x30, [sp], #16
    754c:	ret
    7550:	ret
    7554:	mov	x1, x0
    7558:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    755c:	add	x2, x2, #0x440
    7560:	str	x2, [x1], #16
    7564:	ldr	x0, [x0, #16]
    7568:	add	x1, x1, #0x10
    756c:	cmp	x0, x1
    7570:	b.eq	7588 <gcc_c_fe_context@@Base+0x10c8>  // b.none
    7574:	stp	x29, x30, [sp, #-16]!
    7578:	mov	x29, sp
    757c:	bl	5540 <_ZdlPv@plt>
    7580:	ldp	x29, x30, [sp], #16
    7584:	ret
    7588:	ret
    758c:	stp	x29, x30, [sp, #-16]!
    7590:	mov	x29, sp
    7594:	mov	x1, #0x10                  	// #16
    7598:	bl	5560 <_ZdlPvm@plt>
    759c:	ldp	x29, x30, [sp], #16
    75a0:	ret
    75a4:	stp	x29, x30, [sp, #-32]!
    75a8:	mov	x29, sp
    75ac:	str	x19, [sp, #16]
    75b0:	mov	x19, x0
    75b4:	mov	x1, x0
    75b8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    75bc:	add	x0, x0, #0x468
    75c0:	str	x0, [x1], #16
    75c4:	ldr	x0, [x19, #16]
    75c8:	add	x1, x1, #0x10
    75cc:	cmp	x0, x1
    75d0:	b.eq	75d8 <gcc_c_fe_context@@Base+0x1118>  // b.none
    75d4:	bl	5540 <_ZdlPv@plt>
    75d8:	mov	x1, #0x30                  	// #48
    75dc:	mov	x0, x19
    75e0:	bl	5560 <_ZdlPvm@plt>
    75e4:	ldr	x19, [sp, #16]
    75e8:	ldp	x29, x30, [sp], #32
    75ec:	ret
    75f0:	stp	x29, x30, [sp, #-32]!
    75f4:	mov	x29, sp
    75f8:	str	x19, [sp, #16]
    75fc:	mov	x19, x0
    7600:	mov	x1, x0
    7604:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7608:	add	x0, x0, #0x440
    760c:	str	x0, [x1], #16
    7610:	ldr	x0, [x19, #16]
    7614:	add	x1, x1, #0x10
    7618:	cmp	x0, x1
    761c:	b.eq	7624 <gcc_c_fe_context@@Base+0x1164>  // b.none
    7620:	bl	5540 <_ZdlPv@plt>
    7624:	mov	x1, #0x30                  	// #48
    7628:	mov	x0, x19
    762c:	bl	5560 <_ZdlPvm@plt>
    7630:	ldr	x19, [sp, #16]
    7634:	ldp	x29, x30, [sp], #32
    7638:	ret
    763c:	stp	x29, x30, [sp, #-16]!
    7640:	mov	x29, sp
    7644:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7648:	add	x1, x1, #0x3f0
    764c:	str	x1, [x0]
    7650:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3bb8>
    7654:	ldp	x29, x30, [sp], #16
    7658:	ret
    765c:	stp	x29, x30, [sp, #-32]!
    7660:	mov	x29, sp
    7664:	str	x19, [sp, #16]
    7668:	mov	x19, x0
    766c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7670:	add	x1, x1, #0x3f0
    7674:	str	x1, [x0]
    7678:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3bb8>
    767c:	mov	x1, #0x20                  	// #32
    7680:	mov	x0, x19
    7684:	bl	5560 <_ZdlPvm@plt>
    7688:	ldr	x19, [sp, #16]
    768c:	ldp	x29, x30, [sp], #32
    7690:	ret
    7694:	stp	x29, x30, [sp, #-48]!
    7698:	mov	x29, sp
    769c:	str	x19, [sp, #16]
    76a0:	mov	x19, x1
    76a4:	add	x1, sp, #0x28
    76a8:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    76ac:	cbz	w0, 76bc <gcc_c_fe_context@@Base+0x11fc>
    76b0:	ldr	x0, [sp, #40]
    76b4:	str	x0, [x19]
    76b8:	mov	w0, #0x1                   	// #1
    76bc:	ldr	x19, [sp, #16]
    76c0:	ldp	x29, x30, [sp], #48
    76c4:	ret
    76c8:	stp	x29, x30, [sp, #-48]!
    76cc:	mov	x29, sp
    76d0:	stp	x19, x20, [sp, #16]
    76d4:	str	x21, [sp, #32]
    76d8:	mov	x19, x0
    76dc:	mov	x20, x1
    76e0:	mov	x21, x2
    76e4:	mov	w1, #0x51                  	// #81
    76e8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    76ec:	cbnz	w0, 7700 <gcc_c_fe_context@@Base+0x1240>
    76f0:	ldp	x19, x20, [sp, #16]
    76f4:	ldr	x21, [sp, #32]
    76f8:	ldp	x29, x30, [sp], #48
    76fc:	ret
    7700:	mov	x1, x20
    7704:	mov	x0, x19
    7708:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    770c:	cbz	w0, 76f0 <gcc_c_fe_context@@Base+0x1230>
    7710:	mov	x1, #0x0                   	// #0
    7714:	mov	x0, x19
    7718:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    771c:	cbz	w0, 76f0 <gcc_c_fe_context@@Base+0x1230>
    7720:	mov	w1, #0x1                   	// #1
    7724:	mov	x0, x19
    7728:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    772c:	cbz	w0, 76f0 <gcc_c_fe_context@@Base+0x1230>
    7730:	mov	x1, x21
    7734:	mov	x0, x19
    7738:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    773c:	cmp	w0, #0x0
    7740:	cset	w0, ne  // ne = any
    7744:	b	76f0 <gcc_c_fe_context@@Base+0x1230>
    7748:	stp	x29, x30, [sp, #-32]!
    774c:	mov	x29, sp
    7750:	add	x2, sp, #0x18
    7754:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7758:	ldr	x1, [x1, #3568]
    775c:	ldr	x1, [x1]
    7760:	ldr	x0, [x0, #16]
    7764:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    7768:	cmp	w0, #0x0
    776c:	ldr	x0, [sp, #24]
    7770:	csel	x0, x0, xzr, ne  // ne = any
    7774:	ldp	x29, x30, [sp], #32
    7778:	ret
    777c:	stp	x29, x30, [sp, #-32]!
    7780:	mov	x29, sp
    7784:	add	x2, sp, #0x18
    7788:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    778c:	ldr	x1, [x1, #3856]
    7790:	ldr	x1, [x1]
    7794:	ldr	x0, [x0, #16]
    7798:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    779c:	cmp	w0, #0x0
    77a0:	ldr	x0, [sp, #24]
    77a4:	csel	x0, x0, xzr, ne  // ne = any
    77a8:	ldp	x29, x30, [sp], #32
    77ac:	ret
    77b0:	stp	x29, x30, [sp, #-32]!
    77b4:	mov	x29, sp
    77b8:	add	x2, sp, #0x18
    77bc:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    77c0:	ldr	x1, [x1, #3304]
    77c4:	ldr	x1, [x1]
    77c8:	ldr	x0, [x0, #16]
    77cc:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    77d0:	cmp	w0, #0x0
    77d4:	ldr	x0, [sp, #24]
    77d8:	csel	x0, x0, xzr, ne  // ne = any
    77dc:	ldp	x29, x30, [sp], #32
    77e0:	ret
    77e4:	stp	x29, x30, [sp, #-32]!
    77e8:	mov	x29, sp
    77ec:	add	x2, sp, #0x18
    77f0:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    77f4:	ldr	x1, [x1, #3200]
    77f8:	ldr	x1, [x1]
    77fc:	ldr	x0, [x0, #16]
    7800:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    7804:	cmp	w0, #0x0
    7808:	ldr	x0, [sp, #24]
    780c:	csel	x0, x0, xzr, ne  // ne = any
    7810:	ldp	x29, x30, [sp], #32
    7814:	ret
    7818:	stp	x29, x30, [sp, #-32]!
    781c:	mov	x29, sp
    7820:	add	x2, sp, #0x18
    7824:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7828:	ldr	x1, [x1, #3920]
    782c:	ldr	x1, [x1]
    7830:	ldr	x0, [x0, #16]
    7834:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    7838:	cmp	w0, #0x0
    783c:	ldr	x0, [sp, #24]
    7840:	csel	x0, x0, xzr, ne  // ne = any
    7844:	ldp	x29, x30, [sp], #32
    7848:	ret
    784c:	stp	x29, x30, [sp, #-64]!
    7850:	mov	x29, sp
    7854:	stp	x19, x20, [sp, #16]
    7858:	str	x21, [sp, #32]
    785c:	mov	x20, x1
    7860:	ldr	x19, [x0, #16]
    7864:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7868:	ldr	x0, [x0, #3192]
    786c:	ldr	x21, [x0]
    7870:	mov	w1, #0x51                  	// #81
    7874:	mov	x0, x19
    7878:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    787c:	cbnz	w0, 7888 <gcc_c_fe_context@@Base+0x13c8>
    7880:	mov	x0, #0x0                   	// #0
    7884:	b	78dc <gcc_c_fe_context@@Base+0x141c>
    7888:	mov	x1, x21
    788c:	mov	x0, x19
    7890:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7894:	cbz	w0, 7880 <gcc_c_fe_context@@Base+0x13c0>
    7898:	mov	x1, #0x1                   	// #1
    789c:	mov	x0, x19
    78a0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    78a4:	cbz	w0, 7880 <gcc_c_fe_context@@Base+0x13c0>
    78a8:	mov	x1, x20
    78ac:	mov	x0, x19
    78b0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    78b4:	cbz	w0, 7880 <gcc_c_fe_context@@Base+0x13c0>
    78b8:	mov	w1, #0x1                   	// #1
    78bc:	mov	x0, x19
    78c0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    78c4:	cbz	w0, 7880 <gcc_c_fe_context@@Base+0x13c0>
    78c8:	add	x1, sp, #0x38
    78cc:	mov	x0, x19
    78d0:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    78d4:	cbz	w0, 78ec <gcc_c_fe_context@@Base+0x142c>
    78d8:	ldr	x0, [sp, #56]
    78dc:	ldp	x19, x20, [sp, #16]
    78e0:	ldr	x21, [sp, #32]
    78e4:	ldp	x29, x30, [sp], #64
    78e8:	ret
    78ec:	mov	x0, #0x0                   	// #0
    78f0:	b	78dc <gcc_c_fe_context@@Base+0x141c>
    78f4:	stp	x29, x30, [sp, #-64]!
    78f8:	mov	x29, sp
    78fc:	stp	x19, x20, [sp, #16]
    7900:	stp	x21, x22, [sp, #32]
    7904:	str	x23, [sp, #48]
    7908:	mov	x19, x0
    790c:	mov	x20, x1
    7910:	mov	x21, x2
    7914:	mov	x22, x3
    7918:	mov	w23, w4
    791c:	mov	w1, #0x51                  	// #81
    7920:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7924:	cbnz	w0, 793c <gcc_c_fe_context@@Base+0x147c>
    7928:	ldp	x19, x20, [sp, #16]
    792c:	ldp	x21, x22, [sp, #32]
    7930:	ldr	x23, [sp, #48]
    7934:	ldp	x29, x30, [sp], #64
    7938:	ret
    793c:	mov	x1, x20
    7940:	mov	x0, x19
    7944:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7948:	cbz	w0, 7928 <gcc_c_fe_context@@Base+0x1468>
    794c:	mov	x1, #0x2                   	// #2
    7950:	mov	x0, x19
    7954:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7958:	cbz	w0, 7928 <gcc_c_fe_context@@Base+0x1468>
    795c:	mov	x1, x22
    7960:	mov	x0, x19
    7964:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7968:	cbz	w0, 7928 <gcc_c_fe_context@@Base+0x1468>
    796c:	sxtw	x1, w23
    7970:	mov	x0, x19
    7974:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7978:	cbz	w0, 7928 <gcc_c_fe_context@@Base+0x1468>
    797c:	mov	w1, #0x1                   	// #1
    7980:	mov	x0, x19
    7984:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7988:	cbz	w0, 7928 <gcc_c_fe_context@@Base+0x1468>
    798c:	mov	x1, x21
    7990:	mov	x0, x19
    7994:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7998:	cmp	w0, #0x0
    799c:	cset	w0, ne  // ne = any
    79a0:	b	7928 <gcc_c_fe_context@@Base+0x1468>
    79a4:	stp	x29, x30, [sp, #-32]!
    79a8:	mov	x29, sp
    79ac:	mov	w4, w2
    79b0:	mov	x3, x1
    79b4:	add	x2, sp, #0x18
    79b8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    79bc:	ldr	x1, [x1, #3816]
    79c0:	ldr	x1, [x1]
    79c4:	ldr	x0, [x0, #16]
    79c8:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    79cc:	cmp	w0, #0x0
    79d0:	ldr	x0, [sp, #24]
    79d4:	csel	x0, x0, xzr, ne  // ne = any
    79d8:	ldp	x29, x30, [sp], #32
    79dc:	ret
    79e0:	stp	x29, x30, [sp, #-32]!
    79e4:	mov	x29, sp
    79e8:	mov	w4, w2
    79ec:	mov	x3, x1
    79f0:	add	x2, sp, #0x18
    79f4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    79f8:	ldr	x1, [x1, #3600]
    79fc:	ldr	x1, [x1]
    7a00:	ldr	x0, [x0, #16]
    7a04:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    7a08:	cmp	w0, #0x0
    7a0c:	ldr	x0, [sp, #24]
    7a10:	csel	x0, x0, xzr, ne  // ne = any
    7a14:	ldp	x29, x30, [sp], #32
    7a18:	ret
    7a1c:	stp	x29, x30, [sp, #-48]!
    7a20:	mov	x29, sp
    7a24:	stp	x19, x20, [sp, #16]
    7a28:	stp	x21, x22, [sp, #32]
    7a2c:	mov	x19, x0
    7a30:	mov	x20, x1
    7a34:	mov	x21, x2
    7a38:	mov	x22, x3
    7a3c:	mov	w1, #0x51                  	// #81
    7a40:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7a44:	cbnz	w0, 7a58 <gcc_c_fe_context@@Base+0x1598>
    7a48:	ldp	x19, x20, [sp, #16]
    7a4c:	ldp	x21, x22, [sp, #32]
    7a50:	ldp	x29, x30, [sp], #48
    7a54:	ret
    7a58:	mov	x1, x20
    7a5c:	mov	x0, x19
    7a60:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7a64:	cbz	w0, 7a48 <gcc_c_fe_context@@Base+0x1588>
    7a68:	mov	x1, #0x1                   	// #1
    7a6c:	mov	x0, x19
    7a70:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7a74:	cbz	w0, 7a48 <gcc_c_fe_context@@Base+0x1588>
    7a78:	mov	x1, x22
    7a7c:	mov	x0, x19
    7a80:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7a84:	cbz	w0, 7a48 <gcc_c_fe_context@@Base+0x1588>
    7a88:	mov	w1, #0x1                   	// #1
    7a8c:	mov	x0, x19
    7a90:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7a94:	cbz	w0, 7a48 <gcc_c_fe_context@@Base+0x1588>
    7a98:	mov	x1, x21
    7a9c:	mov	x0, x19
    7aa0:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7aa4:	cmp	w0, #0x0
    7aa8:	cset	w0, ne  // ne = any
    7aac:	b	7a48 <gcc_c_fe_context@@Base+0x1588>
    7ab0:	stp	x29, x30, [sp, #-32]!
    7ab4:	mov	x29, sp
    7ab8:	mov	x3, x1
    7abc:	add	x2, sp, #0x18
    7ac0:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7ac4:	ldr	x1, [x1, #3752]
    7ac8:	ldr	x1, [x1]
    7acc:	ldr	x0, [x0, #16]
    7ad0:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    7ad4:	cmp	w0, #0x0
    7ad8:	ldr	x0, [sp, #24]
    7adc:	csel	x0, x0, xzr, ne  // ne = any
    7ae0:	ldp	x29, x30, [sp], #32
    7ae4:	ret
    7ae8:	stp	x29, x30, [sp, #-32]!
    7aec:	mov	x29, sp
    7af0:	mov	x3, x1
    7af4:	add	x2, sp, #0x18
    7af8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7afc:	ldr	x1, [x1, #3936]
    7b00:	ldr	x1, [x1]
    7b04:	ldr	x0, [x0, #16]
    7b08:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    7b0c:	cmp	w0, #0x0
    7b10:	ldr	x0, [sp, #24]
    7b14:	csel	x0, x0, xzr, ne  // ne = any
    7b18:	ldp	x29, x30, [sp], #32
    7b1c:	ret
    7b20:	stp	x29, x30, [sp, #-32]!
    7b24:	mov	x29, sp
    7b28:	mov	x3, x1
    7b2c:	add	x2, sp, #0x18
    7b30:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    7b34:	ldr	x1, [x1, #3520]
    7b38:	ldr	x1, [x1]
    7b3c:	ldr	x0, [x0, #16]
    7b40:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    7b44:	cmp	w0, #0x0
    7b48:	ldr	x0, [sp, #24]
    7b4c:	csel	x0, x0, xzr, ne  // ne = any
    7b50:	ldp	x29, x30, [sp], #32
    7b54:	ret
    7b58:	stp	x29, x30, [sp, #-64]!
    7b5c:	mov	x29, sp
    7b60:	stp	x19, x20, [sp, #16]
    7b64:	stp	x21, x22, [sp, #32]
    7b68:	mov	x21, x1
    7b6c:	mov	x20, x2
    7b70:	ldr	x19, [x0, #16]
    7b74:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7b78:	ldr	x0, [x0, #3184]
    7b7c:	ldr	x22, [x0]
    7b80:	mov	w1, #0x51                  	// #81
    7b84:	mov	x0, x19
    7b88:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7b8c:	cbnz	w0, 7b98 <gcc_c_fe_context@@Base+0x16d8>
    7b90:	mov	x0, #0x0                   	// #0
    7b94:	b	7bfc <gcc_c_fe_context@@Base+0x173c>
    7b98:	mov	x1, x22
    7b9c:	mov	x0, x19
    7ba0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7ba4:	cbz	w0, 7b90 <gcc_c_fe_context@@Base+0x16d0>
    7ba8:	mov	x1, #0x2                   	// #2
    7bac:	mov	x0, x19
    7bb0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7bb4:	cbz	w0, 7b90 <gcc_c_fe_context@@Base+0x16d0>
    7bb8:	mov	x1, x21
    7bbc:	mov	x0, x19
    7bc0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7bc4:	cbz	w0, 7b90 <gcc_c_fe_context@@Base+0x16d0>
    7bc8:	mov	x1, x20
    7bcc:	mov	x0, x19
    7bd0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7bd4:	cbz	w0, 7b90 <gcc_c_fe_context@@Base+0x16d0>
    7bd8:	mov	w1, #0x1                   	// #1
    7bdc:	mov	x0, x19
    7be0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7be4:	cbz	w0, 7b90 <gcc_c_fe_context@@Base+0x16d0>
    7be8:	add	x1, sp, #0x38
    7bec:	mov	x0, x19
    7bf0:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7bf4:	cbz	w0, 7c0c <gcc_c_fe_context@@Base+0x174c>
    7bf8:	ldr	x0, [sp, #56]
    7bfc:	ldp	x19, x20, [sp, #16]
    7c00:	ldp	x21, x22, [sp, #32]
    7c04:	ldp	x29, x30, [sp], #64
    7c08:	ret
    7c0c:	mov	x0, #0x0                   	// #0
    7c10:	b	7bfc <gcc_c_fe_context@@Base+0x173c>
    7c14:	stp	x29, x30, [sp, #-80]!
    7c18:	mov	x29, sp
    7c1c:	stp	x19, x20, [sp, #16]
    7c20:	stp	x21, x22, [sp, #32]
    7c24:	str	x23, [sp, #48]
    7c28:	mov	x22, x1
    7c2c:	mov	x21, x2
    7c30:	mov	w20, w3
    7c34:	ldr	x19, [x0, #16]
    7c38:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7c3c:	ldr	x0, [x0, #3944]
    7c40:	ldr	x23, [x0]
    7c44:	mov	w1, #0x51                  	// #81
    7c48:	mov	x0, x19
    7c4c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7c50:	cbnz	w0, 7c5c <gcc_c_fe_context@@Base+0x179c>
    7c54:	mov	x0, #0x0                   	// #0
    7c58:	b	7cd0 <gcc_c_fe_context@@Base+0x1810>
    7c5c:	mov	x1, x23
    7c60:	mov	x0, x19
    7c64:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7c68:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7c6c:	mov	x1, #0x3                   	// #3
    7c70:	mov	x0, x19
    7c74:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7c78:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7c7c:	mov	x1, x22
    7c80:	mov	x0, x19
    7c84:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7c88:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7c8c:	mov	x1, x21
    7c90:	mov	x0, x19
    7c94:	bl	d91c <gcc_cp_fe_context@@Base+0x41ec>
    7c98:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7c9c:	sxtw	x1, w20
    7ca0:	mov	x0, x19
    7ca4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7ca8:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7cac:	mov	w1, #0x1                   	// #1
    7cb0:	mov	x0, x19
    7cb4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7cb8:	cbz	w0, 7c54 <gcc_c_fe_context@@Base+0x1794>
    7cbc:	add	x1, sp, #0x48
    7cc0:	mov	x0, x19
    7cc4:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7cc8:	cbz	w0, 7ce4 <gcc_c_fe_context@@Base+0x1824>
    7ccc:	ldr	x0, [sp, #72]
    7cd0:	ldp	x19, x20, [sp, #16]
    7cd4:	ldp	x21, x22, [sp, #32]
    7cd8:	ldr	x23, [sp, #48]
    7cdc:	ldp	x29, x30, [sp], #80
    7ce0:	ret
    7ce4:	mov	x0, #0x0                   	// #0
    7ce8:	b	7cd0 <gcc_c_fe_context@@Base+0x1810>
    7cec:	stp	x29, x30, [sp, #-112]!
    7cf0:	mov	x29, sp
    7cf4:	stp	x19, x20, [sp, #16]
    7cf8:	stp	x21, x22, [sp, #32]
    7cfc:	stp	x23, x24, [sp, #48]
    7d00:	stp	x25, x26, [sp, #64]
    7d04:	str	x27, [sp, #80]
    7d08:	mov	x20, x1
    7d0c:	mov	w21, w2
    7d10:	mov	x22, x3
    7d14:	mov	x23, x4
    7d18:	mov	x24, x5
    7d1c:	mov	x25, x6
    7d20:	mov	w26, w7
    7d24:	ldr	x19, [x0, #16]
    7d28:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7d2c:	ldr	x0, [x0, #3288]
    7d30:	ldr	x27, [x0]
    7d34:	mov	w1, #0x51                  	// #81
    7d38:	mov	x0, x19
    7d3c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7d40:	cbnz	w0, 7d4c <gcc_c_fe_context@@Base+0x188c>
    7d44:	mov	x0, #0x0                   	// #0
    7d48:	b	7e00 <gcc_c_fe_context@@Base+0x1940>
    7d4c:	mov	x1, x27
    7d50:	mov	x0, x19
    7d54:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7d58:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7d5c:	mov	x1, #0x7                   	// #7
    7d60:	mov	x0, x19
    7d64:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7d68:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7d6c:	mov	x1, x20
    7d70:	mov	x0, x19
    7d74:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7d78:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7d7c:	mov	w1, w21
    7d80:	mov	x0, x19
    7d84:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7d88:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7d8c:	mov	x1, x22
    7d90:	mov	x0, x19
    7d94:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7d98:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7d9c:	mov	x1, x23
    7da0:	mov	x0, x19
    7da4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7da8:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7dac:	mov	x1, x24
    7db0:	mov	x0, x19
    7db4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7db8:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7dbc:	mov	x1, x25
    7dc0:	mov	x0, x19
    7dc4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7dc8:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7dcc:	mov	w1, w26
    7dd0:	mov	x0, x19
    7dd4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7dd8:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7ddc:	mov	w1, #0x1                   	// #1
    7de0:	mov	x0, x19
    7de4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7de8:	cbz	w0, 7d44 <gcc_c_fe_context@@Base+0x1884>
    7dec:	add	x1, sp, #0x68
    7df0:	mov	x0, x19
    7df4:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7df8:	cbz	w0, 7e1c <gcc_c_fe_context@@Base+0x195c>
    7dfc:	ldr	x0, [sp, #104]
    7e00:	ldp	x19, x20, [sp, #16]
    7e04:	ldp	x21, x22, [sp, #32]
    7e08:	ldp	x23, x24, [sp, #48]
    7e0c:	ldp	x25, x26, [sp, #64]
    7e10:	ldr	x27, [sp, #80]
    7e14:	ldp	x29, x30, [sp], #112
    7e18:	ret
    7e1c:	mov	x0, #0x0                   	// #0
    7e20:	b	7e00 <gcc_c_fe_context@@Base+0x1940>
    7e24:	stp	x29, x30, [sp, #-64]!
    7e28:	mov	x29, sp
    7e2c:	stp	x19, x20, [sp, #16]
    7e30:	stp	x21, x22, [sp, #32]
    7e34:	mov	x21, x1
    7e38:	mov	x20, x2
    7e3c:	ldr	x19, [x0, #16]
    7e40:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7e44:	ldr	x0, [x0, #3224]
    7e48:	ldr	x22, [x0]
    7e4c:	mov	w1, #0x51                  	// #81
    7e50:	mov	x0, x19
    7e54:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7e58:	cbnz	w0, 7e64 <gcc_c_fe_context@@Base+0x19a4>
    7e5c:	mov	x0, #0x0                   	// #0
    7e60:	b	7ec8 <gcc_c_fe_context@@Base+0x1a08>
    7e64:	mov	x1, x22
    7e68:	mov	x0, x19
    7e6c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7e70:	cbz	w0, 7e5c <gcc_c_fe_context@@Base+0x199c>
    7e74:	mov	x1, #0x2                   	// #2
    7e78:	mov	x0, x19
    7e7c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7e80:	cbz	w0, 7e5c <gcc_c_fe_context@@Base+0x199c>
    7e84:	mov	x1, x21
    7e88:	mov	x0, x19
    7e8c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7e90:	cbz	w0, 7e5c <gcc_c_fe_context@@Base+0x199c>
    7e94:	mov	x1, x20
    7e98:	mov	x0, x19
    7e9c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7ea0:	cbz	w0, 7e5c <gcc_c_fe_context@@Base+0x199c>
    7ea4:	mov	w1, #0x1                   	// #1
    7ea8:	mov	x0, x19
    7eac:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7eb0:	cbz	w0, 7e5c <gcc_c_fe_context@@Base+0x199c>
    7eb4:	add	x1, sp, #0x38
    7eb8:	mov	x0, x19
    7ebc:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7ec0:	cbz	w0, 7ed8 <gcc_c_fe_context@@Base+0x1a18>
    7ec4:	ldr	x0, [sp, #56]
    7ec8:	ldp	x19, x20, [sp, #16]
    7ecc:	ldp	x21, x22, [sp, #32]
    7ed0:	ldp	x29, x30, [sp], #64
    7ed4:	ret
    7ed8:	mov	x0, #0x0                   	// #0
    7edc:	b	7ec8 <gcc_c_fe_context@@Base+0x1a08>
    7ee0:	stp	x29, x30, [sp, #-80]!
    7ee4:	mov	x29, sp
    7ee8:	stp	x19, x20, [sp, #16]
    7eec:	stp	x21, x22, [sp, #32]
    7ef0:	str	x23, [sp, #48]
    7ef4:	mov	w22, w1
    7ef8:	mov	x21, x2
    7efc:	mov	x20, x3
    7f00:	ldr	x19, [x0, #16]
    7f04:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7f08:	ldr	x0, [x0, #3832]
    7f0c:	ldr	x23, [x0]
    7f10:	mov	w1, #0x51                  	// #81
    7f14:	mov	x0, x19
    7f18:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7f1c:	cbnz	w0, 7f28 <gcc_c_fe_context@@Base+0x1a68>
    7f20:	mov	x0, #0x0                   	// #0
    7f24:	b	7f9c <gcc_c_fe_context@@Base+0x1adc>
    7f28:	mov	x1, x23
    7f2c:	mov	x0, x19
    7f30:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7f34:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f38:	mov	x1, #0x3                   	// #3
    7f3c:	mov	x0, x19
    7f40:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7f44:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f48:	sxtw	x1, w22
    7f4c:	mov	x0, x19
    7f50:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7f54:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f58:	mov	x1, x21
    7f5c:	mov	x0, x19
    7f60:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    7f64:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f68:	mov	x1, x20
    7f6c:	mov	x0, x19
    7f70:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    7f74:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f78:	mov	w1, #0x1                   	// #1
    7f7c:	mov	x0, x19
    7f80:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    7f84:	cbz	w0, 7f20 <gcc_c_fe_context@@Base+0x1a60>
    7f88:	add	x1, sp, #0x48
    7f8c:	mov	x0, x19
    7f90:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    7f94:	cbz	w0, 7fb0 <gcc_c_fe_context@@Base+0x1af0>
    7f98:	ldr	x0, [sp, #72]
    7f9c:	ldp	x19, x20, [sp, #16]
    7fa0:	ldp	x21, x22, [sp, #32]
    7fa4:	ldr	x23, [sp, #48]
    7fa8:	ldp	x29, x30, [sp], #80
    7fac:	ret
    7fb0:	mov	x0, #0x0                   	// #0
    7fb4:	b	7f9c <gcc_c_fe_context@@Base+0x1adc>
    7fb8:	stp	x29, x30, [sp, #-64]!
    7fbc:	mov	x29, sp
    7fc0:	stp	x19, x20, [sp, #16]
    7fc4:	str	x21, [sp, #32]
    7fc8:	mov	x20, x1
    7fcc:	ldr	x19, [x0, #16]
    7fd0:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    7fd4:	ldr	x0, [x0, #3512]
    7fd8:	ldr	x21, [x0]
    7fdc:	mov	w1, #0x51                  	// #81
    7fe0:	mov	x0, x19
    7fe4:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    7fe8:	cbnz	w0, 7ff4 <gcc_c_fe_context@@Base+0x1b34>
    7fec:	mov	x0, #0x0                   	// #0
    7ff0:	b	8048 <gcc_c_fe_context@@Base+0x1b88>
    7ff4:	mov	x1, x21
    7ff8:	mov	x0, x19
    7ffc:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8000:	cbz	w0, 7fec <gcc_c_fe_context@@Base+0x1b2c>
    8004:	mov	x1, #0x1                   	// #1
    8008:	mov	x0, x19
    800c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8010:	cbz	w0, 7fec <gcc_c_fe_context@@Base+0x1b2c>
    8014:	mov	x1, x20
    8018:	mov	x0, x19
    801c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8020:	cbz	w0, 7fec <gcc_c_fe_context@@Base+0x1b2c>
    8024:	mov	w1, #0x1                   	// #1
    8028:	mov	x0, x19
    802c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    8030:	cbz	w0, 7fec <gcc_c_fe_context@@Base+0x1b2c>
    8034:	add	x1, sp, #0x38
    8038:	mov	x0, x19
    803c:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    8040:	cbz	w0, 8058 <gcc_c_fe_context@@Base+0x1b98>
    8044:	ldr	x0, [sp, #56]
    8048:	ldp	x19, x20, [sp, #16]
    804c:	ldr	x21, [sp, #32]
    8050:	ldp	x29, x30, [sp], #64
    8054:	ret
    8058:	mov	x0, #0x0                   	// #0
    805c:	b	8048 <gcc_c_fe_context@@Base+0x1b88>
    8060:	stp	x29, x30, [sp, #-64]!
    8064:	mov	x29, sp
    8068:	stp	x19, x20, [sp, #16]
    806c:	stp	x21, x22, [sp, #32]
    8070:	mov	w21, w1
    8074:	mov	x20, x2
    8078:	ldr	x19, [x0, #16]
    807c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    8080:	ldr	x0, [x0, #3456]
    8084:	ldr	x22, [x0]
    8088:	mov	w1, #0x51                  	// #81
    808c:	mov	x0, x19
    8090:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8094:	cbnz	w0, 80a0 <gcc_c_fe_context@@Base+0x1be0>
    8098:	mov	x0, #0x0                   	// #0
    809c:	b	8104 <gcc_c_fe_context@@Base+0x1c44>
    80a0:	mov	x1, x22
    80a4:	mov	x0, x19
    80a8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    80ac:	cbz	w0, 8098 <gcc_c_fe_context@@Base+0x1bd8>
    80b0:	mov	x1, #0x2                   	// #2
    80b4:	mov	x0, x19
    80b8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    80bc:	cbz	w0, 8098 <gcc_c_fe_context@@Base+0x1bd8>
    80c0:	sxtw	x1, w21
    80c4:	mov	x0, x19
    80c8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    80cc:	cbz	w0, 8098 <gcc_c_fe_context@@Base+0x1bd8>
    80d0:	mov	x1, x20
    80d4:	mov	x0, x19
    80d8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    80dc:	cbz	w0, 8098 <gcc_c_fe_context@@Base+0x1bd8>
    80e0:	mov	w1, #0x1                   	// #1
    80e4:	mov	x0, x19
    80e8:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    80ec:	cbz	w0, 8098 <gcc_c_fe_context@@Base+0x1bd8>
    80f0:	add	x1, sp, #0x38
    80f4:	mov	x0, x19
    80f8:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    80fc:	cbz	w0, 8114 <gcc_c_fe_context@@Base+0x1c54>
    8100:	ldr	x0, [sp, #56]
    8104:	ldp	x19, x20, [sp, #16]
    8108:	ldp	x21, x22, [sp, #32]
    810c:	ldp	x29, x30, [sp], #64
    8110:	ret
    8114:	mov	x0, #0x0                   	// #0
    8118:	b	8104 <gcc_c_fe_context@@Base+0x1c44>
    811c:	stp	x29, x30, [sp, #-64]!
    8120:	mov	x29, sp
    8124:	stp	x19, x20, [sp, #16]
    8128:	stp	x21, x22, [sp, #32]
    812c:	mov	x21, x1
    8130:	mov	w20, w2
    8134:	ldr	x19, [x0, #16]
    8138:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    813c:	ldr	x0, [x0, #3672]
    8140:	ldr	x22, [x0]
    8144:	mov	w1, #0x51                  	// #81
    8148:	mov	x0, x19
    814c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8150:	cbnz	w0, 815c <gcc_c_fe_context@@Base+0x1c9c>
    8154:	mov	x0, #0x0                   	// #0
    8158:	b	81c0 <gcc_c_fe_context@@Base+0x1d00>
    815c:	mov	x1, x22
    8160:	mov	x0, x19
    8164:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8168:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1c94>
    816c:	mov	x1, #0x2                   	// #2
    8170:	mov	x0, x19
    8174:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8178:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1c94>
    817c:	mov	x1, x21
    8180:	mov	x0, x19
    8184:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8188:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1c94>
    818c:	mov	w1, w20
    8190:	mov	x0, x19
    8194:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8198:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1c94>
    819c:	mov	w1, #0x1                   	// #1
    81a0:	mov	x0, x19
    81a4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    81a8:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1c94>
    81ac:	add	x1, sp, #0x38
    81b0:	mov	x0, x19
    81b4:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    81b8:	cbz	w0, 81d0 <gcc_c_fe_context@@Base+0x1d10>
    81bc:	ldr	x0, [sp, #56]
    81c0:	ldp	x19, x20, [sp, #16]
    81c4:	ldp	x21, x22, [sp, #32]
    81c8:	ldp	x29, x30, [sp], #64
    81cc:	ret
    81d0:	mov	x0, #0x0                   	// #0
    81d4:	b	81c0 <gcc_c_fe_context@@Base+0x1d00>
    81d8:	stp	x29, x30, [sp, #-48]!
    81dc:	mov	x29, sp
    81e0:	str	x19, [sp, #16]
    81e4:	mov	x19, x1
    81e8:	add	x1, sp, #0x28
    81ec:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    81f0:	cbz	w0, 8200 <gcc_c_fe_context@@Base+0x1d40>
    81f4:	ldr	x0, [sp, #40]
    81f8:	str	w0, [x19]
    81fc:	mov	w0, #0x1                   	// #1
    8200:	ldr	x19, [sp, #16]
    8204:	ldp	x29, x30, [sp], #48
    8208:	ret
    820c:	stp	x29, x30, [sp, #-64]!
    8210:	mov	x29, sp
    8214:	stp	x19, x20, [sp, #16]
    8218:	str	x21, [sp, #32]
    821c:	mov	x20, x1
    8220:	ldr	x19, [x0, #16]
    8224:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    8228:	ldr	x0, [x0, #3648]
    822c:	ldr	x21, [x0]
    8230:	mov	w1, #0x51                  	// #81
    8234:	mov	x0, x19
    8238:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    823c:	cbnz	w0, 8248 <gcc_c_fe_context@@Base+0x1d88>
    8240:	mov	w0, #0x0                   	// #0
    8244:	b	829c <gcc_c_fe_context@@Base+0x1ddc>
    8248:	mov	x1, x21
    824c:	mov	x0, x19
    8250:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8254:	cbz	w0, 8240 <gcc_c_fe_context@@Base+0x1d80>
    8258:	mov	x1, #0x1                   	// #1
    825c:	mov	x0, x19
    8260:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8264:	cbz	w0, 8240 <gcc_c_fe_context@@Base+0x1d80>
    8268:	mov	x1, x20
    826c:	mov	x0, x19
    8270:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8274:	cbz	w0, 8240 <gcc_c_fe_context@@Base+0x1d80>
    8278:	mov	w1, #0x1                   	// #1
    827c:	mov	x0, x19
    8280:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    8284:	cbz	w0, 8240 <gcc_c_fe_context@@Base+0x1d80>
    8288:	add	x1, sp, #0x3c
    828c:	mov	x0, x19
    8290:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    8294:	cbz	w0, 82ac <gcc_c_fe_context@@Base+0x1dec>
    8298:	ldr	w0, [sp, #60]
    829c:	ldp	x19, x20, [sp, #16]
    82a0:	ldr	x21, [sp, #32]
    82a4:	ldp	x29, x30, [sp], #64
    82a8:	ret
    82ac:	mov	w0, #0x0                   	// #0
    82b0:	b	829c <gcc_c_fe_context@@Base+0x1ddc>
    82b4:	stp	x29, x30, [sp, #-80]!
    82b8:	mov	x29, sp
    82bc:	stp	x19, x20, [sp, #16]
    82c0:	stp	x21, x22, [sp, #32]
    82c4:	stp	x23, x24, [sp, #48]
    82c8:	mov	x20, x1
    82cc:	mov	x21, x2
    82d0:	mov	x23, x3
    82d4:	mov	w22, w4
    82d8:	ldr	x19, [x0, #16]
    82dc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    82e0:	ldr	x0, [x0, #3624]
    82e4:	ldr	x24, [x0]
    82e8:	mov	w1, #0x51                  	// #81
    82ec:	mov	x0, x19
    82f0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    82f4:	cbnz	w0, 8300 <gcc_c_fe_context@@Base+0x1e40>
    82f8:	mov	w0, #0x0                   	// #0
    82fc:	b	8384 <gcc_c_fe_context@@Base+0x1ec4>
    8300:	mov	x1, x24
    8304:	mov	x0, x19
    8308:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    830c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8310:	mov	x1, #0x4                   	// #4
    8314:	mov	x0, x19
    8318:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    831c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8320:	mov	x1, x20
    8324:	mov	x0, x19
    8328:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    832c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8330:	mov	x1, x21
    8334:	mov	x0, x19
    8338:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    833c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8340:	mov	x1, x23
    8344:	mov	x0, x19
    8348:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    834c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8350:	mov	w1, w22
    8354:	mov	x0, x19
    8358:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    835c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8360:	mov	w1, #0x1                   	// #1
    8364:	mov	x0, x19
    8368:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    836c:	cbz	w0, 82f8 <gcc_c_fe_context@@Base+0x1e38>
    8370:	add	x1, sp, #0x4c
    8374:	mov	x0, x19
    8378:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    837c:	cbz	w0, 8398 <gcc_c_fe_context@@Base+0x1ed8>
    8380:	ldr	w0, [sp, #76]
    8384:	ldp	x19, x20, [sp, #16]
    8388:	ldp	x21, x22, [sp, #32]
    838c:	ldp	x23, x24, [sp, #48]
    8390:	ldp	x29, x30, [sp], #80
    8394:	ret
    8398:	mov	w0, #0x0                   	// #0
    839c:	b	8384 <gcc_c_fe_context@@Base+0x1ec4>
    83a0:	stp	x29, x30, [sp, #-64]!
    83a4:	mov	x29, sp
    83a8:	stp	x19, x20, [sp, #16]
    83ac:	stp	x21, x22, [sp, #32]
    83b0:	mov	x21, x1
    83b4:	mov	w20, w2
    83b8:	ldr	x19, [x0, #16]
    83bc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    83c0:	ldr	x0, [x0, #4040]
    83c4:	ldr	x22, [x0]
    83c8:	mov	w1, #0x51                  	// #81
    83cc:	mov	x0, x19
    83d0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    83d4:	cbnz	w0, 83e0 <gcc_c_fe_context@@Base+0x1f20>
    83d8:	mov	w0, #0x0                   	// #0
    83dc:	b	8444 <gcc_c_fe_context@@Base+0x1f84>
    83e0:	mov	x1, x22
    83e4:	mov	x0, x19
    83e8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    83ec:	cbz	w0, 83d8 <gcc_c_fe_context@@Base+0x1f18>
    83f0:	mov	x1, #0x2                   	// #2
    83f4:	mov	x0, x19
    83f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    83fc:	cbz	w0, 83d8 <gcc_c_fe_context@@Base+0x1f18>
    8400:	mov	x1, x21
    8404:	mov	x0, x19
    8408:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    840c:	cbz	w0, 83d8 <gcc_c_fe_context@@Base+0x1f18>
    8410:	sxtw	x1, w20
    8414:	mov	x0, x19
    8418:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    841c:	cbz	w0, 83d8 <gcc_c_fe_context@@Base+0x1f18>
    8420:	mov	w1, #0x1                   	// #1
    8424:	mov	x0, x19
    8428:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    842c:	cbz	w0, 83d8 <gcc_c_fe_context@@Base+0x1f18>
    8430:	add	x1, sp, #0x3c
    8434:	mov	x0, x19
    8438:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    843c:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1f94>
    8440:	ldr	w0, [sp, #60]
    8444:	ldp	x19, x20, [sp, #16]
    8448:	ldp	x21, x22, [sp, #32]
    844c:	ldp	x29, x30, [sp], #64
    8450:	ret
    8454:	mov	w0, #0x0                   	// #0
    8458:	b	8444 <gcc_c_fe_context@@Base+0x1f84>
    845c:	stp	x29, x30, [sp, #-96]!
    8460:	mov	x29, sp
    8464:	stp	x19, x20, [sp, #16]
    8468:	stp	x21, x22, [sp, #32]
    846c:	stp	x23, x24, [sp, #48]
    8470:	str	x25, [sp, #64]
    8474:	mov	x20, x1
    8478:	mov	x21, x2
    847c:	mov	x22, x3
    8480:	mov	x23, x4
    8484:	mov	w24, w5
    8488:	ldr	x19, [x0, #16]
    848c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    8490:	ldr	x0, [x0, #3384]
    8494:	ldr	x25, [x0]
    8498:	mov	w1, #0x51                  	// #81
    849c:	mov	x0, x19
    84a0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    84a4:	cbnz	w0, 84b0 <gcc_c_fe_context@@Base+0x1ff0>
    84a8:	mov	w0, #0x0                   	// #0
    84ac:	b	8544 <gcc_c_fe_context@@Base+0x2084>
    84b0:	mov	x1, x25
    84b4:	mov	x0, x19
    84b8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    84bc:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    84c0:	mov	x1, #0x5                   	// #5
    84c4:	mov	x0, x19
    84c8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    84cc:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    84d0:	mov	x1, x20
    84d4:	mov	x0, x19
    84d8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    84dc:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    84e0:	mov	x1, x21
    84e4:	mov	x0, x19
    84e8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    84ec:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    84f0:	mov	x1, x22
    84f4:	mov	x0, x19
    84f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    84fc:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    8500:	mov	x1, x23
    8504:	mov	x0, x19
    8508:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    850c:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    8510:	mov	w1, w24
    8514:	mov	x0, x19
    8518:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    851c:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    8520:	mov	w1, #0x1                   	// #1
    8524:	mov	x0, x19
    8528:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    852c:	cbz	w0, 84a8 <gcc_c_fe_context@@Base+0x1fe8>
    8530:	add	x1, sp, #0x5c
    8534:	mov	x0, x19
    8538:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    853c:	cbz	w0, 855c <gcc_c_fe_context@@Base+0x209c>
    8540:	ldr	w0, [sp, #92]
    8544:	ldp	x19, x20, [sp, #16]
    8548:	ldp	x21, x22, [sp, #32]
    854c:	ldp	x23, x24, [sp, #48]
    8550:	ldr	x25, [sp, #64]
    8554:	ldp	x29, x30, [sp], #96
    8558:	ret
    855c:	mov	w0, #0x0                   	// #0
    8560:	b	8544 <gcc_c_fe_context@@Base+0x2084>
    8564:	stp	x29, x30, [sp, #-80]!
    8568:	mov	x29, sp
    856c:	stp	x19, x20, [sp, #16]
    8570:	stp	x21, x22, [sp, #32]
    8574:	str	x23, [sp, #48]
    8578:	mov	x22, x1
    857c:	mov	x21, x2
    8580:	mov	x20, x3
    8584:	ldr	x19, [x0, #16]
    8588:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    858c:	ldr	x0, [x0, #3424]
    8590:	ldr	x23, [x0]
    8594:	mov	w1, #0x51                  	// #81
    8598:	mov	x0, x19
    859c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    85a0:	cbnz	w0, 85ac <gcc_c_fe_context@@Base+0x20ec>
    85a4:	mov	w0, #0x0                   	// #0
    85a8:	b	8620 <gcc_c_fe_context@@Base+0x2160>
    85ac:	mov	x1, x23
    85b0:	mov	x0, x19
    85b4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    85b8:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    85bc:	mov	x1, #0x3                   	// #3
    85c0:	mov	x0, x19
    85c4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    85c8:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    85cc:	mov	x1, x22
    85d0:	mov	x0, x19
    85d4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    85d8:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    85dc:	mov	x1, x21
    85e0:	mov	x0, x19
    85e4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    85e8:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    85ec:	mov	x1, x20
    85f0:	mov	x0, x19
    85f4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    85f8:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    85fc:	mov	w1, #0x1                   	// #1
    8600:	mov	x0, x19
    8604:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    8608:	cbz	w0, 85a4 <gcc_c_fe_context@@Base+0x20e4>
    860c:	add	x1, sp, #0x4c
    8610:	mov	x0, x19
    8614:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    8618:	cbz	w0, 8634 <gcc_c_fe_context@@Base+0x2174>
    861c:	ldr	w0, [sp, #76]
    8620:	ldp	x19, x20, [sp, #16]
    8624:	ldp	x21, x22, [sp, #32]
    8628:	ldr	x23, [sp, #48]
    862c:	ldp	x29, x30, [sp], #80
    8630:	ret
    8634:	mov	w0, #0x0                   	// #0
    8638:	b	8620 <gcc_c_fe_context@@Base+0x2160>
    863c:	stp	x29, x30, [sp, #-64]!
    8640:	mov	x29, sp
    8644:	stp	x19, x20, [sp, #16]
    8648:	stp	x21, x22, [sp, #32]
    864c:	mov	x21, x1
    8650:	mov	x20, x2
    8654:	ldr	x19, [x0, #16]
    8658:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    865c:	ldr	x0, [x0, #4056]
    8660:	ldr	x22, [x0]
    8664:	mov	w1, #0x51                  	// #81
    8668:	mov	x0, x19
    866c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8670:	cbnz	w0, 867c <gcc_c_fe_context@@Base+0x21bc>
    8674:	mov	w0, #0x0                   	// #0
    8678:	b	86e0 <gcc_c_fe_context@@Base+0x2220>
    867c:	mov	x1, x22
    8680:	mov	x0, x19
    8684:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8688:	cbz	w0, 8674 <gcc_c_fe_context@@Base+0x21b4>
    868c:	mov	x1, #0x2                   	// #2
    8690:	mov	x0, x19
    8694:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8698:	cbz	w0, 8674 <gcc_c_fe_context@@Base+0x21b4>
    869c:	mov	x1, x21
    86a0:	mov	x0, x19
    86a4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    86a8:	cbz	w0, 8674 <gcc_c_fe_context@@Base+0x21b4>
    86ac:	mov	x1, x20
    86b0:	mov	x0, x19
    86b4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    86b8:	cbz	w0, 8674 <gcc_c_fe_context@@Base+0x21b4>
    86bc:	mov	w1, #0x1                   	// #1
    86c0:	mov	x0, x19
    86c4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    86c8:	cbz	w0, 8674 <gcc_c_fe_context@@Base+0x21b4>
    86cc:	add	x1, sp, #0x3c
    86d0:	mov	x0, x19
    86d4:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    86d8:	cbz	w0, 86f0 <gcc_c_fe_context@@Base+0x2230>
    86dc:	ldr	w0, [sp, #60]
    86e0:	ldp	x19, x20, [sp, #16]
    86e4:	ldp	x21, x22, [sp, #32]
    86e8:	ldp	x29, x30, [sp], #64
    86ec:	ret
    86f0:	mov	w0, #0x0                   	// #0
    86f4:	b	86e0 <gcc_c_fe_context@@Base+0x2220>
    86f8:	stp	x29, x30, [sp, #-96]!
    86fc:	mov	x29, sp
    8700:	stp	x19, x20, [sp, #16]
    8704:	stp	x21, x22, [sp, #32]
    8708:	stp	x23, x24, [sp, #48]
    870c:	str	x25, [sp, #64]
    8710:	mov	x20, x1
    8714:	mov	x21, x2
    8718:	mov	x22, x3
    871c:	mov	x23, x4
    8720:	mov	x24, x5
    8724:	ldr	x19, [x0, #16]
    8728:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    872c:	ldr	x0, [x0, #3368]
    8730:	ldr	x25, [x0]
    8734:	mov	w1, #0x51                  	// #81
    8738:	mov	x0, x19
    873c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8740:	cbnz	w0, 874c <gcc_c_fe_context@@Base+0x228c>
    8744:	mov	w0, #0x0                   	// #0
    8748:	b	87e0 <gcc_c_fe_context@@Base+0x2320>
    874c:	mov	x1, x25
    8750:	mov	x0, x19
    8754:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8758:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    875c:	mov	x1, #0x5                   	// #5
    8760:	mov	x0, x19
    8764:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8768:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    876c:	mov	x1, x20
    8770:	mov	x0, x19
    8774:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8778:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    877c:	mov	x1, x21
    8780:	mov	x0, x19
    8784:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    8788:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    878c:	mov	x1, x22
    8790:	mov	x0, x19
    8794:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8798:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    879c:	mov	x1, x23
    87a0:	mov	x0, x19
    87a4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    87a8:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    87ac:	mov	x1, x24
    87b0:	mov	x0, x19
    87b4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    87b8:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    87bc:	mov	w1, #0x1                   	// #1
    87c0:	mov	x0, x19
    87c4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    87c8:	cbz	w0, 8744 <gcc_c_fe_context@@Base+0x2284>
    87cc:	add	x1, sp, #0x5c
    87d0:	mov	x0, x19
    87d4:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    87d8:	cbz	w0, 87f8 <gcc_c_fe_context@@Base+0x2338>
    87dc:	ldr	w0, [sp, #92]
    87e0:	ldp	x19, x20, [sp, #16]
    87e4:	ldp	x21, x22, [sp, #32]
    87e8:	ldp	x23, x24, [sp, #48]
    87ec:	ldr	x25, [sp, #64]
    87f0:	ldp	x29, x30, [sp], #96
    87f4:	ret
    87f8:	mov	w0, #0x0                   	// #0
    87fc:	b	87e0 <gcc_c_fe_context@@Base+0x2320>

0000000000008800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    8800:	stp	x29, x30, [sp, #-96]!
    8804:	mov	x29, sp
    8808:	stp	x19, x20, [sp, #16]
    880c:	stp	x21, x22, [sp, #32]
    8810:	stp	x23, x24, [sp, #48]
    8814:	stp	x25, x26, [sp, #64]
    8818:	str	x27, [sp, #80]
    881c:	mov	x22, x0
    8820:	mov	x26, x2
    8824:	ldr	x19, [x0, #8]
    8828:	ldr	x23, [x0]
    882c:	sub	x0, x19, x23
    8830:	mov	x2, #0x3ffffffffffffff     	// #288230376151711743
    8834:	cmp	x2, x0, asr #5
    8838:	b.eq	88cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcc>  // b.none
    883c:	mov	x20, x1
    8840:	mov	x25, x1
    8844:	asr	x1, x0, #5
    8848:	cmp	x1, #0x0
    884c:	csinc	x0, x1, xzr, ne  // ne = any
    8850:	adds	x0, x0, x1
    8854:	b.cs	89dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dc>  // b.hs, b.nlast
    8858:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
    885c:	cmp	x0, x24
    8860:	csel	x24, x0, x24, ls  // ls = plast
    8864:	sub	x27, x20, x23
    8868:	mov	x21, #0x0                   	// #0
    886c:	cbz	x0, 887c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c>
    8870:	lsl	x0, x24, #5
    8874:	bl	5550 <_Znwm@plt>
    8878:	mov	x21, x0
    887c:	add	x1, x21, x27
    8880:	add	x0, x1, #0x10
    8884:	str	x0, [x21, x27]
    8888:	mov	x0, x26
    888c:	ldr	x2, [x0], #16
    8890:	cmp	x2, x0
    8894:	b.eq	88d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd8>  // b.none
    8898:	str	x2, [x21, x27]
    889c:	ldr	x2, [x26, #16]
    88a0:	str	x2, [x1, #16]
    88a4:	ldr	x2, [x26, #8]
    88a8:	str	x2, [x1, #8]
    88ac:	str	x0, [x26]
    88b0:	str	xzr, [x26, #8]
    88b4:	strb	wzr, [x26, #16]
    88b8:	cmp	x20, x23
    88bc:	b.eq	894c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c>  // b.none
    88c0:	mov	x2, x21
    88c4:	mov	x3, x23
    88c8:	b	8904 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>
    88cc:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    88d0:	add	x0, x0, #0x668
    88d4:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    88d8:	ldp	x2, x3, [x26, #16]
    88dc:	stp	x2, x3, [x1, #16]
    88e0:	b	88a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa4>
    88e4:	ldp	x0, x1, [x3, #16]
    88e8:	stp	x0, x1, [x2, #16]
    88ec:	ldr	x0, [x3, #8]
    88f0:	str	x0, [x2, #8]
    88f4:	add	x3, x3, #0x20
    88f8:	add	x2, x2, #0x20
    88fc:	cmp	x25, x3
    8900:	b.eq	892c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12c>  // b.none
    8904:	add	x0, x2, #0x10
    8908:	str	x0, [x2]
    890c:	mov	x0, x3
    8910:	ldr	x1, [x0], #16
    8914:	cmp	x1, x0
    8918:	b.eq	88e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe4>  // b.none
    891c:	str	x1, [x2]
    8920:	ldr	x0, [x3, #16]
    8924:	str	x0, [x2, #16]
    8928:	b	88ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec>
    892c:	sub	x25, x20, x23
    8930:	add	x25, x21, x25
    8934:	add	x25, x25, #0x20
    8938:	cmp	x20, x19
    893c:	b.eq	89a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a4>  // b.none
    8940:	mov	x3, x20
    8944:	mov	x2, x25
    8948:	b	8974 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x174>
    894c:	mov	x25, x21
    8950:	b	8934 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x134>
    8954:	ldp	x0, x1, [x3, #16]
    8958:	stp	x0, x1, [x2, #16]
    895c:	ldr	x0, [x3, #8]
    8960:	str	x0, [x2, #8]
    8964:	add	x3, x3, #0x20
    8968:	add	x2, x2, #0x20
    896c:	cmp	x3, x19
    8970:	b.eq	899c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19c>  // b.none
    8974:	add	x0, x2, #0x10
    8978:	str	x0, [x2]
    897c:	mov	x0, x3
    8980:	ldr	x1, [x0], #16
    8984:	cmp	x1, x0
    8988:	b.eq	8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x154>  // b.none
    898c:	str	x1, [x2]
    8990:	ldr	x0, [x3, #16]
    8994:	str	x0, [x2, #16]
    8998:	b	895c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15c>
    899c:	sub	x19, x19, x20
    89a0:	add	x25, x25, x19
    89a4:	cbz	x23, 89b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b0>
    89a8:	mov	x0, x23
    89ac:	bl	5540 <_ZdlPv@plt>
    89b0:	str	x21, [x22]
    89b4:	str	x25, [x22, #8]
    89b8:	add	x21, x21, x24, lsl #5
    89bc:	str	x21, [x22, #16]
    89c0:	ldp	x19, x20, [sp, #16]
    89c4:	ldp	x21, x22, [sp, #32]
    89c8:	ldp	x23, x24, [sp, #48]
    89cc:	ldp	x25, x26, [sp, #64]
    89d0:	ldr	x27, [sp, #80]
    89d4:	ldp	x29, x30, [sp], #96
    89d8:	ret
    89dc:	sub	x27, x20, x23
    89e0:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
    89e4:	b	8870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x70>

00000000000089e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base>:
    89e8:	mov	x2, x1
    89ec:	ldr	x1, [x0, #8]
    89f0:	ldr	x3, [x0, #16]
    89f4:	cmp	x1, x3
    89f8:	b.eq	8a50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x68>  // b.none
    89fc:	add	x3, x1, #0x10
    8a00:	str	x3, [x1]
    8a04:	mov	x3, x2
    8a08:	ldr	x4, [x3], #16
    8a0c:	cmp	x4, x3
    8a10:	b.eq	8a44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x5c>  // b.none
    8a14:	str	x4, [x1]
    8a18:	ldr	x4, [x2, #16]
    8a1c:	str	x4, [x1, #16]
    8a20:	ldr	x4, [x2, #8]
    8a24:	str	x4, [x1, #8]
    8a28:	str	x3, [x2]
    8a2c:	str	xzr, [x2, #8]
    8a30:	strb	wzr, [x2, #16]
    8a34:	ldr	x1, [x0, #8]
    8a38:	add	x1, x1, #0x20
    8a3c:	str	x1, [x0, #8]
    8a40:	ret
    8a44:	ldp	x4, x5, [x2, #16]
    8a48:	stp	x4, x5, [x1, #16]
    8a4c:	b	8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x38>
    8a50:	stp	x29, x30, [sp, #-16]!
    8a54:	mov	x29, sp
    8a58:	bl	5720 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    8a5c:	ldp	x29, x30, [sp], #16
    8a60:	ret

0000000000008a64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base>:
    8a64:	stp	x29, x30, [sp, #-64]!
    8a68:	mov	x29, sp
    8a6c:	stp	x19, x20, [sp, #16]
    8a70:	str	x21, [sp, #32]
    8a74:	cmp	x1, #0x0
    8a78:	ccmp	x1, x2, #0x4, eq  // eq = none
    8a7c:	b.ne	8acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x68>  // b.any
    8a80:	mov	x20, x0
    8a84:	mov	x21, x1
    8a88:	sub	x19, x2, x1
    8a8c:	str	x19, [sp, #56]
    8a90:	cmp	x19, #0xf
    8a94:	b.hi	8ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x74>  // b.pmore
    8a98:	ldr	x0, [x0]
    8a9c:	cmp	x19, #0x1
    8aa0:	b.ne	8b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x9c>  // b.any
    8aa4:	ldrb	w1, [x1]
    8aa8:	strb	w1, [x0]
    8aac:	ldr	x0, [sp, #56]
    8ab0:	str	x0, [x20, #8]
    8ab4:	ldr	x1, [x20]
    8ab8:	strb	wzr, [x1, x0]
    8abc:	ldp	x19, x20, [sp, #16]
    8ac0:	ldr	x21, [sp, #32]
    8ac4:	ldp	x29, x30, [sp], #64
    8ac8:	ret
    8acc:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    8ad0:	add	x0, x0, #0x418
    8ad4:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    8ad8:	mov	x2, #0x0                   	// #0
    8adc:	add	x1, sp, #0x38
    8ae0:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    8ae4:	str	x0, [x20]
    8ae8:	ldr	x1, [sp, #56]
    8aec:	str	x1, [x20, #16]
    8af0:	mov	x2, x19
    8af4:	mov	x1, x21
    8af8:	bl	52b0 <memcpy@plt>
    8afc:	b	8aac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x48>
    8b00:	cbz	x19, 8aac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x48>
    8b04:	b	8af0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x8c>

0000000000008b08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    8b08:	stp	x29, x30, [sp, #-112]!
    8b0c:	mov	x29, sp
    8b10:	stp	x19, x20, [sp, #16]
    8b14:	stp	x21, x22, [sp, #32]
    8b18:	stp	x23, x24, [sp, #48]
    8b1c:	stp	x25, x26, [sp, #64]
    8b20:	stp	x27, x28, [sp, #80]
    8b24:	mov	x23, x0
    8b28:	mov	x25, x2
    8b2c:	ldr	x19, [x0, #8]
    8b30:	ldr	x24, [x0]
    8b34:	sub	x0, x19, x24
    8b38:	mov	x2, #0x3ffffffffffffff     	// #288230376151711743
    8b3c:	cmp	x2, x0, asr #5
    8b40:	b.eq	8bb0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa8>  // b.none
    8b44:	mov	x20, x1
    8b48:	mov	x22, x1
    8b4c:	asr	x1, x0, #5
    8b50:	cmp	x1, #0x0
    8b54:	csinc	x0, x1, xzr, ne  // ne = any
    8b58:	adds	x0, x0, x1
    8b5c:	b.cs	8d04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fc>  // b.hs, b.nlast
    8b60:	mov	x26, #0x3ffffffffffffff     	// #288230376151711743
    8b64:	cmp	x0, x26
    8b68:	csel	x26, x0, x26, ls  // ls = plast
    8b6c:	sub	x28, x20, x24
    8b70:	mov	x21, #0x0                   	// #0
    8b74:	cbz	x0, 8b84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c>
    8b78:	lsl	x0, x26, #5
    8b7c:	bl	5550 <_Znwm@plt>
    8b80:	mov	x21, x0
    8b84:	add	x27, x21, x28
    8b88:	add	x0, x27, #0x10
    8b8c:	str	x0, [sp, #104]
    8b90:	str	x0, [x21, x28]
    8b94:	ldr	x1, [x25]
    8b98:	ldr	x2, [x25, #8]
    8b9c:	mov	w3, #0x0                   	// #0
    8ba0:	add	x2, x1, x2
    8ba4:	mov	x0, x27
    8ba8:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    8bac:	b	8bbc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb4>
    8bb0:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    8bb4:	add	x0, x0, #0x668
    8bb8:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    8bbc:	cmp	x20, x24
    8bc0:	b.eq	8c38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130>  // b.none
    8bc4:	mov	x0, x21
    8bc8:	mov	x1, x24
    8bcc:	b	8bf0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe8>
    8bd0:	ldp	x2, x3, [x1, #16]
    8bd4:	stp	x2, x3, [x0, #16]
    8bd8:	ldr	x2, [x1, #8]
    8bdc:	str	x2, [x0, #8]
    8be0:	add	x1, x1, #0x20
    8be4:	add	x0, x0, #0x20
    8be8:	cmp	x22, x1
    8bec:	b.eq	8c18 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x110>  // b.none
    8bf0:	add	x2, x0, #0x10
    8bf4:	str	x2, [x0]
    8bf8:	mov	x2, x1
    8bfc:	ldr	x3, [x2], #16
    8c00:	cmp	x3, x2
    8c04:	b.eq	8bd0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc8>  // b.none
    8c08:	str	x3, [x0]
    8c0c:	ldr	x2, [x1, #16]
    8c10:	str	x2, [x0, #16]
    8c14:	b	8bd8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd0>
    8c18:	sub	x22, x20, x24
    8c1c:	add	x22, x21, x22
    8c20:	add	x22, x22, #0x20
    8c24:	cmp	x20, x19
    8c28:	b.eq	8c90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x188>  // b.none
    8c2c:	mov	x0, x22
    8c30:	mov	x1, x20
    8c34:	b	8c60 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>
    8c38:	mov	x22, x21
    8c3c:	b	8c20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x118>
    8c40:	ldp	x2, x3, [x1, #16]
    8c44:	stp	x2, x3, [x0, #16]
    8c48:	ldr	x2, [x1, #8]
    8c4c:	str	x2, [x0, #8]
    8c50:	add	x1, x1, #0x20
    8c54:	add	x0, x0, #0x20
    8c58:	cmp	x1, x19
    8c5c:	b.eq	8c88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x180>  // b.none
    8c60:	add	x2, x0, #0x10
    8c64:	str	x2, [x0]
    8c68:	mov	x2, x1
    8c6c:	ldr	x3, [x2], #16
    8c70:	cmp	x3, x2
    8c74:	b.eq	8c40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>  // b.none
    8c78:	str	x3, [x0]
    8c7c:	ldr	x2, [x1, #16]
    8c80:	str	x2, [x0, #16]
    8c84:	b	8c48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x140>
    8c88:	sub	x19, x19, x20
    8c8c:	add	x22, x22, x19
    8c90:	cbz	x24, 8c9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x194>
    8c94:	mov	x0, x24
    8c98:	bl	5540 <_ZdlPv@plt>
    8c9c:	str	x21, [x23]
    8ca0:	str	x22, [x23, #8]
    8ca4:	add	x21, x21, x26, lsl #5
    8ca8:	str	x21, [x23, #16]
    8cac:	ldp	x19, x20, [sp, #16]
    8cb0:	ldp	x21, x22, [sp, #32]
    8cb4:	ldp	x23, x24, [sp, #48]
    8cb8:	ldp	x25, x26, [sp, #64]
    8cbc:	ldp	x27, x28, [sp, #80]
    8cc0:	ldp	x29, x30, [sp], #112
    8cc4:	ret
    8cc8:	bl	53f0 <__cxa_begin_catch@plt>
    8ccc:	cbnz	x21, 8cf8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f0>
    8cd0:	ldr	x0, [x27]
    8cd4:	ldr	x1, [sp, #104]
    8cd8:	cmp	x1, x0
    8cdc:	b.eq	8ce4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dc>  // b.none
    8ce0:	bl	5540 <_ZdlPv@plt>
    8ce4:	bl	56d0 <__cxa_rethrow@plt>
    8ce8:	mov	x19, x0
    8cec:	bl	5760 <__cxa_end_catch@plt>
    8cf0:	mov	x0, x19
    8cf4:	bl	57e0 <_Unwind_Resume@plt>
    8cf8:	mov	x0, x21
    8cfc:	bl	5540 <_ZdlPv@plt>
    8d00:	b	8ce4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dc>
    8d04:	sub	x28, x20, x24
    8d08:	mov	x26, #0x3ffffffffffffff     	// #288230376151711743
    8d0c:	b	8b78 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x70>
    8d10:	str	x1, [x0, #24]
    8d14:	str	x2, [x0, #32]
    8d18:	str	x3, [x0, #40]
    8d1c:	str	x4, [x0, #48]
    8d20:	str	x5, [x0, #56]
    8d24:	ret
    8d28:	cmp	w1, #0x0
    8d2c:	cset	w1, ne  // ne = any
    8d30:	strb	w1, [x0, #136]
    8d34:	ret
    8d38:	str	x1, [x0, #64]
    8d3c:	str	x2, [x0, #72]
    8d40:	ret
    8d44:	stp	x29, x30, [sp, #-16]!
    8d48:	mov	x29, sp
    8d4c:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    8d50:	add	x0, x0, #0x4c0
    8d54:	bl	5400 <xstrdup@plt>
    8d58:	ldp	x29, x30, [sp], #16
    8d5c:	ret
    8d60:	stp	x29, x30, [sp, #-32]!
    8d64:	mov	x29, sp
    8d68:	stp	x19, x20, [sp, #16]
    8d6c:	mov	x19, x0
    8d70:	mov	x20, x1
    8d74:	mov	x0, x1
    8d78:	bl	5360 <strlen@plt>
    8d7c:	mov	x4, x0
    8d80:	add	x0, x19, #0x68
    8d84:	mov	x3, x20
    8d88:	ldr	x2, [x0, #8]
    8d8c:	mov	x1, #0x0                   	// #0
    8d90:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    8d94:	ldp	x19, x20, [sp, #16]
    8d98:	ldp	x29, x30, [sp], #32
    8d9c:	ret
    8da0:	stp	x29, x30, [sp, #-32]!
    8da4:	mov	x29, sp
    8da8:	stp	x19, x20, [sp, #16]
    8dac:	mov	x19, x0
    8db0:	mov	x20, x1
    8db4:	ldr	x0, [x0, #8]
    8db8:	ldrb	w0, [x0, #136]
    8dbc:	cbnz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2d4>
    8dc0:	add	x1, x19, #0x10
    8dc4:	mov	x0, x20
    8dc8:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    8dcc:	mov	x0, #0x0                   	// #0
    8dd0:	ldp	x19, x20, [sp, #16]
    8dd4:	ldp	x29, x30, [sp], #32
    8dd8:	ret
    8ddc:	ldr	x2, [x19, #16]
    8de0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    8de4:	add	x1, x1, #0x4e0
    8de8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    8dec:	ldr	x0, [x0, #3968]
    8df0:	ldr	x0, [x0]
    8df4:	bl	5370 <fprintf@plt>
    8df8:	b	8dc0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2b8>
    8dfc:	stp	x29, x30, [sp, #-32]!
    8e00:	mov	x29, sp
    8e04:	str	x19, [sp, #16]
    8e08:	mov	x19, x0
    8e0c:	mov	x1, #0x0                   	// #0
    8e10:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    8e14:	cbnz	w0, 8e24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x31c>
    8e18:	ldr	x19, [sp, #16]
    8e1c:	ldp	x29, x30, [sp], #32
    8e20:	ret
    8e24:	ldr	x1, [x19, #24]
    8e28:	ldr	x2, [x1, #48]
    8e2c:	ldr	x0, [x1, #56]
    8e30:	blr	x2
    8e34:	mov	w1, #0x52                  	// #82
    8e38:	mov	x0, x19
    8e3c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8e40:	cbz	w0, 8e18 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x310>
    8e44:	mov	x1, #0x1                   	// #1
    8e48:	mov	x0, x19
    8e4c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8e50:	b	8e18 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x310>
    8e54:	stp	x29, x30, [sp, #-64]!
    8e58:	mov	x29, sp
    8e5c:	stp	x19, x20, [sp, #16]
    8e60:	str	x21, [sp, #32]
    8e64:	mov	x20, x0
    8e68:	str	xzr, [sp, #56]
    8e6c:	mov	x1, #0x1                   	// #1
    8e70:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    8e74:	mov	w19, w0
    8e78:	cbnz	w0, 8e9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x394>
    8e7c:	ldr	x0, [sp, #56]
    8e80:	cbz	x0, 8e88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x380>
    8e84:	bl	5610 <_ZdaPv@plt>
    8e88:	mov	w0, w19
    8e8c:	ldp	x19, x20, [sp, #16]
    8e90:	ldr	x21, [sp, #32]
    8e94:	ldp	x29, x30, [sp], #64
    8e98:	ret
    8e9c:	add	x1, sp, #0x38
    8ea0:	mov	x0, x20
    8ea4:	bl	d784 <gcc_cp_fe_context@@Base+0x4054>
    8ea8:	mov	w19, w0
    8eac:	cbz	w0, 8e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x374>
    8eb0:	ldr	x1, [x20, #24]
    8eb4:	ldr	x3, [x1, #32]
    8eb8:	ldr	x2, [sp, #56]
    8ebc:	ldr	x0, [x1, #56]
    8ec0:	blr	x3
    8ec4:	mov	x21, x0
    8ec8:	mov	w1, #0x52                  	// #82
    8ecc:	mov	x0, x20
    8ed0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8ed4:	mov	w19, w0
    8ed8:	cbz	w0, 8e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x374>
    8edc:	mov	x1, x21
    8ee0:	mov	x0, x20
    8ee4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8ee8:	mov	w19, w0
    8eec:	b	8e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x374>
    8ef0:	mov	x19, x0
    8ef4:	ldr	x0, [sp, #56]
    8ef8:	cbz	x0, 8f00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x3f8>
    8efc:	bl	5610 <_ZdaPv@plt>
    8f00:	mov	x0, x19
    8f04:	bl	57e0 <_Unwind_Resume@plt>
    8f08:	stp	x29, x30, [sp, #-32]!
    8f0c:	mov	x29, sp
    8f10:	str	x19, [sp, #16]
    8f14:	mov	x19, x0
    8f18:	mov	x1, #0x0                   	// #0
    8f1c:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    8f20:	cbnz	w0, 8f30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x428>
    8f24:	ldr	x19, [sp, #16]
    8f28:	ldp	x29, x30, [sp], #32
    8f2c:	ret
    8f30:	ldr	x1, [x19, #24]
    8f34:	ldr	x2, [x1, #40]
    8f38:	ldr	x0, [x1, #56]
    8f3c:	blr	x2
    8f40:	mov	w1, #0x52                  	// #82
    8f44:	mov	x0, x19
    8f48:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    8f4c:	cbz	w0, 8f24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x41c>
    8f50:	mov	x1, #0x1                   	// #1
    8f54:	mov	x0, x19
    8f58:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    8f5c:	b	8f24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x41c>
    8f60:	stp	x29, x30, [sp, #-48]!
    8f64:	mov	x29, sp
    8f68:	str	x19, [sp, #16]
    8f6c:	mov	x19, x1
    8f70:	add	x1, sp, #0x28
    8f74:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    8f78:	cbz	w0, 8f88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x480>
    8f7c:	ldr	x0, [sp, #40]
    8f80:	str	w0, [x19]
    8f84:	mov	w0, #0x1                   	// #1
    8f88:	ldr	x19, [sp, #16]
    8f8c:	ldp	x29, x30, [sp], #48
    8f90:	ret
    8f94:	stp	x29, x30, [sp, #-48]!
    8f98:	mov	x29, sp
    8f9c:	str	x19, [sp, #16]
    8fa0:	mov	x19, x1
    8fa4:	add	x1, sp, #0x28
    8fa8:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    8fac:	cbz	w0, 8fbc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4b4>
    8fb0:	ldr	x0, [sp, #40]
    8fb4:	str	w0, [x19]
    8fb8:	mov	w0, #0x1                   	// #1
    8fbc:	ldr	x19, [sp, #16]
    8fc0:	ldp	x29, x30, [sp], #48
    8fc4:	ret
    8fc8:	stp	x29, x30, [sp, #-48]!
    8fcc:	mov	x29, sp
    8fd0:	stp	x19, x20, [sp, #16]
    8fd4:	mov	x20, x0
    8fd8:	str	xzr, [sp, #32]
    8fdc:	mov	x1, #0x2                   	// #2
    8fe0:	bl	d6c4 <gcc_cp_fe_context@@Base+0x3f94>
    8fe4:	mov	w19, w0
    8fe8:	cbnz	w0, 9008 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x500>
    8fec:	ldr	x0, [sp, #32]
    8ff0:	cbz	x0, 8ff8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    8ff4:	bl	5610 <_ZdaPv@plt>
    8ff8:	mov	w0, w19
    8ffc:	ldp	x19, x20, [sp, #16]
    9000:	ldp	x29, x30, [sp], #48
    9004:	ret
    9008:	add	x1, sp, #0x28
    900c:	mov	x0, x20
    9010:	bl	8f94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x48c>
    9014:	mov	w19, w0
    9018:	cbz	w0, 8fec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e4>
    901c:	add	x1, sp, #0x20
    9020:	mov	x0, x20
    9024:	bl	d784 <gcc_cp_fe_context@@Base+0x4054>
    9028:	mov	w19, w0
    902c:	cbz	w0, 8fec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e4>
    9030:	ldr	x1, [x20, #24]
    9034:	ldr	x4, [x1, #24]
    9038:	ldr	x3, [sp, #32]
    903c:	ldr	w2, [sp, #40]
    9040:	ldr	x0, [x1, #56]
    9044:	blr	x4
    9048:	mov	w1, #0x52                  	// #82
    904c:	mov	x0, x20
    9050:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    9054:	mov	w19, w0
    9058:	cbz	w0, 8fec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e4>
    905c:	mov	x1, #0x1                   	// #1
    9060:	mov	x0, x20
    9064:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    9068:	mov	w19, w0
    906c:	b	8fec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e4>
    9070:	mov	x19, x0
    9074:	ldr	x0, [sp, #32]
    9078:	cbz	x0, 9080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x578>
    907c:	bl	5610 <_ZdaPv@plt>
    9080:	mov	x0, x19
    9084:	bl	57e0 <_Unwind_Resume@plt>
    9088:	stp	x29, x30, [sp, #-48]!
    908c:	mov	x29, sp
    9090:	str	x19, [sp, #16]
    9094:	mov	x19, x1
    9098:	add	x1, sp, #0x28
    909c:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    90a0:	cbz	w0, 90b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5a8>
    90a4:	ldr	x0, [sp, #40]
    90a8:	str	w0, [x19]
    90ac:	mov	w0, #0x1                   	// #1
    90b0:	ldr	x19, [sp, #16]
    90b4:	ldp	x29, x30, [sp], #48
    90b8:	ret
    90bc:	stp	x29, x30, [sp, #-48]!
    90c0:	mov	x29, sp
    90c4:	str	x19, [sp, #16]
    90c8:	mov	x19, x1
    90cc:	add	x1, sp, #0x28
    90d0:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    90d4:	cbz	w0, 90e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5dc>
    90d8:	ldr	x0, [sp, #40]
    90dc:	str	w0, [x19]
    90e0:	mov	w0, #0x1                   	// #1
    90e4:	ldr	x19, [sp, #16]
    90e8:	ldp	x29, x30, [sp], #48
    90ec:	ret
    90f0:	stp	x29, x30, [sp, #-48]!
    90f4:	mov	x29, sp
    90f8:	stp	x19, x20, [sp, #16]
    90fc:	mov	x20, x0
    9100:	cbz	x1, 9144 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x63c>
    9104:	str	x21, [sp, #32]
    9108:	mov	x19, x1
    910c:	ldrsw	x21, [x1]
    9110:	mov	x2, x21
    9114:	mov	w1, #0x76                  	// #118
    9118:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    911c:	cbz	w0, 913c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x634>
    9120:	ldr	x2, [x19, #8]
    9124:	lsl	x1, x21, #3
    9128:	mov	x0, x20
    912c:	bl	d890 <gcc_cp_fe_context@@Base+0x4160>
    9130:	cbnz	w0, 9164 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x65c>
    9134:	ldr	x21, [sp, #32]
    9138:	b	9158 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x650>
    913c:	ldr	x21, [sp, #32]
    9140:	b	9158 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x650>
    9144:	mov	x2, #0xffffffffffffffff    	// #-1
    9148:	mov	w1, #0x76                  	// #118
    914c:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    9150:	cmp	w0, #0x0
    9154:	cset	w0, ne  // ne = any
    9158:	ldp	x19, x20, [sp, #16]
    915c:	ldp	x29, x30, [sp], #48
    9160:	ret
    9164:	ldr	x2, [x19, #16]
    9168:	lsl	x1, x21, #2
    916c:	mov	x0, x20
    9170:	bl	d890 <gcc_cp_fe_context@@Base+0x4160>
    9174:	ldr	x21, [sp, #32]
    9178:	b	9158 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x650>
    917c:	stp	x29, x30, [sp, #-64]!
    9180:	mov	x29, sp
    9184:	stp	x19, x20, [sp, #16]
    9188:	stp	x21, x22, [sp, #32]
    918c:	mov	x22, x0
    9190:	mov	x21, x1
    9194:	add	x2, sp, #0x38
    9198:	mov	w1, #0x76                  	// #118
    919c:	bl	d8b0 <gcc_cp_fe_context@@Base+0x4180>
    91a0:	mov	w19, w0
    91a4:	cbz	w0, 9248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x740>
    91a8:	ldr	x0, [sp, #56]
    91ac:	cmn	x0, #0x1
    91b0:	b.eq	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x738>  // b.none
    91b4:	mov	x0, #0x18                  	// #24
    91b8:	bl	5550 <_Znwm@plt>
    91bc:	mov	x20, x0
    91c0:	ldr	x0, [sp, #56]
    91c4:	str	w0, [x20]
    91c8:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    91cc:	cmp	x0, x1
    91d0:	b.hi	925c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x754>  // b.pmore
    91d4:	lsl	x0, x0, #3
    91d8:	bl	52a0 <_Znam@plt>
    91dc:	mov	x2, x0
    91e0:	str	x0, [x20, #8]
    91e4:	ldr	x1, [sp, #56]
    91e8:	lsl	x1, x1, #3
    91ec:	mov	x0, x22
    91f0:	bl	d8fc <gcc_cp_fe_context@@Base+0x41cc>
    91f4:	mov	w19, w0
    91f8:	cbz	w0, 9260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x758>
    91fc:	ldr	x0, [sp, #56]
    9200:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
    9204:	cmp	x0, x1
    9208:	b.hi	927c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x774>  // b.pmore
    920c:	lsl	x0, x0, #2
    9210:	bl	52a0 <_Znam@plt>
    9214:	mov	x2, x0
    9218:	str	x0, [x20, #16]
    921c:	ldr	x1, [sp, #56]
    9220:	lsl	x1, x1, #2
    9224:	mov	x0, x22
    9228:	bl	d8fc <gcc_cp_fe_context@@Base+0x41cc>
    922c:	mov	w19, w0
    9230:	cbz	w0, 9280 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x778>
    9234:	str	x20, [x21]
    9238:	mov	w19, #0x1                   	// #1
    923c:	b	9248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x740>
    9240:	str	xzr, [x21]
    9244:	mov	w19, #0x1                   	// #1
    9248:	mov	w0, w19
    924c:	ldp	x19, x20, [sp, #16]
    9250:	ldp	x21, x22, [sp, #32]
    9254:	ldp	x29, x30, [sp], #64
    9258:	ret
    925c:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    9260:	ldr	x0, [x20, #8]
    9264:	cbz	x0, 926c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x764>
    9268:	bl	5610 <_ZdaPv@plt>
    926c:	mov	x1, #0x18                  	// #24
    9270:	mov	x0, x20
    9274:	bl	5560 <_ZdlPvm@plt>
    9278:	b	9248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x740>
    927c:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    9280:	ldr	x0, [x20, #16]
    9284:	cbz	x0, 928c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x784>
    9288:	bl	5610 <_ZdaPv@plt>
    928c:	ldr	x0, [x20, #8]
    9290:	cbz	x0, 9298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x790>
    9294:	bl	5610 <_ZdaPv@plt>
    9298:	mov	x1, #0x18                  	// #24
    929c:	mov	x0, x20
    92a0:	bl	5560 <_ZdlPvm@plt>
    92a4:	b	9248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x740>
    92a8:	stp	x29, x30, [sp, #-48]!
    92ac:	mov	x29, sp
    92b0:	stp	x19, x20, [sp, #16]
    92b4:	mov	x20, x0
    92b8:	cbz	x1, 92fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7f4>
    92bc:	str	x21, [sp, #32]
    92c0:	mov	x19, x1
    92c4:	ldrsw	x21, [x1]
    92c8:	mov	x2, x21
    92cc:	mov	w1, #0x74                  	// #116
    92d0:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    92d4:	cbz	w0, 92f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7ec>
    92d8:	ldr	x2, [x19, #8]
    92dc:	mov	x1, x21
    92e0:	mov	x0, x20
    92e4:	bl	d890 <gcc_cp_fe_context@@Base+0x4160>
    92e8:	cbnz	w0, 931c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x814>
    92ec:	ldr	x21, [sp, #32]
    92f0:	b	9310 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x808>
    92f4:	ldr	x21, [sp, #32]
    92f8:	b	9310 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x808>
    92fc:	mov	x2, #0xffffffffffffffff    	// #-1
    9300:	mov	w1, #0x74                  	// #116
    9304:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    9308:	cmp	w0, #0x0
    930c:	cset	w0, ne  // ne = any
    9310:	ldp	x19, x20, [sp, #16]
    9314:	ldp	x29, x30, [sp], #48
    9318:	ret
    931c:	ldr	x2, [x19, #16]
    9320:	lsl	x1, x21, #3
    9324:	mov	x0, x20
    9328:	bl	d890 <gcc_cp_fe_context@@Base+0x4160>
    932c:	ldr	x21, [sp, #32]
    9330:	b	9310 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x808>
    9334:	stp	x29, x30, [sp, #-64]!
    9338:	mov	x29, sp
    933c:	stp	x19, x20, [sp, #16]
    9340:	stp	x21, x22, [sp, #32]
    9344:	mov	x22, x0
    9348:	mov	x21, x1
    934c:	add	x2, sp, #0x38
    9350:	mov	w1, #0x74                  	// #116
    9354:	bl	d8b0 <gcc_cp_fe_context@@Base+0x4180>
    9358:	mov	w19, w0
    935c:	cbz	w0, 93ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8e4>
    9360:	ldr	x0, [sp, #56]
    9364:	cmn	x0, #0x1
    9368:	b.eq	93e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8dc>  // b.none
    936c:	mov	x0, #0x18                  	// #24
    9370:	bl	5550 <_Znwm@plt>
    9374:	mov	x20, x0
    9378:	ldr	x0, [sp, #56]
    937c:	str	w0, [x20]
    9380:	bl	52a0 <_Znam@plt>
    9384:	mov	x2, x0
    9388:	str	x0, [x20, #8]
    938c:	ldr	x1, [sp, #56]
    9390:	mov	x0, x22
    9394:	bl	d8fc <gcc_cp_fe_context@@Base+0x41cc>
    9398:	mov	w19, w0
    939c:	cbz	w0, 9400 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8f8>
    93a0:	ldr	x0, [sp, #56]
    93a4:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    93a8:	cmp	x0, x1
    93ac:	b.hi	941c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x914>  // b.pmore
    93b0:	lsl	x0, x0, #3
    93b4:	bl	52a0 <_Znam@plt>
    93b8:	mov	x2, x0
    93bc:	str	x0, [x20, #16]
    93c0:	ldr	x1, [sp, #56]
    93c4:	lsl	x1, x1, #3
    93c8:	mov	x0, x22
    93cc:	bl	d8fc <gcc_cp_fe_context@@Base+0x41cc>
    93d0:	mov	w19, w0
    93d4:	cbz	w0, 9420 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x918>
    93d8:	str	x20, [x21]
    93dc:	mov	w19, #0x1                   	// #1
    93e0:	b	93ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8e4>
    93e4:	str	xzr, [x21]
    93e8:	mov	w19, #0x1                   	// #1
    93ec:	mov	w0, w19
    93f0:	ldp	x19, x20, [sp, #16]
    93f4:	ldp	x21, x22, [sp, #32]
    93f8:	ldp	x29, x30, [sp], #64
    93fc:	ret
    9400:	ldr	x0, [x20, #8]
    9404:	cbz	x0, 940c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x904>
    9408:	bl	5610 <_ZdaPv@plt>
    940c:	mov	x1, #0x18                  	// #24
    9410:	mov	x0, x20
    9414:	bl	5560 <_ZdlPvm@plt>
    9418:	b	93ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8e4>
    941c:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    9420:	ldr	x0, [x20, #16]
    9424:	cbz	x0, 942c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x924>
    9428:	bl	5610 <_ZdaPv@plt>
    942c:	ldr	x0, [x20, #8]
    9430:	cbz	x0, 9438 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x930>
    9434:	bl	5610 <_ZdaPv@plt>
    9438:	mov	x1, #0x18                  	// #24
    943c:	mov	x0, x20
    9440:	bl	5560 <_ZdlPvm@plt>
    9444:	b	93ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8e4>
    9448:	stp	x29, x30, [sp, #-48]!
    944c:	mov	x29, sp
    9450:	stp	x19, x20, [sp, #16]
    9454:	mov	x20, x0
    9458:	cbz	x1, 94a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x998>
    945c:	str	x21, [sp, #32]
    9460:	mov	x19, x1
    9464:	ldrsw	x21, [x1]
    9468:	mov	x2, x21
    946c:	mov	w1, #0x64                  	// #100
    9470:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    9474:	cbz	w0, 9498 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x990>
    9478:	ldr	x2, [x19, #8]
    947c:	lsl	x1, x21, #3
    9480:	mov	x0, x20
    9484:	bl	d890 <gcc_cp_fe_context@@Base+0x4160>
    9488:	ldr	x21, [sp, #32]
    948c:	ldp	x19, x20, [sp, #16]
    9490:	ldp	x29, x30, [sp], #48
    9494:	ret
    9498:	ldr	x21, [sp, #32]
    949c:	b	948c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x984>
    94a0:	mov	x2, #0xffffffffffffffff    	// #-1
    94a4:	mov	w1, #0x64                  	// #100
    94a8:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    94ac:	cmp	w0, #0x0
    94b0:	cset	w0, ne  // ne = any
    94b4:	b	948c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x984>
    94b8:	stp	x29, x30, [sp, #-64]!
    94bc:	mov	x29, sp
    94c0:	stp	x19, x20, [sp, #16]
    94c4:	stp	x21, x22, [sp, #32]
    94c8:	mov	x22, x0
    94cc:	mov	x21, x1
    94d0:	add	x2, sp, #0x38
    94d4:	mov	w1, #0x64                  	// #100
    94d8:	bl	d8b0 <gcc_cp_fe_context@@Base+0x4180>
    94dc:	mov	w19, w0
    94e0:	cbz	w0, 9540 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa38>
    94e4:	ldr	x0, [sp, #56]
    94e8:	cmn	x0, #0x1
    94ec:	b.eq	9554 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa4c>  // b.none
    94f0:	mov	x0, #0x10                  	// #16
    94f4:	bl	5550 <_Znwm@plt>
    94f8:	mov	x20, x0
    94fc:	ldr	x0, [sp, #56]
    9500:	str	w0, [x20]
    9504:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9508:	cmp	x0, x1
    950c:	b.hi	9560 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa58>  // b.pmore
    9510:	lsl	x0, x0, #3
    9514:	bl	52a0 <_Znam@plt>
    9518:	mov	x2, x0
    951c:	str	x0, [x20, #8]
    9520:	ldr	x1, [sp, #56]
    9524:	lsl	x1, x1, #3
    9528:	mov	x0, x22
    952c:	bl	d8fc <gcc_cp_fe_context@@Base+0x41cc>
    9530:	mov	w19, w0
    9534:	cbz	w0, 9564 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa5c>
    9538:	str	x20, [x21]
    953c:	mov	w19, #0x1                   	// #1
    9540:	mov	w0, w19
    9544:	ldp	x19, x20, [sp, #16]
    9548:	ldp	x21, x22, [sp, #32]
    954c:	ldp	x29, x30, [sp], #64
    9550:	ret
    9554:	str	xzr, [x21]
    9558:	mov	w19, #0x1                   	// #1
    955c:	b	9540 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa38>
    9560:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    9564:	ldr	x0, [x20, #8]
    9568:	cbz	x0, 9570 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa68>
    956c:	bl	5610 <_ZdaPv@plt>
    9570:	mov	x1, #0x10                  	// #16
    9574:	mov	x0, x20
    9578:	bl	5560 <_ZdlPvm@plt>
    957c:	b	9540 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa38>
    9580:	stp	x29, x30, [sp, #-48]!
    9584:	mov	x29, sp
    9588:	stp	x19, x20, [sp, #16]
    958c:	stp	x21, x22, [sp, #32]
    9590:	mov	x19, x0
    9594:	mov	x21, x1
    9598:	mov	x20, x2
    959c:	str	xzr, [x0, #16]
    95a0:	str	xzr, [x0, #24]
    95a4:	str	xzr, [x0, #32]
    95a8:	str	xzr, [x0, #56]
    95ac:	str	xzr, [x0, #64]
    95b0:	str	xzr, [x0, #72]
    95b4:	str	xzr, [x0, #80]
    95b8:	str	xzr, [x0, #88]
    95bc:	str	xzr, [x0, #96]
    95c0:	add	x22, x0, #0x78
    95c4:	str	x22, [x0, #104]
    95c8:	str	xzr, [x0, #112]
    95cc:	strb	wzr, [x0, #120]
    95d0:	strb	wzr, [x0, #136]
    95d4:	mov	x0, #0x10                  	// #16
    95d8:	bl	5550 <_Znwm@plt>
    95dc:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    95e0:	add	x1, x1, #0x5f0
    95e4:	str	x1, [x0]
    95e8:	str	x19, [x0, #8]
    95ec:	str	x0, [x19, #144]
    95f0:	str	x21, [x19]
    95f4:	str	x20, [x19, #8]
    95f8:	ldp	x19, x20, [sp, #16]
    95fc:	ldp	x21, x22, [sp, #32]
    9600:	ldp	x29, x30, [sp], #48
    9604:	ret
    9608:	mov	x21, x0
    960c:	ldr	x0, [x19, #104]
    9610:	cmp	x22, x0
    9614:	b.eq	961c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb14>  // b.none
    9618:	bl	5540 <_ZdlPv@plt>
    961c:	ldr	x20, [x19, #80]
    9620:	ldr	x22, [x19, #88]
    9624:	cmp	x22, x20
    9628:	b.eq	9648 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb40>  // b.none
    962c:	mov	x1, x20
    9630:	ldr	x0, [x1], #16
    9634:	cmp	x0, x1
    9638:	b.eq	9640 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb38>  // b.none
    963c:	bl	5540 <_ZdlPv@plt>
    9640:	add	x20, x20, #0x20
    9644:	b	9624 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb1c>
    9648:	ldr	x0, [x19, #80]
    964c:	cbz	x0, 9654 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb4c>
    9650:	bl	5540 <_ZdlPv@plt>
    9654:	mov	x0, x21
    9658:	bl	57e0 <_Unwind_Resume@plt>
    965c:	stp	x29, x30, [sp, #-48]!
    9660:	mov	x29, sp
    9664:	stp	x19, x20, [sp, #16]
    9668:	str	x21, [sp, #32]
    966c:	mov	x19, x0
    9670:	ldr	x0, [x0, #16]
    9674:	cbz	x0, 9684 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb7c>
    9678:	ldr	x1, [x0]
    967c:	ldr	x1, [x1, #8]
    9680:	blr	x1
    9684:	ldr	x0, [x19, #144]
    9688:	cbz	x0, 9698 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb90>
    968c:	ldr	x1, [x0]
    9690:	ldr	x1, [x1, #16]
    9694:	blr	x1
    9698:	ldr	x0, [x19, #104]
    969c:	add	x1, x19, #0x78
    96a0:	cmp	x0, x1
    96a4:	b.eq	96ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xba4>  // b.none
    96a8:	bl	5540 <_ZdlPv@plt>
    96ac:	ldr	x20, [x19, #80]
    96b0:	ldr	x21, [x19, #88]
    96b4:	cmp	x20, x21
    96b8:	b.ne	96e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbe0>  // b.any
    96bc:	ldr	x0, [x19, #80]
    96c0:	cbz	x0, 96c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc0>
    96c4:	bl	5540 <_ZdlPv@plt>
    96c8:	ldp	x19, x20, [sp, #16]
    96cc:	ldr	x21, [sp, #32]
    96d0:	ldp	x29, x30, [sp], #48
    96d4:	ret
    96d8:	bl	5540 <_ZdlPv@plt>
    96dc:	add	x20, x20, #0x20
    96e0:	cmp	x21, x20
    96e4:	b.eq	96bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbb4>  // b.none
    96e8:	mov	x1, x20
    96ec:	ldr	x0, [x1], #16
    96f0:	cmp	x0, x1
    96f4:	b.ne	96d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbd0>  // b.any
    96f8:	b	96dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbd4>
    96fc:	cbz	x0, 972c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc24>
    9700:	stp	x29, x30, [sp, #-32]!
    9704:	mov	x29, sp
    9708:	str	x19, [sp, #16]
    970c:	mov	x19, x0
    9710:	bl	965c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb54>
    9714:	mov	x1, #0x98                  	// #152
    9718:	mov	x0, x19
    971c:	bl	5560 <_ZdlPvm@plt>
    9720:	ldr	x19, [sp, #16]
    9724:	ldp	x29, x30, [sp], #32
    9728:	ret
    972c:	ret

0000000000009730 <gcc_cp_fe_context@@Base>:
    9730:	stp	x29, x30, [sp, #-32]!
    9734:	mov	x29, sp
    9738:	stp	x19, x20, [sp, #16]
    973c:	cmp	w1, #0x0
    9740:	ccmp	w0, #0x1, #0x2, eq  // eq = none
    9744:	b.hi	9768 <gcc_cp_fe_context@@Base+0x38>  // b.pmore
    9748:	mov	x0, #0x98                  	// #152
    974c:	bl	5550 <_Znwm@plt>
    9750:	mov	x19, x0
    9754:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    9758:	add	x2, x2, #0x658
    975c:	add	x1, x2, #0x228
    9760:	bl	9580 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa78>
    9764:	b	976c <gcc_cp_fe_context@@Base+0x3c>
    9768:	mov	x19, #0x0                   	// #0
    976c:	mov	x0, x19
    9770:	ldp	x19, x20, [sp, #16]
    9774:	ldp	x29, x30, [sp], #32
    9778:	ret
    977c:	mov	x20, x0
    9780:	mov	x1, #0x98                  	// #152
    9784:	mov	x0, x19
    9788:	bl	5560 <_ZdlPvm@plt>
    978c:	mov	x0, x20
    9790:	bl	57e0 <_Unwind_Resume@plt>
    9794:	sub	sp, sp, #0x270
    9798:	stp	x29, x30, [sp]
    979c:	mov	x29, sp
    97a0:	stp	x19, x20, [sp, #16]
    97a4:	stp	x21, x22, [sp, #32]
    97a8:	stp	x23, x24, [sp, #48]
    97ac:	stp	x25, x26, [sp, #64]
    97b0:	stp	x27, x28, [sp, #80]
    97b4:	mov	x20, x0
    97b8:	str	x1, [x29, #96]
    97bc:	ldr	x24, [x0, #16]
    97c0:	add	x19, x29, #0x88
    97c4:	add	x0, x19, #0x80
    97c8:	bl	5350 <_ZNSt8ios_baseC2Ev@plt>
    97cc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    97d0:	ldr	x0, [x0, #3216]
    97d4:	add	x0, x0, #0x10
    97d8:	str	x0, [x29, #264]
    97dc:	str	xzr, [x29, #480]
    97e0:	strb	wzr, [x29, #488]
    97e4:	strb	wzr, [x29, #489]
    97e8:	str	xzr, [x29, #496]
    97ec:	str	xzr, [x29, #504]
    97f0:	str	xzr, [x29, #512]
    97f4:	str	xzr, [x29, #520]
    97f8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    97fc:	ldr	x0, [x0, #3296]
    9800:	ldr	x21, [x0, #16]
    9804:	str	x21, [x29, #136]
    9808:	ldr	x26, [x0, #24]
    980c:	ldur	x0, [x21, #-24]
    9810:	str	x26, [x19, x0]
    9814:	str	xzr, [x29, #144]
    9818:	ldr	x0, [x29, #136]
    981c:	ldur	x0, [x0, #-24]
    9820:	mov	x1, #0x0                   	// #0
    9824:	add	x0, x19, x0
    9828:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    982c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9830:	ldr	x0, [x0, #3296]
    9834:	ldr	x22, [x0, #32]
    9838:	str	x22, [x29, #152]
    983c:	ldr	x27, [x0, #40]
    9840:	ldur	x0, [x22, #-24]
    9844:	add	x1, x29, #0x98
    9848:	str	x27, [x1, x0]
    984c:	ldr	x0, [x29, #152]
    9850:	ldur	x0, [x0, #-24]
    9854:	mov	x1, #0x0                   	// #0
    9858:	add	x2, x29, #0x98
    985c:	add	x0, x2, x0
    9860:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    9864:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9868:	ldr	x0, [x0, #3296]
    986c:	ldr	x23, [x0, #8]
    9870:	str	x23, [x29, #136]
    9874:	ldr	x28, [x0, #48]
    9878:	ldur	x0, [x23, #-24]
    987c:	add	x19, x29, #0x88
    9880:	str	x28, [x19, x0]
    9884:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9888:	ldr	x0, [x0, #3576]
    988c:	add	x1, x0, #0x18
    9890:	str	x1, [x29, #136]
    9894:	add	x1, x0, #0x68
    9898:	str	x1, [x29, #264]
    989c:	add	x0, x0, #0x40
    98a0:	str	x0, [x29, #152]
    98a4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    98a8:	ldr	x0, [x0, #3432]
    98ac:	add	x0, x0, #0x10
    98b0:	str	x0, [x29, #160]
    98b4:	str	xzr, [x29, #168]
    98b8:	str	xzr, [x29, #176]
    98bc:	str	xzr, [x29, #184]
    98c0:	str	xzr, [x29, #192]
    98c4:	str	xzr, [x29, #200]
    98c8:	str	xzr, [x29, #208]
    98cc:	add	x0, x19, #0x50
    98d0:	bl	5840 <_ZNSt6localeC1Ev@plt>
    98d4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    98d8:	ldr	x0, [x0, #4048]
    98dc:	add	x0, x0, #0x10
    98e0:	str	x0, [x29, #160]
    98e4:	mov	w0, #0x18                  	// #24
    98e8:	str	w0, [x29, #224]
    98ec:	add	x0, x19, #0x70
    98f0:	str	x0, [x29, #232]
    98f4:	str	xzr, [x29, #240]
    98f8:	strb	wzr, [x29, #248]
    98fc:	add	x1, x19, #0x18
    9900:	add	x0, x19, #0x80
    9904:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    9908:	b	99c0 <gcc_cp_fe_context@@Base+0x290>
    990c:	str	x21, [x29, #136]
    9910:	ldur	x1, [x21, #-24]
    9914:	add	x2, x29, #0x88
    9918:	str	x26, [x2, x1]
    991c:	mov	x19, x0
    9920:	str	xzr, [x29, #144]
    9924:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9928:	ldr	x0, [x0, #3216]
    992c:	add	x0, x0, #0x10
    9930:	str	x0, [x29, #264]
    9934:	add	x0, x29, #0x108
    9938:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    993c:	mov	x0, x19
    9940:	bl	57e0 <_Unwind_Resume@plt>
    9944:	mov	x19, x0
    9948:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    994c:	ldr	x0, [x0, #4048]
    9950:	add	x0, x0, #0x10
    9954:	str	x0, [x29, #160]
    9958:	ldr	x0, [x29, #232]
    995c:	add	x1, x29, #0xf8
    9960:	cmp	x0, x1
    9964:	b.eq	996c <gcc_cp_fe_context@@Base+0x23c>  // b.none
    9968:	bl	5540 <_ZdlPv@plt>
    996c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9970:	ldr	x0, [x0, #3432]
    9974:	add	x0, x0, #0x10
    9978:	str	x0, [x29, #160]
    997c:	add	x20, x29, #0x88
    9980:	add	x0, x29, #0xd8
    9984:	bl	5690 <_ZNSt6localeD1Ev@plt>
    9988:	str	x23, [x29, #136]
    998c:	ldur	x0, [x23, #-24]
    9990:	str	x28, [x20, x0]
    9994:	str	x22, [x29, #152]
    9998:	ldur	x0, [x22, #-24]
    999c:	add	x1, x29, #0x98
    99a0:	str	x27, [x1, x0]
    99a4:	str	x21, [x29, #136]
    99a8:	ldur	x0, [x21, #-24]
    99ac:	str	x26, [x20, x0]
    99b0:	str	xzr, [x29, #144]
    99b4:	b	9924 <gcc_cp_fe_context@@Base+0x1f4>
    99b8:	mov	x19, x0
    99bc:	b	9924 <gcc_cp_fe_context@@Base+0x1f4>
    99c0:	mov	x2, #0x1                   	// #1
    99c4:	adrp	x1, 16000 <xexit@@Base+0xc24>
    99c8:	add	x1, x1, #0xf0
    99cc:	add	x0, x29, #0x98
    99d0:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    99d4:	cbz	x24, 99f4 <gcc_cp_fe_context@@Base+0x2c4>
    99d8:	mov	x0, x24
    99dc:	bl	5360 <strlen@plt>
    99e0:	mov	x2, x0
    99e4:	mov	x1, x24
    99e8:	add	x0, x29, #0x98
    99ec:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    99f0:	b	9a10 <gcc_cp_fe_context@@Base+0x2e0>
    99f4:	ldr	x0, [x29, #152]
    99f8:	ldur	x1, [x0, #-24]
    99fc:	add	x0, x29, #0x98
    9a00:	add	x0, x0, x1
    9a04:	ldr	w1, [x0, #32]
    9a08:	orr	w1, w1, #0x1
    9a0c:	bl	57a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    9a10:	mov	x2, #0x1                   	// #1
    9a14:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    9a18:	add	x1, x1, #0x510
    9a1c:	add	x0, x29, #0x98
    9a20:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9a24:	b	9a5c <gcc_cp_fe_context@@Base+0x32c>
    9a28:	cmp	w19, #0x23
    9a2c:	b.hi	9a48 <gcc_cp_fe_context@@Base+0x318>  // b.pmore
    9a30:	strb	w19, [x29, #134]
    9a34:	mov	x2, x25
    9a38:	ldr	x1, [x29, #112]
    9a3c:	ldr	x0, [x29, #120]
    9a40:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9a44:	b	9a88 <gcc_cp_fe_context@@Base+0x358>
    9a48:	lsl	x0, x25, x19
    9a4c:	mov	x1, #0x4f1000000000        	// #86930138071040
    9a50:	tst	x0, x1
    9a54:	b.ne	9ac0 <gcc_cp_fe_context@@Base+0x390>  // b.any
    9a58:	b	9a30 <gcc_cp_fe_context@@Base+0x300>
    9a5c:	mov	w19, #0x67                  	// #103
    9a60:	adrp	x24, 15000 <iterative_hash@@Base+0xec>
    9a64:	add	x24, x24, #0x708
    9a68:	add	x0, x29, #0x86
    9a6c:	str	x0, [x29, #112]
    9a70:	add	x0, x29, #0x98
    9a74:	str	x0, [x29, #120]
    9a78:	mov	x25, #0x1                   	// #1
    9a7c:	add	x0, x29, #0x87
    9a80:	str	x0, [x29, #104]
    9a84:	b	9a30 <gcc_cp_fe_context@@Base+0x300>
    9a88:	ldrb	w19, [x24, #1]!
    9a8c:	cbz	w19, 9adc <gcc_cp_fe_context@@Base+0x3ac>
    9a90:	cmp	w19, #0x2e
    9a94:	b.ls	9a28 <gcc_cp_fe_context@@Base+0x2f8>  // b.plast
    9a98:	sub	w0, w19, #0x3f
    9a9c:	and	w0, w0, #0xff
    9aa0:	cmp	w0, #0x3d
    9aa4:	b.hi	9a30 <gcc_cp_fe_context@@Base+0x300>  // b.pmore
    9aa8:	lsl	x0, x25, x0
    9aac:	mov	x1, #0x1                   	// #1
    9ab0:	movk	x1, #0xb000, lsl #16
    9ab4:	movk	x1, #0x3000, lsl #48
    9ab8:	tst	x0, x1
    9abc:	b.eq	9a30 <gcc_cp_fe_context@@Base+0x300>  // b.none
    9ac0:	mov	w0, #0x5c                  	// #92
    9ac4:	strb	w0, [x29, #135]
    9ac8:	mov	x2, x25
    9acc:	ldr	x1, [x29, #104]
    9ad0:	ldr	x0, [x29, #120]
    9ad4:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9ad8:	b	9a30 <gcc_cp_fe_context@@Base+0x300>
    9adc:	mov	x2, #0x1                   	// #1
    9ae0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    9ae4:	add	x1, x1, #0x518
    9ae8:	add	x0, x29, #0x98
    9aec:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9af0:	add	x0, x29, #0x260
    9af4:	str	x0, [x29, #592]
    9af8:	str	xzr, [x29, #600]
    9afc:	strb	wzr, [x29, #608]
    9b00:	ldr	x0, [x29, #200]
    9b04:	cbz	x0, 9b4c <gcc_cp_fe_context@@Base+0x41c>
    9b08:	ldr	x4, [x29, #184]
    9b0c:	cmp	x0, x4
    9b10:	b.ls	9b30 <gcc_cp_fe_context@@Base+0x400>  // b.plast
    9b14:	ldr	x3, [x29, #192]
    9b18:	sub	x4, x0, x3
    9b1c:	mov	x2, #0x0                   	// #0
    9b20:	mov	x1, #0x0                   	// #0
    9b24:	add	x0, x29, #0x250
    9b28:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    9b2c:	b	9b58 <gcc_cp_fe_context@@Base+0x428>
    9b30:	ldr	x3, [x29, #192]
    9b34:	sub	x4, x4, x3
    9b38:	mov	x2, #0x0                   	// #0
    9b3c:	mov	x1, #0x0                   	// #0
    9b40:	add	x0, x29, #0x250
    9b44:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    9b48:	b	9b58 <gcc_cp_fe_context@@Base+0x428>
    9b4c:	add	x1, x29, #0xe8
    9b50:	add	x0, x29, #0x250
    9b54:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    9b58:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9b5c:	ldr	x0, [x0, #3576]
    9b60:	add	x1, x0, #0x18
    9b64:	str	x1, [x29, #136]
    9b68:	add	x1, x0, #0x68
    9b6c:	str	x1, [x29, #264]
    9b70:	add	x0, x0, #0x40
    9b74:	str	x0, [x29, #152]
    9b78:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9b7c:	ldr	x0, [x0, #4048]
    9b80:	add	x0, x0, #0x10
    9b84:	str	x0, [x29, #160]
    9b88:	ldr	x0, [x29, #232]
    9b8c:	add	x1, x29, #0xf8
    9b90:	cmp	x0, x1
    9b94:	b.eq	9b9c <gcc_cp_fe_context@@Base+0x46c>  // b.none
    9b98:	bl	5540 <_ZdlPv@plt>
    9b9c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9ba0:	ldr	x0, [x0, #3432]
    9ba4:	add	x0, x0, #0x10
    9ba8:	str	x0, [x29, #160]
    9bac:	add	x19, x29, #0x88
    9bb0:	add	x0, x29, #0xd8
    9bb4:	bl	5690 <_ZNSt6localeD1Ev@plt>
    9bb8:	str	x23, [x29, #136]
    9bbc:	ldur	x0, [x23, #-24]
    9bc0:	str	x28, [x19, x0]
    9bc4:	str	x22, [x29, #152]
    9bc8:	ldur	x0, [x22, #-24]
    9bcc:	add	x1, x29, #0x98
    9bd0:	str	x27, [x1, x0]
    9bd4:	str	x21, [x29, #136]
    9bd8:	ldur	x0, [x21, #-24]
    9bdc:	str	x26, [x19, x0]
    9be0:	str	xzr, [x29, #144]
    9be4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9be8:	ldr	x0, [x0, #3216]
    9bec:	add	x0, x0, #0x10
    9bf0:	str	x0, [x29, #264]
    9bf4:	add	x0, x19, #0x80
    9bf8:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    9bfc:	ldr	x0, [x20, #8]
    9c00:	ldrb	w0, [x0, #136]
    9c04:	cbnz	w0, 9c4c <gcc_cp_fe_context@@Base+0x51c>
    9c08:	mov	w2, #0x9                   	// #9
    9c0c:	ldr	x1, [x29, #592]
    9c10:	add	x0, x29, #0x210
    9c14:	bl	52d0 <xregcomp@plt>
    9c18:	b	9c6c <gcc_cp_fe_context@@Base+0x53c>
    9c1c:	mov	x19, x0
    9c20:	ldr	x0, [x29, #592]
    9c24:	add	x1, x29, #0x260
    9c28:	cmp	x0, x1
    9c2c:	b.eq	9c34 <gcc_cp_fe_context@@Base+0x504>  // b.none
    9c30:	bl	5540 <_ZdlPv@plt>
    9c34:	add	x0, x29, #0x88
    9c38:	bl	54f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    9c3c:	mov	x0, x19
    9c40:	bl	57e0 <_Unwind_Resume@plt>
    9c44:	mov	x19, x0
    9c48:	b	9c34 <gcc_cp_fe_context@@Base+0x504>
    9c4c:	ldr	x2, [x29, #592]
    9c50:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    9c54:	add	x1, x1, #0x520
    9c58:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9c5c:	ldr	x0, [x0, #3968]
    9c60:	ldr	x0, [x0]
    9c64:	bl	5370 <fprintf@plt>
    9c68:	b	9c08 <gcc_cp_fe_context@@Base+0x4d8>
    9c6c:	mov	w19, w0
    9c70:	cbz	w0, 9d10 <gcc_cp_fe_context@@Base+0x5e0>
    9c74:	mov	x20, sp
    9c78:	mov	x3, #0x0                   	// #0
    9c7c:	mov	x2, #0x0                   	// #0
    9c80:	add	x1, x29, #0x210
    9c84:	bl	57b0 <xregerror@plt>
    9c88:	mov	x3, x0
    9c8c:	add	x0, x0, #0xf
    9c90:	and	x0, x0, #0xfffffffffffffff0
    9c94:	sub	sp, sp, x0
    9c98:	mov	x21, sp
    9c9c:	mov	x2, sp
    9ca0:	add	x1, x29, #0x210
    9ca4:	mov	w0, w19
    9ca8:	bl	57b0 <xregerror@plt>
    9cac:	mov	x4, #0x0                   	// #0
    9cb0:	mov	x3, x21
    9cb4:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    9cb8:	add	x2, x2, #0x550
    9cbc:	ldr	x1, [x29, #592]
    9cc0:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    9cc4:	add	x0, x0, #0x558
    9cc8:	bl	5510 <concat@plt>
    9ccc:	mov	x19, x0
    9cd0:	mov	sp, x20
    9cd4:	ldr	x0, [x29, #592]
    9cd8:	add	x1, x29, #0x260
    9cdc:	cmp	x0, x1
    9ce0:	b.eq	9ce8 <gcc_cp_fe_context@@Base+0x5b8>  // b.none
    9ce4:	bl	5540 <_ZdlPv@plt>
    9ce8:	mov	x0, x19
    9cec:	mov	sp, x29
    9cf0:	ldp	x19, x20, [sp, #16]
    9cf4:	ldp	x21, x22, [sp, #32]
    9cf8:	ldp	x23, x24, [sp, #48]
    9cfc:	ldp	x25, x26, [sp, #64]
    9d00:	ldp	x27, x28, [sp, #80]
    9d04:	ldp	x29, x30, [sp]
    9d08:	add	sp, sp, #0x270
    9d0c:	ret
    9d10:	ldr	x1, [x29, #96]
    9d14:	add	x0, x29, #0x210
    9d18:	bl	5924 <_ZNSt6localeC1Ev@plt+0xe4>
    9d1c:	and	w0, w0, #0xff
    9d20:	cbnz	w0, 9d50 <gcc_cp_fe_context@@Base+0x620>
    9d24:	add	x0, x29, #0x210
    9d28:	bl	5380 <xregfree@plt>
    9d2c:	mov	x3, #0x0                   	// #0
    9d30:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    9d34:	add	x2, x2, #0x578
    9d38:	ldr	x1, [x29, #592]
    9d3c:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    9d40:	add	x0, x0, #0x580
    9d44:	bl	5510 <concat@plt>
    9d48:	mov	x19, x0
    9d4c:	b	9cd4 <gcc_cp_fe_context@@Base+0x5a4>
    9d50:	add	x0, x29, #0x210
    9d54:	bl	5380 <xregfree@plt>
    9d58:	ldr	x0, [x20, #8]
    9d5c:	ldrb	w0, [x0, #136]
    9d60:	cbz	w0, 9d8c <gcc_cp_fe_context@@Base+0x65c>
    9d64:	ldr	x0, [x29, #96]
    9d68:	ldr	x2, [x0]
    9d6c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    9d70:	add	x1, x1, #0x5a8
    9d74:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    9d78:	ldr	x0, [x0, #3968]
    9d7c:	ldr	x0, [x0]
    9d80:	bl	5370 <fprintf@plt>
    9d84:	mov	x19, #0x0                   	// #0
    9d88:	b	9cd4 <gcc_cp_fe_context@@Base+0x5a4>
    9d8c:	mov	x19, #0x0                   	// #0
    9d90:	b	9cd4 <gcc_cp_fe_context@@Base+0x5a4>
    9d94:	mov	sp, x20
    9d98:	mov	x19, x0
    9d9c:	ldr	x0, [x29, #592]
    9da0:	add	x1, x29, #0x260
    9da4:	cmp	x0, x1
    9da8:	b.eq	9db0 <gcc_cp_fe_context@@Base+0x680>  // b.none
    9dac:	bl	5540 <_ZdlPv@plt>
    9db0:	mov	x0, x19
    9db4:	bl	57e0 <_Unwind_Resume@plt>
    9db8:	mov	x19, x0
    9dbc:	b	9d9c <gcc_cp_fe_context@@Base+0x66c>
    9dc0:	stp	x29, x30, [sp, #-64]!
    9dc4:	mov	x29, sp
    9dc8:	stp	x19, x20, [sp, #16]
    9dcc:	mov	x20, x0
    9dd0:	mov	x19, x1
    9dd4:	ldr	x0, [x0, #144]
    9dd8:	cbz	x0, 9de8 <gcc_cp_fe_context@@Base+0x6b8>
    9ddc:	ldr	x1, [x0]
    9de0:	ldr	x1, [x1, #16]
    9de4:	blr	x1
    9de8:	add	x0, sp, #0x30
    9dec:	str	x0, [sp, #32]
    9df0:	mov	x2, #0xffffffffffffffff    	// #-1
    9df4:	cbz	x19, 9e04 <gcc_cp_fe_context@@Base+0x6d4>
    9df8:	mov	x0, x19
    9dfc:	bl	5360 <strlen@plt>
    9e00:	add	x2, x19, x0
    9e04:	mov	w3, #0x0                   	// #0
    9e08:	mov	x1, x19
    9e0c:	add	x0, sp, #0x20
    9e10:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    9e14:	mov	x0, #0x30                  	// #48
    9e18:	bl	5550 <_Znwm@plt>
    9e1c:	mov	x19, x0
    9e20:	str	x20, [x0, #8]
    9e24:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    9e28:	add	x1, x1, #0x640
    9e2c:	str	x1, [x0], #16
    9e30:	add	x1, x0, #0x10
    9e34:	str	x1, [x19, #16]
    9e38:	ldr	x1, [sp, #32]
    9e3c:	mov	w3, #0x0                   	// #0
    9e40:	ldr	x2, [sp, #40]
    9e44:	add	x2, x1, x2
    9e48:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    9e4c:	str	x19, [x20, #144]
    9e50:	ldr	x0, [sp, #32]
    9e54:	add	x1, sp, #0x30
    9e58:	cmp	x0, x1
    9e5c:	b.eq	9e64 <gcc_cp_fe_context@@Base+0x734>  // b.none
    9e60:	bl	5540 <_ZdlPv@plt>
    9e64:	mov	x0, #0x0                   	// #0
    9e68:	ldp	x19, x20, [sp, #16]
    9e6c:	ldp	x29, x30, [sp], #64
    9e70:	ret
    9e74:	mov	x20, x0
    9e78:	mov	x1, #0x30                  	// #48
    9e7c:	mov	x0, x19
    9e80:	bl	5560 <_ZdlPvm@plt>
    9e84:	ldr	x0, [sp, #32]
    9e88:	add	x1, sp, #0x30
    9e8c:	cmp	x0, x1
    9e90:	b.eq	9e98 <gcc_cp_fe_context@@Base+0x768>  // b.none
    9e94:	bl	5540 <_ZdlPv@plt>
    9e98:	mov	x0, x20
    9e9c:	bl	57e0 <_Unwind_Resume@plt>
    9ea0:	mov	x20, x0
    9ea4:	b	9e84 <gcc_cp_fe_context@@Base+0x754>
    9ea8:	stp	x29, x30, [sp, #-64]!
    9eac:	mov	x29, sp
    9eb0:	stp	x19, x20, [sp, #16]
    9eb4:	mov	x20, x0
    9eb8:	mov	x19, x1
    9ebc:	ldr	x0, [x0, #144]
    9ec0:	cbz	x0, 9ed0 <gcc_cp_fe_context@@Base+0x7a0>
    9ec4:	ldr	x1, [x0]
    9ec8:	ldr	x1, [x1, #16]
    9ecc:	blr	x1
    9ed0:	add	x0, sp, #0x30
    9ed4:	str	x0, [sp, #32]
    9ed8:	mov	x2, #0xffffffffffffffff    	// #-1
    9edc:	cbz	x19, 9eec <gcc_cp_fe_context@@Base+0x7bc>
    9ee0:	mov	x0, x19
    9ee4:	bl	5360 <strlen@plt>
    9ee8:	add	x2, x19, x0
    9eec:	mov	w3, #0x0                   	// #0
    9ef0:	mov	x1, x19
    9ef4:	add	x0, sp, #0x20
    9ef8:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    9efc:	mov	x0, #0x30                  	// #48
    9f00:	bl	5550 <_Znwm@plt>
    9f04:	mov	x19, x0
    9f08:	str	x20, [x0, #8]
    9f0c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    9f10:	add	x1, x1, #0x618
    9f14:	str	x1, [x0], #16
    9f18:	add	x1, x0, #0x10
    9f1c:	str	x1, [x19, #16]
    9f20:	ldr	x1, [sp, #32]
    9f24:	mov	w3, #0x0                   	// #0
    9f28:	ldr	x2, [sp, #40]
    9f2c:	add	x2, x1, x2
    9f30:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    9f34:	str	x19, [x20, #144]
    9f38:	ldr	x0, [sp, #32]
    9f3c:	add	x1, sp, #0x30
    9f40:	cmp	x0, x1
    9f44:	b.eq	9f4c <gcc_cp_fe_context@@Base+0x81c>  // b.none
    9f48:	bl	5540 <_ZdlPv@plt>
    9f4c:	mov	x0, #0x0                   	// #0
    9f50:	ldp	x19, x20, [sp, #16]
    9f54:	ldp	x29, x30, [sp], #64
    9f58:	ret
    9f5c:	mov	x20, x0
    9f60:	mov	x1, #0x30                  	// #48
    9f64:	mov	x0, x19
    9f68:	bl	5560 <_ZdlPvm@plt>
    9f6c:	ldr	x0, [sp, #32]
    9f70:	add	x1, sp, #0x30
    9f74:	cmp	x0, x1
    9f78:	b.eq	9f80 <gcc_cp_fe_context@@Base+0x850>  // b.none
    9f7c:	bl	5540 <_ZdlPv@plt>
    9f80:	mov	x0, x20
    9f84:	bl	57e0 <_Unwind_Resume@plt>
    9f88:	mov	x20, x0
    9f8c:	b	9f6c <gcc_cp_fe_context@@Base+0x83c>
    9f90:	stp	x29, x30, [sp, #-224]!
    9f94:	mov	x29, sp
    9f98:	stp	x19, x20, [sp, #16]
    9f9c:	stp	x21, x22, [sp, #32]
    9fa0:	mov	x19, x0
    9fa4:	mov	x22, x1
    9fa8:	add	x3, sp, #0xd8
    9fac:	mov	w2, #0x0                   	// #0
    9fb0:	mov	w1, #0x1                   	// #1
    9fb4:	mov	w0, w1
    9fb8:	bl	52f0 <socketpair@plt>
    9fbc:	cbz	w0, 9fec <gcc_cp_fe_context@@Base+0x8bc>
    9fc0:	ldr	x2, [x19, #64]
    9fc4:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    9fc8:	add	x1, x1, #0x5c0
    9fcc:	ldr	x0, [x19, #72]
    9fd0:	blr	x2
    9fd4:	mov	w20, #0x0                   	// #0
    9fd8:	mov	w0, w20
    9fdc:	ldp	x19, x20, [sp, #16]
    9fe0:	ldp	x21, x22, [sp, #32]
    9fe4:	ldp	x29, x30, [sp], #224
    9fe8:	ret
    9fec:	mov	w20, w0
    9ff0:	add	x0, sp, #0xd0
    9ff4:	bl	5310 <pipe@plt>
    9ff8:	mov	w21, w0
    9ffc:	cbz	w0, a028 <gcc_cp_fe_context@@Base+0x8f8>
    a000:	ldr	x2, [x19, #64]
    a004:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a008:	add	x1, x1, #0x5e0
    a00c:	ldr	x0, [x19, #72]
    a010:	blr	x2
    a014:	ldr	w0, [sp, #216]
    a018:	bl	56b0 <close@plt>
    a01c:	ldr	w0, [sp, #220]
    a020:	bl	56b0 <close@plt>
    a024:	b	9fd8 <gcc_cp_fe_context@@Base+0x8a8>
    a028:	stp	x23, x24, [sp, #48]
    a02c:	add	x23, x19, #0x50
    a030:	add	x20, sp, #0x48
    a034:	add	x0, x20, #0x10
    a038:	str	x0, [sp, #72]
    a03c:	mov	w3, #0x0                   	// #0
    a040:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    a044:	add	x2, x2, #0x725
    a048:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a04c:	add	x1, x1, #0x710
    a050:	mov	x0, x20
    a054:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a058:	mov	x1, x20
    a05c:	mov	x0, x23
    a060:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a064:	ldr	x0, [sp, #72]
    a068:	add	x1, sp, #0x58
    a06c:	cmp	x0, x1
    a070:	b.eq	a078 <gcc_cp_fe_context@@Base+0x948>  // b.none
    a074:	bl	5540 <_ZdlPv@plt>
    a078:	add	x20, sp, #0x68
    a07c:	ldr	w3, [sp, #220]
    a080:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    a084:	add	x2, x2, #0x728
    a088:	mov	x1, #0x64                  	// #100
    a08c:	mov	x0, x20
    a090:	bl	55b0 <snprintf@plt>
    a094:	add	x24, sp, #0x48
    a098:	add	x0, sp, #0x58
    a09c:	str	x0, [sp, #72]
    a0a0:	mov	x0, x20
    a0a4:	bl	5360 <strlen@plt>
    a0a8:	mov	w3, #0x0                   	// #0
    a0ac:	add	x2, x20, x0
    a0b0:	mov	x1, x20
    a0b4:	mov	x0, x24
    a0b8:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a0bc:	mov	x1, x24
    a0c0:	mov	x0, x23
    a0c4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a0c8:	ldr	x0, [sp, #72]
    a0cc:	add	x1, sp, #0x58
    a0d0:	cmp	x0, x1
    a0d4:	b.eq	a0dc <gcc_cp_fe_context@@Base+0x9ac>  // b.none
    a0d8:	bl	5540 <_ZdlPv@plt>
    a0dc:	ldr	x0, [x19, #88]
    a0e0:	ldr	x1, [x19, #96]
    a0e4:	cmp	x0, x1
    a0e8:	b.eq	a14c <gcc_cp_fe_context@@Base+0xa1c>  // b.none
    a0ec:	add	x1, x0, #0x10
    a0f0:	str	x1, [x0]
    a0f4:	ldr	x1, [x19, #104]
    a0f8:	ldr	x2, [x19, #112]
    a0fc:	mov	w3, #0x0                   	// #0
    a100:	add	x2, x1, x2
    a104:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a108:	ldr	x0, [x19, #88]
    a10c:	add	x0, x0, #0x20
    a110:	str	x0, [x19, #88]
    a114:	add	x20, sp, #0x48
    a118:	add	x0, x20, #0x10
    a11c:	str	x0, [sp, #72]
    a120:	mov	w3, #0x0                   	// #0
    a124:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    a128:	add	x2, x2, #0x632
    a12c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a130:	add	x1, x1, #0x630
    a134:	mov	x0, x20
    a138:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a13c:	mov	x1, x20
    a140:	mov	x0, x23
    a144:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a148:	b	a160 <gcc_cp_fe_context@@Base+0xa30>
    a14c:	add	x2, x19, #0x68
    a150:	mov	x1, x0
    a154:	mov	x0, x23
    a158:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a15c:	b	a114 <gcc_cp_fe_context@@Base+0x9e4>
    a160:	ldr	x0, [sp, #72]
    a164:	add	x1, sp, #0x58
    a168:	cmp	x0, x1
    a16c:	b.eq	a174 <gcc_cp_fe_context@@Base+0xa44>  // b.none
    a170:	bl	5540 <_ZdlPv@plt>
    a174:	add	x20, sp, #0x48
    a178:	add	x0, x20, #0x10
    a17c:	str	x0, [sp, #72]
    a180:	mov	w3, #0x0                   	// #0
    a184:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    a188:	add	x2, x2, #0x63a
    a18c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a190:	add	x1, x1, #0x638
    a194:	mov	x0, x20
    a198:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a19c:	mov	x1, x20
    a1a0:	mov	x0, x23
    a1a4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a1a8:	ldr	x0, [sp, #72]
    a1ac:	add	x1, sp, #0x58
    a1b0:	cmp	x0, x1
    a1b4:	b.eq	a1bc <gcc_cp_fe_context@@Base+0xa8c>  // b.none
    a1b8:	bl	5540 <_ZdlPv@plt>
    a1bc:	add	x0, sp, #0x58
    a1c0:	str	x0, [sp, #72]
    a1c4:	mov	x2, #0xffffffffffffffff    	// #-1
    a1c8:	cbz	x22, a1d8 <gcc_cp_fe_context@@Base+0xaa8>
    a1cc:	mov	x0, x22
    a1d0:	bl	5360 <strlen@plt>
    a1d4:	add	x2, x22, x0
    a1d8:	add	x20, sp, #0x48
    a1dc:	mov	w3, #0x0                   	// #0
    a1e0:	mov	x1, x22
    a1e4:	mov	x0, x20
    a1e8:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a1ec:	mov	x1, x20
    a1f0:	mov	x0, x23
    a1f4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a1f8:	ldr	x0, [sp, #72]
    a1fc:	add	x1, sp, #0x58
    a200:	cmp	x0, x1
    a204:	b.eq	a20c <gcc_cp_fe_context@@Base+0xadc>  // b.none
    a208:	bl	5540 <_ZdlPv@plt>
    a20c:	ldrb	w0, [x19, #136]
    a210:	cbz	w0, a25c <gcc_cp_fe_context@@Base+0xb2c>
    a214:	add	x20, sp, #0x48
    a218:	add	x0, x20, #0x10
    a21c:	str	x0, [sp, #72]
    a220:	mov	w3, #0x0                   	// #0
    a224:	adrp	x2, 15000 <iterative_hash@@Base+0xec>
    a228:	add	x2, x2, #0x642
    a22c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a230:	add	x1, x1, #0x640
    a234:	mov	x0, x20
    a238:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a23c:	mov	x1, x20
    a240:	mov	x0, x23
    a244:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a248:	ldr	x0, [sp, #72]
    a24c:	add	x1, sp, #0x58
    a250:	cmp	x0, x1
    a254:	b.eq	a25c <gcc_cp_fe_context@@Base+0xb2c>  // b.none
    a258:	bl	5540 <_ZdlPv@plt>
    a25c:	mov	x0, #0x20                  	// #32
    a260:	bl	5550 <_Znwm@plt>
    a264:	mov	x20, x0
    a268:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    a26c:	ldr	x0, [x0, #3344]
    a270:	add	x0, x0, #0x10
    a274:	str	x0, [x20]
    a278:	ldr	w0, [sp, #216]
    a27c:	str	w0, [x20, #8]
    a280:	ldr	w0, [sp, #208]
    a284:	str	w0, [x20, #12]
    a288:	add	x22, x20, #0x10
    a28c:	mov	x0, x22
    a290:	bl	d208 <gcc_cp_fe_context@@Base+0x3ad8>
    a294:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    a298:	add	x0, x0, #0x5c8
    a29c:	str	x0, [x20]
    a2a0:	str	x19, [x20, #24]
    a2a4:	str	x20, [x19, #16]
    a2a8:	adrp	x2, 8000 <gcc_c_fe_context@@Base+0x1b40>
    a2ac:	add	x2, x2, #0xfc8
    a2b0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a2b4:	add	x1, x1, #0x648
    a2b8:	mov	x0, x22
    a2bc:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    a2c0:	ldr	x0, [x19, #16]
    a2c4:	adrp	x2, 8000 <gcc_c_fe_context@@Base+0x1b40>
    a2c8:	add	x2, x2, #0xe54
    a2cc:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a2d0:	add	x1, x1, #0x658
    a2d4:	add	x0, x0, #0x10
    a2d8:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    a2dc:	ldr	x0, [x19, #16]
    a2e0:	adrp	x2, 8000 <gcc_c_fe_context@@Base+0x1b40>
    a2e4:	add	x2, x2, #0xf08
    a2e8:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a2ec:	add	x1, x1, #0x748
    a2f0:	add	x0, x0, #0x10
    a2f4:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    a2f8:	ldr	x0, [x19, #16]
    a2fc:	adrp	x2, 8000 <gcc_c_fe_context@@Base+0x1b40>
    a300:	add	x2, x2, #0xdfc
    a304:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
    a308:	add	x1, x1, #0x758
    a30c:	add	x0, x0, #0x10
    a310:	bl	d26c <gcc_cp_fe_context@@Base+0x3b3c>
    a314:	ldr	x0, [x19, #88]
    a318:	ldr	x1, [x19, #80]
    a31c:	sub	x0, x0, x1
    a320:	asr	x0, x0, #5
    a324:	add	x0, x0, #0x1
    a328:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    a32c:	cmp	x0, x1
    a330:	b.hi	a410 <gcc_cp_fe_context@@Base+0xce0>  // b.pmore
    a334:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    a338:	ldr	x1, [x1, #3256]
    a33c:	lsl	x0, x0, #3
    a340:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    a344:	mov	x20, x0
    a348:	cbz	x0, a4c8 <gcc_cp_fe_context@@Base+0xd98>
    a34c:	ldr	x5, [x19, #80]
    a350:	ldr	x0, [x19, #88]
    a354:	sub	x0, x0, x5
    a358:	asr	x4, x0, #5
    a35c:	cmp	xzr, x0, asr #5
    a360:	b.eq	a388 <gcc_cp_fe_context@@Base+0xc58>  // b.none
    a364:	mov	w1, #0x0                   	// #0
    a368:	mov	x2, #0x0                   	// #0
    a36c:	lsl	x3, x2, #5
    a370:	ldr	x3, [x5, x3]
    a374:	str	x3, [x20, x2, lsl #3]
    a378:	add	w1, w1, #0x1
    a37c:	mov	w2, w1
    a380:	cmp	x4, w1, uxtw
    a384:	b.hi	a36c <gcc_cp_fe_context@@Base+0xc3c>  // b.pmore
    a388:	str	xzr, [x20, x4, lsl #3]
    a38c:	bl	5680 <fork@plt>
    a390:	mov	w22, w0
    a394:	cmn	w0, #0x1
    a398:	b.eq	a414 <gcc_cp_fe_context@@Base+0xce4>  // b.none
    a39c:	cbz	w0, a440 <gcc_cp_fe_context@@Base+0xd10>
    a3a0:	ldr	w0, [sp, #220]
    a3a4:	bl	56b0 <close@plt>
    a3a8:	ldr	w0, [sp, #212]
    a3ac:	bl	56b0 <close@plt>
    a3b0:	mov	w1, #0x48                  	// #72
    a3b4:	ldr	x0, [x19, #16]
    a3b8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    a3bc:	mov	w20, w0
    a3c0:	cbnz	w0, a484 <gcc_cp_fe_context@@Base+0xd54>
    a3c4:	ldr	w0, [sp, #216]
    a3c8:	bl	56b0 <close@plt>
    a3cc:	ldr	w0, [sp, #208]
    a3d0:	bl	56b0 <close@plt>
    a3d4:	mov	w2, #0x0                   	// #0
    a3d8:	add	x1, sp, #0x48
    a3dc:	mov	w0, w22
    a3e0:	bl	53b0 <waitpid@plt>
    a3e4:	cmn	w0, #0x1
    a3e8:	b.eq	a4ac <gcc_cp_fe_context@@Base+0xd7c>  // b.none
    a3ec:	ldr	w0, [sp, #72]
    a3f0:	ubfx	x1, x0, #8, #8
    a3f4:	and	w0, w0, #0x7f
    a3f8:	orr	w0, w1, w0
    a3fc:	cmp	w20, #0x0
    a400:	cset	w20, ne  // ne = any
    a404:	cbnz	w0, a4bc <gcc_cp_fe_context@@Base+0xd8c>
    a408:	ldp	x23, x24, [sp, #48]
    a40c:	b	9fd8 <gcc_cp_fe_context@@Base+0x8a8>
    a410:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    a414:	ldr	w0, [sp, #216]
    a418:	bl	56b0 <close@plt>
    a41c:	ldr	w0, [sp, #220]
    a420:	bl	56b0 <close@plt>
    a424:	ldr	w0, [sp, #208]
    a428:	bl	56b0 <close@plt>
    a42c:	ldr	w0, [sp, #212]
    a430:	bl	56b0 <close@plt>
    a434:	mov	w20, w21
    a438:	ldp	x23, x24, [sp, #48]
    a43c:	b	9fd8 <gcc_cp_fe_context@@Base+0x8a8>
    a440:	mov	w1, #0x1                   	// #1
    a444:	ldr	w0, [sp, #212]
    a448:	bl	5320 <dup2@plt>
    a44c:	mov	w1, #0x2                   	// #2
    a450:	ldr	w0, [sp, #212]
    a454:	bl	5320 <dup2@plt>
    a458:	ldr	w0, [sp, #208]
    a45c:	bl	56b0 <close@plt>
    a460:	ldr	w0, [sp, #212]
    a464:	bl	56b0 <close@plt>
    a468:	ldr	w0, [sp, #216]
    a46c:	bl	56b0 <close@plt>
    a470:	mov	x1, x20
    a474:	ldr	x0, [x20]
    a478:	bl	52e0 <execvp@plt>
    a47c:	mov	w0, #0x7f                  	// #127
    a480:	bl	5490 <_exit@plt>
    a484:	mov	x1, #0x0                   	// #0
    a488:	ldr	x0, [x19, #16]
    a48c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    a490:	mov	w20, w0
    a494:	cbz	w0, a3c4 <gcc_cp_fe_context@@Base+0xc94>
    a498:	mov	w1, #0x0                   	// #0
    a49c:	ldr	x0, [x19, #16]
    a4a0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    a4a4:	mov	w20, w0
    a4a8:	b	a3c4 <gcc_cp_fe_context@@Base+0xc94>
    a4ac:	bl	5620 <__errno_location@plt>
    a4b0:	ldr	w0, [x0]
    a4b4:	cmp	w0, #0x4
    a4b8:	b.eq	a3ec <gcc_cp_fe_context@@Base+0xcbc>  // b.none
    a4bc:	mov	w20, w21
    a4c0:	ldp	x23, x24, [sp, #48]
    a4c4:	b	9fd8 <gcc_cp_fe_context@@Base+0x8a8>
    a4c8:	mov	w20, w21
    a4cc:	ldp	x23, x24, [sp, #48]
    a4d0:	b	9fd8 <gcc_cp_fe_context@@Base+0x8a8>
    a4d4:	mov	x19, x0
    a4d8:	ldr	x0, [sp, #72]
    a4dc:	add	x1, sp, #0x58
    a4e0:	cmp	x0, x1
    a4e4:	b.eq	a4ec <gcc_cp_fe_context@@Base+0xdbc>  // b.none
    a4e8:	bl	5540 <_ZdlPv@plt>
    a4ec:	mov	x0, x19
    a4f0:	bl	57e0 <_Unwind_Resume@plt>
    a4f4:	mov	x19, x0
    a4f8:	ldr	x0, [sp, #72]
    a4fc:	add	x1, sp, #0x58
    a500:	cmp	x0, x1
    a504:	b.eq	a50c <gcc_cp_fe_context@@Base+0xddc>  // b.none
    a508:	bl	5540 <_ZdlPv@plt>
    a50c:	mov	x0, x19
    a510:	bl	57e0 <_Unwind_Resume@plt>
    a514:	mov	x19, x0
    a518:	ldr	x0, [sp, #72]
    a51c:	add	x1, sp, #0x58
    a520:	cmp	x0, x1
    a524:	b.eq	a52c <gcc_cp_fe_context@@Base+0xdfc>  // b.none
    a528:	bl	5540 <_ZdlPv@plt>
    a52c:	mov	x0, x19
    a530:	bl	57e0 <_Unwind_Resume@plt>
    a534:	mov	x19, x0
    a538:	ldr	x0, [sp, #72]
    a53c:	add	x1, sp, #0x58
    a540:	cmp	x0, x1
    a544:	b.eq	a54c <gcc_cp_fe_context@@Base+0xe1c>  // b.none
    a548:	bl	5540 <_ZdlPv@plt>
    a54c:	mov	x0, x19
    a550:	bl	57e0 <_Unwind_Resume@plt>
    a554:	mov	x19, x0
    a558:	ldr	x0, [sp, #72]
    a55c:	add	x1, sp, #0x58
    a560:	cmp	x0, x1
    a564:	b.eq	a56c <gcc_cp_fe_context@@Base+0xe3c>  // b.none
    a568:	bl	5540 <_ZdlPv@plt>
    a56c:	mov	x0, x19
    a570:	bl	57e0 <_Unwind_Resume@plt>
    a574:	mov	x19, x0
    a578:	ldr	x0, [sp, #72]
    a57c:	add	x1, sp, #0x58
    a580:	cmp	x0, x1
    a584:	b.eq	a58c <gcc_cp_fe_context@@Base+0xe5c>  // b.none
    a588:	bl	5540 <_ZdlPv@plt>
    a58c:	mov	x0, x19
    a590:	bl	57e0 <_Unwind_Resume@plt>
    a594:	mov	x19, x0
    a598:	mov	x1, #0x20                  	// #32
    a59c:	mov	x0, x20
    a5a0:	bl	5560 <_ZdlPvm@plt>
    a5a4:	mov	x0, x19
    a5a8:	bl	57e0 <_Unwind_Resume@plt>
    a5ac:	stp	x29, x30, [sp, #-16]!
    a5b0:	mov	x29, sp
    a5b4:	cmp	w2, #0x0
    a5b8:	cset	w2, ne  // ne = any
    a5bc:	strb	w2, [x0, #136]
    a5c0:	bl	9f90 <gcc_cp_fe_context@@Base+0x860>
    a5c4:	ldp	x29, x30, [sp], #16
    a5c8:	ret
    a5cc:	stp	x29, x30, [sp, #-144]!
    a5d0:	mov	x29, sp
    a5d4:	stp	x19, x20, [sp, #16]
    a5d8:	stp	x21, x22, [sp, #32]
    a5dc:	stp	x23, x24, [sp, #48]
    a5e0:	stp	x25, x26, [sp, #64]
    a5e4:	mov	x19, x0
    a5e8:	mov	w22, w1
    a5ec:	mov	x21, x2
    a5f0:	add	x1, sp, #0x70
    a5f4:	add	x0, x1, #0x10
    a5f8:	str	x0, [sp, #112]
    a5fc:	str	xzr, [sp, #120]
    a600:	strb	wzr, [sp, #128]
    a604:	ldr	x0, [x19, #144]
    a608:	ldr	x2, [x0]
    a60c:	ldr	x2, [x2]
    a610:	blr	x2
    a614:	mov	x23, x0
    a618:	cbz	x0, a64c <gcc_cp_fe_context@@Base+0xf1c>
    a61c:	ldr	x0, [sp, #112]
    a620:	add	x1, sp, #0x80
    a624:	cmp	x0, x1
    a628:	b.eq	a630 <gcc_cp_fe_context@@Base+0xf00>  // b.none
    a62c:	bl	5540 <_ZdlPv@plt>
    a630:	mov	x0, x23
    a634:	ldp	x19, x20, [sp, #16]
    a638:	ldp	x21, x22, [sp, #32]
    a63c:	ldp	x23, x24, [sp, #48]
    a640:	ldp	x25, x26, [sp, #64]
    a644:	ldp	x29, x30, [sp], #144
    a648:	ret
    a64c:	add	x25, x19, #0x50
    a650:	ldr	x0, [x25, #8]
    a654:	ldr	x1, [x25, #16]
    a658:	cmp	x0, x1
    a65c:	b.eq	a6b0 <gcc_cp_fe_context@@Base+0xf80>  // b.none
    a660:	add	x1, x0, #0x10
    a664:	str	x1, [x0]
    a668:	ldr	x1, [sp, #112]
    a66c:	mov	w3, #0x0                   	// #0
    a670:	ldr	x2, [sp, #120]
    a674:	add	x2, x1, x2
    a678:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a67c:	ldr	x0, [x25, #8]
    a680:	add	x0, x0, #0x20
    a684:	str	x0, [x25, #8]
    a688:	cmp	w22, #0x0
    a68c:	b.le	a61c <gcc_cp_fe_context@@Base+0xeec>
    a690:	mov	x20, x21
    a694:	sub	w22, w22, #0x1
    a698:	add	x21, x21, #0x8
    a69c:	add	x21, x21, x22, lsl #3
    a6a0:	add	x22, sp, #0x50
    a6a4:	add	x24, x22, #0x10
    a6a8:	mov	x26, #0xffffffffffffffff    	// #-1
    a6ac:	b	a6ec <gcc_cp_fe_context@@Base+0xfbc>
    a6b0:	add	x2, sp, #0x70
    a6b4:	mov	x1, x0
    a6b8:	mov	x0, x25
    a6bc:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a6c0:	b	a688 <gcc_cp_fe_context@@Base+0xf58>
    a6c4:	mov	x1, x22
    a6c8:	mov	x0, x25
    a6cc:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a6d0:	ldr	x0, [sp, #80]
    a6d4:	cmp	x0, x24
    a6d8:	b.eq	a6e0 <gcc_cp_fe_context@@Base+0xfb0>  // b.none
    a6dc:	bl	5540 <_ZdlPv@plt>
    a6e0:	add	x20, x20, #0x8
    a6e4:	cmp	x20, x21
    a6e8:	b.eq	a61c <gcc_cp_fe_context@@Base+0xeec>  // b.none
    a6ec:	ldr	x19, [x20]
    a6f0:	str	x24, [sp, #80]
    a6f4:	mov	x2, x26
    a6f8:	cbz	x19, a708 <gcc_cp_fe_context@@Base+0xfd8>
    a6fc:	mov	x0, x19
    a700:	bl	5360 <strlen@plt>
    a704:	add	x2, x19, x0
    a708:	mov	w3, #0x0                   	// #0
    a70c:	mov	x1, x19
    a710:	mov	x0, x22
    a714:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    a718:	b	a6c4 <gcc_cp_fe_context@@Base+0xf94>
    a71c:	mov	x19, x0
    a720:	ldr	x0, [sp, #80]
    a724:	add	x1, sp, #0x60
    a728:	cmp	x0, x1
    a72c:	b.eq	a734 <gcc_cp_fe_context@@Base+0x1004>  // b.none
    a730:	bl	5540 <_ZdlPv@plt>
    a734:	ldr	x0, [sp, #112]
    a738:	add	x1, sp, #0x80
    a73c:	cmp	x0, x1
    a740:	b.eq	a748 <gcc_cp_fe_context@@Base+0x1018>  // b.none
    a744:	bl	5540 <_ZdlPv@plt>
    a748:	mov	x0, x19
    a74c:	bl	57e0 <_Unwind_Resume@plt>
    a750:	mov	x19, x0
    a754:	b	a734 <gcc_cp_fe_context@@Base+0x1004>
    a758:	stp	x29, x30, [sp, #-48]!
    a75c:	mov	x29, sp
    a760:	stp	x19, x20, [sp, #16]
    a764:	str	x21, [sp, #32]
    a768:	mov	x19, x0
    a76c:	mov	w20, w2
    a770:	mov	x21, x3
    a774:	bl	9ea8 <gcc_cp_fe_context@@Base+0x778>
    a778:	cbz	x0, a78c <gcc_cp_fe_context@@Base+0x105c>
    a77c:	ldp	x19, x20, [sp, #16]
    a780:	ldr	x21, [sp, #32]
    a784:	ldp	x29, x30, [sp], #48
    a788:	ret
    a78c:	mov	x2, x21
    a790:	mov	w1, w20
    a794:	mov	x0, x19
    a798:	bl	a5cc <gcc_cp_fe_context@@Base+0xe9c>
    a79c:	b	a77c <gcc_cp_fe_context@@Base+0x104c>
    a7a0:	ret
    a7a4:	stp	x29, x30, [sp, #-16]!
    a7a8:	mov	x29, sp
    a7ac:	ldr	x0, [x0, #24]
    a7b0:	ldr	x2, [x0, #64]
    a7b4:	ldr	x0, [x0, #72]
    a7b8:	blr	x2
    a7bc:	ldp	x29, x30, [sp], #16
    a7c0:	ret
    a7c4:	stp	x29, x30, [sp, #-16]!
    a7c8:	mov	x29, sp
    a7cc:	mov	x1, #0x10                  	// #16
    a7d0:	bl	5560 <_ZdlPvm@plt>
    a7d4:	ldp	x29, x30, [sp], #16
    a7d8:	ret
    a7dc:	mov	x1, x0
    a7e0:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    a7e4:	add	x2, x2, #0x640
    a7e8:	str	x2, [x1], #16
    a7ec:	ldr	x0, [x0, #16]
    a7f0:	add	x1, x1, #0x10
    a7f4:	cmp	x0, x1
    a7f8:	b.eq	a810 <gcc_cp_fe_context@@Base+0x10e0>  // b.none
    a7fc:	stp	x29, x30, [sp, #-16]!
    a800:	mov	x29, sp
    a804:	bl	5540 <_ZdlPv@plt>
    a808:	ldp	x29, x30, [sp], #16
    a80c:	ret
    a810:	ret
    a814:	stp	x29, x30, [sp, #-32]!
    a818:	mov	x29, sp
    a81c:	str	x19, [sp, #16]
    a820:	mov	x19, x0
    a824:	mov	x1, x0
    a828:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    a82c:	add	x0, x0, #0x640
    a830:	str	x0, [x1], #16
    a834:	ldr	x0, [x19, #16]
    a838:	add	x1, x1, #0x10
    a83c:	cmp	x0, x1
    a840:	b.eq	a848 <gcc_cp_fe_context@@Base+0x1118>  // b.none
    a844:	bl	5540 <_ZdlPv@plt>
    a848:	mov	x1, #0x30                  	// #48
    a84c:	mov	x0, x19
    a850:	bl	5560 <_ZdlPvm@plt>
    a854:	ldr	x19, [sp, #16]
    a858:	ldp	x29, x30, [sp], #32
    a85c:	ret
    a860:	mov	x1, x0
    a864:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
    a868:	add	x2, x2, #0x618
    a86c:	str	x2, [x1], #16
    a870:	ldr	x0, [x0, #16]
    a874:	add	x1, x1, #0x10
    a878:	cmp	x0, x1
    a87c:	b.eq	a894 <gcc_cp_fe_context@@Base+0x1164>  // b.none
    a880:	stp	x29, x30, [sp, #-16]!
    a884:	mov	x29, sp
    a888:	bl	5540 <_ZdlPv@plt>
    a88c:	ldp	x29, x30, [sp], #16
    a890:	ret
    a894:	ret
    a898:	stp	x29, x30, [sp, #-32]!
    a89c:	mov	x29, sp
    a8a0:	str	x19, [sp, #16]
    a8a4:	mov	x19, x0
    a8a8:	mov	x1, x0
    a8ac:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    a8b0:	add	x0, x0, #0x618
    a8b4:	str	x0, [x1], #16
    a8b8:	ldr	x0, [x19, #16]
    a8bc:	add	x1, x1, #0x10
    a8c0:	cmp	x0, x1
    a8c4:	b.eq	a8cc <gcc_cp_fe_context@@Base+0x119c>  // b.none
    a8c8:	bl	5540 <_ZdlPv@plt>
    a8cc:	mov	x1, #0x30                  	// #48
    a8d0:	mov	x0, x19
    a8d4:	bl	5560 <_ZdlPvm@plt>
    a8d8:	ldr	x19, [sp, #16]
    a8dc:	ldp	x29, x30, [sp], #32
    a8e0:	ret
    a8e4:	stp	x29, x30, [sp, #-16]!
    a8e8:	mov	x29, sp
    a8ec:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    a8f0:	add	x1, x1, #0x5c8
    a8f4:	str	x1, [x0]
    a8f8:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3bb8>
    a8fc:	ldp	x29, x30, [sp], #16
    a900:	ret
    a904:	stp	x29, x30, [sp, #-32]!
    a908:	mov	x29, sp
    a90c:	str	x19, [sp, #16]
    a910:	mov	x19, x0
    a914:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    a918:	add	x1, x1, #0x5c8
    a91c:	str	x1, [x0]
    a920:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3bb8>
    a924:	mov	x1, #0x20                  	// #32
    a928:	mov	x0, x19
    a92c:	bl	5560 <_ZdlPvm@plt>
    a930:	ldr	x19, [sp, #16]
    a934:	ldp	x29, x30, [sp], #32
    a938:	ret
    a93c:	stp	x29, x30, [sp, #-48]!
    a940:	mov	x29, sp
    a944:	stp	x19, x20, [sp, #16]
    a948:	stp	x21, x22, [sp, #32]
    a94c:	mov	x19, x0
    a950:	mov	x20, x1
    a954:	mov	x21, x2
    a958:	mov	x22, x3
    a95c:	mov	w1, #0x51                  	// #81
    a960:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    a964:	cbnz	w0, a978 <gcc_cp_fe_context@@Base+0x1248>
    a968:	ldp	x19, x20, [sp, #16]
    a96c:	ldp	x21, x22, [sp, #32]
    a970:	ldp	x29, x30, [sp], #48
    a974:	ret
    a978:	mov	x1, x20
    a97c:	mov	x0, x19
    a980:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    a984:	cbz	w0, a968 <gcc_cp_fe_context@@Base+0x1238>
    a988:	mov	x1, #0x1                   	// #1
    a98c:	mov	x0, x19
    a990:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    a994:	cbz	w0, a968 <gcc_cp_fe_context@@Base+0x1238>
    a998:	mov	x1, x22
    a99c:	mov	x0, x19
    a9a0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    a9a4:	cbz	w0, a968 <gcc_cp_fe_context@@Base+0x1238>
    a9a8:	mov	w1, #0x1                   	// #1
    a9ac:	mov	x0, x19
    a9b0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    a9b4:	cbz	w0, a968 <gcc_cp_fe_context@@Base+0x1238>
    a9b8:	mov	x1, x21
    a9bc:	mov	x0, x19
    a9c0:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    a9c4:	cmp	w0, #0x0
    a9c8:	cset	w0, ne  // ne = any
    a9cc:	b	a968 <gcc_cp_fe_context@@Base+0x1238>
    a9d0:	stp	x29, x30, [sp, #-32]!
    a9d4:	mov	x29, sp
    a9d8:	mov	x3, x1
    a9dc:	add	x2, sp, #0x1c
    a9e0:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    a9e4:	ldr	x1, [x1, #3696]
    a9e8:	ldr	x1, [x1]
    a9ec:	ldr	x0, [x0, #16]
    a9f0:	bl	a93c <gcc_cp_fe_context@@Base+0x120c>
    a9f4:	cmp	w0, #0x0
    a9f8:	ldr	w0, [sp, #28]
    a9fc:	csel	w0, w0, wzr, ne  // ne = any
    aa00:	ldp	x29, x30, [sp], #32
    aa04:	ret
    aa08:	stp	x29, x30, [sp, #-32]!
    aa0c:	mov	x29, sp
    aa10:	mov	x3, x1
    aa14:	add	x2, sp, #0x1c
    aa18:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    aa1c:	ldr	x1, [x1, #3880]
    aa20:	ldr	x1, [x1]
    aa24:	ldr	x0, [x0, #16]
    aa28:	bl	a93c <gcc_cp_fe_context@@Base+0x120c>
    aa2c:	cmp	w0, #0x0
    aa30:	ldr	w0, [sp, #28]
    aa34:	csel	w0, w0, wzr, ne  // ne = any
    aa38:	ldp	x29, x30, [sp], #32
    aa3c:	ret
    aa40:	stp	x29, x30, [sp, #-32]!
    aa44:	mov	x29, sp
    aa48:	mov	x3, x1
    aa4c:	add	x2, sp, #0x1c
    aa50:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    aa54:	ldr	x1, [x1, #3488]
    aa58:	ldr	x1, [x1]
    aa5c:	ldr	x0, [x0, #16]
    aa60:	bl	a93c <gcc_cp_fe_context@@Base+0x120c>
    aa64:	cmp	w0, #0x0
    aa68:	ldr	w0, [sp, #28]
    aa6c:	csel	w0, w0, wzr, ne  // ne = any
    aa70:	ldp	x29, x30, [sp], #32
    aa74:	ret
    aa78:	stp	x29, x30, [sp, #-32]!
    aa7c:	mov	x29, sp
    aa80:	mov	x3, x1
    aa84:	add	x2, sp, #0x1c
    aa88:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    aa8c:	ldr	x1, [x1, #3584]
    aa90:	ldr	x1, [x1]
    aa94:	ldr	x0, [x0, #16]
    aa98:	bl	a93c <gcc_cp_fe_context@@Base+0x120c>
    aa9c:	cmp	w0, #0x0
    aaa0:	ldr	w0, [sp, #28]
    aaa4:	csel	w0, w0, wzr, ne  // ne = any
    aaa8:	ldp	x29, x30, [sp], #32
    aaac:	ret
    aab0:	stp	x29, x30, [sp, #-48]!
    aab4:	mov	x29, sp
    aab8:	stp	x19, x20, [sp, #16]
    aabc:	str	x21, [sp, #32]
    aac0:	mov	x19, x0
    aac4:	mov	x20, x1
    aac8:	mov	x21, x2
    aacc:	mov	w1, #0x51                  	// #81
    aad0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    aad4:	cbnz	w0, aae8 <gcc_cp_fe_context@@Base+0x13b8>
    aad8:	ldp	x19, x20, [sp, #16]
    aadc:	ldr	x21, [sp, #32]
    aae0:	ldp	x29, x30, [sp], #48
    aae4:	ret
    aae8:	mov	x1, x20
    aaec:	mov	x0, x19
    aaf0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    aaf4:	cbz	w0, aad8 <gcc_cp_fe_context@@Base+0x13a8>
    aaf8:	mov	x1, #0x0                   	// #0
    aafc:	mov	x0, x19
    ab00:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ab04:	cbz	w0, aad8 <gcc_cp_fe_context@@Base+0x13a8>
    ab08:	mov	w1, #0x1                   	// #1
    ab0c:	mov	x0, x19
    ab10:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ab14:	cbz	w0, aad8 <gcc_cp_fe_context@@Base+0x13a8>
    ab18:	mov	x1, x21
    ab1c:	mov	x0, x19
    ab20:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    ab24:	cmp	w0, #0x0
    ab28:	cset	w0, ne  // ne = any
    ab2c:	b	aad8 <gcc_cp_fe_context@@Base+0x13a8>
    ab30:	stp	x29, x30, [sp, #-32]!
    ab34:	mov	x29, sp
    ab38:	add	x2, sp, #0x1c
    ab3c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    ab40:	ldr	x1, [x1, #3848]
    ab44:	ldr	x1, [x1]
    ab48:	ldr	x0, [x0, #16]
    ab4c:	bl	aab0 <gcc_cp_fe_context@@Base+0x1380>
    ab50:	cmp	w0, #0x0
    ab54:	ldr	w0, [sp, #28]
    ab58:	csel	w0, w0, wzr, ne  // ne = any
    ab5c:	ldp	x29, x30, [sp], #32
    ab60:	ret
    ab64:	stp	x29, x30, [sp, #-32]!
    ab68:	mov	x29, sp
    ab6c:	add	x2, sp, #0x1c
    ab70:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    ab74:	ldr	x1, [x1, #3808]
    ab78:	ldr	x1, [x1]
    ab7c:	ldr	x0, [x0, #16]
    ab80:	bl	aab0 <gcc_cp_fe_context@@Base+0x1380>
    ab84:	cmp	w0, #0x0
    ab88:	ldr	w0, [sp, #28]
    ab8c:	csel	w0, w0, wzr, ne  // ne = any
    ab90:	ldp	x29, x30, [sp], #32
    ab94:	ret
    ab98:	stp	x29, x30, [sp, #-32]!
    ab9c:	mov	x29, sp
    aba0:	add	x2, sp, #0x1c
    aba4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    aba8:	ldr	x1, [x1, #3608]
    abac:	ldr	x1, [x1]
    abb0:	ldr	x0, [x0, #16]
    abb4:	bl	aab0 <gcc_cp_fe_context@@Base+0x1380>
    abb8:	cmp	w0, #0x0
    abbc:	ldr	w0, [sp, #28]
    abc0:	csel	w0, w0, wzr, ne  // ne = any
    abc4:	ldp	x29, x30, [sp], #32
    abc8:	ret
    abcc:	stp	x29, x30, [sp, #-64]!
    abd0:	mov	x29, sp
    abd4:	stp	x19, x20, [sp, #16]
    abd8:	stp	x21, x22, [sp, #32]
    abdc:	str	x23, [sp, #48]
    abe0:	mov	x19, x0
    abe4:	mov	x20, x1
    abe8:	mov	x21, x2
    abec:	mov	x22, x3
    abf0:	mov	x23, x4
    abf4:	mov	w1, #0x51                  	// #81
    abf8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    abfc:	cbnz	w0, ac14 <gcc_cp_fe_context@@Base+0x14e4>
    ac00:	ldp	x19, x20, [sp, #16]
    ac04:	ldp	x21, x22, [sp, #32]
    ac08:	ldr	x23, [sp, #48]
    ac0c:	ldp	x29, x30, [sp], #64
    ac10:	ret
    ac14:	mov	x1, x20
    ac18:	mov	x0, x19
    ac1c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ac20:	cbz	w0, ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac24:	mov	x1, #0x2                   	// #2
    ac28:	mov	x0, x19
    ac2c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ac30:	cbz	w0, ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac34:	mov	x1, x22
    ac38:	mov	x0, x19
    ac3c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ac40:	cbz	w0, ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac44:	mov	x1, x23
    ac48:	mov	x0, x19
    ac4c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ac50:	cbz	w0, ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac54:	mov	w1, #0x1                   	// #1
    ac58:	mov	x0, x19
    ac5c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ac60:	cbz	w0, ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac64:	mov	x1, x21
    ac68:	mov	x0, x19
    ac6c:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    ac70:	cmp	w0, #0x0
    ac74:	cset	w0, ne  // ne = any
    ac78:	b	ac00 <gcc_cp_fe_context@@Base+0x14d0>
    ac7c:	stp	x29, x30, [sp, #-32]!
    ac80:	mov	x29, sp
    ac84:	mov	x4, x2
    ac88:	mov	x3, x1
    ac8c:	add	x2, sp, #0x1c
    ac90:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    ac94:	ldr	x1, [x1, #3864]
    ac98:	ldr	x1, [x1]
    ac9c:	ldr	x0, [x0, #16]
    aca0:	bl	abcc <gcc_cp_fe_context@@Base+0x149c>
    aca4:	cmp	w0, #0x0
    aca8:	ldr	w0, [sp, #28]
    acac:	csel	w0, w0, wzr, ne  // ne = any
    acb0:	ldp	x29, x30, [sp], #32
    acb4:	ret
    acb8:	stp	x29, x30, [sp, #-32]!
    acbc:	mov	x29, sp
    acc0:	mov	x4, x2
    acc4:	mov	x3, x1
    acc8:	add	x2, sp, #0x1c
    accc:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    acd0:	ldr	x1, [x1, #3480]
    acd4:	ldr	x1, [x1]
    acd8:	ldr	x0, [x0, #16]
    acdc:	bl	abcc <gcc_cp_fe_context@@Base+0x149c>
    ace0:	cmp	w0, #0x0
    ace4:	ldr	w0, [sp, #28]
    ace8:	csel	w0, w0, wzr, ne  // ne = any
    acec:	ldp	x29, x30, [sp], #32
    acf0:	ret
    acf4:	stp	x29, x30, [sp, #-64]!
    acf8:	mov	x29, sp
    acfc:	stp	x19, x20, [sp, #16]
    ad00:	stp	x21, x22, [sp, #32]
    ad04:	mov	x21, x1
    ad08:	mov	x20, x2
    ad0c:	ldr	x19, [x0, #16]
    ad10:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ad14:	ldr	x0, [x0, #3728]
    ad18:	ldr	x22, [x0]
    ad1c:	mov	w1, #0x51                  	// #81
    ad20:	mov	x0, x19
    ad24:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    ad28:	cbnz	w0, ad34 <gcc_cp_fe_context@@Base+0x1604>
    ad2c:	mov	w0, #0x0                   	// #0
    ad30:	b	ad98 <gcc_cp_fe_context@@Base+0x1668>
    ad34:	mov	x1, x22
    ad38:	mov	x0, x19
    ad3c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ad40:	cbz	w0, ad2c <gcc_cp_fe_context@@Base+0x15fc>
    ad44:	mov	x1, #0x2                   	// #2
    ad48:	mov	x0, x19
    ad4c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ad50:	cbz	w0, ad2c <gcc_cp_fe_context@@Base+0x15fc>
    ad54:	mov	x1, x21
    ad58:	mov	x0, x19
    ad5c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ad60:	cbz	w0, ad2c <gcc_cp_fe_context@@Base+0x15fc>
    ad64:	mov	x1, x20
    ad68:	mov	x0, x19
    ad6c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ad70:	cbz	w0, ad2c <gcc_cp_fe_context@@Base+0x15fc>
    ad74:	mov	w1, #0x1                   	// #1
    ad78:	mov	x0, x19
    ad7c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ad80:	cbz	w0, ad2c <gcc_cp_fe_context@@Base+0x15fc>
    ad84:	add	x1, sp, #0x3c
    ad88:	mov	x0, x19
    ad8c:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    ad90:	cbz	w0, ada8 <gcc_cp_fe_context@@Base+0x1678>
    ad94:	ldr	w0, [sp, #60]
    ad98:	ldp	x19, x20, [sp, #16]
    ad9c:	ldp	x21, x22, [sp, #32]
    ada0:	ldp	x29, x30, [sp], #64
    ada4:	ret
    ada8:	mov	w0, #0x0                   	// #0
    adac:	b	ad98 <gcc_cp_fe_context@@Base+0x1668>
    adb0:	stp	x29, x30, [sp, #-64]!
    adb4:	mov	x29, sp
    adb8:	stp	x19, x20, [sp, #16]
    adbc:	str	x21, [sp, #32]
    adc0:	mov	x20, x1
    adc4:	ldr	x19, [x0, #16]
    adc8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    adcc:	ldr	x0, [x0, #3448]
    add0:	ldr	x21, [x0]
    add4:	mov	w1, #0x51                  	// #81
    add8:	mov	x0, x19
    addc:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    ade0:	cbnz	w0, adec <gcc_cp_fe_context@@Base+0x16bc>
    ade4:	mov	w0, #0x0                   	// #0
    ade8:	b	ae40 <gcc_cp_fe_context@@Base+0x1710>
    adec:	mov	x1, x21
    adf0:	mov	x0, x19
    adf4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    adf8:	cbz	w0, ade4 <gcc_cp_fe_context@@Base+0x16b4>
    adfc:	mov	x1, #0x1                   	// #1
    ae00:	mov	x0, x19
    ae04:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ae08:	cbz	w0, ade4 <gcc_cp_fe_context@@Base+0x16b4>
    ae0c:	mov	x1, x20
    ae10:	mov	x0, x19
    ae14:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ae18:	cbz	w0, ade4 <gcc_cp_fe_context@@Base+0x16b4>
    ae1c:	mov	w1, #0x1                   	// #1
    ae20:	mov	x0, x19
    ae24:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ae28:	cbz	w0, ade4 <gcc_cp_fe_context@@Base+0x16b4>
    ae2c:	add	x1, sp, #0x3c
    ae30:	mov	x0, x19
    ae34:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    ae38:	cbz	w0, ae50 <gcc_cp_fe_context@@Base+0x1720>
    ae3c:	ldr	w0, [sp, #60]
    ae40:	ldp	x19, x20, [sp, #16]
    ae44:	ldr	x21, [sp, #32]
    ae48:	ldp	x29, x30, [sp], #64
    ae4c:	ret
    ae50:	mov	w0, #0x0                   	// #0
    ae54:	b	ae40 <gcc_cp_fe_context@@Base+0x1710>
    ae58:	stp	x29, x30, [sp, #-64]!
    ae5c:	mov	x29, sp
    ae60:	stp	x19, x20, [sp, #16]
    ae64:	stp	x21, x22, [sp, #32]
    ae68:	mov	w21, w1
    ae6c:	mov	x20, x2
    ae70:	ldr	x19, [x0, #16]
    ae74:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ae78:	ldr	x0, [x0, #3336]
    ae7c:	ldr	x22, [x0]
    ae80:	mov	w1, #0x51                  	// #81
    ae84:	mov	x0, x19
    ae88:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    ae8c:	cbnz	w0, ae98 <gcc_cp_fe_context@@Base+0x1768>
    ae90:	mov	w0, #0x0                   	// #0
    ae94:	b	aefc <gcc_cp_fe_context@@Base+0x17cc>
    ae98:	mov	x1, x22
    ae9c:	mov	x0, x19
    aea0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    aea4:	cbz	w0, ae90 <gcc_cp_fe_context@@Base+0x1760>
    aea8:	mov	x1, #0x2                   	// #2
    aeac:	mov	x0, x19
    aeb0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    aeb4:	cbz	w0, ae90 <gcc_cp_fe_context@@Base+0x1760>
    aeb8:	mov	w1, w21
    aebc:	mov	x0, x19
    aec0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    aec4:	cbz	w0, ae90 <gcc_cp_fe_context@@Base+0x1760>
    aec8:	mov	x1, x20
    aecc:	mov	x0, x19
    aed0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    aed4:	cbz	w0, ae90 <gcc_cp_fe_context@@Base+0x1760>
    aed8:	mov	w1, #0x1                   	// #1
    aedc:	mov	x0, x19
    aee0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    aee4:	cbz	w0, ae90 <gcc_cp_fe_context@@Base+0x1760>
    aee8:	add	x1, sp, #0x3c
    aeec:	mov	x0, x19
    aef0:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    aef4:	cbz	w0, af0c <gcc_cp_fe_context@@Base+0x17dc>
    aef8:	ldr	w0, [sp, #60]
    aefc:	ldp	x19, x20, [sp, #16]
    af00:	ldp	x21, x22, [sp, #32]
    af04:	ldp	x29, x30, [sp], #64
    af08:	ret
    af0c:	mov	w0, #0x0                   	// #0
    af10:	b	aefc <gcc_cp_fe_context@@Base+0x17cc>
    af14:	stp	x29, x30, [sp, #-80]!
    af18:	mov	x29, sp
    af1c:	stp	x19, x20, [sp, #16]
    af20:	stp	x21, x22, [sp, #32]
    af24:	stp	x23, x24, [sp, #48]
    af28:	mov	x20, x1
    af2c:	mov	x21, x2
    af30:	mov	x23, x3
    af34:	mov	w22, w4
    af38:	ldr	x19, [x0, #16]
    af3c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    af40:	ldr	x0, [x0, #3664]
    af44:	ldr	x24, [x0]
    af48:	mov	w1, #0x51                  	// #81
    af4c:	mov	x0, x19
    af50:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    af54:	cbnz	w0, af60 <gcc_cp_fe_context@@Base+0x1830>
    af58:	mov	w0, #0x0                   	// #0
    af5c:	b	afe4 <gcc_cp_fe_context@@Base+0x18b4>
    af60:	mov	x1, x24
    af64:	mov	x0, x19
    af68:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    af6c:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    af70:	mov	x1, #0x4                   	// #4
    af74:	mov	x0, x19
    af78:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    af7c:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    af80:	mov	x1, x20
    af84:	mov	x0, x19
    af88:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    af8c:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    af90:	mov	x1, x21
    af94:	mov	x0, x19
    af98:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    af9c:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    afa0:	mov	x1, x23
    afa4:	mov	x0, x19
    afa8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    afac:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    afb0:	mov	w1, w22
    afb4:	mov	x0, x19
    afb8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    afbc:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    afc0:	mov	w1, #0x1                   	// #1
    afc4:	mov	x0, x19
    afc8:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    afcc:	cbz	w0, af58 <gcc_cp_fe_context@@Base+0x1828>
    afd0:	add	x1, sp, #0x4c
    afd4:	mov	x0, x19
    afd8:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    afdc:	cbz	w0, aff8 <gcc_cp_fe_context@@Base+0x18c8>
    afe0:	ldr	w0, [sp, #76]
    afe4:	ldp	x19, x20, [sp, #16]
    afe8:	ldp	x21, x22, [sp, #32]
    afec:	ldp	x23, x24, [sp, #48]
    aff0:	ldp	x29, x30, [sp], #80
    aff4:	ret
    aff8:	mov	w0, #0x0                   	// #0
    affc:	b	afe4 <gcc_cp_fe_context@@Base+0x18b4>
    b000:	stp	x29, x30, [sp, #-96]!
    b004:	mov	x29, sp
    b008:	stp	x19, x20, [sp, #16]
    b00c:	stp	x21, x22, [sp, #32]
    b010:	stp	x23, x24, [sp, #48]
    b014:	str	x25, [sp, #64]
    b018:	mov	x20, x1
    b01c:	mov	x21, x2
    b020:	mov	x22, x3
    b024:	mov	x23, x4
    b028:	mov	w24, w5
    b02c:	ldr	x19, [x0, #16]
    b030:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b034:	ldr	x0, [x0, #4032]
    b038:	ldr	x25, [x0]
    b03c:	mov	w1, #0x51                  	// #81
    b040:	mov	x0, x19
    b044:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b048:	cbnz	w0, b054 <gcc_cp_fe_context@@Base+0x1924>
    b04c:	mov	w0, #0x0                   	// #0
    b050:	b	b0e8 <gcc_cp_fe_context@@Base+0x19b8>
    b054:	mov	x1, x25
    b058:	mov	x0, x19
    b05c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b060:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b064:	mov	x1, #0x5                   	// #5
    b068:	mov	x0, x19
    b06c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b070:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b074:	mov	x1, x20
    b078:	mov	x0, x19
    b07c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b080:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b084:	mov	x1, x21
    b088:	mov	x0, x19
    b08c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b090:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b094:	mov	x1, x22
    b098:	mov	x0, x19
    b09c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b0a0:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b0a4:	mov	x1, x23
    b0a8:	mov	x0, x19
    b0ac:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b0b0:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b0b4:	mov	w1, w24
    b0b8:	mov	x0, x19
    b0bc:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b0c0:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b0c4:	mov	w1, #0x1                   	// #1
    b0c8:	mov	x0, x19
    b0cc:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b0d0:	cbz	w0, b04c <gcc_cp_fe_context@@Base+0x191c>
    b0d4:	add	x1, sp, #0x5c
    b0d8:	mov	x0, x19
    b0dc:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    b0e0:	cbz	w0, b100 <gcc_cp_fe_context@@Base+0x19d0>
    b0e4:	ldr	w0, [sp, #92]
    b0e8:	ldp	x19, x20, [sp, #16]
    b0ec:	ldp	x21, x22, [sp, #32]
    b0f0:	ldp	x23, x24, [sp, #48]
    b0f4:	ldr	x25, [sp, #64]
    b0f8:	ldp	x29, x30, [sp], #96
    b0fc:	ret
    b100:	mov	w0, #0x0                   	// #0
    b104:	b	b0e8 <gcc_cp_fe_context@@Base+0x19b8>
    b108:	stp	x29, x30, [sp, #-64]!
    b10c:	mov	x29, sp
    b110:	stp	x19, x20, [sp, #16]
    b114:	str	x21, [sp, #32]
    b118:	mov	x20, x1
    b11c:	ldr	x19, [x0, #16]
    b120:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b124:	ldr	x0, [x0, #3888]
    b128:	ldr	x21, [x0]
    b12c:	mov	w1, #0x51                  	// #81
    b130:	mov	x0, x19
    b134:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b138:	cbnz	w0, b144 <gcc_cp_fe_context@@Base+0x1a14>
    b13c:	mov	w0, #0x0                   	// #0
    b140:	b	b198 <gcc_cp_fe_context@@Base+0x1a68>
    b144:	mov	x1, x21
    b148:	mov	x0, x19
    b14c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b150:	cbz	w0, b13c <gcc_cp_fe_context@@Base+0x1a0c>
    b154:	mov	x1, #0x1                   	// #1
    b158:	mov	x0, x19
    b15c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b160:	cbz	w0, b13c <gcc_cp_fe_context@@Base+0x1a0c>
    b164:	mov	x1, x20
    b168:	mov	x0, x19
    b16c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b170:	cbz	w0, b13c <gcc_cp_fe_context@@Base+0x1a0c>
    b174:	mov	w1, #0x1                   	// #1
    b178:	mov	x0, x19
    b17c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b180:	cbz	w0, b13c <gcc_cp_fe_context@@Base+0x1a0c>
    b184:	add	x1, sp, #0x3c
    b188:	mov	x0, x19
    b18c:	bl	81d8 <gcc_c_fe_context@@Base+0x1d18>
    b190:	cbz	w0, b1a8 <gcc_cp_fe_context@@Base+0x1a78>
    b194:	ldr	w0, [sp, #60]
    b198:	ldp	x19, x20, [sp, #16]
    b19c:	ldr	x21, [sp, #32]
    b1a0:	ldp	x29, x30, [sp], #64
    b1a4:	ret
    b1a8:	mov	w0, #0x0                   	// #0
    b1ac:	b	b198 <gcc_cp_fe_context@@Base+0x1a68>
    b1b0:	stp	x29, x30, [sp, #-64]!
    b1b4:	mov	x29, sp
    b1b8:	stp	x19, x20, [sp, #16]
    b1bc:	str	x21, [sp, #32]
    b1c0:	mov	x20, x1
    b1c4:	ldr	x19, [x0, #16]
    b1c8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b1cc:	ldr	x0, [x0, #3640]
    b1d0:	ldr	x21, [x0]
    b1d4:	mov	w1, #0x51                  	// #81
    b1d8:	mov	x0, x19
    b1dc:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b1e0:	cbnz	w0, b1ec <gcc_cp_fe_context@@Base+0x1abc>
    b1e4:	mov	x0, #0x0                   	// #0
    b1e8:	b	b240 <gcc_cp_fe_context@@Base+0x1b10>
    b1ec:	mov	x1, x21
    b1f0:	mov	x0, x19
    b1f4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b1f8:	cbz	w0, b1e4 <gcc_cp_fe_context@@Base+0x1ab4>
    b1fc:	mov	x1, #0x1                   	// #1
    b200:	mov	x0, x19
    b204:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b208:	cbz	w0, b1e4 <gcc_cp_fe_context@@Base+0x1ab4>
    b20c:	mov	x1, x20
    b210:	mov	x0, x19
    b214:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b218:	cbz	w0, b1e4 <gcc_cp_fe_context@@Base+0x1ab4>
    b21c:	mov	w1, #0x1                   	// #1
    b220:	mov	x0, x19
    b224:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b228:	cbz	w0, b1e4 <gcc_cp_fe_context@@Base+0x1ab4>
    b22c:	add	x1, sp, #0x38
    b230:	mov	x0, x19
    b234:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    b238:	cbz	w0, b250 <gcc_cp_fe_context@@Base+0x1b20>
    b23c:	ldr	x0, [sp, #56]
    b240:	ldp	x19, x20, [sp, #16]
    b244:	ldr	x21, [sp, #32]
    b248:	ldp	x29, x30, [sp], #64
    b24c:	ret
    b250:	mov	x0, #0x0                   	// #0
    b254:	b	b240 <gcc_cp_fe_context@@Base+0x1b10>
    b258:	stp	x29, x30, [sp, #-32]!
    b25c:	mov	x29, sp
    b260:	mov	w4, w2
    b264:	mov	x3, x1
    b268:	add	x2, sp, #0x18
    b26c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b270:	ldr	x1, [x1, #3712]
    b274:	ldr	x1, [x1]
    b278:	ldr	x0, [x0, #16]
    b27c:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    b280:	cmp	w0, #0x0
    b284:	ldr	x0, [sp, #24]
    b288:	csel	x0, x0, xzr, ne  // ne = any
    b28c:	ldp	x29, x30, [sp], #32
    b290:	ret
    b294:	stp	x29, x30, [sp, #-32]!
    b298:	mov	x29, sp
    b29c:	mov	w4, w2
    b2a0:	mov	x3, x1
    b2a4:	add	x2, sp, #0x18
    b2a8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b2ac:	ldr	x1, [x1, #3504]
    b2b0:	ldr	x1, [x1]
    b2b4:	ldr	x0, [x0, #16]
    b2b8:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    b2bc:	cmp	w0, #0x0
    b2c0:	ldr	x0, [sp, #24]
    b2c4:	csel	x0, x0, xzr, ne  // ne = any
    b2c8:	ldp	x29, x30, [sp], #32
    b2cc:	ret
    b2d0:	stp	x29, x30, [sp, #-32]!
    b2d4:	mov	x29, sp
    b2d8:	mov	w4, w2
    b2dc:	mov	x3, x1
    b2e0:	add	x2, sp, #0x18
    b2e4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b2e8:	ldr	x1, [x1, #3792]
    b2ec:	ldr	x1, [x1]
    b2f0:	ldr	x0, [x0, #16]
    b2f4:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    b2f8:	cmp	w0, #0x0
    b2fc:	ldr	x0, [sp, #24]
    b300:	csel	x0, x0, xzr, ne  // ne = any
    b304:	ldp	x29, x30, [sp], #32
    b308:	ret
    b30c:	stp	x29, x30, [sp, #-32]!
    b310:	mov	x29, sp
    b314:	mov	w4, w2
    b318:	mov	x3, x1
    b31c:	add	x2, sp, #0x18
    b320:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b324:	ldr	x1, [x1, #3416]
    b328:	ldr	x1, [x1]
    b32c:	ldr	x0, [x0, #16]
    b330:	bl	78f4 <gcc_c_fe_context@@Base+0x1434>
    b334:	cmp	w0, #0x0
    b338:	ldr	x0, [sp, #24]
    b33c:	csel	x0, x0, xzr, ne  // ne = any
    b340:	ldp	x29, x30, [sp], #32
    b344:	ret
    b348:	stp	x29, x30, [sp, #-32]!
    b34c:	mov	x29, sp
    b350:	mov	x3, x1
    b354:	add	x2, sp, #0x18
    b358:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b35c:	ldr	x1, [x1, #3984]
    b360:	ldr	x1, [x1]
    b364:	ldr	x0, [x0, #16]
    b368:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b36c:	cmp	w0, #0x0
    b370:	ldr	x0, [sp, #24]
    b374:	csel	x0, x0, xzr, ne  // ne = any
    b378:	ldp	x29, x30, [sp], #32
    b37c:	ret
    b380:	stp	x29, x30, [sp, #-32]!
    b384:	mov	x29, sp
    b388:	mov	x3, x1
    b38c:	add	x2, sp, #0x18
    b390:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b394:	ldr	x1, [x1, #3552]
    b398:	ldr	x1, [x1]
    b39c:	ldr	x0, [x0, #16]
    b3a0:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b3a4:	cmp	w0, #0x0
    b3a8:	ldr	x0, [sp, #24]
    b3ac:	csel	x0, x0, xzr, ne  // ne = any
    b3b0:	ldp	x29, x30, [sp], #32
    b3b4:	ret
    b3b8:	stp	x29, x30, [sp, #-32]!
    b3bc:	mov	x29, sp
    b3c0:	mov	x3, x1
    b3c4:	add	x2, sp, #0x18
    b3c8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b3cc:	ldr	x1, [x1, #3704]
    b3d0:	ldr	x1, [x1]
    b3d4:	ldr	x0, [x0, #16]
    b3d8:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b3dc:	cmp	w0, #0x0
    b3e0:	ldr	x0, [sp, #24]
    b3e4:	csel	x0, x0, xzr, ne  // ne = any
    b3e8:	ldp	x29, x30, [sp], #32
    b3ec:	ret
    b3f0:	stp	x29, x30, [sp, #-32]!
    b3f4:	mov	x29, sp
    b3f8:	mov	x3, x1
    b3fc:	add	x2, sp, #0x18
    b400:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b404:	ldr	x1, [x1, #3912]
    b408:	ldr	x1, [x1]
    b40c:	ldr	x0, [x0, #16]
    b410:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b414:	cmp	w0, #0x0
    b418:	ldr	x0, [sp, #24]
    b41c:	csel	x0, x0, xzr, ne  // ne = any
    b420:	ldp	x29, x30, [sp], #32
    b424:	ret
    b428:	stp	x29, x30, [sp, #-32]!
    b42c:	mov	x29, sp
    b430:	mov	x3, x1
    b434:	add	x2, sp, #0x18
    b438:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b43c:	ldr	x1, [x1, #3688]
    b440:	ldr	x1, [x1]
    b444:	ldr	x0, [x0, #16]
    b448:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b44c:	cmp	w0, #0x0
    b450:	ldr	x0, [sp, #24]
    b454:	csel	x0, x0, xzr, ne  // ne = any
    b458:	ldp	x29, x30, [sp], #32
    b45c:	ret
    b460:	stp	x29, x30, [sp, #-32]!
    b464:	mov	x29, sp
    b468:	mov	x3, x1
    b46c:	add	x2, sp, #0x18
    b470:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b474:	ldr	x1, [x1, #3176]
    b478:	ldr	x1, [x1]
    b47c:	ldr	x0, [x0, #16]
    b480:	bl	7a1c <gcc_c_fe_context@@Base+0x155c>
    b484:	cmp	w0, #0x0
    b488:	ldr	x0, [sp, #24]
    b48c:	csel	x0, x0, xzr, ne  // ne = any
    b490:	ldp	x29, x30, [sp], #32
    b494:	ret
    b498:	stp	x29, x30, [sp, #-64]!
    b49c:	mov	x29, sp
    b4a0:	stp	x19, x20, [sp, #16]
    b4a4:	stp	x21, x22, [sp, #32]
    b4a8:	str	x23, [sp, #48]
    b4ac:	mov	x19, x0
    b4b0:	mov	x20, x1
    b4b4:	mov	x21, x2
    b4b8:	mov	x22, x3
    b4bc:	mov	x23, x4
    b4c0:	mov	w1, #0x51                  	// #81
    b4c4:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b4c8:	cbnz	w0, b4e0 <gcc_cp_fe_context@@Base+0x1db0>
    b4cc:	ldp	x19, x20, [sp, #16]
    b4d0:	ldp	x21, x22, [sp, #32]
    b4d4:	ldr	x23, [sp, #48]
    b4d8:	ldp	x29, x30, [sp], #64
    b4dc:	ret
    b4e0:	mov	x1, x20
    b4e4:	mov	x0, x19
    b4e8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b4ec:	cbz	w0, b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b4f0:	mov	x1, #0x2                   	// #2
    b4f4:	mov	x0, x19
    b4f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b4fc:	cbz	w0, b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b500:	mov	x1, x22
    b504:	mov	x0, x19
    b508:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b50c:	cbz	w0, b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b510:	mov	x1, x23
    b514:	mov	x0, x19
    b518:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b51c:	cbz	w0, b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b520:	mov	w1, #0x1                   	// #1
    b524:	mov	x0, x19
    b528:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b52c:	cbz	w0, b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b530:	mov	x1, x21
    b534:	mov	x0, x19
    b538:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    b53c:	cmp	w0, #0x0
    b540:	cset	w0, ne  // ne = any
    b544:	b	b4cc <gcc_cp_fe_context@@Base+0x1d9c>
    b548:	stp	x29, x30, [sp, #-32]!
    b54c:	mov	x29, sp
    b550:	mov	x4, x2
    b554:	mov	x3, x1
    b558:	add	x2, sp, #0x18
    b55c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b560:	ldr	x1, [x1, #3896]
    b564:	ldr	x1, [x1]
    b568:	ldr	x0, [x0, #16]
    b56c:	bl	b498 <gcc_cp_fe_context@@Base+0x1d68>
    b570:	cmp	w0, #0x0
    b574:	ldr	x0, [sp, #24]
    b578:	csel	x0, x0, xzr, ne  // ne = any
    b57c:	ldp	x29, x30, [sp], #32
    b580:	ret
    b584:	stp	x29, x30, [sp, #-32]!
    b588:	mov	x29, sp
    b58c:	mov	x4, x2
    b590:	mov	x3, x1
    b594:	add	x2, sp, #0x18
    b598:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b59c:	ldr	x1, [x1, #3656]
    b5a0:	ldr	x1, [x1]
    b5a4:	ldr	x0, [x0, #16]
    b5a8:	bl	b498 <gcc_cp_fe_context@@Base+0x1d68>
    b5ac:	cmp	w0, #0x0
    b5b0:	ldr	x0, [sp, #24]
    b5b4:	csel	x0, x0, xzr, ne  // ne = any
    b5b8:	ldp	x29, x30, [sp], #32
    b5bc:	ret
    b5c0:	stp	x29, x30, [sp, #-64]!
    b5c4:	mov	x29, sp
    b5c8:	stp	x19, x20, [sp, #16]
    b5cc:	stp	x21, x22, [sp, #32]
    b5d0:	str	x23, [sp, #48]
    b5d4:	mov	x19, x0
    b5d8:	mov	x20, x1
    b5dc:	mov	x21, x2
    b5e0:	mov	x22, x3
    b5e4:	mov	x23, x4
    b5e8:	mov	w1, #0x51                  	// #81
    b5ec:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b5f0:	cbnz	w0, b608 <gcc_cp_fe_context@@Base+0x1ed8>
    b5f4:	ldp	x19, x20, [sp, #16]
    b5f8:	ldp	x21, x22, [sp, #32]
    b5fc:	ldr	x23, [sp, #48]
    b600:	ldp	x29, x30, [sp], #64
    b604:	ret
    b608:	mov	x1, x20
    b60c:	mov	x0, x19
    b610:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b614:	cbz	w0, b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b618:	mov	x1, #0x2                   	// #2
    b61c:	mov	x0, x19
    b620:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b624:	cbz	w0, b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b628:	mov	x1, x22
    b62c:	mov	x0, x19
    b630:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b634:	cbz	w0, b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b638:	mov	x1, x23
    b63c:	mov	x0, x19
    b640:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b644:	cbz	w0, b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b648:	mov	w1, #0x1                   	// #1
    b64c:	mov	x0, x19
    b650:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b654:	cbz	w0, b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b658:	mov	x1, x21
    b65c:	mov	x0, x19
    b660:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    b664:	cmp	w0, #0x0
    b668:	cset	w0, ne  // ne = any
    b66c:	b	b5f4 <gcc_cp_fe_context@@Base+0x1ec4>
    b670:	stp	x29, x30, [sp, #-32]!
    b674:	mov	x29, sp
    b678:	mov	x4, x2
    b67c:	mov	x3, x1
    b680:	add	x2, sp, #0x18
    b684:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b688:	ldr	x1, [x1, #3560]
    b68c:	ldr	x1, [x1]
    b690:	ldr	x0, [x0, #16]
    b694:	bl	b5c0 <gcc_cp_fe_context@@Base+0x1e90>
    b698:	cmp	w0, #0x0
    b69c:	ldr	x0, [sp, #24]
    b6a0:	csel	x0, x0, xzr, ne  // ne = any
    b6a4:	ldp	x29, x30, [sp], #32
    b6a8:	ret
    b6ac:	stp	x29, x30, [sp, #-32]!
    b6b0:	mov	x29, sp
    b6b4:	mov	x4, x2
    b6b8:	mov	x3, x1
    b6bc:	add	x2, sp, #0x18
    b6c0:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b6c4:	ldr	x1, [x1, #4016]
    b6c8:	ldr	x1, [x1]
    b6cc:	ldr	x0, [x0, #16]
    b6d0:	bl	b5c0 <gcc_cp_fe_context@@Base+0x1e90>
    b6d4:	cmp	w0, #0x0
    b6d8:	ldr	x0, [sp, #24]
    b6dc:	csel	x0, x0, xzr, ne  // ne = any
    b6e0:	ldp	x29, x30, [sp], #32
    b6e4:	ret
    b6e8:	stp	x29, x30, [sp, #-32]!
    b6ec:	mov	x29, sp
    b6f0:	add	x2, sp, #0x18
    b6f4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b6f8:	ldr	x1, [x1, #3536]
    b6fc:	ldr	x1, [x1]
    b700:	ldr	x0, [x0, #16]
    b704:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b708:	cmp	w0, #0x0
    b70c:	ldr	x0, [sp, #24]
    b710:	csel	x0, x0, xzr, ne  // ne = any
    b714:	ldp	x29, x30, [sp], #32
    b718:	ret
    b71c:	stp	x29, x30, [sp, #-32]!
    b720:	mov	x29, sp
    b724:	add	x2, sp, #0x18
    b728:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b72c:	ldr	x1, [x1, #3328]
    b730:	ldr	x1, [x1]
    b734:	ldr	x0, [x0, #16]
    b738:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b73c:	cmp	w0, #0x0
    b740:	ldr	x0, [sp, #24]
    b744:	csel	x0, x0, xzr, ne  // ne = any
    b748:	ldp	x29, x30, [sp], #32
    b74c:	ret
    b750:	stp	x29, x30, [sp, #-32]!
    b754:	mov	x29, sp
    b758:	add	x2, sp, #0x18
    b75c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b760:	ldr	x1, [x1, #3976]
    b764:	ldr	x1, [x1]
    b768:	ldr	x0, [x0, #16]
    b76c:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b770:	cmp	w0, #0x0
    b774:	ldr	x0, [sp, #24]
    b778:	csel	x0, x0, xzr, ne  // ne = any
    b77c:	ldp	x29, x30, [sp], #32
    b780:	ret
    b784:	stp	x29, x30, [sp, #-32]!
    b788:	mov	x29, sp
    b78c:	add	x2, sp, #0x18
    b790:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b794:	ldr	x1, [x1, #3248]
    b798:	ldr	x1, [x1]
    b79c:	ldr	x0, [x0, #16]
    b7a0:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b7a4:	cmp	w0, #0x0
    b7a8:	ldr	x0, [sp, #24]
    b7ac:	csel	x0, x0, xzr, ne  // ne = any
    b7b0:	ldp	x29, x30, [sp], #32
    b7b4:	ret
    b7b8:	stp	x29, x30, [sp, #-32]!
    b7bc:	mov	x29, sp
    b7c0:	add	x2, sp, #0x18
    b7c4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b7c8:	ldr	x1, [x1, #4064]
    b7cc:	ldr	x1, [x1]
    b7d0:	ldr	x0, [x0, #16]
    b7d4:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b7d8:	cmp	w0, #0x0
    b7dc:	ldr	x0, [sp, #24]
    b7e0:	csel	x0, x0, xzr, ne  // ne = any
    b7e4:	ldp	x29, x30, [sp], #32
    b7e8:	ret
    b7ec:	stp	x29, x30, [sp, #-32]!
    b7f0:	mov	x29, sp
    b7f4:	add	x2, sp, #0x18
    b7f8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    b7fc:	ldr	x1, [x1, #4024]
    b800:	ldr	x1, [x1]
    b804:	ldr	x0, [x0, #16]
    b808:	bl	76c8 <gcc_c_fe_context@@Base+0x1208>
    b80c:	cmp	w0, #0x0
    b810:	ldr	x0, [sp, #24]
    b814:	csel	x0, x0, xzr, ne  // ne = any
    b818:	ldp	x29, x30, [sp], #32
    b81c:	ret
    b820:	stp	x29, x30, [sp, #-64]!
    b824:	mov	x29, sp
    b828:	stp	x19, x20, [sp, #16]
    b82c:	stp	x21, x22, [sp, #32]
    b830:	mov	x21, x1
    b834:	mov	x20, x2
    b838:	ldr	x19, [x0, #16]
    b83c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b840:	ldr	x0, [x0, #3272]
    b844:	ldr	x22, [x0]
    b848:	mov	w1, #0x51                  	// #81
    b84c:	mov	x0, x19
    b850:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b854:	cbnz	w0, b860 <gcc_cp_fe_context@@Base+0x2130>
    b858:	mov	x0, #0x0                   	// #0
    b85c:	b	b8c4 <gcc_cp_fe_context@@Base+0x2194>
    b860:	mov	x1, x22
    b864:	mov	x0, x19
    b868:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b86c:	cbz	w0, b858 <gcc_cp_fe_context@@Base+0x2128>
    b870:	mov	x1, #0x2                   	// #2
    b874:	mov	x0, x19
    b878:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b87c:	cbz	w0, b858 <gcc_cp_fe_context@@Base+0x2128>
    b880:	mov	x1, x21
    b884:	mov	x0, x19
    b888:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b88c:	cbz	w0, b858 <gcc_cp_fe_context@@Base+0x2128>
    b890:	mov	x1, x20
    b894:	mov	x0, x19
    b898:	bl	d91c <gcc_cp_fe_context@@Base+0x41ec>
    b89c:	cbz	w0, b858 <gcc_cp_fe_context@@Base+0x2128>
    b8a0:	mov	w1, #0x1                   	// #1
    b8a4:	mov	x0, x19
    b8a8:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b8ac:	cbz	w0, b858 <gcc_cp_fe_context@@Base+0x2128>
    b8b0:	add	x1, sp, #0x38
    b8b4:	mov	x0, x19
    b8b8:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    b8bc:	cbz	w0, b8d4 <gcc_cp_fe_context@@Base+0x21a4>
    b8c0:	ldr	x0, [sp, #56]
    b8c4:	ldp	x19, x20, [sp, #16]
    b8c8:	ldp	x21, x22, [sp, #32]
    b8cc:	ldp	x29, x30, [sp], #64
    b8d0:	ret
    b8d4:	mov	x0, #0x0                   	// #0
    b8d8:	b	b8c4 <gcc_cp_fe_context@@Base+0x2194>
    b8dc:	stp	x29, x30, [sp, #-80]!
    b8e0:	mov	x29, sp
    b8e4:	stp	x19, x20, [sp, #16]
    b8e8:	stp	x21, x22, [sp, #32]
    b8ec:	str	x23, [sp, #48]
    b8f0:	mov	x22, x1
    b8f4:	mov	x21, x2
    b8f8:	mov	w20, w3
    b8fc:	ldr	x19, [x0, #16]
    b900:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b904:	ldr	x0, [x0, #3928]
    b908:	ldr	x23, [x0]
    b90c:	mov	w1, #0x51                  	// #81
    b910:	mov	x0, x19
    b914:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b918:	cbnz	w0, b924 <gcc_cp_fe_context@@Base+0x21f4>
    b91c:	mov	x0, #0x0                   	// #0
    b920:	b	b998 <gcc_cp_fe_context@@Base+0x2268>
    b924:	mov	x1, x23
    b928:	mov	x0, x19
    b92c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    b930:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b934:	mov	x1, #0x3                   	// #3
    b938:	mov	x0, x19
    b93c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b940:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b944:	mov	x1, x22
    b948:	mov	x0, x19
    b94c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b950:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b954:	mov	x1, x21
    b958:	mov	x0, x19
    b95c:	bl	d91c <gcc_cp_fe_context@@Base+0x41ec>
    b960:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b964:	sxtw	x1, w20
    b968:	mov	x0, x19
    b96c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    b970:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b974:	mov	w1, #0x1                   	// #1
    b978:	mov	x0, x19
    b97c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    b980:	cbz	w0, b91c <gcc_cp_fe_context@@Base+0x21ec>
    b984:	add	x1, sp, #0x48
    b988:	mov	x0, x19
    b98c:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    b990:	cbz	w0, b9ac <gcc_cp_fe_context@@Base+0x227c>
    b994:	ldr	x0, [sp, #72]
    b998:	ldp	x19, x20, [sp, #16]
    b99c:	ldp	x21, x22, [sp, #32]
    b9a0:	ldr	x23, [sp, #48]
    b9a4:	ldp	x29, x30, [sp], #80
    b9a8:	ret
    b9ac:	mov	x0, #0x0                   	// #0
    b9b0:	b	b998 <gcc_cp_fe_context@@Base+0x2268>
    b9b4:	stp	x29, x30, [sp, #-80]!
    b9b8:	mov	x29, sp
    b9bc:	stp	x19, x20, [sp, #16]
    b9c0:	stp	x21, x22, [sp, #32]
    b9c4:	str	x23, [sp, #48]
    b9c8:	mov	x22, x1
    b9cc:	mov	w21, w2
    b9d0:	mov	x20, x3
    b9d4:	ldr	x19, [x0, #16]
    b9d8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    b9dc:	ldr	x0, [x0, #3544]
    b9e0:	ldr	x23, [x0]
    b9e4:	mov	w1, #0x51                  	// #81
    b9e8:	mov	x0, x19
    b9ec:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    b9f0:	cbnz	w0, b9fc <gcc_cp_fe_context@@Base+0x22cc>
    b9f4:	mov	x0, #0x0                   	// #0
    b9f8:	b	ba70 <gcc_cp_fe_context@@Base+0x2340>
    b9fc:	mov	x1, x23
    ba00:	mov	x0, x19
    ba04:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ba08:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba0c:	mov	x1, #0x3                   	// #3
    ba10:	mov	x0, x19
    ba14:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ba18:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba1c:	mov	x1, x22
    ba20:	mov	x0, x19
    ba24:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ba28:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba2c:	sxtw	x1, w21
    ba30:	mov	x0, x19
    ba34:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ba38:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba3c:	mov	x1, x20
    ba40:	mov	x0, x19
    ba44:	bl	9448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x940>
    ba48:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba4c:	mov	w1, #0x1                   	// #1
    ba50:	mov	x0, x19
    ba54:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ba58:	cbz	w0, b9f4 <gcc_cp_fe_context@@Base+0x22c4>
    ba5c:	add	x1, sp, #0x48
    ba60:	mov	x0, x19
    ba64:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    ba68:	cbz	w0, ba84 <gcc_cp_fe_context@@Base+0x2354>
    ba6c:	ldr	x0, [sp, #72]
    ba70:	ldp	x19, x20, [sp, #16]
    ba74:	ldp	x21, x22, [sp, #32]
    ba78:	ldr	x23, [sp, #48]
    ba7c:	ldp	x29, x30, [sp], #80
    ba80:	ret
    ba84:	mov	x0, #0x0                   	// #0
    ba88:	b	ba70 <gcc_cp_fe_context@@Base+0x2340>
    ba8c:	stp	x29, x30, [sp, #-80]!
    ba90:	mov	x29, sp
    ba94:	stp	x19, x20, [sp, #16]
    ba98:	stp	x21, x22, [sp, #32]
    ba9c:	stp	x23, x24, [sp, #48]
    baa0:	mov	x20, x1
    baa4:	mov	x21, x2
    baa8:	mov	x23, x3
    baac:	mov	x22, x4
    bab0:	ldr	x19, [x0, #16]
    bab4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    bab8:	ldr	x0, [x0, #3680]
    babc:	ldr	x24, [x0]
    bac0:	mov	w1, #0x51                  	// #81
    bac4:	mov	x0, x19
    bac8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    bacc:	cbnz	w0, bad8 <gcc_cp_fe_context@@Base+0x23a8>
    bad0:	mov	x0, #0x0                   	// #0
    bad4:	b	bb5c <gcc_cp_fe_context@@Base+0x242c>
    bad8:	mov	x1, x24
    badc:	mov	x0, x19
    bae0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bae4:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bae8:	mov	x1, #0x4                   	// #4
    baec:	mov	x0, x19
    baf0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    baf4:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    baf8:	mov	x1, x20
    bafc:	mov	x0, x19
    bb00:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bb04:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bb08:	mov	x1, x21
    bb0c:	mov	x0, x19
    bb10:	bl	9448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x940>
    bb14:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bb18:	mov	x1, x23
    bb1c:	mov	x0, x19
    bb20:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bb24:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bb28:	mov	x1, x22
    bb2c:	mov	x0, x19
    bb30:	bl	9448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x940>
    bb34:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bb38:	mov	w1, #0x1                   	// #1
    bb3c:	mov	x0, x19
    bb40:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    bb44:	cbz	w0, bad0 <gcc_cp_fe_context@@Base+0x23a0>
    bb48:	add	x1, sp, #0x48
    bb4c:	mov	x0, x19
    bb50:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    bb54:	cbz	w0, bb70 <gcc_cp_fe_context@@Base+0x2440>
    bb58:	ldr	x0, [sp, #72]
    bb5c:	ldp	x19, x20, [sp, #16]
    bb60:	ldp	x21, x22, [sp, #32]
    bb64:	ldp	x23, x24, [sp, #48]
    bb68:	ldp	x29, x30, [sp], #80
    bb6c:	ret
    bb70:	mov	x0, #0x0                   	// #0
    bb74:	b	bb5c <gcc_cp_fe_context@@Base+0x242c>
    bb78:	stp	x29, x30, [sp, #-80]!
    bb7c:	mov	x29, sp
    bb80:	stp	x19, x20, [sp, #16]
    bb84:	stp	x21, x22, [sp, #32]
    bb88:	str	x23, [sp, #48]
    bb8c:	mov	x22, x1
    bb90:	mov	x21, x2
    bb94:	mov	x20, x3
    bb98:	ldr	x19, [x0, #16]
    bb9c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    bba0:	ldr	x0, [x0, #3744]
    bba4:	ldr	x23, [x0]
    bba8:	mov	w1, #0x51                  	// #81
    bbac:	mov	x0, x19
    bbb0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    bbb4:	cbnz	w0, bbc0 <gcc_cp_fe_context@@Base+0x2490>
    bbb8:	mov	x0, #0x0                   	// #0
    bbbc:	b	bc34 <gcc_cp_fe_context@@Base+0x2504>
    bbc0:	mov	x1, x23
    bbc4:	mov	x0, x19
    bbc8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bbcc:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bbd0:	mov	x1, #0x3                   	// #3
    bbd4:	mov	x0, x19
    bbd8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bbdc:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bbe0:	mov	x1, x22
    bbe4:	mov	x0, x19
    bbe8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bbec:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bbf0:	mov	x1, x21
    bbf4:	mov	x0, x19
    bbf8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bbfc:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bc00:	mov	x1, x20
    bc04:	mov	x0, x19
    bc08:	bl	9448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x940>
    bc0c:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bc10:	mov	w1, #0x1                   	// #1
    bc14:	mov	x0, x19
    bc18:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    bc1c:	cbz	w0, bbb8 <gcc_cp_fe_context@@Base+0x2488>
    bc20:	add	x1, sp, #0x48
    bc24:	mov	x0, x19
    bc28:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    bc2c:	cbz	w0, bc48 <gcc_cp_fe_context@@Base+0x2518>
    bc30:	ldr	x0, [sp, #72]
    bc34:	ldp	x19, x20, [sp, #16]
    bc38:	ldp	x21, x22, [sp, #32]
    bc3c:	ldr	x23, [sp, #48]
    bc40:	ldp	x29, x30, [sp], #80
    bc44:	ret
    bc48:	mov	x0, #0x0                   	// #0
    bc4c:	b	bc34 <gcc_cp_fe_context@@Base+0x2504>
    bc50:	stp	x29, x30, [sp, #-64]!
    bc54:	mov	x29, sp
    bc58:	stp	x19, x20, [sp, #16]
    bc5c:	stp	x21, x22, [sp, #32]
    bc60:	stp	x23, x24, [sp, #48]
    bc64:	mov	x19, x0
    bc68:	mov	x21, x1
    bc6c:	mov	x20, x2
    bc70:	mov	x24, x3
    bc74:	mov	x23, x4
    bc78:	mov	x22, x5
    bc7c:	mov	w1, #0x51                  	// #81
    bc80:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    bc84:	cbnz	w0, bc9c <gcc_cp_fe_context@@Base+0x256c>
    bc88:	ldp	x19, x20, [sp, #16]
    bc8c:	ldp	x21, x22, [sp, #32]
    bc90:	ldp	x23, x24, [sp, #48]
    bc94:	ldp	x29, x30, [sp], #64
    bc98:	ret
    bc9c:	mov	x1, x21
    bca0:	mov	x0, x19
    bca4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bca8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bcac:	mov	x1, #0x3                   	// #3
    bcb0:	mov	x0, x19
    bcb4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bcb8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bcbc:	mov	x1, x24
    bcc0:	mov	x0, x19
    bcc4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bcc8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bccc:	mov	x1, x23
    bcd0:	mov	x0, x19
    bcd4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bcd8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bcdc:	mov	x1, x22
    bce0:	mov	x0, x19
    bce4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bce8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bcec:	mov	w1, #0x1                   	// #1
    bcf0:	mov	x0, x19
    bcf4:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    bcf8:	cbz	w0, bc88 <gcc_cp_fe_context@@Base+0x2558>
    bcfc:	mov	x1, x20
    bd00:	mov	x0, x19
    bd04:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    bd08:	cmp	w0, #0x0
    bd0c:	cset	w0, ne  // ne = any
    bd10:	b	bc88 <gcc_cp_fe_context@@Base+0x2558>
    bd14:	stp	x29, x30, [sp, #-32]!
    bd18:	mov	x29, sp
    bd1c:	mov	x5, x3
    bd20:	mov	x4, x2
    bd24:	mov	x3, x1
    bd28:	add	x2, sp, #0x18
    bd2c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    bd30:	ldr	x1, [x1, #3320]
    bd34:	ldr	x1, [x1]
    bd38:	ldr	x0, [x0, #16]
    bd3c:	bl	bc50 <gcc_cp_fe_context@@Base+0x2520>
    bd40:	cmp	w0, #0x0
    bd44:	ldr	x0, [sp, #24]
    bd48:	csel	x0, x0, xzr, ne  // ne = any
    bd4c:	ldp	x29, x30, [sp], #32
    bd50:	ret
    bd54:	stp	x29, x30, [sp, #-32]!
    bd58:	mov	x29, sp
    bd5c:	mov	x5, x3
    bd60:	mov	x4, x2
    bd64:	mov	x3, x1
    bd68:	add	x2, sp, #0x18
    bd6c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    bd70:	ldr	x1, [x1, #3400]
    bd74:	ldr	x1, [x1]
    bd78:	ldr	x0, [x0, #16]
    bd7c:	bl	bc50 <gcc_cp_fe_context@@Base+0x2520>
    bd80:	cmp	w0, #0x0
    bd84:	ldr	x0, [sp, #24]
    bd88:	csel	x0, x0, xzr, ne  // ne = any
    bd8c:	ldp	x29, x30, [sp], #32
    bd90:	ret
    bd94:	stp	x29, x30, [sp, #-32]!
    bd98:	mov	x29, sp
    bd9c:	mov	x5, x3
    bda0:	mov	x4, x2
    bda4:	mov	x3, x1
    bda8:	add	x2, sp, #0x18
    bdac:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    bdb0:	ldr	x1, [x1, #3736]
    bdb4:	ldr	x1, [x1]
    bdb8:	ldr	x0, [x0, #16]
    bdbc:	bl	bc50 <gcc_cp_fe_context@@Base+0x2520>
    bdc0:	cmp	w0, #0x0
    bdc4:	ldr	x0, [sp, #24]
    bdc8:	csel	x0, x0, xzr, ne  // ne = any
    bdcc:	ldp	x29, x30, [sp], #32
    bdd0:	ret
    bdd4:	stp	x29, x30, [sp, #-64]!
    bdd8:	mov	x29, sp
    bddc:	stp	x19, x20, [sp, #16]
    bde0:	stp	x21, x22, [sp, #32]
    bde4:	str	x23, [sp, #48]
    bde8:	mov	x19, x0
    bdec:	mov	x20, x1
    bdf0:	mov	x21, x2
    bdf4:	mov	x22, x3
    bdf8:	mov	x23, x4
    bdfc:	mov	w1, #0x51                  	// #81
    be00:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    be04:	cbnz	w0, be1c <gcc_cp_fe_context@@Base+0x26ec>
    be08:	ldp	x19, x20, [sp, #16]
    be0c:	ldp	x21, x22, [sp, #32]
    be10:	ldr	x23, [sp, #48]
    be14:	ldp	x29, x30, [sp], #64
    be18:	ret
    be1c:	mov	x1, x20
    be20:	mov	x0, x19
    be24:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    be28:	cbz	w0, be08 <gcc_cp_fe_context@@Base+0x26d8>
    be2c:	mov	x1, #0x2                   	// #2
    be30:	mov	x0, x19
    be34:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    be38:	cbz	w0, be08 <gcc_cp_fe_context@@Base+0x26d8>
    be3c:	mov	x1, x22
    be40:	mov	x0, x19
    be44:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    be48:	cbz	w0, be08 <gcc_cp_fe_context@@Base+0x26d8>
    be4c:	mov	x1, x23
    be50:	mov	x0, x19
    be54:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    be58:	cbz	w0, be08 <gcc_cp_fe_context@@Base+0x26d8>
    be5c:	mov	w1, #0x1                   	// #1
    be60:	mov	x0, x19
    be64:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    be68:	cbz	w0, be08 <gcc_cp_fe_context@@Base+0x26d8>
    be6c:	mov	x1, x21
    be70:	mov	x0, x19
    be74:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    be78:	cmp	w0, #0x0
    be7c:	cset	w0, ne  // ne = any
    be80:	b	be08 <gcc_cp_fe_context@@Base+0x26d8>
    be84:	stp	x29, x30, [sp, #-32]!
    be88:	mov	x29, sp
    be8c:	mov	x4, x2
    be90:	mov	x3, x1
    be94:	add	x2, sp, #0x18
    be98:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    be9c:	ldr	x1, [x1, #3472]
    bea0:	ldr	x1, [x1]
    bea4:	ldr	x0, [x0, #16]
    bea8:	bl	bdd4 <gcc_cp_fe_context@@Base+0x26a4>
    beac:	cmp	w0, #0x0
    beb0:	ldr	x0, [sp, #24]
    beb4:	csel	x0, x0, xzr, ne  // ne = any
    beb8:	ldp	x29, x30, [sp], #32
    bebc:	ret
    bec0:	stp	x29, x30, [sp, #-32]!
    bec4:	mov	x29, sp
    bec8:	mov	x4, x2
    becc:	mov	x3, x1
    bed0:	add	x2, sp, #0x18
    bed4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    bed8:	ldr	x1, [x1, #3776]
    bedc:	ldr	x1, [x1]
    bee0:	ldr	x0, [x0, #16]
    bee4:	bl	bdd4 <gcc_cp_fe_context@@Base+0x26a4>
    bee8:	cmp	w0, #0x0
    beec:	ldr	x0, [sp, #24]
    bef0:	csel	x0, x0, xzr, ne  // ne = any
    bef4:	ldp	x29, x30, [sp], #32
    bef8:	ret
    befc:	stp	x29, x30, [sp, #-80]!
    bf00:	mov	x29, sp
    bf04:	stp	x19, x20, [sp, #16]
    bf08:	stp	x21, x22, [sp, #32]
    bf0c:	stp	x23, x24, [sp, #48]
    bf10:	mov	x20, x1
    bf14:	mov	x21, x2
    bf18:	mov	x23, x3
    bf1c:	mov	x22, x4
    bf20:	ldr	x19, [x0, #16]
    bf24:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    bf28:	ldr	x0, [x0, #3768]
    bf2c:	ldr	x24, [x0]
    bf30:	mov	w1, #0x51                  	// #81
    bf34:	mov	x0, x19
    bf38:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    bf3c:	cbnz	w0, bf48 <gcc_cp_fe_context@@Base+0x2818>
    bf40:	mov	x0, #0x0                   	// #0
    bf44:	b	bfcc <gcc_cp_fe_context@@Base+0x289c>
    bf48:	mov	x1, x24
    bf4c:	mov	x0, x19
    bf50:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bf54:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bf58:	mov	x1, #0x4                   	// #4
    bf5c:	mov	x0, x19
    bf60:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bf64:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bf68:	mov	x1, x20
    bf6c:	mov	x0, x19
    bf70:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    bf74:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bf78:	mov	x1, x21
    bf7c:	mov	x0, x19
    bf80:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bf84:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bf88:	mov	x1, x23
    bf8c:	mov	x0, x19
    bf90:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bf94:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bf98:	mov	x1, x22
    bf9c:	mov	x0, x19
    bfa0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    bfa4:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bfa8:	mov	w1, #0x1                   	// #1
    bfac:	mov	x0, x19
    bfb0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    bfb4:	cbz	w0, bf40 <gcc_cp_fe_context@@Base+0x2810>
    bfb8:	add	x1, sp, #0x48
    bfbc:	mov	x0, x19
    bfc0:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    bfc4:	cbz	w0, bfe0 <gcc_cp_fe_context@@Base+0x28b0>
    bfc8:	ldr	x0, [sp, #72]
    bfcc:	ldp	x19, x20, [sp, #16]
    bfd0:	ldp	x21, x22, [sp, #32]
    bfd4:	ldp	x23, x24, [sp, #48]
    bfd8:	ldp	x29, x30, [sp], #80
    bfdc:	ret
    bfe0:	mov	x0, #0x0                   	// #0
    bfe4:	b	bfcc <gcc_cp_fe_context@@Base+0x289c>
    bfe8:	stp	x29, x30, [sp, #-64]!
    bfec:	mov	x29, sp
    bff0:	stp	x19, x20, [sp, #16]
    bff4:	stp	x21, x22, [sp, #32]
    bff8:	mov	x21, x1
    bffc:	mov	x20, x2
    c000:	ldr	x19, [x0, #16]
    c004:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c008:	ldr	x0, [x0, #3496]
    c00c:	ldr	x22, [x0]
    c010:	mov	w1, #0x51                  	// #81
    c014:	mov	x0, x19
    c018:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c01c:	cbnz	w0, c028 <gcc_cp_fe_context@@Base+0x28f8>
    c020:	mov	x0, #0x0                   	// #0
    c024:	b	c08c <gcc_cp_fe_context@@Base+0x295c>
    c028:	mov	x1, x22
    c02c:	mov	x0, x19
    c030:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c034:	cbz	w0, c020 <gcc_cp_fe_context@@Base+0x28f0>
    c038:	mov	x1, #0x2                   	// #2
    c03c:	mov	x0, x19
    c040:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c044:	cbz	w0, c020 <gcc_cp_fe_context@@Base+0x28f0>
    c048:	mov	x1, x21
    c04c:	mov	x0, x19
    c050:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c054:	cbz	w0, c020 <gcc_cp_fe_context@@Base+0x28f0>
    c058:	mov	x1, x20
    c05c:	mov	x0, x19
    c060:	bl	92a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7a0>
    c064:	cbz	w0, c020 <gcc_cp_fe_context@@Base+0x28f0>
    c068:	mov	w1, #0x1                   	// #1
    c06c:	mov	x0, x19
    c070:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c074:	cbz	w0, c020 <gcc_cp_fe_context@@Base+0x28f0>
    c078:	add	x1, sp, #0x38
    c07c:	mov	x0, x19
    c080:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c084:	cbz	w0, c09c <gcc_cp_fe_context@@Base+0x296c>
    c088:	ldr	x0, [sp, #56]
    c08c:	ldp	x19, x20, [sp, #16]
    c090:	ldp	x21, x22, [sp, #32]
    c094:	ldp	x29, x30, [sp], #64
    c098:	ret
    c09c:	mov	x0, #0x0                   	// #0
    c0a0:	b	c08c <gcc_cp_fe_context@@Base+0x295c>
    c0a4:	stp	x29, x30, [sp, #-80]!
    c0a8:	mov	x29, sp
    c0ac:	stp	x19, x20, [sp, #16]
    c0b0:	stp	x21, x22, [sp, #32]
    c0b4:	str	x23, [sp, #48]
    c0b8:	mov	x22, x1
    c0bc:	mov	x21, x2
    c0c0:	mov	x20, x3
    c0c4:	ldr	x19, [x0, #16]
    c0c8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c0cc:	ldr	x0, [x0, #3360]
    c0d0:	ldr	x23, [x0]
    c0d4:	mov	w1, #0x51                  	// #81
    c0d8:	mov	x0, x19
    c0dc:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c0e0:	cbnz	w0, c0ec <gcc_cp_fe_context@@Base+0x29bc>
    c0e4:	mov	x0, #0x0                   	// #0
    c0e8:	b	c160 <gcc_cp_fe_context@@Base+0x2a30>
    c0ec:	mov	x1, x23
    c0f0:	mov	x0, x19
    c0f4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c0f8:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c0fc:	mov	x1, #0x3                   	// #3
    c100:	mov	x0, x19
    c104:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c108:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c10c:	mov	x1, x22
    c110:	mov	x0, x19
    c114:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c118:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c11c:	mov	x1, x21
    c120:	mov	x0, x19
    c124:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c128:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c12c:	mov	x1, x20
    c130:	mov	x0, x19
    c134:	bl	92a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7a0>
    c138:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c13c:	mov	w1, #0x1                   	// #1
    c140:	mov	x0, x19
    c144:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c148:	cbz	w0, c0e4 <gcc_cp_fe_context@@Base+0x29b4>
    c14c:	add	x1, sp, #0x48
    c150:	mov	x0, x19
    c154:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c158:	cbz	w0, c174 <gcc_cp_fe_context@@Base+0x2a44>
    c15c:	ldr	x0, [sp, #72]
    c160:	ldp	x19, x20, [sp, #16]
    c164:	ldp	x21, x22, [sp, #32]
    c168:	ldr	x23, [sp, #48]
    c16c:	ldp	x29, x30, [sp], #80
    c170:	ret
    c174:	mov	x0, #0x0                   	// #0
    c178:	b	c160 <gcc_cp_fe_context@@Base+0x2a30>
    c17c:	stp	x29, x30, [sp, #-96]!
    c180:	mov	x29, sp
    c184:	stp	x19, x20, [sp, #16]
    c188:	stp	x21, x22, [sp, #32]
    c18c:	stp	x23, x24, [sp, #48]
    c190:	str	x25, [sp, #64]
    c194:	mov	x20, x1
    c198:	mov	w21, w2
    c19c:	mov	x22, x3
    c1a0:	mov	x23, x4
    c1a4:	mov	x24, x5
    c1a8:	ldr	x19, [x0, #16]
    c1ac:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c1b0:	ldr	x0, [x0, #3784]
    c1b4:	ldr	x25, [x0]
    c1b8:	mov	w1, #0x51                  	// #81
    c1bc:	mov	x0, x19
    c1c0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c1c4:	cbnz	w0, c1d0 <gcc_cp_fe_context@@Base+0x2aa0>
    c1c8:	mov	x0, #0x0                   	// #0
    c1cc:	b	c264 <gcc_cp_fe_context@@Base+0x2b34>
    c1d0:	mov	x1, x25
    c1d4:	mov	x0, x19
    c1d8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c1dc:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c1e0:	mov	x1, #0x5                   	// #5
    c1e4:	mov	x0, x19
    c1e8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c1ec:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c1f0:	mov	x1, x20
    c1f4:	mov	x0, x19
    c1f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c1fc:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c200:	mov	w1, w21
    c204:	mov	x0, x19
    c208:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c20c:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c210:	mov	x1, x22
    c214:	mov	x0, x19
    c218:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c21c:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c220:	mov	x1, x23
    c224:	mov	x0, x19
    c228:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c22c:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c230:	mov	x1, x24
    c234:	mov	x0, x19
    c238:	bl	92a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7a0>
    c23c:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c240:	mov	w1, #0x1                   	// #1
    c244:	mov	x0, x19
    c248:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c24c:	cbz	w0, c1c8 <gcc_cp_fe_context@@Base+0x2a98>
    c250:	add	x1, sp, #0x58
    c254:	mov	x0, x19
    c258:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c25c:	cbz	w0, c27c <gcc_cp_fe_context@@Base+0x2b4c>
    c260:	ldr	x0, [sp, #88]
    c264:	ldp	x19, x20, [sp, #16]
    c268:	ldp	x21, x22, [sp, #32]
    c26c:	ldp	x23, x24, [sp, #48]
    c270:	ldr	x25, [sp, #64]
    c274:	ldp	x29, x30, [sp], #96
    c278:	ret
    c27c:	mov	x0, #0x0                   	// #0
    c280:	b	c264 <gcc_cp_fe_context@@Base+0x2b34>
    c284:	stp	x29, x30, [sp, #-96]!
    c288:	mov	x29, sp
    c28c:	stp	x19, x20, [sp, #16]
    c290:	stp	x21, x22, [sp, #32]
    c294:	stp	x23, x24, [sp, #48]
    c298:	str	x25, [sp, #64]
    c29c:	mov	x20, x1
    c2a0:	mov	x21, x2
    c2a4:	mov	w22, w3
    c2a8:	mov	x23, x4
    c2ac:	mov	w24, w5
    c2b0:	ldr	x19, [x0, #16]
    c2b4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c2b8:	ldr	x0, [x0, #3208]
    c2bc:	ldr	x25, [x0]
    c2c0:	mov	w1, #0x51                  	// #81
    c2c4:	mov	x0, x19
    c2c8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c2cc:	cbnz	w0, c2d8 <gcc_cp_fe_context@@Base+0x2ba8>
    c2d0:	mov	x0, #0x0                   	// #0
    c2d4:	b	c36c <gcc_cp_fe_context@@Base+0x2c3c>
    c2d8:	mov	x1, x25
    c2dc:	mov	x0, x19
    c2e0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c2e4:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c2e8:	mov	x1, #0x5                   	// #5
    c2ec:	mov	x0, x19
    c2f0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c2f4:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c2f8:	mov	x1, x20
    c2fc:	mov	x0, x19
    c300:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c304:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c308:	mov	x1, x21
    c30c:	mov	x0, x19
    c310:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c314:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c318:	mov	w1, w22
    c31c:	mov	x0, x19
    c320:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c324:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c328:	mov	x1, x23
    c32c:	mov	x0, x19
    c330:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c334:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c338:	mov	w1, w24
    c33c:	mov	x0, x19
    c340:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c344:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c348:	mov	w1, #0x1                   	// #1
    c34c:	mov	x0, x19
    c350:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c354:	cbz	w0, c2d0 <gcc_cp_fe_context@@Base+0x2ba0>
    c358:	add	x1, sp, #0x58
    c35c:	mov	x0, x19
    c360:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c364:	cbz	w0, c384 <gcc_cp_fe_context@@Base+0x2c54>
    c368:	ldr	x0, [sp, #88]
    c36c:	ldp	x19, x20, [sp, #16]
    c370:	ldp	x21, x22, [sp, #32]
    c374:	ldp	x23, x24, [sp, #48]
    c378:	ldr	x25, [sp, #64]
    c37c:	ldp	x29, x30, [sp], #96
    c380:	ret
    c384:	mov	x0, #0x0                   	// #0
    c388:	b	c36c <gcc_cp_fe_context@@Base+0x2c3c>
    c38c:	stp	x29, x30, [sp, #-96]!
    c390:	mov	x29, sp
    c394:	stp	x19, x20, [sp, #16]
    c398:	stp	x21, x22, [sp, #32]
    c39c:	stp	x23, x24, [sp, #48]
    c3a0:	str	x25, [sp, #64]
    c3a4:	mov	w20, w1
    c3a8:	mov	x21, x2
    c3ac:	mov	w22, w3
    c3b0:	mov	x23, x4
    c3b4:	mov	w24, w5
    c3b8:	ldr	x19, [x0, #16]
    c3bc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c3c0:	ldr	x0, [x0, #3352]
    c3c4:	ldr	x25, [x0]
    c3c8:	mov	w1, #0x51                  	// #81
    c3cc:	mov	x0, x19
    c3d0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c3d4:	cbnz	w0, c3e0 <gcc_cp_fe_context@@Base+0x2cb0>
    c3d8:	mov	x0, #0x0                   	// #0
    c3dc:	b	c474 <gcc_cp_fe_context@@Base+0x2d44>
    c3e0:	mov	x1, x25
    c3e4:	mov	x0, x19
    c3e8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c3ec:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c3f0:	mov	x1, #0x5                   	// #5
    c3f4:	mov	x0, x19
    c3f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c3fc:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c400:	sxtw	x1, w20
    c404:	mov	x0, x19
    c408:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c40c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c410:	mov	x1, x21
    c414:	mov	x0, x19
    c418:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c41c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c420:	mov	w1, w22
    c424:	mov	x0, x19
    c428:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c42c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c430:	mov	x1, x23
    c434:	mov	x0, x19
    c438:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c43c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c440:	mov	w1, w24
    c444:	mov	x0, x19
    c448:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c44c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c450:	mov	w1, #0x1                   	// #1
    c454:	mov	x0, x19
    c458:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c45c:	cbz	w0, c3d8 <gcc_cp_fe_context@@Base+0x2ca8>
    c460:	add	x1, sp, #0x58
    c464:	mov	x0, x19
    c468:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c46c:	cbz	w0, c48c <gcc_cp_fe_context@@Base+0x2d5c>
    c470:	ldr	x0, [sp, #88]
    c474:	ldp	x19, x20, [sp, #16]
    c478:	ldp	x21, x22, [sp, #32]
    c47c:	ldp	x23, x24, [sp, #48]
    c480:	ldr	x25, [sp, #64]
    c484:	ldp	x29, x30, [sp], #96
    c488:	ret
    c48c:	mov	x0, #0x0                   	// #0
    c490:	b	c474 <gcc_cp_fe_context@@Base+0x2d44>
    c494:	stp	x29, x30, [sp, #-80]!
    c498:	mov	x29, sp
    c49c:	stp	x19, x20, [sp, #16]
    c4a0:	stp	x21, x22, [sp, #32]
    c4a4:	stp	x23, x24, [sp, #48]
    c4a8:	mov	x20, x1
    c4ac:	mov	x21, x2
    c4b0:	mov	x23, x3
    c4b4:	mov	w22, w4
    c4b8:	ldr	x19, [x0, #16]
    c4bc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c4c0:	ldr	x0, [x0, #3760]
    c4c4:	ldr	x24, [x0]
    c4c8:	mov	w1, #0x51                  	// #81
    c4cc:	mov	x0, x19
    c4d0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c4d4:	cbnz	w0, c4e0 <gcc_cp_fe_context@@Base+0x2db0>
    c4d8:	mov	x0, #0x0                   	// #0
    c4dc:	b	c564 <gcc_cp_fe_context@@Base+0x2e34>
    c4e0:	mov	x1, x24
    c4e4:	mov	x0, x19
    c4e8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c4ec:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c4f0:	mov	x1, #0x4                   	// #4
    c4f4:	mov	x0, x19
    c4f8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c4fc:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c500:	mov	x1, x20
    c504:	mov	x0, x19
    c508:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c50c:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c510:	mov	x1, x21
    c514:	mov	x0, x19
    c518:	bl	90f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5e8>
    c51c:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c520:	mov	x1, x23
    c524:	mov	x0, x19
    c528:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c52c:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c530:	mov	w1, w22
    c534:	mov	x0, x19
    c538:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c53c:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c540:	mov	w1, #0x1                   	// #1
    c544:	mov	x0, x19
    c548:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c54c:	cbz	w0, c4d8 <gcc_cp_fe_context@@Base+0x2da8>
    c550:	add	x1, sp, #0x48
    c554:	mov	x0, x19
    c558:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c55c:	cbz	w0, c578 <gcc_cp_fe_context@@Base+0x2e48>
    c560:	ldr	x0, [sp, #72]
    c564:	ldp	x19, x20, [sp, #16]
    c568:	ldp	x21, x22, [sp, #32]
    c56c:	ldp	x23, x24, [sp, #48]
    c570:	ldp	x29, x30, [sp], #80
    c574:	ret
    c578:	mov	x0, #0x0                   	// #0
    c57c:	b	c564 <gcc_cp_fe_context@@Base+0x2e34>
    c580:	stp	x29, x30, [sp, #-80]!
    c584:	mov	x29, sp
    c588:	stp	x19, x20, [sp, #16]
    c58c:	stp	x21, x22, [sp, #32]
    c590:	stp	x23, x24, [sp, #48]
    c594:	mov	x20, x1
    c598:	mov	x21, x2
    c59c:	mov	x23, x3
    c5a0:	mov	w22, w4
    c5a4:	ldr	x19, [x0, #16]
    c5a8:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c5ac:	ldr	x0, [x0, #3720]
    c5b0:	ldr	x24, [x0]
    c5b4:	mov	w1, #0x51                  	// #81
    c5b8:	mov	x0, x19
    c5bc:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c5c0:	cbnz	w0, c5cc <gcc_cp_fe_context@@Base+0x2e9c>
    c5c4:	mov	x0, #0x0                   	// #0
    c5c8:	b	c650 <gcc_cp_fe_context@@Base+0x2f20>
    c5cc:	mov	x1, x24
    c5d0:	mov	x0, x19
    c5d4:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c5d8:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c5dc:	mov	x1, #0x4                   	// #4
    c5e0:	mov	x0, x19
    c5e4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c5e8:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c5ec:	mov	x1, x20
    c5f0:	mov	x0, x19
    c5f4:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c5f8:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c5fc:	mov	x1, x21
    c600:	mov	x0, x19
    c604:	bl	92a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7a0>
    c608:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c60c:	mov	x1, x23
    c610:	mov	x0, x19
    c614:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c618:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c61c:	mov	w1, w22
    c620:	mov	x0, x19
    c624:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c628:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c62c:	mov	w1, #0x1                   	// #1
    c630:	mov	x0, x19
    c634:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c638:	cbz	w0, c5c4 <gcc_cp_fe_context@@Base+0x2e94>
    c63c:	add	x1, sp, #0x48
    c640:	mov	x0, x19
    c644:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c648:	cbz	w0, c664 <gcc_cp_fe_context@@Base+0x2f34>
    c64c:	ldr	x0, [sp, #72]
    c650:	ldp	x19, x20, [sp, #16]
    c654:	ldp	x21, x22, [sp, #32]
    c658:	ldp	x23, x24, [sp, #48]
    c65c:	ldp	x29, x30, [sp], #80
    c660:	ret
    c664:	mov	x0, #0x0                   	// #0
    c668:	b	c650 <gcc_cp_fe_context@@Base+0x2f20>
    c66c:	stp	x29, x30, [sp, #-96]!
    c670:	mov	x29, sp
    c674:	stp	x19, x20, [sp, #16]
    c678:	stp	x21, x22, [sp, #32]
    c67c:	stp	x23, x24, [sp, #48]
    c680:	str	x25, [sp, #64]
    c684:	mov	x20, x1
    c688:	mov	x21, x2
    c68c:	mov	x22, x3
    c690:	mov	x23, x4
    c694:	mov	w24, w5
    c698:	ldr	x19, [x0, #16]
    c69c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c6a0:	ldr	x0, [x0, #3592]
    c6a4:	ldr	x25, [x0]
    c6a8:	mov	w1, #0x51                  	// #81
    c6ac:	mov	x0, x19
    c6b0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c6b4:	cbnz	w0, c6c0 <gcc_cp_fe_context@@Base+0x2f90>
    c6b8:	mov	x0, #0x0                   	// #0
    c6bc:	b	c754 <gcc_cp_fe_context@@Base+0x3024>
    c6c0:	mov	x1, x25
    c6c4:	mov	x0, x19
    c6c8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c6cc:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c6d0:	mov	x1, #0x5                   	// #5
    c6d4:	mov	x0, x19
    c6d8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c6dc:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c6e0:	mov	x1, x20
    c6e4:	mov	x0, x19
    c6e8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c6ec:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c6f0:	mov	x1, x21
    c6f4:	mov	x0, x19
    c6f8:	bl	92a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7a0>
    c6fc:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c700:	mov	x1, x22
    c704:	mov	x0, x19
    c708:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c70c:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c710:	mov	x1, x23
    c714:	mov	x0, x19
    c718:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c71c:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c720:	mov	w1, w24
    c724:	mov	x0, x19
    c728:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c72c:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c730:	mov	w1, #0x1                   	// #1
    c734:	mov	x0, x19
    c738:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c73c:	cbz	w0, c6b8 <gcc_cp_fe_context@@Base+0x2f88>
    c740:	add	x1, sp, #0x58
    c744:	mov	x0, x19
    c748:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c74c:	cbz	w0, c76c <gcc_cp_fe_context@@Base+0x303c>
    c750:	ldr	x0, [sp, #88]
    c754:	ldp	x19, x20, [sp, #16]
    c758:	ldp	x21, x22, [sp, #32]
    c75c:	ldp	x23, x24, [sp, #48]
    c760:	ldr	x25, [sp, #64]
    c764:	ldp	x29, x30, [sp], #96
    c768:	ret
    c76c:	mov	x0, #0x0                   	// #0
    c770:	b	c754 <gcc_cp_fe_context@@Base+0x3024>
    c774:	stp	x29, x30, [sp, #-96]!
    c778:	mov	x29, sp
    c77c:	stp	x19, x20, [sp, #16]
    c780:	stp	x21, x22, [sp, #32]
    c784:	stp	x23, x24, [sp, #48]
    c788:	str	x25, [sp, #64]
    c78c:	mov	x20, x1
    c790:	mov	x21, x2
    c794:	mov	x22, x3
    c798:	mov	x23, x4
    c79c:	mov	w24, w5
    c7a0:	ldr	x19, [x0, #16]
    c7a4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    c7a8:	ldr	x0, [x0, #3232]
    c7ac:	ldr	x25, [x0]
    c7b0:	mov	w1, #0x51                  	// #81
    c7b4:	mov	x0, x19
    c7b8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c7bc:	cbnz	w0, c7c8 <gcc_cp_fe_context@@Base+0x3098>
    c7c0:	mov	x0, #0x0                   	// #0
    c7c4:	b	c85c <gcc_cp_fe_context@@Base+0x312c>
    c7c8:	mov	x1, x25
    c7cc:	mov	x0, x19
    c7d0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c7d4:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c7d8:	mov	x1, #0x5                   	// #5
    c7dc:	mov	x0, x19
    c7e0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c7e4:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c7e8:	mov	x1, x20
    c7ec:	mov	x0, x19
    c7f0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c7f4:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c7f8:	mov	x1, x21
    c7fc:	mov	x0, x19
    c800:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c804:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c808:	mov	x1, x22
    c80c:	mov	x0, x19
    c810:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c814:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c818:	mov	x1, x23
    c81c:	mov	x0, x19
    c820:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c824:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c828:	mov	w1, w24
    c82c:	mov	x0, x19
    c830:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c834:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c838:	mov	w1, #0x1                   	// #1
    c83c:	mov	x0, x19
    c840:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c844:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x3090>
    c848:	add	x1, sp, #0x58
    c84c:	mov	x0, x19
    c850:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c854:	cbz	w0, c874 <gcc_cp_fe_context@@Base+0x3144>
    c858:	ldr	x0, [sp, #88]
    c85c:	ldp	x19, x20, [sp, #16]
    c860:	ldp	x21, x22, [sp, #32]
    c864:	ldp	x23, x24, [sp, #48]
    c868:	ldr	x25, [sp, #64]
    c86c:	ldp	x29, x30, [sp], #96
    c870:	ret
    c874:	mov	x0, #0x0                   	// #0
    c878:	b	c85c <gcc_cp_fe_context@@Base+0x312c>
    c87c:	stp	x29, x30, [sp, #-80]!
    c880:	mov	x29, sp
    c884:	stp	x19, x20, [sp, #16]
    c888:	stp	x21, x22, [sp, #32]
    c88c:	stp	x23, x24, [sp, #48]
    c890:	stp	x25, x26, [sp, #64]
    c894:	mov	x19, x0
    c898:	mov	x26, x1
    c89c:	mov	x25, x2
    c8a0:	mov	x20, x3
    c8a4:	mov	w21, w4
    c8a8:	mov	x22, x5
    c8ac:	mov	x23, x6
    c8b0:	mov	w24, w7
    c8b4:	mov	w1, #0x51                  	// #81
    c8b8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    c8bc:	cbnz	w0, c8d8 <gcc_cp_fe_context@@Base+0x31a8>
    c8c0:	ldp	x19, x20, [sp, #16]
    c8c4:	ldp	x21, x22, [sp, #32]
    c8c8:	ldp	x23, x24, [sp, #48]
    c8cc:	ldp	x25, x26, [sp, #64]
    c8d0:	ldp	x29, x30, [sp], #80
    c8d4:	ret
    c8d8:	mov	x1, x26
    c8dc:	mov	x0, x19
    c8e0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c8e4:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c8e8:	mov	x1, #0x5                   	// #5
    c8ec:	mov	x0, x19
    c8f0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c8f4:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c8f8:	mov	x1, x20
    c8fc:	mov	x0, x19
    c900:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c904:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c908:	sxtw	x1, w21
    c90c:	mov	x0, x19
    c910:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c914:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c918:	mov	x1, x22
    c91c:	mov	x0, x19
    c920:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c924:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c928:	mov	x1, x23
    c92c:	mov	x0, x19
    c930:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    c934:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c938:	mov	w1, w24
    c93c:	mov	x0, x19
    c940:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    c944:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c948:	mov	w1, #0x1                   	// #1
    c94c:	mov	x0, x19
    c950:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    c954:	cbz	w0, c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c958:	mov	x1, x25
    c95c:	mov	x0, x19
    c960:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    c964:	cmp	w0, #0x0
    c968:	cset	w0, ne  // ne = any
    c96c:	b	c8c0 <gcc_cp_fe_context@@Base+0x3190>
    c970:	stp	x29, x30, [sp, #-32]!
    c974:	mov	x29, sp
    c978:	mov	w7, w5
    c97c:	mov	x6, x4
    c980:	mov	x5, x3
    c984:	mov	w4, w2
    c988:	mov	x3, x1
    c98c:	add	x2, sp, #0x18
    c990:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    c994:	ldr	x1, [x1, #3464]
    c998:	ldr	x1, [x1]
    c99c:	ldr	x0, [x0, #16]
    c9a0:	bl	c87c <gcc_cp_fe_context@@Base+0x314c>
    c9a4:	cmp	w0, #0x0
    c9a8:	ldr	x0, [sp, #24]
    c9ac:	csel	x0, x0, xzr, ne  // ne = any
    c9b0:	ldp	x29, x30, [sp], #32
    c9b4:	ret
    c9b8:	stp	x29, x30, [sp, #-32]!
    c9bc:	mov	x29, sp
    c9c0:	mov	w7, w5
    c9c4:	mov	x6, x4
    c9c8:	mov	x5, x3
    c9cc:	mov	w4, w2
    c9d0:	mov	x3, x1
    c9d4:	add	x2, sp, #0x18
    c9d8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    c9dc:	ldr	x1, [x1, #3616]
    c9e0:	ldr	x1, [x1]
    c9e4:	ldr	x0, [x0, #16]
    c9e8:	bl	c87c <gcc_cp_fe_context@@Base+0x314c>
    c9ec:	cmp	w0, #0x0
    c9f0:	ldr	x0, [sp, #24]
    c9f4:	csel	x0, x0, xzr, ne  // ne = any
    c9f8:	ldp	x29, x30, [sp], #32
    c9fc:	ret
    ca00:	stp	x29, x30, [sp, #-112]!
    ca04:	mov	x29, sp
    ca08:	stp	x19, x20, [sp, #16]
    ca0c:	stp	x21, x22, [sp, #32]
    ca10:	stp	x23, x24, [sp, #48]
    ca14:	stp	x25, x26, [sp, #64]
    ca18:	str	x27, [sp, #80]
    ca1c:	mov	x20, x1
    ca20:	mov	w21, w2
    ca24:	mov	x22, x3
    ca28:	mov	x23, x4
    ca2c:	mov	x24, x5
    ca30:	mov	x25, x6
    ca34:	mov	w26, w7
    ca38:	ldr	x19, [x0, #16]
    ca3c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ca40:	ldr	x0, [x0, #3440]
    ca44:	ldr	x27, [x0]
    ca48:	mov	w1, #0x51                  	// #81
    ca4c:	mov	x0, x19
    ca50:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    ca54:	cbnz	w0, ca60 <gcc_cp_fe_context@@Base+0x3330>
    ca58:	mov	x0, #0x0                   	// #0
    ca5c:	b	cb14 <gcc_cp_fe_context@@Base+0x33e4>
    ca60:	mov	x1, x27
    ca64:	mov	x0, x19
    ca68:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ca6c:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    ca70:	mov	x1, #0x7                   	// #7
    ca74:	mov	x0, x19
    ca78:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ca7c:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    ca80:	mov	x1, x20
    ca84:	mov	x0, x19
    ca88:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ca8c:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    ca90:	mov	w1, w21
    ca94:	mov	x0, x19
    ca98:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ca9c:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    caa0:	mov	x1, x22
    caa4:	mov	x0, x19
    caa8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    caac:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    cab0:	mov	x1, x23
    cab4:	mov	x0, x19
    cab8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cabc:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    cac0:	mov	x1, x24
    cac4:	mov	x0, x19
    cac8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cacc:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    cad0:	mov	x1, x25
    cad4:	mov	x0, x19
    cad8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cadc:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    cae0:	mov	w1, w26
    cae4:	mov	x0, x19
    cae8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    caec:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    caf0:	mov	w1, #0x1                   	// #1
    caf4:	mov	x0, x19
    caf8:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cafc:	cbz	w0, ca58 <gcc_cp_fe_context@@Base+0x3328>
    cb00:	add	x1, sp, #0x68
    cb04:	mov	x0, x19
    cb08:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    cb0c:	cbz	w0, cb30 <gcc_cp_fe_context@@Base+0x3400>
    cb10:	ldr	x0, [sp, #104]
    cb14:	ldp	x19, x20, [sp, #16]
    cb18:	ldp	x21, x22, [sp, #32]
    cb1c:	ldp	x23, x24, [sp, #48]
    cb20:	ldp	x25, x26, [sp, #64]
    cb24:	ldr	x27, [sp, #80]
    cb28:	ldp	x29, x30, [sp], #112
    cb2c:	ret
    cb30:	mov	x0, #0x0                   	// #0
    cb34:	b	cb14 <gcc_cp_fe_context@@Base+0x33e4>
    cb38:	stp	x29, x30, [sp, #-64]!
    cb3c:	mov	x29, sp
    cb40:	stp	x19, x20, [sp, #16]
    cb44:	stp	x21, x22, [sp, #32]
    cb48:	mov	x21, x1
    cb4c:	mov	w20, w2
    cb50:	ldr	x19, [x0, #16]
    cb54:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    cb58:	ldr	x0, [x0, #3312]
    cb5c:	ldr	x22, [x0]
    cb60:	mov	w1, #0x51                  	// #81
    cb64:	mov	x0, x19
    cb68:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    cb6c:	cbnz	w0, cb78 <gcc_cp_fe_context@@Base+0x3448>
    cb70:	mov	x0, #0x0                   	// #0
    cb74:	b	cbdc <gcc_cp_fe_context@@Base+0x34ac>
    cb78:	mov	x1, x22
    cb7c:	mov	x0, x19
    cb80:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cb84:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3440>
    cb88:	mov	x1, #0x2                   	// #2
    cb8c:	mov	x0, x19
    cb90:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cb94:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3440>
    cb98:	mov	x1, x21
    cb9c:	mov	x0, x19
    cba0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cba4:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3440>
    cba8:	mov	w1, w20
    cbac:	mov	x0, x19
    cbb0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cbb4:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3440>
    cbb8:	mov	w1, #0x1                   	// #1
    cbbc:	mov	x0, x19
    cbc0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cbc4:	cbz	w0, cb70 <gcc_cp_fe_context@@Base+0x3440>
    cbc8:	add	x1, sp, #0x38
    cbcc:	mov	x0, x19
    cbd0:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    cbd4:	cbz	w0, cbec <gcc_cp_fe_context@@Base+0x34bc>
    cbd8:	ldr	x0, [sp, #56]
    cbdc:	ldp	x19, x20, [sp, #16]
    cbe0:	ldp	x21, x22, [sp, #32]
    cbe4:	ldp	x29, x30, [sp], #64
    cbe8:	ret
    cbec:	mov	x0, #0x0                   	// #0
    cbf0:	b	cbdc <gcc_cp_fe_context@@Base+0x34ac>
    cbf4:	stp	x29, x30, [sp, #-64]!
    cbf8:	mov	x29, sp
    cbfc:	stp	x19, x20, [sp, #16]
    cc00:	stp	x21, x22, [sp, #32]
    cc04:	mov	x21, x1
    cc08:	mov	x20, x2
    cc0c:	ldr	x19, [x0, #16]
    cc10:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    cc14:	ldr	x0, [x0, #3280]
    cc18:	ldr	x22, [x0]
    cc1c:	mov	w1, #0x51                  	// #81
    cc20:	mov	x0, x19
    cc24:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    cc28:	cbnz	w0, cc34 <gcc_cp_fe_context@@Base+0x3504>
    cc2c:	mov	x0, #0x0                   	// #0
    cc30:	b	cc98 <gcc_cp_fe_context@@Base+0x3568>
    cc34:	mov	x1, x22
    cc38:	mov	x0, x19
    cc3c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cc40:	cbz	w0, cc2c <gcc_cp_fe_context@@Base+0x34fc>
    cc44:	mov	x1, #0x2                   	// #2
    cc48:	mov	x0, x19
    cc4c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cc50:	cbz	w0, cc2c <gcc_cp_fe_context@@Base+0x34fc>
    cc54:	mov	x1, x21
    cc58:	mov	x0, x19
    cc5c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cc60:	cbz	w0, cc2c <gcc_cp_fe_context@@Base+0x34fc>
    cc64:	mov	x1, x20
    cc68:	mov	x0, x19
    cc6c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cc70:	cbz	w0, cc2c <gcc_cp_fe_context@@Base+0x34fc>
    cc74:	mov	w1, #0x1                   	// #1
    cc78:	mov	x0, x19
    cc7c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cc80:	cbz	w0, cc2c <gcc_cp_fe_context@@Base+0x34fc>
    cc84:	add	x1, sp, #0x38
    cc88:	mov	x0, x19
    cc8c:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    cc90:	cbz	w0, cca8 <gcc_cp_fe_context@@Base+0x3578>
    cc94:	ldr	x0, [sp, #56]
    cc98:	ldp	x19, x20, [sp, #16]
    cc9c:	ldp	x21, x22, [sp, #32]
    cca0:	ldp	x29, x30, [sp], #64
    cca4:	ret
    cca8:	mov	x0, #0x0                   	// #0
    ccac:	b	cc98 <gcc_cp_fe_context@@Base+0x3568>
    ccb0:	stp	x29, x30, [sp, #-80]!
    ccb4:	mov	x29, sp
    ccb8:	stp	x19, x20, [sp, #16]
    ccbc:	stp	x21, x22, [sp, #32]
    ccc0:	str	x23, [sp, #48]
    ccc4:	mov	w22, w1
    ccc8:	mov	x21, x2
    cccc:	mov	x20, x3
    ccd0:	ldr	x19, [x0, #16]
    ccd4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ccd8:	ldr	x0, [x0, #3264]
    ccdc:	ldr	x23, [x0]
    cce0:	mov	w1, #0x51                  	// #81
    cce4:	mov	x0, x19
    cce8:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    ccec:	cbnz	w0, ccf8 <gcc_cp_fe_context@@Base+0x35c8>
    ccf0:	mov	x0, #0x0                   	// #0
    ccf4:	b	cd6c <gcc_cp_fe_context@@Base+0x363c>
    ccf8:	mov	x1, x23
    ccfc:	mov	x0, x19
    cd00:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cd04:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd08:	mov	x1, #0x3                   	// #3
    cd0c:	mov	x0, x19
    cd10:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cd14:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd18:	sxtw	x1, w22
    cd1c:	mov	x0, x19
    cd20:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cd24:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd28:	mov	x1, x21
    cd2c:	mov	x0, x19
    cd30:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cd34:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd38:	mov	x1, x20
    cd3c:	mov	x0, x19
    cd40:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cd44:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd48:	mov	w1, #0x1                   	// #1
    cd4c:	mov	x0, x19
    cd50:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cd54:	cbz	w0, ccf0 <gcc_cp_fe_context@@Base+0x35c0>
    cd58:	add	x1, sp, #0x48
    cd5c:	mov	x0, x19
    cd60:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    cd64:	cbz	w0, cd80 <gcc_cp_fe_context@@Base+0x3650>
    cd68:	ldr	x0, [sp, #72]
    cd6c:	ldp	x19, x20, [sp, #16]
    cd70:	ldp	x21, x22, [sp, #32]
    cd74:	ldr	x23, [sp, #48]
    cd78:	ldp	x29, x30, [sp], #80
    cd7c:	ret
    cd80:	mov	x0, #0x0                   	// #0
    cd84:	b	cd6c <gcc_cp_fe_context@@Base+0x363c>
    cd88:	stp	x29, x30, [sp, #-80]!
    cd8c:	mov	x29, sp
    cd90:	stp	x19, x20, [sp, #16]
    cd94:	stp	x21, x22, [sp, #32]
    cd98:	str	x23, [sp, #48]
    cd9c:	mov	x22, x1
    cda0:	mov	x21, x2
    cda4:	mov	x20, x3
    cda8:	ldr	x19, [x0, #16]
    cdac:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    cdb0:	ldr	x0, [x0, #3392]
    cdb4:	ldr	x23, [x0]
    cdb8:	mov	w1, #0x51                  	// #81
    cdbc:	mov	x0, x19
    cdc0:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    cdc4:	cbnz	w0, cdd0 <gcc_cp_fe_context@@Base+0x36a0>
    cdc8:	mov	x0, #0x0                   	// #0
    cdcc:	b	ce44 <gcc_cp_fe_context@@Base+0x3714>
    cdd0:	mov	x1, x23
    cdd4:	mov	x0, x19
    cdd8:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cddc:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    cde0:	mov	x1, #0x3                   	// #3
    cde4:	mov	x0, x19
    cde8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cdec:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    cdf0:	mov	x1, x22
    cdf4:	mov	x0, x19
    cdf8:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cdfc:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    ce00:	mov	x1, x21
    ce04:	mov	x0, x19
    ce08:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    ce0c:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    ce10:	mov	x1, x20
    ce14:	mov	x0, x19
    ce18:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ce1c:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    ce20:	mov	w1, #0x1                   	// #1
    ce24:	mov	x0, x19
    ce28:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    ce2c:	cbz	w0, cdc8 <gcc_cp_fe_context@@Base+0x3698>
    ce30:	add	x1, sp, #0x48
    ce34:	mov	x0, x19
    ce38:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    ce3c:	cbz	w0, ce58 <gcc_cp_fe_context@@Base+0x3728>
    ce40:	ldr	x0, [sp, #72]
    ce44:	ldp	x19, x20, [sp, #16]
    ce48:	ldp	x21, x22, [sp, #32]
    ce4c:	ldr	x23, [sp, #48]
    ce50:	ldp	x29, x30, [sp], #80
    ce54:	ret
    ce58:	mov	x0, #0x0                   	// #0
    ce5c:	b	ce44 <gcc_cp_fe_context@@Base+0x3714>
    ce60:	stp	x29, x30, [sp, #-96]!
    ce64:	mov	x29, sp
    ce68:	stp	x19, x20, [sp, #16]
    ce6c:	stp	x21, x22, [sp, #32]
    ce70:	stp	x23, x24, [sp, #48]
    ce74:	str	x25, [sp, #64]
    ce78:	mov	x20, x1
    ce7c:	mov	x21, x2
    ce80:	mov	w22, w3
    ce84:	mov	x23, x4
    ce88:	mov	x24, x5
    ce8c:	ldr	x19, [x0, #16]
    ce90:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ce94:	ldr	x0, [x0, #3528]
    ce98:	ldr	x25, [x0]
    ce9c:	mov	w1, #0x51                  	// #81
    cea0:	mov	x0, x19
    cea4:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    cea8:	cbnz	w0, ceb4 <gcc_cp_fe_context@@Base+0x3784>
    ceac:	mov	x0, #0x0                   	// #0
    ceb0:	b	cf48 <gcc_cp_fe_context@@Base+0x3818>
    ceb4:	mov	x1, x25
    ceb8:	mov	x0, x19
    cebc:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cec0:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cec4:	mov	x1, #0x5                   	// #5
    cec8:	mov	x0, x19
    cecc:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    ced0:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    ced4:	mov	x1, x20
    ced8:	mov	x0, x19
    cedc:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cee0:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cee4:	mov	x1, x21
    cee8:	mov	x0, x19
    ceec:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cef0:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cef4:	mov	w1, w22
    cef8:	mov	x0, x19
    cefc:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cf00:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cf04:	mov	x1, x23
    cf08:	mov	x0, x19
    cf0c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cf10:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cf14:	mov	x1, x24
    cf18:	mov	x0, x19
    cf1c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cf20:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cf24:	mov	w1, #0x1                   	// #1
    cf28:	mov	x0, x19
    cf2c:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cf30:	cbz	w0, ceac <gcc_cp_fe_context@@Base+0x377c>
    cf34:	add	x1, sp, #0x58
    cf38:	mov	x0, x19
    cf3c:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    cf40:	cbz	w0, cf60 <gcc_cp_fe_context@@Base+0x3830>
    cf44:	ldr	x0, [sp, #88]
    cf48:	ldp	x19, x20, [sp, #16]
    cf4c:	ldp	x21, x22, [sp, #32]
    cf50:	ldp	x23, x24, [sp, #48]
    cf54:	ldr	x25, [sp, #64]
    cf58:	ldp	x29, x30, [sp], #96
    cf5c:	ret
    cf60:	mov	x0, #0x0                   	// #0
    cf64:	b	cf48 <gcc_cp_fe_context@@Base+0x3818>
    cf68:	stp	x29, x30, [sp, #-64]!
    cf6c:	mov	x29, sp
    cf70:	stp	x19, x20, [sp, #16]
    cf74:	stp	x21, x22, [sp, #32]
    cf78:	mov	x21, x1
    cf7c:	mov	x20, x2
    cf80:	ldr	x19, [x0, #16]
    cf84:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    cf88:	ldr	x0, [x0, #3824]
    cf8c:	ldr	x22, [x0]
    cf90:	mov	w1, #0x51                  	// #81
    cf94:	mov	x0, x19
    cf98:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    cf9c:	cbnz	w0, cfa8 <gcc_cp_fe_context@@Base+0x3878>
    cfa0:	mov	x0, #0x0                   	// #0
    cfa4:	b	d00c <gcc_cp_fe_context@@Base+0x38dc>
    cfa8:	mov	x1, x22
    cfac:	mov	x0, x19
    cfb0:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    cfb4:	cbz	w0, cfa0 <gcc_cp_fe_context@@Base+0x3870>
    cfb8:	mov	x1, #0x2                   	// #2
    cfbc:	mov	x0, x19
    cfc0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cfc4:	cbz	w0, cfa0 <gcc_cp_fe_context@@Base+0x3870>
    cfc8:	mov	x1, x21
    cfcc:	mov	x0, x19
    cfd0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cfd4:	cbz	w0, cfa0 <gcc_cp_fe_context@@Base+0x3870>
    cfd8:	mov	x1, x20
    cfdc:	mov	x0, x19
    cfe0:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    cfe4:	cbz	w0, cfa0 <gcc_cp_fe_context@@Base+0x3870>
    cfe8:	mov	w1, #0x1                   	// #1
    cfec:	mov	x0, x19
    cff0:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    cff4:	cbz	w0, cfa0 <gcc_cp_fe_context@@Base+0x3870>
    cff8:	add	x1, sp, #0x38
    cffc:	mov	x0, x19
    d000:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    d004:	cbz	w0, d01c <gcc_cp_fe_context@@Base+0x38ec>
    d008:	ldr	x0, [sp, #56]
    d00c:	ldp	x19, x20, [sp, #16]
    d010:	ldp	x21, x22, [sp, #32]
    d014:	ldp	x29, x30, [sp], #64
    d018:	ret
    d01c:	mov	x0, #0x0                   	// #0
    d020:	b	d00c <gcc_cp_fe_context@@Base+0x38dc>
    d024:	stp	x29, x30, [sp, #-64]!
    d028:	mov	x29, sp
    d02c:	stp	x19, x20, [sp, #16]
    d030:	stp	x21, x22, [sp, #32]
    d034:	mov	x21, x1
    d038:	mov	w20, w2
    d03c:	ldr	x19, [x0, #16]
    d040:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    d044:	ldr	x0, [x0, #4008]
    d048:	ldr	x22, [x0]
    d04c:	mov	w1, #0x51                  	// #81
    d050:	mov	x0, x19
    d054:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    d058:	cbnz	w0, d064 <gcc_cp_fe_context@@Base+0x3934>
    d05c:	mov	x0, #0x0                   	// #0
    d060:	b	d0c8 <gcc_cp_fe_context@@Base+0x3998>
    d064:	mov	x1, x22
    d068:	mov	x0, x19
    d06c:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    d070:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x392c>
    d074:	mov	x1, #0x2                   	// #2
    d078:	mov	x0, x19
    d07c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d080:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x392c>
    d084:	mov	x1, x21
    d088:	mov	x0, x19
    d08c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d090:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x392c>
    d094:	mov	w1, w20
    d098:	mov	x0, x19
    d09c:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d0a0:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x392c>
    d0a4:	mov	w1, #0x1                   	// #1
    d0a8:	mov	x0, x19
    d0ac:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    d0b0:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x392c>
    d0b4:	add	x1, sp, #0x38
    d0b8:	mov	x0, x19
    d0bc:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    d0c0:	cbz	w0, d0d8 <gcc_cp_fe_context@@Base+0x39a8>
    d0c4:	ldr	x0, [sp, #56]
    d0c8:	ldp	x19, x20, [sp, #16]
    d0cc:	ldp	x21, x22, [sp, #32]
    d0d0:	ldp	x29, x30, [sp], #64
    d0d4:	ret
    d0d8:	mov	x0, #0x0                   	// #0
    d0dc:	b	d0c8 <gcc_cp_fe_context@@Base+0x3998>
    d0e0:	stp	x29, x30, [sp, #-80]!
    d0e4:	mov	x29, sp
    d0e8:	stp	x19, x20, [sp, #16]
    d0ec:	stp	x21, x22, [sp, #32]
    d0f0:	stp	x23, x24, [sp, #48]
    d0f4:	mov	x20, x1
    d0f8:	mov	x21, x2
    d0fc:	mov	w23, w3
    d100:	mov	w22, w4
    d104:	ldr	x19, [x0, #16]
    d108:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    d10c:	ldr	x0, [x0, #3632]
    d110:	ldr	x24, [x0]
    d114:	mov	w1, #0x51                  	// #81
    d118:	mov	x0, x19
    d11c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    d120:	cbnz	w0, d12c <gcc_cp_fe_context@@Base+0x39fc>
    d124:	mov	x0, #0x0                   	// #0
    d128:	b	d1b0 <gcc_cp_fe_context@@Base+0x3a80>
    d12c:	mov	x1, x24
    d130:	mov	x0, x19
    d134:	bl	d700 <gcc_cp_fe_context@@Base+0x3fd0>
    d138:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d13c:	mov	x1, #0x4                   	// #4
    d140:	mov	x0, x19
    d144:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d148:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d14c:	mov	x1, x20
    d150:	mov	x0, x19
    d154:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d158:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d15c:	mov	x1, x21
    d160:	mov	x0, x19
    d164:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d168:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d16c:	mov	w1, w23
    d170:	mov	x0, x19
    d174:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d178:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d17c:	mov	w1, w22
    d180:	mov	x0, x19
    d184:	bl	d644 <gcc_cp_fe_context@@Base+0x3f14>
    d188:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d18c:	mov	w1, #0x1                   	// #1
    d190:	mov	x0, x19
    d194:	bl	d408 <gcc_cp_fe_context@@Base+0x3cd8>
    d198:	cbz	w0, d124 <gcc_cp_fe_context@@Base+0x39f4>
    d19c:	add	x1, sp, #0x48
    d1a0:	mov	x0, x19
    d1a4:	bl	7694 <gcc_c_fe_context@@Base+0x11d4>
    d1a8:	cbz	w0, d1c4 <gcc_cp_fe_context@@Base+0x3a94>
    d1ac:	ldr	x0, [sp, #72]
    d1b0:	ldp	x19, x20, [sp, #16]
    d1b4:	ldp	x21, x22, [sp, #32]
    d1b8:	ldp	x23, x24, [sp, #48]
    d1bc:	ldp	x29, x30, [sp], #80
    d1c0:	ret
    d1c4:	mov	x0, #0x0                   	// #0
    d1c8:	b	d1b0 <gcc_cp_fe_context@@Base+0x3a80>
    d1cc:	stp	x29, x30, [sp, #-16]!
    d1d0:	mov	x29, sp
    d1d4:	ldr	x1, [x1]
    d1d8:	ldr	x0, [x0]
    d1dc:	bl	56c0 <strcmp@plt>
    d1e0:	cmp	w0, #0x0
    d1e4:	cset	w0, eq  // eq = none
    d1e8:	ldp	x29, x30, [sp], #16
    d1ec:	ret
    d1f0:	stp	x29, x30, [sp, #-16]!
    d1f4:	mov	x29, sp
    d1f8:	ldr	x0, [x0]
    d1fc:	bl	5530 <htab_hash_string@plt>
    d200:	ldp	x29, x30, [sp], #16
    d204:	ret
    d208:	stp	x29, x30, [sp, #-32]!
    d20c:	mov	x29, sp
    d210:	str	x19, [sp, #16]
    d214:	mov	x19, x0
    d218:	adrp	x3, 2a000 <xexit@@Base+0x14c24>
    d21c:	ldr	x3, [x3, #3376]
    d220:	mov	x5, x3
    d224:	adrp	x4, 2a000 <xexit@@Base+0x14c24>
    d228:	ldr	x4, [x4, #3872]
    d22c:	adrp	x2, d000 <gcc_cp_fe_context@@Base+0x38d0>
    d230:	add	x2, x2, #0x1cc
    d234:	adrp	x1, d000 <gcc_cp_fe_context@@Base+0x38d0>
    d238:	add	x1, x1, #0x1f0
    d23c:	mov	x0, #0xa                   	// #10
    d240:	bl	53d0 <htab_create_alloc@plt>
    d244:	str	x0, [x19]
    d248:	ldr	x19, [sp, #16]
    d24c:	ldp	x29, x30, [sp], #32
    d250:	ret
    d254:	stp	x29, x30, [sp, #-16]!
    d258:	mov	x29, sp
    d25c:	ldr	x0, [x0]
    d260:	bl	57d0 <htab_delete@plt>
    d264:	ldp	x29, x30, [sp], #16
    d268:	ret
    d26c:	stp	x29, x30, [sp, #-48]!
    d270:	mov	x29, sp
    d274:	str	x19, [sp, #16]
    d278:	str	x1, [sp, #32]
    d27c:	str	x2, [sp, #40]
    d280:	mov	w2, #0x1                   	// #1
    d284:	add	x1, sp, #0x20
    d288:	ldr	x0, [x0]
    d28c:	bl	5600 <htab_find_slot@plt>
    d290:	mov	x19, x0
    d294:	mov	x0, #0x10                  	// #16
    d298:	bl	5670 <xmalloc@plt>
    d29c:	str	x0, [x19]
    d2a0:	ldp	x2, x3, [sp, #32]
    d2a4:	stp	x2, x3, [x0]
    d2a8:	ldr	x19, [sp, #16]
    d2ac:	ldp	x29, x30, [sp], #48
    d2b0:	ret
    d2b4:	stp	x29, x30, [sp, #-32]!
    d2b8:	mov	x29, sp
    d2bc:	str	x1, [sp, #16]
    d2c0:	add	x1, sp, #0x10
    d2c4:	ldr	x0, [x0]
    d2c8:	bl	54e0 <htab_find@plt>
    d2cc:	cbz	x0, d2dc <gcc_cp_fe_context@@Base+0x3bac>
    d2d0:	ldr	x0, [x0, #8]
    d2d4:	ldp	x29, x30, [sp], #32
    d2d8:	ret
    d2dc:	mov	x0, #0x0                   	// #0
    d2e0:	b	d2d4 <gcc_cp_fe_context@@Base+0x3ba4>
    d2e4:	ret
    d2e8:	stp	x29, x30, [sp, #-16]!
    d2ec:	mov	x29, sp
    d2f0:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    d2f4:	add	x1, x1, #0x8e8
    d2f8:	str	x1, [x0], #16
    d2fc:	bl	d254 <gcc_cp_fe_context@@Base+0x3b24>
    d300:	ldp	x29, x30, [sp], #16
    d304:	ret
    d308:	stp	x29, x30, [sp, #-32]!
    d30c:	mov	x29, sp
    d310:	str	x19, [sp, #16]
    d314:	mov	x19, x0
    d318:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3bb8>
    d31c:	mov	x1, #0x18                  	// #24
    d320:	mov	x0, x19
    d324:	bl	5560 <_ZdlPvm@plt>
    d328:	ldr	x19, [sp, #16]
    d32c:	ldp	x29, x30, [sp], #32
    d330:	ret
    d334:	stp	x29, x30, [sp, #-32]!
    d338:	mov	x29, sp
    d33c:	strb	w1, [sp, #31]
    d340:	mov	x2, #0x1                   	// #1
    d344:	add	x1, sp, #0x1f
    d348:	ldr	w0, [x0, #8]
    d34c:	bl	56f0 <write@plt>
    d350:	cmp	x0, #0x1
    d354:	cset	w0, eq  // eq = none
    d358:	ldp	x29, x30, [sp], #32
    d35c:	ret
    d360:	stp	x29, x30, [sp, #-32]!
    d364:	mov	x29, sp
    d368:	str	x19, [sp, #16]
    d36c:	sxtw	x19, w2
    d370:	mov	x2, x19
    d374:	ldr	w0, [x0, #8]
    d378:	bl	56f0 <write@plt>
    d37c:	cmp	x19, x0
    d380:	cset	w0, eq  // eq = none
    d384:	ldr	x19, [sp, #16]
    d388:	ldp	x29, x30, [sp], #32
    d38c:	ret
    d390:	stp	x29, x30, [sp, #-48]!
    d394:	mov	x29, sp
    d398:	str	x19, [sp, #16]
    d39c:	and	w19, w1, #0xff
    d3a0:	mov	x2, #0x1                   	// #1
    d3a4:	add	x1, sp, #0x2f
    d3a8:	ldr	w0, [x0, #8]
    d3ac:	bl	54c0 <read@plt>
    d3b0:	cmp	x0, #0x1
    d3b4:	b.ne	d3d0 <gcc_cp_fe_context@@Base+0x3ca0>  // b.any
    d3b8:	ldrb	w0, [sp, #47]
    d3bc:	cmp	w0, w19
    d3c0:	cset	w0, eq  // eq = none
    d3c4:	ldr	x19, [sp, #16]
    d3c8:	ldp	x29, x30, [sp], #48
    d3cc:	ret
    d3d0:	mov	w0, #0x0                   	// #0
    d3d4:	b	d3c4 <gcc_cp_fe_context@@Base+0x3c94>
    d3d8:	stp	x29, x30, [sp, #-32]!
    d3dc:	mov	x29, sp
    d3e0:	str	x19, [sp, #16]
    d3e4:	sxtw	x19, w2
    d3e8:	mov	x2, x19
    d3ec:	ldr	w0, [x0, #8]
    d3f0:	bl	54c0 <read@plt>
    d3f4:	cmp	x19, x0
    d3f8:	cset	w0, eq  // eq = none
    d3fc:	ldr	x19, [sp, #16]
    d400:	ldp	x29, x30, [sp], #32
    d404:	ret
    d408:	sub	sp, sp, #0x4e0
    d40c:	stp	x29, x30, [sp]
    d410:	mov	x29, sp
    d414:	stp	x19, x20, [sp, #16]
    d418:	stp	x21, x22, [sp, #32]
    d41c:	stp	x23, x24, [sp, #48]
    d420:	str	x25, [sp, #64]
    d424:	mov	x20, x0
    d428:	and	w22, w1, #0xff
    d42c:	add	x19, sp, #0x60
    d430:	mov	x21, #0x1                   	// #1
    d434:	mov	w23, #0x400                 	// #1024
    d438:	add	x25, sp, #0x5f
    d43c:	add	x24, sp, #0xe0
    d440:	b	d4b0 <gcc_cp_fe_context@@Base+0x3d80>
    d444:	bl	5620 <__errno_location@plt>
    d448:	ldr	w0, [x0]
    d44c:	cmp	w0, #0x4
    d450:	b.eq	d4b0 <gcc_cp_fe_context@@Base+0x3d80>  // b.none
    d454:	mov	w0, #0x0                   	// #0
    d458:	ldp	x19, x20, [sp, #16]
    d45c:	ldp	x21, x22, [sp, #32]
    d460:	ldp	x23, x24, [sp, #48]
    d464:	ldr	x25, [sp, #64]
    d468:	ldp	x29, x30, [sp]
    d46c:	add	sp, sp, #0x4e0
    d470:	ret
    d474:	mov	w0, #0x0                   	// #0
    d478:	b	d458 <gcc_cp_fe_context@@Base+0x3d28>
    d47c:	ldr	w0, [x20, #8]
    d480:	add	w2, w0, #0x3f
    d484:	cmp	w0, #0x0
    d488:	csel	w2, w2, w0, lt  // lt = tstop
    d48c:	asr	w2, w2, #6
    d490:	negs	w1, w0
    d494:	and	w3, w0, #0x3f
    d498:	and	w1, w1, #0x3f
    d49c:	csneg	w1, w3, w1, mi  // mi = first
    d4a0:	lsl	x1, x21, x1
    d4a4:	ldr	x2, [x19, w2, sxtw #3]
    d4a8:	tst	x1, x2
    d4ac:	b.ne	d5cc <gcc_cp_fe_context@@Base+0x3e9c>  // b.any
    d4b0:	add	x1, sp, #0x60
    d4b4:	add	x2, x1, #0x80
    d4b8:	str	xzr, [x1], #8
    d4bc:	cmp	x1, x2
    d4c0:	b.ne	d4b8 <gcc_cp_fe_context@@Base+0x3d88>  // b.any
    d4c4:	ldr	w2, [x20, #8]
    d4c8:	add	w0, w2, #0x3f
    d4cc:	cmp	w2, #0x0
    d4d0:	csel	w0, w0, w2, lt  // lt = tstop
    d4d4:	asr	w0, w0, #6
    d4d8:	sxtw	x0, w0
    d4dc:	negs	w1, w2
    d4e0:	and	w2, w2, #0x3f
    d4e4:	and	w1, w1, #0x3f
    d4e8:	csneg	w1, w2, w1, mi  // mi = first
    d4ec:	lsl	x1, x21, x1
    d4f0:	ldr	x2, [x19, x0, lsl #3]
    d4f4:	orr	x1, x1, x2
    d4f8:	str	x1, [x19, x0, lsl #3]
    d4fc:	ldr	w0, [x20, #12]
    d500:	cmn	w0, #0x1
    d504:	b.eq	d53c <gcc_cp_fe_context@@Base+0x3e0c>  // b.none
    d508:	add	w2, w0, #0x3f
    d50c:	cmp	w0, #0x0
    d510:	csel	w2, w2, w0, lt  // lt = tstop
    d514:	asr	w2, w2, #6
    d518:	sxtw	x2, w2
    d51c:	negs	w1, w0
    d520:	and	w0, w0, #0x3f
    d524:	and	w1, w1, #0x3f
    d528:	csneg	w0, w0, w1, mi  // mi = first
    d52c:	lsl	x0, x21, x0
    d530:	ldr	x1, [x19, x2, lsl #3]
    d534:	orr	x0, x0, x1
    d538:	str	x0, [x19, x2, lsl #3]
    d53c:	mov	x4, #0x0                   	// #0
    d540:	mov	x3, #0x0                   	// #0
    d544:	mov	x2, #0x0                   	// #0
    d548:	mov	x1, x19
    d54c:	mov	w0, w23
    d550:	bl	52c0 <select@plt>
    d554:	cmn	w0, #0x1
    d558:	b.eq	d444 <gcc_cp_fe_context@@Base+0x3d14>  // b.none
    d55c:	ldr	w0, [x20, #12]
    d560:	cmn	w0, #0x1
    d564:	b.eq	d47c <gcc_cp_fe_context@@Base+0x3d4c>  // b.none
    d568:	add	w3, w0, #0x3f
    d56c:	cmp	w0, #0x0
    d570:	csel	w3, w3, w0, lt  // lt = tstop
    d574:	asr	w3, w3, #6
    d578:	negs	w2, w0
    d57c:	and	w1, w0, #0x3f
    d580:	and	w2, w2, #0x3f
    d584:	csneg	w1, w1, w2, mi  // mi = first
    d588:	lsl	x1, x21, x1
    d58c:	ldr	x2, [x19, w3, sxtw #3]
    d590:	tst	x1, x2
    d594:	b.eq	d47c <gcc_cp_fe_context@@Base+0x3d4c>  // b.none
    d598:	mov	x2, #0x3ff                 	// #1023
    d59c:	mov	x1, x24
    d5a0:	bl	54c0 <read@plt>
    d5a4:	tbnz	w0, #31, d474 <gcc_cp_fe_context@@Base+0x3d44>
    d5a8:	cmp	w0, #0x0
    d5ac:	b.le	d47c <gcc_cp_fe_context@@Base+0x3d4c>
    d5b0:	strb	wzr, [x24, w0, sxtw]
    d5b4:	ldr	x0, [x20]
    d5b8:	ldr	x2, [x0, #16]
    d5bc:	mov	x1, x24
    d5c0:	mov	x0, x20
    d5c4:	blr	x2
    d5c8:	b	d47c <gcc_cp_fe_context@@Base+0x3d4c>
    d5cc:	mov	x2, x21
    d5d0:	mov	x1, x25
    d5d4:	bl	54c0 <read@plt>
    d5d8:	cbz	w0, d5fc <gcc_cp_fe_context@@Base+0x3ecc>
    d5dc:	cmp	w0, #0x1
    d5e0:	b.ne	d63c <gcc_cp_fe_context@@Base+0x3f0c>  // b.any
    d5e4:	ldrb	w0, [sp, #95]
    d5e8:	cmp	w0, #0x51
    d5ec:	b.eq	d604 <gcc_cp_fe_context@@Base+0x3ed4>  // b.none
    d5f0:	cmp	w0, #0x52
    d5f4:	csel	w0, w22, wzr, eq  // eq = none
    d5f8:	b	d458 <gcc_cp_fe_context@@Base+0x3d28>
    d5fc:	eor	w0, w22, #0x1
    d600:	b	d458 <gcc_cp_fe_context@@Base+0x3d28>
    d604:	mov	x1, x24
    d608:	mov	x0, x20
    d60c:	bl	d784 <gcc_cp_fe_context@@Base+0x4054>
    d610:	cbz	w0, d634 <gcc_cp_fe_context@@Base+0x3f04>
    d614:	ldr	x1, [sp, #224]
    d618:	add	x0, x20, #0x10
    d61c:	bl	d2b4 <gcc_cp_fe_context@@Base+0x3b84>
    d620:	mov	x1, x0
    d624:	cbz	x0, d634 <gcc_cp_fe_context@@Base+0x3f04>
    d628:	mov	x0, x20
    d62c:	blr	x1
    d630:	cbnz	w0, d4b0 <gcc_cp_fe_context@@Base+0x3d80>
    d634:	mov	w0, #0x0                   	// #0
    d638:	b	d458 <gcc_cp_fe_context@@Base+0x3d28>
    d63c:	mov	w0, #0x0                   	// #0
    d640:	b	d458 <gcc_cp_fe_context@@Base+0x3d28>
    d644:	stp	x29, x30, [sp, #-48]!
    d648:	mov	x29, sp
    d64c:	str	x19, [sp, #16]
    d650:	mov	x19, x0
    d654:	str	x1, [sp, #40]
    d658:	mov	w1, #0x69                  	// #105
    d65c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    d660:	cbnz	w0, d670 <gcc_cp_fe_context@@Base+0x3f40>
    d664:	ldr	x19, [sp, #16]
    d668:	ldp	x29, x30, [sp], #48
    d66c:	ret
    d670:	mov	w2, #0x8                   	// #8
    d674:	add	x1, sp, #0x28
    d678:	mov	x0, x19
    d67c:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d680:	b	d664 <gcc_cp_fe_context@@Base+0x3f34>
    d684:	stp	x29, x30, [sp, #-32]!
    d688:	mov	x29, sp
    d68c:	stp	x19, x20, [sp, #16]
    d690:	mov	x19, x0
    d694:	mov	x20, x1
    d698:	mov	w1, #0x69                  	// #105
    d69c:	bl	d390 <gcc_cp_fe_context@@Base+0x3c60>
    d6a0:	cbnz	w0, d6b0 <gcc_cp_fe_context@@Base+0x3f80>
    d6a4:	ldp	x19, x20, [sp, #16]
    d6a8:	ldp	x29, x30, [sp], #32
    d6ac:	ret
    d6b0:	mov	w2, #0x8                   	// #8
    d6b4:	mov	x1, x20
    d6b8:	mov	x0, x19
    d6bc:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    d6c0:	b	d6a4 <gcc_cp_fe_context@@Base+0x3f74>
    d6c4:	stp	x29, x30, [sp, #-48]!
    d6c8:	mov	x29, sp
    d6cc:	stp	x19, x20, [sp, #16]
    d6d0:	mov	x19, x1
    d6d4:	add	x1, sp, #0x28
    d6d8:	bl	d684 <gcc_cp_fe_context@@Base+0x3f54>
    d6dc:	cbz	w0, d6e8 <gcc_cp_fe_context@@Base+0x3fb8>
    d6e0:	ldr	x20, [sp, #40]
    d6e4:	mov	w0, #0x1                   	// #1
    d6e8:	cmp	w0, #0x0
    d6ec:	ccmp	x19, x20, #0x0, ne  // ne = any
    d6f0:	cset	w0, eq  // eq = none
    d6f4:	ldp	x19, x20, [sp, #16]
    d6f8:	ldp	x29, x30, [sp], #48
    d6fc:	ret
    d700:	stp	x29, x30, [sp, #-48]!
    d704:	mov	x29, sp
    d708:	stp	x19, x20, [sp, #16]
    d70c:	mov	x20, x0
    d710:	mov	x19, x1
    d714:	mov	w1, #0x73                  	// #115
    d718:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    d71c:	cbz	w0, d754 <gcc_cp_fe_context@@Base+0x4024>
    d720:	cbz	x19, d760 <gcc_cp_fe_context@@Base+0x4030>
    d724:	mov	x0, x19
    d728:	bl	5360 <strlen@plt>
    d72c:	str	x0, [sp, #40]
    d730:	mov	w2, #0x8                   	// #8
    d734:	add	x1, sp, #0x28
    d738:	mov	x0, x20
    d73c:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d740:	cbz	w0, d754 <gcc_cp_fe_context@@Base+0x4024>
    d744:	ldr	w2, [sp, #40]
    d748:	mov	x1, x19
    d74c:	mov	x0, x20
    d750:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d754:	ldp	x19, x20, [sp, #16]
    d758:	ldp	x29, x30, [sp], #48
    d75c:	ret
    d760:	mov	x0, #0xffffffffffffffff    	// #-1
    d764:	str	x0, [sp, #40]
    d768:	mov	w2, #0x8                   	// #8
    d76c:	add	x1, sp, #0x28
    d770:	mov	x0, x20
    d774:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d778:	cmp	w0, #0x0
    d77c:	cset	w0, ne  // ne = any
    d780:	b	d754 <gcc_cp_fe_context@@Base+0x4024>
    d784:	stp	x29, x30, [sp, #-64]!
    d788:	mov	x29, sp
    d78c:	stp	x19, x20, [sp, #16]
    d790:	stp	x21, x22, [sp, #32]
    d794:	mov	x20, x0
    d798:	mov	x21, x1
    d79c:	mov	w1, #0x73                  	// #115
    d7a0:	bl	d390 <gcc_cp_fe_context@@Base+0x3c60>
    d7a4:	mov	w19, w0
    d7a8:	cbnz	w0, d7c0 <gcc_cp_fe_context@@Base+0x4090>
    d7ac:	mov	w0, w19
    d7b0:	ldp	x19, x20, [sp, #16]
    d7b4:	ldp	x21, x22, [sp, #32]
    d7b8:	ldp	x29, x30, [sp], #64
    d7bc:	ret
    d7c0:	mov	w2, #0x8                   	// #8
    d7c4:	add	x1, sp, #0x38
    d7c8:	mov	x0, x20
    d7cc:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    d7d0:	mov	w19, w0
    d7d4:	cbz	w0, d7ac <gcc_cp_fe_context@@Base+0x407c>
    d7d8:	ldr	x0, [sp, #56]
    d7dc:	cmn	x0, #0x1
    d7e0:	b.eq	d828 <gcc_cp_fe_context@@Base+0x40f8>  // b.none
    d7e4:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    d7e8:	ldr	x1, [x1, #3256]
    d7ec:	add	x0, x0, #0x1
    d7f0:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    d7f4:	mov	x22, x0
    d7f8:	cbz	x0, d840 <gcc_cp_fe_context@@Base+0x4110>
    d7fc:	ldr	w2, [sp, #56]
    d800:	mov	x1, x0
    d804:	mov	x0, x20
    d808:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    d80c:	mov	w19, w0
    d810:	cbz	w0, d834 <gcc_cp_fe_context@@Base+0x4104>
    d814:	ldr	x0, [sp, #56]
    d818:	strb	wzr, [x22, x0]
    d81c:	str	x22, [x21]
    d820:	mov	w19, #0x1                   	// #1
    d824:	b	d7ac <gcc_cp_fe_context@@Base+0x407c>
    d828:	str	xzr, [x21]
    d82c:	mov	w19, #0x1                   	// #1
    d830:	b	d7ac <gcc_cp_fe_context@@Base+0x407c>
    d834:	mov	x0, x22
    d838:	bl	5610 <_ZdaPv@plt>
    d83c:	b	d7ac <gcc_cp_fe_context@@Base+0x407c>
    d840:	mov	w19, #0x0                   	// #0
    d844:	b	d7ac <gcc_cp_fe_context@@Base+0x407c>
    d848:	stp	x29, x30, [sp, #-48]!
    d84c:	mov	x29, sp
    d850:	stp	x19, x20, [sp, #16]
    d854:	mov	x19, x0
    d858:	mov	x20, x2
    d85c:	bl	d334 <gcc_cp_fe_context@@Base+0x3c04>
    d860:	cbnz	w0, d870 <gcc_cp_fe_context@@Base+0x4140>
    d864:	ldp	x19, x20, [sp, #16]
    d868:	ldp	x29, x30, [sp], #48
    d86c:	ret
    d870:	str	x20, [sp, #40]
    d874:	mov	w2, #0x8                   	// #8
    d878:	add	x1, sp, #0x28
    d87c:	mov	x0, x19
    d880:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d884:	cmp	w0, #0x0
    d888:	cset	w0, ne  // ne = any
    d88c:	b	d864 <gcc_cp_fe_context@@Base+0x4134>
    d890:	stp	x29, x30, [sp, #-16]!
    d894:	mov	x29, sp
    d898:	mov	x3, x1
    d89c:	mov	x1, x2
    d8a0:	mov	w2, w3
    d8a4:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d8a8:	ldp	x29, x30, [sp], #16
    d8ac:	ret
    d8b0:	stp	x29, x30, [sp, #-48]!
    d8b4:	mov	x29, sp
    d8b8:	stp	x19, x20, [sp, #16]
    d8bc:	mov	x19, x0
    d8c0:	mov	x20, x2
    d8c4:	bl	d390 <gcc_cp_fe_context@@Base+0x3c60>
    d8c8:	cbnz	w0, d8d8 <gcc_cp_fe_context@@Base+0x41a8>
    d8cc:	ldp	x19, x20, [sp, #16]
    d8d0:	ldp	x29, x30, [sp], #48
    d8d4:	ret
    d8d8:	mov	w2, #0x8                   	// #8
    d8dc:	add	x1, sp, #0x28
    d8e0:	mov	x0, x19
    d8e4:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    d8e8:	cbz	w0, d8cc <gcc_cp_fe_context@@Base+0x419c>
    d8ec:	ldr	x0, [sp, #40]
    d8f0:	str	x0, [x20]
    d8f4:	mov	w0, #0x1                   	// #1
    d8f8:	b	d8cc <gcc_cp_fe_context@@Base+0x419c>
    d8fc:	stp	x29, x30, [sp, #-16]!
    d900:	mov	x29, sp
    d904:	mov	x3, x1
    d908:	mov	x1, x2
    d90c:	mov	w2, w3
    d910:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    d914:	ldp	x29, x30, [sp], #16
    d918:	ret
    d91c:	stp	x29, x30, [sp, #-48]!
    d920:	mov	x29, sp
    d924:	stp	x19, x20, [sp, #16]
    d928:	mov	x20, x0
    d92c:	cbz	x1, d974 <gcc_cp_fe_context@@Base+0x4244>
    d930:	str	x21, [sp, #32]
    d934:	mov	x19, x1
    d938:	ldrsw	x21, [x1]
    d93c:	mov	x2, x21
    d940:	mov	w1, #0x61                  	// #97
    d944:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    d948:	cbz	w0, d96c <gcc_cp_fe_context@@Base+0x423c>
    d94c:	lsl	w2, w21, #3
    d950:	ldr	x1, [x19, #8]
    d954:	mov	x0, x20
    d958:	bl	d360 <gcc_cp_fe_context@@Base+0x3c30>
    d95c:	ldr	x21, [sp, #32]
    d960:	ldp	x19, x20, [sp, #16]
    d964:	ldp	x29, x30, [sp], #48
    d968:	ret
    d96c:	ldr	x21, [sp, #32]
    d970:	b	d960 <gcc_cp_fe_context@@Base+0x4230>
    d974:	mov	x2, #0xffffffffffffffff    	// #-1
    d978:	mov	w1, #0x61                  	// #97
    d97c:	bl	d848 <gcc_cp_fe_context@@Base+0x4118>
    d980:	cmp	w0, #0x0
    d984:	cset	w0, ne  // ne = any
    d988:	b	d960 <gcc_cp_fe_context@@Base+0x4230>
    d98c:	stp	x29, x30, [sp, #-64]!
    d990:	mov	x29, sp
    d994:	stp	x19, x20, [sp, #16]
    d998:	stp	x21, x22, [sp, #32]
    d99c:	mov	x22, x0
    d9a0:	mov	x21, x1
    d9a4:	add	x2, sp, #0x38
    d9a8:	mov	w1, #0x61                  	// #97
    d9ac:	bl	d8b0 <gcc_cp_fe_context@@Base+0x4180>
    d9b0:	mov	w19, w0
    d9b4:	cbz	w0, da14 <gcc_cp_fe_context@@Base+0x42e4>
    d9b8:	ldr	x0, [sp, #56]
    d9bc:	cmn	x0, #0x1
    d9c0:	b.eq	da28 <gcc_cp_fe_context@@Base+0x42f8>  // b.none
    d9c4:	mov	x0, #0x10                  	// #16
    d9c8:	bl	5550 <_Znwm@plt>
    d9cc:	mov	x20, x0
    d9d0:	ldr	x0, [sp, #56]
    d9d4:	str	w0, [x20]
    d9d8:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    d9dc:	cmp	x0, x1
    d9e0:	b.hi	da34 <gcc_cp_fe_context@@Base+0x4304>  // b.pmore
    d9e4:	lsl	x0, x0, #3
    d9e8:	bl	52a0 <_Znam@plt>
    d9ec:	mov	x1, x0
    d9f0:	str	x0, [x20, #8]
    d9f4:	ldr	x2, [sp, #56]
    d9f8:	lsl	w2, w2, #3
    d9fc:	mov	x0, x22
    da00:	bl	d3d8 <gcc_cp_fe_context@@Base+0x3ca8>
    da04:	mov	w19, w0
    da08:	cbz	w0, da38 <gcc_cp_fe_context@@Base+0x4308>
    da0c:	str	x20, [x21]
    da10:	mov	w19, #0x1                   	// #1
    da14:	mov	w0, w19
    da18:	ldp	x19, x20, [sp, #16]
    da1c:	ldp	x21, x22, [sp, #32]
    da20:	ldp	x29, x30, [sp], #64
    da24:	ret
    da28:	str	xzr, [x21]
    da2c:	mov	w19, #0x1                   	// #1
    da30:	b	da14 <gcc_cp_fe_context@@Base+0x42e4>
    da34:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    da38:	ldr	x0, [x20, #8]
    da3c:	cbz	x0, da44 <gcc_cp_fe_context@@Base+0x4314>
    da40:	bl	5610 <_ZdaPv@plt>
    da44:	ldr	x0, [x21]
    da48:	cbz	x0, da14 <gcc_cp_fe_context@@Base+0x42e4>
    da4c:	mov	x1, #0x10                  	// #16
    da50:	bl	5560 <_ZdlPvm@plt>
    da54:	b	da14 <gcc_cp_fe_context@@Base+0x42e4>
    da58:	add	x4, x3, #0x3
    da5c:	cmp	x3, x1
    da60:	b.eq	da7c <gcc_cp_fe_context@@Base+0x434c>  // b.none
    da64:	add	x5, x1, #0x3
    da68:	sub	x4, x4, #0x1
    da6c:	ldurb	w3, [x4, #-3]
    da70:	strb	w3, [x4]
    da74:	cmp	x5, x4
    da78:	b.ne	da68 <gcc_cp_fe_context@@Base+0x4338>  // b.any
    da7c:	strb	w0, [x1]
    da80:	strb	w2, [x1, #1]
    da84:	asr	w2, w2, #8
    da88:	strb	w2, [x1, #2]
    da8c:	ret
    da90:	add	x5, x4, #0x5
    da94:	cmp	x4, x1
    da98:	b.eq	dab4 <gcc_cp_fe_context@@Base+0x4384>  // b.none
    da9c:	add	x6, x1, #0x5
    daa0:	sub	x5, x5, #0x1
    daa4:	ldurb	w4, [x5, #-5]
    daa8:	strb	w4, [x5]
    daac:	cmp	x6, x5
    dab0:	b.ne	daa0 <gcc_cp_fe_context@@Base+0x4370>  // b.any
    dab4:	strb	w0, [x1]
    dab8:	strb	w2, [x1, #1]
    dabc:	asr	w2, w2, #8
    dac0:	strb	w2, [x1, #2]
    dac4:	strb	w3, [x1, #3]
    dac8:	asr	w3, w3, #8
    dacc:	strb	w3, [x1, #4]
    dad0:	ret
    dad4:	mov	w6, w0
    dad8:	ldr	x7, [x1]
    dadc:	cmp	x7, x2
    dae0:	b.eq	db8c <gcc_cp_fe_context@@Base+0x445c>  // b.none
    dae4:	add	x0, x7, #0x1
    dae8:	str	x0, [x1]
    daec:	tst	x4, #0x10000
    daf0:	mov	w0, #0xb                   	// #11
    daf4:	csel	w0, w0, wzr, ne  // ne = any
    daf8:	cbz	x3, db1c <gcc_cp_fe_context@@Base+0x43ec>
    dafc:	and	x1, x6, #0xff
    db00:	ldrb	w1, [x3, x1]
    db04:	ldrb	w2, [x7]
    db08:	ldrb	w6, [x3, x2]
    db0c:	cmp	w6, w1
    db10:	b.cc	db88 <gcc_cp_fe_context@@Base+0x4458>  // b.lo, b.ul, b.last
    db14:	mov	w7, #0x1                   	// #1
    db18:	b	db58 <gcc_cp_fe_context@@Base+0x4428>
    db1c:	and	w1, w6, #0xff
    db20:	ldrb	w6, [x7]
    db24:	b	db0c <gcc_cp_fe_context@@Base+0x43dc>
    db28:	ubfx	x0, x1, #3, #5
    db2c:	add	x2, x5, x0
    db30:	ldrsb	w4, [x5, w0, sxtw]
    db34:	and	w0, w1, #0x7
    db38:	lsl	w0, w7, w0
    db3c:	sxtb	w0, w0
    db40:	orr	w0, w0, w4
    db44:	strb	w0, [x2]
    db48:	add	w0, w1, #0x1
    db4c:	cmp	w6, w1
    db50:	b.eq	db84 <gcc_cp_fe_context@@Base+0x4454>  // b.none
    db54:	mov	w1, w0
    db58:	cbz	x3, db28 <gcc_cp_fe_context@@Base+0x43f8>
    db5c:	and	x0, x1, #0xff
    db60:	ldrb	w0, [x3, x0]
    db64:	asr	w4, w0, #3
    db68:	ubfx	x2, x0, #3, #5
    db6c:	add	x2, x5, x2
    db70:	ldrsb	w4, [x5, w4, sxtw]
    db74:	and	w0, w0, #0x7
    db78:	lsl	w0, w7, w0
    db7c:	sxtb	w0, w0
    db80:	b	db40 <gcc_cp_fe_context@@Base+0x4410>
    db84:	mov	w0, #0x0                   	// #0
    db88:	ret
    db8c:	mov	w0, #0xb                   	// #11
    db90:	b	db88 <gcc_cp_fe_context@@Base+0x4458>
    db94:	stp	x29, x30, [sp, #-64]!
    db98:	mov	x29, sp
    db9c:	stp	x19, x20, [sp, #16]
    dba0:	mov	x19, x0
    dba4:	ldr	x4, [x0]
    dba8:	add	x5, x4, #0x1
    dbac:	str	x5, [sp, #56]
    dbb0:	ldrb	w3, [x4]
    dbb4:	cmp	w3, #0xc
    dbb8:	b.hi	dbfc <gcc_cp_fe_context@@Base+0x44cc>  // b.pmore
    dbbc:	mov	x20, x2
    dbc0:	cmp	w3, #0x8
    dbc4:	b.hi	dc1c <gcc_cp_fe_context@@Base+0x44ec>  // b.pmore
    dbc8:	cmp	w3, #0x6
    dbcc:	b.eq	dc64 <gcc_cp_fe_context@@Base+0x4534>  // b.none
    dbd0:	cmp	w3, #0x8
    dbd4:	b.ne	dbf0 <gcc_cp_fe_context@@Base+0x44c0>  // b.any
    dbd8:	ldrb	w0, [x4, #1]
    dbdc:	lsl	x0, x0, #3
    dbe0:	ldrb	w1, [x2, x0]
    dbe4:	ands	w0, w1, #0x3
    dbe8:	b.ne	dc1c <gcc_cp_fe_context@@Base+0x44ec>  // b.any
    dbec:	b	dc28 <gcc_cp_fe_context@@Base+0x44f8>
    dbf0:	mov	w0, #0x0                   	// #0
    dbf4:	cbnz	w3, dc28 <gcc_cp_fe_context@@Base+0x44f8>
    dbf8:	b	dc1c <gcc_cp_fe_context@@Base+0x44ec>
    dbfc:	cmp	w3, #0x15
    dc00:	b.eq	dcb0 <gcc_cp_fe_context@@Base+0x4580>  // b.none
    dc04:	b.ls	dc34 <gcc_cp_fe_context@@Base+0x4504>  // b.plast
    dc08:	sub	w3, w3, #0x1a
    dc0c:	and	w3, w3, #0xff
    dc10:	mov	w0, #0x0                   	// #0
    dc14:	cmp	w3, #0x3
    dc18:	b.hi	dc28 <gcc_cp_fe_context@@Base+0x44f8>  // b.pmore
    dc1c:	ldr	x0, [sp, #56]
    dc20:	str	x0, [x19]
    dc24:	mov	w0, #0x1                   	// #1
    dc28:	ldp	x19, x20, [sp, #16]
    dc2c:	ldp	x29, x30, [sp], #64
    dc30:	ret
    dc34:	mov	w0, #0x0                   	// #0
    dc38:	cmp	w3, #0xd
    dc3c:	b.ne	dc28 <gcc_cp_fe_context@@Base+0x44f8>  // b.any
    dc40:	ldrsb	w1, [x4, #2]
    dc44:	ldrb	w2, [x4, #1]
    dc48:	mov	w0, #0x0                   	// #0
    dc4c:	adds	w1, w2, w1, lsl #8
    dc50:	b.mi	dc28 <gcc_cp_fe_context@@Base+0x44f8>  // b.first
    dc54:	add	x4, x4, #0x3
    dc58:	add	x4, x4, w1, sxtw
    dc5c:	str	x4, [sp, #56]
    dc60:	b	dc1c <gcc_cp_fe_context@@Base+0x44ec>
    dc64:	str	x21, [sp, #32]
    dc68:	ldrb	w21, [x4, #1]
    dc6c:	add	x0, sp, #0x38
    dc70:	bl	dd90 <gcc_cp_fe_context@@Base+0x4660>
    dc74:	and	w0, w0, #0xff
    dc78:	ubfiz	x1, x21, #3, #8
    dc7c:	ldrb	w2, [x20, x1]
    dc80:	and	w2, w2, #0x3
    dc84:	cmp	w2, #0x3
    dc88:	b.eq	dc98 <gcc_cp_fe_context@@Base+0x4568>  // b.none
    dc8c:	cbz	w0, dca8 <gcc_cp_fe_context@@Base+0x4578>
    dc90:	ldr	x21, [sp, #32]
    dc94:	b	dc1c <gcc_cp_fe_context@@Base+0x44ec>
    dc98:	ldrb	w2, [x20, x1]
    dc9c:	bfxil	w2, w0, #0, #2
    dca0:	strb	w2, [x20, x1]
    dca4:	b	dc8c <gcc_cp_fe_context@@Base+0x455c>
    dca8:	ldr	x21, [sp, #32]
    dcac:	b	dc28 <gcc_cp_fe_context@@Base+0x44f8>
    dcb0:	add	x2, x4, #0x3
    dcb4:	str	x2, [sp, #56]
    dcb8:	ldrsb	w1, [x4, #4]
    dcbc:	ldrb	w0, [x4, #3]
    dcc0:	add	w1, w0, w1, lsl #8
    dcc4:	mov	w0, #0x0                   	// #0
    dcc8:	cbnz	w1, dc28 <gcc_cp_fe_context@@Base+0x44f8>
    dccc:	str	x5, [sp, #56]
    dcd0:	ldrsb	w0, [x4, #2]
    dcd4:	ldrb	w1, [x4, #1]
    dcd8:	add	w0, w1, w0, lsl #8
    dcdc:	add	x0, x2, w0, sxtw
    dce0:	str	x0, [sp, #56]
    dce4:	b	dc1c <gcc_cp_fe_context@@Base+0x44ec>
    dce8:	stp	x29, x30, [sp, #-64]!
    dcec:	mov	x29, sp
    dcf0:	str	x0, [sp, #56]
    dcf4:	cmp	x0, x1
    dcf8:	b.cs	dd7c <gcc_cp_fe_context@@Base+0x464c>  // b.hs, b.nlast
    dcfc:	stp	x19, x20, [sp, #16]
    dd00:	str	x21, [sp, #32]
    dd04:	mov	x19, x1
    dd08:	mov	x20, x2
    dd0c:	add	x21, sp, #0x38
    dd10:	b	dd38 <gcc_cp_fe_context@@Base+0x4608>
    dd14:	mov	x2, x20
    dd18:	mov	x1, x19
    dd1c:	mov	x0, x21
    dd20:	bl	db94 <gcc_cp_fe_context@@Base+0x4464>
    dd24:	ands	w0, w0, #0xff
    dd28:	b.eq	dd84 <gcc_cp_fe_context@@Base+0x4654>  // b.none
    dd2c:	ldr	x0, [sp, #56]
    dd30:	cmp	x0, x19
    dd34:	b.cs	dd68 <gcc_cp_fe_context@@Base+0x4638>  // b.hs, b.nlast
    dd38:	ldrb	w3, [x0]
    dd3c:	cmp	w3, #0xf
    dd40:	b.ne	dd14 <gcc_cp_fe_context@@Base+0x45e4>  // b.any
    dd44:	add	x1, x0, #0x1
    dd48:	str	x1, [sp, #56]
    dd4c:	add	x1, x0, #0x3
    dd50:	ldrsb	w3, [x0, #2]
    dd54:	ldrb	w0, [x0, #1]
    dd58:	add	w0, w0, w3, lsl #8
    dd5c:	add	x0, x1, w0, sxtw
    dd60:	str	x0, [sp, #56]
    dd64:	b	dd2c <gcc_cp_fe_context@@Base+0x45fc>
    dd68:	mov	w0, #0x1                   	// #1
    dd6c:	ldp	x19, x20, [sp, #16]
    dd70:	ldr	x21, [sp, #32]
    dd74:	ldp	x29, x30, [sp], #64
    dd78:	ret
    dd7c:	mov	w0, #0x1                   	// #1
    dd80:	b	dd74 <gcc_cp_fe_context@@Base+0x4644>
    dd84:	ldp	x19, x20, [sp, #16]
    dd88:	ldr	x21, [sp, #32]
    dd8c:	b	dd74 <gcc_cp_fe_context@@Base+0x4644>
    dd90:	stp	x29, x30, [sp, #-80]!
    dd94:	mov	x29, sp
    dd98:	ldr	x3, [x0]
    dd9c:	add	x3, x3, #0x2
    dda0:	str	x3, [sp, #72]
    dda4:	cmp	x3, x1
    dda8:	b.cs	df04 <gcc_cp_fe_context@@Base+0x47d4>  // b.hs, b.nlast
    ddac:	stp	x19, x20, [sp, #16]
    ddb0:	stp	x21, x22, [sp, #32]
    ddb4:	str	x23, [sp, #48]
    ddb8:	mov	x21, x0
    ddbc:	mov	x22, x1
    ddc0:	mov	x20, x2
    ddc4:	add	x23, sp, #0x48
    ddc8:	b	de10 <gcc_cp_fe_context@@Base+0x46e0>
    ddcc:	add	x3, x3, #0x2
    ddd0:	str	x3, [x21]
    ddd4:	mov	w0, #0x1                   	// #1
    ddd8:	ldp	x19, x20, [sp, #16]
    dddc:	ldp	x21, x22, [sp, #32]
    dde0:	ldr	x23, [sp, #48]
    dde4:	ldp	x29, x30, [sp], #80
    dde8:	ret
    ddec:	mov	x2, x20
    ddf0:	mov	x1, x22
    ddf4:	mov	x0, x23
    ddf8:	bl	db94 <gcc_cp_fe_context@@Base+0x4464>
    ddfc:	ands	w0, w0, #0xff
    de00:	b.eq	df2c <gcc_cp_fe_context@@Base+0x47fc>  // b.none
    de04:	ldr	x3, [sp, #72]
    de08:	cmp	x3, x22
    de0c:	b.cs	def0 <gcc_cp_fe_context@@Base+0x47c0>  // b.hs, b.nlast
    de10:	ldrb	w0, [x3]
    de14:	cmp	w0, #0x7
    de18:	b.eq	ddcc <gcc_cp_fe_context@@Base+0x469c>  // b.none
    de1c:	cmp	w0, #0xf
    de20:	b.ne	ddec <gcc_cp_fe_context@@Base+0x46bc>  // b.any
    de24:	add	x0, x3, #0x1
    de28:	str	x0, [sp, #72]
    de2c:	ldrsb	w19, [x3, #2]
    de30:	ldrb	w0, [x3, #1]
    de34:	add	x3, x3, #0x3
    de38:	str	x3, [sp, #72]
    de3c:	adds	w19, w0, w19, lsl #8
    de40:	b.mi	de04 <gcc_cp_fe_context@@Base+0x46d4>  // b.first
    de44:	ldr	x0, [sp, #72]
    de48:	sxtw	x19, w19
    de4c:	sub	x2, x19, #0x3
    de50:	add	x1, x0, x2
    de54:	ldrb	w2, [x0, x2]
    de58:	cmp	w2, #0xe
    de5c:	b.ne	deb8 <gcc_cp_fe_context@@Base+0x4788>  // b.any
    de60:	mov	x2, x20
    de64:	bl	dce8 <gcc_cp_fe_context@@Base+0x45b8>
    de68:	ands	w0, w0, #0xff
    de6c:	b.eq	df0c <gcc_cp_fe_context@@Base+0x47dc>  // b.none
    de70:	ldr	x1, [sp, #72]
    de74:	add	x0, x1, x19
    de78:	str	x0, [sp, #72]
    de7c:	ldrb	w1, [x1, x19]
    de80:	cmp	w1, #0xf
    de84:	b.ne	deb8 <gcc_cp_fe_context@@Base+0x4788>  // b.any
    de88:	add	x1, x0, #0x1
    de8c:	str	x1, [sp, #72]
    de90:	ldrsb	w19, [x0, #2]
    de94:	ldrb	w1, [x0, #1]
    de98:	add	w19, w1, w19, lsl #8
    de9c:	add	x1, x0, #0x3
    dea0:	str	x1, [sp, #72]
    dea4:	add	x1, x1, w19, sxtw
    dea8:	ldurb	w1, [x1, #-3]
    deac:	cmp	w1, #0xe
    deb0:	b.eq	de44 <gcc_cp_fe_context@@Base+0x4714>  // b.none
    deb4:	str	x0, [sp, #72]
    deb8:	ldr	x0, [sp, #72]
    debc:	ldursb	w19, [x0, #-1]
    dec0:	ldurb	w1, [x0, #-2]
    dec4:	add	w19, w1, w19, lsl #8
    dec8:	sxtw	x19, w19
    decc:	mov	x2, x20
    ded0:	add	x1, x0, x19
    ded4:	bl	dce8 <gcc_cp_fe_context@@Base+0x45b8>
    ded8:	ands	w0, w0, #0xff
    dedc:	b.eq	df1c <gcc_cp_fe_context@@Base+0x47ec>  // b.none
    dee0:	ldr	x0, [sp, #72]
    dee4:	add	x19, x0, x19
    dee8:	str	x19, [sp, #72]
    deec:	b	de04 <gcc_cp_fe_context@@Base+0x46d4>
    def0:	mov	w0, #0x0                   	// #0
    def4:	ldp	x19, x20, [sp, #16]
    def8:	ldp	x21, x22, [sp, #32]
    defc:	ldr	x23, [sp, #48]
    df00:	b	dde4 <gcc_cp_fe_context@@Base+0x46b4>
    df04:	mov	w0, #0x0                   	// #0
    df08:	b	dde4 <gcc_cp_fe_context@@Base+0x46b4>
    df0c:	ldp	x19, x20, [sp, #16]
    df10:	ldp	x21, x22, [sp, #32]
    df14:	ldr	x23, [sp, #48]
    df18:	b	dde4 <gcc_cp_fe_context@@Base+0x46b4>
    df1c:	ldp	x19, x20, [sp, #16]
    df20:	ldp	x21, x22, [sp, #32]
    df24:	ldr	x23, [sp, #48]
    df28:	b	dde4 <gcc_cp_fe_context@@Base+0x46b4>
    df2c:	ldp	x19, x20, [sp, #16]
    df30:	ldp	x21, x22, [sp, #32]
    df34:	ldr	x23, [sp, #48]
    df38:	b	dde4 <gcc_cp_fe_context@@Base+0x46b4>
    df3c:	stp	x29, x30, [sp, #-128]!
    df40:	mov	x29, sp
    df44:	stp	x19, x20, [sp, #16]
    df48:	stp	x21, x22, [sp, #32]
    df4c:	stp	x23, x24, [sp, #48]
    df50:	stp	x25, x26, [sp, #64]
    df54:	stp	x27, x28, [sp, #80]
    df58:	mov	x22, x0
    df5c:	ldr	x19, [x0, #32]
    df60:	ldr	x21, [x0]
    df64:	ldr	x24, [x0, #16]
    df68:	add	x24, x21, x24
    df6c:	sub	sp, sp, #0x30
    df70:	mov	x27, sp
    df74:	mov	x2, #0x100                 	// #256
    df78:	mov	w1, #0x0                   	// #0
    df7c:	mov	x0, x19
    df80:	bl	5450 <memset@plt>
    df84:	ldrb	w0, [x22, #56]
    df88:	orr	w0, w0, #0x8
    df8c:	and	w0, w0, #0xfffffffe
    df90:	strb	w0, [x22, #56]
    df94:	mov	w26, #0x0                   	// #0
    df98:	mov	w2, #0x5                   	// #5
    df9c:	mov	w25, #0x1                   	// #1
    dfa0:	mov	w28, w25
    dfa4:	adrp	x20, 15000 <iterative_hash@@Base+0xec>
    dfa8:	add	x20, x20, #0xf24
    dfac:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    dfb0:	ldr	x0, [x0, #3952]
    dfb4:	str	x0, [x29, #120]
    dfb8:	cmp	x21, x24
    dfbc:	b.eq	e004 <gcc_cp_fe_context@@Base+0x48d4>  // b.none
    dfc0:	ldrb	w0, [x21]
    dfc4:	cmp	w0, #0x1
    dfc8:	b.eq	e004 <gcc_cp_fe_context@@Base+0x48d4>  // b.none
    dfcc:	cmp	w0, #0x1d
    dfd0:	b.hi	e384 <gcc_cp_fe_context@@Base+0x4c54>  // b.pmore
    dfd4:	ldrh	w0, [x20, w0, uxtw #1]
    dfd8:	adr	x1, dfe4 <gcc_cp_fe_context@@Base+0x48b4>
    dfdc:	add	x0, x1, w0, sxth #2
    dfe0:	br	x0
    dfe4:	add	x21, x21, #0x1
    dfe8:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    dfec:	mov	x21, x24
    dff0:	mov	w25, #0x0                   	// #0
    dff4:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    dff8:	mov	x21, x24
    dffc:	mov	w25, #0x0                   	// #0
    e000:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e004:	cbnz	w26, e040 <gcc_cp_fe_context@@Base+0x4910>
    e008:	ldrb	w0, [x22, #56]
    e00c:	ubfx	x1, x0, #0, #1
    e010:	orr	w25, w25, w1
    e014:	bfxil	w0, w25, #0, #1
    e018:	strb	w0, [x22, #56]
    e01c:	mov	w0, #0x0                   	// #0
    e020:	mov	sp, x29
    e024:	ldp	x19, x20, [sp, #16]
    e028:	ldp	x21, x22, [sp, #32]
    e02c:	ldp	x23, x24, [sp, #48]
    e030:	ldp	x25, x26, [sp, #64]
    e034:	ldp	x27, x28, [sp, #80]
    e038:	ldp	x29, x30, [sp], #128
    e03c:	ret
    e040:	ldrb	w0, [x22, #56]
    e044:	ubfx	x1, x0, #0, #1
    e048:	orr	w25, w25, w1
    e04c:	bfxil	w0, w25, #0, #1
    e050:	strb	w0, [x22, #56]
    e054:	sub	w26, w26, #0x1
    e058:	ldr	x21, [x27, w26, uxtw #3]
    e05c:	mov	w25, w28
    e060:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e064:	ldrb	w0, [x22, #56]
    e068:	orr	w0, w0, #0x1
    e06c:	strb	w0, [x22, #56]
    e070:	mov	w0, #0x0                   	// #0
    e074:	b	e020 <gcc_cp_fe_context@@Base+0x48f0>
    e078:	ldrb	w0, [x21, #2]
    e07c:	mov	w1, #0x1                   	// #1
    e080:	strb	w1, [x19, x0]
    e084:	mov	x21, x24
    e088:	mov	w25, #0x0                   	// #0
    e08c:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e090:	ldrb	w0, [x21, #1]
    e094:	lsl	w0, w0, #3
    e098:	subs	w0, w0, #0x1
    e09c:	b.mi	dfec <gcc_cp_fe_context@@Base+0x48bc>  // b.first
    e0a0:	sxtw	x0, w0
    e0a4:	mov	w5, #0x1                   	// #1
    e0a8:	b	e0b4 <gcc_cp_fe_context@@Base+0x4984>
    e0ac:	sub	x0, x0, #0x1
    e0b0:	tbnz	w0, #31, e0ec <gcc_cp_fe_context@@Base+0x49bc>
    e0b4:	add	w1, w0, #0x7
    e0b8:	cmp	w0, #0x0
    e0bc:	csel	w1, w1, w0, lt  // lt = tstop
    e0c0:	asr	w1, w1, #3
    e0c4:	add	x1, x21, w1, sxtw
    e0c8:	ldrb	w4, [x1, #2]
    e0cc:	negs	w3, w0
    e0d0:	and	w1, w0, #0x7
    e0d4:	and	w3, w3, #0x7
    e0d8:	csneg	w1, w1, w3, mi  // mi = first
    e0dc:	asr	w1, w4, w1
    e0e0:	tbz	w1, #0, e0ac <gcc_cp_fe_context@@Base+0x497c>
    e0e4:	strb	w5, [x19, x0]
    e0e8:	b	e0ac <gcc_cp_fe_context@@Base+0x497c>
    e0ec:	mov	x21, x24
    e0f0:	mov	w25, #0x0                   	// #0
    e0f4:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e0f8:	ldrb	w0, [x21, #1]
    e0fc:	lsl	w0, w0, #3
    e100:	cmp	w0, #0xff
    e104:	b.gt	e120 <gcc_cp_fe_context@@Base+0x49f0>
    e108:	sxtw	x0, w0
    e10c:	mov	w1, #0x1                   	// #1
    e110:	strb	w1, [x19, x0]
    e114:	add	x0, x0, #0x1
    e118:	cmp	w0, #0xff
    e11c:	b.le	e110 <gcc_cp_fe_context@@Base+0x49e0>
    e120:	ldrb	w0, [x21, #1]
    e124:	lsl	w0, w0, #3
    e128:	subs	w0, w0, #0x1
    e12c:	b.mi	dff8 <gcc_cp_fe_context@@Base+0x48c8>  // b.first
    e130:	sxtw	x0, w0
    e134:	mov	w5, #0x1                   	// #1
    e138:	b	e144 <gcc_cp_fe_context@@Base+0x4a14>
    e13c:	sub	x0, x0, #0x1
    e140:	tbnz	w0, #31, e17c <gcc_cp_fe_context@@Base+0x4a4c>
    e144:	add	w1, w0, #0x7
    e148:	cmp	w0, #0x0
    e14c:	csel	w1, w1, w0, lt  // lt = tstop
    e150:	asr	w1, w1, #3
    e154:	add	x1, x21, w1, sxtw
    e158:	ldrb	w4, [x1, #2]
    e15c:	negs	w3, w0
    e160:	and	w1, w0, #0x7
    e164:	and	w3, w3, #0x7
    e168:	csneg	w1, w1, w3, mi  // mi = first
    e16c:	asr	w1, w4, w1
    e170:	tbnz	w1, #0, e13c <gcc_cp_fe_context@@Base+0x4a0c>
    e174:	strb	w5, [x19, x0]
    e178:	b	e13c <gcc_cp_fe_context@@Base+0x4a0c>
    e17c:	mov	x21, x24
    e180:	mov	w25, #0x0                   	// #0
    e184:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e188:	mov	x0, #0x0                   	// #0
    e18c:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
    e190:	add	x1, x1, #0x5f8
    e194:	mov	w4, #0x1                   	// #1
    e198:	b	e1a8 <gcc_cp_fe_context@@Base+0x4a78>
    e19c:	add	x0, x0, #0x1
    e1a0:	cmp	x0, #0x100
    e1a4:	b.eq	e1c0 <gcc_cp_fe_context@@Base+0x4a90>  // b.none
    e1a8:	and	w3, w0, #0xff
    e1ac:	ldrb	w3, [x1, w3, sxtw]
    e1b0:	cmp	w3, #0x1
    e1b4:	b.ne	e19c <gcc_cp_fe_context@@Base+0x4a6c>  // b.any
    e1b8:	strb	w4, [x19, x0]
    e1bc:	b	e19c <gcc_cp_fe_context@@Base+0x4a6c>
    e1c0:	mov	x21, x24
    e1c4:	mov	w25, #0x0                   	// #0
    e1c8:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e1cc:	mov	x0, #0x0                   	// #0
    e1d0:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
    e1d4:	add	x1, x1, #0x5f8
    e1d8:	mov	w4, #0x1                   	// #1
    e1dc:	b	e1f0 <gcc_cp_fe_context@@Base+0x4ac0>
    e1e0:	strb	w4, [x19, x0]
    e1e4:	add	x0, x0, #0x1
    e1e8:	cmp	x0, #0x100
    e1ec:	b.eq	e204 <gcc_cp_fe_context@@Base+0x4ad4>  // b.none
    e1f0:	and	w3, w0, #0xff
    e1f4:	ldrb	w3, [x1, w3, sxtw]
    e1f8:	cmp	w3, #0x1
    e1fc:	b.ne	e1e0 <gcc_cp_fe_context@@Base+0x4ab0>  // b.any
    e200:	b	e1e4 <gcc_cp_fe_context@@Base+0x4ab4>
    e204:	mov	x21, x24
    e208:	mov	w25, #0x0                   	// #0
    e20c:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e210:	ldrb	w4, [x19, #10]
    e214:	mov	x0, x19
    e218:	add	x3, x19, #0x100
    e21c:	mov	w1, #0x1                   	// #1
    e220:	strb	w1, [x0], #1
    e224:	cmp	x3, x0
    e228:	b.ne	e220 <gcc_cp_fe_context@@Base+0x4af0>  // b.any
    e22c:	ldr	x0, [x22, #24]
    e230:	tbnz	w0, #6, e244 <gcc_cp_fe_context@@Base+0x4b14>
    e234:	strb	w4, [x19, #10]
    e238:	mov	x21, x24
    e23c:	mov	w25, #0x0                   	// #0
    e240:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e244:	ldrb	w0, [x22, #56]
    e248:	and	w25, w0, #0x1
    e24c:	tbnz	w0, #0, e388 <gcc_cp_fe_context@@Base+0x4c58>
    e250:	mov	x21, x24
    e254:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e258:	ldrsb	w0, [x21, #2]
    e25c:	ldrb	w1, [x21, #1]
    e260:	add	w0, w1, w0, lsl #8
    e264:	sxtw	x1, w0
    e268:	add	x1, x1, #0x3
    e26c:	add	x21, x21, x1
    e270:	cmp	w0, #0x0
    e274:	b.gt	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e278:	ldrb	w0, [x21]
    e27c:	cmp	w0, #0xf
    e280:	ccmp	w0, #0x15, #0x4, ne  // ne = any
    e284:	b.ne	dfb8 <gcc_cp_fe_context@@Base+0x4888>  // b.any
    e288:	add	x1, x21, #0x3
    e28c:	ldrsb	w0, [x21, #2]
    e290:	ldrb	w21, [x21, #1]
    e294:	add	w21, w21, w0, lsl #8
    e298:	add	x21, x1, w21, sxtw
    e29c:	cbz	w26, dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e2a0:	sub	w0, w26, #0x1
    e2a4:	ldr	x1, [x27, w0, uxtw #3]
    e2a8:	cmp	x1, x21
    e2ac:	csel	w26, w26, w0, ne  // ne = any
    e2b0:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e2b4:	mov	w23, #0x0                   	// #0
    e2b8:	b	e2e0 <gcc_cp_fe_context@@Base+0x4bb0>
    e2bc:	ldrb	w0, [x22, #56]
    e2c0:	orr	w0, w0, #0x1
    e2c4:	strb	w0, [x22, #56]
    e2c8:	b	e358 <gcc_cp_fe_context@@Base+0x4c28>
    e2cc:	ldrsb	w0, [x21, #4]
    e2d0:	ldrb	w1, [x21, #3]
    e2d4:	add	w0, w1, w0, lsl #8
    e2d8:	mov	w23, w28
    e2dc:	cbnz	w0, e36c <gcc_cp_fe_context@@Base+0x4c3c>
    e2e0:	add	x3, x21, #0x3
    e2e4:	str	x3, [x29, #112]
    e2e8:	ldrsb	w0, [x21, #2]
    e2ec:	ldrb	w1, [x21, #1]
    e2f0:	add	w0, w1, w0, lsl #8
    e2f4:	add	x0, x3, w0, sxtw
    e2f8:	str	x0, [x29, #104]
    e2fc:	cmp	x0, x24
    e300:	b.cs	e2bc <gcc_cp_fe_context@@Base+0x4b8c>  // b.hs, b.nlast
    e304:	cmp	w2, w26
    e308:	b.ne	e34c <gcc_cp_fe_context@@Base+0x4c1c>  // b.any
    e30c:	ldr	x0, [x29, #120]
    e310:	ldr	w0, [x0]
    e314:	mov	w1, #0x13                  	// #19
    e318:	mul	w0, w0, w1
    e31c:	cmp	w2, w0
    e320:	b.hi	e390 <gcc_cp_fe_context@@Base+0x4c60>  // b.pmore
    e324:	lsl	w0, w2, #1
    e328:	str	w0, [x29, #100]
    e32c:	ubfiz	x0, x2, #4, #31
    e330:	sub	sp, sp, x0
    e334:	ubfiz	x2, x2, #3, #32
    e338:	mov	x1, x27
    e33c:	mov	x0, sp
    e340:	bl	52b0 <memcpy@plt>
    e344:	mov	x27, x0
    e348:	ldr	w2, [x29, #100]
    e34c:	ldr	x0, [x29, #104]
    e350:	str	x0, [x27, w26, uxtw #3]
    e354:	add	w26, w26, #0x1
    e358:	add	x21, x21, #0x5
    e35c:	cmp	w23, #0x0
    e360:	ldr	x0, [x29, #112]
    e364:	csel	x21, x21, x0, ne  // ne = any
    e368:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e36c:	add	x21, x21, #0x5
    e370:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e374:	add	x21, x21, #0x5
    e378:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e37c:	add	x21, x21, #0x3
    e380:	b	dfb8 <gcc_cp_fe_context@@Base+0x4888>
    e384:	bl	5740 <abort@plt>
    e388:	mov	w0, #0x0                   	// #0
    e38c:	b	e020 <gcc_cp_fe_context@@Base+0x48f0>
    e390:	mov	w0, #0xfffffffe            	// #-2
    e394:	b	e020 <gcc_cp_fe_context@@Base+0x48f0>
    e398:	stp	x29, x30, [sp, #-400]!
    e39c:	mov	x29, sp
    e3a0:	stp	x19, x20, [sp, #16]
    e3a4:	stp	x21, x22, [sp, #32]
    e3a8:	stp	x23, x24, [sp, #48]
    e3ac:	stp	x25, x26, [sp, #64]
    e3b0:	stp	x27, x28, [sp, #80]
    e3b4:	str	x0, [x29, #248]
    e3b8:	str	x1, [x29, #360]
    e3bc:	str	w2, [x29, #340]
    e3c0:	str	x3, [x29, #344]
    e3c4:	str	w4, [x29, #324]
    e3c8:	str	w5, [x29, #320]
    e3cc:	str	x6, [x29, #240]
    e3d0:	ldr	x26, [x0]
    e3d4:	mov	x1, x0
    e3d8:	ldr	x0, [x0, #16]
    e3dc:	add	x0, x26, x0
    e3e0:	str	x0, [x29, #376]
    e3e4:	ldr	x0, [x1, #40]
    e3e8:	str	x0, [x29, #216]
    e3ec:	ldr	x0, [x1, #48]
    e3f0:	str	x0, [x29, #176]
    e3f4:	add	x1, x0, #0x1
    e3f8:	str	x1, [x29, #296]
    e3fc:	sub	sp, sp, #0x30
    e400:	mov	x19, sp
    e404:	cbz	x0, e478 <gcc_cp_fe_context@@Base+0x4d48>
    e408:	lsl	x0, x1, #3
    e40c:	add	x0, x0, #0xf
    e410:	and	x0, x0, #0xfffffffffffffff0
    e414:	sub	sp, sp, x0
    e418:	mov	x22, sp
    e41c:	sub	sp, sp, x0
    e420:	mov	x23, sp
    e424:	sub	sp, sp, x0
    e428:	mov	x1, sp
    e42c:	str	x1, [x29, #232]
    e430:	sub	sp, sp, x0
    e434:	mov	x1, sp
    e438:	str	x1, [x29, #224]
    e43c:	sub	sp, sp, x0
    e440:	mov	x1, sp
    e444:	str	x1, [x29, #200]
    e448:	sub	sp, sp, x0
    e44c:	mov	x1, sp
    e450:	str	x1, [x29, #192]
    e454:	sub	sp, sp, x0
    e458:	mov	x28, sp
    e45c:	sub	sp, sp, x0
    e460:	mov	x1, sp
    e464:	str	x1, [x29, #168]
    e468:	sub	sp, sp, x0
    e46c:	mov	x0, sp
    e470:	str	x0, [x29, #160]
    e474:	b	e49c <gcc_cp_fe_context@@Base+0x4d6c>
    e478:	str	xzr, [x29, #160]
    e47c:	str	xzr, [x29, #168]
    e480:	str	xzr, [x29, #192]
    e484:	str	xzr, [x29, #200]
    e488:	mov	x28, #0x0                   	// #0
    e48c:	str	xzr, [x29, #224]
    e490:	str	xzr, [x29, #232]
    e494:	mov	x23, #0x0                   	// #0
    e498:	mov	x22, #0x0                   	// #0
    e49c:	ldr	w1, [x29, #320]
    e4a0:	tbnz	w1, #31, 101a8 <gcc_cp_fe_context@@Base+0x6a78>
    e4a4:	ldr	w0, [x29, #340]
    e4a8:	ldr	w2, [x29, #324]
    e4ac:	add	w0, w0, w2
    e4b0:	cmp	w0, w1
    e4b4:	b.lt	101b0 <gcc_cp_fe_context@@Base+0x6a80>  // b.tstop
    e4b8:	ldr	x0, [x29, #296]
    e4bc:	cmp	x0, #0x1
    e4c0:	b.ls	e50c <gcc_cp_fe_context@@Base+0x4ddc>  // b.plast
    e4c4:	lsl	x3, x0, #3
    e4c8:	mov	x0, #0x8                   	// #8
    e4cc:	adrp	x2, 2b000 <xexit@@Base+0x15c24>
    e4d0:	add	x2, x2, #0x5f8
    e4d4:	add	x2, x2, #0x100
    e4d8:	ldr	x4, [x29, #232]
    e4dc:	ldr	x5, [x29, #224]
    e4e0:	str	x2, [x5, x0]
    e4e4:	str	x2, [x4, x0]
    e4e8:	str	x2, [x23, x0]
    e4ec:	str	x2, [x22, x0]
    e4f0:	ldrb	w1, [x28, x0]
    e4f4:	orr	w1, w1, #0x3
    e4f8:	and	w1, w1, #0xffffffe3
    e4fc:	strb	w1, [x28, x0]
    e500:	add	x0, x0, #0x8
    e504:	cmp	x0, x3
    e508:	b.ne	e4e0 <gcc_cp_fe_context@@Base+0x4db0>  // b.any
    e50c:	ldr	w0, [x29, #324]
    e510:	cmp	w0, #0x0
    e514:	ldr	x0, [x29, #360]
    e518:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    e51c:	b.eq	e534 <gcc_cp_fe_context@@Base+0x4e04>  // b.none
    e520:	ldr	w1, [x29, #340]
    e524:	str	w1, [x29, #324]
    e528:	str	x0, [x29, #344]
    e52c:	str	wzr, [x29, #340]
    e530:	str	xzr, [x29, #360]
    e534:	ldr	w1, [x29, #340]
    e538:	sxtw	x0, w1
    e53c:	str	x0, [x29, #256]
    e540:	ldr	x2, [x29, #360]
    e544:	add	x0, x2, x0
    e548:	str	x0, [x29, #352]
    e54c:	ldr	w3, [x29, #324]
    e550:	ldr	x0, [x29, #344]
    e554:	add	x3, x0, w3, sxtw
    e558:	str	x3, [x29, #272]
    e55c:	cmp	w1, w7
    e560:	b.lt	e600 <gcc_cp_fe_context@@Base+0x4ed0>  // b.tstop
    e564:	add	x1, x2, w7, sxtw
    e568:	str	x1, [x29, #328]
    e56c:	str	x0, [x29, #304]
    e570:	ldr	w0, [x29, #340]
    e574:	cmp	w0, #0x0
    e578:	ldr	w1, [x29, #320]
    e57c:	ccmp	w0, w1, #0x1, gt
    e580:	b.lt	e624 <gcc_cp_fe_context@@Base+0x4ef4>  // b.tstop
    e584:	ldr	x0, [x29, #360]
    e588:	add	x25, x0, w1, sxtw
    e58c:	ldr	x24, [x29, #328]
    e590:	ldr	w0, [x29, #340]
    e594:	cmp	w0, #0x0
    e598:	ldr	x0, [x29, #360]
    e59c:	ldr	x1, [x29, #344]
    e5a0:	csel	x0, x0, x1, ne  // ne = any
    e5a4:	str	x0, [x29, #264]
    e5a8:	ldr	x0, [x29, #296]
    e5ac:	lsl	x0, x0, #3
    e5b0:	str	x0, [x29, #184]
    e5b4:	mov	w27, #0x0                   	// #0
    e5b8:	mov	w0, #0x5                   	// #5
    e5bc:	str	w0, [x29, #284]
    e5c0:	str	wzr, [x29, #336]
    e5c4:	str	xzr, [x29, #288]
    e5c8:	str	wzr, [x29, #280]
    e5cc:	mov	x20, #0x100                 	// #256
    e5d0:	mov	x21, #0x101                 	// #257
    e5d4:	str	xzr, [x29, #208]
    e5d8:	adrp	x0, 15000 <iterative_hash@@Base+0xec>
    e5dc:	add	x0, x0, #0xf60
    e5e0:	str	x0, [x29, #312]
    e5e4:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    e5e8:	ldr	x0, [x0, #3952]
    e5ec:	str	x0, [x29, #152]
    e5f0:	mov	x0, x24
    e5f4:	mov	x24, x25
    e5f8:	mov	x25, x0
    e5fc:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e600:	sxtw	x0, w7
    e604:	ldr	x1, [x29, #256]
    e608:	sub	x0, x0, x1
    e60c:	ldr	x1, [x29, #344]
    e610:	add	x0, x1, x0
    e614:	str	x0, [x29, #304]
    e618:	ldr	x0, [x29, #352]
    e61c:	str	x0, [x29, #328]
    e620:	b	e570 <gcc_cp_fe_context@@Base+0x4e40>
    e624:	ldrsw	x0, [x29, #320]
    e628:	ldr	x1, [x29, #256]
    e62c:	sub	x0, x0, x1
    e630:	ldr	x1, [x29, #344]
    e634:	add	x25, x1, x0
    e638:	ldr	x24, [x29, #304]
    e63c:	b	e590 <gcc_cp_fe_context@@Base+0x4e60>
    e640:	ldr	x26, [x29, #368]
    e644:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e648:	mov	w0, #0x1                   	// #1
    e64c:	str	w0, [x29, #336]
    e650:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e654:	ldr	x26, [x29, #368]
    e658:	ldr	x24, [x29, #264]
    e65c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e660:	ldr	x26, [x29, #368]
    e664:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e668:	ldr	x26, [x29, #368]
    e66c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e670:	ldr	x26, [x29, #368]
    e674:	ldr	x24, [x29, #272]
    e678:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    e67c:	ldr	x0, [x29, #304]
    e680:	cmp	x0, x24
    e684:	b.eq	e754 <gcc_cp_fe_context@@Base+0x5024>  // b.none
    e688:	ldr	x0, [x29, #328]
    e68c:	cmp	x0, x25
    e690:	cset	w2, eq  // eq = none
    e694:	ldr	x3, [x29, #360]
    e698:	ldr	x1, [x29, #288]
    e69c:	cmp	x3, x1
    e6a0:	ldr	x3, [x29, #352]
    e6a4:	ccmp	x1, x3, #0x2, ls  // ls = plast
    e6a8:	ldr	w1, [x29, #340]
    e6ac:	ccmp	w1, #0x0, #0x4, ls  // ls = plast
    e6b0:	cset	w1, ne  // ne = any
    e6b4:	cmp	x0, x25
    e6b8:	cset	w0, ne  // ne = any
    e6bc:	cmp	w1, w2, uxtb
    e6c0:	b.eq	e720 <gcc_cp_fe_context@@Base+0x4ff0>  // b.none
    e6c4:	cbz	w27, e730 <gcc_cp_fe_context@@Base+0x5000>
    e6c8:	ldr	w1, [x29, #280]
    e6cc:	cmp	w1, #0x0
    e6d0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    e6d4:	b.eq	100d8 <gcc_cp_fe_context@@Base+0x69a8>  // b.none
    e6d8:	ldr	x0, [x29, #296]
    e6dc:	cmp	x0, #0x1
    e6e0:	b.ls	101d8 <gcc_cp_fe_context@@Base+0x6aa8>  // b.plast
    e6e4:	mov	x0, #0x8                   	// #8
    e6e8:	ldr	x2, [x29, #200]
    e6ec:	ldr	x3, [x29, #192]
    e6f0:	ldr	x4, [x29, #184]
    e6f4:	ldr	x1, [x22, x0]
    e6f8:	str	x1, [x2, x0]
    e6fc:	ldr	x1, [x23, x0]
    e700:	str	x1, [x3, x0]
    e704:	add	x0, x0, #0x8
    e708:	cmp	x4, x0
    e70c:	b.ne	e6f4 <gcc_cp_fe_context@@Base+0x4fc4>  // b.any
    e710:	str	x24, [x29, #288]
    e714:	mov	w0, #0x1                   	// #1
    e718:	str	w0, [x29, #280]
    e71c:	b	100d8 <gcc_cp_fe_context@@Base+0x69a8>
    e720:	ldr	x0, [x29, #288]
    e724:	cmp	x24, x0
    e728:	cset	w0, hi  // hi = pmore
    e72c:	b	e6c4 <gcc_cp_fe_context@@Base+0x4f94>
    e730:	mov	x1, x25
    e734:	mov	x25, x24
    e738:	mov	x24, x1
    e73c:	ldr	w1, [x29, #280]
    e740:	cmp	w1, #0x0
    e744:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    e748:	b.ne	ffbc <gcc_cp_fe_context@@Base+0x688c>  // b.any
    e74c:	ldr	x25, [x29, #288]
    e750:	b	ff68 <gcc_cp_fe_context@@Base+0x6838>
    e754:	mov	x0, x25
    e758:	mov	x25, x24
    e75c:	mov	x24, x0
    e760:	b	ffbc <gcc_cp_fe_context@@Base+0x688c>
    e764:	mov	x0, x25
    e768:	mov	x25, x24
    e76c:	mov	x24, x0
    e770:	b	ffbc <gcc_cp_fe_context@@Base+0x688c>
    e774:	ldr	x0, [x29, #176]
    e778:	add	x19, x0, #0x2
    e77c:	cmp	x19, #0x1e
    e780:	mov	x0, #0x1e                  	// #30
    e784:	csel	x19, x19, x0, cs  // cs = hs, nlast
    e788:	ldr	x21, [x29, #240]
    e78c:	str	w19, [x21]
    e790:	ubfiz	x19, x19, #2, #32
    e794:	mov	x0, x19
    e798:	bl	5710 <malloc@plt>
    e79c:	mov	x20, x0
    e7a0:	str	x0, [x21, #8]
    e7a4:	mov	x0, x19
    e7a8:	bl	5710 <malloc@plt>
    e7ac:	str	x0, [x21, #16]
    e7b0:	cmp	x20, #0x0
    e7b4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    e7b8:	b.eq	101b8 <gcc_cp_fe_context@@Base+0x6a88>  // b.none
    e7bc:	ldr	x2, [x29, #248]
    e7c0:	ldrb	w0, [x2, #56]
    e7c4:	mov	w1, #0x1                   	// #1
    e7c8:	bfi	w0, w1, #1, #2
    e7cc:	strb	w0, [x2, #56]
    e7d0:	ldr	x4, [x29, #240]
    e7d4:	ldr	w0, [x4]
    e7d8:	cbz	w0, e920 <gcc_cp_fe_context@@Base+0x51f0>
    e7dc:	ldr	x0, [x4, #8]
    e7e0:	ldr	w1, [x29, #320]
    e7e4:	str	w1, [x0]
    e7e8:	ldr	x7, [x29, #360]
    e7ec:	sub	x1, x25, x7
    e7f0:	ldr	x11, [x29, #344]
    e7f4:	sub	x0, x25, x11
    e7f8:	ldr	w8, [x29, #340]
    e7fc:	add	w0, w8, w0
    e800:	ldr	x2, [x29, #328]
    e804:	cmp	x2, x24
    e808:	csel	w0, w0, w1, ne  // ne = any
    e80c:	ldr	x1, [x4, #16]
    e810:	str	w0, [x1]
    e814:	ldr	w0, [x4]
    e818:	ldr	x6, [x29, #296]
    e81c:	cmp	x0, x6
    e820:	csel	x0, x0, x6, ls  // ls = plast
    e824:	cmp	x0, #0x1
    e828:	b.ls	e8dc <gcc_cp_fe_context@@Base+0x51ac>  // b.plast
    e82c:	mov	x0, #0x1                   	// #1
    e830:	adrp	x3, 2b000 <xexit@@Base+0x15c24>
    e834:	add	x3, x3, #0x5f8
    e838:	add	x3, x3, #0x100
    e83c:	mov	w5, #0xffffffff            	// #-1
    e840:	ldr	x10, [x29, #352]
    e844:	b	e870 <gcc_cp_fe_context@@Base+0x5140>
    e848:	ldr	x1, [x4, #16]
    e84c:	str	w5, [x1, x0, lsl #2]
    e850:	ldr	x1, [x4, #8]
    e854:	str	w5, [x1, x0, lsl #2]
    e858:	add	x0, x0, #0x1
    e85c:	ldr	w1, [x4]
    e860:	cmp	x1, x6
    e864:	csel	x1, x1, x6, ls  // ls = plast
    e868:	cmp	x1, x0
    e86c:	b.ls	e8dc <gcc_cp_fe_context@@Base+0x51ac>  // b.plast
    e870:	ldr	x1, [x22, x0, lsl #3]
    e874:	cmp	x1, x3
    e878:	b.eq	e848 <gcc_cp_fe_context@@Base+0x5118>  // b.none
    e87c:	ldr	x2, [x23, x0, lsl #3]
    e880:	cmp	x2, x3
    e884:	b.eq	e848 <gcc_cp_fe_context@@Base+0x5118>  // b.none
    e888:	cmp	w8, #0x0
    e88c:	cset	w9, ne  // ne = any
    e890:	cmp	x1, x10
    e894:	ccmp	x1, x7, #0x0, ls  // ls = plast
    e898:	sub	x12, x1, x7
    e89c:	sub	x1, x1, x11
    e8a0:	add	w1, w8, w1
    e8a4:	ccmp	w9, #0x0, #0x4, cs  // cs = hs, nlast
    e8a8:	csel	w1, w1, w12, eq  // eq = none
    e8ac:	ldr	x12, [x4, #8]
    e8b0:	str	w1, [x12, x0, lsl #2]
    e8b4:	cmp	x2, x10
    e8b8:	ccmp	x2, x7, #0x0, ls  // ls = plast
    e8bc:	sub	x12, x2, x7
    e8c0:	sub	x1, x2, x11
    e8c4:	add	w1, w8, w1
    e8c8:	ccmp	w9, #0x0, #0x4, cs  // cs = hs, nlast
    e8cc:	csel	w1, w1, w12, eq  // eq = none
    e8d0:	ldr	x2, [x4, #16]
    e8d4:	str	w1, [x2, x0, lsl #2]
    e8d8:	b	e858 <gcc_cp_fe_context@@Base+0x5128>
    e8dc:	ldr	x2, [x29, #296]
    e8e0:	mov	w1, w2
    e8e4:	ldr	x3, [x29, #240]
    e8e8:	ldr	w0, [x3]
    e8ec:	cmp	w0, w2
    e8f0:	b.ls	e920 <gcc_cp_fe_context@@Base+0x51f0>  // b.plast
    e8f4:	sbfiz	x0, x2, #2, #32
    e8f8:	mov	w2, #0xffffffff            	// #-1
    e8fc:	ldr	x4, [x3, #16]
    e900:	str	w2, [x4, x0]
    e904:	ldr	x4, [x3, #8]
    e908:	str	w2, [x4, x0]
    e90c:	add	w1, w1, #0x1
    e910:	add	x0, x0, #0x4
    e914:	ldr	w4, [x3]
    e918:	cmp	w4, w1
    e91c:	b.hi	e8fc <gcc_cp_fe_context@@Base+0x51cc>  // b.pmore
    e920:	ldr	w0, [x29, #320]
    e924:	sub	x0, x25, w0, sxtw
    e928:	ldr	x1, [x29, #344]
    e92c:	ldr	x2, [x29, #256]
    e930:	sub	x1, x1, x2
    e934:	ldr	x2, [x29, #328]
    e938:	cmp	x2, x24
    e93c:	ldr	x2, [x29, #360]
    e940:	csel	x1, x1, x2, ne  // ne = any
    e944:	sub	w0, w0, w1
    e948:	mov	sp, x29
    e94c:	ldp	x19, x20, [sp, #16]
    e950:	ldp	x21, x22, [sp, #32]
    e954:	ldp	x23, x24, [sp, #48]
    e958:	ldp	x25, x26, [sp, #64]
    e95c:	ldp	x27, x28, [sp, #80]
    e960:	ldp	x29, x30, [sp], #400
    e964:	ret
    e968:	add	x0, x20, #0x1
    e96c:	sub	x0, x0, x21
    e970:	add	x0, x0, x0, lsl #1
    e974:	add	x0, x0, #0x4
    e978:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    e97c:	ldr	x26, [x1, #3952]
    e980:	ldr	w2, [x29, #284]
    e984:	mov	x1, x19
    e988:	str	x20, [x29, #144]
    e98c:	mov	x20, x0
    e990:	mov	x19, x26
    e994:	b	f888 <gcc_cp_fe_context@@Base+0x6158>
    e998:	add	x0, x20, #0x1
    e99c:	sub	x0, x0, x21
    e9a0:	add	x0, x0, x0, lsl #1
    e9a4:	add	x0, x0, #0x4
    e9a8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    e9ac:	ldr	x3, [x1, #3952]
    e9b0:	ldr	w2, [x29, #284]
    e9b4:	mov	x1, x19
    e9b8:	str	x24, [x29, #368]
    e9bc:	str	x25, [x29, #144]
    e9c0:	mov	x25, x0
    e9c4:	mov	x19, x3
    e9c8:	sub	w0, w2, w27
    e9cc:	cmp	x0, x25
    e9d0:	b.cs	f7f0 <gcc_cp_fe_context@@Base+0x60c0>  // b.hs, b.nlast
    e9d4:	ldr	w3, [x19]
    e9d8:	mov	w0, #0x13                  	// #19
    e9dc:	mul	w3, w3, w0
    e9e0:	cmp	w3, w2
    e9e4:	b.cc	101d0 <gcc_cp_fe_context@@Base+0x6aa0>  // b.lo, b.ul, b.last
    e9e8:	lsl	w24, w2, #1
    e9ec:	ubfiz	x0, x2, #4, #31
    e9f0:	sub	sp, sp, x0
    e9f4:	ubfiz	x2, x2, #3, #32
    e9f8:	mov	x0, sp
    e9fc:	bl	52b0 <memcpy@plt>
    ea00:	mov	x1, x0
    ea04:	mov	w2, w24
    ea08:	b	e9c8 <gcc_cp_fe_context@@Base+0x5298>
    ea0c:	add	x2, x26, #0x2
    ea10:	ldrb	w1, [x26, #1]
    ea14:	ldr	x4, [x29, #344]
    ea18:	ldr	x0, [x29, #216]
    ea1c:	cbz	x0, ea30 <gcc_cp_fe_context@@Base+0x5300>
    ea20:	mov	x0, x24
    ea24:	mov	x26, x2
    ea28:	ldr	x5, [x29, #216]
    ea2c:	b	ea50 <gcc_cp_fe_context@@Base+0x5320>
    ea30:	mov	x0, x24
    ea34:	mov	x26, x2
    ea38:	b	eac8 <gcc_cp_fe_context@@Base+0x5398>
    ea3c:	ldr	x2, [x29, #304]
    ea40:	cmp	x2, x25
    ea44:	b.eq	ff24 <gcc_cp_fe_context@@Base+0x67f4>  // b.none
    ea48:	mov	x25, x2
    ea4c:	mov	x0, x4
    ea50:	cmp	x0, x25
    ea54:	b.eq	ea3c <gcc_cp_fe_context@@Base+0x530c>  // b.none
    ea58:	ldrb	w2, [x0], #1
    ea5c:	ldrb	w3, [x5, x2]
    ea60:	ldrb	w2, [x26], #1
    ea64:	cmp	w3, w2
    ea68:	b.ne	ff04 <gcc_cp_fe_context@@Base+0x67d4>  // b.any
    ea6c:	subs	w1, w1, #0x1
    ea70:	b.ne	ea50 <gcc_cp_fe_context@@Base+0x5320>  // b.any
    ea74:	mov	x24, x0
    ea78:	ldr	w0, [x29, #336]
    ea7c:	cbnz	w0, 10074 <gcc_cp_fe_context@@Base+0x6944>
    ea80:	cmp	x21, x20
    ea84:	b.hi	e648 <gcc_cp_fe_context@@Base+0x4f18>  // b.pmore
    ea88:	add	x2, x28, x21, lsl #3
    ea8c:	mov	x1, x21
    ea90:	ldrb	w0, [x2]
    ea94:	orr	w0, w0, #0x18
    ea98:	strb	w0, [x2], #8
    ea9c:	add	x1, x1, #0x1
    eaa0:	cmp	x20, x1
    eaa4:	b.cs	ea90 <gcc_cp_fe_context@@Base+0x5360>  // b.hs, b.nlast
    eaa8:	mov	w0, #0x1                   	// #1
    eaac:	str	w0, [x29, #336]
    eab0:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    eab4:	ldr	x2, [x29, #304]
    eab8:	cmp	x2, x25
    eabc:	b.eq	ff2c <gcc_cp_fe_context@@Base+0x67fc>  // b.none
    eac0:	mov	x25, x2
    eac4:	mov	x0, x4
    eac8:	cmp	x0, x25
    eacc:	b.eq	eab4 <gcc_cp_fe_context@@Base+0x5384>  // b.none
    ead0:	ldrb	w3, [x0], #1
    ead4:	ldrb	w2, [x26], #1
    ead8:	cmp	w3, w2
    eadc:	b.ne	ff0c <gcc_cp_fe_context@@Base+0x67dc>  // b.any
    eae0:	subs	w1, w1, #0x1
    eae4:	b.ne	eac8 <gcc_cp_fe_context@@Base+0x5398>  // b.any
    eae8:	mov	x24, x0
    eaec:	b	ea78 <gcc_cp_fe_context@@Base+0x5348>
    eaf0:	ldr	x0, [x29, #304]
    eaf4:	ldr	x1, [x29, #344]
    eaf8:	cmp	x24, x25
    eafc:	b.ne	eb14 <gcc_cp_fe_context@@Base+0x53e4>  // b.any
    eb00:	cmp	x0, x25
    eb04:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    eb08:	mov	x25, x0
    eb0c:	mov	x24, x1
    eb10:	b	eaf8 <gcc_cp_fe_context@@Base+0x53c8>
    eb14:	ldr	x0, [x29, #248]
    eb18:	ldr	x0, [x0, #24]
    eb1c:	tbnz	w0, #6, eb5c <gcc_cp_fe_context@@Base+0x542c>
    eb20:	ldr	x2, [x29, #216]
    eb24:	cbz	x2, eb40 <gcc_cp_fe_context@@Base+0x5410>
    eb28:	ldrb	w1, [x24]
    eb2c:	ldrb	w1, [x2, x1]
    eb30:	cmp	w1, #0xa
    eb34:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    eb38:	tbnz	w0, #7, eb68 <gcc_cp_fe_context@@Base+0x5438>
    eb3c:	b	eb78 <gcc_cp_fe_context@@Base+0x5448>
    eb40:	ldrb	w1, [x24]
    eb44:	cmp	w1, #0xa
    eb48:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    eb4c:	tbz	w0, #7, eb78 <gcc_cp_fe_context@@Base+0x5448>
    eb50:	ldrb	w0, [x24]
    eb54:	cbnz	w0, eb78 <gcc_cp_fe_context@@Base+0x5448>
    eb58:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    eb5c:	tbz	w0, #7, eb78 <gcc_cp_fe_context@@Base+0x5448>
    eb60:	ldr	x0, [x29, #216]
    eb64:	cbz	x0, eb50 <gcc_cp_fe_context@@Base+0x5420>
    eb68:	ldrb	w0, [x24]
    eb6c:	ldr	x1, [x29, #216]
    eb70:	ldrb	w0, [x1, x0]
    eb74:	cbz	w0, ff40 <gcc_cp_fe_context@@Base+0x6810>
    eb78:	ldr	w0, [x29, #336]
    eb7c:	cbz	w0, eb94 <gcc_cp_fe_context@@Base+0x5464>
    eb80:	add	x24, x24, #0x1
    eb84:	ldr	x26, [x29, #368]
    eb88:	mov	w0, #0x1                   	// #1
    eb8c:	str	w0, [x29, #336]
    eb90:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    eb94:	cmp	x21, x20
    eb98:	b.hi	eb80 <gcc_cp_fe_context@@Base+0x5450>  // b.pmore
    eb9c:	add	x2, x28, x21, lsl #3
    eba0:	mov	x1, x21
    eba4:	ldrb	w0, [x2]
    eba8:	orr	w0, w0, #0x18
    ebac:	strb	w0, [x2], #8
    ebb0:	add	x1, x1, #0x1
    ebb4:	cmp	x20, x1
    ebb8:	b.cs	eba4 <gcc_cp_fe_context@@Base+0x5474>  // b.hs, b.nlast
    ebbc:	b	eb80 <gcc_cp_fe_context@@Base+0x5450>
    ebc0:	cmp	w0, #0x5
    ebc4:	cset	w2, eq  // eq = none
    ebc8:	ldr	x1, [x29, #304]
    ebcc:	ldr	x3, [x29, #344]
    ebd0:	cmp	x24, x25
    ebd4:	b.ne	ebec <gcc_cp_fe_context@@Base+0x54bc>  // b.any
    ebd8:	cmp	x1, x25
    ebdc:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    ebe0:	mov	x25, x1
    ebe4:	mov	x24, x3
    ebe8:	b	ebd0 <gcc_cp_fe_context@@Base+0x54a0>
    ebec:	ldr	x3, [x29, #216]
    ebf0:	cbz	x3, ec54 <gcc_cp_fe_context@@Base+0x5524>
    ebf4:	ldrb	w1, [x24]
    ebf8:	ldrb	w1, [x3, x1]
    ebfc:	ldrb	w3, [x26, #1]
    ec00:	cmp	w1, w3, lsl #3
    ec04:	b.cs	ec2c <gcc_cp_fe_context@@Base+0x54fc>  // b.hs, b.nlast
    ec08:	lsr	w4, w1, #3
    ec0c:	add	w4, w4, #0x1
    ec10:	ldr	x5, [x29, #368]
    ec14:	ldrb	w4, [x5, w4, sxtw]
    ec18:	and	w1, w1, #0x7
    ec1c:	asr	w1, w4, w1
    ec20:	tbz	w1, #0, ec2c <gcc_cp_fe_context@@Base+0x54fc>
    ec24:	cmp	w0, #0x5
    ec28:	cset	w2, ne  // ne = any
    ec2c:	cbz	w2, ff40 <gcc_cp_fe_context@@Base+0x6810>
    ec30:	ldr	w0, [x29, #336]
    ec34:	cbz	w0, ec5c <gcc_cp_fe_context@@Base+0x552c>
    ec38:	add	w3, w3, #0x1
    ec3c:	ldr	x0, [x29, #368]
    ec40:	add	x26, x0, w3, sxtw
    ec44:	add	x24, x24, #0x1
    ec48:	mov	w0, #0x1                   	// #1
    ec4c:	str	w0, [x29, #336]
    ec50:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    ec54:	ldrb	w1, [x24]
    ec58:	b	ebfc <gcc_cp_fe_context@@Base+0x54cc>
    ec5c:	cmp	x21, x20
    ec60:	b.hi	ec38 <gcc_cp_fe_context@@Base+0x5508>  // b.pmore
    ec64:	add	x2, x28, x21, lsl #3
    ec68:	mov	x1, x21
    ec6c:	ldrb	w0, [x2]
    ec70:	orr	w0, w0, #0x18
    ec74:	strb	w0, [x2], #8
    ec78:	add	x1, x1, #0x1
    ec7c:	cmp	x20, x1
    ec80:	b.cs	ec6c <gcc_cp_fe_context@@Base+0x553c>  // b.hs, b.nlast
    ec84:	b	ec38 <gcc_cp_fe_context@@Base+0x5508>
    ec88:	ldr	x0, [x29, #368]
    ec8c:	str	x0, [x29, #392]
    ec90:	ldrb	w0, [x26, #1]
    ec94:	lsl	x0, x0, #3
    ec98:	ldrb	w0, [x28, x0]
    ec9c:	and	w0, w0, #0x3
    eca0:	cmp	w0, #0x3
    eca4:	b.eq	ed20 <gcc_cp_fe_context@@Base+0x55f0>  // b.none
    eca8:	ldrb	w0, [x26, #1]
    ecac:	lsl	x2, x0, #3
    ecb0:	add	x1, x28, x2
    ecb4:	ldrb	w2, [x28, x2]
    ecb8:	tst	x2, #0x3
    ecbc:	b.eq	ed48 <gcc_cp_fe_context@@Base+0x5618>  // b.none
    ecc0:	ldr	x2, [x22, x0, lsl #3]
    ecc4:	adrp	x3, 2b000 <xexit@@Base+0x15c24>
    ecc8:	add	x3, x3, #0x5f8
    eccc:	add	x3, x3, #0x100
    ecd0:	cmp	x2, x3
    ecd4:	csel	x2, x2, x24, ne  // ne = any
    ecd8:	ldr	x3, [x29, #232]
    ecdc:	str	x2, [x3, x0, lsl #3]
    ece0:	str	x24, [x22, x0, lsl #3]
    ece4:	ldrb	w0, [x1]
    ece8:	orr	w0, w0, #0x4
    ecec:	strb	w0, [x1]
    ecf0:	ldrb	w0, [x26, #1]
    ecf4:	lsl	x0, x0, #3
    ecf8:	ldrb	w1, [x28, x0]
    ecfc:	and	w1, w1, #0xfffffff7
    ed00:	strb	w1, [x28, x0]
    ed04:	ldrb	w20, [x26, #1]
    ed08:	cmp	x21, #0x101
    ed0c:	csel	x21, x21, x20, ne  // ne = any
    ed10:	add	x26, x26, #0x3
    ed14:	str	x26, [x29, #208]
    ed18:	str	wzr, [x29, #336]
    ed1c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    ed20:	mov	x2, x28
    ed24:	ldr	x1, [x29, #376]
    ed28:	add	x0, x29, #0x188
    ed2c:	bl	dd90 <gcc_cp_fe_context@@Base+0x4660>
    ed30:	ldrb	w1, [x26, #1]
    ed34:	lsl	x1, x1, #3
    ed38:	ldrb	w2, [x28, x1]
    ed3c:	bfxil	w2, w0, #0, #2
    ed40:	strb	w2, [x28, x1]
    ed44:	b	eca8 <gcc_cp_fe_context@@Base+0x5578>
    ed48:	ldr	x2, [x22, x0, lsl #3]
    ed4c:	b	ecd8 <gcc_cp_fe_context@@Base+0x55a8>
    ed50:	ldrb	w0, [x26, #1]
    ed54:	lsl	x2, x0, #3
    ed58:	add	x1, x28, x2
    ed5c:	ldrb	w2, [x28, x2]
    ed60:	tst	x2, #0x3
    ed64:	b.eq	eedc <gcc_cp_fe_context@@Base+0x57ac>  // b.none
    ed68:	ldr	x2, [x23, x0, lsl #3]
    ed6c:	adrp	x3, 2b000 <xexit@@Base+0x15c24>
    ed70:	add	x3, x3, #0x5f8
    ed74:	add	x3, x3, #0x100
    ed78:	cmp	x2, x3
    ed7c:	csel	x2, x2, x24, ne  // ne = any
    ed80:	ldr	x3, [x29, #224]
    ed84:	str	x2, [x3, x0, lsl #3]
    ed88:	str	x24, [x23, x0, lsl #3]
    ed8c:	ldrb	w0, [x1]
    ed90:	and	w0, w0, #0xfffffffb
    ed94:	strb	w0, [x1]
    ed98:	cmp	x21, x20
    ed9c:	b.ne	eee4 <gcc_cp_fe_context@@Base+0x57b4>  // b.any
    eda0:	mov	x20, #0x100                 	// #256
    eda4:	mov	x21, #0x101                 	// #257
    eda8:	ldrb	w0, [x26, #1]
    edac:	lsl	x0, x0, #3
    edb0:	ldrb	w0, [x28, x0]
    edb4:	tst	x0, #0x8
    edb8:	ldr	x0, [x29, #208]
    edbc:	ccmp	x26, x0, #0x4, ne  // ne = any
    edc0:	b.ne	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.any
    edc4:	add	x0, x26, #0x3
    edc8:	ldr	x1, [x29, #376]
    edcc:	cmp	x1, x0
    edd0:	b.ls	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.plast
    edd4:	add	x0, x26, #0x4
    edd8:	str	x0, [x29, #392]
    eddc:	ldrb	w0, [x26, #3]
    ede0:	cmp	w0, #0x13
    ede4:	b.ls	ef40 <gcc_cp_fe_context@@Base+0x5810>  // b.plast
    ede8:	cmp	w0, #0x16
    edec:	b.ne	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.any
    edf0:	ldrsb	w0, [x26, #5]
    edf4:	ldrb	w1, [x26, #4]
    edf8:	add	w0, w1, w0, lsl #8
    edfc:	add	x1, x26, #0x8
    ee00:	str	x1, [x29, #392]
    ee04:	ldr	x1, [x29, #392]
    ee08:	add	x4, x1, w0, sxtw
    ee0c:	str	x4, [x29, #392]
    ee10:	tbz	w0, #31, ef50 <gcc_cp_fe_context@@Base+0x5820>
    ee14:	ldrb	w0, [x1, w0, sxtw]
    ee18:	cmp	w0, #0xf
    ee1c:	b.ne	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.any
    ee20:	ldrb	w0, [x4, #3]
    ee24:	cmp	w0, #0x6
    ee28:	b.ne	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.any
    ee2c:	ldrb	w0, [x26, #1]
    ee30:	ldrb	w1, [x4, #4]
    ee34:	cmp	w1, w0
    ee38:	b.ne	ef50 <gcc_cp_fe_context@@Base+0x5820>  // b.any
    ee3c:	ubfiz	x0, x0, #3, #8
    ee40:	ldrb	w1, [x28, x0]
    ee44:	tbnz	w1, #4, ef74 <gcc_cp_fe_context@@Base+0x5844>
    ee48:	add	x0, x4, #0x1
    ee4c:	str	x0, [x29, #392]
    ee50:	ldrb	w0, [x4, #1]
    ee54:	str	w0, [x29, #368]
    ee58:	ldrb	w0, [x4, #2]
    ee5c:	str	w0, [x29, #336]
    ee60:	add	x26, x4, #0x3
    ee64:	str	x26, [x29, #392]
    ee68:	add	x0, x20, #0x1
    ee6c:	sub	x0, x0, x21
    ee70:	add	x0, x0, x0, lsl #1
    ee74:	add	x0, x0, #0x4
    ee78:	str	x0, [x29, #144]
    ee7c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
    ee80:	ldr	x0, [x0, #3952]
    ee84:	str	x0, [x29, #136]
    ee88:	ldr	w2, [x29, #284]
    ee8c:	mov	x1, x19
    ee90:	sub	w0, w2, w27
    ee94:	ldr	x3, [x29, #144]
    ee98:	cmp	x0, x3
    ee9c:	b.cs	efcc <gcc_cp_fe_context@@Base+0x589c>  // b.hs, b.nlast
    eea0:	ldr	x0, [x29, #136]
    eea4:	ldr	w0, [x0]
    eea8:	mov	w3, #0x13                  	// #19
    eeac:	mul	w0, w0, w3
    eeb0:	cmp	w0, w2
    eeb4:	b.cc	101c0 <gcc_cp_fe_context@@Base+0x6a90>  // b.lo, b.ul, b.last
    eeb8:	lsl	w19, w2, #1
    eebc:	ubfiz	x0, x2, #4, #31
    eec0:	sub	sp, sp, x0
    eec4:	ubfiz	x2, x2, #3, #32
    eec8:	mov	x0, sp
    eecc:	bl	52b0 <memcpy@plt>
    eed0:	mov	x1, x0
    eed4:	mov	w2, w19
    eed8:	b	ee90 <gcc_cp_fe_context@@Base+0x5760>
    eedc:	ldr	x2, [x23, x0, lsl #3]
    eee0:	b	ed80 <gcc_cp_fe_context@@Base+0x5650>
    eee4:	ldrb	w0, [x26, #1]
    eee8:	sub	w0, w0, #0x1
    eeec:	ands	w0, w0, #0xff
    eef0:	b.eq	ef28 <gcc_cp_fe_context@@Base+0x57f8>  // b.none
    eef4:	add	x1, x28, w0, uxtb #3
    eef8:	ldrb	w2, [x1]
    eefc:	tbnz	w2, #2, ef1c <gcc_cp_fe_context@@Base+0x57ec>
    ef00:	sub	w0, w0, #0x1
    ef04:	sub	x1, x1, #0x8
    ef08:	ands	w0, w0, #0xff
    ef0c:	b.ne	eef8 <gcc_cp_fe_context@@Base+0x57c8>  // b.any
    ef10:	mov	x20, #0x100                 	// #256
    ef14:	mov	x21, #0x101                 	// #257
    ef18:	b	eda8 <gcc_cp_fe_context@@Base+0x5678>
    ef1c:	cbz	w0, ef34 <gcc_cp_fe_context@@Base+0x5804>
    ef20:	and	x20, x0, #0xff
    ef24:	b	eda8 <gcc_cp_fe_context@@Base+0x5678>
    ef28:	mov	x20, #0x100                 	// #256
    ef2c:	mov	x21, #0x101                 	// #257
    ef30:	b	eda8 <gcc_cp_fe_context@@Base+0x5678>
    ef34:	mov	x20, #0x100                 	// #256
    ef38:	mov	x21, #0x101                 	// #257
    ef3c:	b	eda8 <gcc_cp_fe_context@@Base+0x5678>
    ef40:	cmp	w0, #0x10
    ef44:	b.hi	ef5c <gcc_cp_fe_context@@Base+0x582c>  // b.pmore
    ef48:	cmp	w0, #0xd
    ef4c:	b.eq	ef5c <gcc_cp_fe_context@@Base+0x582c>  // b.none
    ef50:	add	x26, x26, #0x3
    ef54:	str	wzr, [x29, #336]
    ef58:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    ef5c:	ldrsb	w0, [x26, #5]
    ef60:	ldrb	w1, [x26, #4]
    ef64:	add	w0, w1, w0, lsl #8
    ef68:	add	x1, x26, #0x6
    ef6c:	str	x1, [x29, #392]
    ef70:	b	ee04 <gcc_cp_fe_context@@Base+0x56d4>
    ef74:	ldrb	w1, [x28, x0]
    ef78:	and	w1, w1, #0xffffffef
    ef7c:	strb	w1, [x28, x0]
    ef80:	ldrb	w0, [x26, #1]
    ef84:	ldrb	w1, [x26, #2]
    ef88:	add	w1, w1, w0
    ef8c:	cmp	w0, w1
    ef90:	b.cs	ee48 <gcc_cp_fe_context@@Base+0x5718>  // b.hs, b.nlast
    ef94:	and	x0, x0, #0xff
    ef98:	ldr	x5, [x29, #232]
    ef9c:	b	efac <gcc_cp_fe_context@@Base+0x587c>
    efa0:	add	x0, x0, #0x1
    efa4:	cmp	w1, w0
    efa8:	b.ls	ee48 <gcc_cp_fe_context@@Base+0x5718>  // b.plast
    efac:	ldr	x3, [x5, x0, lsl #3]
    efb0:	str	x3, [x22, x0, lsl #3]
    efb4:	ldr	x2, [x29, #224]
    efb8:	ldr	x2, [x2, x0, lsl #3]
    efbc:	cmp	x3, x2
    efc0:	b.hi	efa0 <gcc_cp_fe_context@@Base+0x5870>  // b.pmore
    efc4:	str	x2, [x23, x0, lsl #3]
    efc8:	b	efa0 <gcc_cp_fe_context@@Base+0x5870>
    efcc:	str	w2, [x29, #284]
    efd0:	mov	x19, x1
    efd4:	cmp	x21, x20
    efd8:	b.hi	f024 <gcc_cp_fe_context@@Base+0x58f4>  // b.pmore
    efdc:	mov	w1, w27
    efe0:	mov	x0, x21
    efe4:	ldr	x2, [x22, x0, lsl #3]
    efe8:	str	x2, [x19, w1, uxtw #3]
    efec:	add	w2, w1, #0x1
    eff0:	ldr	x3, [x23, x0, lsl #3]
    eff4:	str	x3, [x19, x2, lsl #3]
    eff8:	add	w2, w1, #0x2
    effc:	ldr	x3, [x28, x0, lsl #3]
    f000:	str	x3, [x19, x2, lsl #3]
    f004:	add	w1, w1, #0x3
    f008:	cmp	x20, x0
    f00c:	add	x0, x0, #0x1
    f010:	b.ne	efe4 <gcc_cp_fe_context@@Base+0x58b4>  // b.any
    f014:	sub	x0, x20, x21
    f018:	add	w0, w0, w0, lsl #1
    f01c:	add	w27, w27, #0x3
    f020:	add	w27, w0, w27
    f024:	ubfiz	x0, x27, #3, #32
    f028:	str	w21, [x19, x0]
    f02c:	add	w0, w27, #0x1
    f030:	lsl	x0, x0, #3
    f034:	str	w20, [x19, x0]
    f038:	add	w1, w27, #0x3
    f03c:	add	w2, w27, #0x2
    f040:	ldrb	w0, [x29, #336]
    f044:	sbfiz	w0, w0, #8, #8
    f048:	ldr	w3, [x29, #368]
    f04c:	add	w0, w0, w3
    f050:	add	x0, x26, w0, sxtw
    f054:	str	x0, [x19, x2, lsl #3]
    f058:	mov	w0, w1
    f05c:	str	x24, [x19, w0, uxtw #3]
    f060:	add	w27, w27, #0x4
    f064:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f068:	ldrb	w1, [x26, #1]
    f06c:	ldr	x3, [x22, x1, lsl #3]
    f070:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    f074:	add	x0, x0, #0x5f8
    f078:	add	x0, x0, #0x100
    f07c:	cmp	x3, x0
    f080:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    f084:	ldr	x2, [x23, x1, lsl #3]
    f088:	str	x2, [x29, #368]
    f08c:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    f090:	add	x0, x0, #0x5f8
    f094:	add	x0, x0, #0x100
    f098:	cmp	x2, x0
    f09c:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    f0a0:	ldr	x1, [x29, #352]
    f0a4:	cmp	x3, x1
    f0a8:	ldr	x4, [x29, #360]
    f0ac:	ccmp	x3, x4, #0x0, ls  // ls = plast
    f0b0:	cset	w0, cs  // cs = hs, nlast
    f0b4:	cmp	x2, x1
    f0b8:	ccmp	x2, x4, #0x0, ls  // ls = plast
    f0bc:	cset	w1, cs  // cs = hs, nlast
    f0c0:	eor	w0, w0, w1
    f0c4:	ldr	w1, [x29, #340]
    f0c8:	cmp	w1, #0x0
    f0cc:	csel	w0, w0, wzr, ne  // ne = any
    f0d0:	cmp	w0, #0x0
    f0d4:	ldr	x0, [x29, #328]
    f0d8:	csel	x0, x0, x2, ne  // ne = any
    f0dc:	add	x1, x28, x21, lsl #3
    f0e0:	str	x1, [x29, #112]
    f0e4:	str	x2, [x29, #104]
    f0e8:	str	x19, [x29, #144]
    f0ec:	str	x26, [x29, #96]
    f0f0:	mov	x19, x21
    f0f4:	ldr	x21, [x29, #304]
    f0f8:	str	x22, [x29, #136]
    f0fc:	str	x23, [x29, #128]
    f100:	mov	x26, x3
    f104:	mov	x22, x0
    f108:	ldr	x23, [x29, #216]
    f10c:	cmp	x21, x22
    f110:	ccmp	x26, x22, #0x0, ne  // ne = any
    f114:	ldr	x0, [x29, #368]
    f118:	ccmp	x0, x22, #0x4, eq  // eq = none
    f11c:	b.ne	f148 <gcc_cp_fe_context@@Base+0x5a18>  // b.any
    f120:	cmp	x26, x22
    f124:	b.eq	f154 <gcc_cp_fe_context@@Base+0x5a24>  // b.none
    f128:	ldr	x0, [x29, #344]
    f12c:	cmp	x24, x25
    f130:	b.ne	f170 <gcc_cp_fe_context@@Base+0x5a40>  // b.any
    f134:	cmp	x21, x25
    f138:	b.eq	ff34 <gcc_cp_fe_context@@Base+0x6804>  // b.none
    f13c:	mov	x25, x21
    f140:	mov	x24, x0
    f144:	b	f12c <gcc_cp_fe_context@@Base+0x59fc>
    f148:	ldr	x22, [x29, #104]
    f14c:	ldr	x26, [x29, #344]
    f150:	b	f10c <gcc_cp_fe_context@@Base+0x59dc>
    f154:	ldr	x26, [x29, #96]
    f158:	mov	x21, x19
    f15c:	ldr	x19, [x29, #144]
    f160:	ldr	x22, [x29, #136]
    f164:	ldr	x23, [x29, #128]
    f168:	add	x26, x26, #0x2
    f16c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f170:	sub	x0, x25, x24
    f174:	sub	x1, x22, x26
    f178:	cmp	x1, w0, sxtw
    f17c:	csel	w0, w0, w1, ge  // ge = tcont
    f180:	str	w0, [x29, #124]
    f184:	cbz	x23, f200 <gcc_cp_fe_context@@Base+0x5ad0>
    f188:	cbz	w0, f1c8 <gcc_cp_fe_context@@Base+0x5a98>
    f18c:	sub	w3, w0, #0x1
    f190:	mov	x0, #0x0                   	// #0
    f194:	b	f19c <gcc_cp_fe_context@@Base+0x5a6c>
    f198:	mov	x0, x1
    f19c:	ldrb	w2, [x24, x0]
    f1a0:	ldrb	w1, [x26, x0]
    f1a4:	ldrb	w2, [x23, x2]
    f1a8:	ldrb	w1, [x23, x1]
    f1ac:	cmp	w2, w1
    f1b0:	b.ne	f1d0 <gcc_cp_fe_context@@Base+0x5aa0>  // b.any
    f1b4:	add	x1, x0, #0x1
    f1b8:	cmp	x0, x3
    f1bc:	b.ne	f198 <gcc_cp_fe_context@@Base+0x5a68>  // b.any
    f1c0:	mov	w0, #0x0                   	// #0
    f1c4:	b	f1d4 <gcc_cp_fe_context@@Base+0x5aa4>
    f1c8:	ldr	w0, [x29, #124]
    f1cc:	b	f1d4 <gcc_cp_fe_context@@Base+0x5aa4>
    f1d0:	mov	w0, #0x1                   	// #1
    f1d4:	cmp	w0, #0x0
    f1d8:	cset	w0, ne  // ne = any
    f1dc:	cbnz	w0, ff4c <gcc_cp_fe_context@@Base+0x681c>
    f1e0:	ldrsw	x0, [x29, #124]
    f1e4:	add	x24, x24, x0
    f1e8:	add	x26, x26, x0
    f1ec:	ldr	w0, [x29, #336]
    f1f0:	cbz	w0, f21c <gcc_cp_fe_context@@Base+0x5aec>
    f1f4:	mov	w0, #0x1                   	// #1
    f1f8:	str	w0, [x29, #336]
    f1fc:	b	f10c <gcc_cp_fe_context@@Base+0x59dc>
    f200:	ldrsw	x2, [x29, #124]
    f204:	mov	x1, x26
    f208:	mov	x0, x24
    f20c:	bl	5410 <memcmp@plt>
    f210:	cmp	w0, #0x0
    f214:	cset	w0, ne  // ne = any
    f218:	b	f1dc <gcc_cp_fe_context@@Base+0x5aac>
    f21c:	cmp	x19, x20
    f220:	b.hi	f1f4 <gcc_cp_fe_context@@Base+0x5ac4>  // b.pmore
    f224:	ldr	x2, [x29, #112]
    f228:	mov	x1, x19
    f22c:	ldrb	w0, [x2]
    f230:	orr	w0, w0, #0x18
    f234:	strb	w0, [x2], #8
    f238:	add	x1, x1, #0x1
    f23c:	cmp	x20, x1
    f240:	b.cs	f22c <gcc_cp_fe_context@@Base+0x5afc>  // b.hs, b.nlast
    f244:	b	f1f4 <gcc_cp_fe_context@@Base+0x5ac4>
    f248:	ldr	w0, [x29, #324]
    f24c:	cmp	w0, #0x0
    f250:	ldr	x0, [x29, #264]
    f254:	ccmp	x24, x0, #0x4, ne  // ne = any
    f258:	b.ne	f270 <gcc_cp_fe_context@@Base+0x5b40>  // b.any
    f25c:	ldr	x0, [x29, #248]
    f260:	ldrb	w0, [x0, #56]
    f264:	ldr	x26, [x29, #368]
    f268:	tbz	w0, #5, 10074 <gcc_cp_fe_context@@Base+0x6944>
    f26c:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f270:	ldurb	w0, [x24, #-1]
    f274:	cmp	w0, #0xa
    f278:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    f27c:	ldr	x0, [x29, #248]
    f280:	ldrsb	w0, [x0, #56]
    f284:	ldr	x26, [x29, #368]
    f288:	tbnz	w0, #31, 10074 <gcc_cp_fe_context@@Base+0x6944>
    f28c:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f290:	ldr	x0, [x29, #272]
    f294:	cmp	x24, x0
    f298:	b.eq	f2cc <gcc_cp_fe_context@@Base+0x5b9c>  // b.none
    f29c:	ldr	x0, [x29, #352]
    f2a0:	cmp	x24, x0
    f2a4:	b.eq	f2e4 <gcc_cp_fe_context@@Base+0x5bb4>  // b.none
    f2a8:	ldrb	w0, [x24]
    f2ac:	cmp	w0, #0xa
    f2b0:	cset	w0, eq  // eq = none
    f2b4:	cbz	w0, ff40 <gcc_cp_fe_context@@Base+0x6810>
    f2b8:	ldr	x0, [x29, #248]
    f2bc:	ldrsb	w0, [x0, #56]
    f2c0:	ldr	x26, [x29, #368]
    f2c4:	tbnz	w0, #31, 10074 <gcc_cp_fe_context@@Base+0x6944>
    f2c8:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f2cc:	ldr	x0, [x29, #248]
    f2d0:	ldrb	w0, [x0, #56]
    f2d4:	ldr	x26, [x29, #368]
    f2d8:	ldr	x24, [x29, #272]
    f2dc:	tbz	w0, #6, 10074 <gcc_cp_fe_context@@Base+0x6944>
    f2e0:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f2e4:	ldr	x0, [x29, #344]
    f2e8:	ldrb	w0, [x0]
    f2ec:	cmp	w0, #0xa
    f2f0:	cset	w0, eq  // eq = none
    f2f4:	b	f2b4 <gcc_cp_fe_context@@Base+0x5b84>
    f2f8:	ldr	w0, [x29, #324]
    f2fc:	cmp	w0, #0x0
    f300:	ldr	x26, [x29, #368]
    f304:	ldr	x0, [x29, #264]
    f308:	ccmp	x24, x0, #0x4, ne  // ne = any
    f30c:	b.eq	10074 <gcc_cp_fe_context@@Base+0x6944>  // b.none
    f310:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    f314:	ldr	x0, [x29, #272]
    f318:	cmp	x24, x0
    f31c:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    f320:	ldr	x26, [x29, #368]
    f324:	ldr	x24, [x29, #272]
    f328:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f32c:	ldrb	w0, [x26, #1]
    f330:	str	w0, [x29, #368]
    f334:	ldrb	w0, [x26, #2]
    f338:	str	w0, [x29, #144]
    f33c:	add	x0, x20, #0x1
    f340:	sub	x0, x0, x21
    f344:	add	x0, x0, x0, lsl #1
    f348:	add	x0, x0, #0x4
    f34c:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
    f350:	ldr	x3, [x1, #3952]
    f354:	ldr	w2, [x29, #284]
    f358:	mov	x1, x19
    f35c:	str	x24, [x29, #136]
    f360:	str	x20, [x29, #128]
    f364:	mov	x20, x0
    f368:	mov	x19, x3
    f36c:	b	f390 <gcc_cp_fe_context@@Base+0x5c60>
    f370:	lsl	w24, w2, #1
    f374:	ubfiz	x0, x2, #4, #31
    f378:	sub	sp, sp, x0
    f37c:	ubfiz	x2, x2, #3, #32
    f380:	mov	x0, sp
    f384:	bl	52b0 <memcpy@plt>
    f388:	mov	x1, x0
    f38c:	mov	w2, w24
    f390:	sub	w0, w2, w27
    f394:	cmp	x0, x20
    f398:	b.cs	f3b8 <gcc_cp_fe_context@@Base+0x5c88>  // b.hs, b.nlast
    f39c:	ldr	w3, [x19]
    f3a0:	mov	w0, #0x13                  	// #19
    f3a4:	mul	w3, w3, w0
    f3a8:	cmp	w3, w2
    f3ac:	b.cs	f370 <gcc_cp_fe_context@@Base+0x5c40>  // b.hs, b.nlast
    f3b0:	mov	w0, #0xfffffffe            	// #-2
    f3b4:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
    f3b8:	str	w2, [x29, #284]
    f3bc:	mov	x19, x1
    f3c0:	ldr	x24, [x29, #136]
    f3c4:	ldr	x20, [x29, #128]
    f3c8:	cmp	x21, x20
    f3cc:	b.hi	f404 <gcc_cp_fe_context@@Base+0x5cd4>  // b.pmore
    f3d0:	mov	x0, x21
    f3d4:	ldr	x1, [x22, x0, lsl #3]
    f3d8:	str	x1, [x19, w27, uxtw #3]
    f3dc:	add	w1, w27, #0x2
    f3e0:	add	w2, w27, #0x1
    f3e4:	ldr	x3, [x23, x0, lsl #3]
    f3e8:	str	x3, [x19, x2, lsl #3]
    f3ec:	ldr	x2, [x28, x0, lsl #3]
    f3f0:	str	x2, [x19, w1, uxtw #3]
    f3f4:	add	w27, w27, #0x3
    f3f8:	add	x0, x0, #0x1
    f3fc:	cmp	x20, x0
    f400:	b.cs	f3d4 <gcc_cp_fe_context@@Base+0x5ca4>  // b.hs, b.nlast
    f404:	add	x26, x26, #0x3
    f408:	ubfiz	x0, x27, #3, #32
    f40c:	str	w21, [x19, x0]
    f410:	add	w0, w27, #0x1
    f414:	lsl	x0, x0, #3
    f418:	str	w20, [x19, x0]
    f41c:	add	w1, w27, #0x3
    f420:	add	w2, w27, #0x2
    f424:	ldrb	w0, [x29, #144]
    f428:	sbfiz	w0, w0, #8, #8
    f42c:	ldr	w3, [x29, #368]
    f430:	add	w0, w0, w3
    f434:	add	x0, x26, w0, sxtw
    f438:	str	x0, [x19, x2, lsl #3]
    f43c:	mov	w0, w1
    f440:	str	xzr, [x19, w0, uxtw #3]
    f444:	add	w27, w27, #0x4
    f448:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f44c:	ldr	x1, [x29, #376]
    f450:	cmp	x1, x0
    f454:	b.ls	f9ac <gcc_cp_fe_context@@Base+0x627c>  // b.plast
    f458:	ldrb	w1, [x0]
    f45c:	cmp	w1, #0x6
    f460:	b.ne	f9ac <gcc_cp_fe_context@@Base+0x627c>  // b.any
    f464:	ldrb	w1, [x0, #1]
    f468:	ldrb	w0, [x0, #2]
    f46c:	add	w0, w0, w1
    f470:	sxtw	x20, w0
    f474:	and	x1, x1, #0xff
    f478:	cmp	x21, #0x101
    f47c:	csel	x21, x1, x21, eq  // eq = none
    f480:	b	f9ac <gcc_cp_fe_context@@Base+0x627c>
    f484:	str	w2, [x29, #284]
    f488:	mov	x19, x1
    f48c:	ldr	x24, [x29, #136]
    f490:	ldr	x20, [x29, #128]
    f494:	cmp	x20, x21
    f498:	b.cc	f4d0 <gcc_cp_fe_context@@Base+0x5da0>  // b.lo, b.ul, b.last
    f49c:	mov	x0, x21
    f4a0:	ldr	x1, [x22, x0, lsl #3]
    f4a4:	str	x1, [x19, w27, uxtw #3]
    f4a8:	add	w1, w27, #0x2
    f4ac:	add	w2, w27, #0x1
    f4b0:	ldr	x3, [x23, x0, lsl #3]
    f4b4:	str	x3, [x19, x2, lsl #3]
    f4b8:	ldr	x2, [x28, x0, lsl #3]
    f4bc:	str	x2, [x19, w1, uxtw #3]
    f4c0:	add	w27, w27, #0x3
    f4c4:	add	x0, x0, #0x1
    f4c8:	cmp	x20, x0
    f4cc:	b.cs	f4a0 <gcc_cp_fe_context@@Base+0x5d70>  // b.hs, b.nlast
    f4d0:	ubfiz	x0, x27, #3, #32
    f4d4:	str	w21, [x19, x0]
    f4d8:	add	w0, w27, #0x1
    f4dc:	lsl	x0, x0, #3
    f4e0:	str	w20, [x19, x0]
    f4e4:	add	w1, w27, #0x3
    f4e8:	add	w2, w27, #0x2
    f4ec:	ldrb	w0, [x29, #144]
    f4f0:	sbfiz	w0, w0, #8, #8
    f4f4:	ldr	w3, [x29, #368]
    f4f8:	add	w0, w0, w3
    f4fc:	add	x0, x26, w0, sxtw
    f500:	str	x0, [x19, x2, lsl #3]
    f504:	mov	w0, w1
    f508:	str	x24, [x19, w0, uxtw #3]
    f50c:	add	w27, w27, #0x4
    f510:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f514:	ldrsb	w4, [x26, #2]
    f518:	ldrb	w0, [x26, #1]
    f51c:	add	w4, w0, w4, lsl #8
    f520:	add	x5, x26, #0x3
    f524:	mov	x0, x5
    f528:	ldr	x3, [x29, #376]
    f52c:	b	f54c <gcc_cp_fe_context@@Base+0x5e1c>
    f530:	add	x1, x0, #0x6
    f534:	cmp	x1, x3
    f538:	b.cs	f574 <gcc_cp_fe_context@@Base+0x5e44>  // b.hs, b.nlast
    f53c:	ldrb	w6, [x0]
    f540:	cmp	w6, #0x13
    f544:	b.ne	f574 <gcc_cp_fe_context@@Base+0x5e44>  // b.any
    f548:	mov	x0, x1
    f54c:	add	x2, x0, #0x2
    f550:	cmp	x2, x3
    f554:	b.cs	f530 <gcc_cp_fe_context@@Base+0x5e00>  // b.hs, b.nlast
    f558:	ldrb	w1, [x0]
    f55c:	sub	w1, w1, #0x6
    f560:	and	w1, w1, #0xff
    f564:	cmp	w1, #0x1
    f568:	b.hi	f530 <gcc_cp_fe_context@@Base+0x5e00>  // b.pmore
    f56c:	add	x1, x0, #0x3
    f570:	b	f548 <gcc_cp_fe_context@@Base+0x5e18>
    f574:	add	x4, x5, w4, sxtw
    f578:	str	x4, [x29, #392]
    f57c:	ldr	x1, [x29, #376]
    f580:	cmp	x0, x1
    f584:	b.eq	f5c8 <gcc_cp_fe_context@@Base+0x5e98>  // b.none
    f588:	ldrb	w1, [x0]
    f58c:	cmp	w1, #0x2
    f590:	b.eq	f640 <gcc_cp_fe_context@@Base+0x5f10>  // b.none
    f594:	ldr	x3, [x29, #248]
    f598:	ldrsb	w3, [x3, #56]
    f59c:	cmp	w3, #0x0
    f5a0:	ccmp	w1, #0xa, #0x0, lt  // lt = tstop
    f5a4:	b.eq	f6a4 <gcc_cp_fe_context@@Base+0x5f74>  // b.none
    f5a8:	cmp	w1, #0x4
    f5ac:	b.eq	f6c4 <gcc_cp_fe_context@@Base+0x5f94>  // b.none
    f5b0:	ldrb	w0, [x26]
    f5b4:	cmp	w0, #0x11
    f5b8:	b.eq	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>  // b.none
    f5bc:	mov	w0, #0xd                   	// #13
    f5c0:	strb	w0, [x26]
    f5c4:	b	f628 <gcc_cp_fe_context@@Base+0x5ef8>
    f5c8:	mov	w0, #0x11                  	// #17
    f5cc:	strb	w0, [x26]
    f5d0:	sub	w0, w27, #0x3
    f5d4:	lsl	x0, x0, #3
    f5d8:	ldrsw	x0, [x19, x0]
    f5dc:	sub	w1, w27, #0x4
    f5e0:	ubfiz	x2, x1, #3, #32
    f5e4:	ldrsw	x3, [x19, x2]
    f5e8:	cmp	x0, x3
    f5ec:	b.cc	f7e4 <gcc_cp_fe_context@@Base+0x60b4>  // b.lo, b.ul, b.last
    f5f0:	sub	w1, w27, #0x7
    f5f4:	ldr	x4, [x29, #168]
    f5f8:	ldr	x5, [x29, #160]
    f5fc:	add	w2, w1, #0x2
    f600:	ldr	x2, [x19, x2, lsl #3]
    f604:	str	x2, [x5, x0, lsl #3]
    f608:	ldr	x2, [x19, w1, uxtw #3]
    f60c:	str	x2, [x4, x0, lsl #3]
    f610:	sub	x0, x0, #0x1
    f614:	mov	w27, w1
    f618:	sub	w1, w1, #0x3
    f61c:	cmp	x3, x0
    f620:	b.ls	f5fc <gcc_cp_fe_context@@Base+0x5ecc>  // b.plast
    f624:	str	wzr, [x29, #336]
    f628:	add	x1, x26, #0x3
    f62c:	ldrsb	w0, [x26, #2]
    f630:	ldrb	w26, [x26, #1]
    f634:	add	w26, w26, w0, lsl #8
    f638:	add	x26, x1, w26, sxtw
    f63c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f640:	ldrb	w0, [x0, #2]
    f644:	ldrb	w1, [x4, #3]
    f648:	cmp	w1, #0x2
    f64c:	b.eq	f6ac <gcc_cp_fe_context@@Base+0x5f7c>  // b.none
    f650:	sub	w2, w1, #0x4
    f654:	and	w2, w2, #0xff
    f658:	cmp	w2, #0x1
    f65c:	b.hi	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.pmore
    f660:	cmp	w1, #0x5
    f664:	cset	w3, eq  // eq = none
    f668:	ldrb	w2, [x4, #4]
    f66c:	cmp	w0, w2, lsl #3
    f670:	b.cs	f694 <gcc_cp_fe_context@@Base+0x5f64>  // b.hs, b.nlast
    f674:	lsr	w2, w0, #3
    f678:	add	w2, w2, #0x5
    f67c:	ldrb	w2, [x4, w2, sxtw]
    f680:	and	w0, w0, #0x7
    f684:	asr	w0, w2, w0
    f688:	tbz	w0, #0, f694 <gcc_cp_fe_context@@Base+0x5f64>
    f68c:	cmp	w1, #0x5
    f690:	cset	w3, ne  // ne = any
    f694:	cbnz	w3, f5b0 <gcc_cp_fe_context@@Base+0x5e80>
    f698:	mov	w0, #0x11                  	// #17
    f69c:	strb	w0, [x26]
    f6a0:	b	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>
    f6a4:	mov	w0, #0xa                   	// #10
    f6a8:	b	f644 <gcc_cp_fe_context@@Base+0x5f14>
    f6ac:	ldrb	w1, [x4, #5]
    f6b0:	cmp	w1, w0
    f6b4:	b.eq	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.none
    f6b8:	mov	w0, #0x11                  	// #17
    f6bc:	strb	w0, [x26]
    f6c0:	b	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>
    f6c4:	ldrb	w1, [x4, #3]
    f6c8:	cmp	w1, #0x2
    f6cc:	b.eq	f748 <gcc_cp_fe_context@@Base+0x6018>  // b.none
    f6d0:	cmp	w1, #0x5
    f6d4:	b.eq	f77c <gcc_cp_fe_context@@Base+0x604c>  // b.none
    f6d8:	cmp	w1, #0x4
    f6dc:	b.ne	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.any
    f6e0:	ldrb	w3, [x0, #1]
    f6e4:	cbz	w3, f7dc <gcc_cp_fe_context@@Base+0x60ac>
    f6e8:	ldrb	w7, [x4, #4]
    f6ec:	mov	x0, #0x0                   	// #0
    f6f0:	add	x6, x4, #0x5
    f6f4:	mov	w8, w0
    f6f8:	mov	w1, w0
    f6fc:	cmp	x0, x7
    f700:	b.eq	f728 <gcc_cp_fe_context@@Base+0x5ff8>  // b.none
    f704:	ldrb	w5, [x6, x0]
    f708:	ldrb	w9, [x2, x0]
    f70c:	and	w5, w5, w9
    f710:	tst	w5, #0xff
    f714:	b.ne	101e8 <gcc_cp_fe_context@@Base+0x6ab8>  // b.any
    f718:	add	w1, w8, #0x1
    f71c:	add	x0, x0, #0x1
    f720:	cmp	w3, w0
    f724:	b.gt	f6f4 <gcc_cp_fe_context@@Base+0x5fc4>
    f728:	cmp	w3, w1
    f72c:	b.eq	f73c <gcc_cp_fe_context@@Base+0x600c>  // b.none
    f730:	ldrb	w0, [x4, #4]
    f734:	cmp	w0, w1
    f738:	b.ne	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.any
    f73c:	mov	w0, #0x11                  	// #17
    f740:	strb	w0, [x26]
    f744:	b	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>
    f748:	ldrb	w1, [x4, #5]
    f74c:	ldrb	w2, [x0, #1]
    f750:	cmp	w1, w2, lsl #3
    f754:	b.ge	f770 <gcc_cp_fe_context@@Base+0x6040>  // b.tcont
    f758:	lsr	w2, w1, #3
    f75c:	add	w2, w2, #0x2
    f760:	ldrb	w0, [x0, w2, sxtw]
    f764:	and	w1, w1, #0x7
    f768:	asr	w1, w0, w1
    f76c:	tbnz	w1, #0, f5b0 <gcc_cp_fe_context@@Base+0x5e80>
    f770:	mov	w0, #0x11                  	// #17
    f774:	strb	w0, [x26]
    f778:	b	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>
    f77c:	ldrb	w1, [x0, #1]
    f780:	cbz	w1, f7d4 <gcc_cp_fe_context@@Base+0x60a4>
    f784:	mov	w0, #0x0                   	// #0
    f788:	b	f79c <gcc_cp_fe_context@@Base+0x606c>
    f78c:	add	w0, w0, #0x1
    f790:	add	x2, x2, #0x1
    f794:	cmp	w0, w1
    f798:	b.eq	f7c8 <gcc_cp_fe_context@@Base+0x6098>  // b.none
    f79c:	ldrb	w3, [x2]
    f7a0:	cbz	w3, f78c <gcc_cp_fe_context@@Base+0x605c>
    f7a4:	ldrb	w5, [x4, #4]
    f7a8:	cmp	w5, w0
    f7ac:	b.le	f7c0 <gcc_cp_fe_context@@Base+0x6090>
    f7b0:	add	w5, w0, #0x5
    f7b4:	ldrb	w5, [x4, w5, sxtw]
    f7b8:	bics	wzr, w3, w5
    f7bc:	b.eq	f78c <gcc_cp_fe_context@@Base+0x605c>  // b.none
    f7c0:	cmp	w1, w0
    f7c4:	b.ne	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.any
    f7c8:	mov	w0, #0x11                  	// #17
    f7cc:	strb	w0, [x26]
    f7d0:	b	f5d0 <gcc_cp_fe_context@@Base+0x5ea0>
    f7d4:	mov	w0, #0x0                   	// #0
    f7d8:	b	f7c0 <gcc_cp_fe_context@@Base+0x6090>
    f7dc:	mov	w1, #0x0                   	// #0
    f7e0:	b	f728 <gcc_cp_fe_context@@Base+0x5ff8>
    f7e4:	mov	w27, w1
    f7e8:	str	wzr, [x29, #336]
    f7ec:	b	f628 <gcc_cp_fe_context@@Base+0x5ef8>
    f7f0:	str	w2, [x29, #284]
    f7f4:	mov	x19, x1
    f7f8:	ldr	x24, [x29, #368]
    f7fc:	ldr	x25, [x29, #144]
    f800:	cmp	x21, x20
    f804:	b.hi	f83c <gcc_cp_fe_context@@Base+0x610c>  // b.pmore
    f808:	mov	x0, x21
    f80c:	ldr	x1, [x22, x0, lsl #3]
    f810:	str	x1, [x19, w27, uxtw #3]
    f814:	add	w1, w27, #0x2
    f818:	add	w2, w27, #0x1
    f81c:	ldr	x3, [x23, x0, lsl #3]
    f820:	str	x3, [x19, x2, lsl #3]
    f824:	ldr	x2, [x28, x0, lsl #3]
    f828:	str	x2, [x19, w1, uxtw #3]
    f82c:	add	w27, w27, #0x3
    f830:	add	x0, x0, #0x1
    f834:	cmp	x20, x0
    f838:	b.cs	f80c <gcc_cp_fe_context@@Base+0x60dc>  // b.hs, b.nlast
    f83c:	ubfiz	x0, x27, #3, #32
    f840:	str	w21, [x19, x0]
    f844:	add	w0, w27, #0x1
    f848:	lsl	x0, x0, #3
    f84c:	str	w20, [x19, x0]
    f850:	add	w0, w27, #0x3
    f854:	add	w1, w27, #0x2
    f858:	str	xzr, [x19, x1, lsl #3]
    f85c:	str	xzr, [x19, w0, uxtw #3]
    f860:	add	w27, w27, #0x4
    f864:	b	f628 <gcc_cp_fe_context@@Base+0x5ef8>
    f868:	lsl	w26, w2, #1
    f86c:	ubfiz	x0, x2, #4, #31
    f870:	sub	sp, sp, x0
    f874:	ubfiz	x2, x2, #3, #32
    f878:	mov	x0, sp
    f87c:	bl	52b0 <memcpy@plt>
    f880:	mov	x1, x0
    f884:	mov	w2, w26
    f888:	sub	w0, w2, w27
    f88c:	cmp	x0, x20
    f890:	b.cs	f8b0 <gcc_cp_fe_context@@Base+0x6180>  // b.hs, b.nlast
    f894:	ldr	w3, [x19]
    f898:	mov	w0, #0x13                  	// #19
    f89c:	mul	w3, w3, w0
    f8a0:	cmp	w3, w2
    f8a4:	b.cs	f868 <gcc_cp_fe_context@@Base+0x6138>  // b.hs, b.nlast
    f8a8:	mov	w0, #0xfffffffe            	// #-2
    f8ac:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
    f8b0:	str	w2, [x29, #284]
    f8b4:	mov	x19, x1
    f8b8:	ldr	x20, [x29, #144]
    f8bc:	cmp	x21, x20
    f8c0:	b.hi	f8f8 <gcc_cp_fe_context@@Base+0x61c8>  // b.pmore
    f8c4:	mov	x0, x21
    f8c8:	ldr	x1, [x22, x0, lsl #3]
    f8cc:	str	x1, [x19, w27, uxtw #3]
    f8d0:	add	w1, w27, #0x2
    f8d4:	add	w2, w27, #0x1
    f8d8:	ldr	x3, [x23, x0, lsl #3]
    f8dc:	str	x3, [x19, x2, lsl #3]
    f8e0:	ldr	x2, [x28, x0, lsl #3]
    f8e4:	str	x2, [x19, w1, uxtw #3]
    f8e8:	add	w27, w27, #0x3
    f8ec:	add	x0, x0, #0x1
    f8f0:	cmp	x20, x0
    f8f4:	b.cs	f8c8 <gcc_cp_fe_context@@Base+0x6198>  // b.hs, b.nlast
    f8f8:	ubfiz	x0, x27, #3, #32
    f8fc:	str	w21, [x19, x0]
    f900:	add	w0, w27, #0x1
    f904:	lsl	x0, x0, #3
    f908:	str	w20, [x19, x0]
    f90c:	add	w0, w27, #0x3
    f910:	add	w1, w27, #0x2
    f914:	str	xzr, [x19, x1, lsl #3]
    f918:	str	xzr, [x19, w0, uxtw #3]
    f91c:	add	w27, w27, #0x4
    f920:	ldr	x26, [x29, #368]
    f924:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f928:	ldrsb	w0, [x26, #4]
    f92c:	ldrb	w1, [x26, #3]
    f930:	add	w0, w1, w0, lsl #8
    f934:	cmp	w0, #0x0
    f938:	b.gt	f948 <gcc_cp_fe_context@@Base+0x6218>
    f93c:	cbz	w0, f960 <gcc_cp_fe_context@@Base+0x6230>
    f940:	ldr	x26, [x29, #368]
    f944:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f948:	sub	w0, w0, #0x1
    f94c:	strb	w0, [x26, #3]
    f950:	asr	w0, w0, #8
    f954:	strb	w0, [x26, #4]
    f958:	add	x26, x26, #0x5
    f95c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    f960:	strb	wzr, [x26, #3]
    f964:	strb	wzr, [x26, #4]
    f968:	ldrb	w0, [x26, #1]
    f96c:	str	w0, [x29, #368]
    f970:	ldrb	w0, [x26, #2]
    f974:	str	w0, [x29, #144]
    f978:	add	x26, x26, #0x3
    f97c:	str	x26, [x29, #392]
    f980:	mov	x0, x26
    f984:	ldr	x1, [x29, #376]
    f988:	cmp	x1, x26
    f98c:	b.ls	f9ac <gcc_cp_fe_context@@Base+0x627c>  // b.plast
    f990:	ldr	x2, [x29, #376]
    f994:	ldrb	w1, [x0]
    f998:	cbnz	w1, f44c <gcc_cp_fe_context@@Base+0x5d1c>
    f99c:	add	x0, x0, #0x1
    f9a0:	str	x0, [x29, #392]
    f9a4:	cmp	x0, x2
    f9a8:	b.ne	f994 <gcc_cp_fe_context@@Base+0x6264>  // b.any
    f9ac:	add	x0, x20, #0x1
    f9b0:	sub	x0, x0, x21
    f9b4:	add	x0, x0, x0, lsl #1
    f9b8:	add	x0, x0, #0x4
    f9bc:	ldr	w2, [x29, #284]
    f9c0:	mov	x1, x19
    f9c4:	str	x24, [x29, #136]
    f9c8:	str	x20, [x29, #128]
    f9cc:	mov	x20, x0
    f9d0:	ldr	x19, [x29, #152]
    f9d4:	sub	w0, w2, w27
    f9d8:	cmp	x0, x20
    f9dc:	b.cs	f484 <gcc_cp_fe_context@@Base+0x5d54>  // b.hs, b.nlast
    f9e0:	ldr	w3, [x19]
    f9e4:	mov	w0, #0x13                  	// #19
    f9e8:	mul	w3, w3, w0
    f9ec:	cmp	w3, w2
    f9f0:	b.cc	101c8 <gcc_cp_fe_context@@Base+0x6a98>  // b.lo, b.ul, b.last
    f9f4:	lsl	w24, w2, #1
    f9f8:	ubfiz	x0, x2, #4, #31
    f9fc:	sub	sp, sp, x0
    fa00:	ubfiz	x2, x2, #3, #32
    fa04:	mov	x0, sp
    fa08:	bl	52b0 <memcpy@plt>
    fa0c:	mov	x1, x0
    fa10:	mov	w2, w24
    fa14:	b	f9d4 <gcc_cp_fe_context@@Base+0x62a4>
    fa18:	ldrsb	w0, [x26, #4]
    fa1c:	ldrb	w1, [x26, #3]
    fa20:	adds	w0, w1, w0, lsl #8
    fa24:	b.ne	fa30 <gcc_cp_fe_context@@Base+0x6300>  // b.any
    fa28:	add	x26, x26, #0x5
    fa2c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    fa30:	sub	w0, w0, #0x1
    fa34:	strb	w0, [x26, #3]
    fa38:	asr	w0, w0, #8
    fa3c:	strb	w0, [x26, #4]
    fa40:	b	f628 <gcc_cp_fe_context@@Base+0x5ef8>
    fa44:	add	x2, x26, #0x3
    fa48:	ldrsb	w1, [x26, #2]
    fa4c:	ldrb	w0, [x26, #1]
    fa50:	add	w1, w0, w1, lsl #8
    fa54:	add	x0, x2, w1, sxtw
    fa58:	str	x0, [x29, #392]
    fa5c:	ldrsb	w0, [x26, #4]
    fa60:	ldrb	w3, [x26, #3]
    fa64:	add	w0, w3, w0, lsl #8
    fa68:	add	x26, x26, #0x5
    fa6c:	strb	w0, [x2, w1, sxtw]
    fa70:	asr	w0, w0, #8
    fa74:	ldr	x1, [x29, #392]
    fa78:	strb	w0, [x1, #1]
    fa7c:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    fa80:	ldr	x0, [x29, #264]
    fa84:	cmp	x24, x0
    fa88:	b.eq	e654 <gcc_cp_fe_context@@Base+0x4f24>  // b.none
    fa8c:	ldr	w0, [x29, #324]
    fa90:	cmp	w0, #0x0
    fa94:	ldr	x0, [x29, #272]
    fa98:	ccmp	x24, x0, #0x4, ne  // ne = any
    fa9c:	b.eq	e660 <gcc_cp_fe_context@@Base+0x4f30>  // b.none
    faa0:	sub	x0, x24, #0x1
    faa4:	ldr	x1, [x29, #352]
    faa8:	cmp	x1, x0
    faac:	b.eq	fb18 <gcc_cp_fe_context@@Base+0x63e8>  // b.none
    fab0:	ldr	x0, [x29, #344]
    fab4:	cmp	x0, x24
    fab8:	b.eq	fb24 <gcc_cp_fe_context@@Base+0x63f4>  // b.none
    fabc:	ldurb	w1, [x24, #-1]
    fac0:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fac4:	add	x0, x0, #0x5f8
    fac8:	ldrb	w0, [x0, w1, sxtw]
    facc:	cmp	w0, #0x1
    fad0:	cset	w2, eq  // eq = none
    fad4:	ldr	x0, [x29, #352]
    fad8:	cmp	x24, x0
    fadc:	b.eq	fb30 <gcc_cp_fe_context@@Base+0x6400>  // b.none
    fae0:	ldr	x0, [x29, #344]
    fae4:	sub	x0, x0, #0x1
    fae8:	cmp	x24, x0
    faec:	b.eq	fb3c <gcc_cp_fe_context@@Base+0x640c>  // b.none
    faf0:	ldrb	w1, [x24]
    faf4:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    faf8:	add	x0, x0, #0x5f8
    fafc:	ldrb	w0, [x0, w1, sxtw]
    fb00:	cmp	w0, #0x1
    fb04:	cset	w0, eq  // eq = none
    fb08:	ldr	x26, [x29, #368]
    fb0c:	cmp	w0, w2
    fb10:	b.ne	10074 <gcc_cp_fe_context@@Base+0x6944>  // b.any
    fb14:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    fb18:	ldr	x0, [x29, #344]
    fb1c:	ldrb	w1, [x0]
    fb20:	b	fac0 <gcc_cp_fe_context@@Base+0x6390>
    fb24:	ldr	x0, [x29, #352]
    fb28:	ldurb	w1, [x0, #-1]
    fb2c:	b	fac0 <gcc_cp_fe_context@@Base+0x6390>
    fb30:	ldr	x0, [x29, #344]
    fb34:	ldrb	w1, [x0]
    fb38:	b	faf4 <gcc_cp_fe_context@@Base+0x63c4>
    fb3c:	ldr	x0, [x29, #352]
    fb40:	ldurb	w1, [x0, #-1]
    fb44:	b	faf4 <gcc_cp_fe_context@@Base+0x63c4>
    fb48:	ldr	x0, [x29, #264]
    fb4c:	cmp	x24, x0
    fb50:	b.eq	ff14 <gcc_cp_fe_context@@Base+0x67e4>  // b.none
    fb54:	ldr	w0, [x29, #324]
    fb58:	cmp	w0, #0x0
    fb5c:	ldr	x0, [x29, #272]
    fb60:	ccmp	x24, x0, #0x4, ne  // ne = any
    fb64:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    fb68:	sub	x0, x24, #0x1
    fb6c:	ldr	x1, [x29, #352]
    fb70:	cmp	x1, x0
    fb74:	b.eq	fbe0 <gcc_cp_fe_context@@Base+0x64b0>  // b.none
    fb78:	ldr	x0, [x29, #344]
    fb7c:	cmp	x0, x24
    fb80:	b.eq	fbec <gcc_cp_fe_context@@Base+0x64bc>  // b.none
    fb84:	ldurb	w1, [x24, #-1]
    fb88:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fb8c:	add	x0, x0, #0x5f8
    fb90:	ldrb	w0, [x0, w1, sxtw]
    fb94:	cmp	w0, #0x1
    fb98:	cset	w2, eq  // eq = none
    fb9c:	ldr	x0, [x29, #352]
    fba0:	cmp	x24, x0
    fba4:	b.eq	fbf8 <gcc_cp_fe_context@@Base+0x64c8>  // b.none
    fba8:	ldr	x0, [x29, #344]
    fbac:	sub	x0, x0, #0x1
    fbb0:	cmp	x24, x0
    fbb4:	b.eq	fc04 <gcc_cp_fe_context@@Base+0x64d4>  // b.none
    fbb8:	ldrb	w1, [x24]
    fbbc:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fbc0:	add	x0, x0, #0x5f8
    fbc4:	ldrb	w0, [x0, w1, sxtw]
    fbc8:	cmp	w0, #0x1
    fbcc:	cset	w0, eq  // eq = none
    fbd0:	cmp	w0, w2
    fbd4:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    fbd8:	ldr	x26, [x29, #368]
    fbdc:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    fbe0:	ldr	x0, [x29, #344]
    fbe4:	ldrb	w1, [x0]
    fbe8:	b	fb88 <gcc_cp_fe_context@@Base+0x6458>
    fbec:	ldr	x0, [x29, #352]
    fbf0:	ldurb	w1, [x0, #-1]
    fbf4:	b	fb88 <gcc_cp_fe_context@@Base+0x6458>
    fbf8:	ldr	x0, [x29, #344]
    fbfc:	ldrb	w1, [x0]
    fc00:	b	fbbc <gcc_cp_fe_context@@Base+0x648c>
    fc04:	ldr	x0, [x29, #352]
    fc08:	ldurb	w1, [x0, #-1]
    fc0c:	b	fbbc <gcc_cp_fe_context@@Base+0x648c>
    fc10:	ldr	x0, [x29, #272]
    fc14:	cmp	x24, x0
    fc18:	b.eq	ff1c <gcc_cp_fe_context@@Base+0x67ec>  // b.none
    fc1c:	ldr	x0, [x29, #352]
    fc20:	cmp	x24, x0
    fc24:	b.eq	fca0 <gcc_cp_fe_context@@Base+0x6570>  // b.none
    fc28:	ldr	x0, [x29, #344]
    fc2c:	sub	x0, x0, #0x1
    fc30:	cmp	x24, x0
    fc34:	b.eq	fcac <gcc_cp_fe_context@@Base+0x657c>  // b.none
    fc38:	ldrb	w1, [x24]
    fc3c:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fc40:	add	x0, x0, #0x5f8
    fc44:	ldrb	w0, [x0, w1, sxtw]
    fc48:	cmp	w0, #0x1
    fc4c:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    fc50:	ldr	w0, [x29, #324]
    fc54:	cmp	w0, #0x0
    fc58:	ldr	x0, [x29, #264]
    fc5c:	ccmp	x24, x0, #0x4, ne  // ne = any
    fc60:	b.eq	e668 <gcc_cp_fe_context@@Base+0x4f38>  // b.none
    fc64:	sub	x0, x24, #0x1
    fc68:	ldr	x1, [x29, #352]
    fc6c:	cmp	x1, x0
    fc70:	b.eq	fcb8 <gcc_cp_fe_context@@Base+0x6588>  // b.none
    fc74:	ldr	x0, [x29, #344]
    fc78:	cmp	x0, x24
    fc7c:	b.eq	fcc4 <gcc_cp_fe_context@@Base+0x6594>  // b.none
    fc80:	ldurb	w1, [x24, #-1]
    fc84:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fc88:	add	x0, x0, #0x5f8
    fc8c:	ldrb	w0, [x0, w1, sxtw]
    fc90:	ldr	x26, [x29, #368]
    fc94:	cmp	w0, #0x1
    fc98:	b.ne	10074 <gcc_cp_fe_context@@Base+0x6944>  // b.any
    fc9c:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    fca0:	ldr	x0, [x29, #344]
    fca4:	ldrb	w1, [x0]
    fca8:	b	fc3c <gcc_cp_fe_context@@Base+0x650c>
    fcac:	ldr	x0, [x29, #352]
    fcb0:	ldurb	w1, [x0, #-1]
    fcb4:	b	fc3c <gcc_cp_fe_context@@Base+0x650c>
    fcb8:	ldr	x0, [x29, #344]
    fcbc:	ldrb	w1, [x0]
    fcc0:	b	fc84 <gcc_cp_fe_context@@Base+0x6554>
    fcc4:	ldr	x0, [x29, #352]
    fcc8:	ldurb	w1, [x0, #-1]
    fccc:	b	fc84 <gcc_cp_fe_context@@Base+0x6554>
    fcd0:	ldr	w0, [x29, #324]
    fcd4:	cmp	w0, #0x0
    fcd8:	ldr	x0, [x29, #264]
    fcdc:	ccmp	x24, x0, #0x4, ne  // ne = any
    fce0:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    fce4:	sub	x0, x24, #0x1
    fce8:	ldr	x1, [x29, #352]
    fcec:	cmp	x1, x0
    fcf0:	b.eq	fd60 <gcc_cp_fe_context@@Base+0x6630>  // b.none
    fcf4:	ldr	x0, [x29, #344]
    fcf8:	cmp	x0, x24
    fcfc:	b.eq	fd6c <gcc_cp_fe_context@@Base+0x663c>  // b.none
    fd00:	ldurb	w1, [x24, #-1]
    fd04:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fd08:	add	x0, x0, #0x5f8
    fd0c:	ldrb	w0, [x0, w1, sxtw]
    fd10:	cmp	w0, #0x1
    fd14:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    fd18:	ldr	x0, [x29, #272]
    fd1c:	cmp	x24, x0
    fd20:	b.eq	e670 <gcc_cp_fe_context@@Base+0x4f40>  // b.none
    fd24:	ldr	x0, [x29, #352]
    fd28:	cmp	x24, x0
    fd2c:	b.eq	fd78 <gcc_cp_fe_context@@Base+0x6648>  // b.none
    fd30:	ldr	x0, [x29, #344]
    fd34:	sub	x0, x0, #0x1
    fd38:	cmp	x24, x0
    fd3c:	b.eq	fd84 <gcc_cp_fe_context@@Base+0x6654>  // b.none
    fd40:	ldrb	w1, [x24]
    fd44:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fd48:	add	x0, x0, #0x5f8
    fd4c:	ldrb	w0, [x0, w1, sxtw]
    fd50:	ldr	x26, [x29, #368]
    fd54:	cmp	w0, #0x1
    fd58:	b.ne	10074 <gcc_cp_fe_context@@Base+0x6944>  // b.any
    fd5c:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    fd60:	ldr	x0, [x29, #344]
    fd64:	ldrb	w1, [x0]
    fd68:	b	fd04 <gcc_cp_fe_context@@Base+0x65d4>
    fd6c:	ldr	x0, [x29, #352]
    fd70:	ldurb	w1, [x0, #-1]
    fd74:	b	fd04 <gcc_cp_fe_context@@Base+0x65d4>
    fd78:	ldr	x0, [x29, #344]
    fd7c:	ldrb	w1, [x0]
    fd80:	b	fd44 <gcc_cp_fe_context@@Base+0x6614>
    fd84:	ldr	x0, [x29, #352]
    fd88:	ldurb	w1, [x0, #-1]
    fd8c:	b	fd44 <gcc_cp_fe_context@@Base+0x6614>
    fd90:	ldr	x0, [x29, #304]
    fd94:	ldr	x1, [x29, #344]
    fd98:	cmp	x24, x25
    fd9c:	b.ne	fdb4 <gcc_cp_fe_context@@Base+0x6684>  // b.any
    fda0:	cmp	x0, x25
    fda4:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    fda8:	mov	x25, x0
    fdac:	mov	x24, x1
    fdb0:	b	fd98 <gcc_cp_fe_context@@Base+0x6668>
    fdb4:	ldr	x0, [x29, #352]
    fdb8:	cmp	x24, x0
    fdbc:	b.eq	fe04 <gcc_cp_fe_context@@Base+0x66d4>  // b.none
    fdc0:	ldr	x0, [x29, #344]
    fdc4:	sub	x0, x0, #0x1
    fdc8:	cmp	x24, x0
    fdcc:	b.eq	fe10 <gcc_cp_fe_context@@Base+0x66e0>  // b.none
    fdd0:	ldrb	w1, [x24]
    fdd4:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fdd8:	add	x0, x0, #0x5f8
    fddc:	ldrb	w0, [x0, w1, sxtw]
    fde0:	cmp	w0, #0x1
    fde4:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.any
    fde8:	ldr	w0, [x29, #336]
    fdec:	cbz	w0, fe1c <gcc_cp_fe_context@@Base+0x66ec>
    fdf0:	add	x24, x24, #0x1
    fdf4:	ldr	x26, [x29, #368]
    fdf8:	mov	w0, #0x1                   	// #1
    fdfc:	str	w0, [x29, #336]
    fe00:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    fe04:	ldr	x0, [x29, #344]
    fe08:	ldrb	w1, [x0]
    fe0c:	b	fdd4 <gcc_cp_fe_context@@Base+0x66a4>
    fe10:	ldr	x0, [x29, #352]
    fe14:	ldurb	w1, [x0, #-1]
    fe18:	b	fdd4 <gcc_cp_fe_context@@Base+0x66a4>
    fe1c:	cmp	x21, x20
    fe20:	b.hi	fdf0 <gcc_cp_fe_context@@Base+0x66c0>  // b.pmore
    fe24:	add	x2, x28, x21, lsl #3
    fe28:	mov	x1, x21
    fe2c:	ldrb	w0, [x2]
    fe30:	orr	w0, w0, #0x18
    fe34:	strb	w0, [x2], #8
    fe38:	add	x1, x1, #0x1
    fe3c:	cmp	x20, x1
    fe40:	b.cs	fe2c <gcc_cp_fe_context@@Base+0x66fc>  // b.hs, b.nlast
    fe44:	b	fdf0 <gcc_cp_fe_context@@Base+0x66c0>
    fe48:	ldr	x0, [x29, #304]
    fe4c:	ldr	x1, [x29, #344]
    fe50:	cmp	x24, x25
    fe54:	b.ne	fe6c <gcc_cp_fe_context@@Base+0x673c>  // b.any
    fe58:	cmp	x0, x25
    fe5c:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    fe60:	mov	x25, x0
    fe64:	mov	x24, x1
    fe68:	b	fe50 <gcc_cp_fe_context@@Base+0x6720>
    fe6c:	ldr	x0, [x29, #352]
    fe70:	cmp	x24, x0
    fe74:	b.eq	febc <gcc_cp_fe_context@@Base+0x678c>  // b.none
    fe78:	ldr	x0, [x29, #344]
    fe7c:	sub	x0, x0, #0x1
    fe80:	cmp	x24, x0
    fe84:	b.eq	fec8 <gcc_cp_fe_context@@Base+0x6798>  // b.none
    fe88:	ldrb	w1, [x24]
    fe8c:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
    fe90:	add	x0, x0, #0x5f8
    fe94:	ldrb	w0, [x0, w1, sxtw]
    fe98:	cmp	w0, #0x1
    fe9c:	b.eq	ff40 <gcc_cp_fe_context@@Base+0x6810>  // b.none
    fea0:	ldr	w0, [x29, #336]
    fea4:	cbz	w0, fed4 <gcc_cp_fe_context@@Base+0x67a4>
    fea8:	add	x24, x24, #0x1
    feac:	ldr	x26, [x29, #368]
    feb0:	mov	w0, #0x1                   	// #1
    feb4:	str	w0, [x29, #336]
    feb8:	b	10074 <gcc_cp_fe_context@@Base+0x6944>
    febc:	ldr	x0, [x29, #344]
    fec0:	ldrb	w1, [x0]
    fec4:	b	fe8c <gcc_cp_fe_context@@Base+0x675c>
    fec8:	ldr	x0, [x29, #352]
    fecc:	ldurb	w1, [x0, #-1]
    fed0:	b	fe8c <gcc_cp_fe_context@@Base+0x675c>
    fed4:	cmp	x21, x20
    fed8:	b.hi	fea8 <gcc_cp_fe_context@@Base+0x6778>  // b.pmore
    fedc:	add	x2, x28, x21, lsl #3
    fee0:	mov	x1, x21
    fee4:	ldrb	w0, [x2]
    fee8:	orr	w0, w0, #0x18
    feec:	strb	w0, [x2], #8
    fef0:	add	x1, x1, #0x1
    fef4:	cmp	x20, x1
    fef8:	b.cs	fee4 <gcc_cp_fe_context@@Base+0x67b4>  // b.hs, b.nlast
    fefc:	b	fea8 <gcc_cp_fe_context@@Base+0x6778>
    ff00:	bl	5740 <abort@plt>
    ff04:	mov	x24, x0
    ff08:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff0c:	mov	x24, x0
    ff10:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff14:	ldr	x24, [x29, #264]
    ff18:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff1c:	ldr	x24, [x29, #272]
    ff20:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff24:	mov	x24, x0
    ff28:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff2c:	mov	x24, x0
    ff30:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff34:	ldr	x19, [x29, #144]
    ff38:	ldr	x22, [x29, #136]
    ff3c:	ldr	x23, [x29, #128]
    ff40:	cbnz	w27, 100d8 <gcc_cp_fe_context@@Base+0x69a8>
    ff44:	ldr	x25, [x29, #288]
    ff48:	b	ff60 <gcc_cp_fe_context@@Base+0x6830>
    ff4c:	ldr	x19, [x29, #144]
    ff50:	ldr	x22, [x29, #136]
    ff54:	ldr	x23, [x29, #128]
    ff58:	b	ff40 <gcc_cp_fe_context@@Base+0x6810>
    ff5c:	ldr	x25, [x29, #288]
    ff60:	ldr	w0, [x29, #280]
    ff64:	cbz	w0, 101a0 <gcc_cp_fe_context@@Base+0x6a70>
    ff68:	ldr	x0, [x29, #360]
    ff6c:	cmp	x0, x25
    ff70:	ldr	x0, [x29, #352]
    ff74:	ccmp	x25, x0, #0x2, ls  // ls = plast
    ff78:	ldr	x0, [x29, #328]
    ff7c:	ldr	x1, [x29, #304]
    ff80:	csel	x24, x0, x1, ls  // ls = plast
    ff84:	ldr	x0, [x29, #296]
    ff88:	cmp	x0, #0x1
    ff8c:	b.ls	ffbc <gcc_cp_fe_context@@Base+0x688c>  // b.plast
    ff90:	mov	x0, #0x8                   	// #8
    ff94:	ldr	x2, [x29, #200]
    ff98:	ldr	x3, [x29, #192]
    ff9c:	ldr	x4, [x29, #184]
    ffa0:	ldr	x1, [x2, x0]
    ffa4:	str	x1, [x22, x0]
    ffa8:	ldr	x1, [x3, x0]
    ffac:	str	x1, [x23, x0]
    ffb0:	add	x0, x0, #0x8
    ffb4:	cmp	x0, x4
    ffb8:	b.ne	ffa0 <gcc_cp_fe_context@@Base+0x6870>  // b.any
    ffbc:	ldr	x0, [x29, #240]
    ffc0:	cbz	x0, e920 <gcc_cp_fe_context@@Base+0x51f0>
    ffc4:	ldr	x0, [x29, #248]
    ffc8:	ldrb	w0, [x0, #56]
    ffcc:	tbnz	w0, #4, e920 <gcc_cp_fe_context@@Base+0x51f0>
    ffd0:	ands	w0, w0, #0x6
    ffd4:	b.eq	e774 <gcc_cp_fe_context@@Base+0x5044>  // b.none
    ffd8:	cmp	w0, #0x2
    ffdc:	b.ne	e7d0 <gcc_cp_fe_context@@Base+0x50a0>  // b.any
    ffe0:	ldr	x19, [x29, #240]
    ffe4:	ldr	w1, [x19]
    ffe8:	ldr	x0, [x29, #176]
    ffec:	add	x0, x0, #0x2
    fff0:	cmp	x1, x0
    fff4:	b.cs	e7d0 <gcc_cp_fe_context@@Base+0x50a0>  // b.hs, b.nlast
    fff8:	ldr	w0, [x29, #296]
    fffc:	add	w1, w0, #0x1
   10000:	str	w1, [x19]
   10004:	ubfiz	x1, x1, #2, #32
   10008:	ldr	x0, [x19, #8]
   1000c:	bl	5470 <realloc@plt>
   10010:	str	x0, [x19, #8]
   10014:	ldr	w1, [x19]
   10018:	lsl	x1, x1, #2
   1001c:	ldr	x0, [x19, #16]
   10020:	bl	5470 <realloc@plt>
   10024:	str	x0, [x19, #16]
   10028:	ldr	x1, [x19, #8]
   1002c:	cmp	x1, #0x0
   10030:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   10034:	b.ne	e7d0 <gcc_cp_fe_context@@Base+0x50a0>  // b.any
   10038:	mov	w0, #0xfffffffe            	// #-2
   1003c:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   10040:	mov	w27, w0
   10044:	b	1014c <gcc_cp_fe_context@@Base+0x6a1c>
   10048:	cmp	w0, #0x10
   1004c:	b.hi	100a8 <gcc_cp_fe_context@@Base+0x6978>  // b.pmore
   10050:	cmp	w0, #0xd
   10054:	b.eq	100a8 <gcc_cp_fe_context@@Base+0x6978>  // b.none
   10058:	ldr	x0, [x29, #360]
   1005c:	cmp	x0, x24
   10060:	ldr	x0, [x29, #352]
   10064:	ccmp	x24, x0, #0x2, ls  // ls = plast
   10068:	ldr	x0, [x29, #328]
   1006c:	csel	x25, x25, x0, hi  // hi = pmore
   10070:	str	wzr, [x29, #336]
   10074:	ldr	x0, [x29, #376]
   10078:	cmp	x26, x0
   1007c:	b.eq	e67c <gcc_cp_fe_context@@Base+0x4f4c>  // b.none
   10080:	mov	x1, x26
   10084:	ldrb	w0, [x1], #1
   10088:	str	x1, [x29, #368]
   1008c:	cmp	w0, #0x1d
   10090:	b.hi	ff00 <gcc_cp_fe_context@@Base+0x67d0>  // b.pmore
   10094:	ldr	x1, [x29, #312]
   10098:	ldrh	w1, [x1, w0, uxtw #1]
   1009c:	adr	x2, 100a8 <gcc_cp_fe_context@@Base+0x6978>
   100a0:	add	x1, x2, w1, sxth #2
   100a4:	br	x1
   100a8:	add	x0, x26, #0x1
   100ac:	str	x0, [x29, #392]
   100b0:	add	x0, x26, #0x3
   100b4:	ldrsb	w1, [x26, #2]
   100b8:	ldrb	w2, [x26, #1]
   100bc:	add	w1, w2, w1, lsl #8
   100c0:	add	x2, x0, w1, sxtw
   100c4:	str	x2, [x29, #392]
   100c8:	ldrb	w0, [x0, w1, sxtw]
   100cc:	cmp	w0, #0xf
   100d0:	b.ne	10058 <gcc_cp_fe_context@@Base+0x6928>  // b.any
   100d4:	cbz	w27, ff5c <gcc_cp_fe_context@@Base+0x682c>
   100d8:	sub	w0, w27, #0x1
   100dc:	ldr	x0, [x19, x0, lsl #3]
   100e0:	cmp	x0, #0x0
   100e4:	csel	x24, x24, x0, eq  // eq = none
   100e8:	sub	w0, w27, #0x2
   100ec:	ldr	x26, [x19, x0, lsl #3]
   100f0:	sub	w0, w27, #0x3
   100f4:	lsl	x0, x0, #3
   100f8:	ldrsw	x20, [x19, x0]
   100fc:	sub	w0, w27, #0x4
   10100:	ubfiz	x1, x0, #3, #32
   10104:	ldrsw	x21, [x19, x1]
   10108:	cmp	x20, x21
   1010c:	b.cc	10040 <gcc_cp_fe_context@@Base+0x6910>  // b.lo, b.ul, b.last
   10110:	sub	w1, w27, #0x7
   10114:	mov	x0, x20
   10118:	add	w2, w1, #0x2
   1011c:	ldr	x2, [x19, x2, lsl #3]
   10120:	str	x2, [x28, x0, lsl #3]
   10124:	add	w2, w1, #0x1
   10128:	ldr	x2, [x19, x2, lsl #3]
   1012c:	str	x2, [x23, x0, lsl #3]
   10130:	ldr	x2, [x19, w1, uxtw #3]
   10134:	str	x2, [x22, x0, lsl #3]
   10138:	sub	x0, x0, #0x1
   1013c:	mov	w27, w1
   10140:	sub	w1, w1, #0x3
   10144:	cmp	x21, x0
   10148:	b.ls	10118 <gcc_cp_fe_context@@Base+0x69e8>  // b.plast
   1014c:	cbz	x26, 100d4 <gcc_cp_fe_context@@Base+0x69a4>
   10150:	ldr	x0, [x29, #376]
   10154:	cmp	x0, x26
   10158:	b.ls	10058 <gcc_cp_fe_context@@Base+0x6928>  // b.plast
   1015c:	ldrb	w0, [x26]
   10160:	cmp	w0, #0x12
   10164:	b.ls	10048 <gcc_cp_fe_context@@Base+0x6918>  // b.plast
   10168:	cmp	w0, #0x16
   1016c:	b.ne	10058 <gcc_cp_fe_context@@Base+0x6928>  // b.any
   10170:	add	x0, x26, #0x1
   10174:	str	x0, [x29, #392]
   10178:	add	x0, x26, #0x3
   1017c:	ldrsb	w1, [x26, #2]
   10180:	ldrb	w2, [x26, #1]
   10184:	add	w1, w2, w1, lsl #8
   10188:	add	x2, x0, w1, sxtw
   1018c:	str	x2, [x29, #392]
   10190:	ldrb	w0, [x0, w1, sxtw]
   10194:	cmp	w0, #0x15
   10198:	b.ne	10058 <gcc_cp_fe_context@@Base+0x6928>  // b.any
   1019c:	b	100d4 <gcc_cp_fe_context@@Base+0x69a4>
   101a0:	mov	w0, #0xffffffff            	// #-1
   101a4:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101a8:	mov	w0, #0xffffffff            	// #-1
   101ac:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101b0:	mov	w0, #0xffffffff            	// #-1
   101b4:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101b8:	mov	w0, #0xfffffffe            	// #-2
   101bc:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101c0:	mov	w0, #0xfffffffe            	// #-2
   101c4:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101c8:	mov	w0, #0xfffffffe            	// #-2
   101cc:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101d0:	mov	w0, #0xfffffffe            	// #-2
   101d4:	b	e948 <gcc_cp_fe_context@@Base+0x5218>
   101d8:	str	x24, [x29, #288]
   101dc:	mov	w0, #0x1                   	// #1
   101e0:	str	w0, [x29, #280]
   101e4:	b	100d8 <gcc_cp_fe_context@@Base+0x69a8>
   101e8:	cmp	w3, w1
   101ec:	b.ne	f5b0 <gcc_cp_fe_context@@Base+0x5e80>  // b.any
   101f0:	b	f73c <gcc_cp_fe_context@@Base+0x600c>
   101f4:	stp	x29, x30, [sp, #-432]!
   101f8:	mov	x29, sp
   101fc:	stp	x19, x20, [sp, #16]
   10200:	stp	x25, x26, [sp, #64]
   10204:	str	x0, [sp, #136]
   10208:	mov	x20, x2
   1020c:	str	x2, [sp, #112]
   10210:	mov	x19, x3
   10214:	str	x0, [sp, #424]
   10218:	add	x0, x0, x1
   1021c:	str	x0, [sp, #104]
   10220:	ldr	x0, [x3, #40]
   10224:	str	x0, [sp, #120]
   10228:	mov	x0, #0x500                 	// #1280
   1022c:	bl	5710 <malloc@plt>
   10230:	str	x0, [sp, #128]
   10234:	cbz	x0, 12c74 <gcc_cp_fe_context@@Base+0x9544>
   10238:	str	x20, [x19, #24]
   1023c:	ldrb	w0, [x19, #56]
   10240:	mov	w1, #0xffffff97            	// #-105
   10244:	and	w0, w0, w1
   10248:	strb	w0, [x19, #56]
   1024c:	str	xzr, [x19, #16]
   10250:	str	xzr, [x19, #48]
   10254:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   10258:	ldr	w0, [x0, #1788]
   1025c:	cbz	w0, 10298 <gcc_cp_fe_context@@Base+0x6b68>
   10260:	ldr	x0, [x19, #8]
   10264:	cbnz	x0, 10320 <gcc_cp_fe_context@@Base+0x6bf0>
   10268:	ldr	x0, [x19]
   1026c:	cbz	x0, 10300 <gcc_cp_fe_context@@Base+0x6bd0>
   10270:	mov	x1, #0x20                  	// #32
   10274:	bl	5470 <realloc@plt>
   10278:	str	x0, [x19]
   1027c:	ldr	x0, [x19]
   10280:	cbz	x0, 10310 <gcc_cp_fe_context@@Base+0x6be0>
   10284:	stp	x21, x22, [sp, #32]
   10288:	stp	x23, x24, [sp, #48]
   1028c:	mov	x0, #0x20                  	// #32
   10290:	str	x0, [x19, #8]
   10294:	b	10328 <gcc_cp_fe_context@@Base+0x6bf8>
   10298:	mov	x2, #0x100                 	// #256
   1029c:	mov	w1, #0x0                   	// #0
   102a0:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   102a4:	add	x0, x0, #0x5f8
   102a8:	bl	5450 <memset@plt>
   102ac:	bl	5590 <__ctype_b_loc@plt>
   102b0:	mov	x1, #0x0                   	// #0
   102b4:	adrp	x3, 2b000 <xexit@@Base+0x15c24>
   102b8:	add	x3, x3, #0x5f8
   102bc:	mov	w4, #0x1                   	// #1
   102c0:	b	102d0 <gcc_cp_fe_context@@Base+0x6ba0>
   102c4:	add	x1, x1, #0x1
   102c8:	cmp	x1, #0x100
   102cc:	b.eq	102e4 <gcc_cp_fe_context@@Base+0x6bb4>  // b.none
   102d0:	ldr	x2, [x0]
   102d4:	ldrh	w2, [x2, x1, lsl #1]
   102d8:	tbz	w2, #3, 102c4 <gcc_cp_fe_context@@Base+0x6b94>
   102dc:	strb	w4, [x1, x3]
   102e0:	b	102c4 <gcc_cp_fe_context@@Base+0x6b94>
   102e4:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   102e8:	add	x0, x0, #0x5f8
   102ec:	mov	w1, #0x1                   	// #1
   102f0:	strb	w1, [x0, #95]
   102f4:	mov	w1, #0x1                   	// #1
   102f8:	str	w1, [x0, #260]
   102fc:	b	10260 <gcc_cp_fe_context@@Base+0x6b30>
   10300:	mov	x0, #0x20                  	// #32
   10304:	bl	5710 <malloc@plt>
   10308:	str	x0, [x19]
   1030c:	b	1027c <gcc_cp_fe_context@@Base+0x6b4c>
   10310:	ldr	x0, [sp, #128]
   10314:	bl	5440 <free@plt>
   10318:	mov	w26, #0xc                   	// #12
   1031c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10320:	stp	x21, x22, [sp, #32]
   10324:	stp	x23, x24, [sp, #48]
   10328:	ldr	x23, [x19]
   1032c:	ldr	x0, [sp, #424]
   10330:	ldr	x1, [sp, #104]
   10334:	cmp	x1, x0
   10338:	b.eq	12b98 <gcc_cp_fe_context@@Base+0x9468>  // b.none
   1033c:	stp	x27, x28, [sp, #80]
   10340:	mov	x28, x23
   10344:	str	wzr, [sp, #148]
   10348:	mov	x22, #0x0                   	// #0
   1034c:	mov	x21, #0x0                   	// #0
   10350:	mov	x20, #0x0                   	// #0
   10354:	mov	w1, #0x20                  	// #32
   10358:	str	w1, [sp, #176]
   1035c:	str	wzr, [sp, #144]
   10360:	add	x1, sp, #0x128
   10364:	str	x1, [sp, #160]
   10368:	str	x1, [sp, #168]
   1036c:	add	x1, sp, #0x1a8
   10370:	str	x1, [sp, #152]
   10374:	add	x1, x0, #0x1
   10378:	str	x1, [sp, #424]
   1037c:	ldrb	w25, [x0]
   10380:	ldr	x2, [sp, #120]
   10384:	cbz	x2, 10390 <gcc_cp_fe_context@@Base+0x6c60>
   10388:	and	x25, x25, #0xff
   1038c:	ldrb	w25, [x2, x25]
   10390:	cmp	w25, #0x2e
   10394:	b.eq	10520 <gcc_cp_fe_context@@Base+0x6df0>  // b.none
   10398:	b.ls	103c4 <gcc_cp_fe_context@@Base+0x6c94>  // b.plast
   1039c:	cmp	w25, #0x5e
   103a0:	b.eq	10550 <gcc_cp_fe_context@@Base+0x6e20>  // b.none
   103a4:	b.ls	104b0 <gcc_cp_fe_context@@Base+0x6d80>  // b.plast
   103a8:	cmp	w25, #0x7b
   103ac:	b.eq	11984 <gcc_cp_fe_context@@Base+0x8254>  // b.none
   103b0:	cmp	w25, #0x7c
   103b4:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   103b8:	ldr	x0, [sp, #112]
   103bc:	tbnz	w0, #15, 11958 <gcc_cp_fe_context@@Base+0x8228>
   103c0:	b	11994 <gcc_cp_fe_context@@Base+0x8264>
   103c4:	cmp	w25, #0x28
   103c8:	b.eq	118b8 <gcc_cp_fe_context@@Base+0x8188>  // b.none
   103cc:	b.ls	10428 <gcc_cp_fe_context@@Base+0x6cf8>  // b.plast
   103d0:	cmp	w25, #0x2a
   103d4:	b.eq	103f0 <gcc_cp_fe_context@@Base+0x6cc0>  // b.none
   103d8:	cmp	w25, #0x2b
   103dc:	b.ne	10484 <gcc_cp_fe_context@@Base+0x6d54>  // b.any
   103e0:	mov	x0, #0x402                 	// #1026
   103e4:	ldr	x1, [sp, #112]
   103e8:	tst	x1, x0
   103ec:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   103f0:	cbnz	x21, 1326c <gcc_cp_fe_context@@Base+0x9b3c>
   103f4:	ldr	x0, [sp, #112]
   103f8:	tbnz	w0, #5, 10718 <gcc_cp_fe_context@@Base+0x6fe8>
   103fc:	ldr	x0, [sp, #112]
   10400:	tbz	w0, #4, 11994 <gcc_cp_fe_context@@Base+0x8264>
   10404:	cmp	w25, #0x2b
   10408:	cset	w26, ne  // ne = any
   1040c:	cmp	w25, #0x3f
   10410:	cset	w25, ne  // ne = any
   10414:	ldr	x1, [sp, #424]
   10418:	ldr	x0, [sp, #104]
   1041c:	cmp	x1, x0
   10420:	b.ne	1328c <gcc_cp_fe_context@@Base+0x9b5c>  // b.any
   10424:	b	13194 <gcc_cp_fe_context@@Base+0x9a64>
   10428:	cmp	w25, #0xa
   1042c:	b.eq	11950 <gcc_cp_fe_context@@Base+0x8220>  // b.none
   10430:	cmp	w25, #0x24
   10434:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   10438:	ldr	x2, [sp, #104]
   1043c:	cmp	x1, x2
   10440:	b.eq	13240 <gcc_cp_fe_context@@Base+0x9b10>  // b.none
   10444:	ldr	x1, [sp, #112]
   10448:	tbnz	w1, #3, 13240 <gcc_cp_fe_context@@Base+0x9b10>
   1044c:	ldrb	w1, [x0, #1]
   10450:	cmp	w1, #0x5c
   10454:	cset	w2, eq  // eq = none
   10458:	add	x0, x0, #0x2
   1045c:	ldr	x3, [sp, #104]
   10460:	cmp	x3, x0
   10464:	csel	x0, x0, xzr, hi  // hi = pmore
   10468:	ldr	x3, [sp, #112]
   1046c:	tbz	w3, #13, 10660 <gcc_cp_fe_context@@Base+0x6f30>
   10470:	cmp	w1, #0x29
   10474:	b.eq	13240 <gcc_cp_fe_context@@Base+0x9b10>  // b.none
   10478:	ldr	x3, [sp, #112]
   1047c:	tbz	w3, #15, 10680 <gcc_cp_fe_context@@Base+0x6f50>
   10480:	b	13238 <gcc_cp_fe_context@@Base+0x9b08>
   10484:	cmp	w25, #0x29
   10488:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   1048c:	ldr	x0, [sp, #112]
   10490:	tbz	w0, #13, 11994 <gcc_cp_fe_context@@Base+0x8264>
   10494:	cbnz	x22, 11d38 <gcc_cp_fe_context@@Base+0x8608>
   10498:	ldr	w0, [sp, #144]
   1049c:	cbnz	w0, 130fc <gcc_cp_fe_context@@Base+0x99cc>
   104a0:	ldr	x0, [sp, #112]
   104a4:	tbz	w0, #17, 11e08 <gcc_cp_fe_context@@Base+0x86d8>
   104a8:	mov	w25, #0x29                  	// #41
   104ac:	b	11994 <gcc_cp_fe_context@@Base+0x8264>
   104b0:	cmp	w25, #0x5b
   104b4:	b.eq	10b34 <gcc_cp_fe_context@@Base+0x7404>  // b.none
   104b8:	cmp	w25, #0x5c
   104bc:	b.ne	10514 <gcc_cp_fe_context@@Base+0x6de4>  // b.any
   104c0:	ldr	x2, [sp, #104]
   104c4:	cmp	x1, x2
   104c8:	b.eq	11a10 <gcc_cp_fe_context@@Base+0x82e0>  // b.none
   104cc:	add	x1, x0, #0x2
   104d0:	str	x1, [sp, #424]
   104d4:	ldrb	w25, [x0, #1]
   104d8:	cmp	w25, #0x3f
   104dc:	b.eq	129c0 <gcc_cp_fe_context@@Base+0x9290>  // b.none
   104e0:	b.ls	11a2c <gcc_cp_fe_context@@Base+0x82fc>  // b.plast
   104e4:	cmp	w25, #0x62
   104e8:	b.eq	126d8 <gcc_cp_fe_context@@Base+0x8fa8>  // b.none
   104ec:	b.ls	11b90 <gcc_cp_fe_context@@Base+0x8460>  // b.plast
   104f0:	cmp	w25, #0x7b
   104f4:	b.eq	12014 <gcc_cp_fe_context@@Base+0x88e4>  // b.none
   104f8:	cmp	w25, #0x7c
   104fc:	b.ne	11c00 <gcc_cp_fe_context@@Base+0x84d0>  // b.any
   10500:	mov	x0, #0x8400                	// #33792
   10504:	ldr	x1, [sp, #112]
   10508:	tst	x1, x0
   1050c:	b.eq	11958 <gcc_cp_fe_context@@Base+0x8228>  // b.none
   10510:	b	12414 <gcc_cp_fe_context@@Base+0x8ce4>
   10514:	cmp	w25, #0x3f
   10518:	b.eq	103e0 <gcc_cp_fe_context@@Base+0x6cb0>  // b.none
   1051c:	b	11994 <gcc_cp_fe_context@@Base+0x8264>
   10520:	ldr	x24, [x19]
   10524:	ldr	x1, [x19, #8]
   10528:	sub	x0, x23, x24
   1052c:	add	x0, x0, #0x1
   10530:	mov	x21, x23
   10534:	mov	x26, #0x10000               	// #65536
   10538:	mov	w25, #0x10001               	// #65537
   1053c:	cmp	x0, x1
   10540:	b.hi	10ad0 <gcc_cp_fe_context@@Base+0x73a0>  // b.pmore
   10544:	mov	w0, #0x3                   	// #3
   10548:	strb	w0, [x23], #1
   1054c:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   10550:	ldr	x2, [sp, #136]
   10554:	add	x2, x2, #0x1
   10558:	cmp	x1, x2
   1055c:	b.eq	105b8 <gcc_cp_fe_context@@Base+0x6e88>  // b.none
   10560:	ldr	x1, [sp, #112]
   10564:	tbnz	w1, #3, 105b8 <gcc_cp_fe_context@@Base+0x6e88>
   10568:	sub	x1, x0, #0x1
   1056c:	ldr	x2, [sp, #136]
   10570:	cmp	x2, x1
   10574:	b.cs	10584 <gcc_cp_fe_context@@Base+0x6e54>  // b.hs, b.nlast
   10578:	ldurb	w1, [x0, #-2]
   1057c:	cmp	w1, #0x5c
   10580:	b.eq	132a4 <gcc_cp_fe_context@@Base+0x9b74>  // b.none
   10584:	ldurb	w0, [x0, #-1]
   10588:	mov	w1, #0x0                   	// #0
   1058c:	cmp	w0, #0x28
   10590:	b.eq	105b0 <gcc_cp_fe_context@@Base+0x6e80>  // b.none
   10594:	cmp	w0, #0x7c
   10598:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   1059c:	ldr	x0, [sp, #112]
   105a0:	tst	x0, #0x8000
   105a4:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   105a8:	b.ne	105b8 <gcc_cp_fe_context@@Base+0x6e88>  // b.any
   105ac:	b	11994 <gcc_cp_fe_context@@Base+0x8264>
   105b0:	ldr	x0, [sp, #112]
   105b4:	tbz	w0, #13, 11994 <gcc_cp_fe_context@@Base+0x8264>
   105b8:	ldr	x24, [x19]
   105bc:	ldr	x1, [x19, #8]
   105c0:	sub	x0, x23, x24
   105c4:	add	x0, x0, #0x1
   105c8:	mov	x26, #0x10000               	// #65536
   105cc:	mov	w25, #0x10001               	// #65537
   105d0:	cmp	x0, x1
   105d4:	b.hi	105fc <gcc_cp_fe_context@@Base+0x6ecc>  // b.pmore
   105d8:	mov	w0, #0x9                   	// #9
   105dc:	strb	w0, [x23], #1
   105e0:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   105e4:	ldr	x1, [x19, #8]
   105e8:	sub	x2, x23, x0
   105ec:	add	x2, x2, #0x1
   105f0:	cmp	x2, x1
   105f4:	b.ls	105d8 <gcc_cp_fe_context@@Base+0x6ea8>  // b.plast
   105f8:	mov	x24, x0
   105fc:	cmp	x1, #0x10, lsl #12
   10600:	b.eq	12c7c <gcc_cp_fe_context@@Base+0x954c>  // b.none
   10604:	lsl	x1, x1, #1
   10608:	cmp	x1, x25
   1060c:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   10610:	str	x1, [x19, #8]
   10614:	mov	x0, x24
   10618:	bl	5470 <realloc@plt>
   1061c:	str	x0, [x19]
   10620:	cbz	x0, 12c90 <gcc_cp_fe_context@@Base+0x9560>
   10624:	cmp	x0, x24
   10628:	b.eq	105e4 <gcc_cp_fe_context@@Base+0x6eb4>  // b.none
   1062c:	sub	x24, x0, x24
   10630:	add	x23, x23, x24
   10634:	add	x28, x28, x24
   10638:	add	x1, x22, x24
   1063c:	cmp	x22, #0x0
   10640:	csel	x22, x1, x22, ne  // ne = any
   10644:	add	x1, x21, x24
   10648:	cmp	x21, #0x0
   1064c:	csel	x21, x1, x21, ne  // ne = any
   10650:	add	x24, x20, x24
   10654:	cmp	x20, #0x0
   10658:	csel	x20, x24, x20, ne  // ne = any
   1065c:	b	105e4 <gcc_cp_fe_context@@Base+0x6eb4>
   10660:	cmp	x0, #0x0
   10664:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   10668:	b.eq	13230 <gcc_cp_fe_context@@Base+0x9b00>  // b.none
   1066c:	ldrb	w1, [x0]
   10670:	cmp	w1, #0x29
   10674:	b.eq	13240 <gcc_cp_fe_context@@Base+0x9b10>  // b.none
   10678:	ldr	x1, [sp, #112]
   1067c:	tbnz	w1, #15, 11994 <gcc_cp_fe_context@@Base+0x8264>
   10680:	cmp	x0, #0x0
   10684:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   10688:	b.eq	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.none
   1068c:	ldrb	w0, [x0]
   10690:	cmp	w0, #0x7c
   10694:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   10698:	b	13240 <gcc_cp_fe_context@@Base+0x9b10>
   1069c:	ldr	x1, [x19, #8]
   106a0:	sub	x2, x23, x0
   106a4:	add	x2, x2, #0x1
   106a8:	cmp	x2, x1
   106ac:	b.ls	13260 <gcc_cp_fe_context@@Base+0x9b30>  // b.plast
   106b0:	mov	x24, x0
   106b4:	cmp	x1, #0x10, lsl #12
   106b8:	b.eq	12ca4 <gcc_cp_fe_context@@Base+0x9574>  // b.none
   106bc:	lsl	x1, x1, #1
   106c0:	cmp	x1, x25
   106c4:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   106c8:	str	x1, [x19, #8]
   106cc:	mov	x0, x24
   106d0:	bl	5470 <realloc@plt>
   106d4:	str	x0, [x19]
   106d8:	cbz	x0, 12cb8 <gcc_cp_fe_context@@Base+0x9588>
   106dc:	cmp	x0, x24
   106e0:	b.eq	1069c <gcc_cp_fe_context@@Base+0x6f6c>  // b.none
   106e4:	sub	x24, x0, x24
   106e8:	add	x23, x23, x24
   106ec:	add	x28, x28, x24
   106f0:	add	x1, x22, x24
   106f4:	cmp	x22, #0x0
   106f8:	csel	x22, x1, x22, ne  // ne = any
   106fc:	add	x1, x21, x24
   10700:	cmp	x21, #0x0
   10704:	csel	x21, x1, x21, ne  // ne = any
   10708:	add	x24, x20, x24
   1070c:	cmp	x20, #0x0
   10710:	csel	x20, x24, x20, ne  // ne = any
   10714:	b	1069c <gcc_cp_fe_context@@Base+0x6f6c>
   10718:	ldr	x0, [sp, #128]
   1071c:	bl	5440 <free@plt>
   10720:	mov	w26, #0xd                   	// #13
   10724:	ldp	x21, x22, [sp, #32]
   10728:	ldp	x23, x24, [sp, #48]
   1072c:	ldp	x27, x28, [sp, #80]
   10730:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10734:	cmp	w0, #0x5c
   10738:	b.ne	107bc <gcc_cp_fe_context@@Base+0x708c>  // b.any
   1073c:	cmp	x5, x6
   10740:	b.eq	107e8 <gcc_cp_fe_context@@Base+0x70b8>  // b.none
   10744:	add	x0, x1, #0x2
   10748:	str	x0, [sp, #424]
   1074c:	ldrb	w0, [x1, #1]
   10750:	cbz	x2, 1075c <gcc_cp_fe_context@@Base+0x702c>
   10754:	and	x0, x0, #0xff
   10758:	ldrb	w0, [x2, x0]
   1075c:	cmp	w0, #0x2b
   10760:	ccmp	w0, w3, #0x4, ne  // ne = any
   10764:	b.ne	10804 <gcc_cp_fe_context@@Base+0x70d4>  // b.any
   10768:	cmp	w0, #0x2b
   1076c:	cset	w1, ne  // ne = any
   10770:	orr	w26, w1, w26
   10774:	cmp	w0, #0x3f
   10778:	cset	w0, ne  // ne = any
   1077c:	orr	w25, w0, w25
   10780:	ldr	x1, [sp, #424]
   10784:	cmp	x1, x6
   10788:	b.eq	13190 <gcc_cp_fe_context@@Base+0x9a60>  // b.none
   1078c:	add	x5, x1, #0x1
   10790:	str	x5, [sp, #424]
   10794:	ldrb	w0, [x1]
   10798:	cbz	x2, 107a4 <gcc_cp_fe_context@@Base+0x7074>
   1079c:	and	x0, x0, #0xff
   107a0:	ldrb	w0, [x2, x0]
   107a4:	cmp	w0, #0x2a
   107a8:	b.eq	10768 <gcc_cp_fe_context@@Base+0x7038>  // b.none
   107ac:	cbnz	x4, 10734 <gcc_cp_fe_context@@Base+0x7004>
   107b0:	cmp	w0, #0x2b
   107b4:	ccmp	w0, w3, #0x4, ne  // ne = any
   107b8:	b.eq	10768 <gcc_cp_fe_context@@Base+0x7038>  // b.none
   107bc:	str	x1, [sp, #424]
   107c0:	cbz	x21, 12b68 <gcc_cp_fe_context@@Base+0x9438>
   107c4:	cbz	w25, 10900 <gcc_cp_fe_context@@Base+0x71d0>
   107c8:	ldr	x24, [x19]
   107cc:	ldr	x1, [x19, #8]
   107d0:	sub	x0, x23, x24
   107d4:	add	x0, x0, #0x3
   107d8:	cmp	x0, x1
   107dc:	b.ls	1088c <gcc_cp_fe_context@@Base+0x715c>  // b.plast
   107e0:	mov	w27, #0x10001               	// #65537
   107e4:	b	10824 <gcc_cp_fe_context@@Base+0x70f4>
   107e8:	ldr	x0, [sp, #128]
   107ec:	bl	5440 <free@plt>
   107f0:	mov	w26, #0x5                   	// #5
   107f4:	ldp	x21, x22, [sp, #32]
   107f8:	ldp	x23, x24, [sp, #48]
   107fc:	ldp	x27, x28, [sp, #80]
   10800:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10804:	str	x1, [sp, #424]
   10808:	b	107c0 <gcc_cp_fe_context@@Base+0x7090>
   1080c:	ldr	x1, [x19, #8]
   10810:	sub	x2, x23, x0
   10814:	add	x2, x2, #0x3
   10818:	cmp	x2, x1
   1081c:	b.ls	1088c <gcc_cp_fe_context@@Base+0x715c>  // b.plast
   10820:	mov	x24, x0
   10824:	cmp	x1, #0x10, lsl #12
   10828:	b.eq	12ccc <gcc_cp_fe_context@@Base+0x959c>  // b.none
   1082c:	lsl	x1, x1, #1
   10830:	cmp	x1, x27
   10834:	mov	x0, #0x10000               	// #65536
   10838:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   1083c:	str	x1, [x19, #8]
   10840:	mov	x0, x24
   10844:	bl	5470 <realloc@plt>
   10848:	str	x0, [x19]
   1084c:	cbz	x0, 12ce0 <gcc_cp_fe_context@@Base+0x95b0>
   10850:	cmp	x0, x24
   10854:	b.eq	1080c <gcc_cp_fe_context@@Base+0x70dc>  // b.none
   10858:	sub	x24, x0, x24
   1085c:	add	x23, x23, x24
   10860:	add	x28, x28, x24
   10864:	add	x1, x22, x24
   10868:	cmp	x22, #0x0
   1086c:	csel	x22, x1, x22, ne  // ne = any
   10870:	add	x1, x21, x24
   10874:	cmp	x21, #0x0
   10878:	csel	x21, x1, x21, ne  // ne = any
   1087c:	add	x24, x20, x24
   10880:	cmp	x20, #0x0
   10884:	csel	x20, x24, x20, ne  // ne = any
   10888:	b	1080c <gcc_cp_fe_context@@Base+0x70dc>
   1088c:	ldr	x1, [sp, #120]
   10890:	cbz	x1, 10964 <gcc_cp_fe_context@@Base+0x7234>
   10894:	ldr	x0, [sp, #424]
   10898:	ldurb	w0, [x0, #-2]
   1089c:	ldrb	w0, [x1, x0]
   108a0:	ldrb	w1, [x1, #46]
   108a4:	cmp	w1, w0
   108a8:	b.ne	108dc <gcc_cp_fe_context@@Base+0x71ac>  // b.any
   108ac:	ldr	x0, [sp, #424]
   108b0:	cmp	w26, #0x0
   108b4:	ldr	x1, [sp, #104]
   108b8:	ccmp	x0, x1, #0x2, ne  // ne = any
   108bc:	b.cs	108dc <gcc_cp_fe_context@@Base+0x71ac>  // b.hs, b.nlast
   108c0:	ldr	x2, [sp, #120]
   108c4:	cbz	x2, 10974 <gcc_cp_fe_context@@Base+0x7244>
   108c8:	ldrb	w0, [x0]
   108cc:	ldrb	w1, [x2, x0]
   108d0:	ldrb	w0, [x2, #10]
   108d4:	cmp	w1, w0
   108d8:	b.eq	10980 <gcc_cp_fe_context@@Base+0x7250>  // b.none
   108dc:	sub	w0, w21, w23
   108e0:	sub	w0, w0, #0x6
   108e4:	mov	w1, #0x12                  	// #18
   108e8:	strb	w1, [x23]
   108ec:	strb	w0, [x23, #1]
   108f0:	asr	w0, w0, #8
   108f4:	strb	w0, [x23, #2]
   108f8:	mov	w25, #0x0                   	// #0
   108fc:	add	x23, x23, #0x3
   10900:	ldr	x24, [x19]
   10904:	ldr	x1, [x19, #8]
   10908:	sub	x0, x23, x24
   1090c:	add	x0, x0, #0x3
   10910:	mov	w27, #0x10001               	// #65537
   10914:	cmp	x0, x1
   10918:	b.hi	109f0 <gcc_cp_fe_context@@Base+0x72c0>  // b.pmore
   1091c:	add	x24, x23, #0x3
   10920:	mov	x3, x23
   10924:	sub	w2, w23, w21
   10928:	mov	x1, x21
   1092c:	add	w0, w25, #0xf
   10930:	bl	da58 <gcc_cp_fe_context@@Base+0x4328>
   10934:	mov	x23, x24
   10938:	mov	x20, #0x0                   	// #0
   1093c:	cbnz	w26, 12b68 <gcc_cp_fe_context@@Base+0x9438>
   10940:	ldr	x20, [x19]
   10944:	ldr	x1, [x19, #8]
   10948:	sub	x0, x24, x20
   1094c:	add	x0, x0, #0x3
   10950:	cmp	x0, x1
   10954:	b.ls	10a98 <gcc_cp_fe_context@@Base+0x7368>  // b.plast
   10958:	mov	x25, #0x10000               	// #65536
   1095c:	mov	w23, #0x10001               	// #65537
   10960:	b	10a40 <gcc_cp_fe_context@@Base+0x7310>
   10964:	ldr	x0, [sp, #424]
   10968:	ldurb	w0, [x0, #-2]
   1096c:	mov	w1, #0x2e                  	// #46
   10970:	b	108a4 <gcc_cp_fe_context@@Base+0x7174>
   10974:	ldrb	w1, [x0]
   10978:	mov	w0, #0xa                   	// #10
   1097c:	b	108d4 <gcc_cp_fe_context@@Base+0x71a4>
   10980:	ldr	x0, [sp, #112]
   10984:	tbnz	w0, #6, 108dc <gcc_cp_fe_context@@Base+0x71ac>
   10988:	sub	x0, x21, x23
   1098c:	sub	w0, w0, #0x3
   10990:	mov	w1, #0xd                   	// #13
   10994:	strb	w1, [x23]
   10998:	strb	w0, [x23, #1]
   1099c:	asr	w0, w0, #8
   109a0:	strb	w0, [x23, #2]
   109a4:	b	108fc <gcc_cp_fe_context@@Base+0x71cc>
   109a8:	sub	x24, x0, x24
   109ac:	add	x23, x23, x24
   109b0:	add	x28, x28, x24
   109b4:	add	x1, x22, x24
   109b8:	cmp	x22, #0x0
   109bc:	csel	x22, x1, x22, ne  // ne = any
   109c0:	add	x1, x21, x24
   109c4:	cmp	x21, #0x0
   109c8:	csel	x21, x1, x21, ne  // ne = any
   109cc:	add	x24, x20, x24
   109d0:	cmp	x20, #0x0
   109d4:	csel	x20, x24, x20, ne  // ne = any
   109d8:	ldr	x1, [x19, #8]
   109dc:	sub	x2, x23, x0
   109e0:	add	x2, x2, #0x3
   109e4:	cmp	x2, x1
   109e8:	b.ls	1091c <gcc_cp_fe_context@@Base+0x71ec>  // b.plast
   109ec:	mov	x24, x0
   109f0:	cmp	x1, #0x10, lsl #12
   109f4:	b.eq	12cf4 <gcc_cp_fe_context@@Base+0x95c4>  // b.none
   109f8:	lsl	x1, x1, #1
   109fc:	cmp	x1, x27
   10a00:	mov	x0, #0x10000               	// #65536
   10a04:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   10a08:	str	x1, [x19, #8]
   10a0c:	mov	x0, x24
   10a10:	bl	5470 <realloc@plt>
   10a14:	str	x0, [x19]
   10a18:	cbz	x0, 12d08 <gcc_cp_fe_context@@Base+0x95d8>
   10a1c:	cmp	x0, x24
   10a20:	b.ne	109a8 <gcc_cp_fe_context@@Base+0x7278>  // b.any
   10a24:	b	109d8 <gcc_cp_fe_context@@Base+0x72a8>
   10a28:	ldr	x1, [x19, #8]
   10a2c:	sub	x2, x24, x0
   10a30:	add	x2, x2, #0x3
   10a34:	cmp	x2, x1
   10a38:	b.ls	10a98 <gcc_cp_fe_context@@Base+0x7368>  // b.plast
   10a3c:	mov	x20, x0
   10a40:	cmp	x1, #0x10, lsl #12
   10a44:	b.eq	12d1c <gcc_cp_fe_context@@Base+0x95ec>  // b.none
   10a48:	lsl	x1, x1, #1
   10a4c:	cmp	x1, x23
   10a50:	csel	x1, x1, x25, cc  // cc = lo, ul, last
   10a54:	str	x1, [x19, #8]
   10a58:	mov	x0, x20
   10a5c:	bl	5470 <realloc@plt>
   10a60:	str	x0, [x19]
   10a64:	cbz	x0, 12d30 <gcc_cp_fe_context@@Base+0x9600>
   10a68:	cmp	x0, x20
   10a6c:	b.eq	10a28 <gcc_cp_fe_context@@Base+0x72f8>  // b.none
   10a70:	sub	x20, x0, x20
   10a74:	add	x24, x24, x20
   10a78:	add	x28, x28, x20
   10a7c:	add	x1, x22, x20
   10a80:	cmp	x22, #0x0
   10a84:	csel	x22, x1, x22, ne  // ne = any
   10a88:	add	x20, x21, x20
   10a8c:	cmp	x21, #0x0
   10a90:	csel	x21, x20, x21, ne  // ne = any
   10a94:	b	10a28 <gcc_cp_fe_context@@Base+0x72f8>
   10a98:	mov	x3, x24
   10a9c:	mov	w2, #0x3                   	// #3
   10aa0:	mov	x1, x21
   10aa4:	mov	w0, #0x13                  	// #19
   10aa8:	bl	da58 <gcc_cp_fe_context@@Base+0x4328>
   10aac:	add	x23, x24, #0x3
   10ab0:	mov	x20, #0x0                   	// #0
   10ab4:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   10ab8:	ldr	x1, [x19, #8]
   10abc:	sub	x2, x23, x0
   10ac0:	add	x2, x2, #0x1
   10ac4:	cmp	x2, x1
   10ac8:	b.ls	10544 <gcc_cp_fe_context@@Base+0x6e14>  // b.plast
   10acc:	mov	x24, x0
   10ad0:	cmp	x1, #0x10, lsl #12
   10ad4:	b.eq	12d44 <gcc_cp_fe_context@@Base+0x9614>  // b.none
   10ad8:	lsl	x1, x1, #1
   10adc:	cmp	x1, x25
   10ae0:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   10ae4:	str	x1, [x19, #8]
   10ae8:	mov	x0, x24
   10aec:	bl	5470 <realloc@plt>
   10af0:	str	x0, [x19]
   10af4:	cbz	x0, 12d58 <gcc_cp_fe_context@@Base+0x9628>
   10af8:	cmp	x0, x24
   10afc:	b.eq	10ab8 <gcc_cp_fe_context@@Base+0x7388>  // b.none
   10b00:	sub	x24, x0, x24
   10b04:	add	x23, x23, x24
   10b08:	add	x28, x28, x24
   10b0c:	add	x1, x22, x24
   10b10:	cmp	x22, #0x0
   10b14:	csel	x22, x1, x22, ne  // ne = any
   10b18:	add	x1, x21, x24
   10b1c:	cmp	x21, #0x0
   10b20:	csel	x21, x1, x21, ne  // ne = any
   10b24:	add	x24, x20, x24
   10b28:	cmp	x20, #0x0
   10b2c:	csel	x20, x24, x20, ne  // ne = any
   10b30:	b	10ab8 <gcc_cp_fe_context@@Base+0x7388>
   10b34:	ldr	x0, [sp, #104]
   10b38:	cmp	x1, x0
   10b3c:	b.eq	10b88 <gcc_cp_fe_context@@Base+0x7458>  // b.none
   10b40:	ldr	x24, [x19]
   10b44:	ldr	x1, [x19, #8]
   10b48:	sub	x0, x23, x24
   10b4c:	add	x0, x0, #0x22
   10b50:	mov	x26, #0x10000               	// #65536
   10b54:	mov	w25, #0x10001               	// #65537
   10b58:	cmp	x0, x1
   10b5c:	b.hi	10bec <gcc_cp_fe_context@@Base+0x74bc>  // b.pmore
   10b60:	ldr	x24, [x19]
   10b64:	ldr	x1, [x19, #8]
   10b68:	sub	x0, x23, x24
   10b6c:	add	x0, x0, #0x1
   10b70:	cmp	x0, x1
   10b74:	b.ls	10c9c <gcc_cp_fe_context@@Base+0x756c>  // b.plast
   10b78:	mov	x21, x23
   10b7c:	mov	x26, #0x10000               	// #65536
   10b80:	mov	w25, #0x10001               	// #65537
   10b84:	b	10c38 <gcc_cp_fe_context@@Base+0x7508>
   10b88:	ldr	x0, [sp, #128]
   10b8c:	bl	5440 <free@plt>
   10b90:	mov	w26, #0x7                   	// #7
   10b94:	ldp	x21, x22, [sp, #32]
   10b98:	ldp	x23, x24, [sp, #48]
   10b9c:	ldp	x27, x28, [sp, #80]
   10ba0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10ba4:	sub	x24, x0, x24
   10ba8:	add	x23, x23, x24
   10bac:	add	x28, x28, x24
   10bb0:	add	x1, x22, x24
   10bb4:	cmp	x22, #0x0
   10bb8:	csel	x22, x1, x22, ne  // ne = any
   10bbc:	add	x1, x21, x24
   10bc0:	cmp	x21, #0x0
   10bc4:	csel	x21, x1, x21, ne  // ne = any
   10bc8:	add	x24, x20, x24
   10bcc:	cmp	x20, #0x0
   10bd0:	csel	x20, x24, x20, ne  // ne = any
   10bd4:	ldr	x1, [x19, #8]
   10bd8:	sub	x2, x23, x0
   10bdc:	add	x2, x2, #0x22
   10be0:	cmp	x2, x1
   10be4:	b.ls	10b60 <gcc_cp_fe_context@@Base+0x7430>  // b.plast
   10be8:	mov	x24, x0
   10bec:	cmp	x1, #0x10, lsl #12
   10bf0:	b.eq	12d6c <gcc_cp_fe_context@@Base+0x963c>  // b.none
   10bf4:	lsl	x1, x1, #1
   10bf8:	cmp	x1, x25
   10bfc:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   10c00:	str	x1, [x19, #8]
   10c04:	mov	x0, x24
   10c08:	bl	5470 <realloc@plt>
   10c0c:	str	x0, [x19]
   10c10:	cbz	x0, 12d80 <gcc_cp_fe_context@@Base+0x9650>
   10c14:	cmp	x0, x24
   10c18:	b.ne	10ba4 <gcc_cp_fe_context@@Base+0x7474>  // b.any
   10c1c:	b	10bd4 <gcc_cp_fe_context@@Base+0x74a4>
   10c20:	ldr	x1, [x19, #8]
   10c24:	sub	x2, x23, x0
   10c28:	add	x2, x2, #0x1
   10c2c:	cmp	x2, x1
   10c30:	b.ls	10ca0 <gcc_cp_fe_context@@Base+0x7570>  // b.plast
   10c34:	mov	x24, x0
   10c38:	cmp	x1, #0x10, lsl #12
   10c3c:	b.eq	12d94 <gcc_cp_fe_context@@Base+0x9664>  // b.none
   10c40:	lsl	x1, x1, #1
   10c44:	cmp	x1, x25
   10c48:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   10c4c:	str	x1, [x19, #8]
   10c50:	mov	x0, x24
   10c54:	bl	5470 <realloc@plt>
   10c58:	str	x0, [x19]
   10c5c:	cbz	x0, 12da8 <gcc_cp_fe_context@@Base+0x9678>
   10c60:	cmp	x0, x24
   10c64:	b.eq	10c20 <gcc_cp_fe_context@@Base+0x74f0>  // b.none
   10c68:	sub	x24, x0, x24
   10c6c:	add	x23, x23, x24
   10c70:	add	x28, x28, x24
   10c74:	add	x1, x22, x24
   10c78:	cmp	x22, #0x0
   10c7c:	csel	x22, x1, x22, ne  // ne = any
   10c80:	add	x1, x21, x24
   10c84:	cmp	x21, #0x0
   10c88:	csel	x21, x1, x21, ne  // ne = any
   10c8c:	add	x24, x20, x24
   10c90:	cmp	x20, #0x0
   10c94:	csel	x20, x24, x20, ne  // ne = any
   10c98:	b	10c20 <gcc_cp_fe_context@@Base+0x74f0>
   10c9c:	mov	x21, x23
   10ca0:	ldr	x0, [sp, #424]
   10ca4:	ldrb	w0, [x0]
   10ca8:	cmp	w0, #0x5e
   10cac:	cset	w0, eq  // eq = none
   10cb0:	add	w0, w0, #0x4
   10cb4:	mov	x26, x23
   10cb8:	strb	w0, [x26], #1
   10cbc:	ldr	x0, [sp, #424]
   10cc0:	ldrb	w1, [x0]
   10cc4:	cmp	w1, #0x5e
   10cc8:	b.eq	10cf8 <gcc_cp_fe_context@@Base+0x75c8>  // b.none
   10ccc:	ldr	x0, [sp, #424]
   10cd0:	str	x0, [sp, #184]
   10cd4:	ldr	x23, [x19]
   10cd8:	ldr	x1, [x19, #8]
   10cdc:	sub	x0, x26, x23
   10ce0:	add	x0, x0, #0x1
   10ce4:	cmp	x0, x1
   10ce8:	b.ls	10d80 <gcc_cp_fe_context@@Base+0x7650>  // b.plast
   10cec:	mov	x25, #0x10000               	// #65536
   10cf0:	mov	w24, #0x10001               	// #65537
   10cf4:	b	10d1c <gcc_cp_fe_context@@Base+0x75ec>
   10cf8:	add	x0, x0, #0x1
   10cfc:	str	x0, [sp, #424]
   10d00:	b	10ccc <gcc_cp_fe_context@@Base+0x759c>
   10d04:	ldr	x1, [x19, #8]
   10d08:	sub	x2, x26, x0
   10d0c:	add	x2, x2, #0x1
   10d10:	cmp	x2, x1
   10d14:	b.ls	10d80 <gcc_cp_fe_context@@Base+0x7650>  // b.plast
   10d18:	mov	x23, x0
   10d1c:	cmp	x1, #0x10, lsl #12
   10d20:	b.eq	12dbc <gcc_cp_fe_context@@Base+0x968c>  // b.none
   10d24:	lsl	x1, x1, #1
   10d28:	cmp	x1, x24
   10d2c:	csel	x1, x1, x25, cc  // cc = lo, ul, last
   10d30:	str	x1, [x19, #8]
   10d34:	mov	x0, x23
   10d38:	bl	5470 <realloc@plt>
   10d3c:	str	x0, [x19]
   10d40:	cbz	x0, 12dd0 <gcc_cp_fe_context@@Base+0x96a0>
   10d44:	cmp	x0, x23
   10d48:	b.eq	10d04 <gcc_cp_fe_context@@Base+0x75d4>  // b.none
   10d4c:	sub	x23, x0, x23
   10d50:	add	x26, x26, x23
   10d54:	add	x28, x28, x23
   10d58:	add	x1, x22, x23
   10d5c:	cmp	x22, #0x0
   10d60:	csel	x22, x1, x22, ne  // ne = any
   10d64:	add	x1, x21, x23
   10d68:	cmp	x21, #0x0
   10d6c:	csel	x21, x1, x21, ne  // ne = any
   10d70:	add	x23, x20, x23
   10d74:	cmp	x20, #0x0
   10d78:	csel	x20, x23, x20, ne  // ne = any
   10d7c:	b	10d04 <gcc_cp_fe_context@@Base+0x75d4>
   10d80:	mov	x27, x26
   10d84:	mov	w0, #0x20                  	// #32
   10d88:	strb	w0, [x27], #1
   10d8c:	stp	xzr, xzr, [x27]
   10d90:	stp	xzr, xzr, [x27, #16]
   10d94:	ldurb	w0, [x26, #-1]
   10d98:	cmp	w0, #0x5
   10d9c:	b.eq	10dec <gcc_cp_fe_context@@Base+0x76bc>  // b.none
   10da0:	ldr	x23, [sp, #424]
   10da4:	ldr	x0, [sp, #104]
   10da8:	cmp	x0, x23
   10dac:	b.eq	10e00 <gcc_cp_fe_context@@Base+0x76d0>  // b.none
   10db0:	mov	w25, #0xffffffff            	// #-1
   10db4:	mov	w24, #0x0                   	// #0
   10db8:	ldr	x1, [sp, #112]
   10dbc:	ubfx	w2, w1, #2, #1
   10dc0:	str	w2, [sp, #180]
   10dc4:	str	x20, [sp, #248]
   10dc8:	str	x28, [sp, #256]
   10dcc:	str	x21, [sp, #264]
   10dd0:	str	x22, [sp, #272]
   10dd4:	mov	x21, x0
   10dd8:	mov	x22, x1
   10ddc:	str	x19, [sp, #280]
   10de0:	ldr	x19, [sp, #120]
   10de4:	ldr	x28, [sp, #160]
   10de8:	b	10ee8 <gcc_cp_fe_context@@Base+0x77b8>
   10dec:	ldr	x0, [sp, #112]
   10df0:	tbz	w0, #8, 10da0 <gcc_cp_fe_context@@Base+0x7670>
   10df4:	mov	w0, #0x4                   	// #4
   10df8:	strb	w0, [x26, #2]
   10dfc:	b	10da0 <gcc_cp_fe_context@@Base+0x7670>
   10e00:	ldr	x0, [sp, #128]
   10e04:	bl	5440 <free@plt>
   10e08:	mov	w26, #0x7                   	// #7
   10e0c:	ldp	x21, x22, [sp, #32]
   10e10:	ldp	x23, x24, [sp, #48]
   10e14:	ldp	x27, x28, [sp, #80]
   10e18:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10e1c:	cmp	x2, x21
   10e20:	b.eq	10e5c <gcc_cp_fe_context@@Base+0x772c>  // b.none
   10e24:	add	x0, x23, #0x2
   10e28:	str	x0, [sp, #424]
   10e2c:	ldrb	w25, [x23, #1]
   10e30:	cbz	x19, 10e3c <gcc_cp_fe_context@@Base+0x770c>
   10e34:	and	x25, x25, #0xff
   10e38:	ldrb	w25, [x19, x25]
   10e3c:	ubfx	x1, x25, #3, #5
   10e40:	and	w2, w25, #0x7
   10e44:	mov	w0, #0x1                   	// #1
   10e48:	lsl	w0, w0, w2
   10e4c:	ldrb	w2, [x27, x1]
   10e50:	orr	w0, w0, w2
   10e54:	strb	w0, [x27, x1]
   10e58:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   10e5c:	ldr	x0, [sp, #128]
   10e60:	bl	5440 <free@plt>
   10e64:	mov	w26, #0x5                   	// #5
   10e68:	ldp	x21, x22, [sp, #32]
   10e6c:	ldp	x23, x24, [sp, #48]
   10e70:	ldp	x27, x28, [sp, #80]
   10e74:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10e78:	ldr	x1, [sp, #184]
   10e7c:	add	x1, x1, #0x1
   10e80:	cmp	x2, x1
   10e84:	b.ne	10f84 <gcc_cp_fe_context@@Base+0x7854>  // b.any
   10e88:	ldrb	w1, [x23, #1]
   10e8c:	cmp	w1, #0x2d
   10e90:	b.eq	1109c <gcc_cp_fe_context@@Base+0x796c>  // b.none
   10e94:	cmp	w0, #0x5b
   10e98:	ldr	w3, [sp, #180]
   10e9c:	csel	w3, w3, wzr, eq  // eq = none
   10ea0:	cmp	w1, #0x3d
   10ea4:	ccmp	w3, #0x0, #0x4, eq  // eq = none
   10ea8:	b.ne	115ac <gcc_cp_fe_context@@Base+0x7e7c>  // b.any
   10eac:	cmp	w1, #0x2e
   10eb0:	ccmp	w3, #0x0, #0x4, eq  // eq = none
   10eb4:	b.ne	11730 <gcc_cp_fe_context@@Base+0x8000>  // b.any
   10eb8:	ubfx	x2, x0, #3, #5
   10ebc:	and	w3, w0, #0x7
   10ec0:	mov	w1, #0x1                   	// #1
   10ec4:	lsl	w1, w1, w3
   10ec8:	ldrb	w3, [x27, x2]
   10ecc:	orr	w1, w1, w3
   10ed0:	strb	w1, [x27, x2]
   10ed4:	mov	w25, w0
   10ed8:	mov	w24, #0x0                   	// #0
   10edc:	ldr	x23, [sp, #424]
   10ee0:	cmp	x23, x21
   10ee4:	b.eq	10e00 <gcc_cp_fe_context@@Base+0x76d0>  // b.none
   10ee8:	add	x2, x23, #0x1
   10eec:	str	x2, [sp, #424]
   10ef0:	ldrb	w0, [x23]
   10ef4:	cbz	x19, 10f00 <gcc_cp_fe_context@@Base+0x77d0>
   10ef8:	and	x0, x0, #0xff
   10efc:	ldrb	w0, [x19, x0]
   10f00:	and	x1, x22, #0x1
   10f04:	cmp	w0, #0x5c
   10f08:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   10f0c:	b.ne	10e1c <gcc_cp_fe_context@@Base+0x76ec>  // b.any
   10f10:	cmp	w0, #0x5d
   10f14:	b.eq	10e78 <gcc_cp_fe_context@@Base+0x7748>  // b.none
   10f18:	cmp	w0, #0x2d
   10f1c:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   10f20:	b.eq	10fe4 <gcc_cp_fe_context@@Base+0x78b4>  // b.none
   10f24:	ldrb	w1, [x23, #1]
   10f28:	cmp	w1, #0x5d
   10f2c:	b.ne	10fc8 <gcc_cp_fe_context@@Base+0x7898>  // b.any
   10f30:	sub	x1, x23, #0x1
   10f34:	ldr	x3, [sp, #136]
   10f38:	cmp	x3, x1
   10f3c:	b.hi	10f4c <gcc_cp_fe_context@@Base+0x781c>  // b.pmore
   10f40:	ldurb	w1, [x23, #-1]
   10f44:	cmp	w1, #0x5b
   10f48:	b.eq	1103c <gcc_cp_fe_context@@Base+0x790c>  // b.none
   10f4c:	sub	x1, x23, #0x2
   10f50:	ldr	x3, [sp, #136]
   10f54:	cmp	x3, x1
   10f58:	b.hi	10f68 <gcc_cp_fe_context@@Base+0x7838>  // b.pmore
   10f5c:	ldurb	w1, [x23, #-2]
   10f60:	cmp	w1, #0x5b
   10f64:	b.eq	11030 <gcc_cp_fe_context@@Base+0x7900>  // b.none
   10f68:	ldrb	w1, [x23, #1]
   10f6c:	cmp	w1, #0x5d
   10f70:	b.ne	11058 <gcc_cp_fe_context@@Base+0x7928>  // b.any
   10f74:	cmp	w0, #0x5b
   10f78:	ldr	w3, [sp, #180]
   10f7c:	csel	w3, w3, wzr, eq  // eq = none
   10f80:	b	10ea0 <gcc_cp_fe_context@@Base+0x7770>
   10f84:	ldr	x20, [sp, #248]
   10f88:	ldr	x28, [sp, #256]
   10f8c:	ldr	x21, [sp, #264]
   10f90:	ldr	x22, [sp, #272]
   10f94:	ldr	x19, [sp, #280]
   10f98:	ldrb	w23, [x26]
   10f9c:	cbz	w23, 10fc0 <gcc_cp_fe_context@@Base+0x7890>
   10fa0:	add	x0, x26, w23, uxtb
   10fa4:	ldrb	w1, [x0]
   10fa8:	cbnz	w1, 10fc0 <gcc_cp_fe_context@@Base+0x7890>
   10fac:	sub	w23, w23, #0x1
   10fb0:	and	w23, w23, #0xff
   10fb4:	strb	w23, [x26]
   10fb8:	sub	x0, x0, #0x1
   10fbc:	cbnz	w23, 10fa4 <gcc_cp_fe_context@@Base+0x7874>
   10fc0:	add	x23, x27, w23, uxtb
   10fc4:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   10fc8:	ldr	x0, [sp, #128]
   10fcc:	bl	5440 <free@plt>
   10fd0:	mov	w26, #0xb                   	// #11
   10fd4:	ldp	x21, x22, [sp, #32]
   10fd8:	ldp	x23, x24, [sp, #48]
   10fdc:	ldp	x27, x28, [sp, #80]
   10fe0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   10fe4:	cmp	w0, #0x2d
   10fe8:	b.eq	10f30 <gcc_cp_fe_context@@Base+0x7800>  // b.none
   10fec:	ldrb	w1, [x23, #1]
   10ff0:	cmp	w1, #0x2d
   10ff4:	b.eq	1109c <gcc_cp_fe_context@@Base+0x796c>  // b.none
   10ff8:	cmp	w0, #0x5b
   10ffc:	ldr	w3, [sp, #180]
   11000:	csel	w3, w3, wzr, eq  // eq = none
   11004:	cmp	w1, #0x3a
   11008:	ccmp	w3, #0x0, #0x4, eq  // eq = none
   1100c:	b.eq	10ea0 <gcc_cp_fe_context@@Base+0x7770>  // b.none
   11010:	cmp	x2, x21
   11014:	b.eq	11584 <gcc_cp_fe_context@@Base+0x7e54>  // b.none
   11018:	add	x20, x23, #0x2
   1101c:	str	x20, [sp, #424]
   11020:	cmp	x20, x21
   11024:	b.eq	110f8 <gcc_cp_fe_context@@Base+0x79c8>  // b.none
   11028:	mov	w1, #0x0                   	// #0
   1102c:	b	11134 <gcc_cp_fe_context@@Base+0x7a04>
   11030:	ldurb	w1, [x23, #-1]
   11034:	cmp	w1, #0x5e
   11038:	b.ne	10f68 <gcc_cp_fe_context@@Base+0x7838>  // b.any
   1103c:	ldrb	w1, [x23, #1]
   11040:	cmp	w1, #0x2d
   11044:	b.eq	1109c <gcc_cp_fe_context@@Base+0x796c>  // b.none
   11048:	cmp	w0, #0x5b
   1104c:	ldr	w3, [sp, #180]
   11050:	csel	w3, w3, wzr, eq  // eq = none
   11054:	b	10ea0 <gcc_cp_fe_context@@Base+0x7770>
   11058:	mov	x5, x27
   1105c:	mov	x4, x22
   11060:	mov	x3, x19
   11064:	mov	x2, x21
   11068:	ldr	x1, [sp, #152]
   1106c:	mov	w0, w25
   11070:	bl	dad4 <gcc_cp_fe_context@@Base+0x43a4>
   11074:	cbnz	w0, 11080 <gcc_cp_fe_context@@Base+0x7950>
   11078:	mov	w25, #0xffffffff            	// #-1
   1107c:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   11080:	mov	w26, w0
   11084:	ldr	x0, [sp, #128]
   11088:	bl	5440 <free@plt>
   1108c:	ldp	x21, x22, [sp, #32]
   11090:	ldp	x23, x24, [sp, #48]
   11094:	ldp	x27, x28, [sp, #80]
   11098:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   1109c:	ldrb	w1, [x23, #2]
   110a0:	cmp	w1, #0x5d
   110a4:	b.eq	131c4 <gcc_cp_fe_context@@Base+0x9a94>  // b.none
   110a8:	cmp	x2, x21
   110ac:	b.eq	12de4 <gcc_cp_fe_context@@Base+0x96b4>  // b.none
   110b0:	add	x20, x23, #0x2
   110b4:	str	x20, [sp, #424]
   110b8:	mov	x5, x27
   110bc:	mov	x4, x22
   110c0:	mov	x3, x19
   110c4:	mov	x2, x21
   110c8:	ldr	x1, [sp, #152]
   110cc:	bl	dad4 <gcc_cp_fe_context@@Base+0x43a4>
   110d0:	cbnz	w0, 110dc <gcc_cp_fe_context@@Base+0x79ac>
   110d4:	mov	w25, #0xffffffff            	// #-1
   110d8:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   110dc:	mov	w26, w0
   110e0:	ldr	x0, [sp, #128]
   110e4:	bl	5440 <free@plt>
   110e8:	ldp	x21, x22, [sp, #32]
   110ec:	ldp	x23, x24, [sp, #48]
   110f0:	ldp	x27, x28, [sp, #80]
   110f4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   110f8:	ldr	x0, [sp, #128]
   110fc:	bl	5440 <free@plt>
   11100:	mov	w26, #0x7                   	// #7
   11104:	ldp	x21, x22, [sp, #32]
   11108:	ldp	x23, x24, [sp, #48]
   1110c:	ldp	x27, x28, [sp, #80]
   11110:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11114:	ldrb	w3, [x0]
   11118:	cmp	w3, #0x5d
   1111c:	b.ne	11154 <gcc_cp_fe_context@@Base+0x7a24>  // b.any
   11120:	strb	wzr, [x28, w1, sxtw]
   11124:	mov	x23, x0
   11128:	b	111cc <gcc_cp_fe_context@@Base+0x7a9c>
   1112c:	strb	wzr, [sp, #296]
   11130:	mov	x20, x0
   11134:	add	x0, x20, #0x1
   11138:	str	x0, [sp, #424]
   1113c:	ldurb	w2, [x0, #-1]
   11140:	cbz	x19, 1114c <gcc_cp_fe_context@@Base+0x7a1c>
   11144:	and	x2, x2, #0xff
   11148:	ldrb	w2, [x19, x2]
   1114c:	cmp	w2, #0x3a
   11150:	b.eq	11114 <gcc_cp_fe_context@@Base+0x79e4>  // b.none
   11154:	cmp	x0, x21
   11158:	b.eq	11174 <gcc_cp_fe_context@@Base+0x7a44>  // b.none
   1115c:	cmp	w1, #0x5
   11160:	b.hi	1112c <gcc_cp_fe_context@@Base+0x79fc>  // b.pmore
   11164:	add	w3, w1, #0x1
   11168:	strb	w2, [x28, w1, sxtw]
   1116c:	and	w1, w3, #0xff
   11170:	b	11130 <gcc_cp_fe_context@@Base+0x7a00>
   11174:	strb	wzr, [x28, w1, sxtw]
   11178:	cmp	w2, #0x3a
   1117c:	b.eq	111c8 <gcc_cp_fe_context@@Base+0x7a98>  // b.none
   11180:	mov	w2, w1
   11184:	sub	w2, w2, #0x1
   11188:	and	w2, w2, #0xff
   1118c:	cmp	w2, #0xff
   11190:	b.ne	11184 <gcc_cp_fe_context@@Base+0x7a54>  // b.any
   11194:	and	x1, x1, #0xff
   11198:	mvn	x1, x1
   1119c:	add	x0, x0, x1
   111a0:	str	x0, [sp, #424]
   111a4:	ldrb	w0, [x26, #12]
   111a8:	orr	w0, w0, #0x8
   111ac:	strb	w0, [x26, #12]
   111b0:	ldrb	w0, [x26, #8]
   111b4:	orr	w0, w0, #0x4
   111b8:	strb	w0, [x26, #8]
   111bc:	mov	w25, #0x3a                  	// #58
   111c0:	mov	w24, #0x0                   	// #0
   111c4:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   111c8:	mov	x23, x21
   111cc:	ldrb	w2, [x20, #1]
   111d0:	cmp	w2, #0x5d
   111d4:	b.ne	11180 <gcc_cp_fe_context@@Base+0x7a50>  // b.any
   111d8:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   111dc:	add	x1, x1, #0xfa0
   111e0:	ldr	x24, [sp, #168]
   111e4:	mov	x0, x24
   111e8:	bl	56c0 <strcmp@plt>
   111ec:	str	w0, [sp, #192]
   111f0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   111f4:	add	x1, x1, #0xfa8
   111f8:	mov	x0, x24
   111fc:	bl	56c0 <strcmp@plt>
   11200:	str	w0, [sp, #204]
   11204:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   11208:	add	x1, x1, #0xfb0
   1120c:	mov	x0, x24
   11210:	bl	56c0 <strcmp@plt>
   11214:	str	w0, [sp, #216]
   11218:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   1121c:	add	x1, x1, #0xfb8
   11220:	mov	x0, x24
   11224:	bl	56c0 <strcmp@plt>
   11228:	str	w0, [sp, #240]
   1122c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   11230:	add	x1, x1, #0xfc0
   11234:	mov	x0, x24
   11238:	bl	56c0 <strcmp@plt>
   1123c:	str	w0, [sp, #196]
   11240:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   11244:	add	x1, x1, #0xfc8
   11248:	mov	x0, x24
   1124c:	bl	56c0 <strcmp@plt>
   11250:	str	w0, [sp, #208]
   11254:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   11258:	add	x1, x1, #0xfd0
   1125c:	mov	x0, x24
   11260:	bl	56c0 <strcmp@plt>
   11264:	str	w0, [sp, #220]
   11268:	cmp	w0, #0x0
   1126c:	cset	w3, eq  // eq = none
   11270:	str	w3, [sp, #224]
   11274:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   11278:	add	x1, x1, #0xfd8
   1127c:	mov	x0, x24
   11280:	bl	56c0 <strcmp@plt>
   11284:	str	w0, [sp, #228]
   11288:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   1128c:	add	x1, x1, #0xfe0
   11290:	mov	x0, x24
   11294:	bl	56c0 <strcmp@plt>
   11298:	str	w0, [sp, #200]
   1129c:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   112a0:	add	x1, x1, #0xfe8
   112a4:	mov	x0, x24
   112a8:	bl	56c0 <strcmp@plt>
   112ac:	str	w0, [sp, #212]
   112b0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   112b4:	add	x1, x1, #0xff0
   112b8:	mov	x0, x24
   112bc:	bl	56c0 <strcmp@plt>
   112c0:	str	w0, [sp, #232]
   112c4:	cmp	w0, #0x0
   112c8:	cset	w3, eq  // eq = none
   112cc:	str	w3, [sp, #236]
   112d0:	adrp	x1, 15000 <iterative_hash@@Base+0xec>
   112d4:	add	x1, x1, #0xff8
   112d8:	mov	x0, x24
   112dc:	bl	56c0 <strcmp@plt>
   112e0:	mov	w3, w0
   112e4:	str	w0, [sp, #244]
   112e8:	ldr	w2, [sp, #232]
   112ec:	cmp	w2, #0x0
   112f0:	ldr	w2, [sp, #204]
   112f4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   112f8:	cset	w0, ne  // ne = any
   112fc:	ldr	w2, [sp, #196]
   11300:	cmp	w2, #0x0
   11304:	ldr	w1, [sp, #220]
   11308:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   1130c:	csel	w0, w0, wzr, ne  // ne = any
   11310:	ldr	w1, [sp, #192]
   11314:	cmp	w1, #0x0
   11318:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1131c:	csel	w0, w0, wzr, ne  // ne = any
   11320:	ldr	w1, [sp, #228]
   11324:	cmp	w1, #0x0
   11328:	ldr	w1, [sp, #212]
   1132c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11330:	csel	w0, w0, wzr, ne  // ne = any
   11334:	ldr	w1, [sp, #200]
   11338:	cmp	w1, #0x0
   1133c:	ldr	w1, [sp, #208]
   11340:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11344:	csel	w0, w0, wzr, ne  // ne = any
   11348:	ldr	w1, [sp, #240]
   1134c:	cmp	w1, #0x0
   11350:	ldr	w1, [sp, #216]
   11354:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11358:	csel	w0, w0, wzr, ne  // ne = any
   1135c:	cbnz	w0, 11384 <gcc_cp_fe_context@@Base+0x7c54>
   11360:	cmp	x23, x21
   11364:	b.eq	11598 <gcc_cp_fe_context@@Base+0x7e68>  // b.none
   11368:	add	x20, x20, #0x2
   1136c:	str	x20, [sp, #424]
   11370:	cmp	x20, x21
   11374:	b.eq	113a0 <gcc_cp_fe_context@@Base+0x7c70>  // b.none
   11378:	mov	x20, #0x0                   	// #0
   1137c:	mov	w24, #0x1                   	// #1
   11380:	b	11424 <gcc_cp_fe_context@@Base+0x7cf4>
   11384:	ldr	x0, [sp, #128]
   11388:	bl	5440 <free@plt>
   1138c:	mov	w26, #0x4                   	// #4
   11390:	ldp	x21, x22, [sp, #32]
   11394:	ldp	x23, x24, [sp, #48]
   11398:	ldp	x27, x28, [sp, #80]
   1139c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   113a0:	ldr	x0, [sp, #128]
   113a4:	bl	5440 <free@plt>
   113a8:	mov	w26, #0x7                   	// #7
   113ac:	ldp	x21, x22, [sp, #32]
   113b0:	ldp	x23, x24, [sp, #48]
   113b4:	ldp	x27, x28, [sp, #80]
   113b8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   113bc:	ubfx	x1, x20, #3, #5
   113c0:	and	w0, w23, #0x7
   113c4:	lsl	w0, w24, w0
   113c8:	ldrb	w2, [x27, x1]
   113cc:	orr	w0, w0, w2
   113d0:	strb	w0, [x27, x1]
   113d4:	cbz	x19, 11418 <gcc_cp_fe_context@@Base+0x7ce8>
   113d8:	ldr	w0, [sp, #224]
   113dc:	cmp	w0, #0x0
   113e0:	ldr	w0, [sp, #236]
   113e4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   113e8:	b.eq	11418 <gcc_cp_fe_context@@Base+0x7ce8>  // b.none
   113ec:	bl	5590 <__ctype_b_loc@plt>
   113f0:	ldr	x0, [x0]
   113f4:	ldrh	w0, [x0, x20, lsl #1]
   113f8:	tst	w0, #0x300
   113fc:	b.eq	11418 <gcc_cp_fe_context@@Base+0x7ce8>  // b.none
   11400:	ubfx	x1, x20, #3, #5
   11404:	and	w0, w23, #0x7
   11408:	lsl	w0, w24, w0
   1140c:	ldrb	w2, [x27, x1]
   11410:	orr	w0, w0, w2
   11414:	strb	w0, [x27, x1]
   11418:	add	x20, x20, #0x1
   1141c:	cmp	x20, #0x100
   11420:	b.eq	1157c <gcc_cp_fe_context@@Base+0x7e4c>  // b.none
   11424:	mov	w23, w20
   11428:	ldr	w0, [sp, #192]
   1142c:	cbnz	w0, 11440 <gcc_cp_fe_context@@Base+0x7d10>
   11430:	bl	5590 <__ctype_b_loc@plt>
   11434:	ldr	x0, [x0]
   11438:	ldrh	w0, [x0, x20, lsl #1]
   1143c:	tbnz	w0, #3, 11488 <gcc_cp_fe_context@@Base+0x7d58>
   11440:	ldr	w0, [sp, #204]
   11444:	cbnz	w0, 11458 <gcc_cp_fe_context@@Base+0x7d28>
   11448:	bl	5590 <__ctype_b_loc@plt>
   1144c:	ldr	x0, [x0]
   11450:	ldrh	w0, [x0, x20, lsl #1]
   11454:	tbnz	w0, #10, 11488 <gcc_cp_fe_context@@Base+0x7d58>
   11458:	ldr	w0, [sp, #216]
   1145c:	cbnz	w0, 11470 <gcc_cp_fe_context@@Base+0x7d40>
   11460:	bl	5590 <__ctype_b_loc@plt>
   11464:	ldr	x0, [x0]
   11468:	ldrh	w0, [x0, x20, lsl #1]
   1146c:	tbnz	w0, #0, 11488 <gcc_cp_fe_context@@Base+0x7d58>
   11470:	ldr	w0, [sp, #240]
   11474:	cbnz	w0, 114a0 <gcc_cp_fe_context@@Base+0x7d70>
   11478:	bl	5590 <__ctype_b_loc@plt>
   1147c:	ldr	x0, [x0]
   11480:	ldrh	w0, [x0, x20, lsl #1]
   11484:	tbz	w0, #1, 114a0 <gcc_cp_fe_context@@Base+0x7d70>
   11488:	ubfx	x1, x20, #3, #5
   1148c:	and	w0, w23, #0x7
   11490:	lsl	w0, w24, w0
   11494:	ldrb	w2, [x27, x1]
   11498:	orr	w0, w0, w2
   1149c:	strb	w0, [x27, x1]
   114a0:	ldr	w0, [sp, #196]
   114a4:	cbnz	w0, 114b8 <gcc_cp_fe_context@@Base+0x7d88>
   114a8:	bl	5590 <__ctype_b_loc@plt>
   114ac:	ldr	x0, [x0]
   114b0:	ldrh	w0, [x0, x20, lsl #1]
   114b4:	tbnz	w0, #11, 11500 <gcc_cp_fe_context@@Base+0x7dd0>
   114b8:	ldr	w0, [sp, #208]
   114bc:	cbnz	w0, 114d0 <gcc_cp_fe_context@@Base+0x7da0>
   114c0:	bl	5590 <__ctype_b_loc@plt>
   114c4:	ldr	x0, [x0]
   114c8:	ldrsh	w0, [x0, x20, lsl #1]
   114cc:	tbnz	w0, #31, 11500 <gcc_cp_fe_context@@Base+0x7dd0>
   114d0:	ldr	w0, [sp, #220]
   114d4:	cbnz	w0, 114e8 <gcc_cp_fe_context@@Base+0x7db8>
   114d8:	bl	5590 <__ctype_b_loc@plt>
   114dc:	ldr	x0, [x0]
   114e0:	ldrh	w0, [x0, x20, lsl #1]
   114e4:	tbnz	w0, #9, 11500 <gcc_cp_fe_context@@Base+0x7dd0>
   114e8:	ldr	w0, [sp, #228]
   114ec:	cbnz	w0, 11518 <gcc_cp_fe_context@@Base+0x7de8>
   114f0:	bl	5590 <__ctype_b_loc@plt>
   114f4:	ldr	x0, [x0]
   114f8:	ldrh	w0, [x0, x20, lsl #1]
   114fc:	tbz	w0, #14, 11518 <gcc_cp_fe_context@@Base+0x7de8>
   11500:	ubfx	x1, x20, #3, #5
   11504:	and	w0, w23, #0x7
   11508:	lsl	w0, w24, w0
   1150c:	ldrb	w2, [x27, x1]
   11510:	orr	w0, w0, w2
   11514:	strb	w0, [x27, x1]
   11518:	ldr	w0, [sp, #200]
   1151c:	cbnz	w0, 11530 <gcc_cp_fe_context@@Base+0x7e00>
   11520:	bl	5590 <__ctype_b_loc@plt>
   11524:	ldr	x0, [x0]
   11528:	ldrh	w0, [x0, x20, lsl #1]
   1152c:	tbnz	w0, #2, 113bc <gcc_cp_fe_context@@Base+0x7c8c>
   11530:	ldr	w0, [sp, #212]
   11534:	cbnz	w0, 11548 <gcc_cp_fe_context@@Base+0x7e18>
   11538:	bl	5590 <__ctype_b_loc@plt>
   1153c:	ldr	x0, [x0]
   11540:	ldrh	w0, [x0, x20, lsl #1]
   11544:	tbnz	w0, #13, 113bc <gcc_cp_fe_context@@Base+0x7c8c>
   11548:	ldr	w0, [sp, #232]
   1154c:	cbnz	w0, 11560 <gcc_cp_fe_context@@Base+0x7e30>
   11550:	bl	5590 <__ctype_b_loc@plt>
   11554:	ldr	x0, [x0]
   11558:	ldrh	w0, [x0, x20, lsl #1]
   1155c:	tbnz	w0, #8, 113bc <gcc_cp_fe_context@@Base+0x7c8c>
   11560:	ldr	w0, [sp, #244]
   11564:	cbnz	w0, 113d4 <gcc_cp_fe_context@@Base+0x7ca4>
   11568:	bl	5590 <__ctype_b_loc@plt>
   1156c:	ldr	x0, [x0]
   11570:	ldrh	w0, [x0, x20, lsl #1]
   11574:	tbz	w0, #12, 113d4 <gcc_cp_fe_context@@Base+0x7ca4>
   11578:	b	113bc <gcc_cp_fe_context@@Base+0x7c8c>
   1157c:	mov	w24, #0x1                   	// #1
   11580:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   11584:	mov	w26, #0xe                   	// #14
   11588:	ldp	x21, x22, [sp, #32]
   1158c:	ldp	x23, x24, [sp, #48]
   11590:	ldp	x27, x28, [sp, #80]
   11594:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11598:	mov	w26, #0xe                   	// #14
   1159c:	ldp	x21, x22, [sp, #32]
   115a0:	ldp	x23, x24, [sp, #48]
   115a4:	ldp	x27, x28, [sp, #80]
   115a8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   115ac:	cmp	x2, x21
   115b0:	b.eq	11708 <gcc_cp_fe_context@@Base+0x7fd8>  // b.none
   115b4:	add	x20, x23, #0x2
   115b8:	str	x20, [sp, #424]
   115bc:	cmp	x20, x21
   115c0:	b.ne	115e0 <gcc_cp_fe_context@@Base+0x7eb0>  // b.any
   115c4:	ldr	x0, [sp, #128]
   115c8:	bl	5440 <free@plt>
   115cc:	mov	w26, #0x7                   	// #7
   115d0:	ldp	x21, x22, [sp, #32]
   115d4:	ldp	x23, x24, [sp, #48]
   115d8:	ldp	x27, x28, [sp, #80]
   115dc:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   115e0:	mov	w24, #0x0                   	// #0
   115e4:	b	11608 <gcc_cp_fe_context@@Base+0x7ed8>
   115e8:	ldrb	w2, [x0]
   115ec:	cmp	w2, #0x5d
   115f0:	b.ne	11628 <gcc_cp_fe_context@@Base+0x7ef8>  // b.any
   115f4:	strb	wzr, [x28, w24, sxtw]
   115f8:	mov	x2, x0
   115fc:	b	116a0 <gcc_cp_fe_context@@Base+0x7f70>
   11600:	strb	wzr, [sp, #296]
   11604:	mov	x20, x0
   11608:	add	x0, x20, #0x1
   1160c:	str	x0, [sp, #424]
   11610:	ldurb	w1, [x0, #-1]
   11614:	cbz	x19, 11620 <gcc_cp_fe_context@@Base+0x7ef0>
   11618:	and	x1, x1, #0xff
   1161c:	ldrb	w1, [x19, x1]
   11620:	cmp	w1, #0x3d
   11624:	b.eq	115e8 <gcc_cp_fe_context@@Base+0x7eb8>  // b.none
   11628:	cmp	x0, x21
   1162c:	b.eq	11648 <gcc_cp_fe_context@@Base+0x7f18>  // b.none
   11630:	cmp	w24, #0xf
   11634:	b.hi	11600 <gcc_cp_fe_context@@Base+0x7ed0>  // b.pmore
   11638:	add	w2, w24, #0x1
   1163c:	strb	w1, [x28, w24, sxtw]
   11640:	and	w24, w2, #0xff
   11644:	b	11604 <gcc_cp_fe_context@@Base+0x7ed4>
   11648:	strb	wzr, [x28, w24, sxtw]
   1164c:	cmp	w1, #0x3d
   11650:	b.eq	1169c <gcc_cp_fe_context@@Base+0x7f6c>  // b.none
   11654:	mov	w1, w24
   11658:	sub	w1, w1, #0x1
   1165c:	and	w1, w1, #0xff
   11660:	cmp	w1, #0xff
   11664:	b.ne	11658 <gcc_cp_fe_context@@Base+0x7f28>  // b.any
   11668:	and	x1, x24, #0xff
   1166c:	mvn	x1, x1
   11670:	add	x0, x0, x1
   11674:	str	x0, [sp, #424]
   11678:	ldrb	w0, [x26, #12]
   1167c:	orr	w0, w0, #0x8
   11680:	strb	w0, [x26, #12]
   11684:	ldrb	w0, [x26, #8]
   11688:	orr	w0, w0, #0x20
   1168c:	strb	w0, [x26, #8]
   11690:	mov	w25, #0x3d                  	// #61
   11694:	mov	w24, #0x0                   	// #0
   11698:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   1169c:	mov	x2, x21
   116a0:	ldrb	w1, [x20, #1]
   116a4:	cmp	w1, #0x5d
   116a8:	b.ne	11654 <gcc_cp_fe_context@@Base+0x7f24>  // b.any
   116ac:	ldrb	w1, [sp, #296]
   116b0:	cbz	w1, 11654 <gcc_cp_fe_context@@Base+0x7f24>
   116b4:	cmp	w24, #0x1
   116b8:	b.ne	116ec <gcc_cp_fe_context@@Base+0x7fbc>  // b.any
   116bc:	cmp	x21, x2
   116c0:	b.eq	1171c <gcc_cp_fe_context@@Base+0x7fec>  // b.none
   116c4:	add	x20, x20, #0x2
   116c8:	str	x20, [sp, #424]
   116cc:	ubfx	x2, x1, #3, #5
   116d0:	and	w1, w1, #0x7
   116d4:	mov	w0, #0x1                   	// #1
   116d8:	lsl	w0, w0, w1
   116dc:	ldrb	w1, [x27, x2]
   116e0:	orr	w0, w0, w1
   116e4:	strb	w0, [x27, x2]
   116e8:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   116ec:	ldr	x0, [sp, #128]
   116f0:	bl	5440 <free@plt>
   116f4:	mov	w26, #0x3                   	// #3
   116f8:	ldp	x21, x22, [sp, #32]
   116fc:	ldp	x23, x24, [sp, #48]
   11700:	ldp	x27, x28, [sp, #80]
   11704:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11708:	mov	w26, #0xe                   	// #14
   1170c:	ldp	x21, x22, [sp, #32]
   11710:	ldp	x23, x24, [sp, #48]
   11714:	ldp	x27, x28, [sp, #80]
   11718:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   1171c:	mov	w26, #0xe                   	// #14
   11720:	ldp	x21, x22, [sp, #32]
   11724:	ldp	x23, x24, [sp, #48]
   11728:	ldp	x27, x28, [sp, #80]
   1172c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11730:	cmp	x2, x21
   11734:	b.eq	11890 <gcc_cp_fe_context@@Base+0x8160>  // b.none
   11738:	add	x20, x23, #0x2
   1173c:	str	x20, [sp, #424]
   11740:	cmp	x20, x21
   11744:	b.ne	11764 <gcc_cp_fe_context@@Base+0x8034>  // b.any
   11748:	ldr	x0, [sp, #128]
   1174c:	bl	5440 <free@plt>
   11750:	mov	w26, #0x7                   	// #7
   11754:	ldp	x21, x22, [sp, #32]
   11758:	ldp	x23, x24, [sp, #48]
   1175c:	ldp	x27, x28, [sp, #80]
   11760:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11764:	mov	w0, #0x0                   	// #0
   11768:	b	11794 <gcc_cp_fe_context@@Base+0x8064>
   1176c:	ldrb	w3, [x1]
   11770:	cmp	w3, #0x5d
   11774:	b.ne	117b4 <gcc_cp_fe_context@@Base+0x8084>  // b.any
   11778:	strb	wzr, [x28, w0, sxtw]
   1177c:	mov	x2, x1
   11780:	b	11828 <gcc_cp_fe_context@@Base+0x80f8>
   11784:	add	w3, w0, #0x1
   11788:	strb	w2, [x28, w0, sxtw]
   1178c:	and	w0, w3, #0xff
   11790:	mov	x20, x1
   11794:	add	x1, x20, #0x1
   11798:	str	x1, [sp, #424]
   1179c:	ldurb	w2, [x1, #-1]
   117a0:	cbz	x19, 117ac <gcc_cp_fe_context@@Base+0x807c>
   117a4:	and	x2, x2, #0xff
   117a8:	ldrb	w2, [x19, x2]
   117ac:	cmp	w2, #0x2e
   117b0:	b.eq	1176c <gcc_cp_fe_context@@Base+0x803c>  // b.none
   117b4:	cmp	x1, x21
   117b8:	b.eq	117c8 <gcc_cp_fe_context@@Base+0x8098>  // b.none
   117bc:	tbz	w0, #7, 11784 <gcc_cp_fe_context@@Base+0x8054>
   117c0:	strb	wzr, [sp, #296]
   117c4:	b	11790 <gcc_cp_fe_context@@Base+0x8060>
   117c8:	strb	wzr, [x28, w0, sxtw]
   117cc:	cmp	w2, #0x2e
   117d0:	b.eq	11824 <gcc_cp_fe_context@@Base+0x80f4>  // b.none
   117d4:	cmp	w0, #0xff
   117d8:	b.eq	11800 <gcc_cp_fe_context@@Base+0x80d0>  // b.none
   117dc:	mov	w2, w0
   117e0:	sub	w2, w2, #0x1
   117e4:	and	w2, w2, #0xff
   117e8:	cmp	w2, #0xff
   117ec:	b.ne	117e0 <gcc_cp_fe_context@@Base+0x80b0>  // b.any
   117f0:	and	x0, x0, #0xff
   117f4:	mvn	x0, x0
   117f8:	add	x0, x1, x0
   117fc:	str	x0, [sp, #424]
   11800:	ldrb	w0, [x26, #12]
   11804:	orr	w0, w0, #0x8
   11808:	strb	w0, [x26, #12]
   1180c:	ldrb	w0, [x26, #6]
   11810:	orr	w0, w0, #0x40
   11814:	strb	w0, [x26, #6]
   11818:	mov	w25, #0x2e                  	// #46
   1181c:	mov	w24, #0x0                   	// #0
   11820:	b	10edc <gcc_cp_fe_context@@Base+0x77ac>
   11824:	mov	x2, x21
   11828:	ldrb	w3, [x20, #1]
   1182c:	cmp	w3, #0x5d
   11830:	b.ne	117d4 <gcc_cp_fe_context@@Base+0x80a4>  // b.any
   11834:	ldrb	w25, [sp, #296]
   11838:	cbz	w25, 117d4 <gcc_cp_fe_context@@Base+0x80a4>
   1183c:	cmp	w0, #0x1
   11840:	b.ne	11874 <gcc_cp_fe_context@@Base+0x8144>  // b.any
   11844:	cmp	x21, x2
   11848:	b.eq	118a4 <gcc_cp_fe_context@@Base+0x8174>  // b.none
   1184c:	add	x20, x20, #0x2
   11850:	str	x20, [sp, #424]
   11854:	ubfx	x1, x25, #3, #5
   11858:	and	w2, w25, #0x7
   1185c:	mov	w0, #0x1                   	// #1
   11860:	lsl	w0, w0, w2
   11864:	ldrb	w2, [x27, x1]
   11868:	orr	w0, w0, w2
   1186c:	strb	w0, [x27, x1]
   11870:	b	1181c <gcc_cp_fe_context@@Base+0x80ec>
   11874:	ldr	x0, [sp, #128]
   11878:	bl	5440 <free@plt>
   1187c:	mov	w26, #0x3                   	// #3
   11880:	ldp	x21, x22, [sp, #32]
   11884:	ldp	x23, x24, [sp, #48]
   11888:	ldp	x27, x28, [sp, #80]
   1188c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11890:	mov	w26, #0xe                   	// #14
   11894:	ldp	x21, x22, [sp, #32]
   11898:	ldp	x23, x24, [sp, #48]
   1189c:	ldp	x27, x28, [sp, #80]
   118a0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   118a4:	mov	w26, #0xe                   	// #14
   118a8:	ldp	x21, x22, [sp, #32]
   118ac:	ldp	x23, x24, [sp, #48]
   118b0:	ldp	x27, x28, [sp, #80]
   118b4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   118b8:	ldr	x0, [sp, #112]
   118bc:	tbz	w0, #13, 11994 <gcc_cp_fe_context@@Base+0x8264>
   118c0:	ldr	x0, [x19, #48]
   118c4:	add	x0, x0, #0x1
   118c8:	str	x0, [x19, #48]
   118cc:	ldr	w0, [sp, #148]
   118d0:	add	w0, w0, #0x1
   118d4:	str	w0, [sp, #148]
   118d8:	ldr	w0, [sp, #144]
   118dc:	ldr	w1, [sp, #176]
   118e0:	cmp	w0, w1
   118e4:	b.eq	11c44 <gcc_cp_fe_context@@Base+0x8514>  // b.none
   118e8:	ldr	x24, [x19]
   118ec:	ldr	w1, [sp, #144]
   118f0:	ubfiz	x0, x1, #2, #32
   118f4:	add	x0, x0, w1, uxtw
   118f8:	ldr	x3, [sp, #128]
   118fc:	add	x1, x3, x0, lsl #3
   11900:	sub	x2, x28, x24
   11904:	str	x2, [x3, x0, lsl #3]
   11908:	sub	x0, x22, x24
   1190c:	cmp	x22, #0x0
   11910:	csinc	x0, xzr, x0, eq  // eq = none
   11914:	str	x0, [x1, #8]
   11918:	sub	x0, x23, x24
   1191c:	str	x0, [x1, #24]
   11920:	ldr	w2, [sp, #148]
   11924:	str	w2, [x1, #32]
   11928:	cmp	w2, #0xff
   1192c:	b.ls	11c80 <gcc_cp_fe_context@@Base+0x8550>  // b.plast
   11930:	ldr	w0, [sp, #144]
   11934:	add	w0, w0, #0x1
   11938:	str	w0, [sp, #144]
   1193c:	mov	x28, x23
   11940:	mov	x22, #0x0                   	// #0
   11944:	mov	x21, #0x0                   	// #0
   11948:	mov	x20, #0x0                   	// #0
   1194c:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   11950:	ldr	x0, [sp, #112]
   11954:	tbz	w0, #11, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11958:	ldr	x0, [sp, #112]
   1195c:	tbnz	w0, #10, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11960:	ldr	x24, [x19]
   11964:	ldr	x1, [x19, #8]
   11968:	sub	x0, x23, x24
   1196c:	add	x0, x0, #0x3
   11970:	cmp	x0, x1
   11974:	b.ls	11f2c <gcc_cp_fe_context@@Base+0x87fc>  // b.plast
   11978:	mov	x26, #0x10000               	// #65536
   1197c:	mov	w25, #0x10001               	// #65537
   11980:	b	11ef8 <gcc_cp_fe_context@@Base+0x87c8>
   11984:	mov	x0, #0x1200                	// #4608
   11988:	ldr	x1, [sp, #112]
   1198c:	bics	xzr, x0, x1
   11990:	b.eq	12028 <gcc_cp_fe_context@@Base+0x88f8>  // b.none
   11994:	cbz	x20, 119b4 <gcc_cp_fe_context@@Base+0x8284>
   11998:	ldrb	w1, [x20]
   1199c:	and	x0, x1, #0xff
   119a0:	add	x0, x0, #0x1
   119a4:	add	x0, x20, x0
   119a8:	cmp	w1, #0xff
   119ac:	ccmp	x0, x23, #0x0, ne  // ne = any
   119b0:	b.eq	129cc <gcc_cp_fe_context@@Base+0x929c>  // b.none
   119b4:	ldr	x24, [x19]
   119b8:	ldr	x1, [x19, #8]
   119bc:	sub	x0, x23, x24
   119c0:	add	x0, x0, #0x2
   119c4:	mov	x21, x23
   119c8:	mov	x27, #0x10000               	// #65536
   119cc:	mov	w26, #0x10001               	// #65537
   119d0:	cmp	x0, x1
   119d4:	b.hi	12a6c <gcc_cp_fe_context@@Base+0x933c>  // b.pmore
   119d8:	add	x20, x23, #0x1
   119dc:	mov	x24, x23
   119e0:	mov	w0, #0x2                   	// #2
   119e4:	strb	w0, [x24], #2
   119e8:	strb	wzr, [x23, #1]
   119ec:	ldr	x23, [x19]
   119f0:	ldr	x1, [x19, #8]
   119f4:	sub	x0, x24, x23
   119f8:	add	x0, x0, #0x1
   119fc:	cmp	x0, x1
   11a00:	b.ls	12b54 <gcc_cp_fe_context@@Base+0x9424>  // b.plast
   11a04:	mov	x27, #0x10000               	// #65536
   11a08:	mov	w26, #0x10001               	// #65537
   11a0c:	b	12af0 <gcc_cp_fe_context@@Base+0x93c0>
   11a10:	ldr	x0, [sp, #128]
   11a14:	bl	5440 <free@plt>
   11a18:	mov	w26, #0x5                   	// #5
   11a1c:	ldp	x21, x22, [sp, #32]
   11a20:	ldp	x23, x24, [sp, #48]
   11a24:	ldp	x27, x28, [sp, #80]
   11a28:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11a2c:	cmp	w25, #0x2b
   11a30:	b.eq	129c0 <gcc_cp_fe_context@@Base+0x9290>  // b.none
   11a34:	b.ls	11a78 <gcc_cp_fe_context@@Base+0x8348>  // b.plast
   11a38:	cmp	w25, #0x3c
   11a3c:	b.eq	1259c <gcc_cp_fe_context@@Base+0x8e6c>  // b.none
   11a40:	b.ls	11aec <gcc_cp_fe_context@@Base+0x83bc>  // b.plast
   11a44:	cmp	w25, #0x3e
   11a48:	b.ne	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.any
   11a4c:	ldr	x0, [sp, #112]
   11a50:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11a54:	ldr	x24, [x19]
   11a58:	ldr	x1, [x19, #8]
   11a5c:	sub	x0, x23, x24
   11a60:	add	x0, x0, #0x1
   11a64:	cmp	x0, x1
   11a68:	b.ls	126cc <gcc_cp_fe_context@@Base+0x8f9c>  // b.plast
   11a6c:	mov	x26, #0x10000               	// #65536
   11a70:	mov	w25, #0x10001               	// #65537
   11a74:	b	12668 <gcc_cp_fe_context@@Base+0x8f38>
   11a78:	cmp	w25, #0x28
   11a7c:	b.eq	11c38 <gcc_cp_fe_context@@Base+0x8508>  // b.none
   11a80:	cmp	w25, #0x29
   11a84:	b.ne	11ab8 <gcc_cp_fe_context@@Base+0x8388>  // b.any
   11a88:	ldr	x0, [sp, #112]
   11a8c:	tbnz	w0, #13, 12414 <gcc_cp_fe_context@@Base+0x8ce4>
   11a90:	ldr	w1, [sp, #144]
   11a94:	cbnz	w1, 130f8 <gcc_cp_fe_context@@Base+0x99c8>
   11a98:	tbnz	w0, #17, 12414 <gcc_cp_fe_context@@Base+0x8ce4>
   11a9c:	ldr	x0, [sp, #128]
   11aa0:	bl	5440 <free@plt>
   11aa4:	mov	w26, #0x10                  	// #16
   11aa8:	ldp	x21, x22, [sp, #32]
   11aac:	ldp	x23, x24, [sp, #48]
   11ab0:	ldp	x27, x28, [sp, #80]
   11ab4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11ab8:	cmp	w25, #0x27
   11abc:	b.ne	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.any
   11ac0:	ldr	x0, [sp, #112]
   11ac4:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11ac8:	ldr	x24, [x19]
   11acc:	ldr	x1, [x19, #8]
   11ad0:	sub	x0, x23, x24
   11ad4:	add	x0, x0, #0x1
   11ad8:	cmp	x0, x1
   11adc:	b.ls	12918 <gcc_cp_fe_context@@Base+0x91e8>  // b.plast
   11ae0:	mov	x26, #0x10000               	// #65536
   11ae4:	mov	w25, #0x10001               	// #65537
   11ae8:	b	128b4 <gcc_cp_fe_context@@Base+0x9184>
   11aec:	sub	w0, w25, #0x31
   11af0:	and	w0, w0, #0xff
   11af4:	cmp	w0, #0x8
   11af8:	b.hi	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.pmore
   11afc:	ldr	x0, [sp, #112]
   11b00:	tbnz	w0, #14, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11b04:	sub	w26, w25, #0x30
   11b08:	and	w26, w26, #0xff
   11b0c:	mov	w3, w26
   11b10:	ldr	w0, [sp, #148]
   11b14:	cmp	w26, w0
   11b18:	b.hi	12924 <gcc_cp_fe_context@@Base+0x91f4>  // b.pmore
   11b1c:	ldr	w0, [sp, #144]
   11b20:	subs	w1, w0, #0x1
   11b24:	b.mi	11b54 <gcc_cp_fe_context@@Base+0x8424>  // b.first
   11b28:	sbfiz	x0, x1, #2, #32
   11b2c:	add	x0, x0, w1, sxtw
   11b30:	ldr	x2, [sp, #128]
   11b34:	add	x0, x2, x0, lsl #3
   11b38:	add	x0, x0, #0x20
   11b3c:	ldr	w2, [x0]
   11b40:	cmp	w3, w2
   11b44:	b.eq	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.none
   11b48:	sub	x0, x0, #0x28
   11b4c:	subs	w1, w1, #0x1
   11b50:	b.pl	11b3c <gcc_cp_fe_context@@Base+0x840c>  // b.nfrst
   11b54:	ldr	x24, [x19]
   11b58:	ldr	x0, [x19, #8]
   11b5c:	sub	x1, x23, x24
   11b60:	add	x1, x1, #0x2
   11b64:	mov	x21, x23
   11b68:	mov	x27, #0x10000               	// #65536
   11b6c:	mov	w25, #0x10001               	// #65537
   11b70:	cmp	x1, x0
   11b74:	b.hi	12958 <gcc_cp_fe_context@@Base+0x9228>  // b.pmore
   11b78:	mov	x0, x23
   11b7c:	mov	w1, #0x8                   	// #8
   11b80:	strb	w1, [x0], #2
   11b84:	strb	w26, [x23, #1]
   11b88:	mov	x23, x0
   11b8c:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   11b90:	cmp	w25, #0x57
   11b94:	b.eq	124e0 <gcc_cp_fe_context@@Base+0x8db0>  // b.none
   11b98:	cmp	w25, #0x60
   11b9c:	b.ne	11bcc <gcc_cp_fe_context@@Base+0x849c>  // b.any
   11ba0:	ldr	x0, [sp, #112]
   11ba4:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11ba8:	ldr	x24, [x19]
   11bac:	ldr	x1, [x19, #8]
   11bb0:	sub	x0, x23, x24
   11bb4:	add	x0, x0, #0x1
   11bb8:	cmp	x0, x1
   11bbc:	b.ls	12890 <gcc_cp_fe_context@@Base+0x9160>  // b.plast
   11bc0:	mov	x26, #0x10000               	// #65536
   11bc4:	mov	w25, #0x10001               	// #65537
   11bc8:	b	1282c <gcc_cp_fe_context@@Base+0x90fc>
   11bcc:	cmp	w25, #0x42
   11bd0:	b.ne	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.any
   11bd4:	ldr	x0, [sp, #112]
   11bd8:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11bdc:	ldr	x24, [x19]
   11be0:	ldr	x1, [x19, #8]
   11be4:	sub	x0, x23, x24
   11be8:	add	x0, x0, #0x1
   11bec:	cmp	x0, x1
   11bf0:	b.ls	12808 <gcc_cp_fe_context@@Base+0x90d8>  // b.plast
   11bf4:	mov	x26, #0x10000               	// #65536
   11bf8:	mov	w25, #0x10001               	// #65537
   11bfc:	b	127a4 <gcc_cp_fe_context@@Base+0x9074>
   11c00:	cmp	w25, #0x77
   11c04:	b.ne	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.any
   11c08:	ldr	x0, [sp, #112]
   11c0c:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   11c10:	ldr	x24, [x19]
   11c14:	ldr	x1, [x19, #8]
   11c18:	sub	x0, x23, x24
   11c1c:	add	x0, x0, #0x1
   11c20:	cmp	x0, x1
   11c24:	b.ls	124d0 <gcc_cp_fe_context@@Base+0x8da0>  // b.plast
   11c28:	mov	x21, x23
   11c2c:	mov	x26, #0x10000               	// #65536
   11c30:	mov	w25, #0x10001               	// #65537
   11c34:	b	1246c <gcc_cp_fe_context@@Base+0x8d3c>
   11c38:	ldr	x0, [sp, #112]
   11c3c:	tbz	w0, #13, 118c0 <gcc_cp_fe_context@@Base+0x8190>
   11c40:	b	12414 <gcc_cp_fe_context@@Base+0x8ce4>
   11c44:	ldr	w0, [sp, #176]
   11c48:	lsl	w0, w0, #1
   11c4c:	str	w0, [sp, #176]
   11c50:	mov	w0, w0
   11c54:	add	x0, x0, x0, lsl #2
   11c58:	lsl	x1, x0, #3
   11c5c:	ldr	x0, [sp, #128]
   11c60:	bl	5470 <realloc@plt>
   11c64:	str	x0, [sp, #128]
   11c68:	cbnz	x0, 118e8 <gcc_cp_fe_context@@Base+0x81b8>
   11c6c:	mov	w26, #0xc                   	// #12
   11c70:	ldp	x21, x22, [sp, #32]
   11c74:	ldp	x23, x24, [sp, #48]
   11c78:	ldp	x27, x28, [sp, #80]
   11c7c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11c80:	add	x2, x0, #0x2
   11c84:	str	x2, [x1, #16]
   11c88:	ldr	x1, [x19, #8]
   11c8c:	add	x0, x0, #0x3
   11c90:	cmp	x0, x1
   11c94:	b.ls	11d1c <gcc_cp_fe_context@@Base+0x85ec>  // b.plast
   11c98:	mov	x26, #0x10000               	// #65536
   11c9c:	mov	w25, #0x10001               	// #65537
   11ca0:	b	11cbc <gcc_cp_fe_context@@Base+0x858c>
   11ca4:	ldr	x1, [x19, #8]
   11ca8:	sub	x2, x23, x0
   11cac:	add	x2, x2, #0x3
   11cb0:	cmp	x2, x1
   11cb4:	b.ls	11d1c <gcc_cp_fe_context@@Base+0x85ec>  // b.plast
   11cb8:	mov	x24, x0
   11cbc:	cmp	x1, #0x10, lsl #12
   11cc0:	b.eq	12df8 <gcc_cp_fe_context@@Base+0x96c8>  // b.none
   11cc4:	lsl	x1, x1, #1
   11cc8:	cmp	x1, x25
   11ccc:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   11cd0:	str	x1, [x19, #8]
   11cd4:	mov	x0, x24
   11cd8:	bl	5470 <realloc@plt>
   11cdc:	str	x0, [x19]
   11ce0:	cbz	x0, 12e0c <gcc_cp_fe_context@@Base+0x96dc>
   11ce4:	cmp	x0, x24
   11ce8:	b.eq	11ca4 <gcc_cp_fe_context@@Base+0x8574>  // b.none
   11cec:	sub	x24, x0, x24
   11cf0:	add	x23, x23, x24
   11cf4:	add	x1, x22, x24
   11cf8:	cmp	x22, #0x0
   11cfc:	csel	x22, x1, x22, ne  // ne = any
   11d00:	add	x1, x21, x24
   11d04:	cmp	x21, #0x0
   11d08:	csel	x21, x1, x21, ne  // ne = any
   11d0c:	add	x24, x20, x24
   11d10:	cmp	x20, #0x0
   11d14:	csel	x20, x24, x20, ne  // ne = any
   11d18:	b	11ca4 <gcc_cp_fe_context@@Base+0x8574>
   11d1c:	mov	w0, #0x6                   	// #6
   11d20:	strb	w0, [x23]
   11d24:	ldrb	w0, [sp, #148]
   11d28:	strb	w0, [x23, #1]
   11d2c:	strb	wzr, [x23, #2]
   11d30:	add	x23, x23, #0x3
   11d34:	b	11930 <gcc_cp_fe_context@@Base+0x8200>
   11d38:	ldr	x24, [x19]
   11d3c:	ldr	x1, [x19, #8]
   11d40:	sub	x0, x23, x24
   11d44:	add	x0, x0, #0x1
   11d48:	cmp	x0, x1
   11d4c:	b.ls	11dd8 <gcc_cp_fe_context@@Base+0x86a8>  // b.plast
   11d50:	mov	x26, #0x10000               	// #65536
   11d54:	mov	w25, #0x10001               	// #65537
   11d58:	b	11da4 <gcc_cp_fe_context@@Base+0x8674>
   11d5c:	sub	x24, x0, x24
   11d60:	add	x23, x23, x24
   11d64:	add	x28, x28, x24
   11d68:	add	x1, x22, x24
   11d6c:	cmp	x22, #0x0
   11d70:	csel	x22, x1, x22, ne  // ne = any
   11d74:	add	x1, x21, x24
   11d78:	cmp	x21, #0x0
   11d7c:	csel	x21, x1, x21, ne  // ne = any
   11d80:	add	x24, x20, x24
   11d84:	cmp	x20, #0x0
   11d88:	csel	x20, x24, x20, ne  // ne = any
   11d8c:	ldr	x1, [x19, #8]
   11d90:	sub	x2, x23, x0
   11d94:	add	x2, x2, #0x1
   11d98:	cmp	x2, x1
   11d9c:	b.ls	11dd8 <gcc_cp_fe_context@@Base+0x86a8>  // b.plast
   11da0:	mov	x24, x0
   11da4:	cmp	x1, #0x10, lsl #12
   11da8:	b.eq	12e20 <gcc_cp_fe_context@@Base+0x96f0>  // b.none
   11dac:	lsl	x1, x1, #1
   11db0:	cmp	x1, x25
   11db4:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   11db8:	str	x1, [x19, #8]
   11dbc:	mov	x0, x24
   11dc0:	bl	5470 <realloc@plt>
   11dc4:	str	x0, [x19]
   11dc8:	cbz	x0, 12e34 <gcc_cp_fe_context@@Base+0x9704>
   11dcc:	cmp	x0, x24
   11dd0:	b.ne	11d5c <gcc_cp_fe_context@@Base+0x862c>  // b.any
   11dd4:	b	11d8c <gcc_cp_fe_context@@Base+0x865c>
   11dd8:	mov	x1, x23
   11ddc:	mov	w0, #0x14                  	// #20
   11de0:	strb	w0, [x1], #1
   11de4:	sub	x0, x23, x22
   11de8:	sub	w0, w0, #0x3
   11dec:	mov	w2, #0xe                   	// #14
   11df0:	strb	w2, [x22]
   11df4:	strb	w0, [x22, #1]
   11df8:	asr	w0, w0, #8
   11dfc:	strb	w0, [x22, #2]
   11e00:	mov	x23, x1
   11e04:	b	10498 <gcc_cp_fe_context@@Base+0x6d68>
   11e08:	ldr	x0, [sp, #128]
   11e0c:	bl	5440 <free@plt>
   11e10:	mov	w26, #0x10                  	// #16
   11e14:	ldp	x21, x22, [sp, #32]
   11e18:	ldp	x23, x24, [sp, #48]
   11e1c:	ldp	x27, x28, [sp, #80]
   11e20:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   11e24:	sub	x20, x0, x20
   11e28:	add	x23, x23, x20
   11e2c:	add	x28, x28, x20
   11e30:	add	x1, x22, x20
   11e34:	cmp	x22, #0x0
   11e38:	csel	x22, x1, x22, ne  // ne = any
   11e3c:	add	x20, x21, x20
   11e40:	cmp	x21, #0x0
   11e44:	csel	x21, x20, x21, ne  // ne = any
   11e48:	ldr	x1, [x19, #8]
   11e4c:	sub	x2, x23, x0
   11e50:	add	x2, x2, #0x3
   11e54:	cmp	x2, x1
   11e58:	b.ls	11e94 <gcc_cp_fe_context@@Base+0x8764>  // b.plast
   11e5c:	mov	x20, x0
   11e60:	cmp	x1, #0x10, lsl #12
   11e64:	b.eq	12e48 <gcc_cp_fe_context@@Base+0x9718>  // b.none
   11e68:	lsl	x1, x1, #1
   11e6c:	cmp	x1, x25
   11e70:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   11e74:	str	x1, [x19, #8]
   11e78:	mov	x0, x20
   11e7c:	bl	5470 <realloc@plt>
   11e80:	str	x0, [x19]
   11e84:	cbz	x0, 12e5c <gcc_cp_fe_context@@Base+0x972c>
   11e88:	cmp	x0, x20
   11e8c:	b.ne	11e24 <gcc_cp_fe_context@@Base+0x86f4>  // b.any
   11e90:	b	11e48 <gcc_cp_fe_context@@Base+0x8718>
   11e94:	mov	w0, #0x7                   	// #7
   11e98:	strb	w0, [x23]
   11e9c:	strb	w27, [x23, #1]
   11ea0:	strb	w24, [x23, #2]
   11ea4:	add	x23, x23, #0x3
   11ea8:	mov	x20, #0x0                   	// #0
   11eac:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   11eb0:	sub	x24, x0, x24
   11eb4:	add	x23, x23, x24
   11eb8:	add	x28, x28, x24
   11ebc:	add	x1, x22, x24
   11ec0:	cmp	x22, #0x0
   11ec4:	csel	x22, x1, x22, ne  // ne = any
   11ec8:	add	x1, x21, x24
   11ecc:	cmp	x21, #0x0
   11ed0:	csel	x21, x1, x21, ne  // ne = any
   11ed4:	add	x24, x20, x24
   11ed8:	cmp	x20, #0x0
   11edc:	csel	x20, x24, x20, ne  // ne = any
   11ee0:	ldr	x1, [x19, #8]
   11ee4:	sub	x2, x23, x0
   11ee8:	add	x2, x2, #0x3
   11eec:	cmp	x2, x1
   11ef0:	b.ls	11f2c <gcc_cp_fe_context@@Base+0x87fc>  // b.plast
   11ef4:	mov	x24, x0
   11ef8:	cmp	x1, #0x10, lsl #12
   11efc:	b.eq	12e70 <gcc_cp_fe_context@@Base+0x9740>  // b.none
   11f00:	lsl	x1, x1, #1
   11f04:	cmp	x1, x25
   11f08:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   11f0c:	str	x1, [x19, #8]
   11f10:	mov	x0, x24
   11f14:	bl	5470 <realloc@plt>
   11f18:	str	x0, [x19]
   11f1c:	cbz	x0, 12e84 <gcc_cp_fe_context@@Base+0x9754>
   11f20:	cmp	x0, x24
   11f24:	b.ne	11eb0 <gcc_cp_fe_context@@Base+0x8780>  // b.any
   11f28:	b	11ee0 <gcc_cp_fe_context@@Base+0x87b0>
   11f2c:	sub	w2, w23, w28
   11f30:	mov	x3, x23
   11f34:	add	w2, w2, #0x3
   11f38:	mov	x1, x28
   11f3c:	mov	w0, #0xf                   	// #15
   11f40:	bl	da58 <gcc_cp_fe_context@@Base+0x4328>
   11f44:	add	x23, x23, #0x3
   11f48:	cbz	x22, 11f68 <gcc_cp_fe_context@@Base+0x8838>
   11f4c:	sub	x0, x23, x22
   11f50:	sub	w0, w0, #0x3
   11f54:	mov	w1, #0xe                   	// #14
   11f58:	strb	w1, [x22]
   11f5c:	strb	w0, [x22, #1]
   11f60:	asr	w0, w0, #8
   11f64:	strb	w0, [x22, #2]
   11f68:	ldr	x20, [x19]
   11f6c:	ldr	x1, [x19, #8]
   11f70:	sub	x0, x23, x20
   11f74:	add	x0, x0, #0x3
   11f78:	cmp	x0, x1
   11f7c:	b.ls	11ffc <gcc_cp_fe_context@@Base+0x88cc>  // b.plast
   11f80:	mov	x22, x23
   11f84:	mov	x25, #0x10000               	// #65536
   11f88:	mov	w24, #0x10001               	// #65537
   11f8c:	b	11fa8 <gcc_cp_fe_context@@Base+0x8878>
   11f90:	ldr	x1, [x19, #8]
   11f94:	sub	x2, x23, x0
   11f98:	add	x2, x2, #0x3
   11f9c:	cmp	x2, x1
   11fa0:	b.ls	12000 <gcc_cp_fe_context@@Base+0x88d0>  // b.plast
   11fa4:	mov	x20, x0
   11fa8:	cmp	x1, #0x10, lsl #12
   11fac:	b.eq	12e98 <gcc_cp_fe_context@@Base+0x9768>  // b.none
   11fb0:	lsl	x1, x1, #1
   11fb4:	cmp	x1, x24
   11fb8:	csel	x1, x1, x25, cc  // cc = lo, ul, last
   11fbc:	str	x1, [x19, #8]
   11fc0:	mov	x0, x20
   11fc4:	bl	5470 <realloc@plt>
   11fc8:	str	x0, [x19]
   11fcc:	cbz	x0, 12eac <gcc_cp_fe_context@@Base+0x977c>
   11fd0:	cmp	x0, x20
   11fd4:	b.eq	11f90 <gcc_cp_fe_context@@Base+0x8860>  // b.none
   11fd8:	sub	x20, x0, x20
   11fdc:	add	x23, x23, x20
   11fe0:	add	x1, x22, x20
   11fe4:	cmp	x22, #0x0
   11fe8:	csel	x22, x1, x22, ne  // ne = any
   11fec:	add	x20, x21, x20
   11ff0:	cmp	x21, #0x0
   11ff4:	csel	x21, x20, x21, ne  // ne = any
   11ff8:	b	11f90 <gcc_cp_fe_context@@Base+0x8860>
   11ffc:	mov	x22, x23
   12000:	add	x23, x23, #0x3
   12004:	mov	x28, x23
   12008:	mov	x21, #0x0                   	// #0
   1200c:	mov	x20, #0x0                   	// #0
   12010:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   12014:	mov	x0, #0x1200                	// #4608
   12018:	ldr	x1, [sp, #112]
   1201c:	and	x0, x1, x0
   12020:	cmp	x0, #0x200
   12024:	b.ne	12414 <gcc_cp_fe_context@@Base+0x8ce4>  // b.any
   12028:	ldr	x4, [sp, #424]
   1202c:	ldr	x6, [sp, #104]
   12030:	cmp	x6, x4
   12034:	b.eq	123fc <gcc_cp_fe_context@@Base+0x8ccc>  // b.none
   12038:	mov	x1, x4
   1203c:	mov	w24, #0xffffffff            	// #-1
   12040:	mov	w3, #0x7fff                	// #32767
   12044:	ldr	x5, [sp, #120]
   12048:	b	12068 <gcc_cp_fe_context@@Base+0x8938>
   1204c:	cmp	w24, #0x0
   12050:	csel	w24, w24, wzr, ge  // ge = tcont
   12054:	add	w24, w24, w24, lsl #2
   12058:	add	w24, w0, w24, lsl #1
   1205c:	sub	w24, w24, #0x30
   12060:	cmp	x1, x6
   12064:	b.eq	1209c <gcc_cp_fe_context@@Base+0x896c>  // b.none
   12068:	add	x1, x1, #0x1
   1206c:	str	x1, [sp, #424]
   12070:	ldurb	w0, [x1, #-1]
   12074:	cbz	x5, 12080 <gcc_cp_fe_context@@Base+0x8950>
   12078:	and	x0, x0, #0xff
   1207c:	ldrb	w0, [x5, x0]
   12080:	sub	w2, w0, #0x30
   12084:	and	w2, w2, #0xff
   12088:	cmp	w2, #0x9
   1208c:	b.hi	12128 <gcc_cp_fe_context@@Base+0x89f8>  // b.pmore
   12090:	cmp	w24, w3
   12094:	b.gt	12060 <gcc_cp_fe_context@@Base+0x8930>
   12098:	b	1204c <gcc_cp_fe_context@@Base+0x891c>
   1209c:	mov	w25, w24
   120a0:	cmp	w24, #0x0
   120a4:	ccmp	w24, w25, #0x0, ge  // ge = tcont
   120a8:	b.gt	123fc <gcc_cp_fe_context@@Base+0x8ccc>
   120ac:	ldr	x1, [sp, #112]
   120b0:	tbnz	w1, #12, 120e8 <gcc_cp_fe_context@@Base+0x89b8>
   120b4:	cmp	w0, #0x5c
   120b8:	b.ne	131d8 <gcc_cp_fe_context@@Base+0x9aa8>  // b.any
   120bc:	ldr	x0, [sp, #424]
   120c0:	ldr	x1, [sp, #104]
   120c4:	cmp	x0, x1
   120c8:	b.eq	131d8 <gcc_cp_fe_context@@Base+0x9aa8>  // b.none
   120cc:	add	x1, x0, #0x1
   120d0:	str	x1, [sp, #424]
   120d4:	ldrb	w0, [x0]
   120d8:	ldr	x1, [sp, #120]
   120dc:	cbz	x1, 120e8 <gcc_cp_fe_context@@Base+0x89b8>
   120e0:	and	x0, x0, #0xff
   120e4:	ldrb	w0, [x1, x0]
   120e8:	cmp	w0, #0x7d
   120ec:	b.ne	123fc <gcc_cp_fe_context@@Base+0x8ccc>  // b.any
   120f0:	cbz	x21, 121b8 <gcc_cp_fe_context@@Base+0x8a88>
   120f4:	mov	w0, #0x7fff                	// #32767
   120f8:	cmp	w25, w0
   120fc:	b.gt	121f8 <gcc_cp_fe_context@@Base+0x8ac8>
   12100:	cbnz	w25, 122b8 <gcc_cp_fe_context@@Base+0x8b88>
   12104:	ldr	x24, [x19]
   12108:	ldr	x0, [x19, #8]
   1210c:	sub	x1, x23, x24
   12110:	add	x1, x1, #0x3
   12114:	cmp	x1, x0
   12118:	b.ls	12294 <gcc_cp_fe_context@@Base+0x8b64>  // b.plast
   1211c:	mov	x26, #0x10000               	// #65536
   12120:	mov	w25, #0x10001               	// #65537
   12124:	b	1225c <gcc_cp_fe_context@@Base+0x8b2c>
   12128:	mov	w25, w24
   1212c:	cmp	w0, #0x2c
   12130:	b.ne	120a0 <gcc_cp_fe_context@@Base+0x8970>  // b.any
   12134:	ldr	x6, [sp, #104]
   12138:	cmp	x1, x6
   1213c:	b.eq	121b0 <gcc_cp_fe_context@@Base+0x8a80>  // b.none
   12140:	mov	w25, #0xffffffff            	// #-1
   12144:	mov	w3, #0x7fff                	// #32767
   12148:	ldr	x5, [sp, #120]
   1214c:	b	12158 <gcc_cp_fe_context@@Base+0x8a28>
   12150:	cmp	x1, x6
   12154:	b.eq	121a0 <gcc_cp_fe_context@@Base+0x8a70>  // b.none
   12158:	add	x1, x1, #0x1
   1215c:	str	x1, [sp, #424]
   12160:	ldurb	w0, [x1, #-1]
   12164:	cbz	x5, 12170 <gcc_cp_fe_context@@Base+0x8a40>
   12168:	and	x0, x0, #0xff
   1216c:	ldrb	w0, [x5, x0]
   12170:	sub	w2, w0, #0x30
   12174:	and	w2, w2, #0xff
   12178:	cmp	w2, #0x9
   1217c:	b.hi	121a0 <gcc_cp_fe_context@@Base+0x8a70>  // b.pmore
   12180:	cmp	w25, w3
   12184:	b.gt	12150 <gcc_cp_fe_context@@Base+0x8a20>
   12188:	cmp	w25, #0x0
   1218c:	csel	w25, w25, wzr, ge  // ge = tcont
   12190:	add	w25, w25, w25, lsl #2
   12194:	add	w25, w0, w25, lsl #1
   12198:	sub	w25, w25, #0x30
   1219c:	b	12150 <gcc_cp_fe_context@@Base+0x8a20>
   121a0:	cmp	w25, #0x0
   121a4:	mov	w1, #0x7fff                	// #32767
   121a8:	csel	w25, w25, w1, ge  // ge = tcont
   121ac:	b	120a0 <gcc_cp_fe_context@@Base+0x8970>
   121b0:	mov	w25, #0x7fff                	// #32767
   121b4:	b	120a0 <gcc_cp_fe_context@@Base+0x8970>
   121b8:	ldr	x0, [sp, #112]
   121bc:	and	x0, x0, #0x3fffe0
   121c0:	and	x0, x0, #0xffffffffffe0003f
   121c4:	cmp	x0, #0x20
   121c8:	b.eq	121dc <gcc_cp_fe_context@@Base+0x8aac>  // b.none
   121cc:	ldr	x0, [sp, #112]
   121d0:	tbz	w0, #4, 12404 <gcc_cp_fe_context@@Base+0x8cd4>
   121d4:	mov	x21, x23
   121d8:	b	120f4 <gcc_cp_fe_context@@Base+0x89c4>
   121dc:	ldr	x0, [sp, #128]
   121e0:	bl	5440 <free@plt>
   121e4:	mov	w26, #0xd                   	// #13
   121e8:	ldp	x21, x22, [sp, #32]
   121ec:	ldp	x23, x24, [sp, #48]
   121f0:	ldp	x27, x28, [sp, #80]
   121f4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   121f8:	ldr	x0, [sp, #128]
   121fc:	bl	5440 <free@plt>
   12200:	mov	w26, #0xa                   	// #10
   12204:	ldp	x21, x22, [sp, #32]
   12208:	ldp	x23, x24, [sp, #48]
   1220c:	ldp	x27, x28, [sp, #80]
   12210:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12214:	sub	x24, x0, x24
   12218:	add	x23, x23, x24
   1221c:	add	x28, x28, x24
   12220:	add	x0, x22, x24
   12224:	cmp	x22, #0x0
   12228:	csel	x22, x0, x22, ne  // ne = any
   1222c:	add	x0, x21, x24
   12230:	cmp	x21, #0x0
   12234:	csel	x21, x0, x21, ne  // ne = any
   12238:	add	x24, x20, x24
   1223c:	cmp	x20, #0x0
   12240:	csel	x20, x24, x20, ne  // ne = any
   12244:	ldr	x0, [x19, #8]
   12248:	sub	x2, x23, x1
   1224c:	add	x2, x2, #0x3
   12250:	cmp	x2, x0
   12254:	b.ls	12294 <gcc_cp_fe_context@@Base+0x8b64>  // b.plast
   12258:	mov	x24, x1
   1225c:	cmp	x0, #0x10, lsl #12
   12260:	b.eq	12ec0 <gcc_cp_fe_context@@Base+0x9790>  // b.none
   12264:	lsl	x0, x0, #1
   12268:	cmp	x0, x25
   1226c:	csel	x1, x0, x26, cc  // cc = lo, ul, last
   12270:	str	x1, [x19, #8]
   12274:	mov	x0, x24
   12278:	bl	5470 <realloc@plt>
   1227c:	mov	x1, x0
   12280:	str	x0, [x19]
   12284:	cbz	x0, 12ed4 <gcc_cp_fe_context@@Base+0x97a4>
   12288:	cmp	x0, x24
   1228c:	b.ne	12214 <gcc_cp_fe_context@@Base+0x8ae4>  // b.any
   12290:	b	12244 <gcc_cp_fe_context@@Base+0x8b14>
   12294:	add	x20, x23, #0x3
   12298:	mov	x3, x23
   1229c:	sub	w2, w23, w21
   122a0:	mov	x1, x21
   122a4:	mov	w0, #0xd                   	// #13
   122a8:	bl	da58 <gcc_cp_fe_context@@Base+0x4328>
   122ac:	mov	x23, x20
   122b0:	mov	x20, #0x0                   	// #0
   122b4:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   122b8:	cmp	w25, #0x1
   122bc:	mov	w27, #0x14                  	// #20
   122c0:	mov	w0, #0xa                   	// #10
   122c4:	csel	w27, w27, w0, gt
   122c8:	ldr	x26, [x19]
   122cc:	mov	w27, w27
   122d0:	ldr	x0, [x19, #8]
   122d4:	sub	x1, x23, x26
   122d8:	add	x1, x1, x27
   122dc:	cmp	x1, x0
   122e0:	b.hi	123bc <gcc_cp_fe_context@@Base+0x8c8c>  // b.pmore
   122e4:	cmp	w25, #0x1
   122e8:	b.le	131ec <gcc_cp_fe_context@@Base+0x9abc>
   122ec:	add	x20, x23, #0xa
   122f0:	sub	x2, x20, x21
   122f4:	mov	x4, x23
   122f8:	mov	w3, w24
   122fc:	sub	w2, w2, #0x3
   12300:	mov	x1, x21
   12304:	mov	w0, #0x15                  	// #21
   12308:	bl	da90 <gcc_cp_fe_context@@Base+0x4360>
   1230c:	add	x4, x23, #0x5
   12310:	mov	w3, w24
   12314:	mov	w2, #0x5                   	// #5
   12318:	mov	x1, x21
   1231c:	mov	w0, #0x17                  	// #23
   12320:	bl	da90 <gcc_cp_fe_context@@Base+0x4360>
   12324:	sub	w0, w21, w20
   12328:	add	w0, w0, #0x2
   1232c:	sub	w3, w25, #0x1
   12330:	mov	w1, #0x16                  	// #22
   12334:	strb	w1, [x23, #10]
   12338:	strb	w0, [x23, #11]
   1233c:	asr	w0, w0, #8
   12340:	strb	w0, [x23, #12]
   12344:	strb	w3, [x23, #13]
   12348:	asr	w0, w3, #8
   1234c:	strb	w0, [x23, #14]
   12350:	add	x2, x23, #0xf
   12354:	mov	x4, x2
   12358:	sub	w2, w2, w21
   1235c:	mov	x1, x21
   12360:	mov	w0, #0x17                  	// #23
   12364:	bl	da90 <gcc_cp_fe_context@@Base+0x4360>
   12368:	add	x23, x23, #0x14
   1236c:	mov	x20, #0x0                   	// #0
   12370:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   12374:	sub	x26, x0, x26
   12378:	add	x23, x23, x26
   1237c:	add	x28, x28, x26
   12380:	add	x0, x22, x26
   12384:	cmp	x22, #0x0
   12388:	csel	x22, x0, x22, ne  // ne = any
   1238c:	add	x0, x21, x26
   12390:	cmp	x21, #0x0
   12394:	csel	x21, x0, x21, ne  // ne = any
   12398:	add	x26, x20, x26
   1239c:	cmp	x20, #0x0
   123a0:	csel	x20, x26, x20, ne  // ne = any
   123a4:	ldr	x0, [x19, #8]
   123a8:	sub	x2, x23, x1
   123ac:	add	x2, x2, x27
   123b0:	cmp	x2, x0
   123b4:	b.ls	122e4 <gcc_cp_fe_context@@Base+0x8bb4>  // b.plast
   123b8:	mov	x26, x1
   123bc:	cmp	x0, #0x10, lsl #12
   123c0:	b.eq	12ee8 <gcc_cp_fe_context@@Base+0x97b8>  // b.none
   123c4:	lsl	x0, x0, #1
   123c8:	mov	w1, #0x10001               	// #65537
   123cc:	cmp	x0, x1
   123d0:	mov	x1, #0x10000               	// #65536
   123d4:	csel	x1, x0, x1, cc  // cc = lo, ul, last
   123d8:	str	x1, [x19, #8]
   123dc:	mov	x0, x26
   123e0:	bl	5470 <realloc@plt>
   123e4:	mov	x1, x0
   123e8:	str	x0, [x19]
   123ec:	cbz	x0, 12efc <gcc_cp_fe_context@@Base+0x97cc>
   123f0:	cmp	x0, x26
   123f4:	b.ne	12374 <gcc_cp_fe_context@@Base+0x8c44>  // b.any
   123f8:	b	123a4 <gcc_cp_fe_context@@Base+0x8c74>
   123fc:	ldr	x0, [sp, #112]
   12400:	tbz	w0, #21, 12428 <gcc_cp_fe_context@@Base+0x8cf8>
   12404:	str	x4, [sp, #424]
   12408:	mov	w25, #0x7b                  	// #123
   1240c:	ldr	x0, [sp, #112]
   12410:	tbnz	w0, #12, 11994 <gcc_cp_fe_context@@Base+0x8264>
   12414:	ldr	x0, [sp, #120]
   12418:	cbz	x0, 11994 <gcc_cp_fe_context@@Base+0x8264>
   1241c:	and	x25, x25, #0xff
   12420:	ldrb	w25, [x0, x25]
   12424:	b	11994 <gcc_cp_fe_context@@Base+0x8264>
   12428:	ldr	x0, [sp, #128]
   1242c:	bl	5440 <free@plt>
   12430:	ldr	x0, [sp, #424]
   12434:	ldr	x1, [sp, #104]
   12438:	cmp	x0, x1
   1243c:	cset	w26, ne  // ne = any
   12440:	add	w26, w26, #0x9
   12444:	ldp	x21, x22, [sp, #32]
   12448:	ldp	x23, x24, [sp, #48]
   1244c:	ldp	x27, x28, [sp, #80]
   12450:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12454:	ldr	x1, [x19, #8]
   12458:	sub	x2, x23, x0
   1245c:	add	x2, x2, #0x1
   12460:	cmp	x2, x1
   12464:	b.ls	124d4 <gcc_cp_fe_context@@Base+0x8da4>  // b.plast
   12468:	mov	x24, x0
   1246c:	cmp	x1, #0x10, lsl #12
   12470:	b.eq	12f10 <gcc_cp_fe_context@@Base+0x97e0>  // b.none
   12474:	lsl	x1, x1, #1
   12478:	cmp	x1, x25
   1247c:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   12480:	str	x1, [x19, #8]
   12484:	mov	x0, x24
   12488:	bl	5470 <realloc@plt>
   1248c:	str	x0, [x19]
   12490:	cbz	x0, 12f24 <gcc_cp_fe_context@@Base+0x97f4>
   12494:	cmp	x0, x24
   12498:	b.eq	12454 <gcc_cp_fe_context@@Base+0x8d24>  // b.none
   1249c:	sub	x24, x0, x24
   124a0:	add	x23, x23, x24
   124a4:	add	x28, x28, x24
   124a8:	add	x1, x22, x24
   124ac:	cmp	x22, #0x0
   124b0:	csel	x22, x1, x22, ne  // ne = any
   124b4:	add	x1, x21, x24
   124b8:	cmp	x21, #0x0
   124bc:	csel	x21, x1, x21, ne  // ne = any
   124c0:	add	x24, x20, x24
   124c4:	cmp	x20, #0x0
   124c8:	csel	x20, x24, x20, ne  // ne = any
   124cc:	b	12454 <gcc_cp_fe_context@@Base+0x8d24>
   124d0:	mov	x21, x23
   124d4:	mov	w0, #0x18                  	// #24
   124d8:	strb	w0, [x23], #1
   124dc:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   124e0:	ldr	x0, [sp, #112]
   124e4:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   124e8:	ldr	x24, [x19]
   124ec:	ldr	x1, [x19, #8]
   124f0:	sub	x0, x23, x24
   124f4:	add	x0, x0, #0x1
   124f8:	cmp	x0, x1
   124fc:	b.ls	1258c <gcc_cp_fe_context@@Base+0x8e5c>  // b.plast
   12500:	mov	x21, x23
   12504:	mov	x26, #0x10000               	// #65536
   12508:	mov	w25, #0x10001               	// #65537
   1250c:	b	12528 <gcc_cp_fe_context@@Base+0x8df8>
   12510:	ldr	x1, [x19, #8]
   12514:	sub	x2, x23, x0
   12518:	add	x2, x2, #0x1
   1251c:	cmp	x2, x1
   12520:	b.ls	12590 <gcc_cp_fe_context@@Base+0x8e60>  // b.plast
   12524:	mov	x24, x0
   12528:	cmp	x1, #0x10, lsl #12
   1252c:	b.eq	12f38 <gcc_cp_fe_context@@Base+0x9808>  // b.none
   12530:	lsl	x1, x1, #1
   12534:	cmp	x1, x25
   12538:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   1253c:	str	x1, [x19, #8]
   12540:	mov	x0, x24
   12544:	bl	5470 <realloc@plt>
   12548:	str	x0, [x19]
   1254c:	cbz	x0, 12f4c <gcc_cp_fe_context@@Base+0x981c>
   12550:	cmp	x0, x24
   12554:	b.eq	12510 <gcc_cp_fe_context@@Base+0x8de0>  // b.none
   12558:	sub	x24, x0, x24
   1255c:	add	x23, x23, x24
   12560:	add	x28, x28, x24
   12564:	add	x1, x22, x24
   12568:	cmp	x22, #0x0
   1256c:	csel	x22, x1, x22, ne  // ne = any
   12570:	add	x1, x21, x24
   12574:	cmp	x21, #0x0
   12578:	csel	x21, x1, x21, ne  // ne = any
   1257c:	add	x24, x20, x24
   12580:	cmp	x20, #0x0
   12584:	csel	x20, x24, x20, ne  // ne = any
   12588:	b	12510 <gcc_cp_fe_context@@Base+0x8de0>
   1258c:	mov	x21, x23
   12590:	mov	w0, #0x19                  	// #25
   12594:	strb	w0, [x23], #1
   12598:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   1259c:	ldr	x0, [sp, #112]
   125a0:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   125a4:	ldr	x24, [x19]
   125a8:	ldr	x1, [x19, #8]
   125ac:	sub	x0, x23, x24
   125b0:	add	x0, x0, #0x1
   125b4:	cmp	x0, x1
   125b8:	b.ls	12644 <gcc_cp_fe_context@@Base+0x8f14>  // b.plast
   125bc:	mov	x26, #0x10000               	// #65536
   125c0:	mov	w25, #0x10001               	// #65537
   125c4:	b	125e0 <gcc_cp_fe_context@@Base+0x8eb0>
   125c8:	ldr	x1, [x19, #8]
   125cc:	sub	x2, x23, x0
   125d0:	add	x2, x2, #0x1
   125d4:	cmp	x2, x1
   125d8:	b.ls	12644 <gcc_cp_fe_context@@Base+0x8f14>  // b.plast
   125dc:	mov	x24, x0
   125e0:	cmp	x1, #0x10, lsl #12
   125e4:	b.eq	12f60 <gcc_cp_fe_context@@Base+0x9830>  // b.none
   125e8:	lsl	x1, x1, #1
   125ec:	cmp	x1, x25
   125f0:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   125f4:	str	x1, [x19, #8]
   125f8:	mov	x0, x24
   125fc:	bl	5470 <realloc@plt>
   12600:	str	x0, [x19]
   12604:	cbz	x0, 12f74 <gcc_cp_fe_context@@Base+0x9844>
   12608:	cmp	x0, x24
   1260c:	b.eq	125c8 <gcc_cp_fe_context@@Base+0x8e98>  // b.none
   12610:	sub	x24, x0, x24
   12614:	add	x23, x23, x24
   12618:	add	x28, x28, x24
   1261c:	add	x1, x22, x24
   12620:	cmp	x22, #0x0
   12624:	csel	x22, x1, x22, ne  // ne = any
   12628:	add	x1, x21, x24
   1262c:	cmp	x21, #0x0
   12630:	csel	x21, x1, x21, ne  // ne = any
   12634:	add	x24, x20, x24
   12638:	cmp	x20, #0x0
   1263c:	csel	x20, x24, x20, ne  // ne = any
   12640:	b	125c8 <gcc_cp_fe_context@@Base+0x8e98>
   12644:	mov	w0, #0x1a                  	// #26
   12648:	strb	w0, [x23], #1
   1264c:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   12650:	ldr	x1, [x19, #8]
   12654:	sub	x2, x23, x0
   12658:	add	x2, x2, #0x1
   1265c:	cmp	x2, x1
   12660:	b.ls	126cc <gcc_cp_fe_context@@Base+0x8f9c>  // b.plast
   12664:	mov	x24, x0
   12668:	cmp	x1, #0x10, lsl #12
   1266c:	b.eq	12f88 <gcc_cp_fe_context@@Base+0x9858>  // b.none
   12670:	lsl	x1, x1, #1
   12674:	cmp	x1, x25
   12678:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   1267c:	str	x1, [x19, #8]
   12680:	mov	x0, x24
   12684:	bl	5470 <realloc@plt>
   12688:	str	x0, [x19]
   1268c:	cbz	x0, 12f9c <gcc_cp_fe_context@@Base+0x986c>
   12690:	cmp	x0, x24
   12694:	b.eq	12650 <gcc_cp_fe_context@@Base+0x8f20>  // b.none
   12698:	sub	x24, x0, x24
   1269c:	add	x23, x23, x24
   126a0:	add	x28, x28, x24
   126a4:	add	x1, x22, x24
   126a8:	cmp	x22, #0x0
   126ac:	csel	x22, x1, x22, ne  // ne = any
   126b0:	add	x1, x21, x24
   126b4:	cmp	x21, #0x0
   126b8:	csel	x21, x1, x21, ne  // ne = any
   126bc:	add	x24, x20, x24
   126c0:	cmp	x20, #0x0
   126c4:	csel	x20, x24, x20, ne  // ne = any
   126c8:	b	12650 <gcc_cp_fe_context@@Base+0x8f20>
   126cc:	mov	w0, #0x1b                  	// #27
   126d0:	strb	w0, [x23], #1
   126d4:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   126d8:	ldr	x0, [sp, #112]
   126dc:	tbnz	w0, #19, 11994 <gcc_cp_fe_context@@Base+0x8264>
   126e0:	ldr	x24, [x19]
   126e4:	ldr	x1, [x19, #8]
   126e8:	sub	x0, x23, x24
   126ec:	add	x0, x0, #0x1
   126f0:	cmp	x0, x1
   126f4:	b.ls	12780 <gcc_cp_fe_context@@Base+0x9050>  // b.plast
   126f8:	mov	x26, #0x10000               	// #65536
   126fc:	mov	w25, #0x10001               	// #65537
   12700:	b	1271c <gcc_cp_fe_context@@Base+0x8fec>
   12704:	ldr	x1, [x19, #8]
   12708:	sub	x2, x23, x0
   1270c:	add	x2, x2, #0x1
   12710:	cmp	x2, x1
   12714:	b.ls	12780 <gcc_cp_fe_context@@Base+0x9050>  // b.plast
   12718:	mov	x24, x0
   1271c:	cmp	x1, #0x10, lsl #12
   12720:	b.eq	12fb0 <gcc_cp_fe_context@@Base+0x9880>  // b.none
   12724:	lsl	x1, x1, #1
   12728:	cmp	x1, x25
   1272c:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   12730:	str	x1, [x19, #8]
   12734:	mov	x0, x24
   12738:	bl	5470 <realloc@plt>
   1273c:	str	x0, [x19]
   12740:	cbz	x0, 12fc4 <gcc_cp_fe_context@@Base+0x9894>
   12744:	cmp	x0, x24
   12748:	b.eq	12704 <gcc_cp_fe_context@@Base+0x8fd4>  // b.none
   1274c:	sub	x24, x0, x24
   12750:	add	x23, x23, x24
   12754:	add	x28, x28, x24
   12758:	add	x1, x22, x24
   1275c:	cmp	x22, #0x0
   12760:	csel	x22, x1, x22, ne  // ne = any
   12764:	add	x1, x21, x24
   12768:	cmp	x21, #0x0
   1276c:	csel	x21, x1, x21, ne  // ne = any
   12770:	add	x24, x20, x24
   12774:	cmp	x20, #0x0
   12778:	csel	x20, x24, x20, ne  // ne = any
   1277c:	b	12704 <gcc_cp_fe_context@@Base+0x8fd4>
   12780:	mov	w0, #0x1c                  	// #28
   12784:	strb	w0, [x23], #1
   12788:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   1278c:	ldr	x1, [x19, #8]
   12790:	sub	x2, x23, x0
   12794:	add	x2, x2, #0x1
   12798:	cmp	x2, x1
   1279c:	b.ls	12808 <gcc_cp_fe_context@@Base+0x90d8>  // b.plast
   127a0:	mov	x24, x0
   127a4:	cmp	x1, #0x10, lsl #12
   127a8:	b.eq	12fd8 <gcc_cp_fe_context@@Base+0x98a8>  // b.none
   127ac:	lsl	x1, x1, #1
   127b0:	cmp	x1, x25
   127b4:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   127b8:	str	x1, [x19, #8]
   127bc:	mov	x0, x24
   127c0:	bl	5470 <realloc@plt>
   127c4:	str	x0, [x19]
   127c8:	cbz	x0, 12fec <gcc_cp_fe_context@@Base+0x98bc>
   127cc:	cmp	x0, x24
   127d0:	b.eq	1278c <gcc_cp_fe_context@@Base+0x905c>  // b.none
   127d4:	sub	x24, x0, x24
   127d8:	add	x23, x23, x24
   127dc:	add	x28, x28, x24
   127e0:	add	x1, x22, x24
   127e4:	cmp	x22, #0x0
   127e8:	csel	x22, x1, x22, ne  // ne = any
   127ec:	add	x1, x21, x24
   127f0:	cmp	x21, #0x0
   127f4:	csel	x21, x1, x21, ne  // ne = any
   127f8:	add	x24, x20, x24
   127fc:	cmp	x20, #0x0
   12800:	csel	x20, x24, x20, ne  // ne = any
   12804:	b	1278c <gcc_cp_fe_context@@Base+0x905c>
   12808:	mov	w0, #0x1d                  	// #29
   1280c:	strb	w0, [x23], #1
   12810:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   12814:	ldr	x1, [x19, #8]
   12818:	sub	x2, x23, x0
   1281c:	add	x2, x2, #0x1
   12820:	cmp	x2, x1
   12824:	b.ls	12890 <gcc_cp_fe_context@@Base+0x9160>  // b.plast
   12828:	mov	x24, x0
   1282c:	cmp	x1, #0x10, lsl #12
   12830:	b.eq	13000 <gcc_cp_fe_context@@Base+0x98d0>  // b.none
   12834:	lsl	x1, x1, #1
   12838:	cmp	x1, x25
   1283c:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   12840:	str	x1, [x19, #8]
   12844:	mov	x0, x24
   12848:	bl	5470 <realloc@plt>
   1284c:	str	x0, [x19]
   12850:	cbz	x0, 13014 <gcc_cp_fe_context@@Base+0x98e4>
   12854:	cmp	x0, x24
   12858:	b.eq	12814 <gcc_cp_fe_context@@Base+0x90e4>  // b.none
   1285c:	sub	x24, x0, x24
   12860:	add	x23, x23, x24
   12864:	add	x28, x28, x24
   12868:	add	x1, x22, x24
   1286c:	cmp	x22, #0x0
   12870:	csel	x22, x1, x22, ne  // ne = any
   12874:	add	x1, x21, x24
   12878:	cmp	x21, #0x0
   1287c:	csel	x21, x1, x21, ne  // ne = any
   12880:	add	x24, x20, x24
   12884:	cmp	x20, #0x0
   12888:	csel	x20, x24, x20, ne  // ne = any
   1288c:	b	12814 <gcc_cp_fe_context@@Base+0x90e4>
   12890:	mov	w0, #0xb                   	// #11
   12894:	strb	w0, [x23], #1
   12898:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   1289c:	ldr	x1, [x19, #8]
   128a0:	sub	x2, x23, x0
   128a4:	add	x2, x2, #0x1
   128a8:	cmp	x2, x1
   128ac:	b.ls	12918 <gcc_cp_fe_context@@Base+0x91e8>  // b.plast
   128b0:	mov	x24, x0
   128b4:	cmp	x1, #0x10, lsl #12
   128b8:	b.eq	13028 <gcc_cp_fe_context@@Base+0x98f8>  // b.none
   128bc:	lsl	x1, x1, #1
   128c0:	cmp	x1, x25
   128c4:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   128c8:	str	x1, [x19, #8]
   128cc:	mov	x0, x24
   128d0:	bl	5470 <realloc@plt>
   128d4:	str	x0, [x19]
   128d8:	cbz	x0, 1303c <gcc_cp_fe_context@@Base+0x990c>
   128dc:	cmp	x0, x24
   128e0:	b.eq	1289c <gcc_cp_fe_context@@Base+0x916c>  // b.none
   128e4:	sub	x24, x0, x24
   128e8:	add	x23, x23, x24
   128ec:	add	x28, x28, x24
   128f0:	add	x1, x22, x24
   128f4:	cmp	x22, #0x0
   128f8:	csel	x22, x1, x22, ne  // ne = any
   128fc:	add	x1, x21, x24
   12900:	cmp	x21, #0x0
   12904:	csel	x21, x1, x21, ne  // ne = any
   12908:	add	x24, x20, x24
   1290c:	cmp	x20, #0x0
   12910:	csel	x20, x24, x20, ne  // ne = any
   12914:	b	1289c <gcc_cp_fe_context@@Base+0x916c>
   12918:	mov	w0, #0xc                   	// #12
   1291c:	strb	w0, [x23], #1
   12920:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   12924:	ldr	x0, [sp, #128]
   12928:	bl	5440 <free@plt>
   1292c:	mov	w26, #0x6                   	// #6
   12930:	ldp	x21, x22, [sp, #32]
   12934:	ldp	x23, x24, [sp, #48]
   12938:	ldp	x27, x28, [sp, #80]
   1293c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12940:	ldr	x0, [x19, #8]
   12944:	sub	x2, x23, x1
   12948:	add	x2, x2, #0x2
   1294c:	cmp	x2, x0
   12950:	b.ls	11b78 <gcc_cp_fe_context@@Base+0x8448>  // b.plast
   12954:	mov	x24, x1
   12958:	cmp	x0, #0x10, lsl #12
   1295c:	b.eq	13050 <gcc_cp_fe_context@@Base+0x9920>  // b.none
   12960:	lsl	x0, x0, #1
   12964:	cmp	x0, x25
   12968:	csel	x1, x0, x27, cc  // cc = lo, ul, last
   1296c:	str	x1, [x19, #8]
   12970:	mov	x0, x24
   12974:	bl	5470 <realloc@plt>
   12978:	mov	x1, x0
   1297c:	str	x0, [x19]
   12980:	cbz	x0, 13064 <gcc_cp_fe_context@@Base+0x9934>
   12984:	cmp	x0, x24
   12988:	b.eq	12940 <gcc_cp_fe_context@@Base+0x9210>  // b.none
   1298c:	sub	x24, x0, x24
   12990:	add	x23, x23, x24
   12994:	add	x28, x28, x24
   12998:	add	x0, x22, x24
   1299c:	cmp	x22, #0x0
   129a0:	csel	x22, x0, x22, ne  // ne = any
   129a4:	add	x0, x21, x24
   129a8:	cmp	x21, #0x0
   129ac:	csel	x21, x0, x21, ne  // ne = any
   129b0:	add	x24, x20, x24
   129b4:	cmp	x20, #0x0
   129b8:	csel	x20, x24, x20, ne  // ne = any
   129bc:	b	12940 <gcc_cp_fe_context@@Base+0x9210>
   129c0:	ldr	x0, [sp, #112]
   129c4:	tbnz	w0, #1, 103f0 <gcc_cp_fe_context@@Base+0x6cc0>
   129c8:	b	12414 <gcc_cp_fe_context@@Base+0x8ce4>
   129cc:	ldr	x1, [sp, #424]
   129d0:	ldrb	w0, [x1]
   129d4:	cmp	w0, #0x2a
   129d8:	mov	w2, #0x5e                  	// #94
   129dc:	ccmp	w0, w2, #0x4, ne  // ne = any
   129e0:	b.eq	119b4 <gcc_cp_fe_context@@Base+0x8284>  // b.none
   129e4:	ldr	x2, [sp, #112]
   129e8:	tbz	w2, #1, 12a0c <gcc_cp_fe_context@@Base+0x92dc>
   129ec:	cmp	w0, #0x5c
   129f0:	b.ne	12a1c <gcc_cp_fe_context@@Base+0x92ec>  // b.any
   129f4:	ldrb	w2, [x1, #1]
   129f8:	cmp	w2, #0x2b
   129fc:	mov	w3, #0x3f                  	// #63
   12a00:	ccmp	w2, w3, #0x4, ne  // ne = any
   12a04:	b.eq	119b4 <gcc_cp_fe_context@@Base+0x8284>  // b.none
   12a08:	b	12a1c <gcc_cp_fe_context@@Base+0x92ec>
   12a0c:	cmp	w0, #0x2b
   12a10:	mov	w2, #0x3f                  	// #63
   12a14:	ccmp	w0, w2, #0x4, ne  // ne = any
   12a18:	b.eq	119b4 <gcc_cp_fe_context@@Base+0x8284>  // b.none
   12a1c:	ldr	x2, [sp, #112]
   12a20:	tbz	w2, #9, 12ad0 <gcc_cp_fe_context@@Base+0x93a0>
   12a24:	tbz	w2, #12, 12a38 <gcc_cp_fe_context@@Base+0x9308>
   12a28:	mov	x24, x23
   12a2c:	cmp	w0, #0x7b
   12a30:	b.ne	119ec <gcc_cp_fe_context@@Base+0x82bc>  // b.any
   12a34:	b	119b4 <gcc_cp_fe_context@@Base+0x8284>
   12a38:	mov	x24, x23
   12a3c:	cmp	w0, #0x5c
   12a40:	b.ne	119ec <gcc_cp_fe_context@@Base+0x82bc>  // b.any
   12a44:	ldrb	w0, [x1, #1]
   12a48:	cmp	w0, #0x7b
   12a4c:	b.ne	119ec <gcc_cp_fe_context@@Base+0x82bc>  // b.any
   12a50:	b	119b4 <gcc_cp_fe_context@@Base+0x8284>
   12a54:	ldr	x1, [x19, #8]
   12a58:	sub	x2, x23, x0
   12a5c:	add	x2, x2, #0x2
   12a60:	cmp	x2, x1
   12a64:	b.ls	119d8 <gcc_cp_fe_context@@Base+0x82a8>  // b.plast
   12a68:	mov	x24, x0
   12a6c:	cmp	x1, #0x10, lsl #12
   12a70:	b.eq	13078 <gcc_cp_fe_context@@Base+0x9948>  // b.none
   12a74:	lsl	x1, x1, #1
   12a78:	cmp	x1, x26
   12a7c:	csel	x1, x1, x27, cc  // cc = lo, ul, last
   12a80:	str	x1, [x19, #8]
   12a84:	mov	x0, x24
   12a88:	bl	5470 <realloc@plt>
   12a8c:	str	x0, [x19]
   12a90:	cbz	x0, 1309c <gcc_cp_fe_context@@Base+0x996c>
   12a94:	cmp	x0, x24
   12a98:	b.eq	12a54 <gcc_cp_fe_context@@Base+0x9324>  // b.none
   12a9c:	sub	x24, x0, x24
   12aa0:	add	x23, x23, x24
   12aa4:	add	x28, x28, x24
   12aa8:	add	x1, x22, x24
   12aac:	cmp	x22, #0x0
   12ab0:	csel	x22, x1, x22, ne  // ne = any
   12ab4:	add	x1, x21, x24
   12ab8:	cmp	x21, #0x0
   12abc:	csel	x21, x1, x21, ne  // ne = any
   12ac0:	add	x24, x20, x24
   12ac4:	cmp	x20, #0x0
   12ac8:	csel	x20, x24, x20, ne  // ne = any
   12acc:	b	12a54 <gcc_cp_fe_context@@Base+0x9324>
   12ad0:	mov	x24, x23
   12ad4:	b	119ec <gcc_cp_fe_context@@Base+0x82bc>
   12ad8:	ldr	x1, [x19, #8]
   12adc:	sub	x2, x24, x0
   12ae0:	add	x2, x2, #0x1
   12ae4:	cmp	x2, x1
   12ae8:	b.ls	12b54 <gcc_cp_fe_context@@Base+0x9424>  // b.plast
   12aec:	mov	x23, x0
   12af0:	cmp	x1, #0x10, lsl #12
   12af4:	b.eq	130b0 <gcc_cp_fe_context@@Base+0x9980>  // b.none
   12af8:	lsl	x1, x1, #1
   12afc:	cmp	x1, x26
   12b00:	csel	x1, x1, x27, cc  // cc = lo, ul, last
   12b04:	str	x1, [x19, #8]
   12b08:	mov	x0, x23
   12b0c:	bl	5470 <realloc@plt>
   12b10:	str	x0, [x19]
   12b14:	cbz	x0, 130c4 <gcc_cp_fe_context@@Base+0x9994>
   12b18:	cmp	x0, x23
   12b1c:	b.eq	12ad8 <gcc_cp_fe_context@@Base+0x93a8>  // b.none
   12b20:	sub	x23, x0, x23
   12b24:	add	x24, x24, x23
   12b28:	add	x28, x28, x23
   12b2c:	add	x1, x22, x23
   12b30:	cmp	x22, #0x0
   12b34:	csel	x22, x1, x22, ne  // ne = any
   12b38:	add	x1, x21, x23
   12b3c:	cmp	x21, #0x0
   12b40:	csel	x21, x1, x21, ne  // ne = any
   12b44:	add	x23, x20, x23
   12b48:	cmp	x20, #0x0
   12b4c:	csel	x20, x23, x20, ne  // ne = any
   12b50:	b	12ad8 <gcc_cp_fe_context@@Base+0x93a8>
   12b54:	mov	x23, x24
   12b58:	strb	w25, [x23], #1
   12b5c:	ldrb	w0, [x20]
   12b60:	add	w0, w0, #0x1
   12b64:	strb	w0, [x20]
   12b68:	ldr	x0, [sp, #424]
   12b6c:	ldr	x1, [sp, #104]
   12b70:	cmp	x0, x1
   12b74:	b.ne	10374 <gcc_cp_fe_context@@Base+0x6c44>  // b.any
   12b78:	b	13194 <gcc_cp_fe_context@@Base+0x9a64>
   12b7c:	ldr	x0, [sp, #128]
   12b80:	bl	5440 <free@plt>
   12b84:	mov	w26, #0x8                   	// #8
   12b88:	ldp	x21, x22, [sp, #32]
   12b8c:	ldp	x23, x24, [sp, #48]
   12b90:	ldp	x27, x28, [sp, #80]
   12b94:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12b98:	mov	x22, #0x0                   	// #0
   12b9c:	mov	x20, #0x0                   	// #0
   12ba0:	mov	x21, #0x0                   	// #0
   12ba4:	ldr	x0, [sp, #112]
   12ba8:	tbz	w0, #18, 12c50 <gcc_cp_fe_context@@Base+0x9520>
   12bac:	ldr	x24, [x19]
   12bb0:	ldr	x1, [x19, #8]
   12bb4:	sub	x0, x23, x24
   12bb8:	add	x0, x0, #0x1
   12bbc:	cmp	x0, x1
   12bc0:	b.ls	12c48 <gcc_cp_fe_context@@Base+0x9518>  // b.plast
   12bc4:	mov	x26, #0x10000               	// #65536
   12bc8:	mov	w25, #0x10001               	// #65537
   12bcc:	b	12be8 <gcc_cp_fe_context@@Base+0x94b8>
   12bd0:	ldr	x1, [x19, #8]
   12bd4:	sub	x2, x23, x0
   12bd8:	add	x2, x2, #0x1
   12bdc:	cmp	x2, x1
   12be0:	b.ls	12c48 <gcc_cp_fe_context@@Base+0x9518>  // b.plast
   12be4:	mov	x24, x0
   12be8:	cmp	x1, #0x10, lsl #12
   12bec:	b.eq	130d8 <gcc_cp_fe_context@@Base+0x99a8>  // b.none
   12bf0:	lsl	x1, x1, #1
   12bf4:	cmp	x1, x25
   12bf8:	csel	x1, x1, x26, cc  // cc = lo, ul, last
   12bfc:	str	x1, [x19, #8]
   12c00:	mov	x0, x24
   12c04:	bl	5470 <realloc@plt>
   12c08:	str	x0, [x19]
   12c0c:	cbz	x0, 130e8 <gcc_cp_fe_context@@Base+0x99b8>
   12c10:	cmp	x0, x24
   12c14:	b.eq	12bd0 <gcc_cp_fe_context@@Base+0x94a0>  // b.none
   12c18:	sub	x24, x0, x24
   12c1c:	add	x23, x23, x24
   12c20:	add	x1, x22, x24
   12c24:	cmp	x22, #0x0
   12c28:	csel	x22, x1, x22, ne  // ne = any
   12c2c:	add	x1, x21, x24
   12c30:	cmp	x21, #0x0
   12c34:	csel	x21, x1, x21, ne  // ne = any
   12c38:	add	x24, x20, x24
   12c3c:	cmp	x20, #0x0
   12c40:	csel	x20, x24, x20, ne  // ne = any
   12c44:	b	12bd0 <gcc_cp_fe_context@@Base+0x94a0>
   12c48:	mov	w0, #0x1                   	// #1
   12c4c:	strb	w0, [x23], #1
   12c50:	ldr	x0, [sp, #128]
   12c54:	bl	5440 <free@plt>
   12c58:	ldr	x0, [x19]
   12c5c:	sub	x23, x23, x0
   12c60:	str	x23, [x19, #16]
   12c64:	mov	w26, #0x0                   	// #0
   12c68:	ldp	x21, x22, [sp, #32]
   12c6c:	ldp	x23, x24, [sp, #48]
   12c70:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12c74:	mov	w26, #0xc                   	// #12
   12c78:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12c7c:	mov	w26, #0xf                   	// #15
   12c80:	ldp	x21, x22, [sp, #32]
   12c84:	ldp	x23, x24, [sp, #48]
   12c88:	ldp	x27, x28, [sp, #80]
   12c8c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12c90:	mov	w26, #0xc                   	// #12
   12c94:	ldp	x21, x22, [sp, #32]
   12c98:	ldp	x23, x24, [sp, #48]
   12c9c:	ldp	x27, x28, [sp, #80]
   12ca0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ca4:	mov	w26, #0xf                   	// #15
   12ca8:	ldp	x21, x22, [sp, #32]
   12cac:	ldp	x23, x24, [sp, #48]
   12cb0:	ldp	x27, x28, [sp, #80]
   12cb4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12cb8:	mov	w26, #0xc                   	// #12
   12cbc:	ldp	x21, x22, [sp, #32]
   12cc0:	ldp	x23, x24, [sp, #48]
   12cc4:	ldp	x27, x28, [sp, #80]
   12cc8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ccc:	mov	w26, #0xf                   	// #15
   12cd0:	ldp	x21, x22, [sp, #32]
   12cd4:	ldp	x23, x24, [sp, #48]
   12cd8:	ldp	x27, x28, [sp, #80]
   12cdc:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ce0:	mov	w26, #0xc                   	// #12
   12ce4:	ldp	x21, x22, [sp, #32]
   12ce8:	ldp	x23, x24, [sp, #48]
   12cec:	ldp	x27, x28, [sp, #80]
   12cf0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12cf4:	mov	w26, #0xf                   	// #15
   12cf8:	ldp	x21, x22, [sp, #32]
   12cfc:	ldp	x23, x24, [sp, #48]
   12d00:	ldp	x27, x28, [sp, #80]
   12d04:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d08:	mov	w26, #0xc                   	// #12
   12d0c:	ldp	x21, x22, [sp, #32]
   12d10:	ldp	x23, x24, [sp, #48]
   12d14:	ldp	x27, x28, [sp, #80]
   12d18:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d1c:	mov	w26, #0xf                   	// #15
   12d20:	ldp	x21, x22, [sp, #32]
   12d24:	ldp	x23, x24, [sp, #48]
   12d28:	ldp	x27, x28, [sp, #80]
   12d2c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d30:	mov	w26, #0xc                   	// #12
   12d34:	ldp	x21, x22, [sp, #32]
   12d38:	ldp	x23, x24, [sp, #48]
   12d3c:	ldp	x27, x28, [sp, #80]
   12d40:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d44:	mov	w26, #0xf                   	// #15
   12d48:	ldp	x21, x22, [sp, #32]
   12d4c:	ldp	x23, x24, [sp, #48]
   12d50:	ldp	x27, x28, [sp, #80]
   12d54:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d58:	mov	w26, #0xc                   	// #12
   12d5c:	ldp	x21, x22, [sp, #32]
   12d60:	ldp	x23, x24, [sp, #48]
   12d64:	ldp	x27, x28, [sp, #80]
   12d68:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d6c:	mov	w26, #0xf                   	// #15
   12d70:	ldp	x21, x22, [sp, #32]
   12d74:	ldp	x23, x24, [sp, #48]
   12d78:	ldp	x27, x28, [sp, #80]
   12d7c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d80:	mov	w26, #0xc                   	// #12
   12d84:	ldp	x21, x22, [sp, #32]
   12d88:	ldp	x23, x24, [sp, #48]
   12d8c:	ldp	x27, x28, [sp, #80]
   12d90:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12d94:	mov	w26, #0xf                   	// #15
   12d98:	ldp	x21, x22, [sp, #32]
   12d9c:	ldp	x23, x24, [sp, #48]
   12da0:	ldp	x27, x28, [sp, #80]
   12da4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12da8:	mov	w26, #0xc                   	// #12
   12dac:	ldp	x21, x22, [sp, #32]
   12db0:	ldp	x23, x24, [sp, #48]
   12db4:	ldp	x27, x28, [sp, #80]
   12db8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12dbc:	mov	w26, #0xf                   	// #15
   12dc0:	ldp	x21, x22, [sp, #32]
   12dc4:	ldp	x23, x24, [sp, #48]
   12dc8:	ldp	x27, x28, [sp, #80]
   12dcc:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12dd0:	mov	w26, #0xc                   	// #12
   12dd4:	ldp	x21, x22, [sp, #32]
   12dd8:	ldp	x23, x24, [sp, #48]
   12ddc:	ldp	x27, x28, [sp, #80]
   12de0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12de4:	mov	w26, #0xe                   	// #14
   12de8:	ldp	x21, x22, [sp, #32]
   12dec:	ldp	x23, x24, [sp, #48]
   12df0:	ldp	x27, x28, [sp, #80]
   12df4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12df8:	mov	w26, #0xf                   	// #15
   12dfc:	ldp	x21, x22, [sp, #32]
   12e00:	ldp	x23, x24, [sp, #48]
   12e04:	ldp	x27, x28, [sp, #80]
   12e08:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e0c:	mov	w26, #0xc                   	// #12
   12e10:	ldp	x21, x22, [sp, #32]
   12e14:	ldp	x23, x24, [sp, #48]
   12e18:	ldp	x27, x28, [sp, #80]
   12e1c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e20:	mov	w26, #0xf                   	// #15
   12e24:	ldp	x21, x22, [sp, #32]
   12e28:	ldp	x23, x24, [sp, #48]
   12e2c:	ldp	x27, x28, [sp, #80]
   12e30:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e34:	mov	w26, #0xc                   	// #12
   12e38:	ldp	x21, x22, [sp, #32]
   12e3c:	ldp	x23, x24, [sp, #48]
   12e40:	ldp	x27, x28, [sp, #80]
   12e44:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e48:	mov	w26, #0xf                   	// #15
   12e4c:	ldp	x21, x22, [sp, #32]
   12e50:	ldp	x23, x24, [sp, #48]
   12e54:	ldp	x27, x28, [sp, #80]
   12e58:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e5c:	mov	w26, #0xc                   	// #12
   12e60:	ldp	x21, x22, [sp, #32]
   12e64:	ldp	x23, x24, [sp, #48]
   12e68:	ldp	x27, x28, [sp, #80]
   12e6c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e70:	mov	w26, #0xf                   	// #15
   12e74:	ldp	x21, x22, [sp, #32]
   12e78:	ldp	x23, x24, [sp, #48]
   12e7c:	ldp	x27, x28, [sp, #80]
   12e80:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e84:	mov	w26, #0xc                   	// #12
   12e88:	ldp	x21, x22, [sp, #32]
   12e8c:	ldp	x23, x24, [sp, #48]
   12e90:	ldp	x27, x28, [sp, #80]
   12e94:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12e98:	mov	w26, #0xf                   	// #15
   12e9c:	ldp	x21, x22, [sp, #32]
   12ea0:	ldp	x23, x24, [sp, #48]
   12ea4:	ldp	x27, x28, [sp, #80]
   12ea8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12eac:	mov	w26, #0xc                   	// #12
   12eb0:	ldp	x21, x22, [sp, #32]
   12eb4:	ldp	x23, x24, [sp, #48]
   12eb8:	ldp	x27, x28, [sp, #80]
   12ebc:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ec0:	mov	w26, #0xf                   	// #15
   12ec4:	ldp	x21, x22, [sp, #32]
   12ec8:	ldp	x23, x24, [sp, #48]
   12ecc:	ldp	x27, x28, [sp, #80]
   12ed0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ed4:	mov	w26, #0xc                   	// #12
   12ed8:	ldp	x21, x22, [sp, #32]
   12edc:	ldp	x23, x24, [sp, #48]
   12ee0:	ldp	x27, x28, [sp, #80]
   12ee4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12ee8:	mov	w26, #0xf                   	// #15
   12eec:	ldp	x21, x22, [sp, #32]
   12ef0:	ldp	x23, x24, [sp, #48]
   12ef4:	ldp	x27, x28, [sp, #80]
   12ef8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12efc:	mov	w26, #0xc                   	// #12
   12f00:	ldp	x21, x22, [sp, #32]
   12f04:	ldp	x23, x24, [sp, #48]
   12f08:	ldp	x27, x28, [sp, #80]
   12f0c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f10:	mov	w26, #0xf                   	// #15
   12f14:	ldp	x21, x22, [sp, #32]
   12f18:	ldp	x23, x24, [sp, #48]
   12f1c:	ldp	x27, x28, [sp, #80]
   12f20:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f24:	mov	w26, #0xc                   	// #12
   12f28:	ldp	x21, x22, [sp, #32]
   12f2c:	ldp	x23, x24, [sp, #48]
   12f30:	ldp	x27, x28, [sp, #80]
   12f34:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f38:	mov	w26, #0xf                   	// #15
   12f3c:	ldp	x21, x22, [sp, #32]
   12f40:	ldp	x23, x24, [sp, #48]
   12f44:	ldp	x27, x28, [sp, #80]
   12f48:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f4c:	mov	w26, #0xc                   	// #12
   12f50:	ldp	x21, x22, [sp, #32]
   12f54:	ldp	x23, x24, [sp, #48]
   12f58:	ldp	x27, x28, [sp, #80]
   12f5c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f60:	mov	w26, #0xf                   	// #15
   12f64:	ldp	x21, x22, [sp, #32]
   12f68:	ldp	x23, x24, [sp, #48]
   12f6c:	ldp	x27, x28, [sp, #80]
   12f70:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f74:	mov	w26, #0xc                   	// #12
   12f78:	ldp	x21, x22, [sp, #32]
   12f7c:	ldp	x23, x24, [sp, #48]
   12f80:	ldp	x27, x28, [sp, #80]
   12f84:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f88:	mov	w26, #0xf                   	// #15
   12f8c:	ldp	x21, x22, [sp, #32]
   12f90:	ldp	x23, x24, [sp, #48]
   12f94:	ldp	x27, x28, [sp, #80]
   12f98:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12f9c:	mov	w26, #0xc                   	// #12
   12fa0:	ldp	x21, x22, [sp, #32]
   12fa4:	ldp	x23, x24, [sp, #48]
   12fa8:	ldp	x27, x28, [sp, #80]
   12fac:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12fb0:	mov	w26, #0xf                   	// #15
   12fb4:	ldp	x21, x22, [sp, #32]
   12fb8:	ldp	x23, x24, [sp, #48]
   12fbc:	ldp	x27, x28, [sp, #80]
   12fc0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12fc4:	mov	w26, #0xc                   	// #12
   12fc8:	ldp	x21, x22, [sp, #32]
   12fcc:	ldp	x23, x24, [sp, #48]
   12fd0:	ldp	x27, x28, [sp, #80]
   12fd4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12fd8:	mov	w26, #0xf                   	// #15
   12fdc:	ldp	x21, x22, [sp, #32]
   12fe0:	ldp	x23, x24, [sp, #48]
   12fe4:	ldp	x27, x28, [sp, #80]
   12fe8:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   12fec:	mov	w26, #0xc                   	// #12
   12ff0:	ldp	x21, x22, [sp, #32]
   12ff4:	ldp	x23, x24, [sp, #48]
   12ff8:	ldp	x27, x28, [sp, #80]
   12ffc:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13000:	mov	w26, #0xf                   	// #15
   13004:	ldp	x21, x22, [sp, #32]
   13008:	ldp	x23, x24, [sp, #48]
   1300c:	ldp	x27, x28, [sp, #80]
   13010:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13014:	mov	w26, #0xc                   	// #12
   13018:	ldp	x21, x22, [sp, #32]
   1301c:	ldp	x23, x24, [sp, #48]
   13020:	ldp	x27, x28, [sp, #80]
   13024:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13028:	mov	w26, #0xf                   	// #15
   1302c:	ldp	x21, x22, [sp, #32]
   13030:	ldp	x23, x24, [sp, #48]
   13034:	ldp	x27, x28, [sp, #80]
   13038:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   1303c:	mov	w26, #0xc                   	// #12
   13040:	ldp	x21, x22, [sp, #32]
   13044:	ldp	x23, x24, [sp, #48]
   13048:	ldp	x27, x28, [sp, #80]
   1304c:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13050:	mov	w26, #0xf                   	// #15
   13054:	ldp	x21, x22, [sp, #32]
   13058:	ldp	x23, x24, [sp, #48]
   1305c:	ldp	x27, x28, [sp, #80]
   13060:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13064:	mov	w26, #0xc                   	// #12
   13068:	ldp	x21, x22, [sp, #32]
   1306c:	ldp	x23, x24, [sp, #48]
   13070:	ldp	x27, x28, [sp, #80]
   13074:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   13078:	mov	w26, #0xf                   	// #15
   1307c:	ldp	x21, x22, [sp, #32]
   13080:	ldp	x23, x24, [sp, #48]
   13084:	ldp	x27, x28, [sp, #80]
   13088:	mov	w0, w26
   1308c:	ldp	x19, x20, [sp, #16]
   13090:	ldp	x25, x26, [sp, #64]
   13094:	ldp	x29, x30, [sp], #432
   13098:	ret
   1309c:	mov	w26, #0xc                   	// #12
   130a0:	ldp	x21, x22, [sp, #32]
   130a4:	ldp	x23, x24, [sp, #48]
   130a8:	ldp	x27, x28, [sp, #80]
   130ac:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   130b0:	mov	w26, #0xf                   	// #15
   130b4:	ldp	x21, x22, [sp, #32]
   130b8:	ldp	x23, x24, [sp, #48]
   130bc:	ldp	x27, x28, [sp, #80]
   130c0:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   130c4:	mov	w26, #0xc                   	// #12
   130c8:	ldp	x21, x22, [sp, #32]
   130cc:	ldp	x23, x24, [sp, #48]
   130d0:	ldp	x27, x28, [sp, #80]
   130d4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   130d8:	mov	w26, #0xf                   	// #15
   130dc:	ldp	x21, x22, [sp, #32]
   130e0:	ldp	x23, x24, [sp, #48]
   130e4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   130e8:	mov	w26, #0xc                   	// #12
   130ec:	ldp	x21, x22, [sp, #32]
   130f0:	ldp	x23, x24, [sp, #48]
   130f4:	b	13088 <gcc_cp_fe_context@@Base+0x9958>
   130f8:	cbnz	x22, 11d38 <gcc_cp_fe_context@@Base+0x8608>
   130fc:	ldr	w0, [sp, #144]
   13100:	sub	w2, w0, #0x1
   13104:	str	w2, [sp, #144]
   13108:	ldr	x1, [x19]
   1310c:	mov	x0, x2
   13110:	ubfiz	x0, x0, #2, #32
   13114:	add	x0, x0, w2, uxtw
   13118:	ldr	x3, [sp, #128]
   1311c:	add	x2, x3, x0, lsl #3
   13120:	ldr	x0, [x3, x0, lsl #3]
   13124:	add	x28, x1, x0
   13128:	ldr	x0, [x2, #8]
   1312c:	sub	x22, x0, #0x1
   13130:	add	x22, x1, x22
   13134:	cmp	x0, #0x0
   13138:	csel	x22, x22, xzr, ne  // ne = any
   1313c:	ldr	x21, [x2, #24]
   13140:	add	x21, x1, x21
   13144:	ldr	w0, [x2, #32]
   13148:	mov	x20, #0x0                   	// #0
   1314c:	cmp	w0, #0xff
   13150:	b.hi	12b68 <gcc_cp_fe_context@@Base+0x9438>  // b.pmore
   13154:	and	w27, w0, #0xff
   13158:	ldr	w3, [sp, #148]
   1315c:	sub	w0, w3, w0, uxtb
   13160:	and	w24, w0, #0xff
   13164:	ldr	x0, [x2, #16]
   13168:	strb	w24, [x1, x0]
   1316c:	ldr	x20, [x19]
   13170:	ldr	x1, [x19, #8]
   13174:	sub	x0, x23, x20
   13178:	add	x0, x0, #0x3
   1317c:	cmp	x0, x1
   13180:	b.ls	11e94 <gcc_cp_fe_context@@Base+0x8764>  // b.plast
   13184:	mov	x26, #0x10000               	// #65536
   13188:	mov	w25, #0x10001               	// #65537
   1318c:	b	11e60 <gcc_cp_fe_context@@Base+0x8730>
   13190:	cbnz	x21, 107c4 <gcc_cp_fe_context@@Base+0x7094>
   13194:	cbz	x22, 131b4 <gcc_cp_fe_context@@Base+0x9a84>
   13198:	sub	x0, x23, x22
   1319c:	sub	w0, w0, #0x3
   131a0:	mov	w1, #0xe                   	// #14
   131a4:	strb	w1, [x22]
   131a8:	strb	w0, [x22, #1]
   131ac:	asr	w0, w0, #8
   131b0:	strb	w0, [x22, #2]
   131b4:	ldr	w0, [sp, #144]
   131b8:	cbnz	w0, 12b7c <gcc_cp_fe_context@@Base+0x944c>
   131bc:	ldp	x27, x28, [sp, #80]
   131c0:	b	12ba4 <gcc_cp_fe_context@@Base+0x9474>
   131c4:	cmp	w0, #0x5b
   131c8:	ldr	w1, [sp, #180]
   131cc:	csel	w3, w1, wzr, eq  // eq = none
   131d0:	mov	w1, #0x2d                  	// #45
   131d4:	b	10eac <gcc_cp_fe_context@@Base+0x777c>
   131d8:	ldr	x0, [sp, #112]
   131dc:	tbz	w0, #21, 12428 <gcc_cp_fe_context@@Base+0x8cf8>
   131e0:	str	x4, [sp, #424]
   131e4:	mov	w25, #0x7b                  	// #123
   131e8:	b	12414 <gcc_cp_fe_context@@Base+0x8ce4>
   131ec:	add	x20, x23, #0x5
   131f0:	sub	x2, x20, x21
   131f4:	mov	x4, x23
   131f8:	mov	w3, w24
   131fc:	sub	w2, w2, #0x3
   13200:	mov	x1, x21
   13204:	mov	w0, #0x15                  	// #21
   13208:	bl	da90 <gcc_cp_fe_context@@Base+0x4360>
   1320c:	mov	x4, x20
   13210:	mov	w3, w24
   13214:	mov	w2, #0x5                   	// #5
   13218:	mov	x1, x21
   1321c:	mov	w0, #0x17                  	// #23
   13220:	bl	da90 <gcc_cp_fe_context@@Base+0x4360>
   13224:	add	x23, x23, #0xa
   13228:	mov	x20, #0x0                   	// #0
   1322c:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   13230:	ldr	x0, [sp, #112]
   13234:	tbz	w0, #15, 11994 <gcc_cp_fe_context@@Base+0x8264>
   13238:	cmp	w1, #0x7c
   1323c:	b.ne	11994 <gcc_cp_fe_context@@Base+0x8264>  // b.any
   13240:	ldr	x24, [x19]
   13244:	ldr	x1, [x19, #8]
   13248:	sub	x0, x23, x24
   1324c:	add	x0, x0, #0x1
   13250:	mov	x26, #0x10000               	// #65536
   13254:	mov	w25, #0x10001               	// #65537
   13258:	cmp	x0, x1
   1325c:	b.hi	106b4 <gcc_cp_fe_context@@Base+0x6f84>  // b.pmore
   13260:	mov	w0, #0xa                   	// #10
   13264:	strb	w0, [x23], #1
   13268:	b	12b68 <gcc_cp_fe_context@@Base+0x9438>
   1326c:	cmp	w25, #0x2b
   13270:	cset	w26, ne  // ne = any
   13274:	cmp	w25, #0x3f
   13278:	cset	w25, ne  // ne = any
   1327c:	ldr	x1, [sp, #424]
   13280:	ldr	x0, [sp, #104]
   13284:	cmp	x0, x1
   13288:	b.eq	107c4 <gcc_cp_fe_context@@Base+0x7094>  // b.none
   1328c:	ldr	x0, [sp, #112]
   13290:	and	x4, x0, #0x2
   13294:	mov	w3, #0x3f                  	// #63
   13298:	ldr	x6, [sp, #104]
   1329c:	ldr	x2, [sp, #120]
   132a0:	b	1078c <gcc_cp_fe_context@@Base+0x705c>
   132a4:	ldurb	w0, [x0, #-1]
   132a8:	mov	w1, #0x1                   	// #1
   132ac:	cmp	w0, #0x28
   132b0:	b.ne	10594 <gcc_cp_fe_context@@Base+0x6e64>  // b.any
   132b4:	b	105b8 <gcc_cp_fe_context@@Base+0x6e88>

00000000000132b8 <xre_set_syntax@@Base>:
   132b8:	mov	x2, x0
   132bc:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
   132c0:	ldr	x1, [x1, #3800]
   132c4:	ldr	x0, [x1]
   132c8:	str	x2, [x1]
   132cc:	ret

00000000000132d0 <xre_compile_fastmap@@Base>:
   132d0:	stp	x29, x30, [sp, #-16]!
   132d4:	mov	x29, sp
   132d8:	bl	df3c <gcc_cp_fe_context@@Base+0x480c>
   132dc:	ldp	x29, x30, [sp], #16
   132e0:	ret

00000000000132e4 <xre_set_registers@@Base>:
   132e4:	cbz	w2, 13308 <xre_set_registers@@Base+0x24>
   132e8:	ldrb	w5, [x0, #56]
   132ec:	mov	w6, #0x1                   	// #1
   132f0:	bfi	w5, w6, #1, #2
   132f4:	strb	w5, [x0, #56]
   132f8:	str	w2, [x1]
   132fc:	str	x3, [x1, #8]
   13300:	str	x4, [x1, #16]
   13304:	ret
   13308:	ldrb	w2, [x0, #56]
   1330c:	and	w2, w2, #0xfffffff9
   13310:	strb	w2, [x0, #56]
   13314:	str	wzr, [x1]
   13318:	str	xzr, [x1, #16]
   1331c:	str	xzr, [x1, #8]
   13320:	b	13304 <xre_set_registers@@Base+0x20>

0000000000013324 <xre_search_2@@Base>:
   13324:	stp	x29, x30, [sp, #-112]!
   13328:	mov	x29, sp
   1332c:	stp	x21, x22, [sp, #32]
   13330:	stp	x23, x24, [sp, #48]
   13334:	stp	x25, x26, [sp, #64]
   13338:	mov	x22, x0
   1333c:	str	x7, [sp, #96]
   13340:	ldr	x24, [x0, #32]
   13344:	ldr	x25, [x0, #40]
   13348:	add	w23, w2, w4
   1334c:	add	w0, w5, w6
   13350:	cmp	w5, #0x0
   13354:	ccmp	w5, w23, #0x0, ge  // ge = tcont
   13358:	b.gt	1351c <xre_search_2@@Base+0x1f8>
   1335c:	stp	x19, x20, [sp, #16]
   13360:	stp	x27, x28, [sp, #80]
   13364:	mov	x26, x1
   13368:	mov	w21, w2
   1336c:	mov	x27, x3
   13370:	mov	w28, w4
   13374:	mov	w19, w5
   13378:	tbnz	w0, #31, 133c8 <xre_search_2@@Base+0xa4>
   1337c:	sub	w1, w23, w5
   13380:	cmp	w23, w0
   13384:	csel	w20, w1, w6, lt  // lt = tstop
   13388:	ldr	x0, [x22, #16]
   1338c:	cmp	x0, #0x0
   13390:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   13394:	b.le	133cc <xre_search_2@@Base+0xa8>
   13398:	ldr	x0, [x22]
   1339c:	ldrb	w0, [x0]
   133a0:	cmp	w0, #0xb
   133a4:	b.eq	133b8 <xre_search_2@@Base+0x94>  // b.none
   133a8:	cmp	w0, #0x9
   133ac:	b.ne	133cc <xre_search_2@@Base+0xa8>  // b.any
   133b0:	ldrsb	w0, [x22, #56]
   133b4:	tbnz	w0, #31, 133cc <xre_search_2@@Base+0xa8>
   133b8:	cmp	w19, #0x0
   133bc:	b.gt	13524 <xre_search_2@@Base+0x200>
   133c0:	mov	w20, #0x1                   	// #1
   133c4:	b	133cc <xre_search_2@@Base+0xa8>
   133c8:	neg	w20, w5
   133cc:	cbz	x24, 133d8 <xre_search_2@@Base+0xb4>
   133d0:	ldrb	w0, [x22, #56]
   133d4:	tbz	w0, #3, 133e4 <xre_search_2@@Base+0xc0>
   133d8:	sxtw	x0, w21
   133dc:	str	x0, [sp, #104]
   133e0:	b	134c8 <xre_search_2@@Base+0x1a4>
   133e4:	mov	x0, x22
   133e8:	bl	5340 <xre_compile_fastmap@plt>
   133ec:	cmn	w0, #0x2
   133f0:	b.ne	133d8 <xre_search_2@@Base+0xb4>  // b.any
   133f4:	ldp	x19, x20, [sp, #16]
   133f8:	ldp	x27, x28, [sp, #80]
   133fc:	b	13560 <xre_search_2@@Base+0x23c>
   13400:	mov	w0, w20
   13404:	cmp	w20, w1
   13408:	b.le	13484 <xre_search_2@@Base+0x160>
   1340c:	ldrb	w3, [x2], #1
   13410:	ldrb	w3, [x24, x3]
   13414:	cbnz	w3, 135d0 <xre_search_2@@Base+0x2ac>
   13418:	sub	w0, w0, #0x1
   1341c:	cmp	w0, w1
   13420:	b.ne	1340c <xre_search_2@@Base+0xe8>  // b.any
   13424:	mov	w0, w1
   13428:	b	135d0 <xre_search_2@@Base+0x2ac>
   1342c:	cmp	w21, #0x0
   13430:	ccmp	w21, w19, #0x4, ne  // ne = any
   13434:	b.gt	13464 <xre_search_2@@Base+0x140>
   13438:	sub	w0, w19, w21
   1343c:	ldrb	w0, [x27, w0, sxtw]
   13440:	and	x1, x0, #0xff
   13444:	cbz	x25, 1344c <xre_search_2@@Base+0x128>
   13448:	ldrb	w1, [x25, x1]
   1344c:	ldrb	w0, [x24, x1]
   13450:	cbnz	w0, 13484 <xre_search_2@@Base+0x160>
   13454:	cbz	w20, 13584 <xre_search_2@@Base+0x260>
   13458:	add	w20, w20, #0x1
   1345c:	sub	w19, w19, #0x1
   13460:	b	134c8 <xre_search_2@@Base+0x1a4>
   13464:	ldrb	w0, [x26, w19, sxtw]
   13468:	b	13440 <xre_search_2@@Base+0x11c>
   1346c:	cmp	w20, #0x0
   13470:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   13474:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   13478:	b.eq	13484 <xre_search_2@@Base+0x160>  // b.none
   1347c:	ldrb	w0, [x22, #56]
   13480:	tbz	w0, #0, 13544 <xre_search_2@@Base+0x220>
   13484:	ldr	w7, [sp, #112]
   13488:	ldr	x6, [sp, #96]
   1348c:	mov	w5, w19
   13490:	mov	w4, w28
   13494:	mov	x3, x27
   13498:	mov	w2, w21
   1349c:	mov	x1, x26
   134a0:	mov	x0, x22
   134a4:	bl	e398 <gcc_cp_fe_context@@Base+0x4c68>
   134a8:	tbz	w0, #31, 13554 <xre_search_2@@Base+0x230>
   134ac:	cmn	w0, #0x2
   134b0:	b.eq	135ec <xre_search_2@@Base+0x2c8>  // b.none
   134b4:	cbz	w20, 13574 <xre_search_2@@Base+0x250>
   134b8:	cmp	w20, #0x0
   134bc:	b.le	13458 <xre_search_2@@Base+0x134>
   134c0:	sub	w20, w20, #0x1
   134c4:	add	w19, w19, #0x1
   134c8:	cmp	x24, #0x0
   134cc:	cset	w0, ne  // ne = any
   134d0:	cmp	w0, #0x0
   134d4:	ccmp	w23, w19, #0x4, ne  // ne = any
   134d8:	b.le	1346c <xre_search_2@@Base+0x148>
   134dc:	ldrb	w0, [x22, #56]
   134e0:	tbnz	w0, #0, 13484 <xre_search_2@@Base+0x160>
   134e4:	cmp	w20, #0x0
   134e8:	b.le	1342c <xre_search_2@@Base+0x108>
   134ec:	cmp	w21, w19
   134f0:	b.le	13594 <xre_search_2@@Base+0x270>
   134f4:	add	w0, w19, w20
   134f8:	sub	w1, w21, w19
   134fc:	sub	w1, w20, w1
   13500:	cmp	w21, w0
   13504:	csel	w1, w1, wzr, le
   13508:	add	x2, x26, w19, sxtw
   1350c:	cbz	x25, 13400 <xre_search_2@@Base+0xdc>
   13510:	cmp	w20, w1
   13514:	b.gt	135ac <xre_search_2@@Base+0x288>
   13518:	b	13484 <xre_search_2@@Base+0x160>
   1351c:	mov	w0, #0xffffffff            	// #-1
   13520:	b	13560 <xre_search_2@@Base+0x23c>
   13524:	mov	w0, #0xffffffff            	// #-1
   13528:	ldp	x19, x20, [sp, #16]
   1352c:	ldp	x27, x28, [sp, #80]
   13530:	b	13560 <xre_search_2@@Base+0x23c>
   13534:	mov	w0, #0xffffffff            	// #-1
   13538:	ldp	x19, x20, [sp, #16]
   1353c:	ldp	x27, x28, [sp, #80]
   13540:	b	13560 <xre_search_2@@Base+0x23c>
   13544:	mov	w0, #0xffffffff            	// #-1
   13548:	ldp	x19, x20, [sp, #16]
   1354c:	ldp	x27, x28, [sp, #80]
   13550:	b	13560 <xre_search_2@@Base+0x23c>
   13554:	mov	w0, w19
   13558:	ldp	x19, x20, [sp, #16]
   1355c:	ldp	x27, x28, [sp, #80]
   13560:	ldp	x21, x22, [sp, #32]
   13564:	ldp	x23, x24, [sp, #48]
   13568:	ldp	x25, x26, [sp, #64]
   1356c:	ldp	x29, x30, [sp], #112
   13570:	ret
   13574:	mov	w0, #0xffffffff            	// #-1
   13578:	ldp	x19, x20, [sp, #16]
   1357c:	ldp	x27, x28, [sp, #80]
   13580:	b	13560 <xre_search_2@@Base+0x23c>
   13584:	mov	w0, #0xffffffff            	// #-1
   13588:	ldp	x19, x20, [sp, #16]
   1358c:	ldp	x27, x28, [sp, #80]
   13590:	b	13560 <xre_search_2@@Base+0x23c>
   13594:	sxtw	x2, w19
   13598:	ldr	x0, [sp, #104]
   1359c:	sub	x2, x2, x0
   135a0:	add	x2, x27, x2
   135a4:	mov	w1, #0x0                   	// #0
   135a8:	cbz	x25, 13400 <xre_search_2@@Base+0xdc>
   135ac:	mov	w0, w20
   135b0:	ldrb	w3, [x2], #1
   135b4:	ldrb	w3, [x25, x3]
   135b8:	ldrb	w3, [x24, x3]
   135bc:	cbnz	w3, 135d0 <xre_search_2@@Base+0x2ac>
   135c0:	sub	w0, w0, #0x1
   135c4:	cmp	w0, w1
   135c8:	b.ne	135b0 <xre_search_2@@Base+0x28c>  // b.any
   135cc:	mov	w0, w1
   135d0:	sub	w20, w20, w0
   135d4:	add	w19, w19, w20
   135d8:	cmp	w0, #0x0
   135dc:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   135e0:	b.eq	13534 <xre_search_2@@Base+0x210>  // b.none
   135e4:	mov	w20, w0
   135e8:	b	13484 <xre_search_2@@Base+0x160>
   135ec:	ldp	x19, x20, [sp, #16]
   135f0:	ldp	x27, x28, [sp, #80]
   135f4:	b	13560 <xre_search_2@@Base+0x23c>

00000000000135f8 <xre_search@@Base>:
   135f8:	sub	sp, sp, #0x20
   135fc:	stp	x29, x30, [sp, #16]
   13600:	add	x29, sp, #0x10
   13604:	str	w2, [sp]
   13608:	mov	x7, x5
   1360c:	mov	w6, w4
   13610:	mov	w5, w3
   13614:	mov	w4, w2
   13618:	mov	x3, x1
   1361c:	mov	w2, #0x0                   	// #0
   13620:	mov	x1, #0x0                   	// #0
   13624:	bl	5800 <xre_search_2@plt>
   13628:	ldp	x29, x30, [sp, #16]
   1362c:	add	sp, sp, #0x20
   13630:	ret

0000000000013634 <xre_match@@Base>:
   13634:	stp	x29, x30, [sp, #-16]!
   13638:	mov	x29, sp
   1363c:	mov	w7, w2
   13640:	mov	x6, x4
   13644:	mov	w5, w3
   13648:	mov	w4, w2
   1364c:	mov	x3, x1
   13650:	mov	w2, #0x0                   	// #0
   13654:	mov	x1, #0x0                   	// #0
   13658:	bl	e398 <gcc_cp_fe_context@@Base+0x4c68>
   1365c:	ldp	x29, x30, [sp], #16
   13660:	ret

0000000000013664 <xre_match_2@@Base>:
   13664:	stp	x29, x30, [sp, #-16]!
   13668:	mov	x29, sp
   1366c:	bl	e398 <gcc_cp_fe_context@@Base+0x4c68>
   13670:	ldp	x29, x30, [sp], #16
   13674:	ret

0000000000013678 <xre_compile_pattern@@Base>:
   13678:	stp	x29, x30, [sp, #-16]!
   1367c:	mov	x29, sp
   13680:	mov	x3, x2
   13684:	ldrb	w4, [x2, #56]
   13688:	and	w4, w4, #0xfffffff9
   1368c:	and	w4, w4, #0xffffffef
   13690:	orr	w4, w4, #0xffffff80
   13694:	strb	w4, [x2, #56]
   13698:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
   1369c:	ldr	x2, [x2, #3800]
   136a0:	ldr	x2, [x2]
   136a4:	bl	101f4 <gcc_cp_fe_context@@Base+0x6ac4>
   136a8:	cbz	w0, 136c0 <xre_compile_pattern@@Base+0x48>
   136ac:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
   136b0:	add	x1, x1, #0x900
   136b4:	ldr	x0, [x1, w0, sxtw #3]
   136b8:	ldp	x29, x30, [sp], #16
   136bc:	ret
   136c0:	mov	x0, #0x0                   	// #0
   136c4:	b	136b8 <xre_compile_pattern@@Base+0x40>

00000000000136c8 <xre_comp@@Base>:
   136c8:	stp	x29, x30, [sp, #-32]!
   136cc:	mov	x29, sp
   136d0:	stp	x19, x20, [sp, #16]
   136d4:	mov	x19, x0
   136d8:	cbz	x0, 13740 <xre_comp@@Base+0x78>
   136dc:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   136e0:	ldr	x0, [x0, #1792]
   136e4:	cbz	x0, 1375c <xre_comp@@Base+0x94>
   136e8:	adrp	x20, 2b000 <xexit@@Base+0x15c24>
   136ec:	add	x20, x20, #0x5f8
   136f0:	ldrb	w0, [x20, #320]
   136f4:	orr	w0, w0, #0xffffff80
   136f8:	strb	w0, [x20, #320]
   136fc:	add	x20, x20, #0x108
   13700:	mov	x0, x19
   13704:	bl	5360 <strlen@plt>
   13708:	mov	x3, x20
   1370c:	adrp	x2, 2a000 <xexit@@Base+0x14c24>
   13710:	ldr	x2, [x2, #3800]
   13714:	ldr	x2, [x2]
   13718:	mov	x1, x0
   1371c:	mov	x0, x19
   13720:	bl	101f4 <gcc_cp_fe_context@@Base+0x6ac4>
   13724:	cbz	w0, 137a8 <xre_comp@@Base+0xe0>
   13728:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
   1372c:	add	x1, x1, #0x900
   13730:	ldr	x0, [x1, w0, sxtw #3]
   13734:	ldp	x19, x20, [sp, #16]
   13738:	ldp	x29, x30, [sp], #32
   1373c:	ret
   13740:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   13744:	ldr	x1, [x0, #1792]
   13748:	adrp	x0, 16000 <xexit@@Base+0xc24>
   1374c:	add	x0, x0, #0x18
   13750:	cmp	x1, #0x0
   13754:	csel	x0, x0, x19, eq  // eq = none
   13758:	b	13734 <xre_comp@@Base+0x6c>
   1375c:	mov	x0, #0xc8                  	// #200
   13760:	bl	5710 <malloc@plt>
   13764:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
   13768:	str	x0, [x1, #1792]
   1376c:	cbz	x0, 1379c <xre_comp@@Base+0xd4>
   13770:	adrp	x20, 2b000 <xexit@@Base+0x15c24>
   13774:	add	x20, x20, #0x5f8
   13778:	mov	x0, #0xc8                  	// #200
   1377c:	str	x0, [x20, #272]
   13780:	mov	x0, #0x100                 	// #256
   13784:	bl	5710 <malloc@plt>
   13788:	str	x0, [x20, #296]
   1378c:	cbnz	x0, 136e8 <xre_comp@@Base+0x20>
   13790:	adrp	x0, 16000 <xexit@@Base+0xc24>
   13794:	add	x0, x0, #0x0
   13798:	b	13734 <xre_comp@@Base+0x6c>
   1379c:	adrp	x0, 16000 <xexit@@Base+0xc24>
   137a0:	add	x0, x0, #0x0
   137a4:	b	13734 <xre_comp@@Base+0x6c>
   137a8:	mov	x0, #0x0                   	// #0
   137ac:	b	13734 <xre_comp@@Base+0x6c>

00000000000137b0 <xre_exec@@Base>:
   137b0:	stp	x29, x30, [sp, #-32]!
   137b4:	mov	x29, sp
   137b8:	str	x19, [sp, #16]
   137bc:	mov	x19, x0
   137c0:	bl	5360 <strlen@plt>
   137c4:	mov	x2, x0
   137c8:	mov	x5, #0x0                   	// #0
   137cc:	mov	w4, w0
   137d0:	mov	w3, #0x0                   	// #0
   137d4:	mov	x1, x19
   137d8:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   137dc:	add	x0, x0, #0x5f8
   137e0:	add	x0, x0, #0x108
   137e4:	bl	55c0 <xre_search@plt>
   137e8:	mvn	w0, w0
   137ec:	lsr	w0, w0, #31
   137f0:	ldr	x19, [sp, #16]
   137f4:	ldp	x29, x30, [sp], #32
   137f8:	ret

00000000000137fc <xregcomp@@Base>:
   137fc:	stp	x29, x30, [sp, #-64]!
   13800:	mov	x29, sp
   13804:	stp	x19, x20, [sp, #16]
   13808:	stp	x21, x22, [sp, #32]
   1380c:	stp	x23, x24, [sp, #48]
   13810:	mov	x20, x0
   13814:	mov	x24, x1
   13818:	mov	w22, w2
   1381c:	tst	x22, #0x1
   13820:	mov	x23, #0xb2fc                	// #45820
   13824:	movk	x23, #0x3, lsl #16
   13828:	mov	x0, #0x2c6                 	// #710
   1382c:	movk	x0, #0x1, lsl #16
   13830:	csel	x23, x23, x0, ne  // ne = any
   13834:	str	xzr, [x20]
   13838:	str	xzr, [x20, #8]
   1383c:	str	xzr, [x20, #16]
   13840:	mov	x0, #0x100                 	// #256
   13844:	bl	5710 <malloc@plt>
   13848:	str	x0, [x20, #32]
   1384c:	tbnz	w22, #1, 138d0 <xregcomp@@Base+0xd4>
   13850:	str	xzr, [x20, #40]
   13854:	mov	w1, #0x0                   	// #0
   13858:	tbz	w22, #2, 13868 <xregcomp@@Base+0x6c>
   1385c:	and	x23, x23, #0xffffffffffffffbf
   13860:	orr	x23, x23, #0x100
   13864:	mov	w1, #0x1                   	// #1
   13868:	ldrb	w0, [x20, #56]
   1386c:	bfi	w0, w1, #7, #1
   13870:	ubfx	x22, x22, #3, #1
   13874:	bfi	w0, w22, #4, #1
   13878:	strb	w0, [x20, #56]
   1387c:	mov	x0, x24
   13880:	bl	5360 <strlen@plt>
   13884:	mov	x3, x20
   13888:	mov	x2, x23
   1388c:	mov	x1, x0
   13890:	mov	x0, x24
   13894:	bl	101f4 <gcc_cp_fe_context@@Base+0x6ac4>
   13898:	mov	w19, w0
   1389c:	cmp	w0, #0x10
   138a0:	b.eq	13930 <xregcomp@@Base+0x134>  // b.none
   138a4:	cbnz	w0, 13934 <xregcomp@@Base+0x138>
   138a8:	ldr	x0, [x20, #32]
   138ac:	cbz	x0, 13934 <xregcomp@@Base+0x138>
   138b0:	mov	x0, x20
   138b4:	bl	5340 <xre_compile_fastmap@plt>
   138b8:	cmn	w0, #0x2
   138bc:	b.ne	13934 <xregcomp@@Base+0x138>  // b.any
   138c0:	ldr	x0, [x20, #32]
   138c4:	bl	5440 <free@plt>
   138c8:	str	xzr, [x20, #32]
   138cc:	b	13934 <xregcomp@@Base+0x138>
   138d0:	mov	x0, #0x100                 	// #256
   138d4:	bl	5710 <malloc@plt>
   138d8:	str	x0, [x20, #40]
   138dc:	cbz	x0, 13928 <xregcomp@@Base+0x12c>
   138e0:	bl	5590 <__ctype_b_loc@plt>
   138e4:	mov	x21, x0
   138e8:	mov	x19, #0x0                   	// #0
   138ec:	b	13904 <xregcomp@@Base+0x108>
   138f0:	ldr	x4, [x20, #40]
   138f4:	strb	w3, [x4, x19]
   138f8:	add	x19, x19, #0x1
   138fc:	cmp	x19, #0x100
   13900:	b.eq	13854 <xregcomp@@Base+0x58>  // b.none
   13904:	ldr	x0, [x21]
   13908:	ldrh	w4, [x0, x19, lsl #1]
   1390c:	and	w3, w19, #0xff
   13910:	tbz	w4, #8, 138f0 <xregcomp@@Base+0xf4>
   13914:	bl	5650 <__ctype_tolower_loc@plt>
   13918:	ldr	x0, [x0]
   1391c:	ldr	w3, [x0, x19, lsl #2]
   13920:	and	w3, w3, #0xff
   13924:	b	138f0 <xregcomp@@Base+0xf4>
   13928:	mov	w19, #0xc                   	// #12
   1392c:	b	13934 <xregcomp@@Base+0x138>
   13930:	mov	w19, #0x8                   	// #8
   13934:	mov	w0, w19
   13938:	ldp	x19, x20, [sp, #16]
   1393c:	ldp	x21, x22, [sp, #32]
   13940:	ldp	x23, x24, [sp, #48]
   13944:	ldp	x29, x30, [sp], #64
   13948:	ret

000000000001394c <xregexec@@Base>:
   1394c:	stp	x29, x30, [sp, #-160]!
   13950:	mov	x29, sp
   13954:	stp	x19, x20, [sp, #16]
   13958:	stp	x21, x22, [sp, #32]
   1395c:	stp	x23, x24, [sp, #48]
   13960:	mov	x24, x0
   13964:	mov	x21, x1
   13968:	mov	x20, x2
   1396c:	mov	x19, x3
   13970:	mov	w23, w4
   13974:	mov	x0, x1
   13978:	bl	5360 <strlen@plt>
   1397c:	mov	x22, x0
   13980:	ldrb	w5, [x24, #56]
   13984:	eor	x5, x5, #0x10
   13988:	ubfx	x5, x5, #4, #1
   1398c:	cmp	x20, #0x0
   13990:	csel	w5, w5, wzr, ne  // ne = any
   13994:	ldp	x0, x1, [x24]
   13998:	stp	x0, x1, [sp, #72]
   1399c:	ldp	x0, x1, [x24, #16]
   139a0:	stp	x0, x1, [sp, #88]
   139a4:	ldp	x0, x1, [x24, #32]
   139a8:	stp	x0, x1, [sp, #104]
   139ac:	ldp	x0, x1, [x24, #48]
   139b0:	stp	x0, x1, [sp, #120]
   139b4:	ldrb	w4, [sp, #128]
   139b8:	bfi	w4, w23, #5, #1
   139bc:	ubfx	x23, x23, #1, #1
   139c0:	bfi	w4, w23, #6, #1
   139c4:	mov	w0, #0x2                   	// #2
   139c8:	bfi	w4, w0, #1, #2
   139cc:	strb	w4, [sp, #128]
   139d0:	cbnz	w5, 139f8 <xregexec@@Base+0xac>
   139d4:	mov	x5, #0x0                   	// #0
   139d8:	mov	w4, w22
   139dc:	mov	w3, #0x0                   	// #0
   139e0:	mov	w2, w22
   139e4:	mov	x1, x21
   139e8:	add	x0, sp, #0x48
   139ec:	bl	55c0 <xre_search@plt>
   139f0:	mov	w21, w0
   139f4:	b	13a78 <xregexec@@Base+0x12c>
   139f8:	str	w20, [sp, #136]
   139fc:	lsl	x0, x20, #3
   13a00:	bl	5710 <malloc@plt>
   13a04:	str	x0, [sp, #144]
   13a08:	cbz	x0, 13a90 <xregexec@@Base+0x144>
   13a0c:	add	x0, x0, x20, lsl #2
   13a10:	str	x0, [sp, #152]
   13a14:	add	x5, sp, #0x88
   13a18:	mov	w4, w22
   13a1c:	mov	w3, #0x0                   	// #0
   13a20:	mov	w2, w22
   13a24:	mov	x1, x21
   13a28:	add	x0, sp, #0x48
   13a2c:	bl	55c0 <xre_search@plt>
   13a30:	mov	w21, w0
   13a34:	tbnz	w0, #31, 13a70 <xregexec@@Base+0x124>
   13a38:	ldr	x6, [sp, #144]
   13a3c:	ldr	x5, [sp, #152]
   13a40:	mov	w4, #0x0                   	// #0
   13a44:	mov	x1, #0x0                   	// #0
   13a48:	lsl	x2, x1, #3
   13a4c:	add	x0, x19, x2
   13a50:	ldr	w3, [x6, x1, lsl #2]
   13a54:	str	w3, [x19, x2]
   13a58:	ldr	w1, [x5, x1, lsl #2]
   13a5c:	str	w1, [x0, #4]
   13a60:	add	w4, w4, #0x1
   13a64:	mov	w1, w4
   13a68:	cmp	x20, w4, uxtw
   13a6c:	b.hi	13a48 <xregexec@@Base+0xfc>  // b.pmore
   13a70:	ldr	x0, [sp, #144]
   13a74:	bl	5440 <free@plt>
   13a78:	lsr	w0, w21, #31
   13a7c:	ldp	x19, x20, [sp, #16]
   13a80:	ldp	x21, x22, [sp, #32]
   13a84:	ldp	x23, x24, [sp, #48]
   13a88:	ldp	x29, x30, [sp], #160
   13a8c:	ret
   13a90:	mov	w0, #0x1                   	// #1
   13a94:	b	13a7c <xregexec@@Base+0x130>

0000000000013a98 <xregerror@@Base>:
   13a98:	stp	x29, x30, [sp, #-48]!
   13a9c:	mov	x29, sp
   13aa0:	stp	x19, x20, [sp, #16]
   13aa4:	stp	x21, x22, [sp, #32]
   13aa8:	cmp	w0, #0x10
   13aac:	b.hi	13b08 <xregerror@@Base+0x70>  // b.pmore
   13ab0:	mov	x21, x2
   13ab4:	mov	x19, x3
   13ab8:	adrp	x1, 2a000 <xexit@@Base+0x14c24>
   13abc:	add	x1, x1, #0x900
   13ac0:	ldr	x22, [x1, w0, sxtw #3]
   13ac4:	mov	x0, x22
   13ac8:	bl	5360 <strlen@plt>
   13acc:	add	x20, x0, #0x1
   13ad0:	cbz	x19, 13af4 <xregerror@@Base+0x5c>
   13ad4:	cmp	x20, x19
   13ad8:	b.ls	13b0c <xregerror@@Base+0x74>  // b.plast
   13adc:	sub	x19, x19, #0x1
   13ae0:	mov	x2, x19
   13ae4:	mov	x1, x22
   13ae8:	mov	x0, x21
   13aec:	bl	52b0 <memcpy@plt>
   13af0:	strb	wzr, [x21, x19]
   13af4:	mov	x0, x20
   13af8:	ldp	x19, x20, [sp, #16]
   13afc:	ldp	x21, x22, [sp, #32]
   13b00:	ldp	x29, x30, [sp], #48
   13b04:	ret
   13b08:	bl	5740 <abort@plt>
   13b0c:	mov	x2, x20
   13b10:	mov	x1, x22
   13b14:	mov	x0, x21
   13b18:	bl	52b0 <memcpy@plt>
   13b1c:	b	13af4 <xregerror@@Base+0x5c>

0000000000013b20 <xregfree@@Base>:
   13b20:	stp	x29, x30, [sp, #-32]!
   13b24:	mov	x29, sp
   13b28:	str	x19, [sp, #16]
   13b2c:	mov	x19, x0
   13b30:	ldr	x0, [x0]
   13b34:	bl	5440 <free@plt>
   13b38:	str	xzr, [x19]
   13b3c:	str	xzr, [x19, #8]
   13b40:	str	xzr, [x19, #16]
   13b44:	ldr	x0, [x19, #32]
   13b48:	bl	5440 <free@plt>
   13b4c:	str	xzr, [x19, #32]
   13b50:	ldrb	w0, [x19, #56]
   13b54:	and	w0, w0, #0xfffffff7
   13b58:	strb	w0, [x19, #56]
   13b5c:	ldr	x0, [x19, #40]
   13b60:	bl	5440 <free@plt>
   13b64:	str	xzr, [x19, #40]
   13b68:	ldr	x19, [sp, #16]
   13b6c:	ldp	x29, x30, [sp], #32
   13b70:	ret

0000000000013b74 <concat_length@@Base>:
   13b74:	stp	x29, x30, [sp, #-272]!
   13b78:	mov	x29, sp
   13b7c:	stp	x19, x20, [sp, #16]
   13b80:	stp	x21, x22, [sp, #32]
   13b84:	str	x1, [sp, #216]
   13b88:	str	x2, [sp, #224]
   13b8c:	str	x3, [sp, #232]
   13b90:	str	x4, [sp, #240]
   13b94:	str	x5, [sp, #248]
   13b98:	str	x6, [sp, #256]
   13b9c:	str	x7, [sp, #264]
   13ba0:	str	q0, [sp, #80]
   13ba4:	str	q1, [sp, #96]
   13ba8:	str	q2, [sp, #112]
   13bac:	str	q3, [sp, #128]
   13bb0:	str	q4, [sp, #144]
   13bb4:	str	q5, [sp, #160]
   13bb8:	str	q6, [sp, #176]
   13bbc:	str	q7, [sp, #192]
   13bc0:	add	x1, sp, #0x110
   13bc4:	str	x1, [sp, #48]
   13bc8:	str	x1, [sp, #56]
   13bcc:	add	x1, sp, #0xd0
   13bd0:	str	x1, [sp, #64]
   13bd4:	mov	w20, #0xffffffc8            	// #-56
   13bd8:	str	w20, [sp, #72]
   13bdc:	mov	w1, #0xffffff80            	// #-128
   13be0:	str	w1, [sp, #76]
   13be4:	cbz	x0, 13c3c <concat_length@@Base+0xc8>
   13be8:	add	x19, sp, #0x110
   13bec:	mov	x22, x19
   13bf0:	mov	x21, #0x0                   	// #0
   13bf4:	b	13c18 <concat_length@@Base+0xa4>
   13bf8:	add	w1, w20, #0x8
   13bfc:	cmp	w1, #0x0
   13c00:	b.le	13c30 <concat_length@@Base+0xbc>
   13c04:	mov	w20, w1
   13c08:	mov	x0, x19
   13c0c:	add	x19, x19, #0x8
   13c10:	ldr	x0, [x0]
   13c14:	cbz	x0, 13c40 <concat_length@@Base+0xcc>
   13c18:	bl	5360 <strlen@plt>
   13c1c:	add	x21, x21, x0
   13c20:	tbnz	w20, #31, 13bf8 <concat_length@@Base+0x84>
   13c24:	mov	x0, x19
   13c28:	add	x19, x19, #0x8
   13c2c:	b	13c10 <concat_length@@Base+0x9c>
   13c30:	add	x0, x22, w20, sxtw
   13c34:	mov	w20, w1
   13c38:	b	13c10 <concat_length@@Base+0x9c>
   13c3c:	mov	x21, #0x0                   	// #0
   13c40:	mov	x0, x21
   13c44:	ldp	x19, x20, [sp, #16]
   13c48:	ldp	x21, x22, [sp, #32]
   13c4c:	ldp	x29, x30, [sp], #272
   13c50:	ret

0000000000013c54 <concat_copy@@Base>:
   13c54:	stp	x29, x30, [sp, #-288]!
   13c58:	mov	x29, sp
   13c5c:	stp	x19, x20, [sp, #16]
   13c60:	stp	x21, x22, [sp, #32]
   13c64:	stp	x23, x24, [sp, #48]
   13c68:	mov	x22, x0
   13c6c:	str	x2, [sp, #240]
   13c70:	str	x3, [sp, #248]
   13c74:	str	x4, [sp, #256]
   13c78:	str	x5, [sp, #264]
   13c7c:	str	x6, [sp, #272]
   13c80:	str	x7, [sp, #280]
   13c84:	str	q0, [sp, #112]
   13c88:	str	q1, [sp, #128]
   13c8c:	str	q2, [sp, #144]
   13c90:	str	q3, [sp, #160]
   13c94:	str	q4, [sp, #176]
   13c98:	str	q5, [sp, #192]
   13c9c:	str	q6, [sp, #208]
   13ca0:	str	q7, [sp, #224]
   13ca4:	add	x0, sp, #0x120
   13ca8:	str	x0, [sp, #80]
   13cac:	str	x0, [sp, #88]
   13cb0:	add	x0, sp, #0xf0
   13cb4:	str	x0, [sp, #96]
   13cb8:	mov	w19, #0xffffffd0            	// #-48
   13cbc:	str	w19, [sp, #104]
   13cc0:	mov	w0, #0xffffff80            	// #-128
   13cc4:	str	w0, [sp, #108]
   13cc8:	cbz	x1, 13d60 <concat_copy@@Base+0x10c>
   13ccc:	str	x25, [sp, #64]
   13cd0:	mov	x20, x1
   13cd4:	add	x21, sp, #0x120
   13cd8:	mov	x25, x21
   13cdc:	mov	x23, x22
   13ce0:	b	13d04 <concat_copy@@Base+0xb0>
   13ce4:	add	w1, w19, #0x8
   13ce8:	cmp	w1, #0x0
   13cec:	b.le	13d34 <concat_copy@@Base+0xe0>
   13cf0:	mov	w19, w1
   13cf4:	mov	x0, x21
   13cf8:	add	x21, x21, #0x8
   13cfc:	ldr	x20, [x0]
   13d00:	cbz	x20, 13d40 <concat_copy@@Base+0xec>
   13d04:	mov	x0, x20
   13d08:	bl	5360 <strlen@plt>
   13d0c:	mov	x24, x0
   13d10:	mov	x2, x0
   13d14:	mov	x1, x20
   13d18:	mov	x0, x23
   13d1c:	bl	52b0 <memcpy@plt>
   13d20:	add	x23, x23, x24
   13d24:	tbnz	w19, #31, 13ce4 <concat_copy@@Base+0x90>
   13d28:	mov	x0, x21
   13d2c:	add	x21, x21, #0x8
   13d30:	b	13cfc <concat_copy@@Base+0xa8>
   13d34:	add	x0, x25, w19, sxtw
   13d38:	mov	w19, w1
   13d3c:	b	13cfc <concat_copy@@Base+0xa8>
   13d40:	ldr	x25, [sp, #64]
   13d44:	strb	wzr, [x23]
   13d48:	mov	x0, x22
   13d4c:	ldp	x19, x20, [sp, #16]
   13d50:	ldp	x21, x22, [sp, #32]
   13d54:	ldp	x23, x24, [sp, #48]
   13d58:	ldp	x29, x30, [sp], #288
   13d5c:	ret
   13d60:	mov	x23, x22
   13d64:	b	13d44 <concat_copy@@Base+0xf0>

0000000000013d68 <concat_copy2@@Base>:
   13d68:	stp	x29, x30, [sp, #-288]!
   13d6c:	mov	x29, sp
   13d70:	stp	x19, x20, [sp, #16]
   13d74:	stp	x21, x22, [sp, #32]
   13d78:	stp	x23, x24, [sp, #48]
   13d7c:	mov	x20, x0
   13d80:	str	x1, [sp, #232]
   13d84:	str	x2, [sp, #240]
   13d88:	str	x3, [sp, #248]
   13d8c:	str	x4, [sp, #256]
   13d90:	str	x5, [sp, #264]
   13d94:	str	x6, [sp, #272]
   13d98:	str	x7, [sp, #280]
   13d9c:	str	q0, [sp, #96]
   13da0:	str	q1, [sp, #112]
   13da4:	str	q2, [sp, #128]
   13da8:	str	q3, [sp, #144]
   13dac:	str	q4, [sp, #160]
   13db0:	str	q5, [sp, #176]
   13db4:	str	q6, [sp, #192]
   13db8:	str	q7, [sp, #208]
   13dbc:	add	x0, sp, #0x120
   13dc0:	str	x0, [sp, #64]
   13dc4:	str	x0, [sp, #72]
   13dc8:	add	x0, sp, #0xe0
   13dcc:	str	x0, [sp, #80]
   13dd0:	mov	w19, #0xffffffc8            	// #-56
   13dd4:	str	w19, [sp, #88]
   13dd8:	mov	w0, #0xffffff80            	// #-128
   13ddc:	str	w0, [sp, #92]
   13de0:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
   13de4:	ldr	x0, [x0, #3840]
   13de8:	ldr	x22, [x0]
   13dec:	add	x21, sp, #0x120
   13df0:	mov	x24, x21
   13df4:	cbnz	x20, 13e3c <concat_copy2@@Base+0xd4>
   13df8:	strb	wzr, [x22]
   13dfc:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
   13e00:	ldr	x0, [x0, #3840]
   13e04:	ldr	x0, [x0]
   13e08:	ldp	x19, x20, [sp, #16]
   13e0c:	ldp	x21, x22, [sp, #32]
   13e10:	ldp	x23, x24, [sp, #48]
   13e14:	ldp	x29, x30, [sp], #288
   13e18:	ret
   13e1c:	add	w1, w19, #0x8
   13e20:	cmp	w1, #0x0
   13e24:	b.le	13e6c <concat_copy2@@Base+0x104>
   13e28:	mov	w19, w1
   13e2c:	mov	x0, x21
   13e30:	add	x21, x21, #0x8
   13e34:	ldr	x20, [x0]
   13e38:	cbz	x20, 13df8 <concat_copy2@@Base+0x90>
   13e3c:	mov	x0, x20
   13e40:	bl	5360 <strlen@plt>
   13e44:	mov	x23, x0
   13e48:	mov	x2, x0
   13e4c:	mov	x1, x20
   13e50:	mov	x0, x22
   13e54:	bl	52b0 <memcpy@plt>
   13e58:	add	x22, x22, x23
   13e5c:	tbnz	w19, #31, 13e1c <concat_copy2@@Base+0xb4>
   13e60:	mov	x0, x21
   13e64:	add	x21, x21, #0x8
   13e68:	b	13e34 <concat_copy2@@Base+0xcc>
   13e6c:	add	x0, x24, w19, sxtw
   13e70:	mov	w19, w1
   13e74:	b	13e34 <concat_copy2@@Base+0xcc>

0000000000013e78 <concat@@Base>:
   13e78:	stp	x29, x30, [sp, #-304]!
   13e7c:	mov	x29, sp
   13e80:	stp	x19, x20, [sp, #16]
   13e84:	stp	x21, x22, [sp, #32]
   13e88:	stp	x23, x24, [sp, #48]
   13e8c:	mov	x20, x0
   13e90:	str	x1, [sp, #248]
   13e94:	str	x2, [sp, #256]
   13e98:	str	x3, [sp, #264]
   13e9c:	str	x4, [sp, #272]
   13ea0:	str	x5, [sp, #280]
   13ea4:	str	x6, [sp, #288]
   13ea8:	str	x7, [sp, #296]
   13eac:	str	q0, [sp, #112]
   13eb0:	str	q1, [sp, #128]
   13eb4:	str	q2, [sp, #144]
   13eb8:	str	q3, [sp, #160]
   13ebc:	str	q4, [sp, #176]
   13ec0:	str	q5, [sp, #192]
   13ec4:	str	q6, [sp, #208]
   13ec8:	str	q7, [sp, #224]
   13ecc:	add	x0, sp, #0x130
   13ed0:	str	x0, [sp, #80]
   13ed4:	str	x0, [sp, #88]
   13ed8:	add	x0, sp, #0xf0
   13edc:	str	x0, [sp, #96]
   13ee0:	mov	w21, #0xffffffc8            	// #-56
   13ee4:	str	w21, [sp, #104]
   13ee8:	mov	w0, #0xffffff80            	// #-128
   13eec:	str	w0, [sp, #108]
   13ef0:	cbz	x20, 13fcc <concat@@Base+0x154>
   13ef4:	str	x25, [sp, #64]
   13ef8:	add	x19, sp, #0x130
   13efc:	mov	x23, x19
   13f00:	mov	x0, x20
   13f04:	mov	x22, #0x0                   	// #0
   13f08:	b	13f2c <concat@@Base+0xb4>
   13f0c:	add	w1, w21, #0x8
   13f10:	cmp	w1, #0x0
   13f14:	b.le	13f44 <concat@@Base+0xcc>
   13f18:	mov	w21, w1
   13f1c:	mov	x0, x19
   13f20:	add	x19, x19, #0x8
   13f24:	ldr	x0, [x0]
   13f28:	cbz	x0, 14004 <concat@@Base+0x18c>
   13f2c:	bl	5360 <strlen@plt>
   13f30:	add	x22, x22, x0
   13f34:	tbnz	w21, #31, 13f0c <concat@@Base+0x94>
   13f38:	mov	x0, x19
   13f3c:	add	x19, x19, #0x8
   13f40:	b	13f24 <concat@@Base+0xac>
   13f44:	add	x0, x23, w21, sxtw
   13f48:	mov	w21, w1
   13f4c:	b	13f24 <concat@@Base+0xac>
   13f50:	add	w0, w23, #0x8
   13f54:	cmp	w0, #0x0
   13f58:	b.le	13fa0 <concat@@Base+0x128>
   13f5c:	mov	w23, w0
   13f60:	mov	x1, x22
   13f64:	add	x22, x22, #0x8
   13f68:	ldr	x20, [x1]
   13f6c:	cbz	x20, 13fac <concat@@Base+0x134>
   13f70:	mov	x0, x20
   13f74:	bl	5360 <strlen@plt>
   13f78:	mov	x19, x0
   13f7c:	mov	x2, x0
   13f80:	mov	x1, x20
   13f84:	mov	x0, x21
   13f88:	bl	52b0 <memcpy@plt>
   13f8c:	add	x21, x21, x19
   13f90:	tbnz	w23, #31, 13f50 <concat@@Base+0xd8>
   13f94:	mov	x1, x22
   13f98:	add	x22, x22, #0x8
   13f9c:	b	13f68 <concat@@Base+0xf0>
   13fa0:	add	x1, x25, w23, sxtw
   13fa4:	mov	w23, w0
   13fa8:	b	13f68 <concat@@Base+0xf0>
   13fac:	ldr	x25, [sp, #64]
   13fb0:	strb	wzr, [x21]
   13fb4:	mov	x0, x24
   13fb8:	ldp	x19, x20, [sp, #16]
   13fbc:	ldp	x21, x22, [sp, #32]
   13fc0:	ldp	x23, x24, [sp, #48]
   13fc4:	ldp	x29, x30, [sp], #304
   13fc8:	ret
   13fcc:	mov	x0, #0x1                   	// #1
   13fd0:	bl	5670 <xmalloc@plt>
   13fd4:	mov	x21, x0
   13fd8:	add	x0, sp, #0x130
   13fdc:	str	x0, [sp, #80]
   13fe0:	str	x0, [sp, #88]
   13fe4:	add	x0, sp, #0xf0
   13fe8:	str	x0, [sp, #96]
   13fec:	mov	w0, #0xffffffc8            	// #-56
   13ff0:	str	w0, [sp, #104]
   13ff4:	mov	w0, #0xffffff80            	// #-128
   13ff8:	str	w0, [sp, #108]
   13ffc:	mov	x24, x21
   14000:	b	13fb0 <concat@@Base+0x138>
   14004:	add	x0, x22, #0x1
   14008:	bl	5670 <xmalloc@plt>
   1400c:	mov	x24, x0
   14010:	add	x0, sp, #0x130
   14014:	str	x0, [sp, #80]
   14018:	str	x0, [sp, #88]
   1401c:	add	x0, sp, #0xf0
   14020:	str	x0, [sp, #96]
   14024:	mov	w23, #0xffffffc8            	// #-56
   14028:	str	w23, [sp, #104]
   1402c:	mov	w0, #0xffffff80            	// #-128
   14030:	str	w0, [sp, #108]
   14034:	add	x22, sp, #0x130
   14038:	mov	x25, x22
   1403c:	mov	x21, x24
   14040:	b	13f70 <concat@@Base+0xf8>

0000000000014044 <reconcat@@Base>:
   14044:	stp	x29, x30, [sp, #-288]!
   14048:	mov	x29, sp
   1404c:	stp	x21, x22, [sp, #32]
   14050:	stp	x23, x24, [sp, #48]
   14054:	stp	x25, x26, [sp, #64]
   14058:	mov	x23, x0
   1405c:	str	x2, [sp, #240]
   14060:	str	x3, [sp, #248]
   14064:	str	x4, [sp, #256]
   14068:	str	x5, [sp, #264]
   1406c:	str	x6, [sp, #272]
   14070:	str	x7, [sp, #280]
   14074:	str	q0, [sp, #112]
   14078:	str	q1, [sp, #128]
   1407c:	str	q2, [sp, #144]
   14080:	str	q3, [sp, #160]
   14084:	str	q4, [sp, #176]
   14088:	str	q5, [sp, #192]
   1408c:	str	q6, [sp, #208]
   14090:	str	q7, [sp, #224]
   14094:	add	x0, sp, #0x120
   14098:	str	x0, [sp, #80]
   1409c:	str	x0, [sp, #88]
   140a0:	add	x0, sp, #0xf0
   140a4:	str	x0, [sp, #96]
   140a8:	mov	w21, #0xffffffd0            	// #-48
   140ac:	str	w21, [sp, #104]
   140b0:	mov	w0, #0xffffff80            	// #-128
   140b4:	str	w0, [sp, #108]
   140b8:	cbz	x1, 141a4 <reconcat@@Base+0x160>
   140bc:	stp	x19, x20, [sp, #16]
   140c0:	mov	x20, x1
   140c4:	add	x19, sp, #0x120
   140c8:	mov	x24, x19
   140cc:	mov	x0, x1
   140d0:	mov	x22, #0x0                   	// #0
   140d4:	b	140f8 <reconcat@@Base+0xb4>
   140d8:	add	w1, w21, #0x8
   140dc:	cmp	w1, #0x0
   140e0:	b.le	14110 <reconcat@@Base+0xcc>
   140e4:	mov	w21, w1
   140e8:	mov	x0, x19
   140ec:	add	x19, x19, #0x8
   140f0:	ldr	x0, [x0]
   140f4:	cbz	x0, 141dc <reconcat@@Base+0x198>
   140f8:	bl	5360 <strlen@plt>
   140fc:	add	x22, x22, x0
   14100:	tbnz	w21, #31, 140d8 <reconcat@@Base+0x94>
   14104:	mov	x0, x19
   14108:	add	x19, x19, #0x8
   1410c:	b	140f0 <reconcat@@Base+0xac>
   14110:	add	x0, x24, w21, sxtw
   14114:	mov	w21, w1
   14118:	b	140f0 <reconcat@@Base+0xac>
   1411c:	add	w0, w24, #0x8
   14120:	cmp	w0, #0x0
   14124:	b.le	1416c <reconcat@@Base+0x128>
   14128:	mov	w24, w0
   1412c:	mov	x1, x22
   14130:	add	x22, x22, #0x8
   14134:	ldr	x20, [x1]
   14138:	cbz	x20, 14178 <reconcat@@Base+0x134>
   1413c:	mov	x0, x20
   14140:	bl	5360 <strlen@plt>
   14144:	mov	x19, x0
   14148:	mov	x2, x0
   1414c:	mov	x1, x20
   14150:	mov	x0, x21
   14154:	bl	52b0 <memcpy@plt>
   14158:	add	x21, x21, x19
   1415c:	tbnz	w24, #31, 1411c <reconcat@@Base+0xd8>
   14160:	mov	x1, x22
   14164:	add	x22, x22, #0x8
   14168:	b	14134 <reconcat@@Base+0xf0>
   1416c:	add	x1, x26, w24, sxtw
   14170:	mov	w24, w0
   14174:	b	14134 <reconcat@@Base+0xf0>
   14178:	ldp	x19, x20, [sp, #16]
   1417c:	strb	wzr, [x21]
   14180:	cbz	x23, 1418c <reconcat@@Base+0x148>
   14184:	mov	x0, x23
   14188:	bl	5440 <free@plt>
   1418c:	mov	x0, x25
   14190:	ldp	x21, x22, [sp, #32]
   14194:	ldp	x23, x24, [sp, #48]
   14198:	ldp	x25, x26, [sp, #64]
   1419c:	ldp	x29, x30, [sp], #288
   141a0:	ret
   141a4:	mov	x0, #0x1                   	// #1
   141a8:	bl	5670 <xmalloc@plt>
   141ac:	mov	x21, x0
   141b0:	add	x0, sp, #0x120
   141b4:	str	x0, [sp, #80]
   141b8:	str	x0, [sp, #88]
   141bc:	add	x0, sp, #0xf0
   141c0:	str	x0, [sp, #96]
   141c4:	mov	w0, #0xffffffd0            	// #-48
   141c8:	str	w0, [sp, #104]
   141cc:	mov	w0, #0xffffff80            	// #-128
   141d0:	str	w0, [sp, #108]
   141d4:	mov	x25, x21
   141d8:	b	1417c <reconcat@@Base+0x138>
   141dc:	add	x0, x22, #0x1
   141e0:	bl	5670 <xmalloc@plt>
   141e4:	mov	x25, x0
   141e8:	add	x0, sp, #0x120
   141ec:	str	x0, [sp, #80]
   141f0:	str	x0, [sp, #88]
   141f4:	add	x0, sp, #0xf0
   141f8:	str	x0, [sp, #96]
   141fc:	mov	w24, #0xffffffd0            	// #-48
   14200:	str	w24, [sp, #104]
   14204:	mov	w0, #0xffffff80            	// #-128
   14208:	str	w0, [sp, #108]
   1420c:	add	x22, sp, #0x120
   14210:	mov	x26, x22
   14214:	mov	x21, x25
   14218:	b	1413c <reconcat@@Base+0xf8>
   1421c:	cmp	x1, x0
   14220:	cset	w0, eq  // eq = none
   14224:	ret
   14228:	asr	x1, x0, #32
   1422c:	sub	w1, w1, w0
   14230:	mov	w2, #0xadcc                	// #44492
   14234:	movk	w2, #0xbdec, lsl #16
   14238:	add	w1, w1, w2
   1423c:	mov	w2, #0x109a                	// #4250
   14240:	movk	w2, #0x2, lsl #16
   14244:	eor	w1, w1, w2
   14248:	mov	w2, #0x2785                	// #10117
   1424c:	movk	w2, #0x5c24, lsl #16
   14250:	add	w0, w2, w0
   14254:	sub	w0, w0, w1
   14258:	eor	w0, w0, w1, lsl #8
   1425c:	mov	w3, #0x5234                	// #21044
   14260:	movk	w3, #0x4213, lsl #16
   14264:	sub	w3, w3, w1
   14268:	sub	w3, w3, w0
   1426c:	eor	w3, w3, w0, lsr #13
   14270:	sub	w1, w1, w0
   14274:	sub	w1, w1, w3
   14278:	eor	w1, w1, w3, lsr #12
   1427c:	sub	w0, w0, w3
   14280:	sub	w0, w0, w1
   14284:	eor	w0, w0, w1, lsl #16
   14288:	sub	w3, w3, w1
   1428c:	sub	w3, w3, w0
   14290:	eor	w3, w3, w0, lsr #5
   14294:	sub	w1, w1, w0
   14298:	sub	w1, w1, w3
   1429c:	eor	w1, w1, w3, lsr #3
   142a0:	sub	w2, w0, w3
   142a4:	sub	w2, w2, w1
   142a8:	eor	w2, w2, w1, lsl #10
   142ac:	sub	w1, w3, w1
   142b0:	sub	w0, w1, w2
   142b4:	eor	w0, w0, w2, lsr #15
   142b8:	ret
   142bc:	mov	x2, x0
   142c0:	mov	w3, #0x1e                  	// #30
   142c4:	mov	w0, #0x0                   	// #0
   142c8:	adrp	x5, 16000 <xexit@@Base+0xc24>
   142cc:	add	x5, x5, #0x200
   142d0:	cmp	w3, w0
   142d4:	b.eq	14300 <reconcat@@Base+0x2bc>  // b.none
   142d8:	sub	w1, w3, w0
   142dc:	add	w1, w0, w1, lsr #1
   142e0:	ubfiz	x4, x1, #4, #32
   142e4:	ldr	w4, [x5, x4]
   142e8:	cmp	x4, x2
   142ec:	b.cc	142f8 <reconcat@@Base+0x2b4>  // b.lo, b.ul, b.last
   142f0:	mov	w3, w1
   142f4:	b	142d0 <reconcat@@Base+0x28c>
   142f8:	add	w0, w1, #0x1
   142fc:	b	142d0 <reconcat@@Base+0x28c>
   14300:	ubfiz	x1, x0, #4, #32
   14304:	adrp	x3, 16000 <xexit@@Base+0xc24>
   14308:	add	x3, x3, #0x200
   1430c:	ldr	w1, [x3, x1]
   14310:	cmp	x1, x2
   14314:	b.cc	1431c <reconcat@@Base+0x2d8>  // b.lo, b.ul, b.last
   14318:	ret
   1431c:	stp	x29, x30, [sp, #-16]!
   14320:	mov	x29, sp
   14324:	adrp	x1, 16000 <xexit@@Base+0xc24>
   14328:	add	x1, x1, #0x1d8
   1432c:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
   14330:	ldr	x0, [x0, #3968]
   14334:	ldr	x0, [x0]
   14338:	bl	5370 <fprintf@plt>
   1433c:	bl	5740 <abort@plt>
   14340:	stp	x29, x30, [sp, #-64]!
   14344:	mov	x29, sp
   14348:	stp	x19, x20, [sp, #16]
   1434c:	stp	x21, x22, [sp, #32]
   14350:	stp	x23, x24, [sp, #48]
   14354:	mov	x19, x0
   14358:	ldr	x24, [x0, #24]
   1435c:	ldr	x20, [x0, #32]
   14360:	add	x23, x24, x20, lsl #3
   14364:	ldr	x1, [x0, #40]
   14368:	ldr	x0, [x0, #48]
   1436c:	sub	x1, x1, x0
   14370:	lsl	x0, x1, #1
   14374:	cmp	x20, x1, lsl #1
   14378:	b.cc	143e4 <reconcat@@Base+0x3a0>  // b.lo, b.ul, b.last
   1437c:	lsl	x1, x1, #3
   14380:	cmp	x1, #0x20
   14384:	mov	x2, #0x20                  	// #32
   14388:	csel	x1, x1, x2, cs  // cs = hs, nlast
   1438c:	cmp	x20, x1
   14390:	b.hi	143e4 <reconcat@@Base+0x3a0>  // b.pmore
   14394:	ldr	w21, [x19, #104]
   14398:	ldr	x3, [x19, #88]
   1439c:	cbz	x3, 14400 <reconcat@@Base+0x3bc>
   143a0:	mov	x2, #0x8                   	// #8
   143a4:	mov	x1, x20
   143a8:	ldr	x0, [x19, #80]
   143ac:	blr	x3
   143b0:	cbz	x0, 1452c <reconcat@@Base+0x4e8>
   143b4:	str	x0, [x19, #24]
   143b8:	str	x20, [x19, #32]
   143bc:	str	w21, [x19, #104]
   143c0:	ldr	x0, [x19, #40]
   143c4:	ldr	x1, [x19, #48]
   143c8:	sub	x0, x0, x1
   143cc:	str	x0, [x19, #40]
   143d0:	str	xzr, [x19, #48]
   143d4:	mov	x20, x24
   143d8:	adrp	x22, 16000 <xexit@@Base+0xc24>
   143dc:	add	x22, x22, #0x200
   143e0:	b	14428 <reconcat@@Base+0x3e4>
   143e4:	bl	142bc <reconcat@@Base+0x278>
   143e8:	mov	w21, w0
   143ec:	ubfiz	x1, x21, #4, #32
   143f0:	adrp	x0, 16000 <xexit@@Base+0xc24>
   143f4:	add	x0, x0, #0x200
   143f8:	ldr	w20, [x0, x1]
   143fc:	b	14398 <reconcat@@Base+0x354>
   14400:	ldr	x2, [x19, #64]
   14404:	mov	x1, #0x8                   	// #8
   14408:	mov	x0, x20
   1440c:	blr	x2
   14410:	b	143b0 <reconcat@@Base+0x36c>
   14414:	bl	5740 <abort@plt>
   14418:	str	x21, [x6]
   1441c:	add	x20, x20, #0x8
   14420:	cmp	x23, x20
   14424:	b.ls	144e4 <reconcat@@Base+0x4a0>  // b.plast
   14428:	ldr	x21, [x20]
   1442c:	cmp	x21, #0x1
   14430:	b.ls	1441c <reconcat@@Base+0x3d8>  // b.plast
   14434:	ldr	x1, [x19]
   14438:	mov	x0, x21
   1443c:	blr	x1
   14440:	ldr	w3, [x19, #104]
   14444:	ubfiz	x2, x3, #4, #32
   14448:	add	x1, x22, x2
   1444c:	ldr	w5, [x22, x2]
   14450:	ldr	w7, [x1, #12]
   14454:	mov	w8, w0
   14458:	ldr	w1, [x1, #4]
   1445c:	mul	x1, x1, x8
   14460:	lsr	x2, x1, #32
   14464:	sub	w1, w0, w2
   14468:	add	w1, w2, w1, lsr #1
   1446c:	lsr	w1, w1, w7
   14470:	msub	w1, w1, w5, w0
   14474:	ldr	x2, [x19, #24]
   14478:	add	x6, x2, w1, uxtw #3
   1447c:	ldr	x4, [x2, w1, uxtw #3]
   14480:	cbz	x4, 14418 <reconcat@@Base+0x3d4>
   14484:	cmp	x4, #0x1
   14488:	b.eq	14414 <reconcat@@Base+0x3d0>  // b.none
   1448c:	ldr	x4, [x19, #32]
   14490:	ubfiz	x3, x3, #4, #32
   14494:	add	x3, x22, x3
   14498:	ldr	w3, [x3, #8]
   1449c:	mul	x3, x3, x8
   144a0:	lsr	x3, x3, #32
   144a4:	add	w6, w0, #0x1
   144a8:	sub	w0, w0, w3
   144ac:	add	w0, w3, w0, lsr #1
   144b0:	lsr	w0, w0, w7
   144b4:	sub	w5, w5, #0x2
   144b8:	msub	w0, w0, w5, w6
   144bc:	add	w1, w1, w0
   144c0:	sub	w3, w1, w4
   144c4:	cmp	x4, w1, uxtw
   144c8:	csel	w1, w3, w1, ls  // ls = plast
   144cc:	add	x6, x2, w1, uxtw #3
   144d0:	ldr	x3, [x2, w1, uxtw #3]
   144d4:	cbz	x3, 14418 <reconcat@@Base+0x3d4>
   144d8:	cmp	x3, #0x1
   144dc:	b.ne	144bc <reconcat@@Base+0x478>  // b.any
   144e0:	bl	5740 <abort@plt>
   144e4:	ldr	x1, [x19, #72]
   144e8:	cbz	x1, 1450c <reconcat@@Base+0x4c8>
   144ec:	mov	x0, x24
   144f0:	blr	x1
   144f4:	mov	w0, #0x1                   	// #1
   144f8:	ldp	x19, x20, [sp, #16]
   144fc:	ldp	x21, x22, [sp, #32]
   14500:	ldp	x23, x24, [sp, #48]
   14504:	ldp	x29, x30, [sp], #64
   14508:	ret
   1450c:	ldr	x2, [x19, #96]
   14510:	mov	w0, #0x1                   	// #1
   14514:	cbz	x2, 144f8 <reconcat@@Base+0x4b4>
   14518:	mov	x1, x24
   1451c:	ldr	x0, [x19, #80]
   14520:	blr	x2
   14524:	mov	w0, #0x1                   	// #1
   14528:	b	144f8 <reconcat@@Base+0x4b4>
   1452c:	mov	w0, #0x0                   	// #0
   14530:	b	144f8 <reconcat@@Base+0x4b4>

0000000000014534 <htab_size@@Base>:
   14534:	ldr	x0, [x0, #32]
   14538:	ret

000000000001453c <htab_elements@@Base>:
   1453c:	ldr	x1, [x0, #40]
   14540:	ldr	x0, [x0, #48]
   14544:	sub	x0, x1, x0
   14548:	ret

000000000001454c <htab_create_alloc_ex@@Base>:
   1454c:	stp	x29, x30, [sp, #-96]!
   14550:	mov	x29, sp
   14554:	stp	x19, x20, [sp, #16]
   14558:	stp	x21, x22, [sp, #32]
   1455c:	stp	x23, x24, [sp, #48]
   14560:	stp	x25, x26, [sp, #64]
   14564:	stp	x27, x28, [sp, #80]
   14568:	mov	x27, x1
   1456c:	mov	x26, x2
   14570:	mov	x25, x3
   14574:	mov	x20, x4
   14578:	mov	x21, x5
   1457c:	mov	x24, x6
   14580:	bl	142bc <reconcat@@Base+0x278>
   14584:	mov	w22, w0
   14588:	ubfiz	x1, x22, #4, #32
   1458c:	adrp	x0, 16000 <xexit@@Base+0xc24>
   14590:	add	x0, x0, #0x200
   14594:	ldr	w28, [x0, x1]
   14598:	mov	x2, #0x70                  	// #112
   1459c:	mov	x1, #0x1                   	// #1
   145a0:	mov	x0, x20
   145a4:	blr	x21
   145a8:	mov	x19, x0
   145ac:	cbz	x0, 145ec <htab_create_alloc_ex@@Base+0xa0>
   145b0:	mov	x2, #0x8                   	// #8
   145b4:	mov	x1, x28
   145b8:	mov	x0, x20
   145bc:	blr	x21
   145c0:	mov	x23, x0
   145c4:	str	x0, [x19, #24]
   145c8:	cbz	x0, 1460c <htab_create_alloc_ex@@Base+0xc0>
   145cc:	str	x28, [x19, #32]
   145d0:	str	w22, [x19, #104]
   145d4:	str	x27, [x19]
   145d8:	str	x26, [x19, #8]
   145dc:	str	x25, [x19, #16]
   145e0:	str	x20, [x19, #80]
   145e4:	str	x21, [x19, #88]
   145e8:	str	x24, [x19, #96]
   145ec:	mov	x0, x19
   145f0:	ldp	x19, x20, [sp, #16]
   145f4:	ldp	x21, x22, [sp, #32]
   145f8:	ldp	x23, x24, [sp, #48]
   145fc:	ldp	x25, x26, [sp, #64]
   14600:	ldp	x27, x28, [sp, #80]
   14604:	ldp	x29, x30, [sp], #96
   14608:	ret
   1460c:	cbz	x24, 14624 <htab_create_alloc_ex@@Base+0xd8>
   14610:	mov	x1, x19
   14614:	mov	x0, x20
   14618:	blr	x24
   1461c:	mov	x19, x23
   14620:	b	145ec <htab_create_alloc_ex@@Base+0xa0>
   14624:	mov	x19, x0
   14628:	b	145ec <htab_create_alloc_ex@@Base+0xa0>

000000000001462c <htab_create_typed_alloc@@Base>:
   1462c:	stp	x29, x30, [sp, #-96]!
   14630:	mov	x29, sp
   14634:	stp	x19, x20, [sp, #16]
   14638:	stp	x21, x22, [sp, #32]
   1463c:	stp	x23, x24, [sp, #48]
   14640:	stp	x25, x26, [sp, #64]
   14644:	str	x27, [sp, #80]
   14648:	mov	x26, x1
   1464c:	mov	x25, x2
   14650:	mov	x24, x3
   14654:	mov	x19, x4
   14658:	mov	x21, x5
   1465c:	mov	x23, x6
   14660:	bl	142bc <reconcat@@Base+0x278>
   14664:	mov	w20, w0
   14668:	ubfiz	x1, x20, #4, #32
   1466c:	adrp	x0, 16000 <xexit@@Base+0xc24>
   14670:	add	x0, x0, #0x200
   14674:	ldr	w27, [x0, x1]
   14678:	mov	x1, #0x70                  	// #112
   1467c:	mov	x0, #0x1                   	// #1
   14680:	blr	x19
   14684:	mov	x19, x0
   14688:	cbz	x0, 146c0 <htab_create_typed_alloc@@Base+0x94>
   1468c:	mov	x1, #0x8                   	// #8
   14690:	mov	x0, x27
   14694:	blr	x21
   14698:	mov	x22, x0
   1469c:	str	x0, [x19, #24]
   146a0:	cbz	x0, 146e0 <htab_create_typed_alloc@@Base+0xb4>
   146a4:	str	x27, [x19, #32]
   146a8:	str	w20, [x19, #104]
   146ac:	str	x26, [x19]
   146b0:	str	x25, [x19, #8]
   146b4:	str	x24, [x19, #16]
   146b8:	str	x21, [x19, #64]
   146bc:	str	x23, [x19, #72]
   146c0:	mov	x0, x19
   146c4:	ldp	x19, x20, [sp, #16]
   146c8:	ldp	x21, x22, [sp, #32]
   146cc:	ldp	x23, x24, [sp, #48]
   146d0:	ldp	x25, x26, [sp, #64]
   146d4:	ldr	x27, [sp, #80]
   146d8:	ldp	x29, x30, [sp], #96
   146dc:	ret
   146e0:	cbz	x23, 146f4 <htab_create_typed_alloc@@Base+0xc8>
   146e4:	mov	x0, x19
   146e8:	blr	x23
   146ec:	mov	x19, x22
   146f0:	b	146c0 <htab_create_typed_alloc@@Base+0x94>
   146f4:	mov	x19, x0
   146f8:	b	146c0 <htab_create_typed_alloc@@Base+0x94>

00000000000146fc <htab_create_alloc@@Base>:
   146fc:	stp	x29, x30, [sp, #-16]!
   14700:	mov	x29, sp
   14704:	mov	x6, x5
   14708:	mov	x5, x4
   1470c:	bl	54b0 <htab_create_typed_alloc@plt>
   14710:	ldp	x29, x30, [sp], #16
   14714:	ret

0000000000014718 <htab_set_functions_ex@@Base>:
   14718:	str	x1, [x0]
   1471c:	str	x2, [x0, #8]
   14720:	str	x3, [x0, #16]
   14724:	str	x4, [x0, #80]
   14728:	str	x5, [x0, #88]
   1472c:	str	x6, [x0, #96]
   14730:	ret

0000000000014734 <htab_create@@Base>:
   14734:	stp	x29, x30, [sp, #-16]!
   14738:	mov	x29, sp
   1473c:	adrp	x5, 2a000 <xexit@@Base+0x14c24>
   14740:	ldr	x5, [x5, #3376]
   14744:	adrp	x4, 2a000 <xexit@@Base+0x14c24>
   14748:	ldr	x4, [x4, #3872]
   1474c:	bl	53d0 <htab_create_alloc@plt>
   14750:	ldp	x29, x30, [sp], #16
   14754:	ret

0000000000014758 <htab_try_create@@Base>:
   14758:	stp	x29, x30, [sp, #-16]!
   1475c:	mov	x29, sp
   14760:	adrp	x5, 2a000 <xexit@@Base+0x14c24>
   14764:	ldr	x5, [x5, #3376]
   14768:	adrp	x4, 2a000 <xexit@@Base+0x14c24>
   1476c:	ldr	x4, [x4, #3240]
   14770:	bl	53d0 <htab_create_alloc@plt>
   14774:	ldp	x29, x30, [sp], #16
   14778:	ret

000000000001477c <htab_delete@@Base>:
   1477c:	stp	x29, x30, [sp, #-48]!
   14780:	mov	x29, sp
   14784:	stp	x19, x20, [sp, #16]
   14788:	str	x21, [sp, #32]
   1478c:	mov	x20, x0
   14790:	ldr	x21, [x0, #24]
   14794:	ldr	x0, [x0, #16]
   14798:	cbz	x0, 147d0 <htab_delete@@Base+0x54>
   1479c:	ldr	x19, [x20, #32]
   147a0:	subs	w19, w19, #0x1
   147a4:	b.mi	147d0 <htab_delete@@Base+0x54>  // b.first
   147a8:	sxtw	x19, w19
   147ac:	b	147b8 <htab_delete@@Base+0x3c>
   147b0:	sub	x19, x19, #0x1
   147b4:	tbnz	w19, #31, 147d0 <htab_delete@@Base+0x54>
   147b8:	ldr	x0, [x21, x19, lsl #3]
   147bc:	cmp	x0, #0x1
   147c0:	b.ls	147b0 <htab_delete@@Base+0x34>  // b.plast
   147c4:	ldr	x1, [x20, #16]
   147c8:	blr	x1
   147cc:	b	147b0 <htab_delete@@Base+0x34>
   147d0:	ldr	x1, [x20, #72]
   147d4:	cbz	x1, 147fc <htab_delete@@Base+0x80>
   147d8:	mov	x0, x21
   147dc:	blr	x1
   147e0:	ldr	x1, [x20, #72]
   147e4:	mov	x0, x20
   147e8:	blr	x1
   147ec:	ldp	x19, x20, [sp, #16]
   147f0:	ldr	x21, [sp, #32]
   147f4:	ldp	x29, x30, [sp], #48
   147f8:	ret
   147fc:	ldr	x2, [x20, #96]
   14800:	cbz	x2, 147ec <htab_delete@@Base+0x70>
   14804:	mov	x1, x21
   14808:	ldr	x0, [x20, #80]
   1480c:	blr	x2
   14810:	ldr	x2, [x20, #96]
   14814:	mov	x1, x20
   14818:	ldr	x0, [x20, #80]
   1481c:	blr	x2
   14820:	b	147ec <htab_delete@@Base+0x70>

0000000000014824 <htab_empty@@Base>:
   14824:	stp	x29, x30, [sp, #-48]!
   14828:	mov	x29, sp
   1482c:	stp	x19, x20, [sp, #16]
   14830:	stp	x21, x22, [sp, #32]
   14834:	mov	x20, x0
   14838:	ldr	x22, [x0, #32]
   1483c:	ldr	x21, [x0, #24]
   14840:	ldr	x0, [x0, #16]
   14844:	cbz	x0, 14878 <htab_empty@@Base+0x54>
   14848:	subs	w19, w22, #0x1
   1484c:	b.mi	14878 <htab_empty@@Base+0x54>  // b.first
   14850:	sxtw	x19, w19
   14854:	b	14860 <htab_empty@@Base+0x3c>
   14858:	sub	x19, x19, #0x1
   1485c:	tbnz	w19, #31, 14878 <htab_empty@@Base+0x54>
   14860:	ldr	x0, [x21, x19, lsl #3]
   14864:	cmp	x0, #0x1
   14868:	b.ls	14858 <htab_empty@@Base+0x34>  // b.plast
   1486c:	ldr	x1, [x20, #16]
   14870:	blr	x1
   14874:	b	14858 <htab_empty@@Base+0x34>
   14878:	cmp	x22, #0x20, lsl #12
   1487c:	b.ls	1491c <htab_empty@@Base+0xf8>  // b.plast
   14880:	mov	x0, #0x80                  	// #128
   14884:	bl	142bc <reconcat@@Base+0x278>
   14888:	mov	w19, w0
   1488c:	sbfiz	x1, x0, #4, #32
   14890:	adrp	x0, 16000 <xexit@@Base+0xc24>
   14894:	add	x0, x0, #0x200
   14898:	ldr	w21, [x0, x1]
   1489c:	ldr	x1, [x20, #72]
   148a0:	cbz	x1, 148ec <htab_empty@@Base+0xc8>
   148a4:	ldr	x0, [x20, #24]
   148a8:	blr	x1
   148ac:	ldr	x3, [x20, #88]
   148b0:	cbz	x3, 14904 <htab_empty@@Base+0xe0>
   148b4:	mov	x2, #0x8                   	// #8
   148b8:	sxtw	x1, w21
   148bc:	ldr	x0, [x20, #80]
   148c0:	blr	x3
   148c4:	str	x0, [x20, #24]
   148c8:	sxtw	x21, w21
   148cc:	str	x21, [x20, #32]
   148d0:	str	w19, [x20, #104]
   148d4:	str	xzr, [x20, #48]
   148d8:	str	xzr, [x20, #40]
   148dc:	ldp	x19, x20, [sp, #16]
   148e0:	ldp	x21, x22, [sp, #32]
   148e4:	ldp	x29, x30, [sp], #48
   148e8:	ret
   148ec:	ldr	x2, [x20, #96]
   148f0:	cbz	x2, 148ac <htab_empty@@Base+0x88>
   148f4:	ldr	x1, [x20, #24]
   148f8:	ldr	x0, [x20, #80]
   148fc:	blr	x2
   14900:	b	148ac <htab_empty@@Base+0x88>
   14904:	ldr	x2, [x20, #64]
   14908:	mov	x1, #0x8                   	// #8
   1490c:	sxtw	x0, w21
   14910:	blr	x2
   14914:	str	x0, [x20, #24]
   14918:	b	148c8 <htab_empty@@Base+0xa4>
   1491c:	lsl	x2, x22, #3
   14920:	mov	w1, #0x0                   	// #0
   14924:	mov	x0, x21
   14928:	bl	5450 <memset@plt>
   1492c:	b	148d4 <htab_empty@@Base+0xb0>

0000000000014930 <htab_find_with_hash@@Base>:
   14930:	stp	x29, x30, [sp, #-80]!
   14934:	mov	x29, sp
   14938:	stp	x19, x20, [sp, #16]
   1493c:	stp	x21, x22, [sp, #32]
   14940:	stp	x23, x24, [sp, #48]
   14944:	str	x25, [sp, #64]
   14948:	mov	x20, x0
   1494c:	mov	x24, x1
   14950:	mov	w22, w2
   14954:	ldr	w0, [x0, #56]
   14958:	add	w0, w0, #0x1
   1495c:	str	w0, [x20, #56]
   14960:	mov	w25, w2
   14964:	adrp	x2, 16000 <xexit@@Base+0xc24>
   14968:	add	x2, x2, #0x200
   1496c:	ldr	w1, [x20, #104]
   14970:	lsl	x1, x1, #4
   14974:	add	x3, x2, x1
   14978:	ldr	w0, [x3, #4]
   1497c:	mul	x0, x0, x25
   14980:	lsr	x0, x0, #32
   14984:	sub	w19, w22, w0
   14988:	add	w19, w0, w19, lsr #1
   1498c:	ldr	w0, [x3, #12]
   14990:	lsr	w19, w19, w0
   14994:	ldr	w0, [x2, x1]
   14998:	msub	w19, w19, w0, w22
   1499c:	ldr	x0, [x20, #24]
   149a0:	ldr	x21, [x0, w19, uxtw #3]
   149a4:	cbz	x21, 14a4c <htab_find_with_hash@@Base+0x11c>
   149a8:	ldr	x23, [x20, #32]
   149ac:	cmp	x21, #0x1
   149b0:	b.eq	149c8 <htab_find_with_hash@@Base+0x98>  // b.none
   149b4:	ldr	x2, [x20, #8]
   149b8:	mov	x1, x24
   149bc:	mov	x0, x21
   149c0:	blr	x2
   149c4:	cbnz	w0, 14a4c <htab_find_with_hash@@Base+0x11c>
   149c8:	adrp	x2, 16000 <xexit@@Base+0xc24>
   149cc:	add	x2, x2, #0x200
   149d0:	ldr	w1, [x20, #104]
   149d4:	lsl	x1, x1, #4
   149d8:	add	x3, x2, x1
   149dc:	ldr	w0, [x3, #8]
   149e0:	mul	x25, x0, x25
   149e4:	lsr	x25, x25, #32
   149e8:	add	w4, w22, #0x1
   149ec:	sub	w22, w22, w25
   149f0:	add	w22, w25, w22, lsr #1
   149f4:	ldr	w0, [x3, #12]
   149f8:	lsr	w22, w22, w0
   149fc:	ldr	w0, [x2, x1]
   14a00:	sub	w0, w0, #0x2
   14a04:	msub	w22, w22, w0, w4
   14a08:	ldr	w0, [x20, #60]
   14a0c:	add	w0, w0, #0x1
   14a10:	str	w0, [x20, #60]
   14a14:	add	w19, w19, w22
   14a18:	sub	w0, w19, w23
   14a1c:	cmp	x23, w19, uxtw
   14a20:	csel	w19, w0, w19, ls  // ls = plast
   14a24:	ldr	x0, [x20, #24]
   14a28:	ldr	x21, [x0, w19, uxtw #3]
   14a2c:	cbz	x21, 14a4c <htab_find_with_hash@@Base+0x11c>
   14a30:	cmp	x21, #0x1
   14a34:	b.eq	14a08 <htab_find_with_hash@@Base+0xd8>  // b.none
   14a38:	ldr	x2, [x20, #8]
   14a3c:	mov	x1, x24
   14a40:	mov	x0, x21
   14a44:	blr	x2
   14a48:	cbz	w0, 14a08 <htab_find_with_hash@@Base+0xd8>
   14a4c:	mov	x0, x21
   14a50:	ldp	x19, x20, [sp, #16]
   14a54:	ldp	x21, x22, [sp, #32]
   14a58:	ldp	x23, x24, [sp, #48]
   14a5c:	ldr	x25, [sp, #64]
   14a60:	ldp	x29, x30, [sp], #80
   14a64:	ret

0000000000014a68 <htab_find@@Base>:
   14a68:	stp	x29, x30, [sp, #-32]!
   14a6c:	mov	x29, sp
   14a70:	stp	x19, x20, [sp, #16]
   14a74:	mov	x19, x0
   14a78:	mov	x20, x1
   14a7c:	ldr	x1, [x0]
   14a80:	mov	x0, x20
   14a84:	blr	x1
   14a88:	mov	w2, w0
   14a8c:	mov	x1, x20
   14a90:	mov	x0, x19
   14a94:	bl	5790 <htab_find_with_hash@plt>
   14a98:	ldp	x19, x20, [sp, #16]
   14a9c:	ldp	x29, x30, [sp], #32
   14aa0:	ret

0000000000014aa4 <htab_find_slot_with_hash@@Base>:
   14aa4:	stp	x29, x30, [sp, #-96]!
   14aa8:	mov	x29, sp
   14aac:	stp	x19, x20, [sp, #16]
   14ab0:	stp	x21, x22, [sp, #32]
   14ab4:	stp	x23, x24, [sp, #48]
   14ab8:	stp	x25, x26, [sp, #64]
   14abc:	mov	x20, x0
   14ac0:	mov	x24, x1
   14ac4:	mov	w26, w2
   14ac8:	mov	w25, w3
   14acc:	ldr	x22, [x0, #32]
   14ad0:	cmp	w3, #0x1
   14ad4:	b.eq	14b98 <htab_find_slot_with_hash@@Base+0xf4>  // b.none
   14ad8:	str	x27, [sp, #80]
   14adc:	mov	w21, w26
   14ae0:	adrp	x2, 16000 <xexit@@Base+0xc24>
   14ae4:	add	x2, x2, #0x200
   14ae8:	ldr	w1, [x20, #104]
   14aec:	lsl	x1, x1, #4
   14af0:	add	x3, x2, x1
   14af4:	ldr	w0, [x3, #4]
   14af8:	mul	x0, x0, x21
   14afc:	lsr	x0, x0, #32
   14b00:	sub	w19, w26, w0
   14b04:	add	w19, w0, w19, lsr #1
   14b08:	ldr	w0, [x3, #12]
   14b0c:	lsr	w19, w19, w0
   14b10:	ldr	w0, [x2, x1]
   14b14:	msub	w19, w19, w0, w26
   14b18:	ldr	w0, [x20, #56]
   14b1c:	add	w0, w0, #0x1
   14b20:	str	w0, [x20, #56]
   14b24:	ubfiz	x27, x19, #3, #32
   14b28:	ldr	x0, [x20, #24]
   14b2c:	add	x23, x0, x27
   14b30:	ldr	x0, [x0, w19, uxtw #3]
   14b34:	cbz	x0, 14c90 <htab_find_slot_with_hash@@Base+0x1ec>
   14b38:	cmp	x0, #0x1
   14b3c:	b.eq	14b54 <htab_find_slot_with_hash@@Base+0xb0>  // b.none
   14b40:	ldr	x2, [x20, #8]
   14b44:	mov	x1, x24
   14b48:	blr	x2
   14b4c:	mov	x23, #0x0                   	// #0
   14b50:	cbnz	w0, 14bc8 <htab_find_slot_with_hash@@Base+0x124>
   14b54:	adrp	x2, 16000 <xexit@@Base+0xc24>
   14b58:	add	x2, x2, #0x200
   14b5c:	ldr	w1, [x20, #104]
   14b60:	lsl	x1, x1, #4
   14b64:	add	x3, x2, x1
   14b68:	ldr	w0, [x3, #8]
   14b6c:	mul	x21, x0, x21
   14b70:	lsr	x0, x21, #32
   14b74:	add	w4, w26, #0x1
   14b78:	sub	w21, w26, w0
   14b7c:	add	w21, w0, w21, lsr #1
   14b80:	ldr	w0, [x3, #12]
   14b84:	lsr	w21, w21, w0
   14b88:	ldr	w0, [x2, x1]
   14b8c:	sub	w0, w0, #0x2
   14b90:	msub	w21, w21, w0, w4
   14b94:	b	14be0 <htab_find_slot_with_hash@@Base+0x13c>
   14b98:	add	x0, x22, x22, lsl #1
   14b9c:	ldr	x1, [x20, #40]
   14ba0:	cmp	x0, x1, lsl #2
   14ba4:	b.ls	14bb0 <htab_find_slot_with_hash@@Base+0x10c>  // b.plast
   14ba8:	str	x27, [sp, #80]
   14bac:	b	14adc <htab_find_slot_with_hash@@Base+0x38>
   14bb0:	mov	x0, x20
   14bb4:	bl	14340 <reconcat@@Base+0x2fc>
   14bb8:	cbz	w0, 14c70 <htab_find_slot_with_hash@@Base+0x1cc>
   14bbc:	str	x27, [sp, #80]
   14bc0:	ldr	x22, [x20, #32]
   14bc4:	b	14adc <htab_find_slot_with_hash@@Base+0x38>
   14bc8:	ldr	x23, [x20, #24]
   14bcc:	add	x23, x23, x27
   14bd0:	ldr	x27, [sp, #80]
   14bd4:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>
   14bd8:	cmp	x23, #0x0
   14bdc:	csel	x23, x23, x1, ne  // ne = any
   14be0:	ldr	w0, [x20, #60]
   14be4:	add	w0, w0, #0x1
   14be8:	str	w0, [x20, #60]
   14bec:	add	w19, w19, w21
   14bf0:	sub	w0, w19, w22
   14bf4:	cmp	x22, w19, uxtw
   14bf8:	csel	w19, w0, w19, ls  // ls = plast
   14bfc:	ubfiz	x26, x19, #3, #32
   14c00:	ldr	x0, [x20, #24]
   14c04:	add	x1, x0, x26
   14c08:	ldr	x0, [x0, w19, uxtw #3]
   14c0c:	cbz	x0, 14c38 <htab_find_slot_with_hash@@Base+0x194>
   14c10:	cmp	x0, #0x1
   14c14:	b.eq	14bd8 <htab_find_slot_with_hash@@Base+0x134>  // b.none
   14c18:	ldr	x2, [x20, #8]
   14c1c:	mov	x1, x24
   14c20:	blr	x2
   14c24:	cbz	w0, 14be0 <htab_find_slot_with_hash@@Base+0x13c>
   14c28:	ldr	x23, [x20, #24]
   14c2c:	add	x23, x23, x26
   14c30:	ldr	x27, [sp, #80]
   14c34:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>
   14c38:	cbz	w25, 14c78 <htab_find_slot_with_hash@@Base+0x1d4>
   14c3c:	cbz	x23, 14c94 <htab_find_slot_with_hash@@Base+0x1f0>
   14c40:	ldr	x0, [x20, #48]
   14c44:	sub	x0, x0, #0x1
   14c48:	str	x0, [x20, #48]
   14c4c:	str	xzr, [x23]
   14c50:	ldr	x27, [sp, #80]
   14c54:	mov	x0, x23
   14c58:	ldp	x19, x20, [sp, #16]
   14c5c:	ldp	x21, x22, [sp, #32]
   14c60:	ldp	x23, x24, [sp, #48]
   14c64:	ldp	x25, x26, [sp, #64]
   14c68:	ldp	x29, x30, [sp], #96
   14c6c:	ret
   14c70:	mov	x23, #0x0                   	// #0
   14c74:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>
   14c78:	mov	x23, x0
   14c7c:	ldr	x27, [sp, #80]
   14c80:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>
   14c84:	mov	x23, x0
   14c88:	ldr	x27, [sp, #80]
   14c8c:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>
   14c90:	cbz	w25, 14c84 <htab_find_slot_with_hash@@Base+0x1e0>
   14c94:	ldr	x0, [x20, #40]
   14c98:	add	x0, x0, #0x1
   14c9c:	str	x0, [x20, #40]
   14ca0:	ldr	x23, [x20, #24]
   14ca4:	add	x23, x23, w19, uxtw #3
   14ca8:	ldr	x27, [sp, #80]
   14cac:	b	14c54 <htab_find_slot_with_hash@@Base+0x1b0>

0000000000014cb0 <htab_find_slot@@Base>:
   14cb0:	stp	x29, x30, [sp, #-48]!
   14cb4:	mov	x29, sp
   14cb8:	stp	x19, x20, [sp, #16]
   14cbc:	str	x21, [sp, #32]
   14cc0:	mov	x19, x0
   14cc4:	mov	x20, x1
   14cc8:	mov	w21, w2
   14ccc:	ldr	x1, [x0]
   14cd0:	mov	x0, x20
   14cd4:	blr	x1
   14cd8:	mov	w3, w21
   14cdc:	mov	w2, w0
   14ce0:	mov	x1, x20
   14ce4:	mov	x0, x19
   14ce8:	bl	54a0 <htab_find_slot_with_hash@plt>
   14cec:	ldp	x19, x20, [sp, #16]
   14cf0:	ldr	x21, [sp, #32]
   14cf4:	ldp	x29, x30, [sp], #48
   14cf8:	ret

0000000000014cfc <htab_remove_elt_with_hash@@Base>:
   14cfc:	stp	x29, x30, [sp, #-32]!
   14d00:	mov	x29, sp
   14d04:	stp	x19, x20, [sp, #16]
   14d08:	mov	x19, x0
   14d0c:	mov	w3, #0x0                   	// #0
   14d10:	bl	54a0 <htab_find_slot_with_hash@plt>
   14d14:	cbz	x0, 14d40 <htab_remove_elt_with_hash@@Base+0x44>
   14d18:	mov	x20, x0
   14d1c:	ldr	x1, [x19, #16]
   14d20:	cbz	x1, 14d2c <htab_remove_elt_with_hash@@Base+0x30>
   14d24:	ldr	x0, [x0]
   14d28:	blr	x1
   14d2c:	mov	x0, #0x1                   	// #1
   14d30:	str	x0, [x20]
   14d34:	ldr	x0, [x19, #48]
   14d38:	add	x0, x0, #0x1
   14d3c:	str	x0, [x19, #48]
   14d40:	ldp	x19, x20, [sp, #16]
   14d44:	ldp	x29, x30, [sp], #32
   14d48:	ret

0000000000014d4c <htab_remove_elt@@Base>:
   14d4c:	stp	x29, x30, [sp, #-32]!
   14d50:	mov	x29, sp
   14d54:	stp	x19, x20, [sp, #16]
   14d58:	mov	x19, x0
   14d5c:	mov	x20, x1
   14d60:	ldr	x1, [x0]
   14d64:	mov	x0, x20
   14d68:	blr	x1
   14d6c:	mov	w2, w0
   14d70:	mov	x1, x20
   14d74:	mov	x0, x19
   14d78:	bl	55f0 <htab_remove_elt_with_hash@plt>
   14d7c:	ldp	x19, x20, [sp, #16]
   14d80:	ldp	x29, x30, [sp], #32
   14d84:	ret

0000000000014d88 <htab_clear_slot@@Base>:
   14d88:	stp	x29, x30, [sp, #-32]!
   14d8c:	mov	x29, sp
   14d90:	stp	x19, x20, [sp, #16]
   14d94:	mov	x20, x1
   14d98:	ldr	x1, [x0, #24]
   14d9c:	cmp	x1, x20
   14da0:	b.hi	14df0 <htab_clear_slot@@Base+0x68>  // b.pmore
   14da4:	mov	x19, x0
   14da8:	ldr	x0, [x0, #32]
   14dac:	add	x0, x1, x0, lsl #3
   14db0:	cmp	x20, x0
   14db4:	b.cs	14df0 <htab_clear_slot@@Base+0x68>  // b.hs, b.nlast
   14db8:	ldr	x0, [x20]
   14dbc:	cmp	x0, #0x1
   14dc0:	b.ls	14df0 <htab_clear_slot@@Base+0x68>  // b.plast
   14dc4:	ldr	x1, [x19, #16]
   14dc8:	cbz	x1, 14dd0 <htab_clear_slot@@Base+0x48>
   14dcc:	blr	x1
   14dd0:	mov	x0, #0x1                   	// #1
   14dd4:	str	x0, [x20]
   14dd8:	ldr	x0, [x19, #48]
   14ddc:	add	x0, x0, #0x1
   14de0:	str	x0, [x19, #48]
   14de4:	ldp	x19, x20, [sp, #16]
   14de8:	ldp	x29, x30, [sp], #32
   14dec:	ret
   14df0:	bl	5740 <abort@plt>

0000000000014df4 <htab_traverse_noresize@@Base>:
   14df4:	stp	x29, x30, [sp, #-48]!
   14df8:	mov	x29, sp
   14dfc:	stp	x19, x20, [sp, #16]
   14e00:	stp	x21, x22, [sp, #32]
   14e04:	mov	x22, x1
   14e08:	mov	x21, x2
   14e0c:	ldr	x19, [x0, #24]
   14e10:	ldr	x20, [x0, #32]
   14e14:	add	x20, x19, x20, lsl #3
   14e18:	b	14e28 <htab_traverse_noresize@@Base+0x34>
   14e1c:	add	x19, x19, #0x8
   14e20:	cmp	x20, x19
   14e24:	b.ls	14e44 <htab_traverse_noresize@@Base+0x50>  // b.plast
   14e28:	ldr	x0, [x19]
   14e2c:	cmp	x0, #0x1
   14e30:	b.ls	14e1c <htab_traverse_noresize@@Base+0x28>  // b.plast
   14e34:	mov	x1, x21
   14e38:	mov	x0, x19
   14e3c:	blr	x22
   14e40:	cbnz	w0, 14e1c <htab_traverse_noresize@@Base+0x28>
   14e44:	ldp	x19, x20, [sp, #16]
   14e48:	ldp	x21, x22, [sp, #32]
   14e4c:	ldp	x29, x30, [sp], #48
   14e50:	ret

0000000000014e54 <htab_traverse@@Base>:
   14e54:	stp	x29, x30, [sp, #-48]!
   14e58:	mov	x29, sp
   14e5c:	stp	x19, x20, [sp, #16]
   14e60:	str	x21, [sp, #32]
   14e64:	mov	x19, x0
   14e68:	mov	x20, x1
   14e6c:	mov	x21, x2
   14e70:	ldr	x3, [x0, #40]
   14e74:	ldr	x0, [x0, #48]
   14e78:	sub	x3, x3, x0
   14e7c:	lsl	x3, x3, #3
   14e80:	cmp	x3, #0x20
   14e84:	mov	x0, #0x20                  	// #32
   14e88:	csel	x3, x3, x0, cs  // cs = hs, nlast
   14e8c:	ldr	x0, [x19, #32]
   14e90:	cmp	x0, x3
   14e94:	b.hi	14eb8 <htab_traverse@@Base+0x64>  // b.pmore
   14e98:	mov	x2, x21
   14e9c:	mov	x1, x20
   14ea0:	mov	x0, x19
   14ea4:	bl	5660 <htab_traverse_noresize@plt>
   14ea8:	ldp	x19, x20, [sp, #16]
   14eac:	ldr	x21, [sp, #32]
   14eb0:	ldp	x29, x30, [sp], #48
   14eb4:	ret
   14eb8:	mov	x0, x19
   14ebc:	bl	14340 <reconcat@@Base+0x2fc>
   14ec0:	b	14e98 <htab_traverse@@Base+0x44>

0000000000014ec4 <htab_collisions@@Base>:
   14ec4:	ldr	w1, [x0, #56]
   14ec8:	movi	d0, #0x0
   14ecc:	cbz	w1, 14ee0 <htab_collisions@@Base+0x1c>
   14ed0:	ldr	w0, [x0, #60]
   14ed4:	ucvtf	d0, w0
   14ed8:	ucvtf	d1, w1
   14edc:	fdiv	d0, d0, d1
   14ee0:	ret

0000000000014ee4 <htab_hash_string@@Base>:
   14ee4:	mov	x2, x0
   14ee8:	ldrb	w1, [x2], #1
   14eec:	cbz	w1, 14f0c <htab_hash_string@@Base+0x28>
   14ef0:	mov	w0, #0x0                   	// #0
   14ef4:	mov	w3, #0x43                  	// #67
   14ef8:	madd	w0, w0, w3, w1
   14efc:	sub	w0, w0, #0x71
   14f00:	ldrb	w1, [x2], #1
   14f04:	cbnz	w1, 14ef8 <htab_hash_string@@Base+0x14>
   14f08:	ret
   14f0c:	mov	w0, #0x0                   	// #0
   14f10:	b	14f08 <htab_hash_string@@Base+0x24>

0000000000014f14 <iterative_hash@@Base>:
   14f14:	tst	x0, #0x3
   14f18:	b.eq	15030 <iterative_hash@@Base+0x11c>  // b.none
   14f1c:	cmp	w1, #0xb
   14f20:	b.ls	1501c <iterative_hash@@Base+0x108>  // b.plast
   14f24:	mov	w5, w1
   14f28:	mov	w8, #0x79b9                	// #31161
   14f2c:	movk	w8, #0x9e37, lsl #16
   14f30:	mov	w7, w8
   14f34:	ldrb	w4, [x0, #5]
   14f38:	ldrb	w3, [x0, #6]
   14f3c:	lsl	w3, w3, #16
   14f40:	add	w4, w3, w4, lsl #8
   14f44:	ldrb	w3, [x0, #7]
   14f48:	ldrb	w6, [x0, #4]
   14f4c:	add	w3, w6, w3, lsl #24
   14f50:	add	w4, w4, w3
   14f54:	add	w4, w4, w8
   14f58:	ldrb	w3, [x0, #9]
   14f5c:	ldrb	w6, [x0, #10]
   14f60:	lsl	w6, w6, #16
   14f64:	add	w3, w6, w3, lsl #8
   14f68:	ldrb	w6, [x0, #11]
   14f6c:	ldrb	w8, [x0, #8]
   14f70:	add	w6, w8, w6, lsl #24
   14f74:	add	w3, w3, w6
   14f78:	add	w2, w3, w2
   14f7c:	ldrb	w6, [x0, #1]
   14f80:	ldrb	w3, [x0, #2]
   14f84:	lsl	w3, w3, #16
   14f88:	add	w6, w3, w6, lsl #8
   14f8c:	ldrb	w3, [x0, #3]
   14f90:	ldrb	w8, [x0], #12
   14f94:	add	w3, w8, w3, lsl #24
   14f98:	add	w6, w6, w3
   14f9c:	add	w3, w4, w2
   14fa0:	sub	w6, w6, w3
   14fa4:	add	w6, w6, w7
   14fa8:	eor	w6, w6, w2, lsr #13
   14fac:	sub	w4, w4, w2
   14fb0:	sub	w4, w4, w6
   14fb4:	eor	w4, w4, w6, lsl #8
   14fb8:	sub	w2, w2, w6
   14fbc:	sub	w3, w2, w4
   14fc0:	eor	w3, w3, w4, lsr #13
   14fc4:	sub	w2, w6, w4
   14fc8:	sub	w2, w2, w3
   14fcc:	eor	w2, w2, w3, lsr #12
   14fd0:	sub	w4, w4, w3
   14fd4:	sub	w4, w4, w2
   14fd8:	eor	w4, w4, w2, lsl #16
   14fdc:	sub	w3, w3, w2
   14fe0:	sub	w3, w3, w4
   14fe4:	eor	w3, w3, w4, lsr #5
   14fe8:	sub	w2, w2, w4
   14fec:	sub	w2, w2, w3
   14ff0:	eor	w7, w2, w3, lsr #3
   14ff4:	sub	w4, w4, w3
   14ff8:	sub	w4, w4, w7
   14ffc:	eor	w8, w4, w7, lsl #10
   15000:	sub	w2, w3, w7
   15004:	sub	w2, w2, w8
   15008:	eor	w2, w2, w8, lsr #15
   1500c:	sub	w5, w5, #0xc
   15010:	cmp	w5, #0xb
   15014:	b.hi	14f34 <iterative_hash@@Base+0x20>  // b.pmore
   15018:	b	150dc <iterative_hash@@Base+0x1c8>
   1501c:	mov	w5, w1
   15020:	mov	w8, #0x79b9                	// #31161
   15024:	movk	w8, #0x9e37, lsl #16
   15028:	mov	w7, w8
   1502c:	b	150dc <iterative_hash@@Base+0x1c8>
   15030:	cmp	w1, #0xb
   15034:	b.ls	15124 <iterative_hash@@Base+0x210>  // b.plast
   15038:	mov	w5, w1
   1503c:	mov	w8, #0x79b9                	// #31161
   15040:	movk	w8, #0x9e37, lsl #16
   15044:	mov	w7, w8
   15048:	ldr	w6, [x0]
   1504c:	add	w6, w7, w6
   15050:	ldr	w4, [x0, #4]
   15054:	add	w4, w8, w4
   15058:	ldr	w3, [x0, #8]
   1505c:	add	w2, w2, w3
   15060:	add	w3, w4, w2
   15064:	sub	w6, w6, w3
   15068:	eor	w6, w6, w2, lsr #13
   1506c:	sub	w4, w4, w2
   15070:	sub	w4, w4, w6
   15074:	eor	w4, w4, w6, lsl #8
   15078:	sub	w2, w2, w6
   1507c:	sub	w2, w2, w4
   15080:	eor	w2, w2, w4, lsr #13
   15084:	sub	w6, w6, w4
   15088:	sub	w6, w6, w2
   1508c:	eor	w6, w6, w2, lsr #12
   15090:	sub	w4, w4, w2
   15094:	sub	w4, w4, w6
   15098:	eor	w4, w4, w6, lsl #16
   1509c:	sub	w2, w2, w6
   150a0:	sub	w2, w2, w4
   150a4:	eor	w2, w2, w4, lsr #5
   150a8:	sub	w6, w6, w4
   150ac:	sub	w6, w6, w2
   150b0:	eor	w7, w6, w2, lsr #3
   150b4:	sub	w4, w4, w2
   150b8:	sub	w4, w4, w7
   150bc:	eor	w8, w4, w7, lsl #10
   150c0:	sub	w2, w2, w7
   150c4:	sub	w2, w2, w8
   150c8:	eor	w2, w2, w8, lsr #15
   150cc:	add	x0, x0, #0xc
   150d0:	sub	w5, w5, #0xc
   150d4:	cmp	w5, #0xb
   150d8:	b.hi	15048 <iterative_hash@@Base+0x134>  // b.pmore
   150dc:	add	w2, w2, w1
   150e0:	cmp	w5, #0x6
   150e4:	b.eq	15218 <iterative_hash@@Base+0x304>  // b.none
   150e8:	b.ls	15138 <iterative_hash@@Base+0x224>  // b.plast
   150ec:	cmp	w5, #0x9
   150f0:	b.eq	15118 <iterative_hash@@Base+0x204>  // b.none
   150f4:	b.ls	151f8 <iterative_hash@@Base+0x2e4>  // b.plast
   150f8:	cmp	w5, #0xa
   150fc:	b.eq	15110 <iterative_hash@@Base+0x1fc>  // b.none
   15100:	cmp	w5, #0xb
   15104:	b.ne	15188 <iterative_hash@@Base+0x274>  // b.any
   15108:	ldrb	w1, [x0, #10]
   1510c:	add	w2, w2, w1, lsl #24
   15110:	ldrb	w1, [x0, #9]
   15114:	add	w2, w2, w1, lsl #16
   15118:	ldrb	w1, [x0, #8]
   1511c:	add	w2, w2, w1, lsl #8
   15120:	b	15208 <iterative_hash@@Base+0x2f4>
   15124:	mov	w5, w1
   15128:	mov	w8, #0x79b9                	// #31161
   1512c:	movk	w8, #0x9e37, lsl #16
   15130:	mov	w7, w8
   15134:	b	150dc <iterative_hash@@Base+0x1c8>
   15138:	cmp	w5, #0x3
   1513c:	b.eq	1515c <iterative_hash@@Base+0x248>  // b.none
   15140:	b.ls	15168 <iterative_hash@@Base+0x254>  // b.plast
   15144:	cmp	w5, #0x4
   15148:	b.eq	15154 <iterative_hash@@Base+0x240>  // b.none
   1514c:	ldrb	w1, [x0, #4]
   15150:	add	w8, w8, w1
   15154:	ldrb	w1, [x0, #3]
   15158:	add	w7, w7, w1, lsl #24
   1515c:	ldrb	w1, [x0, #2]
   15160:	add	w7, w7, w1, lsl #16
   15164:	b	15178 <iterative_hash@@Base+0x264>
   15168:	cmp	w5, #0x1
   1516c:	b.eq	15180 <iterative_hash@@Base+0x26c>  // b.none
   15170:	cmp	w5, #0x2
   15174:	b.ne	15188 <iterative_hash@@Base+0x274>  // b.any
   15178:	ldrb	w1, [x0, #1]
   1517c:	add	w7, w7, w1, lsl #8
   15180:	ldrb	w0, [x0]
   15184:	add	w7, w7, w0
   15188:	add	w6, w8, w2
   1518c:	sub	w6, w7, w6
   15190:	eor	w6, w6, w2, lsr #13
   15194:	sub	w4, w8, w2
   15198:	sub	w3, w4, w6
   1519c:	eor	w3, w3, w6, lsl #8
   151a0:	sub	w2, w2, w6
   151a4:	sub	w2, w2, w3
   151a8:	eor	w2, w2, w3, lsr #13
   151ac:	sub	w0, w6, w3
   151b0:	sub	w0, w0, w2
   151b4:	eor	w0, w0, w2, lsr #12
   151b8:	sub	w3, w3, w2
   151bc:	sub	w3, w3, w0
   151c0:	eor	w3, w3, w0, lsl #16
   151c4:	sub	w1, w2, w0
   151c8:	sub	w1, w1, w3
   151cc:	eor	w1, w1, w3, lsr #5
   151d0:	sub	w2, w0, w3
   151d4:	sub	w2, w2, w1
   151d8:	eor	w2, w2, w1, lsr #3
   151dc:	sub	w0, w3, w1
   151e0:	sub	w0, w0, w2
   151e4:	eor	w0, w0, w2, lsl #10
   151e8:	sub	w1, w1, w2
   151ec:	sub	w1, w1, w0
   151f0:	eor	w0, w1, w0, lsr #15
   151f4:	ret
   151f8:	cmp	w5, #0x7
   151fc:	b.eq	15210 <iterative_hash@@Base+0x2fc>  // b.none
   15200:	cmp	w5, #0x8
   15204:	b.ne	15188 <iterative_hash@@Base+0x274>  // b.any
   15208:	ldrb	w1, [x0, #7]
   1520c:	add	w8, w8, w1, lsl #24
   15210:	ldrb	w1, [x0, #6]
   15214:	add	w8, w8, w1, lsl #16
   15218:	ldrb	w1, [x0, #5]
   1521c:	add	w8, w8, w1, lsl #8
   15220:	b	1514c <iterative_hash@@Base+0x238>

0000000000015224 <xmalloc_set_program_name@@Base>:
   15224:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
   15228:	str	x0, [x1, #1512]
   1522c:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   15230:	ldr	x0, [x0, #1856]
   15234:	cbz	x0, 1523c <xmalloc_set_program_name@@Base+0x18>
   15238:	ret
   1523c:	stp	x29, x30, [sp, #-16]!
   15240:	mov	x29, sp
   15244:	bl	55e0 <sbrk@plt>
   15248:	adrp	x1, 2b000 <xexit@@Base+0x15c24>
   1524c:	str	x0, [x1, #1856]
   15250:	ldp	x29, x30, [sp], #16
   15254:	ret

0000000000015258 <xmalloc_failed@@Base>:
   15258:	stp	x29, x30, [sp, #-32]!
   1525c:	mov	x29, sp
   15260:	stp	x19, x20, [sp, #16]
   15264:	mov	x19, x0
   15268:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   1526c:	ldr	x20, [x0, #1856]
   15270:	cbz	x20, 152c8 <xmalloc_failed@@Base+0x70>
   15274:	mov	x0, #0x0                   	// #0
   15278:	bl	55e0 <sbrk@plt>
   1527c:	sub	x5, x0, x20
   15280:	adrp	x0, 2b000 <xexit@@Base+0x15c24>
   15284:	ldr	x2, [x0, #1512]
   15288:	ldrb	w0, [x2]
   1528c:	adrp	x1, 16000 <xexit@@Base+0xc24>
   15290:	add	x1, x1, #0x10
   15294:	adrp	x3, 16000 <xexit@@Base+0xc24>
   15298:	add	x3, x3, #0x3e0
   1529c:	cmp	w0, #0x0
   152a0:	mov	x4, x19
   152a4:	csel	x3, x3, x1, ne  // ne = any
   152a8:	adrp	x1, 16000 <xexit@@Base+0xc24>
   152ac:	add	x1, x1, #0x3e8
   152b0:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
   152b4:	ldr	x0, [x0, #3968]
   152b8:	ldr	x0, [x0]
   152bc:	bl	5370 <fprintf@plt>
   152c0:	mov	w0, #0x1                   	// #1
   152c4:	bl	5730 <xexit@plt>
   152c8:	mov	x0, #0x0                   	// #0
   152cc:	bl	55e0 <sbrk@plt>
   152d0:	adrp	x5, 2a000 <xexit@@Base+0x14c24>
   152d4:	ldr	x5, [x5, #4000]
   152d8:	sub	x5, x0, x5
   152dc:	b	15280 <xmalloc_failed@@Base+0x28>

00000000000152e0 <xmalloc@@Base>:
   152e0:	stp	x29, x30, [sp, #-32]!
   152e4:	mov	x29, sp
   152e8:	str	x19, [sp, #16]
   152ec:	cmp	x0, #0x0
   152f0:	csinc	x19, x0, xzr, ne  // ne = any
   152f4:	mov	x0, x19
   152f8:	bl	5710 <malloc@plt>
   152fc:	cbz	x0, 1530c <xmalloc@@Base+0x2c>
   15300:	ldr	x19, [sp, #16]
   15304:	ldp	x29, x30, [sp], #32
   15308:	ret
   1530c:	mov	x0, x19
   15310:	bl	5520 <xmalloc_failed@plt>

0000000000015314 <xcalloc@@Base>:
   15314:	stp	x29, x30, [sp, #-32]!
   15318:	mov	x29, sp
   1531c:	stp	x19, x20, [sp, #16]
   15320:	mov	x20, x0
   15324:	mov	x19, x1
   15328:	cmp	x0, #0x0
   1532c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   15330:	b.ne	1533c <xcalloc@@Base+0x28>  // b.any
   15334:	mov	x19, #0x1                   	// #1
   15338:	mov	x20, x19
   1533c:	mov	x1, x19
   15340:	mov	x0, x20
   15344:	bl	5300 <calloc@plt>
   15348:	cbz	x0, 15358 <xcalloc@@Base+0x44>
   1534c:	ldp	x19, x20, [sp, #16]
   15350:	ldp	x29, x30, [sp], #32
   15354:	ret
   15358:	mul	x0, x20, x19
   1535c:	bl	5520 <xmalloc_failed@plt>

0000000000015360 <xrealloc@@Base>:
   15360:	stp	x29, x30, [sp, #-32]!
   15364:	mov	x29, sp
   15368:	str	x19, [sp, #16]
   1536c:	cmp	x1, #0x0
   15370:	csinc	x19, x1, xzr, ne  // ne = any
   15374:	cbz	x0, 15390 <xrealloc@@Base+0x30>
   15378:	mov	x1, x19
   1537c:	bl	5470 <realloc@plt>
   15380:	cbz	x0, 1539c <xrealloc@@Base+0x3c>
   15384:	ldr	x19, [sp, #16]
   15388:	ldp	x29, x30, [sp], #32
   1538c:	ret
   15390:	mov	x0, x19
   15394:	bl	5710 <malloc@plt>
   15398:	b	15380 <xrealloc@@Base+0x20>
   1539c:	mov	x0, x19
   153a0:	bl	5520 <xmalloc_failed@plt>

00000000000153a4 <xstrdup@@Base>:
   153a4:	stp	x29, x30, [sp, #-32]!
   153a8:	mov	x29, sp
   153ac:	stp	x19, x20, [sp, #16]
   153b0:	mov	x20, x0
   153b4:	bl	5360 <strlen@plt>
   153b8:	add	x19, x0, #0x1
   153bc:	mov	x0, x19
   153c0:	bl	5670 <xmalloc@plt>
   153c4:	mov	x2, x19
   153c8:	mov	x1, x20
   153cc:	bl	52b0 <memcpy@plt>
   153d0:	ldp	x19, x20, [sp, #16]
   153d4:	ldp	x29, x30, [sp], #32
   153d8:	ret

00000000000153dc <xexit@@Base>:
   153dc:	stp	x29, x30, [sp, #-32]!
   153e0:	mov	x29, sp
   153e4:	str	x19, [sp, #16]
   153e8:	mov	w19, w0
   153ec:	adrp	x0, 2a000 <xexit@@Base+0x14c24>
   153f0:	ldr	x0, [x0, #3168]
   153f4:	ldr	x0, [x0]
   153f8:	cbz	x0, 15400 <xexit@@Base+0x24>
   153fc:	blr	x0
   15400:	mov	w0, w19
   15404:	bl	57c0 <exit@plt>

Disassembly of section .fini:

0000000000015408 <.fini>:
   15408:	stp	x29, x30, [sp, #-16]!
   1540c:	mov	x29, sp
   15410:	ldp	x29, x30, [sp], #16
   15414:	ret
