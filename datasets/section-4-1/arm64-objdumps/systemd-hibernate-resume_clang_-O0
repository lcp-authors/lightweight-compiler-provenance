
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400918 <_init>:
  400918:	stp	x29, x30, [sp, #-16]!
  40091c:	mov	x29, sp
  400920:	bl	400ab0 <call_weak_fn>
  400924:	ldp	x29, x30, [sp], #16
  400928:	ret

Disassembly of section .plt:

0000000000400930 <__libc_start_main@plt-0x20>:
  400930:	stp	x16, x30, [sp, #-16]!
  400934:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400938:	ldr	x17, [x16, #3952]
  40093c:	add	x16, x16, #0xf70
  400940:	br	x17
  400944:	nop
  400948:	nop
  40094c:	nop

0000000000400950 <__libc_start_main@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400954:	ldr	x17, [x16, #3960]
  400958:	add	x16, x16, #0xf78
  40095c:	br	x17

0000000000400960 <abort@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400964:	ldr	x17, [x16, #3968]
  400968:	add	x16, x16, #0xf80
  40096c:	br	x17

0000000000400970 <__gmon_start__@plt>:
  400970:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400974:	ldr	x17, [x16, #3976]
  400978:	add	x16, x16, #0xf88
  40097c:	br	x17

0000000000400980 <log_get_max_level_realm@plt>:
  400980:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400984:	ldr	x17, [x16, #3984]
  400988:	add	x16, x16, #0xf90
  40098c:	br	x17

0000000000400990 <log_internal_realm@plt>:
  400990:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400994:	ldr	x17, [x16, #3992]
  400998:	add	x16, x16, #0xf98
  40099c:	br	x17

00000000004009a0 <abs@plt>:
  4009a0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009a4:	ldr	x17, [x16, #4000]
  4009a8:	add	x16, x16, #0xfa0
  4009ac:	br	x17

00000000004009b0 <log_setup_service@plt>:
  4009b0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009b4:	ldr	x17, [x16, #4008]
  4009b8:	add	x16, x16, #0xfa8
  4009bc:	br	x17

00000000004009c0 <umask@plt>:
  4009c0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009c4:	ldr	x17, [x16, #4016]
  4009c8:	add	x16, x16, #0xfb0
  4009cc:	br	x17

00000000004009d0 <in_initrd@plt>:
  4009d0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009d4:	ldr	x17, [x16, #4024]
  4009d8:	add	x16, x16, #0xfb8
  4009dc:	br	x17

00000000004009e0 <__errno_location@plt>:
  4009e0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009e4:	ldr	x17, [x16, #4032]
  4009e8:	add	x16, x16, #0xfc0
  4009ec:	br	x17

00000000004009f0 <gnu_dev_major@plt>:
  4009f0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  4009f4:	ldr	x17, [x16, #4040]
  4009f8:	add	x16, x16, #0xfc8
  4009fc:	br	x17

0000000000400a00 <gnu_dev_minor@plt>:
  400a00:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a04:	ldr	x17, [x16, #4048]
  400a08:	add	x16, x16, #0xfd0
  400a0c:	br	x17

0000000000400a10 <asprintf@plt>:
  400a10:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a14:	ldr	x17, [x16, #4056]
  400a18:	add	x16, x16, #0xfd8
  400a1c:	br	x17

0000000000400a20 <log_oom_internal@plt>:
  400a20:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a24:	ldr	x17, [x16, #4064]
  400a28:	add	x16, x16, #0xfe0
  400a2c:	br	x17

0000000000400a30 <free@plt>:
  400a30:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a34:	ldr	x17, [x16, #4072]
  400a38:	add	x16, x16, #0xfe8
  400a3c:	br	x17

0000000000400a40 <write_string_file_ts@plt>:
  400a40:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a44:	ldr	x17, [x16, #4080]
  400a48:	add	x16, x16, #0xff0
  400a4c:	br	x17

0000000000400a50 <__xstat64@plt>:
  400a50:	adrp	x16, 41f000 <__FRAME_END__+0x1dcb0>
  400a54:	ldr	x17, [x16, #4088]
  400a58:	add	x16, x16, #0xff8
  400a5c:	br	x17

Disassembly of section .text:

0000000000400a60 <_start>:
  400a60:	mov	x29, #0x0                   	// #0
  400a64:	mov	x30, #0x0                   	// #0
  400a68:	mov	x5, x0
  400a6c:	ldr	x1, [sp]
  400a70:	add	x2, sp, #0x8
  400a74:	mov	x6, sp
  400a78:	movz	x0, #0x0, lsl #48
  400a7c:	movk	x0, #0x0, lsl #32
  400a80:	movk	x0, #0x40, lsl #16
  400a84:	movk	x0, #0xc28
  400a88:	movz	x3, #0x0, lsl #48
  400a8c:	movk	x3, #0x0, lsl #32
  400a90:	movk	x3, #0x40, lsl #16
  400a94:	movk	x3, #0x1090
  400a98:	movz	x4, #0x0, lsl #48
  400a9c:	movk	x4, #0x0, lsl #32
  400aa0:	movk	x4, #0x40, lsl #16
  400aa4:	movk	x4, #0x1110
  400aa8:	bl	400950 <__libc_start_main@plt>
  400aac:	bl	400960 <abort@plt>

0000000000400ab0 <call_weak_fn>:
  400ab0:	adrp	x0, 41f000 <__FRAME_END__+0x1dcb0>
  400ab4:	ldr	x0, [x0, #3928]
  400ab8:	cbz	x0, 400ac0 <call_weak_fn+0x10>
  400abc:	b	400970 <__gmon_start__@plt>
  400ac0:	ret

0000000000400ac4 <deregister_tm_clones>:
  400ac4:	stp	x29, x30, [sp, #-32]!
  400ac8:	mov	x29, sp
  400acc:	adrp	x0, 420000 <completed.8445>
  400ad0:	add	x0, x0, #0x0
  400ad4:	str	x0, [sp, #24]
  400ad8:	ldr	x0, [sp, #24]
  400adc:	str	x0, [sp, #24]
  400ae0:	ldr	x1, [sp, #24]
  400ae4:	adrp	x0, 420000 <completed.8445>
  400ae8:	add	x0, x0, #0x0
  400aec:	cmp	x1, x0
  400af0:	b.eq	400b2c <deregister_tm_clones+0x68>  // b.none
  400af4:	adrp	x0, 401000 <main+0x3d8>
  400af8:	add	x0, x0, #0x138
  400afc:	ldr	x0, [x0]
  400b00:	str	x0, [sp, #16]
  400b04:	ldr	x0, [sp, #16]
  400b08:	str	x0, [sp, #16]
  400b0c:	ldr	x0, [sp, #16]
  400b10:	cmp	x0, #0x0
  400b14:	b.eq	400b30 <deregister_tm_clones+0x6c>  // b.none
  400b18:	ldr	x1, [sp, #16]
  400b1c:	adrp	x0, 420000 <completed.8445>
  400b20:	add	x0, x0, #0x0
  400b24:	blr	x1
  400b28:	b	400b30 <deregister_tm_clones+0x6c>
  400b2c:	nop
  400b30:	ldp	x29, x30, [sp], #32
  400b34:	ret

0000000000400b38 <register_tm_clones>:
  400b38:	stp	x29, x30, [sp, #-48]!
  400b3c:	mov	x29, sp
  400b40:	adrp	x0, 420000 <completed.8445>
  400b44:	add	x0, x0, #0x0
  400b48:	str	x0, [sp, #40]
  400b4c:	ldr	x0, [sp, #40]
  400b50:	str	x0, [sp, #40]
  400b54:	ldr	x1, [sp, #40]
  400b58:	adrp	x0, 420000 <completed.8445>
  400b5c:	add	x0, x0, #0x0
  400b60:	sub	x0, x1, x0
  400b64:	asr	x0, x0, #3
  400b68:	lsr	x1, x0, #63
  400b6c:	add	x0, x1, x0
  400b70:	asr	x0, x0, #1
  400b74:	str	x0, [sp, #32]
  400b78:	ldr	x0, [sp, #32]
  400b7c:	cmp	x0, #0x0
  400b80:	b.eq	400bc0 <register_tm_clones+0x88>  // b.none
  400b84:	adrp	x0, 401000 <main+0x3d8>
  400b88:	add	x0, x0, #0x140
  400b8c:	ldr	x0, [x0]
  400b90:	str	x0, [sp, #24]
  400b94:	ldr	x0, [sp, #24]
  400b98:	str	x0, [sp, #24]
  400b9c:	ldr	x0, [sp, #24]
  400ba0:	cmp	x0, #0x0
  400ba4:	b.eq	400bc4 <register_tm_clones+0x8c>  // b.none
  400ba8:	ldr	x2, [sp, #24]
  400bac:	ldr	x1, [sp, #32]
  400bb0:	adrp	x0, 420000 <completed.8445>
  400bb4:	add	x0, x0, #0x0
  400bb8:	blr	x2
  400bbc:	b	400bc4 <register_tm_clones+0x8c>
  400bc0:	nop
  400bc4:	ldp	x29, x30, [sp], #48
  400bc8:	ret

0000000000400bcc <__do_global_dtors_aux>:
  400bcc:	stp	x29, x30, [sp, #-16]!
  400bd0:	mov	x29, sp
  400bd4:	adrp	x0, 420000 <completed.8445>
  400bd8:	add	x0, x0, #0x0
  400bdc:	ldrb	w0, [x0]
  400be0:	and	x0, x0, #0xff
  400be4:	cmp	x0, #0x0
  400be8:	b.ne	400c04 <__do_global_dtors_aux+0x38>  // b.any
  400bec:	bl	400ac4 <deregister_tm_clones>
  400bf0:	adrp	x0, 420000 <completed.8445>
  400bf4:	add	x0, x0, #0x0
  400bf8:	mov	w1, #0x1                   	// #1
  400bfc:	strb	w1, [x0]
  400c00:	b	400c08 <__do_global_dtors_aux+0x3c>
  400c04:	nop
  400c08:	ldp	x29, x30, [sp], #16
  400c0c:	ret

0000000000400c10 <frame_dummy>:
  400c10:	stp	x29, x30, [sp, #-16]!
  400c14:	mov	x29, sp
  400c18:	bl	400b38 <register_tm_clones>
  400c1c:	nop
  400c20:	ldp	x29, x30, [sp], #16
  400c24:	ret

0000000000400c28 <main>:
  400c28:	sub	sp, sp, #0x150
  400c2c:	stp	x29, x30, [sp, #304]
  400c30:	str	x28, [sp, #320]
  400c34:	add	x29, sp, #0x130
  400c38:	mov	x8, xzr
  400c3c:	adrp	x9, 401000 <main+0x3d8>
  400c40:	add	x9, x9, #0x148
  400c44:	add	x9, x9, #0x3
  400c48:	adrp	x10, 401000 <main+0x3d8>
  400c4c:	add	x10, x10, #0x173
  400c50:	stur	wzr, [x29, #-4]
  400c54:	stur	w0, [x29, #-8]
  400c58:	stur	x1, [x29, #-16]
  400c5c:	str	x8, [sp, #144]
  400c60:	ldur	w11, [x29, #-8]
  400c64:	cmp	w11, #0x2
  400c68:	str	x9, [sp, #48]
  400c6c:	str	x10, [sp, #40]
  400c70:	b.eq	400cf8 <main+0xd0>  // b.none
  400c74:	mov	w8, #0x3                   	// #3
  400c78:	str	w8, [sp, #136]
  400c7c:	str	wzr, [sp, #132]
  400c80:	str	wzr, [sp, #128]
  400c84:	ldr	w0, [sp, #128]
  400c88:	bl	400980 <log_get_max_level_realm@plt>
  400c8c:	ldr	w8, [sp, #136]
  400c90:	and	w8, w8, #0x7
  400c94:	cmp	w0, w8
  400c98:	b.lt	400ccc <main+0xa4>  // b.tstop
  400c9c:	ldr	w8, [sp, #128]
  400ca0:	ldr	w9, [sp, #136]
  400ca4:	orr	w0, w9, w8, lsl #10
  400ca8:	ldr	w1, [sp, #132]
  400cac:	ldr	x2, [sp, #48]
  400cb0:	mov	w3, #0x13                  	// #19
  400cb4:	ldr	x4, [sp, #40]
  400cb8:	adrp	x5, 401000 <main+0x3d8>
  400cbc:	add	x5, x5, #0x178
  400cc0:	bl	400990 <log_internal_realm@plt>
  400cc4:	str	w0, [sp, #36]
  400cc8:	b	400ce0 <main+0xb8>
  400ccc:	ldr	w0, [sp, #132]
  400cd0:	bl	4009a0 <abs@plt>
  400cd4:	mov	w8, wzr
  400cd8:	subs	w8, w8, w0, uxtb
  400cdc:	str	w8, [sp, #36]
  400ce0:	ldr	w8, [sp, #36]
  400ce4:	str	w8, [sp, #124]
  400ce8:	mov	w8, #0x1                   	// #1
  400cec:	stur	w8, [x29, #-4]
  400cf0:	str	w8, [sp, #120]
  400cf4:	b	401010 <main+0x3e8>
  400cf8:	bl	4009b0 <log_setup_service@plt>
  400cfc:	mov	w0, #0x12                  	// #18
  400d00:	bl	4009c0 <umask@plt>
  400d04:	bl	4009d0 <in_initrd@plt>
  400d08:	tbnz	w0, #0, 400d1c <main+0xf4>
  400d0c:	stur	wzr, [x29, #-4]
  400d10:	mov	w8, #0x1                   	// #1
  400d14:	str	w8, [sp, #120]
  400d18:	b	401010 <main+0x3e8>
  400d1c:	ldur	x8, [x29, #-16]
  400d20:	ldr	x8, [x8, #8]
  400d24:	str	x8, [sp, #152]
  400d28:	ldr	x0, [sp, #152]
  400d2c:	sub	x1, x29, #0x90
  400d30:	bl	401118 <stat64>
  400d34:	cmp	w0, #0x0
  400d38:	cset	w9, ge  // ge = tcont
  400d3c:	tbnz	w9, #0, 400dd0 <main+0x1a8>
  400d40:	mov	w8, #0x3                   	// #3
  400d44:	str	w8, [sp, #116]
  400d48:	bl	4009e0 <__errno_location@plt>
  400d4c:	ldr	w8, [x0]
  400d50:	str	w8, [sp, #112]
  400d54:	str	wzr, [sp, #108]
  400d58:	ldr	w0, [sp, #108]
  400d5c:	bl	400980 <log_get_max_level_realm@plt>
  400d60:	ldr	w8, [sp, #116]
  400d64:	and	w8, w8, #0x7
  400d68:	cmp	w0, w8
  400d6c:	b.lt	400da4 <main+0x17c>  // b.tstop
  400d70:	ldr	w8, [sp, #108]
  400d74:	ldr	w9, [sp, #116]
  400d78:	orr	w0, w9, w8, lsl #10
  400d7c:	ldr	w1, [sp, #112]
  400d80:	ldr	x6, [sp, #152]
  400d84:	ldr	x2, [sp, #48]
  400d88:	mov	w3, #0x22                  	// #34
  400d8c:	ldr	x4, [sp, #40]
  400d90:	adrp	x5, 401000 <main+0x3d8>
  400d94:	add	x5, x5, #0x19b
  400d98:	bl	400990 <log_internal_realm@plt>
  400d9c:	str	w0, [sp, #32]
  400da0:	b	400db8 <main+0x190>
  400da4:	ldr	w0, [sp, #112]
  400da8:	bl	4009a0 <abs@plt>
  400dac:	mov	w8, wzr
  400db0:	subs	w8, w8, w0, uxtb
  400db4:	str	w8, [sp, #32]
  400db8:	ldr	w8, [sp, #32]
  400dbc:	str	w8, [sp, #104]
  400dc0:	mov	w8, #0x1                   	// #1
  400dc4:	stur	w8, [x29, #-4]
  400dc8:	str	w8, [sp, #120]
  400dcc:	b	401010 <main+0x3e8>
  400dd0:	ldur	w8, [x29, #-128]
  400dd4:	and	w8, w8, #0xf000
  400dd8:	cmp	w8, #0x6, lsl #12
  400ddc:	b.eq	400e68 <main+0x240>  // b.none
  400de0:	mov	w8, #0x3                   	// #3
  400de4:	str	w8, [sp, #100]
  400de8:	str	wzr, [sp, #96]
  400dec:	str	wzr, [sp, #92]
  400df0:	ldr	w0, [sp, #92]
  400df4:	bl	400980 <log_get_max_level_realm@plt>
  400df8:	ldr	w8, [sp, #100]
  400dfc:	and	w8, w8, #0x7
  400e00:	cmp	w0, w8
  400e04:	b.lt	400e3c <main+0x214>  // b.tstop
  400e08:	ldr	w8, [sp, #92]
  400e0c:	ldr	w9, [sp, #100]
  400e10:	orr	w0, w9, w8, lsl #10
  400e14:	ldr	w1, [sp, #96]
  400e18:	ldr	x6, [sp, #152]
  400e1c:	ldr	x2, [sp, #48]
  400e20:	mov	w3, #0x27                  	// #39
  400e24:	ldr	x4, [sp, #40]
  400e28:	adrp	x5, 401000 <main+0x3d8>
  400e2c:	add	x5, x5, #0x1b3
  400e30:	bl	400990 <log_internal_realm@plt>
  400e34:	str	w0, [sp, #28]
  400e38:	b	400e50 <main+0x228>
  400e3c:	ldr	w0, [sp, #96]
  400e40:	bl	4009a0 <abs@plt>
  400e44:	mov	w8, wzr
  400e48:	subs	w8, w8, w0, uxtb
  400e4c:	str	w8, [sp, #28]
  400e50:	ldr	w8, [sp, #28]
  400e54:	str	w8, [sp, #88]
  400e58:	mov	w8, #0x1                   	// #1
  400e5c:	stur	w8, [x29, #-4]
  400e60:	str	w8, [sp, #120]
  400e64:	b	401010 <main+0x3e8>
  400e68:	ldur	x0, [x29, #-112]
  400e6c:	bl	4009f0 <gnu_dev_major@plt>
  400e70:	ldur	x8, [x29, #-112]
  400e74:	str	w0, [sp, #24]
  400e78:	mov	x0, x8
  400e7c:	bl	400a00 <gnu_dev_minor@plt>
  400e80:	add	x8, sp, #0x90
  400e84:	str	w0, [sp, #20]
  400e88:	mov	x0, x8
  400e8c:	adrp	x1, 401000 <main+0x3d8>
  400e90:	add	x1, x1, #0x1dd
  400e94:	ldr	w2, [sp, #24]
  400e98:	ldr	w3, [sp, #20]
  400e9c:	bl	400a10 <asprintf@plt>
  400ea0:	cmp	w0, #0x0
  400ea4:	cset	w9, ge  // ge = tcont
  400ea8:	tbnz	w9, #0, 400ed4 <main+0x2ac>
  400eac:	mov	w8, wzr
  400eb0:	mov	w0, w8
  400eb4:	ldr	x1, [sp, #48]
  400eb8:	mov	w2, #0x2c                  	// #44
  400ebc:	ldr	x3, [sp, #40]
  400ec0:	bl	400a20 <log_oom_internal@plt>
  400ec4:	mov	w8, #0x1                   	// #1
  400ec8:	stur	w8, [x29, #-4]
  400ecc:	str	w8, [sp, #120]
  400ed0:	b	401010 <main+0x3e8>
  400ed4:	ldr	x1, [sp, #144]
  400ed8:	adrp	x0, 401000 <main+0x3d8>
  400edc:	add	x0, x0, #0x1e3
  400ee0:	mov	w2, #0x20                  	// #32
  400ee4:	bl	401054 <write_string_file>
  400ee8:	str	w0, [sp, #140]
  400eec:	ldr	w8, [sp, #140]
  400ef0:	cmp	w8, #0x0
  400ef4:	cset	w8, ge  // ge = tcont
  400ef8:	tbnz	w8, #0, 400f88 <main+0x360>
  400efc:	mov	w8, #0x3                   	// #3
  400f00:	str	w8, [sp, #84]
  400f04:	ldr	w8, [sp, #140]
  400f08:	str	w8, [sp, #80]
  400f0c:	str	wzr, [sp, #76]
  400f10:	ldr	w0, [sp, #76]
  400f14:	bl	400980 <log_get_max_level_realm@plt>
  400f18:	ldr	w8, [sp, #84]
  400f1c:	and	w8, w8, #0x7
  400f20:	cmp	w0, w8
  400f24:	b.lt	400f5c <main+0x334>  // b.tstop
  400f28:	ldr	w8, [sp, #76]
  400f2c:	ldr	w9, [sp, #84]
  400f30:	orr	w0, w9, w8, lsl #10
  400f34:	ldr	w1, [sp, #80]
  400f38:	ldr	x6, [sp, #144]
  400f3c:	ldr	x2, [sp, #48]
  400f40:	mov	w3, #0x32                  	// #50
  400f44:	ldr	x4, [sp, #40]
  400f48:	adrp	x5, 401000 <main+0x3d8>
  400f4c:	add	x5, x5, #0x1f5
  400f50:	bl	400990 <log_internal_realm@plt>
  400f54:	str	w0, [sp, #16]
  400f58:	b	400f70 <main+0x348>
  400f5c:	ldr	w0, [sp, #80]
  400f60:	bl	4009a0 <abs@plt>
  400f64:	mov	w8, wzr
  400f68:	subs	w8, w8, w0, uxtb
  400f6c:	str	w8, [sp, #16]
  400f70:	ldr	w8, [sp, #16]
  400f74:	str	w8, [sp, #72]
  400f78:	mov	w8, #0x1                   	// #1
  400f7c:	stur	w8, [x29, #-4]
  400f80:	str	w8, [sp, #120]
  400f84:	b	401010 <main+0x3e8>
  400f88:	mov	w8, #0x6                   	// #6
  400f8c:	str	w8, [sp, #68]
  400f90:	str	wzr, [sp, #64]
  400f94:	str	wzr, [sp, #60]
  400f98:	ldr	w0, [sp, #60]
  400f9c:	bl	400980 <log_get_max_level_realm@plt>
  400fa0:	ldr	w8, [sp, #68]
  400fa4:	and	w8, w8, #0x7
  400fa8:	cmp	w0, w8
  400fac:	b.lt	400fe8 <main+0x3c0>  // b.tstop
  400fb0:	ldr	w8, [sp, #60]
  400fb4:	ldr	w9, [sp, #68]
  400fb8:	orr	w0, w9, w8, lsl #10
  400fbc:	ldr	w1, [sp, #64]
  400fc0:	ldr	x6, [sp, #152]
  400fc4:	ldr	x7, [sp, #144]
  400fc8:	ldr	x2, [sp, #48]
  400fcc:	mov	w3, #0x3d                  	// #61
  400fd0:	ldr	x4, [sp, #40]
  400fd4:	adrp	x5, 401000 <main+0x3d8>
  400fd8:	add	x5, x5, #0x223
  400fdc:	bl	400990 <log_internal_realm@plt>
  400fe0:	str	w0, [sp, #12]
  400fe4:	b	400ffc <main+0x3d4>
  400fe8:	ldr	w0, [sp, #64]
  400fec:	bl	4009a0 <abs@plt>
  400ff0:	mov	w8, wzr
  400ff4:	subs	w8, w8, w0, uxtb
  400ff8:	str	w8, [sp, #12]
  400ffc:	ldr	w8, [sp, #12]
  401000:	str	w8, [sp, #56]
  401004:	stur	wzr, [x29, #-4]
  401008:	mov	w8, #0x1                   	// #1
  40100c:	str	w8, [sp, #120]
  401010:	add	x0, sp, #0x90
  401014:	bl	40102c <freep>
  401018:	ldur	w0, [x29, #-4]
  40101c:	ldr	x28, [sp, #320]
  401020:	ldp	x29, x30, [sp, #304]
  401024:	add	sp, sp, #0x150
  401028:	ret

000000000040102c <freep>:
  40102c:	sub	sp, sp, #0x20
  401030:	stp	x29, x30, [sp, #16]
  401034:	add	x29, sp, #0x10
  401038:	str	x0, [sp, #8]
  40103c:	ldr	x8, [sp, #8]
  401040:	ldr	x0, [x8]
  401044:	bl	400a30 <free@plt>
  401048:	ldp	x29, x30, [sp, #16]
  40104c:	add	sp, sp, #0x20
  401050:	ret

0000000000401054 <write_string_file>:
  401054:	sub	sp, sp, #0x30
  401058:	stp	x29, x30, [sp, #32]
  40105c:	add	x29, sp, #0x20
  401060:	mov	x8, xzr
  401064:	stur	x0, [x29, #-8]
  401068:	str	x1, [sp, #16]
  40106c:	str	w2, [sp, #12]
  401070:	ldur	x0, [x29, #-8]
  401074:	ldr	x1, [sp, #16]
  401078:	ldr	w2, [sp, #12]
  40107c:	mov	x3, x8
  401080:	bl	400a40 <write_string_file_ts@plt>
  401084:	ldp	x29, x30, [sp, #32]
  401088:	add	sp, sp, #0x30
  40108c:	ret

0000000000401090 <__libc_csu_init>:
  401090:	stp	x29, x30, [sp, #-64]!
  401094:	mov	x29, sp
  401098:	stp	x19, x20, [sp, #16]
  40109c:	adrp	x20, 41f000 <__FRAME_END__+0x1dcb0>
  4010a0:	add	x20, x20, #0xd30
  4010a4:	stp	x21, x22, [sp, #32]
  4010a8:	adrp	x21, 41f000 <__FRAME_END__+0x1dcb0>
  4010ac:	add	x21, x21, #0xd28
  4010b0:	sub	x20, x20, x21
  4010b4:	mov	w22, w0
  4010b8:	stp	x23, x24, [sp, #48]
  4010bc:	mov	x23, x1
  4010c0:	mov	x24, x2
  4010c4:	bl	400918 <_init>
  4010c8:	cmp	xzr, x20, asr #3
  4010cc:	b.eq	4010f8 <__libc_csu_init+0x68>  // b.none
  4010d0:	asr	x20, x20, #3
  4010d4:	mov	x19, #0x0                   	// #0
  4010d8:	ldr	x3, [x21, x19, lsl #3]
  4010dc:	mov	x2, x24
  4010e0:	add	x19, x19, #0x1
  4010e4:	mov	x1, x23
  4010e8:	mov	w0, w22
  4010ec:	blr	x3
  4010f0:	cmp	x20, x19
  4010f4:	b.ne	4010d8 <__libc_csu_init+0x48>  // b.any
  4010f8:	ldp	x19, x20, [sp, #16]
  4010fc:	ldp	x21, x22, [sp, #32]
  401100:	ldp	x23, x24, [sp, #48]
  401104:	ldp	x29, x30, [sp], #64
  401108:	ret
  40110c:	nop

0000000000401110 <__libc_csu_fini>:
  401110:	ret
  401114:	udf	#0

0000000000401118 <stat64>:
  401118:	mov	x2, x1
  40111c:	mov	x1, x0
  401120:	mov	w0, #0x0                   	// #0
  401124:	b	400a50 <__xstat64@plt>

Disassembly of section .fini:

0000000000401128 <_fini>:
  401128:	stp	x29, x30, [sp, #-16]!
  40112c:	mov	x29, sp
  401130:	ldp	x29, x30, [sp], #16
  401134:	ret
