
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402470 <.init>:
  402470:	stp	x29, x30, [sp, #-16]!
  402474:	mov	x29, sp
  402478:	bl	402bb0 <ferror@plt+0x60>
  40247c:	ldp	x29, x30, [sp], #16
  402480:	ret

Disassembly of section .plt:

0000000000402490 <mbrtowc@plt-0x20>:
  402490:	stp	x16, x30, [sp, #-16]!
  402494:	adrp	x16, 42c000 <_obstack_memory_used@@Base+0x13d94>
  402498:	ldr	x17, [x16, #4088]
  40249c:	add	x16, x16, #0xff8
  4024a0:	br	x17
  4024a4:	nop
  4024a8:	nop
  4024ac:	nop

00000000004024b0 <mbrtowc@plt>:
  4024b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16]
  4024b8:	add	x16, x16, #0x0
  4024bc:	br	x17

00000000004024c0 <memcpy@plt>:
  4024c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #8]
  4024c8:	add	x16, x16, #0x8
  4024cc:	br	x17

00000000004024d0 <sigaltstack@plt>:
  4024d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #16]
  4024d8:	add	x16, x16, #0x10
  4024dc:	br	x17

00000000004024e0 <_exit@plt>:
  4024e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #24]
  4024e8:	add	x16, x16, #0x18
  4024ec:	br	x17

00000000004024f0 <strlen@plt>:
  4024f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #32]
  4024f8:	add	x16, x16, #0x20
  4024fc:	br	x17

0000000000402500 <fputs@plt>:
  402500:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #40]
  402508:	add	x16, x16, #0x28
  40250c:	br	x17

0000000000402510 <__sprintf_chk@plt>:
  402510:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #48]
  402518:	add	x16, x16, #0x30
  40251c:	br	x17

0000000000402520 <exit@plt>:
  402520:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #56]
  402528:	add	x16, x16, #0x38
  40252c:	br	x17

0000000000402530 <raise@plt>:
  402530:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #64]
  402538:	add	x16, x16, #0x40
  40253c:	br	x17

0000000000402540 <error@plt>:
  402540:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #72]
  402548:	add	x16, x16, #0x48
  40254c:	br	x17

0000000000402550 <sigprocmask@plt>:
  402550:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #80]
  402558:	add	x16, x16, #0x50
  40255c:	br	x17

0000000000402560 <strtod@plt>:
  402560:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #88]
  402568:	add	x16, x16, #0x58
  40256c:	br	x17

0000000000402570 <secure_getenv@plt>:
  402570:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #96]
  402578:	add	x16, x16, #0x60
  40257c:	br	x17

0000000000402580 <setbuf@plt>:
  402580:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #104]
  402588:	add	x16, x16, #0x68
  40258c:	br	x17

0000000000402590 <__cxa_finalize@plt>:
  402590:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #112]
  402598:	add	x16, x16, #0x70
  40259c:	br	x17

00000000004025a0 <putc@plt>:
  4025a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #120]
  4025a8:	add	x16, x16, #0x78
  4025ac:	br	x17

00000000004025b0 <pipe@plt>:
  4025b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #128]
  4025b8:	add	x16, x16, #0x80
  4025bc:	br	x17

00000000004025c0 <__cxa_atexit@plt>:
  4025c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #136]
  4025c8:	add	x16, x16, #0x88
  4025cc:	br	x17

00000000004025d0 <fputc@plt>:
  4025d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #144]
  4025d8:	add	x16, x16, #0x90
  4025dc:	br	x17

00000000004025e0 <qsort@plt>:
  4025e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #152]
  4025e8:	add	x16, x16, #0x98
  4025ec:	br	x17

00000000004025f0 <posix_spawn_file_actions_addopen@plt>:
  4025f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #160]
  4025f8:	add	x16, x16, #0xa0
  4025fc:	br	x17

0000000000402600 <kill@plt>:
  402600:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #168]
  402608:	add	x16, x16, #0xa8
  40260c:	br	x17

0000000000402610 <lseek@plt>:
  402610:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #176]
  402618:	add	x16, x16, #0xb0
  40261c:	br	x17

0000000000402620 <__fpending@plt>:
  402620:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #184]
  402628:	add	x16, x16, #0xb8
  40262c:	br	x17

0000000000402630 <fileno@plt>:
  402630:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #192]
  402638:	add	x16, x16, #0xc0
  40263c:	br	x17

0000000000402640 <posix_spawn_file_actions_adddup2@plt>:
  402640:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #200]
  402648:	add	x16, x16, #0xc8
  40264c:	br	x17

0000000000402650 <signal@plt>:
  402650:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #208]
  402658:	add	x16, x16, #0xd0
  40265c:	br	x17

0000000000402660 <fclose@plt>:
  402660:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #216]
  402668:	add	x16, x16, #0xd8
  40266c:	br	x17

0000000000402670 <getpid@plt>:
  402670:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #224]
  402678:	add	x16, x16, #0xe0
  40267c:	br	x17

0000000000402680 <nl_langinfo@plt>:
  402680:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #232]
  402688:	add	x16, x16, #0xe8
  40268c:	br	x17

0000000000402690 <fopen@plt>:
  402690:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #240]
  402698:	add	x16, x16, #0xf0
  40269c:	br	x17

00000000004026a0 <malloc@plt>:
  4026a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #248]
  4026a8:	add	x16, x16, #0xf8
  4026ac:	br	x17

00000000004026b0 <open@plt>:
  4026b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #256]
  4026b8:	add	x16, x16, #0x100
  4026bc:	br	x17

00000000004026c0 <__vasprintf_chk@plt>:
  4026c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #264]
  4026c8:	add	x16, x16, #0x108
  4026cc:	br	x17

00000000004026d0 <__isoc99_fscanf@plt>:
  4026d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #272]
  4026d8:	add	x16, x16, #0x110
  4026dc:	br	x17

00000000004026e0 <sigemptyset@plt>:
  4026e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #280]
  4026e8:	add	x16, x16, #0x118
  4026ec:	br	x17

00000000004026f0 <posix_spawnattr_destroy@plt>:
  4026f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #288]
  4026f8:	add	x16, x16, #0x120
  4026fc:	br	x17

0000000000402700 <strncmp@plt>:
  402700:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #296]
  402708:	add	x16, x16, #0x128
  40270c:	br	x17

0000000000402710 <__libc_start_main@plt>:
  402710:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #304]
  402718:	add	x16, x16, #0x130
  40271c:	br	x17

0000000000402720 <strcat@plt>:
  402720:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #312]
  402728:	add	x16, x16, #0x138
  40272c:	br	x17

0000000000402730 <__printf_chk@plt>:
  402730:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #320]
  402738:	add	x16, x16, #0x140
  40273c:	br	x17

0000000000402740 <memset@plt>:
  402740:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #328]
  402748:	add	x16, x16, #0x148
  40274c:	br	x17

0000000000402750 <fdopen@plt>:
  402750:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #336]
  402758:	add	x16, x16, #0x150
  40275c:	br	x17

0000000000402760 <re_set_registers@plt>:
  402760:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #344]
  402768:	add	x16, x16, #0x158
  40276c:	br	x17

0000000000402770 <__vfprintf_chk@plt>:
  402770:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #352]
  402778:	add	x16, x16, #0x160
  40277c:	br	x17

0000000000402780 <calloc@plt>:
  402780:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #360]
  402788:	add	x16, x16, #0x168
  40278c:	br	x17

0000000000402790 <bcmp@plt>:
  402790:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #368]
  402798:	add	x16, x16, #0x170
  40279c:	br	x17

00000000004027a0 <posix_spawn_file_actions_destroy@plt>:
  4027a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #376]
  4027a8:	add	x16, x16, #0x178
  4027ac:	br	x17

00000000004027b0 <realloc@plt>:
  4027b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #384]
  4027b8:	add	x16, x16, #0x180
  4027bc:	br	x17

00000000004027c0 <re_search@plt>:
  4027c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #392]
  4027c8:	add	x16, x16, #0x188
  4027cc:	br	x17

00000000004027d0 <getc@plt>:
  4027d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #400]
  4027d8:	add	x16, x16, #0x190
  4027dc:	br	x17

00000000004027e0 <posix_spawn_file_actions_addclose@plt>:
  4027e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #408]
  4027e8:	add	x16, x16, #0x198
  4027ec:	br	x17

00000000004027f0 <close@plt>:
  4027f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #416]
  4027f8:	add	x16, x16, #0x1a0
  4027fc:	br	x17

0000000000402800 <sigaction@plt>:
  402800:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #424]
  402808:	add	x16, x16, #0x1a8
  40280c:	br	x17

0000000000402810 <strrchr@plt>:
  402810:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #432]
  402818:	add	x16, x16, #0x1b0
  40281c:	br	x17

0000000000402820 <__gmon_start__@plt>:
  402820:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #440]
  402828:	add	x16, x16, #0x1b8
  40282c:	br	x17

0000000000402830 <write@plt>:
  402830:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #448]
  402838:	add	x16, x16, #0x1c0
  40283c:	br	x17

0000000000402840 <mkdtemp@plt>:
  402840:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #456]
  402848:	add	x16, x16, #0x1c8
  40284c:	br	x17

0000000000402850 <posix_spawnattr_setflags@plt>:
  402850:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #464]
  402858:	add	x16, x16, #0x1d0
  40285c:	br	x17

0000000000402860 <abort@plt>:
  402860:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #472]
  402868:	add	x16, x16, #0x1d8
  40286c:	br	x17

0000000000402870 <re_compile_pattern@plt>:
  402870:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #480]
  402878:	add	x16, x16, #0x1e0
  40287c:	br	x17

0000000000402880 <mbsinit@plt>:
  402880:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #488]
  402888:	add	x16, x16, #0x1e8
  40288c:	br	x17

0000000000402890 <posix_spawnattr_setsigmask@plt>:
  402890:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #496]
  402898:	add	x16, x16, #0x1f0
  40289c:	br	x17

00000000004028a0 <posix_spawn_file_actions_init@plt>:
  4028a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #504]
  4028a8:	add	x16, x16, #0x1f8
  4028ac:	br	x17

00000000004028b0 <getopt_long@plt>:
  4028b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #512]
  4028b8:	add	x16, x16, #0x200
  4028bc:	br	x17

00000000004028c0 <__fprintf_chk@plt>:
  4028c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #520]
  4028c8:	add	x16, x16, #0x208
  4028cc:	br	x17

00000000004028d0 <strcmp@plt>:
  4028d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #528]
  4028d8:	add	x16, x16, #0x210
  4028dc:	br	x17

00000000004028e0 <__ctype_b_loc@plt>:
  4028e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #536]
  4028e8:	add	x16, x16, #0x218
  4028ec:	br	x17

00000000004028f0 <rmdir@plt>:
  4028f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #544]
  4028f8:	add	x16, x16, #0x220
  4028fc:	br	x17

0000000000402900 <strtol@plt>:
  402900:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #552]
  402908:	add	x16, x16, #0x228
  40290c:	br	x17

0000000000402910 <fseeko@plt>:
  402910:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #560]
  402918:	add	x16, x16, #0x230
  40291c:	br	x17

0000000000402920 <fread@plt>:
  402920:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #568]
  402928:	add	x16, x16, #0x238
  40292c:	br	x17

0000000000402930 <free@plt>:
  402930:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #576]
  402938:	add	x16, x16, #0x240
  40293c:	br	x17

0000000000402940 <ungetc@plt>:
  402940:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #584]
  402948:	add	x16, x16, #0x248
  40294c:	br	x17

0000000000402950 <__ctype_get_mb_cur_max@plt>:
  402950:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #592]
  402958:	add	x16, x16, #0x250
  40295c:	br	x17

0000000000402960 <posix_spawnp@plt>:
  402960:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #600]
  402968:	add	x16, x16, #0x258
  40296c:	br	x17

0000000000402970 <__deregister_frame_info@plt>:
  402970:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #608]
  402978:	add	x16, x16, #0x260
  40297c:	br	x17

0000000000402980 <__register_frame_info@plt>:
  402980:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #616]
  402988:	add	x16, x16, #0x268
  40298c:	br	x17

0000000000402990 <strchr@plt>:
  402990:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #624]
  402998:	add	x16, x16, #0x270
  40299c:	br	x17

00000000004029a0 <rename@plt>:
  4029a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #632]
  4029a8:	add	x16, x16, #0x278
  4029ac:	br	x17

00000000004029b0 <fwrite@plt>:
  4029b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #640]
  4029b8:	add	x16, x16, #0x280
  4029bc:	br	x17

00000000004029c0 <fcntl@plt>:
  4029c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #648]
  4029c8:	add	x16, x16, #0x288
  4029cc:	br	x17

00000000004029d0 <fflush@plt>:
  4029d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #656]
  4029d8:	add	x16, x16, #0x290
  4029dc:	br	x17

00000000004029e0 <strcpy@plt>:
  4029e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #664]
  4029e8:	add	x16, x16, #0x298
  4029ec:	br	x17

00000000004029f0 <posix_spawnattr_init@plt>:
  4029f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #672]
  4029f8:	add	x16, x16, #0x2a0
  4029fc:	br	x17

0000000000402a00 <memchr@plt>:
  402a00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #680]
  402a08:	add	x16, x16, #0x2a8
  402a0c:	br	x17

0000000000402a10 <mkstemp@plt>:
  402a10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #688]
  402a18:	add	x16, x16, #0x2b0
  402a1c:	br	x17

0000000000402a20 <__mempcpy_chk@plt>:
  402a20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #696]
  402a28:	add	x16, x16, #0x2b8
  402a2c:	br	x17

0000000000402a30 <__fxstat@plt>:
  402a30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #704]
  402a38:	add	x16, x16, #0x2c0
  402a3c:	br	x17

0000000000402a40 <strstr@plt>:
  402a40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #712]
  402a48:	add	x16, x16, #0x2c8
  402a4c:	br	x17

0000000000402a50 <fputs_unlocked@plt>:
  402a50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #720]
  402a58:	add	x16, x16, #0x2d0
  402a5c:	br	x17

0000000000402a60 <__freading@plt>:
  402a60:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #728]
  402a68:	add	x16, x16, #0x2d8
  402a6c:	br	x17

0000000000402a70 <regfree@plt>:
  402a70:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #736]
  402a78:	add	x16, x16, #0x2e0
  402a7c:	br	x17

0000000000402a80 <strsignal@plt>:
  402a80:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #744]
  402a88:	add	x16, x16, #0x2e8
  402a8c:	br	x17

0000000000402a90 <sigaddset@plt>:
  402a90:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #752]
  402a98:	add	x16, x16, #0x2f0
  402a9c:	br	x17

0000000000402aa0 <iswprint@plt>:
  402aa0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #760]
  402aa8:	add	x16, x16, #0x2f8
  402aac:	br	x17

0000000000402ab0 <__assert_fail@plt>:
  402ab0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #768]
  402ab8:	add	x16, x16, #0x300
  402abc:	br	x17

0000000000402ac0 <__errno_location@plt>:
  402ac0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #776]
  402ac8:	add	x16, x16, #0x308
  402acc:	br	x17

0000000000402ad0 <getenv@plt>:
  402ad0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #784]
  402ad8:	add	x16, x16, #0x310
  402adc:	br	x17

0000000000402ae0 <putchar@plt>:
  402ae0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #792]
  402ae8:	add	x16, x16, #0x318
  402aec:	br	x17

0000000000402af0 <__xstat@plt>:
  402af0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #800]
  402af8:	add	x16, x16, #0x320
  402afc:	br	x17

0000000000402b00 <waitpid@plt>:
  402b00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #808]
  402b08:	add	x16, x16, #0x328
  402b0c:	br	x17

0000000000402b10 <unlink@plt>:
  402b10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #816]
  402b18:	add	x16, x16, #0x330
  402b1c:	br	x17

0000000000402b20 <error_at_line@plt>:
  402b20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #824]
  402b28:	add	x16, x16, #0x338
  402b2c:	br	x17

0000000000402b30 <__uflow@plt>:
  402b30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #832]
  402b38:	add	x16, x16, #0x340
  402b3c:	br	x17

0000000000402b40 <setlocale@plt>:
  402b40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #840]
  402b48:	add	x16, x16, #0x348
  402b4c:	br	x17

0000000000402b50 <ferror@plt>:
  402b50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #848]
  402b58:	add	x16, x16, #0x350
  402b5c:	br	x17

Disassembly of section .text:

0000000000402b60 <_obstack_begin@@Base-0x153a4>:
  402b60:	mov	x29, #0x0                   	// #0
  402b64:	mov	x30, #0x0                   	// #0
  402b68:	mov	x5, x0
  402b6c:	ldr	x1, [sp]
  402b70:	add	x2, sp, #0x8
  402b74:	mov	x6, sp
  402b78:	movz	x0, #0x0, lsl #48
  402b7c:	movk	x0, #0x0, lsl #32
  402b80:	movk	x0, #0x40, lsl #16
  402b84:	movk	x0, #0x2d94
  402b88:	movz	x3, #0x0, lsl #48
  402b8c:	movk	x3, #0x0, lsl #32
  402b90:	movk	x3, #0x41, lsl #16
  402b94:	movk	x3, #0x8ae8
  402b98:	movz	x4, #0x0, lsl #48
  402b9c:	movk	x4, #0x0, lsl #32
  402ba0:	movk	x4, #0x41, lsl #16
  402ba4:	movk	x4, #0x8b68
  402ba8:	bl	402710 <__libc_start_main@plt>
  402bac:	bl	402860 <abort@plt>
  402bb0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x13d94>
  402bb4:	ldr	x0, [x0, #4048]
  402bb8:	cbz	x0, 402bc0 <ferror@plt+0x70>
  402bbc:	b	402820 <__gmon_start__@plt>
  402bc0:	ret
  402bc4:	stp	x29, x30, [sp, #-16]!
  402bc8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402bcc:	ldrb	w9, [x8, #1088]
  402bd0:	mov	x29, sp
  402bd4:	tbnz	w9, #0, 402c00 <ferror@plt+0xb0>
  402bd8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x13d94>
  402bdc:	ldr	x10, [x10, #4064]
  402be0:	mov	w9, #0x1                   	// #1
  402be4:	strb	w9, [x8, #1088]
  402be8:	cbz	x10, 402c00 <ferror@plt+0xb0>
  402bec:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  402bf0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402bf4:	add	x0, x0, #0x690
  402bf8:	add	x1, x1, #0x448
  402bfc:	bl	402980 <__register_frame_info@plt>
  402c00:	ldp	x29, x30, [sp], #16
  402c04:	ret
  402c08:	stp	x29, x30, [sp, #-16]!
  402c0c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402c10:	ldrb	w9, [x8, #1160]
  402c14:	mov	x29, sp
  402c18:	tbnz	w9, #0, 402c54 <ferror@plt+0x104>
  402c1c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x13d94>
  402c20:	ldr	x10, [x10, #4040]
  402c24:	mov	w9, #0x1                   	// #1
  402c28:	strb	w9, [x8, #1160]
  402c2c:	cbz	x10, 402c3c <ferror@plt+0xec>
  402c30:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402c34:	ldr	x0, [x8, #864]
  402c38:	bl	402590 <__cxa_finalize@plt>
  402c3c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x13d94>
  402c40:	ldr	x8, [x8, #4056]
  402c44:	cbz	x8, 402c54 <ferror@plt+0x104>
  402c48:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  402c4c:	add	x0, x0, #0x690
  402c50:	bl	402970 <__deregister_frame_info@plt>
  402c54:	ldp	x29, x30, [sp], #16
  402c58:	ret
  402c5c:	sub	sp, sp, #0x100
  402c60:	stp	x29, x30, [sp, #240]
  402c64:	add	x29, sp, #0xf0
  402c68:	mov	x9, #0xffffffffffffffd8    	// #-40
  402c6c:	mov	x10, sp
  402c70:	sub	x11, x29, #0x68
  402c74:	adrp	x13, 438000 <__progname@@GLIBC_2.17+0xabc8>
  402c78:	stp	x3, x4, [x29, #-104]
  402c7c:	movk	x9, #0xff80, lsl #32
  402c80:	add	x12, x29, #0x10
  402c84:	adrp	x14, 438000 <__progname@@GLIBC_2.17+0xabc8>
  402c88:	add	x10, x10, #0x80
  402c8c:	add	x11, x11, #0x28
  402c90:	ldr	w3, [x13, #3496]
  402c94:	ldr	x13, [x14, #3520]
  402c98:	stp	x10, x9, [x29, #-16]
  402c9c:	stp	x12, x11, [x29, #-32]
  402ca0:	stp	x5, x6, [x29, #-88]
  402ca4:	stur	x7, [x29, #-72]
  402ca8:	stp	q1, q2, [sp, #16]
  402cac:	str	q0, [sp]
  402cb0:	ldp	q0, q1, [x29, #-32]
  402cb4:	mov	x8, x2
  402cb8:	cmp	w3, #0x0
  402cbc:	csel	x2, xzr, x13, eq  // eq = none
  402cc0:	sub	x5, x29, #0x40
  402cc4:	mov	x4, x8
  402cc8:	stp	q3, q4, [sp, #48]
  402ccc:	stp	q5, q6, [sp, #80]
  402cd0:	str	q7, [sp, #112]
  402cd4:	stp	q0, q1, [x29, #-64]
  402cd8:	bl	4167f0 <ferror@plt+0x13ca0>
  402cdc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  402ce0:	ldr	w9, [x8, #3488]
  402ce4:	cbnz	w9, 402cfc <ferror@plt+0x1ac>
  402ce8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402cec:	ldrb	w9, [x9, #1196]
  402cf0:	cbz	w9, 402cfc <ferror@plt+0x1ac>
  402cf4:	mov	w9, #0x1                   	// #1
  402cf8:	str	w9, [x8, #3488]
  402cfc:	ldp	x29, x30, [sp, #240]
  402d00:	add	sp, sp, #0x100
  402d04:	ret
  402d08:	sub	sp, sp, #0xf0
  402d0c:	stp	x29, x30, [sp, #224]
  402d10:	add	x29, sp, #0xe0
  402d14:	mov	x8, #0xffffffffffffffe8    	// #-24
  402d18:	mov	x9, sp
  402d1c:	sub	x10, x29, #0x58
  402d20:	movk	x8, #0xff80, lsl #32
  402d24:	add	x11, x29, #0x10
  402d28:	add	x9, x9, #0x80
  402d2c:	add	x10, x10, #0x18
  402d30:	stp	x9, x8, [x29, #-16]
  402d34:	stp	x11, x10, [x29, #-32]
  402d38:	stp	x5, x6, [x29, #-88]
  402d3c:	stur	x7, [x29, #-72]
  402d40:	stp	q0, q1, [sp]
  402d44:	ldp	q0, q1, [x29, #-32]
  402d48:	cmp	w3, #0x0
  402d4c:	csel	x2, xzr, x2, eq  // eq = none
  402d50:	sub	x5, x29, #0x40
  402d54:	stp	q2, q3, [sp, #32]
  402d58:	stp	q4, q5, [sp, #64]
  402d5c:	stp	q6, q7, [sp, #96]
  402d60:	stp	q0, q1, [x29, #-64]
  402d64:	bl	4167f0 <ferror@plt+0x13ca0>
  402d68:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  402d6c:	ldr	w9, [x8, #3488]
  402d70:	cbnz	w9, 402d88 <ferror@plt+0x238>
  402d74:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402d78:	ldrb	w9, [x9, #1196]
  402d7c:	cbz	w9, 402d88 <ferror@plt+0x238>
  402d80:	mov	w9, #0x1                   	// #1
  402d84:	str	w9, [x8, #3488]
  402d88:	ldp	x29, x30, [sp, #224]
  402d8c:	add	sp, sp, #0xf0
  402d90:	ret
  402d94:	sub	sp, sp, #0x120
  402d98:	stp	x29, x30, [sp, #192]
  402d9c:	stp	x28, x27, [sp, #208]
  402da0:	stp	x26, x25, [sp, #224]
  402da4:	stp	x24, x23, [sp, #240]
  402da8:	stp	x22, x21, [sp, #256]
  402dac:	stp	x20, x19, [sp, #272]
  402db0:	ldr	x8, [x1]
  402db4:	mov	w20, w0
  402db8:	add	x29, sp, #0xc0
  402dbc:	mov	x19, x1
  402dc0:	mov	x0, x8
  402dc4:	bl	4146b4 <ferror@plt+0x11b64>
  402dc8:	adrp	x0, 412000 <ferror@plt+0xf4b0>
  402dcc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  402dd0:	add	x0, x0, #0x354
  402dd4:	str	wzr, [x8, #3488]
  402dd8:	bl	418b70 <_obstack_memory_used@@Base+0x904>
  402ddc:	bl	4100d0 <ferror@plt+0xd580>
  402de0:	bl	408848 <ferror@plt+0x5cf8>
  402de4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  402de8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0xd94>
  402dec:	add	x0, x0, #0xc8
  402df0:	add	x1, x1, #0x100
  402df4:	bl	417aa4 <ferror@plt+0x14f54>
  402df8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402dfc:	str	x0, [x8, #1200]
  402e00:	mov	w0, #0xb                   	// #11
  402e04:	bl	402a80 <strsignal@plt>
  402e08:	bl	4175c4 <ferror@plt+0x14a74>
  402e0c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402e10:	add	x21, x21, #0x4d8
  402e14:	str	x0, [x21, #56]
  402e18:	mov	w0, #0x6                   	// #6
  402e1c:	bl	402a80 <strsignal@plt>
  402e20:	bl	4175c4 <ferror@plt+0x14a74>
  402e24:	str	x0, [x21, #16]
  402e28:	mov	w0, #0x4                   	// #4
  402e2c:	bl	402a80 <strsignal@plt>
  402e30:	bl	4175c4 <ferror@plt+0x14a74>
  402e34:	str	x0, [x21]
  402e38:	mov	w0, #0x8                   	// #8
  402e3c:	bl	402a80 <strsignal@plt>
  402e40:	bl	4175c4 <ferror@plt+0x14a74>
  402e44:	str	x0, [x21, #32]
  402e48:	mov	w0, #0x7                   	// #7
  402e4c:	bl	402a80 <strsignal@plt>
  402e50:	bl	4175c4 <ferror@plt+0x14a74>
  402e54:	add	x8, sp, #0x20
  402e58:	str	x0, [x21, #24]
  402e5c:	add	x0, x8, #0x8
  402e60:	bl	4026e0 <sigemptyset@plt>
  402e64:	adrp	x21, 403000 <ferror@plt+0x4b0>
  402e68:	mov	w8, #0xc0000000            	// #-1073741824
  402e6c:	add	x21, x21, #0x410
  402e70:	add	x1, sp, #0x20
  402e74:	mov	w0, #0xb                   	// #11
  402e78:	mov	x2, xzr
  402e7c:	str	w8, [sp, #168]
  402e80:	str	x21, [sp, #32]
  402e84:	bl	402800 <sigaction@plt>
  402e88:	add	x1, sp, #0x20
  402e8c:	mov	w0, #0x6                   	// #6
  402e90:	mov	x2, xzr
  402e94:	bl	402800 <sigaction@plt>
  402e98:	add	x1, sp, #0x20
  402e9c:	mov	w0, #0x4                   	// #4
  402ea0:	mov	x2, xzr
  402ea4:	bl	402800 <sigaction@plt>
  402ea8:	add	x1, sp, #0x20
  402eac:	mov	w0, #0x8                   	// #8
  402eb0:	mov	x2, xzr
  402eb4:	bl	402800 <sigaction@plt>
  402eb8:	add	x1, sp, #0x20
  402ebc:	mov	w0, #0x7                   	// #7
  402ec0:	mov	x2, xzr
  402ec4:	bl	402800 <sigaction@plt>
  402ec8:	mov	x0, x21
  402ecc:	bl	4111e8 <ferror@plt+0xe698>
  402ed0:	cbnz	w0, 402edc <ferror@plt+0x38c>
  402ed4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402ed8:	str	wzr, [x8, #880]
  402edc:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  402ee0:	adrp	x26, 419000 <_obstack_memory_used@@Base+0xd94>
  402ee4:	adrp	x27, 418000 <_obstack_begin_1@@Base+0x54>
  402ee8:	adrp	x25, 418000 <_obstack_begin_1@@Base+0x54>
  402eec:	mov	w9, wzr
  402ef0:	mov	x0, xzr
  402ef4:	mov	x10, xzr
  402ef8:	add	x8, x8, #0x67f
  402efc:	add	x26, x26, #0x10f
  402f00:	add	x27, x27, #0xda8
  402f04:	add	x25, x25, #0xb98
  402f08:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402f0c:	stp	xzr, xzr, [sp, #16]
  402f10:	stp	xzr, x8, [sp]
  402f14:	mov	x23, x0
  402f18:	mov	w0, w20
  402f1c:	mov	x1, x19
  402f20:	mov	x2, x26
  402f24:	mov	x3, x27
  402f28:	mov	x4, xzr
  402f2c:	mov	x22, x10
  402f30:	mov	w24, w9
  402f34:	bl	4028b0 <getopt_long@plt>
  402f38:	add	w8, w0, #0x1
  402f3c:	cmp	w8, #0x105
  402f40:	b.hi	4033c8 <ferror@plt+0x878>  // b.pmore
  402f44:	adr	x11, 402f14 <ferror@plt+0x3c4>
  402f48:	ldrh	w9, [x25, x8, lsl #1]
  402f4c:	add	x11, x11, x9, lsl #2
  402f50:	mov	w21, w0
  402f54:	mov	w9, #0x1                   	// #1
  402f58:	mov	x0, x23
  402f5c:	mov	x10, x22
  402f60:	br	x11
  402f64:	mov	w0, #0x18                  	// #24
  402f68:	bl	417280 <ferror@plt+0x14730>
  402f6c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402f70:	ldr	x8, [x8, #1040]
  402f74:	mov	w9, w24
  402f78:	mov	x10, x0
  402f7c:	str	w21, [x0, #8]
  402f80:	str	x8, [x0, #16]
  402f84:	str	xzr, [x0]
  402f88:	cbz	x22, 402f14 <ferror@plt+0x3c4>
  402f8c:	str	x0, [x23]
  402f90:	mov	w9, w24
  402f94:	mov	x10, x22
  402f98:	b	402f14 <ferror@plt+0x3c4>
  402f9c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  402fa0:	mov	w0, wzr
  402fa4:	mov	w1, wzr
  402fa8:	add	x2, x2, #0x138
  402fac:	mov	w3, w21
  402fb0:	bl	402540 <error@plt>
  402fb4:	b	403170 <ferror@plt+0x620>
  402fb8:	adrp	x8, 419000 <_obstack_memory_used@@Base+0xd94>
  402fbc:	adrp	x9, 419000 <_obstack_memory_used@@Base+0xd94>
  402fc0:	cmp	w21, #0x4e
  402fc4:	add	x8, x8, #0x18f
  402fc8:	add	x9, x9, #0x18c
  402fcc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  402fd0:	csel	x3, x9, x8, eq  // eq = none
  402fd4:	mov	w0, wzr
  402fd8:	mov	w1, wzr
  402fdc:	add	x2, x2, #0x16d
  402fe0:	bl	402540 <error@plt>
  402fe4:	b	403170 <ferror@plt+0x620>
  402fe8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402fec:	ldr	x8, [x8, #1040]
  402ff0:	str	x8, [sp, #24]
  402ff4:	b	403170 <ferror@plt+0x620>
  402ff8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  402ffc:	ldr	x0, [x8, #1040]
  403000:	bl	4089cc <ferror@plt+0x5e7c>
  403004:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403008:	mov	w8, w0
  40300c:	str	w0, [x9, #1172]
  403010:	mov	w9, w24
  403014:	mov	x0, x23
  403018:	mov	x10, x22
  40301c:	tbz	w8, #31, 402f14 <ferror@plt+0x3c4>
  403020:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403024:	ldr	x3, [x8, #1040]
  403028:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40302c:	mov	w0, wzr
  403030:	mov	w1, wzr
  403034:	add	x2, x2, #0x4e8
  403038:	bl	402540 <error@plt>
  40303c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403040:	str	wzr, [x8, #1172]
  403044:	b	403170 <ferror@plt+0x620>
  403048:	mov	w8, #0x1                   	// #1
  40304c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403050:	str	w8, [x9, #1176]
  403054:	b	403170 <ferror@plt+0x620>
  403058:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40305c:	ldr	x0, [x8, #1040]
  403060:	bl	410210 <ferror@plt+0xd6c0>
  403064:	b	403170 <ferror@plt+0x620>
  403068:	mov	w8, #0x1                   	// #1
  40306c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403070:	str	w8, [x9, #1188]
  403074:	b	403170 <ferror@plt+0x620>
  403078:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  40307c:	mov	w0, wzr
  403080:	mov	w1, wzr
  403084:	add	x2, x2, #0x19c
  403088:	bl	402540 <error@plt>
  40308c:	mov	w9, #0x1                   	// #1
  403090:	b	403174 <ferror@plt+0x624>
  403094:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403098:	str	wzr, [x8, #1176]
  40309c:	b	403170 <ferror@plt+0x620>
  4030a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4030a4:	ldr	x0, [x8, #1040]
  4030a8:	mov	w2, #0xa                   	// #10
  4030ac:	mov	x1, xzr
  4030b0:	bl	402900 <strtol@plt>
  4030b4:	cmp	x0, #0x0
  4030b8:	mov	w8, #0x1fd                 	// #509
  4030bc:	csel	x8, x8, x0, eq  // eq = none
  4030c0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4030c4:	str	x8, [x9, #872]
  4030c8:	b	403170 <ferror@plt+0x620>
  4030cc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4030d0:	ldr	x8, [x8, #1040]
  4030d4:	str	x8, [sp, #8]
  4030d8:	b	403170 <ferror@plt+0x620>
  4030dc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4030e0:	ldr	x8, [x8, #1040]
  4030e4:	str	x8, [sp]
  4030e8:	b	403170 <ferror@plt+0x620>
  4030ec:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4030f0:	ldr	x0, [x8, #1040]
  4030f4:	mov	w2, #0xa                   	// #10
  4030f8:	mov	x1, xzr
  4030fc:	bl	402900 <strtol@plt>
  403100:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403104:	str	w0, [x8, #880]
  403108:	b	403170 <ferror@plt+0x620>
  40310c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403110:	ldrb	w8, [x9, #1196]
  403114:	tbz	w8, #0, 403168 <ferror@plt+0x618>
  403118:	mov	w8, #0x1                   	// #1
  40311c:	str	w8, [x28, #1192]
  403120:	b	403170 <ferror@plt+0x620>
  403124:	mov	w8, #0x1                   	// #1
  403128:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40312c:	str	w8, [x9, #1180]
  403130:	b	403170 <ferror@plt+0x620>
  403134:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403138:	ldr	x8, [x8, #1040]
  40313c:	str	x8, [sp, #16]
  403140:	b	403170 <ferror@plt+0x620>
  403144:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403148:	ldr	x0, [x8, #1040]
  40314c:	mov	w2, #0xa                   	// #10
  403150:	mov	x1, xzr
  403154:	bl	402900 <strtol@plt>
  403158:	bic	w8, w0, w0, asr #31
  40315c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403160:	str	w8, [x9, #1184]
  403164:	b	403170 <ferror@plt+0x620>
  403168:	mov	w8, #0x1                   	// #1
  40316c:	strb	w8, [x9, #1196]
  403170:	mov	w9, w24
  403174:	mov	x0, x23
  403178:	mov	x10, x22
  40317c:	b	402f14 <ferror@plt+0x3c4>
  403180:	ldr	x23, [sp, #24]
  403184:	cbz	x23, 4031b4 <ferror@plt+0x664>
  403188:	mov	x0, x23
  40318c:	bl	408b9c <ferror@plt+0x604c>
  403190:	tbnz	w0, #0, 4031b4 <ferror@plt+0x664>
  403194:	ldr	w21, [x28, #1192]
  403198:	bl	402ac0 <__errno_location@plt>
  40319c:	ldr	w1, [x0]
  4031a0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  4031a4:	add	x2, x2, #0x1e5
  4031a8:	mov	w0, w21
  4031ac:	mov	x3, x23
  4031b0:	bl	402c5c <ferror@plt+0x10c>
  4031b4:	bl	40c598 <ferror@plt+0x9a48>
  4031b8:	bl	40df3c <ferror@plt+0xb3ec>
  4031bc:	bl	4104a8 <ferror@plt+0xd958>
  4031c0:	ldr	x0, [sp, #8]
  4031c4:	bl	403800 <ferror@plt+0xcb0>
  4031c8:	bl	4100ec <ferror@plt+0xd59c>
  4031cc:	ldr	x0, [sp, #16]
  4031d0:	cbz	x0, 40333c <ferror@plt+0x7ec>
  4031d4:	bl	40b370 <ferror@plt+0x8820>
  4031d8:	tbz	w24, #0, 4031f8 <ferror@plt+0x6a8>
  4031dc:	mov	w0, #0x2                   	// #2
  4031e0:	mov	w1, #0x1                   	// #1
  4031e4:	bl	402650 <signal@plt>
  4031e8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4031ec:	ldr	x0, [x8, #1056]
  4031f0:	mov	x1, xzr
  4031f4:	bl	402580 <setbuf@plt>
  4031f8:	mov	w25, wzr
  4031fc:	cbz	x22, 403318 <ferror@plt+0x7c8>
  403200:	adrp	x8, 419000 <_obstack_memory_used@@Base+0xd94>
  403204:	add	x8, x8, #0x200
  403208:	cmp	x23, #0x0
  40320c:	adrp	x24, 419000 <_obstack_memory_used@@Base+0xd94>
  403210:	mov	w26, #0x1                   	// #1
  403214:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403218:	csel	x23, x23, x8, ne  // ne = any
  40321c:	add	x24, x24, #0x1e5
  403220:	b	403244 <ferror@plt+0x6f4>
  403224:	ldr	x0, [x22, #16]
  403228:	bl	403638 <ferror@plt+0xae8>
  40322c:	mov	w25, #0x1                   	// #1
  403230:	ldr	x21, [x22]
  403234:	mov	x0, x22
  403238:	bl	402930 <free@plt>
  40323c:	mov	x22, x21
  403240:	cbz	x21, 403318 <ferror@plt+0x7c8>
  403244:	ldr	w8, [x22, #8]
  403248:	cmp	w8, #0x72
  40324c:	b.gt	403298 <ferror@plt+0x748>
  403250:	cmp	w8, #0x1
  403254:	b.eq	403224 <ferror@plt+0x6d4>  // b.none
  403258:	cmp	w8, #0x44
  40325c:	b.ne	4032cc <ferror@plt+0x77c>  // b.any
  403260:	ldr	x0, [x22, #16]
  403264:	bl	4175c4 <ferror@plt+0x14a74>
  403268:	mov	w1, #0x3d                  	// #61
  40326c:	mov	x21, x0
  403270:	bl	402990 <strchr@plt>
  403274:	mov	x1, x0
  403278:	cbz	x0, 403280 <ferror@plt+0x730>
  40327c:	strb	wzr, [x1], #1
  403280:	mov	w2, #0x1                   	// #1
  403284:	mov	x0, x21
  403288:	bl	4038d0 <ferror@plt+0xd80>
  40328c:	mov	x0, x21
  403290:	bl	402930 <free@plt>
  403294:	b	403230 <ferror@plt+0x6e0>
  403298:	cmp	w8, #0x73
  40329c:	b.eq	4032c4 <ferror@plt+0x774>  // b.none
  4032a0:	cmp	w8, #0x74
  4032a4:	b.ne	4032e4 <ferror@plt+0x794>  // b.any
  4032a8:	ldr	x0, [x22, #16]
  4032ac:	mov	w1, #0x1                   	// #1
  4032b0:	bl	41059c <ferror@plt+0xda4c>
  4032b4:	ldrb	w8, [x0, #8]
  4032b8:	orr	w8, w8, #0x1
  4032bc:	strb	w8, [x0, #8]
  4032c0:	b	403230 <ferror@plt+0x6e0>
  4032c4:	str	w26, [x27, #1168]
  4032c8:	b	403230 <ferror@plt+0x6e0>
  4032cc:	cmp	w8, #0x55
  4032d0:	b.ne	4033b0 <ferror@plt+0x860>  // b.any
  4032d4:	ldr	x0, [x22, #16]
  4032d8:	mov	w1, #0x2                   	// #2
  4032dc:	bl	41059c <ferror@plt+0xda4c>
  4032e0:	b	403230 <ferror@plt+0x6e0>
  4032e4:	cmp	w8, #0x100
  4032e8:	b.ne	4033b0 <ferror@plt+0x860>  // b.any
  4032ec:	ldr	x0, [x22, #16]
  4032f0:	bl	408b9c <ferror@plt+0x604c>
  4032f4:	tbnz	w0, #0, 403230 <ferror@plt+0x6e0>
  4032f8:	ldr	w21, [x28, #1192]
  4032fc:	bl	402ac0 <__errno_location@plt>
  403300:	ldr	w1, [x0]
  403304:	mov	w0, w21
  403308:	mov	x2, x24
  40330c:	mov	x3, x23
  403310:	bl	402c5c <ferror@plt+0x10c>
  403314:	b	403230 <ferror@plt+0x6e0>
  403318:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40331c:	ldr	w8, [x21, #1048]
  403320:	tbnz	w25, #0, 403348 <ferror@plt+0x7f8>
  403324:	cmp	w8, w20
  403328:	b.ne	403348 <ferror@plt+0x7f8>  // b.any
  40332c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  403330:	add	x0, x0, #0x54e
  403334:	bl	403638 <ferror@plt+0xae8>
  403338:	b	403374 <ferror@plt+0x824>
  40333c:	bl	403a6c <ferror@plt+0xf1c>
  403340:	tbnz	w24, #0, 4031dc <ferror@plt+0x68c>
  403344:	b	4031f8 <ferror@plt+0x6a8>
  403348:	cmp	w8, w20
  40334c:	b.ge	403374 <ferror@plt+0x824>  // b.tcont
  403350:	ldr	x0, [x19, w8, sxtw #3]
  403354:	bl	403638 <ferror@plt+0xae8>
  403358:	ldr	w8, [x21, #1048]
  40335c:	add	w8, w8, #0x1
  403360:	cmp	w8, w20
  403364:	str	w8, [x21, #1048]
  403368:	b.lt	403350 <ferror@plt+0x800>  // b.tstop
  40336c:	b	403374 <ferror@plt+0x824>
  403370:	bl	40d6fc <ferror@plt+0xabac>
  403374:	bl	40c2bc <ferror@plt+0x976c>
  403378:	tbnz	w0, #0, 403370 <ferror@plt+0x820>
  40337c:	mov	x0, xzr
  403380:	bl	408b9c <ferror@plt+0x604c>
  403384:	ldr	x0, [sp]
  403388:	cbnz	x0, 403398 <ferror@plt+0x848>
  40338c:	bl	40f214 <ferror@plt+0xc6c4>
  403390:	bl	40fbf8 <ferror@plt+0xd0a8>
  403394:	b	40339c <ferror@plt+0x84c>
  403398:	bl	40afd8 <ferror@plt+0x8488>
  40339c:	bl	40dfd0 <ferror@plt+0xb480>
  4033a0:	bl	403898 <ferror@plt+0xd48>
  4033a4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4033a8:	ldr	w0, [x8, #3488]
  4033ac:	bl	402520 <exit@plt>
  4033b0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  4033b4:	add	x2, x2, #0x207
  4033b8:	mov	w0, wzr
  4033bc:	mov	w1, wzr
  4033c0:	bl	402c5c <ferror@plt+0x10c>
  4033c4:	bl	402860 <abort@plt>
  4033c8:	mov	w0, #0x1                   	// #1
  4033cc:	bl	4034e4 <ferror@plt+0x994>
  4033d0:	mov	w0, wzr
  4033d4:	bl	4034e4 <ferror@plt+0x994>
  4033d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4033dc:	ldr	x0, [x8, #1056]
  4033e0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0xd94>
  4033e4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  4033e8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4033ec:	adrp	x4, 419000 <_obstack_memory_used@@Base+0xd94>
  4033f0:	add	x1, x1, #0x1cd
  4033f4:	add	x2, x2, #0x1d0
  4033f8:	add	x3, x3, #0xee5
  4033fc:	add	x4, x4, #0x1d7
  403400:	mov	x5, xzr
  403404:	bl	416e10 <ferror@plt+0x142c0>
  403408:	mov	w0, wzr
  40340c:	bl	402520 <exit@plt>
  403410:	cbnz	w0, 403418 <ferror@plt+0x8c8>
  403414:	ret
  403418:	stp	x29, x30, [sp, #-48]!
  40341c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  403420:	stp	x20, x19, [sp, #32]
  403424:	ldr	x19, [x8, #2888]
  403428:	str	x21, [sp, #16]
  40342c:	mov	x21, x0
  403430:	mov	x29, sp
  403434:	mov	x0, x19
  403438:	bl	4024f0 <strlen@plt>
  40343c:	mov	x2, x0
  403440:	mov	w0, #0x2                   	// #2
  403444:	mov	x1, x19
  403448:	bl	402830 <write@plt>
  40344c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403450:	add	x1, x1, #0xb01
  403454:	mov	w0, #0x2                   	// #2
  403458:	mov	w2, #0x2                   	// #2
  40345c:	bl	402830 <write@plt>
  403460:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403464:	ldr	x19, [x8, #1200]
  403468:	ldr	x0, [x8, #1200]
  40346c:	bl	4024f0 <strlen@plt>
  403470:	mov	x2, x0
  403474:	mov	w0, #0x2                   	// #2
  403478:	mov	x1, x19
  40347c:	bl	402830 <write@plt>
  403480:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403484:	add	x20, x20, #0x4b8
  403488:	ldr	x9, [x20, w21, sxtw #3]
  40348c:	cbz	x9, 4034c8 <ferror@plt+0x978>
  403490:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403494:	add	x1, x1, #0xb01
  403498:	mov	w0, #0x2                   	// #2
  40349c:	mov	w2, #0x2                   	// #2
  4034a0:	sxtw	x19, w21
  4034a4:	bl	402830 <write@plt>
  4034a8:	lsl	x8, x19, #3
  4034ac:	ldr	x19, [x20, x8]
  4034b0:	ldr	x0, [x20, x8]
  4034b4:	bl	4024f0 <strlen@plt>
  4034b8:	mov	x2, x0
  4034bc:	mov	w0, #0x2                   	// #2
  4034c0:	mov	x1, x19
  4034c4:	bl	402830 <write@plt>
  4034c8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4034cc:	add	x1, x1, #0x371
  4034d0:	mov	w0, #0x2                   	// #2
  4034d4:	mov	w2, #0x1                   	// #1
  4034d8:	bl	402830 <write@plt>
  4034dc:	mov	w0, #0x2                   	// #2
  4034e0:	bl	4024e0 <_exit@plt>
  4034e4:	stp	x29, x30, [sp, #-32]!
  4034e8:	stp	x20, x19, [sp, #16]
  4034ec:	mov	w19, w0
  4034f0:	mov	x29, sp
  4034f4:	cbnz	w0, 403614 <ferror@plt+0xac4>
  4034f8:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4034fc:	ldr	x1, [x8, #2888]
  403500:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403504:	add	x0, x0, #0x32f
  403508:	bl	417664 <ferror@plt+0x14b14>
  40350c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403510:	ldr	x3, [x20, #1056]
  403514:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403518:	add	x0, x0, #0x350
  40351c:	mov	w1, #0x50                  	// #80
  403520:	mov	w2, #0x1                   	// #1
  403524:	bl	4029b0 <fwrite@plt>
  403528:	ldr	x3, [x20, #1056]
  40352c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403530:	add	x0, x0, #0x3a1
  403534:	mov	w1, #0xf1                  	// #241
  403538:	mov	w2, #0x1                   	// #1
  40353c:	bl	4029b0 <fwrite@plt>
  403540:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403544:	adrp	x1, 419000 <_obstack_memory_used@@Base+0xd94>
  403548:	add	x0, x0, #0x493
  40354c:	add	x1, x1, #0x679
  403550:	bl	417664 <ferror@plt+0x14b14>
  403554:	ldr	x3, [x20, #1056]
  403558:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  40355c:	add	x0, x0, #0x694
  403560:	mov	w1, #0x10b                 	// #267
  403564:	mov	w2, #0x1                   	// #1
  403568:	bl	4029b0 <fwrite@plt>
  40356c:	mov	w0, #0xa                   	// #10
  403570:	bl	402ae0 <putchar@plt>
  403574:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403578:	ldr	w1, [x8, #880]
  40357c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403580:	add	x0, x0, #0x7a0
  403584:	bl	417664 <ferror@plt+0x14b14>
  403588:	mov	w0, #0xa                   	// #10
  40358c:	bl	402ae0 <putchar@plt>
  403590:	ldr	x3, [x20, #1056]
  403594:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  403598:	add	x0, x0, #0x8c4
  40359c:	mov	w1, #0xa1                  	// #161
  4035a0:	mov	w2, #0x1                   	// #1
  4035a4:	bl	4029b0 <fwrite@plt>
  4035a8:	ldr	x3, [x20, #1056]
  4035ac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  4035b0:	add	x0, x0, #0x966
  4035b4:	mov	w1, #0x15e                 	// #350
  4035b8:	mov	w2, #0x1                   	// #1
  4035bc:	bl	4029b0 <fwrite@plt>
  4035c0:	ldr	x3, [x20, #1056]
  4035c4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  4035c8:	add	x0, x0, #0xac5
  4035cc:	mov	w1, #0x1ce                 	// #462
  4035d0:	mov	w2, #0x1                   	// #1
  4035d4:	bl	4029b0 <fwrite@plt>
  4035d8:	ldr	x3, [x20, #1056]
  4035dc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  4035e0:	add	x0, x0, #0xc94
  4035e4:	mov	w1, #0x7e                  	// #126
  4035e8:	mov	w2, #0x1                   	// #1
  4035ec:	bl	4029b0 <fwrite@plt>
  4035f0:	ldr	x3, [x20, #1056]
  4035f4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0xd94>
  4035f8:	add	x0, x0, #0xd13
  4035fc:	mov	w1, #0x85                  	// #133
  403600:	mov	w2, #0x1                   	// #1
  403604:	bl	4029b0 <fwrite@plt>
  403608:	bl	416e74 <ferror@plt+0x14324>
  40360c:	mov	w0, w19
  403610:	bl	402520 <exit@plt>
  403614:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403618:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40361c:	ldr	x0, [x8, #1032]
  403620:	ldr	x2, [x9, #2888]
  403624:	adrp	x1, 419000 <_obstack_memory_used@@Base+0xd94>
  403628:	add	x1, x1, #0x308
  40362c:	bl	4177a8 <ferror@plt+0x14c58>
  403630:	mov	w0, w19
  403634:	bl	402520 <exit@plt>
  403638:	stp	x29, x30, [sp, #-32]!
  40363c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  403640:	add	x1, x1, #0x54e
  403644:	str	x19, [sp, #16]
  403648:	mov	x29, sp
  40364c:	mov	x19, x0
  403650:	bl	4028d0 <strcmp@plt>
  403654:	cbz	w0, 403680 <ferror@plt+0xb30>
  403658:	add	x1, x29, #0x18
  40365c:	mov	x0, x19
  403660:	bl	4102b0 <ferror@plt+0xd760>
  403664:	cbz	x0, 4036a0 <ferror@plt+0xb50>
  403668:	ldr	x1, [x29, #24]
  40366c:	mov	w2, #0x1                   	// #1
  403670:	bl	40bbf0 <ferror@plt+0x90a0>
  403674:	ldr	x0, [x29, #24]
  403678:	bl	402930 <free@plt>
  40367c:	b	403698 <ferror@plt+0xb48>
  403680:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403684:	ldr	x0, [x8, #1064]
  403688:	adrp	x1, 419000 <_obstack_memory_used@@Base+0xd94>
  40368c:	add	x1, x1, #0xd99
  403690:	mov	w2, wzr
  403694:	bl	40bbf0 <ferror@plt+0x90a0>
  403698:	bl	40d6fc <ferror@plt+0xabac>
  40369c:	b	4036c8 <ferror@plt+0xb78>
  4036a0:	bl	402ac0 <__errno_location@plt>
  4036a4:	ldr	w1, [x0]
  4036a8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  4036ac:	add	x2, x2, #0xd9f
  4036b0:	mov	w0, wzr
  4036b4:	mov	x3, x19
  4036b8:	bl	402540 <error@plt>
  4036bc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4036c0:	mov	w9, #0x1                   	// #1
  4036c4:	str	w9, [x8, #3488]
  4036c8:	ldr	x19, [sp, #16]
  4036cc:	ldp	x29, x30, [sp], #32
  4036d0:	ret
  4036d4:	adrp	x8, 419000 <_obstack_memory_used@@Base+0xd94>
  4036d8:	add	x8, x8, #0xdb0
  4036dc:	ldr	x9, [x8, #16]
  4036e0:	cmp	x9, x0
  4036e4:	b.eq	40370c <ferror@plt+0xbbc>  // b.none
  4036e8:	ldr	x9, [x8, #24]!
  4036ec:	cbnz	x9, 4036dc <ferror@plt+0xb8c>
  4036f0:	adrp	x8, 403000 <ferror@plt+0x4b0>
  4036f4:	add	x8, x8, #0x714
  4036f8:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4036fc:	add	x9, x9, #0x1e8
  403700:	cmp	x0, x8
  403704:	csel	x0, x9, xzr, eq  // eq = none
  403708:	ret
  40370c:	mov	x0, x8
  403710:	ret
  403714:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403718:	ldr	w0, [x8, #1192]
  40371c:	cmp	w1, #0x1
  403720:	b.lt	403730 <ferror@plt+0xbe0>  // b.tstop
  403724:	ldr	x8, [x2]
  403728:	ldr	x3, [x8, #8]
  40372c:	b	403738 <ferror@plt+0xbe8>
  403730:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403734:	add	x3, x3, #0x67f
  403738:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40373c:	add	x2, x2, #0x2e3
  403740:	mov	w1, wzr
  403744:	b	402c5c <ferror@plt+0x10c>
  403748:	stp	x29, x30, [sp, #-48]!
  40374c:	str	x21, [sp, #16]
  403750:	stp	x20, x19, [sp, #32]
  403754:	mov	x20, x0
  403758:	adrp	x19, 419000 <_obstack_memory_used@@Base+0xd94>
  40375c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403760:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403764:	add	x19, x19, #0xdb0
  403768:	add	x0, x0, #0x31c
  40376c:	add	x21, x21, #0x1e8
  403770:	mov	x29, sp
  403774:	mov	x1, x20
  403778:	bl	4028d0 <strcmp@plt>
  40377c:	cbz	w0, 40378c <ferror@plt+0xc3c>
  403780:	ldr	x0, [x19, #24]!
  403784:	cbnz	x0, 403774 <ferror@plt+0xc24>
  403788:	mov	x19, x21
  40378c:	mov	x0, x19
  403790:	ldp	x20, x19, [sp, #32]
  403794:	ldr	x21, [sp, #16]
  403798:	ldp	x29, x30, [sp], #48
  40379c:	ret
  4037a0:	stp	x29, x30, [sp, #-32]!
  4037a4:	str	x19, [sp, #16]
  4037a8:	mov	x19, x1
  4037ac:	mov	w1, w2
  4037b0:	mov	x29, sp
  4037b4:	bl	41059c <ferror@plt+0xda4c>
  4037b8:	mov	w8, #0x2                   	// #2
  4037bc:	str	w8, [x0, #24]
  4037c0:	ldrb	w8, [x19, #8]
  4037c4:	ldrb	w9, [x0, #8]
  4037c8:	lsr	w8, w8, #1
  4037cc:	bfi	w9, w8, #2, #1
  4037d0:	strb	w9, [x0, #8]
  4037d4:	ldrb	w8, [x19, #8]
  4037d8:	and	w9, w9, #0xfffffff7
  4037dc:	lsl	w8, w8, #1
  4037e0:	and	w8, w8, #0x8
  4037e4:	orr	w8, w8, w9
  4037e8:	strb	w8, [x0, #8]
  4037ec:	ldr	x8, [x19, #16]
  4037f0:	ldr	x19, [sp, #16]
  4037f4:	str	x8, [x0, #32]
  4037f8:	ldp	x29, x30, [sp], #32
  4037fc:	ret
  403800:	stp	x29, x30, [sp, #-32]!
  403804:	str	x19, [sp, #16]
  403808:	mov	x29, sp
  40380c:	cbz	x0, 403820 <ferror@plt+0xcd0>
  403810:	ldrb	w8, [x0]
  403814:	mov	x19, x0
  403818:	cbnz	w8, 403828 <ferror@plt+0xcd8>
  40381c:	b	403884 <ferror@plt+0xd34>
  403820:	adrp	x19, 419000 <_obstack_memory_used@@Base+0xd94>
  403824:	add	x19, x19, #0x679
  403828:	mov	x0, x19
  40382c:	bl	4024f0 <strlen@plt>
  403830:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403834:	mov	x1, x0
  403838:	add	x2, x2, #0x6c8
  40383c:	mov	x0, x19
  403840:	bl	402870 <re_compile_pattern@plt>
  403844:	cbz	x0, 403864 <ferror@plt+0xd14>
  403848:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40384c:	mov	x4, x0
  403850:	add	x2, x2, #0x220
  403854:	mov	w0, #0x1                   	// #1
  403858:	mov	w1, wzr
  40385c:	mov	x3, x19
  403860:	bl	402c5c <ferror@plt+0x10c>
  403864:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403868:	add	x1, x1, #0x708
  40386c:	ldr	w2, [x1]
  403870:	ldp	x3, x4, [x1, #8]
  403874:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403878:	add	x0, x0, #0x6c8
  40387c:	bl	402760 <re_set_registers@plt>
  403880:	mov	w8, #0x1                   	// #1
  403884:	ldr	x19, [sp, #16]
  403888:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40388c:	strb	w8, [x9, #1728]
  403890:	ldp	x29, x30, [sp], #32
  403894:	ret
  403898:	stp	x29, x30, [sp, #-32]!
  40389c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4038a0:	add	x0, x0, #0x6c8
  4038a4:	str	x19, [sp, #16]
  4038a8:	mov	x29, sp
  4038ac:	bl	402a70 <regfree@plt>
  4038b0:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4038b4:	add	x19, x19, #0x710
  4038b8:	ldr	x0, [x19]
  4038bc:	bl	402930 <free@plt>
  4038c0:	ldr	x0, [x19, #8]
  4038c4:	ldr	x19, [sp, #16]
  4038c8:	ldp	x29, x30, [sp], #32
  4038cc:	b	402930 <free@plt>
  4038d0:	stp	x29, x30, [sp, #-96]!
  4038d4:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4038d8:	add	x8, x8, #0x67f
  4038dc:	cmp	x1, #0x0
  4038e0:	stp	x20, x19, [sp, #80]
  4038e4:	mov	x19, x0
  4038e8:	csel	x0, x1, x8, ne  // ne = any
  4038ec:	stp	x28, x27, [sp, #16]
  4038f0:	stp	x26, x25, [sp, #32]
  4038f4:	stp	x24, x23, [sp, #48]
  4038f8:	stp	x22, x21, [sp, #64]
  4038fc:	mov	x29, sp
  403900:	mov	w22, w2
  403904:	mov	x21, x1
  403908:	bl	4175c4 <ferror@plt+0x14a74>
  40390c:	mov	x20, x0
  403910:	mov	x0, x19
  403914:	mov	w1, w22
  403918:	bl	41059c <ferror@plt+0xda4c>
  40391c:	ldr	w8, [x0, #24]
  403920:	mov	x22, x0
  403924:	cmp	w8, #0x1
  403928:	b.ne	403934 <ferror@plt+0xde4>  // b.any
  40392c:	ldr	x0, [x22, #32]
  403930:	bl	402930 <free@plt>
  403934:	mov	w8, #0x1                   	// #1
  403938:	str	w8, [x22, #24]
  40393c:	str	x20, [x22, #32]
  403940:	cbz	x21, 403a50 <ferror@plt+0xf00>
  403944:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403948:	ldrb	w8, [x8, #1728]
  40394c:	cbz	w8, 403a50 <ferror@plt+0xf00>
  403950:	mov	x0, x20
  403954:	bl	4024f0 <strlen@plt>
  403958:	mov	x21, x0
  40395c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403960:	adrp	x5, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403964:	add	x0, x0, #0x6c8
  403968:	add	x5, x5, #0x708
  40396c:	mov	x1, x20
  403970:	mov	w2, w21
  403974:	mov	w3, wzr
  403978:	mov	w4, w21
  40397c:	bl	4027c0 <re_search@plt>
  403980:	tbnz	w0, #31, 403a14 <ferror@plt+0xec4>
  403984:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403988:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40398c:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403990:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403994:	add	x27, x27, #0x710
  403998:	add	x22, x22, #0x6c8
  40399c:	add	x23, x23, #0x708
  4039a0:	add	x24, x24, #0x257
  4039a4:	b	4039f8 <ferror@plt+0xea8>
  4039a8:	sxtw	x28, w25
  4039ac:	ldrb	w26, [x20, x28]
  4039b0:	strb	wzr, [x20, x28]
  4039b4:	ldrsw	x8, [x8]
  4039b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4039bc:	ldr	w0, [x9, #1192]
  4039c0:	mov	w1, wzr
  4039c4:	add	x4, x20, x8
  4039c8:	mov	x2, x24
  4039cc:	mov	x3, x19
  4039d0:	bl	402c5c <ferror@plt+0x10c>
  4039d4:	strb	w26, [x20, x28]
  4039d8:	sub	w4, w21, w25
  4039dc:	mov	x0, x22
  4039e0:	mov	x1, x20
  4039e4:	mov	w2, w21
  4039e8:	mov	w3, w25
  4039ec:	mov	x5, x23
  4039f0:	bl	4027c0 <re_search@plt>
  4039f4:	tbnz	w0, #31, 403a14 <ferror@plt+0xec4>
  4039f8:	ldp	x8, x9, [x27]
  4039fc:	ldr	w10, [x8]
  403a00:	ldr	w25, [x9]
  403a04:	cmp	w10, w25
  403a08:	b.ne	4039a8 <ferror@plt+0xe58>  // b.any
  403a0c:	add	w25, w0, #0x1
  403a10:	b	4039d8 <ferror@plt+0xe88>
  403a14:	cmn	w0, #0x2
  403a18:	b.ne	403a50 <ferror@plt+0xf00>  // b.any
  403a1c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403a20:	ldr	w0, [x8, #1192]
  403a24:	mov	x3, x19
  403a28:	ldp	x20, x19, [sp, #80]
  403a2c:	ldp	x22, x21, [sp, #64]
  403a30:	ldp	x24, x23, [sp, #48]
  403a34:	ldp	x26, x25, [sp, #32]
  403a38:	ldp	x28, x27, [sp, #16]
  403a3c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403a40:	add	x2, x2, #0x28a
  403a44:	mov	w1, wzr
  403a48:	ldp	x29, x30, [sp], #96
  403a4c:	b	402c5c <ferror@plt+0x10c>
  403a50:	ldp	x20, x19, [sp, #80]
  403a54:	ldp	x22, x21, [sp, #64]
  403a58:	ldp	x24, x23, [sp, #48]
  403a5c:	ldp	x26, x25, [sp, #32]
  403a60:	ldp	x28, x27, [sp, #16]
  403a64:	ldp	x29, x30, [sp], #96
  403a68:	ret
  403a6c:	stp	x29, x30, [sp, #-64]!
  403a70:	stp	x24, x23, [sp, #16]
  403a74:	stp	x22, x21, [sp, #32]
  403a78:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403a7c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0xd94>
  403a80:	mov	w24, #0x346d                	// #13421
  403a84:	stp	x20, x19, [sp, #48]
  403a88:	add	x0, x0, #0x31c
  403a8c:	add	x21, x21, #0xdc0
  403a90:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403a94:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403a98:	mov	w23, #0x2                   	// #2
  403a9c:	movk	w24, #0x5f, lsl #16
  403aa0:	mov	x29, sp
  403aa4:	b	403af4 <ferror@plt+0xfa4>
  403aa8:	mov	w1, #0x1                   	// #1
  403aac:	bl	41059c <ferror@plt+0xda4c>
  403ab0:	str	w23, [x0, #24]
  403ab4:	ldurb	w8, [x21, #-8]
  403ab8:	ldrb	w9, [x0, #8]
  403abc:	lsr	w8, w8, #1
  403ac0:	bfi	w9, w8, #2, #1
  403ac4:	strb	w9, [x0, #8]
  403ac8:	ldurb	w8, [x21, #-8]
  403acc:	and	w9, w9, #0xfffffff7
  403ad0:	lsl	w8, w8, #1
  403ad4:	and	w8, w8, #0x8
  403ad8:	orr	w8, w8, w9
  403adc:	strb	w8, [x0, #8]
  403ae0:	ldr	x8, [x21]
  403ae4:	str	x8, [x0, #32]
  403ae8:	ldr	x0, [x21, #8]
  403aec:	add	x21, x21, #0x18
  403af0:	cbz	x0, 403b74 <ferror@plt+0x1024>
  403af4:	ldr	w8, [x20, #1176]
  403af8:	cbz	w8, 403b04 <ferror@plt+0xfb4>
  403afc:	ldurb	w8, [x21, #-8]
  403b00:	tbnz	w8, #0, 403ae8 <ferror@plt+0xf98>
  403b04:	ldr	w8, [x22, #1180]
  403b08:	cbz	w8, 403aa8 <ferror@plt+0xf58>
  403b0c:	bl	4024f0 <strlen@plt>
  403b10:	add	x0, x0, #0x4
  403b14:	bl	417280 <ferror@plt+0x14730>
  403b18:	ldur	x1, [x21, #-16]
  403b1c:	mov	x19, x0
  403b20:	str	w24, [x0]
  403b24:	bl	402720 <strcat@plt>
  403b28:	mov	w1, #0x1                   	// #1
  403b2c:	bl	41059c <ferror@plt+0xda4c>
  403b30:	str	w23, [x0, #24]
  403b34:	ldurb	w8, [x21, #-8]
  403b38:	ldrb	w9, [x0, #8]
  403b3c:	lsr	w8, w8, #1
  403b40:	bfi	w9, w8, #2, #1
  403b44:	strb	w9, [x0, #8]
  403b48:	ldurb	w8, [x21, #-8]
  403b4c:	and	w9, w9, #0xfffffff7
  403b50:	lsl	w8, w8, #1
  403b54:	and	w8, w8, #0x8
  403b58:	orr	w8, w8, w9
  403b5c:	strb	w8, [x0, #8]
  403b60:	ldr	x8, [x21]
  403b64:	str	x8, [x0, #32]
  403b68:	mov	x0, x19
  403b6c:	bl	402930 <free@plt>
  403b70:	b	403ae8 <ferror@plt+0xf98>
  403b74:	ldr	w8, [x20, #1176]
  403b78:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403b7c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403b80:	add	x9, x9, #0x991
  403b84:	add	x10, x10, #0x996
  403b88:	cmp	w8, #0x0
  403b8c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403b90:	csel	x0, x10, x9, eq  // eq = none
  403b94:	add	x1, x1, #0x67f
  403b98:	mov	w2, #0x1                   	// #1
  403b9c:	bl	4038d0 <ferror@plt+0xd80>
  403ba0:	ldr	w8, [x20, #1176]
  403ba4:	cbz	w8, 403bbc <ferror@plt+0x106c>
  403ba8:	ldp	x20, x19, [sp, #48]
  403bac:	ldp	x22, x21, [sp, #32]
  403bb0:	ldp	x24, x23, [sp, #16]
  403bb4:	ldp	x29, x30, [sp], #64
  403bb8:	ret
  403bbc:	ldp	x20, x19, [sp, #48]
  403bc0:	ldp	x22, x21, [sp, #32]
  403bc4:	ldp	x24, x23, [sp, #16]
  403bc8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403bcc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403bd0:	add	x0, x0, #0x99f
  403bd4:	add	x1, x1, #0x67f
  403bd8:	mov	w2, #0x1                   	// #1
  403bdc:	ldp	x29, x30, [sp], #64
  403be0:	b	4038d0 <ferror@plt+0xd80>
  403be4:	mov	w8, w0
  403be8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403bec:	cmp	w8, #0x0
  403bf0:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403bf4:	add	x0, x0, #0x81e
  403bf8:	cneg	w9, w8, mi  // mi = first
  403bfc:	add	x10, x10, #0x2be
  403c00:	strb	wzr, [x0, #1]
  403c04:	udiv	w11, w9, w1
  403c08:	msub	w12, w11, w1, w9
  403c0c:	ldrb	w12, [x10, w12, uxtw]
  403c10:	cmp	w9, w1
  403c14:	mov	w9, w11
  403c18:	strb	w12, [x0], #-1
  403c1c:	b.cs	403c04 <ferror@plt+0x10b4>  // b.hs, b.nlast
  403c20:	tbnz	w8, #31, 403c2c <ferror@plt+0x10dc>
  403c24:	add	x0, x0, #0x1
  403c28:	ret
  403c2c:	mov	w8, #0x2d                  	// #45
  403c30:	strb	w8, [x0]
  403c34:	ret
  403c38:	stp	xzr, xzr, [x0]
  403c3c:	stp	xzr, xzr, [x0, #32]
  403c40:	cbz	x1, 403c48 <ferror@plt+0x10f8>
  403c44:	stp	xzr, xzr, [x1, #8]
  403c48:	ret
  403c4c:	sub	sp, sp, #0x70
  403c50:	stp	x29, x30, [sp, #16]
  403c54:	stp	x28, x27, [sp, #32]
  403c58:	stp	x26, x25, [sp, #48]
  403c5c:	stp	x24, x23, [sp, #64]
  403c60:	stp	x22, x21, [sp, #80]
  403c64:	stp	x20, x19, [sp, #96]
  403c68:	ldr	x23, [x1, #32]
  403c6c:	mov	x19, x0
  403c70:	mov	w1, #0x24                  	// #36
  403c74:	add	x29, sp, #0x10
  403c78:	mov	x0, x23
  403c7c:	str	x3, [sp, #8]
  403c80:	mov	w21, w2
  403c84:	bl	402990 <strchr@plt>
  403c88:	cbz	x0, 403ed4 <ferror@plt+0x1384>
  403c8c:	mov	w8, #0x1                   	// #1
  403c90:	subs	w9, w21, #0x1
  403c94:	mov	w22, #0xcccd                	// #52429
  403c98:	adrp	x28, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403c9c:	sub	w8, w8, w21
  403ca0:	mov	x24, x0
  403ca4:	mov	w27, #0xa                   	// #10
  403ca8:	movk	w22, #0xcccc, lsl #16
  403cac:	add	x28, x28, #0x2be
  403cb0:	csel	w8, w8, w9, lt  // lt = tstop
  403cb4:	str	w8, [sp, #4]
  403cb8:	b	403cf4 <ferror@plt+0x11a4>
  403cbc:	ldr	x2, [sp, #8]
  403cc0:	cmp	w26, #0x40
  403cc4:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  403cc8:	cset	w4, eq  // eq = none
  403ccc:	mov	x0, x19
  403cd0:	mov	w1, w21
  403cd4:	add	x3, x3, #0x31a
  403cd8:	bl	403f38 <ferror@plt+0x13e8>
  403cdc:	add	x23, x24, #0x2
  403ce0:	mov	w1, #0x24                  	// #36
  403ce4:	mov	x0, x23
  403ce8:	bl	402990 <strchr@plt>
  403cec:	mov	x24, x0
  403cf0:	cbz	x0, 403ed4 <ferror@plt+0x1384>
  403cf4:	ldp	x0, x8, [x19, #24]
  403cf8:	sub	x25, x24, x23
  403cfc:	sub	x8, x8, x0
  403d00:	cmp	x8, x25
  403d04:	b.cs	403d18 <ferror@plt+0x11c8>  // b.hs, b.nlast
  403d08:	mov	x0, x19
  403d0c:	mov	x1, x25
  403d10:	bl	418058 <_obstack_newchunk@@Base>
  403d14:	ldr	x0, [x19, #24]
  403d18:	mov	x1, x23
  403d1c:	mov	x2, x25
  403d20:	bl	4024c0 <memcpy@plt>
  403d24:	ldr	x8, [x19, #24]
  403d28:	mov	x23, x24
  403d2c:	add	x25, x8, x25
  403d30:	str	x25, [x19, #24]
  403d34:	ldrb	w26, [x23, #1]!
  403d38:	sub	w20, w26, #0x30
  403d3c:	cmp	w20, #0xa
  403d40:	b.cs	403d58 <ferror@plt+0x1208>  // b.hs, b.nlast
  403d44:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403d48:	ldr	w8, [x8, #1176]
  403d4c:	cbz	w8, 403da0 <ferror@plt+0x1250>
  403d50:	add	x23, x24, #0x2
  403d54:	b	403dd4 <ferror@plt+0x1284>
  403d58:	cmp	w26, #0x23
  403d5c:	b.eq	403e44 <ferror@plt+0x12f4>  // b.none
  403d60:	cmp	w26, #0x2a
  403d64:	b.eq	403cbc <ferror@plt+0x116c>  // b.none
  403d68:	cmp	w26, #0x40
  403d6c:	b.eq	403cbc <ferror@plt+0x116c>  // b.none
  403d70:	ldr	x8, [x19, #32]
  403d74:	cmp	x8, x25
  403d78:	b.ne	403d8c <ferror@plt+0x123c>  // b.any
  403d7c:	mov	w1, #0x1                   	// #1
  403d80:	mov	x0, x19
  403d84:	bl	418058 <_obstack_newchunk@@Base>
  403d88:	ldr	x25, [x19, #24]
  403d8c:	add	x8, x25, #0x1
  403d90:	str	x8, [x19, #24]
  403d94:	mov	w8, #0x24                  	// #36
  403d98:	strb	w8, [x25]
  403d9c:	b	403ce0 <ferror@plt+0x1190>
  403da0:	bl	4028e0 <__ctype_b_loc@plt>
  403da4:	ldr	x8, [x0]
  403da8:	ldrh	w9, [x8, x26, lsl #1]
  403dac:	tbnz	w9, #11, 403db8 <ferror@plt+0x1268>
  403db0:	mov	w20, wzr
  403db4:	b	403dd4 <ferror@plt+0x1284>
  403db8:	mov	w20, wzr
  403dbc:	mul	w9, w20, w27
  403dc0:	add	w9, w9, w26, uxtb
  403dc4:	ldrb	w26, [x23, #1]!
  403dc8:	sub	w20, w9, #0x30
  403dcc:	ldrh	w10, [x8, x26, lsl #1]
  403dd0:	tbnz	w10, #11, 403dbc <ferror@plt+0x126c>
  403dd4:	cmp	w20, w21
  403dd8:	b.ge	403ce0 <ferror@plt+0x1190>  // b.tcont
  403ddc:	ldr	x8, [sp, #8]
  403de0:	ldr	x8, [x8, w20, sxtw #3]
  403de4:	ldr	x26, [x8, #8]
  403de8:	mov	x0, x26
  403dec:	bl	4024f0 <strlen@plt>
  403df0:	ldr	x8, [x19, #32]
  403df4:	mov	x24, x0
  403df8:	sub	x8, x8, x25
  403dfc:	cmp	x8, x0
  403e00:	b.cs	403e24 <ferror@plt+0x12d4>  // b.hs, b.nlast
  403e04:	mov	x0, x19
  403e08:	mov	x1, x24
  403e0c:	sxtw	x20, w20
  403e10:	bl	418058 <_obstack_newchunk@@Base>
  403e14:	ldr	x8, [sp, #8]
  403e18:	ldr	x25, [x19, #24]
  403e1c:	ldr	x8, [x8, x20, lsl #3]
  403e20:	ldr	x26, [x8, #8]
  403e24:	mov	x0, x25
  403e28:	mov	x1, x26
  403e2c:	mov	x2, x24
  403e30:	bl	4024c0 <memcpy@plt>
  403e34:	ldr	x8, [x19, #24]
  403e38:	add	x8, x8, x24
  403e3c:	str	x8, [x19, #24]
  403e40:	b	403ce0 <ferror@plt+0x1190>
  403e44:	ldr	w8, [sp, #4]
  403e48:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  403e4c:	add	x23, x23, #0x81e
  403e50:	strb	wzr, [x23, #1]
  403e54:	umull	x9, w8, w22
  403e58:	lsr	x9, x9, #35
  403e5c:	msub	w10, w9, w27, w8
  403e60:	ldrb	w10, [x28, w10, uxtw]
  403e64:	cmp	w8, #0x9
  403e68:	mov	w8, w9
  403e6c:	strb	w10, [x23], #-1
  403e70:	b.hi	403e54 <ferror@plt+0x1304>  // b.pmore
  403e74:	cmp	w21, #0x0
  403e78:	b.le	403e84 <ferror@plt+0x1334>
  403e7c:	add	x23, x23, #0x1
  403e80:	b	403e8c <ferror@plt+0x133c>
  403e84:	mov	w8, #0x2d                  	// #45
  403e88:	strb	w8, [x23]
  403e8c:	mov	x0, x23
  403e90:	bl	4024f0 <strlen@plt>
  403e94:	mov	x25, x0
  403e98:	ldp	x0, x8, [x19, #24]
  403e9c:	sub	x8, x8, x0
  403ea0:	cmp	x8, x25
  403ea4:	b.cs	403eb8 <ferror@plt+0x1368>  // b.hs, b.nlast
  403ea8:	mov	x0, x19
  403eac:	mov	x1, x25
  403eb0:	bl	418058 <_obstack_newchunk@@Base>
  403eb4:	ldr	x0, [x19, #24]
  403eb8:	mov	x1, x23
  403ebc:	mov	x2, x25
  403ec0:	bl	4024c0 <memcpy@plt>
  403ec4:	ldr	x8, [x19, #24]
  403ec8:	add	x23, x24, #0x2
  403ecc:	add	x8, x8, x25
  403ed0:	b	403e3c <ferror@plt+0x12ec>
  403ed4:	mov	x0, x23
  403ed8:	bl	4024f0 <strlen@plt>
  403edc:	mov	x20, x0
  403ee0:	ldp	x0, x8, [x19, #24]
  403ee4:	sub	x8, x8, x0
  403ee8:	cmp	x8, x20
  403eec:	b.cs	403f00 <ferror@plt+0x13b0>  // b.hs, b.nlast
  403ef0:	mov	x0, x19
  403ef4:	mov	x1, x20
  403ef8:	bl	418058 <_obstack_newchunk@@Base>
  403efc:	ldr	x0, [x19, #24]
  403f00:	mov	x1, x23
  403f04:	mov	x2, x20
  403f08:	bl	4024c0 <memcpy@plt>
  403f0c:	ldr	x8, [x19, #24]
  403f10:	add	x8, x8, x20
  403f14:	str	x8, [x19, #24]
  403f18:	ldp	x20, x19, [sp, #96]
  403f1c:	ldp	x22, x21, [sp, #80]
  403f20:	ldp	x24, x23, [sp, #64]
  403f24:	ldp	x26, x25, [sp, #48]
  403f28:	ldp	x28, x27, [sp, #32]
  403f2c:	ldp	x29, x30, [sp, #16]
  403f30:	add	sp, sp, #0x70
  403f34:	ret
  403f38:	stp	x29, x30, [sp, #-96]!
  403f3c:	stp	x22, x21, [sp, #64]
  403f40:	mov	x22, x0
  403f44:	mov	x0, x3
  403f48:	stp	x28, x27, [sp, #16]
  403f4c:	stp	x26, x25, [sp, #32]
  403f50:	stp	x24, x23, [sp, #48]
  403f54:	stp	x20, x19, [sp, #80]
  403f58:	mov	x29, sp
  403f5c:	mov	w19, w4
  403f60:	mov	x20, x3
  403f64:	mov	x21, x2
  403f68:	mov	w24, w1
  403f6c:	bl	4024f0 <strlen@plt>
  403f70:	cmp	w24, #0x2
  403f74:	b.lt	4040c8 <ferror@plt+0x1578>  // b.tstop
  403f78:	mov	x23, x0
  403f7c:	mov	w27, w24
  403f80:	mov	w28, #0x1                   	// #1
  403f84:	b	403fb0 <ferror@plt+0x1460>
  403f88:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  403f8c:	ldr	x1, [x8, #3560]
  403f90:	mov	x2, x24
  403f94:	bl	4024c0 <memcpy@plt>
  403f98:	ldr	x8, [x22, #24]
  403f9c:	add	x8, x8, x24
  403fa0:	str	x8, [x22, #24]
  403fa4:	add	x28, x28, #0x1
  403fa8:	cmp	x27, x28
  403fac:	b.eq	4040c8 <ferror@plt+0x1578>  // b.none
  403fb0:	cmp	x28, #0x2
  403fb4:	b.cc	403ff0 <ferror@plt+0x14a0>  // b.lo, b.ul, b.last
  403fb8:	ldp	x0, x8, [x22, #24]
  403fbc:	sub	x8, x8, x0
  403fc0:	cmp	x8, x23
  403fc4:	b.cs	403fd8 <ferror@plt+0x1488>  // b.hs, b.nlast
  403fc8:	mov	x0, x22
  403fcc:	mov	x1, x23
  403fd0:	bl	418058 <_obstack_newchunk@@Base>
  403fd4:	ldr	x0, [x22, #24]
  403fd8:	mov	x1, x20
  403fdc:	mov	x2, x23
  403fe0:	bl	4024c0 <memcpy@plt>
  403fe4:	ldr	x8, [x22, #24]
  403fe8:	add	x8, x8, x23
  403fec:	str	x8, [x22, #24]
  403ff0:	tbz	w19, #0, 40403c <ferror@plt+0x14ec>
  403ff4:	ldp	x0, x8, [x22, #24]
  403ff8:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  403ffc:	ldr	x24, [x9, #3512]
  404000:	sub	x8, x8, x0
  404004:	cmp	x8, x24
  404008:	b.cs	40401c <ferror@plt+0x14cc>  // b.hs, b.nlast
  40400c:	mov	x0, x22
  404010:	mov	x1, x24
  404014:	bl	418058 <_obstack_newchunk@@Base>
  404018:	ldr	x0, [x22, #24]
  40401c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404020:	ldr	x1, [x8, #3504]
  404024:	mov	x2, x24
  404028:	bl	4024c0 <memcpy@plt>
  40402c:	ldr	x8, [x22, #24]
  404030:	add	x24, x8, x24
  404034:	str	x24, [x22, #24]
  404038:	b	404040 <ferror@plt+0x14f0>
  40403c:	ldr	x24, [x22, #24]
  404040:	ldr	x8, [x21, x28, lsl #3]
  404044:	ldr	x26, [x8, #8]
  404048:	mov	x0, x26
  40404c:	bl	4024f0 <strlen@plt>
  404050:	ldr	x8, [x22, #32]
  404054:	mov	x25, x0
  404058:	sub	x8, x8, x24
  40405c:	cmp	x8, x0
  404060:	b.cs	40407c <ferror@plt+0x152c>  // b.hs, b.nlast
  404064:	mov	x0, x22
  404068:	mov	x1, x25
  40406c:	bl	418058 <_obstack_newchunk@@Base>
  404070:	ldr	x8, [x21, x28, lsl #3]
  404074:	ldr	x24, [x22, #24]
  404078:	ldr	x26, [x8, #8]
  40407c:	mov	x0, x24
  404080:	mov	x1, x26
  404084:	mov	x2, x25
  404088:	bl	4024c0 <memcpy@plt>
  40408c:	ldr	x8, [x22, #24]
  404090:	add	x0, x8, x25
  404094:	str	x0, [x22, #24]
  404098:	tbz	w19, #0, 403fa4 <ferror@plt+0x1454>
  40409c:	ldr	x8, [x22, #32]
  4040a0:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4040a4:	ldr	x24, [x9, #3568]
  4040a8:	sub	x8, x8, x0
  4040ac:	cmp	x8, x24
  4040b0:	b.cs	403f88 <ferror@plt+0x1438>  // b.hs, b.nlast
  4040b4:	mov	x0, x22
  4040b8:	mov	x1, x24
  4040bc:	bl	418058 <_obstack_newchunk@@Base>
  4040c0:	ldr	x0, [x22, #24]
  4040c4:	b	403f88 <ferror@plt+0x1438>
  4040c8:	ldp	x20, x19, [sp, #80]
  4040cc:	ldp	x22, x21, [sp, #64]
  4040d0:	ldp	x24, x23, [sp, #48]
  4040d4:	ldp	x26, x25, [sp, #32]
  4040d8:	ldp	x28, x27, [sp, #16]
  4040dc:	ldp	x29, x30, [sp], #96
  4040e0:	ret
  4040e4:	stp	x29, x30, [sp, #-64]!
  4040e8:	stp	x22, x21, [sp, #32]
  4040ec:	stp	x20, x19, [sp, #48]
  4040f0:	ldr	x8, [x2]
  4040f4:	cmp	w1, #0x0
  4040f8:	str	x23, [sp, #16]
  4040fc:	mov	x29, sp
  404100:	b.le	404214 <ferror@plt+0x16c4>
  404104:	mov	x19, x0
  404108:	cmp	w1, #0x1
  40410c:	b.eq	404138 <ferror@plt+0x15e8>  // b.none
  404110:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404114:	ldr	w9, [x9, #1188]
  404118:	cbnz	w9, 404138 <ferror@plt+0x15e8>
  40411c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404120:	ldr	w0, [x9, #1192]
  404124:	ldr	x3, [x8, #8]
  404128:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40412c:	add	x2, x2, #0x46c
  404130:	mov	w1, wzr
  404134:	bl	402c5c <ferror@plt+0x10c>
  404138:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40413c:	ldp	x0, x9, [x19, #24]
  404140:	ldr	x20, [x8, #3512]
  404144:	sub	x8, x9, x0
  404148:	cmp	x8, x20
  40414c:	b.cs	404160 <ferror@plt+0x1610>  // b.hs, b.nlast
  404150:	mov	x0, x19
  404154:	mov	x1, x20
  404158:	bl	418058 <_obstack_newchunk@@Base>
  40415c:	ldr	x0, [x19, #24]
  404160:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404164:	ldr	x1, [x8, #3504]
  404168:	mov	x2, x20
  40416c:	bl	4024c0 <memcpy@plt>
  404170:	ldr	x8, [x19, #24]
  404174:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404178:	add	x21, x8, x20
  40417c:	str	x21, [x19, #24]
  404180:	ldr	x22, [x23, #3520]
  404184:	mov	x0, x22
  404188:	bl	4024f0 <strlen@plt>
  40418c:	ldr	x8, [x19, #32]
  404190:	mov	x20, x0
  404194:	sub	x8, x8, x21
  404198:	cmp	x8, x0
  40419c:	b.cs	4041b4 <ferror@plt+0x1664>  // b.hs, b.nlast
  4041a0:	mov	x0, x19
  4041a4:	mov	x1, x20
  4041a8:	bl	418058 <_obstack_newchunk@@Base>
  4041ac:	ldr	x21, [x19, #24]
  4041b0:	ldr	x22, [x23, #3520]
  4041b4:	mov	x0, x21
  4041b8:	mov	x1, x22
  4041bc:	mov	x2, x20
  4041c0:	bl	4024c0 <memcpy@plt>
  4041c4:	ldp	x8, x9, [x19, #24]
  4041c8:	add	x0, x8, x20
  4041cc:	str	x0, [x19, #24]
  4041d0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4041d4:	ldr	x20, [x8, #3568]
  4041d8:	sub	x8, x9, x0
  4041dc:	cmp	x8, x20
  4041e0:	b.cs	4041f4 <ferror@plt+0x16a4>  // b.hs, b.nlast
  4041e4:	mov	x0, x19
  4041e8:	mov	x1, x20
  4041ec:	bl	418058 <_obstack_newchunk@@Base>
  4041f0:	ldr	x0, [x19, #24]
  4041f4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4041f8:	ldr	x1, [x8, #3560]
  4041fc:	mov	x2, x20
  404200:	bl	4024c0 <memcpy@plt>
  404204:	ldr	x8, [x19, #24]
  404208:	add	x8, x8, x20
  40420c:	str	x8, [x19, #24]
  404210:	b	404220 <ferror@plt+0x16d0>
  404214:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404218:	ldr	w9, [x9, #1188]
  40421c:	cbz	w9, 404234 <ferror@plt+0x16e4>
  404220:	ldp	x20, x19, [sp, #48]
  404224:	ldp	x22, x21, [sp, #32]
  404228:	ldr	x23, [sp, #16]
  40422c:	ldp	x29, x30, [sp], #64
  404230:	ret
  404234:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404238:	ldr	w0, [x9, #1192]
  40423c:	ldr	x3, [x8, #8]
  404240:	ldp	x20, x19, [sp, #48]
  404244:	ldp	x22, x21, [sp, #32]
  404248:	ldr	x23, [sp, #16]
  40424c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404250:	add	x2, x2, #0x441
  404254:	mov	w1, wzr
  404258:	ldp	x29, x30, [sp], #64
  40425c:	b	402c5c <ferror@plt+0x10c>
  404260:	stp	x29, x30, [sp, #-48]!
  404264:	stp	x20, x19, [sp, #32]
  404268:	ldr	x8, [x2]
  40426c:	cmp	w1, #0x0
  404270:	str	x21, [sp, #16]
  404274:	mov	x29, sp
  404278:	b.le	40430c <ferror@plt+0x17bc>
  40427c:	mov	x19, x0
  404280:	cmp	w1, #0x1
  404284:	b.eq	4042b0 <ferror@plt+0x1760>  // b.none
  404288:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40428c:	ldr	w9, [x9, #1188]
  404290:	cbnz	w9, 4042b0 <ferror@plt+0x1760>
  404294:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404298:	ldr	w0, [x9, #1192]
  40429c:	ldr	x3, [x8, #8]
  4042a0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4042a4:	add	x2, x2, #0x46c
  4042a8:	mov	w1, wzr
  4042ac:	bl	402c5c <ferror@plt+0x10c>
  4042b0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4042b4:	ldr	w8, [x8, #3496]
  4042b8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4042bc:	mov	w9, #0xcccd                	// #52429
  4042c0:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4042c4:	cmp	w8, #0x0
  4042c8:	add	x20, x20, #0x81e
  4042cc:	movk	w9, #0xcccc, lsl #16
  4042d0:	mov	w10, #0xa                   	// #10
  4042d4:	cneg	w12, w8, mi  // mi = first
  4042d8:	add	x11, x11, #0x2be
  4042dc:	strb	wzr, [x20, #1]
  4042e0:	umull	x13, w12, w9
  4042e4:	lsr	x13, x13, #35
  4042e8:	msub	w14, w13, w10, w12
  4042ec:	ldrb	w14, [x11, w14, uxtw]
  4042f0:	cmp	w12, #0x9
  4042f4:	mov	w12, w13
  4042f8:	strb	w14, [x20], #-1
  4042fc:	b.hi	4042e0 <ferror@plt+0x1790>  // b.pmore
  404300:	tbnz	w8, #31, 404340 <ferror@plt+0x17f0>
  404304:	add	x20, x20, #0x1
  404308:	b	404348 <ferror@plt+0x17f8>
  40430c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404310:	ldr	w9, [x9, #1188]
  404314:	cbnz	w9, 40438c <ferror@plt+0x183c>
  404318:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40431c:	ldr	w0, [x9, #1192]
  404320:	ldr	x3, [x8, #8]
  404324:	ldp	x20, x19, [sp, #32]
  404328:	ldr	x21, [sp, #16]
  40432c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404330:	add	x2, x2, #0x441
  404334:	mov	w1, wzr
  404338:	ldp	x29, x30, [sp], #48
  40433c:	b	402c5c <ferror@plt+0x10c>
  404340:	mov	w8, #0x2d                  	// #45
  404344:	strb	w8, [x20]
  404348:	mov	x0, x20
  40434c:	bl	4024f0 <strlen@plt>
  404350:	mov	x21, x0
  404354:	ldp	x0, x8, [x19, #24]
  404358:	sub	x8, x8, x0
  40435c:	cmp	x8, x21
  404360:	b.cs	404374 <ferror@plt+0x1824>  // b.hs, b.nlast
  404364:	mov	x0, x19
  404368:	mov	x1, x21
  40436c:	bl	418058 <_obstack_newchunk@@Base>
  404370:	ldr	x0, [x19, #24]
  404374:	mov	x1, x20
  404378:	mov	x2, x21
  40437c:	bl	4024c0 <memcpy@plt>
  404380:	ldr	x8, [x19, #24]
  404384:	add	x8, x8, x21
  404388:	str	x8, [x19, #24]
  40438c:	ldp	x20, x19, [sp, #32]
  404390:	ldr	x21, [sp, #16]
  404394:	ldp	x29, x30, [sp], #48
  404398:	ret
  40439c:	stp	x29, x30, [sp, #-64]!
  4043a0:	stp	x22, x21, [sp, #32]
  4043a4:	stp	x20, x19, [sp, #48]
  4043a8:	ldr	x8, [x2]
  4043ac:	cmp	w1, #0x0
  4043b0:	str	x23, [sp, #16]
  4043b4:	mov	x29, sp
  4043b8:	b.le	4044cc <ferror@plt+0x197c>
  4043bc:	mov	x19, x0
  4043c0:	cmp	w1, #0x1
  4043c4:	b.eq	4043f0 <ferror@plt+0x18a0>  // b.none
  4043c8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4043cc:	ldr	w9, [x9, #1188]
  4043d0:	cbnz	w9, 4043f0 <ferror@plt+0x18a0>
  4043d4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4043d8:	ldr	w0, [x9, #1192]
  4043dc:	ldr	x3, [x8, #8]
  4043e0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4043e4:	add	x2, x2, #0x46c
  4043e8:	mov	w1, wzr
  4043ec:	bl	402c5c <ferror@plt+0x10c>
  4043f0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4043f4:	ldp	x0, x9, [x19, #24]
  4043f8:	ldr	x20, [x8, #3512]
  4043fc:	sub	x8, x9, x0
  404400:	cmp	x8, x20
  404404:	b.cs	404418 <ferror@plt+0x18c8>  // b.hs, b.nlast
  404408:	mov	x0, x19
  40440c:	mov	x1, x20
  404410:	bl	418058 <_obstack_newchunk@@Base>
  404414:	ldr	x0, [x19, #24]
  404418:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40441c:	ldr	x1, [x8, #3504]
  404420:	mov	x2, x20
  404424:	bl	4024c0 <memcpy@plt>
  404428:	ldr	x8, [x19, #24]
  40442c:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404430:	add	x21, x8, x20
  404434:	str	x21, [x19, #24]
  404438:	ldr	x22, [x23, #2888]
  40443c:	mov	x0, x22
  404440:	bl	4024f0 <strlen@plt>
  404444:	ldr	x8, [x19, #32]
  404448:	mov	x20, x0
  40444c:	sub	x8, x8, x21
  404450:	cmp	x8, x0
  404454:	b.cs	40446c <ferror@plt+0x191c>  // b.hs, b.nlast
  404458:	mov	x0, x19
  40445c:	mov	x1, x20
  404460:	bl	418058 <_obstack_newchunk@@Base>
  404464:	ldr	x21, [x19, #24]
  404468:	ldr	x22, [x23, #2888]
  40446c:	mov	x0, x21
  404470:	mov	x1, x22
  404474:	mov	x2, x20
  404478:	bl	4024c0 <memcpy@plt>
  40447c:	ldp	x8, x9, [x19, #24]
  404480:	add	x0, x8, x20
  404484:	str	x0, [x19, #24]
  404488:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40448c:	ldr	x20, [x8, #3568]
  404490:	sub	x8, x9, x0
  404494:	cmp	x8, x20
  404498:	b.cs	4044ac <ferror@plt+0x195c>  // b.hs, b.nlast
  40449c:	mov	x0, x19
  4044a0:	mov	x1, x20
  4044a4:	bl	418058 <_obstack_newchunk@@Base>
  4044a8:	ldr	x0, [x19, #24]
  4044ac:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4044b0:	ldr	x1, [x8, #3560]
  4044b4:	mov	x2, x20
  4044b8:	bl	4024c0 <memcpy@plt>
  4044bc:	ldr	x8, [x19, #24]
  4044c0:	add	x8, x8, x20
  4044c4:	str	x8, [x19, #24]
  4044c8:	b	4044d8 <ferror@plt+0x1988>
  4044cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4044d0:	ldr	w9, [x9, #1188]
  4044d4:	cbz	w9, 4044ec <ferror@plt+0x199c>
  4044d8:	ldp	x20, x19, [sp, #48]
  4044dc:	ldp	x22, x21, [sp, #32]
  4044e0:	ldr	x23, [sp, #16]
  4044e4:	ldp	x29, x30, [sp], #64
  4044e8:	ret
  4044ec:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4044f0:	ldr	w0, [x9, #1192]
  4044f4:	ldr	x3, [x8, #8]
  4044f8:	ldp	x20, x19, [sp, #48]
  4044fc:	ldp	x22, x21, [sp, #32]
  404500:	ldr	x23, [sp, #16]
  404504:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404508:	add	x2, x2, #0x441
  40450c:	mov	w1, wzr
  404510:	ldp	x29, x30, [sp], #64
  404514:	b	402c5c <ferror@plt+0x10c>
  404518:	stp	x29, x30, [sp, #-80]!
  40451c:	stp	x26, x25, [sp, #16]
  404520:	stp	x24, x23, [sp, #32]
  404524:	stp	x22, x21, [sp, #48]
  404528:	stp	x20, x19, [sp, #64]
  40452c:	ldr	x8, [x2]
  404530:	subs	w19, w1, #0x1
  404534:	mov	x29, sp
  404538:	b.gt	404560 <ferror@plt+0x1a10>
  40453c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404540:	ldr	w9, [x9, #1188]
  404544:	cbz	w9, 404634 <ferror@plt+0x1ae4>
  404548:	ldp	x20, x19, [sp, #64]
  40454c:	ldp	x22, x21, [sp, #48]
  404550:	ldp	x24, x23, [sp, #32]
  404554:	ldp	x26, x25, [sp, #16]
  404558:	ldp	x29, x30, [sp], #80
  40455c:	ret
  404560:	mov	x21, x2
  404564:	ldr	x9, [x21, #8]!
  404568:	mov	x22, x2
  40456c:	ldr	w10, [x9]
  404570:	cmp	w10, #0x1
  404574:	b.ne	40461c <ferror@plt+0x1acc>  // b.any
  404578:	ldr	x24, [x9, #8]
  40457c:	mov	x20, x0
  404580:	adrp	x25, 419000 <_obstack_memory_used@@Base+0xd94>
  404584:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404588:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40458c:	mov	w23, w1
  404590:	add	x25, x25, #0xdb0
  404594:	add	x0, x0, #0x31c
  404598:	add	x26, x26, #0x1e8
  40459c:	mov	x1, x24
  4045a0:	bl	4028d0 <strcmp@plt>
  4045a4:	cbz	w0, 4045b4 <ferror@plt+0x1a64>
  4045a8:	ldr	x0, [x25, #24]!
  4045ac:	cbnz	x0, 40459c <ferror@plt+0x1a4c>
  4045b0:	mov	x25, x26
  4045b4:	ldr	x3, [x25, #16]
  4045b8:	adrp	x8, 403000 <ferror@plt+0x4b0>
  4045bc:	add	x8, x8, #0x714
  4045c0:	cmp	x3, x8
  4045c4:	b.eq	404664 <ferror@plt+0x1b14>  // b.none
  4045c8:	ldrb	w8, [x25, #8]
  4045cc:	tbnz	w8, #1, 404684 <ferror@plt+0x1b34>
  4045d0:	cmp	w23, #0x3
  4045d4:	b.lt	404684 <ferror@plt+0x1b34>  // b.tstop
  4045d8:	mov	w10, w23
  4045dc:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4045e0:	add	x8, x22, #0x10
  4045e4:	mov	w9, #0x1                   	// #1
  4045e8:	sub	x10, x10, #0x2
  4045ec:	add	x11, x11, #0x67f
  4045f0:	b	404600 <ferror@plt+0x1ab0>
  4045f4:	subs	x10, x10, #0x1
  4045f8:	add	x8, x8, #0x8
  4045fc:	b.eq	404680 <ferror@plt+0x1b30>  // b.none
  404600:	ldr	x12, [x8]
  404604:	ldr	w13, [x12]
  404608:	cmp	w13, #0x1
  40460c:	b.eq	4045f4 <ferror@plt+0x1aa4>  // b.none
  404610:	str	w9, [x12]
  404614:	str	x11, [x12, #8]
  404618:	b	4045f4 <ferror@plt+0x1aa4>
  40461c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404620:	ldr	w0, [x9, #1192]
  404624:	ldr	x3, [x8, #8]
  404628:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40462c:	add	x2, x2, #0x49e
  404630:	b	404648 <ferror@plt+0x1af8>
  404634:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404638:	ldr	w0, [x9, #1192]
  40463c:	ldr	x3, [x8, #8]
  404640:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404644:	add	x2, x2, #0x441
  404648:	mov	w1, wzr
  40464c:	ldp	x20, x19, [sp, #64]
  404650:	ldp	x22, x21, [sp, #48]
  404654:	ldp	x24, x23, [sp, #32]
  404658:	ldp	x26, x25, [sp, #16]
  40465c:	ldp	x29, x30, [sp], #80
  404660:	b	402c5c <ferror@plt+0x10c>
  404664:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404668:	ldr	w0, [x8, #1192]
  40466c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404670:	add	x2, x2, #0x4c6
  404674:	mov	w1, wzr
  404678:	mov	x3, x24
  40467c:	b	40464c <ferror@plt+0x1afc>
  404680:	ldr	x3, [x25, #16]
  404684:	mov	x0, x20
  404688:	mov	w1, w19
  40468c:	mov	x2, x21
  404690:	ldp	x20, x19, [sp, #64]
  404694:	ldp	x22, x21, [sp, #48]
  404698:	ldp	x24, x23, [sp, #32]
  40469c:	ldp	x26, x25, [sp, #16]
  4046a0:	ldp	x29, x30, [sp], #80
  4046a4:	br	x3
  4046a8:	stp	x29, x30, [sp, #-32]!
  4046ac:	ldr	x8, [x2]
  4046b0:	cmp	w1, #0x0
  4046b4:	str	x19, [sp, #16]
  4046b8:	mov	x29, sp
  4046bc:	b.le	404700 <ferror@plt+0x1bb0>
  4046c0:	mov	x19, x2
  4046c4:	cmp	w1, #0x4
  4046c8:	b.lt	404718 <ferror@plt+0x1bc8>  // b.tstop
  4046cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4046d0:	ldr	w9, [x9, #1188]
  4046d4:	cbnz	w9, 404718 <ferror@plt+0x1bc8>
  4046d8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4046dc:	ldr	w0, [x9, #1192]
  4046e0:	ldr	x3, [x8, #8]
  4046e4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4046e8:	add	x2, x2, #0x46c
  4046ec:	mov	w1, wzr
  4046f0:	bl	402c5c <ferror@plt+0x10c>
  4046f4:	ldr	x8, [x19, #8]
  4046f8:	ldr	x0, [x8, #8]
  4046fc:	b	404730 <ferror@plt+0x1be0>
  404700:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404704:	ldr	w9, [x9, #1188]
  404708:	cbz	w9, 40473c <ferror@plt+0x1bec>
  40470c:	ldr	x19, [sp, #16]
  404710:	ldp	x29, x30, [sp], #32
  404714:	ret
  404718:	cmp	w1, #0x2
  40471c:	b.lt	404760 <ferror@plt+0x1c10>  // b.tstop
  404720:	ldr	x8, [x19, #8]
  404724:	cmp	w1, #0x2
  404728:	ldr	x0, [x8, #8]
  40472c:	b.eq	404764 <ferror@plt+0x1c14>  // b.none
  404730:	ldr	x8, [x19, #16]
  404734:	ldr	x1, [x8, #8]
  404738:	b	404768 <ferror@plt+0x1c18>
  40473c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404740:	ldr	w0, [x9, #1192]
  404744:	ldr	x3, [x8, #8]
  404748:	ldr	x19, [sp, #16]
  40474c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404750:	add	x2, x2, #0x441
  404754:	mov	w1, wzr
  404758:	ldp	x29, x30, [sp], #32
  40475c:	b	402c5c <ferror@plt+0x10c>
  404760:	mov	x0, xzr
  404764:	mov	x1, xzr
  404768:	ldr	x19, [sp, #16]
  40476c:	ldp	x29, x30, [sp], #32
  404770:	b	40c82c <ferror@plt+0x9cdc>
  404774:	stp	x29, x30, [sp, #-32]!
  404778:	ldr	x8, [x2]
  40477c:	cmp	w1, #0x0
  404780:	str	x19, [sp, #16]
  404784:	mov	x29, sp
  404788:	b.le	4047cc <ferror@plt+0x1c7c>
  40478c:	mov	x19, x2
  404790:	cmp	w1, #0x4
  404794:	b.lt	4047e4 <ferror@plt+0x1c94>  // b.tstop
  404798:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40479c:	ldr	w9, [x9, #1188]
  4047a0:	cbnz	w9, 4047e4 <ferror@plt+0x1c94>
  4047a4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4047a8:	ldr	w0, [x9, #1192]
  4047ac:	ldr	x3, [x8, #8]
  4047b0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4047b4:	add	x2, x2, #0x46c
  4047b8:	mov	w1, wzr
  4047bc:	bl	402c5c <ferror@plt+0x10c>
  4047c0:	ldr	x8, [x19, #8]
  4047c4:	ldr	x0, [x8, #8]
  4047c8:	b	4047fc <ferror@plt+0x1cac>
  4047cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4047d0:	ldr	w9, [x9, #1188]
  4047d4:	cbz	w9, 404808 <ferror@plt+0x1cb8>
  4047d8:	ldr	x19, [sp, #16]
  4047dc:	ldp	x29, x30, [sp], #32
  4047e0:	ret
  4047e4:	cmp	w1, #0x2
  4047e8:	b.lt	40482c <ferror@plt+0x1cdc>  // b.tstop
  4047ec:	ldr	x8, [x19, #8]
  4047f0:	cmp	w1, #0x2
  4047f4:	ldr	x0, [x8, #8]
  4047f8:	b.eq	404830 <ferror@plt+0x1ce0>  // b.none
  4047fc:	ldr	x8, [x19, #16]
  404800:	ldr	x1, [x8, #8]
  404804:	b	404834 <ferror@plt+0x1ce4>
  404808:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40480c:	ldr	w0, [x9, #1192]
  404810:	ldr	x3, [x8, #8]
  404814:	ldr	x19, [sp, #16]
  404818:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40481c:	add	x2, x2, #0x441
  404820:	mov	w1, wzr
  404824:	ldp	x29, x30, [sp], #32
  404828:	b	402c5c <ferror@plt+0x10c>
  40482c:	mov	x0, xzr
  404830:	mov	x1, xzr
  404834:	ldr	x19, [sp, #16]
  404838:	ldp	x29, x30, [sp], #32
  40483c:	b	40c784 <ferror@plt+0x9c34>
  404840:	stp	x29, x30, [sp, #-32]!
  404844:	stp	x20, x19, [sp, #16]
  404848:	ldr	x8, [x2]
  40484c:	cmp	w1, #0x0
  404850:	mov	x29, sp
  404854:	b.le	404890 <ferror@plt+0x1d40>
  404858:	mov	x19, x2
  40485c:	cmp	w1, #0x3
  404860:	b.lt	4048b4 <ferror@plt+0x1d64>  // b.tstop
  404864:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404868:	ldr	w9, [x9, #1188]
  40486c:	cbnz	w9, 4048b4 <ferror@plt+0x1d64>
  404870:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404874:	ldr	w0, [x9, #1192]
  404878:	ldr	x3, [x8, #8]
  40487c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404880:	add	x2, x2, #0x46c
  404884:	mov	w1, wzr
  404888:	bl	402c5c <ferror@plt+0x10c>
  40488c:	b	4048c8 <ferror@plt+0x1d78>
  404890:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404894:	ldr	w9, [x9, #1188]
  404898:	cbnz	w9, 404964 <ferror@plt+0x1e14>
  40489c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4048a0:	ldr	w0, [x9, #1192]
  4048a4:	ldr	x3, [x8, #8]
  4048a8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4048ac:	add	x2, x2, #0x441
  4048b0:	b	404934 <ferror@plt+0x1de4>
  4048b4:	cmp	w1, #0x1
  4048b8:	b.ne	4048c8 <ferror@plt+0x1d78>  // b.any
  4048bc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4048c0:	str	wzr, [x8, #1172]
  4048c4:	b	404964 <ferror@plt+0x1e14>
  4048c8:	ldr	x8, [x19, #8]
  4048cc:	ldr	x0, [x8, #8]
  4048d0:	ldrb	w20, [x0]
  4048d4:	cmp	w20, #0x2d
  4048d8:	b.eq	4048e4 <ferror@plt+0x1d94>  // b.none
  4048dc:	cmp	w20, #0x2b
  4048e0:	b.ne	404910 <ferror@plt+0x1dc0>  // b.any
  4048e4:	add	x0, x0, #0x1
  4048e8:	bl	4089cc <ferror@plt+0x5e7c>
  4048ec:	tbnz	w0, #31, 40491c <ferror@plt+0x1dcc>
  4048f0:	cmp	w20, #0x2d
  4048f4:	b.eq	404954 <ferror@plt+0x1e04>  // b.none
  4048f8:	cmp	w20, #0x2b
  4048fc:	b.eq	404944 <ferror@plt+0x1df4>  // b.none
  404900:	cbnz	w20, 404970 <ferror@plt+0x1e20>
  404904:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404908:	str	w0, [x8, #1172]
  40490c:	b	404964 <ferror@plt+0x1e14>
  404910:	mov	w20, wzr
  404914:	bl	4089cc <ferror@plt+0x5e7c>
  404918:	tbz	w0, #31, 4048f0 <ferror@plt+0x1da0>
  40491c:	ldr	x8, [x19, #8]
  404920:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404924:	ldr	w0, [x9, #1192]
  404928:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40492c:	ldr	x3, [x8, #8]
  404930:	add	x2, x2, #0x4dd
  404934:	ldp	x20, x19, [sp, #16]
  404938:	mov	w1, wzr
  40493c:	ldp	x29, x30, [sp], #32
  404940:	b	402c5c <ferror@plt+0x10c>
  404944:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404948:	ldr	w9, [x8, #1172]
  40494c:	orr	w9, w9, w0
  404950:	b	404960 <ferror@plt+0x1e10>
  404954:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404958:	ldr	w9, [x8, #1172]
  40495c:	bic	w9, w9, w0
  404960:	str	w9, [x8, #1172]
  404964:	ldp	x20, x19, [sp, #16]
  404968:	ldp	x29, x30, [sp], #32
  40496c:	ret
  404970:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404974:	ldr	w0, [x8, #1192]
  404978:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40497c:	add	x2, x2, #0x4fe
  404980:	mov	w1, wzr
  404984:	bl	402c5c <ferror@plt+0x10c>
  404988:	bl	402860 <abort@plt>
  40498c:	stp	x29, x30, [sp, #-32]!
  404990:	stp	x20, x19, [sp, #16]
  404994:	ldr	x8, [x2]
  404998:	cmp	w1, #0x0
  40499c:	mov	x29, sp
  4049a0:	b.le	4049dc <ferror@plt+0x1e8c>
  4049a4:	mov	x19, x2
  4049a8:	cmp	w1, #0x3
  4049ac:	b.lt	404a04 <ferror@plt+0x1eb4>  // b.tstop
  4049b0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4049b4:	ldr	w9, [x9, #1188]
  4049b8:	cbnz	w9, 404a04 <ferror@plt+0x1eb4>
  4049bc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4049c0:	ldr	w0, [x9, #1192]
  4049c4:	ldr	x3, [x8, #8]
  4049c8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4049cc:	add	x2, x2, #0x46c
  4049d0:	mov	w1, wzr
  4049d4:	bl	402c5c <ferror@plt+0x10c>
  4049d8:	b	404a1c <ferror@plt+0x1ecc>
  4049dc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4049e0:	ldr	w9, [x9, #1188]
  4049e4:	cbnz	w9, 404a2c <ferror@plt+0x1edc>
  4049e8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4049ec:	ldr	w0, [x9, #1192]
  4049f0:	ldr	x3, [x8, #8]
  4049f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4049f8:	add	x2, x2, #0x441
  4049fc:	mov	w1, wzr
  404a00:	b	404a5c <ferror@plt+0x1f0c>
  404a04:	cmp	w1, #0x1
  404a08:	b.ne	404a1c <ferror@plt+0x1ecc>  // b.any
  404a0c:	ldp	x20, x19, [sp, #16]
  404a10:	mov	x0, xzr
  404a14:	ldp	x29, x30, [sp], #32
  404a18:	b	408b9c <ferror@plt+0x604c>
  404a1c:	ldr	x8, [x19, #8]
  404a20:	ldr	x0, [x8, #8]
  404a24:	bl	408b9c <ferror@plt+0x604c>
  404a28:	tbz	w0, #0, 404a38 <ferror@plt+0x1ee8>
  404a2c:	ldp	x20, x19, [sp, #16]
  404a30:	ldp	x29, x30, [sp], #32
  404a34:	ret
  404a38:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404a3c:	ldr	w20, [x8, #1192]
  404a40:	bl	402ac0 <__errno_location@plt>
  404a44:	ldr	x8, [x19, #8]
  404a48:	ldr	w1, [x0]
  404a4c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  404a50:	add	x2, x2, #0x1e5
  404a54:	ldr	x3, [x8, #8]
  404a58:	mov	w0, w20
  404a5c:	ldp	x20, x19, [sp, #16]
  404a60:	ldp	x29, x30, [sp], #32
  404a64:	b	402c5c <ferror@plt+0x10c>
  404a68:	stp	x29, x30, [sp, #-48]!
  404a6c:	stp	x20, x19, [sp, #32]
  404a70:	ldr	x8, [x2]
  404a74:	cmp	w1, #0x1
  404a78:	str	x21, [sp, #16]
  404a7c:	mov	x29, sp
  404a80:	b.gt	404ab0 <ferror@plt+0x1f60>
  404a84:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404a88:	ldr	w9, [x9, #1188]
  404a8c:	cbnz	w9, 404bb4 <ferror@plt+0x2064>
  404a90:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404a94:	ldr	w0, [x9, #1192]
  404a98:	ldr	x3, [x8, #8]
  404a9c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404aa0:	add	x2, x2, #0x441
  404aa4:	mov	w1, wzr
  404aa8:	bl	402c5c <ferror@plt+0x10c>
  404aac:	b	404bb4 <ferror@plt+0x2064>
  404ab0:	mov	x20, x2
  404ab4:	mov	x19, x0
  404ab8:	cmp	w1, #0x2
  404abc:	b.eq	404aec <ferror@plt+0x1f9c>  // b.none
  404ac0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404ac4:	ldr	w9, [x9, #1188]
  404ac8:	cbnz	w9, 404aec <ferror@plt+0x1f9c>
  404acc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404ad0:	ldr	w0, [x9, #1192]
  404ad4:	ldr	x3, [x8, #8]
  404ad8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404adc:	add	x2, x2, #0x46c
  404ae0:	mov	w1, wzr
  404ae4:	bl	402c5c <ferror@plt+0x10c>
  404ae8:	ldr	x8, [x20]
  404aec:	ldr	x9, [x20, #8]
  404af0:	add	x2, x29, #0x1c
  404af4:	mov	x0, x8
  404af8:	ldr	x1, [x9, #8]
  404afc:	bl	407d18 <ferror@plt+0x51c8>
  404b00:	tbz	w0, #0, 404bb4 <ferror@plt+0x2064>
  404b04:	ldr	w8, [x29, #28]
  404b08:	mov	w11, #0x1                   	// #1
  404b0c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404b10:	mov	w9, #0xcccd                	// #52429
  404b14:	sub	w11, w11, w8
  404b18:	subs	w12, w8, #0x1
  404b1c:	csel	w12, w11, w12, lt  // lt = tstop
  404b20:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404b24:	add	x20, x20, #0x81e
  404b28:	movk	w9, #0xcccc, lsl #16
  404b2c:	mov	w10, #0xa                   	// #10
  404b30:	add	x11, x11, #0x2be
  404b34:	strb	wzr, [x20, #1]
  404b38:	umull	x13, w12, w9
  404b3c:	lsr	x13, x13, #35
  404b40:	msub	w14, w13, w10, w12
  404b44:	ldrb	w14, [x11, w14, uxtw]
  404b48:	cmp	w12, #0x9
  404b4c:	mov	w12, w13
  404b50:	strb	w14, [x20], #-1
  404b54:	b.hi	404b38 <ferror@plt+0x1fe8>  // b.pmore
  404b58:	cmp	w8, #0x0
  404b5c:	b.le	404b68 <ferror@plt+0x2018>
  404b60:	add	x20, x20, #0x1
  404b64:	b	404b70 <ferror@plt+0x2020>
  404b68:	mov	w8, #0x2d                  	// #45
  404b6c:	strb	w8, [x20]
  404b70:	mov	x0, x20
  404b74:	bl	4024f0 <strlen@plt>
  404b78:	mov	x21, x0
  404b7c:	ldp	x0, x8, [x19, #24]
  404b80:	sub	x8, x8, x0
  404b84:	cmp	x8, x21
  404b88:	b.cs	404b9c <ferror@plt+0x204c>  // b.hs, b.nlast
  404b8c:	mov	x0, x19
  404b90:	mov	x1, x21
  404b94:	bl	418058 <_obstack_newchunk@@Base>
  404b98:	ldr	x0, [x19, #24]
  404b9c:	mov	x1, x20
  404ba0:	mov	x2, x21
  404ba4:	bl	4024c0 <memcpy@plt>
  404ba8:	ldr	x8, [x19, #24]
  404bac:	add	x8, x8, x21
  404bb0:	str	x8, [x19, #24]
  404bb4:	ldp	x20, x19, [sp, #32]
  404bb8:	ldr	x21, [sp, #16]
  404bbc:	ldp	x29, x30, [sp], #48
  404bc0:	ret
  404bc4:	mov	x8, x2
  404bc8:	mov	w2, #0x1                   	// #1
  404bcc:	mov	w0, w1
  404bd0:	mov	x1, x8
  404bd4:	b	407df8 <ferror@plt+0x52a8>
  404bd8:	stp	x29, x30, [sp, #-96]!
  404bdc:	stp	x20, x19, [sp, #80]
  404be0:	mov	x19, x2
  404be4:	cmp	w1, #0x2
  404be8:	stp	x28, x27, [sp, #16]
  404bec:	stp	x26, x25, [sp, #32]
  404bf0:	stp	x24, x23, [sp, #48]
  404bf4:	stp	x22, x21, [sp, #64]
  404bf8:	mov	x29, sp
  404bfc:	b.ge	404c28 <ferror@plt+0x20d8>  // b.tcont
  404c00:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404c04:	ldr	w8, [x8, #1188]
  404c08:	cbz	w8, 404dc0 <ferror@plt+0x2270>
  404c0c:	ldp	x20, x19, [sp, #80]
  404c10:	ldp	x22, x21, [sp, #64]
  404c14:	ldp	x24, x23, [sp, #48]
  404c18:	ldp	x26, x25, [sp, #32]
  404c1c:	ldp	x28, x27, [sp, #16]
  404c20:	ldp	x29, x30, [sp], #96
  404c24:	ret
  404c28:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404c2c:	mov	w20, w1
  404c30:	mov	x21, x0
  404c34:	mov	w28, #0x1                   	// #1
  404c38:	add	x23, x23, #0x67f
  404c3c:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404c40:	b	404c68 <ferror@plt+0x2118>
  404c44:	ldr	x1, [x22, #3560]
  404c48:	mov	x2, x24
  404c4c:	bl	4024c0 <memcpy@plt>
  404c50:	ldr	x8, [x21, #24]
  404c54:	add	x8, x8, x24
  404c58:	str	x8, [x21, #24]
  404c5c:	add	w28, w28, #0x1
  404c60:	cmp	w20, w28
  404c64:	b.eq	404c0c <ferror@plt+0x20bc>  // b.none
  404c68:	cmp	w28, w20
  404c6c:	mov	x25, x23
  404c70:	b.ge	404c7c <ferror@plt+0x212c>  // b.tcont
  404c74:	ldr	x8, [x19, w28, sxtw #3]
  404c78:	ldr	x25, [x8, #8]
  404c7c:	mov	x0, x25
  404c80:	mov	w1, wzr
  404c84:	bl	41059c <ferror@plt+0xda4c>
  404c88:	cbz	x0, 404c5c <ferror@plt+0x210c>
  404c8c:	ldr	w8, [x0, #24]
  404c90:	mov	x24, x0
  404c94:	cbz	w8, 404c5c <ferror@plt+0x210c>
  404c98:	cmp	w8, #0x2
  404c9c:	b.eq	404d64 <ferror@plt+0x2214>  // b.none
  404ca0:	cmp	w8, #0x1
  404ca4:	b.ne	404df8 <ferror@plt+0x22a8>  // b.any
  404ca8:	ldp	x0, x8, [x21, #24]
  404cac:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404cb0:	ldr	x25, [x9, #3512]
  404cb4:	sub	x8, x8, x0
  404cb8:	cmp	x8, x25
  404cbc:	b.cs	404cd0 <ferror@plt+0x2180>  // b.hs, b.nlast
  404cc0:	mov	x0, x21
  404cc4:	mov	x1, x25
  404cc8:	bl	418058 <_obstack_newchunk@@Base>
  404ccc:	ldr	x0, [x21, #24]
  404cd0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404cd4:	ldr	x1, [x8, #3504]
  404cd8:	mov	x2, x25
  404cdc:	bl	4024c0 <memcpy@plt>
  404ce0:	ldr	x8, [x21, #24]
  404ce4:	add	x26, x8, x25
  404ce8:	str	x26, [x21, #24]
  404cec:	ldr	x27, [x24, #32]
  404cf0:	mov	x0, x27
  404cf4:	bl	4024f0 <strlen@plt>
  404cf8:	ldr	x8, [x21, #32]
  404cfc:	mov	x25, x0
  404d00:	sub	x8, x8, x26
  404d04:	cmp	x8, x0
  404d08:	b.cs	404d20 <ferror@plt+0x21d0>  // b.hs, b.nlast
  404d0c:	mov	x0, x21
  404d10:	mov	x1, x25
  404d14:	bl	418058 <_obstack_newchunk@@Base>
  404d18:	ldr	x26, [x21, #24]
  404d1c:	ldr	x27, [x24, #32]
  404d20:	mov	x0, x26
  404d24:	mov	x1, x27
  404d28:	mov	x2, x25
  404d2c:	bl	4024c0 <memcpy@plt>
  404d30:	ldp	x8, x9, [x21, #24]
  404d34:	add	x0, x8, x25
  404d38:	str	x0, [x21, #24]
  404d3c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404d40:	ldr	x24, [x8, #3568]
  404d44:	sub	x8, x9, x0
  404d48:	cmp	x8, x24
  404d4c:	b.cs	404c44 <ferror@plt+0x20f4>  // b.hs, b.nlast
  404d50:	mov	x0, x21
  404d54:	mov	x1, x24
  404d58:	bl	418058 <_obstack_newchunk@@Base>
  404d5c:	ldr	x0, [x21, #24]
  404d60:	b	404c44 <ferror@plt+0x20f4>
  404d64:	ldr	x0, [x24, #32]
  404d68:	adrp	x8, 403000 <ferror@plt+0x4b0>
  404d6c:	add	x8, x8, #0x714
  404d70:	cmp	x0, x8
  404d74:	b.eq	404d88 <ferror@plt+0x2238>  // b.none
  404d78:	cmp	w20, #0x2
  404d7c:	b.ne	404da0 <ferror@plt+0x2250>  // b.any
  404d80:	bl	40be28 <ferror@plt+0x92d8>
  404d84:	b	404c5c <ferror@plt+0x210c>
  404d88:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404d8c:	ldr	w0, [x8, #1192]
  404d90:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404d94:	mov	w1, wzr
  404d98:	add	x2, x2, #0x2e3
  404d9c:	b	404db4 <ferror@plt+0x2264>
  404da0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404da4:	ldr	w0, [x8, #1192]
  404da8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404dac:	mov	w1, wzr
  404db0:	add	x2, x2, #0x60f
  404db4:	mov	x3, x25
  404db8:	bl	402c5c <ferror@plt+0x10c>
  404dbc:	b	404c5c <ferror@plt+0x210c>
  404dc0:	ldr	x8, [x19]
  404dc4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404dc8:	ldr	w0, [x9, #1192]
  404dcc:	ldp	x20, x19, [sp, #80]
  404dd0:	ldr	x3, [x8, #8]
  404dd4:	ldp	x22, x21, [sp, #64]
  404dd8:	ldp	x24, x23, [sp, #48]
  404ddc:	ldp	x26, x25, [sp, #32]
  404de0:	ldp	x28, x27, [sp, #16]
  404de4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404de8:	add	x2, x2, #0x441
  404dec:	mov	w1, wzr
  404df0:	ldp	x29, x30, [sp], #96
  404df4:	b	402c5c <ferror@plt+0x10c>
  404df8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404dfc:	ldr	w0, [x8, #1192]
  404e00:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404e04:	add	x2, x2, #0x638
  404e08:	mov	w1, wzr
  404e0c:	bl	402c5c <ferror@plt+0x10c>
  404e10:	bl	402860 <abort@plt>
  404e14:	stp	x29, x30, [sp, #-32]!
  404e18:	mov	x29, sp
  404e1c:	str	wzr, [x29, #28]
  404e20:	ldr	x0, [x2]
  404e24:	cmp	w1, #0x0
  404e28:	str	x19, [sp, #16]
  404e2c:	b.le	404e70 <ferror@plt+0x2320>
  404e30:	mov	x19, x2
  404e34:	cmp	w1, #0x2
  404e38:	b.le	404ea0 <ferror@plt+0x2350>
  404e3c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404e40:	ldr	w8, [x8, #1188]
  404e44:	cbnz	w8, 404ea0 <ferror@plt+0x2350>
  404e48:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404e4c:	ldr	w8, [x8, #1192]
  404e50:	ldr	x3, [x0, #8]
  404e54:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404e58:	add	x2, x2, #0x46c
  404e5c:	mov	w0, w8
  404e60:	mov	w1, wzr
  404e64:	bl	402c5c <ferror@plt+0x10c>
  404e68:	ldr	x0, [x19]
  404e6c:	b	404ea8 <ferror@plt+0x2358>
  404e70:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404e74:	ldr	w8, [x8, #1188]
  404e78:	cbnz	w8, 404ecc <ferror@plt+0x237c>
  404e7c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404e80:	ldr	w8, [x8, #1192]
  404e84:	ldr	x3, [x0, #8]
  404e88:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404e8c:	add	x2, x2, #0x441
  404e90:	mov	w0, w8
  404e94:	mov	w1, wzr
  404e98:	bl	402c5c <ferror@plt+0x10c>
  404e9c:	b	404ecc <ferror@plt+0x237c>
  404ea0:	cmp	w1, #0x2
  404ea4:	b.lt	404ec4 <ferror@plt+0x2374>  // b.tstop
  404ea8:	ldr	x8, [x19, #8]
  404eac:	add	x2, x29, #0x1c
  404eb0:	ldr	x1, [x8, #8]
  404eb4:	bl	407d18 <ferror@plt+0x51c8>
  404eb8:	tbz	w0, #0, 404ecc <ferror@plt+0x237c>
  404ebc:	ldr	w0, [x29, #28]
  404ec0:	b	404ec8 <ferror@plt+0x2378>
  404ec4:	mov	w0, wzr
  404ec8:	bl	40f214 <ferror@plt+0xc6c4>
  404ecc:	ldr	x19, [sp, #16]
  404ed0:	ldp	x29, x30, [sp], #32
  404ed4:	ret
  404ed8:	stp	x29, x30, [sp, #-48]!
  404edc:	stp	x20, x19, [sp, #32]
  404ee0:	ldr	x8, [x2]
  404ee4:	cmp	w1, #0x0
  404ee8:	str	x21, [sp, #16]
  404eec:	mov	x29, sp
  404ef0:	b.le	404f84 <ferror@plt+0x2434>
  404ef4:	mov	x19, x0
  404ef8:	cmp	w1, #0x1
  404efc:	b.eq	404f28 <ferror@plt+0x23d8>  // b.none
  404f00:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404f04:	ldr	w9, [x9, #1188]
  404f08:	cbnz	w9, 404f28 <ferror@plt+0x23d8>
  404f0c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404f10:	ldr	w0, [x9, #1192]
  404f14:	ldr	x3, [x8, #8]
  404f18:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404f1c:	add	x2, x2, #0x46c
  404f20:	mov	w1, wzr
  404f24:	bl	402c5c <ferror@plt+0x10c>
  404f28:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  404f2c:	ldr	w8, [x8, #3580]
  404f30:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404f34:	mov	w9, #0xcccd                	// #52429
  404f38:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404f3c:	cmp	w8, #0x0
  404f40:	add	x20, x20, #0x81e
  404f44:	movk	w9, #0xcccc, lsl #16
  404f48:	mov	w10, #0xa                   	// #10
  404f4c:	cneg	w12, w8, mi  // mi = first
  404f50:	add	x11, x11, #0x2be
  404f54:	strb	wzr, [x20, #1]
  404f58:	umull	x13, w12, w9
  404f5c:	lsr	x13, x13, #35
  404f60:	msub	w14, w13, w10, w12
  404f64:	ldrb	w14, [x11, w14, uxtw]
  404f68:	cmp	w12, #0x9
  404f6c:	mov	w12, w13
  404f70:	strb	w14, [x20], #-1
  404f74:	b.hi	404f58 <ferror@plt+0x2408>  // b.pmore
  404f78:	tbnz	w8, #31, 404fb8 <ferror@plt+0x2468>
  404f7c:	add	x20, x20, #0x1
  404f80:	b	404fc0 <ferror@plt+0x2470>
  404f84:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404f88:	ldr	w9, [x9, #1188]
  404f8c:	cbnz	w9, 405004 <ferror@plt+0x24b4>
  404f90:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  404f94:	ldr	w0, [x9, #1192]
  404f98:	ldr	x3, [x8, #8]
  404f9c:	ldp	x20, x19, [sp, #32]
  404fa0:	ldr	x21, [sp, #16]
  404fa4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  404fa8:	add	x2, x2, #0x441
  404fac:	mov	w1, wzr
  404fb0:	ldp	x29, x30, [sp], #48
  404fb4:	b	402c5c <ferror@plt+0x10c>
  404fb8:	mov	w8, #0x2d                  	// #45
  404fbc:	strb	w8, [x20]
  404fc0:	mov	x0, x20
  404fc4:	bl	4024f0 <strlen@plt>
  404fc8:	mov	x21, x0
  404fcc:	ldp	x0, x8, [x19, #24]
  404fd0:	sub	x8, x8, x0
  404fd4:	cmp	x8, x21
  404fd8:	b.cs	404fec <ferror@plt+0x249c>  // b.hs, b.nlast
  404fdc:	mov	x0, x19
  404fe0:	mov	x1, x21
  404fe4:	bl	418058 <_obstack_newchunk@@Base>
  404fe8:	ldr	x0, [x19, #24]
  404fec:	mov	x1, x20
  404ff0:	mov	x2, x21
  404ff4:	bl	4024c0 <memcpy@plt>
  404ff8:	ldr	x8, [x19, #24]
  404ffc:	add	x8, x8, x21
  405000:	str	x8, [x19, #24]
  405004:	ldp	x20, x19, [sp, #32]
  405008:	ldr	x21, [sp, #16]
  40500c:	ldp	x29, x30, [sp], #48
  405010:	ret
  405014:	stp	x29, x30, [sp, #-16]!
  405018:	ldr	x8, [x2]
  40501c:	cmp	w1, #0x0
  405020:	mov	x29, sp
  405024:	b.le	405060 <ferror@plt+0x2510>
  405028:	cmp	w1, #0x1
  40502c:	b.eq	405058 <ferror@plt+0x2508>  // b.none
  405030:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405034:	ldr	w9, [x9, #1188]
  405038:	cbnz	w9, 405058 <ferror@plt+0x2508>
  40503c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405040:	ldr	w0, [x9, #1192]
  405044:	ldr	x3, [x8, #8]
  405048:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40504c:	add	x2, x2, #0x46c
  405050:	mov	w1, wzr
  405054:	bl	402c5c <ferror@plt+0x10c>
  405058:	ldp	x29, x30, [sp], #16
  40505c:	b	40c398 <ferror@plt+0x9848>
  405060:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405064:	ldr	w9, [x9, #1188]
  405068:	cbz	w9, 405074 <ferror@plt+0x2524>
  40506c:	ldp	x29, x30, [sp], #16
  405070:	ret
  405074:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405078:	ldr	w0, [x9, #1192]
  40507c:	ldr	x3, [x8, #8]
  405080:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405084:	add	x2, x2, #0x441
  405088:	mov	w1, wzr
  40508c:	ldp	x29, x30, [sp], #16
  405090:	b	402c5c <ferror@plt+0x10c>
  405094:	sub	sp, sp, #0x80
  405098:	stp	x29, x30, [sp, #32]
  40509c:	stp	x28, x27, [sp, #48]
  4050a0:	stp	x26, x25, [sp, #64]
  4050a4:	stp	x24, x23, [sp, #80]
  4050a8:	stp	x22, x21, [sp, #96]
  4050ac:	stp	x20, x19, [sp, #112]
  4050b0:	ldr	x8, [x0, #16]
  4050b4:	mov	x19, x0
  4050b8:	cmp	w1, #0x1
  4050bc:	add	x29, sp, #0x20
  4050c0:	stp	x0, x8, [sp, #8]
  4050c4:	str	wzr, [sp, #24]
  4050c8:	b.ne	4050e0 <ferror@plt+0x2590>  // b.any
  4050cc:	adrp	x0, 407000 <ferror@plt+0x44b0>
  4050d0:	add	x0, x0, #0xfc0
  4050d4:	add	x1, sp, #0x8
  4050d8:	bl	4108d0 <ferror@plt+0xdd80>
  4050dc:	b	40519c <ferror@plt+0x264c>
  4050e0:	cmp	w1, #0x2
  4050e4:	b.lt	40519c <ferror@plt+0x264c>  // b.tstop
  4050e8:	mov	w8, w1
  4050ec:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4050f0:	mov	w23, wzr
  4050f4:	add	x24, x2, #0x8
  4050f8:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4050fc:	sub	x26, x8, #0x1
  405100:	add	x20, x20, #0x666
  405104:	b	40512c <ferror@plt+0x25dc>
  405108:	ldr	x8, [x24]
  40510c:	ldr	w0, [x25, #1192]
  405110:	mov	w1, wzr
  405114:	mov	x2, x20
  405118:	ldr	x3, [x8, #8]
  40511c:	bl	402c5c <ferror@plt+0x10c>
  405120:	subs	x26, x26, #0x1
  405124:	add	x24, x24, #0x8
  405128:	b.eq	40519c <ferror@plt+0x264c>  // b.none
  40512c:	ldr	x8, [x24]
  405130:	mov	w1, wzr
  405134:	ldr	x0, [x8, #8]
  405138:	bl	41059c <ferror@plt+0xda4c>
  40513c:	cbz	x0, 405108 <ferror@plt+0x25b8>
  405140:	ldr	w8, [x0, #24]
  405144:	mov	x21, x0
  405148:	cbz	w8, 405108 <ferror@plt+0x25b8>
  40514c:	ldrb	w8, [x21, #8]
  405150:	tbnz	w8, #1, 405120 <ferror@plt+0x25d0>
  405154:	ldr	x22, [sp, #8]
  405158:	ldp	x8, x9, [x22, #24]
  40515c:	sub	x9, x9, x8
  405160:	cmp	x9, #0x7
  405164:	b.hi	405178 <ferror@plt+0x2628>  // b.pmore
  405168:	mov	w1, #0x8                   	// #8
  40516c:	mov	x0, x22
  405170:	bl	418058 <_obstack_newchunk@@Base>
  405174:	ldr	x8, [x22, #24]
  405178:	ldr	x9, [x22, #16]
  40517c:	add	x8, x8, #0x8
  405180:	add	w10, w23, #0x1
  405184:	str	x8, [x22, #24]
  405188:	str	w10, [sp, #24]
  40518c:	str	x9, [sp, #16]
  405190:	str	x21, [x9, w23, sxtw #3]
  405194:	mov	w23, w10
  405198:	b	405120 <ferror@plt+0x25d0>
  40519c:	ldp	x9, x8, [x19, #16]
  4051a0:	cmp	x8, x9
  4051a4:	b.ne	4051b4 <ferror@plt+0x2664>  // b.any
  4051a8:	ldrb	w9, [x19, #80]
  4051ac:	orr	w9, w9, #0x2
  4051b0:	strb	w9, [x19, #80]
  4051b4:	ldr	x10, [x19, #48]
  4051b8:	ldr	x11, [x19, #8]
  4051bc:	ldr	x9, [x19, #32]
  4051c0:	add	x8, x10, x8
  4051c4:	bic	x8, x8, x10
  4051c8:	sub	x10, x8, x11
  4051cc:	sub	x11, x9, x11
  4051d0:	cmp	x10, x11
  4051d4:	str	x8, [x19, #24]
  4051d8:	b.ls	4051e4 <ferror@plt+0x2694>  // b.plast
  4051dc:	mov	x8, x9
  4051e0:	str	x9, [x19, #24]
  4051e4:	str	x8, [x19, #16]
  4051e8:	ldr	x0, [sp, #16]
  4051ec:	ldrsw	x1, [sp, #24]
  4051f0:	adrp	x3, 408000 <ferror@plt+0x54b0>
  4051f4:	add	x3, x3, #0x44
  4051f8:	mov	w2, #0x8                   	// #8
  4051fc:	bl	4025e0 <qsort@plt>
  405200:	ldr	w8, [sp, #24]
  405204:	cmp	w8, #0x1
  405208:	b.lt	405324 <ferror@plt+0x27d4>  // b.tstop
  40520c:	adrp	x24, 419000 <_obstack_memory_used@@Base+0xd94>
  405210:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0x3d94>
  405214:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405218:	adrp	x26, 403000 <ferror@plt+0x4b0>
  40521c:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x3d94>
  405220:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405224:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405228:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40522c:	add	x24, x24, #0xdb0
  405230:	add	x19, x19, #0x511
  405234:	add	x25, x25, #0x1e8
  405238:	add	x26, x26, #0x714
  40523c:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405240:	add	x20, x20, #0x299
  405244:	adrp	x28, 438000 <__progname@@GLIBC_2.17+0xabc8>
  405248:	add	x21, x21, #0x680
  40524c:	add	x22, x22, #0x67b
  405250:	b	405274 <ferror@plt+0x2724>
  405254:	bl	4177a8 <ferror@plt+0x14c58>
  405258:	ldr	w8, [sp, #24]
  40525c:	ldr	x9, [sp, #16]
  405260:	subs	w8, w8, #0x1
  405264:	add	x9, x9, #0x8
  405268:	str	w8, [sp, #24]
  40526c:	str	x9, [sp, #16]
  405270:	b.le	405324 <ferror@plt+0x27d4>
  405274:	ldr	x0, [x23, #2088]
  405278:	cbz	x0, 405290 <ferror@plt+0x2740>
  40527c:	ldr	x8, [sp, #16]
  405280:	mov	x1, x22
  405284:	ldr	x8, [x8]
  405288:	ldr	x2, [x8, #16]
  40528c:	bl	4177a8 <ferror@plt+0x14c58>
  405290:	ldr	x8, [sp, #16]
  405294:	ldr	x8, [x8]
  405298:	ldr	w9, [x8, #24]
  40529c:	cmp	w9, #0x2
  4052a0:	b.eq	4052c8 <ferror@plt+0x2778>  // b.none
  4052a4:	cmp	w9, #0x1
  4052a8:	b.ne	405344 <ferror@plt+0x27f4>  // b.any
  4052ac:	ldrb	w9, [x27, #1172]
  4052b0:	ldr	x0, [x23, #2088]
  4052b4:	tbnz	w9, #2, 405304 <ferror@plt+0x27b4>
  4052b8:	cbz	x0, 405258 <ferror@plt+0x2708>
  4052bc:	ldr	x2, [x8, #32]
  4052c0:	mov	x1, x20
  4052c4:	b	405254 <ferror@plt+0x2704>
  4052c8:	ldr	x9, [x8, #32]
  4052cc:	mov	x8, x24
  4052d0:	ldr	x10, [x8, #16]
  4052d4:	cmp	x10, x9
  4052d8:	b.eq	4052f0 <ferror@plt+0x27a0>  // b.none
  4052dc:	ldr	x10, [x8, #24]!
  4052e0:	cbnz	x10, 4052d0 <ferror@plt+0x2780>
  4052e4:	cmp	x9, x26
  4052e8:	mov	x8, x25
  4052ec:	b.ne	405358 <ferror@plt+0x2808>  // b.any
  4052f0:	ldr	x0, [x23, #2088]
  4052f4:	cbz	x0, 405258 <ferror@plt+0x2708>
  4052f8:	ldr	x2, [x8]
  4052fc:	mov	x1, x19
  405300:	b	405254 <ferror@plt+0x2704>
  405304:	cbz	x0, 405258 <ferror@plt+0x2708>
  405308:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40530c:	ldr	x2, [x9, #3504]
  405310:	ldr	x3, [x8, #32]
  405314:	ldr	x4, [x28, #3560]
  405318:	mov	x1, x21
  40531c:	bl	4177a8 <ferror@plt+0x14c58>
  405320:	b	405258 <ferror@plt+0x2708>
  405324:	ldp	x20, x19, [sp, #112]
  405328:	ldp	x22, x21, [sp, #96]
  40532c:	ldp	x24, x23, [sp, #80]
  405330:	ldp	x26, x25, [sp, #64]
  405334:	ldp	x28, x27, [sp, #48]
  405338:	ldp	x29, x30, [sp, #32]
  40533c:	add	sp, sp, #0x80
  405340:	ret
  405344:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405348:	ldr	w0, [x8, #1192]
  40534c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405350:	add	x2, x2, #0x6bb
  405354:	b	405368 <ferror@plt+0x2818>
  405358:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40535c:	ldr	w0, [x8, #1192]
  405360:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405364:	add	x2, x2, #0x688
  405368:	mov	w1, wzr
  40536c:	bl	402c5c <ferror@plt+0x10c>
  405370:	bl	402860 <abort@plt>
  405374:	stp	x29, x30, [sp, #-32]!
  405378:	cmp	w1, #0x1
  40537c:	stp	x20, x19, [sp, #16]
  405380:	mov	x29, sp
  405384:	b.gt	4053a0 <ferror@plt+0x2850>
  405388:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40538c:	ldr	w8, [x8, #1188]
  405390:	cbz	w8, 405450 <ferror@plt+0x2900>
  405394:	ldp	x20, x19, [sp, #16]
  405398:	ldp	x29, x30, [sp], #32
  40539c:	ret
  4053a0:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4053a4:	add	x3, x3, #0xa38
  4053a8:	mov	w4, wzr
  4053ac:	mov	x19, x0
  4053b0:	bl	403f38 <ferror@plt+0x13e8>
  4053b4:	ldp	x8, x9, [x19, #24]
  4053b8:	cmp	x9, x8
  4053bc:	b.ne	4053d0 <ferror@plt+0x2880>  // b.any
  4053c0:	mov	w1, #0x1                   	// #1
  4053c4:	mov	x0, x19
  4053c8:	bl	418058 <_obstack_newchunk@@Base>
  4053cc:	ldr	x8, [x19, #24]
  4053d0:	add	x9, x8, #0x1
  4053d4:	str	x9, [x19, #24]
  4053d8:	strb	wzr, [x8]
  4053dc:	bl	408b08 <ferror@plt+0x5fb8>
  4053e0:	ldp	x2, x8, [x19, #16]
  4053e4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4053e8:	ldr	x0, [x20, #1032]
  4053ec:	cmp	x8, x2
  4053f0:	b.ne	405400 <ferror@plt+0x28b0>  // b.any
  4053f4:	ldrb	w9, [x19, #80]
  4053f8:	orr	w9, w9, #0x2
  4053fc:	strb	w9, [x19, #80]
  405400:	ldr	x10, [x19, #48]
  405404:	ldr	x11, [x19, #8]
  405408:	ldr	x9, [x19, #32]
  40540c:	add	x8, x10, x8
  405410:	bic	x8, x8, x10
  405414:	sub	x10, x8, x11
  405418:	sub	x11, x9, x11
  40541c:	cmp	x10, x11
  405420:	str	x8, [x19, #24]
  405424:	b.ls	405430 <ferror@plt+0x28e0>  // b.plast
  405428:	mov	x8, x9
  40542c:	str	x9, [x19, #24]
  405430:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405434:	add	x1, x1, #0x8de
  405438:	str	x8, [x19, #16]
  40543c:	bl	4177a8 <ferror@plt+0x14c58>
  405440:	ldr	x0, [x20, #1032]
  405444:	ldp	x20, x19, [sp, #16]
  405448:	ldp	x29, x30, [sp], #32
  40544c:	b	417d70 <ferror@plt+0x15220>
  405450:	ldr	x8, [x2]
  405454:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405458:	ldr	w0, [x9, #1192]
  40545c:	ldp	x20, x19, [sp, #16]
  405460:	ldr	x3, [x8, #8]
  405464:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405468:	add	x2, x2, #0x441
  40546c:	mov	w1, wzr
  405470:	ldp	x29, x30, [sp], #32
  405474:	b	402c5c <ferror@plt+0x10c>
  405478:	sub	sp, sp, #0x70
  40547c:	stp	x22, x21, [sp, #80]
  405480:	stp	x20, x19, [sp, #96]
  405484:	mov	x20, x2
  405488:	cmp	w1, #0x2
  40548c:	mov	x22, x0
  405490:	stp	x29, x30, [sp, #32]
  405494:	str	x25, [sp, #48]
  405498:	stp	x24, x23, [sp, #64]
  40549c:	add	x29, sp, #0x20
  4054a0:	b.lt	4054b0 <ferror@plt+0x2960>  // b.tstop
  4054a4:	ldr	x8, [x20, #8]
  4054a8:	ldr	x19, [x8, #8]
  4054ac:	b	4054b8 <ferror@plt+0x2968>
  4054b0:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4054b4:	add	x19, x19, #0x67f
  4054b8:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4054bc:	add	x8, x8, #0x200
  4054c0:	ldp	q0, q1, [x8]
  4054c4:	cmp	w1, #0x1
  4054c8:	stp	q0, q1, [sp]
  4054cc:	ldr	x8, [x20]
  4054d0:	b.gt	405500 <ferror@plt+0x29b0>
  4054d4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4054d8:	ldr	w9, [x9, #1188]
  4054dc:	cbnz	w9, 40560c <ferror@plt+0x2abc>
  4054e0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4054e4:	ldr	w0, [x9, #1192]
  4054e8:	ldr	x3, [x8, #8]
  4054ec:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4054f0:	add	x2, x2, #0x441
  4054f4:	mov	w1, wzr
  4054f8:	bl	402c5c <ferror@plt+0x10c>
  4054fc:	b	40560c <ferror@plt+0x2abc>
  405500:	cmp	w1, #0x2
  405504:	b.eq	405530 <ferror@plt+0x29e0>  // b.none
  405508:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40550c:	ldr	w9, [x9, #1188]
  405510:	cbnz	w9, 405530 <ferror@plt+0x29e0>
  405514:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405518:	ldr	w0, [x9, #1192]
  40551c:	ldr	x3, [x8, #8]
  405520:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405524:	add	x2, x2, #0x46c
  405528:	mov	w1, wzr
  40552c:	bl	402c5c <ferror@plt+0x10c>
  405530:	ldrb	w8, [x19]
  405534:	cbz	w8, 40560c <ferror@plt+0x2abc>
  405538:	bl	408b08 <ferror@plt+0x5fb8>
  40553c:	str	x19, [sp, #16]
  405540:	bl	402ac0 <__errno_location@plt>
  405544:	str	wzr, [x0]
  405548:	ldr	x8, [x20]
  40554c:	mov	x21, x0
  405550:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405554:	add	x1, x1, #0x6f3
  405558:	ldr	x0, [x8, #8]
  40555c:	mov	x2, sp
  405560:	add	x7, x29, #0x1c
  405564:	mov	w5, #0x1                   	// #1
  405568:	mov	x3, xzr
  40556c:	mov	w4, wzr
  405570:	mov	w6, wzr
  405574:	bl	4163ec <ferror@plt+0x1389c>
  405578:	cmn	w0, #0x1
  40557c:	b.eq	40569c <ferror@plt+0x2b4c>  // b.none
  405580:	mov	w23, w0
  405584:	ldr	w0, [x29, #28]
  405588:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40558c:	add	x1, x1, #0xacc
  405590:	bl	402750 <fdopen@plt>
  405594:	cbz	x0, 4056c8 <ferror@plt+0x2b78>
  405598:	mov	x24, x0
  40559c:	b	4055ac <ferror@plt+0x2a5c>
  4055a0:	add	x9, x8, #0x1
  4055a4:	str	x9, [x22, #24]
  4055a8:	strb	w25, [x8]
  4055ac:	ldp	x0, x8, [x22, #24]
  4055b0:	subs	x2, x8, x0
  4055b4:	b.eq	4055d8 <ferror@plt+0x2a88>  // b.none
  4055b8:	mov	w1, #0x1                   	// #1
  4055bc:	mov	x3, x24
  4055c0:	bl	402920 <fread@plt>
  4055c4:	cbz	x0, 405630 <ferror@plt+0x2ae0>
  4055c8:	ldr	x8, [x22, #24]
  4055cc:	add	x8, x8, x0
  4055d0:	str	x8, [x22, #24]
  4055d4:	b	4055ac <ferror@plt+0x2a5c>
  4055d8:	mov	x0, x24
  4055dc:	bl	4027d0 <getc@plt>
  4055e0:	cmn	w0, #0x1
  4055e4:	b.eq	405630 <ferror@plt+0x2ae0>  // b.none
  4055e8:	ldp	x8, x9, [x22, #24]
  4055ec:	mov	w25, w0
  4055f0:	cmp	x9, x8
  4055f4:	b.ne	4055a0 <ferror@plt+0x2a50>  // b.any
  4055f8:	mov	w1, #0x1                   	// #1
  4055fc:	mov	x0, x22
  405600:	bl	418058 <_obstack_newchunk@@Base>
  405604:	ldr	x8, [x22, #24]
  405608:	b	4055a0 <ferror@plt+0x2a50>
  40560c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405610:	str	wzr, [x8, #2080]
  405614:	ldp	x20, x19, [sp, #96]
  405618:	ldp	x22, x21, [sp, #80]
  40561c:	ldp	x24, x23, [sp, #64]
  405620:	ldr	x25, [sp, #48]
  405624:	ldp	x29, x30, [sp, #32]
  405628:	add	sp, sp, #0x70
  40562c:	ret
  405630:	mov	x0, x24
  405634:	bl	402b50 <ferror@plt>
  405638:	cbnz	w0, 405648 <ferror@plt+0x2af8>
  40563c:	mov	x0, x24
  405640:	bl	417b18 <ferror@plt+0x14fc8>
  405644:	cbz	w0, 40565c <ferror@plt+0x2b0c>
  405648:	ldr	w1, [x21]
  40564c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405650:	add	x2, x2, #0x713
  405654:	mov	w0, #0x1                   	// #1
  405658:	bl	402c5c <ferror@plt+0x10c>
  40565c:	str	wzr, [x21]
  405660:	ldr	x8, [x20]
  405664:	add	x6, x29, #0x18
  405668:	mov	w3, #0x1                   	// #1
  40566c:	mov	w4, #0x1                   	// #1
  405670:	ldr	x1, [x8, #8]
  405674:	mov	w0, w23
  405678:	mov	w2, wzr
  40567c:	mov	w5, wzr
  405680:	bl	41706c <ferror@plt+0x1451c>
  405684:	ldr	w8, [x29, #24]
  405688:	cbz	w8, 4056fc <ferror@plt+0x2bac>
  40568c:	cmp	w0, #0x7f
  405690:	b.ne	405734 <ferror@plt+0x2be4>  // b.any
  405694:	lsl	w0, w8, #8
  405698:	b	405728 <ferror@plt+0x2bd8>
  40569c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4056a0:	ldr	w0, [x8, #1192]
  4056a4:	ldr	w1, [x21]
  4056a8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4056ac:	add	x2, x2, #0x6fb
  4056b0:	mov	x3, x19
  4056b4:	bl	402c5c <ferror@plt+0x10c>
  4056b8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4056bc:	mov	w9, #0x7f                  	// #127
  4056c0:	str	w9, [x8, #2080]
  4056c4:	b	405614 <ferror@plt+0x2ac4>
  4056c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4056cc:	ldr	w0, [x8, #1192]
  4056d0:	ldr	w1, [x21]
  4056d4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4056d8:	add	x2, x2, #0x6fb
  4056dc:	mov	x3, x19
  4056e0:	bl	402c5c <ferror@plt+0x10c>
  4056e4:	ldr	w0, [x29, #28]
  4056e8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4056ec:	mov	w9, #0x7f                  	// #127
  4056f0:	str	w9, [x8, #2080]
  4056f4:	bl	4027f0 <close@plt>
  4056f8:	b	405614 <ferror@plt+0x2ac4>
  4056fc:	cmp	w0, #0x7f
  405700:	b.ne	405728 <ferror@plt+0x2bd8>  // b.any
  405704:	ldr	w1, [x21]
  405708:	cbz	w1, 405724 <ferror@plt+0x2bd4>
  40570c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405710:	ldr	w0, [x8, #1192]
  405714:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405718:	add	x2, x2, #0x6fb
  40571c:	mov	x3, x19
  405720:	bl	402c5c <ferror@plt+0x10c>
  405724:	mov	w0, #0x7f                  	// #127
  405728:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40572c:	str	w0, [x8, #2080]
  405730:	b	405614 <ferror@plt+0x2ac4>
  405734:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405738:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40573c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405740:	add	x0, x0, #0x724
  405744:	add	x1, x1, #0x605
  405748:	add	x3, x3, #0x732
  40574c:	mov	w2, #0x424                 	// #1060
  405750:	bl	402ab0 <__assert_fail@plt>
  405754:	sub	sp, sp, #0x40
  405758:	stp	x29, x30, [sp, #16]
  40575c:	add	x29, sp, #0x10
  405760:	mov	w8, #0xa                   	// #10
  405764:	mov	w9, #0x1                   	// #1
  405768:	stp	x22, x21, [sp, #32]
  40576c:	stp	x20, x19, [sp, #48]
  405770:	stur	wzr, [x29, #-4]
  405774:	stp	w9, w8, [sp, #4]
  405778:	ldr	x8, [x2]
  40577c:	cmp	w1, #0x1
  405780:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405784:	b.gt	4057b0 <ferror@plt+0x2c60>
  405788:	ldr	w9, [x9, #1188]
  40578c:	cbnz	w9, 405b48 <ferror@plt+0x2ff8>
  405790:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405794:	ldr	w0, [x9, #1192]
  405798:	ldr	x3, [x8, #8]
  40579c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4057a0:	add	x2, x2, #0x441
  4057a4:	mov	w1, wzr
  4057a8:	bl	402c5c <ferror@plt+0x10c>
  4057ac:	b	405b48 <ferror@plt+0x2ff8>
  4057b0:	mov	x20, x2
  4057b4:	mov	w22, w1
  4057b8:	mov	x19, x0
  4057bc:	cmp	w1, #0x5
  4057c0:	b.lt	4057ec <ferror@plt+0x2c9c>  // b.tstop
  4057c4:	ldr	w9, [x9, #1188]
  4057c8:	cbnz	w9, 4057ec <ferror@plt+0x2c9c>
  4057cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4057d0:	ldr	w0, [x9, #1192]
  4057d4:	ldr	x3, [x8, #8]
  4057d8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4057dc:	add	x2, x2, #0x46c
  4057e0:	mov	w1, wzr
  4057e4:	bl	402c5c <ferror@plt+0x10c>
  4057e8:	b	4057f4 <ferror@plt+0x2ca4>
  4057ec:	cmp	w22, #0x3
  4057f0:	b.lt	405868 <ferror@plt+0x2d18>  // b.tstop
  4057f4:	ldr	x8, [x20, #16]
  4057f8:	ldr	x9, [x8, #8]
  4057fc:	mov	w8, #0x1                   	// #1
  405800:	ldrb	w9, [x9]
  405804:	cbz	w9, 40587c <ferror@plt+0x2d2c>
  405808:	ldr	x0, [x20]
  40580c:	cbz	w8, 40581c <ferror@plt+0x2ccc>
  405810:	ldr	x8, [x20, #16]
  405814:	ldr	x1, [x8, #8]
  405818:	b	405824 <ferror@plt+0x2cd4>
  40581c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405820:	add	x1, x1, #0x67f
  405824:	add	x2, sp, #0x8
  405828:	bl	407d18 <ferror@plt+0x51c8>
  40582c:	tbz	w0, #0, 405b48 <ferror@plt+0x2ff8>
  405830:	ldr	w21, [sp, #8]
  405834:	sub	w8, w21, #0x1
  405838:	cmp	w8, #0x24
  40583c:	b.cc	405880 <ferror@plt+0x2d30>  // b.lo, b.ul, b.last
  405840:	ldr	x8, [x20]
  405844:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405848:	ldr	w0, [x9, #1192]
  40584c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405850:	ldr	x4, [x8, #8]
  405854:	add	x2, x2, #0x768
  405858:	mov	w1, wzr
  40585c:	mov	w3, w21
  405860:	bl	402c5c <ferror@plt+0x10c>
  405864:	b	405b48 <ferror@plt+0x2ff8>
  405868:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40586c:	mov	w8, wzr
  405870:	add	x9, x9, #0x67f
  405874:	ldrb	w9, [x9]
  405878:	cbnz	w9, 405808 <ferror@plt+0x2cb8>
  40587c:	mov	w21, #0xa                   	// #10
  405880:	cmp	w22, #0x4
  405884:	b.lt	4058c4 <ferror@plt+0x2d74>  // b.tstop
  405888:	ldr	x8, [x20, #24]
  40588c:	ldr	x0, [x20]
  405890:	add	x2, sp, #0x4
  405894:	ldr	x1, [x8, #8]
  405898:	bl	407d18 <ferror@plt+0x51c8>
  40589c:	tbz	w0, #0, 405b48 <ferror@plt+0x2ff8>
  4058a0:	ldr	w22, [sp, #4]
  4058a4:	tbz	w22, #31, 4058c8 <ferror@plt+0x2d78>
  4058a8:	ldr	x8, [x20]
  4058ac:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4058b0:	ldr	w0, [x9, #1192]
  4058b4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4058b8:	ldr	x3, [x8, #8]
  4058bc:	add	x2, x2, #0x78e
  4058c0:	b	4057a4 <ferror@plt+0x2c54>
  4058c4:	mov	w22, #0x1                   	// #1
  4058c8:	ldr	x8, [x20, #8]
  4058cc:	ldr	x0, [x8, #8]
  4058d0:	ldrb	w8, [x0]
  4058d4:	cbz	w8, 4058e8 <ferror@plt+0x2d98>
  4058d8:	sub	x1, x29, #0x4
  4058dc:	bl	40937c <ferror@plt+0x682c>
  4058e0:	tbz	w0, #0, 405908 <ferror@plt+0x2db8>
  4058e4:	b	405b48 <ferror@plt+0x2ff8>
  4058e8:	ldr	x8, [x20]
  4058ec:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4058f0:	ldr	w0, [x9, #1192]
  4058f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4058f8:	ldr	x3, [x8, #8]
  4058fc:	add	x2, x2, #0x52a
  405900:	mov	w1, wzr
  405904:	bl	402c5c <ferror@plt+0x10c>
  405908:	ldur	w8, [x29, #-4]
  40590c:	cmp	w21, #0x1
  405910:	b.ne	4059a8 <ferror@plt+0x2e58>  // b.any
  405914:	tbz	w8, #31, 405954 <ferror@plt+0x2e04>
  405918:	ldp	x8, x9, [x19, #24]
  40591c:	cmp	x9, x8
  405920:	b.ne	405934 <ferror@plt+0x2de4>  // b.any
  405924:	mov	w1, #0x1                   	// #1
  405928:	mov	x0, x19
  40592c:	bl	418058 <_obstack_newchunk@@Base>
  405930:	ldr	x8, [x19, #24]
  405934:	add	x9, x8, #0x1
  405938:	mov	w10, #0x2d                  	// #45
  40593c:	str	x9, [x19, #24]
  405940:	strb	w10, [x8]
  405944:	ldur	w8, [x29, #-4]
  405948:	ldr	w22, [sp, #4]
  40594c:	neg	w8, w8
  405950:	stur	w8, [x29, #-4]
  405954:	sub	w9, w22, #0x1
  405958:	cmp	w22, w8
  40595c:	str	w9, [sp, #4]
  405960:	b.le	405ac8 <ferror@plt+0x2f78>
  405964:	mov	w20, #0x30                  	// #48
  405968:	b	405988 <ferror@plt+0x2e38>
  40596c:	add	x9, x8, #0x1
  405970:	str	x9, [x19, #24]
  405974:	strb	w20, [x8]
  405978:	ldur	w8, [x29, #-4]
  40597c:	sub	w22, w22, #0x1
  405980:	cmp	w22, w8
  405984:	b.le	405ac0 <ferror@plt+0x2f70>
  405988:	ldp	x8, x9, [x19, #24]
  40598c:	cmp	x9, x8
  405990:	b.ne	40596c <ferror@plt+0x2e1c>  // b.any
  405994:	mov	w1, #0x1                   	// #1
  405998:	mov	x0, x19
  40599c:	bl	418058 <_obstack_newchunk@@Base>
  4059a0:	ldr	x8, [x19, #24]
  4059a4:	b	40596c <ferror@plt+0x2e1c>
  4059a8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4059ac:	cmp	w8, #0x0
  4059b0:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4059b4:	add	x20, x20, #0x81f
  4059b8:	cneg	w9, w8, mi  // mi = first
  4059bc:	add	x10, x10, #0x2be
  4059c0:	strb	wzr, [x20]
  4059c4:	udiv	w11, w9, w21
  4059c8:	msub	w12, w11, w21, w9
  4059cc:	ldrb	w12, [x10, w12, uxtw]
  4059d0:	cmp	w9, w21
  4059d4:	mov	w9, w11
  4059d8:	strb	w12, [x20, #-1]!
  4059dc:	b.cs	4059c4 <ferror@plt+0x2e74>  // b.hs, b.nlast
  4059e0:	tbz	w8, #31, 405a14 <ferror@plt+0x2ec4>
  4059e4:	mov	w21, #0x2d                  	// #45
  4059e8:	sturb	w21, [x20, #-1]
  4059ec:	ldp	x8, x9, [x19, #24]
  4059f0:	cmp	x9, x8
  4059f4:	b.ne	405a08 <ferror@plt+0x2eb8>  // b.any
  4059f8:	mov	w1, #0x1                   	// #1
  4059fc:	mov	x0, x19
  405a00:	bl	418058 <_obstack_newchunk@@Base>
  405a04:	ldr	x8, [x19, #24]
  405a08:	add	x9, x8, #0x1
  405a0c:	str	x9, [x19, #24]
  405a10:	strb	w21, [x8]
  405a14:	mov	x0, x20
  405a18:	bl	4024f0 <strlen@plt>
  405a1c:	ldr	w8, [sp, #4]
  405a20:	sub	w21, w8, w0
  405a24:	subs	w8, w21, #0x1
  405a28:	str	w8, [sp, #4]
  405a2c:	b.lt	405a78 <ferror@plt+0x2f28>  // b.tstop
  405a30:	mov	w22, #0x30                  	// #48
  405a34:	b	405a50 <ferror@plt+0x2f00>
  405a38:	sub	w21, w21, #0x1
  405a3c:	add	x9, x8, #0x1
  405a40:	cmp	w21, #0x0
  405a44:	str	x9, [x19, #24]
  405a48:	strb	w22, [x8]
  405a4c:	b.le	405a70 <ferror@plt+0x2f20>
  405a50:	ldp	x8, x9, [x19, #24]
  405a54:	cmp	x9, x8
  405a58:	b.ne	405a38 <ferror@plt+0x2ee8>  // b.any
  405a5c:	mov	w1, #0x1                   	// #1
  405a60:	mov	x0, x19
  405a64:	bl	418058 <_obstack_newchunk@@Base>
  405a68:	ldr	x8, [x19, #24]
  405a6c:	b	405a38 <ferror@plt+0x2ee8>
  405a70:	sub	w8, w21, #0x1
  405a74:	str	w8, [sp, #4]
  405a78:	mov	x0, x20
  405a7c:	bl	4024f0 <strlen@plt>
  405a80:	mov	x21, x0
  405a84:	ldp	x0, x8, [x19, #24]
  405a88:	sub	x8, x8, x0
  405a8c:	cmp	x8, x21
  405a90:	b.cs	405aa4 <ferror@plt+0x2f54>  // b.hs, b.nlast
  405a94:	mov	x0, x19
  405a98:	mov	x1, x21
  405a9c:	bl	418058 <_obstack_newchunk@@Base>
  405aa0:	ldr	x0, [x19, #24]
  405aa4:	mov	x1, x20
  405aa8:	mov	x2, x21
  405aac:	bl	4024c0 <memcpy@plt>
  405ab0:	ldr	x8, [x19, #24]
  405ab4:	add	x8, x8, x21
  405ab8:	str	x8, [x19, #24]
  405abc:	b	405b48 <ferror@plt+0x2ff8>
  405ac0:	sub	w9, w22, #0x1
  405ac4:	str	w9, [sp, #4]
  405ac8:	sub	w9, w8, #0x1
  405acc:	stur	w9, [x29, #-4]
  405ad0:	ldp	x9, x10, [x19, #24]
  405ad4:	cmp	x10, x9
  405ad8:	cset	w10, eq  // eq = none
  405adc:	cbz	w8, 405b28 <ferror@plt+0x2fd8>
  405ae0:	mov	w20, #0x31                  	// #49
  405ae4:	b	405b10 <ferror@plt+0x2fc0>
  405ae8:	add	x8, x9, #0x1
  405aec:	str	x8, [x19, #24]
  405af0:	strb	w20, [x9]
  405af4:	ldur	w8, [x29, #-4]
  405af8:	sub	w9, w8, #0x1
  405afc:	stur	w9, [x29, #-4]
  405b00:	ldp	x9, x10, [x19, #24]
  405b04:	cmp	x10, x9
  405b08:	cset	w10, eq  // eq = none
  405b0c:	cbz	w8, 405b28 <ferror@plt+0x2fd8>
  405b10:	tbz	w10, #0, 405ae8 <ferror@plt+0x2f98>
  405b14:	mov	w1, #0x1                   	// #1
  405b18:	mov	x0, x19
  405b1c:	bl	418058 <_obstack_newchunk@@Base>
  405b20:	ldr	x9, [x19, #24]
  405b24:	b	405ae8 <ferror@plt+0x2f98>
  405b28:	cbz	w10, 405b3c <ferror@plt+0x2fec>
  405b2c:	mov	w1, #0x1                   	// #1
  405b30:	mov	x0, x19
  405b34:	bl	418058 <_obstack_newchunk@@Base>
  405b38:	ldr	x9, [x19, #24]
  405b3c:	add	x8, x9, #0x1
  405b40:	str	x8, [x19, #24]
  405b44:	strb	wzr, [x9]
  405b48:	ldp	x20, x19, [sp, #48]
  405b4c:	ldp	x22, x21, [sp, #32]
  405b50:	ldp	x29, x30, [sp, #16]
  405b54:	add	sp, sp, #0x40
  405b58:	ret
  405b5c:	subs	w1, w1, #0x1
  405b60:	b.gt	405b74 <ferror@plt+0x3024>
  405b64:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405b68:	ldr	w8, [x8, #1188]
  405b6c:	cbz	w8, 405b7c <ferror@plt+0x302c>
  405b70:	ret
  405b74:	add	x2, x2, #0x8
  405b78:	b	40a5cc <ferror@plt+0x7a7c>
  405b7c:	ldr	x8, [x2]
  405b80:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405b84:	ldr	w0, [x9, #1192]
  405b88:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405b8c:	ldr	x3, [x8, #8]
  405b90:	add	x2, x2, #0x441
  405b94:	mov	w1, wzr
  405b98:	b	402c5c <ferror@plt+0x10c>
  405b9c:	stp	x29, x30, [sp, #-48]!
  405ba0:	stp	x20, x19, [sp, #32]
  405ba4:	ldr	x8, [x2]
  405ba8:	cmp	w1, #0x2
  405bac:	str	x21, [sp, #16]
  405bb0:	mov	x29, sp
  405bb4:	b.gt	405bec <ferror@plt+0x309c>
  405bb8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405bbc:	ldr	w9, [x9, #1188]
  405bc0:	cbnz	w9, 405ca8 <ferror@plt+0x3158>
  405bc4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405bc8:	ldr	w0, [x9, #1192]
  405bcc:	ldr	x3, [x8, #8]
  405bd0:	ldp	x20, x19, [sp, #32]
  405bd4:	ldr	x21, [sp, #16]
  405bd8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405bdc:	add	x2, x2, #0x441
  405be0:	mov	w1, wzr
  405be4:	ldp	x29, x30, [sp], #48
  405be8:	b	402c5c <ferror@plt+0x10c>
  405bec:	mov	x20, x2
  405bf0:	mov	w21, w1
  405bf4:	mov	x19, x0
  405bf8:	cmp	w1, #0x5
  405bfc:	b.lt	405c28 <ferror@plt+0x30d8>  // b.tstop
  405c00:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405c04:	ldr	w9, [x9, #1188]
  405c08:	cbnz	w9, 405c28 <ferror@plt+0x30d8>
  405c0c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405c10:	ldr	w0, [x9, #1192]
  405c14:	ldr	x3, [x8, #8]
  405c18:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405c1c:	add	x2, x2, #0x46c
  405c20:	mov	w1, wzr
  405c24:	bl	402c5c <ferror@plt+0x10c>
  405c28:	ldr	x8, [x20, #8]
  405c2c:	mov	w1, wzr
  405c30:	ldr	x0, [x8, #8]
  405c34:	bl	41059c <ferror@plt+0xda4c>
  405c38:	cbz	x0, 405c4c <ferror@plt+0x30fc>
  405c3c:	ldr	w8, [x0, #24]
  405c40:	cbz	w8, 405c4c <ferror@plt+0x30fc>
  405c44:	mov	w8, #0x2                   	// #2
  405c48:	b	405c58 <ferror@plt+0x3108>
  405c4c:	cmp	w21, #0x4
  405c50:	b.lt	405ca8 <ferror@plt+0x3158>  // b.tstop
  405c54:	mov	w8, #0x3                   	// #3
  405c58:	ldr	x8, [x20, x8, lsl #3]
  405c5c:	ldr	x20, [x8, #8]
  405c60:	cbz	x20, 405ca8 <ferror@plt+0x3158>
  405c64:	mov	x0, x20
  405c68:	bl	4024f0 <strlen@plt>
  405c6c:	mov	x21, x0
  405c70:	ldp	x0, x8, [x19, #24]
  405c74:	sub	x8, x8, x0
  405c78:	cmp	x8, x21
  405c7c:	b.cs	405c90 <ferror@plt+0x3140>  // b.hs, b.nlast
  405c80:	mov	x0, x19
  405c84:	mov	x1, x21
  405c88:	bl	418058 <_obstack_newchunk@@Base>
  405c8c:	ldr	x0, [x19, #24]
  405c90:	mov	x1, x20
  405c94:	mov	x2, x21
  405c98:	bl	4024c0 <memcpy@plt>
  405c9c:	ldr	x8, [x19, #24]
  405ca0:	add	x8, x8, x21
  405ca4:	str	x8, [x19, #24]
  405ca8:	ldp	x20, x19, [sp, #32]
  405cac:	ldr	x21, [sp, #16]
  405cb0:	ldp	x29, x30, [sp], #48
  405cb4:	ret
  405cb8:	stp	x29, x30, [sp, #-64]!
  405cbc:	cmp	w1, #0x2
  405cc0:	str	x23, [sp, #16]
  405cc4:	stp	x22, x21, [sp, #32]
  405cc8:	stp	x20, x19, [sp, #48]
  405ccc:	mov	x29, sp
  405cd0:	b.eq	405e58 <ferror@plt+0x3308>  // b.none
  405cd4:	ldr	x8, [x2]
  405cd8:	mov	x21, x2
  405cdc:	mov	w20, w1
  405ce0:	cmp	w1, #0x3
  405ce4:	b.gt	405d20 <ferror@plt+0x31d0>
  405ce8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405cec:	ldr	w9, [x9, #1188]
  405cf0:	cbnz	w9, 405e58 <ferror@plt+0x3308>
  405cf4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405cf8:	ldr	w0, [x9, #1192]
  405cfc:	ldr	x3, [x8, #8]
  405d00:	ldp	x20, x19, [sp, #48]
  405d04:	ldp	x22, x21, [sp, #32]
  405d08:	ldr	x23, [sp, #16]
  405d0c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405d10:	add	x2, x2, #0x441
  405d14:	mov	w1, wzr
  405d18:	ldp	x29, x30, [sp], #64
  405d1c:	b	402c5c <ferror@plt+0x10c>
  405d20:	mov	w10, #0x5556                	// #21846
  405d24:	add	w9, w20, #0x2
  405d28:	movk	w10, #0x5555, lsl #16
  405d2c:	smull	x10, w9, w10
  405d30:	lsr	x11, x10, #63
  405d34:	lsr	x10, x10, #32
  405d38:	add	w10, w10, w11
  405d3c:	add	w10, w10, w10, lsl #1
  405d40:	sub	w9, w9, w10
  405d44:	mov	x19, x0
  405d48:	cmp	w9, #0x2
  405d4c:	b.lt	405d78 <ferror@plt+0x3228>  // b.tstop
  405d50:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405d54:	ldr	w9, [x9, #1188]
  405d58:	cbnz	w9, 405d78 <ferror@plt+0x3228>
  405d5c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405d60:	ldr	w0, [x9, #1192]
  405d64:	ldr	x3, [x8, #8]
  405d68:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405d6c:	add	x2, x2, #0x46c
  405d70:	mov	w1, wzr
  405d74:	bl	402c5c <ferror@plt+0x10c>
  405d78:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405d7c:	add	x21, x21, #0x8
  405d80:	sub	w23, w20, #0x1
  405d84:	add	x22, x22, #0x67f
  405d88:	b	405dcc <ferror@plt+0x327c>
  405d8c:	ldr	x8, [x21, #8]
  405d90:	ldr	x1, [x8, #8]
  405d94:	bl	4028d0 <strcmp@plt>
  405d98:	cbz	w0, 405df8 <ferror@plt+0x32a8>
  405d9c:	sub	w8, w23, #0x4
  405da0:	cmp	w8, #0x2
  405da4:	b.cs	405db8 <ferror@plt+0x3268>  // b.hs, b.nlast
  405da8:	ldr	x8, [x21, #24]
  405dac:	ldr	x20, [x8, #8]
  405db0:	cbz	x20, 405dcc <ferror@plt+0x327c>
  405db4:	b	405e14 <ferror@plt+0x32c4>
  405db8:	subs	w23, w23, #0x3
  405dbc:	b.eq	405e58 <ferror@plt+0x3308>  // b.none
  405dc0:	mov	x20, xzr
  405dc4:	add	x21, x21, #0x18
  405dc8:	cbnz	x20, 405e14 <ferror@plt+0x32c4>
  405dcc:	cmp	w23, #0x1
  405dd0:	b.lt	405de8 <ferror@plt+0x3298>  // b.tstop
  405dd4:	ldr	x8, [x21]
  405dd8:	cmp	w23, #0x1
  405ddc:	ldr	x0, [x8, #8]
  405de0:	b.eq	405dec <ferror@plt+0x329c>  // b.none
  405de4:	b	405d8c <ferror@plt+0x323c>
  405de8:	mov	x0, x22
  405dec:	mov	x1, x22
  405df0:	bl	4028d0 <strcmp@plt>
  405df4:	cbnz	w0, 405d9c <ferror@plt+0x324c>
  405df8:	cmp	w23, #0x3
  405dfc:	b.lt	405e10 <ferror@plt+0x32c0>  // b.tstop
  405e00:	ldr	x8, [x21, #16]
  405e04:	ldr	x20, [x8, #8]
  405e08:	cbz	x20, 405dcc <ferror@plt+0x327c>
  405e0c:	b	405e14 <ferror@plt+0x32c4>
  405e10:	mov	x20, x22
  405e14:	mov	x0, x20
  405e18:	bl	4024f0 <strlen@plt>
  405e1c:	mov	x21, x0
  405e20:	ldp	x0, x8, [x19, #24]
  405e24:	sub	x8, x8, x0
  405e28:	cmp	x8, x21
  405e2c:	b.cs	405e40 <ferror@plt+0x32f0>  // b.hs, b.nlast
  405e30:	mov	x0, x19
  405e34:	mov	x1, x21
  405e38:	bl	418058 <_obstack_newchunk@@Base>
  405e3c:	ldr	x0, [x19, #24]
  405e40:	mov	x1, x20
  405e44:	mov	x2, x21
  405e48:	bl	4024c0 <memcpy@plt>
  405e4c:	ldr	x8, [x19, #24]
  405e50:	add	x8, x8, x21
  405e54:	str	x8, [x19, #24]
  405e58:	ldp	x20, x19, [sp, #48]
  405e5c:	ldp	x22, x21, [sp, #32]
  405e60:	ldr	x23, [sp, #16]
  405e64:	ldp	x29, x30, [sp], #64
  405e68:	ret
  405e6c:	mov	w0, w1
  405e70:	mov	x1, x2
  405e74:	mov	w2, wzr
  405e78:	b	408058 <ferror@plt+0x5508>
  405e7c:	stp	x29, x30, [sp, #-48]!
  405e80:	stp	x20, x19, [sp, #32]
  405e84:	ldr	x8, [x2]
  405e88:	cmp	w1, #0x1
  405e8c:	str	x21, [sp, #16]
  405e90:	mov	x29, sp
  405e94:	b.gt	405ec4 <ferror@plt+0x3374>
  405e98:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405e9c:	ldr	w9, [x9, #1188]
  405ea0:	cbnz	w9, 405fc4 <ferror@plt+0x3474>
  405ea4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405ea8:	ldr	w0, [x9, #1192]
  405eac:	ldr	x3, [x8, #8]
  405eb0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405eb4:	add	x2, x2, #0x441
  405eb8:	mov	w1, wzr
  405ebc:	bl	402c5c <ferror@plt+0x10c>
  405ec0:	b	405fc4 <ferror@plt+0x3474>
  405ec4:	mov	x20, x2
  405ec8:	mov	x19, x0
  405ecc:	cmp	w1, #0x2
  405ed0:	b.eq	405f00 <ferror@plt+0x33b0>  // b.none
  405ed4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405ed8:	ldr	w9, [x9, #1188]
  405edc:	cbnz	w9, 405f00 <ferror@plt+0x33b0>
  405ee0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405ee4:	ldr	w0, [x9, #1192]
  405ee8:	ldr	x3, [x8, #8]
  405eec:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405ef0:	add	x2, x2, #0x46c
  405ef4:	mov	w1, wzr
  405ef8:	bl	402c5c <ferror@plt+0x10c>
  405efc:	ldr	x8, [x20]
  405f00:	ldr	x9, [x20, #8]
  405f04:	add	x2, x29, #0x1c
  405f08:	mov	x0, x8
  405f0c:	ldr	x1, [x9, #8]
  405f10:	bl	407d18 <ferror@plt+0x51c8>
  405f14:	tbz	w0, #0, 405fc4 <ferror@plt+0x3474>
  405f18:	ldr	w8, [x29, #28]
  405f1c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405f20:	mov	w9, #0xcccd                	// #52429
  405f24:	add	x20, x20, #0x81e
  405f28:	mvn	w11, w8
  405f2c:	cmn	w8, #0x1
  405f30:	csinc	w12, w11, w8, lt  // lt = tstop
  405f34:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  405f38:	movk	w9, #0xcccc, lsl #16
  405f3c:	mov	w10, #0xa                   	// #10
  405f40:	add	x11, x11, #0x2be
  405f44:	strb	wzr, [x20, #1]
  405f48:	umull	x13, w12, w9
  405f4c:	lsr	x13, x13, #35
  405f50:	msub	w14, w13, w10, w12
  405f54:	ldrb	w14, [x11, w14, uxtw]
  405f58:	cmp	w12, #0x9
  405f5c:	mov	w12, w13
  405f60:	strb	w14, [x20], #-1
  405f64:	b.hi	405f48 <ferror@plt+0x33f8>  // b.pmore
  405f68:	cmn	w8, #0x2
  405f6c:	b.gt	405f7c <ferror@plt+0x342c>
  405f70:	mov	w8, #0x2d                  	// #45
  405f74:	strb	w8, [x20]
  405f78:	b	405f80 <ferror@plt+0x3430>
  405f7c:	add	x20, x20, #0x1
  405f80:	mov	x0, x20
  405f84:	bl	4024f0 <strlen@plt>
  405f88:	mov	x21, x0
  405f8c:	ldp	x0, x8, [x19, #24]
  405f90:	sub	x8, x8, x0
  405f94:	cmp	x8, x21
  405f98:	b.cs	405fac <ferror@plt+0x345c>  // b.hs, b.nlast
  405f9c:	mov	x0, x19
  405fa0:	mov	x1, x21
  405fa4:	bl	418058 <_obstack_newchunk@@Base>
  405fa8:	ldr	x0, [x19, #24]
  405fac:	mov	x1, x20
  405fb0:	mov	x2, x21
  405fb4:	bl	4024c0 <memcpy@plt>
  405fb8:	ldr	x8, [x19, #24]
  405fbc:	add	x8, x8, x21
  405fc0:	str	x8, [x19, #24]
  405fc4:	ldp	x20, x19, [sp, #32]
  405fc8:	ldr	x21, [sp, #16]
  405fcc:	ldp	x29, x30, [sp], #48
  405fd0:	ret
  405fd4:	stp	x29, x30, [sp, #-48]!
  405fd8:	stp	x22, x21, [sp, #16]
  405fdc:	stp	x20, x19, [sp, #32]
  405fe0:	ldr	x8, [x2]
  405fe4:	mov	w21, w1
  405fe8:	cmp	w1, #0x2
  405fec:	mov	x19, x0
  405ff0:	mov	x29, sp
  405ff4:	b.gt	406010 <ferror@plt+0x34c0>
  405ff8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  405ffc:	ldr	w9, [x9, #1188]
  406000:	cbz	w9, 4060b8 <ferror@plt+0x3568>
  406004:	cmp	w21, #0x2
  406008:	b.eq	4060dc <ferror@plt+0x358c>  // b.none
  40600c:	b	40617c <ferror@plt+0x362c>
  406010:	mov	x20, x2
  406014:	cmp	w21, #0x3
  406018:	b.eq	406044 <ferror@plt+0x34f4>  // b.none
  40601c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406020:	ldr	w9, [x9, #1188]
  406024:	cbnz	w9, 406044 <ferror@plt+0x34f4>
  406028:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40602c:	ldr	w0, [x9, #1192]
  406030:	ldr	x3, [x8, #8]
  406034:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406038:	add	x2, x2, #0x46c
  40603c:	mov	w1, wzr
  406040:	bl	402c5c <ferror@plt+0x10c>
  406044:	ldp	x8, x9, [x20, #8]
  406048:	ldr	x20, [x8, #8]
  40604c:	ldr	x1, [x9, #8]
  406050:	mov	x0, x20
  406054:	bl	402a40 <strstr@plt>
  406058:	sub	w9, w0, w20
  40605c:	cmp	x0, #0x0
  406060:	csinv	w9, w9, wzr, ne  // ne = any
  406064:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406068:	mov	w8, #0xcccd                	// #52429
  40606c:	cmp	w9, #0x0
  406070:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406074:	add	x20, x20, #0x81e
  406078:	movk	w8, #0xcccc, lsl #16
  40607c:	mov	w10, #0xa                   	// #10
  406080:	cneg	w12, w9, mi  // mi = first
  406084:	add	x11, x11, #0x2be
  406088:	strb	wzr, [x20, #1]
  40608c:	umull	x13, w12, w8
  406090:	lsr	x13, x13, #35
  406094:	msub	w14, w13, w10, w12
  406098:	ldrb	w14, [x11, w14, uxtw]
  40609c:	cmp	w12, #0x9
  4060a0:	mov	w12, w13
  4060a4:	strb	w14, [x20], #-1
  4060a8:	b.hi	40608c <ferror@plt+0x353c>  // b.pmore
  4060ac:	tbnz	w9, #31, 406128 <ferror@plt+0x35d8>
  4060b0:	add	x20, x20, #0x1
  4060b4:	b	406130 <ferror@plt+0x35e0>
  4060b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4060bc:	ldr	w0, [x9, #1192]
  4060c0:	ldr	x3, [x8, #8]
  4060c4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4060c8:	add	x2, x2, #0x441
  4060cc:	mov	w1, wzr
  4060d0:	bl	402c5c <ferror@plt+0x10c>
  4060d4:	cmp	w21, #0x2
  4060d8:	b.ne	40617c <ferror@plt+0x362c>  // b.any
  4060dc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4060e0:	add	x0, x0, #0x81e
  4060e4:	mov	w8, #0x30                  	// #48
  4060e8:	strh	w8, [x0]
  4060ec:	bl	4024f0 <strlen@plt>
  4060f0:	mov	x22, x19
  4060f4:	mov	x21, x0
  4060f8:	ldr	x0, [x22, #24]!
  4060fc:	ldr	x8, [x22, #8]
  406100:	sub	x8, x8, x0
  406104:	cmp	x8, x21
  406108:	b.cs	40611c <ferror@plt+0x35cc>  // b.hs, b.nlast
  40610c:	mov	x0, x19
  406110:	mov	x1, x21
  406114:	bl	418058 <_obstack_newchunk@@Base>
  406118:	ldr	x0, [x19, #24]
  40611c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406120:	add	x1, x1, #0x81e
  406124:	b	406168 <ferror@plt+0x3618>
  406128:	mov	w8, #0x2d                  	// #45
  40612c:	strb	w8, [x20]
  406130:	mov	x0, x20
  406134:	bl	4024f0 <strlen@plt>
  406138:	mov	x22, x19
  40613c:	mov	x21, x0
  406140:	ldr	x0, [x22, #24]!
  406144:	ldr	x8, [x22, #8]
  406148:	sub	x8, x8, x0
  40614c:	cmp	x8, x21
  406150:	b.cs	406164 <ferror@plt+0x3614>  // b.hs, b.nlast
  406154:	mov	x0, x19
  406158:	mov	x1, x21
  40615c:	bl	418058 <_obstack_newchunk@@Base>
  406160:	ldr	x0, [x19, #24]
  406164:	mov	x1, x20
  406168:	mov	x2, x21
  40616c:	bl	4024c0 <memcpy@plt>
  406170:	ldr	x8, [x22]
  406174:	add	x8, x8, x21
  406178:	str	x8, [x22]
  40617c:	ldp	x20, x19, [sp, #32]
  406180:	ldp	x22, x21, [sp, #16]
  406184:	ldp	x29, x30, [sp], #48
  406188:	ret
  40618c:	stp	x29, x30, [sp, #-64]!
  406190:	stp	x24, x23, [sp, #16]
  406194:	stp	x22, x21, [sp, #32]
  406198:	stp	x20, x19, [sp, #48]
  40619c:	ldr	x8, [x2]
  4061a0:	subs	w20, w1, #0x1
  4061a4:	mov	x29, sp
  4061a8:	b.gt	4061cc <ferror@plt+0x367c>
  4061ac:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4061b0:	ldr	w9, [x9, #1188]
  4061b4:	cbz	w9, 406274 <ferror@plt+0x3724>
  4061b8:	ldp	x20, x19, [sp, #48]
  4061bc:	ldp	x22, x21, [sp, #32]
  4061c0:	ldp	x24, x23, [sp, #16]
  4061c4:	ldp	x29, x30, [sp], #64
  4061c8:	ret
  4061cc:	mov	x21, x2
  4061d0:	ldr	x9, [x21, #8]!
  4061d4:	mov	x22, x2
  4061d8:	ldr	w10, [x9]
  4061dc:	cmp	w10, #0x1
  4061e0:	b.ne	40625c <ferror@plt+0x370c>  // b.any
  4061e4:	ldr	x24, [x9, #8]
  4061e8:	mov	w23, w1
  4061ec:	mov	x19, x0
  4061f0:	mov	w1, wzr
  4061f4:	mov	x0, x24
  4061f8:	bl	41059c <ferror@plt+0xda4c>
  4061fc:	cbz	x0, 406290 <ferror@plt+0x3740>
  406200:	ldr	w8, [x0, #24]
  406204:	cbz	w8, 406290 <ferror@plt+0x3740>
  406208:	ldrb	w8, [x0, #8]
  40620c:	tbnz	w8, #2, 4062bc <ferror@plt+0x376c>
  406210:	cmp	w23, #0x3
  406214:	b.lt	4062bc <ferror@plt+0x376c>  // b.tstop
  406218:	mov	w10, w23
  40621c:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406220:	add	x8, x22, #0x10
  406224:	mov	w9, #0x1                   	// #1
  406228:	sub	x10, x10, #0x2
  40622c:	add	x11, x11, #0x67f
  406230:	b	406240 <ferror@plt+0x36f0>
  406234:	subs	x10, x10, #0x1
  406238:	add	x8, x8, #0x8
  40623c:	b.eq	4062bc <ferror@plt+0x376c>  // b.none
  406240:	ldr	x12, [x8]
  406244:	ldr	w13, [x12]
  406248:	cmp	w13, #0x1
  40624c:	b.eq	406234 <ferror@plt+0x36e4>  // b.none
  406250:	str	w9, [x12]
  406254:	str	x11, [x12, #8]
  406258:	b	406234 <ferror@plt+0x36e4>
  40625c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406260:	ldr	w0, [x9, #1192]
  406264:	ldr	x3, [x8, #8]
  406268:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40626c:	add	x2, x2, #0x49e
  406270:	b	406288 <ferror@plt+0x3738>
  406274:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406278:	ldr	w0, [x9, #1192]
  40627c:	ldr	x3, [x8, #8]
  406280:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406284:	add	x2, x2, #0x441
  406288:	mov	w1, wzr
  40628c:	b	4062a8 <ferror@plt+0x3758>
  406290:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406294:	ldr	w0, [x8, #1192]
  406298:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40629c:	add	x2, x2, #0x666
  4062a0:	mov	w1, wzr
  4062a4:	mov	x3, x24
  4062a8:	ldp	x20, x19, [sp, #48]
  4062ac:	ldp	x22, x21, [sp, #32]
  4062b0:	ldp	x24, x23, [sp, #16]
  4062b4:	ldp	x29, x30, [sp], #64
  4062b8:	b	402c5c <ferror@plt+0x10c>
  4062bc:	mov	w1, w20
  4062c0:	mov	x2, x21
  4062c4:	mov	x3, x19
  4062c8:	ldp	x20, x19, [sp, #48]
  4062cc:	ldp	x22, x21, [sp, #32]
  4062d0:	ldp	x24, x23, [sp, #16]
  4062d4:	ldp	x29, x30, [sp], #64
  4062d8:	b	40decc <ferror@plt+0xb37c>
  4062dc:	stp	x29, x30, [sp, #-48]!
  4062e0:	stp	x20, x19, [sp, #32]
  4062e4:	ldr	x8, [x2]
  4062e8:	cmp	w1, #0x1
  4062ec:	str	x21, [sp, #16]
  4062f0:	mov	x29, sp
  4062f4:	b.gt	40632c <ferror@plt+0x37dc>
  4062f8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4062fc:	ldr	w9, [x9, #1188]
  406300:	cbnz	w9, 406410 <ferror@plt+0x38c0>
  406304:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406308:	ldr	w0, [x9, #1192]
  40630c:	ldr	x3, [x8, #8]
  406310:	ldp	x20, x19, [sp, #32]
  406314:	ldr	x21, [sp, #16]
  406318:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40631c:	add	x2, x2, #0x441
  406320:	mov	w1, wzr
  406324:	ldp	x29, x30, [sp], #48
  406328:	b	402c5c <ferror@plt+0x10c>
  40632c:	mov	x20, x2
  406330:	mov	x19, x0
  406334:	cmp	w1, #0x2
  406338:	b.eq	406364 <ferror@plt+0x3814>  // b.none
  40633c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406340:	ldr	w9, [x9, #1188]
  406344:	cbnz	w9, 406364 <ferror@plt+0x3814>
  406348:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40634c:	ldr	w0, [x9, #1192]
  406350:	ldr	x3, [x8, #8]
  406354:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406358:	add	x2, x2, #0x46c
  40635c:	mov	w1, wzr
  406360:	bl	402c5c <ferror@plt+0x10c>
  406364:	ldr	x8, [x20, #8]
  406368:	ldr	x0, [x8, #8]
  40636c:	bl	4024f0 <strlen@plt>
  406370:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406374:	cmp	w0, #0x0
  406378:	mov	w8, #0xcccd                	// #52429
  40637c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406380:	add	x20, x20, #0x81e
  406384:	movk	w8, #0xcccc, lsl #16
  406388:	mov	w9, #0xa                   	// #10
  40638c:	cneg	w11, w0, mi  // mi = first
  406390:	add	x10, x10, #0x2be
  406394:	strb	wzr, [x20, #1]
  406398:	umull	x12, w11, w8
  40639c:	lsr	x12, x12, #35
  4063a0:	msub	w13, w12, w9, w11
  4063a4:	ldrb	w13, [x10, w13, uxtw]
  4063a8:	cmp	w11, #0x9
  4063ac:	mov	w11, w12
  4063b0:	strb	w13, [x20], #-1
  4063b4:	b.hi	406398 <ferror@plt+0x3848>  // b.pmore
  4063b8:	tbnz	w0, #31, 4063c4 <ferror@plt+0x3874>
  4063bc:	add	x20, x20, #0x1
  4063c0:	b	4063cc <ferror@plt+0x387c>
  4063c4:	mov	w8, #0x2d                  	// #45
  4063c8:	strb	w8, [x20]
  4063cc:	mov	x0, x20
  4063d0:	bl	4024f0 <strlen@plt>
  4063d4:	mov	x21, x0
  4063d8:	ldp	x0, x8, [x19, #24]
  4063dc:	sub	x8, x8, x0
  4063e0:	cmp	x8, x21
  4063e4:	b.cs	4063f8 <ferror@plt+0x38a8>  // b.hs, b.nlast
  4063e8:	mov	x0, x19
  4063ec:	mov	x1, x21
  4063f0:	bl	418058 <_obstack_newchunk@@Base>
  4063f4:	ldr	x0, [x19, #24]
  4063f8:	mov	x1, x20
  4063fc:	mov	x2, x21
  406400:	bl	4024c0 <memcpy@plt>
  406404:	ldr	x8, [x19, #24]
  406408:	add	x8, x8, x21
  40640c:	str	x8, [x19, #24]
  406410:	ldp	x20, x19, [sp, #32]
  406414:	ldr	x21, [sp, #16]
  406418:	ldp	x29, x30, [sp], #48
  40641c:	ret
  406420:	stp	x29, x30, [sp, #-32]!
  406424:	mov	x29, sp
  406428:	str	wzr, [x29, #28]
  40642c:	ldr	x0, [x2]
  406430:	cmp	w1, #0x0
  406434:	str	x19, [sp, #16]
  406438:	b.gt	40646c <ferror@plt+0x391c>
  40643c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406440:	ldr	w8, [x8, #1188]
  406444:	cbnz	w8, 4064fc <ferror@plt+0x39ac>
  406448:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40644c:	ldr	w8, [x8, #1192]
  406450:	ldr	x3, [x0, #8]
  406454:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406458:	add	x2, x2, #0x441
  40645c:	mov	w0, w8
  406460:	mov	w1, wzr
  406464:	bl	402c5c <ferror@plt+0x10c>
  406468:	b	4064fc <ferror@plt+0x39ac>
  40646c:	mov	x19, x2
  406470:	cmp	w1, #0x2
  406474:	b.le	4064ac <ferror@plt+0x395c>
  406478:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40647c:	ldr	w8, [x8, #1188]
  406480:	cbnz	w8, 4064ac <ferror@plt+0x395c>
  406484:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406488:	ldr	w8, [x8, #1192]
  40648c:	ldr	x3, [x0, #8]
  406490:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406494:	add	x2, x2, #0x46c
  406498:	mov	w0, w8
  40649c:	mov	w1, wzr
  4064a0:	bl	402c5c <ferror@plt+0x10c>
  4064a4:	ldr	x0, [x19]
  4064a8:	b	4064b4 <ferror@plt+0x3964>
  4064ac:	cmp	w1, #0x2
  4064b0:	b.lt	4064fc <ferror@plt+0x39ac>  // b.tstop
  4064b4:	ldr	x8, [x19, #8]
  4064b8:	add	x2, x29, #0x1c
  4064bc:	ldr	x1, [x8, #8]
  4064c0:	bl	407d18 <ferror@plt+0x51c8>
  4064c4:	tbz	w0, #0, 4064f0 <ferror@plt+0x39a0>
  4064c8:	ldr	w19, [x29, #28]
  4064cc:	cmp	w19, #0x100
  4064d0:	b.cc	406500 <ferror@plt+0x39b0>  // b.lo, b.ul, b.last
  4064d4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4064d8:	ldr	w0, [x8, #1192]
  4064dc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4064e0:	add	x2, x2, #0x7ad
  4064e4:	mov	w1, wzr
  4064e8:	mov	w3, w19
  4064ec:	bl	402c5c <ferror@plt+0x10c>
  4064f0:	mov	w19, #0x1                   	// #1
  4064f4:	str	w19, [x29, #28]
  4064f8:	b	406500 <ferror@plt+0x39b0>
  4064fc:	mov	w19, wzr
  406500:	mov	x0, xzr
  406504:	bl	408b9c <ferror@plt+0x604c>
  406508:	bl	408b08 <ferror@plt+0x5fb8>
  40650c:	cbnz	w19, 406528 <ferror@plt+0x39d8>
  406510:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  406514:	ldr	w8, [x8, #3488]
  406518:	cbz	w8, 406528 <ferror@plt+0x39d8>
  40651c:	str	w8, [x29, #28]
  406520:	mov	w19, w8
  406524:	b	40652c <ferror@plt+0x39dc>
  406528:	cbz	w19, 406534 <ferror@plt+0x39e4>
  40652c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406530:	str	w19, [x8, #884]
  406534:	mov	w0, w19
  406538:	bl	402520 <exit@plt>
  40653c:	stp	x29, x30, [sp, #-48]!
  406540:	stp	x20, x19, [sp, #32]
  406544:	mov	x20, x2
  406548:	cmp	w1, #0x1
  40654c:	stp	x22, x21, [sp, #16]
  406550:	mov	x29, sp
  406554:	b.gt	406574 <ferror@plt+0x3a24>
  406558:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40655c:	ldr	w8, [x8, #1188]
  406560:	cbz	w8, 4065dc <ferror@plt+0x3a8c>
  406564:	ldp	x20, x19, [sp, #32]
  406568:	ldp	x22, x21, [sp, #16]
  40656c:	ldp	x29, x30, [sp], #48
  406570:	ret
  406574:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406578:	ldr	w8, [x8, #1176]
  40657c:	mov	x19, x0
  406580:	cbz	w8, 406608 <ferror@plt+0x3ab8>
  406584:	ldr	x8, [x20, #8]
  406588:	ldr	x22, [x8, #8]
  40658c:	mov	x0, x22
  406590:	bl	4024f0 <strlen@plt>
  406594:	mov	x21, x0
  406598:	ldp	x0, x8, [x19, #24]
  40659c:	sub	x8, x8, x0
  4065a0:	cmp	x8, x21
  4065a4:	b.cs	4065c0 <ferror@plt+0x3a70>  // b.hs, b.nlast
  4065a8:	mov	x0, x19
  4065ac:	mov	x1, x21
  4065b0:	bl	418058 <_obstack_newchunk@@Base>
  4065b4:	ldr	x8, [x20, #8]
  4065b8:	ldr	x0, [x19, #24]
  4065bc:	ldr	x22, [x8, #8]
  4065c0:	mov	x1, x22
  4065c4:	mov	x2, x21
  4065c8:	bl	4024c0 <memcpy@plt>
  4065cc:	ldr	x8, [x19, #24]
  4065d0:	add	x8, x8, x21
  4065d4:	str	x8, [x19, #24]
  4065d8:	b	406624 <ferror@plt+0x3ad4>
  4065dc:	ldr	x8, [x20]
  4065e0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4065e4:	ldr	w0, [x9, #1192]
  4065e8:	ldp	x20, x19, [sp, #32]
  4065ec:	ldr	x3, [x8, #8]
  4065f0:	ldp	x22, x21, [sp, #16]
  4065f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4065f8:	add	x2, x2, #0x441
  4065fc:	mov	w1, wzr
  406600:	ldp	x29, x30, [sp], #48
  406604:	b	402c5c <ferror@plt+0x10c>
  406608:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40660c:	add	x3, x3, #0xa38
  406610:	mov	x0, x19
  406614:	mov	x2, x20
  406618:	mov	w4, wzr
  40661c:	bl	403f38 <ferror@plt+0x13e8>
  406620:	ldr	x8, [x19, #24]
  406624:	ldr	x9, [x19, #32]
  406628:	cmp	x9, x8
  40662c:	b.ne	406640 <ferror@plt+0x3af0>  // b.any
  406630:	mov	w1, #0x1                   	// #1
  406634:	mov	x0, x19
  406638:	bl	418058 <_obstack_newchunk@@Base>
  40663c:	ldr	x8, [x19, #24]
  406640:	add	x9, x8, #0x1
  406644:	str	x9, [x19, #24]
  406648:	strb	wzr, [x8]
  40664c:	ldp	x0, x8, [x19, #16]
  406650:	cmp	x8, x0
  406654:	b.ne	406664 <ferror@plt+0x3b14>  // b.any
  406658:	ldrb	w9, [x19, #80]
  40665c:	orr	w9, w9, #0x2
  406660:	strb	w9, [x19, #80]
  406664:	ldr	x10, [x19, #48]
  406668:	ldr	x11, [x19, #8]
  40666c:	ldr	x9, [x19, #32]
  406670:	add	x8, x10, x8
  406674:	bic	x8, x8, x10
  406678:	sub	x10, x8, x11
  40667c:	sub	x11, x9, x11
  406680:	cmp	x10, x11
  406684:	str	x8, [x19, #24]
  406688:	b.ls	406694 <ferror@plt+0x3b44>  // b.plast
  40668c:	mov	x8, x9
  406690:	str	x9, [x19, #24]
  406694:	str	x8, [x19, #16]
  406698:	ldp	x20, x19, [sp, #32]
  40669c:	ldp	x22, x21, [sp, #16]
  4066a0:	ldp	x29, x30, [sp], #48
  4066a4:	b	40c148 <ferror@plt+0x95f8>
  4066a8:	stp	x29, x30, [sp, #-80]!
  4066ac:	stp	x24, x23, [sp, #32]
  4066b0:	stp	x22, x21, [sp, #48]
  4066b4:	stp	x20, x19, [sp, #64]
  4066b8:	ldr	x8, [x2]
  4066bc:	cmp	w1, #0x1
  4066c0:	str	x25, [sp, #16]
  4066c4:	mov	x29, sp
  4066c8:	b.gt	406708 <ferror@plt+0x3bb8>
  4066cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4066d0:	ldr	w9, [x9, #1188]
  4066d4:	cbnz	w9, 40697c <ferror@plt+0x3e2c>
  4066d8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4066dc:	ldr	w0, [x9, #1192]
  4066e0:	ldr	x3, [x8, #8]
  4066e4:	ldp	x20, x19, [sp, #64]
  4066e8:	ldp	x22, x21, [sp, #48]
  4066ec:	ldp	x24, x23, [sp, #32]
  4066f0:	ldr	x25, [sp, #16]
  4066f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4066f8:	add	x2, x2, #0x441
  4066fc:	mov	w1, wzr
  406700:	ldp	x29, x30, [sp], #80
  406704:	b	402c5c <ferror@plt+0x10c>
  406708:	mov	x20, x2
  40670c:	mov	x19, x0
  406710:	cmp	w1, #0x2
  406714:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406718:	b.eq	406740 <ferror@plt+0x3bf0>  // b.none
  40671c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406720:	ldr	w9, [x9, #1188]
  406724:	cbnz	w9, 406740 <ferror@plt+0x3bf0>
  406728:	ldr	w0, [x21, #1192]
  40672c:	ldr	x3, [x8, #8]
  406730:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406734:	add	x2, x2, #0x46c
  406738:	mov	w1, wzr
  40673c:	bl	402c5c <ferror@plt+0x10c>
  406740:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406744:	ldr	w8, [x8, #1176]
  406748:	cbz	w8, 406850 <ferror@plt+0x3d00>
  40674c:	ldr	x8, [x20, #8]
  406750:	ldr	x20, [x8, #8]
  406754:	mov	x0, x20
  406758:	bl	4024f0 <strlen@plt>
  40675c:	ldr	w8, [x21, #1192]
  406760:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406764:	mov	x21, x0
  406768:	add	x2, x2, #0x7cc
  40676c:	mov	w0, w8
  406770:	mov	w1, wzr
  406774:	bl	402c5c <ferror@plt+0x10c>
  406778:	sxtw	x23, w21
  40677c:	mov	x10, xzr
  406780:	lsl	x12, x23, #32
  406784:	add	x8, x20, x23
  406788:	mov	x9, #0xffffffff00000000    	// #-4294967296
  40678c:	mov	x24, x10
  406790:	add	x10, x23, x10
  406794:	cmp	x10, #0x2
  406798:	mov	x11, x12
  40679c:	b.lt	4067b8 <ferror@plt+0x3c68>  // b.tstop
  4067a0:	add	x10, x8, x24
  4067a4:	ldurb	w12, [x10, #-1]
  4067a8:	sub	x10, x24, #0x1
  4067ac:	cmp	w12, #0x58
  4067b0:	add	x12, x11, x9
  4067b4:	b.eq	40678c <ferror@plt+0x3c3c>  // b.none
  4067b8:	ldp	x0, x8, [x19, #24]
  4067bc:	asr	x22, x11, #32
  4067c0:	add	x25, x21, x24
  4067c4:	sub	x8, x8, x0
  4067c8:	cmp	x8, x22
  4067cc:	b.cs	4067e0 <ferror@plt+0x3c90>  // b.hs, b.nlast
  4067d0:	mov	x0, x19
  4067d4:	mov	x1, x22
  4067d8:	bl	418058 <_obstack_newchunk@@Base>
  4067dc:	ldr	x0, [x19, #24]
  4067e0:	mov	x1, x20
  4067e4:	mov	x2, x22
  4067e8:	bl	4024c0 <memcpy@plt>
  4067ec:	ldr	x8, [x19, #24]
  4067f0:	add	x8, x8, x22
  4067f4:	str	x8, [x19, #24]
  4067f8:	bl	402670 <getpid@plt>
  4067fc:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406800:	cmp	w0, #0x0
  406804:	mov	w8, #0xcccd                	// #52429
  406808:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40680c:	add	x20, x20, #0x81e
  406810:	movk	w8, #0xcccc, lsl #16
  406814:	mov	w9, #0xa                   	// #10
  406818:	cneg	w11, w0, mi  // mi = first
  40681c:	add	x10, x10, #0x2be
  406820:	strb	wzr, [x20, #1]
  406824:	umull	x12, w11, w8
  406828:	lsr	x12, x12, #35
  40682c:	msub	w13, w12, w9, w11
  406830:	ldrb	w13, [x10, w13, uxtw]
  406834:	cmp	w11, #0x9
  406838:	mov	w11, w12
  40683c:	strb	w13, [x20], #-1
  406840:	b.hi	406824 <ferror@plt+0x3cd4>  // b.pmore
  406844:	tbnz	w0, #31, 40688c <ferror@plt+0x3d3c>
  406848:	add	x20, x20, #0x1
  40684c:	b	406894 <ferror@plt+0x3d44>
  406850:	ldp	x8, x9, [x20]
  406854:	ldr	x21, [x9, #8]
  406858:	ldr	x20, [x8, #8]
  40685c:	mov	x0, x21
  406860:	bl	4024f0 <strlen@plt>
  406864:	mov	x3, x0
  406868:	mov	x0, x19
  40686c:	mov	x1, x20
  406870:	mov	x2, x21
  406874:	ldp	x20, x19, [sp, #64]
  406878:	ldp	x22, x21, [sp, #48]
  40687c:	ldp	x24, x23, [sp, #32]
  406880:	ldr	x25, [sp, #16]
  406884:	ldp	x29, x30, [sp], #80
  406888:	b	40814c <ferror@plt+0x55fc>
  40688c:	mov	w8, #0x2d                  	// #45
  406890:	strb	w8, [x20]
  406894:	mov	x0, x20
  406898:	bl	4024f0 <strlen@plt>
  40689c:	mov	x21, x0
  4068a0:	neg	x8, x24
  4068a4:	cmp	w8, w21
  4068a8:	b.ge	4068ec <ferror@plt+0x3d9c>  // b.tcont
  4068ac:	ldp	x0, x9, [x19, #24]
  4068b0:	sxtw	x22, w8
  4068b4:	add	x1, x22, #0x1
  4068b8:	sub	x8, x9, x0
  4068bc:	cmp	x8, x1
  4068c0:	b.cs	4068d0 <ferror@plt+0x3d80>  // b.hs, b.nlast
  4068c4:	mov	x0, x19
  4068c8:	bl	418058 <_obstack_newchunk@@Base>
  4068cc:	ldr	x0, [x19, #24]
  4068d0:	add	x8, x20, w21, sxtw
  4068d4:	sub	x1, x8, x22
  4068d8:	mov	x2, x22
  4068dc:	bl	4024c0 <memcpy@plt>
  4068e0:	ldr	x8, [x19, #24]
  4068e4:	add	x8, x8, x22
  4068e8:	b	406970 <ferror@plt+0x3e20>
  4068ec:	sub	w8, w23, w21
  4068f0:	cmp	w8, w25
  4068f4:	b.le	406938 <ferror@plt+0x3de8>
  4068f8:	add	w22, w21, w24
  4068fc:	mov	w23, #0x30                  	// #48
  406900:	b	406918 <ferror@plt+0x3dc8>
  406904:	add	x9, x8, #0x1
  406908:	adds	w22, w22, #0x1
  40690c:	str	x9, [x19, #24]
  406910:	strb	w23, [x8]
  406914:	b.cs	406938 <ferror@plt+0x3de8>  // b.hs, b.nlast
  406918:	ldp	x8, x9, [x19, #24]
  40691c:	cmp	x9, x8
  406920:	b.ne	406904 <ferror@plt+0x3db4>  // b.any
  406924:	mov	w1, #0x1                   	// #1
  406928:	mov	x0, x19
  40692c:	bl	418058 <_obstack_newchunk@@Base>
  406930:	ldr	x8, [x19, #24]
  406934:	b	406904 <ferror@plt+0x3db4>
  406938:	ldp	x0, x8, [x19, #24]
  40693c:	sxtw	x21, w21
  406940:	add	x1, x21, #0x1
  406944:	sub	x8, x8, x0
  406948:	cmp	x8, x1
  40694c:	b.cs	40695c <ferror@plt+0x3e0c>  // b.hs, b.nlast
  406950:	mov	x0, x19
  406954:	bl	418058 <_obstack_newchunk@@Base>
  406958:	ldr	x0, [x19, #24]
  40695c:	mov	x1, x20
  406960:	mov	x2, x21
  406964:	bl	4024c0 <memcpy@plt>
  406968:	ldr	x8, [x19, #24]
  40696c:	add	x8, x8, x21
  406970:	add	x9, x8, #0x1
  406974:	str	x9, [x19, #24]
  406978:	strb	wzr, [x8]
  40697c:	ldp	x20, x19, [sp, #64]
  406980:	ldp	x22, x21, [sp, #48]
  406984:	ldp	x24, x23, [sp, #32]
  406988:	ldr	x25, [sp, #16]
  40698c:	ldp	x29, x30, [sp], #80
  406990:	ret
  406994:	stp	x29, x30, [sp, #-48]!
  406998:	stp	x20, x19, [sp, #32]
  40699c:	ldr	x8, [x2]
  4069a0:	cmp	w1, #0x1
  4069a4:	str	x21, [sp, #16]
  4069a8:	mov	x29, sp
  4069ac:	b.gt	4069cc <ferror@plt+0x3e7c>
  4069b0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4069b4:	ldr	w9, [x9, #1188]
  4069b8:	cbz	w9, 406a3c <ferror@plt+0x3eec>
  4069bc:	ldp	x20, x19, [sp, #32]
  4069c0:	ldr	x21, [sp, #16]
  4069c4:	ldp	x29, x30, [sp], #48
  4069c8:	ret
  4069cc:	mov	x20, x2
  4069d0:	mov	x19, x0
  4069d4:	cmp	w1, #0x2
  4069d8:	b.eq	406a08 <ferror@plt+0x3eb8>  // b.none
  4069dc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4069e0:	ldr	w9, [x9, #1188]
  4069e4:	cbnz	w9, 406a08 <ferror@plt+0x3eb8>
  4069e8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4069ec:	ldr	w0, [x9, #1192]
  4069f0:	ldr	x3, [x8, #8]
  4069f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4069f8:	add	x2, x2, #0x46c
  4069fc:	mov	w1, wzr
  406a00:	bl	402c5c <ferror@plt+0x10c>
  406a04:	ldr	x8, [x20]
  406a08:	ldr	x9, [x20, #8]
  406a0c:	ldr	x20, [x8, #8]
  406a10:	ldr	x21, [x9, #8]
  406a14:	mov	x0, x21
  406a18:	bl	4024f0 <strlen@plt>
  406a1c:	mov	x3, x0
  406a20:	mov	x0, x19
  406a24:	mov	x1, x20
  406a28:	mov	x2, x21
  406a2c:	ldp	x20, x19, [sp, #32]
  406a30:	ldr	x21, [sp, #16]
  406a34:	ldp	x29, x30, [sp], #48
  406a38:	b	40814c <ferror@plt+0x55fc>
  406a3c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406a40:	ldr	w0, [x9, #1192]
  406a44:	ldr	x3, [x8, #8]
  406a48:	ldp	x20, x19, [sp, #32]
  406a4c:	ldr	x21, [sp, #16]
  406a50:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406a54:	add	x2, x2, #0x441
  406a58:	mov	w1, wzr
  406a5c:	ldp	x29, x30, [sp], #48
  406a60:	b	402c5c <ferror@plt+0x10c>
  406a64:	sub	sp, sp, #0xc0
  406a68:	stp	x29, x30, [sp, #96]
  406a6c:	stp	x28, x27, [sp, #112]
  406a70:	stp	x26, x25, [sp, #128]
  406a74:	stp	x24, x23, [sp, #144]
  406a78:	stp	x22, x21, [sp, #160]
  406a7c:	stp	x20, x19, [sp, #176]
  406a80:	ldr	x8, [x2]
  406a84:	mov	x20, x2
  406a88:	mov	w21, w1
  406a8c:	cmp	w1, #0x2
  406a90:	mov	x19, x0
  406a94:	add	x29, sp, #0x60
  406a98:	b.gt	406ab4 <ferror@plt+0x3f64>
  406a9c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406aa0:	ldr	w9, [x9, #1188]
  406aa4:	cbz	w9, 406b38 <ferror@plt+0x3fe8>
  406aa8:	cmp	w21, #0x2
  406aac:	b.eq	406b5c <ferror@plt+0x400c>  // b.none
  406ab0:	b	406d70 <ferror@plt+0x4220>
  406ab4:	cmp	w21, #0x5
  406ab8:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406abc:	b.lt	406ae4 <ferror@plt+0x3f94>  // b.tstop
  406ac0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406ac4:	ldr	w9, [x9, #1188]
  406ac8:	cbnz	w9, 406ae4 <ferror@plt+0x3f94>
  406acc:	ldr	w0, [x23, #1192]
  406ad0:	ldr	x3, [x8, #8]
  406ad4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406ad8:	add	x2, x2, #0x46c
  406adc:	mov	w1, wzr
  406ae0:	bl	402c5c <ferror@plt+0x10c>
  406ae4:	ldr	x8, [x20, #16]
  406ae8:	ldr	x22, [x8, #8]
  406aec:	stp	xzr, xzr, [sp, #32]
  406af0:	stp	xzr, xzr, [sp, #64]
  406af4:	stp	xzr, xzr, [sp, #16]
  406af8:	mov	x0, x22
  406afc:	bl	4024f0 <strlen@plt>
  406b00:	mov	x1, x0
  406b04:	add	x2, sp, #0x20
  406b08:	mov	x0, x22
  406b0c:	bl	402870 <re_compile_pattern@plt>
  406b10:	cbz	x0, 406bb4 <ferror@plt+0x4064>
  406b14:	mov	x4, x0
  406b18:	ldr	w0, [x23, #1192]
  406b1c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406b20:	add	x2, x2, #0x237
  406b24:	mov	w1, wzr
  406b28:	mov	x3, x22
  406b2c:	bl	402c5c <ferror@plt+0x10c>
  406b30:	ldr	x0, [sp, #32]
  406b34:	b	406d6c <ferror@plt+0x421c>
  406b38:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406b3c:	ldr	w0, [x9, #1192]
  406b40:	ldr	x3, [x8, #8]
  406b44:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406b48:	add	x2, x2, #0x441
  406b4c:	mov	w1, wzr
  406b50:	bl	402c5c <ferror@plt+0x10c>
  406b54:	cmp	w21, #0x2
  406b58:	b.ne	406d70 <ferror@plt+0x4220>  // b.any
  406b5c:	ldr	x8, [x20, #8]
  406b60:	ldr	x22, [x8, #8]
  406b64:	mov	x0, x22
  406b68:	bl	4024f0 <strlen@plt>
  406b6c:	mov	x21, x0
  406b70:	ldp	x0, x8, [x19, #24]
  406b74:	sub	x8, x8, x0
  406b78:	cmp	x8, x21
  406b7c:	b.cs	406b98 <ferror@plt+0x4048>  // b.hs, b.nlast
  406b80:	mov	x0, x19
  406b84:	mov	x1, x21
  406b88:	bl	418058 <_obstack_newchunk@@Base>
  406b8c:	ldr	x8, [x20, #8]
  406b90:	ldr	x0, [x19, #24]
  406b94:	ldr	x22, [x8, #8]
  406b98:	mov	x1, x22
  406b9c:	mov	x2, x21
  406ba0:	bl	4024c0 <memcpy@plt>
  406ba4:	ldr	x8, [x19, #24]
  406ba8:	add	x8, x8, x21
  406bac:	str	x8, [x19, #24]
  406bb0:	b	406d70 <ferror@plt+0x4220>
  406bb4:	ldr	x8, [x20, #8]
  406bb8:	ldr	x23, [x8, #8]
  406bbc:	mov	x0, x23
  406bc0:	bl	4024f0 <strlen@plt>
  406bc4:	mov	x24, x0
  406bc8:	tbnz	w24, #31, 406d30 <ferror@plt+0x41e0>
  406bcc:	mov	w25, wzr
  406bd0:	sxtw	x28, w24
  406bd4:	b	406bf4 <ferror@plt+0x40a4>
  406bd8:	ldrb	w9, [x23, x26]
  406bdc:	add	w25, w25, #0x1
  406be0:	add	x10, x8, #0x1
  406be4:	str	x10, [x19, #24]
  406be8:	strb	w9, [x8]
  406bec:	cmp	w25, w24
  406bf0:	b.gt	406d30 <ferror@plt+0x41e0>
  406bf4:	sxtw	x27, w25
  406bf8:	sub	x26, x28, x27
  406bfc:	add	x0, sp, #0x20
  406c00:	add	x5, sp, #0x8
  406c04:	mov	x1, x23
  406c08:	mov	w2, w24
  406c0c:	mov	w3, w25
  406c10:	mov	w4, w26
  406c14:	bl	4027c0 <re_search@plt>
  406c18:	tbnz	w0, #31, 406cc8 <ferror@plt+0x4178>
  406c1c:	cmp	w0, w27
  406c20:	b.le	406c68 <ferror@plt+0x4118>
  406c24:	ldp	x8, x9, [x19, #24]
  406c28:	sxtw	x10, w0
  406c2c:	sub	x25, x10, x27
  406c30:	sub	x9, x9, x8
  406c34:	cmp	x9, x25
  406c38:	b.cs	406c4c <ferror@plt+0x40fc>  // b.hs, b.nlast
  406c3c:	mov	x0, x19
  406c40:	mov	x1, x25
  406c44:	bl	418058 <_obstack_newchunk@@Base>
  406c48:	ldr	x8, [x19, #24]
  406c4c:	add	x1, x23, x27
  406c50:	mov	x0, x8
  406c54:	mov	x2, x25
  406c58:	bl	4024c0 <memcpy@plt>
  406c5c:	ldr	x8, [x19, #24]
  406c60:	add	x8, x8, x25
  406c64:	str	x8, [x19, #24]
  406c68:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406c6c:	cmp	w21, #0x4
  406c70:	add	x2, x2, #0x67f
  406c74:	b.lt	406c80 <ferror@plt+0x4130>  // b.tstop
  406c78:	ldr	x8, [x20, #24]
  406c7c:	ldr	x2, [x8, #8]
  406c80:	add	x3, sp, #0x8
  406c84:	mov	x0, x19
  406c88:	mov	x1, x23
  406c8c:	bl	4083dc <ferror@plt+0x588c>
  406c90:	ldp	x9, x8, [sp, #16]
  406c94:	ldr	w25, [x8]
  406c98:	ldr	w8, [x9]
  406c9c:	cmp	w8, w25
  406ca0:	b.ne	406bec <ferror@plt+0x409c>  // b.any
  406ca4:	ldp	x8, x9, [x19, #24]
  406ca8:	sxtw	x26, w25
  406cac:	cmp	x9, x8
  406cb0:	b.ne	406bd8 <ferror@plt+0x4088>  // b.any
  406cb4:	mov	w1, #0x1                   	// #1
  406cb8:	mov	x0, x19
  406cbc:	bl	418058 <_obstack_newchunk@@Base>
  406cc0:	ldr	x8, [x19, #24]
  406cc4:	b	406bd8 <ferror@plt+0x4088>
  406cc8:	cmn	w0, #0x2
  406ccc:	b.ne	406cf0 <ferror@plt+0x41a0>  // b.any
  406cd0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406cd4:	ldr	w0, [x8, #1192]
  406cd8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406cdc:	add	x2, x2, #0x80c
  406ce0:	mov	w1, wzr
  406ce4:	mov	x3, x22
  406ce8:	bl	402c5c <ferror@plt+0x10c>
  406cec:	b	406d30 <ferror@plt+0x41e0>
  406cf0:	cmp	w27, w24
  406cf4:	b.ge	406d30 <ferror@plt+0x41e0>  // b.tcont
  406cf8:	ldp	x0, x8, [x19, #24]
  406cfc:	sub	x8, x8, x0
  406d00:	cmp	x8, x26
  406d04:	b.cs	406d18 <ferror@plt+0x41c8>  // b.hs, b.nlast
  406d08:	mov	x0, x19
  406d0c:	mov	x1, x26
  406d10:	bl	418058 <_obstack_newchunk@@Base>
  406d14:	ldr	x0, [x19, #24]
  406d18:	add	x1, x23, x27
  406d1c:	mov	x2, x26
  406d20:	bl	4024c0 <memcpy@plt>
  406d24:	ldr	x8, [x19, #24]
  406d28:	add	x8, x8, x26
  406d2c:	str	x8, [x19, #24]
  406d30:	ldp	x8, x9, [x19, #24]
  406d34:	cmp	x9, x8
  406d38:	b.ne	406d4c <ferror@plt+0x41fc>  // b.any
  406d3c:	mov	w1, #0x1                   	// #1
  406d40:	mov	x0, x19
  406d44:	bl	418058 <_obstack_newchunk@@Base>
  406d48:	ldr	x8, [x19, #24]
  406d4c:	add	x9, x8, #0x1
  406d50:	add	x0, sp, #0x20
  406d54:	str	x9, [x19, #24]
  406d58:	strb	wzr, [x8]
  406d5c:	bl	402a70 <regfree@plt>
  406d60:	ldr	x0, [sp, #16]
  406d64:	bl	402930 <free@plt>
  406d68:	ldr	x0, [sp, #24]
  406d6c:	bl	402930 <free@plt>
  406d70:	ldp	x20, x19, [sp, #176]
  406d74:	ldp	x22, x21, [sp, #160]
  406d78:	ldp	x24, x23, [sp, #144]
  406d7c:	ldp	x26, x25, [sp, #128]
  406d80:	ldp	x28, x27, [sp, #112]
  406d84:	ldp	x29, x30, [sp, #96]
  406d88:	add	sp, sp, #0xc0
  406d8c:	ret
  406d90:	stp	x29, x30, [sp, #-32]!
  406d94:	cmp	w1, #0x2
  406d98:	stp	x20, x19, [sp, #16]
  406d9c:	mov	x29, sp
  406da0:	b.ge	406dd8 <ferror@plt+0x4288>  // b.tcont
  406da4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406da8:	ldr	w8, [x8, #1188]
  406dac:	cbnz	w8, 406dfc <ferror@plt+0x42ac>
  406db0:	ldr	x8, [x2]
  406db4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406db8:	ldr	w0, [x9, #1192]
  406dbc:	ldp	x20, x19, [sp, #16]
  406dc0:	ldr	x3, [x8, #8]
  406dc4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406dc8:	add	x2, x2, #0x441
  406dcc:	mov	w1, wzr
  406dd0:	ldp	x29, x30, [sp], #32
  406dd4:	b	402c5c <ferror@plt+0x10c>
  406dd8:	mov	w8, w1
  406ddc:	add	x19, x2, #0x8
  406de0:	sub	x20, x8, #0x1
  406de4:	ldr	x8, [x19], #8
  406de8:	mov	w1, #0x4                   	// #4
  406dec:	ldr	x0, [x8, #8]
  406df0:	bl	41059c <ferror@plt+0xda4c>
  406df4:	subs	x20, x20, #0x1
  406df8:	b.ne	406de4 <ferror@plt+0x4294>  // b.any
  406dfc:	ldp	x20, x19, [sp, #16]
  406e00:	ldp	x29, x30, [sp], #32
  406e04:	ret
  406e08:	mov	x8, x2
  406e0c:	mov	w2, #0x3                   	// #3
  406e10:	mov	w0, w1
  406e14:	mov	x1, x8
  406e18:	b	407df8 <ferror@plt+0x52a8>
  406e1c:	sub	sp, sp, #0xa0
  406e20:	stp	x29, x30, [sp, #96]
  406e24:	stp	x24, x23, [sp, #112]
  406e28:	stp	x22, x21, [sp, #128]
  406e2c:	stp	x20, x19, [sp, #144]
  406e30:	ldr	x8, [x2]
  406e34:	mov	w20, w1
  406e38:	cmp	w1, #0x2
  406e3c:	mov	x19, x0
  406e40:	add	x29, sp, #0x60
  406e44:	b.gt	406e60 <ferror@plt+0x4310>
  406e48:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406e4c:	ldr	w9, [x9, #1188]
  406e50:	cbz	w9, 406ee8 <ferror@plt+0x4398>
  406e54:	cmp	w20, #0x2
  406e58:	b.eq	406f0c <ferror@plt+0x43bc>  // b.none
  406e5c:	b	407094 <ferror@plt+0x4544>
  406e60:	mov	x21, x2
  406e64:	cmp	w20, #0x5
  406e68:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406e6c:	b.lt	406e94 <ferror@plt+0x4344>  // b.tstop
  406e70:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406e74:	ldr	w9, [x9, #1188]
  406e78:	cbnz	w9, 406e94 <ferror@plt+0x4344>
  406e7c:	ldr	w0, [x24, #1192]
  406e80:	ldr	x3, [x8, #8]
  406e84:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406e88:	add	x2, x2, #0x46c
  406e8c:	mov	w1, wzr
  406e90:	bl	402c5c <ferror@plt+0x10c>
  406e94:	ldp	x8, x9, [x21, #8]
  406e98:	ldr	x23, [x9, #8]
  406e9c:	ldr	x22, [x8, #8]
  406ea0:	stp	xzr, xzr, [sp, #32]
  406ea4:	stp	xzr, xzr, [sp, #64]
  406ea8:	mov	x0, x23
  406eac:	stp	xzr, xzr, [sp, #16]
  406eb0:	bl	4024f0 <strlen@plt>
  406eb4:	mov	x1, x0
  406eb8:	add	x2, sp, #0x20
  406ebc:	mov	x0, x23
  406ec0:	bl	402870 <re_compile_pattern@plt>
  406ec4:	cbz	x0, 406f64 <ferror@plt+0x4414>
  406ec8:	mov	x4, x0
  406ecc:	ldr	w0, [x24, #1192]
  406ed0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406ed4:	add	x2, x2, #0x8c0
  406ed8:	mov	w1, wzr
  406edc:	mov	x3, x23
  406ee0:	bl	402c5c <ferror@plt+0x10c>
  406ee4:	b	40707c <ferror@plt+0x452c>
  406ee8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406eec:	ldr	w0, [x9, #1192]
  406ef0:	ldr	x3, [x8, #8]
  406ef4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406ef8:	add	x2, x2, #0x441
  406efc:	mov	w1, wzr
  406f00:	bl	402c5c <ferror@plt+0x10c>
  406f04:	cmp	w20, #0x2
  406f08:	b.ne	407094 <ferror@plt+0x4544>  // b.any
  406f0c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406f10:	add	x0, x0, #0x81e
  406f14:	mov	w8, #0x30                  	// #48
  406f18:	strh	w8, [x0]
  406f1c:	bl	4024f0 <strlen@plt>
  406f20:	mov	x20, x0
  406f24:	ldp	x0, x8, [x19, #24]
  406f28:	sub	x8, x8, x0
  406f2c:	cmp	x8, x20
  406f30:	b.cs	406f44 <ferror@plt+0x43f4>  // b.hs, b.nlast
  406f34:	mov	x0, x19
  406f38:	mov	x1, x20
  406f3c:	bl	418058 <_obstack_newchunk@@Base>
  406f40:	ldr	x0, [x19, #24]
  406f44:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406f48:	add	x1, x1, #0x81e
  406f4c:	mov	x2, x20
  406f50:	bl	4024c0 <memcpy@plt>
  406f54:	ldr	x8, [x19, #24]
  406f58:	add	x8, x8, x20
  406f5c:	str	x8, [x19, #24]
  406f60:	b	407094 <ferror@plt+0x4544>
  406f64:	mov	x0, x22
  406f68:	bl	4024f0 <strlen@plt>
  406f6c:	mov	x2, x0
  406f70:	cmp	w20, #0x3
  406f74:	add	x8, sp, #0x8
  406f78:	csel	x5, xzr, x8, eq  // eq = none
  406f7c:	add	x0, sp, #0x20
  406f80:	mov	x1, x22
  406f84:	mov	w3, wzr
  406f88:	mov	w4, w2
  406f8c:	bl	4027c0 <re_search@plt>
  406f90:	cmn	w0, #0x2
  406f94:	b.ne	406fb4 <ferror@plt+0x4464>  // b.any
  406f98:	ldr	w0, [x24, #1192]
  406f9c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406fa0:	add	x2, x2, #0x80c
  406fa4:	mov	w1, wzr
  406fa8:	mov	x3, x23
  406fac:	bl	402c5c <ferror@plt+0x10c>
  406fb0:	b	40707c <ferror@plt+0x452c>
  406fb4:	cmp	w20, #0x3
  406fb8:	b.ne	407010 <ferror@plt+0x44c0>  // b.any
  406fbc:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  406fc0:	cmp	w0, #0x0
  406fc4:	mov	w8, #0xcccd                	// #52429
  406fc8:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  406fcc:	add	x20, x20, #0x81e
  406fd0:	movk	w8, #0xcccc, lsl #16
  406fd4:	mov	w9, #0xa                   	// #10
  406fd8:	cneg	w11, w0, mi  // mi = first
  406fdc:	add	x10, x10, #0x2be
  406fe0:	strb	wzr, [x20, #1]
  406fe4:	umull	x12, w11, w8
  406fe8:	lsr	x12, x12, #35
  406fec:	msub	w13, w12, w9, w11
  406ff0:	ldrb	w13, [x10, w13, uxtw]
  406ff4:	cmp	w11, #0x9
  406ff8:	mov	w11, w12
  406ffc:	strb	w13, [x20], #-1
  407000:	b.hi	406fe4 <ferror@plt+0x4494>  // b.pmore
  407004:	tbnz	w0, #31, 407030 <ferror@plt+0x44e0>
  407008:	add	x20, x20, #0x1
  40700c:	b	407038 <ferror@plt+0x44e8>
  407010:	tbnz	w0, #31, 40707c <ferror@plt+0x452c>
  407014:	ldr	x8, [x21, #24]
  407018:	add	x3, sp, #0x8
  40701c:	mov	x0, x19
  407020:	mov	x1, x22
  407024:	ldr	x2, [x8, #8]
  407028:	bl	4083dc <ferror@plt+0x588c>
  40702c:	b	40707c <ferror@plt+0x452c>
  407030:	mov	w8, #0x2d                  	// #45
  407034:	strb	w8, [x20]
  407038:	mov	x0, x20
  40703c:	bl	4024f0 <strlen@plt>
  407040:	mov	x21, x0
  407044:	ldp	x0, x8, [x19, #24]
  407048:	sub	x8, x8, x0
  40704c:	cmp	x8, x21
  407050:	b.cs	407064 <ferror@plt+0x4514>  // b.hs, b.nlast
  407054:	mov	x0, x19
  407058:	mov	x1, x21
  40705c:	bl	418058 <_obstack_newchunk@@Base>
  407060:	ldr	x0, [x19, #24]
  407064:	mov	x1, x20
  407068:	mov	x2, x21
  40706c:	bl	4024c0 <memcpy@plt>
  407070:	ldr	x8, [x19, #24]
  407074:	add	x8, x8, x21
  407078:	str	x8, [x19, #24]
  40707c:	add	x0, sp, #0x20
  407080:	bl	402a70 <regfree@plt>
  407084:	ldr	x0, [sp, #16]
  407088:	bl	402930 <free@plt>
  40708c:	ldr	x0, [sp, #24]
  407090:	bl	402930 <free@plt>
  407094:	ldp	x20, x19, [sp, #144]
  407098:	ldp	x22, x21, [sp, #128]
  40709c:	ldp	x24, x23, [sp, #112]
  4070a0:	ldp	x29, x30, [sp, #96]
  4070a4:	add	sp, sp, #0xa0
  4070a8:	ret
  4070ac:	subs	w1, w1, #0x1
  4070b0:	b.gt	4070c4 <ferror@plt+0x4574>
  4070b4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4070b8:	ldr	w8, [x8, #1188]
  4070bc:	cbz	w8, 4070d8 <ferror@plt+0x4588>
  4070c0:	ret
  4070c4:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4070c8:	add	x2, x2, #0x8
  4070cc:	add	x3, x3, #0x31a
  4070d0:	mov	w4, #0x1                   	// #1
  4070d4:	b	403f38 <ferror@plt+0x13e8>
  4070d8:	ldr	x8, [x2]
  4070dc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4070e0:	ldr	w0, [x9, #1192]
  4070e4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4070e8:	ldr	x3, [x8, #8]
  4070ec:	add	x2, x2, #0x441
  4070f0:	mov	w1, wzr
  4070f4:	b	402c5c <ferror@plt+0x10c>
  4070f8:	mov	x8, x2
  4070fc:	mov	w2, #0x1                   	// #1
  407100:	mov	w0, w1
  407104:	mov	x1, x8
  407108:	b	408058 <ferror@plt+0x5508>
  40710c:	stp	x29, x30, [sp, #-64]!
  407110:	mov	x29, sp
  407114:	stp	x22, x21, [sp, #32]
  407118:	stp	x20, x19, [sp, #48]
  40711c:	str	wzr, [x29, #28]
  407120:	str	x23, [sp, #16]
  407124:	ldr	x23, [x2]
  407128:	mov	x20, x2
  40712c:	mov	w21, w1
  407130:	cmp	w1, #0x2
  407134:	mov	x19, x0
  407138:	b.gt	407154 <ferror@plt+0x4604>
  40713c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407140:	ldr	w8, [x8, #1188]
  407144:	cbz	w8, 40723c <ferror@plt+0x46ec>
  407148:	cmp	w21, #0x2
  40714c:	b.eq	407260 <ferror@plt+0x4710>  // b.none
  407150:	b	4072b4 <ferror@plt+0x4764>
  407154:	cmp	w21, #0x5
  407158:	b.lt	407188 <ferror@plt+0x4638>  // b.tstop
  40715c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407160:	ldr	w8, [x8, #1188]
  407164:	cbnz	w8, 407188 <ferror@plt+0x4638>
  407168:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40716c:	ldr	w0, [x8, #1192]
  407170:	ldr	x3, [x23, #8]
  407174:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407178:	add	x2, x2, #0x46c
  40717c:	mov	w1, wzr
  407180:	bl	402c5c <ferror@plt+0x10c>
  407184:	ldr	x23, [x20]
  407188:	ldr	x8, [x20, #8]
  40718c:	ldr	x0, [x8, #8]
  407190:	bl	4024f0 <strlen@plt>
  407194:	mov	x22, x0
  407198:	str	w22, [x29, #24]
  40719c:	ldr	x8, [x20, #16]
  4071a0:	add	x2, x29, #0x1c
  4071a4:	mov	x0, x23
  4071a8:	ldr	x1, [x8, #8]
  4071ac:	bl	407d18 <ferror@plt+0x51c8>
  4071b0:	tbz	w0, #0, 4072b4 <ferror@plt+0x4764>
  4071b4:	cmp	w21, #0x4
  4071b8:	mov	w8, w22
  4071bc:	b.lt	4071dc <ferror@plt+0x468c>  // b.tstop
  4071c0:	ldr	x8, [x20, #24]
  4071c4:	ldr	x0, [x20]
  4071c8:	add	x2, x29, #0x18
  4071cc:	ldr	x1, [x8, #8]
  4071d0:	bl	407d18 <ferror@plt+0x51c8>
  4071d4:	tbz	w0, #0, 4072b4 <ferror@plt+0x4764>
  4071d8:	ldr	w8, [x29, #24]
  4071dc:	ldr	w23, [x29, #28]
  4071e0:	cmp	w23, w22
  4071e4:	b.ge	4072b4 <ferror@plt+0x4764>  // b.tcont
  4071e8:	tbnz	w23, #31, 4072b4 <ferror@plt+0x4764>
  4071ec:	cmp	w8, #0x1
  4071f0:	b.lt	4072b4 <ferror@plt+0x4764>  // b.tstop
  4071f4:	add	w9, w8, w23
  4071f8:	cmp	w9, w22
  4071fc:	b.le	407208 <ferror@plt+0x46b8>
  407200:	sub	w8, w22, w23
  407204:	str	w8, [x29, #24]
  407208:	ldp	x0, x9, [x19, #24]
  40720c:	sxtw	x21, w8
  407210:	sub	x8, x9, x0
  407214:	cmp	x8, x21
  407218:	b.cs	40722c <ferror@plt+0x46dc>  // b.hs, b.nlast
  40721c:	mov	x0, x19
  407220:	mov	x1, x21
  407224:	bl	418058 <_obstack_newchunk@@Base>
  407228:	ldr	x0, [x19, #24]
  40722c:	ldr	x8, [x20, #8]
  407230:	ldr	x8, [x8, #8]
  407234:	add	x1, x8, x23
  407238:	b	4072a0 <ferror@plt+0x4750>
  40723c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407240:	ldr	w0, [x8, #1192]
  407244:	ldr	x3, [x23, #8]
  407248:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40724c:	add	x2, x2, #0x441
  407250:	mov	w1, wzr
  407254:	bl	402c5c <ferror@plt+0x10c>
  407258:	cmp	w21, #0x2
  40725c:	b.ne	4072b4 <ferror@plt+0x4764>  // b.any
  407260:	ldr	x8, [x20, #8]
  407264:	ldr	x22, [x8, #8]
  407268:	mov	x0, x22
  40726c:	bl	4024f0 <strlen@plt>
  407270:	mov	x21, x0
  407274:	ldp	x0, x8, [x19, #24]
  407278:	sub	x8, x8, x0
  40727c:	cmp	x8, x21
  407280:	b.cs	40729c <ferror@plt+0x474c>  // b.hs, b.nlast
  407284:	mov	x0, x19
  407288:	mov	x1, x21
  40728c:	bl	418058 <_obstack_newchunk@@Base>
  407290:	ldr	x8, [x20, #8]
  407294:	ldr	x0, [x19, #24]
  407298:	ldr	x22, [x8, #8]
  40729c:	mov	x1, x22
  4072a0:	mov	x2, x21
  4072a4:	bl	4024c0 <memcpy@plt>
  4072a8:	ldr	x8, [x19, #24]
  4072ac:	add	x8, x8, x21
  4072b0:	str	x8, [x19, #24]
  4072b4:	ldp	x20, x19, [sp, #48]
  4072b8:	ldp	x22, x21, [sp, #32]
  4072bc:	ldr	x23, [sp, #16]
  4072c0:	ldp	x29, x30, [sp], #64
  4072c4:	ret
  4072c8:	sub	sp, sp, #0x60
  4072cc:	stp	x20, x19, [sp, #80]
  4072d0:	cmp	w1, #0x2
  4072d4:	mov	x20, x2
  4072d8:	stp	x29, x30, [sp, #48]
  4072dc:	str	x21, [sp, #64]
  4072e0:	add	x29, sp, #0x30
  4072e4:	b.lt	4072f4 <ferror@plt+0x47a4>  // b.tstop
  4072e8:	ldr	x8, [x20, #8]
  4072ec:	ldr	x19, [x8, #8]
  4072f0:	b	4072fc <ferror@plt+0x47ac>
  4072f4:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4072f8:	add	x19, x19, #0x67f
  4072fc:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407300:	add	x8, x8, #0x200
  407304:	ldp	q0, q1, [x8]
  407308:	cmp	w1, #0x1
  40730c:	stp	q0, q1, [sp, #16]
  407310:	ldr	x8, [x20]
  407314:	b.gt	407344 <ferror@plt+0x47f4>
  407318:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40731c:	ldr	w9, [x9, #1188]
  407320:	cbnz	w9, 4073e0 <ferror@plt+0x4890>
  407324:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407328:	ldr	w0, [x9, #1192]
  40732c:	ldr	x3, [x8, #8]
  407330:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407334:	add	x2, x2, #0x441
  407338:	mov	w1, wzr
  40733c:	bl	402c5c <ferror@plt+0x10c>
  407340:	b	4073e0 <ferror@plt+0x4890>
  407344:	cmp	w1, #0x2
  407348:	b.eq	407374 <ferror@plt+0x4824>  // b.none
  40734c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407350:	ldr	w9, [x9, #1188]
  407354:	cbnz	w9, 407374 <ferror@plt+0x4824>
  407358:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40735c:	ldr	w0, [x9, #1192]
  407360:	ldr	x3, [x8, #8]
  407364:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407368:	add	x2, x2, #0x46c
  40736c:	mov	w1, wzr
  407370:	bl	402c5c <ferror@plt+0x10c>
  407374:	ldrb	w8, [x19]
  407378:	cbz	w8, 4073e0 <ferror@plt+0x4890>
  40737c:	bl	408b08 <ferror@plt+0x5fb8>
  407380:	str	x19, [sp, #32]
  407384:	bl	402ac0 <__errno_location@plt>
  407388:	str	wzr, [x0]
  40738c:	ldr	x8, [x20]
  407390:	mov	x21, x0
  407394:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407398:	add	x1, x1, #0x6f3
  40739c:	ldr	x0, [x8, #8]
  4073a0:	add	x8, x29, #0x1c
  4073a4:	add	x2, sp, #0x10
  4073a8:	mov	w7, #0x1                   	// #1
  4073ac:	mov	w3, wzr
  4073b0:	mov	w4, wzr
  4073b4:	mov	w5, wzr
  4073b8:	mov	w6, wzr
  4073bc:	str	x8, [sp, #8]
  4073c0:	strb	wzr, [sp]
  4073c4:	bl	4124fc <ferror@plt+0xf9ac>
  4073c8:	ldr	w8, [x29, #28]
  4073cc:	cbz	w8, 407400 <ferror@plt+0x48b0>
  4073d0:	cmp	w0, #0x7f
  4073d4:	b.ne	407430 <ferror@plt+0x48e0>  // b.any
  4073d8:	lsl	w0, w8, #8
  4073dc:	b	4073e4 <ferror@plt+0x4894>
  4073e0:	mov	w0, wzr
  4073e4:	ldp	x20, x19, [sp, #80]
  4073e8:	ldr	x21, [sp, #64]
  4073ec:	ldp	x29, x30, [sp, #48]
  4073f0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4073f4:	str	w0, [x8, #2080]
  4073f8:	add	sp, sp, #0x60
  4073fc:	ret
  407400:	cmp	w0, #0x7f
  407404:	b.ne	4073e4 <ferror@plt+0x4894>  // b.any
  407408:	ldr	w1, [x21]
  40740c:	cbz	w1, 407428 <ferror@plt+0x48d8>
  407410:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407414:	ldr	w0, [x8, #1192]
  407418:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40741c:	add	x2, x2, #0x6fb
  407420:	mov	x3, x19
  407424:	bl	402c5c <ferror@plt+0x10c>
  407428:	mov	w0, #0x7f                  	// #127
  40742c:	b	4073e4 <ferror@plt+0x4894>
  407430:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407434:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407438:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40743c:	add	x0, x0, #0x724
  407440:	add	x1, x1, #0x605
  407444:	add	x3, x3, #0x8e1
  407448:	mov	w2, #0x3cf                 	// #975
  40744c:	bl	402ab0 <__assert_fail@plt>
  407450:	stp	x29, x30, [sp, #-48]!
  407454:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407458:	ldr	w8, [x8, #2080]
  40745c:	stp	x20, x19, [sp, #32]
  407460:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407464:	mov	w9, #0xcccd                	// #52429
  407468:	cmp	w8, #0x0
  40746c:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407470:	mov	x19, x0
  407474:	add	x20, x20, #0x81e
  407478:	movk	w9, #0xcccc, lsl #16
  40747c:	mov	w10, #0xa                   	// #10
  407480:	cneg	w12, w8, mi  // mi = first
  407484:	add	x11, x11, #0x2be
  407488:	str	x21, [sp, #16]
  40748c:	mov	x29, sp
  407490:	strb	wzr, [x20, #1]
  407494:	umull	x13, w12, w9
  407498:	lsr	x13, x13, #35
  40749c:	msub	w14, w13, w10, w12
  4074a0:	ldrb	w14, [x11, w14, uxtw]
  4074a4:	cmp	w12, #0x9
  4074a8:	mov	w12, w13
  4074ac:	strb	w14, [x20], #-1
  4074b0:	b.hi	407494 <ferror@plt+0x4944>  // b.pmore
  4074b4:	tbnz	w8, #31, 4074c0 <ferror@plt+0x4970>
  4074b8:	add	x20, x20, #0x1
  4074bc:	b	4074c8 <ferror@plt+0x4978>
  4074c0:	mov	w8, #0x2d                  	// #45
  4074c4:	strb	w8, [x20]
  4074c8:	mov	x0, x20
  4074cc:	bl	4024f0 <strlen@plt>
  4074d0:	mov	x21, x0
  4074d4:	ldp	x0, x8, [x19, #24]
  4074d8:	sub	x8, x8, x0
  4074dc:	cmp	x8, x21
  4074e0:	b.cs	4074f4 <ferror@plt+0x49a4>  // b.hs, b.nlast
  4074e4:	mov	x0, x19
  4074e8:	mov	x1, x21
  4074ec:	bl	418058 <_obstack_newchunk@@Base>
  4074f0:	ldr	x0, [x19, #24]
  4074f4:	mov	x1, x20
  4074f8:	mov	x2, x21
  4074fc:	bl	4024c0 <memcpy@plt>
  407500:	ldr	x8, [x19, #24]
  407504:	add	x8, x8, x21
  407508:	str	x8, [x19, #24]
  40750c:	ldp	x20, x19, [sp, #32]
  407510:	ldr	x21, [sp, #16]
  407514:	ldp	x29, x30, [sp], #48
  407518:	ret
  40751c:	cmp	w1, #0x1
  407520:	b.ne	407534 <ferror@plt+0x49e4>  // b.any
  407524:	adrp	x0, 408000 <ferror@plt+0x54b0>
  407528:	add	x0, x0, #0x66c
  40752c:	mov	x1, xzr
  407530:	b	4108d0 <ferror@plt+0xdd80>
  407534:	stp	x29, x30, [sp, #-32]!
  407538:	cmp	w1, #0x2
  40753c:	stp	x20, x19, [sp, #16]
  407540:	mov	x29, sp
  407544:	b.lt	40759c <ferror@plt+0x4a4c>  // b.tstop
  407548:	mov	w8, w1
  40754c:	add	x19, x2, #0x8
  407550:	sub	x20, x8, #0x1
  407554:	b	407564 <ferror@plt+0x4a14>
  407558:	subs	x20, x20, #0x1
  40755c:	add	x19, x19, #0x8
  407560:	b.eq	40759c <ferror@plt+0x4a4c>  // b.none
  407564:	ldr	x8, [x19]
  407568:	mov	w1, wzr
  40756c:	ldr	x0, [x8, #8]
  407570:	bl	41059c <ferror@plt+0xda4c>
  407574:	cbz	x0, 407558 <ferror@plt+0x4a08>
  407578:	ldrb	w8, [x0, #8]
  40757c:	ldr	w9, [x0, #24]
  407580:	and	w8, w8, #0xfe
  407584:	strb	w8, [x0, #8]
  407588:	cbnz	w9, 407558 <ferror@plt+0x4a08>
  40758c:	ldr	x0, [x0, #16]
  407590:	mov	w1, #0x4                   	// #4
  407594:	bl	41059c <ferror@plt+0xda4c>
  407598:	b	407558 <ferror@plt+0x4a08>
  40759c:	ldp	x20, x19, [sp, #16]
  4075a0:	ldp	x29, x30, [sp], #32
  4075a4:	ret
  4075a8:	stp	x29, x30, [sp, #-48]!
  4075ac:	stp	x20, x19, [sp, #32]
  4075b0:	cmp	w1, #0x1
  4075b4:	mov	x19, x0
  4075b8:	stp	x22, x21, [sp, #16]
  4075bc:	mov	x29, sp
  4075c0:	b.ne	4075e0 <ferror@plt+0x4a90>  // b.any
  4075c4:	mov	x1, x19
  4075c8:	ldp	x20, x19, [sp, #32]
  4075cc:	ldp	x22, x21, [sp, #16]
  4075d0:	adrp	x0, 408000 <ferror@plt+0x54b0>
  4075d4:	add	x0, x0, #0x66c
  4075d8:	ldp	x29, x30, [sp], #48
  4075dc:	b	4108d0 <ferror@plt+0xdd80>
  4075e0:	cmp	w1, #0x2
  4075e4:	b.lt	40765c <ferror@plt+0x4b0c>  // b.tstop
  4075e8:	cmp	x19, #0x0
  4075ec:	mov	w8, w1
  4075f0:	add	x20, x2, #0x8
  4075f4:	cset	w21, ne  // ne = any
  4075f8:	sub	x22, x8, #0x1
  4075fc:	b	40760c <ferror@plt+0x4abc>
  407600:	subs	x22, x22, #0x1
  407604:	add	x20, x20, #0x8
  407608:	b.eq	40765c <ferror@plt+0x4b0c>  // b.none
  40760c:	ldr	x8, [x20]
  407610:	mov	w1, wzr
  407614:	ldr	x0, [x8, #8]
  407618:	bl	41059c <ferror@plt+0xda4c>
  40761c:	cbnz	x0, 407630 <ferror@plt+0x4ae0>
  407620:	ldr	x8, [x20]
  407624:	mov	w1, #0x1                   	// #1
  407628:	ldr	x0, [x8, #8]
  40762c:	bl	41059c <ferror@plt+0xda4c>
  407630:	ldrb	w8, [x0, #8]
  407634:	and	w8, w8, #0xfe
  407638:	orr	w8, w8, w21
  40763c:	strb	w8, [x0, #8]
  407640:	cbnz	x19, 407600 <ferror@plt+0x4ab0>
  407644:	ldr	w8, [x0, #24]
  407648:	cbnz	w8, 407600 <ferror@plt+0x4ab0>
  40764c:	ldr	x0, [x0, #16]
  407650:	mov	w1, #0x4                   	// #4
  407654:	bl	41059c <ferror@plt+0xda4c>
  407658:	b	407600 <ferror@plt+0x4ab0>
  40765c:	ldp	x20, x19, [sp, #32]
  407660:	ldp	x22, x21, [sp, #16]
  407664:	ldp	x29, x30, [sp], #48
  407668:	ret
  40766c:	stp	x29, x30, [sp, #-80]!
  407670:	stp	x28, x25, [sp, #16]
  407674:	stp	x24, x23, [sp, #32]
  407678:	stp	x22, x21, [sp, #48]
  40767c:	stp	x20, x19, [sp, #64]
  407680:	mov	x29, sp
  407684:	sub	sp, sp, #0x200
  407688:	mov	x24, x2
  40768c:	mov	w23, w1
  407690:	cmp	w1, #0x2
  407694:	mov	x19, x0
  407698:	b.lt	4076b8 <ferror@plt+0x4b68>  // b.tstop
  40769c:	ldr	x8, [x24, #8]
  4076a0:	cmp	w23, #0x2
  4076a4:	ldr	x22, [x8, #8]
  4076a8:	b.ne	4076c8 <ferror@plt+0x4b78>  // b.any
  4076ac:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4076b0:	add	x20, x20, #0x67f
  4076b4:	b	4076d0 <ferror@plt+0x4b80>
  4076b8:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4076bc:	add	x22, x22, #0x67f
  4076c0:	mov	x20, x22
  4076c4:	b	4076d0 <ferror@plt+0x4b80>
  4076c8:	ldr	x8, [x24, #16]
  4076cc:	ldr	x20, [x8, #8]
  4076d0:	ldr	x8, [x24]
  4076d4:	cmp	w23, #0x2
  4076d8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4076dc:	b.gt	407708 <ferror@plt+0x4bb8>
  4076e0:	ldr	w9, [x9, #1188]
  4076e4:	cbnz	w9, 407758 <ferror@plt+0x4c08>
  4076e8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4076ec:	ldr	w0, [x9, #1192]
  4076f0:	ldr	x3, [x8, #8]
  4076f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4076f8:	add	x2, x2, #0x441
  4076fc:	mov	w1, wzr
  407700:	bl	402c5c <ferror@plt+0x10c>
  407704:	b	407758 <ferror@plt+0x4c08>
  407708:	cmp	w23, #0x5
  40770c:	b.lt	407734 <ferror@plt+0x4be4>  // b.tstop
  407710:	ldr	w9, [x9, #1188]
  407714:	cbnz	w9, 407734 <ferror@plt+0x4be4>
  407718:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40771c:	ldr	w0, [x9, #1192]
  407720:	ldr	x3, [x8, #8]
  407724:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407728:	add	x2, x2, #0x46c
  40772c:	mov	w1, wzr
  407730:	bl	402c5c <ferror@plt+0x10c>
  407734:	ldrb	w8, [x22]
  407738:	cbz	w8, 407758 <ferror@plt+0x4c08>
  40773c:	ldrb	w8, [x20]
  407740:	cbz	w8, 407758 <ferror@plt+0x4c08>
  407744:	cmp	w23, #0x4
  407748:	b.lt	4077c0 <ferror@plt+0x4c70>  // b.tstop
  40774c:	ldr	x8, [x24, #24]
  407750:	ldr	x21, [x8, #8]
  407754:	b	4077c8 <ferror@plt+0x4c78>
  407758:	cmp	w23, #0x2
  40775c:	b.lt	4077a4 <ferror@plt+0x4c54>  // b.tstop
  407760:	mov	x0, x22
  407764:	bl	4024f0 <strlen@plt>
  407768:	mov	x20, x0
  40776c:	ldp	x0, x8, [x19, #24]
  407770:	sub	x8, x8, x0
  407774:	cmp	x8, x20
  407778:	b.cs	40778c <ferror@plt+0x4c3c>  // b.hs, b.nlast
  40777c:	mov	x0, x19
  407780:	mov	x1, x20
  407784:	bl	418058 <_obstack_newchunk@@Base>
  407788:	ldr	x0, [x19, #24]
  40778c:	mov	x1, x22
  407790:	mov	x2, x20
  407794:	bl	4024c0 <memcpy@plt>
  407798:	ldr	x8, [x19, #24]
  40779c:	add	x8, x8, x20
  4077a0:	str	x8, [x19, #24]
  4077a4:	add	sp, sp, #0x200
  4077a8:	ldp	x20, x19, [sp, #64]
  4077ac:	ldp	x22, x21, [sp, #48]
  4077b0:	ldp	x24, x23, [sp, #32]
  4077b4:	ldp	x28, x25, [sp, #16]
  4077b8:	ldp	x29, x30, [sp], #80
  4077bc:	ret
  4077c0:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4077c4:	add	x21, x21, #0x67f
  4077c8:	mov	w1, #0x2d                  	// #45
  4077cc:	mov	x0, x21
  4077d0:	bl	402990 <strchr@plt>
  4077d4:	cbz	x0, 4077f4 <ferror@plt+0x4ca4>
  4077d8:	mov	x0, x21
  4077dc:	mov	x1, x19
  4077e0:	bl	4086a0 <ferror@plt+0x5b50>
  4077e4:	cbz	x0, 407b04 <ferror@plt+0x4fb4>
  4077e8:	ldrb	w8, [x0]
  4077ec:	mov	x21, x0
  4077f0:	cbz	w8, 407b04 <ferror@plt+0x4fb4>
  4077f4:	ldrb	w25, [x20, #1]
  4077f8:	cbz	w25, 407878 <ferror@plt+0x4d28>
  4077fc:	ldrb	w8, [x20, #2]
  407800:	cbz	w8, 407878 <ferror@plt+0x4d28>
  407804:	mov	w1, #0x2d                  	// #45
  407808:	mov	x0, x20
  40780c:	bl	402990 <strchr@plt>
  407810:	cbz	x0, 4079c8 <ferror@plt+0x4e78>
  407814:	mov	x0, x20
  407818:	mov	x1, x19
  40781c:	bl	4086a0 <ferror@plt+0x5b50>
  407820:	cbz	x0, 407b24 <ferror@plt+0x4fd4>
  407824:	ldrb	w8, [x0]
  407828:	mov	x20, x0
  40782c:	cbz	w8, 407b24 <ferror@plt+0x4fd4>
  407830:	movi	v0.2d, #0x0
  407834:	stp	q0, q0, [sp, #480]
  407838:	stp	q0, q0, [sp, #448]
  40783c:	stp	q0, q0, [sp, #416]
  407840:	stp	q0, q0, [sp, #384]
  407844:	stp	q0, q0, [sp, #352]
  407848:	stp	q0, q0, [sp, #320]
  40784c:	stp	q0, q0, [sp, #288]
  407850:	stp	q0, q0, [sp, #256]
  407854:	stp	q0, q0, [sp]
  407858:	stp	q0, q0, [sp, #32]
  40785c:	stp	q0, q0, [sp, #64]
  407860:	stp	q0, q0, [sp, #96]
  407864:	stp	q0, q0, [sp, #128]
  407868:	stp	q0, q0, [sp, #160]
  40786c:	stp	q0, q0, [sp, #192]
  407870:	stp	q0, q0, [sp, #224]
  407874:	b	407a14 <ferror@plt+0x4ec4>
  407878:	mov	x0, x22
  40787c:	bl	4024f0 <strlen@plt>
  407880:	ldrb	w1, [x20]
  407884:	mov	x23, x0
  407888:	mov	x0, x22
  40788c:	mov	w2, w25
  407890:	mov	x3, x23
  407894:	bl	4145d0 <ferror@plt+0x11a80>
  407898:	cbz	x0, 407990 <ferror@plt+0x4e40>
  40789c:	mov	x24, x0
  4078a0:	b	4078d0 <ferror@plt+0x4d80>
  4078a4:	ldr	x8, [x19, #24]
  4078a8:	add	x10, x8, #0x1
  4078ac:	str	x10, [x19, #24]
  4078b0:	strb	w9, [x8]
  4078b4:	ldrb	w1, [x20]
  4078b8:	ldrb	w2, [x20, #1]
  4078bc:	mov	x0, x22
  4078c0:	mov	x3, x23
  4078c4:	bl	4145d0 <ferror@plt+0x11a80>
  4078c8:	mov	x24, x0
  4078cc:	cbz	x0, 407990 <ferror@plt+0x4e40>
  4078d0:	ldp	x0, x8, [x19, #24]
  4078d4:	sub	x25, x24, x22
  4078d8:	sub	x8, x8, x0
  4078dc:	cmp	x8, x25
  4078e0:	b.cs	4078f4 <ferror@plt+0x4da4>  // b.hs, b.nlast
  4078e4:	mov	x0, x19
  4078e8:	mov	x1, x25
  4078ec:	bl	418058 <_obstack_newchunk@@Base>
  4078f0:	ldr	x0, [x19, #24]
  4078f4:	mov	x1, x22
  4078f8:	mov	x2, x25
  4078fc:	bl	4024c0 <memcpy@plt>
  407900:	ldr	x8, [x19, #24]
  407904:	subs	x9, x23, x25
  407908:	add	x8, x8, x25
  40790c:	str	x8, [x19, #24]
  407910:	b.eq	4077a4 <ferror@plt+0x4c54>  // b.none
  407914:	ldrb	w10, [x24], #1
  407918:	ldrb	w11, [x20]
  40791c:	sub	x23, x9, #0x1
  407920:	mov	x22, x24
  407924:	cmp	w10, w11
  407928:	b.ne	407954 <ferror@plt+0x4e04>  // b.any
  40792c:	ldrb	w9, [x21]
  407930:	cbz	w9, 407954 <ferror@plt+0x4e04>
  407934:	ldr	x10, [x19, #32]
  407938:	cmp	x10, x8
  40793c:	b.ne	4078a8 <ferror@plt+0x4d58>  // b.any
  407940:	mov	w1, #0x1                   	// #1
  407944:	mov	x0, x19
  407948:	bl	418058 <_obstack_newchunk@@Base>
  40794c:	ldrb	w9, [x21]
  407950:	b	4078a4 <ferror@plt+0x4d54>
  407954:	ldrb	w9, [x20, #1]
  407958:	cmp	w10, w9
  40795c:	b.ne	4078b4 <ferror@plt+0x4d64>  // b.any
  407960:	ldrb	w9, [x21]
  407964:	cbz	w9, 4078b4 <ferror@plt+0x4d64>
  407968:	ldrb	w9, [x21, #1]
  40796c:	cbz	w9, 4078b4 <ferror@plt+0x4d64>
  407970:	ldr	x10, [x19, #32]
  407974:	cmp	x10, x8
  407978:	b.ne	4078a8 <ferror@plt+0x4d58>  // b.any
  40797c:	mov	w1, #0x1                   	// #1
  407980:	mov	x0, x19
  407984:	bl	418058 <_obstack_newchunk@@Base>
  407988:	ldrb	w9, [x21, #1]
  40798c:	b	4078a4 <ferror@plt+0x4d54>
  407990:	ldp	x0, x8, [x19, #24]
  407994:	sub	x8, x8, x0
  407998:	cmp	x8, x23
  40799c:	b.cs	4079b0 <ferror@plt+0x4e60>  // b.hs, b.nlast
  4079a0:	mov	x0, x19
  4079a4:	mov	x1, x23
  4079a8:	bl	418058 <_obstack_newchunk@@Base>
  4079ac:	ldr	x0, [x19, #24]
  4079b0:	mov	x1, x22
  4079b4:	mov	x2, x23
  4079b8:	bl	4024c0 <memcpy@plt>
  4079bc:	ldr	x8, [x19, #24]
  4079c0:	add	x8, x8, x23
  4079c4:	b	4077a0 <ferror@plt+0x4c50>
  4079c8:	ldrb	w8, [x20]
  4079cc:	movi	v0.2d, #0x0
  4079d0:	stp	q0, q0, [sp, #480]
  4079d4:	stp	q0, q0, [sp, #448]
  4079d8:	stp	q0, q0, [sp, #416]
  4079dc:	stp	q0, q0, [sp, #384]
  4079e0:	stp	q0, q0, [sp, #352]
  4079e4:	stp	q0, q0, [sp, #320]
  4079e8:	stp	q0, q0, [sp, #288]
  4079ec:	stp	q0, q0, [sp, #256]
  4079f0:	stp	q0, q0, [sp]
  4079f4:	stp	q0, q0, [sp, #32]
  4079f8:	stp	q0, q0, [sp, #64]
  4079fc:	stp	q0, q0, [sp, #96]
  407a00:	stp	q0, q0, [sp, #128]
  407a04:	stp	q0, q0, [sp, #160]
  407a08:	stp	q0, q0, [sp, #192]
  407a0c:	stp	q0, q0, [sp, #224]
  407a10:	cbz	w8, 407a5c <ferror@plt+0x4f0c>
  407a14:	add	x9, x20, #0x1
  407a18:	mov	x10, sp
  407a1c:	mov	w11, #0x1                   	// #1
  407a20:	add	x12, sp, #0x100
  407a24:	b	407a40 <ferror@plt+0x4ef0>
  407a28:	mov	x13, x21
  407a2c:	ldrb	w14, [x13], #1
  407a30:	ldrb	w8, [x9], #1
  407a34:	cmp	w14, #0x0
  407a38:	csel	x21, x21, x13, eq  // eq = none
  407a3c:	cbz	w8, 407a5c <ferror@plt+0x4f0c>
  407a40:	and	x8, x8, #0xff
  407a44:	ldrb	w13, [x10, x8]
  407a48:	cbnz	w13, 407a28 <ferror@plt+0x4ed8>
  407a4c:	strb	w11, [x10, x8]
  407a50:	ldrb	w13, [x21]
  407a54:	strb	w13, [x12, x8]
  407a58:	b	407a28 <ferror@plt+0x4ed8>
  407a5c:	cmp	w23, #0x2
  407a60:	b.lt	407a70 <ferror@plt+0x4f20>  // b.tstop
  407a64:	ldr	x8, [x24, #8]
  407a68:	ldr	x8, [x8, #8]
  407a6c:	b	407a78 <ferror@plt+0x4f28>
  407a70:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407a74:	add	x8, x8, #0x67f
  407a78:	ldrb	w23, [x8]
  407a7c:	cbz	w23, 4077a4 <ferror@plt+0x4c54>
  407a80:	add	x20, x8, #0x1
  407a84:	mov	x21, sp
  407a88:	add	x22, sp, #0x100
  407a8c:	b	407aa4 <ferror@plt+0x4f54>
  407a90:	add	x9, x8, #0x1
  407a94:	str	x9, [x19, #24]
  407a98:	strb	w23, [x8]
  407a9c:	ldrb	w23, [x20], #1
  407aa0:	cbz	w23, 4077a4 <ferror@plt+0x4c54>
  407aa4:	and	x8, x23, #0xff
  407aa8:	ldrb	w9, [x21, x8]
  407aac:	cbz	w9, 407ad8 <ferror@plt+0x4f88>
  407ab0:	ldrb	w23, [x22, x8]
  407ab4:	cbz	w23, 407a9c <ferror@plt+0x4f4c>
  407ab8:	ldp	x8, x9, [x19, #24]
  407abc:	cmp	x9, x8
  407ac0:	b.ne	407a90 <ferror@plt+0x4f40>  // b.any
  407ac4:	mov	w1, #0x1                   	// #1
  407ac8:	mov	x0, x19
  407acc:	bl	418058 <_obstack_newchunk@@Base>
  407ad0:	ldr	x8, [x19, #24]
  407ad4:	b	407a90 <ferror@plt+0x4f40>
  407ad8:	ldp	x8, x9, [x19, #24]
  407adc:	cmp	x9, x8
  407ae0:	b.ne	407af4 <ferror@plt+0x4fa4>  // b.any
  407ae4:	mov	w1, #0x1                   	// #1
  407ae8:	mov	x0, x19
  407aec:	bl	418058 <_obstack_newchunk@@Base>
  407af0:	ldr	x8, [x19, #24]
  407af4:	add	x9, x8, #0x1
  407af8:	str	x9, [x19, #24]
  407afc:	strb	w23, [x8]
  407b00:	b	407a9c <ferror@plt+0x4f4c>
  407b04:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b08:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b0c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b10:	add	x0, x0, #0x916
  407b14:	add	x1, x1, #0x605
  407b18:	add	x3, x3, #0x920
  407b1c:	mov	w2, #0x752                 	// #1874
  407b20:	bl	402ab0 <__assert_fail@plt>
  407b24:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b28:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b2c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b30:	add	x0, x0, #0x957
  407b34:	add	x1, x1, #0x605
  407b38:	add	x3, x3, #0x920
  407b3c:	mov	w2, #0x770                 	// #1904
  407b40:	bl	402ab0 <__assert_fail@plt>
  407b44:	stp	x29, x30, [sp, #-32]!
  407b48:	cmp	w1, #0x2
  407b4c:	stp	x20, x19, [sp, #16]
  407b50:	mov	x29, sp
  407b54:	b.ge	407b8c <ferror@plt+0x503c>  // b.tcont
  407b58:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407b5c:	ldr	w8, [x8, #1188]
  407b60:	cbnz	w8, 407bb0 <ferror@plt+0x5060>
  407b64:	ldr	x8, [x2]
  407b68:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407b6c:	ldr	w0, [x9, #1192]
  407b70:	ldp	x20, x19, [sp, #16]
  407b74:	ldr	x3, [x8, #8]
  407b78:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407b7c:	add	x2, x2, #0x441
  407b80:	mov	w1, wzr
  407b84:	ldp	x29, x30, [sp], #32
  407b88:	b	402c5c <ferror@plt+0x10c>
  407b8c:	mov	w8, w1
  407b90:	add	x19, x2, #0x8
  407b94:	sub	x20, x8, #0x1
  407b98:	ldr	x8, [x19], #8
  407b9c:	mov	w1, #0x2                   	// #2
  407ba0:	ldr	x0, [x8, #8]
  407ba4:	bl	41059c <ferror@plt+0xda4c>
  407ba8:	subs	x20, x20, #0x1
  407bac:	b.ne	407b98 <ferror@plt+0x5048>  // b.any
  407bb0:	ldp	x20, x19, [sp, #16]
  407bb4:	ldp	x29, x30, [sp], #32
  407bb8:	ret
  407bbc:	stp	x29, x30, [sp, #-96]!
  407bc0:	cmp	w1, #0x1
  407bc4:	str	x27, [sp, #16]
  407bc8:	stp	x26, x25, [sp, #32]
  407bcc:	stp	x24, x23, [sp, #48]
  407bd0:	stp	x22, x21, [sp, #64]
  407bd4:	stp	x20, x19, [sp, #80]
  407bd8:	mov	x29, sp
  407bdc:	b.ne	407be8 <ferror@plt+0x5098>  // b.any
  407be0:	bl	40fbf8 <ferror@plt+0xd0a8>
  407be4:	b	407cfc <ferror@plt+0x51ac>
  407be8:	cmp	w1, #0x2
  407bec:	b.lt	407cfc <ferror@plt+0x51ac>  // b.tstop
  407bf0:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407bf4:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407bf8:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407bfc:	mov	x19, x2
  407c00:	mov	w24, w1
  407c04:	mov	w25, #0x1                   	// #1
  407c08:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407c0c:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407c10:	add	x20, x20, #0x97c
  407c14:	add	x21, x21, #0x965
  407c18:	add	x22, x22, #0x554
  407c1c:	b	407c44 <ferror@plt+0x50f4>
  407c20:	ldr	x8, [x19]
  407c24:	ldr	w0, [x27, #1192]
  407c28:	mov	w1, wzr
  407c2c:	mov	x2, x22
  407c30:	ldr	x3, [x8, #8]
  407c34:	bl	402c5c <ferror@plt+0x10c>
  407c38:	add	x25, x25, #0x1
  407c3c:	cmp	x24, x25
  407c40:	b.eq	407cfc <ferror@plt+0x51ac>  // b.none
  407c44:	ldr	x8, [x19, x25, lsl #3]
  407c48:	add	x1, x29, #0x18
  407c4c:	mov	w2, #0xa                   	// #10
  407c50:	ldr	x0, [x8, #8]
  407c54:	bl	402900 <strtol@plt>
  407c58:	ldr	x8, [x29, #24]
  407c5c:	ldrb	w8, [x8]
  407c60:	cbnz	w8, 407c90 <ferror@plt+0x5140>
  407c64:	mov	x23, x0
  407c68:	bl	4028e0 <__ctype_b_loc@plt>
  407c6c:	ldr	x8, [x19, x25, lsl #3]
  407c70:	ldr	x9, [x0]
  407c74:	ldr	x8, [x8, #8]
  407c78:	ldrb	w8, [x8]
  407c7c:	ldrh	w8, [x9, x8, lsl #1]
  407c80:	tbnz	w8, #13, 407c90 <ferror@plt+0x5140>
  407c84:	mov	w0, w23
  407c88:	bl	40f754 <ferror@plt+0xcc04>
  407c8c:	b	407c38 <ferror@plt+0x50e8>
  407c90:	ldr	w8, [x26, #1176]
  407c94:	cbnz	w8, 407c20 <ferror@plt+0x50d0>
  407c98:	ldr	x8, [x19, x25, lsl #3]
  407c9c:	mov	x1, xzr
  407ca0:	ldr	x0, [x8, #8]
  407ca4:	bl	4102b0 <ferror@plt+0xd760>
  407ca8:	cbz	x0, 407ce0 <ferror@plt+0x5190>
  407cac:	mov	x23, x0
  407cb0:	bl	40f6c8 <ferror@plt+0xcb78>
  407cb4:	mov	x0, x23
  407cb8:	bl	417b18 <ferror@plt+0x14fc8>
  407cbc:	cmn	w0, #0x1
  407cc0:	b.ne	407c38 <ferror@plt+0x50e8>  // b.any
  407cc4:	ldr	w23, [x27, #1192]
  407cc8:	bl	402ac0 <__errno_location@plt>
  407ccc:	ldr	x8, [x19, x25, lsl #3]
  407cd0:	ldr	w1, [x0]
  407cd4:	mov	w0, w23
  407cd8:	mov	x2, x21
  407cdc:	b	407c30 <ferror@plt+0x50e0>
  407ce0:	ldr	w23, [x27, #1192]
  407ce4:	bl	402ac0 <__errno_location@plt>
  407ce8:	ldr	x8, [x19, x25, lsl #3]
  407cec:	ldr	w1, [x0]
  407cf0:	mov	w0, w23
  407cf4:	mov	x2, x20
  407cf8:	b	407c30 <ferror@plt+0x50e0>
  407cfc:	ldp	x20, x19, [sp, #80]
  407d00:	ldp	x22, x21, [sp, #64]
  407d04:	ldp	x24, x23, [sp, #48]
  407d08:	ldp	x26, x25, [sp, #32]
  407d0c:	ldr	x27, [sp, #16]
  407d10:	ldp	x29, x30, [sp], #96
  407d14:	ret
  407d18:	sub	sp, sp, #0x40
  407d1c:	stp	x29, x30, [sp, #16]
  407d20:	stp	x22, x21, [sp, #32]
  407d24:	stp	x20, x19, [sp, #48]
  407d28:	ldrb	w8, [x1]
  407d2c:	mov	x22, x2
  407d30:	mov	x19, x0
  407d34:	add	x29, sp, #0x10
  407d38:	cbz	w8, 407d7c <ferror@plt+0x522c>
  407d3c:	mov	x20, x1
  407d40:	bl	402ac0 <__errno_location@plt>
  407d44:	mov	x21, x0
  407d48:	str	wzr, [x0]
  407d4c:	add	x1, sp, #0x8
  407d50:	mov	w2, #0xa                   	// #10
  407d54:	mov	x0, x20
  407d58:	bl	402900 <strtol@plt>
  407d5c:	str	w0, [x22]
  407d60:	ldr	x8, [sp, #8]
  407d64:	ldrb	w8, [x8]
  407d68:	cbz	w8, 407d90 <ferror@plt+0x5240>
  407d6c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407d70:	mov	w20, wzr
  407d74:	add	x2, x2, #0x554
  407d78:	b	407dcc <ferror@plt+0x527c>
  407d7c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407d80:	str	wzr, [x22]
  407d84:	mov	w20, #0x1                   	// #1
  407d88:	add	x2, x2, #0x52a
  407d8c:	b	407dcc <ferror@plt+0x527c>
  407d90:	bl	4028e0 <__ctype_b_loc@plt>
  407d94:	ldr	x8, [x0]
  407d98:	ldrb	w9, [x20]
  407d9c:	ldrh	w8, [x8, x9, lsl #1]
  407da0:	tbnz	w8, #13, 407dc0 <ferror@plt+0x5270>
  407da4:	ldr	w8, [x21]
  407da8:	mov	w20, #0x1                   	// #1
  407dac:	cmp	w8, #0x22
  407db0:	b.ne	407de0 <ferror@plt+0x5290>  // b.any
  407db4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407db8:	add	x2, x2, #0x5a4
  407dbc:	b	407dcc <ferror@plt+0x527c>
  407dc0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407dc4:	mov	w20, #0x1                   	// #1
  407dc8:	add	x2, x2, #0x579
  407dcc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407dd0:	ldr	w0, [x8, #1192]
  407dd4:	ldr	x3, [x19, #8]
  407dd8:	mov	w1, wzr
  407ddc:	bl	402c5c <ferror@plt+0x10c>
  407de0:	mov	w0, w20
  407de4:	ldp	x20, x19, [sp, #48]
  407de8:	ldp	x22, x21, [sp, #32]
  407dec:	ldp	x29, x30, [sp, #16]
  407df0:	add	sp, sp, #0x40
  407df4:	ret
  407df8:	stp	x29, x30, [sp, #-48]!
  407dfc:	stp	x20, x19, [sp, #32]
  407e00:	ldr	x8, [x1]
  407e04:	cmp	w0, #0x1
  407e08:	str	x21, [sp, #16]
  407e0c:	mov	x29, sp
  407e10:	b.gt	407e30 <ferror@plt+0x52e0>
  407e14:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407e18:	ldr	w9, [x9, #1188]
  407e1c:	cbz	w9, 407eb0 <ferror@plt+0x5360>
  407e20:	ldp	x20, x19, [sp, #32]
  407e24:	ldr	x21, [sp, #16]
  407e28:	ldp	x29, x30, [sp], #48
  407e2c:	ret
  407e30:	mov	x21, x1
  407e34:	mov	w20, w0
  407e38:	mov	w19, w2
  407e3c:	cmp	w0, #0x4
  407e40:	b.lt	407e6c <ferror@plt+0x531c>  // b.tstop
  407e44:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407e48:	ldr	w9, [x9, #1188]
  407e4c:	cbnz	w9, 407e6c <ferror@plt+0x531c>
  407e50:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407e54:	ldr	w0, [x9, #1192]
  407e58:	ldr	x3, [x8, #8]
  407e5c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407e60:	add	x2, x2, #0x46c
  407e64:	mov	w1, wzr
  407e68:	bl	402c5c <ferror@plt+0x10c>
  407e6c:	ldr	x8, [x21, #8]
  407e70:	ldr	w9, [x8]
  407e74:	cmp	w9, #0x1
  407e78:	b.ne	407e94 <ferror@plt+0x5344>  // b.any
  407e7c:	cmp	w20, #0x2
  407e80:	b.ne	407ed8 <ferror@plt+0x5388>  // b.any
  407e84:	ldr	x0, [x8, #8]
  407e88:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407e8c:	add	x1, x1, #0x67f
  407e90:	b	407ef8 <ferror@plt+0x53a8>
  407e94:	ldr	x8, [x21]
  407e98:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407e9c:	ldr	w0, [x9, #1192]
  407ea0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407ea4:	ldr	x3, [x8, #8]
  407ea8:	add	x2, x2, #0x49e
  407eac:	b	407ec4 <ferror@plt+0x5374>
  407eb0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407eb4:	ldr	w0, [x9, #1192]
  407eb8:	ldr	x3, [x8, #8]
  407ebc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407ec0:	add	x2, x2, #0x441
  407ec4:	ldp	x20, x19, [sp, #32]
  407ec8:	ldr	x21, [sp, #16]
  407ecc:	mov	w1, wzr
  407ed0:	ldp	x29, x30, [sp], #48
  407ed4:	b	402c5c <ferror@plt+0x10c>
  407ed8:	ldr	x9, [x21, #16]
  407edc:	ldr	w10, [x9]
  407ee0:	cmp	w10, #0x2
  407ee4:	b.eq	407f0c <ferror@plt+0x53bc>  // b.none
  407ee8:	cmp	w10, #0x1
  407eec:	b.ne	407fa4 <ferror@plt+0x5454>  // b.any
  407ef0:	ldr	x0, [x8, #8]
  407ef4:	ldr	x1, [x9, #8]
  407ef8:	mov	w2, w19
  407efc:	ldp	x20, x19, [sp, #32]
  407f00:	ldr	x21, [sp, #16]
  407f04:	ldp	x29, x30, [sp], #48
  407f08:	b	4038d0 <ferror@plt+0xd80>
  407f0c:	ldr	x9, [x9, #8]
  407f10:	adrp	x21, 419000 <_obstack_memory_used@@Base+0xd94>
  407f14:	add	x21, x21, #0xdb0
  407f18:	ldr	x10, [x21, #16]
  407f1c:	cmp	x10, x9
  407f20:	b.eq	407f44 <ferror@plt+0x53f4>  // b.none
  407f24:	ldr	x10, [x21, #24]!
  407f28:	cbnz	x10, 407f18 <ferror@plt+0x53c8>
  407f2c:	adrp	x10, 403000 <ferror@plt+0x4b0>
  407f30:	add	x10, x10, #0x714
  407f34:	cmp	x9, x10
  407f38:	b.ne	407e20 <ferror@plt+0x52d0>  // b.any
  407f3c:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407f40:	add	x21, x21, #0x1e8
  407f44:	cmp	w20, #0x2
  407f48:	b.lt	407f54 <ferror@plt+0x5404>  // b.tstop
  407f4c:	ldr	x0, [x8, #8]
  407f50:	b	407f5c <ferror@plt+0x540c>
  407f54:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407f58:	add	x0, x0, #0x67f
  407f5c:	mov	w1, w19
  407f60:	bl	41059c <ferror@plt+0xda4c>
  407f64:	mov	w8, #0x2                   	// #2
  407f68:	str	w8, [x0, #24]
  407f6c:	ldrb	w8, [x21, #8]
  407f70:	ldrb	w9, [x0, #8]
  407f74:	lsr	w8, w8, #1
  407f78:	bfi	w9, w8, #2, #1
  407f7c:	strb	w9, [x0, #8]
  407f80:	ldrb	w8, [x21, #8]
  407f84:	and	w9, w9, #0xfffffff7
  407f88:	lsl	w8, w8, #1
  407f8c:	and	w8, w8, #0x8
  407f90:	orr	w8, w8, w9
  407f94:	strb	w8, [x0, #8]
  407f98:	ldr	x8, [x21, #16]
  407f9c:	str	x8, [x0, #32]
  407fa0:	b	407e20 <ferror@plt+0x52d0>
  407fa4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  407fa8:	ldr	w0, [x8, #1192]
  407fac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  407fb0:	add	x2, x2, #0x5ce
  407fb4:	mov	w1, wzr
  407fb8:	bl	402c5c <ferror@plt+0x10c>
  407fbc:	bl	402860 <abort@plt>
  407fc0:	stp	x29, x30, [sp, #-48]!
  407fc4:	stp	x20, x19, [sp, #32]
  407fc8:	ldrb	w8, [x0, #8]
  407fcc:	str	x21, [sp, #16]
  407fd0:	mov	x29, sp
  407fd4:	tbnz	w8, #1, 408034 <ferror@plt+0x54e4>
  407fd8:	ldr	w8, [x0, #24]
  407fdc:	mov	x19, x0
  407fe0:	cbz	w8, 408034 <ferror@plt+0x54e4>
  407fe4:	ldr	x21, [x1]
  407fe8:	mov	x20, x1
  407fec:	ldp	x8, x9, [x21, #24]
  407ff0:	sub	x9, x9, x8
  407ff4:	cmp	x9, #0x7
  407ff8:	mov	x9, x21
  407ffc:	b.hi	408014 <ferror@plt+0x54c4>  // b.pmore
  408000:	mov	w1, #0x8                   	// #8
  408004:	mov	x0, x21
  408008:	bl	418058 <_obstack_newchunk@@Base>
  40800c:	ldr	x8, [x21, #24]
  408010:	ldr	x9, [x20]
  408014:	add	x8, x8, #0x8
  408018:	str	x8, [x21, #24]
  40801c:	ldr	x8, [x9, #16]
  408020:	ldrsw	x9, [x20, #16]
  408024:	str	x8, [x20, #8]
  408028:	add	w10, w9, #0x1
  40802c:	str	w10, [x20, #16]
  408030:	str	x19, [x8, x9, lsl #3]
  408034:	ldp	x20, x19, [sp, #32]
  408038:	ldr	x21, [sp, #16]
  40803c:	ldp	x29, x30, [sp], #48
  408040:	ret
  408044:	ldr	x8, [x0]
  408048:	ldr	x9, [x1]
  40804c:	ldr	x0, [x8, #16]
  408050:	ldr	x1, [x9, #16]
  408054:	b	4028d0 <strcmp@plt>
  408058:	sub	sp, sp, #0x30
  40805c:	stp	x29, x30, [sp, #16]
  408060:	stp	x20, x19, [sp, #32]
  408064:	ldr	x8, [x1]
  408068:	cmp	w0, #0x1
  40806c:	add	x29, sp, #0x10
  408070:	b.gt	4080a0 <ferror@plt+0x5550>
  408074:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408078:	ldr	w9, [x9, #1188]
  40807c:	cbnz	w9, 40813c <ferror@plt+0x55ec>
  408080:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408084:	ldr	w0, [x9, #1192]
  408088:	ldr	x3, [x8, #8]
  40808c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408090:	add	x2, x2, #0x441
  408094:	mov	w1, wzr
  408098:	bl	402c5c <ferror@plt+0x10c>
  40809c:	b	40813c <ferror@plt+0x55ec>
  4080a0:	mov	x19, x1
  4080a4:	mov	w20, w2
  4080a8:	cmp	w0, #0x2
  4080ac:	b.eq	4080d8 <ferror@plt+0x5588>  // b.none
  4080b0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4080b4:	ldr	w9, [x9, #1188]
  4080b8:	cbnz	w9, 4080d8 <ferror@plt+0x5588>
  4080bc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4080c0:	ldr	w0, [x9, #1192]
  4080c4:	ldr	x3, [x8, #8]
  4080c8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4080cc:	add	x2, x2, #0x46c
  4080d0:	mov	w1, wzr
  4080d4:	bl	402c5c <ferror@plt+0x10c>
  4080d8:	ldr	x8, [x19, #8]
  4080dc:	add	x1, sp, #0x8
  4080e0:	ldr	x0, [x8, #8]
  4080e4:	bl	4102b0 <ferror@plt+0xd760>
  4080e8:	cbz	x0, 408104 <ferror@plt+0x55b4>
  4080ec:	ldr	x1, [sp, #8]
  4080f0:	mov	w2, #0x1                   	// #1
  4080f4:	bl	40bbf0 <ferror@plt+0x90a0>
  4080f8:	ldr	x0, [sp, #8]
  4080fc:	bl	402930 <free@plt>
  408100:	b	40813c <ferror@plt+0x55ec>
  408104:	tbnz	w20, #0, 40813c <ferror@plt+0x55ec>
  408108:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40810c:	ldr	w20, [x8, #1192]
  408110:	bl	402ac0 <__errno_location@plt>
  408114:	ldr	x8, [x19, #8]
  408118:	ldr	w1, [x0]
  40811c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  408120:	add	x2, x2, #0xd9f
  408124:	ldr	x3, [x8, #8]
  408128:	mov	w0, w20
  40812c:	bl	402c5c <ferror@plt+0x10c>
  408130:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408134:	mov	w9, #0x1                   	// #1
  408138:	str	w9, [x8, #3488]
  40813c:	ldp	x20, x19, [sp, #32]
  408140:	ldp	x29, x30, [sp, #16]
  408144:	add	sp, sp, #0x30
  408148:	ret
  40814c:	stp	x29, x30, [sp, #-64]!
  408150:	stp	x24, x23, [sp, #16]
  408154:	stp	x22, x21, [sp, #32]
  408158:	stp	x20, x19, [sp, #48]
  40815c:	mov	x19, x0
  408160:	adrp	x24, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408164:	ldp	x0, x8, [x0, #24]
  408168:	ldr	x23, [x24, #3512]
  40816c:	mov	x22, x3
  408170:	mov	x20, x2
  408174:	sub	x8, x8, x0
  408178:	cmp	x8, x23
  40817c:	mov	x21, x1
  408180:	mov	x29, sp
  408184:	b.cs	408198 <ferror@plt+0x5648>  // b.hs, b.nlast
  408188:	mov	x0, x19
  40818c:	mov	x1, x23
  408190:	bl	418058 <_obstack_newchunk@@Base>
  408194:	ldr	x0, [x19, #24]
  408198:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40819c:	ldr	x1, [x8, #3504]
  4081a0:	mov	x2, x23
  4081a4:	bl	4024c0 <memcpy@plt>
  4081a8:	ldp	x8, x9, [x19, #24]
  4081ac:	add	x0, x8, x23
  4081b0:	sub	x8, x9, x0
  4081b4:	cmp	x8, x22
  4081b8:	str	x0, [x19, #24]
  4081bc:	b.cs	4081d0 <ferror@plt+0x5680>  // b.hs, b.nlast
  4081c0:	mov	x0, x19
  4081c4:	mov	x1, x22
  4081c8:	bl	418058 <_obstack_newchunk@@Base>
  4081cc:	ldr	x0, [x19, #24]
  4081d0:	mov	x1, x20
  4081d4:	mov	x2, x22
  4081d8:	bl	4024c0 <memcpy@plt>
  4081dc:	ldr	x8, [x19, #24]
  4081e0:	add	x0, x8, x22
  4081e4:	str	x0, [x19, #24]
  4081e8:	cbz	x22, 408248 <ferror@plt+0x56f8>
  4081ec:	add	x8, x22, x20
  4081f0:	ldurb	w9, [x8, #-1]
  4081f4:	cmp	w9, #0x58
  4081f8:	b.ne	408248 <ferror@plt+0x56f8>  // b.any
  4081fc:	ldurb	w8, [x8, #-2]
  408200:	cmp	w8, #0x58
  408204:	b.ne	4083bc <ferror@plt+0x586c>  // b.any
  408208:	add	x8, x22, x20
  40820c:	ldurb	w9, [x8, #-3]
  408210:	cmp	w9, #0x58
  408214:	b.ne	4083c4 <ferror@plt+0x5874>  // b.any
  408218:	ldurb	w8, [x8, #-4]
  40821c:	cmp	w8, #0x58
  408220:	b.ne	4083cc <ferror@plt+0x587c>  // b.any
  408224:	add	x8, x22, x20
  408228:	ldurb	w9, [x8, #-5]
  40822c:	cmp	w9, #0x58
  408230:	b.ne	4083d4 <ferror@plt+0x5884>  // b.any
  408234:	ldurb	w8, [x8, #-6]
  408238:	cmp	w8, #0x58
  40823c:	mov	w8, #0x5                   	// #5
  408240:	cinc	x8, x8, eq  // eq = none
  408244:	b	40824c <ferror@plt+0x56fc>
  408248:	mov	x8, xzr
  40824c:	ldr	x9, [x19, #32]
  408250:	mov	w11, #0x7                   	// #7
  408254:	mov	w10, #0x6                   	// #6
  408258:	sub	x1, x11, x8
  40825c:	sub	x9, x9, x0
  408260:	cmp	x9, x1
  408264:	sub	x22, x10, x8
  408268:	b.cs	408278 <ferror@plt+0x5728>  // b.hs, b.nlast
  40826c:	mov	x0, x19
  408270:	bl	418058 <_obstack_newchunk@@Base>
  408274:	ldr	x0, [x19, #24]
  408278:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  40827c:	add	x1, x1, #0x260
  408280:	mov	x2, x22
  408284:	bl	4024c0 <memcpy@plt>
  408288:	ldr	x8, [x19, #24]
  40828c:	add	x8, x8, x22
  408290:	add	x9, x8, #0x1
  408294:	str	x9, [x19, #24]
  408298:	strb	wzr, [x8]
  40829c:	ldr	x8, [x19, #16]
  4082a0:	ldr	x9, [x24, #3512]
  4082a4:	add	x23, x8, x9
  4082a8:	bl	402ac0 <__errno_location@plt>
  4082ac:	mov	x22, x0
  4082b0:	str	wzr, [x0]
  4082b4:	mov	x0, x23
  4082b8:	bl	4164bc <ferror@plt+0x1396c>
  4082bc:	tbnz	w0, #31, 408314 <ferror@plt+0x57c4>
  4082c0:	bl	4027f0 <close@plt>
  4082c4:	ldp	x8, x9, [x19, #24]
  4082c8:	sub	x0, x8, #0x1
  4082cc:	str	x0, [x19, #24]
  4082d0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4082d4:	ldr	x20, [x8, #3568]
  4082d8:	sub	x8, x9, x0
  4082dc:	cmp	x8, x20
  4082e0:	b.cs	4082f4 <ferror@plt+0x57a4>  // b.hs, b.nlast
  4082e4:	mov	x0, x19
  4082e8:	mov	x1, x20
  4082ec:	bl	418058 <_obstack_newchunk@@Base>
  4082f0:	ldr	x0, [x19, #24]
  4082f4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4082f8:	ldr	x1, [x8, #3560]
  4082fc:	mov	x2, x20
  408300:	bl	4024c0 <memcpy@plt>
  408304:	ldr	x8, [x19, #24]
  408308:	add	x8, x8, x20
  40830c:	str	x8, [x19, #24]
  408310:	b	408390 <ferror@plt+0x5840>
  408314:	ldr	w1, [x22]
  408318:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40831c:	add	x2, x2, #0x7ec
  408320:	mov	w0, wzr
  408324:	mov	x3, x21
  408328:	mov	x4, x20
  40832c:	bl	402c5c <ferror@plt+0x10c>
  408330:	ldp	x1, x9, [x19, #16]
  408334:	cmp	x9, x1
  408338:	b.ne	408348 <ferror@plt+0x57f8>  // b.any
  40833c:	ldrb	w8, [x19, #80]
  408340:	orr	w8, w8, #0x2
  408344:	strb	w8, [x19, #80]
  408348:	ldr	x11, [x19, #48]
  40834c:	ldr	x8, [x19, #8]
  408350:	ldr	x10, [x19, #32]
  408354:	add	x9, x11, x9
  408358:	bic	x9, x9, x11
  40835c:	sub	x11, x9, x8
  408360:	sub	x12, x10, x8
  408364:	cmp	x11, x12
  408368:	str	x9, [x19, #24]
  40836c:	b.ls	408378 <ferror@plt+0x5828>  // b.plast
  408370:	mov	x9, x10
  408374:	str	x10, [x19, #24]
  408378:	cmp	x1, x10
  40837c:	str	x9, [x19, #16]
  408380:	b.cs	4083a4 <ferror@plt+0x5854>  // b.hs, b.nlast
  408384:	cmp	x1, x8
  408388:	b.ls	4083a4 <ferror@plt+0x5854>  // b.plast
  40838c:	stp	x1, x1, [x19, #16]
  408390:	ldp	x20, x19, [sp, #48]
  408394:	ldp	x22, x21, [sp, #32]
  408398:	ldp	x24, x23, [sp, #16]
  40839c:	ldp	x29, x30, [sp], #64
  4083a0:	ret
  4083a4:	mov	x0, x19
  4083a8:	ldp	x20, x19, [sp, #48]
  4083ac:	ldp	x22, x21, [sp, #32]
  4083b0:	ldp	x24, x23, [sp, #16]
  4083b4:	ldp	x29, x30, [sp], #64
  4083b8:	b	4181d0 <_obstack_free@@Base>
  4083bc:	mov	w8, #0x1                   	// #1
  4083c0:	b	40824c <ferror@plt+0x56fc>
  4083c4:	mov	w8, #0x2                   	// #2
  4083c8:	b	40824c <ferror@plt+0x56fc>
  4083cc:	mov	w8, #0x3                   	// #3
  4083d0:	b	40824c <ferror@plt+0x56fc>
  4083d4:	mov	w8, #0x4                   	// #4
  4083d8:	b	40824c <ferror@plt+0x56fc>
  4083dc:	stp	x29, x30, [sp, #-96]!
  4083e0:	stp	x22, x21, [sp, #64]
  4083e4:	stp	x20, x19, [sp, #80]
  4083e8:	mov	x21, x1
  4083ec:	mov	x19, x0
  4083f0:	mov	w1, #0x5c                  	// #92
  4083f4:	mov	x0, x2
  4083f8:	stp	x28, x27, [sp, #16]
  4083fc:	stp	x26, x25, [sp, #32]
  408400:	stp	x24, x23, [sp, #48]
  408404:	mov	x29, sp
  408408:	mov	x20, x3
  40840c:	mov	x25, x2
  408410:	bl	402990 <strchr@plt>
  408414:	cbz	x0, 4085e0 <ferror@plt+0x5a90>
  408418:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40841c:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408420:	mov	x23, x0
  408424:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408428:	add	x22, x22, #0x86e
  40842c:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408430:	add	x24, x24, #0x833
  408434:	b	408464 <ferror@plt+0x5914>
  408438:	ldr	w0, [x27, #1192]
  40843c:	mov	w1, wzr
  408440:	mov	x2, x22
  408444:	mov	w3, w25
  408448:	bl	402c5c <ferror@plt+0x10c>
  40844c:	add	x25, x23, #0x2
  408450:	mov	w1, #0x5c                  	// #92
  408454:	mov	x0, x25
  408458:	bl	402990 <strchr@plt>
  40845c:	mov	x23, x0
  408460:	cbz	x0, 4085e0 <ferror@plt+0x5a90>
  408464:	ldp	x0, x8, [x19, #24]
  408468:	sub	x26, x23, x25
  40846c:	sub	x8, x8, x0
  408470:	cmp	x8, x26
  408474:	b.cs	408488 <ferror@plt+0x5938>  // b.hs, b.nlast
  408478:	mov	x0, x19
  40847c:	mov	x1, x26
  408480:	bl	418058 <_obstack_newchunk@@Base>
  408484:	ldr	x0, [x19, #24]
  408488:	mov	x1, x25
  40848c:	mov	x2, x26
  408490:	bl	4024c0 <memcpy@plt>
  408494:	ldr	x8, [x19, #24]
  408498:	add	x0, x8, x26
  40849c:	str	x0, [x19, #24]
  4084a0:	ldrb	w25, [x23, #1]
  4084a4:	sub	w8, w25, #0x31
  4084a8:	cmp	w8, #0x9
  4084ac:	b.cs	408528 <ferror@plt+0x59d8>  // b.hs, b.nlast
  4084b0:	ldr	w8, [x20]
  4084b4:	sub	w25, w25, #0x30
  4084b8:	sub	w8, w8, #0x1
  4084bc:	cmp	w8, w25
  4084c0:	b.ls	408438 <ferror@plt+0x58e8>  // b.plast
  4084c4:	ldr	x8, [x20, #16]
  4084c8:	ldr	w9, [x8, w25, uxtw #2]
  4084cc:	cmp	w9, #0x1
  4084d0:	b.lt	40844c <ferror@plt+0x58fc>  // b.tstop
  4084d4:	ldr	x8, [x20, #8]
  4084d8:	ldr	x10, [x19, #32]
  4084dc:	ldr	w8, [x8, x25, lsl #2]
  4084e0:	sub	w9, w9, w8
  4084e4:	sxtw	x26, w9
  4084e8:	sub	x9, x10, x0
  4084ec:	cmp	x9, x26
  4084f0:	b.cs	40850c <ferror@plt+0x59bc>  // b.hs, b.nlast
  4084f4:	mov	x0, x19
  4084f8:	mov	x1, x26
  4084fc:	bl	418058 <_obstack_newchunk@@Base>
  408500:	ldr	x8, [x20, #8]
  408504:	ldr	x0, [x19, #24]
  408508:	ldr	w8, [x8, x25, lsl #2]
  40850c:	add	x1, x21, w8, sxtw
  408510:	mov	x2, x26
  408514:	bl	4024c0 <memcpy@plt>
  408518:	ldr	x8, [x19, #24]
  40851c:	add	x8, x8, x26
  408520:	str	x8, [x19, #24]
  408524:	b	40844c <ferror@plt+0x58fc>
  408528:	cmp	w25, #0x26
  40852c:	b.eq	40858c <ferror@plt+0x5a3c>  // b.none
  408530:	cmp	w25, #0x30
  408534:	b.eq	408568 <ferror@plt+0x5a18>  // b.none
  408538:	cbz	w25, 408640 <ferror@plt+0x5af0>
  40853c:	ldr	x8, [x19, #32]
  408540:	cmp	x8, x0
  408544:	b.ne	408558 <ferror@plt+0x5a08>  // b.any
  408548:	mov	w1, #0x1                   	// #1
  40854c:	mov	x0, x19
  408550:	bl	418058 <_obstack_newchunk@@Base>
  408554:	ldr	x0, [x19, #24]
  408558:	add	x8, x0, #0x1
  40855c:	str	x8, [x19, #24]
  408560:	strb	w25, [x0]
  408564:	b	40844c <ferror@plt+0x58fc>
  408568:	ldrb	w8, [x28, #2084]
  40856c:	tbnz	w8, #0, 40858c <ferror@plt+0x5a3c>
  408570:	ldr	w0, [x27, #1192]
  408574:	mov	w1, wzr
  408578:	mov	x2, x24
  40857c:	bl	402c5c <ferror@plt+0x10c>
  408580:	mov	w8, #0x1                   	// #1
  408584:	strb	w8, [x28, #2084]
  408588:	ldr	x0, [x19, #24]
  40858c:	ldp	x9, x8, [x20, #8]
  408590:	ldrsw	x10, [x8]
  408594:	ldrsw	x8, [x9]
  408598:	ldr	x9, [x19, #32]
  40859c:	sub	x25, x10, x8
  4085a0:	sub	x9, x9, x0
  4085a4:	cmp	x9, x25
  4085a8:	b.cs	4085c4 <ferror@plt+0x5a74>  // b.hs, b.nlast
  4085ac:	mov	x0, x19
  4085b0:	mov	x1, x25
  4085b4:	bl	418058 <_obstack_newchunk@@Base>
  4085b8:	ldr	x8, [x20, #8]
  4085bc:	ldr	x0, [x19, #24]
  4085c0:	ldr	w8, [x8]
  4085c4:	add	x1, x21, w8, sxtw
  4085c8:	mov	x2, x25
  4085cc:	bl	4024c0 <memcpy@plt>
  4085d0:	ldr	x8, [x19, #24]
  4085d4:	add	x8, x8, x25
  4085d8:	str	x8, [x19, #24]
  4085dc:	b	40844c <ferror@plt+0x58fc>
  4085e0:	mov	x0, x25
  4085e4:	bl	4024f0 <strlen@plt>
  4085e8:	mov	x20, x0
  4085ec:	ldp	x0, x8, [x19, #24]
  4085f0:	sub	x8, x8, x0
  4085f4:	cmp	x8, x20
  4085f8:	b.cs	40860c <ferror@plt+0x5abc>  // b.hs, b.nlast
  4085fc:	mov	x0, x19
  408600:	mov	x1, x20
  408604:	bl	418058 <_obstack_newchunk@@Base>
  408608:	ldr	x0, [x19, #24]
  40860c:	mov	x1, x25
  408610:	mov	x2, x20
  408614:	bl	4024c0 <memcpy@plt>
  408618:	ldr	x8, [x19, #24]
  40861c:	add	x8, x8, x20
  408620:	str	x8, [x19, #24]
  408624:	ldp	x20, x19, [sp, #80]
  408628:	ldp	x22, x21, [sp, #64]
  40862c:	ldp	x24, x23, [sp, #48]
  408630:	ldp	x26, x25, [sp, #32]
  408634:	ldp	x28, x27, [sp, #16]
  408638:	ldp	x29, x30, [sp], #96
  40863c:	ret
  408640:	ldr	w0, [x27, #1192]
  408644:	ldp	x20, x19, [sp, #80]
  408648:	ldp	x22, x21, [sp, #64]
  40864c:	ldp	x24, x23, [sp, #48]
  408650:	ldp	x26, x25, [sp, #32]
  408654:	ldp	x28, x27, [sp, #16]
  408658:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40865c:	add	x2, x2, #0x895
  408660:	mov	w1, wzr
  408664:	ldp	x29, x30, [sp], #96
  408668:	b	402c5c <ferror@plt+0x10c>
  40866c:	ldrb	w8, [x0, #8]
  408670:	cmp	x1, #0x0
  408674:	cset	w9, ne  // ne = any
  408678:	and	w8, w8, #0xfe
  40867c:	orr	w8, w8, w9
  408680:	strb	w8, [x0, #8]
  408684:	cbnz	x1, 40869c <ferror@plt+0x5b4c>
  408688:	ldr	w8, [x0, #24]
  40868c:	cbnz	w8, 40869c <ferror@plt+0x5b4c>
  408690:	ldr	x0, [x0, #16]
  408694:	mov	w1, #0x4                   	// #4
  408698:	b	41059c <ferror@plt+0xda4c>
  40869c:	ret
  4086a0:	stp	x29, x30, [sp, #-48]!
  4086a4:	stp	x22, x21, [sp, #16]
  4086a8:	stp	x20, x19, [sp, #32]
  4086ac:	mov	x19, x1
  4086b0:	mov	x20, x0
  4086b4:	mov	w22, wzr
  4086b8:	mov	x29, sp
  4086bc:	b	4086d0 <ferror@plt+0x5b80>
  4086c0:	add	x10, x9, #0x1
  4086c4:	str	x10, [x19, #24]
  4086c8:	strb	w8, [x9]
  4086cc:	ldrb	w22, [x20], #1
  4086d0:	ldrb	w8, [x20]
  4086d4:	cmp	w8, #0x2d
  4086d8:	b.eq	4086e4 <ferror@plt+0x5b94>  // b.none
  4086dc:	cbnz	w8, 408774 <ferror@plt+0x5c24>
  4086e0:	b	4087c4 <ferror@plt+0x5c74>
  4086e4:	tst	w22, #0xff
  4086e8:	b.eq	408774 <ferror@plt+0x5c24>  // b.none
  4086ec:	ldrb	w21, [x20, #1]!
  4086f0:	cbz	w21, 408798 <ferror@plt+0x5c48>
  4086f4:	cmp	w21, w22, uxtb
  4086f8:	b.cc	408748 <ferror@plt+0x5bf8>  // b.lo, b.ul, b.last
  4086fc:	b.hi	408718 <ferror@plt+0x5bc8>  // b.pmore
  408700:	b	4086cc <ferror@plt+0x5b7c>
  408704:	add	x9, x8, #0x1
  408708:	cmp	w21, w22, uxtb
  40870c:	str	x9, [x19, #24]
  408710:	strb	w22, [x8]
  408714:	b.ls	4086cc <ferror@plt+0x5b7c>  // b.plast
  408718:	ldp	x8, x9, [x19, #24]
  40871c:	add	w22, w22, #0x1
  408720:	cmp	x9, x8
  408724:	b.ne	408704 <ferror@plt+0x5bb4>  // b.any
  408728:	mov	w1, #0x1                   	// #1
  40872c:	mov	x0, x19
  408730:	bl	418058 <_obstack_newchunk@@Base>
  408734:	ldr	x8, [x19, #24]
  408738:	b	408704 <ferror@plt+0x5bb4>
  40873c:	add	x9, x8, #0x1
  408740:	str	x9, [x19, #24]
  408744:	strb	w22, [x8]
  408748:	sub	w22, w22, #0x1
  40874c:	cmp	w21, w22, uxtb
  408750:	b.hi	4086cc <ferror@plt+0x5b7c>  // b.pmore
  408754:	ldp	x8, x9, [x19, #24]
  408758:	cmp	x9, x8
  40875c:	b.ne	40873c <ferror@plt+0x5bec>  // b.any
  408760:	mov	w1, #0x1                   	// #1
  408764:	mov	x0, x19
  408768:	bl	418058 <_obstack_newchunk@@Base>
  40876c:	ldr	x8, [x19, #24]
  408770:	b	40873c <ferror@plt+0x5bec>
  408774:	ldp	x9, x10, [x19, #24]
  408778:	cmp	x10, x9
  40877c:	b.ne	4086c0 <ferror@plt+0x5b70>  // b.any
  408780:	mov	w1, #0x1                   	// #1
  408784:	mov	x0, x19
  408788:	bl	418058 <_obstack_newchunk@@Base>
  40878c:	ldrb	w8, [x20]
  408790:	ldr	x9, [x19, #24]
  408794:	b	4086c0 <ferror@plt+0x5b70>
  408798:	ldp	x8, x9, [x19, #24]
  40879c:	cmp	x9, x8
  4087a0:	b.ne	4087b4 <ferror@plt+0x5c64>  // b.any
  4087a4:	mov	w1, #0x1                   	// #1
  4087a8:	mov	x0, x19
  4087ac:	bl	418058 <_obstack_newchunk@@Base>
  4087b0:	ldr	x8, [x19, #24]
  4087b4:	add	x9, x8, #0x1
  4087b8:	mov	w10, #0x2d                  	// #45
  4087bc:	str	x9, [x19, #24]
  4087c0:	strb	w10, [x8]
  4087c4:	ldp	x8, x9, [x19, #24]
  4087c8:	cmp	x9, x8
  4087cc:	b.ne	4087e0 <ferror@plt+0x5c90>  // b.any
  4087d0:	mov	w1, #0x1                   	// #1
  4087d4:	mov	x0, x19
  4087d8:	bl	418058 <_obstack_newchunk@@Base>
  4087dc:	ldr	x8, [x19, #24]
  4087e0:	add	x9, x8, #0x1
  4087e4:	str	x9, [x19, #24]
  4087e8:	strb	wzr, [x8]
  4087ec:	ldp	x0, x8, [x19, #16]
  4087f0:	cmp	x8, x0
  4087f4:	b.ne	408804 <ferror@plt+0x5cb4>  // b.any
  4087f8:	ldrb	w9, [x19, #80]
  4087fc:	orr	w9, w9, #0x2
  408800:	strb	w9, [x19, #80]
  408804:	ldr	x10, [x19, #48]
  408808:	ldr	x11, [x19, #8]
  40880c:	ldr	x9, [x19, #32]
  408810:	add	x8, x10, x8
  408814:	bic	x8, x8, x10
  408818:	sub	x10, x8, x11
  40881c:	sub	x11, x9, x11
  408820:	cmp	x10, x11
  408824:	str	x8, [x19, #24]
  408828:	b.ls	408834 <ferror@plt+0x5ce4>  // b.plast
  40882c:	mov	x8, x9
  408830:	str	x9, [x19, #24]
  408834:	str	x8, [x19, #16]
  408838:	ldp	x20, x19, [sp, #32]
  40883c:	ldp	x22, x21, [sp, #16]
  408840:	ldp	x29, x30, [sp], #48
  408844:	ret
  408848:	stp	x29, x30, [sp, #-16]!
  40884c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408850:	ldr	x0, [x8, #1032]
  408854:	mov	x29, sp
  408858:	bl	408884 <ferror@plt+0x5d34>
  40885c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408860:	adrp	x3, 417000 <ferror@plt+0x144b0>
  408864:	adrp	x4, 402000 <mbrtowc@plt-0x4b0>
  408868:	add	x0, x0, #0x830
  40886c:	add	x3, x3, #0x280
  408870:	add	x4, x4, #0x930
  408874:	mov	x1, xzr
  408878:	mov	x2, xzr
  40887c:	ldp	x29, x30, [sp], #16
  408880:	b	417f04 <_obstack_begin@@Base>
  408884:	sub	sp, sp, #0x140
  408888:	stp	x22, x21, [sp, #288]
  40888c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408890:	stp	x20, x19, [sp, #304]
  408894:	mov	x19, x0
  408898:	ldr	x0, [x21, #2088]
  40889c:	stp	x28, x23, [sp, #272]
  4088a0:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4088a4:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4088a8:	stp	x29, x30, [sp, #256]
  4088ac:	add	x29, sp, #0x100
  4088b0:	cbz	x0, 408900 <ferror@plt+0x5db0>
  4088b4:	ldr	x8, [x23, #1032]
  4088b8:	cmp	x0, x8
  4088bc:	b.eq	408900 <ferror@plt+0x5db0>  // b.none
  4088c0:	ldr	x8, [x22, #1056]
  4088c4:	cmp	x0, x8
  4088c8:	b.eq	408900 <ferror@plt+0x5db0>  // b.none
  4088cc:	bl	4122d4 <ferror@plt+0xf784>
  4088d0:	cbz	w0, 408900 <ferror@plt+0x5db0>
  4088d4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4088d8:	ldr	w20, [x8, #1192]
  4088dc:	bl	402ac0 <__errno_location@plt>
  4088e0:	ldr	w1, [x0]
  4088e4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4088e8:	add	x2, x2, #0xace
  4088ec:	mov	w0, w20
  4088f0:	bl	402c5c <ferror@plt+0x10c>
  4088f4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4088f8:	mov	w9, #0x1                   	// #1
  4088fc:	str	w9, [x8, #3488]
  408900:	str	x19, [x21, #2088]
  408904:	cbz	x19, 4089b4 <ferror@plt+0x5e64>
  408908:	ldr	x8, [x22, #1056]
  40890c:	cmp	x8, x19
  408910:	b.eq	4089b4 <ferror@plt+0x5e64>  // b.none
  408914:	add	x2, sp, #0x80
  408918:	mov	w1, #0x1                   	// #1
  40891c:	mov	w0, wzr
  408920:	bl	402a30 <__fxstat@plt>
  408924:	tbnz	w0, #31, 4089b4 <ferror@plt+0x5e64>
  408928:	ldr	x0, [x21, #2088]
  40892c:	bl	402630 <fileno@plt>
  408930:	mov	w1, w0
  408934:	mov	x2, sp
  408938:	mov	w0, wzr
  40893c:	bl	402a30 <__fxstat@plt>
  408940:	tbnz	w0, #31, 4089b4 <ferror@plt+0x5e64>
  408944:	ldr	x8, [sp, #136]
  408948:	ldr	x9, [sp, #8]
  40894c:	cmp	x8, x9
  408950:	b.ne	4089b4 <ferror@plt+0x5e64>  // b.any
  408954:	cbz	x8, 4089b4 <ferror@plt+0x5e64>
  408958:	ldr	x8, [sp, #128]
  40895c:	ldr	x9, [sp]
  408960:	cmp	x8, x9
  408964:	b.ne	4089b4 <ferror@plt+0x5e64>  // b.any
  408968:	ldr	x0, [x21, #2088]
  40896c:	ldr	x8, [x23, #1032]
  408970:	cmp	x0, x8
  408974:	b.eq	4089ac <ferror@plt+0x5e5c>  // b.none
  408978:	bl	4122d4 <ferror@plt+0xf784>
  40897c:	cbz	w0, 4089ac <ferror@plt+0x5e5c>
  408980:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408984:	ldr	w19, [x8, #1192]
  408988:	bl	402ac0 <__errno_location@plt>
  40898c:	ldr	w1, [x0]
  408990:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408994:	add	x2, x2, #0xace
  408998:	mov	w0, w19
  40899c:	bl	402c5c <ferror@plt+0x10c>
  4089a0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4089a4:	mov	w9, #0x1                   	// #1
  4089a8:	str	w9, [x8, #3488]
  4089ac:	ldr	x8, [x22, #1056]
  4089b0:	str	x8, [x21, #2088]
  4089b4:	ldp	x20, x19, [sp, #304]
  4089b8:	ldp	x22, x21, [sp, #288]
  4089bc:	ldp	x28, x23, [sp, #272]
  4089c0:	ldp	x29, x30, [sp, #256]
  4089c4:	add	sp, sp, #0x140
  4089c8:	ret
  4089cc:	stp	x29, x30, [sp, #-32]!
  4089d0:	str	x19, [sp, #16]
  4089d4:	mov	x29, sp
  4089d8:	cbz	x0, 408a70 <ferror@plt+0x5f20>
  4089dc:	ldrb	w11, [x0]
  4089e0:	cbz	w11, 408a70 <ferror@plt+0x5f20>
  4089e4:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4089e8:	mov	w19, wzr
  4089ec:	add	x8, x0, #0x1
  4089f0:	add	x9, x9, #0x9a7
  4089f4:	b	408a04 <ferror@plt+0x5eb4>
  4089f8:	mov	w10, #0x3ff                 	// #1023
  4089fc:	ldrb	w11, [x8], #1
  408a00:	orr	w19, w19, w10
  408a04:	and	w11, w11, #0xff
  408a08:	sub	w10, w11, #0x56
  408a0c:	cmp	w10, #0x22
  408a10:	b.hi	408af0 <ferror@plt+0x5fa0>  // b.pmore
  408a14:	adr	x11, 4089f8 <ferror@plt+0x5ea8>
  408a18:	ldrb	w12, [x9, x10]
  408a1c:	add	x11, x11, x12, lsl #2
  408a20:	mov	w10, #0x1                   	// #1
  408a24:	br	x11
  408a28:	mov	w10, #0x80                  	// #128
  408a2c:	b	4089fc <ferror@plt+0x5eac>
  408a30:	mov	w10, #0x2                   	// #2
  408a34:	b	4089fc <ferror@plt+0x5eac>
  408a38:	mov	w10, #0x20                  	// #32
  408a3c:	b	4089fc <ferror@plt+0x5eac>
  408a40:	mov	w10, #0x100                 	// #256
  408a44:	b	4089fc <ferror@plt+0x5eac>
  408a48:	mov	w10, #0x10                  	// #16
  408a4c:	b	4089fc <ferror@plt+0x5eac>
  408a50:	mov	w10, #0x40                  	// #64
  408a54:	b	4089fc <ferror@plt+0x5eac>
  408a58:	mov	w10, #0x4                   	// #4
  408a5c:	b	4089fc <ferror@plt+0x5eac>
  408a60:	mov	w10, #0x8                   	// #8
  408a64:	b	4089fc <ferror@plt+0x5eac>
  408a68:	mov	w10, #0x200                 	// #512
  408a6c:	b	4089fc <ferror@plt+0x5eac>
  408a70:	mov	w19, #0x7                   	// #7
  408a74:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408a78:	add	x8, x8, #0x840
  408a7c:	ldp	x1, x9, [x8]
  408a80:	cmp	x9, x1
  408a84:	b.ne	408a98 <ferror@plt+0x5f48>  // b.any
  408a88:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408a8c:	ldrb	w11, [x10, #2176]
  408a90:	orr	w11, w11, #0x2
  408a94:	strb	w11, [x10, #2176]
  408a98:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408a9c:	add	x11, x11, #0x838
  408aa0:	ldr	x12, [x11, #40]
  408aa4:	ldr	x10, [x11]
  408aa8:	ldr	x13, [x11, #24]
  408aac:	add	x9, x12, x9
  408ab0:	bic	x9, x9, x12
  408ab4:	sub	x14, x13, x10
  408ab8:	sub	x12, x9, x10
  408abc:	cmp	x12, x14
  408ac0:	csel	x9, x13, x9, hi  // hi = pmore
  408ac4:	cmp	x1, x13
  408ac8:	stp	x9, x9, [x11, #8]
  408acc:	b.cs	408ae0 <ferror@plt+0x5f90>  // b.hs, b.nlast
  408ad0:	cmp	x1, x10
  408ad4:	b.ls	408ae0 <ferror@plt+0x5f90>  // b.plast
  408ad8:	stp	x1, x1, [x8]
  408adc:	b	408af8 <ferror@plt+0x5fa8>
  408ae0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408ae4:	add	x0, x0, #0x830
  408ae8:	bl	4181d0 <_obstack_free@@Base>
  408aec:	b	408af8 <ferror@plt+0x5fa8>
  408af0:	cbz	w11, 408a74 <ferror@plt+0x5f24>
  408af4:	mov	w19, #0xffffffff            	// #-1
  408af8:	mov	w0, w19
  408afc:	ldr	x19, [sp, #16]
  408b00:	ldp	x29, x30, [sp], #32
  408b04:	ret
  408b08:	stp	x29, x30, [sp, #-32]!
  408b0c:	stp	x20, x19, [sp, #16]
  408b10:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408b14:	ldr	x0, [x19, #1056]
  408b18:	mov	x29, sp
  408b1c:	bl	417d70 <ferror@plt+0x15220>
  408b20:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408b24:	ldr	x0, [x20, #1032]
  408b28:	bl	417d70 <ferror@plt+0x15220>
  408b2c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408b30:	ldr	x0, [x8, #2088]
  408b34:	cbz	x0, 408b54 <ferror@plt+0x6004>
  408b38:	ldr	x8, [x19, #1056]
  408b3c:	cmp	x0, x8
  408b40:	b.eq	408b54 <ferror@plt+0x6004>  // b.none
  408b44:	ldr	x8, [x20, #1032]
  408b48:	cmp	x0, x8
  408b4c:	b.eq	408b54 <ferror@plt+0x6004>  // b.none
  408b50:	bl	417d70 <ferror@plt+0x15220>
  408b54:	mov	w2, #0x1                   	// #1
  408b58:	mov	w0, wzr
  408b5c:	mov	x1, xzr
  408b60:	bl	402610 <lseek@plt>
  408b64:	tbnz	x0, #63, 408b78 <ferror@plt+0x6028>
  408b68:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408b6c:	ldr	x0, [x19, #1064]
  408b70:	bl	417d70 <ferror@plt+0x15220>
  408b74:	cbz	w0, 408b84 <ferror@plt+0x6034>
  408b78:	ldp	x20, x19, [sp, #16]
  408b7c:	ldp	x29, x30, [sp], #32
  408b80:	ret
  408b84:	ldr	x0, [x19, #1064]
  408b88:	ldp	x20, x19, [sp, #16]
  408b8c:	mov	w2, #0x1                   	// #1
  408b90:	mov	x1, xzr
  408b94:	ldp	x29, x30, [sp], #32
  408b98:	b	417df8 <ferror@plt+0x152a8>
  408b9c:	stp	x29, x30, [sp, #-32]!
  408ba0:	stp	x20, x19, [sp, #16]
  408ba4:	mov	x29, sp
  408ba8:	cbz	x0, 408c00 <ferror@plt+0x60b0>
  408bac:	ldrb	w8, [x0]
  408bb0:	cbz	w8, 408c10 <ferror@plt+0x60c0>
  408bb4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408bb8:	add	x1, x1, #0x9eb
  408bbc:	bl	412ecc <ferror@plt+0x1037c>
  408bc0:	cbz	x0, 408c78 <ferror@plt+0x6128>
  408bc4:	mov	x19, x0
  408bc8:	bl	402630 <fileno@plt>
  408bcc:	mov	w1, #0x1                   	// #1
  408bd0:	bl	41225c <ferror@plt+0xf70c>
  408bd4:	cbz	w0, 408bf8 <ferror@plt+0x60a8>
  408bd8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408bdc:	ldr	w20, [x8, #1192]
  408be0:	bl	402ac0 <__errno_location@plt>
  408be4:	ldr	w1, [x0]
  408be8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408bec:	add	x2, x2, #0x9ed
  408bf0:	mov	w0, w20
  408bf4:	bl	402c5c <ferror@plt+0x10c>
  408bf8:	mov	x0, x19
  408bfc:	b	408c08 <ferror@plt+0x60b8>
  408c00:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c04:	ldr	x0, [x8, #1032]
  408c08:	bl	408884 <ferror@plt+0x5d34>
  408c0c:	b	408c74 <ferror@plt+0x6124>
  408c10:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c14:	ldr	x0, [x20, #2088]
  408c18:	cbz	x0, 408c70 <ferror@plt+0x6120>
  408c1c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c20:	ldr	x8, [x8, #1032]
  408c24:	cmp	x0, x8
  408c28:	b.eq	408c70 <ferror@plt+0x6120>  // b.none
  408c2c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c30:	ldr	x8, [x8, #1056]
  408c34:	cmp	x0, x8
  408c38:	b.eq	408c70 <ferror@plt+0x6120>  // b.none
  408c3c:	bl	4122d4 <ferror@plt+0xf784>
  408c40:	cbz	w0, 408c70 <ferror@plt+0x6120>
  408c44:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c48:	ldr	w19, [x8, #1192]
  408c4c:	bl	402ac0 <__errno_location@plt>
  408c50:	ldr	w1, [x0]
  408c54:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408c58:	add	x2, x2, #0xace
  408c5c:	mov	w0, w19
  408c60:	bl	402c5c <ferror@plt+0x10c>
  408c64:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408c68:	mov	w9, #0x1                   	// #1
  408c6c:	str	w9, [x8, #3488]
  408c70:	str	xzr, [x20, #2088]
  408c74:	mov	w0, #0x1                   	// #1
  408c78:	ldp	x20, x19, [sp, #16]
  408c7c:	ldp	x29, x30, [sp], #32
  408c80:	ret
  408c84:	stp	x29, x30, [sp, #-48]!
  408c88:	stp	x20, x19, [sp, #32]
  408c8c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408c90:	ldr	x0, [x19, #2088]
  408c94:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408c98:	add	x1, x1, #0xa1d
  408c9c:	str	x21, [sp, #16]
  408ca0:	mov	x29, sp
  408ca4:	bl	4177a8 <ferror@plt+0x14c58>
  408ca8:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408cac:	ldr	w8, [x20, #3496]
  408cb0:	cbz	w8, 408cf4 <ferror@plt+0x61a4>
  408cb4:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408cb8:	ldr	w8, [x21, #1172]
  408cbc:	tbz	w8, #5, 408cdc <ferror@plt+0x618c>
  408cc0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408cc4:	ldr	x0, [x19, #2088]
  408cc8:	ldr	x2, [x8, #3520]
  408ccc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408cd0:	add	x1, x1, #0xa26
  408cd4:	bl	4177a8 <ferror@plt+0x14c58>
  408cd8:	ldr	w8, [x21, #1172]
  408cdc:	tbz	w8, #4, 408cf4 <ferror@plt+0x61a4>
  408ce0:	ldr	x0, [x19, #2088]
  408ce4:	ldr	w2, [x20, #3496]
  408ce8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408cec:	add	x1, x1, #0xa2a
  408cf0:	bl	4177a8 <ferror@plt+0x14c58>
  408cf4:	ldr	x1, [x19, #2088]
  408cf8:	ldp	x20, x19, [sp, #32]
  408cfc:	ldr	x21, [sp, #16]
  408d00:	mov	w0, #0x20                  	// #32
  408d04:	ldp	x29, x30, [sp], #48
  408d08:	b	4025a0 <putc@plt>
  408d0c:	stp	x29, x30, [sp, #-32]!
  408d10:	str	x19, [sp, #16]
  408d14:	mov	x19, x0
  408d18:	mov	w0, w1
  408d1c:	mov	x29, sp
  408d20:	bl	408d40 <ferror@plt+0x61f0>
  408d24:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408d28:	add	x0, x0, #0xa2e
  408d2c:	mov	x1, x19
  408d30:	bl	408df0 <ferror@plt+0x62a0>
  408d34:	ldr	x19, [sp, #16]
  408d38:	ldp	x29, x30, [sp], #32
  408d3c:	b	409094 <ferror@plt+0x6544>
  408d40:	stp	x29, x30, [sp, #-48]!
  408d44:	stp	x20, x19, [sp, #32]
  408d48:	mov	w19, w0
  408d4c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408d50:	add	x0, x0, #0xaec
  408d54:	str	x21, [sp, #16]
  408d58:	mov	x29, sp
  408d5c:	bl	408df0 <ferror@plt+0x62a0>
  408d60:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408d64:	ldr	w8, [x20, #3496]
  408d68:	cbz	w8, 408da4 <ferror@plt+0x6254>
  408d6c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408d70:	ldr	w8, [x21, #1172]
  408d74:	tbz	w8, #5, 408d90 <ferror@plt+0x6240>
  408d78:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408d7c:	ldr	x1, [x8, #3520]
  408d80:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408d84:	add	x0, x0, #0xa26
  408d88:	bl	408df0 <ferror@plt+0x62a0>
  408d8c:	ldr	w8, [x21, #1172]
  408d90:	tbz	w8, #4, 408da4 <ferror@plt+0x6254>
  408d94:	ldr	w1, [x20, #3496]
  408d98:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408d9c:	add	x0, x0, #0xa2a
  408da0:	bl	408df0 <ferror@plt+0x62a0>
  408da4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408da8:	ldr	w1, [x8, #2432]
  408dac:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408db0:	add	x0, x0, #0xaf5
  408db4:	bl	408df0 <ferror@plt+0x62a0>
  408db8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408dbc:	ldrb	w8, [x8, #1173]
  408dc0:	tbnz	w8, #1, 408dd4 <ferror@plt+0x6284>
  408dc4:	ldp	x20, x19, [sp, #32]
  408dc8:	ldr	x21, [sp, #16]
  408dcc:	ldp	x29, x30, [sp], #48
  408dd0:	ret
  408dd4:	mov	w1, w19
  408dd8:	ldp	x20, x19, [sp, #32]
  408ddc:	ldr	x21, [sp, #16]
  408de0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408de4:	add	x0, x0, #0xafc
  408de8:	ldp	x29, x30, [sp], #48
  408dec:	b	408df0 <ferror@plt+0x62a0>
  408df0:	sub	sp, sp, #0x140
  408df4:	stp	x29, x30, [sp, #224]
  408df8:	add	x29, sp, #0xe0
  408dfc:	mov	x8, #0xffffffffffffffc8    	// #-56
  408e00:	mov	x9, sp
  408e04:	stp	x28, x27, [sp, #240]
  408e08:	stp	x24, x23, [sp, #272]
  408e0c:	stp	x20, x19, [sp, #304]
  408e10:	movk	x8, #0xff80, lsl #32
  408e14:	sub	x10, x29, #0x60
  408e18:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408e1c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408e20:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408e24:	adrp	x28, 41a000 <_obstack_memory_used@@Base+0x1d94>
  408e28:	add	x9, x9, #0x80
  408e2c:	stp	x26, x25, [sp, #256]
  408e30:	mov	x19, x0
  408e34:	add	x11, x29, #0x60
  408e38:	add	x23, x23, #0x67f
  408e3c:	add	x24, x24, #0x848
  408e40:	add	x20, x20, #0x830
  408e44:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408e48:	mov	w26, #0x2e                  	// #46
  408e4c:	mov	w27, #0x2e2e                	// #11822
  408e50:	add	x28, x28, #0x9ca
  408e54:	stp	x9, x8, [x29, #-24]
  408e58:	add	x8, x10, #0x38
  408e5c:	stp	x22, x21, [sp, #288]
  408e60:	stp	x1, x2, [x29, #-96]
  408e64:	stp	x3, x4, [x29, #-80]
  408e68:	stp	x5, x6, [x29, #-64]
  408e6c:	stur	x7, [x29, #-48]
  408e70:	stp	q0, q1, [sp]
  408e74:	stp	q2, q3, [sp, #32]
  408e78:	stp	q4, q5, [sp, #64]
  408e7c:	stp	q6, q7, [sp, #96]
  408e80:	stp	x11, x8, [x29, #-40]
  408e84:	b	408e98 <ferror@plt+0x6348>
  408e88:	add	x9, x8, #0x1
  408e8c:	str	x9, [x25, #2120]
  408e90:	strb	w22, [x8]
  408e94:	mov	x19, x21
  408e98:	mov	x21, x19
  408e9c:	ldrb	w22, [x21], #1
  408ea0:	cmp	w22, #0x25
  408ea4:	b.eq	408ecc <ferror@plt+0x637c>  // b.none
  408ea8:	cbz	w22, 409074 <ferror@plt+0x6524>
  408eac:	ldp	x8, x9, [x24]
  408eb0:	cmp	x9, x8
  408eb4:	b.ne	408e88 <ferror@plt+0x6338>  // b.any
  408eb8:	mov	w1, #0x1                   	// #1
  408ebc:	mov	x0, x20
  408ec0:	bl	418058 <_obstack_newchunk@@Base>
  408ec4:	ldr	x8, [x20, #24]
  408ec8:	b	408e88 <ferror@plt+0x6338>
  408ecc:	ldrb	w8, [x19, #1]
  408ed0:	mov	w22, wzr
  408ed4:	mov	x21, x23
  408ed8:	sub	w8, w8, #0x53
  408edc:	cmp	w8, #0x20
  408ee0:	b.hi	408fb0 <ferror@plt+0x6460>  // b.pmore
  408ee4:	adr	x9, 408ef4 <ferror@plt+0x63a4>
  408ee8:	ldrb	w10, [x28, x8]
  408eec:	add	x9, x9, x10, lsl #2
  408ef0:	br	x9
  408ef4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408ef8:	ldr	w22, [x8, #1184]
  408efc:	ldursw	x8, [x29, #-16]
  408f00:	tbz	w8, #31, 408f24 <ferror@plt+0x63d4>
  408f04:	add	w9, w8, #0x8
  408f08:	cmn	w8, #0x8
  408f0c:	stur	w9, [x29, #-16]
  408f10:	b.gt	408f24 <ferror@plt+0x63d4>
  408f14:	ldur	x9, [x29, #-32]
  408f18:	add	x8, x9, x8
  408f1c:	ldr	x21, [x8]
  408f20:	b	408fb0 <ferror@plt+0x6460>
  408f24:	ldur	x8, [x29, #-40]
  408f28:	add	x9, x8, #0x8
  408f2c:	stur	x9, [x29, #-40]
  408f30:	ldr	x21, [x8]
  408f34:	b	408fb0 <ferror@plt+0x6460>
  408f38:	ldursw	x8, [x29, #-16]
  408f3c:	tbz	w8, #31, 408f90 <ferror@plt+0x6440>
  408f40:	add	w9, w8, #0x8
  408f44:	cmn	w8, #0x8
  408f48:	stur	w9, [x29, #-16]
  408f4c:	b.gt	408f90 <ferror@plt+0x6440>
  408f50:	ldur	x9, [x29, #-32]
  408f54:	add	x8, x9, x8
  408f58:	b	408f9c <ferror@plt+0x644c>
  408f5c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408f60:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408f64:	ldrb	w8, [x8, #1172]
  408f68:	ldr	x9, [x9, #3504]
  408f6c:	b	408f80 <ferror@plt+0x6430>
  408f70:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  408f74:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  408f78:	ldrb	w8, [x8, #1172]
  408f7c:	ldr	x9, [x9, #3560]
  408f80:	mov	w22, wzr
  408f84:	tst	w8, #0x4
  408f88:	csel	x21, x23, x9, eq  // eq = none
  408f8c:	b	408fb0 <ferror@plt+0x6460>
  408f90:	ldur	x8, [x29, #-40]
  408f94:	add	x9, x8, #0x8
  408f98:	stur	x9, [x29, #-40]
  408f9c:	ldr	w0, [x8]
  408fa0:	mov	w1, #0xa                   	// #10
  408fa4:	bl	403be4 <ferror@plt+0x1094>
  408fa8:	mov	x21, x0
  408fac:	mov	w22, wzr
  408fb0:	mov	x0, x21
  408fb4:	add	x19, x19, #0x2
  408fb8:	bl	4024f0 <strlen@plt>
  408fbc:	mov	x8, x0
  408fc0:	cbz	w22, 409034 <ferror@plt+0x64e4>
  408fc4:	cmp	w22, w8
  408fc8:	b.gt	409034 <ferror@plt+0x64e4>
  408fcc:	ldp	x0, x8, [x24]
  408fd0:	sxtw	x22, w22
  408fd4:	sub	x8, x8, x0
  408fd8:	cmp	x8, x22
  408fdc:	b.cs	408ff0 <ferror@plt+0x64a0>  // b.hs, b.nlast
  408fe0:	mov	x0, x20
  408fe4:	mov	x1, x22
  408fe8:	bl	418058 <_obstack_newchunk@@Base>
  408fec:	ldr	x0, [x20, #24]
  408ff0:	mov	x1, x21
  408ff4:	mov	x2, x22
  408ff8:	bl	4024c0 <memcpy@plt>
  408ffc:	ldp	x8, x9, [x24]
  409000:	add	x8, x8, x22
  409004:	sub	x9, x9, x8
  409008:	cmp	x9, #0x2
  40900c:	str	x8, [x24]
  409010:	b.hi	409024 <ferror@plt+0x64d4>  // b.pmore
  409014:	mov	w1, #0x3                   	// #3
  409018:	mov	x0, x20
  40901c:	bl	418058 <_obstack_newchunk@@Base>
  409020:	ldr	x8, [x20, #24]
  409024:	mov	w22, #0x3                   	// #3
  409028:	strb	w26, [x8, #2]
  40902c:	strh	w27, [x8]
  409030:	b	409064 <ferror@plt+0x6514>
  409034:	ldp	x0, x9, [x24]
  409038:	sxtw	x22, w8
  40903c:	sub	x8, x9, x0
  409040:	cmp	x8, x22
  409044:	b.cs	409058 <ferror@plt+0x6508>  // b.hs, b.nlast
  409048:	mov	x0, x20
  40904c:	mov	x1, x22
  409050:	bl	418058 <_obstack_newchunk@@Base>
  409054:	ldr	x0, [x20, #24]
  409058:	mov	x1, x21
  40905c:	mov	x2, x22
  409060:	bl	4024c0 <memcpy@plt>
  409064:	ldr	x8, [x25, #2120]
  409068:	add	x8, x8, x22
  40906c:	str	x8, [x25, #2120]
  409070:	b	408e98 <ferror@plt+0x6348>
  409074:	ldp	x20, x19, [sp, #304]
  409078:	ldp	x22, x21, [sp, #288]
  40907c:	ldp	x24, x23, [sp, #272]
  409080:	ldp	x26, x25, [sp, #256]
  409084:	ldp	x28, x27, [sp, #240]
  409088:	ldp	x29, x30, [sp, #224]
  40908c:	add	sp, sp, #0x140
  409090:	ret
  409094:	stp	x29, x30, [sp, #-48]!
  409098:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40909c:	str	x21, [sp, #16]
  4090a0:	stp	x20, x19, [sp, #32]
  4090a4:	add	x8, x8, #0x848
  4090a8:	ldp	x8, x9, [x8]
  4090ac:	mov	x29, sp
  4090b0:	cmp	x9, x8
  4090b4:	b.ne	4090d0 <ferror@plt+0x6580>  // b.any
  4090b8:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4090bc:	add	x19, x19, #0x830
  4090c0:	mov	w1, #0x1                   	// #1
  4090c4:	mov	x0, x19
  4090c8:	bl	418058 <_obstack_newchunk@@Base>
  4090cc:	ldr	x8, [x19, #24]
  4090d0:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4090d4:	add	x9, x8, #0x1
  4090d8:	add	x20, x20, #0x840
  4090dc:	str	x9, [x20, #8]
  4090e0:	strb	wzr, [x8]
  4090e4:	ldp	x19, x10, [x20]
  4090e8:	cmp	x10, x19
  4090ec:	b.ne	409100 <ferror@plt+0x65b0>  // b.any
  4090f0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4090f4:	ldrb	w9, [x8, #2176]
  4090f8:	orr	w9, w9, #0x2
  4090fc:	strb	w9, [x8, #2176]
  409100:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409104:	add	x21, x21, #0x838
  409108:	ldr	x11, [x21, #40]
  40910c:	ldr	x9, [x21]
  409110:	ldr	x8, [x21, #24]
  409114:	adrp	x12, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409118:	add	x10, x11, x10
  40911c:	ldr	x0, [x12, #2088]
  409120:	bic	x10, x10, x11
  409124:	sub	x12, x8, x9
  409128:	sub	x11, x10, x9
  40912c:	cmp	x11, x12
  409130:	csel	x10, x8, x10, hi  // hi = pmore
  409134:	stp	x10, x10, [x21, #8]
  409138:	cbz	x0, 409154 <ferror@plt+0x6604>
  40913c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  409140:	add	x1, x1, #0x299
  409144:	mov	x2, x19
  409148:	bl	4177a8 <ferror@plt+0x14c58>
  40914c:	ldr	x9, [x21]
  409150:	ldr	x8, [x21, #24]
  409154:	cmp	x19, x9
  409158:	b.ls	409178 <ferror@plt+0x6628>  // b.plast
  40915c:	cmp	x19, x8
  409160:	b.cs	409178 <ferror@plt+0x6628>  // b.hs, b.nlast
  409164:	stp	x19, x19, [x20]
  409168:	ldp	x20, x19, [sp, #32]
  40916c:	ldr	x21, [sp, #16]
  409170:	ldp	x29, x30, [sp], #48
  409174:	ret
  409178:	mov	x1, x19
  40917c:	ldp	x20, x19, [sp, #32]
  409180:	ldr	x21, [sp, #16]
  409184:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409188:	add	x0, x0, #0x830
  40918c:	ldp	x29, x30, [sp], #48
  409190:	b	4181d0 <_obstack_free@@Base>
  409194:	stp	x29, x30, [sp, #-80]!
  409198:	stp	x22, x21, [sp, #48]
  40919c:	mov	x21, x0
  4091a0:	mov	w0, w1
  4091a4:	str	x25, [sp, #16]
  4091a8:	stp	x24, x23, [sp, #32]
  4091ac:	stp	x20, x19, [sp, #64]
  4091b0:	mov	x29, sp
  4091b4:	mov	x19, x3
  4091b8:	mov	w20, w2
  4091bc:	bl	408d40 <ferror@plt+0x61f0>
  4091c0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4091c4:	add	x0, x0, #0x8de
  4091c8:	mov	x1, x21
  4091cc:	bl	408df0 <ferror@plt+0x62a0>
  4091d0:	cmp	w20, #0x2
  4091d4:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4091d8:	b.lt	409284 <ferror@plt+0x6734>  // b.tstop
  4091dc:	ldrb	w8, [x21, #1172]
  4091e0:	tbz	w8, #0, 409284 <ferror@plt+0x6734>
  4091e4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4091e8:	add	x0, x0, #0xa35
  4091ec:	bl	408df0 <ferror@plt+0x62a0>
  4091f0:	mov	w8, w20
  4091f4:	add	x20, x19, #0x8
  4091f8:	adrp	x23, 419000 <_obstack_memory_used@@Base+0xd94>
  4091fc:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409200:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409204:	mov	x22, xzr
  409208:	add	x23, x23, #0xfb
  40920c:	add	x24, x24, #0xac7
  409210:	sub	x25, x8, #0x1
  409214:	add	x19, x19, #0xa37
  409218:	b	409234 <ferror@plt+0x66e4>
  40921c:	ldr	x1, [x0]
  409220:	mov	x0, x2
  409224:	bl	408df0 <ferror@plt+0x62a0>
  409228:	add	x22, x22, #0x1
  40922c:	cmp	x25, x22
  409230:	b.eq	409278 <ferror@plt+0x6728>  // b.none
  409234:	cbz	x22, 409240 <ferror@plt+0x66f0>
  409238:	mov	x0, x19
  40923c:	bl	408df0 <ferror@plt+0x62a0>
  409240:	ldr	x8, [x20, x22, lsl #3]
  409244:	ldr	w9, [x8]
  409248:	cmp	w9, #0x2
  40924c:	b.eq	409264 <ferror@plt+0x6714>  // b.none
  409250:	cmp	w9, #0x1
  409254:	b.ne	4092c8 <ferror@plt+0x6778>  // b.any
  409258:	add	x0, x8, #0x8
  40925c:	mov	x2, x24
  409260:	b	40921c <ferror@plt+0x66cc>
  409264:	ldr	x0, [x8, #8]
  409268:	bl	4036d4 <ferror@plt+0xb84>
  40926c:	cbz	x0, 4092dc <ferror@plt+0x678c>
  409270:	mov	x2, x23
  409274:	b	40921c <ferror@plt+0x66cc>
  409278:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40927c:	add	x0, x0, #0x528
  409280:	bl	408df0 <ferror@plt+0x62a0>
  409284:	ldrb	w8, [x21, #1172]
  409288:	tbnz	w8, #7, 4092a4 <ferror@plt+0x6754>
  40928c:	ldp	x20, x19, [sp, #64]
  409290:	ldp	x22, x21, [sp, #48]
  409294:	ldp	x24, x23, [sp, #32]
  409298:	ldr	x25, [sp, #16]
  40929c:	ldp	x29, x30, [sp], #80
  4092a0:	ret
  4092a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4092a8:	add	x0, x0, #0xab0
  4092ac:	bl	408df0 <ferror@plt+0x62a0>
  4092b0:	ldp	x20, x19, [sp, #64]
  4092b4:	ldp	x22, x21, [sp, #48]
  4092b8:	ldp	x24, x23, [sp, #32]
  4092bc:	ldr	x25, [sp, #16]
  4092c0:	ldp	x29, x30, [sp], #80
  4092c4:	b	409094 <ferror@plt+0x6544>
  4092c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4092cc:	ldr	w0, [x8, #1192]
  4092d0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4092d4:	add	x2, x2, #0xa7d
  4092d8:	b	4092ec <ferror@plt+0x679c>
  4092dc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4092e0:	ldr	w0, [x8, #1192]
  4092e4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4092e8:	add	x2, x2, #0xa3a
  4092ec:	mov	w1, wzr
  4092f0:	bl	402c5c <ferror@plt+0x10c>
  4092f4:	bl	402860 <abort@plt>
  4092f8:	stp	x29, x30, [sp, #-48]!
  4092fc:	stp	x22, x21, [sp, #16]
  409300:	stp	x20, x19, [sp, #32]
  409304:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409308:	ldrb	w8, [x22, #1172]
  40930c:	mov	x19, x3
  409310:	mov	x29, sp
  409314:	tbz	w8, #7, 409350 <ferror@plt+0x6800>
  409318:	mov	x20, x0
  40931c:	mov	w0, w1
  409320:	mov	w21, w2
  409324:	bl	408d40 <ferror@plt+0x61f0>
  409328:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40932c:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409330:	add	x8, x8, #0x67f
  409334:	add	x9, x9, #0xabd
  409338:	cmp	w21, #0x1
  40933c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409340:	csel	x2, x9, x8, gt
  409344:	add	x0, x0, #0xab8
  409348:	mov	x1, x20
  40934c:	bl	408df0 <ferror@plt+0x62a0>
  409350:	cbz	x19, 40936c <ferror@plt+0x681c>
  409354:	ldrb	w8, [x22, #1172]
  409358:	tbz	w8, #1, 40936c <ferror@plt+0x681c>
  40935c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409360:	add	x0, x0, #0xac3
  409364:	mov	x1, x19
  409368:	bl	408df0 <ferror@plt+0x62a0>
  40936c:	ldp	x20, x19, [sp, #32]
  409370:	ldp	x22, x21, [sp, #16]
  409374:	ldp	x29, x30, [sp], #48
  409378:	b	409094 <ferror@plt+0x6544>
  40937c:	stp	x29, x30, [sp, #-48]!
  409380:	str	x21, [sp, #16]
  409384:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409388:	stp	x20, x19, [sp, #32]
  40938c:	mov	x19, x0
  409390:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409394:	str	x0, [x21, #2184]
  409398:	mov	x0, x1
  40939c:	mov	x29, sp
  4093a0:	mov	x20, x1
  4093a4:	str	xzr, [x8, #2192]
  4093a8:	bl	4094ec <ferror@plt+0x699c>
  4093ac:	mov	x1, x20
  4093b0:	bl	4098e4 <ferror@plt+0x6d94>
  4093b4:	cmp	w0, #0x8
  4093b8:	b.hi	4094d0 <ferror@plt+0x6980>  // b.pmore
  4093bc:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4093c0:	mov	w8, w0
  4093c4:	add	x9, x9, #0xb04
  4093c8:	adr	x10, 4093d8 <ferror@plt+0x6888>
  4093cc:	ldrb	w11, [x9, x8]
  4093d0:	add	x10, x10, x11, lsl #2
  4093d4:	br	x10
  4093d8:	ldr	x8, [x21, #2184]
  4093dc:	ldrb	w8, [x8]
  4093e0:	cbz	w8, 4094c8 <ferror@plt+0x6978>
  4093e4:	mov	x0, x20
  4093e8:	bl	4094ec <ferror@plt+0x699c>
  4093ec:	cmp	w0, #0x1
  4093f0:	b.ne	409420 <ferror@plt+0x68d0>  // b.any
  4093f4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4093f8:	ldr	w0, [x8, #1192]
  4093fc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409400:	add	x2, x2, #0xc12
  409404:	mov	w1, wzr
  409408:	mov	x3, x19
  40940c:	bl	402c5c <ferror@plt+0x10c>
  409410:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  409414:	mov	w0, #0x1                   	// #1
  409418:	str	w0, [x8, #3488]
  40941c:	b	4094b8 <ferror@plt+0x6968>
  409420:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409424:	ldr	w0, [x8, #1192]
  409428:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40942c:	add	x2, x2, #0xbe8
  409430:	b	4094a8 <ferror@plt+0x6958>
  409434:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409438:	ldr	w0, [x8, #1192]
  40943c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409440:	add	x2, x2, #0xc4a
  409444:	b	4094a8 <ferror@plt+0x6958>
  409448:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40944c:	ldr	w0, [x8, #1192]
  409450:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409454:	add	x2, x2, #0xc2f
  409458:	b	4094a8 <ferror@plt+0x6958>
  40945c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409460:	ldr	w0, [x8, #1192]
  409464:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409468:	add	x2, x2, #0xb6f
  40946c:	b	4094a8 <ferror@plt+0x6958>
  409470:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409474:	ldr	w0, [x8, #1192]
  409478:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40947c:	add	x2, x2, #0xc65
  409480:	b	4094a8 <ferror@plt+0x6958>
  409484:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409488:	ldr	w0, [x8, #1192]
  40948c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409490:	add	x2, x2, #0xba6
  409494:	b	4094a8 <ferror@plt+0x6958>
  409498:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40949c:	ldr	w0, [x8, #1192]
  4094a0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4094a4:	add	x2, x2, #0xbc1
  4094a8:	mov	w1, wzr
  4094ac:	mov	x3, x19
  4094b0:	bl	402c5c <ferror@plt+0x10c>
  4094b4:	mov	w0, #0x1                   	// #1
  4094b8:	ldp	x20, x19, [sp, #32]
  4094bc:	ldr	x21, [sp, #16]
  4094c0:	ldp	x29, x30, [sp], #48
  4094c4:	ret
  4094c8:	mov	w0, wzr
  4094cc:	b	4094b8 <ferror@plt+0x6968>
  4094d0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4094d4:	ldr	w0, [x8, #1192]
  4094d8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4094dc:	add	x2, x2, #0xc83
  4094e0:	mov	w1, wzr
  4094e4:	bl	402c5c <ferror@plt+0x10c>
  4094e8:	bl	402860 <abort@plt>
  4094ec:	stp	x29, x30, [sp, #-32]!
  4094f0:	str	x19, [sp, #16]
  4094f4:	mov	x29, sp
  4094f8:	mov	x19, x0
  4094fc:	bl	4028e0 <__ctype_b_loc@plt>
  409500:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409504:	ldr	x11, [x8, #2184]
  409508:	ldr	x9, [x0]
  40950c:	ldrb	w10, [x11]
  409510:	ldrh	w12, [x9, x10, lsl #1]
  409514:	tbz	w12, #13, 409528 <ferror@plt+0x69d8>
  409518:	ldrb	w10, [x11, #1]!
  40951c:	ldrh	w12, [x9, x10, lsl #1]
  409520:	tbnz	w12, #13, 409518 <ferror@plt+0x69c8>
  409524:	str	x11, [x8, #2184]
  409528:	adrp	x13, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40952c:	str	x11, [x13, #2192]
  409530:	cbz	w10, 409584 <ferror@plt+0x6a34>
  409534:	tbnz	w12, #11, 40958c <ferror@plt+0x6a3c>
  409538:	sub	w10, w10, #0x21
  40953c:	add	x9, x11, #0x1
  409540:	cmp	w10, #0x5d
  409544:	str	x9, [x8, #2184]
  409548:	b.hi	409620 <ferror@plt+0x6ad0>  // b.pmore
  40954c:	adrp	x12, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409550:	add	x12, x12, #0xb0d
  409554:	adr	x13, 409568 <ferror@plt+0x6a18>
  409558:	ldrb	w14, [x12, x10]
  40955c:	add	x13, x13, x14, lsl #2
  409560:	mov	w0, #0x14                  	// #20
  409564:	br	x13
  409568:	ldrb	w9, [x9]
  40956c:	cmp	w9, #0x3d
  409570:	b.ne	409874 <ferror@plt+0x6d24>  // b.any
  409574:	add	x9, x11, #0x2
  409578:	str	x9, [x8, #2184]
  40957c:	mov	w0, #0xa                   	// #10
  409580:	b	40970c <ferror@plt+0x6bbc>
  409584:	mov	w0, #0x1b                  	// #27
  409588:	b	40970c <ferror@plt+0x6bbc>
  40958c:	cmp	w10, #0x30
  409590:	b.ne	4095f0 <ferror@plt+0x6aa0>  // b.any
  409594:	add	x12, x11, #0x1
  409598:	str	x12, [x8, #2184]
  40959c:	ldrb	w10, [x11, #1]
  4095a0:	sub	w13, w10, #0x42
  4095a4:	cmp	w13, #0x36
  4095a8:	mov	w10, #0x8                   	// #8
  4095ac:	b.hi	409678 <ferror@plt+0x6b28>  // b.pmore
  4095b0:	mov	w14, #0x1                   	// #1
  4095b4:	lsl	x14, x14, x13
  4095b8:	tst	x14, #0x100000001
  4095bc:	b.ne	4095fc <ferror@plt+0x6aac>  // b.any
  4095c0:	mov	w14, #0x1                   	// #1
  4095c4:	lsl	x14, x14, x13
  4095c8:	tst	x14, #0x1000000010000
  4095cc:	b.ne	40960c <ferror@plt+0x6abc>  // b.any
  4095d0:	mov	w14, #0x1                   	// #1
  4095d4:	lsl	x13, x14, x13
  4095d8:	tst	x13, #0x40000000400000
  4095dc:	b.eq	409678 <ferror@plt+0x6b28>  // b.none
  4095e0:	add	x12, x11, #0x2
  4095e4:	str	x12, [x8, #2184]
  4095e8:	mov	w10, #0x10                  	// #16
  4095ec:	b	409678 <ferror@plt+0x6b28>
  4095f0:	mov	w10, #0xa                   	// #10
  4095f4:	mov	x12, x11
  4095f8:	b	409678 <ferror@plt+0x6b28>
  4095fc:	add	x12, x11, #0x2
  409600:	str	x12, [x8, #2184]
  409604:	mov	w10, #0x2                   	// #2
  409608:	b	409678 <ferror@plt+0x6b28>
  40960c:	add	x10, x11, #0x2
  409610:	str	x10, [x8, #2184]
  409614:	ldrb	w13, [x11, #2]
  409618:	ldrh	w10, [x9, x13, lsl #1]
  40961c:	tbnz	w10, #11, 409628 <ferror@plt+0x6ad8>
  409620:	mov	w0, wzr
  409624:	b	40970c <ferror@plt+0x6bbc>
  409628:	mov	w10, wzr
  40962c:	add	x12, x11, #0x3
  409630:	mov	w11, #0xa                   	// #10
  409634:	mul	w10, w10, w11
  409638:	add	w10, w10, w13, uxtb
  40963c:	ldrb	w13, [x12], #1
  409640:	sub	w10, w10, #0x30
  409644:	cmp	w10, #0x24
  409648:	b.gt	409654 <ferror@plt+0x6b04>
  40964c:	ldrh	w14, [x9, x13, lsl #1]
  409650:	tbnz	w14, #11, 409634 <ferror@plt+0x6ae4>
  409654:	mov	w0, wzr
  409658:	sub	x11, x12, #0x1
  40965c:	str	x11, [x8, #2184]
  409660:	cbz	w10, 40970c <ferror@plt+0x6bbc>
  409664:	cmp	w10, #0x24
  409668:	b.gt	40970c <ferror@plt+0x6bbc>
  40966c:	cmp	w13, #0x3a
  409670:	b.ne	40970c <ferror@plt+0x6bbc>  // b.any
  409674:	str	x12, [x8, #2184]
  409678:	str	wzr, [x19]
  40967c:	ldrb	w15, [x12]
  409680:	cbz	w15, 409708 <ferror@plt+0x6bb8>
  409684:	mov	w13, wzr
  409688:	mov	w14, wzr
  40968c:	add	x11, x12, #0x1
  409690:	b	4096a8 <ferror@plt+0x6b58>
  409694:	mov	w14, w13
  409698:	str	w13, [x19]
  40969c:	str	x11, [x8, #2184]
  4096a0:	ldrb	w15, [x11], #1
  4096a4:	cbz	w15, 409708 <ferror@plt+0x6bb8>
  4096a8:	and	x12, x15, #0xff
  4096ac:	ldrh	w12, [x9, x12, lsl #1]
  4096b0:	tbnz	w12, #11, 4096c4 <ferror@plt+0x6b74>
  4096b4:	tbnz	w12, #9, 4096cc <ferror@plt+0x6b7c>
  4096b8:	tbz	w12, #8, 409708 <ferror@plt+0x6bb8>
  4096bc:	mov	w12, #0xffffffc9            	// #-55
  4096c0:	b	4096d0 <ferror@plt+0x6b80>
  4096c4:	mov	w12, #0xffffffd0            	// #-48
  4096c8:	b	4096d0 <ferror@plt+0x6b80>
  4096cc:	mov	w12, #0xffffffa9            	// #-87
  4096d0:	and	w15, w15, #0xff
  4096d4:	cmp	w10, #0x1
  4096d8:	add	w12, w12, w15
  4096dc:	b.ne	4096f4 <ferror@plt+0x6ba4>  // b.any
  4096e0:	cbz	w12, 409704 <ferror@plt+0x6bb4>
  4096e4:	cmp	w12, #0x1
  4096e8:	b.ne	409708 <ferror@plt+0x6bb8>  // b.any
  4096ec:	add	w13, w13, #0x1
  4096f0:	b	409694 <ferror@plt+0x6b44>
  4096f4:	cmp	w12, w10
  4096f8:	b.ge	409708 <ferror@plt+0x6bb8>  // b.tcont
  4096fc:	madd	w13, w14, w10, w12
  409700:	b	409694 <ferror@plt+0x6b44>
  409704:	cbz	w14, 40969c <ferror@plt+0x6b4c>
  409708:	mov	w0, #0x1a                  	// #26
  40970c:	ldr	x19, [sp, #16]
  409710:	ldp	x29, x30, [sp], #32
  409714:	ret
  409718:	ldrb	w8, [x9]
  40971c:	cmp	w8, #0x3d
  409720:	mov	w8, #0x7                   	// #7
  409724:	csinc	w0, w8, wzr, ne  // ne = any
  409728:	b	40970c <ferror@plt+0x6bbc>
  40972c:	ldrb	w9, [x9]
  409730:	cmp	w9, #0x3d
  409734:	b.eq	40986c <ferror@plt+0x6d1c>  // b.none
  409738:	cmp	w9, #0x26
  40973c:	b.ne	409884 <ferror@plt+0x6d34>  // b.any
  409740:	add	x9, x11, #0x2
  409744:	str	x9, [x8, #2184]
  409748:	mov	w0, #0x12                  	// #18
  40974c:	b	40970c <ferror@plt+0x6bbc>
  409750:	mov	w0, #0x18                  	// #24
  409754:	b	40970c <ferror@plt+0x6bbc>
  409758:	mov	w0, #0x19                  	// #25
  40975c:	b	40970c <ferror@plt+0x6bbc>
  409760:	ldrb	w9, [x9]
  409764:	cmp	w9, #0x3d
  409768:	b.eq	40986c <ferror@plt+0x6d1c>  // b.none
  40976c:	cmp	w9, #0x2a
  409770:	b.ne	40988c <ferror@plt+0x6d3c>  // b.any
  409774:	add	x9, x11, #0x2
  409778:	str	x9, [x8, #2184]
  40977c:	mov	w0, #0x4                   	// #4
  409780:	b	40970c <ferror@plt+0x6bbc>
  409784:	ldrb	w8, [x9]
  409788:	mov	w0, #0x1                   	// #1
  40978c:	cmp	w8, #0x2b
  409790:	b.eq	40970c <ferror@plt+0x6bbc>  // b.none
  409794:	cmp	w8, #0x3d
  409798:	b.eq	40970c <ferror@plt+0x6bbc>  // b.none
  40979c:	mov	w0, #0x2                   	// #2
  4097a0:	b	40970c <ferror@plt+0x6bbc>
  4097a4:	ldrb	w8, [x9]
  4097a8:	orr	w8, w8, #0x10
  4097ac:	cmp	w8, #0x3d
  4097b0:	b.eq	40986c <ferror@plt+0x6d1c>  // b.none
  4097b4:	mov	w0, #0x3                   	// #3
  4097b8:	b	40970c <ferror@plt+0x6bbc>
  4097bc:	ldrb	w8, [x9]
  4097c0:	cmp	w8, #0x3d
  4097c4:	mov	w8, #0x6                   	// #6
  4097c8:	csinc	w0, w8, wzr, ne  // ne = any
  4097cc:	b	40970c <ferror@plt+0x6bbc>
  4097d0:	ldrb	w9, [x9]
  4097d4:	cmp	w9, #0x3c
  4097d8:	b.eq	409894 <ferror@plt+0x6d44>  // b.none
  4097dc:	cmp	w9, #0x3d
  4097e0:	b.ne	4098b0 <ferror@plt+0x6d60>  // b.any
  4097e4:	add	x9, x11, #0x2
  4097e8:	str	x9, [x8, #2184]
  4097ec:	mov	w0, #0xe                   	// #14
  4097f0:	b	40970c <ferror@plt+0x6bbc>
  4097f4:	ldrb	w9, [x9]
  4097f8:	cmp	w9, #0x3d
  4097fc:	b.ne	40987c <ferror@plt+0x6d2c>  // b.any
  409800:	add	x9, x11, #0x2
  409804:	str	x9, [x8, #2184]
  409808:	mov	w0, #0x9                   	// #9
  40980c:	b	40970c <ferror@plt+0x6bbc>
  409810:	ldrb	w9, [x9]
  409814:	cmp	w9, #0x3e
  409818:	b.eq	4098b8 <ferror@plt+0x6d68>  // b.none
  40981c:	cmp	w9, #0x3d
  409820:	b.ne	4098d4 <ferror@plt+0x6d84>  // b.any
  409824:	add	x9, x11, #0x2
  409828:	str	x9, [x8, #2184]
  40982c:	mov	w0, #0xc                   	// #12
  409830:	b	40970c <ferror@plt+0x6bbc>
  409834:	ldrb	w8, [x9]
  409838:	cmp	w8, #0x3d
  40983c:	mov	w8, #0x17                  	// #23
  409840:	csinc	w0, w8, wzr, ne  // ne = any
  409844:	b	40970c <ferror@plt+0x6bbc>
  409848:	ldrb	w9, [x9]
  40984c:	cmp	w9, #0x3d
  409850:	b.eq	40986c <ferror@plt+0x6d1c>  // b.none
  409854:	cmp	w9, #0x7c
  409858:	b.ne	4098dc <ferror@plt+0x6d8c>  // b.any
  40985c:	add	x9, x11, #0x2
  409860:	str	x9, [x8, #2184]
  409864:	mov	w0, #0x13                  	// #19
  409868:	b	40970c <ferror@plt+0x6bbc>
  40986c:	mov	w0, #0x1                   	// #1
  409870:	b	40970c <ferror@plt+0x6bbc>
  409874:	mov	w0, #0x11                  	// #17
  409878:	b	40970c <ferror@plt+0x6bbc>
  40987c:	mov	w0, #0x8                   	// #8
  409880:	b	40970c <ferror@plt+0x6bbc>
  409884:	mov	w0, #0x15                  	// #21
  409888:	b	40970c <ferror@plt+0x6bbc>
  40988c:	mov	w0, #0x5                   	// #5
  409890:	b	40970c <ferror@plt+0x6bbc>
  409894:	add	x9, x11, #0x2
  409898:	str	x9, [x8, #2184]
  40989c:	ldrb	w8, [x11, #2]
  4098a0:	cmp	w8, #0x3d
  4098a4:	mov	w8, #0xf                   	// #15
  4098a8:	csinc	w0, w8, wzr, ne  // ne = any
  4098ac:	b	40970c <ferror@plt+0x6bbc>
  4098b0:	mov	w0, #0xd                   	// #13
  4098b4:	b	40970c <ferror@plt+0x6bbc>
  4098b8:	add	x9, x11, #0x2
  4098bc:	str	x9, [x8, #2184]
  4098c0:	ldrb	w8, [x11, #2]
  4098c4:	cmp	w8, #0x3d
  4098c8:	mov	w8, #0x10                  	// #16
  4098cc:	csinc	w0, w8, wzr, ne  // ne = any
  4098d0:	b	40970c <ferror@plt+0x6bbc>
  4098d4:	mov	w0, #0xb                   	// #11
  4098d8:	b	40970c <ferror@plt+0x6bbc>
  4098dc:	mov	w0, #0x16                  	// #22
  4098e0:	b	40970c <ferror@plt+0x6bbc>
  4098e4:	stp	x29, x30, [sp, #-32]!
  4098e8:	str	x19, [sp, #16]
  4098ec:	mov	x29, sp
  4098f0:	mov	x19, x1
  4098f4:	bl	409984 <ferror@plt+0x6e34>
  4098f8:	cbnz	w0, 409978 <ferror@plt+0x6e28>
  4098fc:	b	409914 <ferror@plt+0x6dc4>
  409900:	ldr	w9, [x29, #28]
  409904:	orr	w8, w9, w8
  409908:	cmp	w8, #0x0
  40990c:	cset	w8, ne  // ne = any
  409910:	str	w8, [x19]
  409914:	add	x0, x29, #0x1c
  409918:	bl	4094ec <ferror@plt+0x699c>
  40991c:	cmp	w0, #0x13
  409920:	b.ne	409958 <ferror@plt+0x6e08>  // b.any
  409924:	add	x0, x29, #0x1c
  409928:	bl	4094ec <ferror@plt+0x699c>
  40992c:	cbz	w0, 40995c <ferror@plt+0x6e0c>
  409930:	add	x1, x29, #0x1c
  409934:	bl	409984 <ferror@plt+0x6e34>
  409938:	ldr	w8, [x19]
  40993c:	cbz	w0, 409900 <ferror@plt+0x6db0>
  409940:	cmp	w0, #0x3
  409944:	b.hi	409978 <ferror@plt+0x6e28>  // b.pmore
  409948:	cbz	w8, 409978 <ferror@plt+0x6e28>
  40994c:	mov	w8, #0x1                   	// #1
  409950:	str	w8, [x19]
  409954:	b	409914 <ferror@plt+0x6dc4>
  409958:	cbnz	w0, 409964 <ferror@plt+0x6e14>
  40995c:	mov	w0, #0x6                   	// #6
  409960:	b	409978 <ferror@plt+0x6e28>
  409964:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409968:	ldr	x8, [x8, #2192]
  40996c:	mov	w0, wzr
  409970:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409974:	str	x8, [x9, #2184]
  409978:	ldr	x19, [sp, #16]
  40997c:	ldp	x29, x30, [sp], #32
  409980:	ret
  409984:	sub	sp, sp, #0x50
  409988:	stp	x29, x30, [sp, #16]
  40998c:	stp	x24, x23, [sp, #32]
  409990:	stp	x22, x21, [sp, #48]
  409994:	stp	x20, x19, [sp, #64]
  409998:	add	x29, sp, #0x10
  40999c:	mov	x19, x1
  4099a0:	bl	409e90 <ferror@plt+0x7340>
  4099a4:	cbnz	w0, 409a8c <ferror@plt+0x6f3c>
  4099a8:	b	4099bc <ferror@plt+0x6e6c>
  4099ac:	ldur	w8, [x29, #-4]
  4099b0:	ldr	w9, [x19]
  4099b4:	and	w8, w9, w8
  4099b8:	str	w8, [x19]
  4099bc:	sub	x0, x29, #0x4
  4099c0:	bl	4094ec <ferror@plt+0x699c>
  4099c4:	cmp	w0, #0x15
  4099c8:	b.ne	4099e8 <ferror@plt+0x6e98>  // b.any
  4099cc:	sub	x0, x29, #0x4
  4099d0:	bl	4094ec <ferror@plt+0x699c>
  4099d4:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  4099d8:	sub	x1, x29, #0x4
  4099dc:	bl	409e90 <ferror@plt+0x7340>
  4099e0:	cbz	w0, 4099ac <ferror@plt+0x6e5c>
  4099e4:	b	409a8c <ferror@plt+0x6f3c>
  4099e8:	cbnz	w0, 4099f4 <ferror@plt+0x6ea4>
  4099ec:	mov	w0, #0x6                   	// #6
  4099f0:	b	409a8c <ferror@plt+0x6f3c>
  4099f4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4099f8:	ldr	x8, [x20, #2192]
  4099fc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409a00:	str	x8, [x21, #2184]
  409a04:	add	x0, sp, #0x8
  409a08:	bl	4094ec <ferror@plt+0x699c>
  409a0c:	cmp	w0, #0x17
  409a10:	b.ne	409aa4 <ferror@plt+0x6f54>  // b.any
  409a14:	add	x0, sp, #0x8
  409a18:	bl	4094ec <ferror@plt+0x699c>
  409a1c:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409a20:	add	x1, sp, #0x8
  409a24:	bl	409e90 <ferror@plt+0x7340>
  409a28:	cbnz	w0, 409a8c <ferror@plt+0x6f3c>
  409a2c:	ldr	w22, [sp, #8]
  409a30:	sub	x0, x29, #0x4
  409a34:	bl	4094ec <ferror@plt+0x699c>
  409a38:	cmp	w0, #0x15
  409a3c:	b.ne	409a64 <ferror@plt+0x6f14>  // b.any
  409a40:	sub	x0, x29, #0x4
  409a44:	bl	4094ec <ferror@plt+0x699c>
  409a48:	cbz	w0, 409a84 <ferror@plt+0x6f34>
  409a4c:	sub	x1, x29, #0x4
  409a50:	bl	409e90 <ferror@plt+0x7340>
  409a54:	cbnz	w0, 409a88 <ferror@plt+0x6f38>
  409a58:	ldur	w8, [x29, #-4]
  409a5c:	and	w22, w22, w8
  409a60:	b	409a30 <ferror@plt+0x6ee0>
  409a64:	cbz	w0, 409a84 <ferror@plt+0x6f34>
  409a68:	ldr	x8, [x20, #2192]
  409a6c:	str	w22, [sp, #8]
  409a70:	str	x8, [x21, #2184]
  409a74:	ldr	w8, [x19]
  409a78:	eor	w8, w8, w22
  409a7c:	str	w8, [x19]
  409a80:	b	409a04 <ferror@plt+0x6eb4>
  409a84:	mov	w0, #0x6                   	// #6
  409a88:	str	w22, [sp, #8]
  409a8c:	ldp	x20, x19, [sp, #64]
  409a90:	ldp	x22, x21, [sp, #48]
  409a94:	ldp	x24, x23, [sp, #32]
  409a98:	ldp	x29, x30, [sp, #16]
  409a9c:	add	sp, sp, #0x50
  409aa0:	ret
  409aa4:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409aa8:	ldr	x8, [x20, #2192]
  409aac:	str	x8, [x21, #2184]
  409ab0:	add	x0, sp, #0x4
  409ab4:	bl	4094ec <ferror@plt+0x699c>
  409ab8:	cmp	w0, #0x16
  409abc:	b.ne	409bd0 <ferror@plt+0x7080>  // b.any
  409ac0:	add	x0, sp, #0x4
  409ac4:	bl	4094ec <ferror@plt+0x699c>
  409ac8:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409acc:	add	x1, sp, #0x4
  409ad0:	bl	409e90 <ferror@plt+0x7340>
  409ad4:	cbnz	w0, 409a8c <ferror@plt+0x6f3c>
  409ad8:	ldr	w22, [sp, #4]
  409adc:	sub	x0, x29, #0x4
  409ae0:	bl	4094ec <ferror@plt+0x699c>
  409ae4:	cmp	w0, #0x15
  409ae8:	b.ne	409b10 <ferror@plt+0x6fc0>  // b.any
  409aec:	sub	x0, x29, #0x4
  409af0:	bl	4094ec <ferror@plt+0x699c>
  409af4:	cbz	w0, 409bb8 <ferror@plt+0x7068>
  409af8:	sub	x1, x29, #0x4
  409afc:	bl	409e90 <ferror@plt+0x7340>
  409b00:	cbnz	w0, 409bbc <ferror@plt+0x706c>
  409b04:	ldur	w8, [x29, #-4]
  409b08:	and	w22, w22, w8
  409b0c:	b	409adc <ferror@plt+0x6f8c>
  409b10:	cbz	w0, 409bb8 <ferror@plt+0x7068>
  409b14:	ldr	x8, [x20, #2192]
  409b18:	str	w22, [sp, #4]
  409b1c:	str	x8, [x21, #2184]
  409b20:	add	x0, sp, #0x8
  409b24:	bl	4094ec <ferror@plt+0x699c>
  409b28:	cmp	w0, #0x17
  409b2c:	b.ne	409b98 <ferror@plt+0x7048>  // b.any
  409b30:	add	x0, sp, #0x8
  409b34:	bl	4094ec <ferror@plt+0x699c>
  409b38:	cbz	w0, 409e64 <ferror@plt+0x7314>
  409b3c:	add	x1, sp, #0x8
  409b40:	bl	409e90 <ferror@plt+0x7340>
  409b44:	cbnz	w0, 409bbc <ferror@plt+0x706c>
  409b48:	ldr	w23, [sp, #8]
  409b4c:	sub	x0, x29, #0x4
  409b50:	bl	4094ec <ferror@plt+0x699c>
  409b54:	cmp	w0, #0x15
  409b58:	b.ne	409b80 <ferror@plt+0x7030>  // b.any
  409b5c:	sub	x0, x29, #0x4
  409b60:	bl	4094ec <ferror@plt+0x699c>
  409b64:	cbz	w0, 409bc4 <ferror@plt+0x7074>
  409b68:	sub	x1, x29, #0x4
  409b6c:	bl	409e90 <ferror@plt+0x7340>
  409b70:	cbnz	w0, 409bc8 <ferror@plt+0x7078>
  409b74:	ldur	w8, [x29, #-4]
  409b78:	and	w23, w23, w8
  409b7c:	b	409b4c <ferror@plt+0x6ffc>
  409b80:	cbz	w0, 409bc4 <ferror@plt+0x7074>
  409b84:	ldr	x8, [x20, #2192]
  409b88:	str	w23, [sp, #8]
  409b8c:	eor	w22, w22, w23
  409b90:	str	x8, [x21, #2184]
  409b94:	b	409b20 <ferror@plt+0x6fd0>
  409b98:	cbz	w0, 409e64 <ferror@plt+0x7314>
  409b9c:	ldr	x8, [x20, #2192]
  409ba0:	str	w22, [sp, #4]
  409ba4:	str	x8, [x21, #2184]
  409ba8:	ldr	w8, [x19]
  409bac:	orr	w8, w8, w22
  409bb0:	str	w8, [x19]
  409bb4:	b	409ab0 <ferror@plt+0x6f60>
  409bb8:	mov	w0, #0x6                   	// #6
  409bbc:	str	w22, [sp, #4]
  409bc0:	b	409a8c <ferror@plt+0x6f3c>
  409bc4:	mov	w0, #0x6                   	// #6
  409bc8:	stp	w22, w23, [sp, #4]
  409bcc:	b	409a8c <ferror@plt+0x6f3c>
  409bd0:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409bd4:	ldr	x8, [x20, #2192]
  409bd8:	str	x8, [x21, #2184]
  409bdc:	mov	x0, sp
  409be0:	bl	4094ec <ferror@plt+0x699c>
  409be4:	cmp	w0, #0x12
  409be8:	b.ne	409e70 <ferror@plt+0x7320>  // b.any
  409bec:	mov	x0, sp
  409bf0:	bl	4094ec <ferror@plt+0x699c>
  409bf4:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409bf8:	mov	x1, sp
  409bfc:	bl	409e90 <ferror@plt+0x7340>
  409c00:	cbnz	w0, 409c48 <ferror@plt+0x70f8>
  409c04:	ldr	w22, [sp]
  409c08:	sub	x0, x29, #0x4
  409c0c:	bl	4094ec <ferror@plt+0x699c>
  409c10:	cmp	w0, #0x15
  409c14:	b.ne	409c3c <ferror@plt+0x70ec>  // b.any
  409c18:	sub	x0, x29, #0x4
  409c1c:	bl	4094ec <ferror@plt+0x699c>
  409c20:	cbz	w0, 409c40 <ferror@plt+0x70f0>
  409c24:	sub	x1, x29, #0x4
  409c28:	bl	409e90 <ferror@plt+0x7340>
  409c2c:	cbnz	w0, 409c44 <ferror@plt+0x70f4>
  409c30:	ldur	w8, [x29, #-4]
  409c34:	and	w22, w22, w8
  409c38:	b	409c08 <ferror@plt+0x70b8>
  409c3c:	cbnz	w0, 409c5c <ferror@plt+0x710c>
  409c40:	mov	w0, #0x6                   	// #6
  409c44:	str	w22, [sp]
  409c48:	cmp	w0, #0x3
  409c4c:	b.hi	409a8c <ferror@plt+0x6f3c>  // b.pmore
  409c50:	ldr	w8, [x19]
  409c54:	cbz	w8, 409bdc <ferror@plt+0x708c>
  409c58:	b	409a8c <ferror@plt+0x6f3c>
  409c5c:	ldr	x8, [x20, #2192]
  409c60:	str	w22, [sp]
  409c64:	str	x8, [x21, #2184]
  409c68:	add	x0, sp, #0x8
  409c6c:	bl	4094ec <ferror@plt+0x699c>
  409c70:	cmp	w0, #0x17
  409c74:	b.ne	409cf0 <ferror@plt+0x71a0>  // b.any
  409c78:	add	x0, sp, #0x8
  409c7c:	bl	4094ec <ferror@plt+0x699c>
  409c80:	cbz	w0, 409cf4 <ferror@plt+0x71a4>
  409c84:	add	x1, sp, #0x8
  409c88:	bl	409e90 <ferror@plt+0x7340>
  409c8c:	cbnz	w0, 409c44 <ferror@plt+0x70f4>
  409c90:	ldr	w23, [sp, #8]
  409c94:	sub	x0, x29, #0x4
  409c98:	bl	4094ec <ferror@plt+0x699c>
  409c9c:	cmp	w0, #0x15
  409ca0:	b.ne	409cc8 <ferror@plt+0x7178>  // b.any
  409ca4:	sub	x0, x29, #0x4
  409ca8:	bl	4094ec <ferror@plt+0x699c>
  409cac:	cbz	w0, 409ce0 <ferror@plt+0x7190>
  409cb0:	sub	x1, x29, #0x4
  409cb4:	bl	409e90 <ferror@plt+0x7340>
  409cb8:	cbnz	w0, 409ce4 <ferror@plt+0x7194>
  409cbc:	ldur	w8, [x29, #-4]
  409cc0:	and	w23, w23, w8
  409cc4:	b	409c94 <ferror@plt+0x7144>
  409cc8:	cbz	w0, 409ce0 <ferror@plt+0x7190>
  409ccc:	ldr	x8, [x20, #2192]
  409cd0:	str	w23, [sp, #8]
  409cd4:	eor	w22, w22, w23
  409cd8:	str	x8, [x21, #2184]
  409cdc:	b	409c68 <ferror@plt+0x7118>
  409ce0:	mov	w0, #0x6                   	// #6
  409ce4:	str	w22, [sp]
  409ce8:	str	w23, [sp, #8]
  409cec:	b	409c48 <ferror@plt+0x70f8>
  409cf0:	cbnz	w0, 409d00 <ferror@plt+0x71b0>
  409cf4:	str	w22, [sp]
  409cf8:	mov	w0, #0x6                   	// #6
  409cfc:	b	409c48 <ferror@plt+0x70f8>
  409d00:	ldr	x8, [x20, #2192]
  409d04:	str	w22, [sp]
  409d08:	str	x8, [x21, #2184]
  409d0c:	add	x0, sp, #0x4
  409d10:	bl	4094ec <ferror@plt+0x699c>
  409d14:	cmp	w0, #0x16
  409d18:	b.ne	409e28 <ferror@plt+0x72d8>  // b.any
  409d1c:	add	x0, sp, #0x4
  409d20:	bl	4094ec <ferror@plt+0x699c>
  409d24:	cbz	w0, 409e84 <ferror@plt+0x7334>
  409d28:	add	x1, sp, #0x4
  409d2c:	bl	409e90 <ferror@plt+0x7340>
  409d30:	cbnz	w0, 409c44 <ferror@plt+0x70f4>
  409d34:	ldr	w23, [sp, #4]
  409d38:	sub	x0, x29, #0x4
  409d3c:	bl	4094ec <ferror@plt+0x699c>
  409d40:	cmp	w0, #0x15
  409d44:	b.ne	409d6c <ferror@plt+0x721c>  // b.any
  409d48:	sub	x0, x29, #0x4
  409d4c:	bl	4094ec <ferror@plt+0x699c>
  409d50:	cbz	w0, 409e0c <ferror@plt+0x72bc>
  409d54:	sub	x1, x29, #0x4
  409d58:	bl	409e90 <ferror@plt+0x7340>
  409d5c:	cbnz	w0, 409e10 <ferror@plt+0x72c0>
  409d60:	ldur	w8, [x29, #-4]
  409d64:	and	w23, w23, w8
  409d68:	b	409d38 <ferror@plt+0x71e8>
  409d6c:	cbz	w0, 409e0c <ferror@plt+0x72bc>
  409d70:	ldr	x8, [x20, #2192]
  409d74:	str	w23, [sp, #4]
  409d78:	str	x8, [x21, #2184]
  409d7c:	add	x0, sp, #0x8
  409d80:	bl	4094ec <ferror@plt+0x699c>
  409d84:	cmp	w0, #0x17
  409d88:	b.ne	409df4 <ferror@plt+0x72a4>  // b.any
  409d8c:	add	x0, sp, #0x8
  409d90:	bl	4094ec <ferror@plt+0x699c>
  409d94:	cbz	w0, 409e58 <ferror@plt+0x7308>
  409d98:	add	x1, sp, #0x8
  409d9c:	bl	409e90 <ferror@plt+0x7340>
  409da0:	cbnz	w0, 409e10 <ferror@plt+0x72c0>
  409da4:	ldr	w24, [sp, #8]
  409da8:	sub	x0, x29, #0x4
  409dac:	bl	4094ec <ferror@plt+0x699c>
  409db0:	cmp	w0, #0x15
  409db4:	b.ne	409ddc <ferror@plt+0x728c>  // b.any
  409db8:	sub	x0, x29, #0x4
  409dbc:	bl	4094ec <ferror@plt+0x699c>
  409dc0:	cbz	w0, 409e18 <ferror@plt+0x72c8>
  409dc4:	sub	x1, x29, #0x4
  409dc8:	bl	409e90 <ferror@plt+0x7340>
  409dcc:	cbnz	w0, 409e1c <ferror@plt+0x72cc>
  409dd0:	ldur	w8, [x29, #-4]
  409dd4:	and	w24, w24, w8
  409dd8:	b	409da8 <ferror@plt+0x7258>
  409ddc:	cbz	w0, 409e18 <ferror@plt+0x72c8>
  409de0:	ldr	x8, [x20, #2192]
  409de4:	str	w24, [sp, #8]
  409de8:	eor	w23, w23, w24
  409dec:	str	x8, [x21, #2184]
  409df0:	b	409d7c <ferror@plt+0x722c>
  409df4:	cbz	w0, 409e58 <ferror@plt+0x7308>
  409df8:	ldr	x8, [x20, #2192]
  409dfc:	str	w23, [sp, #4]
  409e00:	orr	w22, w22, w23
  409e04:	str	x8, [x21, #2184]
  409e08:	b	409d0c <ferror@plt+0x71bc>
  409e0c:	mov	w0, #0x6                   	// #6
  409e10:	stp	w22, w23, [sp]
  409e14:	b	409c48 <ferror@plt+0x70f8>
  409e18:	mov	w0, #0x6                   	// #6
  409e1c:	stp	w22, w23, [sp]
  409e20:	str	w24, [sp, #8]
  409e24:	b	409c48 <ferror@plt+0x70f8>
  409e28:	cbz	w0, 409e84 <ferror@plt+0x7334>
  409e2c:	ldr	x8, [x20, #2192]
  409e30:	str	w22, [sp]
  409e34:	str	x8, [x21, #2184]
  409e38:	ldr	w8, [x19]
  409e3c:	cmp	w8, #0x0
  409e40:	cset	w8, ne  // ne = any
  409e44:	cmp	w22, #0x0
  409e48:	cset	w9, ne  // ne = any
  409e4c:	and	w8, w8, w9
  409e50:	str	w8, [x19]
  409e54:	b	409bdc <ferror@plt+0x708c>
  409e58:	stp	w22, w23, [sp]
  409e5c:	mov	w0, #0x6                   	// #6
  409e60:	b	409c48 <ferror@plt+0x70f8>
  409e64:	str	w22, [sp, #4]
  409e68:	mov	w0, #0x6                   	// #6
  409e6c:	b	409a8c <ferror@plt+0x6f3c>
  409e70:	cbz	w0, 4099ec <ferror@plt+0x6e9c>
  409e74:	ldr	x8, [x20, #2192]
  409e78:	mov	w0, wzr
  409e7c:	str	x8, [x21, #2184]
  409e80:	b	409a8c <ferror@plt+0x6f3c>
  409e84:	str	w22, [sp]
  409e88:	mov	w0, #0x6                   	// #6
  409e8c:	b	409a8c <ferror@plt+0x6f3c>
  409e90:	sub	sp, sp, #0x40
  409e94:	stp	x29, x30, [sp, #16]
  409e98:	stp	x22, x21, [sp, #32]
  409e9c:	stp	x20, x19, [sp, #48]
  409ea0:	add	x29, sp, #0x10
  409ea4:	mov	x19, x1
  409ea8:	bl	409f64 <ferror@plt+0x7414>
  409eac:	cbnz	w0, 409f50 <ferror@plt+0x7400>
  409eb0:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409eb4:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409eb8:	add	x20, x20, #0xcb1
  409ebc:	b	409ee0 <ferror@plt+0x7390>
  409ec0:	ldr	w8, [x19]
  409ec4:	ldur	w9, [x29, #-4]
  409ec8:	cmp	w21, #0x9
  409ecc:	cset	w10, ne  // ne = any
  409ed0:	cmp	w8, w9
  409ed4:	cset	w8, eq  // eq = none
  409ed8:	eor	w8, w10, w8
  409edc:	str	w8, [x19]
  409ee0:	sub	x0, x29, #0x4
  409ee4:	bl	4094ec <ferror@plt+0x699c>
  409ee8:	sub	w8, w0, #0x8
  409eec:	mov	w21, w0
  409ef0:	cmp	w8, #0x3
  409ef4:	b.cs	409f30 <ferror@plt+0x73e0>  // b.hs, b.nlast
  409ef8:	sub	x0, x29, #0x4
  409efc:	bl	4094ec <ferror@plt+0x699c>
  409f00:	cbz	w0, 409f34 <ferror@plt+0x73e4>
  409f04:	sub	x1, x29, #0x4
  409f08:	bl	409f64 <ferror@plt+0x7414>
  409f0c:	cbnz	w0, 409f50 <ferror@plt+0x7400>
  409f10:	cmp	w21, #0x8
  409f14:	b.ne	409ec0 <ferror@plt+0x7370>  // b.any
  409f18:	ldr	w0, [x22, #1192]
  409f1c:	mov	w1, wzr
  409f20:	mov	x2, x20
  409f24:	bl	402c5c <ferror@plt+0x10c>
  409f28:	mov	w21, #0x9                   	// #9
  409f2c:	b	409ec0 <ferror@plt+0x7370>
  409f30:	cbnz	w21, 409f3c <ferror@plt+0x73ec>
  409f34:	mov	w0, #0x6                   	// #6
  409f38:	b	409f50 <ferror@plt+0x7400>
  409f3c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409f40:	ldr	x8, [x8, #2192]
  409f44:	mov	w0, wzr
  409f48:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  409f4c:	str	x8, [x9, #2184]
  409f50:	ldp	x20, x19, [sp, #48]
  409f54:	ldp	x22, x21, [sp, #32]
  409f58:	ldp	x29, x30, [sp, #16]
  409f5c:	add	sp, sp, #0x40
  409f60:	ret
  409f64:	stp	x29, x30, [sp, #-48]!
  409f68:	str	x21, [sp, #16]
  409f6c:	stp	x20, x19, [sp, #32]
  409f70:	mov	x29, sp
  409f74:	mov	x19, x1
  409f78:	bl	40a08c <ferror@plt+0x753c>
  409f7c:	cbnz	w0, 40a060 <ferror@plt+0x7510>
  409f80:	add	x0, x29, #0x1c
  409f84:	bl	4094ec <ferror@plt+0x699c>
  409f88:	sub	w8, w0, #0xb
  409f8c:	mov	w20, w0
  409f90:	cmp	w8, #0x3
  409f94:	b.hi	40a040 <ferror@plt+0x74f0>  // b.pmore
  409f98:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  409f9c:	add	x21, x21, #0xb6b
  409fa0:	b	409fd0 <ferror@plt+0x7480>
  409fa4:	ldr	w8, [x19]
  409fa8:	ldr	w9, [x29, #28]
  409fac:	cmp	w8, w9
  409fb0:	cset	w8, lt  // lt = tstop
  409fb4:	add	x0, x29, #0x1c
  409fb8:	str	w8, [x19]
  409fbc:	bl	4094ec <ferror@plt+0x699c>
  409fc0:	sub	w8, w0, #0xb
  409fc4:	mov	w20, w0
  409fc8:	cmp	w8, #0x4
  409fcc:	b.cs	40a040 <ferror@plt+0x74f0>  // b.hs, b.nlast
  409fd0:	add	x0, x29, #0x1c
  409fd4:	bl	4094ec <ferror@plt+0x699c>
  409fd8:	cbz	w0, 40a05c <ferror@plt+0x750c>
  409fdc:	add	x1, x29, #0x1c
  409fe0:	bl	40a08c <ferror@plt+0x753c>
  409fe4:	cbnz	w0, 40a060 <ferror@plt+0x7510>
  409fe8:	sub	w8, w20, #0xb
  409fec:	cmp	w8, #0x3
  409ff0:	b.hi	40a070 <ferror@plt+0x7520>  // b.pmore
  409ff4:	adr	x9, 409fa4 <ferror@plt+0x7454>
  409ff8:	ldrb	w10, [x21, x8]
  409ffc:	add	x9, x9, x10, lsl #2
  40a000:	br	x9
  40a004:	ldr	w8, [x19]
  40a008:	ldr	w9, [x29, #28]
  40a00c:	cmp	w8, w9
  40a010:	cset	w8, gt
  40a014:	b	409fb4 <ferror@plt+0x7464>
  40a018:	ldr	w8, [x19]
  40a01c:	ldr	w9, [x29, #28]
  40a020:	cmp	w8, w9
  40a024:	cset	w8, le
  40a028:	b	409fb4 <ferror@plt+0x7464>
  40a02c:	ldr	w8, [x19]
  40a030:	ldr	w9, [x29, #28]
  40a034:	cmp	w8, w9
  40a038:	cset	w8, ge  // ge = tcont
  40a03c:	b	409fb4 <ferror@plt+0x7464>
  40a040:	cbz	w20, 40a05c <ferror@plt+0x750c>
  40a044:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a048:	ldr	x8, [x8, #2192]
  40a04c:	mov	w0, wzr
  40a050:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a054:	str	x8, [x9, #2184]
  40a058:	b	40a060 <ferror@plt+0x7510>
  40a05c:	mov	w0, #0x6                   	// #6
  40a060:	ldp	x20, x19, [sp, #32]
  40a064:	ldr	x21, [sp, #16]
  40a068:	ldp	x29, x30, [sp], #48
  40a06c:	ret
  40a070:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a074:	ldr	w0, [x8, #1192]
  40a078:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a07c:	add	x2, x2, #0xce5
  40a080:	mov	w1, wzr
  40a084:	bl	402c5c <ferror@plt+0x10c>
  40a088:	bl	402860 <abort@plt>
  40a08c:	sub	sp, sp, #0x50
  40a090:	stp	x29, x30, [sp, #16]
  40a094:	stp	x24, x23, [sp, #32]
  40a098:	stp	x22, x21, [sp, #48]
  40a09c:	stp	x20, x19, [sp, #64]
  40a0a0:	add	x29, sp, #0x10
  40a0a4:	mov	x19, x1
  40a0a8:	bl	40a25c <ferror@plt+0x770c>
  40a0ac:	cbnz	w0, 40a228 <ferror@plt+0x76d8>
  40a0b0:	b	40a0cc <ferror@plt+0x757c>
  40a0b4:	ldur	w8, [x29, #-4]
  40a0b8:	ldr	w9, [x19]
  40a0bc:	cmp	w20, #0x2
  40a0c0:	cneg	w8, w8, ne  // ne = any
  40a0c4:	add	w8, w8, w9
  40a0c8:	str	w8, [x19]
  40a0cc:	sub	x0, x29, #0x4
  40a0d0:	bl	4094ec <ferror@plt+0x699c>
  40a0d4:	orr	w8, w0, #0x1
  40a0d8:	mov	w20, w0
  40a0dc:	cmp	w8, #0x3
  40a0e0:	b.ne	40a100 <ferror@plt+0x75b0>  // b.any
  40a0e4:	sub	x0, x29, #0x4
  40a0e8:	bl	4094ec <ferror@plt+0x699c>
  40a0ec:	cbz	w0, 40a218 <ferror@plt+0x76c8>
  40a0f0:	sub	x1, x29, #0x4
  40a0f4:	bl	40a25c <ferror@plt+0x770c>
  40a0f8:	cbz	w0, 40a0b4 <ferror@plt+0x7564>
  40a0fc:	b	40a228 <ferror@plt+0x76d8>
  40a100:	cbz	w20, 40a218 <ferror@plt+0x76c8>
  40a104:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a108:	ldr	x8, [x22, #2192]
  40a10c:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a110:	add	x0, sp, #0x4
  40a114:	str	x8, [x23, #2184]
  40a118:	bl	4094ec <ferror@plt+0x699c>
  40a11c:	sub	w8, w0, #0xf
  40a120:	mov	w20, w0
  40a124:	cmp	w8, #0x1
  40a128:	b.hi	40a204 <ferror@plt+0x76b4>  // b.pmore
  40a12c:	add	x0, sp, #0x4
  40a130:	bl	4094ec <ferror@plt+0x699c>
  40a134:	cbz	w0, 40a218 <ferror@plt+0x76c8>
  40a138:	add	x1, sp, #0x4
  40a13c:	bl	40a25c <ferror@plt+0x770c>
  40a140:	cbnz	w0, 40a228 <ferror@plt+0x76d8>
  40a144:	add	x0, sp, #0x8
  40a148:	bl	4094ec <ferror@plt+0x699c>
  40a14c:	orr	w8, w0, #0x1
  40a150:	mov	w21, w0
  40a154:	cmp	w8, #0x3
  40a158:	b.ne	40a1a4 <ferror@plt+0x7654>  // b.any
  40a15c:	ldr	w24, [sp, #4]
  40a160:	add	x0, sp, #0x8
  40a164:	bl	4094ec <ferror@plt+0x699c>
  40a168:	cbz	w0, 40a220 <ferror@plt+0x76d0>
  40a16c:	add	x1, sp, #0x8
  40a170:	bl	40a25c <ferror@plt+0x770c>
  40a174:	cbnz	w0, 40a224 <ferror@plt+0x76d4>
  40a178:	ldr	w8, [sp, #8]
  40a17c:	cmp	w21, #0x2
  40a180:	add	x0, sp, #0x8
  40a184:	cneg	w8, w8, ne  // ne = any
  40a188:	add	w24, w8, w24
  40a18c:	bl	4094ec <ferror@plt+0x699c>
  40a190:	orr	w8, w0, #0x1
  40a194:	mov	w21, w0
  40a198:	cmp	w8, #0x3
  40a19c:	b.eq	40a160 <ferror@plt+0x7610>  // b.none
  40a1a0:	str	w24, [sp, #4]
  40a1a4:	cbz	w21, 40a218 <ferror@plt+0x76c8>
  40a1a8:	ldr	x8, [x22, #2192]
  40a1ac:	cmp	w20, #0x10
  40a1b0:	str	x8, [x23, #2184]
  40a1b4:	b.eq	40a1d0 <ferror@plt+0x7680>  // b.none
  40a1b8:	cmp	w20, #0xf
  40a1bc:	b.ne	40a240 <ferror@plt+0x76f0>  // b.any
  40a1c0:	ldr	w8, [x19]
  40a1c4:	ldr	w9, [sp, #4]
  40a1c8:	lsl	w8, w8, w9
  40a1cc:	b	40a1e8 <ferror@plt+0x7698>
  40a1d0:	ldr	w8, [x19]
  40a1d4:	ldr	w9, [sp, #4]
  40a1d8:	asr	w10, w8, #31
  40a1dc:	eor	w8, w10, w8
  40a1e0:	lsr	w8, w8, w9
  40a1e4:	eor	w8, w8, w10
  40a1e8:	add	x0, sp, #0x4
  40a1ec:	str	w8, [x19]
  40a1f0:	bl	4094ec <ferror@plt+0x699c>
  40a1f4:	sub	w8, w0, #0xf
  40a1f8:	mov	w20, w0
  40a1fc:	cmp	w8, #0x2
  40a200:	b.cc	40a12c <ferror@plt+0x75dc>  // b.lo, b.ul, b.last
  40a204:	cbz	w20, 40a218 <ferror@plt+0x76c8>
  40a208:	ldr	x8, [x22, #2192]
  40a20c:	mov	w0, wzr
  40a210:	str	x8, [x23, #2184]
  40a214:	b	40a228 <ferror@plt+0x76d8>
  40a218:	mov	w0, #0x6                   	// #6
  40a21c:	b	40a228 <ferror@plt+0x76d8>
  40a220:	mov	w0, #0x6                   	// #6
  40a224:	str	w24, [sp, #4]
  40a228:	ldp	x20, x19, [sp, #64]
  40a22c:	ldp	x22, x21, [sp, #48]
  40a230:	ldp	x24, x23, [sp, #32]
  40a234:	ldp	x29, x30, [sp, #16]
  40a238:	add	sp, sp, #0x50
  40a23c:	ret
  40a240:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a244:	ldr	w0, [x8, #1192]
  40a248:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a24c:	add	x2, x2, #0xd1c
  40a250:	mov	w1, wzr
  40a254:	bl	402c5c <ferror@plt+0x10c>
  40a258:	bl	402860 <abort@plt>
  40a25c:	sub	sp, sp, #0x30
  40a260:	stp	x29, x30, [sp, #16]
  40a264:	stp	x20, x19, [sp, #32]
  40a268:	add	x29, sp, #0x10
  40a26c:	mov	x19, x1
  40a270:	bl	40a398 <ferror@plt+0x7848>
  40a274:	cbz	w0, 40a288 <ferror@plt+0x7738>
  40a278:	ldp	x20, x19, [sp, #32]
  40a27c:	ldp	x29, x30, [sp, #16]
  40a280:	add	sp, sp, #0x30
  40a284:	ret
  40a288:	sub	x0, x29, #0x4
  40a28c:	bl	4094ec <ferror@plt+0x699c>
  40a290:	sub	w8, w0, #0x5
  40a294:	mov	w20, w0
  40a298:	cmp	w8, #0x2
  40a29c:	b.ls	40a2e0 <ferror@plt+0x7790>  // b.plast
  40a2a0:	cbz	w20, 40a364 <ferror@plt+0x7814>
  40a2a4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a2a8:	ldr	x8, [x8, #2192]
  40a2ac:	mov	w0, wzr
  40a2b0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a2b4:	str	x8, [x9, #2184]
  40a2b8:	b	40a278 <ferror@plt+0x7728>
  40a2bc:	ldr	w8, [x19]
  40a2c0:	neg	w8, w8
  40a2c4:	sub	x0, x29, #0x4
  40a2c8:	str	w8, [x19]
  40a2cc:	bl	4094ec <ferror@plt+0x699c>
  40a2d0:	sub	w8, w0, #0x5
  40a2d4:	mov	w20, w0
  40a2d8:	cmp	w8, #0x3
  40a2dc:	b.cs	40a2a0 <ferror@plt+0x7750>  // b.hs, b.nlast
  40a2e0:	sub	x0, x29, #0x4
  40a2e4:	bl	4094ec <ferror@plt+0x699c>
  40a2e8:	cbz	w0, 40a364 <ferror@plt+0x7814>
  40a2ec:	sub	x1, x29, #0x4
  40a2f0:	bl	40a398 <ferror@plt+0x7848>
  40a2f4:	cbnz	w0, 40a278 <ferror@plt+0x7728>
  40a2f8:	cmp	w20, #0x7
  40a2fc:	b.eq	40a33c <ferror@plt+0x77ec>  // b.none
  40a300:	cmp	w20, #0x6
  40a304:	b.eq	40a320 <ferror@plt+0x77d0>  // b.none
  40a308:	cmp	w20, #0x5
  40a30c:	b.ne	40a37c <ferror@plt+0x782c>  // b.any
  40a310:	ldr	w8, [x19]
  40a314:	ldur	w9, [x29, #-4]
  40a318:	mul	w8, w9, w8
  40a31c:	b	40a2c4 <ferror@plt+0x7774>
  40a320:	ldur	w8, [x29, #-4]
  40a324:	cmn	w8, #0x1
  40a328:	b.eq	40a2bc <ferror@plt+0x776c>  // b.none
  40a32c:	cbz	w8, 40a36c <ferror@plt+0x781c>
  40a330:	ldr	w9, [x19]
  40a334:	sdiv	w8, w9, w8
  40a338:	b	40a2c4 <ferror@plt+0x7774>
  40a33c:	ldur	w8, [x29, #-4]
  40a340:	cmn	w8, #0x1
  40a344:	b.eq	40a35c <ferror@plt+0x780c>  // b.none
  40a348:	cbz	w8, 40a374 <ferror@plt+0x7824>
  40a34c:	ldr	w9, [x19]
  40a350:	sdiv	w10, w9, w8
  40a354:	msub	w8, w10, w8, w9
  40a358:	b	40a2c4 <ferror@plt+0x7774>
  40a35c:	mov	w8, wzr
  40a360:	b	40a2c4 <ferror@plt+0x7774>
  40a364:	mov	w0, #0x6                   	// #6
  40a368:	b	40a278 <ferror@plt+0x7728>
  40a36c:	mov	w0, #0x1                   	// #1
  40a370:	b	40a278 <ferror@plt+0x7728>
  40a374:	mov	w0, #0x2                   	// #2
  40a378:	b	40a278 <ferror@plt+0x7728>
  40a37c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a380:	ldr	w0, [x8, #1192]
  40a384:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a388:	add	x2, x2, #0xd50
  40a38c:	mov	w1, wzr
  40a390:	bl	402c5c <ferror@plt+0x10c>
  40a394:	bl	402860 <abort@plt>
  40a398:	sub	sp, sp, #0x30
  40a39c:	stp	x29, x30, [sp, #16]
  40a3a0:	stp	x20, x19, [sp, #32]
  40a3a4:	add	x29, sp, #0x10
  40a3a8:	mov	x19, x1
  40a3ac:	bl	40a4c4 <ferror@plt+0x7974>
  40a3b0:	cbz	w0, 40a3c4 <ferror@plt+0x7874>
  40a3b4:	ldp	x20, x19, [sp, #32]
  40a3b8:	ldp	x29, x30, [sp, #16]
  40a3bc:	add	sp, sp, #0x30
  40a3c0:	ret
  40a3c4:	mov	w20, #0xffffffff            	// #-1
  40a3c8:	b	40a3d4 <ferror@plt+0x7884>
  40a3cc:	mov	w10, #0x1                   	// #1
  40a3d0:	str	w10, [x19]
  40a3d4:	sub	x0, x29, #0x4
  40a3d8:	bl	4094ec <ferror@plt+0x699c>
  40a3dc:	cmp	w0, #0x4
  40a3e0:	b.ne	40a490 <ferror@plt+0x7940>  // b.any
  40a3e4:	sub	x0, x29, #0x4
  40a3e8:	bl	4094ec <ferror@plt+0x699c>
  40a3ec:	cbz	w0, 40a494 <ferror@plt+0x7944>
  40a3f0:	sub	x1, x29, #0x4
  40a3f4:	bl	40a398 <ferror@plt+0x7848>
  40a3f8:	cbnz	w0, 40a3b4 <ferror@plt+0x7864>
  40a3fc:	ldur	w10, [x29, #-4]
  40a400:	tbnz	w10, #31, 40a49c <ferror@plt+0x794c>
  40a404:	ldr	w8, [x19]
  40a408:	orr	w9, w8, w10
  40a40c:	cbz	w9, 40a4a4 <ferror@plt+0x7954>
  40a410:	subs	w9, w10, #0x1
  40a414:	stur	w9, [x29, #-4]
  40a418:	b.lt	40a3cc <ferror@plt+0x787c>  // b.tstop
  40a41c:	cmp	w10, #0x8
  40a420:	b.cs	40a42c <ferror@plt+0x78dc>  // b.hs, b.nlast
  40a424:	mov	w10, #0x1                   	// #1
  40a428:	b	40a470 <ferror@plt+0x7920>
  40a42c:	and	w11, w10, #0xfffffff8
  40a430:	dup	v1.4s, w8
  40a434:	movi	v0.4s, #0x1
  40a438:	sub	w9, w9, w11
  40a43c:	mov	w12, w11
  40a440:	movi	v2.4s, #0x1
  40a444:	mul	v0.4s, v0.4s, v1.4s
  40a448:	subs	w12, w12, #0x8
  40a44c:	mul	v2.4s, v2.4s, v1.4s
  40a450:	b.ne	40a444 <ferror@plt+0x78f4>  // b.any
  40a454:	mul	v0.4s, v2.4s, v0.4s
  40a458:	ext	v1.16b, v0.16b, v0.16b, #8
  40a45c:	mul	v0.4s, v0.4s, v1.4s
  40a460:	mul	v0.4s, v0.4s, v0.s[1]
  40a464:	cmp	w10, w11
  40a468:	fmov	w10, s0
  40a46c:	b.eq	40a484 <ferror@plt+0x7934>  // b.none
  40a470:	add	w9, w9, #0x1
  40a474:	sub	w9, w9, #0x1
  40a478:	cmp	w9, #0x0
  40a47c:	mul	w10, w10, w8
  40a480:	b.gt	40a474 <ferror@plt+0x7924>
  40a484:	stur	w20, [x29, #-4]
  40a488:	str	w10, [x19]
  40a48c:	b	40a3d4 <ferror@plt+0x7884>
  40a490:	cbnz	w0, 40a4ac <ferror@plt+0x795c>
  40a494:	mov	w0, #0x6                   	// #6
  40a498:	b	40a3b4 <ferror@plt+0x7864>
  40a49c:	mov	w0, #0x3                   	// #3
  40a4a0:	b	40a3b4 <ferror@plt+0x7864>
  40a4a4:	mov	w0, #0x1                   	// #1
  40a4a8:	b	40a3b4 <ferror@plt+0x7864>
  40a4ac:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a4b0:	ldr	x8, [x8, #2192]
  40a4b4:	mov	w0, wzr
  40a4b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40a4bc:	str	x8, [x9, #2184]
  40a4c0:	b	40a3b4 <ferror@plt+0x7864>
  40a4c4:	sub	sp, sp, #0x30
  40a4c8:	stp	x20, x19, [sp, #32]
  40a4cc:	mov	w20, w0
  40a4d0:	cmp	w0, #0x14
  40a4d4:	mov	x19, x1
  40a4d8:	stp	x29, x30, [sp, #16]
  40a4dc:	add	x29, sp, #0x10
  40a4e0:	b.hi	40a538 <ferror@plt+0x79e8>  // b.pmore
  40a4e4:	mov	w8, #0x1                   	// #1
  40a4e8:	mov	w9, #0xc                   	// #12
  40a4ec:	lsl	w8, w8, w20
  40a4f0:	movk	w9, #0x12, lsl #16
  40a4f4:	tst	w8, w9
  40a4f8:	b.eq	40a538 <ferror@plt+0x79e8>  // b.none
  40a4fc:	mov	x0, x19
  40a500:	bl	4094ec <ferror@plt+0x699c>
  40a504:	cbz	w0, 40a584 <ferror@plt+0x7a34>
  40a508:	mov	x1, x19
  40a50c:	bl	40a4c4 <ferror@plt+0x7974>
  40a510:	cbnz	w0, 40a5bc <ferror@plt+0x7a6c>
  40a514:	cmp	w20, #0x14
  40a518:	b.eq	40a59c <ferror@plt+0x7a4c>  // b.none
  40a51c:	cmp	w20, #0x11
  40a520:	b.eq	40a5a8 <ferror@plt+0x7a58>  // b.none
  40a524:	cmp	w20, #0x3
  40a528:	b.ne	40a5b8 <ferror@plt+0x7a68>  // b.any
  40a52c:	ldr	w8, [x19]
  40a530:	neg	w8, w8
  40a534:	b	40a5b4 <ferror@plt+0x7a64>
  40a538:	cmp	w20, #0x1
  40a53c:	b.eq	40a58c <ferror@plt+0x7a3c>  // b.none
  40a540:	cmp	w20, #0x1a
  40a544:	b.eq	40a5b8 <ferror@plt+0x7a68>  // b.none
  40a548:	cmp	w20, #0x18
  40a54c:	b.ne	40a594 <ferror@plt+0x7a44>  // b.any
  40a550:	mov	x0, x19
  40a554:	bl	4094ec <ferror@plt+0x699c>
  40a558:	cbz	w0, 40a584 <ferror@plt+0x7a34>
  40a55c:	mov	x1, x19
  40a560:	bl	4098e4 <ferror@plt+0x6d94>
  40a564:	cbnz	w0, 40a5bc <ferror@plt+0x7a6c>
  40a568:	sub	x0, x29, #0x4
  40a56c:	bl	4094ec <ferror@plt+0x699c>
  40a570:	cbz	w0, 40a584 <ferror@plt+0x7a34>
  40a574:	cmp	w0, #0x19
  40a578:	b.eq	40a5b8 <ferror@plt+0x7a68>  // b.none
  40a57c:	mov	w0, #0x5                   	// #5
  40a580:	b	40a5bc <ferror@plt+0x7a6c>
  40a584:	mov	w0, #0x6                   	// #6
  40a588:	b	40a5bc <ferror@plt+0x7a6c>
  40a58c:	mov	w0, #0x8                   	// #8
  40a590:	b	40a5bc <ferror@plt+0x7a6c>
  40a594:	mov	w0, #0x4                   	// #4
  40a598:	b	40a5bc <ferror@plt+0x7a6c>
  40a59c:	ldr	w8, [x19]
  40a5a0:	mvn	w8, w8
  40a5a4:	b	40a5b4 <ferror@plt+0x7a64>
  40a5a8:	ldr	w8, [x19]
  40a5ac:	cmp	w8, #0x0
  40a5b0:	cset	w8, eq  // eq = none
  40a5b4:	str	w8, [x19]
  40a5b8:	mov	w0, wzr
  40a5bc:	ldp	x20, x19, [sp, #32]
  40a5c0:	ldp	x29, x30, [sp, #16]
  40a5c4:	add	sp, sp, #0x30
  40a5c8:	ret
  40a5cc:	sub	sp, sp, #0x160
  40a5d0:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a5d4:	add	x8, x8, #0xe00
  40a5d8:	ldr	x9, [x8]
  40a5dc:	ldur	x8, [x8, #6]
  40a5e0:	stp	x29, x30, [sp, #256]
  40a5e4:	stp	x20, x19, [sp, #336]
  40a5e8:	add	x29, sp, #0xf0
  40a5ec:	mov	x20, x2
  40a5f0:	mov	x19, x0
  40a5f4:	str	d8, [sp, #240]
  40a5f8:	stp	x28, x27, [sp, #272]
  40a5fc:	stp	x26, x25, [sp, #288]
  40a600:	stp	x24, x23, [sp, #304]
  40a604:	stp	x22, x21, [sp, #320]
  40a608:	stur	x9, [x29, #-24]
  40a60c:	stur	x8, [x29, #-18]
  40a610:	cbz	w1, 40a628 <ferror@plt+0x7ad8>
  40a614:	ldr	x8, [x20], #8
  40a618:	ldr	x28, [x8, #8]
  40a61c:	sub	w8, w1, #0x1
  40a620:	str	w8, [sp, #76]
  40a624:	b	40a634 <ferror@plt+0x7ae4>
  40a628:	adrp	x28, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a62c:	str	wzr, [sp, #76]
  40a630:	add	x28, x28, #0x67f
  40a634:	movi	v0.2d, #0x0
  40a638:	mov	w1, #0x25                  	// #37
  40a63c:	mov	x0, x28
  40a640:	stp	q0, q0, [sp, #176]
  40a644:	stp	q0, q0, [sp, #144]
  40a648:	stp	q0, q0, [sp, #112]
  40a64c:	stp	q0, q0, [sp, #80]
  40a650:	bl	402990 <strchr@plt>
  40a654:	cbz	x0, 40ae80 <ferror@plt+0x8330>
  40a658:	sub	x8, x29, #0x18
  40a65c:	add	x9, sp, #0x50
  40a660:	orr	x10, x8, #0x1
  40a664:	stp	x28, x10, [sp, #40]
  40a668:	add	x10, x9, #0x73
  40a66c:	str	x10, [sp, #24]
  40a670:	add	x10, x9, #0x63
  40a674:	orr	x8, x8, #0x2
  40a678:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40a67c:	mov	x24, x0
  40a680:	str	x20, [sp, #64]
  40a684:	mov	w21, #0x1                   	// #1
  40a688:	mov	w20, #0xa                   	// #10
  40a68c:	str	x10, [sp, #56]
  40a690:	add	x10, x9, #0x41
  40a694:	str	x8, [sp, #32]
  40a698:	add	x8, x9, #0x61
  40a69c:	add	x22, x22, #0xd7e
  40a6a0:	stp	x8, x10, [sp, #8]
  40a6a4:	b	40a6d0 <ferror@plt+0x7b80>
  40a6a8:	add	x9, x8, #0x1
  40a6ac:	str	x9, [x19, #24]
  40a6b0:	mov	w9, #0x25                  	// #37
  40a6b4:	strb	w9, [x8]
  40a6b8:	add	x28, x24, #0x2
  40a6bc:	mov	w1, #0x25                  	// #37
  40a6c0:	mov	x0, x28
  40a6c4:	bl	402990 <strchr@plt>
  40a6c8:	mov	x24, x0
  40a6cc:	cbz	x0, 40ae80 <ferror@plt+0x8330>
  40a6d0:	ldp	x0, x8, [x19, #24]
  40a6d4:	sub	x23, x24, x28
  40a6d8:	sub	x8, x8, x0
  40a6dc:	cmp	x8, x23
  40a6e0:	b.cs	40a6f4 <ferror@plt+0x7ba4>  // b.hs, b.nlast
  40a6e4:	mov	x0, x19
  40a6e8:	mov	x1, x23
  40a6ec:	bl	418058 <_obstack_newchunk@@Base>
  40a6f0:	ldr	x0, [x19, #24]
  40a6f4:	mov	x1, x28
  40a6f8:	mov	x2, x23
  40a6fc:	bl	4024c0 <memcpy@plt>
  40a700:	ldr	x8, [x19, #24]
  40a704:	add	x8, x8, x23
  40a708:	str	x8, [x19, #24]
  40a70c:	ldrb	w9, [x24, #1]
  40a710:	cmp	w9, #0x25
  40a714:	b.ne	40a738 <ferror@plt+0x7be8>  // b.any
  40a718:	ldr	x9, [x19, #32]
  40a71c:	cmp	x9, x8
  40a720:	b.ne	40a6a8 <ferror@plt+0x7b58>  // b.any
  40a724:	mov	w1, #0x1                   	// #1
  40a728:	mov	x0, x19
  40a72c:	bl	418058 <_obstack_newchunk@@Base>
  40a730:	ldr	x8, [x19, #24]
  40a734:	b	40a6a8 <ferror@plt+0x7b58>
  40a738:	ldr	x11, [sp, #56]
  40a73c:	mov	w10, #0x101                 	// #257
  40a740:	mov	w8, wzr
  40a744:	sturh	w10, [sp, #149]
  40a748:	mov	w10, #0x1010101             	// #16843009
  40a74c:	add	x24, x24, #0x2
  40a750:	strb	w21, [sp, #168]
  40a754:	strb	w21, [sp, #200]
  40a758:	strb	w21, [sp, #197]
  40a75c:	strb	w21, [sp, #195]
  40a760:	strb	w21, [sp, #191]
  40a764:	strb	w21, [sp, #185]
  40a768:	strb	w21, [sp, #151]
  40a76c:	strb	w21, [sp, #145]
  40a770:	strb	w21, [sp, #177]
  40a774:	strb	w10, [x11, #4]
  40a778:	str	w10, [x11]
  40a77c:	and	w9, w9, #0xff
  40a780:	sub	w9, w9, #0x20
  40a784:	cmp	w9, #0x10
  40a788:	b.hi	40a800 <ferror@plt+0x7cb0>  // b.pmore
  40a78c:	adr	x10, 40a7a0 <ferror@plt+0x7c50>
  40a790:	ldrb	w11, [x22, x9]
  40a794:	add	x10, x10, x11, lsl #2
  40a798:	mov	w9, #0x4                   	// #4
  40a79c:	br	x10
  40a7a0:	strb	wzr, [sp, #168]
  40a7a4:	strb	wzr, [sp, #200]
  40a7a8:	strb	wzr, [sp, #197]
  40a7ac:	strb	wzr, [sp, #195]
  40a7b0:	strb	wzr, [sp, #191]
  40a7b4:	strb	wzr, [sp, #179]
  40a7b8:	mov	w9, #0x8                   	// #8
  40a7bc:	orr	w8, w8, w9
  40a7c0:	tbz	w8, #6, 40a840 <ferror@plt+0x7cf0>
  40a7c4:	b	40a86c <ferror@plt+0x7d1c>
  40a7c8:	strb	wzr, [sp, #197]
  40a7cc:	strb	wzr, [sp, #195]
  40a7d0:	strb	wzr, [sp, #185]
  40a7d4:	sturh	wzr, [sp, #179]
  40a7d8:	mov	w9, #0x20                  	// #32
  40a7dc:	orr	w8, w8, w9
  40a7e0:	tbz	w8, #6, 40a840 <ferror@plt+0x7cf0>
  40a7e4:	b	40a86c <ferror@plt+0x7d1c>
  40a7e8:	strb	wzr, [sp, #195]
  40a7ec:	strb	wzr, [sp, #179]
  40a7f0:	mov	w9, #0x10                  	// #16
  40a7f4:	orr	w8, w8, w9
  40a7f8:	tbz	w8, #6, 40a840 <ferror@plt+0x7cf0>
  40a7fc:	b	40a86c <ferror@plt+0x7d1c>
  40a800:	mov	w9, #0x40                  	// #64
  40a804:	orr	w8, w8, w9
  40a808:	tbz	w8, #6, 40a840 <ferror@plt+0x7cf0>
  40a80c:	b	40a86c <ferror@plt+0x7d1c>
  40a810:	strb	wzr, [sp, #168]
  40a814:	strb	wzr, [sp, #200]
  40a818:	strb	wzr, [sp, #195]
  40a81c:	strb	wzr, [sp, #191]
  40a820:	strb	wzr, [sp, #149]
  40a824:	strb	wzr, [sp, #181]
  40a828:	strb	wzr, [sp, #179]
  40a82c:	strb	wzr, [sp, #145]
  40a830:	strb	wzr, [sp, #177]
  40a834:	mov	w9, #0x1                   	// #1
  40a838:	orr	w8, w8, w9
  40a83c:	tbnz	w8, #6, 40a86c <ferror@plt+0x7d1c>
  40a840:	ldrb	w9, [x24], #1
  40a844:	b	40a77c <ferror@plt+0x7c2c>
  40a848:	strb	wzr, [sp, #168]
  40a84c:	strb	wzr, [sp, #200]
  40a850:	strb	wzr, [sp, #197]
  40a854:	strb	wzr, [sp, #195]
  40a858:	strb	wzr, [sp, #191]
  40a85c:	strb	wzr, [sp, #179]
  40a860:	mov	w9, #0x2                   	// #2
  40a864:	orr	w8, w8, w9
  40a868:	tbz	w8, #6, 40a840 <ferror@plt+0x7cf0>
  40a86c:	ldr	x23, [sp, #48]
  40a870:	ldr	w10, [sp, #76]
  40a874:	and	w8, w8, #0xff
  40a878:	tbnz	w8, #0, 40a8d8 <ferror@plt+0x7d88>
  40a87c:	tbnz	w8, #1, 40a8e8 <ferror@plt+0x7d98>
  40a880:	tbnz	w8, #2, 40a8f4 <ferror@plt+0x7da4>
  40a884:	tbnz	w8, #3, 40a900 <ferror@plt+0x7db0>
  40a888:	sub	x25, x24, #0x1
  40a88c:	tbnz	w8, #4, 40a910 <ferror@plt+0x7dc0>
  40a890:	tbz	w8, #5, 40a89c <ferror@plt+0x7d4c>
  40a894:	mov	w8, #0x23                  	// #35
  40a898:	strb	w8, [x23], #1
  40a89c:	mov	w8, #0x2a                  	// #42
  40a8a0:	strb	w8, [x23]
  40a8a4:	ldrb	w26, [x25]
  40a8a8:	cmp	x26, #0x2a
  40a8ac:	b.ne	40a920 <ferror@plt+0x7dd0>  // b.any
  40a8b0:	cbz	w10, 40a958 <ferror@plt+0x7e08>
  40a8b4:	ldr	x9, [sp, #64]
  40a8b8:	sub	w10, w10, #0x1
  40a8bc:	ldr	x8, [x9], #8
  40a8c0:	str	w10, [sp, #76]
  40a8c4:	ldr	x0, [x8, #8]
  40a8c8:	str	x9, [sp, #64]
  40a8cc:	bl	40aeec <ferror@plt+0x839c>
  40a8d0:	mov	w27, w0
  40a8d4:	b	40a960 <ferror@plt+0x7e10>
  40a8d8:	ldr	x23, [sp, #32]
  40a8dc:	mov	w9, #0x27                  	// #39
  40a8e0:	sturb	w9, [x29, #-23]
  40a8e4:	tbz	w8, #1, 40a880 <ferror@plt+0x7d30>
  40a8e8:	mov	w9, #0x2b                  	// #43
  40a8ec:	strb	w9, [x23], #1
  40a8f0:	tbz	w8, #2, 40a884 <ferror@plt+0x7d34>
  40a8f4:	mov	w9, #0x2d                  	// #45
  40a8f8:	strb	w9, [x23], #1
  40a8fc:	tbz	w8, #3, 40a888 <ferror@plt+0x7d38>
  40a900:	mov	w9, #0x20                  	// #32
  40a904:	strb	w9, [x23], #1
  40a908:	sub	x25, x24, #0x1
  40a90c:	tbz	w8, #4, 40a890 <ferror@plt+0x7d40>
  40a910:	mov	w9, #0x30                  	// #48
  40a914:	strb	w9, [x23], #1
  40a918:	tbnz	w8, #5, 40a894 <ferror@plt+0x7d44>
  40a91c:	b	40a89c <ferror@plt+0x7d4c>
  40a920:	bl	4028e0 <__ctype_b_loc@plt>
  40a924:	ldr	x8, [x0]
  40a928:	ldrh	w9, [x8, x26, lsl #1]
  40a92c:	tbnz	w9, #11, 40a938 <ferror@plt+0x7de8>
  40a930:	mov	w27, wzr
  40a934:	b	40a964 <ferror@plt+0x7e14>
  40a938:	mov	w27, wzr
  40a93c:	mul	w9, w27, w20
  40a940:	add	w9, w9, w26, uxtb
  40a944:	ldrb	w26, [x25, #1]!
  40a948:	sub	w27, w9, #0x30
  40a94c:	ldrh	w10, [x8, x26, lsl #1]
  40a950:	tbnz	w10, #11, 40a93c <ferror@plt+0x7dec>
  40a954:	b	40a964 <ferror@plt+0x7e14>
  40a958:	mov	w27, wzr
  40a95c:	str	wzr, [sp, #76]
  40a960:	mov	x25, x24
  40a964:	mov	w8, #0x2a2e                	// #10798
  40a968:	sturh	w8, [x23, #1]
  40a96c:	ldrb	w26, [x25]
  40a970:	cmp	w26, #0x2e
  40a974:	b.ne	40a9c4 <ferror@plt+0x7e74>  // b.any
  40a978:	strb	wzr, [sp, #179]
  40a97c:	mov	x28, x25
  40a980:	ldrb	w26, [x28, #1]!
  40a984:	cmp	x26, #0x2a
  40a988:	b.ne	40aa04 <ferror@plt+0x7eb4>  // b.any
  40a98c:	ldr	w10, [sp, #76]
  40a990:	cbz	w10, 40ac48 <ferror@plt+0x80f8>
  40a994:	ldr	x9, [sp, #64]
  40a998:	sub	w10, w10, #0x1
  40a99c:	ldr	x8, [x9], #8
  40a9a0:	str	w10, [sp, #76]
  40a9a4:	ldr	x0, [x8, #8]
  40a9a8:	str	x9, [sp, #64]
  40a9ac:	bl	40aeec <ferror@plt+0x839c>
  40a9b0:	ldrb	w26, [x25, #2]!
  40a9b4:	mov	w24, w0
  40a9b8:	cmp	w26, #0x68
  40a9bc:	b.ne	40a9d0 <ferror@plt+0x7e80>  // b.any
  40a9c0:	b	40aa44 <ferror@plt+0x7ef4>
  40a9c4:	mov	w24, #0xffffffff            	// #-1
  40a9c8:	cmp	w26, #0x68
  40a9cc:	b.eq	40aa44 <ferror@plt+0x7ef4>  // b.none
  40a9d0:	cmp	w26, #0x6c
  40a9d4:	b.ne	40a9f8 <ferror@plt+0x7ea8>  // b.any
  40a9d8:	ldr	x10, [sp, #24]
  40a9dc:	ldr	x11, [sp, #56]
  40a9e0:	mov	w9, #0x6c                  	// #108
  40a9e4:	add	x8, x23, #0x4
  40a9e8:	strb	w9, [x23, #3]
  40a9ec:	add	x25, x25, #0x1
  40a9f0:	mov	w9, #0x1                   	// #1
  40a9f4:	b	40aa94 <ferror@plt+0x7f44>
  40a9f8:	mov	w9, wzr
  40a9fc:	add	x8, x23, #0x3
  40aa00:	b	40aa9c <ferror@plt+0x7f4c>
  40aa04:	bl	4028e0 <__ctype_b_loc@plt>
  40aa08:	ldr	x8, [x0]
  40aa0c:	ldrh	w9, [x8, x26, lsl #1]
  40aa10:	tbnz	w9, #11, 40aa1c <ferror@plt+0x7ecc>
  40aa14:	mov	w24, wzr
  40aa18:	b	40aa38 <ferror@plt+0x7ee8>
  40aa1c:	mov	w24, wzr
  40aa20:	mul	w9, w24, w20
  40aa24:	add	w9, w9, w26, uxtb
  40aa28:	ldrb	w26, [x28, #1]!
  40aa2c:	sub	w24, w9, #0x30
  40aa30:	ldrh	w10, [x8, x26, lsl #1]
  40aa34:	tbnz	w10, #11, 40aa20 <ferror@plt+0x7ed0>
  40aa38:	mov	x25, x28
  40aa3c:	cmp	w26, #0x68
  40aa40:	b.ne	40a9d0 <ferror@plt+0x7e80>  // b.any
  40aa44:	mov	w10, #0x68                  	// #104
  40aa48:	strb	w10, [x23, #3]
  40aa4c:	mov	x9, x25
  40aa50:	ldrb	w8, [x9, #1]!
  40aa54:	cmp	w8, #0x68
  40aa58:	b.ne	40aa6c <ferror@plt+0x7f1c>  // b.any
  40aa5c:	add	x8, x23, #0x5
  40aa60:	add	x25, x25, #0x2
  40aa64:	strb	w10, [x23, #4]
  40aa68:	b	40aa74 <ferror@plt+0x7f24>
  40aa6c:	add	x8, x23, #0x4
  40aa70:	mov	x25, x9
  40aa74:	ldp	x11, x10, [sp, #8]
  40aa78:	mov	w9, wzr
  40aa7c:	strb	wzr, [sp, #195]
  40aa80:	strb	wzr, [sp, #151]
  40aa84:	strb	wzr, [sp, #183]
  40aa88:	sturh	wzr, [sp, #149]
  40aa8c:	sturh	wzr, [sp, #181]
  40aa90:	strb	wzr, [sp, #179]
  40aa94:	strb	wzr, [x10]
  40aa98:	strb	wzr, [x11]
  40aa9c:	mov	x28, x25
  40aaa0:	ldrsb	w23, [x28], #1
  40aaa4:	tbnz	w23, #31, 40ab7c <ferror@plt+0x802c>
  40aaa8:	and	x10, x23, #0xff
  40aaac:	add	x11, sp, #0x50
  40aab0:	ldrb	w10, [x11, x10]
  40aab4:	cbz	w10, 40ab7c <ferror@plt+0x802c>
  40aab8:	and	w10, w23, #0xff
  40aabc:	sub	w10, w10, #0x41
  40aac0:	cmp	w10, #0x37
  40aac4:	b.hi	40aee8 <ferror@plt+0x8398>  // b.pmore
  40aac8:	adrp	x13, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40aacc:	add	x13, x13, #0xd90
  40aad0:	adr	x11, 40aae0 <ferror@plt+0x7f90>
  40aad4:	ldrh	w12, [x13, x10, lsl #1]
  40aad8:	add	x11, x11, x12, lsl #2
  40aadc:	br	x11
  40aae0:	ldr	w10, [sp, #76]
  40aae4:	strb	w23, [x8]
  40aae8:	strb	wzr, [x8, #1]
  40aaec:	cbz	w10, 40ac60 <ferror@plt+0x8110>
  40aaf0:	ldr	x9, [sp, #64]
  40aaf4:	sub	w10, w10, #0x1
  40aaf8:	ldr	x8, [x9], #8
  40aafc:	str	w10, [sp, #76]
  40ab00:	ldr	x25, [x8, #8]
  40ab04:	str	x9, [sp, #64]
  40ab08:	mov	x0, x25
  40ab0c:	bl	4024f0 <strlen@plt>
  40ab10:	cbz	x0, 40ac98 <ferror@plt+0x8148>
  40ab14:	mov	x26, x0
  40ab18:	bl	402ac0 <__errno_location@plt>
  40ab1c:	mov	x23, x0
  40ab20:	str	wzr, [x0]
  40ab24:	add	x1, x29, #0x8
  40ab28:	mov	x0, x25
  40ab2c:	bl	402560 <strtod@plt>
  40ab30:	ldr	x8, [x29, #8]
  40ab34:	mov	v8.16b, v0.16b
  40ab38:	sub	x8, x8, x25
  40ab3c:	cmp	x8, x26
  40ab40:	b.ne	40acb8 <ferror@plt+0x8168>  // b.any
  40ab44:	bl	4028e0 <__ctype_b_loc@plt>
  40ab48:	ldr	x8, [x0]
  40ab4c:	ldrb	w9, [x25]
  40ab50:	ldrh	w8, [x8, x9, lsl #1]
  40ab54:	tbnz	w8, #13, 40ad78 <ferror@plt+0x8228>
  40ab58:	ldr	w8, [x23]
  40ab5c:	cmp	w8, #0x22
  40ab60:	b.ne	40ad90 <ferror@plt+0x8240>  // b.any
  40ab64:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ab68:	ldr	w0, [x8, #1192]
  40ab6c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ab70:	mov	w1, wzr
  40ab74:	add	x2, x2, #0xe83
  40ab78:	b	40ad8c <ferror@plt+0x823c>
  40ab7c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ab80:	ldr	w0, [x8, #1192]
  40ab84:	ldr	x3, [sp, #40]
  40ab88:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ab8c:	mov	w1, wzr
  40ab90:	add	x2, x2, #0xe0e
  40ab94:	bl	402c5c <ferror@plt+0x10c>
  40ab98:	cmp	w23, #0x0
  40ab9c:	csel	x28, x25, x28, eq  // eq = none
  40aba0:	b	40a6bc <ferror@plt+0x7b6c>
  40aba4:	strb	w23, [x8]
  40aba8:	strb	wzr, [x8, #1]
  40abac:	cbz	w9, 40ac6c <ferror@plt+0x811c>
  40abb0:	ldr	w10, [sp, #76]
  40abb4:	cbz	w10, 40acd8 <ferror@plt+0x8188>
  40abb8:	ldr	x9, [sp, #64]
  40abbc:	sub	w10, w10, #0x1
  40abc0:	ldr	x8, [x9], #8
  40abc4:	str	w10, [sp, #76]
  40abc8:	ldr	x26, [x8, #8]
  40abcc:	str	x9, [sp, #64]
  40abd0:	mov	x0, x26
  40abd4:	bl	4024f0 <strlen@plt>
  40abd8:	mov	x25, x0
  40abdc:	cbz	x0, 40ad44 <ferror@plt+0x81f4>
  40abe0:	bl	402ac0 <__errno_location@plt>
  40abe4:	mov	x23, x0
  40abe8:	str	wzr, [x0]
  40abec:	add	x1, x29, #0x8
  40abf0:	mov	w2, #0xa                   	// #10
  40abf4:	mov	x0, x26
  40abf8:	bl	402900 <strtol@plt>
  40abfc:	ldr	x8, [x29, #8]
  40ac00:	sub	x8, x8, x26
  40ac04:	cmp	x8, x25
  40ac08:	mov	x25, x0
  40ac0c:	b.ne	40ada8 <ferror@plt+0x8258>  // b.any
  40ac10:	bl	4028e0 <__ctype_b_loc@plt>
  40ac14:	ldr	x8, [x0]
  40ac18:	ldrb	w9, [x26]
  40ac1c:	ldrh	w8, [x8, x9, lsl #1]
  40ac20:	tbnz	w8, #13, 40adfc <ferror@plt+0x82ac>
  40ac24:	ldr	w8, [x23]
  40ac28:	cmp	w8, #0x22
  40ac2c:	b.ne	40ae14 <ferror@plt+0x82c4>  // b.any
  40ac30:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ac34:	ldr	w0, [x8, #1192]
  40ac38:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ac3c:	mov	w1, wzr
  40ac40:	add	x2, x2, #0xe83
  40ac44:	b	40ae10 <ferror@plt+0x82c0>
  40ac48:	str	wzr, [sp, #76]
  40ac4c:	ldrb	w26, [x25, #2]!
  40ac50:	mov	w24, wzr
  40ac54:	cmp	w26, #0x68
  40ac58:	b.ne	40a9d0 <ferror@plt+0x7e80>  // b.any
  40ac5c:	b	40aa44 <ferror@plt+0x7ef4>
  40ac60:	str	wzr, [sp, #76]
  40ac64:	fmov	d8, xzr
  40ac68:	b	40ad90 <ferror@plt+0x8240>
  40ac6c:	ldr	w10, [sp, #76]
  40ac70:	cbz	w10, 40ad5c <ferror@plt+0x820c>
  40ac74:	ldr	x9, [sp, #64]
  40ac78:	sub	w10, w10, #0x1
  40ac7c:	ldr	x8, [x9], #8
  40ac80:	str	w10, [sp, #76]
  40ac84:	ldr	x0, [x8, #8]
  40ac88:	str	x9, [sp, #64]
  40ac8c:	bl	40aeec <ferror@plt+0x839c>
  40ac90:	mov	w3, w0
  40ac94:	b	40ad64 <ferror@plt+0x8214>
  40ac98:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ac9c:	ldr	w0, [x8, #1192]
  40aca0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40aca4:	mov	w1, wzr
  40aca8:	add	x2, x2, #0xe36
  40acac:	bl	402c5c <ferror@plt+0x10c>
  40acb0:	fmov	d8, xzr
  40acb4:	b	40ad90 <ferror@plt+0x8240>
  40acb8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40acbc:	ldr	w0, [x8, #1192]
  40acc0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40acc4:	mov	w1, wzr
  40acc8:	add	x2, x2, #0xe50
  40accc:	mov	x3, x25
  40acd0:	bl	402c5c <ferror@plt+0x10c>
  40acd4:	b	40ad90 <ferror@plt+0x8240>
  40acd8:	str	wzr, [sp, #76]
  40acdc:	mov	x25, xzr
  40ace0:	b	40ae14 <ferror@plt+0x82c4>
  40ace4:	ldr	w10, [sp, #76]
  40ace8:	mov	w9, #0x63                  	// #99
  40acec:	sturh	w9, [x8, #-2]
  40acf0:	cbz	w10, 40adc8 <ferror@plt+0x8278>
  40acf4:	ldr	x9, [sp, #64]
  40acf8:	sub	w10, w10, #0x1
  40acfc:	ldr	x8, [x9], #8
  40ad00:	str	w10, [sp, #76]
  40ad04:	ldr	x0, [x8, #8]
  40ad08:	str	x9, [sp, #64]
  40ad0c:	bl	40aeec <ferror@plt+0x839c>
  40ad10:	mov	w2, w0
  40ad14:	b	40add0 <ferror@plt+0x8280>
  40ad18:	ldr	w10, [sp, #76]
  40ad1c:	mov	w9, #0x73                  	// #115
  40ad20:	strh	w9, [x8]
  40ad24:	cbz	w10, 40ade0 <ferror@plt+0x8290>
  40ad28:	ldr	x9, [sp, #64]
  40ad2c:	sub	w10, w10, #0x1
  40ad30:	ldr	x8, [x9], #8
  40ad34:	str	w10, [sp, #76]
  40ad38:	ldr	x3, [x8, #8]
  40ad3c:	str	x9, [sp, #64]
  40ad40:	b	40adec <ferror@plt+0x829c>
  40ad44:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ad48:	ldr	w0, [x8, #1192]
  40ad4c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ad50:	mov	w1, wzr
  40ad54:	add	x2, x2, #0xe36
  40ad58:	b	40ae10 <ferror@plt+0x82c0>
  40ad5c:	str	wzr, [sp, #76]
  40ad60:	mov	w3, wzr
  40ad64:	sub	x0, x29, #0x18
  40ad68:	mov	w1, w27
  40ad6c:	mov	w2, w24
  40ad70:	bl	417aa4 <ferror@plt+0x14f54>
  40ad74:	b	40ae28 <ferror@plt+0x82d8>
  40ad78:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ad7c:	ldr	w0, [x8, #1192]
  40ad80:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ad84:	mov	w1, wzr
  40ad88:	add	x2, x2, #0xe68
  40ad8c:	bl	402c5c <ferror@plt+0x10c>
  40ad90:	sub	x0, x29, #0x18
  40ad94:	mov	w1, w27
  40ad98:	mov	w2, w24
  40ad9c:	mov	v0.16b, v8.16b
  40ada0:	bl	417aa4 <ferror@plt+0x14f54>
  40ada4:	b	40ae28 <ferror@plt+0x82d8>
  40ada8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40adac:	ldr	w0, [x8, #1192]
  40adb0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40adb4:	mov	w1, wzr
  40adb8:	add	x2, x2, #0xe50
  40adbc:	mov	x3, x26
  40adc0:	bl	402c5c <ferror@plt+0x10c>
  40adc4:	b	40ae14 <ferror@plt+0x82c4>
  40adc8:	str	wzr, [sp, #76]
  40adcc:	mov	w2, wzr
  40add0:	sub	x0, x29, #0x18
  40add4:	mov	w1, w27
  40add8:	bl	417aa4 <ferror@plt+0x14f54>
  40addc:	b	40ae28 <ferror@plt+0x82d8>
  40ade0:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ade4:	str	wzr, [sp, #76]
  40ade8:	add	x3, x3, #0x67f
  40adec:	sub	x0, x29, #0x18
  40adf0:	mov	w1, w27
  40adf4:	mov	w2, w24
  40adf8:	b	40ae24 <ferror@plt+0x82d4>
  40adfc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ae00:	ldr	w0, [x8, #1192]
  40ae04:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ae08:	mov	w1, wzr
  40ae0c:	add	x2, x2, #0xe68
  40ae10:	bl	402c5c <ferror@plt+0x10c>
  40ae14:	sub	x0, x29, #0x18
  40ae18:	mov	w1, w27
  40ae1c:	mov	w2, w24
  40ae20:	mov	x3, x25
  40ae24:	bl	417aa4 <ferror@plt+0x14f54>
  40ae28:	mov	x24, x0
  40ae2c:	cbz	x0, 40a6bc <ferror@plt+0x7b6c>
  40ae30:	mov	x0, x24
  40ae34:	bl	4024f0 <strlen@plt>
  40ae38:	mov	x23, x0
  40ae3c:	ldp	x0, x8, [x19, #24]
  40ae40:	sub	x8, x8, x0
  40ae44:	cmp	x8, x23
  40ae48:	b.cs	40ae5c <ferror@plt+0x830c>  // b.hs, b.nlast
  40ae4c:	mov	x0, x19
  40ae50:	mov	x1, x23
  40ae54:	bl	418058 <_obstack_newchunk@@Base>
  40ae58:	ldr	x0, [x19, #24]
  40ae5c:	mov	x1, x24
  40ae60:	mov	x2, x23
  40ae64:	bl	4024c0 <memcpy@plt>
  40ae68:	ldr	x8, [x19, #24]
  40ae6c:	mov	x0, x24
  40ae70:	add	x8, x8, x23
  40ae74:	str	x8, [x19, #24]
  40ae78:	bl	402930 <free@plt>
  40ae7c:	b	40a6bc <ferror@plt+0x7b6c>
  40ae80:	mov	x0, x28
  40ae84:	bl	4024f0 <strlen@plt>
  40ae88:	mov	x20, x0
  40ae8c:	ldp	x0, x8, [x19, #24]
  40ae90:	sub	x8, x8, x0
  40ae94:	cmp	x8, x20
  40ae98:	b.cs	40aeac <ferror@plt+0x835c>  // b.hs, b.nlast
  40ae9c:	mov	x0, x19
  40aea0:	mov	x1, x20
  40aea4:	bl	418058 <_obstack_newchunk@@Base>
  40aea8:	ldr	x0, [x19, #24]
  40aeac:	mov	x1, x28
  40aeb0:	mov	x2, x20
  40aeb4:	bl	4024c0 <memcpy@plt>
  40aeb8:	ldr	x8, [x19, #24]
  40aebc:	ldr	d8, [sp, #240]
  40aec0:	add	x8, x8, x20
  40aec4:	str	x8, [x19, #24]
  40aec8:	ldp	x20, x19, [sp, #336]
  40aecc:	ldp	x22, x21, [sp, #320]
  40aed0:	ldp	x24, x23, [sp, #304]
  40aed4:	ldp	x26, x25, [sp, #288]
  40aed8:	ldp	x28, x27, [sp, #272]
  40aedc:	ldp	x29, x30, [sp, #256]
  40aee0:	add	sp, sp, #0x160
  40aee4:	ret
  40aee8:	bl	402860 <abort@plt>
  40aeec:	stp	x29, x30, [sp, #-48]!
  40aef0:	str	x21, [sp, #16]
  40aef4:	stp	x20, x19, [sp, #32]
  40aef8:	mov	x29, sp
  40aefc:	mov	x20, x0
  40af00:	bl	4024f0 <strlen@plt>
  40af04:	mov	x19, x0
  40af08:	cbz	x0, 40af78 <ferror@plt+0x8428>
  40af0c:	bl	402ac0 <__errno_location@plt>
  40af10:	mov	x21, x0
  40af14:	str	wzr, [x0]
  40af18:	add	x1, x29, #0x18
  40af1c:	mov	w2, #0xa                   	// #10
  40af20:	mov	x0, x20
  40af24:	bl	402900 <strtol@plt>
  40af28:	ldr	x8, [x29, #24]
  40af2c:	sub	x8, x8, x20
  40af30:	cmp	x8, x19
  40af34:	mov	x19, x0
  40af38:	b.ne	40af8c <ferror@plt+0x843c>  // b.any
  40af3c:	bl	4028e0 <__ctype_b_loc@plt>
  40af40:	ldr	x8, [x0]
  40af44:	ldrb	w9, [x20]
  40af48:	ldrh	w8, [x8, x9, lsl #1]
  40af4c:	tbnz	w8, #13, 40afac <ferror@plt+0x845c>
  40af50:	cmp	x19, w19, sxtw
  40af54:	b.ne	40af64 <ferror@plt+0x8414>  // b.any
  40af58:	ldr	w8, [x21]
  40af5c:	cmp	w8, #0x22
  40af60:	b.ne	40afc4 <ferror@plt+0x8474>  // b.any
  40af64:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40af68:	ldr	w0, [x8, #1192]
  40af6c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40af70:	add	x2, x2, #0xe83
  40af74:	b	40afbc <ferror@plt+0x846c>
  40af78:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40af7c:	ldr	w0, [x8, #1192]
  40af80:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40af84:	add	x2, x2, #0xe36
  40af88:	b	40afbc <ferror@plt+0x846c>
  40af8c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40af90:	ldr	w0, [x8, #1192]
  40af94:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40af98:	add	x2, x2, #0xe50
  40af9c:	mov	w1, wzr
  40afa0:	mov	x3, x20
  40afa4:	bl	402c5c <ferror@plt+0x10c>
  40afa8:	b	40afc4 <ferror@plt+0x8474>
  40afac:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40afb0:	ldr	w0, [x8, #1192]
  40afb4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40afb8:	add	x2, x2, #0xe68
  40afbc:	mov	w1, wzr
  40afc0:	bl	402c5c <ferror@plt+0x10c>
  40afc4:	mov	w0, w19
  40afc8:	ldp	x20, x19, [sp, #32]
  40afcc:	ldr	x21, [sp, #16]
  40afd0:	ldp	x29, x30, [sp], #48
  40afd4:	ret
  40afd8:	stp	x29, x30, [sp, #-96]!
  40afdc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40afe0:	add	x1, x1, #0x763
  40afe4:	stp	x28, x27, [sp, #16]
  40afe8:	stp	x26, x25, [sp, #32]
  40afec:	stp	x24, x23, [sp, #48]
  40aff0:	stp	x22, x21, [sp, #64]
  40aff4:	stp	x20, x19, [sp, #80]
  40aff8:	mov	x29, sp
  40affc:	mov	x20, x0
  40b000:	bl	412ecc <ferror@plt+0x1037c>
  40b004:	cbz	x0, 40b2f0 <ferror@plt+0x87a0>
  40b008:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b00c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b010:	add	x1, x1, #0xeaf
  40b014:	add	x2, x2, #0xede
  40b018:	mov	x19, x0
  40b01c:	bl	4177a8 <ferror@plt+0x14c58>
  40b020:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b024:	add	x1, x1, #0xeec
  40b028:	mov	x0, x19
  40b02c:	bl	4177a8 <ferror@plt+0x14c58>
  40b030:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b034:	ldr	x0, [x8, #3504]
  40b038:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b03c:	add	x1, x1, #0xef0
  40b040:	bl	4028d0 <strcmp@plt>
  40b044:	cbnz	w0, 40b060 <ferror@plt+0x8510>
  40b048:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b04c:	ldr	x0, [x8, #3560]
  40b050:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b054:	add	x1, x1, #0x7ca
  40b058:	bl	4028d0 <strcmp@plt>
  40b05c:	cbz	w0, 40b0ac <ferror@plt+0x855c>
  40b060:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b064:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b068:	add	x20, x20, #0xdb0
  40b06c:	add	x21, x21, #0xde8
  40b070:	ldr	w2, [x20, #8]
  40b074:	ldr	w3, [x21, #8]
  40b078:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b07c:	add	x1, x1, #0xef2
  40b080:	mov	x0, x19
  40b084:	bl	4177a8 <ferror@plt+0x14c58>
  40b088:	ldr	x0, [x20]
  40b08c:	mov	x1, x19
  40b090:	bl	402500 <fputs@plt>
  40b094:	ldr	x0, [x21]
  40b098:	mov	x1, x19
  40b09c:	bl	402500 <fputs@plt>
  40b0a0:	mov	w0, #0xa                   	// #10
  40b0a4:	mov	x1, x19
  40b0a8:	bl	4025d0 <fputc@plt>
  40b0ac:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b0b0:	ldr	x0, [x8, #3528]
  40b0b4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b0b8:	add	x1, x1, #0xefa
  40b0bc:	bl	4028d0 <strcmp@plt>
  40b0c0:	cbnz	w0, 40b0dc <ferror@plt+0x858c>
  40b0c4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b0c8:	ldr	x0, [x8, #3544]
  40b0cc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  40b0d0:	add	x1, x1, #0x371
  40b0d4:	bl	4028d0 <strcmp@plt>
  40b0d8:	cbz	w0, 40b128 <ferror@plt+0x85d8>
  40b0dc:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b0e0:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b0e4:	add	x20, x20, #0xdc8
  40b0e8:	add	x21, x21, #0xdd8
  40b0ec:	ldr	w2, [x20, #8]
  40b0f0:	ldr	w3, [x21, #8]
  40b0f4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b0f8:	add	x1, x1, #0xefc
  40b0fc:	mov	x0, x19
  40b100:	bl	4177a8 <ferror@plt+0x14c58>
  40b104:	ldr	x0, [x20]
  40b108:	mov	x1, x19
  40b10c:	bl	402500 <fputs@plt>
  40b110:	ldr	x0, [x21]
  40b114:	mov	x1, x19
  40b118:	bl	402500 <fputs@plt>
  40b11c:	mov	w0, #0xa                   	// #10
  40b120:	mov	x1, x19
  40b124:	bl	4025d0 <fputc@plt>
  40b128:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40b12c:	ldr	x8, [x24, #872]
  40b130:	cbz	x8, 40b294 <ferror@plt+0x8744>
  40b134:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b138:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b13c:	mov	x25, xzr
  40b140:	adrp	x26, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b144:	add	x20, x20, #0xf40
  40b148:	add	x21, x21, #0xf04
  40b14c:	b	40b168 <ferror@plt+0x8618>
  40b150:	mov	x9, xzr
  40b154:	str	x9, [x8, x25, lsl #3]
  40b158:	ldr	x8, [x24, #872]
  40b15c:	add	x25, x25, #0x1
  40b160:	cmp	x25, x8
  40b164:	b.cs	40b294 <ferror@plt+0x8744>  // b.hs, b.nlast
  40b168:	ldr	x9, [x26, #3584]
  40b16c:	ldr	x10, [x9, x25, lsl #3]
  40b170:	cbz	x10, 40b194 <ferror@plt+0x8644>
  40b174:	mov	x8, xzr
  40b178:	mov	x9, x8
  40b17c:	mov	x8, x10
  40b180:	ldr	x10, [x10]
  40b184:	str	x9, [x8]
  40b188:	cbnz	x10, 40b178 <ferror@plt+0x8628>
  40b18c:	ldr	x9, [x26, #3584]
  40b190:	b	40b198 <ferror@plt+0x8648>
  40b194:	mov	x8, xzr
  40b198:	lsl	x10, x25, #3
  40b19c:	str	x8, [x9, x10]
  40b1a0:	ldr	x8, [x26, #3584]
  40b1a4:	ldr	x27, [x8, x10]
  40b1a8:	cbnz	x27, 40b1e4 <ferror@plt+0x8694>
  40b1ac:	b	40b150 <ferror@plt+0x8600>
  40b1b0:	mov	w2, w23
  40b1b4:	bl	4177a8 <ferror@plt+0x14c58>
  40b1b8:	ldr	x0, [x28]
  40b1bc:	mov	x1, x19
  40b1c0:	bl	402500 <fputs@plt>
  40b1c4:	ldr	x0, [x22]
  40b1c8:	mov	x1, x19
  40b1cc:	bl	402500 <fputs@plt>
  40b1d0:	mov	w0, #0xa                   	// #10
  40b1d4:	mov	x1, x19
  40b1d8:	bl	4025d0 <fputc@plt>
  40b1dc:	ldr	x27, [x27]
  40b1e0:	cbz	x27, 40b268 <ferror@plt+0x8718>
  40b1e4:	ldr	w8, [x27, #24]
  40b1e8:	cbz	w8, 40b1dc <ferror@plt+0x868c>
  40b1ec:	cmp	w8, #0x2
  40b1f0:	b.eq	40b22c <ferror@plt+0x86dc>  // b.none
  40b1f4:	cmp	w8, #0x1
  40b1f8:	b.ne	40b340 <ferror@plt+0x87f0>  // b.any
  40b1fc:	mov	x28, x27
  40b200:	ldr	x0, [x28, #16]!
  40b204:	bl	4024f0 <strlen@plt>
  40b208:	mov	x22, x27
  40b20c:	ldr	x8, [x22, #32]!
  40b210:	mov	x23, x0
  40b214:	mov	x0, x8
  40b218:	bl	4024f0 <strlen@plt>
  40b21c:	mov	x3, x0
  40b220:	mov	x0, x19
  40b224:	mov	x1, x21
  40b228:	b	40b1b0 <ferror@plt+0x8660>
  40b22c:	ldr	x0, [x27, #32]
  40b230:	bl	4036d4 <ferror@plt+0xb84>
  40b234:	cbz	x0, 40b354 <ferror@plt+0x8804>
  40b238:	mov	x28, x27
  40b23c:	mov	x22, x0
  40b240:	ldr	x0, [x28, #16]!
  40b244:	bl	4024f0 <strlen@plt>
  40b248:	ldr	x8, [x22]
  40b24c:	mov	x23, x0
  40b250:	mov	x0, x8
  40b254:	bl	4024f0 <strlen@plt>
  40b258:	mov	x3, x0
  40b25c:	mov	x0, x19
  40b260:	mov	x1, x20
  40b264:	b	40b1b0 <ferror@plt+0x8660>
  40b268:	ldr	x8, [x26, #3584]
  40b26c:	ldr	x10, [x8, x25, lsl #3]
  40b270:	cbz	x10, 40b150 <ferror@plt+0x8600>
  40b274:	mov	x9, xzr
  40b278:	mov	x8, x9
  40b27c:	mov	x9, x10
  40b280:	ldr	x10, [x10]
  40b284:	str	x8, [x9]
  40b288:	cbnz	x10, 40b278 <ferror@plt+0x8728>
  40b28c:	ldr	x8, [x26, #3584]
  40b290:	b	40b154 <ferror@plt+0x8604>
  40b294:	mov	x0, x19
  40b298:	bl	40fc94 <ferror@plt+0xd144>
  40b29c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b2a0:	add	x0, x0, #0xf84
  40b2a4:	mov	w1, #0x1b                  	// #27
  40b2a8:	mov	w2, #0x1                   	// #1
  40b2ac:	mov	x3, x19
  40b2b0:	bl	4029b0 <fwrite@plt>
  40b2b4:	mov	x0, x19
  40b2b8:	bl	4122d4 <ferror@plt+0xf784>
  40b2bc:	cbz	w0, 40b324 <ferror@plt+0x87d4>
  40b2c0:	bl	402ac0 <__errno_location@plt>
  40b2c4:	ldr	w1, [x0]
  40b2c8:	ldp	x20, x19, [sp, #80]
  40b2cc:	ldp	x22, x21, [sp, #64]
  40b2d0:	ldp	x24, x23, [sp, #48]
  40b2d4:	ldp	x26, x25, [sp, #32]
  40b2d8:	ldp	x28, x27, [sp, #16]
  40b2dc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b2e0:	add	x2, x2, #0xfa0
  40b2e4:	mov	w0, #0x1                   	// #1
  40b2e8:	ldp	x29, x30, [sp], #96
  40b2ec:	b	402c5c <ferror@plt+0x10c>
  40b2f0:	bl	402ac0 <__errno_location@plt>
  40b2f4:	ldr	w1, [x0]
  40b2f8:	mov	x3, x20
  40b2fc:	ldp	x20, x19, [sp, #80]
  40b300:	ldp	x22, x21, [sp, #64]
  40b304:	ldp	x24, x23, [sp, #48]
  40b308:	ldp	x26, x25, [sp, #32]
  40b30c:	ldp	x28, x27, [sp, #16]
  40b310:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  40b314:	add	x2, x2, #0xd9f
  40b318:	mov	w0, #0x1                   	// #1
  40b31c:	ldp	x29, x30, [sp], #96
  40b320:	b	402c5c <ferror@plt+0x10c>
  40b324:	ldp	x20, x19, [sp, #80]
  40b328:	ldp	x22, x21, [sp, #64]
  40b32c:	ldp	x24, x23, [sp, #48]
  40b330:	ldp	x26, x25, [sp, #32]
  40b334:	ldp	x28, x27, [sp, #16]
  40b338:	ldp	x29, x30, [sp], #96
  40b33c:	ret
  40b340:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40b344:	ldr	w0, [x8, #1192]
  40b348:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b34c:	add	x2, x2, #0xf48
  40b350:	b	40b364 <ferror@plt+0x8814>
  40b354:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40b358:	ldr	w0, [x8, #1192]
  40b35c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b360:	add	x2, x2, #0xf0c
  40b364:	mov	w1, wzr
  40b368:	bl	402c5c <ferror@plt+0x10c>
  40b36c:	bl	402860 <abort@plt>
  40b370:	sub	sp, sp, #0x90
  40b374:	mov	x1, xzr
  40b378:	stp	x29, x30, [sp, #48]
  40b37c:	stp	x28, x27, [sp, #64]
  40b380:	stp	x26, x25, [sp, #80]
  40b384:	stp	x24, x23, [sp, #96]
  40b388:	stp	x22, x21, [sp, #112]
  40b38c:	stp	x20, x19, [sp, #128]
  40b390:	add	x29, sp, #0x30
  40b394:	mov	x20, x0
  40b398:	bl	4102b0 <ferror@plt+0xd760>
  40b39c:	mov	x19, x0
  40b3a0:	cbnz	x0, 40b3c0 <ferror@plt+0x8870>
  40b3a4:	bl	402ac0 <__errno_location@plt>
  40b3a8:	ldr	w1, [x0]
  40b3ac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b3b0:	add	x2, x2, #0xfbe
  40b3b4:	mov	w0, #0x1                   	// #1
  40b3b8:	mov	x3, x20
  40b3bc:	bl	402c5c <ferror@plt+0x10c>
  40b3c0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b3c4:	mov	w0, #0x64                  	// #100
  40b3c8:	str	x20, [x8, #3520]
  40b3cc:	bl	417280 <ferror@plt+0x14730>
  40b3d0:	stur	x0, [x29, #-16]
  40b3d4:	mov	w0, #0x64                  	// #100
  40b3d8:	bl	417280 <ferror@plt+0x14730>
  40b3dc:	stur	x0, [x29, #-8]
  40b3e0:	adrp	x26, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40b3e4:	ldr	w8, [x26, #3496]
  40b3e8:	add	w8, w8, #0x1
  40b3ec:	str	w8, [x26, #3496]
  40b3f0:	b	40b3f8 <ferror@plt+0x88a8>
  40b3f4:	b.eq	40b3e4 <ferror@plt+0x8894>  // b.none
  40b3f8:	mov	x0, x19
  40b3fc:	bl	4027d0 <getc@plt>
  40b400:	cmp	w0, #0xa
  40b404:	cset	w20, eq  // eq = none
  40b408:	b.eq	40b3f4 <ferror@plt+0x88a4>  // b.none
  40b40c:	mov	w22, w0
  40b410:	cmp	w0, #0x23
  40b414:	b.eq	40b430 <ferror@plt+0x88e0>  // b.none
  40b418:	b	40bbc4 <ferror@plt+0x9074>
  40b41c:	mov	x0, x19
  40b420:	bl	4027d0 <getc@plt>
  40b424:	cmp	w0, #0xa
  40b428:	mov	w22, w0
  40b42c:	cset	w20, eq  // eq = none
  40b430:	cmn	w22, #0x1
  40b434:	b.eq	40b45c <ferror@plt+0x890c>  // b.none
  40b438:	cmp	w22, #0xa
  40b43c:	b.eq	40b454 <ferror@plt+0x8904>  // b.none
  40b440:	tbz	w20, #0, 40b41c <ferror@plt+0x88cc>
  40b444:	ldr	w8, [x26, #3496]
  40b448:	add	w8, w8, #0x1
  40b44c:	str	w8, [x26, #3496]
  40b450:	b	40b41c <ferror@plt+0x88cc>
  40b454:	tbz	w20, #0, 40b3f8 <ferror@plt+0x88a8>
  40b458:	b	40b3e4 <ferror@plt+0x8894>
  40b45c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b460:	add	x2, x2, #0xa7
  40b464:	mov	w0, #0x1                   	// #1
  40b468:	mov	w1, wzr
  40b46c:	bl	402c5c <ferror@plt+0x10c>
  40b470:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b474:	add	x2, x2, #0xca
  40b478:	mov	w0, #0x1                   	// #1
  40b47c:	mov	w3, #0x56                  	// #86
  40b480:	mov	w1, wzr
  40b484:	bl	402c5c <ferror@plt+0x10c>
  40b488:	tbz	w20, #0, 40b498 <ferror@plt+0x8948>
  40b48c:	ldr	w8, [x26, #3496]
  40b490:	add	w8, w8, #0x1
  40b494:	str	w8, [x26, #3496]
  40b498:	mov	w20, #0xcccd                	// #52429
  40b49c:	mov	x0, x19
  40b4a0:	movk	w20, #0xccc, lsl #16
  40b4a4:	bl	4027d0 <getc@plt>
  40b4a8:	cmp	w0, #0xa
  40b4ac:	mov	w23, w0
  40b4b0:	cset	w27, eq  // eq = none
  40b4b4:	bl	4028e0 <__ctype_b_loc@plt>
  40b4b8:	ldr	x8, [x0]
  40b4bc:	mov	x22, x0
  40b4c0:	ldrh	w8, [x8, w23, sxtw #1]
  40b4c4:	tbnz	w8, #11, 40b4d4 <ferror@plt+0x8984>
  40b4c8:	mov	w24, wzr
  40b4cc:	mov	w8, wzr
  40b4d0:	b	40b520 <ferror@plt+0x89d0>
  40b4d4:	mov	w24, wzr
  40b4d8:	mov	w21, #0xa                   	// #10
  40b4dc:	madd	w8, w24, w21, w23
  40b4e0:	sub	w24, w8, #0x30
  40b4e4:	tbz	w27, #0, 40b4f4 <ferror@plt+0x89a4>
  40b4e8:	ldr	w8, [x26, #3496]
  40b4ec:	add	w8, w8, #0x1
  40b4f0:	str	w8, [x26, #3496]
  40b4f4:	mov	x0, x19
  40b4f8:	bl	4027d0 <getc@plt>
  40b4fc:	ldr	x8, [x22]
  40b500:	cmp	w0, #0xa
  40b504:	mov	w23, w0
  40b508:	cset	w27, eq  // eq = none
  40b50c:	ldrh	w9, [x8, w0, sxtw #1]
  40b510:	cmp	w24, w20
  40b514:	ubfx	w8, w9, #11, #1
  40b518:	b.cs	40b520 <ferror@plt+0x89d0>  // b.hs, b.nlast
  40b51c:	tbnz	w9, #11, 40b4dc <ferror@plt+0x898c>
  40b520:	tbnz	w24, #31, 40b54c <ferror@plt+0x89fc>
  40b524:	cbnz	w8, 40b54c <ferror@plt+0x89fc>
  40b528:	cmp	w24, #0x2
  40b52c:	b.lt	40b568 <ferror@plt+0x8a18>  // b.tstop
  40b530:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b534:	add	x2, x2, #0xfed
  40b538:	mov	w0, #0x3f                  	// #63
  40b53c:	mov	w1, wzr
  40b540:	mov	w3, w24
  40b544:	bl	402c5c <ferror@plt+0x10c>
  40b548:	b	40b584 <ferror@plt+0x8a34>
  40b54c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b550:	add	x2, x2, #0xfcd
  40b554:	mov	w0, #0x1                   	// #1
  40b558:	mov	w1, wzr
  40b55c:	bl	402c5c <ferror@plt+0x10c>
  40b560:	cmp	w24, #0x2
  40b564:	b.ge	40b530 <ferror@plt+0x89e0>  // b.tcont
  40b568:	cmp	w24, #0x1
  40b56c:	b.eq	40b584 <ferror@plt+0x8a34>  // b.none
  40b570:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b574:	add	x2, x2, #0x24
  40b578:	mov	w0, #0x1                   	// #1
  40b57c:	mov	w1, wzr
  40b580:	bl	402c5c <ferror@plt+0x10c>
  40b584:	cmp	w23, #0xa
  40b588:	b.eq	40b5ac <ferror@plt+0x8a5c>  // b.none
  40b58c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b590:	add	x2, x2, #0xa7
  40b594:	mov	w0, #0x1                   	// #1
  40b598:	mov	w1, wzr
  40b59c:	bl	402c5c <ferror@plt+0x10c>
  40b5a0:	b	40b5ac <ferror@plt+0x8a5c>
  40b5a4:	cmp	w28, #0xa
  40b5a8:	b.ne	40b628 <ferror@plt+0x8ad8>  // b.any
  40b5ac:	tbz	w27, #0, 40b5bc <ferror@plt+0x8a6c>
  40b5b0:	ldr	w8, [x26, #3496]
  40b5b4:	add	w8, w8, #0x1
  40b5b8:	str	w8, [x26, #3496]
  40b5bc:	mov	x0, x19
  40b5c0:	bl	4027d0 <getc@plt>
  40b5c4:	cmp	w0, #0xa
  40b5c8:	mov	w28, w0
  40b5cc:	cset	w27, eq  // eq = none
  40b5d0:	cmp	w0, #0x23
  40b5d4:	b.eq	40b5f0 <ferror@plt+0x8aa0>  // b.none
  40b5d8:	b	40b5a4 <ferror@plt+0x8a54>
  40b5dc:	mov	x0, x19
  40b5e0:	bl	4027d0 <getc@plt>
  40b5e4:	cmp	w0, #0xa
  40b5e8:	mov	w28, w0
  40b5ec:	cset	w27, eq  // eq = none
  40b5f0:	cmn	w28, #0x1
  40b5f4:	b.eq	40b614 <ferror@plt+0x8ac4>  // b.none
  40b5f8:	cmp	w28, #0xa
  40b5fc:	b.eq	40b5a4 <ferror@plt+0x8a54>  // b.none
  40b600:	tbz	w27, #0, 40b5dc <ferror@plt+0x8a8c>
  40b604:	ldr	w8, [x26, #3496]
  40b608:	add	w8, w8, #0x1
  40b60c:	str	w8, [x26, #3496]
  40b610:	b	40b5dc <ferror@plt+0x8a8c>
  40b614:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b618:	add	x2, x2, #0xa7
  40b61c:	mov	w0, #0x1                   	// #1
  40b620:	mov	w1, wzr
  40b624:	bl	402c5c <ferror@plt+0x10c>
  40b628:	mov	w8, #0x64                  	// #100
  40b62c:	str	x8, [sp, #8]
  40b630:	mov	w24, #0xa                   	// #10
  40b634:	mov	w8, #0x64                  	// #100
  40b638:	str	x8, [sp, #16]
  40b63c:	b	40b654 <ferror@plt+0x8b04>
  40b640:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b644:	mov	w0, #0x1                   	// #1
  40b648:	mov	w1, wzr
  40b64c:	add	x2, x2, #0xa7
  40b650:	bl	402c5c <ferror@plt+0x10c>
  40b654:	sub	w21, w28, #0x43
  40b658:	cmp	w21, #0x11
  40b65c:	b.hi	40ba74 <ferror@plt+0x8f24>  // b.pmore
  40b660:	mov	w8, #0x1                   	// #1
  40b664:	mov	w9, #0x400b                	// #16395
  40b668:	lsl	w8, w8, w21
  40b66c:	movk	w9, #0x2, lsl #16
  40b670:	tst	w8, w9
  40b674:	b.eq	40ba74 <ferror@plt+0x8f24>  // b.none
  40b678:	str	x21, [sp, #24]
  40b67c:	tbz	w27, #0, 40b68c <ferror@plt+0x8b3c>
  40b680:	ldr	w8, [x26, #3496]
  40b684:	add	w8, w8, #0x1
  40b688:	str	w8, [x26, #3496]
  40b68c:	mov	x0, x19
  40b690:	bl	4027d0 <getc@plt>
  40b694:	cmp	w0, #0xa
  40b698:	mov	w25, w0
  40b69c:	cset	w21, eq  // eq = none
  40b6a0:	cmp	w28, #0x44
  40b6a4:	b.ne	40b754 <ferror@plt+0x8c04>  // b.any
  40b6a8:	cmp	w25, #0x2d
  40b6ac:	b.ne	40b754 <ferror@plt+0x8c04>  // b.any
  40b6b0:	mov	x0, x19
  40b6b4:	bl	4027d0 <getc@plt>
  40b6b8:	ldr	x8, [x22]
  40b6bc:	cmp	w0, #0xa
  40b6c0:	mov	w25, w0
  40b6c4:	cset	w21, eq  // eq = none
  40b6c8:	ldrh	w8, [x8, w0, sxtw #1]
  40b6cc:	mov	w23, wzr
  40b6d0:	tbnz	w8, #11, 40b6dc <ferror@plt+0x8b8c>
  40b6d4:	mov	w8, wzr
  40b6d8:	b	40b720 <ferror@plt+0x8bd0>
  40b6dc:	madd	w8, w23, w24, w25
  40b6e0:	sub	w23, w8, #0x30
  40b6e4:	tbz	w21, #0, 40b6f4 <ferror@plt+0x8ba4>
  40b6e8:	ldr	w8, [x26, #3496]
  40b6ec:	add	w8, w8, #0x1
  40b6f0:	str	w8, [x26, #3496]
  40b6f4:	mov	x0, x19
  40b6f8:	bl	4027d0 <getc@plt>
  40b6fc:	ldr	x8, [x22]
  40b700:	cmp	w0, #0xa
  40b704:	mov	w25, w0
  40b708:	cset	w21, eq  // eq = none
  40b70c:	ldrh	w9, [x8, w0, sxtw #1]
  40b710:	cmp	w23, w20
  40b714:	ubfx	w8, w9, #11, #1
  40b718:	b.cs	40b720 <ferror@plt+0x8bd0>  // b.hs, b.nlast
  40b71c:	tbnz	w9, #11, 40b6dc <ferror@plt+0x8b8c>
  40b720:	mov	w9, #0x80000000            	// #-2147483648
  40b724:	cmp	w23, w9
  40b728:	b.hi	40b730 <ferror@plt+0x8be0>  // b.pmore
  40b72c:	cbz	w8, 40b744 <ferror@plt+0x8bf4>
  40b730:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b734:	mov	w0, #0x1                   	// #1
  40b738:	mov	w1, wzr
  40b73c:	add	x2, x2, #0xfcd
  40b740:	bl	402c5c <ferror@plt+0x10c>
  40b744:	neg	w23, w23
  40b748:	cmp	w25, #0x2c
  40b74c:	b.eq	40b7c4 <ferror@plt+0x8c74>  // b.none
  40b750:	b	40ba54 <ferror@plt+0x8f04>
  40b754:	ldr	x8, [x22]
  40b758:	ldrh	w8, [x8, w25, sxtw #1]
  40b75c:	tbnz	w8, #11, 40b76c <ferror@plt+0x8c1c>
  40b760:	mov	w23, wzr
  40b764:	mov	w8, wzr
  40b768:	b	40b7b4 <ferror@plt+0x8c64>
  40b76c:	mov	w23, wzr
  40b770:	madd	w8, w23, w24, w25
  40b774:	sub	w23, w8, #0x30
  40b778:	tbz	w21, #0, 40b788 <ferror@plt+0x8c38>
  40b77c:	ldr	w8, [x26, #3496]
  40b780:	add	w8, w8, #0x1
  40b784:	str	w8, [x26, #3496]
  40b788:	mov	x0, x19
  40b78c:	bl	4027d0 <getc@plt>
  40b790:	ldr	x8, [x22]
  40b794:	cmp	w0, #0xa
  40b798:	mov	w25, w0
  40b79c:	cset	w21, eq  // eq = none
  40b7a0:	ldrh	w9, [x8, w0, sxtw #1]
  40b7a4:	cmp	w23, w20
  40b7a8:	ubfx	w8, w9, #11, #1
  40b7ac:	b.cs	40b7b4 <ferror@plt+0x8c64>  // b.hs, b.nlast
  40b7b0:	tbnz	w9, #11, 40b770 <ferror@plt+0x8c20>
  40b7b4:	tbnz	w23, #31, 40ba38 <ferror@plt+0x8ee8>
  40b7b8:	cbnz	w8, 40ba38 <ferror@plt+0x8ee8>
  40b7bc:	cmp	w25, #0x2c
  40b7c0:	b.ne	40ba54 <ferror@plt+0x8f04>  // b.any
  40b7c4:	cbz	w21, 40b7d4 <ferror@plt+0x8c84>
  40b7c8:	ldr	w8, [x26, #3496]
  40b7cc:	add	w8, w8, #0x1
  40b7d0:	str	w8, [x26, #3496]
  40b7d4:	mov	x0, x19
  40b7d8:	bl	4027d0 <getc@plt>
  40b7dc:	ldr	x8, [x22]
  40b7e0:	cmp	w0, #0xa
  40b7e4:	mov	w27, w0
  40b7e8:	cset	w21, eq  // eq = none
  40b7ec:	ldrh	w8, [x8, w0, sxtw #1]
  40b7f0:	mov	w25, wzr
  40b7f4:	tbnz	w8, #11, 40b800 <ferror@plt+0x8cb0>
  40b7f8:	mov	w8, wzr
  40b7fc:	b	40b844 <ferror@plt+0x8cf4>
  40b800:	madd	w8, w25, w24, w27
  40b804:	sub	w25, w8, #0x30
  40b808:	tbz	w21, #0, 40b818 <ferror@plt+0x8cc8>
  40b80c:	ldr	w8, [x26, #3496]
  40b810:	add	w8, w8, #0x1
  40b814:	str	w8, [x26, #3496]
  40b818:	mov	x0, x19
  40b81c:	bl	4027d0 <getc@plt>
  40b820:	ldr	x8, [x22]
  40b824:	cmp	w0, #0xa
  40b828:	mov	w27, w0
  40b82c:	cset	w21, eq  // eq = none
  40b830:	ldrh	w9, [x8, w0, sxtw #1]
  40b834:	cmp	w25, w20
  40b838:	ubfx	w8, w9, #11, #1
  40b83c:	b.cs	40b844 <ferror@plt+0x8cf4>  // b.hs, b.nlast
  40b840:	tbnz	w9, #11, 40b800 <ferror@plt+0x8cb0>
  40b844:	tbnz	w25, #31, 40b860 <ferror@plt+0x8d10>
  40b848:	cbnz	w8, 40b860 <ferror@plt+0x8d10>
  40b84c:	cmp	w27, #0xa
  40b850:	b.ne	40b87c <ferror@plt+0x8d2c>  // b.any
  40b854:	cmp	w28, #0x44
  40b858:	b.ne	40b898 <ferror@plt+0x8d48>  // b.any
  40b85c:	b	40b934 <ferror@plt+0x8de4>
  40b860:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40b864:	mov	w0, #0x1                   	// #1
  40b868:	mov	w1, wzr
  40b86c:	add	x2, x2, #0xfcd
  40b870:	bl	402c5c <ferror@plt+0x10c>
  40b874:	cmp	w27, #0xa
  40b878:	b.eq	40b854 <ferror@plt+0x8d04>  // b.none
  40b87c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b880:	mov	w0, #0x1                   	// #1
  40b884:	mov	w1, wzr
  40b888:	add	x2, x2, #0xa7
  40b88c:	bl	402c5c <ferror@plt+0x10c>
  40b890:	cmp	w28, #0x44
  40b894:	b.eq	40b934 <ferror@plt+0x8de4>  // b.none
  40b898:	ldr	x8, [sp, #8]
  40b89c:	cmp	w23, w8
  40b8a0:	b.lt	40b8c0 <ferror@plt+0x8d70>  // b.tstop
  40b8a4:	ldur	x0, [x29, #-16]
  40b8a8:	add	w27, w23, #0x1
  40b8ac:	bl	402930 <free@plt>
  40b8b0:	sxtw	x0, w27
  40b8b4:	str	x27, [sp, #8]
  40b8b8:	bl	417280 <ferror@plt+0x14730>
  40b8bc:	stur	x0, [x29, #-16]
  40b8c0:	cmp	w23, #0x1
  40b8c4:	b.lt	40b8f4 <ferror@plt+0x8da4>  // b.tstop
  40b8c8:	ldur	x0, [x29, #-16]
  40b8cc:	mov	w1, w23
  40b8d0:	mov	w2, #0x1                   	// #1
  40b8d4:	mov	x3, x19
  40b8d8:	bl	402920 <fread@plt>
  40b8dc:	cbnz	x0, 40b8f4 <ferror@plt+0x8da4>
  40b8e0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b8e4:	mov	w0, #0x1                   	// #1
  40b8e8:	mov	w1, wzr
  40b8ec:	add	x2, x2, #0x6e
  40b8f0:	bl	402c5c <ferror@plt+0x10c>
  40b8f4:	ldur	x0, [x29, #-16]
  40b8f8:	sxtw	x2, w23
  40b8fc:	mov	w1, #0xa                   	// #10
  40b900:	add	x27, x0, x2
  40b904:	strb	wzr, [x27]
  40b908:	bl	402a00 <memchr@plt>
  40b90c:	cbz	x0, 40b934 <ferror@plt+0x8de4>
  40b910:	ldr	w8, [x26, #3496]
  40b914:	add	w28, w8, #0x1
  40b918:	add	x0, x0, #0x1
  40b91c:	sub	x2, x27, x0
  40b920:	mov	w1, #0xa                   	// #10
  40b924:	str	w28, [x26, #3496]
  40b928:	bl	402a00 <memchr@plt>
  40b92c:	add	w28, w28, #0x1
  40b930:	cbnz	x0, 40b918 <ferror@plt+0x8dc8>
  40b934:	ldr	x8, [sp, #16]
  40b938:	cmp	w25, w8
  40b93c:	b.lt	40b95c <ferror@plt+0x8e0c>  // b.tstop
  40b940:	ldur	x0, [x29, #-8]
  40b944:	add	w27, w25, #0x1
  40b948:	bl	402930 <free@plt>
  40b94c:	sxtw	x0, w27
  40b950:	str	x27, [sp, #16]
  40b954:	bl	417280 <ferror@plt+0x14730>
  40b958:	stur	x0, [x29, #-8]
  40b95c:	cmp	w25, #0x1
  40b960:	b.lt	40b990 <ferror@plt+0x8e40>  // b.tstop
  40b964:	ldur	x0, [x29, #-8]
  40b968:	mov	w1, w25
  40b96c:	mov	w2, #0x1                   	// #1
  40b970:	mov	x3, x19
  40b974:	bl	402920 <fread@plt>
  40b978:	cbnz	x0, 40b990 <ferror@plt+0x8e40>
  40b97c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b980:	mov	w0, #0x1                   	// #1
  40b984:	mov	w1, wzr
  40b988:	add	x2, x2, #0x6e
  40b98c:	bl	402c5c <ferror@plt+0x10c>
  40b990:	ldur	x0, [x29, #-8]
  40b994:	sxtw	x2, w25
  40b998:	mov	w1, #0xa                   	// #10
  40b99c:	add	x27, x0, x2
  40b9a0:	strb	wzr, [x27]
  40b9a4:	bl	402a00 <memchr@plt>
  40b9a8:	cbz	x0, 40b9d0 <ferror@plt+0x8e80>
  40b9ac:	ldr	w8, [x26, #3496]
  40b9b0:	add	w28, w8, #0x1
  40b9b4:	add	x0, x0, #0x1
  40b9b8:	sub	x2, x27, x0
  40b9bc:	mov	w1, #0xa                   	// #10
  40b9c0:	str	w28, [x26, #3496]
  40b9c4:	bl	402a00 <memchr@plt>
  40b9c8:	add	w28, w28, #0x1
  40b9cc:	cbnz	x0, 40b9b4 <ferror@plt+0x8e64>
  40b9d0:	cbz	w21, 40b9e0 <ferror@plt+0x8e90>
  40b9d4:	ldr	w8, [x26, #3496]
  40b9d8:	add	w8, w8, #0x1
  40b9dc:	str	w8, [x26, #3496]
  40b9e0:	mov	x0, x19
  40b9e4:	bl	4027d0 <getc@plt>
  40b9e8:	cmp	w0, #0xa
  40b9ec:	cset	w27, eq  // eq = none
  40b9f0:	b.eq	40ba08 <ferror@plt+0x8eb8>  // b.none
  40b9f4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40b9f8:	mov	w0, #0x1                   	// #1
  40b9fc:	mov	w1, wzr
  40ba00:	add	x2, x2, #0xa7
  40ba04:	bl	402c5c <ferror@plt+0x10c>
  40ba08:	ldr	x11, [sp, #24]
  40ba0c:	cmp	w11, #0x11
  40ba10:	b.hi	40bafc <ferror@plt+0x8fac>  // b.pmore
  40ba14:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ba18:	add	x10, x10, #0xe9d
  40ba1c:	adr	x8, 40ba2c <ferror@plt+0x8edc>
  40ba20:	ldrb	w9, [x10, x11]
  40ba24:	add	x8, x8, x9, lsl #2
  40ba28:	br	x8
  40ba2c:	ldp	x0, x1, [x29, #-16]
  40ba30:	bl	40c82c <ferror@plt+0x9cdc>
  40ba34:	b	40bafc <ferror@plt+0x8fac>
  40ba38:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40ba3c:	mov	w0, #0x1                   	// #1
  40ba40:	mov	w1, wzr
  40ba44:	add	x2, x2, #0xfcd
  40ba48:	bl	402c5c <ferror@plt+0x10c>
  40ba4c:	cmp	w25, #0x2c
  40ba50:	b.eq	40b7c4 <ferror@plt+0x8c74>  // b.none
  40ba54:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ba58:	mov	w0, #0x1                   	// #1
  40ba5c:	mov	w3, #0x2c                  	// #44
  40ba60:	mov	w1, wzr
  40ba64:	add	x2, x2, #0xca
  40ba68:	bl	402c5c <ferror@plt+0x10c>
  40ba6c:	cbnz	w21, 40b7c8 <ferror@plt+0x8c78>
  40ba70:	b	40b7d4 <ferror@plt+0x8c84>
  40ba74:	cmn	w28, #0x1
  40ba78:	b.eq	40bb64 <ferror@plt+0x9014>  // b.none
  40ba7c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ba80:	mov	w0, #0x1                   	// #1
  40ba84:	mov	w1, wzr
  40ba88:	add	x2, x2, #0x57
  40ba8c:	bl	402c5c <ferror@plt+0x10c>
  40ba90:	str	x21, [sp, #24]
  40ba94:	tbnz	w27, #0, 40b680 <ferror@plt+0x8b30>
  40ba98:	b	40b68c <ferror@plt+0x8b3c>
  40ba9c:	mov	w0, w23
  40baa0:	bl	40f214 <ferror@plt+0xc6c4>
  40baa4:	cmp	w25, #0x1
  40baa8:	b.lt	40bafc <ferror@plt+0x8fac>  // b.tstop
  40baac:	ldur	x0, [x29, #-8]
  40bab0:	mov	w1, w25
  40bab4:	bl	40e0c8 <ferror@plt+0xb578>
  40bab8:	b	40bafc <ferror@plt+0x8fac>
  40babc:	ldur	x0, [x29, #-8]
  40bac0:	bl	403748 <ferror@plt+0xbf8>
  40bac4:	mov	x1, x0
  40bac8:	ldur	x0, [x29, #-16]
  40bacc:	mov	w2, #0x3                   	// #3
  40bad0:	bl	4037a0 <ferror@plt+0xc50>
  40bad4:	b	40bafc <ferror@plt+0x8fac>
  40bad8:	ldp	x0, x1, [x29, #-16]
  40badc:	bl	40c784 <ferror@plt+0x9c34>
  40bae0:	b	40bafc <ferror@plt+0x8fac>
  40bae4:	ldp	x0, x1, [x29, #-16]
  40bae8:	mov	w2, #0x3                   	// #3
  40baec:	bl	4038d0 <ferror@plt+0xd80>
  40baf0:	b	40bafc <ferror@plt+0x8fac>
  40baf4:	cmp	w28, #0xa
  40baf8:	b.ne	40b654 <ferror@plt+0x8b04>  // b.any
  40bafc:	tbz	w27, #0, 40bb0c <ferror@plt+0x8fbc>
  40bb00:	ldr	w8, [x26, #3496]
  40bb04:	add	w8, w8, #0x1
  40bb08:	str	w8, [x26, #3496]
  40bb0c:	mov	x0, x19
  40bb10:	bl	4027d0 <getc@plt>
  40bb14:	cmp	w0, #0xa
  40bb18:	mov	w28, w0
  40bb1c:	cset	w27, eq  // eq = none
  40bb20:	cmp	w0, #0x23
  40bb24:	b.eq	40bb40 <ferror@plt+0x8ff0>  // b.none
  40bb28:	b	40baf4 <ferror@plt+0x8fa4>
  40bb2c:	mov	x0, x19
  40bb30:	bl	4027d0 <getc@plt>
  40bb34:	cmp	w0, #0xa
  40bb38:	mov	w28, w0
  40bb3c:	cset	w27, eq  // eq = none
  40bb40:	cmn	w28, #0x1
  40bb44:	b.eq	40b640 <ferror@plt+0x8af0>  // b.none
  40bb48:	cmp	w28, #0xa
  40bb4c:	b.eq	40baf4 <ferror@plt+0x8fa4>  // b.none
  40bb50:	tbz	w27, #0, 40bb2c <ferror@plt+0x8fdc>
  40bb54:	ldr	w8, [x26, #3496]
  40bb58:	add	w8, w8, #0x1
  40bb5c:	str	w8, [x26, #3496]
  40bb60:	b	40bb2c <ferror@plt+0x8fdc>
  40bb64:	ldur	x0, [x29, #-16]
  40bb68:	bl	402930 <free@plt>
  40bb6c:	ldur	x0, [x29, #-8]
  40bb70:	bl	402930 <free@plt>
  40bb74:	mov	x0, x19
  40bb78:	bl	4122d4 <ferror@plt+0xf784>
  40bb7c:	cbz	w0, 40bb98 <ferror@plt+0x9048>
  40bb80:	bl	402ac0 <__errno_location@plt>
  40bb84:	ldr	w1, [x0]
  40bb88:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40bb8c:	add	x2, x2, #0x8b
  40bb90:	mov	w0, #0x1                   	// #1
  40bb94:	bl	402c5c <ferror@plt+0x10c>
  40bb98:	str	wzr, [x26, #3496]
  40bb9c:	ldp	x20, x19, [sp, #128]
  40bba0:	ldp	x22, x21, [sp, #112]
  40bba4:	ldp	x24, x23, [sp, #96]
  40bba8:	ldp	x26, x25, [sp, #80]
  40bbac:	ldp	x28, x27, [sp, #64]
  40bbb0:	ldp	x29, x30, [sp, #48]
  40bbb4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40bbb8:	str	xzr, [x8, #3520]
  40bbbc:	add	sp, sp, #0x90
  40bbc0:	ret
  40bbc4:	cmp	w22, #0x56
  40bbc8:	b.eq	40bbe4 <ferror@plt+0x9094>  // b.none
  40bbcc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40bbd0:	add	x2, x2, #0xca
  40bbd4:	mov	w0, #0x1                   	// #1
  40bbd8:	mov	w3, #0x56                  	// #86
  40bbdc:	mov	w1, wzr
  40bbe0:	bl	402c5c <ferror@plt+0x10c>
  40bbe4:	cmp	w22, #0xa
  40bbe8:	b.eq	40b48c <ferror@plt+0x893c>  // b.none
  40bbec:	b	40b498 <ferror@plt+0x8948>
  40bbf0:	stp	x29, x30, [sp, #-64]!
  40bbf4:	stp	x24, x23, [sp, #16]
  40bbf8:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bbfc:	stp	x22, x21, [sp, #32]
  40bc00:	mov	x21, x1
  40bc04:	ldr	x1, [x23, #2200]
  40bc08:	stp	x20, x19, [sp, #48]
  40bc0c:	mov	w20, w2
  40bc10:	mov	x19, x0
  40bc14:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bc18:	mov	x29, sp
  40bc1c:	cbz	x1, 40bc4c <ferror@plt+0x90fc>
  40bc20:	ldr	x0, [x22, #2208]
  40bc24:	ldr	x8, [x0, #8]
  40bc28:	cmp	x8, x1
  40bc2c:	b.cs	40bc44 <ferror@plt+0x90f4>  // b.hs, b.nlast
  40bc30:	ldr	x8, [x0, #32]
  40bc34:	cmp	x8, x1
  40bc38:	b.ls	40bc44 <ferror@plt+0x90f4>  // b.plast
  40bc3c:	stp	x1, x1, [x0, #16]
  40bc40:	b	40bc48 <ferror@plt+0x90f8>
  40bc44:	bl	4181d0 <_obstack_free@@Base>
  40bc48:	str	xzr, [x23, #2200]
  40bc4c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bc50:	ldrb	w8, [x8, #1173]
  40bc54:	tbz	w8, #0, 40bc88 <ferror@plt+0x9138>
  40bc58:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bc5c:	ldr	x8, [x23, #2088]
  40bc60:	cbz	x8, 40bc88 <ferror@plt+0x9138>
  40bc64:	bl	408c84 <ferror@plt+0x6134>
  40bc68:	ldr	x0, [x23, #2088]
  40bc6c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40bc70:	add	x1, x1, #0xf2
  40bc74:	mov	x2, x21
  40bc78:	bl	4177a8 <ferror@plt+0x14c58>
  40bc7c:	ldr	x1, [x23, #2088]
  40bc80:	mov	w0, #0xa                   	// #10
  40bc84:	bl	4025a0 <putc@plt>
  40bc88:	ldr	x22, [x22, #2208]
  40bc8c:	ldp	x8, x9, [x22, #24]
  40bc90:	sub	x9, x9, x8
  40bc94:	cmp	x9, #0x2f
  40bc98:	b.hi	40bcac <ferror@plt+0x915c>  // b.pmore
  40bc9c:	mov	w1, #0x30                  	// #48
  40bca0:	mov	x0, x22
  40bca4:	bl	418058 <_obstack_newchunk@@Base>
  40bca8:	ldr	x8, [x22, #24]
  40bcac:	ldr	x24, [x22, #16]
  40bcb0:	add	x8, x8, #0x30
  40bcb4:	str	x8, [x22, #24]
  40bcb8:	cmp	x8, x24
  40bcbc:	b.ne	40bccc <ferror@plt+0x917c>  // b.any
  40bcc0:	ldrb	w9, [x22, #80]
  40bcc4:	orr	w9, w9, #0x2
  40bcc8:	strb	w9, [x22, #80]
  40bccc:	ldr	x10, [x22, #48]
  40bcd0:	ldr	x11, [x22, #8]
  40bcd4:	ldr	x9, [x22, #32]
  40bcd8:	add	x8, x10, x8
  40bcdc:	bic	x8, x8, x10
  40bce0:	sub	x10, x8, x11
  40bce4:	sub	x11, x9, x11
  40bce8:	cmp	x10, x11
  40bcec:	str	x8, [x22, #24]
  40bcf0:	b.ls	40bcfc <ferror@plt+0x91ac>  // b.plast
  40bcf4:	mov	x8, x9
  40bcf8:	str	x9, [x22, #24]
  40bcfc:	str	x8, [x22, #16]
  40bd00:	mov	w8, #0x1                   	// #1
  40bd04:	mov	x0, x21
  40bd08:	str	w8, [x24, #8]
  40bd0c:	bl	4024f0 <strlen@plt>
  40bd10:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bd14:	add	x8, x8, #0x8c0
  40bd18:	mov	x22, x0
  40bd1c:	ldp	x0, x9, [x8]
  40bd20:	add	x1, x22, #0x1
  40bd24:	sub	x8, x9, x0
  40bd28:	cmp	x8, x1
  40bd2c:	b.cs	40bd44 <ferror@plt+0x91f4>  // b.hs, b.nlast
  40bd30:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bd34:	add	x23, x23, #0x8a8
  40bd38:	mov	x0, x23
  40bd3c:	bl	418058 <_obstack_newchunk@@Base>
  40bd40:	ldr	x0, [x23, #24]
  40bd44:	mov	x1, x21
  40bd48:	mov	x2, x22
  40bd4c:	bl	4024c0 <memcpy@plt>
  40bd50:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bd54:	add	x9, x9, #0x8b8
  40bd58:	ldr	x8, [x9, #8]
  40bd5c:	add	x8, x8, x22
  40bd60:	add	x10, x8, #0x1
  40bd64:	str	x10, [x9, #8]
  40bd68:	strb	wzr, [x8]
  40bd6c:	ldp	x8, x9, [x9]
  40bd70:	cmp	x9, x8
  40bd74:	b.ne	40bd88 <ferror@plt+0x9238>  // b.any
  40bd78:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bd7c:	ldrb	w11, [x10, #2296]
  40bd80:	orr	w11, w11, #0x2
  40bd84:	strb	w11, [x10, #2296]
  40bd88:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bd8c:	add	x10, x10, #0x8b0
  40bd90:	ldr	x11, [x10, #40]
  40bd94:	ldr	x12, [x10]
  40bd98:	ldr	x13, [x10, #24]
  40bd9c:	add	x9, x11, x9
  40bda0:	bic	x9, x9, x11
  40bda4:	sub	x11, x13, x12
  40bda8:	sub	x12, x9, x12
  40bdac:	cmp	x12, x11
  40bdb0:	mov	w11, #0x1                   	// #1
  40bdb4:	adrp	x12, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bdb8:	csel	x9, x13, x9, hi  // hi = pmore
  40bdbc:	stp	x9, x9, [x10, #8]
  40bdc0:	str	x8, [x24, #16]
  40bdc4:	str	w11, [x24, #24]
  40bdc8:	strb	w11, [x12, #2304]
  40bdcc:	ldrb	w8, [x24, #40]
  40bdd0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bdd4:	str	x19, [x24, #32]
  40bdd8:	ldrb	w9, [x9, #2308]
  40bddc:	mov	w13, #0x2                   	// #2
  40bde0:	tst	w20, #0x1
  40bde4:	csel	w11, w13, wzr, ne  // ne = any
  40bde8:	and	w8, w8, #0xf8
  40bdec:	orr	w8, w8, w11
  40bdf0:	orr	w8, w8, w9, lsl #2
  40bdf4:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bdf8:	strb	w8, [x24, #40]
  40bdfc:	ldr	x8, [x10, #2312]
  40be00:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40be04:	mov	w11, #0xffffffff            	// #-1
  40be08:	str	w11, [x9, #3576]
  40be0c:	str	x8, [x24]
  40be10:	str	x24, [x10, #2312]
  40be14:	ldp	x20, x19, [sp, #48]
  40be18:	ldp	x22, x21, [sp, #32]
  40be1c:	ldp	x24, x23, [sp, #16]
  40be20:	ldp	x29, x30, [sp], #64
  40be24:	ret
  40be28:	stp	x29, x30, [sp, #-48]!
  40be2c:	stp	x20, x19, [sp, #32]
  40be30:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40be34:	ldr	x1, [x20, #2200]
  40be38:	str	x21, [sp, #16]
  40be3c:	mov	x19, x0
  40be40:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40be44:	mov	x29, sp
  40be48:	cbz	x1, 40be78 <ferror@plt+0x9328>
  40be4c:	ldr	x0, [x21, #2208]
  40be50:	ldr	x8, [x0, #8]
  40be54:	cmp	x8, x1
  40be58:	b.cs	40be70 <ferror@plt+0x9320>  // b.hs, b.nlast
  40be5c:	ldr	x8, [x0, #32]
  40be60:	cmp	x8, x1
  40be64:	b.ls	40be70 <ferror@plt+0x9320>  // b.plast
  40be68:	stp	x1, x1, [x0, #16]
  40be6c:	b	40be74 <ferror@plt+0x9324>
  40be70:	bl	4181d0 <_obstack_free@@Base>
  40be74:	str	xzr, [x20, #2200]
  40be78:	ldr	x20, [x21, #2208]
  40be7c:	ldp	x9, x8, [x20, #24]
  40be80:	sub	x8, x8, x9
  40be84:	cmp	x8, #0x2f
  40be88:	b.hi	40be9c <ferror@plt+0x934c>  // b.pmore
  40be8c:	mov	w1, #0x30                  	// #48
  40be90:	mov	x0, x20
  40be94:	bl	418058 <_obstack_newchunk@@Base>
  40be98:	ldr	x9, [x20, #24]
  40be9c:	ldr	x8, [x20, #16]
  40bea0:	add	x9, x9, #0x30
  40bea4:	str	x9, [x20, #24]
  40bea8:	cmp	x9, x8
  40beac:	b.ne	40bebc <ferror@plt+0x936c>  // b.any
  40beb0:	ldrb	w10, [x20, #80]
  40beb4:	orr	w10, w10, #0x2
  40beb8:	strb	w10, [x20, #80]
  40bebc:	ldr	x11, [x20, #48]
  40bec0:	ldr	x12, [x20, #8]
  40bec4:	ldr	x10, [x20, #32]
  40bec8:	add	x9, x11, x9
  40becc:	bic	x9, x9, x11
  40bed0:	sub	x11, x9, x12
  40bed4:	sub	x12, x10, x12
  40bed8:	cmp	x11, x12
  40bedc:	str	x9, [x20, #24]
  40bee0:	b.ls	40beec <ferror@plt+0x939c>  // b.plast
  40bee4:	mov	x9, x10
  40bee8:	str	x10, [x20, #24]
  40beec:	str	x9, [x20, #16]
  40bef0:	mov	w9, #0x2                   	// #2
  40bef4:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40bef8:	str	w9, [x8, #8]
  40befc:	ldr	x9, [x10, #3520]
  40bf00:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40bf04:	ldr	x21, [sp, #16]
  40bf08:	str	x9, [x8, #16]
  40bf0c:	ldr	w9, [x10, #3496]
  40bf10:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bf14:	str	w9, [x8, #24]
  40bf18:	mov	w9, #0x1                   	// #1
  40bf1c:	strb	w9, [x10, #2304]
  40bf20:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bf24:	str	x19, [x8, #32]
  40bf28:	ldr	x10, [x9, #2312]
  40bf2c:	str	x10, [x8]
  40bf30:	ldp	x20, x19, [sp, #32]
  40bf34:	str	x8, [x9, #2312]
  40bf38:	ldp	x29, x30, [sp], #48
  40bf3c:	ret
  40bf40:	stp	x29, x30, [sp, #-48]!
  40bf44:	str	x21, [sp, #16]
  40bf48:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bf4c:	ldr	x8, [x21, #2200]
  40bf50:	stp	x20, x19, [sp, #32]
  40bf54:	mov	x29, sp
  40bf58:	cbnz	x8, 40c00c <ferror@plt+0x94bc>
  40bf5c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40bf60:	ldr	x19, [x20, #2208]
  40bf64:	ldp	x9, x8, [x19, #24]
  40bf68:	sub	x8, x8, x9
  40bf6c:	cmp	x8, #0x2f
  40bf70:	b.hi	40bf84 <ferror@plt+0x9434>  // b.pmore
  40bf74:	mov	w1, #0x30                  	// #48
  40bf78:	mov	x0, x19
  40bf7c:	bl	418058 <_obstack_newchunk@@Base>
  40bf80:	ldr	x9, [x19, #24]
  40bf84:	ldr	x8, [x19, #16]
  40bf88:	add	x9, x9, #0x30
  40bf8c:	str	x9, [x19, #24]
  40bf90:	cmp	x9, x8
  40bf94:	b.ne	40bfa4 <ferror@plt+0x9454>  // b.any
  40bf98:	ldrb	w10, [x19, #80]
  40bf9c:	orr	w10, w10, #0x2
  40bfa0:	strb	w10, [x19, #80]
  40bfa4:	ldr	x11, [x19, #48]
  40bfa8:	ldr	x12, [x19, #8]
  40bfac:	ldr	x10, [x19, #32]
  40bfb0:	add	x9, x11, x9
  40bfb4:	bic	x9, x9, x11
  40bfb8:	sub	x11, x9, x12
  40bfbc:	sub	x12, x10, x12
  40bfc0:	cmp	x11, x12
  40bfc4:	str	x9, [x19, #24]
  40bfc8:	b.ls	40bfd4 <ferror@plt+0x9484>  // b.plast
  40bfcc:	mov	x9, x10
  40bfd0:	str	x10, [x19, #24]
  40bfd4:	str	x9, [x19, #16]
  40bfd8:	str	x8, [x21, #2200]
  40bfdc:	str	wzr, [x8, #8]
  40bfe0:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40bfe4:	ldr	x9, [x9, #3520]
  40bfe8:	ldr	x21, [sp, #16]
  40bfec:	str	x9, [x8, #16]
  40bff0:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40bff4:	ldr	w9, [x9, #3496]
  40bff8:	str	w9, [x8, #24]
  40bffc:	ldr	x0, [x20, #2208]
  40c000:	ldp	x20, x19, [sp, #32]
  40c004:	ldp	x29, x30, [sp], #48
  40c008:	ret
  40c00c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c010:	ldr	w0, [x8, #1192]
  40c014:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40c018:	add	x2, x2, #0x105
  40c01c:	mov	w1, wzr
  40c020:	bl	402c5c <ferror@plt+0x10c>
  40c024:	bl	402860 <abort@plt>
  40c028:	stp	x29, x30, [sp, #-48]!
  40c02c:	stp	x20, x19, [sp, #32]
  40c030:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c034:	ldr	x1, [x20, #2200]
  40c038:	stp	x22, x21, [sp, #16]
  40c03c:	mov	x29, sp
  40c040:	cbz	x1, 40c0fc <ferror@plt+0x95ac>
  40c044:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c048:	ldr	x19, [x22, #2208]
  40c04c:	ldp	x9, x8, [x19, #16]
  40c050:	subs	x21, x8, x9
  40c054:	b.eq	40c104 <ferror@plt+0x95b4>  // b.none
  40c058:	ldr	x9, [x19, #32]
  40c05c:	cmp	x9, x8
  40c060:	b.ne	40c074 <ferror@plt+0x9524>  // b.any
  40c064:	mov	w1, #0x1                   	// #1
  40c068:	mov	x0, x19
  40c06c:	bl	418058 <_obstack_newchunk@@Base>
  40c070:	ldr	x8, [x19, #24]
  40c074:	add	x9, x8, #0x1
  40c078:	str	x9, [x19, #24]
  40c07c:	strb	wzr, [x8]
  40c080:	ldr	x8, [x22, #2208]
  40c084:	ldp	x0, x9, [x8, #16]
  40c088:	cmp	x9, x0
  40c08c:	b.ne	40c09c <ferror@plt+0x954c>  // b.any
  40c090:	ldrb	w10, [x8, #80]
  40c094:	orr	w10, w10, #0x2
  40c098:	strb	w10, [x8, #80]
  40c09c:	ldr	x11, [x8, #48]
  40c0a0:	ldr	x12, [x8, #8]
  40c0a4:	ldr	x10, [x8, #32]
  40c0a8:	add	x9, x11, x9
  40c0ac:	bic	x9, x9, x11
  40c0b0:	sub	x11, x9, x12
  40c0b4:	sub	x12, x10, x12
  40c0b8:	cmp	x11, x12
  40c0bc:	str	x9, [x8, #24]
  40c0c0:	b.ls	40c0cc <ferror@plt+0x957c>  // b.plast
  40c0c4:	mov	x9, x10
  40c0c8:	str	x10, [x8, #24]
  40c0cc:	str	x9, [x8, #16]
  40c0d0:	ldr	x8, [x20, #2200]
  40c0d4:	add	x9, x0, x21
  40c0d8:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c0dc:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c0e0:	stp	x0, x9, [x8, #32]
  40c0e4:	ldr	x9, [x10, #2312]
  40c0e8:	mov	w12, #0x1                   	// #1
  40c0ec:	str	x9, [x8]
  40c0f0:	str	x8, [x10, #2312]
  40c0f4:	strb	w12, [x11, #2304]
  40c0f8:	b	40c134 <ferror@plt+0x95e4>
  40c0fc:	mov	x0, xzr
  40c100:	b	40c138 <ferror@plt+0x95e8>
  40c104:	ldr	x8, [x19, #8]
  40c108:	cmp	x8, x1
  40c10c:	b.cs	40c128 <ferror@plt+0x95d8>  // b.hs, b.nlast
  40c110:	ldr	x8, [x19, #32]
  40c114:	cmp	x8, x1
  40c118:	b.ls	40c128 <ferror@plt+0x95d8>  // b.plast
  40c11c:	mov	x0, xzr
  40c120:	stp	x1, x1, [x19, #16]
  40c124:	b	40c134 <ferror@plt+0x95e4>
  40c128:	mov	x0, x19
  40c12c:	bl	4181d0 <_obstack_free@@Base>
  40c130:	mov	x0, xzr
  40c134:	str	xzr, [x20, #2200]
  40c138:	ldp	x20, x19, [sp, #32]
  40c13c:	ldp	x22, x21, [sp, #16]
  40c140:	ldp	x29, x30, [sp], #48
  40c144:	ret
  40c148:	stp	x29, x30, [sp, #-64]!
  40c14c:	stp	x24, x23, [sp, #16]
  40c150:	stp	x22, x21, [sp, #32]
  40c154:	stp	x20, x19, [sp, #48]
  40c158:	mov	x29, sp
  40c15c:	mov	x20, x0
  40c160:	bl	4024f0 <strlen@plt>
  40c164:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c168:	ldr	x21, [x24, #2320]
  40c16c:	mov	x19, x0
  40c170:	ldp	x8, x9, [x21, #24]
  40c174:	sub	x9, x9, x8
  40c178:	cmp	x9, #0x2f
  40c17c:	b.hi	40c190 <ferror@plt+0x9640>  // b.pmore
  40c180:	mov	w1, #0x30                  	// #48
  40c184:	mov	x0, x21
  40c188:	bl	418058 <_obstack_newchunk@@Base>
  40c18c:	ldr	x8, [x21, #24]
  40c190:	ldr	x22, [x21, #16]
  40c194:	add	x8, x8, #0x30
  40c198:	str	x8, [x21, #24]
  40c19c:	cmp	x8, x22
  40c1a0:	b.ne	40c1b0 <ferror@plt+0x9660>  // b.any
  40c1a4:	ldrb	w9, [x21, #80]
  40c1a8:	orr	w9, w9, #0x2
  40c1ac:	strb	w9, [x21, #80]
  40c1b0:	ldr	x10, [x21, #48]
  40c1b4:	ldr	x11, [x21, #8]
  40c1b8:	ldr	x9, [x21, #32]
  40c1bc:	add	x8, x10, x8
  40c1c0:	bic	x8, x8, x10
  40c1c4:	sub	x10, x8, x11
  40c1c8:	sub	x11, x9, x11
  40c1cc:	cmp	x10, x11
  40c1d0:	str	x8, [x21, #24]
  40c1d4:	b.ls	40c1e0 <ferror@plt+0x9690>  // b.plast
  40c1d8:	mov	x8, x9
  40c1dc:	str	x9, [x21, #24]
  40c1e0:	str	x8, [x21, #16]
  40c1e4:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c1e8:	ldr	x8, [x23, #2328]
  40c1ec:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c1f0:	str	wzr, [x22, #8]
  40c1f4:	add	x1, x19, #0x1
  40c1f8:	str	x8, [x22]
  40c1fc:	ldr	x8, [x9, #3520]
  40c200:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c204:	str	x8, [x22, #16]
  40c208:	ldr	w8, [x9, #3496]
  40c20c:	str	w8, [x22, #24]
  40c210:	ldr	x21, [x24, #2320]
  40c214:	ldp	x0, x8, [x21, #24]
  40c218:	sub	x8, x8, x0
  40c21c:	cmp	x8, x1
  40c220:	b.cs	40c230 <ferror@plt+0x96e0>  // b.hs, b.nlast
  40c224:	mov	x0, x21
  40c228:	bl	418058 <_obstack_newchunk@@Base>
  40c22c:	ldr	x0, [x21, #24]
  40c230:	mov	x1, x20
  40c234:	mov	x2, x19
  40c238:	bl	4024c0 <memcpy@plt>
  40c23c:	ldr	x8, [x21, #24]
  40c240:	add	x8, x8, x19
  40c244:	add	x9, x8, #0x1
  40c248:	str	x9, [x21, #24]
  40c24c:	strb	wzr, [x8]
  40c250:	ldp	x8, x9, [x21, #16]
  40c254:	cmp	x9, x8
  40c258:	b.ne	40c268 <ferror@plt+0x9718>  // b.any
  40c25c:	ldrb	w10, [x21, #80]
  40c260:	orr	w10, w10, #0x2
  40c264:	strb	w10, [x21, #80]
  40c268:	ldr	x11, [x21, #48]
  40c26c:	ldr	x12, [x21, #8]
  40c270:	ldr	x10, [x21, #32]
  40c274:	add	x9, x11, x9
  40c278:	bic	x9, x9, x11
  40c27c:	sub	x11, x9, x12
  40c280:	sub	x12, x10, x12
  40c284:	cmp	x11, x12
  40c288:	str	x9, [x21, #24]
  40c28c:	b.ls	40c298 <ferror@plt+0x9748>  // b.plast
  40c290:	mov	x9, x10
  40c294:	str	x10, [x21, #24]
  40c298:	str	x9, [x21, #16]
  40c29c:	add	x9, x8, x19
  40c2a0:	stp	x8, x9, [x22, #32]
  40c2a4:	str	x22, [x23, #2328]
  40c2a8:	ldp	x20, x19, [sp, #48]
  40c2ac:	ldp	x22, x21, [sp, #32]
  40c2b0:	ldp	x24, x23, [sp, #16]
  40c2b4:	ldp	x29, x30, [sp], #64
  40c2b8:	ret
  40c2bc:	stp	x29, x30, [sp, #-48]!
  40c2c0:	stp	x20, x19, [sp, #32]
  40c2c4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c2c8:	ldr	x0, [x20, #2208]
  40c2cc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c2d0:	mov	x1, xzr
  40c2d4:	str	x21, [sp, #16]
  40c2d8:	mov	x29, sp
  40c2dc:	str	xzr, [x8, #2200]
  40c2e0:	bl	4181d0 <_obstack_free@@Base>
  40c2e4:	ldr	x0, [x20, #2208]
  40c2e8:	bl	402930 <free@plt>
  40c2ec:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c2f0:	ldr	x8, [x19, #2328]
  40c2f4:	cbz	x8, 40c34c <ferror@plt+0x97fc>
  40c2f8:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c2fc:	ldr	x8, [x21, #2320]
  40c300:	mov	w0, #0x58                  	// #88
  40c304:	str	x8, [x20, #2208]
  40c308:	bl	417280 <ferror@plt+0x14730>
  40c30c:	adrp	x3, 417000 <ferror@plt+0x144b0>
  40c310:	adrp	x4, 402000 <mbrtowc@plt-0x4b0>
  40c314:	add	x3, x3, #0x280
  40c318:	add	x4, x4, #0x930
  40c31c:	mov	x1, xzr
  40c320:	mov	x2, xzr
  40c324:	str	x0, [x21, #2320]
  40c328:	bl	417f04 <_obstack_begin@@Base>
  40c32c:	ldr	x8, [x19, #2328]
  40c330:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c334:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c338:	mov	w0, #0x1                   	// #1
  40c33c:	str	xzr, [x19, #2328]
  40c340:	str	x8, [x9, #2312]
  40c344:	strb	w0, [x10, #2304]
  40c348:	b	40c388 <ferror@plt+0x9838>
  40c34c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c350:	add	x0, x0, #0x920
  40c354:	mov	x1, xzr
  40c358:	bl	4181d0 <_obstack_free@@Base>
  40c35c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c360:	add	x0, x0, #0x8a8
  40c364:	mov	x1, xzr
  40c368:	bl	4181d0 <_obstack_free@@Base>
  40c36c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c370:	ldr	x0, [x19, #2320]
  40c374:	mov	x1, xzr
  40c378:	bl	4181d0 <_obstack_free@@Base>
  40c37c:	ldr	x0, [x19, #2320]
  40c380:	bl	402930 <free@plt>
  40c384:	mov	w0, wzr
  40c388:	ldp	x20, x19, [sp, #32]
  40c38c:	ldr	x21, [sp, #16]
  40c390:	ldp	x29, x30, [sp], #48
  40c394:	ret
  40c398:	stp	x29, x30, [sp, #-64]!
  40c39c:	stp	x24, x23, [sp, #16]
  40c3a0:	stp	x22, x21, [sp, #32]
  40c3a4:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c3a8:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c3ac:	stp	x20, x19, [sp, #48]
  40c3b0:	ldr	x20, [x23, #3520]
  40c3b4:	ldr	w19, [x22, #3496]
  40c3b8:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c3bc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c3c0:	mov	x29, sp
  40c3c4:	ldr	x8, [x24, #2312]
  40c3c8:	cbz	x8, 40c3d4 <ferror@plt+0x9884>
  40c3cc:	ldr	w9, [x8, #8]
  40c3d0:	cbz	w9, 40c3ec <ferror@plt+0x989c>
  40c3d4:	bl	40c46c <ferror@plt+0x991c>
  40c3d8:	cmp	w0, #0xa
  40c3dc:	b.eq	40c438 <ferror@plt+0x98e8>  // b.none
  40c3e0:	cmp	w0, #0x100
  40c3e4:	b.ne	40c3c4 <ferror@plt+0x9874>  // b.any
  40c3e8:	b	40c418 <ferror@plt+0x98c8>
  40c3ec:	ldr	x9, [x8, #32]
  40c3f0:	ldrb	w10, [x9]
  40c3f4:	cbz	w10, 40c3d4 <ferror@plt+0x9884>
  40c3f8:	ldrb	w10, [x21, #2304]
  40c3fc:	tbnz	w10, #0, 40c3d4 <ferror@plt+0x9884>
  40c400:	add	x10, x9, #0x1
  40c404:	str	x10, [x8, #32]
  40c408:	ldrb	w0, [x9]
  40c40c:	cmp	w0, #0xa
  40c410:	b.ne	40c3e0 <ferror@plt+0x9890>  // b.any
  40c414:	b	40c438 <ferror@plt+0x98e8>
  40c418:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c41c:	ldr	w0, [x8, #1192]
  40c420:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40c424:	add	x4, x4, #0x12c
  40c428:	mov	w1, wzr
  40c42c:	mov	x2, x20
  40c430:	mov	w3, w19
  40c434:	bl	402d08 <ferror@plt+0x1b8>
  40c438:	ldr	x8, [x23, #3520]
  40c43c:	cmp	x20, x8
  40c440:	b.ne	40c450 <ferror@plt+0x9900>  // b.any
  40c444:	ldr	w8, [x22, #3496]
  40c448:	cmp	w19, w8
  40c44c:	b.eq	40c458 <ferror@plt+0x9908>  // b.none
  40c450:	mov	w8, #0x1                   	// #1
  40c454:	strb	w8, [x21, #2304]
  40c458:	ldp	x20, x19, [sp, #48]
  40c45c:	ldp	x22, x21, [sp, #32]
  40c460:	ldp	x24, x23, [sp, #16]
  40c464:	ldp	x29, x30, [sp], #64
  40c468:	ret
  40c46c:	stp	x29, x30, [sp, #-64]!
  40c470:	stp	x20, x19, [sp, #48]
  40c474:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c478:	ldr	x8, [x19, #2312]
  40c47c:	str	x23, [sp, #16]
  40c480:	stp	x22, x21, [sp, #32]
  40c484:	mov	x29, sp
  40c488:	cbz	x8, 40c52c <ferror@plt+0x99dc>
  40c48c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c490:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c494:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c498:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c49c:	ldrb	w9, [x21, #2304]
  40c4a0:	cmp	w9, #0x1
  40c4a4:	b.ne	40c4bc <ferror@plt+0x996c>  // b.any
  40c4a8:	ldr	x9, [x8, #16]
  40c4ac:	str	x9, [x22, #3520]
  40c4b0:	ldr	w9, [x8, #24]
  40c4b4:	strb	wzr, [x21, #2304]
  40c4b8:	str	w9, [x23, #3496]
  40c4bc:	ldr	w9, [x8, #8]
  40c4c0:	cmp	w9, #0x2
  40c4c4:	b.eq	40c54c <ferror@plt+0x99fc>  // b.none
  40c4c8:	cmp	w9, #0x1
  40c4cc:	b.eq	40c4ec <ferror@plt+0x999c>  // b.none
  40c4d0:	cbnz	w9, 40c57c <ferror@plt+0x9a2c>
  40c4d4:	ldr	x9, [x8, #32]
  40c4d8:	add	x10, x9, #0x1
  40c4dc:	str	x10, [x8, #32]
  40c4e0:	ldrb	w0, [x9]
  40c4e4:	cbz	w0, 40c520 <ferror@plt+0x99d0>
  40c4e8:	b	40c554 <ferror@plt+0x9a04>
  40c4ec:	ldrb	w9, [x20, #2308]
  40c4f0:	cbz	w9, 40c508 <ferror@plt+0x99b8>
  40c4f4:	strb	wzr, [x20, #2308]
  40c4f8:	ldr	w9, [x8, #24]
  40c4fc:	add	w9, w9, #0x1
  40c500:	str	w9, [x8, #24]
  40c504:	str	w9, [x23, #3496]
  40c508:	ldrb	w9, [x8, #40]
  40c50c:	tbnz	w9, #0, 40c520 <ferror@plt+0x99d0>
  40c510:	ldr	x0, [x8, #32]
  40c514:	bl	4027d0 <getc@plt>
  40c518:	cmn	w0, #0x1
  40c51c:	b.ne	40c568 <ferror@plt+0x9a18>  // b.any
  40c520:	bl	40d54c <ferror@plt+0xa9fc>
  40c524:	ldr	x8, [x19, #2312]
  40c528:	cbnz	x8, 40c49c <ferror@plt+0x994c>
  40c52c:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c530:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c534:	add	x9, x9, #0x67f
  40c538:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c53c:	str	x9, [x8, #3520]
  40c540:	str	wzr, [x10, #3496]
  40c544:	mov	w0, #0x100                 	// #256
  40c548:	b	40c554 <ferror@plt+0x9a04>
  40c54c:	bl	40d54c <ferror@plt+0xa9fc>
  40c550:	mov	w0, #0x101                 	// #257
  40c554:	ldp	x20, x19, [sp, #48]
  40c558:	ldp	x22, x21, [sp, #32]
  40c55c:	ldr	x23, [sp, #16]
  40c560:	ldp	x29, x30, [sp], #64
  40c564:	ret
  40c568:	cmp	w0, #0xa
  40c56c:	b.ne	40c554 <ferror@plt+0x9a04>  // b.any
  40c570:	mov	w8, #0x1                   	// #1
  40c574:	strb	w8, [x20, #2308]
  40c578:	b	40c554 <ferror@plt+0x9a04>
  40c57c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c580:	ldr	w0, [x8, #1192]
  40c584:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40c588:	add	x2, x2, #0x1cf
  40c58c:	mov	w1, wzr
  40c590:	bl	402c5c <ferror@plt+0x10c>
  40c594:	bl	402860 <abort@plt>
  40c598:	stp	x29, x30, [sp, #-48]!
  40c59c:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c5a0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c5a4:	add	x9, x9, #0x67f
  40c5a8:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c5ac:	mov	w0, #0x58                  	// #88
  40c5b0:	str	x21, [sp, #16]
  40c5b4:	stp	x20, x19, [sp, #32]
  40c5b8:	mov	x29, sp
  40c5bc:	str	x9, [x8, #3520]
  40c5c0:	str	wzr, [x10, #3496]
  40c5c4:	bl	417280 <ferror@plt+0x14730>
  40c5c8:	adrp	x20, 417000 <ferror@plt+0x144b0>
  40c5cc:	adrp	x21, 402000 <mbrtowc@plt-0x4b0>
  40c5d0:	add	x20, x20, #0x280
  40c5d4:	add	x21, x21, #0x930
  40c5d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c5dc:	mov	x1, xzr
  40c5e0:	mov	x2, xzr
  40c5e4:	mov	x3, x20
  40c5e8:	mov	x4, x21
  40c5ec:	str	x0, [x8, #2208]
  40c5f0:	bl	417f04 <_obstack_begin@@Base>
  40c5f4:	mov	w0, #0x58                  	// #88
  40c5f8:	bl	417280 <ferror@plt+0x14730>
  40c5fc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c600:	mov	x1, xzr
  40c604:	mov	x2, xzr
  40c608:	mov	x3, x20
  40c60c:	mov	x4, x21
  40c610:	str	x0, [x8, #2320]
  40c614:	bl	417f04 <_obstack_begin@@Base>
  40c618:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c61c:	add	x0, x0, #0x8a8
  40c620:	mov	x1, xzr
  40c624:	mov	x2, xzr
  40c628:	mov	x3, x20
  40c62c:	mov	x4, x21
  40c630:	bl	417f04 <_obstack_begin@@Base>
  40c634:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c638:	add	x19, x19, #0x920
  40c63c:	mov	x0, x19
  40c640:	mov	x1, xzr
  40c644:	mov	x2, xzr
  40c648:	mov	x3, x20
  40c64c:	mov	x4, x21
  40c650:	bl	417f04 <_obstack_begin@@Base>
  40c654:	ldp	x8, x9, [x19, #24]
  40c658:	cmp	x9, x8
  40c65c:	b.ne	40c670 <ferror@plt+0x9b20>  // b.any
  40c660:	mov	w1, #0x1                   	// #1
  40c664:	mov	x0, x19
  40c668:	bl	418058 <_obstack_newchunk@@Base>
  40c66c:	ldr	x8, [x19, #24]
  40c670:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c674:	add	x9, x9, #0x930
  40c678:	ldr	x10, [x9]
  40c67c:	add	x8, x8, #0x1
  40c680:	str	x8, [x9, #8]
  40c684:	cmp	x8, x10
  40c688:	b.ne	40c69c <ferror@plt+0x9b4c>  // b.any
  40c68c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c690:	ldrb	w10, [x9, #2416]
  40c694:	orr	w10, w10, #0x2
  40c698:	strb	w10, [x9, #2416]
  40c69c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6a0:	add	x9, x9, #0x928
  40c6a4:	ldr	x10, [x9, #40]
  40c6a8:	ldr	x11, [x9]
  40c6ac:	ldr	x12, [x9, #24]
  40c6b0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c6b4:	add	x8, x10, x8
  40c6b8:	bic	x8, x8, x10
  40c6bc:	sub	x10, x12, x11
  40c6c0:	sub	x11, x8, x11
  40c6c4:	cmp	x11, x10
  40c6c8:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6cc:	str	xzr, [x11, #2312]
  40c6d0:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6d4:	str	xzr, [x11, #2328]
  40c6d8:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6dc:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6e0:	str	xzr, [x11, #2200]
  40c6e4:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c6e8:	csel	x8, x12, x8, hi  // hi = pmore
  40c6ec:	add	x0, x0, #0xef0
  40c6f0:	stp	x8, x8, [x9, #8]
  40c6f4:	str	x8, [x10, #2424]
  40c6f8:	strb	wzr, [x11, #2308]
  40c6fc:	bl	4175c4 <ferror@plt+0x14a74>
  40c700:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c704:	add	x19, x19, #0xdb0
  40c708:	str	x0, [x19]
  40c70c:	bl	4024f0 <strlen@plt>
  40c710:	str	x0, [x19, #8]
  40c714:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c718:	add	x0, x0, #0x7ca
  40c71c:	bl	4175c4 <ferror@plt+0x14a74>
  40c720:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c724:	add	x19, x19, #0xde8
  40c728:	str	x0, [x19]
  40c72c:	bl	4024f0 <strlen@plt>
  40c730:	str	x0, [x19, #8]
  40c734:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c738:	add	x0, x0, #0xefa
  40c73c:	bl	4175c4 <ferror@plt+0x14a74>
  40c740:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c744:	add	x19, x19, #0xdc8
  40c748:	str	x0, [x19]
  40c74c:	bl	4024f0 <strlen@plt>
  40c750:	str	x0, [x19, #8]
  40c754:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  40c758:	add	x0, x0, #0x371
  40c75c:	bl	4175c4 <ferror@plt+0x14a74>
  40c760:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c764:	add	x19, x19, #0xdd8
  40c768:	str	x0, [x19]
  40c76c:	bl	4024f0 <strlen@plt>
  40c770:	str	x0, [x19, #8]
  40c774:	ldp	x20, x19, [sp, #32]
  40c778:	ldr	x21, [sp, #16]
  40c77c:	ldp	x29, x30, [sp], #48
  40c780:	ret
  40c784:	stp	x29, x30, [sp, #-32]!
  40c788:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c78c:	ldr	x8, [x8, #3504]
  40c790:	stp	x20, x19, [sp, #16]
  40c794:	mov	x20, x0
  40c798:	mov	x29, sp
  40c79c:	mov	x0, x8
  40c7a0:	mov	x19, x1
  40c7a4:	bl	402930 <free@plt>
  40c7a8:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c7ac:	ldr	x0, [x8, #3560]
  40c7b0:	bl	402930 <free@plt>
  40c7b4:	cbz	x20, 40c7d8 <ferror@plt+0x9c88>
  40c7b8:	cbz	x19, 40c7cc <ferror@plt+0x9c7c>
  40c7bc:	ldrb	w8, [x20]
  40c7c0:	cbz	w8, 40c7e8 <ferror@plt+0x9c98>
  40c7c4:	ldrb	w8, [x19]
  40c7c8:	cbnz	w8, 40c7e8 <ferror@plt+0x9c98>
  40c7cc:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c7d0:	add	x19, x19, #0x7ca
  40c7d4:	b	40c7e8 <ferror@plt+0x9c98>
  40c7d8:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c7dc:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c7e0:	add	x19, x19, #0x7ca
  40c7e4:	add	x20, x20, #0xef0
  40c7e8:	mov	x0, x20
  40c7ec:	bl	4175c4 <ferror@plt+0x14a74>
  40c7f0:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c7f4:	add	x20, x20, #0xdb0
  40c7f8:	str	x0, [x20]
  40c7fc:	bl	4024f0 <strlen@plt>
  40c800:	str	x0, [x20, #8]
  40c804:	mov	x0, x19
  40c808:	bl	4175c4 <ferror@plt+0x14a74>
  40c80c:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c810:	add	x19, x19, #0xde8
  40c814:	str	x0, [x19]
  40c818:	bl	4024f0 <strlen@plt>
  40c81c:	str	x0, [x19, #8]
  40c820:	ldp	x20, x19, [sp, #16]
  40c824:	ldp	x29, x30, [sp], #32
  40c828:	ret
  40c82c:	stp	x29, x30, [sp, #-32]!
  40c830:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c834:	ldr	x8, [x8, #3528]
  40c838:	stp	x20, x19, [sp, #16]
  40c83c:	mov	x20, x0
  40c840:	mov	x29, sp
  40c844:	mov	x0, x8
  40c848:	mov	x19, x1
  40c84c:	bl	402930 <free@plt>
  40c850:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c854:	ldr	x0, [x8, #3544]
  40c858:	bl	402930 <free@plt>
  40c85c:	cbz	x20, 40c880 <ferror@plt+0x9d30>
  40c860:	cbz	x19, 40c874 <ferror@plt+0x9d24>
  40c864:	ldrb	w8, [x20]
  40c868:	cbz	w8, 40c88c <ferror@plt+0x9d3c>
  40c86c:	ldrb	w8, [x19]
  40c870:	cbnz	w8, 40c88c <ferror@plt+0x9d3c>
  40c874:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0x3d94>
  40c878:	add	x19, x19, #0x371
  40c87c:	b	40c88c <ferror@plt+0x9d3c>
  40c880:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40c884:	add	x20, x20, #0x67f
  40c888:	mov	x19, x20
  40c88c:	mov	x0, x20
  40c890:	bl	4175c4 <ferror@plt+0x14a74>
  40c894:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c898:	add	x20, x20, #0xdc8
  40c89c:	str	x0, [x20]
  40c8a0:	bl	4024f0 <strlen@plt>
  40c8a4:	str	x0, [x20, #8]
  40c8a8:	mov	x0, x19
  40c8ac:	bl	4175c4 <ferror@plt+0x14a74>
  40c8b0:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c8b4:	add	x19, x19, #0xdd8
  40c8b8:	str	x0, [x19]
  40c8bc:	bl	4024f0 <strlen@plt>
  40c8c0:	str	x0, [x19, #8]
  40c8c4:	ldp	x20, x19, [sp, #16]
  40c8c8:	ldp	x29, x30, [sp], #32
  40c8cc:	ret
  40c8d0:	sub	sp, sp, #0x90
  40c8d4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c8d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c8dc:	add	x9, x9, #0x928
  40c8e0:	stp	x20, x19, [sp, #128]
  40c8e4:	mov	x20, x1
  40c8e8:	ldr	x1, [x8, #2424]
  40c8ec:	ldr	x8, [x9]
  40c8f0:	stp	x24, x23, [sp, #96]
  40c8f4:	mov	x23, x0
  40c8f8:	stp	x29, x30, [sp, #48]
  40c8fc:	cmp	x1, x8
  40c900:	stp	x28, x27, [sp, #64]
  40c904:	stp	x26, x25, [sp, #80]
  40c908:	stp	x22, x21, [sp, #112]
  40c90c:	add	x29, sp, #0x30
  40c910:	b.ls	40c930 <ferror@plt+0x9de0>  // b.plast
  40c914:	ldr	x8, [x9, #24]
  40c918:	cmp	x1, x8
  40c91c:	b.cs	40c930 <ferror@plt+0x9de0>  // b.hs, b.nlast
  40c920:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c924:	add	x8, x8, #0x930
  40c928:	stp	x1, x1, [x8]
  40c92c:	b	40c93c <ferror@plt+0x9dec>
  40c930:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c934:	add	x0, x0, #0x920
  40c938:	bl	4181d0 <_obstack_free@@Base>
  40c93c:	cmp	x20, #0x0
  40c940:	sub	x8, x29, #0x4
  40c944:	csel	x24, x8, x20, eq  // eq = none
  40c948:	bl	40d218 <ferror@plt+0xa6c8>
  40c94c:	cmp	w0, #0x101
  40c950:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c954:	b.eq	40c980 <ferror@plt+0x9e30>  // b.none
  40c958:	mov	w21, w0
  40c95c:	cmp	w0, #0x100
  40c960:	b.ne	40c9b4 <ferror@plt+0x9e64>  // b.any
  40c964:	ldr	x8, [x26, #2312]
  40c968:	cbz	x8, 40c974 <ferror@plt+0x9e24>
  40c96c:	ldr	w9, [x8, #8]
  40c970:	cbz	w9, 40ced4 <ferror@plt+0xa384>
  40c974:	bl	40c46c <ferror@plt+0x991c>
  40c978:	mov	w22, wzr
  40c97c:	b	40d1b8 <ferror@plt+0xa668>
  40c980:	ldr	x8, [x26, #2312]
  40c984:	ldr	w9, [x8, #8]
  40c988:	cmp	w9, #0x2
  40c98c:	b.ne	40d1dc <ferror@plt+0xa68c>  // b.any
  40c990:	str	w9, [x23]
  40c994:	ldr	x9, [x8, #32]
  40c998:	str	x9, [x23, #8]
  40c99c:	cbz	x8, 40c9a8 <ferror@plt+0x9e58>
  40c9a0:	ldr	w9, [x8, #8]
  40c9a4:	cbz	w9, 40cefc <ferror@plt+0xa3ac>
  40c9a8:	bl	40c46c <ferror@plt+0x991c>
  40c9ac:	mov	w22, #0x7                   	// #7
  40c9b0:	b	40d1b8 <ferror@plt+0xa668>
  40c9b4:	ldr	x8, [x26, #2312]
  40c9b8:	cbz	x8, 40c9c4 <ferror@plt+0x9e74>
  40c9bc:	ldr	w9, [x8, #8]
  40c9c0:	cbz	w9, 40cf20 <ferror@plt+0xa3d0>
  40c9c4:	bl	40c46c <ferror@plt+0x991c>
  40c9c8:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c9cc:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c9d0:	ldr	w8, [x8, #3496]
  40c9d4:	ldr	x27, [x9, #3520]
  40c9d8:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40c9dc:	add	x28, x28, #0x938
  40c9e0:	str	w8, [x24]
  40c9e4:	cbz	w21, 40cb10 <ferror@plt+0x9fc0>
  40c9e8:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40c9ec:	ldr	x0, [x19, #3528]
  40c9f0:	ldrb	w8, [x0]
  40c9f4:	cmp	w21, w8
  40c9f8:	b.ne	40cb10 <ferror@plt+0x9fc0>  // b.any
  40c9fc:	ldrb	w8, [x0, #1]!
  40ca00:	cbz	w8, 40ca10 <ferror@plt+0x9ec0>
  40ca04:	mov	w1, #0x1                   	// #1
  40ca08:	bl	40d2cc <ferror@plt+0xa77c>
  40ca0c:	tbz	w0, #0, 40cb10 <ferror@plt+0x9fc0>
  40ca10:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ca14:	ldp	x0, x9, [x28]
  40ca18:	ldr	x22, [x8, #3536]
  40ca1c:	mov	x25, x23
  40ca20:	sub	x8, x9, x0
  40ca24:	cmp	x8, x22
  40ca28:	b.cs	40ca44 <ferror@plt+0x9ef4>  // b.hs, b.nlast
  40ca2c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ca30:	add	x21, x21, #0x920
  40ca34:	mov	x0, x21
  40ca38:	mov	x1, x22
  40ca3c:	bl	418058 <_obstack_newchunk@@Base>
  40ca40:	ldr	x0, [x21, #24]
  40ca44:	ldr	x1, [x19, #3528]
  40ca48:	mov	x2, x22
  40ca4c:	bl	4024c0 <memcpy@plt>
  40ca50:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ca54:	ldr	x8, [x19, #2360]
  40ca58:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ca5c:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ca60:	add	x21, x21, #0x920
  40ca64:	add	x8, x8, x22
  40ca68:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ca6c:	str	x8, [x19, #2360]
  40ca70:	b	40ca80 <ferror@plt+0x9f30>
  40ca74:	add	x9, x8, #0x1
  40ca78:	str	x9, [x19, #2360]
  40ca7c:	strb	w22, [x8]
  40ca80:	ldr	x8, [x26, #2312]
  40ca84:	cbz	x8, 40ca90 <ferror@plt+0x9f40>
  40ca88:	ldr	w9, [x8, #8]
  40ca8c:	cbz	w9, 40cae8 <ferror@plt+0x9f98>
  40ca90:	bl	40c46c <ferror@plt+0x991c>
  40ca94:	mov	w22, w0
  40ca98:	cmp	w0, #0x100
  40ca9c:	b.eq	40cfa8 <ferror@plt+0xa458>  // b.none
  40caa0:	cbz	w22, 40cac8 <ferror@plt+0x9f78>
  40caa4:	ldr	x0, [x23, #3544]
  40caa8:	ldrb	w8, [x0]
  40caac:	cmp	w22, w8
  40cab0:	b.ne	40cac8 <ferror@plt+0x9f78>  // b.any
  40cab4:	ldrb	w8, [x0, #1]!
  40cab8:	cbz	w8, 40cf60 <ferror@plt+0xa410>
  40cabc:	mov	w1, #0x1                   	// #1
  40cac0:	bl	40d2cc <ferror@plt+0xa77c>
  40cac4:	tbnz	w0, #0, 40cf60 <ferror@plt+0xa410>
  40cac8:	ldp	x8, x9, [x28]
  40cacc:	cmp	x9, x8
  40cad0:	b.ne	40ca74 <ferror@plt+0x9f24>  // b.any
  40cad4:	mov	w1, #0x1                   	// #1
  40cad8:	mov	x0, x21
  40cadc:	bl	418058 <_obstack_newchunk@@Base>
  40cae0:	ldr	x8, [x21, #24]
  40cae4:	b	40ca74 <ferror@plt+0x9f24>
  40cae8:	ldr	x9, [x8, #32]
  40caec:	ldrb	w10, [x9]
  40caf0:	cbz	w10, 40ca90 <ferror@plt+0x9f40>
  40caf4:	ldrb	w10, [x20, #2304]
  40caf8:	tbnz	w10, #0, 40ca90 <ferror@plt+0x9f40>
  40cafc:	add	x10, x9, #0x1
  40cb00:	str	x10, [x8, #32]
  40cb04:	ldrb	w22, [x9]
  40cb08:	cbnz	w22, 40caa4 <ferror@plt+0x9f54>
  40cb0c:	b	40cac8 <ferror@plt+0x9f78>
  40cb10:	bl	4028e0 <__ctype_b_loc@plt>
  40cb14:	cmp	w21, #0x5f
  40cb18:	mov	x22, x0
  40cb1c:	b.eq	40ce88 <ferror@plt+0xa338>  // b.none
  40cb20:	ldr	x8, [x22]
  40cb24:	ldrh	w8, [x8, w21, sxtw #1]
  40cb28:	tbnz	w8, #10, 40ce88 <ferror@plt+0xa338>
  40cb2c:	cbz	w21, 40cf44 <ferror@plt+0xa3f4>
  40cb30:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cb34:	ldr	x0, [x8, #3504]
  40cb38:	ldrb	w8, [x0]
  40cb3c:	cmp	w21, w8
  40cb40:	b.ne	40cf44 <ferror@plt+0xa3f4>  // b.any
  40cb44:	ldrb	w8, [x0, #1]!
  40cb48:	cbz	w8, 40cb58 <ferror@plt+0xa008>
  40cb4c:	mov	w1, #0x1                   	// #1
  40cb50:	bl	40d2cc <ferror@plt+0xa77c>
  40cb54:	tbz	w0, #0, 40cf44 <ferror@plt+0xa3f4>
  40cb58:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cb5c:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cb60:	ldr	x8, [x8, #3512]
  40cb64:	ldr	x9, [x22, #3568]
  40cb68:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cb6c:	mov	w20, #0x1                   	// #1
  40cb70:	cmp	x8, #0x1
  40cb74:	cset	w8, eq  // eq = none
  40cb78:	cmp	x9, #0x1
  40cb7c:	cset	w9, eq  // eq = none
  40cb80:	and	w8, w8, w9
  40cb84:	add	x25, x25, #0x920
  40cb88:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cb8c:	eor	w21, w8, #0x1
  40cb90:	str	x23, [sp, #8]
  40cb94:	str	w8, [sp, #20]
  40cb98:	str	x24, [sp, #24]
  40cb9c:	b	40cbac <ferror@plt+0xa05c>
  40cba0:	add	x9, x8, #0x1
  40cba4:	str	x9, [x19, #2360]
  40cba8:	strb	w23, [x8]
  40cbac:	ldr	x8, [x26, #2312]
  40cbb0:	cbz	x8, 40cbbc <ferror@plt+0xa06c>
  40cbb4:	ldr	w9, [x8, #8]
  40cbb8:	cbz	w9, 40cc08 <ferror@plt+0xa0b8>
  40cbbc:	bl	40c46c <ferror@plt+0x991c>
  40cbc0:	mov	w23, w0
  40cbc4:	cmp	w0, #0x100
  40cbc8:	b.ne	40ccb0 <ferror@plt+0xa160>  // b.any
  40cbcc:	ldr	w3, [x24]
  40cbd0:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40cbd4:	mov	w0, #0x1                   	// #1
  40cbd8:	mov	w1, wzr
  40cbdc:	mov	x2, x27
  40cbe0:	add	x4, x4, #0x1b2
  40cbe4:	bl	402d08 <ferror@plt+0x1b8>
  40cbe8:	ldp	x8, x9, [x28]
  40cbec:	cmp	x9, x8
  40cbf0:	b.ne	40cba0 <ferror@plt+0xa050>  // b.any
  40cbf4:	mov	w1, #0x1                   	// #1
  40cbf8:	mov	x0, x25
  40cbfc:	bl	418058 <_obstack_newchunk@@Base>
  40cc00:	ldr	x8, [x25, #24]
  40cc04:	b	40cba0 <ferror@plt+0xa050>
  40cc08:	ldr	x23, [x8, #32]
  40cc0c:	cbz	x23, 40cc8c <ferror@plt+0xa13c>
  40cc10:	ldrb	w9, [x23]
  40cc14:	cbz	w9, 40cc8c <ferror@plt+0xa13c>
  40cc18:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cc1c:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cc20:	ldr	x9, [x9, #3504]
  40cc24:	ldr	x10, [x10, #3560]
  40cc28:	ldr	x22, [x8, #40]
  40cc2c:	mov	x25, x27
  40cc30:	mov	x19, x26
  40cc34:	ldrb	w26, [x9]
  40cc38:	ldrb	w27, [x10]
  40cc3c:	sub	x8, x22, x23
  40cc40:	mov	x24, x23
  40cc44:	stur	x8, [x29, #-16]
  40cc48:	sub	x3, x22, x24
  40cc4c:	mov	x0, x24
  40cc50:	mov	w1, w26
  40cc54:	mov	w2, w27
  40cc58:	bl	4145d0 <ferror@plt+0x11a80>
  40cc5c:	cmp	x0, #0x0
  40cc60:	cset	w8, eq  // eq = none
  40cc64:	mov	x24, x0
  40cc68:	orr	w8, w8, w21
  40cc6c:	tbnz	w8, #0, 40cd14 <ferror@plt+0xa1c4>
  40cc70:	ldrb	w8, [x24], #1
  40cc74:	cmp	w8, w27
  40cc78:	mov	w8, #0xffffffff            	// #-1
  40cc7c:	cneg	w8, w8, ne  // ne = any
  40cc80:	adds	w20, w8, w20
  40cc84:	b.ne	40cc48 <ferror@plt+0xa0f8>  // b.any
  40cc88:	b	40cd18 <ferror@plt+0xa1c8>
  40cc8c:	ldr	x9, [x8, #32]
  40cc90:	ldrb	w10, [x9]
  40cc94:	cbz	w10, 40cbbc <ferror@plt+0xa06c>
  40cc98:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cc9c:	ldrb	w10, [x10, #2304]
  40cca0:	tbnz	w10, #0, 40cbbc <ferror@plt+0xa06c>
  40cca4:	add	x10, x9, #0x1
  40cca8:	str	x10, [x8, #32]
  40ccac:	ldrb	w23, [x9]
  40ccb0:	cbz	w23, 40cda4 <ferror@plt+0xa254>
  40ccb4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ccb8:	ldr	x0, [x8, #3560]
  40ccbc:	ldrb	w8, [x0]
  40ccc0:	cmp	w23, w8
  40ccc4:	b.ne	40cda4 <ferror@plt+0xa254>  // b.any
  40ccc8:	ldrb	w8, [x0, #1]!
  40cccc:	cbz	w8, 40ccdc <ferror@plt+0xa18c>
  40ccd0:	mov	w1, #0x1                   	// #1
  40ccd4:	bl	40d2cc <ferror@plt+0xa77c>
  40ccd8:	tbz	w0, #0, 40cda4 <ferror@plt+0xa254>
  40ccdc:	subs	w20, w20, #0x1
  40cce0:	b.eq	40d120 <ferror@plt+0xa5d0>  // b.none
  40cce4:	ldp	x0, x8, [x28]
  40cce8:	ldr	x23, [x22, #3568]
  40ccec:	sub	x8, x8, x0
  40ccf0:	cmp	x8, x23
  40ccf4:	b.cs	40cd08 <ferror@plt+0xa1b8>  // b.hs, b.nlast
  40ccf8:	mov	x0, x25
  40ccfc:	mov	x1, x23
  40cd00:	bl	418058 <_obstack_newchunk@@Base>
  40cd04:	ldr	x0, [x25, #24]
  40cd08:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cd0c:	ldr	x1, [x8, #3560]
  40cd10:	b	40ce04 <ferror@plt+0xa2b4>
  40cd14:	cbz	x24, 40ce1c <ferror@plt+0xa2cc>
  40cd18:	ldr	w8, [sp, #20]
  40cd1c:	mov	x26, x19
  40cd20:	mov	x27, x25
  40cd24:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cd28:	cbnz	w8, 40d0c0 <ferror@plt+0xa570>
  40cd2c:	ldp	x0, x8, [x28]
  40cd30:	sub	x25, x24, x23
  40cd34:	sub	x8, x8, x0
  40cd38:	cmp	x8, x25
  40cd3c:	b.cs	40cd60 <ferror@plt+0xa210>  // b.hs, b.nlast
  40cd40:	mov	x22, x27
  40cd44:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cd48:	add	x27, x27, #0x920
  40cd4c:	mov	x0, x27
  40cd50:	mov	x1, x25
  40cd54:	bl	418058 <_obstack_newchunk@@Base>
  40cd58:	ldr	x0, [x27, #24]
  40cd5c:	mov	x27, x22
  40cd60:	mov	x1, x23
  40cd64:	mov	x2, x25
  40cd68:	bl	4024c0 <memcpy@plt>
  40cd6c:	ldr	x8, [x19, #2360]
  40cd70:	ldr	x9, [x26, #2312]
  40cd74:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cd78:	add	x8, x8, x25
  40cd7c:	str	x8, [x19, #2360]
  40cd80:	ldr	x8, [x9, #32]
  40cd84:	ldrb	w23, [x24]
  40cd88:	ldr	x24, [sp, #24]
  40cd8c:	add	x8, x25, x8
  40cd90:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cd94:	add	x8, x8, #0x1
  40cd98:	add	x25, x25, #0x920
  40cd9c:	str	x8, [x9, #32]
  40cda0:	cbnz	w23, 40ccb4 <ferror@plt+0xa164>
  40cda4:	cbz	w23, 40cbe8 <ferror@plt+0xa098>
  40cda8:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cdac:	ldr	x0, [x8, #3504]
  40cdb0:	ldrb	w8, [x0]
  40cdb4:	cmp	w23, w8
  40cdb8:	b.ne	40cbe8 <ferror@plt+0xa098>  // b.any
  40cdbc:	ldrb	w8, [x0, #1]!
  40cdc0:	cbz	w8, 40cdd0 <ferror@plt+0xa280>
  40cdc4:	mov	w1, #0x1                   	// #1
  40cdc8:	bl	40d2cc <ferror@plt+0xa77c>
  40cdcc:	tbz	w0, #0, 40cbe8 <ferror@plt+0xa098>
  40cdd0:	ldp	x0, x8, [x28]
  40cdd4:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cdd8:	ldr	x23, [x9, #3512]
  40cddc:	add	w20, w20, #0x1
  40cde0:	sub	x8, x8, x0
  40cde4:	cmp	x8, x23
  40cde8:	b.cs	40cdfc <ferror@plt+0xa2ac>  // b.hs, b.nlast
  40cdec:	mov	x0, x25
  40cdf0:	mov	x1, x23
  40cdf4:	bl	418058 <_obstack_newchunk@@Base>
  40cdf8:	ldr	x0, [x25, #24]
  40cdfc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ce00:	ldr	x1, [x8, #3504]
  40ce04:	mov	x2, x23
  40ce08:	bl	4024c0 <memcpy@plt>
  40ce0c:	ldr	x8, [x19, #2360]
  40ce10:	add	x8, x8, x23
  40ce14:	str	x8, [x19, #2360]
  40ce18:	b	40cbac <ferror@plt+0xa05c>
  40ce1c:	ldp	x0, x8, [x28]
  40ce20:	ldur	x22, [x29, #-16]
  40ce24:	mov	x27, x25
  40ce28:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ce2c:	sub	x8, x8, x0
  40ce30:	cmp	x8, x22
  40ce34:	mov	x26, x19
  40ce38:	add	x25, x25, #0x920
  40ce3c:	b.cs	40ce50 <ferror@plt+0xa300>  // b.hs, b.nlast
  40ce40:	mov	x0, x25
  40ce44:	mov	x1, x22
  40ce48:	bl	418058 <_obstack_newchunk@@Base>
  40ce4c:	ldr	x0, [x25, #24]
  40ce50:	mov	x1, x23
  40ce54:	mov	x2, x22
  40ce58:	bl	4024c0 <memcpy@plt>
  40ce5c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ce60:	ldr	x8, [x19, #2360]
  40ce64:	ldr	x9, [x26, #2312]
  40ce68:	ldr	x24, [sp, #24]
  40ce6c:	add	x8, x8, x22
  40ce70:	str	x8, [x19, #2360]
  40ce74:	ldr	x8, [x9, #32]
  40ce78:	add	x8, x8, x22
  40ce7c:	str	x8, [x9, #32]
  40ce80:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ce84:	b	40cbac <ferror@plt+0xa05c>
  40ce88:	ldp	x8, x9, [x28]
  40ce8c:	cmp	x9, x8
  40ce90:	b.ne	40ceac <ferror@plt+0xa35c>  // b.any
  40ce94:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ce98:	add	x20, x20, #0x920
  40ce9c:	mov	w1, #0x1                   	// #1
  40cea0:	mov	x0, x20
  40cea4:	bl	418058 <_obstack_newchunk@@Base>
  40cea8:	ldr	x8, [x20, #24]
  40ceac:	add	x9, x8, #0x1
  40ceb0:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ceb4:	str	x9, [x19, #2360]
  40ceb8:	strb	w21, [x8]
  40cebc:	bl	40d218 <ferror@plt+0xa6c8>
  40cec0:	cmp	w0, #0x100
  40cec4:	b.ne	40cfd4 <ferror@plt+0xa484>  // b.any
  40cec8:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cecc:	mov	w22, #0x2                   	// #2
  40ced0:	b	40d12c <ferror@plt+0xa5dc>
  40ced4:	ldr	x9, [x8, #32]
  40ced8:	ldrb	w10, [x9]
  40cedc:	cbz	w10, 40c974 <ferror@plt+0x9e24>
  40cee0:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cee4:	ldrb	w10, [x10, #2304]
  40cee8:	tbnz	w10, #0, 40c974 <ferror@plt+0x9e24>
  40ceec:	add	x9, x9, #0x1
  40cef0:	mov	w22, wzr
  40cef4:	str	x9, [x8, #32]
  40cef8:	b	40d1b8 <ferror@plt+0xa668>
  40cefc:	ldr	x9, [x8, #32]
  40cf00:	ldrb	w10, [x9]
  40cf04:	cbz	w10, 40c9a8 <ferror@plt+0x9e58>
  40cf08:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cf0c:	ldrb	w10, [x10, #2304]
  40cf10:	tbnz	w10, #0, 40c9a8 <ferror@plt+0x9e58>
  40cf14:	add	x9, x9, #0x1
  40cf18:	str	x9, [x8, #32]
  40cf1c:	b	40c9ac <ferror@plt+0x9e5c>
  40cf20:	ldr	x9, [x8, #32]
  40cf24:	ldrb	w10, [x9]
  40cf28:	cbz	w10, 40c9c4 <ferror@plt+0x9e74>
  40cf2c:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cf30:	ldrb	w10, [x10, #2304]
  40cf34:	tbnz	w10, #0, 40c9c4 <ferror@plt+0x9e74>
  40cf38:	add	x9, x9, #0x1
  40cf3c:	str	x9, [x8, #32]
  40cf40:	b	40c9c8 <ferror@plt+0x9e78>
  40cf44:	sub	w8, w21, #0x28
  40cf48:	cmp	w8, #0x4
  40cf4c:	b.hi	40d07c <ferror@plt+0xa52c>  // b.pmore
  40cf50:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40cf54:	add	x9, x9, #0x2e4
  40cf58:	ldr	w22, [x9, w8, sxtw #2]
  40cf5c:	b	40d080 <ferror@plt+0xa530>
  40cf60:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40cf64:	ldp	x0, x9, [x28]
  40cf68:	ldr	x20, [x8, #3552]
  40cf6c:	sub	x8, x9, x0
  40cf70:	cmp	x8, x20
  40cf74:	b.cs	40cf88 <ferror@plt+0xa438>  // b.hs, b.nlast
  40cf78:	mov	x0, x21
  40cf7c:	mov	x1, x20
  40cf80:	bl	418058 <_obstack_newchunk@@Base>
  40cf84:	ldr	x0, [x21, #24]
  40cf88:	ldr	x1, [x23, #3544]
  40cf8c:	mov	x2, x20
  40cf90:	bl	4024c0 <memcpy@plt>
  40cf94:	ldr	x8, [x19, #2360]
  40cf98:	mov	w22, #0x1                   	// #1
  40cf9c:	add	x8, x8, x20
  40cfa0:	str	x8, [x19, #2360]
  40cfa4:	b	40cfc8 <ferror@plt+0xa478>
  40cfa8:	ldr	w3, [x24]
  40cfac:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40cfb0:	add	x4, x4, #0x154
  40cfb4:	mov	w0, #0x1                   	// #1
  40cfb8:	mov	w1, wzr
  40cfbc:	mov	x2, x27
  40cfc0:	mov	w22, #0x1                   	// #1
  40cfc4:	bl	402d08 <ferror@plt+0x1b8>
  40cfc8:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cfcc:	mov	x23, x25
  40cfd0:	b	40d12c <ferror@plt+0xa5dc>
  40cfd4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cfd8:	mov	w21, w0
  40cfdc:	mov	x24, x23
  40cfe0:	add	x20, x20, #0x920
  40cfe4:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40cfe8:	cmp	w21, #0x5f
  40cfec:	b.eq	40cffc <ferror@plt+0xa4ac>  // b.none
  40cff0:	ldr	x8, [x22]
  40cff4:	ldrh	w8, [x8, w21, sxtw #1]
  40cff8:	tbz	w8, #3, 40d06c <ferror@plt+0xa51c>
  40cffc:	ldp	x8, x9, [x28]
  40d000:	cmp	x9, x8
  40d004:	b.ne	40d018 <ferror@plt+0xa4c8>  // b.any
  40d008:	mov	w1, #0x1                   	// #1
  40d00c:	mov	x0, x20
  40d010:	bl	418058 <_obstack_newchunk@@Base>
  40d014:	ldr	x8, [x20, #24]
  40d018:	add	x9, x8, #0x1
  40d01c:	str	x9, [x19, #2360]
  40d020:	strb	w21, [x8]
  40d024:	ldr	x8, [x26, #2312]
  40d028:	cbz	x8, 40d034 <ferror@plt+0xa4e4>
  40d02c:	ldr	w9, [x8, #8]
  40d030:	cbz	w9, 40d04c <ferror@plt+0xa4fc>
  40d034:	bl	40c46c <ferror@plt+0x991c>
  40d038:	bl	40d218 <ferror@plt+0xa6c8>
  40d03c:	mov	w21, w0
  40d040:	cmp	w0, #0x100
  40d044:	b.ne	40cfe8 <ferror@plt+0xa498>  // b.any
  40d048:	b	40d06c <ferror@plt+0xa51c>
  40d04c:	ldr	x9, [x8, #32]
  40d050:	ldrb	w10, [x9]
  40d054:	cbz	w10, 40d034 <ferror@plt+0xa4e4>
  40d058:	ldrb	w10, [x23, #2304]
  40d05c:	tbnz	w10, #0, 40d034 <ferror@plt+0xa4e4>
  40d060:	add	x9, x9, #0x1
  40d064:	str	x9, [x8, #32]
  40d068:	b	40d038 <ferror@plt+0xa4e8>
  40d06c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d070:	mov	w22, #0x2                   	// #2
  40d074:	mov	x23, x24
  40d078:	b	40d12c <ferror@plt+0xa5dc>
  40d07c:	mov	w22, #0x6                   	// #6
  40d080:	ldp	x8, x9, [x28]
  40d084:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d088:	add	x19, x19, #0x928
  40d08c:	cmp	x9, x8
  40d090:	b.ne	40d0ac <ferror@plt+0xa55c>  // b.any
  40d094:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d098:	add	x20, x20, #0x920
  40d09c:	mov	w1, #0x1                   	// #1
  40d0a0:	mov	x0, x20
  40d0a4:	bl	418058 <_obstack_newchunk@@Base>
  40d0a8:	ldr	x8, [x20, #24]
  40d0ac:	add	x9, x8, #0x1
  40d0b0:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d0b4:	str	x9, [x10, #2360]
  40d0b8:	strb	w21, [x8]
  40d0bc:	b	40d130 <ferror@plt+0xa5e0>
  40d0c0:	cbnz	w20, 40d1f8 <ferror@plt+0xa6a8>
  40d0c4:	ldp	x0, x8, [x28]
  40d0c8:	sub	x19, x24, x23
  40d0cc:	sub	x20, x19, #0x1
  40d0d0:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d0d4:	sub	x8, x8, x0
  40d0d8:	cmp	x8, x20
  40d0dc:	add	x21, x21, #0x920
  40d0e0:	b.cs	40d0f4 <ferror@plt+0xa5a4>  // b.hs, b.nlast
  40d0e4:	mov	x0, x21
  40d0e8:	mov	x1, x20
  40d0ec:	bl	418058 <_obstack_newchunk@@Base>
  40d0f0:	ldr	x0, [x21, #24]
  40d0f4:	mov	x1, x23
  40d0f8:	mov	x2, x20
  40d0fc:	bl	4024c0 <memcpy@plt>
  40d100:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d104:	ldr	x8, [x10, #2360]
  40d108:	ldr	x9, [x26, #2312]
  40d10c:	add	x8, x8, x20
  40d110:	str	x8, [x10, #2360]
  40d114:	ldr	x8, [x9, #32]
  40d118:	add	x8, x8, x19
  40d11c:	str	x8, [x9, #32]
  40d120:	ldr	x23, [sp, #8]
  40d124:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d128:	mov	w22, #0x1                   	// #1
  40d12c:	add	x19, x19, #0x928
  40d130:	ldp	x8, x9, [x28]
  40d134:	cmp	x9, x8
  40d138:	b.ne	40d154 <ferror@plt+0xa604>  // b.any
  40d13c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d140:	add	x20, x20, #0x920
  40d144:	mov	w1, #0x1                   	// #1
  40d148:	mov	x0, x20
  40d14c:	bl	418058 <_obstack_newchunk@@Base>
  40d150:	ldr	x8, [x20, #24]
  40d154:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d158:	add	x9, x8, #0x1
  40d15c:	add	x10, x10, #0x930
  40d160:	mov	w11, #0x1                   	// #1
  40d164:	str	x9, [x10, #8]
  40d168:	strb	wzr, [x8]
  40d16c:	str	w11, [x23]
  40d170:	ldp	x8, x9, [x10]
  40d174:	cmp	x9, x8
  40d178:	b.ne	40d18c <ferror@plt+0xa63c>  // b.any
  40d17c:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d180:	ldrb	w11, [x10, #2416]
  40d184:	orr	w11, w11, #0x2
  40d188:	strb	w11, [x10, #2416]
  40d18c:	ldr	x10, [x19, #40]
  40d190:	ldr	x11, [x19]
  40d194:	ldr	x12, [x19, #24]
  40d198:	add	x9, x10, x9
  40d19c:	bic	x9, x9, x10
  40d1a0:	sub	x13, x12, x11
  40d1a4:	sub	x10, x9, x11
  40d1a8:	cmp	x10, x13
  40d1ac:	csel	x9, x12, x9, hi  // hi = pmore
  40d1b0:	stp	x9, x9, [x19, #8]
  40d1b4:	str	x8, [x23, #8]
  40d1b8:	mov	w0, w22
  40d1bc:	ldp	x20, x19, [sp, #128]
  40d1c0:	ldp	x22, x21, [sp, #112]
  40d1c4:	ldp	x24, x23, [sp, #96]
  40d1c8:	ldp	x26, x25, [sp, #80]
  40d1cc:	ldp	x28, x27, [sp, #64]
  40d1d0:	ldp	x29, x30, [sp, #48]
  40d1d4:	add	sp, sp, #0x90
  40d1d8:	ret
  40d1dc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d1e0:	ldr	w0, [x8, #1192]
  40d1e4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d1e8:	add	x2, x2, #0x2b2
  40d1ec:	mov	w1, wzr
  40d1f0:	bl	402c5c <ferror@plt+0x10c>
  40d1f4:	bl	402860 <abort@plt>
  40d1f8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d1fc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d200:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d204:	add	x0, x0, #0x172
  40d208:	add	x1, x1, #0x17f
  40d20c:	add	x3, x3, #0x187
  40d210:	mov	w2, #0x3cd                 	// #973
  40d214:	bl	402ab0 <__assert_fail@plt>
  40d218:	stp	x29, x30, [sp, #-32]!
  40d21c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d220:	stp	x20, x19, [sp, #16]
  40d224:	ldr	x20, [x8, #2312]
  40d228:	mov	x29, sp
  40d22c:	cbz	x20, 40d284 <ferror@plt+0xa734>
  40d230:	ldr	w8, [x20, #8]
  40d234:	cmp	w8, #0x2
  40d238:	b.eq	40d28c <ferror@plt+0xa73c>  // b.none
  40d23c:	cmp	w8, #0x1
  40d240:	b.eq	40d260 <ferror@plt+0xa710>  // b.none
  40d244:	cbnz	w8, 40d2b0 <ferror@plt+0xa760>
  40d248:	ldr	x8, [x20, #32]
  40d24c:	ldrb	w19, [x8]
  40d250:	cbnz	w19, 40d290 <ferror@plt+0xa740>
  40d254:	ldr	x20, [x20]
  40d258:	cbnz	x20, 40d230 <ferror@plt+0xa6e0>
  40d25c:	b	40d284 <ferror@plt+0xa734>
  40d260:	ldr	x0, [x20, #32]
  40d264:	bl	4027d0 <getc@plt>
  40d268:	cmn	w0, #0x1
  40d26c:	b.ne	40d2a0 <ferror@plt+0xa750>  // b.any
  40d270:	ldrb	w8, [x20, #40]
  40d274:	orr	w8, w8, #0x1
  40d278:	strb	w8, [x20, #40]
  40d27c:	ldr	x20, [x20]
  40d280:	cbnz	x20, 40d230 <ferror@plt+0xa6e0>
  40d284:	mov	w19, #0x100                 	// #256
  40d288:	b	40d290 <ferror@plt+0xa740>
  40d28c:	mov	w19, #0x101                 	// #257
  40d290:	mov	w0, w19
  40d294:	ldp	x20, x19, [sp, #16]
  40d298:	ldp	x29, x30, [sp], #32
  40d29c:	ret
  40d2a0:	ldr	x1, [x20, #32]
  40d2a4:	mov	w19, w0
  40d2a8:	bl	402940 <ungetc@plt>
  40d2ac:	b	40d290 <ferror@plt+0xa740>
  40d2b0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d2b4:	ldr	w0, [x8, #1192]
  40d2b8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d2bc:	add	x2, x2, #0x27f
  40d2c0:	mov	w1, wzr
  40d2c4:	bl	402c5c <ferror@plt+0x10c>
  40d2c8:	bl	402860 <abort@plt>
  40d2cc:	stp	x29, x30, [sp, #-64]!
  40d2d0:	stp	x24, x23, [sp, #16]
  40d2d4:	stp	x22, x21, [sp, #32]
  40d2d8:	stp	x20, x19, [sp, #48]
  40d2dc:	mov	x29, sp
  40d2e0:	mov	w20, w1
  40d2e4:	mov	x19, x0
  40d2e8:	bl	40d218 <ferror@plt+0xa6c8>
  40d2ec:	ldrb	w8, [x19]
  40d2f0:	cmp	w0, w8
  40d2f4:	b.ne	40d378 <ferror@plt+0xa828>  // b.any
  40d2f8:	ldrb	w8, [x19, #1]
  40d2fc:	cbz	w8, 40d380 <ferror@plt+0xa830>
  40d300:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d304:	ldr	x8, [x21, #2312]
  40d308:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d30c:	cbz	x8, 40d318 <ferror@plt+0xa7c8>
  40d310:	ldr	w9, [x8, #8]
  40d314:	cbz	w9, 40d424 <ferror@plt+0xa8d4>
  40d318:	bl	40c46c <ferror@plt+0x991c>
  40d31c:	mov	x23, xzr
  40d320:	add	x24, x19, x23
  40d324:	bl	40d218 <ferror@plt+0xa6c8>
  40d328:	ldrb	w8, [x24, #1]
  40d32c:	cmp	w0, w8
  40d330:	b.ne	40d3a4 <ferror@plt+0xa854>  // b.any
  40d334:	ldr	x8, [x21, #2312]
  40d338:	cbz	x8, 40d344 <ferror@plt+0xa7f4>
  40d33c:	ldr	w9, [x8, #8]
  40d340:	cbz	w9, 40d358 <ferror@plt+0xa808>
  40d344:	bl	40c46c <ferror@plt+0x991c>
  40d348:	ldrb	w8, [x24, #2]
  40d34c:	add	x23, x23, #0x1
  40d350:	cbnz	w8, 40d320 <ferror@plt+0xa7d0>
  40d354:	b	40d3b0 <ferror@plt+0xa860>
  40d358:	ldr	x9, [x8, #32]
  40d35c:	ldrb	w10, [x9]
  40d360:	cbz	w10, 40d344 <ferror@plt+0xa7f4>
  40d364:	ldrb	w10, [x22, #2304]
  40d368:	tbnz	w10, #0, 40d344 <ferror@plt+0xa7f4>
  40d36c:	add	x9, x9, #0x1
  40d370:	str	x9, [x8, #32]
  40d374:	b	40d348 <ferror@plt+0xa7f8>
  40d378:	mov	w20, wzr
  40d37c:	b	40d40c <ferror@plt+0xa8bc>
  40d380:	tbz	w20, #0, 40d3b4 <ferror@plt+0xa864>
  40d384:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d388:	ldr	x8, [x8, #2312]
  40d38c:	cbz	x8, 40d398 <ferror@plt+0xa848>
  40d390:	ldr	w9, [x8, #8]
  40d394:	cbz	w9, 40d444 <ferror@plt+0xa8f4>
  40d398:	bl	40c46c <ferror@plt+0x991c>
  40d39c:	mov	w20, #0x1                   	// #1
  40d3a0:	b	40d40c <ferror@plt+0xa8bc>
  40d3a4:	mov	w20, wzr
  40d3a8:	add	w22, w23, #0x1
  40d3ac:	b	40d3c4 <ferror@plt+0xa874>
  40d3b0:	tbz	w20, #0, 40d3bc <ferror@plt+0xa86c>
  40d3b4:	mov	w20, #0x1                   	// #1
  40d3b8:	b	40d40c <ferror@plt+0xa8bc>
  40d3bc:	add	x22, x23, #0x1
  40d3c0:	mov	w20, #0x1                   	// #1
  40d3c4:	bl	40bf40 <ferror@plt+0x93f0>
  40d3c8:	mov	x21, x0
  40d3cc:	ldp	x0, x8, [x0, #24]
  40d3d0:	sxtw	x22, w22
  40d3d4:	sub	x8, x8, x0
  40d3d8:	cmp	x8, x22
  40d3dc:	b.cs	40d3f0 <ferror@plt+0xa8a0>  // b.hs, b.nlast
  40d3e0:	mov	x0, x21
  40d3e4:	mov	x1, x22
  40d3e8:	bl	418058 <_obstack_newchunk@@Base>
  40d3ec:	ldr	x0, [x21, #24]
  40d3f0:	mov	x1, x19
  40d3f4:	mov	x2, x22
  40d3f8:	bl	4024c0 <memcpy@plt>
  40d3fc:	ldr	x8, [x21, #24]
  40d400:	add	x8, x8, x22
  40d404:	str	x8, [x21, #24]
  40d408:	bl	40c028 <ferror@plt+0x94d8>
  40d40c:	mov	w0, w20
  40d410:	ldp	x20, x19, [sp, #48]
  40d414:	ldp	x22, x21, [sp, #32]
  40d418:	ldp	x24, x23, [sp, #16]
  40d41c:	ldp	x29, x30, [sp], #64
  40d420:	ret
  40d424:	ldr	x9, [x8, #32]
  40d428:	ldrb	w10, [x9]
  40d42c:	cbz	w10, 40d318 <ferror@plt+0xa7c8>
  40d430:	ldrb	w10, [x22, #2304]
  40d434:	tbnz	w10, #0, 40d318 <ferror@plt+0xa7c8>
  40d438:	add	x9, x9, #0x1
  40d43c:	str	x9, [x8, #32]
  40d440:	b	40d31c <ferror@plt+0xa7cc>
  40d444:	ldr	x9, [x8, #32]
  40d448:	ldrb	w10, [x9]
  40d44c:	cbz	w10, 40d398 <ferror@plt+0xa848>
  40d450:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d454:	ldrb	w10, [x10, #2304]
  40d458:	tbnz	w10, #0, 40d398 <ferror@plt+0xa848>
  40d45c:	add	x9, x9, #0x1
  40d460:	str	x9, [x8, #32]
  40d464:	mov	w20, #0x1                   	// #1
  40d468:	b	40d40c <ferror@plt+0xa8bc>
  40d46c:	stp	x29, x30, [sp, #-32]!
  40d470:	str	x19, [sp, #16]
  40d474:	mov	x29, sp
  40d478:	bl	40d218 <ferror@plt+0xa6c8>
  40d47c:	cmp	w0, #0x100
  40d480:	b.eq	40d498 <ferror@plt+0xa948>  // b.none
  40d484:	mov	w19, w0
  40d488:	cmp	w0, #0x101
  40d48c:	b.ne	40d4a0 <ferror@plt+0xa950>  // b.any
  40d490:	mov	w0, #0x7                   	// #7
  40d494:	b	40d51c <ferror@plt+0xa9cc>
  40d498:	mov	w0, wzr
  40d49c:	b	40d51c <ferror@plt+0xa9cc>
  40d4a0:	cbz	w19, 40d4cc <ferror@plt+0xa97c>
  40d4a4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d4a8:	ldr	x0, [x8, #3528]
  40d4ac:	ldrb	w8, [x0]
  40d4b0:	cmp	w19, w8
  40d4b4:	b.ne	40d4cc <ferror@plt+0xa97c>  // b.any
  40d4b8:	ldrb	w8, [x0, #1]
  40d4bc:	cbz	w8, 40d518 <ferror@plt+0xa9c8>
  40d4c0:	mov	w1, wzr
  40d4c4:	bl	40d2cc <ferror@plt+0xa77c>
  40d4c8:	tbnz	w0, #0, 40d518 <ferror@plt+0xa9c8>
  40d4cc:	bl	4028e0 <__ctype_b_loc@plt>
  40d4d0:	mov	x8, x0
  40d4d4:	cmp	w19, #0x5f
  40d4d8:	mov	w0, #0x2                   	// #2
  40d4dc:	b.eq	40d51c <ferror@plt+0xa9cc>  // b.none
  40d4e0:	ldr	x8, [x8]
  40d4e4:	ldrh	w8, [x8, w19, sxtw #1]
  40d4e8:	tbnz	w8, #10, 40d51c <ferror@plt+0xa9cc>
  40d4ec:	cbz	w19, 40d528 <ferror@plt+0xa9d8>
  40d4f0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d4f4:	ldr	x0, [x8, #3504]
  40d4f8:	ldrb	w8, [x0]
  40d4fc:	cmp	w19, w8
  40d500:	b.ne	40d528 <ferror@plt+0xa9d8>  // b.any
  40d504:	ldrb	w8, [x0, #1]
  40d508:	cbz	w8, 40d518 <ferror@plt+0xa9c8>
  40d50c:	mov	w1, wzr
  40d510:	bl	40d2cc <ferror@plt+0xa77c>
  40d514:	tbz	w0, #0, 40d528 <ferror@plt+0xa9d8>
  40d518:	mov	w0, #0x1                   	// #1
  40d51c:	ldr	x19, [sp, #16]
  40d520:	ldp	x29, x30, [sp], #32
  40d524:	ret
  40d528:	sub	w8, w19, #0x28
  40d52c:	cmp	w8, #0x4
  40d530:	b.hi	40d544 <ferror@plt+0xa9f4>  // b.pmore
  40d534:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d538:	add	x9, x9, #0x2e4
  40d53c:	ldr	w0, [x9, w8, sxtw #2]
  40d540:	b	40d51c <ferror@plt+0xa9cc>
  40d544:	mov	w0, #0x6                   	// #6
  40d548:	b	40d51c <ferror@plt+0xa9cc>
  40d54c:	stp	x29, x30, [sp, #-48]!
  40d550:	stp	x20, x19, [sp, #32]
  40d554:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d558:	ldr	x1, [x20, #2312]
  40d55c:	stp	x22, x21, [sp, #16]
  40d560:	mov	x29, sp
  40d564:	ldr	w8, [x1, #8]
  40d568:	ldr	x21, [x1]
  40d56c:	cmp	w8, #0x0
  40d570:	ccmp	w8, #0x2, #0x4, ne  // ne = any
  40d574:	b.eq	40d668 <ferror@plt+0xab18>  // b.none
  40d578:	cmp	w8, #0x1
  40d57c:	b.ne	40d6e0 <ferror@plt+0xab90>  // b.any
  40d580:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d584:	ldrb	w8, [x8, #1173]
  40d588:	tbz	w8, #0, 40d5e0 <ferror@plt+0xaa90>
  40d58c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d590:	ldr	x8, [x19, #2088]
  40d594:	cbz	x21, 40d5bc <ferror@plt+0xaa6c>
  40d598:	cbz	x8, 40d5e0 <ferror@plt+0xaa90>
  40d59c:	bl	408c84 <ferror@plt+0x6134>
  40d5a0:	ldr	x0, [x19, #2088]
  40d5a4:	ldr	x2, [x21, #16]
  40d5a8:	ldr	w3, [x21, #24]
  40d5ac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d5b0:	add	x1, x1, #0x201
  40d5b4:	bl	4177a8 <ferror@plt+0x14c58>
  40d5b8:	b	40d5d4 <ferror@plt+0xaa84>
  40d5bc:	cbz	x8, 40d5e0 <ferror@plt+0xaa90>
  40d5c0:	bl	408c84 <ferror@plt+0x6134>
  40d5c4:	ldr	x0, [x19, #2088]
  40d5c8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d5cc:	add	x1, x1, #0x21f
  40d5d0:	bl	4177a8 <ferror@plt+0x14c58>
  40d5d4:	ldr	x1, [x19, #2088]
  40d5d8:	mov	w0, #0xa                   	// #10
  40d5dc:	bl	4025a0 <putc@plt>
  40d5e0:	ldr	x22, [x20, #2312]
  40d5e4:	ldr	x19, [x22, #32]
  40d5e8:	mov	x0, x19
  40d5ec:	bl	402b50 <ferror@plt>
  40d5f0:	cbz	w0, 40d630 <ferror@plt+0xaae0>
  40d5f4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d5f8:	ldr	w0, [x8, #1192]
  40d5fc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d600:	add	x2, x2, #0x22f
  40d604:	mov	w1, wzr
  40d608:	bl	402c5c <ferror@plt+0x10c>
  40d60c:	ldr	x8, [x20, #2312]
  40d610:	ldrb	w9, [x8, #40]
  40d614:	tbz	w9, #1, 40d620 <ferror@plt+0xaad0>
  40d618:	ldr	x0, [x8, #32]
  40d61c:	bl	417b18 <ferror@plt+0x14fc8>
  40d620:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d624:	mov	w9, #0x1                   	// #1
  40d628:	str	w9, [x8, #3488]
  40d62c:	b	40d648 <ferror@plt+0xaaf8>
  40d630:	ldrb	w8, [x22, #40]
  40d634:	tbz	w8, #1, 40d648 <ferror@plt+0xaaf8>
  40d638:	mov	x0, x19
  40d63c:	bl	417b18 <ferror@plt+0x14fc8>
  40d640:	cmn	w0, #0x1
  40d644:	b.eq	40d6bc <ferror@plt+0xab6c>  // b.none
  40d648:	ldr	x1, [x20, #2312]
  40d64c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d650:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d654:	mov	w11, #0xffffffff            	// #-1
  40d658:	ldrb	w8, [x1, #40]
  40d65c:	str	w11, [x10, #3576]
  40d660:	ubfx	w8, w8, #2, #1
  40d664:	strb	w8, [x9, #2308]
  40d668:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d66c:	ldr	x0, [x8, #2208]
  40d670:	ldr	x8, [x0, #8]
  40d674:	cmp	x1, x8
  40d678:	b.ls	40d690 <ferror@plt+0xab40>  // b.plast
  40d67c:	ldr	x8, [x0, #32]
  40d680:	cmp	x1, x8
  40d684:	b.cs	40d690 <ferror@plt+0xab40>  // b.hs, b.nlast
  40d688:	stp	x1, x1, [x0, #16]
  40d68c:	b	40d694 <ferror@plt+0xab44>
  40d690:	bl	4181d0 <_obstack_free@@Base>
  40d694:	str	x21, [x20, #2312]
  40d698:	ldp	x20, x19, [sp, #32]
  40d69c:	ldp	x22, x21, [sp, #16]
  40d6a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d6a4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d6a8:	mov	w10, #0x1                   	// #1
  40d6ac:	str	xzr, [x8, #2200]
  40d6b0:	strb	w10, [x9, #2304]
  40d6b4:	ldp	x29, x30, [sp], #48
  40d6b8:	ret
  40d6bc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d6c0:	ldr	w19, [x8, #1192]
  40d6c4:	bl	402ac0 <__errno_location@plt>
  40d6c8:	ldr	w1, [x0]
  40d6cc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d6d0:	add	x2, x2, #0x23a
  40d6d4:	mov	w0, w19
  40d6d8:	bl	402c5c <ferror@plt+0x10c>
  40d6dc:	b	40d620 <ferror@plt+0xaad0>
  40d6e0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d6e4:	ldr	w0, [x8, #1192]
  40d6e8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d6ec:	add	x2, x2, #0x24d
  40d6f0:	mov	w1, wzr
  40d6f4:	bl	402c5c <ferror@plt+0x10c>
  40d6f8:	bl	402860 <abort@plt>
  40d6fc:	sub	sp, sp, #0x40
  40d700:	stp	x20, x19, [sp, #48]
  40d704:	adrp	x19, 417000 <ferror@plt+0x144b0>
  40d708:	adrp	x20, 402000 <mbrtowc@plt-0x4b0>
  40d70c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d710:	add	x19, x19, #0x280
  40d714:	add	x20, x20, #0x930
  40d718:	add	x0, x0, #0x988
  40d71c:	mov	x1, xzr
  40d720:	mov	x2, xzr
  40d724:	mov	x3, x19
  40d728:	mov	x4, x20
  40d72c:	stp	x29, x30, [sp, #32]
  40d730:	add	x29, sp, #0x20
  40d734:	bl	417f04 <_obstack_begin@@Base>
  40d738:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d73c:	add	x0, x0, #0x9e0
  40d740:	mov	x1, xzr
  40d744:	mov	x2, xzr
  40d748:	mov	x3, x19
  40d74c:	mov	x4, x20
  40d750:	bl	417f04 <_obstack_begin@@Base>
  40d754:	add	x0, sp, #0x10
  40d758:	add	x1, sp, #0xc
  40d75c:	bl	40c8d0 <ferror@plt+0x9d80>
  40d760:	cbz	w0, 40d78c <ferror@plt+0xac3c>
  40d764:	mov	w1, w0
  40d768:	ldr	w3, [sp, #12]
  40d76c:	add	x2, sp, #0x10
  40d770:	mov	x0, xzr
  40d774:	bl	40d7bc <ferror@plt+0xac6c>
  40d778:	add	x0, sp, #0x10
  40d77c:	add	x1, sp, #0xc
  40d780:	bl	40c8d0 <ferror@plt+0x9d80>
  40d784:	mov	w1, w0
  40d788:	cbnz	w0, 40d768 <ferror@plt+0xac18>
  40d78c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d790:	add	x0, x0, #0x988
  40d794:	mov	x1, xzr
  40d798:	bl	4181d0 <_obstack_free@@Base>
  40d79c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d7a0:	add	x0, x0, #0x9e0
  40d7a4:	mov	x1, xzr
  40d7a8:	bl	4181d0 <_obstack_free@@Base>
  40d7ac:	ldp	x20, x19, [sp, #48]
  40d7b0:	ldp	x29, x30, [sp, #32]
  40d7b4:	add	sp, sp, #0x40
  40d7b8:	ret
  40d7bc:	sub	sp, sp, #0x120
  40d7c0:	cmp	w1, #0x7
  40d7c4:	stp	x29, x30, [sp, #192]
  40d7c8:	stp	x28, x27, [sp, #208]
  40d7cc:	stp	x26, x25, [sp, #224]
  40d7d0:	stp	x24, x23, [sp, #240]
  40d7d4:	stp	x22, x21, [sp, #256]
  40d7d8:	stp	x20, x19, [sp, #272]
  40d7dc:	add	x29, sp, #0xc0
  40d7e0:	b.hi	40dea4 <ferror@plt+0xb354>  // b.pmore
  40d7e4:	mov	w8, #0x1                   	// #1
  40d7e8:	lsl	w8, w8, w1
  40d7ec:	mov	w9, #0x7a                  	// #122
  40d7f0:	mov	w20, w3
  40d7f4:	mov	x22, x2
  40d7f8:	mov	x21, x0
  40d7fc:	tst	w8, w9
  40d800:	b.eq	40d840 <ferror@plt+0xacf0>  // b.none
  40d804:	ldr	x19, [x22, #8]
  40d808:	mov	x0, x19
  40d80c:	bl	4024f0 <strlen@plt>
  40d810:	mov	x2, x0
  40d814:	mov	x0, x21
  40d818:	mov	x1, x19
  40d81c:	mov	w3, w20
  40d820:	ldp	x20, x19, [sp, #272]
  40d824:	ldp	x22, x21, [sp, #256]
  40d828:	ldp	x24, x23, [sp, #240]
  40d82c:	ldp	x26, x25, [sp, #224]
  40d830:	ldp	x28, x27, [sp, #208]
  40d834:	ldp	x29, x30, [sp, #192]
  40d838:	add	sp, sp, #0x120
  40d83c:	b	40e564 <ferror@plt+0xba14>
  40d840:	mov	w9, #0x81                  	// #129
  40d844:	tst	w8, w9
  40d848:	b.eq	40d86c <ferror@plt+0xad1c>  // b.none
  40d84c:	ldp	x20, x19, [sp, #272]
  40d850:	ldp	x22, x21, [sp, #256]
  40d854:	ldp	x24, x23, [sp, #240]
  40d858:	ldp	x26, x25, [sp, #224]
  40d85c:	ldp	x28, x27, [sp, #208]
  40d860:	ldp	x29, x30, [sp, #192]
  40d864:	add	sp, sp, #0x120
  40d868:	ret
  40d86c:	ldr	x0, [x22, #8]
  40d870:	mov	w1, wzr
  40d874:	bl	41059c <ferror@plt+0xda4c>
  40d878:	cbz	x0, 40d804 <ferror@plt+0xacb4>
  40d87c:	ldr	w8, [x0, #24]
  40d880:	mov	x24, x0
  40d884:	cbz	w8, 40d804 <ferror@plt+0xacb4>
  40d888:	cmp	w8, #0x2
  40d88c:	b.ne	40d8a4 <ferror@plt+0xad54>  // b.any
  40d890:	ldrb	w8, [x24, #8]
  40d894:	tbz	w8, #3, 40d8a4 <ferror@plt+0xad54>
  40d898:	bl	40d46c <ferror@plt+0xa91c>
  40d89c:	cmp	w0, #0x3
  40d8a0:	b.ne	40d804 <ferror@plt+0xacb4>  // b.any
  40d8a4:	ldr	w8, [x24, #12]
  40d8a8:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d8ac:	adrp	x11, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40d8b0:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d8b4:	add	w8, w8, #0x1
  40d8b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d8bc:	ldr	x22, [x10, #3520]
  40d8c0:	ldr	w10, [x11, #3496]
  40d8c4:	str	w8, [x24, #12]
  40d8c8:	ldr	w8, [x25, #2432]
  40d8cc:	ldr	w3, [x9, #880]
  40d8d0:	str	w10, [sp, #48]
  40d8d4:	add	w9, w8, #0x1
  40d8d8:	cmp	w3, #0x1
  40d8dc:	str	w9, [x25, #2432]
  40d8e0:	b.lt	40d900 <ferror@plt+0xadb0>  // b.tstop
  40d8e4:	cmp	w8, w3
  40d8e8:	b.lt	40d900 <ferror@plt+0xadb0>  // b.tstop
  40d8ec:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40d8f0:	add	x2, x2, #0x363
  40d8f4:	mov	w0, #0x1                   	// #1
  40d8f8:	mov	w1, wzr
  40d8fc:	bl	402c5c <ferror@plt+0x10c>
  40d900:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d904:	ldr	w9, [x8, #2616]
  40d908:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d90c:	ldrb	w10, [x19, #1172]
  40d910:	add	w27, w9, #0x1
  40d914:	str	w27, [x8, #2616]
  40d918:	tbnz	w10, #3, 40d928 <ferror@plt+0xadd8>
  40d91c:	ldrb	w8, [x24, #8]
  40d920:	and	w20, w8, #0x1
  40d924:	b	40d92c <ferror@plt+0xaddc>
  40d928:	mov	w20, #0x1                   	// #1
  40d92c:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d930:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d934:	add	x26, x26, #0x998
  40d938:	add	x8, x8, #0x9f0
  40d93c:	ldp	x10, x9, [x26]
  40d940:	ldp	x8, x23, [x8]
  40d944:	cmp	x9, x10
  40d948:	str	x8, [sp, #40]
  40d94c:	b.ne	40d958 <ferror@plt+0xae08>  // b.any
  40d950:	mov	w21, #0x1                   	// #1
  40d954:	b	40d97c <ferror@plt+0xae2c>
  40d958:	adrp	x3, 417000 <ferror@plt+0x144b0>
  40d95c:	adrp	x4, 402000 <mbrtowc@plt-0x4b0>
  40d960:	add	x3, x3, #0x280
  40d964:	add	x4, x4, #0x930
  40d968:	add	x0, sp, #0x40
  40d96c:	mov	x1, xzr
  40d970:	mov	x2, xzr
  40d974:	bl	417f04 <_obstack_begin@@Base>
  40d978:	mov	w21, wzr
  40d97c:	cbz	w20, 40d994 <ferror@plt+0xae44>
  40d980:	ldrb	w8, [x19, #1172]
  40d984:	tbz	w8, #7, 40d994 <ferror@plt+0xae44>
  40d988:	ldr	x0, [x24, #16]
  40d98c:	mov	w1, w27
  40d990:	bl	408d0c <ferror@plt+0x61bc>
  40d994:	ldrb	w10, [x24, #8]
  40d998:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40d99c:	add	x8, x8, #0x988
  40d9a0:	cmp	w21, #0x0
  40d9a4:	add	x9, sp, #0x40
  40d9a8:	str	w21, [sp, #52]
  40d9ac:	str	w10, [sp, #60]
  40d9b0:	csel	x21, x8, x9, ne  // ne = any
  40d9b4:	mov	w10, #0x1                   	// #1
  40d9b8:	ldp	x8, x9, [x21, #24]
  40d9bc:	stur	w10, [x29, #-40]
  40d9c0:	ldr	x10, [x24, #16]
  40d9c4:	sub	x9, x9, x8
  40d9c8:	cmp	x9, #0xf
  40d9cc:	stur	x10, [x29, #-32]
  40d9d0:	b.hi	40d9e4 <ferror@plt+0xae94>  // b.pmore
  40d9d4:	mov	w1, #0x10                  	// #16
  40d9d8:	mov	x0, x21
  40d9dc:	bl	418058 <_obstack_newchunk@@Base>
  40d9e0:	ldr	x8, [x21, #24]
  40d9e4:	ldur	q0, [x29, #-40]
  40d9e8:	str	q0, [x8]
  40d9ec:	ldp	x19, x8, [x21, #16]
  40d9f0:	add	x8, x8, #0x10
  40d9f4:	cmp	x8, x19
  40d9f8:	str	x8, [x21, #24]
  40d9fc:	b.ne	40da0c <ferror@plt+0xaebc>  // b.any
  40da00:	ldrb	w9, [x21, #80]
  40da04:	orr	w9, w9, #0x2
  40da08:	strb	w9, [x21, #80]
  40da0c:	ldr	x10, [x21, #48]
  40da10:	ldr	x11, [x21, #8]
  40da14:	ldr	x9, [x21, #32]
  40da18:	str	w20, [sp, #56]
  40da1c:	add	x8, x10, x8
  40da20:	bic	x8, x8, x10
  40da24:	sub	x10, x8, x11
  40da28:	sub	x11, x9, x11
  40da2c:	cmp	x10, x11
  40da30:	str	x8, [x21, #24]
  40da34:	b.ls	40da40 <ferror@plt+0xaef0>  // b.plast
  40da38:	mov	x8, x9
  40da3c:	str	x9, [x21, #24]
  40da40:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40da44:	add	x28, x28, #0x9f8
  40da48:	ldp	x9, x10, [x28]
  40da4c:	str	x8, [x21, #16]
  40da50:	sub	x10, x10, x9
  40da54:	cmp	x10, #0x7
  40da58:	b.hi	40da7c <ferror@plt+0xaf2c>  // b.pmore
  40da5c:	mov	x20, x22
  40da60:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40da64:	add	x22, x22, #0x9e0
  40da68:	mov	w1, #0x8                   	// #8
  40da6c:	mov	x0, x22
  40da70:	bl	418058 <_obstack_newchunk@@Base>
  40da74:	ldr	x9, [x22, #24]
  40da78:	mov	x22, x20
  40da7c:	str	x19, [x9]
  40da80:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40da84:	ldr	x8, [x20, #2552]
  40da88:	add	x8, x8, #0x8
  40da8c:	str	x8, [x20, #2552]
  40da90:	bl	40d46c <ferror@plt+0xa91c>
  40da94:	cmp	w0, #0x3
  40da98:	b.ne	40dd18 <ferror@plt+0xb1c8>  // b.any
  40da9c:	sub	x0, x29, #0x28
  40daa0:	mov	x1, xzr
  40daa4:	stp	x23, x22, [sp, #8]
  40daa8:	str	w27, [sp, #28]
  40daac:	str	x24, [sp, #32]
  40dab0:	bl	40c8d0 <ferror@plt+0x9d80>
  40dab4:	adrp	x27, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40dab8:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40dabc:	add	x27, x27, #0x2f8
  40dac0:	add	x22, x22, #0x39a
  40dac4:	mov	w23, #0x2                   	// #2
  40dac8:	b	40dae0 <ferror@plt+0xaf90>
  40dacc:	str	x24, [x9]
  40dad0:	ldr	x8, [x20, #2552]
  40dad4:	add	x8, x8, #0x8
  40dad8:	str	x8, [x20, #2552]
  40dadc:	tbz	w19, #0, 40dd24 <ferror@plt+0xb1d4>
  40dae0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40dae4:	ldr	x24, [x8, #3520]
  40dae8:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40daec:	ldr	w25, [x8, #3496]
  40daf0:	stur	wzr, [x29, #-40]
  40daf4:	sub	x0, x29, #0x18
  40daf8:	mov	x1, xzr
  40dafc:	bl	40c8d0 <ferror@plt+0x9d80>
  40db00:	mov	w26, w0
  40db04:	cmp	w0, #0x6
  40db08:	b.ne	40db24 <ferror@plt+0xafd4>  // b.any
  40db0c:	bl	4028e0 <__ctype_b_loc@plt>
  40db10:	ldur	x8, [x29, #-16]
  40db14:	ldr	x9, [x0]
  40db18:	ldrb	w8, [x8]
  40db1c:	ldrh	w8, [x9, x8, lsl #1]
  40db20:	tbnz	w8, #13, 40daf4 <ferror@plt+0xafa4>
  40db24:	mov	w19, wzr
  40db28:	b	40db54 <ferror@plt+0xb004>
  40db2c:	sub	w19, w19, #0x1
  40db30:	sub	x2, x29, #0x18
  40db34:	mov	x0, x21
  40db38:	mov	w1, w26
  40db3c:	mov	w3, w25
  40db40:	bl	40d7bc <ferror@plt+0xac6c>
  40db44:	sub	x0, x29, #0x18
  40db48:	mov	x1, xzr
  40db4c:	bl	40c8d0 <ferror@plt+0x9d80>
  40db50:	mov	w26, w0
  40db54:	cmp	w26, #0x7
  40db58:	b.hi	40de88 <ferror@plt+0xb338>  // b.pmore
  40db5c:	mov	w8, w26
  40db60:	adr	x9, 40db30 <ferror@plt+0xafe0>
  40db64:	ldrb	w10, [x27, x8]
  40db68:	add	x9, x9, x10, lsl #2
  40db6c:	br	x9
  40db70:	cbz	w19, 40dbcc <ferror@plt+0xb07c>
  40db74:	ldur	x8, [x29, #-16]
  40db78:	ldrb	w8, [x8]
  40db7c:	cmp	w8, #0x29
  40db80:	b.eq	40db2c <ferror@plt+0xafdc>  // b.none
  40db84:	cmp	w8, #0x28
  40db88:	b.ne	40db30 <ferror@plt+0xafe0>  // b.any
  40db8c:	add	w19, w19, #0x1
  40db90:	b	40db30 <ferror@plt+0xafe0>
  40db94:	mov	w0, #0x1                   	// #1
  40db98:	mov	w1, wzr
  40db9c:	mov	x2, x24
  40dba0:	mov	w3, w25
  40dba4:	mov	x4, x22
  40dba8:	bl	402d08 <ferror@plt+0x1b8>
  40dbac:	b	40db44 <ferror@plt+0xaff4>
  40dbb0:	ldp	x9, x8, [x21, #16]
  40dbb4:	cmp	x8, x9
  40dbb8:	b.ne	40db44 <ferror@plt+0xaff4>  // b.any
  40dbbc:	ldur	x8, [x29, #-16]
  40dbc0:	stur	w23, [x29, #-40]
  40dbc4:	stur	x8, [x29, #-32]
  40dbc8:	b	40db44 <ferror@plt+0xaff4>
  40dbcc:	ldp	x8, x9, [x21, #24]
  40dbd0:	cmp	x9, x8
  40dbd4:	b.ne	40dbe8 <ferror@plt+0xb098>  // b.any
  40dbd8:	mov	w1, #0x1                   	// #1
  40dbdc:	mov	x0, x21
  40dbe0:	bl	418058 <_obstack_newchunk@@Base>
  40dbe4:	ldr	x8, [x21, #24]
  40dbe8:	add	x9, x8, #0x1
  40dbec:	str	x9, [x21, #24]
  40dbf0:	strb	wzr, [x8]
  40dbf4:	ldp	x10, x8, [x21, #16]
  40dbf8:	cmp	x8, x10
  40dbfc:	b.ne	40dc0c <ferror@plt+0xb0bc>  // b.any
  40dc00:	ldrb	w9, [x21, #80]
  40dc04:	orr	w9, w9, #0x2
  40dc08:	strb	w9, [x21, #80]
  40dc0c:	ldr	x12, [x21, #48]
  40dc10:	ldr	x13, [x21, #8]
  40dc14:	ldr	x9, [x21, #32]
  40dc18:	ldur	w11, [x29, #-40]
  40dc1c:	add	x8, x12, x8
  40dc20:	bic	x8, x8, x12
  40dc24:	sub	x14, x9, x13
  40dc28:	sub	x12, x8, x13
  40dc2c:	cmp	x12, x14
  40dc30:	csel	x8, x9, x8, hi  // hi = pmore
  40dc34:	stp	x8, x8, [x21, #16]
  40dc38:	cbz	w11, 40dc6c <ferror@plt+0xb11c>
  40dc3c:	ldr	w10, [sp, #60]
  40dc40:	cmp	w26, #0x4
  40dc44:	cset	w19, eq  // eq = none
  40dc48:	tbnz	w10, #2, 40dc80 <ferror@plt+0xb130>
  40dc4c:	cmp	w11, #0x2
  40dc50:	b.ne	40dc80 <ferror@plt+0xb130>  // b.any
  40dc54:	mov	w10, #0x1                   	// #1
  40dc58:	stur	w10, [x29, #-40]
  40dc5c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x1d94>
  40dc60:	add	x10, x10, #0x67f
  40dc64:	stur	x10, [x29, #-32]
  40dc68:	b	40dc80 <ferror@plt+0xb130>
  40dc6c:	mov	w11, #0x1                   	// #1
  40dc70:	cmp	w26, #0x4
  40dc74:	stur	w11, [x29, #-40]
  40dc78:	stur	x10, [x29, #-32]
  40dc7c:	cset	w19, eq  // eq = none
  40dc80:	sub	x9, x9, x8
  40dc84:	cmp	x9, #0xf
  40dc88:	b.hi	40dc9c <ferror@plt+0xb14c>  // b.pmore
  40dc8c:	mov	w1, #0x10                  	// #16
  40dc90:	mov	x0, x21
  40dc94:	bl	418058 <_obstack_newchunk@@Base>
  40dc98:	ldr	x8, [x21, #24]
  40dc9c:	ldur	q0, [x29, #-40]
  40dca0:	str	q0, [x8]
  40dca4:	ldp	x24, x8, [x21, #16]
  40dca8:	add	x8, x8, #0x10
  40dcac:	cmp	x8, x24
  40dcb0:	str	x8, [x21, #24]
  40dcb4:	b.ne	40dcc4 <ferror@plt+0xb174>  // b.any
  40dcb8:	ldrb	w9, [x21, #80]
  40dcbc:	orr	w9, w9, #0x2
  40dcc0:	strb	w9, [x21, #80]
  40dcc4:	ldr	x10, [x21, #48]
  40dcc8:	ldr	x11, [x21, #8]
  40dccc:	ldr	x12, [x21, #32]
  40dcd0:	ldp	x9, x13, [x28]
  40dcd4:	add	x8, x10, x8
  40dcd8:	bic	x8, x8, x10
  40dcdc:	sub	x14, x12, x11
  40dce0:	sub	x10, x8, x11
  40dce4:	sub	x13, x13, x9
  40dce8:	cmp	x10, x14
  40dcec:	csel	x8, x12, x8, hi  // hi = pmore
  40dcf0:	cmp	x13, #0x7
  40dcf4:	stp	x8, x8, [x21, #16]
  40dcf8:	b.hi	40dacc <ferror@plt+0xaf7c>  // b.pmore
  40dcfc:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dd00:	add	x25, x25, #0x9e0
  40dd04:	mov	w1, #0x8                   	// #8
  40dd08:	mov	x0, x25
  40dd0c:	bl	418058 <_obstack_newchunk@@Base>
  40dd10:	ldr	x9, [x25, #24]
  40dd14:	b	40dacc <ferror@plt+0xaf7c>
  40dd18:	ldr	x8, [x20, #2552]
  40dd1c:	ldr	w13, [sp, #48]
  40dd20:	b	40dd40 <ferror@plt+0xb1f0>
  40dd24:	ldr	x24, [sp, #32]
  40dd28:	ldr	w27, [sp, #28]
  40dd2c:	ldr	w13, [sp, #48]
  40dd30:	ldp	x23, x22, [sp, #8]
  40dd34:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dd38:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dd3c:	add	x26, x26, #0x998
  40dd40:	ldr	x9, [sp, #40]
  40dd44:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dd48:	ldr	x10, [x10, #2544]
  40dd4c:	adrp	x11, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40dd50:	sub	x9, x23, x9
  40dd54:	adrp	x12, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40dd58:	ldr	x19, [x11, #3520]
  40dd5c:	ldr	w23, [x12, #3496]
  40dd60:	and	x9, x9, #0xffffffff
  40dd64:	ldr	w28, [sp, #56]
  40dd68:	sub	x8, x8, x9
  40dd6c:	sub	x8, x8, x10
  40dd70:	str	x22, [x11, #3520]
  40dd74:	add	x22, x10, x9
  40dd78:	lsr	x21, x8, #3
  40dd7c:	str	w13, [x12, #3496]
  40dd80:	cbz	w28, 40dd98 <ferror@plt+0xb248>
  40dd84:	ldr	x0, [x24, #16]
  40dd88:	mov	w1, w27
  40dd8c:	mov	w2, w21
  40dd90:	mov	x3, x22
  40dd94:	bl	409194 <ferror@plt+0x6644>
  40dd98:	bl	40bf40 <ferror@plt+0x93f0>
  40dd9c:	ldr	w8, [x24, #24]
  40dda0:	cmp	w8, #0x1
  40dda4:	b.eq	40ddc4 <ferror@plt+0xb274>  // b.none
  40dda8:	cmp	w8, #0x2
  40ddac:	b.ne	40deb8 <ferror@plt+0xb368>  // b.any
  40ddb0:	ldr	x8, [x24, #32]
  40ddb4:	mov	w1, w21
  40ddb8:	mov	x2, x22
  40ddbc:	blr	x8
  40ddc0:	b	40ddd4 <ferror@plt+0xb284>
  40ddc4:	mov	x1, x24
  40ddc8:	mov	w2, w21
  40ddcc:	mov	x3, x22
  40ddd0:	bl	403c4c <ferror@plt+0x10fc>
  40ddd4:	bl	40c028 <ferror@plt+0x94d8>
  40ddd8:	cbz	w28, 40ddf0 <ferror@plt+0xb2a0>
  40dddc:	mov	x3, x0
  40dde0:	ldr	x0, [x24, #16]
  40dde4:	mov	w1, w27
  40dde8:	mov	w2, w21
  40ddec:	bl	4092f8 <ferror@plt+0x67a8>
  40ddf0:	ldr	w8, [x25, #2432]
  40ddf4:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ddf8:	str	x19, [x9, #3520]
  40ddfc:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40de00:	sub	w8, w8, #0x1
  40de04:	str	w23, [x9, #3496]
  40de08:	str	w8, [x25, #2432]
  40de0c:	ldr	w8, [x24, #12]
  40de10:	ldrb	w9, [x24, #8]
  40de14:	sub	w8, w8, #0x1
  40de18:	str	w8, [x24, #12]
  40de1c:	tbz	w9, #4, 40de28 <ferror@plt+0xb2d8>
  40de20:	mov	x0, x24
  40de24:	bl	41053c <ferror@plt+0xd9ec>
  40de28:	ldr	w8, [sp, #52]
  40de2c:	cbz	w8, 40de5c <ferror@plt+0xb30c>
  40de30:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40de34:	add	x8, x8, #0x990
  40de38:	ldr	x1, [x22]
  40de3c:	ldr	x9, [x8]
  40de40:	cmp	x1, x9
  40de44:	b.ls	40de68 <ferror@plt+0xb318>  // b.plast
  40de48:	ldr	x8, [x8, #24]
  40de4c:	cmp	x1, x8
  40de50:	b.cs	40de68 <ferror@plt+0xb318>  // b.hs, b.nlast
  40de54:	stp	x1, x1, [x26]
  40de58:	b	40de74 <ferror@plt+0xb324>
  40de5c:	add	x0, sp, #0x40
  40de60:	mov	x1, xzr
  40de64:	b	40de70 <ferror@plt+0xb320>
  40de68:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40de6c:	add	x0, x0, #0x988
  40de70:	bl	4181d0 <_obstack_free@@Base>
  40de74:	ldr	x8, [x20, #2552]
  40de78:	neg	x9, x21, lsl #32
  40de7c:	add	x8, x8, x9, asr #29
  40de80:	str	x8, [x20, #2552]
  40de84:	b	40d84c <ferror@plt+0xacfc>
  40de88:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40de8c:	ldr	w0, [x8, #1192]
  40de90:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40de94:	add	x2, x2, #0x3be
  40de98:	mov	w1, wzr
  40de9c:	bl	402c5c <ferror@plt+0x10c>
  40dea0:	bl	402860 <abort@plt>
  40dea4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dea8:	ldr	w0, [x8, #1192]
  40deac:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40deb0:	add	x2, x2, #0x331
  40deb4:	b	40de98 <ferror@plt+0xb348>
  40deb8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40debc:	ldr	w0, [x8, #1192]
  40dec0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40dec4:	add	x2, x2, #0x300
  40dec8:	b	40de98 <ferror@plt+0xb348>
  40decc:	stp	x29, x30, [sp, #-16]!
  40ded0:	ldr	w10, [x0, #24]
  40ded4:	mov	x8, x3
  40ded8:	mov	x3, x2
  40dedc:	mov	x9, x0
  40dee0:	cmp	w10, #0x1
  40dee4:	mov	w2, w1
  40dee8:	mov	x29, sp
  40deec:	b.eq	40df10 <ferror@plt+0xb3c0>  // b.none
  40def0:	cmp	w10, #0x2
  40def4:	b.ne	40df20 <ferror@plt+0xb3d0>  // b.any
  40def8:	ldr	x4, [x9, #32]
  40defc:	mov	x0, x8
  40df00:	mov	w1, w2
  40df04:	mov	x2, x3
  40df08:	ldp	x29, x30, [sp], #16
  40df0c:	br	x4
  40df10:	mov	x0, x8
  40df14:	mov	x1, x9
  40df18:	ldp	x29, x30, [sp], #16
  40df1c:	b	403c4c <ferror@plt+0x10fc>
  40df20:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df24:	ldr	w0, [x8, #1192]
  40df28:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40df2c:	add	x2, x2, #0x300
  40df30:	mov	w1, wzr
  40df34:	bl	402c5c <ferror@plt+0x10c>
  40df38:	bl	402860 <abort@plt>
  40df3c:	stp	x29, x30, [sp, #-16]!
  40df40:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40df44:	add	x0, x0, #0x6f8
  40df48:	ldr	x8, [x0]
  40df4c:	adrp	x1, 40d000 <ferror@plt+0xa4b0>
  40df50:	add	x1, x1, #0xfc0
  40df54:	mov	x2, xzr
  40df58:	mov	x29, sp
  40df5c:	blr	x8
  40df60:	cbz	x0, 40dfbc <ferror@plt+0xb46c>
  40df64:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df68:	ldr	x9, [x9, #1056]
  40df6c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df70:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df74:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df78:	add	x11, x11, #0xa48
  40df7c:	str	x0, [x8, #2624]
  40df80:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df84:	adrp	x12, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df88:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40df8c:	adrp	x3, 417000 <ferror@plt+0x144b0>
  40df90:	adrp	x4, 402000 <mbrtowc@plt-0x4b0>
  40df94:	str	x11, [x8, #2656]
  40df98:	add	x0, x0, #0xa70
  40df9c:	add	x3, x3, #0x280
  40dfa0:	str	x9, [x10, #2632]
  40dfa4:	add	x4, x4, #0x930
  40dfa8:	str	x9, [x12, #2664]
  40dfac:	mov	x1, xzr
  40dfb0:	mov	x2, xzr
  40dfb4:	ldp	x29, x30, [sp], #16
  40dfb8:	b	417f04 <_obstack_begin@@Base>
  40dfbc:	bl	41761c <ferror@plt+0x14acc>
  40dfc0:	ldr	w8, [x0, #8]
  40dfc4:	ldr	w9, [x1, #8]
  40dfc8:	sub	w0, w8, w9
  40dfcc:	ret
  40dfd0:	stp	x29, x30, [sp, #-64]!
  40dfd4:	str	x23, [sp, #16]
  40dfd8:	stp	x22, x21, [sp, #32]
  40dfdc:	stp	x20, x19, [sp, #48]
  40dfe0:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dfe4:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40dfe8:	ldr	w20, [x23, #2760]
  40dfec:	ldr	x19, [x22, #2624]
  40dff0:	mov	x29, sp
  40dff4:	cbz	w20, 40e028 <ferror@plt+0xb4d8>
  40dff8:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40dffc:	ldr	x0, [x8, #2800]
  40e000:	bl	412000 <ferror@plt+0xf4b0>
  40e004:	cbnz	w0, 40e028 <ferror@plt+0xb4d8>
  40e008:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e00c:	ldr	x21, [x8, #2816]
  40e010:	mov	w0, w20
  40e014:	str	wzr, [x23, #2760]
  40e018:	bl	40fe68 <ferror@plt+0xd318>
  40e01c:	mov	x1, x0
  40e020:	mov	x0, x21
  40e024:	bl	411858 <ferror@plt+0xed08>
  40e028:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e02c:	ldr	w20, [x8, #2764]
  40e030:	cbz	w20, 40e094 <ferror@plt+0xb544>
  40e034:	ldr	w8, [x23, #2760]
  40e038:	cmp	w8, w20
  40e03c:	b.ne	40e05c <ferror@plt+0xb50c>  // b.any
  40e040:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e044:	ldr	x0, [x8, #2800]
  40e048:	bl	412000 <ferror@plt+0xf4b0>
  40e04c:	cbnz	w0, 40e094 <ferror@plt+0xb544>
  40e050:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e054:	add	x8, x8, #0xac8
  40e058:	b	40e074 <ferror@plt+0xb524>
  40e05c:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e060:	ldr	x0, [x8, #2808]
  40e064:	bl	412000 <ferror@plt+0xf4b0>
  40e068:	cbnz	w0, 40e094 <ferror@plt+0xb544>
  40e06c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e070:	add	x8, x8, #0xacc
  40e074:	adrp	x9, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e078:	ldr	x21, [x9, #2816]
  40e07c:	mov	w0, w20
  40e080:	str	wzr, [x8]
  40e084:	bl	40fe68 <ferror@plt+0xd318>
  40e088:	mov	x1, x0
  40e08c:	mov	x0, x21
  40e090:	bl	411858 <ferror@plt+0xed08>
  40e094:	str	xzr, [x22, #2624]
  40e098:	ldr	x8, [x19]
  40e09c:	mov	x0, x19
  40e0a0:	ldr	x8, [x8, #48]
  40e0a4:	blr	x8
  40e0a8:	ldp	x20, x19, [sp, #48]
  40e0ac:	ldp	x22, x21, [sp, #32]
  40e0b0:	ldr	x23, [sp, #16]
  40e0b4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e0b8:	add	x0, x0, #0xa70
  40e0bc:	mov	x1, xzr
  40e0c0:	ldp	x29, x30, [sp], #64
  40e0c4:	b	4181d0 <_obstack_free@@Base>
  40e0c8:	stp	x29, x30, [sp, #-64]!
  40e0cc:	str	x23, [sp, #16]
  40e0d0:	stp	x22, x21, [sp, #32]
  40e0d4:	stp	x20, x19, [sp, #48]
  40e0d8:	mov	x29, sp
  40e0dc:	cbz	w1, 40e190 <ferror@plt+0xb640>
  40e0e0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e0e4:	ldr	x8, [x8, #2656]
  40e0e8:	cbz	x8, 40e190 <ferror@plt+0xb640>
  40e0ec:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e0f0:	ldr	x3, [x21, #2664]
  40e0f4:	mov	w19, w1
  40e0f8:	mov	x20, x0
  40e0fc:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e100:	cbnz	x3, 40e11c <ferror@plt+0xb5cc>
  40e104:	ldr	w8, [x22, #2768]
  40e108:	cmp	w8, w19
  40e10c:	b.ge	40e11c <ferror@plt+0xb5cc>  // b.tcont
  40e110:	mov	w0, w19
  40e114:	bl	40e1a4 <ferror@plt+0xb654>
  40e118:	ldr	x3, [x21, #2664]
  40e11c:	cbz	x3, 40e160 <ferror@plt+0xb610>
  40e120:	sxtw	x1, w19
  40e124:	mov	w2, #0x1                   	// #1
  40e128:	mov	x0, x20
  40e12c:	bl	4029b0 <fwrite@plt>
  40e130:	cmp	w0, #0x1
  40e134:	b.eq	40e190 <ferror@plt+0xb640>  // b.none
  40e138:	bl	402ac0 <__errno_location@plt>
  40e13c:	ldr	w1, [x0]
  40e140:	ldp	x20, x19, [sp, #48]
  40e144:	ldp	x22, x21, [sp, #32]
  40e148:	ldr	x23, [sp, #16]
  40e14c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e150:	add	x2, x2, #0x406
  40e154:	mov	w0, #0x1                   	// #1
  40e158:	ldp	x29, x30, [sp], #64
  40e15c:	b	402c5c <ferror@plt+0x10c>
  40e160:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e164:	ldr	x0, [x23, #2776]
  40e168:	sxtw	x21, w19
  40e16c:	mov	x1, x20
  40e170:	mov	x2, x21
  40e174:	bl	4024c0 <memcpy@plt>
  40e178:	ldr	x8, [x23, #2776]
  40e17c:	ldr	w9, [x22, #2768]
  40e180:	add	x8, x8, x21
  40e184:	sub	w9, w9, w19
  40e188:	str	x8, [x23, #2776]
  40e18c:	str	w9, [x22, #2768]
  40e190:	ldp	x20, x19, [sp, #48]
  40e194:	ldp	x22, x21, [sp, #32]
  40e198:	ldr	x23, [sp, #16]
  40e19c:	ldp	x29, x30, [sp], #64
  40e1a0:	ret
  40e1a4:	sub	sp, sp, #0xe0
  40e1a8:	stp	x24, x23, [sp, #176]
  40e1ac:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e1b0:	stp	x20, x19, [sp, #208]
  40e1b4:	ldr	x19, [x23, #2656]
  40e1b8:	stp	x29, x30, [sp, #128]
  40e1bc:	stp	x26, x25, [sp, #160]
  40e1c0:	stp	x22, x21, [sp, #192]
  40e1c4:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e1c8:	ldr	w8, [x19, #12]
  40e1cc:	ldr	w9, [x22, #2768]
  40e1d0:	str	x27, [sp, #144]
  40e1d4:	add	x29, sp, #0x80
  40e1d8:	sub	w9, w8, w9
  40e1dc:	add	w20, w9, w0
  40e1e0:	cmp	w8, w20
  40e1e4:	str	w9, [x19, #16]
  40e1e8:	b.ge	40e20c <ferror@plt+0xb6bc>  // b.tcont
  40e1ec:	mov	w9, #0x200                 	// #512
  40e1f0:	mov	w24, w8
  40e1f4:	lsl	w10, w24, #1
  40e1f8:	cmp	w24, #0x0
  40e1fc:	csel	w24, w9, w10, eq  // eq = none
  40e200:	cmp	w24, w20
  40e204:	b.lt	40e1f4 <ferror@plt+0xb6a4>  // b.tstop
  40e208:	b	40e210 <ferror@plt+0xb6c0>
  40e20c:	mov	w24, w8
  40e210:	adrp	x25, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e214:	ldr	w9, [x25, #2840]
  40e218:	sub	w8, w24, w8
  40e21c:	add	w8, w8, w9
  40e220:	cmp	w8, #0x80, lsl #12
  40e224:	b.le	40e380 <ferror@plt+0xb830>
  40e228:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e22c:	ldr	x0, [x8, #2624]
  40e230:	ldr	x8, [x0]
  40e234:	ldr	x9, [x8, #56]
  40e238:	add	x8, sp, #0x8
  40e23c:	blr	x9
  40e240:	ldur	q0, [sp, #8]
  40e244:	ldur	q1, [sp, #24]
  40e248:	ldur	q2, [sp, #40]
  40e24c:	add	x0, sp, #0x40
  40e250:	add	x1, sp, #0x8
  40e254:	stp	q0, q1, [sp, #64]
  40e258:	ldp	x8, x9, [sp, #56]
  40e25c:	str	q2, [sp, #96]
  40e260:	str	x8, [sp, #112]
  40e264:	ldr	x8, [x9, #64]
  40e268:	blr	x8
  40e26c:	mov	x26, x19
  40e270:	tbz	w0, #0, 40e2a0 <ferror@plt+0xb750>
  40e274:	ldr	x8, [sp, #8]
  40e278:	ldr	x9, [sp, #64]
  40e27c:	add	x0, sp, #0x40
  40e280:	add	x1, sp, #0x8
  40e284:	ldr	w10, [x8, #16]
  40e288:	ldr	x9, [x9, #64]
  40e28c:	cmp	w10, w20
  40e290:	csel	w20, w10, w20, gt
  40e294:	csel	x26, x8, x26, gt
  40e298:	blr	x9
  40e29c:	tbnz	w0, #0, 40e274 <ferror@plt+0xb724>
  40e2a0:	ldr	x8, [sp, #64]
  40e2a4:	add	x0, sp, #0x40
  40e2a8:	ldr	x8, [x8, #72]
  40e2ac:	blr	x8
  40e2b0:	ldp	w20, w8, [x26, #8]
  40e2b4:	ldr	w9, [x25, #2840]
  40e2b8:	ldr	x19, [x26]
  40e2bc:	adrp	x27, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e2c0:	sub	w8, w9, w8
  40e2c4:	str	w8, [x25, #2840]
  40e2c8:	str	wzr, [x26, #12]
  40e2cc:	str	xzr, [x26]
  40e2d0:	ldr	x8, [x27, #2816]
  40e2d4:	cbnz	x8, 40e318 <ferror@plt+0xb7c8>
  40e2d8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e2dc:	add	x0, x0, #0x54c
  40e2e0:	mov	w2, #0x1                   	// #1
  40e2e4:	mov	x1, xzr
  40e2e8:	bl	41133c <ferror@plt+0xe7ec>
  40e2ec:	str	x0, [x27, #2816]
  40e2f0:	cbnz	x0, 40e30c <ferror@plt+0xb7bc>
  40e2f4:	bl	402ac0 <__errno_location@plt>
  40e2f8:	ldr	w1, [x0]
  40e2fc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e300:	add	x2, x2, #0x550
  40e304:	mov	w0, #0x1                   	// #1
  40e308:	bl	402c5c <ferror@plt+0x10c>
  40e30c:	adrp	x0, 40f000 <ferror@plt+0xc4b0>
  40e310:	add	x0, x0, #0xfe0
  40e314:	bl	418b70 <_obstack_memory_used@@Base+0x904>
  40e318:	mov	w0, w20
  40e31c:	bl	40fe68 <ferror@plt+0xd318>
  40e320:	ldr	x8, [x27, #2816]
  40e324:	mov	x21, x0
  40e328:	mov	x1, x21
  40e32c:	mov	x0, x8
  40e330:	bl	411618 <ferror@plt+0xeac8>
  40e334:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e338:	add	x1, x1, #0x57b
  40e33c:	mov	x0, x21
  40e340:	bl	411dec <ferror@plt+0xf29c>
  40e344:	mov	x20, x0
  40e348:	cbz	x0, 40e3ec <ferror@plt+0xb89c>
  40e34c:	mov	x0, x20
  40e350:	bl	402630 <fileno@plt>
  40e354:	mov	w1, #0x1                   	// #1
  40e358:	bl	41225c <ferror@plt+0xf70c>
  40e35c:	cbz	w0, 40e410 <ferror@plt+0xb8c0>
  40e360:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e364:	ldr	w21, [x8, #1192]
  40e368:	bl	402ac0 <__errno_location@plt>
  40e36c:	ldr	w1, [x0]
  40e370:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e374:	add	x2, x2, #0x57e
  40e378:	mov	w0, w21
  40e37c:	b	40e40c <ferror@plt+0xb8bc>
  40e380:	mov	x26, xzr
  40e384:	cmp	x19, x26
  40e388:	b.eq	40e46c <ferror@plt+0xb91c>  // b.none
  40e38c:	cbz	x26, 40e4e0 <ferror@plt+0xb990>
  40e390:	ldr	x19, [x26]
  40e394:	str	xzr, [x26]
  40e398:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e39c:	ldr	w20, [x26, #8]
  40e3a0:	ldr	w8, [x8, #2760]
  40e3a4:	cmp	w8, w20
  40e3a8:	b.eq	40e4e0 <ferror@plt+0xb990>  // b.none
  40e3ac:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e3b0:	ldr	w9, [x9, #2764]
  40e3b4:	cmp	w9, w20
  40e3b8:	b.eq	40e4e0 <ferror@plt+0xb990>  // b.none
  40e3bc:	adrp	x10, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e3c0:	ldrb	w10, [x10, #2844]
  40e3c4:	cmp	w10, #0x1
  40e3c8:	b.ne	40e488 <ferror@plt+0xb938>  // b.any
  40e3cc:	adrp	x21, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e3d0:	add	x21, x21, #0xaf0
  40e3d4:	cbz	w8, 40e4a0 <ferror@plt+0xb950>
  40e3d8:	ldr	x0, [x21]
  40e3dc:	bl	412000 <ferror@plt+0xf4b0>
  40e3e0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e3e4:	add	x8, x8, #0xac8
  40e3e8:	b	40e4bc <ferror@plt+0xb96c>
  40e3ec:	ldr	x0, [x27, #2816]
  40e3f0:	mov	x1, x21
  40e3f4:	bl	41169c <ferror@plt+0xeb4c>
  40e3f8:	bl	402ac0 <__errno_location@plt>
  40e3fc:	ldr	w1, [x0]
  40e400:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e404:	add	x2, x2, #0x550
  40e408:	mov	w0, #0x1                   	// #1
  40e40c:	bl	402c5c <ferror@plt+0x10c>
  40e410:	ldr	w1, [x26, #16]
  40e414:	str	x20, [x26]
  40e418:	cmp	w1, #0x1
  40e41c:	b.lt	40e450 <ferror@plt+0xb900>  // b.tstop
  40e420:	mov	w2, #0x1                   	// #1
  40e424:	mov	x0, x19
  40e428:	mov	x3, x20
  40e42c:	bl	4029b0 <fwrite@plt>
  40e430:	cmp	w0, #0x1
  40e434:	b.eq	40e450 <ferror@plt+0xb900>  // b.none
  40e438:	bl	402ac0 <__errno_location@plt>
  40e43c:	ldr	w1, [x0]
  40e440:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e444:	add	x2, x2, #0x51c
  40e448:	mov	w0, #0x1                   	// #1
  40e44c:	bl	402c5c <ferror@plt+0x10c>
  40e450:	mov	x0, x19
  40e454:	bl	402930 <free@plt>
  40e458:	mov	w8, #0x1                   	// #1
  40e45c:	str	w8, [x26, #16]
  40e460:	ldr	x19, [x23, #2656]
  40e464:	cmp	x19, x26
  40e468:	b.ne	40e38c <ferror@plt+0xb83c>  // b.any
  40e46c:	ldr	x9, [x19]
  40e470:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e474:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e478:	mov	w8, wzr
  40e47c:	str	x9, [x10, #2664]
  40e480:	str	xzr, [x11, #2776]
  40e484:	b	40e540 <ferror@plt+0xb9f0>
  40e488:	adrp	x21, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40e48c:	add	x21, x21, #0xaf8
  40e490:	cbz	w9, 40e4b0 <ferror@plt+0xb960>
  40e494:	ldr	x0, [x21]
  40e498:	bl	412000 <ferror@plt+0xf4b0>
  40e49c:	b	40e4b4 <ferror@plt+0xb964>
  40e4a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e4a4:	mov	w0, wzr
  40e4a8:	add	x8, x8, #0xac8
  40e4ac:	b	40e4bc <ferror@plt+0xb96c>
  40e4b0:	mov	w0, wzr
  40e4b4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e4b8:	add	x8, x8, #0xacc
  40e4bc:	str	x19, [x21]
  40e4c0:	str	w20, [x8]
  40e4c4:	cbz	w0, 40e4e0 <ferror@plt+0xb990>
  40e4c8:	bl	402ac0 <__errno_location@plt>
  40e4cc:	ldr	w1, [x0]
  40e4d0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e4d4:	add	x2, x2, #0x463
  40e4d8:	mov	w0, wzr
  40e4dc:	bl	402c5c <ferror@plt+0x10c>
  40e4e0:	ldr	x8, [x23, #2656]
  40e4e4:	sxtw	x0, w24
  40e4e8:	ldr	x19, [x8]
  40e4ec:	bl	417280 <ferror@plt+0x14730>
  40e4f0:	ldr	x8, [x23, #2656]
  40e4f4:	mov	x1, x19
  40e4f8:	ldrsw	x2, [x8, #16]
  40e4fc:	str	x0, [x8]
  40e500:	bl	4024c0 <memcpy@plt>
  40e504:	mov	x0, x19
  40e508:	bl	402930 <free@plt>
  40e50c:	ldr	x8, [x23, #2656]
  40e510:	ldr	w10, [x25, #2840]
  40e514:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e518:	ldr	w9, [x8, #12]
  40e51c:	sub	w9, w24, w9
  40e520:	add	w9, w9, w10
  40e524:	str	w9, [x25, #2840]
  40e528:	ldr	x9, [x8]
  40e52c:	ldrsw	x10, [x8, #16]
  40e530:	str	w24, [x8, #12]
  40e534:	add	x8, x9, x10
  40e538:	str	x8, [x11, #2776]
  40e53c:	sub	w8, w24, w10
  40e540:	str	w8, [x22, #2768]
  40e544:	ldp	x20, x19, [sp, #208]
  40e548:	ldp	x22, x21, [sp, #192]
  40e54c:	ldp	x24, x23, [sp, #176]
  40e550:	ldp	x26, x25, [sp, #160]
  40e554:	ldr	x27, [sp, #144]
  40e558:	ldp	x29, x30, [sp, #128]
  40e55c:	add	sp, sp, #0xe0
  40e560:	ret
  40e564:	stp	x29, x30, [sp, #-96]!
  40e568:	stp	x20, x19, [sp, #80]
  40e56c:	mov	w20, w2
  40e570:	mov	x19, x1
  40e574:	stp	x28, x27, [sp, #16]
  40e578:	stp	x26, x25, [sp, #32]
  40e57c:	stp	x24, x23, [sp, #48]
  40e580:	stp	x22, x21, [sp, #64]
  40e584:	mov	x29, sp
  40e588:	cbz	x0, 40e5e8 <ferror@plt+0xba98>
  40e58c:	mov	x22, x0
  40e590:	ldp	x0, x8, [x0, #24]
  40e594:	sxtw	x20, w20
  40e598:	sub	x8, x8, x0
  40e59c:	cmp	x8, x20
  40e5a0:	b.cs	40e5b4 <ferror@plt+0xba64>  // b.hs, b.nlast
  40e5a4:	mov	x0, x22
  40e5a8:	mov	x1, x20
  40e5ac:	bl	418058 <_obstack_newchunk@@Base>
  40e5b0:	ldr	x0, [x22, #24]
  40e5b4:	mov	x1, x19
  40e5b8:	mov	x2, x20
  40e5bc:	bl	4024c0 <memcpy@plt>
  40e5c0:	ldr	x8, [x22, #24]
  40e5c4:	add	x8, x8, x20
  40e5c8:	str	x8, [x22, #24]
  40e5cc:	ldp	x20, x19, [sp, #80]
  40e5d0:	ldp	x22, x21, [sp, #64]
  40e5d4:	ldp	x24, x23, [sp, #48]
  40e5d8:	ldp	x26, x25, [sp, #32]
  40e5dc:	ldp	x28, x27, [sp, #16]
  40e5e0:	ldp	x29, x30, [sp], #96
  40e5e4:	ret
  40e5e8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e5ec:	ldr	x8, [x8, #2656]
  40e5f0:	cbz	x8, 40e5cc <ferror@plt+0xba7c>
  40e5f4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e5f8:	ldr	w8, [x8, #1168]
  40e5fc:	cbz	w8, 40e650 <ferror@plt+0xbb00>
  40e600:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e604:	ldrb	w8, [x22, #2784]
  40e608:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40e60c:	tbnz	w8, #0, 40eac0 <ferror@plt+0xbf70>
  40e610:	ldr	w8, [x23, #3576]
  40e614:	mov	w21, w3
  40e618:	mov	w9, #0x1                   	// #1
  40e61c:	strb	w9, [x22, #2784]
  40e620:	add	w8, w8, #0x1
  40e624:	cmp	w8, w3
  40e628:	str	w8, [x23, #3576]
  40e62c:	b.eq	40eac0 <ferror@plt+0xbf70>  // b.none
  40e630:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e634:	ldr	x1, [x24, #2664]
  40e638:	cbz	x1, 40e68c <ferror@plt+0xbb3c>
  40e63c:	mov	w0, #0x23                  	// #35
  40e640:	bl	4025a0 <putc@plt>
  40e644:	ldr	x1, [x24, #2664]
  40e648:	cbnz	x1, 40e76c <ferror@plt+0xbc1c>
  40e64c:	b	40e6c0 <ferror@plt+0xbb70>
  40e650:	cmp	w20, #0x8
  40e654:	b.hi	40e6f8 <ferror@plt+0xbba8>  // b.pmore
  40e658:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40e65c:	mov	w8, w20
  40e660:	add	x9, x9, #0x3f4
  40e664:	adr	x10, 40e5cc <ferror@plt+0xba7c>
  40e668:	ldrh	w11, [x9, x8, lsl #1]
  40e66c:	add	x10, x10, x11, lsl #2
  40e670:	br	x10
  40e674:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e678:	ldr	x1, [x22, #2664]
  40e67c:	cbz	x1, 40e790 <ferror@plt+0xbc40>
  40e680:	ldrb	w0, [x19]
  40e684:	bl	4025a0 <putc@plt>
  40e688:	b	40ee04 <ferror@plt+0xc2b4>
  40e68c:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e690:	ldr	w8, [x25, #2768]
  40e694:	cbz	w8, 40e71c <ferror@plt+0xbbcc>
  40e698:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e69c:	ldr	x10, [x9, #2776]
  40e6a0:	sub	w8, w8, #0x1
  40e6a4:	mov	w11, #0x23                  	// #35
  40e6a8:	str	w8, [x25, #2768]
  40e6ac:	add	x8, x10, #0x1
  40e6b0:	str	x8, [x9, #2776]
  40e6b4:	strb	w11, [x10]
  40e6b8:	ldr	x1, [x24, #2664]
  40e6bc:	cbnz	x1, 40e76c <ferror@plt+0xbc1c>
  40e6c0:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e6c4:	ldr	w8, [x25, #2768]
  40e6c8:	cbz	w8, 40e75c <ferror@plt+0xbc0c>
  40e6cc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e6d0:	ldr	x10, [x9, #2776]
  40e6d4:	sub	w8, w8, #0x1
  40e6d8:	mov	w11, #0x6c                  	// #108
  40e6dc:	str	w8, [x25, #2768]
  40e6e0:	add	x8, x10, #0x1
  40e6e4:	str	x8, [x9, #2776]
  40e6e8:	strb	w11, [x10]
  40e6ec:	ldr	x1, [x24, #2664]
  40e6f0:	cbnz	x1, 40e77c <ferror@plt+0xbc2c>
  40e6f4:	b	40e7ec <ferror@plt+0xbc9c>
  40e6f8:	mov	x0, x19
  40e6fc:	mov	w1, w20
  40e700:	ldp	x20, x19, [sp, #80]
  40e704:	ldp	x22, x21, [sp, #64]
  40e708:	ldp	x24, x23, [sp, #48]
  40e70c:	ldp	x26, x25, [sp, #32]
  40e710:	ldp	x28, x27, [sp, #16]
  40e714:	ldp	x29, x30, [sp], #96
  40e718:	b	40e0c8 <ferror@plt+0xb578>
  40e71c:	mov	w0, #0x1                   	// #1
  40e720:	bl	40e1a4 <ferror@plt+0xb654>
  40e724:	ldr	x1, [x24, #2664]
  40e728:	cbnz	x1, 40e63c <ferror@plt+0xbaec>
  40e72c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e730:	ldr	x9, [x8, #2776]
  40e734:	mov	w10, #0x23                  	// #35
  40e738:	add	x11, x9, #0x1
  40e73c:	str	x11, [x8, #2776]
  40e740:	strb	w10, [x9]
  40e744:	ldr	w8, [x25, #2768]
  40e748:	sub	w8, w8, #0x1
  40e74c:	str	w8, [x25, #2768]
  40e750:	ldr	x1, [x24, #2664]
  40e754:	cbnz	x1, 40e76c <ferror@plt+0xbc1c>
  40e758:	b	40e6c0 <ferror@plt+0xbb70>
  40e75c:	mov	w0, #0x1                   	// #1
  40e760:	bl	40e1a4 <ferror@plt+0xb654>
  40e764:	ldr	x1, [x24, #2664]
  40e768:	cbz	x1, 40e7c0 <ferror@plt+0xbc70>
  40e76c:	mov	w0, #0x6c                  	// #108
  40e770:	bl	4025a0 <putc@plt>
  40e774:	ldr	x1, [x24, #2664]
  40e778:	cbz	x1, 40e7ec <ferror@plt+0xbc9c>
  40e77c:	mov	w0, #0x69                  	// #105
  40e780:	bl	4025a0 <putc@plt>
  40e784:	ldr	x1, [x24, #2664]
  40e788:	cbnz	x1, 40e8a8 <ferror@plt+0xbd58>
  40e78c:	b	40e820 <ferror@plt+0xbcd0>
  40e790:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e794:	ldr	w8, [x21, #2768]
  40e798:	cbz	w8, 40ec2c <ferror@plt+0xc0dc>
  40e79c:	sub	w8, w8, #0x1
  40e7a0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e7a4:	ldr	x10, [x9, #2776]
  40e7a8:	str	w8, [x21, #2768]
  40e7ac:	ldrb	w8, [x19]
  40e7b0:	add	x11, x10, #0x1
  40e7b4:	str	x11, [x9, #2776]
  40e7b8:	strb	w8, [x10]
  40e7bc:	b	40ee04 <ferror@plt+0xc2b4>
  40e7c0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e7c4:	ldr	x9, [x8, #2776]
  40e7c8:	mov	w10, #0x6c                  	// #108
  40e7cc:	add	x11, x9, #0x1
  40e7d0:	str	x11, [x8, #2776]
  40e7d4:	strb	w10, [x9]
  40e7d8:	ldr	w8, [x25, #2768]
  40e7dc:	sub	w8, w8, #0x1
  40e7e0:	str	w8, [x25, #2768]
  40e7e4:	ldr	x1, [x24, #2664]
  40e7e8:	cbnz	x1, 40e77c <ferror@plt+0xbc2c>
  40e7ec:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e7f0:	ldr	w8, [x25, #2768]
  40e7f4:	cbz	w8, 40e858 <ferror@plt+0xbd08>
  40e7f8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e7fc:	ldr	x10, [x9, #2776]
  40e800:	sub	w8, w8, #0x1
  40e804:	mov	w11, #0x69                  	// #105
  40e808:	str	w8, [x25, #2768]
  40e80c:	add	x8, x10, #0x1
  40e810:	str	x8, [x9, #2776]
  40e814:	strb	w11, [x10]
  40e818:	ldr	x1, [x24, #2664]
  40e81c:	cbnz	x1, 40e8a8 <ferror@plt+0xbd58>
  40e820:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e824:	ldr	w8, [x25, #2768]
  40e828:	cbz	w8, 40e898 <ferror@plt+0xbd48>
  40e82c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e830:	ldr	x10, [x9, #2776]
  40e834:	sub	w8, w8, #0x1
  40e838:	mov	w11, #0x6e                  	// #110
  40e83c:	str	w8, [x25, #2768]
  40e840:	add	x8, x10, #0x1
  40e844:	str	x8, [x9, #2776]
  40e848:	strb	w11, [x10]
  40e84c:	ldr	x1, [x24, #2664]
  40e850:	cbnz	x1, 40e8b8 <ferror@plt+0xbd68>
  40e854:	b	40e8f8 <ferror@plt+0xbda8>
  40e858:	mov	w0, #0x1                   	// #1
  40e85c:	bl	40e1a4 <ferror@plt+0xb654>
  40e860:	ldr	x1, [x24, #2664]
  40e864:	cbnz	x1, 40e77c <ferror@plt+0xbc2c>
  40e868:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e86c:	ldr	x9, [x8, #2776]
  40e870:	mov	w10, #0x69                  	// #105
  40e874:	add	x11, x9, #0x1
  40e878:	str	x11, [x8, #2776]
  40e87c:	strb	w10, [x9]
  40e880:	ldr	w8, [x25, #2768]
  40e884:	sub	w8, w8, #0x1
  40e888:	str	w8, [x25, #2768]
  40e88c:	ldr	x1, [x24, #2664]
  40e890:	cbnz	x1, 40e8a8 <ferror@plt+0xbd58>
  40e894:	b	40e820 <ferror@plt+0xbcd0>
  40e898:	mov	w0, #0x1                   	// #1
  40e89c:	bl	40e1a4 <ferror@plt+0xb654>
  40e8a0:	ldr	x1, [x24, #2664]
  40e8a4:	cbz	x1, 40e8cc <ferror@plt+0xbd7c>
  40e8a8:	mov	w0, #0x6e                  	// #110
  40e8ac:	bl	4025a0 <putc@plt>
  40e8b0:	ldr	x1, [x24, #2664]
  40e8b4:	cbz	x1, 40e8f8 <ferror@plt+0xbda8>
  40e8b8:	mov	w0, #0x65                  	// #101
  40e8bc:	bl	4025a0 <putc@plt>
  40e8c0:	ldr	x1, [x24, #2664]
  40e8c4:	cbnz	x1, 40e9ac <ferror@plt+0xbe5c>
  40e8c8:	b	40e92c <ferror@plt+0xbddc>
  40e8cc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e8d0:	ldr	x9, [x8, #2776]
  40e8d4:	mov	w10, #0x6e                  	// #110
  40e8d8:	add	x11, x9, #0x1
  40e8dc:	str	x11, [x8, #2776]
  40e8e0:	strb	w10, [x9]
  40e8e4:	ldr	w8, [x25, #2768]
  40e8e8:	sub	w8, w8, #0x1
  40e8ec:	str	w8, [x25, #2768]
  40e8f0:	ldr	x1, [x24, #2664]
  40e8f4:	cbnz	x1, 40e8b8 <ferror@plt+0xbd68>
  40e8f8:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e8fc:	ldr	w8, [x25, #2768]
  40e900:	cbz	w8, 40e95c <ferror@plt+0xbe0c>
  40e904:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e908:	ldr	x10, [x9, #2776]
  40e90c:	sub	w8, w8, #0x1
  40e910:	mov	w11, #0x65                  	// #101
  40e914:	str	w8, [x25, #2768]
  40e918:	add	x8, x10, #0x1
  40e91c:	str	x8, [x9, #2776]
  40e920:	strb	w11, [x10]
  40e924:	ldr	x1, [x24, #2664]
  40e928:	cbnz	x1, 40e9ac <ferror@plt+0xbe5c>
  40e92c:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e930:	ldr	w8, [x25, #2768]
  40e934:	cbz	w8, 40e99c <ferror@plt+0xbe4c>
  40e938:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e93c:	ldr	x10, [x9, #2776]
  40e940:	sub	w8, w8, #0x1
  40e944:	mov	w11, #0x20                  	// #32
  40e948:	str	w8, [x25, #2768]
  40e94c:	add	x8, x10, #0x1
  40e950:	str	x8, [x9, #2776]
  40e954:	strb	w11, [x10]
  40e958:	b	40e9b4 <ferror@plt+0xbe64>
  40e95c:	mov	w0, #0x1                   	// #1
  40e960:	bl	40e1a4 <ferror@plt+0xb654>
  40e964:	ldr	x1, [x24, #2664]
  40e968:	cbnz	x1, 40e8b8 <ferror@plt+0xbd68>
  40e96c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e970:	ldr	x9, [x8, #2776]
  40e974:	mov	w10, #0x65                  	// #101
  40e978:	add	x11, x9, #0x1
  40e97c:	str	x11, [x8, #2776]
  40e980:	strb	w10, [x9]
  40e984:	ldr	w8, [x25, #2768]
  40e988:	sub	w8, w8, #0x1
  40e98c:	str	w8, [x25, #2768]
  40e990:	ldr	x1, [x24, #2664]
  40e994:	cbnz	x1, 40e9ac <ferror@plt+0xbe5c>
  40e998:	b	40e92c <ferror@plt+0xbddc>
  40e99c:	mov	w0, #0x1                   	// #1
  40e9a0:	bl	40e1a4 <ferror@plt+0xb654>
  40e9a4:	ldr	x1, [x24, #2664]
  40e9a8:	cbz	x1, 40ec04 <ferror@plt+0xc0b4>
  40e9ac:	mov	w0, #0x20                  	// #32
  40e9b0:	bl	4025a0 <putc@plt>
  40e9b4:	mov	w1, #0xa                   	// #10
  40e9b8:	mov	w0, w21
  40e9bc:	bl	403be4 <ferror@plt+0x1094>
  40e9c0:	ldrb	w28, [x0]
  40e9c4:	cbz	w28, 40ea44 <ferror@plt+0xbef4>
  40e9c8:	add	x25, x0, #0x1
  40e9cc:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e9d0:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40e9d4:	b	40e9f8 <ferror@plt+0xbea8>
  40e9d8:	mov	w0, #0x1                   	// #1
  40e9dc:	bl	40e1a4 <ferror@plt+0xb654>
  40e9e0:	ldr	x1, [x24, #2664]
  40e9e4:	cbz	x1, 40ea24 <ferror@plt+0xbed4>
  40e9e8:	and	w0, w28, #0xff
  40e9ec:	bl	4025a0 <putc@plt>
  40e9f0:	ldrb	w28, [x25], #1
  40e9f4:	cbz	w28, 40ea44 <ferror@plt+0xbef4>
  40e9f8:	ldr	x1, [x24, #2664]
  40e9fc:	cbnz	x1, 40e9e8 <ferror@plt+0xbe98>
  40ea00:	ldr	w8, [x26, #2768]
  40ea04:	cbz	w8, 40e9d8 <ferror@plt+0xbe88>
  40ea08:	ldr	x9, [x27, #2776]
  40ea0c:	sub	w8, w8, #0x1
  40ea10:	str	w8, [x26, #2768]
  40ea14:	add	x8, x9, #0x1
  40ea18:	str	x8, [x27, #2776]
  40ea1c:	strb	w28, [x9]
  40ea20:	b	40e9f0 <ferror@plt+0xbea0>
  40ea24:	ldr	x8, [x27, #2776]
  40ea28:	add	x9, x8, #0x1
  40ea2c:	str	x9, [x27, #2776]
  40ea30:	strb	w28, [x8]
  40ea34:	ldr	w8, [x26, #2768]
  40ea38:	sub	w8, w8, #0x1
  40ea3c:	str	w8, [x26, #2768]
  40ea40:	b	40e9f0 <ferror@plt+0xbea0>
  40ea44:	ldr	w8, [x23, #3576]
  40ea48:	cmp	w8, #0x0
  40ea4c:	b.le	40ea64 <ferror@plt+0xbf14>
  40ea50:	ldr	x1, [x24, #2664]
  40ea54:	cbz	x1, 40ea90 <ferror@plt+0xbf40>
  40ea58:	mov	w0, #0xa                   	// #10
  40ea5c:	bl	4025a0 <putc@plt>
  40ea60:	b	40eabc <ferror@plt+0xbf6c>
  40ea64:	adrp	x25, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40ea68:	ldr	x8, [x25, #3520]
  40ea6c:	ldrb	w8, [x8]
  40ea70:	cbz	w8, 40ea50 <ferror@plt+0xbf00>
  40ea74:	ldr	x1, [x24, #2664]
  40ea78:	cbz	x1, 40ebcc <ferror@plt+0xc07c>
  40ea7c:	mov	w0, #0x20                  	// #32
  40ea80:	bl	4025a0 <putc@plt>
  40ea84:	ldr	x1, [x24, #2664]
  40ea88:	cbnz	x1, 40ecc8 <ferror@plt+0xc178>
  40ea8c:	b	40ec88 <ferror@plt+0xc138>
  40ea90:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ea94:	ldr	w8, [x25, #2768]
  40ea98:	cbz	w8, 40eb94 <ferror@plt+0xc044>
  40ea9c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40eaa0:	ldr	x10, [x9, #2776]
  40eaa4:	sub	w8, w8, #0x1
  40eaa8:	mov	w11, #0xa                   	// #10
  40eaac:	str	w8, [x25, #2768]
  40eab0:	add	x8, x10, #0x1
  40eab4:	str	x8, [x9, #2776]
  40eab8:	strb	w11, [x10]
  40eabc:	str	w21, [x23, #3576]
  40eac0:	cmp	w20, #0x1
  40eac4:	b.lt	40e5cc <ferror@plt+0xba7c>  // b.tstop
  40eac8:	add	w21, w20, #0x1
  40eacc:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ead0:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ead4:	mov	w26, #0x1                   	// #1
  40ead8:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40eadc:	b	40eaf0 <ferror@plt+0xbfa0>
  40eae0:	sub	w21, w21, #0x1
  40eae4:	cmp	w21, #0x1
  40eae8:	add	x19, x19, #0x1
  40eaec:	b.le	40e5cc <ferror@plt+0xba7c>
  40eaf0:	ldrb	w8, [x22, #2784]
  40eaf4:	tbnz	w8, #0, 40eb08 <ferror@plt+0xbfb8>
  40eaf8:	ldr	w8, [x23, #3576]
  40eafc:	strb	w26, [x22, #2784]
  40eb00:	add	w8, w8, #0x1
  40eb04:	str	w8, [x23, #3576]
  40eb08:	ldr	x1, [x24, #2664]
  40eb0c:	cbz	x1, 40eb1c <ferror@plt+0xbfcc>
  40eb10:	ldrb	w0, [x19]
  40eb14:	bl	4025a0 <putc@plt>
  40eb18:	b	40eb80 <ferror@plt+0xc030>
  40eb1c:	ldr	w8, [x25, #2768]
  40eb20:	cbz	w8, 40eb44 <ferror@plt+0xbff4>
  40eb24:	sub	w8, w8, #0x1
  40eb28:	ldr	x9, [x27, #2776]
  40eb2c:	str	w8, [x25, #2768]
  40eb30:	ldrb	w8, [x19]
  40eb34:	add	x10, x9, #0x1
  40eb38:	str	x10, [x27, #2776]
  40eb3c:	strb	w8, [x9]
  40eb40:	b	40eb80 <ferror@plt+0xc030>
  40eb44:	ldrb	w20, [x19]
  40eb48:	mov	w0, #0x1                   	// #1
  40eb4c:	bl	40e1a4 <ferror@plt+0xb654>
  40eb50:	ldr	x1, [x24, #2664]
  40eb54:	cbz	x1, 40eb64 <ferror@plt+0xc014>
  40eb58:	mov	w0, w20
  40eb5c:	bl	4025a0 <putc@plt>
  40eb60:	b	40eb80 <ferror@plt+0xc030>
  40eb64:	ldr	x8, [x27, #2776]
  40eb68:	add	x9, x8, #0x1
  40eb6c:	str	x9, [x27, #2776]
  40eb70:	strb	w20, [x8]
  40eb74:	ldr	w8, [x25, #2768]
  40eb78:	sub	w8, w8, #0x1
  40eb7c:	str	w8, [x25, #2768]
  40eb80:	ldrb	w8, [x19]
  40eb84:	cmp	w8, #0xa
  40eb88:	b.ne	40eae0 <ferror@plt+0xbf90>  // b.any
  40eb8c:	strb	wzr, [x22, #2784]
  40eb90:	b	40eae0 <ferror@plt+0xbf90>
  40eb94:	mov	w0, #0x1                   	// #1
  40eb98:	bl	40e1a4 <ferror@plt+0xb654>
  40eb9c:	ldr	x1, [x24, #2664]
  40eba0:	cbnz	x1, 40ea58 <ferror@plt+0xbf08>
  40eba4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40eba8:	ldr	x9, [x8, #2776]
  40ebac:	mov	w10, #0xa                   	// #10
  40ebb0:	add	x11, x9, #0x1
  40ebb4:	str	x11, [x8, #2776]
  40ebb8:	strb	w10, [x9]
  40ebbc:	ldr	w8, [x25, #2768]
  40ebc0:	sub	w8, w8, #0x1
  40ebc4:	str	w8, [x25, #2768]
  40ebc8:	b	40eabc <ferror@plt+0xbf6c>
  40ebcc:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ebd0:	ldr	w8, [x26, #2768]
  40ebd4:	cbz	w8, 40ec4c <ferror@plt+0xc0fc>
  40ebd8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ebdc:	ldr	x10, [x9, #2776]
  40ebe0:	sub	w8, w8, #0x1
  40ebe4:	mov	w11, #0x20                  	// #32
  40ebe8:	str	w8, [x26, #2768]
  40ebec:	add	x8, x10, #0x1
  40ebf0:	str	x8, [x9, #2776]
  40ebf4:	strb	w11, [x10]
  40ebf8:	ldr	x1, [x24, #2664]
  40ebfc:	cbnz	x1, 40ecc8 <ferror@plt+0xc178>
  40ec00:	b	40ec88 <ferror@plt+0xc138>
  40ec04:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ec08:	ldr	x9, [x8, #2776]
  40ec0c:	mov	w10, #0x20                  	// #32
  40ec10:	add	x11, x9, #0x1
  40ec14:	str	x11, [x8, #2776]
  40ec18:	strb	w10, [x9]
  40ec1c:	ldr	w8, [x25, #2768]
  40ec20:	sub	w8, w8, #0x1
  40ec24:	str	w8, [x25, #2768]
  40ec28:	b	40e9b4 <ferror@plt+0xbe64>
  40ec2c:	ldrb	w20, [x19]
  40ec30:	mov	w0, #0x1                   	// #1
  40ec34:	bl	40e1a4 <ferror@plt+0xb654>
  40ec38:	ldr	x1, [x22, #2664]
  40ec3c:	cbz	x1, 40ede4 <ferror@plt+0xc294>
  40ec40:	mov	w0, w20
  40ec44:	bl	4025a0 <putc@plt>
  40ec48:	b	40ee04 <ferror@plt+0xc2b4>
  40ec4c:	mov	w0, #0x1                   	// #1
  40ec50:	bl	40e1a4 <ferror@plt+0xb654>
  40ec54:	ldr	x1, [x24, #2664]
  40ec58:	cbnz	x1, 40ea7c <ferror@plt+0xbf2c>
  40ec5c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ec60:	ldr	x9, [x8, #2776]
  40ec64:	mov	w10, #0x20                  	// #32
  40ec68:	add	x11, x9, #0x1
  40ec6c:	str	x11, [x8, #2776]
  40ec70:	strb	w10, [x9]
  40ec74:	ldr	w8, [x26, #2768]
  40ec78:	sub	w8, w8, #0x1
  40ec7c:	str	w8, [x26, #2768]
  40ec80:	ldr	x1, [x24, #2664]
  40ec84:	cbnz	x1, 40ecc8 <ferror@plt+0xc178>
  40ec88:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ec8c:	ldr	w8, [x26, #2768]
  40ec90:	cbz	w8, 40ecb8 <ferror@plt+0xc168>
  40ec94:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ec98:	ldr	x10, [x9, #2776]
  40ec9c:	sub	w8, w8, #0x1
  40eca0:	mov	w11, #0x22                  	// #34
  40eca4:	str	w8, [x26, #2768]
  40eca8:	add	x8, x10, #0x1
  40ecac:	str	x8, [x9, #2776]
  40ecb0:	strb	w11, [x10]
  40ecb4:	b	40ecd0 <ferror@plt+0xc180>
  40ecb8:	mov	w0, #0x1                   	// #1
  40ecbc:	bl	40e1a4 <ferror@plt+0xb654>
  40ecc0:	ldr	x1, [x24, #2664]
  40ecc4:	cbz	x1, 40f1ec <ferror@plt+0xc69c>
  40ecc8:	mov	w0, #0x22                  	// #34
  40eccc:	bl	4025a0 <putc@plt>
  40ecd0:	ldr	x9, [x25, #3520]
  40ecd4:	ldr	x1, [x24, #2664]
  40ecd8:	ldrb	w28, [x9]
  40ecdc:	cmp	x1, #0x0
  40ece0:	cset	w8, ne  // ne = any
  40ece4:	cbz	w28, 40ed6c <ferror@plt+0xc21c>
  40ece8:	add	x25, x9, #0x1
  40ecec:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ecf0:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ecf4:	b	40ed24 <ferror@plt+0xc1d4>
  40ecf8:	mov	w0, #0x1                   	// #1
  40ecfc:	bl	40e1a4 <ferror@plt+0xb654>
  40ed00:	ldr	x1, [x24, #2664]
  40ed04:	cbz	x1, 40ed4c <ferror@plt+0xc1fc>
  40ed08:	and	w0, w28, #0xff
  40ed0c:	bl	4025a0 <putc@plt>
  40ed10:	ldrb	w28, [x25], #1
  40ed14:	ldr	x1, [x24, #2664]
  40ed18:	cmp	x1, #0x0
  40ed1c:	cset	w8, ne  // ne = any
  40ed20:	cbz	w28, 40ed6c <ferror@plt+0xc21c>
  40ed24:	tbnz	w8, #0, 40ed08 <ferror@plt+0xc1b8>
  40ed28:	ldr	w8, [x26, #2768]
  40ed2c:	cbz	w8, 40ecf8 <ferror@plt+0xc1a8>
  40ed30:	ldr	x9, [x27, #2776]
  40ed34:	sub	w8, w8, #0x1
  40ed38:	str	w8, [x26, #2768]
  40ed3c:	add	x8, x9, #0x1
  40ed40:	str	x8, [x27, #2776]
  40ed44:	strb	w28, [x9]
  40ed48:	b	40ed10 <ferror@plt+0xc1c0>
  40ed4c:	ldr	x8, [x27, #2776]
  40ed50:	add	x9, x8, #0x1
  40ed54:	str	x9, [x27, #2776]
  40ed58:	strb	w28, [x8]
  40ed5c:	ldr	w8, [x26, #2768]
  40ed60:	sub	w8, w8, #0x1
  40ed64:	str	w8, [x26, #2768]
  40ed68:	b	40ed10 <ferror@plt+0xc1c0>
  40ed6c:	cbz	w8, 40ed7c <ferror@plt+0xc22c>
  40ed70:	mov	w0, #0x22                  	// #34
  40ed74:	bl	4025a0 <putc@plt>
  40ed78:	b	40ea50 <ferror@plt+0xbf00>
  40ed7c:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ed80:	ldr	w8, [x25, #2768]
  40ed84:	cbz	w8, 40edac <ferror@plt+0xc25c>
  40ed88:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ed8c:	ldr	x10, [x9, #2776]
  40ed90:	sub	w8, w8, #0x1
  40ed94:	mov	w11, #0x22                  	// #34
  40ed98:	str	w8, [x25, #2768]
  40ed9c:	add	x8, x10, #0x1
  40eda0:	str	x8, [x9, #2776]
  40eda4:	strb	w11, [x10]
  40eda8:	b	40ea50 <ferror@plt+0xbf00>
  40edac:	mov	w0, #0x1                   	// #1
  40edb0:	bl	40e1a4 <ferror@plt+0xb654>
  40edb4:	ldr	x1, [x24, #2664]
  40edb8:	cbnz	x1, 40ed70 <ferror@plt+0xc220>
  40edbc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40edc0:	ldr	x9, [x8, #2776]
  40edc4:	mov	w10, #0x22                  	// #34
  40edc8:	add	x11, x9, #0x1
  40edcc:	str	x11, [x8, #2776]
  40edd0:	strb	w10, [x9]
  40edd4:	ldr	w8, [x25, #2768]
  40edd8:	sub	w8, w8, #0x1
  40eddc:	str	w8, [x25, #2768]
  40ede0:	b	40ea50 <ferror@plt+0xbf00>
  40ede4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ede8:	ldr	x9, [x8, #2776]
  40edec:	add	x10, x9, #0x1
  40edf0:	str	x10, [x8, #2776]
  40edf4:	strb	w20, [x9]
  40edf8:	ldr	w8, [x21, #2768]
  40edfc:	sub	w8, w8, #0x1
  40ee00:	str	w8, [x21, #2768]
  40ee04:	add	x19, x19, #0x1
  40ee08:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ee0c:	ldr	x1, [x22, #2664]
  40ee10:	cbz	x1, 40ee20 <ferror@plt+0xc2d0>
  40ee14:	ldrb	w0, [x19]
  40ee18:	bl	4025a0 <putc@plt>
  40ee1c:	b	40ee90 <ferror@plt+0xc340>
  40ee20:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ee24:	ldr	w8, [x21, #2768]
  40ee28:	cbz	w8, 40ee50 <ferror@plt+0xc300>
  40ee2c:	sub	w8, w8, #0x1
  40ee30:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ee34:	ldr	x10, [x9, #2776]
  40ee38:	str	w8, [x21, #2768]
  40ee3c:	ldrb	w8, [x19]
  40ee40:	add	x11, x10, #0x1
  40ee44:	str	x11, [x9, #2776]
  40ee48:	strb	w8, [x10]
  40ee4c:	b	40ee90 <ferror@plt+0xc340>
  40ee50:	ldrb	w20, [x19]
  40ee54:	mov	w0, #0x1                   	// #1
  40ee58:	bl	40e1a4 <ferror@plt+0xb654>
  40ee5c:	ldr	x1, [x22, #2664]
  40ee60:	cbz	x1, 40ee70 <ferror@plt+0xc320>
  40ee64:	mov	w0, w20
  40ee68:	bl	4025a0 <putc@plt>
  40ee6c:	b	40ee90 <ferror@plt+0xc340>
  40ee70:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ee74:	ldr	x9, [x8, #2776]
  40ee78:	add	x10, x9, #0x1
  40ee7c:	str	x10, [x8, #2776]
  40ee80:	strb	w20, [x9]
  40ee84:	ldr	w8, [x21, #2768]
  40ee88:	sub	w8, w8, #0x1
  40ee8c:	str	w8, [x21, #2768]
  40ee90:	add	x19, x19, #0x1
  40ee94:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ee98:	ldr	x1, [x22, #2664]
  40ee9c:	cbz	x1, 40eeac <ferror@plt+0xc35c>
  40eea0:	ldrb	w0, [x19]
  40eea4:	bl	4025a0 <putc@plt>
  40eea8:	b	40ef1c <ferror@plt+0xc3cc>
  40eeac:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40eeb0:	ldr	w8, [x21, #2768]
  40eeb4:	cbz	w8, 40eedc <ferror@plt+0xc38c>
  40eeb8:	sub	w8, w8, #0x1
  40eebc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40eec0:	ldr	x10, [x9, #2776]
  40eec4:	str	w8, [x21, #2768]
  40eec8:	ldrb	w8, [x19]
  40eecc:	add	x11, x10, #0x1
  40eed0:	str	x11, [x9, #2776]
  40eed4:	strb	w8, [x10]
  40eed8:	b	40ef1c <ferror@plt+0xc3cc>
  40eedc:	ldrb	w20, [x19]
  40eee0:	mov	w0, #0x1                   	// #1
  40eee4:	bl	40e1a4 <ferror@plt+0xb654>
  40eee8:	ldr	x1, [x22, #2664]
  40eeec:	cbz	x1, 40eefc <ferror@plt+0xc3ac>
  40eef0:	mov	w0, w20
  40eef4:	bl	4025a0 <putc@plt>
  40eef8:	b	40ef1c <ferror@plt+0xc3cc>
  40eefc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ef00:	ldr	x9, [x8, #2776]
  40ef04:	add	x10, x9, #0x1
  40ef08:	str	x10, [x8, #2776]
  40ef0c:	strb	w20, [x9]
  40ef10:	ldr	w8, [x21, #2768]
  40ef14:	sub	w8, w8, #0x1
  40ef18:	str	w8, [x21, #2768]
  40ef1c:	add	x19, x19, #0x1
  40ef20:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ef24:	ldr	x1, [x22, #2664]
  40ef28:	cbz	x1, 40ef38 <ferror@plt+0xc3e8>
  40ef2c:	ldrb	w0, [x19]
  40ef30:	bl	4025a0 <putc@plt>
  40ef34:	b	40efa8 <ferror@plt+0xc458>
  40ef38:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ef3c:	ldr	w8, [x21, #2768]
  40ef40:	cbz	w8, 40ef68 <ferror@plt+0xc418>
  40ef44:	sub	w8, w8, #0x1
  40ef48:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ef4c:	ldr	x10, [x9, #2776]
  40ef50:	str	w8, [x21, #2768]
  40ef54:	ldrb	w8, [x19]
  40ef58:	add	x11, x10, #0x1
  40ef5c:	str	x11, [x9, #2776]
  40ef60:	strb	w8, [x10]
  40ef64:	b	40efa8 <ferror@plt+0xc458>
  40ef68:	ldrb	w20, [x19]
  40ef6c:	mov	w0, #0x1                   	// #1
  40ef70:	bl	40e1a4 <ferror@plt+0xb654>
  40ef74:	ldr	x1, [x22, #2664]
  40ef78:	cbz	x1, 40ef88 <ferror@plt+0xc438>
  40ef7c:	mov	w0, w20
  40ef80:	bl	4025a0 <putc@plt>
  40ef84:	b	40efa8 <ferror@plt+0xc458>
  40ef88:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ef8c:	ldr	x9, [x8, #2776]
  40ef90:	add	x10, x9, #0x1
  40ef94:	str	x10, [x8, #2776]
  40ef98:	strb	w20, [x9]
  40ef9c:	ldr	w8, [x21, #2768]
  40efa0:	sub	w8, w8, #0x1
  40efa4:	str	w8, [x21, #2768]
  40efa8:	add	x19, x19, #0x1
  40efac:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40efb0:	ldr	x1, [x22, #2664]
  40efb4:	cbz	x1, 40efc4 <ferror@plt+0xc474>
  40efb8:	ldrb	w0, [x19]
  40efbc:	bl	4025a0 <putc@plt>
  40efc0:	b	40f034 <ferror@plt+0xc4e4>
  40efc4:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40efc8:	ldr	w8, [x21, #2768]
  40efcc:	cbz	w8, 40eff4 <ferror@plt+0xc4a4>
  40efd0:	sub	w8, w8, #0x1
  40efd4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40efd8:	ldr	x10, [x9, #2776]
  40efdc:	str	w8, [x21, #2768]
  40efe0:	ldrb	w8, [x19]
  40efe4:	add	x11, x10, #0x1
  40efe8:	str	x11, [x9, #2776]
  40efec:	strb	w8, [x10]
  40eff0:	b	40f034 <ferror@plt+0xc4e4>
  40eff4:	ldrb	w20, [x19]
  40eff8:	mov	w0, #0x1                   	// #1
  40effc:	bl	40e1a4 <ferror@plt+0xb654>
  40f000:	ldr	x1, [x22, #2664]
  40f004:	cbz	x1, 40f014 <ferror@plt+0xc4c4>
  40f008:	mov	w0, w20
  40f00c:	bl	4025a0 <putc@plt>
  40f010:	b	40f034 <ferror@plt+0xc4e4>
  40f014:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f018:	ldr	x9, [x8, #2776]
  40f01c:	add	x10, x9, #0x1
  40f020:	str	x10, [x8, #2776]
  40f024:	strb	w20, [x9]
  40f028:	ldr	w8, [x21, #2768]
  40f02c:	sub	w8, w8, #0x1
  40f030:	str	w8, [x21, #2768]
  40f034:	add	x19, x19, #0x1
  40f038:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f03c:	ldr	x1, [x22, #2664]
  40f040:	cbz	x1, 40f050 <ferror@plt+0xc500>
  40f044:	ldrb	w0, [x19]
  40f048:	bl	4025a0 <putc@plt>
  40f04c:	b	40f0c0 <ferror@plt+0xc570>
  40f050:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f054:	ldr	w8, [x21, #2768]
  40f058:	cbz	w8, 40f080 <ferror@plt+0xc530>
  40f05c:	sub	w8, w8, #0x1
  40f060:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f064:	ldr	x10, [x9, #2776]
  40f068:	str	w8, [x21, #2768]
  40f06c:	ldrb	w8, [x19]
  40f070:	add	x11, x10, #0x1
  40f074:	str	x11, [x9, #2776]
  40f078:	strb	w8, [x10]
  40f07c:	b	40f0c0 <ferror@plt+0xc570>
  40f080:	ldrb	w20, [x19]
  40f084:	mov	w0, #0x1                   	// #1
  40f088:	bl	40e1a4 <ferror@plt+0xb654>
  40f08c:	ldr	x1, [x22, #2664]
  40f090:	cbz	x1, 40f0a0 <ferror@plt+0xc550>
  40f094:	mov	w0, w20
  40f098:	bl	4025a0 <putc@plt>
  40f09c:	b	40f0c0 <ferror@plt+0xc570>
  40f0a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f0a4:	ldr	x9, [x8, #2776]
  40f0a8:	add	x10, x9, #0x1
  40f0ac:	str	x10, [x8, #2776]
  40f0b0:	strb	w20, [x9]
  40f0b4:	ldr	w8, [x21, #2768]
  40f0b8:	sub	w8, w8, #0x1
  40f0bc:	str	w8, [x21, #2768]
  40f0c0:	add	x19, x19, #0x1
  40f0c4:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f0c8:	ldr	x1, [x22, #2664]
  40f0cc:	cbz	x1, 40f0dc <ferror@plt+0xc58c>
  40f0d0:	ldrb	w0, [x19]
  40f0d4:	bl	4025a0 <putc@plt>
  40f0d8:	b	40f14c <ferror@plt+0xc5fc>
  40f0dc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f0e0:	ldr	w8, [x21, #2768]
  40f0e4:	cbz	w8, 40f10c <ferror@plt+0xc5bc>
  40f0e8:	sub	w8, w8, #0x1
  40f0ec:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f0f0:	ldr	x10, [x9, #2776]
  40f0f4:	str	w8, [x21, #2768]
  40f0f8:	ldrb	w8, [x19]
  40f0fc:	add	x11, x10, #0x1
  40f100:	str	x11, [x9, #2776]
  40f104:	strb	w8, [x10]
  40f108:	b	40f14c <ferror@plt+0xc5fc>
  40f10c:	ldrb	w20, [x19]
  40f110:	mov	w0, #0x1                   	// #1
  40f114:	bl	40e1a4 <ferror@plt+0xb654>
  40f118:	ldr	x1, [x22, #2664]
  40f11c:	cbz	x1, 40f12c <ferror@plt+0xc5dc>
  40f120:	mov	w0, w20
  40f124:	bl	4025a0 <putc@plt>
  40f128:	b	40f14c <ferror@plt+0xc5fc>
  40f12c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f130:	ldr	x9, [x8, #2776]
  40f134:	add	x10, x9, #0x1
  40f138:	str	x10, [x8, #2776]
  40f13c:	strb	w20, [x9]
  40f140:	ldr	w8, [x21, #2768]
  40f144:	sub	w8, w8, #0x1
  40f148:	str	w8, [x21, #2768]
  40f14c:	add	x19, x19, #0x1
  40f150:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f154:	ldr	x1, [x21, #2664]
  40f158:	cbz	x1, 40f17c <ferror@plt+0xc62c>
  40f15c:	ldrb	w0, [x19]
  40f160:	ldp	x20, x19, [sp, #80]
  40f164:	ldp	x22, x21, [sp, #64]
  40f168:	ldp	x24, x23, [sp, #48]
  40f16c:	ldp	x26, x25, [sp, #32]
  40f170:	ldp	x28, x27, [sp, #16]
  40f174:	ldp	x29, x30, [sp], #96
  40f178:	b	4025a0 <putc@plt>
  40f17c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f180:	ldr	w8, [x20, #2768]
  40f184:	cbz	w8, 40f1ac <ferror@plt+0xc65c>
  40f188:	sub	w8, w8, #0x1
  40f18c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f190:	ldr	x10, [x9, #2776]
  40f194:	str	w8, [x20, #2768]
  40f198:	ldrb	w8, [x19]
  40f19c:	add	x11, x10, #0x1
  40f1a0:	str	x11, [x9, #2776]
  40f1a4:	strb	w8, [x10]
  40f1a8:	b	40e5cc <ferror@plt+0xba7c>
  40f1ac:	ldrb	w19, [x19]
  40f1b0:	mov	w0, #0x1                   	// #1
  40f1b4:	bl	40e1a4 <ferror@plt+0xb654>
  40f1b8:	ldr	x1, [x21, #2664]
  40f1bc:	cbz	x1, 40f1c8 <ferror@plt+0xc678>
  40f1c0:	mov	w0, w19
  40f1c4:	b	40f160 <ferror@plt+0xc610>
  40f1c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f1cc:	ldr	x9, [x8, #2776]
  40f1d0:	add	x10, x9, #0x1
  40f1d4:	str	x10, [x8, #2776]
  40f1d8:	strb	w19, [x9]
  40f1dc:	ldr	w8, [x20, #2768]
  40f1e0:	sub	w8, w8, #0x1
  40f1e4:	str	w8, [x20, #2768]
  40f1e8:	b	40e5cc <ferror@plt+0xba7c>
  40f1ec:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f1f0:	ldr	x9, [x8, #2776]
  40f1f4:	mov	w10, #0x22                  	// #34
  40f1f8:	add	x11, x9, #0x1
  40f1fc:	str	x11, [x8, #2776]
  40f200:	strb	w10, [x9]
  40f204:	ldr	w8, [x26, #2768]
  40f208:	sub	w8, w8, #0x1
  40f20c:	str	w8, [x26, #2768]
  40f210:	b	40ecd0 <ferror@plt+0xc180>
  40f214:	sub	sp, sp, #0x60
  40f218:	stp	x24, x23, [sp, #48]
  40f21c:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40f220:	ldr	w8, [x23, #3580]
  40f224:	stp	x29, x30, [sp, #16]
  40f228:	add	x29, sp, #0x10
  40f22c:	stp	x26, x25, [sp, #32]
  40f230:	cmp	w8, w0
  40f234:	stp	x22, x21, [sp, #64]
  40f238:	stp	x20, x19, [sp, #80]
  40f23c:	stur	w0, [x29, #-4]
  40f240:	b.eq	40f470 <ferror@plt+0xc920>  // b.none
  40f244:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f248:	ldr	x1, [x20, #2656]
  40f24c:	mov	w19, w0
  40f250:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f254:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f258:	cbz	x1, 40f284 <ferror@plt+0xc734>
  40f25c:	ldr	w8, [x1, #12]
  40f260:	cbz	w8, 40f2e8 <ferror@plt+0xc798>
  40f264:	ldr	w9, [x22, #2768]
  40f268:	sub	w8, w8, w9
  40f26c:	str	w8, [x1, #16]
  40f270:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f274:	str	xzr, [x20, #2656]
  40f278:	str	xzr, [x21, #2776]
  40f27c:	str	xzr, [x8, #2664]
  40f280:	str	wzr, [x22, #2768]
  40f284:	str	w19, [x23, #3580]
  40f288:	tbnz	w19, #31, 40f470 <ferror@plt+0xc920>
  40f28c:	cbz	w19, 40f350 <ferror@plt+0xc800>
  40f290:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f294:	ldr	x0, [x23, #2624]
  40f298:	adrp	x1, 40f000 <ferror@plt+0xc4b0>
  40f29c:	add	x1, x1, #0x560
  40f2a0:	sub	x2, x29, #0x4
  40f2a4:	ldr	x8, [x0]
  40f2a8:	mov	x3, sp
  40f2ac:	ldr	x8, [x8, #24]
  40f2b0:	blr	x8
  40f2b4:	tbz	w0, #0, 40f2d0 <ferror@plt+0xc780>
  40f2b8:	ldr	x19, [sp]
  40f2bc:	ldur	w9, [x29, #-4]
  40f2c0:	ldr	w8, [x19, #8]
  40f2c4:	cmp	w8, w9
  40f2c8:	b.ne	40f2d0 <ferror@plt+0xc780>  // b.any
  40f2cc:	cbnz	x19, 40f410 <ferror@plt+0xc8c0>
  40f2d0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f2d4:	ldr	x19, [x8, #2792]
  40f2d8:	cbz	x19, 40f35c <ferror@plt+0xc80c>
  40f2dc:	ldr	x9, [x19]
  40f2e0:	str	x9, [x8, #2792]
  40f2e4:	b	40f3ec <ferror@plt+0xc89c>
  40f2e8:	ldr	x24, [x1]
  40f2ec:	ldr	w8, [x1, #16]
  40f2f0:	cbz	x24, 40f48c <ferror@plt+0xc93c>
  40f2f4:	cbz	w8, 40f270 <ferror@plt+0xc720>
  40f2f8:	str	xzr, [x1]
  40f2fc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f300:	ldr	w25, [x1, #8]
  40f304:	ldr	w8, [x8, #2760]
  40f308:	cmp	w8, w25
  40f30c:	b.eq	40f270 <ferror@plt+0xc720>  // b.none
  40f310:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f314:	ldr	w9, [x9, #2764]
  40f318:	cmp	w9, w25
  40f31c:	b.eq	40f270 <ferror@plt+0xc720>  // b.none
  40f320:	adrp	x10, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f324:	ldrb	w10, [x10, #2844]
  40f328:	cmp	w10, #0x1
  40f32c:	b.ne	40f4c0 <ferror@plt+0xc970>  // b.any
  40f330:	adrp	x26, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f334:	add	x26, x26, #0xaf0
  40f338:	cbz	w8, 40f4d8 <ferror@plt+0xc988>
  40f33c:	ldr	x0, [x26]
  40f340:	bl	412000 <ferror@plt+0xf4b0>
  40f344:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f348:	add	x8, x8, #0xac8
  40f34c:	b	40f4f4 <ferror@plt+0xc9a4>
  40f350:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f354:	add	x19, x19, #0xa48
  40f358:	b	40f410 <ferror@plt+0xc8c0>
  40f35c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f360:	add	x8, x8, #0xa88
  40f364:	ldp	x8, x9, [x8]
  40f368:	sub	x9, x9, x8
  40f36c:	cmp	x9, #0x17
  40f370:	b.hi	40f38c <ferror@plt+0xc83c>  // b.pmore
  40f374:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f378:	add	x19, x19, #0xa70
  40f37c:	mov	w1, #0x18                  	// #24
  40f380:	mov	x0, x19
  40f384:	bl	418058 <_obstack_newchunk@@Base>
  40f388:	ldr	x8, [x19, #24]
  40f38c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f390:	add	x9, x9, #0xa80
  40f394:	ldr	x19, [x9]
  40f398:	add	x8, x8, #0x18
  40f39c:	str	x8, [x9, #8]
  40f3a0:	cmp	x8, x19
  40f3a4:	b.ne	40f3b8 <ferror@plt+0xc868>  // b.any
  40f3a8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f3ac:	ldrb	w10, [x9, #2752]
  40f3b0:	orr	w10, w10, #0x2
  40f3b4:	strb	w10, [x9, #2752]
  40f3b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f3bc:	add	x9, x9, #0xa78
  40f3c0:	ldr	x10, [x9, #40]
  40f3c4:	ldr	x11, [x9]
  40f3c8:	ldr	x12, [x9, #24]
  40f3cc:	add	x8, x10, x8
  40f3d0:	bic	x8, x8, x10
  40f3d4:	sub	x13, x12, x11
  40f3d8:	sub	x10, x8, x11
  40f3dc:	cmp	x10, x13
  40f3e0:	csel	x8, x12, x8, hi  // hi = pmore
  40f3e4:	stp	x8, x8, [x9, #8]
  40f3e8:	stp	wzr, wzr, [x19, #12]
  40f3ec:	str	xzr, [x19]
  40f3f0:	ldur	w8, [x29, #-4]
  40f3f4:	mov	x1, x19
  40f3f8:	str	w8, [x19, #8]
  40f3fc:	ldr	x0, [x23, #2624]
  40f400:	ldr	x8, [x0]
  40f404:	ldr	x8, [x8, #32]
  40f408:	blr	x8
  40f40c:	tbnz	w0, #31, 40f51c <ferror@plt+0xc9cc>
  40f410:	str	x19, [x20, #2656]
  40f414:	ldr	w8, [x19, #12]
  40f418:	cbz	w8, 40f438 <ferror@plt+0xc8e8>
  40f41c:	ldr	x9, [x19]
  40f420:	ldrsw	x10, [x19, #16]
  40f424:	add	x9, x9, x10
  40f428:	sub	w8, w8, w10
  40f42c:	str	x9, [x21, #2776]
  40f430:	str	w8, [x22, #2768]
  40f434:	b	40f464 <ferror@plt+0xc914>
  40f438:	ldr	x0, [x19]
  40f43c:	cbnz	x0, 40f45c <ferror@plt+0xc90c>
  40f440:	ldr	w8, [x19, #16]
  40f444:	cbz	w8, 40f45c <ferror@plt+0xc90c>
  40f448:	ldr	w0, [x19, #8]
  40f44c:	mov	w1, wzr
  40f450:	bl	40f574 <ferror@plt+0xca24>
  40f454:	ldr	x8, [x20, #2656]
  40f458:	str	x0, [x8]
  40f45c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f460:	str	x0, [x8, #2664]
  40f464:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40f468:	mov	w9, #0xffffffff            	// #-1
  40f46c:	str	w9, [x8, #3576]
  40f470:	ldp	x20, x19, [sp, #80]
  40f474:	ldp	x22, x21, [sp, #64]
  40f478:	ldp	x24, x23, [sp, #48]
  40f47c:	ldp	x26, x25, [sp, #32]
  40f480:	ldp	x29, x30, [sp, #16]
  40f484:	add	sp, sp, #0x60
  40f488:	ret
  40f48c:	cbnz	w8, 40f520 <ferror@plt+0xc9d0>
  40f490:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f494:	ldr	x0, [x8, #2624]
  40f498:	ldr	x8, [x0]
  40f49c:	ldr	x8, [x8, #40]
  40f4a0:	blr	x8
  40f4a4:	tbz	w0, #0, 40f540 <ferror@plt+0xc9f0>
  40f4a8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f4ac:	ldr	x9, [x20, #2656]
  40f4b0:	ldr	x10, [x8, #2792]
  40f4b4:	str	x10, [x9]
  40f4b8:	str	x9, [x8, #2792]
  40f4bc:	b	40f270 <ferror@plt+0xc720>
  40f4c0:	adrp	x26, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f4c4:	add	x26, x26, #0xaf8
  40f4c8:	cbz	w9, 40f4e8 <ferror@plt+0xc998>
  40f4cc:	ldr	x0, [x26]
  40f4d0:	bl	412000 <ferror@plt+0xf4b0>
  40f4d4:	b	40f4ec <ferror@plt+0xc99c>
  40f4d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f4dc:	mov	w0, wzr
  40f4e0:	add	x8, x8, #0xac8
  40f4e4:	b	40f4f4 <ferror@plt+0xc9a4>
  40f4e8:	mov	w0, wzr
  40f4ec:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f4f0:	add	x8, x8, #0xacc
  40f4f4:	str	x24, [x26]
  40f4f8:	str	w25, [x8]
  40f4fc:	cbz	w0, 40f270 <ferror@plt+0xc720>
  40f500:	bl	402ac0 <__errno_location@plt>
  40f504:	ldr	w1, [x0]
  40f508:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f50c:	add	x2, x2, #0x463
  40f510:	mov	w0, wzr
  40f514:	bl	402c5c <ferror@plt+0x10c>
  40f518:	b	40f270 <ferror@plt+0xc720>
  40f51c:	bl	41761c <ferror@plt+0x14acc>
  40f520:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f524:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f528:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f52c:	add	x0, x0, #0x423
  40f530:	add	x1, x1, #0x43b
  40f534:	add	x3, x3, #0x444
  40f538:	mov	w2, #0x2dd                 	// #733
  40f53c:	bl	402ab0 <__assert_fail@plt>
  40f540:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f544:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f548:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f54c:	add	x0, x0, #0x45d
  40f550:	add	x1, x1, #0x43b
  40f554:	add	x3, x3, #0x444
  40f558:	mov	w2, #0x2df                 	// #735
  40f55c:	bl	402ab0 <__assert_fail@plt>
  40f560:	ldr	w8, [x0, #8]
  40f564:	ldr	w9, [x1]
  40f568:	cmp	w8, w9
  40f56c:	cset	w0, ge  // ge = tcont
  40f570:	ret
  40f574:	stp	x29, x30, [sp, #-32]!
  40f578:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f57c:	ldr	w8, [x8, #2760]
  40f580:	stp	x20, x19, [sp, #16]
  40f584:	mov	w20, w1
  40f588:	mov	x29, sp
  40f58c:	cmp	w8, w0
  40f590:	b.ne	40f5d8 <ferror@plt+0xca88>  // b.any
  40f594:	adrp	x19, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f598:	tbz	w20, #0, 40f5c8 <ferror@plt+0xca78>
  40f59c:	ldr	x0, [x19, #2800]
  40f5a0:	mov	x1, xzr
  40f5a4:	mov	w2, wzr
  40f5a8:	bl	417df8 <ferror@plt+0x152a8>
  40f5ac:	cbz	w0, 40f5c8 <ferror@plt+0xca78>
  40f5b0:	bl	402ac0 <__errno_location@plt>
  40f5b4:	ldr	w1, [x0]
  40f5b8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f5bc:	add	x2, x2, #0x5d7
  40f5c0:	mov	w0, #0x1                   	// #1
  40f5c4:	bl	402c5c <ferror@plt+0x10c>
  40f5c8:	ldr	x19, [x19, #2800]
  40f5cc:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f5d0:	strb	wzr, [x8, #2844]
  40f5d4:	b	40f68c <ferror@plt+0xcb3c>
  40f5d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f5dc:	ldr	w8, [x8, #2764]
  40f5e0:	cmp	w8, w0
  40f5e4:	b.ne	40f630 <ferror@plt+0xcae0>  // b.any
  40f5e8:	adrp	x19, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f5ec:	tbz	w20, #0, 40f61c <ferror@plt+0xcacc>
  40f5f0:	ldr	x0, [x19, #2808]
  40f5f4:	mov	x1, xzr
  40f5f8:	mov	w2, wzr
  40f5fc:	bl	417df8 <ferror@plt+0x152a8>
  40f600:	cbz	w0, 40f61c <ferror@plt+0xcacc>
  40f604:	bl	402ac0 <__errno_location@plt>
  40f608:	ldr	w1, [x0]
  40f60c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f610:	add	x2, x2, #0x5d7
  40f614:	mov	w0, #0x1                   	// #1
  40f618:	bl	402c5c <ferror@plt+0x10c>
  40f61c:	ldr	x19, [x19, #2808]
  40f620:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f624:	mov	w9, #0x1                   	// #1
  40f628:	strb	w9, [x8, #2844]
  40f62c:	b	40f68c <ferror@plt+0xcb3c>
  40f630:	bl	40fe68 <ferror@plt+0xd318>
  40f634:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f638:	add	x1, x1, #0x5f4
  40f63c:	bl	411dec <ferror@plt+0xf29c>
  40f640:	mov	x19, x0
  40f644:	cbz	x0, 40f674 <ferror@plt+0xcb24>
  40f648:	mov	x0, x19
  40f64c:	bl	402630 <fileno@plt>
  40f650:	mov	w1, #0x1                   	// #1
  40f654:	bl	41225c <ferror@plt+0xf70c>
  40f658:	cbz	w0, 40f69c <ferror@plt+0xcb4c>
  40f65c:	bl	402ac0 <__errno_location@plt>
  40f660:	ldr	w1, [x0]
  40f664:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f668:	add	x2, x2, #0x587
  40f66c:	mov	w0, wzr
  40f670:	b	40f688 <ferror@plt+0xcb38>
  40f674:	bl	402ac0 <__errno_location@plt>
  40f678:	ldr	w1, [x0]
  40f67c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f680:	add	x2, x2, #0x550
  40f684:	mov	w0, #0x1                   	// #1
  40f688:	bl	402c5c <ferror@plt+0x10c>
  40f68c:	mov	x0, x19
  40f690:	ldp	x20, x19, [sp, #16]
  40f694:	ldp	x29, x30, [sp], #32
  40f698:	ret
  40f69c:	tbnz	w20, #0, 40f68c <ferror@plt+0xcb3c>
  40f6a0:	mov	w2, #0x2                   	// #2
  40f6a4:	mov	x0, x19
  40f6a8:	mov	x1, xzr
  40f6ac:	bl	417df8 <ferror@plt+0x152a8>
  40f6b0:	cbz	w0, 40f68c <ferror@plt+0xcb3c>
  40f6b4:	bl	402ac0 <__errno_location@plt>
  40f6b8:	ldr	w1, [x0]
  40f6bc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f6c0:	add	x2, x2, #0x5d7
  40f6c4:	b	40f684 <ferror@plt+0xcb34>
  40f6c8:	stp	x29, x30, [sp, #-48]!
  40f6cc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f6d0:	ldr	x8, [x8, #2656]
  40f6d4:	stp	x22, x21, [sp, #16]
  40f6d8:	stp	x20, x19, [sp, #32]
  40f6dc:	mov	x29, sp
  40f6e0:	cbz	x8, 40f744 <ferror@plt+0xcbf4>
  40f6e4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f6e8:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f6ec:	mov	x19, x0
  40f6f0:	add	x20, x20, #0xaf0
  40f6f4:	add	x21, x21, #0x48d
  40f6f8:	mov	w1, #0x1                   	// #1
  40f6fc:	mov	w2, #0x4000                	// #16384
  40f700:	mov	x0, x20
  40f704:	mov	x3, x19
  40f708:	bl	402920 <fread@plt>
  40f70c:	mov	x22, x0
  40f710:	mov	x0, x19
  40f714:	bl	402b50 <ferror@plt>
  40f718:	cbz	w0, 40f730 <ferror@plt+0xcbe0>
  40f71c:	bl	402ac0 <__errno_location@plt>
  40f720:	ldr	w1, [x0]
  40f724:	mov	w0, #0x1                   	// #1
  40f728:	mov	x2, x21
  40f72c:	bl	402c5c <ferror@plt+0x10c>
  40f730:	cbz	x22, 40f744 <ferror@plt+0xcbf4>
  40f734:	mov	x0, x20
  40f738:	mov	w1, w22
  40f73c:	bl	40e0c8 <ferror@plt+0xb578>
  40f740:	b	40f6f8 <ferror@plt+0xcba8>
  40f744:	ldp	x20, x19, [sp, #32]
  40f748:	ldp	x22, x21, [sp, #16]
  40f74c:	ldp	x29, x30, [sp], #48
  40f750:	ret
  40f754:	sub	sp, sp, #0x20
  40f758:	stp	x29, x30, [sp, #16]
  40f75c:	add	x29, sp, #0x10
  40f760:	cmp	w0, #0x1
  40f764:	stur	w0, [x29, #-4]
  40f768:	b.lt	40f7bc <ferror@plt+0xcc6c>  // b.tstop
  40f76c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40f770:	ldr	w8, [x8, #3580]
  40f774:	cmp	w8, w0
  40f778:	b.eq	40f7bc <ferror@plt+0xcc6c>  // b.none
  40f77c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f780:	ldr	x0, [x8, #2624]
  40f784:	adrp	x1, 40f000 <ferror@plt+0xc4b0>
  40f788:	add	x1, x1, #0x560
  40f78c:	sub	x2, x29, #0x4
  40f790:	ldr	x8, [x0]
  40f794:	mov	x3, sp
  40f798:	ldr	x8, [x8, #24]
  40f79c:	blr	x8
  40f7a0:	tbz	w0, #0, 40f7bc <ferror@plt+0xcc6c>
  40f7a4:	ldr	x0, [sp]
  40f7a8:	ldur	w9, [x29, #-4]
  40f7ac:	ldr	w8, [x0, #8]
  40f7b0:	cmp	w8, w9
  40f7b4:	b.ne	40f7bc <ferror@plt+0xcc6c>  // b.any
  40f7b8:	bl	40f7c8 <ferror@plt+0xcc78>
  40f7bc:	ldp	x29, x30, [sp, #16]
  40f7c0:	add	sp, sp, #0x20
  40f7c4:	ret
  40f7c8:	stp	x29, x30, [sp, #-80]!
  40f7cc:	stp	x24, x23, [sp, #32]
  40f7d0:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f7d4:	ldr	x8, [x24, #2656]
  40f7d8:	stp	x20, x19, [sp, #64]
  40f7dc:	mov	x19, x0
  40f7e0:	stp	x26, x25, [sp, #16]
  40f7e4:	stp	x22, x21, [sp, #48]
  40f7e8:	mov	x29, sp
  40f7ec:	cbz	x8, 40f9fc <ferror@plt+0xceac>
  40f7f0:	ldr	w9, [x19, #12]
  40f7f4:	ldr	x10, [x8]
  40f7f8:	cbz	w9, 40f820 <ferror@plt+0xccd0>
  40f7fc:	cbz	x10, 40f8a4 <ferror@plt+0xcd54>
  40f800:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f804:	ldr	w10, [x8, #2840]
  40f808:	sub	w9, w10, w9
  40f80c:	str	w9, [x8, #2840]
  40f810:	ldr	x0, [x19]
  40f814:	ldr	w1, [x19, #16]
  40f818:	bl	40e0c8 <ferror@plt+0xb578>
  40f81c:	b	40f9f0 <ferror@plt+0xcea0>
  40f820:	cbz	x10, 40f904 <ferror@plt+0xcdb4>
  40f824:	ldr	x20, [x19]
  40f828:	cbnz	x20, 40f848 <ferror@plt+0xccf8>
  40f82c:	ldr	w0, [x19, #8]
  40f830:	mov	w1, #0x1                   	// #1
  40f834:	bl	40f574 <ferror@plt+0xca24>
  40f838:	str	x0, [x19]
  40f83c:	ldr	x8, [x24, #2656]
  40f840:	mov	x20, x0
  40f844:	cbz	x8, 40f9f0 <ferror@plt+0xcea0>
  40f848:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f84c:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f850:	add	x21, x21, #0xaf0
  40f854:	add	x22, x22, #0x48d
  40f858:	mov	w1, #0x1                   	// #1
  40f85c:	mov	w2, #0x4000                	// #16384
  40f860:	mov	x0, x21
  40f864:	mov	x3, x20
  40f868:	bl	402920 <fread@plt>
  40f86c:	mov	x23, x0
  40f870:	mov	x0, x20
  40f874:	bl	402b50 <ferror@plt>
  40f878:	cbz	w0, 40f890 <ferror@plt+0xcd40>
  40f87c:	bl	402ac0 <__errno_location@plt>
  40f880:	ldr	w1, [x0]
  40f884:	mov	w0, #0x1                   	// #1
  40f888:	mov	x2, x22
  40f88c:	bl	402c5c <ferror@plt+0x10c>
  40f890:	cbz	x23, 40f9f0 <ferror@plt+0xcea0>
  40f894:	mov	x0, x21
  40f898:	mov	w1, w23
  40f89c:	bl	40e0c8 <ferror@plt+0xb578>
  40f8a0:	b	40f858 <ferror@plt+0xcd08>
  40f8a4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f8a8:	add	x9, x9, #0xa48
  40f8ac:	cmp	x8, x9
  40f8b0:	b.eq	40fbb8 <ferror@plt+0xd068>  // b.none
  40f8b4:	ldr	w9, [x8, #16]
  40f8b8:	cbnz	w9, 40fbb8 <ferror@plt+0xd068>
  40f8bc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f8c0:	ldr	x9, [x9, #2664]
  40f8c4:	cbnz	x9, 40fbb8 <ferror@plt+0xd068>
  40f8c8:	ldr	x9, [x19]
  40f8cc:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f8d0:	str	x9, [x8]
  40f8d4:	ldr	w9, [x19, #12]
  40f8d8:	str	w9, [x8, #12]
  40f8dc:	ldr	x8, [x19]
  40f8e0:	ldrsw	x9, [x19, #16]
  40f8e4:	add	x8, x8, x9
  40f8e8:	str	x8, [x10, #2776]
  40f8ec:	ldr	w8, [x19, #12]
  40f8f0:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f8f4:	sub	w8, w8, w9
  40f8f8:	str	w8, [x10, #2768]
  40f8fc:	str	xzr, [x19]
  40f900:	b	40f9f0 <ferror@plt+0xcea0>
  40f904:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f908:	add	x9, x9, #0xa48
  40f90c:	cmp	x8, x9
  40f910:	b.eq	40fbd8 <ferror@plt+0xd088>  // b.none
  40f914:	ldr	w9, [x8, #16]
  40f918:	cbnz	w9, 40fbd8 <ferror@plt+0xd088>
  40f91c:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f920:	ldr	x9, [x25, #2664]
  40f924:	cbnz	x9, 40fbd8 <ferror@plt+0xd088>
  40f928:	ldr	w22, [x19, #8]
  40f92c:	ldr	w20, [x8, #8]
  40f930:	mov	w0, w22
  40f934:	bl	40fe68 <ferror@plt+0xd318>
  40f938:	bl	4175c4 <ferror@plt+0x14a74>
  40f93c:	mov	x21, x0
  40f940:	mov	w0, w20
  40f944:	bl	40fe68 <ferror@plt+0xd318>
  40f948:	adrp	x26, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40f94c:	ldr	x8, [x26, #2816]
  40f950:	mov	x23, x0
  40f954:	mov	x1, x23
  40f958:	mov	x0, x8
  40f95c:	bl	411618 <ferror@plt+0xeac8>
  40f960:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f964:	add	x8, x8, #0xac8
  40f968:	ldr	w9, [x8]
  40f96c:	cmp	w9, w22
  40f970:	b.eq	40f988 <ferror@plt+0xce38>  // b.none
  40f974:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40f978:	add	x8, x8, #0xacc
  40f97c:	ldr	w9, [x8]
  40f980:	cmp	w9, w22
  40f984:	b.ne	40f98c <ferror@plt+0xce3c>  // b.any
  40f988:	str	w20, [x8]
  40f98c:	mov	x0, x21
  40f990:	mov	x1, x23
  40f994:	bl	4029a0 <rename@plt>
  40f998:	cbz	w0, 40f9b4 <ferror@plt+0xce64>
  40f99c:	bl	402ac0 <__errno_location@plt>
  40f9a0:	ldr	w1, [x0]
  40f9a4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40f9a8:	add	x2, x2, #0x550
  40f9ac:	mov	w0, #0x1                   	// #1
  40f9b0:	bl	402c5c <ferror@plt+0x10c>
  40f9b4:	ldr	x0, [x26, #2816]
  40f9b8:	mov	x1, x21
  40f9bc:	bl	41169c <ferror@plt+0xeb4c>
  40f9c0:	mov	x0, x21
  40f9c4:	bl	402930 <free@plt>
  40f9c8:	mov	w0, w20
  40f9cc:	mov	w1, wzr
  40f9d0:	bl	40f574 <ferror@plt+0xca24>
  40f9d4:	ldr	x8, [x24, #2656]
  40f9d8:	mov	w9, #0x1                   	// #1
  40f9dc:	str	x0, [x8]
  40f9e0:	str	w9, [x8, #16]
  40f9e4:	str	x0, [x25, #2664]
  40f9e8:	str	xzr, [x19]
  40f9ec:	str	w9, [x19, #12]
  40f9f0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40f9f4:	mov	w9, #0xffffffff            	// #-1
  40f9f8:	str	w9, [x8, #3576]
  40f9fc:	ldr	w8, [x19, #12]
  40fa00:	cbz	w8, 40fa2c <ferror@plt+0xcedc>
  40fa04:	ldr	x9, [x24, #2656]
  40fa08:	cbnz	x9, 40fa1c <ferror@plt+0xcecc>
  40fa0c:	adrp	x9, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fa10:	ldr	w10, [x9, #2840]
  40fa14:	sub	w8, w10, w8
  40fa18:	str	w8, [x9, #2840]
  40fa1c:	ldr	x0, [x19]
  40fa20:	bl	402930 <free@plt>
  40fa24:	str	wzr, [x19, #12]
  40fa28:	b	40fb74 <ferror@plt+0xd024>
  40fa2c:	ldr	x20, [x19]
  40fa30:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fa34:	cbz	x20, 40fae4 <ferror@plt+0xcf94>
  40fa38:	str	xzr, [x19]
  40fa3c:	ldr	w22, [x19, #8]
  40fa40:	ldr	w8, [x21, #2760]
  40fa44:	cmp	w8, w22
  40fa48:	b.eq	40fae4 <ferror@plt+0xcf94>  // b.none
  40fa4c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fa50:	ldr	w9, [x9, #2764]
  40fa54:	cmp	w9, w22
  40fa58:	b.eq	40fae4 <ferror@plt+0xcf94>  // b.none
  40fa5c:	adrp	x10, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fa60:	ldrb	w10, [x10, #2844]
  40fa64:	cmp	w10, #0x1
  40fa68:	b.ne	40fa8c <ferror@plt+0xcf3c>  // b.any
  40fa6c:	adrp	x23, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fa70:	add	x23, x23, #0xaf0
  40fa74:	cbz	w8, 40faa4 <ferror@plt+0xcf54>
  40fa78:	ldr	x0, [x23]
  40fa7c:	bl	412000 <ferror@plt+0xf4b0>
  40fa80:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fa84:	add	x8, x8, #0xac8
  40fa88:	b	40fac0 <ferror@plt+0xcf70>
  40fa8c:	adrp	x23, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fa90:	add	x23, x23, #0xaf8
  40fa94:	cbz	w9, 40fab4 <ferror@plt+0xcf64>
  40fa98:	ldr	x0, [x23]
  40fa9c:	bl	412000 <ferror@plt+0xf4b0>
  40faa0:	b	40fab8 <ferror@plt+0xcf68>
  40faa4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40faa8:	mov	w0, wzr
  40faac:	add	x8, x8, #0xac8
  40fab0:	b	40fac0 <ferror@plt+0xcf70>
  40fab4:	mov	w0, wzr
  40fab8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fabc:	add	x8, x8, #0xacc
  40fac0:	str	x20, [x23]
  40fac4:	str	w22, [x8]
  40fac8:	cbz	w0, 40fae4 <ferror@plt+0xcf94>
  40facc:	bl	402ac0 <__errno_location@plt>
  40fad0:	ldr	w1, [x0]
  40fad4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fad8:	add	x2, x2, #0x5ad
  40fadc:	mov	w0, wzr
  40fae0:	bl	402c5c <ferror@plt+0x10c>
  40fae4:	ldr	w20, [x19, #8]
  40fae8:	ldr	w8, [x21, #2760]
  40faec:	cmp	w8, w20
  40faf0:	b.ne	40fb10 <ferror@plt+0xcfc0>  // b.any
  40faf4:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40faf8:	ldr	x0, [x8, #2800]
  40fafc:	bl	412000 <ferror@plt+0xf4b0>
  40fb00:	cbnz	w0, 40fb5c <ferror@plt+0xd00c>
  40fb04:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fb08:	add	x8, x8, #0xac8
  40fb0c:	b	40fb38 <ferror@plt+0xcfe8>
  40fb10:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fb14:	ldr	w8, [x8, #2764]
  40fb18:	cmp	w8, w20
  40fb1c:	b.ne	40fb3c <ferror@plt+0xcfec>  // b.any
  40fb20:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fb24:	ldr	x0, [x8, #2808]
  40fb28:	bl	412000 <ferror@plt+0xf4b0>
  40fb2c:	cbnz	w0, 40fb5c <ferror@plt+0xd00c>
  40fb30:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fb34:	add	x8, x8, #0xacc
  40fb38:	str	wzr, [x8]
  40fb3c:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fb40:	ldr	x21, [x8, #2816]
  40fb44:	mov	w0, w20
  40fb48:	bl	40fe68 <ferror@plt+0xd318>
  40fb4c:	mov	x1, x0
  40fb50:	mov	x0, x21
  40fb54:	bl	411858 <ferror@plt+0xed08>
  40fb58:	cbz	w0, 40fb74 <ferror@plt+0xd024>
  40fb5c:	bl	402ac0 <__errno_location@plt>
  40fb60:	ldr	w1, [x0]
  40fb64:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fb68:	add	x2, x2, #0x5ad
  40fb6c:	mov	w0, wzr
  40fb70:	bl	402c5c <ferror@plt+0x10c>
  40fb74:	str	wzr, [x19, #16]
  40fb78:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fb7c:	ldr	x0, [x8, #2624]
  40fb80:	mov	x1, x19
  40fb84:	ldr	x8, [x0]
  40fb88:	ldr	x8, [x8, #40]
  40fb8c:	blr	x8
  40fb90:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fb94:	ldr	x9, [x8, #2792]
  40fb98:	str	x9, [x19]
  40fb9c:	str	x19, [x8, #2792]
  40fba0:	ldp	x20, x19, [sp, #64]
  40fba4:	ldp	x22, x21, [sp, #48]
  40fba8:	ldp	x24, x23, [sp, #32]
  40fbac:	ldp	x26, x25, [sp, #16]
  40fbb0:	ldp	x29, x30, [sp], #80
  40fbb4:	ret
  40fbb8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbbc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbc0:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbc4:	add	x0, x0, #0x5f7
  40fbc8:	add	x1, x1, #0x43b
  40fbcc:	add	x3, x3, #0x63c
  40fbd0:	mov	w2, #0x359                 	// #857
  40fbd4:	bl	402ab0 <__assert_fail@plt>
  40fbd8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbdc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbe0:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fbe4:	add	x0, x0, #0x5f7
  40fbe8:	add	x1, x1, #0x43b
  40fbec:	add	x3, x3, #0x63c
  40fbf0:	mov	w2, #0x36e                 	// #878
  40fbf4:	bl	402ab0 <__assert_fail@plt>
  40fbf8:	sub	sp, sp, #0x60
  40fbfc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fc00:	ldr	x0, [x8, #2624]
  40fc04:	stp	x29, x30, [sp, #64]
  40fc08:	str	x19, [sp, #80]
  40fc0c:	add	x29, sp, #0x40
  40fc10:	ldr	x8, [x0]
  40fc14:	ldr	x9, [x8, #56]
  40fc18:	add	x8, sp, #0x8
  40fc1c:	blr	x9
  40fc20:	ldr	x8, [sp, #8]
  40fc24:	add	x0, sp, #0x8
  40fc28:	add	x1, x29, #0x18
  40fc2c:	ldr	x8, [x8, #64]
  40fc30:	blr	x8
  40fc34:	tbz	w0, #0, 40fc74 <ferror@plt+0xd124>
  40fc38:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40fc3c:	b	40fc58 <ferror@plt+0xd108>
  40fc40:	ldr	x8, [sp, #8]
  40fc44:	add	x0, sp, #0x8
  40fc48:	add	x1, x29, #0x18
  40fc4c:	ldr	x8, [x8, #64]
  40fc50:	blr	x8
  40fc54:	tbz	w0, #0, 40fc74 <ferror@plt+0xd124>
  40fc58:	ldr	x0, [x29, #24]
  40fc5c:	ldr	w9, [x19, #3580]
  40fc60:	ldr	w8, [x0, #8]
  40fc64:	cmp	w8, w9
  40fc68:	b.eq	40fc40 <ferror@plt+0xd0f0>  // b.none
  40fc6c:	bl	40f7c8 <ferror@plt+0xcc78>
  40fc70:	b	40fc40 <ferror@plt+0xd0f0>
  40fc74:	ldr	x8, [sp, #8]
  40fc78:	add	x0, sp, #0x8
  40fc7c:	ldr	x8, [x8, #72]
  40fc80:	blr	x8
  40fc84:	ldr	x19, [sp, #80]
  40fc88:	ldp	x29, x30, [sp, #64]
  40fc8c:	add	sp, sp, #0x60
  40fc90:	ret
  40fc94:	sub	sp, sp, #0x130
  40fc98:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  40fc9c:	stp	x20, x19, [sp, #288]
  40fca0:	ldr	w20, [x8, #3580]
  40fca4:	stp	x29, x30, [sp, #208]
  40fca8:	add	x29, sp, #0xd0
  40fcac:	mov	x19, x0
  40fcb0:	mov	w0, wzr
  40fcb4:	str	x28, [sp, #224]
  40fcb8:	stp	x26, x25, [sp, #240]
  40fcbc:	stp	x24, x23, [sp, #256]
  40fcc0:	stp	x22, x21, [sp, #272]
  40fcc4:	sub	x21, x29, #0x40
  40fcc8:	bl	40f214 <ferror@plt+0xc6c4>
  40fccc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fcd0:	ldr	x0, [x8, #2624]
  40fcd4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fcd8:	str	x19, [x8, #2664]
  40fcdc:	ldr	x8, [x0]
  40fce0:	ldr	x9, [x8, #56]
  40fce4:	add	x8, sp, #0x8
  40fce8:	blr	x9
  40fcec:	ldur	q0, [sp, #8]
  40fcf0:	ldur	q1, [sp, #24]
  40fcf4:	ldur	q2, [sp, #40]
  40fcf8:	ldr	x8, [sp, #56]
  40fcfc:	sub	x0, x29, #0x40
  40fd00:	stp	q0, q1, [x21]
  40fd04:	str	q2, [x21, #32]
  40fd08:	ldur	x9, [x29, #-64]
  40fd0c:	stur	x8, [x29, #-16]
  40fd10:	sub	x1, x29, #0x48
  40fd14:	ldr	x8, [x9, #64]
  40fd18:	blr	x8
  40fd1c:	mov	w26, wzr
  40fd20:	tbz	w0, #0, 40fe1c <ferror@plt+0xd2cc>
  40fd24:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fd28:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fd2c:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fd30:	adrp	x24, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fd34:	mov	w26, wzr
  40fd38:	add	x21, x21, #0x4b1
  40fd3c:	add	x22, x22, #0x4c7
  40fd40:	add	x23, x23, #0x4db
  40fd44:	add	x24, x24, #0x4a9
  40fd48:	b	40fd90 <ferror@plt+0xd240>
  40fd4c:	ldr	w2, [x25, #8]
  40fd50:	ldr	w3, [x25, #16]
  40fd54:	mov	x0, x19
  40fd58:	mov	x1, x24
  40fd5c:	bl	4177a8 <ferror@plt+0x14c58>
  40fd60:	mov	x0, x25
  40fd64:	bl	40f7c8 <ferror@plt+0xcc78>
  40fd68:	mov	w0, #0xa                   	// #10
  40fd6c:	mov	x1, x19
  40fd70:	bl	4025a0 <putc@plt>
  40fd74:	ldr	w26, [x25, #8]
  40fd78:	ldur	x8, [x29, #-64]
  40fd7c:	sub	x0, x29, #0x40
  40fd80:	sub	x1, x29, #0x48
  40fd84:	ldr	x8, [x8, #64]
  40fd88:	blr	x8
  40fd8c:	tbz	w0, #0, 40fe1c <ferror@plt+0xd2cc>
  40fd90:	ldur	x25, [x29, #-72]
  40fd94:	ldr	w8, [x25, #12]
  40fd98:	cbnz	w8, 40fd4c <ferror@plt+0xd1fc>
  40fd9c:	ldr	w8, [x25, #16]
  40fda0:	cbz	w8, 40fd78 <ferror@plt+0xd228>
  40fda4:	ldr	w0, [x25, #8]
  40fda8:	mov	w1, #0x1                   	// #1
  40fdac:	bl	40f574 <ferror@plt+0xca24>
  40fdb0:	str	x0, [x25]
  40fdb4:	bl	402630 <fileno@plt>
  40fdb8:	mov	w1, w0
  40fdbc:	add	x2, sp, #0x8
  40fdc0:	mov	w0, wzr
  40fdc4:	bl	402a30 <__fxstat@plt>
  40fdc8:	tbnz	w0, #31, 40fdfc <ferror@plt+0xd2ac>
  40fdcc:	ldr	x3, [sp, #56]
  40fdd0:	tbz	x3, #63, 40fde8 <ferror@plt+0xd298>
  40fdd4:	mov	w0, #0x1                   	// #1
  40fdd8:	mov	w1, wzr
  40fddc:	mov	x2, x22
  40fde0:	bl	402c5c <ferror@plt+0x10c>
  40fde4:	ldr	x3, [sp, #56]
  40fde8:	ldr	w2, [x25, #8]
  40fdec:	mov	x0, x19
  40fdf0:	mov	x1, x23
  40fdf4:	bl	4177a8 <ferror@plt+0x14c58>
  40fdf8:	b	40fd60 <ferror@plt+0xd210>
  40fdfc:	bl	402ac0 <__errno_location@plt>
  40fe00:	ldr	w1, [x0]
  40fe04:	mov	w0, #0x1                   	// #1
  40fe08:	mov	x2, x21
  40fe0c:	bl	402c5c <ferror@plt+0x10c>
  40fe10:	ldr	x3, [sp, #56]
  40fe14:	tbz	x3, #63, 40fde8 <ferror@plt+0xd298>
  40fe18:	b	40fdd4 <ferror@plt+0xd284>
  40fe1c:	ldur	x8, [x29, #-64]
  40fe20:	sub	x0, x29, #0x40
  40fe24:	ldr	x8, [x8, #72]
  40fe28:	blr	x8
  40fe2c:	cmp	w20, w26
  40fe30:	b.eq	40fe48 <ferror@plt+0xd2f8>  // b.none
  40fe34:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fe38:	add	x1, x1, #0x4e4
  40fe3c:	mov	x0, x19
  40fe40:	mov	w2, w20
  40fe44:	bl	4177a8 <ferror@plt+0x14c58>
  40fe48:	ldp	x20, x19, [sp, #288]
  40fe4c:	ldp	x22, x21, [sp, #272]
  40fe50:	ldp	x24, x23, [sp, #256]
  40fe54:	ldp	x26, x25, [sp, #240]
  40fe58:	ldr	x28, [sp, #224]
  40fe5c:	ldp	x29, x30, [sp, #208]
  40fe60:	add	sp, sp, #0x130
  40fe64:	ret
  40fe68:	stp	x29, x30, [sp, #-64]!
  40fe6c:	stp	x22, x21, [sp, #32]
  40fe70:	adrp	x22, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fe74:	ldr	x8, [x22, #2824]
  40fe78:	str	x23, [sp, #16]
  40fe7c:	stp	x20, x19, [sp, #48]
  40fe80:	mov	w19, w0
  40fe84:	adrp	x23, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fe88:	mov	x29, sp
  40fe8c:	cbnz	x8, 40ff84 <ferror@plt+0xd434>
  40fe90:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  40fe94:	ldr	x8, [x8, #2816]
  40fe98:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40fe9c:	add	x0, x0, #0x4ec
  40fea0:	mov	w2, #0x7fffffff            	// #2147483647
  40fea4:	ldr	x1, [x8]
  40fea8:	bl	417aa4 <ferror@plt+0x14f54>
  40feac:	mov	x21, x0
  40feb0:	str	x0, [x23, #2832]
  40feb4:	bl	4024f0 <strlen@plt>
  40feb8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40febc:	add	x8, x8, #0xa88
  40fec0:	mov	x20, x0
  40fec4:	ldp	x0, x9, [x8]
  40fec8:	add	x1, x20, #0x1
  40fecc:	sub	x8, x9, x0
  40fed0:	cmp	x8, x1
  40fed4:	b.cs	40fef0 <ferror@plt+0xd3a0>  // b.hs, b.nlast
  40fed8:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40fedc:	add	x21, x21, #0xa70
  40fee0:	mov	x0, x21
  40fee4:	bl	418058 <_obstack_newchunk@@Base>
  40fee8:	ldr	x0, [x21, #24]
  40feec:	ldr	x21, [x23, #2832]
  40fef0:	mov	x1, x21
  40fef4:	mov	x2, x20
  40fef8:	bl	4024c0 <memcpy@plt>
  40fefc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ff00:	add	x9, x9, #0xa80
  40ff04:	ldr	x8, [x9, #8]
  40ff08:	add	x8, x8, x20
  40ff0c:	add	x10, x8, #0x1
  40ff10:	str	x10, [x9, #8]
  40ff14:	strb	wzr, [x8]
  40ff18:	ldp	x8, x9, [x9]
  40ff1c:	cmp	x9, x8
  40ff20:	b.ne	40ff34 <ferror@plt+0xd3e4>  // b.any
  40ff24:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ff28:	ldrb	w11, [x10, #2752]
  40ff2c:	orr	w11, w11, #0x2
  40ff30:	strb	w11, [x10, #2752]
  40ff34:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ff38:	add	x10, x10, #0xa78
  40ff3c:	ldr	x11, [x10, #40]
  40ff40:	ldr	x12, [x10]
  40ff44:	ldr	x13, [x10, #24]
  40ff48:	ldr	x0, [x23, #2832]
  40ff4c:	add	x9, x11, x9
  40ff50:	bic	x9, x9, x11
  40ff54:	sub	x14, x13, x12
  40ff58:	sub	x11, x9, x12
  40ff5c:	cmp	x11, x14
  40ff60:	csel	x9, x13, x9, hi  // hi = pmore
  40ff64:	stp	x9, x9, [x10, #8]
  40ff68:	str	x8, [x22, #2824]
  40ff6c:	bl	402930 <free@plt>
  40ff70:	ldr	x0, [x22, #2824]
  40ff74:	mov	w1, #0x2d                  	// #45
  40ff78:	bl	402810 <strrchr@plt>
  40ff7c:	add	x8, x0, #0x1
  40ff80:	str	x8, [x23, #2832]
  40ff84:	cmp	w19, #0x0
  40ff88:	b.le	40ffc0 <ferror@plt+0xd470>
  40ff8c:	ldr	x0, [x23, #2832]
  40ff90:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ff94:	add	x3, x3, #0x21c
  40ff98:	mov	w1, #0x1                   	// #1
  40ff9c:	mov	x2, #0xffffffffffffffff    	// #-1
  40ffa0:	mov	w4, w19
  40ffa4:	bl	402510 <__sprintf_chk@plt>
  40ffa8:	ldr	x0, [x22, #2824]
  40ffac:	ldp	x20, x19, [sp, #48]
  40ffb0:	ldp	x22, x21, [sp, #32]
  40ffb4:	ldr	x23, [sp, #16]
  40ffb8:	ldp	x29, x30, [sp], #64
  40ffbc:	ret
  40ffc0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ffc4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ffc8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  40ffcc:	add	x0, x0, #0x4f5
  40ffd0:	add	x1, x1, #0x43b
  40ffd4:	add	x3, x3, #0x500
  40ffd8:	mov	w2, #0xc8                  	// #200
  40ffdc:	bl	402ab0 <__assert_fail@plt>
  40ffe0:	sub	sp, sp, #0x60
  40ffe4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  40ffe8:	ldr	x0, [x8, #2624]
  40ffec:	stp	x29, x30, [sp, #64]
  40fff0:	stp	x20, x19, [sp, #80]
  40fff4:	add	x29, sp, #0x40
  40fff8:	cbz	x0, 41009c <ferror@plt+0xd54c>
  40fffc:	ldr	x8, [x0]
  410000:	ldr	x9, [x8, #56]
  410004:	mov	x8, sp
  410008:	blr	x9
  41000c:	ldr	x8, [sp]
  410010:	mov	x0, sp
  410014:	sub	x1, x29, #0x8
  410018:	ldr	x8, [x8, #64]
  41001c:	blr	x8
  410020:	mov	w20, wzr
  410024:	tbz	w0, #0, 410084 <ferror@plt+0xd534>
  410028:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x2d94>
  41002c:	add	x19, x19, #0x5ad
  410030:	b	41004c <ferror@plt+0xd4fc>
  410034:	ldr	x8, [sp]
  410038:	mov	x0, sp
  41003c:	sub	x1, x29, #0x8
  410040:	ldr	x8, [x8, #64]
  410044:	blr	x8
  410048:	tbz	w0, #0, 410084 <ferror@plt+0xd534>
  41004c:	ldur	x8, [x29, #-8]
  410050:	ldr	w9, [x8, #12]
  410054:	cbnz	w9, 410034 <ferror@plt+0xd4e4>
  410058:	ldr	x0, [x8]
  41005c:	cbz	x0, 410034 <ferror@plt+0xd4e4>
  410060:	bl	412000 <ferror@plt+0xf4b0>
  410064:	cbz	w0, 410034 <ferror@plt+0xd4e4>
  410068:	bl	402ac0 <__errno_location@plt>
  41006c:	ldr	w1, [x0]
  410070:	mov	w0, wzr
  410074:	mov	x2, x19
  410078:	bl	402c5c <ferror@plt+0x10c>
  41007c:	mov	w20, #0x1                   	// #1
  410080:	b	410034 <ferror@plt+0xd4e4>
  410084:	ldr	x8, [sp]
  410088:	mov	x0, sp
  41008c:	ldr	x8, [x8, #72]
  410090:	blr	x8
  410094:	and	w19, w20, #0x1
  410098:	b	4100a0 <ferror@plt+0xd550>
  41009c:	mov	w19, wzr
  4100a0:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  4100a4:	ldr	x0, [x8, #2816]
  4100a8:	bl	411c1c <ferror@plt+0xf0cc>
  4100ac:	tbnz	w19, #0, 4100c4 <ferror@plt+0xd574>
  4100b0:	cbnz	w0, 4100c4 <ferror@plt+0xd574>
  4100b4:	ldp	x20, x19, [sp, #80]
  4100b8:	ldp	x29, x30, [sp, #64]
  4100bc:	add	sp, sp, #0x60
  4100c0:	ret
  4100c4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4100c8:	ldr	w0, [x8, #884]
  4100cc:	bl	4024e0 <_exit@plt>
  4100d0:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  4100d4:	adrp	x9, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  4100d8:	adrp	x10, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  4100dc:	str	xzr, [x8, #2848]
  4100e0:	str	xzr, [x9, #2856]
  4100e4:	str	wzr, [x10, #2864]
  4100e8:	ret
  4100ec:	stp	x29, x30, [sp, #-96]!
  4100f0:	stp	x28, x27, [sp, #16]
  4100f4:	stp	x26, x25, [sp, #32]
  4100f8:	stp	x24, x23, [sp, #48]
  4100fc:	stp	x22, x21, [sp, #64]
  410100:	stp	x20, x19, [sp, #80]
  410104:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  410108:	ldr	w8, [x24, #1176]
  41010c:	mov	x29, sp
  410110:	cbz	w8, 410130 <ferror@plt+0xd5e0>
  410114:	ldp	x20, x19, [sp, #80]
  410118:	ldp	x22, x21, [sp, #64]
  41011c:	ldp	x24, x23, [sp, #48]
  410120:	ldp	x26, x25, [sp, #32]
  410124:	ldp	x28, x27, [sp, #16]
  410128:	ldp	x29, x30, [sp], #96
  41012c:	ret
  410130:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  410134:	add	x0, x0, #0x669
  410138:	bl	402ad0 <getenv@plt>
  41013c:	cbz	x0, 410114 <ferror@plt+0xd5c4>
  410140:	bl	4175c4 <ferror@plt+0x14a74>
  410144:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x1d94>
  410148:	adrp	x28, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  41014c:	mov	x19, x0
  410150:	add	x25, x25, #0xa33
  410154:	adrp	x26, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  410158:	adrp	x27, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  41015c:	add	x28, x28, #0xb20
  410160:	mov	x21, x0
  410164:	b	410184 <ferror@plt+0xd634>
  410168:	ldr	x8, [x27, #2856]
  41016c:	cmp	x8, #0x0
  410170:	csel	x8, x28, x8, eq  // eq = none
  410174:	str	x21, [x8]
  410178:	str	x21, [x27, #2856]
  41017c:	add	x21, x20, #0x1
  410180:	cbz	x20, 4101f0 <ferror@plt+0xd6a0>
  410184:	mov	w1, #0x3a                  	// #58
  410188:	mov	x0, x21
  41018c:	bl	402990 <strchr@plt>
  410190:	mov	x20, x0
  410194:	cbz	x0, 41019c <ferror@plt+0xd64c>
  410198:	strb	wzr, [x20]
  41019c:	ldr	w8, [x24, #1176]
  4101a0:	cbnz	w8, 41017c <ferror@plt+0xd62c>
  4101a4:	ldrb	w8, [x21]
  4101a8:	mov	w0, #0x18                  	// #24
  4101ac:	cmp	w8, #0x0
  4101b0:	csel	x23, x25, x21, eq  // eq = none
  4101b4:	bl	417280 <ferror@plt+0x14730>
  4101b8:	mov	x21, x0
  4101bc:	str	xzr, [x0]
  4101c0:	mov	x0, x23
  4101c4:	bl	4024f0 <strlen@plt>
  4101c8:	mov	x22, x0
  4101cc:	mov	x0, x23
  4101d0:	str	w22, [x21, #16]
  4101d4:	bl	4175c4 <ferror@plt+0x14a74>
  4101d8:	ldr	w8, [x26, #2864]
  4101dc:	str	x0, [x21, #8]
  4101e0:	cmp	w8, w22
  4101e4:	b.ge	410168 <ferror@plt+0xd618>  // b.tcont
  4101e8:	str	w22, [x26, #2864]
  4101ec:	b	410168 <ferror@plt+0xd618>
  4101f0:	mov	x0, x19
  4101f4:	ldp	x20, x19, [sp, #80]
  4101f8:	ldp	x22, x21, [sp, #64]
  4101fc:	ldp	x24, x23, [sp, #48]
  410200:	ldp	x26, x25, [sp, #32]
  410204:	ldp	x28, x27, [sp, #16]
  410208:	ldp	x29, x30, [sp], #96
  41020c:	b	402930 <free@plt>
  410210:	stp	x29, x30, [sp, #-48]!
  410214:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  410218:	ldr	w8, [x8, #1176]
  41021c:	str	x21, [sp, #16]
  410220:	stp	x20, x19, [sp, #32]
  410224:	mov	x29, sp
  410228:	cbnz	w8, 4102a0 <ferror@plt+0xd750>
  41022c:	ldrb	w8, [x0]
  410230:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  410234:	add	x9, x9, #0xa33
  410238:	cmp	w8, #0x0
  41023c:	csel	x21, x9, x0, eq  // eq = none
  410240:	mov	w0, #0x18                  	// #24
  410244:	bl	417280 <ferror@plt+0x14730>
  410248:	mov	x19, x0
  41024c:	str	xzr, [x0]
  410250:	mov	x0, x21
  410254:	bl	4024f0 <strlen@plt>
  410258:	mov	x20, x0
  41025c:	mov	x0, x21
  410260:	str	w20, [x19, #16]
  410264:	bl	4175c4 <ferror@plt+0x14a74>
  410268:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  41026c:	ldr	w9, [x8, #2864]
  410270:	str	x0, [x19, #8]
  410274:	cmp	w9, w20
  410278:	b.ge	410280 <ferror@plt+0xd730>  // b.tcont
  41027c:	str	w20, [x8, #2864]
  410280:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  410284:	ldr	x9, [x8, #2856]
  410288:	adrp	x10, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  41028c:	add	x10, x10, #0xb20
  410290:	cmp	x9, #0x0
  410294:	csel	x9, x10, x9, eq  // eq = none
  410298:	str	x19, [x9]
  41029c:	str	x19, [x8, #2856]
  4102a0:	ldp	x20, x19, [sp, #32]
  4102a4:	ldr	x21, [sp, #16]
  4102a8:	ldp	x29, x30, [sp], #48
  4102ac:	ret
  4102b0:	stp	x29, x30, [sp, #-80]!
  4102b4:	stp	x20, x19, [sp, #64]
  4102b8:	mov	x19, x1
  4102bc:	mov	x20, x0
  4102c0:	str	x25, [sp, #16]
  4102c4:	stp	x24, x23, [sp, #32]
  4102c8:	stp	x22, x21, [sp, #48]
  4102cc:	mov	x29, sp
  4102d0:	cbz	x1, 4102d8 <ferror@plt+0xd788>
  4102d4:	str	xzr, [x19]
  4102d8:	ldrb	w8, [x20]
  4102dc:	cbz	w8, 410304 <ferror@plt+0xd7b4>
  4102e0:	mov	x0, x20
  4102e4:	bl	4103f4 <ferror@plt+0xd8a4>
  4102e8:	mov	x21, x0
  4102ec:	cbz	x0, 410330 <ferror@plt+0xd7e0>
  4102f0:	cbz	x19, 410314 <ferror@plt+0xd7c4>
  4102f4:	mov	x0, x20
  4102f8:	bl	4175c4 <ferror@plt+0x14a74>
  4102fc:	str	x0, [x19]
  410300:	b	410314 <ferror@plt+0xd7c4>
  410304:	bl	402ac0 <__errno_location@plt>
  410308:	mov	w8, #0x2                   	// #2
  41030c:	mov	x21, xzr
  410310:	str	w8, [x0]
  410314:	mov	x0, x21
  410318:	ldp	x20, x19, [sp, #64]
  41031c:	ldp	x22, x21, [sp, #48]
  410320:	ldp	x24, x23, [sp, #32]
  410324:	ldr	x25, [sp, #16]
  410328:	ldp	x29, x30, [sp], #80
  41032c:	ret
  410330:	ldrb	w8, [x20]
  410334:	cmp	w8, #0x2f
  410338:	b.eq	410314 <ferror@plt+0xd7c4>  // b.none
  41033c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  410340:	ldr	w8, [x8, #1176]
  410344:	cbnz	w8, 410314 <ferror@plt+0xd7c4>
  410348:	bl	402ac0 <__errno_location@plt>
  41034c:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  410350:	ldr	x25, [x8, #2848]
  410354:	ldr	w24, [x0]
  410358:	mov	x23, x0
  41035c:	cbz	x25, 41038c <ferror@plt+0xd83c>
  410360:	ldr	x0, [x25, #8]
  410364:	mov	x1, x20
  410368:	mov	x2, xzr
  41036c:	bl	412dc0 <ferror@plt+0x10270>
  410370:	mov	x22, x0
  410374:	bl	4103f4 <ferror@plt+0xd8a4>
  410378:	cbnz	x0, 410398 <ferror@plt+0xd848>
  41037c:	mov	x0, x22
  410380:	bl	402930 <free@plt>
  410384:	ldr	x25, [x25]
  410388:	cbnz	x25, 410360 <ferror@plt+0xd810>
  41038c:	mov	x21, xzr
  410390:	str	w24, [x23]
  410394:	b	410314 <ferror@plt+0xd7c4>
  410398:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41039c:	ldrb	w8, [x8, #1172]
  4103a0:	mov	x21, x0
  4103a4:	tbz	w8, #6, 4103dc <ferror@plt+0xd88c>
  4103a8:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4103ac:	ldr	x8, [x23, #2088]
  4103b0:	cbz	x8, 4103dc <ferror@plt+0xd88c>
  4103b4:	bl	408c84 <ferror@plt+0x6134>
  4103b8:	ldr	x0, [x23, #2088]
  4103bc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4103c0:	add	x1, x1, #0x670
  4103c4:	mov	x2, x20
  4103c8:	mov	x3, x22
  4103cc:	bl	4177a8 <ferror@plt+0x14c58>
  4103d0:	ldr	x1, [x23, #2088]
  4103d4:	mov	w0, #0xa                   	// #10
  4103d8:	bl	4025a0 <putc@plt>
  4103dc:	cbz	x19, 4103e8 <ferror@plt+0xd898>
  4103e0:	str	x22, [x19]
  4103e4:	b	410314 <ferror@plt+0xd7c4>
  4103e8:	mov	x0, x22
  4103ec:	bl	402930 <free@plt>
  4103f0:	b	410314 <ferror@plt+0xd7c4>
  4103f4:	sub	sp, sp, #0xa0
  4103f8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4103fc:	add	x1, x1, #0xacc
  410400:	stp	x29, x30, [sp, #128]
  410404:	stp	x20, x19, [sp, #144]
  410408:	add	x29, sp, #0x80
  41040c:	bl	412ecc <ferror@plt+0x1037c>
  410410:	mov	x19, x0
  410414:	cbz	x0, 410494 <ferror@plt+0xd944>
  410418:	mov	x0, x19
  41041c:	bl	402630 <fileno@plt>
  410420:	mov	w20, w0
  410424:	mov	x2, sp
  410428:	mov	w0, wzr
  41042c:	mov	w1, w20
  410430:	bl	402a30 <__fxstat@plt>
  410434:	cbnz	w0, 410464 <ferror@plt+0xd914>
  410438:	ldr	w8, [sp, #16]
  41043c:	and	w8, w8, #0xf000
  410440:	cmp	w8, #0x4, lsl #12
  410444:	b.ne	410464 <ferror@plt+0xd914>  // b.any
  410448:	mov	x0, x19
  41044c:	bl	417b18 <ferror@plt+0x14fc8>
  410450:	bl	402ac0 <__errno_location@plt>
  410454:	mov	w8, #0x15                  	// #21
  410458:	mov	x19, xzr
  41045c:	str	w8, [x0]
  410460:	b	410494 <ferror@plt+0xd944>
  410464:	mov	w1, #0x1                   	// #1
  410468:	mov	w0, w20
  41046c:	bl	41225c <ferror@plt+0xf70c>
  410470:	cbz	w0, 410494 <ferror@plt+0xd944>
  410474:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  410478:	ldr	w20, [x8, #1192]
  41047c:	bl	402ac0 <__errno_location@plt>
  410480:	ldr	w1, [x0]
  410484:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  410488:	add	x2, x2, #0x690
  41048c:	mov	w0, w20
  410490:	bl	402c5c <ferror@plt+0x10c>
  410494:	mov	x0, x19
  410498:	ldp	x20, x19, [sp, #144]
  41049c:	ldp	x29, x30, [sp, #128]
  4104a0:	add	sp, sp, #0xa0
  4104a4:	ret
  4104a8:	sub	sp, sp, #0x30
  4104ac:	stp	x20, x19, [sp, #32]
  4104b0:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4104b4:	ldr	x19, [x20, #872]
  4104b8:	add	x4, sp, #0x8
  4104bc:	mov	w2, #0x8                   	// #8
  4104c0:	mov	x1, xzr
  4104c4:	mov	x0, x19
  4104c8:	mov	x3, xzr
  4104cc:	stp	x29, x30, [sp, #16]
  4104d0:	add	x29, sp, #0x10
  4104d4:	str	xzr, [sp, #8]
  4104d8:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  4104dc:	ldr	x8, [sp, #8]
  4104e0:	sbfx	x9, x1, #0, #1
  4104e4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4104e8:	eor	x9, x9, x1
  4104ec:	cmn	x0, x10
  4104f0:	orr	x9, x9, x8
  4104f4:	adcs	x8, x1, xzr
  4104f8:	cbnz	x9, 410538 <ferror@plt+0xd9e8>
  4104fc:	sbfx	x8, x8, #0, #1
  410500:	tbnz	x8, #63, 410538 <ferror@plt+0xd9e8>
  410504:	lsl	x0, x19, #3
  410508:	bl	417280 <ferror@plt+0x14730>
  41050c:	ldr	x8, [x20, #872]
  410510:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  410514:	str	x0, [x9, #3584]
  410518:	cbz	x8, 410528 <ferror@plt+0xd9d8>
  41051c:	lsl	x2, x8, #3
  410520:	mov	w1, wzr
  410524:	bl	402740 <memset@plt>
  410528:	ldp	x20, x19, [sp, #32]
  41052c:	ldp	x29, x30, [sp, #16]
  410530:	add	sp, sp, #0x30
  410534:	ret
  410538:	bl	41761c <ferror@plt+0x14acc>
  41053c:	stp	x29, x30, [sp, #-32]!
  410540:	ldr	w8, [x0, #12]
  410544:	str	x19, [sp, #16]
  410548:	mov	x19, x0
  41054c:	mov	x29, sp
  410550:	cmp	w8, #0x1
  410554:	b.lt	410570 <ferror@plt+0xda20>  // b.tstop
  410558:	ldrb	w8, [x19, #8]
  41055c:	orr	w8, w8, #0x10
  410560:	strb	w8, [x19, #8]
  410564:	ldr	x19, [sp, #16]
  410568:	ldp	x29, x30, [sp], #32
  41056c:	ret
  410570:	ldr	x0, [x19, #16]
  410574:	bl	402930 <free@plt>
  410578:	ldr	w8, [x19, #24]
  41057c:	cmp	w8, #0x1
  410580:	b.ne	41058c <ferror@plt+0xda3c>  // b.any
  410584:	ldr	x0, [x19, #32]
  410588:	bl	402930 <free@plt>
  41058c:	mov	x0, x19
  410590:	ldr	x19, [sp, #16]
  410594:	ldp	x29, x30, [sp], #32
  410598:	b	402930 <free@plt>
  41059c:	stp	x29, x30, [sp, #-64]!
  4105a0:	stp	x24, x23, [sp, #16]
  4105a4:	stp	x22, x21, [sp, #32]
  4105a8:	stp	x20, x19, [sp, #48]
  4105ac:	ldrb	w9, [x0]
  4105b0:	mov	x19, x0
  4105b4:	mov	w20, w1
  4105b8:	mov	x8, xzr
  4105bc:	mov	x29, sp
  4105c0:	cbz	w9, 4105d8 <ferror@plt+0xda88>
  4105c4:	add	x10, x19, #0x1
  4105c8:	ror	x8, x8, #57
  4105cc:	add	x8, x8, w9, uxtb
  4105d0:	ldrb	w9, [x10], #1
  4105d4:	cbnz	w9, 4105c8 <ferror@plt+0xda78>
  4105d8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4105dc:	ldr	x9, [x9, #872]
  4105e0:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4105e4:	ldr	x10, [x10, #3584]
  4105e8:	udiv	x11, x8, x9
  4105ec:	msub	x8, x11, x9, x8
  4105f0:	add	x23, x10, x8, lsl #3
  4105f4:	ldr	x21, [x23]
  4105f8:	cbz	x21, 41064c <ferror@plt+0xdafc>
  4105fc:	ldr	x0, [x21, #16]
  410600:	mov	x1, x19
  410604:	bl	4028d0 <strcmp@plt>
  410608:	mov	w22, w0
  41060c:	tbnz	w0, #31, 410620 <ferror@plt+0xdad0>
  410610:	mov	x24, xzr
  410614:	mov	w8, #0x1                   	// #1
  410618:	cbnz	w20, 41065c <ferror@plt+0xdb0c>
  41061c:	b	4106d8 <ferror@plt+0xdb88>
  410620:	mov	x24, x21
  410624:	ldr	x21, [x21]
  410628:	cbz	x21, 4106d0 <ferror@plt+0xdb80>
  41062c:	ldr	x0, [x21, #16]
  410630:	mov	x1, x19
  410634:	bl	4028d0 <strcmp@plt>
  410638:	mov	w22, w0
  41063c:	tbnz	w0, #31, 410620 <ferror@plt+0xdad0>
  410640:	mov	w8, #0x1                   	// #1
  410644:	cbnz	w20, 41065c <ferror@plt+0xdb0c>
  410648:	b	4106d8 <ferror@plt+0xdb88>
  41064c:	mov	x24, xzr
  410650:	mov	w8, wzr
  410654:	mov	w22, #0x1                   	// #1
  410658:	cbz	w20, 4106d8 <ferror@plt+0xdb88>
  41065c:	cmp	x24, #0x0
  410660:	sub	w9, w20, #0x1
  410664:	csel	x24, x23, x24, eq  // eq = none
  410668:	cmp	w9, #0x3
  41066c:	b.hi	4108b4 <ferror@plt+0xdd64>  // b.pmore
  410670:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x2d94>
  410674:	add	x10, x10, #0x6c0
  410678:	adr	x11, 410688 <ferror@plt+0xdb38>
  41067c:	ldrb	w12, [x10, x9]
  410680:	add	x11, x11, x12, lsl #2
  410684:	br	x11
  410688:	mov	x23, xzr
  41068c:	cbz	x21, 41089c <ferror@plt+0xdd4c>
  410690:	cbnz	w22, 41089c <ferror@plt+0xdd4c>
  410694:	ldr	x8, [x21]
  410698:	cbz	x8, 4107d8 <ferror@plt+0xdc88>
  41069c:	cmp	w20, #0x4
  4106a0:	b.ne	4107d8 <ferror@plt+0xdc88>  // b.any
  4106a4:	ldrb	w9, [x8, #8]
  4106a8:	tbz	w9, #1, 4107d8 <ferror@plt+0xdc88>
  4106ac:	and	w9, w9, #0xfffffffd
  4106b0:	strb	w9, [x8, #8]
  4106b4:	ldr	x8, [x21]
  4106b8:	ldrb	w9, [x21, #8]
  4106bc:	mov	w22, wzr
  4106c0:	ldrb	w10, [x8, #8]
  4106c4:	bfxil	w10, w9, #0, #1
  4106c8:	strb	w10, [x8, #8]
  4106cc:	b	4107e0 <ferror@plt+0xdc90>
  4106d0:	mov	w8, wzr
  4106d4:	cbnz	w20, 41065c <ferror@plt+0xdb0c>
  4106d8:	cmp	w22, #0x0
  4106dc:	csel	x23, x21, xzr, eq  // eq = none
  4106e0:	b	41089c <ferror@plt+0xdd4c>
  4106e4:	cmp	w22, #0x0
  4106e8:	cset	w9, ne  // ne = any
  4106ec:	eor	w8, w8, #0x1
  4106f0:	orr	w8, w8, w9
  4106f4:	tbnz	w8, #0, 410760 <ferror@plt+0xdc10>
  4106f8:	ldr	w8, [x21, #12]
  4106fc:	cmp	w8, #0x1
  410700:	b.lt	410898 <ferror@plt+0xdd48>  // b.tstop
  410704:	ldrb	w8, [x21, #8]
  410708:	mov	w0, #0x28                  	// #40
  41070c:	orr	w8, w8, #0x10
  410710:	strb	w8, [x21, #8]
  410714:	bl	417280 <ferror@plt+0x14730>
  410718:	str	wzr, [x0, #24]
  41071c:	ldrb	w8, [x21, #8]
  410720:	ldrb	w9, [x0, #8]
  410724:	mov	x23, x0
  410728:	bfxil	w9, w8, #0, #1
  41072c:	strb	w9, [x0, #8]
  410730:	mov	x0, x19
  410734:	bl	4175c4 <ferror@plt+0x14a74>
  410738:	ldrb	w8, [x23, #8]
  41073c:	str	x0, [x23, #16]
  410740:	str	wzr, [x23, #12]
  410744:	and	w8, w8, #0xffffffe1
  410748:	strb	w8, [x23, #8]
  41074c:	ldr	x8, [x21]
  410750:	str	x8, [x23]
  410754:	str	xzr, [x21]
  410758:	str	x23, [x24]
  41075c:	b	41089c <ferror@plt+0xdd4c>
  410760:	mov	w0, #0x28                  	// #40
  410764:	bl	417280 <ferror@plt+0x14730>
  410768:	ldrb	w8, [x0, #8]
  41076c:	mov	x23, x0
  410770:	str	wzr, [x0, #24]
  410774:	and	w8, w8, #0xfe
  410778:	strb	w8, [x0, #8]
  41077c:	mov	x0, x19
  410780:	bl	4175c4 <ferror@plt+0x14a74>
  410784:	ldrb	w8, [x23, #8]
  410788:	str	x0, [x23, #16]
  41078c:	str	wzr, [x23, #12]
  410790:	cmp	w20, #0x3
  410794:	and	w8, w8, #0xffffffe1
  410798:	strb	w8, [x23, #8]
  41079c:	ldr	x8, [x24]
  4107a0:	str	x8, [x23]
  4107a4:	str	x23, [x24]
  4107a8:	b.ne	41089c <ferror@plt+0xdd4c>  // b.any
  4107ac:	cbnz	w22, 41089c <ferror@plt+0xdd4c>
  4107b0:	ldr	x8, [x23]
  4107b4:	ldrb	w9, [x8, #8]
  4107b8:	orr	w9, w9, #0x2
  4107bc:	strb	w9, [x8, #8]
  4107c0:	ldr	x8, [x23]
  4107c4:	ldrb	w9, [x23, #8]
  4107c8:	ldrb	w8, [x8, #8]
  4107cc:	bfxil	w9, w8, #0, #1
  4107d0:	strb	w9, [x23, #8]
  4107d4:	b	41089c <ferror@plt+0xdd4c>
  4107d8:	ldrb	w8, [x21, #8]
  4107dc:	and	w22, w8, #0x1
  4107e0:	ldr	x8, [x21]
  4107e4:	str	x8, [x24]
  4107e8:	ldr	w8, [x21, #12]
  4107ec:	cmp	w8, #0x1
  4107f0:	b.lt	41080c <ferror@plt+0xdcbc>  // b.tstop
  4107f4:	ldrb	w8, [x21, #8]
  4107f8:	orr	w8, w8, #0x10
  4107fc:	strb	w8, [x21, #8]
  410800:	ldr	x21, [x24]
  410804:	cbnz	x21, 410838 <ferror@plt+0xdce8>
  410808:	b	410848 <ferror@plt+0xdcf8>
  41080c:	ldr	x0, [x21, #16]
  410810:	bl	402930 <free@plt>
  410814:	ldr	w8, [x21, #24]
  410818:	cmp	w8, #0x1
  41081c:	b.ne	410828 <ferror@plt+0xdcd8>  // b.any
  410820:	ldr	x0, [x21, #32]
  410824:	bl	402930 <free@plt>
  410828:	mov	x0, x21
  41082c:	bl	402930 <free@plt>
  410830:	ldr	x21, [x24]
  410834:	cbz	x21, 410848 <ferror@plt+0xdcf8>
  410838:	cmp	w20, #0x2
  41083c:	b.ne	410848 <ferror@plt+0xdcf8>  // b.any
  410840:	ldrb	w8, [x21, #8]
  410844:	tbnz	w8, #1, 4107e0 <ferror@plt+0xdc90>
  410848:	cbz	w22, 410890 <ferror@plt+0xdd40>
  41084c:	mov	w0, #0x28                  	// #40
  410850:	bl	417280 <ferror@plt+0x14730>
  410854:	ldrb	w21, [x0, #8]
  410858:	mov	x20, x0
  41085c:	str	wzr, [x0, #24]
  410860:	mov	x0, x19
  410864:	bl	4175c4 <ferror@plt+0x14a74>
  410868:	and	w8, w21, #0xe0
  41086c:	orr	w8, w8, #0x1
  410870:	str	x0, [x20, #16]
  410874:	str	wzr, [x20, #12]
  410878:	strb	w8, [x20, #8]
  41087c:	ldr	x8, [x24]
  410880:	mov	x23, xzr
  410884:	str	x8, [x20]
  410888:	str	x20, [x24]
  41088c:	b	41089c <ferror@plt+0xdd4c>
  410890:	mov	x23, xzr
  410894:	b	41089c <ferror@plt+0xdd4c>
  410898:	mov	x23, x21
  41089c:	mov	x0, x23
  4108a0:	ldp	x20, x19, [sp, #48]
  4108a4:	ldp	x22, x21, [sp, #32]
  4108a8:	ldp	x24, x23, [sp, #16]
  4108ac:	ldp	x29, x30, [sp], #64
  4108b0:	ret
  4108b4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4108b8:	ldr	w0, [x8, #1192]
  4108bc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4108c0:	add	x2, x2, #0x6c4
  4108c4:	mov	w1, wzr
  4108c8:	bl	402c5c <ferror@plt+0x10c>
  4108cc:	bl	402860 <abort@plt>
  4108d0:	stp	x29, x30, [sp, #-64]!
  4108d4:	stp	x22, x21, [sp, #32]
  4108d8:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4108dc:	ldr	x8, [x21, #872]
  4108e0:	stp	x24, x23, [sp, #16]
  4108e4:	stp	x20, x19, [sp, #48]
  4108e8:	mov	x29, sp
  4108ec:	cbz	x8, 410938 <ferror@plt+0xdde8>
  4108f0:	mov	x19, x1
  4108f4:	mov	x20, x0
  4108f8:	mov	x22, xzr
  4108fc:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  410900:	b	410910 <ferror@plt+0xddc0>
  410904:	add	x22, x22, #0x1
  410908:	cmp	x22, x8
  41090c:	b.cs	410938 <ferror@plt+0xdde8>  // b.hs, b.nlast
  410910:	ldr	x9, [x23, #3584]
  410914:	ldr	x0, [x9, x22, lsl #3]
  410918:	cbz	x0, 410904 <ferror@plt+0xddb4>
  41091c:	ldr	x24, [x0]
  410920:	mov	x1, x19
  410924:	blr	x20
  410928:	mov	x0, x24
  41092c:	cbnz	x24, 41091c <ferror@plt+0xddcc>
  410930:	ldr	x8, [x21, #872]
  410934:	b	410904 <ferror@plt+0xddb4>
  410938:	ldp	x20, x19, [sp, #48]
  41093c:	ldp	x22, x21, [sp, #32]
  410940:	ldp	x24, x23, [sp, #16]
  410944:	ldp	x29, x30, [sp], #64
  410948:	ret
  41094c:	stp	x29, x30, [sp, #-32]!
  410950:	mov	x29, sp
  410954:	str	xzr, [x29, #24]
  410958:	str	x19, [sp, #16]
  41095c:	mov	x19, x0
  410960:	ldr	x0, [x0, #24]
  410964:	cbz	x0, 41097c <ferror@plt+0xde2c>
  410968:	add	x2, x29, #0x18
  41096c:	mov	x1, xzr
  410970:	bl	41099c <ferror@plt+0xde4c>
  410974:	ldr	x8, [x29, #24]
  410978:	b	410980 <ferror@plt+0xde30>
  41097c:	mov	x8, xzr
  410980:	ldr	x9, [x19, #32]
  410984:	cmp	x9, x8
  410988:	b.ne	410998 <ferror@plt+0xde48>  // b.any
  41098c:	ldr	x19, [sp, #16]
  410990:	ldp	x29, x30, [sp], #32
  410994:	ret
  410998:	bl	402860 <abort@plt>
  41099c:	stp	x29, x30, [sp, #-48]!
  4109a0:	stp	x22, x21, [sp, #16]
  4109a4:	stp	x20, x19, [sp, #32]
  4109a8:	mov	x20, x0
  4109ac:	ldr	x0, [x0]
  4109b0:	mov	x19, x2
  4109b4:	mov	x22, x1
  4109b8:	mov	x29, sp
  4109bc:	cbz	x0, 410a34 <ferror@plt+0xdee4>
  4109c0:	mov	x1, x20
  4109c4:	mov	x2, x19
  4109c8:	bl	41099c <ferror@plt+0xde4c>
  4109cc:	mov	w21, w0
  4109d0:	ldr	x0, [x20, #8]
  4109d4:	cbz	x0, 4109e4 <ferror@plt+0xde94>
  4109d8:	mov	x1, x20
  4109dc:	mov	x2, x19
  4109e0:	bl	41099c <ferror@plt+0xde4c>
  4109e4:	ldr	x8, [x20, #16]
  4109e8:	cmp	x8, x22
  4109ec:	b.ne	410a44 <ferror@plt+0xdef4>  // b.any
  4109f0:	sub	w8, w0, w21
  4109f4:	add	w9, w8, #0x1
  4109f8:	cmp	w9, #0x3
  4109fc:	b.cs	410a44 <ferror@plt+0xdef4>  // b.hs, b.nlast
  410a00:	ldr	w9, [x20, #24]
  410a04:	cmp	w9, w8
  410a08:	b.ne	410a44 <ferror@plt+0xdef4>  // b.any
  410a0c:	ldr	x8, [x19]
  410a10:	cmp	w0, w21
  410a14:	csel	w9, w21, w0, cc  // cc = lo, ul, last
  410a18:	add	w0, w9, #0x1
  410a1c:	add	x8, x8, #0x1
  410a20:	str	x8, [x19]
  410a24:	ldp	x20, x19, [sp, #32]
  410a28:	ldp	x22, x21, [sp, #16]
  410a2c:	ldp	x29, x30, [sp], #48
  410a30:	ret
  410a34:	mov	w21, wzr
  410a38:	ldr	x0, [x20, #8]
  410a3c:	cbnz	x0, 4109d8 <ferror@plt+0xde88>
  410a40:	b	4109e4 <ferror@plt+0xde94>
  410a44:	bl	402860 <abort@plt>
  410a48:	stp	x29, x30, [sp, #-48]!
  410a4c:	str	x21, [sp, #16]
  410a50:	mov	x21, x0
  410a54:	mov	w0, #0x28                  	// #40
  410a58:	stp	x20, x19, [sp, #32]
  410a5c:	mov	x29, sp
  410a60:	mov	x19, x2
  410a64:	mov	x20, x1
  410a68:	bl	4026a0 <malloc@plt>
  410a6c:	cbz	x0, 410a7c <ferror@plt+0xdf2c>
  410a70:	stp	x21, x20, [x0]
  410a74:	stp	xzr, xzr, [x0, #24]
  410a78:	str	x19, [x0, #16]
  410a7c:	ldp	x20, x19, [sp, #32]
  410a80:	ldr	x21, [sp, #16]
  410a84:	ldp	x29, x30, [sp], #48
  410a88:	ret
  410a8c:	ldr	x0, [x0, #32]
  410a90:	ret
  410a94:	stp	x29, x30, [sp, #-48]!
  410a98:	stp	x20, x19, [sp, #32]
  410a9c:	ldr	x20, [x0, #24]
  410aa0:	str	x21, [sp, #16]
  410aa4:	mov	x29, sp
  410aa8:	cbz	x20, 410af8 <ferror@plt+0xdfa8>
  410aac:	ldr	x21, [x0, #8]
  410ab0:	mov	x19, x1
  410ab4:	b	410ac4 <ferror@plt+0xdf74>
  410ab8:	add	x20, x20, #0x8
  410abc:	ldr	x20, [x20]
  410ac0:	cbz	x20, 410af8 <ferror@plt+0xdfa8>
  410ac4:	ldr	x0, [x20, #32]
  410ac8:	cbz	x21, 410adc <ferror@plt+0xdf8c>
  410acc:	mov	x1, x19
  410ad0:	blr	x21
  410ad4:	tbz	w0, #31, 410aec <ferror@plt+0xdf9c>
  410ad8:	b	410ab8 <ferror@plt+0xdf68>
  410adc:	cmp	x0, x19
  410ae0:	b.hi	410abc <ferror@plt+0xdf6c>  // b.pmore
  410ae4:	csetm	w0, cc  // cc = lo, ul, last
  410ae8:	tbnz	w0, #31, 410ab8 <ferror@plt+0xdf68>
  410aec:	cbnz	w0, 410abc <ferror@plt+0xdf6c>
  410af0:	mov	w0, #0x1                   	// #1
  410af4:	b	410afc <ferror@plt+0xdfac>
  410af8:	mov	w0, wzr
  410afc:	ldp	x20, x19, [sp, #32]
  410b00:	ldr	x21, [sp, #16]
  410b04:	ldp	x29, x30, [sp], #48
  410b08:	ret
  410b0c:	stp	x29, x30, [sp, #-64]!
  410b10:	stp	x24, x23, [sp, #16]
  410b14:	stp	x22, x21, [sp, #32]
  410b18:	stp	x20, x19, [sp, #48]
  410b1c:	ldr	x22, [x0, #24]
  410b20:	mov	x29, sp
  410b24:	cbz	x22, 410b4c <ferror@plt+0xdffc>
  410b28:	mov	x19, x3
  410b2c:	mov	x20, x2
  410b30:	mov	x21, x1
  410b34:	ldr	x0, [x22, #32]
  410b38:	mov	x1, x20
  410b3c:	blr	x21
  410b40:	tbnz	w0, #0, 410b54 <ferror@plt+0xe004>
  410b44:	ldr	x22, [x22, #8]
  410b48:	cbnz	x22, 410b34 <ferror@plt+0xdfe4>
  410b4c:	mov	w0, wzr
  410b50:	b	410b8c <ferror@plt+0xe03c>
  410b54:	ldr	x23, [x22]
  410b58:	cbz	x23, 410b80 <ferror@plt+0xe030>
  410b5c:	mov	w24, #0x8                   	// #8
  410b60:	ldr	x0, [x23, #32]
  410b64:	mov	x1, x20
  410b68:	blr	x21
  410b6c:	tst	w0, #0x1
  410b70:	csel	x8, xzr, x24, ne  // ne = any
  410b74:	csel	x22, x23, x22, ne  // ne = any
  410b78:	ldr	x23, [x23, x8]
  410b7c:	cbnz	x23, 410b60 <ferror@plt+0xe010>
  410b80:	ldr	x8, [x22, #32]
  410b84:	mov	w0, #0x1                   	// #1
  410b88:	str	x8, [x19]
  410b8c:	ldp	x20, x19, [sp, #48]
  410b90:	ldp	x22, x21, [sp, #32]
  410b94:	ldp	x24, x23, [sp, #16]
  410b98:	ldp	x29, x30, [sp], #64
  410b9c:	ret
  410ba0:	stp	x29, x30, [sp, #-48]!
  410ba4:	stp	x22, x21, [sp, #16]
  410ba8:	stp	x20, x19, [sp, #32]
  410bac:	ldr	x8, [x0, #24]
  410bb0:	mov	x19, x0
  410bb4:	mov	x21, x1
  410bb8:	mov	x29, sp
  410bbc:	cbz	x8, 410c38 <ferror@plt+0xe0e8>
  410bc0:	ldr	x22, [x19, #8]
  410bc4:	b	410bd0 <ferror@plt+0xe080>
  410bc8:	ldr	x8, [x20, #8]
  410bcc:	cbz	x8, 410c5c <ferror@plt+0xe10c>
  410bd0:	ldr	x0, [x8, #32]
  410bd4:	mov	x20, x8
  410bd8:	cbz	x22, 410bec <ferror@plt+0xe09c>
  410bdc:	mov	x1, x21
  410be0:	blr	x22
  410be4:	tbz	w0, #31, 410bfc <ferror@plt+0xe0ac>
  410be8:	b	410bc8 <ferror@plt+0xe078>
  410bec:	cmp	x0, x21
  410bf0:	b.hi	410c00 <ferror@plt+0xe0b0>  // b.pmore
  410bf4:	csetm	w0, cc  // cc = lo, ul, last
  410bf8:	tbnz	w0, #31, 410bc8 <ferror@plt+0xe078>
  410bfc:	cbz	w0, 410cf0 <ferror@plt+0xe1a0>
  410c00:	ldr	x8, [x20]
  410c04:	cbnz	x8, 410bd0 <ferror@plt+0xe080>
  410c08:	mov	w0, #0x28                  	// #40
  410c0c:	bl	4026a0 <malloc@plt>
  410c10:	cbz	x0, 410ca0 <ferror@plt+0xe150>
  410c14:	str	wzr, [x0, #24]
  410c18:	stp	xzr, xzr, [x0]
  410c1c:	str	x21, [x0, #32]
  410c20:	ldr	x8, [x20]
  410c24:	cbz	x8, 410c88 <ferror@plt+0xe138>
  410c28:	mov	x20, x8
  410c2c:	ldr	x8, [x8, #8]
  410c30:	cbnz	x8, 410c28 <ferror@plt+0xe0d8>
  410c34:	b	410ca8 <ferror@plt+0xe158>
  410c38:	mov	w0, #0x28                  	// #40
  410c3c:	bl	4026a0 <malloc@plt>
  410c40:	cbz	x0, 410ca0 <ferror@plt+0xe150>
  410c44:	str	wzr, [x0, #24]
  410c48:	stp	xzr, xzr, [x0]
  410c4c:	str	x21, [x0, #32]
  410c50:	str	x0, [x19, #24]
  410c54:	str	xzr, [x0, #16]
  410c58:	b	410ce0 <ferror@plt+0xe190>
  410c5c:	mov	w0, #0x28                  	// #40
  410c60:	bl	4026a0 <malloc@plt>
  410c64:	cbz	x0, 410ca0 <ferror@plt+0xe150>
  410c68:	str	wzr, [x0, #24]
  410c6c:	stp	xzr, xzr, [x0]
  410c70:	str	x21, [x0, #32]
  410c74:	ldr	x8, [x20, #8]
  410c78:	cbz	x8, 410ca8 <ferror@plt+0xe158>
  410c7c:	mov	x20, x8
  410c80:	ldr	x8, [x8]
  410c84:	cbnz	x8, 410c7c <ferror@plt+0xe12c>
  410c88:	ldr	w8, [x20, #24]
  410c8c:	str	x0, [x20]
  410c90:	sub	w8, w8, #0x1
  410c94:	str	w8, [x20, #24]
  410c98:	add	x8, x20, #0x8
  410c9c:	b	410cbc <ferror@plt+0xe16c>
  410ca0:	mov	w0, #0xffffffff            	// #-1
  410ca4:	b	410cf0 <ferror@plt+0xe1a0>
  410ca8:	ldr	w8, [x20, #24]
  410cac:	str	x0, [x20, #8]
  410cb0:	add	w8, w8, #0x1
  410cb4:	str	w8, [x20, #24]
  410cb8:	mov	x8, x20
  410cbc:	ldr	x8, [x8]
  410cc0:	str	x20, [x0, #16]
  410cc4:	cbnz	x8, 410ce0 <ferror@plt+0xe190>
  410cc8:	ldr	x3, [x20, #16]
  410ccc:	cbz	x3, 410ce0 <ferror@plt+0xe190>
  410cd0:	mov	w2, #0x1                   	// #1
  410cd4:	mov	x0, x19
  410cd8:	mov	x1, x20
  410cdc:	bl	410fec <ferror@plt+0xe49c>
  410ce0:	ldr	x8, [x19, #32]
  410ce4:	mov	w0, #0x1                   	// #1
  410ce8:	add	x8, x8, #0x1
  410cec:	str	x8, [x19, #32]
  410cf0:	ldp	x20, x19, [sp, #32]
  410cf4:	ldp	x22, x21, [sp, #16]
  410cf8:	ldp	x29, x30, [sp], #48
  410cfc:	ret
  410d00:	stp	x29, x30, [sp, #-64]!
  410d04:	str	x23, [sp, #16]
  410d08:	stp	x22, x21, [sp, #32]
  410d0c:	stp	x20, x19, [sp, #48]
  410d10:	mov	x22, x0
  410d14:	ldr	x19, [x22, #24]!
  410d18:	mov	x29, sp
  410d1c:	cbz	x19, 410d6c <ferror@plt+0xe21c>
  410d20:	ldur	x23, [x22, #-16]
  410d24:	mov	x20, x0
  410d28:	mov	x21, x1
  410d2c:	b	410d3c <ferror@plt+0xe1ec>
  410d30:	cbz	w0, 410d74 <ferror@plt+0xe224>
  410d34:	ldr	x19, [x19]
  410d38:	cbz	x19, 410d6c <ferror@plt+0xe21c>
  410d3c:	ldr	x0, [x19, #32]
  410d40:	cbz	x23, 410d54 <ferror@plt+0xe204>
  410d44:	mov	x1, x21
  410d48:	blr	x23
  410d4c:	tbz	w0, #31, 410d30 <ferror@plt+0xe1e0>
  410d50:	b	410d64 <ferror@plt+0xe214>
  410d54:	cmp	x0, x21
  410d58:	b.hi	410d34 <ferror@plt+0xe1e4>  // b.pmore
  410d5c:	csetm	w0, cc  // cc = lo, ul, last
  410d60:	tbz	w0, #31, 410d30 <ferror@plt+0xe1e0>
  410d64:	add	x19, x19, #0x8
  410d68:	b	410d34 <ferror@plt+0xe1e4>
  410d6c:	mov	w0, wzr
  410d70:	b	410e78 <ferror@plt+0xe328>
  410d74:	ldp	x8, x3, [x19, #8]
  410d78:	ldr	x1, [x19]
  410d7c:	cbz	x1, 410e00 <ferror@plt+0xe2b0>
  410d80:	cbz	x8, 410e2c <ferror@plt+0xe2dc>
  410d84:	mov	x9, x1
  410d88:	mov	x10, x9
  410d8c:	ldr	x9, [x9, #8]
  410d90:	cbnz	x9, 410d88 <ferror@plt+0xe238>
  410d94:	ldr	x11, [x10, #16]
  410d98:	ldr	x9, [x10]
  410d9c:	cmp	x11, x19
  410da0:	b.eq	410dbc <ferror@plt+0xe26c>  // b.none
  410da4:	cbz	x9, 410dac <ferror@plt+0xe25c>
  410da8:	str	x11, [x9, #16]
  410dac:	str	x9, [x11, #8]
  410db0:	str	x1, [x10]
  410db4:	str	x10, [x1, #16]
  410db8:	ldr	x8, [x19, #8]
  410dbc:	str	x8, [x10, #8]
  410dc0:	str	x10, [x8, #16]
  410dc4:	ldr	w8, [x19, #24]
  410dc8:	str	x3, [x10, #16]
  410dcc:	str	w8, [x10, #24]
  410dd0:	cbz	x3, 410de4 <ferror@plt+0xe294>
  410dd4:	mov	x8, x3
  410dd8:	ldr	x12, [x8], #8
  410ddc:	cmp	x12, x19
  410de0:	csel	x22, x3, x8, eq  // eq = none
  410de4:	cmp	x11, x19
  410de8:	str	x10, [x22]
  410dec:	csel	x3, x11, x10, ne  // ne = any
  410df0:	mov	w2, #0xffffffff            	// #-1
  410df4:	mov	x0, x20
  410df8:	mov	x1, x9
  410dfc:	b	410e4c <ferror@plt+0xe2fc>
  410e00:	cbz	x8, 410e08 <ferror@plt+0xe2b8>
  410e04:	str	x3, [x8, #16]
  410e08:	cbz	x3, 410e8c <ferror@plt+0xe33c>
  410e0c:	ldr	x9, [x3]
  410e10:	mov	w2, #0xffffffff            	// #-1
  410e14:	mov	x0, x20
  410e18:	mov	x1, x8
  410e1c:	cmp	x9, x19
  410e20:	cset	w9, ne  // ne = any
  410e24:	str	x8, [x3, w9, uxtw #3]
  410e28:	b	410e4c <ferror@plt+0xe2fc>
  410e2c:	str	x3, [x1, #16]
  410e30:	cbz	x3, 410e94 <ferror@plt+0xe344>
  410e34:	ldr	x8, [x3]
  410e38:	mov	w2, #0xffffffff            	// #-1
  410e3c:	mov	x0, x20
  410e40:	cmp	x8, x19
  410e44:	cset	w8, ne  // ne = any
  410e48:	str	x1, [x3, w8, uxtw #3]
  410e4c:	bl	410fec <ferror@plt+0xe49c>
  410e50:	ldr	x9, [x20, #32]
  410e54:	ldr	x8, [x20, #16]
  410e58:	sub	x9, x9, #0x1
  410e5c:	str	x9, [x20, #32]
  410e60:	cbz	x8, 410e6c <ferror@plt+0xe31c>
  410e64:	ldr	x0, [x19, #32]
  410e68:	blr	x8
  410e6c:	mov	x0, x19
  410e70:	bl	402930 <free@plt>
  410e74:	mov	w0, #0x1                   	// #1
  410e78:	ldp	x20, x19, [sp, #48]
  410e7c:	ldp	x22, x21, [sp, #32]
  410e80:	ldr	x23, [sp, #16]
  410e84:	ldp	x29, x30, [sp], #64
  410e88:	ret
  410e8c:	str	x8, [x22]
  410e90:	b	410e50 <ferror@plt+0xe300>
  410e94:	str	x1, [x22]
  410e98:	b	410e50 <ferror@plt+0xe300>
  410e9c:	stp	x29, x30, [sp, #-80]!
  410ea0:	stp	x28, x25, [sp, #16]
  410ea4:	stp	x24, x23, [sp, #32]
  410ea8:	stp	x22, x21, [sp, #48]
  410eac:	stp	x20, x19, [sp, #64]
  410eb0:	mov	x29, sp
  410eb4:	sub	sp, sp, #0x530
  410eb8:	ldr	x8, [x0, #24]
  410ebc:	mov	x9, sp
  410ec0:	mov	x19, x0
  410ec4:	mov	x21, xzr
  410ec8:	add	x22, x9, #0x8
  410ecc:	sub	x23, x9, #0x8
  410ed0:	mov	w24, #0x1                   	// #1
  410ed4:	cbz	x8, 410ef0 <ferror@plt+0xe3a0>
  410ed8:	add	x9, x22, x21, lsl #4
  410edc:	stur	x8, [x9, #-8]
  410ee0:	strb	wzr, [x9], #16
  410ee4:	ldr	x8, [x8]
  410ee8:	add	x21, x21, #0x1
  410eec:	cbnz	x8, 410edc <ferror@plt+0xe38c>
  410ef0:	cbz	x21, 410f40 <ferror@plt+0xe3f0>
  410ef4:	add	x25, x23, x21, lsl #4
  410ef8:	b	410f0c <ferror@plt+0xe3bc>
  410efc:	mov	x0, x20
  410f00:	bl	402930 <free@plt>
  410f04:	sub	x25, x25, #0x10
  410f08:	cbz	x21, 410f40 <ferror@plt+0xe3f0>
  410f0c:	ldrb	w8, [x25]
  410f10:	ldur	x20, [x25, #-8]
  410f14:	cbz	w8, 410f30 <ferror@plt+0xe3e0>
  410f18:	ldr	x8, [x19, #16]
  410f1c:	sub	x21, x21, #0x1
  410f20:	cbz	x8, 410efc <ferror@plt+0xe3ac>
  410f24:	ldr	x0, [x20, #32]
  410f28:	blr	x8
  410f2c:	b	410efc <ferror@plt+0xe3ac>
  410f30:	strb	w24, [x25]
  410f34:	ldr	x8, [x20, #8]
  410f38:	cbnz	x8, 410ed8 <ferror@plt+0xe388>
  410f3c:	b	410ef0 <ferror@plt+0xe3a0>
  410f40:	mov	x0, x19
  410f44:	add	sp, sp, #0x530
  410f48:	ldp	x20, x19, [sp, #64]
  410f4c:	ldp	x22, x21, [sp, #48]
  410f50:	ldp	x24, x23, [sp, #32]
  410f54:	ldp	x28, x25, [sp, #16]
  410f58:	ldp	x29, x30, [sp], #80
  410f5c:	b	402930 <free@plt>
  410f60:	ldr	x9, [x0]
  410f64:	stp	x9, x0, [x8]
  410f68:	ldr	x9, [x0, #24]
  410f6c:	cbz	x9, 410f84 <ferror@plt+0xe434>
  410f70:	mov	x10, x9
  410f74:	ldr	x9, [x9]
  410f78:	cbnz	x9, 410f70 <ferror@plt+0xe420>
  410f7c:	stp	x10, xzr, [x8, #24]
  410f80:	ret
  410f84:	mov	x10, xzr
  410f88:	stp	x10, xzr, [x8, #24]
  410f8c:	ret
  410f90:	ldp	x8, x9, [x0, #24]
  410f94:	cmp	x8, x9
  410f98:	b.eq	410fe0 <ferror@plt+0xe490>  // b.none
  410f9c:	ldr	x9, [x8, #32]
  410fa0:	str	x9, [x1]
  410fa4:	ldr	x10, [x8, #8]
  410fa8:	cbz	x10, 410fbc <ferror@plt+0xe46c>
  410fac:	mov	x9, x10
  410fb0:	ldr	x10, [x10]
  410fb4:	cbnz	x10, 410fac <ferror@plt+0xe45c>
  410fb8:	b	410fd4 <ferror@plt+0xe484>
  410fbc:	ldr	x9, [x8, #16]
  410fc0:	cbz	x9, 410fd4 <ferror@plt+0xe484>
  410fc4:	ldr	x10, [x9, #8]
  410fc8:	cmp	x10, x8
  410fcc:	mov	x8, x9
  410fd0:	b.eq	410fbc <ferror@plt+0xe46c>  // b.none
  410fd4:	str	x9, [x0, #24]
  410fd8:	mov	w0, #0x1                   	// #1
  410fdc:	ret
  410fe0:	mov	w0, wzr
  410fe4:	ret
  410fe8:	ret
  410fec:	stp	x29, x30, [sp, #-16]!
  410ff0:	add	x8, x0, #0x18
  410ff4:	mov	w9, #0x1                   	// #1
  410ff8:	mov	x29, sp
  410ffc:	mov	x10, x1
  411000:	ldp	x1, x11, [x3]
  411004:	ldr	w13, [x3, #24]
  411008:	cmp	x10, x11
  41100c:	orr	x12, x1, x11
  411010:	cneg	w10, w2, ne  // ne = any
  411014:	cmp	x12, #0x0
  411018:	csneg	w12, w10, w13, ne  // ne = any
  41101c:	add	w10, w12, w13
  411020:	cmp	w12, w13
  411024:	str	w10, [x3, #24]
  411028:	b.ne	4110a8 <ferror@plt+0xe558>  // b.any
  41102c:	ldr	x12, [x3, #16]
  411030:	mov	x10, x8
  411034:	cbz	x12, 411054 <ferror@plt+0xe504>
  411038:	ldr	x10, [x12]
  41103c:	cmp	x10, x3
  411040:	b.eq	4110d4 <ferror@plt+0xe584>  // b.none
  411044:	mov	x10, x12
  411048:	ldr	x14, [x10, #8]!
  41104c:	cmp	x14, x3
  411050:	b.ne	4111e4 <ferror@plt+0xe694>  // b.any
  411054:	tbnz	w13, #31, 4110dc <ferror@plt+0xe58c>
  411058:	ldr	w13, [x11, #24]
  41105c:	ldr	x1, [x11]
  411060:	tbnz	w13, #31, 41114c <ferror@plt+0xe5fc>
  411064:	str	x1, [x3, #8]
  411068:	str	x3, [x11]
  41106c:	str	x12, [x11, #16]
  411070:	str	x11, [x3, #16]
  411074:	cbz	x1, 41107c <ferror@plt+0xe52c>
  411078:	str	x3, [x1, #16]
  41107c:	sub	w12, w13, #0x1
  411080:	sub	w13, w9, w13
  411084:	str	w12, [x11, #24]
  411088:	str	w13, [x3, #24]
  41108c:	str	x11, [x10]
  411090:	ldr	w10, [x11, #24]
  411094:	cmp	w2, #0x0
  411098:	mov	x1, x11
  41109c:	neg	w12, w10
  4110a0:	csinv	w2, w12, w10, ge  // ge = tcont
  4110a4:	b	4110c4 <ferror@plt+0xe574>
  4110a8:	tbnz	w2, #31, 4110b8 <ferror@plt+0xe568>
  4110ac:	cmp	w10, #0x0
  4110b0:	cset	w2, ne  // ne = any
  4110b4:	b	4110c0 <ferror@plt+0xe570>
  4110b8:	cmp	w13, #0x0
  4110bc:	csetm	w2, ne  // ne = any
  4110c0:	mov	x1, x3
  4110c4:	cbz	w2, 4111dc <ferror@plt+0xe68c>
  4110c8:	ldr	x3, [x1, #16]
  4110cc:	cbnz	x3, 410ffc <ferror@plt+0xe4ac>
  4110d0:	b	4111dc <ferror@plt+0xe68c>
  4110d4:	mov	x10, x12
  4110d8:	tbz	w13, #31, 411058 <ferror@plt+0xe508>
  4110dc:	ldr	w13, [x1, #24]
  4110e0:	ldr	x11, [x1, #8]
  4110e4:	cmp	w13, #0x0
  4110e8:	b.le	4111a8 <ferror@plt+0xe658>
  4110ec:	ldr	x14, [x11]
  4110f0:	str	x14, [x1, #8]
  4110f4:	ldr	x13, [x11, #8]
  4110f8:	str	x13, [x3]
  4110fc:	stp	x1, x3, [x11]
  411100:	str	x12, [x11, #16]
  411104:	cbz	x14, 41110c <ferror@plt+0xe5bc>
  411108:	str	x1, [x14, #16]
  41110c:	cbz	x13, 411114 <ferror@plt+0xe5c4>
  411110:	str	x3, [x13, #16]
  411114:	str	x11, [x1, #16]
  411118:	str	x11, [x3, #16]
  41111c:	ldr	w12, [x11, #24]
  411120:	asr	w2, w2, #31
  411124:	cmp	w12, #0x0
  411128:	csetm	w12, gt
  41112c:	str	w12, [x1, #24]
  411130:	ldr	w12, [x11, #24]
  411134:	mov	x1, x11
  411138:	lsr	w12, w12, #31
  41113c:	str	w12, [x3, #24]
  411140:	str	wzr, [x11, #24]
  411144:	str	x11, [x10]
  411148:	b	4110c4 <ferror@plt+0xe574>
  41114c:	ldr	x14, [x1]
  411150:	str	x14, [x3, #8]
  411154:	ldr	x13, [x1, #8]
  411158:	str	x13, [x11]
  41115c:	stp	x3, x11, [x1]
  411160:	str	x12, [x1, #16]
  411164:	cbz	x14, 41116c <ferror@plt+0xe61c>
  411168:	str	x3, [x14, #16]
  41116c:	cbz	x13, 411174 <ferror@plt+0xe624>
  411170:	str	x11, [x13, #16]
  411174:	str	x1, [x3, #16]
  411178:	str	x1, [x11, #16]
  41117c:	ldr	w12, [x1, #24]
  411180:	asr	w2, w2, #31
  411184:	cmp	w12, #0x0
  411188:	csetm	w12, gt
  41118c:	str	w12, [x3, #24]
  411190:	ldr	w12, [x1, #24]
  411194:	lsr	w12, w12, #31
  411198:	str	w12, [x11, #24]
  41119c:	str	wzr, [x1, #24]
  4111a0:	str	x1, [x10]
  4111a4:	b	4110c4 <ferror@plt+0xe574>
  4111a8:	str	x11, [x3]
  4111ac:	stp	x3, x12, [x1, #8]
  4111b0:	str	x1, [x3, #16]
  4111b4:	cbz	x11, 4111bc <ferror@plt+0xe66c>
  4111b8:	str	x3, [x11, #16]
  4111bc:	add	w11, w13, #0x1
  4111c0:	mvn	w12, w13
  4111c4:	str	w11, [x1, #24]
  4111c8:	str	w12, [x3, #24]
  4111cc:	str	x1, [x10]
  4111d0:	ldr	w10, [x1, #24]
  4111d4:	add	w2, w10, w2, asr #31
  4111d8:	b	4110c4 <ferror@plt+0xe574>
  4111dc:	ldp	x29, x30, [sp], #16
  4111e0:	ret
  4111e4:	bl	402860 <abort@plt>
  4111e8:	sub	sp, sp, #0xd0
  4111ec:	stp	x29, x30, [sp, #176]
  4111f0:	add	x29, sp, #0xb0
  4111f4:	adrp	x8, 431000 <__progname@@GLIBC_2.17+0x3bc8>
  4111f8:	str	x19, [sp, #192]
  4111fc:	mov	x19, x0
  411200:	add	x8, x8, #0xb40
  411204:	mov	w9, #0x4000                	// #16384
  411208:	sub	x0, x29, #0x18
  41120c:	mov	x1, xzr
  411210:	stur	wzr, [x29, #-16]
  411214:	stur	x8, [x29, #-24]
  411218:	stur	x9, [x29, #-8]
  41121c:	bl	4024d0 <sigaltstack@plt>
  411220:	cbnz	w0, 411290 <ferror@plt+0xe740>
  411224:	adrp	x8, 411000 <ferror@plt+0xe4b0>
  411228:	add	x8, x8, #0x2a0
  41122c:	cmp	x19, #0x0
  411230:	adrp	x11, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411234:	adrp	x13, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411238:	mov	x14, sp
  41123c:	adrp	x9, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411240:	adrp	x10, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411244:	add	x11, x11, #0x748
  411248:	adrp	x12, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41124c:	add	x13, x13, #0x756
  411250:	csel	x8, x8, x19, eq  // eq = none
  411254:	add	x0, x14, #0x8
  411258:	str	x8, [x9, #2880]
  41125c:	str	x11, [x10, #2888]
  411260:	str	x13, [x12, #2896]
  411264:	bl	4026e0 <sigemptyset@plt>
  411268:	mov	w8, #0x4                   	// #4
  41126c:	adrp	x9, 411000 <ferror@plt+0xe4b0>
  411270:	movk	w8, #0xc800, lsl #16
  411274:	add	x9, x9, #0x2a4
  411278:	mov	x1, sp
  41127c:	mov	w0, #0xb                   	// #11
  411280:	mov	x2, xzr
  411284:	str	w8, [sp, #136]
  411288:	str	x9, [sp]
  41128c:	bl	402800 <sigaction@plt>
  411290:	ldr	x19, [sp, #192]
  411294:	ldp	x29, x30, [sp, #176]
  411298:	add	sp, sp, #0xd0
  41129c:	ret
  4112a0:	ret
  4112a4:	stp	x29, x30, [sp, #-16]!
  4112a8:	mov	x29, sp
  4112ac:	bl	4112b0 <ferror@plt+0xe760>
  4112b0:	stp	x29, x30, [sp, #-32]!
  4112b4:	stp	x20, x19, [sp, #16]
  4112b8:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4112bc:	ldr	x8, [x8, #2880]
  4112c0:	mov	w0, wzr
  4112c4:	mov	x29, sp
  4112c8:	blr	x8
  4112cc:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4112d0:	ldr	x19, [x8, #2896]
  4112d4:	bl	412f78 <ferror@plt+0x10428>
  4112d8:	mov	x20, x0
  4112dc:	bl	4024f0 <strlen@plt>
  4112e0:	mov	x2, x0
  4112e4:	mov	w0, #0x2                   	// #2
  4112e8:	mov	x1, x20
  4112ec:	bl	402830 <write@plt>
  4112f0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4112f4:	add	x1, x1, #0xb01
  4112f8:	mov	w0, #0x2                   	// #2
  4112fc:	mov	w2, #0x2                   	// #2
  411300:	bl	402830 <write@plt>
  411304:	mov	x0, x19
  411308:	bl	4024f0 <strlen@plt>
  41130c:	mov	x2, x0
  411310:	mov	w0, #0x2                   	// #2
  411314:	mov	x1, x19
  411318:	bl	402830 <write@plt>
  41131c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  411320:	add	x1, x1, #0x371
  411324:	mov	w0, #0x2                   	// #2
  411328:	mov	w2, #0x1                   	// #1
  41132c:	bl	402830 <write@plt>
  411330:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  411334:	ldr	w0, [x8, #884]
  411338:	bl	4024e0 <_exit@plt>
  41133c:	sub	sp, sp, #0x60
  411340:	stp	x29, x30, [sp, #16]
  411344:	stp	x26, x25, [sp, #32]
  411348:	stp	x24, x23, [sp, #48]
  41134c:	stp	x22, x21, [sp, #64]
  411350:	stp	x20, x19, [sp, #80]
  411354:	adrp	x9, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411358:	ldr	x10, [x9, #2912]
  41135c:	mov	w21, w2
  411360:	mov	x20, x1
  411364:	mov	x19, x0
  411368:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41136c:	add	x29, sp, #0x10
  411370:	cbz	x10, 4113a8 <ferror@plt+0xe858>
  411374:	mov	x10, xzr
  411378:	ldr	x11, [x8, #2904]
  41137c:	ldr	x11, [x11, x10, lsl #3]
  411380:	cbz	x11, 411398 <ferror@plt+0xe848>
  411384:	ldr	x11, [x9, #2912]
  411388:	add	x10, x10, #0x1
  41138c:	cmp	x10, x11
  411390:	b.cc	411378 <ferror@plt+0xe828>  // b.lo, b.ul, b.last
  411394:	b	4113a8 <ferror@plt+0xe858>
  411398:	ldr	x9, [x8, #2904]
  41139c:	cbz	x9, 4113a8 <ferror@plt+0xe858>
  4113a0:	add	x23, x9, x10, lsl #3
  4113a4:	b	411488 <ferror@plt+0xe938>
  4113a8:	adrp	x9, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4113ac:	add	x9, x9, #0xb60
  4113b0:	ldr	x26, [x9]
  4113b4:	ldr	x9, [x9, #8]
  4113b8:	adrp	x25, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4113bc:	add	x25, x25, #0xb58
  4113c0:	cmp	x26, x9
  4113c4:	b.ne	41146c <ferror@plt+0xe91c>  // b.any
  4113c8:	ldr	x22, [x8, #2904]
  4113cc:	mov	w23, #0x1                   	// #1
  4113d0:	bfi	x23, x26, #1, #63
  4113d4:	add	x4, sp, #0x8
  4113d8:	mov	w2, #0x8                   	// #8
  4113dc:	mov	x0, x23
  4113e0:	mov	x1, xzr
  4113e4:	mov	x3, xzr
  4113e8:	str	xzr, [sp, #8]
  4113ec:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  4113f0:	ldr	x8, [sp, #8]
  4113f4:	sbfx	x9, x1, #0, #1
  4113f8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4113fc:	eor	x9, x9, x1
  411400:	cmn	x0, x10
  411404:	orr	x9, x9, x8
  411408:	adcs	x8, x1, xzr
  41140c:	cbnz	x9, 4115c8 <ferror@plt+0xea78>
  411410:	sbfx	x8, x8, #0, #1
  411414:	tbnz	x8, #63, 4115c8 <ferror@plt+0xea78>
  411418:	lsl	x0, x23, #3
  41141c:	bl	417280 <ferror@plt+0x14730>
  411420:	mov	x24, x0
  411424:	cbz	x26, 41144c <ferror@plt+0xe8fc>
  411428:	mov	x8, x22
  41142c:	mov	x9, x24
  411430:	ldr	x10, [x8], #8
  411434:	subs	x26, x26, #0x1
  411438:	str	x10, [x9], #8
  41143c:	b.ne	411430 <ferror@plt+0xe8e0>  // b.any
  411440:	str	x24, [x25]
  411444:	str	x23, [x25, #16]
  411448:	b	411464 <ferror@plt+0xe914>
  41144c:	adrp	x0, 412000 <ferror@plt+0xf4b0>
  411450:	add	x0, x0, #0xac
  411454:	bl	41271c <ferror@plt+0xfbcc>
  411458:	str	x24, [x25]
  41145c:	str	x23, [x25, #16]
  411460:	cbz	x22, 41146c <ferror@plt+0xe91c>
  411464:	mov	x0, x22
  411468:	bl	402930 <free@plt>
  41146c:	ldr	x8, [x25]
  411470:	ldr	x9, [x25, #8]
  411474:	add	x23, x8, x9, lsl #3
  411478:	str	xzr, [x23]
  41147c:	ldr	x8, [x25, #8]
  411480:	add	x8, x8, #0x1
  411484:	str	x8, [x25, #8]
  411488:	mov	w0, #0x20                  	// #32
  41148c:	and	w24, w21, #0x1
  411490:	bl	417280 <ferror@plt+0x14730>
  411494:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411498:	add	x8, x8, #0x860
  41149c:	ldr	x22, [x8]
  4114a0:	adrp	x1, 411000 <ferror@plt+0xe4b0>
  4114a4:	adrp	x2, 411000 <ferror@plt+0xe4b0>
  4114a8:	mov	x21, x0
  4114ac:	str	xzr, [x0]
  4114b0:	strb	w24, [x0, #8]
  4114b4:	add	x1, x1, #0x5cc
  4114b8:	add	x2, x2, #0x5e8
  4114bc:	mov	x0, x8
  4114c0:	mov	x3, xzr
  4114c4:	mov	w4, wzr
  4114c8:	blr	x22
  4114cc:	cbz	x0, 4115c8 <ferror@plt+0xea78>
  4114d0:	str	x0, [x21, #16]
  4114d4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4114d8:	adrp	x1, 411000 <ferror@plt+0xe4b0>
  4114dc:	adrp	x2, 411000 <ferror@plt+0xe4b0>
  4114e0:	add	x0, x0, #0x860
  4114e4:	add	x1, x1, #0x5cc
  4114e8:	add	x2, x2, #0x5e8
  4114ec:	mov	x3, xzr
  4114f0:	mov	w4, wzr
  4114f4:	blr	x22
  4114f8:	cbz	x0, 4115c8 <ferror@plt+0xea78>
  4114fc:	str	x0, [x21, #24]
  411500:	mov	w0, #0x1000                	// #4096
  411504:	bl	417648 <ferror@plt+0x14af8>
  411508:	cmp	x20, #0x0
  41150c:	cset	w4, eq  // eq = none
  411510:	mov	w1, #0x1000                	// #4096
  411514:	mov	x2, x20
  411518:	mov	x3, x19
  41151c:	mov	x22, x0
  411520:	bl	4164d0 <ferror@plt+0x13980>
  411524:	cbz	w0, 411550 <ferror@plt+0xea00>
  411528:	bl	402ac0 <__errno_location@plt>
  41152c:	ldr	w1, [x0]
  411530:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411534:	add	x2, x2, #0x765
  411538:	mov	w0, wzr
  41153c:	bl	402540 <error@plt>
  411540:	mov	x0, x22
  411544:	bl	414568 <ferror@plt+0x11a18>
  411548:	mov	x21, xzr
  41154c:	b	411584 <ferror@plt+0xea34>
  411550:	bl	412ae4 <ferror@plt+0xff94>
  411554:	mov	x0, x22
  411558:	bl	402840 <mkdtemp@plt>
  41155c:	cbz	x0, 4115a4 <ferror@plt+0xea54>
  411560:	mov	x19, x0
  411564:	str	x0, [x21]
  411568:	str	x21, [x23]
  41156c:	bl	412bec <ferror@plt+0x1009c>
  411570:	mov	x0, x19
  411574:	bl	4175c4 <ferror@plt+0x14a74>
  411578:	str	x0, [x21]
  41157c:	mov	x0, x22
  411580:	bl	414568 <ferror@plt+0x11a18>
  411584:	mov	x0, x21
  411588:	ldp	x20, x19, [sp, #80]
  41158c:	ldp	x22, x21, [sp, #64]
  411590:	ldp	x24, x23, [sp, #48]
  411594:	ldp	x26, x25, [sp, #32]
  411598:	ldp	x29, x30, [sp, #16]
  41159c:	add	sp, sp, #0x60
  4115a0:	ret
  4115a4:	bl	412bec <ferror@plt+0x1009c>
  4115a8:	bl	402ac0 <__errno_location@plt>
  4115ac:	ldr	w1, [x0]
  4115b0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4115b4:	add	x2, x2, #0x79c
  4115b8:	mov	w0, wzr
  4115bc:	mov	x3, x22
  4115c0:	bl	402540 <error@plt>
  4115c4:	b	411540 <ferror@plt+0xe9f0>
  4115c8:	bl	41761c <ferror@plt+0x14acc>
  4115cc:	stp	x29, x30, [sp, #-16]!
  4115d0:	mov	x29, sp
  4115d4:	bl	4028d0 <strcmp@plt>
  4115d8:	cmp	w0, #0x0
  4115dc:	cset	w0, eq  // eq = none
  4115e0:	ldp	x29, x30, [sp], #16
  4115e4:	ret
  4115e8:	ldrb	w9, [x0]
  4115ec:	cbz	w9, 411610 <ferror@plt+0xeac0>
  4115f0:	mov	x8, x0
  4115f4:	mov	x0, xzr
  4115f8:	add	x8, x8, #0x1
  4115fc:	ror	x10, x0, #55
  411600:	add	x0, x10, w9, uxtb
  411604:	ldrb	w9, [x8], #1
  411608:	cbnz	w9, 4115fc <ferror@plt+0xeaac>
  41160c:	ret
  411610:	mov	x0, xzr
  411614:	ret
  411618:	stp	x29, x30, [sp, #-48]!
  41161c:	str	x21, [sp, #16]
  411620:	stp	x20, x19, [sp, #32]
  411624:	ldr	x21, [x0, #24]
  411628:	mov	x19, x0
  41162c:	mov	x29, sp
  411630:	mov	x20, x1
  411634:	ldr	x8, [x21]
  411638:	mov	x0, x21
  41163c:	ldr	x8, [x8, #16]
  411640:	blr	x8
  411644:	ldr	x8, [x21]
  411648:	mov	x2, x0
  41164c:	mov	x0, x21
  411650:	mov	x1, xzr
  411654:	ldr	x8, [x8, #72]
  411658:	mov	x3, x20
  41165c:	blr	x8
  411660:	cbnz	x0, 411688 <ferror@plt+0xeb38>
  411664:	ldr	x19, [x19, #24]
  411668:	mov	x0, x20
  41166c:	bl	4175c4 <ferror@plt+0x14a74>
  411670:	ldr	x8, [x19]
  411674:	mov	x1, x0
  411678:	mov	x0, x19
  41167c:	ldr	x8, [x8, #88]
  411680:	blr	x8
  411684:	cbz	x0, 411698 <ferror@plt+0xeb48>
  411688:	ldp	x20, x19, [sp, #32]
  41168c:	ldr	x21, [sp, #16]
  411690:	ldp	x29, x30, [sp], #48
  411694:	ret
  411698:	bl	41761c <ferror@plt+0x14acc>
  41169c:	stp	x29, x30, [sp, #-48]!
  4116a0:	str	x21, [sp, #16]
  4116a4:	stp	x20, x19, [sp, #32]
  4116a8:	ldr	x19, [x0, #24]
  4116ac:	mov	x29, sp
  4116b0:	mov	x20, x1
  4116b4:	ldr	x8, [x19]
  4116b8:	mov	x0, x19
  4116bc:	ldr	x8, [x8, #16]
  4116c0:	blr	x8
  4116c4:	ldr	x8, [x19]
  4116c8:	mov	x2, x0
  4116cc:	mov	x0, x19
  4116d0:	mov	x1, xzr
  4116d4:	ldr	x8, [x8, #72]
  4116d8:	mov	x3, x20
  4116dc:	blr	x8
  4116e0:	cbz	x0, 411728 <ferror@plt+0xebd8>
  4116e4:	ldr	x8, [x19]
  4116e8:	mov	x20, x0
  4116ec:	mov	x0, x19
  4116f0:	mov	x1, x20
  4116f4:	ldr	x8, [x8, #24]
  4116f8:	blr	x8
  4116fc:	ldr	x8, [x19]
  411700:	mov	x21, x0
  411704:	mov	x0, x19
  411708:	mov	x1, x20
  41170c:	ldr	x8, [x8, #128]
  411710:	blr	x8
  411714:	mov	x0, x21
  411718:	ldp	x20, x19, [sp, #32]
  41171c:	ldr	x21, [sp, #16]
  411720:	ldp	x29, x30, [sp], #48
  411724:	b	402930 <free@plt>
  411728:	ldp	x20, x19, [sp, #32]
  41172c:	ldr	x21, [sp, #16]
  411730:	ldp	x29, x30, [sp], #48
  411734:	ret
  411738:	stp	x29, x30, [sp, #-48]!
  41173c:	str	x21, [sp, #16]
  411740:	stp	x20, x19, [sp, #32]
  411744:	ldr	x21, [x0, #16]
  411748:	mov	x19, x0
  41174c:	mov	x29, sp
  411750:	mov	x20, x1
  411754:	ldr	x8, [x21]
  411758:	mov	x0, x21
  41175c:	ldr	x8, [x8, #16]
  411760:	blr	x8
  411764:	ldr	x8, [x21]
  411768:	mov	x2, x0
  41176c:	mov	x0, x21
  411770:	mov	x1, xzr
  411774:	ldr	x8, [x8, #72]
  411778:	mov	x3, x20
  41177c:	blr	x8
  411780:	cbnz	x0, 4117a8 <ferror@plt+0xec58>
  411784:	ldr	x19, [x19, #16]
  411788:	mov	x0, x20
  41178c:	bl	4175c4 <ferror@plt+0x14a74>
  411790:	ldr	x8, [x19]
  411794:	mov	x1, x0
  411798:	mov	x0, x19
  41179c:	ldr	x8, [x8, #88]
  4117a0:	blr	x8
  4117a4:	cbz	x0, 4117b8 <ferror@plt+0xec68>
  4117a8:	ldp	x20, x19, [sp, #32]
  4117ac:	ldr	x21, [sp, #16]
  4117b0:	ldp	x29, x30, [sp], #48
  4117b4:	ret
  4117b8:	bl	41761c <ferror@plt+0x14acc>
  4117bc:	stp	x29, x30, [sp, #-48]!
  4117c0:	str	x21, [sp, #16]
  4117c4:	stp	x20, x19, [sp, #32]
  4117c8:	ldr	x19, [x0, #16]
  4117cc:	mov	x29, sp
  4117d0:	mov	x20, x1
  4117d4:	ldr	x8, [x19]
  4117d8:	mov	x0, x19
  4117dc:	ldr	x8, [x8, #16]
  4117e0:	blr	x8
  4117e4:	ldr	x8, [x19]
  4117e8:	mov	x2, x0
  4117ec:	mov	x0, x19
  4117f0:	mov	x1, xzr
  4117f4:	ldr	x8, [x8, #72]
  4117f8:	mov	x3, x20
  4117fc:	blr	x8
  411800:	cbz	x0, 411848 <ferror@plt+0xecf8>
  411804:	ldr	x8, [x19]
  411808:	mov	x20, x0
  41180c:	mov	x0, x19
  411810:	mov	x1, x20
  411814:	ldr	x8, [x8, #24]
  411818:	blr	x8
  41181c:	ldr	x8, [x19]
  411820:	mov	x21, x0
  411824:	mov	x0, x19
  411828:	mov	x1, x20
  41182c:	ldr	x8, [x8, #128]
  411830:	blr	x8
  411834:	mov	x0, x21
  411838:	ldp	x20, x19, [sp, #32]
  41183c:	ldr	x21, [sp, #16]
  411840:	ldp	x29, x30, [sp], #48
  411844:	b	402930 <free@plt>
  411848:	ldp	x20, x19, [sp, #32]
  41184c:	ldr	x21, [sp, #16]
  411850:	ldp	x29, x30, [sp], #48
  411854:	ret
  411858:	stp	x29, x30, [sp, #-48]!
  41185c:	stp	x22, x21, [sp, #16]
  411860:	mov	x21, x0
  411864:	mov	x0, x1
  411868:	stp	x20, x19, [sp, #32]
  41186c:	mov	x29, sp
  411870:	mov	x19, x1
  411874:	bl	402b10 <unlink@plt>
  411878:	tbnz	w0, #31, 411900 <ferror@plt+0xedb0>
  41187c:	mov	w20, wzr
  411880:	ldr	x21, [x21, #24]
  411884:	ldr	x8, [x21]
  411888:	mov	x0, x21
  41188c:	ldr	x8, [x8, #16]
  411890:	blr	x8
  411894:	ldr	x8, [x21]
  411898:	mov	x2, x0
  41189c:	mov	x0, x21
  4118a0:	mov	x1, xzr
  4118a4:	ldr	x8, [x8, #72]
  4118a8:	mov	x3, x19
  4118ac:	blr	x8
  4118b0:	cbz	x0, 4118ec <ferror@plt+0xed9c>
  4118b4:	ldr	x8, [x21]
  4118b8:	mov	x19, x0
  4118bc:	mov	x0, x21
  4118c0:	mov	x1, x19
  4118c4:	ldr	x8, [x8, #24]
  4118c8:	blr	x8
  4118cc:	ldr	x8, [x21]
  4118d0:	mov	x22, x0
  4118d4:	mov	x0, x21
  4118d8:	mov	x1, x19
  4118dc:	ldr	x8, [x8, #128]
  4118e0:	blr	x8
  4118e4:	mov	x0, x22
  4118e8:	bl	402930 <free@plt>
  4118ec:	mov	w0, w20
  4118f0:	ldp	x20, x19, [sp, #32]
  4118f4:	ldp	x22, x21, [sp, #16]
  4118f8:	ldp	x29, x30, [sp], #48
  4118fc:	ret
  411900:	ldrb	w8, [x21, #8]
  411904:	cbz	w8, 41187c <ferror@plt+0xed2c>
  411908:	bl	402ac0 <__errno_location@plt>
  41190c:	ldr	w1, [x0]
  411910:	cmp	w1, #0x2
  411914:	b.eq	41187c <ferror@plt+0xed2c>  // b.none
  411918:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  41191c:	add	x2, x2, #0x7d4
  411920:	mov	w0, wzr
  411924:	mov	x3, x19
  411928:	bl	402540 <error@plt>
  41192c:	mov	w20, #0xffffffff            	// #-1
  411930:	b	411880 <ferror@plt+0xed30>
  411934:	stp	x29, x30, [sp, #-48]!
  411938:	stp	x22, x21, [sp, #16]
  41193c:	mov	x21, x0
  411940:	mov	x0, x1
  411944:	stp	x20, x19, [sp, #32]
  411948:	mov	x29, sp
  41194c:	mov	x19, x1
  411950:	bl	4028f0 <rmdir@plt>
  411954:	tbnz	w0, #31, 4119dc <ferror@plt+0xee8c>
  411958:	mov	w20, wzr
  41195c:	ldr	x21, [x21, #16]
  411960:	ldr	x8, [x21]
  411964:	mov	x0, x21
  411968:	ldr	x8, [x8, #16]
  41196c:	blr	x8
  411970:	ldr	x8, [x21]
  411974:	mov	x2, x0
  411978:	mov	x0, x21
  41197c:	mov	x1, xzr
  411980:	ldr	x8, [x8, #72]
  411984:	mov	x3, x19
  411988:	blr	x8
  41198c:	cbz	x0, 4119c8 <ferror@plt+0xee78>
  411990:	ldr	x8, [x21]
  411994:	mov	x19, x0
  411998:	mov	x0, x21
  41199c:	mov	x1, x19
  4119a0:	ldr	x8, [x8, #24]
  4119a4:	blr	x8
  4119a8:	ldr	x8, [x21]
  4119ac:	mov	x22, x0
  4119b0:	mov	x0, x21
  4119b4:	mov	x1, x19
  4119b8:	ldr	x8, [x8, #128]
  4119bc:	blr	x8
  4119c0:	mov	x0, x22
  4119c4:	bl	402930 <free@plt>
  4119c8:	mov	w0, w20
  4119cc:	ldp	x20, x19, [sp, #32]
  4119d0:	ldp	x22, x21, [sp, #16]
  4119d4:	ldp	x29, x30, [sp], #48
  4119d8:	ret
  4119dc:	ldrb	w8, [x21, #8]
  4119e0:	cbz	w8, 411958 <ferror@plt+0xee08>
  4119e4:	bl	402ac0 <__errno_location@plt>
  4119e8:	ldr	w1, [x0]
  4119ec:	cmp	w1, #0x2
  4119f0:	b.eq	411958 <ferror@plt+0xee08>  // b.none
  4119f4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4119f8:	add	x2, x2, #0x7f4
  4119fc:	mov	w0, wzr
  411a00:	mov	x3, x19
  411a04:	bl	402540 <error@plt>
  411a08:	mov	w20, #0xffffffff            	// #-1
  411a0c:	b	41195c <ferror@plt+0xee0c>
  411a10:	sub	sp, sp, #0xc0
  411a14:	stp	x29, x30, [sp, #128]
  411a18:	str	x23, [sp, #144]
  411a1c:	stp	x22, x21, [sp, #160]
  411a20:	stp	x20, x19, [sp, #176]
  411a24:	ldr	x21, [x0, #24]
  411a28:	mov	x19, x0
  411a2c:	add	x29, sp, #0x80
  411a30:	ldr	x8, [x21]
  411a34:	mov	x0, x21
  411a38:	ldr	x9, [x8, #160]
  411a3c:	mov	x8, sp
  411a40:	blr	x9
  411a44:	ldp	q0, q1, [sp]
  411a48:	ldr	q2, [sp, #32]
  411a4c:	ldr	x8, [sp, #48]
  411a50:	add	x0, sp, #0x40
  411a54:	stp	q0, q1, [sp, #64]
  411a58:	ldr	x9, [sp, #64]
  411a5c:	str	q2, [sp, #96]
  411a60:	str	x8, [sp, #112]
  411a64:	add	x1, x29, #0x18
  411a68:	ldr	x8, [x9, #176]
  411a6c:	add	x2, sp, #0x38
  411a70:	blr	x8
  411a74:	mov	w20, wzr
  411a78:	tbz	w0, #0, 411b08 <ferror@plt+0xefb8>
  411a7c:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411a80:	add	x22, x22, #0x7d4
  411a84:	b	411ac8 <ferror@plt+0xef78>
  411a88:	mov	w8, wzr
  411a8c:	ldr	x9, [x21]
  411a90:	ldr	x1, [sp, #56]
  411a94:	mov	x0, x21
  411a98:	orr	w20, w8, w20
  411a9c:	ldr	x9, [x9, #128]
  411aa0:	blr	x9
  411aa4:	mov	x0, x23
  411aa8:	bl	402930 <free@plt>
  411aac:	ldr	x8, [sp, #64]
  411ab0:	add	x0, sp, #0x40
  411ab4:	add	x1, x29, #0x18
  411ab8:	add	x2, sp, #0x38
  411abc:	ldr	x8, [x8, #176]
  411ac0:	blr	x8
  411ac4:	tbz	w0, #0, 411b08 <ferror@plt+0xefb8>
  411ac8:	ldr	x23, [x29, #24]
  411acc:	mov	x0, x23
  411ad0:	bl	402b10 <unlink@plt>
  411ad4:	tbz	w0, #31, 411a88 <ferror@plt+0xef38>
  411ad8:	ldrb	w8, [x19, #8]
  411adc:	cbz	w8, 411a8c <ferror@plt+0xef3c>
  411ae0:	bl	402ac0 <__errno_location@plt>
  411ae4:	ldr	w1, [x0]
  411ae8:	cmp	w1, #0x2
  411aec:	b.eq	411a88 <ferror@plt+0xef38>  // b.none
  411af0:	mov	w0, wzr
  411af4:	mov	x2, x22
  411af8:	mov	x3, x23
  411afc:	bl	402540 <error@plt>
  411b00:	mov	w8, #0xffffffff            	// #-1
  411b04:	b	411a8c <ferror@plt+0xef3c>
  411b08:	ldr	x8, [sp, #64]
  411b0c:	add	x0, sp, #0x40
  411b10:	ldr	x8, [x8, #184]
  411b14:	blr	x8
  411b18:	ldr	x21, [x19, #16]
  411b1c:	ldr	x8, [x21]
  411b20:	mov	x0, x21
  411b24:	ldr	x9, [x8, #160]
  411b28:	mov	x8, sp
  411b2c:	blr	x9
  411b30:	ldp	q0, q1, [sp]
  411b34:	ldr	q2, [sp, #32]
  411b38:	ldr	x8, [sp, #48]
  411b3c:	add	x0, sp, #0x40
  411b40:	stp	q0, q1, [sp, #64]
  411b44:	ldr	x9, [sp, #64]
  411b48:	str	q2, [sp, #96]
  411b4c:	str	x8, [sp, #112]
  411b50:	add	x1, x29, #0x18
  411b54:	ldr	x8, [x9, #176]
  411b58:	add	x2, sp, #0x38
  411b5c:	blr	x8
  411b60:	tbz	w0, #0, 411bf0 <ferror@plt+0xf0a0>
  411b64:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411b68:	add	x22, x22, #0x7f4
  411b6c:	b	411bb0 <ferror@plt+0xf060>
  411b70:	mov	w8, wzr
  411b74:	ldr	x9, [x21]
  411b78:	ldr	x1, [sp, #56]
  411b7c:	mov	x0, x21
  411b80:	orr	w20, w8, w20
  411b84:	ldr	x9, [x9, #128]
  411b88:	blr	x9
  411b8c:	mov	x0, x23
  411b90:	bl	402930 <free@plt>
  411b94:	ldr	x8, [sp, #64]
  411b98:	add	x0, sp, #0x40
  411b9c:	add	x1, x29, #0x18
  411ba0:	add	x2, sp, #0x38
  411ba4:	ldr	x8, [x8, #176]
  411ba8:	blr	x8
  411bac:	tbz	w0, #0, 411bf0 <ferror@plt+0xf0a0>
  411bb0:	ldr	x23, [x29, #24]
  411bb4:	mov	x0, x23
  411bb8:	bl	4028f0 <rmdir@plt>
  411bbc:	tbz	w0, #31, 411b70 <ferror@plt+0xf020>
  411bc0:	ldrb	w8, [x19, #8]
  411bc4:	cbz	w8, 411b74 <ferror@plt+0xf024>
  411bc8:	bl	402ac0 <__errno_location@plt>
  411bcc:	ldr	w1, [x0]
  411bd0:	cmp	w1, #0x2
  411bd4:	b.eq	411b70 <ferror@plt+0xf020>  // b.none
  411bd8:	mov	w0, wzr
  411bdc:	mov	x2, x22
  411be0:	mov	x3, x23
  411be4:	bl	402540 <error@plt>
  411be8:	mov	w8, #0xffffffff            	// #-1
  411bec:	b	411b74 <ferror@plt+0xf024>
  411bf0:	ldr	x8, [sp, #64]
  411bf4:	add	x0, sp, #0x40
  411bf8:	ldr	x8, [x8, #184]
  411bfc:	blr	x8
  411c00:	mov	w0, w20
  411c04:	ldp	x20, x19, [sp, #176]
  411c08:	ldp	x22, x21, [sp, #160]
  411c0c:	ldr	x23, [sp, #144]
  411c10:	ldp	x29, x30, [sp, #128]
  411c14:	add	sp, sp, #0xc0
  411c18:	ret
  411c1c:	stp	x29, x30, [sp, #-48]!
  411c20:	str	x21, [sp, #16]
  411c24:	stp	x20, x19, [sp, #32]
  411c28:	mov	x29, sp
  411c2c:	mov	x19, x0
  411c30:	bl	411a10 <ferror@plt+0xeec0>
  411c34:	ldr	x21, [x19]
  411c38:	mov	w20, w0
  411c3c:	mov	x0, x21
  411c40:	bl	4028f0 <rmdir@plt>
  411c44:	tbnz	w0, #31, 411d04 <ferror@plt+0xf1b4>
  411c48:	mov	w8, wzr
  411c4c:	mov	x10, xzr
  411c50:	orr	w20, w8, w20
  411c54:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411c58:	adrp	x9, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411c5c:	ldr	x11, [x8, #2912]
  411c60:	cmp	x10, x11
  411c64:	b.cs	411d38 <ferror@plt+0xf1e8>  // b.hs, b.nlast
  411c68:	ldr	x11, [x9, #2904]
  411c6c:	ldr	x11, [x11, x10, lsl #3]
  411c70:	add	x10, x10, #0x1
  411c74:	cmp	x11, x19
  411c78:	b.ne	411c5c <ferror@plt+0xf10c>  // b.any
  411c7c:	ldr	x11, [x8, #2912]
  411c80:	cmp	x11, x10
  411c84:	b.ne	411cb4 <ferror@plt+0xf164>  // b.any
  411c88:	sub	x11, x10, #0x2
  411c8c:	mov	x10, x11
  411c90:	cmn	x11, #0x1
  411c94:	b.eq	411ca8 <ferror@plt+0xf158>  // b.none
  411c98:	ldr	x11, [x9, #2904]
  411c9c:	ldr	x12, [x11, x10, lsl #3]
  411ca0:	sub	x11, x10, #0x1
  411ca4:	cbz	x12, 411c8c <ferror@plt+0xf13c>
  411ca8:	add	x9, x10, #0x1
  411cac:	str	x9, [x8, #2912]
  411cb0:	b	411cc0 <ferror@plt+0xf170>
  411cb4:	ldr	x8, [x9, #2904]
  411cb8:	add	x8, x8, x10, lsl #3
  411cbc:	stur	xzr, [x8, #-8]
  411cc0:	ldr	x0, [x19, #24]
  411cc4:	ldr	x8, [x0]
  411cc8:	ldr	x8, [x8, #152]
  411ccc:	blr	x8
  411cd0:	ldr	x0, [x19, #16]
  411cd4:	ldr	x8, [x0]
  411cd8:	ldr	x8, [x8, #152]
  411cdc:	blr	x8
  411ce0:	ldr	x0, [x19]
  411ce4:	bl	402930 <free@plt>
  411ce8:	mov	x0, x19
  411cec:	bl	402930 <free@plt>
  411cf0:	mov	w0, w20
  411cf4:	ldp	x20, x19, [sp, #32]
  411cf8:	ldr	x21, [sp, #16]
  411cfc:	ldp	x29, x30, [sp], #48
  411d00:	ret
  411d04:	ldrb	w8, [x19, #8]
  411d08:	cbz	w8, 411c4c <ferror@plt+0xf0fc>
  411d0c:	bl	402ac0 <__errno_location@plt>
  411d10:	ldr	w1, [x0]
  411d14:	cmp	w1, #0x2
  411d18:	b.eq	411c48 <ferror@plt+0xf0f8>  // b.none
  411d1c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411d20:	add	x2, x2, #0x7f4
  411d24:	mov	w0, wzr
  411d28:	mov	x3, x21
  411d2c:	bl	402540 <error@plt>
  411d30:	mov	w8, #0xffffffff            	// #-1
  411d34:	b	411c4c <ferror@plt+0xf0fc>
  411d38:	bl	402860 <abort@plt>
  411d3c:	stp	x29, x30, [sp, #-48]!
  411d40:	stp	x22, x21, [sp, #16]
  411d44:	stp	x20, x19, [sp, #32]
  411d48:	mov	x29, sp
  411d4c:	mov	w19, w2
  411d50:	mov	w20, w1
  411d54:	mov	x21, x0
  411d58:	bl	412ae4 <ferror@plt+0xff94>
  411d5c:	mov	x0, x21
  411d60:	mov	w1, w20
  411d64:	mov	w2, w19
  411d68:	bl	4026b0 <open@plt>
  411d6c:	mov	w19, w0
  411d70:	bl	402ac0 <__errno_location@plt>
  411d74:	ldr	w21, [x0]
  411d78:	mov	x20, x0
  411d7c:	tbnz	w19, #31, 411dcc <ferror@plt+0xf27c>
  411d80:	adrp	x22, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411d84:	ldr	x8, [x22, #2928]
  411d88:	cbnz	x8, 411db4 <ferror@plt+0xf264>
  411d8c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411d90:	add	x0, x0, #0x860
  411d94:	ldr	x8, [x0]
  411d98:	mov	x1, xzr
  411d9c:	mov	x2, xzr
  411da0:	mov	x3, xzr
  411da4:	mov	w4, wzr
  411da8:	blr	x8
  411dac:	cbz	x0, 411de8 <ferror@plt+0xf298>
  411db0:	str	x0, [x22, #2928]
  411db4:	ldr	x0, [x22, #2928]
  411db8:	mov	w1, w19
  411dbc:	ldr	x8, [x0]
  411dc0:	ldr	x8, [x8, #88]
  411dc4:	blr	x8
  411dc8:	cbz	x0, 411de8 <ferror@plt+0xf298>
  411dcc:	bl	412bec <ferror@plt+0x1009c>
  411dd0:	str	w21, [x20]
  411dd4:	mov	w0, w19
  411dd8:	ldp	x20, x19, [sp, #32]
  411ddc:	ldp	x22, x21, [sp, #16]
  411de0:	ldp	x29, x30, [sp], #48
  411de4:	ret
  411de8:	bl	41761c <ferror@plt+0x14acc>
  411dec:	stp	x29, x30, [sp, #-64]!
  411df0:	str	x23, [sp, #16]
  411df4:	stp	x22, x21, [sp, #32]
  411df8:	stp	x20, x19, [sp, #48]
  411dfc:	mov	x29, sp
  411e00:	mov	x19, x1
  411e04:	mov	x20, x0
  411e08:	bl	412ae4 <ferror@plt+0xff94>
  411e0c:	mov	x0, x20
  411e10:	mov	x1, x19
  411e14:	bl	412ecc <ferror@plt+0x1037c>
  411e18:	mov	x19, x0
  411e1c:	bl	402ac0 <__errno_location@plt>
  411e20:	ldr	w22, [x0]
  411e24:	mov	x20, x0
  411e28:	cbz	x19, 411e88 <ferror@plt+0xf338>
  411e2c:	mov	x0, x19
  411e30:	bl	402630 <fileno@plt>
  411e34:	tbnz	w0, #31, 411eac <ferror@plt+0xf35c>
  411e38:	adrp	x23, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411e3c:	ldr	x8, [x23, #2928]
  411e40:	mov	w21, w0
  411e44:	cbnz	x8, 411e70 <ferror@plt+0xf320>
  411e48:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  411e4c:	add	x0, x0, #0x860
  411e50:	ldr	x8, [x0]
  411e54:	mov	x1, xzr
  411e58:	mov	x2, xzr
  411e5c:	mov	x3, xzr
  411e60:	mov	w4, wzr
  411e64:	blr	x8
  411e68:	cbz	x0, 411ea8 <ferror@plt+0xf358>
  411e6c:	str	x0, [x23, #2928]
  411e70:	ldr	x0, [x23, #2928]
  411e74:	mov	w1, w21
  411e78:	ldr	x8, [x0]
  411e7c:	ldr	x8, [x8, #88]
  411e80:	blr	x8
  411e84:	cbz	x0, 411ea8 <ferror@plt+0xf358>
  411e88:	bl	412bec <ferror@plt+0x1009c>
  411e8c:	str	w22, [x20]
  411e90:	mov	x0, x19
  411e94:	ldp	x20, x19, [sp, #48]
  411e98:	ldp	x22, x21, [sp, #32]
  411e9c:	ldr	x23, [sp, #16]
  411ea0:	ldp	x29, x30, [sp], #64
  411ea4:	ret
  411ea8:	bl	41761c <ferror@plt+0x14acc>
  411eac:	bl	402860 <abort@plt>
  411eb0:	stp	x29, x30, [sp, #-64]!
  411eb4:	str	x23, [sp, #16]
  411eb8:	stp	x22, x21, [sp, #32]
  411ebc:	stp	x20, x19, [sp, #48]
  411ec0:	mov	x29, sp
  411ec4:	mov	w22, w0
  411ec8:	bl	4027f0 <close@plt>
  411ecc:	mov	w19, w0
  411ed0:	tbnz	w22, #31, 411f38 <ferror@plt+0xf3e8>
  411ed4:	bl	402ac0 <__errno_location@plt>
  411ed8:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411edc:	ldr	w23, [x0]
  411ee0:	ldr	x21, [x8, #2928]
  411ee4:	cbz	x21, 411f50 <ferror@plt+0xf400>
  411ee8:	ldr	x8, [x21]
  411eec:	mov	x20, x0
  411ef0:	mov	x0, x21
  411ef4:	mov	w22, w22
  411ef8:	ldr	x8, [x8, #16]
  411efc:	blr	x8
  411f00:	ldr	x8, [x21]
  411f04:	mov	x2, x0
  411f08:	mov	x0, x21
  411f0c:	mov	x1, xzr
  411f10:	ldr	x8, [x8, #72]
  411f14:	mov	x3, x22
  411f18:	blr	x8
  411f1c:	cbz	x0, 411f50 <ferror@plt+0xf400>
  411f20:	ldr	x8, [x21]
  411f24:	mov	x1, x0
  411f28:	mov	x0, x21
  411f2c:	ldr	x8, [x8, #128]
  411f30:	blr	x8
  411f34:	str	w23, [x20]
  411f38:	mov	w0, w19
  411f3c:	ldp	x20, x19, [sp, #48]
  411f40:	ldp	x22, x21, [sp, #32]
  411f44:	ldr	x23, [sp, #16]
  411f48:	ldp	x29, x30, [sp], #64
  411f4c:	ret
  411f50:	bl	402860 <abort@plt>
  411f54:	stp	x29, x30, [sp, #-64]!
  411f58:	str	x23, [sp, #16]
  411f5c:	stp	x22, x21, [sp, #32]
  411f60:	stp	x20, x19, [sp, #48]
  411f64:	mov	x29, sp
  411f68:	mov	x19, x0
  411f6c:	bl	402630 <fileno@plt>
  411f70:	mov	w22, w0
  411f74:	mov	x0, x19
  411f78:	bl	417b18 <ferror@plt+0x14fc8>
  411f7c:	mov	w19, w0
  411f80:	bl	402ac0 <__errno_location@plt>
  411f84:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  411f88:	ldr	w23, [x0]
  411f8c:	ldr	x21, [x8, #2928]
  411f90:	cbz	x21, 411ffc <ferror@plt+0xf4ac>
  411f94:	ldr	x8, [x21]
  411f98:	mov	x20, x0
  411f9c:	mov	x0, x21
  411fa0:	sxtw	x22, w22
  411fa4:	ldr	x8, [x8, #16]
  411fa8:	blr	x8
  411fac:	ldr	x8, [x21]
  411fb0:	mov	x2, x0
  411fb4:	mov	x0, x21
  411fb8:	mov	x1, xzr
  411fbc:	ldr	x8, [x8, #72]
  411fc0:	mov	x3, x22
  411fc4:	blr	x8
  411fc8:	cbz	x0, 411ffc <ferror@plt+0xf4ac>
  411fcc:	ldr	x8, [x21]
  411fd0:	mov	x1, x0
  411fd4:	mov	x0, x21
  411fd8:	ldr	x8, [x8, #128]
  411fdc:	blr	x8
  411fe0:	str	w23, [x20]
  411fe4:	mov	w0, w19
  411fe8:	ldp	x20, x19, [sp, #48]
  411fec:	ldp	x22, x21, [sp, #32]
  411ff0:	ldr	x23, [sp, #16]
  411ff4:	ldp	x29, x30, [sp], #64
  411ff8:	ret
  411ffc:	bl	402860 <abort@plt>
  412000:	stp	x29, x30, [sp, #-64]!
  412004:	str	x23, [sp, #16]
  412008:	stp	x22, x21, [sp, #32]
  41200c:	stp	x20, x19, [sp, #48]
  412010:	mov	x29, sp
  412014:	mov	x19, x0
  412018:	bl	402630 <fileno@plt>
  41201c:	mov	w22, w0
  412020:	mov	x0, x19
  412024:	bl	4122d4 <ferror@plt+0xf784>
  412028:	mov	w19, w0
  41202c:	bl	402ac0 <__errno_location@plt>
  412030:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412034:	ldr	w23, [x0]
  412038:	ldr	x21, [x8, #2928]
  41203c:	cbz	x21, 4120a8 <ferror@plt+0xf558>
  412040:	ldr	x8, [x21]
  412044:	mov	x20, x0
  412048:	mov	x0, x21
  41204c:	sxtw	x22, w22
  412050:	ldr	x8, [x8, #16]
  412054:	blr	x8
  412058:	ldr	x8, [x21]
  41205c:	mov	x2, x0
  412060:	mov	x0, x21
  412064:	mov	x1, xzr
  412068:	ldr	x8, [x8, #72]
  41206c:	mov	x3, x22
  412070:	blr	x8
  412074:	cbz	x0, 4120a8 <ferror@plt+0xf558>
  412078:	ldr	x8, [x21]
  41207c:	mov	x1, x0
  412080:	mov	x0, x21
  412084:	ldr	x8, [x8, #128]
  412088:	blr	x8
  41208c:	str	w23, [x20]
  412090:	mov	w0, w19
  412094:	ldp	x20, x19, [sp, #48]
  412098:	ldp	x22, x21, [sp, #32]
  41209c:	ldr	x23, [sp, #16]
  4120a0:	ldp	x29, x30, [sp], #64
  4120a4:	ret
  4120a8:	bl	402860 <abort@plt>
  4120ac:	sub	sp, sp, #0xb0
  4120b0:	stp	x29, x30, [sp, #128]
  4120b4:	stp	x22, x21, [sp, #144]
  4120b8:	stp	x20, x19, [sp, #160]
  4120bc:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4120c0:	ldr	x0, [x8, #2928]
  4120c4:	add	x29, sp, #0x80
  4120c8:	cbz	x0, 412134 <ferror@plt+0xf5e4>
  4120cc:	ldr	x8, [x0]
  4120d0:	ldr	x9, [x8, #160]
  4120d4:	add	x8, sp, #0x8
  4120d8:	blr	x9
  4120dc:	ldur	q0, [sp, #8]
  4120e0:	ldur	q1, [sp, #24]
  4120e4:	ldur	q2, [sp, #40]
  4120e8:	stp	q0, q1, [sp, #64]
  4120ec:	ldp	x8, x9, [sp, #56]
  4120f0:	str	q2, [sp, #96]
  4120f4:	str	x8, [sp, #112]
  4120f8:	ldr	x8, [x9, #176]
  4120fc:	add	x0, sp, #0x40
  412100:	add	x1, sp, #0x8
  412104:	mov	x2, xzr
  412108:	blr	x8
  41210c:	tbz	w0, #0, 412124 <ferror@plt+0xf5d4>
  412110:	ldr	w0, [sp, #8]
  412114:	bl	4027f0 <close@plt>
  412118:	ldr	x8, [sp, #64]
  41211c:	ldr	x8, [x8, #176]
  412120:	b	4120fc <ferror@plt+0xf5ac>
  412124:	ldr	x8, [sp, #64]
  412128:	add	x0, sp, #0x40
  41212c:	ldr	x8, [x8, #184]
  412130:	blr	x8
  412134:	adrp	x19, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412138:	ldr	x8, [x19, #2912]
  41213c:	cbz	x8, 412248 <ferror@plt+0xf6f8>
  412140:	mov	x20, xzr
  412144:	adrp	x21, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412148:	b	412174 <ferror@plt+0xf624>
  41214c:	ldr	x8, [sp, #64]
  412150:	add	x0, sp, #0x40
  412154:	ldr	x8, [x8, #184]
  412158:	blr	x8
  41215c:	ldr	x0, [x22]
  412160:	bl	4028f0 <rmdir@plt>
  412164:	ldr	x8, [x19, #2912]
  412168:	add	x20, x20, #0x1
  41216c:	cmp	x20, x8
  412170:	b.cs	412248 <ferror@plt+0xf6f8>  // b.hs, b.nlast
  412174:	ldr	x8, [x21, #2904]
  412178:	ldr	x22, [x8, x20, lsl #3]
  41217c:	cbz	x22, 412164 <ferror@plt+0xf614>
  412180:	ldr	x0, [x22, #24]
  412184:	ldr	x8, [x0]
  412188:	ldr	x9, [x8, #160]
  41218c:	add	x8, sp, #0x8
  412190:	blr	x9
  412194:	ldur	q0, [sp, #8]
  412198:	ldur	q1, [sp, #24]
  41219c:	ldur	q2, [sp, #40]
  4121a0:	stp	q0, q1, [sp, #64]
  4121a4:	ldp	x8, x9, [sp, #56]
  4121a8:	str	q2, [sp, #96]
  4121ac:	str	x8, [sp, #112]
  4121b0:	ldr	x8, [x9, #176]
  4121b4:	add	x0, sp, #0x40
  4121b8:	mov	x1, sp
  4121bc:	mov	x2, xzr
  4121c0:	blr	x8
  4121c4:	tbz	w0, #0, 4121dc <ferror@plt+0xf68c>
  4121c8:	ldr	x0, [sp]
  4121cc:	bl	402b10 <unlink@plt>
  4121d0:	ldr	x8, [sp, #64]
  4121d4:	ldr	x8, [x8, #176]
  4121d8:	b	4121b4 <ferror@plt+0xf664>
  4121dc:	ldr	x8, [sp, #64]
  4121e0:	add	x0, sp, #0x40
  4121e4:	ldr	x8, [x8, #184]
  4121e8:	blr	x8
  4121ec:	ldr	x0, [x22, #16]
  4121f0:	ldr	x8, [x0]
  4121f4:	ldr	x9, [x8, #160]
  4121f8:	add	x8, sp, #0x8
  4121fc:	blr	x9
  412200:	ldur	q0, [sp, #8]
  412204:	ldur	q1, [sp, #24]
  412208:	ldur	q2, [sp, #40]
  41220c:	stp	q0, q1, [sp, #64]
  412210:	ldp	x8, x9, [sp, #56]
  412214:	str	q2, [sp, #96]
  412218:	str	x8, [sp, #112]
  41221c:	ldr	x8, [x9, #176]
  412220:	add	x0, sp, #0x40
  412224:	mov	x1, sp
  412228:	mov	x2, xzr
  41222c:	blr	x8
  412230:	tbz	w0, #0, 41214c <ferror@plt+0xf5fc>
  412234:	ldr	x0, [sp]
  412238:	bl	4028f0 <rmdir@plt>
  41223c:	ldr	x8, [sp, #64]
  412240:	ldr	x8, [x8, #176]
  412244:	b	412220 <ferror@plt+0xf6d0>
  412248:	ldp	x20, x19, [sp, #160]
  41224c:	ldp	x22, x21, [sp, #144]
  412250:	ldp	x29, x30, [sp, #128]
  412254:	add	sp, sp, #0xb0
  412258:	ret
  41225c:	stp	x29, x30, [sp, #-32]!
  412260:	stp	x20, x19, [sp, #16]
  412264:	mov	w20, w1
  412268:	mov	w1, #0x1                   	// #1
  41226c:	mov	w2, wzr
  412270:	mov	x29, sp
  412274:	mov	w19, w0
  412278:	bl	417bac <ferror@plt+0x1505c>
  41227c:	tbnz	w0, #31, 4122a0 <ferror@plt+0xf750>
  412280:	orr	w8, w0, #0x1
  412284:	and	w9, w0, #0xfffffffe
  412288:	tst	w20, #0x1
  41228c:	csel	w2, w8, w9, ne  // ne = any
  412290:	cmp	w0, w2
  412294:	b.ne	4122a8 <ferror@plt+0xf758>  // b.any
  412298:	mov	w0, wzr
  41229c:	b	4122bc <ferror@plt+0xf76c>
  4122a0:	mov	w0, #0xffffffff            	// #-1
  4122a4:	b	4122bc <ferror@plt+0xf76c>
  4122a8:	mov	w1, #0x2                   	// #2
  4122ac:	mov	w0, w19
  4122b0:	bl	417bac <ferror@plt+0x1505c>
  4122b4:	cmn	w0, #0x1
  4122b8:	csetm	w0, eq  // eq = none
  4122bc:	ldp	x20, x19, [sp, #16]
  4122c0:	ldp	x29, x30, [sp], #32
  4122c4:	ret
  4122c8:	mov	w1, #0x406                 	// #1030
  4122cc:	mov	w2, wzr
  4122d0:	b	417bac <ferror@plt+0x1505c>
  4122d4:	stp	x29, x30, [sp, #-48]!
  4122d8:	str	x21, [sp, #16]
  4122dc:	stp	x20, x19, [sp, #32]
  4122e0:	mov	x29, sp
  4122e4:	mov	x20, x0
  4122e8:	bl	402620 <__fpending@plt>
  4122ec:	ldr	w21, [x20]
  4122f0:	mov	x19, x0
  4122f4:	mov	x0, x20
  4122f8:	bl	417b18 <ferror@plt+0x14fc8>
  4122fc:	mov	w8, w0
  412300:	tbnz	w21, #5, 412328 <ferror@plt+0xf7d8>
  412304:	cmp	w8, #0x0
  412308:	csetm	w0, ne  // ne = any
  41230c:	cbnz	x19, 412338 <ferror@plt+0xf7e8>
  412310:	cbz	w8, 412338 <ferror@plt+0xf7e8>
  412314:	bl	402ac0 <__errno_location@plt>
  412318:	ldr	w8, [x0]
  41231c:	cmp	w8, #0x9
  412320:	csetm	w0, ne  // ne = any
  412324:	b	412338 <ferror@plt+0xf7e8>
  412328:	cbnz	w8, 412334 <ferror@plt+0xf7e4>
  41232c:	bl	402ac0 <__errno_location@plt>
  412330:	str	wzr, [x0]
  412334:	mov	w0, #0xffffffff            	// #-1
  412338:	ldp	x20, x19, [sp, #32]
  41233c:	ldr	x21, [sp, #16]
  412340:	ldp	x29, x30, [sp], #48
  412344:	ret
  412348:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41234c:	str	x0, [x8, #2936]
  412350:	ret
  412354:	stp	x29, x30, [sp, #-32]!
  412358:	stp	x20, x19, [sp, #16]
  41235c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412360:	ldr	x19, [x20, #1064]
  412364:	mov	x29, sp
  412368:	mov	x0, x19
  41236c:	bl	417db8 <ferror@plt+0x15268>
  412370:	cbz	x0, 412388 <ferror@plt+0xf838>
  412374:	mov	w2, #0x1                   	// #1
  412378:	mov	x0, x19
  41237c:	mov	x1, xzr
  412380:	bl	417df8 <ferror@plt+0x152a8>
  412384:	cbz	w0, 412390 <ferror@plt+0xf840>
  412388:	mov	w19, wzr
  41238c:	b	4123a0 <ferror@plt+0xf850>
  412390:	ldr	x0, [x20, #1064]
  412394:	bl	417d70 <ferror@plt+0x15220>
  412398:	cmp	w0, #0x0
  41239c:	cset	w19, ne  // ne = any
  4123a0:	ldr	x0, [x20, #1064]
  4123a4:	bl	4122d4 <ferror@plt+0xf784>
  4123a8:	tbnz	w19, #0, 4123bc <ferror@plt+0xf86c>
  4123ac:	cbnz	w0, 4123bc <ferror@plt+0xf86c>
  4123b0:	ldp	x20, x19, [sp, #16]
  4123b4:	ldp	x29, x30, [sp], #32
  4123b8:	b	412444 <ferror@plt+0xf8f4>
  4123bc:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4123c0:	ldr	x20, [x8, #2936]
  4123c4:	bl	402ac0 <__errno_location@plt>
  4123c8:	ldr	w19, [x0]
  4123cc:	cbnz	x20, 4123f0 <ferror@plt+0xf8a0>
  4123d0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4123d4:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4123d8:	add	x2, x2, #0x8de
  4123dc:	add	x3, x3, #0x819
  4123e0:	mov	w0, wzr
  4123e4:	mov	w1, w19
  4123e8:	bl	402540 <error@plt>
  4123ec:	b	412418 <ferror@plt+0xf8c8>
  4123f0:	mov	x0, x20
  4123f4:	bl	415b90 <ferror@plt+0x13040>
  4123f8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4123fc:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x2d94>
  412400:	mov	x3, x0
  412404:	add	x2, x2, #0x82c
  412408:	add	x4, x4, #0x819
  41240c:	mov	w0, wzr
  412410:	mov	w1, w19
  412414:	bl	402540 <error@plt>
  412418:	bl	412444 <ferror@plt+0xf8f4>
  41241c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412420:	ldr	w0, [x8, #884]
  412424:	bl	4024e0 <_exit@plt>
  412428:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41242c:	str	x0, [x8, #2944]
  412430:	ret
  412434:	and	w8, w0, #0x1
  412438:	adrp	x9, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41243c:	strb	w8, [x9, #2952]
  412440:	ret
  412444:	stp	x29, x30, [sp, #-32]!
  412448:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41244c:	ldr	x0, [x8, #1056]
  412450:	str	x19, [sp, #16]
  412454:	mov	x29, sp
  412458:	bl	4122d4 <ferror@plt+0xf784>
  41245c:	cbz	w0, 41247c <ferror@plt+0xf92c>
  412460:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412464:	ldrb	w19, [x8, #2952]
  412468:	bl	402ac0 <__errno_location@plt>
  41246c:	cbz	w19, 412498 <ferror@plt+0xf948>
  412470:	ldr	w8, [x0]
  412474:	cmp	w8, #0x20
  412478:	b.ne	412498 <ferror@plt+0xf948>  // b.any
  41247c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412480:	ldr	x0, [x8, #1032]
  412484:	bl	4122d4 <ferror@plt+0xf784>
  412488:	cbnz	w0, 4124f0 <ferror@plt+0xf9a0>
  41248c:	ldr	x19, [sp, #16]
  412490:	ldp	x29, x30, [sp], #32
  412494:	ret
  412498:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  41249c:	ldr	x8, [x8, #2944]
  4124a0:	ldr	w19, [x0]
  4124a4:	cbnz	x8, 4124c8 <ferror@plt+0xf978>
  4124a8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4124ac:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4124b0:	add	x2, x2, #0x8de
  4124b4:	add	x3, x3, #0x833
  4124b8:	mov	w0, wzr
  4124bc:	mov	w1, w19
  4124c0:	bl	402540 <error@plt>
  4124c4:	b	4124f0 <ferror@plt+0xf9a0>
  4124c8:	mov	x0, x8
  4124cc:	bl	415b90 <ferror@plt+0x13040>
  4124d0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4124d4:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4124d8:	mov	x3, x0
  4124dc:	add	x2, x2, #0x82c
  4124e0:	add	x4, x4, #0x833
  4124e4:	mov	w0, wzr
  4124e8:	mov	w1, w19
  4124ec:	bl	402540 <error@plt>
  4124f0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4124f4:	ldr	w0, [x8, #884]
  4124f8:	bl	4024e0 <_exit@plt>
  4124fc:	stp	x29, x30, [sp, #-96]!
  412500:	stp	x28, x27, [sp, #16]
  412504:	stp	x26, x25, [sp, #32]
  412508:	stp	x24, x23, [sp, #48]
  41250c:	stp	x22, x21, [sp, #64]
  412510:	stp	x20, x19, [sp, #80]
  412514:	mov	x29, sp
  412518:	sub	sp, sp, #0x230
  41251c:	ldr	x21, [x29, #104]
  412520:	mov	w22, w7
  412524:	mov	w20, w6
  412528:	mov	w27, w5
  41252c:	mov	w28, w4
  412530:	mov	x24, x2
  412534:	mov	x25, x1
  412538:	mov	x19, x0
  41253c:	str	w3, [sp]
  412540:	tbz	w7, #0, 412558 <ferror@plt+0xfa08>
  412544:	sub	x2, x29, #0x88
  412548:	mov	w0, #0x2                   	// #2
  41254c:	mov	x1, xzr
  412550:	bl	402550 <sigprocmask@plt>
  412554:	bl	412ae4 <ferror@plt+0xff94>
  412558:	ldrb	w23, [x29, #96]
  41255c:	sub	x0, x29, #0xd8
  412560:	bl	4028a0 <posix_spawn_file_actions_init@plt>
  412564:	mov	w26, w0
  412568:	cbnz	w0, 412600 <ferror@plt+0xfab0>
  41256c:	tbz	w28, #0, 412594 <ferror@plt+0xfa44>
  412570:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  412574:	add	x2, x2, #0x83f
  412578:	sub	x0, x29, #0xd8
  41257c:	mov	w1, wzr
  412580:	mov	w3, wzr
  412584:	mov	w4, wzr
  412588:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  41258c:	mov	w26, w0
  412590:	cbnz	w0, 4125f8 <ferror@plt+0xfaa8>
  412594:	tbz	w27, #0, 4125bc <ferror@plt+0xfa6c>
  412598:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  41259c:	add	x2, x2, #0x83f
  4125a0:	sub	x0, x29, #0xd8
  4125a4:	mov	w1, #0x1                   	// #1
  4125a8:	mov	w3, #0x2                   	// #2
  4125ac:	mov	w4, wzr
  4125b0:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  4125b4:	mov	w26, w0
  4125b8:	cbnz	w0, 4125f8 <ferror@plt+0xfaa8>
  4125bc:	tbz	w20, #0, 4125e4 <ferror@plt+0xfa94>
  4125c0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4125c4:	add	x2, x2, #0x83f
  4125c8:	sub	x0, x29, #0xd8
  4125cc:	mov	w1, #0x2                   	// #2
  4125d0:	mov	w3, #0x2                   	// #2
  4125d4:	mov	w4, wzr
  4125d8:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  4125dc:	mov	w26, w0
  4125e0:	cbnz	w0, 4125f8 <ferror@plt+0xfaa8>
  4125e4:	tbz	w22, #0, 412654 <ferror@plt+0xfb04>
  4125e8:	add	x0, sp, #0x8
  4125ec:	bl	4029f0 <posix_spawnattr_init@plt>
  4125f0:	mov	w26, w0
  4125f4:	cbz	w0, 4126d4 <ferror@plt+0xfb84>
  4125f8:	sub	x0, x29, #0xd8
  4125fc:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  412600:	tbz	w22, #0, 412608 <ferror@plt+0xfab8>
  412604:	bl	412bec <ferror@plt+0x1009c>
  412608:	cbz	x21, 412610 <ferror@plt+0xfac0>
  41260c:	str	wzr, [x21]
  412610:	tbz	w20, #0, 412618 <ferror@plt+0xfac8>
  412614:	tbz	w23, #0, 412630 <ferror@plt+0xfae0>
  412618:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  41261c:	and	w0, w23, #0x1
  412620:	add	x2, x2, #0x849
  412624:	mov	w1, w26
  412628:	mov	x3, x19
  41262c:	bl	402540 <error@plt>
  412630:	mov	w0, #0x7f                  	// #127
  412634:	add	sp, sp, #0x230
  412638:	ldp	x20, x19, [sp, #80]
  41263c:	ldp	x22, x21, [sp, #64]
  412640:	ldp	x24, x23, [sp, #48]
  412644:	ldp	x26, x25, [sp, #32]
  412648:	ldp	x28, x27, [sp, #16]
  41264c:	ldp	x29, x30, [sp], #96
  412650:	ret
  412654:	mov	w28, wzr
  412658:	mov	x27, xzr
  41265c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412660:	ldr	x5, [x8, #1072]
  412664:	add	x0, sp, #0x4
  412668:	sub	x2, x29, #0xd8
  41266c:	mov	x1, x25
  412670:	mov	x3, x27
  412674:	mov	x4, x24
  412678:	bl	402960 <posix_spawnp@plt>
  41267c:	mov	w26, w0
  412680:	sub	x0, x29, #0xd8
  412684:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  412688:	cbz	w26, 412694 <ferror@plt+0xfb44>
  41268c:	cbz	w28, 412600 <ferror@plt+0xfab0>
  412690:	b	412708 <ferror@plt+0xfbb8>
  412694:	cbz	w28, 4126a0 <ferror@plt+0xfb50>
  412698:	add	x0, sp, #0x8
  41269c:	bl	4026f0 <posix_spawnattr_destroy@plt>
  4126a0:	tbz	w22, #0, 4126b0 <ferror@plt+0xfb60>
  4126a4:	ldr	w0, [sp, #4]
  4126a8:	bl	416ecc <ferror@plt+0x1437c>
  4126ac:	bl	412bec <ferror@plt+0x1009c>
  4126b0:	ldp	w8, w0, [sp]
  4126b4:	and	w3, w20, #0x1
  4126b8:	and	w4, w22, #0x1
  4126bc:	and	w5, w23, #0x1
  4126c0:	and	w2, w8, #0x1
  4126c4:	mov	x1, x19
  4126c8:	mov	x6, x21
  4126cc:	bl	41706c <ferror@plt+0x1451c>
  4126d0:	b	412634 <ferror@plt+0xfae4>
  4126d4:	add	x0, sp, #0x8
  4126d8:	sub	x1, x29, #0x88
  4126dc:	bl	402890 <posix_spawnattr_setsigmask@plt>
  4126e0:	mov	w26, w0
  4126e4:	cbnz	w0, 412700 <ferror@plt+0xfbb0>
  4126e8:	add	x0, sp, #0x8
  4126ec:	mov	w1, #0x8                   	// #8
  4126f0:	add	x27, sp, #0x8
  4126f4:	bl	402850 <posix_spawnattr_setflags@plt>
  4126f8:	mov	w26, w0
  4126fc:	cbz	w0, 412714 <ferror@plt+0xfbc4>
  412700:	sub	x0, x29, #0xd8
  412704:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  412708:	add	x0, sp, #0x8
  41270c:	bl	4026f0 <posix_spawnattr_destroy@plt>
  412710:	b	412600 <ferror@plt+0xfab0>
  412714:	mov	w28, #0x1                   	// #1
  412718:	b	41265c <ferror@plt+0xfb0c>
  41271c:	sub	sp, sp, #0xf0
  412720:	stp	x20, x19, [sp, #224]
  412724:	adrp	x20, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412728:	ldrb	w8, [x20, #2960]
  41272c:	mov	x19, x0
  412730:	stp	x29, x30, [sp, #160]
  412734:	str	x25, [sp, #176]
  412738:	stp	x24, x23, [sp, #192]
  41273c:	stp	x22, x21, [sp, #208]
  412740:	add	x29, sp, #0xa0
  412744:	tbnz	w8, #0, 412894 <ferror@plt+0xfd44>
  412748:	bl	412978 <ferror@plt+0xfe28>
  41274c:	adrp	x8, 412000 <ferror@plt+0xf4b0>
  412750:	add	x10, sp, #0x8
  412754:	add	x8, x8, #0xc10
  412758:	mov	w9, #0x40000000            	// #1073741824
  41275c:	add	x0, x10, #0x8
  412760:	str	x8, [sp, #8]
  412764:	str	w9, [sp, #144]
  412768:	bl	4026e0 <sigemptyset@plt>
  41276c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412770:	ldrb	w8, [x8, #804]
  412774:	mov	w9, #0x2                   	// #2
  412778:	cmp	w8, #0x0
  41277c:	csinv	w0, w9, wzr, eq  // eq = none
  412780:	tbnz	w8, #0, 41279c <ferror@plt+0xfc4c>
  412784:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412788:	add	x8, x8, #0xd20
  41278c:	mov	w9, #0x98                  	// #152
  412790:	umaddl	x2, w0, w9, x8
  412794:	add	x1, sp, #0x8
  412798:	bl	402800 <sigaction@plt>
  41279c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4127a0:	ldrb	w8, [x8, #808]
  4127a4:	mov	w9, #0xf                   	// #15
  4127a8:	cmp	w8, #0x0
  4127ac:	csinv	w0, w9, wzr, eq  // eq = none
  4127b0:	tbnz	w8, #0, 4127cc <ferror@plt+0xfc7c>
  4127b4:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4127b8:	add	x8, x8, #0xd20
  4127bc:	mov	w9, #0x98                  	// #152
  4127c0:	umaddl	x2, w0, w9, x8
  4127c4:	add	x1, sp, #0x8
  4127c8:	bl	402800 <sigaction@plt>
  4127cc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4127d0:	ldrb	w8, [x8, #812]
  4127d4:	mov	w9, #0xffffffff            	// #-1
  4127d8:	cmp	w8, #0x0
  4127dc:	cneg	w0, w9, eq  // eq = none
  4127e0:	tbnz	w8, #0, 4127fc <ferror@plt+0xfcac>
  4127e4:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  4127e8:	add	x8, x8, #0xd20
  4127ec:	mov	w9, #0x98                  	// #152
  4127f0:	umaddl	x2, w0, w9, x8
  4127f4:	add	x1, sp, #0x8
  4127f8:	bl	402800 <sigaction@plt>
  4127fc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412800:	ldrb	w8, [x8, #816]
  412804:	mov	w9, #0xd                   	// #13
  412808:	cmp	w8, #0x0
  41280c:	csinv	w0, w9, wzr, eq  // eq = none
  412810:	tbnz	w8, #0, 41282c <ferror@plt+0xfcdc>
  412814:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412818:	add	x8, x8, #0xd20
  41281c:	mov	w9, #0x98                  	// #152
  412820:	umaddl	x2, w0, w9, x8
  412824:	add	x1, sp, #0x8
  412828:	bl	402800 <sigaction@plt>
  41282c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412830:	ldrb	w8, [x8, #820]
  412834:	mov	w9, #0x18                  	// #24
  412838:	cmp	w8, #0x0
  41283c:	csinv	w0, w9, wzr, eq  // eq = none
  412840:	tbnz	w8, #0, 41285c <ferror@plt+0xfd0c>
  412844:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412848:	add	x8, x8, #0xd20
  41284c:	mov	w9, #0x98                  	// #152
  412850:	umaddl	x2, w0, w9, x8
  412854:	add	x1, sp, #0x8
  412858:	bl	402800 <sigaction@plt>
  41285c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412860:	ldrb	w8, [x8, #824]
  412864:	mov	w9, #0x19                  	// #25
  412868:	cmp	w8, #0x0
  41286c:	csinv	w0, w9, wzr, eq  // eq = none
  412870:	tbnz	w8, #0, 41288c <ferror@plt+0xfd3c>
  412874:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412878:	add	x8, x8, #0xd20
  41287c:	mov	w9, #0x98                  	// #152
  412880:	umaddl	x2, w0, w9, x8
  412884:	add	x1, sp, #0x8
  412888:	bl	402800 <sigaction@plt>
  41288c:	mov	w8, #0x1                   	// #1
  412890:	strb	w8, [x20, #2960]
  412894:	adrp	x22, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412898:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41289c:	ldrsw	x25, [x22, #2964]
  4128a0:	ldr	x8, [x24, #888]
  4128a4:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4128a8:	cmp	x8, x25
  4128ac:	b.ne	412940 <ferror@plt+0xfdf0>  // b.any
  4128b0:	ldr	x20, [x23, #896]
  4128b4:	lsl	x21, x25, #1
  4128b8:	add	x4, x29, #0x18
  4128bc:	mov	w2, #0x8                   	// #8
  4128c0:	mov	x0, x21
  4128c4:	mov	x1, xzr
  4128c8:	mov	x3, xzr
  4128cc:	str	xzr, [x29, #24]
  4128d0:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  4128d4:	ldr	x8, [x29, #24]
  4128d8:	sbfx	x9, x1, #0, #1
  4128dc:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4128e0:	eor	x9, x9, x1
  4128e4:	cmn	x0, x10
  4128e8:	orr	x9, x9, x8
  4128ec:	adcs	x8, x1, xzr
  4128f0:	cbnz	x9, 412974 <ferror@plt+0xfe24>
  4128f4:	sbfx	x8, x8, #0, #1
  4128f8:	tbnz	x8, #63, 412974 <ferror@plt+0xfe24>
  4128fc:	lsl	x0, x25, #4
  412900:	bl	417280 <ferror@plt+0x14730>
  412904:	cbz	w25, 412920 <ferror@plt+0xfdd0>
  412908:	mov	x8, x0
  41290c:	mov	x9, x20
  412910:	ldr	x10, [x9], #8
  412914:	subs	x25, x25, #0x1
  412918:	str	x10, [x8], #8
  41291c:	b.ne	412910 <ferror@plt+0xfdc0>  // b.any
  412920:	adrp	x8, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412924:	add	x8, x8, #0xb98
  412928:	cmp	x20, x8
  41292c:	str	x0, [x23, #896]
  412930:	str	x21, [x24, #888]
  412934:	b.eq	412940 <ferror@plt+0xfdf0>  // b.none
  412938:	mov	x0, x20
  41293c:	bl	402930 <free@plt>
  412940:	ldr	x8, [x23, #896]
  412944:	ldrsw	x9, [x22, #2964]
  412948:	str	x19, [x8, x9, lsl #3]
  41294c:	ldr	w8, [x22, #2964]
  412950:	add	w8, w8, #0x1
  412954:	str	w8, [x22, #2964]
  412958:	ldp	x20, x19, [sp, #224]
  41295c:	ldp	x22, x21, [sp, #208]
  412960:	ldp	x24, x23, [sp, #192]
  412964:	ldr	x25, [sp, #176]
  412968:	ldp	x29, x30, [sp, #160]
  41296c:	add	sp, sp, #0xf0
  412970:	ret
  412974:	bl	41761c <ferror@plt+0x14acc>
  412978:	sub	sp, sp, #0xc0
  41297c:	stp	x20, x19, [sp, #176]
  412980:	adrp	x19, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412984:	ldrb	w8, [x19, #3352]
  412988:	stp	x29, x30, [sp, #160]
  41298c:	add	x29, sp, #0xa0
  412990:	tbnz	w8, #0, 412ad4 <ferror@plt+0xff84>
  412994:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412998:	ldrb	w8, [x20, #804]
  41299c:	add	x2, sp, #0x8
  4129a0:	mov	x1, xzr
  4129a4:	cmp	w8, #0x0
  4129a8:	mov	w8, #0x2                   	// #2
  4129ac:	csinv	w0, w8, wzr, eq  // eq = none
  4129b0:	bl	402800 <sigaction@plt>
  4129b4:	tbnz	w0, #31, 4129c8 <ferror@plt+0xfe78>
  4129b8:	ldr	x8, [sp, #8]
  4129bc:	cmp	x8, #0x1
  4129c0:	b.ne	4129c8 <ferror@plt+0xfe78>  // b.any
  4129c4:	strb	w8, [x20, #804]
  4129c8:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4129cc:	ldrb	w8, [x20, #808]
  4129d0:	add	x2, sp, #0x8
  4129d4:	mov	x1, xzr
  4129d8:	cmp	w8, #0x0
  4129dc:	mov	w8, #0xf                   	// #15
  4129e0:	csinv	w0, w8, wzr, eq  // eq = none
  4129e4:	bl	402800 <sigaction@plt>
  4129e8:	tbnz	w0, #31, 4129fc <ferror@plt+0xfeac>
  4129ec:	ldr	x8, [sp, #8]
  4129f0:	cmp	x8, #0x1
  4129f4:	b.ne	4129fc <ferror@plt+0xfeac>  // b.any
  4129f8:	strb	w8, [x20, #808]
  4129fc:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412a00:	ldrb	w8, [x20, #812]
  412a04:	add	x2, sp, #0x8
  412a08:	mov	x1, xzr
  412a0c:	cmp	w8, #0x0
  412a10:	mov	w8, #0xffffffff            	// #-1
  412a14:	cneg	w0, w8, eq  // eq = none
  412a18:	bl	402800 <sigaction@plt>
  412a1c:	tbnz	w0, #31, 412a30 <ferror@plt+0xfee0>
  412a20:	ldr	x8, [sp, #8]
  412a24:	cmp	x8, #0x1
  412a28:	b.ne	412a30 <ferror@plt+0xfee0>  // b.any
  412a2c:	strb	w8, [x20, #812]
  412a30:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412a34:	ldrb	w8, [x20, #816]
  412a38:	add	x2, sp, #0x8
  412a3c:	mov	x1, xzr
  412a40:	cmp	w8, #0x0
  412a44:	mov	w8, #0xd                   	// #13
  412a48:	csinv	w0, w8, wzr, eq  // eq = none
  412a4c:	bl	402800 <sigaction@plt>
  412a50:	tbnz	w0, #31, 412a64 <ferror@plt+0xff14>
  412a54:	ldr	x8, [sp, #8]
  412a58:	cmp	x8, #0x1
  412a5c:	b.ne	412a64 <ferror@plt+0xff14>  // b.any
  412a60:	strb	w8, [x20, #816]
  412a64:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412a68:	ldrb	w8, [x20, #820]
  412a6c:	add	x2, sp, #0x8
  412a70:	mov	x1, xzr
  412a74:	cmp	w8, #0x0
  412a78:	mov	w8, #0x18                  	// #24
  412a7c:	csinv	w0, w8, wzr, eq  // eq = none
  412a80:	bl	402800 <sigaction@plt>
  412a84:	tbnz	w0, #31, 412a98 <ferror@plt+0xff48>
  412a88:	ldr	x8, [sp, #8]
  412a8c:	cmp	x8, #0x1
  412a90:	b.ne	412a98 <ferror@plt+0xff48>  // b.any
  412a94:	strb	w8, [x20, #820]
  412a98:	adrp	x20, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412a9c:	ldrb	w8, [x20, #824]
  412aa0:	add	x2, sp, #0x8
  412aa4:	mov	x1, xzr
  412aa8:	cmp	w8, #0x0
  412aac:	mov	w8, #0x19                  	// #25
  412ab0:	csinv	w0, w8, wzr, eq  // eq = none
  412ab4:	bl	402800 <sigaction@plt>
  412ab8:	tbnz	w0, #31, 412acc <ferror@plt+0xff7c>
  412abc:	ldr	x8, [sp, #8]
  412ac0:	cmp	x8, #0x1
  412ac4:	b.ne	412acc <ferror@plt+0xff7c>  // b.any
  412ac8:	strb	w8, [x20, #824]
  412acc:	mov	w8, #0x1                   	// #1
  412ad0:	strb	w8, [x19, #3352]
  412ad4:	ldp	x20, x19, [sp, #176]
  412ad8:	ldp	x29, x30, [sp, #160]
  412adc:	add	sp, sp, #0xc0
  412ae0:	ret
  412ae4:	stp	x29, x30, [sp, #-16]!
  412ae8:	mov	x29, sp
  412aec:	bl	412b08 <ferror@plt+0xffb8>
  412af0:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412af4:	add	x1, x1, #0xc98
  412af8:	mov	w0, wzr
  412afc:	mov	x2, xzr
  412b00:	ldp	x29, x30, [sp], #16
  412b04:	b	402550 <sigprocmask@plt>
  412b08:	stp	x29, x30, [sp, #-32]!
  412b0c:	str	x19, [sp, #16]
  412b10:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412b14:	ldrb	w8, [x19, #800]
  412b18:	mov	x29, sp
  412b1c:	tbnz	w8, #0, 412be0 <ferror@plt+0x10090>
  412b20:	bl	412978 <ferror@plt+0xfe28>
  412b24:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412b28:	add	x0, x0, #0xc98
  412b2c:	bl	4026e0 <sigemptyset@plt>
  412b30:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412b34:	ldrb	w8, [x8, #804]
  412b38:	tbnz	w8, #0, 412b4c <ferror@plt+0xfffc>
  412b3c:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412b40:	add	x0, x0, #0xc98
  412b44:	mov	w1, #0x2                   	// #2
  412b48:	bl	402a90 <sigaddset@plt>
  412b4c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412b50:	ldrb	w8, [x8, #808]
  412b54:	tbnz	w8, #0, 412b68 <ferror@plt+0x10018>
  412b58:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412b5c:	add	x0, x0, #0xc98
  412b60:	mov	w1, #0xf                   	// #15
  412b64:	bl	402a90 <sigaddset@plt>
  412b68:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412b6c:	ldrb	w8, [x8, #812]
  412b70:	tbnz	w8, #0, 412b84 <ferror@plt+0x10034>
  412b74:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412b78:	add	x0, x0, #0xc98
  412b7c:	mov	w1, #0x1                   	// #1
  412b80:	bl	402a90 <sigaddset@plt>
  412b84:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412b88:	ldrb	w8, [x8, #816]
  412b8c:	tbnz	w8, #0, 412ba0 <ferror@plt+0x10050>
  412b90:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412b94:	add	x0, x0, #0xc98
  412b98:	mov	w1, #0xd                   	// #13
  412b9c:	bl	402a90 <sigaddset@plt>
  412ba0:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412ba4:	ldrb	w8, [x8, #820]
  412ba8:	tbnz	w8, #0, 412bbc <ferror@plt+0x1006c>
  412bac:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412bb0:	add	x0, x0, #0xc98
  412bb4:	mov	w1, #0x18                  	// #24
  412bb8:	bl	402a90 <sigaddset@plt>
  412bbc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412bc0:	ldrb	w8, [x8, #824]
  412bc4:	tbnz	w8, #0, 412bd8 <ferror@plt+0x10088>
  412bc8:	adrp	x0, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412bcc:	add	x0, x0, #0xc98
  412bd0:	mov	w1, #0x19                  	// #25
  412bd4:	bl	402a90 <sigaddset@plt>
  412bd8:	mov	w8, #0x1                   	// #1
  412bdc:	strb	w8, [x19, #800]
  412be0:	ldr	x19, [sp, #16]
  412be4:	ldp	x29, x30, [sp], #32
  412be8:	ret
  412bec:	stp	x29, x30, [sp, #-16]!
  412bf0:	mov	x29, sp
  412bf4:	bl	412b08 <ferror@plt+0xffb8>
  412bf8:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412bfc:	add	x1, x1, #0xc98
  412c00:	mov	w0, #0x1                   	// #1
  412c04:	mov	x2, xzr
  412c08:	ldp	x29, x30, [sp], #16
  412c0c:	b	402550 <sigprocmask@plt>
  412c10:	stp	x29, x30, [sp, #-48]!
  412c14:	str	x21, [sp, #16]
  412c18:	stp	x20, x19, [sp, #32]
  412c1c:	adrp	x20, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412c20:	ldr	w8, [x20, #2964]
  412c24:	mov	w19, w0
  412c28:	mov	x29, sp
  412c2c:	cbz	w8, 412c54 <ferror@plt+0x10104>
  412c30:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412c34:	sxtw	x8, w8
  412c38:	sub	x8, x8, #0x1
  412c3c:	str	w8, [x20, #2964]
  412c40:	ldr	x9, [x21, #896]
  412c44:	ldr	x8, [x9, x8, lsl #3]
  412c48:	blr	x8
  412c4c:	ldr	w8, [x20, #2964]
  412c50:	cbnz	w8, 412c34 <ferror@plt+0x100e4>
  412c54:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412c58:	ldrb	w8, [x8, #804]
  412c5c:	mov	w9, #0x2                   	// #2
  412c60:	adrp	x20, 435000 <__progname@@GLIBC_2.17+0x7bc8>
  412c64:	add	x20, x20, #0xd20
  412c68:	cmp	w8, #0x0
  412c6c:	csinv	w0, w9, wzr, eq  // eq = none
  412c70:	tbnz	w8, #0, 412c94 <ferror@plt+0x10144>
  412c74:	mov	w8, #0x98                  	// #152
  412c78:	umaddl	x1, w0, w8, x20
  412c7c:	ldr	x8, [x1]
  412c80:	cmp	x8, #0x1
  412c84:	b.ne	412c8c <ferror@plt+0x1013c>  // b.any
  412c88:	str	xzr, [x1]
  412c8c:	mov	x2, xzr
  412c90:	bl	402800 <sigaction@plt>
  412c94:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412c98:	ldrb	w8, [x8, #808]
  412c9c:	mov	w9, #0xf                   	// #15
  412ca0:	cmp	w8, #0x0
  412ca4:	csinv	w0, w9, wzr, eq  // eq = none
  412ca8:	tbnz	w8, #0, 412ccc <ferror@plt+0x1017c>
  412cac:	mov	w8, #0x98                  	// #152
  412cb0:	umaddl	x1, w0, w8, x20
  412cb4:	ldr	x8, [x1]
  412cb8:	cmp	x8, #0x1
  412cbc:	b.ne	412cc4 <ferror@plt+0x10174>  // b.any
  412cc0:	str	xzr, [x1]
  412cc4:	mov	x2, xzr
  412cc8:	bl	402800 <sigaction@plt>
  412ccc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412cd0:	ldrb	w8, [x8, #812]
  412cd4:	mov	w9, #0xffffffff            	// #-1
  412cd8:	cmp	w8, #0x0
  412cdc:	cneg	w0, w9, eq  // eq = none
  412ce0:	tbnz	w8, #0, 412d04 <ferror@plt+0x101b4>
  412ce4:	mov	w8, #0x98                  	// #152
  412ce8:	umaddl	x1, w0, w8, x20
  412cec:	ldr	x8, [x1]
  412cf0:	cmp	x8, #0x1
  412cf4:	b.ne	412cfc <ferror@plt+0x101ac>  // b.any
  412cf8:	str	xzr, [x1]
  412cfc:	mov	x2, xzr
  412d00:	bl	402800 <sigaction@plt>
  412d04:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412d08:	ldrb	w8, [x8, #816]
  412d0c:	mov	w9, #0xd                   	// #13
  412d10:	cmp	w8, #0x0
  412d14:	csinv	w0, w9, wzr, eq  // eq = none
  412d18:	tbnz	w8, #0, 412d3c <ferror@plt+0x101ec>
  412d1c:	mov	w8, #0x98                  	// #152
  412d20:	umaddl	x1, w0, w8, x20
  412d24:	ldr	x8, [x1]
  412d28:	cmp	x8, #0x1
  412d2c:	b.ne	412d34 <ferror@plt+0x101e4>  // b.any
  412d30:	str	xzr, [x1]
  412d34:	mov	x2, xzr
  412d38:	bl	402800 <sigaction@plt>
  412d3c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412d40:	ldrb	w8, [x8, #820]
  412d44:	mov	w9, #0x18                  	// #24
  412d48:	cmp	w8, #0x0
  412d4c:	csinv	w0, w9, wzr, eq  // eq = none
  412d50:	tbnz	w8, #0, 412d74 <ferror@plt+0x10224>
  412d54:	mov	w8, #0x98                  	// #152
  412d58:	umaddl	x1, w0, w8, x20
  412d5c:	ldr	x8, [x1]
  412d60:	cmp	x8, #0x1
  412d64:	b.ne	412d6c <ferror@plt+0x1021c>  // b.any
  412d68:	str	xzr, [x1]
  412d6c:	mov	x2, xzr
  412d70:	bl	402800 <sigaction@plt>
  412d74:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  412d78:	ldrb	w8, [x8, #824]
  412d7c:	mov	w9, #0x19                  	// #25
  412d80:	cmp	w8, #0x0
  412d84:	csinv	w0, w9, wzr, eq  // eq = none
  412d88:	tbnz	w8, #0, 412dac <ferror@plt+0x1025c>
  412d8c:	mov	w8, #0x98                  	// #152
  412d90:	umaddl	x1, w0, w8, x20
  412d94:	ldr	x8, [x1]
  412d98:	cmp	x8, #0x1
  412d9c:	b.ne	412da4 <ferror@plt+0x10254>  // b.any
  412da0:	str	xzr, [x1]
  412da4:	mov	x2, xzr
  412da8:	bl	402800 <sigaction@plt>
  412dac:	mov	w0, w19
  412db0:	ldp	x20, x19, [sp, #32]
  412db4:	ldr	x21, [sp, #16]
  412db8:	ldp	x29, x30, [sp], #48
  412dbc:	b	402530 <raise@plt>
  412dc0:	stp	x29, x30, [sp, #-16]!
  412dc4:	mov	x29, sp
  412dc8:	bl	412ddc <ferror@plt+0x1028c>
  412dcc:	cbz	x0, 412dd8 <ferror@plt+0x10288>
  412dd0:	ldp	x29, x30, [sp], #16
  412dd4:	ret
  412dd8:	bl	41761c <ferror@plt+0x14acc>
  412ddc:	stp	x29, x30, [sp, #-80]!
  412de0:	stp	x26, x25, [sp, #16]
  412de4:	stp	x24, x23, [sp, #32]
  412de8:	stp	x22, x21, [sp, #48]
  412dec:	stp	x20, x19, [sp, #64]
  412df0:	mov	x29, sp
  412df4:	mov	x19, x2
  412df8:	mov	x20, x1
  412dfc:	mov	x21, x0
  412e00:	bl	4182c8 <_obstack_memory_used@@Base+0x5c>
  412e04:	mov	x22, x0
  412e08:	bl	418314 <_obstack_memory_used@@Base+0xa8>
  412e0c:	sub	x8, x22, x21
  412e10:	add	x23, x8, x0
  412e14:	cbz	x0, 412e2c <ferror@plt+0x102dc>
  412e18:	add	x8, x0, x22
  412e1c:	ldurb	w8, [x8, #-1]
  412e20:	cmp	w8, #0x2f
  412e24:	cset	w26, ne  // ne = any
  412e28:	b	412e30 <ferror@plt+0x102e0>
  412e2c:	mov	x26, xzr
  412e30:	sub	x22, x20, #0x1
  412e34:	ldrb	w8, [x22, #1]!
  412e38:	cmp	w8, #0x2f
  412e3c:	b.eq	412e34 <ferror@plt+0x102e4>  // b.none
  412e40:	mov	x0, x22
  412e44:	bl	4024f0 <strlen@plt>
  412e48:	add	x8, x23, x26
  412e4c:	add	x8, x8, x0
  412e50:	mov	x24, x0
  412e54:	add	x0, x8, #0x1
  412e58:	bl	4026a0 <malloc@plt>
  412e5c:	mov	x25, x0
  412e60:	cbz	x0, 412eb0 <ferror@plt+0x10360>
  412e64:	mov	x3, #0xffffffffffffffff    	// #-1
  412e68:	mov	x0, x25
  412e6c:	mov	x1, x21
  412e70:	mov	x2, x23
  412e74:	bl	402a20 <__mempcpy_chk@plt>
  412e78:	mov	w8, #0x2f                  	// #47
  412e7c:	strb	w8, [x0]
  412e80:	add	x0, x0, x26
  412e84:	cbz	x19, 412e9c <ferror@plt+0x1034c>
  412e88:	ldrb	w8, [x20]
  412e8c:	cmp	w8, #0x2f
  412e90:	cset	w8, eq  // eq = none
  412e94:	sub	x8, x0, x8
  412e98:	str	x8, [x19]
  412e9c:	mov	x3, #0xffffffffffffffff    	// #-1
  412ea0:	mov	x1, x22
  412ea4:	mov	x2, x24
  412ea8:	bl	402a20 <__mempcpy_chk@plt>
  412eac:	strb	wzr, [x0]
  412eb0:	mov	x0, x25
  412eb4:	ldp	x20, x19, [sp, #64]
  412eb8:	ldp	x22, x21, [sp, #48]
  412ebc:	ldp	x24, x23, [sp, #32]
  412ec0:	ldp	x26, x25, [sp, #16]
  412ec4:	ldp	x29, x30, [sp], #80
  412ec8:	ret
  412ecc:	stp	x29, x30, [sp, #-48]!
  412ed0:	stp	x22, x21, [sp, #16]
  412ed4:	stp	x20, x19, [sp, #32]
  412ed8:	mov	x29, sp
  412edc:	mov	x20, x1
  412ee0:	bl	402690 <fopen@plt>
  412ee4:	mov	x19, x0
  412ee8:	cbz	x0, 412f64 <ferror@plt+0x10414>
  412eec:	mov	x0, x19
  412ef0:	bl	402630 <fileno@plt>
  412ef4:	cmp	w0, #0x2
  412ef8:	b.hi	412f64 <ferror@plt+0x10414>  // b.pmore
  412efc:	bl	416684 <ferror@plt+0x13b34>
  412f00:	tbnz	w0, #31, 412f48 <ferror@plt+0x103f8>
  412f04:	mov	w21, w0
  412f08:	mov	x0, x19
  412f0c:	bl	417b18 <ferror@plt+0x14fc8>
  412f10:	cbnz	w0, 412f28 <ferror@plt+0x103d8>
  412f14:	mov	w0, w21
  412f18:	mov	x1, x20
  412f1c:	bl	402750 <fdopen@plt>
  412f20:	mov	x19, x0
  412f24:	cbnz	x0, 412f64 <ferror@plt+0x10414>
  412f28:	bl	402ac0 <__errno_location@plt>
  412f2c:	ldr	w22, [x0]
  412f30:	mov	x20, x0
  412f34:	mov	w0, w21
  412f38:	bl	4027f0 <close@plt>
  412f3c:	mov	x19, xzr
  412f40:	str	w22, [x20]
  412f44:	b	412f64 <ferror@plt+0x10414>
  412f48:	bl	402ac0 <__errno_location@plt>
  412f4c:	ldr	w21, [x0]
  412f50:	mov	x20, x0
  412f54:	mov	x0, x19
  412f58:	bl	417b18 <ferror@plt+0x14fc8>
  412f5c:	mov	x19, xzr
  412f60:	str	w21, [x20]
  412f64:	mov	x0, x19
  412f68:	ldp	x20, x19, [sp, #32]
  412f6c:	ldp	x22, x21, [sp, #16]
  412f70:	ldp	x29, x30, [sp], #48
  412f74:	ret
  412f78:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  412f7c:	ldr	x0, [x8, #1080]
  412f80:	ret
  412f84:	stp	x29, x30, [sp, #-64]!
  412f88:	stp	x24, x23, [sp, #16]
  412f8c:	mov	x24, x0
  412f90:	mov	w0, #0x68                  	// #104
  412f94:	stp	x22, x21, [sp, #32]
  412f98:	stp	x20, x19, [sp, #48]
  412f9c:	mov	x29, sp
  412fa0:	mov	w22, w4
  412fa4:	mov	x20, x3
  412fa8:	mov	x21, x2
  412fac:	mov	x23, x1
  412fb0:	bl	4026a0 <malloc@plt>
  412fb4:	mov	x19, x0
  412fb8:	cbz	x0, 413004 <ferror@plt+0x104b4>
  412fbc:	and	w8, w22, #0x1
  412fc0:	mov	w9, #0xb                   	// #11
  412fc4:	mov	w0, #0xb                   	// #11
  412fc8:	mov	w1, #0x8                   	// #8
  412fcc:	stp	x24, x23, [x19]
  412fd0:	stp	x21, x20, [x19, #16]
  412fd4:	strb	w8, [x19, #32]
  412fd8:	str	x9, [x19, #48]
  412fdc:	bl	402780 <calloc@plt>
  412fe0:	str	x0, [x19, #40]
  412fe4:	cbz	x0, 412ff8 <ferror@plt+0x104a8>
  412fe8:	add	x8, x19, #0x38
  412fec:	stp	x8, x8, [x19, #72]
  412ff0:	str	xzr, [x19, #96]
  412ff4:	b	413004 <ferror@plt+0x104b4>
  412ff8:	mov	x0, x19
  412ffc:	bl	402930 <free@plt>
  413000:	mov	x19, xzr
  413004:	mov	x0, x19
  413008:	ldp	x20, x19, [sp, #48]
  41300c:	ldp	x22, x21, [sp, #32]
  413010:	ldp	x24, x23, [sp, #16]
  413014:	ldp	x29, x30, [sp], #64
  413018:	ret
  41301c:	stp	x29, x30, [sp, #-80]!
  413020:	stp	x26, x25, [sp, #16]
  413024:	mov	x26, x0
  413028:	mov	w0, #0x68                  	// #104
  41302c:	stp	x24, x23, [sp, #32]
  413030:	stp	x22, x21, [sp, #48]
  413034:	stp	x20, x19, [sp, #64]
  413038:	mov	x29, sp
  41303c:	mov	x20, x6
  413040:	mov	x21, x5
  413044:	mov	w24, w4
  413048:	mov	x22, x3
  41304c:	mov	x23, x2
  413050:	mov	x25, x1
  413054:	bl	4026a0 <malloc@plt>
  413058:	mov	x19, x0
  41305c:	cbz	x0, 413188 <ferror@plt+0x10638>
  413060:	and	w9, w24, #0x1
  413064:	adds	x10, x21, x21, lsr #1
  413068:	strb	w9, [x19, #32]
  41306c:	csinv	x9, x10, xzr, cc  // cc = lo, ul, last
  413070:	mov	w11, #0xa                   	// #10
  413074:	cmp	x9, #0xa
  413078:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x2d94>
  41307c:	mov	x8, xzr
  413080:	stp	x26, x25, [x19]
  413084:	stp	x23, x22, [x19, #16]
  413088:	csel	x9, x9, x11, hi  // hi = pmore
  41308c:	add	x10, x10, #0x950
  413090:	ldr	x22, [x10, x8, lsl #3]
  413094:	cmp	x22, x9
  413098:	b.cs	4130ac <ferror@plt+0x1055c>  // b.hs, b.nlast
  41309c:	add	x8, x8, #0x1
  4130a0:	cmp	x8, #0xe8
  4130a4:	b.ne	413090 <ferror@plt+0x10540>  // b.any
  4130a8:	b	41317c <ferror@plt+0x1062c>
  4130ac:	cmp	x8, #0xda
  4130b0:	str	x22, [x19, #48]
  4130b4:	b.hi	41317c <ferror@plt+0x1062c>  // b.pmore
  4130b8:	mov	w1, #0x8                   	// #8
  4130bc:	mov	x0, x22
  4130c0:	bl	402780 <calloc@plt>
  4130c4:	str	x0, [x19, #40]
  4130c8:	cbz	x0, 41317c <ferror@plt+0x1062c>
  4130cc:	add	x25, x19, #0x38
  4130d0:	str	x21, [x19, #96]
  4130d4:	cbz	x21, 413144 <ferror@plt+0x105f4>
  4130d8:	mov	x23, x25
  4130dc:	b	413118 <ferror@plt+0x105c8>
  4130e0:	ldr	x8, [x19, #40]
  4130e4:	udiv	x9, x0, x22
  4130e8:	msub	x9, x9, x22, x0
  4130ec:	str	x0, [x24, #8]
  4130f0:	lsl	x9, x9, #3
  4130f4:	ldr	x10, [x8, x9]
  4130f8:	subs	x21, x21, #0x1
  4130fc:	add	x20, x20, #0x8
  413100:	str	x10, [x24]
  413104:	str	x24, [x8, x9]
  413108:	str	x23, [x24, #24]
  41310c:	str	x24, [x23, #16]
  413110:	mov	x23, x24
  413114:	b.eq	413148 <ferror@plt+0x105f8>  // b.none
  413118:	mov	w0, #0x28                  	// #40
  41311c:	bl	4026a0 <malloc@plt>
  413120:	cbz	x0, 413154 <ferror@plt+0x10604>
  413124:	mov	x24, x0
  413128:	ldr	x0, [x20]
  41312c:	ldr	x8, [x19, #16]
  413130:	str	x0, [x24, #32]
  413134:	cbz	x8, 4130e0 <ferror@plt+0x10590>
  413138:	blr	x8
  41313c:	ldr	x22, [x19, #48]
  413140:	b	4130e0 <ferror@plt+0x10590>
  413144:	mov	x24, x25
  413148:	str	x25, [x24, #16]
  41314c:	str	x24, [x19, #80]
  413150:	b	413188 <ferror@plt+0x10638>
  413154:	cmp	x23, x25
  413158:	b.eq	413174 <ferror@plt+0x10624>  // b.none
  41315c:	ldr	x20, [x23, #24]
  413160:	mov	x0, x23
  413164:	bl	402930 <free@plt>
  413168:	cmp	x20, x25
  41316c:	mov	x23, x20
  413170:	b.ne	41315c <ferror@plt+0x1060c>  // b.any
  413174:	ldr	x0, [x19, #40]
  413178:	bl	402930 <free@plt>
  41317c:	mov	x0, x19
  413180:	bl	402930 <free@plt>
  413184:	mov	x19, xzr
  413188:	mov	x0, x19
  41318c:	ldp	x20, x19, [sp, #64]
  413190:	ldp	x22, x21, [sp, #48]
  413194:	ldp	x24, x23, [sp, #32]
  413198:	ldp	x26, x25, [sp, #16]
  41319c:	ldp	x29, x30, [sp], #80
  4131a0:	ret
  4131a4:	ldr	x0, [x0, #96]
  4131a8:	ret
  4131ac:	ldr	x0, [x1, #32]
  4131b0:	ret
  4131b4:	stp	x29, x30, [sp, #-48]!
  4131b8:	stp	x20, x19, [sp, #32]
  4131bc:	ldr	x8, [x1, #32]
  4131c0:	str	x21, [sp, #16]
  4131c4:	mov	x29, sp
  4131c8:	cmp	x8, x2
  4131cc:	b.eq	41325c <ferror@plt+0x1070c>  // b.none
  4131d0:	ldr	x8, [x0, #16]
  4131d4:	mov	x19, x1
  4131d8:	mov	x21, x2
  4131dc:	mov	x20, x0
  4131e0:	cbz	x8, 4131f0 <ferror@plt+0x106a0>
  4131e4:	mov	x0, x21
  4131e8:	blr	x8
  4131ec:	b	4131f4 <ferror@plt+0x106a4>
  4131f0:	mov	x0, x21
  4131f4:	ldr	x9, [x19, #8]
  4131f8:	cmp	x0, x9
  4131fc:	b.ne	413208 <ferror@plt+0x106b8>  // b.any
  413200:	str	x21, [x19, #32]
  413204:	b	41325c <ferror@plt+0x1070c>
  413208:	ldp	x10, x8, [x20, #40]
  41320c:	udiv	x11, x9, x8
  413210:	msub	x9, x11, x8, x9
  413214:	add	x9, x10, x9, lsl #3
  413218:	ldr	x10, [x9]
  41321c:	cmp	x10, x19
  413220:	b.eq	413230 <ferror@plt+0x106e0>  // b.none
  413224:	cbz	x10, 413270 <ferror@plt+0x10720>
  413228:	mov	x9, x10
  41322c:	b	413218 <ferror@plt+0x106c8>
  413230:	ldr	x10, [x19]
  413234:	str	x10, [x9]
  413238:	str	x21, [x19, #32]
  41323c:	str	x0, [x19, #8]
  413240:	ldr	x9, [x20, #40]
  413244:	udiv	x10, x0, x8
  413248:	msub	x8, x10, x8, x0
  41324c:	lsl	x8, x8, #3
  413250:	ldr	x10, [x9, x8]
  413254:	str	x10, [x19]
  413258:	str	x19, [x9, x8]
  41325c:	ldp	x20, x19, [sp, #32]
  413260:	ldr	x21, [sp, #16]
  413264:	mov	w0, wzr
  413268:	ldp	x29, x30, [sp], #48
  41326c:	ret
  413270:	bl	402860 <abort@plt>
  413274:	ldr	x8, [x1, #16]
  413278:	add	x9, x0, #0x38
  41327c:	cmp	x8, x9
  413280:	csel	x0, xzr, x8, eq  // eq = none
  413284:	ret
  413288:	ldr	x8, [x1, #24]
  41328c:	add	x9, x0, #0x38
  413290:	cmp	x8, x9
  413294:	csel	x0, xzr, x8, eq  // eq = none
  413298:	ret
  41329c:	stp	x29, x30, [sp, #-16]!
  4132a0:	ldr	x9, [x0, #96]
  4132a4:	mov	x29, sp
  4132a8:	cmp	x9, x1
  4132ac:	b.ls	413300 <ferror@plt+0x107b0>  // b.plast
  4132b0:	sub	x10, x9, #0x1
  4132b4:	cmp	x1, x10, lsr #1
  4132b8:	b.ls	4132e0 <ferror@plt+0x10790>  // b.plast
  4132bc:	ldr	x8, [x0, #80]
  4132c0:	cmp	x10, x1
  4132c4:	b.eq	4132f4 <ferror@plt+0x107a4>  // b.none
  4132c8:	sub	x9, x1, x9
  4132cc:	add	x9, x9, #0x1
  4132d0:	ldr	x8, [x8, #24]
  4132d4:	adds	x9, x9, #0x1
  4132d8:	b.cc	4132d0 <ferror@plt+0x10780>  // b.lo, b.ul, b.last
  4132dc:	b	4132f4 <ferror@plt+0x107a4>
  4132e0:	ldr	x8, [x0, #72]
  4132e4:	cbz	x1, 4132f4 <ferror@plt+0x107a4>
  4132e8:	ldr	x8, [x8, #16]
  4132ec:	subs	x1, x1, #0x1
  4132f0:	b.ne	4132e8 <ferror@plt+0x10798>  // b.any
  4132f4:	ldr	x0, [x8, #32]
  4132f8:	ldp	x29, x30, [sp], #16
  4132fc:	ret
  413300:	bl	402860 <abort@plt>
  413304:	stp	x29, x30, [sp, #-48]!
  413308:	stp	x20, x19, [sp, #32]
  41330c:	ldr	x8, [x0, #96]
  413310:	str	x21, [sp, #16]
  413314:	mov	x29, sp
  413318:	cmp	x8, x1
  41331c:	b.ls	41340c <ferror@plt+0x108bc>  // b.plast
  413320:	sub	x9, x8, #0x1
  413324:	mov	x19, x0
  413328:	mov	x21, x2
  41332c:	cmp	x1, x9, lsr #1
  413330:	b.ls	413358 <ferror@plt+0x10808>  // b.plast
  413334:	ldr	x20, [x19, #80]
  413338:	cmp	x9, x1
  41333c:	b.eq	41336c <ferror@plt+0x1081c>  // b.none
  413340:	sub	x8, x1, x8
  413344:	add	x8, x8, #0x1
  413348:	ldr	x20, [x20, #24]
  41334c:	adds	x8, x8, #0x1
  413350:	b.cc	413348 <ferror@plt+0x107f8>  // b.lo, b.ul, b.last
  413354:	b	41336c <ferror@plt+0x1081c>
  413358:	ldr	x20, [x19, #72]
  41335c:	cbz	x1, 41336c <ferror@plt+0x1081c>
  413360:	ldr	x20, [x20, #16]
  413364:	subs	x1, x1, #0x1
  413368:	b.ne	413360 <ferror@plt+0x10810>  // b.any
  41336c:	ldr	x8, [x20, #32]
  413370:	cmp	x8, x21
  413374:	b.eq	4133f8 <ferror@plt+0x108a8>  // b.none
  413378:	ldr	x8, [x19, #16]
  41337c:	cbz	x8, 41338c <ferror@plt+0x1083c>
  413380:	mov	x0, x21
  413384:	blr	x8
  413388:	b	413390 <ferror@plt+0x10840>
  41338c:	mov	x0, x21
  413390:	ldr	x9, [x20, #8]
  413394:	cmp	x0, x9
  413398:	b.ne	4133a4 <ferror@plt+0x10854>  // b.any
  41339c:	str	x21, [x20, #32]
  4133a0:	b	4133f8 <ferror@plt+0x108a8>
  4133a4:	ldp	x10, x8, [x19, #40]
  4133a8:	udiv	x11, x9, x8
  4133ac:	msub	x9, x11, x8, x9
  4133b0:	add	x9, x10, x9, lsl #3
  4133b4:	ldr	x10, [x9]
  4133b8:	cmp	x10, x20
  4133bc:	b.eq	4133cc <ferror@plt+0x1087c>  // b.none
  4133c0:	cbz	x10, 41340c <ferror@plt+0x108bc>
  4133c4:	mov	x9, x10
  4133c8:	b	4133b4 <ferror@plt+0x10864>
  4133cc:	ldr	x10, [x20]
  4133d0:	str	x10, [x9]
  4133d4:	str	x21, [x20, #32]
  4133d8:	str	x0, [x20, #8]
  4133dc:	ldr	x9, [x19, #40]
  4133e0:	udiv	x10, x0, x8
  4133e4:	msub	x8, x10, x8, x0
  4133e8:	lsl	x8, x8, #3
  4133ec:	ldr	x10, [x9, x8]
  4133f0:	str	x10, [x20]
  4133f4:	str	x20, [x9, x8]
  4133f8:	mov	x0, x20
  4133fc:	ldp	x20, x19, [sp, #32]
  413400:	ldr	x21, [sp, #16]
  413404:	ldp	x29, x30, [sp], #48
  413408:	ret
  41340c:	bl	402860 <abort@plt>
  413410:	stp	x29, x30, [sp, #-96]!
  413414:	str	x27, [sp, #16]
  413418:	subs	x27, x2, x1
  41341c:	stp	x26, x25, [sp, #32]
  413420:	stp	x24, x23, [sp, #48]
  413424:	stp	x22, x21, [sp, #64]
  413428:	stp	x20, x19, [sp, #80]
  41342c:	mov	x29, sp
  413430:	b.cc	413654 <ferror@plt+0x10b04>  // b.lo, b.ul, b.last
  413434:	ldr	x26, [x0, #96]
  413438:	mov	x19, x2
  41343c:	mov	x21, x0
  413440:	cmp	x26, x2
  413444:	b.cc	413654 <ferror@plt+0x10b04>  // b.lo, b.ul, b.last
  413448:	ldr	x8, [x21, #16]
  41344c:	mov	x22, x3
  413450:	mov	x20, x1
  413454:	cbz	x8, 413468 <ferror@plt+0x10918>
  413458:	mov	x0, x22
  41345c:	blr	x8
  413460:	mov	x23, x0
  413464:	b	41346c <ferror@plt+0x1091c>
  413468:	mov	x23, x22
  41346c:	ldp	x9, x8, [x21, #40]
  413470:	ldr	x24, [x21, #8]
  413474:	udiv	x10, x23, x8
  413478:	msub	x8, x10, x8, x23
  41347c:	ldrb	w10, [x21, #32]
  413480:	ldr	x25, [x9, x8, lsl #3]
  413484:	cbz	w10, 4134f8 <ferror@plt+0x109a8>
  413488:	cbz	x25, 413558 <ferror@plt+0x10a08>
  41348c:	mov	x26, xzr
  413490:	b	4134ac <ferror@plt+0x1095c>
  413494:	cmp	x1, x22
  413498:	b.eq	4134cc <ferror@plt+0x1097c>  // b.none
  41349c:	mov	x0, x26
  4134a0:	ldr	x25, [x25]
  4134a4:	mov	x26, x0
  4134a8:	cbz	x25, 41355c <ferror@plt+0x10a0c>
  4134ac:	ldr	x8, [x25, #8]
  4134b0:	cmp	x8, x23
  4134b4:	b.ne	41349c <ferror@plt+0x1094c>  // b.any
  4134b8:	ldr	x1, [x25, #32]
  4134bc:	cbz	x24, 413494 <ferror@plt+0x10944>
  4134c0:	mov	x0, x22
  4134c4:	blr	x24
  4134c8:	tbz	w0, #0, 41349c <ferror@plt+0x1094c>
  4134cc:	mov	x0, x25
  4134d0:	cbz	x26, 4134a0 <ferror@plt+0x10950>
  4134d4:	ldr	x21, [x21, #72]
  4134d8:	cbz	x20, 4134ec <ferror@plt+0x1099c>
  4134dc:	mov	x8, x20
  4134e0:	ldr	x21, [x21, #16]
  4134e4:	subs	x8, x8, #0x1
  4134e8:	b.ne	4134e0 <ferror@plt+0x10990>  // b.any
  4134ec:	cbz	x27, 4135ec <ferror@plt+0x10a9c>
  4134f0:	sub	x19, x20, x19
  4134f4:	b	41360c <ferror@plt+0x10abc>
  4134f8:	cbnz	x25, 413510 <ferror@plt+0x109c0>
  4134fc:	b	413530 <ferror@plt+0x109e0>
  413500:	cmp	x1, x22
  413504:	b.eq	413530 <ferror@plt+0x109e0>  // b.none
  413508:	ldr	x25, [x25]
  41350c:	cbz	x25, 413530 <ferror@plt+0x109e0>
  413510:	ldr	x8, [x25, #8]
  413514:	cmp	x8, x23
  413518:	b.ne	413508 <ferror@plt+0x109b8>  // b.any
  41351c:	ldr	x1, [x25, #32]
  413520:	cbz	x24, 413500 <ferror@plt+0x109b0>
  413524:	mov	x0, x22
  413528:	blr	x24
  41352c:	tbz	w0, #0, 413508 <ferror@plt+0x109b8>
  413530:	cbz	x20, 4135c0 <ferror@plt+0x10a70>
  413534:	ldr	x8, [x21, #72]
  413538:	cmp	x8, x25
  41353c:	b.eq	4135ec <ferror@plt+0x10a9c>  // b.none
  413540:	subs	x20, x20, #0x1
  413544:	b.eq	4135c0 <ferror@plt+0x10a70>  // b.none
  413548:	ldr	x8, [x8, #16]
  41354c:	cmp	x8, x25
  413550:	b.ne	413540 <ferror@plt+0x109f0>  // b.any
  413554:	b	4135ec <ferror@plt+0x10a9c>
  413558:	mov	x0, xzr
  41355c:	cbz	x20, 41358c <ferror@plt+0x10a3c>
  413560:	ldr	x8, [x21, #72]
  413564:	add	x9, x21, #0x38
  413568:	cmp	x8, x9
  41356c:	b.eq	41358c <ferror@plt+0x10a3c>  // b.none
  413570:	cmp	x8, x0
  413574:	b.eq	4135ec <ferror@plt+0x10a9c>  // b.none
  413578:	subs	x20, x20, #0x1
  41357c:	b.eq	41358c <ferror@plt+0x10a3c>  // b.none
  413580:	ldr	x8, [x8, #16]
  413584:	cmp	x8, x9
  413588:	b.ne	413570 <ferror@plt+0x10a20>  // b.any
  41358c:	ldr	x9, [x21, #96]
  413590:	cmp	x9, x19
  413594:	b.ls	413638 <ferror@plt+0x10ae8>  // b.plast
  413598:	ldr	x8, [x21, #80]
  41359c:	cmp	x8, x0
  4135a0:	b.eq	4135ec <ferror@plt+0x10a9c>  // b.none
  4135a4:	sub	x9, x19, x9
  4135a8:	adds	x9, x9, #0x1
  4135ac:	b.cs	413638 <ferror@plt+0x10ae8>  // b.hs, b.nlast
  4135b0:	ldr	x8, [x8, #24]
  4135b4:	cmp	x8, x0
  4135b8:	b.ne	4135a8 <ferror@plt+0x10a58>  // b.any
  4135bc:	b	4135ec <ferror@plt+0x10a9c>
  4135c0:	cmp	x26, x19
  4135c4:	b.ls	413634 <ferror@plt+0x10ae4>  // b.plast
  4135c8:	ldr	x8, [x21, #80]
  4135cc:	cmp	x8, x25
  4135d0:	b.eq	4135ec <ferror@plt+0x10a9c>  // b.none
  4135d4:	sub	x9, x19, x26
  4135d8:	adds	x9, x9, #0x1
  4135dc:	b.cs	413634 <ferror@plt+0x10ae4>  // b.hs, b.nlast
  4135e0:	ldr	x8, [x8, #24]
  4135e4:	cmp	x8, x25
  4135e8:	b.ne	4135d8 <ferror@plt+0x10a88>  // b.any
  4135ec:	mov	x0, xzr
  4135f0:	b	413638 <ferror@plt+0x10ae8>
  4135f4:	cmp	x1, x22
  4135f8:	b.eq	41362c <ferror@plt+0x10adc>  // b.none
  4135fc:	ldr	x21, [x21, #16]
  413600:	adds	x19, x19, #0x1
  413604:	mov	x0, xzr
  413608:	b.cs	413638 <ferror@plt+0x10ae8>  // b.hs, b.nlast
  41360c:	ldr	x8, [x21, #8]
  413610:	cmp	x8, x23
  413614:	b.ne	4135fc <ferror@plt+0x10aac>  // b.any
  413618:	ldr	x1, [x21, #32]
  41361c:	cbz	x24, 4135f4 <ferror@plt+0x10aa4>
  413620:	mov	x0, x22
  413624:	blr	x24
  413628:	tbz	w0, #0, 4135fc <ferror@plt+0x10aac>
  41362c:	mov	x0, x21
  413630:	b	413638 <ferror@plt+0x10ae8>
  413634:	mov	x0, x25
  413638:	ldp	x20, x19, [sp, #80]
  41363c:	ldp	x22, x21, [sp, #64]
  413640:	ldp	x24, x23, [sp, #48]
  413644:	ldp	x26, x25, [sp, #32]
  413648:	ldr	x27, [sp, #16]
  41364c:	ldp	x29, x30, [sp], #96
  413650:	ret
  413654:	bl	402860 <abort@plt>
  413658:	stp	x29, x30, [sp, #-80]!
  41365c:	cmp	x1, x2
  413660:	stp	x26, x25, [sp, #16]
  413664:	stp	x24, x23, [sp, #32]
  413668:	stp	x22, x21, [sp, #48]
  41366c:	stp	x20, x19, [sp, #64]
  413670:	mov	x29, sp
  413674:	b.hi	413808 <ferror@plt+0x10cb8>  // b.pmore
  413678:	ldr	x8, [x0, #96]
  41367c:	mov	x20, x2
  413680:	mov	x23, x0
  413684:	cmp	x8, x2
  413688:	b.cc	413808 <ferror@plt+0x10cb8>  // b.lo, b.ul, b.last
  41368c:	ldr	x8, [x23, #16]
  413690:	mov	x21, x3
  413694:	mov	x19, x1
  413698:	cbz	x8, 4136ac <ferror@plt+0x10b5c>
  41369c:	mov	x0, x21
  4136a0:	blr	x8
  4136a4:	mov	x22, x0
  4136a8:	b	4136b0 <ferror@plt+0x10b60>
  4136ac:	mov	x22, x21
  4136b0:	ldp	x9, x8, [x23, #40]
  4136b4:	ldr	x24, [x23, #8]
  4136b8:	udiv	x10, x22, x8
  4136bc:	msub	x8, x10, x8, x22
  4136c0:	ldrb	w10, [x23, #32]
  4136c4:	ldr	x25, [x9, x8, lsl #3]
  4136c8:	cbz	w10, 41373c <ferror@plt+0x10bec>
  4136cc:	cbz	x25, 4137a8 <ferror@plt+0x10c58>
  4136d0:	mov	x8, xzr
  4136d4:	b	4136ec <ferror@plt+0x10b9c>
  4136d8:	cmp	x1, x21
  4136dc:	b.eq	413710 <ferror@plt+0x10bc0>  // b.none
  4136e0:	mov	x8, x26
  4136e4:	ldr	x25, [x25]
  4136e8:	cbz	x25, 41377c <ferror@plt+0x10c2c>
  4136ec:	ldr	x9, [x25, #8]
  4136f0:	mov	x26, x8
  4136f4:	cmp	x9, x22
  4136f8:	b.ne	4136e0 <ferror@plt+0x10b90>  // b.any
  4136fc:	ldr	x1, [x25, #32]
  413700:	cbz	x24, 4136d8 <ferror@plt+0x10b88>
  413704:	mov	x0, x21
  413708:	blr	x24
  41370c:	tbz	w0, #0, 4136e0 <ferror@plt+0x10b90>
  413710:	mov	x8, x25
  413714:	cbz	x26, 4136e4 <ferror@plt+0x10b94>
  413718:	ldr	x23, [x23, #72]
  41371c:	cbz	x19, 413730 <ferror@plt+0x10be0>
  413720:	mov	x8, x19
  413724:	ldr	x23, [x23, #16]
  413728:	subs	x8, x8, #0x1
  41372c:	b.ne	413724 <ferror@plt+0x10bd4>  // b.any
  413730:	cmp	x19, x20
  413734:	b.cc	4137e0 <ferror@plt+0x10c90>  // b.lo, b.ul, b.last
  413738:	b	4137a8 <ferror@plt+0x10c58>
  41373c:	cbnz	x25, 413754 <ferror@plt+0x10c04>
  413740:	b	4137a8 <ferror@plt+0x10c58>
  413744:	cmp	x1, x21
  413748:	b.eq	413774 <ferror@plt+0x10c24>  // b.none
  41374c:	ldr	x25, [x25]
  413750:	cbz	x25, 4137a8 <ferror@plt+0x10c58>
  413754:	ldr	x8, [x25, #8]
  413758:	cmp	x8, x22
  41375c:	b.ne	41374c <ferror@plt+0x10bfc>  // b.any
  413760:	ldr	x1, [x25, #32]
  413764:	cbz	x24, 413744 <ferror@plt+0x10bf4>
  413768:	mov	x0, x21
  41376c:	blr	x24
  413770:	tbz	w0, #0, 41374c <ferror@plt+0x10bfc>
  413774:	mov	x8, x25
  413778:	b	413780 <ferror@plt+0x10c30>
  41377c:	cbz	x8, 4137a8 <ferror@plt+0x10c58>
  413780:	add	x10, x23, #0x38
  413784:	mov	x9, #0xffffffffffffffff    	// #-1
  413788:	ldr	x8, [x8, #24]
  41378c:	add	x9, x9, #0x1
  413790:	cmp	x8, x10
  413794:	b.ne	413788 <ferror@plt+0x10c38>  // b.any
  413798:	cmp	x9, x20
  41379c:	ccmp	x9, x19, #0x0, cc  // cc = lo, ul, last
  4137a0:	csinv	x0, x9, xzr, cs  // cs = hs, nlast
  4137a4:	b	4137ac <ferror@plt+0x10c5c>
  4137a8:	mov	x0, #0xffffffffffffffff    	// #-1
  4137ac:	ldp	x20, x19, [sp, #64]
  4137b0:	ldp	x22, x21, [sp, #48]
  4137b4:	ldp	x24, x23, [sp, #32]
  4137b8:	ldp	x26, x25, [sp, #16]
  4137bc:	ldp	x29, x30, [sp], #80
  4137c0:	ret
  4137c4:	cmp	x1, x21
  4137c8:	b.eq	413800 <ferror@plt+0x10cb0>  // b.none
  4137cc:	ldr	x23, [x23, #16]
  4137d0:	add	x19, x19, #0x1
  4137d4:	cmp	x20, x19
  4137d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4137dc:	b.eq	4137ac <ferror@plt+0x10c5c>  // b.none
  4137e0:	ldr	x8, [x23, #8]
  4137e4:	cmp	x8, x22
  4137e8:	b.ne	4137cc <ferror@plt+0x10c7c>  // b.any
  4137ec:	ldr	x1, [x23, #32]
  4137f0:	cbz	x24, 4137c4 <ferror@plt+0x10c74>
  4137f4:	mov	x0, x21
  4137f8:	blr	x24
  4137fc:	tbz	w0, #0, 4137cc <ferror@plt+0x10c7c>
  413800:	mov	x0, x19
  413804:	b	4137ac <ferror@plt+0x10c5c>
  413808:	bl	402860 <abort@plt>
  41380c:	stp	x29, x30, [sp, #-48]!
  413810:	stp	x20, x19, [sp, #32]
  413814:	mov	x20, x0
  413818:	mov	w0, #0x28                  	// #40
  41381c:	str	x21, [sp, #16]
  413820:	mov	x29, sp
  413824:	mov	x21, x1
  413828:	bl	4026a0 <malloc@plt>
  41382c:	mov	x19, x0
  413830:	cbz	x0, 413898 <ferror@plt+0x10d48>
  413834:	str	x21, [x19, #32]
  413838:	ldr	x8, [x20, #16]
  41383c:	cbz	x8, 41384c <ferror@plt+0x10cfc>
  413840:	mov	x0, x21
  413844:	blr	x8
  413848:	mov	x21, x0
  41384c:	str	x21, [x19, #8]
  413850:	ldp	x9, x8, [x20, #40]
  413854:	mov	x0, x20
  413858:	udiv	x10, x21, x8
  41385c:	msub	x8, x10, x8, x21
  413860:	lsl	x8, x8, #3
  413864:	ldr	x10, [x9, x8]
  413868:	str	x10, [x19]
  41386c:	add	x10, x20, #0x38
  413870:	str	x19, [x9, x8]
  413874:	str	x10, [x19, #24]
  413878:	ldr	x8, [x20, #72]
  41387c:	str	x8, [x19, #16]
  413880:	str	x19, [x8, #24]
  413884:	str	x19, [x20, #72]
  413888:	ldr	x8, [x20, #96]
  41388c:	add	x8, x8, #0x1
  413890:	str	x8, [x20, #96]
  413894:	bl	414418 <ferror@plt+0x118c8>
  413898:	mov	x0, x19
  41389c:	ldp	x20, x19, [sp, #32]
  4138a0:	ldr	x21, [sp, #16]
  4138a4:	ldp	x29, x30, [sp], #48
  4138a8:	ret
  4138ac:	stp	x29, x30, [sp, #-48]!
  4138b0:	stp	x20, x19, [sp, #32]
  4138b4:	mov	x20, x0
  4138b8:	mov	w0, #0x28                  	// #40
  4138bc:	str	x21, [sp, #16]
  4138c0:	mov	x29, sp
  4138c4:	mov	x21, x1
  4138c8:	bl	4026a0 <malloc@plt>
  4138cc:	mov	x19, x0
  4138d0:	cbz	x0, 413938 <ferror@plt+0x10de8>
  4138d4:	str	x21, [x19, #32]
  4138d8:	ldr	x8, [x20, #16]
  4138dc:	cbz	x8, 4138ec <ferror@plt+0x10d9c>
  4138e0:	mov	x0, x21
  4138e4:	blr	x8
  4138e8:	mov	x21, x0
  4138ec:	str	x21, [x19, #8]
  4138f0:	ldp	x9, x8, [x20, #40]
  4138f4:	mov	x0, x20
  4138f8:	udiv	x10, x21, x8
  4138fc:	msub	x8, x10, x8, x21
  413900:	lsl	x8, x8, #3
  413904:	ldr	x10, [x9, x8]
  413908:	str	x10, [x19]
  41390c:	add	x10, x20, #0x38
  413910:	str	x19, [x9, x8]
  413914:	str	x10, [x19, #16]
  413918:	ldr	x8, [x20, #80]
  41391c:	str	x8, [x19, #24]
  413920:	str	x19, [x8, #16]
  413924:	ldr	x8, [x20, #96]
  413928:	str	x19, [x20, #80]
  41392c:	add	x8, x8, #0x1
  413930:	str	x8, [x20, #96]
  413934:	bl	414418 <ferror@plt+0x118c8>
  413938:	mov	x0, x19
  41393c:	ldp	x20, x19, [sp, #32]
  413940:	ldr	x21, [sp, #16]
  413944:	ldp	x29, x30, [sp], #48
  413948:	ret
  41394c:	stp	x29, x30, [sp, #-48]!
  413950:	stp	x20, x19, [sp, #32]
  413954:	mov	x20, x0
  413958:	mov	w0, #0x28                  	// #40
  41395c:	stp	x22, x21, [sp, #16]
  413960:	mov	x29, sp
  413964:	mov	x22, x2
  413968:	mov	x21, x1
  41396c:	bl	4026a0 <malloc@plt>
  413970:	mov	x19, x0
  413974:	cbz	x0, 4139d8 <ferror@plt+0x10e88>
  413978:	str	x22, [x19, #32]
  41397c:	ldr	x8, [x20, #16]
  413980:	cbz	x8, 413990 <ferror@plt+0x10e40>
  413984:	mov	x0, x22
  413988:	blr	x8
  41398c:	mov	x22, x0
  413990:	str	x22, [x19, #8]
  413994:	ldp	x9, x8, [x20, #40]
  413998:	mov	x0, x20
  41399c:	udiv	x10, x22, x8
  4139a0:	msub	x8, x10, x8, x22
  4139a4:	lsl	x8, x8, #3
  4139a8:	ldr	x10, [x9, x8]
  4139ac:	str	x10, [x19]
  4139b0:	str	x19, [x9, x8]
  4139b4:	str	x21, [x19, #16]
  4139b8:	ldr	x8, [x21, #24]
  4139bc:	str	x8, [x19, #24]
  4139c0:	str	x19, [x8, #16]
  4139c4:	str	x19, [x21, #24]
  4139c8:	ldr	x8, [x20, #96]
  4139cc:	add	x8, x8, #0x1
  4139d0:	str	x8, [x20, #96]
  4139d4:	bl	414418 <ferror@plt+0x118c8>
  4139d8:	mov	x0, x19
  4139dc:	ldp	x20, x19, [sp, #32]
  4139e0:	ldp	x22, x21, [sp, #16]
  4139e4:	ldp	x29, x30, [sp], #48
  4139e8:	ret
  4139ec:	stp	x29, x30, [sp, #-48]!
  4139f0:	stp	x20, x19, [sp, #32]
  4139f4:	mov	x20, x0
  4139f8:	mov	w0, #0x28                  	// #40
  4139fc:	stp	x22, x21, [sp, #16]
  413a00:	mov	x29, sp
  413a04:	mov	x22, x2
  413a08:	mov	x21, x1
  413a0c:	bl	4026a0 <malloc@plt>
  413a10:	mov	x19, x0
  413a14:	cbz	x0, 413a78 <ferror@plt+0x10f28>
  413a18:	str	x22, [x19, #32]
  413a1c:	ldr	x8, [x20, #16]
  413a20:	cbz	x8, 413a30 <ferror@plt+0x10ee0>
  413a24:	mov	x0, x22
  413a28:	blr	x8
  413a2c:	mov	x22, x0
  413a30:	str	x22, [x19, #8]
  413a34:	ldp	x9, x8, [x20, #40]
  413a38:	mov	x0, x20
  413a3c:	udiv	x10, x22, x8
  413a40:	msub	x8, x10, x8, x22
  413a44:	lsl	x8, x8, #3
  413a48:	ldr	x10, [x9, x8]
  413a4c:	str	x10, [x19]
  413a50:	str	x19, [x9, x8]
  413a54:	str	x21, [x19, #24]
  413a58:	ldr	x8, [x21, #16]
  413a5c:	str	x8, [x19, #16]
  413a60:	str	x19, [x8, #24]
  413a64:	str	x19, [x21, #16]
  413a68:	ldr	x8, [x20, #96]
  413a6c:	add	x8, x8, #0x1
  413a70:	str	x8, [x20, #96]
  413a74:	bl	414418 <ferror@plt+0x118c8>
  413a78:	mov	x0, x19
  413a7c:	ldp	x20, x19, [sp, #32]
  413a80:	ldp	x22, x21, [sp, #16]
  413a84:	ldp	x29, x30, [sp], #48
  413a88:	ret
  413a8c:	stp	x29, x30, [sp, #-64]!
  413a90:	stp	x22, x21, [sp, #32]
  413a94:	stp	x20, x19, [sp, #48]
  413a98:	str	x23, [sp, #16]
  413a9c:	ldr	x23, [x0, #96]
  413aa0:	mov	x29, sp
  413aa4:	cmp	x23, x1
  413aa8:	b.cc	413b90 <ferror@plt+0x11040>  // b.lo, b.ul, b.last
  413aac:	mov	x19, x0
  413ab0:	mov	w0, #0x28                  	// #40
  413ab4:	mov	x21, x1
  413ab8:	mov	x22, x2
  413abc:	bl	4026a0 <malloc@plt>
  413ac0:	mov	x20, x0
  413ac4:	cbz	x0, 413b78 <ferror@plt+0x11028>
  413ac8:	str	x22, [x20, #32]
  413acc:	ldr	x8, [x19, #16]
  413ad0:	cbz	x8, 413ae0 <ferror@plt+0x10f90>
  413ad4:	mov	x0, x22
  413ad8:	blr	x8
  413adc:	mov	x22, x0
  413ae0:	str	x22, [x20, #8]
  413ae4:	ldp	x9, x8, [x19, #40]
  413ae8:	cmp	x21, x23, lsr #1
  413aec:	udiv	x10, x22, x8
  413af0:	msub	x8, x10, x8, x22
  413af4:	lsl	x8, x8, #3
  413af8:	ldr	x10, [x9, x8]
  413afc:	str	x10, [x20]
  413b00:	str	x20, [x9, x8]
  413b04:	b.ls	413b3c <ferror@plt+0x10fec>  // b.plast
  413b08:	cmp	x23, x21
  413b0c:	add	x8, x19, #0x38
  413b10:	b.eq	413b24 <ferror@plt+0x10fd4>  // b.none
  413b14:	sub	x9, x21, x23
  413b18:	ldr	x8, [x8, #24]
  413b1c:	adds	x9, x9, #0x1
  413b20:	b.cc	413b18 <ferror@plt+0x10fc8>  // b.lo, b.ul, b.last
  413b24:	str	x8, [x20, #16]
  413b28:	ldr	x9, [x8, #24]
  413b2c:	str	x9, [x20, #24]
  413b30:	str	x20, [x9, #16]
  413b34:	str	x20, [x8, #24]
  413b38:	b	413b64 <ferror@plt+0x11014>
  413b3c:	add	x8, x19, #0x38
  413b40:	cbz	x21, 413b50 <ferror@plt+0x11000>
  413b44:	ldr	x8, [x8, #16]
  413b48:	subs	x21, x21, #0x1
  413b4c:	b.ne	413b44 <ferror@plt+0x10ff4>  // b.any
  413b50:	str	x8, [x20, #24]
  413b54:	ldr	x9, [x8, #16]
  413b58:	str	x9, [x20, #16]
  413b5c:	str	x20, [x9, #24]
  413b60:	str	x20, [x8, #16]
  413b64:	ldr	x8, [x19, #96]
  413b68:	mov	x0, x19
  413b6c:	add	x8, x8, #0x1
  413b70:	str	x8, [x19, #96]
  413b74:	bl	414418 <ferror@plt+0x118c8>
  413b78:	mov	x0, x20
  413b7c:	ldp	x20, x19, [sp, #48]
  413b80:	ldp	x22, x21, [sp, #32]
  413b84:	ldr	x23, [sp, #16]
  413b88:	ldp	x29, x30, [sp], #64
  413b8c:	ret
  413b90:	bl	402860 <abort@plt>
  413b94:	stp	x29, x30, [sp, #-32]!
  413b98:	str	x19, [sp, #16]
  413b9c:	ldr	x8, [x1, #8]
  413ba0:	ldp	x10, x9, [x0, #40]
  413ba4:	mov	x19, x1
  413ba8:	mov	x29, sp
  413bac:	udiv	x11, x8, x9
  413bb0:	msub	x8, x11, x9, x8
  413bb4:	add	x8, x10, x8, lsl #3
  413bb8:	ldr	x9, [x8]
  413bbc:	cmp	x9, x1
  413bc0:	b.eq	413bd8 <ferror@plt+0x11088>  // b.none
  413bc4:	cbz	x9, 413c20 <ferror@plt+0x110d0>
  413bc8:	mov	x8, x9
  413bcc:	ldr	x9, [x9]
  413bd0:	cmp	x9, x19
  413bd4:	b.ne	413bc4 <ferror@plt+0x11074>  // b.any
  413bd8:	ldr	x9, [x19]
  413bdc:	str	x9, [x8]
  413be0:	ldp	x9, x8, [x19, #16]
  413be4:	str	x9, [x8, #16]
  413be8:	str	x8, [x9, #24]
  413bec:	ldr	x9, [x0, #96]
  413bf0:	ldr	x8, [x0, #24]
  413bf4:	sub	x9, x9, #0x1
  413bf8:	str	x9, [x0, #96]
  413bfc:	cbz	x8, 413c08 <ferror@plt+0x110b8>
  413c00:	ldr	x0, [x19, #32]
  413c04:	blr	x8
  413c08:	mov	x0, x19
  413c0c:	bl	402930 <free@plt>
  413c10:	ldr	x19, [sp, #16]
  413c14:	mov	w0, #0x1                   	// #1
  413c18:	ldp	x29, x30, [sp], #32
  413c1c:	ret
  413c20:	bl	402860 <abort@plt>
  413c24:	stp	x29, x30, [sp, #-32]!
  413c28:	ldr	x9, [x0, #96]
  413c2c:	str	x19, [sp, #16]
  413c30:	mov	x29, sp
  413c34:	cmp	x9, x1
  413c38:	b.ls	413cf0 <ferror@plt+0x111a0>  // b.plast
  413c3c:	sub	x8, x9, #0x1
  413c40:	add	x19, x0, #0x38
  413c44:	cmp	x1, x8, lsr #1
  413c48:	b.ls	413c70 <ferror@plt+0x11120>  // b.plast
  413c4c:	sub	x9, x1, x9
  413c50:	mov	x10, x19
  413c54:	ldr	x19, [x19, #24]
  413c58:	adds	x9, x9, #0x1
  413c5c:	b.cc	413c50 <ferror@plt+0x11100>  // b.lo, b.ul, b.last
  413c60:	ldr	x9, [x19, #24]
  413c64:	str	x9, [x10, #24]
  413c68:	str	x10, [x9, #16]
  413c6c:	b	413c90 <ferror@plt+0x11140>
  413c70:	add	x9, x1, #0x1
  413c74:	mov	x10, x19
  413c78:	ldr	x19, [x19, #16]
  413c7c:	subs	x9, x9, #0x1
  413c80:	b.ne	413c74 <ferror@plt+0x11124>  // b.any
  413c84:	ldr	x9, [x19, #16]
  413c88:	str	x9, [x10, #16]
  413c8c:	str	x10, [x9, #24]
  413c90:	ldr	x9, [x19, #8]
  413c94:	ldp	x11, x10, [x0, #40]
  413c98:	udiv	x12, x9, x10
  413c9c:	msub	x9, x12, x10, x9
  413ca0:	add	x9, x11, x9, lsl #3
  413ca4:	ldr	x10, [x9]
  413ca8:	cmp	x10, x19
  413cac:	b.eq	413cbc <ferror@plt+0x1116c>  // b.none
  413cb0:	cbz	x10, 413cf0 <ferror@plt+0x111a0>
  413cb4:	mov	x9, x10
  413cb8:	b	413ca4 <ferror@plt+0x11154>
  413cbc:	ldr	x10, [x19]
  413cc0:	str	x10, [x9]
  413cc4:	ldr	x9, [x0, #24]
  413cc8:	str	x8, [x0, #96]
  413ccc:	cbz	x9, 413cd8 <ferror@plt+0x11188>
  413cd0:	ldr	x0, [x19, #32]
  413cd4:	blr	x9
  413cd8:	mov	x0, x19
  413cdc:	bl	402930 <free@plt>
  413ce0:	ldr	x19, [sp, #16]
  413ce4:	mov	w0, #0x1                   	// #1
  413ce8:	ldp	x29, x30, [sp], #32
  413cec:	ret
  413cf0:	bl	402860 <abort@plt>
  413cf4:	stp	x29, x30, [sp, #-48]!
  413cf8:	stp	x20, x19, [sp, #32]
  413cfc:	str	x21, [sp, #16]
  413d00:	ldr	x21, [x0, #96]
  413d04:	mov	x3, x1
  413d08:	mov	x1, xzr
  413d0c:	mov	x29, sp
  413d10:	mov	x2, x21
  413d14:	mov	x20, x0
  413d18:	bl	413410 <ferror@plt+0x108c0>
  413d1c:	cbz	x0, 413d88 <ferror@plt+0x11238>
  413d20:	ldr	x8, [x0, #8]
  413d24:	ldp	x10, x9, [x20, #40]
  413d28:	mov	x19, x0
  413d2c:	udiv	x11, x8, x9
  413d30:	msub	x8, x11, x9, x8
  413d34:	add	x8, x10, x8, lsl #3
  413d38:	ldr	x9, [x8]
  413d3c:	cmp	x9, x19
  413d40:	b.eq	413d50 <ferror@plt+0x11200>  // b.none
  413d44:	cbz	x9, 413d98 <ferror@plt+0x11248>
  413d48:	mov	x8, x9
  413d4c:	b	413d38 <ferror@plt+0x111e8>
  413d50:	ldr	x9, [x19]
  413d54:	str	x9, [x8]
  413d58:	ldp	x9, x8, [x19, #16]
  413d5c:	str	x9, [x8, #16]
  413d60:	str	x8, [x9, #24]
  413d64:	ldr	x8, [x20, #24]
  413d68:	sub	x9, x21, #0x1
  413d6c:	str	x9, [x20, #96]
  413d70:	cbz	x8, 413d7c <ferror@plt+0x1122c>
  413d74:	ldr	x0, [x19, #32]
  413d78:	blr	x8
  413d7c:	mov	x0, x19
  413d80:	bl	402930 <free@plt>
  413d84:	mov	w0, #0x1                   	// #1
  413d88:	ldp	x20, x19, [sp, #32]
  413d8c:	ldr	x21, [sp, #16]
  413d90:	ldp	x29, x30, [sp], #48
  413d94:	ret
  413d98:	bl	402860 <abort@plt>
  413d9c:	stp	x29, x30, [sp, #-64]!
  413da0:	stp	x22, x21, [sp, #32]
  413da4:	stp	x20, x19, [sp, #48]
  413da8:	ldr	x20, [x0, #72]
  413dac:	add	x21, x0, #0x38
  413db0:	mov	x19, x0
  413db4:	str	x23, [sp, #16]
  413db8:	cmp	x20, x21
  413dbc:	mov	x29, sp
  413dc0:	b.eq	413df4 <ferror@plt+0x112a4>  // b.none
  413dc4:	ldr	x22, [x19, #24]
  413dc8:	b	413de0 <ferror@plt+0x11290>
  413dcc:	mov	x0, x20
  413dd0:	bl	402930 <free@plt>
  413dd4:	cmp	x23, x21
  413dd8:	mov	x20, x23
  413ddc:	b.eq	413df4 <ferror@plt+0x112a4>  // b.none
  413de0:	ldr	x23, [x20, #16]
  413de4:	cbz	x22, 413dcc <ferror@plt+0x1127c>
  413de8:	ldr	x0, [x20, #32]
  413dec:	blr	x22
  413df0:	b	413dcc <ferror@plt+0x1127c>
  413df4:	ldr	x0, [x19, #40]
  413df8:	bl	402930 <free@plt>
  413dfc:	mov	x0, x19
  413e00:	ldp	x20, x19, [sp, #48]
  413e04:	ldp	x22, x21, [sp, #32]
  413e08:	ldr	x23, [sp, #16]
  413e0c:	ldp	x29, x30, [sp], #64
  413e10:	b	402930 <free@plt>
  413e14:	ldr	x9, [x0]
  413e18:	add	x10, x0, #0x38
  413e1c:	stp	x9, x0, [x8]
  413e20:	ldr	x9, [x0, #72]
  413e24:	stp	x9, x10, [x8, #24]
  413e28:	ret
  413e2c:	stp	x29, x30, [sp, #-16]!
  413e30:	subs	x10, x2, x1
  413e34:	mov	x29, sp
  413e38:	b.cc	413f14 <ferror@plt+0x113c4>  // b.lo, b.ul, b.last
  413e3c:	ldr	x11, [x0, #96]
  413e40:	subs	x12, x11, x2
  413e44:	b.cc	413f14 <ferror@plt+0x113c4>  // b.lo, b.ul, b.last
  413e48:	ldr	x9, [x0]
  413e4c:	cmp	x10, x1
  413e50:	stp	x9, x0, [x8]
  413e54:	b.cs	413e98 <ferror@plt+0x11348>  // b.hs, b.nlast
  413e58:	cmp	x12, x1
  413e5c:	b.cs	413e98 <ferror@plt+0x11348>  // b.hs, b.nlast
  413e60:	add	x9, x0, #0x38
  413e64:	cbz	x12, 413e78 <ferror@plt+0x11328>
  413e68:	sub	x11, x2, x11
  413e6c:	ldr	x9, [x9, #24]
  413e70:	adds	x11, x11, #0x1
  413e74:	b.cc	413e6c <ferror@plt+0x1131c>  // b.lo, b.ul, b.last
  413e78:	str	x9, [x8, #32]
  413e7c:	cbz	x10, 413e90 <ferror@plt+0x11340>
  413e80:	sub	x10, x1, x2
  413e84:	ldr	x9, [x9, #24]
  413e88:	adds	x10, x10, #0x1
  413e8c:	b.cc	413e84 <ferror@plt+0x11334>  // b.lo, b.ul, b.last
  413e90:	add	x8, x8, #0x18
  413e94:	b	413f08 <ferror@plt+0x113b8>
  413e98:	cmp	x10, x12
  413e9c:	b.ls	413ed4 <ferror@plt+0x11384>  // b.plast
  413ea0:	ldr	x10, [x0, #72]
  413ea4:	add	x9, x0, #0x38
  413ea8:	cbz	x1, 413eb8 <ferror@plt+0x11368>
  413eac:	ldr	x10, [x10, #16]
  413eb0:	subs	x1, x1, #0x1
  413eb4:	b.ne	413eac <ferror@plt+0x1135c>  // b.any
  413eb8:	str	x10, [x8, #24]
  413ebc:	cbz	x12, 413f04 <ferror@plt+0x113b4>
  413ec0:	sub	x10, x2, x11
  413ec4:	ldr	x9, [x9, #24]
  413ec8:	adds	x10, x10, #0x1
  413ecc:	b.cc	413ec4 <ferror@plt+0x11374>  // b.lo, b.ul, b.last
  413ed0:	b	413f04 <ferror@plt+0x113b4>
  413ed4:	ldr	x9, [x0, #72]
  413ed8:	cbz	x1, 413eec <ferror@plt+0x1139c>
  413edc:	mov	x11, x1
  413ee0:	ldr	x9, [x9, #16]
  413ee4:	subs	x11, x11, #0x1
  413ee8:	b.ne	413ee0 <ferror@plt+0x11390>  // b.any
  413eec:	str	x9, [x8, #24]
  413ef0:	cbz	x10, 413f04 <ferror@plt+0x113b4>
  413ef4:	sub	x10, x1, x2
  413ef8:	ldr	x9, [x9, #16]
  413efc:	adds	x10, x10, #0x1
  413f00:	b.cc	413ef8 <ferror@plt+0x113a8>  // b.lo, b.ul, b.last
  413f04:	add	x8, x8, #0x20
  413f08:	str	x9, [x8]
  413f0c:	ldp	x29, x30, [sp], #16
  413f10:	ret
  413f14:	bl	402860 <abort@plt>
  413f18:	ldp	x8, x9, [x0, #24]
  413f1c:	cmp	x8, x9
  413f20:	b.eq	413f44 <ferror@plt+0x113f4>  // b.none
  413f24:	ldr	x9, [x8, #32]
  413f28:	str	x9, [x1]
  413f2c:	cbz	x2, 413f34 <ferror@plt+0x113e4>
  413f30:	str	x8, [x2]
  413f34:	ldr	x8, [x8, #16]
  413f38:	str	x8, [x0, #24]
  413f3c:	mov	w0, #0x1                   	// #1
  413f40:	ret
  413f44:	mov	w0, wzr
  413f48:	ret
  413f4c:	ret
  413f50:	stp	x29, x30, [sp, #-64]!
  413f54:	stp	x24, x23, [sp, #16]
  413f58:	stp	x22, x21, [sp, #32]
  413f5c:	stp	x20, x19, [sp, #48]
  413f60:	ldr	x22, [x0, #72]
  413f64:	add	x23, x0, #0x38
  413f68:	mov	x29, sp
  413f6c:	cmp	x22, x23
  413f70:	b.eq	413fbc <ferror@plt+0x1146c>  // b.none
  413f74:	mov	x20, x2
  413f78:	mov	x21, x1
  413f7c:	mov	w24, #0x2                   	// #2
  413f80:	ldr	x0, [x22, #32]
  413f84:	mov	x1, x20
  413f88:	blr	x21
  413f8c:	cmp	w0, #0x0
  413f90:	cset	w8, eq  // eq = none
  413f94:	csel	x9, x22, x19, eq  // eq = none
  413f98:	csel	w8, w24, w8, gt
  413f9c:	csel	x19, x19, x9, gt
  413fa0:	cbnz	w8, 413fb4 <ferror@plt+0x11464>
  413fa4:	ldr	x22, [x22, #16]
  413fa8:	cmp	x22, x23
  413fac:	b.ne	413f80 <ferror@plt+0x11430>  // b.any
  413fb0:	b	413fbc <ferror@plt+0x1146c>
  413fb4:	cmp	w8, #0x2
  413fb8:	b.ne	413fc0 <ferror@plt+0x11470>  // b.any
  413fbc:	mov	x19, xzr
  413fc0:	mov	x0, x19
  413fc4:	ldp	x20, x19, [sp, #48]
  413fc8:	ldp	x22, x21, [sp, #32]
  413fcc:	ldp	x24, x23, [sp, #16]
  413fd0:	ldp	x29, x30, [sp], #64
  413fd4:	ret
  413fd8:	stp	x29, x30, [sp, #-48]!
  413fdc:	cmp	x3, x2
  413fe0:	stp	x22, x21, [sp, #16]
  413fe4:	stp	x20, x19, [sp, #32]
  413fe8:	mov	x29, sp
  413fec:	b.cc	414094 <ferror@plt+0x11544>  // b.lo, b.ul, b.last
  413ff0:	ldr	x8, [x0, #96]
  413ff4:	cmp	x8, x3
  413ff8:	b.cc	414094 <ferror@plt+0x11544>  // b.lo, b.ul, b.last
  413ffc:	cmp	x3, x2
  414000:	b.eq	41407c <ferror@plt+0x1152c>  // b.none
  414004:	sub	x9, x8, #0x1
  414008:	mov	x19, x4
  41400c:	mov	x20, x1
  414010:	cmp	x2, x9, lsr #1
  414014:	b.ls	41403c <ferror@plt+0x114ec>  // b.plast
  414018:	ldr	x21, [x0, #80]
  41401c:	cmp	x9, x2
  414020:	b.eq	414054 <ferror@plt+0x11504>  // b.none
  414024:	sub	x8, x2, x8
  414028:	add	x8, x8, #0x1
  41402c:	ldr	x21, [x21, #24]
  414030:	adds	x8, x8, #0x1
  414034:	b.cc	41402c <ferror@plt+0x114dc>  // b.lo, b.ul, b.last
  414038:	b	414054 <ferror@plt+0x11504>
  41403c:	ldr	x21, [x0, #72]
  414040:	cbz	x2, 414054 <ferror@plt+0x11504>
  414044:	mov	x8, x2
  414048:	ldr	x21, [x21, #16]
  41404c:	subs	x8, x8, #0x1
  414050:	b.ne	414048 <ferror@plt+0x114f8>  // b.any
  414054:	sub	x22, x2, x3
  414058:	ldr	x0, [x21, #32]
  41405c:	mov	x1, x19
  414060:	blr	x20
  414064:	cmp	w0, #0x0
  414068:	b.gt	41407c <ferror@plt+0x1152c>
  41406c:	cbz	w0, 414080 <ferror@plt+0x11530>
  414070:	ldr	x21, [x21, #16]
  414074:	adds	x22, x22, #0x1
  414078:	b.cc	414058 <ferror@plt+0x11508>  // b.lo, b.ul, b.last
  41407c:	mov	x21, xzr
  414080:	mov	x0, x21
  414084:	ldp	x20, x19, [sp, #32]
  414088:	ldp	x22, x21, [sp, #16]
  41408c:	ldp	x29, x30, [sp], #48
  414090:	ret
  414094:	bl	402860 <abort@plt>
  414098:	stp	x29, x30, [sp, #-80]!
  41409c:	stp	x24, x23, [sp, #32]
  4140a0:	stp	x22, x21, [sp, #48]
  4140a4:	stp	x20, x19, [sp, #64]
  4140a8:	ldr	x22, [x0, #72]
  4140ac:	add	x23, x0, #0x38
  4140b0:	str	x25, [sp, #16]
  4140b4:	mov	x29, sp
  4140b8:	cmp	x22, x23
  4140bc:	b.eq	414110 <ferror@plt+0x115c0>  // b.none
  4140c0:	mov	x20, x2
  4140c4:	mov	x21, x1
  4140c8:	mov	x24, xzr
  4140cc:	mov	w25, #0x2                   	// #2
  4140d0:	ldr	x0, [x22, #32]
  4140d4:	mov	x1, x20
  4140d8:	blr	x21
  4140dc:	cmp	w0, #0x0
  4140e0:	cset	w8, eq  // eq = none
  4140e4:	csel	x9, x24, x19, eq  // eq = none
  4140e8:	csel	w8, w25, w8, gt
  4140ec:	csel	x19, x19, x9, gt
  4140f0:	cbnz	w8, 414108 <ferror@plt+0x115b8>
  4140f4:	ldr	x22, [x22, #16]
  4140f8:	add	x24, x24, #0x1
  4140fc:	cmp	x22, x23
  414100:	b.ne	4140d0 <ferror@plt+0x11580>  // b.any
  414104:	b	414110 <ferror@plt+0x115c0>
  414108:	cmp	w8, #0x2
  41410c:	b.ne	414114 <ferror@plt+0x115c4>  // b.any
  414110:	mov	x19, #0xffffffffffffffff    	// #-1
  414114:	mov	x0, x19
  414118:	ldp	x20, x19, [sp, #64]
  41411c:	ldp	x22, x21, [sp, #48]
  414120:	ldp	x24, x23, [sp, #32]
  414124:	ldr	x25, [sp, #16]
  414128:	ldp	x29, x30, [sp], #80
  41412c:	ret
  414130:	stp	x29, x30, [sp, #-64]!
  414134:	cmp	x3, x2
  414138:	str	x23, [sp, #16]
  41413c:	stp	x22, x21, [sp, #32]
  414140:	stp	x20, x19, [sp, #48]
  414144:	mov	x29, sp
  414148:	b.cc	414200 <ferror@plt+0x116b0>  // b.lo, b.ul, b.last
  41414c:	ldr	x8, [x0, #96]
  414150:	mov	x21, x3
  414154:	cmp	x8, x3
  414158:	b.cc	414200 <ferror@plt+0x116b0>  // b.lo, b.ul, b.last
  41415c:	mov	x19, x2
  414160:	cmp	x21, x2
  414164:	b.eq	4141e4 <ferror@plt+0x11694>  // b.none
  414168:	sub	x9, x8, #0x1
  41416c:	mov	x20, x4
  414170:	mov	x22, x1
  414174:	cmp	x19, x9, lsr #1
  414178:	b.ls	4141a0 <ferror@plt+0x11650>  // b.plast
  41417c:	ldr	x23, [x0, #80]
  414180:	cmp	x9, x19
  414184:	b.eq	4141d0 <ferror@plt+0x11680>  // b.none
  414188:	sub	x8, x19, x8
  41418c:	add	x8, x8, #0x1
  414190:	ldr	x23, [x23, #24]
  414194:	adds	x8, x8, #0x1
  414198:	b.cc	414190 <ferror@plt+0x11640>  // b.lo, b.ul, b.last
  41419c:	b	4141d0 <ferror@plt+0x11680>
  4141a0:	ldr	x23, [x0, #72]
  4141a4:	cbz	x19, 4141d0 <ferror@plt+0x11680>
  4141a8:	mov	x8, x19
  4141ac:	ldr	x23, [x23, #16]
  4141b0:	subs	x8, x8, #0x1
  4141b4:	b.ne	4141ac <ferror@plt+0x1165c>  // b.any
  4141b8:	b	4141d0 <ferror@plt+0x11680>
  4141bc:	cbz	w0, 4141e8 <ferror@plt+0x11698>
  4141c0:	ldr	x23, [x23, #16]
  4141c4:	add	x19, x19, #0x1
  4141c8:	cmp	x21, x19
  4141cc:	b.eq	4141e4 <ferror@plt+0x11694>  // b.none
  4141d0:	ldr	x0, [x23, #32]
  4141d4:	mov	x1, x20
  4141d8:	blr	x22
  4141dc:	cmp	w0, #0x0
  4141e0:	b.le	4141bc <ferror@plt+0x1166c>
  4141e4:	mov	x19, #0xffffffffffffffff    	// #-1
  4141e8:	mov	x0, x19
  4141ec:	ldp	x20, x19, [sp, #48]
  4141f0:	ldp	x22, x21, [sp, #32]
  4141f4:	ldr	x23, [sp, #16]
  4141f8:	ldp	x29, x30, [sp], #64
  4141fc:	ret
  414200:	bl	402860 <abort@plt>
  414204:	stp	x29, x30, [sp, #-64]!
  414208:	stp	x22, x21, [sp, #32]
  41420c:	stp	x20, x19, [sp, #48]
  414210:	ldr	x22, [x0, #72]
  414214:	str	x23, [sp, #16]
  414218:	add	x23, x0, #0x38
  41421c:	mov	x21, x2
  414220:	mov	x19, x0
  414224:	cmp	x22, x23
  414228:	mov	x29, sp
  41422c:	b.eq	414250 <ferror@plt+0x11700>  // b.none
  414230:	mov	x20, x1
  414234:	ldr	x0, [x22, #32]
  414238:	mov	x1, x21
  41423c:	blr	x20
  414240:	tbz	w0, #31, 4142b4 <ferror@plt+0x11764>
  414244:	ldr	x22, [x22, #16]
  414248:	cmp	x22, x23
  41424c:	b.ne	414234 <ferror@plt+0x116e4>  // b.any
  414250:	mov	w0, #0x28                  	// #40
  414254:	bl	4026a0 <malloc@plt>
  414258:	mov	x20, x0
  41425c:	cbz	x0, 414324 <ferror@plt+0x117d4>
  414260:	str	x21, [x20, #32]
  414264:	ldr	x8, [x19, #16]
  414268:	cbz	x8, 414278 <ferror@plt+0x11728>
  41426c:	mov	x0, x21
  414270:	blr	x8
  414274:	mov	x21, x0
  414278:	str	x21, [x20, #8]
  41427c:	ldp	x9, x8, [x19, #40]
  414280:	udiv	x10, x21, x8
  414284:	msub	x8, x10, x8, x21
  414288:	lsl	x8, x8, #3
  41428c:	ldr	x10, [x9, x8]
  414290:	str	x10, [x20]
  414294:	str	x20, [x9, x8]
  414298:	str	x23, [x20, #16]
  41429c:	ldr	x8, [x19, #80]
  4142a0:	str	x8, [x20, #24]
  4142a4:	str	x20, [x8, #16]
  4142a8:	ldr	x8, [x19, #96]
  4142ac:	str	x20, [x19, #80]
  4142b0:	b	414314 <ferror@plt+0x117c4>
  4142b4:	mov	w0, #0x28                  	// #40
  4142b8:	bl	4026a0 <malloc@plt>
  4142bc:	mov	x20, x0
  4142c0:	cbz	x0, 414324 <ferror@plt+0x117d4>
  4142c4:	str	x21, [x20, #32]
  4142c8:	ldr	x8, [x19, #16]
  4142cc:	cbz	x8, 4142dc <ferror@plt+0x1178c>
  4142d0:	mov	x0, x21
  4142d4:	blr	x8
  4142d8:	mov	x21, x0
  4142dc:	str	x21, [x20, #8]
  4142e0:	ldp	x9, x8, [x19, #40]
  4142e4:	udiv	x10, x21, x8
  4142e8:	msub	x8, x10, x8, x21
  4142ec:	lsl	x8, x8, #3
  4142f0:	ldr	x10, [x9, x8]
  4142f4:	str	x10, [x20]
  4142f8:	str	x20, [x9, x8]
  4142fc:	str	x22, [x20, #16]
  414300:	ldr	x8, [x22, #24]
  414304:	str	x8, [x20, #24]
  414308:	str	x20, [x8, #16]
  41430c:	str	x20, [x22, #24]
  414310:	ldr	x8, [x19, #96]
  414314:	add	x8, x8, #0x1
  414318:	mov	x0, x19
  41431c:	str	x8, [x19, #96]
  414320:	bl	414418 <ferror@plt+0x118c8>
  414324:	mov	x0, x20
  414328:	ldp	x20, x19, [sp, #48]
  41432c:	ldp	x22, x21, [sp, #32]
  414330:	ldr	x23, [sp, #16]
  414334:	ldp	x29, x30, [sp], #64
  414338:	ret
  41433c:	stp	x29, x30, [sp, #-64]!
  414340:	stp	x22, x21, [sp, #32]
  414344:	stp	x20, x19, [sp, #48]
  414348:	ldr	x19, [x0, #72]
  41434c:	str	x23, [sp, #16]
  414350:	add	x23, x0, #0x38
  414354:	mov	x29, sp
  414358:	cmp	x19, x23
  41435c:	b.eq	414390 <ferror@plt+0x11840>  // b.none
  414360:	mov	x21, x2
  414364:	mov	x20, x0
  414368:	mov	x22, x1
  41436c:	ldr	x0, [x19, #32]
  414370:	mov	x1, x21
  414374:	blr	x22
  414378:	cmp	w0, #0x0
  41437c:	b.gt	414390 <ferror@plt+0x11840>
  414380:	cbz	w0, 414398 <ferror@plt+0x11848>
  414384:	ldr	x19, [x19, #16]
  414388:	cmp	x19, x23
  41438c:	b.ne	41436c <ferror@plt+0x1181c>  // b.any
  414390:	mov	w0, wzr
  414394:	b	414400 <ferror@plt+0x118b0>
  414398:	ldr	x8, [x19, #8]
  41439c:	ldp	x10, x9, [x20, #40]
  4143a0:	udiv	x11, x8, x9
  4143a4:	msub	x8, x11, x9, x8
  4143a8:	add	x8, x10, x8, lsl #3
  4143ac:	ldr	x9, [x8]
  4143b0:	cmp	x9, x19
  4143b4:	b.eq	4143c4 <ferror@plt+0x11874>  // b.none
  4143b8:	cbz	x9, 414414 <ferror@plt+0x118c4>
  4143bc:	mov	x8, x9
  4143c0:	b	4143ac <ferror@plt+0x1185c>
  4143c4:	ldr	x9, [x19]
  4143c8:	str	x9, [x8]
  4143cc:	ldp	x9, x8, [x19, #16]
  4143d0:	str	x9, [x8, #16]
  4143d4:	str	x8, [x9, #24]
  4143d8:	ldr	x9, [x20, #96]
  4143dc:	ldr	x8, [x20, #24]
  4143e0:	sub	x9, x9, #0x1
  4143e4:	str	x9, [x20, #96]
  4143e8:	cbz	x8, 4143f4 <ferror@plt+0x118a4>
  4143ec:	ldr	x0, [x19, #32]
  4143f0:	blr	x8
  4143f4:	mov	x0, x19
  4143f8:	bl	402930 <free@plt>
  4143fc:	mov	w0, #0x1                   	// #1
  414400:	ldp	x20, x19, [sp, #48]
  414404:	ldp	x22, x21, [sp, #32]
  414408:	ldr	x23, [sp, #16]
  41440c:	ldp	x29, x30, [sp], #64
  414410:	ret
  414414:	bl	402860 <abort@plt>
  414418:	stp	x29, x30, [sp, #-48]!
  41441c:	stp	x22, x21, [sp, #16]
  414420:	stp	x20, x19, [sp, #32]
  414424:	ldr	x8, [x0, #96]
  414428:	ldr	x22, [x0, #48]
  41442c:	mov	x29, sp
  414430:	adds	x8, x8, x8, lsr #1
  414434:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
  414438:	cmp	x8, x22
  41443c:	b.ls	4144e4 <ferror@plt+0x11994>  // b.plast
  414440:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x2d94>
  414444:	mov	x19, x0
  414448:	mov	x9, xzr
  41444c:	add	x10, x10, #0x950
  414450:	ldr	x20, [x10, x9]
  414454:	cmp	x20, x8
  414458:	b.cs	41446c <ferror@plt+0x1191c>  // b.hs, b.nlast
  41445c:	add	x9, x9, #0x8
  414460:	cmp	x9, #0x740
  414464:	b.ne	414450 <ferror@plt+0x11900>  // b.any
  414468:	mov	x20, #0xffffffffffffffff    	// #-1
  41446c:	cmp	x20, x22
  414470:	b.ls	4144e4 <ferror@plt+0x11994>  // b.plast
  414474:	lsr	x8, x20, #61
  414478:	cbnz	x8, 4144e4 <ferror@plt+0x11994>
  41447c:	ldr	x21, [x19, #40]
  414480:	mov	w1, #0x8                   	// #8
  414484:	mov	x0, x20
  414488:	bl	402780 <calloc@plt>
  41448c:	cbz	x0, 4144e4 <ferror@plt+0x11994>
  414490:	cbnz	x22, 4144b0 <ferror@plt+0x11960>
  414494:	stp	x0, x20, [x19, #40]
  414498:	mov	x0, x21
  41449c:	ldp	x20, x19, [sp, #32]
  4144a0:	ldp	x22, x21, [sp, #16]
  4144a4:	ldp	x29, x30, [sp], #48
  4144a8:	b	402930 <free@plt>
  4144ac:	cbz	x22, 414494 <ferror@plt+0x11944>
  4144b0:	sub	x22, x22, #0x1
  4144b4:	ldr	x8, [x21, x22, lsl #3]
  4144b8:	cbz	x8, 4144ac <ferror@plt+0x1195c>
  4144bc:	ldp	x11, x9, [x8]
  4144c0:	udiv	x10, x9, x20
  4144c4:	msub	x9, x10, x20, x9
  4144c8:	lsl	x9, x9, #3
  4144cc:	ldr	x10, [x0, x9]
  4144d0:	str	x10, [x8]
  4144d4:	str	x8, [x0, x9]
  4144d8:	mov	x8, x11
  4144dc:	cbnz	x11, 4144bc <ferror@plt+0x1196c>
  4144e0:	b	4144ac <ferror@plt+0x1195c>
  4144e4:	ldp	x20, x19, [sp, #32]
  4144e8:	ldp	x22, x21, [sp, #16]
  4144ec:	ldp	x29, x30, [sp], #48
  4144f0:	ret
  4144f4:	stp	x29, x30, [sp, #-16]!
  4144f8:	cmn	x0, #0x11
  4144fc:	mov	x29, sp
  414500:	b.hi	41455c <ferror@plt+0x11a0c>  // b.pmore
  414504:	add	x0, x0, #0x10
  414508:	bl	4026a0 <malloc@plt>
  41450c:	cbz	x0, 414554 <ferror@plt+0x11a04>
  414510:	mov	x9, #0xff00ff00ff00ff00    	// #-71777214294589696
  414514:	mov	x8, x0
  414518:	add	x0, x0, #0x10
  41451c:	movk	x9, #0xff01
  414520:	umulh	x9, x0, x9
  414524:	lsr	x9, x9, #8
  414528:	add	x9, x9, x9, lsl #8
  41452c:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  414530:	sub	x9, x0, x9
  414534:	add	x10, x10, #0x340
  414538:	lsl	x9, x9, #3
  41453c:	ldr	x11, [x10, x9]
  414540:	mov	w12, #0xfb4a                	// #64330
  414544:	movk	w12, #0x1415, lsl #16
  414548:	str	w12, [x8, #12]
  41454c:	str	x11, [x8]
  414550:	str	x0, [x10, x9]
  414554:	ldp	x29, x30, [sp], #16
  414558:	ret
  41455c:	mov	x0, xzr
  414560:	ldp	x29, x30, [sp], #16
  414564:	ret
  414568:	cbz	x0, 4145c0 <ferror@plt+0x11a70>
  41456c:	ldur	w8, [x0, #-4]
  414570:	mov	w9, #0xfb4a                	// #64330
  414574:	movk	w9, #0x1415, lsl #16
  414578:	cmp	w8, w9
  41457c:	b.ne	4145c0 <ferror@plt+0x11a70>  // b.any
  414580:	mov	x8, #0xff00ff00ff00ff00    	// #-71777214294589696
  414584:	movk	x8, #0xff01
  414588:	umulh	x8, x0, x8
  41458c:	lsr	x8, x8, #8
  414590:	add	x8, x8, x8, lsl #8
  414594:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  414598:	sub	x8, x0, x8
  41459c:	add	x9, x9, #0x340
  4145a0:	add	x8, x9, x8, lsl #3
  4145a4:	ldr	x9, [x8]
  4145a8:	cbz	x9, 4145c0 <ferror@plt+0x11a70>
  4145ac:	cmp	x9, x0
  4145b0:	b.eq	4145c4 <ferror@plt+0x11a74>  // b.none
  4145b4:	mov	x8, x9
  4145b8:	ldr	x9, [x8, #-16]!
  4145bc:	cbnz	x9, 4145ac <ferror@plt+0x11a5c>
  4145c0:	ret
  4145c4:	ldr	x9, [x0, #-16]!
  4145c8:	str	x9, [x8]
  4145cc:	b	402930 <free@plt>
  4145d0:	and	w1, w1, #0xff
  4145d4:	and	w8, w2, #0xff
  4145d8:	cmp	w1, w8
  4145dc:	b.ne	4145e8 <ferror@plt+0x11a98>  // b.any
  4145e0:	mov	x2, x3
  4145e4:	b	402a00 <memchr@plt>
  4145e8:	cbz	x3, 414614 <ferror@plt+0x11ac4>
  4145ec:	and	x9, x0, #0x7
  4145f0:	cbz	x9, 414614 <ferror@plt+0x11ac4>
  4145f4:	ldrb	w9, [x0]
  4145f8:	cmp	w1, w9
  4145fc:	b.eq	4146b0 <ferror@plt+0x11b60>  // b.none
  414600:	cmp	w8, w9
  414604:	b.eq	4146b0 <ferror@plt+0x11b60>  // b.none
  414608:	subs	x3, x3, #0x1
  41460c:	add	x0, x0, #0x1
  414610:	b.ne	4145ec <ferror@plt+0x11a9c>  // b.any
  414614:	mov	w12, w1
  414618:	mov	w13, w8
  41461c:	bfi	w12, w12, #8, #8
  414620:	bfi	w13, w13, #8, #8
  414624:	mov	x11, #0xfefefefefefefefe    	// #-72340172838076674
  414628:	bfi	x12, x12, #16, #16
  41462c:	bfi	x13, x13, #16, #16
  414630:	movk	x11, #0xfeff
  414634:	bfi	x12, x12, #32, #32
  414638:	bfi	x13, x13, #32, #32
  41463c:	mov	x9, x3
  414640:	subs	x3, x3, #0x8
  414644:	mov	x10, x0
  414648:	b.cc	41467c <ferror@plt+0x11b2c>  // b.lo, b.ul, b.last
  41464c:	mov	x0, x10
  414650:	ldr	x14, [x0], #8
  414654:	eor	x15, x14, x12
  414658:	eor	x14, x14, x13
  41465c:	add	x16, x15, x11
  414660:	add	x17, x14, x11
  414664:	bic	x15, x16, x15
  414668:	bic	x14, x17, x14
  41466c:	orr	x14, x15, x14
  414670:	and	x14, x14, #0x8080808080808080
  414674:	cbz	x14, 41463c <ferror@plt+0x11aec>
  414678:	b	414680 <ferror@plt+0x11b30>
  41467c:	cbz	x9, 4146a4 <ferror@plt+0x11b54>
  414680:	mov	x11, xzr
  414684:	ldrb	w12, [x10, x11]
  414688:	cmp	w1, w12
  41468c:	b.eq	4146ac <ferror@plt+0x11b5c>  // b.none
  414690:	cmp	w8, w12
  414694:	b.eq	4146ac <ferror@plt+0x11b5c>  // b.none
  414698:	add	x11, x11, #0x1
  41469c:	cmp	x9, x11
  4146a0:	b.ne	414684 <ferror@plt+0x11b34>  // b.any
  4146a4:	mov	x0, xzr
  4146a8:	ret
  4146ac:	add	x0, x10, x11
  4146b0:	ret
  4146b4:	stp	x29, x30, [sp, #-32]!
  4146b8:	stp	x20, x19, [sp, #16]
  4146bc:	mov	x29, sp
  4146c0:	cbz	x0, 414740 <ferror@plt+0x11bf0>
  4146c4:	mov	w1, #0x2f                  	// #47
  4146c8:	mov	x19, x0
  4146cc:	bl	402810 <strrchr@plt>
  4146d0:	cmp	x0, #0x0
  4146d4:	csinc	x20, x19, x0, eq  // eq = none
  4146d8:	sub	x8, x20, x19
  4146dc:	cmp	x8, #0x7
  4146e0:	b.lt	414724 <ferror@plt+0x11bd4>  // b.tstop
  4146e4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4146e8:	sub	x0, x20, #0x7
  4146ec:	add	x1, x1, #0xc8
  4146f0:	mov	w2, #0x7                   	// #7
  4146f4:	bl	402700 <strncmp@plt>
  4146f8:	cbnz	w0, 414724 <ferror@plt+0x11bd4>
  4146fc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  414700:	add	x1, x1, #0xd0
  414704:	mov	w2, #0x3                   	// #3
  414708:	mov	x0, x20
  41470c:	bl	402700 <strncmp@plt>
  414710:	mov	x19, x20
  414714:	cbnz	w0, 414724 <ferror@plt+0x11bd4>
  414718:	add	x19, x20, #0x3
  41471c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  414720:	str	x19, [x8, #1080]
  414724:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  414728:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41472c:	str	x19, [x8, #2888]
  414730:	str	x19, [x9, #1024]
  414734:	ldp	x20, x19, [sp, #16]
  414738:	ldp	x29, x30, [sp], #32
  41473c:	ret
  414740:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  414744:	ldr	x3, [x8, #1032]
  414748:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  41474c:	add	x0, x0, #0x90
  414750:	mov	w1, #0x37                  	// #55
  414754:	mov	w2, #0x1                   	// #1
  414758:	bl	4029b0 <fwrite@plt>
  41475c:	bl	402860 <abort@plt>
  414760:	stp	x29, x30, [sp, #-48]!
  414764:	str	x21, [sp, #16]
  414768:	stp	x20, x19, [sp, #32]
  41476c:	mov	x29, sp
  414770:	mov	x19, x0
  414774:	bl	402ac0 <__errno_location@plt>
  414778:	ldr	w21, [x0]
  41477c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  414780:	add	x8, x8, #0xb50
  414784:	cmp	x19, #0x0
  414788:	mov	x20, x0
  41478c:	csel	x0, x8, x19, eq  // eq = none
  414790:	mov	w1, #0x38                  	// #56
  414794:	bl	417570 <ferror@plt+0x14a20>
  414798:	str	w21, [x20]
  41479c:	ldp	x20, x19, [sp, #32]
  4147a0:	ldr	x21, [sp, #16]
  4147a4:	ldp	x29, x30, [sp], #48
  4147a8:	ret
  4147ac:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4147b0:	add	x8, x8, #0xb50
  4147b4:	cmp	x0, #0x0
  4147b8:	csel	x8, x8, x0, eq  // eq = none
  4147bc:	ldr	w0, [x8]
  4147c0:	ret
  4147c4:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4147c8:	add	x8, x8, #0xb50
  4147cc:	cmp	x0, #0x0
  4147d0:	csel	x8, x8, x0, eq  // eq = none
  4147d4:	str	w1, [x8]
  4147d8:	ret
  4147dc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4147e0:	add	x8, x8, #0xb50
  4147e4:	cmp	x0, #0x0
  4147e8:	ubfx	w9, w1, #5, #3
  4147ec:	csel	x8, x8, x0, eq  // eq = none
  4147f0:	add	x8, x8, w9, uxtw #2
  4147f4:	ldr	w9, [x8, #8]
  4147f8:	lsr	w10, w9, w1
  4147fc:	and	w0, w10, #0x1
  414800:	and	w10, w2, #0x1
  414804:	eor	w10, w0, w10
  414808:	lsl	w10, w10, w1
  41480c:	eor	w9, w10, w9
  414810:	str	w9, [x8, #8]
  414814:	ret
  414818:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  41481c:	add	x8, x8, #0xb50
  414820:	cmp	x0, #0x0
  414824:	csel	x8, x8, x0, eq  // eq = none
  414828:	ldr	w0, [x8, #4]
  41482c:	str	w1, [x8, #4]
  414830:	ret
  414834:	stp	x29, x30, [sp, #-16]!
  414838:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  41483c:	add	x8, x8, #0xb50
  414840:	cmp	x0, #0x0
  414844:	csel	x8, x8, x0, eq  // eq = none
  414848:	mov	w9, #0xa                   	// #10
  41484c:	mov	x29, sp
  414850:	str	w9, [x8]
  414854:	cbz	x1, 414868 <ferror@plt+0x11d18>
  414858:	cbz	x2, 414868 <ferror@plt+0x11d18>
  41485c:	stp	x1, x2, [x8, #40]
  414860:	ldp	x29, x30, [sp], #16
  414864:	ret
  414868:	bl	402860 <abort@plt>
  41486c:	sub	sp, sp, #0x60
  414870:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  414874:	add	x8, x8, #0xb50
  414878:	cmp	x4, #0x0
  41487c:	stp	x29, x30, [sp, #16]
  414880:	str	x25, [sp, #32]
  414884:	stp	x24, x23, [sp, #48]
  414888:	stp	x22, x21, [sp, #64]
  41488c:	stp	x20, x19, [sp, #80]
  414890:	add	x29, sp, #0x10
  414894:	mov	x19, x3
  414898:	mov	x20, x2
  41489c:	mov	x21, x1
  4148a0:	mov	x22, x0
  4148a4:	csel	x24, x8, x4, eq  // eq = none
  4148a8:	bl	402ac0 <__errno_location@plt>
  4148ac:	ldp	w4, w5, [x24]
  4148b0:	ldp	x7, x8, [x24, #40]
  4148b4:	ldr	w25, [x0]
  4148b8:	mov	x23, x0
  4148bc:	add	x6, x24, #0x8
  4148c0:	mov	x0, x22
  4148c4:	mov	x1, x21
  4148c8:	mov	x2, x20
  4148cc:	mov	x3, x19
  4148d0:	str	x8, [sp]
  4148d4:	bl	4148f8 <ferror@plt+0x11da8>
  4148d8:	str	w25, [x23]
  4148dc:	ldp	x20, x19, [sp, #80]
  4148e0:	ldp	x22, x21, [sp, #64]
  4148e4:	ldp	x24, x23, [sp, #48]
  4148e8:	ldr	x25, [sp, #32]
  4148ec:	ldp	x29, x30, [sp, #16]
  4148f0:	add	sp, sp, #0x60
  4148f4:	ret
  4148f8:	sub	sp, sp, #0x120
  4148fc:	stp	x29, x30, [sp, #192]
  414900:	add	x29, sp, #0xc0
  414904:	ldr	x8, [x29, #96]
  414908:	stp	x28, x27, [sp, #208]
  41490c:	stp	x26, x25, [sp, #224]
  414910:	stp	x24, x23, [sp, #240]
  414914:	stp	x22, x21, [sp, #256]
  414918:	stp	x20, x19, [sp, #272]
  41491c:	str	x7, [sp, #88]
  414920:	stur	x6, [x29, #-40]
  414924:	mov	w19, w5
  414928:	mov	w22, w4
  41492c:	mov	x28, x3
  414930:	mov	x20, x2
  414934:	mov	x24, x1
  414938:	stur	x8, [x29, #-88]
  41493c:	mov	x21, x0
  414940:	bl	402950 <__ctype_get_mb_cur_max@plt>
  414944:	mov	w4, w22
  414948:	mov	w8, wzr
  41494c:	mov	w14, wzr
  414950:	str	w19, [sp, #80]
  414954:	ubfx	w19, w19, #1, #1
  414958:	add	x9, x20, #0x1
  41495c:	mov	w25, #0x1                   	// #1
  414960:	str	x0, [sp, #48]
  414964:	str	xzr, [sp, #64]
  414968:	stur	xzr, [x29, #-64]
  41496c:	stur	xzr, [x29, #-32]
  414970:	str	wzr, [sp, #72]
  414974:	stur	x20, [x29, #-80]
  414978:	str	x9, [sp, #96]
  41497c:	cmp	w4, #0xa
  414980:	b.hi	41554c <ferror@plt+0x129fc>  // b.pmore
  414984:	adrp	x12, 41c000 <_obstack_memory_used@@Base+0x3d94>
  414988:	mov	w9, w4
  41498c:	add	x12, x12, #0xd8
  414990:	mov	x22, x24
  414994:	adr	x10, 4149b4 <ferror@plt+0x11e64>
  414998:	ldrb	w11, [x12, x9]
  41499c:	add	x10, x10, x11, lsl #2
  4149a0:	ldur	x24, [x29, #-80]
  4149a4:	mov	x20, xzr
  4149a8:	mov	w16, wzr
  4149ac:	mov	w9, #0x1                   	// #1
  4149b0:	br	x10
  4149b4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4149b8:	add	x0, x0, #0xef0
  4149bc:	mov	w1, w4
  4149c0:	mov	w20, w4
  4149c4:	mov	w23, w14
  4149c8:	bl	415e98 <ferror@plt+0x13348>
  4149cc:	str	x0, [sp, #88]
  4149d0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4149d4:	add	x0, x0, #0x7ca
  4149d8:	mov	w1, w20
  4149dc:	bl	415e98 <ferror@plt+0x13348>
  4149e0:	mov	w14, w23
  4149e4:	mov	w4, w20
  4149e8:	stur	x0, [x29, #-88]
  4149ec:	tbnz	w19, #0, 414a30 <ferror@plt+0x11ee0>
  4149f0:	ldr	x8, [sp, #88]
  4149f4:	ldrb	w9, [x8]
  4149f8:	cbz	w9, 414a30 <ferror@plt+0x11ee0>
  4149fc:	mov	w27, w14
  414a00:	mov	w26, w4
  414a04:	mov	x10, xzr
  414a08:	add	x8, x8, #0x1
  414a0c:	b	414a20 <ferror@plt+0x11ed0>
  414a10:	ldrb	w9, [x8, x10]
  414a14:	add	x20, x10, #0x1
  414a18:	mov	x10, x20
  414a1c:	cbz	w9, 414a3c <ferror@plt+0x11eec>
  414a20:	cmp	x10, x22
  414a24:	b.cs	414a10 <ferror@plt+0x11ec0>  // b.hs, b.nlast
  414a28:	strb	w9, [x21, x10]
  414a2c:	b	414a10 <ferror@plt+0x11ec0>
  414a30:	mov	w27, w14
  414a34:	mov	w26, w4
  414a38:	mov	x20, xzr
  414a3c:	ldur	x23, [x29, #-88]
  414a40:	mov	x0, x23
  414a44:	bl	4024f0 <strlen@plt>
  414a48:	stur	x0, [x29, #-32]
  414a4c:	stur	x23, [x29, #-64]
  414a50:	mov	w9, #0x1                   	// #1
  414a54:	mov	w16, w19
  414a58:	mov	w4, w26
  414a5c:	mov	w14, w27
  414a60:	b	414b08 <ferror@plt+0x11fb8>
  414a64:	mov	w8, #0x1                   	// #1
  414a68:	b	414ae4 <ferror@plt+0x11f94>
  414a6c:	mov	w4, wzr
  414a70:	mov	x20, xzr
  414a74:	mov	w16, wzr
  414a78:	mov	w9, w8
  414a7c:	b	414b08 <ferror@plt+0x11fb8>
  414a80:	tbnz	w19, #0, 414ae4 <ferror@plt+0x11f94>
  414a84:	mov	w9, w8
  414a88:	mov	w16, wzr
  414a8c:	cbz	x22, 414a98 <ferror@plt+0x11f48>
  414a90:	mov	w8, #0x27                  	// #39
  414a94:	strb	w8, [x21]
  414a98:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  414a9c:	add	x8, x8, #0x7ca
  414aa0:	stur	x8, [x29, #-64]
  414aa4:	mov	w8, #0x1                   	// #1
  414aa8:	mov	w4, #0x2                   	// #2
  414aac:	mov	w20, #0x1                   	// #1
  414ab0:	stur	x8, [x29, #-32]
  414ab4:	b	414b08 <ferror@plt+0x11fb8>
  414ab8:	tbz	w19, #0, 4153e4 <ferror@plt+0x12894>
  414abc:	mov	w8, #0x1                   	// #1
  414ac0:	stur	x8, [x29, #-32]
  414ac4:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x2d94>
  414ac8:	add	x8, x8, #0x7d2
  414acc:	mov	x20, xzr
  414ad0:	mov	w4, #0x5                   	// #5
  414ad4:	stur	x8, [x29, #-64]
  414ad8:	mov	w9, #0x1                   	// #1
  414adc:	b	414b04 <ferror@plt+0x11fb4>
  414ae0:	tbz	w19, #0, 415418 <ferror@plt+0x128c8>
  414ae4:	mov	w9, #0x1                   	// #1
  414ae8:	stur	x9, [x29, #-32]
  414aec:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x1d94>
  414af0:	add	x9, x9, #0x7ca
  414af4:	mov	x20, xzr
  414af8:	mov	w4, #0x2                   	// #2
  414afc:	stur	x9, [x29, #-64]
  414b00:	mov	w9, w8
  414b04:	mov	w16, #0x1                   	// #1
  414b08:	mov	w15, w9
  414b0c:	ldp	x8, x9, [x29, #-40]
  414b10:	eor	w17, w16, #0x1
  414b14:	stur	w17, [x29, #-68]
  414b18:	mov	x23, xzr
  414b1c:	cmp	x8, #0x0
  414b20:	cset	w8, eq  // eq = none
  414b24:	cmp	x9, #0x0
  414b28:	cset	w9, ne  // ne = any
  414b2c:	cmp	w4, #0x2
  414b30:	cset	w10, ne  // ne = any
  414b34:	and	w13, w10, w15
  414b38:	and	w12, w9, w16
  414b3c:	orr	w10, w10, w17
  414b40:	and	w17, w9, w13
  414b44:	orr	w9, w13, w16
  414b48:	eor	w9, w9, #0x1
  414b4c:	cset	w11, eq  // eq = none
  414b50:	orr	w8, w8, w9
  414b54:	and	w12, w15, w12
  414b58:	str	w10, [sp, #84]
  414b5c:	and	w10, w11, w16
  414b60:	stur	w8, [x29, #-24]
  414b64:	eor	w8, w15, #0x1
  414b68:	str	w12, [sp, #56]
  414b6c:	str	w10, [sp, #76]
  414b70:	stur	w15, [x29, #-72]
  414b74:	str	w8, [sp, #60]
  414b78:	stp	w16, w4, [x29, #-48]
  414b7c:	stur	w17, [x29, #-52]
  414b80:	cmn	x28, #0x1
  414b84:	b.eq	414b94 <ferror@plt+0x12044>  // b.none
  414b88:	cmp	x23, x28
  414b8c:	b.ne	414b9c <ferror@plt+0x1204c>  // b.any
  414b90:	b	415374 <ferror@plt+0x12824>
  414b94:	ldrb	w8, [x24, x23]
  414b98:	cbz	w8, 41537c <ferror@plt+0x1282c>
  414b9c:	cbz	w17, 414bdc <ferror@plt+0x1208c>
  414ba0:	ldur	x8, [x29, #-32]
  414ba4:	cmp	x8, #0x2
  414ba8:	add	x19, x23, x8
  414bac:	b.cc	414bd4 <ferror@plt+0x12084>  // b.lo, b.ul, b.last
  414bb0:	cmn	x28, #0x1
  414bb4:	b.ne	414bd4 <ferror@plt+0x12084>  // b.any
  414bb8:	mov	x0, x24
  414bbc:	mov	w26, w14
  414bc0:	bl	4024f0 <strlen@plt>
  414bc4:	ldp	w17, w16, [x29, #-52]
  414bc8:	ldur	w4, [x29, #-44]
  414bcc:	mov	w14, w26
  414bd0:	mov	x28, x0
  414bd4:	cmp	x19, x28
  414bd8:	b.ls	414be4 <ferror@plt+0x12094>  // b.plast
  414bdc:	mov	w27, wzr
  414be0:	b	414c1c <ferror@plt+0x120cc>
  414be4:	ldur	x1, [x29, #-64]
  414be8:	ldur	x2, [x29, #-32]
  414bec:	add	x0, x24, x23
  414bf0:	mov	w19, w14
  414bf4:	bl	402790 <bcmp@plt>
  414bf8:	ldur	w9, [x29, #-68]
  414bfc:	cmp	w0, #0x0
  414c00:	cset	w8, ne  // ne = any
  414c04:	cset	w27, eq  // eq = none
  414c08:	orr	w8, w8, w9
  414c0c:	tbz	w8, #0, 415450 <ferror@plt+0x12900>
  414c10:	ldp	w16, w4, [x29, #-48]
  414c14:	ldur	w17, [x29, #-52]
  414c18:	mov	w14, w19
  414c1c:	ldrb	w19, [x24, x23]
  414c20:	cmp	w19, #0x7e
  414c24:	b.hi	414e64 <ferror@plt+0x12314>  // b.pmore
  414c28:	adrp	x13, 41c000 <_obstack_memory_used@@Base+0x3d94>
  414c2c:	add	x13, x13, #0xe3
  414c30:	adr	x12, 414c54 <ferror@plt+0x12104>
  414c34:	ldrb	w9, [x13, x19]
  414c38:	add	x12, x12, x9, lsl #2
  414c3c:	mov	w10, wzr
  414c40:	mov	w8, wzr
  414c44:	mov	w26, #0x1                   	// #1
  414c48:	mov	w11, #0x6e                  	// #110
  414c4c:	mov	w9, #0x61                  	// #97
  414c50:	br	x12
  414c54:	ldur	w9, [x29, #-24]
  414c58:	tbnz	w9, #0, 414c78 <ferror@plt+0x12128>
  414c5c:	ldur	x10, [x29, #-40]
  414c60:	lsr	w9, w19, #5
  414c64:	ldr	w9, [x10, w9, uxtw #2]
  414c68:	lsr	w9, w9, w19
  414c6c:	tbz	w9, #0, 414c78 <ferror@plt+0x12128>
  414c70:	mov	w9, w19
  414c74:	b	414c80 <ferror@plt+0x12130>
  414c78:	mov	w9, w19
  414c7c:	cbz	w27, 414ec8 <ferror@plt+0x12378>
  414c80:	tbnz	w16, #0, 415428 <ferror@plt+0x128d8>
  414c84:	cmp	w4, #0x2
  414c88:	cset	w8, ne  // ne = any
  414c8c:	orr	w8, w8, w14
  414c90:	tbnz	w8, #0, 414cd4 <ferror@plt+0x12184>
  414c94:	cmp	x20, x22
  414c98:	b.cs	414ca4 <ferror@plt+0x12154>  // b.hs, b.nlast
  414c9c:	mov	w8, #0x27                  	// #39
  414ca0:	strb	w8, [x21, x20]
  414ca4:	add	x8, x20, #0x1
  414ca8:	cmp	x8, x22
  414cac:	b.cs	414cb8 <ferror@plt+0x12168>  // b.hs, b.nlast
  414cb0:	mov	w10, #0x24                  	// #36
  414cb4:	strb	w10, [x21, x8]
  414cb8:	add	x8, x20, #0x2
  414cbc:	cmp	x8, x22
  414cc0:	b.cs	414ccc <ferror@plt+0x1217c>  // b.hs, b.nlast
  414cc4:	mov	w10, #0x27                  	// #39
  414cc8:	strb	w10, [x21, x8]
  414ccc:	add	x20, x20, #0x3
  414cd0:	mov	w14, #0x1                   	// #1
  414cd4:	cmp	x20, x22
  414cd8:	b.cs	414ce4 <ferror@plt+0x12194>  // b.hs, b.nlast
  414cdc:	mov	w8, #0x5c                  	// #92
  414ce0:	strb	w8, [x21, x20]
  414ce4:	add	x20, x20, #0x1
  414ce8:	cmp	x20, x22
  414cec:	b.cs	414cf4 <ferror@plt+0x121a4>  // b.hs, b.nlast
  414cf0:	strb	w9, [x21, x20]
  414cf4:	add	x20, x20, #0x1
  414cf8:	and	w25, w25, w26
  414cfc:	add	x23, x23, #0x1
  414d00:	cmn	x28, #0x1
  414d04:	b.ne	414b88 <ferror@plt+0x12038>  // b.any
  414d08:	b	414b94 <ferror@plt+0x12044>
  414d0c:	cmp	x28, #0x1
  414d10:	b.eq	414d34 <ferror@plt+0x121e4>  // b.none
  414d14:	cmn	x28, #0x1
  414d18:	b.ne	414d38 <ferror@plt+0x121e8>  // b.any
  414d1c:	ldrb	w8, [x24, #1]
  414d20:	cbz	w8, 414d34 <ferror@plt+0x121e4>
  414d24:	mov	w8, wzr
  414d28:	mov	w26, wzr
  414d2c:	mov	x28, #0xffffffffffffffff    	// #-1
  414d30:	b	414c54 <ferror@plt+0x12104>
  414d34:	cbz	x23, 414d44 <ferror@plt+0x121f4>
  414d38:	mov	w8, wzr
  414d3c:	mov	w26, wzr
  414d40:	b	414c54 <ferror@plt+0x12104>
  414d44:	mov	w10, #0x1                   	// #1
  414d48:	cmp	w4, #0x2
  414d4c:	b.ne	414d54 <ferror@plt+0x12204>  // b.any
  414d50:	tbnz	w16, #0, 415428 <ferror@plt+0x128d8>
  414d54:	mov	w8, wzr
  414d58:	mov	w26, w10
  414d5c:	b	414c54 <ferror@plt+0x12104>
  414d60:	cmp	w4, #0x2
  414d64:	b.ne	414eb0 <ferror@plt+0x12360>  // b.any
  414d68:	tbz	w16, #0, 414ebc <ferror@plt+0x1236c>
  414d6c:	b	415428 <ferror@plt+0x128d8>
  414d70:	mov	w9, #0x66                  	// #102
  414d74:	b	414f0c <ferror@plt+0x123bc>
  414d78:	mov	w11, #0x74                  	// #116
  414d7c:	b	414d8c <ferror@plt+0x1223c>
  414d80:	mov	w9, #0x62                  	// #98
  414d84:	b	414f0c <ferror@plt+0x123bc>
  414d88:	mov	w11, #0x72                  	// #114
  414d8c:	ldr	w8, [sp, #84]
  414d90:	mov	w9, w11
  414d94:	tbnz	w8, #0, 414f0c <ferror@plt+0x123bc>
  414d98:	b	415428 <ferror@plt+0x128d8>
  414d9c:	ldur	w8, [x29, #-72]
  414da0:	tbz	w8, #0, 414f20 <ferror@plt+0x123d0>
  414da4:	cmp	w4, #0x2
  414da8:	tbnz	w16, #0, 415540 <ferror@plt+0x129f0>
  414dac:	cset	w8, ne  // ne = any
  414db0:	orr	w8, w8, w14
  414db4:	tbz	w8, #0, 415250 <ferror@plt+0x12700>
  414db8:	mov	x8, x20
  414dbc:	cmp	x8, x22
  414dc0:	b.cc	415298 <ferror@plt+0x12748>  // b.lo, b.ul, b.last
  414dc4:	b	4152a0 <ferror@plt+0x12750>
  414dc8:	cmp	w4, #0x5
  414dcc:	b.eq	41504c <ferror@plt+0x124fc>  // b.none
  414dd0:	cmp	w4, #0x2
  414dd4:	b.ne	4150fc <ferror@plt+0x125ac>  // b.any
  414dd8:	tbz	w16, #0, 4150fc <ferror@plt+0x125ac>
  414ddc:	b	415428 <ferror@plt+0x128d8>
  414de0:	mov	w9, #0x76                  	// #118
  414de4:	b	414f0c <ferror@plt+0x123bc>
  414de8:	cmp	w4, #0x2
  414dec:	b.ne	414f30 <ferror@plt+0x123e0>  // b.any
  414df0:	tbnz	w16, #0, 415428 <ferror@plt+0x128d8>
  414df4:	ldr	x10, [sp, #64]
  414df8:	cmp	x22, #0x0
  414dfc:	cset	w8, eq  // eq = none
  414e00:	cmp	x10, #0x0
  414e04:	cset	w9, ne  // ne = any
  414e08:	orr	w8, w9, w8
  414e0c:	cmp	w8, #0x0
  414e10:	csel	x10, x10, x22, ne  // ne = any
  414e14:	csel	x22, x22, xzr, ne  // ne = any
  414e18:	cmp	x20, x22
  414e1c:	str	x10, [sp, #64]
  414e20:	b.cs	414e2c <ferror@plt+0x122dc>  // b.hs, b.nlast
  414e24:	mov	w8, #0x27                  	// #39
  414e28:	strb	w8, [x21, x20]
  414e2c:	add	x8, x20, #0x1
  414e30:	cmp	x8, x22
  414e34:	b.cs	414e40 <ferror@plt+0x122f0>  // b.hs, b.nlast
  414e38:	mov	w9, #0x5c                  	// #92
  414e3c:	strb	w9, [x21, x8]
  414e40:	add	x8, x20, #0x2
  414e44:	cmp	x8, x22
  414e48:	b.cs	414e54 <ferror@plt+0x12304>  // b.hs, b.nlast
  414e4c:	mov	w9, #0x27                  	// #39
  414e50:	strb	w9, [x21, x8]
  414e54:	mov	w14, wzr
  414e58:	mov	w8, wzr
  414e5c:	add	x20, x20, #0x3
  414e60:	b	414f34 <ferror@plt+0x123e4>
  414e64:	ldr	x8, [sp, #48]
  414e68:	str	w14, [sp, #28]
  414e6c:	cmp	x8, #0x1
  414e70:	b.ne	414f48 <ferror@plt+0x123f8>  // b.any
  414e74:	bl	4028e0 <__ctype_b_loc@plt>
  414e78:	ldr	x8, [x0]
  414e7c:	mov	w11, #0x1                   	// #1
  414e80:	ldrh	w8, [x8, x19, lsl #1]
  414e84:	ubfx	w26, w8, #14, #1
  414e88:	ldr	w8, [sp, #60]
  414e8c:	ldp	w16, w4, [x29, #-48]
  414e90:	ldr	w14, [sp, #28]
  414e94:	ldur	w17, [x29, #-52]
  414e98:	cmp	x11, #0x1
  414e9c:	orr	w8, w26, w8
  414ea0:	b.hi	41510c <ferror@plt+0x125bc>  // b.pmore
  414ea4:	tbz	w8, #0, 41510c <ferror@plt+0x125bc>
  414ea8:	mov	w8, wzr
  414eac:	b	414c54 <ferror@plt+0x12104>
  414eb0:	ldr	w8, [sp, #56]
  414eb4:	mov	w9, #0x5c                  	// #92
  414eb8:	tbz	w8, #0, 414f0c <ferror@plt+0x123bc>
  414ebc:	mov	w8, wzr
  414ec0:	mov	w26, wzr
  414ec4:	mov	w19, #0x5c                  	// #92
  414ec8:	tbnz	w8, #0, 414efc <ferror@plt+0x123ac>
  414ecc:	tbz	w14, #0, 414efc <ferror@plt+0x123ac>
  414ed0:	cmp	x20, x22
  414ed4:	b.cs	414ee0 <ferror@plt+0x12390>  // b.hs, b.nlast
  414ed8:	mov	w8, #0x27                  	// #39
  414edc:	strb	w8, [x21, x20]
  414ee0:	add	x8, x20, #0x1
  414ee4:	cmp	x8, x22
  414ee8:	b.cs	414ef4 <ferror@plt+0x123a4>  // b.hs, b.nlast
  414eec:	mov	w9, #0x27                  	// #39
  414ef0:	strb	w9, [x21, x8]
  414ef4:	mov	w14, wzr
  414ef8:	add	x20, x20, #0x2
  414efc:	mov	w9, w19
  414f00:	cmp	x20, x22
  414f04:	b.cc	414cf0 <ferror@plt+0x121a0>  // b.lo, b.ul, b.last
  414f08:	b	414cf4 <ferror@plt+0x121a4>
  414f0c:	ldur	w10, [x29, #-72]
  414f10:	mov	w8, wzr
  414f14:	mov	w26, wzr
  414f18:	tbz	w10, #0, 414c54 <ferror@plt+0x12104>
  414f1c:	b	414c80 <ferror@plt+0x12130>
  414f20:	ldr	w8, [sp, #80]
  414f24:	tbnz	w8, #0, 414cfc <ferror@plt+0x121ac>
  414f28:	mov	w19, wzr
  414f2c:	b	414d38 <ferror@plt+0x121e8>
  414f30:	mov	w8, wzr
  414f34:	mov	w9, #0x1                   	// #1
  414f38:	mov	w19, #0x27                  	// #39
  414f3c:	str	w9, [sp, #72]
  414f40:	mov	w26, #0x1                   	// #1
  414f44:	b	414c54 <ferror@plt+0x12104>
  414f48:	cmn	x28, #0x1
  414f4c:	stur	xzr, [x29, #-16]
  414f50:	b.ne	414f60 <ferror@plt+0x12410>  // b.any
  414f54:	mov	x0, x24
  414f58:	bl	4024f0 <strlen@plt>
  414f5c:	mov	x28, x0
  414f60:	ldr	x8, [sp, #96]
  414f64:	mov	x11, xzr
  414f68:	mov	w26, #0x1                   	// #1
  414f6c:	str	x21, [sp, #32]
  414f70:	add	x8, x8, x23
  414f74:	str	x8, [sp, #16]
  414f78:	b	414fb0 <ferror@plt+0x12460>
  414f7c:	ldur	w0, [x29, #-20]
  414f80:	bl	402aa0 <iswprint@plt>
  414f84:	ldr	x21, [sp, #40]
  414f88:	cmp	w0, #0x0
  414f8c:	cset	w8, ne  // ne = any
  414f90:	sub	x0, x29, #0x10
  414f94:	and	w26, w26, w8
  414f98:	add	x21, x24, x21
  414f9c:	bl	402880 <mbsinit@plt>
  414fa0:	mov	x11, x21
  414fa4:	ldr	x21, [sp, #32]
  414fa8:	ldur	x24, [x29, #-80]
  414fac:	cbnz	w0, 414e88 <ferror@plt+0x12338>
  414fb0:	add	x21, x11, x23
  414fb4:	add	x1, x24, x21
  414fb8:	sub	x2, x28, x21
  414fbc:	sub	x0, x29, #0x14
  414fc0:	sub	x3, x29, #0x10
  414fc4:	str	x11, [sp, #40]
  414fc8:	bl	417e94 <ferror@plt+0x15344>
  414fcc:	cbz	x0, 415354 <ferror@plt+0x12804>
  414fd0:	mov	x24, x0
  414fd4:	cmn	x0, #0x1
  414fd8:	b.eq	415350 <ferror@plt+0x12800>  // b.none
  414fdc:	cmn	x24, #0x2
  414fe0:	b.eq	415314 <ferror@plt+0x127c4>  // b.none
  414fe4:	ldr	w9, [sp, #76]
  414fe8:	ldr	x21, [sp, #32]
  414fec:	cmp	x24, #0x2
  414ff0:	cset	w8, cc  // cc = lo, ul, last
  414ff4:	eor	w9, w9, #0x1
  414ff8:	mov	x12, #0x2b                  	// #43
  414ffc:	orr	w8, w9, w8
  415000:	mov	w11, #0x1                   	// #1
  415004:	movk	x12, #0x2, lsl #32
  415008:	tbnz	w8, #0, 414f7c <ferror@plt+0x1242c>
  41500c:	ldr	x9, [sp, #40]
  415010:	ldr	x10, [sp, #16]
  415014:	sub	x8, x24, #0x1
  415018:	add	x9, x10, x9
  41501c:	b	41502c <ferror@plt+0x124dc>
  415020:	subs	x8, x8, #0x1
  415024:	add	x9, x9, #0x1
  415028:	b.eq	414f7c <ferror@plt+0x1242c>  // b.none
  41502c:	ldrb	w10, [x9]
  415030:	sub	w10, w10, #0x5b
  415034:	cmp	w10, #0x21
  415038:	b.hi	415020 <ferror@plt+0x124d0>  // b.pmore
  41503c:	lsl	x10, x11, x10
  415040:	tst	x10, x12
  415044:	b.eq	415020 <ferror@plt+0x124d0>  // b.none
  415048:	b	41545c <ferror@plt+0x1290c>
  41504c:	ldr	w8, [sp, #80]
  415050:	tbz	w8, #2, 4150fc <ferror@plt+0x125ac>
  415054:	add	x9, x23, #0x2
  415058:	cmp	x9, x28
  41505c:	b.cs	4150fc <ferror@plt+0x125ac>  // b.hs, b.nlast
  415060:	add	x8, x23, x24
  415064:	ldrb	w8, [x8, #1]
  415068:	cmp	w8, #0x3f
  41506c:	b.ne	4150fc <ferror@plt+0x125ac>  // b.any
  415070:	ldrb	w19, [x24, x9]
  415074:	mov	w8, wzr
  415078:	cmp	w19, #0x3e
  41507c:	b.hi	415368 <ferror@plt+0x12818>  // b.pmore
  415080:	mov	w10, #0x1                   	// #1
  415084:	mov	x11, #0xa38200000000        	// #179778741075968
  415088:	lsl	x10, x10, x19
  41508c:	movk	x11, #0x7000, lsl #48
  415090:	tst	x10, x11
  415094:	b.eq	415368 <ferror@plt+0x12818>  // b.none
  415098:	tbnz	w16, #0, 415428 <ferror@plt+0x128d8>
  41509c:	cmp	x20, x22
  4150a0:	b.cs	4150ac <ferror@plt+0x1255c>  // b.hs, b.nlast
  4150a4:	mov	w8, #0x3f                  	// #63
  4150a8:	strb	w8, [x21, x20]
  4150ac:	add	x8, x20, #0x1
  4150b0:	cmp	x8, x22
  4150b4:	b.cs	4150c0 <ferror@plt+0x12570>  // b.hs, b.nlast
  4150b8:	mov	w10, #0x22                  	// #34
  4150bc:	strb	w10, [x21, x8]
  4150c0:	add	x8, x20, #0x2
  4150c4:	cmp	x8, x22
  4150c8:	b.cs	4150d4 <ferror@plt+0x12584>  // b.hs, b.nlast
  4150cc:	mov	w10, #0x22                  	// #34
  4150d0:	strb	w10, [x21, x8]
  4150d4:	add	x8, x20, #0x3
  4150d8:	cmp	x8, x22
  4150dc:	b.cs	4150e8 <ferror@plt+0x12598>  // b.hs, b.nlast
  4150e0:	mov	w10, #0x3f                  	// #63
  4150e4:	strb	w10, [x21, x8]
  4150e8:	mov	w8, wzr
  4150ec:	mov	w26, wzr
  4150f0:	add	x20, x20, #0x4
  4150f4:	mov	x23, x9
  4150f8:	b	414c54 <ferror@plt+0x12104>
  4150fc:	mov	w8, wzr
  415100:	mov	w26, wzr
  415104:	mov	w19, #0x3f                  	// #63
  415108:	b	414c54 <ferror@plt+0x12104>
  41510c:	mov	w10, wzr
  415110:	add	x9, x11, x23
  415114:	b	415128 <ferror@plt+0x125d8>
  415118:	ldr	x12, [sp, #96]
  41511c:	add	x20, x20, #0x1
  415120:	ldrb	w19, [x12, x23]
  415124:	mov	x23, x11
  415128:	tbz	w8, #0, 41514c <ferror@plt+0x125fc>
  41512c:	tbz	w27, #0, 4151f8 <ferror@plt+0x126a8>
  415130:	cmp	x20, x22
  415134:	b.cs	415140 <ferror@plt+0x125f0>  // b.hs, b.nlast
  415138:	mov	w11, #0x5c                  	// #92
  41513c:	strb	w11, [x21, x20]
  415140:	mov	w27, wzr
  415144:	add	x20, x20, #0x1
  415148:	b	4151fc <ferror@plt+0x126ac>
  41514c:	tbnz	w16, #0, 415428 <ferror@plt+0x128d8>
  415150:	cmp	w4, #0x2
  415154:	cset	w10, ne  // ne = any
  415158:	orr	w10, w10, w14
  41515c:	tbnz	w10, #0, 4151a0 <ferror@plt+0x12650>
  415160:	cmp	x20, x22
  415164:	b.cs	415170 <ferror@plt+0x12620>  // b.hs, b.nlast
  415168:	mov	w10, #0x27                  	// #39
  41516c:	strb	w10, [x21, x20]
  415170:	add	x10, x20, #0x1
  415174:	cmp	x10, x22
  415178:	b.cs	415184 <ferror@plt+0x12634>  // b.hs, b.nlast
  41517c:	mov	w11, #0x24                  	// #36
  415180:	strb	w11, [x21, x10]
  415184:	add	x10, x20, #0x2
  415188:	cmp	x10, x22
  41518c:	b.cs	415198 <ferror@plt+0x12648>  // b.hs, b.nlast
  415190:	mov	w11, #0x27                  	// #39
  415194:	strb	w11, [x21, x10]
  415198:	add	x20, x20, #0x3
  41519c:	mov	w14, #0x1                   	// #1
  4151a0:	cmp	x20, x22
  4151a4:	b.cs	4151b0 <ferror@plt+0x12660>  // b.hs, b.nlast
  4151a8:	mov	w10, #0x5c                  	// #92
  4151ac:	strb	w10, [x21, x20]
  4151b0:	add	x10, x20, #0x1
  4151b4:	cmp	x10, x22
  4151b8:	b.cs	4151c8 <ferror@plt+0x12678>  // b.hs, b.nlast
  4151bc:	mov	w11, #0x30                  	// #48
  4151c0:	bfxil	w11, w19, #6, #2
  4151c4:	strb	w11, [x21, x10]
  4151c8:	add	x10, x20, #0x2
  4151cc:	cmp	x10, x22
  4151d0:	b.cs	4151e0 <ferror@plt+0x12690>  // b.hs, b.nlast
  4151d4:	mov	w11, #0x30                  	// #48
  4151d8:	bfxil	w11, w19, #3, #3
  4151dc:	strb	w11, [x21, x10]
  4151e0:	mov	w11, #0x30                  	// #48
  4151e4:	bfxil	w11, w19, #0, #3
  4151e8:	add	x20, x20, #0x3
  4151ec:	mov	w10, #0x1                   	// #1
  4151f0:	mov	w19, w11
  4151f4:	b	4151fc <ferror@plt+0x126ac>
  4151f8:	mov	w27, wzr
  4151fc:	add	x11, x23, #0x1
  415200:	cmp	x9, x11
  415204:	b.ls	415308 <ferror@plt+0x127b8>  // b.plast
  415208:	and	w12, w10, #0x1
  41520c:	orn	w12, w12, w14
  415210:	tbnz	w12, #0, 415240 <ferror@plt+0x126f0>
  415214:	cmp	x20, x22
  415218:	b.cs	415224 <ferror@plt+0x126d4>  // b.hs, b.nlast
  41521c:	mov	w12, #0x27                  	// #39
  415220:	strb	w12, [x21, x20]
  415224:	add	x12, x20, #0x1
  415228:	cmp	x12, x22
  41522c:	b.cs	415238 <ferror@plt+0x126e8>  // b.hs, b.nlast
  415230:	mov	w13, #0x27                  	// #39
  415234:	strb	w13, [x21, x12]
  415238:	mov	w14, wzr
  41523c:	add	x20, x20, #0x2
  415240:	cmp	x20, x22
  415244:	b.cs	415118 <ferror@plt+0x125c8>  // b.hs, b.nlast
  415248:	strb	w19, [x21, x20]
  41524c:	b	415118 <ferror@plt+0x125c8>
  415250:	cmp	x20, x22
  415254:	b.cs	415260 <ferror@plt+0x12710>  // b.hs, b.nlast
  415258:	mov	w8, #0x27                  	// #39
  41525c:	strb	w8, [x21, x20]
  415260:	add	x8, x20, #0x1
  415264:	cmp	x8, x22
  415268:	b.cs	415274 <ferror@plt+0x12724>  // b.hs, b.nlast
  41526c:	mov	w9, #0x24                  	// #36
  415270:	strb	w9, [x21, x8]
  415274:	add	x8, x20, #0x2
  415278:	cmp	x8, x22
  41527c:	b.cs	415288 <ferror@plt+0x12738>  // b.hs, b.nlast
  415280:	mov	w9, #0x27                  	// #39
  415284:	strb	w9, [x21, x8]
  415288:	add	x8, x20, #0x3
  41528c:	mov	w14, #0x1                   	// #1
  415290:	cmp	x8, x22
  415294:	b.cs	4152a0 <ferror@plt+0x12750>  // b.hs, b.nlast
  415298:	mov	w9, #0x5c                  	// #92
  41529c:	strb	w9, [x21, x8]
  4152a0:	cmp	w4, #0x2
  4152a4:	add	x20, x8, #0x1
  4152a8:	b.eq	4152f8 <ferror@plt+0x127a8>  // b.none
  4152ac:	add	x9, x23, #0x1
  4152b0:	cmp	x9, x28
  4152b4:	b.cs	4152f8 <ferror@plt+0x127a8>  // b.hs, b.nlast
  4152b8:	ldrb	w9, [x24, x9]
  4152bc:	sub	w9, w9, #0x30
  4152c0:	cmp	w9, #0x9
  4152c4:	b.hi	4152f8 <ferror@plt+0x127a8>  // b.pmore
  4152c8:	cmp	x20, x22
  4152cc:	b.cs	4152d8 <ferror@plt+0x12788>  // b.hs, b.nlast
  4152d0:	mov	w9, #0x30                  	// #48
  4152d4:	strb	w9, [x21, x20]
  4152d8:	add	x9, x8, #0x2
  4152dc:	cmp	x9, x22
  4152e0:	b.cs	4152ec <ferror@plt+0x1279c>  // b.hs, b.nlast
  4152e4:	mov	w10, #0x30                  	// #48
  4152e8:	strb	w10, [x21, x9]
  4152ec:	mov	w26, wzr
  4152f0:	add	x20, x8, #0x3
  4152f4:	b	4152fc <ferror@plt+0x127ac>
  4152f8:	mov	w26, wzr
  4152fc:	mov	w8, #0x1                   	// #1
  415300:	mov	w19, #0x30                  	// #48
  415304:	b	414c54 <ferror@plt+0x12104>
  415308:	and	w8, w10, #0x1
  41530c:	tbz	w8, #0, 414ecc <ferror@plt+0x1237c>
  415310:	b	414efc <ferror@plt+0x123ac>
  415314:	cmp	x28, x21
  415318:	b.ls	415350 <ferror@plt+0x12800>  // b.plast
  41531c:	ldur	x24, [x29, #-80]
  415320:	ldp	x21, x11, [sp, #32]
  415324:	sub	x8, x28, x23
  415328:	add	x9, x24, x23
  41532c:	ldrb	w10, [x9, x11]
  415330:	cbz	w10, 415360 <ferror@plt+0x12810>
  415334:	add	x11, x11, #0x1
  415338:	add	x10, x23, x11
  41533c:	cmp	x10, x28
  415340:	b.cc	41532c <ferror@plt+0x127dc>  // b.lo, b.ul, b.last
  415344:	mov	w26, wzr
  415348:	mov	x11, x8
  41534c:	b	414e88 <ferror@plt+0x12338>
  415350:	mov	w26, wzr
  415354:	ldp	x21, x11, [sp, #32]
  415358:	ldur	x24, [x29, #-80]
  41535c:	b	414e88 <ferror@plt+0x12338>
  415360:	mov	w26, wzr
  415364:	b	414e88 <ferror@plt+0x12338>
  415368:	mov	w19, #0x3f                  	// #63
  41536c:	mov	w26, w8
  415370:	b	414c54 <ferror@plt+0x12104>
  415374:	mov	x28, x23
  415378:	b	415380 <ferror@plt+0x12830>
  41537c:	mov	x28, #0xffffffffffffffff    	// #-1
  415380:	cmp	w4, #0x2
  415384:	ldur	w10, [x29, #-72]
  415388:	cset	w8, eq  // eq = none
  41538c:	cmp	x20, #0x0
  415390:	cset	w9, eq  // eq = none
  415394:	and	w8, w8, w9
  415398:	and	w8, w16, w8
  41539c:	tbnz	w8, #0, 41542c <ferror@plt+0x128dc>
  4153a0:	cmp	w4, #0x2
  4153a4:	cset	w8, ne  // ne = any
  4153a8:	orr	w8, w16, w8
  4153ac:	tbnz	w8, #0, 4154f8 <ferror@plt+0x129a8>
  4153b0:	ldr	w8, [sp, #72]
  4153b4:	eor	w8, w8, #0x1
  4153b8:	tbnz	w8, #0, 4154f8 <ferror@plt+0x129a8>
  4153bc:	tbnz	w25, #0, 4154c8 <ferror@plt+0x12978>
  4153c0:	ldr	x24, [sp, #64]
  4153c4:	mov	w19, wzr
  4153c8:	cbz	x24, 4154f4 <ferror@plt+0x129a4>
  4153cc:	mov	w4, #0x2                   	// #2
  4153d0:	mov	w8, w10
  4153d4:	mov	w25, w19
  4153d8:	mov	w16, w19
  4153dc:	cbz	x22, 41497c <ferror@plt+0x11e2c>
  4153e0:	b	4154f8 <ferror@plt+0x129a8>
  4153e4:	mov	w16, wzr
  4153e8:	cbz	x22, 4153f4 <ferror@plt+0x128a4>
  4153ec:	mov	w8, #0x22                  	// #34
  4153f0:	strb	w8, [x21]
  4153f4:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4153f8:	add	x8, x8, #0x7d2
  4153fc:	stur	x8, [x29, #-64]
  415400:	mov	w8, #0x1                   	// #1
  415404:	mov	w20, #0x1                   	// #1
  415408:	mov	w4, #0x5                   	// #5
  41540c:	stur	x8, [x29, #-32]
  415410:	mov	w9, #0x1                   	// #1
  415414:	b	414b08 <ferror@plt+0x11fb8>
  415418:	mov	w9, #0x1                   	// #1
  41541c:	mov	w16, wzr
  415420:	cbnz	x22, 414a90 <ferror@plt+0x11f40>
  415424:	b	414a98 <ferror@plt+0x11f48>
  415428:	ldur	w10, [x29, #-72]
  41542c:	tst	w10, #0x1
  415430:	mov	w8, #0x2                   	// #2
  415434:	mov	w9, #0x4                   	// #4
  415438:	csel	w8, w9, w8, ne  // ne = any
  41543c:	cmp	w4, #0x2
  415440:	b.ne	415448 <ferror@plt+0x128f8>  // b.any
  415444:	mov	w4, w8
  415448:	ldr	x7, [sp, #88]
  41544c:	b	415478 <ferror@plt+0x12928>
  415450:	ldr	x7, [sp, #88]
  415454:	ldur	w4, [x29, #-44]
  415458:	b	415478 <ferror@plt+0x12928>
  41545c:	ldur	w8, [x29, #-72]
  415460:	ldr	x7, [sp, #88]
  415464:	ldur	x24, [x29, #-80]
  415468:	mov	w9, #0x4                   	// #4
  41546c:	tst	w8, #0x1
  415470:	mov	w8, #0x2                   	// #2
  415474:	csel	w4, w9, w8, ne  // ne = any
  415478:	ldr	w8, [sp, #80]
  41547c:	mov	x0, x21
  415480:	mov	x1, x22
  415484:	mov	x2, x24
  415488:	and	w5, w8, #0xfffffffd
  41548c:	ldur	x8, [x29, #-88]
  415490:	mov	x3, x28
  415494:	mov	x6, xzr
  415498:	str	x8, [sp]
  41549c:	bl	4148f8 <ferror@plt+0x11da8>
  4154a0:	mov	x20, x0
  4154a4:	mov	x0, x20
  4154a8:	ldp	x20, x19, [sp, #272]
  4154ac:	ldp	x22, x21, [sp, #256]
  4154b0:	ldp	x24, x23, [sp, #240]
  4154b4:	ldp	x26, x25, [sp, #224]
  4154b8:	ldp	x28, x27, [sp, #208]
  4154bc:	ldp	x29, x30, [sp, #192]
  4154c0:	add	sp, sp, #0x120
  4154c4:	ret
  4154c8:	ldur	x8, [x29, #-88]
  4154cc:	ldr	x1, [sp, #64]
  4154d0:	ldur	x2, [x29, #-80]
  4154d4:	ldr	w5, [sp, #80]
  4154d8:	ldur	x6, [x29, #-40]
  4154dc:	ldr	x7, [sp, #88]
  4154e0:	mov	w4, #0x5                   	// #5
  4154e4:	str	x8, [sp]
  4154e8:	mov	x0, x21
  4154ec:	mov	x3, x28
  4154f0:	b	41549c <ferror@plt+0x1294c>
  4154f4:	mov	w16, w19
  4154f8:	ldur	x8, [x29, #-64]
  4154fc:	cbz	x8, 415530 <ferror@plt+0x129e0>
  415500:	tbnz	w16, #0, 415530 <ferror@plt+0x129e0>
  415504:	ldrb	w9, [x8]
  415508:	cbz	w9, 415530 <ferror@plt+0x129e0>
  41550c:	add	x8, x8, #0x1
  415510:	b	415520 <ferror@plt+0x129d0>
  415514:	ldrb	w9, [x8], #1
  415518:	add	x20, x20, #0x1
  41551c:	cbz	w9, 415530 <ferror@plt+0x129e0>
  415520:	cmp	x20, x22
  415524:	b.cs	415514 <ferror@plt+0x129c4>  // b.hs, b.nlast
  415528:	strb	w9, [x21, x20]
  41552c:	b	415514 <ferror@plt+0x129c4>
  415530:	cmp	x20, x22
  415534:	b.cs	4154a4 <ferror@plt+0x12954>  // b.hs, b.nlast
  415538:	strb	wzr, [x21, x20]
  41553c:	b	4154a4 <ferror@plt+0x12954>
  415540:	b.ne	415448 <ferror@plt+0x128f8>  // b.any
  415544:	mov	w4, #0x4                   	// #4
  415548:	b	415448 <ferror@plt+0x128f8>
  41554c:	bl	402860 <abort@plt>
  415550:	sub	sp, sp, #0x60
  415554:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415558:	add	x8, x8, #0xb50
  41555c:	cmp	x2, #0x0
  415560:	stp	x29, x30, [sp, #16]
  415564:	stp	x26, x25, [sp, #32]
  415568:	stp	x24, x23, [sp, #48]
  41556c:	stp	x22, x21, [sp, #64]
  415570:	stp	x20, x19, [sp, #80]
  415574:	add	x29, sp, #0x10
  415578:	mov	x19, x1
  41557c:	mov	x20, x0
  415580:	csel	x25, x8, x2, eq  // eq = none
  415584:	bl	402ac0 <__errno_location@plt>
  415588:	ldp	w4, w8, [x25]
  41558c:	ldp	x7, x9, [x25, #40]
  415590:	ldr	w26, [x0]
  415594:	add	x23, x25, #0x8
  415598:	orr	w22, w8, #0x1
  41559c:	mov	x21, x0
  4155a0:	mov	x0, xzr
  4155a4:	mov	x1, xzr
  4155a8:	mov	x2, x20
  4155ac:	mov	x3, x19
  4155b0:	mov	w5, w22
  4155b4:	mov	x6, x23
  4155b8:	str	x9, [sp]
  4155bc:	bl	4148f8 <ferror@plt+0x11da8>
  4155c0:	add	x24, x0, #0x1
  4155c4:	mov	x0, x24
  4155c8:	bl	417280 <ferror@plt+0x14730>
  4155cc:	ldr	w4, [x25]
  4155d0:	ldp	x7, x8, [x25, #40]
  4155d4:	mov	x1, x24
  4155d8:	mov	x2, x20
  4155dc:	mov	x3, x19
  4155e0:	mov	w5, w22
  4155e4:	mov	x6, x23
  4155e8:	mov	x25, x0
  4155ec:	str	x8, [sp]
  4155f0:	bl	4148f8 <ferror@plt+0x11da8>
  4155f4:	str	w26, [x21]
  4155f8:	mov	x0, x25
  4155fc:	ldp	x20, x19, [sp, #80]
  415600:	ldp	x22, x21, [sp, #64]
  415604:	ldp	x24, x23, [sp, #48]
  415608:	ldp	x26, x25, [sp, #32]
  41560c:	ldp	x29, x30, [sp, #16]
  415610:	add	sp, sp, #0x60
  415614:	ret
  415618:	sub	sp, sp, #0x70
  41561c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415620:	add	x8, x8, #0xb50
  415624:	cmp	x3, #0x0
  415628:	stp	x29, x30, [sp, #16]
  41562c:	stp	x28, x27, [sp, #32]
  415630:	stp	x26, x25, [sp, #48]
  415634:	stp	x24, x23, [sp, #64]
  415638:	stp	x22, x21, [sp, #80]
  41563c:	stp	x20, x19, [sp, #96]
  415640:	add	x29, sp, #0x10
  415644:	mov	x19, x2
  415648:	mov	x22, x1
  41564c:	mov	x23, x0
  415650:	csel	x21, x8, x3, eq  // eq = none
  415654:	bl	402ac0 <__errno_location@plt>
  415658:	ldp	w4, w8, [x21]
  41565c:	cmp	x19, #0x0
  415660:	ldp	x7, x9, [x21, #40]
  415664:	ldr	w28, [x0]
  415668:	cset	w10, eq  // eq = none
  41566c:	orr	w25, w8, w10
  415670:	add	x26, x21, #0x8
  415674:	mov	x24, x0
  415678:	mov	x0, xzr
  41567c:	mov	x1, xzr
  415680:	mov	x2, x23
  415684:	mov	x3, x22
  415688:	mov	w5, w25
  41568c:	mov	x6, x26
  415690:	str	x9, [sp]
  415694:	bl	4148f8 <ferror@plt+0x11da8>
  415698:	add	x27, x0, #0x1
  41569c:	mov	x20, x0
  4156a0:	mov	x0, x27
  4156a4:	bl	417280 <ferror@plt+0x14730>
  4156a8:	ldr	w4, [x21]
  4156ac:	ldp	x7, x8, [x21, #40]
  4156b0:	mov	x1, x27
  4156b4:	mov	x2, x23
  4156b8:	mov	x3, x22
  4156bc:	mov	w5, w25
  4156c0:	mov	x6, x26
  4156c4:	mov	x21, x0
  4156c8:	str	x8, [sp]
  4156cc:	bl	4148f8 <ferror@plt+0x11da8>
  4156d0:	str	w28, [x24]
  4156d4:	cbz	x19, 4156dc <ferror@plt+0x12b8c>
  4156d8:	str	x20, [x19]
  4156dc:	mov	x0, x21
  4156e0:	ldp	x20, x19, [sp, #96]
  4156e4:	ldp	x22, x21, [sp, #80]
  4156e8:	ldp	x24, x23, [sp, #64]
  4156ec:	ldp	x26, x25, [sp, #48]
  4156f0:	ldp	x28, x27, [sp, #32]
  4156f4:	ldp	x29, x30, [sp, #16]
  4156f8:	add	sp, sp, #0x70
  4156fc:	ret
  415700:	stp	x29, x30, [sp, #-64]!
  415704:	stp	x20, x19, [sp, #48]
  415708:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41570c:	stp	x22, x21, [sp, #32]
  415710:	ldr	w8, [x20, #912]
  415714:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415718:	ldr	x19, [x21, #904]
  41571c:	str	x23, [sp, #16]
  415720:	cmp	w8, #0x2
  415724:	mov	x29, sp
  415728:	b.lt	41574c <ferror@plt+0x12bfc>  // b.tstop
  41572c:	add	x22, x19, #0x18
  415730:	mov	w23, #0x1                   	// #1
  415734:	ldr	x0, [x22], #16
  415738:	bl	402930 <free@plt>
  41573c:	ldrsw	x8, [x20, #912]
  415740:	add	x23, x23, #0x1
  415744:	cmp	x23, x8
  415748:	b.lt	415734 <ferror@plt+0x12be4>  // b.tstop
  41574c:	ldr	x0, [x19, #8]
  415750:	adrp	x23, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415754:	add	x23, x23, #0xb88
  415758:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41575c:	cmp	x0, x23
  415760:	add	x22, x22, #0x398
  415764:	b.eq	415774 <ferror@plt+0x12c24>  // b.none
  415768:	bl	402930 <free@plt>
  41576c:	mov	w8, #0x100                 	// #256
  415770:	stp	x8, x23, [x22]
  415774:	cmp	x19, x22
  415778:	b.eq	415788 <ferror@plt+0x12c38>  // b.none
  41577c:	mov	x0, x19
  415780:	bl	402930 <free@plt>
  415784:	str	x22, [x21, #904]
  415788:	mov	w8, #0x1                   	// #1
  41578c:	str	w8, [x20, #912]
  415790:	ldp	x20, x19, [sp, #48]
  415794:	ldp	x22, x21, [sp, #32]
  415798:	ldr	x23, [sp, #16]
  41579c:	ldp	x29, x30, [sp], #64
  4157a0:	ret
  4157a4:	adrp	x3, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4157a8:	add	x3, x3, #0xb50
  4157ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4157b0:	b	4157b4 <ferror@plt+0x12c64>
  4157b4:	sub	sp, sp, #0x80
  4157b8:	stp	x29, x30, [sp, #32]
  4157bc:	add	x29, sp, #0x20
  4157c0:	stp	x28, x27, [sp, #48]
  4157c4:	stp	x26, x25, [sp, #64]
  4157c8:	stp	x24, x23, [sp, #80]
  4157cc:	stp	x22, x21, [sp, #96]
  4157d0:	stp	x20, x19, [sp, #112]
  4157d4:	mov	x22, x3
  4157d8:	stur	x2, [x29, #-8]
  4157dc:	mov	x21, x1
  4157e0:	mov	w23, w0
  4157e4:	bl	402ac0 <__errno_location@plt>
  4157e8:	tbnz	w23, #31, 415938 <ferror@plt+0x12de8>
  4157ec:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4157f0:	ldr	w8, [x25, #912]
  4157f4:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4157f8:	ldr	w20, [x0]
  4157fc:	ldr	x27, [x28, #904]
  415800:	mov	x19, x0
  415804:	cmp	w8, w23
  415808:	b.gt	415874 <ferror@plt+0x12d24>
  41580c:	mov	w8, #0x7fffffff            	// #2147483647
  415810:	cmp	w23, w8
  415814:	stur	w20, [x29, #-12]
  415818:	b.cs	41593c <ferror@plt+0x12dec>  // b.hs, b.nlast
  41581c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415820:	add	x20, x20, #0x398
  415824:	add	w26, w23, #0x1
  415828:	cmp	x27, x20
  41582c:	csel	x0, xzr, x27, eq  // eq = none
  415830:	sbfiz	x1, x26, #4, #32
  415834:	bl	41734c <ferror@plt+0x147fc>
  415838:	mov	x24, x0
  41583c:	cmp	x27, x20
  415840:	str	x0, [x28, #904]
  415844:	b.ne	415850 <ferror@plt+0x12d00>  // b.any
  415848:	ldr	q0, [x20]
  41584c:	str	q0, [x24]
  415850:	ldrsw	x8, [x25, #912]
  415854:	mov	w1, wzr
  415858:	add	x0, x24, x8, lsl #4
  41585c:	sub	w8, w26, w8
  415860:	sbfiz	x2, x8, #4, #32
  415864:	bl	402740 <memset@plt>
  415868:	ldur	w20, [x29, #-12]
  41586c:	mov	x27, x24
  415870:	str	w26, [x25, #912]
  415874:	add	x28, x27, w23, uxtw #4
  415878:	mov	x27, x28
  41587c:	ldr	x26, [x28]
  415880:	ldr	x23, [x27, #8]!
  415884:	ldp	w4, w8, [x22]
  415888:	ldp	x7, x9, [x22, #40]
  41588c:	ldur	x3, [x29, #-8]
  415890:	add	x24, x22, #0x8
  415894:	orr	w25, w8, #0x1
  415898:	mov	x0, x23
  41589c:	mov	x1, x26
  4158a0:	mov	x2, x21
  4158a4:	mov	w5, w25
  4158a8:	mov	x6, x24
  4158ac:	str	x9, [sp]
  4158b0:	bl	4148f8 <ferror@plt+0x11da8>
  4158b4:	cmp	x26, x0
  4158b8:	b.hi	415910 <ferror@plt+0x12dc0>  // b.pmore
  4158bc:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4158c0:	add	x8, x8, #0xb88
  4158c4:	add	x26, x0, #0x1
  4158c8:	cmp	x23, x8
  4158cc:	str	x26, [x28]
  4158d0:	b.eq	4158dc <ferror@plt+0x12d8c>  // b.none
  4158d4:	mov	x0, x23
  4158d8:	bl	402930 <free@plt>
  4158dc:	mov	x0, x26
  4158e0:	bl	417280 <ferror@plt+0x14730>
  4158e4:	str	x0, [x27]
  4158e8:	ldr	w4, [x22]
  4158ec:	ldp	x7, x8, [x22, #40]
  4158f0:	ldur	x3, [x29, #-8]
  4158f4:	mov	x1, x26
  4158f8:	mov	x2, x21
  4158fc:	mov	w5, w25
  415900:	mov	x6, x24
  415904:	mov	x23, x0
  415908:	str	x8, [sp]
  41590c:	bl	4148f8 <ferror@plt+0x11da8>
  415910:	str	w20, [x19]
  415914:	mov	x0, x23
  415918:	ldp	x20, x19, [sp, #112]
  41591c:	ldp	x22, x21, [sp, #96]
  415920:	ldp	x24, x23, [sp, #80]
  415924:	ldp	x26, x25, [sp, #64]
  415928:	ldp	x28, x27, [sp, #48]
  41592c:	ldp	x29, x30, [sp, #32]
  415930:	add	sp, sp, #0x80
  415934:	ret
  415938:	bl	402860 <abort@plt>
  41593c:	bl	41761c <ferror@plt+0x14acc>
  415940:	adrp	x3, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415944:	add	x3, x3, #0xb50
  415948:	b	4157b4 <ferror@plt+0x12c64>
  41594c:	adrp	x3, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415950:	add	x3, x3, #0xb50
  415954:	mov	x2, #0xffffffffffffffff    	// #-1
  415958:	mov	x1, x0
  41595c:	mov	w0, wzr
  415960:	b	4157b4 <ferror@plt+0x12c64>
  415964:	adrp	x3, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415968:	mov	x2, x1
  41596c:	add	x3, x3, #0xb50
  415970:	mov	x1, x0
  415974:	mov	w0, wzr
  415978:	b	4157b4 <ferror@plt+0x12c64>
  41597c:	sub	sp, sp, #0x50
  415980:	movi	v0.2d, #0x0
  415984:	cmp	w1, #0xa
  415988:	stp	x29, x30, [sp, #64]
  41598c:	add	x29, sp, #0x40
  415990:	str	xzr, [sp, #48]
  415994:	stp	q0, q0, [sp, #16]
  415998:	str	q0, [sp]
  41599c:	b.eq	4159c4 <ferror@plt+0x12e74>  // b.none
  4159a0:	mov	x8, x2
  4159a4:	str	w1, [sp]
  4159a8:	mov	x3, sp
  4159ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4159b0:	mov	x1, x8
  4159b4:	bl	4157b4 <ferror@plt+0x12c64>
  4159b8:	ldp	x29, x30, [sp, #64]
  4159bc:	add	sp, sp, #0x50
  4159c0:	ret
  4159c4:	bl	402860 <abort@plt>
  4159c8:	sub	sp, sp, #0x50
  4159cc:	movi	v0.2d, #0x0
  4159d0:	cmp	w1, #0xa
  4159d4:	stp	x29, x30, [sp, #64]
  4159d8:	add	x29, sp, #0x40
  4159dc:	str	xzr, [sp, #48]
  4159e0:	stp	q0, q0, [sp, #16]
  4159e4:	str	q0, [sp]
  4159e8:	b.eq	415a10 <ferror@plt+0x12ec0>  // b.none
  4159ec:	mov	x8, x3
  4159f0:	str	w1, [sp]
  4159f4:	mov	x3, sp
  4159f8:	mov	x1, x2
  4159fc:	mov	x2, x8
  415a00:	bl	4157b4 <ferror@plt+0x12c64>
  415a04:	ldp	x29, x30, [sp, #64]
  415a08:	add	sp, sp, #0x50
  415a0c:	ret
  415a10:	bl	402860 <abort@plt>
  415a14:	sub	sp, sp, #0x50
  415a18:	movi	v0.2d, #0x0
  415a1c:	cmp	w0, #0xa
  415a20:	stp	x29, x30, [sp, #64]
  415a24:	add	x29, sp, #0x40
  415a28:	str	xzr, [sp, #48]
  415a2c:	stp	q0, q0, [sp, #16]
  415a30:	str	q0, [sp]
  415a34:	b.eq	415a58 <ferror@plt+0x12f08>  // b.none
  415a38:	str	w0, [sp]
  415a3c:	mov	x3, sp
  415a40:	mov	x2, #0xffffffffffffffff    	// #-1
  415a44:	mov	w0, wzr
  415a48:	bl	4157b4 <ferror@plt+0x12c64>
  415a4c:	ldp	x29, x30, [sp, #64]
  415a50:	add	sp, sp, #0x50
  415a54:	ret
  415a58:	bl	402860 <abort@plt>
  415a5c:	sub	sp, sp, #0x50
  415a60:	movi	v0.2d, #0x0
  415a64:	cmp	w0, #0xa
  415a68:	stp	x29, x30, [sp, #64]
  415a6c:	add	x29, sp, #0x40
  415a70:	str	xzr, [sp, #48]
  415a74:	stp	q0, q0, [sp, #16]
  415a78:	str	q0, [sp]
  415a7c:	b.eq	415a9c <ferror@plt+0x12f4c>  // b.none
  415a80:	str	w0, [sp]
  415a84:	mov	x3, sp
  415a88:	mov	w0, wzr
  415a8c:	bl	4157b4 <ferror@plt+0x12c64>
  415a90:	ldp	x29, x30, [sp, #64]
  415a94:	add	sp, sp, #0x50
  415a98:	ret
  415a9c:	bl	402860 <abort@plt>
  415aa0:	sub	sp, sp, #0x50
  415aa4:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415aa8:	add	x9, x9, #0xb50
  415aac:	ldp	q0, q1, [x9]
  415ab0:	ubfx	w10, w2, #5, #3
  415ab4:	mov	x11, sp
  415ab8:	mov	x8, x1
  415abc:	stp	q0, q1, [sp]
  415ac0:	ldr	q0, [x9, #32]
  415ac4:	ldr	x9, [x9, #48]
  415ac8:	mov	x1, x0
  415acc:	mov	x3, sp
  415ad0:	str	q0, [sp, #32]
  415ad4:	str	x9, [sp, #48]
  415ad8:	add	x9, x11, w10, uxtw #2
  415adc:	ldr	w10, [x9, #8]
  415ae0:	mov	w0, wzr
  415ae4:	stp	x29, x30, [sp, #64]
  415ae8:	add	x29, sp, #0x40
  415aec:	lsr	w11, w10, w2
  415af0:	mvn	w11, w11
  415af4:	and	w11, w11, #0x1
  415af8:	lsl	w11, w11, w2
  415afc:	eor	w10, w11, w10
  415b00:	mov	x2, x8
  415b04:	str	w10, [x9, #8]
  415b08:	bl	4157b4 <ferror@plt+0x12c64>
  415b0c:	ldp	x29, x30, [sp, #64]
  415b10:	add	sp, sp, #0x50
  415b14:	ret
  415b18:	sub	sp, sp, #0x50
  415b1c:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415b20:	add	x9, x9, #0xb50
  415b24:	ldp	q0, q1, [x9]
  415b28:	ubfx	w10, w1, #5, #3
  415b2c:	mov	x11, sp
  415b30:	mov	x8, x0
  415b34:	stp	q0, q1, [sp]
  415b38:	ldr	q0, [x9, #32]
  415b3c:	ldr	x9, [x9, #48]
  415b40:	mov	x3, sp
  415b44:	mov	x2, #0xffffffffffffffff    	// #-1
  415b48:	str	q0, [sp, #32]
  415b4c:	str	x9, [sp, #48]
  415b50:	add	x9, x11, w10, uxtw #2
  415b54:	ldr	w10, [x9, #8]
  415b58:	mov	w0, wzr
  415b5c:	stp	x29, x30, [sp, #64]
  415b60:	add	x29, sp, #0x40
  415b64:	lsr	w11, w10, w1
  415b68:	mvn	w11, w11
  415b6c:	and	w11, w11, #0x1
  415b70:	lsl	w11, w11, w1
  415b74:	eor	w10, w11, w10
  415b78:	mov	x1, x8
  415b7c:	str	w10, [x9, #8]
  415b80:	bl	4157b4 <ferror@plt+0x12c64>
  415b84:	ldp	x29, x30, [sp, #64]
  415b88:	add	sp, sp, #0x50
  415b8c:	ret
  415b90:	sub	sp, sp, #0x50
  415b94:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415b98:	add	x8, x8, #0xb50
  415b9c:	ldp	q0, q1, [x8]
  415ba0:	ldr	q2, [x8, #32]
  415ba4:	ldr	x8, [x8, #48]
  415ba8:	mov	x1, x0
  415bac:	stp	q0, q1, [sp]
  415bb0:	ldr	w9, [sp, #12]
  415bb4:	str	x8, [sp, #48]
  415bb8:	mov	x3, sp
  415bbc:	mov	x2, #0xffffffffffffffff    	// #-1
  415bc0:	orr	w8, w9, #0x4000000
  415bc4:	mov	w0, wzr
  415bc8:	stp	x29, x30, [sp, #64]
  415bcc:	add	x29, sp, #0x40
  415bd0:	str	q2, [sp, #32]
  415bd4:	str	w8, [sp, #12]
  415bd8:	bl	4157b4 <ferror@plt+0x12c64>
  415bdc:	ldp	x29, x30, [sp, #64]
  415be0:	add	sp, sp, #0x50
  415be4:	ret
  415be8:	sub	sp, sp, #0x50
  415bec:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415bf0:	add	x8, x8, #0xb50
  415bf4:	ldp	q0, q1, [x8]
  415bf8:	ldr	q2, [x8, #32]
  415bfc:	ldr	x8, [x8, #48]
  415c00:	mov	x2, x1
  415c04:	stp	q0, q1, [sp]
  415c08:	ldr	w9, [sp, #12]
  415c0c:	mov	x1, x0
  415c10:	str	x8, [sp, #48]
  415c14:	mov	x3, sp
  415c18:	orr	w8, w9, #0x4000000
  415c1c:	mov	w0, wzr
  415c20:	stp	x29, x30, [sp, #64]
  415c24:	add	x29, sp, #0x40
  415c28:	str	q2, [sp, #32]
  415c2c:	str	w8, [sp, #12]
  415c30:	bl	4157b4 <ferror@plt+0x12c64>
  415c34:	ldp	x29, x30, [sp, #64]
  415c38:	add	sp, sp, #0x50
  415c3c:	ret
  415c40:	sub	sp, sp, #0x80
  415c44:	movi	v0.2d, #0x0
  415c48:	cmp	w1, #0xa
  415c4c:	stp	x29, x30, [sp, #112]
  415c50:	add	x29, sp, #0x70
  415c54:	str	wzr, [sp, #48]
  415c58:	stp	q0, q0, [sp, #16]
  415c5c:	str	q0, [sp]
  415c60:	b.eq	415cb0 <ferror@plt+0x13160>  // b.none
  415c64:	ldp	q0, q1, [sp]
  415c68:	ldr	w9, [sp, #48]
  415c6c:	ldr	q2, [sp, #32]
  415c70:	mov	x8, x2
  415c74:	stur	q0, [sp, #60]
  415c78:	ldr	w10, [sp, #68]
  415c7c:	str	w1, [sp, #56]
  415c80:	str	w9, [sp, #108]
  415c84:	add	x3, sp, #0x38
  415c88:	orr	w9, w10, #0x4000000
  415c8c:	mov	x2, #0xffffffffffffffff    	// #-1
  415c90:	mov	x1, x8
  415c94:	stur	q1, [sp, #76]
  415c98:	stur	q2, [sp, #92]
  415c9c:	str	w9, [sp, #68]
  415ca0:	bl	4157b4 <ferror@plt+0x12c64>
  415ca4:	ldp	x29, x30, [sp, #112]
  415ca8:	add	sp, sp, #0x80
  415cac:	ret
  415cb0:	bl	402860 <abort@plt>
  415cb4:	sub	sp, sp, #0x50
  415cb8:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415cbc:	add	x9, x9, #0xb50
  415cc0:	ldp	q0, q1, [x9]
  415cc4:	ldr	q2, [x9, #32]
  415cc8:	ldr	x9, [x9, #48]
  415ccc:	mov	w10, #0xa                   	// #10
  415cd0:	stp	x29, x30, [sp, #64]
  415cd4:	add	x29, sp, #0x40
  415cd8:	stp	q0, q1, [sp]
  415cdc:	str	q2, [sp, #32]
  415ce0:	str	x9, [sp, #48]
  415ce4:	str	w10, [sp]
  415ce8:	cbz	x1, 415d14 <ferror@plt+0x131c4>
  415cec:	cbz	x2, 415d14 <ferror@plt+0x131c4>
  415cf0:	mov	x8, x3
  415cf4:	stp	x1, x2, [sp, #40]
  415cf8:	mov	x3, sp
  415cfc:	mov	x2, #0xffffffffffffffff    	// #-1
  415d00:	mov	x1, x8
  415d04:	bl	4157b4 <ferror@plt+0x12c64>
  415d08:	ldp	x29, x30, [sp, #64]
  415d0c:	add	sp, sp, #0x50
  415d10:	ret
  415d14:	bl	402860 <abort@plt>
  415d18:	sub	sp, sp, #0x50
  415d1c:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415d20:	add	x9, x9, #0xb50
  415d24:	ldp	q0, q1, [x9]
  415d28:	ldr	x10, [x9, #48]
  415d2c:	stp	x29, x30, [sp, #64]
  415d30:	add	x29, sp, #0x40
  415d34:	stp	q0, q1, [sp]
  415d38:	ldr	q0, [x9, #32]
  415d3c:	mov	w9, #0xa                   	// #10
  415d40:	str	x10, [sp, #48]
  415d44:	str	w9, [sp]
  415d48:	str	q0, [sp, #32]
  415d4c:	cbz	x1, 415d78 <ferror@plt+0x13228>
  415d50:	cbz	x2, 415d78 <ferror@plt+0x13228>
  415d54:	mov	x8, x3
  415d58:	stp	x1, x2, [sp, #40]
  415d5c:	mov	x3, sp
  415d60:	mov	x1, x8
  415d64:	mov	x2, x4
  415d68:	bl	4157b4 <ferror@plt+0x12c64>
  415d6c:	ldp	x29, x30, [sp, #64]
  415d70:	add	sp, sp, #0x50
  415d74:	ret
  415d78:	bl	402860 <abort@plt>
  415d7c:	sub	sp, sp, #0x50
  415d80:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415d84:	add	x9, x9, #0xb50
  415d88:	ldp	q0, q1, [x9]
  415d8c:	ldr	q2, [x9, #32]
  415d90:	ldr	x9, [x9, #48]
  415d94:	mov	w10, #0xa                   	// #10
  415d98:	stp	x29, x30, [sp, #64]
  415d9c:	add	x29, sp, #0x40
  415da0:	stp	q0, q1, [sp]
  415da4:	str	q2, [sp, #32]
  415da8:	str	x9, [sp, #48]
  415dac:	str	w10, [sp]
  415db0:	cbz	x0, 415de0 <ferror@plt+0x13290>
  415db4:	cbz	x1, 415de0 <ferror@plt+0x13290>
  415db8:	mov	x8, x2
  415dbc:	stp	x0, x1, [sp, #40]
  415dc0:	mov	x3, sp
  415dc4:	mov	x2, #0xffffffffffffffff    	// #-1
  415dc8:	mov	w0, wzr
  415dcc:	mov	x1, x8
  415dd0:	bl	4157b4 <ferror@plt+0x12c64>
  415dd4:	ldp	x29, x30, [sp, #64]
  415dd8:	add	sp, sp, #0x50
  415ddc:	ret
  415de0:	bl	402860 <abort@plt>
  415de4:	sub	sp, sp, #0x50
  415de8:	adrp	x9, 438000 <__progname@@GLIBC_2.17+0xabc8>
  415dec:	add	x9, x9, #0xb50
  415df0:	ldp	q0, q1, [x9]
  415df4:	ldr	q2, [x9, #32]
  415df8:	ldr	x9, [x9, #48]
  415dfc:	mov	w10, #0xa                   	// #10
  415e00:	stp	x29, x30, [sp, #64]
  415e04:	add	x29, sp, #0x40
  415e08:	stp	q0, q1, [sp]
  415e0c:	str	q2, [sp, #32]
  415e10:	str	x9, [sp, #48]
  415e14:	str	w10, [sp]
  415e18:	cbz	x0, 415e48 <ferror@plt+0x132f8>
  415e1c:	cbz	x1, 415e48 <ferror@plt+0x132f8>
  415e20:	mov	x8, x3
  415e24:	stp	x0, x1, [sp, #40]
  415e28:	mov	x3, sp
  415e2c:	mov	w0, wzr
  415e30:	mov	x1, x2
  415e34:	mov	x2, x8
  415e38:	bl	4157b4 <ferror@plt+0x12c64>
  415e3c:	ldp	x29, x30, [sp, #64]
  415e40:	add	sp, sp, #0x50
  415e44:	ret
  415e48:	bl	402860 <abort@plt>
  415e4c:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415e50:	add	x3, x3, #0x3a8
  415e54:	b	4157b4 <ferror@plt+0x12c64>
  415e58:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415e5c:	mov	x2, x1
  415e60:	add	x3, x3, #0x3a8
  415e64:	mov	x1, x0
  415e68:	mov	w0, wzr
  415e6c:	b	4157b4 <ferror@plt+0x12c64>
  415e70:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415e74:	add	x3, x3, #0x3a8
  415e78:	mov	x2, #0xffffffffffffffff    	// #-1
  415e7c:	b	4157b4 <ferror@plt+0x12c64>
  415e80:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x14d94>
  415e84:	add	x3, x3, #0x3a8
  415e88:	mov	x2, #0xffffffffffffffff    	// #-1
  415e8c:	mov	x1, x0
  415e90:	mov	w0, wzr
  415e94:	b	4157b4 <ferror@plt+0x12c64>
  415e98:	stp	x29, x30, [sp, #-32]!
  415e9c:	stp	x20, x19, [sp, #16]
  415ea0:	mov	x29, sp
  415ea4:	mov	w19, w1
  415ea8:	mov	x20, x0
  415eac:	bl	4183b0 <_obstack_memory_used@@Base+0x144>
  415eb0:	ldrb	w8, [x0]
  415eb4:	and	w8, w8, #0xffffffdf
  415eb8:	cmp	w8, #0x47
  415ebc:	b.eq	415f20 <ferror@plt+0x133d0>  // b.none
  415ec0:	cmp	w8, #0x55
  415ec4:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415ec8:	ldrb	w8, [x0, #1]
  415ecc:	and	w8, w8, #0xffffffdf
  415ed0:	cmp	w8, #0x54
  415ed4:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415ed8:	ldrb	w8, [x0, #2]
  415edc:	and	w8, w8, #0xffffffdf
  415ee0:	cmp	w8, #0x46
  415ee4:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415ee8:	ldrb	w8, [x0, #3]
  415eec:	cmp	w8, #0x2d
  415ef0:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415ef4:	ldrb	w8, [x0, #4]
  415ef8:	cmp	w8, #0x38
  415efc:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f00:	ldrb	w8, [x0, #5]
  415f04:	cbnz	w8, 415f74 <ferror@plt+0x13424>
  415f08:	ldrb	w8, [x20]
  415f0c:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x3d94>
  415f10:	adrp	x10, 41c000 <_obstack_memory_used@@Base+0x3d94>
  415f14:	add	x9, x9, #0x238
  415f18:	add	x10, x10, #0x234
  415f1c:	b	415fac <ferror@plt+0x1345c>
  415f20:	ldrb	w8, [x0, #1]
  415f24:	and	w8, w8, #0xffffffdf
  415f28:	cmp	w8, #0x42
  415f2c:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f30:	ldrb	w8, [x0, #2]
  415f34:	cmp	w8, #0x31
  415f38:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f3c:	ldrb	w8, [x0, #3]
  415f40:	cmp	w8, #0x38
  415f44:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f48:	ldrb	w8, [x0, #4]
  415f4c:	cmp	w8, #0x30
  415f50:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f54:	ldrb	w8, [x0, #5]
  415f58:	cmp	w8, #0x33
  415f5c:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f60:	ldrb	w8, [x0, #6]
  415f64:	cmp	w8, #0x30
  415f68:	b.ne	415f74 <ferror@plt+0x13424>  // b.any
  415f6c:	ldrb	w8, [x0, #7]
  415f70:	cbz	w8, 415f98 <ferror@plt+0x13448>
  415f74:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  415f78:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x2d94>
  415f7c:	add	x8, x8, #0x7ca
  415f80:	add	x9, x9, #0x7d2
  415f84:	cmp	w19, #0x9
  415f88:	csel	x0, x9, x8, eq  // eq = none
  415f8c:	ldp	x20, x19, [sp, #16]
  415f90:	ldp	x29, x30, [sp], #32
  415f94:	ret
  415f98:	ldrb	w8, [x20]
  415f9c:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x3d94>
  415fa0:	adrp	x10, 41c000 <_obstack_memory_used@@Base+0x3d94>
  415fa4:	add	x9, x9, #0x240
  415fa8:	add	x10, x10, #0x23c
  415fac:	cmp	w8, #0x60
  415fb0:	csel	x0, x10, x9, eq  // eq = none
  415fb4:	b	415f8c <ferror@plt+0x1343c>
  415fb8:	sub	sp, sp, #0x30
  415fbc:	str	x6, [sp, #16]
  415fc0:	and	w8, w5, #0x1
  415fc4:	and	w9, w4, #0x1
  415fc8:	and	w7, w3, #0x1
  415fcc:	mov	w3, #0x1                   	// #1
  415fd0:	mov	w4, #0x1                   	// #1
  415fd4:	mov	x5, xzr
  415fd8:	mov	x6, xzr
  415fdc:	stp	x29, x30, [sp, #32]
  415fe0:	add	x29, sp, #0x20
  415fe4:	strb	w8, [sp, #8]
  415fe8:	strb	w9, [sp]
  415fec:	bl	415ffc <ferror@plt+0x134ac>
  415ff0:	ldp	x29, x30, [sp, #32]
  415ff4:	add	sp, sp, #0x30
  415ff8:	ret
  415ffc:	stp	x29, x30, [sp, #-96]!
  416000:	stp	x28, x27, [sp, #16]
  416004:	stp	x26, x25, [sp, #32]
  416008:	stp	x24, x23, [sp, #48]
  41600c:	stp	x22, x21, [sp, #64]
  416010:	stp	x20, x19, [sp, #80]
  416014:	mov	x29, sp
  416018:	sub	sp, sp, #0x240
  41601c:	mov	w22, w7
  416020:	mov	x25, x6
  416024:	mov	x26, x5
  416028:	mov	w20, w4
  41602c:	mov	w19, w3
  416030:	mov	x23, x2
  416034:	mov	x24, x1
  416038:	mov	x21, x0
  41603c:	tbz	w4, #0, 41604c <ferror@plt+0x134fc>
  416040:	sub	x0, x29, #0x10
  416044:	bl	4166ec <ferror@plt+0x13b9c>
  416048:	tbnz	w0, #31, 41607c <ferror@plt+0x1352c>
  41604c:	ldrb	w28, [x29, #96]
  416050:	tbz	w19, #0, 41609c <ferror@plt+0x1354c>
  416054:	sub	x0, x29, #0x18
  416058:	bl	4166ec <ferror@plt+0x13b9c>
  41605c:	tbz	w0, #31, 41609c <ferror@plt+0x1354c>
  416060:	bl	402ac0 <__errno_location@plt>
  416064:	ldr	w1, [x0]
  416068:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  41606c:	add	x2, x2, #0x243
  416070:	mov	w0, #0x1                   	// #1
  416074:	bl	402540 <error@plt>
  416078:	b	41609c <ferror@plt+0x1354c>
  41607c:	bl	402ac0 <__errno_location@plt>
  416080:	ldr	w1, [x0]
  416084:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416088:	add	x2, x2, #0x243
  41608c:	mov	w0, #0x1                   	// #1
  416090:	bl	402540 <error@plt>
  416094:	ldrb	w28, [x29, #96]
  416098:	tbnz	w19, #0, 416054 <ferror@plt+0x13504>
  41609c:	tbz	w28, #0, 4160b4 <ferror@plt+0x13564>
  4160a0:	sub	x2, x29, #0x98
  4160a4:	mov	w0, #0x2                   	// #2
  4160a8:	mov	x1, xzr
  4160ac:	bl	402550 <sigprocmask@plt>
  4160b0:	bl	412ae4 <ferror@plt+0xff94>
  4160b4:	sub	x0, x29, #0xe8
  4160b8:	bl	4028a0 <posix_spawn_file_actions_init@plt>
  4160bc:	mov	w27, w0
  4160c0:	cbnz	w0, 4161f0 <ferror@plt+0x136a0>
  4160c4:	tbz	w19, #0, 4160e0 <ferror@plt+0x13590>
  4160c8:	ldur	w1, [x29, #-24]
  4160cc:	sub	x0, x29, #0xe8
  4160d0:	mov	w2, wzr
  4160d4:	bl	402640 <posix_spawn_file_actions_adddup2@plt>
  4160d8:	mov	w27, w0
  4160dc:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  4160e0:	tbz	w20, #0, 4160fc <ferror@plt+0x135ac>
  4160e4:	ldur	w1, [x29, #-12]
  4160e8:	sub	x0, x29, #0xe8
  4160ec:	mov	w2, #0x1                   	// #1
  4160f0:	bl	402640 <posix_spawn_file_actions_adddup2@plt>
  4160f4:	mov	w27, w0
  4160f8:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  4160fc:	tbz	w19, #0, 416114 <ferror@plt+0x135c4>
  416100:	ldur	w1, [x29, #-24]
  416104:	sub	x0, x29, #0xe8
  416108:	bl	4027e0 <posix_spawn_file_actions_addclose@plt>
  41610c:	mov	w27, w0
  416110:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  416114:	tbz	w20, #0, 41612c <ferror@plt+0x135dc>
  416118:	ldur	w1, [x29, #-12]
  41611c:	sub	x0, x29, #0xe8
  416120:	bl	4027e0 <posix_spawn_file_actions_addclose@plt>
  416124:	mov	w27, w0
  416128:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  41612c:	tbz	w19, #0, 416144 <ferror@plt+0x135f4>
  416130:	ldur	w1, [x29, #-20]
  416134:	sub	x0, x29, #0xe8
  416138:	bl	4027e0 <posix_spawn_file_actions_addclose@plt>
  41613c:	mov	w27, w0
  416140:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  416144:	tbz	w20, #0, 41615c <ferror@plt+0x1360c>
  416148:	ldur	w1, [x29, #-16]
  41614c:	sub	x0, x29, #0xe8
  416150:	bl	4027e0 <posix_spawn_file_actions_addclose@plt>
  416154:	mov	w27, w0
  416158:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  41615c:	tbz	w22, #0, 416184 <ferror@plt+0x13634>
  416160:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  416164:	add	x2, x2, #0x83f
  416168:	sub	x0, x29, #0xe8
  41616c:	mov	w1, #0x2                   	// #2
  416170:	mov	w3, #0x2                   	// #2
  416174:	mov	w4, wzr
  416178:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  41617c:	mov	w27, w0
  416180:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  416184:	cbz	x26, 4161ac <ferror@plt+0x1365c>
  416188:	tbnz	w19, #0, 4161ac <ferror@plt+0x1365c>
  41618c:	sub	x0, x29, #0xe8
  416190:	mov	w1, wzr
  416194:	mov	x2, x26
  416198:	mov	w3, wzr
  41619c:	mov	w4, wzr
  4161a0:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  4161a4:	mov	w27, w0
  4161a8:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  4161ac:	cbz	x25, 4161d4 <ferror@plt+0x13684>
  4161b0:	tbnz	w20, #0, 4161d4 <ferror@plt+0x13684>
  4161b4:	sub	x0, x29, #0xe8
  4161b8:	mov	w1, #0x1                   	// #1
  4161bc:	mov	w3, #0x1                   	// #1
  4161c0:	mov	x2, x25
  4161c4:	mov	w4, wzr
  4161c8:	bl	4025f0 <posix_spawn_file_actions_addopen@plt>
  4161cc:	mov	w27, w0
  4161d0:	cbnz	w0, 4161e8 <ferror@plt+0x13698>
  4161d4:	tbz	w28, #0, 4162d0 <ferror@plt+0x13780>
  4161d8:	add	x0, sp, #0x8
  4161dc:	bl	4029f0 <posix_spawnattr_init@plt>
  4161e0:	mov	w27, w0
  4161e4:	cbz	w0, 416324 <ferror@plt+0x137d4>
  4161e8:	sub	x0, x29, #0xe8
  4161ec:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  4161f0:	tbz	w28, #0, 4161f8 <ferror@plt+0x136a8>
  4161f4:	bl	412bec <ferror@plt+0x1009c>
  4161f8:	ldrb	w8, [x29, #104]
  4161fc:	tbz	w22, #0, 416204 <ferror@plt+0x136b4>
  416200:	tbz	w8, #0, 41621c <ferror@plt+0x136cc>
  416204:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  416208:	and	w0, w8, #0x1
  41620c:	add	x2, x2, #0x849
  416210:	mov	w1, w27
  416214:	mov	x3, x21
  416218:	bl	402540 <error@plt>
  41621c:	tbz	w20, #0, 416260 <ferror@plt+0x13710>
  416220:	ldur	w20, [x29, #-16]
  416224:	mov	w0, w20
  416228:	bl	4027f0 <close@plt>
  41622c:	tbz	w0, #31, 416240 <ferror@plt+0x136f0>
  416230:	bl	402ac0 <__errno_location@plt>
  416234:	ldr	w8, [x0]
  416238:	cmp	w8, #0x4
  41623c:	b.eq	416224 <ferror@plt+0x136d4>  // b.none
  416240:	ldur	w20, [x29, #-12]
  416244:	mov	w0, w20
  416248:	bl	4027f0 <close@plt>
  41624c:	tbz	w0, #31, 416260 <ferror@plt+0x13710>
  416250:	bl	402ac0 <__errno_location@plt>
  416254:	ldr	w8, [x0]
  416258:	cmp	w8, #0x4
  41625c:	b.eq	416244 <ferror@plt+0x136f4>  // b.none
  416260:	tbz	w19, #0, 4162a4 <ferror@plt+0x13754>
  416264:	ldur	w19, [x29, #-24]
  416268:	mov	w0, w19
  41626c:	bl	4027f0 <close@plt>
  416270:	tbz	w0, #31, 416284 <ferror@plt+0x13734>
  416274:	bl	402ac0 <__errno_location@plt>
  416278:	ldr	w8, [x0]
  41627c:	cmp	w8, #0x4
  416280:	b.eq	416268 <ferror@plt+0x13718>  // b.none
  416284:	ldur	w19, [x29, #-20]
  416288:	mov	w0, w19
  41628c:	bl	4027f0 <close@plt>
  416290:	tbz	w0, #31, 4162a4 <ferror@plt+0x13754>
  416294:	bl	402ac0 <__errno_location@plt>
  416298:	ldr	w8, [x0]
  41629c:	cmp	w8, #0x4
  4162a0:	b.eq	416288 <ferror@plt+0x13738>  // b.none
  4162a4:	bl	402ac0 <__errno_location@plt>
  4162a8:	str	w27, [x0]
  4162ac:	mov	w0, #0xffffffff            	// #-1
  4162b0:	add	sp, sp, #0x240
  4162b4:	ldp	x20, x19, [sp, #80]
  4162b8:	ldp	x22, x21, [sp, #64]
  4162bc:	ldp	x24, x23, [sp, #48]
  4162c0:	ldp	x26, x25, [sp, #32]
  4162c4:	ldp	x28, x27, [sp, #16]
  4162c8:	ldp	x29, x30, [sp], #96
  4162cc:	ret
  4162d0:	mov	w26, wzr
  4162d4:	mov	x25, xzr
  4162d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4162dc:	ldr	x5, [x8, #1072]
  4162e0:	add	x0, sp, #0x4
  4162e4:	sub	x2, x29, #0xe8
  4162e8:	mov	x1, x24
  4162ec:	mov	x3, x25
  4162f0:	mov	x4, x23
  4162f4:	bl	402960 <posix_spawnp@plt>
  4162f8:	mov	w27, w0
  4162fc:	sub	x0, x29, #0xe8
  416300:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  416304:	cbz	w27, 416310 <ferror@plt+0x137c0>
  416308:	cbz	w26, 4161f0 <ferror@plt+0x136a0>
  41630c:	b	416358 <ferror@plt+0x13808>
  416310:	cbnz	w26, 416364 <ferror@plt+0x13814>
  416314:	tbnz	w28, #0, 416370 <ferror@plt+0x13820>
  416318:	ldr	x22, [x29, #112]
  41631c:	tbnz	w19, #0, 416384 <ferror@plt+0x13834>
  416320:	b	4163a4 <ferror@plt+0x13854>
  416324:	add	x0, sp, #0x8
  416328:	sub	x1, x29, #0x98
  41632c:	bl	402890 <posix_spawnattr_setsigmask@plt>
  416330:	mov	w27, w0
  416334:	cbnz	w0, 416350 <ferror@plt+0x13800>
  416338:	add	x0, sp, #0x8
  41633c:	mov	w1, #0x8                   	// #8
  416340:	add	x25, sp, #0x8
  416344:	bl	402850 <posix_spawnattr_setflags@plt>
  416348:	mov	w27, w0
  41634c:	cbz	w0, 4163e4 <ferror@plt+0x13894>
  416350:	sub	x0, x29, #0xe8
  416354:	bl	4027a0 <posix_spawn_file_actions_destroy@plt>
  416358:	add	x0, sp, #0x8
  41635c:	bl	4026f0 <posix_spawnattr_destroy@plt>
  416360:	b	4161f0 <ferror@plt+0x136a0>
  416364:	add	x0, sp, #0x8
  416368:	bl	4026f0 <posix_spawnattr_destroy@plt>
  41636c:	tbz	w28, #0, 416318 <ferror@plt+0x137c8>
  416370:	ldr	w0, [sp, #4]
  416374:	bl	416ecc <ferror@plt+0x1437c>
  416378:	bl	412bec <ferror@plt+0x1009c>
  41637c:	ldr	x22, [x29, #112]
  416380:	tbz	w19, #0, 4163a4 <ferror@plt+0x13854>
  416384:	ldur	w21, [x29, #-24]
  416388:	mov	w0, w21
  41638c:	bl	4027f0 <close@plt>
  416390:	tbz	w0, #31, 4163a4 <ferror@plt+0x13854>
  416394:	bl	402ac0 <__errno_location@plt>
  416398:	ldr	w8, [x0]
  41639c:	cmp	w8, #0x4
  4163a0:	b.eq	416388 <ferror@plt+0x13838>  // b.none
  4163a4:	tbz	w20, #0, 4163d0 <ferror@plt+0x13880>
  4163a8:	ldur	w20, [x29, #-12]
  4163ac:	mov	w0, w20
  4163b0:	bl	4027f0 <close@plt>
  4163b4:	tbz	w0, #31, 4163c8 <ferror@plt+0x13878>
  4163b8:	bl	402ac0 <__errno_location@plt>
  4163bc:	ldr	w8, [x0]
  4163c0:	cmp	w8, #0x4
  4163c4:	b.eq	4163ac <ferror@plt+0x1385c>  // b.none
  4163c8:	ldur	w8, [x29, #-16]
  4163cc:	str	w8, [x22]
  4163d0:	tbz	w19, #0, 4163dc <ferror@plt+0x1388c>
  4163d4:	ldur	w8, [x29, #-20]
  4163d8:	str	w8, [x22, #4]
  4163dc:	ldr	w0, [sp, #4]
  4163e0:	b	4162b0 <ferror@plt+0x13760>
  4163e4:	mov	w26, #0x1                   	// #1
  4163e8:	b	4162d8 <ferror@plt+0x13788>
  4163ec:	sub	sp, sp, #0x40
  4163f0:	stp	x29, x30, [sp, #32]
  4163f4:	add	x29, sp, #0x20
  4163f8:	mov	x8, x3
  4163fc:	str	x19, [sp, #48]
  416400:	mov	x19, x7
  416404:	add	x9, x29, #0x18
  416408:	and	w10, w6, #0x1
  41640c:	and	w11, w5, #0x1
  416410:	and	w7, w4, #0x1
  416414:	mov	w4, #0x1                   	// #1
  416418:	mov	w3, wzr
  41641c:	mov	x5, x8
  416420:	mov	x6, xzr
  416424:	str	x9, [sp, #16]
  416428:	strb	w10, [sp, #8]
  41642c:	strb	w11, [sp]
  416430:	bl	415ffc <ferror@plt+0x134ac>
  416434:	cmn	w0, #0x1
  416438:	b.eq	416444 <ferror@plt+0x138f4>  // b.none
  41643c:	ldr	w8, [x29, #24]
  416440:	str	w8, [x19]
  416444:	ldr	x19, [sp, #48]
  416448:	ldp	x29, x30, [sp, #32]
  41644c:	add	sp, sp, #0x40
  416450:	ret
  416454:	sub	sp, sp, #0x40
  416458:	stp	x29, x30, [sp, #32]
  41645c:	add	x29, sp, #0x20
  416460:	mov	x8, x3
  416464:	str	x19, [sp, #48]
  416468:	mov	x19, x7
  41646c:	add	x9, x29, #0x18
  416470:	and	w10, w6, #0x1
  416474:	and	w11, w5, #0x1
  416478:	and	w7, w4, #0x1
  41647c:	mov	w3, #0x1                   	// #1
  416480:	mov	w4, wzr
  416484:	mov	x5, xzr
  416488:	mov	x6, x8
  41648c:	str	x9, [sp, #16]
  416490:	strb	w10, [sp, #8]
  416494:	strb	w11, [sp]
  416498:	bl	415ffc <ferror@plt+0x134ac>
  41649c:	cmn	w0, #0x1
  4164a0:	b.eq	4164ac <ferror@plt+0x1395c>  // b.none
  4164a4:	ldr	w8, [x29, #28]
  4164a8:	str	w8, [x19]
  4164ac:	ldr	x19, [sp, #48]
  4164b0:	ldp	x29, x30, [sp, #32]
  4164b4:	add	sp, sp, #0x40
  4164b8:	ret
  4164bc:	stp	x29, x30, [sp, #-16]!
  4164c0:	mov	x29, sp
  4164c4:	bl	402a10 <mkstemp@plt>
  4164c8:	ldp	x29, x30, [sp], #16
  4164cc:	b	416690 <ferror@plt+0x13b40>
  4164d0:	sub	sp, sp, #0xd0
  4164d4:	stp	x24, x23, [sp, #160]
  4164d8:	stp	x22, x21, [sp, #176]
  4164dc:	stp	x20, x19, [sp, #192]
  4164e0:	mov	w24, w4
  4164e4:	mov	x23, x2
  4164e8:	mov	x22, x1
  4164ec:	mov	x20, x0
  4164f0:	stp	x29, x30, [sp, #128]
  4164f4:	str	x25, [sp, #144]
  4164f8:	add	x29, sp, #0x80
  4164fc:	cbz	x3, 416530 <ferror@plt+0x139e0>
  416500:	ldrb	w8, [x3]
  416504:	mov	x19, x3
  416508:	cbz	w8, 416530 <ferror@plt+0x139e0>
  41650c:	mov	x0, x19
  416510:	bl	4024f0 <strlen@plt>
  416514:	cmp	x0, #0x5
  416518:	mov	w8, #0x5                   	// #5
  41651c:	csel	x21, x0, x8, cc  // cc = lo, ul, last
  416520:	tbnz	w24, #0, 416540 <ferror@plt+0x139f0>
  416524:	mov	x24, x23
  416528:	cbnz	x23, 4165d0 <ferror@plt+0x13a80>
  41652c:	b	4165a4 <ferror@plt+0x13a54>
  416530:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x2d94>
  416534:	add	x19, x19, #0x4a4
  416538:	mov	w21, #0x4                   	// #4
  41653c:	tbz	w24, #0, 416524 <ferror@plt+0x139d4>
  416540:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x2d94>
  416544:	add	x0, x0, #0x795
  416548:	bl	402570 <secure_getenv@plt>
  41654c:	cbz	x0, 416578 <ferror@plt+0x13a28>
  416550:	mov	x24, x0
  416554:	mov	x2, sp
  416558:	mov	w0, wzr
  41655c:	mov	x1, x24
  416560:	bl	402af0 <__xstat@plt>
  416564:	cbnz	w0, 416578 <ferror@plt+0x13a28>
  416568:	ldr	w8, [sp, #16]
  41656c:	and	w8, w8, #0xf000
  416570:	cmp	w8, #0x4, lsl #12
  416574:	b.eq	4165d0 <ferror@plt+0x13a80>  // b.none
  416578:	cbz	x23, 4165a4 <ferror@plt+0x13a54>
  41657c:	mov	x2, sp
  416580:	mov	w0, wzr
  416584:	mov	x1, x23
  416588:	bl	402af0 <__xstat@plt>
  41658c:	cbnz	w0, 4165a4 <ferror@plt+0x13a54>
  416590:	ldr	w8, [sp, #16]
  416594:	mov	x24, x23
  416598:	and	w8, w8, #0xf000
  41659c:	cmp	w8, #0x4, lsl #12
  4165a0:	b.eq	4165d0 <ferror@plt+0x13a80>  // b.none
  4165a4:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4165a8:	add	x24, x24, #0x256
  4165ac:	mov	x2, sp
  4165b0:	mov	w0, wzr
  4165b4:	mov	x1, x24
  4165b8:	bl	402af0 <__xstat@plt>
  4165bc:	cbnz	w0, 416658 <ferror@plt+0x13b08>
  4165c0:	ldr	w8, [sp, #16]
  4165c4:	and	w8, w8, #0xf000
  4165c8:	cmp	w8, #0x4, lsl #12
  4165cc:	b.ne	416658 <ferror@plt+0x13b08>  // b.any
  4165d0:	mov	x0, x24
  4165d4:	bl	4024f0 <strlen@plt>
  4165d8:	mov	x23, x0
  4165dc:	cbz	x0, 4165f4 <ferror@plt+0x13aa4>
  4165e0:	add	x8, x23, x24
  4165e4:	ldurb	w8, [x8, #-1]
  4165e8:	cmp	w8, #0x2f
  4165ec:	cset	w25, ne  // ne = any
  4165f0:	b	4165f8 <ferror@plt+0x13aa8>
  4165f4:	mov	w25, wzr
  4165f8:	add	x8, x21, x23
  4165fc:	add	x8, x8, x25
  416600:	add	x8, x8, #0x7
  416604:	cmp	x8, x22
  416608:	b.ls	416618 <ferror@plt+0x13ac8>  // b.plast
  41660c:	bl	402ac0 <__errno_location@plt>
  416610:	mov	w8, #0x16                  	// #22
  416614:	b	416660 <ferror@plt+0x13b10>
  416618:	mov	x0, x20
  41661c:	mov	x1, x24
  416620:	mov	x2, x23
  416624:	bl	4024c0 <memcpy@plt>
  416628:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x3d94>
  41662c:	eor	w8, w25, #0x1
  416630:	add	x9, x9, #0x25b
  416634:	add	x0, x20, x23
  416638:	add	x3, x9, x8
  41663c:	mov	w1, #0x1                   	// #1
  416640:	mov	x2, #0xffffffffffffffff    	// #-1
  416644:	mov	w4, w21
  416648:	mov	x5, x19
  41664c:	bl	402510 <__sprintf_chk@plt>
  416650:	mov	w0, wzr
  416654:	b	416668 <ferror@plt+0x13b18>
  416658:	bl	402ac0 <__errno_location@plt>
  41665c:	mov	w8, #0x2                   	// #2
  416660:	str	w8, [x0]
  416664:	mov	w0, #0xffffffff            	// #-1
  416668:	ldp	x20, x19, [sp, #192]
  41666c:	ldp	x22, x21, [sp, #176]
  416670:	ldp	x24, x23, [sp, #160]
  416674:	ldr	x25, [sp, #144]
  416678:	ldp	x29, x30, [sp, #128]
  41667c:	add	sp, sp, #0xd0
  416680:	ret
  416684:	mov	w2, #0x3                   	// #3
  416688:	mov	w1, wzr
  41668c:	b	417bac <ferror@plt+0x1505c>
  416690:	stp	x29, x30, [sp, #-48]!
  416694:	stp	x20, x19, [sp, #32]
  416698:	mov	w19, w0
  41669c:	cmp	w0, #0x2
  4166a0:	stp	x22, x21, [sp, #16]
  4166a4:	mov	x29, sp
  4166a8:	b.hi	4166d8 <ferror@plt+0x13b88>  // b.pmore
  4166ac:	mov	w0, w19
  4166b0:	bl	416684 <ferror@plt+0x13b34>
  4166b4:	mov	w20, w0
  4166b8:	bl	402ac0 <__errno_location@plt>
  4166bc:	ldr	w22, [x0]
  4166c0:	mov	x21, x0
  4166c4:	mov	w0, w19
  4166c8:	bl	4027f0 <close@plt>
  4166cc:	str	w22, [x21]
  4166d0:	mov	w0, w20
  4166d4:	b	4166dc <ferror@plt+0x13b8c>
  4166d8:	mov	w0, w19
  4166dc:	ldp	x20, x19, [sp, #32]
  4166e0:	ldp	x22, x21, [sp, #16]
  4166e4:	ldp	x29, x30, [sp], #48
  4166e8:	ret
  4166ec:	stp	x29, x30, [sp, #-48]!
  4166f0:	stp	x22, x21, [sp, #16]
  4166f4:	stp	x20, x19, [sp, #32]
  4166f8:	mov	x29, sp
  4166fc:	mov	x19, x0
  416700:	bl	4025b0 <pipe@plt>
  416704:	cbnz	w0, 416754 <ferror@plt+0x13c04>
  416708:	ldr	w0, [x19]
  41670c:	bl	416690 <ferror@plt+0x13b40>
  416710:	str	w0, [x19]
  416714:	tbnz	w0, #31, 416730 <ferror@plt+0x13be0>
  416718:	ldr	w0, [x19, #4]
  41671c:	bl	416690 <ferror@plt+0x13b40>
  416720:	str	w0, [x19, #4]
  416724:	tbnz	w0, #31, 416738 <ferror@plt+0x13be8>
  416728:	mov	w0, wzr
  41672c:	b	416758 <ferror@plt+0x13c08>
  416730:	mov	w21, #0x1                   	// #1
  416734:	b	41673c <ferror@plt+0x13bec>
  416738:	mov	x21, xzr
  41673c:	bl	402ac0 <__errno_location@plt>
  416740:	mov	x20, x0
  416744:	ldr	w22, [x0]
  416748:	ldr	w0, [x19, x21, lsl #2]
  41674c:	bl	4027f0 <close@plt>
  416750:	str	w22, [x20]
  416754:	mov	w0, #0xffffffff            	// #-1
  416758:	ldp	x20, x19, [sp, #32]
  41675c:	ldp	x22, x21, [sp, #16]
  416760:	ldp	x29, x30, [sp], #48
  416764:	ret
  416768:	sub	sp, sp, #0x50
  41676c:	stp	x29, x30, [sp, #32]
  416770:	str	x21, [sp, #48]
  416774:	stp	x20, x19, [sp, #64]
  416778:	ldp	q1, q0, [x3]
  41677c:	mov	w19, w1
  416780:	mov	w20, w0
  416784:	mov	x1, sp
  416788:	mov	x0, x2
  41678c:	add	x29, sp, #0x20
  416790:	stp	q1, q0, [sp]
  416794:	bl	4178e4 <ferror@plt+0x14d94>
  416798:	cbz	x0, 4167d4 <ferror@plt+0x13c84>
  41679c:	mov	x21, x0
  4167a0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4167a4:	add	x2, x2, #0x8de
  4167a8:	mov	w0, w20
  4167ac:	mov	w1, w19
  4167b0:	mov	x3, x21
  4167b4:	bl	402540 <error@plt>
  4167b8:	mov	x0, x21
  4167bc:	bl	402930 <free@plt>
  4167c0:	ldp	x20, x19, [sp, #64]
  4167c4:	ldr	x21, [sp, #48]
  4167c8:	ldp	x29, x30, [sp, #32]
  4167cc:	add	sp, sp, #0x50
  4167d0:	ret
  4167d4:	bl	402ac0 <__errno_location@plt>
  4167d8:	ldr	w1, [x0]
  4167dc:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4167e0:	add	x2, x2, #0x267
  4167e4:	mov	w0, wzr
  4167e8:	bl	402540 <error@plt>
  4167ec:	bl	402860 <abort@plt>
  4167f0:	sub	sp, sp, #0x60
  4167f4:	stp	x29, x30, [sp, #32]
  4167f8:	str	x23, [sp, #48]
  4167fc:	stp	x22, x21, [sp, #64]
  416800:	stp	x20, x19, [sp, #80]
  416804:	ldp	q1, q0, [x5]
  416808:	mov	w20, w1
  41680c:	mov	w23, w0
  416810:	mov	x1, sp
  416814:	mov	x0, x4
  416818:	add	x29, sp, #0x20
  41681c:	mov	w21, w3
  416820:	mov	x22, x2
  416824:	stp	q1, q0, [sp]
  416828:	bl	4178e4 <ferror@plt+0x14d94>
  41682c:	cbz	x0, 416894 <ferror@plt+0x13d44>
  416830:	mov	x19, x0
  416834:	cbz	x22, 41685c <ferror@plt+0x13d0c>
  416838:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x1d94>
  41683c:	add	x4, x4, #0x8de
  416840:	mov	w0, w23
  416844:	mov	w1, w20
  416848:	mov	x2, x22
  41684c:	mov	w3, w21
  416850:	mov	x5, x19
  416854:	bl	402b20 <error_at_line@plt>
  416858:	b	416874 <ferror@plt+0x13d24>
  41685c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  416860:	add	x2, x2, #0x8de
  416864:	mov	w0, w23
  416868:	mov	w1, w20
  41686c:	mov	x3, x19
  416870:	bl	402540 <error@plt>
  416874:	mov	x0, x19
  416878:	bl	402930 <free@plt>
  41687c:	ldp	x20, x19, [sp, #80]
  416880:	ldp	x22, x21, [sp, #64]
  416884:	ldr	x23, [sp, #48]
  416888:	ldp	x29, x30, [sp, #32]
  41688c:	add	sp, sp, #0x60
  416890:	ret
  416894:	bl	402ac0 <__errno_location@plt>
  416898:	ldr	w1, [x0]
  41689c:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4168a0:	add	x2, x2, #0x267
  4168a4:	mov	w0, wzr
  4168a8:	bl	402540 <error@plt>
  4168ac:	bl	402860 <abort@plt>
  4168b0:	sub	sp, sp, #0x50
  4168b4:	str	x21, [sp, #48]
  4168b8:	stp	x20, x19, [sp, #64]
  4168bc:	mov	x21, x5
  4168c0:	mov	x20, x4
  4168c4:	mov	x5, x3
  4168c8:	mov	x4, x2
  4168cc:	mov	x19, x0
  4168d0:	stp	x29, x30, [sp, #32]
  4168d4:	add	x29, sp, #0x20
  4168d8:	cbz	x1, 4168f8 <ferror@plt+0x13da8>
  4168dc:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4168e0:	mov	x3, x1
  4168e4:	add	x2, x2, #0x291
  4168e8:	mov	w1, #0x1                   	// #1
  4168ec:	mov	x0, x19
  4168f0:	bl	4028c0 <__fprintf_chk@plt>
  4168f4:	b	416914 <ferror@plt+0x13dc4>
  4168f8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4168fc:	add	x2, x2, #0x29d
  416900:	mov	w1, #0x1                   	// #1
  416904:	mov	x0, x19
  416908:	mov	x3, x4
  41690c:	mov	x4, x5
  416910:	bl	4028c0 <__fprintf_chk@plt>
  416914:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416918:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x3d94>
  41691c:	add	x2, x2, #0x577
  416920:	add	x3, x3, #0x2a4
  416924:	mov	w1, #0x1                   	// #1
  416928:	mov	w4, #0x7e0                 	// #2016
  41692c:	mov	x0, x19
  416930:	bl	4028c0 <__fprintf_chk@plt>
  416934:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416938:	add	x0, x0, #0x2a8
  41693c:	mov	x1, x19
  416940:	bl	402a50 <fputs_unlocked@plt>
  416944:	cmp	x21, #0x9
  416948:	b.hi	41698c <ferror@plt+0x13e3c>  // b.pmore
  41694c:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416950:	add	x8, x8, #0x287
  416954:	adr	x9, 416964 <ferror@plt+0x13e14>
  416958:	ldrb	w10, [x8, x21]
  41695c:	add	x9, x9, x10, lsl #2
  416960:	br	x9
  416964:	ldr	x3, [x20]
  416968:	mov	x0, x19
  41696c:	ldp	x20, x19, [sp, #64]
  416970:	ldr	x21, [sp, #48]
  416974:	ldp	x29, x30, [sp, #32]
  416978:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  41697c:	add	x2, x2, #0x373
  416980:	mov	w1, #0x1                   	// #1
  416984:	add	sp, sp, #0x50
  416988:	b	4028c0 <__fprintf_chk@plt>
  41698c:	ldp	x8, x9, [x20, #56]
  416990:	ldp	x3, x4, [x20]
  416994:	ldp	x5, x6, [x20, #16]
  416998:	ldr	x7, [x20, #32]
  41699c:	ldur	q0, [x20, #40]
  4169a0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4169a4:	stp	x8, x9, [sp, #16]
  4169a8:	add	x2, x2, #0x4b2
  4169ac:	b	416ae4 <ferror@plt+0x13f94>
  4169b0:	ldp	x3, x4, [x20]
  4169b4:	ldr	x5, [x20, #16]
  4169b8:	mov	x0, x19
  4169bc:	ldp	x20, x19, [sp, #64]
  4169c0:	ldr	x21, [sp, #48]
  4169c4:	ldp	x29, x30, [sp, #32]
  4169c8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4169cc:	add	x2, x2, #0x39a
  4169d0:	mov	w1, #0x1                   	// #1
  4169d4:	add	sp, sp, #0x50
  4169d8:	b	4028c0 <__fprintf_chk@plt>
  4169dc:	ldp	x3, x4, [x20]
  4169e0:	mov	x0, x19
  4169e4:	ldp	x20, x19, [sp, #64]
  4169e8:	ldr	x21, [sp, #48]
  4169ec:	ldp	x29, x30, [sp, #32]
  4169f0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4169f4:	add	x2, x2, #0x383
  4169f8:	mov	w1, #0x1                   	// #1
  4169fc:	add	sp, sp, #0x50
  416a00:	b	4028c0 <__fprintf_chk@plt>
  416a04:	ldp	x3, x4, [x20]
  416a08:	ldp	x5, x6, [x20, #16]
  416a0c:	ldr	x7, [x20, #32]
  416a10:	ldur	q0, [x20, #40]
  416a14:	ldr	x8, [x20, #56]
  416a18:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416a1c:	add	x2, x2, #0x44e
  416a20:	str	x8, [sp, #16]
  416a24:	b	416ae4 <ferror@plt+0x13f94>
  416a28:	ldp	x3, x4, [x20]
  416a2c:	ldp	x5, x6, [x20, #16]
  416a30:	mov	x0, x19
  416a34:	ldp	x20, x19, [sp, #64]
  416a38:	ldr	x21, [sp, #48]
  416a3c:	ldp	x29, x30, [sp, #32]
  416a40:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416a44:	add	x2, x2, #0x3b6
  416a48:	mov	w1, #0x1                   	// #1
  416a4c:	add	sp, sp, #0x50
  416a50:	b	4028c0 <__fprintf_chk@plt>
  416a54:	ldp	x3, x4, [x20]
  416a58:	ldp	x5, x6, [x20, #16]
  416a5c:	ldr	x7, [x20, #32]
  416a60:	mov	x0, x19
  416a64:	ldp	x20, x19, [sp, #64]
  416a68:	ldr	x21, [sp, #48]
  416a6c:	ldp	x29, x30, [sp, #32]
  416a70:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416a74:	add	x2, x2, #0x3d6
  416a78:	mov	w1, #0x1                   	// #1
  416a7c:	add	sp, sp, #0x50
  416a80:	b	4028c0 <__fprintf_chk@plt>
  416a84:	ldp	x3, x4, [x20]
  416a88:	ldp	x5, x6, [x20, #16]
  416a8c:	ldp	x7, x8, [x20, #32]
  416a90:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416a94:	add	x2, x2, #0x3fa
  416a98:	b	416ab8 <ferror@plt+0x13f68>
  416a9c:	ldr	x9, [x20, #48]
  416aa0:	ldp	x3, x4, [x20]
  416aa4:	ldp	x5, x6, [x20, #16]
  416aa8:	ldp	x7, x8, [x20, #32]
  416aac:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416ab0:	add	x2, x2, #0x422
  416ab4:	str	x9, [sp, #8]
  416ab8:	mov	w1, #0x1                   	// #1
  416abc:	str	x8, [sp]
  416ac0:	b	416aec <ferror@plt+0x13f9c>
  416ac4:	ldp	x8, x9, [x20, #56]
  416ac8:	ldp	x3, x4, [x20]
  416acc:	ldp	x5, x6, [x20, #16]
  416ad0:	ldr	x7, [x20, #32]
  416ad4:	ldur	q0, [x20, #40]
  416ad8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416adc:	stp	x8, x9, [sp, #16]
  416ae0:	add	x2, x2, #0x47e
  416ae4:	mov	w1, #0x1                   	// #1
  416ae8:	str	q0, [sp]
  416aec:	mov	x0, x19
  416af0:	bl	4028c0 <__fprintf_chk@plt>
  416af4:	ldp	x20, x19, [sp, #64]
  416af8:	ldr	x21, [sp, #48]
  416afc:	ldp	x29, x30, [sp, #32]
  416b00:	add	sp, sp, #0x50
  416b04:	ret
  416b08:	bl	402860 <abort@plt>
  416b0c:	mov	x8, xzr
  416b10:	ldr	x9, [x4, x8, lsl #3]
  416b14:	add	x8, x8, #0x1
  416b18:	cbnz	x9, 416b10 <ferror@plt+0x13fc0>
  416b1c:	sub	x5, x8, #0x1
  416b20:	b	4168b0 <ferror@plt+0x13d60>
  416b24:	sub	sp, sp, #0x60
  416b28:	stp	x29, x30, [sp, #80]
  416b2c:	ldr	w9, [x4, #24]
  416b30:	add	x29, sp, #0x50
  416b34:	mov	w8, w9
  416b38:	tbz	w9, #31, 416b5c <ferror@plt+0x1400c>
  416b3c:	add	w8, w9, #0x8
  416b40:	cmn	w9, #0x8
  416b44:	str	w8, [x4, #24]
  416b48:	b.gt	416b5c <ferror@plt+0x1400c>
  416b4c:	ldr	x10, [x4, #8]
  416b50:	sxtw	x9, w9
  416b54:	add	x9, x10, x9
  416b58:	b	416b68 <ferror@plt+0x14018>
  416b5c:	ldr	x9, [x4]
  416b60:	add	x10, x9, #0x8
  416b64:	str	x10, [x4]
  416b68:	ldr	x9, [x9]
  416b6c:	str	x9, [sp]
  416b70:	cbz	x9, 416b80 <ferror@plt+0x14030>
  416b74:	tbnz	w8, #31, 416b88 <ferror@plt+0x14038>
  416b78:	mov	w9, w8
  416b7c:	b	416ba4 <ferror@plt+0x14054>
  416b80:	mov	x5, xzr
  416b84:	b	416dfc <ferror@plt+0x142ac>
  416b88:	add	w9, w8, #0x8
  416b8c:	cmn	w8, #0x8
  416b90:	str	w9, [x4, #24]
  416b94:	b.gt	416ba4 <ferror@plt+0x14054>
  416b98:	ldr	x10, [x4, #8]
  416b9c:	add	x8, x10, w8, sxtw
  416ba0:	b	416bb0 <ferror@plt+0x14060>
  416ba4:	ldr	x8, [x4]
  416ba8:	add	x10, x8, #0x8
  416bac:	str	x10, [x4]
  416bb0:	ldr	x8, [x8]
  416bb4:	str	x8, [sp, #8]
  416bb8:	cbz	x8, 416bc8 <ferror@plt+0x14078>
  416bbc:	tbnz	w9, #31, 416bd0 <ferror@plt+0x14080>
  416bc0:	mov	w8, w9
  416bc4:	b	416bec <ferror@plt+0x1409c>
  416bc8:	mov	w5, #0x1                   	// #1
  416bcc:	b	416dfc <ferror@plt+0x142ac>
  416bd0:	add	w8, w9, #0x8
  416bd4:	cmn	w9, #0x8
  416bd8:	str	w8, [x4, #24]
  416bdc:	b.gt	416bec <ferror@plt+0x1409c>
  416be0:	ldr	x10, [x4, #8]
  416be4:	add	x9, x10, w9, sxtw
  416be8:	b	416bf8 <ferror@plt+0x140a8>
  416bec:	ldr	x9, [x4]
  416bf0:	add	x10, x9, #0x8
  416bf4:	str	x10, [x4]
  416bf8:	ldr	x9, [x9]
  416bfc:	str	x9, [sp, #16]
  416c00:	cbz	x9, 416c10 <ferror@plt+0x140c0>
  416c04:	tbnz	w8, #31, 416c18 <ferror@plt+0x140c8>
  416c08:	mov	w9, w8
  416c0c:	b	416c34 <ferror@plt+0x140e4>
  416c10:	mov	w5, #0x2                   	// #2
  416c14:	b	416dfc <ferror@plt+0x142ac>
  416c18:	add	w9, w8, #0x8
  416c1c:	cmn	w8, #0x8
  416c20:	str	w9, [x4, #24]
  416c24:	b.gt	416c34 <ferror@plt+0x140e4>
  416c28:	ldr	x10, [x4, #8]
  416c2c:	add	x8, x10, w8, sxtw
  416c30:	b	416c40 <ferror@plt+0x140f0>
  416c34:	ldr	x8, [x4]
  416c38:	add	x10, x8, #0x8
  416c3c:	str	x10, [x4]
  416c40:	ldr	x8, [x8]
  416c44:	str	x8, [sp, #24]
  416c48:	cbz	x8, 416c58 <ferror@plt+0x14108>
  416c4c:	tbnz	w9, #31, 416c60 <ferror@plt+0x14110>
  416c50:	mov	w8, w9
  416c54:	b	416c7c <ferror@plt+0x1412c>
  416c58:	mov	w5, #0x3                   	// #3
  416c5c:	b	416dfc <ferror@plt+0x142ac>
  416c60:	add	w8, w9, #0x8
  416c64:	cmn	w9, #0x8
  416c68:	str	w8, [x4, #24]
  416c6c:	b.gt	416c7c <ferror@plt+0x1412c>
  416c70:	ldr	x10, [x4, #8]
  416c74:	add	x9, x10, w9, sxtw
  416c78:	b	416c88 <ferror@plt+0x14138>
  416c7c:	ldr	x9, [x4]
  416c80:	add	x10, x9, #0x8
  416c84:	str	x10, [x4]
  416c88:	ldr	x9, [x9]
  416c8c:	str	x9, [sp, #32]
  416c90:	cbz	x9, 416ca0 <ferror@plt+0x14150>
  416c94:	tbnz	w8, #31, 416ca8 <ferror@plt+0x14158>
  416c98:	mov	w9, w8
  416c9c:	b	416cc4 <ferror@plt+0x14174>
  416ca0:	mov	w5, #0x4                   	// #4
  416ca4:	b	416dfc <ferror@plt+0x142ac>
  416ca8:	add	w9, w8, #0x8
  416cac:	cmn	w8, #0x8
  416cb0:	str	w9, [x4, #24]
  416cb4:	b.gt	416cc4 <ferror@plt+0x14174>
  416cb8:	ldr	x10, [x4, #8]
  416cbc:	add	x8, x10, w8, sxtw
  416cc0:	b	416cd0 <ferror@plt+0x14180>
  416cc4:	ldr	x8, [x4]
  416cc8:	add	x10, x8, #0x8
  416ccc:	str	x10, [x4]
  416cd0:	ldr	x8, [x8]
  416cd4:	str	x8, [sp, #40]
  416cd8:	cbz	x8, 416ce8 <ferror@plt+0x14198>
  416cdc:	tbnz	w9, #31, 416cf0 <ferror@plt+0x141a0>
  416ce0:	mov	w8, w9
  416ce4:	b	416d0c <ferror@plt+0x141bc>
  416ce8:	mov	w5, #0x5                   	// #5
  416cec:	b	416dfc <ferror@plt+0x142ac>
  416cf0:	add	w8, w9, #0x8
  416cf4:	cmn	w9, #0x8
  416cf8:	str	w8, [x4, #24]
  416cfc:	b.gt	416d0c <ferror@plt+0x141bc>
  416d00:	ldr	x10, [x4, #8]
  416d04:	add	x9, x10, w9, sxtw
  416d08:	b	416d18 <ferror@plt+0x141c8>
  416d0c:	ldr	x9, [x4]
  416d10:	add	x10, x9, #0x8
  416d14:	str	x10, [x4]
  416d18:	ldr	x9, [x9]
  416d1c:	str	x9, [sp, #48]
  416d20:	cbz	x9, 416d30 <ferror@plt+0x141e0>
  416d24:	tbnz	w8, #31, 416d38 <ferror@plt+0x141e8>
  416d28:	mov	w9, w8
  416d2c:	b	416d54 <ferror@plt+0x14204>
  416d30:	mov	w5, #0x6                   	// #6
  416d34:	b	416dfc <ferror@plt+0x142ac>
  416d38:	add	w9, w8, #0x8
  416d3c:	cmn	w8, #0x8
  416d40:	str	w9, [x4, #24]
  416d44:	b.gt	416d54 <ferror@plt+0x14204>
  416d48:	ldr	x10, [x4, #8]
  416d4c:	add	x8, x10, w8, sxtw
  416d50:	b	416d60 <ferror@plt+0x14210>
  416d54:	ldr	x8, [x4]
  416d58:	add	x10, x8, #0x8
  416d5c:	str	x10, [x4]
  416d60:	ldr	x8, [x8]
  416d64:	str	x8, [sp, #56]
  416d68:	cbz	x8, 416d78 <ferror@plt+0x14228>
  416d6c:	tbnz	w9, #31, 416d80 <ferror@plt+0x14230>
  416d70:	mov	w8, w9
  416d74:	b	416d9c <ferror@plt+0x1424c>
  416d78:	mov	w5, #0x7                   	// #7
  416d7c:	b	416dfc <ferror@plt+0x142ac>
  416d80:	add	w8, w9, #0x8
  416d84:	cmn	w9, #0x8
  416d88:	str	w8, [x4, #24]
  416d8c:	b.gt	416d9c <ferror@plt+0x1424c>
  416d90:	ldr	x10, [x4, #8]
  416d94:	add	x9, x10, w9, sxtw
  416d98:	b	416da8 <ferror@plt+0x14258>
  416d9c:	ldr	x9, [x4]
  416da0:	add	x10, x9, #0x8
  416da4:	str	x10, [x4]
  416da8:	ldr	x9, [x9]
  416dac:	str	x9, [sp, #64]
  416db0:	cbz	x9, 416df8 <ferror@plt+0x142a8>
  416db4:	tbz	w8, #31, 416dd4 <ferror@plt+0x14284>
  416db8:	add	w9, w8, #0x8
  416dbc:	cmn	w8, #0x8
  416dc0:	str	w9, [x4, #24]
  416dc4:	b.gt	416dd4 <ferror@plt+0x14284>
  416dc8:	ldr	x9, [x4, #8]
  416dcc:	add	x8, x9, w8, sxtw
  416dd0:	b	416de0 <ferror@plt+0x14290>
  416dd4:	ldr	x8, [x4]
  416dd8:	add	x9, x8, #0x8
  416ddc:	str	x9, [x4]
  416de0:	ldr	x8, [x8]
  416de4:	str	x8, [sp, #72]
  416de8:	cmp	x8, #0x0
  416dec:	mov	w8, #0x9                   	// #9
  416df0:	cinc	x5, x8, ne  // ne = any
  416df4:	b	416dfc <ferror@plt+0x142ac>
  416df8:	mov	w5, #0x8                   	// #8
  416dfc:	mov	x4, sp
  416e00:	bl	4168b0 <ferror@plt+0x13d60>
  416e04:	ldp	x29, x30, [sp, #80]
  416e08:	add	sp, sp, #0x60
  416e0c:	ret
  416e10:	sub	sp, sp, #0xf0
  416e14:	stp	x29, x30, [sp, #224]
  416e18:	add	x29, sp, #0xe0
  416e1c:	mov	x8, #0xffffffffffffffe0    	// #-32
  416e20:	mov	x9, sp
  416e24:	sub	x10, x29, #0x60
  416e28:	movk	x8, #0xff80, lsl #32
  416e2c:	add	x11, x29, #0x10
  416e30:	add	x9, x9, #0x80
  416e34:	add	x10, x10, #0x20
  416e38:	stp	x9, x8, [x29, #-16]
  416e3c:	stp	x11, x10, [x29, #-32]
  416e40:	stp	x4, x5, [x29, #-96]
  416e44:	stp	x6, x7, [x29, #-80]
  416e48:	stp	q0, q1, [sp]
  416e4c:	ldp	q0, q1, [x29, #-32]
  416e50:	sub	x4, x29, #0x40
  416e54:	stp	q2, q3, [sp, #32]
  416e58:	stp	q4, q5, [sp, #64]
  416e5c:	stp	q6, q7, [sp, #96]
  416e60:	stp	q0, q1, [x29, #-64]
  416e64:	bl	416b24 <ferror@plt+0x13fd4>
  416e68:	ldp	x29, x30, [sp, #224]
  416e6c:	add	sp, sp, #0xf0
  416e70:	ret
  416e74:	stp	x29, x30, [sp, #-16]!
  416e78:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416e7c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  416e80:	add	x1, x1, #0x4ee
  416e84:	add	x2, x2, #0x100
  416e88:	mov	w0, #0x1                   	// #1
  416e8c:	mov	x29, sp
  416e90:	bl	402730 <__printf_chk@plt>
  416e94:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416e98:	adrp	x2, 419000 <_obstack_memory_used@@Base+0xd94>
  416e9c:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416ea0:	add	x1, x1, #0x503
  416ea4:	add	x2, x2, #0x1d0
  416ea8:	add	x3, x3, #0x517
  416eac:	mov	w0, #0x1                   	// #1
  416eb0:	bl	402730 <__printf_chk@plt>
  416eb4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  416eb8:	ldr	x1, [x8, #1056]
  416ebc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  416ec0:	add	x0, x0, #0x537
  416ec4:	ldp	x29, x30, [sp], #16
  416ec8:	b	402a50 <fputs_unlocked@plt>
  416ecc:	stp	x29, x30, [sp, #-80]!
  416ed0:	stp	x22, x21, [sp, #48]
  416ed4:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0xabc8>
  416ed8:	ldrb	w8, [x21, #3208]
  416edc:	stp	x20, x19, [sp, #64]
  416ee0:	mov	w19, w0
  416ee4:	stp	x26, x25, [sp, #16]
  416ee8:	stp	x24, x23, [sp, #32]
  416eec:	mov	x29, sp
  416ef0:	tbnz	w8, #0, 416f14 <ferror@plt+0x143c4>
  416ef4:	adrp	x20, 417000 <ferror@plt+0x144b0>
  416ef8:	add	x20, x20, #0x4
  416efc:	mov	x0, x20
  416f00:	bl	418b70 <_obstack_memory_used@@Base+0x904>
  416f04:	mov	x0, x20
  416f08:	bl	41271c <ferror@plt+0xfbcc>
  416f0c:	mov	w8, #0x1                   	// #1
  416f10:	strb	w8, [x21, #3208]
  416f14:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x14d94>
  416f18:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  416f1c:	ldr	x8, [x23, #992]
  416f20:	ldrsw	x9, [x22, #3212]
  416f24:	cmp	w9, #0x1
  416f28:	b.lt	416f44 <ferror@plt+0x143f4>  // b.tstop
  416f2c:	add	x9, x8, x9, lsl #3
  416f30:	ldr	w10, [x8]
  416f34:	cbz	w10, 416fd0 <ferror@plt+0x14480>
  416f38:	add	x8, x8, #0x8
  416f3c:	cmp	x8, x9
  416f40:	b.cc	416f30 <ferror@plt+0x143e0>  // b.lo, b.ul, b.last
  416f44:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x14d94>
  416f48:	ldrsw	x25, [x22, #3212]
  416f4c:	ldr	x8, [x24, #1000]
  416f50:	cmp	x8, x25
  416f54:	b.ne	416f9c <ferror@plt+0x1444c>  // b.any
  416f58:	ldr	x20, [x23, #992]
  416f5c:	lsl	x0, x25, #4
  416f60:	bl	4026a0 <malloc@plt>
  416f64:	cbz	x0, 416ff4 <ferror@plt+0x144a4>
  416f68:	lsl	x2, x25, #3
  416f6c:	mov	x1, x20
  416f70:	mov	x21, x0
  416f74:	lsl	x26, x25, #1
  416f78:	bl	4024c0 <memcpy@plt>
  416f7c:	adrp	x8, 438000 <__progname@@GLIBC_2.17+0xabc8>
  416f80:	add	x8, x8, #0xc90
  416f84:	cmp	x20, x8
  416f88:	str	x21, [x23, #992]
  416f8c:	str	x26, [x24, #1000]
  416f90:	b.eq	416f9c <ferror@plt+0x1444c>  // b.none
  416f94:	mov	x0, x20
  416f98:	bl	402930 <free@plt>
  416f9c:	ldr	x8, [x23, #992]
  416fa0:	ldrsw	x9, [x22, #3212]
  416fa4:	mov	w10, #0x1                   	// #1
  416fa8:	add	x8, x8, x9, lsl #3
  416fac:	str	w19, [x8, #4]
  416fb0:	ldr	x8, [x23, #992]
  416fb4:	ldrsw	x9, [x22, #3212]
  416fb8:	lsl	x9, x9, #3
  416fbc:	str	w10, [x8, x9]
  416fc0:	ldr	w8, [x22, #3212]
  416fc4:	add	w8, w8, #0x1
  416fc8:	str	w8, [x22, #3212]
  416fcc:	b	416fdc <ferror@plt+0x1448c>
  416fd0:	mov	w9, #0x1                   	// #1
  416fd4:	str	w19, [x8, #4]
  416fd8:	str	w9, [x8]
  416fdc:	ldp	x20, x19, [sp, #64]
  416fe0:	ldp	x22, x21, [sp, #48]
  416fe4:	ldp	x24, x23, [sp, #32]
  416fe8:	ldp	x26, x25, [sp, #16]
  416fec:	ldp	x29, x30, [sp], #80
  416ff0:	ret
  416ff4:	mov	w1, #0x1                   	// #1
  416ff8:	mov	w0, w19
  416ffc:	bl	402600 <kill@plt>
  417000:	bl	41761c <ferror@plt+0x14acc>
  417004:	stp	x29, x30, [sp, #-32]!
  417008:	stp	x20, x19, [sp, #16]
  41700c:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0xabc8>
  417010:	ldr	w8, [x19, #3212]
  417014:	mov	x29, sp
  417018:	cbz	w8, 417060 <ferror@plt+0x14510>
  41701c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417020:	b	41702c <ferror@plt+0x144dc>
  417024:	ldr	w8, [x19, #3212]
  417028:	cbz	w8, 417060 <ferror@plt+0x14510>
  41702c:	sxtw	x8, w8
  417030:	sub	x8, x8, #0x1
  417034:	str	w8, [x19, #3212]
  417038:	ldr	x9, [x20, #992]
  41703c:	lsl	x10, x8, #3
  417040:	ldr	w9, [x9, x10]
  417044:	cbz	w9, 417024 <ferror@plt+0x144d4>
  417048:	ldr	x9, [x20, #992]
  41704c:	mov	w1, #0x1                   	// #1
  417050:	add	x8, x9, x8, lsl #3
  417054:	ldr	w0, [x8, #4]
  417058:	bl	402600 <kill@plt>
  41705c:	b	417024 <ferror@plt+0x144d4>
  417060:	ldp	x20, x19, [sp, #16]
  417064:	ldp	x29, x30, [sp], #32
  417068:	ret
  41706c:	stp	x29, x30, [sp, #-80]!
  417070:	str	x25, [sp, #16]
  417074:	stp	x24, x23, [sp, #32]
  417078:	stp	x22, x21, [sp, #48]
  41707c:	stp	x20, x19, [sp, #64]
  417080:	mov	x22, x6
  417084:	mov	w20, w5
  417088:	mov	w25, w4
  41708c:	mov	w21, w3
  417090:	mov	w23, w2
  417094:	mov	x19, x1
  417098:	mov	w24, w0
  41709c:	mov	x29, sp
  4170a0:	cbz	x6, 4170a8 <ferror@plt+0x14558>
  4170a4:	str	wzr, [x22]
  4170a8:	str	wzr, [x29, #28]
  4170ac:	b	4170c0 <ferror@plt+0x14570>
  4170b0:	bl	402ac0 <__errno_location@plt>
  4170b4:	ldr	w1, [x0]
  4170b8:	cmp	w1, #0x4
  4170bc:	b.ne	417134 <ferror@plt+0x145e4>  // b.any
  4170c0:	add	x1, x29, #0x1c
  4170c4:	mov	w0, w24
  4170c8:	mov	w2, wzr
  4170cc:	bl	402b00 <waitpid@plt>
  4170d0:	cmp	w0, w24
  4170d4:	b.ne	4170b0 <ferror@plt+0x14560>  // b.any
  4170d8:	ldr	w8, [x29, #28]
  4170dc:	and	w9, w8, #0xff
  4170e0:	cmp	w9, #0x7f
  4170e4:	b.eq	4170c0 <ferror@plt+0x14570>  // b.none
  4170e8:	tbz	w25, #0, 417158 <ferror@plt+0x14608>
  4170ec:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4170f0:	adrp	x10, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4170f4:	ldr	x9, [x9, #992]
  4170f8:	ldrsw	x10, [x10, #3212]
  4170fc:	cmp	w10, #0x1
  417100:	b.lt	417158 <ferror@plt+0x14608>  // b.tstop
  417104:	add	x8, x9, x10, lsl #3
  417108:	b	417118 <ferror@plt+0x145c8>
  41710c:	add	x9, x9, #0x8
  417110:	cmp	x9, x8
  417114:	b.cs	417154 <ferror@plt+0x14604>  // b.hs, b.nlast
  417118:	ldr	w10, [x9]
  41711c:	cbz	w10, 41710c <ferror@plt+0x145bc>
  417120:	ldr	w10, [x9, #4]
  417124:	cmp	w10, w24
  417128:	b.ne	41710c <ferror@plt+0x145bc>  // b.any
  41712c:	str	wzr, [x9]
  417130:	b	41710c <ferror@plt+0x145bc>
  417134:	tbz	w21, #0, 41713c <ferror@plt+0x145ec>
  417138:	tbz	w20, #0, 4171e0 <ferror@plt+0x14690>
  41713c:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  417140:	and	w0, w20, #0x1
  417144:	add	x2, x2, #0x5a6
  417148:	mov	x3, x19
  41714c:	bl	402540 <error@plt>
  417150:	b	4171e0 <ferror@plt+0x14690>
  417154:	ldr	w8, [x29, #28]
  417158:	and	w4, w8, #0x7f
  41715c:	mov	w9, #0x1000000             	// #16777216
  417160:	add	w9, w9, w4, lsl #24
  417164:	mov	w10, #0x2000000             	// #33554432
  417168:	cmp	w9, w10
  41716c:	b.lt	41718c <ferror@plt+0x1463c>  // b.tstop
  417170:	cbz	x22, 417178 <ferror@plt+0x14628>
  417174:	str	w4, [x22]
  417178:	cmp	w4, #0xd
  41717c:	b.ne	4171b8 <ferror@plt+0x14668>  // b.any
  417180:	tbz	w23, #0, 4171b8 <ferror@plt+0x14668>
  417184:	mov	w0, wzr
  417188:	b	4171e4 <ferror@plt+0x14694>
  41718c:	cbnz	w4, 4171fc <ferror@plt+0x146ac>
  417190:	ubfx	w0, w8, #8, #8
  417194:	cmp	w0, #0x7f
  417198:	b.ne	4171e4 <ferror@plt+0x14694>  // b.any
  41719c:	tbz	w21, #0, 4171a4 <ferror@plt+0x14654>
  4171a0:	tbz	w20, #0, 4171e0 <ferror@plt+0x14690>
  4171a4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x2d94>
  4171a8:	and	w0, w20, #0x1
  4171ac:	add	x2, x2, #0x849
  4171b0:	mov	w1, wzr
  4171b4:	b	417148 <ferror@plt+0x145f8>
  4171b8:	tbnz	w20, #0, 4171c8 <ferror@plt+0x14678>
  4171bc:	mov	w0, #0x7f                  	// #127
  4171c0:	cbnz	x22, 4171e4 <ferror@plt+0x14694>
  4171c4:	tbnz	w21, #0, 4171e4 <ferror@plt+0x14694>
  4171c8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4171cc:	and	w0, w20, #0x1
  4171d0:	add	x2, x2, #0x5b4
  4171d4:	mov	w1, wzr
  4171d8:	mov	x3, x19
  4171dc:	bl	402540 <error@plt>
  4171e0:	mov	w0, #0x7f                  	// #127
  4171e4:	ldp	x20, x19, [sp, #64]
  4171e8:	ldp	x22, x21, [sp, #48]
  4171ec:	ldp	x24, x23, [sp, #32]
  4171f0:	ldr	x25, [sp, #16]
  4171f4:	ldp	x29, x30, [sp], #80
  4171f8:	ret
  4171fc:	bl	402860 <abort@plt>
  417200:	sub	sp, sp, #0x30
  417204:	stp	x20, x19, [sp, #32]
  417208:	mov	x19, x1
  41720c:	add	x4, sp, #0x8
  417210:	mov	x1, xzr
  417214:	mov	x2, x19
  417218:	mov	x3, xzr
  41721c:	stp	x29, x30, [sp, #16]
  417220:	add	x29, sp, #0x10
  417224:	mov	x20, x0
  417228:	str	xzr, [sp, #8]
  41722c:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  417230:	ldr	x8, [sp, #8]
  417234:	sbfx	x9, x1, #0, #1
  417238:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41723c:	eor	x9, x9, x1
  417240:	cmn	x0, x10
  417244:	orr	x9, x9, x8
  417248:	adcs	x8, x1, xzr
  41724c:	cbnz	x9, 41727c <ferror@plt+0x1472c>
  417250:	sbfx	x8, x8, #0, #1
  417254:	tbnz	x8, #63, 41727c <ferror@plt+0x1472c>
  417258:	mul	x19, x19, x20
  41725c:	mov	x0, x19
  417260:	bl	4026a0 <malloc@plt>
  417264:	cbz	x19, 41726c <ferror@plt+0x1471c>
  417268:	cbz	x0, 41727c <ferror@plt+0x1472c>
  41726c:	ldp	x20, x19, [sp, #32]
  417270:	ldp	x29, x30, [sp, #16]
  417274:	add	sp, sp, #0x30
  417278:	ret
  41727c:	bl	41761c <ferror@plt+0x14acc>
  417280:	stp	x29, x30, [sp, #-32]!
  417284:	str	x19, [sp, #16]
  417288:	mov	x29, sp
  41728c:	mov	x19, x0
  417290:	bl	4026a0 <malloc@plt>
  417294:	cbz	x19, 41729c <ferror@plt+0x1474c>
  417298:	cbz	x0, 4172a8 <ferror@plt+0x14758>
  41729c:	ldr	x19, [sp, #16]
  4172a0:	ldp	x29, x30, [sp], #32
  4172a4:	ret
  4172a8:	bl	41761c <ferror@plt+0x14acc>
  4172ac:	stp	x29, x30, [sp, #-48]!
  4172b0:	mov	x29, sp
  4172b4:	str	x21, [sp, #16]
  4172b8:	stp	x20, x19, [sp, #32]
  4172bc:	mov	x21, x1
  4172c0:	mov	x19, x0
  4172c4:	add	x4, x29, #0x18
  4172c8:	mov	x0, x1
  4172cc:	mov	x1, xzr
  4172d0:	mov	x3, xzr
  4172d4:	mov	x20, x2
  4172d8:	str	xzr, [x29, #24]
  4172dc:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  4172e0:	ldr	x8, [x29, #24]
  4172e4:	sbfx	x9, x1, #0, #1
  4172e8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4172ec:	eor	x9, x9, x1
  4172f0:	cmn	x0, x10
  4172f4:	orr	x9, x9, x8
  4172f8:	adcs	x8, x1, xzr
  4172fc:	cbnz	x9, 417348 <ferror@plt+0x147f8>
  417300:	sbfx	x8, x8, #0, #1
  417304:	tbnz	x8, #63, 417348 <ferror@plt+0x147f8>
  417308:	mul	x20, x20, x21
  41730c:	cbz	x19, 417324 <ferror@plt+0x147d4>
  417310:	cbnz	x20, 417324 <ferror@plt+0x147d4>
  417314:	mov	x0, x19
  417318:	bl	402930 <free@plt>
  41731c:	mov	x0, xzr
  417320:	b	417338 <ferror@plt+0x147e8>
  417324:	mov	x0, x19
  417328:	mov	x1, x20
  41732c:	bl	4027b0 <realloc@plt>
  417330:	cbz	x20, 417338 <ferror@plt+0x147e8>
  417334:	cbz	x0, 417348 <ferror@plt+0x147f8>
  417338:	ldp	x20, x19, [sp, #32]
  41733c:	ldr	x21, [sp, #16]
  417340:	ldp	x29, x30, [sp], #48
  417344:	ret
  417348:	bl	41761c <ferror@plt+0x14acc>
  41734c:	stp	x29, x30, [sp, #-32]!
  417350:	str	x19, [sp, #16]
  417354:	mov	x19, x1
  417358:	mov	x29, sp
  41735c:	cbz	x0, 417370 <ferror@plt+0x14820>
  417360:	cbnz	x19, 417370 <ferror@plt+0x14820>
  417364:	bl	402930 <free@plt>
  417368:	mov	x0, xzr
  41736c:	b	417380 <ferror@plt+0x14830>
  417370:	mov	x1, x19
  417374:	bl	4027b0 <realloc@plt>
  417378:	cbz	x19, 417380 <ferror@plt+0x14830>
  41737c:	cbz	x0, 41738c <ferror@plt+0x1483c>
  417380:	ldr	x19, [sp, #16]
  417384:	ldp	x29, x30, [sp], #32
  417388:	ret
  41738c:	bl	41761c <ferror@plt+0x14acc>
  417390:	stp	x29, x30, [sp, #-32]!
  417394:	ldr	x8, [x1]
  417398:	str	x19, [sp, #16]
  41739c:	mov	x29, sp
  4173a0:	cbz	x0, 4173d8 <ferror@plt+0x14888>
  4173a4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4173a8:	movk	x9, #0x5554
  4173ac:	udiv	x9, x9, x2
  4173b0:	cmp	x9, x8
  4173b4:	b.ls	417410 <ferror@plt+0x148c0>  // b.plast
  4173b8:	add	x8, x8, x8, lsr #1
  4173bc:	add	x8, x8, #0x1
  4173c0:	mul	x19, x8, x2
  4173c4:	str	x8, [x1]
  4173c8:	cbnz	x19, 4173f4 <ferror@plt+0x148a4>
  4173cc:	bl	402930 <free@plt>
  4173d0:	mov	x0, xzr
  4173d4:	b	417404 <ferror@plt+0x148b4>
  4173d8:	cbnz	x8, 4173ec <ferror@plt+0x1489c>
  4173dc:	mov	w8, #0x80                  	// #128
  4173e0:	udiv	x8, x8, x2
  4173e4:	cmp	x2, #0x80
  4173e8:	cinc	x8, x8, hi  // hi = pmore
  4173ec:	mul	x19, x8, x2
  4173f0:	str	x8, [x1]
  4173f4:	mov	x1, x19
  4173f8:	bl	4027b0 <realloc@plt>
  4173fc:	cbz	x19, 417404 <ferror@plt+0x148b4>
  417400:	cbz	x0, 417410 <ferror@plt+0x148c0>
  417404:	ldr	x19, [sp, #16]
  417408:	ldp	x29, x30, [sp], #32
  41740c:	ret
  417410:	bl	41761c <ferror@plt+0x14acc>
  417414:	stp	x29, x30, [sp, #-32]!
  417418:	str	x19, [sp, #16]
  41741c:	mov	x29, sp
  417420:	mov	x19, x0
  417424:	bl	4026a0 <malloc@plt>
  417428:	cbz	x19, 417430 <ferror@plt+0x148e0>
  41742c:	cbz	x0, 41743c <ferror@plt+0x148ec>
  417430:	ldr	x19, [sp, #16]
  417434:	ldp	x29, x30, [sp], #32
  417438:	ret
  41743c:	bl	41761c <ferror@plt+0x14acc>
  417440:	stp	x29, x30, [sp, #-32]!
  417444:	ldr	x8, [x1]
  417448:	str	x19, [sp, #16]
  41744c:	mov	x29, sp
  417450:	cbz	x0, 417480 <ferror@plt+0x14930>
  417454:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  417458:	movk	x9, #0x5554
  41745c:	cmp	x8, x9
  417460:	b.cs	4174ac <ferror@plt+0x1495c>  // b.hs, b.nlast
  417464:	add	x8, x8, x8, lsr #1
  417468:	adds	x19, x8, #0x1
  41746c:	str	x19, [x1]
  417470:	b.ne	417490 <ferror@plt+0x14940>  // b.any
  417474:	bl	402930 <free@plt>
  417478:	mov	x0, xzr
  41747c:	b	4174a0 <ferror@plt+0x14950>
  417480:	cmp	x8, #0x0
  417484:	mov	w9, #0x80                  	// #128
  417488:	csel	x19, x9, x8, eq  // eq = none
  41748c:	str	x19, [x1]
  417490:	mov	x1, x19
  417494:	bl	4027b0 <realloc@plt>
  417498:	cbz	x19, 4174a0 <ferror@plt+0x14950>
  41749c:	cbz	x0, 4174ac <ferror@plt+0x1495c>
  4174a0:	ldr	x19, [sp, #16]
  4174a4:	ldp	x29, x30, [sp], #32
  4174a8:	ret
  4174ac:	bl	41761c <ferror@plt+0x14acc>
  4174b0:	stp	x29, x30, [sp, #-32]!
  4174b4:	stp	x20, x19, [sp, #16]
  4174b8:	mov	x29, sp
  4174bc:	mov	x19, x0
  4174c0:	bl	4026a0 <malloc@plt>
  4174c4:	mov	x20, x0
  4174c8:	cbz	x19, 4174d0 <ferror@plt+0x14980>
  4174cc:	cbz	x20, 4174f0 <ferror@plt+0x149a0>
  4174d0:	mov	x0, x20
  4174d4:	mov	w1, wzr
  4174d8:	mov	x2, x19
  4174dc:	bl	402740 <memset@plt>
  4174e0:	mov	x0, x20
  4174e4:	ldp	x20, x19, [sp, #16]
  4174e8:	ldp	x29, x30, [sp], #32
  4174ec:	ret
  4174f0:	bl	41761c <ferror@plt+0x14acc>
  4174f4:	sub	sp, sp, #0x30
  4174f8:	stp	x20, x19, [sp, #32]
  4174fc:	mov	x19, x1
  417500:	add	x4, sp, #0x8
  417504:	mov	x1, xzr
  417508:	mov	x2, x19
  41750c:	mov	x3, xzr
  417510:	stp	x29, x30, [sp, #16]
  417514:	add	x29, sp, #0x10
  417518:	mov	x20, x0
  41751c:	str	xzr, [sp, #8]
  417520:	bl	4186dc <_obstack_memory_used@@Base+0x470>
  417524:	ldr	x8, [sp, #8]
  417528:	sbfx	x9, x1, #0, #1
  41752c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  417530:	eor	x9, x9, x1
  417534:	cmn	x0, x10
  417538:	orr	x9, x9, x8
  41753c:	adcs	x8, x1, xzr
  417540:	cbnz	x9, 41756c <ferror@plt+0x14a1c>
  417544:	sbfx	x8, x8, #0, #1
  417548:	tbnz	x8, #63, 41756c <ferror@plt+0x14a1c>
  41754c:	mov	x0, x20
  417550:	mov	x1, x19
  417554:	bl	402780 <calloc@plt>
  417558:	cbz	x0, 41756c <ferror@plt+0x14a1c>
  41755c:	ldp	x20, x19, [sp, #32]
  417560:	ldp	x29, x30, [sp, #16]
  417564:	add	sp, sp, #0x30
  417568:	ret
  41756c:	bl	41761c <ferror@plt+0x14acc>
  417570:	stp	x29, x30, [sp, #-48]!
  417574:	stp	x20, x19, [sp, #32]
  417578:	mov	x20, x0
  41757c:	mov	x0, x1
  417580:	str	x21, [sp, #16]
  417584:	mov	x29, sp
  417588:	mov	x19, x1
  41758c:	bl	4026a0 <malloc@plt>
  417590:	mov	x21, x0
  417594:	cbz	x19, 41759c <ferror@plt+0x14a4c>
  417598:	cbz	x21, 4175c0 <ferror@plt+0x14a70>
  41759c:	mov	x0, x21
  4175a0:	mov	x1, x20
  4175a4:	mov	x2, x19
  4175a8:	bl	4024c0 <memcpy@plt>
  4175ac:	mov	x0, x21
  4175b0:	ldp	x20, x19, [sp, #32]
  4175b4:	ldr	x21, [sp, #16]
  4175b8:	ldp	x29, x30, [sp], #48
  4175bc:	ret
  4175c0:	bl	41761c <ferror@plt+0x14acc>
  4175c4:	stp	x29, x30, [sp, #-48]!
  4175c8:	str	x21, [sp, #16]
  4175cc:	stp	x20, x19, [sp, #32]
  4175d0:	mov	x29, sp
  4175d4:	mov	x19, x0
  4175d8:	bl	4024f0 <strlen@plt>
  4175dc:	add	x20, x0, #0x1
  4175e0:	mov	x0, x20
  4175e4:	bl	4026a0 <malloc@plt>
  4175e8:	mov	x21, x0
  4175ec:	cbz	x20, 4175f4 <ferror@plt+0x14aa4>
  4175f0:	cbz	x21, 417618 <ferror@plt+0x14ac8>
  4175f4:	mov	x0, x21
  4175f8:	mov	x1, x19
  4175fc:	mov	x2, x20
  417600:	bl	4024c0 <memcpy@plt>
  417604:	mov	x0, x21
  417608:	ldp	x20, x19, [sp, #32]
  41760c:	ldr	x21, [sp, #16]
  417610:	ldp	x29, x30, [sp], #48
  417614:	ret
  417618:	bl	41761c <ferror@plt+0x14acc>
  41761c:	stp	x29, x30, [sp, #-16]!
  417620:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417624:	ldr	w0, [x8, #884]
  417628:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x1d94>
  41762c:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x3d94>
  417630:	add	x2, x2, #0x8de
  417634:	add	x3, x3, #0x5d6
  417638:	mov	w1, wzr
  41763c:	mov	x29, sp
  417640:	bl	402540 <error@plt>
  417644:	bl	402860 <abort@plt>
  417648:	stp	x29, x30, [sp, #-16]!
  41764c:	mov	x29, sp
  417650:	bl	4144f4 <ferror@plt+0x119a4>
  417654:	cbz	x0, 417660 <ferror@plt+0x14b10>
  417658:	ldp	x29, x30, [sp], #16
  41765c:	ret
  417660:	bl	41761c <ferror@plt+0x14acc>
  417664:	sub	sp, sp, #0x130
  417668:	stp	x29, x30, [sp, #256]
  41766c:	add	x29, sp, #0x100
  417670:	mov	x9, #0xffffffffffffffc8    	// #-56
  417674:	mov	x10, sp
  417678:	sub	x11, x29, #0x78
  41767c:	movk	x9, #0xff80, lsl #32
  417680:	add	x12, x29, #0x30
  417684:	add	x10, x10, #0x80
  417688:	add	x11, x11, #0x38
  41768c:	stp	x20, x19, [sp, #288]
  417690:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417694:	stp	x10, x9, [x29, #-48]
  417698:	stp	x12, x11, [x29, #-64]
  41769c:	mov	x8, x0
  4176a0:	stp	x1, x2, [x29, #-120]
  4176a4:	stp	x3, x4, [x29, #-104]
  4176a8:	stp	x5, x6, [x29, #-88]
  4176ac:	stur	x7, [x29, #-72]
  4176b0:	stp	q0, q1, [sp]
  4176b4:	ldr	x0, [x20, #1056]
  4176b8:	ldp	q0, q1, [x29, #-64]
  4176bc:	sub	x3, x29, #0x20
  4176c0:	mov	w1, #0x1                   	// #1
  4176c4:	mov	x2, x8
  4176c8:	str	x28, [sp, #272]
  4176cc:	stp	q2, q3, [sp, #32]
  4176d0:	stp	q4, q5, [sp, #64]
  4176d4:	stp	q6, q7, [sp, #96]
  4176d8:	stp	q0, q1, [x29, #-32]
  4176dc:	bl	402770 <__vfprintf_chk@plt>
  4176e0:	mov	w19, w0
  4176e4:	tbz	w0, #31, 417714 <ferror@plt+0x14bc4>
  4176e8:	ldr	x0, [x20, #1056]
  4176ec:	bl	402b50 <ferror@plt>
  4176f0:	cbnz	w0, 417714 <ferror@plt+0x14bc4>
  4176f4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4176f8:	ldr	w20, [x8, #884]
  4176fc:	bl	402ac0 <__errno_location@plt>
  417700:	ldr	w1, [x0]
  417704:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  417708:	add	x2, x2, #0x5e7
  41770c:	mov	w0, w20
  417710:	bl	402540 <error@plt>
  417714:	mov	w0, w19
  417718:	ldp	x20, x19, [sp, #288]
  41771c:	ldr	x28, [sp, #272]
  417720:	ldp	x29, x30, [sp, #256]
  417724:	add	sp, sp, #0x130
  417728:	ret
  41772c:	sub	sp, sp, #0x60
  417730:	stp	x29, x30, [sp, #64]
  417734:	stp	x20, x19, [sp, #80]
  417738:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41773c:	mov	x2, x0
  417740:	ldp	q1, q0, [x1]
  417744:	ldr	x0, [x20, #1056]
  417748:	add	x3, sp, #0x20
  41774c:	mov	w1, #0x1                   	// #1
  417750:	add	x29, sp, #0x40
  417754:	stp	q1, q0, [sp]
  417758:	stp	q1, q0, [sp, #32]
  41775c:	bl	402770 <__vfprintf_chk@plt>
  417760:	mov	w19, w0
  417764:	tbz	w0, #31, 417794 <ferror@plt+0x14c44>
  417768:	ldr	x0, [x20, #1056]
  41776c:	bl	402b50 <ferror@plt>
  417770:	cbnz	w0, 417794 <ferror@plt+0x14c44>
  417774:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417778:	ldr	w20, [x8, #884]
  41777c:	bl	402ac0 <__errno_location@plt>
  417780:	ldr	w1, [x0]
  417784:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  417788:	add	x2, x2, #0x5e7
  41778c:	mov	w0, w20
  417790:	bl	402540 <error@plt>
  417794:	mov	w0, w19
  417798:	ldp	x20, x19, [sp, #80]
  41779c:	ldp	x29, x30, [sp, #64]
  4177a0:	add	sp, sp, #0x60
  4177a4:	ret
  4177a8:	sub	sp, sp, #0x120
  4177ac:	stp	x29, x30, [sp, #240]
  4177b0:	add	x29, sp, #0xf0
  4177b4:	mov	x9, #0xffffffffffffffd0    	// #-48
  4177b8:	mov	x10, sp
  4177bc:	sub	x11, x29, #0x70
  4177c0:	movk	x9, #0xff80, lsl #32
  4177c4:	add	x12, x29, #0x30
  4177c8:	add	x10, x10, #0x80
  4177cc:	add	x11, x11, #0x30
  4177d0:	stp	x10, x9, [x29, #-48]
  4177d4:	stp	x12, x11, [x29, #-64]
  4177d8:	stp	x2, x3, [x29, #-112]
  4177dc:	stp	x4, x5, [x29, #-96]
  4177e0:	stp	x6, x7, [x29, #-80]
  4177e4:	stp	q1, q2, [sp, #16]
  4177e8:	str	q0, [sp]
  4177ec:	ldp	q0, q1, [x29, #-64]
  4177f0:	mov	x8, x1
  4177f4:	sub	x3, x29, #0x20
  4177f8:	mov	w1, #0x1                   	// #1
  4177fc:	mov	x2, x8
  417800:	str	x28, [sp, #256]
  417804:	stp	x20, x19, [sp, #272]
  417808:	mov	x19, x0
  41780c:	stp	q3, q4, [sp, #48]
  417810:	stp	q5, q6, [sp, #80]
  417814:	str	q7, [sp, #112]
  417818:	stp	q0, q1, [x29, #-32]
  41781c:	bl	402770 <__vfprintf_chk@plt>
  417820:	mov	w20, w0
  417824:	tbz	w0, #31, 417854 <ferror@plt+0x14d04>
  417828:	mov	x0, x19
  41782c:	bl	402b50 <ferror@plt>
  417830:	cbnz	w0, 417854 <ferror@plt+0x14d04>
  417834:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417838:	ldr	w19, [x8, #884]
  41783c:	bl	402ac0 <__errno_location@plt>
  417840:	ldr	w1, [x0]
  417844:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  417848:	add	x2, x2, #0x5e7
  41784c:	mov	w0, w19
  417850:	bl	402540 <error@plt>
  417854:	mov	w0, w20
  417858:	ldp	x20, x19, [sp, #272]
  41785c:	ldr	x28, [sp, #256]
  417860:	ldp	x29, x30, [sp, #240]
  417864:	add	sp, sp, #0x120
  417868:	ret
  41786c:	sub	sp, sp, #0x40
  417870:	stp	x29, x30, [sp, #32]
  417874:	stp	x20, x19, [sp, #48]
  417878:	ldp	q1, q0, [x2]
  41787c:	mov	x8, x1
  417880:	mov	x3, sp
  417884:	mov	w1, #0x1                   	// #1
  417888:	mov	x2, x8
  41788c:	add	x29, sp, #0x20
  417890:	mov	x20, x0
  417894:	stp	q1, q0, [sp]
  417898:	bl	402770 <__vfprintf_chk@plt>
  41789c:	mov	w19, w0
  4178a0:	tbz	w0, #31, 4178d0 <ferror@plt+0x14d80>
  4178a4:	mov	x0, x20
  4178a8:	bl	402b50 <ferror@plt>
  4178ac:	cbnz	w0, 4178d0 <ferror@plt+0x14d80>
  4178b0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4178b4:	ldr	w20, [x8, #884]
  4178b8:	bl	402ac0 <__errno_location@plt>
  4178bc:	ldr	w1, [x0]
  4178c0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4178c4:	add	x2, x2, #0x5e7
  4178c8:	mov	w0, w20
  4178cc:	bl	402540 <error@plt>
  4178d0:	mov	w0, w19
  4178d4:	ldp	x20, x19, [sp, #48]
  4178d8:	ldp	x29, x30, [sp, #32]
  4178dc:	add	sp, sp, #0x40
  4178e0:	ret
  4178e4:	sub	sp, sp, #0x80
  4178e8:	str	x23, [sp, #80]
  4178ec:	mov	x2, x0
  4178f0:	mov	x23, xzr
  4178f4:	mov	x8, x0
  4178f8:	stp	x29, x30, [sp, #64]
  4178fc:	stp	x22, x21, [sp, #96]
  417900:	stp	x20, x19, [sp, #112]
  417904:	add	x29, sp, #0x40
  417908:	ldrb	w9, [x8]
  41790c:	cmp	w9, #0x25
  417910:	b.ne	41792c <ferror@plt+0x14ddc>  // b.any
  417914:	ldrb	w9, [x8, #1]
  417918:	cmp	w9, #0x73
  41791c:	b.ne	4179a0 <ferror@plt+0x14e50>  // b.any
  417920:	sub	x23, x23, #0x1
  417924:	add	x8, x8, #0x2
  417928:	b	417908 <ferror@plt+0x14db8>
  41792c:	cbnz	w9, 4179a0 <ferror@plt+0x14e50>
  417930:	ldp	q1, q0, [x1]
  417934:	stp	q1, q0, [sp]
  417938:	stp	q1, q0, [sp, #32]
  41793c:	cbz	x23, 4179f8 <ferror@plt+0x14ea8>
  417940:	ldr	x20, [sp, #40]
  417944:	ldr	w8, [sp, #56]
  417948:	mov	x19, xzr
  41794c:	mov	x21, x23
  417950:	b	417974 <ferror@plt+0x14e24>
  417954:	add	x8, x20, w8, sxtw
  417958:	ldr	x0, [x8]
  41795c:	bl	4024f0 <strlen@plt>
  417960:	adds	x8, x19, x0
  417964:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
  417968:	adds	x21, x21, #0x1
  41796c:	mov	w8, w22
  417970:	b.cs	4179dc <ferror@plt+0x14e8c>  // b.hs, b.nlast
  417974:	tbnz	w8, #31, 417980 <ferror@plt+0x14e30>
  417978:	mov	w22, w8
  41797c:	b	417990 <ferror@plt+0x14e40>
  417980:	add	w22, w8, #0x8
  417984:	cmn	w8, #0x8
  417988:	str	w22, [sp, #56]
  41798c:	b.le	417954 <ferror@plt+0x14e04>
  417990:	ldr	x8, [sp, #32]
  417994:	add	x9, x8, #0x8
  417998:	str	x9, [sp, #32]
  41799c:	b	417958 <ferror@plt+0x14e08>
  4179a0:	ldp	q1, q0, [x1]
  4179a4:	mov	x0, sp
  4179a8:	add	x3, sp, #0x20
  4179ac:	mov	w1, #0x1                   	// #1
  4179b0:	stp	q1, q0, [sp, #32]
  4179b4:	bl	4026c0 <__vasprintf_chk@plt>
  4179b8:	tbnz	w0, #31, 4179c4 <ferror@plt+0x14e74>
  4179bc:	ldr	x19, [sp]
  4179c0:	b	417a84 <ferror@plt+0x14f34>
  4179c4:	bl	402ac0 <__errno_location@plt>
  4179c8:	ldr	w8, [x0]
  4179cc:	cmp	w8, #0xc
  4179d0:	b.eq	417aa0 <ferror@plt+0x14f50>  // b.none
  4179d4:	mov	x19, xzr
  4179d8:	b	417a84 <ferror@plt+0x14f34>
  4179dc:	lsr	x8, x19, #31
  4179e0:	cbz	x8, 417a10 <ferror@plt+0x14ec0>
  4179e4:	bl	402ac0 <__errno_location@plt>
  4179e8:	mov	w8, #0x4b                  	// #75
  4179ec:	mov	x19, xzr
  4179f0:	str	w8, [x0]
  4179f4:	b	417a84 <ferror@plt+0x14f34>
  4179f8:	mov	w0, #0x1                   	// #1
  4179fc:	bl	417280 <ferror@plt+0x14730>
  417a00:	mov	x19, x0
  417a04:	mov	x20, x0
  417a08:	strb	wzr, [x0]
  417a0c:	b	417a84 <ferror@plt+0x14f34>
  417a10:	add	x0, x19, #0x1
  417a14:	bl	417280 <ferror@plt+0x14730>
  417a18:	mov	x19, x0
  417a1c:	mov	x20, x0
  417a20:	b	417a5c <ferror@plt+0x14f0c>
  417a24:	ldr	x8, [sp]
  417a28:	add	x9, x8, #0x8
  417a2c:	str	x9, [sp]
  417a30:	ldr	x21, [x8]
  417a34:	mov	x0, x21
  417a38:	bl	4024f0 <strlen@plt>
  417a3c:	mov	x22, x0
  417a40:	mov	x0, x20
  417a44:	mov	x1, x21
  417a48:	mov	x2, x22
  417a4c:	bl	4024c0 <memcpy@plt>
  417a50:	adds	x23, x23, #0x1
  417a54:	add	x20, x20, x22
  417a58:	b.cs	417a80 <ferror@plt+0x14f30>  // b.hs, b.nlast
  417a5c:	ldrsw	x8, [sp, #24]
  417a60:	tbz	w8, #31, 417a24 <ferror@plt+0x14ed4>
  417a64:	add	w9, w8, #0x8
  417a68:	cmn	w8, #0x8
  417a6c:	str	w9, [sp, #24]
  417a70:	b.gt	417a24 <ferror@plt+0x14ed4>
  417a74:	ldr	x9, [sp, #8]
  417a78:	add	x8, x9, x8
  417a7c:	b	417a30 <ferror@plt+0x14ee0>
  417a80:	strb	wzr, [x20]
  417a84:	mov	x0, x19
  417a88:	ldp	x20, x19, [sp, #112]
  417a8c:	ldp	x22, x21, [sp, #96]
  417a90:	ldr	x23, [sp, #80]
  417a94:	ldp	x29, x30, [sp, #64]
  417a98:	add	sp, sp, #0x80
  417a9c:	ret
  417aa0:	bl	41761c <ferror@plt+0x14acc>
  417aa4:	sub	sp, sp, #0x120
  417aa8:	stp	x29, x30, [sp, #256]
  417aac:	add	x29, sp, #0x100
  417ab0:	mov	x8, #0xffffffffffffffc8    	// #-56
  417ab4:	mov	x9, sp
  417ab8:	sub	x10, x29, #0x78
  417abc:	movk	x8, #0xff80, lsl #32
  417ac0:	add	x11, x29, #0x20
  417ac4:	add	x9, x9, #0x80
  417ac8:	add	x10, x10, #0x38
  417acc:	stp	x9, x8, [x29, #-16]
  417ad0:	stp	x11, x10, [x29, #-32]
  417ad4:	stp	x1, x2, [x29, #-120]
  417ad8:	stp	x3, x4, [x29, #-104]
  417adc:	stp	x5, x6, [x29, #-88]
  417ae0:	stur	x7, [x29, #-72]
  417ae4:	stp	q0, q1, [sp]
  417ae8:	ldp	q0, q1, [x29, #-32]
  417aec:	sub	x1, x29, #0x40
  417af0:	str	x28, [sp, #272]
  417af4:	stp	q2, q3, [sp, #32]
  417af8:	stp	q4, q5, [sp, #64]
  417afc:	stp	q6, q7, [sp, #96]
  417b00:	stp	q0, q1, [x29, #-64]
  417b04:	bl	4178e4 <ferror@plt+0x14d94>
  417b08:	ldr	x28, [sp, #272]
  417b0c:	ldp	x29, x30, [sp, #256]
  417b10:	add	sp, sp, #0x120
  417b14:	ret
  417b18:	stp	x29, x30, [sp, #-48]!
  417b1c:	str	x21, [sp, #16]
  417b20:	stp	x20, x19, [sp, #32]
  417b24:	mov	x29, sp
  417b28:	mov	x19, x0
  417b2c:	bl	402630 <fileno@plt>
  417b30:	tbnz	w0, #31, 417b98 <ferror@plt+0x15048>
  417b34:	mov	x0, x19
  417b38:	bl	402a60 <__freading@plt>
  417b3c:	cbz	w0, 417b5c <ferror@plt+0x1500c>
  417b40:	mov	x0, x19
  417b44:	bl	402630 <fileno@plt>
  417b48:	mov	w2, #0x1                   	// #1
  417b4c:	mov	x1, xzr
  417b50:	bl	402610 <lseek@plt>
  417b54:	cmn	x0, #0x1
  417b58:	b.eq	417b98 <ferror@plt+0x15048>  // b.none
  417b5c:	mov	x0, x19
  417b60:	bl	417d70 <ferror@plt+0x15220>
  417b64:	cbz	w0, 417b98 <ferror@plt+0x15048>
  417b68:	bl	402ac0 <__errno_location@plt>
  417b6c:	ldr	w21, [x0]
  417b70:	mov	x20, x0
  417b74:	mov	x0, x19
  417b78:	bl	402660 <fclose@plt>
  417b7c:	cbz	w21, 417b88 <ferror@plt+0x15038>
  417b80:	mov	w0, #0xffffffff            	// #-1
  417b84:	str	w21, [x20]
  417b88:	ldp	x20, x19, [sp, #32]
  417b8c:	ldr	x21, [sp, #16]
  417b90:	ldp	x29, x30, [sp], #48
  417b94:	ret
  417b98:	mov	x0, x19
  417b9c:	ldp	x20, x19, [sp, #32]
  417ba0:	ldr	x21, [sp, #16]
  417ba4:	ldp	x29, x30, [sp], #48
  417ba8:	b	402660 <fclose@plt>
  417bac:	sub	sp, sp, #0x100
  417bb0:	stp	x29, x30, [sp, #208]
  417bb4:	add	x29, sp, #0xd0
  417bb8:	mov	x8, #0xffffffffffffffd0    	// #-48
  417bbc:	mov	x9, sp
  417bc0:	movk	x8, #0xff80, lsl #32
  417bc4:	sub	x10, x29, #0x50
  417bc8:	add	x9, x9, #0x80
  417bcc:	stp	x20, x19, [sp, #240]
  417bd0:	mov	w19, w0
  417bd4:	add	x11, x29, #0x30
  417bd8:	cmp	w1, #0x406
  417bdc:	add	x10, x10, #0x30
  417be0:	stp	x9, x8, [x29, #-16]
  417be4:	mov	x8, #0xffffffffffffffd0    	// #-48
  417be8:	stp	x22, x21, [sp, #224]
  417bec:	stp	x2, x3, [x29, #-80]
  417bf0:	stp	x4, x5, [x29, #-64]
  417bf4:	stp	x6, x7, [x29, #-48]
  417bf8:	stp	q1, q2, [sp, #16]
  417bfc:	stp	q3, q4, [sp, #48]
  417c00:	str	q0, [sp]
  417c04:	stp	q5, q6, [sp, #80]
  417c08:	str	q7, [sp, #112]
  417c0c:	stp	x11, x10, [x29, #-32]
  417c10:	b.ne	417c34 <ferror@plt+0x150e4>  // b.any
  417c14:	tbz	w8, #31, 417c54 <ferror@plt+0x15104>
  417c18:	add	w9, w8, #0x8
  417c1c:	cmn	w8, #0x8
  417c20:	stur	w9, [x29, #-8]
  417c24:	b.gt	417c54 <ferror@plt+0x15104>
  417c28:	ldur	x9, [x29, #-24]
  417c2c:	add	x8, x9, x8
  417c30:	b	417c60 <ferror@plt+0x15110>
  417c34:	tbz	w8, #31, 417cc0 <ferror@plt+0x15170>
  417c38:	add	w9, w8, #0x8
  417c3c:	cmn	w8, #0x8
  417c40:	stur	w9, [x29, #-8]
  417c44:	b.gt	417cc0 <ferror@plt+0x15170>
  417c48:	ldur	x9, [x29, #-24]
  417c4c:	add	x8, x9, x8
  417c50:	b	417ccc <ferror@plt+0x1517c>
  417c54:	ldur	x8, [x29, #-32]
  417c58:	add	x9, x8, #0x8
  417c5c:	stur	x9, [x29, #-32]
  417c60:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0xabc8>
  417c64:	ldr	w9, [x22, #3472]
  417c68:	ldr	w21, [x8]
  417c6c:	tbnz	w9, #31, 417cec <ferror@plt+0x1519c>
  417c70:	mov	w1, #0x406                 	// #1030
  417c74:	mov	w0, w19
  417c78:	mov	w2, w21
  417c7c:	bl	4029c0 <fcntl@plt>
  417c80:	mov	w20, w0
  417c84:	tbz	w0, #31, 417ce0 <ferror@plt+0x15190>
  417c88:	bl	402ac0 <__errno_location@plt>
  417c8c:	ldr	w8, [x0]
  417c90:	cmp	w8, #0x16
  417c94:	b.ne	417ce0 <ferror@plt+0x15190>  // b.any
  417c98:	mov	w0, w19
  417c9c:	mov	w1, wzr
  417ca0:	mov	w2, w21
  417ca4:	bl	417bac <ferror@plt+0x1505c>
  417ca8:	mov	w20, w0
  417cac:	tbnz	w0, #31, 417d58 <ferror@plt+0x15208>
  417cb0:	mov	w8, #0xffffffff            	// #-1
  417cb4:	str	w8, [x22, #3472]
  417cb8:	mov	w8, #0x1                   	// #1
  417cbc:	b	417d0c <ferror@plt+0x151bc>
  417cc0:	ldur	x8, [x29, #-32]
  417cc4:	add	x9, x8, #0x8
  417cc8:	stur	x9, [x29, #-32]
  417ccc:	ldr	x2, [x8]
  417cd0:	mov	w0, w19
  417cd4:	bl	4029c0 <fcntl@plt>
  417cd8:	mov	w20, w0
  417cdc:	b	417d58 <ferror@plt+0x15208>
  417ce0:	mov	w8, #0x1                   	// #1
  417ce4:	str	w8, [x22, #3472]
  417ce8:	b	417d58 <ferror@plt+0x15208>
  417cec:	mov	w0, w19
  417cf0:	mov	w1, wzr
  417cf4:	mov	w2, w21
  417cf8:	bl	417bac <ferror@plt+0x1505c>
  417cfc:	ldr	w8, [x22, #3472]
  417d00:	mov	w20, w0
  417d04:	cmn	w8, #0x1
  417d08:	cset	w8, eq  // eq = none
  417d0c:	tbnz	w20, #31, 417d58 <ferror@plt+0x15208>
  417d10:	cbz	w8, 417d58 <ferror@plt+0x15208>
  417d14:	mov	w1, #0x1                   	// #1
  417d18:	mov	w0, w20
  417d1c:	bl	4029c0 <fcntl@plt>
  417d20:	tbnz	w0, #31, 417d3c <ferror@plt+0x151ec>
  417d24:	orr	w2, w0, #0x1
  417d28:	mov	w1, #0x2                   	// #2
  417d2c:	mov	w0, w20
  417d30:	bl	4029c0 <fcntl@plt>
  417d34:	cmn	w0, #0x1
  417d38:	b.ne	417d58 <ferror@plt+0x15208>  // b.any
  417d3c:	bl	402ac0 <__errno_location@plt>
  417d40:	ldr	w21, [x0]
  417d44:	mov	x19, x0
  417d48:	mov	w0, w20
  417d4c:	bl	4027f0 <close@plt>
  417d50:	str	w21, [x19]
  417d54:	mov	w20, #0xffffffff            	// #-1
  417d58:	mov	w0, w20
  417d5c:	ldp	x20, x19, [sp, #240]
  417d60:	ldp	x22, x21, [sp, #224]
  417d64:	ldp	x29, x30, [sp, #208]
  417d68:	add	sp, sp, #0x100
  417d6c:	ret
  417d70:	stp	x29, x30, [sp, #-32]!
  417d74:	str	x19, [sp, #16]
  417d78:	mov	x19, x0
  417d7c:	mov	x29, sp
  417d80:	cbz	x0, 417da8 <ferror@plt+0x15258>
  417d84:	mov	x0, x19
  417d88:	bl	402a60 <__freading@plt>
  417d8c:	cbz	w0, 417da8 <ferror@plt+0x15258>
  417d90:	ldrb	w8, [x19, #1]
  417d94:	tbz	w8, #0, 417da8 <ferror@plt+0x15258>
  417d98:	mov	w2, #0x1                   	// #1
  417d9c:	mov	x0, x19
  417da0:	mov	x1, xzr
  417da4:	bl	417df8 <ferror@plt+0x152a8>
  417da8:	mov	x0, x19
  417dac:	ldr	x19, [sp, #16]
  417db0:	ldp	x29, x30, [sp], #32
  417db4:	b	4029d0 <fflush@plt>
  417db8:	ldp	x9, x8, [x0, #32]
  417dbc:	cmp	x8, x9
  417dc0:	b.ls	417dcc <ferror@plt+0x1527c>  // b.plast
  417dc4:	mov	x0, xzr
  417dc8:	ret
  417dcc:	ldp	x9, x8, [x0, #8]
  417dd0:	ldrb	w10, [x0, #1]
  417dd4:	sub	x8, x8, x9
  417dd8:	tbnz	w10, #0, 417de4 <ferror@plt+0x15294>
  417ddc:	add	x0, x8, xzr
  417de0:	ret
  417de4:	ldr	x9, [x0, #88]
  417de8:	ldr	x10, [x0, #72]
  417dec:	sub	x9, x9, x10
  417df0:	add	x0, x8, x9
  417df4:	ret
  417df8:	stp	x29, x30, [sp, #-48]!
  417dfc:	str	x21, [sp, #16]
  417e00:	stp	x20, x19, [sp, #32]
  417e04:	ldp	x9, x8, [x0, #8]
  417e08:	mov	w20, w2
  417e0c:	mov	x19, x0
  417e10:	mov	x21, x1
  417e14:	cmp	x8, x9
  417e18:	mov	x29, sp
  417e1c:	b.ne	417e34 <ferror@plt+0x152e4>  // b.any
  417e20:	ldp	x9, x8, [x19, #32]
  417e24:	cmp	x8, x9
  417e28:	b.ne	417e34 <ferror@plt+0x152e4>  // b.any
  417e2c:	ldr	x8, [x19, #72]
  417e30:	cbz	x8, 417e50 <ferror@plt+0x15300>
  417e34:	mov	x0, x19
  417e38:	mov	x1, x21
  417e3c:	mov	w2, w20
  417e40:	ldp	x20, x19, [sp, #32]
  417e44:	ldr	x21, [sp, #16]
  417e48:	ldp	x29, x30, [sp], #48
  417e4c:	b	402910 <fseeko@plt>
  417e50:	mov	x0, x19
  417e54:	bl	402630 <fileno@plt>
  417e58:	mov	x1, x21
  417e5c:	mov	w2, w20
  417e60:	bl	402610 <lseek@plt>
  417e64:	cmn	x0, #0x1
  417e68:	b.eq	417e84 <ferror@plt+0x15334>  // b.none
  417e6c:	ldr	w9, [x19]
  417e70:	mov	x8, x0
  417e74:	mov	w0, wzr
  417e78:	str	x8, [x19, #144]
  417e7c:	and	w9, w9, #0xffffffef
  417e80:	str	w9, [x19]
  417e84:	ldp	x20, x19, [sp, #32]
  417e88:	ldr	x21, [sp, #16]
  417e8c:	ldp	x29, x30, [sp], #48
  417e90:	ret
  417e94:	sub	sp, sp, #0x40
  417e98:	stp	x29, x30, [sp, #16]
  417e9c:	add	x29, sp, #0x10
  417ea0:	cmp	x0, #0x0
  417ea4:	sub	x8, x29, #0x4
  417ea8:	stp	x20, x19, [sp, #48]
  417eac:	csel	x20, x8, x0, eq  // eq = none
  417eb0:	mov	x0, x20
  417eb4:	stp	x22, x21, [sp, #32]
  417eb8:	mov	x22, x2
  417ebc:	mov	x19, x1
  417ec0:	bl	4024b0 <mbrtowc@plt>
  417ec4:	mov	x21, x0
  417ec8:	cbz	x22, 417eec <ferror@plt+0x1539c>
  417ecc:	cmn	x21, #0x2
  417ed0:	b.cc	417eec <ferror@plt+0x1539c>  // b.lo, b.ul, b.last
  417ed4:	mov	w0, wzr
  417ed8:	bl	418358 <_obstack_memory_used@@Base+0xec>
  417edc:	tbnz	w0, #0, 417eec <ferror@plt+0x1539c>
  417ee0:	ldrb	w8, [x19]
  417ee4:	mov	w21, #0x1                   	// #1
  417ee8:	str	w8, [x20]
  417eec:	mov	x0, x21
  417ef0:	ldp	x20, x19, [sp, #48]
  417ef4:	ldp	x22, x21, [sp, #32]
  417ef8:	ldp	x29, x30, [sp, #16]
  417efc:	add	sp, sp, #0x40
  417f00:	ret

0000000000417f04 <_obstack_begin@@Base>:
  417f04:	stp	x29, x30, [sp, #-48]!
  417f08:	stp	x20, x19, [sp, #32]
  417f0c:	ldrb	w8, [x0, #80]
  417f10:	cmp	x2, #0x0
  417f14:	mov	w9, #0x10                  	// #16
  417f18:	csel	x20, x9, x2, eq  // eq = none
  417f1c:	mov	w9, #0xfe0                 	// #4064
  417f20:	cmp	x1, #0x0
  417f24:	str	x21, [sp, #16]
  417f28:	mov	x19, x0
  417f2c:	str	x4, [x0, #64]
  417f30:	csel	x0, x9, x1, eq  // eq = none
  417f34:	and	w8, w8, #0xfe
  417f38:	sub	x21, x20, #0x1
  417f3c:	mov	x29, sp
  417f40:	strb	w8, [x19, #80]
  417f44:	str	x0, [x19]
  417f48:	stp	x21, x3, [x19, #48]
  417f4c:	blr	x3
  417f50:	str	x0, [x19, #8]
  417f54:	cbz	x0, 417fa0 <_obstack_begin@@Base+0x9c>
  417f58:	ldr	x10, [x19]
  417f5c:	add	x8, x0, x21
  417f60:	neg	x9, x20
  417f64:	add	x8, x8, #0x10
  417f68:	and	x8, x8, x9
  417f6c:	stp	x8, x8, [x19, #16]
  417f70:	add	x8, x0, x10
  417f74:	str	x8, [x0]
  417f78:	str	x8, [x19, #32]
  417f7c:	str	xzr, [x0, #8]
  417f80:	ldrb	w8, [x19, #80]
  417f84:	ldr	x21, [sp, #16]
  417f88:	mov	w0, #0x1                   	// #1
  417f8c:	and	w8, w8, #0xfffffff9
  417f90:	strb	w8, [x19, #80]
  417f94:	ldp	x20, x19, [sp, #32]
  417f98:	ldp	x29, x30, [sp], #48
  417f9c:	ret
  417fa0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  417fa4:	ldr	x8, [x8, #1008]
  417fa8:	blr	x8

0000000000417fac <_obstack_begin_1@@Base>:
  417fac:	stp	x29, x30, [sp, #-48]!
  417fb0:	stp	x20, x19, [sp, #32]
  417fb4:	ldrb	w8, [x0, #80]
  417fb8:	cmp	x2, #0x0
  417fbc:	mov	w9, #0x10                  	// #16
  417fc0:	csel	x20, x9, x2, eq  // eq = none
  417fc4:	mov	w9, #0xfe0                 	// #4064
  417fc8:	cmp	x1, #0x0
  417fcc:	str	x21, [sp, #16]
  417fd0:	csel	x1, x9, x1, eq  // eq = none
  417fd4:	orr	w8, w8, #0x1
  417fd8:	sub	x21, x20, #0x1
  417fdc:	mov	x19, x0
  417fe0:	stp	x4, x5, [x0, #64]
  417fe4:	strb	w8, [x0, #80]
  417fe8:	str	x1, [x0]
  417fec:	stp	x21, x3, [x0, #48]
  417ff0:	mov	x0, x5
  417ff4:	mov	x29, sp
  417ff8:	blr	x3
  417ffc:	str	x0, [x19, #8]
  418000:	cbz	x0, 41804c <_obstack_begin_1@@Base+0xa0>
  418004:	ldr	x10, [x19]
  418008:	add	x8, x0, x21
  41800c:	neg	x9, x20
  418010:	add	x8, x8, #0x10
  418014:	and	x8, x8, x9
  418018:	stp	x8, x8, [x19, #16]
  41801c:	add	x8, x0, x10
  418020:	str	x8, [x0]
  418024:	str	x8, [x19, #32]
  418028:	str	xzr, [x0, #8]
  41802c:	ldrb	w8, [x19, #80]
  418030:	ldr	x21, [sp, #16]
  418034:	mov	w0, #0x1                   	// #1
  418038:	and	w8, w8, #0xfffffff9
  41803c:	strb	w8, [x19, #80]
  418040:	ldp	x20, x19, [sp, #32]
  418044:	ldp	x29, x30, [sp], #48
  418048:	ret
  41804c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  418050:	ldr	x8, [x8, #1008]
  418054:	blr	x8

0000000000418058 <_obstack_newchunk@@Base>:
  418058:	stp	x29, x30, [sp, #-64]!
  41805c:	str	x23, [sp, #16]
  418060:	stp	x22, x21, [sp, #32]
  418064:	stp	x20, x19, [sp, #48]
  418068:	ldp	x9, x8, [x0, #16]
  41806c:	ldr	x10, [x0, #48]
  418070:	ldr	x11, [x0]
  418074:	mov	x29, sp
  418078:	sub	x20, x8, x9
  41807c:	adds	x8, x20, x1
  418080:	lsr	x9, x20, #3
  418084:	cset	w12, cs  // cs = hs, nlast
  418088:	adds	x10, x8, x10
  41808c:	add	x9, x9, #0x64
  418090:	cset	w8, cs  // cs = hs, nlast
  418094:	adds	x9, x9, x10
  418098:	csel	x9, x10, x9, cs  // cs = hs, nlast
  41809c:	cmp	x9, x11
  4180a0:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4180a4:	tbnz	w12, #0, 418190 <_obstack_newchunk@@Base+0x138>
  4180a8:	tbnz	w8, #0, 418190 <_obstack_newchunk@@Base+0x138>
  4180ac:	ldrb	w8, [x0, #80]
  4180b0:	ldr	x21, [x0, #8]
  4180b4:	mov	x19, x0
  4180b8:	tbnz	w8, #0, 4180cc <_obstack_newchunk@@Base+0x74>
  4180bc:	ldr	x8, [x19, #56]
  4180c0:	mov	x0, x23
  4180c4:	blr	x8
  4180c8:	b	4180dc <_obstack_newchunk@@Base+0x84>
  4180cc:	ldr	x8, [x19, #56]
  4180d0:	ldr	x0, [x19, #72]
  4180d4:	mov	x1, x23
  4180d8:	blr	x8
  4180dc:	mov	x22, x0
  4180e0:	cbz	x0, 418190 <_obstack_newchunk@@Base+0x138>
  4180e4:	add	x8, x22, x23
  4180e8:	str	x22, [x19, #8]
  4180ec:	str	x21, [x22, #8]
  4180f0:	str	x8, [x19, #32]
  4180f4:	str	x8, [x22]
  4180f8:	ldr	x8, [x19, #48]
  4180fc:	ldr	x1, [x19, #16]
  418100:	mov	x2, x20
  418104:	add	x9, x22, x8
  418108:	add	x9, x9, #0x10
  41810c:	bic	x23, x9, x8
  418110:	mov	x0, x23
  418114:	bl	4024c0 <memcpy@plt>
  418118:	ldrb	w8, [x19, #80]
  41811c:	tbnz	w8, #1, 418168 <_obstack_newchunk@@Base+0x110>
  418120:	ldr	x8, [x19, #48]
  418124:	ldr	x9, [x19, #16]
  418128:	add	x10, x21, x8
  41812c:	add	x10, x10, #0x10
  418130:	bic	x8, x10, x8
  418134:	cmp	x9, x8
  418138:	b.ne	418168 <_obstack_newchunk@@Base+0x110>  // b.any
  41813c:	ldr	x8, [x21, #8]
  418140:	str	x8, [x22, #8]
  418144:	ldrb	w8, [x19, #80]
  418148:	tbnz	w8, #0, 41815c <_obstack_newchunk@@Base+0x104>
  41814c:	ldr	x8, [x19, #64]
  418150:	mov	x0, x21
  418154:	blr	x8
  418158:	b	418168 <_obstack_newchunk@@Base+0x110>
  41815c:	ldp	x8, x0, [x19, #64]
  418160:	mov	x1, x21
  418164:	blr	x8
  418168:	ldrb	w8, [x19, #80]
  41816c:	add	x9, x23, x20
  418170:	stp	x23, x9, [x19, #16]
  418174:	ldr	x23, [sp, #16]
  418178:	and	w8, w8, #0xfffffffd
  41817c:	strb	w8, [x19, #80]
  418180:	ldp	x20, x19, [sp, #48]
  418184:	ldp	x22, x21, [sp, #32]
  418188:	ldp	x29, x30, [sp], #64
  41818c:	ret
  418190:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  418194:	ldr	x8, [x8, #1008]
  418198:	blr	x8

000000000041819c <_obstack_allocated_p@@Base>:
  41819c:	ldr	x8, [x0, #8]
  4181a0:	cbnz	x8, 4181b4 <_obstack_allocated_p@@Base+0x18>
  4181a4:	mov	w0, wzr
  4181a8:	ret
  4181ac:	ldr	x8, [x8, #8]
  4181b0:	cbz	x8, 4181a4 <_obstack_allocated_p@@Base+0x8>
  4181b4:	cmp	x8, x1
  4181b8:	b.cs	4181ac <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  4181bc:	ldr	x9, [x8]
  4181c0:	cmp	x9, x1
  4181c4:	b.cc	4181ac <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  4181c8:	mov	w0, #0x1                   	// #1
  4181cc:	ret

00000000004181d0 <_obstack_free@@Base>:
  4181d0:	stp	x29, x30, [sp, #-48]!
  4181d4:	stp	x20, x19, [sp, #32]
  4181d8:	ldr	x8, [x0, #8]
  4181dc:	mov	x20, x1
  4181e0:	str	x21, [sp, #16]
  4181e4:	mov	x29, sp
  4181e8:	cbz	x8, 418244 <_obstack_free@@Base+0x74>
  4181ec:	mov	x19, x0
  4181f0:	b	418214 <_obstack_free@@Base+0x44>
  4181f4:	ldr	x9, [x19, #64]
  4181f8:	mov	x0, x8
  4181fc:	blr	x9
  418200:	ldrb	w8, [x19, #80]
  418204:	orr	w8, w8, #0x2
  418208:	strb	w8, [x19, #80]
  41820c:	mov	x8, x21
  418210:	cbz	x21, 418244 <_obstack_free@@Base+0x74>
  418214:	cmp	x8, x20
  418218:	b.cs	418228 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  41821c:	ldr	x9, [x8]
  418220:	cmp	x9, x20
  418224:	b.cs	41824c <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  418228:	ldrb	w9, [x19, #80]
  41822c:	ldr	x21, [x8, #8]
  418230:	tbz	w9, #0, 4181f4 <_obstack_free@@Base+0x24>
  418234:	ldp	x9, x0, [x19, #64]
  418238:	mov	x1, x8
  41823c:	blr	x9
  418240:	b	418200 <_obstack_free@@Base+0x30>
  418244:	cbz	x20, 41825c <_obstack_free@@Base+0x8c>
  418248:	bl	402860 <abort@plt>
  41824c:	stp	x20, x20, [x19, #16]
  418250:	ldr	x9, [x8]
  418254:	str	x8, [x19, #8]
  418258:	str	x9, [x19, #32]
  41825c:	ldp	x20, x19, [sp, #32]
  418260:	ldr	x21, [sp, #16]
  418264:	ldp	x29, x30, [sp], #48
  418268:	ret

000000000041826c <_obstack_memory_used@@Base>:
  41826c:	ldr	x8, [x0, #8]
  418270:	cbz	x8, 41828c <_obstack_memory_used@@Base+0x20>
  418274:	mov	x0, xzr
  418278:	sub	x10, x0, x8
  41827c:	ldp	x9, x8, [x8]
  418280:	add	x0, x10, x9
  418284:	cbnz	x8, 418278 <_obstack_memory_used@@Base+0xc>
  418288:	ret
  41828c:	mov	x0, xzr
  418290:	ret
  418294:	stp	x29, x30, [sp, #-16]!
  418298:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  41829c:	ldr	x0, [x8, #1032]
  4182a0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4182a4:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4182a8:	add	x2, x2, #0x299
  4182ac:	add	x3, x3, #0x5d6
  4182b0:	mov	w1, #0x1                   	// #1
  4182b4:	mov	x29, sp
  4182b8:	bl	4028c0 <__fprintf_chk@plt>
  4182bc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x14d94>
  4182c0:	ldr	w0, [x8, #884]
  4182c4:	bl	402520 <exit@plt>
  4182c8:	sub	x0, x0, #0x1
  4182cc:	ldrb	w10, [x0, #1]!
  4182d0:	cmp	w10, #0x2f
  4182d4:	b.eq	4182cc <_obstack_memory_used@@Base+0x60>  // b.none
  4182d8:	mov	w8, wzr
  4182dc:	mov	x9, x0
  4182e0:	b	4182ec <_obstack_memory_used@@Base+0x80>
  4182e4:	ldrb	w10, [x9, #1]!
  4182e8:	mov	w8, #0x1                   	// #1
  4182ec:	and	w10, w10, #0xff
  4182f0:	cmp	w10, #0x2f
  4182f4:	b.eq	4182e4 <_obstack_memory_used@@Base+0x78>  // b.none
  4182f8:	cbz	w10, 418310 <_obstack_memory_used@@Base+0xa4>
  4182fc:	tst	w8, #0x1
  418300:	csel	x0, x9, x0, ne  // ne = any
  418304:	ldrb	w10, [x9, #1]!
  418308:	mov	w8, wzr
  41830c:	b	4182ec <_obstack_memory_used@@Base+0x80>
  418310:	ret
  418314:	stp	x29, x30, [sp, #-32]!
  418318:	str	x19, [sp, #16]
  41831c:	mov	x29, sp
  418320:	mov	x19, x0
  418324:	bl	4024f0 <strlen@plt>
  418328:	mov	x8, x0
  41832c:	sub	x9, x19, #0x1
  418330:	mov	x0, x8
  418334:	cmp	x8, #0x2
  418338:	b.cc	41834c <_obstack_memory_used@@Base+0xe0>  // b.lo, b.ul, b.last
  41833c:	ldrb	w8, [x9, x0]
  418340:	cmp	w8, #0x2f
  418344:	sub	x8, x0, #0x1
  418348:	b.eq	418330 <_obstack_memory_used@@Base+0xc4>  // b.none
  41834c:	ldr	x19, [sp, #16]
  418350:	ldp	x29, x30, [sp], #32
  418354:	ret
  418358:	stp	x29, x30, [sp, #-32]!
  41835c:	mov	x1, xzr
  418360:	str	x19, [sp, #16]
  418364:	mov	x29, sp
  418368:	bl	402b40 <setlocale@plt>
  41836c:	cbz	x0, 418398 <_obstack_memory_used@@Base+0x12c>
  418370:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  418374:	add	x1, x1, #0x607
  418378:	mov	x19, x0
  41837c:	bl	4028d0 <strcmp@plt>
  418380:	cbz	w0, 4183a0 <_obstack_memory_used@@Base+0x134>
  418384:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  418388:	add	x1, x1, #0x609
  41838c:	mov	x0, x19
  418390:	bl	4028d0 <strcmp@plt>
  418394:	cbz	w0, 4183a0 <_obstack_memory_used@@Base+0x134>
  418398:	mov	w0, #0x1                   	// #1
  41839c:	b	4183a4 <_obstack_memory_used@@Base+0x138>
  4183a0:	mov	w0, wzr
  4183a4:	ldr	x19, [sp, #16]
  4183a8:	ldp	x29, x30, [sp], #32
  4183ac:	ret
  4183b0:	sub	sp, sp, #0xd0
  4183b4:	mov	w0, #0xe                   	// #14
  4183b8:	stp	x29, x30, [sp, #112]
  4183bc:	stp	x28, x27, [sp, #128]
  4183c0:	stp	x26, x25, [sp, #144]
  4183c4:	stp	x24, x23, [sp, #160]
  4183c8:	stp	x22, x21, [sp, #176]
  4183cc:	stp	x20, x19, [sp, #192]
  4183d0:	add	x29, sp, #0x70
  4183d4:	bl	402680 <nl_langinfo@plt>
  4183d8:	adrp	x27, 438000 <__progname@@GLIBC_2.17+0xabc8>
  4183dc:	ldr	x21, [x27, #3480]
  4183e0:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4183e4:	add	x8, x8, #0x67f
  4183e8:	cmp	x0, #0x0
  4183ec:	csel	x19, x8, x0, eq  // eq = none
  4183f0:	cbnz	x21, 418644 <_obstack_memory_used@@Base+0x3d8>
  4183f4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4183f8:	add	x0, x0, #0x648
  4183fc:	bl	402ad0 <getenv@plt>
  418400:	cbz	x0, 418410 <_obstack_memory_used@@Base+0x1a4>
  418404:	ldrb	w8, [x0]
  418408:	mov	x21, x0
  41840c:	cbnz	w8, 418418 <_obstack_memory_used@@Base+0x1ac>
  418410:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x3d94>
  418414:	add	x21, x21, #0x658
  418418:	mov	x0, x21
  41841c:	bl	4024f0 <strlen@plt>
  418420:	mov	x22, x0
  418424:	cbz	x0, 41843c <_obstack_memory_used@@Base+0x1d0>
  418428:	add	x8, x22, x21
  41842c:	ldurb	w8, [x8, #-1]
  418430:	cmp	w8, #0x2f
  418434:	cset	w23, ne  // ne = any
  418438:	b	418440 <_obstack_memory_used@@Base+0x1d4>
  41843c:	mov	w23, wzr
  418440:	add	x8, x22, x23
  418444:	add	x0, x8, #0xe
  418448:	bl	4026a0 <malloc@plt>
  41844c:	cbz	x0, 4185f4 <_obstack_memory_used@@Base+0x388>
  418450:	mov	x1, x21
  418454:	mov	x2, x22
  418458:	mov	x20, x0
  41845c:	bl	4024c0 <memcpy@plt>
  418460:	cbz	x23, 41846c <_obstack_memory_used@@Base+0x200>
  418464:	mov	w8, #0x2f                  	// #47
  418468:	strb	w8, [x20, x22]
  41846c:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x3d94>
  418470:	add	x8, x8, #0x63a
  418474:	ldur	x9, [x8, #6]
  418478:	ldr	x8, [x8]
  41847c:	add	x10, x20, x22
  418480:	add	x10, x10, x23
  418484:	mov	w1, #0x8000                	// #32768
  418488:	mov	x0, x20
  41848c:	stur	x9, [x10, #6]
  418490:	str	x8, [x10]
  418494:	bl	4026b0 <open@plt>
  418498:	tbnz	w0, #31, 418630 <_obstack_memory_used@@Base+0x3c4>
  41849c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4184a0:	add	x1, x1, #0xacc
  4184a4:	mov	w21, w0
  4184a8:	bl	402750 <fdopen@plt>
  4184ac:	cbz	x0, 418600 <_obstack_memory_used@@Base+0x394>
  4184b0:	mov	x22, x0
  4184b4:	mov	x23, xzr
  4184b8:	mov	x21, xzr
  4184bc:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4184c0:	add	x24, x24, #0x60f
  4184c4:	ldp	x8, x9, [x22, #8]
  4184c8:	cmp	x8, x9
  4184cc:	b.cs	418538 <_obstack_memory_used@@Base+0x2cc>  // b.hs, b.nlast
  4184d0:	add	x9, x8, #0x1
  4184d4:	str	x9, [x22, #8]
  4184d8:	ldrb	w0, [x8]
  4184dc:	add	w8, w0, #0x1
  4184e0:	cmp	w8, #0x24
  4184e4:	b.hi	418544 <_obstack_memory_used@@Base+0x2d8>  // b.pmore
  4184e8:	adr	x9, 4184c4 <_obstack_memory_used@@Base+0x258>
  4184ec:	ldrb	w10, [x24, x8]
  4184f0:	add	x9, x9, x10, lsl #2
  4184f4:	br	x9
  4184f8:	mov	x0, x22
  4184fc:	bl	402b30 <__uflow@plt>
  418500:	cmn	w0, #0x1
  418504:	b.ne	41852c <_obstack_memory_used@@Base+0x2c0>  // b.any
  418508:	b	41861c <_obstack_memory_used@@Base+0x3b0>
  41850c:	ldp	x8, x9, [x22, #8]
  418510:	cmp	x8, x9
  418514:	b.cs	4184f8 <_obstack_memory_used@@Base+0x28c>  // b.hs, b.nlast
  418518:	add	x9, x8, #0x1
  41851c:	str	x9, [x22, #8]
  418520:	ldrb	w0, [x8]
  418524:	cmn	w0, #0x1
  418528:	b.eq	41861c <_obstack_memory_used@@Base+0x3b0>  // b.none
  41852c:	cmp	w0, #0xa
  418530:	b.ne	41850c <_obstack_memory_used@@Base+0x2a0>  // b.any
  418534:	b	4184c4 <_obstack_memory_used@@Base+0x258>
  418538:	mov	x0, x22
  41853c:	bl	402b30 <__uflow@plt>
  418540:	b	4184dc <_obstack_memory_used@@Base+0x270>
  418544:	mov	x1, x22
  418548:	bl	402940 <ungetc@plt>
  41854c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x3d94>
  418550:	sub	x2, x29, #0x34
  418554:	add	x3, sp, #0x8
  418558:	mov	x0, x22
  41855c:	add	x1, x1, #0x661
  418560:	bl	4026d0 <__isoc99_fscanf@plt>
  418564:	cmp	w0, #0x2
  418568:	b.lt	41861c <_obstack_memory_used@@Base+0x3b0>  // b.tstop
  41856c:	sub	x0, x29, #0x34
  418570:	bl	4024f0 <strlen@plt>
  418574:	mov	x24, x0
  418578:	add	x0, sp, #0x8
  41857c:	bl	4024f0 <strlen@plt>
  418580:	add	x8, x24, x0
  418584:	mov	x25, x0
  418588:	add	x28, x8, #0x2
  41858c:	cbz	x23, 4185ac <_obstack_memory_used@@Base+0x340>
  418590:	add	x23, x28, x23
  418594:	add	x1, x23, #0x1
  418598:	mov	x0, x21
  41859c:	bl	4027b0 <realloc@plt>
  4185a0:	mov	x26, x0
  4185a4:	cbnz	x26, 4185c4 <_obstack_memory_used@@Base+0x358>
  4185a8:	b	41860c <_obstack_memory_used@@Base+0x3a0>
  4185ac:	add	x8, x8, #0x1
  4185b0:	add	x0, x8, #0x2
  4185b4:	bl	4026a0 <malloc@plt>
  4185b8:	mov	x26, x0
  4185bc:	mov	x23, x28
  4185c0:	cbz	x26, 41860c <_obstack_memory_used@@Base+0x3a0>
  4185c4:	add	x8, x26, x23
  4185c8:	mvn	x9, x25
  4185cc:	add	x21, x8, x9
  4185d0:	mvn	x8, x24
  4185d4:	add	x0, x21, x8
  4185d8:	sub	x1, x29, #0x34
  4185dc:	bl	4029e0 <strcpy@plt>
  4185e0:	add	x1, sp, #0x8
  4185e4:	mov	x0, x21
  4185e8:	bl	4029e0 <strcpy@plt>
  4185ec:	mov	x21, x26
  4185f0:	b	4184bc <_obstack_memory_used@@Base+0x250>
  4185f4:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  4185f8:	add	x21, x21, #0x67f
  4185fc:	b	418640 <_obstack_memory_used@@Base+0x3d4>
  418600:	mov	w0, w21
  418604:	bl	4027f0 <close@plt>
  418608:	b	418630 <_obstack_memory_used@@Base+0x3c4>
  41860c:	mov	x0, x21
  418610:	bl	402930 <free@plt>
  418614:	mov	x23, xzr
  418618:	mov	x21, xzr
  41861c:	mov	x0, x22
  418620:	bl	417b18 <ferror@plt+0x14fc8>
  418624:	cbz	x23, 418630 <_obstack_memory_used@@Base+0x3c4>
  418628:	strb	wzr, [x21, x23]
  41862c:	b	418638 <_obstack_memory_used@@Base+0x3cc>
  418630:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x1d94>
  418634:	add	x21, x21, #0x67f
  418638:	mov	x0, x20
  41863c:	bl	402930 <free@plt>
  418640:	str	x21, [x27, #3480]
  418644:	ldrb	w20, [x21]
  418648:	cbnz	w20, 418674 <_obstack_memory_used@@Base+0x408>
  41864c:	b	4186a8 <_obstack_memory_used@@Base+0x43c>
  418650:	mov	x0, x21
  418654:	bl	4024f0 <strlen@plt>
  418658:	add	x8, x0, x21
  41865c:	add	x20, x8, #0x1
  418660:	mov	x0, x20
  418664:	bl	4024f0 <strlen@plt>
  418668:	add	x21, x0, x20
  41866c:	ldrb	w20, [x21, #1]!
  418670:	cbz	w20, 4186a8 <_obstack_memory_used@@Base+0x43c>
  418674:	mov	x0, x19
  418678:	mov	x1, x21
  41867c:	bl	4028d0 <strcmp@plt>
  418680:	cbz	w0, 418698 <_obstack_memory_used@@Base+0x42c>
  418684:	and	w8, w20, #0xff
  418688:	cmp	w8, #0x2a
  41868c:	b.ne	418650 <_obstack_memory_used@@Base+0x3e4>  // b.any
  418690:	ldrb	w8, [x21, #1]
  418694:	cbnz	w8, 418650 <_obstack_memory_used@@Base+0x3e4>
  418698:	mov	x0, x21
  41869c:	bl	4024f0 <strlen@plt>
  4186a0:	add	x8, x21, x0
  4186a4:	add	x19, x8, #0x1
  4186a8:	ldrb	w8, [x19]
  4186ac:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x3d94>
  4186b0:	add	x9, x9, #0x634
  4186b4:	ldp	x22, x21, [sp, #176]
  4186b8:	cmp	w8, #0x0
  4186bc:	csel	x0, x9, x19, eq  // eq = none
  4186c0:	ldp	x20, x19, [sp, #192]
  4186c4:	ldp	x24, x23, [sp, #160]
  4186c8:	ldp	x26, x25, [sp, #144]
  4186cc:	ldp	x28, x27, [sp, #128]
  4186d0:	ldp	x29, x30, [sp, #112]
  4186d4:	add	sp, sp, #0xd0
  4186d8:	ret
  4186dc:	stp	x29, x30, [sp, #-64]!
  4186e0:	str	x23, [sp, #16]
  4186e4:	stp	x22, x21, [sp, #32]
  4186e8:	stp	x20, x19, [sp, #48]
  4186ec:	mov	x29, sp
  4186f0:	umulh	x8, x2, x0
  4186f4:	eor	x9, x1, #0x8000000000000000
  4186f8:	madd	x8, x2, x1, x8
  4186fc:	mov	x19, x4
  418700:	orr	x9, x0, x9
  418704:	madd	x20, x3, x0, x8
  418708:	mul	x21, x2, x0
  41870c:	str	wzr, [x4]
  418710:	cbnz	x9, 418724 <_obstack_memory_used@@Base+0x4b8>
  418714:	cmp	x2, #0x2
  418718:	cset	w8, cc  // cc = lo, ul, last
  41871c:	cmp	x3, #0x0
  418720:	b	41873c <_obstack_memory_used@@Base+0x4d0>
  418724:	eor	x8, x3, #0x8000000000000000
  418728:	orr	x8, x2, x8
  41872c:	cbnz	x8, 418768 <_obstack_memory_used@@Base+0x4fc>
  418730:	cmp	x0, #0x2
  418734:	cset	w8, cc  // cc = lo, ul, last
  418738:	cmp	x1, #0x0
  41873c:	csel	w8, w8, wzr, eq  // eq = none
  418740:	tbnz	w8, #0, 41874c <_obstack_memory_used@@Base+0x4e0>
  418744:	mov	w8, #0x1                   	// #1
  418748:	str	w8, [x19]
  41874c:	mov	x0, x21
  418750:	mov	x1, x20
  418754:	ldp	x20, x19, [sp, #48]
  418758:	ldp	x22, x21, [sp, #32]
  41875c:	ldr	x23, [sp, #16]
  418760:	ldp	x29, x30, [sp], #64
  418764:	ret
  418768:	asr	x8, x1, #63
  41876c:	eor	x11, x8, x0
  418770:	asr	x9, x3, #63
  418774:	eor	x10, x8, x1
  418778:	subs	x23, x11, x8
  41877c:	eor	x13, x9, x2
  418780:	sbcs	x22, x10, x8
  418784:	eor	x12, x9, x3
  418788:	subs	x2, x13, x9
  41878c:	sbcs	x3, x12, x9
  418790:	cmp	x23, #0x2
  418794:	cset	w10, cc  // cc = lo, ul, last
  418798:	cmp	x22, #0x0
  41879c:	cset	w11, lt  // lt = tstop
  4187a0:	csel	w10, w10, w11, eq  // eq = none
  4187a4:	tbnz	w10, #0, 41874c <_obstack_memory_used@@Base+0x4e0>
  4187a8:	cmp	x2, #0x2
  4187ac:	cset	w10, cc  // cc = lo, ul, last
  4187b0:	cmp	x3, #0x0
  4187b4:	cset	w11, lt  // lt = tstop
  4187b8:	csel	w10, w10, w11, eq  // eq = none
  4187bc:	tbnz	w10, #0, 41874c <_obstack_memory_used@@Base+0x4e0>
  4187c0:	eor	x8, x8, x9
  4187c4:	orr	x8, x8, x8
  4187c8:	cbnz	x8, 4187dc <_obstack_memory_used@@Base+0x570>
  4187cc:	mov	x0, #0xffffffffffffffff    	// #-1
  4187d0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4187d4:	bl	41880c <_obstack_memory_used@@Base+0x5a0>
  4187d8:	b	4187f0 <_obstack_memory_used@@Base+0x584>
  4187dc:	negs	x2, x2
  4187e0:	ngcs	x3, x3
  4187e4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  4187e8:	mov	x0, xzr
  4187ec:	bl	418814 <_obstack_memory_used@@Base+0x5a8>
  4187f0:	cmp	x23, x0
  4187f4:	cset	w8, ls  // ls = plast
  4187f8:	cmp	x22, x1
  4187fc:	cset	w9, le
  418800:	csel	w8, w8, w9, eq  // eq = none
  418804:	tbz	w8, #0, 418744 <_obstack_memory_used@@Base+0x4d8>
  418808:	b	41874c <_obstack_memory_used@@Base+0x4e0>
  41880c:	mov	x4, xzr
  418810:	b	418870 <_obstack_memory_used@@Base+0x604>
  418814:	stp	x29, x30, [sp, #-32]!
  418818:	str	x19, [sp, #16]
  41881c:	mov	x29, sp
  418820:	asr	x8, x1, #63
  418824:	eor	x11, x8, x0
  418828:	asr	x9, x3, #63
  41882c:	eor	x10, x8, x1
  418830:	subs	x0, x11, x8
  418834:	eor	x13, x9, x2
  418838:	sbcs	x1, x10, x8
  41883c:	eor	x12, x9, x3
  418840:	subs	x2, x13, x9
  418844:	sbcs	x3, x12, x9
  418848:	mov	x4, xzr
  41884c:	eor	x19, x9, x8
  418850:	bl	418870 <_obstack_memory_used@@Base+0x604>
  418854:	eor	x9, x0, x19
  418858:	eor	x8, x1, x19
  41885c:	subs	x0, x9, x19
  418860:	sbcs	x1, x8, x19
  418864:	ldr	x19, [sp, #16]
  418868:	ldp	x29, x30, [sp], #32
  41886c:	ret
  418870:	cbz	x1, 41889c <_obstack_memory_used@@Base+0x630>
  418874:	cbz	x2, 4188b4 <_obstack_memory_used@@Base+0x648>
  418878:	cbz	x3, 4188e8 <_obstack_memory_used@@Base+0x67c>
  41887c:	clz	x8, x3
  418880:	clz	x9, x1
  418884:	sub	w11, w8, w9
  418888:	cmp	w11, #0x40
  41888c:	b.cc	418944 <_obstack_memory_used@@Base+0x6d8>  // b.lo, b.ul, b.last
  418890:	cbz	x4, 418a58 <_obstack_memory_used@@Base+0x7ec>
  418894:	stp	x0, x1, [x4]
  418898:	b	418a58 <_obstack_memory_used@@Base+0x7ec>
  41889c:	cbz	x3, 418928 <_obstack_memory_used@@Base+0x6bc>
  4188a0:	cbz	x4, 418a58 <_obstack_memory_used@@Base+0x7ec>
  4188a4:	mov	x1, xzr
  4188a8:	stp	x0, xzr, [x4]
  4188ac:	mov	x0, xzr
  4188b0:	ret
  4188b4:	cbz	x3, 418974 <_obstack_memory_used@@Base+0x708>
  4188b8:	cbz	x0, 418a28 <_obstack_memory_used@@Base+0x7bc>
  4188bc:	sub	x8, x3, #0x1
  4188c0:	tst	x3, x8
  4188c4:	b.ne	418a40 <_obstack_memory_used@@Base+0x7d4>  // b.any
  4188c8:	cbz	x4, 4188d4 <_obstack_memory_used@@Base+0x668>
  4188cc:	and	x8, x8, x1
  4188d0:	stp	x0, x8, [x4]
  4188d4:	rbit	x8, x3
  4188d8:	clz	x8, x8
  4188dc:	lsr	x0, x1, x8
  4188e0:	mov	x1, xzr
  4188e4:	ret
  4188e8:	sub	x8, x2, #0x1
  4188ec:	tst	x2, x8
  4188f0:	b.ne	418988 <_obstack_memory_used@@Base+0x71c>  // b.any
  4188f4:	cbz	x4, 418900 <_obstack_memory_used@@Base+0x694>
  4188f8:	and	x8, x8, x0
  4188fc:	stp	x8, xzr, [x4]
  418900:	cmp	x2, #0x1
  418904:	b.eq	418a24 <_obstack_memory_used@@Base+0x7b8>  // b.none
  418908:	rbit	x8, x2
  41890c:	clz	x8, x8
  418910:	neg	x9, x8
  418914:	lsl	x9, x1, x9
  418918:	lsr	x1, x1, x8
  41891c:	lsr	x8, x0, x8
  418920:	orr	x0, x9, x8
  418924:	ret
  418928:	udiv	x8, x0, x2
  41892c:	cbz	x4, 418938 <_obstack_memory_used@@Base+0x6cc>
  418930:	msub	x9, x8, x2, x0
  418934:	stp	x9, xzr, [x4]
  418938:	mov	x1, xzr
  41893c:	mov	x0, x8
  418940:	ret
  418944:	add	w8, w11, #0x1
  418948:	cmp	w8, #0x40
  41894c:	b.eq	4189a0 <_obstack_memory_used@@Base+0x734>  // b.none
  418950:	mov	w12, #0x3f                  	// #63
  418954:	sub	w11, w12, w11
  418958:	lsr	x13, x0, x8
  41895c:	lsl	x12, x1, x11
  418960:	mov	x10, xzr
  418964:	lsr	x9, x1, x8
  418968:	orr	x1, x12, x13
  41896c:	lsl	x0, x0, x11
  418970:	b	4189ac <_obstack_memory_used@@Base+0x740>
  418974:	cbz	x4, 418a58 <_obstack_memory_used@@Base+0x7ec>
  418978:	mov	x0, xzr
  41897c:	mov	x1, xzr
  418980:	stp	xzr, xzr, [x4]
  418984:	ret
  418988:	clz	x8, x2
  41898c:	clz	x9, x1
  418990:	sub	w8, w8, w9
  418994:	add	w8, w8, #0x41
  418998:	cmp	w8, #0x40
  41899c:	b.ne	418a64 <_obstack_memory_used@@Base+0x7f8>  // b.any
  4189a0:	mov	x9, xzr
  4189a4:	mov	x10, xzr
  4189a8:	mov	w8, #0x40                  	// #64
  4189ac:	mov	w12, wzr
  4189b0:	mov	x11, x0
  4189b4:	extr	x13, x1, x11, #63
  4189b8:	extr	x9, x9, x1, #63
  4189bc:	mov	w12, w12
  4189c0:	mvn	x14, x13
  4189c4:	extr	x11, x11, x10, #63
  4189c8:	orr	x10, x12, x10, lsl #1
  4189cc:	mvn	x12, x9
  4189d0:	cmn	x14, x2
  4189d4:	adcs	x12, x12, x3
  4189d8:	asr	x12, x12, #63
  4189dc:	and	x15, x12, x2
  4189e0:	and	x14, x12, x3
  4189e4:	subs	x1, x13, x15
  4189e8:	sbcs	x9, x9, x14
  4189ec:	subs	w8, w8, #0x1
  4189f0:	and	w12, w12, #0x1
  4189f4:	b.ne	4189b4 <_obstack_memory_used@@Base+0x748>  // b.any
  4189f8:	mov	x8, xzr
  4189fc:	lsr	x13, x10, #63
  418a00:	lsl	x10, x10, #1
  418a04:	lsl	x11, x11, #1
  418a08:	and	x13, x13, #0x1
  418a0c:	cbz	x4, 418a14 <_obstack_memory_used@@Base+0x7a8>
  418a10:	stp	x1, x9, [x4]
  418a14:	and	x9, x10, #0xfffffffffffffffe
  418a18:	orr	x10, x13, x11
  418a1c:	orr	x0, x9, x12
  418a20:	orr	x1, x10, x8
  418a24:	ret
  418a28:	udiv	x0, x1, x3
  418a2c:	cbz	x4, 418a38 <_obstack_memory_used@@Base+0x7cc>
  418a30:	msub	x8, x0, x3, x1
  418a34:	stp	xzr, x8, [x4]
  418a38:	mov	x1, xzr
  418a3c:	ret
  418a40:	clz	x8, x3
  418a44:	clz	x9, x1
  418a48:	sub	w9, w8, w9
  418a4c:	cmp	w9, #0x3f
  418a50:	b.cc	418a90 <_obstack_memory_used@@Base+0x824>  // b.lo, b.ul, b.last
  418a54:	cbnz	x4, 418894 <_obstack_memory_used@@Base+0x628>
  418a58:	mov	x0, xzr
  418a5c:	mov	x1, xzr
  418a60:	ret
  418a64:	b.cs	418ab8 <_obstack_memory_used@@Base+0x84c>  // b.hs, b.nlast
  418a68:	neg	w10, w8
  418a6c:	lsl	x11, x0, x10
  418a70:	lsl	x10, x1, x10
  418a74:	lsr	x12, x0, x8
  418a78:	lsr	x9, x1, x8
  418a7c:	orr	x1, x10, x12
  418a80:	mov	x10, xzr
  418a84:	cbz	w8, 418ad8 <_obstack_memory_used@@Base+0x86c>
  418a88:	mov	x0, x11
  418a8c:	b	4189ac <_obstack_memory_used@@Base+0x740>
  418a90:	mov	w11, #0x3f                  	// #63
  418a94:	add	w8, w9, #0x1
  418a98:	sub	w11, w11, w9
  418a9c:	lsr	x12, x0, x8
  418aa0:	lsl	x0, x0, x11
  418aa4:	lsl	x11, x1, x11
  418aa8:	mov	x10, xzr
  418aac:	lsr	x9, x1, x8
  418ab0:	orr	x1, x11, x12
  418ab4:	b	4189ac <_obstack_memory_used@@Base+0x740>
  418ab8:	neg	w11, w8
  418abc:	lsr	x12, x0, x8
  418ac0:	lsl	x10, x0, x11
  418ac4:	lsl	x11, x1, x11
  418ac8:	mov	x9, xzr
  418acc:	orr	x0, x11, x12
  418ad0:	lsr	x1, x1, x8
  418ad4:	b	4189ac <_obstack_memory_used@@Base+0x740>
  418ad8:	mov	x13, xzr
  418adc:	mov	x12, xzr
  418ae0:	mov	x8, xzr
  418ae4:	b	418a04 <_obstack_memory_used@@Base+0x798>
  418ae8:	stp	x29, x30, [sp, #-64]!
  418aec:	mov	x29, sp
  418af0:	stp	x19, x20, [sp, #16]
  418af4:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x13d94>
  418af8:	add	x20, x20, #0xdd8
  418afc:	stp	x21, x22, [sp, #32]
  418b00:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x13d94>
  418b04:	add	x21, x21, #0xdd0
  418b08:	sub	x20, x20, x21
  418b0c:	mov	w22, w0
  418b10:	stp	x23, x24, [sp, #48]
  418b14:	mov	x23, x1
  418b18:	mov	x24, x2
  418b1c:	bl	402470 <mbrtowc@plt-0x40>
  418b20:	cmp	xzr, x20, asr #3
  418b24:	b.eq	418b50 <_obstack_memory_used@@Base+0x8e4>  // b.none
  418b28:	asr	x20, x20, #3
  418b2c:	mov	x19, #0x0                   	// #0
  418b30:	ldr	x3, [x21, x19, lsl #3]
  418b34:	mov	x2, x24
  418b38:	add	x19, x19, #0x1
  418b3c:	mov	x1, x23
  418b40:	mov	w0, w22
  418b44:	blr	x3
  418b48:	cmp	x20, x19
  418b4c:	b.ne	418b30 <_obstack_memory_used@@Base+0x8c4>  // b.any
  418b50:	ldp	x19, x20, [sp, #16]
  418b54:	ldp	x21, x22, [sp, #32]
  418b58:	ldp	x23, x24, [sp, #48]
  418b5c:	ldp	x29, x30, [sp], #64
  418b60:	ret
  418b64:	nop
  418b68:	ret
  418b6c:	nop
  418b70:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x14d94>
  418b74:	mov	x1, #0x0                   	// #0
  418b78:	ldr	x2, [x2, #864]
  418b7c:	b	4025c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000418b80 <.fini>:
  418b80:	stp	x29, x30, [sp, #-16]!
  418b84:	mov	x29, sp
  418b88:	ldp	x29, x30, [sp], #16
  418b8c:	ret
